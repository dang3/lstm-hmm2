sbb
add
mov
xchg
fcoml
imulb
into
mov
aas
fcmovnu
mov
scas
push
mov
cs
mov
cld
mov
stc
mov
jo
lcall
xor
mov
sahf
jbe
jle
jp
cmc
adc
out
mov
adc
xor
icebp
sbb
out
insl
pop
mov
push
test
lcall
xchg
cli
popa
lret
loop
cmp
sbb
imul
test
dec
adc
mov
test
jecxz
shlb
mov
subb
cmp
push
or
outsl
pop
cwtl
movsl
jl
mov
push
and
addl
andb
mov
dec
jne
mov
push
cwtl
sub
mov
jl
hlt
xchg
dec
adc
xchg
cmpsl
test
xor
xchg
fildll
movsl
adc
icebp
sbb
ljmp
pop
push
mov
pop
bound
sbb
cmpsl
push
ja
sub
push
jle
inc
lds
xchg
cmpl
pop
fcmovne
mov
popa
outsb
jge
orb
inc
xchg
packsswb
sbb
repz
mov
ja
pop
pop
lock
icebp
call
jae
out
ja
test
test
inc
sbb
btc
mov
sahf
stos
orb
mov
mov
xor
fwait
out
gs
xor
cmp
adc
pushf
out
or
int
xchg
icebp
in
adc
and
pop
imul
push
add
cmpsl
xlat
sbb
outsb
adc
dec
or
pop
fnstcw
cmp
lret
lret
adc
sub
push
adc
insb
xchg
movsb
stc
inc
fldcw
inc
push
aas
inc
mov
mov
andl
add
mov
imul
adc
into
bsf
mov
loope
xchg
into
xchg
inc
sub
inc
sbb
mov
imul
push
cmp
pop
pop
out
mov
mov
aas
jg
data16
and
fisubrs
sub
out
cmc
sub
aaa
adc
shl
data16
insb
mov
fisttpl
insl
dec
mov
test
xor
mov
pop
dec
sbb
mov
es
xor
adc
sub
popf
mov
fcmove
adc
ret
movsl
dec
loop
cmpsl
jbe
sub
add
pop
sub
data16
and
sti
roll
stos
cmp
int
insl
repnz
lods
xchg
sub
repz
rcl
lods
mov
sub
repz
pop
scas
jb
mov
jns
xlat
sbb
enter
sahf
cwtl
fstpl
fimuls
lret
mul
pop
add
hlt
fcomps
inc
sbb
outsl
cmp
andl
pop
imul
and
cmpsb
pop
ret
cltd
cmp
stos
leave
imul
push
outsb
cmpsb
lods
sbb
dec
rorb
aas
push
jae
mov
or
out
dec
sti
pusha
xchg
jae
insb
xchg
mov
cmpsl
jne
xor
ds
jb
mov
dec
lods
mov
ss
bound
roll
dec
arpl
data16
dec
sbb
aam
loop
std
xchg
adcl
inc
jnp
jle
jae
xchg
leave
daa
subb
decl
and
clc
imul
cmp
mov
inc
push
in
or
arpl
mov
add
xor
xor
xchg
rclb
lcall
push
scas
mov
and
xor
test
fcoms
inc
in
lret
aaa
lods
cs
add
pop
loop
pop
sbb
ret
lret
sub
xchg
arpl
rolb
mov
scas
popa
movsl
xchg
add
not
stos
xchg
pop
adc
jg
jne
mov
push
sbb
or
arpl
dec
push
pop
sub
mov
dec
clc
sahf
pop
imul
xor
leave
and
pop
xor
lahf
xchg
adc
jle
push
sti
mov
jno
mov
gs
inc
push
aaa
andl
cmp
icebp
lea
ja
cmp
mov
fstp
inc
adc
aad
inc
loope
in
shll
and
mov
sahf
lret
or
out
loop
sti
sub
andl
scas
cmp
outsb
jo
xchg
sbb
out
pop
push
cs
adc
cmc
push
scas
outsb
add
sub
rcl
or
xchg
sbb
mov
in
iret
fucomp
jle
push
inc
out
test
test
notb
fnstsw
dec
cmpsl
pusha
push
xchg
fldcw
push
pop
mov
inc
nop
cltd
shll
or
cmp
or
pop
fists
test
jg
sbb
cmp
pop
pop
leave
pop
test
pop
mov
mov
stos
or
aas
lds
dec
repnz
sbb
inc
in
adc
cltd
mov
fstpl
push
jbe
push
shrb
adc
in
dec
cli
mov
es
es
ret
mov
add
sbb
out
testb
push
aam
pop
cmp
push
xor
mov
jb
out
aam
scas
cmp
rcrb
into
sbb
stos
mov
inc
test
push
int
arpl
xchg
addr16
aad
cld
adc
gs
dec
fwait
pop
divb
pop
out
cld
add
jge
insl
je
pop
or
adc
scas
and
and
out
xchg
into
test
out
push
sbb
dec
xchg
push
lods
fwait
pop
pop
and
mov
and
mov
and
repnz
mov
loop
hlt
jle
into
int
adc
dec
ds
insb
jnp
sub
xorl
out
add
loope
xlat
pop
lds
fdiv
call
sub
bound
loopne
out
adc
movsb
mov
sub
test
rorl
repz
mov
enter
in
xorb
clc
aad
push
adc
adc
mov
lock
pop
jb
pop
xchg
rcll
pop
mov
cmp
icebp
ss
mov
dec
in
dec
gs
into
jne
loopne
aas
mov
dec
dec
nop
push
mov
mov
addr16
inc
in
pop
dec
das
aam
popf
pop
test
clc
popa
push
dec
out
push
cmc
cmp
jecxz
mov
lret
mov
fistpl
hlt
out
mov
dec
lret
paddw
fsubs
mov
js
into
loopne
leave
cli
test
cmpsl
jb
push
cmp
jge
mov
jle
cmp
fwait
in
addr16
xor
pop
enter
cmpsb
aam
enter
std
mov
in
stos
ja
mov
adc
ror
aad
mov
sbb
mov
int
loop
test
mov
xchg
cltd
rol
stos
xchg
and
aas
push
popa
jmp
clc
mov
mov
stc
add
sub
nopl
cmp
push
jge
cli
in
sub
repz
fucomi
cmp
int3
cmp
mov
or
lcall
inc
pop
xor
adc
adc
cmc
out
test
sub
in
in
dec
pop
fldcw
mov
cmp
push
repnz
outsb
lods
mov
push
xchg
sbb
les
bound
mov
cmpsb
aas
imul
call
dec
mov
adc
jbe
mov
sub
call
fdivp
ljmp
subb
or
lea
ja
pop
in
mov
dec
aaa
xchg
sbb
sub
fiadds
incb
cli
stos
jno
imul
gs
nop
inc
inc
in
jb
xlat
jnp
xchg
shr
and
insb
test
rorl
jne
ret
jmp
bound
or
and
sub
adc
loope
dec
xlat
sub
leave
xchg
pop
movsb
and
jmp
xor
cmc
ret
fiaddl
inc
fistpl
push
jle
cmpsb
shll
insb
loope
aam
dec
adc
movsb
out
dec
inc
cmp
adc
push
push
and
insb
xor
xor
or
mov
rolb
mov
es
or
lods
mov
add
notl
cmp
aam
pop
jmp
sarb
xor
sti
movsb
jno
lods
hlt
cmp
adc
pop
into
test
movl
ja
jns
movsl
inc
out
xchg
stos
icebp
inc
out
aad
cmpb
xchg
inc
into
adc
into
add
push
fnstenv
xor
mov
fisubrl
mov
push
lret
and
aad
xchg
jae
dec
mov
push
push
xchg
cmc
jmp
rclb
adc
push
pushf
mov
lock
add
mov
mov
pusha
inc
ljmp
clc
mov
cmp
pop
mov
push
adc
enter
sub
fs
mov
loop
dec
xor
pop
sub
cwtl
cmc
icebp
mov
sub
test
lods
in
stos
and
sbb
adc
mov
jne
test
pop
ss
jbe
mov
pop
mov
sub
xchg
rcl
call
lcall
mov
pop
out
sbbl
mov
out
mov
or
lods
cld
mov
mov
mov
hlt
loop
pop
jecxz
xchg
pop
inc
mov
loopne
jne
mov
pusha
bound
xlat
sqrtps
ds
mov
and
inc
jecxz
enter
mov
push
lds
mov
jmp
cmp
js
shlb
inc
shlb
insl
stc
add
out
xchg
popa
test
and
pop
xchg
adc
outsb
std
or
pop
sub
jns
adc
add
pop
cwtl
adc
cwtl
fdivrp
mul
cmp
push
sub
sbb
movsl
and
fcmovu
push
jns,pn
mov
push
shll
push
fstpt
jno
or
nop
stc
enter
sti
inc
ror
mov
sbb
aas
lret
jle
in
rorb
dec
out
inc
cmpsl
data16
repnz
fidivs
and
fmull
jno
and
and
popf
and
data16
lret
or
push
pop
lret
mov
popa
jmp
leave
leave
jb
jnp
cmp
insb
lods
arpl
jbe
sarl
cmp
outsl
jmp
or
jne
cmpsb
mov
pop
leave
jnp
test
das
or
rclb
sbb
sbb
cwtl
push
sti
xchg
ret
jbe
loopne
in
xchg
adc
stos
add
inc
adc
dec
mov
dec
add
outsb
in
shlw
cltd
mov
dec
adc
ds
cmp
xor
and
movsb
pop
inc
cmp
cmc
iret
fs
cmp
mov
shll
push
add
mov
dec
fwait
cmc
stc
sbb
jne
cmp
cmp
mov
xor
call
mov
xchg
std
cmp
dec
push
dec
loop
and
dec
pop
sub
add
cmp
jge
femms
dec
mov
icebp
inc
mov
mov
movsb
ret
push
dec
in
lcall
xchg
lcall
rcl
rcl
and
inc
mov
xor
je
add
mov
dec
mov
notl
popa
adc
jnp
loopne
mov
js
insl
mov
nop
js
mov
stos
push
ret
and
mov
fldt
pop
pop
scas
or
sbb
sbbl
inc
push
lcall
mov
sbb
or
add
push
push
add
inc
xchg
das
or
lods
cmc
movsb
imul
jb
mov
rcrl
lods
xchg
xor
add
movsl
pop
or
shr
aad
pusha
jp
mov
adc
push
dec
dec
decb
icebp
movsb
icebp
mov
or
pop
add
mov
and
hlt
push
push
pusha
idivl
jbe
mov
cmpsl
mov
ret
inc
jmp
dec
stos
jbe
loopne
pop
push
das
js
xor
test
xchg
sub
insl
in
sub
jbe
jle
and
push
outsl
add
clc
or
ret
clc
daa
es
and
or
xchg
lds
aad
bound
popa
stos
movsb
cld
lods
mov
ror
sub
pop
mov
mov
jb
xchg
dec
adc
loop
and
pop
nop
mov
dec
test
push
xor
out
xor
sub
mov
in
in
insb
sub
movsl
in
add
icebp
mov
mulb
dec
lcall
adc
add
in
mov
sbb
test
cmc
jmp
inc
pop
cmpsl
popf
pop
enter
inc
mov
fcmovne
adc
fcoms
mov
adc
clc
cld
out
aad
sub
mov
push
jo
ret
in
jae
sbb
xor
cltd
or
and
mov
mov
pop
cmp
incb
sub
push
adc
outsb
jge
imul
or
int
fcompl
fisubrs
lret
adc
addr16
lret
jo
clc
sub
in
ds
jns
stc
jmp
rcrb
aaa
dec
lret
inc
mov
mov
lds
je
mov
stos
cmpsl
sbb
mov
add
cmpsl
into
fistpl
and
cmp
imul
pusha
push
cs
mov
push
ljmp
add
mov
inc
out
aam
pop
mov
movsb
sbb
xchg
adc
pusha
sti
cmp
cmp
or
mov
adc
notl
pop
dec
movsb
xchg
fpatan
mov
popa
xor
xor
sbb
cmp
mov
and
fdivr
dec
add
push
fldl
iret
adc
test
leave
lods
cs
divl
or
mov
jp
iret
mov
mov
xchg
sarb
pop
ds
fsubs
mov
lods
test
dec
xchg
sti
push
jnp
in
popl
jae
mov
jns
pop
fadd
ss
mov
xor
popf
pop
xor
dec
test
inc
cmpsb
add
mov
dec
shlb
stc
aaa
xchg
cld
rorb
loopne
outsl
xchg
loop
jmp
mov
sub
mov
paddusw
cmp
sbb
cmpb
inc
repnz
pop
in
pop
cmpsb
lods
insl
adc
js
icebp
bound
into
jb
mov
sbb
pushf
add
outsl
xchg
push
stc
out
adc
hlt
jg
xchg
mov
push
jne
push
push
pop
push
adc
stos
mov
clc
je
add
std
jno
es
ret
ljmp
std
dec
jbe
dec
aam
mov
stos
stos
ja
notl
hlt
inc
mov
stos
bnd
mov
out
fiaddl
int3
sub
pop
add
dec
mov
and
test
xor
sti
les
loope
lgs
mov
movsb
xchg
insb
je
fldt
xchg
ljmp
adc
xchg
inc
mov
mov
lret
xor
in
mov
in
fs
in
push
arpl
jge
xorl
dec
stos
test
jecxz
jecxz
jle
daa
enter
push
xor
xchg
rorb
sti
pop
shl
sbb
dec
adc
out
mov
aad
sahf
les
xor
andl
dec
rcr
mov
mov
bound
popa
pop
lcall
in
sbb
jle
xorb
aaa
fsubrl
in
pop
lcall
and
mov
xor
lds
xchg
mov
int3
sub
not
mov
cmpsl
data16
cmp
pop
jmp
pop
mov
sbb
enter
test
add
mov
sub
in
xchg
loop
fcmove
fimuls
test
xor
pusha
call
dec
aam
clc
sub
or
fmull
add
jle
add
mov
andb
imul
xor
dec
add
aas
sub
adc
pop
movsl
dec
xchg
pop
cmp
insl
mov
fstpl
mov
bound
dec
mov
pop
dec
sub
pop
jns
mov
scas
xchg
inc
add
sbb
ja
mov
push
ljmp
jl
movsl
inc
popf
fwait
lret
xor
jns
xchg
push
xchg
jle
add
pop
fidivs
movsl
jo
push
inc
loope
sub
fistpll
repnz
aad
inc
lods
dec
insb
aad
push
loopne
jp
loope
xor
or
lret
lods
stos
sbb
cmpsb
xor
mov
pop
in
nop
mov
out
jbe
scas
jmp
mov
xchg
jns
ljmp
jle
fcomip
add
cli
lahf
lock
fistl
out
test
sub
lds
les
dec
aam
cmp
sahf
xchg
fwait
inc
pop
xchg
jne
adc
in
aaa
fwait
dec
aad
add
incl
pushf
mov
add
sbb
cld
aad
push
jmp
sub
fisubl
push
xchg
cmc
mov
pusha
or
xchg
fwait
xchg
xchg
sub
mov
mov
imul
mov
xchg
or
pop
insb
in
stos
inc
add
not
idiv
xchg
or
sub
icebp
nop
dec
push
pop
jp
movl
sub
cmpsl
inc
lcall
movsb
mov
xlat
lret
mov
fwait
jmp
inc
xor
mov
aam
mov
ret
shrl
shrl
jb
push
push
in
fdivp
out
pop
dec
xor
cmpsl
push
rorl
ss
adc
mov
cmp
xchg
fadds
subl
cmp
sbb
mov
pop
dec
mov
icebp
sahf
movsl
stos
dec
lds
jp
fidivs
or
xchg
ror
push
dec
and
shrl
into
enter
pop
insl
sbb
jae
pop
mov
iret
xor
imull
jmp
mov
fcmovb
jge
int
sahf
gs
ljmp
mov
lahf
mov
insl
xchg
movsb
test
dec
adc
repnz
sbb
jae
gs
cmp
rorb
jle
shlb
shrl
pop
imul
std
dec
nop
xchg
ljmp
push
ja
cli
cmpsl
je
repnz
fucompp
fs
pushf
lahf
adc
shrb
and
enter
mov
les
xchg
inc
push
test
repnz
insb
shll
daa
ret
mov
cltd
xchg
ljmp
and
cmpsl
icebp
xor
roll
push
mov
lahf
dec
test
push
shr
popa
pop
jecxz
sti
xor
pusha
xlat
pop
lcall
cmp
sub
cld
or
cmpsb
adc
jae
add
fwait
insb
gs
fldt
add
jle
ret
es
lea
inc
push
int
mov
pop
xor
lea
dec
sbb
xchg
jge
add
cmc
stos
rclb
dec
lods
pop
adc
dec
std
sub
lret
sbb
arpl
cld
and
cmp
ljmp
pop
aaa
xchg
leave
fcomi
fs
pusha
pop
jae
or
scas
sbb
push
mov
mov
aas
add
jle
adc
and
mov
jae
jns
xchg
out
mov
loope
gs
mov
mulb
ret
or
ret
outsl
add
orb
sub
subl
mov
std
fidivrs
stc
pop
mov
xchg
fsub
sub
sbb
cmp
les
insl
je
cmp
xor
inc
adc
out
mov
imull
bound
sahf
fs
data16
mov
xchg
xchg
aas
lea
mov
push
ja
sbb
mov
sub
in
rolb
in
adc
push
mov
test
pop
add
mov
xchg
mov
mov
ret
or
shl
xchg
rclb
xor
and
cmp
aad
cmp
pop
xor
and
jbe
xchg
cmp
testb
pop
fidivl
mov
out
jmp
fldcw
xor
lahf
push
ret
mov
or
outsl
mov
mov
je
sahf
jle
mov
lret
pop
cmp
out
sbb
sub
cmp
mov
push
push
cld
adc
jo
cmp
cmp
cmp
jnp
ret
insb
mov
adc
scas
cmp
stc
add
jnp
adc
loopne
in
pop
push
in
adc
push
daa
sbb
pusha
test
jne
mov
aas
xor
or
aad
push
push
enter
movsl
outsl
adc
cmp
mov
sbb
lret
idivl
or
ret
arpl
insb
pop
repnz
and
xchg
in
jne
leave
arpl
imul
mov
int
jle
rorb
call
cmpsl
mov
jno
dec
mov
loopne
shrl
cld
stos
mov
jecxz
int
sbb
jne
subl
popa
fbld
adc
decl
xor
xchg
test
lock
sub
popf
add
aaa
int
sbb
mov
clc
pop
addr16
js
repz
das
mov
and
add
lea
cs
or
adc
add
push
lahf
or
scas
je
add
pusha
lds
or
outsb
mov
lods
push
cli
psllw
mov
or
jae
add
dec
push
jo
xor
jg
add
dec
bound
pop
lcall
push
lahf
decl
dec
adc
pop
aad
pop
push
aam
sbb
hlt
out
push
stos
es
mov
sub
les
mov
sub
cmp
aam
xchg
mov
sahf
or
push
sbb
int
lret
pushf
test
std
xchg
xorb
mov
pop
ss
stos
in
xchg
pop
add
or
jno
lahf
es
mov
cli
dec
lods
test
sbb
mov
cld
js
xchg
inc
push
aas
sbb
or
dec
jno
push
push
lcall
jae
das
sub
ljmp
add
inc
jp
rcrb
pushf
call
nop
and
out
mov
dec
cld
add
mov
push
lods
sti
inc
outsl
cmp
sbb
inc
xchg
lcall
mov
pop
filds
push
dec
sbb
in
push
mov
loop
fldt
mov
jnp
or
sarb
fs
inc
sahf
loop
incl
rclb
cmp
inc
mov
fdivrp
xor
push
ficoms
xchg
mov
mov
or
fcmovb
pop
daa
jne
pop
dec
inc
cmp
cltd
jge
aas
rorl
mov
inc
adc
out
cli
pop
pop
mov
dec
mov
mov
jns
movsl
xor
pop
inc
xchg
out
popf
popa
xchg
mov
mov
xor
dec
scas
shl
push
xchg
lcall
cwtl
fdivr
xor
xchg
fistps
xchg
mov
arpl
stc
mov
mov
out
mov
mov
rol
loope
dec
dec
push
pop
std
out
in
lret
dec
js
icebp
jne
jnp
sub
in
les
leave
daa
icebp
icebp
adc
fadd
pusha
inc
cmp
push
xlat
add
xchg
lods
loope
callw
ret
aad
push
cltd
fldenv
mov
cmp
mov
adc
mov
dec
jae
add
aas
in
dec
or
push
jnp
mov
aaa
push
std
jmp
mov
lahf
std
or
jns
and
inc
push
fcoms
icebp
xor
dec
inc
cmp
loop,pn
inc
nop
divb
sahf
add
xchg
mov
sub
mov
fmul
lds
outsb
inc
pop
add
push
subl
lds
add
pop
add
mov
sub
cli
jnp
push
jb
movsl
add
test
out
lods
inc
inc
cmp
mov
sub
repz
ret
dec
push
popf
or
inc
ljmp
dec
jbe
out
fstpt
imul
ljmp
lods
cmp
movsb
imul
xchg
enter
mov
push
xchg
and
nopl
push
inc
push
xchg
ss
hlt
mov
arpl
push
movb
mov
imul
mov
shl
in
cmp
xor
sub
pop
or
ljmp
jnp
add
mov
mov
outsb
popf
xor
add
test
xor
mov
scas
test
lcall
pop
mov
sub
inc
jg
inc
fwait
xlat
xchg
in
jno
mov
lahf
mov
jb
cmpsl
ret
sahf
cmp
xor
mov
out
or
adc
adc
mov
mov
inc
xor
rcrb
add
jne
and
mov
mov
idiv
cmp
adc
cmpb
into
xchg
push
adc
add
dec
pop
jno
jmp
pop
js
iretw
cmpsb
inc
sbb
ja
and
and
sub
insl
adc
notb
push
lods
mov
push
loope
repz
fbld
sbb
mov
fcoml
mov
sbb
js
fldl2e
xor
push
jbe
cmpsb
push
rclb
xchg
lods
lret
lahf
addl
lret
idivb
mov
fwait
mov
cltd
mov
add
fmul
subb
sbb
jb
addr16
lods
loopne
ljmp
xchg
cmpsb
or
test
add
adc
roll
sub
lahf
push
pop
dec
fucomip
push
cmp
ljmp
faddl
mov
jmp
jp
jns
push
shl
xchg
and
lret
sub
aad
xor
mov
cmp
dec
sub
fwait
notb
adc
mov
stos
out
call
sbbb
out
sbb
mov
xchg
cmc
add
jns
outsl
push
xor
cmp
call
push
adc
ror
cli
xor
dec
sub
sbb
push
popa
jecxz
in
mov
xchg
adc
xchg
jbe
xchg
and
lods
repz
loope
aas
jg
jg
in
pop
pop
jl
adc
fistl
mov
dec
mov
js
lahf
arpl
xchg
shrb
fs
and
cmp
jne
jl
pop
shll
cmp
sbb
les
pop
cli
pushw
pop
inc
fstl
jb
bound
xchg
mov
pop
sbb
lods
test
mov
pushw
add
inc
lods
mov
jle
scas
or
sub
adc
cmpsb
inc
add
enter
sub
data16
loop
in
jne
shrl
mull
hlt
ret
mov
and
inc
jo
dec
imull
inc
test
xchg
xchg
mov
sbb
push
ret
add
ret
mov
adc
jno
dec
xor
jb
iret
xchg
push
enter
aad
sbb
cmp
inc
int
je
lret
arpl
push
push
mov
rclb
inc
sub
bound
imul
inc
dec
cmp
xchg
mov
push
sub
cld
cli
das
in
stos
adc
and
xchg
mov
and
inc
push
jl
sbb
fnstcw
xchg
jb
cmp
xchg
jne
jecxz
mov
pop
ljmp
push
add
pop
xor
test
pop
popa
js
mov
imul
out
mull
add
cmp
sbb
rcll
cmp
jb
andl
jle
jae
mov
xchg
lds
xor
and
add
es
daa
rcl
inc
add
dec
xor
es
adc
push
int3
cmp
inc
loop
dec
in
or
jge
pop
shrl
mov
enter
xor
jp
pop
fsub
and
rorb
imul
jp
jne
popf
jno
ljmp
mov
push
xchg
cltd
mov
fwait
leave
lret
sbb
dec
add
jae
out
fdivl
lds
inc
sub
xchg
into
xor
cmp
mov
stos
lcall
lcall
add
and
js
sahf
pop
gs
aad
movsb
mov
inc
mov
mov
adc
pop
lahf
or
xchg
push
pop
mov
jne
leave
sarl
jl
stc
cli
cmp
pop
inc
add
jns
fsubr
push
popa
adc
rcrl
dec
leave
xchg
ret
mov
ljmp
fnstenv
test
in
jg
imul
sbb
sub
lret
movsl
sub
insb
daa
into
fiadds
mov
test
loop
jmp
mov
daa
dec
or
aad
push
lods
xor
dec
push
addr16
out
fwait
scas
loop
cmc
fidivrs
inc
sbb
fmuls
aaa
cmp
sbb
push
sti
inc
jge
cmp
adc
lret
push
shr
jno
aad
lret
out
loopne
in
rorl
inc
movsl
clc
mov
sbb
cmpb
push
bound
ret
scas
add
outsb
sti
lret
imul
mov
ret
jne
mov
scas
mov
repz
xchg
arpl
hlt
ja
cwtl
xor
and
pop
ficoms
fdivs
or
jge
insl
test
lods
mov
les
mov
mov
push
ret
inc
sti
dec
jno
leave
enter
ret
jae
adc
ror
mov
orl
fstl
loop
gs
cld
pop
fwait
movsb
cwtl
in
mov
ret
sahf
push
or
push
pop
adc
pop
xchg
dec
xchg
ret
mov
popa
pop
ret
pop
mov
dec
sub
insb
push
dec
repnz
out
and
popa
xchg
cmovge
adc
popf
sub
push
fstpl
ret
lock
lret
push
cmpb
sbb
test
pop
cli
lahf
adc
jecxz
sbb
fs
dec
mov
push
or
movsl
mov
sub
jle
fbstp
fsubl
fwait
jns
cmp
jmp
loop
movsl
mov
popf
adcl
movsb
sbb
jne
xor
push
mov
pop
push
loope
dec
mov
test
test
mov
sub
adc
sub
int3
mov
add
push
or
addb
or
cmp
mov
mov
push
jle
lods
das
mulb
insb
add
adc
das
mov
imul
inc
inc
sbb
mov
push
mov
sub
clc
aaa
cld
cltd
dec
sbb
xor
xlat
rolb
pop
pop
dec
pop
loopne
push
ret
jmp
sub
jge
sbb
out
mov
aaa
call
fbld
push
and
pusha
mov
imul
cmp
mov
cmp
popf
daa
adc
loop
out
addr16
inc
mov
lods
jne
push
test
jge
ljmp
data16
xchg
pushf
add
push
iret
sub
or
jl
pop
pop
icebp
pushf
outsl
pop
jo
xlat
loop
out
cltd
jne
xor
mov
pop
data16
dec
pusha
push
clc
adcb
mov
pop
addb
jle
in
aad
movsl
stc
out
push
or
stos
in
dec
mov
xlat
pushf
sbb
mov
stc
pusha
decl
and
push
cmp
mov
aad
jno
ljmp
adcl
stc
mov
pop
add
imulb
dec
sahf
lcall
pop
ja
arpl
leave
shrb
mov
int3
or
bound
in
dec
outsb
xor
loop
lods
arpl
fisttpll
aam
ret
pop
xor
or
inc
xlat
sti
mov
jno
sub
or
sub
inc
and
fdivl
outsl
hlt
jbe
push
repnz
popf
inc
aas
lods
mov
pop
iret
cmp
inc
mov
les
lret
gs
pop
dec
or
sub
pop
js
mov
pop
push
shrl
xor
add
lret
mov
lcall
and
cmp
mov
pop
movsl
cwtl
decb
push
push
enter
jb
inc
scas
jge
ret
fsts
mov
push
inc
xchg
mov
ret
lock
sub
outsl
icebp
dec
fucomp
xlat
filds
xor
cmc
cmp
push
sub
xor
imul
mov
lret
fldt
dec
mov
out
xchg
mov
jae
xchg
pop
notl
mov
rclb
adc
add
push
das
repnz
and
xchg
xchg
aam
pop
cmpsb
adc
or
or
in
jmp
mov
lds
stos
mov
pop
imul
sbb
orb
sbb
ljmp
mov
mov
xor
mov
xor
bound
xchg
inc
sbb
fdivrs
pop
jns
mov
inc
add
mov
jne
icebp
popa
fcmovne
icebp
jns
imul
fcmovnu
ja
lcall
bound
push
enter
jns
sub
cmpsb
mov
sub
lcall
push
test
decb
flds
pop
gs
mov
rcrb
mov
cli
jl
je
jmp
jno
lea
lahf
pop
gs
pop
push
sbb
rorl
mov
and
jmp
dec
xlat
fidivl
inc
repnz
xchg
inc
in
inc
enter
xchg
pop
iret
xchg
jmp
inc
mov
in
add
jecxz
adc
bound
jecxz
popa
pop
rolb
out
sbb
mov
nop
lahf
mov
xor
mov
xchg
fldt
xchg
mov
cmp
std
pop
and
sbb
or
fisubs
shlb
and
cltd
pop
add
inc
das
mov
ja
dec
rorl
xchg
inc
dec
push
lret
lret
cwtl
jo
mov
xchg
clc
adc
out
push
pushf
lock
lret
xchg
add
adc
pop
movsb
pop
fstps
mov
push
int3
gs
add
or
sarl
shrb
enter
dec
dec
and
bnd
test
xchg
add
enter
iret
gs
aas
lods
aad
movsl
mov
jne
bound
push
loopne
mov
loopne
mov
cmp
mov
cli
das
cli
mov
mov
loop
shrb
push
mov
push
dec
movsb
cmp
into
lods
rcr
lahf
repnz
jmp
dec
sub
push
js
daa
fimull
xor
imul
rolb
inc
xchg
call
mov
cld
inc
add
cmc
js
mov
int
imul
mulb
scas
mov
sbb
fs
loop
bound
lret
inc
push
outsb
and
mov
sub
out
cltd
push
mov
xchg
scas
sub
rcr
or
into
dec
icebp
mov
fnstsw
jne
imul
imul
dec
aad
inc
xor
jl
inc
fnstenv
push
lret
fld1
mov
shll
jg
pushf
mov
sub
sub
aas
adc
push
leave
inc
pop
das
mov
ficomps
xor
pop
outsb
idivb
sbb
cmp
jno
sub
ret
or
repz
and
rorb
sbb
mov
enter
pop
or
adc
ror
sub
pop
inc
pop
pop
test
mov
push
and
fdivrs
mov
cmpsl
int
aad
push
mov
mov
test
lds
sub
ds
pushf
fidivs
lahf
cmp
int3
out
xchg
icebp
sbb
shrl
aaa
sub
into
sti
shll
mov
push
pop
test
icebp
mov
ret
lcall
out
jo
mov
push
adc
sbb
pop
fwait
adc
adc
xchg
test
movsl
cmp
das
out
jns
shrl
dec
and
cmp
or
int3
insb
call
mov
outsl
mov
fs
sub
loope,pn
push
pop
or
imul
xlat
lret
fwait
xchg
or
cmp
add
out
je
inc
add
pop
out
mov
push
ror
mov
sbb
hlt
inc
lret
pusha
inc
fdiv
xor
mov
jl
mov
or
push
addr16
repnz
pop
sub
lahf
mov
out
dec
call
jo
jg
xlat
mov
popa
enter
mov
call
cs
add
sbb
xchg
xor
jg
jmp
mov
loop
mov
dec
dec
and
mov
repz
inc
stos
dec
xchg
dec
loope
inc
sub
scas
mov
xorb
dec
nop
xchg
mov
stos
mull
clc
je
imul
sbb
popf
movsl
leave
dec
mov
mov
jns
add
loopne
stos
adc
inc
sbb
sub
mov
shufps
std
mov
push
sub
cli
popf
aad
into
and
ja,pt
je
loop
adc
out
pop
add
inc
jle
fcmovb
add
pop
cs
pop
or
je
cmp
jnp
xchg
enter
sbb
aaa
out
pop
int
mov
pop
jmp
cmp
test
cld
into
push
out
mov
aad
push
orl
or
lods
adc
and
sbb
test
dec
pop
inc
mov
dec
add
nop
cld
sahf
jg
nop
or
xor
ret
mov
in
mov
in
adc
jae
fsubrl
into
push
xchg
jg
jg
cmp
lods
push
sub
jns
fdivrs
ljmp
arpl
shll
mov
xchg
push
cmp
push
or
adc
fmul
lret
outsl
cmp
loop
adc
std
inc
pop
inc
inc
roll
mov
xor
sub
push
andb
pop
fcom
insl
sbb
cmp
in
ret
and
movsl
stos
xor
leave
popf
inc
clc
loop
insl
jl
sub
sub
notl
inc
push
jg
xchg
cli
inc
dec
call
stc
loopne
roll
test
mov
or
xor
js
xchg
int3
sbb
sarl
mov
loopne
call
lods
push
pop
cs
mov
loope
sbb
lds
je
jnp
pusha
ror
fs
out
mov
mov
push
fmulp
out
pop
insl
fstps
xchg
loope
pushf
out
and
mov
fs
xlat
jne
jae
sbb
call
lahf
lds
cmc
sti
in
push
shrb
cltd
xchg
subb
test
push
std
icebp
or
ss
sbb
sub
aaa
divb
rorl
test
inc
subb
jnp
xchg
movsb
xor
pop
repz
cmc
dec
stos
cmc
popa
push
xchg
jl
mov
rorb
sbb
push
jecxz
out
add
call
je
pop
push
and
adc
add
dec
jp
aas
cmp
xorl
and
je
add
subb
add
and
mov
dec
sbb
test
into
push
stc
or
clc
mov
shll
sbb
dec
mov
scas
xchg
add
jge
push
sub
lret
aam
inc
xlat
je
push
xchg
lea
add
sub
mov
pop
and
js
pop
sub
clc
js
cli
pop
mov
mov
cli
ret
mov
or
or
adc
pop
call
xchg
or
addr16
xchg
adc
rolb
in
mov
cltd
mov
rol
sbb
mov
movsl
or
push
lods
in
xchg
in
cmc
add
sti
add
mov
xchg
js
xlat
das
gs
in
pop
std
dec
cmp
sub
lahf
inc
rcrb
inc
sbb
in
xchg
mov
dec
sbb
xchg
es
aam
push
xchg
fstps
mov
jnp
and
roll
shl
pop
mov
dec
jle
in
subb
mov
mov
pop
and
dec
push
pop
pop
push
in
outsb
nop
in
mov
imul
xor
and
movsl
insl
pop
add
outsb
jl
sub
lods
pop
inc
cmp
jmp
sahf
mov
mov
mov
loope
jmp
pop
dec
fisttps
push
sar
cmp
test
ja
sub
sub
scas
sbb
stos
aam
xor
jae
push
add
cli
jl
jb
stos
popf
in
fidivl
sbb
xor
hlt
pop
stos
ret
push
arpl
or
ficomps
pop
jecxz
cmp
gs
jns
cwtl
adc
out
test
cmp
mov
sub
inc
jb
jp
pusha
loope
stos
pop
dec
xlat
xor
push
adc
cld
jno
xor
stos
mov
or
bound
inc
jge
call
addb
stos
mov
jecxz
cli
push
ss
cmpsb
push
xchg
and
xor
xchg
jp
bound
inc
repnz
data16
fnstenv
jecxz
rorb
out
ret
dec
dec
pop
aas
or
ljmp
mov
xchg
push
cmp
push
mov
push
cmpsl
mov
pop
mov
int
aam
pop
int3
jecxz
out
lret
clc
pop
loopne
dec
cmc
movsl
mov
mov
pusha
cmp
mov
inc
mov
leave
dec
xchg
mov
mov
ret
sarb
jecxz
mov
out
push
cmp
dec
aas
mov
mov
lock
decb
dec
sarb
mov
pop
sarl
push
xlat
mov
xorb
sub
xor
dec
sbb
lret
in
outsl
push
push
incl
cmp
dec
cmp
sub
hlt
mov
mov
sub
mov
mov
je
enter
in
xchg
push
jne
imul
test
orb
in
sti
mov
push
std
rorb
mov
into
sub
xchg
andb
mov
mov
ljmp
out
mov
mov
mov
data16
rcl
and
shlb
arpl
add
int
test
rol
push
rolb
arpl
fnstenv
scas
mov
inc
cmpsb
stc
adc
xchg
mov
mov
aas
scas
inc
andl
das
movaps
pop
xchg
rolb
iret
mov
sti
adc
ret
sbb
sbb
out
mov
cmp
dec
push
out
int
add
xchg
cmp
repz
dec
dec
jnp
dec
repz
sahf
adc
xchg
xchg
adc
mov
dec
xchg
sub
push
adc
movsl
pop
test
adc
xlat
sub
dec
push
pop
xor
fidivl
lods
out
ss
xchg
xchg
cmp
gs
mov
std
jns
and
in
or
int3
sbb
rolb
lret
adc
sbb
cmp
daa
je
add
and
cmp
pushf
lahf
inc
lahf
jp
mov
jp
add
sub
jo
test
js
jno
insl
xor
jl
inc
xor
xor
pushf
mov
add
andb
ss
sbb
je
je
mov
lds
mov
mov
std
fwait
nop
mov
or
stc
dec
add
lcall
jmp
sbb
lret
popf
cmp
scas
or
cmp
adc
xor
loop
bnd
fstpt
lea
xchg
shrb
ja
lods
mov
inc
fstl
sar
dec
or
mov
cmpsb
hlt
cmpsb
mov
or
add
hlt
cltd
push
jo
or
sbb
push
pop
std
sub
mov
in
test
js
std
xchg
xor
clc
loope
and
mov
rcll
repz
fcmovne
faddp
int3
js
jnp
outsb
js
mov
cmp
in
fsts
int
test
adc
inc
cmpsb
mov
ljmp
inc
push
add
adc
jbe
lea
or
addr16
add
cwtl
xor
sub
push
mov
popa
lods
xchg
sbb
xchg
outsl
pop
mov
inc
loopne
loop
mov
push
fmull
pushf
jl
pop
mov
mov
popa
rorl
loop
inc
jg
orl
leave
loop
idiv
mov
out
sub
pop
xor
lds
sbb
hlt
pop
xor
jmp
repz
repz
adc
fsubrs
xor
pusha
fistpll
mov
out
mov
lods
cmp
fndisi(8087
fisubrl
movsb
test
stos
stos
lret
push
cmp
xor
mov
or
sub
push
negl
mov
jecxz
mov
xor
add
ror
je
cmpl
outsl
push
loopne
outsb
sbb
mov
ror
mov
das
test
shll
repz
and
in
inc
adc
add
aam
dec
in
cmp
in
out
xor
inc
sub
roll
pop
imul
dec
test
fsubl
addr16
sarb
adc
and
insl
sarl
mov
push
icebp
sub
aam
cli
cmp
xor
sbb
aas
aaa
pop
rorl
sub
loop
xor
lcall
outsb
xchg
mov
mov
arpl
push
popa
in
xchg
fcmove
dec
insb
sbb
gs
imul
adc
mov
pushf
xchg
or
cmp
test
lea
fidivrl
sub
repz
pushf
icebp
mov
mov
xor
pop
mov
leave
sbb
out
push
lret
jns
jb
lods
xchg
xchg
sub
cli
pop
notl
shlb
ret
jecxz
scas
push
lods
fsub
mov
mov
lods
jge
cli
and
xchg
lcall
leave
outsl
gs
lods
xlat
nop
sub
mov
jo
cld
lods
mov
pushf
test
pop
pop
pusha
pop
mov
sub
dec
sub
fdivrl
mov
ss
pop
sub
nop
xor
dec
icebp
mulb
mov
mov
out
mov
jge
fsubl
mov
mov
aas
idivl
xchg
std
int
mov
scas
shrb
xchg
pop
jbe
orb
mov
repnz
daa
sbb
int3
push
jo
dec
mov
inc
xor
sti
cmp
sub
pusha
inc
dec
lds
lea
or
sahf
and
add
jne
add
vpmovzxbq
popa
fisubrs
ljmp
cli
jae
mov
xchg
fiaddl
xor
mov
cmc
ss
xor
test
outsb
lea
call
out
mov
inc
movsb
dec
in
shll
cmc
jb
and
xchg
dec
fimull
movsl
std
or
cmpsl
mov
xor
lods
idivl
push
call
mov
mov
pop
sub
and
test
leave
shlb
scas
leave
adc
inc
inc
in
jbe
mov
adc
aam
mov
lahf
adc
mov
bnd
mov
divb
sbb
inc
jle
pusha
adc
jmp
lea
add
fwait
jne
test
pop
dec
inc
ljmp
xchg
jmp
imul
cmpsl
lcall
je
mov
inc
jg
popf
insl
mov
bound
les
mov
jae
mov
add
flds
jl,pt
and
mov
sub
outsl
ja
and
imul
or
shll
clc
dec
notl
xchg
movsb
adc
test
popf
scas
cmc
cmp
sahf
cmp
push
adc
mov
sub
push
push
jge
xchg
pop
sarl
pop
jno
jo
ret
and
fidivrs
test
hlt
test
inc
shll
stos
ficoml
jae
jmp
ds
adc
jg
repnz
fucomip
lret
andl
out
jle
or
or
imul
mov
push
iret
mov
or
movsb
xor
add
pop
stc
movsl
jae
mov
sbb
xchg
cmc
sbb
mov
mov
push
push
iret
mov
mov
cmp
push
xor
lcall
dec
sti
cmp
xchg
and
mov
mov
or
push
mov
pop
cmp
subl
and
js
jne
pushf
test
repz
sbb
cmc
sub
mov
nop
xchg
push
test
mov
aaa
cli
push
daa
or
mov
inc
xor
mov
mov
and
jg
or
mov
inc
pop
adc
adc
cmp
dec
leave
fnstenv
int
imul
mov
xor
outsb
sub
xor
dec
lods
mov
loop
cli
fsubrl
inc
into
outsl
push
cmpsl
insl
sbb
adc
dec
in
mov
stc
sub
sarb
vaddsubps
mov
roll
arpl
into
adc
data16
std
xchg
mov
adcb
inc
enter
cs
mov
insl
push
imul
xor
flds
jmp
cmp
jg
push
inc
lods
or
cmp
sbb
mov
mov
jne
xor
lock
fisubl
jo
insb
jo
stos
in
or
and
shrb
cmp
loope
lea
pop
mov
mov
pop
bound
aam
pop
pop
lret
inc
jge
cmpsb
imulb
aam
pop
cmp
or
mov
fisttpll
push
aam
les
add
clc
push
pop
adc
push
cmp
jne
adc
clc
mov
pop
js
std
popa
and
or
pop
mov
xor
adc
push
insl
ret
adc
ds
ret
cmp
adc
ljmp
cmpsb
ficoms
pop
xchg
jae
sarb
sti
scas
jmp
xor
mull
mov
sti
aam
in
pop
mov
cmpsl
je
test
shll
stos
mov
pop
dec
stc
jge
je
sbb
sti
jp
popf
stos
push
pop
fisubl
insl
sete
fsts
pop
dec
ljmp
mov
fs
mov
xor
lods
dec
sbb
test
mov
fwait
pop
push
and
bound
or
aam
test
xchg
cwtl
pop
sbb
rorb
dec
sbb
or
mov
pop
loop
mov
mov
pop
hlt
adc
inc
in
sahf
mov
jp
or
clc
dec
mov
jmp
out
push
test
lret
push
pushf
pop
fsubr
sub
cmp
movsl
loop
sbb
into
je
iret
jbe
fstl
ds
orb
testb
xlat
or
mov
mov
push
inc
sub
push
scas
cmp
popf
mov
mov
mov
in
pop
adc
xchg
ljmp
adc
fs
and
shrl
fs
sub
vpminsw
and
pop
cmpsl
daa
test
into
leave
sahf
fdivp
sub
subps
mov
repz
mov
pop
cmpsb
mov
xlat
jnp
mov
out
adc
xor
mov
xchg
mov
mov
sub
mov
das
jnp
shll
add
or
iret
ret
ja
inc
aaa
scas
addr16
mov
icebp
mov
xchg
cli
negl
mov
jp
cld
test
jb
ss
xchg
in
or
leave
pop
mov
push
jae
mov
sub
mov
arpl
inc
sub
mov
jge
jle
lock
jl
pop
jno
cmp
mov
pop
sub
pop
mov
rclb
addr16
aad
leave
xchg
lret
cmp
cmc
fisubrl
clc
adc
inc
push
and
adc
sbb
mov
loop
stos
cli
push
sbb
idivl
inc
insl
dec
sbb
jno
xor
test
lea
mov
xchg
hlt
mov
sahf
push
sahf
movsb
dec
jae
fstpl
pushw
pop
in
daa
cld
or
popf
jae
js
and
cli
or
cmp
arpl
aad
rorl
jns
cmp
fcoms
fwait
push
mov
fmulp
dec
popf
and
lahf
and
pop
sti
mov
push
xchg
or
cmpsb
hlt
outsl
test
push
mov
cmp
vpsrad
fbld
aas
int3
push
push
fmuls
xchg
pop
in
sub
jg
icebp
popa
mov
cmc
xor
xchg
je
jnp
loopne
mov
gs
dec
xor
in
inc
mov
in
movsb
sub
adc
push
loopne
lock
fmuls
mov
cli
std
cltd
int3
push
pop
mov
mov
fs
pusha
and
pop
out
test
lea
fidivrl
lods
pop
jp
cmp
in
out
mov
mov
push
pop
idiv
and
jl
scas
dec
sarb
jne
iret
dec
xchg
or
scas
xchg
xorb
sahf
cmpl
test
jno
je
push
inc
lock
mov
lret
mov
inc
gs
cmp
aas
test
xor
xchg
dec
inc
fidivl
mov
cltd
mov
jp
std
jns
or
loop
xor
xchg
cmp
cmpsl
dec
xor
cs
fistpl
mov
outsl
insl
cmp
aas
adc
test
aas
arpl
inc
lods
adc
orb
lret
and
icebp
js
fcomp
push
shll
pause
adcb
adc
icebp
adc
cmp
lret
call
in
decb
mov
lock
test
xchg
mov
les
dec
pop
and
nop
out
and
push
xor
in
xchg
popa
or
or
xchg
mov
cmpsl
dec
bound
mov
aad
inc
fdivr
rcrl
lea
pop
push
andb
and
faddl
pop
and
aam
jp
dec
add
dec
adc
sti
shlb
loopne
lea
fisttps
sub
ret
test
repnz
pop
loopne
jbe
xor
inc
dec
mov
jge
sbb
mov
lcall
add
push
pusha
jg
mov
sbbb
cmp
fnsave
rorb
push
sub
push
adc
inc
cmp
or
cmpsl
out
scas
cmpsb
sub
testb
inc
call
loope,pn
xor
test
cmova
xchg
cs
pop
dec
ja
jne
mov
lret
fcoms
enter
nop
repz
lret
sahf
add
lods
movsl
stc
sahf
aad
sbb
jb
pop
jnp
sbb
add
xor
bound
xor
aad
sub
sti
sub
lods
jg
mov
fimull
pusha
mov
jo
lcall
outsl
pusha
or
std
or
or
push
jmp
mov
js
movsb
icebp
aaa
faddl
xlat
out
inc
xchg
inc
stc
bound
mov
loope
fdivp
jle
pop
lcall
mov
cmpsb
sbb
mov
sbb
aas
scas
add
sbb
mov
add
popl
lcall
push
loop
xchg
jp
imul
sub
daa
int
xor
mov
sub
shll
pop
js
mov
daa
xlat
lds
pop
or
call
xchg
jp
xor
push
mov
gs
rcl
mov
in
popf
std
jecxz
adc
jmp
int
mov
pop
push
dec
shlb
inc
push
push
add
inc
inc
scas
mov
sub
nop
pushf
mov
enter
jns
jns
sub
roll
ja
les
xchg
pusha
xchg
push
xchg
jl
lea
mov
lahf
cmpsb
or
mov
jecxz
add
dec
sub
fbstp
les
ret
pop
mov
scas
ret
sbb
shrl
and
in
inc
lcall
hlt
dec
aaa
test
ljmp
xlat
outsl
inc
lea
jmp
aad
mov
imul
ds
pop
sub
adc
cmp
lahf
movsb
adc
cwtl
sub
mov
movsl
cmp
mov
fsubrs
dec
pop
dec
popf
std
or
sub
mov
lds
cli
jl
jecxz
bound
xchg
adc
clc
cli
notb
jo
inc
dec
es
and
mov
mov
pushf
dec
jp
test
aaa
ds
fisttpll
movsl
aaa
xchg
mov
sahf
scas
js
ds
lea
in
int
pop
call
mov
push
and
xchg
inc
mov
ja
lcall
outsl
mov
in
outsl
repz
shlb
inc
enter
nop
xchg
lds
lods
mov
and
pop
cli
popf
add
xor
mov
test
nop
fld1
int3
pop
xor
ret
mov
xor
nop
inc
push
sbb
imul
jns
mov
jmp
das
ss
scas
jg
arpl
mov
aam
call
push
movsb
mov
inc
enter
pushf
fucom
cmpsb
in
mov
jo
add
push
mov
and
out
pop
jns
pop
adc
and
out
xor
pop
popa
pushf
std
sub
loopne
fisubs
rcr
sbb
jno
cmpsl
push
jecxz
jnp
mov
out
push
in
int
dec
and
sbb
mov
adcl
stos
dec
mov
dec
ljmp
test
pop
adc
cmpsb
or
cmp
jne
test
sub
adcl
pop
add
or
cld
xchg
pop
xor
pop
mov
add
ja
adc
add
pop
popf
jmp
cmp
scas
and
inc
lock
test
test
mov
lea
dec
adc
cmpsb
imull
push
shrb
jb
in
fs
or
test
rclb
jbe
push
inc
push
imulb
lret
insl
nop
inc
jecxz
fisttpl
pop
sub
data16
shll
es
add
gs
dec
imull
sub
scas
inc
add
insl
or
pop
cltd
shll
or
jl
call
cli
xchg
stc
adc
pop
jmp
jne
imulb
jb
jne
movsb
jb
add
jp
sbb
in
add
or
rcr
lahf
xor
mov
xlat
imul
and
negb
rcll
lock
sti
pop
pop
shlb
cmp
jle
or
cmp
xor
cmc
xor
in
call
scas
stc
sub
das
cld
out
dec
fisubrs
in
xor
adc
cmc
in
add
jns
repnz
stos
push
bound
addr16
pop
or
clc
sub
mov
sub
sahf
mov
push
dec
std
push
popf
ficomps
dec
push
sub
jae
pop
addl
adc
and
sbb
ret
mov
loop
or
fidivs
in
fiaddl
jns
pop
adc
mov
lock
mov
ret
in
popf
rclb
xchg
xchg
inc
clc
repnz
push
mov
stc
in
push
sahf
adc
rcrb
jle
sub
xchg
mov
cltd
dec
sbb
cld
pop
sub
dec
jl
cltd
mov
pop
push
xchg
out
stc
lret
mov
cltd
push
xor
stc
mov
test
fnstenv
xor
pop
and
mov
mov
imul
je
punpckhdq
and
adc
sahf
sub
dec
push
ficompl
cmp
andl
mov
adc
add
adc
add
push
jl
xchg
call
and
or
rolb
dec
sti
jbe
jb
mov
shlb
fbld
jbe
mov
data16
in
fmuls
push
mov
cmc
push
repnz
inc
jne
bound
xor
sbb
fwait
ds
xchg
xor
lcall
push
lret
lcall
adc
insb
push
fwait
sub
imul
movl
fcomps
ret
inc
xor
dec
dec
jg
jnp
dec
data16
int
dec
pop
jb
aad
jp
fwait
sbb
push
push
leave
mov
mov
and
mov
sbb
pop
mov
sbb
int
int
movsb
dec
dec
inc
dec
mov
xor
lahf
or
cwtl
xor
jl
and
mov
cmp
cmpsb
out
adcb
in
jo
je
test
leave
addr16
jno
les
in
sub
inc
adc
pusha
xchg
out
rcr
jg
fbstp
call
jne
ret
xor
adc
mov
push
pop
sub
repz
sub
mov
sub
xor
ds
out
mov
xchg
xchg
hlt
aam
ret
mov
insl
jge
test
mov
mov
or
hlt
lea
sahf
testl
push
loopne
push
xchg
shrl
xor
jnp
push
scas
inc
popa
leave
mov
jbe
rorl
sbb
cmpsb
mov
xchg
sub
int3
daa
cmpsb
lock
outsl
sbb
cwtl
test
inc
or
std
shlb
cmp
sbb
cmp
sbb
clc
sahf
test
or
and
movsb
cmpsl
into
call
mov
mov
mov
jo
fs
add
mov
test
xchg
das
pop
into
jae
shll
test
pop
adc
xor
mov
popf
mov
repnz
pop
xchg
cmpsl
sub
mov
sbb
cmp
and
sbb
repz
cmp
shl
cmp
fnsave
out
iret
mov
popf
mov
push
repnz
ss
stos
and
out
loop
lret
cmpb
mov
pusha
idivb
pop
ds
jns
or
sbb
cld
stos
jmp
rcll
cli
cli
xchg
mov
cmpsl
rorl
cwtl
cli
xlat
pop
mov
push
and
push
mov
push
mov
inc
in
into
sbb
pop
mov
cs
jo
stc
addl
rol
pop
cltd
lahf
dec
pusha
ret
mov
sti
or
pop
scas
push
mov
lea
push
or
push
loope
fists
mov
xchg
pop
push
loopne
xor
roll
mov
adc
and
xor
imul
arpl
lret
mov
xchg
cmp
xchg
sahf
sbbb
and
inc
push
add
push
sub
sub
jae
mov
test
outsb
andb
push
add
pop
into
adc
fisttps
pop
gs
test
mov
xlat
icebp
not
in
jecxz
lea
lea
mov
aas
and
or
or
mov
jle
lret
mov
mov
ss
sahf
dec
addr16
mov
gs
xlat
std
addr16
mov
sahf
cmp
lret
stos
jp
push
or
mov
rorb
or
std
xor
mov
inc
dec
mov
cmp
lret
sub
cld
pop
cmp
sbb
adc
mov
in
shll
cmp
addr16
cmp
push
ret
jmp
iret
aaa
shl
mov
imul
push
xchg
andl
pop
cmp
mov
jecxz
and
mov
or
mov
fdivs
mov
fwait
inc
pop
fwait
lods
cmp
aas
cmp
addr16
sahf
xchg
pop
ud2
push
add
push
aaa
push
repz
xchg
repnz
mov
repnz
movsl
imul
push
mov
adc
sahf
ljmp
fstl
fwait
sub
sbb
add
cld
pop
adc
or
cmp
xchg
lods
leave
ss
push
int3
push
jo
sti
hlt
fisttpll
or
adc
sbb
sti
movsb
add
sahf
mov
ss
lods
out
push
push
sbb
and
aaa
sbb
adc
subl
xlat
adc
fnstcw
adc
pushf
fiadds
mov
sub
xor
idiv
mov
mov
xor
out
push
pusha
ds
jecxz
out
int3
js
push
int3
pop
mov
xchg
lea
cmp
xchg
inc
sub
push
xchg
popf
xor
aam
jle
or
lahf
imul
pop
mov
popf
mov
mov
dec
inc
fidivrl
test
xchg
and
scas
or
push
incl
loopne
jge
xor
fwait
lret
fidivrl
adc
scas
nop
in
cmp
and
xor
lret
xchg
jmp
shrb
inc
popa
int3
inc
icebp
popf
andb
iret
xchg
push
rolb
xor
push
mov
cwtl
mov
das
push
inc
jbe
rcrl
stc
jbe
into
jge
dec
mov
adc
icebp
mov
push
popa
and
inc
bound
pop
jbe
subl
decl
movsb
fnsave
aad
push
testb
xor
pop
pop
mov
xchg
ds
push
ss
xchg
mov
movsb
jb
int
int
js
jecxz
fisttps
mov
sub
je
loopne
call
inc
repz
ss
and
shll
jge
sahf
pop
sbb
call
int3
push
rolb
jns
ficoms
xchg
sub
out
ret
gs
daa
scas
mov
jb
xor
xchg
and
and
test
fsubrp
insl
jmp
xor
jmp
ja
inc
inc
jmp
mov
ljmp
xchg
pop
loope
out
jp
jb
jno
dec
xchg
xor
jne
fs
out
sub
cmp
dec
dec
jl
push
mov
sbb
mov
movsl
das
sti
inc
inc
jg
cwtl
shll
cmc
inc
sarl
xor
das
dec
inc
lods
add
dec
jne
pop
xchg
lock
test
in
or
pop
xor
mov
in
sub
dec
aam
lods
negb
fcomp
jae
cmp
aaa
mov
pop
cmc
xor
cmp
aaa
fs
inc
test
sar
pop
or
divl
imul
out
jmp
or
das
sbb
sub
pushf
test
jle
shl
aaa
or
stos
fwait
dec
or
push
repnz
jbe
push
xchg
int3
lcall
out
in
jmp
aam
ret
cmpsl
js
inc
iret
xor
je
pusha
xlat
jg
push
jle
imul
repnz
std
mov
shlb
adc
push
sbb
mov
movsl
add
mov
aad
inc
movsb
orl
loopne
add
adc
sti
lret
leave
mov
stos
xchg
add
and
adc
add
dec
mov
push
stos
cmpsl
mov
inc
test
sbb
jg
addr16
sbb
ret
push
lea
mov
jmp
inc
jmp
data16
and
jnp
inc
insb
mulps
bound
andps
mov
lret
pop
sbb
orb
mov
pop
hlt
push
mov
add
and
loopne
addb
aad
lods
out
pop
into
jb
jo
movl
cld
femms
enter
fsub
fcom
fildl
or
or
pop
jb
lahf
repz
test
fiaddl
pop
sub
jge
cmpl
mov
insb
mov
inc
pusha
add
xchg
dec
xchg
cmp
dec
sbb
mov
or
cld
mov
dec
inc
sub
imul
push
jg
cli
dec
std
add
cli
in
jecxz
adc
dec
inc
insl
or
xor
mov
add
cmc
cmp
icebp
ljmp
ret
dec
outsl
leave
pop
iret
test
popa
add
loope
bound
addl
push
fcoml
inc
cltd
inc
and
cmp
xor
xchg
test
arpl
and
pop
cwtl
adc
xchg
jp
sub
fs
fs
mov
mov
mov
sbb
sbb
and
jnp
movsl
inc
lret
xchg
mov
repz
movsl
test
pop
mov
cwtl
sbb
fsts
ret
arpl
cmp
inc
jmp
cs
mov
ret
and
es
push
imul
nop
pop
in
or
lret
test
cli
repnz
jge
lret
je
mov
pop
cmpsb
rclb
stos
inc
cmpsb
mov
sub
int
dec
fsubs
loopne
pop
in
loopne
push
jne
shlb
je
cmp
mov
or
scas
sub
les
add
mov
fdiv
fidivs
ret
inc
and
gs
fidivs
daa
loopne
jns
call
xchg
mov
ret
cmp
decb
popa
loopne
cli
cmp
xchg
pop
lock
lahf
sub
mov
ret
xor
shll
int
push
cli
pop
sbbb
shll
pop
dec
sub
movsb
loop
mov
movsl
xchg
std
roll
test
jg
and
mov
sbb
inc
dec
mov
push
call
mov
lret
insl
xor
inc
cmp
or
fidivs
sbb
fcoml
pop
loope
das
mov
adc
mov
sub
adc
aam
loopne
call
dec
vdivps
lret
mov
out
les
ficompl
jns
pop
cmp
or
mov
cmp
movsb
in
cmpl
out
scas
popf
sbb
push
inc
mov
mov
inc
cmpsb
jne
std
xor
insb
pop
pop
dec
lea
mov
mov
xchg
lea
cmp
mov
sahf
filds
push
cmpsb
js
add
popa
out
adc
outsl
push
lock
xor
pcmpgtw
pop
cmc
pusha
out
lret
mov
push
pushf
lods
je
push
or
movb
jae
sbb
leave
scas
stos
andb
jge
stc
mov
cmp
arpl
les
mov
push
dec
andl
mov
enter
push
push
pop
nop
dec
je
jo
das
add
call
out
push
mov
lea
mov
bound
out
mov
out
stos
mov
lret
mov
shl
mov
bnd
jle
repz
add
mov
les
movb
nop
cmpsb
popa
cld
dec
sti
xchg
dec
jne
and
stc
mov
ds
lcall
xor
pop
or
mov
lret
iret
mov
xchg
sbb
pop
das
mov
xor
pop
ds
mov
fistpll
pushf
scas
cltd
or
and
mov
or
jmp
rorb
ud0
cmp
js
jns
mov
call
push
adc
or
cli
push
sarl
jne
and
rcrb
xlat
mov
out
hlt
loop
imul
pop
insb
arpl
add
fisttps
test
add
inc
mov
cltd
test
xor
stc
pop
dec
jecxz
mov
push
leave
mov
imul
pop
js
mov
jl
les
loopne
pusha
jmp
stos
or
jnp
inc
jg
sbb
mov
fnstenv
add
mov
push
cmp
mov
dec
adc
and
push
in
lret
int
pop
lahf
mov
sub
mov
xor
je
ret
sub
loopne
cmovs
lds
loope
mov
and
sbb
mov
mov
fdivrl
sbb
dec
mov
or
xchg
outsb
pop
inc
add
mov
jle
dec
mov
movsb
popa
pushf
test
stos
sbb
xchg
fisubs
int3
mov
aaa
les
jmp
mov
dec
jl
adc
push
xor
push
dec
test
sub
and
loope
aas
pop
pop
mov
movsb
mov
xchg
dec
pushf
adc
xchg
and
mov
cmp
aaa
mov
adc
in
add
mov
xchg
xchg
inc
xor
pop
cmpsl
es
push
sub
xchg
jmp
mov
mov
clc
lock
jnp
jb
insb
lret
lret
lods
push
and
test
mov
cltd
dec
inc
dec
xchg
or
cltd
test
dec
dec
jg
ret
sbb
mov
lcall
nop
push
fcmove
movsb
popa
xlat
xor
jle
clc
pop
loopne
mov
imul
test
jno
test
pop
ss
push
lock
data16
aaa
push
sbb
cmp
sub
scas
sti
sbb
xchg
push
sub
pusha
push
jge
ds
ljmp
std
clc
mov
out
inc
or
mov
test
mov
inc
test
mov
xlat
fists
lret
adc
cvtpi2ps
lret
inc
xchg
and
inc
adc
dec
mov
adc
movsl
nop
adc
jg
jns
inc
inc
xchg
and
adc
cmc
xchg
pop
sub
mov
arpl
mov
dec
and
and
adc
test
sbb
cli
mov
mov
loopne
dec
shl
lret
xlat
lahf
mov
cmp
pusha
shr
data16
push
dec
add
xor
mov
mov
in
pop
inc
push
call
xor
xlat
cltd
insb
mov
call
jno
ss
push
mov
or
nop
fwait
mov
test
push
cmp
jnp
dec
push
fyl2xp1
dec
jmp
cwtl
pop
call
ljmp
sub
jge
fwait
inc
jbe
repnz
cmp
icebp
jmp
jbe
cmc
add
repnz
test
sbb
push
inc
sbb
cli
test
bound
es
rcll
test
rcrl
and
xor
add
add
inc
dec
je
shl
jne
fimuls
dec
adc
pop
adc
dec
mov
mov
or
sbb
pop
ljmp
pushl
inc
iret
xchg
js
bound
mov
xor
popf
cmp
and
nop
push
sbb
mov
sbb
xlat
outsl
rol
int3
push
cmp
enter
jns
sub
stos
xchg
push
mov
cmp
jp
inc
loopne
and
insb
enter
pushf
cmc
and
dec
insb
push
movsb
xchg
inc
daa
sbb
data16
xchg
mov
stos
xor
into
sahf
fadd
dec
pop
xchg
xor
cmc
pop
outsb
push
xor
xlat
cs
jl
fldenv
cmp
or
jno
iret
jp
lret
xchg
mov
idiv
movsb
sbb
xchg
aaa
outsb
fwait
cmp
pop
in
push
adc
pop
nop
popa
mov
gs
gs
mov
mov
dec
adc
das
xor
sub
sub
mov
cld
loope
lahf
test
mov
aam
inc
mov
ret
push
loop
out
and
push
cmp
mov
mov
bound
mov
mov
sub
fisubs
cwtl
inc
add
adc
sbb
dec
mov
jbe
andl
insb
dec
lret
mov
push
xorb
lock
les
mov
dec
scas
aaa
and
bound
xchg
mov
les
jl
mov
pop
sbb
inc
repnz
test
dec
cmp
in
in
mov
pop
ret
lods
int3
movsl
mov
dec
mov
cmc
fs
pushf
repnz
xor
jo
js
hlt
imulb
pop
pop
lds
lret
push
popf
jmp
push
add
sarl
iret
stc
or
sub
mov
push
lcall
ljmp
rcrb
jae
mov
ret
sub
fnstenv
rcrb
pop
decb
push
ss
fidivrs
push
inc
mov
in
mov
adc
and
cmp
pop
pop
and
mov
mov
pop
or
rclb
inc
repnz
fadd
ja
push
movsl
push
aad
push
aas
mov
dec
addb
stos
cmp
rcll
and
les
or
xchg
subl
push
and
les
sub
outsl
cmp
les
stos
push
mov
and
adc
inc
out
and
inc
fucomp
mov
sub
sub
adc
push
movsb
cwtl
imul
scas
sub
sbb
pop
daa
mov
push
or
mov
or
pop
jge
cmc
inc
cmp
out
xlat
in
xlat
in
cmp
lcall
repnz
stos
inc
add
lcall
call
cmp
cmp
dec
and
jp
dec
adcb
fdivs
je
scas
and
or
lldt
cmp
lds
mov
mov
lock
mov
cmpsl
gs
mov
or
mov
scas
cltd
push
sub
mov
stos
std
push
ret
mov
xchg
mov
lods
jp
sub
je
outsl
orl
hlt
and
sbb
xor
or
divb
aad
sar
mov
inc
fcoml
aaa
cwtl
jne
testb
into
jbe
aam
inc
and
add
filds
mov
xchg
sbb
icebp
jae
xor
lret
mov
xchg
jp
and
rol
jns
jnp
repz
dec
in
std
jbe
dec
sbb
andl
daa
movsb
push
es
or
lcall
das
outsb
cwtl
xchg
xchg
jnp
fsts
cmp
arpl
inc
daa
push
pop
jmp
fucomp
push
pop
or
xor
fcmovnu
dec
xchg
cmpsl
cmp
out
push
movq
int
mov
enter
add
popa
inc
inc
adc
add
leave
xor
loop
loop
jne
lret
or
test
subb
inc
pusha
negb
jmp
shrl
jo
jle
jecxz
popa
pminub
stc
gs
dec
xchg
dec
jno
lods
arpl
in
push
int
push
mov
mov
mov
inc
jmp
jp,pn
sub
fcompl
jmp
fistps
stos
test
test
jle
adc
adc
xchg
lds
mov
sarl
mov
pop
in
pop
jge
fnstenv
mov
jg
scas
push
test
scas
lock
cld
adc
es
pop
addr16
lret
jne
das
fisttps
cmp
cmp
sbb
iret
or
sub
mov
adc
pop
cli
add
lcall
cld
insb
push
insl
mov
int
and
mov
xchg
pop
icebp
sub
addr16
xor
in
outsb
ror
arpl
jns
stos
notb
push
clc
jmp
push
push
mov
and
dec
mov
sbb
mov
incb
mov
or
push
push
mov
pop
adcl
mov
push
int3
add
out
jbe
add
sub
cmpsl
mov
jp
pusha
mov
pop
lahf
adc
sbbl
out
lcall
inc
add
mov
cmpsl
fstl
mov
pop
popl
clc
mov
cmp
adc
sub
add
inc
pop
shl
xchg
test
paddw
sbb
mov
nop
jmp
je
mov
cmp
scas
mov
shr
jecxz
movb
or
add
cmp
add
jmp
test
movsb
sub
ds
xchg
mov
sub
mov
xchg
cmp
inc
punpcklbw
mov
push
mov
fidivrl
and
ret
in
int3
xlat
roll
pop
mov
popa
cmp
loope
scas
mov
leave
mov
shll
les
bound
fs
xchg
push
mov
add
ds
shll
loopne
sbb
cld
mov
sbb
pop
sarl
repnz
addl
mov
inc
mov
push
aaa
inc
call
fistl
adc
jle
cmp
movsl
scas
movsl
cmp
arpl
lds
lahf
pop
xchg
jp
ljmp
fimull
push
sub
adc
std
fwait
aam
aaa
out
pop
int
ss
lds
mov
ret
pop
int
sbb
or
pop
imul
pop
xor
shlb
rorb
mov
or
pushf
gs
ss
sbb
mov
dec
cld
ficomps
mov
call
dec
pop
push
fsts
mov
not
out
add
rcr
pop
mov
dec
pop
cmp
shll
in
mov
fstl
or
stos
dec
lock
jp
test
add
scas
outsb
in
push
out
lods
jne
xchg
mov
adc
std
div
jne
lea
adc
cbtw
add
push
push
les
adc
ret
enter
pushl
lods
dec
cmp
adc
fucomi
push
pusha
fisubs
loope
subl
or
shlb
xchg
push
pop
mov
ss
lods
mov
imul
mov
cmp
sbb
lea
adc
xor
sub
js
adc
stos
cmp
add
xor
aas
mov
enter
fcoms
fiaddl
or
bound
fbstp
mov
mov
push
sbb
in
mov
outsl
popf
test
and
popa
iret
sbb
rolb
into
inc
insb
lods
inc
or
adcb
bound
int
sarl
int3
xchg
xchg
xchg
scas
push
cmp
or
into
loope
rcrl
testb
or
call
je
adc
testl
leave
push
or
hlt
out
shll
inc
in
sub
sub
cmp
ljmp
push
pop
pop
clc
push
movsl
push
call
scas
icebp
into
jns
lock
add
repnz
add
adc
dec
dec
xor
push
xor
jnp
push
cs
sbb
out
cmp
dec
xchg
prefetch
loop
loop
sub
or
call
jmp
mov
sub
or
loope
pop
jle
and
lret
push
aad
push
or
js
stos
pop
je
xor
mov
jmp
mov
fisubrs
cltd
cmp
lods
sub
inc
int
sub
daa
dec
mov
imul
fwait
xchg
mov
inc
nop
popa
push
mull
fadds
lret
jmp
mov
incl
xchg
imul
push
pop
jns
inc
mov
adc
inc
sub
je
xchg
lock
je
add
push
cmpsl
pop
fildl
insl
addr16
add
ljmp
push
jle
out
addr16
cmpsl
push
xor
push
jmp
popf
xchg
mov
cmpsl
cmp
xchg
adc
pop
sarb
fisubrl
stos
jb
ss
outsl
cmpb
fwait
lidtl
add
mov
push
jle
add
dec
jnp
and
cltd
call
sbb
xlat
repz
pop
xchg
push
push
mov
icebp
jbe
aaa
es
cmp
scas
adc
inc
inc
out
pop
aaa
je
add
mov
or
xor
cli
ret
or
jmp
jae
dec
inc
mov
imul
xor
and
mov
loop
and
jns
test
dec
lods
addr16
into
xor
push
xchg
lods
mov
pop
popf
push
mov
cmpsb
sarl
mov
or
mov
mov
in
ss
xor
ret
pop
mov
xchg
pop
xor
jp
out
xchg
test
push
stos
data16
insb
dec
ds
cwtl
daa
pop
mov
aam
push
and
xchg
dec
sbb
lods
clc
lods
mov
sbb
movsl
mov
add
lock
jbe
lcall
lret
add
mov
jl
xchg
pop
outsl
mov
addb
mov
roll
fidivrl
sub
pushf
mov
mov
adc
je
sbb
es
sub
stos
in
adc
inc
loopne
bound
cltd
inc
or
mov
xchg
mov
pop
cmp
mov
or
test
mov
push
rcll
icebp
cmp
movsl
push
adc
adc
fisttpll
jmp
jae
jno
inc
jge
pop
arpl
and
inc
faddl
xlat
ret
xchg
jne
arpl
je
iret
pop
ror
mov
rcll
lahf
sbb
scas
xchg
jp
mov
dec
sub
mov
sub
xor
mov
inc
jno
insb
fcom
xor
test
push
push
cmc
pop
add
pop
cld
adc
ficomps
je
and
cmc
iret
pop
mov
cmp
jmp
xchg
inc
out
fs
jecxz
dec
es
dec
push
inc
fs
clc
add
fnstcw
mov
fsubp
push
mov
iret
mov
test
test
cmp
xor
jno,pt
outsl
rolb
sub
mov
or
inc
cwtl
stc
xor
loopne
jp
jmp
addl
mov
mov
mov
mov
mov
mov
xor
mov
repz
lods
clc
xorl
or
ja
dec
sbb
push
xchg
pop
cmpl
es
stc
xchg
bound
aad
imulb
shrl
pushl
nop
add
mov
jg
sub
jo
insb
inc
je
dec
andl
xchg
xor
xlat
inc
add
in
jge
popl
inc
outsl
xchg
mov
jp
icebp
out
pop
jl
xchg
push
shlb
ret
rolb
inc
xchg
out
dec
push
pop
pop
repz
int
stos
leave
xchg
xor
loope
jo
ja
or
mov
cmpsl
jne
xor
jmp
cmpsb
and
fsub
jle
clc
stos
mov
sbb
insb
cmp
mov
jnp
jo
inc
popa
xchg
ja
shlb
ljmp
addl
pusha
xorb
jb
sub
gs
xor
lcall
xchg
sub
mov
out
cltd
mov
jnp
jno
jge
frstor
adc
cmpsl
iret
and
dec
sbb
jnp
pmaxsw
mov
lea
jb
push
cmp
imul
and
and
jbe
cmp
sub
mov
dec
mov
rcll
and
sti
loope
pop
movsb
xchg
das
lahf
rorl
cmc
into
scas
and
or
movl
mov
jno
sbb
insb
cltd
fadds
sub
inc
jae
test
mov
xor
into
dec
add
and
mov
movsl
daa
add
aam
lea
repnz
cmpsl
or
lahf
into
movsb
loope
subl
mov
add
dec
rorl
bound
xchg
in
inc
xor
repnz
inc
add
pop
scas
inc
fcomi
sub
mov
lds
mov
fdivl
push
orb
cli
pop
stc
cmp
add
sarb
inc
sbb
add
xor
int
xor
icebp
aad
hlt
cmp
push
nop
cmpsb
insl
mov
repz
mov
lock
out
pop
mov
cltd
jns
mov
sub
mov
lods
test
sbb
out
lahf
push
jg
mov
shrb
icebp
mov
rcll
jge
push
or
gs
dec
mov
cmpb
pop
xchg
out
xchg
xchg
jge
sub
adc
lcall
xchg
movsl
jo
js
repz
jne
icebp
inc
mov
enter
and
xor
inc
rcrl
fbstp
insb
sahf
pop
inc
dec
mov
push
mov
addl
mov
mov
add
cmp
and
xchg
sbb
jmp
push
enter
sbb
inc
mov
daa
out
stos
or
fwait
mov
dec
lea
aam
mov
lds
push
loope
sbb
mov
dec
adc
inc
aas
jnp
mov
push
dec
movsb
popf
icebp
and
push
or
inc
jo
sahf
adc
xlat
fadd
sti
cmc
add
cmpsb
pop
inc
push
jb
negl
test
pop
sbb
imul
or
fistps
sub
mov
addl
sub
mov
push
jno
pop
mov
jl
mov
xchg
push
in
mov
out
cmp
xchg
insb
or
sub
dec
mov
cltd
arpl
test
inc
popf
scas
inc
sarl
cmp
fisttpll
xchg
iret
mov
jnp
and
decl
rorl
mov
add
in
xchg
test
or
and
sub
popa
and
in
ljmp
std
insl
imul
hlt
xchg
test
add
xchg
sar
push
inc
jb
sbb
push
add
jb
arpl
rcrl
rol
and
loope
cwtl
dec
sbb
lods
fucomp
push
out
xor
inc
mov
loopne
repnz
dec
or
mov
rorl
jecxz
hlt
je
pop
loopne
sub
mov
add
into
enter
mov
dec
cmp
out
fcoml
arpl
pinsrw
loopne
pop
rolb
mov
loope
fcoms
daa
xor
lods
lcall
mov
popf
adc
sub
popa
movsb
mov
ds
sahf
les
fidivrs
pop
jge
or
imull
xchg
adc
test
or
das
imul
sbbb
test
and
lock
les
lds
pop
and
popf
sbb
cs
out
jl
popfw
and
and
xor
fists
mov
and
jg
sbb
add
clc
fsubs
sbb
out
jecxz
add
cmp
ja
data16
movsb
sbbl
mov
add
loope
popf
out
jno
in
sbb
dec
fcomip
pop
adc
shlb
or
mov
xchg
add
push
sahf
and
stos
xlat
imul
sub
js
rorl
ficompl
hlt
sbbl
push
mov
pop
lds
sub
jmp
adc
pop
in
lahf
sahf
fisubl
or
jmp
repnz
out
cmp
push
sbb
dec
jg
push
pop
mov
mov
mov
lahf
add
push
mov
in
dec
mov
test
push
jp
clc
xor
cmpsb
lahf
sub
cmpsl
sbb
daa
mov
mov
sub
sub
lods
fnstsw
adc
and
into
je
jbe
mov
add
insl
nop
cmpsl
jl
notl
dec
aad
daa
push
mov
stc
aad
clc
mov
push
js
in
aas
outsb
inc
cs
adcb
test
imul
enter
nop
or
cmp
sub
xor
inc
or
popa
outsb
push
xchg
loope
xchg
cmp
sub
das
pop
leave
leave
mov
rclb
inc
mov
xorl
sbb
dec
movsb
dec
mov
add
loope
mov
dec
jb
js
mul
notl
jmp
mov
cmp
sbb
push
dec
mul
fstpl
insb
dec
imul
das
and
push
popa
test
jae
dec
rolb
xor
adc
mov
lcall
mov
mov
cmp
or
jnp
insl
or
jl
xor
cmp
ja
dec
adc
lods
mov
sub
pop
call
and
pushf
cmovp
lea
aaa
ss
lcall
push
and
sti
stos
mov
loop
in
pushf
cld
sti
adc
cwtl
mov
or
icebp
arpl
lods
jbe
sahf
mov
and
add
xchg
scas
in
sub
push
pushf
xchg
jnp
sub
addr16
lret
mov
fimuls
sti
in
std
cmp
mov
lret
js
or
or
addr16
push
jo
iret
xor
pop
and
les
mov
jmp
sti
mov
push
aad
pop
mov
jb
aad
mov
cmp
jl
imul
adc
mov
dec
call
cltd
mov
sub
xlat
mov
ret
adc
and
lahf
repz
pop
mov
out
rcrb
jno
cmp
sarl
jo
pop
jo
ljmp
arpl
lahf
les
sbb
or
imul
sub
mov
adc
xchg
sbb
cmp
inc
jbe
cmc
fldcw
sbb
ret
xbegin
hlt
sbb
add
adc
jns
jnp
and
mov
fstps
mov
cmp
cmp
push
jb
jmp
sub
pop
aas
xor
jecxz
add
push
cltd
mov
add
xchg
cltd
sub
idivb
aas
inc
mov
mov
xor
pop
out
add
jbe
jo
mov
adc
sub
pop
xlat
iret
repnz
mov
je
addr16
mov
jno
roll
mov
cmove
lds
insl
add
leave
aas
pop
bound
lret
orb
out
mov
sbb
pop
popf
sub
jns
fsubrs
bound
mov
fwait
dec
add
xchg
sub
sbb
add
jge
mov
and
pusha
mov
lahf
xchg
in
int
sbb
add
sub
jmp
push
enter
addr16
mov
sbb
jecxz
mov
adc
dec
inc
out
and
insb
unpcklps
xor
mov
repz
cmpsl
push
in
xchg
pop
mov
xor
mov
cwtl
scas
loop
pop
outsl
and
stc
add
mov
ja
pop
lcall
adc
ret
ljmp
pop
bound
rolb
mov
dec
jl
popf
sbb
icebp
mov
add
aam
sub
mov
lods
dec
xchg
sub
leave
mov
fwait
fwait
dec
in
mov
or
mov
xchg
jg
or
scas
addr16
out
or
ja
xor
jae
mov
les
pushf
and
adc
aam
sbb
dec
cli
adc
and
xchg
ss
ficompl
je
mov
call
leave
les
dec
loop
or
lock
lds
cwtl
cltd
in
es
outsl
clc
mov
das
inc
add
pop
mov
insb
pop
movsl
push
inc
pushf
dec
pop
add
out
xchg
rcr
jb
imul
dec
gs
cmc
inc
mulb
jbe
stc
enter
les
cli
cs
stos
and
inc
xor
cmp
cmp
jmp
popa
popa
xor
cmpsb
push
xlat
movsb
fs
push
je
jecxz
dec
addr16
pop
lcall
imul
imul
addr16
and
pusha
push
call
iret
rcrb
mov
mov
nop
pop
rcll
or
out
aas
dec
jle
inc
int
lds
mov
stc
mov
mov
lds
xchg
pop
and
push
and
stc
jmp
out
out
jmp
daa
and
into
mov
sbb
cwtl
movsb
insb
pop
mov
inc
sahf
or
mov
or
push
jbe
clc
mov
jne
lahf
pop
out
jl
sbbb
xor
lods
sub
mov
daa
push
adc
gs
add
lcall
fildll
dec
mov
clc
mov
icebp
jo
inc
xchg
scas
xchg
mov
sub
jg
ror
call
fwait
mov
daa
inc
push
dec
fs
cmp
testb
jno
xchg
out
js
fistpl
push
jl
out
in
push
push
rcl
sti
mov
int
mov
inc
jg
aas
mov
inc
add
stos
loope
loopne
jnp
mov
shrb
xor
xor
fwait
fs
and
and
and
add
dec
jecxz
xchg
mov
pop
negb
push
test
lock
cwtl
xor
pusha
xchg
mov
out
hlt
mov
sub
shrb
add
call
arpl
jg
mov
fsubr
cmc
outsb
cmp
jp
dec
iret
ss
arpl
adc
in
pop
aad
dec
sub
out
popa
lods
inc
mov
jbe
aam
cmpsl
sahf
int
imul
pusha
adc
mov
insb
xor
adc
pop
pop
les
xchg
jecxz
incl
pop
cmpsb
icebp
push
out
push
push
mov
shll
jnp
lea
ds
in
mov
loop
iret
inc
and
sbb
dec
popf
cmp
insl
mov
xchg
movsb
xchg
test
cltd
in
scas
out
aam
out
jmp
test
xor
fadds
test
pop
push
stos
cmpsb
in
adc
inc
aas
pop
fsubr
xorb
dec
das
les
sbb
cltd
lret
or
xor
outsb
lcall
push
into
push
loopne
mov
fisttpl
mov
and
clc
and
mov
adcb
xchg
push
inc
je
cmc
loope
nop
pop
mov
cli
cmp
out
ljmp
lret
mov
pop
lods
js
in
or
enter
out
inc
jo
xchg
mov
cmp
dec
lea
scas
test
sahf
pop
jb
jge
fistpl
mov
sti
inc
in
push
or
push
mov
subb
mov
inc
push
xor
call
ljmp
or
sub
add
test
mov
lret
dec
jecxz
xor
pop
xor
jne
cmp
aaa
jp
lea
mov
pop
sahf
push
mov
jnp
cld
cwtl
icebp
out
fadds
and
int3
enter
imul
pop
add
mov
fs
push
push
sbbl
sar
lods
out
fdivl
adc
stos
cmpsl
test
es
aaa
mov
sbb
scas
adc
movsb
jb
lods
ds
push
gs
jle
dec
pop
add
cmp
push
jge
or
xchg
lock
cmp
icebp
sub
jne
push
pop
fs
dec
pop
loopne
pop
out
jne
push
xchg
pop
inc
stc
sti
into
stos
and
insb
mov
push
iret
or
mov
loop
xabort
pop
add
dec
push
cwtl
popf
and
jl
lcall
xor
nop
jns
ljmp
add
test
mov
or
ljmp
pop
jmp
dec
pop
lcall
fwait
shll
mov
enter
or
mov
jl
loopew
pop
addl
or
push
or
cmp
flds
stos
aaa
mov
push
insb
jl
es
add
add
clc
fs
or
cmp
ret
adc
dec
mov
sub
shll
sub
imul
mov
jae
xlat
mov
jmp
rol
repnz
sbb
xchg
sub
cmp
jns
ret
inc
xor
inc
add
xchg
xchg
jne
add
adc
shl
lret
sbb
mov
out
lea
xchg
dec
and
mov
or
mov
packssdw
cmp
test
or
cmpsl
pop
mov
jg
mov
iret
pop
pop
in
sub
test
cltd
cwtl
lods
cmp
cltd
pop
fdivl
lret
mov
mov
test
sar
int
mov
rorl
mov
sub
aad
add
mov
sahf
mov
xchg
cli
inc
dec
test
jge,pt
jb
pop
jle
cmpsb
xchg
jbe
jle
lods
aad
cmp
in
mov
or
cmpl
push
in
fcoml
in
fisubrl
mov
ja
imul
cmp
xor
pushl
sbb
mov
push
sahf
aaa
enter
push
in
rorl
or
or
scas
cmp
dec
mov
pmulhuw
or
scas
xor
test
adc
stc
jge
xchg
push
sbb
push
mov
pop
jo
pop
data16
outsb
xchg
or
lods
mov
inc
add
fs
test
out
scas
cmp
inc
mov
fisttps
pop
jecxz
enter
sbb
xor
gs
addl
add
out
in
or
pop
dec
hlt
stos
push
xchg
and
push
and
adc
xchg
gs
iret
mov
popf
das
xchg
mov
mov
sub
fmuls
jns
lods
daa
mov
mov
pop
push
mov
icebp
mov
dec
outsb
mov
out
stos
inc
js
sbbl
mov
sub
push
gs
push
dec
pop
mov
inc
xchg
aas
sahf
sub
int
and
push
in
pushf
call
mov
and
sub
outsl
movsl
fnstsw
lret
movsl
add
jno
mov
aam
cmp
js
fnsave
arpl
sub
hlt
ret
jo
xchg
or
int
jmp
sub
xor
frstor
ss
cli
xor
hlt
test
js
jp
xchg
mov
out
pushf
mov
xor
or
add
jg
xchg
test
cmp
nop
sbb
call
xchg
push
mov
pop
jmp
mov
mov
pop
andb
mov
mov
jb
sbb
bound
imul
jle
repz
jne
cmp
dec
mov
inc
test
push
push
adc
or
mov
cmp
fnsave
jl
xor
das
int3
sub
mov
mov
push
jmp
cmp
in
cmpsl
lea
sbb
mov
int
outsl
pop
mov
rcll
inc
xor
mov
andl
popf
test
jl
sbb
aas
das
mov
push
aad
and
mov
push
inc
cmp
pmuludq
jle
popf
cmp
mov
mov
ljmp
pop
dec
leave
xlat
jnp
and
sbb
loop
mov
popa
shll
outsl
aas
cmpb
sbb
test
lret
sub
imul
adc
nop
arpl
mov
push
out
xlat
dec
dec
imul
ss
sbb
sub
jnp
dec
mulb
adc
cmp
les
xor
jns
sbb
cmp
add
push
insb
sbb
mov
push
sub
or
jne
lods
fnstenv
mov
shl
lret
jle
rcr
iret
xchg
mov
rolb
outsb
inc
iret
ljmp
and
sub
lea
add
shrl
lds
sbb
testb
cmpl
cs
out
sub
addr16
das
out
movsl
insl
bound
ret
xchg
cltd
or
sahf
iret
int
sub
mov
rorl
aam
arpl
sub
xor
fcompl
lret
mov
outsl
insb
loop
push
in
fcmove
aaa
and
pop
dec
push
adcb
out
test
cmp
lcall
shr
mov
cmp
das
aam
repz
mov
inc
xchg
add
xchg
inc
nop
fldcw
fwait
mov
push
lcall
fdivr
je
xchg
movsl
pop
out
rcrl
in
push
dec
daa
jbe
xor
mov
pop
sbb
xor
out
bswap
mov
cmp
xchg
scas
cld
fwait
leave
add
add
sbb
xor
js
lods
sarb
mov
mov
jge
cmp
je
stos
nop
push
test
rclb
cmpsb
jge
jne
xor
stc
ja
and
aaa
cmpsl
shl
mov
cmc
push
sti
lahf
xchg
lods
mov
imul
outsb
cmp
sub
in
repz
xchg
lcall
push
addr16
mov
jp
fiadds
mov
fisubrl
cs
cmp
and
sbb
jp
lret
mov
lds
jae
and
mov
imul
nop
arpl
inc
jl
cmp
and
into
rcll
fdivl
push
cltd
push
sbb
xor
fidivs
mov
push
bound
fiadds
xor
mov
imul
adc
fidivs
sub
cmpsb
add
dec
sbb
cmpsb
pop
xchg
sub
lods
lea
insb
iret
jns
and
lods
mov
mov
sbb
pop
and
test
xlat
mov
push
or
shll
sub
outsl
mov
or
pop
lea
xorb
shll
xchg
jle
xchg
inc
add
lock
out
mov
mov
jne
test
cld
jno
adc
jge
fnstenv
movsb
aam
cmp
inc
stc
lds
mov
ds
dec
ror
imul
push
xchg
ds
std
pop
xor
repz
rcll
adc
daa
xor
test
pop
repnz
inc
pop
or
inc
adc
call
je
rclb
lods
xor
orb
xor
insb
or
imul
mov
mov
in
jno
xchg
fwait
jmp
xor
cmp
int
push
scas
and
mov
mov
jecxz
adc
pop
pop
sub
add
fisttps
je
xchg
pop
fdivrs
movsb
sbb
push
fisttps
cmp
add
adc
gs
lock
cmp
test
faddl
sar
cmp
xorl
aam
pop
mov
lahf
outsb
adc
insb
test
les
movb
jp
filds
push
stos
arpl
pusha
icebp
push
mov
in
fs
pusha
rorb
mov
imulb
sub
jmp
push
jle
add
out
cs
pusha
enter
adc
mov
leave
push
repz
jle
fsts
int
mov
movsb
cs
and
aam
fucomp
push
xor
xor
popw
mov
stc
lods
mov
mov
pop
xchg
push
pop
mov
mov
inc
out
mov
push
push
out
imul
dec
jb
int
mov
int3
push
push
pop
mov
xchg
addr16
fldenv
push
adc
out
into
addb
mov
rcll
mov
cmovae
xlat
cmc
aad
frstpm(287
rcrb
out
pop
jno
fldln2
push
mov
subl
jno
pop
sbb
mov
jnp
lret
sub
sbb
data16
add
aaa
or
or
mov
popf
jno
stos
sarb
ss
in
xor
andb
xor
test
subb
fsubrl
dec
xor
stos
mov
lcall
jmp
dec
mov
xor
jns
adc
imul
xlat
cmp
pop
outsl
mov
and
mov
or
in
cli
adc
dec
xchg
mov
fcom
mov
mov
lods
dec
stc
xor
fwait
inc
loopne
push
push
aas
cwtl
inc
inc
dec
popf
inc
fnstsw
jl
or
popw
or
pushf
inc
pop
mov
arpl
les
icebp
adc
pop
ret
movsb
mov
inc
fwait
mov
fstpl
rcr
sbb
loop
mov
xor
push
and
push
xor
test
cltd
dec
loopne
cmp
xchg
sti
sbb
jne
sbb
xchg
lods
leave
je
jmp
xor
cmp
adc
aad
cmp
loopne
mov
leave
push
cwtl
push
or
inc
cmp
arpl
out
int
lret
out
cmp
fiaddl
cmpsb
bound
lock
mov
dec
jmp
sbb
mov
ds
faddl
stos
inc
fildll
dec
out
xorb
movsl
or
jne
jbe
daa
arpl
adc
jmp
lods
gs
mov
stos
mov
adc
or
mov
cmp
pop
imul
dec
jnp
or
sub
iret
test
jecxz
pop
out
mov
sahf
sbb
int3
movsb
sbb
clc
jg
xchg
outsb
mov
mov
lret
inc
out
add
scas
cmp
icebp
call
push
fsubs
mov
jg
js
push
fsubl
pop
cmpsb
mov
or
mov
fisttpll
or
add
stos
or
jnp
fcmovnu
xchg
jl
cmpsl
int3
or
or
test
mov
dec
cwtl
inc
js
sbb
out
aaa
pushl
dec
dec
loope
dec
das
sbb
fildl
movsl
sub
cli
lahf
xor
adc
insb
jecxz
xchg
cmpsb
fcom
je
adc
stos
scas
push
xor
nop
lea
add
cmpsl
push
mov
clc
fsubs
adc
jp
mov
jae,pn
mov
stos
inc
pushf
adc
cmc
js
loop
cwtl
arpl
or
out
mov
mov
pop
and
fs
xchg
or
pop
push
cmc
out
sub
xorb
mov
push
inc
insb
push
xchg
lret
movsl
pop
lret
pushf
insl
pop
jl
adc
sub
fs
sarb
inc
sbb
dec
xor
daa
dec
push
cmp
jne
out
sub
fimull
cmc
jnp
mov
cmp
testl
popa
jb
call
stos
adcl
test
xchg
scas
or
xchg
xor
and
pop
dec
rcrl
jbe
in
cmp
mov
inc
inc
sbb
jne
dec
jge
int
pop
adc
lock
sbb
lcall
add
imul
into
cs
ret
in
jl
push
adc
cmp
and
xchg
lea
xchg
sub
movsb
out
or
sahf
ret
dec
outsb
adc
mov
xchg
or
push
sarb
push
xchg
push
push
cmp
pop
jb
lea
ret
je
jl
xrelease
out
cmp
cmp
sub
les
dec
shrd
add
push
sahf
testl
scas
roll
sbb
or
ja
fmuls
sub
loopne
mull
out
or
cmp
mov
xchg
inc
adc
inc
sbb
loopne
xor
sub
mov
divl
mov
call
lea
or
cmpsl
and
xor
in
push
lods
adc
ret
sbb
rol
sub
xor
pop
loopne
ss
push
scas
mov
mov
leave
xchg
sub
mov
adc
mov
scas
mov
sbb
pusha
sbb
mov
cltd
pop
sbb
rcrb
adc
cwtl
pop
add
ret
rcrl
and
adc
mov
dec
outsl
cmpsl
lahf
cld
std
xchg
sbb
int
push
sti
ds
sub
push
scas
dec
xor
or
adc
lret
inc
out
jmp
fisubrs
xorb
fwait
inc
loopne
mov
movsb
or
mov
int
xchg
rorl
sub
ret
and
outsb
popf
xchg
popa
jne
stc
pop
push
and
add
popa
mov
add
shlb
sub
jge
sub
dec
pushf
lahf
int3
fstpl
and
shlb
dec
or
mov
xor
in
sbb
lods
test
mov
sbb
cmp
pusha
test
lret
ss
icebp
xor
jns
roll
out
push
xchg
loopne
out
daa
xchg
inc
or
pushf
push
jno
ss
add
push
adc
movb
pushf
das
sahf
insb
scas
inc
inc
jns
sbb
mov
insl
add
movsl
and
rcrb
je
pop
or
fstpt
xor
xor
xchg
lds
imul
cs
fidivl
mov
fsts
push
pextrw
cltd
inc
hlt
enter
mov
add
int3
mov
dec
lahf
cmp
arpl
scas
or
and
out
nop
mov
test
adc
idiv
sbb
aad
divl
adc
fcmovnb
and
lcall
std
adcb
jge
mov
lds
or
mov
dec
testb
lcall
mov
xchg
fisttps
insb
loopne
dec
pop
dec
inc
add
lahf
push
mov
stc
jle
or
inc
sbb
popa
lret
ror
pop
inc
fcompl
ja
call
ljmp
sub
imul
lods
andl
fisubrs
cmp
pushf
mov
jmp
jbe
dec
aam
out
dec
fisttpl
mov
in
adc
xor
xchg
and
cs
pop
push
dec
mov
imul
mov
pusha
imul
xchg
out
cltd
adc
cld
push
negl
push
sub
cmp
js
xor
mov
adc
in
ret
jns
cli
ror
xchg
outsb
inc
cld
sarb
inc
cmpsl
iret
jecxz
mov
push
mov
movsl
or
sub
outsl
cmovne
ror
loopne
in
mov
test
sbb
push
sub
insb
rcr
jmp
dec
jg
push
jle
cmp
in
and
fisubs
repz
jmp
pop
imul
popf
or
mov
cmp
lock
sbb
int3
jnp
inc
stos
or
addr16
push
adc
mov
mov
cmp
iret
jg
daa
xchg
push
stc
jge
aam
mov
fmuls
adc
inc
pop
mov
add
pop
cwtl
and
mov
cmp
lock
ret
out
xlat
ja
call
call
lock
fwait
mov
pushf
pop
jmp
pop
pop
sub
sahf
mov
adc
mov
jmp
in
inc
adc
es
fcomps
ljmp
sarb
xor
jg
cmp
push
bnd
cld
mov
lods
stc
test
jecxz
push
push
inc
sarb
xor
out
adc
outsl
arpl
xlat
loop
mov
mov
dec
adc
jmp
cmp
mov
pop
out
fs
mov
lret
cmc
cli
xor
mov
and
mov
mov
pop
jge
data16
roll
cmp
and
mov
mov
aam
cmp
jecxz
mov
push
in
push
clc
or
push
imul
fs
ficoml
outsb
jo
jl
aas
clc
push
mov
inc
pushf
jg
popa
sub
mov
or
rcr
icebp
add
jecxz
lcall
jge
loop
rcrb
nop
stc
pusha
mov
add
mov
or
imull
add
or
xor
leave
dec
mov
mov
sub
sarl
mov
sbb
scas
xlat
cmc
nop
xchg
bound
sbb
sub
jae
xchg
jecxz
xchg
sbb
add
ret
jbe
cmpsl
push
xor
xchg
scas
or
lods
xchg
into
mov
add
or
fsubl
sub
and
mov
push
inc
dec
xor
subb
push
addr16
xor
sbb
jp
cwtl
push
lods
mov
lret
pusha
sub
mov
movsl
xor
inc
mov
mov
jmp
mov
pop
fdivrs
cmp
clc
repz
inc
fiadds
sbb
bound
clc
ja
int3
cltd
fs
xchg
lahf
addr16
fsts
fwait
jl
add
fldt
cmpsl
in
sti
scas
jle
or
push
cld
pop
aaa
orb
push
clc
inc
lea
adc
repnz
cmp
enter
mov
xlat
lods
jo
jle
jecxz
sbb
push
mov
ficoms
dec
loopne
mov
cwtl
cmp
jl
jb
xchg
xor
popf
pop
and
scas
mov
and
call
inc
xor
out
adc
push
or
in
test
out
hlt
fwait
inc
or
and
mov
je
sbb
mov
ds
cmp
icebp
outsl
in
mov
fistpl
gs
mov
std
ja
jl
popa
push
cmp
xlat
cmp
pop
es
lods
outsl
sti
xchg
outsb
jle
aas
dec
mov
loopne
movsl
push
push
and
add
xchg
xlat
dec
ds
idivb
cwtl
cmp
bound
sub
pop
lods
jae
pop
xor
stos
push
sti
insb
sarb
scas
es
jp
pop
inc
aas
and
divl
imul
jl
pop
mov
retw
xor
addr16
enter
push
jno
int3
adc
call
scas
cli
out
jg
cmc
xchg
push
ljmp
out
loope
jmp
xlat
pop
fcoml
cmc
leave
pop
adc
push
sbb
into
insb
xor
jno
add
sahf
js
xor
fidivrs
mov
and
sub
hlt
or
stc
mov
mov
pop
lret
and
fnsave
out
mov
add
daa
inc
js
aas
std
dec
lds
cmc
add
xchg
cld
lahf
dec
ds
out
icebp
fmull
lret
mov
xchg
jmp
inc
repnz
jecxz
pop
stc
lea
out
icebp
pop
ljmp
jb
dec
pop
add
lret
std
jae
bnd
fidivl
jmp
sti
add
push
lahf
stc
cmpsb
or
mov
aam
cmpsl
xchg
ret
pop
out
pop
xor
jne
movsl
jg
pop
pop
push
pop
lea
int3
mov
loope
mov
std
xchg
dec
stos
insb
pop
lds
push
rcrl
inc
xchg
movsl
mov
js
pop
repz
or
fsubr
pushf
das
fisubs
insb
push
repz
mov
jp
rcl
scas
int
and
push
sti
xchg
pusha
add
inc
mov
pop
sahf
lret
xchg
shlb
push
repz
mov
std
aaa
pop
loope
iret
push
jbe
pop
dec
cmc
adc
in
in
shlb
mov
lea
mov
rcrb
push
mov
test
xor
mov
xor
mov
mov
ja
inc
add
fsubrs
pushf
cltd
scas
jl
and
and
sbb
adc
fimuls
cmpsl
bound
les
jl
scas
xor
psubusw
repnz
rcl
push
dec
mov
jg
jp
dec
cld
xor
xor
in
jno
jbe
push
add
cli
dec
hlt
jo
aad
pop
sbb
mov
mov
jmp
pusha
mov
lret
mov
push
sub
ret
jb
add
je
add
mov
fsubs
movsb
cmp
fcmovne
icebp
mov
push
pusha
fisttpll
scas
imul
lret
mov
pop
inc
or
dec
push
clc
sbb
sbb
aas
sub
out
iret
cmp
dec
cmp
push
jne
int
ret
and
inc
xchg
outsb
pop
stc
cmp
push
xchg
or
in
insb
rolb
cmp
loopne
dec
neg
call
lds
in
ret
loop
stc
add
lcall
dec
push
xor
dec
daa
stc
pop
fnstsw
xchg
setg
mov
lea
pop
inc
mov
mov
mov
iret
add
xchg
hlt
insl
push
sub
loope
dec
push
int
nop
mov
aam
sbb
cmp
mov
iret
pop
loope
pop
test
mov
push
lret
out
hlt
into
adc
movsb
out
aas
imul
xchg
mov
int3
mov
testb
daa
jecxz
sbb
fstl
test
mov
cmpsb
imul
pop
hlt
and
in
push
data16
push
cmc
cmpsl
stc
sub
add
add
or
xchg
xlat
lods
mov
pushf
enter
cmp
cld
addr16
mov
out
push
mov
into
adc
dec
fisttps
xchg
insb
mov
outsl
add
and
sub
sbb
gs
dec
lods
repz
fiadds
pushl
pop
cmp
sti
lcall
or
inc
out
and
hlt
dec
ficoms
bound
lea
push
adc
mov
mov
dec
mov
push
sub
scas
jp
push
sbb
inc
lret
iret
mov
jb
fcmovu
out
sub
daa
mov
mov
cmp
pop
pushf
cli
sti
push
imul
fnstcw
outsb
je
cld
adc
xor
in
enter
sub
and
stos
mov
aam
sub
fidivrs
call
fbstp
scas
arpl
sub
movsl
pop
loop
imul
adc
add
lahf
and
push
xor
movsl
pushf
cli
cwtl
insl
sar
fnsave
aaa
sub
out
inc
fcompl
aaa
sub
loop
xchg
shr
das
or
cmp
push
rcr
jns
xchg
shrl
enter
arpl
ds
jecxz
ss
adc
push
je
lahf
add
in
ret
lret
mov
call
jle
out
in
xchg
lret
add
jnp
or
notl
out
inc
add
stos
cmp
fbstp
jge
loop
xchg
inc
sub
enter
push
add
push
push
nop
rcll
mov
filds
out
cmp
imul
sbb
loop
js
push
mov
in
push
int3
dec
sub
call
popa
push
adc
or
out
insl
or
ret
pop
in
lcall
and
fbstp
or
pop
and
shrl
adc
test
rcrl
pop
mov
movsl
sub
cli
mov
xchg
push
lahf
test
cmp
negb
jl
mov
and
mov
xlat
addr16
add
push
imul
xchg
shll
loope
repz
adc
dec
scas
in
lret
mov
cmp
xor
out
rolb
fs
xlat
pushf
iret
pop
mov
jge
lret
out
fwait
out
out
movsb
xor
mov
and
cltd
adc
repz
jle
or
dec
cmp
cmp
loopne
mov
dec
addr16
outsl
push
add
xor
je,pn
add
stos
fwait
mov
xlat
in
sarl
movsb
mov
mov
xchg
repnz
sub
cld
jg
popf
and
movsb
insb
je
clc
in
push
lock
out
imul
and
mov
shrl
ja
incl
add
push
or
and
dec
fsubrl
push
push
xchg
sub
or
sub
push
enter
xchg
add
ja
mov
clc
dec
shll
xchg
stc
mull
cmpsb
mov
cmp
add
mov
or
inc
or
inc
inc
dec
push
mov
or
jecxz
test
in
xchg
xchg
mov
inc
scas
xor
mov
adc
lret
cli
mov
add
dec
shrl
imul
sub
xor
cmpsb
jg
push
dec
stos
dec
mov
movsb
sar
shll
movsl
lds
imul
cli
dec
xor
insb
std
dec
test
push
repz
les
pop
mov
adcb
dec
add
notl
mov
test
sti
mov
mov
sub
add
cmp
mov
inc
out
jne
jo
hlt
xchg
adc
daa
mov
mov
jo
insl
out
jmp
jo
adc
aad
or
sbb
stos
lcall
roll
cli
push
mov
sub
stc
scas
les
xlat
xor
and
adc
ret
xor
cmp
sahf
add
mov
push
sbb
ret
fidivl
pushl
lea
daa
mov
jg
test
mov
pop
fidivrs
push
sub
pushf
inc
and
in
fs
scas
mov
call
or
add
lods
jnp
movsl
xchg
lds
fsubr
adc
push
adc
cs
jecxz
add
mov
and
scas
incb
movb
push
sbb
nop
mov
leave
mov
inc
inc
adc
movsl
ja
jp
ror
xor
lock
mov
sbb
push
std
mov
pop
movl
push
leave
test
push
hlt
sub
pop
and
sub
jmp
and
jno
xchg
js
call
xchg
lret
inc
adc
xchg
mov
fs
insl
or
push
add
adc
popf
test
jg
stc
push
xchg
sahf
inc
imull
enter
push
ljmp
ljmp
sar
and
gs
xchg
mov
mov
inc
jg
mov
sbb
xadd
mov
cmp
stos
xor
or
arpl
inc
rdtsc
je
aaa
insl
add
bound
adc
mov
neg
sbb
sub
mov
pop
mov
fyl2xp1
cs
sub
add
in
xor
cmpsl
mov
imul
ljmp
pop
push
or
add
mov
jne
leave
xor
adc
sbb
cmp
fsubrs
mov
cmp
out
fimuls
jg
ljmp
adc
gs
and
lret
mov
cmp
jmp
loope
mov
call
fldcw
add
xchg
lock
pop
arpl
loop
mov
push
test
sti
pop
sub
add
sbb
jp
rcr
xchg
xchg
jmp
mov
aam
cmpsb
and
mov
pushf
jbe
xchg
sbb
or
xchg
cmc
sbb
push
in
orl
or
je
sub
inc
dec
shlb
popf
sub
filds
fs
repz
ljmp
xchg
lret
jnp
and
or
outsb
mov
mov
dec
movsl
mov
pop
inc
nop
insb
mov
jns
loope
push
imul
jmp
pop
jo
sub
aas
fldt
jle
or
ss
mov
add
xor
mov
js
mov
pop
mov
jp
cwtl
xchg
lock
push
push
jb
imul
hlt
shrl
pop
push
ss
scas
gs
sbb
jg
xchg
nop
sahf
sub
cmpsl
sub
ffree
or
and
cmpl
lea
in
ret
cmp
fistl
inc
gs
aas
daa
daa
jecxz
nop
and
scas
push
xor
push
popf
in
movsb
imull
xchg
sbb
icebp
mov
add
jg
repnz
push
fisttpll
adc
dec
and
daa
stos
dec
sbb
inc
or
xchg
mov
cli
dec
and
cli
xchg
or
jmp
subl
or
test
xchg
out
into
mov
pop
jnp
pop
je
data16
pop
mov
lret
cwtl
roll
repz
xchg
push
xchg
addb
out
dec
lds
cmp
xlat
aas
fidivl
dec
sub
cmp
mov
mov
mov
xorps
mov
mov
ja
sbb
fnstenv
pop
sbb
fs
inc
and
les
sbb
xor
dec
pop
mov
ficoms
pop
inc
jmp
ds
cmp
inc
jle
push
mov
and
jl
mov
pop
call
lock
push
jl
adcb
jecxz
push
call
adc
aas
pop
sub
add
push
jl
mov
push
repnz
movsb
or
fldt
inc
mov
mov
das
push
cmp
sub
inc
sbbb
movb
jmp
outsl
fadd
push
add
sub
dec
or
pop
pusha
mov
mov
int
sub
loop
out
xchg
repnz
fiadds
xchg
dec
ja
pop
mov
insb
dec
push
lea
gs
idivb
lods
dec
inc
stc
pushf
sub
pop
xor
lock
cs
repnz
mov
cmpsb
mov
int3
test
loope
mov
out
fld1
cld
cmp
push
mov
mov
lods
ror
les
sbb
mov
iret
push
mov
push
and
stos
inc
mov
repnz
pushf
inc
in
mov
cld
push
push
fisubrl
push
pop
push
icebp
inc
inc
sub
dec
out
cld
xchg
and
xchg
lods
xchg
or
mov
inc
push
mov
mov
jnp
and
push
push
fwait
ljmp
arpl
das
out
lods
scas
lods
pop
int
mov
dec
cld
in
nop
cmp
insl
pop
adc
cmpsb
pop
insb
xor
ljmp
mov
lret
jnp
mov
out
shlb
push
push
jmp
mov
sahf
js
repnz
or
mov
imul
push
xchg
repnz
sub
jo
mov
adc
xor
inc
loopne
addr16
push
sbb
push
push
mov
mov
mov
test
xor
inc
xor
adc
or
pop
sub
mov
xchg
cmc
leave
mov
jle
mov
dec
lods
mov
addb
cmp
popw
jb
jae
test
dec
jmp
scas
inc
dec
lea
insb
sub
lock
sarb
fiaddl
xchg
sarb
insb
dec
and
sbb
mov
jmp
pop
sub
cld
scas
adc
decl
mov
hlt
adc
cmp
adc
inc
ja
scas
add
add
ror
lock
sub
je
sbb
jb
imul
loop
cmpsb
aam
and
sub
cmp
adc
shl
test
rorb
jns
dec
and
sbb
dec
pop
mov
dec
imul
cmp
inc
adc
mov
sub
sub
inc
adc
repnz
pusha
out
in
addr16
sub
jae
popa
cltd
outsl
add
rcl
xor
lret
or
jl
mov
aaa
adc
rol
cwtl
sbb
mov
sahf
ljmp
xor
pop
mov
or
int
adc
arpl
rcrl
call
push
mov
std
flds
lods
mov
fwait
das
pop
sbb
rcr
mov
add
pushf
out
cmp
mov
push
add
repnz
movsb
outsl
push
mov
imul
not
xchg
aaa
testb
sbb
mov
push
mov
hlt
push
adc
sbb
dec
rolb
shlb
push
call
hlt
lods
add
les
xor
hlt
xchg
add
rclb
addr16
stc
fists
sbb
movb
push
sti
ja
push
and
pop
std
outsl
mov
std
fucomip
xor
inc
cmp
adc
mov
mov
test
mov
daa
mov
sbb
sbb
xchg
cltd
ficomps
dec
rorb
mov
popw
xchg
xor
popl
xchg
xchg
xchg
or
mov
jb
jno
sbb
pop
mov
mov
dec
cmp
pop
sbb
cmp
push
data16
fdivrs
xorb
pop
inc
cmpsl
or
repnz
mov
sbb
jp
rol
push
bound
insb
nop
jg
imul
and
and
les
cli
popa
cli
adc
jmp
or
cwtl
inc
cltd
xchg
lods
push
pusha
stos
inc
lds
mov
push
jbe
pop
sbb
dec
lea
mov
leave
mov
scas
gs
lds
adc
and
lahf
iret
add
dec
icebp
imul
in
aad
rcrb
pop
mov
xor
sbb
push
test
cmp
sub
adc
loop
and
cmp
repz
add
addr16
ljmp
pop
out
int3
cmp
adc
and
scas
imulb
add
cs
outsb
mov
arpl
mov
inc
sub
mov
mov
push
je
aad
andb
add
xor
adc
jb
mov
inc
xlat
enter
mov
xor
emms
xor
pop
addb
data16
cld
scas
or
lahf
xchg
ja
stc
in
ficoml
mov
jae
mov
cmp
shrl
adc
pop
or
xchg
icebp
sub
ds
mov
add
cli
es
sbb
lock
mov
sbb
adc
sbb
inc
lock
in
sub
or
lea
or
or
fnstcw
imul
shrb
mov
push
xor
jmp
cmpsl
adc
aas
mov
mov
lahf
jae
sahf
repnz
and
mov
sbb
fdivrl
add
and
sub
adc
cmpsl
jmp
and
movsl
mov
adcl
insb
adcb
fldcw
shrl
cmp
cmp
push
outsb
dec
xchg
cmp
loopne
in
sahf
adc
sbb
je
jne
sbb
ret
gs
cmc
sub
sti
ficoms
pop
stos
mov
pop
dec
push
xor
push
out
ds
lods
inc
lds
push
push
dec
and
and
mov
mov
inc
inc
dec
mov
sub
movsl
je
iret
add
outsl
and
movsb
and
icebp
es
lcall
mov
push
mul
xor
pop
jecxz
dec
cmp
jp
arpl
xor
test
push
mov
lahf
add
cmp
sahf
pop
xlat
addr16
movsb
loope
jle
push
lods
pop
loope
stos
sti
mov
test
clc
mov
push
fwait
xchg
nop
test
pop
sub
in
mov
jo
xlat
mov
insl
pop
mov
outsl
mov
pop
xchg
orl
sbb
mov
faddl
cmp
adc
iret
dec
cmpsl
js
cmp
sub
mov
into
out
in
clc
andb
aaa
insl
sub
mov
dec
push
or
fnsave
xchg
aad
bound
bnd
pop
pop
xchg
mov
dec
iret
sub
adc
out
xchg
in
and
out
cmp
out
or
or
cmpl
mov
inc
and
pop
sbb
test
pop
lahf
jnp
fs
cmp
movsl
add
stc
cmp
loop
into
jl
jns
mov
imul
sbb
sbb
jbe
dec
stc
aas
loopne
pop
jge
mov
xchg
dec
lds
je
mov
sbbl
lods
inc
mov
mov
negb
jae
and
jb
sbb
in
xchg
dec
mov
mull
adc
pusha
fcompl
pop
in
out
popf
mov
adc
cltd
inc
sub
test
out
xchg
cmpl
xchg
mov
out
mov
push
mov
cmp
xchg
call
aam
daa
ja
mov
add
lahf
add
add
sahf
pushf
cltd
pop
add
hlt
push
push
or
mov
aam
shrb
pop
inc
xlat
inc
and
inc
dec
dec
push
dec
mov
mov
stc
rcl
pop
push
incb
push
outsl
cwtl
mov
pushl
sbb
or
push
cmp
push
inc
pop
mov
enter
push
sti
push
push
fsubrs
call
pop
mov
and
xchg
int3
sub
sbb
pop
push
adc
pop
fs
xor
pop
mov
and
inc
cmp
outsb
jbe
adc
movsb
xchg
inc
push
out
push
cmp
imul
nop
xor
push
cmpsb
fsts
loopne
loope
rdtsc
hlt
cs
or
push
xchg
jne
sbb
mov
dec
icebp
mov
icebp
lds
cmpsl
repnz
sub
jl
cmp
jg
mov
push
xor
ret
xorl
mov
mov
xor
jmp
add
xchg
mov
xor
push
inc
push
sub
jne
popf
mov
int
mov
sub
insl
jge
mov
bound
xchg
insb
pop
leave
movl
jbe
ljmp
in
test
mov
dec
cld
out
sbb
adc
lret
cmc
lret
icebp
shrl
push
js
test
js
rol
stos
jge
dec
sub
dec
xor
test
mov
sub
xchg
lret
cltd
xor
cld
out
or
sbb
enter
xorl
aam
in
jnp
push
mov
mov
xor
add
mov
inc
shl
jl
jmp
xchg
mov
jo
std
jns
adc
cwtl
and
ret
stc
addr16
test
push
push
add
mov
rolb
loopne
xchg
inc
mov
xchg
pop
lods
orb
out
push
daa
pop
ja
mov
je
cmp
test
adc
dec
jmp
pop
cmp
stc
cmc
dec
divl
mull
imul
inc
lret
add
push
loopne
out
cmpsb
mov
loop
ljmp
fcoml
or
loopne
mov
arpl
daa
es
mov
jp
inc
aam
add
xor
cmp
inc
cltd
mov
inc
push
sbbb
aad
or
or
adc
sub
imull
sarb
sahf
adc
fisubs
sub
jns
xchg
stc
mov
inc
hlt
sub
scas
aaa
xchg
jl
cmp
aaa
sbb
pop
push
xlat
or
out
loopne
stos
int3
popf
push
and
xor
test
jg
dec
js
in
sbb
pop
dec
jns
int
jbe
lods
scas
cmp
pop
push
xchg
cmp
fdivl
hlt
sti
arpl
cmp
xchg
xchg
clc
jne
shlb
imul
call
push
movl
mov
sub
or
mov
mov
dec
out
jmp
mov
cwtl
sbb
mov
aad
daa
into
std
test
popf
cmp
sbb
add
sbb
enter
jle
outsb
mov
lcall
adc
lods
outsl
mov
inc
cli
pop
cli
out
stos
clc
cmp
adc
sbb
pop
mov
xor
xchg
jle
or
add
testl
mov
addr16
cs
jmp
cmpsb
mov
cmp
sub
cmp
in
ret
popa
mov
fists
out
lcall
mov
pusha
adc
loop
test
repnz
pop
dec
and
cmp
xor
js
push
bound
xchg
ret
jl
cmp
sub
xchg
fwait
dec
mov
dec
rcrb
loopne
jnp
sub
mov
call
imul
scas
mov
pop
adc
das
jno
push
loopne
jo
dec
not
popf
enter
out
xor
cltd
popa
push
mov
mov
xorb
clc
mov
popf
push
or
outsl
adc
into
shlb
adc
fistpll
mov
outsl
lods
sub
xchg
pop
push
inc
mov
arpl
aas
push
subl
and
xchg
and
in
ja
rorb
mov
lock
rol
sub
xor
test
sbb
jmp
pop
int
cmp
add
xchg
mov
xor
int
pusha
sahf
loop
xor
cmp
cmp
jae
ss
sbb
mov
bound
add
mov
mov
mov
pop
adc
lcall
cmp
movsl
mov
rorl
or
lea
cmp
subl
js
dec
subl
mov
in
or
stc
icebp
adc
jb
pop
pop
out
or
cwtl
ja
repnz
popa
aaa
movsb
mov
jne
in
call
pop
and
cli
aam
pop
mov
insb
mov
clc
movsl
dec
std
cwtl
lahf
pop
pop
repz
jne
orb
pusha
inc
mov
dec
and
and
enter
insb
fidivrs
add
scas
add
test
imul
mov
or
aas
mov
cltd
cmpsl
arpl
and
bound
xor
loopne
inc
xor
mov
add
cmpsl
inc
aas
rorl
push
scas
int3
ljmp
xor
int3
xor
push
jecxz
cltd
dec
add
mov
inc
js
ja
mov
xchg
xor
call
xor
jp
mov
xchg
into
sub
int
sbb
ds
xor
pusha
dec
add
sbb
cmp
mov
xor
mov
loopne
je
pop
and
insb
idivl
aaa
sbb
hlt
pusha
jle
fcoms
ficoms
or
scas
divb
cwtl
sub
test
push
xchg
std
loope
inc
or
call
add
fisubrl
xorl
mov
mov
adc
xor
jnp
pop
and
lods
pop
push
fwait
nop
xor
mov
inc
mulb
into
push
mov
leave
inc
xchg
nop
inc
fnstenv
xchg
add
sub
push
rcl
xchg
push
pextrw
push
mov
pslld
pop
dec
hlt
cmp
mov
pop
xchg
sbb
jae
sub
sbb
ss
inc
inc
int
test
addr16
sbb
mov
lods
lcall
sbb
mov
jmp
xchg
jp
clc
cmpsl
push
push
xor
xor
popa
cltd
xchg
push
jne
mov
dec
sub
push
mov
mov
dec
pop
sbb
mov
shrl
aad
xchg
in
xchg
stos
jge
xor
add
push
lret
and
xchg
scas
fbstp
daa
sbb
fiaddl
ljmp
xchg
inc
push
jmp
lods
xchg
andb
repz
popa
xor
adc
xchg
out
cmp
movsb
push
insl
pop
xchg
rcrl
adc
fmull
dec
mov
sbb
rclb
xchg
sbb
shll
pop
xchg
das
in
push
cmp
xlat
adc
test
fistpll
icebp
packssdw
and
cmp
jmp
popa
lea
call
mov
sbbb
xchg
adc
mov
mov
mov
ret
mov
addr16
xor
lds
xchg
pop
lods
cmp
mov
fnstenv
push
push
cmc
push
rorb
fidivl
cld
cmp
jl
lret
push
test
cmp
testl
fcoml
orb
outsb
sbb
mov
popa
loope
mov
in
xor
pop
das
in
loope
mov
and
lods
out
or
loopne
xlat
mov
mov
fcmovnbe
adc
scas
adc
in
mov
ja
into
inc
cltd
out
jg
ljmp
xchg
ds
cmpl
sub
imul
rorl
sbb
pop
das
or
cmp
insb
popa
frstor
rol
pop
sub
push
xor
or
jno
mov
popf
loope
push
inc
sub
xlat
iret
clc
leave
jp
das
test
imul
push
xchg
sti
mov
push
lods
adc
mov
xchg
call
ffree
mov
icebp
cmp
sbb
repnz
or
mov
loopne
mov
sbb
icebp
sarb
mov
mov
push
mov
inc
xor
mov
adc
sbb
dec
aad
dec
test
jl
push
mov
lods
mov
lds
loopne
scas
data16
mov
dec
roll
push
mov
mov
jno
rorb
adc
pop
jmp
sub
pusha
mov
cmp
mov
fwait
adc
inc
rsqrtps
aas
dec
shl
shl
push
iret
fimull
pop
clc
sub
xchg
or
pop
repnz
andl
mov
ljmp
and
cmpsb
loop
sub
aaa
lea
xchg
xchg
jmp
adc
xor
mov
xchg
pop
xor
sbb
or
cmp
ja
sarb
mov
push
mov
push
jecxz
fldl
in
imul
ret
sarl
fs
xor
punpckhdq
mov
xlat
imul
dec
jno
fnsetpm(287
out
pop
imul
bound
sahf
lods
or
mov
mov
mov
shrb
jns
int
lahf
mov
sub
movl
out
orb
and
fmuls
inc
pop
push
mov
push
lcall
sar
aas
mov
add
push
dec
jmp
add
push
loopne
sub
push
push
cltd
dec
movsl
enter
dec
repnz
test
and
outsb
add
fmulp
out
arpl
push
decl
stos
cld
dec
add
xor
stos
sub
fstp
xchg
fwait
mov
pop
mov
xor
mov
sub
dec
mov
jecxz
lods
cmp
cmp
or
pop
js
mov
dec
lret
mov
fldt
ja
fnsave
pop
dec
mov
mov
jo
clc
xor
fdiv
jns
mov
xchg
icebp
stos
sbb
mov
xchg
adc
jp
add
stos
add
push
pop
insl
cmpl
daa
inc
sub
pop
push
adc
fs
leave
int
pop
mov
sub
cmp
pop
js
loop
pop
faddp
int
lret
and
cs
cmp
or
stos
add
jns
lods
enter
cmp
mov
xor
xor
jl
aad
dec
pop
push
mov
imul
repz
pop
cs
repnz
pop
sub
jmp
call
push
jbe
xor
aam
pcmpeqb
cwtl
sbb
ss
adc
push
add
xchg
jl
outsl
loope
push
hlt
xchg
jmp
push
cmp
cmp
subb
mov
lret
jo
pop
adc
adc
lds
scas
xor
jp
shrl
js
and
cmp
dec
lret
mov
add
movsl
add
adc
or
xor
icebp
mov
sbb
scas
jo
cmp
lds
loopne
in
xchg
into
gs
mov
jmp
push
inc
sbb
das
popa
xchg
jnp
clc
lret
cmpsb
inc
cmp
fists
sbb
andl
adc
es
xchg
stos
mov
mov
cmp
inc
or
andl
mov
lea
es
into
cmp
pop
mov
call
movsl
mov
mov
dec
cld
out
pop
sbb
push
cli
pop
pop
xchg
lcall
lea
fisubl
stc
ds
adc
cmp
test
cmp
es
test
insb
mov
sarl
xchg
push
clc
not
sub
and
std
jno
sbb
aam
clc
gs
cs
divl
jge
mov
in
mov
aam
inc
outsl
movsb
rcrl
int
sbb
xor
sti
test
outsl
push
mov
cmp
bound
fistps
stos
ljmp
sbb
dec
xchg
dec
mov
fwait
jno
xchg
call
sbb
adc
xchg
push
shrb
cmp
lret
cmc
pminsw
mov
ds
sbb
xor
mov
lds
sarl
testb
mov
inc
mov
loop
imul
insb
mov
arpl
jp
mov
fs
and
icebp
sub
xor
cmp
push
mov
ss
inc
stos
popf
ficompl
testl
jge
shll
fwait
and
inc
shll
insl
mov
pop
loope
jecxz
adc
jb
xchg
mov
inc
and
xor
jmp
dec
jl
shr
test
sbb
jecxz
fdivl
leave
sub
and
repz
pop
cmp
fmulp
adc
sbb
das
das
aad
pop
xor
pop
enter
xchg
test
imul
xor
nop
push
push
aas
pop
fdivs
pop
nop
lcall
add
repnz
mov
mov
outsb
push
or
mov
cli
sbb
test
mov
push
cmp
ja
mov
pop
cmpsl
data16
mov
sub
movsl
movsl
lds
cmpsl
stos
fwait
pushf
out
sbb
pop
mov
xor
lahf
or
mov
xchg
imul
pop
mov
sub
add
jle
fnstenv
mov
sub
xor
xor
or
xchg
dec
out
shll
inc
jbe
sbb
cmp
int3
jae
jmp
scas
pop
inc
adc
push
loope
inc
or
cld
and
inc
and
shr
dec
outsb
adc
lret
into
cltd
xchg
js
xchg
rcrl
mov
inc
sbb
jns
cmp
and
clc
pop
xlat
jp
sub
sbb
inc
lret
sar
add
lds
and
push
jecxz
cmp
fists
ret
and
movsb
shlb
mov
ret
add
or
push
pop
jnp
adc
scas
adc
mov
data16
jle
fadds
les
cmpsl
xor
das
aad
out
aad
mov
ja
mov
pop
jnp
push
push
movsb
dec
xchg
into
rorb
or
cmpl
and
mov
or
iret
xchg
mov
push
pushf
dec
sahf
sub
insl
les
leave
pop
lods
xchg
popa
fstl
mov
cld
std
ret
in
icebp
insl
incb
jne
pop
and
inc
sarb
loopne
or
aad
outsl
std
popf
cmp
inc
ljmp
inc
sub
dec
mov
lret
fildl
mov
iret
jmp
or
inc
cmp
shll
jo
sbb
pop
xchg
aam
into
cmp
cld
cld
xchg
cmp
cmp
mov
stos
pop
roll
jne
shrl
cli
mov
inc
scas
sub
outsl
push
addl
sbbb
or
or
iret
aam
xor
movsl
adc
pop
incl
jae
es
dec
sbb
insb
or
mov
mov
jae
test
sti
add
ret
outsl
inc
push
ss
insb
sub
insb
push
sub
rclb
push
mov
xchg
inc
insb
push
sbb
mov
call
cmc
lret
int
pop
fildl
mov
push
add
movb
imul
mov
cmp
iret
les
in
out
or
push
sub
mov
scas
sbb
inc
inc
addl
cmpsb
sti
pop
mov
std
in
add
ret
stos
adc
push
mov
movl
mov
notb
push
std
push
stos
sti
cs
dec
in
xchg
loop
push
ja
adc
loop
or
jne
xor
sbb
sub
pop
pop
xchg
add
fidivrs
cmp
sbb
testb
adc
pop
lret
sub
out
inc
mull
cmp
shr
iret
cmp
push
sbb
test
cs
in
leave
out
loop
lods
push
outsb
xchg
adc
movsb
cmpsb
or
das
ja
sbb
loopne
ret
ror
ret
pop
push
shrl
xor
dec
or
xor
pop
aaa
mov
mov
mov
mov
add
jb
dec
or
std
jb
jmp
jl
inc
mov
inc
jne
hlt
or
aas
adc
leave
sbb
test
cmpl
xchg
popa
cmp
movsb
sahf
addr16
xchg
hlt
jb
sub
inc
fnstsw
jo
add
jnp,pt
rclb
pop
push
add
and
ljmp
inc
mov
test
imul
lods
test
cmpsl
jb
fwait
inc
cmp
iret
hlt
inc
loope
arpl
adc
xor
lods
lock
push
xchg
cwtl
xor
push
fldenv
mov
shll
and
push
sbbl
jne
sub
test
das
fstps
mov
jne
xchg
mov
mov
sub
stos
pop
jo
fistl
adc
cmc
add
lcall
inc
call
push
and
jecxz
cld
add
xor
aas
sahf
xor
mov
jle
mov
add
xor
dec
jns
push
mov
jg
jp
out
cmpsb
xor
dec
dec
jno
sar
push
negl
cmc
out
daa
cmp
mov
jecxz
ret
lds
idivb
sub
sbb
xor
stos
dec
jge
je
and
fs
insb
ret
lea
lds
aad
push
push
or
aaa
add
js
pop
pushf
icebp
addr16
mov
inc
jbe
push
in
add
test
xor
pop
dec
push
pop
cwtl
leave
pop
sbb
and
push
dec
sub
push
shl
inc
jmp
push
ficompl
rcrl
mov
lret
std
push
pop
cmpsb
mov
mov
mov
into
inc
mov
push
sbbb
xchg
mov
xor
stos
out
mov
pushf
aas
jnp
push
mov
enter
addr16
add
pop
lods
and
dec
pop
inc
sbb
pop
mov
fcoml
jne
xchg
std
xchg
inc
sahf
push
jmp
mov
dec
mov
jge
leave
push
sub
fs
jge
dec
pop
js
or
xchg
sbb
int3
lcall
xchg
fcomps
das
test
mov
pop
pop
or
shll
dec
ss
data16
push
mov
and
mov
mov
adc
movsl
test
mov
lods
pop
inc
push
insl
call
cmp
scas
cmp
movsb
mov
mov
and
jns
out
pop
jnp
shll
in
xor
insb
dec
into
xchg
xlat
pushf
test
ss
dec
loopne,pt
insl
scas
or
jl
push
jmp
hlt
sub
in
cmp
add
iret
lods
xor
add
add
sbbb
ja
cmp
int3
sub
inc
rorb
inc
xor
enter
outsl
push
mov
add
pop
mov
mov
mov
push
insb
aas
adc
enter
lahf
xchg
pop
pusha
sahf
shlb
xorb
cwtl
adc
or
test
iret
inc
jbe
inc
ss
push
inc
mov
repnz
jecxz
mov
into
out
dec
aaa
push
in
fisttps
mov
popa
inc
dec
jl
insl
jmp
adc
int3
in
test
dec
data16
jle
int3
jmp
in
leave
rcl
pop
adc
dec
adc
sahf
out
mov
icebp
in
mov
adc
in
out
pop
in
les
inc
push
stc
cmp
jl
mov
jns
fs
pusha
push
shlb
pop
xchg
sbb
sub
pusha
pop
cs
add
inc
mov
add
inc
sti
add
and
dec
and
loope
sbb
js
or
mov
pop
xchg
adc
or
fldl
cld
or
or
incl
iret
popl
popa
xchg
pop
pop
xchg
cltd
dec
icebp
jo
jl
out
jbe
leave
or
data16
and
sbb
cwtl
and
xor
fistpl
sub
into
jne,pn
mov
popf
xchg
sahf
test
lret
mov
pop
jne
sbb
inc
mov
int3
push
mov
xlat
int3
push
rol
jae
loop
dec
jbe,pt
arpl
inc
cmpsl
push
das
cmp
sub
addr16
xor
xchg
dec
mov
mov
add
jae
inc
shr
xor
insl
push
xor
jge
dec
icebp
push
xchg
lds
filds
ret
or
sarb
or
lcall
sub
imul
cwtl
lahf
ret
mov
ret
arpl
nop
and
push
imul
lret
push
shrb
fwait
testl
es
in
xor
cmp
jle
das
call
iret
sub
sbb
inc
ret
out
bound
je
add
mov
mov
adc
stos
sub
stos
loop
jbe
insb
push
jecxz
pop
out
dec
mov
inc
jle
in
adc
scas
aad
push
mov
loopne
xchg
mov
fstps
pop
fcmovnbe
movsl
mov
cmp
sarl
mov
lods
call
pop
test
xor
std
add
mov
or
sub
ja
shrb
mov
testl
mov
rorl
jo
fsts
dec
dec
loope
sbb
mov
cwtl
loop
inc
dec
hlt
js
test
pop
inc
gs
bound
aam
pop
inc
mov
loopne
bound
push
sub
rclb
sbb
bound
lret
xor
push
push
inc
mov
scas
mov
insl
movsb
mov
enter
adc
xchg
aad
push
dec
out
inc
int3
mov
xchg
inc
jns
sbb
cwtl
xor
call
in
jp
push
rcrb
cli
cmovp
inc
mov
push
mov
xchg
std
jbe
xor
mov
lea
movsl
clc
adc
adc
sbb
test
and
sarb
mov
test
pop
div
scas
test
in
push
bound
pop
js
sbb
cmp
bound
pop
jecxz
loope
lcall
add
pop
sti
cld
push
lock
dec
inc
and
out
ficomps
dec
inc
in
in
mov
mov
pusha
inc
sbb
gs
mov
mov
dec
and
cmpsl
add
pop
cmp
dec
add
xchg
repz
inc
out
outsl
xchg
popf
leave
xor
jo
leave
mov
jb
push
xabort
iret
mov
outsl
mov
mov
cmpsb
xchg
roll
into
mov
loopne
xchg
outsb
mov
mov
out
mov
push
popf
lret
inc
sbb
pop
dec
pminub
insl
add
insb
push
fs
push
pusha
xor
jb
bound
fadd
mov
inc
ret
test
dec
jl,pt
mov
xchg
stc
pop
andb
rclb
adc
mov
daa
fstpt
loopne
js
aas
and
push
inc
fnstsw
dec
mov
imulb
or
fxch
pop
das
lret
cmc
ret
jno
daa
or
push
shrb
in
bnd
mov
rorb
imul
add
fmull
jecxz
or
call
neg
frstor
test
das
xlat
xor
pop
out
push
lds
mov
js
lods
or
lds
cltd
addr16
in
lock
mull
cmc
insb
call
cmp
adc
pop
mov
xchg
dec
inc
xor
sbb
je
mov
adc
rcrb
rorl
dec
out
inc
jnp
lret
loop
leave
pop
jne
test
imul
xor
ljmp
push
lahf
fidivrs
sarb
mov
xor
mov
jo
dec
rolb
dec
mov
lea
sub
sahf
xlat
and
ds
aaa
dec
push
add
shrl
cmp
jne
sbbb
mov
push
in
or
mov
es
inc
arpl
mov
call
ljmp
addr16
jo
dec
sub
out
dec
fidivrl
sbb
cmp
in
lcall
les
mov
pop
loope
movsl
and
imul
cmc
dec
cli
cld
xorb
xor
xor
push
jecxz
lods
pop
push
imul
mov
sbb
xchg
mov
pop
cmp
ficoml
bsf
or
imul
inc
stos
mov
imul
push
sbb
aad
cmpl
mov
sarl
popa
and
push
mov
adc
nop
fbstp
pusha
sub
subl
loop
addb
sub
add
das
test
push
test
add
xchg
iret
sub
inc
ret
sub
in
stos
dec
jnp
or
mov
mov
popf
jmp
push
inc
xor
jb
sub
pop
dec
into
lahf
jbe
xchg
sub
lock
loope
test
ret
fbld
mov
pop
mov
cmp
test
xchg
pop
adc
stc
fdivl
cmp
pop
leave
movsl
stos
insl
and
ret
in
mov
lock
test
lcall
ja
sbb
icebp
push
mulb
inc
scas
inc
sub
lods
fadds
lods
scas
mov
inc
sarb
outsb
xor
scas
add
rol
cwtl
je
adc
loop
roll
sbb
xlat
imull
int
or
outsb
lea
test
stos
jmp
test
int
mov
mov
mov
jge
mov
sub
arpl
or
test
rolb
lret
stos
in
pop
ret
ret
imul
outsl
or
out
ja
stc
sub
aaa
cmp
push
jg
sub
dec
es
aas
test
psrld
xlat
dec
or
jecxz
rcr
mov
lret
adc
or
jle
iret
push
mov
or
and
cld
scas
adc
pop
imul
shll
hlt
bound
xchg
inc
hlt
aam
iret
shl
push
dec
sub
sbb
dec
mov
inc
jbe
test
imul
sub
popa
adc
xchg
clc
jbe
jmp
cmp
loop
lahf
and
imul
in
xchg
std
push
lock
push
and
call
aas
mov
pop
adc
push
ret
imul
test
ret
in
call
cs
dec
fistl
or
testb
add
xor
scas
rorb
jns
add
sarb
pop
sahf
fucomip
lcall
push
xchg
fists
mov
add
mov
shll
lret
inc
cmpsl
xlat
aad
xor
in
mul
stc
fs
pop
xor
ss
shlb
cmp
adc
mov
adcl
cmpsl
adc
inc
jo
adc
pushw
clc
mov
stc
mov
out
push
rclb
negl
movsb
notl
movsl
add
loopne
mov
test
shll
ficoms
adc
dec
jns
fcmovne
sbb
outsb
sbb
xor
mov
ja
xor
add
pop
cld
xor
dec
mov
lods
aaa
jle
inc
xchg
aaa
sahf
lcall
andb
pop
cmp
cmp
ret
pushf
push
fs
add
pushf
cmpsl
xacquire
test
pop
repnz
xchg
movb
inc
cmp
add
jae
rcrb
or
test
fs
or
mov
nop
cmp
dec
sar
js
inc
sub
fisubrl
pop
movsb
sub
hlt
insl
pop
jnp
sub
iret
into
ss
int3
jge
jge
movsb
mov
xchg
ja
jnp
inc
jge
imul
sbb
mov
xor
fildll
daa
inc
cld
sbb
outsl
xor
xorl
sub
mov
loop
adc
or
test
pop
negb
inc
cmpl
inc
add
ficoms
imul
adc
fiaddl
mov
outsl
fildl
cmpsl
hlt
out
ds
and
mov
sub
out
outsb
mov
xorb
sti
fbld
xchg
das
or
push
in
ss
dec
xchg
mov
jle
pop
xchg
xchg
add
xor
push
mov
adc
nop
cwtl
add
sbb
es
in
iret
lret
xchg
mov
js
sti
push
sarb
xchg
cld
add
mov
push
mov
pop
jns
sub
fnsave
sahf
jg
scas
stos
mov
lock
mov
add
cmp
hlt
sahf
and
loop
popa
insl
mov
add
mov
stos
pop
dec
std
ljmp
fcmovbe
push
enter
jnp
sub
xchg
or
aam
mov
inc
test
mov
mov
aaa
popa
sub
adc
pop
lahf
sub
sbb
lds
sbb
xlat
dec
inc
ja
mov
mov
or
imul
mov
testb
cmp
int
push
aaa
push
lods
xchg
inc
js,pn
sbb
lds
mov
mov
sub
mov
mov
dec
inc
add
adc
pop
lea
sbb
add
adc
push
adc
sarl
fdivl
push
xor
jecxz
insb
out
cmpb
clc
and
lea
jo
pop
pop
popf
xorb
xor
hlt
dec
ret
jl
int3
push
xchg
shl
sti
push
lods
cli
dec
jo
ficomps
insl
xor
pop
andb
and
in
cmpb
aad
sarb
sub
shrl
xchg
rorb
lahf
mov
pushf
inc
cmpsb
out
lock
scas
popa
ret
pushf
mov
jns
sti
notb
push
repnz
lret
cmp
xchg
sbb
fcmovbe
out
lods
or
roll
pop
xor
das
jb
es
mov
dec
test
fbstp
pop
mov
enter
fwait
jge
das
add
out
xchg
fstps
xchg
dec
mov
xor
push
sub
inc
lods
mov
ret
mov
ja
add
cmpsb
lret
sub
cltd
or
and
sahf
out
pop
sbb
xchg
fs
pop
mov
sarl
dec
out
xor
repnz
addb
fdivrl
lods
lock
sub
ja
addr16
cmpsb
push
iret
add
xor
jnp
jge
stos
xor
push
mov
inc
mov
cmp
in
add
pop
xor
or
mov
imul
push
pusha
mov
inc
fsts
hlt
imul
inc
std
push
movsb
mov
les
iret
dec
mov
lods
dec
out
cmp
and
inc
scas
mov
push
fistpl
repz
adc
daa
mov
mov
loopne
push
push
outsl
not
movsl
sahf
xor
fmuls
cld
pushf
flds
and
sub
xor
cmpsb
stos
pop
js
jnp
js
push
in
pop
and
out
dec
gs
or
loopnew
ljmp
jge
mov
or
cmpsl
jnp
insl
out
je
scas
in
jmp
xchg
lahf
dec
imul
inc
push
pop
jle
mov
inc
popa
push
insb
cwtl
cwtl
cmp
pop
sbb
addr16
jecxz
add
adc
jmp
xorb
cmp
jns
mulb
pop
cwtl
push
dec
add
pop
inc
ljmp
push
fsubl
xor
outsl
pop
mov
aam
fsubl
adc
insl
cmp
xor
andb
cmc
ja
fisttps
jb
mov
jae
das
sub
icebp
jl
jecxz
push
aam
adc
jp
jl
add
fildl
cld
int3
xor
or
or
adc
popa
ss
sbb
mov
call
inc
jb
dec
add
pop
mov
pusha
cmp
cmc
aam
pop
jo
popf
xchg
mov
addr16
movsl
es
int
xchg
out
int3
push
mov
pop
test
imul
fstpt
push
mov
leave
add
out
mov
lret
mov
int
xchg
js
ds
pop
sbb
fsubr
lahf
adc
push
sbb
cmp
ret
xchg
pop
sarl
pop
jp
adc
movsl
pop
ljmp
in
out
bound
out
mov
xlat
mov
fists
push
movsb
scas
insl
dec
or
ret
cmpsl
les
fcoml
jmp
jmp
dec
push
jge
jl
aad
movsb
hlt
mov
mov
xchg
pop
and
enter
iret
movsl
das
adc
jne
cltd
push
dec
lret
in
xlat
orl
inc
pop
aad
cltd
xor
mov
sbb
push
jmp
add
leave
lret
or
sub
mov
mov
mov
xchg
mov
test
pop
xchg
imul
aas
ja
sti
ficompl
or
test
adc
jl
cmp
outsb
inc
ret
insb
cwtl
add
inc
jb
ja
insl
mov
cmp
andb
aam
hlt
incb
mov
mov
shlb
xchg
aas
test
inc
inc
adc
outsl
std
xorl
adc
testl
sbb
push
test
add
daa
or
lds
outsl
add
push
pop
inc
popa
fcompl
xor
dec
sbb
shrl
stos
out
pop
and
push
and
mov
xor
sbb
shrl
iret
sbb
lods
cmp
outsb
pop
jns
out
leave
push
pop
or
pop
in
cli
sub
inc
ds
sahf
shr
ds
sbb
dec
and
icebp
loopne
insl
mov
nop
or
inc
jne,pt
dec
int3
mov
fisttpl
adc
mov
cmp
mov
fs
mov
push
sbb
sbb
fbstp
push
mov
testl
jns
inc
push
cmp
je
and
jp
fucom
popa
outsl
jno
dec
push
xchg
ret
push
mov
xchg
adc
sbb
lcall
les
or
add
jp
in
mov
mov
movsb
adc
fstl
xor
shlb
adcb
into
lock
addb
icebp
and
pushf
sbb
jns
iret
xchg
push
repnz
jmp
int3
push
arpl
xchg
mov
push
xor
push
imul
push
sub
cmpsl
lret
xchg
or
repnz
fcmovu
loop
scas
outsl
repz
adc
inc
ds
scas
dec
sbb
test
push
movsb
scas
adc
or
icebp
sbb
mov
pop
test
fwait
or
mov
cmovne
xlat
mov
mov
mov
inc
mov
movsb
dec
dec
repz
sub
mov
and
sbb
lret
push
ficompl
lods
data16
je
stos
popf
pop
hlt
mov
jnp
push
sub
ffree
mov
mov
jbe
push
mov
rorb
outsl
pushf
xchg
cmp
not
jno
fisubrl
bound
mov
fwait
dec
add
int
outsb
shrl
pop
enter
adc
cmpb
mov
xchg
adc
pushf
addr16
in
adc
jbe
icebp
jg
xchg
mov
xchg
ss
push
cmpb
iret
and
mov
nop
mov
sbb
in
repz
icebp
movsl
je
movsb
adc
lret
xor
adc
cld
pop
lret
test
adc
jge
or
add
rorb
sub
inc
jbe
call
mov
mov
add
jp
cmp
and
or
out
nop
ljmp
pop
sub
lds
bound
int
popa
dec
cli
dec
jge
inc
pop
addb
add
mov
mov
mov
and
loope
dec
add
iret
push
add
jge
cli
or
cmp
pop
call
push
push
inc
loop
sbb
cmc
fwait
jmp
cmpsl
ds
xchg
clc
xor
and
scas
push
dec
rorb
cmp
call
jmp
sub
lcall
xchg
add
data16
dec
enter
jne
cltd
int3
ror
add
cmpl
mov
cmp
jbe
clc
outsb
push
cmp
jb
imul
int
movsl
daa
jg
lahf
pop
stos
out
push
dec
adc
inc
mov
adc
xchg
mov
jbe
or
mov
pop
fcmove
cltd
or
test
cld
hlt
and
jno
adc
add
or
jmp
cmc
jecxz
adc
xor
or
mov
mov
les
and
push
mov
daa
int3
in
popf
adcb
sub
mov
adc
cli
or
xlat
in
outsl
dec
lret
jb
xlat
shlb
imul
lret
enter
in
subb
int
dec
push
icebp
lds
inc
hlt
lods
lock
js
mov
mov
sahf
nop
loopne
test
in
int3
out
inc
imul
xor
nop
xchg
in
sbb
fwait
into
je
sub
mov
pop
xorl
aam
leave
sbb
mov
inc
jl
cmc
mov
repnz
mov
dec
xchg
sbb
dec
in
scas
pop
leave
jns
test
ljmp
adc
xchg
movsb
mov
pop
test
cmpsl
and
loop
out
add
lret
xor
lcall
push
sbb
mov
addr16
and
cmp
bound
dec
and
lret
jne
inc
jb
mov
sahf
cltd
ds
test
fmuls
add
cs
mov
cmpsb
iret
in
andl
ret
jl
test
xchg
movsl
fmul
loopne
push
mov
mov
lcall
push
out
add
cltd
movb
ret
or
iret
jle
out
cmp
lret
add
cmpsb
movsb
fildl
or
dec
lret
sub
shl
xor
enter
cmp
push
ss
call
xchg
xlat
pop
cmp
sub
pop
cltd
jge
inc
shlb
inc
mov
in
clc
mov
xor
aam
push
sbb
push
jmp
dec
fsubp
dec
mov
out
aas
cs
mov
and
jl
or
push
int3
test
fdivr
ficoms
xchg
imul
mov
sub
sbb
loop
movsb
adc
shll
push
aam
shll
cmp
aas
and
inc
insl
xor
hlt
mov
inc
ficoms
push
jmp
mov
sub
imul
lret
mov
xor
jge
mov
in
push
mov
sbb
test
fstpt
in
or
sahf
xchg
cmp
sti
add
dec
sub
add
push
int3
push
mov
test
vpunpckldq
and
je
cmp
test
cmpsb
daa
mov
mov
sbb
mov
sbbl
jg
dec
fsts
es
inc
xor
call
nop
and
incb
mov
je
repz
xor
fistpll
fistl
xchg
jne
popa
mov
loopne
test
out
test
xor
aas
dec
push
popf
mov
rorl
in
mov
xchg
mov
lret
adc
mov
fwait
cld
scas
xchg
pop
sahf
pop
fscale
dec
negl
sub
mov
pusha
sub
mov
add
dec
and
pop
fdivrs
mov
mov
xchg
inc
into
xor
xchg
pusha
loopne
sti
in
jecxz
popf
adc
test
inc
sbb
xorl
aas
lods
mov
xchg
adc
sahf
xchg
int3
xor
xchg
hlt
mov
mov
out
out
aam
addl
aad
xchg
stos
pop
sub
test
rorl
sarb
or
scas
jbe
lock
sti
cmp
xchg
jb
mov
jns
push
lea
mov
mov
cwtl
das
jo
scas
out
mov
xchg
hlt
fdivs
stc
push
cmpsb
mov
ror
xlat
outsb
xchg
cmp
scas
popf
sub
shrb
jns
je
aas
mov
cwtl
jbe
ljmp
ss
loopne
dec
and
cltd
lret
sbb
adc
fcmovnbe
jae
cmp
scas
nop
arpl
add
jns
clc
xchg
test
jmp
cli
arpl
cmpsl
mov
mov
dec
int
sti
jo
sar
lret
cmp
sub
out
mov
sub
sahf
hlt
xchg
stos
xor
jecxz
adc
popf
dec
xchg
mov
fs
iret
xchg
sub
cwtl
fsin
xchg
aad
pop
shlb
bound
push
xchg
stos
jmp
jns
jmp
add
ljmp
sti
mov
pop
xor
div
pop
jne
sub
push
inc
sub
call
dec
fstpt
jg
xchg
les
cmp
clc
cltd
js
xor
and
ljmp
insl
xor
xor
out
repz
ret
adc
stos
inc
xchg
pop
aad
fbld
mov
lea
std
idivl
stos
into
pop
shl
and
mov
popa
adc
jns
dec
pop
not
mov
and
dec
jle
aaa
sarl
subl
jb
push
shr
xchg
orl
push
jmp
js
dec
out
shll
nop
pushf
or
fildl
or
mov
hlt
fldl
cmc
and
xchg
mov
les
jno
jecxz
push
scas
notl
pusha
xchg
fisubrl
jmp
testl
push
xor
mov
jl
insb
dec
inc
mov
dec
add
mov
ljmp
arpl
lock
mov
add
xchg
lds
xor
pusha
xor
scas
or
pop
int3
mov
cmp
cmp
cli
push
xor
roll
cmp
icebp
int3
leave
aas
movsb
fistps
jp
pop
push
imul
ret
xchg
pop
cwtl
add
add
jp
lea
pop
push
imul
inc
mov
mov
popl
lret
jae
xor
push
add
push
sbb
fnstenv
mov
xor
jmp
out
mov
lock
adc
idivl
cs
loopne
sbb
fidivl
mov
mov
cli
int3
and
push
adc
xchg
sub
or
aad
fnsave
je
pop
xchg
cmp
shll
psrlq
jbe
pop
imul
pop
mov
xchg
jb
pop
je
daa
incb
xchg
sar
iret
fbld
or
pushl
insl
mov
lcall
insb
pop
xor
or
pop
fdivs
push
or
popf
mov
jnp
sub
andl
pop
cld
push
fidivrl
mov
into
das
in
jb
inc
cmpsb
divl
jg
sub
and
cmp
shlb
lret
ds
int3
out
pop
sahf
inc
inc
push
outsb
stc
fnsave
cmpb
out
dec
outsb
mov
mov
stc
mov
ret
xlat
cmc
lock
dec
aas
mov
sub
pop
cmp
das
jo
inc
sub
fnsave
sahf
push
cmpsl
mov
and
mov
test
dec
iret
mov
push
shrb
lods
mov
push
in
dec
es
sti
setp
jo
adc
jg
movsl
push
mov
popf
jle
sbb
fists
in
out
mov
xor
pop
push
cmpsb
and
test
mov
cltd
mov
sbb
xchg
hlt
sbb
push
sub
cmp
icebp
into
mov
outsb
fcmovne
insb
or
cs
lods
mov
cmp
fnsave
dec
je
dec
jb
shlb
std
cmp
jns
adc
jne
cs
jbe,pt
std
cltd
int3
bound
mov
lods
jno
cmpsb
add
in
dec
dec
jge
jne
sbb
fwait
orl
daa
cmpsl
fwait
cmp
dec
loope
testb
dec
inc
lahf
mov
punpcklbw
dec
flds
sahf
jb
clc
and
iret
in
and
jno
test
dec
in
loop
insb
jecxz
mov
das
inc
adc
loope
cs
int
imul
mov
xor
cli
cmpsl
add
je
push
cmpsb
jne
call
jns
fbld
jo
test
mov
xchg
dec
in
flds
shlb
mov
or
outsb
cmp
dec
jge
mov
ja
push
cmp
and
rcr
fdivrs
mov
mov
loope
jl
xchg
dec
sbb
cmp
mov
push
cli
lcall
mov
fldt
popf
sbb
lahf
add
pop
jb
sarb
jae
cs
ljmp
and
ja
ljmp
xchg
jb
inc
pop
ficoml
add
xchg
cmc
xchg
jg
cli
xchg
sbb
jmp
dec
and
icebp
nop
jnp
jmp
ljmp
xor
rcrb
addb
pop
ljmp
sub
mov
mov
popf
xchg
adc
std
mov
pop
jnp
test
mov
orl
fsubr
popf
push
mov
fdivrl
dec
mov
cmc
sub
dec
loopnew
cmpsl
and
sbb
ror
jmp
enter
sub
addr16
ss
sti
je
mov
xchg
sahf
pop
jg
cmp
cmpsb
std
outsl
jbe
cmc
dec
push
addl
add
int3
mov
enter
andl
scas
mov
pop
mov
into
insb
ja
jge
sbb
jbe
fprem
aam
dec
adc
cmp
ljmp
shl
xchg
mov
loope
test
sub
and
push
ss
adc
xchg
stos
loope
loope
pop
push
sbb
in
sub
and
fnstenv
sahf
lahf
bnd
popf
push
mov
loopew
movsb
dec
mov
adc
and
jl
fxch
shll
sub
stos
dec
fildl
ds
fsubrs
pop
inc
push
cld
nop
sub
fisubrs
jl
mov
mov
push
iret
pop
xor
outsl
push
in
ss
xor
or
data16
cmpl
mov
xchg
rcl
mov
rcrl
hlt
lock
inc
stos
imulb
lahf
daa
int
fs
mov
lret
add
mov
xchg
iret
les
adc
push
lret
out
aaa
push
repnz
and
icebp
addl
push
mov
int3
int3
add
mov
fsts
xor
or
add
inc
push
stos
mov
cli
lea
adc
adc
cld
mov
sub
sbb
mov
out
std
xchg
bound
mov
cmp
xchg
jg
or
add
gs
pop
stos
adc
lret
xor
or
outsl
pop
push
ds
cwtl
ja
add
arpl
and
lret
jg
popa
push
les
dec
cmp
or
mov
sbb
inc
jns
shr
pop
pop
pop
pop
test
cwtl
pop
sbb
mov
inc
enter
cmp
scas
dec
addr16
fwait
jnp
or
ret
rorb
mov
push
rol
lret
mov
int3
in
inc
xchg
pop
lock
mov
loopne
sbbb
adc
sub
out
adc
jge
js
scas
cltd
aam
popf
jmp
and
cmp
mov
mov
fnstcw
pop
int3
xchg
lcall
outsl
xchg
dec
adc
add
lahf
repnz
mov
pushw
sub
lods
icebp
mov
in
jns
sbb
mov
cmp
push
mov
push
clc
xchg
outsl
xchg
sbb
sti
out
push
gs
repz
mov
es
bound
aam
loopne
out
or
mov
je
pop
ljmp
loop
or
nop
and
iret
mov
repz
jne
cmp
jne
movq
jne
sub
aad
mov
popa
loop
lret
or
in
xchg
aad
jno
push
mov
cld
stos
push
push
jae
addr16
mov
out
mov
jns
mov
bound
adc
lea
cmpsl
js
cld
pop
call
movsl
arpl
popa
pushf
mov
bound
rcrb
adc
push
add
lahf
daa
mov
mov
data16
xor
data16
jge
loop
sbb
pushf
jo
sub
pop
test
mov
imull
lea
aas
testb
filds
push
outsl
lods
jne
bound
loopne
rcrl
and
sbb
cmp
imul
fadd
je
mov
xchg
ja
mov
sub
sbb
in
loope
jmp
call
jl
fadds
add
pop
mov
jg
jle
inc
push
mov
fcmovnb
jne
or
ret
in
cmp
rolb
in
fsubs
pop
loop
mov
mov
add
mov
imul
cli
sarb
add
pop
out
ret
sahf
adc
xchg
xor
dec
imul
addr16
cmp
sub
fcomi
jmpw
stos
sub
cmp
in
cld
sbb
push
inc
mov
repz
inc
bound
xchg
and
fldt
xchg
dec
push
jg
xchg
mov
roll
pusha
push
add
push
mov
sahf
data16
and
inc
push
in
xor
cwtl
and
and
mov
mov
test
mov
addr16
push
jp
cs
mov
ds
shlb
cmpl
popf
ds
jnp
pop
or
je
push
inc
pop
es
push
aas
fbstp
iret
inc
inc
jo
xchg
cld
sbb
das
movsb
insl
movsb
inc
add
cwtl
xorl
repnz
dec
push
lret
pop
sbb
imul
adc
cs
lods
mov
nop
in
jl
lds
adc
popf
or
idivl
cs
fcomps
ret
pop
sbb
stos
jge
and
inc
out
das
ds
sbb
nop
xchg
dec
shll
mov
adcb
pop
sub
sub
push
inc
loopne
adc
xchg
rolb
cmp
cmp
sub
cmp
mov
jnp,pt
mov
xchg
insb
out
mov
inc
aas
movsl
in
dec
inc
pushf
jle
int
jae
dec
aad
lea
push
jge
xchg
push
xchg
lods
inc
sbb
jmp
mov
and
fimuls
pusha
mov
dec
dec
jle
and
pop
fidivl
push
pop
insb
xor
fcom
scas
mov
subb
iret
jbe
movsb
mov
add
mov
mov
xchg
insb
push
sub
ljmp
and
xor
cmp
test
push
inc
pop
mov
pop
xor
mov
dec
subb
hlt
xor
popa
xchg
xor
xchg
mov
inc
insl
pop
jge
fwait
lahf
inc
rcll
sbb
xchg
stos
dec
icebp
or
mov
sbb
rolb
imul
cmpsl
jge
and
daa
mov
adc
sbb
jnp
cmpsl
mov
push
dec
dec
iret
stc
sub
movsl
cli
mov
add
pop
xor
aas
fsubr
jmp
xchg
sub
rorb
ja
sbb
mov
fsubp
mov
stc
cmp
push
es
hlt
cmp
pusha
lock
pop
bound
sbb
cmp
sbb
xchg
stos
and
xchg
popa
in
sub
mov
and
push
cmpsb
popf
int3
imul
clc
dec
adc
test
cmp
push
xor
mov
jmp
sti
mov
mov
out
adc
cmp
ret
cmp
scas
popf
dec
push
sbb
je
mov
pop
cmp
sub
or
mov
les
adc
pusha
cmp
outsb
stos
out
jle
sti
imul
stos
push
cmp
sub
in
xor
pop
ret
outsb
std
push
icebp
xchg
pop
add
scas
fsts
fs
outsl
outsl
std
mov
pop
je
pushf
adc
add
sbb
adc
in
sbb
out
push
ds
or
outsb
push
insl
lret
les
cmp
fadd
rcrl
and
xchg
cmp
mov
test
add
fdivp
ss
pop
push
shll
adc
out
into
fildll
pop
lea
arpl
scas
data16
adc
rorl
inc
lahf
or
and
repz
in
fidivl
jecxz
xchg
das
xor
dec
inc
dec
repz
aad
push
fnstcw
jmp
arpl
xlat
push
sahf
cmp
cmp
mov
test
ja
lret
andl
repnz
inc
or
jnp
xor
add
adc
sbb
pop
adc
xor
and
add
sub
sbb
mov
ret
push
xor
mov
fsub
repnz
mov
jno
xchg
fldt
movsl
add
in
xlat
push
scas
cmpsl
pop
jbe
cmp
adc
mov
lret
push
add
dec
xchg
inc
xchg
cmp
xchg
jp
push
lock
xor
movsb
ja
cmp
adc
ds
sbb
mov
inc
sub
xchg
pop
pop
mov
lret
imul
xchg
mov
push
jns
shrl
push
scas
pusha
testl
or
adc
push
cli
mov
lcall
pusha
mov
add
pushf
data16
mov
mov
imul
jle
and
je
xchg
dec
cmp
push
repnz
jnp
dec
push
mov
fcomps
jnp
sub
mov
nop
cmpb
clc
cmp
add
cmp
or
dec
mov
mov
mov
mov
subb
scas
mov
mov
sbb
outsb
rorb
iret
fstl
mov
lock
aad
xchg
jae
nop
cmp
js
mov
push
ljmp
jg
mov
int3
xlat
sub
clc
pop
orb
push
popf
shrb
or
dec
push
adc
push
int3
adc
adc
dec
fildl
pushf
lea
adc
jge
iret
add
xlat
add
jl
lcall
ljmp
sub
scas
pushf
lods
out
adc
xchg
inc
fsubr
out
out
or
sub
outsl
mov
fdiv
ret
imul
add
xor
mov
test
xchg
push
stos
iret
aaa
out
ss
inc
imul
call
int3
enter
xor
in
fs
cmpsb
out
xor
call
je
inc
hlt
inc
jns
movsb
sbb
xchg
and
fwait
adc
push
pushf
inc
push
cmpb
imul
shrb
jl
and
sti
xor
cmpsb
andl
jo
mov
sub
pop
stos
inc
int3
inc
fidivrl
out
call
xchg
out
adc
mov
push
les
pop
arpl
addb
sbb
rorb
ret
push
pop
jnp
enter
or
pop
jo
xchg
popa
pusha
gs
adc
jbe
ds
fucom
popf
pop
mov
xor
enter
sbb
lock
jno
xor
mov
cmpsb
filds
cs
rol
sti
lods
inc
sahf
adc
ret
add
shrl
xchg
mov
xchg
sbb
inc
xchg
imul
mov
sbb
push
subl
add
pop
addb
mov
add
cltd
cltd
cmp
push
add
xor
pop
sub
rcl
xchg
mov
rolb
or
dec
cmp
outsl
and
sbb
popf
shrl
in
jg
pop
sbb
int3
sub
xchg
cmpsl
out
jb
and
hlt
xchg
inc
out
push
shl
sub
and
and
add
xchg
inc
stos
adc
shlb
mov
gs
fisubs
and
push
cld
sub
sahf
and
mov
inc
stos
cltd
jmp
outsb
jns
cmp
push
pop
call
js
movsl
cwtl
jl
inc
mov
out
and
mov
adc
xchg
and
cld
test
xchg
xlat
stc
leave
pop
mov
jg
arpl
adc
arpl
sti
pop
xor
testb
fwait
and
dec
add
rolb
dec
popf
ljmp
andb
or
shl
gs
pop
jecxz
cmp
cli
cmovle
incb
add
aas
call
pop
jbe
add
cmp
pop
jno
pop
sub
lea
mov
dec
stc
jge
adc
jecxz
lds
cmp
mov
scas
movsl
sub
iret
sti
jecxz
mov
gs
imul
inc
push
pop
fstpt
mov
out
ret
sbb
xchg
loop
cltd
xchg
push
popa
sbb
iret
mov
shlb
xchg
xor
mov
xchg
dec
movsbl
pusha
sbb
xor
xor
mov
in
inc
icebp
mov
in
pop
lret
clc
dec
ss
jnp
outsl
sbb
sbb
das
adc
dec
inc
aad
js
sbb
or
jno
push
cmp
mov
push
aas
push
sub
das
stc
push
in
cmp
in
pop
sarb
cli
in
pushf
loopne
mov
fdivrs
idiv
push
adc
lcall
scas
ficoml
push
jnp
mov
or
in
and
xor
jmp
fs
fisttpl
nop
stos
pop
push
add
nop
dec
icebp
in
jg
sbb
stc
stos
jnp
dec
or
jg
push
jns
dec
jmp
stc
decb
leave
std
btr
jl
cltd
jae
outsb
cld
out
movsb
movsb
outsl
inc
adc
loop
in
jno
and
das
cli
mov
clc
mov
inc
xor
jns
sub
jnp
jne
add
and
push
mov
add
addb
push
pop
aad
jmp
xchg
adcl
mov
fistpl
inc
scas
xor
call
inc
cs
mov
mov
cmp
in
cmp
outsl
ret
rcr
iret
xor
test
mov
add
roll
mov
dec
push
movb
mov
lret
sub
mov
xchg
mov
jno
sbb
into
out
lret
cwtl
mov
inc
jno
shll
pop
and
in
rolb
sub
shrl
das
mov
cmp
bound
add
adc
aad
orl
cwtl
cmp
inc
inc
and
lock
or
in
sbb
lods
loop
shlb
outsb
xorb
mov
mov
mov
jl
mov
xor
addl
jge
scas
mov
jmp
jo
dec
call
mov
mov
mov
decl
psubsb
pop
inc
mov
cmpsb
js
imul
xchg
pushl
pop
das
fdiv
lret
into
or
mov
pop
mov
jo
add
pop
test
mov
inc
movsb
mov
mov
jecxz
xchg
hlt
jb
repz
shr
or
lea
lock
adcl
test
adc
or
cmp
jne
jmp
test
adc
sti
push
daa
sti
jge
or
outsb
iret
push
inc
mov
cmpsl
adc
popa
pop
xor
xor
add
dec
push
push
pmaxsw
mov
ss
sbb
jo
sub
add
add
shl
in
inc
push
ret
sbb
sbb
imul
aaa
cmpl
jo
jp
in
in
ret
out
repnz
mov
sub
xor
aas
push
repnz
xchg
mov
sbb
shlb
in
mov
or
aad
imul
rep
sbb
push
cmp
push
pop
inc
out
add
fmul
jb
iret
addr16
aas
add
int3
out
push
xor
cli
aaa
test
bound
jecxz
and
or
ja
adc
sub
clc
jmp
mov
out
xchg
in
adc
loop
inc
outsl
or
out
adc
andb
lds
test
mov
call
daa
jecxz
lds
jg
inc
pop
adc
push
add
loope
or
dec
sub
dec
leave
out
imull
clc
test
pop
push
fidivrs
popa
out
jbe
push
pop
andl
adc
stos
jne
je
add
dec
clc
cltd
fdivl
frstor
inc
enter
cli
mov
stos
iret
jno
inc
shrb
add
repnz
xor
fs
aam
and
jmp
adc
push
or
int
pop
fdivrs
add
les
ss
xor
mov
mov
jecxz
push
gs
hlt
push
pop
push
pop
mov
cmp
in
dec
test
test
lds
jle
xor
push
test
sub
sub
or
mov
and
cltd
or
lock
jg
dec
adc
mov
mov
and
shll
movsb
ss
and
test
aad
sbb
jb
insl
gs
dec
inc
or
mov
dec
push
and
add
mov
in
stc
repz
out
andb
pop
les
aam
and
add
push
fdivs
int
inc
inc
push
lahf
lea
or
mov
dec
repz
dec
addr16
je
out
and
divl
shrl
xchg
icebp
mov
ljmp
inc
mov
shll
sarl
adc
inc
ss
test
popa
sahf
pop
push
ja
mov
mov
loopne
mov
movsl
pop
call
es
sub
push
stos
jo
add
sbb
fcomp
add
fsubr
cs
and
call
sbb
iret
shll
cli
loopne
mov
imull
push
je
inc
jo
jecxz
xchg
add
xor
cs
pop
pop
je
dec
nop
sti
pop
xor
sbb
insl
mov
rorl
cmp
cmpsl
dec
jmp
data16
inc
add
mov
mov
pushf
xor
adc
push
lret
neg
sbb
and
clts
nop
bndldx
xor
lret
or
sbb
movsb
dec
push
pop
mov
xor
dec
inc
adc
inc
enter
mov
dec
ss
xor
rclb
int3
aam
je
cmp
push
dec
push
cmp
and
adc
adcb
pushf
jp
lcall
fbld
pop
inc
mov
in
xor
or
inc
dec
cmp
lds
cmp
jo
andl
stos
and
fisubl
pop
sub
fcomi
xchg
mov
xchg
mov
mov
mov
mul
test
imul
add
jl
outsl
and
xor
mov
es
add
dec
std
fcom
fs
inc
repz
inc
pushf
stos
mov
xchg
inc
stos
outsl
loop
push
aad
cltd
and
pop
aam
stos
dec
push
xchg
ror
shlb
nop
xchg
xor
sub
fstpt
dec
inc
jb,pn
push
out
sbb
and
dec
pop
cltd
and
fists
cmp
mov
sbb
inc
in
xchg
in
sbbl
adc
sbb
mov
push
xor
aam
rolb
xchg
push
lret
daa
sbb
add
stc
ss
inc
mov
jno
add
hlt
mov
or
xchg
push
cmp
xor
sub
jmp
stos
xchg
les
pop
or
pop
aaa
inc
sub
leave
addr16
std
orl
ljmp
dec
xor
rcrb
in
fwait
std
mov
jmp
fcompl
mov
leave
inc
xchg
push
pop
stos
mulb
int3
ret
jnp
mov
test
int
xor
adc
and
push
cwtl
xor
pushl
int
pop
xor
add
sahf
jns
jmp
inc
bound
hlt
cmpsl
adc
js
hlt
mov
sbb
xchg
pop
jmp
mov
adc
lcall
in
les
cmp
inc
jo
out
xor
or
xor
insb
mov
shrb
jl
scas
cmp
andl
push
or
test
iret
aaa
paddq
lock
fiadds
dec
arpl
mov
lods
sahf
push
or
out
and
lods
mov
mov
jmp
sbb
xchg
mov
jns
jne
les
daa
movsl
in
inc
dec
xchg
mov
ret
fcomps
outsl
test
ret
inc
fs
aad
sub
inc
js
lret
add
xor
cltd
lahf
fs
lea
cmp
sahf
cmp
ja
jne
sbb
mov
push
sbb
aas
jecxz
push
pop
js
cmpsb
or
bnd
aas
xchg
inc
mov
dec
lret
inc
stos
jl
lds
rcrl
sarb
cmp
inc
data16
stos
cmp
xchg
pop
inc
add
xor
pop
cltd
stos
mov
jp
push
dec
dec
inc
dec
sbb
lahf
dec
hlt
mov
jp,pt
sbb
sub
mov
sub
repz
sub
mov
cmpb
or
add
pop
push
inc
sbb
jmp
mov
dec
sti
and
push
call
in
cli
fstpt
mov
mov
mov
orl
dec
sub
sub
sbb
and
add
out
ficompl
add
fistl
sbb
rorl
or
iret
ss
out
xor
cmc
adc
lea
jmp
push
or
test
lods
int
mov
push
adc
and
jge
mov
scas
outsl
lcall
call
fstpt
ficoml
or
lret
add
adc
cmp
and
pop
ret
adc
dec
mov
insl
mov
daa
repnz
xchg
les
incl
aam
sarl
adc
jl
dec
jne
scas
fmull
mov
push
inc
inc
jo
scas
shll
adc
pop
fbstp
into
mov
popf
xor
cmpsl
imul
mov
aas
dec
ds
mov
cmp
rcrl
lcall
sbb
fbstp
ds
rep
and
js
shll
cwtl
in
mov
pop
push
dec
xlat
push
sub
sbb
addb
lret
xor
imul
add
pop
es
push
mov
lahf
or
push
mov
stc
jo
and
dec
fdivrl
cmp
rcrb
cmp
or
aas
cmp
leave
rorb
mov
mov
into
adc
mov
mov
cli
loope
hlt
les
sbb
dec
cld
and
aaa
or
xchg
jnp
xlat
and
mov
mov
adc
adc
lret
repz
or
mov
push
dec
lret
cmpsb
sti
xor
andb
jae
mov
leave
sbb
and
mov
pushf
ljmpw
jnp
pop
dec
nop
in
mov
xor
mov
jge
pusha
push
fimuls
sbb
fwait
jns
clc
movsl
ljmp
sbb
push
mov
jnp
lds
leave
mov
mov
xchg
xchg
or
mov
aam
push
das
adc
and
xor
jnp
mov
aas
lcall
or
out
enter
lret
cmp
add
jecxz
aas
lods
pop
ror
adc
dec
hlt
dec
push
andb
jg
xor
test
pop
or
inc
lods
dec
mov
test
fs
dec
cltd
fsubl
and
pusha
sti
std
push
mov
cs
lret
lahf
test
in
es
mov
dec
mov
iret
outsb
push
lea
xchg
jno
mov
scas
rolb
popa
dec
out
popa
adc
stos
mov
adc
push
test
or
out
clc
std
mov
fs
and
dec
movsb
dec
xor
adc
imul
jno
mov
or
jns
adc
jo
add
loop
push
jno
jne
adc
scas
mov
std
pop
repnz
sbb
stos
jo
adc
inc
dec
adc
out
sub
outsb
xchg
fcmovb
arpl
das
out
or
cmp
mov
pusha
pop
test
mov
lahf
call
pop
and
shrb
ljmp
mov
movsb
and
divl
xchg
dec
mov
xor
movsb
xor
xchg
mov
pop
in
pop
cmp
xchg
pop
adc
aas
dec
cmp
jne
lret
es
movsl
js
mov
or
or
fmul
mov
icebp
push
dec
or
insl
and
cmp
out
pop
call
loop
push
out
pop
mov
jae
je
sub
pop
out
aaa
lret
mov
mov
dec
outsl
or
and
pop
movl
sbb
into
aad
xor
push
inc
mov
outsb
lahf
stos
lret
pop
int
dec
lods
lods
mov
jecxz
mov
sub
sti
into
push
push
mov
cmp
pop
mov
leave
or
jno
call
mov
inc
xor
leave
push
rclb
mov
cmpsb
cld
out
mov
mov
ret
es
out
push
iret
xchg
mov
lret
xor
inc
xchg
and
inc
add
xchg
idivl
int
inc
and
inc
xor
push
adc
pushf
dec
pushf
or
imul
and
aaa
lea
jns
pop
fimull
jb
lock
mov
jno
mov
push
cmpsb
or
scas
adc
das
outsb
loope
cwtl
outsb
jns
xchg
push
cli
mov
das
ds
xlat
push
sbbl
scas
mov
inc
dec
pop
mov
push
dec
add
jmp
addr16
aaa
sub
scas
adc
lods
push
add
xchg
fs
pop
add
xchg
test
data16
inc
push
push
mov
jne
into
sub
pop
add
cmpsb
pusha
aaa
repz
into
out
xchg
cld
or
mov
dec
lcall
add
and
cmpsb
lods
xchg
lret
xor
fsubrs
add
adc
xchg
push
add
mov
dec
dec
gs
fidivrs
cmp
test
mov
jae
xor
push
mov
in
inc
ret
roll
cli
subb
fsts
jmp
or
sub
pop
push
jbe
jmp
or
repnz
sahf
daa
orb
sub
clc
fwait
jne
mov
xor
iret
fildll
std
push
test
jmp
jg
push
or
cs
sub
mov
repz
loop
xor
sub
sub
push
cltd
mov
je
dec
popf
or
int
lds
pusha
ja
fcmovnb
ret
adc
aaa
push
cmp
lahf
dec
jle
mov
out
leave
xor
dec
xchg
stc
sbb
es
jg
inc
jl
cwtl
adc
test
iret
pushf
mov
and
push
aad
shrl
aas
repnz
insl
pusha
aam
and
pop
dec
pop
push
rorb
ja
ret
fdivs
shr
dec
lret
xchg
cwtl
or
dec
xchg
xor
cmpsb
pop
pushl
rorb
es
mov
hlt
sub
int
and
jge
daa
mov
mov
jae
pop
add
sbb
insl
or
insl
add
and
xchg
mov
cld
push
xor
mov
jle
loop
leave
fldenv
les
in
mov
loop
in
lret
sti
sub
dec
add
sti
cmp
pop
cld
daa
daa
mov
test
jmp
in
fdivl
adc
push
xchg
cmpl
xor
push
push
jg
call
jno
inc
mov
rorb
jae
mov
enter
mov
mov
push
ror
xchg
adc
pop
pop
adc
ret
push
inc
jb
and
pop
dec
mov
xchg
fs
push
les
jg
jp
sbb
movl
loopne
aas
xchg
scas
mov
loop
add
sahf
scas
jae
cltd
mull
sub
in
aaa
fnstcw
dec
mov
out
out
dec
scas
clc
fs
sbb
cmp
inc
cmc
into
xorl
das
mov
inc
inc
xchg
adc
cmp
and
sahf
mov
shll
das
jge
dec
mov
pushf
xchg
orb
inc
xor
insb
daa
xor
aam
jae
call
xlat
in
inc
imul
daa
and
sbb
pop
in
xchg
inc
test
xchg
test
aad
es
jge
dec
stos
out
add
xor
scas
ljmp
dec
sbb
jne
shl
hlt
jg
mov
add
pop
out
iretw
cltd
cli
jnp
xchg
ss
fmull
aaa
gs
in
pushf
mov
in
imul
xchg
mov
and
leave
rclb
mov
imul
in
dec
out
mov
lods
push
adc
dec
dec
popf
cmpsl
pop
mov
or
mov
iret
stos
arpl
scas
and
cmpsl
cmp
fdecstp
cmp
les
mov
cmp
lahf
mov
mov
pop
insl
sbbl
cmp
sbb
mov
icebp
cld
pop
jp
cld
push
cmpsl
inc
adc
add
jge
fcomp
mov
bound
mov
lret
push
ss
mov
pop
push
mull
lock
cs
cwtl
push
data16
loope
fmull
inc
mov
mov
scas
push
cmpsl
test
push
arpl
mov
daa
sub
insl
inc
data16
pop
shlb
sti
add
arpl
xchg
pmulhuw
loope
repz
lods
pop
pop
bound
jecxz
ror
call
cli
push
xchg
fadds
fcmovu
cmp
and
xchg
or
sbb
and
xchg
testb
stos
subl
es
mov
jecxz
mov
push
fcoms
xchg
mov
mov
int
inc
xor
rorb
mov
out
xor
lahf
lds
mov
jp
pop
xor
mov
mov
dec
dec
std
push
pop
nop
sub
and
ret
jl
adc
push
rorb
cltd
iret
jle
adc
mov
inc
mov
sti
paddq
cmp
dec
jbe
sarl
mov
push
insl
clc
lods
addr16
in
mov
push
mov
push
sub
les
in
add
mov
roll
rcrl
ljmp
mov
insl
rorl
test
je
dec
hlt
maxps
rorb
push
jmp
cli
rorl
mov
nop
cmp
xchg
imul
or
fldenv
test
dec
inc
dec
mov
and
sub
push
sub
cld
lret
xor
xchg
test
mov
xchg
out
lods
call
dec
movb
dec
out
or
cltd
mov
mov
pop
jae
js
imul
cs
shll
mov
push
xchg
lea
jecxz
jmp
jecxz
mulb
push
rclb
fs
sub
sub
cmp
mov
push
dec
stos
inc
push
jl
mov
and
mov
loopne
lahf
nop
das
fidivrl
sbb
movsb
sub
fs
icebp
pop
sti
shrb
lret
ljmp
adc
mov
cli
mov
into
imul
fs
dec
mov
es
xor
pop
xor
xchg
daa
lret
adc
jl
jecxz
xchg
push
mov
lods
ljmp
dec
sbb
dec
scas
mov
lds
sub
cld
arpl
push
test
jnp
fucom
scas
mov
push
in
dec
pop
out
mov
mov
ret
hlt
sub
stos
mov
clc
movsl
ret
mov
lret
and
or
inc
push
sbb
pop
nop
mov
mov
push
cmp
sbb
mov
sub
mov
ja
jecxz
inc
add
movsl
fs
out
xchg
sarb
insb
aas
mov
pop
or
ret
jmp
jle
pop
fwait
lahf
sub
adc
sahf
stos
and
pop
jmp
nop
aad
xor
lret
fstpt
mov
or
popa
dec
jecxz
push
pop
cmp
inc
xor
inc
mov
adc
pop
push
pop
cmc
add
push
add
xchg
je
mov
pop
jg
stc
mov
xchg
mov
addr16
dec
mov
push
inc
js
xor
ljmp
jno
das
xor
sahf
fucomi
sbb
ret
dec
clc
into
and
nop
loop
pushf
jo
xchg
jmp
ds
and
lcall
leave
cmp
add
ds
mov
cltd
sbb
lods
ret
pop
pop
add
cmp
sarb
mov
mov
aad
test
imul
scas
loope
mov
jo
pushf
out
or
dec
mov
fimuls
mov
sbb
outsb
add
rcll
inc
mov
and
cmp
scas
xor
jno
movsb
push
pop
cmpsl
jns
jmp
inc
mov
adc
aam
rol
cmp
dec
in
fwait
hlt
add
mov
or
fcmovnu
sub
ljmp
jnp
pop
stos
inc
add
xor
cmp
push
mov
das
lods
lods
mov
pusha
int3
js
lret
xchg
call
imulb
push
mov
sub
mov
mov
cltd
push
scas
mov
cmpl
repz
mov
jecxz
loope
int3
dec
add
pop
or
jp
jbe
mov
mov
test
mov
xchg
add
repz
dec
dec
adc
out
jecxz
int
cmp
mov
es
jne
mov
dec
push
lret
mov
test
push
mov
in
ret
lock
testb
fs
ja
stos
and
outsb
or
lds
test
jmp
xchg
jmp
not
xor
out
mov
push
popf
loopne
aaa
out
sbb
or
sub
xor
rcrb
imul
and
sbb
mov
data16
adc
loope
scas
addr16
mov
popf
shl
fcoml
or
xchg
jbe
insl
rclb
and
adc
test
push
push
mov
movsb
push
shrl
mov
fbstp
push
mov
ljmp
xchg
pop
outsl
ja
sbb
dec
dec
data16
xor
adc
outsl
and
js
lods
pop
cltd
daa
inc
inc
lds
mov
out
fiadds
stos
in
shlb
jbe
jmp
and
outsb
lcall
int3
mov
ljmp
mov
dec
ljmp
out
inc
adc
dec
dec
xor
sbb
jmp
mov
bound
sub
pusha
jae
and
sbb
imul
popa
xchg
fneni(8087
stc
sbb
fcompl
sbb
xchg
imul
and
arpl
xchg
jo
mov
fisubs
dec
nop
rolb
mov
sahf
mov
inc
addr16
mov
pop
mov
pop
leave
loopne
int
inc
pop
sti
push
pop
xor
sbb
push
cmpsb
out
inc
les
jae
and
xlat
jo
dec
push
cmp
lret
test
ljmp
pushf
cs
add
sub
loope
xor
cmp
mov
out
shll
les
stos
sub
repz
shll
je
cmp
fwait
sahf
jns
ss
cld
pop
xor
add
data16
mov
into
stc
jo
stos
inc
sub
int
mov
pop
or
stos
iret
pop
fnstenv
clc
push
in
lret
out
inc
mov
arpl
push
xor
les
jo
xchg
mov
cmp
adc
mov
jno
pop
mov
jne
fnstcw
das
dec
xchg
mov
mov
mov
inc
mov
outsb
inc
cmc
jecxz
inc
mov
testl
adc
outsl
data16
pop
jae
popf
mov
jb
cwtl
call
dec
xor
shlb
push
lods
gs
test
or
aam
sbb
sbb
pusha
lods
jmp
sub
add
and
iret
pop
push
arpl
cmp
icebp
loop
dec
jecxz
dec
js
xor
or
cmp
leave
mov
out
push
inc
pop
jle
push
mov
inc
stos
push
subb
stos
push
leave
sub
fwait
pusha
sbb
std
lret
das
repnz
out
mov
push
nop
fucom
outsb
mov
imulb
cmpsl
or
in
out
inc
fdiv
dec
inc
ret
or
testb
ja
xor
aas
push
out
xchg
rclb
or
xor
loop
and
in
pusha
in
lods
push
mov
inc
out
loop
lds
jne
out
es
add
and
xor
pop
xchg
and
pop
loopne
adc
test
fs
mov
xchg
cmp
das
lret
js
xchg
out
adc
ret
lea
popf
test
sbb
lods
outsl
push
mov
insl
sub
mov
push
test
imul
jl
xor
fistl
loop
add
movsl
dec
inc
jle
stos
pop
out
xchg
or
clc
sub
or
xchg
cmc
and
fbld
jp
imul
jo
outsl
dec
lds
pmuludq
xchg
add
xor
adc
lcall
adc
xchg
or
inc
arpl
stos
xor
and
ret
es
adc
and
xchg
jno
lret
aad
dec
cli
int
repnz
lret
out
fs
sbb
jecxz
mov
sub
pop
mov
pop
popa
lcall
xor
imul
fstl
push
dec
push
stos
fsts
test
rcll
std
into
sahf
call
push
or
dec
or
inc
daa
lods
xchg
sub
mov
test
jge
jmp
int
lret
syscall
bound
add
and
addb
out
lret
mov
mov
dec
jg
cmp
or
imul
das
lret
into
mov
mov
jmp
cmpsb
arpl
rcr
mov
push
dec
lds
pusha
lahf
test
repnz
in
adcl
out
xchg
jmp
push
push
idivb
aaa
mov
sub
les
xor
cmp
jb
ret
jnp
mov
or
jno
add
mov
fsubs
mov
pop
add
shl
mov
add
xchg
xor
leave
stos
movsl
pop
mov
rcrb
inc
stos
mov
aad
jmp
push
xchg
in
cltd
add
mov
adc
loop
das
dec
lcall
stos
pop
jbe
enter
mov
shl
or
fwait
btc
mov
inc
imul
and
pop
stos
insl
jecxz
adc
dec
out
jp
mov
movsb
outsb
movsb
sub
jno
ffreep
dec
xchg
mov
adc
xchg
bound
jns
in
mov
or
js
inc
push
push
sub
sbb
stc
iret
lret
inc
rcll
cli
lret
out
sbbl
xor
sarl
sbbl
sbb
sub
pop
ret
mov
int
aas
testl
adc
fs
dec
stc
stos
daa
es
test
decl
mov
add
add
movsb
imul
pop
sahf
adc
inc
les
loope
mov
lcall
or
pop
lods
nop
aam
fsubp
cmp
xlat
xchg
mov
shlb
jle
jnp
xchg
aad
lods
imul
lods
das
xchg
loopne
or
push
dec
std
rep
cmovle
cmp
frstor
inc
add
sub
in
dec
push
call
shll
sub
sub
lret
test
xchg
inc
mov
ret
mov
cmpsl
xor
ds
ss
and
cmc
mov
mov
ret
daa
xor
and
fisttpll
lock
mov
sbb
xor
sbb
ljmp
pop
xchg
out
test
scas
push
repnz
push
fmul
sub
add
fldl
std
pop
jl
push
mov
push
mov
lret
inc
xchg
sub
jle
addr16
xchg
pusha
adc
popf
ja
push
jp
dec
push
push
mov
jmp
jne
imul
cld
out
push
clc
dec
movsl
mov
inc
add
scas
push
jne
xchg
int3
mov
adcb
test
sub
les
shl
rcrl
mov
xchg
sub
mov
subb
pop
insl
cli
loope
lds
adc
sub
les
xor
call
loopne
cmpl
call
cwtl
sbb
xor
aad
in
mov
pop
lds
ret
cmp
lods
test
inc
jmp
int
movsb
ljmp
cmp
inc
cmpsl
mov
hlt
and
pop
daa
xchg
sbb
rcr
ja
jmp
faddl
inc
push
or
jmp
icebp
push
daa
outsl
inc
les
mov
stos
shrl
orl
sub
jmp
repz
cmpsb
cmp
cmp
or
push
mov
popa
aas
fdivrs
mov
mov
inc
mov
in
pushf
cmc
imul
cmpl
in
add
add
push
sbb
daa
xchg
andb
push
sub
enter
push
adc
fdivl
adc
push
dec
inc
imul
adc
jl
jne
shrb
andl
test
cmpsl
mov
sti
pop
stc
lds
dec
out
stos
fcompl
push
arpl
sub
jne
cs
std
adc
imul
sub
ss
push
cmp
mov
dec
xor
outsb
ja
mov
mov
jg
mov
cmpsb
movsl
add
push
mov
fprem1
mov
int3
loopne
or
roll
mov
icebp
flds
pop
push
fwait
dec
push
or
mov
jae
iret
inc
nop
stc
and
test
pop
cmp
add
inc
out
add
adc
mov
inc
xchg
stc
dec
push
movsl
xchg
popf
dec
jns
sbb
stos
mov
and
cmp
rol
adc
outsb
push
mov
or
sub
sub
pop
mov
ficoml
ja
sub
movsb
fldl2t
lods
mov
push
push
mov
sbb
icebp
jmp
popf
sbb
xchg
call
bts
adc
adc
insb
adc
fnsave
stc
mov
nop
pusha
loop
sbb
xchg
cwtl
inc
std
mov
add
cwtl
add
ficoms
cltd
leave
and
lea
icebp
fdivrs
stc
inc
inc
sbb
outsb
push
mov
and
lea
test
sbb
hlt
sbb
ja
push
pop
and
push
dec
in
out
push
push
mov
pop
leave
push
adc
pop
jnp
mov
loopne
hlt
and
arpl
mov
push
dec
jge
mov
mov
pop
scas
cwtl
pop
xchg
xchg
dec
xchg
test
xchg
js
push
clc
cmp
jmp
leave
and
or
test
and
jno
mov
mov
push
stc
lods
push
ja
mov
sbb
push
nop
add
or
push
mov
xchg
aad
push
sbb
int3
dec
mov
mov
mov
add
dec
cmp
adc
dec
xchg
adc
outsl
inc
xchg
sahf
push
xchg
jnp
xor
inc
repz
out
popa
movsl
lods
dec
jmp
and
add
std
mov
xor
jo
mov
ror
mov
cld
addl
call
lahf
or
lods
and
dec
jae
movsb
push
outsl
add
stos
mov
dec
mov
dec
rolb
shl
incb
mov
jo
add
mov
dec
fs
lcall
in
sub
xchg
jnp
outsl
jmp
test
insb
xorl
rcrb
insb
mov
push
cmp
int3
pop
imul
jo
fwait
cmc
dec
fisubs
mov
xchg
push
imul
pop
xor
pop
xor
mov
and
adc
cmp
inc
mov
outsl
bound
lock
aad
fcomps
jne
and
push
xor
insb
cmp
outsl
dec
sbb
jno
lahf
cmp
sarl
stos
lahf
fistpl
daa
fisttpll
sbb
fidivrl
lea
in
jns
and
lahf
or
push
add
in
fiaddl
cltd
xchg
psubsw
mov
repz
ds
add
jae
cmpsb
sarb
into
sub
inc
push
xor
push
adc
out
ror
bound
or
push
in
push
add
arpl
xchg
lretw
fildll
xchg
andl
add
aam
jno
rcll
xchg
repz
out
pop
pusha
dec
sbb
mov
dec
imul
stos
loop
jecxz
orl
lahf
aad
loopne
aas
jl
test
and
sub
sub
xor
popf
sbbl
push
sub
sub
stos
mov
je
jp
xchg
lock
jno
imul
sahf
dec
incl
cld
gs
xor
jl
mov
pop
pushf
jmp
cltd
jmp
xchg
pusha
xchg
cmp
jns
inc
xchg
sbb
subl
mov
push
jo
daa
fimull
sbb
fisttpll
and
shl
pop
push
testl
loopne
mov
test
cs
mov
call
rcl
xchg
xlat
gs
shll
js
ficoml
adc
dec
bound
pushf
daa
les
inc
and
dec
hlt
xchg
add
jl
out
push
pusha
mov
incb
mov
int3
jnp
das
test
push
dec
adc
jb
xchg
adc
ret
repnz
fsub
ret
push
cmp
rcll
push
xchg
scas
sbb
jo
sbb
jo
sbb
xlat
repnz
rcrb
jnp
xor
iret
pop
out
fnstenv
xchg
xchg
fsubl
shrb
in
enter
xor
add
sub
mov
test
jns
fs
out
mov
scas
mov
jle
jbe
push
dec
aas
pop
mov
cli
pop
je
sub
lods
adc
mov
cmp
in
inc
in
ret
xchg
sbb
cmc
or
pop
loop
mov
mov
cmpb
adc
pmaxsw
fs
or
data16
test
push
adc
nop
push
xor
or
loope
icebp
fiaddl
mov
lea
add
jecxz,pt
icebp
push
mov
jge
jae
movsl
lahf
scas
pop
pop
popf
push
sub
mov
ret
mov
aad
stc
sbb
cld
sbb
hlt
adc
xchg
jge
dec
push
ficomps
pop
sarb
es
push
mov
xchg
aam
push
imul
push
pop
cmpsb
js
nop
nop
movsb
push
xchg
and
and
aam
inc
rcrb
pop
lahf
adc
mov
inc
mov
popa
clc
push
push
and
lods
cmp
mov
sub
loope
mov
not
mov
or
mov
aaa
sarb
fistpl
shlb
mov
enter
mov
add
gs
repz
jmp
test
jl
insb
sub
sub
mov
or
imul
cmp
jnp
insl
sub
push
loope
mov
push
cmp
and
mov
ret
aas
imul
test
mov
les
mov
imul
shrl
xlat
out
pop
ss
dec
rorb
push
loope
push
jmp
cmpsb
pop
aas
adc
enter
add
xchg
cmp
mov
enter
add
pop
leave
xorl
jno
les
daa
xor
pop
fwait
jns
adc
ret
test
mov
push
pop
pusha
icebp
xor
inc
mov
sub
sti
addr16
fisubl
and
push
pushf
out
repz
popf
and
pop
adc
xlat
pop
repz
mov
fwait
sbb
shrb
cmp
sbb
scas
mov
jle
push
pop
data16
xchg
and
fidivs
dec
cmp
dec
subl
push
dec
mov
mov
adc
cmp
leave
xor
pushw
icebp
lea
cmp
xchg
les
lahf
jo
shrb
cmp
dec
pop
jg
ret
les
sbb
pop
mov
xor
inc
std
stc
testb
ds
or
rorb
out
cs
pop
mov
jbe
mov
mov
mov
or
mov
mov
sbb
xor
lcall
pushf
loopne
xor
daa
push
adcb
or
or
das
mov
pop
aad
sarl
stc
addl
filds
hlt
out
and
mov
stos
mov
sub
sahf
mov
mov
dec
loop
out
and
mov
adc
xchg
add
adc
and
in
inc
rolb
icebp
mov
mov
xchg
cmp
add
pop
jle
lahf
cs
lahf
aaa
shlb
in
cltd
jmp
je
sarl
outsb
int
fwait
in
out
inc
xor
rol
xchg
arpl
or
je
dec
arpl
arpl
out
int3
cltd
mov
cmpsb
orl
lcall
cmpsb
or
ret
jle
sub
add
imul
mov
rcr
lahf
or
and
pop
sub
addr16
enter
mov
or
into
adc
out
cmp
cmc
movsl
pop
nop
in
fwait
ljmp
xor
cmc
std
dec
clc
enter
xlat
mov
dec
xchg
push
push
dec
xor
mov
dec
jno
sarl
insl
xor
loop
jecxz
in
xchg
fists
test
pushf
sub
push
mov
iret
lock
push
mov
lcall
or
dec
mov
movb
sub
mov
mov
fs
clc
mov
insl
dec
ret
stos
sbb
jg
in
inc
jns
push
pop
ret
inc
push
scas
mov
lret
ja
loopne
push
mov
fmul
pop
icebp
cmc
mov
cmp
out
push
jne
xlat
shlb
cmp
dec
sbb
je
or
or
dec
out
jnp
jmp
and
dec
shrl
and
test
or
cmpsl
push
jle
shll
sub
fcomp
dec
mov
sbb
jnp
rcrb
fwait
xchg
add
shlb
sub
aas
xchg
mov
mov
pop
sbb
jno
push
cmp
nop
cmp
in
ja
add
jmp
daa
cmpsb
rolb
nop
mov
repz
popf
cmp
lea
mov
fdivs
mov
lcall
data16
lock
not
mov
js
pop
imul
cmp
add
jo
fs
outsb
idivb
mov
xor
inc
cmp
nop
pop
mov
mov
jl
in
xchg
or
mov
js
push
mov
in
adc
mov
std
xchg
jge
ror
jmp
nop
ljmp
and
mov
dec
imulb
lret
test
nop
cmp
es
pop
cmp
mov
jno
repnz
ret
cltd
outsl
sub
clc
and
jns
pop
clc
notb
insl
mov
xlat
adc
push
cs
in
pop
rcrb
mov
and
in
sub
or
xor
push
jecxz
fcomps
xchg
pop
xchg
in
mov
push
loop
subl
mov
jge
push
push
mov
lcall
sbb
std
push
movsl
jb
insl
pop
push
cmp
lret
adc
hlt
pop
insl
adc
in
dec
and
push
cmp
mov
aad
push
push
adc
push
jne
pushl
jno
jg
cltd
bound
inc
jo
xchg
and
pop
mov
cmpsl
and
sub
out
xor
mov
flds
xor
fdivrl
xchg
cmpsl
sbb
cwtl
mov
movswl
imull
std
out
xchg
movsb
push
dec
lds
lret
xchg
mov
xchg
pop
scas
cmpsb
push
cmc
shrl
mov
fcoms
mov
inc
cmp
fs
or
cli
jno
push
out
cltd
insb
je
mov
cmc
xlat
sub
movsb
adc
addr16
push
adc
jecxz
add
add
xor
gs
jae
sub
imul
mov
leave
dec
addr16
or
pop
dec
insl
push
incb
out
popf
call
daa
adc
lahf
negb
ret
pushf
adc
dec
cmp
or
xor
pop
push
insl
inc
arpl
je
xor
dec
imulb
mov
inc
inc
int3
cmp
insb
push
or
xor
hlt
jo
test
rcrb
ds
inc
or
fidivl
lret
mov
push
push
mov
fildll
ret
jne
pusha
sub
and
lock
lret
mov
jmp
jb
loope
sbb
pop
in
fstpl
and
mov
frstor
mov
inc
clc
in
in
cltd
stos
adc
sub
jg
add
movsl
aad
xchg
stos
cltd
add
loope
cwtl
mov
cmp
push
les
in
add
imul
imul
sbb
inc
push
mov
loop
jg
and
je
sahf
xor
outsl
dec
xchg
mov
out
jnp
cs
or
dec
pop
jnp
pop
push
dec
into
add
or
xchg
int
or
jns
in
pop
xchg
inc
shr
inc
xor
inc
fsubl
divl
lods
jno
pop
dec
shlb
sbb
mov
lret
test
mov
pop
push
dec
addb
out
fnstcw
sbb
aad
mov
imul
pop
jae
push
xchg
lret
push
negb
mov
jmp
mov
mov
jge
mov
lret
sub
mov
pop
pop
mov
cmp
movsl
push
jbe
clc
dec
adc
adc
xchg
popa
lret
push
mov
cmp
jmp
push
add
daa
pop
pop
movsl
call
not
mov
pop
mov
jbe
xor
mov
lcall
jns
cmp
mov
cmp
lcall
iret
inc
aaa
aam
or
gs
sub
dec
sbb
cmpsl
mov
adc
ret
outsb
aam
dec
xchg
rclb
je
fcmove
add
cmp
daa
inc
sub
mov
cmp
insl
in
pushf
fcoms
into
cmp
mov
popf
or
push
mov
aaa
loop
cmp
in
fdiv
pop
push
bound
pop
push
cli
pushf
mov
and
and
pop
ret
test
jns
in
mov
mov
cli
xchg
cmp
scas
mov
stc
jnp
das
or
pop
scas
jno
test
and
pop
sbb
lcall
stc
and
pop
cmp
fadds
ja
push
add
and
lods
int3
adc
stos
pusha
int
cmpsb
xchg
scas
test
cmp
imul
aam
cs
in
inc
aam
lock
imul
inc
lods
adc
adc
push
xor
pop
pushf
dec
cld
ret
mov
lods
xlat
xchg
inc
fidivs
cwtl
iret
iret
stos
xchg
xchg
mov
into
vmwrite
jae
and
mov
sbb
cmp
loop
or
mov
mov
in
push
bswap
lcall
aas
out
fiaddl
ds
stc
and
mov
lods
xchg
jl
inc
sub
enter
fwait
dec
pop
lret
pop
inc
not
mov
mov
fisttpll
xchg
jnp
mov
and
mov
push
xor
lods
mov
add
out
add
dec
dec
adc
xorb
sbb
loope
push
sbb
jmp
lret
in
ret
push
inc
fwait
fidivrl
ret
popa
lods
push
jle
xor
pushl
xor
das
pop
sbb
test
iret
or
xchg
adcb
loope
cltd
mov
dec
inc
out
sbb
mov
testb
add
jecxz
in
push
inc
pop
cmp
jmp
jmp
xor
cmp
ret
insl
sub
adc
sub
insb
sub
hlt
fists
jge
out
mov
in
call
jg
sti
cmp
mov
test
jmp
nop
daa
xor
or
or
mov
repz
mov
sub
aad
das
mov
push
aad
xlat
push
cwtl
call
add
popf
sahf
push
aad
and
movsb
cli
rolb
std
jge
jo
bound
jl
aam
lea
shll
pop
jmp
fwait
jle
xchg
xchg
and
mov
das
adc
mov
cmc
scas
xchg
ret
xor
stos
out
hlt
mov
push
ljmp
outsb
adc
jp
ja
fbld
mov
inc
pop
data16
adc
outsl
andnps
outsb
fsubrl
mov
push
test
addb
pop
mov
js
push
fisubrl
dec
and
mov
scas
cmp
xor
daa
rcrl
jp
or
nop
outsl
popf
movsl
jl
fdivr
daa
bound
mov
pushl
jne
mov
into
jle
aaa
mov
sbb
cmp
arpl
xchg
inc
negb
repz
mov
cmp
jle
loope
lds
adc
test
sbb
dec
mov
mov
inc
jne
mov
aam
jg
xchg
sbb
in
std
dec
loopne
shr
call
push
in
imul
lods
dec
aam
pop
mov
jbe
sbbb
rcrb
xchg
repnz
ja
mov
jno
push
add
popf
fcomps
pop
out
dec
mov
imul
jge
inc
dec
cwtl
mov
inc
push
das
out
pop
loope
fildll
lods
mov
pusha
stos
mov
jge
pushf
pop
lds
shl
and
mov
icebp
xor
xor
es
cmp
inc
stos
into
aam
pop
nopl
lcall
das
jne
pop
dec
ret
xor
push
push
add
int3
and
shlb
adc
sbb
cmp
xchg
mov
mov
icebp
jne
mov
lea
mov
fldl
je
testb
xchg
insb
mov
cltd
cmpsb
mov
int3
call
fdivrl
xor
xlat
dec
xchg
lds
cwtl
leave
clc
inc
pushf
or
push
ss
and
loopne
insb
std
mov
scas
fldcw
mov
mov
imul
mov
sbb
aas
ja
pop
insl
add
testl
adcb
sbb
xor
and
into
cli
xchg
pop
mov
movsl
add
xchg
pop
dec
cmpb
sub
cmp
mul
xchg
lods
xchg
lret
sahf
mov
lret
scas
cmpsb
sti
icebp
imul
stos
push
inc
nop
frstor
xchg
sbb
add
lahf
es
jmp
mov
in
loopne
mov
jmp
clc
pushf
repz
mov
test
mov
out
test
pop
dec
jg
testb
dec
popf
call
xor
sbb
loop
jl
or
pop
jnp
sbb
pop
and
ret
sahf
cmpsl
daa
repnz
sbb
pop
movsb
sti
enter
sub
sbb
cmp
hlt
sbb
jnp
fisubrs
xor
dec
in
imul
jns
scas
arpl
mov
hlt
add
or
rcrl
imul
fbld
bound
aam
jecxz
xor
cld
sbb
mov
fs
xlat
lea
push
cs
mov
cmp
and
or
cmp
icebp
stos
xor
inc
mov
adc
sub
add
sbb
fbstp
mov
push
cmp
lock
sbb
stos
out
inc
xor
cmp
xor
lock
pop
or
add
dec
insb
cmc
xor
jb
xchg
and
cmp
push
cmp
adc
stos
and
mov
test
shlb
popf
or
push
stos
pop
sarb
mov
cld
inc
ss
mov
call
les
ficomps
mov
dec
ss
xor
pop
je
add
loope
ret
xchg
dec
mov
push
cmp
je
arpl
repz
mov
aad
mov
jne
pop
insl
mov
dec
jl
stc
sub
and
jno
mov
cmp
mov
lahf
mov
stc
inc
bndstx
xor
cld
push
push
mov
gs
fisttps
cltd
sbb
scas
out
rsm
mov
mov
js
or
es
xchg
cwtl
push
adc
cld
mov
fsub
jb
rorb
ja
mov
outsb
inc
shll
rol
fmuls
push
sub
dec
into
out
or
mov
lock
sub
inc
sub
nop
sub
xchg
cmp
push
movsb
push
loop
into
mov
push
xchg
mov
dec
or
out
iret
repz
and
nop
cmp
cmpsb
lea
sbb
cmpsl
fadds
jg
out
mov
daa
mov
cld
iret
sbb
pop
cmpsb
les
adc
outsl
and
loope
add
lret
xor
dec
aad
pop
call
xchg
jbe
lods
or
insl
imul
insb
dec
adc
gs
jmp
cmp
add
lds
stos
push
leave
pop
mov
int
loop
xor
sbb
xchg
inc
gs
arpl
unpcklps
int3
inc
sbb
cwtl
sub
sub
sbb
sbb
leave
sbb
lock
jmp
jp
xchg
in
dec
cmc
mov
aad
daa
leave
inc
aaa
cmp
lods
mov
rcrb
scas
cmp
movsl
scas
xchg
cmp
fucom
jbe
xchg
inc
test
or
jno
or
xchg
dec
iret
iret
ljmp
sub
enterw
xchg
adc
iret
jge
cwtl
adc
sub
adc
loope
and
test
shlb
loope
orl
pop
fimuls
gs
dec
rcrb
ret
xlat
leave
mov
sahf
or
jecxz
imul
cmp
into
dec
push
sbb
out
pop
mov
cmp
divb
es
cs
mov
xlat
xchg
cmp
inc
icebp
fldt
mov
jns
pop
xchg
div
and
lret
and
pop
mov
jecxz
push
imul
fwait
in
add
lods
fst
inc
mov
sahf
adc
xchg
ja
add
jle
dec
dec
outsl
lret
leave
sub
or
aaa
sub
cli
adc
push
popf
stos
fwait
push
fwait
or
dec
lea
lret
push
imul
neg
xchg
shrl
sbb
jle
pop
mov
sbb
je
ficomps
jo
mov
enter
sub
mov
sahf
cmp
int
aaa
loope
daa
aad
push
adc
call
or
mov
lret
js
fwait
daa
inc
dec
mov
jo
pop
and
push
sub
sub
pushf
mov
movsl
mov
push
call
out
aam
out
and
dec
andb
ficomps
xor
lahf
inc
nopl
jb
stos
inc
xchg
xor
push
es
outsb
adc
sbb
repnz
lret
cs
gs
ficoml
sub
leave
ret
mov
or
cld
repz
mov
aas
int3
push
xchg
xor
scas
mov
pop
fisttpl
xor
nop
roll
cmp
lahf
and
cmp
shl
fdivrl
adc
lods
or
mov
push
fcompl
mov
xor
mov
es
es
sbb
mov
shlb
in
mov
xchg
out
ja
icebp
sub
aad
push
and
les
repz
inc
push
sbb
mov
scas
dec
mov
scas
sahf
and
dec
push
imul
rcrb
icebp
iret
call
jle
push
push
cmp
mov
sub
cmpsb
xchg
inc
enter
dec
out
or
mov
dec
push
pushf
repz
xor
stos
adc
mov
mulps
cmp
xchg
aas
das
jp
jecxz
icebp
push
gs
jne
xor
push
mov
in
xchg
filds
and
stos
cs
mov
mov
dec
andb
aaa
xlat
mov
mov
inc
xlat
and
je
cs
add
xor
push
mov
test
in
and
xor
or
and
add
lods
inc
ss
aam
lahf
jne
mov
adc
daa
mov
loop
or
decl
sbb
shlb
test
xchg
fidivrl
add
cmpxchg
xor
xlat
outsl
jg
repz
pop
pop
lock
outsb
imul
loop
pop
roll
sbb
int
or
xchg
mov
mov
xchg
inc
imul
jg
mov
rorb
clc
cli
lods
fists
lcall
mov
jae
mov
cs
jle
push
das
movsl
mov
cltd
pushf
stos
push
clc
add
cli
or
jno
lret
xchg
mov
fs
add
pop
inc
fwait
adc
push
aas
gs
xor
dec
repnz
adc
sbb
icebp
je
out
js
mov
sbb
and
mov
daa
pop
repz
xor
cmpsb
cmp
clc
inc
or
std
inc
mov
mulb
test
popf
stos
push
inc
pop
ss
ret
pop
pop
sbb
pop
mov
mov
jb
jae
xchg
fs
and
fbstp
mov
and
add
mov
inc
pop
jno
out
jbe
sbb
nop
sahf
inc
test
push
pop
push
outsl
ss
leave
std
mov
push
cmp
sti
scas
into
sti
adc
ja
or
pop
and
cmpsb
push
mov
xor
fdivl
dec
sub
in
stos
or
xlat
mov
sti
push
ret
mov
cmpsb
push
dec
pop
sub
das
inc
inc
lahf
mov
pop
lea
or
adc
or
mov
call
jmp
jne
test
cs
mov
outsl
add
cmpl
adc
jle
or
jge
xlat
fcoml
dec
xor
adc
xor
jae
pop
mov
es
cmp
movsb
enter
inc
repz
adc
in
mov
fwait
mov
jno
sbb
add
jg
adc
xchg
cs
cmp
movsb
ja
cmc
out
fistl
cs
lahf
mov
pop
insb
adc
sub
cmp
je
mov
and
sub
int3
dec
push
shl
mov
xorl
inc
push
in
lods
incb
push
sti
jae
push
xchg
mov
jl
xor
pop
inc
mov
scas
sub
int3
std
sbb
call
int3
out
hlt
loopne
into
or
hlt
adc
mov
mov
sbb
out
xchg
je
cltd
loopne
and
jecxz
xor
repnz
push
lds
and
mov
iret
xor
sub
ss
mov
into
xchg
and
push
dec
mov
ror
lret
jnp
inc
sub
popl
mov
pop
lods
cwtl
cltd
mov
and
gs
jo
and
stos
adc
lea
loope
cld
shll
jbe
fwait
lahf
push
insl
into
mov
popl
mov
dec
jnp
bound
sahf
lret
sti
ret
jecxz
sub
scas
xor
icebp
pop
push
stc
mov
or
add
mov
in
and
imul
cld
mov
mov
je
loopne
cmc
fnstsw
push
ss
inc
in
lret
cmp
mov
scas
mov
xor
das
test
loop
sub
adc
mov
jbe
inc
les
mov
push
rclb
ret
cmpsl
sbb
popa
mov
pop
mov
pop
sbb
mov
sbb
xor
mov
xor
js
add
push
dec
pusha
fstl
into
shll
jmp
pusha
sbb
mov
outsb
iret
outsl
lcall
ss
add
xchg
shlb
or
sub
mov
and
mov
and
mov
cmp
lods
in
xor
dec
push
push
cli
pushf
add
pop
imul
cmp
pop
stos
cmpsb
xchg
int
mov
and
jo
push
xchg
or
xor
xlat
fcom
aam
into
push
lea
adc
sub
inc
decl
ljmp
pop
imul
aas
fsubs
push
xchg
pop
popf
and
mov
sbb
loopne
sbb
or
fidivrs
jmp
clc
push
and
out
inc
fadd
jg
mov
and
pop
xor
in
insl
push
mov
and
loopne
cld
cld
mov
aam
int
loop
cmp
ljmp
pop
xchg
sub
nop
pop
pop
pop
call
pop
sbb
mov
dec
ret
cmp
xchg
jnp
insl
fstp
mov
inc
scas
in
rorb
mov
inc
add
lea
shlb
in
sub
cltd
cmpsb
movsb
fdivl
scas
fnstcw
pop
je
inc
jge
jns
pop
mov
inc
cltd
jecxz
jo
imul
sub
sti
jmp
push
roll
mov
outsb
mov
clc
cs
sub
sub
inc
mov
das
aam
xor
cld
icebp
jl
scas
inc
cmp
insb
or
dec
cli
jo
jno
inc
mov
mov
jb
orb
into
loope
pop
cmp
fwait
aaa
push
int3
mov
mov
test
enter
mov
gs
pusha
in
lds
js
lods
mov
xor
fmulp
xchg
push
mov
inc
xor
mov
jae
mov
into
pop
les
repz
fwait
inc
add
fistl
mov
test
push
cmp
dec
aaa
enter
sbb
les
jo
jp
cmc
imul
cltd
adc
jbe
fs
dec
pop
sti
clc
pop
xchg
shlb
hlt
out
push
repz
or
stos
inc
test
sti
xor
jno
mov
dec
jb
adc
xchg
xor
add
mov
popf
mov
sbb
inc
ffree
push
inc
imul
lods
fs
jo
mov
test
imul
stc
cltd
adc
lea
push
lahf
add
adc
push
jp
xor
and
jo
rolb
adc
mov
pop
and
mov
push
dec
sub
adc
sarl
divb
pop
sbb
insl
mov
bound
outsb
sbb
mov
jae
cli
insl
mull
cmp
les
fdivs
adc
lods
shr
fsts
push
xchg
push
negl
fwait
shl
sbb
xchg
and
lret
sbb
adc
xchg
dec
xchg
ficomps
ja
mov
repz
ljmp
push
test
repnz
sub
and
cmp
sbb
mov
pop
mov
mov
cmp
xchg
add
sbb
inc
mov
cmp
jo
lods
jb
in
fucomi
in
js
pop
sbb
fcmovb
cmp
or
clc
mov
or
push
in
orl
mov
enter
jle
jns
cmpsl
or
jmp
sbb
mov
loop
xchg
jbe
popf
jno
dec
sbb
mov
cwtl
push
bound
fwait
lock
pop
insb
cmp
mov
lret
jae
jmp
lods
fldt
lret
add
inc
gs
fiadds
jmp
out
sbb
cmp
xor
jecxz
out
xchg
jge
jo
shl
cmp
ret
nop
test
adc
ljmp
mov
leave
loop
test
bound
mov
negb
mov
adc
sbb
add
xchg
xor
lret
test
push
cld
adc
sub
loopne
es
mov
mov
loopne
pop
enter
xchg
shl
pusha
test
stos
fsubs
xor
mov
mov
xchg
sarb
ret
aaa
sbb
cmp
adc
pop
mov
mov
mov
dec
jecxz
mov
test
mov
fwait
sub
dec
sahf
push
icebp
cli
mov
idivl
xchg
mov
push
rorb
sub
push
loopne
push
ljmp
mov
add
pop
gs
fistps
push
loope
sbb
mov
jge
mov
std
sbb
scas
push
jbe
xchg
hlt
insb
fnstcw
fwait
std
fisttps
adc
aaa
scas
pushf
fdivl
jno
fnstenv
fcoml
or
xlat
out
jp
mov
mulb
insb
fmull
mov
xor
push
clc
lahf
scas
aad
xchg
cmc
push
pop
fists
call
mov
pop
cmc
add
out
arpl
lret
mov
xchg
data16
xchg
push
cmc
lds
xchg
test
imulb
fisttpll
push
daa
insl
push
cmp
fstpl
scas
or
inc
bound
jecxz
out
xor
lcall
ljmp
and
in
jb
pop
mov
push
mov
adc
cmpsb
xchg
dec
add
push
dec
les
mov
inc
dec
dec
daa
out
cmp
adc
jno
adc
dec
sbb
pop
push
popa
in
cmp
jb
repz
push
xor
addr16
push
cmp
dec
xchg
add
dec
mov
inc
enter
dec
and
cmp
ja
hlt
ljmp
inc
lods
ret
jl
xchg
shll
cld
insb
mov
dec
leave
dec
jae
inc
mov
adc
in
and
sti
cmpsb
pop
sub
push
jbe
mov
adc
shll
xor
sbb
and
or
or
or
test
nop
mov
cs
cmp
push
dec
pop
adc
jbe
jns
adc
ss
push
cmpsl
xor
dec
bound
or
push
idivl
cmpsb
cmpsl
cmpsl
dec
rclb
and
mov
xlat
daa
push
insl
sub
mov
shl
sub
hlt
mov
in
insb
outsb
pop
movsl
gs
xor
adc
outsb
sbb
push
ds
setl
in
xchg
push
inc
call
jmp
daa
xor
js
jo
xor
jns
mov
out
test
scas
ljmp
push
imul
cltd
nop
addl
mov
xchg
outsl
jl
sti
ljmp
mov
mov
mov
pop
xchg
call
push
xor
cmp
add
jbe
mov
cmp
test
pop
divb
hlt
xchg
mov
lea
inc
sbb
or
sub
inc
jecxz
lcall
aas
and
sbb
aad
rol
rclb
mov
imul
icebp
push
pop
shlb
xchg
rcl
stos
mov
inc
pop
mov
cmpsb
lock
shl
jp
mov
fmull
adc
jbe
mov
cmp
addr16
mov
daa
out
hlt
push
enter
leave
das
lea
xchg
lret
insb
xchg
adc
adc
icebp
mov
gs
xchg
cmp
xor
fmuls
dec
aad
fistpll
push
mov
lcall
mov
pop
lret
xchg
repnz
popa
xor
popf
jb
lahf
popa
xlat
divb
cmp
lcall
push
inc
pop
pop
mov
in
mov
je
imul
sbb
xlat
lahf
inc
lahf
aad
out
or
cmp
push
xor
cmp
pop
insb
fists
lods
cmpsl
int
aad
pop
iret
stc
pop
cmc
cmp
adc
scas
xchg
int3
jno
insl
icebp
les
mov
add
leave
mov
xor
jp
sub
push
pop
sbb
in
fidivrl
invd
arpl
aaa
out
sub
xor
test
push
mov
pop
mov
pop
aaa
xchg
sbb
push
add
mov
ffreep
mov
and
mov
jns
cmp
mov
or
mov
divl
cmp
lock
push
or
outsb
cltd
test
imul
and
insb
rolb
sbb
push
iret
ja
jle
fmuls
xchg
dec
and
push
shll
das
cmp
or
cmpsl
out
hlt
cltd
mov
xor
in
add
mov
mov
out
dec
mov
aaa
in
movsb
or
push
xor
movsb
pushf
fcomip
cmp
inc
or
fadd
fldenv
ret
inc
jle
popf
sub
loope
push
stc
inc
mov
out
and
pop
xor
inc
dec
mov
rclb
test
sbb
xlat
sbb
mov
repnz
pop
ficoms
add
jle
push
shl
in
aas
jbe
add
mov
sbb
sbb
sbb
sbb
inc
mov
add
fsts
mov
std
xor
sub
sarl
clc
shr
jle
fidivrs
stos
sbb
xchg
push
loope
add
or
nop
int
incl
mov
mov
cmp
mov
xor
rcrb
inc
in
mov
jae
fcom
push
push
jg
mov
imul
dec
cmp
mov
fimull
imul
xchg
jmp
test
xchg
roll
fistpll
cltd
lods
imul
jp
stc
js
sbb
cs
mov
and
mov
xchg
jmp
cmp
cmp
xor
xchg
pop
int
loopne
dec
test
fmuls
add
sbb
mov
imul
jp
add
xchg
scas
sbb
rorl
sub
jb
jo
or
jle
ds
ss
pushf
aas
sbb
pop
push
xor
cmp
dec
jae
js
jae
imul
and
imul
push
jg
mov
repnz
arpl
ljmp
lds
test
in
out
aam
pop
xchg
addl
adcl
sbb
pop
push
and
das
movsl
and
jge
and
insl
pop
ja
ret
pop
pop
in
repnz
lcall
je
ss
sbb
enter
mov
pushf
dec
and
push
gs
sbb
sbb
pop
xchg
dec
imul
test
pop
les
pop
repz
lcall
mov
in
xor
inc
loope
add
adc
xlat
je
insb
pop
push
mov
push
int
jmp
jnp
add
aas
call
das
adc
int3
mov
rorb
xchg
jecxz
xor
lods
sti
shrl
shlb
sub
pushf
mov
loopne
adc
loope
in
data16
xchg
lahf
flds
dec
push
jo
loop
inc
loope
lahf
sbb
gs
fcmove
xor
or
add
inc
adc
pop
lea
movsb
icebp
push
jg
ret
xchg
call
test
or
mov
das
es
inc
out
inc
test
popf
movsl
jl
or
insl
lea
dec
repz
enter
dec
scas
icebp
fsubl
lea
or
mov
lods
dec
arpl
popf
shrb
pop
ret
xchg
scas
push
lea
push
repnz
fwait
icebp
dec
xor
stc
rclb
jl
cli
mov
cltd
sub
subb
xchg
and
cmp
inc
mov
push
fdivl
fidivs
in
pop
mov
subb
pop
subl
push
push
iret
push
dec
push
mov
repz
adc
scas
js
pop
cmp
testl
ja
ds
mov
push
loope
pop
jnp
xchg
xor
adc
es
dec
loop
sbb
insl
pusha
sub
adc
pop
ret
fcom
mov
stos
rcrb
out
push
ljmp
mov
jns
pop
nop
or
and
xchg
lds
stos
jmp
in
imul
outsl
pop
orl
pop
incl
call
andb
mov
mov
bound
out
mov
scas
sub
loope
cmc
mov
add
mov
pop
mov
xor
cmp
push
mov
mov
mov
loopne
pusha
out
mov
push
lods
mov
inc
sbb
ljmp
outsb
mov
or
dec
stos
xchg
test
mov
jle
push
fwait
jmp
andb
fcmovnu
stc
xchg
fstpt
cmpsl
xchg
dec
mov
xor
pop
rcl
lahf
lds
jnp
jae
jp
mov
js
mov
mov
xchg
in
std
aam
sub
jecxz
lock
aas
adc
imul
sub
adc
lahf
stos
das
pmaxsw
jmp
std
sti
icebp
inc
dec
adc
sub
jge
andl
add
nop
or
xchg
inc
xor
jp
mov
gs
add
or
icebp
sub
movb
jo
push
mulb
cli
call
mov
les
sbb
imul
pushf
mov
ret
cld
movsl
add
push
mov
dec
mov
cmp
adc
xor
scas
std
mov
out
xor
xchg
add
fstps
add
repz
lea
push
mov
and
xchg
es
test
or
data16
mov
jmp
lret
mov
jg
fcmovnb
in
inc
mov
push
enter
sbb
sub
mov
dec
push
in
or
push
adc
xchg
insb
ds
mov
push
decl
out
mov
arpl
push
inc
add
data16
out
test
js
sti
inc
mov
push
int
sbb
into
mov
adc
std
push
pop
sbb
add
pop
adc
xchg
xlat
shlb
outsl
loop
ss
fsubp
fs
hlt
mov
les
out
mov
icebp
mov
loopne
xor
jae
jb
cmc
fndisi(8087
cld
push
fucom
cmp
or
dec
movsl
dec
out
ljmp
out
fldl
fidivrl
jae
adc
aas
icebp
mull
in
fdiv
outsl
stos
aaa
inc
fsubs
insl
mov
inc
loope
aad
xchg
xor
dec
je
lahf
lds
mov
and
call
xchg
scas
cmp
scas
ds
push
inc
push
jbe
xchg
push
dec
gs
dec
add
push
lock
add
jb
dec
mov
push
aas
jne
mov
pusha
xchg
in
inc
adc
pop
jae
push
mov
sub
adc
nop
push
add
push
add
or
lcall
js
cmp
xchg
fs
ret
xor
add
arpl
ja
call
jns
call
sahf
pop
jbe
push
push
lcall
mov
sub
jg
mov
lret
ljmp
jmp
pop
ficomps
test
adc
cmp
or
aas
sbb
test
adc
insl
inc
scas
add
sar
inc
mov
mov
mov
sub
cli
dec
sub
dec
es
cmpsb
incb
or
xor
add
dec
cmp
push
cmp
rcrl
fnstenv
iret
fsts
jnp
adc
gs
or
dec
sti
stos
cs
data16
shrl
lret
jne
xor
cld
push
mov
and
negl
mov
cmpsl
call
imul
push
inc
sti
mov
ljmp
and
daa
and
and
sbb
jbe
shll
popa
shll
push
idiv
pop
adc
add
mov
lret
xor
shlb
jmp
in
jmp
into
mov
xchg
inc
pop
xchg
fs
insl
pop
movsb
xchg
fcoms
or
sub
sbb
jb
jnp
add
push
mov
adc
cwtl
sub
and
mov
jle
sarl
insb
je
inc
mov
adc
xor
cmc
sarb
and
int3
push
bound
lahf
iret
push
xchg
cwtl
ficomps
pop
cmc
in
inc
adc
popa
sahf
pop
inc
sub
jno
inc
aaa
ds
stos
lret
aam
ret
dec
shlb
xor
mov
daa
pop
test
lret
push
ds
jbe
dec
push
inc
aam
bound
out
xchg
mov
outsl
stc
stos
jecxz
and
push
mov
xor
inc
sbb
call
popa
inc
sbb
loope
mov
fdivs
mov
sbb
mov
push
fwait
jo
out
out
lret
or
lcall
or
mov
mov
addr16
sub
cmc
sub
ljmp
in
nop
mov
mov
fs
loope
loopne
cli
sub
sbb
fsubrp
test
std
adc
jg
sbb
mov
in
bound
xchg
mov
and
repz
in
pop
push
sbbb
adc
cld
mov
aas
xchg
fs
idivl
or
pop
es
cmpsb
cmp
pusha
aad
cmp
sub
ljmp
mov
push
stc
out
in
cwtl
and
mov
mov
icebp
dec
adc
and
test
xor
andb
cs
xchg
enter
jne
cmp
pusha
ja
insl
mov
push
push
mov
pop
mov
jp
ret
pushf
fisttpll
popa
insb
aad
sub
test
mov
fdivl
adc
dec
and
int3
imul
jp
pop
mov
orl
sbb
call
insl
cmp
test
add
cmp
push
cmpsb
andl
imul
xchg
cmp
and
lods
lods
stos
lds
adc
cltd
sbb
mov
cmp
cmp
mov
out
cli
sbb
call
dec
mov
fisubrs
pop
dec
sbb
add
cli
jo
popf
popf
jmp
lahf
femms
imul
bnd
mov
in
int3
mov
xorb
ss
fld
jb
cmp
add
mov
call
fisubrl
pop
pop
fimuls
xchg
adc
sub
out
leave
push
mov
mov
std
fbld
cmpsl
cli
int
and
outsl
dec
adc
cld
inc
adc
add
pop
pop
sahf
xor
sub
scas
push
je
xchg
adc
adc
and
aam
xchg
sub
lret
sbbb
push
or
gs
jb
fcmovu
repnz
repz
dec
dec
jecxz
xchg
lods
add
mov
aam
inc
mov
jne
push
mov
loope
out
cmp
jmp
xor
fs
stos
popf
repz
inc
or
icebp
nop
cmc
add
divb
jne
les
jnp
push
push
clc
repnz
xchg
sub
out
fistl
pop
jg
in
push
add
xlat
int
test
sbb
cwtl
xor
dec
movsb
cmp
sub
fs
int3
sbb
xchg
loopne
mov
mov
nop
jnp
inc
ret
pop
and
dec
fisttps
arpl
leave
mov
dec
push
test
es
cmp
xor
fmull
shlb
push
jmp
out
or
cmp
xchg
call
in
daa
loop
pop
inc
imul
and
fisttpl
push
addr16
clc
cmp
sarl
jl
dec
int3
xor
rol
xor
fidivrs
jbe
push
and
jb
dec
cmp
add
xor
bound
fmuls
mov
repnz
jge
out
loopne
rcrl
lods
roll
clc
jne
les
adc
adc
xor
adc
pop
popa
cmp
and
sbb
push
cld
mov
fnsave
cmc
arpl
push
mov
out
pusha
push
pop
ret
rolb
and
dec
mov
cmp
inc
mov
repnz
mov
aas
push
inc
pushf
mov
push
or
dec
lret
aad
fstp
push
pop
andl
fs
pop
cli
rorl
lds
cmc
xor
imul
mov
sub
aas
mov
pushf
inc
aaa
pop
sbb
mov
and
inc
sti
add
xcrypt-cbc
cmpsl
push
or
ss
push
push
fcoms
jae
mov
cltd
push
test
mov
jmp
mov
fwait
stos
fwait
sub
daa
inc
inc
xor
or
stos
daa
sbb
sbb
out
ret
add
dec
xchg
mov
pop
push
aas
setl
aam
subl
lds
js
xchg
imul
xchg
out
cmp
add
fadd
sti
inc
imul
push
adc
popf
lret
stos
jns
add
inc
fwait
fwait
sub
daa
shlb
dec
into
std
inc
bound
pop
pop
dec
ja
add
pusha
bound
pop
xchg
out
popa
gs
push
fsubl
bound
mov
and
in
mov
movsb
fcomi
or
push
leave
push
outsl
shll
out
lahf
xchg
sub
cmp
add
sub
jne
dec
daa
push
into
daa
sub
fcmovnbe
loop
xchg
mov
inc
shlb
fwait
je
dec
cmpsb
mov
je
inc
or
popf
es
inc
loopne
call
outsl
xor
pop
dec
mov
push
mov
aas
sbb
push
pop
sbb
jnp
pop
outsb
jnp
push
rcrl
sbb
dec
dec
xorb
test
sub
adc
dec
jae
in
mov
xchg
or
iret
out
mov
in
xor
out
in
cld
test
mov
push
imul
sub
sbb
loope
mov
sub
add
outsl
and
out
cmpl
mov
hlt
fs
push
int
inc
and
dec
jmp
and
ret
lea
stc
mov
pusha
dec
fcoml
sbb
and
jl
cs
test
test
inc
rcr
lock
test
ret
xchg
fwait
adc
lods
mov
or
push
xchg
add
popf
push
pop
sbb
push
mov
xchg
xchg
clc
or
orb
jbe
mov
scas
dec
add
cs
mov
lret
pop
sub
aad
idivl
and
subb
lret
sbb
lods
dec
out
fnstcw
pushf
sbb
sbb
aaa
dec
inc
aad
mov
inc
lahf
fcomp
adc
sbb
mov
cmp
xor
test
pop
cmp
fcompl
fwait
inc
jae
hlt
push
bound
in
clc
inc
inc
mov
fildll
sbb
mov
in
loopne
pusha
in
into
pop
pusha
sti
gs
ss
stc
in
imul
cmp
jp
sbb
jp
dec
ret
dec
xor
jmp
pop
inc
out
mov
jne
and
fnstcw
xchg
push
test
push
pop
insl
jbe
mov
leave
sub
fwait
sub
insb
jo
xchg
xor
push
rcrb
aaa
pop
sbb
pminsw
mov
add
popf
mov
jnp
and
les
and
inc
stos
pop
addr16
xchg
lock
jmp
aad
decl
sarl
sub
sub
inc
or
pop
cmp
clc
push
mov
push
mov
add
addb
xchg
sbb
xchg
inc
mov
leave
sbb
dec
scas
sbb
push
jo
into
mov
jl
repnz
sub
dec
addl
dec
jb
cmc
dec
lock
mov
out
fcomp
cmp
mov
sbb
mov
xor
pop
add
jle
arpl
lret
and
dec
fcomps
mov
push
cmpb
adc
aaa
pop
and
movsb
pushf
pop
arpl
outsb
push
sahf
enter
xor
mov
dec
pop
pop
stos
mov
gs
scas
push
mov
mov
enter
jg
sub
in
mov
dec
fidivl
hlt
and
inc
xorl
push
bound
iret
fidivl
sahf
fsubs
dec
out
fcmovnb
inc
add
ds
xchg
and
dec
loop
mov
pop
sub
and
insb
pop
ret
leave
mov
cmc
int
dec
std
cs
push
and
pop
adc
sub
int3
ljmp
xlat
jg
int
or
and
dec
mov
push
mov
adc
adc
jle
cwtl
cmpsb
out
mov
leave
and
clc
popf
data16
lods
jne
repnz
orb
sub
lea
out
aad
and
test
sarl
push
sub
gs
fdiv
add
push
jp
inc
add
arpl
js
sbb
cmp
int
js
mov
pop
adc
mov
in
sbb
movsb
add
and
mov
inc
das
jo
inc
xor
cmp
add
mov
loop
mov
fidivl
stc
mov
test
lret
and
xor
inc
inc
out
sbb
test
data16
int
sub
cmpsb
xor
jmp
jo
xchg
stos
pop
lret
add
test
cmp
dec
sbb
dec
mov
mov
popa
push
adc
cli
xor
dec
dec
ret
adc
inc
xor
lahf
lahf
cmpsb
aaa
fs
xchg
jl
and
jp
call
imul
clc
repz
pop
or
scas
into
hlt
notl
pop
jno
fisubrl
jp
push
fdivrs
cmc
xchg
mov
nopl
adc
push
mov
add
rcl
stos
xor
icebp
cs
rcll
mov
sarl
and
cmpsb
lds
and
sbb
and
cs
lods
and
fmuls
pop
xlat
mov
jp
sub
fst
jno
xor
movb
pop
daa
test
add
mov
loope
add
ljmp
popf
mov
and
fdivl
push
cmp
cld
adc
sbb
cmp
loop
jae
outsl
int
mov
mov
mov
xchg
nop
repnz
mov
call
pop
repnz
mov
mov
xchg
aad
mov
mov
das
ret
adc
std
sbb
adc
loop
jge
and
mov
js
sub
cltd
loop
in
push
mov
movsl
mov
aam
pop
repnz
jo
decb
push
jl
in
in
loopne
mov
ljmp
lods
xor
dec
sti
pop
adc
notb
or
dec
jno
xor
incb
push
adc
pop
out
fistpll
sbb
mov
inc
in
imul
and
mov
pop
mov
movsl
movsl
and
dec
push
mov
ds
mov
xchg
and
jl
mov
jnp
and
test
mov
adc
push
mov
inc
in
xchg
dec
rorb
ret
xchg
cs
jns
cmc
adc
jnp
arpl
cli
jmp
sub
dec
mov
inc
mov
mov
scas
into
pcmpeqb
dec
mov
shrl
bound
cmp
sar
xor
fs
mov
sti
std
dec
lret
fsubp
sub
outsb
xor
les
push
pop
or
mov
aas
mov
lret
dec
mov
jnp
cltd
jecxz
sub
dec
sbb
icebp
mov
mov
xor
cs
pop
mov
pusha
mov
mov
out
mov
test
xor
dec
sahf
jno
out
stc
test
cmc
fcomp
int3
inc
xor
test
arpl
filds
push
aaa
xchg
addr16
lds
sub
rcll
lock
iret
jg
jg
push
jae
cmp
sub
cmpsb
pop
jmp
cs
add
clc
neg
mov
ja
and
jnp
in
cli
xlat
mov
pop
pop
cmp
fsubrp
out
aas
in
sbb
push
fsubrl
xor
jne
jo
out
mov
or
dec
jmp
cwtl
dec
sbb
in
and
and
sub
fs
sub
mov
aaa
popa
pop
imul
push
pushf
jmp
repz
push
add
push
and
pop
mov
lods
pusha
rclb
cmp
jg
cwtl
rcrl
cwtl
mull
and
push
rolb
mov
or
jb
into
movsl
push
jno
insl
inc
mov
sbb
mov
in
or
or
pop
jmp
test
and
jmp
or
mov
mov
mov
inc
iret
mov
test
inc
pop
lahf
xor
pop
stc
fwait
push
scas
into
pop
js
pushf
xor
inc
iret
inc
es
sbb
dec
loopne
test
cli
fildll
and
xor
and
je,pn
out
push
dec
rcll
sbb
test
fidivl
scas
cwtl
and
cwtl
and
aas
punpcklbw
cmp
mov
pop
lods
cmpsb
outsl
stc
push
mov
in
jns
in
cmpsb
ficoml
and
imul
pusha
sarl
mov
mov
inc
ja
repz
stc
imul
push
sbb
xor
dec
scas
mov
test
shr
add
xchg
mov
clc
mov
insb
adc
add
call
push
test
filds
mov
xor
es
mov
push
mov
pop
ljmp
mov
dec
pop
push
dec
mov
syscall
and
notl
xor
inc
jne
sub
pop
int
inc
xor
fmuls
mov
aad
ds
out
shll
jns
pop
mov
dec
movsb
xchg
add
sbb
xor
aaa
xchg
cmc
out
jl
es
mov
iret
ljmp
fdivrl
mov
es
sti
mov
into
xchg
push
push
adc
xchg
adc
data16
js
pop
jne
mov
inc
movsb
mov
int3
loopne
jo
inc
imul
pop
imul
mov
push
push
xor
or
mul
sbb
aas
js
mov
and
sub
dec
int
push
cltd
and
inc
cmc
mov
push
das
loope
leave
mov
out
xchg
es
mov
lcall
jp
jns
dec
dec
fs
push
test
clc
pop
cmp
fdivr
xchg
lret
outsl
in
rcrb
mov
cmp
dec
sub
sbb
movsb
test
mov
icebp
inc
fwait
and
inc
dec
pop
fisttpl
std
sti
int3
xchg
push
sbb
call
jle
xor
push
test
iret
call
xchg
ja
fnsave
jge
loopne
aam
mov
cltd
es
or
in
mov
cmp
out
pop
pushf
inc
xor
jae
dec
jne
xchg
adc
scas
loop
lahf
shlb
xchg
inc
fstpl
stc
cmp
ljmp
mov
jl
test
ljmp
sti
xchg
push
push
imul
cmp
cli
movsb
or
lock
movsl
pop
dec
int
sbb
insl
and
jmp
jg
add
mov
ds
pop
mov
divb
push
jae
xor
aaa
mov
pop
sbb
pop
notb
xor
pusha
loopne
call
pushf
cltd
jecxz
repnz
mov
jmp
lret
lock
ljmp
mov
in
mov
imul
jmp
add
push
test
lock
push
dec
or
mov
pop
dec
ds
int3
cmpsb
lds
push
or
testb
add
jno
clc
pop
or
shlb
pop
xor
lret
mov
loop
add
mov
add
jl
movsb
lret
mov
sarb
imul
dec
outsb
out
mov
in
cmp
pusha
and
nop
pop
int
mov
mov
adc
sub
jge
xchg
addps
shrb
frstor
adc
cli
sbb
jmp
xor
pop
push
cmp
xchg
jp
mov
fwait
jle
mov
mov
pop
pop
sbb
dec
sbb
xchg
cmp
insl
fbstp
movsl
dec
or
mov
jo
and
sub
push
pusha
stos
push
das
xchg
push
movsl
mov
add
fists
push
cmp
jo
and
fwait
push
mov
dec
popf
xchg
aad
adc
jns
popa
mov
add
jo
pop
movsb
mov
lods
add
nopl
test
test
xchg
xor
cli
pop
aaa
std
stc
sahf
rorl
jp
mov
outsl
fmuls
icebp
repz
daa
cwtl
sahf
gs
out
js
cld
repnz
or
push
adc
lcall
ja
aam
cmp
pop
jmp
test
repnz
xor
xor
ret
jp
rcl
cmpsl
ja
sbb
push
fisttpll
xorb
sbb
jbe
cld
imul
and
lock
inc
sub
idiv
mov
xchg
ror
dec
mov
xchg
sub
and
mov
repnz
fimuls
call
and
fs
mov
sbb
test
cld
inc
clc
pop
mov
jp
xchg
add
lods
faddl
inc
pop
stos
mov
jecxz
mov
movsb
stc
stos
cld
pop
jmp
push
aam
popf
add
sub
mov
stc
inc
sub
ds
sbb
sub
stos
xchg
jg
adc
vmaxps
xor
std
and
jne
xor
mov
sbb
jmp
sbb
scas
lods
ljmp
inc
ret
xchg
ljmp
push
mov
out
mov
mov
insb
insb
push
shlb
stc
fisubrs
cli
lods
mov
and
xchg
dec
int
push
lods
fdivs
push
xor
lds
fisubrl
push
inc
movsb
adc
mov
dec
out
pop
notl
and
adcl
mov
es
stc
push
imul
xchg
pop
push
mov
sbb
out
cs
mov
jne
fimuls
je
fwait
idivb
jge
scas
jl
xor
imul
je
mov
addl
jmp
aas
lret
test
rcl
ja
sbb
mov
xorl
inc
xchg
sub
mov
sti
and
cmp
test
aad
fbstp
daa
outsb
or
fs
mov
lds
inc
enter
cmp
imul
pop
daa
fbld
rol
xor
rolb
in
je
cmc
jno
in
mov
popl
jo
mov
sub
daa
adc
mov
bound
dec
adc
mov
adc
add
sahf
pop
push
mov
ds
mov
ror
clc
outsb
mov
filds
inc
mov
inc
jl
push
cmp
int3
xchg
sbb
es
push
stos
mov
stc
loop
mov
mov
cwtl
or
or
mov
clc
frstor
xor
int3
aad
mov
jge
adc
faddl
sub
shrb
sub
ja
sub
jnp
push
push
in
dec
aad
mov
neg
addb
inc
jae
lret
xor
hlt
mov
out
out
inc
jmp
movsl
push
push
cltd
dec
jl
psubq
ljmp
arpl
lock
xor
int3
mov
pop
popa
xor
inc
popa
mov
into
stos
nop
and
cmpsb
jl
xchg
pop
rorb
test
and
test
inc
fsubrl
test
fisttps
stos
inc
jle
pop
aam
push
push
and
dec
lods
dec
popf
mov
fcoml
push
mov
adc
pop
scas
inc
aam
lahf
mov
fsts
cli
pusha
fsts
inc
pusha
sbb
sub
pop
cmp
stc
fwait
ret
push
out
test
jo
dec
sbb
sahf
xchg
mov
sbb
cld
add
push
push
pop
push
out
clc
cmc
mov
add
add
and
inc
in
nop
jns
adc
jno
jb
mov
lock
pop
into
inc
fcmovb
push
cmc
mov
sub
sahf
sub
test
xor
cmp
push
add
or
sub
sub
xchg
popa
das
cwtl
or
sub
push
out
mov
movsl
cmp
sub
fsubr
sbb
aam
cli
sbbl
popa
cwtl
mov
ret
cmp
sub
loope
mov
es
xor
or
loopne
ret
inc
arpl
mov
or
stos
dec
stos
rolb
mov
push
jp
andb
mov
mov
or
dec
xchg
fnsave
cmc
rclb
into
pop
js
xchg
in
pop
lahf
mov
sbb
daa
lret
sbb
je
pop
dec
ficomps
inc
icebp
sbb
data16
xchg
int
inc
enter
adc
push
cmpsb
xchg
mov
mov
out
je
stos
push
addr16
push
inc
cld
xor
and
pop
adc
dec
push
cmpsl
leave
loopne
filds
push
into
loopne
fisttps
xchg
sbb
pop
lahf
call
and
subl
jl
add
sahf
test
cltd
mov
aas
xchg
addr16
test
xlat
mov
or
out
or
xor
sbb
mov
fcmovnb
fs
mov
movsl
adc
in
fs
add
lret
arpl
adc
movntq
dec
mov
xor
cmp
add
push
sub
xchg
lea
jns
scas
dec
jge
mov
aam
data16
dec
xor
push
dec
push
lea
push
mov
adcb
loop
mov
in
lods
mov
add
nop
adc
bound
xchg
stos
sub
inc
cmpsb
out
or
ret
jle
stos
or
ljmp
jg
stc
dec
dec
pop
stos
mov
rorl
das
or
dec
or
repnz
xor
jge
mov
inc
mov
push
setg
xchg
jge
lods
mov
xchg
stos
jno
xchg
test
and
ss
jecxz
and
dec
jns
icebp
scas
xchg
fdivrl
lock
addr16
fsubl
sub
mov
and
add
xor
push
cltd
inc
testl
jecxz
adc
add
or
es
adc
mov
adc
and
add
mov
cmp
vphsubdq
jnp
rcll
sti
and
negb
inc
lods
movsb
repnz
add
pop
out
psubq
ret
mov
mov
add
or
and
mov
or
adc
in
pop
sub
fmull
xchg
nop
cmpsl
fsub
je
shlb
sub
inc
imul
clc
mov
add
movsb
jns
test
lds
mov
xor
inc
push
lcall
popa
repnz
fcompl
and
leave
mov
mov
pop
mov
arpl
mov
lret
test
repz
sarl
push
loope
ja
data16
push
push
cmc
cmp
out
push
mov
mov
mov
jg
cmp
cmp
cmp
es
sbb
mov
ja
inc
lret
mov
adc
das
fistl
cltd
push
fdivp
xchg
in
cltd
push
andl
and
daa
mov
sub
dec
xchg
adc
or
jecxz
into
mov
jmp
fstpl
aad
xchg
push
adcb
mov
mov
xchg
cmc
sub
daa
pop
pop
cmp
loop
lcall
imul
lret
int
pop
adc
pop
inc
push
jp
jle
adc
add
and
addb
push
popa
ljmp
xchg
cs
inc
mov
add
aas
out
cmp
jg
pop
cmp
xchg
inc
xor
lret
rcr
xchg
cmp
or
jne
adc
cwtl
int
mov
into
inc
mov
jae
data16
sub
push
push
mov
lds
xchg
call
mov
add
imul
rcrl
sbbb
aaa
xchg
into
leave
add
mov
cwtl
nop
std
shrl
cld
mov
jg
push
pop
mov
adc
mov
imul
and
xor
out
roll
insb
dec
outsb
neg
pop
sbb
adc
fisubrs
pop
mov
mov
pop
inc
call
mov
fmulp
dec
xchg
aad
cmc
inc
stos
sbb
jge
mov
rcl
adc
data16
jp
add
in
xchg
es
icebp
mov
push
fiaddl
stc
fidivrs
out
pop
stc
push
outsb
insb
gs
loopne
fnstenv
add
hlt
dec
xchg
pusha
push
in
push
daa
stos
add
in
xor
mov
in
sub
xor
lods
jne
das
mov
pop
mov
shrb
pop
loop
jecxz
lea
jmp
out
jb
adc
cmp
lock
jmp
mov
lret
or
test
test
lahf
call
inc
sbb
in
mov
rcll
es
jo
lea
daa
mov
push
push
cmpl
dec
jl
cmpsl
sbb
roll
push
aam
sub
ljmp
fwait
add
je,pt
inc
xor
icebp
mov
test
cmpsb
ds
adc
add
adc
daa
pop
fdivrl
push
sbbb
aam
aaa
push
xchg
pusha
and
xchg
mov
add
jns
shrl
xor
jl
mov
outsl
movsb
jbe
lock
addl
div
enter
insl
xchg
mov
rorl
or
cmp
cmp
jo
add
push
mov
mov
add
cli
inc
std
aaa
sub
shlb
rcr
fildll
dec
pushf
and
lcall
fidivl
pop
cmp
bound
dec
fsubrl
fmul
jge
mov
cmpsl
push
aas
in
cmp
mov
sarb
adc
lods
dec
mov
arpl
fistpl
push
mov
or
cwtl
inc
jle
movsl
xor
es
push
add
mov
shll
sub
mov
jmp
insl
sti
icebp
jl
pop
mov
dec
aas
ret
mov
fs
fldl
pop
jp
sub
dec
dec
imul
fwait
imul
or
inc
jmp
repnz
pop
out
sub
int3
mov
adc
roll
rcr
aad
test
fidivrl
pop
adc
lds
pop
ficompl
or
cmpsl
push
mov
pop
fists
sti
loop
stos
aad
inc
test
pop
roll
mov
inc
fisubrs
imul
imul
dec
repnz
xor
rorb
sti
shlb
lods
shlb
mov
scas
sub
out
mov
jno
das
test
cmc
xchg
cld
lcall
cmp
std
adc
ret
fisubl
or
fisttps
imul
push
or
jo
cli
jmp
or
jmp
pop
dec
push
adc
loopne
mov
jns
nop
push
test
das
outsl
jge
sub
add
cmp
cltd
lret
out
or
mov
xchg
jle
xchg
sbb
cmp
add
jle
ret
and
ds
cmp
clc
clc
sarl
lret
cltd
xchg
add
movsb
addb
leave
fisttpl
movsbl
pop
rcll
std
jo
lods
mov
cmp
pop
mov
mov
sbb
mov
lea
mov
into
movsl
mov
mov
xor
push
mov
add
cmp
mov
jle
inc
mov
insb
push
inc
add
je
push
inc
ret
outsb
xor
add
add
shlb
daa
rcll
mov
xchg
push
iret
inc
adc
xchg
sub
jae
popf
mov
lcall
fwait
mov
pop
adc
leave
repz
add
push
bound
inc
jecxz
out
outsl
inc
insl
dec
fidivs
ret
pop
roll
adc
cmp
mov
push
scas
xchg
ds
mov
push
cmp
jae
and
cs
cmp
sub
std
ljmp
mov
sahf
xor
cs
or
cmp
mov
inc
push
pop
mov
pusha
out
inc
test
sub
adc
xor
push
mov
mov
imul
adc
sub
or
out
sbb
push
outsb
sub
cltd
call
aad
dec
mov
stos
add
mov
ret
xchg
dec
mov
cmc
jbe
add
repnz
sbb
mov
fidivrl
mov
mov
push
xor
call
std
mov
les
icebp
jge
or
cmpsb
xchg
inc
sbb
icebp
gs
mov
loope
das
sahf
popa
stos
add
movsl
pop
dec
out
mov
das
jmp
or
aam
mov
mov
mov
ret
inc
adc
rcrl
sbb
or
mov
or
jnp
or
xor
push
push
flds
mov
lock
dec
bound
xchg
les
fsubl
subb
or
push
bound
or
lds
push
in
cmp
in
push
cmp
in
pop
test
in
sbb
hlt
pop
mov
aam
pop
addr16
and
and
addb
pushf
lcall
lret
xor
sub
cltd
movsl
adc
movsl
cmpsb
or
xorl
call
int3
mov
xor
sub
dec
aaa
jge
ss
adc
pop
imul
push
jg
stc
cmpsl
or
lea
sub
push
pop
cmp
adcb
jmp
gs
data16
jns
mov
and
xor
dec
ror
xor
cmp
sbb
hlt
xchg
sub
pop
cs
in
or
iret
lods
ss
push
jle
das
jno,pn
inc
jae
jb
in
push
idivb
aad
dec
sbb
test
dec
xor
rcpps
lods
dec
mov
frstor
incb
in
sub
test
mov
sub
adc
push
dec
insb
filds
std
mov
mov
in
adc
test
dec
sahf
cmc
xchg
cmp
mov
sbbb
lret
sub
jp
pop
shlb
aam
pop
cmpsl
xor
pop
pop
mov
push
repnz
fcomp
das
bound
in
sub
inc
insb
inc
ror
sbb
fdivs
pop
loop
sarl
add
leave
add
loopne
mov
punpcklwd
xor
outsl
pop
pop
jnp
test
mov
ret
cmc
repnz
and
mov
test
fs
fstps
mov
mov
pop
push
in
mov
mov
lahf
mov
xor
repz
pop
out
pop
xor
push
cmpsb
mov
mov
test
and
fcmovne
xor
mov
mov
out
imul
pop
jmp
inc
cmc
das
popf
mov
mov
adc
pop
lods
dec
sub
repnz
jp
mov
or
adc
fcompl
insb
pop
adc
dec
and
cltd
xor
cmpsb
lret
pop
test
fisubl
movl
xchg
mov
and
jne
movsb
lods
test
mov
out
subl
adc
arpl
xchg
cs
jae
inc
mov
out
xor
cmp
mov
mov
call
mov
imul
inc
aad
inc
je
dec
vpperm
adc
inc
mov
shll
sbbb
fisubrl
lods
je,pn
dec
push
cli
or
adc
push
cmp
push
ficoms
das
sbb
and
fadds
add
and
cmpsl
mov
les
sbb
mov
and
add
orb
cmp
pushf
push
push
dec
cmp
xchg
cmp
sub
andl
jg
xor
popa
push
adc
jb
and
dec
aam
cld
or
mov
dec
jae
pop
jl
push
movsl
cmc
mov
push
out
or
mov
mov
in
mov
inc
pushf
push
cmp
std
xchg
cld
imul
bound
inc
xor
lods
repz
jecxz
outsl
movsl
sbb
fucomip
add
lods
or
imul
or
and
add
jmp
das
mov
insb
popa
jp
cmp
or
popa
sub
pop
cmp
xchg
fidivs
xchg
add
or
fcompl
movl
jnp
xchg
neg
and
mov
push
push
inc
mov
pop
xor
cwtl
dec
mov
dec
sbb
cmp
gs
in
push
mov
xor
into
icebp
and
imulb
jbe
xchg
je
pop
jg
pop
int
push
push
xchg
cmc
mov
and
jb
test
pop
les
and
aad
aad
mov
pop
adc
loope
dec
cmp
sub
aaa
fimull
iret
cmp
cmp
pop
mov
roll
cli
sti
mov
pusha
mov
js
pop
dec
jo
iret
sub
aad
pop
movsl
adc
fimull
cmpsb
int3
pop
inc
ret
sub
mov
sahf
or
addr16
repz
mov
stos
xor
mov
je
scas
jo
lea
jno
mov
cmpsl
outsl
fimuls
mov
movsb
jg
xchg
mov
dec
ds
or
popa
lret
mov
cmp
mov
lret
enter
popf
jno
xor
rorb
lds
dec
outsl
pop
je
mov
arpl
roll
jle
test
jmp
sub
les
dec
cs
cmp
sbb
and
loop
mov
imul
loope
mov
xchg
out
cmp
mov
add
xchg
rorb
lea
std
mov
cmpsl
push
aam
int
cmc
pop
out
mov
and
jle
sbb
jb
enter
dec
mov
ret
lds
out
call
xor
mov
add
into
fs
sub
loope
sbb
pop
shrb
mov
mov
ss
mov
or
call
adc
mov
xchg
or
inc
pop
ret
inc
ret
mov
outsb
pop
cmp
enter
test
sti
mov
push
loop
xchg
ds
negl
pop
push
sbb
mov
cmp
xor
int3
jle
arpl
rolb
add
adc
fnsave
mov
xlat
mov
fldl
pushf
sub
popa
pushf
xor
mov
mov
cmp
add
ret
fisttps
sub
ret
inc
pop
xchg
aad
in
push
js
fstpl
push
cli
sub
sbb
or
lret
daa
pop
jne
es
xor
pop
setne
pop
pop
aam
ljmp
dec
scas
shl
push
sub
aaa
and
cmpsl
arpl
mov
adc
mov
mov
cmc
sahf
dec
hlt
dec
in
movsb
imul
out
dec
jl
bound
add
and
xorl
pusha
mov
mov
rolb
add
dec
aaa
pop
in
mov
pop
out
std
push
rorl
aaa
sub
lea
mov
sub
and
push
mov
fs
cmp
mov
dec
cmp
aaa
in
mov
fwait
cmc
push
fadds
out
dec
loop
pop
int3
call
clc
inc
jne
xor
jge
out
jo
cs
movsb
popf
popf
lods
push
jle
leave
jp
test
mov
inc
jbe
fcmove
xchg
mov
cmp
xchg
xor
mov
inc
fisubrl
mov
in
lds
dec
xchg
fmulp
repz
pop
dec
add
lods
and
mov
fisttpll
ss
imul
div
mov
jl
xchg
mov
and
jg
jp
mov
nop
push
pop
and
pop
fsubrp
dec
mov
sub
xor
rcl
xchg
pop
movl
add
xchg
fadds
sbb
fdivrs
outsl
jl
arpl
imul
das
sub
lea
dec
mov
mov
cwtl
inc
outsb
nop
adc
push
cmpsb
and
outsl
jne,pn
daa
sub
pop
push
dec
fcompl
pop
or
mov
scas
add
and
outsb
mov
dec
mov
mov
ret
sub
test
cwtl
sbb
sub
cmp
pusha
jbe
jbe
sub
fwait
into
mov
pop
insb
dec
ds
fidivrs
insl
mov
lret
sbb
dec
jl
sbb
out
mov
dec
add
dec
call
lods
and
fisubrs
inc
push
stos
xchg
mov
xor
and
stos
leave
scas
and
cmp
loope
pop
fists
mull
push
cltd
sub
mov
bound
jno
or
lret
out
daa
shll
notrack
dec
push
fldl
push
push
nop
jecxz
cmp
out
xor
aas
xchg
aaa
push
sbb
sar
out
sbb
sbb
outsl
push
add
inc
rcll
mov
int
stos
aaa
pusha
icebp
out
pusha
insb
rcrb
mov
aad
pop
stos
bswap
loopne
add
adc
inc
xchg
push
cmp
bound
xchg
mov
cmp
les
jbe
ljmp
lock
sub
pushf
mov
dec
add
xchg
fildl
sahf
fs
cmp
jecxz
adc
mov
ljmp
xchg
add
mov
call
insb
test
aaa
jno
imulb
xchg
or
mov
mov
lret
dec
push
add
sbb
and
cmpsl
push
outsb
into
imul
inc
int3
lock
inc
inc
pop
scas
rcr
sub
sbb
test
xor
push
push
push
mov
mov
push
inc
mov
pop
adc
lods
and
inc
cli
adc
jns
mov
repnz
jge
test
scas
jp
fldl
lods
arpl
andb
das
fcmovne
scas
ret
lds
lds
jb
popf
add
inc
mov
pop
test
or
outsb
sbb
sbb
gs
lret
pop
xchg
push
sbb
lahf
jecxz
mov
rolb
or
int3
fnstenv
les
test
sti
in
cmp
cmpsl
jo
hlt
mov
in
shlb
aas
xor
pop
lcall
jb
mov
push
jecxz
imul
aam
lcall
push
insb
test
iret
insb
xor
lea
xchg
adc
rorl
aam
sbb
cltd
cmp
pushf
push
into
or
adc
test
out
addr16
xlat
dec
repnz
jb
out
jns
icebp
ja
jmp
pop
scas
mov
mov
xchg
fwait
xlat
ss
xor
jno
adc
add
enter
dec
adc
fbld
mov
dec
dec
push
push
aas
outsb
lahf
les
shll
aad
fmuls
mov
fnsetpm(287
out
dec
xor
dec
out
add
in
dec
xchg
out
sbb
iret
ljmp
inc
fsts
int3
jp
adc
inc
and
push
fwait
add
mov
imul
mov
and
repz
rorb
jns
mov
insb
adc
jl
bound
mov
xor
xor
xchg
fstps
popf
xchg
fistpl
lea
daa
or
cmp
out
clc
mov
push
cld
inc
mov
cmp
dec
sub
aaa
shrb
movsl
add
ljmp
loop
pusha
popf
addr16
pop
mov
jp
xor
and
mov
aas
mov
fldenv
add
sub
mov
adcl
in
mov
add
imul
mov
xor
in
out
cmp
mov
pop
ds
or
add
mul
push
in
fidivs
push
dec
lds
insb
add
pop
jns
pushf
ret
ss
fxch
xor
sbb
sub
imul
daa
jp
add
add
pop
ret
jnp
cmc
icebp
jmp
stc
xchg
lea
test
imul
lea
and
fldl
lahf
outsl
in
pop
cs
mov
sbb
fsub
or
mul
jbe
test
ljmp
mov
scas
ss
dec
push
lock
xchg
cmp
ret
imul
jmp
adc
test
sbb
int3
pop
ljmp
and
jne
repz
int3
test
or
push
jb
mov
loope
out
insb
fs
cltd
mov
inc
aam
inc
push
sbbb
dec
shrb
and
add
ret
mov
adc
cmp
ret
mov
cld
dec
mov
pop
enter
pop
or
scas
xchg
dec
push
sub
inc
out
pop
inc
sti
mov
fwait
sbb
nop
cli
mov
push
mov
fidivrs
add
mov
out
jae
test
adc
push
fnstsw
adc
roll
lret
enter
sub
call
or
aad
push
jmp
xor
xor
lds
cmp
pop
sti
cltd
xor
adc
loope
popa
xorb
dec
outsl
js
inc
mov
mov
xchg
push
fistps
rcrl
xchg
loope
inc
aad
test
xchg
or
hlt
mov
out
and
cmp
aam
jnp
mov
cwtl
outsb
es
lahf
mov
ljmp
lock
das
push
imulb
lret
sbb
in
pusha
mov
add
loop
sbb
add
cltd
fildll
lods
out
es
lret
mov
aaa
cs
movsb
fsubs
add
pop
xchg
arpl
dec
in
pop
jmp
push
inc
sub
and
and
in
add
dec
jns
mov
notb
fisttpl
dec
xchg
pop
jno
mov
es
bound
movsl
sbb
test
lret
push
stc
popf
xchg
aam
cmp
repz
lods
notl
sbb
mov
sub
mov
mov
scas
jnp
data16
enter
cmpsb
aaa
rcrb
test
test
insb
cmp
popl
or
jmp
pop
rcrb
xchg
mov
outsl
mulb
mov
push
pushf
cli
into
mov
into
or
xor
or
dec
and
mulb
dec
movsb
jg
pop
mov
xor
sbb
cmpl
xor
out
and
imul
sti
ror
aas
push
test
das
or
or
or
and
adcl
rcr
sahf
lret
inc
stos
rcrl
pop
adc
sbb
mov
mov
aad
in
mov
lods
testl
push
push
sbb
fisttpl
js
adc
push
jnp
jmp
push
sti
jnp
and
ss
lahf
or
ja
lahf
js
cs
ss
mov
mov
outsl
add
imul
adc
pop
int3
enter
addr16
mov
mov
jne
sub
ja
cmp
mov
inc
je
or
call
and
add
inc
subb
lret
les
enter
mov
pusha
hlt
sub
dec
test
insl
xor
fcmovb
in
popa
divb
bound
or
push
and
fwait
ret
aas
sbb
stos
stos
shlb
mov
sub
dec
jb
mov
sti
cwtl
sub
cwtl
dec
xor
ljmp
push
fwait
cltd
mov
mov
push
ret
pop
add
sarl
xchg
daa
lods
mov
sub
mov
pop
fwait
xchg
jae
jne
lahf
movsl
xchg
mov
xor
xor
lock
lcall
xchg
add
jp
push
pop
jne
sub
push
int
dec
inc
push
shlb
add
lea
lds
es
shlb
ret
aam
repnz
mov
inc
popf
sub
fimull
mov
pop
sti
inc
hlt
test
sbbb
mov
pop
bound
push
inc
push
add
gs
pop
push
gs
mov
lahf
cmpsl
test
enter
int
adc
pop
sbb
cmp
pop
out
lret
roll
fidivrl
nop
xor
inc
addr16
gs
movsl
data16
push
push
fsubrl
lds
lods
sub
pop
jmp
push
shlb
dec
fstpl
sbb
mov
aam
test
rol
div
dec
mov
arpl
mov
jno
pop
or
adc
arpl
cmp
and
cmp
mov
jb
cltd
test
mov
inc
dec
rcll
pop
pushf
xchg
mov
mov
jbe
mov
mov
sub
das
std
or
or
xor
orl
imul
pop
pop
jecxz
pop
in
mov
pop
nop
in
pop
test
aaa
pop
push
xor
imul
mov
mov
mov
movsl
sub
sbb
push
mov
cmpsb
repz
sti
pop
add
xchg
mov
cli
or
xchg
dec
mov
clc
aaa
add
pop
lret
mov
rorb
fwait
cmc
adc
jmp
lret
pop
sbb
cwtl
ss
add
push
aam
pop
stos
ds
stos
int3
and
mov
idivb
gs
out
stos
jno
sbb
rol
pusha
in
adcl
out
lahf
cmp
add
insb
insl
and
ds
mov
repz
dec
add
iret
dec
call
pop
mov
sbb
sub
mov
sbb
pop
mov
jl
pop
into
es
push
in
leave
adc
sahf
cld
inc
sbb
mov
xor
mov
mov
sahf
ja
in
xchg
orb
das
jb
out
adc
xor
mov
pop
jmp
mov
jmp
xor
rcrb
pop
adc
adc
clc
push
daa
mov
adc
and
sub
lds
pop
dec
es
xchg
sbb
cmc
cmp
xor
cmp
pop
roll
push
testb
mov
popa
andl
movsl
push
std
decb
or
inc
sub
outsl
out
andb
mov
jo
cs
xor
sbb
jp
pushf
mov
shr
cltd
imul
inc
ss
rolb
adc
repnz
pop
in
rcll
loopne
cmpsl
or
punpckhbw
stos
mov
xchg
jmp
add
rolb
js
mov
mov
jne
cmp
in
aaa
mov
dec
cmpsl
inc
fstps
jg
lock
jecxz
jle
jp
mov
dec
mov
sbb
fldt
lods
xchg
clc
jnp
bound
jmp
out
and
add
jo
aas
sub
mov
or
popa
fists
dec
hlt
cmpsl
jo
ljmp
incl
js
inc
daa
xlat
mov
sbb
inc
shll
mov
push
loop
rcll
data16
cld
into
in
pop
mov
adc
in
mov
add
mov
cmp
out
repnz
test
jmp
arpl
and
pusha
push
jl
cmc
clc
xchg
aaa
mov
fdivs
out
xlat
jae
mov
stc
es
and
out
out
mov
add
xchg
mov
enter
push
mov
dec
add
jne
aaa
xchg
sar
scas
push
icebp
fwait
aad
scas
inc
dec
adc
insb
out
xor
in
push
add
scas
adc
xor
mov
fadds
push
sti
mov
cmp
neg
rcrl
es
ret
sbb
mov
aam
push
jmp
inc
shlb
cmp
mov
arpl
imul
mov
mov
ljmp
pop
push
inc
fimull
and
xchg
sbbl
into
js
push
loope
xchg
push
xchg
or
cli
sub
stos
and
in
mov
scas
dec
pop
cmpsl
push
lock
daa
ss
or
cmp
test
jecxz
pop
fsub
mov
add
rclb
pop
shlb
adc
mov
add
jl
push
pop
movsb
in
mov
call
aam
aaa
arpl
aas
insb
cmp
int
or
cmp
in
xchg
out
rolb
outsb
push
ss
int
pop
lret
sti
xchg
test
cmp
jp
cltd
or
lea
jnp
shlb
in
in
inc
test
stos
mov
je
push
sub
sahf
inc
push
aaa
add
mov
shlb
mov
sbb
ds
inc
ss
clc
out
cld
fadd
fdivs
pushf
dec
pusha
loope
shlb
sbb
mov
sbb
pop
pusha
inc
mov
leave
sub
aas
fbld
mov
out
outsl
insl
je
and
sahf
add
repnz
adc
add
jbe
loop
je
adc
cmp
shlb
in
test
cmpl
ss
mov
sub
stos
pop
int
sub
xor
jmp
outsl
mov
add
push
inc
addr16
sbb
inc
jmp
into
int3
les
dec
push
shl
and
rorl
cli
je
stc
fdivl
sbb
daa
xchg
call
cld
jne
jne
sbb
fdivl
xchg
testb
out
xchg
movsb
out
shrl
add
jecxz
jp
in
xchg
stos
adc
cmp
imul
out
lret
test
jo
iret
mov
sub
aaa
jp
ds
or
mov
rolb
fwait
mov
imul
sub
loop
jg
push
js
pushf
sti
jle
jb
lods
call
repnz
dec
stc
lods
pop
popa
repz
aam
andb
inc
push
sub
jl
lret
sbb
push
add
cmp
shl
mov
adc
fdiv
stos
mov
popl
int3
aas
movl
mov
sarl
inc
adc
jno
mov
ret
dec
pop
mov
push
test
cmp
cmpsl
jmp
std
rcrb
insb
and
jnp
lret
outsb
xor
aad
flds
in
mov
cmp
rcrb
xor
add
pusha
xchg
sub
cmpsl
xchg
and
imul
out
mov
rcrb
or
mov
mov
jecxz
sbb
xlat
cmpsb
cli
fwait
xor
pop
mov
repz
sbb
std
lahf
xchg
xchg
mov
or
ret
ret
popa
inc
ljmp
ror
push
or
mov
test
cld
inc
aaa
xchg
xorl
ret
ss
fsubrl
imul
mov
clc
ja
and
in
ja
and
loop
sub
jg
aad
mov
and
mov
cmp
sbb
add
movsb
mov
orb
jg
push
fcmovbe
insl
inc
pop
xchg
ror
imul
imul
mov
push
cvtdq2ps
jo
jecxz
pop
mov
dec
dec
int3
mov
pop
lahf
je
test
pop
add
cmpsb
dec
subb
pop
jge
shll
bound
test
add
or
dec
mov
mov
inc
iret
cmp
sub
cmp
inc
mov
std
rolb
mov
cmp
mov
mov
adc
push
fstl
aaa
inc
mov
mov
mov
outsl
scas
adc
sbb
test
gs
sbb
add
jns
pop
jo
pop
jnp
lret
push
and
inc
mov
jp
in
insb
jns
lret
mov
stos
pusha
lahf
nop
mov
xchg
lahf
testl
mov
jle
ds
inc
in
dec
movsb
xchg
dec
xchg
cmp
nop
lret
dec
push
vphadduwq
lret
incl
jle
das
jge
cmpsl
cmpsb
stc
pop
adc
dec
or
cmpsl
popf
mov
push
fdivrl
mov
cwtl
sbb
or
xor
sub
mov
hlt
add
into
lds
and
test
mov
pop
sbb
mov
push
dec
mov
stc
cld
aam
xor
andl
xor
cmp
ja
pop
mov
or
add
and
or
outsb
fists
testl
test
cmp
repnz
push
push
pusha
cltd
lods
add
cmc
or
sbb
jae
mov
movsb
adc
or
mov
xchg
int3
pop
mov
int3
sbb
mov
push
xchg
push
pop
dec
clc
xchg
pusha
mov
ljmp
sbb
js
rol
outsb
lret
lahf
aaa
scas
mov
and
ret
mov
inc
in
dec
shll
imul
xchg
adc
push
xor
sub
xchg
jae
add
ss
xor
jge
in
pop
loope
icebp
sbb
add
out
clc
aas
das
stos
pop
jecxz
lods
cmp
add
scas
adc
xchg
jle
mov
dec
jnp
add
and
mov
ja
jb
mov
lret
das
insb
in
lods
pop
cmp
pop
mov
into
or
out
jle
lods
loop
inc
mov
jnp
out
cmpsl
aas
jp
imul
mov
pop
mov
jge
add
outsb
das
ja
mov
jns
call
daa
sbb
imul
dec
jmp
sub
stos
imul
dec
pop
out
in
out
jnp
mov
and
in
jno
mov
mov
mov
add
mov
ljmp
xor
jns
push
sbbl
mov
leave
mov
sub
add
add
push
sub
and
fdivr
lods
loopne
xor
dec
dec
stc
repz
ja
pusha
cmovne
pop
jle
iret
pop
sub
mov
movl
addl
insb
cltd
insb
cmp
in
xor
and
out
in
pop
mov
adc
jmp
dec
dec
outsl
pop
sub
mov
mov
sbb
mov
xor
test
mov
sbb
push
dec
pop
xchg
dec
and
roll
jnp
xor
test
lock
jo
imul
aas
shll
loop
test
dec
test
add
lea
fwait
aas
mov
int3
mov
or
jp
stc
loopne
hlt
fs
inc
gs
dec
jnp
mov
mov
pop
push
insb
dec
jp
push
jns
pushf
xor
loope
add
fisubl
mov
dec
loop
movsb
jp
push
imul
mov
cmp
cmp
lret
push
ret
aad
mov
cmc
mov
clc
jnp
adc
dec
add
push
hlt
hlt
repnz
sbb
cmp
xor
nop
lret
outsl
push
jns
pop
mov
mov
ret
movsl
clc
and
dec
insb
mov
ljmp
daa
cmp
adc
mov
push
mov
mov
pop
lea
sbb
mov
dec
mov
add
ds
inc
push
sbb
loopne
out
and
sub
mov
inc
push
mov
xchg
bound
ds
mov
mov
adc
leave
sub
lea
add
inc
loop
cmp
shrd
xchg
pop
hlt
add
movsl
test
cmp
xchg
fcomp
ljmp
inc
jmp
fstpl
ret
data16
ss
push
xchg
xchg
or
pop
cwtl
or
cmpsl
pusha
inc
mov
mov
test
in
jl
mov
ljmp
inc
mov
or
out
jle
pop
xor
xor
in
sub
lret
cmp
test
test
outsl
adc
inc
mov
xchg
mov
bound
or
xchg
jbe
cmc
mov
or
fwait
and
loop
mov
mov
sbb
clc
and
push
adc
pop
mov
inc
dec
lock
dec
mov
push
push
push
into
pop
fstpt
xor
mov
mov
dec
movsl
and
fdivr
pushf
adc
cmp
xchg
shrl
lcall
hlt
insl
daa
dec
popa
mov
dec
xor
loope
xchg
jle
orl
sbb
loop
sbb
out
jno
into
shll
mov
shrb
inc
sbb
addl
mull
push
inc
xor
push
repnz
ljmp
jmp
ret
popa
in
loope
scas
or
cmpsl
out
aaa
mov
push
movb
dec
xchg
sub
popf
cmc
loopne
shrb
add
test
add
js
in
pop
data16
mov
xchg
insb
xlat
ja
insb
in
sub
sub
adc
jp
fs
add
pop
mov
out
icebp
cmpl
jo
rol
nop
cwtl
sbb
cmp
mov
jge
xchg
test
sub
roll
cmp
mov
imul
mov
rcrl
loopne
cltd
sub
daa
pop
pop
outsb
and
leave
inc
popf
inc
out
mov
lret
pop
adc
xor
push
pop
xchg
fsubrl
sub
das
cmp
mov
adc
out
and
and
push
sub
mov
outsl
das
push
mov
sub
mov
aaa
adc
add
mov
add
frstor
jp
pop
out
jb
sub
and
mov
pop
push
ljmp
in
pop
lods
adc
pop
test
rcrl
fstpl
mov
push
in
sub
sbb
outsb
push
out
or
decb
sub
shll
aad
mov
xor
js
sbb
adc
sbb
repnz
loope
subb
lahf
sub
sbb
jge
adc
sbb
cmp
add
push
pop
push
add
mov
in
imul
mov
sub
imul
xor
data16
push
mov
std
or
out
out
outsb
mov
sbb
cld
dec
pop
aas
insb
out
jmp
or
iret
mov
mov
dec
push
or
fwait
adc
cli
pop
cmp
dec
test
scas
clc
adc
or
mov
test
loopne
loopne
jb
mov
adc
jl
jg
rcll
imul
cmp
or
dec
movsl
add
and
ds
int
pop
fisttpll
xlat
jp
data16
sub
lods
xchg
or
lret
mov
testl
fwait
sub
addr16
outsl
movsl
push
gs
push
cmpsb
or
test
push
cmp
add
ja,pn
lret
fcoms
movsl
mov
into
cli
add
aaa
aam
flds
mov
add
pop
cmp
repnz
push
xchg
mov
and
loop
lret
or
repnz
push
dec
fidivrl
in
pop
push
pop
sbb
out
sub
sub
push
or
add
pop
inc
mov
jmp
rcll
jb
mov
sub
adc
xchg
pop
pop
or
test
mov
push
add
jnp
inc
push
sbb
cmp
arpl
jge
mov
inc
dec
dec
dec
mov
pop
sti
jbe
out
mov
sbb
mull
dec
insb
push
scas
mov
lods
rorb
dec
aaa
xchg
sbb
xchg
push
mov
in
and
cmp
loop
movsb
shlb
shl
or
jge
in
into
mov
xchg
fstps
das
mov
pop
mov
das
mov
popa
mov
xchg
sbb
out
insb
aad
cmpsl
loope
js
test
sub
in
std
in
mov
ret
out
pop
fdivs
adc
sarb
es
jno
mov
add
and
testb
or
jmp
or
paddsw
push
jg
les
pop
inc
outsb
xor
and
lcall
das
jns
pop
sahf
xor
jmp
pop
pop
insl
mov
hlt
dec
jb
xor
mov
adc
iret
sub
stos
ljmp
xlat
and
jne
stos
popa
loope
clc
imul
pop
or
mov
cltd
test
fcmovu
push
mov
sbb
popf
aaa
or
sbb
push
ljmp
insl
lods
xchg
in
inc
enter
in
ret
fistl
and
aad
jecxz
stc
outsb
mov
push
inc
pushf
in
fsubl
ret
push
pusha
loop
or
fstl
test
fidivrl
js
inc
mov
mov
fld
ret
push
mov
movsb
popf
push
or
imul
dec
cs
jno
clc
mov
das
and
dec
mov
dec
aaa
fs
test
cmovg
pop
cmp
pop
and
cmpsl
imul
lods
nop
pop
cmpb
dec
cmp
gs
pushf
add
inc
pop
in
adc
hlt
cmp
adc
stc
ss
cmpsl
fbstp
rorb
pop
movsb
pushf
je
push
insb
aam
xlat
ret
fistps
rolw
ret
inc
mul
xchg
test
xor
fisttpl
pushf
fs
mov
mov
iret
roll
daa
inc
test
adc
jl
fisubs
repnz
jae
sahf
and
dec
xchg
movsb
sub
sahf
or
sarb
pop
ja
icebp
pop
fwait
sbb
sbb
mov
adc
cmp
shll
push
xor
test
or
aaa
clc
dec
nop
push
cmp
add
gs
imulb
mov
jbe
sub
nop
in
push
sbb
das
cmp
sbb
cmc
cmp
fbld
adc
insl
ds
shrb
sbb
lahf
cmpsl
sub
mov
add
test
cld
push
ljmp
pop
dec
jmp
insl
into
idivl
sbb
dec
cli
adc
test
sub
pop
sub
add
repnz
insl
in
adc
lods
rclb
daa
jp
push
xchg
cmp
mov
scas
cmp
jns
mov
out
adc
jb
loop
xor
pop
loop
outsb
je
jnp
ja
or
dec
repnz
dec
mov
daa
jmp
jp
lock
fdivr
push
push
xor
pusha
or
sbb
pop
and
movb
mov
xchg
pop
pop
jecxz
sahf
adc
scas
call
arpl
imul
xchg
jg
and
lret
sbb
imul
in
dec
dec
mov
fcomp
pop
pop
adc
mov
stos
xchg
in
lock
dec
test
cmp
push
into
dec
or
inc
pop
jmp
pop
inc
dec
cmpb
addl
lods
inc
ficomps
cwtl
or
xchg
pop
leave
stos
fbld
pop
jne
dec
fucomip
push
sub
adc
sbb
push
push
mov
ss
mov
repz
ficoms
pop
les
push
xchg
adc
lods
movsl
ret
cmc
scas
add
xor
cmc
ss
inc
ss
dec
pusha
mov
cwtl
or
clc
fisubrs
pop
cltd
and
insb
or
add
scas
hlt
stos
inc
xchg
cmpsb
ret
jecxz
ret
jmp
push
xor
repnz
je
in
xor
arpl
pop
enter
lock
or
notb
mov
insl
scas
js
pop
inc
daa
dec
xchg
out
ljmp
movb
loopne
cmc
cmc
push
sbb
aad
push
mov
jnp
jb
lea
out
mov
je
mov
and
es
ret
scas
fidivs
aas
jmp
fwait
dec
mov
insl
das
lds
push
mov
fcompl
insb
lds
aas
and
push
inc
dec
daa
add
mov
fwait
sbb
mov
popf
xchg
aas
cld
test
test
xor
out
daa
mov
add
xchg
sti
fidivs
aad
mov
test
mov
int3
pop
xor
adc
jns
mov
mov
stc
ds
or
sahf
faddp
dec
loop
and
clc
mov
xchg
inc
movsl
or
mov
into
out
jne
jp
sbb
sub
int3
push
dec
cmp
or
xchg
and
loopne
leave
sub
cmp
notb
adc
cltd
out
xchg
enter
lds
inc
xor
dec
cld
popa
cmpsl
movsl
shlb
push
mov
in
sahf
xor
or
add
push
out
out
jmp
cs
in
imulb
fbld
repnz
cmp
shlb
popa
xorb
inc
cld
push
repz
insl
ss
mov
mov
jns
cmp
andb
sub
dec
cmp
repz
shr
add
enter
daa
or
and
mov
jecxz
enter
or
add
clc
and
pop
daa
cmc
jno
and
rolb
sub
std
lds
pop
les
or
pop
imul
pop
rcl
dec
or
test
gs
xor
rorb
ss
daa
push
jb
mov
jns
dec
roll
xor
xor
pop
sub
je
sub
stc
push
and
lahf
insb
insb
jle
js
xor
pop
inc
cltd
adc
xor
jle
lods
cs
mov
sub
xor
sbb
cmp
rcrl
xor
push
gs
ds
pop
mov
test
add
sti
sub
shrb
pavgw
mov
and
mov
loope
es
mov
or
inc
or
arpl
dec
jae
out
push
popf
add
mov
inc
hlt
jbe
mov
in
popf
popa
xchg
out
jnp
imul
pop
fs
adc
push
and
fsts
and
mov
ret
scas
cmpl
jne
rcll
mov
shll
cmp
out
mov
repnz
mov
stos
xchg
lret
jmp
repnz
jmp
mov
test
add
insl
xchg
cmp
addr16
divb
in
dec
int3
mov
shll
mov
les
loop
push
jg
push
imul
or
nop
lock
test
mov
je
pop
fs
sbb
ljmp
outsl
mov
icebp
jp
cmp
jns
or
push
add
in
fstps
jecxz
enter
je
fs
xor
lock
jecxz
xor
ja
xchg
cmp
cmpsl
fdivrl
push
leave
repz
mov
xchg
and
hlt
das
scas
stos
jbe
sub
repnz
js
mov
sub
sbbb
addr16
xchg
fistl
add
sbb
xor
or
out
addr16
mov
out
icebp
adc
push
clc
loop
inc
loop
xor
mov
sbb
das
jge
push
push
out
fdivs
push
ds
lret
lret
push
sbb
xor
pop
sbb
sbb
cmp
nop
sub
lret
out
movsb
rol
int3
insl
inc
inc
xchg
pop
push
faddl
popa
dec
pop
in
jge
sub
insb
cmp
mov
fwait
test
out
dec
mov
mov
inc
xchg
test
add
loope
sti
xchg
inc
enter
addr16
jae,pn
inc
aaa
mov
gs
add
xchg
int3
jo
pop
lret
cmp
sti
mov
fmull
mov
add
shlb
mov
pop
adc
pop
pop
rorb
int
pop
cmc
xchg
outsl
mov
inc
pushf
lret
mov
sub
std
push
sahf
andl
and
lahf
sarb
pop
push
mov
sti
aam
sbb
lods
stos
lahf
pop
in
xor
push
js
push
pop
test
repnz
lods
dec
bound
mov
bound
fstpt
pop
fwait
test
lods
sbb
mov
push
xlat
sbb
insb
rcrl
pop
icebp
mov
stos
enter
les
jmp
icebp
bound
aam
enter
test
test
inc
insl
sarl
dec
adc
inc
pop
loopne
vmaxps
dec
daa
and
pop
loopne
inc
sbb
add
mov
lcall
dec
jge
pushf
cld
push
scas
cmp
lcall
push
lahf
lcall
sbb
adc
lock
addr16
mov
adc
scas
cltd
insl
movl
mov
adc
mov
dec
sbb
cmp
dec
je
push
out
push
mov
icebp
enter
andb
insl
popf
and
push
jb
leave
pop
imul
push
inc
jno
mov
jmp
aas
pusha
jb
lret
cmpsb
icebp
test
outsb
pop
add
ljmp
adc
rclb
bndldx
cmpsl
fs
mov
jge
xor
cmp
cli
repnz
jnp
add
imul
imul
repnz
mov
out
movsl
sub
inc
scas
js
pushf
into
add
or
xor
and
int3
sub
inc
cld
dec
pop
insl
movsl
mov
pop
cltd
gs
stc
movsl
cmpsl
mov
mov
lret
add
cmp
push
sub
inc
fldl
fistps
clc
push
xor
into
int
mov
cmc
ds
pop
dec
sbb
xor
and
scas
aas
jg
jbe
mov
sbb
or
les
jge
jecxz
in
loop
fsubr
adc
out
lret
xor
les
xor
cltd
mov
fnstsw
inc
or
mov
pop
popf
dec
cmp
cmp
xorl
pop
sbb
mov
imul
xchg
cwtl
push
and
dec
jae
lahf
xchg
jmp
inc
and
xchg
sbb
lods
add
sub
pushf
dec
adc
xchg
lea
pop
dec
addr16
mov
xchg
mov
aad
jbe
add
gs
pop
mov
lret
jns
cmpsl
pop
cli
lds
cmpsl
add
and
mov
fs
test
jns
hlt
leave
inc
pop
push
int3
out
mov
stc
adc
push
imul
cmp
sub
add
scas
xchg
out
lret
push
dec
and
add
not
cmp
std
jge
jno
mov
pop
dec
ss
dec
pop
int3
dec
ret
cmp
and
push
add
pusha
imul
sbb
les
mov
aas
dec
jo
scas
dec
dec
adc
mov
push
aas
cld
je
xor
fisttps
and
push
jl
xchg
inc
and
aas
pop
dec
add
push
xchg
xchg
hlt
shll
fwait
dec
iret
mov
and
xchg
fsubrs
fcmovu
mov
fmuls
lea
js
xchg
dec
inc
jnp
or
xor
jb
rorl
inc
push
mov
xchg
lea
rorb
lods
pushf
sbb
xlat
js
cmp
jg
imul
pushf
js
fstps
mov
sbb
test
out
xchg
jp
subb
xor
popa
mov
cmpsl
cli
xor
test
dec
or
xor
movsl
scas
mov
sub
push
lret
adc
dec
mov
add
mov
clc
outsl
cmp
fs
adc
jmp
sarb
ds
jno
in
sbb
lret
pop
jo
dec
movsl
adc
mov
pop
mov
aad
jecxz
mov
push
out
mov
repnz
fimull
jge
icebp
aaa
jg
sub
cld
push
mov
in
inc
inc
test
mov
push
add
std
adc
fsubl
push
xor
jbe
outsl
subb
push
test
ret
loopne
push
daa
paddsb
sub
or
rcrb
xor
mov
test
mov
int3
mov
mov
push
data16
in
cmp
xchg
arpl
mov
jmp
rcl
ret
ret
inc
mov
or
in
mov
adc
fistpll
iret
cmp
shlb
sub
ret
rolb
adc
push
mov
aam
clc
adc
cld
movsl
mov
push
sub
pop
xchg
gs
fcoms
mov
clc
sbb
lea
or
fstl
xchg
add
and
pop
mov
js
jnp
pop
sbb
fxch
iret
xchg
out
cmp
push
icebp
mov
inc
jnp
cmp
in
xor
adc
insb
ficoml
loopne
and
leave
fisttpl
dec
scas
or
jnp
or
ljmp
jbe
shll
cmp
test
mov
push
adc
sub
fwait
pop
pop
jecxz
mov
lock
int3
enter
sti
cmpsl
dec
cmpsb
pop
sub
jmp
push
dec
lcall
push
mov
jne
dec
popf
movsl
mov
sbb
cmp
inc
lods
js
das
push
not
inc
mov
cmp
push
subb
lods
jb
and
cmovae
rorl
pop
sub
cld
cwtl
rcl
or
mov
test
jne
cmpsb
jp
stos
out
sar
loopne
and
orl
das
jo
cwtl
dec
in
out
loopne
shl
push
testl
fisubl
pop
test
leave
jp
dec
inc
out
scas
push
idiv
mov
mov
jns
add
inc
int
cmp
leave
mov
push
fisubs
mov
addr16
mov
xor
xchg
mov
das
outsl
subl
ljmp
pusha
addr16
inc
das
pop
loop
shrb
fsubrl
stos
cmpsl
push
mov
cmpl
mov
aad
mov
imul
xchg
push
popl
loop
pop
mov
inc
add
mov
push
stc
notl
inc
mov
hlt
jae
jb
cltd
mov
std
mov
aaa
mov
test
sarb
mov
test
sbb
mov
jne
push
aam
lds
popf
pop
adc
leave
nop
cli
mov
lods
xorb
lock
imul
mov
sub
ja
enter
adc
rcr
addr16
and
adc
inc
cmp
xchg
pop
repz
push
add
fldl
cmp
xor
xor
or
rorb
push
xchg
lock
repz
cwtl
pop
insb
pop
lods
jg
lret
mov
jl
mov
add
lods
dec
gs
mov
xchg
adc
test
push
add
scas
outsb
inc
je
adc
mov
sub
mov
or
bound
and
insl
sbb
leave
add
sub
mov
xchg
sub
lods
orl
mov
test
cld
lret
pop
pop
dec
cmc
xor
cmp
nop
mov
imul
inc
insl
popa
mov
cmp
jns
pop
iret
add
sarb
psllq
xchg
jg
aad
cmpsl
pop
lea
popa
lahf
rcl
cmp
mov
xchg
push
sub
jmp
hlt
iret
loopne
pop
jmp
test
mov
fsubrl
aad
mov
stos
movsl
bound
cltd
jg
jne
mov
or
movsb
daa
idivb
xchg
pop
ljmp
push
maxps
xor
stos
inc
scas
icebp
outsl
lods
mov
jmp
add
mov
cld
adc
shlb
push
jno
pushf
mov
movsb
dec
outsb
sbbb
test
push
adc
cwtl
jne
in
dec
leave
lock
cmp
lods
lcall
pop
add
mov
out
test
mov
mov
pop
ljmp
mov
sub
sahf
and
cwtl
aad
cmp
cmpsl
mov
xor
mov
out
and
loope
enter
test
sub
shll
jp
pop
outsb
testl
or
cmpsb
mov
inc
sbbl
xchg
push
cmpsl
lahf
jno
pop
or
jb
icebp
mov
ljmp
test
das
xor
jg
push
fcomip
cs
cld
mov
and
mov
idivb
imul
mov
jmp
aaa
xor
push
mov
aas
jg
cmpsl
sbb
pop
bound
mov
fisttpll
ret
sahf
xchg
xchg
fildll
cmp
mov
pop
fsub
out
je
out
addr16
push
sbb
inc
pushw
or
push
add
pop
mov
pop
add
mov
in
jecxz
cmpsb
clc
popf
ficoms
icebp
mov
inc
jp
push
add
xor
bound
cmovne
cli
das
push
inc
mov
stos
inc
jae
jae
ret
xchg
sbb
iret
loope
cmpsl
rcrb
pusha
clc
rep
lea
or
fldt
out
sub
add
add
aas
sub
dec
fs
adc
sub
stc
popa
ret
rorl
or
cmp
shl
stos
fistl
sti
shl
mov
mov
jl
rorb
cmp
push
out
xchg
in
jae
adc
sub
test
imul
ret
dec
inc
nop
cli
jno
lcall
inc
add
pop
fcomp
adc
repz
sbb
and
add
push
and
sub
pusha
mov
test
lds
mov
scas
std
jne
xor
mov
and
stc
sub
rcr
cmp
cs
add
inc
fmull
push
push
jp
jne
dec
jge
jae
ret
outsl
push
sar
pop
push
xchg
int
sbb
xchg
push
jnp
sub
push
mov
jbe
lcall
inc
push
pop
jb
mov
sub
enter
repz
sbb
repz
or
push
jecxz
dec
jbe
shrl
sub
mov
cmp
mov
outsl
cmp
out
stos
notb
das
mov
imul
sbb
jge
sahf
jp
sbb
out
test
je
movsb
cmp
mov
into
mov
mov
in
das
loope
push
xor
add
loope
or
sbb
test
rcll
pushf
lcall
sahf
iret
jae
push
push
fs
dec
mov
sub
dec
imul
aad
or
lea
loopne
test
fsubrl
cli
jnp
or
jmp
loope
inc
sub
sub
mov
aam
insl
lods
mov
sbb
movsl
sarb
add
xor
xlat
pop
cmpsl
lret
inc
shr
xor
adc
jp
imul
insb
mov
daa
and
outsb
push
xchg
cli
jo
push
xchg
lcall
pop
addl
jecxz
mov
mov
daa
rcrb
mov
xchg
pop
call
sub
fwait
mov
push
out
sub
repz
jmp
fisttps
inc
inc
sub
shlb
lods
cwtl
push
cmc
sub
pop
outsb
mov
cmp
push
add
iret
lods
movsl
xchg
sbb
pop
stos
repz
aaa
out
push
sahf
lret
dec
fwait
and
mov
xchg
mov
outsb
jge
loopne
mov
push
pusha
adc
popa
popa
push
inc
or
sbb
cmpb
xor
add
jle
push
adc
pushf
sub
andps
stc
mov
jae
or
mov
jnp
add
push
fildl
inc
inc
mov
xlat
cmp
adc
or
add
mov
fistpl
sub
sub
loopne
iret
jp
in
inc
incb
mov
inc
rclb
add
adc
pop
hlt
stos
mov
cs
ret
jmp
mov
cmp
lods
mov
push
xchg
xorl
push
cli
dec
ffree
aad
mov
sbb
jnp
fs
adc
mov
xchg
sbb
dec
lock
clc
fwait
mov
shrl
int3
data16
add
sub
cmp
dec
xchg
loopne
loope,pn
cs
add
dec
lret
adc
jo
xlat
mov
scas
inc
mov
sbb
add
test
push
lea
dec
inc
mov
xchg
and
lea
xor
jno
or
cmp
push
and
ljmp
scas
out
sub
pop
lea
das
enter
xor
mov
test
cmp
or
pushl
dec
aad
push
loop
jbe
dec
rorl
cmp
sbbb
outsl
mov
data16
mov
pop
repnz
fdivrs
cld
jl
cmpb
xor
sarb
xchg
ss
ds
inc
jge
push
jne
inc
stos
jnp
dec
iret
xor
out
push
test
inc
xor
addr16
in
daa
pushf
xchg
aaa
pusha
cmp
stc
xchg
sub
fwait
pop
sbb
jbe
or
xchg
insl
and
bound
jb
rorl
into
xchg
inc
add
in
test
mov
adc
cs
fnsave
push
dec
mov
imul
insb
inc
out
stos
mov
adc
pop
mov
ja
xchg
mov
jge
pop
mov
arpl
cs
cmc
insb
lods
into
addr16
pop
stos
add
lods
cmp
scas
xor
iret
sbb
or
xor
cmpl
xorb
loopne
cmp
aad
cmp
adc
das
push
xchg
icebp
and
push
xorl
and
dec
mov
rcrl
addr16
cs
movsl
lock
in
sbb
adc
jbe
in
inc
inc
jmp
pushf
jg
sbb
mov
fsubrl
pop
in
xor
sbb
into
ficompl
mov
xor
fdivr
mov
mov
stos
shlb
psubsw
push
xchg
imul
call
hlt
pop
xor
push
add
sbbl
jp
push
sbb
dec
jle
cmp
into
or
imul
xchg
ljmp
push
add
pushw
push
mov
out
in
cmp
addr16
cmpsl
orl
mov
ret
aaa
mov
ja
add
lret
dec
dec
outsl
jge
push
movsb
lcall
rclb
xor
adc
sub
or
ds
cltd
cmp
into
in
adcl
pop
arpl
push
sbb
incb
sub
int3
fistps
out
je
outsl
mov
mov
in
add
movsl
outsb
sub
andl
lahf
lds
mov
pusha
arpl
push
jge
sbb
cmp
enter
mov
mov
int
repz
ret
gs
xchg
loope
and
xor
add
imul
outsb
cmp
mov
push
xor
push
js
fbstp
jno
push
insl
push
sub
test
lahf
xlat
push
mov
fdivr
add
adc
shl
in
pop
jecxz
test
sbb
in
and
fwait
dec
enter
mov
xchg
lea
loopne
fisubl
popa
sub
sahf
jno
cmc
adc
or
ss
lea
or
sub
insl
adc
cmpsb
ret
mov
push
cmpsl
stos
loop
data16
loop
imul
jp
aas
sbb
mov
js
adc
ljmp
push
hlt
or
ds
inc
xchg
and
push
daa
push
add
ljmp
imul
mov
push
jno
les
ss
pop
pop
xorb
enter
mov
push
jmp
rol
js
cld
push
cmp
push
ss
sbb
ja
xor
xchg
out
xchg
push
jo
rcrl
dec
rcl
push
lock
mov
adc
test
mov
inc
mov
cs
xor
adc
aad
sbb
cmc
sbbb
sub
mov
push
inc
ret
pop
pop
popa
lret
loopne
mov
inc
push
add
cmpsb
xchg
and
test
inc
inc
int
fwait
dec
sbb
call
fnstcw
push
mov
ljmp
and
push
loopne
adcl
push
cmp
cmovbe
es
insl
push
jo
fdivrs
test
loopne
and
mov
ds
and
jmp
xor
push
cmp
or
cld
int3
push
inc
add
outsb
jb
dec
mov
enter
movsb
pop
jmp
inc
adc
in
mov
mov
lock
fs
push
fnstsw
mov
mov
loop
gs
xlat
mov
xchg
rcll
sbb
sbb
or
lcall
ficoml
stos
sub
inc
fistpl
xlat
push
outsl
and
icebp
scas
pusha
adc
push
daa
xchg
loop
add
ds
sbb
scas
add
xchg
xor
cltd
or
movsl
inc
int3
fistl
jle
movsb
scas
and
pop
mov
daa
pop
jns
pop
push
push
mov
arpl
jge
inc
xchg
xor
cld
jnp
sbbl
mov
jl
les
jecxz
push
push
lcall
ret
outsb
fbstp
inc
paddb
dec
add
jnp
pop
hlt
std
inc
mov
and
data16
jge
push
data16
jg
dec
cmp
sub
addb
rclb
mov
adc
fstpt
fisubrs
sti
rcll
negb
add
fldt
scas
add
mov
mov
test
xchg
clc
xchg
jg
push
lods
or
loope
cmp
mov
sub
and
jb
cmc
and
sahf
int
pop
xchg
adc
and
aam
dec
add
jo
lods
call
cmpsl
clc
mov
push
add
adc
push
jne
jbe
mov
pop
pop
mov
aas
jg
mov
pop
mov
ljmp
dec
adc
sub
pop
das
sub
adc
arpl
inc
cmp
cwtl
push
cmp
adc
outsl
enter
movsb
add
jmp
mov
movsb
fnstenv
mov
int3
pusha
enter
cmp
add
cltd
inc
jge
call
ja
jle
out
orb
adc
aas
add
scas
jb
shl
pop
jae
arpl
dec
test
lret
push
inc
iret
adc
xor
aam
mov
test
pop
movsl
lahf
sti
neg
xor
push
int
andb
and
enter
mov
sbb
notb
cmpl
outsb
testb
test
xor
mov
pushf
xor
sub
xchg
addr16
mov
cmp
das
xor
aam
fsubs
adc
dec
lods
and
lods
adc
lret
js
dec
push
fwait
jns
rcrl
and
push
xchg
into
pusha
popa
in
lea
mov
pop
icebp
sbb
sub
dec
or
mov
repz
pop
movsl
mov
push
out
add
cmp
fstpl
mov
cmp
xchg
adc
pop
lods
fstpl
sbb
jne
fistl
fistpll
sbb
push
or
pop
sbb
dec
lahf
xchg
fsub
sar
xchg
sahf
pop
cwtl
and
xlat
sahf
xor
cmp
inc
repnz
mov
ja
jg
add
xchg
push
mov
adc
and
into
jne
sti
and
pop
pusha
xlat
xchg
pop
cmpsl
dec
cmpsl
push
lods
xor
cld
pop
stos
pop
test
das
icebp
faddp
sbbb
and
ss
mov
adc
inc
icebp
arpl
push
int
xchg
and
mov
fnstcw
xor
hlt
sbb
in
mov
je
and
enter
gs
jecxz
enter
outsl
mov
aas
lods
je
ret
fldenv
or
out
andps
sbb
pop
loopne
sub
cmp
jge
loop
adc
or
add
imul
push
and
mov
in
repnz
push
mov
roll
cs
sbb
xchg
je
jo
inc
insl
test
mov
sbb
daa
and
inc
mov
arpl
xchg
mov
xchg
jne
push
enter
das
mov
scas
cmp
sub
stc
jmp
out
sub
movsl
push
adc
push
ja
xcrypt-ofb
cmpsl
sub
xor
gs
inc
mov
sbb
aam
fiaddl
insb
sbb
mov
jb
xor
jmp
push
xor
and
push
inc
test
xchg
repz
pop
negl
loop
lret
out
push
out
add
jo
xor
push
subb
pop
roll
outsb
repz
or
xchg
mov
and
adc
aam
mov
sbb
and
rcrl
add
dec
sbb
add
leave
mov
lds
lods
cltd
dec
daa
popa
jbe
sbb
gs
adc
movsl
mov
loope
cltd
mov
xlat
cmpsl
and
out
jae
mov
pop
test
cwtl
add
aaa
icebp
out
lds
fdivr
sti
mov
cmc
insl
mov
movsb
push
stos
mov
sbb
push
xchg
push
inc
aam
stos
scas
dec
in
cmpsb
sbb
sahf
cli
lock
xchg
mov
add
enter
rcrb
jmp
std
rorl
arpl
adc
pop
dec
push
gs
inc
push
cwtl
push
jno
imul
test
outsl
sarb
and
scas
add
mov
sbb
jle
mov
mov
repnz
mov
xor
int3
and
sub
lock
jns
xchg
aaa
rclb
mov
insb
push
cli
mov
rcll
add
hlt
mov
pop
sub
lods
mov
jbe
cmpsl
push
lds
push
xchg
paddd
stc
std
fst
fimuls
adc
andb
roll
into
push
xchg
stos
popl
cli
dec
pop
add
pop
jl
xchg
imul
lahf
jae
push
es
sbb
out
lahf
stos
jno
pop
in
enter
jle
push
jp
cmp
pusha
loopne
jmp
xchg
int3
leavew
dec
fstp
jmp
gs
jmp
mov
push
les
cmp
mov
daa
int3
ja
sub
sbb
mov
mov
xor
imul
fs
xor
in
pop
lahf
mov
jae
popa
cld
push
adc
pusha
jne
repnz
pop
jp
push
jae
or
iret
adc
jne
popf
jns
scas
rcll
std
loope
xchg
lret
fsubl
pop
pusha
mov
addr16
pop
cmp
cmp
push
call
mov
inc
dec
mov
stos
lods
pop
enter
inc
mov
dec
or
push
jecxz
out
movd
jno
push
fistps
addr16
add
pop
loope
xor
xchg
add
sbb
add
stc
out
adc
js
bound
loope
push
or
movsb
cli
inc
inc
add
push
mov
sbb
push
in
add
dec
push
pop
loope
push
test
sti
scas
and
iret
test
mov
rorb
dec
roll
push
rcr
dec
dec
gs
ret
shl
das
imul
adc
lds
push
and
xchg
inc
into
adc
cwtl
inc
imul
and
xchg
clc
pop
mov
sahf
shr
xchg
imul
push
push
cltd
iretw
xchg
jmp
out
or
fistpl
test
sahf
sbb
mov
stos
xchg
lock
cli
lds
fcomi
sub
dec
add
push
rcll
imul
leave
xor
pop
jae
mov
dec
mov
add
jmp
lods
inc
push
cli
mov
repz
rcll
aaa
out
cmc
dec
lcall
fidivs
and
push
xchg
test
and
fistps
sub
jnp
aaa
xchg
sbb
js
xchg
fmull
scas
ljmp
mov
rol
xchg
pop
add
clc
jbe
out
rorl
jecxz
sub
iret
dec
inc
data16
dec
rcl
mov
mov
pushf
hlt
outsl
call
mov
test
mov
mov
sti
enter
ret
dec
pop
mov
sarb
xchg
adc
aad
pop
xor
loope
lods
loope
cmp
call
xorb
mov
xchg
dec
fdivrp
and
cmp
push
movsl
jmp
cwtl
imul
cli
movsl
repnz
dec
sbb
stos
rcr
int3
jno
push
subb
out
push
jno
mov
cmp
cmpxchg
jp
push
inc
mov
push
mov
cs
into
pop
out
xchg
xchg
jmp
mov
adc
or
adc
adc
shll
dec
lahf
pop
out
or
cwtl
cltd
cmc
sub
rcrl
sub
xor
inc
in
push
lods
in
adc
pop
xchg
adc
mov
and
into
pop
arpl
sub
leave
stc
jae
dec
rcrl
mov
pop
jo
js
loopne
push
xchg
lds
and
bound
repz
ds
lret
icebp
ret
clc
xchg
cmpsl
ds
sahf
jns
es
push
rcll
fldcw
adc
out
arpl
les
scas
fs
cmpl
mov
enter
xchg
pop
and
cltd
adc
sbb
fs
and
xor
icebp
enter
js
das
and
pop
mov
mov
xchg
cltd
daa
xorl
xor
stc
sub
xchg
pop
mov
rolb
sbb
xor
sub
mov
mov
lcall
fcoms
sbb
xlat
add
dec
mov
rorb
flds
add
ds
sub
sbbb
push
cld
dec
lcall
int3
pop
lahf
test
es
push
outsb
or
stc
xchg
mov
pop
inc
sub
mov
pop
mov
in
jo
sub
shl
xor
push
jmp
mov
add
aaa
xor
jns
xchg
push
push
iret
pop
xchg
stc
xchg
cmp
stos
clc
fimull
leave
test
popa
fsubl
jge
sahf
scas
add
add
js
enter
aam
popf
fdivr
cmp
cmp
xchg
mov
les
stc
xchg
iret
movsb
mov
push
test
xchg
das
pop
je
hlt
enter
gs
stc
fs
in
mov
pop
mov
jnp
inc
in
sbb
inc
pop
movb
test
cltd
sbb
cli
testb
push
in
and
push
push
stos
pop
popa
or
es
and
scas
pusha
or
mov
aam
aad
stos
cmpsl
inc
andb
cwtl
mov
je
jg
jecxz
aas
add
push
idivb
movsl
popf
enter
or
insb
mov
clc
cmpsb
and
cmp
outsb
mov
sbb
mov
jmp
adc
pusha
in
loopne
cmp
aas
mov
xor
sbb
lock
xlat
dec
addl
cmp
inc
sahf
in
adc
lods
mov
outsl
adc
rolb
sahf
cmc
cmp
ljmp
pop
cmp
dec
sbb
mov
popf
nop
push
mov
pop
into
clc
pop
or
sub
adc
sbb
and
dec
mov
xor
test
pop
into
pop
jecxz
jecxz
ljmp
mov
cli
or
cmp
mov
cmp
scas
cltd
mov
sbb
es
push
inc
dec
mov
mov
mov
xchg
xchg
dec
cmp
outsb
cld
fstpl
sarl
hlt
adc
ret
rorb
adc
insl
dec
adc
popa
xchg
mov
xchg
push
insb
mov
daa
stc
sub
pop
sub
cwtl
xchg
adc
jp
and
add
addr16
cmp
sub
add
into
lcall
inc
aas
jae
xor
lret
pop
pushf
in
or
jne
stos
and
je
ud1
jo
jle
dec
mov
push
stos
jmp
xchg
call
dec
mov
mov
dec
addr16
push
xchg
imul
dec
mov
lcall
jge
fs
cmp
lea
sbb
jbe
rcr
cmp
sbb
pop
movsl
scas
xchg
mov
sub
pop
push
add
lret
test
std
jl
fs
inc
lods
or
mov
inc
lret
pop
decb
test
mov
negl
cltd
into
adcb
jge
dec
mov
xor
pop
mov
pop
cmp
in
jp
jecxz
ret
stos
out
ds
xchg
xor
fcmovnbe
and
add
inc
inc
bound
subb
aaa
jg
fldt
addr16
stos
outsl
xchg
sub
xor
mov
fcompl
xor
push
xor
mov
imull
cmp
roll
cs
pop
pop
addr16
lcall
pop
pop
fisttpll
mov
cmp
and
xor
into
inc
jae
push
sub
arpl
and
pop
test
push
jns
add
imul
cmpsb
or
cltd
mov
dec
push
and
aas
xor
popa
push
mov
orb
cmc
inc
rcrl
insl
push
mov
jnp
pop
xor
loope
dec
leave
cld
push
inc
adc
jge
mov
inc
or
mov
xchg
mov
aam
cld
push
outsb
add
pop
lods
test
or
lcall
mov
les
outsb
shlb
cmpsb
jnp
xchg
cltd
rorl
mov
iret
or
fucomp
fidivrs
sahf
add
add
xchg
pop
and
ds
lahf
xor
out
aam
push
inc
add
cmp
or
xchg
jecxz
test
dec
push
ret
cmpsl
addr16
faddp
lcall
cli
cmpl
arpl
jno
fwait
lret
dec
popa
inc
adcl
cmp
jl
jl
dec
xchg
dec
xchg
lock
and
stos
in
test
cmc
add
scas
movsb
mov
or
repz
rcl
es
mov
sub
inc
adcl
roll
cmpsl
sbb
jle
out
mov
mov
push
mov
mov
outsb
ja
sbb
or
lret
jg
clc
aam
push
cmpsl
mov
inc
jne
sbb
mov
mov
cmp
mov
in
push
ficoms
cmp
rcll
out
jl
call
pushf
pusha
jmp
lds
and
jb
imul
cmp
sbb
pop
aad
pusha
cli
call
jge
lret
pop
pop
jmp
and
inc
pop
inc
pop
andb
cmpsb
and
in
inc
inc
cltd
push
pop
jmp
decl
or
rcr
out
cmp
mov
dec
adc
mov
dec
add
cmpsb
or
mov
jl
cmp
mov
xchg
inc
mov
stos
outsb
add
int3
or
inc
adc
repz
je
icebp
or
lcall
mov
xor
cmp
xchg
shl
sbb
movswl
pop
rorl
mov
pop
push
pop
add
sbb
inc
mov
movsb
xchg
add
fwait
mov
jl
test
pop
movsb
lock
mov
das
data16
cmp
repz
je
mov
pop
jns
cltd
mov
and
jnp
les
pop
and
int3
jae
inc
int3
dec
jb
mov
xor
mov
pop
lahf
mov
mov
jmp
dec
xchg
jg
mov
jle
xchg
push
jno
add
shlb
xlat
or
shlb
addb
cmpb
cltd
sbb
and
movsb
jl
scas
jecxz
cmp
dec
mov
ret
add
xchg
add
out
mov
adc
push
fistpll
lret
mov
jmp
sub
cmp
or
push
mov
xchg
insb
inc
mov
push
in
out
jo
subl
js
out
fidivrs
ficompl
cld
addr16
ja
jmp
aas
pxor
xor
cmc
and
iret
jle
sbb
inc
push
xchg
imul
push
es
test
inc
or
out
je
out
push
imul
push
pop
xchg
xchg
data16
sbb
ret
sub
xor
aam
pop
or
jae
cmp
add
jle
jle
loope
push
pushf
push
add
push
xlat
dec
neg
stos
inc
dec
xchg
fdivrl
mov
pop
add
cs
sub
addr16
cmp
fldl
cmpsb
pop
mov
pop
stos
or
mov
push
pop
add
cmp
int
pop
popa
cwtl
andl
pop
aad
xlat
cmp
add
mov
add
cmp
mov
cmpsl
or
leave
dec
clc
push
leave
enter
adc
outsb
addr16
data16
stos
mov
test
cmp
shrl
xor
pop
and
jns
jo
xchg
xchg
mov
push
shll
rep
nop
bnd
inc
mov
and
cmp
xchg
mov
mov
aam
lods
ljmp
dec
add
subl
mov
dec
cld
xor
add
test
inc
mov
fwait
pop
sub
xchg
pop
sbb
daa
and
adc
push
data16
loope
inc
jno
cmc
leave
pop
xchg
xchg
cmp
addb
nopl
xchg
or
repz
mov
cwtl
stc
xchg
fwait
cld
mov
fistpl
mov
cmpsl
mov
push
xlat
popa
inc
mov
push
jmp
lret
in
xchg
testw
jge
mov
adc
scas
inc
mov
mov
pop
mov
fxam
fisubrl
pop
dec
pop
mov
clc
andb
scas
outsb
es
jp
jp
jge
adcl
pop
or
or
ret
icebp
stos
fs
adc
push
pop
inc
aas
icebp
jb
out
inc
cli
test
push
adc
sbb
cmpsl
outsb
cld
andl
loop
push
xor
adc
out
sar
icebp
scas
cmpsb
push
add
andl
sub
rcrb
mov
xchg
pop
imull
in
push
jecxz
bnd
rcrl
movsb
sub
clc
fiaddl
pop
pop
aam
mov
movsb
mov
fimull
pop
lcall
pop
sub
sub
pop
ret
jo
pop
sbb
cltd
mov
mov
push
jb
lret
iret
sbb
lret
inc
fld1
push
pushf
inc
jp
pop
les
add
arpl
nop
cwtl
dec
xchg
add
iret
cmp
jbe
xchg
sub
mov
pop
movsl
xchg
insb
or
jl
arpl
and
mov
ret
add
adc
push
adc
and
fcoms
mov
jge
lahf
jo
jmp
rol
in
cmpb
push
jno
cmpsl
sbb
fwait
sahf
mov
in
sbb
add
xlat
stos
push
stos
adc
jle
out
fcmovnu
rcll
sbb
or
les
sbb
xchg
nop
mov
popa
mov
lea
push
mov
roll
shlb
dec
push
sar
add
jge
dec
push
inc
stc
or
inc
aad
dec
ret
mov
adc
and
daa
and
xchg
fiadds
loopne
test
adc
cli
jg
cs
jmp
cmp
cwtl
rorb
add
push
pushf
xchg
arpl
sti
and
jle
xor
addl
pcmpeqb
ja
pop
sub
push
mov
jp
lods
add
call
add
iret
pop
fdivr
jno
mov
pop
int3
ljmp
sbb
imul
xchg
adcl
bound
in
add
adc
nop
out
mov
mov
xchg
jns
add
cmpsl
pop
lea
and
lods
fstps
xor
push
mov
inc
lds
push
adc
push
add
dec
sbb
sti
mov
insb
add
sub
lods
in
std
arpl
add
push
add
dec
mov
imul
inc
ds
ret
lcall
aas
iret
ret
aam
pop
dec
inc
mov
shl
cmp
xor
fisubrl
push
add
adc
hlt
nop
inc
pop
shlb
les
xchg
mov
sub
mov
lods
in
movswl
dec
cmp
dec
cmp
rcrb
jp
push
cmpsb
pop
dec
mov
dec
jl
repz
cmp
imul
push
sbb
xchg
push
scas
xchg
bts
jle
mov
js
mov
mov
fstps
inc
push
inc
inc
mov
punpcklbw
mov
mov
dec
das
stc
adc
gs
stos
pop
icebp
hlt
fdivrl
push
pop
sub
or
nop
fdiv
or
push
xchg
sub
xor
stc
dec
in
aam
leave
push
push
inc
adc
push
hlt
push
push
adc
sub
aaa
xchg
popf
movsb
mov
push
icebp
aad
cwtl
adcl
fidivs
divl
dec
scas
mov
sarb
mov
repnz
fadds
cmc
fdivrl
dec
enter
mov
outsl
addr16
mov
inc
jg
jle
ret
faddl
and
fucomp
std
push
jmp
pusha
aaa
fimull
jmp
sbb
pusha
inc
push
xorb
mov
lcall
leave
pop
xor
data16
xchg
pop
in
jg
dec
xchg
fidivs
cmp
cmp
clc
sarb
add
push
sbb
nop
imulb
out
fisubrs
pop
out
sub
xchg
xchg
jg
inc
jmp
cmp
dec
xlat
sbb
les
ljmp
xchg
adc
fincstp
nop
mov
bound
hlt
in
loopne
mov
sbb
xchg
popf
push
xor
jb
jbe
test
mov
jl
mov
insb
and
aad
adc
movsb
into
xor
cltd
cwtl
out
mov
add
in
xchg
ss
sbb
jno
pop
in
push
xchg
dec
insl
pop
je
cld
in
decl
mov
jle
ss
mov
repnz
lods
in
xor
mulb
in
mov
dec
jne
iret
add
pop
jmp
dec
or
in
lcall
movsl
pop
cmp
rcrb
fcmovnu
dec
jmp
test
ljmp
enter
imul
pop
mov
cmp
gs
jl
add
sbb
xor
in
push
mov
pop
xor
jmp
jne
mov
or
push
xor
pop
and
dec
pop
pop
mov
daa
push
jl
dec
lcall
pop
mov
les
and
enter
sub
cli
cmp
fcmovu
sbb
and
adc
insb
sahf
mov
jo
lods
mov
pop
jb
sbb
enter
orb
pop
sbb
push
xchg
mov
test
dec
sbb
lock
push
jmp
inc
test
lods
cvttps2pi
leave
in
add
mov
and
aaa
pop
sbb
push
jl
std
dec
inc
bound
rcll
aas
xor
dec
out
repnz
sti
and
adc
cmpsb
pop
subl
xchg
cs
pop
out
lods
jbe
push
fdivs
adc
mov
ja
pop
mov
xchg
mov
and
pop
repz
mov
in
cs
popf
jmp
insl
shll
ror
in
fiaddl
xor
outsb
cmpsl
inc
add
xchg
cmpsl
fnstsw
add
es
aas
pop
ja
mov
imul
push
sub
push
push
sbb
fwait
setbe
je
mov
loop
cmp
imull
and
pusha
add
mov
xchg
fistpll
out
adc
jns
test
cld
dec
mov
jmp
popf
add
mov
mov
daa
xor
jb
shll
jmp
shl
cs
xchg
iret
adc
jbe
mov
inc
movb
enter
out
xor
sti
fldenv
inc
and
pop
xor
lds
mov
sbb
ret
inc
popf
adc
jl
pop
xchg
xchg
les
popf
push
ret
aad
push
lea
add
repz
xchg
test
xchg
movsb
lds
push
mov
xor
fdivl
xchg
mov
sub
pop
mov
cmpb
sbb
fnsave
inc
xlat
andb
sub
clc
xor
add
lods
aas
test
fcomps
push
xchg
jo
pop
fistps
mov
gs
sub
xchg
or
fistl
push
mov
scas
push
std
mov
jg,pt
mov
popa
insl
aam
sbb
and
inc
stos
jb
fisttpl
hlt
and
cld
out
xchg
pusha
xor
aad
enter
iret
jle
repz
bound
xor
cli
mov
mov
je
cld
dec
out
lods
add
jmp
enter
xchg
mov
out
jle
sbb
cmc
push
push
and
and
jne
pusha
push
out
fcomi
dec
push
xor
inc
jbe
jle
bound
js
sub
jmp
jg
out
mov
scas
inc
push
js
shlb
imul
enter
addr16
jge
xchg
popf
in
dec
add
add
jo
test
stos
pop
divl
mov
sub
xchg
stos
enter
scas
add
outsb
jns
push
in
movsl
dec
or
incb
xchg
shrl
or
pop
flds
xchg
verr
lahf
lods
adc
inc
daa
ja
pop
stos
push
scas
fwait
out
je
mov
jbe
lahf
in
test
fincstp
push
adc
mov
loope
ljmp
das
xor
mov
rorl
shl
push
sub
out
mov
sbb
aad
fdivs
pop
mov
push
cmp
aas
push
inc
lahf
add
sub
lds
add
stc
repnz
aaa
jl
and
pop
cld
out
test
jo
pop
ficoms
inc
imul
inc
xchg
sub
or
pop
jnp
lea
ss
push
sub
mov
add
pop
cmpsb
adc
cmp
stos
out
push
jge
stos
stos
fidivl
inc
push
inc
hlt
mov
pop
mov
jns
dec
and
ja
dec
test
fcoms
xchg
and
and
mov
lods
adc
daa
sub
loopne
mov
out
push
popf
push
xor
orb
lret
cmpsl
and
xchg
mov
sbb
nop
adc
cmp
leave
xchg
outsl
lods
inc
xchg
adc
xor
dec
dec
es
out
ficomps
int
and
sub
or
test
adc
scas
fisubrl
fstps
fbld
test
jl
adc
add
call
dec
xchg
jecxz
inc
xchg
out
dec
push
nop
pop
xchg
push
xor
lock
jp
loope
repnz
dec
mov
je
and
adc
jle
outsb
scas
sub
fwait
popf
ljmp
add
adc
fnstsw
and
imul
add
push
imul
cmp
inc
adc
test
jecxz
pop
pop
fadds
push
mov
jo
ds
ljmp
xchg
jmp
sar
inc
lea
in
xchg
sahf
call
push
xchg
outsl
inc
mov
icebp
fbld
ficompl
ljmp
pop
repnz
jecxz
cmp
in
js
ror
xchg
sbb
nop
and
ljmp
sarb
subps
push
jnp
jg
in
leave
push
xchg
dec
icebp
push
or
jo
sbb
jle
sub
pushf
pop
es
add
and
dec
jl
lods
xchg
sub
lcall
mov
sbb
rcrl
int
pusha
popw
pop
rcrl
sbb
stc
mov
cwtl
push
inc
cltd
fdivrl
movsl
sub
pop
fildll
in
dec
push
dec
xchg
inc
in
sub
idivb
daa
insl
sbb
adc
and
out
sar
lds
cmp
lods
insl
and
popf
xchg
jmp
movsb
mov
cmpsl
fwait
xlat
fdiv
cld
push
arpl
iret
nop
sbb
xor
cmp
cmp
addl
das
mov
sti
cmp
pop
je
das
dec
mov
lret
std
mov
mov
sbb
pop
add
pop
cld
jl
or
cmp
dec
lds
ret
dec
inc
jp
dec
and
fs
add
insb
cmp
pop
shlb
pop
cmp
jmp
cs
cmc
cmp
and
add
cmc
stos
xor
mov
in
mov
sti
aaa
or
daa
lods
push
pop
inc
add
sbb
ds
iret
jns
xor
lods
sub
xor
cmp
sbb
fdivl
cltd
test
test
cmpsb
push
jnp
fs
xchg
xlat
fisttpl
pushf
jp
mov
fucom
loope
test
xlat
jecxz
push
loope
jl
outsl
mov
jl
icebp
push
out
mov
add
push
inc
xchg
inc
das
nop
xor
lcall
and
mov
xchg
lret
aaa
push
movsb
and
mov
addr16
or
mov
jp
dec
jg
mov
dec
xor
jns
and
xchg
insb
loop
movsb
sub
repnz
adc
jb
or
repnz
xor
add
cwtl
shrb
pop
or
sbb
cli
lahf
stc
sbb
sub
mov
js
repz
std
mov
sub
enter
mov
sahf
lds
call
sub
mov
jbe
movsl
fcmove
mov
repz
bound
nop
lock
jecxz
mov
mov
jns
dec
out
popa
pop
inc
sbb
ficomps
pop
pop
jecxz
add
jge
dec
fs
push
sub
cmp
sbb
mov
jl
insl
lcall
dec
fistl
xchg
mov
jge
rclb
mov
mov
das
inc
sbb
cmp
aam
lea
js
addl
icebp
jecxz
aaa
mov
negw
push
cld
add
or
xchg
test
sub
mov
xchg
pop
cmp
sbb
mov
mov
ja
mov
addl
mov
mul
inc
inc
mov
popa
xor
lret
adc
sarl
rclb
jge
adc
sbb
or
orb
sbb
in
jle
jae
mov
or
push
imul
mov
mov
cmc
ret
incl
shll
inc
mov
xchg
es
ds
or
inc
gs
jmp
pop
push
cmc
sbb
push
insb
lret
adc
mov
xchg
lock
cmp
adc
into
movsl
fs
cmp
sbb
in
sub
jp
xchg
push
jmp
pop
mov
fmuls
pop
adc
pop
imul
ret
sub
mov
pop
jne
xor
dec
in
jmp
dec
adc
insl
inc
lods
jg
cwtl
in
lds
repz
lds
rorb
add
or
lea
xor
cltd
xchg
mov
lods
xchg
and
jns
cmp
insb
cmc
mov
icebp
popa
and
cli
xorl
inc
test
js
mov
adc
xor
jecxz
rcrb
sub
xchg
data16
stos
sub
xchg
lock
mov
mov
int
cmp
inc
pop
mov
aam
jb
pop
jne,pn
sbb
sub
scas
loope
jmp
daa
flds
iret
inc
xchg
add
ret
pop
jge
sbb
daa
lock
adcl
push
dec
push
mov
mov
add
gs
cmp
adc
daa
mov
jbe
sub
dec
and
xchg
mov
outsb
inc
lods
jbe
outsb
loop
cmp
leave
inc
lcall
mov
sub
lahf
lock
test
sbbb
lahf
cmp
jo
stos
and
rol
push
fistpll
add
jne
mov
cld
or
jne
add
ja
jmp
dec
inc
mov
adc
mov
and
inc
inc
sub
xchg
pusha
xor
pusha
xchg
jle
data16
stos
jmp
jle
hlt
nop
test
lahf
pushf
andl
stos
add
je
pop
push
movsb
sub
sahf
inc
mov
rclb
test
fadds
out
adc
es
sarb
loop
dec
add
mov
adcb
dec
imul
mov
adc
xchg
push
push
fwait
or
xlat
jle
sub
mov
fs
scas
nop
mov
sbb
lret
and
jns
gs
sbb
push
ret
ds
mov
jl
fsubl
clc
jge
mov
stc
cmp
scas
mov
push
inc
xor
sahf
mov
mov
icebp
inc
and
je
or
ds
mov
jae
xor
cwtl
mov
fcoms
outsl
sti
cmp
cs
xor
stc
mov
dec
pop
jns
add
negb
ja
int3
iret
int
movsb
fisubrl
outsb
int
mov
mov
push
sbb
ret
punpckhdq
fbld
mov
out
leave
test
adc
jo
insl
lahf
movsl
or
dec
jp
push
ss
inc
lods
fs
push
pop
push
sbb
inc
jl
mov
fwait
pop
loopne
add
ljmp
lds
jl
out
mov
cmp
cs
mov
jae
sub
out
lcall
loopne
es
xchg
rclb
add
outsl
shlb
push
jo
jecxz
mov
dec
hlt
adc
pushf
mov
xchg
imul
loopne
sub
dec
jno
jle
xor
adc
sarl
xor
sub
aad
std
es
pushw
das
pop
add
sbb
pop
add
imul
xchg
popf
data16
jmp
xchg
pop
xchg
push
or
sbb
imul
adc
pop
insl
jp
xor
adc
cmp
xchg
or
and
outsl
sti
loop
push
in
mov
lock
add
out
neg
cwtl
int
nop
pusha
scas
push
dec
popf
cmpsl
hlt
xchg
shlb
adc
adc
or
iret
popf
mov
mov
xchg
imul
loop
mov
and
adc
outsb
cmp
into
mov
inc
push
pop
push
loopne
lock
repnz
scas
loope
dec
mov
das
and
insl
imul
imul
inc
and
test
mov
andb
or
repz
in
pop
mov
jmp
jne
pop
popf
leave
mov
mov
popf
popa
clc
stos
xchg
xor
aaa
loopne
adc
xchg
xchg
push
out
dec
ret
xchg
arpl
jge
sbb
inc
cli
dec
push
push
push
mov
pop
int
inc
sub
iret
cwtl
jmp
negb
enter
ds
sbb
rcrb
sbb
enter
gs
mov
and
sub
xor
inc
repnz
lret
test
addb
add
cmp
rorb
fwait
inc
xchg
fsubrp
mov
loop
enter
test
insb
dec
ret
cmp
daa
and
daa
and
cmpsl
fsubrl
es
mov
stc
mov
aad
cmp
xchg
and
test
push
xor
outsl
pop
push
enter
repz
dec
jno
mov
stos
clc
and
and
and
cltd
fcmove
xor
or
add
loopne
adc
sbbl
jo
pop
notl
push
pop
dec
add
jns
pushf
pushf
jp
jecxz
dec
aad
add
movsb
inc
nop
xor
int
shl
inc
mov
shrl
xchg
popa
aaa
jnp
daa
aas
inc
add
inc
jno
inc
hlt
cmp
or
jbe
sbb
enter
sub
cmp
test
push
xchg
mov
cmpb
outsl
in
push
les
mov
call
mov
icebp
pop
movsb
push
fists
mov
rorl
mov
scas
sti
xchg
in
push
aam
jbe
pop
call
adc
fimuls
leave
fists
add
sub
xor
dec
jae
stc
aaa
leave
pop
mov
cmc
add
sub
xchg
inc
xchg
mov
test
sub
in
cmp
mov
lahf
rorl
gs
leave
dec
push
dec
pop
add
dec
jb
jp
sbb
icebp
sbbl
xlat
enter
hlt
or
popf
daa
cmp
mov
and
push
imul
cmp
push
aam
push
and
adc
sbb
ja
push
nop
cmp
jne
xchg
dec
push
ret
sbb
pop
je
pop
mov
xchg
adc
xchg
mov
into
addr16
iret
mov
cmp
and
ud0
xchg
sub
adc
test
hlt
aaa
mov
jno
out
lods
fmuls
cmp
cli
cmp
push
xchg
dec
mov
jae
imul
mov
sub
inc
dec
gs
imul
mov
pop
je
sbb
arpl
xchg
sub
arpl
mov
push
dec
fidivl
loopne
adc
or
fdivrl
repnz
adc
jnp
adc
notb
jmp
cld
add
cld
ret
xchg
and
insl
lds
ljmp
sub
fnstcw
xor
fsubl
xor
negl
xchg
inc
loop
ficomps
or
cmp
push
mov
jp
pop
cltd
sti
and
fwait
rol
mov
sub
not
das
gs
inc
inc
call
sbb
aad
cmp
add
sarl
add
sbb
xchg
incb
outsl
lods
add
cwtl
mov
in
addl
jnp
xchg
mov
pop
mov
mov
rcr
in
push
outsl
out
adc
xlat
test
xchg
xor
or
or
inc
cld
inc
lea
mov
mov
daa
xchg
pop
clc
mov
mov
js
xchg
insl
sub
sub
mov
shll
inc
fwait
popa
das
ds
xor
push
insb
push
add
ja
insb
sub
sbb
sti
loope
xor
outsl
push
andb
mov
cmp
stos
enter
std
clc
sbb
loope
sub
aas
jmp
ss
bound
pop
nop
fcompl
mov
fdiv
push
sbb
jle
mov
or
or
mov
mov
mov
or
mov
jle
push
mov
cmp
mov
je
je
pusha
push
cmpsl
dec
jns
cmpsl
push
nop
inc
mov
mov
and
or
xchg
or
lgs
jo
sub
or
mov
xorb
mov
or
push
add
movsb
add
bound
mov
adcb
cmp
xor
stos
aaa
sbb
cs
fwait
sub
xchg
orl
clc
add
daa
pop
pop
ret
adc
cmp
adcl
lods
jae
mov
adc
sbb
dec
fs
push
jg
lods
jp
pop
mov
inc
in
aas
adc
xor
push
xor
dec
add
lret
data16
mov
outsl
add
jae
shlb
xor
es
mov
movsl
fisttpl
stos
test
les
cwtl
lahf
xchg
xor
mov
pop
jmp
leave
pop
scas
add
add
and
clc
out
popf
out
aaa
mov
mov
insb
test
lcall
add
popf
leave
fildll
mov
lea
adc
jnp
push
xorb
fsubl
pop
lret
mov
cmpsl
xchg
shl
insb
mov
mov
add
jge
lcall
leave
pop
dec
cld
fldcw
cmp
add
mov
shll
cmpl
cmp
rcrb
xor
jmp
mov
sbb
icebp
or
xor
pushf
not
sbb
mov
fcmovu
cwtl
cmp
jbe
xchg
jl
mulb
popa
insb
pop
movsb
fisubs
cwtl
lock
jecxz
mov
dec
pop
arpl
xor
jb
push
jb
subl
mov
adc
sbb
jle
movsl
sub
push
or
cmpsb
or
xchg
bound
push
js
push
out
add
adc
inc
xchg
cli
sahf
loope
das
pop
xchg
imul
imul
push
xchg
ja
adc
nop
mov
stos
movsb
mov
andb
ja
pop
pusha
xchg
cmc
push
shlb
fadds
int3
push
ret
or
mov
pop
lods
rclb
add
lcall
inc
test
sbb
stos
adc
in
fisttpll
xor
shll
cmc
add
sub
jl
xor
adc
icebp
ljmp
inc
and
inc
push
sub
stos
or
out
imul
dec
push
outsb
shlb
rcrl
test
out
inc
imul
mov
fwait
push
adc
xor
sarb
or
aad
jg
fimull
and
or
aaa
mov
push
lds
pop
push
shl
in
sub
mov
pop
push
xor
iret
cmp
pushf
xchg
jne
insb
push
inc
inc
dec
lds
lcall
shll
loop
jo
mov
cld
mov
or
xor
les
push
ljmp
subl
pop
into
test
mov
aas
pop
jno
lods
xchg
or
lahf
adc
out
scas
push
lahf
add
xchg
mov
lret
cld
fldcw
dec
out
fldl
stos
pop
nop
adc
cmp
imul
xor
leave
dec
nopl
bound
and
xchg
sbb
xchg
shlb
fdiv
scas
lods
mov
push
scas
inc
aad
int3
xchg
pusha
das
ss
ss
lea
and
idiv
mov
xchg
xor
dec
jmp
in
jle
xchg
out
push
mov
mov
push
stos
call
scas
aaa
sub
sub
rcll
mov
mov
fwait
mov
je
mov
xor
fidivrs
subl
pop
dec
fldcw
lahf
lahf
mov
xor
daa
lea
xchg
ffree
mov
sbb
sbb
aad
ds
push
jecxz
les
insb
je
mov
or
mov
fcmovnu
and
movsl
sub
or
stos
jno
cmpsl
loop
cltd
jecxz
rcll
addr16
lcall
or
stc
push
filds
sub
mov
sahf
loop
outsb
das
push
mov
inc
mov
scas
lock
nop
rcl
jg
sub
insb
inc
xchg
xchg
imul
mov
xor
insl
adc
je
iret
or
cmp
ljmp
and
xchg
aas
mov
pop
loopne
cmp
cs
sbb
das
sbb
pop
push
test
clc
mov
idiv
adc
sbb
mov
dec
stos
and
mov
fdivrs
ja
mov
jg
pop
stos
movsl
inc
and
orl
icebp
xchg
sbb
inc
dec
or
dec
mov
fcom
leave
jae
xchg
in
test
pusha
js
lret
cmc
xchg
sbb
mov
inc
xor
scas
sbb
adc
ficoms
add
pop
xchg
adcb
push
arpl
je
ficoms
les
int
bound
js
adc
mov
cmpl
cmp
fwait
rclb
sbb
js
pop
std
int
andl
fwait
xchg
mov
xor
jl
movsl
push
in
cmc
dec
mov
jecxz
mov
cmc
je
adc
std
xorl
int
add
adc
xchg
sbb
shlb
lock
xor
jae
and
cmpsb
push
adc
fdivr
cmpsb
aad
jno
mov
dec
outsl
lea
ja
rcl
clc
les
ja
mov
mov
not
push
and
aas
inc
ds
xor
dec
and
cltd
dec
jecxz
add
jl
lcall
nop
pop
xchg
mov
mov
push
fiadds
sti
aam
out
rorl
test
es
mov
mulb
mov
dec
cmpb
mov
jp
test
outsl
aam
jns
sbb
movsl
movsb
test
lods
xor
mov
mov
sub
mov
stos
negl
dec
sahf
insl
sbb
mov
adc
cmp
cld
or
push
pop
xchg
push
inc
sub
cmp
sbb
push
lods
arpl
xchg
push
jmp
and
jmp
xchg
jl
or
xchg
std
test
pusha
dec
lods
test
xchg
mov
mov
sbb
or
daa
xchg
adc
loope
inc
and
push
and
inc
xor
aas
xchg
push
pop
sbb
jno
cwtl
lods
rorl
call
cmp
test
ret
aaa
and
in
ret
popa
fidivs
das
mov
mov
flds
sti
hlt
aad
xchg
add
sbb
outsb
shlb
sbb
cmp
repnz
ret
inc
aam
push
call
aaa
inc
and
add
mov
out
scas
lcall
popf
mov
adc
sbb
out
in
adc
cld
cmpsl
cs
fdivrl
jg
lahf
add
push
sahf
xchg
adc
out
adc
aaa
add
mov
cmp
xchg
mov
mov
inc
out
and
and
movsbl
dec
cmp
sbb
cmpsb
add
dec
out
push
adc
into
xchg
dec
ss
inc
shlb
inc
jbe
jp
mov
outsl
jnp
js
sti
dec
in
iret
xor
movsl
xchg
mov
mov
mov
out
imul
popf
mov
sbb
dec
cmp
in
adc
sub
push
xchg
add
pop
cs
inc
jle
icebp
and
cmc
fdivs
dec
mov
cmc
xlat
stos
hlt
dec
shrb
pop
pop
sti
add
lods
call
test
lods
inc
repz
icebp
nop
cmc
cwtl
test
xchg
shrl
lds
test
adc
push
jecxz
lods
pushf
aas
cmp
xchg
ljmp
xor
jb
push
andl
mov
outsb
incl
mov
jmp
sub
aas
mov
in
and
cmpb
adc
xchg
pop
or
and
adc
cmp
gs
out
xacquire
push
popf
test
call
aas
es
xchg
sahf
clc
pop
repnz
aaa
cld
pop
outsl
dec
mov
mov
mov
outsb
jbe
mov
es
into
mov
mov
into
push
shlb
xchg
loopne
mov
scas
jo
fmull
fsubr
fbstp
leave
inc
montmul
cmpsb
push
dec
aas
push
mov
jecxz
mov
adc
daa
or
subb
mov
mov
sbb
mov
insb
in
add
push
cmp
bound
mov
sub
and
mov
jno
mov
mov
push
clc
daa
dec
xor
fnstcw
bnd
sub
lretw
incl
shrl
rcll
lahf
xchg
test
adc
adc
into
xchg
lods
int3
sub
jmp
inc
dec
std
test
push
and
pop
jmp
push
dec
out
push
mov
bound
pop
cmp
stc
movsb
jno
xchg
xor
cmp
andl
lods
std
inc
jne
int3
lock
jge
data16
sbb
adc
jmp
cs
iret
inc
mov
jae
and
or
pop
xor
adc
add
pop
inc
clc
dec
or
jge
sbb
mov
sub
xchg
movsb
fstl
mov
xchg
jnp
adc
jp
test
mov
cs
sti
mov
lret
xchg
subl
sub
xchg
sbb
adc
cmp
mov
pop
cmpsb
sbbl
push
or
int3
es
stos
test
fisttpl
lods
ja
mov
ja
mov
sbb
mov
enter
jno
movsb
cmc
and
stos
loopne
and
pop
dec
cmpsb
push
mov
mov
inc
mov
and
addr16
xor
or
pushf
or
mov
cmp
or
or
sub
addr16
scas
inc
imul
out
loope
fisubrs
mov
movhps
test
int3
xchg
pushf
inc
cmpl
sub
out
shlb
inc
mov
mov
fdivs
scas
mov
xchg
insb
iret
mov
jno
or
and
adc
lret
in
repz
cmp
shlb
imulb
jae
push
mov
pop
fwait
negb
out
insb
aad
jmp
mov
enter
jb
daa
ss
xor
and
scas
fs
sbb
mov
pop
cmp
xchg
xchg
pop
mov
mov
push
and
cmc
nop
and
xchg
adc
outsb
movsl
adc
popa
sub
in
inc
popf
into
sarb
jmp
xchg
jo
les
jo
in
stos
sbb
mov
arpl
out
adc
fdivrp
movsb
mov
sarl
imul
scas
mov
lds
adc
mov
mov
xchg
fwait
xor
xor
inc
icebp
addr16
add
xor
cwtl
daa
cmp
add
shll
mov
inc
xor
mov
jge
ret
repnz
in
sub
jno
lods
sbb
mov
or
mov
or
mov
push
push
push
in
cwtl
add
jp
inc
popa
inc
dec
jg
mov
inc
inc
jle
aaa
mov
push
movsb
aam
adc
cmp
cmp
dec
xchg
jns
sbb
push
xchg
popa
pushf
adc
sub
cmpsb
push
sub
test
rclb
mov
ret
sahf
fwait
out
jle
fnstsw
pop
jo
fstpt
fidivs
dec
xor
mov
orl
inc
pop
stos
shlb
adc
inc
mov
pop
dec
and
pop
cmp
rolb
jg
mov
popa
jmp
orb
lods
jne
out
cmpsb
xchg
lods
mov
mov
cwtl
cwtl
and
jb
inc
pop
stos
fiadds
pop
xchg
sub
dec
push
xchg
scas
push
ja
je
jo
mov
repz
and
xchg
xor
repnz
aas
aad
movsl
xor
xor
ja
xchg
jp
mov
scas
xchg
ss
push
push
fsubrs
bound
stos
test
and
leave
movsb
icebp
mov
in
test
fdivl
mov
mov
cmp
mov
call
dec
xor
test
outsb
mov
and
push
rol
das
xor
rcrb
popa
pop
out
and
rcrb
enter
lret
int3
sbb
and
mov
popf
leave
push
jnp
enter
cwtl
or
push
dec
shll
bound
imul
movsb
push
lret
push
jmp
les
enter
mov
jl
inc
inc
cmp
sub
xchg
jno
ja
mov
add
add
in
loope
mov
test
inc
inc
lret
xorb
mov
in
nop
pop
fdivl
jae
dec
stos
int3
push
xchg
cmp
xor
sti
pop
arpl
clc
test
fstpt
les
xchg
xor
fcomi
sub
sub
add
enter
repz
leave
lahf
shll
dec
jo
adc
pop
jno
push
cmc
test
and
mov
mov
push
xor
in
int3
sti
dec
add
xchg
mov
daa
jne
sub
dec
mov
push
mov
pop
push
ret
jne
adc
adc
leave
stos
imull
jl
arpl
sbb
dec
or
push
loop
xor
ret
push
shl
pop
hlt
gs
movsb
repnz
mov
jp
push
fcomps
xchg
push
push
loopne
ss
iret
adc
or
data16
movsl
pop
xor
jns
push
cmpb
mov
or
rorl
mov
in
cwtl
xor
mov
cmpsl
in
add
les
cmc
rolb
mov
push
push
cmp
xchg
and
adc
sub
roll
fiaddl
xor
lods
or
int
mov
xor
adc
movsl
jbe
ja
xor
jl
clc
ss
push
push
loop
in
xchg
pop
dec
mov
in
sbb
jl
std
lahf
cmp
pusha
fisubrl
sbb
or
les
rorl
call
bound
xor
and
mov
or
fldl
dec
cmpsl
scas
push
sub
xlat
jnp
cwtl
and
je
pop
push
push
xchg
arpl
or
sbb
call
mov
inc
mov
mov
jne
add
push
subl
in
mov
mov
push
test
xchg
pop
sbb
sbb
loope
cmpsl
cmpsb
outsl
shrb
cmpsb
push
xorl
sarb
in
inc
bound
push
je
popa
int
pop
js
pop
pop
adc
or
adc
jae
pushf
dec
ret
nop
dec
pop
test
call
adc
cmpsl
out
sbb
mov
repz
dec
cltd
xchg
ficoml
cld
maxps
push
xor
xchg
in
cs
mov
xlat
mov
int
lods
xchg
xor
mov
fwait
sti
aad
mov
out
jns
inc
ret
mov
orl
or
mov
ret
xchg
lret
sub
js
inc
add
dec
mov
add
add
dec
sub
sub
inc
popf
xor
dec
xchg
stos
or
es
push
or
mov
or
std
sbb
or
inc
mov
sbb
push
inc
adcl
dec
xor
je
mov
mov
cmp
push
mov
pusha
pop
or
cmp
and
sti
push
mov
push
inc
nop
loopne
jbe
xchg
shr
adc
jnp
icebp
jmp
fsubrl
sarb
cld
test
ret
jge
mov
inc
inc
rcrb
sbb
jp
jo
loope
inc
fdivl
sub
mov
or
ret
push
push
add
xlat
and
and
ret
pop
mov
jns
test
inc
decb
insb
xchg
lcall
aaa
test
or
lods
inc
dec
mov
sbbb
fdivs
in
mov
gs
or
and
cltd
daa
scas
out
rorl
mov
push
jp
or
cmpsb
dec
ljmp
iret
imul
push
jns
and
xchg
std
push
std
jmp
cmpsb
xchg
or
loopne
mov
push
mov
add
jmp
cmpsl
aaa
fdivrl
adc
xlat
jae
in
popa
xor
pushf
test
mov
sbb
shrb
cmp
sub
test
movsb
sbb
scas
or
mov
mov
les
cmp
adc
and
xor
or
sbb
call
flds
dec
push
jmp
lcall
fxch
js
xchg
popf
sub
ret
fdivrs
stos
outsl
icebp
das
adc
das
es
cmp
shrb
jno
cmp
mov
std
call
jle
in
cltd
lds
sbb
fistpll
cmc
jb
push
enter
mov
imul
dec
xor
inc
sub
mov
psubusw
dec
ss
jecxz
sbb
pusha
pop
ds
pop
add
aam
das
mov
rcll
mov
xchg
pop
sahf
int3
scas
and
pop
add
push
jp
pop
cmc
in
add
push
jb
ds
jmp
dec
js
adcl
outsb
std
cmp
and
mov
pop
jns
and
call
mov
sub
repnz
nop
xchg
es
mov
gs
scas
cs
jae
inc
or
sub
loope
ljmp
insl
pop
mov
loop
faddl
xor
ret
stos
mov
push
jl
cltd
in
lcall
push
test
stos
jg
stos
notl
push
push
aaa
push
adc
adc
push
inc
enter
rcrl
pop
repz
bound
addr16
addb
mov
xchg
sub
push
mov
test
sahf
pop
dec
rorb
loopne
stos
and
pop
xor
imulb
clc
ds
xchg
pop
inc
test
pop
fidivrs
add
pop
ret
arpl
bound
push
add
decb
dec
orl
mov
cmp
mov
add
int
cmpsl
sbb
fcomps
repz
lret
je
add
pop
and
mov
sbb
into
test
sub
lods
add
sub
pop
cmp
mov
mov
out
mov
jne
incb
mov
pop
push
imul
xor
cli
shlb
sbb
xchg
lea
pop
adcb
add
xchg
jno
lods
daa
push
rcrb
loopne
out
scas
push
negl
shlb
aas
ret
jp
iret
or
jmp
push
mov
sbb
shll
cmp
inc
mov
ds
flds
rorl
inc
push
mov
mov
adc
scas
cltd
and
and
mov
int3
inc
or
int3
xchg
mov
lock
rcll
inc
mov
aas
xchg
jo
nop
fidivrs
pop
jno
cli
jo
jnp
mov
dec
push
mov
mov
cmpsl
jmp
push
into
jb
mov
jl
xchg
inc
ljmp
xchg
test
pop
cmpsb
mov
into
in
inc
lock
jp
cmpsb
es
adc
fcoml
add
xchg
jmp
sbb
push
pop
into
and
xchg
xor
mov
sbb
adc
fcoml
in
inc
add
push
mov
push
cli
repnz
iret
stos
xor
push
mov
push
jg
push
ljmp
ljmp
mov
cmp
ja
repz
mov
stos
add
xor
lahf
jg
outsl
in
dec
pop
leave
lret
jp
popa
pavgw
pop
pop
bound
outsb
lods
loopne
fistps
pop
mov
add
fists
sub
xor
and
les
cs
inc
adc
call
pop
jb
dec
jg
push
fistl
xchg
xorl
gs
aam
loope
xlat
or
cmpsl
push
add
xor
int
xor
dec
sbb
mov
mov
in
lahf
dec
dec
lds
push
pop
fwait
lods
mov
aaa
cld
fists
iret
pop
clc
daa
dec
inc
add
repnz
mov
mov
push
lcall
stos
xchg
into
pop
or
push
sbb
mov
cmp
jmp
pop
sub
pop
lea
xchg
sti
jge
call
xchg
jp
jnp
cwtl
mov
fs
xor
gs
das
mov
sbb
into
out
xchg
xchg
loope
test
rorl
loopne
popf
std
cltd
pop
push
je
mov
jp
adcb
xchg
pop
and
mov
stos
jne
pop
jno
sbb
cmc
mov
aaa
dec
in
jp
jp
pushf
shrl
es
sbb
mov
mov
cmp
cmovo
or
mov
mov
test
fldpi
test
xor
mov
repz
inc
push
or
xchg
stos
les
call
adc
test
mov
jp
ds
test
add
outsb
pop
sbb
xor
fsubs
daa
lahf
pop
in
jge
test
pop
mov
sbb
or
ret
adc
xorl
popa
dec
xchg
mov
adc
sub
setbe
or
push
bound
jae
xchg
push
nop
push
in
jns
lds
xor
ljmp
cmp
enter
lret
shlb
test
sub
xchg
movsb
cld
dec
dec
sub
mov
int3
push
outsb
or
stc
add
icebp
outsb
xchg
sbb
xor
sbb
pop
push
mov
imul
jge
xchg
adc
push
mov
std
cmp
jo
dec
lret
add
movsb
popa
pop
mov
cmovg
or
push
pushl
sub
sbb
les
dec
mov
mov
sbb
jl
decl
andl
xor
adc
inc
popf
ljmp
stos
testl
mov
xchg
jnp
push
or
popf
aam
sbb
inc
lret
and
es
mov
andl
dec
dec
xor
sub
mov
push
int
fmuls
dec
pusha
lods
mov
mov
mov
enter
fwait
lea
repnz
rclb
enter
adc
cltd
push
leave
nop
scas
mov
fadd
scas
gs
mov
stos
in
or
pop
jns
xchg
ljmp
mov
or
and
and
pop
push
lret
mov
dec
scas
in
dec
jns
icebp
jo
dec
les
mov
fs
cmpb
mov
mov
mov
push
jg
ret
dec
repz
mov
lret
push
fidivs
outsl
adc
dec
addr16
adc
ljmp
inc
sbb
std
xlat
lahf
pop
mov
xor
adc
sub
push
aaa
scas
cmp
ljmp
dec
bound
lret
daa
mov
sub
xor
gs
inc
outsl
lahf
cwtl
or
fucomi
dec
daa
mov
or
add
roll
add
sub
movl
mov
es
mull
ret
xor
fsub
jno
scas
adc
xor
mov
jne
mov
lds
mov
mov
adc
leave
loope,pt
mov
mov
push
jbe
push
and
mov
jp
xchg
xlat
mov
cld
add
xchg
popa
mov
xor
mov
ret
out
xor
jle
div
ret
lea
cmp
add
mov
adc
xor
insb
push
mov
idivb
stos
jecxz
mov
pop
fs
inc
adc
mov
adc
and
es
cvtps2pd
or
cmp
movsb
mov
int
add
rorl
add
dec
testl
dec
es
xchg
dec
mov
imul
aaa
xchg
push
mov
mov
movsl
mov
icebp
ret
sub
adc
xor
xor
pop
mov
xchg
cmp
cwtl
pop
and
dec
add
jae
sbb
mov
fdivrs
sti
aad
sbb
in
pop
xchg
pop
das
push
add
xchg
lock
loopne
mov
inc
and
xor
das
test
enter
dec
adc
lret
movsl
cvtps2pd
dec
or
jne
rol
dec
xchg
jbe
cmp
xlat
cmpb
ljmp
xchg
cmpsb
mov
mov
inc
movsl
imul
inc
cmp
shr
std
push
dec
xor
ljmp
mov
mov
push
icebp
jno
ficomps
pop
fmull
push
jge
push
sbb
ret
push
push
jae
mov
cltd
mov
ss
into
mov
icebp
mov
push
std
adc
fwait
outsl
jae
data16
cs
cmp
dec
cmp
fistps
cltd
hlt
and
jns
inc
adc
jno
pop
sbb
mov
jnp
pop
into
xchg
lock
rclb
jae
lret
xor
inc
sbb
xchg
js
insl
loop
sbb
in
or
ljmp
xor
pop
sbb
sub
mov
inc
movsb
xor
push
push
or
nopl
leave
aas
add
lods
es
cmp
and
cmp
sti
push
mov
inc
xlat
sti
mov
pop
dec
shl
stos
adc
add
cltd
sbb
dec
pop
inc
iret
xor
aad
xchg
mov
cmpsl
inc
mov
jae
inc
mov
outsl
mov
dec
sbb
pop
rol
loope
pop
adc
cmpsl
lds
negl
mov
insl
and
push
movsl
ret
pop
xorl
or
repz
scas
inc
push
xchg
cmpsb
stos
std
xchg
je
fsubs
and
dec
lock
jbe
xor
fistpl
mov
inc
cmp
push
je
cmp
sub
pop
lret
pop
xor
call
hlt
hlt
cmp
xadd
xor
cmp
lods
loope
or
and
mov
and
xlat
jge
movsl
and
decb
testb
cmp
adc
dec
adc
mov
aam
pop
add
popa
jne
mov
jbe
movl
lods
imul
adc
dec
add
mov
cltd
ljmp
pop
push
cmc
aam
or
add
mov
aas
fstpl
std
mov
stc
adc
fiadds
popf
jge
mov
fmul
and
insl
mov
fsubs
mov
fisttpl
jge
aaa
sub
mov
mov
pop
ja,pt
lcall
cmp
orb
cmp
insb
sub
movsl
test
stc
inc
dec
or
and
mov
xor
jmp
add
mov
xchg
rolb
iret
jae
jp
aad
test
lahf
xchg
daa
dec
pop
sarb
mov
daa
clc
pop
enter
les
inc
sahf
aad
add
inc
ds
xchg
test
loopne
adc
sbb
mov
pop
mov
xchg
mov
orb
mov
jo
add
in
push
and
bound
lahf
dec
cwtl
rcrb
les
cmp
popf
hlt
shll
jp
je
or
stc
cld
xlat
mov
mov
enter
push
add
jne
add
lahf
push
sbb
cmpl
pop
push
movsb
xchg
jns
jno
cltd
mov
dec
popa
filds
mov
push
ret
add
pop
lcall
fidivs
jmp
faddl
idivl
popf
sbb
xor
pop
int
std
dec
push
daa
dec
xchg
jmp
xor
jl
sbb
push
jg
push
cltd
inc
shlb
cmpsl
repnz
mov
in
sub
outsl
sbb
pop
push
ret
loop
lcall
and
shlb
push
shlb
mov
cmp
cmp
test
push
dec
psubsb
jno
icebp
and
mov
out
fdivs
imul
scas
dec
cmp
mov
pop
mov
mov
xchg
or
jb
stos
xchg
data16
or
mov
mov
fsubp
mov
lcall
pusha
stc
push
dec
inc
xchg
mov
aam
dec
out
js
mov
inc
orl
aam
out
sahf
mov
or
mov
test
or
addr16
mov
xchg
add
adc
mov
out
xlat
adc
adc
jo
xchg
mov
mov
insb
pop
pop
push
sbb
jl
sub
popa
mov
lds
pusha
jne
movsl
and
pop
jmp
push
clc
ja
dec
mov
nop
ret
sub
stc
int3
popf
mov
aad
arpl
cmpsl
gs
push
fnstsw
xor
cmp
or
or
xor
addl
mov
dec
jae
pop
cmp
mov
imul
pop
loopne
mov
add
push
mov
pop
movsl
push
mov
test
aas
xor
inc
in
lret
push
xchg
lcall
xor
lock
lock
jecxz
leave
aas
push
rclb
insb
decl
mov
jo
sbb
rolb
jmp
movsb
dec
sub
push
out
mov
push
pop
xor
and
sbbl
sarb
xor
xchg
cmpsl
inc
push
mov
jl
outsb
cmp
jge
shlb
mov
mov
sbb
pop
daa
push
dec
mov
add
mov
ret
xor
fs
in
push
adc
cmp
and
outsl
add
mov
add
test
mov
test
xor
popa
out
and
mov
rorl
push
or
push
push
sub
negl
inc
mov
push
negb
js
fstp
pop
enter
sahf
jp
mov
xlat
loopne
ficomps
out
mov
pop
jmp
xchg
dec
push
push
add
shlb
pop
add
gs
and
cltd
mov
and
les
inc
neg
mov
cmpsl
lea
mov
scas
xchg
sub
inc
mov
xor
outsl
inc
add
pop
fwait
and
jp
daa
lea
daa
xor
rcrb
imul
lret
int
ljmp
cld
or
cmp
pop
dec
mov
pop
lods
scas
jecxz
scas
xor
inc
mov
sbb
in
push
and
add
fldcw
sbb
loop
fisttpl
sbb
dec
cmp
sub
movsb
pop
inc
or
mov
jmp
push
cwtl
and
xor
lcall
jge
cmp
out
push
xor
clc
mov
out
cwtl
push
faddp
mov
inc
mov
aam
int3
mov
rolb
sahf
push
mov
clc
aaa
jl
push
jmp
les
nop
or
testb
adc
push
ds
lds
call
xchg
fistpll
repnz
or
sbb
roll
and
shlb
xor
pop
add
push
xchg
pop
lds
leave
add
scas
xor
repz
aaa
movsb
rclb
cld
aam
pushf
nop
mov
imul
push
stc
dec
popa
cwtd
pop
inc
into
jle
mov
adc
aad
jnp
ja
cmpsb
push
sbbl
add
adc
cmp
pop
int3
dec
cmpsl
push
xchg
lahf
sub
push
pop
sbb
outsb
xor
cltd
lret
lcall
cli
hlt
xchg
insb
sbb
jo
inc
fsincos
mov
xchg
xor
pop
out
xor
in
or
push
lods
icebp
repnz
test
push
add
mov
push
cli
inc
sub
push
cs
imul
cmp
xor
cmpsb
jmp
icebp
add
pop
xchg
imul
int
add
adc
cli
mov
inc
es
cmpsl
mov
mov
xchg
jo
lods
outsl
cmp
insb
icebp
lea
call
ds
hlt
push
pop
mov
and
test
out
inc
aad
cmp
hlt
mov
aam
imul
adc
lods
jne
push
xor
sub
jns
pop
dec
push
mov
cltd
xchg
sub
notb
cmp
adc
sub
clc
mov
addr16
jle
subb
push
or
mov
xchg
dec
mov
pop
push
adc
push
je
ss
jo
inc
xlat
aas
mov
dec
scas
movsb
ja
loop
jl
fsubl
xchg
pop
test
mov
sbb
fcmovbe
clc
or
lods
insb
ss
imul
int3
leave
std
hlt
sub
add
data16
or
outsl
adc
jb
ficoml
push
aaa
aas
mov
es
pop
mov
roll
dec
arpl
imul
sbb
mov
dec
xchg
pop
orl
cltd
ljmp
dec
cmp
push
cmc
xchg
mov
shll
adc
rorb
pop
in
jecxz
xor
inc
jnp
scas
loope
jecxz
jp
movb
pushf
xchg
nop
into
in
add
sbbl
inc
sti
shrb
xor
aad
lods
aaa
jecxz
sahf
pop
sbb
and
sbb
fdivs
rcr
xchg
jecxz
and
dec
mov
adc
sub
lret
jb
push
loopne
pop
xorb
mov
mov
jb
jecxz
sub
aaa
xchg
dec
out
xchg
in
push
xor
icebp
rol
fcoml
cmp
push
bnd
out
xchg
sbb
mov
ja
mov
fld
out
xor
dec
mov
imul
inc
mov
pushf
sub
movsb
inc
mov
sbb
or
pop
lods
ss
test
scas
ljmp
xor
inc
add
pop
push
leave
push
pop
xor
lret
in
stc
out
in
lcall
arpl
xor
add
jp
ror
mov
and
or
aaa
inc
cmp
movsl
mov
test
fcmovb
mov
push
imul
mov
outsl
fcompl
mov
mov
rol
mov
lds
xor
popf
jmp
or
mov
sub
test
mov
dec
xchg
push
mov
icebp
adc
aad
cli
sub
rorb
sbb
push
cmp
jmp
sub
push
sub
and
data16
lds
mov
aad
cwtl
jne
xchg
daa
mov
aaa
lds
mov
jbe
or
leave
scas
xchg
push
inc
push
push
jg
adc
cmp
cmp
je
in
pop
mov
sbb
inc
sub
cmp
popf
sbb
xor
popf
sbb
dec
and
sub
xor
je
lods
add
xlat
xchg
cld
lods
jno
out
test
mov
inc
insb
inc
push
sub
stos
mov
pusha
cs
sbb
inc
xchg
jecxz
ja
push
sbb
jb
pop
mov
loopne,pt
jl
xor
out
mov
sub
inc
add
mov
icebp
dec
dec
push
in
iret
push
fwait
mov
pop
shrl
inc
test
test
dec
xchg
or
mov
mov
cli
jne
sub
inc
jl
adc
int3
jb
mov
inc
test
mov
imul
sub
sub
sbb
std
xchg
push
pushf
add
and
sbbl
add
push
mov
add
push
in
std
repnz
sub
sub
or
nop
pusha
cmp
fs
lock
mov
or
push
jg
or
adc
sbb
test
in
pushf
loop
movsb
icebp
lock
xchg
mul
int
fnstsw
jb
inc
pop
mov
sub
dec
xor
jnp
popa
cli
mov
lods
je
jns
in
aas
icebp
lods
lcall
clc
lret
mov
mov
jne
and
int3
rolb
fldcw
jnp
sahf
divb
adc
gs
out
mov
mov
out
js
fisttps
rcrl
and
mov
jg
in
andb
sub
xor
gs
ret
arpl
mov
xchg
out
mov
outsb
movsl
fildll
add
mov
inc
je
mov
sub
mov
les
outsl
adc
aad
sahf
dec
jp
jmp
pop
sbb
inc
int
mov
inc
mov
fsubs
jecxz
mov
pop
or
xor
xorl
and
xchg
data16
addr16
pop
pop
iret
mov
pop
lahf
xchg
outsb
dec
inc
adc
popa
sti
out
lea
mov
jo
clc
scas
negb
ror
das
mov
lock
imul
dec
mov
das
xchg
inc
and
fiadds
test
js
dec
inc
mov
sbb
mov
jg
loopne
adc
add
push
in
cli
int3
lods
leave
push
mov
std
stos
or
mov
pop
mov
pusha
arpl
int3
cli
in
push
cwtl
repnz
adc
adc
ss
push
sar
ret
jno
rolb
sbb
cmp
inc
mov
adc
js
decl
aaa
mov
mov
cmp
sub
and
fnsave
adc
push
call
fisubrs
and
je
in
add
mov
jne
incl
mov
enter
or
ret
or
fxch
mov
push
cmp
dec
lods
mov
shl
push
sub
nop
jmp
addb
cmp
cltd
fidivs
or
cmp
leave
adc
rorb
inc
add
aam
popf
aaa
sub
icebp
adc
fwait
scas
jmp
and
pop
cmp
test
mov
sbb
sbb
pop
jmp
fisubrl
jb
dec
or
sbb
dec
shll
fnstsw
pop
jno
in
mov
stos
btr
push
loop
inc
clc
lock
lcall
jno
mov
sahf
aad
outsl
mov
mov
test
lods
mov
lret
out
loope
lret
fs
mov
loope
add
ljmp
imul
dec
adc
cltd
mov
pop
mov
int
dec
jmp
les
rorl
test
pop
cmp
mov
sbb
or
mov
or
shr
or
mov
shr
popa
xor
test
in
jae
fsubs
cli
imul
scas
scas
aad
lods
fsub
jge
ja
nop
loope
push
daa
test
std
repz
mov
mov
sub
out
movsb
lahf
lea
and
and
in
push
int3
test
jecxz
jle
dec
scas
imul
iret
mov
push
jne
push
mov
jnp
dec
dec
pop
mov
imul
dec
dec
arpl
dec
dec
jp
ss
add
cmc
lret
sub
lahf
jno
jl
adc
cmp
rol
call
movsb
test
or
fisttpll
shlb
sbb
pop
mov
push
stos
xor
or
aas
ret
adc
pop
dec
shlb
iret
inc
ficompl
push
ja
enter
push
or
pop
pushw
jmp
repnz
inc
ss
mov
pop
xchg
icebp
sbb
orl
loopne
sbb
repnz
sbb
mov
gs
push
stos
jae
jl
sbb
lahf
jp
pusha
jo
lahf
add
movsb
mov
adc
aas
mov
pop
add
adc
cmp
bound
pop
testl
testl
mov
xchg
shrb
mov
popf
cmp
pusha
xor
and
fldenv
fstps
mov
insb
push
xchg
cmp
inc
mov
or
bound
pop
mov
pop
iret
mov
clc
jle
sbb
jo
dec
dec
push
sbb
dec
fcompl
inc
mov
adc
ja
outsb
pusha
rol
orl
rcrb
dec
lret
aam
mov
dec
or
repnz
jmp
test
bound
mov
cwtl
lret
std
mov
ljmp
pop
push
in
inc
xor
ds
je
mov
ret
mov
jle
mov
inc
lods
arpl
outsb
jb
lea
fldcw
loope
sub
dec
sti
xor
in
sbb
xor
push
xchg
mov
dec
or
pusha
jnp
test
fldcw
inc
ret
sub
push
shlb
fnstenv
mov
and
dec
insl
xlat
in
mov
enter
mov
bnd
xor
push
push
add
lds
loop
sbb
inc
fnstsw
mov
sub
lods
pushf
add
stos
and
arpl
mov
clc
stc
daa
int
outsb
fnstenv
std
xor
sbb
fimull
add
add
mov
sti
inc
fists
fdivr
data16
loope
mov
cs
pop
aas
xchg
add
std
ja
push
in
test
dec
call
das
jge
pop
lcall
mov
in
add
stc
cmp
sbb
mov
or
jno
shrl
jp
iret
xor
push
jbe
shlb
lcall
loopne
jle
mov
pop
leave
into
imul
xor
jns
ret
jb
movsb
mov
dec
jns
inc
xor
xlat
mov
dec
inc
mov
imul
into
scas
add
loop
ja
xchg
mov
pop
push
pop
add
mov
ret
call
and
inc
dec
xchg
std
fisttpl
rcll
sbb
sub
jne
fwait
jnp
adc
aaa
cmpl
and
mov
lahf
mov
and
std
and
mov
rcll
and
and
pop
and
jno
mov
jo
add
fs
iret
and
dec
jl
inc
ud1
lret
rcrl
mov
xor
cmp
mov
cmp
lret
dec
out
and
repnz
jl
mov
lock
and
mov
or
repnz
loope
and
jl
add
scas
jo
dec
inc
shrl
das
mov
cmpsb
mov
push
jle
push
ret
add
cmp
in
cmp
dec
lea
cltd
and
push
sbb
add
jge
into
push
andl
ljmp
cmp
xchg
jl
fists
xor
xorl
lods
pop
cmpsl
idiv
and
xor
sub
xor
outsb
cmpsl
add
fidivs
adc
cmpb
ljmp
pusha
repz
daa
daa
in
ret
xor
lock
data16
mov
fildll
add
in
leave
jle
clc
mov
lds
or
addr16
jb
stos
daa
out
xchg
mov
sahf
sub
xlat
out
and
adc
cmp
repz
pop
lret
pushf
clc
jb
jecxz
in
xchg
dec
push
dec
outsl
add
fs
mov
pushf
mov
jecxz
scas
lock
jb
add
inc
lret
and
dec
es
mov
sub
jo
mov
pop
cmp
sti
jne
jmp
sub
lock
jp
pusha
push
push
in
inc
mov
ret
mov
iret
out
pop
mov
je
test
cltd
mov
frstor
outsl
xor
icebp
inc
mov
sbb
jg
icebp
inc
cli
adc
fcoml
loope
loopne
movsl
push
fbld
mov
inc
out
fcmovnbe
aam
pusha
add
call
out
sbb
push
ffree
mov
into
cmpsb
mov
call
std
leave
xchg
pop
out
cmpl
lcall
xlat
mov
lahf
or
loope
xchg
scas
add
jnp
orb
stc
bound
addr16
xchg
sub
repnz
aaa
hlt
cltd
pop
js
cmpsb
sub
fidivs
stos
dec
jmp
push
jle
xchg
sbb
jle
jae
fwait
sbb
cmp
sahf
rorl
push
pop
mov
test
pushf
orl
call
nop
or
add
aaa
and
xor
push
mov
lods
jno
cltd
mov
pop
add
pop
dec
xchg
sarb
int3
jp
and
jne
bound
xor
push
adc
sbb
imul
or
dec
adc
lcall
xor
bound
aaa
and
jle
adc
lret
jns
popa
daa
mov
test
mov
push
jl
loop
fwait
dec
leave
arpl
lahf
fnclex
xchg
inc
sub
lods
aaa
fwait
rorb
popa
rorb
fnstsw
cmp
aam
or
add
in
mov
cwtl
call
out
xchg
xor
lcall
dec
jns
sti
leave
sub
adc
push
sbb
mov
lods
jmp
inc
cwtl
imul
sub
shrb
dec
loopne
and
imul
push
ficoms
xchg
negb
inc
dec
imul
scas
shlb
insb
inc
outsl
data16
mov
cmpsb
push
mov
cmp
mov
xor
lea
sarb
imul
xchg
xor
mov
push
mov
mov
insb
insl
pop
mov
stos
jo
lods
mov
cmpsb
dec
xchg
and
hlt
jmp
adc
icebp
cmp
scas
cmc
or
fadds
mov
shrb
jl
xchg
scas
inc
and
loopne
or
push
sub
lea
push
and
outsb
xchg
aaa
ss
jnp
test
or
lcall
lods
int
ret
jo
fs
pop
shrb
clc
jbe
dec
aas
push
std
nop
jp
out
jmp
adc
inc
xorl
popa
hlt
ficomps
pop
sub
pusha
mov
and
mov
xor
out
sbb
in
add
cmp
iret
mov
xchg
xchg
and
movsb
hlt
daa
aas
jae
out
jno
js
popa
outsl
push
or
mov
mov
jbe
jp
mov
iret
xchg
adc
cmpsb
mov
bound
dec
out
dec
sbb
frstor
pop
jge
xor
fwait
outsb
imul
int
push
pop
jo
sbb
sbb
jb
loopne
sti
sub
dec
dec
pop
xchg
stos
insb
cmc
add
and
cmp
mov
enter
mov
xchg
mov
jae
mov
xor
pop
stos
in
mov
fldenv
xor
clc
xorb
cmp
lods
inc
fs
lahf
stos
insl
lahf
pop
sub
mov
push
push
jbe
adcl
lods
xchg
inc
out
cmp
xchg
mov
clc
repz
inc
mov
adc
adc
dec
pop
cwtl
jecxz
push
push
add
mulb
movsb
jns
mov
sub
popa
inc
mov
sub
cmpsl
movsb
ret
push
jl
xor
sbb
mov
mov
mulb
inc
or
add
frstor
cmp
pushf
pop
xor
xchg
add
insl
adc
insb
jle
fisttps
fsts
filds
aad
mov
inc
add
repnz
das
cmp
or
adc
call
adc
sbb
cmc
xchg
addr16
ret
dec
sub
push
scas
stc
outsl
fldcw
cwtl
cmpsl
cli
jg
mov
jge
pcmpeqw
mov
or
rsm
fdivrs
add
mov
scas
loope
xor
wbinvd
or
test
jbe
lret
push
jb
adc
les
add
aaa
repz
in
cld
mov
dec
push
add
mov
mov
pop
dec
and
in
les
fstp
lahf
push
idivl
ds
ds
mov
pop
std
std
and
popa
cmovo
inc
xor
into
repz
aaa
test
sbb
fstps
fdivrl
gs
mov
incl
mov
inc
jns
outsl
pop
xchg
in
inc
dec
iret
mov
dec
out
mov
or
or
ds
cli
loop
mov
or
aam
mov
imul
xor
fwait
push
push
in
loope
dec
jo
mov
xchg
xchg
scas
lds
and
aas
repz
cltd
ror
xchg
xor
xchg
push
pop
add
mull
out
ret
in
js
pushf
ss
sub
enter
adc
ficomps
pop
sub
adc
sbb
ret
fadds
or
pusha
cmp
mov
out
sbb
add
clc
sar
xor
sbb
dec
dec
shrb
xlat
jno
fucomi
pop
pusha
scas
mov
sub
sbb
push
jl
out
cs
ror
fists
xor
xor
mov
sbb
ret
mov
testl
into
xchg
call
dec
std
test
andb
sub
loope
hlt
xchg
ret
aam
jne
sub
lret
loope
sbb
aas
enter
push
shl
push
cli
dec
or
lcall
sbb
lahf
push
cld
cmp
cmpb
fldl
repnz
push
jb
stos
dec
mov
jecxz
jg
insl
or
adc
jnp
std
repnz
dec
jb
sbb
push
ret
movsl
sub
cs
aaa
scas
sub
add
inc
ss
bound
add
pop
out
dec
xchg
dec
divps
test
pushf
push
outsl
or
inc
dec
fadd
imul
xchg
dec
cmp
dec
ljmp
mov
adc
jno
inc
movsl
cmp
ret
mov
enter
mov
or
lods
jns
ret
mov
movsl
stos
sbb
push
pop
in
push
and
sbb
cmp
mov
addr16
ljmp
and
ss
xchg
test
mov
mov
sbb
add
push
or
rcll
mov
lds
imul
fstpl
add
fwait
repz
jle
test
mov
xor
je
out
in
gs
repnz
inc
pusha
cwtl
mov
mov
push
dec
inc
xor
or
or
icebp
rcrl
mov
push
or
clc
repz
stos
sbb
pop
xlat
out
mov
data16
std
lods
test
incb
pop
addr16
cmp
xlat
cld
insl
cmp
sbb
push
cmpsb
imul
divb
sbb
mov
out
sub
movsb
in
lock
push
and
xchg
aad
decb
sub
fldenv
aaa
mov
lret
test
xor
popa
push
andb
jae
xchg
ret
cmp
jg
push
rcrb
inc
push
lds
and
sub
scas
dec
xor
movsb
dec
sub
lock
adc
inc
lea
fcmovne
mov
mov
pop
call
inc
xchg
leave
jb
jno
push
add
fistl
popf
test
test
nop
rcr
push
adc
push
leave
cmp
test
dec
lds
sbb
cmp
or
xchg
aam
sbb
sbb
mov
push
icebp
push
loop
or
or
js
sbb
test
icebp
ds
or
sub
cwtl
icebp
jbe
leave
cmp
jp
sub
fyl2xp1
stos
repnz
mov
ror
lahf
jg
int3
js
mov
mov
clc
xchg
hlt
mov
mov
adc
pop
jge
mov
sub
xchg
or
pop
sub
push
mov
faddl
int3
mov
mov
jecxz
lods
jb
push
loopne
fcmovnb
and
or
adc
lret
andb
inc
sti
inc
sub
cmp
nop
je
pop
pop
cmp
or
pop
dec
aad
addl
sarb
fiaddl
mov
lods
outsl
sbb
add
sub
enter
lahf
pop
jp
jge
sbb
inc
jmp
sub
lods
or
int
ljmp
out
add
insb
jmp
jl
cmc
add
loope,pt
pop
mov
adc
xchg
ss
adc
sbb
jmp
jmp
jecxz
dec
xor
cmp
mov
xchg
test
jmp
je
inc
std
push
dec
jle
cmp
dec
repz
pinsrw
jnp
push
push
jmp
std
fwait
test
mov
lods
shll
inc
and
adc
jno
lret
arpl
pop
jae
push
nop
mov
inc
gs
ja
stos
push
jbe
popa
sahf
inc
daa
cwtl
stc
adc
mov
mov
movsl
into
test
sahf
ljmp
lret
addr16
lcall
sarl
push
rcll
mov
jp
xor
inc
dec
and
idivb
inc
dec
xchg
inc
inc
push
xor
cmp
xor
cwtl
dec
jns
push
mov
in
or
test
xchg
scas
xor
aad
loope
push
fsubr
mov
add
pushf
cmc
sbb
fdivs
imul
mov
rorb
mov
insb
movsl
sbb
out
and
xchg
rcrb
cmp
dec
lods
or
call
addb
outsl
and
adc
mov
nop
shrl
cmp
inc
cmovnp
jns
shlb
dec
hlt
fbstp
jecxz
stos
pop
mov
and
add
or
enter
jb
movsl
push
xchg
dec
mov
imul
lahf
test
divl
fs
push
ljmp
lds
cli
inc
push
pop
jmp
and
ljmp
stos
add
shl
int
icebp
jae
aas
add
mov
dec
repnz
outsl
jne
andb
pop
push
push
outsl
faddl
int3
insl
outsl
loope
scas
mov
xor
es
bound
fidivrs
inc
stc
pusha
pop
jge
pop
adc
aad
and
xlat
pop
in
sub
cmp
fnstcw
xchg
arpl
cltd
jecxz
mov
or
mov
mov
imul
push
pushf
mov
mov
and
and
int3
shl
jo
cmp
leave
popf
inc
mov
aad
ficoms
push
mov
pushl
xchg
ret
cmp
mov
and
sub
stc
mov
xor
sbb
mov
xor
adc
inc
push
lahf
xchg
mov
call
fdivrs
movsb
xchg
and
sub
ds
clc
div
inc
in
fs
dec
xchg
jno
push
xchg
mov
xor
push
fs
mov
in
aaa
and
cmp
mov
mov
xor
adcb
xlat
sbb
jno
push
cli
jecxz
mov
in
inc
xor
and
hlt
or
pop
push
enter
imul
xchg
xchg
clc
and
inc
mov
fistpl
scas
repz
inc
sub
mov
jns
test
dec
in
popa
push
repz
test
adc
push
test
pushf
xor
stos
lcall
cmc
lea
push
adc
xchg
mov
je
loop
add
fwait
ljmp
aam
push
das
xchg
jp
mov
xor
sub
popf
and
pop
pusha
mov
xchg
push
add
sub
lret
addb
mov
and
ret
out
inc
dec
xchg
dec
stos
xor
pushf
cmp
jge
xchg
inc
add
and
and
or
les
cmpsb
movsl
sbb
xorb
push
push
push
les
mov
fdivs
pop
loop
push
imul
xchg
xchg
mov
xlat
aad
fmulp
ss
sub
xchg
mov
cmp
test
ja
cltd
daa
mov
jg
mov
das
cmp
pop
into
push
enter
xor
and
mov
mov
pop
xchg
daa
jno
insb
call
movsl
in
push
add
imul
jno
push
sub
pop
and
pop
pop
out
and
jge
add
xor
xchg
insb
dec
mov
ljmp
jne
daa
fiaddl
rorb
data16
mov
mov
lods
nop
xlat
sub
xor
bound
stos
cmp
xor
aam
scas
add
stos
pop
call
mov
hlt
mov
daa
mov
lods
icebp
stos
mov
mov
inc
aad
fimuls
mov
push
pop
pop
test
jp
xchg
pop
imul
adc
stos
lock
add
cmp
pop
mov
inc
in
sub
imul
xor
stc
daa
push
mov
ret
mov
in
xchg
test
cli
cld
divb
jbe
call
jne
xor
aad
dec
pop
jb
jbe
rorb
sub
daa
and
int
jne
rcrl
test
ja
cmpl
mov
sbb
out
fnsave
push
xchg
mov
push
pushf
mov
sbb
mov
jbe
cmp
sahf
mov
pop
mov
stos
mov
pop
stos
sbb
mov
push
int3
outsl
call
mov
rcl
adc
in
jp
inc
jb
pop
xor
cmp
std
enter
fs
mov
test
cmp
adc
outsb
int
inc
sbb
jecxz
mov
fstps
mov
hlt
jo
sbb
daa
mov
xlat
push
xchg
push
subl
ja
push
std
fstpt
movsl
cmp
pushf
sbb
in
mov
xchg
push
movb
inc
adc
push
xlat
ljmp
jge
inc
jg
push
into
mov
dec
sub
loope
mov
xchg
sbb
cmp
lret
inc
aad
jge
dec
mov
add
imul
jb
sbb
sub
into
sahf
jno
or
repnz
mov
inc
mov
mov
arpl
imul
jae
notb
mov
leave
divl
adc
test
pushf
decb
int3
dec
lds
adc
loope
or
push
test
in
pushf
dec
lds
fs
mov
adc
inc
cld
shrb
sub
xchg
adc
xchg
mov
aam
inc
es
ret
aas
ds
pop
repnz
stos
mov
and
aas
rol
xchg
es
loop
dec
xor
repz
call
rolb
pop
mov
adc
sub
test
sub
insl
ljmp
adc
jmp
add
push
arpl
jo
mov
ficoml
sbb
jmp
outsl
test
xchg
cmp
and
lds
lea
push
adc
xor
fistpll
iret
cwtl
out
dec
icebp
sarl
fwait
out
cmpsl
shll
xor
cmp
push
cmp
inc
xorb
stc
dec
inc
lock
lcall
push
aam
adc
or
out
mov
das
jge
sub
xor
inc
movsb
dec
enter
and
inc
imul
adc
mov
int3
pop
or
jae
or
and
sub
movsb
adc
mov
ficoml
jg
or
xor
pop
or
sub
call
ficomps
shll
xchg
lahf
les
xchg
mov
or
jo
pop
stc
loopne
mov
mov
into
xchg
shl
sub
mov
adc
cmpsl
sub
out
fmuls
stos
xor
cs
jnp
flds
cld
loopne
ret
jp
mov
fsubl
enter
add
popf
pop
adc
inc
leave
sbb
popa
in
lret
jo
pushf
fwait
xlat
adc
loop
ljmp
mov
stos
enter
sbb
aas
cltd
insl
mov
arpl
aam
adc
stos
and
dec
cmp
sub
out
xor
out
int3
out
inc
cmpsl
add
out
xchg
adc
hlt
mov
stc
inc
dec
aad
and
pop
loopne
leave
mov
and
pop
popf
bound
sti
sbb
pop
and
xchg
cmpsb
mov
pushf
lds
jno
ljmp
dec
xor
pop
fisttpll
call
mov
nop
mov
enter
or
repnz
xor
testb
mov
mov
mov
mov
and
stos
leave
adc
mov
fdivrs
pop
loopne
push
mov
and
cmp
mov
mov
dec
jl
pushf
pop
mov
mov
jne
stos
stos
add
xlat
sub
mov
jge
test
dec
xchg
push
jo
popf
scas
pop
movsl
shll
imul
scas
xchg
fld
sarl
mov
cli
test
xchg
insl
aam
xor
scas
popa
pop
mov
rcll
in
dec
imul
loope
or
aam
add
rcl
add
jg
out
jge
roll
test
sbb
movsl
into
loop
mov
jle
test
adc
jmp
sahf
lock
xor
in
fsubr
xlat
call
loope
pop
xchg
push
adc
popf
xor
cmp
imul
ficoms
mov
push
jo
gs
xchg
test
jl
leave
je
mov
xchg
adc
push
ficompl
aam
pop
ds
xor
out
or
add
adc
in
xchg
ds
test
sub
push
and
adc
stos
sub
mov
inc
mov
dec
jnp
repz
dec
dec
and
in
pusha
dec
adc
jno
dec
loopne
aaa
jns
xchg
in
add
lock
push
cld
lea
mov
aam
xorl
test
aad
ss
lock
xchg
out
and
adc
out
aam
cwtl
mov
pushf
lods
loope
xlat
lret
xchg
in
push
fdivrs
sbb
aam
mov
xchg
jnp
mov
mov
pop
cmp
iret
dec
mov
mov
and
mov
xchg
pop
push
pop
out
clc
ret
ljmp
hlt
lea
mov
sbb
ret
sbb
pusha
inc
cli
das
cmpsb
push
and
adc
add
jmp
push
loop
mov
mov
hlt
xchg
mov
aaa
sbb
dec
in
stc
jge
imul
arpl
scas
inc
jle
out
jb
jmp
adc
jmp
inc
jnp
pop
dec
jecxz
mov
insb
or
or
les
call
sub
mov
std
mov
lret
cltd
insl
js
mov
frndint
xor
adc
shll
pop
out
inc
xor
push
pop
inc
cmp
fwait
popa
neg
inc
push
push
int3
sub
mov
es
push
sbb
imul
cmp
movsb
mov
push
dec
imul
add
aaa
push
jnp
fwait
loope
cmc
lea
xchg
xor
and
xor
mov
call
movsb
or
jp
fsubrs
and
fstpl
icebp
mov
cmpsl
jbe
pop
and
jmp
sbb
or
dec
adc
push
or
sub
pop
xchg
or
incb
xchg
and
mov
lret
jne
mov
add
push
mov
fistpll
sar
shr
push
sub
shrl
clc
mov
andb
nop
mov
inc
mov
adc
mov
push
insl
je
mov
rcrl
repnz
fcompl
sbb
into
les
jl
and
ja
dec
pop
push
adc
fmul
clc
lret
gs
mov
roll
iret
add
or
insb
or
sbb
adc
mov
push
add
push
inc
stos
cmp
pop
js
jne
cltd
adc
mov
ljmp
adc
push
hlt
cld
inc
dec
fidivl
sub
test
pop
dec
xor
dec
fldcw
inc
xor
add
sbb
lods
jecxz
jae
pop
mov
push
fbld
ror
imul
jp
mov
jae
jnp
or
dec
jp
mov
or
lods
pop
jmp
aas
inc
std
mov
imul
lds
leave
lock
loop
cmc
out
inc
xchg
mov
fcompl
bound
int3
stos
jg
xor
fdivl
adc
addr16
and
and
dec
mov
cs
mov
std
flds
or
ljmp
nop
aas
mov
mov
push
loope
xchg
inc
leave
test
idivl
test
cmp
dec
lret
xor
nop
mov
nop
and
bsr
or
lret
fwait
push
sub
les
int
ret
shlb
jle
leave
mulb
notb
inc
inc
add
xchg
das
or
sub
cmp
inc
mov
fnstsw
imul
inc
mov
icebp
and
in
out
fadd
push
fnstenv
or
in
xchg
push
ret
add
ret
aas
adc
cltd
mov
xchg
imul
int3
xchg
pop
arpl
xor
or
xor
mov
pop
fsub
sub
lret
stos
adc
or
pop
cli
inc
fcom
jl
add
push
das
in
and
jo
in
and
shrl
mov
push
xor
add
or
and
outsb
test
popa
iret
push
out
mov
leave
jmp
pusha
xor
pop
xor
mov
xor
xor
sub
lcall
sub
ja
cltd
jmp
sahf
std
mov
pop
icebp
and
adc
out
inc
mov
xor
ss
pop
dec
enter
into
repz
imul
ss
xchg
pop
push
sub
add
add
xchg
add
inc
movsl
lea
fldl2t
outsl
cmp
mov
xor
ja
push
mov
mov
inc
notb
lcall
and
xchg
push
std
sahf
ffreep
adc
push
jae
add
lahf
or
mov
sbb
ret
negl
sub
mov
jmp
inc
aad
stos
jae
pop
or
cmp
and
ror
xor
insb
outsl
hlt
inc
or
inc
mov
or
bound
push
mov
movb
add
jno
cltd
sub
incl
aam
sbb
scas
ds
or
enter
mov
adc
loope
adc
test
pushl
xchg
sti
inc
iret
out
insb
dec
test
pusha
or
mov
aaa
clc
sub
out
clc
mov
insl
push
cmpsl
addr16
mov
inc
push
pop
lret
enter
mov
lods
stos
fstl
inc
or
dec
and
imul
and
lcall
fwait
sub
xor
fidivs
aam
shll
and
repnz
in
cli
jnp
mov
out
stc
xchg
sar
scas
cmpsl
scas
out
pop
leave
aas
xlat
push
idivb
cmc
bnd
popa
cld
out
xor
adc
js
xchg
lock
jge
rclb
ficoml
mov
ret
mov
or
clc
scas
jmp
out
je
cmp
roll
jecxz
xchg
mov
xor
in
mov
bound
xchg
sbb
cmpsl
sbb
insb
scas
test
adcb
int
xor
outsb
inc
sub
lcall
dec
les
int
int
mov
jle
lods
xlat
fdivl
xorb
test
jp
or
adc
popf
les
out
inc
push
push
lea
lret
hlt
mov
push
jns
and
fdivp
fwait
inc
nop
mov
insl
jo
cmp
mov
mov
pop
roll
pop
stc
and
sub
or
cltd
popf
insb
in
sahf
jge
fs
mov
cld
stos
inc
pop
cmpsl
mov
mov
pop
mov
xlat
lret
adc
in
adc
stc
in
cmpb
sbb
mov
xor
xor
push
xchg
int3
cmp
in
cmp
cmpl
add
shl
aaa
fwait
leave
into
lret
xchg
cmc
mov
ljmp
xchg
cmp
hlt
dec
aad
jmp
push
pusha
xchg
fs
out
xor
cmp
out
or
or
fcmovbe
or
cld
add
push
in
lds
push
mov
sbb
popa
push
adc
sti
mov
out
pop
cmp
fldl
xchg
sub
sub
inc
fsubrs
stc
cs
std
shlb
inc
rolb
mov
ja
push
inc
out
jbe
cmpsb
shll
xchg
push
imul
int3
mov
mov
iret
das
js
xchg
aam
mov
into
mov
div
inc
xor
inc
int3
mov
add
jle
inc
sbb
shld
ja
lds
das
test
fisttpll
xchg
mov
mov
test
cmp
dec
notb
jae
push
pop
or
cmp
nop
out
jb
xchg
push
mov
loop
sbb
lods
iret
clc
xchg
sub
test
cmc
mov
mov
dec
jne
sbb
cmpsb
cmp
mov
out
cmpl
and
xchg
call
mov
pushf
adc
shll
adc
push
push
sarb
jl
das
dec
repnz
out
push
inc
movsl
pop
jge
sub
out
mov
test
sbb
stos
aad
pop
xchg
movsl
fucomi
into
mov
outsb
or
push
and
sbb
cmp
daa
push
sbb
nop
inc
ret
mov
testl
xor
xchg
or
test
aas
hlt
gs
mov
insb
pop
ret
sub
fildl
cld
fdivs
inc
arpl
inc
xor
jmp
mov
dec
jo
sar
fistpll
cmpb
lods
push
fs
dec
add
cmpsb
mov
or
imul
push
add
pop
sbb
aas
cs
jb
pop
push
sub
jle
push
push
orl
out
jl
push
adc
add
adc
adc
cld
not
outsl
adc
sub
roll
lds
leave
sub
mov
inc
push
dec
mov
aas
rorl
xchg
testb
sbb
push
inc
lods
imul
ja
add
std
and
les
cmp
dec
popa
shlb
sub
ret
out
jbe
adc
push
xchg
sub
es
rorl
stos
push
ret
sahf
and
push
loop
add
mov
pop
cmp
andl
sahf
ds
outsb
sti
mov
jmp
notl
or
mov
xchg
pop
stos
jle
cmp
cmc
shrb
sbb
fildll
fists
pop
imul
imul
test
flds
js
test
push
mov
jg
push
flds
jecxz
incl
mov
nop
fwait
std
pusha
stos
adc
xchg
pop
loopne
fisttps
lcall
test
loope
sarl
aaa
mov
add
mov
mov
popa
xchg
ss
inc
arpl
fistl
jae
or
mov
inc
enter
xchg
loop
xor
sbb
xchg
loopew
movsl
jo
fld1
cmp
cmp
pop
sub
dec
mov
pop
daa
dec
inc
movsl
xorb
inc
mov
movsl
dec
aam
aam
cmp
dec
mov
push
ss
jge
mov
shlb
add
cmpsb
jne
xchg
loope
jns
xchg
stc
mov
xchg
sub
jl
add
jge
inc
pop
jbe
mov
imul
test
pop
jge
inc
jae
inc
push
mov
pop
nop
jp
add
loop
sbbb
fistps
ljmp
dec
lock
repz
add
movsl
dec
mov
mov
adc
sbb
fldt
mov
aad
out
das
pop
sub
pop
and
sub
mov
add
pop
rcll
push
mov
jno
inc
push
fistps
gs
fistpll
lret
push
mov
bound
inc
sub
imul
cmp
mov
fwait
inc
mov
jb
fstpl
movsb
push
cmc
pop
pop
imul
pop
in
xchg
push
scas
xchg
dec
mov
push
cmc
push
xchg
rcrl
daa
fnsave
jecxz
inc
test
lods
je
lahf
add
fsubr
xchg
push
shlb
cwtl
arpl
xor
fstpt
int3
shrl
lea
rcrb
lret
pop
insb
cmc
and
popl
dec
xchg
mov
sub
loope
and
adc
fcoml
stos
xlat
lods
sub
outsl
pop
add
push
mov
push
sub
push
stc
leave
dec
lods
xchg
hlt
xor
sbb
mov
push
lods
hlt
mov
data16
mov
xor
mov
cli
inc
cmpsl
orb
sahf
xchg
jb
mov
rcll
nop
adc
push
mov
mov
xlat
adc
das
cmpsl
inc
xor
rolb
push
push
insb
cmp
jmp
xor
add
jne
lea
mov
mov
or
mov
hlt
imul
bound
rcll
gs
mov
sub
jno
repnz
aam
into
and
mov
add
push
insl
ja
mov
adc
nop
mov
xor
es
sbb
jp
jmp
jle
sbb
hlt
pusha
lahf
cltd
mov
jecxz
mov
stos
movsl
sar
mov
test
mov
ds
adc
mov
jg
add
movsl
loope
push
loopne
adc
std
push
int3
scas
push
adc
sbb
mov
pop
and
dec
sbb
hlt
adc
aas
in
sbb
or
xor
popa
mov
out
lock
lcall
es
dec
sbb
iret
lret
or
cli
lahf
enter
xor
cwtl
xlat
lret
mov
cmpsl
mov
ds
filds
jno
mov
adc
leave
mov
mov
test
out
xchg
sahf
stos
ret
sbb
jle
stc
dec
mov
movsl
sub
sub
dec
cmp
jl
adc
cmc
out
mov
inc
out
or
shrl
scas
dec
into
pop
fisttpl
mull
mov
jne
inc
push
nop
cli
scas
dec
xchg
sub
jecxz
jecxz
cmpsb
adc
gs
js
cltd
pop
jae
cwtl
or
jp
pop
push
pop
mov
adc
sbb
ljmp
les
scas
mov
clc
pop
sbb
lds
les
js
popf
shl
icebp
mov
push
fcomp
arpl
add
mov
or
sbb
mov
insl
xor
sbb
flds
adc
mov
xor
mov
inc
movsb
cmc
push
je
mov
jmp
je
test
shrl
test
into
pop
mov
adc
pushf
add
xor
jl
push
sbb
mov
cmp
shrl
and
popf
test
jecxz
sub
pop
cmpl
pushf
std
add
hlt
loope
jg
sbb
daa
adc
mov
clc
mov
cmp
and
cmp
inc
or
aaa
mov
mov
scas
and
jmp
cmpl
pop
or
sti
fucomp
mov
xchg
mov
idiv
mov
aad
sub
push
cmp
inc
mov
enter
rcrb
pushf
in
cltd
sbb
mov
out
in
ja
icebp
or
clc
data16
fistpll
pop
std
shlb
nop
shl
aam
or
and
pop
xchg
push
rcll
lahf
int
pop
xchg
and
push
sarl
inc
add
outsl
das
pusha
cmp
dec
mov
jbe
jecxz
xor
fidivl
arpl
or
jb
int
pop
pop
cld
jmp
adc
jne
leave
or
pushf
ret
xchg
jl
frstor
jne
incl
mov
loop
sub
fcmovu
jb
cmp
popa
mov
popf
cmp
mov
pop
or
xor
nop
les
or
sahf
cmp
testl
lock
lahf
mov
shll
test
stos
ds
mov
lds
sbb
clc
cmpsl
shr
lret
stos
and
xchg
nop
cmpsl
fcomps
xlat
js
pop
sub
xlat
lret
aad
sub
aam
xor
hlt
lea
jno
pop
and
dec
mov
les
lcall
pop
mov
insb
mov
push
inc
sub
sub
test
cwtl
xor
xchg
cmpb
inc
arpl
dec
xchg
repz
mov
dec
add
mov
jp
loopne
mov
cwtl
loope
mov
xchg
xor
cwtl
sbb
cmc
dec
notb
dec
adc
and
adc
push
test
std
in
test
and
lods
xchg
fchs
sahf
bound
cmpsb
rclb
adc
dec
insl
pop
lret
push
xchg
pop
jp
and
shl
jb
xchg
mov
xor
jnp
xchg
cmp
lods
in
adc
les
sbb
inc
cmpsl
cmp
inc
push
jne
adc
sti
xchg
stc
mov
test
popa
pop
cmp
pop
pop
fiaddl
lahf
add
fidivrl
gs
or
ja
cmp
sti
xor
sbb
jo
xchg
xchg
loop,pn
add
mov
aad
movsb
xor
clc
xorb
out
in
dec
cwtl
mov
pop
rorl
mov
ret
pusha
in
out
lahf
movsl
mov
mov
jl
shrb
les
pop
adc
sub
ja
sub
mov
rolb
xchg
pop
inc
jo
js
mov
popf
sbbb
xchg
inc
sub
or
add
call
scas
mov
stos
es
hlt
mov
mov
insl
push
sahf
gs
movsb
jae
fistps
mov
fdivr
inc
pop
outsl
xor
xchg
mov
push
lds
lods
dec
dec
in
sub
dec
jecxz
and
fwait
mov
mov
je
cs
lcall
imul
orb
lea
jns
lret
push
cmp
sub
clc
rclb
ficomps
subl
out
shlb
cli
addl
push
das
jmp
cs
sbbb
psubq
pop
mov
fldl
sti
sub
cld
add
jmp
jae
ljmp
or
xor
in
stos
fucomip
mov
push
scas
pop
mov
jecxz
leave
sub
fwait
aad
mov
mov
popa
cli
mov
mov
add
mov
dec
xchg
and
ljmp
inc
push
cmp
xor
mov
in
cmp
test
fld
xor
push
je
std
or
ds
jge
push
popf
js
insl
mov
lods
lds
adc
into
dec
stos
push
add
stos
cmp
pop
repnz
push
pop
xchg
jp
in
pop
pop
push
inc
orl
xchg
pop
out
sbb
popa
ror
aam
sbb
cmc
mov
mov
aas
or
lods
mov
xor
pop
jae
mov
dec
adcb
inc
inc
mov
xchg
pop
mov
cs
sub
sub
into
mov
in
jno
or
fiadds
hlt
cmpsl
or
jle
out
fcoml
imul
jbe
pop
cmp
shrb
sub
dec
mov
pop
mov
dec
push
cs
call
fstl
imul
hlt
mov
jno
sub
fwait
or
dec
mov
pop
lods
mov
and
dec
sbb
mov
adc
mov
andps
mov
or
aam
mov
pop
mov
sub
rcl
fidivs
repnz
int3
dec
jle
test
xchg
sbb
push
ljmp
sbb
xchg
add
inc
mov
cld
mov
mov
push
mov
mov
cmp
push
addb
rcll
sub
or
std
es
pop
mov
pop
aad
pushf
clc
xchg
sub
cmp
fdivl
adc
mov
clc
dec
repnz
out
cltd
push
xor
dec
repz
andb
jecxz
test
fs
lahf
daa
jl
pop
or
sub
or
jno
fistl
imul
pop
aaa
cmp
loope
les
xchg
pop
and
dec
inc
hlt
lods
cld
loope
or
stos
mov
sbb
outsb
pop
bound
pop
adc
hlt
ror
test
push
xchg
pop
cmp
sar
mov
repnz
jg
push
dec
sub
sbb
sbb
ds
call
or
or
into
xchg
mov
sbb
push
cld
outsb
int
je
push
in
and
xor
inc
pop
push
xchg
rcl
out
and
adc
mov
not
dec
aaa
mov
outsb
jg
lods
mov
call
adc
pusha
jmp
or
outsb
aaa
pop
icebp
mov
sbb
dec
xchg
cmpsl
ret
test
pop
cli
fstps
jnp
shll
adc
cmp
xchg
adc
or
jae
xchg
dec
lret
mov
jb
push
inc
pop
pop
pop
add
jne
sub
dec
add
outsb
mov
sbb
daa
test
dec
or
in
sahf
xchg
cmp
jae
mov
dec
idivb
or
std
jmp
inc
mov
adc
dec
in
ss
or
pop
and
inc
repnz
mov
or
movsl
and
or
xchg
int3
arpl
push
testb
xchg
inc
sub
pop
jb
or
sbb
stos
out
or
dec
arpl
sbb
sbb
andb
mov
pop
cmc
dec
gs
bound
xchg
ret
mov
mov
lahf
mov
push
lock
in
xor
mov
xor
mov
adcb
and
inc
sbb
aam
jg
add
das
in
test
jns
xchg
sti
adc
test
xchg
test
and
push
sub
adc
inc
das
xor
xor
in
test
xor
std
andl
add
sbb
inc
pop
shll
repz
or
push
sbb
insl
and
jne
dec
xchg
rcll
lock
stos
aas
cvtpi2ps
push
cmp
pop
mov
pop
stos
loopne
push
fiaddl
pop
pusha
sbb
push
lret
xor
lret
fadds
test
jnp
mov
fistps
orb
inc
ret
pop
loop
cltd
inc
fdiv
push
mov
jle
test
aam
mov
or
ljmp
or
cmp
not
scas
push
pop
lds
call
es
jecxz
stos
scas
mov
nop
adc
jmp
lock
pop
cmpsb
push
stos
js
test
and
es
cli
aaa
sbb
popa
mov
pushf
inc
int3
clc
shlb
data16
lds
add
fnstsw
bound
pop
mov
cld
pop
ret
in
cmp
subb
shrb
iret
ret
fdivp
lods
out
push
test
movsb
jne
mov
icebp
sub
xor
ds
push
call
shlb
sub
out
lahf
iret
loope
lret
fs
xorl
fbstp
push
sbb
gs
les
pop
or
pop
push
lret
lret
cmp
and
aas
repz
daa
aad
mov
mov
cli
push
push
roll
pop
loopne
push
mov
pushf
dec
int3
es
push
adc
outsl
mov
lret
fs
aad
repz
leave
push
push
adc
testl
les
outsb
sub
jae
sbb
in
fdivr
or
pop
and
push
jp
scas
sub
push
adc
fidivl
scas
divl
stos
push
aaa
test
shrl
sub
mov
notl
cwtl
or
ret
cltd
jne
adcl
jb
push
lea
adc
dec
lret
lcall
scas
sub
lods
dec
ds
dec
out
das
lods
adc
cmc
mov
sbb
xchg
dec
ret
aam
xchg
fxch
test
adc
das
popf
scas
nop
pushf
repz
cmp
std
popl
in
cmp
push
inc
cmpsb
adc
push
fmull
cmp
rclb
out
mov
jae
stos
icebp
mov
js
sub
sbb
aam
mov
insl
aad
inc
push
in
fldenv
adc
rorb
pop
popa
int3
mov
mov
ret
outsb
mov
imul
out
or
push
inc
pusha
or
mov
jecxz
inc
or
insl
mov
stc
jge
jbe
cli
mov
mov
and
xchg
xor
outsb
nop
aas
lods
sbb
test
mov
fcoml
cmp
outsl
mov
push
push
xchg
sarl
mov
inc
adc
sub
or
mov
lret
icebp
adc
cltd
in
incl
test
fisttpl
push
repz
sbb
sahf
gs
mov
inc
mov
mov
aas
das
xor
dec
cmc
dec
push
stc
mov
rorb
pop
sbb
cli
addr16
cmpsb
cmp
std
loope
ss
adcb
sbb
dec
adc
sub
adc
sbb
stos
push
test
lods
negl
dec
aaa
shll
lock
jge
stos
mov
sahf
rcl
pop
add
cs
in
loop
jge
or
xor
nop
lret
sbb
mov
repz
xor
nop
call
pop
out
push
les
cs
fldl
fstps
sbb
mov
lds
mov
scas
xchg
or
dec
add
mov
add
inc
imul
xor
iret
clc
xchg
popw
movsl
pusha
sub
pop
cmpb
push
subb
hlt
push
cld
mov
jo
mov
repnz
jno
dec
add
lahf
jl
popf
xchg
jecxz
add
inc
push
xchg
daa
in
repnz
add
lods
cwtl
dec
addb
mov
sbb
inc
cmpsb
dec
or
jmp
xlat
clc
subb
pop
xchg
ljmp
dec
out
mov
pop
wbinvd
icebp
push
repnz
pop
or
add
data16
nop
cmp
addr16
fcmove
ret
lret
push
xchg
lret
mov
ss
mov
cmpsl
fsubs
cmpsl
lods
sbb
sub
shl
inc
jmp
bound
jo
clc
cwtl
mov
iret
sbb
mov
test
jb
lods
mov
shlb
cmp
test
cltd
add
jl
sahf
pusha
lods
xchg
mov
adc
inc
aas
imul
xchg
jo
cmpsb
popf
loopne
aas
mov
jno
dec
mov
jg
cmovbe
xorl
xchg
adc
pop
push
mov
mov
loop
cmp
mov
ja
fdivp
dec
pop
int3
neg
push
mov
test
push
xchg
mov
inc
fsubrl
bound
add
test
push
movsl
fs
mov
mov
mov
in
aad
pop
add
jge
push
dec
cmp
push
jle
mov
fincstp
xchg
dec
push
and
inc
stos
xchg
in
std
xchg
data16
pop
jae
jge
out
or
adc
test
call
movsl
dec
push
movsb
pushf
scas
incl
mov
imull
es
pop
cmp
pop
sub
out
jnp
push
fiadds
cmpsl
jnp
test
xor
xchg
mov
dec
aad
out
lods
cmc
dec
fs
scas
dec
push
mov
clc
sbb
xchg
arpl
insb
sbb
cmc
sbb
pop
in
or
jg
jl
fmull
testl
push
mov
cwtl
and
insl
pop
daa
sbbb
sbb
cltd
scas
dec
scas
iret
insl
and
aas
xor
lahf
imul
sub
outsb
jbe
nop
dec
enter
imul
rcr
test
outsl
cltd
jns
inc
insb
loop
addl
and
pop
lods
sahf
outsl
add
add
sbb
add
ret
cltd
ljmp
or
out
test
and
xor
out
js
jecxz
popf
dec
cmp
lahf
aam
shrb
sub
in
lds
adc
lret
mov
rcrb
je
test
xor
test
jno
sub
fs
jmp
into
xor
iret
fldln2
nop
lds
push
mov
jno
or
xorl
mov
rcr
pop
pop
pop
adc
inc
inc
mov
test
jge
xor
cld
les
je
fwait
dec
adc
pop
les
mov
shrl
cltd
cs
call
repnz
add
repnz
jle
mov
push
aaa
jne
dec
jbe
mov
shll
cmp
js
inc
movsl
rcr
sahf
mov
fimuls
pop
sub
lock
mov
or
out
sti
int
pusha
pop
loop
lock
dec
gs
cmp
and
call
stos
pop
push
inc
insb
lcall
sbb
ret
push
loope
js
ds
pop
insl
inc
shll
push
mov
or
rorb
pop
mov
loopne
addr16
sahf
pop
jb
unpckhps
mov
stc
test
or
lods
dec
ds
add
xchg
dec
daa
daa
jecxz
jmp
lock
daa
in
pop
or
inc
adc
xchg
adc
pop
das
jnp
push
sub
xchg
int3
std
rclb
cmpsb
xchg
cmp
fcmovb
and
mov
outsl
rcll
gs
test
jmp
testb
adc
sbb
cmc
rclb
pushf
add
push
arpl
or
cli
or
dec
bnd
sbb
cs
inc
xchg
leave
loopne
js
pop
stos
mov
or
xor
sub
cmpsb
aad
stos
or
inc
in
add
inc
inc
fstl
ss
loopne
sub
push
push
mov
push
mov
jno
hlt
dec
or
loop
mov
cmpsb
stos
shrl
or
pop
mov
inc
fcmovnb
push
ret
repz
pusha
mov
mov
dec
pop
cmp
fcompl
cwtl
ficoml
loopne
pop
rep
fdivr
dec
cmp
std
xchg
pop
aas
sub
aad
adc
or
or
add
push
cmc
nop
xor
adc
pop
in
js
jecxz
mov
bnd
lea
and
fs
fs
cmpsb
jle
cmpsl
mov
pop
out
xchg
and
or
mov
jnp
or
ret
int
stos
lahf
push
jbe
test
xchg
push
das
icebp
mov
xlat
aam
lods
adc
sub
sbb
les
add
inc
push
jne
xchg
jnp
std
and
push
hlt
xor
lea
mov
push
in
repz
mov
test
jne
cld
test
in
gs
js
mov
iret
std
shlb
lcall
inc
sub
jns
inc
shr
fst
repnz
arpl
push
push
mov
mov
rolb
leave
sub
imul
ret
sub
mull
cmp
stos
insb
inc
pushf
pop
sub
leave
xchg
arpl
out
sub
ret
outsl
and
push
das
and
mov
jle
mov
cli
and
pop
sti
xchg
add
adc
sbb
xchg
jl
call
pushf
je
lahf
sub
lahf
cltd
jb
outsb
push
or
add
int3
jbe
int3
cmpsb
jg
rclb
xchg
sti
jmp
addr16
shrl
int
mov
addr16
sbb
mov
sub
loopne
and
push
and
lahf
sub
cld
gs
fsubl
inc
aad
iret
stos
add
loop
cmp
push
lret
enter
rcrb
out
call
fdivs
jecxz
imul
add
mov
pop
and
call
sub
fcomps
ret
mov
ljmp
push
aam
mov
lds
fs
sbb
dec
add
cmp
xchg
fisubrs
call
es
pop
inc
mov
stos
push
mov
fwait
lret
cwtl
movsb
xor
scas
clc
cmpsb
nop
dec
fiadds
lea
inc
fnstenv
loopne
sbb
shl
mov
cwtl
sahf
jge
or
inc
push
movsl
push
cmp
mov
xchg
pop
jo
adc
call
cmpsb
and
addr16
pop
andl
mov
jnp
fistpll
aas
sbb
pop
xor
dec
lret
or
dec
fmull
pop
insb
mov
inc
fcoml
ret
stc
cmp
add
movsl
cmp
dec
inc
rcll
scas
push
pop
loopne
call
push
in
adc
js
stc
jnp
jae
mov
push
mov
cmpsb
enter
inc
ficomps
sbb
or
and
pop
arpl
pop
call
xchg
dec
cmp
fs
jae
ljmp
lods
lret
or
pop
daa
mov
fmulp
mov
rcll
pushf
in
mov
and
jp
bound
into
pop
sbb
pushf
xchg
mov
mov
rorb
mov
cmc
inc
fs
test
std
cmp
mov
cwtl
scas
push
rolb
scas
sbb
mov
js
xor
sbb
fs
cltd
ret
add
imul
repz
mov
popa
ret
mov
cmpsl
adc
shlb
sbb
pusha
movsb
aaa
stos
xchg
jbe
fdivr
dec
sub
insb
adc
inc
cld
sbb
addr16
test
mov
cmp
jne
mov
pop
jl
mov
jle
stos
pop
pop
idivl
test
push
loope
nop
jae
mov
pusha
inc
sti
sub
scas
add
aaa
das
push
pop
lea
push
out
jno
test
aas
fnsave
daa
pop
cmp
andb
push
mov
inc
push
testb
inc
repz
mov
jae
lahf
and
fstpt
dec
sub
das
push
xor
lock
sarl
xchg
xchg
mov
jb
sub
int
fs
ljmp
cli
fisubl
outsb
and
maskmovq
mull
mov
or
xor
popa
or
mov
mov
fsubrl
or
mov
push
push
insb
pop
dec
and
shlb
mov
mov
jecxz
cli
dec
mov
xlat
xor
into
jmp
outsb
jne
fbstp
adc
jg
test
adc
pop
stos
call
nop
fucom
xlat
mov
jbe
jnp
dec
in
xor
mov
xchg
push
sbb
add
push
sarl
divb
inc
jmp
cmp
lret
sub
mov
pop
inc
js
fisubl
cld
push
sbb
pop
mov
fnsave
test
push
sbb
pop
rorb
inc
std
xor
adcl
sub
sub
jmp
nop
in
xor
lea
dec
mov
push
leave
ljmp
into
xchg
cld
gs
inc
mov
adc
add
mov
sbbb
or
std
inc
dec
ljmp
adc
sti
lahf
aad
cmp
test
sub
iret
scas
sahf
adc
in
xchg
push
shrb
pop
mov
sbb
mov
outsl
cwtl
jo
mov
jl
sahf
sub
mov
fistpl
popl
cmp
xor
int3
bound
add
add
lret
jno
ds
jp
stos
out
mov
in
dec
clc
and
mov
rorl
cmp
int3
cwtl
test
sbb
or
popf
or
xchg
xor
and
lock
mov
bnd
xor
mov
mov
ja
or
fs
jp
dec
adc
daa
or
pushf
pop
out
shr
push
xorb
enter
dec
mov
outsl
les
stc
sbb
pop
lcall
mov
add
pop
shll
data16
jno
cwtl
sbb
jbe
call
xlat
jnp
fs
jge
pop
xchg
popf
shl
mov
mov
pop
ret
push
cs
push
mov
shrl
adc
jmp
fwait
adc
insb
jmp
cmp
xchg
test
mov
xchg
push
in
add
xchg
and
fiadds
mov
add
out
push
pop
bnd
scas
add
inc
add
mov
lret
xchg
push
or
push
pop
jae
ds
out
insb
or
xlat
push
or
xchg
mov
ljmp
popa
cmp
and
sbb
mov
jg
aad
popa
enter
cmpsb
mov
mov
jge
sbb
push
pop
popl
out
sahf
lock
andb
jbe
inc
popa
fisttpl
gs
or
stos
and
pushf
adc
js
mov
xchg
push
lret
push
mov
lds
dec
int3
adc
add
pop
cs
fisttpl
mov
push
std
or
iret
xchg
adc
or
sub
sub
in
clc
addr16
jmp
insb
insb
insl
xlat
and
cmp
or
xchg
aaa
mov
dec
push
xchg
or
pop
adcl
sbb
push
in
dec
and
fwait
jnp
sbbl
pop
jno
add
leave
xchg
rcll
insb
push
pop
jb
ds
stc
cmp
mov
push
daa
adc
shl
iret
xchg
mov
loop
mov
shr
cwtl
mov
push
jns
push
jae
fcomp
xor
notb
outsl
push
jle
outsl
divl
push
mov
fsubrl
mov
push
mov
sti
jae
add
or
test
mov
jg
sbb
cmpsb
or
jnp
jmp
jp
negl
fistps
push
test
iret
in
dec
dec
daa
sub
pusha
mov
push
addr16
sbb
jecxz
out
xor
lret
add
and
xor
add
pop
jnp
lock
jle
repnz
jg
and
dec
xlat
bound
idivb
ret
jns
sbb
mov
xchg
or
inc
fmulp
lods
adcl
dec
addr16
hlt
sbb
xor
int3
sti
imul
fstl
sub
dec
and
punpckhdq
mov
xchg
lret
pushl
aam
xor
sbb
push
es
or
test
dec
mov
mov
decb
jle
or
xchg
and
pop
sub
popf
mov
shrl
adc
xchg
ret
cltd
pop
lds
push
lret
fsubrs
loopne
xor
add
jg
sub
pop
mov
shrl
das
inc
xor
push
dec
inc
or
cld
mov
fildll
sub
and
xchg
sub
cmp
into
es
mov
mov
shll
ds
cli
jns
faddp
lcall
fdivl
mov
push
mov
fsts
pushf
or
mov
dec
popa
mov
clc
movsb
cli
adc
roll
jecxz
dec
xchg
and
or
pop
loop
pop
notl
rcrl
xlat
mov
iret
jecxz
jno
xor
aam
push
sbb
ret
lcall
jge
in
adc
pop
push
test
into
test
int
cmp
push
outsl
or
and
and
ret
mov
xor
xchg
pop
jno
je
bound
push
shrl
repnz
fistl
cmpsb
push
aam
inc
add
and
rorl
sbb
mov
dec
idivb
scas
xor
and
cmpsl
push
inc
fcomp
clc
push
pop
jno
fwait
push
or
jnp
push
adc
lods
lahf
and
sub
repz
sub
imull
pop
daa
idivb
lock
jl
out
inc
movsl
adc
push
aas
call
mov
stc
cmp
into
dec
shll
movsb
mov
pop
mov
adc
adc
pop
xchg
fildl
add
int
fmuls
cltd
push
adc
lahf
mov
dec
or
lods
mov
imul
jns
cmp
dec
or
xchg
sub
imul
add
xchg
add
push
repnz
jne
inc
lret
cli
leave
ret
push
shlb
and
hlt
inc
jne
jecxz
lcall
fwait
ss
add
iret
mov
mov
or
cmpb
xor
pushf
cmp
mov
repnz
mov
mov
mov
imul
jno
or
icebp
push
call
stos
jmp
push
pop
movsb
and
loop
hlt
inc
enter
shll
mov
mov
lcall
mov
arpl
dec
cmpsl
jne
repnz
add
movsb
push
jecxz
out
pop
push
mov
popf
and
arpl
movsl
dec
nop
xor
gs
sbb
out
push
or
pop
iret
cmp
clc
sub
insl
aam
pop
mov
cmovl
mov
push
sbb
jecxz
jge
scas
mov
jmp
pop
sub
jg
mov
mov
sti
mov
sub
shlb
mov
mov
jb
aad
popf
imul
fisubl
xor
das
jg
loopne
outsb
das
cli
adc
push
cmp
out
es
in
fistl
sti
int3
fdivl
xchg
sub
jecxz
push
pop
mov
inc
divb
pop
hlt
stc
mov
xchg
lea
in
shlb
mov
dec
or
sahf
cmp
jl
test
loope
or
outsl
ret
outsb
xor
subb
cli
adc
pop
cmp
lods
dec
adc
push
fsubrl
dec
into
cmpb
out
sti
gs
mov
lods
cs
push
add
xchg
movntq
in
mov
aad
inc
ss
jno
inc
and
push
lcall
xchg
fs
push
pop
push
fdivs
rcr
jo
mov
mov
cwtl
pop
imul
lea
and
xchg
jae
rcrb
mov
nop
inc
xor
daa
stc
inc
fadd
in
inc
adc
add
xchg
cmp
lahf
add
inc
dec
lahf
cld
ret
cli
xchg
mov
fnstenv
push
pop
mov
bswap
pop
rolb
mov
das
mull
lock
dec
sbb
scas
cmp
scas
cmp
jle
ret
xchg
inc
cmp
or
icebp
movsl
pop
stc
daa
or
mov
jmp
out
in
into
inc
mov
scas
pop
push
mov
pushf
push
or
mov
jno
pushf
in
mov
adc
push
sbb
mov
mov
daa
adc
int3
dec
ret
out
fstps
rcrl
divb
inc
es
icebp
pop
jle
add
popf
pop
cmc
inc
movsl
mov
das
stc
add
inc
in
mov
jg
push
xor
fsubr
stc
into
lods
jne
xchg
mov
scas
sub
sti
lret
les
adc
in
and
dec
mov
test
fcmovb
dec
push
std
push
test
scas
xor
add
test
mov
mov
fs
mov
pop
andl
mov
in
xchg
das
ret
ret
dec
add
or
mov
cmp
jg
jle
ljmp
mov
cmpsl
ret
cmp
adc
add
or
dec
shlb
push
pop
xchg
out
cs
mov
inc
pop
jecxz
aaa
in
lret
xor
cmp
adcw
ds
mov
mov
popf
mov
jp
sub
mov
maskmovq
idivl
ss
lods
imul
pop
lods
push
imul
fdiv
addr16
scas
mov
jecxz
clc
mov
testb
outsl
stc
int
pop
icebp
scas
int
int
cltd
lcall
xor
inc
int
scas
mov
add
adc
repnz
into
iret
xor
dec
cs
inc
dec
addr16
pop
add
repnz
xchg
sub
and
pop
jbe
or
cld
pop
inc
stos
push
fmuls
dec
xchg
lret
shrb
jle
out
repz
jmp
pop
int3
je
inc
pop
jge
inc
cmp
push
pcmpeqd
mov
out
jmp
add
cmc
popa
js
ja
jne
sbb
jne
jecxz
fs
xchg
insl
inc
mov
push
mov
aas
insb
loop
cmp
add
xor
xchg
les
adc
mov
aad
pusha
inc
or
mov
repz
scas
nop
testb
pop
rcl
mov
cmp
imul
stos
insb
mov
js
push
outsl
sub
mov
dec
shr
ror
ss
sbb
lahf
mov
inc
pop
or
outsl
jle
cmpsl
jg
adc
pop
mov
ret
push
or
sbb
sub
shrb
mov
xlat
cs
stc
stos
xor
add
cld
popa
dec
popa
push
sbb
inc
mov
inc
enter
pop
cmp
fs
adc
mov
je
and
in
and
xor
ret
xchg
and
dec
aam
lcall
sbb
mov
in
rclb
loop
lcall
push
fisubl
insb
ds
clc
int3
cmp
in
mov
fsts
negl
xor
mov
pop
xchg
push
pop
orb
jp
adc
outsl
sbb
test
sbb
push
push
mov
mov
push
int
stos
test
or
in
addr16
rcrb
jbe
cmpsb
inc
ds
in
xorb
push
xorb
and
inc
ret
lock
out
xchg
push
rcl
adc
bound
and
cmpsl
mov
loopne
popa
aas
adc
jl
inc
icebp
fildll
jl
adc
jb
out
push
mov
cmc
pop
adc
lahf
pop
js
cmp
mov
xor
scas
and
mov
scas
loop
test
mov
jb
orb
ss
out
enter
mov
mov
movsb
stc
sub
data16
repz
mov
mov
mov
inc
insl
jg
and
int
inc
xor
adc
out
mov
popf
and
cmpsb
gs
push
push
jns
mov
jae
xor
or
mov
bound
fcoml
cmp
push
xchg
mov
dec
cmp
xor
inc
loopne
mov
adc
rcr
inc
shll
push
in
arpl
icebp
adc
insb
fisubrl
aaa
in
sbb
mov
rcr
sub
lods
dec
xchg
aad
ss
jmp
ret
add
jle
sbb
mov
mov
scas
add
sbb
mov
jmp
inc
ljmp
incb
movsl
sbb
jl
inc
in
push
sbb
inc
orl
ja
ljmp
dec
xchg
cltd
xor
sbb
lods
loopne
aaa
or
cmp
xchg
ss
imul
add
testb
nop
push
push
sub
arpl
cmp
fwait
imul
out
imulb
popa
or
scas
icebp
and
pop
sbb
push
fldl
ret
shlb
imul
inc
in
xchg
xor
fisubrs
add
mov
call
add
in
enter
ficoml
es
pop
inc
ljmp
add
xor
jge
je
sub
lret
lds
push
dec
push
frstor
jno
mov
fldcw
mov
in
dec
repnz
scas
insl
jae
sub
fwait
push
push
cwtl
jne
cwtl
adc
inc
jbe
cli
cmovno
jg
ds
insl
sarl
ljmp
rorb
rcrb
out
push
repnz
cmp
jns
leave
arpl
xchg
inc
pop
out
int3
inc
push
test
push
in
and
fmulp
push
xchg
cltd
sbb
subl
test
imul
mov
cmp
xchg
fimuls
sbb
xor
jno
add
test
lods
jecxz
sbb
mov
push
jmp
mov
lods
mov
sub
sti
or
mov
push
mov
pop
xchg
sbb
jecxz
bts
icebp
int
add
xchg
xor
xchg
enter
cwtl
dec
fdivr
enter
mov
ss
xchg
sti
lret
adc
jb
inc
inc
cmpsl
sub
mov
pop
cld
test
pushf
bound
cltd
mov
dec
xchg
jnp
xchg
rclb
fisttpll
stos
cmp
and
jecxz
outsl
rolb
fs
dec
popa
fxam
adc
xor
mov
jl
test
xorps
jno
xor
sahf
imul
push
out
sbb
xor
cmp
ret
orl
sti
test
fisttpl
xor
lahf
adc
push
pop
jae
xor
aad
notb
mov
cmpsb
push
xor
test
movsb
ja
xchg
push
imul
cmp
scas
fisubrs
das
dec
add
add
or
sti
iret
gs
xor
and
xchg
pop
add
pop
jle
add
mov
ds
int
out
ss
mov
rcrl
fwait
inc
mov
fs
pop
xchg
orb
inc
mov
sbb
mov
ret
jle
clc
xchg
and
push
ss
xchg
mov
sub
jbe
lods
mov
les
std
pop
scas
in
cmp
nop
pop
jno
inc
xor
xchg
pusha
pop
or
xchg
or
sahf
mov
cmpsl
jns
mov
mov
xchg
push
gs
dec
or
in
adc
dec
dec
in
xor
jge
mov
add
or
mov
mov
push
rclb
inc
dec
in
mull
xor
popf
jno
sbb
push
xor
sbb
mov
lcall
cmc
xor
nop
xchg
and
mov
test
mov
movsb
inc
fwait
enter
mov
cmp
jmp
mov
test
int
mov
std
xchg
addl
jmp
or
sti
pop
xchg
data16
out
jae
xor
add
into
cwtl
mov
cltd
or
push
pop
mov
dec
push
insb
leave
popa
add
push
push
adc
mov
xor
jno
jge
sbb
repnz
lahf
pop
xor
pop
sbb
add
mov
jns
sbb
xchg
cltd
sub
or
sbb
arpl
gs
loopne
rcrb
imul
pop
jne
or
das
sahf
ficompl
fwait
add
iret
int
pusha
ss
js
xor
sbb
dec
dec
add
jmp
mov
dec
cltd
dec
in
and
int3
pop
jb
lcall
in
ja
add
push
bound
into
out
xor
or
jnp
or
jecxz
negb
dec
inc
popa
jmp
lret
cli
std
inc
jle
test
ret
cmp
stos
cmp
add
and
jl
push
and
sub
sbb
ret
ror
ficoms
and
pop
cmp
enter
and
mov
dec
inc
inc
cmp
sub
decl
xlat
repnz
cmc
pusha
xchg
pop
imul
ror
push
in
cmp
mov
push
pushf
push
loop
push
xchg
notl
mov
mov
andb
sbb
out
jge
divl
ret
leave
movsl
cmc
and
ret
add
js
inc
jae
push
movsb
fmull
adc
popf
test
fimull
enter
call
test
push
inc
adc
and
dec
cmpsl
pop
mov
sbb
cltd
adc
mov
push
leave
push
and
stos
xchg
rorb
pop
mov
mov
jmp
push
xchg
inc
iret
sub
movsl
aas
out
pop
rcrl
xchg
sub
adc
fwait
or
addl
insl
test
movaps
dec
xor
adc
xor
jo
jle
xchg
cmc
xchg
cltd
outsb
jg
fs
shll
mov
cli
ret
sbb
xlat
dec
imul
adc
sahf
adc
xchg
imul
mov
sub
push
mov
jmp
sub
js
cmc
mov
cmp
or
loope
sti
xor
mov
lea
shl
push
fcmovnu
int3
out
add
sahf
xchg
xchg
neg
jno
dec
adc
cmp
jl
iret
pop
lods
aaa
jecxz
mov
fs
aam
mov
out
push
xor
xor
jns
cltd
nop
pop
movsb
add
cs
out
in
sbb
daa
std
js
mov
mov
xor
push
or
mov
or
rolb
testl
cmp
jl
xchg
sti
fnsave
je
add
lock
mov
nop
stc
adc
mov
nop
mov
fistps
xor
jnp
mov
sti
pop
outsl
xor
add
xor
out
jg
lcall
cmp
sub
shlb
fsubp
xchg
daa
xchg
and
push
pusha
imul
mov
mov
cmp
push
test
inc
mov
add
test
cmpsb
out
pop
ds
dec
xor
push
push
test
loopne
fsincos
ljmp
or
sub
inc
push
mov
hlt
push
jl
fsubl
xor
sbb
mov
scas
pop
adc
mov
pop
adc
jmp
jmp
mov
repnz
lea
pusha
mov
test
mov
enter
in
dec
mov
js
enter
pop
mov
movsb
lcall
in
mov
lods
mov
aaa
adc
scas
rcrl
roll
scas
stc
xchg
sbb
hlt
inc
and
ss
sbb
adc
jno
daa
xchg
dec
sarb
cmp
xor
testl
ret
repnz
out
add
aaa
jb
ret
inc
test
cmpsb
ja
jns
push
repnz
push
add
cmpsl
push
mov
in
jecxz
jmp
test
jg
mov
mov
sub
sets
dec
es
repz
ficoms
outsl
mov
cmp
insb
cltd
leave
jno
cli
loope
jge
out
popa
sbb
sbb
sub
in
xor
adc
std
pop
dec
cwtl
sub
jns
adc
xor
lret
push
or
fsub
andb
and
inc
hlt
cli
add
shll
fs
sub
pop
pop
das
lds
stc
jp
es
in
fildll
ret
cli
mov
push
nop
pop
js
mov
lods
mov
sub
stos
std
stos
mov
hlt
lods
in
add
mov
add
mov
daa
enter
mov
jo
mov
adc
stc
lret
fs
add
mov
or
test
sbb
popa
and
stc
inc
or
or
inc
shll
lahf
fstpt
test
cld
or
jl
clc
lahf
rorl
dec
stos
dec
mov
jmp
fiadds
popa
xchg
pusha
outsl
inc
mov
or
adc
xor
add
aam
fsubrs
jmp
jp
fsin
sub
aas
stos
js
iret
je
sbb
pop
into
inc
aam
and
jae
js
test
mov
fdiv
lret
dec
adc
push
add
bound
movsl
nop
cmp
jns
stc
xchg
icebp
addr16
fmuls
push
pop
jne
test
adc
dec
ret
xchg
sub
dec
fildll
xorb
fildll
aam
xchg
ret
in
sub
push
in
scas
pop
cmpsl
loopne
cmp
dec
outsb
pop
mov
int
xor
jae
mov
jnp
mov
push
mov
fildl
xchg
mov
sbb
ss
push
stos
lret
inc
mov
adc
push
jp
sub
fidivs
and
mov
push
lea
gs
outsl
cmp
cmpb
fcmovnu
loop
lret
mov
jge
mov
fisubl
iret
out
add
inc
int
push
mov
test
lahf
push
jecxz
mov
mov
ja
pop
dec
rolb
mov
js
adc
pop
jmp
fidivs
es
and
cmp
push
lds
and
pop
dec
push
cmp
out
fcmovb
jno
xlat
in
mov
rol
cmp
sub
enter
ret
jno
mov
lock
imul
xchg
adc
jl
data16
xor
mov
stc
into
and
scas
in
scas
xchg
jmp
hlt
gs
cmp
jl
add
and
mov
dec
lret
xchg
dec
dec
scas
adc
lods
dec
mov
sub
mov
add
push
pop
cmp
stos
push
lgs
mov
and
out
sbb
mov
jle
pop
cmp
cltd
push
enter
fmuls
insb
rolb
jl
daa
sub
xchg
shlb
call
sbb
dec
les
sbb
xchg
xor
fldt
nop
loope
ds
inc
add
call
sbb
loop
push
or
dec
sbb
mov
mov
out
data16
ror
xor
mov
mov
andb
sbb
pop
sahf
movsl
cmpl
xchg
add
adc
push
icebp
dec
push
inc
lret
push
lcall
mov
sub
push
iret
sahf
lods
sub
into
into
sub
mov
in
sbb
mov
jno
test
jecxz
mov
cmovno
adc
dec
sbb
dec
lea
movsl
add
out
in
mov
fstpl
aam
cmpsb
lods
rclb
mov
pop
cmc
stc
xchg
shlb
xor
push
sub
mov
mov
hlt
dec
inc
jp
xor
mov
jne
in
push
xchg
cli
sahf
mov
shll
repnz
push
repnz
ror
mov
push
push
pop
mov
jl
andl
push
mov
adc
out
xchg
mov
xor
cmpsl
bound
cmp
mov
jno
dec
cwtl
xor
dec
jo
inc
adc
mov
push
dec
push
pop
pop
cmp
ret
push
or
sbb
or
mov
out
scas
daa
mov
push
adc
out
scas
cli
inc
lcall
pop
mov
or
or
push
pop
mov
lea
scas
into
cmp
xor
mov
add
mov
pushl
push
adc
jb
popa
mov
cmpsl
repz
inc
sbb
ret
cmp
jo
jb
ja
pop
jns
out
fidivs
lock
pop
repnz
fiaddl
mov
push
sub
imul
dec
sbb
adc
inc
outsl
and
and
addr16
cmc
mov
loop
jge
insl
add
jbe
mov
push
push
mov
adc
dec
dec
cmp
mov
mov
cmp
dec
xlat
dec
pop
pushl
clc
dec
add
imul
pop
scas
test
or
mov
or
sub
cmpsb
push
gs
xor
leave
daa
movsb
and
push
and
inc
cmpsl
mov
mov
push
sub
cmpsl
jge
lret
push
inc
loope
jl
jecxz
jne
rcr
in
and
and
test
out
dec
sub
adc
fildl
in
xor
mov
inc
loopne
xchg
mov
addb
ret
xor
adc
test
sbb
cwtl
and
xor
clc
imul
cmp
pop
outsl
xchg
bound
call
pushf
imul
pop
jns
xchg
in
mov
dec
aad
pop
ret
cli
stc
aaa
jno
jmp
add
mov
mov
sahf
scas
aad
add
fcoms
sbb
cmp
movsl
ss
jle
dec
cmc
mov
jl
sub
repz
sbb
push
inc
testl
sbb
sub
loop
mov
jae
xchg
jg
bound
scas
inc
xlat
stos
and
xchg
mov
adc
movsl
jbe
xchg
mov
or
mov
movsl
repnz
cmp
pop
mov
fucomp
cmp
orl
movsb
sub
dec
shrb
jl
xor
call
pop
and
aas
addr16
lahf
xor
jo
adc
sarb
xor
cmp
sub
shrb
add
repnz
rcl
mov
iret
into
jno
arpl
bound
fwait
xchg
test
sbb
cmp
jo
mov
jg
xchg
mov
clc
cltd
sbb
push
out
jle
pop
repnz
or
popf
or
es
add
mov
in
in
cmp
out
inc
xchg
add
cmp
mov
or
clc
jecxz
hlt
push
mov
xchg
mov
sbb
bound
repz
hlt
enter
daa
xchg
mov
pushf
inc
fmull
dec
int
mov
mov
inc
push
test
mov
fdivs
lods
repz
or
push
sbb
pop
mov
call
stos
loop
out
idivb
imul
test
xor
lds
mov
neg
shlb
sbb
fs
clc
cli
push
xor
xor
or
ret
pop
icebp
int
push
testl
in
out
lahf
js
mov
pop
fs
mov
lock
sahf
mov
scas
loopne
fsubr
gs
sub
in
cmp
sub
sbb
addr16
pop
stos
movhps
insl
andb
mov
push
mov
repz
push
xchg
jle
push
xchg
jp
leave
dec
pop
xchg
call
add
push
cmp
xor
in
sub
pusha
addr16
push
xchg
in
ja
and
sub
sub
sbb
push
test
hlt
dec
mov
in
adc
mov
adcb
mov
push
lods
fnop
fs
sarl
pusha
push
das
mov
xor
adc
xor
cwtl
xchg
into
lock
fsubrp
lock
fadds
int3
addps
jnp
add
scas
jl
fsubrs
pop
int3
jg
or
popa
xor
fists
dec
jg
push
cmp
stos
mov
notl
sbb
mov
clc
out
xchg
xchg
mov
outsl
lds
cmpsl
pop
enter
xchg
mov
rorb
mov
push
sub
xchg
mov
insl
push
mov
dec
push
dec
pop
fdivrl
imul
mov
movsb
jmp
lea
add
inc
outsl
into
xchg
rclb
and
push
inc
lret
sbb
or
fdivrs
leave
je
stos
push
mov
adc
push
jge
jl
mov
out
xchg
jg
enter
les
lods
movsl
pushf
mov
pusha
push
inc
xor
and
outsb
in
inc
sahf
ljmp
and
fisubl
inc
cli
mov
inc
fst
sub
js
lret
mov
push
sti
dec
mov
jp
push
and
lahf
ss
mov
push
pshufw
pop
mov
or
das
push
loope
dec
or
jns
sahf
test
ret
cmp
mov
mov
call
jle
pusha
and
push
jle
or
mov
mov
sub
stos
test
je
addr16
push
not
dec
or
push
xlat
xchg
xor
mov
nop
std
sub
ret
out
mov
scas
mov
aas
fdivrl
ljmp
mov
xchg
mov
cltd
sbbb
mov
push
dec
fstpl
dec
sub
add
repz
test
outsb
xor
nop
call
cli
and
xchg
push
mov
add
insl
mov
cmp
test
and
add
bound
je
mov
xchg
push
bswap
mov
mov
mov
aad
inc
sbb
ret
pop
lcall
popf
scas
lcall
decl
mov
fbstp
lret
mov
cmc
sub
pop
cli
stos
mov
jnp
xchg
outsl
sbb
icebp
and
mov
jbe
out
add
xor
pop
adcl
not
arpl
inc
les
adc
and
sbb
jo
sub
dec
enter
lahf
mov
sbb
icebp
and
or
push
out
sbb
imul
stc
inc
decb
sub
call
imul
inc
inc
insb
jmp
hlt
stos
inc
mov
js
pop
mov
data16
and
cld
sbb
cmp
pop
gs
std
gs
push
ja
sahf
mov
add
jp
xchg
pop
and
cmp
fucomi
ss
pop
sbb
adc
test
or
rcrb
rclb
mov
lds
sbb
addb
push
test
cmp
jge
int3
arpl
pushf
jecxz
adc
jae
loop
cmp
or
sub
and
je
mov
cli
jg,pn
inc
or
cltd
push
add
add
push
pop
outsb
jns
fwait
sti
adc
xchg
dec
fldl
clc
loop
in
xor
insb
fcmovnbe
lcall
pop
mov
jle
mov
pop
stos
mov
outsl
xchg
pop
sub
outsl
xor
adc
ja
outsl
and
movsl
mov
mov
and
test
adc
ljmp
xchg
push
es
xlat
push
xor
arpl
inc
popf
addb
xlat
mov
pop
in
cmp
aas
aas
in
int3
dec
add
xchg
cmp
adc
or
outsb
push
lahf
add
xchg
mov
pop
ret
enter
repz
push
js,pt
xor
add
jp
sarl
add
aad
sbb
popw
adcl
xchg
xchg
adc
inc
xor
mov
fisubl
xchg
es
adc
sbb
mov
pushf
sub
cmc
out
pop
mov
or
test
adc
call
out
lods
fs
data16
push
mov
mov
or
mov
dec
push
adc
sbb
push
mov
inc
call
cmp
push
inc
pop
or
cltd
nop
rcrl
lods
lods
ljmp
ss
and
lahf
in
mov
xchg
and
push
cmpsb
je
xchg
xchg
inc
stos
or
mov
addr16
or
mov
js
sbb
cmp
xlat
sbb
jp
sbbb
rolb
nopl
cmp
add
lret
sub
popa
sub
clc
pop
into
in
cmc
gs
jl
in
mov
fdivl
data16
mov
sbb
sub
stos
popa
idivl
mov
imul
xchg
sub
lds
cmc
inc
je
dec
and
mov
mov
push
xchg
pop
pop
cmpsb
adc
dec
stos
xor
shlb
mov
xor
stos
ds
and
les
call
adc
pop
lcall
into
jb
scas
roll
pop
mov
sbb
insb
mov
mov
jle
mov
hlt
in
jp
inc
pcmpgtb
pop
repz
bound
popa
push
sub
jl
mov
loope
or
add
or
inc
stos
fsubp
xchg
bswap
mov
push
insl
stos
jno
aaa
aad
and
fwait
push
aaa
insl
pop
insb
cwtl
sahf
std
stc
mov
jl
jo
clc
sub
loop
mov
loopne
mov
jb
inc
sub
fiaddl
lcall
inc
dec
jno
subl
loop
cmp
insb
lcall
in
push
and
popf
arpl
xor
out
insb
aas
arpl
or
scas
pop
scas
cld
ljmp
int
ret
adc
xchg
mov
or
ret
ror
and
sbb
sbbb
ljmp
out
cmp
add
xchg
push
clc
pusha
addr16
addb
test
mov
fistpll
xchg
daa
gs
add
jno
xchg
movsb
sub
jbe
jl
dec
pop
jb
mov
fimuls
rorl
pushf
mov
mov
xchg
stos
sub
ss
stos
mov
aas
dec
test
sub
mov
lock
cs
sub
scas
loop
lea
push
xchg
lret
pop
ficoml
addb
mov
in
out
and
mov
mov
and
dec
ss
cmp
lea
push
aam
mov
mov
lret
ret
leave
xchg
and
in
mov
subl
mov
push
test
xchg
fcmovu
jge
jge
mov
dec
out
xchg
lods
sbb
lock
fidivrs
dec
stos
dec
stos
cmp
fwait
push
icebp
jbe
sub
fldt
out
xchg
jp
xchg
adc
scas
xchg
sbb
add
mov
outsl
cltd
lock
mov
jb
out
outsb
adc
add
bound
pop
fwait
cwtl
sbb
movsl
dec
inc
jo
shr
dec
inc
xchg
xchg
mov
xchg
or
push
movsb
fdivrs
test
in
pop
push
test
sbb
mov
outsl
movsl
ret
arpl
sbb
out
adc
mov
into
divb
iret
mov
and
aam
sub
mov
pop
or
mov
pop
mov
andl
hlt
xchg
sub
xchg
aam
andl
push
jae
cwtl
jae
rolb
out
jp
ret
xor
dec
jle
xchg
fdivrp
ss
pop
mov
lea
outsb
imul
sbb
xor
push
fidivl
ljmp
fcomps
mov
xor
mov
mov
cmc
aaa
dec
aad
push
out
cmpsb
int
cmpsb
push
sub
and
out
loop
or
sbb
cmp
fildl
push
xrelease
fists
movsl
ret
add
push
push
inc
xchg
cld
mov
movsl
imulb
xchg
cltd
dec
insb
mov
jl
push
ficoms
out
test
mov
mov
jge
test
push
xor
adc
std
in
sub
stc
inc
insb
mov
inc
lods
lea
sbb
shlb
mov
push
aam
pop
loopne
out
jle
adc
mov
mov
mov
ds
into
ss
fadd
testl
add
or
push
es
in
lods
mov
dec
fstps
jmp
xchg
push
adc
aaa
pop
mov
push
nop
adc
xchg
mov
xor
je
ja
scas
pop
leave
call
ds
cs
jmp
lea
mov
mov
call
mov
adc
inc
push
add
jae
cltd
sti
mov
dec
inc
push
adc
mov
nop
or
inc
in
push
ret
pop
sub
push
lahf
dec
loope
rclb
fsubrl
add
pop
sbb
push
sbbl
jns
mov
jp
cmc
mov
out
js
out
sahf
pusha
shlb
popa
and
lds
dec
mov
xchg
sbb
or
pushf
cli
dec
dec
iret
add
and
es
jb
and
dec
cmp
ljmp
loop
iret
jnp
aad
in
insb
push
or
jae
int
or
sbb
pop
addr16
inc
mov
int3
or
add
iret
pop
fs
cwtl
das
xchg
xchg
repz
push
int
dec
push
arpl
sub
iret
shrl
shlb
ret
mov
insl
pop
shll
mov
cmp
cmp
jne,pt
add
ficoms
pop
inc
fidivl
movl
jl
pop
outsb
aas
sarl
sbb
cmp
in
out
jb
sbb
xor
popf
inc
scas
rorl
ljmp
ficoms
push
popf
dec
xchg
cli
popa
lods
mov
mov
test
jp
adc
mov
mov
sbb
rcl
cmpsl
xor
fcmove
cli
sti
mov
pop
mov
cltd
adc
push
dec
adc
and
popf
jg
push
lea
push
gs
cmpsl
in
dec
cmpb
scas
mov
lret
push
and
mov
or
mov
sbb
cs
pop
dec
das
pop
mov
xchg
jo
xlat
cmp
icebp
das
dec
ljmp
nop
lods
xchg
cwtl
shr
scas
adc
xor
xchg
test
popf
add
lahf
into
rcl
cmp
lea
pop
push
xorl
pop
pusha
or
ja
loope
and
repz
adc
sbb
mov
andb
dec
or
sbb
push
sub
jmp
negl
and
out
push
jecxz
shrl
pop
jg
sti
into
js
sahf
jp
ret
lods
jnp
inc
pop
push
call
shl
lret
jo
addr16
lods
mov
fldl
popa
lods
mov
sub
cmp
adc
ja
adc
outsl
stos
mov
jle
jge
mov
cwtl
inc
dec
in
sub
cmpsl
dec
je
fcmovb
mov
mov
xor
sub
jl
pop
mov
lock
jbe
pop
sub
pushf
jo
mov
ljmp
mov
mov
ja
add
repz
cli
out
aas
xchg
adc
bound
lret
in
jnp
shl
imul
icebp
neg
je
sbb
or
and
sbb
inc
aam
adc
jecxz
cltd
xchg
mov
std
pusha
bound
adc
mov
aas
std
adc
mov
hlt
xor
mov
mov
push
mov
in
loope
mov
test
hlt
cmp
stc
lock
dec
pop
xorl
rolb
cmpsl
cmp
cmp
movsl
inc
adc
or
bound
mov
and
or
and
lcall
rorb
mov
addr16
ret
pushl
or
pusha
sbb
sbb
out
pop
inc
add
enter
inc
mov
mov
or
sahf
xchg
test
jg,pn
call
addb
imul
std
sub
or
loop
movsl
shl
or
ljmp
testl
subl
aam
outsl
mov
pop
pop
jecxz
jl
cmp
fmull
das
xchg
jne
sub
js
xchg
les
fiaddl
inc
or
test
dec
pop
add
push
mov
repnz
dec
popa
test
and
adc
stos
arpl
jmp
mov
movsl
or
mov
pop
sub
pop
data16
push
adc
xorb
mov
popa
int3
icebp
push
push
lods
aad
mov
stos
or
rcrl
sti
push
insl
mov
shl
lahf
pop
xchg
outsl
or
fisubrs
sti
inc
push
mov
mov
add
dec
dec
fldenv
or
add
inc
idiv
adc
cmp
test
stos
pop
imul
add
sub
xchg
push
sub
daa
arpl
pop
push
xor
loope
movsb
insb
aaa
xchg
shll
mov
push
add
loope
xchg
movsb
pop
cmpsl
shrl
out
xlat
das
inc
push
dec
pop
lcall
cmp
cltd
pop
and
rcrl
aas
add
or
lods
lret
pop
lsl
fs
add
sbb
dec
mov
xchg
int3
mov
movsb
je
mov
sub
mov
or
int3
adc
in
jb
popa
sbb
dec
sub
cli
movsb
inc
shrb
mov
arpl
or
add
test
push
jo
aaa
lret
dec
xor
ret
fcmovu
fmull
ret
cli
mov
inc
jns
rclb
xorb
dec
dec
mov
aad
dec
mov
inc
mov
mov
jb
cli
test
lret
int3
mov
mov
dec
jecxz
xchg
xor
and
stos
push
sbb
or
inc
imul
aam
sbb
test
movsl
mov
inc
out
pop
sbb
pusha
and
fs
push
mov
add
pop
fidivs
mov
sub
jns
out
xor
xchg
test
mov
mov
dec
rcrb
jmp
mov
mov
aad
das
andl
daa
fiadds
mov
test
adc
sub
pop
lods
in
fisubs
fldcw
pop
mov
lods
push
aaa
int
jecxz
xchg
jo
mov
xor
lcall
ja
loopne
adc
pop
clc
div
add
fcompl
mov
mov
mov
xchg
add
bound
imul
std
ss
cmp
mov
js
rorb
mov
data16
lret
dec
lcall
fs
cmp
ljmp
loop
or
adc
dec
push
orl
pushf
stos
inc
and
lret
and
mov
pushf
push
lret
call
push
sub
fiaddl
fcomi
dec
ret
in
sbb
push
jmp
fwait
stos
jbe
das
xchg
fdivrp
imul
inc
and
mov
cwtl
movsl
sub
test
rcll
mov
push
mov
or
push
mov
inc
pop
cmp
push
mov
inc
adc
scas
push
dec
inc
popa
mov
mulb
stos
mov
decb
sbbb
pop
inc
xor
jl
adc
out
int3
xchg
repnz
in
movsl
push
jbe
xor
jae
and
pop
jbe
imul
sub
or
mov
cmpsb
xchg
xchg
popa
jle
in
enter
sbb
addr16
push
pop
repz
sbb
sbb
xchg
xchg
xor
and
push
aaa
out
inc
pop
push
repz
mov
mov
mov
ds
in
jbe
out
xlat
jp
or
jg
stos
je
andb
sub
xor
sub
push
nop
repz
mov
imul
jl
dec
lret
inc
sub
push
adc
dec
adc
mov
repnz
jne
mov
mov
mov
jno
cmp
imul
inc
faddl
pop
mov
add
add
int
aad
cli
mov
mov
sbb
sub
jnp
ljmp
outsl
xchg
push
sbbb
sub
sar
pop
out
clc
inc
shll
sbb
cltd
mov
orb
jb
lods
inc
jp
mov
mov
ret
mov
push
jge
sub
addr16
push
pop
clc
cld
mov
pushf
cmp
es
mov
sbb
pop
je
jne
lock
xlat
pusha
push
mov
mov
pop
cmp
mov
out
repnz
lret
xor
mov
popa
outsb
mov
add
ficompl
adc
mov
sub
cmp
mov
sbb
mov
mov
daa
pusha
mov
in
push
push
cmpl
in
mov
ret
insb
adc
push
sub
js
sub
dec
adc
pop
jb
std
mov
out
test
add
jns
push
push
divb
push
push
pop
mov
cmp
das
push
loopne
rorb
std
xchg
mov
fsubs
pop
pop
es
and
push
lret
sahf
pop
xor
mov
int3
ror
inc
lea
iret
addb
lds
popf
leave
es
sbb
lds
mov
jmp
push
push
jecxz
arpl
ja
add
sbb
fcmove
jge
add
xchg
scas
in
or
xchg
test
adc
adc
pop
les
lods
xchg
out
jb
pop
orl
les
sar
dec
jecxz
xchg
jae
inc
lea
sbb
and
pop
adc
cltd
fs
cmp
push
jae
cltd
lahf
push
js
mov
out
xor
push
xor
mov
mov
mov
loopne
call
and
fucomp
punpcklbw
scas
fsubrl
push
dec
pop
aas
or
pop
pop
testl
aaa
fs
pop
addr16
jne
lods
in
sbb
in
loope
rcll
pop
lahf
shufps
or
or
imul
mov
mov
clc
dec
scas
loope
push
lcall
insl
imul
dec
or
add
fcmovu
icebp
mov
mov
xor
add
insl
loopne
decl
sbb
cmp
jle
dec
jo
inc
jmp
inc
cld
pusha
cli
rorb
outsb
test
adc
adc
out
cmp
sahf
and
fbld
int3
mov
repz
pop
sbb
push
ret
sub
lods
or
xchg
mov
sub
jbe
xchg
mov
cmpsb
in
rcll
imul
jo,pn
subl
push
notb
aad
jge
pop
cmp
std
mov
pop
push
out
cmp
lahf
int3
andl
jno
popa
cmp
xchg
fwait
adc
cmp
adc
dec
jnp
lods
std
lret
inc
or
sub
and
push
lea
rcrb
jmp
mov
lret
inc
loopne
jnp
xchg
adc
xchg
jae
stos
movsl
ret
inc
addl
or
jb
loope
lahf
cwtl
add
xchg
xlat
rolb
fwait
arpl
fstps
test
test
push
jbe
sub
or
sub
loopne
sbb
jg
inc
aad
inc
fsubs
xchg
fadds
loope
nop
push
and
sub
enter
ljmp
lods
fsubp
xor
and
mov
or
dec
jecxz
cmp
jecxz
iret
bound
push
clc
push
cmp
mov
test
mov
adc
push
inc
or
int
jl
rol
sbb
and
sub
lds
jmp
mov
negb
in
dec
repz
fildl
or
aad
sub
ficomps
pusha
jne
jb
fadd
adcb
mov
mov
dec
jb
lcall
push
test
sub
pusha
pop
push
div
mov
adc
ss
fiadds
leave
jno
lcall
hlt
test
stos
and
icebp
ss
mov
mov
dec
mov
nop
jb
cs
ds
les
jb
xor
iret
scas
inc
xor
sub
push
push
cmc
cld
cmp
push
jno
in
pop
out
out
adc
adc
or
jle
addr16
ds
popa
mov
fdivs
cmp
cmp
insb
mov
adc
inc
arpl
int3
mov
push
int
jae
adc
gs
data16
aad
push
pusha
cmp
mov
adc
lock
xchg
pop
lds
mov
repnz
push
stc
jae
dec
flds
ss
lods
icebp
push
arpl
je
sbb
adc
sub
sub
and
xchg
cli
sbb
mov
imul
lcall
cmp
cmp
inc
lret
cmp
or
gs
sahf
lods
inc
push
sbb
cmpl
aam
sub
mov
leave
lret
mov
gs
ret
bound
stos
jne
in
pop
pop
jns
insb
sbb
popf
cmp
jb
mov
mov
push
xchg
pusha
push
test
out
or
test
pop
xchg
in
lret
push
cli
ljmp
lahf
ss
pop
gs
daa
outsl
cmovnp
mov
imul
int3
inc
sub
jge
or
push
mov
mov
fcomi
ret
mov
mov
dec
jecxz
cmp
or
push
orl
add
mov
cmpsl
xor
add
mov
cmp
or
arpl
fsubp
pusha
jbe
dec
push
xchg
mov
add
insl
xor
cmpsl
push
testb
xchg
movsl
jae
mov
movsl
cli
lds
adc
and
enter
movsl
fisttpll
cmp
in
adc
lock
lahf
push
mov
mov
repz
jb
cmp
lea
jno
dec
test
inc
js
sub
sbb
notl
imul
popf
mov
mov
movsl
push
or
and
sbb
lock
iret
sub
out
sahf
lea
add
sub
sub
repz
in
enter
mov
pop
add
dec
sbb
mov
leave
paddb
shll
pop
test
push
imul
loopne
out
sar
ss
pop
test
push
test
xor
push
lahf
inc
out
nop
je
test
das
mov
push
xchg
je
sahf
jp
stc
mov
test
xchg
ret
fsubl
dec
fadd
fmull
pop
xor
scas
sub
lcall
out
xchg
cmpb
sbb
stos
mov
add
xor
jae
in
add
jb
repz
mov
xor
out
jo
jecxz
push
mov
fcomps
jmp
dec
ljmp
mov
fwait
loopne
dec
adc
out
outsl
sub
daa
xchg
mov
das
nop
mov
xlat
inc
fmuls
popa
add
loop
dec
jg
inc
jns
xchg
test
dec
xchg
stos
insb
arpl
jg
pop
and
xchg
push
lock
push
movsb
pushf
loopne
cltd
addr16
insl
and
push
mov
frstor
pushf
fs
in
into
fldenv
je
xor
lds
jno
pop
mov
mov
enter
pop
cmp
cwtl
sbb
mov
lret
out
xchg
add
fdivrp
mov
outsb
xchg
mov
jp
inc
dec
push
in
adc
mov
adc
shll
push
and
xor
xor
push
stc
aad
dec
imul
jl
call
filds
dec
mov
cwtl
mov
inc
xchg
jge
outsl
pusha
fdivl
jge
addb
pop
out
xor
xchg
push
bound
jg
ret
not
pop
or
in
mov
dec
pop
mov
sub
stc
pusha
int3
inc
test
mov
fmul
cmp
fistpl
push
sahf
cmp
orb
data16
fimull
or
pop
jbe
sbb
and
xor
test
lahf
jmp
push
mov
mov
fs
cmp
enter
push
gs
stos
cmc
sbb
sub
mov
push
add
or
dec
mov
and
mov
pop
xchg
mov
mov
or
adc
hlt
lret
cld
push
push
pop
fwait
or
sbbl
or
cli
fidivs
cld
cs
dec
adc
scas
mov
bound
fs
stos
out
adc
mov
jmp
repz
lds
enter
rcll
pop
std
sub
mov
jne
cmpsl
daa
and
stc
andb
jnp
aaa
cmp
adc
lods
ficoms
push
pop
dec
pushf
pop
jns
out
and
pop
subb
mov
mov
sub
push
pushf
mov
lret
test
nop
stc
fsubs
and
mov
jmp
mov
mov
push
fistpll
adc
sub
xor
and
insb
int
bound
ret
in
ds
pop
mov
inc
dec
fs
lcall
jmp
or
ret
lea
inc
scas
mov
xchg
dec
aad
or
cltd
cmpsl
xor
jbe
pop
xor
mov
push
and
std
pusha
bound
mov
dec
imul
clc
stos
adc
cmp
lahf
pushf
pop
sbb
fidivl
push
xchg
add
stos
lret
ror
push
mov
mov
test
push
xor
add
jne
add
inc
pop
mov
aaa
ret
popa
inc
inc
in
mov
push
fxch
inc
lret
mov
fs
std
into
mov
mov
pop
in
inc
cmp
aas
or
sbbb
iret
aam
in
or
into
out
mov
cwtl
cmpl
mov
sbb
xchg
pop
pop
mov
in
nop
cmp
mov
jbe
repnz
cltd
adc
sahf
add
mov
scas
dec
inc
out
mov
mov
mov
rolb
iret
xor
pop
test
in
std
jmp
out
add
jmp
scas
or
iret
mov
dec
mov
jecxz
jnp
pop
add
jne
cmp
addb
jno
das
cs
add
lret
adc
fldl
xacquire
cmpsl
nop
mov
fdivrs
jmp
popf
add
adc
fisubs
shl
mov
cmp
pop
adc
add
into
or
adc
and
outsl
push
jo
cltd
or
cwtl
push
in
cmp
stc
add
mov
or
push
adc
sti
adc
xchg
xchg
jp
fdivl
jmp
pop
psubusw
jb
and
out
mov
int
xchg
cmpxchg
xor
repnz
arpl
fstps
stc
aaa
bound
or
out
adcl
or
jbe
or
ror
inc
cmc
not
and
daa
and
push
xlat
cmp
xchg
fistl
jne
xor
xchg
inc
stos
imul
mov
mov
arpl
rcr
arpl
xchg
dec
push
add
scas
pop
push
inc
ret
jb
lret
mov
aad
aad
inc
mov
imul
cmpsb
dec
incb
push
test
ret
fldt
push
mov
test
mov
popf
add
ss
pop
mov
xchg
sub
or
repnz
inc
das
ljmp
mov
dec
arpl
lea
lret
adc
loop
vmovaps
adc
js
sar
insl
loopne
ljmp
mov
dec
dec
sbb
and
sbb
scas
xchg
mov
pop
dec
int3
or
fcompl
sar
ja
stc
test
out
jg
pop
fistps
add
push
sub
rcr
ja
add
shlb
inc
xchg
dec
cmp
or
sbb
in
test
ret
inc
cmpsb
das
adc
dec
in
out
and
and
dec
add
out
pop
xor
add
in
xchg
cmp
or
xor
scas
jns
mov
mov
and
ret
scas
dec
cmpsl
fsts
add
mov
js
xchg
daa
popa
push
int3
subl
in
sbb
popf
jae
sbb
insl
pop
fsubrs
jle
mov
std
pop
sub
fisttpll
call
xor
fisubrl
hlt
mov
jnp
outsl
jbe
dec
xchg
popf
insb
nop
push
enter
dec
aaa
or
inc
xchg
cmp
lods
adcb
rolb
jle
nop
movsl
jnp
ret
sub
lcall
sbb
inc
addr16
dec
imull
js
daa
cwtl
sahf
xor
sbb
inc
stos
and
mov
jle
mov
ret
sub
arpl
aaa
fisubrs
or
mov
mov
fwait
jecxz
mov
add
mov
sarb
mov
addr16
xorl
ds
lods
cmpsb
jbe
dec
sub
sahf
jns
pop
push
test
xor
pop
inc
fists
xor
sbb
stc
adc
nop
insl
jmp
mov
into
pop
xchg
pop
xor
pop
enter
cmp
add
cmp
outsl
lods
insb
mov
push
lea
lret
fistpll
aaa
jle
jp
das
test
jbe
insl
pop
fcoml
jg
jnp
mov
or
fdivs
cmp
arpl
pop
jae
cmp
cmp
pop
pop
dec
cmc
push
and
dec
dec
pushf
sub
shll
js
jb
bound
mov
pop
push
popa
test
out
mov
test
sbb
mov
cmpsb
sub
rcrb
pop
out
dec
imul
mov
stos
xor
xor
shll
ror
imul
jge
mov
je
imul
add
mov
leave
cmp
or
mov
mov
mov
push
mov
cmpsb
dec
int3
test
arpl
fiaddl
popa
and
cli
sahf
push
xor
rcrb
nop
cmp
test
jo
cmp
pop
iret
std
sti
mov
or
jns
pusha
js
sbb
into
sub
negl
dec
sbb
movsl
jo
sti
cmpsb
jo
or
add
jl
jbe
cmp
jbe
and
dec
cmpsl
xor
mov
jle
sbb
xchg
call
adc
mov
imul
faddl
gs
mov
and
test
adc
mov
xchg
or
push
jno
and
sbb
in
add
pop
mov
fs
push
test
adc
lcall
int3
addl
or
loopne
or
lret
add
scas
xchg
ja
dec
mov
stc
movsl
mov
xchg
cmp
mov
je
lret
mov
push
lods
pop
es
sub
ret
das
scas
jmp
pop
xchg
mov
lock
lea
pop
xor
nop
xor
scas
and
mov
xor
mov
mul
push
sub
and
mov
and
push
movsl
cs
cmp
ds
inc
mov
imul
addr16
xchg
and
add
push
aam
ficoms
jne
or
out
cs
out
inc
pop
mov
ljmp
js
jne
stos
push
or
mov
mov
and
mov
daa
popf
shrl
sarl
cwtd
stc
add
mov
aam
sbb
sbb
adc
sbb
clc
insl
pop
in
jecxz
fimull
jecxz
aaa
push
adc
xchg
pop
fstps
sahf
xchg
sbb
fimull
test
test
dec
dec
gs
sahf
add
and
test
arpl
pop
pop
adc
cltd
and
mov
test
mov
dec
mov
aas
inc
in
add
stc
ret
sbb
ja
sahf
sbb
xchg
mov
pop
out
pop
sub
test
lret
clc
inc
test
adc
mov
mov
scas
addr16
lea
dec
gs
pusha
adc
js
out
pushf
rol
jne
push
mov
or
insb
sub
sbb
hlt
in
movsb
mov
inc
mov
jne
or
lcall
lcall
cmp
xor
inc
sbbl
adc
in
push
insb
xchg
cmp
dec
vpmaddwd
int3
sub
scas
insb
ss
fists
cmp
mov
movsb
jno
sahf
jne
mov
push
jno
test
sbb
ds
es
int
mov
test
mov
scas
pop
dec
mov
add
and
roll
pop
pop
arpl
dec
ds
outsl
add
xchg
sti
jle
stc
pop
cmc
sbb
push
pushf
add
in
mov
arpl
scas
or
movsl
and
sti
shrb
cld
dec
mov
push
mov
pop
xor
mov
jmp
add
fucomip
out
gs
sbb
add
and
mov
mov
in
sbb
shl
loopne
sbb
xchg
loopne
dec
push
imul
in
mov
loopne
aaa
pop
std
sub
adc
push
mov
and
sub
sahf
lds
cmc
in
lret
add
mov
sahf
loop
push
xor
cmp
sbb
push
or
push
scas
or
into
adcb
rcl
xor
dec
cld
xor
call
sub
outsb
clc
bound
roll
hlt
fcmovnu
mov
pop
mov
subb
bound
stos
les
lret
in
xor
in
outsb
scas
es
ror
push
push
ss
sub
es
or
lds
mov
push
xor
cmpsl
out
add
es
mov
jle
in
dec
pushf
ret
sub
je
add
sub
sbb
push
jge
jl
inc
push
mov
push
jg
fisttpl
jg
aas
enter
pop
je
mov
ljmp
inc
insl
mov
imul
and
xlat
mov
scas
lcall
shl
popf
aaa
adc
scas
test
imul
or
aas
jp
sbb
lea
insb
cld
les
cmpsl
pop
xchg
lret
and
repnz
mov
icebp
rolb
adc
xchg
loop
adc
ljmp
sbb
or
cmc
push
dec
dec
loope
xor
lock
outsl
mov
pop
push
out
movsl
and
daa
not
adc
mov
adc
int3
pop
inc
mov
loop
xlat
into
scas
pop
movsl
sub
lcall
fldcw
jo
lea
sub
addb
jae
test
inc
rcr
adc
mov
jmp
add
mov
mov
fsubl
push
xor
jbe
pop
adc
push
test
lds
xor
sub
add
jg
test
xchg
mov
cmp
adc
push
cld
lret
enter
imul
popa
cmp
ja
cltd
fisttpl
movsl
push
xor
lcall
dec
mov
push
mov
ja
jl
std
jecxz
xor
lcall
leave
and
shrl
pop
test
mov
cld
hlt
lcall
xchg
pop
gs
lock
and
xchg
and
fldl
out
dec
daa
push
test
mov
scas
xchg
and
cmp
ljmp
out
add
xlat
xor
pop
jmp
and
xorl
lock
mov
into
sbb
mov
fs
lea
call
or
arpl
push
bound
pop
mov
or
ljmp
popf
sahf
push
loopne
ja
sahf
pop
stos
fbstp
cmp
ss
push
jl
fs
sub
pop
js
lds
loope
into
das
sub
data16
arpl
cmpsb
add
loope
cli
insb
cmp
rol
sub
es
jbe
push
pop
pop
pop
sbbb
stc
add
xchg
mov
stos
jge
mov
test
mov
out
aas
mov
xchg
xchg
pop
mov
pop
xor
adc
cli
pop
mov
icebp
inc
xor
and
push
mov
shll
xchg
xchg
jmp
push
sub
sbb
lea
int
mov
sub
cli
test
push
mov
cmp
mov
sbb
and
xchg
add
xorl
int3
xor
xchg
cmp
push
popl
les
fcmovnbe
xor
jns
sbb
push
insb
mov
jb
daa
es
mull
adc
out
daa
add
pop
inc
jb
jecxz
stos
cmpsb
cld
data16
pop
stos
fidivrs
lea
add
push
push
cmp
jmp
push
mov
xchg
adcl
ss
cmp
lahf
add
sub
mov
mov
dec
cmp
jae
jo
cmpsl
and
mov
mov
pop
in
pop
loope
push
and
sti
dec
leave
mov
mov
loop
ret
lret
mov
inc
mov
out
sbb
cmc
jnp
movsl
loopne
mov
repnz
fwait
cmp
dec
lahf
sahf
and
add
aad
pop
test
aam
push
enter
test
sub
lahf
push
je
pop
fcoms
fbstp
int3
cmp
or
mov
push
dec
loopne
adc
cwtl
or
xchg
xchg
lcall
pop
push
and
adc
in
mov
mov
xlat
sbb
cltd
das
or
pop
mov
mov
loop
daa
jl
test
hlt
and
test
cmpsb
subb
and
add
mov
inc
jae
jl
or
jl
sbbb
bound
xlat
pop
adc
add
cli
jns
cmc
sub
scas
xor
adc
out
leave
in
and
inc
push
arpl
pop
int3
add
mov
bound
jb
ja
jl
xor
and
enter
xor
out
xchg
cwtl
and
enter
std
dec
jp
sub
lea
lcall
sub
cld
js
cmc
in
pop
pop
into
cwtl
jle
adc
je
or
mov
mov
push
sub
dec
xchg
movsl
out
cmc
xchg
sub
ds
ds
ficoml
mov
inc
push
mov
jg
test
adc
into
mov
add
dec
mov
push
inc
inc
push
mov
add
push
into
inc
push
jb
inc
je
add
sti
int
inc
aaa
fadds
shlb
sub
in
sbb
out
popa
mov
lods
rclb
mov
mov
sbbb
pop
in
or
outsb
sbb
mov
in
add
jo
out
xchg
pop
jnp
and
pop
js
es
ftst
int
and
clc
in
aaa
call
mov
pop
inc
scas
imul
xchg
lret
aam
add
imul
or
and
cmp
test
imul
repz
bound
popa
or
out
and
sub
xor
fbld
pusha
call
psllq
lods
xor
pop
adc
or
jns
inc
leave
cmp
cmp
pop
inc
cltd
sbb
add
fs
test
or
popf
xchg
sbb
xchg
mov
ds
lock
mov
mov
adc
jmp
out
push
inc
lods
popf
cmp
sub
mov
ss
pop
iret
xor
ret
add
out
fmuls
lods
and
sahf
jns
pop
mov
inc
push
ss
sbb
in
out
xchg
js
repnz
test
lahf
cwtl
pop
js
fldt
push
pop
dec
xchg
rorb
cmp
fiadds
sub
nop
lahf
hlt
add
rcll
dec
mov
cmpsb
mov
sbb
jmp
in
sub
jns
jb
add
pop
cs
inc
add
sarl
pop
mov
and
in
xchg
repnz
xchg
fs
adc
ja
jge
pushf
lock
mov
mov
mov
pop
lock
mov
iret
lods
adc
inc
jne
inc
cmp
je
adcb
scas
add
movsb
mov
mov
subl
cmp
add
stc
ljmp
shll
cltd
add
add
outsb
pop
lods
pop
test
test
xorl
xlat
out
or
xchg
fs
ss
or
mov
pop
pop
dec
lods
and
mov
mov
mulb
aad
xor
mov
mov
xor
sub
jl
outsb
cltd
fs
mov
cmp
mov
mov
in
jl
fisubrs
adc
and
orb
shl
stos
bound
jmp
test
ja
clc
adc
aad
bound
mov
and
ljmp
mov
jb
mov
xor
mov
pop
outsl
jae
int3
lahf
mov
inc
clc
adc
add
mov
imul
jne
shr
scas
das
cli
rcrl
push
fwait
xchg
add
sbbb
mov
xchg
fsubs
imul
cli
rol
mov
inc
lret
arpl
pop
jne
push
in
stos
jg
pusha
jecxz
fdivrl
mov
xchg
lahf
icebp
out
jg
mov
xchg
fildll
mov
push
out
stos
mov
mov
pop
cs
in
test
clc
ldmxcsr
lcall
pop
sub
int3
sbb
jg
pop
mov
mov
mov
push
pop
sbb
outsl
cmp
nop
loope
jge
dec
push
shlb
xchg
out
and
push
mov
shl
aaa
sub
and
push
jnp
add
test
mov
stos
dec
das
mov
add
jae
bswap
jle
mov
in
push
sbb
push
adc
lcall
pusha
xorl
fisubrs
sub
jbe
mov
icebp
sbb
rol
dec
xchg
sbb
lods
dec
jo
xchg
ret
aaa
pop
add
pop
or
fidivl
scas
fs
adcl
add
xchg
jle
jnp
mov
mov
jecxz
loope
jbe
iret
push
clc
leave
lock
xchg
mov
dec
les
lea
adc
or
aad
in
out
ret
test
int
out
ret
mov
cmp
or
dec
mov
inc
pop
mov
mov
push
mov
das
push
inc
push
cltd
imul
push
add
xor
xlat
xchg
or
scas
scas
fdivs
mov
push
lahf
lret
add
fiaddl
add
and
push
cmpsl
or
or
add
pop
aas
clc
out
add
lock
into
imul
sarl
jne
mov
push
add
out
mov
insb
inc
ret
mov
mov
xchg
test
xor
mov
dec
mov
pop
dec
sbb
cmpsl
add
lahf
lea
sbb
jmp
adc
jno
pop
pop
xor
pop
orl
bound
int
add
jmp
in
sti
fdivs
jnp
sbb
or
sub
cs
ss
dec
xlat
test
and
adc
ds
hlt
cltd
adc
fcoml
jb
cmp
call
dec
dec
jg
pop
xor
and
outsb
in
je
rorl
adc
push
push
loope
jl
mov
xchg
and
imul
ds
test
fwait
jo
data16
sbb
enter
repnz
in
sbb
das
push
jb
in
cmp
out
and
das
fcmovnu
xchg
mov
pop
stc
inc
cwtl
mov
xrelease
inc
mov
lods
mull
jl
xlat
int
inc
adcl
jbe
add
push
insl
loop
loope
add
outsb
xchg
inc
jae
xor
mov
cmp
mov
scas
sahf
vcvtpd2psy
pop
pop
fs
scas
mov
push
mov
ret
jo
xchg
loop
sbb
and
dec
pop
popf
jbe
and
cld
jecxz
pop
sub
push
cmp
leave
inc
test
scas
mov
popf
cmp
jo
mov
pushf
or
imul
jno
cmp
adc
add
js
test
push
daa
pushf
dec
jmp
mov
xchg
xchg
mov
shl
dec
nop
pop
adc
add
xchg
fildll
icebp
xor
pop
ror
outsl
jbe
mov
add
mov
and
and
jecxz
inc
div
jecxz
push
xchg
es
cmpb
fisttpl
sbb
jg
in
cmp
fildl
push
and
sbb
mov
push
cmpsl
repz
push
faddp
shrl
roll
mov
jmp
icebp
or
pop
scas
and
outsl
mov
jbe
scas
mov
scas
xchg
std
ljmp
fbld
pusha
int
push
cs
je
and
jnp
inc
push
nop
push
repnz
mov
insb
adc
pop
jmp
test
imul
test
xchg
es
and
loop
data16
jge
nop
pop
or
les
mov
int3
out
mov
sahf
push
sbb
daa
sahf
aaa
in
test
add
push
aaa
mov
cltd
pop
dec
sub
jg
jnp
outsb
mov
xor
jno
lret
dec
cld
sbb
stc
mov
lret
xchg
pushf
arpl
push
lock
lods
cli
test
cmp
xor
imul
sub
mull
and
inc
push
sbb
mov
cmpsb
pop
dec
inc
dec
in
lcall
jnp
sub
pop
movsl
mov
mov
add
mov
lock
and
mov
test
sub
sbb
jge
popf
pop
xchg
imul
scas
push
jge
sbb
daa
push
cmp
cmpsb
pop
xor
xchg
jae
dec
inc
lea
repz
es
xchg
into
dec
hlt
sub
test
sbb
mov
cld
aaa
orl
addl
lahf
push
lret
repnz
mulb
mov
mov
inc
shlb
sarb
pop
dec
jmp
adc
rcrb
mov
pop
aam
call
fiaddl
inc
adcb
pop
jp
xchg
push
loopne
cld
or
arpl
xorl
sbb
and
imulb
push
loop
lret
inc
hlt
aaa
inc
dec
shl
mov
imul
push
aas
mov
sub
dec
ret
mov
aaa
test
adc
lods
xchg
cmpsb
andb
push
mov
mov
cmp
xor
and
mov
leave
cmp
orb
xor
and
inc
sub
adc
jno
aas
mov
add
rorl
inc
insl
jecxz
sub
lea
ret
dec
ljmp
daa
orl
roll
xor
dec
in
and
out
ret
or
fmull
mov
push
sahf
cmp
sar
pop
add
ds
bound
jo
inc
rolb
call
cltd
movsb
xor
or
adc
cmp
jne
xchg
cmpb
mov
out
push
fnstcw
rcll
xchg
cld
mov
pusha
jne
sarl
mov
mov
lock
and
rcl
pusha
cmp
jae
enter
test
ljmp
xlat
xchg
mov
dec
lock
fadds
repnz
jmp
in
es
dec
icebp
mov
jne
adc
inc
incb
fwait
mov
jne
icebp
mov
test
jmp
stos
sbb
incb
inc
cwtl
outsl
dec
pop
jo
inc
ret
popa
call
mov
push
test
addr16
or
out
dec
lea
rcll
cmp
inc
wrmsr
adc
mov
lea
andb
cmpsb
jae
cmp
sub
and
mov
pusha
pop
inc
xchg
mov
push
mov
and
mov
fsincos
and
mov
in
stos
pop
lret
repz
cmpsb
push
pop
mov
stc
mov
jne
mov
mov
or
dec
sbb
rolb
or
mov
mov
sahf
push
push
mov
mov
aam
sbb
mov
repz
iret
jno
xor
cwtl
and
mov
idivl
psubq
jne
xlat
xor
stos
shll
pop
fcompl
mov
dec
insl
push
xor
test
add
daa
jmp
or
pop
push
shr
mov
push
mov
out
push
inc
xor
mov
push
pop
les
incl
aam
push
inc
popf
jecxz
adcb
sbbb
mov
fs
lcall
pop
cmovae
fs
lods
inc
lods
dec
iret
js
xor
fsubrs
pusha
mov
loope
jbe
jns
push
outsb
mov
sbb
mov
adc
ds
sahf
rorb
mov
jg
xchg
mov
sub
insl
cmpsl
mov
sarb
ss
nop
sbb
fcomps
test
gs
jne
fwait
jae
and
adc
mov
push
aaa
pop
out
adcb
sub
pop
movsl
mov
lods
ret
push
adc
xchg
and
mov
cmpsb
les
pop
cmp
clc
loop
push
decl
mov
sbb
shrl
ljmp
popf
sub
xor
scas
or
ljmp
pop
hlt
sub
cwtl
fidivs
out
cmpsb
sub
pop
decl
xchg
ja
test
sar
mov
mov
adc
xor
mov
leave
idivl
push
enter
sub
push
xchg
je
xchg
pop
dec
leave
xor
or
pushf
xchg
and
loop
mov
mov
push
aas
cwtl
icebp
lret
enter
pop
sbb
les
cmp
ror
lret
or
lods
bnd
das
les
jg
xchg
ss
add
add
mov
push
cwtl
imul
xchg
mov
push
mov
ret
jnp
mov
test
cli
loope
xchg
and
adc
sbb
leave
outsb
push
jp
popa
jno
push
push
daa
shrl
rol
ds
jnp
xchg
push
jmp
sbb
xlat
mov
pop
sbb
in
movsl
pop
and
in
pop
mov
jnp
loop
and
jecxz
inc
loope
sbb
mov
ja
sub
int
ficompl
mov
lods
fwait
xor
outsl
jo
cmp
shrl
mov
and
push
rcrl
lcall
fsubrs
jle
or
mov
stc
fwait
xchg
jp
lock
mov
fldcw
mov
mov
inc
jne
mov
ficoml
fadds
xchg
mov
insb
in
ds
mov
mov
leave
push
jmp
repnz
xchg
mov
mov
scas
adc
ljmp
lcall
test
cld
addr16
rclb
mov
xchg
adc
xor
test
and
xlat
test
imul
clc
xchg
notb
outsl
push
data16
jg
mov
in
movsb
mov
popa
xchg
mov
movsb
push
ss
shlb
lcall
stos
call
loope
add
dec
int3
mov
test
mov
sbb
jg
lret
jmp
notb
adc
pop
leave
sbb
data16
inc
fwait
es
fisttpl
mov
out
mov
push
in
addr16
jo
test
addr16
les
mov
scas
dec
in
loope
mov
cmp
lret
jns
add
sub
aad
gs
mov
mov
push
jg
lahf
jp
and
mov
mov
icebp
cmp
jns
pop
xchg
leave
das
mov
sub
adc
cmpsl
lock
data16
xchg
xor
push
mov
hlt
pop
mov
pusha
scas
pushl
daa
shlb
cmp
iret
les
and
inc
add
popa
iret
mov
leave
cmp
sub
add
outsl
mov
xchg
faddl
jbe
mov
in
adc
add
enterw
jecxz
in
aas
stc
add
cmp
jb
inc
ret
out
jg
mov
mov
in
das
pop
iret
jmp
and
cs
pop
push
mov
pop
cmp
xchg
test
pusha
pushf
and
add
vsqrtpd
adc
add
mov
add
mov
sub
push
push
pop
jo
jmp
ja
xor
shlb
int3
mov
aam
jmp
mov
xor
xor
lret
sub
rcl
and
push
fnsetpm(287
scas
mov
fistps
adc
inc
insb
dec
mov
adc
pop
mov
add
jge
jl
fnsave
in
ret
repz
mov
push
sub
and
addr16
aaa
lahf
sbb
xchg
add
lcall
decb
in
test
pause
push
cmpsb
mov
lahf
in
int
mov
stc
ljmp
or
cmp
nop
out
mov
je
js
mov
or
scas
out
jp
out
in
fistpll
adcl
aaa
cmp
mov
push
sbb
testl
outsb
adc
stos
repnz
push
shl
or
push
ret
xor
mov
shrl
adc
mov
cs
aad
repz
jmp
dec
sbb
add
aam
ret
ljmp
cmp
xchg
jmp
jmp
mov
mov
data16
les
test
add
pop
xor
adc
pop
xchg
add
inc
std
es
and
das
cmp
xchg
notl
imul
add
cltd
sbb
stos
fmuls
gs
ficoml
jl
pop
adc
ljmp
jmp
loope
and
test
das
arpl
ds
in
idivb
shrl
jg
pop
pop
outsb
adc
imul
mov
lds
cltd
xchg
test
mov
mov
insl
and
leave
add
jmp
cltd
and
ljmp
pop
repnz
xor
fstpl
or
hlt
jmp
add
mull
je
sub
inc
push
aad
popa
adc
pop
mov
jle
fiadds
sbb
adc
jne
je
and
dec
lcall
fnstsw
in
bound
mov
push
shl
notb
or
fcoms
fdivrs
sbb
mov
sbb
mov
sub
jae
lds
dec
sbb
push
sbb
inc
out
inc
jmp
cld
shll
daa
bound
jne
divl
sbb
pop
mov
stos
jge
test
fadds
cmc
shll
add
jne
loop
ds
test
sbb
insb
aam
mov
jae
cmpsl
imul
mov
testb
sub
out
jle
mov
shlb
mov
inc
sub
xchg
sbb
vmovddup
imul
ljmp
movsb
cmp
mov
mov
fisubrl
in
inc
sub
fs
xchg
xchg
or
ret
sub
jno
test
xchg
aas
and
je
and
shll
bnd
xor
shll
popf
rorl
xchg
aad
cmp
mov
fwait
in
push
aaa
adc
mov
xchg
or
out
mov
adc
and
hlt
outsl
into
push
scas
dec
mov
call
test
stc
jle
mov
jno
dec
fisubrs
adc
mov
jmp
enter
out
mov
jp
sti
mov
jp
adc
mov
scas
adc
mov
xchg
out
xor
xchg
jo
mov
push
xchg
jmp
or
arpl
addr16
cld
lea
cld
pop
mov
jo
push
lcall
repnz
mov
lods
orl
arpl
dec
mov
lret
fcmovu
out
jmp
sarb
cmc
ss
mov
sub
jecxz
pop
fistpll
dec
cli
fbld
nop
xchg
lods
sbb
inc
add
in
mov
add
movsl
jbe
call
mov
cwtl
es
xor
into
push
inc
test
pop
sahf
xchg
pop
cmc
and
push
in
mov
stos
mov
pop
pop
xchg
lods
fdivrp
test
dec
lea
in
jge
ficomps
lret
lcall
and
xor
xor
out
mov
push
push
mov
sahf
scas
mov
and
add
gs
lock
pop
repz
lret
mov
lds
xor
pushf
inc
loop
mull
fs
or
into
xor
inc
xlat
inc
jg
sbb
cmp
pushf
jne
mov
or
cmp
in
js
inc
clc
out
bound
push
mov
int
xor
mov
mov
test
mov
mov
and
in
insl
cmp
add
sub
jle
repz
push
sbb
mov
push
jmp
add
daa
loope
insb
sti
pushf
sbbb
jp
scas
jg
and
add
mov
insb
je
fldcw
xchg
out
xchg
sub
xor
push
fnstsw
jo
cwtl
test
jnp
or
cmp
push
dec
jge
testl
lods
fstl
out
cmp
dec
les
rorb
mov
sub
int
xchg
mov
stc
xchg
ret
xchg
mov
cwtl
cmp
rcl
jg
pop
sbb
jb
orb
and
gs
dec
rcll
add
dec
xchg
sbb
jle
mov
push
cmp
cmp
cld
push
fcoms
add
iret
sub
hlt
inc
push
fs
sbb
mov
aaa
jbe
lret
xor
mov
lret
mov
add
xchg
xchg
xchg
mov
mov
jg
pop
addr16
xchg
aaa
sub
pop
ds
dec
pusha
popf
xchg
int
mov
push
push
test
adc
jecxz
dec
mov
xor
xchg
outsl
adc
ss
aas
call
fwait
cmp
pop
into
push
fildll
bound
jl
cmp
aaa
xlat
add
imul
inc
jge
dec
jg
imul
push
inc
mov
imul
xchg
xchg
aam
pop
enter
roll
aaa
add
dec
sbb
and
mov
add
dec
fisubl
iret
jo
xlat
mov
xor
rcll
mov
cwtl
push
xlat
ja
js
lahf
jo
push
add
loopne
cld
scas
movsb
add
xchg
test
and
rcll
lods
sub
mov
mov
dec
stos
outsl
test
inc
repnz
xchg
ficoms
shll
lock
adc
mov
andps
xchg
lods
outsl
mov
aam
rcrb
sbb
and
pop
lcall
icebp
leave
jmp
add
in
insb
orl
cli
jbe
lods
bound
fisttpll
xchg
sub
or
pusha
and
addr16
int
and
movsl
fdivs
cmp
imul
mov
xor
cld
decl
push
repz
adc
jne
hlt
inc
jmp
mov
adc
cmpsb
pusha
sub
testl
cld
add
hlt
push
les
mov
out
dec
mov
lds
sbb
lds
or
imul
jae
adc
gs
cs
xor
loopne
in
xor
cwtl
jl
jne
mov
repnz
in
inc
ss
add
inc
js
or
adc
and
cmova
pop
xor
xchg
mov
xchg
add
popf
mov
dec
fisubl
lret
fdivs
dec
add
aaa
inc
jne
sbb
imul
in
cmp
mov
dec
pop
lods
lret
jno
xchg
int3
push
pop
mov
clc
mov
cmp
repz
or
ljmp
adc
mov
popf
add
dec
cmp
mov
stos
out
mov
push
loopne
pop
addr16
push
iret
std
adc
mov
fisubrs
in
test
lret
sub
test
inc
fs
sub
sbb
pushf
cli
out
sub
cmc
fnstcw
aad
out
mov
push
xchg
mov
xor
mov
add
add
in
icebp
sbb
push
and
push
test
in
sbb
or
addr16
lcall
fsubrs
jecxz
dec
cmp
inc
push
jb
cmp
add
daa
std
jno
push
xor
adc
and
push
mov
scas
adc
cltd
sahf
outsl
movsb
pop
mov
add
jbe
xlat
lret
cs
xchg
sbb
lods
add
mov
mov
cli
pop
dec
pushf
cmp
add
fmull
cli
mov
mov
insb
fldl
dec
daa
adc
test
jmp
ss
sub
shr
dec
xchg
xor
leave
pop
jne
jne
cltd
sub
rorb
inc
dec
sub
fistl
dec
pushf
inc
dec
nop
ret
iret
jl
pop
sbbb
cli
enter
pop
push
int
rolb
mov
mov
or
jl
in
cmp
in
fsubrl
scas
cld
mov
xlat
in
jle
xor
pop
mov
das
loope
jns
ds
cli
lods
test
inc
xchg
pop
mov
xchg
mov
sub
sbb
into
cwtl
scas
xor
popa
adc
clc
sub
adc
in
inc
pop
pop
dec
pop
jp
outsb
shrd
ss
push
mov
lret
fistpll
sub
mov
sub
stos
pusha
dec
clc
dec
jo
leave
jge
mov
push
aas
mov
jmp
fidivrs
mov
mov
push
xor
jbe
mov
mov
lea
lcall
arpl
popa
mov
out
std
fsubr
xchg
push
dec
sub
or
mov
fisttpll
push
iret
inc
in
lahf
test
jecxz
mov
mov
jbe
push
mov
popa
cmp
xor
mov
adc
push
das
scas
addb
fsubs
popa
int
jno
fcomi
dec
xchg
ret
lods
push
scas
cmpb
in
aas
lea
nop
clc
push
in
call
insb
mov
mov
mov
xchg
sti
out
in
pop
lcall
sub
push
cmp
int
dec
ljmp
and
fistpl
ffree
push
ljmp
add
popf
or
sub
push
movsb
icebp
jb
pushf
stos
ljmp
enter
movsb
cmp
in
pop
pop
std
and
sub
cmp
push
ljmp
shrb
cmp
std
in
das
sti
add
dec
rcrb
mov
push
lcall
insb
xchg
jge
cmovbe
cwtl
ss
fldenv
cmpb
sub
and
enter
ljmp
jnp
repnz
jmp
xchg
sub
inc
pop
xchg
dec
inc
enter
or
push
inc
pushf
bound
push
out
cmc
adc
mov
mov
fisttpl
fwait
jae
popf
daa
daa
inc
mov
stos
scas
sbbl
aam
mov
inc
inc
add
rorb
lea
cmc
jecxz
inc
mov
dec
adcb
insl
adc
cmp
arpl
pop
rolb
rcrb
nop
cwtl
rorl
repnz
dec
hlt
inc
adc
adc
notb
xor
addb
mov
jb
cmpsl
mov
call
mov
mov
inc
xor
xchg
mov
sbbb
sarl
push
mov
inc
cmp
xor
pop
mov
jl
enter
adc
inc
lods
xor
lods
call
jno
sbb
inc
pop
jno
daa
imul
mov
fstpl
leave
dec
adc
xor
jmp
in
ljmp
bnd
test
ficomps
push
push
cwtl
aad
dec
dec
pop
pusha
cmp
cs
sub
mov
cmp
push
test
sbb
and
pusha
dec
lahf
push
mov
pop
and
xchg
std
mov
jbe
sbb
sbb
fdivrl
dec
mov
cmp
ds
addr16
push
test
adc
loopne
cmc
cmp
or
and
pop
and
pushf
lds
sub
jl
fadd
mov
jno
mov
push
dec
shr
test
and
mov
xor
pop
insl
les
jae
lods
shl
xchg
add
pop
push
xlat
stos
in
xchg
in
outsl
mov
cmp
cmp
out
or
ficoms
orl
in
imull
jl
jb
mov
xchg
repz
jp
or
scas
inc
mov
das
sub
jbe
cld
push
clc
push
xchg
sub
lods
aad
inc
mov
dec
lcall
jl
gs
adc
mov
sbb
cwtl
cltd
in
jno
leave
inc
pushf
add
adc
pop
scas
lds
das
ror
push
imul
cmp
test
and
dec
dec
jb
sbb
in
fistps
sub
and
mov
in
pop
jb
cmp
jno
lret
popa
or
ljmp
push
xchg
mov
xor
mov
sbb
stos
adc
pusha
fidivs
lea
fdivr
lds
mov
je
std
xor
pop
xor
cmpsb
xchg
gs
fidivrl
push
das
sub
inc
xor
mov
push
adc
xchg
pop
push
cli
xor
insl
int3
dec
xchg
int3
hlt
lret
push
pop
fcomp
inc
mov
or
sbb
xchg
mov
mov
leave
andb
movsl
add
jecxz
hlt
inc
cmp
clc
pushf
sub
cmp
xchg
xchg
xchg
mov
shll
scas
cmp
dec
ja
adc
cmp
shrb
inc
or
shlb
jbe
loop
mov
cli
iret
es
sti
lcall
push
xor
movsb
movsl
xchg
sbb
bound
popf
out
xor
xor
hlt
sbb
adc
xor
inc
shl
loope
adc
xor
out
es
mov
arpl
xchg
movsb
subb
xor
jo
pop
xchg
and
dec
inc
push
pop
cmp
arpl
cmc
ror
fmull
mov
push
xlat
push
test
fbstp
in
out
jbe
jecxz
pushf
fcmovnb
addr16
ficoms
push
push
inc
js
push
fsubs
cmp
das
mov
in
mov
xor
sub
ss
mov
add
pop
rcl
clc
xchg
mov
adc
push
or
cli
call
js
es
scas
cmp
pushf
into
cmp
sub
adc
inc
mov
pop
sbb
xlat
sub
push
fwait
in
cmp
gs
push
add
cmp
push
push
movsl
push
adc
dec
cmp
push
inc
mov
shll
sbb
sub
mov
cmp
idivb
fistpl
clc
pushf
and
sbb
ud1
or
inc
lret
movsl
ror
push
jle
repnz
scas
cmp
mov
inc
pop
das
lods
add
in
push
and
push
or
lcall
jnp
jo
fsubl
aaa
ja
xchg
stc
jmp
dec
inc
mov
push
test
mov
lds
cli
push
jp
aas
push
loopne
notb
lock
pop
xor
loopne
cli
inc
pop
out
push
xor
mov
mov
aam
iret
jns
or
add
fs
cmp
dec
je
stos
clc
arpl
frstor
xorb
in
cli
inc
shrl
outsl
jp
or
mov
pop
call
xor
xchg
adc
iret
jb
rcrl
aas
sti
xlat
xchg
cmp
inc
fidivrl
incb
and
cmp
mov
rcll
sbb
add
xchg
mov
dec
lds
lahf
out
or
ljmp
pop
sub
inc
pop
add
or
xchg
push
fadd
cmp
dec
sub
pop
push
insl
sub
repnz
jo
inc
xorl
xchg
jb
ret
inc
jl
icebp
data16
cltd
arpl
ffree
sub
xor
xchg
dec
mov
jg
jo
pop
rclb
or
pop
sub
out
out
test
insl
cld
push
push
dec
xchg
in
popa
add
adc
cltd
push
fwait
mov
repz
add
pop
or
dec
fnclex
inc
cld
push
int
push
xlat
fldenv
cmpsl
add
xchg
cli
cli
push
mov
or
ret
in
mov
mov
pop
les
mov
push
imul
loop
xrelease
sub
iret
and
ja
loope
insl
dec
enter
push
jecxz
dec
aad
dec
aaa
cvttps2pi
aaa
mov
sub
fisubs
inc
lret
outsb
jmp
push
mov
lea
adc
loope
mov
xor
dec
dec
mov
mov
out
mov
mov
mov
idiv
les
lods
mov
jge
out
xacquire
mov
add
lds
mov
sahf
inc
dec
and
and
or
dec
repz
push
inc
das
and
push
int3
loope
xchg
add
or
mov
iret
loope
ficoml
pop
into
sahf
out
pop
sbb
sub
fs
roll
jp
ljmp
dec
xor
push
pop
lret
scas
xor
jns
xor
cmp
aam
jne
mov
lock
je
std
popf
xchg
es
add
arpl
mov
testl
inc
lcall
out
out
insl
sub
push
lahf
mov
lea
lods
jge
xchg
in
jmp
jbe
cmp
cmc
xor
int3
cwtl
mov
test
int3
daa
xor
mov
aaa
sbb
sti
lret
pop
sbb
xor
sbb
xor
stc
sub
push
sahf
sub
andb
dec
popa
inc
inc
mov
add
add
cmpsb
push
lret
or
je
or
data16
sarb
mov
daa
and
pop
addb
cmpsl
cld
ret
pop
std
sub
in
or
mov
push
out
or
jecxz
ja
xor
cs
iret
pop
jg
push
in
fs
adc
mov
int
int
in
mov
mov
xchg
push
sub
jbe
nop
fst
inc
daa
lods
and
mov
add
add
lds
pop
fdivrs
dec
push
mov
jmp
xchg
xchg
mov
dec
mov
out
xor
rcll
das
movsb
or
fidivrl
out
jle
leave
es
sti
lock
lret
sar
mov
sub
int3
aaa
je
adc
dec
out
mov
js
sub
mov
les
xor
hlt
push
mov
xor
scas
add
add
aad
arpl
daa
in
mov
loope
dec
enter
mov
pop
mov
outsl
pop
inc
cwtl
loop
or
shll
aad
mov
pop
sti
adc
or
push
dec
cmpsl
cwtl
insl
popa
iret
and
xlat
jmp
xor
inc
adc
and
test
jmp
clc
inc
cmp
int3
lcall
and
inc
call
push
movsl
xchg
inc
push
ror
enter
mov
outsb
and
rcrl
int
dec
xor
orl
sub
ror
push
xchg
and
xchg
jb
dec
sahf
sbb
call
lock
dec
mov
lods
mov
jne
mov
fldcw
out
mov
lahf
fadd
xlat
adc
std
push
repnz
lock
cmpsl
mov
inc
out
mov
sub
jp
jbe
xlat
jmp
iret
stc
jge
cli
xchg
lahf
pop
sbbb
cmc
les
lcall
clc
mov
negb
dec
icebp
repz
jmp
icebp
xchg
xchg
movsl
and
aad
push
lcall
mov
sub
or
cmp
cmp
test
cmp
mov
fists
mov
ret
popa
cmp
jns
shlb
dec
add
mov
jmp
lds
int3
mov
test
sahf
imull
les
mov
dec
rolb
xor
push
and
into
xchg
cltd
inc
sub
sbb
pop
pop
mov
out
mov
test
mov
aam
je
or
aad
push
stc
ja
cltd
cmpsl
loope
xor
testl
into
cld
add
dec
pop
lds
daa
lcall
add
ficoms
cltd
xchg
xorl
cs
push
xlat
clc
cmp
jmp
cmp
iret
sahf
add
sarl
jg
xor
loopne
mov
jp
mov
incb
mov
out
test
cmp
in
cld
lock
mov
dec
and
cmp
sbb
ja
lds
mov
cmc
push
fxch
fidivrl
jp
mov
mov
stos
ljmp
ljmp
jg
scas
ret
cmpb
lret
mov
push
icebp
xchg
adc
xchg
cmpsb
mov
jge
pushf
lcall
xchg
dec
mov
cmp
movb
pop
mov
data16
and
fidivl
push
in
xor
leave
cmp
dec
in
insl
jg
jge
or
daa
push
jge
rep
test
test
orb
adc
pop
ficoms
out
sahf
movsl
cmp
fistpl
and
and
sub
aad
inc
mov
dec
adc
cltd
jae
xchg
popa
mov
aaa
mov
ljmp
sub
pop
into
fnstcw
jb
iret
push
in
sub
aad
pop
lock
cmp
ret
jmp
add
mov
inc
push
stos
js
pop
push
cmp
adc
mov
subl
cmp
in
adc
sbb
xor
xor
test
fwait
ljmp
dec
adc
jg
or
pop
push
push
call
cmp
pop
fldl
pop
or
xchg
dec
cmp
add
jo
loop
xor
mov
mov
les
or
and
aam
fisubrs
sub
or
sbb
add
xor
and
das
arpl
fadd
xchg
popa
mov
pusha
imul
mov
push
push
sbb
or
out
sahf
jecxz
dec
jl
and
adc
sarl
cmp
stos
pop
dec
adc
dec
popa
inc
or
sbb
or
js
jno
int3
jecxz
mov
sti
push
mov
arpl
xchg
outsb
jg
enter
xchg
bound
xor
inc
outsb
sbb
adc
aam
mov
jo
push
outsb
xchg
inc
test
pop
fs
bound
adc
pop
mov
sbb
cmpsb
inc
xor
mov
push
mov
loope
pop
jmp
jmp
cmp
inc
test
lret
jno
xor
stos
cmpsl
ljmp
lahf
into
mov
shll
sbb
jne
pop
pop
fisttpl
push
sbb
aaa
shll
mov
push
cmp
xchg
std
ficoms
inc
fnstsw
call
dec
push
sbb
shll
jecxz
push
mov
sbb
rcr
adc
pop
jno
aad
jb
movsl
xor
outsb
or
push
inc
xchg
xchg
sub
test
add
int3
sbb
icebp
sub
push
mov
pop
xchg
scas
sub
in
push
pusha
test
xor
mov
ljmp
jno
bound
fisubl
mov
inc
out
imul
sarb
push
push
xor
lahf
fcoms
mov
lods
jmp
push
push
pop
mov
fstpl
insb
test
outsl
cmp
mov
lock
mov
dec
movsl
cmp
outsb
or
xor
es
ja
xorl
loop
cmpsl
xor
pop
leave
dec
adc
push
and
and
out
jecxz
jne
bswap
mov
shll
sar
aad
mov
jo
imull
push
push
cmp
clc
sbb
test
push
lds
mov
xchg
data16
out
inc
dec
movsb
fbstp
ja
sub
sti
mov
cltd
mov
xchg
pushf
cmpsb
rorb
push
icebp
arpl
int
mov
jecxz
inc
movsl
and
hlt
icebp
mov
add
xchg
bound
cwtl
add
mov
cmp
cmc
shl
add
cmp
jl
es
push
ret
mov
stc
lds
imul
data16
and
fisttps
push
xor
cwtl
scas
in
repz
js,pt
nop
inc
sub
add
mov
xchg
pop
jae
in
dec
mov
mov
insl
and
or
pop
xor
xchg
scas
and
jne
movsl
push
pop
sub
adc
fxch
mov
call
mov
mov
lea
jecxz
sbb
out
into
sub
pop
into
inc
jl
aaa
cltd
jp
popa
pop
sbb
loopne
ret
jne
xchg
ret
pop
xchg
subb
mov
je
push
dec
es
data16
push
xchg
repz
andl
adc
pop
adc
jb
shr
push
cli
or
xchg
dec
or
and
stc
xor
std
stos
nop
cmp
stos
mov
sbb
adc
leave
ror
jbe
xor
xor
lcall
jb
jo
add
addr16
inc
cltd
xor
xchg
dec
xchg
lea
sbbl
mov
pushf
fs
iret
pop
push
xorb
pop
xchg
xchg
jmp
sti
or
pop
stc
jb
pop
push
push
in
stos
xor
adc
jl
repnz
or
adc
das
xchg
std
mov
mov
fcmovnb
popf
and
adc
clc
dec
mov
pusha
shlb
jl
mov
in
cs
add
iret
mov
mov
mov
scas
roll
xchg
pop
and
or
jbe
cmp
ja
stos
mov
out
xor
aad
lods
cltd
mov
hlt
pop
cld
push
ja
and
arpl
jmp
xchg
in
jo
aas
in
cmpxchg
stos
sub
insb
mov
movsb
and
jg
inc
add
je
pop
xchg
je
and
addl
cmp
repz
iret
cltd
mov
pushf
rolb
xor
lods
xchg
pop
mov
dec
ja
or
jo
jae
aam
popf
jge
das
data16
push
cld
arpl
insb
adc
das
cwtl
in
dec
mov
and
mov
faddl
stos
loopne
fiaddl
pop
jle
popf
pop
je
loop
pop
adc
les
or
push
xor
lds
std
nop
aam
mov
lret
mov
cltd
testb
ds
jo
icebp
inc
mov
and
clc
pop
xchg
mov
lods
daa
popa
jbe
push
mov
mov
adc
pop
mov
ss
jecxz
ret
out
mov
pop
xor
rolb
jle
jecxz
inc
jae
loopne
ret
jb
xor
lret
mov
jmp
in
jecxz
xchg
jecxz
lret
es
negl
test
pop
jns
inc
ret
ljmp
pop
xchg
mov
or
les
push
insl
arpl
ds
dec
adc
add
add
lcall
out
cs
cli
into
les
push
or
push
xlat
movsl
negl
test
pop
xchg
test
je
leave
mov
sbb
into
adc
xor
shr
lods
mov
push
lods
mov
movsw
mov
mov
sbb
mov
mov
add
xor
cmp
mov
sti
arpl
sahf
jo
fisubs
int
fucomp
jo
rclb
mov
cmp
test
inc
je
adc
notb
pop
jge
pop
in
pop
jbe
test
mov
imul
xor
xorl
jmp
sarb
test
cld
adc
inc
pop
popf
or
xchg
shr
xchg
loop,pn
add
push
fcompl
dec
sti
in
fcoml
test
mov
pop
mov
jb
sub
in
lods
pop
lea
or
sub
xchg
pop
inc
push
cmpsb
xor
shrl
loopne
rcll
insb
fildl
adc
gs
pop
sub
push
dec
movsl
insl
sub
add
or
rolb
or
push
inc
loopne
in
dec
mov
adc
push
mov
mov
mov
fidivs
push
outsl
scas
jo
mov
mov
jmp
jp
sub
out
dec
mov
and
cld
jmp
cltd
push
arpl
cmp
jecxz
push
add
add
loop
push
push
cmp
mov
jmp
fcoms
jg
test
and
add
mov
aam
adc
sbb
or
shll
idivl
popa
xchg
xor
pop
or
and
jmp
xor
cmp
xor
sbb
outsb
or
stos
jp
jae
ror
nop
fcoml
adc
and
jo
pop
add
and
roll
xor
cld
es
add
repnz
mov
hlt
mov
sub
in
pop
jmp
pop
sbb
and
mov
pop
pop
and
dec
push
push
push
dec
scas
clc
sbb
xor
arpl
pop
les
pop
mov
shr
sbb
cmp
pop
out
and
scas
sub
mov
inc
mov
jp
adc
arpl
out
in
cmpsl
xor
xor
dec
stos
jno
cltd
mov
push
or
out
ficompl
inc
clc
clc
adc
fimull
roll
lock
add
test
fdivp
cmp
add
in
lds
adc
sub
push
mov
orb
fbstp
sub
add
aas
lahf
xor
hlt
lds
outsl
add
fs
fs
aad
add
pop
into
push
xchg
int
mov
enter
pop
mov
pop
jl
inc
testl
xchg
aad
repnz
popa
xor
or
xchg
mov
jp
push
js
push
sub
cmp
ss
jg
dec
mov
pop
idivl
or
cld
popa
insb
pushf
aaa
les
mov
mov
in
pop
es
lret
lods
test
mov
loop
int3
fcmovne
outsl
test
adc
and
and
inc
in
xor
pause
les
mov
push
pop
mov
orl
or
test
loope
loopne
idivl
jmp
loop
adc
orl
scas
mov
out
popf
pop
jl
adc
jne
adc
add
bound
mov
and
cmp
clc
test
sbb
cwtl
movsl
sub
jl
in
jecxz
mov
ss
adc
popf
std
shlb
imul
dec
imul
bound
sti
push
push
push
lret
mov
mov
jle
sbb
je
cmpsl
das
sbb
sub
test
fsubrl
add
aas
leave
pop
adc
or
dec
fimull
ret
fsts
cmp
sub
rcll
popf
jecxz
xor
lret
add
sbb
dec
add
ljmp
ret
jg
adcb
bound
loope
gs
jne
aam
dec
sti
add
add
decl
sub
adc
fadds
cmp
pop
xor
arpl
lock
repnz
in
pop
out
mov
jo
push
jp
test
inc
push
sahf
sbb
adc
iret
iret
nop
call
adc
arpl
push
jbe
and
pop
mov
jg
mov
xor
mov
ja
pop
dec
jle
lretw
cld
shl
popf
lret
push
jb
and
push
imul
outsb
pop
mov
les
cmp
test
sub
push
pop
push
in
fs
lret
and
pusha
ds
popa
test
andb
jg
push
push
add
sarl
arpl
std
xor
stos
call
test
inc
and
mov
sti
cmpb
fwait
push
scas
or
jne
mov
mov
dec
nop
test
les
es
loope
jge
sbb
inc
les
shlb
mov
pop
pop
add
outsb
loope
test
mov
hlt
icebp
sbb
in
rorb
jno
sub
cmp
xchg
or
pxor
cmc
popa
subl
xchg
mov
add
sbb
lock
cmp
sub
js
jbe
repnz
inc
fbld
jo
dec
xor
push
int
push
jns
xlat
push
jmp
and
jbe
js
daa
sub
xorl
cmp
das
fldcw
stos
jo
add
xchg
dec
pop
fcmovnbe
aaa
xchg
pushf
sbb
mov
sub
dec
mov
pop
sbb
je
jmp
das
cltd
jno
push
cmp
mov
loopne
fwait
daa
das
add
mov
push
cwtl
sar
in
jg
jb
insl
xchg
gs
jecxz
inc
xchg
jo
fmuls
and
mov
ljmp
or
sbb
gs
pop
mov
adc
imul
adc
xor
ficomps
fildl
loop
cmp
or
daa
outsl
out
scas
mov
orl
outsb
sar
mov
out
testb
sbb
sbb
jne
sub
lods
jo
sub
rcrb
shl
repnz
cmp
lds
in
sti
sub
js
in
cmp
outsb
scas
cmc
clc
into
fnstcw
sub
jecxz
das
rorl
add
mov
sub
jge
mov
push
adc
inc
orb
shl
scas
mov
ds
lcall
xlat
inc
aam
shrl
pushf
ds
adc
into
or
ret
push
pusha
je
stos
cmpsb
push
popa
pop
mov
cmp
dec
pop
xchg
mov
xor
rcrb
outsl
lret
add
jmp
lea
in
inc
std
push
popa
fiadds
and
dec
call
push
push
dec
inc
les
xchg
sbbl
push
in
pop
test
ds
or
adc
cmp
ret
nop
inc
ja
jbe
outsl
ror
adcl
or
rclb
cli
movsl
or
and
dec
sbb
mov
adc
stc
pop
imul
pop
dec
dec
pop
je
bnd
dec
and
sbb
mov
data16
or
inc
mov
rorb
out
xchg
mov
ss
imul
pop
mov
incl
mov
lods
push
insl
ds
iret
pop
out
push
pop
push
inc
adc
or
cmp
pop
gs
and
repz
mov
jae
cwtl
inc
lahf
dec
mov
cmp
testl
subb
pop
cmc
sti
out
sub
daa
test
movsl
lahf
addl
aas
clc
mov
add
adc
jg
pop
mov
imulb
popa
int3
dec
inc
jne
les
outsl
add
push
push
sbb
xchg
outsl
mull
fmull
adc
xchg
push
jb
push
push
and
dec
cmp
add
outsl
or
mov
push
push
dec
lret
dec
sbb
leave
mov
cmp
mov
in
xorl
or
push
xchg
fnstsw
xchg
xor
jb
nop
jnp
pop
es
call
aam
pop
into
js,pn
jbe
mov
mov
iret
push
sub
lret
nop
xchg
lds
ja
ffree
mov
mov
xchg
mov
addb
dec
cmp
mov
pop
mov
imul
call
sub
js
dec
pop
sub
dec
pop
or
int3
add
and
std
xorb
imul
mov
lea
mov
into
addr16
sub
lock
cmp
nop
jne
push
int3
shll
push
pop
aas
ret
mov
sahf
pop
aas
mov
hlt
mov
add
fldenv
adc
lods
jecxz
cld
jb
loopne
sbb
nop
xchg
jmp
push
xchg
mov
insb
mov
outsl
pushf
sub
push
fs
mov
dec
in
stos
pop
pop
sub
in
inc
subb
aaa
sub
cltd
xchg
xlat
and
out
push
dec
or
add
mov
sbb
inc
repnz
pushf
pop
inc
popf
bound
bound
or
sbb
shll
jle
dec
or
jg
push
jo
xor
loop
lahf
xchg
lahf
lahf
push
jo,pn
xchg
popf
cmp
mov
push
jae
jp
inc
mov
adc
jle
loop
insb
add
pop
cmp
ret
rorl
rorb
loop
pop
xchg
in
push
push
fdivrl
xchg
xchg
addl
mov
or
fsubs
jbe
fmull
repz
and
and
mov
inc
out
fmul
push
add
fsubr
mov
cmp
je
test
test
test
sahf
and
jnp
inc
data16
dec
aam
dec
xchg
dec
sbb
dec
and
adc
mov
into
cmpl
mov
rcrl
lcall
cli
pop
test
adc
cmpsb
sbbb
jnp
fsubr
and
mov
sub
insb
enter
and
je
js
and
mov
movsb
xor
ds
cwtl
xor
fstp
mov
arpl
test
lea
stos
mov
cmpsl
gs
mov
cmp
lahf
mov
enter
mov
loopne
push
xor
dec
hlt
sub
dec
in
cmpsl
mov
mov
movb
sarb
iret
and
nop
incl
inc
sub
pop
cmp
mov
cmp
movsb
das
push
pop
fwait
xchg
xlat
dec
cli
aad
push
and
and
pop
dec
rcl
mov
es
mov
xor
negb
sti
mov
mov
lahf
iret
mov
adc
inc
push
iret
ret
je
pushf
leave
testl
or
mov
add
xor
loope
out
add
xchg
inc
addr16
xchg
imul
and
cmp
jle
mov
mov
js
mov
pop
mov
nop
add
mov
dec
imul
insl
xor
inc
and
aam
pusha
jge
jl,pt
clc
scas
leave
cmp
mov
in
lret
mov
xor
dec
mov
sahf
adc
jne
ret
popf
popa
push
jg
adc
fs
arpl
mov
dec
inc
adc
jl
push
pop
adc
aad
pop
jle
xchg
dec
mov
jg
and
mov
jge
popa
and
ljmp
push
dec
in
aam
or
pop
jbe
das
repz
add
iret
mov
out
pushf
je
or
mov
mov
les
or
mov
and
out
pusha
inc
mov
sbb
out
adc
jb
add
sbb
cmovae
mov
and
sbb
push
shlb
xor
and
pushf
or
in
adc
popf
push
mov
mov
imul
jle
cmp
loope
ret
xchg
stos
pop
push
popa
movsl
lahf
icebp
into
cwtd
add
cmc
loopne
pop
js
neg
scas
dec
aam
mov
in
xchg
jmp
int3
xchg
or
xorb
add
sahf
lahf
ds
or
cmc
inc
xor
mov
out
xor
dec
ret
lds
std
icebp
sbb
std
inc
sub
xor
dec
fwait
xchg
push
adc
nop
xor
dec
adcb
jge
rcl
lcall
xchg
sti
pop
push
dec
xor
repz
lret
xchg
and
push
sub
push
mov
push
push
mov
leave
cmp
lcall
xor
btrl
loopne
es
push
mov
insb
fbld
mov
sbb
inc
push
add
or
mov
fdivl
insb
mov
in
insb
push
shlb
or
xchg
sbb
dec
stos
inc
das
push
xor
mov
gs
lods
subl
sbb
fsts
ds
popa
inc
inc
push
inc
mulb
cmp
rorl
out
test
xlat
sti
inc
add
cmc
jbe
lods
xchg
out
sub
fisubrl
sti
shl
cltd
xor
dec
insl
arpl
clc
sub
and
jl
dec
mov
sbbl
inc
mov
dec
ret
daa
and
lods
jae
push
lods
xorl
sub
adc
sbb
pop
xlat
pop
cld
outsb
insb
sub
or
in
outsl
push
jmp
mov
push
test
dec
push
pop
out
mov
cli
cmp
int3
repnz
pop
cltd
mov
cmp
ss
mov
or
mov
inc
in
lods
pop
out
ljmp
mov
outsl
mov
jo
test
inc
fwait
jno
out
or
pop
and
sahf
mov
fsubr
ret
push
pop
pusha
int
sub
or
push
xchg
into
cltd
xor
push
outsl
push
inc
out
out
push
push
shrl
pop
mov
push
out
out
cmpsl
test
insb
enter
nop
dec
repz
sbb
aaa
loop
addr16
addr16
push
imul
or
cmp
cwtl
add
and
dec
outsl
popa
pop
jnp
cmp
jle
out
pop
rcrb
mov
scas
test
and
cltd
cmp
pop
dec
mov
pop
fiaddl
jmp
imul
ss
mov
fnstsw
and
push
pop
cmp
mov
dec
int
test
movsb
jmp
sti
or
outsl
jnp
divb
inc
push
addb
dec
xor
mov
jbe
test
shlb
imul
push
pop
mov
sub
sub
cli
sbb
cmp
das
add
add
enter
lret
orl
aam
out
rclb
add
cmp
cwtl
insl
xchg
out
adc
bound
adc
and
in
jle
push
insl
popa
jb
cmc
mov
cmp
imul
in
dec
fists
jne
xchg
xor
fisubs
xchg
rolb
cmp
out
cmpsl
xchg
cld
enter
add
fdivs
jnp
pushl
sbb
std
xchg
pop
fidivl
push
or
push
sub
sbb
pop
fdivp
jns
mov
mov
mov
sahf
loopne
xchg
xor
ret
lahf
sbb
sbb
push
rcrb
test
imul
and
mov
enter
push
ss
adc
ds
push
jae
push
or
push
subl
jp
adcb
push
popf
push
xor
pop
cmp
fcmovbe
cli
insl
lcall
fcompl
fwait
or
or
jge
push
mov
xchg
int
add
jno
int3
aaa
incl
xchg
mov
scas
inc
pusha
mov
jle
pop
popf
das
pop
lock
in
icebp
insb
cmp
es
test
or
ret
mov
inc
xchg
out
cmc
cmp
and
mov
scas
inc
mov
cmpsb
sahf
aaa
imul
xchg
xchg
dec
inc
stc
inc
mov
mov
jge
shlb
outsb
push
xchg
enter
pop
pop
pop
daa
push
and
xor
mov
mov
into
inc
insb
xor
int3
add
dec
or
aam
dec
jae
loope
pop
jge
mov
in
out
lret
mov
dec
iret
outsl
test
test
jge
aad
dec
out
jne
lods
push
mov
mov
xor
pop
pop
add
fbstp
cwtl
cmp
out
push
jae
xchg
inc
mov
and
prefetch
adc
es
jae
mov
and
or
jmp
and
jmp
lret
sub
cmp
push
mov
fadd
sub
ljmp
inc
cmp
inc
cltd
or
les
cwtl
mov
mov
out
rolb
stc
mov
divl
inc
mov
scas
push
or
scas
xchg
mov
jmp
fdiv
inc
popf
and
cmpsl
mov
hlt
sti
mov
add
ds
sub
or
imul
dec
cs
outsb
out
mov
popl
cmp
es
int
in
daa
stos
test
lahf
fnstcw
cmp
mov
jae
lret
ret
dec
inc
shrl
or
rcll
sbb
fcomps
mov
add
mov
jecxz
mov
divb
xchg
nop
inc
pop
pop
and
jo
mov
pop
dec
sbb
jl
adc
cmp
insl
data16
xlat
fwait
sbb
mov
roll
sub
fiaddl
aaa
push
pop
cld
stc
add
jg
or
push
inc
fxch
cs
or
into
mov
stos
or
fsubrl
pop
and
or
popf
aad
icebp
inc
sti
mov
xchg
xchg
or
lds
jae
movb
pop
or
jmp
jo
mov
bound
test
fdivl
sahf
sbb
int
bound
xchg
repnz
push
and
bound
mov
sub
int3
pop
sub
xchg
mov
jne
sbb
mov
or
pop
popf
decl
add
rclb
mov
insl
and
inc
inc
das
outsb
cmp
add
sbb
daa
mov
or
test
inc
dec
daa
dec
loope
shll
push
mov
cmp
mov
std
jo
xchg
cs
cs
fs
lods
inc
daa
dec
inc
leave
aam
sbb
std
jne
sub
adc
clc
pop
es
push
mov
lcall
jecxz
and
mov
jmp
jb
inc
lret
sub
and
insb
add
mulb
xchg
std
jp
call
insb
push
arpl
mov
and
mov
sub
call
push
int
sbb
adc
sbb
pop
sub
sbb
shlb
sti
in
call
push
leave
int3
aad
add
inc
push
mov
pop
jp
mov
sbb
xor
pop
mov
push
xchg
mov
mov
mov
mov
pop
mov
loope
mov
cmpsb
dec
add
lret
mov
mov
cmp
imul
cmpb
mov
push
addr16
mov
and
sub
dec
das
dec
aas
sti
data16
xchg
xchg
push
dec
pop
daa
jmp
out
adc
xor
or
hlt
pusha
mov
loopne
mov
mov
rcll
add
and
ficoms
lds
shl
lea
hlt
jmp
lcall
xchg
ds
and
rcl
popf
aaa
push
dec
or
daa
adcb
psubusb
xchg
stos
jae
push
mov
jns
das
sub
mov
and
stos
test
add
movsl
adc
cltd
sbb
test
sbbl
stc
add
jne
fldcw
or
add
lds
push
test
xchg
jno
pop
pop
mov
mov
jle
lret
out
xor
loopne
mov
cmp
push
aam
xchg
arpl
mov
dec
iret
inc
inc
push
mov
xchg
inc
mov
ja
push
add
pop
mov
ljmp
xchg
mov
out
rorb
insb
lds
test
stos
pop
sarl
push
daa
lret
aam
dec
pop
mov
pop
cmp
mov
lds
mov
test
push
xor
xchg
arpl
cmp
pop
xor
dec
cmc
mov
push
xorl
into
jp
out
rolb
jg
and
adc
sub
aam
sbb
imul
inc
jp
arpl
xchg
stos
pop
clc
data16
movsl
mov
enter
pop
xor
pusha
dec
push
outsb
xchg
adc
sbb
xor
and
leave
inc
clc
cmpsb
mov
sbb
pop
imul
imul
add
jbe
rcrb
mov
mov
xor
stc
xor
push
and
pop
dec
dec
jno
movsb
adc
rolb
xchg
mov
cld
enter
and
mov
adc
jp
mov
jg
or
shll
push
sbb
sarb
ljmp
mov
pop
scas
pusha
lret
xlat
xchg
add
xor
nop
adc
int
fisubrl
out
das
shl
push
orps
jo
pop
xlat
lds
push
inc
push
jae
fldt
mov
pop
data16
testb
sahf
fistpll
js
mov
lcall
in
dec
sbb
fistl
in
in
cltd
cltd
jge
sbb
enter
testl
daa
dec
and
inc
sub
repnz
enter
faddl
popf
imul
push
sti
sub
dec
imul
movsl
xchg
jmp
pop
xchg
add
clc
pop
cmpsb
movsb
shll
data16
fbstp
pop
int
sub
push
jmp
sbb
lret
test
in
gs
pop
mov
in
pop
shrl
xchg
cs
out
hlt
sbb
mov
jb
jae
inc
jo
out
cmp
or
ljmp
push
inc
mov
mov
cltd
or
fwait
mov
jnp
jp
mov
xor
mov
push
jmp
repnz
push
lods
lods
in
mov
add
cmp
inc
test
or
fldl
les
inc
sub
vmaxpd
dec
pusha
xchg
push
out
dec
xchg
inc
out
inc
addb
xchg
daa
jle
dec
push
sub
daa
adc
add
imul
xlat
popa
clc
adc
sbb
loop
jo
cmp
cmpsb
icebp
sbb
xlat
stos
sub
jecxz
xchg
pop
popa
jno
push
test
cwtl
and
and
pop
repnz
mov
test
xchg
bound
pop
jmp
repz
subl
js
testb
sub
int3
into
cmpsb
lods
cld
mov
pop
das
mov
mov
mov
stos
pop
mov
pushf
scas
mov
aad
out
movsb
ljmp
fistl
adc
faddl
push
mov
popf
sbb
adc
and
cltd
sbb
lahf
jg
mov
js
dec
xor
xchg
mov
insb
push
ljmp
jo
into
je
add
or
scas
xor
loopne
jb
push
mov
push
sbb
testb
out
adc
mov
lods
test
test
aas
push
cmp
push
std
test
mov
and
jle
dec
sbbl
das
inc
andb
cmpsb
rcrl
scas
enter
lsl
xchg
mov
test
add
dec
stos
pop
cmp
sub
aaa
xchg
int3
mov
loop
pop
shrb
add
cmp
insl
je
aam
std
or
mov
ljmp
test
jmp
push
fs
pusha
mov
sbb
ret
and
xor
rclb
loop
mov
ficoms
in
arpl
cwtl
mov
dec
ja
test
mov
mov
push
xchg
int
or
sbb
loopne,pn
fdivrl
xchg
xor
enter
mov
std
mov
iret
je
adc
push
popl
sbb
pop
adc
mov
jp
adc
insb
lret
xchg
xor
or
mov
xor
stc
cmp
mov
popa
adc
sub
jb
loop
xor
pusha
and
jns
jge
pusha
pusha
mov
shlb
xchg
add
and
push
xchg
gs
inc
and
js
mov
ret
pop
or
mov
cmc
data16
rcrb
sti
cmp
pop
shrb
push
pop
cs
cli
es
adc
out
rep
jnp
pop
or
add
cmp
sub
call
xor
lock
imul
push
jmp
add
sub
mov
push
xor
out
xchg
mov
sbb
inc
pop
lcall
test
push
sub
out
ljmp
inc
sbb
jnp
jecxz
fbld
jnp
pusha
ficompl
jl
mov
in
mov
mov
or
icebp
mov
jle
lods
fildll
adc
js
push
rcrl
adc
pop
adc
mov
test
mov
out
stc
flds
js
and
sbb
adc
mov
loopne
popf
xchg
adc
and
insl
mov
push
jmp
mov
jecxz
mov
and
adc
mov
add
jns
fs
lret
sub
test
test
ds
and
mov
gs
pop
pusha
loope
shll
add
sub
jne
push
add
pop
mov
mov
mov
not
cmpsl
pop
xor
js
ja
je
inc
loop
je
xchg
iret
inc
add
jl
jno
jge
into
push
fs
sarb
in
mov
aad
cli
pop
sbb
in
cs
daa
loopne
ja
jmp
mov
or
test
iret
mov
test
cltd
pop
push
cmp
cmp
inc
jmp
stos
mov
loop
call
mov
lret
and
fistl
xchg
aaa
fcoml
xor
or
cmp
inc
and
jb
rclb
push
cmpsl
rcr
ret
inc
ljmp
lsl
int3
push
mov
dec
lret
insb
add
stos
leave
or
mov
xor
imul
test
sub
inc
popf
lods
sbb
jl
es
inc
push
inc
insl
int3
outsb
scas
adc
xchg
leave
push
mov
jp
fnstcw
andl
aaa
push
lea
xor
dec
inc
dec
pop
aam
xchg
icebp
add
add
rcr
lret
test
scas
dec
movsl
ljmp
repnz
bound
imul
mov
mov
mov
dec
cmp
jno
cmp
lods
cld
push
mov
in
mov
mov
pushf
pop
movsl
imul
push
cmp
movsl
repnz
filds
xchg
sbb
fadds
fldl
psadbw
cmc
xchg
leave
inc
loope
cmp
mov
push
inc
dec
in
out
xor
sti
mov
mov
jbe
mov
cmp
nop
ret
jns
ficompl
jg
pop
sub
test
stos
adc
pop
cmp
stos
bnd
pushf
movl
ljmp
call
vpunpckhqdq
cltd
hlt
aam
in
cs
jnp
fs
in
mov
xchg
sub
inc
mov
aas
and
push
sarb
icebp
movsl
sub
int3
mov
xchg
out
mov
addl
and
sub
pop
add
enter
add
cmp
fsubl
dec
pop
pop
dec
lds
cltd
mov
dec
out
andb
ret
ds
iret
add
and
stos
push
outsb
fisubs
mov
mov
xlat
aas
inc
pop
sti
bswap
movsl
fwait
lods
movsl
cmc
lret
shr
insb
shrl
push
imul
push
fwait
dec
xorb
test
dec
sti
mov
fnstsw
push
mov
push
adc
clc
jp
fistpl
cmp
or
fisubl
or
test
mov
outsb
enter
shrl
fisttpl
sub
mov
aaa
bound
add
into
pop
cs
and
mov
xor
stos
xchg
ds
mov
push
xor
jl
daa
fiaddl
ds
adc
jmp
inc
call
repz
or
sahf
add
jle
das
frstor
stos
mov
mov
jg
and
mov
pop
pushw
or
sbb
lret
je
imul
lock
mov
mov
jns
mov
ds
pop
cwtl
aaa
or
jge
nop
ficompl
xchg
dec
inc
outsl
push
out
xor
inc
ds
xchg
and
pop
sti
add
mov
add
mov
aam
xlat
push
es
or
daa
test
pop
xor
sbb
mov
mov
add
cmpsb
int3
aaa
lret
pop
test
cmp
cmpsb
dec
movsb
inc
cli
scas
stos
subb
add
dec
roll
shl
mov
popf
sub
mov
mov
xor
stc
orb
cld
mov
repnz
inc
and
pop
bound
fcompl
and
in
out
inc
lret
cltd
nop
mov
lds
add
add
mov
or
pop
notb
push
pop
inc
jge
outsb
icebp
hlt
sbb
xchg
sar
mov
cmp
or
mov
xchg
leave
cmp
push
mov
scas
out
shrl
insb
xor
and
mov
in
stos
mov
push
mov
outsb
fstpt
dec
inc
xchg
cmpsb
hlt
lcall
js
shll
pop
dec
sbb
stos
hlt
in
jge
outsb
and
ds
xchg
pop
xchg
repz
mov
mov
pop
or
add
cmp
enter
clc
add
lret
cmp
xor
mov
mov
push
das
lret
lret
or
imul
cmp
inc
push
hlt
push
push
std
inc
sbb
xchg
into
adc
sahf
mov
mov
mov
push
jo
gs
cmp
int3
movsl
push
outsb
xchg
and
shlb
jmp
mov
xor
fisttpll
pop
push
lock
mov
ss
push
adc
push
repz
or
and
shl
rcrb
inc
dec
call
rcrl
mov
inc
mov
push
xchg
daa
clc
or
repz
dec
pop
pop
repz
call
ror
test
push
insb
nop
mov
sub
pop
pop
xorb
inc
mov
out
pop
mov
dec
mov
mov
push
xchg
loop
arpl
mov
jecxz
iret
sub
sub
cwtl
mov
jp
and
pop
out
ja
hlt
testb
cmp
sub
sub
out
ror
and
xor
into
test
call
mov
repz
xor
adc
ljmp
out
test
add
lea
push
cmp
ja
mov
pushf
jle
xchg
cmp
call
out
mov
adc
aam
sub
jl
xchg
cmpsb
push
iret
shlb
rorl
inc
jmp
loop
clc
adc
or
clc
and
pop
aam
mov
xor
sbb
repz
inc
sub
lods
es
add
pop
lods
roll
jnp
dec
fxch
lods
jno
bound
mov
subb
not
and
fdivl
repnz
negl
icebp
cmp
pop
es
jno
ja
jbe
fisubrs
push
adc
imul
sbbb
aam
xchg
add
or
roll
ja
mov
sarl
cli
jle
idivl
cmpsl
fs
pushf
mov
fs
xor
and
xor
dec
cmpsl
cmp
jae
mov
adc
shll
sbb
in
mov
aas
dec
dec
xchg
adcb
cwtl
fisttpl
loop
imul
mov
add
xchg
mov
out
je
sub
dec
inc
sbb
inc
in
xor
cmp
mov
mov
and
rcll
adc
ljmp
arpl
mov
stos
rol
and
out
jge
ss
mov
and
aam
fdivl
lods
icebp
repnz
pop
cmc
push
add
js
sub
push
lret
cli
out
dec
xor
adc
test
and
push
nop
test
pusha
cwtl
cli
ret
mov
mov
sub
enter
mov
dec
lahf
xchg
imul
cmp
shrb
scas
mov
dec
popf
and
adcl
es
adc
popf
dec
and
sub
jecxz
cmpsb
jl
out
lcall
push
pop
sub
cmp
add
pop
pop
mov
and
ret
mov
pop
jg
sub
jo
mov
sub
cmp
push
and
repnz
lcall
nop
jnp
pop
cmp
ret
xchg
mov
daa
aad
xor
cmc
pop
jno
push
inc
ds
and
inc
popf
rorl
adc
sub
into
xchg
and
icebp
mov
sub
rolb
lods
scas
push
mov
fnstcw
cld
xchg
lds
mov
jnp
mov
sbb
jecxz
psubq
sti
fsubl
jl
fwait
cmp
inc
lods
clc
sub
jmp
cld
std
cltd
cmc
pop
jmp
sub
jnp
push
push
ficoml
fstpt
clc
add
adc
mulb
push
outsb
arpl
lahf
or
sub
nop
aaa
bnd
add
add
or
ss
pcmpeqd
movsl
mov
cld
fnstsw
cmp
call
pop
push
movb
js
dec
ljmp
data16
pop
add
sbbb
add
push
push
daa
or
aad
enter
inc
inc
aas
lahf
or
mov
lret
imul
xchg
sbb
aad
out
cmp
xchg
out
loop
mov
mov
pop
push
addr16
and
and
hlt
aam
lods
sub
in
add
pop
and
sub
cmp
mov
or
mov
bound
dec
fsubrs
ret
test
adc
xchg
push
xchg
adcl
pop
test
outsl
cmp
push
sub
xchg
push
dec
xor
call
in
mov
icebp
mov
fcomps
xchg
movsl
popa
aad
aaa
mulb
xchg
int3
sbb
sbb
cmp
cmp
adc
push
dec
mov
movsb
movsl
sub
push
mov
in
imul
push
pop
pushf
or
cltd
inc
mov
pop
and
jno
inc
cwtl
insb
outsb
insb
mov
or
out
insb
shrl
dec
adcl
adc
mov
lret
adc
int
in
inc
mov
gs
sbb
and
dec
pushf
fisttpll
push
popf
aam
xchg
sti
pop
test
mov
cmpsb
loope
xor
inc
jb
into
push
inc
xor
push
add
cmc
sub
loope
pushf
aad
jb
fidivrl
rorb
fsubl
data16
imul
or
dec
mov
lret
add
cmp
loop
loop
insl
or
lahf
hlt
push
cmp
sub
sub
push
sub
mov
jnp
sbb
pop
mov
mov
sti
adc
sub
dec
inc
sbb
pop
daa
add
mov
clc
not
dec
dec
stos
xchg
loop
adcl
and
jecxz
push
dec
lock
aam
andb
or
fst
and
cmp
mov
in
push
mov
mov
jb
inc
bt
inc
leave
push
nop
or
test
add
xchg
scas
mov
mov
movsl
outsl
in
shll
es
add
xor
nop
cs
inc
les
je
test
lock
aam
and
or
outsl
ret
scas
movsb
in
add
push
pusha
xor
pop
xor
dec
loop
popa
jmp
jecxz
dec
cmp
fldcw
fdivrs
adc
mov
sarl
fisubrs
pop
ljmp
push
xchg
fadds
daa
lcall
aam
jo
xchg
pop
push
pop
pop
test
lcall
adc
lea
loope
stos
clc
jo
jbe
lcall
mov
push
push
insl
adc
popa
adc
mov
decl
ja
fcmovb
cwtl
mov
jmp
ficomps
add
or
addr16
push
imul
inc
dec
leave
add
les
fistps
enter
cmp
cmp
push
pop
xor
imul
inc
inc
cmp
lret
gs
ret
in
shlb
and
push
jle
aaa
das
add
jo
daa
popa
pop
xchg
sbb
pop
mov
lods
push
ljmp
xlat
xchg
jp
xchg
jle
jb
cmp
test
push
in
scas
jle
sti
push
mov
or
sti
xor
pop
inc
ja
popf
inc
mov
mov
xchg
xlat
jne
fdivr
xchg
xor
sbb
add
cmc
sub
pusha
sahf
lods
mov
loop
push
sbb
push
stos
pop
jp
lret
loopne
add
out
and
jno
clc
xchg
mov
aaa
loopne
popa
jmp
adc
pop
push
cmp
mov
aas
sahf
and
bound
imul
push
inc
scas
out
ficoml
mov
iret
and
fmuls
mov
mov
push
jne
jno
shlb
js
add
ss
dec
xor
out
inc
push
mov
inc
pop
add
repnz
sbb
and
lret
jae
std
xchg
out
mov
arpl
push
call
cmpsb
int3
es
mov
inc
leave
push
jg
adc
pop
ljmp
dec
add
xchg
repnz
fisubl
push
push
pop
andb
push
outsl
sbb
movb
mov
mov
movsb
loopne
ljmp
inc
dec
mov
pop
insl
jnp
jae
rcll
pop
in
jno
adc
outsl
xlat
insb
xchg
sub
iret
test
sub
cmc
push
sub
ret
mov
es
add
or
mov
rolb
cmp
xor
ss
add
test
cwtl
stos
adc
sarb
sub
test
fstps
lods
fnsave
mov
aas
push
xor
out
xchg
psraw
aam
add
leave
push
xchg
aas
add
movsb
idivl
cmp
mov
sbb
cmp
loope
add
jae
sbb
std
jb
jno
pop
lods
sbb
je
sbb
les
or
mov
lea
mov
pop
xchg
cmp
mull
out
cmpsl
jno
ja
jo
std
gs
push
lods
mov
jno
aas
subb
ret
inc
je
and
movsl
add
test
int
pop
movsl
lret
aam
mov
mov
mov
cmp
dec
pop
push
enter
xchg
bound
fcmove
sub
pop
push
mov
mov
fmull
mov
sbb
sbb
cld
sub
xor
cltd
xlat
stc
dec
pushf
xchg
popf
leave
inc
push
jge
daa
cmpsb
int3
pop
into
push
in
inc
sbb
shl
add
lods
out
mov
shll
mov
xchg
sbb
data16
aam
mov
ret
xor
roll
leave
bound
loop
jmp
adc
push
jg
das
fs
pop
pop
add
cmp
mov
adc
add
jmp
jle
in
xor
mov
mov
data16
cmp
push
stos
enter
mov
push
pusha
cmp
mov
sti
sarl
lret
mov
sbb
sbb
cli
js
push
pop
ret
mov
out
enter
jae
out
jecxz
adc
dec
jnp
push
arpl
push
jae
int
dec
mov
and
mov
cli
push
es
bound
mov
jnp
imul
and
rorb
out
dec
and
outsb
mov
loope
adcb
sbb
adc
js
mov
test
out
and
aad
mov
sbb
inc
mov
mov
sarl
movsl
sbb
mov
xor
shll
xchg
sbb
push
sahf
ret
sub
test
les
jns
pop
cmpsl
cmp
fs
enter
and
aad
or
fidivl
pop
test
mov
test
add
mov
pop
jp
scas
mov
mov
sub
subb
push
mov
aas
int
add
sub
cmpsb
in
push
mov
and
das
loopne
jnp
enter
jl
setp
jae
je
jb
push
ss
pop
stos
and
outsb
in
dec
mov
mov
mov
imul
gs
mov
push
cmc
cltd
mov
popa
adc
xchg
das
jle
psubsb
and
mov
jno
dec
xorl
mov
push
cmpb
mov
inc
cmpsl
sub
xchg
addb
lret
out
imul
lret
arpl
ljmp
imul
ja
repz
ret
ret
sbb
sub
adc
pop
lea
push
lods
push
sbb
cmp
pushw
pop
push
jns
jmp
push
das
into
and
pop
ret
jae
xchg
fwait
xchg
push
int3
sub
js
orb
popa
push
popa
fcomip
shll
xchg
mov
in
fists
aas
cmp
rcrl
cld
gs
mov
popf
mov
pop
ds
sbb
cwtl
cmp
ja
mov
insl
int3
push
dec
mov
push
adc
adc
jae
divl
pop
mov
test
cli
jb
jmp
shll
ret
lods
mov
mov
fcomip
daa
pushf
cmp
pop
loop
jp
ds
add
mov
out
mov
sub
call
out
testl
jecxz
jl
clc
jb
mov
movsb
pop
xchg
lahf
call
mov
and
jae
loope
mov
roll
scas
and
aaa
mov
aas
scas
andb
rcll
aam
mov
xor
imul
pop
out
ja
aad
scas
test
pop
lcall
daa
xor
scas
test
popa
bound
loope,pn
xor
popf
dec
aas
sub
les
aaa
dec
loope
test
cmp
mov
aas
mov
mov
ja
dec
xor
add
rcr
sbb
adc
add
stos
fdivrs
inc
sub
jge
push
sub
xor
xchg
mov
mov
push
negb
dec
fwait
push
popf
lcall
cltd
movsb
out
push
cmpsb
jle
and
xchg
mov
iret
aam
repnz
cs
lock
pop
mov
mov
adc
pop
imul
loopne
pop
pop
pop
sbb
movsb
lds
in
sbb
fldl
out
out
xlat
sahf
mov
ds
ds
je
mov
xchg
or
mov
arpl
or
xchg
or
mov
roll
js
lret
jns
jl
stc
repz
add
mov
pop
inc
outsl
xchg
incl
cmp
dec
aam
mov
nop
in
call
add
call
xchg
cs
push
xchg
jo
in
aad
int
movsb
test
and
movsl
aas
push
push
stos
and
cld
or
pop
test
test
pop
scas
ficoms
push
movsl
repnz
lds
cmp
in
fdivrs
ja
and
xchg
and
xchg
out
ficomps
call
outsb
cmp
cmp
inc
jp
dec
cmpsb
cmp
adc
scas
add
in
leave
test
mov
imul
jl
jne
imull
lock
stos
test
jb
testl
lret
mov
add
sarl
mov
sub
adc
dec
mov
jb
test
insb
rolb
xor
ficoml
pop
pop
pop
lret
inc
adc
push
push
inc
push
rclb
mov
lea
add
adc
pop
rcr
jb
jno
movsb
outsb
inc
iret
in
fists
pop
aas
add
sbb
int
or
mov
xor
jno
shl
add
push
cmp
push
pushf
mov
xchg
fidivrl
pop
push
lea
jbe
jl
mov
sbb
fidivl
mov
pop
out
dec
and
inc
es
inc
adc
mov
pop
call
push
pop
and
out
lods
cmp
fidivrs
jbe
fidivrs
jle
sub
pop
aam
push
shrb
daa
jg
int3
cltd
dec
mov
movsb
in
mov
in
in
enter
lret
inc
inc
or
popa
ja
push
mov
inc
jns
dec
mov
cmp
push
cmp
lds
adc
push
push
pushf
mov
fs
inc
mov
jge
or
loope
call
lcall
and
scas
mov
xorb
cs
testb
xor
jbe
dec
jmp
mulb
mov
mov
aad
pop
pop
ss
cmp
stos
add
mov
sahf
lahf
xchg
loope
movsl
imul
jae
xor
cmc
push
fwait
cld
int
push
inc
out
js
bound
cld
adc
push
pushf
rcr
es
loop
dec
mov
not
mov
mov
cmp
or
adc
cmp
scas
and
imul
push
scas
mov
lods
aaa
push
mov
mov
sub
fdivs
adc
sub
test
jl
pop
adc
sub
mov
sub
sti
mov
jno
fsubl
dec
outsl
mov
insb
push
shll
cmp
pop
mov
mov
xchg
add
outsl
add
cmp
shlb
and
fisubrs
cwtl
push
adc
stos
push
push
js
pop
dec
and
and
mov
lock
test
push
mov
cmc
jl
sbb
cmpsl
inc
inc
cmp
jle
imul
lods
push
sub
push
sub
push
lret
add
or
fwait
push
mulb
call
add
lahf
lret
mov
lock
push
test
test
push
xor
or
fwait
cmp
int3
mov
cmp
test
push
cmc
lret
adc
push
jno
xchg
jle
adc
and
mov
cmp
stc
rcrb
add
jo
or
cmpsb
pop
mov
cs
mov
inc
cmpsb
and
dec
mov
add
popf
lods
movsb
test
stos
xchg
mov
jecxz
jp
call
mov
add
and
icebp
cmova
insb
mov
inc
sub
sub
stos
mov
bound
in
or
rorl
dec
jnp
cmp
or
jmp
rolb
scas
popa
inc
andl
adc
aaa
icebp
lock
outsb
xor
js
jl
or
jg
cmpsl
jecxz
dec
das
or
dec
imul
push
outsb
mov
xchg
test
xchg
xor
orb
addr16
subl
dec
leave
jo
out
movsb
pop
test
pusha
push
repnz
adc
clc
xchg
cmp
push
lods
addb
pop
out
dec
leave
xchg
stc
aas
add
mov
add
jl
movsl
push
cmp
jle
andb
das
flds
or
or
push
scas
dec
into
pop
inc
mov
out
in
and
addl
fbstp
cmpsb
jl
push
xorb
bound
rcrb
cli
or
adc
mov
js
out
in
jle
nop
inc
sub
dec
push
xor
out
inc
mov
jge
jle
shll
insl
push
out
fistpl
pop
push
or
sub
jo
fwait
call
shlb
dec
pop
mov
stos
in
outsl
xor
or
andl
cmp
cld
xor
add
dec
mov
push
shrl
pop
push
call
xorb
fldenv
sbb
aam
mov
sbb
mov
ja
push
loope
mov
sub
rolb
je
push
movsl
in
test
mov
push
jno
lods
pop
push
add
push
int
dec
and
or
in
test
pop
subb
mov
xchg
jg
jge
iret
jg
sbb
adc
sub
mov
rorb
lea
or
push
xchg
cmp
loopne
ret
pusha
mov
cmp
jge
stos
add
pop
es
jb
cmp
jp
in
mov
mov
xor
sub
push
mov
sbb
dec
xor
out
shlb
inc
jnp
es
lods
fsubl
adc
mov
sarb
jb
mov
mov
mov
mov
sub
mov
and
cmp
push
xlat
pop
lea
add
sub
adc
dec
pusha
push
out
loopne
add
cmp
jae
mov
aad
xchg
xchg
pop
in
cmp
dec
lret
jmp
bound
mov
push
cwtl
es
add
loopne
ret
push
sahf
push
inc
popa
dec
mov
out
or
mov
fsts
dec
cmpl
add
dec
notb
xchg
push
pushf
lods
push
jo
js
addr16
test
jns
popf
fcomps
out
sar
lret
xlat
mov
ljmp
lret
mov
sub
pop
pop
adcb
xchg
mov
sti
mov
jns
shll
in
pop
out
jb
popa
out
jno
outsb
mov
mov
push
xlat
cmpsl
ja
in
pop
push
lret
nop
call
sbb
xchg
in
sbb
sahf
xchg
sbb
pop
xor
xor
in
jae
jns
adc
xor
jae
and
adc
lret
jp
push
sbb
inc
xor
sub
mov
push
mov
stc
insl
xchg
jno
and
cmp
out
sbb
xchg
fdivl
mov
cmpsl
repnz
aad
test
std
lock
mov
aaa
gs
xchg
push
pop
ds
cli
or
lods
and
arpl
inc
into
out
or
inc
in
test
test
aas
add
mov
dec
ds
pop
sbb
scas
fildll
adc
aad
add
add
test
jnp
ret
cmp
xchg
lods
cmpsl
pop
add
xchg
movsb
mov
ror
arpl
mov
xor
push
push
and
mov
adc
mov
inc
f2xm1
sbb
int3
orl
add
movsb
inc
jo
pop
sarb
push
outsl
xchg
je
scas
in
insl
dec
lock
idivl
or
hlt
push
xchg
mov
frstor
aad
inc
add
cmc
jno
fucomip
sbb
scas
jne
sti
mov
dec
dec
cmp
nop
xor
inc
arpl
jo
leave
dec
jne
mov
out
cmp
clc
in
pop
je
xchg
mov
lods
pop
repz
jle
or
xlat
insb
adc
mov
and
rorl
cmp
les
and
push
pop
xchg
sbbb
sbb
icebp
push
push
nop
daa
xchg
xor
loope
andb
fwait
inc
xchg
pop
loopne
stos
xor
and
cmp
and
xchg
push
daa
jle
mov
insb
inc
cmpsb
mov
loopne
inc
je
js
inc
sub
out
test
push
aad
lds
jp
pop
pop
cmc
pop
sub
int3
lea
xor
jle
fldl
notb
mov
shlb
lahf
pop
xor
pop
orb
mov
adc
add
push
cwtl
push
cs
insl
dec
ja
int3
insb
cwtl
xchg
mov
gs
ljmp
lret
push
cwtl
pop
sub
dec
xchg
out
mov
push
inc
ret
pusha
test
and
movl
add
adc
les
and
lods
mov
setbe
repnz
mov
xchg
cmp
mov
rcl
push
fildll
adc
add
and
xchg
das
xchg
jmp
data16
sbb
in
jbe
jp
scas
andnps
fldt
pop
adc
leave
mov
jno
aad
movsb
imul
lahf
dec
mov
ret
and
mov
xor
add
sub
data16
xchg
xchg
fisubrl
lods
movsl
cmc
sahf
inc
xchg
mov
inc
outsl
pop
fcoml
inc
outsl
lea
xor
mov
ljmp
adcl
add
mov
jp
mov
in
xchg
shrb
loop
stos
jmp
mov
mov
jno
loop
and
push
test
ds
clc
mov
pop
adc
sbb
in
dec
jb
test
xor
xchg
insl
cmc
cmc
xchg
aam
filds
sub
sub
add
ret
mov
inc
inc
lock
aaa
dec
add
enter
es
push
imul
mov
jecxz
xor
dec
aaa
outsl
sub
sbb
insl
mov
cmc
jne
xor
pop
lock
push
pusha
shlb
push
hlt
jnp
stos
into
sarb
fldl
fsubp
mov
xchg
sbb
dec
xchg
and
js
dec
ljmp
xchg
mov
jno
inc
pop
popa
icebp
fcomp
sbb
push
add
mov
xor
adc
rcr
dec
push
xchg
movsl
dec
test
sub
fisubrl
inc
ss
nop
hlt
ret
lret
sbb
popa
pop
xor
rcr
filds
cmp
adc
pop
xchg
imul
jl
mov
or
jmp
pop
insl
fisubl
dec
push
pushf
test
lods
xchg
inc
dec
xchg
clc
jb
nop
psllq
aas
push
cs
call
scas
loope
mov
fisttpll
inc
fmull
pop
rol
push
xor
cmpsl
mov
push
jo
subb
xorl
je
test
arpl
add
adc
mov
and
or
or
jg
fwait
pop
lret
fidivs
sbb
std
lcall
xchg
add
loop
adc
inc
pop
xchg
aad
pop
ja
mov
push
int3
jecxz
daa
cmp
mov
das
jle
dec
icebp
push
cli
xor
or
in
test
addr16
out
rolb
xchg
sbb
pop
stc
jp
push
movsb
fimull
jg
pop
xor
push
into
andb
es
dec
ss
sbbb
pop
cmp
out
jns
or
mov
cmp
aaa
adc
shrl
pop
push
sub
int
cmp
push
xlat
push
lock
xchg
fs
in
loop
setge
push
push
and
aam
or
fisubrs
inc
stos
fisubl
scas
dec
ljmp
dec
dec
std
nop
rclb
adc
add
inc
jp
mov
cmp
jp
loopne
bound
bound
jb
ret
scas
mov
addr16
outsb
push
add
pop
test
sbb
xchg
add
call
lahf
push
mov
jb
cmp
pop
es
in
daa
loop
inc
pop
int3
mov
xor
cmp
ljmp
jns
mov
insb
pop
es
addr16
pop
mov
shll
or
mov
push
sbbb
mov
inc
sub
add
dec
loopne
roll
xchg
fwait
mov
xorl
out
insb
sub
lahf
inc
ja
cmpsl
adc
and
mov
xchg
cmp
mov
lds
int3
xchg
xor
push
lds
inc
or
std
add
daa
movsb
clc
mov
dec
adc
push
mov
in
das
lret
arpl
mov
adc
loopne
lods
cmpsl
add
ss
cmp
pop
push
adc
xchg
xchg
xor
mov
inc
dec
adc
pop
dec
repz
or
jo
push
ret
inc
stos
jo
test
pop
shrl
arpl
adc
loopne
ftst
inc
or
dec
jecxz
jg
les
hlt
push
fstpl
xchg
mov
scas
in
mov
or
pop
add
push
push
mov
cmp
pop
out
pop
sbb
out
test
or
add
lock
stos
and
sub
push
jp
xor
pop
std
invd
ret
mov
mov
push
mov
and
jg
cmp
xchg
mov
adc
enter
mov
sahf
loopne
imul
movsl
mov
fdiv
adc
sti
sbb
inc
ds
ss
or
hlt
and
inc
out
lock
mov
fsubs
ret
divb
or
mov
decb
dec
mov
es
daa
testb
jecxz
xchg
or
sub
pop
lcall
fld
jmp
inc
xor
loope
bound
pop
mov
jmp
mov
or
es
fcomp
cmpsb
cld
cmp
xchg
mov
daa
in
and
xchg
les
xor
cltd
sub
cmc
mov
call
int3
push
sti
scas
test
ds
add
lods
inc
add
rolb
dec
out
pop
in
adc
popa
sbb
mov
mov
arpl
push
push
fsubr
mov
test
sub
mov
mov
lock
iret
or
sub
into
xchg
push
shl
sahf
dec
adc
rcr
push
enter
repnz
push
das
lock
ss
cmp
stc
sbb
add
adc
pop
jecxz
dec
rorl
mov
jne
pop
inc
xchg
mov
repz
gs
and
xor
in
jle
push
popf
jl
mov
shll
scas
mov
or
mov
jmp
pop
je
add
sub
or
jb
pushf
pop
xchg
loop
mov
sbb
fmuls
rorb
jns
ficompl
icebp
pop
js
pop
push
rcrb
mov
imul
mov
cmc
mov
jbe
pushf
inc
insb
testl
xor
jns
adc
sub
jmp
leave
dec
xlat
icebp
icebp
xor
and
repnz
scas
inc
test
mov
pop
imul
lret
test
jnp
fisttpll
loope
mov
sbb
ljmp
adc
dec
jl
add
repz
mov
jns
and
xorl
fpatan
mov
int
scas
daa
adc
xor
mov
sub
dec
clc
mov
cmc
push
push
push
sbb
in
inc
sub
xor
in
mov
jnp
pop
xchg
mov
add
stos
mov
mov
cmpsl
xor
fldt
sbb
test
xchg
pop
cmp
pop
maxps
xchg
pop
bound
test
push
mov
or
xchg
in
cld
sub
jmp
fyl2xp1
fidivs
clc
pop
js
push
push
adc
outsb
repnz
mov
dec
sbbl
cltd
and
jnp
test
cmpsl
scas
outsl
mov
or
push
add
and
ficoms
lods
fwait
and
adc
xor
inc
jmp
stc
and
mov
cmp
mov
add
xor
lods
mov
mov
add
out
mov
cmpsl
inc
test
adc
scas
test
repz
mov
fucomip
inc
sbb
jl
or
lea
dec
ret
xchg
fsubrl
push
pop
in
mov
sub
iret
in
hlt
pop
inc
mov
cmpsl
imul
fiadds
sahf
rcll
push
fisttpll
popa
enter
mov
pop
jmp
sbb
xchg
int3
lods
daa
int
sahf
addl
mov
xchg
daa
fwait
mov
outsb
faddl
repz
inc
in
cwtl
pop
lods
pushf
scas
pop
dec
call
lds
jl
pushf
mov
sub
dec
insb
sbb
loope
aaa
enter
jno
xor
in
pop
pop
sbb
notb
insl
in
lret
call
pop
pop
jns
out
mov
mov
fcmovu
or
test
out
inc
not
outsb
xchg
sbb
ljmp
out
jecxz
rcrb
mov
mov
or
dec
data16
clc
shll
rcl
mov
pop
cmpsb
jae
insb
xchg
xchg
insb
xchg
mov
sbb
mov
aam
inc
rcrb
and
pusha
sti
mov
xchg
out
dec
and
xor
jmp
lret
xor
jecxz
test
cmp
fildll
mov
add
testl
les
dec
pop
inc
shrb
incl
inc
jge
xor
jns
mov
rcrb
add
sbb
rcrl
pop
icebp
hlt
ss
push
fistl
lock
mov
ss
adc
inc
jae
pop
daa
testb
test
je
pop
insb
out
xchg
lret
xchg
test
movb
sub
insl
das
je
aas
sbb
jg
stc
cmp
std
dec
scas
lock
sbb
ljmp
sti
sarl
out
ficoml
aas
mov
jle
mov
mov
hlt
xchg
sub
mov
ljmp
inc
pop
xchg
leave
push
mov
or
jp
adc
adc
nop
push
xchg
xor
adc
jb
insb
adc
sar
lret
test
push
pop
xlat
mul
xor
pop
pop
mov
test
adc
stos
inc
test
icebp
ret
adc
pop
xchg
pop
pop
outsb
in
popf
and
mov
lret
aaa
xchg
shlb
cmp
xlat
add
scas
pop
aam
repz
xchg
xchg
lods
js
ret
mov
jmp
sbb
pop
std
mov
scas
add
ret
sbb
mov
in
adc
cmc
cmp
in
xchg
out
out
sbb
popa
mov
mov
fldl
ss
ja
jns
fdivl
outsl
repnz
sbb
arpl
insl
sti
mov
in
in
fmul
xor
test
sub
mov
int3
imul
shll
test
ret
sbb
mov
inc
mov
or
push
leave
lds
or
out
pop
and
cld
mov
push
xchg
call
test
inc
leave
cwtl
out
mov
mov
inc
nop
mulb
iret
lahf
push
or
mov
mov
cmpsb
pop
les
adc
cmp
movsb
add
in
sar
adc
ret
and
xlat
jno
cmpsl
mov
jge
sub
shrl
sbb
cmp
jnp
arpl
inc
or
sub
les
cmpsl
xchg
mov
js
mov
xchg
dec
mov
inc
mov
xchg
xchg
adc
sahf
scas
shll
push
leave
pop
int
std
adc
or
out
out
aaa
mov
sbb
insb
mov
adc
roll
fldl
sub
and
mov
lret
mov
add
xchg
cmp
push
xchg
xor
mov
or
mov
cli
out
ds
and
sti
ss
lds
lahf
ffree
leave
sub
std
sbb
mov
ja
push
sahf
cmp
mov
fucom
loope
push
lock
mov
jne
cmp
jmp
nop
push
fisttpl
xor
push
rcrl
jno
push
push
iret
pop
mov
aam
dec
push
test
in
or
xor
inc
imul
repnz
mov
jno
cs
adc
fsubs
push
inc
push
sub
out
insb
pop
test
adc
cmpsl
roll
call
inc
pop
repz
mov
jbe
xlat
insl
repnz
in
sti
sahf
add
xchg
out
pushf
nop
call
in
push
jl
or
pusha
jne
jp
sbb
jmp
mov
sub
outsb
insl
in
mov
int
enter
iret
mov
addr16
fists
adc
leave
cmp
xor
rcrl
popf
fcomps
jno
testl
daa
cmp
pop
sub
in
cmc
and
cltd
in
fists
and
lds
inc
or
rcr
outsb
out
cmp
pop
mov
cld
into
mov
inc
or
mov
and
add
add
lods
mov
dec
outsl
and
sbb
lret
pop
cmpsl
dec
into
imul
mov
jo
push
xchg
mov
inc
xchg
bound
inc
dec
mov
push
push
cmp
add
pusha
rcll
push
sub
xchg
jbe
mov
cmp
outsb
sub
xor
pusha
faddl
mov
aad
sbb
jne
aam
or
dec
push
pop
mov
insl
pop
mov
jl
mov
lods
cltd
lret
sbb
push
int3
xor
pop
rcll
inc
inc
data16
js
jbe
stos
dec
out
lea
cmp
lahf
repz
or
xlat
imul
insb
mov
cmpsl
cmp
addr16
xchg
ds
sub
jne
or
mov
je
outsl
popa
xor
es
push
sub
add
nop
inc
movsl
adc
pop
push
arpl
push
lods
jno
enter
imul
fldenv
test
ror
xlat
cltd
sub
push
jg
mov
or
xchg
or
pop
mov
fcoml
push
in
dec
sub
cmpsb
movsb
cmp
and
jb
jle
shrl
mov
dec
je
repnz
dec
inc
xor
movsb
cwtl
xor
cmpsb
aad
jl
mov
pop
push
shlb
imul
xlat
inc
pop
clc
enter
cli
hlt
cmc
test
mov
repz
add
xor
es
cmp
mov
sub
or
imul
jo
lock
jmp
inc
insl
jg
push
flds
aas
push
mov
in
xchg
ljmp
ret
and
pop
rcl
xor
jmp
adcl
jno
and
stos
cmp
lock
mov
or
dec
pop
outsl
sub
fs
cwtl
cmp
lret
xchg
aam
dec
movsb
lret
sub
rol
pop
clc
adc
sti
stos
sbb
fnsave
stos
pop
sbb
lds
mov
pusha
mov
hlt
mov
jns
loop
call
pop
cmp
outsl
int
and
adc
sti
mov
mov
arpl
lds
bnd
stos
sbb
sbb
or
inc
push
sub
adc
insl
jns
or
and
mov
cmp
xchg
xchg
xor
iret
pop
sub
jp
dec
mov
loop
fidivl
daa
lcall
mov
imul
cmp
adc
enter
xchg
popa
movsb
sti
stc
lock
push
rclb
sub
fdivl
add
push
cs
dec
adc
orb
fildll
cmp
enter
mov
fsubs
xchg
jge
or
mov
inc
lret
push
pop
cmpsl
xchg
in
iret
fsubrs
pop
ss
jle
push
xor
bound
sbb
mov
xchg
setne
int3
fdivl
pushl
cmp
jg
data16
shll
jl
popl
adc
lret
je
cmp
cwtl
sbb
or
dec
into
jno
lret
sbb
sbb
mov
call
adc
xchg
cld
push
mov
pop
pop
mov
or
mov
mov
sbb
pop
or
add
lahf
lret
add
mov
test
iret
and
stos
cmpsb
inc
jg
pop
jns
or
adc
cmp
cmpsl
and
icebp
jge
mov
or
gs
mov
lret
loope
rcrl
pop
push
stos
cmp
sub
xlat
fmull
add
loope
into
pushf
sub
into
adc
xchg
cmp
push
pop
ficompl
std
pop
idiv
jbe
adc
push
pushf
aam
pop
mov
loopne
movsl
in
punpckhbw
fstps
cltd
jbe
push
inc
mov
sub
cmp
push
inc
movsb
sarb
cld
pop
inc
sub
aaa
push
xor
mov
jnp
scas
cmp
addr16
repz
test
xchg
lds
into
aas
lds
dec
mov
xchg
imul
popa
mov
clc
fld
mov
clc
jae
push
icebp
adc
jg
xchg
mov
dec
push
jg
mov
clc
jns
inc
jne
mov
and
push
fistpl
cmp
leave
out
popa
xchg
pop
mov
sub
fwait
mov
insb
xchg
ja
fs
cmp
enter
xchg
arpl
lock
fnstsw
jecxz
sbb
ja
mov
xor
cmpsb
xchg
fs
push
stos
icebp
loopne
cmpsl
mov
inc
les
cmc
push
lds
and
lds
xchg
mov
mov
stc
jae
jp
sbb
rorb
cli
mov
ja
loop
inc
cwtl
push
movb
mov
gs
out
add
pop
add
dec
sahf
inc
adc
bound
adc
pop
mov
dec
xchg
in
push
ja
je
xor
lock
movsb
je
jb
or
int
fmull
mov
je
inc
mov
adc
jmp
push
and
jo
call
pop
dec
adcl
loopne
ds
je
in
pop
pop
insl
pop
jle
mov
sbb
pop
jp
outsb
clc
mov
cmp
out
jno
adc
sub
mov
jmp
and
mov
push
movsb
fcomip
data16
sbb
test
je
out
pushf
mov
adc
in
xor
lds
into
stos
xchg
xchg
leave
jl
dec
or
xchg
and
xchg
gs
aas
cs
movsl
push
mov
xchg
add
fcmove
and
pop
out
sub
out
adc
or
push
scas
repnz
sub
xor
sub
and
bound
test
and
cmp
inc
popa
test
addr16
outsb
pop
and
jg
aaa
sahf
push
push
mov
mov
xchg
mov
push
fildl
ja
sub
in
shrb
pop
data16
sbb
pop
scas
lods
jmp
pop
xchg
out
int
jb
sbbl
stos
in
enter
rolb
mov
or
mov
fistl
xlat
sub
mov
bound
add
cwtl
push
fcompl
cltd
mov
push
push
xchg
nopl
adc
loopne
shrl
mov
arpl
xchg
cmp
std
inc
sub
push
mov
inc
out
sub
push
dec
lahf
xlat
fnstsw
or
std
out
jno
mov
mov
inc
std
das
jecxz
pop
icebp
add
into
push
test
test
repnz
or
cmpsb
sbb
aas
mov
dec
js
push
loope
adc
sbb
inc
sar
cmpb
inc
adc
mov
lea
inc
sub
mov
dec
cmpsl
push
adc
mov
dec
lock
jmp
lds
jg
sbb
xorl
fistps
enter
cmp
adc
dec
push
lret
std
pop
xlat
lret
int
or
lods
mov
insb
jbe
and
frstpm(287
aam
sub
push
insb
sbb
and
or
les
mov
sbb
dec
popl
sub
int3
outsb
roll
testl
test
inc
outsl
dec
test
jne
in
sub
in
push
cld
int3
mov
lcall
jmp
fiadds
test
pop
scas
mov
mov
mov
sbb
inc
mov
in
fwait
jno
cs
and
shrl
insl
and
mov
stc
test
push
or
xchg
xchg
xchg
jnp
xor
movsb
lds
cli
cmp
cli
jb
inc
fwait
xor
sarl
ja
clc
ficoml
insl
sub
sbb
mov
and
ret
repz
jae
adc
inc
mov
mov
and
shl
xorb
mov
out
das
cmp
cld
xchg
or
jae
inc
xor
or
dec
adc
sub
inc
pop
jle
pop
nop
add
mov
fiaddl
rcrb
and
and
sub
mov
mov
mov
roll
addb
push
push
inc
push
pusha
add
jb
imul
loop
push
push
inc
out
jnp
jp
out
clc
pushf
xor
fs
subb
pop
subl
pop
subl
call
aam
xlat
push
imul
addl
inc
push
adc
test
sub
pushf
ds
fldenv
inc
sti
pop
out
mov
sbb
fsubl
lock
fisttpl
test
or
adcl
fbld
pop
inc
jbe
jl
add
pushf
jge
cmp
add
sbb
in
push
pop
dec
es
ficoml
xchg
je
adcb
test
or
fisttpl
xor
inc
xor
inc
mov
dec
hlt
cmp
sbb
call
adc
mov
sbbl
imul
sub
mov
inc
scas
and
xchg
push
out
ret
rep
sbb
outsl
addl
adcb
es
push
outsl
andb
fstpt
repz
push
movsl
pop
sub
insb
mov
push
pop
and
clc
and
or
imul
ret
gs
add
cltd
jo
xor
addr16
push
xchg
insl
cmp
dec
dec
pusha
in
sub
lret
rcll
test
lret
negb
adc
mov
test
or
xchg
sbb
xchg
xchg
mov
mov
test
mov
xor
out
enter
push
adc
mov
inc
test
cmp
call
cmp
out
xchg
cld
sahf
fldt
in
lcall
and
xor
stos
arpl
inc
sar
loopne
or
test
addb
sub
xor
mov
pop
add
jns
test
dec
dec
mov
and
mov
lea
push
xor
movsb
jecxz
sahf
jg
cmp
adc
sbb
jg
push
cltd
xchg
mov
cmp
pop
pop
scas
mov
xor
rorb
pop
cltd
imul
les
adc
movsl
test
pop
add
in
das
and
out
jmp
sbb
adc
inc
or
les
cli
sbbl
sbb
clc
notb
mov
add
cli
fwait
sbb
lods
and
sub
test
mov
test
test
jns,pt
cmp
and
mov
movsb
mov
pop
mov
jl
cli
fstl
pop
popa
ss
dec
out
subb
push
popf
subb
insl
icebp
popf
cld
adcb
cmp
add
push
push
add
loop
fnstenv
jecxz
push
sbb
push
dec
sub
mov
in
in
roll
inc
mov
cmp
ja
cmp
jecxz
dec
inc
push
push
clc
mov
es
in
or
dec
inc
mov
xchg
and
mov
adc
cmc
fs
lods
cmp
xor
in
mov
cmp
mov
aad
subl
mov
xor
gs
xchg
jns
in
sub
xor
cmpsl
inc
add
movsb
sbb
js
fidivl
cld
mov
inc
cmp
cmpb
mov
and
icebp
movsb
adc
cmpl
fldcw
test
es
fsts
pop
pushf
clc
leave
cmc
dec
xchg
sub
add
push
out
sbb
cmpsl
cmp
mov
arpl
lcall
fwait
aaa
outsl
push
jmp
std
hlt
enter
enter
inc
pusha
mov
mov
xlat
jmp
xchg
inc
add
push
sub
push
cltd
xchg
lret
cmpsb
push
cmc
mov
outsb
adc
mov
fst
das
sbbl
lea
xchg
mov
ret
jbe
sbb
out
andl
pushf
shrl
leave
xor
fsubrl
test
aam
outsb
mov
stos
jl
pop
push
add
push
pop
mov
out
pop
aaa
and
lret
lret
int
mov
call
roll
dec
nop
rcll
jne
iret
mov
sub
or
sbb
mov
sahf
mov
pop
mulb
sub
pushl
inc
outsl
push
leave
add
lock
dec
dec
adc
lock
sti
fistl
dec
js
mov
xchg
xchg
dec
dec
ss
pop
stos
dec
enter
subb
and
gs
gs
xchg
shll
or
sub
add
sub
fistpl
cli
ljmp
and
sub
icebp
sbb
aas
push
dec
jnp
aaa
cmp
mov
mov
lret
adc
lea
iret
dec
movsl
or
fs
jb
xchg
mov
fdivl
lods
sbb
fsubrs
jge
int3
cmp
insl
mov
xchg
test
hlt
sub
jnp
int
and
mov
movsl
and
stc
jmp
data16
xchg
and
push
outsb
pusha
ret
iret
jmp
pop
shlb
push
pop
fisubs
in
inc
mov
or
push
rol
pop
cltd
mov
push
xor
flds
push
rclb
scas
push
cmp
sbb
mov
fstl
inc
pop
dec
cmp
or
int3
inc
mull
sub
mov
inc
mov
ret
enter
scas
stc
loop
xor
fdivs
call
push
xchg
aad
inc
shl
push
mov
mov
es
adc
adc
push
in
dec
xor
mov
mov
push
iret
imul
mov
out
adc
in
xlat
adc
jmp
out
xchg
cmp
pop
xor
xchg
cmp
in
sbb
cwtl
pop
ss
das
mov
movsb
lret
outsb
lret
xor
mov
cmp
sub
adc
in
pop
sub
fmulp
push
mov
dec
jmp
cltd
xchg
loopne
and
pcmpgtb
ss
xor
add
mov
sub
jge
dec
xor
leave
pop
pop
arpl
scas
pusha
repnz
pop
aaa
cmpsl
sti
add
pusha
push
pop
lret
out
mov
jne
cmpsb
sub
jecxz
ss
sti
pop
movsb
cmp
add
and
mov
ss
cmc
lret
outsb
loopne
loope
and
pop
call
xchg
add
dec
cmp
movsb
jbe
icebp
push
push
fstl
cmc
ja
dec
mov
sarb
mov
add
push
xchg
aam
mov
cmc
or
ja
fistl
sub
pop
pop
stos
inc
pushf
mov
inc
leave
jbe
and
xchg
add
fcomip
cmp
aaa
mov
movl
fwait
dec
pop
dec
jbe
jbe
pop
mov
sahf
daa
mov
push
inc
ss
fildll
push
adc
fs
xchg
testl
stc
jge
es
and
in
jecxz
jbe
jo
stc
jmp
in
ja
cmp
ss
incb
xchg
adc
mov
pop
jo
xchg
test
mov
adc
xchg
add
jns
daa
mov
mov
dec
push
in
adc
cmovns
rcrl
sub
loopne
aam
enter
adc
sub
cli
cmpsb
stos
jbe
aas
and
ja
adc
loopne
addl
out
adc
inc
pop
movsb
cmp
jge
inc
or
cmpsl
dec
lods
inc
sahf
cmpl
cmc
xchg
mov
cmp
fwait
popa
mov
and
push
mov
mov
shrb
jae
push
push
lods
add
shll
aam
adc
or
ret
or
cmp
fistl
js
jb
jae
icebp
test
je
daa
das
jmp
and
sub
stos
add
out
sbb
cmpsb
das
ss
cli
xor
or
xchg
mov
lahf
pop
fdiv
test
mov
push
pop
scas
push
cmc
pop
adc
popf
inc
or
mov
xchg
push
ss
cmp
xor
rorb
and
ret
call
dec
push
mov
ret
test
push
js
cmc
popf
inc
leave
addb
aad
add
pusha
jo
pop
mov
int
cmp
push
inc
lock
xor
stos
imul
in
pop
mov
jecxz
add
ret
mov
mov
repz
addb
notl
adc
fldln2
lds
hlt
and
mov
mov
call
push
lret
push
cltd
jmp
popa
xlat
inc
add
adc
sub
cmp
in
xor
sub
fnstenv
int3
push
push
outsb
cmp
mov
test
enter
push
push
rcll
push
pop
fsubrs
lcall
pop
xchg
push
test
lret
push
pop
into
sbb
std
sbb
adc
or
jmp
dec
outsb
sub
loope
jp
pop
mov
andl
mov
es
push
clc
push
xchg
int3
lods
add
sbb
aad
xor
pop
sbb
ret
outsb
xor
or
mov
loop
lahf
fcoms
jnp
mov
out
leave
ds
and
test
dec
cli
fistpll
cltd
aad
fcmove
mov
lds
add
dec
ljmp
push
repz
insb
xorl
fdivrl
fs
mov
sbb
dec
push
mov
and
mov
lcall
fstl
cmp
push
jmp
xchg
cmpsb
lret
mov
add
fsincos
pop
cmp
xor
hlt
mov
in
sbb
xor
sbb
push
adc
and
xor
mov
loopne
xchg
pop
insl
daa
mov
push
divl
cmp
and
je
or
sub
rcrb
je
cltd
cmc
je
jno
inc
inc
or
fnstsw
jl
xchg
and
rorl
icebp
mov
or
aam
bound
mov
mov
dec
pusha
andps
adc
mov
mov
jo
inc
cmp
mov
movsl
xchg
push
aam
mov
inc
and
testl
movsb
sub
out
mov
aad
adcl
aas
enter
bswap
pop
xchg
add
push
push
pop
into
out
sub
bound
stos
iret
addl
lret
xchg
scas
mov
insb
jae
shll
rcl
jmp
add
dec
insb
test
jns
loop
loope
scas
mov
ja
inc
or
jge
jp
cmpsb
add
sbb
ret
add
loopne
pop
fcoms
imul
mov
xchg
cmp
xor
pushf
cmp
stos
les
and
and
adc
adc
hlt
sti
call
adc
fsubs
pop
dec
sarl
and
cmp
add
lcall
pmaxsw
pop
mov
dec
pop
pop
push
movsb
sub
out
dec
mov
fistpl
mov
test
fmull
push
jl
inc
adc
out
insb
xor
call
cmp
push
cs
lcall
scas
pop
push
xor
push
mov
dec
mov
fwait
lahf
adc
sub
and
outsb
pop
add
mov
fs
adc
leave
jge
push
rcrb
repz
sbb
add
mov
jp
sub
gs
xlat
pop
add
in
pop
inc
mov
and
fidivrs
fistpll
ss
push
mov
push
lods
popa
mov
cmp
cmpsl
or
or
mov
mov
test
xchg
repnz
adc
pop
ret
mov
adc
das
loop
add
subb
loope
rclb
jp
push
jg
enter
nop
adcl
sub
stos
arpl
lret
adc
push
mov
int3
adc
and
sub
mov
jl
jmp
and
push
arpl
lret
push
jne
divb
mov
inc
lea
lret
or
and
pop
or
adc
add
outsb
sbb
adc
jle
sub
pop
sahf
xchg
rorl
fcom
lds
push
stc
lods
rcrb
cmp
push
fsubrs
es
fwait
rorl
mov
dec
fnstenv
pop
inc
push
sarb
push
iret
inc
jp
xchg
or
iret
push
push
repnz
cmp
or
inc
clc
lock
pop
fstpt
mov
lds
xchg
outsl
int3
sbb
ds
insl
mov
iret
push
adc
or
arpl
mov
push
lods
adc
jo
xchg
fimull
xchg
lahf
inc
xor
inc
cmp
pop
jmp
add
mov
imul
add
mov
pop
mov
sub
idiv
pop
xor
jae
int3
dec
pop
mov
aad
dec
neg
pop
adc
sub
popa
aas
cli
inc
orb
sbbb
loope
pushf
jo
push
lret
sbb
data16
jecxz
or
dec
fsubs
or
lock
lds
ljmp
test
and
das
pop
in
sbb
sbb
inc
mov
cmp
cmp
aad
scas
xchg
inc
in
iret
lret
pop
aad
rclb
xchg
idivl
outsl
cli
fwait
cmp
jne
lcall
pusha
out
sub
mov
subl
enter
cmpsb
xchg
popa
cmp
je
cmpsl
lods
fcomps
clc
and
cmc
xor
fisttpl
dec
pop
ffree
shlb
incb
xchg
mov
cwtl
lods
sub
fs
fsubs
and
cmp
mov
jle
adc
fidivs
jge
ret
jmp
ljmp
or
mov
adc
out
outsb
test
outsl
jns
xor
ja
repz
aad
js
pop
sbb
sbb
aas
lds
dec
dec
mov
mov
xchg
in
push
shlb
loope
inc
pop
dec
xorl
pop
movsl
jae
imul
xchg
idivl
dec
lahf
mov
xor
sbb
pop
jg
lds
mov
aaa
pop
dec
ret
stc
jmp
test
test
xchg
pop
testb
cmp
jge
add
negl
xchg
xchg
das
insb
jle
xchg
outsl
divb
adc
daa
je
mov
inc
push
xchg
aas
dec
push
cltd
movsl
lods
dec
lret
inc
sbb
push
mov
jl
sbb
lahf
jg
jmp
sub
xlat
sub
jo
int3
push
xchg
outsl
mov
sub
jne
testl
cmp
cmpl
add
loope
jle
rcrb
fldl
out
out
stos
ret
lret
jl
imul
cmp
test
jb
pusha
pop
mov
insb
pop
and
cmp
out
aam
sarb
ret
loopne
test
rorb
call
int3
cld
les
fisttps
add
repz
push
out
mov
popf
ret
rorb
sbb
int3
lcall
xchg
xchg
js
adc
mov
stos
es
arpl
imul
mov
ss
je
xchg
mov
add
fistpl
faddl
clc
cmp
or
inc
outsl
jbe
adc
int
pushf
or
incl
inc
xchg
push
icebp
imul
dec
lcall
cmp
fucom
mov
fnstsw
inc
mov
adc
arpl
int
dec
mov
jecxz
mov
hlt
xlat
add
mov
js
lahf
icebp
inc
lahf
xor
jmp
jmp
mov
mov
fcmovb
push
lahf
xchg
cli
xor
sti
and
pop
cmp
jns
cmpsb
and
mov
outsl
cmc
push
cmp
popa
sbb
or
sbbl
fcomps
jne
fwait
jmp
or
aam
lds
pushf
ret
and
call
sbb
int3
dec
inc
lods
imul
popa
pop
leave
sar
fistpl
adc
adc
sub
sarb
cmp
int
movl
pop
adc
cltd
stos
cmp
cltd
pop
jbe
rcl
mov
or
sbbl
pop
add
mov
jnp
fnsave
cmpl
jmp
ret
imul
mov
xchg
leave
sub
call
dec
iret
or
out
mul
xchg
add
lds
or
enter
in
shll
lret
dec
sub
or
adc
or
mov
adc
xchg
xor
out
xor
sbb
jns
cmpl
ret
push
jbe
in
iret
shll
xchg
cltd
or
adc
push
cwtl
int3
jg
jne
shr
cmpsb
xchg
inc
sbb
test
loop
mov
int3
popf
nop
stos
int
mov
test
notl
scas
or
fs
adc
dec
xchg
adc
add
inc
repnz
cltd
mov
cmpsb
push
insl
dec
inc
insl
lods
in
into
sub
push
inc
pop
mov
xor
dec
test
sbb
xchg
push
lods
arpl
fwait
clc
pusha
add
cmpsl
lcall
inc
xchg
stos
lods
in
mov
xlat
push
dec
out
frstor
cmp
dec
stc
aaa
xor
pop
mov
rcrb
in
pop
pop
sub
sbb
fidivrs
cmp
sbb
scas
cs
mov
stos
xchg
fbld
add
jg
push
out
mov
cmp
and
stos
push
ficomps
mov
inc
rcrb
push
and
cmpsl
jne
bound
mov
les
jl
ds
mov
in
sarb
into
ret
sbb
scas
mov
ljmp
out
test
jge
rcr
xor
test
iret
aam
mov
xor
fists
std
xor
pop
jle
cs
cmc
das
and
arpl
jle
mov
ror
jne
add
adc
add
sbb
inc
ja
pop
mov
inc
insl
shll
pusha
pop
xchg
and
lods
notl
roll
mov
fcmovbe
ret
mov
inc
out
and
mov
push
imul
and
sub
mov
mov
mov
ficompl
jmp
mov
addl
mov
pop
adc
adc
setbe
scas
mov
pusha
push
push
mov
dec
jmp
scas
mov
lret
or
mov
xor
imul
in
or
dec
imulb
fstpl
je
cmp
push
jb
mov
xchg
orb
or
daa
aam
stos
into
mov
dec
inc
jl
mov
sub
addr16
xchg
cmp
ljmp
or
out
sbb
push
xor
mov
jno
popa
add
inc
jge
sub
xchg
sub
jge
inc
xor
clc
and
sbb
or
cs
repnz
enter
out
outsb
imull
mov
mov
inc
scas
rcrl
out
pop
push
inc
cmp
push
or
xlat
or
xchg
xchg
xor
xor
in
ja
aaa
push
and
es
aaa
mov
es
nop
pop
fwait
mov
mov
loopne
nop
or
clc
pop
movsb
rcrl
mov
mov
mov
fisubrl
cmp
lods
sbb
test
rep
fdivrs
and
pop
cwtl
mov
in
clc
into
and
xor
mov
xor
jns
jne
test
cmp
fisubs
cltd
std
or
push
mov
lahf
mov
gs
ret
das
in
cwtl
lret
mov
push
jl
xchg
outsl
push
xchg
fwait
add
xchg
adc
fisubrs
testb
xor
jle
pop
cwtl
dec
popf
cmp
loopne
jb
enter
mov
gs
push
mov
testb
aad
aam
xchg
sti
dec
pop
mov
adc
push
mov
lods
and
add
enter
jbe
mov
mov
cmp
xlat
push
xchg
adc
mov
test
inc
fstl
sbb
dec
dec
aas
mov
sti
test
ror
rorb
lea
xor
je
aaa
add
or
data16
fs
and
fcoms
pop
jmp
mov
fwait
or
push
sbb
mov
fmuls
jae
inc
ss
xor
popf
dec
mov
sub
decb
inc
mov
jecxz
add
cli
sbb
push
mov
sub
push
xor
icebp
insl
lock
js
add
push
dec
add
jl
aas
cmp
cmpsb
and
repz
add
roll
add
sarb
mov
push
cli
lret
xchg
cltd
cwtl
xor
shlb
bnd
nop
jmp
inc
inc
movsl
pop
dec
insb
insl
push
cli
mov
clc
lret
jmp
sub
aaa
mov
movsl
or
cmc
jmp
or
aad
adc
inc
popa
jne
or
daa
push
subl
aam
pop
pop
pop
bound
in
jno
sti
dec
and
movsb
es
and
add
jmp
add
pushf
sub
ss
es
das
and
adc
jle
lds
dec
lea
jbe
cmp
push
mov
lret
jl
les
pop
stc
mov
pop
xor
mov
incb
or
cmp
sti
std
leave
imul
xor
lret
lock
fisubs
and
call
insl
xor
push
cmp
sub
dec
insl
scas
popa
aam
es
ret
mov
lcall
xchg
sbb
jp
daa
aad
mov
cltd
mov
aam
in
test
jecxz
push
adc
clc
push
popa
into
stc
jnp
out
xor
mov
pop
cmp
std
es
insl
add
sbb
and
and
clc
jne
dec
xlat
push
sahf
or
out
push
mov
xchg
mov
pusha
rorl
inc
xor
dec
cs
mov
push
adc
pop
rcrb
stos
data16
pop
in
lods
pushf
sbb
mov
and
lahf
dec
inc
add
xchg
jecxz
sbbb
dec
dec
mov
scas
jecxz
test
dec
dec
sbb
cwtl
rcrl
jle
mov
cmpsl
bound
mov
dec
sarb
pop
mov
and
dec
stos
cmp
inc
inc
les
arpl
sub
into
cli
and
mov
sub
add
mov
push
mov
sub
stc
movsl
sti
add
cmpsb
int
call
test
mov
scas
inc
xchg
test
scas
orl
or
pop
and
and
jmp
dec
ja
dec
fldenv
lahf
out
sar
add
and
xchg
push
lea
fld
or
dec
lods
pushf
out
movsb
add
aad
mov
ret
mov
lds
adc
fs
mov
push
les
or
sub
mov
xchg
popa
das
xchg
xchg
dec
inc
mov
sbb
or
shrl
jno
push
adc
xor
repz
xor
hlt
cwtl
dec
and
xchg
push
test
add
cltd
pop
pop
xchg
mov
ret
xorb
mov
sub
sbb
in
into
repz
jge
add
xchg
popf
pop
cs
data16
test
aas
outsl
push
jae
cld
sbb
mov
cltd
inc
inc
cmp
inc
pop
scas
xor
mov
clc
repz
xchg
mov
or
inc
movsl
or
mov
add
xor
xchg
icebp
push
leave
lea
loop
shll
push
lcall
sbb
dec
into
mov
cmc
adc
sbb
dec
lret
stos
cmp
and
pop
lcall
ljmp
scas
stc
fsubrl
nop
jno
fs
mov
gs
dec
ss
or
shrb
inc
pushf
adc
out
hlt
aad
inc
notb
xchg
xchg
push
sbb
cmp
and
fnstenv
stc
mov
fistpl
cmpsb
movsb
je
jmp
in
or
cmp
and
mov
jecxz
stc
or
pop
sbb
mov
enter
inc
scas
mov
or
imul
push
jmp
sbbb
jl
pushf
in
cmpsl
aaa
jg
sub
cwtl
push
push
scas
dec
fisttpll
orl
push
pop
xor
adc
mov
sub
inc
push
push
gs
push
fmuls
adc
mov
adc
mov
dec
sbb
aad
push
je
jo
imul
xor
in
or
and
push
or
cld
inc
xor
dec
sbb
xor
jmp
hlt
mov
js
xor
shll
pop
pushf
nop
test
mov
jb
xchg
pushf
jb
jmp
adc
in
inc
popa
add
add
add
out
testl
idivb
pop
int3
mov
nop
sbb
out
mov
enter
dec
mov
data16
or
outsb
aam
mov
pop
or
or
sbb
lds
sbb
push
frstor
lea
insb
jno
scas
xor
mov
mov
dec
std
xchg
sti
xor
loop
das
repz
and
mov
test
fsubrl
test
cmp
dec
fadds
rcrb
push
rorl
xor
xor
fistpll
test
and
enter
jns
js
and
xchg
mov
or
sbb
cmp
insb
mov
mov
xlat
lea
decl
add
sbb
or
into
push
sbb
icebp
xor
rclb
stos
inc
out
sbb
movsl
sub
imul
out
xchg
das
push
pusha
out
pop
in
scas
xor
xchg
rol
or
fs
mov
jnp
adc
or
inc
nop
scas
adc
cmp
pusha
cld
aaa
sub
cmpsb
out
mov
jne
cmp
mulb
pop
lahf
lods
pop
jne
cmp
inc
inc
mov
push
push
in
sbb
jo
in
sub
leave
outsl
subb
lea
mov
dec
mov
jp
and
xchg
enter
lret
pop
adc
popf
push
adc
and
jns
pop
fbld
add
jl
ja
loopne
loopne
lock
fbld
daa
lods
insb
push
shrb
dec
xchg
inc
sbb
xchg
adc
iret
mov
and
sbb
add
sbb
popf
adc
push
and
mov
push
mov
cmp
iret
fcomip
push
mov
mov
stos
lcall
xor
push
arpl
jbe
mov
cmpsb
subl
lods
xor
push
push
lahf
jbe
mov
int
jg
fistpll
imul
mov
mov
rcr
add
iret
int3
frstor
cltd
push
out
mov
test
out
add
pop
nop
lret
sti
xchg
ds
push
inc
loop
inc
int
mov
inc
aam
sub
lods
adc
and
imul
enter
lods
jb
cld
cmpb
shll
ss
add
in
pop
push
mov
xor
inc
fucom
dec
imul
xchg
or
xchg
lods
mov
test
sbb
and
pop
cmp
mov
jne
xchg
sub
jl
jne
mov
mov
pusha
addr16
adc
sub
mov
ja
add
out
jp
pop
sub
sbb
mov
int3
dec
mov
cmp
les
insb
xor
and
sbb
imul
cmpsb
and
call
xorl
adc
sub
call
cwtl
sbb
pop
ret
fsubrs
xor
lods
xor
jbe
hlt
cmp
jecxz
adc
cs
daa
or
xchg
pop
xchg
dec
mov
into
jo
cmp
addb
inc
pop
movb
inc
mulb
out
inc
and
add
sbbl
idivl
repnz
xor
out
stc
mov
pop
fcoms
and
dec
cmp
nopl
mov
sub
mov
lea
mov
mov
xchg
fcoms
in
jecxz
or
sbb
sub
lods
jg
cs
lcall
jnp
cmp
popf
js
sub
add
imull
mov
and
dec
mov
inc
pop
jp
and
xor
mov
sbb
jmp
aad
pop
jns
push
cmovl
and
pop
mov
adc
mov
inc
jno
xor
iret
bound
scas
dec
mov
mov
jno
or
and
sbb
inc
out
push
dec
repz
roll
cmpsl
test
ret
sbb
and
cmpsl
rol
jl
test
push
dec
adc
test
aaa
prefetchnta
movsb
jge
pusha
loop
cmp
sbb
add
hlt
xchg
ds
imul
fidivs
js
mov
in
xchg
adc
stos
sbb
mov
repnz
mov
inc
cmp
or
sub
inc
fadd
movsl
xchg
in
push
and
push
test
sbb
cwtl
addr16
fiaddl
add
rcrb
bnd
mov
cmp
push
scas
fistl
cmp
insb
stos
imul
in
jns
pop
adc
inc
loopne
scas
movsl
jbe
fstpl
leave
mov
xorb
push
ret
cltd
mov
mov
cmp
negl
mov
insl
aaa
push
push
dec
push
mov
inc
ffreep
mov
or
test
daa
mov
inc
fistpl
cltd
fimuls
mov
inc
aad
popf
inc
mov
fistl
mov
movsb
out
xchg
cmp
hlt
fs
mov
popf
sbb
dec
call
cmp
icebp
xchg
imul
sbb
das
lret
mov
push
hlt
xlat
xchg
and
xchg
stos
data16
addr16
ljmp
movsl
xrelease
jnp
xor
scas
inc
mov
mov
loop
jne
adcb
aam
aaa
mov
test
pop
xor
mov
imul
insb
out
or
pop
xchg
lock
and
pop
cmp
pop
aam
out
adc
fistpl
ss
mov
ficomps
xchg
dec
push
outsb
aaa
cmp
out
in
in
scas
lods
hlt
addb
pop
mov
cmp
hlt
movsl
dec
loope
lods
jl
out
pop
imull
enter
cwtl
popf
rclb
cmpsb
addb
pop
and
and
les
cld
cli
insl
jl
lock
cltd
push
fistps
rcll
out
mov
leave
pop
cltd
int3
leave
or
fwait
aad
test
add
aam
dec
lret
adc
lret
mov
mov
fs
push
sub
daa
mov
andl
dec
call
dec
mov
pop
sub
pop
scas
adc
aaa
bound
or
std
es
sbb
sbb
sbb
mov
xor
mov
int3
js
jnp
es
pop
push
adc
mov
aam
cmp
push
mov
lcall
jae
cmp
pop
pusha
pushf
inc
fs
pop
and
jg
jle
cmpsl
popa
dec
gs
pop
mov
inc
mov
or
clc
xchg
pop
loop
inc
nop
loop
jmp
or
mov
jbe
rcrb
lea
loope
out
cld
sbb
mov
pop
push
mov
inc
adc
mov
pop
add
xchg
imul
sub
push
popl
dec
push
ss
mov
bound
sahf
adc
push
inc
inc
orl
lahf
xor
ljmp
add
push
ss
jb
lock
xor
scas
popa
stc
fucomi
cwtl
aad
leave
jg
mov
movsb
sbb
stos
mov
out
aam
cmpsl
cwtl
push
enter
jnp
test
outsl
clc
xchg
mov
ds
sarb
in
or
jo
dec
cmp
sub
jno
stc
sbb
fcmove
stos
dec
enter
lea
dec
cmpl
lock
push
add
int3
sbb
addl
pop
popa
inc
xchg
test
loopne
cmp
stos
orl
fwait
pop
or
cs
aam
stos
stos
cmp
push
jo
jecxz
pop
push
lea
mov
mov
jge
ss
faddl
sbb
ds
xchg
popf
subl
push
lock
inc
mov
push
fiadds
mov
mov
clc
pop
popf
mov
cmp
lods
cmp
mov
jnp
xor
cmpsb
lds
cmp
dec
aaa
into
dec
sbb
adc
enter
js
jae
dec
sub
sbbl
fcmovnbe
cs
and
xor
dec
dec
ret
cld
das
push
xlat
loop
mov
movb
cmp
lahf
jl
inc
xor
clc
xor
lock
mov
rorb
rorb
cmp
xlat
dec
loope
mov
push
mov
pushl
fs
shl
mov
sti
movsb
arpl
xchg
das
repnz
jb
mov
fstl
push
pushf
mov
mov
fsubrp
icebp
popf
insl
jo
fisubs
xor
push
idivl
in
mov
or
push
or
scas
lock
dec
mov
add
mov
mov
mov
pop
xchg
adc
sub
xor
stos
lds
cmpsb
or
mov
imul
sbb
aaa
sub
in
pop
lahf
repz
jbe
dec
push
sub
lds
jbe
xchg
jae
les
jae
into
sub
enter
adc
in
pop
and
mov
je
push
jg
jp
lret
lret
lret
sbb
testl
mov
ja
gs
xlat
push
and
dec
or
mov
out
lret
shr
lods
and
jle
loopne
mov
repnz
into
ss
iret
add
and
or
mov
arpl
push
sbb
push
jl
movsb
mov
leave
shr
leave
jb
daa
jg
lret
lahf
add
lret
aas
popf
adc
mov
cmpsl
pushf
or
xor
ja
inc
aaa
movsl
sbbl
pop
in
pop
or
test
mov
cs
xchg
adc
or
stos
gs
or
fdivr
add
sbb
pop
out
push
cs
arpl
loope
xchg
iret
push
xchg
xchg
scas
cmp
rcl
push
addr16
xchg
clc
iret
sbb
add
xchg
add
scas
scas
mov
push
into
dec
add
test
bnd
orl
jno
push
pop
push
dec
lret
popf
xor
out
outsb
fs
adc
test
imulb
pop
add
add
adc
test
pinsrw
packssdw
out
leave
push
inc
icebp
jle
sub
cmc
fnop
add
gs
in
lahf
fidivs
scas
jne
mov
mov
out
gs
or
icebp
shlb
icebp
andb
add
sbb
xor
dec
fdivp
or
or
movsb
xchg
daa
imul
ret
or
shrb
lcall
clflush
pop
inc
inc
hlt
aam
inc
test
popl
cmp
xor
add
pop
pop
cmp
ret
and
cmp
ret
inc
push
rcrl
jae
pusha
in
and
inc
gs
stc
xor
lock
int
mov
sbb
sti
loopne
outsb
xchg
adc
push
add
mov
inc
jns
add
imul
shll
and
mov
xor
cld
xlat
mov
push
popf
cmp
sarb
clc
and
iret
push
gs
jl
cmp
push
in
test
inc
inc
mov
shrl
int
sahf
sbb
fs
mov
xor
out
push
xchg
inc
loop
sbb
dec
add
cli
pop
and
mov
lods
ss
mov
mov
pop
adc
inc
push
xchg
pop
ficomps
std
or
test
xor
and
fisttps
clc
or
lods
jle
jecxz
pop
data16
mov
and
jle
add
sub
add
xchg
inc
dec
mov
mov
pop
xchg
ss
push
cmc
call
fldl
mov
push
das
or
lret
roll
cmpsb
lcall
and
inc
mov
dec
mov
stos
fdivrl
xlat
and
movb
add
clc
or
adcl
xchg
and
outsl
mov
add
jmp
mov
mov
lret
add
xchg
cwtl
xor
cltd
or
pop
addr16
sub
mov
jnp
test
jns
repnz
mov
jl
mov
addr16
xchg
bound
out
dec
aaa
push
repnz
dec
push
ljmp
or
add
jb
mov
jnp
mov
xchg
pop
push
je
mov
push
jnp
leave
push
mov
push
mov
cwtl
cmpsl
loope
testl
fs
shrl
sarb
pop
aam
scas
fwait
cli
push
mov
popa
push
out
jp
outsl
cmp
in
mov
mov
and
mov
dec
push
xchg
inc
insl
popf
scas
jno
rcrl
scas
push
add
out
lret
dec
fidivl
hlt
mov
movsb
arpl
sub
jg
xchg
pop
jns,pn
loop
iret
das
repz
pop
jp
fldl
sarb
lahf
je
jno
iret
sub
jg
out
push
push
jecxz
movsl
stos
aas
enter
ja
movsb
and
fmull
in
loop
mov
xor
out
in
fisttpl
push
adc
push
mov
add
push
xchg
mov
xchg
xchg
sarl
mov
xchg
push
mov
faddl
push
jb
call
movsb
add
add
shrl
pusha
mov
and
in
adc
mov
sbb
out
xchg
mov
scas
test
mov
pop
lahf
imul
dec
pop
jle
cmpl
lods
rclb
push
test
mov
pop
or
das
fsts
montmul
cmpsb
ret
icebp
sbbl
mov
out
fcoml
inc
in
pop
je
insl
push
adc
lea
and
lods
mov
mov
in
cltd
testb
test
ss
pop
pop
dec
lds
mov
adc
add
std
stos
scas
adc
outsb
cmp
add
or
shr
dec
lods
mov
scas
stos
mov
add
inc
enter
jae
cld
rcl
dec
clc
jns
ss
push
mov
addr16
jbe
je
xchg
sti
jno
sub
fwait
add
into
in
mov
fistps
mov
ljmp
and
bound
mov
pop
test
xor
and
inc
mov
or
sub
mov
add
pop
negl
add
mov
dec
and
loop
jg
fs
and
mov
mov
mov
and
cs
xor
aaa
mov
daa
scas
lea
adc
jb
mov
icebp
int
mov
or
mov
repz
push
shl
push
and
lods
jbe
pop
iret
xlat
lret
push
je
and
push
mov
addr16
mov
and
cmp
icebp
fiadds
je
push
adcb
ret
out
sub
mov
jno
pop
in
fsts
mov
rorl
xor
mov
iretw
mov
int
out
xor
dec
cmp
jmp
loope
mov
dec
daa
sbb
dec
jmp
stos
cwtl
jne
lret
sarl
xor
xchg
lods
sub
adc
inc
mov
push
mov
xchg
push
mov
push
cs
ret
mov
in
or
cltd
cmp
stos
pop
push
test
aas
or
add
push
aad
aam
or
xchg
int
daa
xchg
mul
pop
fsubrl
jp
mov
test
sahf
dec
mov
cmp
cld
pop
add
loop
int3
sarl
nop
aas
xor
push
jle
ret
data16
sub
bnd
mov
adc
or
push
shll
hlt
fsubp
mov
sti
shl
xchg
mov
mov
in
aam
sub
popa
push
in
inc
or
cmpsb
ror
or
xchg
nop
subl
adc
dec
dec
sarl
adc
jnp
sbb
pop
fsubrs
xor
ret
mov
ja
pop
xor
das
mov
outsl
scas
adc
test
repnz
stos
insb
movsb
mov
popa
outsb
xchg
flds
into
iret
mov
test
xor
das
cmc
and
push
push
xchg
insl
and
in
in
xor
mov
rolb
ljmp
mov
inc
orl
rorl
pushf
insb
inc
mov
cmp
sbb
ficoml
and
or
out
push
push
xchg
aaa
cmp
stos
or
ret
dec
adc
jb
fidivl
sub
add
sub
rorl
inc
out
xchg
ret
rolb
fdecstp
jmp
cs
shrb
dec
out
or
adc
notl
sbb
or
push
push
ret
or
push
dec
cs
js
sbb
cmpsl
adc
les
repz
mov
cmp
enter
aaa
xchg
dec
aam
xchg
or
push
fs
pushf
jge
outsb
xchg
hlt
shll
insl
es
mov
fwait
mul
or
out
das
mov
xor
cmc
hlt
scas
outsb
ret
cmpsl
cmp
jnp
mov
rorb
js
push
mov
jnp
insl
jns
xchg
jae
xor
sub
mov
sbb
in
push
fs
and
jae
jmp
mov
mov
mov
enter
leave
pop
mov
ret
and
xchg
xor
nop
xchg
hlt
pop
xchg
sbb
clc
inc
jmp
adc
push
sbb
adc
jle
sbb
and
mov
vandnps
push
aam
xor
cli
test
andl
pop
or
out
push
lock
fnstenv
fldl
in
or
mov
and
cwtl
fisubl
movsl
lds
and
test
fstpt
scas
gs
aad
test
xor
cmp
jle
jmp
gs
mov
and
push
sub
cmp
imul
sub
xor
lea
jbe
jg
pop
and
adc
lcall
sbb
mov
and
jno
xor
mov
push
push
mov
xor
adc
mov
in
and
scas
xor
jmp
fsubrl
pushf
cli
mov
sahf
pop
mov
cmpsb
jge
popf
or
sbb
add
mov
aad
mov
mov
mov
and
adc
mov
cld
je
mov
inc
and
jb
adc
push
xlat
pop
pusha
lods
insl
xorl
cmpl
icebp
mov
jge
ljmp
gs
adc
mov
test
es
hlt
and
dec
push
lahf
push
shll
adc
jecxz
jle
andb
ret
test
xchg
pusha
mov
int3
cltd
inc
pushl
fldt
test
mov
aad
sahf
pop
push
mov
jge
dec
loop
push
or
iret
push
jmp
adc
mov
jp
or
adc
xchg
jne
jb
mov
xor
sbb
in
push
or
mov
dec
ret
pusha
push
fldt
adc
and
adc
pop
hlt
adcl
or
mov
movsb
stc
fwait
pop
push
mov
in
sbb
and
arpl
jg
pop
mov
add
pop
cmp
mov
inc
mov
pop
mov
push
sbb
aas
sbb
sbb
inc
fdivl
xchg
add
iret
mov
inc
imul
test
add
mov
push
cmpsb
pop
jbe
xchg
mov
nop
adc
int3
push
cmp
dec
ds
adc
movsl
xchg
adc
unpckhps
mov
xlat
je,pn
mov
xchg
fnsave
repz
orl
push
and
ja
popf
push
jnp
cmp
and
cld
dec
lock
push
enter
and
xor
pop
xor
pop
jbe
js
dec
add
cmpsl
adc
mov
loope
xor
xor
es
cmp
push
push
pushf
or
pop
data16
imul
test
inc
flds
test
xor
xchg
sub
stos
jns
xchg
popf
in
aam
loop
cld
lret
mov
pop
popf
push
js
scas
call
jp
push
cmp
leave
pop
push
in
jnp
push
jg
bound
mov
in
pop
add
ljmp
xor
and
cltd
adc
dec
aas
sub
pop
insl
xor
test
inc
push
lea
aam
ret
loop
inc
rcr
xchg
in
repnz
cld
enter
iret
inc
int
hlt
aad
sbb
test
xchg
decl
test
inc
sarl
stc
jae
dec
push
add
decl
es
pop
add
jno
cmp
push
pop
push
xchg
and
inc
mov
les
xchg
mov
scas
pop
pushf
ret
les
jge
rcr
dec
and
loope
fcmovbe
fwait
pop
nop
mov
jbe
stc
pushw
add
test
xchg
insl
cmc
sub
aam
outsl
xchg
leave
pusha
mov
jb
jns
js
and
mov
aad
std
jmp
xorl
les
cmp
push
xor
cmp
cmp
mov
dec
cmp
mov
and
sbb
mov
aad
dec
mov
sbb
mov
out
popf
scas
dec
mov
jno
mov
fcompl
pusha
mov
lods
push
std
and
subb
rcrb
mov
ret
and
fld
rclb
lods
mov
test
gs
sarb
pop
add
xchg
test
mov
jle
movsb
jbe
jg
mov
pop
cmpsb
loopne
jno
aad
jmp
out
mov
push
mov
popf
lahf
loop
js
xchg
imul
nop
xchg
cmp
aad
aad
xchg
shrb
xchg
mov
or
jno
cmpsl
push
mov
addr16
out
test
dec
lret
shlb
mov
cltd
mov
das
and
mov
add
test
movb
xor
cmp
arpl
jle
push
inc
fnstcw
or
in
test
data16
ret
int3
mov
mov
pop
mov
sbb
mov
aaa
dec
cltd
cmp
aaa
jp
mov
push
aas
fidivrs
sahf
cltd
jle
sub
inc
inc
into
imul
and
out
into
sub
outsl
jo
or
inc
cld
mov
adc
lods
pop
sub
ret
loopne
insb
js
cmp
add
cmp
fidivl
push
fsubrs
or
cmp
fidivl
hlt
mov
cmc
sub
adc
dec
lcall
shr
push
jae
sbb
leave
pop
cmp
out
push
mov
popf
gs
faddl
rolb
dec
lahf
pop
insl
xchg
xchg
jmp
cmp
push
dec
cltd
mov
fdivrs
fcompl
sbb
jne
xor
insl
out
jns
iret
and
jmp
jp
xchg
test
imul
rclb
xchg
fcompl
inc
mov
les
sub
das
or
inc
insb
repz
int
adc
subb
pushf
add
andb
test
cmpsl
cs
mov
mov
out
ja
js
lods
lahf
daa
out
pop
lcall
mov
sub
jecxz
lret
mov
dec
loop
into
pop
xor
push
popa
xchg
repnz
mov
ljmp
subl
data16
lods
bound
adc
add
sbb
xchg
jp
xchg
test
push
sub
sbb
int
add
int3
inc
adc
push
pop
add
ja
xor
mov
loop
cwtl
aad
cli
push
or
xchg
lds
mov
gs
jmp
stc
out
mov
shl
lahf
ss
insb
pop
pop
fadds
hlt
lahf
fnstsw
xor
and
jne
ja
lcall
mov
xor
and
popf
cmp
inc
scas
jmp
ret
das
out
xor
ja
inc
bound
std
mov
mov
cmpsl
mov
and
dec
mov
or
xor
pop
inc
mov
sub
scas
inc
xchg
lret
push
pop
cld
and
orb
cmp
test
mov
addr16
add
ret
fcoml
outsb
clc
mov
dec
mov
mov
sub
roll
aam
mov
jae
cmp
pusha
sub
std
cs
adc
loopne
inc
and
xor
pop
dec
push
cld
hlt
push
cmp
test
mov
push
in
repz
mov
loop
push
fxch
fidivl
cmp
mov
jb
outsl
out
push
stos
ja
aam
stos
sbb
inc
subl
loope
fiadds
mov
popl
in
rcrb
lret
out
mov
mov
inc
cld
pop
leave
mov
pop
jne
adc
leave
test
mov
sahf
aam
lods
std
xchg
add
or
mov
jp
push
bnd
cmpsl
aad
iret
shrb
mov
and
lahf
out
sbb
insb
add
xchg
mov
jne
aad
push
pop
shrb
xor
add
or
jns
mov
movsl
push
mov
mov
pop
push
push
aad
out
in
mov
mov
pop
dec
je
idivl
popa
mov
inc
xor
into
jno
adc
orb
insb
pop
cmp
cmp
mov
or
test
sbb
cmp
repz
shrl
mov
add
pushf
mov
mov
test
in
and
loop
lods
sub
push
imul
dec
jb
mov
test
jg
into
into
mov
xchg
xor
stos
insb
xor
xchg
cmp
notb
push
cld
ficompl
mov
shll
das
xchg
lcall
cmp
cmc
jne
leavew
ss
ss
push
pop
dec
or
mov
sub
ret
xchg
push
js
cmp
lea
sub
addr16
inc
inc
imul
nop
jo
push
sbb
in
xchg
xlat
sub
xchg
sbbb
dec
fstpl
fwait
out
leave
push
fdiv
mov
scas
test
mov
das
cmpsb
push
adc
loop
mov
mov
lcall
xchg
jae
mov
in
sahf
ret
popa
mov
cmp
jmp
insl
pop
jecxz
or
mov
xorl
lahf
ljmp
jo
jnp
xchg
in
xchg
out
cmp
scas
adc
xor
popa
push
jge
mov
shlb
sub
push
push
and
rorl
pop
push
push
xor
cmp
test
mov
cmp
xor
push
jecxz
add
or
mov
js
aas
loope
loope
roll
movsl
sbb
lock
out
add
pop
je
xor
inc
lret
ret
clc
fildl
xchg
mov
adc
sub
xchg
pop
push
sbbl
cmp
addr16
ss
add
or
mov
push
icebp
pop
dec
cmc
dec
xor
sbb
mov
pop
test
push
lea
jmp
push
sbb
pop
insb
int3
lods
mov
outsb
sub
je
pop
negb
add
imul
cmpsl
push
inc
sti
addw
fisubl
jb
xchg
push
inc
cmp
rcll
call
lds
jne
xor
jl
adc
nop
sub
in
mov
pop
push
loop
cmp
inc
mov
pushf
test
inc
cld
in
mov
pop
sub
cli
adc
negl
cmp
push
dec
sub
cld
aam
or
movsl
into
pusha
mov
pop
in
xor
add
enter
push
inc
divb
ds
sbb
jno
jnp
stc
pop
into
std
loop
add
sbb
and
mov
lahf
sbb
xchg
ficoml
mov
xchg
mov
js
push
faddp
rcrl
aad
jge
fwait
mov
pusha
xor
inc
xor
push
scas
inc
xchg
insb
out
sbb
add
movsb
push
jmp
sub
ret
icebp
sbb
add
lods
adc
fidivrl
push
aas
test
push
fisttpll
cwtd
pop
bound
push
xor
ficoms
jp
sbb
cmc
out
shrl
mov
hlt
cmp
dec
loope
cli
jo
xor
xor
xabort
push
push
jmp
lret
int3
adc
add
push
mov
pop
clc
cltd
ljmp
adc
xchg
inc
push
lcall
sbb
cli
and
jbe
add
pop
and
lods
fcom
int3
jne
popa
cli
fiaddl
data16
or
out
repz
mov
inc
mov
ror
ja
test
arpl
push
inc
xor
push
int
adc
adc
fucomp
jae
mov
je,pn
add
jnp
jb
das
xor
pusha
add
repnz
push
jno
nop
fbld
ret
lock
imulb
add
push
fs
mov
sahf
mov
sbb
jle
fimull
xchg
je
adc
lds
jmp
movsl
and
push
sub
sbb
aad
popa
insl
int
jne
fs
repnz
outsl
scas
mov
inc
push
jmp
out
sti
dec
adc
ljmp
ss
cld
insl
enter
xor
sbb
xchg
adc
cmp
lahf
adc
jmp
add
jle
ret
jbe
mov
ret
or
or
lret
js
xor
adc
mov
mov
lcall
jge
pop
test
push
xor
in
and
or
lods
and
jnp
jne
mov
fadds
xchg
leave
nop
movsb
mov
mov
add
inc
mov
idivb
mov
dec
pop
xchg
dec
mov
inc
jecxz
arpl
jno
cmc
and
repnz
gs
lahf
push
lret
and
imul
daa
mov
stos
inc
pusha
dec
cs
add
mov
xchg
add
cmp
les
popf
in
sbb
in
or
sahf
dec
cmp
loope
xlat
mov
or
repnz
pop
das
push
push
adc
cld
inc
rcrb
xor
jno
cli
adc
fiadds
xor
fisttpll
lcall
or
loopne
fld
mov
jae
jb
mov
lea
imul
popa
cwtl
enter
inc
inc
cld
cmc
mov
lock
xchg
repz
mov
enter
xchg
xlat
add
cmpsb
jo
pop
pusha
push
cmp
outsb
fs
fstpl
ret
dec
dec
or
mov
push
mov
lret
inc
gs
and
push
scas
stc
push
and
aad
jmp
stc
inc
sub
mov
sbb
gs
mov
scas
sbb
cmp
bound
add
mov
mov
shr
mov
inc
clc
mov
mov
cmp
jl
sbb
jns
pop
pop
xchg
jmp
adc
popf
lret
icebp
jns
pop
adc
mov
cmp
outsb
cmp
push
sbb
lcall
pop
cmp
cltd
or
daa
dec
pusha
mov
jnp
inc
xor
cmp
cmp
js
test
out
stos
ja,pt
xchg
aad
outsb
cmp
popa
mov
push
cmpl
enter
xchg
jno
and
jg
or
fildl
jns
neg
xchg
adc
inc
jo
popa
jbe
pop
imul
push
cmp
sub
nop
mov
fimuls
jo
movsb
das
lahf
gs
mov
inc
push
cmp
jne
shll
inc
or
pop
in
mov
push
stos
outsl
and
outsb
insb
sti
cld
aad
movsb
xor
mov
mov
int
nop
out
test
ljmp
leave
xor
mov
sbb
jns
lds
test
xor
hlt
rorb
scas
and
jmp
aad
push
dec
fs
or
add
mov
std
testb
mov
jmp
movsl
sarl
stc
push
push
and
and
cmpsl
xlat
or
jae
cli
sub
sub
push
pop
push
outsl
sub
stos
fs
bound
or
cwtl
and
adc
mov
mov
xchg
test
xchg
aaa
shll
ss
ficoms
or
fwait
stos
and
stos
scas
jns
dec
in
xchg
and
mov
pop
inc
cltd
outsl
and
mov
lret
add
lds
in
dec
ret
lds
int
in
pop
and
jne
add
movsl
jno
and
xchg
mov
pusha
lods
popa
dec
cltd
mov
mov
mov
xchg
pop
mov
mov
pop
ljmp
cmp
push
iret
in
ja
dec
inc
sbb
lahf
sub
movsb
dec
pop
inc
icebp
xchg
gs
pop
rol
jle
test
stc
test
or
xchg
xchg
mov
call
mov
dec
xchg
adc
or
shll
scas
or
mov
mov
mov
pop
lret
dec
mov
gs
popa
xor
jge
popa
js
out
xor
test
add
mov
mov
sbb
out
fistl
jmp
sub
cwtl
fucomip
jbe
cmp
mov
add
or
push
arpl
pop
add
xchg
hlt
push
lahf
push
push
dec
sub
cmp
out
fdivrs
test
movsb
or
dec
cmp
push
lock
xor
decl
inc
mov
and
aam
xor
dec
test
adc
iret
insl
xor
mov
rorl
mov
cld
loopne
shll
sub
mov
out
mov
jo
or
cmp
test
jp
or
push
cwtl
out
es
mov
xchg
adc
pushf
jg
loopne
mov
stos
dec
xor
xchg
and
cmp
mov
icebp
inc
lret
jo
or
mov
sub
shrb
and
jnp
pop
stos
and
sbb
lods
loope
inc
insb
xor
out
int
fnstsw
xor
inc
aaa
pushf
sub
pop
hlt
arpl
ret
test
or
out
scas
movsl
cmp
dec
push
ffreep
aam
les
and
inc
sub
and
pop
push
insl
js
call
test
loope
pop
dec
jns
and
jl
pop
lea
repnz
push
shrl
mov
push
dec
pusha
adc
mov
add
ficomps
enter
inc
jb
jo
repz
jg
add
mov
pop
sbb
dec
loop
mulb
mov
sbb
xchg
lcall
cld
lret
out
mov
stc
xor
aas
data16
fbld
cs
dec
stos
pushf
bound
xchg
fs
sti
and
negl
int
imul
pusha
xor
or
mov
dec
jle
andl
lret
xchg
cmp
xchg
mov
xchg
loope
pop
pop
fcomps
inc
pop
mov
notb
xchg
les
cwtl
imul
mov
pop
stos
inc
inc
sarb
cmp
gs
int3
jp
rorb
jne
lahf
test
pandn
sub
fisubs
dec
mov
cmpsb
dec
call
stc
mov
arpl
mov
mov
in
loope
insb
jecxz
mov
cltd
mov
sbb
jmp
fildll
or
out
jmp
das
dec
popw
jo
push
adc
loope
shrb
mov
mov
xlat
arpl
jg
nop
push
pop
or
inc
sbb
dec
out
inc
sub
cmc
fidivrs
add
lds
pop
adcb
pop
lret
in
mov
je
jmp
xor
adc
xchg
xchg
fbld
faddp
data16
int
dec
cltd
jne
jmp
imul
out
ljmp
mov
loop
lods
mov
push
xor
cmp
mov
icebp
fwait
mov
pop
andl
lahf
aas
mov
test
add
pop
mov
jbe
mov
cltd
shlb
lock
lret
sub
push
mov
push
push
rolb
cmpsb
pop
mov
mov
shrb
stos
test
in
xchg
outsb
sbb
xchg
daa
mov
pop
hlt
fwait
xor
aad
sub
ds
lret
mov
mov
cli
push
es
mov
push
je
mov
enter
fildl
sbb
inc
jg
push
xchg
std
mov
dec
or
add
push
lfs
pop
loopne
pop
add
and
test
dec
clc
es
xchg
adc
les
in
mov
mov
pop
jo
imul
xchg
roll
lods
imul
pop
in
add
stos
jecxz
push
arpl
andl
pop
mov
cs
and
lea
adc
push
cmp
cltd
adc
hlt
mov
and
push
enter
dec
xor
fstps
mov
stos
out
mov
loope
sub
fs
dec
ds
test
sbb
dec
hlt
xor
std
inc
mov
repnz
xchg
dec
or
cltd
dec
lahf
xor
stos
arpl
loopne
inc
mov
xchg
mov
xchg
loopne
push
add
out
inc
pop
aas
mov
imulb
pusha
ret
cmp
test
jbe
dec
cmp
cmc
cmp
idivl
fdivl
xchg
add
nop
ja
sbb
or
fwait
mov
js
xor
sub
idivl
aam
insl
cmp
into
inc
test
addb
iret
ret
dec
outsb
daa
stc
push
or
mov
arpl
clc
lret
mov
stos
fnsave
inc
mov
sbb
xor
loope
popa
sub
cmpsb
jno
adc
mov
sbb
int3
add
fnsave
push
test
out
imul
mov
pop
ljmp
cmpsl
or
xchg
cmp
adc
mov
cmp
mov
cmpsl
jecxz
cmp
cmp
sbb
je
movsl
rcll
test
in
cmp
mov
mov
nop
cmp
nop
icebp
fsubrl
movsl
fcom
xchg
inc
sub
push
pop
movsl
daa
bound
mov
out
icebp
xchg
push
shll
push
jb
nop
mov
sub
add
dec
dec
ss
dec
inc
push
fdiv
pushf
testl
push
cmp
nop
insl
sti
mov
fcmove
pop
out
adc
or
mov
or
sub
jge
sub
mov
pusha
in
lcall
jns
js
mov
out
clc
xchg
or
jge
in
loop
push
out
lods
jbe
mov
lret
mov
sti
setnp
push
mov
sub
outsb
imul
cmp
add
out
jae
aam
lret
pop
mov
gs
pop
cld
or
jmp
jp
jno
pop
ret
cmp
push
or
and
popa
mov
mov
in
inc
js
dec
test
xchg
test
das
loope
mov
jne
sbb
sub
pushf
pop
push
sbb
test
mov
dec
pop
pusha
mov
lock
pop
mov
testb
in
pop
ss
xor
test
xchg
lahf
dec
jmp
into
xchg
cmp
cmp
push
push
fsub
jmp
mov
pop
pop
lods
test
icebp
xchg
inc
push
mov
mov
inc
jno
iretw
lods
callw
test
andl
jl
rclb
aaa
dec
sub
fadds
dec
loope
sub
repnz
stos
pop
mulb
shll
jl
mov
push
inc
xor
jnp
imul
adc
mov
cmp
push
mov
pushl
add
sbb
push
dec
add
jae
sahf
push
inc
call
ret
add
and
and
xchg
nop
mov
pop
xor
call
imul
ja
lret
popa
and
cmp
popf
pusha
mov
mov
ret
sbb
leave
scas
sub
imul
or
sbb
popa
jmp
fadd
fadds
cmpsl
fcoms
fs
cld
in
js
adc
repnz
xor
jg
in
mov
or
add
adc
push
jl
push
dec
pop
xchg
setge
call
pop
test
lahf
push
jno
lahf
jl
mov
add
xor
xor
addl
mov
ja
adc
cmp
mov
inc
mov
orb
mov
loop
stc
push
push
out
mov
sahf
repz
mov
xor
sub
adc
sub
cmovns
adc
xor
add
pusha
adc
rol
xorl
stos
jns
fisttps
inc
or
pusha
into
fwait
jns
xchg
mov
xor
or
repz
jo
bound
iret
test
test
or
lahf
mov
sub
dec
stos
dec
jp
or
xchg
mov
leave
in
imul
leave
push
jbe
sbb
jb
sarl
mov
sub
mov
outsl
daa
cld
jne
loopne
cmp
push
sbb
outsb
sbb
mov
in
pop
cmp
pop
adc
loop
sti
call
in
add
and
movsl
sbb
mov
mov
leave
sbb
out
jle
mov
mov
mov
push
jae
imul
je
outsl
mov
cwtl
lcall
jg
sti
cmp
ljmp
jg
xlat
imul
stos
sub
push
xchg
in
mov
cmpsl
lret
pop
cmpsb
add
fsubs
shll
inc
cmp
pushf
jbe
and
inc
movsb
add
repnz
pop
aaa
decl
xchg
fwait
jmp
insb
fcmovnu
xchg
xlat
lea
outsl
mov
xor
mov
jmp
testb
jg
testb
or
pop
hlt
inc
pop
inc
pop
cmp
ret
pop
fwait
dec
insl
push
xor
mov
pop
fs
or
bound
push
inc
adc
cmp
xchg
jg
mov
or
rcrl
cmpsl
mov
push
jbe
and
pop
jle
pop
sub
movsl
mov
sub
pushf
pop
jb
cmc
lods
cmp
loopne
mov
lahf
arpl
sbb
mov
pop
std
mov
mov
push
mov
gs
ret
inc
insb
inc
xor
xor
sub
lock
frstor
addb
and
call
pop
pop
jecxz
lods
sub
aas
insb
lret
popf
lods
jb
int
sbb
in
sbb
push
mov
je
loop
or
ss
mov
pop
cltd
lcall
jl
lret
cs
dec
mov
stos
notl
cmp
call
mov
pop
clc
fsubl
push
push
pop
pop
cwtl
insl
stos
dec
pop
jb
insl
or
pop
arpl
das
mov
scas
mov
mov
jmp
test
sub
push
test
dec
mov
mov
lret
and
dec
arpl
sub
xor
mov
out
cmpb
adc
pop
stc
testb
mov
inc
xor
and
cmp
sbbl
cmp
cmpsb
mov
popf
mov
leave
int
sbb
inc
xlat
and
fsubr
pop
inc
and
mov
es
notb
xchg
ds
mov
out
test
cld
mov
mov
out
out
sbb
dec
mov
imul
xchg
or
stos
dec
loope
popf
lea
pop
push
dec
mov
fs
cmpsl
add
idivl
pusha
rorl
hlt
xor
pushf
ds
scas
dec
out
rcrb
push
sub
out
push
dec
lea
aam
les
jbe
and
ljmp
jg
mov
cmp
pusha
adc
cltd
inc
pop
mov
adc
push
sbb
mov
test
push
rcll
ds
jb
add
mov
jo
push
adc
inc
and
adc
jnp
lods
pop
cli
outsl
inc
rcll
mov
mov
fsubrs
cmp
sub
fs
fistpll
mov
rclb
and
cmp
ljmp
push
int3
xchg
das
test
movsb
out
jp
dec
pop
and
sar
inc
sub
xor
xchg
hlt
sub
mov
push
inc
stos
loopne
addr16
mov
inc
insl
jmp
mov
lods
add
aad
mov
add
pop
arpl
fdivrp
int3
and
int
fiadds
jmp
int
jae
pop
repnz
pushf
and
std
adc
pop
sbb
aaa
loopne
cwtl
xchg
mov
cwtl
or
adc
mov
push
es
jb
sarl
cld
mov
add
rcr
lea
pop
fs
stos
and
sub
nop
cs
inc
fisubrl
mov
in
pushf
mov
push
jge
and
aaa
xchg
mov
scas
push
jle
pop
loope
in
es
sub
std
jno
cltd
mov
in
cs
add
push
arpl
fsubs
sub
enter
imul
in
fldcw
or
dec
scas
sbb
inc
test
ja
fwait
test
and
xchg
jb
pop
cmp
stos
sub
fcompl
sub
push
and
insl
iret
call
jl
leave
dec
sarb
sbbb
mov
push
mov
mov
sub
ret
clc
inc
mov
cs
dec
lds
fnsave
adc
push
testl
mov
and
inc
loop
loop
insb
lods
mov
mov
xor
enter
push
dec
rorb
out
js
cmc
icebp
cwtl
in
iret
dec
sbbl
call
in
sbb
subl
jp
cmp
push
js
mov
push
dec
es
and
rcr
in
arpl
daa
dec
add
lret
int
push
jb
shr
das
ljmp
shll
push
cltd
push
ja
sahf
push
data16
sbb
inc
add
pushf
dec
mov
scas
std
cs
push
call
rol
fstpl
xlat
das
mov
xor
or
adc
cmp
pop
lcall
pop
lret
cmp
inc
mov
push
pop
js
jns
loopne
jbe
out
jne
jge
sbb
sbb
stc
sub
pop
les
xor
adc
ret
add
pusha
mov
sbb
pusha
imul
addl
fdiv
add
aas
ret
push
ljmp
cmpsl
cld
ret
and
pop
mov
int
adc
jl
pop
mov
je
fildl
aas
push
shl
loope
sbb
mov
shll
or
lret
aad
daa
inc
shl
pop
mov
jbe
sarl
adc
dec
add
insl
mov
jg
mov
xchg
or
jg
xchg
lcall
and
jns
decl
scas
push
and
push
adc
outsb
data16
out
imul
xorl
int3
xor
subb
inc
xor
outsl
mov
lret
add
data16
outsl
hlt
leave
repz
sbbb
and
xor
sbb
rol
mov
sbb
cmp
push
sbb
and
and
out
xor
sbb
notb
mov
out
jne
ret
call
jl
arpl
popf
dec
sbb
call
das
and
xchg
lock
push
or
scas
cmp
adc
fstpl
shrl
mov
pop
mov
mov
fistps
mov
fadd
bound
mov
aam
xchg
call
push
jmp
or
jp
jo
shlb
inc
cwtl
enter
loop
xchg
pop
scas
xchg
mov
ds
pop
xchg
ds
cmp
stc
or
cmc
cmp
jns
sub
aas
hlt
xchg
inc
lea
fwait
test
aad
cli
or
push
je
cmpsb
ds
sub
mov
out
adc
mov
inc
sbb
ret
and
cld
ljmp
adc
sbb
xlat
mul
adc
out
int
jge
pop
loopne
fistpl
int3
cwtl
out
in
xchg
jnp
sbbb
push
es
cltd
push
clc
pusha
push
add
mov
and
roll
sbb
out
and
incl
xlat
pop
and
mov
addb
test
cmpsb
ja
dec
pusha
or
jl
lods
xchg
outsb
movsb
cmc
inc
and
sti
pop
leave
cmp
in
in
push
mov
sbbb
int
repnz
inc
or
xchg
mov
push
jl
mov
test
bound
daa
in
jmp
fs
mov
cmp
repnz
dec
and
lods
push
incl
fldenv
mov
sbb
inc
or
cli
data16
jne
mov
mov
rolb
aas
dec
xor
push
icebp
push
fmull
std
fistl
lret
jg
sub
cld
sbb
cmp
xor
gs
cld
inc
ds
sub
or
movsl
cmp
jbe
mov
mov
cmpsl
shrb
mov
das
nop
ss
mov
mov
loope
nop
mov
shr
test
dec
inc
jne
jne
add
shl
jp
pushf
sbb
in
pushl
jmp
xor
push
cmp
or
jl
in
push
jbe
mov
in
pop
xlat
mov
or
jbe
fcomp
dec
push
adc
insb
iret
pop
and
ljmp
bound
dec
mov
lods
idivb
fimull
call
mov
mov
pop
mov
ret
cwtl
loopne
jno
mov
pop
fcompl
xchg
out
fcomps
dec
sbb
lret
cmp
imul
out
xlat
pop
adc
aad
pushf
pop
rolb
pop
sbb
js
das
cmpsb
jno
cmp
inc
mov
scas
cmp
scas
mov
jnp
scas
ljmp
sub
je,pt
lahf
addr16
mov
shlb
pop
mov
cmp
scas
inc
mov
shrl
idivl
mov
mov
dec
push
outsl
inc
mov
sahf
cmpsb
jp
sarb
bnd
icebp
rcrb
mov
mov
push
adc
xlat
ffree
fwait
sbb
xchg
imul
ljmp
mov
aaa
call
and
mov
pop
and
xchg
shlb
lods
loop
je
xchg
add
mov
sarl
ret
cmp
lret
lea
out
xlat
inc
add
dec
cltd
bnd
sub
dec
insb
orl
dec
push
mov
adc
in
xlat
xor
imul
fimuls
or
or
test
dec
inc
pop
stos
and
sub
orl
pop
nop
scas
clc
shr
aad
jo
jo
cmp
lret
mov
loope
sub
fcomps
inc
jmp
mov
dec
adc
add
xor
fcmovnb
in
push
pop
mov
lods
jb
imul
rorl
cwtl
arpl
lock
xchg
xchg
xchg
xor
jp
mov
cmp
arpl
cmp
adc
loopne
lret
in
into
lcall
mov
pop
mov
push
fiaddl
das
sub
jne
xchg
mov
sbb
xor
outsb
test
sub
jb
movsb
xchg
ss
insb
and
sbb
push
or
cmpsl
scas
les
pop
paddq
repnz
lcall
sub
mov
mov
jg
or
in
lods
rcrb
pop
cmpsb
fldl
lods
jl
dec
or
jmp
ja
jns
addr16
jb
add
ja
push
insl
icebp
lahf
jne
cmp
arpl
cmpsl
idiv
aas
mull
xchg
jo
mov
loope
mov
call
adc
enter
push
shll
xor
shl
clc
adc
cmc
popa
sub
fs
xchg
je
pop
mov
lahf
cmp
add
sti
mov
mov
mov
dec
push
jb
orl
jae
aam
outsl
xor
adc
push
xchg
adc
pop
sbb
fidivrl
popa
clc
out
xor
jmp
push
mov
push
dec
mov
xchg
outsl
mov
pop
mov
std
jg
lods
or
outsb
xchg
xchg
mov
xor
mov
sbb
aam
outsl
xor
ja
lock
xchg
pop
outsb
push
int3
pop
int3
out
mov
sbb
stos
add
jle
rolb
mov
testb
dec
add
inc
shll
movsl
inc
outsb
mov
mov
cmpsl
es
xchg
xchg
adc
fnstenv
jl
jl
push
and
icebp
jl
loope
loopne
inc
mov
jl
sub
repz
add
pop
rorl
lds
movsl
loope
loopne
push
sbb
icebp
andl
les
daa
jecxz
rorl
or
push
adc
lea
shl
movsb
out
icebp
mov
outsb
insb
int3
das
add
test
es
sub
mov
cmp
int
call
ret
add
push
jo
es
arpl
push
or
fs
mov
and
fists
push
sbb
gs
scas
push
add
cmp
cli
inc
les
sbb
add
rorb
mov
adc
mov
mov
cmpsb
adc
das
and
fildl
ffreep
adc
pop
data16
or
sti
and
mov
dec
dec
mov
stos
jmp
inc
in
pop
fmulp
push
mov
ret
out
push
out
adc
fcoml
in
xchg
mov
inc
scas
lock
pusha
jnp
das
lea
mov
insl
lret
enter
in
add
and
dec
dec
xor
push
push
mov
mov
mov
xor
sbb
nop
movsl
mov
mov
rcrb
into
adc
imul
lods
rorb
sbb
dec
lret
call
xchg
dec
cmp
mov
pop
add
ja
xchg
dec
fwait
shll
sbb
es
jle
or
or
add
je
sbb
push
in
cmp
mov
jmp
incb
jo
test
fcoms
pusha
xlat
stc
or
and
sub
xor
add
fldl
mov
mov
lahf
das
add
inc
mov
xchg
dec
test
je
cli
ror
pushf
fimuls
jl
mov
fwait
pop
or
mov
push
jecxz
xor
fiadds
adc
je
loop
data16
add
sbb
mov
push
pop
cld
testb
push
stos
mov
mov
mov
rol
jg
cltd
cmp
or
add
xor
xor
push
xor
sbb
mov
push
lods
xchg
lahf
push
push
push
daa
fldcw
rclb
push
sahf
jo
test
cmp
rolb
or
dec
push
push
lods
and
mov
shlb
movsb
jl
or
jnp
cwtl
mov
sbb
push
loop
and
cmp
adc
cmc
pop
sbb
faddl
pop
ret
add
fiadds
les
cli
jle
push
xchg
gs
inc
movsb
shll
sbb
out
addr16
cmp
adc
int3
pop
sbb
or
cltd
inc
mov
int3
jo
pop
inc
mov
pop
rclb
jmp
sbb
add
clc
jb
mov
lds
mov
push
lods
sar
mov
loopw
in
xlat
push
pop
imul
test
daa
adc
xchg
loope
cltd
cli
jmp
nop
jne
cmp
loopne
dec
mov
dec
loopne
push
lea
mov
enter
cltd
xchg
mov
xchg
push
mov
nop
push
sti
jo
cltd
rclb
in
mov
ds
push
fisubrs
dec
xchg
mov
cmp
enter
mov
lock
cld
sarl
nop
fistpll
cbtw
imull
pusha
and
or
cmp
push
xchg
or
sbb
lcall
mov
repnz
fistpl
in
lcall
fldl
aaa
mov
lret
pop
cwtl
loope
popa
outsb
inc
cmp
movsb
es
out
movsl
and
mov
add
sub
ret
xchg
dec
push
mov
jl
dec
jbe
hlt
push
repnz
int3
lds
fsubrl
dec
dec
ja
cwtl
jo
or
push
notb
fbstp
inc
push
sarl
sub
pop
roll
outsb
or
cmpsb
pop
movsb
or
inc
xchg
pop
xor
test
push
add
cld
leave
js
loope
mov
and
cmc
loop
mulb
gs
icebp
mov
int3
inc
cmpsb
popf
scas
sbb
popf
inc
push
dec
and
call
insl
cmp
xchg
xchg
jo
inc
ljmp
push
mov
icebp
inc
pop
subb
inc
lods
adc
popf
mov
test
sbb
add
icebp
cmp
mov
xchg
xchg
lcall
aas
jbe
xor
xchg
xor
mov
popa
and
je
dec
push
out
dec
jbe
lock
fbld
imul
dec
xchg
dec
jae
push
fldenv
lods
cmp
dec
cmpl
in
fmuls
or
jmp
dec
push
cmc
aas
adc
jl
nop
dec
in
sbbb
pop
movsb
or
insl
inc
and
pusha
push
je
cmp
je
stos
fiadds
xor
add
out
mov
push
push
and
rorb
aaa
popw
jo
add
dec
mov
leave
xchg
mov
subl
dec
mov
pop
pop
pop
pop
mov
shll
xchg
subl
inc
ja
rcpps
out
cmc
scas
cltd
mov
inc
jnp
cwtl
sbb
cs
xchg
adc
pop
add
push
arpl
lods
or
sbb
mov
aad
pop
mov
sbb
into
pop
mov
cltd
push
push
int
xor
sbb
jg
fildl
cmp
xor
outsl
add
out
push
orl
pop
loop
jns
xchg
pop
mov
add
sub
out
loope
divb
popa
subl
leave
js
cmpsl
push
lds
add
lods
xchg
mov
dec
repnz
je
or
stos
sub
xor
rcr
mov
cmc
popf
pop
mov
sbb
lret
adc
imul
inc
call
subb
dec
push
aad
xchg
or
hlt
or
js
inc
inc
mov
mov
or
xchg
shr
scas
std
hlt
lahf
pop
jne
adc
lds
scas
jmp
popa
xchg
xor
mov
jmp
enter
cmpsb
mov
dec
cmp
adc
call
xchg
into
mov
pop
loopne
sbb
out
mov
cmp
jnp
inc
setnp
das
sbb
je
sbb
call
xlat
push
dec
inc
pop
inc
and
test
ficoml
pop
and
jno
mov
aam
jg
or
aaa
jl
push
adc
test
sbb
add
jmp
push
movsl
inc
movsb
call
repnz
cmp
pushf
dec
inc
inc
push
cmp
dec
addr16
mov
mov
xor
mov
xchg
add
sbb
aam
jae
sbb
mov
cmp
dec
mov
dec
aad
or
orl
cs
lcall
js
std
leave
test
mov
imul
mov
gs
xchg
sub
jbe
sbb
adc
and
rcl
enter
cmp
mov
test
out
pop
xor
cmp
mov
jmp
mov
inc
mov
pop
cmp
es
out
roll
and
jl
loope,pn
nop
adc
call
into
sbb
add
and
push
out
jmp
mov
pop
imul
fdivrs
inc
adc
push
mov
lret
test
mov
add
cwtl
lahf
mov
jle
adc
and
xchg
orb
push
or
add
pop
xlat
inc
pop
adc
das
test
lcall
pop
inc
cli
mov
lods
mov
pop
and
push
loop
push
xor
shll
xchg
lds
mov
test
pop
adc
mov
in
js
fwait
stos
insb
lods
xchg
fiadds
mov
fisubl
xchg
out
dec
push
cmp
jno
inc
dec
xor
inc
mov
adcb
push
jge
pushf
pop
filds
lea
xor
jo
mov
aad
cmp
adc
push
repz
movsb
sahf
movsl
push
int3
dec
sbb
push
arpl
fidivrl
dec
fsub
enter
and
cmpsb
mov
xlat
pop
inc
mov
cmp
outsb
cld
aas
sbb
in
mov
pop
push
jp
cmp
ret
add
add
jne
push
xchg
dec
push
call
push
jmp
and
mov
lahf
jl
push
sbb
imul
jge
out
in
or
pop
jb
pop
cltd
push
sahf
mov
lea
adc
sti
jcxz
ret
aaa
shll
js
xor
dec
fdiv
push
xchg
pop
jl
cmpsl
sub
mov
mov
loop
mov
mov
sub
pop
outsl
fnstcw
push
loop
orb
jbe
rclb
mov
fld
lahf
ss
decl
pop
cmp
sub
xchg
push
cmp
jno
and
and
subb
sub
dec
mov
shll
pop
stos
or
cs
out
add
mov
insl
inc
jo
dec
xor
dec
fimuls
sub
xchg
mov
in
arpl
shll
xchg
and
cli
xchg
daa
push
inc
add
dec
std
cmpsl
outsl
cmp
lods
pop
mov
push
mov
inc
inc
data16
jecxz
int
sahf
test
gs
loop
scas
xchg
pop
cld
mov
dec
jle
loopne
int3
jae
in
pop
outsl
insb
popf
cmp
inc
movsl
inc
out
mov
mov
mov
addr16
movsb
es
sub
fistpl
lret
out
out
sub
mov
xor
lock
ret
add
jg
jae
idivl
cmp
aam
cmp
fbld
enter
shrl
sahf
jns
add
cld
scas
cld
push
push
or
xchg
and
mov
push
xor
sub
mov
pop
into
prefetcht0
sub
les
mov
mov
kxnorw
int3
sbb
xchg
mov
pop
mov
gs
cmp
push
dec
and
add
loop
and
out
inc
test
jmp
fcoms
rorb
pop
mov
cmp
rolb
test
xor
movb
xor
mov
xchg
push
pop
aas
cs
and
ljmp
jo
arpl
push
aaa
xchg
jnp
std
in
fadds
push
je
pop
pop
sub
sbb
push
dec
out
adc
adc
adc
sbbb
jbe
lahf
out
push
push
punpckhwd
sub
cld
sub
or
ja
insb
mov
lods
cli
scas
test
cmp
mov
jl
cmp
and
out
sbb
jae
lds
inc
sub
cld
sub
rorl
imul
pushf
add
into
sbb
adc
out
and
cmpb
mov
addb
push
push
in
push
adc
mov
loope
jnp
sbbl
mov
add
testb
cld
push
mov
push
leave
xor
push
push
sbb
jmp
leave
mov
push
mov
and
jbe
jle
jnp
xchg
sub
std
mov
cs
in
lcall
pop
mull
andb
ljmp
adc
sahf
cltd
xchg
fisubrl
mov
jae
fnstenv
push
pushf
ret
popf
push
jle
lock
les
adc
cwtl
notb
push
cmpsb
add
aam
arpl
fadd
xchg
dec
stos
leave
inc
pushf
mov
jl
cmp
std
fucomp
icebp
xchg
dec
jmp
test
mov
pop
jmp
adcb
int
call
rclb
mov
xchg
cmp
js
mov
cmc
cmc
and
shrb
jp
cmp
jae
icebp
push
xor
mov
or
xor
fcmovnu
jl
cmp
jle
repnz
movsl
sub
mov
dec
test
loope
or
xchg
fs
aam
clc
enter
je
imul
mov
cmp
cmp
inc
xchg
les
pop
mov
outsl
or
adc
mov
aam
aam
or
mov
hlt
shlb
sub
int3
sbb
jp
pop
ss
or
inc
int3
push
scas
ficoms
jmp
mov
je
adc
sarb
xchg
shrb
pop
shr
mov
sahf
lcall
mov
adc
aam
mov
ret
and
cs
and
cmp
mov
fidivrl
sub
cmpsl
std
xchg
outsl
cld
out
in
mov
cmpl
pop
pop
lret
nop
bound
push
pop
test
into
shlb
les
inc
jb
ficompl
aas
cmp
cmp
sub
and
dec
shrb
lods
dec
andb
std
inc
orb
stos
xor
lods
pushf
or
xchg
dec
movsl
fldcw
fimull
repz
inc
mov
popf
leave
cmp
dec
dec
test
clc
aam
mov
icebp
xor
aas
es
jne
dec
cmpsb
pop
pop
mov
or
jg
add
mov
out
sub
and
jle
inc
shrl
adc
std
ret
sub
daa
ljmp
dec
mov
divb
or
test
mov
ss
sbb
adc
ret
scas
popa
mov
mov
lods
icebp
adc
push
fwait
mov
rcrl
imul
imulb
push
sti
mov
outsb
into
popa
cld
jnp
stos
push
sbb
iret
adc
dec
adc
mov
ss
scas
pop
inc
inc
or
out
fwait
push
and
pop
push
adc
loopne
sti
lds
pop
je
lods
fidivrl
int3
or
or
test
mov
dec
aaa
movsb
lret
inc
icebp
ljmp
arpl
in
out
adc
and
xor
cmp
call
mov
cmc
and
push
pop
mov
mov
and
xchg
je
push
sub
lods
ret
mov
ret
mov
pop
jb
push
inc
lret
xchg
aaa
imul
jl
sub
mov
add
xchg
sbb
scas
fildll
inc
rcrl
xlat
dec
sub
int3
mov
mov
outsl
push
jns
mov
cmp
lret
pop
mov
icebp
scas
rolb
sbb
outsl
std
ss
mov
sti
add
popa
jp
cmpsl
mov
jnp
jmp
pop
add
iret
jge
mov
inc
loop
and
pusha
sarl
lret
sub
adc
dec
add
ljmp
lods
and
popa
and
mov
push
cmp
sub
pop
popa
js
mov
daa
pushf
shlb
add
rorb
mov
mov
fsubrs
sbb
fwait
push
mov
mov
pop
add
mov
addr16
pusha
repz
popa
fsubrp
xlat
fcomps
cli
ja
imul
sbb
mov
in
mov
cmp
loop
imul
imul
push
das
sti
push
cmp
xlat
push
sbb
movsl
sbb
sqrtps
dec
insl
push
adc
adc
lret
call
or
shrl
mov
xchg
outsb
outsl
push
loope
sub
cmpsl
dec
sub
addr16
jno
jo
inc
mov
sbbl
jae
cltd
imul
pop
ds
cltd
lock
aad
sub
jno
into
cmp
pop
sbb
addr16
mov
fadds
sub
inc
cmpb
and
outsl
pop
inc
xor
mov
mov
pusha
inc
inc
mov
clc
popf
sbb
mov
arpl
sbb
aaa
cld
push
inc
cwtl
cld
cmp
daa
pop
xchg
jge
nop
pop
xchg
movsb
in
js
mov
cltd
mov
pop
repz
add
ja
sbbb
rolb
push
and
fwait
cmp
xlat
gs
jo
xor
xor
ja
lret
pop
xchg
cmp
iret
fucomi
ret
mov
mov
sbb
fwait
stos
mov
subl
aaa
mov
or
cld
enter
xchg
aad
fimull
xor
rcrl
pusha
mov
mov
lret
fsubrl
sbb
lcall
clc
iret
pop
mov
rolb
mov
xor
xchg
and
jo
movsl
das
or
jno
jbe
lock
push
or
sbb
inc
cmp
jle
mov
sbb
dec
sbb
je
sti
lgs
sub
pop
pop
inc
lods
imul
outsl
inc
sub
adc
adc
in
or
mov
inc
jge
dec
adc
lods
fwait
and
mov
push
aad
inc
or
push
jl
outsl
stos
pop
dec
or
stos
push
mov
je
cmp
mov
iret
xor
loopne
cmp
fadd
cli
outsb
filds
inc
fsubrl
push
and
xchg
mov
cmp
aam
int3
ljmp
push
movzwl
cli
inc
loopne
in
add
out
add
mov
int3
add
mov
scas
bound
mov
shlb
sbb
imul
sub
jcxz
dec
push
js
adc
in
jge
jno
mov
arpl
mov
sti
xlat
ds
jae
or
sub
jge
rorb
je
pop
outsl
xchg
popa
inc
cmp
sub
push
inc
cs
sub
pop
mov
pop
repz
pop
dec
fldl
dec
mov
cmp
mov
adc
popa
cltd
insb
mov
dec
mov
add
push
ficoms
outsl
cmp
fnstcw
jns
pop
mov
push
cmp
lret
mov
or
shlb
or
pop
mov
dec
lds
out
cmc
sub
jl
cmpsb
ja
push
int
int
lcall
jne
movsb
arpl
xchg
test
inc
inc
jg
repnz
ret
adc
je
negb
in
push
xchg
ret
and
clc
cmp
cltd
insl
test
lahf
aaa
mov
lods
es
jno
inc
js
and
clc
jo
lods
pop
cld
int
sbb
pop
jne
push
push
das
or
inc
int
pop
es
loope
adc
mov
xor
push
daa
add
mov
lods
or
int
stc
and
or
cmpsb
sbb
and
jg
aad
out
out
mov
dec
aaa
sahf
or
aam
insl
ds
push
adc
mov
dec
xchg
test
jb
and
sbb
aam
sub
les
pushf
cmp
fsubr
dec
fwait
lret
dec
mov
call
adc
inc
push
dec
insl
int
pop
es
sarl
dec
pushf
add
nop
inc
out
loope
xor
adc
ja
mov
ret
push
adc
jbe
inc
sbb
popf
imul
lcall
fwait
mov
sub
popa
in
out
repnz
sbb
adc
mov
sti
leave
out
pop
stos
inc
push
xchg
inc
dec
jecxz
inc
cmp
divb
mov
cmp
jecxz
pop
std
or
mov
das
mov
es
leave
sub
mov
lods
cmpl
cmp
cmp
das
popa
mov
cwtl
xchg
add
jae
stos
addb
xor
lahf
shr
nop
pop
or
push
ljmp
mov
inc
incl
pop
pop
cmp
inc
mov
dec
pop
mov
inc
mov
jg
cmp
ds
push
es
add
inc
and
inc
jns
fxch
add
mov
sub
pop
enter
adc
inc
lret
inc
fcoms
enter
xchg
inc
xchg
mov
scas
rcl
hlt
scas
cmc
mov
push
or
add
pop
popf
adc
jo
inc
cmpsb
pop
mov
pop
adc
andb
adc
scas
stos
cltd
loopne
stc
rorb
shrb
popa
dec
mov
int
lret
sbb
sbb
leave
xchg
jg
scas
das
aad
jge
cmp
rolb
mov
mov
dec
jnp
leave
popa
stos
xchg
popf
fadds
adc
or
mov
adc
sub
xor
insl
stos
imul
in
adc
push
sbb
pop
subl
jge
mov
lock
jbe
lock
add
stos
jmp
or
and
xor
jl
lcall
dec
adc
jmp
mov
je
in
sbb
in
ret
xchg
inc
gs
insb
add
lds
xchg
cmp
or
mov
sti
pop
push
in
push
mov
aaa
bound
sbb
lcall
and
popf
and
jae
pop
sbb
setno
pop
sub
loope
mov
add
sbb
add
test
xchg
pop
push
mov
lock
mov
xchg
pop
pushf
xchg
sub
inc
add
fdivrl
das
jns
jg
mov
sbb
sbb
adc
addb
sbb
sbb
push
and
imul
jne
es
cmc
imul
cltd
enter
cmpsl
je
jecxz
dec
mov
pop
adc
mov
insl
pop
mov
inc
add
dec
push
dec
inc
xchg
sti
push
js
lret
mov
dec
gs
aaa
fsubrl
loope
scas
movsl
fsubrp
lahf
ret
pop
push
cmp
cmpsl
mov
push
shll
mov
or
jmp
cmpl
fisttpl
notl
mov
jecxz
sub
je
jne
cmp
fcompl
push
cmp
aaa
xor
addr16
mov
xchg
cmp
aas
push
xor
mov
mov
pop
loopne
cmc
push
pop
imul
inc
sub
sbb
idivb
dec
dec
repz
push
pop
mov
lahf
lods
pop
aaa
dec
idivl
add
or
cwtl
pop
repz
sub
mov
mov
cvttps2pi
sbb
insl
loopne
push
xor
dec
inc
aaa
sbb
hlt
inc
idiv
popf
cmp
adc
add
adc
add
pop
dec
js
inc
movsb
jo
adc
lods
sub
fimull
pop
in
aas
gs
xor
scas
popf
xorb
int3
mov
mov
popf
negb
daa
pop
cld
xchg
and
xor
in
lcall
shll
in
and
into
sub
rorl
mov
inc
cmp
inc
lcall
push
loope
insb
cli
mov
int3
mov
mov
out
loopne
lock
repz
add
and
push
xor
cmpsb
cwtl
inc
lods
ja
mov
mov
int3
sbb
sbb
sti
aas
pusha
scas
mov
popl
and
jg
test
fsub
sub
jle
xlat
mulb
xor
imul
sub
ret
mov
pusha
imul
jg
mov
inc
add
adc
or
pop
push
xor
test
sub
jne
push
dec
out
pop
add
loope
int
jecxz
int
and
in
mov
sub
cmp
push
aaa
enter
inc
fistpl
in
mov
dec
into
add
dec
lret
sti
jmp
dec
xchg
paddusb
orb
and
mov
rolb
pusha
orb
pop
outsb
pop
sti
push
sbb
lahf
mov
out
push
mov
or
shll
aad
mov
out
imul
lock
jnp
mov
pop
jmp
push
ret
adc
decb
jne
test
movsb
lods
push
jle
int3
dec
fwait
rcll
and
pop
outsl
in
fildl
pop
pop
js
mov
jge
add
mov
xchg
stos
adc
mov
aam
and
lock
ret
jmp
arpl
scas
loop
fistpll
jno
and
and
add
insl
xor
dec
sbb
jnp
arpl
dec
jns
cmp
pop
mov
mov
movsl
jnp
in
cli
movsb
sub
mov
and
repz
jp
stc
gs
xchg
pop
call
aad
mov
stc
mov
push
cmp
adc
leave
xchg
fcompl
orb
inc
arpl
inc
add
push
sbb
call
push
movsb
inc
nop
pushf
xchg
cltd
fildl
sub
mov
js
in
inc
push
clc
xor
out
jae
les
pusha
sbb
dec
mov
jne
inc
shlb
mov
cmc
sub
xchg
mov
lea
push
aas
pop
push
push
int
int
cmp
inc
pusha
icebp
push
mov
outsb
cmpb
jb
push
or
stc
inc
fdivp
inc
xor
les
lock
bound
mov
jecxz
loopne
stos
imul
mov
push
lods
test
ja
int3
pop
xchg
cmc
mov
adc
and
cmpb
mov
dec
imulb
pop
out
pop
fcoml
rcl
pop
int3
jb
data16
inc
xchg
push
in
add
push
pop
xchg
cltd
xlat
ljmp
repz
sbb
dec
call
mov
push
or
imul
mov
dec
lahf
jae
or
scas
add
sysret
shlb
js
pusha
inc
dec
sbb
push
xchg
aaa
lea
imul
cli
xchg
dec
mov
cltd
pop
imul
cld
pop
ss
outsl
dec
mov
fsubr
or
cmp
push
mov
cmpsb
lret
aas
daa
movsl
mov
pop
sub
inc
adc
dec
sahf
push
rcll
fimull
mov
iret
loopne
repnz
nop
sbb
out
xor
mov
adc
pop
sub
inc
and
lret
pop
in
arpl
mulb
sub
lds
or
ret
and
mov
test
ljmp
xor
and
pop
fs
mov
sub
pop
jge
cmc
dec
pop
or
inc
and
call
ljmp
aam
movl
jno
das
push
outsb
stc
insb
push
adc
lahf
xorl
inc
inc
fdiv
push
test
pop
xor
push
mov
dec
inc
jp
or
jmp
mov
ret
mov
push
loop
clc
or
pop
ja
stos
or
push
loop
in
mov
push
and
iret
jne
or
cwtl
adc
fdivr
or
cmpsl
sub
mov
mov
or
jns
int
std
xor
xchg
xchg
lret
test
sbb
dec
jle
rcll
inc
sbb
add
inc
shll
jno
mov
movq
xchg
scas
loopne
sub
mov
in
or
push
fisubrs
xchg
jg
idivb
ss
bound
pushf
push
mov
mov
clc
dec
fwait
mov
mov
pop
and
pop
in
mov
inc
cmp
leave
push
mov
movsb
in
ljmp
pusha
dec
xor
ret
pop
xor
ds
in
dec
stos
xlat
pop
hlt
push
and
xbegin
jb
dec
lock
pop
ret
xchg
cmp
cmpsl
xchg
sahf
push
in
jge
inc
mov
sahf
enter
cmp
and
in
push
arpl
and
test
je
outsl
and
mov
pop
repnz
and
adc
cmpsl
cmp
fwait
popf
fmull
adc
inc
push
loope
jb
xor
add
mov
xor
pop
ds
cmpsl
addr16
or
or
push
add
jae
push
rcrl
jmp
push
dec
mov
mov
inc
mov
and
sbb
cmp
stc
int3
mov
fwait
lahf
pop
push
js
mov
xlat
mov
and
call
pop
les
fiaddl
mov
fistl
mov
xchg
clc
xchg
mov
aad
rcl
xorw
xor
rcrb
inc
jno
fsubrs
push
fwait
sub
push
incl
sub
mov
out
std
enter
inc
inc
mov
mov
or
cmp
sub
and
pushf
sub
popa
outsb
adc
or
out
mov
or
jnp
mov
shrb
cmp
pop
enter
sbb
lcall
outsb
je
mov
in
pop
jns
movsb
movsb
cmp
lret
mov
inc
insb
shlb
and
fcmovb
int
outsl
repz
xchg
or
out
rorl
inc
push
fldl
dec
cmpsl
icebp
sarb
imul
clc
xchg
iret
lock
mov
push
lret
ss
out
or
sbb
sub
mov
pop
jle
fdivrs
sbb
fadds
fs
mov
test
push
push
ss
repz
xlat
popf
les
lods
je
pop
mov
loope
xchg
push
xchg
mov
aad
sub
fidivs
push
push
sbb
push
dec
cmc
pop
add
and
jge
add
adc
inc
imul
scas
jno
fsubs
ljmp
movsb
sub
loopne
lahf
mov
iret
insl
rcrb
movsb
add
ret
lret
xlat
jns
dec
inc
decb
cltd
out
call
push
ja
test
mov
xchg
ret
out
mov
xchg
imulb
and
out
jns
mov
repz
ret
push
gs
add
jmp
pop
fmuls
xlat
ret
shrl
mov
xor
mov
insl
repz
es
jle
inc
push
add
icebp
cmpsb
ret
leave
js
or
cld
dec
mov
out
testl
push
cmp
xlat
jl
inc
mov
push
in
fbstp
cmpsl
xchg
mov
ljmp
cmpsl
int3
add
cmp
dec
inc
inc
std
pop
jbe
ds
jmp
outsb
sarl
divb
lods
shll
mov
sbb
sub
aam
js
rcr
pop
outsl
and
test
and
mov
inc
mov
addr16
pop
insl
push
adc
std
mov
adc
or
mov
fucom
dec
mov
dec
into
ret
je
stc
jp
out
push
fistl
in
mov
lahf
clc
movsl
notl
and
rcrb
mov
mov
dec
push
sti
xor
cmp
lea
dec
leave
push
jmp
dec
mov
js
cwtl
xchg
cmpsl
dec
lret
mov
mov
pop
xchg
sub
fidivrs
orb
insb
leave
jne
rcrb
fdivrl
aad
jmp
adc
cmp
cmpsb
or
xchg
inc
repnz
xchg
dec
std
mov
popa
cmpsl
xor
fidivl
inc
mov
sbb
out
push
mov
es
cmp
movsb
ja
jb
sub
pusha
sar
mov
pop
mov
fldl
mulb
cmp
rcll
add
aaa
out
pop
ficoml
cli
jl
jmp
leave
enter
dec
fwait
inc
mov
es
outsb
jb
mov
pop
in
into
aaa
mov
cmp
int
xor
add
or
dec
or
pop
pop
cmpsb
fwait
add
repz
dec
in
mov
mov
xchg
enter
mov
add
cmpsb
pop
scas
daa
add
adc
mov
sbb
push
in
daa
pop
out
xchg
jp
xchg
pop
ss
in
mov
ret
in
or
push
mov
xlat
loope
es
es
out
sbb
add
call
jne
mov
cmp
dec
push
fdivp
fildl
pop
xor
pop
fldln2
cs
ljmp
add
pop
cltd
lock
pop
jno
cld
sbb
ret
add
fwait
inc
inc
sub
cwtl
adc
jp
in
push
push
popf
sub
idivl
mov
cmpsb
cmp
mov
loopne
adc
sti
fistl
cmp
pushf
mov
pop
push
clc
call
mov
jae
cmc
xchg
out
push
mov
push
xor
xor
lret
and
xor
jecxz
test
outsl
fsubrs
adcl
xor
sbb
pop
push
sbb
jmp
sbb
imull
xor
xorb
mulb
adc
ret
pusha
jp
cmp
scas
sub
push
pop
dec
inc
jmp
jnp
pop
fstps
or
sbbb
rol
in
stc
movsb
inc
adc
inc
mov
sub
das
daa
daa
inc
sbb
mov
leave
pop
pop
mov
pop
and
decl
cmc
mov
lods
out
push
mov
inc
push
ret
add
insb
mov
adc
jmp
jns
cmp
add
mov
adc
adc
xchg
aaa
xchg
fmul
lahf
push
rclb
xor
mov
call
and
aam
adc
fisubrs
ja
or
push
sub
es
into
enter
pop
bnd
xchg
decl
test
add
ret
repnz
or
xchg
insb
pop
inc
dec
sub
or
mov
ds
xor
xchg
and
xchg
add
cs
push
inc
jno
xor
mov
dec
dec
fbstp
lods
sbb
aad
sbb
pop
mov
jbe
sub
sub
inc
and
mov
xchg
shlb
xlat
or
test
dec
sub
mov
inc
mulb
xlat
xor
ljmp
jbe
add
and
fwait
enter
mov
outsb
add
dec
and
fadds
fs
fcomps
dec
pop
mov
mov
je
insl
jno
jns
out
stos
mov
xchg
jmp
and
call
ss
js
es
xor
ss
jp
xor
adc
mov
or
imul
mov
push
div
jl
jp
gs
mov
xlat
jb
cmp
popl
ja
jge
shl
adc
push
es
mov
fcoml
jb
mov
lds
mov
inc
cmpsb
out
inc
mov
sbb
ds
lock
pop
shrb
cmpsb
in
mov
hlt
or
mov
in
loop
ds
les
push
orb
out
aaa
aam
lcall
subl
mov
mov
sub
mov
adc
fisttpll
call
mov
mov
ljmp
jge
xchg
inc
and
xorb
mov
xorl
xor
jae
leave
adc
adc
push
rorb
btc
jg
jnp
cli
inc
inc
pusha
jg
pop
and
xor
jnp
cmpsl
rclb
and
and
cmpsl
cmp
pop
or
movsl
sarl
add
inc
mov
dec
faddl
in
aas
pop
pushf
mov
xor
rcrb
xchg
jb
out
arpl
mov
cmp
daa
jle
inc
mov
xchg
mov
push
add
arpl
es
sahf
idivl
es
jp
fildll
out
adc
sub
loopne
cmp
lods
xchg
scas
pop
sbb
andb
ds
pop
cs
jno
call
jne
and
out
pop
ljmp
insb
loopne
test
test
adc
int3
adc
dec
cmc
aas
loop
mov
push
pop
cltd
rorl
inc
jmp
pop
xor
push
insl
xlat
jecxz
fs
xor
xchg
and
subl
xor
mov
add
subb
xor
fcmovb
mov
dec
scas
push
int3
lret
aaa
and
dec
icebp
lret
rcll
fsub
aaa
mov
data16
push
inc
push
push
rcl
jle
rclb
adc
add
lret
dec
push
dec
sub
cmc
and
mov
mov
insl
add
std
mov
sub
mov
jno
loopne
out
and
cmpsb
enter
xchg
push
xor
ja
sbb
pop
pop
jb
xor
int3
iret
sbb
fisttpll
mov
fwait
jle
xchg
ret
jne
cmp
jnp
xchg
jg
mov
xor
and
inc
push
push
pop
sub
push
inc
mov
push
sub
in
fsubrp
lahf
pop
les
nop
mov
cld
sbb
jne
les
pusha
pop
aad
cmpsb
lcall
enter
inc
cwtl
dec
addb
mov
popf
jbe
sbb
fwait
in
adc
and
xor
mov
bound
ret
mov
dec
or
bound
pop
mov
outsl
add
imulb
jno
jo
adc
and
lcall
xlat
dec
or
shll
dec
lret
popa
lea
push
subb
adc
xchg
inc
lret
fstpl
push
mov
sbb
filds
jg
add
aaa
std
test
and
ret
inc
push
jmp
adc
cmc
xor
cmpsb
cli
cmc
mov
daa
push
push
jle
out
insb
mov
inc
repz
push
andb
push
xor
cltd
test
xchg
push
ret
xor
popa
jmp
and
pop
mov
lret
cli
pushf
pop
inc
sbb
iret
sahf
daa
and
mov
in
cmp
fs
clc
js
divb
add
or
mov
push
xchg
inc
add
fcomi
xchg
loope
or
inc
std
jnp
rolb
xchg
cmp
jmp
mov
mov
pop
test
push
cmp
dec
addr16
xlat
js
push
inc
add
add
hlt
inc
ret
lahf
in
ljmp
mov
or
sub
aad
sub
mov
out
jp
and
xchg
xor
sub
frstor
mov
xchg
xor
pop
bound
sbb
icebp
pop
aad
mov
xor
mov
fcomi
rclb
jne
repz
out
dec
jecxz
sarb
inc
and
pop
outsb
sub
push
inc
mov
inc
insl
scas
jne
sub
dec
not
fisubs
cmpsl
sbb
sahf
xor
xchg
movsb
dec
shl
cmp
ds
and
jle
add
fwait
jge
pop
outsb
mov
mov
in
popf
xchg
inc
xchg
adc
test
out
pop
xchg
dec
pop
pop
pop
and
sbb
jae
sahf
pop
pop
xlat
out
cli
mov
test
jbe
xor
in
cmp
jmp
push
mov
xor
add
bound
sub
and
sub
lock
sarl
xor
shl
ficoml
dec
adc
cs
leave
fadds
cmc
pop
push
std
inc
jo
sbb
fisubl
jno
xchg
stc
ret
and
add
inc
cltd
push
shr
jb,pn
push
mov
dec
push
cmpsb
test
add
adc
outsb
popf
popf
cmp
adc
pop
jb
ss
loope
add
sbb
sti
and
sub
imul
into
dec
pushf
jmp
cwtl
test
je
mov
pop
dec
loope
cld
xorb
or
addb
icebp
psubb
or
bound
pop
xchg
out
cmc
notl
cmp
aas
arpl
imul
xlat
push
leave
aam
adc
jge
sbb
rcll
dec
daa
stos
lahf
inc
jbe
fs
test
movsl
mov
xchg
xor
cld
jbe
cmpsb
mov
pop
rol
mov
pop
icebp
lahf
int
xor
imull
add
dec
lahf
or
mov
mov
aas
negl
jno
into
jp
into
cmp
jle
xchg
pop
lock
pop
pop
idivl
lods
push
int3
ds
add
ror
fs
dec
jle
ficomps
ja
scas
movsl
addr16
fisttpll
cmp
test
fadds
insb
outsb
jo
jle
nop
mov
xor
sbb
sbb
fcomps
add
adc
mov
adc
stos
mov
pop
mov
pushf
sub
ficomps
mov
mov
push
push
and
mov
jnp
lea
call
dec
or
test
fistpl
cli
js
add
adc
push
sbbb
inc
jmp
xchg
jnp
shr
jg
mov
dec
arpl
les
call
jno
xchg
mov
lea
pop
sbb
mov
fcoml
mov
and
push
jmp
bound
outsl
call
sahf
cmpl
into
lret
movsl
je
or
sarl
add
mov
sub
push
pop
sbb
dec
push
xchg
cmp
xchg
jmp
xor
jecxz
cmp
aaa
sub
push
mov
dec
pop
repnz
jb,pt
mov
push
sbb
movb
jmp
push
sub
mov
out
ficomps
pop
je
aas
arpl
mov
add
add
add
push
faddl
mov
cmpsl
add
lahf
dec
push
movsb
xor
inc
jmp
fcmove
sbb
aas
loopne
mov
and
aas
pop
sbb
lret
pusha
std
jmp
jecxz
mov
pop
jmp
aas
mov
or
sub
test
pop
or
stc
fnstenv
sti
and
sub
dec
lret
cmp
sub
mov
adc
arpl
les
repz
xor
out
adc
jno
add
mov
int3
add
loopne
bound
roll
test
mov
mov
inc
and
pop
mov
aas
pushf
mov
xor
xchg
jl
jnp
mov
mov
scas
xor
jmp
out
fwait
xor
cwtl
jge
lret
pushaw
popa
pop
loop
cmp
jge
es
loopne
std
adc
lea
mov
subb
mov
outsl
jmp
mov
test
lcall
add
push
insb
push
mov
ret
add
jmp
jmp
or
negb
inc
out
frstor
xchg
push
mov
mov
sub
push
imull
ret
mov
mov
cs
es
push
sub
mov
aam
sub
push
push
jp
xchg
inc
xchg
jp
jnp
adc
push
cld
pop
adc
imul
aad
outsb
mov
add
icebp
xchg
je
cmp
jo
ret
sti
xor
mov
xor
and
xorl
scas
mov
into
std
in
inc
sbb
je
repnz
test
movsb
jp
mov
and
lret
push
push
jbe
mov
add
cmpsb
jecxz
ljmp
xlat
push
xor
ret
xchg
call
xchg
mov
movsl
mov
shlb
fwait
je
jno
mov
jae
push
dec
arpl
test
dec
sbb
or
out
insb
pop
and
inc
mov
jl
push
lods
lods
ds
js
mov
mov
sbb
in
mov
xchg
adc
popf
ret
and
xchg
repz
lret
inc
push
inc
decl
icebp
push
out
add
js
push
lods
sbb
jns
fnstcw
jo
rcrl
scas
iret
mov
mov
xor
mov
push
addr16
imul
xor
mov
mov
inc
sub
cmp
dec
fmull
mov
aad
movsl
add
ljmp
dec
add
jb
pop
pop
imul
sub
popa
xchg
jecxz
and
clc
sub
or
scas
outsb
test
pop
dec
lret
dec
fcmovbe
cmpsb
pop
leave
add
aas
lret
sbb
xchg
aad
addr16
into
les
ret
cmpsl
daa
test
mov
and
inc
sub
es
icebp
mov
mov
iret
movsl
xchg
outsl
sbb
fldl
das
jns
in
adc
test
arpl
push
pop
xchg
popa
vmptrst
push
and
mov
add
or
dec
push
push
out
jle
cltd
add
cs
xchg
mov
cs
repz
jp
in
jmp
sub
pop
int3
aam
adc
jb
sub
daa
shlb
cmp
daa
pop
lcall
dec
stos
shrb
push
dec
mov
push
push
pop
lds
cli
jnp
sahf
sbb
js
mulb
add
stos
push
rorl
cmpsl
rolb
or
xorl
jge
aas
sub
lea
adc
adc
cld
test
call
pop
sbb
mov
les
jne
out
push
cmp
mov
xchg
mov
mov
je
inc
test
jg
das
pop
sub
pop
int3
andb
mov
repz
scas
mov
sbb
dec
and
lock
incb
pop
sub
lods
adc
xchg
fwait
add
xor
or
xor
jo
cld
push
adc
or
pop
insl
mov
mov
sbb
cmp
leave
shrb
adc
sahf
cwtl
stc
sbb
mov
mov
shll
cmp
and
mull
jbe
scas
mov
push
mov
les
rclb
sub
xor
and
push
fsub
aad
gs
sarb
push
xchg
cmp
dec
mov
mov
push
jo
lcall
inc
push
mov
dec
dec
sti
push
sub
push
mov
xchg
dec
add
movsb
sahf
mov
pusha
lret
cmp
fs
xor
out
sub
xorb
sbb
push
ret
inc
jae
dec
outsb
inc
imul
repz
dec
bound
dec
rol
push
loopne
xor
inc
data16
or
push
and
xchg
push
dec
scas
movsb
xor
xor
cmp
imul
inc
movsb
or
or
shrb
jne
in
sub
movsb
pop
out
icebp
out
mov
dec
pop
pop
xchg
dec
loope
cmp
test
inc
in
pop
ret
xchg
outsl
jo
cmp
xor
push
mov
repz
mov
nop
sbb
mov
xchg
rcll
mov
sbb
lcall
xchg
dec
mov
out
xor
add
mov
lea
aam
push
dec
add
daa
addr16
fwait
ljmp
mov
fs
stos
scas
fs
ret
jb
in
fsubl
aad
jnp
call
push
std
or
mov
xchg
cmp
push
in
cmp
fistps
out
xchg
add
aas
popf
movsl
test
ret
xchg
inc
ljmp
pop
in
shll
sbb
int3
xchg
je
outsb
adc
mov
decl
pop
cmpsl
sub
pop
les
shll
push
test
int3
push
push
in
xchg
and
call
inc
lods
xchg
lret
ja
and
or
fiadds
fnstsw
pop
fimuls
dec
fisttpll
cmp
aad
inc
sub
sub
stos
js
insl
movl
dec
fwait
pop
adc
call
ret
mov
in
sbb
mov
mov
mov
ja
rclb
sbb
daa
and
mov
pop
shl
test
cld
movsl
jnp
push
loop
vcmppd
sbb
push
mov
test
push
push
inc
xor
xchg
mov
popa
lods
shrb
xor
mov
pop
das
or
pushf
jl
pop
push
jae
sbb
xor
and
out
push
add
sahf
mov
mov
mov
in
mov
push
jl
stos
xor
es
jb
push
daa
push
jno
outsl
jle
stos
ljmp
std
push
sti
push
adc
and
sub
push
bound
imul
sarb
ljmp
pop
ja
inc
icebp
sub
stos
jg
stc
gs
ficoms
and
pop
movsb
dec
adcl
cmpsl
bound
inc
xor
aaa
jb
sbb
push
fs
push
out
xchg
pop
adc
jae
mov
aas
adc
push
aaa
nop
scas
jne
test
mov
rclb
cmp
shll
iret
push
xchg
jno
dec
mov
stos
cmc
dec
push
add
arpl
cmp
fcoml
std
mov
imul
insb
mov
lds
cmpl
fsubs
cmpsb
imul
cmc
aaa
jnp
mov
jnp
push
pop
xchg
bound
outsb
mov
jnp
mov
inc
mov
test
xchg
repz
cmp
pextrw
dec
lcall
daa
out
pop
ds
stos
cmp
not
adc
stc
cmpl
pop
inc
aad
push
out
or
outsb
add
or
and
lea
leave
in
or
adc
mov
scas
out
clc
sarb
subb
mov
push
or
in
lahf
rcl
int3
clc
or
popa
pop
loopne
sti
ss
adcl
mov
mov
dec
aas
mov
outsb
push
out
jnp
pusha
aad
mov
xor
add
jmp
push
jae
cmp
fiadds
sbb
push
and
pop
loope
cmp
sbb
inc
adc
lock
test
mov
lret
mov
mov
add
stc
sbb
xchg
jb
mov
lret
call
ljmp
cs
fstpt
cmpsl
pop
mov
sub
jo
dec
inc
and
insl
inc
sub
test
mov
add
mov
push
fsubrs
shrb
jp
push
adc
jo
out
clc
andl
sbb
sahf
int3
rcll
mov
dec
xor
into
dec
aad
push
and
jnp
jl
dec
dec
or
out
pop
fwait
and
push
mov
pushf
imul
mov
sbb
xlat
adc
pusha
push
pop
ja,pt
xchg
addb
popa
sub
and
stc
mov
and
push
in
cs
ret
fcompl
cmp
mov
int3
sbb
xchg
mov
sub
and
xor
or
sar
mov
lret
mov
in
int3
ja
imul
xchg
rorb
and
std
pop
adc
shlb
clc
push
push
mov
ret
loop
jle
test
daa
cmp
xchg
mov
pop
cmp
shlb
lods
push
imul
out
insb
aaa
test
mov
push
pop
lea
jne
xchg
jle
imul
sub
out
arpl
or
insl
or
mov
xor
push
sub
mov
lods
inc
or
call
lret
test
xor
imul
hlt
jmp
push
sbb
jnp
mov
leave
lcall
popf
testb
jmp
dec
xchg
or
xor
stos
push
sub
sbb
scas
jns
mov
xlat
stc
mov
cmp
or
cltd
decl
cs
mov
and
rorl
adc
subl
push
cld
rclb
and
sahf
xor
repz
imul
clc
fistps
push
add
decb
inc
push
mov
imul
xchg
push
insb
pop
sar
and
inc
adc
mov
jb
lock
imul
xchg
dec
movsl
mov
pop
adc
jnp
ds
flds
aam
mov
inc
push
adc
push
insb
dec
ss
mov
ja
and
bound
xor
mov
push
jp
aam
mov
adc
dec
aaa
push
scas
daa
jae
icebp
fisubrs
js
leave
or
lea
lahf
xor
pop
lds
dec
push
fisubl
clc
and
cmpsl
cmpsb
jb
addr16
xchg
scas
js
mov
dec
cmp
loope
ss
pop
sahf
xchg
xchg
ret
imul
pmaxsw
das
jbe
add
pop
lea
inc
xchg
adc
imul
sub
mov
and
das
out
pop
add
xor
or
xchg
sub
jo
inc
fists
mov
xor
loopne
loop
call
dec
sbb
cmp
test
test
mov
inc
jmp
pop
inc
loope
or
add
adc
fistl
dec
jle
xchg
hlt
andl
stos
bound
mov
push
xchg
sub
sti
sub
jecxz
mov
inc
push
leave
aad
cmp
dec
int3
jle
icebp
pushf
cmpsl
mov
cmpsl
xchg
aaa
das
jp
adc
arpl
mov
and
xor
rorl
rcll
mov
xchg
jecxz
push
sbb
mov
xchg
and
arpl
sbb
and
lcall
out
lret
jnp
loop
call
sbb
pushf
aas
dec
pop
ret
enter
lods
rcrl
sbb
cmp
es
and
out
ljmp
test
jp
aaa
xchg
mov
mov
mov
pop
inc
fstps
xor
mov
dec
cwtl
xor
xchg
mov
xor
xchg
adc
aas
or
jmp
test
pop
push
push
inc
outsb
sbb
cmp
or
sahf
shr
lock
test
in
sub
test
stos
inc
mov
add
inc
stc
aam
sti
mov
jno
xor
addl
addr16
jl
xchg
in
daa
fwait
xchg
add
pop
mov
lea
dec
push
or
push
lods
dec
cmpb
adc
fwait
rol
mov
or
mov
repz
pop
std
mov
test
movsl
add
mov
push
lea
ljmp
and
pop
and
aas
sbb
add
rclb
or
aad
mov
sti
or
movl
addr16
gs
xchg
data16
out
dec
inc
stc
add
movl
icebp
out
ret
inc
pop
mov
popf
aam
cwtl
mov
repnz
xor
sbb
add
mov
pop
pop
push
fstpt
inc
clc
pop
loop
jmp
mov
int3
ljmp
in
cmp
push
jmp
adc
sub
inc
cld
lods
js
sub
or
jnp
jg
cmpl
mov
sub
push
mov
inc
xchg
lds
pop
mov
test
push
movsb
mov
cli
aad
lods
jge
xchg
stc
sub
outsl
xchg
testb
adc
sub
ret
push
xchg
xchg
shrb
xchg
ret
dec
add
lret
ss
and
or
leave
daa
xor
dec
xchg
push
cwtl
dec
inc
pop
stos
mov
push
jmp
dec
jge
pop
movsb
arpl
xchg
pusha
lcall
loope
jno
arpl
lahf
ror
sahf
inc
jb
cli
lcall
call
add
repz
fcmove
hlt
cmp
push
jmp
inc
inc
inc
adc
mov
pop
adc
out
imul
dec
stos
dec
test
loopne
aaa
push
out
and
punpckhdq
mov
in
mov
mov
aas
inc
pop
sub
adc
cmp
push
push
or
inc
dec
je
xchg
cmp
sbb
dec
dec
das
cld
cwtl
nop
in
or
lea
push
cmp
and
lock
jne
mov
std
xchg
mov
jmp
sahf
jbe
mov
sbb
repz
arpl
call
sub
xchg
insl
lcall
adc
icebp
popa
add
jnp
mov
or
mov
movsb
mov
pop
clc
loopne
push
mov
jnp
jge
mov
inc
ss
sub
mov
mov
ljmp
cmp
ror
xor
push
sbb
in
push
into
push
lods
jne
sub
push
adc
sahf
mov
cli
js
lods
cmp
cmc
mov
xor
push
enter
push
push
lock
and
cwtl
test
int3
sub
cwtl
stc
add
pusha
int
jnp
aaa
fxch
jo
or
lcall
ljmp
xchg
mov
daa
xchg
sub
ds
aam
sbb
scas
pop
push
mov
jb
sar
repnz
or
cli
mov
lret
sbb
push
sub
pushf
movsl
nop
adc
fisubrs
pop
pushf
pop
push
push
pop
and
xchg
xchg
outsl
test
ljmp
sbb
add
sub
xchg
iret
call
iret
adc
fwait
loopne
jl
mov
loop
mul
dec
adc
sub
test
jns
cmpsl
mov
int3
mov
cwtl
das
push
mov
popf
stos
jmp
and
fnstcw
jp
dec
subl
add
rorb
in
xor
out
dec
mov
xchg
out
and
arpl
in
inc
mov
mov
xor
in
sbb
jns
data16
not
inc
pop
lcall
mov
jbe
jne
cmp
xchg
add
fisubrs
jl
int3
sbb
shrl
nop
and
rclb
mov
jg
lods
popf
pop
fsubl
fstl
int
in
sub
cs
enter
or
test
adc
sahf
pop
pushf
jb
cwtl
sarl
shrb
imull
into
sbb
outsb
sbb
or
ljmp
test
in
sarb
dec
popf
mov
xlat
mov
push
pop
mov
adc
jnp
in
in
add
pop
fs
stos
scas
loope
stos
push
mov
fstpt
jecxz
cmp
test
pop
cld
mov
adc
sbb
jle
mov
adcl
mov
xchg
mov
lea
dec
in
or
pop
stos
jecxz
out
dec
movsl
lahf
xlat
mov
xlat
arpl
cld
subw
loopne
iret
inc
mov
cmp
lret
imul
xchg
inc
popl
dec
cs
lock
xor
stc
cs
pop
shrl
and
pop
mov
sbb
fwait
lock
repnz
push
lods
das
into
leave
push
imul
lahf
pop
in
xchg
testl
adc
xchg
leave
or
push
rorl
mov
and
adc
inc
xor
xchg
mov
add
gs
int
jle
or
dec
ljmp
cmp
xchg
or
sbb
pop
pop
pop
push
dec
in
int3
gs
pusha
cmc
cltd
or
test
fcmove
ss
loopne
and
lock
pop
xor
mov
fwait
aad
sub
cmp
push
ljmp
lret
mov
sub
dec
dec
repnz
mov
ret
dec
insl
cmpsb
dec
cltd
jecxz
mov
add
dec
sub
mov
cmp
fstpl
pop
fcomps
daa
lea
dec
mov
and
ret
stos
ret
and
shll
into
and
dec
adc
adc
sti
ja
xor
fs
outsl
fwait
adc
adc
push
cmp
lcall
mov
inc
dec
mov
lret
mov
clc
xor
add
jae
xor
iret
out
xor
lret
cltd
lahf
imul
fisubrs
jno
inc
scas
shll
je
lret
andl
adc
push
ffree
mov
add
into
sarl
mov
xchg
icebp
xchg
mov
xchg
outsb
fwait
mov
lret
or
adc
jg,pt
xor
rol
mov
xchg
xor
adc
jno
cmp
shl
mov
mov
roll
popa
popa
dec
shlb
jno
and
packsswb
add
addr16
hlt
xchg
jecxz
rclb
lcall
ja
loopne
inc
out
js
xor
sbb
jne
nop
sub
loop
xor
fisubl
out
mov
fidivrl
out
mov
add
lahf
cmc
jb
mov
mov
pop
incb
in
mov
movsb
mov
lds
loope
sub
mov
sbb
mov
push
sbb
add
mov
xchg
je
pop
jle
fisttps
sub
mov
int
ret
pop
or
sbb
inc
outsl
sub
or
stos
mov
stc
pushf
mov
aaa
xlat
mov
nop
outsb
fidivl
fistpl
sbb
es
out
outsl
and
and
cwtl
ljmp
cmc
clc
in
add
lods
mov
or
xor
jle
lds
outsb
hlt
xchg
loopne
or
loope
iret
pop
icebp
push
inc
pop
ss
sbb
xor
sar
xor
pop
ljmp
dec
mov
jae
out
addr16
loopne
js
test
lret
lret
test
lods
mov
mov
leave
stc
jae
push
stc
pushf
lock
mov
jmp
push
inc
dec
lds
mov
xchg
cmp
push
xlat
xchg
int
jae
loop
call
xchg
xor
mov
pop
cmpsl
testb
jae
jge
jp
int
inc
iret
dec
loop
inc
xchg
adc
enter
cmpl
lock
mov
inc
dec
xchg
mov
fisubs
lods
jne
jo
mov
jle
sbb
cmpsb
pop
test
and
fimuls
push
icebp
mov
nop
mov
daa
hlt
rorl
push
jb
add
ja
bound
fwait
lea
sbb
sbb
sbb
rcll
cli
cmp
cwtl
inc
mov
add
jmp
push
ss
pushf
ret
addr16
lods
mov
test
add
nop
cwtl
xchg
push
dec
int3
outsl
rorl
sub
out
fmulp
in
and
cmp
int
lret
mov
jecxz
mov
sub
pop
push
inc
dec
outsb
loop
mov
dec
mov
cmp
mov
jmp
lds
mov
jge
idivl
in
adc
fsub
xor
mov
or
sbb
sub
insb
adc
adc
cwtl
xchg
scas
mov
lds
loopne
jno
push
icebp
cmp
push
mov
cmp
ss
mov
xchg
or
int
sbb
add
sub
dec
test
imul
call
pop
out
and
add
mov
fstpl
inc
insb
cmp
cmp
push
mov
xor
iret
lahf
mov
xchg
push
movsl
out
inc
xchg
fs
mov
js
and
mov
xchg
mov
popf
jl
and
xor
daa
fmull
repz
sub
sub
xchg
xor
movsb
jb
jl
ljmp
mov
fcompl
cmp
mov
fs
or
add
sti
cmp
test
pushf
xchg
inc
enter
or
fisttpl
pop
stos
pop
sbb
add
pop
daa
shl
sarb
dec
fldt
pop
dec
sub
ret
jl
jg
pop
lret
mov
lea
pop
call
out
mov
sbb
sbb
pop
adc
lret
repz
test
lcall
call
loop
sti
iret
sbb
fsubr
jl
push
dec
loopne
mov
xor
loopne
and
ret
and
outsb
icebp
outsb
add
lds
lods
pusha
rclb
bound
icebp
fidivs
rorb
pop
out
push
sbb
in
aam
daa
test
dec
insl
sbb
and
xchg
ret
outsb
roll
dec
test
ret
scas
or
fimull
and
je
sbb
mov
rcll
subl
ja
leave
out
insb
movsl
fistl
es
imul
xchg
push
cld
in
hlt
or
mov
cmpsl
mov
mov
pop
test
aad
jb
cwtl
fwait
hlt
fnstenv
dec
adc
hlt
jge
cmc
clc
mov
icebp
and
aam
xor
jmp
shll
js
cmpsl
int3
fs
mov
arpl
mov
in
and
int
adc
pushf
jmp
fsubrp
decb
pop
jle
mov
mov
mov
push
cli
ficomps
fcmove
popf
shlb
outsb
daa
stos
shll
push
sti
stos
and
out
mov
popa
cmpsl
push
cwtl
xchg
outsl
mov
insl
inc
sbb
js
in
inc
iret
fisttpll
sbb
lock
push
in
xadd
out
outsl
jg
pop
jecxz
inc
pop
xor
or
xor
pop
in
fidivs
adc
aam
cmp
or
adc
dec
mov
hlt
sbb
hlt
mov
xchg
pop
jno
jg
je
addr16
fs
sti
mov
iret
movsl
push
pop
fisubs
jecxz
mov
lea
lea
cmp
or
inc
das
fdivs
xchg
push
and
push
jnp
cmp
pop
add
push
pushf
jl
nop
iret
cmpsl
out
push
mov
pusha
inc
and
jne
or
and
faddl
xor
push
into
inc
cs
mov
adc
psraw
add
add
scas
mov
inc
fsubrl
sub
mov
cmpl
mov
adc
add
scas
fcompl
and
stos
jg
and
push
adc
pop
xchg
inc
and
pop
jae
push
insb
push
popa
mov
sar
out
cmp
iret
xchg
arpl
subb
dec
cmp
cmp
cmpb
push
js
push
mov
adc
in
jg
fcoml
pusha
stc
jne
lahf
xchg
push
into
lock
jne
cltd
popf
xchg
inc
sbb
sub
jge
or
or
sbb
popa
shlb
scas
lret
insl
mov
xchg
into
aad
cltd
dec
sub
adc
jmp
js
inc
mov
mov
jle
scas
push
jp
bound
pop
int3
push
lods
stos
inc
sbb
jecxz
pop
pop
stos
adc
inc
test
ljmp
and
aad
mov
mov
sbb
cmp
mov
push
pop
cmpsl
aad
sbb
add
add
mov
pop
jne
ja
fisubl
jbe
mov
insl
pusha
and
out
stc
jns
shll
ds
xlat
push
push
fsts
inc
inc
arpl
movsb
jno
ja
push
push
ficoms
out
shrl
enter
mov
mov
jg
mov
mov
popa
mov
pop
dec
mov
mov
or
mov
add
sbb
pop
aaa
mov
pushf
sti
fwait
dec
addl
jbe
pop
out
aam
jecxz
in
mov
in
jmp
test
push
in
leave
mov
pop
push
push
mov
cltd
into
daa
dec
cmp
lock
inc
js
push
or
movsl
or
mov
inc
scas
xchg
mov
sbb
mov
lock
add
lret
andb
lds
or
shlb
imul
stos
out
lock
dec
nop
and
enter
scas
add
lret
mov
xchg
lea
jae
and
sbb
mov
dec
sbbb
add
ficoms
xchg
add
and
inc
sar
or
pop
ret
scas
cmpsb
adc
jp
aaa
testl
adc
dec
movsl
imul
adc
lea
sub
ds
xchg
mov
cmpsb
mov
test
adc
fsubs
jb
ss
add
or
pop
sbb
and
sub
pop
cmp
pop
mov
je
xchg
cld
add
mov
es
mov
jle
imul
adc
fwait
test
mov
dec
xor
cmpsb
cli
pop
pop
stos
stc
adc
lods
popa
inc
dec
mov
xor
push
in
out
mov
insb
mov
pop
rcll
push
andb
into
mov
sbb
cmpsl
xchg
push
jnp
push
xor
push
and
push
xchg
jge
test
movsb
xor
sub
inc
movsl
insb
andb
mov
or
gs
popa
sub
xorb
aaa
ret
fiaddl
imul
imul
or
cmpsl
out
mov
jne
fwait
dec
jl,pt
jg
mov
sbb
pop
jl
aas
inc
sti
mov
cwtl
mov
lea
mov
xor
push
pop
fisubrl
pop
insl
pop
scas
xchg
add
push
cmp
add
mov
fwait
inc
cmpsl
shrl
and
pop
lods
test
jo
mov
mov
aaa
in
push
ljmp
or
mov
repnz
imul
xchg
orl
mov
mov
ja
fwait
arpl
mov
aam
push
mov
inc
push
mov
adc
daa
xor
aad
xchg
mov
imul
aad
lds
mov
dec
cmp
inc
insb
xor
mov
push
ficomps
xchg
fdivrs
js
xor
mov
mov
fucomi
lods
insl
mov
fcomi
mov
not
cwtl
mov
sti
fisttpll
pop
shrl
xor
movsl
repz
ret
mov
loop
sub
sbb
adc
xor
aas
inc
iret
mov
sbb
and
add
sbb
les
cmpsl
xor
jmp
je
inc
lea
stos
sub
je
es
movsl
mov
or
jnp
addl
daa
test
cmp
mov
nop
out
cmp
mov
popa
inc
sub
sub
xor
xchg
hlt
sub
mov
in
inc
orb
stc
adc
cmp
mov
sub
jge
fwait
jns
push
dec
movsl
std
aas
xchg
mov
into
add
jg
popf
lock
push
xor
fs
in
inc
loopne
fwait
sti
pop
push
test
loopne
cs
in
inc
xor
push
push
aaa
mov
push
call
jne
mov
push
push
outsb
repz
mov
popa
out
aaa
and
nop
daa
jmp
mov
iret
aas
dec
cs
std
xor
adc
repz
ret
lret
dec
adc
ficomps
or
push
mov
test
mov
sub
mov
push
rcr
jp
xchg
nop
data16
repnz
jge
xchg
insb
out
sti
adc
xor
jg
xor
mov
jb
jno
cmp
mov
insl
icebp
pop
sbb
mov
jae
ret
pop
repz
mov
ret
call
mov
mov
ja
addl
out
mov
lcall
mov
test
or
and
pop
jne
add
hlt
jg
fists
dec
mov
pushf
fcoms
std
lcall
and
loope
data16
jmp
shl
xor
fnsave
jo
xor
or
jp
mov
lret
sbb
jo
mov
lock
mov
add
xchg
ret
iret
xor
push
xchg
loope
xchg
loop
mov
pop
or
cld
push
sub
daa
aaa
adc
cmp
fildl
jb
jmp
ljmp
inc
inc
add
sbb
addr16
fwait
hlt
xchg
push
or
fxch
test
mov
xor
test
cmpsb
mov
cwtl
fs
out
xor
push
push
pop
stos
mov
rcll
xchg
mov
into
fisubrs
mov
mov
xor
jmp
aad
xlat
add
movsb
push
xor
mov
stos
inc
fiadds
inc
jb
lock
dec
arpl
mov
push
mov
push
mov
ds
rcrb
sbb
mov
sbb
imul
pop
mov
out
ds
xchg
pop
repnz
fists
push
ret
mov
fwait
test
or
xchg
and
mov
cmp
stos
or
ficoml
sti
mov
add
es
sub
sub
sub
scas
les
sub
inc
xchg
out
jecxz
cmp
dec
push
cld
and
test
scas
cli
mov
sbb
sar
pop
jns
fnstcw
fisubl
scas
cmp
cmpb
adc
adc
push
ljmp
xlat
mov
iret
xchg
icebp
add
mov
add
adc
jl
repnz
jmp
xor
inc
mov
popf
pop
push
aam
std
jle
jnp
mull
imul
adc
rorl
shrl
mov
aad
pop
and
jmp
jnp
lods
shlb
outsb
imul
push
mov
test
ret
sub
gs
sbb
push
mov
pop
or
repz
and
jo
sar
pop
imul
mov
jecxz
lret
xchg
sahf
mov
push
mov
sahf
into
pop
jnp
out
xor
jb
lret
jg
add
je
ss
dec
mov
sar
xchg
arpl
stc
aad
pop
into
cmp
dec
ds
push
jns
inc
pop
ljmp
push
popa
and
jmp
push
sbb
out
or
sub
jp
or
mov
aas
aam
xor
and
and
cmpsl
push
cmp
xor
and
xor
pop
ret
cmp
dec
shll
jg
mov
xchg
push
and
or
mov
add
das
test
inc
sbb
dec
xorb
or
mov
sarl
das
test
pop
cli
fistl
pop
jmp
push
incb
sarl
push
xor
sbb
mov
mov
adc
pop
or
inc
cmc
je
pop
lock
imul
and
jp
jmp
out
cmp
cwtl
jg
xor
jno
loopne
in
jge
jnp
sahf
xor
negb
inc
jg
notb
xor
dec
lret
rorl
cs
jb
cmc
dec
inc
test
jne
in
cmc
xchg
out
mov
jp
pop
sbb
fsubrs
inc
sbb
bound
sbb
mov
push
sti
pop
insb
pop
jb
mov
cmpsl
stos
sub
dec
mov
push
dec
cmpsl
dec
arpl
andl
lret
pop
mov
pusha
js
das
jecxz
jecxz
sbb
out
je
add
adc
add
jecxz
xchg
xchg
sub
dec
mov
ss
fstpt
or
insb
mov
mov
aas
jp
fidivl
push
xor
xor
or
push
mov
imul
xchg
rclb
lahf
rclb
dec
iret
pop
sti
xor
pop
jmp
jle
push
mov
stc
es
add
mov
sbb
fstpl
xor
cld
or
negl
lret
dec
stc
sub
inc
jge
test
xchg
cltd
jle
insl
xchg
jle
repnz
lods
lock
outsl
or
mov
jecxz
xchg
mov
jge
lock
mov
test
pop
in
or
push
ds
pusha
fisttps
ja
rcrl
add
adc
inc
in
je
fdivrp
xchg
les
xchg
adc
pop
fadd
jl
add
mov
jnp
jns
push
mov
fs
lods
lcall
stos
xchg
sahf
xchg
push
jbe
std
or
sbb
mov
test
and
gs
sbb
cmpsl
adc
pop
lods
sbbb
dec
xor
scas
ja
ja
inc
es
xchg
addr16
aaa
xor
or
sub
sub
add
add
aam
addr16
jl
mov
cwtl
push
fstl
ret
cmpsl
inc
cld
jnp
lock
add
jmp
jecxz
clc
scas
jmp
cld
test
add
xchg
pop
mov
or
xchg
and
mov
clc
cmp
aam
test
lds
cmpsb
xor
mov
in
imul
cmp
jne
lahf
mov
push
cmp
sbb
sbb
loope
push
test
fnstenv
pushf
push
pop
sti
push
fisttpll
mov
ja
cwtl
jmp
shlb
lret
scas
jp
xor
jno
dec
imul
lock
add
mov
pop
das
nop
pop
and
jg
jmp
mov
xrelease
roll
push
int
aas
pop
mov
adc
inc
add
adc
cmpsb
les
rcl
and
inc
fldcw
pusha
rorl
xchg
sbb
loop
sbb
pusha
rclb
or
jg
sub
xchg
mov
mov
leave
in
adcb
scas
call
repnz
xor
or
and
or
test
arpl
push
fildl
sub
jle
fildl
sub
je
inc
lods
mulb
stos
in
cmpsl
les
xor
sbb
push
sub
cmp
xchg
js
push
mov
or
mov
out
push
and
repz
imul
mov
and
mov
pushf
mov
pusha
mov
jbe
mov
ret
gs
orb
dec
cmc
test
cld
jne
cs
inc
call
and
mov
push
bound
cmpsl
dec
dec
xchg
and
mov
adcl
dec
fisttps
lods
and
cwtl
push
mov
push
out
mov
outsb
mov
stos
ds
cltd
arpl
cs
sbb
loopne
pop
shrb
xchg
mov
imul
test
jbe
push
fwait
shlb
dec
mov
or
cwtl
mov
xchg
cmpsl
imul
sub
mov
sarl
je
mov
movsb
xchg
ret
shl
stc
or
jg
test
jbe
inc
push
xchg
in
jg
push
daa
or
xchg
int3
out
std
test
div
addl
adc
dec
das
inc
repnz
popa
jmp
or
aad
inc
mull
in
stos
or
push
cmp
sub
inc
fstpl
cmp
push
pop
jmp
test
mov
pop
lea
outsb
pop
sub
or
outsb
ljmp
fists
sbb
and
aaa
fistl
pop
jp
outsb
sub
or
popa
jge
insb
shll
out
xor
shrl
popa
cmp
jbe
cli
insl
mov
or
mov
mov
out
cld
popa
xorl
cld
sub
add
adc
mov
and
movsb
fs
jo
jmp
pop
mov
les
mov
enter
ret
bnd
dec
adc
lock
add
dec
push
aam
add
incl
loope
divl
sub
mov
fnstcw
out
mov
xlat
push
fsts
push
int
mov
xchg
push
push
test
cmc
sub
push
mov
mov
dec
mov
cs
pop
lds
xor
rorl
inc
mov
mov
fcompl
pop
dec
push
rcrb
pop
lea
in
cld
mov
sarl
mov
jbe
hlt
mov
fmuls
and
xor
cwtl
ss
xor
cld
cmp
std
test
xchg
xlat
imul
mov
pop
xchg
sar
xorl
rcl
test
push
imul
outsl
push
stc
jl
adc
jno
dec
aas
xchg
aam
or
outsb
xor
add
into
es
push
mov
push
push
std
inc
aam
sahf
mov
xor
cmp
in
add
pop
push
scas
cwtl
jge
push
leave
imul
mov
cltd
lret
or
mov
push
outsb
sub
xchg
inc
cli
xor
rclb
lds
and
jbe
jecxz
mov
ljmp
and
pushf
and
rcr
aad
inc
mov
mov
sub
jp
neg
cmp
addr16
sbb
xor
inc
test
cmp
nop
inc
cmp
aad
inc
pop
inc
inc
movsb
cmp
lcall
mov
xchg
inc
lods
xchg
xchg
mov
in
les
xchg
js
mov
and
inc
mov
ret
pop
ss
int
and
cmp
popa
enter
call
pop
cli
mov
xchg
test
mov
and
cmp
mov
in
ljmp
pop
cmp
lret
outsl
mov
mov
outsl
lds
cmpsb
lret
fsubrl
jge
out
cli
cmp
fisubrs
mov
out
add
cli
jne
push
jecxz,pn
fdivrl
inc
dec
leave
dec
mov
push
mov
repz
push
sub
mov
mov
add
cld
xor
mov
outsb
jl
shll
push
dec
jno
and
leave
or
insl
ds
pop
cmp
out
inc
cmp
push
jnp
mov
push
out
aas
movsb
mov
pop
jmp
pop
and
add
pop
lds
xor
jo
mov
or
into
push
and
ffree
mov
mov
hlt
push
push
pop
cmp
adc
test
mov
int
sub
loop
xor
xor
stos
outsl
inc
xlat
movsb
inc
in
mov
or
and
test
push
push
push
bound
roll
idivb
cmp
dec
xchg
mov
add
inc
ret
mov
test
mov
xchg
ror
in
outsb
cs
insb
pop
or
push
fmul
xor
fs
cmpsb
add
xor
push
rcrb
jl
xchg
inc
dec
addr16
popa
addr16
out
test
jb
pop
jl
mov
scas
out
iret
jecxz
iret
pop
sbb
cwtl
push
cmp
mov
or
mov
in
mov
imul
notrack
pop
loopne
push
dec
and
bound
mov
xchg
std
repnz
fs
inc
aad
into
loop
hlt
lret
fs
xor
inc
iret
add
jecxz
fwait
in
dec
xchg
ficoms
sub
push
setl
insl
repz
mov
pop
jl
pop
jns
pusha
mov
push
ljmp
sub
push
inc
pop
sbb
xlat
push
pop
pop
into
mov
xor
fisttps
jg
push
insb
xor
pop
xchg
jmp
add
into
add
mov
movsb
pop
adc
cmp
xor
cmpsl
xchg
add
and
sub
jb
movsl
adc
push
or
push
addl
in
push
push
cmp
enter
jl
imul
cmp
call
insl
loopne
lods
sbb
testb
lods
mov
xlat
push
lea
icebp
test
jae
cmp
adc
xchg
xchg
xlat
mov
push
mov
addr16
mov
xchg
int3
insl
call
ret
mov
mov
sub
hlt
fsubrs
push
sub
pop
mov
add
dec
flds
addl
or
fcomi
cmp
mov
or
test
dec
xchg
mov
sub
popf
mov
out
ljmp
mov
inc
mov
xchg
push
xchg
repnz
aad
or
scas
dec
xchg
leave
leave
inc
xlat
aas
nop
stc
mov
loope
pop
pop
cwtl
lret
adc
mov
jp
sbb
pop
call
aaa
scas
xchg
shlb
insb
popf
cmp
adc
inc
lods
in
subb
cmp
aam
fistpll
sub
sbb
push
or
fcoms
imul
mov
pcmpgtb
repnz
xchg
and
jne
psubusw
popa
cmpb
add
mov
mov
inc
pop
jl
call
mov
mov
mov
cmp
cmp
xchg
ja
inc
aaa
sbb
stos
push
test
scas
cltd
ljmp
or
add
sbb
mov
pop
lods
cwtl
push
push
test
iret
sti
in
daa
leave
insb
into
std
mov
rorb
sub
in
and
mov
mov
jo
rorl
sub
xor
aad
pop
sti
add
and
orl
loop
mov
mov
add
sub
lods
push
pop
leave
or
and
jge
pushf
sub
outsl
andl
les
add
sbb
pushf
push
jbe
mov
dec
dec
inc
sbb
jp
pop
push
adc
or
mov
sbbb
lret
jbe
gs
xor
popa
push
les
push
xchg
sbb
cli
or
jmp
repnz
mov
cs
pop
lds
lods
stos
out
sbb
xor
and
test
test
pop
lcall
andl
jge
scas
inc
movsl
sub
xor
out
xchg
xor
outsl
ljmp
xchg
insl
ficompl
pop
pop
loopne
lods
mov
mov
jbe
shrb
or
aaa
sub
lods
dec
idivb
adc
pusha
push
mov
inc
xor
cmp
mov
movsl
imul
push
shll
test
andl
push
ljmp
bound
mov
loope
shrl
filds
mov
pop
arpl
jns
das
jg
xchg
popf
mov
scas
pop
leave
xlat
cmc
iret
and
fstpl
inc
outsl
adc
movb
cmpsl
insl
pop
hlt
inc
lcall
adc
mov
mov
and
dec
idivl
fisttpll
in
gs
inc
mov
or
jmp
jnp
popa
sti
nopl
out
sti
inc
dec
or
sbb
scas
and
lcall
pop
sarl
aaa
xchg
pusha
sbb
aaa
ds
mov
leave
pop
xor
or
int3
xor
mov
divl
add
in
pusha
pop
cli
mov
sbb
shlb
pop
adc
sbb
cmp
movsb
cmp
frstor
xor
jo
insb
sahf
sub
jb
cwtl
imull
sbb
repz
jne
rcrb
cltd
mov
cmp
leave
xor
enter
hlt
mov
jecxz
mov
dec
ss
add
add
jo
jbe
jge
divb
jae
out
and
inc
test
jns
push
sub
mov
ljmp
movsl
fwait
mov
sub
sub
jb
sub
test
outsb
movsb
cmp
and
int3
je
sbb
leave
inc
lds
sbb
mov
cmpsb
adc
js
dec
mov
inc
and
stc
jne
mov
test
sub
pop
sbb
popf
cmp
out
mov
dec
push
or
xchg
dec
rorb
and
js
fsubrs
fs
in
loop
or
add
aas
jbe
mov
jmp
adc
int
add
cmpsb
icebp
xor
inc
mov
jge
andl
dec
mov
int3
jecxz
fisttps
in
imul
pop
repz
lock
bound
sub
bound
inc
dec
mov
pop
cld
pushf
mov
ret
add
pop
mov
and
imul
jmp
push
mov
lock
mov
cmp
xlat
aam
adc
cmp
dec
jbe
and
xchg
out
jle
loopne
loope
mov
jns
imul
movsl
pop
mov
push
push
mov
jge
dec
mov
pop
pushf
xchg
lret
test
mov
mov
push
lds
dec
daa
cld
adc
push
sbbl
dec
scas
inc
ret
test
lret
fnstsw
stc
or
push
pop
sub
orb
push
dec
rorl
pop
sbb
push
nop
sub
stos
scas
push
hlt
mov
test
scas
call
inc
data16
push
push
push
negb
out
cmp
push
pop
fs
aas
xlat
pop
dec
ret
mov
sub
mov
fmuls
mov
push
pusha
add
pop
out
mov
cmpsb
ficompl
mov
stc
cmc
dec
loope
pushl
mov
jmp
stos
arpl
inc
push
fldenv
mov
pushf
sbb
sti
xchg
pushf
insb
jge
les
sub
or
loop
insl
cs
das
es
stos
push
xchg
mov
hlt
movsb
mov
inc
jbe
cli
sbb
fs
shlb
sub
scas
pop
fsub
inc
add
jnp
lock
adc
mov
aaa
pusha
mov
inc
cs
adc
lock
negb
dec
xchg
nop
fldpi
shr
xchg
out
cli
test
dec
mov
into
stos
mov
and
pop
leave
incb
pop
cmpb
in
repz
aam
stos
mov
mov
insl
paddw
push
mov
mov
sbb
test
insl
mov
xchg
sub
dec
mov
add
mov
jno
divl
outsb
cmp
sbb
cmpl
lret
sbb
xor
push
scas
mov
cwtl
pusha
sarl
lahf
jmp
test
scas
cmp
pop
fcomps
xchg
divb
or
xor
dec
pushf
mov
xchg
addr16
shrl
movsb
stc
movb
pop
sbb
add
mov
adc
sbb
and
nop
int3
xchg
dec
mov
out
ljmp
movsb
and
cs
push
popf
rcrb
mov
test
mov
orb
lcall
lret
push
into
ljmp
ficomps
sub
cmc
in
xor
adc
mov
icebp
sbb
pop
shll
aad
lcall
pop
insb
fmull
push
pop
sbb
stos
pushf
mov
push
cmp
decl
mov
outsb
arpl
lcall
pop
test
jb
push
lcall
ja
mov
mov
xchg
fcmovnu
jnp
inc
ss
roll
sbb
scas
arpl
inc
pusha
mov
ds
mov
xchg
dec
mov
rolb
shlb
sbb
shlb
ret
pop
or
pop
push
data16
hlt
lret
sub
sbb
push
ret
cltd
or
jb
mov
aam
mov
test
in
lcall
dec
scas
pop
sbb
adc
dec
outsb
leave
add
jmp
adc
mov
scas
cld
ret
pop
jne
test
adc
and
dec
sbb
frstor
movsb
jl
imull
and
fsubrp
jmp
mov
xor
addr16
or
test
outsb
xchg
jno
popf
notb
out
imul
lods
loop
mov
push
fwait
jg
cmp
dec
in
cld
mov
stos
sub
cwtl
push
cmp
dec
mov
inc
push
cli
movsb
mov
cmc
xor
dec
sub
or
cmc
xorl
dec
rcll
mov
movsl
mov
arpl
lahf
imul
ror
dec
gs
cmp
jno
cmpsl
jmp
inc
std
negb
or
jle
stc
adc
imul
mov
cmc
popa
adc
adc
aaa
js
push
sti
das
fcmovnbe
cmp
loop
ljmp
das
addr16
jnp,pn
lods
cmc
loop
sbb
insl
add
cwtl
jle
adc
inc
push
inc
shlb
cmpsb
inc
push
add
and
repnz
sti
or
roll
jne
push
pop
adc
daa
jl
jecxz
addb
push
cltd
adc
dec
inc
fcmovu
xchg
mov
mov
jge
push
jnp
ja
inc
sbb
sub
add
mov
sub
inc
jns
sbb
push
addr16
call
mov
scas
mov
push
mov
or
clc
adc
xchg
cmc
jo
fnstcw
ja,pn
pop
inc
mov
aam
cli
cmp
xorl
lods
mov
dec
stos
lds
test
frstor
cmp
add
dec
adc
notb
test
xor
bound
loope
or
pmulhw
pop
mov
mov
mov
lret
xchg
jnp
fsubrl
mov
mov
loop
dec
mov
mov
sub
pop
adc
xor
adc
inc
out
or
sub
sub
jae
pop
sbb
adc
jmp
add
pusha
adc
bound
cmpsb
sub
repnz
xchg
aad
es
mov
jl
test
in
mov
jb
and
lock
push
clc
or
cmp
mov
inc
jae
add
jecxz
repnz
fcmovb
cs
push
dec
setg
orl
pop
jl
or
into
in
insb
dec
mov
fs
add
sub
jge
loope
sbb
mov
inc
dec
hlt
jnp
push
pop
cmc
inc
xor
icebp
jns
loope
push
dec
xchg
or
cmpsl
loop
pop
in
inc
jl
inc
clc
int3
mov
pop
sbb
fsub
insl
imul
in
dec
sbb
js
mov
in
je
cmc
jmp
sub
les
push
ljmp
push
popa
imull
fisttpl
sub
sti
xchg
out
xor
sub
lret
js
xchg
data16
or
push
xchg
cld
loopne
mov
push
mov
pop
insl
out
fildll
and
mov
xchg
mov
scas
push
fnstenv
orw
push
insb
into
fldl
xor
jg
mov
or
mov
inc
pop
push
fildll
pop
hlt
adc
cmpsb
xor
mov
sbb
test
jb
sub
test
imul
mov
sub
jno
out
adc
xchg
xchg
or
cmp
add
stos
ljmp
jge
jle
fistpll
inc
mov
xchg
xor
inc
adc
out
pusha
sbb
imul
or
jmp
insl
jbe
out
in
ror
cmpsl
sub
out
testb
fwait
dec
or
cwtl
lock
in
inc
aad
xchg
add
rorb
mov
push
cmp
push
dec
cltd
or
pop
ljmp
pop
mov
cld
sbb
push
mov
out
pop
cmp
adc
jmp
adc
or
push
mov
xor
test
mov
sbb
mov
and
mov
mov
movups
cwtl
pop
adc
mov
inc
shl
es
jg
into
subb
mov
push
adcb
arpl
bound
lcall
jle
mov
inc
ficompl
cwtl
clc
cmpsl
inc
jmp
pop
or
shrl
nop
push
cmc
xchg
xor
adc
dec
mov
pusha
popa
dec
mov
cmp
data16
imul
sbb
dec
mov
repnz
shlb
pushf
je
mov
xor
inc
divb
xor
mov
clc
insb
mov
add
or
pop
jl
jp
add
fldcw
dec
xor
hlt
mov
daa
mov
inc
jbe
dec
in
out
push
inc
cli
xor
push
add
call
inc
cmp
lds
in
mov
nop
adc
popa
out
mov
cld
mov
mov
jecxz
shlb
outsb
pop
rolb
stos
out
or
sbb
inc
fcomps
js
or
mov
jae
jge
inc
out
bound
jmp
inc
daa
jne
push
sub
mov
dec
mov
sbb
xor
adc
push
dec
aad
mov
pop
mov
out
add
das
and
out
push
lcall
push
out
popf
mov
sub
add
pop
dec
jmp
xchg
jns
je
add
push
lcall
mov
or
mov
popf
fisubl
and
nop
jle
test
dec
fiaddl
les
test
mov
sti
lea
hlt
adc
imulb
xor
pop
aam
shl
lahf
enter
movsb
sbb
mov
imul
stos
aaa
fs
ds
pushf
xor
adc
xchg
clc
cld
sbb
inc
jne
je
or
pop
fdivrl
or
jp
movsb
jge
add
bound
push
jo
mov
sub
push
adc
popf
lds
push
ljmp
push
and
push
inc
sti
shlb
sub
add
xor
push
xchg
cmpl
imul
lds
jmp
leave
insl
ljmp
stc
mov
in
push
clc
sti
movsb
xchg
add
and
cmp
pop
push
pop
and
dec
adc
cmp
lods
mull
lock
push
mov
lods
add
pop
pop
jns
ds
sbb
lods
mov
xor
aaa
sub
outsl
fnsave
mov
outsl
cs
xlat
pushf
popa
movsb
sbbb
xchg
mov
pop
les
sti
mov
mov
ret
lods
jecxz
inc
sbb
mov
inc
dec
cmp
or
iret
add
pop
push
inc
jbe
dec
leave
lock
push
call
and
xor
sbb
push
and
xor
mov
inc
sub
notb
outsl
pushf
or
add
push
lgdtl
mov
or
loopne
mov
cmc
inc
xor
lock
sub
pop
jbe
push
bnd
pop
hlt
into
repz
dec
outsl
lret
add
icebp
add
test
xor
sub
push
subl
mov
scas
in
dec
enter
lods
adc
xchg
add
fcompl
push
or
mov
xor
add
loope
cld
lcall
push
sub
xchg
lea
repz
pushf
xchg
popf
ficomps
fsubs
les
int
mov
mov
mov
inc
lret
pushf
xorl
lret
cmp
cld
add
hlt
adc
sbb
int3
outsb
sar
mov
ret
loope
shrb
sub
in
repnz
add
inc
or
test
pop
pop
inc
cmc
or
test
dec
or
clc
mov
fcom
clc
mov
xchg
cli
fbstp
pop
or
inc
inc
xorl
ss
xor
outsl
pop
mov
fistps
repz
daa
lds
xor
xor
xchg
aaa
loop
sbb
xchg
clc
cli
mov
leave
mov
es
pop
pushf
in
pop
sub
and
lret
lods
adc
lahf
push
sub
xchg
pop
cmp
mov
arpl
jp
sbb
cmp
jl
mov
inc
outsb
xchg
mov
lahf
pop
movsb
sub
mov
outsl
rcrl
stos
pushf
lcall
cmpsb
imul
cmc
lret
aaa
inc
in
cmpb
add
adc
dec
jl
cmc
and
cmp
fisubl
jg
add
in
pop
dec
xchg
popa
arpl
repz
jg
aam
lret
jmp
sub
fldt
mov
aaa
arpl
or
and
inc
xchg
fidivs
push
ror
cs
xor
add
mov
push
repz
mov
xor
hlt
mov
cmpsl
push
xchg
das
jae
xor
xchg
xchg
ror
call
mov
xchg
xchg
cld
aaa
lods
lret
and
mov
mov
adc
popa
pop
pop
scas
sub
in
daa
mov
lds
jp
adc
and
lods
mov
incb
aad
in
and
incl
sbb
shl
movl
idiv
ss
repnz
hlt
hlt
test
dec
inc
jae
jge
sbb
jge
incl
cld
cmp
repz
out
xor
movsl
mov
out
mov
add
or
cwtl
mov
dec
inc
dec
xchg
or
ljmp
mov
sub
sbb
and
mov
cltd
ret
ret
hlt
dec
add
pop
popa
lcall
dec
jne
addr16
fistpl
pop
mov
inc
and
shl
aam
hlt
xor
sbb
out
pop
jmp
imul
sbb
push
imul
in
sub
mov
fstpl
imul
sbb
in
sti
push
imul
and
mov
adc
cli
ljmp
and
mov
adc
sub
testb
cmp
lock
xchg
pop
mov
data16
sub
cli
fs
xchg
jle
sti
unpcklps
fdivrs
hlt
je
xor
inc
jae
inc
jns
mov
cltd
push
aam
dec
rolb
pop
dec
jo
or
icebp
xchg
popf
mov
mov
aam
sahf
shrb
imul
inc
jns
stos
lret
frstor
in
insl
scas
div
cmp
in
dec
jl
mov
repnz
daa
cmpsl
andl
jmp
or
dec
xchg
mov
mov
jne
stc
jmp
xchg
into
dec
push
mov
jb
decl
add
cld
movsl
xchg
and
out
jnp
mov
xor
lret
or
jno
adc
outsb
outsb
jp
sbb
sub
ljmp
iret
xchg
lods
mov
out
pop
loope
mov
xchg
xorl
ljmp
lret
fucomip
sub
mov
dec
rolw
gs
push
fildll
lock
pop
jae
xchg
mov
addr16
adc
imul
jge
pop
lods
dec
repnz
std
mov
das
rcl
cmp
lds
or
push
sbb
xor
xor
push
cltd
jae
cmp
stos
dec
xchg
pushf
sbb
pop
movsl
mov
dec
cmp
jmp
mov
clc
mov
imul
roll
xor
push
scas
rcll
loop
mov
es
push
and
roll
stos
loopne
mov
out
xchg
sub
jbe
or
or
test
push
in
and
xchg
fnstsw
and
xchg
into
gs
les
dec
out
ret
jmp
adc
bound
jg
arpl
mov
inc
popf
push
xchg
enter
loope
fst
xchg
imul
mov
in
aas
adcb
das
int3
inc
pusha
dec
add
xchg
iret
jns
stos
push
imul
xor
pusha
test
add
adc
and
int3
xchg
and
imul
add
aad
ljmp
or
push
in
int
rclb
jae
mov
iret
arpl
aam
jae
es
call
xor
or
in
shll
ficomps
sub
lods
push
jne
test
jp
test
pop
imul
sti
jl
inc
mov
add
popf
addl
mov
jnp
sbb
jo
jge
add
jmp
inc
jb
mov
cmp
pop
fsts
xchg
movsb
pop
orb
cmpsl
add
sub
cmpl
mov
out
dec
lea
mov
push
loopne
or
cmp
jnp
out
lea
mov
xor
mov
cmp
inc
or
push
pop
cld
add
roll
jmp
outsb
pop
addr16
sub
sarb
sub
or
jg
arpl
jecxz
mov
lahf
and
std
js
in
in
das
jge
cmp
aaa
ljmp
adc
xor
aas
lret
cmc
rorl
movsb
mov
push
jecxz
sti
stos
fwait
add
cmpsl
jmp
ss
ljmp
jp
daa
pop
fs
aas
std
iret
leave
push
or
xorb
sub
test
sahf
push
cli
gs
loopne
icebp
fs
ret
cs
rorb
adc
mov
int3
sub
adc
cmp
insb
adc
palignr
and
mov
out
aas
hlt
adc
rorl
mov
xor
in
lahf
adc
andl
popl
cmc
xchg
and
loop
inc
arpl
xchg
out
push
cmp
call
call
mov
inc
sbb
int3
dec
or
lods
jbe
push
sbb
fildl
cli
xchg
shll
add
jmp
faddl
xchg
outsl
nop
cmp
mov
push
mov
icebp
mov
sub
and
or
and
lods
divl
arpl
cs
jge
pop
outsb
subb
mov
stos
or
push
fcoms
sub
and
iret
xchg
mov
xlat
in
xchg
jo
orl
adc
add
cld
cli
jo
mov
sbb
js
call
lods
pushf
data16
int3
gs
js
sbb
add
xorb
mov
jmp
leave
in
negb
jae
adc
data16
imul
les
sti
out
sahf
fdiv
inc
fdivr
loope
cli
iret
jg
pop
add
les
sub
jge
mov
sub
imul
je
xchg
loop
push
mov
imul
in
jmp
arpl
mov
cmp
rdpkru
lahf
jle
or
sahf
fldcw
sub
mov
cmc
or
or
adc
outsl
mov
sub
mov
fiaddl
mov
cmpsl
or
xchg
xlat
and
pop
cs
lods
fwait
pop
test
fildl
sub
gs
inc
sbb
add
orb
mov
mov
shll
and
mov
mov
push
push
sbb
add
enter
hlt
fdivrl
icebp
sbb
stos
push
es
lock
in
repnz
rcr
mov
jmp
and
push
stc
outsl
sub
das
imul
jns
inc
or
adc
adc
and
push
notb
push
xor
imul
ja
ret
xor
cmp
loopne
ss
mov
bound
xor
jge
shrl
in
fsubl
push
mov
call
aam
adc
sub
adc
xchg
sub
add
data16
mov
in
outsl
pop
mov
insl
loopne
pop
xor
sub
rorb
ss
shrl
pop
sbb
inc
add
mov
aad
cs
roll
subl
pop
into
pushf
pop
rorl
xchg
ja
bound
xchg
fadds
or
test
cmpsl
sbb
aas
push
xor
into
xchg
adc
out
movsb
imul
mov
mov
movsb
icebp
aaa
inc
insl
les
sbb
push
sti
out
add
movsb
aaa
pop
xchg
jo
sub
and
jg
test
push
sub
or
mov
mov
mov
add
mov
fldl
xchg
loope
or
das
mov
xchg
jg
mov
dec
in
mov
jp
mov
hlt
popa
out
push
insb
xor
popa
sub
pop
out
sbb
jecxz
mov
cmp
jl
mov
mov
cmovno
cmp
or
add
adc
mov
jecxz
dec
dec
lret
aaa
mov
xchg
insb
in
aaa
cmpsb
iret
loope
jns
mov
push
cmp
adc
xchg
jns
add
movsl
and
push
jp
mov
mov
adc
aam
mov
cmp
popa
adc
fnstsw
mov
inc
rclb
arpl
pop
push
adc
aam
cltd
sbb
push
mov
leave
mov
in
orb
mov
repnz
movsb
stc
jnp
pop
ja
arpl
cmp
inc
jae
sbb
in
aaa
nop
repnz
xchg
sarb
adc
or
cwtl
push
mov
shl
in
call
mov
lods
jbe
pop
outsl
out
xor
rep
data16
push
imul
dec
inc
movsb
pushf
bound
pusha
push
add
lcall
std
aad
icebp
inc
add
xor
mov
and
or
dec
jge
sub
dec
jecxz
or
bnd
ljmp
mov
or
jmp
sbb
sub
arpl
sub
or
xchg
adc
push
jne
call
jb
stos
sbb
enter
and
cmp
mov
fcmovbe
clc
xchg
push
inc
cmp
cmp
mov
push
aaa
jle
inc
imul
test
cs
sub
dec
add
sbbl
movsb
mov
adcb
rcr
rsm
sub
clc
cmp
in
mov
jnp
out
orb
ret
xchg
and
loop
pop
or
fcmovu
sbb
xor
imul
mov
pop
ljmp
sbb
mov
stos
or
add
jmp
shlb
xchg
aaa
lret
movsb
loope
aad
int3
and
mov
sub
cwtl
mov
sbb
lahf
out
stos
stos
int3
imul
push
inc
mov
sub
ficompl
mov
pop
cmc
sbb
pop
xchg
fs
inc
xchg
daa
add
xchg
xor
or
inc
fsubrs
adc
xchg
xor
pop
lea
jno
ficomps
shlb
movsb
inc
stos
push
maskmovq
imull
cmp
data16
pop
cmpsb
sbb
cmc
pop
out
add
mov
fdiv
movsb
and
hlt
fisubl
mov
cwtl
xchg
or
jge
daa
loopne
mov
xchg
in
movsb
nop
mov
mov
ss
scas
cmp
inc
xchg
sub
iret
jbe
hlt
aas
adc
xchg
aaa
dec
div
std
mov
mov
insb
insb
fdivs
rolb
pushf
mov
iret
decl
js
test
adc
sub
insl
mov
inc
sahf
adc
push
test
or
lods
push
xchg
rcrb
sub
fsubl
fs
data16
bound
aaa
ds
je
ljmp
ret
mov
mov
cmc
mov
adc
stos
les
mov
add
and
test
js
fldt
pop
jmp
mov
adc
dec
lock
or
lret
imul
xchg
and
jl
mov
repz
in
or
aaa
aas
dec
or
scas
ja
aad
add
pop
pop
repnz
xor
fnstenv
xchg
outsl
jecxz
mov
dec
movsl
aam
adc
add
sbb
push
insl
das
pop
or
push
adc
js
subl
idivb
sub
data16
jge
add
icebp
fdivs
daa
push
and
das
mov
dec
mov
std
in
iret
jmp
daa
aam
xor
or
cmpsl
movsl
adc
popf
bound
test
out
icebp
popf
sub
and
jno
jmp
inc
int
jmp
jp
adc
addb
sbb
std
loope
inc
adc
push
imul
mov
lcall
in
pushf
pusha
and
jge
sbb
scas
sub
aaa
ss
iret
cmp
pop
test
sbb
mov
mov
sub
mov
dec
xorb
inc
fs
ror
dec
xchg
mov
cmp
cmpsb
roll
or
push
movsb
adc
adc
push
bound
test
ficompl
adc
cli
test
pop
fcmovnbe
cmp
scas
imul
int3
sub
xchg
lret
pusha
xchg
pop
inc
cmpsl
outsb
cmp
rol
hlt
pop
mov
out
inc
dec
sbb
test
pop
mov
jle
ljmp
aaa
add
sbb
mov
pushf
jne
push
pop
push
das
cmp
adc
ja
xor
nop
sbb
insl
pop
lods
lret
push
jmp
ret
inc
sarb
lret
movsl
dec
lahf
mov
lcall
adc
and
sarb
and
mov
pushf
dec
fidivl
and
and
stos
jg
lret
mov
sub
xor
bound
and
inc
lea
or
sub
fsubrp
pusha
add
and
rol
xchg
cs
shrl
test
fistl
sbb
das
jne
push
fistl
xor
xor
pop
fucomp
lret
cltd
push
out
dec
or
jmp
fldt
push
or
jae
jns
in
js
testl
iret
xor
dec
jmp
cmpsl
xchg
mov
call
pop
push
push
fistl
jb
inc
sub
rorl
xchg
cmc
rcll
aad
pop
dec
mov
jnp
add
dec
popf
mov
push
repnz
inc
mov
je
ja
in
loope
sti
icebp
pushf
imul
std
pop
dec
subl
push
pop
and
add
mov
or
loope
cwtl
inc
faddl
xchg
xor
lahf
jb
daa
and
inc
test
add
lods
jne
xlat
lahf
cmp
push
cmpsb
sub
test
lock
xchg
mov
dec
shrb
push
and
gs
fdivrl
addl
inc
fwait
push
addl
sbb
es
sub
lods
popf
mov
insb
jnp
xor
call
jno
xchg
cli
jmp
inc
and
shr
xorl
sub
push
ja
mov
rolb
cmp
sbb
mov
mov
cmp
mov
mul
and
xchg
pop
and
cmp
out
push
shlb
mov
mov
mov
mov
hlt
dec
aad
insl
test
fmulp
mov
mov
mov
sahf
adc
and
jo
push
das
pop
movsb
jl
rorl
clc
inc
vpsubusw
out
push
dec
ret
mov
call
adc
test
push
scas
sub
iret
fidivrl
add
dec
loop
xor
sbb
adc
pop
arpl
mov
add
jo
or
pusha
push
push
or
ja
cmpsl
adc
inc
out
pop
dec
jnp
insl
add
mov
sub
outsb
sub
mov
out
outsl
icebp
xchg
jnp
mov
xchg
in
adcl
dec
jae
add
dec
repz
ds
sub
or
sub
push
add
mov
pop
mov
pusha
ljmp
bound
aam
ljmp
dec
jmp
popf
pop
jno
mov
sub
pop
cmpsl
dec
adc
frstor
add
jle
dec
cmpsl
xor
lock
repz
out
inc
dec
ljmp
fnstcw
adc
mov
jae
push
adc
sbb
scas
jmp
out
sub
xchg
mov
inc
js
adc
pusha
movsb
pop
sbb
inc
dec
xchg
xor
cmp
inc
stos
mov
mov
movsb
mov
push
add
sbb
adcl
sub
xlat
lcall
mov
out
xchg
ss
enter
pop
into
mov
hlt
shl
pop
mov
adc
add
daa
rorb
daa
ja
insl
dec
into
in
rol
gs
add
jmp
mov
call
ret
aad
jns
pop
xchg
test
mov
push
addr16
ja
outsb
mov
xchg
arpl
xchg
sub
and
sub
lds
dec
das
and
imul
sarl
push
bound
push
sub
xor
push
mov
add
pop
xlat
mov
cmp
fistps
pop
xchg
vpmovmskb
adc
jecxz
outsb
adc
or
add
pop
mov
inc
mov
xor
sub
cwtl
in
inc
popf
or
push
lods
and
xchg
mov
mov
into
mov
jle
leave
rcll
imulb
rorl
cld
cltd
jmp
cmp
inc
cmc
cmp
lret
and
loope
mov
aas
ljmp
push
sub
bt
notb
insl
adc
or
dec
or
loope
mov
and
pop
je
scas
movsl
pop
sbb
pop
pusha
jp
aad
scas
sub
out
cld
aaa
icebp
lods
sub
mov
fisubs
adc
loope,pt
pop
fadds
mov
sbb
sub
popf
divps
jl
push
dec
cld
das
ja
and
shll
lock
or
adc
out
aad
and
inc
push
jae
adc
subl
push
jns
jne
sbbb
mov
js
sub
addr16
push
push
push
jno
je
push
icebp
icebp
add
ucomiss
inc
clc
jno
xchg
mul
dec
pop
aas
das
dec
dec
mov
mov
push
jg
pop
or
mov
mov
xchg
mov
add
loopne,pn
lock
sbb
xor
sub
negb
mov
jbe
sbb
lcall
push
cmp
inc
sbbb
pushf
add
popf
jne
lock
push
lods
xor
cmp
mov
iret
sahf
or
mov
cmp
mov
and
or
pushf
in
jge
sarb
xchg
cmp
push
popf
adc
pop
js
jbe
mov
push
cli
or
mov
lods
xchg
cmp
mov
pop
cmp
sbb
adc
test
rolb
sbb
mov
xlat
divl
sub
pop
call
adc
sub
add
lds
push
out
insb
test
fistps
or
data16
mov
and
jecxz
add
mov
out
inc
gs
out
scas
push
push
push
xchg
jnp
sahf
inc
mov
sub
std
push
adc
fwait
lods
sti
jge
sub
adc
xor
insb
faddp
out
inc
icebp
lahf
xchg
mov
push
dec
sub
fcoml
mov
lret
lock
sbb
push
mov
push
lret
fsub
jle
int
sub
inc
and
and
adc
sahf
mov
popa
dec
icebp
cli
pop
push
push
sub
xlat
xor
rcr
push
adc
xor
les
in
movsb
sbb
movsb
inc
push
sub
das
aam
loopne
cmpsl
lret
jle
cmpsl
or
and
xchg
push
mov
sub
hlt
in
pop
sbb
cmc
out
fdivr
mov
nop
hlt
jnp
aaa
mov
fwait
or
test
lahf
fsubs
fwait
popa
test
outsb
or
sub
out
repz
mov
cmp
mov
pop
jne
jmp
mov
mov
xor
stos
jae
adc
in
orl
pop
xchg
xchg
insl
cld
adc
xchg
stos
push
clc
jge
rolb
test
jmp
imul
cwtl
loope
es
shll
and
xlat
mov
int3
adc
gs
push
mov
mov
insl
add
movsb
inc
push
dec
mov
icebp
out
mov
in
xchg
out
push
jecxz
pop
adc
mulps
addr16
pop
push
jmp
push
hlt
popf
cmp
mov
subl
ds
dec
pop
fwait
xchg
mov
cltd
adcl
dec
js
add
mov
repnz
lods
sub
jno
adc
daa
ret
popf
mov
pop
or
loope
cmp
inc
fisubrs
dec
xchg
and
inc
cmp
rcll
idivb
add
xchg
incl
and
sub
adc
sub
out
stos
stos
mov
scas
push
mov
repz
ret
mov
mov
push
lahf
mov
stc
adc
imul
push
sub
cmpsl
in
jns
lret
and
sbb
insb
dec
lock
push
mov
das
bound
xor
jae
adc
dec
pop
ret
mov
mov
sub
adcl
fdivl
jnp
jae
fnstsw
in
outsl
mov
cli
and
stc
arpl
cmp
inc
fmuls
rorl
stos
negl
jmp
js
sub
fsubrs
mov
xchg
pop
cmpsb
in
cmp
jg
or
or
into
add
repz
xchg
inc
int3
clc
fstpt
and
ret
fs
notb
movl
sbb
in
lea
out
jp
sbb
gs
xor
push
movb
rol
cmpsb
push
dec
movsb
jns
fisttpl
mov
sub
test
mov
push
and
or
cli
adc
push
ja
or
cmp
adc
repz
cs
inc
mov
xor
loop
add
pop
fidivs
fs
inc
data16
mov
push
cmc
or
loope
sarb
mov
nop
add
fnstsw
arpl
scas
js
enter
addl
test
cmp
rcrl
stos
sti
mov
out
orl
adc
or
xor
shlb
adc
fidivl
std
out
outsb
add
inc
lods
movsl
cmc
lret
mov
jno
and
sub
mov
loopne
sub
in
dec
sbbb
sbb
enter
test
pop
test
stos
aas
out
xlat
xor
fstpt
sub
dec
add
sbb
dec
cmp
rclb
ds
loopne
mov
dec
loope
cmpsb
jl
dec
and
ds
out
jbe
xchg
test
xchg
sbbl
inc
cwtl
mov
decb
mov
orb
sub
in
pop
push
xchg
xor
sub
add
add
es
push
fs
and
and
mov
push
lods
outsb
mov
addb
test
xchg
fwait
mov
xchg
mov
jns
or
repz
dec
testb
xchg
xchg
outsb
cmpsl
jecxz
mov
mov
dec
out
mov
int3
cwtl
aad
jl
cwtl
sbb
stos
and
jae
test
stos
sti
loop
in
xchg
add
push
movsb
sub
fs
notl
xchg
add
lods
cmp
lsl
mov
pop
mov
dec
push
aaa
and
out
subl
stc
cmpsb
in
cmp
sub
pop
and
insb
aas
add
mov
out
notb
xchg
lock
stos
in
out
jae
sub
jle
sbb
adc
cltd
in
clc
into
ss
adc
push
mov
mov
adc
mov
sti
mov
xor
xchg
in
rorl
aaa
dec
and
mov
pop
ja
mov
test
lahf
scas
dec
in
push
cmpsl
loope
rcrl
push
pop
cs
sbb
lock
pop
fstps
mov
mov
pop
xlat
repnz
inc
std
xor
push
enter
rorl
cs
ljmp
lods
adc
dec
int
push
sbb
dec
out
add
push
mov
push
pop
out
cmp
cmp
push
loop
sarl
xorb
jb
loop,pt
inc
cmpsl
mov
push
or
out
lahf
int
les
ficoms
mov
lods
cmpsl
mov
cmp
or
cwtl
inc
cmp
push
pop
dec
adc
pusha
jp
adc
test
shr
pop
cli
dec
int
push
push
andb
mov
bound
in
pop
sbb
ret
aas
cwtl
std
xor
mov
ret
pop
and
std
cmc
call
jp
sub
dec
movsl
mov
sbb
add
sbb
jbe
outsl
pop
into
mov
dec
inc
mov
add
push
pop
cld
mov
push
testl
pusha
dec
aas
fistps
outsb
test
jmp
pop
stc
sti
push
lock
xor
in
fmuls
adcl
xchg
outsl
scas
ja
addr16
and
loopne
test
mov
jl
aad
out
pop
and
ds
insb
repnz
cmpsb
ja
icebp
add
out
mov
popa
xchg
notl
push
cmp
adc
cmp
enter
jns
mov
sbb
sub
xchg
mov
push
pop
hlt
or
or
jg
scas
push
adc
cmpsl
sub
out
jns
sub
sbb
int3
xchg
adc
mov
call
std
sahf
pop
mov
cmp
dec
stos
mov
sub
mov
fnstenv
xchg
mov
ss
adcb
fistpll
xchg
mov
out
sbb
dec
xor
mov
sub
sub
push
pop
outsl
outsl
sub
xor
xor
insl
cmp
fbld
mov
mov
inc
lock
inc
pop
mov
dec
xchg
add
fsubrs
sbb
mov
imul
mov
and
addr16
dec
mov
movsb
sbb
out
sbb
inc
xor
dec
mov
mov
roll
dec
xchg
test
xor
and
xchg
add
push
mov
jnp
inc
pop
imul
push
enter
leave
pop
xchg
xchg
fdivl
push
cmc
stc
jp
mov
sub
sub
and
aaa
incl
lret
mov
mov
bound
mov
push
mov
int3
cmc
mov
insb
xor
xor
push
imul
sbb
lcall
and
xchg
or
mov
mov
adcl
jg
push
popa
fcoms
inc
clc
jne
mov
test
in
cs
push
cmpsl
lods
sub
sbb
pop
fdivrp
sti
orb
cmp
pop
mov
mov
loopne
cmpb
fsubrs
xchg
out
addr16
sahf
mov
ss
ss
movsb
int
aam
in
icebp
push
or
lret
push
es
xrelease
cmp
add
shll
xor
aas
mov
xchg
pop
inc
fdivrs
lods
mov
mov
sbb
jecxz
jle
lods
subb
mov
pop
std
xchg
aas
popa
xor
mov
pop
stc
adc
jp
shl
jbe
adc
sbb
jmp
popa
mov
loop
add
dec
stos
movsb
mov
mov
pop
jb
cmp
xor
cmpl
cmpsb
mov
mov
loopne
xchg
mov
lahf
negl
enter
fstp
inc
ljmp
lahf
fsts
jecxz
adc
dec
xor
dec
ret
adc
push
mov
xor
mov
pop
pop
xor
test
fdivs
int
push
adc
pop
shll
adc
es
aad
lahf
dec
xchg
xchg
adcl
pop
jb
mov
jge
popf
idivb
das
pushf
stc
inc
mov
or
lds
movsb
and
xchg
out
adc
addl
jno,pt
and
das
pop
xchg
xor
fldl
push
popa
daa
mov
nop
cmc
xor
push
lods
dec
mov
lret
outsl
push
fcmovu
into
xor
lea
push
mov
and
into
or
out
data16
lret
adc
sub
cli
xchg
jle
mov
and
inc
incl
scas
out
xchg
movsb
cmp
ljmp
rorb
insb
push
sub
sbb
icebp
inc
or
jo
leave
mov
sbb
xor
inc
dec
cmc
xchg
xchg
in
and
lea
fcmovne
clc
sbb
lcall
jg
inc
scas
pop
push
nop
and
icebp
adc
stos
dec
rcrl
and
ss
pushf
fwait
add
add
mov
ret
push
out
mov
sbb
add
sarl
scas
in
imul
inc
push
add
xchg
or
mov
lea
mov
xor
mov
pop
fistpl
sbb
movsb
jbe
cmp
push
into
call
sbb
push
cmc
out
cwtl
fistl
pop
xchg
test
push
adc
iret
pop
sub
outsl
lret
notb
adc
repz
push
std
cmc
cmpsb
mov
pop
and
push
push
pop
fs
xchg
pusha
sbb
notl
jae
dec
lock
repz
adc
data16
scas
rolb
jge
aam
sbb
dec
adc
je
stos
out
jl
mov
jae
clc
sahf
cmp
xchg
pop
xchg
cmp
push
int3
sbb
pop
inc
mov
pop
add
repz
sub
call
xor
mov
jmp
cmp
out
out
sbbl
rcll
insl
fimull
sub
mov
loope
mov
dec
xor
xor
outsl
xor
lods
test
std
push
lret
pop
xchg
in
xchg
adc
addb
push
cs
sahf
jle
sub
mov
out
xchg
add
negl
sbb
cmp
aam
xor
inc
js
sbb
popa
scas
int
push
addr16
or
ret
and
cmpl
pop
sub
push
mov
pop
push
or
jb
cmp
jne
daa
popa
xor
mov
fs
jecxz
jl
and
lret
dec
daa
xchg
sbb
sahf
pop
fcoml
repnz
mov
popf
inc
lahf
sbb
cmp
fldpi
mov
in
push
imul
mov
and
negl
nop
or
sub
in
xor
loopne
arpl
pushf
xchg
xchg
lret
sbb
add
inc
sub
add
xor
cmp
cld
jae
sub
icebp
cmp
ljmp
ret
xchg
lret
cs
sbb
push
xlat
repnz
inc
pusha
mov
xor
enter
ja
pop
out
sahf
jae
sbb
rclb
popa
imul
mov
or
and
jg
xchg
jb
sahf
ret
enter
add
stc
mov
loop
cmp
or
lea
sbb
dec
mov
fwait
adc
into
pop
jecxz
out
and
or
xchg
shll
inc
push
push
pop
icebp
cmc
mov
push
cmpsb
loopne
sti
psubsw
out
sbb
adc
push
xor
pop
sbb
test
jo
mov
ss
out
ja
add
pop
jne
imul
dec
jle
lcall
xor
xchg
leave
push
insb
rclb
pusha
cmp
sbb
push
sti
fsts
dec
push
pop
std
movsb
lods
dec
out
inc
call
push
fimull
add
pop
rorb
lahf
cmp
mov
pop
and
pop
mov
dec
add
ja
fs
xor
xchg
push
sub
in
aad
outsl
jnp
pop
xchg
mov
mov
cmpb
leave
outsb
adc
cmp
sbb
movups
je
xor
rolb
push
arpl
sbb
icebp
fstl
cmp
stos
lahf
rcl
stos
lods
xchg
xor
sub
mov
decb
je
jl
jle
insb
mov
adc
fs
lods
popa
arpl
lods
mov
pop
or
pop
mov
mov
test
and
or
add
dec
insb
adc
pop
in
or
fstps
in
push
mov
int3
cwtl
jo
sub
jge
aam
aam
leave
dec
sbb
mov
or
mov
xchg
jb
pop
push
sub
push
cld
in
es
out
pop
mov
pop
xor
and
int3
lods
insl
movsl
push
lahf
jmp
loope
mov
out
mov
in
xchg
sahf
xchg
out
xchg
dec
jns
ljmp
mov
test
out
pop
add
sti
test
mov
mov
mov
aaa
xor
xor
jp
mov
aam
popa
outsl
sbb
xchg
test
testb
inc
xchg
int3
shrl
test
xor
add
xchg
sbb
loope
jbe
mov
xchg
or
cmpsl
pop
xor
xor
dec
and
outsl
and
out
stos
add
xchg
xchg
cmpsb
jbe
movsb
or
mov
push
mov
mov
pop
les
push
add
sub
and
mov
ds
jo
ss
nop
mov
fs
test
out
mov
andl
adc
in
adc
outsl
cmp
cmpl
sbb
mov
inc
aam
jo
mov
stc
jle
stc
ret
sbb
or
sarb
dec
jmp
push
addl
jno
or
cmpsb
es
dec
fs
shr
sbb
loope
es
inc
xor
xchg
pop
and
sub
sub
push
dec
out
dec
aas
and
movsb
mov
je
cmc
push
adc
and
dec
xor
enter
cmpsb
pusha
enter
sub
test
pop
push
fbld
outsl
aam
push
add
repnz
leave
shrb
xor
inc
jecxz
adc
out
test
push
mov
dec
popf
mov
addr16
xchg
notl
in
mov
hlt
cs
or
sub
loopne
je
in
mov
addb
arpl
cs
sti
enter
out
fidivrl
jnp
mov
jp
mov
scas
jg
gs
jo
mov
rolb
inc
add
xor
aas
sub
out
push
dec
int
aam
and
and
rcr
inc
xchg
jnp
jnp
jns
jno
outsb
inc
cmp
lret
jecxz
clc
and
cmp
outsl
mov
fbld
xchg
sbb
inc
cmpsl
push
mov
jle
mov
add
lcall
push
das
test
and
outsb
push
sbb
ficoml
das
and
and
adc
xor
pushf
fdivs
mov
in
mov
xchg
inc
add
dec
inc
jb
mov
fmull
iret
aas
dec
or
fninit
into
jecxz
cli
addr16
inc
jbe
mov
fs
dec
jae
cwtl
gs
push
cmpsl
push
jmp
xchg
imul
leave
mov
imul
lds
gs
mov
push
loopne
sub
mov
ljmp
cmpsl
cmpsl
or
scas
out
gs
push
lret
shlb
hlt
jge
repnz
inc
push
pop
pusha
aas
cmp
lret
scas
sbb
call
pop
sbb
jno
out
add
lcall
les
push
jmp
pop
mov
xchg
mov
sbb
ret
and
loop
xor
inc
inc
bnd
sbb
push
lods
lahf
jnp
jg
and
bound
push
mov
dec
test
mov
jg
jg
imul
imul
pop
adc
adc
mov
mov
adc
lahf
mov
mov
mov
adc
mov
dec
or
mov
xchg
xor
mov
stc
push
popa
cmp
enter
adc
shlb
jae
inc
or
lret
ja
packuswb
rcrb
adc
sub
adc
mov
lds
shll
mov
mov
loope
lds
sbb
mov
and
imulb
loopne
push
mov
lea
ret
sub
fiaddl
ja
in
adc
or
repz
popa
cmpsb
cs
pop
pop
jge
shlb
movsl
adc
sbb
push
imul
fldcw
ss
scas
inc
jl
sbb
inc
sub
or
movsl
cltd
movsl
aaa
push
pop
cmpsl
nop
push
inc
inc
pop
mov
jle
mov
lock
mov
cmpb
pop
jmp
xor
mov
cmp
mov
pop
pop
dec
xlat
sbb
rclb
mov
adc
cmp
mov
arpl
mov
daa
in
or
sbb
xor
repz
mov
inc
or
test
push
add
pop
insl
push
fcomi
int
and
out
lods
and
cmp
and
mov
dec
test
xchg
mov
mov
xchg
shll
inc
rorl
in
sbb
out
mov
adc
into
inc
push
ljmp
scas
ret
mov
shll
aas
icebp
xchg
ds
xor
inc
xor
rclb
xchg
add
decl
jmp
js
and
jl
dec
sub
ss
test
mov
inc
loope
orb
xchg
cmp
out
decb
push
into
pop
sub
sub
xor
or
jnp
addr16
rcl
lock
pop
push
cmp
lcall
popf
icebp
dec
in
push
jg
sbb
ficomps
imull
xchg
inc
loop
mov
ret
mov
addr16
or
call
orl
pop
jb
jnp
jmp
mov
xchg
sbb
imul
jnp
cmpsl
pop
fisubs
pop
mov
jge
movsl
cmovp
sub
out
call
enter
xor
scas
mov
pop
cmc
xchg
or
pop
nop
xchg
cmp
push
xchg
and
lret
sub
test
mov
pop
scas
es
dec
repz
jb
xlat
push
fstp
call
les
sub
xchg
pop
pop
cmp
in
cltd
mov
outsb
in
xchg
jb
fs
popa
dec
pop
into
ds
outsb
test
xchg
shrb
jbe
pop
inc
dec
adc
in
jb
xchg
xlat
imul
mov
or
int
sbb
test
cmp
mov
mov
xor
stc
lahf
mov
mov
cli
xchg
push
push
es
cld
outsb
rcrl
rolb
mov
nop
adc
std
jns
mov
out
adc
lock
xor
push
adc
inc
xchg
mov
add
pop
daa
rcrb
addl
shrl
mov
add
or
mov
mov
push
daa
out
push
sbb
jno
xor
ret
mov
sub
pop
aam
xor
dec
icebp
lods
test
mov
es
jnp
mov
loope
mov
rcrl
mov
out
aas
outsl
dec
les
xchg
icebp
pop
daa
rcrl
movl
lock
mov
not
jl
xor
fwait
adc
mov
cltd
push
xor
test
mov
mov
insl
lds
fs
add
cmp
mov
jb
shlb
jne
jae
lret
and
jmp
push
jbe
adc
popf
dec
loopne
sub
mov
in
iret
pop
in
rcll
dec
xor
call
mov
add
add
outsb
push
push
xor
aas
or
xchg
inc
nop
daa
insb
push
lock
in
xor
into
cltd
adc
mov
out
js
xor
pusha
data16
clc
jo
in
scas
inc
jae
daa
shll
outsb
out
test
int
testl
jge
sbb
ja
shrl
mov
push
inc
popa
loope
outsl
push
pop
aam
adc
push
mov
aas
mov
and
and
pop
or
xor
gs
or
and
arpl
push
lcall
adc
xor
mov
push
cld
lcall
icebp
dec
push
int3
test
jl
imul
cmp
sbb
leave
cs
mov
lahf
add
adc
jg
testl
test
push
cmp
imul
add
sbb
mov
mov
sub
inc
daa
push
cltd
cli
mov
popa
inc
pop
mov
sahf
or
mov
adc
jmp
sbb
mov
outsb
shr
ret
cmp
add
mov
addr16
in
push
test
ljmp
hlt
pop
cld
fldt
sbb
call
push
add
popf
cmp
pop
je
add
mov
call
enter
pop
ds
in
mov
inc
clc
aam
test
adc
loopne
xlat
pop
cltd
movsb
scas
mov
repnz
cwtl
jp
dec
cmc
mov
mov
fs
xor
jb
fwait
push
xchg
lahf
jnp
leave
aas
hlt
fbld
dec
aas
jnp
mov
add
stos
add
shll
adc
cli
cmpsb
jnp
and
adcl
mov
inc
jnp
add
and
sbb
andb
xchg
leave
cmp
inc
xchg
outsb
lods
adc
push
add
dec
loop
sahf
jecxz
add
ret
cli
pop
shll
push
mov
roll
mov
jp
stos
loopne
xchg
andl
mov
xchg
add
sbb
out
jne
test
ds
and
mov
repnz
cmc
jmp
xchg
jmp
adc
dec
je
stc
test
jae
inc
and
outsb
cmp
jmp
xchg
xchg
pop
stc
mov
aam
lods
not
sahf
loope
mov
daa
or
inc
mov
push
js
popa
addr16
push
sbbb
mov
sbb
sar
and
ret
sub
pop
imul
sbb
xor
jp
add
pop
fwait
push
pop
push
sbb
std
out
inc
push
mov
mov
sahf
inc
dec
xchg
enter
leave
pop
or
dec
sub
mov
pop
xchg
subb
cmp
int
xchg
mov
popa
out
pushf
insb
ret
fwait
out
movsl
mov
aaa
lcall
adc
idivl
jmp
mov
pop
adcb
fs
jnp
cmpsb
cmp
cli
adc
fsubr
sbb
repz
push
ret
and
out
add
incl
movsb
mov
daa
popa
bound
stos
out
fsubrl
in
push
pusha
stos
outsl
xlat
push
xchg
sbb
sbb
ja
sub
mov
and
cli
and
cmp
lods
xchg
lods
enter
or
mov
mov
xor
std
ret
out
mov
ficoms
xor
mov
fisubrs
mov
adc
aam
cmp
pop
fsubr
aad
or
shlb
and
jmp
inc
out
js
lcall
mov
rclb
cmp
xor
fimuls
and
sub
insl
fidivs
ss
fstps
fnsave
les
sbb
outsl
and
mov
insl
push
lock
sub
jge
xchg
test
jae
pop
js
test
fisubrl
nop
mov
pop
and
and
test
pop
out
adc
mov
push
mov
xchg
cmp
outsl
xchg
outsb
orb
adc
rol
fwait
pop
push
fmulp
push
inc
mov
sub
std
icebp
insb
pop
mov
test
pop
add
arpl
and
movsl
ret
fiadds
cmp
movsl
mov
setle
into
xchg
cmp
or
cmp
jmp
cmc
dec
ret
dec
adc
jo
sub
mov
stos
leave
add
and
mov
bound
mov
or
in
loopne
adc
lods
push
push
xor
jge
add
xchg
inc
adc
not
dec
add
mov
std
outsb
scas
dec
repnz
test
push
arpl
or
rclb
in
repnz
je
cli
mov
cwtl
inc
fnstcw
or
jnp
imul
cmpsl
icebp
test
xchg
outsb
arpl
shlb
cmpl
out
jl
movsl
fmulp
or
sarb
mov
je
sbb
aas
in
pop
sahf
lock
xor
push
ds
xchg
imul
sub
push
cmp
jne
push
push
sbb
add
xchg
fistpll
ja
test
inc
push
or
jb
dec
sbb
xor
rorb
incb
mov
insl
in
push
outsl
aaa
ss
cmp
rcl
or
mov
aaa
xor
and
enter
push
popa
sarb
cmp
push
insl
das
xor
mov
xor
mov
jg
pusha
sub
shrl
jl
ljmp
mov
pop
out
adc
and
xchg
mov
nop
cmpsl
rorb
push
mov
dec
addr16
ss
jg
adc
lea
and
cwtl
call
test
gs
or
call
mov
hlt
jmp
dec
xchg
jmp
les
hlt
cmpsb
add
mov
sbb
popa
jo
and
xor
das
inc
lret
jns
int3
inc
jb
jecxz
jmp
xchg
lock
lret
scas
pop
sub
dec
movb
lcall
xchg
xor
mov
ret
insl
loope
inc
dec
filds
adc
mov
mov
or
cmp
push
xor
fisubl
bound
adc
inc
lret
js
in
jecxz
jp
fwait
xchg
aaa
leave
in
mov
inc
aaa
mov
cmp
int
ret
stos
dec
sar
aam
into
stos
dec
fimuls
mov
ss
ret
lret
pushl
or
or
sahf
pop
pop
mov
jns
or
ret
xor
aad
outsb
dec
sahf
aam
sarb
mov
scas
dec
mov
fcmovbe
mov
in
pusha
jecxz
into
sbb
adc
and
or
add
cwtl
jbe
adc
pop
dec
aas
test
mov
je
jae
lret
movsb
pop
cmp
push
lret
xor
cmp
jns
rorb
outsb
mov
inc
cmp
pusha
pop
mov
push
xor
cmp
aam
inc
mov
adc
pop
aad
les
stc
sbb
pop
in
mov
dec
jl
pop
lock
test
jnp
orw
into
inc
outsl
xor
xchg
jecxz
cltd
aas
mov
sbb
icebp
push
and
lds
das
xchg
stos
dec
test
aaa
jl
inc
or
loope
sbb
ss
push
scas
sbb
pushf
notl
movsb
jnp
xchg
jb
xchg
xlat
xchg
mov
jp
lcall
xchg
and
sub
lea
cmp
cmp
aaa
imul
pop
lea
inc
inc
fisubs
mov
adc
jb
cmp
lcall
sbb
cwtl
cmp
add
cld
and
das
pop
sub
ret
mov
jns
lds
xor
jne
aad
or
push
stc
scas
cmp
mov
mov
xchg
xchg
js
mov
out
mov
mov
out
enter
arpl
xchg
or
push
inc
or
std
jns
jmp
sub
lock
sahf
shrl
scas
xchg
jb
cmp
push
loope
pop
pop
and
adc
xor
out
loopne
outsl
mov
data16
inc
mov
push
mov
stc
fadds
shlb
xchg
pushf
push
repnz
out
fistpll
push
mov
popf
cmp
out
jmp
test
pop
ds
inc
scas
jge
mov
dec
and
add
push
out
nop
mov
ja
in
daa
outsl
push
loopne
mov
out
cmp
jle
jne
mov
and
dec
in
add
pushl
jo
dec
push
add
hlt
inc
dec
fistps
xchg
out
aam
addr16
inc
out
aad
mov
xor
mov
cld
cmp
ja
jo
cld
jl
mov
push
ret
aad
fstpt
adcb
sub
push
fidivs
add
js
sub
adc
pop
mov
dec
adc
pusha
pop
lahf
inc
stc
mov
mov
mov
xlat
push
push
popf
mov
jno
or
fcmovnu
pop
ljmp
out
jne
mov
popa
cmp
jp
das
push
std
gs
mov
out
lahf
inc
and
pusha
pushf
dec
xor
lds
inc
push
dec
sub
add
in
xor
icebp
jns
add
mov
stos
js
cmp
mov
rorl
imul
ss
adc
decl
fistl
mov
jl
xchg
out
gs
jl
and
stos
sub
sub
mov
push
inc
mov
pop
xchg
hlt
in
add
lahf
mov
or
aad
aam
bound
jns
mov
adc
sahf
repz
ljmp
dec
mulb
scas
int
xor
lahf
jl
push
test
xacquire
mov
fnstcw
sub
sbb
jo
sbb
pushf
dec
push
cwtl
shr
cmpsl
outsl
mov
sbb
daa
dec
aam
sbb
pop
test
in
addr16
test
imul
popa
mov
pop
pop
jae
cmp
jo,pt
fdivs
rcll
into
mov
xor
sub
fucomp
fcoms
push
mov
or
mov
std
clc
repz
fs
jb
mov
add
sahf
inc
cmp
in
xor
lret
mov
or
fcompl
mov
fwait
sbb
add
jnp
pop
mov
xchg
push
ljmp
mov
cmpsl
cmpb
adc
es
sbb
scas
pop
fld
decb
push
jbe
and
mov
or
je
aas
cltd
mov
imul
adc
imul
sarl
jg
enter
cmpsl
scas
mov
dec
pop
mov
mov
xchg
xchg
xor
mov
shl
add
mov
js
shl
sbb
xchg
inc
into
mov
pop
aad
or
xchg
mov
fsub
lock
xchg
mov
xor
add
push
xor
out
xchg
xor
dec
dec
in
and
imul
jg
jmp
cmpxchg
out
xor
or
andb
ljmp
inc
or
jb
xchg
pop
jmp
adc
and
and
fdivs
sub
sti
or
cmp
dec
lret
xlat
xchg
sar
test
jnp
jmp
pop
add
sbb
xchg
call
and
in
cs
jle
jne
jl
sub
inc
fsubs
rcr
or
mov
mov
xchg
jecxz
std
nop
xchg
in
pop
mov
jge
mov
dec
imul
xchg
jl
dec
aad
mov
movsl
jo
xchg
jmp
inc
cmp
pop
imul
dec
ss
je
jno
inc
cld
dec
add
nop/reserved
sub
stos
call
scas
adc
inc
mov
mov
out
sub
push
mov
xor
pop
pop
ret
shlb
jo
cmpsb
dec
or
jg
pop
or
adc
insl
sbb
or
subl
test
ljmp
add
enter
scas
shll
int3
lods
pop
and
add
push
xchg
xchg
mov
jo
sar
scas
jmp
cmp
add
bound
sub
and
outsb
mov
pop
out
in
or
sbb
cmpsb
mov
lock
lock
or
jl
or
and
mov
insl
xchg
dec
mov
xor
mov
ss
sbb
mov
icebp
arpl
mov
mov
xor
hlt
and
xor
and
test
imul
pop
mov
cwtl
xorl
mov
xchg
mov
test
mov
stos
les
inc
jbe
mov
shlb
mov
in
sub
popa
mov
inc
dec
jl
pushf
sbb
push
push
addr16
sbb
inc
addr16
loopne
fidivs
outsb
fisubrl
in
jecxz
mov
cmp
xor
adc
pusha
ds
mov
outsb
fprem1
mov
fdivs
stos
push
in
or
flds
pop
push
adc
xor
cmpsl
mov
pushf
pop
cs
cld
push
jle
xlat
or
sbb
in
push
arpl
in
xchg
cmpsb
popf
jge
sbb
xchg
popl
inc
ljmp
cmp
shrl
push
lods
adc
call
testl
lock
inc
cmpsb
cs
push
fs
outsl
xlat
mov
push
mov
cmpsl
or
je
imul
pop
sub
inc
add
in
and
mov
loopne
mov
mov
ret
mov
loope
xor
sub
or
lret
mov
jb
push
loope
cmpsl
fmul
std
imul
or
hlt
inc
int
xabort
repnz
jno
je
lods
pop
xchg
sbb
loopne
stos
or
push
and
xchg
xchg
cs
pop
mov
out
push
aam
mov
and
mov
push
lahf
cld
lcall
xor
mov
jnp
mov
fldt
jg
lret
ja
mov
stos
xor
into
mov
lcall
lds
imul
loopne
lahf
sbb
xor
or
jmp
or
mov
in
daa
btc
stos
int3
cld
and
stos
xchg
lcall
jl
popa
lods
out
cmp
cli
mov
adc
mov
in
push
push
mov
xlat
sahf
dec
notb
out
xchg
fs
push
stc
cmpsl
test
mov
js
enter
shll
sub
lods
test
scas
aaa
cmp
inc
fs
and
out
iret
scas
fdivl
dec
iret
push
sti
push
sub
push
cmp
popf
push
arpl
and
cmp
subb
mov
test
in
or
repnz
fstp
mov
out
cmp
mov
xchg
mov
mov
inc
xor
shrb
inc
ds
dec
push
imul
std
mov
adc
xchg
sbb
inc
mov
movsl
pop
inc
add
xchg
push
rcrb
xor
mov
insl
sbb
cmp
movsb
js
lods
out
iret
bound
xchg
sti
sti
cwtl
cmp
ljmp
push
dec
repnz
inc
test
jl
mov
or
out
mov
jnp
fbstp
sti
jbe
pop
mov
dec
inc
lret
rcrl
fldt
sub
out
jge
out
push
shl
shl
xchg
pop
cmp
idivl
subb
pushl
outsl
enter
test
pop
ror
cmc
mov
insl
out
iret
adc
pop
leave
hlt
mov
mov
jmp
addl
cli
pop
mov
adc
mov
call
nop
idiv
in
cmp
jae
add
testl
insb
into
inc
mov
lea
mov
mov
dec
or
scas
cltd
pop
push
das
pop
xor
sub
in
xor
insb
jnp
arpl
int3
rep
lds
mov
add
jp
jmp
adc
test
jmp
sbb
pop
out
xor
into
and
cld
xor
shlb
les
mov
mov
and
int3
or
jecxz
adc
test
lret
push
dec
ja
out
dec
pop
push
imul
mov
pop
mov
je
adc
dec
dec
stos
repnz
jne
cltd
add
jnp
in
testl
sub
nop
es
cmp
movsl
les
sbb
jmp
xor
inc
fs
cltd
jo
inc
cld
add
or
testl
push
mov
shll
movsb
loope
push
dec
pop
xchg
or
insl
jge
insl
shlb
adc
jae
adc
sub
xchg
cs
pusha
mov
mov
rcr
ret
pop
sub
stos
pushf
mov
rcll
cmp
pop
inc
pushf
hlt
cmp
jp
repz
icebp
addb
push
sbb
inc
xor
ficoms
lods
rorb
dec
aas
mov
rorb
repz
popf
xchg
mov
dec
dec
push
adc
dec
dec
sbb
push
sbb
cmpl
repnz
popa
aam
loop
in
fucomip
ret
shll
fidivrs
movsb
mov
push
pusha
or
inc
repz
jmp
jg
mov
scas
xchg
idivl
or
mov
jl
divl
repnz
and
enter
cli
add
inc
jg
push
push
iret
bound
adc
call
pushl
mov
xchg
call
in
pop
jle
mov
push
adc
jge
and
sub
outsl
jle
xchg
fildll
xchg
hlt
movsl
sbb
inc
mov
push
inc
lahf
and
scas
out
rorb
sahf
push
leave
mov
mov
inc
mov
mov
cmp
xchg
fs
cwtl
and
ficoms
test
push
gs
sbbl
addr16
dec
sbb
arpl
js
std
mov
enter
fwait
pushf
sub
xor
xorl
mov
cltd
je
push
xchg
pusha
es
iret
mov
addr16
mov
push
bnd
divl
adc
les
rcrb
push
ficoms
cmpsb
arpl
in
mov
jo
test
inc
lcall
xor
xor
movsl
jmp
pop
aad
and
adc
ljmp
jne
lret
loopne
mov
lahf
push
rol
sbb
mov
lcall
repnz
jle
cmp
stos
pop
cmp
out
fwait
call
pop
or
jmp
pop
and
push
add
test
xchg
cmp
mov
cmp
mov
jbe
sub
into
inc
and
pop
repnz
add
int3
mov
cmpsb
cmpsb
inc
mov
test
push
push
ret
gs
xor
fcompl
sahf
ret
jnp
pop
stos
outsl
jmp
mov
mov
ss
in
inc
data16
push
dec
push
cmpsl
out
js
or
mov
pop
in
in
push
pop
push
fsubs
cmpsl
mov
imul
rclb
sub
test
jns
or
push
addr16
mov
push
mov
scas
les
mov
cmp
inc
inc
mov
xchg
in
jae,pt
xchg
arpl
and
jp
or
dec
call
cwtl
rorb
xchg
or
jmp
jge
sub
jl
cmc
push
and
fsubs
cs
dec
jo
sbb
adc
mov
push
xor
out
inc
shrb
pop
jne
ret
push
push
xchg
cli
fwait
sub
test
das
and
adc
mov
iret
jne
cmp
jns
jae
test
xor
mov
test
into
bound
mov
fwait
jmp
popf
shll
cmp
dec
test
cmp
insb
scas
adc
enter
adc
adc
out
movsb
jne
and
dec
jge
push
cltd
mov
dec
xor
xchg
cld
xor
cmp
mov
add
or
jle
and
mov
std
popa
inc
cmpsb
ret
roll
cmp
pop
dec
lcall
push
clc
xor
and
loopne
or
add
lret
aam
jl
mov
mov
push
orb
pop
popl
dec
sahf
in
stos
sbb
xchg
mov
mov
shl
mov
sbb
in
cmpl
aam
pop
fwait
dec
outsl
xor
and
dec
xchg
lods
dec
popa
je
add
stos
cwtl
jnp
scas
jae
adc
dec
cmp
add
adc
inc
mov
cmp
sti
out
leave
cmpsl
add
jo
shlb
lret
ja
and
push
into
xchg
addr16
jb
push
enter
je
cmpsb
pop
mov
push
jae
ja
movsl
dec
cmc
dec
call
xorl
jae
out
push
ljmp
dec
xchg
mov
xchg
inc
movsb
loopne
pusha
rcl
or
or
cmp
loope
jbe
cld
and
loope
jne
dec
lea
ret
cmp
add
jno
orb
or
xor
neg
into
icebp
out
push
or
shrb
or
xchg
adcb
push
addr16
pop
fnstenv
rorb
mov
mov
and
mov
mov
fsubr
sbb
dec
adc
les
insl
pop
jne
adc
out
orb
and
jle
mov
pop
dec
aam
mov
rcrl
sub
pop
mov
cmpsb
cmp
jo
rorb
sarl
loope
loop
jl
ss
jl
arpl
in
pop
pop
out
add
rcrb
fldl
lahf
out
lea
adc
mov
cmp
mov
call
stos
mov
adc
ret
in
outsl
xor
sub
sub
push
int
xchg
xor
xchg
mov
mov
daa
push
push
in
jne
pop
sbb
shr
cli
idivb
cmp
shlb
sbb
jnp
mov
ss
push
movsb
shll
sub
add
shlb
clc
fstpt
jbe
cli
push
addr16
jge
lods
jns
xor
fwait
mov
outsl
mov
dec
jge
lea
jb
pop
sub
fisubrl
sti
ret
jno
or
pop
imulb
leave
inc
adc
or
jmp
sbb
adc
or
fmuls
xorb
sub
jnp
inc
in
jp
sub
pop
mov
test
and
movsb
xchg
pop
inc
popa
mov
mov
mov
cmp
imul
xor
and
sub
sbb
inc
cmp
push
cmpsl
fcoms
fnstenv
in
aas
mov
mov
iret
pop
call
lods
jle
into
xchg
cmp
sub
sbb
sub
imul
pop
jmp
hlt
test
cmp
daa
mov
call
add
mov
popa
pop
pop
mov
add
pop
jae
cmp
add
push
xor
aas
push
lea
inc
mov
mov
sbb
mov
and
adc
cmp
es
scas
lret
pop
or
daa
cs
rorl
out
ret
jo
aaa
aad
incl
sahf
push
fildl
dec
xchg
cmp
dec
dec
fisttpl
icebp
jmp
pop
add
insb
sarb
or
sub
mov
xchg
imul
add
jp
clc
pop
in
loop
dec
sbbb
mov
or
mov
mov
sbb
je
mov
lret
jmp
aad
rclb
push
pop
ret
lods
mov
jb
sub
dec
xlat
xor
fdiv
lret
pop
addb
dec
mov
xchg
pop
es
and
push
dec
jl
xor
pop
lret
jne
or
push
xchg
push
cmpsb
inc
cmp
cli
gs
sub
xor
jno
mov
ds
out
jle
es
dec
mull
xchg
mov
aam
pop
mov
pop
mov
imul
mov
test
xchg
sbb
lock
cmp
popf
inc
push
push
jns
sub
add
into
mov
mov
xchg
and
pop
adc
ja
outsb
push
add
mov
scas
add
xlat
movb
jmp
mov
jne
mov
test
je
pop
fsub
jl
lea
sbb
inc
sahf
jb
in
xchg
lods
push
aas
out
cli
pop
and
cmc
mov
jnp
nop
scas
pop
or
fldcw
push
mov
aam
xchg
cmp
mfence
repnz
inc
in
cmc
test
sub
fiaddl
mov
dec
adc
jnp
mov
lods
push
and
pusha
ljmp
into
cmpsb
mov
addr16
inc
jbe
pop
idiv
dec
cmp
or
jns
repnz
test
loope
pushf
cltd
iret
xchg
sbb
fwait
sbb
cmpsl
ret
jo
inc
aaa
pop
lods
call
add
sbb
lahf
sub
sub
pop
or
push
aas
int
push
mov
scas
out
push
cmp
outsb
xlat
xchg
sub
and
fiaddl
pcmpgtw
fs
jle
push
sbb
sub
repnz
adc
jbe
lods
rclb
out
call
iret
aaa
mov
cmpsb
rorb
jbe
xlat
pop
bt
stos
aad
cmpsb
cmp
stc
arpl
mov
pmulhuw
in
lock
iret
rcr
sbb
testl
push
mov
push
mov
jns
jg
xor
cmp
leave
inc
filds
xchg
ja
mov
scas
scas
addl
outsb
outsb
popa
in
lcall
or
xor
fs
sti
orl
rcll
or
scas
inc
stos
scas
push
add
stc
adc
mov
add
mov
notl
add
cmpl
leave
ret
je
push
sbb
pop
dec
inc
sub
and
pop
je
aad
call
add
xchg
add
movsbl
shr
in
mov
pop
subl
scas
jno
or
incb
cld
adc
dec
addr16
popa
shlb
jecxz
push
js
jg
mov
mov
bnd
push
add
lret
xchg
jmp
insb
bound
insl
and
dec
add
inc
sbb
or
test
push
mov
cmp
into
xor
test
cli
test
mov
sbb
push
mov
xor
clc
jo
in
addl
mov
and
sbb
jns
sti
or
push
xchg
ret
cwtl
add
mov
or
ja
movsb
sub
mov
sbb
push
sbb
sbb
add
pushf
jecxz
frstor
daa
or
repz
xor
mov
call
fsubrs
insl
call
sbb
xor
int
fdivrs
or
daa
out
xchg
xor
cmp
pusha
bound
js
cmp
sbb
into
ss
xor
lret
mov
inc
mov
cli
movsl
shrb
cld
add
push
jno
orl
loopne
js
mov
lods
int
and
inc
fstpl
rcrb
daa
mov
outsb
sbb
xchg
adc
dec
jbe
outsb
mov
mov
add
loopne
mov
mov
shrb
pop
cmpb
pop
and
sub
lea
jmp
out
push
add
mov
dec
mov
cli
hlt
into
or
lret
leave
mov
cmp
dec
sub
push
or
jns
int3
push
imulb
mov
aad
fldl
pop
imul
ficoml
icebp
cwtl
sub
pushf
cmp
or
mov
inc
jae
xchg
jge
jno
xor
jnp
int
movsb
xchg
dec
fnstsw
lahf
jge
sbb
cmp
rolb
std
into
out
mov
lret
clc
cmp
mov
aam
ret
seta
inc
imul
out
pop
cmp
outsl
push
sub
jnp
mov
adc
test
test
mov
xor
fwait
pop
fdivrp
sub
bound
imul
das
mov
aad
sub
jmp
push
lock
orl
lock
into
lcall
clc
pop
mov
xchg
xchg
bound
push
adc
mov
add
adc
fisttps
insb
rcr
dec
lahf
inc
std
xchg
lods
mov
cmpsl
call
fwait
adc
and
stos
xor
push
bound
push
adc
mov
sbb
push
push
xchg
lahf
jmp
dec
adc
sub
push
dec
jb
push
push
lea
sarl
ret
into
push
cmp
in
mov
ja
mov
adc
xchg
inc
icebp
xchg
xchg
xchg
dec
insl
adc
cmc
sahf
dec
cs
mov
and
cs
out
outsb
ljmp
data16
pop
mov
andl
push
lret
fsubl
adc
out
fidivl
clc
jmp
pop
mov
jge
jo
push
pop
in
jae
push
or
inc
lds
or
and
xchg
jo
cmpsb
pop
dec
iret
dec
inc
cmp
push
jmp
xchg
jnp
jae
jle
aam
dec
mov
xchg
adc
jle
add
loopne
call
fcomip
push
lcall
mov
or
lret
pushf
and
daa
lds
adc
lahf
adc
andl
lret
loope
rcrb
xchg
sbb
movsb
out
mov
dec
hlt
nop
bound
push
push
int
xchg
xchg
adc
outsb
dec
adc
iret
inc
js
imul
push
out
daa
mov
lods
iret
cmc
jo
adc
add
or
ljmp
rep
movsb
adc
push
test
mov
push
or
sbb
xchg
inc
mov
dec
mov
xchg
cmp
mov
xor
hlt
stos
das
sub
mov
lods
sub
jo
adc
repnz
out
jmp
push
scas
ljmp
xchg
jo
das
pop
movsb
xchg
push
mov
mov
sbb
stos
mov
js
dec
icebp
loop
xchg
mov
sub
push
lret
cltd
stos
pusha
enter
les
adc
lods
fsubr
and
sub
pop
lret
push
out
mov
pop
jle
rol
push
add
push
xor
mov
lret
addb
cmp
mov
sbb
shlb
push
inc
cmp
mov
call
dec
mov
mov
push
cmc
ficoms
js
or
lret
mov
fwait
and
jmp
jo
mov
aam
bound
push
nop
cmp
add
mov
xchg
imul
adc
xchg
sub
outsl
out
imul
ret
fwait
shlb
fidivrs
ss
push
int
xchg
jle
add
divb
inc
dec
dec
add
sub
or
outsl
push
std
das
sub
fwait
push
mov
mov
add
xchg
popa
cmp
clc
xor
fistl
xchg
cmpsl
inc
mov
rorb
add
jae
flds
sub
fcoms
loope
movd
js
out
aaa
push
icebp
jmp
sub
inc
cli
les
repnz
das
push
lcall
sub
repz
call
aam
icebp
call
dec
jle
jae
out
rolb
mov
gs
cmp
je
mov
arpl
imul
pop
lods
add
and
push
sahf
out
add
cmc
movsb
into
dec
jae
xor
cli
sub
xor
sbb
mov
hlt
cmp
mov
dec
add
cmp
and
ljmp
hlt
nop
je
or
pop
js
inc
std
pop
push
xor
dec
int
pop
addr16
mov
pop
adcl
push
inc
sahf
xor
cmp
pop
sub
std
sub
cmp
movsb
add
sub
xor
jae
loopne
dec
in
cmp
fdivrs
in
out
dec
fs
push
add
mov
testb
int
je
std
push
mov
out
adcb
jge
or
inc
inc
adc
dec
cmp
inc
and
inc
je
xchg
lcall
dec
push
adc
not
adc
sbb
mov
aam
int
mov
popf
push
je
jae
mov
lret
cwtl
jno
fstpt
push
and
sahf
lret
xchg
leave
and
es
sbb
aad
mov
sti
stos
xor
mov
test
loope
xor
sbb
mull
stos
xor
mov
mov
ret
scas
jmp
push
push
cmpsb
nop
push
insl
sub
lods
daa
and
mov
cli
adc
addr16
cltd
pop
scas
push
cmpsb
jno
jo
xchg
scas
mov
in
mov
repz
pop
xlat
inc
lock
push
sub
xchg
jne
jnp
aas
ja
inc
imul
pop
inc
inc
call
repnz
push
lods
sbb
xchg
jo
xor
outsb
cwtl
out
fsubs
scas
sbb
push
mov
lret
test
push
adc
and
icebp
ljmp
xchg
fcoml
pushl
dec
jp
push
pop
mov
xor
insb
in
sbb
lret
and
dec
insb
dec
jl
sub
in
repz
ss
adc
push
pop
jmp
scas
test
push
pusha
shl
test
lea
pop
and
repz
sub
loope
xchg
pushf
jnp
arpl
imul
mov
sbb
pop
mov
mov
cmp
int3
pop
les
iret
mov
mul
xchg
mov
add
sub
jge
js
enter
jmp
cld
mov
mov
gs
stc
dec
mov
les
add
roll
xchg
xor
rol
ss
inc
es
movsl
std
adc
xchg
sbb
in
cmp
call
in
add
dec
pop
pushf
in
cld
ret
popa
inc
outsb
sub
out
out
pop
scas
stos
adc
xchg
dec
push
scas
cmp
mov
enter
inc
mov
or
clc
test
sti
jo
jns
jae
stos
push
mov
pop
adc
ficoml
outsl
mov
adc
inc
out
imull
xor
xlat
push
or
cmpsb
ja
cmp
test
dec
lahf
out
xchg
loopne
mov
pushf
test
fs
scas
clc
pop
sbb
dec
push
add
fimuls
jg
jmp
outsl
cmpsl
iret
cmp
dec
xchg
pop
sbb
inc
pop
mov
mov
fdivs
int3
sbb
addr16
mov
and
jge
mov
jne
push
mov
out
inc
push
or
mov
push
js
sarb
rcr
cmp
inc
sub
out
and
insb
or
push
sbb
test
adc
stos
loopne
xchg
pop
repnz
sub
mov
xchg
mov
jg
ds
lods
dec
das
ja
and
lret
bound
and
cli
loopne
sti
lock
loopne
pop
mov
imul
sti
cmpsl
mov
sub
enter
icebp
push
lock
inc
mov
inc
out
or
pop
mov
sbb
xchg
lods
cmpsl
jns
shl
mov
fstps
pushf
mov
scas
xor
pop
jno
mov
pop
cmc
nop
testb
mov
shll
inc
iret
or
es
dec
mov
jbe
pop
mov
lods
fisubs
cwtl
or
sub
adc
gs
xchg
lret
in
mov
push
push
popa
fs
adc
leave
cmp
rcl
inc
in
cli
xor
xor
xor
jg
out
insb
out
pushf
adc
pop
xor
loop
inc
xor
pushf
mov
out
xchg
inc
insb
dec
pop
or
inc
push
sbb
add
inc
jbe
test
sbb
rorl
mov
pop
in
cltd
fwait
cld
jae
stc
inc
sbb
pop
sahf
adc
add
inc
xorb
std
ljmp
popf
sub
nop
mov
lods
arpl
jno
inc
rcll
cwtl
xchg
sbb
sub
rorb
loopne
stc
leave
int
jns
loopne
jge
add
push
cmp
push
jg
fdivs
xchg
mov
sub
inc
adc
add
je
fwait
call
xchg
decl
xor
and
mov
cmpsb
scas
jo
or
mov
call
mov
xor
sub
xor
and
pop
pop
bound
cltd
mov
xchg
mov
ds
mov
pop
int3
and
pusha
jne
shll
rolb
mov
push
sbb
gs
xor
les
push
imul
add
ja
rorl
lcall
inc
cmp
stos
fs
cltd
or
jae
loope
test
cltd
sub
dec
outsb
jnp
ljmp
xor
mov
in
mov
mov
xchg
mov
nop
test
mull
cmpsb
insl
fcmovne
or
int3
loopne
xchg
xchg
and
push
int3
or
mov
lret
xchg
push
adc
mov
mov
mov
lret
orl
fstpl
aaa
sti
sbb
dec
insb
xchg
mov
mov
outsl
icebp
cmp
mov
dec
mov
cli
push
jae
xor
loopne
push
adc
push
jo
inc
lds
jo
cmc
iret
mov
movsb
xchg
push
adc
dec
je
dec
jmp
jnp
sti
icebp
xor
mov
movsl
xchg
cmp
jbe
nop
cmp
scas
jg
xchg
adc
addb
shlb
rclb
outsb
add
sub
cmc
pusha
inc
hlt
add
xchg
lcall
mov
loope
inc
xor
dec
leave
shrl
xor
adc
jbe
mov
mov
dec
stc
and
and
xchg
in
or
xor
dec
cmpsl
movsb
inc
lods
cs
stos
xor
add
add
sub
outsb
fbld
mov
sahf
mov
out
aad
push
mov
pop
repz
or
icebp
mov
push
dec
inc
dec
test
and
mov
bound
cmp
mov
ss
push
inc
movsl
out
mov
pop
shl
pop
mov
das
adc
xchg
push
stc
orb
std
mov
push
enter
out
mov
fistpl
jns
addr16
movsl
insl
mov
outsl
xchg
orl
jle
cwtl
nop
aad
cmp
cmpsl
adc
fiadds
ds
mov
jbe
repz
lds
fildl
xchg
sub
push
jl
mov
add
in
cmc
sub
mov
cmpl
xor
jbe
adc
into
cmc
shlb
bsr
xchg
outsl
cmpsb
scas
xor
sarb
xchg
cld
scas
add
mov
in
insb
mov
xchg
aas
pop
mov
adc
aad
int3
sbb
mov
pop
fildll
jl
pop
gs
dec
or
loop
xlat
jmp
and
and
adc
loop
inc
repnz
pusha
push
fisubl
push
push
daa
call
incl
xor
and
jno
xor
or
lods
leave
cmpsl
jbe
pop
cmp
add
and
vmaxsd
dec
push
loop
fstps
sub
sub
jnp
sarl
mov
adc
divl
out
xchg
push
lret
loopne
insl
add
sbb
repnz
adc
mov
out
or
repz
mov
nop
xor
lret
mov
shl
inc
popf
ja
cltd
cmp
jb
cli
sbb
sbb
fnstsw
loopne
movzbl
ja
pop
es
mov
in
and
mov
jno
mov
cs
aas
rcl
outsb
gs
fcompl
loopne
test
add
shrl
xchg
mov
add
and
je
xchg
mov
ffreep
arpl
add
sub
mov
or
lods
mov
mov
insb
push
dec
sbb
mov
push
mov
jp
in
push
pcmpgtb
mov
fninit
rol
rorb
mov
xchg
in
mov
xor
notb
inc
jo
pop
add
js
pop
adc
sub
aas
xor
push
lods
mov
pop
sarl
cli
xlat
inc
or
push
movsb
or
imul
mov
mov
adc
pop
std
cmp
repnz
xchg
add
ljmp
jb
outsl
dec
sub
je
xor
hlt
loope,pt
mov
sub
cmp
fadds
dec
adc
or
xchg
push
aas
test
fcomps
adc
dec
fsub
mov
sbb
cwtl
insb
out
sub
xchg
stc
test
add
xor
in
enter
cmpsb
leave
push
sub
out
mov
dec
dec
pop
add
mov
sub
stos
mov
insl
sub
mov
mov
clc
bound
popf
xor
push
sub
test
and
addb
xchg
pusha
jo
dec
jg
or
aaa
aam
mov
mov
xor
cmpsb
mov
addb
or
add
call
lahf
popa
add
imul
cmp
sub
sub
or
clc
inc
scas
push
adc
pop
clc
mov
add
movsb
pop
sub
fstpt
pushf
sbb
mov
rorb
jl
inc
mov
jge
sub
ret
bound
pop
mov
xchg
fnsave
sub
add
rcl
test
pop
dec
addb
test
cwtl
icebp
and
rcrb
sbb
mov
sub
xchg
icebp
movsb
aaa
push
mov
sub
fadd
pop
jp
pop
mov
pushf
xlat
sar
cs
je
jb
jns
in
shlb
add
lret
xchg
fnstsw
das
sti
xor
add
jmp
popa
and
fnstcw
mov
push
or
lret
icebp
and
stc
mov
lods
mov
jne
lcall
out
outsl
bound
insb
ret
addr16
les
sub
cwtl
inc
aad
sbb
shlb
sbb
lock
lret
pop
nop
push
rclb
ficomps
sahf
sub
add
mov
pop
les
jp
addr16
xchg
jnp
inc
jae
adc
cmpsl
rcrl
cmp
and
xchg
je
pop
or
push
popf
adc
fcmovbe
xlat
push
insl
inc
push
insl
jecxz
sbb
fidivl
jae
jnp
in
in
bound
sarb
or
pop
sub
xor
or
ficoms
fdivl
aaa
or
mov
cmc
jbe
mov
mov
mov
cmpsb
mov
shlb
push
xor
and
sbb
pop
icebp
fcomps
lock
mov
mov
jge
or
inc
rcrb
dec
fs
data16
add
into
pusha
inc
add
mov
xor
xchg
mov
mov
loopne
cmp
jmp
das
popf
jmp
jnp
mov
dec
nop
mov
jno
ret
ret
xlat
ret
insb
dec
gs
adc
push
add
out
jl
stos
cmpsl
rcrb
loope
fcmovnb
pop
or
pop
jb
xor
pop
pop
fnstenv
addr16
adc
push
adc
ja
jmp
mov
shl
jb
cwtl
or
jmp
lcall
jmp
jbe
mov
aas
andl
fs
xchg
jnp
pop
rclb
repnz
xchg
testl
jno
cmp
test
inc
es
leave
je
rcll
aas
into
outsb
push
mov
mov
inc
enter
shlb
fists
scas
xchg
cwtl
mov
xchg
push
xchg
test
ss
pushf
push
data16
dec
inc
cltd
iret
fidivrl
jae
push
repz
int3
leave
test
jecxz
xlat
bound
jo
cmpsb
jle
mov
push
or
test
jnp
std
int
add
aaa
inc
xchg
ret
xchg
sub
cmp
imul
popa
rcll
add
adc
cmp
jb
lock
dec
mov
test
loope
pop
mov
fs
adc
inc
shlb
mov
inc
inc
sbb
cwtl
test
imul
or
adc
clc
les
out
adcb
push
imul
mov
mov
lret
movsb
cmpsl
pop
mov
bound
dec
mov
sti
fadds
adc
insl
dec
mov
cmp
adc
add
push
mov
and
inc
lret
push
cmc
push
subb
push
dec
stc
sub
dec
mov
sbbb
mov
fistps
cltd
dec
cmp
mov
mov
mov
stos
insb
stc
ret
js
test
fists
icebp
xor
sbb
add
in
jmp
adc
shlb
cli
jo
sbb
lea
fsub
fwait
push
fwait
cwtl
ds
ljmp
mov
jb
jb
sub
pop
mov
mov
cmp
cmc
imul
mov
dec
pushf
xor
pop
sub
adc
pop
xor
and
push
dec
stos
fsubl
xchg
rorl
fnstsw
sbb
loop
jecxz
mov
imul
xchg
lods
inc
add
pop
dec
add
pop
cmp
test
mov
inc
jp
popa
pop
scas
mov
inc
pop
insb
xchg
adc
mov
testl
out
adc
push
or
mov
imul
into
rcrl
add
inc
or
pop
call
mov
or
fwait
mov
cwtl
aam
inc
lods
js
lahf
ds
inc
cmp
in
sahf
int3
push
out
push
mov
push
mov
scas
fldt
and
aas
cwtl
jae
fs
lods
and
mov
add
int
out
clc
popf
or
sarb
testl
out
je
jo
mov
jmp
cwtl
rclb
mov
mov
mov
push
and
in
pop
or
cmovg
push
enter
xchg
jg
xchg
iret
xchg
jnp
pop
push
mov
mov
lret
dec
pop
add
insl
inc
inc
mov
gs
mov
xchg
into
push
dec
je
movsb
cmp
rcll
loopne
mov
xchg
stc
insb
in
mov
push
insl
and
orb
and
addr16
andl
cs
sbb
xor
pop
in
xor
test
or
mov
repnz
cmp
out
xor
cmp
push
jp
jecxz
outsl
mov
cltd
ffree
pop
jge
sbb
lods
push
fdivrs
mov
mov
rcl
das
jecxz
negl
outsb
imul
push
jb
cmp
dec
ds
sbb
add
mov
inc
pop
sbb
mov
stc
int3
out
repnz
adc
js
pushf
shr
les
xchg
pop
lods
stc
aaa
cmp
mov
add
adc
cmp
aaa
and
xor
addb
mov
and
sub
lea
cwtl
aam
dec
add
push
fisttps
pop
aad
mov
ss
jae
xor
mov
mov
sti
mov
mov
fistpl
mov
out
pop
push
test
das
cmpsb
aas
icebp
call
idiv
les
xchg
je
lret
aam
cwtl
or
jecxz
aam
xor
push
in
xor
cwtl
jns
ljmp
imul
call
push
vminps
push
lret
xchg
sbb
cmp
popf
test
push
popf
lcall
jge
lds
or
hlt
add
xchg
sbb
mov
cmp
mov
popf
push
cmp
rcrb
je
addr16
mov
repnz
hlt
lret
dec
and
mov
imul
adc
cmp
pusha
jg
loope
mov
cwtl
adc
cld
dec
xchg
fst
cmp
out
js,pn
inc
test
clc
or
bound
mov
call
push
dec
push
enter
jns
cs
andl
adc
out
sti
push
jmp
sub
mov
cltd
stos
mov
sub
xchg
dec
aaa
mov
out
sub
mov
cmp
push
lret
lea
inc
mov
pop
jg
mov
mov
or
push
insb
sbb
addl
mov
mov
push
stos
jmp
or
add
adc
mov
out
inc
mov
loopne
mov
and
pushf
fsubrs
pop
cmpsl
add
sbb
loope
pushf
pop
or
lds
pusha
pushf
ret
adc
mov
dec
xor
fucomip
ret
mov
xor
xchg
pop
pop
ret
vmovshdup
lods
cmp
in
adc
xchg
or
shll
push
mov
movsl
cmp
int3
cmp
xchg
adc
dec
cmpsl
mov
mov
and
adc
xor
iret
mov
lea
lret
clc
xchg
iret
pop
std
out
xlat
xor
divb
imul
sti
rolb
popa
or
or
pop
outsb
jae
xlat
fbld
clc
mulb
shl
fwait
jmp
push
repz
scas
hlt
cmp
xchg
lds
or
mov
adc
popf
insl
shll
add
pop
idivb
movsl
sub
inc
ss
mov
sbb
jae
dec
scas
jne
xchg
ficoml
ljmp
imull
in
jecxz
or
nop
inc
pop
cmp
cmp
addb
inc
jle
mov
lahf
gs
testb
xchg
test
scas
xchg
cli
js
cmpb
arpl
les
mov
ret
mov
popf
loope
adc
fldl
cmp
xor
outsb
cmovno
rcr
lcall
adc
dec
bound
stos
popa
cmp
push
and
push
cmc
iret
adc
push
jno
and
mov
orb
mov
ss
and
test
ss
dec
push
push
outsb
lock
lock
cltd
mov
insb
enter
xor
in
mov
add
mov
jno
and
mov
insl
loope
test
pop
or
lahf
bound
push
add
andb
fcom
inc
mov
push
shl
push
mov
adc
or
clc
das
int3
mov
loopne
mov
hlt
add
cmp
xchg
xor
test
sbbb
stos
mov
jo
push
adc
test
lret
pusha
dec
test
aam
and
jnp
xchg
jge
dec
dec
cld
mov
pop
int3
push
cmpb
push
js,pt
arpl
jle
test
sub
mov
fidivl
dec
popf
lret
ja
push
cli
adc
push
push
repnz
lahf
loopne
pop
sarb
and
push
sub
imul
inc
lods
cld
mov
push
repz
push
rolb
pop
loopne
xchg
inc
mov
push
lahf
enter
enter
dec
mov
pop
mov
mov
sub
les
aad
xchg
test
inc
test
bound
mov
dec
enter
das
add
popf
xor
jp
push
inc
out
les
test
and
xchg
adc
mov
roll
push
lods
add
iret
push
les
sbb
xor
mov
repz
jle
cmpl
or
in
sub
sub
inc
cmp
inc
leave
loop
sbb
lcall
xchg
xor
icebp
xchg
jle,pt
and
ljmp
sub
jmp
dec
jl
add
repz
cld
mov
test
pop
jge
cmp
push
outsb
pop
sbb
xchg
aam
mov
sub
fsubl
mov
or
fmuls
loope
jno
mov
sahf
nop
iret
movl
mov
out
sub
je
sbb
loopne
adc
lret
cmpl
mov
imul
lret
in
add
out
push
fisttpl
sub
into
pop
pop
clc
inc
das
mov
pop
scas
mov
cs
add
jecxz
xor
inc
movsb
lret
je
repnz
xchg
testb
fnstsw
cli
outsb
inc
ljmp
sbb
popa
dec
inc
daa
mov
add
xor
insb
loope
cmp
mov
shr
rcrl
icebp
lods
arpl
call
int3
push
inc
inc
sub
and
jo
fnstcw
test
rcl
pop
jae
cmp
ret
xor
mov
fldt
es
push
add
arpl
mulb
xchg
out
andb
cmp
pusha
inc
or
repz
or
add
fsubrp
inc
mov
push
push
pop
or
mov
cmp
pop
mov
enter
mov
and
add
inc
cmp
js
pop
xor
loopne
ds
sbb
add
data16
call
and
sbb
sbb
xor
add
mov
xchg
jnp
cmpsb
add
std
fdivs
sbb
xchg
in
adc
pop
and
mov
addr16
bound
stos
stc
fcoms
stos
mov
dec
add
xlat
fadd
pop
add
scas
xor
cmp
test
adc
repnz
mov
pop
clc
int
xchg
and
out
iret
lods
fcmovnb
test
stc
adc
mov
imul
cli
pop
add
loope
add
jp
jp
pop
leave
jae
push
cmp
add
stos
aas
push
adc
popl
jg,pt
imul
aaa
cmpl
sub
fldl
push
ss
fwait
sbb
or
daa
or
pop
and
push
push
leave
fstps
inc
dec
push
les
aas
iret
adc
repz
repnz
mov
push
jp
cmp
cmp
roll
shrb
mov
inc
cmc
sahf
repz
test
xchg
jecxz
data16
pop
cmpl
adc
push
mov
aaa
pop
rcrl
out
ret
jp
xlat
jle
test
insl
out
jo
jl
adc
repz
vunpcklps
and
mov
mov
cmpsl
aam
and
scas
mov
fdivl
mov
and
aad
cmc
mov
sub
mov
fwait
fs
mov
mov
push
add
push
test
cmp
sbb
out
cld
scas
cmp
movsb
cld
or
inc
xor
leave
cmp
lock
inc
xor
sub
jne
lret
or
sbb
sbbb
jae
cmp
xlat
sti
mov
loopne
repz
jge
add
shlb
jnp
mov
aaa
mov
or
insb
inc
mov
mov
xchg
dec
cmp
pop
add
dec
adc
imul
sbb
imul
stc
mov
and
push
out
movsb
inc
or
inc
insb
fmul
lcall
push
dec
adc
or
pop
fistps
cmp
imul
and
stos
push
test
fidivl
bound
xchg
lret
sti
jge
sub
int
mov
pop
xchg
lcall
ds
inc
jns
adc
dec
call
lods
mov
test
int
dec
cmpsl
imul
sub
test
std
lock
cmp
and
sub
fnstenv
dec
lds
adc
or
xlat
add
or
add
jg
scas
jge
mov
sahf
insb
lea
ret
add
xor
mov
mov
in
sbb
jle
addr16
xchg
sub
xchg
or
in
clc
pop
sbb
inc
mov
pop
push
das
and
enter
cmpsb
inc
sub
cmp
add
jnp
pop
sub
pop
jg
sbb
inc
shll
mov
call
pop
stos
jmp
inc
popf
jl
and
inc
push
push
sbb
cmp
xor
lahf
shr
and
or
jg
xor
cwtl
cmp
ljmp
ret
int
jb
cmp
fbstp
or
dec
sbb
mov
fildll
outsl
sbb
fisubrl
cwtl
xchg
push
fsubl
xchg
lret
lods
jge
mov
push
imul
aam
push
mov
outsb
push
outsb
movsl
mov
call
sahf
xor
push
int
stos
push
neg
jno
cltd
test
int3
into
shll
cs
adc
and
or
push
and
imul
icebp
lds
mov
test
lret
inc
fisttpl
sub
daa
push
lock
mov
fidivl
cmp
inc
shrb
insb
loope
cwtl
mov
or
mov
sbb
jae
btc
xlat
push
and
movswl
in
cmpsl
pop
roll
sbb
jge
jmp
jle
cmp
mov
adc
fcmovnb
movsl
ds
and
sbbl
jecxz
imul
push
sub
xlat
dec
mov
jae
push
clc
mov
flds
push
jl
dec
inc
push
adc
fistl
ret
outsl
mov
inc
add
inc
inc
mov
mov
and
and
inc
mov
subb
inc
pop
dec
mov
insl
jne
in
sar
es
push
lea
dec
push
stos
pop
fcmovnu
jg
adc
lds
in
cmp
test
add
adc
pop
lret
jge
daa
adc
jmp
loop
push
jmp
adc
imul
iret
push
mov
aad
inc
add
insl
adc
inc
inc
mov
clc
sbb
mov
rclb
cmpb
lods
sub
dec
in
mov
jge
push
insl
xor
je
mov
rclb
bound
insl
pop
test
cltd
lods
icebp
and
adc
xchg
sbb
fs
scas
lret
dec
pop
mov
adc
mov
mov
div
mov
arpl
sar
lock
adc
sbb
pop
jecxz
xchg
loop
aas
adc
pop
adc
mov
inc
cmp
cmp
scas
andb
lcall
arpl
mov
sbbb
mov
rcll
aas
dec
push
rorb
je
out
xchg
cwtl
lret
loop
sbb
cld
jmp
and
jp
cmp
cmpsb
add
pop
cwtl
sub
mov
fwait
dec
rcll
adc
xchg
xchg
outsb
scas
orl
stc
push
cli
lea
mov
xor
in
jge
inc
pop
lret
xchg
xor
push
or
lock
test
stos
sub
jecxz
push
enter
mov
sbb
sub
jnp
inc
xchg
fisttps
or
xchg
aaa
ja
lret
hlt
incb
mov
ja
pop
inc
or
mov
mov
jbe
and
scas
jmp
out
inc
cs
popa
lds
test
sub
mov
and
jmp
inc
mov
push
sub
jae
add
daa
push
pop
das
cmc
sbb
mov
xor
mov
sub
dec
stc
mov
mov
aaa
mov
scas
and
sahf
stc
out
add
loope
insl
jp
mov
xlat
aas
dec
out
dec
xor
xor
mov
lcall
xchg
loope
insb
and
mov
dec
shl
lahf
mov
filds
inc
in
call
jbe
js
dec
insb
dec
and
push
pop
adc
pusha
mov
vmptrst
mov
call
js
xchg
cltd
aas
pop
or
push
inc
xor
fmuls
sbb
mov
mov
jb
dec
dec
mov
mov
jl
dec
and
inc
fmull
lock
pop
inc
pop
jmp
adc
fnstsw
push
aaa
pop
push
cmc
dec
mov
inc
dec
push
push
in
mov
frstor
xorl
jae
repnz
daa
push
mov
jmp
call
mov
imul
cs
lahf
inc
or
mov
sub
mov
mulb
dec
adc
dec
xor
ja
xchg
sub
sbb
ds
in
xchg
pusha
data16
incl
mov
mov
dec
stos
addr16
adc
cmp
shlb
cs
repnz
in
lahf
scas
push
out
dec
xorl
pop
xor
sub
xlat
shlb
aam
aam
adc
mov
add
dec
test
addr16
push
mov
cli
in
mov
loopne
push
push
test
inc
mov
insl
pop
fidivl
sub
mov
les
lahf
andl
sbb
adc
sbb
mov
bound
lds
popf
dec
insb
popl
icebp
popa
shll
mov
or
lock
jae
xlat
mov
xorb
cwtl
mov
sub
mov
popw
scas
push
or
and
cli
mov
xor
out
and
ja
sub
gs
or
ljmp
fistpl
lcall
or
sbb
xchg
testb
push
call
jmp
test
orb
mov
jmp
xchg
inc
xor
in
test
mov
xor
adc
or
insb
ret
and
out
dec
test
data16
iret
mov
xchg
les
xchg
fs
int3
pop
pop
jecxz
repnz
sub
cwtl
push
les
jmp
push
es
adc
pushf
test
xor
mov
fdiv
loopne
inc
stos
and
clc
push
cmp
mov
push
pop
cmp
xor
cli
xor
gs
outsb
icebp
jnp
fwait
mov
insb
or
loopne
sbb
lret
push
inc
sub
jl
mov
cmp
xor
xor
or
xor
fimull
lret
das
sbb
jnp
scas
jae
add
adc
shl
in
and
push
push
mov
sbb
int3
cli
lret
push
xchg
adc
fs
mov
sub
imul
das
into
imull
stos
sub
or
popf
xor
out
cmp
test
xbegin
lods
push
adc
aas
sub
rorb
pop
cmp
sbb
hlt
fsubrp
and
mov
add
outsl
mov
sub
add
pop
mov
fdivr
cmpsb
fucom
sub
dec
push
add
dec
sar
leave
notb
loope
test
or
fildl
loope
mov
popf
xor
pop
mov
adc
iret
mov
push
sub
jg
in
in
icebp
nop
pop
es
pop
daa
inc
ficompl
in
xor
mov
out
adc
imul
mov
js
mov
fcompl
cmp
sbb
test
icebp
jns
jne
push
inc
mov
cmp
jnp
xchg
incl
negb
sahf
addr16
pop
cmp
xchg
addr16
lods
aad
sub
test
xchg
inc
adc
inc
or
jo
push
insl
popf
pop
sbb
addr16
int
push
push
out
pop
sarl
aad
or
insl
mov
xchg
push
bound
in
push
les
inc
sbb
sbb
and
dec
inc
mov
testl
sub
cmp
dec
lods
xchg
movsl
cmp
mov
scas
inc
mov
push
xor
movsb
and
out
or
stos
sbb
xchg
dec
sbb
xchg
ja
scas
ja
push
test
js
push
jmp
test
push
mov
icebp
test
cli
jg
mov
cmp
adcl
cmp
sbb
sbb
inc
push
out
mov
xchg
mov
push
sub
dec
sub
insl
daa
rolb
repz
adcl
sub
dec
int3
xor
mov
lcall
test
mov
ret
sbb
lcall
cli
sub
inc
rcrl
js
pop
dec
mov
cmp
dec
and
sub
jmp
or
mov
push
fisubrs
jae
and
lcall
adc
pop
jns
in
jae
movsl
in
js
in
aas
add
insl
cmp
sub
cmp
scas
pop
ds
mov
iret
movsl
sbb
dec
mov
jle
mov
add
stos
sbb
lods
movsb
in
inc
jo
insb
adc
je
loop
in
lods
mov
mov
xor
mov
push
cwtl
mov
xchg
jge
xchg
sub
or
out
shll
jae
jnp
daa
jmp
ja
shl
insl
and
or
es
inc
aam
adc
xor
xor
mov
pop
into
mov
xor
push
js
dec
jae
aas
scas
xchg
pop
sub
outsl
sub
mov
mov
xchg
aas
mov
dec
lcall
pop
sub
ja
mov
iret
nop
ds
xchg
movsl
mov
js
movsb
pop
shr
mov
sbb
mov
sbb
in
les
fs
ss
mov
ret
cmpsl
jecxz
push
mov
dec
ljmp
jp
lret
and
adc
cmp
test
das
loope
repnz
jno
mov
outsl
stos
mov
daa
sahf
mov
mov
fnstenv
xchg
pop
jecxz
xor
or
adc
mov
ret
in
xlat
lcall
cli
repnz
scas
adc
pop
sub
inc
stos
scas
xor
jbe
cwtl
mov
xchg
in
gs
mov
push
and
movd
dec
cmpsl
push
cmp
cmp
lahf
push
idivb
fisttpll
jg
add
mov
cmc
jg
sbb
cmp
pusha
add
test
mov
inc
repz
push
add
jo
sub
lcall
or
aam
lret
push
jecxz
or
mov
adc
mov
int3
add
into
cmpl
sub
aaa
push
outsl
xchg
jge
das
movsl
jg
xchg
mov
adc
mov
test
arpl
pop
or
lret
stos
push
mov
bound
sub
outsb
xor
xbegin
pop
jae
sub
movsl
sarb
loop
les
pop
mov
sar
sub
call
or
mov
mov
xchg
sbb
push
mov
and
repnz
pop
push
push
jo
push
pop
arpl
pushf
popa
mov
sahf
hlt
pop
ljmp
mov
mov
imul
lret
sbb
hlt
mov
sbb
insl
sbb
dec
out
cmpxchg
push
xor
hlt
adc
inc
cmp
jmp
cs
enter
jge
inc
outsb
cmp
pop
sbb
pop
cmc
es
mov
aaa
out
hlt
data16
dec
aas
dec
dec
loopne
in
fmuls
arpl
mov
movsl
cmp
das
loopne
mov
cld
mov
clc
fbld
arpl
sbb
cmp
sbbb
sub
fnstenv
or
out
stos
es
enter
and
mulb
mov
mov
lods
call
jns
mov
test
and
decb
call
clc
jnp
repz
insl
into
adc
int
sbb
lods
repz
outsb
fiadds
xchg
pop
push
imul
aad
in
out
pop
ds
jg
lahf
lret
dec
stos
sub
xchg
push
sbb
sti
out
cwtl
jbe
sbb
imul
add
les
ret
out
and
sub
xor
lods
addr16
insl
or
loope
xchg
repnz
mov
mov
push
test
test
out
movsb
xor
popa
push
clc
fidivrl
out
lock
push
pop
push
jb
adc
pop
outsl
aas
movsb
daa
or
out
xor
and
daa
das
or
inc
pop
std
push
decl
push
xchg
pop
stos
mov
sbb
das
je
lret
inc
mov
jnp
jbe
shll
and
pop
sbb
out
inc
in
and
insb
out
mov
adc
jo
push
inc
sbb
lahf
pop
stc
repnz
adc
lret
std
mov
into
test
dec
add
cld
dec
mov
je
cmp
call
mov
out
push
mov
loop
repz
jae
into
mov
nop
adc
jl
fs
mov
xor
or
mov
or
sahf
pop
sub
dec
div
mov
inc
jbe
pop
or
push
fistpll
scas
out
jne
xor
mov
mov
adc
inc
std
frstor
scas
pop
sbb
mov
test
repnz
or
and
jmp
jmp
mov
mov
shlb
jle
mov
int
push
inc
mov
xchg
push
insl
enter
dec
mov
ljmp
and
inc
imul
sub
ret
ja
out
jmp
shlb
fsubrp
std
std
or
aas
push
js
xlat
push
jg
out
mov
jnp
fisubrs
xchg
mov
lret
push
and
xchg
inc
stos
lds
mov
mov
daa
sbb
icebp
stos
shll
adc
in
or
rcrb
lcall
push
pop
mov
xor
jmp
xor
cmpsl
sti
pop
jecxz
scas
push
bound
push
call
cmpsl
ret
pop
test
arpl
inc
adc
mov
inc
and
xchg
jbe
imul
xchg
and
cmp
aas
push
sbbb
mov
mov
add
add
imul
es
icebp
in
jge
lea
mov
icebp
shll
inc
mov
add
lds
jle
stos
and
cld
and
ret
sbb
cmp
xchg
adc
pop
or
sbbl
push
xchg
add
sub
adc
xchg
pop
loopne
xor
out
loope
stos
xchg
jp
psubsw
out
gs
sbb
push
inc
jecxz
sbb
dec
pop
push
jl
imul
aam
inc
mov
xchg
or
jns
das
outsb
iret
in
jl
jns
and
lret
pushf
adc
sub
pop
adc
addr16
pop
sub
js
pop
lock
clc
stc
and
insl
xor
mov
cs
push
arpl
pop
in
pop
push
pop
mov
pop
cmc
jmp
or
fisubl
jp
test
cmp
mov
adcb
mov
in
pop
fcmovbe
test
js
dec
xchg
xor
inc
test
outsl
leave
dec
push
mov
sbb
in
dec
inc
inc
cmp
dec
in
mov
lret
cmp
xlat
out
stc
in
repnz
les
test
pushf
pop
imull
hlt
mov
sub
lret
fwait
pop
loope
or
and
push
lods
mov
cmpsb
lods
mov
outsl
jns
push
mov
jl
int3
mov
enter
mov
daa
add
mov
add
leave
xchg
xor
in
jmp
pushf
sub
xchg
pop
sbb
daa
movsb
js
push
xor
aam
push
mov
dec
es
ljmp
dec
fcmovnbe
imul
shufps
push
les
xchg
aas
iret
mov
rclb
mov
mov
mulb
rcll
jbe
cmpsl
pusha
setge
cmpb
loopne
cwtl
scas
xor
daa
ljmp
leave
cltd
push
es
xor
mov
outsl
cwtl
data16
push
add
lock
or
push
pop
hlt
fisttpll
insl
les
lahf
nop
scas
adc
adc
cmp
stos
imul
xor
inc
stos
and
mov
repz
lahf
in
sbb
dec
mov
pop
sbb
pop
xor
pop
mov
mov
push
sbb
cmp
sbb
mov
push
cmp
push
insb
mov
jecxz
out
pop
mov
cmp
dec
pop
in
cltd
mov
sub
pop
aaa
adc
cld
mov
test
jns
and
jb
cmp
sub
pushf
imul
jg
fisubs
pop
push
popw
push
jne
cli
push
sub
jl
nop
addb
mov
mov
arpl
mov
lcall
pop
les
lods
push
xchg
or
repz
and
pop
jmp
js
mov
adc
out
imul
lret
cmp
inc
adc
xlat
rorl
sub
leave
or
dec
or
aam
push
xor
lods
push
push
psraw
pop
mov
pop
xchg
daa
jno
movsb
cltd
lods
in
sub
adc
push
mov
inc
sub
ss
jo
mov
or
in
std
out
mov
inc
adc
mov
sahf
ljmp
hlt
fcomps
mov
cld
lods
pop
mov
popa
jg
fisubrl
imul
and
xor
sub
imul
adc
and
or
scas
jb
or
ja
popa
xchg
rolb
psubd
pop
out
outsb
repz
pusha
lret
scas
pop
mov
clc
jae
push
push
mov
dec
test
and
pop
loope
jecxz
bound
cli
push
push
mov
je
shll
jo
cltd
je
jno
sub
push
mov
ja
hlt
into
dec
mov
add
xor
push
inc
or
sbb
outsl
rcl
add
sbb
leave
mov
push
mov
push
adc
jg
lock
enter
loopne
mov
inc
xor
ret
in
cld
data16
testb
aaa
mov
stos
fstpt
xchg
mov
out
pop
pop
jbe
or
out
and
insl
iret
mov
aas
fistps
pop
int
sub
xor
adc
dec
mov
add
mov
dec
dec
cmp
fisubrl
les
hlt
inc
mov
push
pop
ficoml
hlt
test
jns
lds
sub
or
push
dec
pop
in
xorl
in
and
repz
push
mov
xchg
out
adc
and
sub
repnz
push
sbb
in
fadds
test
jge
scas
mov
std
out
fbstp
in
mov
rorl
mov
movsl
push
sub
andl
dec
xchg
jne
sub
push
loope
or
push
xchg
js
repnz
mov
cmp
insb
xchg
cltd
dec
push
fcomip
push
ficomps
sbb
popf
jp
add
mov
mov
je
cmp
mov
out
jmp
and
push
push
cwtl
rep
jl
outsb
push
lret
xlat
mov
xchg
enter
scas
dec
into
push
sbb
das
mov
or
in
movsb
push
mov
outsb
scas
scas
pop
sub
xchg
enter
jnp
fsubr
cmp
cmp
and
cwtl
inc
movsl
mov
js
int
shlb
mov
or
popf
fmul
dec
add
fisubrs
xchg
cmpl
pop
loopne
xor
pop
xchg
adc
aaa
mov
outsb
xor
fs
add
adc
and
andl
fwait
out
popa
test
daa
mov
mov
cmp
ds
xor
nop
sub
cmp
push
mov
stos
aaa
arpl
dec
fcomps
fistps
lods
aam
mov
stos
bound
arpl
mov
movsb
scas
mov
adc
subb
sbb
in
jg
ds
pusha
mov
ret
je
xchg
and
insl
call
sbb
sub
lock
cmpsl
jl
test
dec
jns
dec
xchg
daa
movsb
outsb
cs
les
shrl
push
lea
data16
dec
add
mov
notl
mov
mov
popa
inc
adc
inc
mov
iret
add
scas
pusha
test
inc
dec
add
xor
sbb
fidivrs
dec
and
fcmovb
pusha
ret
push
fimull
stos
ljmp
lahf
sub
repnz
sub
pop
movsl
xchg
inc
fdivs
in
repnz
std
push
ds
icebp
mov
fldl
push
mov
push
das
xchg
fimull
out
mov
adc
sti
scas
push
outsb
pop
mov
out
mov
std
lahf
mov
imul
or
mov
dec
cmpsl
ss
or
mov
add
mov
dec
mov
adc
loop
lahf
cwtl
adcl
les
imul
mov
lret
dec
stos
xchg
inc
jne
inc
inc
ljmp
jle
sahf
and
push
aas
mov
sbb
shlb
jecxz
adc
jo
stc
and
jb
movsb
adc
xchg
mov
push
popa
ljmp
clc
xor
xor
mov
bound
xchg
inc
test
cmc
mov
fistl
imul
pusha
push
adc
popa
mov
xchg
jl
mov
int3
pop
test
into
adc
filds
out
adc
jbe
mov
pop
jbe
das
pusha
dec
xlat
out
xchg
inc
inc
push
addl
jge
mov
je
ret
fiadds
mov
or
mov
add
out
in
mov
xor
xor
and
sub
pushf
inc
xor
push
insb
fbstp
pop
and
push
cmp
je
sub
jg
mov
in
jne
repnz
xchg
adc
div
add
lret
or
inc
mov
subb
fisttps
pop
pop
shrl
sub
clc
std
adc
dec
in
aad
mov
pushf
aas
ja
gs
movsb
jne
int
dec
or
xlat
notl
out
in
mov
addr16
adc
fucom
in
xor
xor
jnp
and
pop
inc
jecxz
ljmp
inc
lea
and
jge
xchg
push
adc
mov
mov
adc
std
push
clc
das
jbe
push
hlt
xor
mov
mov
insb
imul
add
jbe
enter
jne
sbb
xchg
fcoms
dec
jl
or
xor
mov
push
adcl
mov
scas
in
roll
push
aam
push
or
leave
adc
dec
hlt
cltd
dec
ret
enter
dec
data16
lcall
xor
test
jo
mov
out
mov
cmp
jbe
inc
or
add
inc
test
inc
mov
movsb
push
aam
je
push
and
adc
xchg
sti
bound
sub
out
ljmp
xor
mov
icebp
xor
rorl
adc
sbb
lahf
mov
mov
in
nop
adc
sbb
sbb
mov
lcall
pop
push
pop
out
xor
xor
dec
mov
mov
or
inc
cmp
idivl
imul
into
add
daa
pop
push
xchg
inc
adc
lods
push
push
negl
popf
cli
out
inc
mov
ja
xchg
add
push
pushl
xor
sub
outsb
pop
push
mov
aad
mull
gs
ss
dec
repz
ljmp
insb
aam
push
test
lret
lods
cmp
and
ja
or
cmp
xor
nop
pop
icebp
in
imul
lret
push
iret
xor
mov
xchg
mov
jb
sbb
jecxz
cltd
jmp
mov
jae
es
data16
dec
cmp
stos
xchg
cmp
aam
fistl
xchg
push
xsaves
and
rcll
testl
in
jmp
push
xchg
jnp
data16
gs
test
bound
dec
fdivrl
adc
or
jnp
in
inc
int
jecxz
sti
sub
mov
cmp
mov
pop
mov
arpl
jnp
pop
insl
pop
ret
ret
aam
mov
mov
stos
repnz
cld
mov
mov
push
push
aam
pushf
arpl
jmp
xchg
std
lods
pop
dec
xor
leave
aam
out
and
push
dec
xchg
imull
push
push
lea
not
or
push
shrb
test
std
and
dec
push
jno
mov
mov
mov
sbb
mov
or
std
mov
sbb
and
ja
daa
xor
arpl
sbb
insl
dec
sbb
int
lret
dec
and
push
mov
pop
jge
ja
xchg
push
sbb
and
lret
cld
push
dec
cmp
cli
aad
stos
ret
bound
and
push
push
inc
pop
hlt
mov
push
outsb
pextrw
scas
fadd
inc
inc
popa
popa
push
div
fwait
cli
mov
sub
ljmp
test
out
pop
or
inc
divl
xor
imul
mov
pushf
lods
ret
nop
adc
jne
xor
sub
andl
xor
mov
fistl
sbb
and
jp
insb
adc
add
xchg
jno
leave
ret
dec
pushf
pop
mov
out
sbb
jmp
pop
jbe
movsb
rcll
mov
call
push
pop
push
adc
into
pop
xchg
test
outsl
jmp
rol
mov
out
inc
sub
shll
jecxz
gs
dec
lods
mov
scas
xor
out
insb
dec
mov
cli
gs
add
pusha
mov
xor
xlat
mov
xor
pop
cmp
mov
ficomps
rcrl
pop
dec
imul
loopne
clc
inc
ficomps
dec
mov
rolb
icebp
cmp
cmpl
adc
data16
fcoml
mov
pop
sub
pop
in
cmp
scas
xor
adc
jbe
arpl
ss
popf
ret
jp
jae
xchg
or
sub
ficomps
pop
pop
out
dec
push
pop
dec
or
jnp
out
divb
sbbl
in
shl
out
es
movsb
push
and
hlt
xchg
lahf
xchg
les
sub
pushf
or
jne
inc
inc
fscale
adc
movsl
cmp
or
jne
jg
leave
ret
test
fcmovbe
or
out
inc
jno
push
ljmp
pop
out
cwtl
in
or
push
xor
add
stos
sbb
test
add
pusha
daa
in
and
sbb
es
add
add
cmp
lret
cmp
xor
sti
pop
push
iret
gs
andl
cmp
sub
lock
inc
or
bound
mov
xlat
mov
pop
cmp
jne
mov
and
pushl
jmp
fisttps
pop
icebp
mov
aad
pop
sub
out
lods
xchg
cmp
fwait
je
sub
sub
mov
pop
cmp
cmpsb
nop
sbb
jmp
fidivrl
inc
mov
icebp
cmpsb
lret
dec
push
xor
sbb
shl
jne
lret
cmp
test
mov
jmp
test
mov
xchg
or
in
xor
lcall
pop
leave
and
addl
push
ja
movsl
or
mov
pusha
sbb
pop
ror
insb
or
addr16
sbb
xchg
sbb
shl
loop
in
cmp
sbb
loopne
imul
fdivr
fimull
and
lds
lcall
cmp
cmp
hlt
add
stos
decl
daa
jmp
push
pop
insb
dec
lea
push
popa
push
outsb
and
cli
fs
adc
test
lahf
sub
sub
inc
mov
mov
mov
add
dec
add
xchg
fdivrp
je
aaa
mov
stos
and
sbb
and
pop
pop
ret
cmp
mov
push
cld
and
push
popa
cs
inc
add
movsb
and
fcoml
jg
add
arpl
push
or
jno
jae
mov
pop
call
lods
movsl
mov
mov
lds
jp
in
out
mov
dec
aas
push
push
cli
out
cmp
imul
xchg
and
or
mov
add
jecxz
loop
fcompl
jno
sbb
outsl
test
mov
push
mov
rcrb
inc
push
jle
xchg
xlat
ret
shlb
sub
push
iret
loop
cmp
push
cmpsl
dec
lods
je
jmp
inc
push
cmpsb
imul
or
out
ss
adc
xchg
aad
gs
sub
ds
adc
add
mov
ds
insb
sbbb
push
mov
cmc
push
mov
loopne
enter
scas
je
sub
cs
arpl
outsb
adc
push
inc
ljmp
sbb
mov
or
push
aaa
repnz
dec
sbb
pop
enter
rcr
pushf
iret
xlat
push
push
mov
icebp
mov
fbld
test
adc
sub
dec
sbb
dec
mov
lock
mov
out
dec
rorl
push
mov
adc
sub
hlt
out
repnz
in
mov
sub
jb
cmp
test
sti
mov
wrmsr
push
pop
pop
loopne
enter
ficoml
mov
inc
xchg
push
and
sbb
cmpsl
jle
mov
cmpsl
pusha
in
mov
add
or
mov
jmp
arpl
inc
push
loop
es
movsb
xchg
mov
fdivrs
nop
cmp
pop
pop
int
int3
xchg
xchg
mov
sub
ja
repz
mov
fstpt
jge
mov
icebp
jae
int
cmp
jae
sub
xor
xor
ja
std
aam
and
adc
dec
sahf
or
and
sub
sar
inc
scas
or
std
pop
ljmp
xlat
xchg
stos
adc
pop
inc
mov
addr16
rcrl
lret
xchg
pop
jge
sbb
out
mov
mov
sbb
cld
sbb
enter
or
xor
mov
shll
adc
out
push
inc
mov
xor
icebp
notl
sub
push
cmp
lods
adc
ret
fwait
mov
insb
sbb
repnz
xchg
pop
add
fmuls
add
filds
dec
and
and
daa
outsb
sbb
hlt
jns
insl
cs
push
xchg
jle
adc
fwait
push
adc
pop
pop
cli
sub
or
lods
cwtl
rclb
arpl
adc
in
sbb
ret
hlt
js
aad
lock
data16
int3
filds
sbb
cs
sub
ret
mov
pop
jne
sub
adcb
mov
in
dec
xor
mov
iret
sbb
adc
in
sub
xchg
shlb
adc
xlat
sbb
mov
mov
adc
cmp
lcall
push
imul
adc
insb
fwait
js
imul
outsl
fildl
lret
push
or
push
loop
adc
adc
push
cmc
sbb
js
scas
adc
adcb
cmc
mov
f2xm1
out
jp
mov
aad
test
stc
mov
popf
inc
push
mov
stc
xor
iret
fbstp
ret
test
dec
or
add
push
sub
jo
fmull
jne
sbb
xor
adc
and
ret
test
sti
int3
mov
je
pusha
hlt
fwait
xchg
jge
or
and
mov
mov
insl
bound
movsb
mov
cmpsb
leave
push
xchg
data16
popa
jecxz
jnp
fbstp
pop
das
mov
repz
cmp
movb
aas
mov
xor
aas
ds
mov
sbb
push
and
dec
popf
out
and
shl
xchg
sbb
sbb
push
out
mov
cmp
gs
inc
mov
lds
lret
mov
push
stc
add
mov
pop
jmp
pmaddwd
xor
ret
dec
jno,pn
pop
push
loopne
rcrl
stc
stos
add
aaa
stos
cmp
add
inc
shll
fistps
xlat
lds
popa
and
cmp
mov
push
in
jo
test
inc
fbstp
popa
adc
mov
add
adc
inc
push
inc
mov
test
inc
mov
scas
inc
aam
jecxz
std
fnstcw
sbb
test
mov
mov
sbb
dec
aas
insl
test
xor
xlat
adc
inc
inc
and
in
mov
inc
fcompl
repnz
lret
mov
testb
cmpl
loop
xchg
pop
sbb
mov
pop
test
xchg
sarb
lahf
dec
lcall
lahf
lret
mov
scas
push
jo
mov
sub
inc
lea
jecxz
jl
pop
dec
sub
mov
lds
jecxz
out
lds
push
sti
js
sub
jle
xchg
mov
les
in
int3
pusha
les
les
or
push
pop
arpl
dec
mov
push
js
ljmp
daa
mov
sub
pop
out
popf
mov
nop
xchg
dec
xchg
xor
or
lds
add
cmp
loope
sub
faddl
mov
sti
stos
push
in
aam
movhps
inc
fstpt
pop
aam
cmpsb
daa
ret
leave
or
enter
mov
xor
mov
lds
iret
icebp
mov
mul
sbb
out
xor
out
lahf
stos
sbb
inc
xchg
pop
push
dec
cmc
sbb
jbe
sub
fdiv
adc
aad
das
xor
loop
xlat
cltd
or
jbe
and
mov
cmp
outsb
int3
push
fsqrt
pop
xor
xor
push
and
pop
push
dec
je
movsb
std
xor
dec
mov
inc
fmull
ds
xchg
mov
cld
dec
movsb
sub
mov
jnp
pusha
adc
icebp
in
fwait
imul
icebp
push
and
test
ss
movq
call
mov
jo
fwait
cwtl
and
and
jbe
decb
shlb
xchg
jle
dec
lcall
push
in
xchg
jnp
popf
or
jge
mov
cwtl
inc
and
add
sbb
std
mov
ret
mov
xor
sub
jmp
fisttpl
popf
inc
pop
pop
or
push
popa
stos
imul
int3
sar
xor
lock
adc
addr16
lock
push
sbb
fmull
lret
push
pushf
lret
xor
clc
cmp
xchg
dec
jp
pop
inc
das
xor
xor
dec
outsb
mov
dec
jbe
mov
movb
add
hlt
insl
in
test
mov
push
rcr
jbe
lods
dec
test
xchg
add
or
cmp
inc
cmp
push
push
adc
aad
and
sub
loop
mov
repz
inc
mov
sub
and
xorl
fdivl
push
xor
sub
in
sbb
add
xor
pop
out
fwait
lret
je
notb
jg
adc
add
inc
popa
pop
and
les
adc
push
jnp
outsl
push
repz
mov
xchg
push
sub
stos
add
ss
mov
mov
and
mov
push
in
inc
push
cmp
enter
pop
add
or
test
cmp
mov
int3
mov
cmpsb
jp
je
cs
out
iret
sbbl
lret
push
or
mov
jle
or
cmc
cs
sub
push
or
inc
mov
subb
outsl
jle
gs
popa
add
mov
fimull
out
push
pop
inc
jo
xlat
bound
jno
xchg
das
mov
repz
int3
jg
scas
fimuls
push
push
in
popa
sbb
or
repz
mov
xchg
adc
mov
adc
mov
in
xchg
imul
out
ficompl
or
mov
xchg
mov
loop
and
ljmp
sub
cmp
mov
sbb
inc
dec
adc
stos
mov
push
jl
out
mov
das
jb
mov
ja
push
aad
sub
daa
mov
push
test
ds
stos
xchg
pop
sub
sbb
jecxz
daa
xor
aad
jns
lahf
cmp
cld
mov
inc
idivb
sub
or
lea
ds
sti
lret
mov
imul
adc
sbb
lret
loop
testb
or
mov
stos
cmp
in
fisttps
popa
push
pop
jl
push
js
pop
int3
cmp
cmpsb
cmp
fdivrl
pop
and
push
mov
lods
mov
es
in
lahf
popf
xlat
sti
adc
loope
pusha
jbe
add
stos
subl
scas
adc
insb
inc
sarl
xchg
lock
push
sbb
inc
insb
xor
or
push
movnti
ret
imul
mov
dec
mov
cmpsb
loop
or
inc
jbe
bound
ret
fimull
stos
jae
fidivrl
pusha
mulb
or
clc
pop
test
aam
arpl
sahf
cmp
and
std
cmp
or
cmp
push
imul
add
xchg
inc
adc
sarb
jecxz
pop
movsl
aad
add
roll
add
cmp
test
pusha
mov
es
filds
bound
xchg
sarb
inc
push
icebp
push
adc
adc
pop
mov
fimuls
push
fcomps
imul
xor
push
xchg
test
cltd
daa
dec
add
fucomip
fidivl
sti
dec
lods
inc
mov
and
xor
inc
mov
add
inc
mov
into
subl
test
cmc
or
je
dec
and
loop
aas
nop
fsubp
or
das
jmp
pushf
dec
aad
mov
push
adc
in
jbe
mov
cmp
lods
xor
xchg
mov
and
jne
negl
int3
scas
sub
xlat
cwtl
dec
adc
lret
mov
test
insl
ljmp
mov
pop
mov
mov
or
mov
mov
pop
loop
mov
f2xm1
fcomps
lea
jbe
xor
xor
mov
cmp
data16
daa
enter
dec
mov
and
and
test
lcall
lcall
mov
sub
enter
mov
out
rol
or
push
pushl
test
jbe
add
jmp
fiadds
xor
mov
push
lods
inc
pushf
jns
cmp
xor
movsb
jne
mov
add
das
stc
or
and
or
push
cmp
mov
fnsave
dec
nop
shlb
add
cmpsl
fiaddl
mov
inc
dec
jl
jge
out
aaa
xchg
mov
push
int3
push
inc
adc
jmp
test
lret
mov
inc
outsl
add
ret
mov
je
jle
push
cmp
adc
pop
scas
push
inc
aas
test
mov
or
adc
cmp
sbb
push
gs
push
cmc
repz
mov
sbb
aam
xchg
cmpsl
dec
push
adc
pushf
xchg
into
mov
loop
lds
push
insb
and
adc
call
or
push
push
push
push
mov
sti
pusha
pop
or
das
sahf
aad
sbb
xchg
fidivs
fwait
pop
mov
xchg
and
or
or
mov
shl
or
movsb
sbb
jmp
pop
pop
mov
xchg
or
xchg
jb
dec
rorl
je
or
inc
inc
icebp
adc
rorb
ss
mov
cmp
mov
mov
push
and
mov
mov
out
icebp
xor
adc
push
cmp
rol
dec
inc
mov
pop
loop
mov
out
lahf
test
and
insb
mov
into
push
xchg
fs
cmp
push
sti
mov
xor
in
xchg
lret
sub
fs
lods
jge
inc
movsb
push
lea
test
jne
insb
push
sbb
mov
stc
nop
jp
data16
les
lahf
mov
sbb
subl
cmp
les
notb
lcall
jl
adcl
and
inc
in
cld
mov
inc
mov
sahf
cwtl
mov
scas
shrl
sub
movl
mov
mov
stos
dec
push
push
mov
or
test
jmp
mov
dec
imul
mov
add
cmpsb
test
push
mov
sbb
xor
sub
jmp
jb
loope
dec
gs
adc
loopne
xchg
mov
loope
outsb
mov
ljmp
or
sub
jo
sahf
fstpt
jne
sub
sub
jo
les
fwait
xor
inc
xchg
or
cmp
pop
in
lea
or
loop
lea
jle
cs
mov
repnz
xor
adc
lock
stc
mov
mov
sahf
xchg
in
imul
notl
hlt
fstps
rcll
push
jecxz
leave
pop
das
or
mov
mov
pop
jno
xchg
mov
daa
test
call
or
cmp
jmp
sub
shrb
imul
push
mov
fsubl
outsb
pop
ror
mov
int
lods
mov
mov
out
inc
fwait
fwait
lea
lea
clc
dec
add
inc
add
arpl
fs
mov
call
mov
outsb
rcrl
push
jae
and
ret
sbb
rol
mov
shl
fadds
dec
imul
and
adc
add
cltd
enter
dec
jae
lods
dec
xor
cmp
stc
arpl
jg
lods
orl
into
testb
out
xor
jge,pn
pop
add
dec
outsb
xor
addr16
push
mov
mov
and
sti
sub
mov
inc
push
cmp
addr16
dec
push
pop
test
push
shll
sub
imull
xchg
mov
pop
outsl
push
idiv
and
in
adc
adc
cwtl
pop
lahf
fucomip
xor
pushf
lea
lds
sub
stc
mov
adc
jl
adc
imul
pop
enter
mov
pop
jp
or
push
sub
adc
and
xchg
mov
mov
sahf
fbld
sub
stc
pushf
leave
jnp
cltd
dec
sub
and
sbb
mov
insb
xchg
jmp
xchg
mov
fisttpl
or
pop
sbb
lcall
stos
mov
icebp
xchg
inc
out
js
xor
imul
mov
cmpsb
pop
hlt
daa
xchg
cmp
enter
rcrb
jo
or
lahf
test
or
movsl
addl
test
cmp
test
lcall
sub
push
lahf
sbb
sub
popf
arpl
add
push
lock
jo
clc
add
sub
aas
cmpl
loopne
add
filds
sbb
frstor
cmpsl
inc
pop
loopne
loop
fwait
sub
movsbl
je
repnz
jecxz
movsl
mov
shlb
mov
and
test
inc
das
decb
mov
cwtl
pop
and
test
jo
jecxz
jge
subl
jae
loopne
stos
sub
jle
repnz
or
out
cmp
inc
add
hlt
or
xchg
pop
in
pop
mov
push
sbb
rcr
and
or
xor
test
orl
aam
je
xor
xchg
dec
mov
mov
mov
test
test
inc
mov
stc
xchg
push
dec
movsb
push
xchg
mov
cli
and
gs
mov
adc
adc
jmp
outsb
insb
lods
sub
pop
pcmpgtd
sub
test
subb
mov
push
cmp
mov
lea
pop
sbb
add
mov
xor
fbstp
sub
in
push
jle
cmpsb
lret
jge
cwtl
jae
incl
xor
mov
inc
or
fs
decl
pop
pop
push
jge
jno
mov
test
scas
push
lods
mov
add
xchg
fidivs
adc
lock
fucomp
iret
out
mov
dec
dec
ja
daa
sahf
cmp
int3
pop
pop
addb
jmp
mov
mov
adc
jnp
movsl
fisttpll
mov
or
iret
adcb
mov
mov
xchg
xor
lcall
stc
arpl
hlt
lret
push
ror
ja
mov
xchg
clc
das
in
pop
popa
sbb
lods
fnstsw
add
cmp
int
mov
inc
cmp
and
push
ss
cmp
sbb
xor
repz
push
adc
mov
in
mov
pop
jnp
or
fnstsw
xor
ja
mov
xor
add
fisttpl
jnp
out
sub
sbb
or
jmp
add
push
xchg
fsubrs
test
cmp
hlt
ret
push
pusha
xor
jnp
clc
jmp
movsb
addb
clc
lock
cmp
pop
sahf
insl
outsb
aad
icebp
dec
dec
ror
pop
dec
jge
out
testl
popf
push
sbb
or
mov
mov
and
mov
ja
xchg
mov
cmc
or
lret
pop
addr16
and
imulb
sub
lock
call
add
xchg
mov
cwtl
adc
dec
jns
jne
xorl
inc
hlt
test
adc
ss
rcr
and
mov
int3
rcr
push
jg
cmp
pop
call
stc
jno
push
mov
stos
sbb
pusha
pusha
jp
lahf
pop
icebp
shr
in
cld
rorb
sbb
jmp
xchg
mov
imul
mov
pop
sub
outsb
jg
jp
aaa
cltd
sbb
xor
fs
test
out
inc
or
out
jo
sub
repz
mov
gs
sbb
ds
outsb
sub
or
lds
mov
test
jg
lock
ljmp
cli
movsl
fs
dec
push
ljmp
sarb
dec
sar
xchg
cmp
mov
les
and
int
mov
loope
and
std
sti
loop
fs
push
pop
aaa
push
add
adc
push
insl
outsl
out
pop
or
or
jle
loopne,pn
jnp
shlw
outsb
add
jle
push
inc
loope
cmp
sbb
mov
and
dec
adc
jo
jp
daa
leave
xor
pop
aaa
lods
mov
dec
rcl
ja
fnstsw
lock
mov
insb
push
pop
sub
xor
dec
xchg
fdivrs
mov
jmp
pop
adc
in
inc
pop
pop
and
inc
mov
jne
cmp
scas
add
mov
fsubp
sbb
dec
data16
into
mov
mov
cli
jb
sbb
push
mov
xchg
jne
adc
js
js
adc
and
outsl
xor
or
pop
dec
push
repnz
cmp
adc
aad
push
popf
adc
dec
xor
jl
fcompl
mov
push
xchg
push
inc
adc
mov
xchg
lcall
insl
mov
sbb
mov
add
mov
shlb
add
xor
mov
cmp
xlat
xor
push
cmpxchg
adc
ss
iret
and
mov
mov
cmp
int
pop
mov
pop
or
shlb
jge
mov
xchg
lea
loope
loop
push
lret
mov
mov
mov
sub
push
and
ret
jecxz
decb
jb
lahf
sub
fsts
xor
cmpsl
xchg
test
pop
pop
pushf
xlat
icebp
fisubs
inc
shll
push
adc
pop
adc
or
rolb
mov
imul
lods
sahf
cmpl
push
pop
aam
xchg
pop
shr
jge
pop
sbb
jns
call
cmp
aad
pop
inc
iret
icebp
shll
push
mov
icebp
jl
leave
or
sbb
fcompl
pcmpgtd
jnp
push
adc
popa
enter
inc
and
test
jns
mov
pop
sub
into
xchg
shlb
inc
inc
jp
sarl
inc
and
push
dec
add
test
mov
and
adc
mov
mov
pushf
loope
jnp
out
inc
or
pop
mov
push
mov
outsl
adc
or
mov
cli
or
iret
push
mov
rolb
push
push
imul
pop
mov
test
and
nop
mov
cmpsb
add
fiaddl
sub
sbb
adc
adc
int3
ret
push
mov
stos
lock
mov
divl
mov
int
push
adc
je
xchg
pop
push
jmp
push
popa
xchg
test
or
add
in
inc
insb
sub
inc
pop
inc
dec
add
cmp
popf
or
push
arpl
ja
mov
inc
sub
orb
add
dec
sub
iret
popa
repnz
xchg
push
enter
negl
mov
mov
movsl
fisttpll
xor
or
loopne
or
add
xchg
jno
cmc
inc
lods
insb
cmp
cmpb
hlt
mov
push
mov
lock
pop
lods
sahf
push
iret
jo
mov
ret
and
or
fs
push
aad
mov
dec
sbb
adc
std
cs
push
xor
or
pop
mov
add
sub
xchg
add
sti
sbb
jle
outsl
mov
jo
inc
stos
dec
mov
sahf
dec
adc
and
fcmovb
insb
xchg
mov
jno
cwtl
popa
outsb
push
push
cmc
mov
jecxz
test
es
shlb
xchg
pop
outsb
mov
iret
jbe
pop
push
scas
push
inc
dec
xchg
rclb
push
rcr
popf
fisubrs
test
mov
mov
push
xchg
sbb
mov
and
sub
daa
or
inc
dec
jp
pop
jmp
ds
jg
scas
sub
mov
in
mov
cltd
dec
mov
test
nop
xchg
and
xchg
and
loopne
popa
mov
sub
jb
cmp
cs
aaa
push
sub
bound
dec
pop
sahf
frstpm(287
or
push
ss
xchg
nop
leave
fisubrs
in
inc
enter
in
mov
test
ret
jbe
mov
push
cmpb
xchg
stos
test
mov
frstor
or
xor
scas
dec
addr16
or
and
xlat
jg
fwait
xchg
push
sbb
clc
lret
cmp
repz
xlat
cmp
pop
in
test
int3
int3
mov
lret
push
dec
xor
lret
or
inc
pusha
or
ja
sbb
imull
lret
jmp
in
stos
pop
scas
stos
fisubs
subb
or
lcall
lods
frstor
lock
adc
iret
stos
push
and
pushf
mov
or
fs
cli
roll
in
enter
mov
dec
xchg
jo
adc
sub
stc
mov
into
std
in
enter
rcrl
pop
mov
pop
sbb
inc
inc
pop
add
imul
jno
jecxz
ljmp
mov
and
jle
in
pop
subl
rorl
les
shll
sbb
les
cmp
adc
mov
jle
mov
fisttps
pop
bound
ss
scas
ljmp
mov
in
xor
cmpb
push
into
sub
hlt
stos
pusha
loope
fmulp
lock
cs
aaa
pop
imul
inc
mov
call
mov
in
mov
sub
ds
andb
cmpsl
sbb
dec
sbb
cwtl
movsl
clc
lret
inc
cltd
fdivs
shrb
or
in
lds
sub
vmovd
push
pop
or
lret
fildl
in
xor
es
std
mov
xor
pop
add
push
test
ficompl
jge
push
in
inc
cmp
jl
insb
loopne
cmp
insl
xor
xor
dec
std
idivl
cmpsb
adc
push
mov
xor
jo
test
push
push
sarb
cld
sbb
xor
jp
jp
inc
and
jno
or
outsb
xchg
adc
sub
movsl
dec
imul
clc
xchg
inc
nop
inc
rorb
mov
fidivrs
pushl
call
mov
mov
aam
push
fsts
iret
pop
cmp
loop
cmp
jecxz
and
mov
push
lahf
maskmovq
notl
pushf
cmpsb
pop
mov
rcl
push
pop
pop
jae
sti
lret
or
pushf
jmp
test
cld
xchg
rorl
cmpl
push
lret
or
xor
and
sbb
sub
stos
pusha
pop
sub
icebp
mov
xchg
cmpsb
pop
pop
mov
stc
sarb
sbb
lret
iret
scas
out
pop
rol
addr16
add
loop
imul
popa
gs
pop
in
inc
push
jo
or
std
cmp
or
adc
xor
xchg
fsubl
mov
mov
int
push
imulb
cmp
jmp
cmp
aam
dec
jno
mov
sbb
cs
jg
jp
add
sub
mov
xlat
sarb
pop
std
lods
mov
pop
xor
lods
jmp
int
or
jo
push
and
ds
inc
cmp
outsl
push
pop
fisttpl
xchg
mov
push
pop
arpl
pop
push
pusha
push
sub
mov
es
loope
ss
adc
cmp
pop
mov
nop
stos
xor
jbe
lods
mov
cmp
popa
shll
add
outsl
ret
or
sbb
pop
fmuls
leave
sub
test
out
loope
sub
jo
out
into
inc
pusha
xchg
fisubs
xchg
mov
push
xchg
mov
push
or
inc
cmp
data16
push
xor
dec
xchg
xlat
dec
mov
daa
mov
lret
xchg
push
dec
or
in
out
gs
cmp
dec
aad
mov
in
dec
dec
or
add
cmp
repnz
movb
xor
push
add
in
movsl
push
lock
mov
or
sbb
adc
adc
sub
cmp
lds
adc
in
xor
fists
jg
pop
pop
dec
gs
aam
adc
cli
jl
stc
nop
and
pop
lods
and
insl
sub
cmp
mov
shr
adc
sbb
fwait
imul
pop
repz
mov
leave
sarl
push
cmpb
sub
repnz
loopne
sbb
sub
rorl
and
jmp
adc
adc
cmp
iret
cmp
sarl
cmpsl
test
rorb
dec
mov
in
lret
sub
out
mov
jne
sbb
mov
nop
outsl
call
imul
cmp
in
inc
jl
fstps
jb
mov
cmpsb
cwtl
insl
cs
adc
xlat
mov
call
push
mov
push
and
jbe
dec
jmp
scas
aam
insl
push
movsb
popf
jo
xchg
hlt
pop
std
in
cmc
cltd
cmpsb
ja
or
insl
fwait
push
call
or
dec
jmp
popa
and
sarl
cmc
idivb
fldenv
negl
enter
xor
mov
push
adc
insl
call
cmc
dec
repnz
add
fsts
mov
cwtl
fldt
imul
push
loopne
popa
push
jo
mov
cmpsb
pop
xor
mov
rorb
push
repnz
aaa
jge
inc
int3
cli
jno
jo
push
aaa
xchg
sbb
dec
and
lahf
lods
pop
out
int
rclb
xor
cmp
cmp
sbb
inc
push
push
add
mov
cs
lahf
add
gs
push
vphsubbw
fwait
rorl
cmp
inc
adc
nop
ja
mov
pop
push
out
and
xchg
push
xor
repnz
frstor
cli
dec
xchg
hlt
repnz
or
sub
pmulhuw
pusha
ljmp
dec
rol
insl
cmpsb
push
clc
xor
sahf
int
pop
mov
aam
leave
mov
mov
pop
repnz
lcall
cmp
out
xchg
and
fnstsw
dec
jo
out
movsl
fistpl
pusha
add
jge
push
add
das
inc
jno
xor
loope
xorb
outsl
sub
mov
jnp
mov
mov
jns
ja
mov
cmp
sub
js
pop
stos
xorl
lcall
push
xchg
ja
sbb
pop
insb
fdivrl
in
scas
and
lods
adc
popf
pop
aam
es
xchg
idivl
jbe
in
sarb
ss
aaa
xchg
mov
movsb
repz
fidivrl
sar
cmpl
les
and
mov
mov
adc
or
int
mov
inc
movl
xchg
pmaxsw
out
dec
nop
gs
inc
pop
stos
std
push
adc
add
jmp
orl
in
sub
ja
in
fdivr
inc
add
fdivs
call
mov
out
jle
pop
mov
test
test
pop
mov
fcomps
sub
pop
repnz
jge
shlb
push
mov
pop
sbb
and
iret
clc
daa
dec
add
cmpsl
xchg
stos
jp
pusha
or
jge
ret
or
pop
loope
jns
dec
mov
shrl
pop
mov
adcb
cmpsl
jmp
loopne
iret
push
or
movsb
xor
dec
or
lret
dec
jp
jle
scas
aas
jae
ss
jmp
les
lret
xchg
adc
inc
lds
sbb
sbb
mov
cmpsl
inc
cmp
adc
cmp
shrl
xor
mov
cli
mov
stos
orl
loopne
in
adc
rolb
daa
aad
out
push
mov
dec
and
das
cs
push
pop
pop
jns
mov
xchg
inc
shl
sub
sbbl
clc
push
mov
mov
sbb
rcrl
test
in
dec
out
jns
push
jle
cmpsl
cltd
xor
ret
and
clc
call
addl
popa
icebp
pop
push
repnz
and
pusha
cmp
sbb
out
mov
mov
aas
imull
clc
push
push
push
fcom
jmp
mov
mov
mov
add
jns
xchg
mov
jmp
in
lds
or
dec
test
jbe
daa
sub
xlat
sbb
adc
pop
xor
xchg
cmpsl
es
mov
jecxz
adc
and
sub
dec
jne
mov
lret
das
loop
scas
mov
add
data16
repnz
les
fsts
jb
fwait
inc
cmp
int3
pop
insl
lret
stc
xchg
cmc
fs
xor
js
test
cmp
mov
jecxz
xchg
push
movl
sti
ret
adc
loopne
mov
leave
into
push
arpl
out
pop
sti
add
aaa
adc
push
stos
cltd
sahf
push
push
sbb
pop
xchg
xor
pop
cmp
mov
sbb
lods
lds
pushf
xchg
adc
stc
flds
icebp
rcll
adc
mov
dec
mov
mov
int
adc
fcompl
rorl
mov
stos
aas
pusha
sbb
bound
push
gs
pop
sbb
dec
pop
xchg
or
mov
aam
fdivrl
ror
xor
mov
dec
mov
mov
jp
jne
push
xor
out
aaa
insl
out
pop
and
bound
pop
stos
imul
xchg
movsb
divl
or
adc
popf
sbb
and
ret
xor
loopne
push
push
cmc
jmp
xchg
cmp
xor
xchg
cmp
orl
imul
cmpsl
pusha
in
cli
pop
pop
cwtl
leave
dec
movsl
nop
jnp
mov
jle
xchg
dec
stc
fimull
inc
ret
je
fs
and
jne
cmp
cmc
or
and
nop
pop
ret
gs
mov
or
cmp
into
xorb
scas
test
pop
insb
fwait
mov
ficoml
xor
mov
lahf
ss
xchg
mov
cmp
lods
loope
push
sbb
dec
pop
ljmp
inc
cmpsl
stc
nop
pop
dec
jno
es
data16
push
mov
push
enter
xor
xor
push
xchg
xchg
outsl
idivb
pop
mov
mov
add
inc
xrelease
push
lods
fisttpll
mov
lret
sahf
pop
jmp
dec
cmp
std
into
xchg
mov
test
xchg
jno
lods
fisttpl
mov
push
xchg
mov
cs
stos
ret
ds
inc
dec
sbb
add
pop
push
sahf
fdivrl
test
fdivrp
add
outsb
adcl
pop
jge
pop
xchg
xor
cli
std
sarl
and
mov
and
arpl
rorb
das
imul
rclb
test
popf
xor
hlt
inc
inc
add
lock
jo
mov
sbb
idivl
mov
insl
sub
fs
fdivrl
jne
out
aad
cmpsl
clc
imul
mov
test
jno
shll
jns
fistl
push
test
insl
mov
stc
ffree
cld
jp
adc
inc
mov
into
sete
push
xchg
xchg
adc
ret
mov
pop
outsb
call
pop
repnz
int
mov
inc
sub
pop
addr16
lock
cmp
mov
mov
dec
inc
cmc
pop
push
mov
xlat
add
adc
pop
and
xorb
xlat
jle
call
clc
ret
sbb
add
cli
inc
ljmp
into
fdiv
xchg
xchg
cmp
add
icebp
jae
push
and
pusha
dec
pop
int3
dec
mov
push
push
push
adc
popf
xchg
dec
push
pop
das
mov
cmp
gs
mov
add
jb
adc
adc
mov
iret
add
int3
scas
imul
test
pop
dec
ret
test
leave
notl
push
into
adc
mov
das
dec
scas
mov
inc
sub
mov
out
jbe
pusha
sti
jecxz
ljmp
mov
pushf
mov
push
fsub
jle
adc
rorb
inc
bound
push
sti
add
cs
xor
adc
popf
or
pop
in
ljmp
jae
das
add
les
push
cs
in
pop
adc
mov
dec
int3
ret
fnstsw
nop
lahf
lret
pop
adc
inc
fucomip
test
sbb
jg
mov
rep
and
mull
imul
loopne
dec
je
repz
and
ficompl
in
sub
int
xchg
addb
pop
enter
mov
mov
adc
movsl
xchg
lahf
mov
sbb
sbb
jp
mov
mov
aam
xchg
mov
rol
inc
and
pop
cld
in
jmp
iret
dec
in
adc
xchg
scas
insl
iret
xchg
inc
xchg
mov
xchg
ljmp
lods
ljmp
inc
mov
cmc
or
cmp
mov
xchg
jb
hlt
cli
adc
das
inc
mov
add
jmp
cmp
xor
in
sbb
gs
pop
jl
push
sub
jnp
sub
jmp
fisubl
adc
rorb
mov
mov
dec
sbb
fimull
xchg
jbe
mov
sub
or
push
pop
jecxz
sbb
flds
in
sti
push
mov
pop
imul
mov
sub
sbb
cld
adc
aaa
shrb
xor
movsl
lcall
jmp
dec
jp
repz
outsl
fnstsw
push
cmp
mov
data16
lahf
ljmp
js
push
lret
mov
test
mov
pop
xchg
sbb
imul
jp
sti
push
jle
dec
mov
je
inc
loope
xchg
pcmpgtd
inc
xchg
xor
push
jle
mov
nop
popa
out
je
cli
pop
mov
mov
sbb
adc
scas
push
mov
jp
xchg
push
inc
add
addr16
test
popa
xchg
mov
dec
idiv
xchg
xchg
xor
les
push
in
mov
push
xchg
ret
int
xchg
test
inc
into
push
xchg
addr16
sub
outsl
test
push
imul
xchg
xchg
fcomps
aam
stos
jecxz
out
pop
mov
or
pop
mov
mov
ja
inc
loope
fscale
pop
iret
inc
jp
pop
mov
out
gs
in
cwtl
jne
pop
push
sub
pop
stc
jbe
jp
call
inc
out
lods
mov
xor
push
pop
mov
pop
and
into
jp
test
xor
outsb
test
push
push
xor
xchg
lds
xor
and
lds
add
jp
dec
sbb
inc
lea
fisttpll
lret
loop
push
insb
repnz
ljmp
sbb
push
gs
lahf
sbb
in
adc
mov
mov
cli
pop
int3
out
push
mov
insb
adc
pusha
add
mov
add
stc
add
out
xor
or
out
lret
jp
mov
out
test
adcb
fdiv
inc
ja
dec
adc
cmp
aad
jnp
lods
daa
iret
addr16
insl
movsl
cmp
mov
mov
sahf
aaa
jb
fisubrs
loopne
cmp
mov
xchg
and
mov
mov
rcrl
mov
fdivrl
inc
insl
and
clc
xchg
stos
pop
xor
push
mov
dec
cmp
cmp
vpunpckhwd
sbb
into
sub
or
aas
and
rcll
jae
mov
and
jle
sbb
pop
or
cltd
mov
mov
in
and
sub
insb
sub
fs
popa
psllw
pop
jno
jge
imul
fnstenv
sub
out
add
dec
rorl
or
cmc
mov
inc
sub
popa
popl
or
xorb
adc
xchg
lret
sahf
aad
cmp
dec
mov
jne
jecxz
inc
loope
out
inc
jb
cmp
cmc
jmp
adcb
sahf
xchg
or
lret
fwait
je
or
mov
pop
mov
out
fwait
in
adc
pop
int3
repz
lods
pop
push
movsl
fisttps
mov
push
movsl
inc
int
int
stc
insb
jge
icebp
fimull
xchg
imul
test
or
or
idivl
stos
and
mull
scas
fists
test
les
xchg
rclb
sbb
mov
cmc
movsb
leave
mov
xchg
add
std
into
dec
push
push
jne
ficoms
lcall
lds
mov
cmp
dec
int
cwtl
sub
mov
mov
sbb
xor
mov
push
xchg
add
mov
imul
out
lcall
push
and
out
pop
add
push
mov
mov
push
push
dec
jle
cmp
dec
dec
pop
xchg
mov
popf
mov
pop
mov
fmuls
pop
das
inc
jb
idivl
lods
push
inc
mov
mov
scas
cld
jmp
ret
fstl
xlat
xchg
arpl
test
bound
pop
pop
jecxz
push
or
addr16
push
or
lahf
xor
xchg
out
mov
in
jne
jno
aas
call
pop
sbb
cmp
push
test
xchg
movsl
mov
fmuls
cmc
xchg
mov
les
jp
sbbb
adc
jg
jno
pop
adc
fldt
addr16
popa
sub
bound
in
faddl
cltd
pusha
jbe
cmpsl
xor
lea
rcrl
pop
dec
incb
add
fsubs
daa
push
fidivl
sub
adcb
or
cmc
and
mov
dec
sbb
pop
popa
iret
inc
pop
mov
xchg
jb
jl
lock
out
ret
ret
cmpsb
loop
fistl
enter
inc
pop
push
fldl
loopne
das
outsb
gs
sbbl
mov
orl
outsl
mov
aas
inc
fwait
and
xlat
inc
sbbl
or
xchg
mov
push
ss
loopne
addb
pop
adc
xor
idivb
pop
lock
jl
sub
andb
sti
push
pop
dec
in
mov
jg
sarl
in
daa
push
adcb
fisubs
int
loop
out
sub
mov
out
pop
les
or
and
dec
jge
insb
dec
imul
les
rcr
or
pusha
out
cmp
inc
sub
popf
imul
std
push
subb
mov
add
cmp
pop
out
push
sub
jle
in
push
or
pusha
out
xchg
mov
fwait
repz
cmp
and
jge
mov
nop
ja
mov
ret
mov
movsl
leave
mov
push
cmpsl
iret
push
mov
mov
arpl
cmpsb
mov
rcll
scas
aaa
jno
xor
dec
addr16
dec
mov
imul
das
mov
mov
add
xor
fcompl
je
cmp
mov
repz
dec
jns
in
cmp
fdiv
cld
sbb
js
pop
sbb
inc
and
hlt
pusha
mov
xchg
mov
inc
jg
lcall
movl
jp
jmp
xlat
iret
cmp
or
popf
mov
dec
rcrl
pushf
lcall
fists
stc
push
mov
xchg
lcall
iret
adc
cmp
lcall
out
inc
in
fdivrs
cmpsb
into
stos
mov
stc
loopne
adc
loopne
mov
lds
xor
xor
andb
cmpsb
jns
int
cld
jae
xchg
in
jne
filds
fmuls
inc
aad
mov
add
push
mov
adc
fdivrl
movl
stos
add
push
lds
ja
fnstsw
cmp
mov
arpl
fs
mov
movsb
sbb
xchg
adc
or
xor
xor
shlb
test
rolb
adc
imul
mov
and
xchg
or
jae
mov
shrl
into
in
lahf
add
pop
pop
aam
xchg
in
jae
movsb
iret
xchg
cmp
push
pushf
add
f2xm1
pop
jns
sub
bswap
or
jl
pop
incl
or
ljmp
sub
sub
in
loop
ss
call
lods
ret
adc
mov
sbbl
mov
into
dec
mov
xor
mov
pop
mov
or
lock
push
pop
test
jb
push
or
push
push
lret
lods
pop
inc
cli
dec
stos
fildl
sbb
add
insb
add
jae
mov
push
dec
or
popf
lds
shll
sar
cwtl
je
leave
lret
adc
dec
jl
push
adc
lods
add
mov
pop
or
les
addr16
int3
inc
stos
sub
mov
loope
and
xchg
test
pusha
test
in
jno
outsl
adc
mov
or
ja
ret
cmp
arpl
nop
not
dec
mov
xchg
or
fs
sub
ljmp
fs
lea
pop
push
std
int
ljmp
ja
stos
cmpl
test
xor
int
data16
sub
shll
mov
sub
mov
and
push
popa
mov
lret
pop
jb
call
sub
fucomip
xchg
test
dec
jbe
cmpsl
pop
loopne
es
inc
cmp
push
scas
fidivs
sub
push
jne
les
in
outsb
movsb
xchg
push
xor
pop
adc
cmc
into
push
xchg
les
add
mov
gs
cmp
leave
ja
mov
mov
cmp
nop
mov
xlat
cmp
clc
jp
cmp
pop
cmp
repnz
aas
sbb
dec
mov
sbb
std
lret
pop
dec
enter
scas
lods
and
cmpl
insl
jnp
adc
xor
movsb
push
inc
push
mov
mov
adcb
jp
std
xor
mov
sbb
data16
mov
nop
add
jne
addr16
mov
popf
aad
push
insl
push
stos
xchg
and
popa
cwtl
push
sbb
lock
es
adc
sti
movsl
or
mov
es
and
push
inc
js
lret
ss
and
fwait
es
xor
jecxz
std
mov
xchg
repnz
xchg
mov
push
outsl
cmp
dec
aad
or
jb
jne
push
sti
fdivrs
pop
div
inc
jl
mov
clc
push
gs
pop
aaa
jnp
add
adc
pusha
adc
pop
and
lds
cmpl
push
or
fstl
rcll
mov
mov
push
xchg
lcall
int
dec
mov
ds
bound
xor
into
jl
fimull
xor
xchg
push
arpl
clc
hlt
pop
iret
adc
rcll
adc
jns
mov
pop
and
repnz
adc
or
data16
cmp
stos
xchg
xor
pop
and
or
repz
fadds
mov
sub
mov
mov
inc
mov
stc
out
pop
imul
in
loopne
rcrb
in
mov
test
and
inc
pushf
stos
xchg
into
movsb
inc
pop
fcmovu
ret
xor
jnp
xchg
mov
mov
or
int3
test
and
or
xchg
lret
aas
inc
push
in
and
pop
and
in
lret
cmp
or
push
push
lret
aas
and
cmpsl
mov
lret
sub
cmp
pop
ss
mov
fidivrl
sub
cmp
lds
dec
cmpsl
loop
push
sbb
ffreep
adc
cmpsl
inc
out
add
das
push
xlat
dec
and
xchg
adc
inc
push
adc
xor
add
mov
lods
jnp
push
in
mov
mov
iret
add
mov
icebp
jmp
pop
mov
das
fnstenv
jecxz
add
adc
mov
mov
int
sub
cmp
addr16
pusha
mov
and
push
xchg
jae
cmpsb
int
fildll
or
cmp
push
mov
cld
xchg
sbb
std
xchg
int3
mov
les
imulb
jo
dec
push
and
sbb
pusha
cld
adc
adc
stc
or
adc
lds
fdivrs
inc
mov
or
roll
dec
fnstsw
cmp
pushf
pop
pop
fsub
add
add
divb
dec
scas
jbe
push
jnp
mov
push
pop
sbb
out
mov
inc
sti
push
imul
mov
outsb
ss
jg
add
sub
ljmp
dec
xor
dec
mov
sahf
pop
adcb
lock
add
int
xchg
in
loopne
jecxz
sbb
mov
mov
sub
adc
ret
xchg
imul
loopne
pop
and
dec
push
mov
xlat
stc
stos
es
jne
popa
stos
and
mov
xchg
scas
stos
mov
lods
mov
xor
cmp
scas
mov
lods
ds
mov
mov
xchg
mov
lods
int3
addr16
cmpsl
xor
jae
pop
push
out
test
cmc
mov
loope
test
and
mov
out
sub
mov
push
idivl
xor
insl
stos
out
push
sbb
sbb
daa
jl
mov
pop
aad
mov
push
and
rcl
mov
and
adc
mov
nop
mov
pop
outsl
test
sub
pop
xchg
data16
out
scas
dec
pop
dec
shl
xor
xor
out
sbb
cmp
xlat
mov
mov
cmp
lds
scas
mov
xor
mov
and
dec
negl
dec
mov
cmp
sahf
xlat
mov
xor
fidivs
in
jmp
test
jmp
jo
sub
ds
je
cltd
mov
add
pop
nop
out
pop
aad
fsub
stos
fsubr
hlt
mov
rcr
sbb
lret
enter
insl
outsb
inc
inc
mov
or
jge
jb
pusha
jb
push
jge
mov
push
fmull
sarl
lock
fnstcw
pushf
lods
stos
ffreep
lahf
add
jbe
movsb
in
mov
clc
fadds
xlat
testl
lock
adc
mov
dec
dec
sbb
mov
fcoml
call
dec
adcl
pop
cmpsl
cmp
and
mov
lock
mov
ficompl
test
aad
push
push
out
sub
jae
dec
out
cmp
ja
pusha
loop
cmpsl
pusha
adc
add
xchg
mov
std
or
inc
dec
jl
mov
push
dec
lds
lea
outsb
ficoms
icebp
push
imul
push
jo
sbb
or
mov
or
mov
ja
js
popa
sar
test
je
fcoml
pop
jbe
sti
cmpsl
and
loope
inc
test
sti
out
jg
stos
pop
lcall
or
mov
rcll
mov
jle
mov
mov
mov
nop
lcall
insl
cmp
or
pop
dec
mov
aad
stc
adc
jmp
or
jmp
cld
pop
loop
mov
sub
mov
int
fs
sub
jp
mov
popa
mov
ja
pusha
inc
sarl
ss
insb
pop
fdivs
inc
fmull
and
hlt
int
movsb
inc
mov
xchg
inc
cld
in
pop
pop
out
mov
popf
adc
sbb
adc
xchg
mov
loope
mov
idivl
sbb
and
lods
popf
xor
dec
add
lcall
daa
jo
lea
add
je
jbe
lret
mov
push
fdivrs
movsb
dec
add
mov
add
mov
mov
imul
jne
in
loopne
dec
sahf
inc
jmp
mov
jae
xchg
inc
dec
mull
cmpsb
adc
inc
popf
std
dec
mov
addr16
xlat
push
mov
adc
ja
lret
xor
test
fs
or
lcall
aaa
sub
sbb
popa
addr16
or
mov
jle
jo
shll
cmpsb
jbe
aas
mov
sbb
xchg
fstps
xor
jle
xchg
cmp
das
inc
insb
jp
outsl
push
mov
gs
outsl
mov
shrl
fildll
mov
cmp
movsb
enter
push
loopne
daa
in
cvttps2pi
cld
outsl
pop
mov
xor
xor
xchg
std
stos
fcom
dec
and
adc
aad
sbb
xchg
pop
ss
sbb
add
or
cltd
push
cmpsb
lds
fs
mov
xchg
xchg
sub
dec
push
pushf
xchg
cltd
mov
loope
insl
icebp
call
mov
insl
lods
pop
ficoml
pop
mov
mov
and
xchg
mov
mov
and
shrl
pop
pop
jbe
pop
leave
pop
xchg
addr16
push
pop
mov
stc
bound
inc
inc
mov
fldcw
xchg
call
jecxz
xchg
imul
and
scas
setg
add
pop
lds
xchg
xlat
pop
mov
cmp
test
pop
mov
bound
jno
mov
mov
scas
mov
daa
ss
sbb
mov
inc
repnz
jecxz
sbb
jns
jnp
scas
daa
dec
ret
or
idivb
nop
cmp
mov
outsl
mov
pop
cmp
sbb
jno
stos
out
lcall
nop
jecxz
in
xchg
test
sbbb
insl
rorb
pop
mov
mov
add
lret
adc
dec
sahf
popf
inc
dec
aaa
outsb
dec
lods
and
xchg
ljmp
pushf
inc
jmp
imul
les
push
dec
mov
ja
sti
es
mov
int
fdiv
xchg
adc
les
jle
or
or
xlat
pop
jns
test
adc
mov
pop
inc
mov
enter
pop
sbbb
addb
ret
insb
jno
add
jns
push
dec
mov
cmpsl
dec
sub
or
test
mull
daa
pushf
push
add
pop
xchg
ret
jge
xchg
stos
lock
mov
ret
scas
pop
stos
pop
frstor
pushf
test
jecxz
ret
add
inc
scas
mov
push
addl
repz
data16
rcrl
cli
fucom
lods
out
in
sbb
cld
jnp
cmpsb
cmp
pop
mov
cmp
pusha
popl
mov
mov
add
add
in
popf
insb
or
jl
mov
inc
cmp
xchg
ja
pop
testl
icebp
mov
sbb
daa
notb
xor
adc
sub
add
ret
sbb
add
xor
stos
scas
adc
outsl
cli
push
push
lods
out
and
into
lods
cwtl
bound
and
loop
ljmp
push
push
dec
aaa
pop
lcall
dec
mov
push
adc
and
into
es
push
jge
or
xchg
arpl
push
pop
sbb
inc
mov
mov
xor
insb
mov
mov
mov
cmpsl
and
push
mov
out
pop
daa
imul
cld
mov
lret
jle
or
insl
scas
in
icebp
or
xor
lahf
sbb
jne
imul
push
scas
aam
adc
or
gs
sbb
jg
or
jno
push
xor
sub
add
xchg
mov
cmpsl
outsb
jp
xlat
inc
imul
jne
push
mov
ret
je
xor
mov
repz
stos
xchg
divl
leave
push
jmp
movsb
xchg
cmp
jmp
xchg
push
dec
adcb
or
cmc
roll
or
cmp
jg
stos
sub
and
and
xchg
in
and
mov
iret
push
cmp
mov
mov
and
jne
cltd
das
fisubs
ja
lret
gs
cmp
mov
sub
lea
push
out
or
popf
cmp
jg
inc
stos
dec
add
loope
lods
and
dec
push
testb
mov
xchg
pushf
je
pop
fs
sbb
xlat
pop
movb
mov
xor
movsb
pop
add
mov
fcoml
cmp
sahf
imul
jl
mov
test
rcll
bound
xchg
dec
shll
mov
ljmp
jg
loop
xor
or
xor
mov
xchg
jge
jge
jecxz
inc
mov
pop
cli
dec
mov
mov
insb
mov
mov
sbb
push
pusha
bound
jmp
dec
push
cwtl
les
add
inc
incl
push
adc
stos
popf
jo
mov
fdiv
je
add
xchg
mov
ljmp
mov
cs
mov
jmp
xchg
mov
pop
fnsave
add
push
aad
decb
in
push
pusha
sub
jle
add
imulb
add
arpl
xchg
pop
dec
push
pop
mov
test
xchg
adcl
mov
sahf
push
xor
jae
xchg
pop
ficoml
sbb
dec
icebp
fadds
and
pop
push
into
xchg
jle
shl
scas
loope,pn
mov
loope
mov
lret
inc
pop
push
cs
mov
fistl
shll
xlat
dec
cs
jp
repz
and
mov
ja
fmuls
ret
scas
xor
push
inc
xor
cmpsb
pop
bnd
sahf
pop
mov
jg
lds
sub
cwtl
inc
xchg
orl
cmp
out
cmp
cmpsb
pop
jp
fldt
cmpsl
lods
push
mov
dec
push
popa
sbb
imul
xchg
stc
sahf
cmp
popf
and
inc
shrl
insl
mov
xor
cwtl
sahf
mov
in
mov
aas
jle
push
push
repz
mov
sub
add
mov
mov
imul
adc
lcall
daa
ficoms
sub
clc
mov
jmp
mov
into
cmpsb
or
xor
mov
jbe
mov
faddl
adc
test
and
add
mov
or
fnstsw
push
and
jge
inc
fs
int
and
sub
jae
and
push
pop
pop
or
mov
fsubs
inc
cmc
mov
cmpsb
mov
sbb
sub
xchg
sbb
enter
movsb
clc
cmc
sbb
insb
shlb
jnp
das
loop
stc
shr
scas
mov
push
sub
rolb
int
mov
shr
push
cwtl
sub
cmpsl
mov
pop
hlt
lahf
lods
xchg
add
ss
mov
iret
jl
sti
push
jecxz
outsb
pop
sub
inc
sbb
hlt
cmpsb
pusha
mov
push
jg
sub
test
pop
mov
jne
cli
into
add
cmp
sub
movsb
fldenv
jo
mov
xchg
fidivrl
adc
sahf
or
sbb
push
xchg
or
stos
cltd
sbb
lahf
xchg
xor
sbb
out
pop
pushf
mov
jg
mov
loope
push
pop
fs
mov
outsb
fiaddl
mov
jbe
hlt
outsb
mov
xchg
mov
mov
bound
das
xorl
loopne
lock
cmpsb
cli
jns
mov
add
mov
dec
cmpsl
cli
jbe
mov
pusha
daa
and
pop
pop
dec
test
sub
add
jecxz
and
aam
jae
sub
jl
popa
andb
repz
xchg
push
jae
sbbb
gs
cwtl
mov
mov
lds
adc
cmp
xor
mov
sbb
out
xchg
ret
push
push
mov
add
test
sub
xchg
mov
pop
xchg
sub
call
leave
out
mov
sbb
inc
rcrb
popf
add
dec
idiv
jne
push
popf
les
test
pushf
or
pop
movsb
mov
and
xor
imul
sbb
jo
dec
push
fildl
loopne
outsl
shrl
xchg
imul
jno
xor
stc
and
repnz
ja
pop
xchg
lcall
rorl
fwait
bound
mov
test
aad
rclb
out
sub
fnsave
sarb
sub
or
scas
ret
add
movsl
stos
sub
pop
mov
cmp
int3
cmp
lahf
jle
aas
push
and
loop
inc
sub
dec
cld
mov
or
sbb
mov
cmp
push
ds
adc
xchg
mov
cmc
mov
cmp
inc
pushf
inc
mov
test
int3
cmp
cltd
cs
out
test
fdivl
outsl
inc
push
jnp
sub
in
xor
test
pusha
sub
mov
adc
sahf
es
mov
jecxz
mov
addb
mov
pop
dec
cmp
ljmp
jnp
add
jg
fists
dec
sbb
aad
cmpsl
popa
or
pop
jp
xor
lods
push
insb
fwait
shll
inc
cs
shlb
mov
mov
add
inc
std
scas
sub
out
adc
sbb
xor
test
lahf
xchg
pop
inc
mov
lods
les
outsb
jecxz
enter
adc
xchg
aas
push
mov
push
and
int
subl
adcb
repnz
call
add
aaa
inc
mov
aad
out
jb
xchg
aas
mov
mov
leave
sub
mov
call
sahf
outsl
lock
add
push
mov
sti
mov
mul
jl
in
mov
push
dec
mov
xchg
xchg
fadds
repz
sbbb
add
pop
je
sub
xchg
dec
push
or
jecxz
jecxz
mov
xchg
jb
and
mov
ror
lods
xorps
decb
jne
out
popl
mov
test
iret
into
out
cs
jecxz
mov
inc
iret
std
pop
xchg
test
push
aas
mov
xchg
lahf
cmp
adc
js
inc
clc
sbb
fcmovbe
sbb
sbb
stc
popa
sub
mov
in
in
fwait
sbb
lods
bound
into
fnop
xchg
scas
cmp
inc
notb
sub
add
mov
fdivr
loope
adc
stos
xor
xchg
sub
mov
xchg
call
pop
adcb
dec
adc
sub
xchg
push
pop
lret
prefetch
daa
clc
out
sbb
outsl
and
idiv
das
and
lret
aas
int
sahf
popa
xchg
add
rcrl
xchg
xorb
fbld
mov
cmp
test
pop
shlb
addr16
loope
stos
adc
mov
push
stos
dec
testl
popf
cmp
ret
xor
and
or
cli
aam
mov
cwtl
cmp
mov
push
mov
push
mov
dec
dec
push
test
loop
outsb
stos
mov
rcrb
xlat
out
lcall
cmpsb
inc
fnstcw
nop
shll
inc
shlb
dec
mov
xor
or
add
sar
cwtl
xchg
fimuls
sbb
push
std
xor
jmp
sbb
test
xor
rclb
dec
enter
mov
xchg
popa
movsb
aad
cmp
fidivrl
add
mov
enter
add
jp
pushf
sar
and
push
fld1
and
lods
lret
push
push
fs
mov
mov
jle
mov
test
pop
adc
ret
lcall
dec
and
repz
js,pn
pop
nop
jbe
mov
cmp
daa
mov
lea
xor
sbb
nop
mov
scas
push
cmp
shrb
aaa
push
scas
cmp
sbb
in
sbb
jne
cltd
rcr
stos
xchg
and
arpl
je
psrld
pushf
clc
push
adc
sub
fisubrl
dec
jbe
pop
or
jg
in
push
dec
jns
je
pop
mov
fistl
cs
std
fisttpll
dec
lahf
xor
adc
push
xchg
xchg
loope
test
lock
fwait
sub
je
fildl
lods
enter
imulb
adcb
or
inc
aaa
cmc
jg
jecxz
inc
enter
sbbb
xor
jnp
pop
pop
cmp
jle
test
ret
inc
mov
and
mov
dec
insl
mov
pop
xchg
stc
push
pusha
scas
cld
cmp
sub
jne
negb
push
inc
inc
cmp
call
loop
movsb
jg
imul
push
into
xor
adc
andl
sub
mov
lods
popa
lret
cmp
mov
cmp
cmc
or
pop
cmp
outsl
push
mov
xor
mov
sti
cli
inc
mov
or
dec
xlat
sbb
sahf
add
outsl
dec
test
shlb
mov
icebp
mov
mov
mov
mov
in
xchg
adc
add
inc
test
dec
sub
leave
pop
test
fidivs
jp
xchg
xchg
in
xor
push
inc
repnz
xchg
push
pushf
pop
pop
scas
jp
aam
xchg
pop
imul
int
into
cmp
mov
enter
push
js
mov
mov
ja
jecxz
push
out
mov
mov
loop
shrb
and
pop
mov
cmp
pop
xlat
mov
or
sub
incl
pusha
insb
cmp
sbb
nop
imul
push
jge
mov
cld
inc
sub
ret
fwait
adc
nop
aas
dec
dec
pop
rcrb
jb
inc
test
mov
jae
mov
out
xor
ljmp
lds
or
mov
stos
out
stos
in
xor
pop
push
stos
mov
inc
push
test
fadds
outsl
out
fldcw
roll
daa
es
icebp
movsb
movb
dec
or
cltd
push
sbbl
xchg
jl
mov
negl
out
add
pop
cmp
sar
mov
xlat
cmp
mov
jns
push
mov
popf
fidivrs
xor
rcll
cltd
mov
out
mov
cltd
jnp
mov
dec
jns
mov
sbb
and
cld
jne
dec
adc
jnp
icebp
dec
repz
jl
repz
mov
or
sbb
mov
jmp
cmp
jnp
or
or
imul
addr16
sub
pop
jmp
movsl
jns
pop
push
sub
pop
add
pushf
sub
iret
test
inc
pop
pop
aam
inc
xor
fsubl
jo
push
or
mov
sti
add
sub
mov
cli
in
aam
push
sub
daa
loopne
lcall
bswap
sub
movsl
scas
adc
xchg
popa
jno
xchg
inc
pop
rolb
or
or
int3
jne
and
mov
mov
fmul
arpl
shrl
stos
out
xchg
ljmp
sub
orl
int3
push
ds
fists
xchg
mov
or
je
xchg
xlat
pop
push
mov
idivl
inc
mov
push
xorb
addr16
call
shr
pop
aad
loopne
sarb
or
cs
mov
pop
popa
adc
nop
test
xchg
push
rep
pop
nop
mov
inc
sub
insl
inc
lret
dec
jo
sbb
and
pop
cmp
inc
imul
jbe
hlt
inc
cmpb
loop
jne
xlat
mov
mov
shl
in
jg
gs
cmp
test
inc
jae
popf
mov
insl
cmp
arpl
repz
pop
cmp
push
popf
push
ds
xchg
dec
xor
pop
ret
push
cmc
addb
call
xor
ja
and
stos
xor
lahf
test
push
aam
into
mov
hlt
jae
loopne
les
fsubs
jbe
cmp
pop
push
mov
out
mov
in
and
inc
jmp
jb
dec
xor
jae
jg
lahf
xchg
mov
xchg
call
xchg
loopne
mov
push
push
test
jge
mul
cmp
inc
les
imul
jnp
mov
mov
fwait
popf
icebp
mov
mov
pop
xor
stos
push
dec
rclb
mov
sarb
popa
xlat
inc
sbb
into
mov
scas
adc
inc
cwtl
adc
test
je
dec
dec
dec
fdivrl
aas
pop
pop
bound
jge
jne
testl
pop
cmp
push
dec
sbb
push
and
cli
and
xor
lods
push
sub
bound
push
xor
add
popa
dec
mov
mov
popw
icebp
sub
int
cmpsl
pop
mov
test
outsl
out
arpl
cmp
in
push
cli
inc
fwait
mov
push
xor
cmp
jae
pop
push
push
inc
rcr
cmp
jnp
das
test
test
dec
mov
dec
test
lcall
dec
aam
xchg
sub
loop
sbb
xorl
cs
xchg
adc
into
ja
scas
or
clc
cmp
jle
lock
jae
scas
test
mov
rolb
mov
arpl
push
call
mov
jno
js
adc
cmp
inc
sahf
push
movsl
pop
rcrb
mov
in
inc
loopne
pop
and
xchg
jle
mov
psrad
lcall
fstpl
out
fnstsw
and
push
mov
add
adcb
in
cwtl
aam
imul
add
lea
ljmp
lods
push
movsb
jno
mov
cwtl
icebp
mov
daa
push
cwtl
repz
pop
arpl
pop
imul
cmp
pop
pop
cmp
inc
mov
ret
in
xchg
cmp
xchg
fisubrs
lock
sahf
lods
ret
loope
cmp
mulb
sbb
push
inc
mov
pop
out
fisubrl
jp
repz
lret
pop
xchg
inc
inc
loopne
int
imulb
lods
je
mov
jmp
lret
mov
faddl
fisubl
xor
ret
xlat
pusha
push
push
push
inc
push
mov
out
lea
sbb
fdivrs
push
mov
pop
add
test
orb
sbb
push
push
jo
test
movsl
popl
xchg
into
loopne
sbb
sub
int
lret
loopne
shlb
mov
js
filds
xchg
push
lds
ret
jne
xchg
ret
loopne
mov
testl
jns
in
call
adc
shlb
inc
push
xor
pop
sahf
and
mov
fdivp
mov
adc
jecxz
stos
dec
fldl
mov
loopne
and
fnstenv
xchg
popf
lods
stos
cltd
and
scas
loop
loopne
lret
nop
push
lahf
mov
sarb
mov
mov
jb
loopne
mov
aad
jp
mov
dec
mov
repnz
repz
scas
cmp
into
loop
fsubs
xchg
and
push
mov
push
mov
lods
out
jnp
dec
pop
jo
inc
add
repnz
test
test
adcb
jno
xor
cmpsl
dec
out
loopne
call
mov
adc
aas
incb
out
and
sub
add
sub
aas
lret
push
xchg
ljmp
or
ret
test
std
mov
mov
inc
fs
clc
mov
xchg
lock
pop
or
andb
sbb
mov
jnp
dec
inc
sbb
dec
inc
gs
jp
in
xchg
stc
mov
out
leave
shr
lds
mov
bound
and
sbb
xor
jmp
inc
mov
jno
cmp
jle
insl
or
xchg
lcall
out
cmc
mov
int3
hlt
add
out
sub
jmp
xchg
call
push
inc
sub
fistpl
push
mov
lret
pop
or
add
es
sub
ret
jp
mov
inc
cmp
push
jns
iret
xor
fistpl
insl
mov
and
hlt
mov
or
jnp
call
push
sbb
lcall
mov
jae
in
adc
mov
cmpsb
outsl
pop
loopne
cmp
mov
jg
jne
jno
pop
and
and
dec
pushf
push
push
int3
sbb
cltd
dec
add
adc
ret
cwtl
mov
insl
pushf
movsl
lret
sub
mov
lds
inc
outsb
ret
mov
clc
sbb
insb
lret
pop
xchg
push
inc
mulb
mov
arpl
jne
mov
cmpsl
mov
cmpl
or
fistpl
test
sbb
daa
loope
jbe
out
mov
pop
fldcw
jnp
clc
dec
jnp
popf
adc
test
cmpsl
movb
outsl
xchg
sub
jle
sbb
jge
pop
out
cmp
push
dec
or
call
jp
cmpsl
mov
mov
stc
and
in
arpl
stc
ljmp
fcoms
je
or
popf
cld
out
xchg
inc
in
fistl
inc
pushf
cs
mov
aas
mov
cmp
sti
jecxz
lret
pusha
test
adc
push
mov
or
sub
test
mov
loopne
lret
mov
cmp
sbb
pop
bound
pop
xchg
xchg
fidivs
or
lcall
jg
push
imul
dec
in
mov
pop
add
inc
jbe
push
sub
push
stos
popa
cmp
or
push
insl
fidivs
test
rcll
adc
xchg
pop
fstl
inc
stc
add
jo
loopne
fwait
sti
popf
scas
sub
push
lds
mov
add
je
fistpll
cli
test
xor
js
test
out
pop
mov
cwtl
mov
mov
add
xor
shlb
jecxz
into
sub
repz
in
les
mov
aas
sub
sub
cltd
jg
mov
xchg
push
ljmp
lret
test
sbbl
or
adc
mov
inc
ret
imul
jle
push
inc
push
cmp
gs
rclb
or
or
and
in
movsb
push
jmp
xor
jb
ljmp
ss
mov
orb
scas
xchg
sbb
push
mov
jne
adc
jbe
push
fsts
cmpsl
pop
stos
lahf
mov
sbb
sbb
xorb
fstpt
lods
nop
cmc
out
addr16
sub
iret
mov
xchg
mov
movaps
test
insl
mov
inc
in
pop
testb
lock
sbb
imul
xor
xor
dec
lods
push
repnz
ss
call
pop
pop
jmp
add
dec
inc
xchg
cmpsl
adc
xor
mov
and
into
cwtl
pop
loope
dec
je
sahf
and
sahf
std
daa
fmul
imul
mov
push
cmp
xor
xchg
cmpsb
mov
in
xchg
xor
imul
int3
jo
or
jg
sbb
mov
repz
xchg
lcall
push
xchg
xor
cs
movsb
sarb
push
cli
push
cmp
dec
mov
mov
data16
clc
cmp
pop
add
cmp
mov
dec
insl
inc
mov
insb
sbb
cli
pop
xor
fwait
call
sub
push
dec
cmp
mov
in
push
les
ss
fxch
cli
cmp
sbb
and
mov
les
jmp
adc
mov
clc
jp
fstpl
nop
daa
cli
and
call
test
lret
xchg
xor
mov
xchg
sub
cwtl
movsb
cmp
scas
cmpsl
sbb
mov
adc
sub
sbb
mov
addr16
cli
icebp
add
jns
dec
sub
or
xor
or
xchg
mov
sbb
fnsave
sbb
mov
arpl
int
cmc
mov
sbb
mov
arpl
icebp
pop
xchg
dec
out
push
push
sub
xchg
and
lock
lods
insb
dec
sbb
and
push
mov
push
in
mov
sbb
loope
jmp
push
fmul
fs
ja
flds
bound
sub
stos
sbb
cmp
test
add
stc
inc
push
and
mov
xchg
xchg
jg
inc
adc
out
fabs
daa
js
daa
push
push
rcll
and
std
fmull
fmuls
mov
adc
nop
loope
dec
and
in
insl
cli
mov
cmpsl
cld
stos
inc
push
pop
and
xchg
sub
fwait
adcb
adcl
push
jns
in
movsb
push
mov
andl
movsb
into
xchg
and
cld
cmp
fbld
mov
call
mov
sbb
dec
incl
or
add
das
xor
orb
mov
sbb
aad
mov
nop
and
inc
enter
mov
sub
ret
mov
movsl
fcomi
aas
jp
xor
pop
test
xchg
push
pop
int3
loopne
mov
sbb
bound
imul
and
out
andl
or
jmp
stc
insl
aaa
pop
inc
mov
cmc
mov
loope
add
and
push
mov
testb
adc
push
or
bound
loop
out
cmc
xor
js
dec
aaa
mov
movsb
inc
adc
sbb
popa
adc
push
mov
xchg
jne
push
push
and
and
shl
xchg
push
arpl
ret
aas
adc
outsb
es
cs
inc
rolb
dec
idivb
es
sub
fidivrl
cmp
dec
lock
jbe
or
lcall
fldl
mov
jae
jns
in
shlb
sbb
pop
testl
imul
mov
sub
mov
imul
das
adc
mov
dec
idiv
mov
icebp
rep
pop
xchg
ffree
jg
or
outsl
jmp
repnz
mov
push
add
xor
add
pop
pop
xor
adc
mov
insl
or
mov
fistl
mov
iret
jge
xchg
xchg
loopne
test
mov
decb
lods
shr
lods
and
jbe
mov
aam
jl
adc
ljmp
and
js
jg
sub
call
popf
icebp
cld
xor
int
scas
out
inc
pushf
lret
cmpl
dec
pop
dec
push
ja
or
lret
cmpsb
setb
loopne
loope
push
in
xor
push
shll
cmpl
cmpsl
pop
cld
sub
or
ljmp
test
and
int
in
stos
jne
cmp
jl
adc
push
pop
push
lock
fucom
popa
cmp
and
mov
sbb
shlb
in
mov
mov
pusha
fwait
mov
xchg
std
mov
sarb
mov
fucomi
cmp
je
xchg
cs
movsl
jmp
scas
arpl
add
adc
push
fidivl
fdivp
repz
xchg
mov
stos
xchg
mov
xchg
fdivr
lds
push
xorb
arpl
sub
nop
mov
mov
mov
or
cwtl
repnz
js
inc
or
testb
sub
cltd
push
scas
mov
cmp
jge
sub
call
add
dec
push
mov
repz
lea
jg
in
mov
xchg
dec
or
push
jl
daa
mov
xor
dec
cmp
out
std
shl
lods
mov
leave
cmp
insb
dec
ss
loope
xchg
mov
or
dec
call
pop
and
shl
mov
or
jnp
xchg
adc
aad
pop
cmpsb
adc
mov
popa
hlt
lahf
pop
dec
shl
dec
fnstsw
sbb
hlt
dec
mov
rcrl
rcll
rolb
jbe
and
add
enter
popf
aaa
dec
rcr
hlt
stos
in
int3
mov
mov
push
movsb
std
leave
bound
loop
sub
inc
or
mov
lret
popa
mov
pop
and
fs
iret
arpl
jno
and
lahf
mov
lcall
pop
call
clc
inc
dec
fcomp
jecxz
sbbl
push
daa
push
or
das
xchg
xchg
repz
mov
jae
dec
sub
mov
ja
imul
mov
rclb
or
add
jmp
insl
mov
jo
out
ss
icebp
bound
nop
push
insl
pop
jo
pop
sbb
jle
scas
add
test
pop
xor
mov
dec
or
adc
cld
add
out
testb
push
sbb
or
sbbb
pop
xchg
out
pusha
sarb
cs
jl
out
les
scas
pop
inc
xchg
mov
xchg
dec
mov
gs
xchg
in
jmp
xor
mov
jmp
jle
addl
or
sbb
add
sbb
and
loopne
jno
mov
js
mov
adc
icebp
bound
jg
jmp
imul
lock
fs
jg
mov
je
and
shll
std
iret
loopne
cltd
cmp
int3
sbb
in
push
mov
jbe
jbe
xchg
cwtl
popa
repz
cmp
nop
dec
mov
cmp
cmp
mov
inc
adc
adc
pop
outsb
mov
mov
sub
and
out
pushf
push
sub
jmp
decb
lock
cmp
mov
dec
mov
shrb
pop
pop
inc
sub
into
pop
pop
add
push
mov
inc
js
mov
jge
ror
pop
fcmovbe
pop
sbb
je
push
stos
push
mov
xrelease
jmp
mov
push
push
mov
scas
hlt
negb
jbe
push
push
cmp
imul
mov
dec
cmp
lods
sub
shrb
imul
outsl
jle
sbb
or
jmp
pop
aas
popf
inc
jg
pop
sub
dec
inc
xchg
shl
push
push
popf
jno
mov
dec
cmp
mov
es
bound
imul
pushf
fwait
jno
push
repnz
in
cltd
daa
cmpsb
gs
add
mov
add
push
push
adc
insb
jp
sbb
jge
sbb
mov
aad
cmp
insb
orps
mov
stc
pop
cmp
pop
cmp
mov
nop
mov
inc
push
push
out
push
stc
push
das
jne
push
lcall
aam
inc
xor
into
sub
stc
xchg
loop
dec
dec
pop
and
pop
jge
lock
pop
lcall
ret
in
xchg
ret
imul
mov
xchg
in
negb
mov
push
rorb
jbe
push
inc
js
sbb
mov
cli
iret
addr16
pushf
xor
inc
movsb
loopne
enter
mov
lcall
fs
call
sbb
xchg
and
outsb
mov
shlb
mov
lahf
pop
pop
add
push
dec
xchg
ljmp
in
mov
hlt
jmp
pop
in
xchg
aas
cwtl
dec
insl
pop
fwait
mov
dec
addr16
aaa
insb
popa
jbe
addr16
push
jmp
sub
sbb
dec
inc
fidivrs
or
daa
arpl
dec
icebp
sahf
push
cmp
xor
fistl
call
mov
ss
inc
rcl
clc
add
movsl
test
adc
pop
xchg
in
rorb
add
push
or
scas
xchg
jnp
arpl
fstpl
lret
call
insb
into
out
lahf
dec
mov
fwait
add
enter
and
xor
jp
insb
stc
jnp
mov
mov
repz
push
pusha
outsl
out
rcl
xchg
rcll
enter
lcall
cmpsl
push
je
and
and
insb
mov
cmc
inc
call
push
out
pop
mov
inc
inc
sub
cmp
jl
xor
rorl
xchg
sub
xor
imul
mov
jnp
lods
inc
pop
inc
jmp
xchg
fdivr
and
test
fneni(8087
mov
movsw
push
fistpll
mov
pop
lock
sbb
push
mov
aad
mov
cmp
add
push
das
movsb
xor
pop
pop
mov
mov
cmpsl
inc
or
jp
std
pop
mov
stos
leave
test
sbbl
cmpb
or
movsl
cld
pop
ret
adc
stos
mov
pop
aad
mov
je
and
xor
loopne
add
test
cmp
inc
ds
std
sub
and
int
push
mov
and
dec
push
into
dec
lret
mov
mov
xor
inc
cmp
aaa
test
adc
cmp
jns
lahf
cs
shll
push
or
lret
jmp
xchg
add
mov
cwtl
cwtl
xchg
jmp
push
mov
test
mov
mov
jno
daa
jo
data16
sahf
pushf
clc
sub
dec
xchg
lcall
call
test
sub
lret
xor
mov
not
jecxz
xchg
orl
fucomip
fisubrl
out
and
and
fwait
mov
ret
fucomp
sti
notb
lahf
push
out
add
adcb
xchg
sub
and
mov
cmp
in
cmp
adc
loope
dec
cmpsl
lret
xchg
aas
xchg
stos
push
xor
addr16
rcl
in
icebp
dec
in
add
icebp
fists
or
addr16
scas
test
or
dec
andb
add
cli
add
pop
in
stc
popa
inc
xchg
shll
insl
insl
notb
movsb
cmp
and
dec
test
jbe
fisubs
push
test
mov
sbb
stos
int
cmpsl
sub
mov
sbb
cld
or
fcomi
iret
pop
clc
rcrb
pushf
lea
adc
mov
and
xchg
push
cmp
pushf
test
push
mov
inc
jmp
jbe
sbb
mov
in
push
rcl
in
and
data16
out
jecxz
aas
shll
movsl
lahf
test
add
add
mov
jbe
jno
pop
sbb
add
popa
inc
cwtl
fxch
bound
push
xchg
jge
lret
mov
adc
insl
adc
popa
push
fistl
ja
stos
xor
mov
sub
lods
inc
jae
cld
mov
fwait
pusha
nop
shrl
dec
inc
jae
dec
clc
push
cmp
push
cmp
ds
push
iret
jae
mov
inc
nop
fisubrl
scas
push
popf
stc
dec
pop
cmp
mov
xor
shl
stos
adc
loopne
ret
sub
and
sti
xorb
and
stc
aaa
lcall
in
sahf
or
rcl
pop
js
sbb
aad
mov
int3
sub
pop
test
mov
gs
sub
adc
loopne
mov
pop
sbb
push
addb
imul
jae
jg,pt
in
scas
xchg
arpl
cmpsl
or
lret
push
push
rorb
xor
sbb
mov
mov
je
nop
or
cli
lock
pop
stc
xor
push
bound
or
mov
or
adc
mov
arpl
mov
sub
inc
je
sbb
dec
jb
cltd
int3
inc
leave
mov
push
testl
jbe
popf
xlat
inc
lret
in
divb
pop
mov
mov
add
arpl
daa
xor
fstps
and
mov
add
push
sub
int3
popa
fs
int
enter
jo
inc
outsl
lods
enter
lods
mov
aaa
adc
out
cmp
rcr
or
xchg
xchg
mov
xchg
fnstcw
xor
mov
rorb
jg
pop
sbb
lret
adcl
std
daa
mov
movl
ret
rcrl
mov
imul
data16
sbb
sbb
push
mov
imul
mov
jp
inc
push
mov
int
cmp
pop
aad
ret
sbb
imul
push
adc
pop
cltd
mov
pop
cmpsl
mov
sti
std
mov
mov
sahf
es
mov
movsb
fsubs
lock
pushf
xlat
push
fmuls
data16
mov
or
sbb
jmp
jl
flds
arpl
cmp
push
stos
psrlw
rolb
shll
sub
movsl
cmovno
pop
push
lcall
xchg
push
push
jecxz
imul
push
sub
and
mov
jl
adc
mov
arpl
mov
in
test
jb
mull
mov
jne
xor
and
xchg
cmpsl
dec
mov
mov
cmpsl
mov
sbb
dec
mov
inc
daa
jmp
ret
movsb
lret
jmp
xlat
loope
lcall
pusha
scas
pop
inc
mov
je
cmp
jle
neg
mov
notl
and
test
repz
xor
xor
call
ljmp
lret
insb
cmp
lea
or
mov
push
lret
or
and
xchg
dec
mov
or
in
and
cmp
jbe
data16
in
imul
ss
iret
xchg
mov
int3
inc
push
out
stos
testb
orb
into
enter
sbb
pop
xchg
mov
lods
and
push
pop
leave
fadds
mov
or
pusha
aas
cli
push
das
sub
pop
fneni(8087
std
push
popa
and
test
into
js
cwtl
cmc
dec
jg
cmp
pop
xor
sub
cmpl
lods
push
and
in
test
int3
sbb
insl
mov
mov
or
cmp
pop
inc
popa
or
stc
add
cmp
xor
test
inc
fwait
inc
mov
cmc
rcrl
enter
push
bound
or
out
aad
push
push
clc
mov
addb
pop
ss
dec
loopne
cs
sbb
push
and
es
into
cmp
jg
mov
mov
inc
test
cmc
popa
mov
out
push
cmp
lret
mov
jg
jl
mov
push
inc
enter
jle
outsb
les
in
jecxz
movsb
push
dec
pusha
jns
imul
dec
mov
mov
outsl
or
test
fldt
push
cwtl
and
shrl
jnp
jbe
enter
jmp
xchg
daa
pusha
repnz
js
insl
insb
and
mov
jmp
mov
add
sub
mov
scas
cmp
inc
mov
mov
push
hlt
andb
and
and
jg
inc
jbe
fs
cmc
xorl
cmp
adc
pop
into
pop
inc
movsb
mov
jo
mov
or
or
xchg
aas
fwait
mov
sub
or
cltd
xchg
mov
cld
sub
pop
dec
push
sub
cmp
or
push
fidivl
mov
adc
push
pop
nop
and
outsb
sbb
mov
sahf
push
jne
ds
ss
mov
hlt
dec
and
loope
movsb
xchg
cli
and
aas
das
pop
jle
out
subl
jo
and
sbb
pop
pop
arpl
and
cltd
in
scas
in
fcom
lods
dec
sbb
fistpll
jnp
push
addr16
pop
daa
ljmp
scas
das
mov
cld
pop
ror
mov
add
push
xchg
mov
cwtl
lahf
ljmp
xchg
cwtl
std
shrb
cmp
mov
pop
fbld
adc
jne
ret
fs
sub
jg
lods
jmp
andb
cmp
sub
jecxz
mov
hlt
das
bound
test
inc
sbb
xchg
shll
fs
mov
xchg
or
mov
push
cmp
mov
mov
push
pop
pop
leave
lock
jl
cli
mov
pop
roll
adc
loop
popf
pop
pop
add
push
mov
inc
mov
xchg
hlt
push
adc
cs
fmuls
stos
mov
and
sub
cld
pop
dec
loop
pop
pop
mov
xchg
or
sahf
lcall
mov
mov
test
enter
jne
inc
mov
call
pop
in
mov
loope
jbe
jp
xchg
add
mov
jmp
and
xchg
cmp
push
add
adc
mov
jnp
cwtl
aad
popa
dec
mov
into
iret
nop
cmp
sbb
jg
adc
ror
insl
insb
popa
imul
mov
pop
mov
jle
mull
xchg
mov
mov
mov
xlat
mov
cmc
xor
insb
sarb
mov
stos
cmpsl
rcrl
cmc
es
xor
leave
shrb
xor
loop
cltd
sub
add
aaa
mov
in
push
or
loopne
push
dec
mov
pop
mov
imul
and
icebp
jp
loop
shlb
xchg
int3
sub
shlb
filds
mov
fldcw
mov
mov
xchg
adc
inc
leave
gs
test
fs
adc
jae
cmpsb
xchg
gs
lods
cmc
fisttps
pop
lret
pusha
mov
ficoms
rorl
mov
pop
xchg
fs
jp
lcall
cmp
adc
fstl
out
push
pop
jns
mov
xor
dec
scas
sub
jne
lock
loop
inc
fldz
inc
mov
cs
mov
jecxz
sub
addb
in
xor
jbe
std
mov
ret
loop
bound
shrb
daa
mov
adc
xchg
das
adc
data16
mov
mov
dec
mov
pop
sub
arpl
stos
negb
ss
aad
fcompl
stc
push
fmull
repz
inc
mov
shl
xor
int
and
sbb
scas
cld
adc
enter
pop
mov
fists
xchg
xchg
lcall
pop
xchg
and
in
push
jnp
andb
cmp
outsb
pop
mov
pop
mov
sub
add
aaa
jb
jle
xchg
les
loopne
cmpsb
jle
das
cmp
lods
and
ja
sub
inc
mov
into
pop
jp
add
mov
rcrb
mov
adc
xor
mov
cmp
push
push
or
ljmp
in
mov
mov
cmp
xor
inc
push
mov
sub
mov
xchg
loope
int
xchg
mov
sub
push
push
or
shrl
and
pop
aas
push
outsb
lret
cmp
fidivrs
test
inc
and
aas
sbb
mov
mov
stc
push
in
push
or
cmc
test
push
pop
cmp
xchg
cmp
adc
popa
pop
mov
sub
inc
jecxz
xlat
jle
xor
addr16
push
xchg
push
and
and
mov
fdivrp
mov
xor
dec
loopne
push
lret
cmp
call
pop
xchg
scas
inc
jle
jl
negb
lock
push
dec
sub
xor
sarb
popf
push
mov
cmp
scas
mov
push
jmp
pushf
add
in
xchg
jl
dec
mov
dec
ja
jg
fisttpll
sahf
addr16
lcall
mov
pop
push
fmuls
adc
push
sbb
scas
mov
mov
mov
imul
cli
loope
daa
loope
dec
in
int3
push
and
hlt
jae
mov
cmp
scas
sbb
aaa
sub
loopne
or
lds
sub
pushf
cmp
dec
incl
mov
mov
jbe
push
sub
imul
mov
mov
lock
inc
lret
mov
sub
hlt
xor
xchg
push
adc
stos
insl
jo,pt
pop
xor
dec
in
pushf
jnp
jecxz
je
jl
or
add
or
fstpl
jmp
jp
push
das
jmp
imul
out
cmpsl
inc
xchg
and
adc
in
sub
das
sarb
and
push
sbb
push
jl
insb
xchg
repnz
push
lods
lret
sub
add
cmc
cmp
ds
mov
xchg
cmp
adc
mov
sub
rorb
push
testb
jge
test
jb
lds
push
push
std
mov
dec
cmp
imul
xchg
jo
insl
shl
jg
nop
cld
and
jmp
call
inc
iret
cwtl
xchg
push
fstpl
jae
nop
sbb
sbb
mov
xor
les
movsb
popf
mov
shl
stos
pop
jbe
add
fisttpl
lahf
out
addb
sbb
dec
add
iret
mov
into
ds
loope
imul
mov
xchg
jg
inc
mov
lea
sbb
jbe
aad
jb
lods
pop
loopne
pop
movhps
lahf
cld
dec
adc
pop
push
xor
ficomps
sahf
aas
mov
cmpsl
dec
push
mov
xorb
jmp
mov
or
dec
js
out
pop
xchg
add
cmp
imul
add
mov
and
mov
jl
push
sbb
insb
cltd
dec
jb
pop
pop
add
mov
stos
jg
fldcw
mov
stos
mov
roll
or
dec
push
and
inc
push
ds
cmp
fisttpll
testb
cmp
jne
mov
jl
out
dec
pusha
pop
call
arpl
lds
push
xorl
ja
jp
add
or
xchg
rcr
popf
daa
dec
inc
imul
sarb
loope
jnp
inc
in
jbe
cwtl
jp
testl
mov
pop
xor
push
jns
cmpsl
and
sub
or
lods
inc
shll
out
and
add
flds
outsl
daa
jg
adc
enter
cld
enter
mov
dec
scas
mov
sub
mov
mov
orb
loopne
ss
dec
pop
mov
sbb
pop
arpl
frstor
pcmpeqd
lods
mov
ret
xor
clc
jl
xchg
xchg
push
jb
mov
dec
xchg
sbb
inc
push
mov
push
adc
rcl
jb
fsubr
fsubl
pop
fadds
sbb
cli
aas
outsb
sub
sahf
jmp
rclb
pop
in
or
and
xchg
movsb
and
cmp
cs
cmp
xchg
rcrb
add
idivl
push
mov
lock
add
or
inc
pop
xchg
mov
push
pushf
nop
mov
rclb
ds
push
add
lods
adc
ret
push
sub
ss
and
push
or
push
and
dec
inc
jecxz
int3
pop
mov
cmpsl
add
adc
and
inc
jmp
stc
sbb
mov
ss
sub
pop
pusha
movsb
cmp
pop
dec
ljmp
mov
sub
rolb
sub
push
mov
shrl
ja
sti
inc
sahf
outsb
aaa
stos
jmp
fistps
fiadds
jecxz
push
fdiv
sahf
lcall
cs
pop
ficoms
mov
mov
or
fldcw
in
mov
outsb
or
out
pop
loopne,pn
fnstenv
out
inc
inc
pop
les
mov
andb
dec
mov
ja
push
fs
mov
and
add
scas
xchg
fsubl
mov
jg
mov
movsw
les
adcb
xchg
popf
push
test
lret
ljmp
cltd
push
lahf
lret
divl
cmp
nop
cmp
add
push
mov
notb
test
mov
jnp
inc
push
add
sbb
mov
and
push
fs
dec
movb
or
mov
pop
aad
popa
mov
dec
inc
ret
mov
adc
pop
fwait
jno
test
stos
lcall
je
popa
ret
push
adc
scas
aad
pop
xchg
loope
jmp
mov
sub
call
mov
mov
dec
loope
or
or
divb
xchg
mov
lahf
rorb
rcll
push
imul
adc
xchg
adc
mov
loopne
adc
dec
dec
mov
repnz
adc
mov
push
mov
sbb
and
xchg
add
clc
bnd
addl
push
jo
cmp
mov
movsl
sbb
test
sub
mov
xchg
fwait
jae
pop
xor
icebp
pop
jg
inc
mov
mov
fsubl
xor
in
cmpsl
outsb
test
arpl
stc
cmp
flds
fsubrs
mov
enter
ljmp
jb
sbb
mov
arpl
stc
mov
in
fstps
subb
xchg
or
stc
jg
xchg
dec
setnp
icebp
inc
sub
lods
test
jp
cmp
std
mov
add
add
nop
pop
sbb
cmp
ficomps
pop
call
enter
or
jmp
clc
das
mov
cmc
fistpl
mov
fisubrl
ds
pop
adcb
lret
or
inc
sbb
and
and
mov
cmpsb
jmp
mov
and
mov
les
icebp
stc
push
outsl
pusha
mov
xchg
shll
add
aas
dec
iret
push
out
add
jo
pop
in
and
adc
mov
inc
mov
bound
insb
sbb
mov
mov
lret
lret
lahf
dec
push
nop
push
fimuls
xor
adc
mov
sbb
movb
repz
jg
push
enter
push
fsubl
mov
flds
inc
sbb
bound
mov
int
outsb
ja
xchg
cld
shl
int
stos
jecxz
push
xchg
out
inc
std
mov
adc
xchg
cmp
xchg
insl
push
or
xor
mov
cltd
inc
push
jno
fadd
les
adc
orl
adc
push
push
pop
adc
filds
fildll
loopne
adc
adc
pop
mov
bswap
cli
in
or
inc
push
repz
fistps
cmp
iret
in
adc
outsl
jmp
notrack
sub
stos
adc
xchg
dec
sub
in
xchg
sbb
jnp
iret
sub
or
inc
jecxz
leave
std
mov
fs
int3
jno
pop
cmp
adc
adc
push
call
xor
fs
inc
scas
lret
inc
outsl
sub
push
xor
mov
in
mov
and
add
dec
nop
and
shlb
lret
into
notl
jo
sbb
mov
mov
dec
shrb
lods
addr16
add
movsl
push
ds
mov
cli
push
test
mov
push
aam
outsl
push
fisttps
movsl
pop
cmpl
inc
mov
in
test
idivl
cs
jns
out
lods
movsl
stos
inc
je
cmc
and
pop
into
loopne
push
mov
xor
sub
dec
popa
nop
sub
sahf
mov
mov
mov
lods
xchg
adc
cmp
mov
xor
rorb
enter
sbb
push
pop
out
push
ja
js
xor
jg
and
or
push
mov
incb
pop
std
rcrl
add
and
sub
aaa
fistl
call
out
adc
in
pushf
hlt
adcl
leave
stc
loopne
pop
mov
mov
pop
mov
sub
hlt
jne
shll
dec
cmp
iret
mov
adc
cmp
stos
dec
rcrb
add
cmp
pop
dec
neg
pop
jbe
mov
pop
add
scas
jbe
push
xor
push
mov
sub
lea
sub
dec
insb
imul
rcrb
or
lods
mov
movb
aas
daa
jmp
or
cmp
sarb
cmc
sbb
and
imul
loopne
mov
cmp
dec
jnp
int3
imul
arpl
cmpsl
cmpxchg
mov
mov
sub
pushf
repz
mov
mov
loope
fnsave
ds
adcl
lret
jbe
xchg
adc
sub
movsl
sahf
stos
jae
dec
test
pop
in
stos
dec
mov
repz
fsubl
cmpsl
out
test
iret
jge
in
push
cmc
add
mov
mov
sarb
icebp
lods
cmp
lods
daa
adc
pop
and
movsb
pop
sbbb
test
aas
inc
repz
jno
out
sbb
inc
fildll
cmp
cmp
lcall
push
adc
pop
addb
sub
test
push
std
idivl
sarl
rcl
dec
sub
mov
into
jg
xchg
jle
sub
in
or
adc
sbb
xlat
pop
mov
pop
jmp
inc
les
push
inc
adc
xchg
mov
pushf
fiadds
mov
push
and
int3
cld
addr16
inc
push
in
jnp
adc
pop
loopne
sbb
inc
fnsave
cld
adc
sbb
sbb
adc
dec
ja
dec
test
cld
or
dec
mov
push
loope
push
mov
lea
and
jle
cli
pop
xlat
push
popa
rol
jne
push
inc
fwait
adc
lds
cli
aas
add
cmpsl
jo
insl
out
js
fsts
sahf
cmpsl
ret
inc
mov
sbb
lea
pop
jp
arpl
add
hlt
inc
std
lods
jae
imull
jbe
popa
mov
dec
js
inc
jne
inc
jl
inc
arpl
lods
xchg
imul
pop
fimuls
xor
sub
push
push
dec
or
push
xchg
pop
pop
push
push
or
lret
xor
push
sub
sbb
mov
out
or
insl
adc
adc
cmp
shl
js
and
xchg
out
xchg
xor
dec
mov
cmp
rorl
popa
in
inc
mov
xorb
xor
cmp
lods
sbb
adc
sub
enter
jae
mov
sarl
leave
or
test
decl
and
in
inc
stos
in
nop
or
aaa
fbstp
inc
dec
sbb
sbb
inc
and
and
fwait
into
hlt
pop
jg
xchg
outsl
or
loop
mov
dec
lret
xor
testb
push
shll
sub
inc
jae
cltd
imul
lock
pop
stc
ds
divl
jmpw
es
cmp
lock
lret
fidivrs
fcoml
jge
sub
adc
xchg
cld
sub
mov
sbb
sti
jmp
ljmp
jl
or
mov
fucomp
outsb
int
movsl
repnz
or
int
idiv
nop
xor
and
divl
push
into
int3
jno
inc
mov
rclb
sbb
pop
adc
mov
ja
out
mov
mov
jecxz
and
jae
out
mov
clc
movsl
and
jae
js
and
out
movsl
push
cmp
xlat
loopne
mov
aam
nop
cmp
pop
hlt
emms
hlt
mov
out
xchg
jg
xchg
and
enter
jnp
sbb
jae
mov
sbb
insb
out
outsl
rcr
aas
and
das
cld
enter
clc
push
mov
fwait
out
cmc
dec
pop
fists
cmp
ja
mov
jae
test
rcl
push
fwait
and
sbb
dec
dec
inc
inc
and
sbb
push
or
insb
ja
push
outsb
xor
mov
sbb
out
sbb
jle
ds
sbbb
dec
ds
cmpsb
or
mov
lock
sub
xor
or
dec
pop
pop
and
fnstenv
cli
pushf
jbe
mov
jbe
or
imul
push
imul
in
pop
jns
gs
xchg
add
xchg
dec
imul
sti
pop
leave
sar
adc
std
inc
xchg
add
jbe
mov
mov
call
cmc
or
ljmp
xor
fcmovb
inc
mov
ja
adc
mov
ret
adc
and
jbe
push
insb
mov
jae
enter
cs
sbb
shlb
arpl
fistps
aaa
leave
jb
jae
dec
sub
dec
bound
cmp
pop
daa
and
fadds
jl
aad
or
lcall
imul
dec
add
xor
andb
dec
and
subl
cmp
push
ja
iret
aaa
in
add
lret
sbbb
mov
sbb
test
int
sub
adc
hlt
mov
loopne
adc
xor
and
int3
inc
out
mov
pushf
les
xchg
psubd
hlt
enter
bound
das
cs
icebp
jmp
inc
in
jae
in
subb
fsubrl
jno
in
cmp
and
pop
cmpsb
mov
push
rcl
push
adc
adc
stos
testb
inc
add
inc
inc
or
pop
pop
ds
test
xor
hlt
ljmp
xchg
mov
shrl
insb
scas
xchg
and
js
push
insl
push
loope
push
mov
inc
mov
lds
rcl
lods
mov
jns
pop
outsl
fisttpll
sbb
lcall
ds
mov
shlb
out
lds
or
ret
ds
jg
sbb
inc
add
jbe
int
xor
push
and
push
dec
adc
fidivrl
inc
pop
xchg
les
and
test
cmp
push
cmp
inc
stos
or
xchg
scas
push
sbb
push
jle
pop
push
fsubr
xchg
leave
jns
sub
es
ds
adc
fidivrl
daa
add
popf
lods
test
sub
jo
leave
jg
jge
mov
mov
sub
xor
dec
push
jo
in
ja
dec
adc
xor
add
arpl
in
subb
mov
sub
sub
push
push
outsb
push
xchg
xchg
repnz
and
mov
sbb
test
out
nop
adc
xor
pop
nop
jg
sbb
push
add
mov
gs
outsb
das
insb
fsubrl
call
pop
jb
sbb
pop
call
dec
mov
pop
mov
mov
stos
xlat
cld
les
cld
jge
jge
inc
push
into
and
aas
mov
adcb
and
gs
push
push
cmpsb
fists
lea
test
shrl
popf
lds
or
mov
cmp
inc
movsl
cmp
inc
xor
pop
and
pop
out
sub
add
aad
scas
outsb
outsb
cmc
fwait
dec
xchg
cmpl
jo
mov
adc
or
or
jae
add
cmp
mov
push
or
mov
test
jns
inc
sub
and
push
clc
dec
out
mov
and
add
push
jmp
subb
out
adc
jnp
mov
fistpl
jl
sbb
andl
cmp
ja
shll
pop
mov
xchg
cmpsl
jnp
std
and
adc
insb
repz
frstor
std
push
loop
ljmp
into
jb
sarb
inc
sti
ffree
mov
xchg
mov
mov
xor
ret
cmp
sbb
lahf
in
in
repnz
inc
cwtl
fcomp
and
lret
mov
js
jmp
push
out
sbbb
sub
aam
push
imul
xchg
cmpsl
adc
imul
out
jecxz
pop
fs
sub
inc
add
or
movsl
dec
cs
mov
xchg
dec
mov
and
adc
xchg
xlat
test
mov
xchg
mov
jle
stc
add
xor
xlat
lods
push
inc
inc
mov
jbe
xchg
xor
ja
enter
xlat
jnp
mov
xor
mov
das
enter
xchg
mov
mov
jo
dec
or
add
and
xchg
xor
xchg
rcrl
or
mov
shlb
adc
incb
xchg
loopne
stos
dec
and
inc
into
mov
dec
xor
imul
mov
stos
pop
movsl
stos
ja
push
scas
add
rcrb
mov
jns
shr
insl
mov
lret
clc
daa
popf
mov
push
in
dec
addr16
xchg
or
jnp
rclb
out
mov
outsb
sbb
push
mov
jnp
xor
and
out
cmpsl
scas
movsb
cmp
xchg
xor
push
fldl
push
pop
dec
jbe
ret
push
aam
xchg
mov
pop
movsb
mov
push
sbb
inc
rcrl
js
dec
mov
adc
xchg
cwtl
xchg
out
push
add
jb
popa
call
je
shl
icebp
bound
mov
mov
loope
mov
lret
fcmovnbe
js
xchg
sbb
add
das
mov
add
lcall
and
fsubl
push
mov
fcmovnu
adc
sti
sub
jmp
push
ja
addr16
jae
cmp
and
repnz
insl
loopne
mov
jmp
es
push
push
pop
fidivl
in
fs
and
mov
mov
mov
push
jns
or
loop
dec
sti
cmp
cmp
cs
mov
loopne
inc
mov
daa
rorl
xchg
mov
mov
jbe
and
add
gs
scas
in
aaa
pop
mov
pop
adc
sarb
xor
iret
mov
mov
jge
jns
adc
ja
cmpsb
dec
sbb
jecxz
push
in
mov
movsb
pop
cmpsl
fadds
movsb
imul
push
rcrb
xchg
cld
sub
mov
mov
leave
repnz
cmp
jge,pt
sbb
scas
das
mov
dec
mov
and
popa
or
lods
les
jecxz
enter
repz
or
mov
push
fcompl
stc
call
xor
popf
aaa
mov
cmpb
or
adc
enter
xchg
iret
or
jae
xchg
gs
sub
lret
sbb
outsb
ret
mov
sbb
lds
nop
lods
and
dec
sbb
repnz
fyl2x
inc
sub
cltd
dec
scas
mov
push
mov
xor
sbb
outsl
inc
repnz
aam
lods
add
faddl
jbe
mov
xor
fcomps
cs
rcr
pop
test
pop
lods
xorb
leave
cmp
inc
imull
cmpsb
or
dec
sbb
push
mov
or
jl
addr16
adc
lret
inc
push
dec
popa
mov
sub
jnp
arpl
movsl
ljmp
sbb
mov
sub
cs
mov
push
sahf
or
out
xor
jl
or
loope
or
fwait
and
shl
daa
jnp
mov
or
mov
sub
les
mov
sar
jae
or
jmp
jnp
loop
or
xor
cs
mov
jbe
inc
mov
in
xchg
sub
dec
je
jae
pusha
jp
dec
aaa
dec
cli
dec
cltd
ja
in
adc
lret
imul
and
cmp
pop
popf
cld
mov
sahf
fcomi
sub
adc
xchg
jno
pop
mov
ss
mov
push
xchg
ret
push
js
xchg
adc
in
and
arpl
xchg
sbb
pop
in
mov
repnz
aad
mov
jno
cs
sub
pop
out
push
insb
push
push
pop
outsb
push
mov
scas
pop
lret
negb
inc
push
dec
adc
jbe
jecxz
pop
out
cmp
push
adc
fimull
jle
loopne
xchg
stos
repnz
adc
jbe
cmpb
and
push
test
test
add
mov
mov
out
stos
mov
xor
push
std
into
popf
in
and
pushf
adc
jmp
addl
pushf
dec
decb
fstp
or
pop
repz
push
fwait
inc
mov
arpl
sti
xor
lock
fldl
jg
insl
in
inc
and
and
pop
and
lret
daa
cmpsb
stc
popa
mov
dec
and
adc
mov
jl
or
daa
cwtl
push
mov
mov
xor
add
ror
fistpll
sbb
imul
add
sbb
or
mov
mov
aam
push
push
in
dec
jnp
mov
jmp
jp
jge
negl
mull
mov
gs
lret
cmp
jmp
subl
xlat
outsb
xor
lds
mov
push
fldl
jecxz
mov
fsubrl
and
xchg
dec
mov
xchg
mov
popa
shl
push
push
pop
inc
out
aas
jo
ret
adc
outsb
in
jae
add
subb
sbb
je
pop
lods
nop
mov
adc
rcl
inc
std
xchg
aas
in
out
cs
push
and
stos
jne
fbstp
pop
mov
jg
sbb
xlat
repz
xchg
sbb
fsubs
cmpl
fwait
mov
xchg
rorl
scas
sti
fwait
test
add
cmp
icebp
iret
jnp
xchg
jle
insl
imul
sahf
adc
fnstenv
aaa
inc
inc
orb
mov
ret
shl
sahf
sub
stos
sbb
das
inc
pushf
cmp
into
jmp
jae
nop
test
roll
sub
pop
xor
fldenv
push
stos
jmp
add
push
loopne
jmp
sarl
jns
bound
mov
shlb
int
xor
xchg
negb
std
arpl
mov
mov
divb
inc
cmpsb
aam
out
mov
xchg
daa
xor
dec
repz
adc
cmp
fisubrs
jp
lret
cwtl
push
dec
insl
daa
ret
dec
push
mov
subl
sbb
dec
push
pop
push
jns
sarb
insl
xchg
mov
xchg
and
lds
loop
shll
mov
out
mov
jle
add
dec
push
inc
mov
sub
hlt
jmp
dec
sbb
rolb
dec
aad
adc
rclb
add
sub
popf
add
dec
mov
dec
xchg
test
ja
mov
jmp
insl
shl
and
xchg
mov
arpl
rorb
jmp
dec
mov
mov
into
stc
jne
push
test
fdiv
sub
mov
loopne
repnz
adc
xchg
or
mov
dec
mov
inc
fsubrs
outsb
jp
test
jp
out
test
and
sahf
bnd
pop
mov
or
mov
push
fs
cmp
insl
decb
lods
sub
imulb
cmp
lret
arpl
rcr
lret
mov
pop
pop
xchg
push
mull
sbb
push
fsubrl
stc
cltd
push
lods
movsb
pop
jl
sub
mov
aaa
lock
das
push
xlat
ret
stc
xchg
xor
push
shll
xchg
cmpsb
pop
or
popfw
outsb
movsl
rolb
sbb
psubusb
cmp
insl
out
xor
packuswb
clc
xor
add
or
pop
cli
sbb
xor
cmp
sub
out
cmc
int3
pop
repnz
or
push
int
shr
mov
mov
mov
jg
subl
sar
dec
out
xchg
xlat
stos
fwait
cld
js
ret
rclb
adc
scas
xchg
sahf
pushf
pusha
mov
xchg
test
pushf
popa
sbb
cmc
pop
clc
push
sbb
ret
pop
loope
jbe
or
xchg
jns
xor
xor
xor
xor
loopne
pushfw
adc
or
dec
fidivrl
movsb
mov
pop
stc
js,pt
pop
dec
jno
add
mov
push
jnp
cmp
sbb
pusha
mov
mov
mov
mov
push
or
addr16
mov
jp
out
pop
pop
xor
clc
mov
pop
jbe
sbb
pop
and
adc
sub
sbbl
les
mov
jnp
repnz
stc
data16
or
pop
insl
pop
mov
lret
pushf
or
dec
daa
pusha
mov
push
adc
popa
shll
daa
bound
dec
mov
fs
and
sub
rclb
pop
bound
or
adc
int
ja
cmp
push
adc
inc
inc
jle
push
cmp
cmp
pop
mov
jmp
sbb
mov
pop
and
scas
xor
cmp
pop
xchg
lods
lock
jecxz
stos
jecxz
dec
mov
in
ret
pop
mov
add
add
fwait
cmp
fisttps
cmp
shr
mov
mov
outsl
pop
imull
js
cmp
decb
jl
aas
xor
cmpsb
push
cld
mov
icebp
popa
jne
sub
aaa
xchg
std
divl
jns
fisubl
cmc
es
mov
ja
lods
roll
xlat
or
pop
das
jmp
ss
shll
mov
ja
fucomp
jl
sbb
inc
es
xchg
mov
jmp
std
fdivrl
or
inc
in
add
and
aam
or
xor
jbe
leave
dec
cltd
sub
sub
jb
jecxz
pusha
imul
mov
test
pop
daa
nop
call
sbb
dec
aam
call
stos
jbe
inc
pop
pop
add
xchg
imul
sub
mov
sbb
out
mov
leave
jns
out
sbb
pop
push
mov
lods
jns
inc
mov
mov
lds
ffree
scas
jmp
and
cli
les
jp
insl
jne
or
inc
pop
xchg
test
das
in
cmp
pop
jno
cmp
test
mov
lret
out
adc
jbe
push
popa
lcall
push
mov
ds
dec
sbb
stc
repz
mov
aaa
data16
push
iret
daa
cmp
add
pop
mov
xor
xorl
mov
loop
ret
jecxz
ss
dec
addr16
adc
pop
pop
int
adc
dec
pop
mov
sub
hlt
call
cld
mov
sub
movl
std
inc
out
pusha
ja
fstps
lea
pop
out
xchg
jnp
cli
xchg
scas
es
dec
jecxz
mov
addr16
and
adc
das
lahf
movsb
pop
xor
mov
cmc
pusha
shr
jecxz
sbb
out
inc
jp
js
out
mov
inc
into
hlt
cld
push
mov
gs
inc
lcall
dec
call
cwtl
push
in
fnsave
push
push
loope
xor
adc
or
es
js
sub
mov
out
push
or
xor
adc
ret
xchg
mov
in
mov
or
int
outsb
sub
mov
into
mov
imul
cmpsl
mov
inc
daa
dec
loopne
pusha
jmp
jnp
mov
rol
movups
mov
mov
aas
scas
outsl
pop
cmp
jb
into
mov
fcmovne
mov
and
xchg
jns
add
cwtl
adc
pop
daa
fidivs
sbb
call
jmp
mov
mov
scas
lock
testb
and
jp
pop
jae
mov
cmpsl
mov
pop
jbe
scas
jno
lret
mov
and
jmp
popaw
or
or
out
js
push
and
and
pop
das
mov
jp
insb
ds
gs
xor
xor
adc
enter
arpl
cld
mov
add
ljmp
cs
gs
mov
idivl
or
xchg
xchg
jle
and
push
pushf
mov
sbb
shll
pop
cli
cltd
jns
jmp
adc
in
nop
mov
bound
mov
mov
push
jg
adc
sar
jnp
scas
mov
cmpsb
xor
fstps
jb
call
pop
loopne
sub
jecxz
mov
sbb
icebp
in
jnp
shlb
int
loope
shll
flds
mov
cmc
sub
in
inc
or
sub
push
aas
mov
repz
rcrl
mov
and
xor
insb
mov
sbb
cmpsb
dec
out
sub
sbb
bound
mov
mulb
inc
push
dec
jg
fsubrl
dec
jg
xchg
cs
jp
cmc
push
cli
cmp
sub
loop
mov
dec
dec
inc
mov
and
inc
adc
pop
popf
add
and
mov
fsts
int
add
stos
mov
lods
mov
dec
test
cmp
and
out
gs
cmp
pusha
xor
jb
push
jmp
or
xor
xchg
fiadds
lcall
nop
cmp
fs
jne
lret
xchg
repz
xor
testl
iret
mov
pop
push
inc
or
fisttpl
nop
popa
lods
pushf
js
repz
dec
sbb
mov
mov
cmp
repnz
add
pushl
sti
jl
in
enter
mov
xlat
jge
icebp
popa
jmp
das
jmp
fdivrs
xchg
popa
mov
cmp
imul
das
pop
in
adc
xchg
std
add
push
xchg
mov
sbb
adc
mov
and
or
dec
cmpsb
in
lret
and
and
mov
mov
xchg
or
jmp
test
mov
mov
mov
int3
pop
and
insb
out
out
fidivrs
mov
push
mov
outsb
lret
pusha
mov
les
cmpsl
adc
and
fisubrs
pop
roll
push
jge
sbb
xor
or
mov
test
jb
test
push
orl
and
out
sti
aam
push
push
arpl
js
out
push
lret
scas
add
mov
jle
stos
jns
pop
jg
or
bound
add
mov
arpl
icebp
insb
fsts
in
mov
adc
xor
les
idiv
mov
cmp
lret
stos
repz
push
loope
xchg
and
ds
mov
repz
and
into
inc
inc
push
imul
cmp
stc
add
imul
jecxz
or
rcrl
push
sti
sbb
or
cmp
sbb
int3
stos
pop
push
add
mov
ffreep
mov
fldcw
xor
lock
inc
mov
mov
xchg
imul
ds
pop
dec
ljmp
fnstsw
mov
ret
mov
sub
lcall
scas
ss
jp
js
sahf
sbb
dec
popf
mov
inc
js
mov
outsl
fcoms
xor
mov
in
add
xchg
xlat
rcl
repnz
jg
push
pusha
adc
lea
mov
les
inc
or
sub
xchg
subb
lret
loopne
push
outsb
movsl
roll
sub
sbbl
je
sbb
mov
lahf
sub
loopne
jo
mov
push
push
dec
sub
push
push
into
jb
leave
loopnew
ja
dec
and
mov
or
rcl
popf
aas
inc
cli
sar
jecxz
xchg
mov
jo
pushf
pop
test
out
jno
sub
inc
shlb
pop
push
dec
imul
sub
cwtl
xor
popfw
cmp
cld
leave
lea
std
mov
inc
outsl
mov
out
pop
std
std
inc
bound
insl
xor
push
ret
enter
je
add
pop
jbe
xchg
jbe
loope
fcompl
enter
cwtl
or
out
pop
sub
cmc
loopne
push
pop
mov
cmp
ret
jmp
fadds
stos
inc
out
insl
jno
jge
xchg
ds
adc
fbstp
jge
repz
into
sub
adc
mov
and
sbb
leave
xchg
mov
ret
sarb
push
js
shrd
xchg
xchg
sub
fcomps
mov
and
sub
fmul
sbb
lcall
ret
xor
cmp
mov
sbb
les
ljmp
adc
in
sarl
jne
sub
jle
mov
es
xor
add
lea
sahf
nop
sbb
es
stos
mov
arpl
aaa
push
outsl
adc
pusha
xor
lock
aam
lods
fldt
jb
xlat
insl
sahf
add
dec
test
xor
push
ficomps
shlb
mov
test
mov
push
cmp
sub
ja
mov
mov
adc
jge,pt
dec
dec
test
xlat
repnz
mov
mov
ret
sti
pushf
ja
sub
add
sub
pop
inc
rcrl
jecxz
sbbl
or
cs
js
xor
jge
dec
mov
rcrb
xchg
aam
aad
div
xchg
imul
in
sub
cmpsb
sub
cmp
mov
xor
push
ret
int
cltd
fadd
sub
aad
popf
push
ja
sub
cmp
xchg
sti
sti
in
shlb
and
iret
lock
stos
movsl
test
popa
jo
pop
mov
xchg
sbb
vpmulhuw
fs
or
cmp
imul
rcl
movsb
movsb
test
push
jns
sub
jns
ss
popf
jge
movsl
push
pusha
cmp
das
repz
mov
addr16
fstpl
addr16
jg
pop
sahf
mov
inc
jnp
sub
push
imul
jle
mov
repz
mov
add
je
adc
mov
gs
mov
or
mov
xchg
rcll
or
std
xchg
out
jp
icebp
mov
mov
fidivs
lret
and
daa
stos
jl
scas
jp
sub
sahf
mov
imul
xor
or
mov
dec
fcomp
insb
gs
adc
std
adcl
mov
popa
adc
movsl
clc
cmp
mov
push
sbb
popf
fsubs
sub
das
sbb
popf
mov
mov
cmp
int
dec
cs
mov
test
xor
push
add
pop
xchg
movsb
and
or
pop
test
mov
xor
outsb
ljmp
xchg
push
in
mov
dec
dec
sti
sbb
ja
push
sarb
and
loopne
jb
stos
loop
jo
xchg
jnp
or
push
mov
cmpsl
and
push
out
push
sub
jno
cmp
js
and
gs
in
mov
mov
mov
mov
das
loopne
xor
dec
std
imul
mov
arpl
mov
mov
int
cmp
sbb
push
jno
sbb
jo
xchg
or
adc
cmp
pop
xor
adc
pop
xor
mov
sub
enter
adcl
inc
int
adc
test
stc
ds
scas
bound
xchg
pop
jo
lods
sub
les
inc
test
mov
mov
add
les
pop
enter
push
inc
push
dec
imul
sbb
inc
sahf
cwtl
jge
cmp
mov
out
into
pop
in
lods
pop
jno
int
mov
mov
hlt
pop
js
mov
rol
mov
and
cmp
rcll
jns
stos
arpl
ljmp
jmp
mov
dec
mov
fucom
stos
jae
daa
sbb
mov
les
sub
push
lds
mov
push
or
xlat
cmp
mov
lods
adc
into
fcoml
in
and
outsl
push
ret
xor
jg
cwtl
lcall
aas
adc
icebp
test
mov
xchg
inc
std
adc
push
sarb
or
ficomps
mov
test
lcall
stc
ss
cmp
mov
mov
xlat
cmp
jl
sbb
addr16
adc
xchg
lret
pusha
inc
lods
jp
ret
sub
test
mov
add
dec
fnsave
mov
mov
push
sub
ds
push
sbb
sbb
jns
sub
mov
loope
or
lcall
cs
fcoms
fwait
mov
fcmovb
add
xlat
adc
xchg
mov
imul
lods
enter
xchg
inc
int
sbbl
mov
fdivrs
aaa
inc
sahf
xor
icebp
cli
fldt
cmp
hlt
mov
xor
pop
jbe
movb
jno
lahf
loopne
sbb
fisttpll
cmp
add
mov
cmpsb
fdivrp
mov
icebp
pop
jl
cmp
push
test
sub
jmp
in
out
mov
imul
inc
dec
mov
mov
pop
fstps
out
mov
xchg
or
sub
gs
addl
cld
rclb
or
mov
or
das
xchg
fstpt
call
mov
and
xchg
fcompl
add
rcl
fidivrs
sarb
gs
ret
add
xor
out
insb
shll
xor
jge
xor
ss
les
or
outsl
cmc
in
stos
and
dec
test
sbb
jmp
xchg
mov
outsb
rolb
jl
mov
fdiv
jae
mov
push
movsl
out
sbb
das
pop
popf
push
lds
lret
push
pusha
pop
out
jg
add
cmp
jno
push
nop
adc
call
loope
push
cmp
mov
and
iret
in
xor
mov
fwait
jb
xchg
ret
inc
repnz
lcall
daa
iret
fidivrl
test
mov
test
out
push
test
scas
repnz
xor
push
mov
xor
pop
ret
loope
mov
push
pop
or
orl
jge
mov
daa
es
inc
mov
fwait
push
pop
fsubr
jbe,pt
aas
jns
adc
pusha
mov
mov
mov
clc
jp
lret
xchg
pop
and
xchg
outsl
cmp
cli
mov
roll
sahf
in
sub
cmpsb
and
cmp
mov
inc
pusha
addb
push
add
out
enter
adc
push
mov
sub
mov
jmp
imul
xor
mov
cmpsb
lret
clc
test
loope
jno
shl
jae
add
jo
mov
xchg
js
xor
inc
scas
push
xorb
ljmp
roll
sahf
pusha
add
mov
out
lret
mov
or
xchg
pop
xor
and
push
mov
test
lahf
je
cwtl
popa
sbb
mov
inc
rclb
or
mov
fmull
jge
add
push
sahf
enter
xchg
pushf
push
xor
fs
mov
shll
or
movsl
cmpsb
mov
inc
stos
lea
jl
mov
add
mov
adc
mov
cmp
lds
dec
aam
push
sbb
repz
add
xlat
inc
push
jno
cmp
dec
cmp
aam
add
adc
lcall
fcoml
aas
scas
cmc
inc
enter
stos
leave
mov
pop
popa
stc
push
cwtl
in
lret
dec
stc
out
adc
in
clc
cmp
dec
pop
repnz
out
pop
sbb
outsb
sahf
adc
mov
mov
pop
out
cwtl
daa
pop
out
and
shlb
pop
xor
out
psllq
cmpsb
push
mov
jp
jb
out
pusha
mov
cmp
mov
mov
jge
pop
mov
push
fisubrs
cmp
stc
pop
inc
and
lret
mov
lock
pop
scas
mov
pop
cmpsb
leave
push
push
and
and
cwtl
pop
aaa
and
cmp
fcmove
shlb
movsb
movsb
mov
imul
test
add
inc
mov
xor
adc
std
mov
xor
repz
stc
jb
jnp
idiv
push
cltd
movsb
out
imul
sub
imul
clc
repz
push
aaa
addr16
mov
lds
ror
or
jge
sub
aas
popa
push
cmpsb
add
je
mov
das
mov
movsl
pop
in
sti
pop
pop
call
enter
lahf
lret
sti
sbb
and
xor
into
in
dec
je
fcoms
jb
add
rcrl
adc
sub
mov
cmc
mov
ret
mov
jmp
push
xchg
std
in
loope
ret
shlb
cs
leave
push
arpl
scas
sbb
jge
xor
pop
dec
push
mov
pop
cmp
mov
adc
pop
sbb
pop
push
div
je
out
fprem1
push
mov
mov
add
jnp
fs
nop
xor
xchg
cli
sub
hlt
clc
scas
inc
rclb
adc
adc
jae
or
hlt
add
jnp
inc
out
mov
popl
out
fldenv
xchg
ljmp
sub
jle
cld
inc
hlt
and
call
out
sbbl
mov
mov
jbe
mov
cmp
inc
imul
inc
jnp
icebp
movnti
fprem
movsl
inc
arpl
jge
shlb
lds
ljmp
andps
repnz
cwtl
repz
fucomp
ret
push
mov
dec
jl
adc
inc
pop
jbe
mov
cmp
enter
icebp
jo
adc
pop
pop
cmpps
jns
xchg
cmp
cli
xor
inc
add
push
loopne
and
int3
dec
test
popa
adc
lock
nop
mov
pop
fs
rol
popf
mov
mov
push
cmpsb
inc
jo
ljmp
sub
out
jns
jle
mov
les
mov
pop
js
bound
lea
sub
enter
insl
adc
adc
jp
sbb
cltd
pop
out
jbe
lods
stos
or
rclb
adc
leave
mov
subl
ret
xor
test
mov
out
jle
inc
fcomps
cmp
loope
mov
or
jp
push
out
mov
sub
ja
mov
mov
pushf
shrb
sbb
sarb
push
and
dec
jecxz
jg
repz
cwtl
push
and
arpl
jbe
cmp
dec
outsl
sbb
cmpsl
lcall
addl
xor
mov
repnz
pushf
out
cmp
mov
js
cmp
out
ret
sar
lcall
lcall
loop
scas
or
das
popf
sahf
xchg
push
push
cld
mov
aam
jge
test
leave
jnp
outsb
imul
leave
mov
mov
cli
cmpsl
ds
push
inc
sbb
daa
xor
cwtl
sbb
outsb
and
stos
fwait
inc
inc
fs
mov
mov
int3
pop
sbb
pop
out
sub
or
imul
in
lock
sub
mov
orb
xchg
inc
scas
sbb
out
dec
xchg
sub
stc
negb
jns
xor
stos
pusha
or
push
das
repnz
into
push
push
adc
dec
cmp
sub
cmpsb
inc
cmp
out
jmp
inc
jp
bound
jmp
dec
xchg
lock
push
mov
gs
dec
std
or
xchg
jne
and
push
frstor
dec
adc
stos
inc
dec
pushf
std
pop
lret
push
lahf
add
aam
in
frstor
std
hlt
gs
adc
decb
frstor
mull
cs
adc
adc
cld
pop
inc
pop
jecxz
inc
popa
insl
aas
repz
jae
clc
jle
xorb
push
out
fcompp
inc
adc
or
lods
das
aaa
add
je
clc
lret
rcrl
sub
adc
cwtl
sub
and
cmpsb
hlt
sbb
fwait
stc
cmp
lea
je
fsts
jb
in
std
adc
add
dec
cmp
mov
xchg
outsb
js
dec
xor
in
in
add
loope
cwtl
pop
cmp
jmp
mov
dec
cmpsl
mov
decb
arpl
dec
add
push
lret
add
mov
idiv
enter
addr16
movsb
pop
pop
stc
inc
inc
jp
pop
and
cmp
push
cmp
in
pop
jbe
movsl
mov
jns
xor
xchg
xorb
cmp
push
jle
push
push
cltd
bound
jl
pop
xchg
mov
inc
fcoms
lock
adc
out
arpl
cltd
inc
outsb
add
into
pop
cmp
cmp
fst
cmp
push
iret
lods
or
mov
negb
and
fiadds
jmp
push
divl
cmp
pop
dec
pop
xor
cmp
fs
stc
add
sbb
jnp
dec
fcomps
lods
push
xchg
dec
rcrl
push
xchg
das
arpl
sbb
jmp
cld
lock
fldenv
mov
in
sub
inc
dec
shrb
push
insb
in
pop
inc
dec
inc
pop
xlat
push
cld
mov
cld
in
mov
scas
push
out
jg
jecxz
inc
lea
sub
dec
pop
aaa
ja
inc
pop
or
or
jo
push
out
nop
mov
mov
fwait
push
jecxz
ds
xor
cmp
call
in
mov
shll
pop
test
mov
mov
aam
push
call
dec
jp
xchg
mov
adc
scas
ds
or
sbb
mov
add
sbb
cmpsb
lret
mov
dec
and
lret
push
nop
mov
outsb
cmp
sti
rcrl
fcmovnbe
fdivrs
dec
shr
xor
inc
loop
filds
jp
aas
outsl
call
adc
fisubl
in
pop
call
icebp
xor
iret
cli
mov
ret
fsubr
mulb
push
pop
es
in
and
mov
lods
cmpsl
ljmp
cmp
std
and
popa
mov
loopne
xor
jae
call
test
xor
lcall
adc
mov
jge
popf
in
inc
or
dec
mov
dec
cmp
push
pop
mov
test
leave
test
test
pop
dec
mov
push
sahf
add
jb
imul
push
scas
mov
xchg
repz
pop
sbb
mov
xor
or
and
test
dec
ljmp
pop
mov
les
mov
cwtl
pusha
xchg
loope
inc
adc
fistl
mov
mov
cmp
jns
dec
xor
fdivrs
dec
stos
push
into
pop
mov
sbb
imul
lcall
pop
mov
mov
pop
push
fldl
or
fistl
roll
sahf
aam
mov
outsb
xor
push
sbb
xchg
repnz
lods
insb
mov
jns
orb
mov
out
or
push
xlat
pusha
mov
xor
mov
pop
or
push
sub
test
out
xchg
jb
mov
outsb
cld
aam
sbb
or
out
addl
add
movsl
sbb
sbb
xor
test
jns
fisttpll
idivb
mov
jae
inc
push
sbb
or
xchg
popf
mov
mov
ljmp
rorb
nop
dec
andb
xchg
testb
fwait
jmp
cs
adc
pop
push
add
xor
sbb
test
rcll
gs
mov
jmp
lds
out
jmp
xchg
in
pop
pushf
push
popw
or
push
ljmp
adc
push
jl
xchg
aad
scas
mov
out
pop
stos
mov
push
dec
push
jb
fdivrs
jo
ret
mov
sub
inc
sbb
cmp
lret
push
std
movsl
shlb
insl
dec
les
sbb
pop
mov
sti
int
mov
sbb
aad
mov
xchg
pop
add
adc
movsb
outsb
inc
sti
and
fidivs
out
cmpsl
shl
dec
add
loopne
jae
add
push
and
mov
mov
loop
insl
leave
pop
scas
add
inc
mov
ficoms
xchg
pop
xchg
in
mov
std
movsl
shll
jle
mov
add
out
add
cs
mov
mov
ljmp
je
jbe
xchg
sbb
jp
xchg
mov
ffree
mov
ds
into
push
push
into
cmp
sbb
es
rep
adc
iret
fcomip
cwtl
decb
jmp
cli
inc
pop
test
mov
fiaddl
push
fwait
adc
mov
js
sub
movsl
xchg
add
add
arpl
into
jle
jp
pop
enter
pop
dec
testl
fcoml
dec
or
nop
sub
call
xor
std
movsl
popa
lea
shll
stc
test
or
lds
inc
mov
scas
xchg
cs
xchg
ret
push
in
jg
push
or
in
xor
dec
jle
xor
mov
and
xchg
jnp
lds
and
dec
pop
inc
aas
and
in
or
adcl
dec
test
add
rorl
sub
out
xor
lock
fwait
pop
mov
push
mov
leave
adc
mov
mov
jge
mov
fiadds
out
scas
cmpsl
out
pop
sub
stc
xchg
push
adc
sbb
mov
jmp
add
and
fisubrl
and
jp
sbb
or
ret
push
sahf
pop
sub
test
and
adc
pop
adc
sub
dec
push
jb
push
cld
mov
mov
lcall
lods
inc
jp
insb
or
aam
mov
clc
mov
mov
sbb
xchg
add
mov
mov
cmp
popa
add
cmpsb
icebp
jl
ficomps
daa
push
pushf
and
jns
push
imul
out
adc
cmc
cmpsb
lock
xor
ret
cs
jbe
outsb
and
fcoms
popa
movsl
lcall
arpl
push
movl
sub
sti
cld
or
pop
lea
add
jl
scas
int3
mov
and
sub
xchg
insl
sub
push
and
xchg
cmp
clc
test
loope
push
xor
mov
cmp
xchg
repnz
fidivrl
mov
stos
add
iret
in
insb
xor
cmp
fwait
mulb
inc
sbb
sub
sarb
push
mov
das
sbb
inc
xor
ficomps
and
inc
mov
xchg
jp
jge
mov
nop
int3
inc
cli
js
shll
mov
push
cmc
push
sbb
icebp
ret
push
inc
nop
orl
nop
jg
mov
lea
and
test
inc
jno
dec
adc
xor
pop
js
push
dec
popa
mov
jns
movsb
adc
adc
or
mov
cs
jecxz
jmp
sbb
xchg
test
xchg
xor
movsl
jnp
fstpt
xchg
adc
push
push
imull
and
test
je
dec
and
add
ficoml
sbb
dec
pushf
lcall
imul
jb
jno
out
jle
stos
ficompl
shll
stc
adc
gs
sarb
pop
inc
jecxz
push
lret
cmp
sub
dec
inc
je
xchg
in
jnp
push
mov
jmp
xchg
enter
add
scas
mov
icebp
xor
mov
sbb
lahf
adc
cwtl
insl
rorb
mov
lds
in
and
js
pusha
inc
push
add
dec
test
imul
out
frstor
test
icebp
in
push
xchg
jb
in
out
xor
out
dec
insl
movzbl
sbb
scas
cltd
xor
outsl
and
cltd
push
sbb
repz
xor
push
mov
in
lret
shrl
cmpsb
lret
rcll
aaa
stc
mov
pop
dec
pop
divb
cmp
loope
fcoms
dec
stos
cltd
cmp
push
rorb
xchg
fcoms
ljmp
mov
aaa
outsl
lods
mov
pop
idivb
imul
mov
int
je
mov
loop
adc
and
lahf
jge
in
ss
lock
mov
gs
jle
sub
imul
mov
out
mov
hlt
cmp
dec
xor
inc
sbbb
and
je
dec
or
add
out
sub
mov
adc
mov
dec
movb
push
adc
pop
sahf
jnp
popl
scas
out
dec
scas
sub
ds
jp
mov
outsb
and
aad
aaa
movsb
nop
ds
dec
shrb
leave
data16
ficoml
aas
adc
test
add
mov
jl
clc
mov
negb
mov
add
arpl
bnd
je
fs
popa
xchg
push
or
push
add
leave
rcrl
xchg
sub
cmp
jp
scas
pop
leave
pop
dec
cmpsb
mov
xor
loopne
adcb
and
ret
mov
out
fsts
in
xchg
push
in
xchg
mov
jb
push
xor
stc
adc
dec
mov
dec
sub
pop
fildl
dec
stos
arpl
lahf
pop
xor
add
jns
es
jecxz
rcll
push
in
popa
jbe
popa
jp
cmovg
mov
out
and
lret
inc
xlat
rcll
fiadds
jmp
out
add
pop
std
es
jno
inc
je
insl
jae
mov
sbb
in
mov
and
push
popa
in
mov
movsl
movsb
or
test
movb
push
mov
fimull
ds
mov
xor
mov
decb
arpl
ret
push
fiadds
mov
jns
mov
out
inc
xchg
pop
pop
cwtl
sarl
and
stc
aam
fisttpll
sbb
insl
js
or
jecxz
btc
adc
sbb
adc
or
popf
nop
ret
jns
je
gs
js
hlt
and
adc
mov
stos
pushf
imul
mov
jne
mov
aaa
das
fidivl
ficoms
push
pop
and
xchg
mov
push
pop
mov
mov
and
mov
xchg
mov
insb
jno
jbe
mov
and
pop
je
mov
add
insb
pop
xchg
sub
out
bound
sbb
mov
lret
movsb
divb
lcall
dec
addr16
mov
or
outsl
arpl
enter
cmp
sub
daa
es
clc
dec
subb
lahf
stos
push
jl
pop
call
test
movsb
sbb
pop
and
cmpsb
outsw
imul
fcmovbe
adc
pop
loop
jno
xchg
jecxz
adcb
ds
cmp
jl
adc
mov
fwait
inc
fistpll
cmovne
xchg
fsubs
sub
scas
icebp
shrb
add
jno
fisttpl
out
xor
jne
imul
sarl
or
rol
mov
fidivrl
mov
inc
xchg
jbe
push
xchg
ds
xor
lods
mov
jne
jno
jne
sub
stos
cwtl
lcall
or
insb
fwait
movsl
adc
push
mov
enter
mov
gs
xchg
iret
and
lcall
mov
cmp
push
inc
scas
in
ss
sub
mov
fsubrs
push
xor
filds
and
jmp
sbb
cvtps2pi
shlb
jmp
or
hlt
addb
push
xor
test
pop
lods
andl
popa
sub
xor
mov
in
and
sub
mov
xchg
jb
adc
and
adc
add
orb
pop
ret
cmc
iret
sub
call
out
xchg
daa
aam
adc
lret
pop
aad
inc
push
shll
fwait
ds
xor
pop
add
movsb
jns
incl
imul
mov
stc
fnstsw
int3
mov
push
fsts
addr16
mov
add
rcrb
and
pop
push
or
jl
push
repz
lcall
push
sub
jne
gs
ljmp
dec
and
jb
insl
stos
mov
stc
dec
outsb
jbe
xor
std
and
lret
pop
shll
xchg
cwtl
inc
push
rolb
loopne
daa
loopne
push
cmp
add
lea
scas
push
pop
sbb
adc
decb
jb
cmpsl
add
mov
cmp
psrld
xor
jmp
sbb
clc
pop
dec
std
nop
push
stos
js
pop
xchg
inc
xchg
repnz
sub
ja
adcb
stos
jg
fdiv
in
sub
mov
xchg
loope
pusha
std
xchg
je
into
lahf
ror
cmp
test
loopne
sub
dec
cmpsl
pop
cmp
jp
jecxz
inc
sahf
push
call
add
inc
in
inc
jge
ffree
outsl
dec
push
dec
push
adc
js
adc
and
stc
mov
scas
sub
fmuls
dec
fisubrl
loop
hlt
add
mov
sbb
insl
fdivl
ds
in
popa
sbb
cmp
iret
jg
int3
sub
xchg
pop
and
cmp
aaa
jl
jge
jge
popa
inc
xchg
je
pop
out
and
mov
dec
mov
int
mov
pop
sub
inc
jp
push
ja
and
mov
xlat
mov
or
cmpb
movsl
leave
decl
sbb
leave
ret
mov
cmc
jne
cmpsb
pop
lahf
adc
cli
dec
or
push
mov
shlb
mov
cmp
ss
in
ror
pushf
adc
mov
cld
pop
xor
xchg
mov
add
add
adc
stos
cmc
pop
or
incl
dec
sbb
stc
outsl
cmp
clc
dec
jmp
sbb
sub
fildl
mov
mov
mov
mov
filds
or
leave
xor
adc
mov
or
pusha
lods
daa
sbb
das
push
stos
lods
push
mov
lds
int
fidivl
lds
sub
in
fucomp
outsb
in
mov
pop
test
loope
mulb
inc
sub
jnp
pop
adcl
jbe
jo
test
sub
push
sbb
or
mov
jg
mov
pop
es
push
mov
in
enter
sahf
inc
pop
mov
mov
xchg
test
add
cmp
decb
sbb
inc
shlb
xor
add
test
clc
in
mov
arpl
rcr
fisubs
jl
iret
inc
or
or
gs
pop
sub
mov
add
mov
xor
jns
clc
mov
xchg
xor
sbb
push
xchg
daa
shrl
push
outsb
dec
cmp
in
test
and
outsb
addr16
and
xchg
sub
xchg
out
mov
xchg
mulb
test
jnp
gs
cmp
div
test
fcmovb
sbb
sub
pop
and
ret
jmp
out
das
aad
sub
pop
cmp
jne
daa
and
and
and
push
adc
insb
std
add
adc
into
das
ja
sar
sub
ds
add
insb
mov
jb
fs
movsl
addr16
sub
or
es
test
pop
inc
push
ljmp
in
outsl
push
es
movsl
mov
jae
lea
pop
xor
cld
mov
les
scas
test
rcll
das
aad
jecxz
inc
ret
out
std
ret
iret
cltd
mov
sub
sbb
lea
pop
jmp
mov
mov
sbbb
inc
xchg
into
int
fidivs
mov
fisttpll
mov
push
insl
mov
jb
movsb
pop
pop
daa
and
sahf
ljmp
aad
sbb
push
sbb
rcll
and
lock
xor
xor
imul
adc
dec
xor
or
sbb
pop
and
jne
xchg
notb
stos
xor
lcall
mov
push
notb
lds
lcall
arpl
movsl
jmp
jecxz
icebp
sbb
std
xor
lea
add
inc
mov
test
and
int
pop
push
int
and
js
mov
inc
inc
or
mov
pushl
xchg
loop
mov
lods
inc
icebp
or
and
dec
lods
loop
or
das
aas
push
xchg
clc
cmp
add
xchg
lret
in
mov
jp
mov
push
add
sub
mov
sbb
mov
and
xor
imul
repz
les
jecxz
push
dec
add
sub
mov
icebp
es
aad
push
into
int
outsl
call
jns
dec
data16
rorl
scas
inc
adcl
and
les
aaa
add
loopne
loopne
add
cltd
std
and
sarl
les
mov
xchg
mov
es
push
inc
add
inc
fistl
and
test
leave
repnz
push
sahf
pushf
sbb
outsl
loope
pop
movsl
ds
ret
pop
mov
into
inc
orb
ret
arpl
pop
push
jne
popa
fisttps
in
xor
mov
mov
ret
mov
jns
mov
sbb
mov
rclw
mov
clc
gs
cld
jle
jle
or
mov
or
mov
push
in
mov
cmpsb
cmc
mov
dec
xchg
push
fisttpl
fsubr
in
data16
pop
stos
hlt
sbb
cmp
and
pop
aas
push
aad
adc
jmp
or
cmp
mov
pop
in
pop
xchg
and
in
and
xor
orl
aas
sbb
add
imul
xchg
push
out
cmp
sbb
push
adc
test
xor
jno
add
test
stos
pop
scas
hlt
enter
sbbb
repnz
cmp
push
inc
add
sbb
in
push
nop
xchg
dec
call
xchg
lret
pop
push
inc
call
insb
or
adc
pop
ret
push
mov
and
xchg
or
xchg
pop
popl
jno
mov
pop
inc
mov
jno
cmpsb
cmp
in
fistpl
out
aam
shll
rorb
inc
into
push
push
out
push
rcrb
orps
call
cmpsl
mov
mov
clc
call
xor
mov
sarb
dec
add
xor
out
cmp
sub
pushf
shl
rclb
xchg
icebp
rorl
cwtl
mov
jmp
stos
lods
sbb
stos
xchg
repnz
sub
out
idivb
out
mov
jbe
add
addr16
add
xchg
mov
pop
lahf
pop
mov
mov
rorl
mov
lret
push
in
mov
push
add
lcall
nop
jp
imul
cld
sub
mov
jnp
cmp
mov
pop
sub
test
pusha
addr16
pop
xchg
in
pop
es
pop
xchg
fidivrl
dec
popf
xchg
mov
scas
sub
ror
cwtl
js
mov
xlat
pop
dec
outsb
iret
mov
rcl
mov
subb
jns
mov
mov
or
inc
mov
aaa
push
addr16
or
cmp
fcmovb
movl
loopne
adcb
jo
fcoml
dec
fdiv
xchg
push
orl
lods
inc
jbe
cwtl
jns
gs
cs
mov
mulb
dec
into
jmp
adcl
fwait
jns
daa
add
cs
loopne
jle
loope
cmp
jmp
fsubrl
leave
imulb
push
mov
pop
imul
pop
or
inc
jmp
jg
jge
jne
dec
rcl
out
sub
movsb
adc
pop
cld
or
pusha
adc
jle
nop
xor
je
ret
rcr
mov
sbb
outsb
mulb
push
cmp
xchg
popa
sub
sbb
sbb
decl
sti
push
cld
jmp
xchg
push
fildl
sub
sub
test
out
lret
and
nop
mov
jo
mov
std
inc
mov
and
cmp
aam
sbb
stos
call
jae
mov
cmpsl
daa
inc
or
mov
pop
mov
jb
icebp
jae
les
lods
pop
cwtl
pop
movsb
inc
pushf
fsubrs
aas
sti
rorb
adc
mov
subb
jno
aam
xchg
dec
push
call
mov
das
and
or
out
pop
mov
in
xchg
popf
sbb
idivl
lea
sti
push
lret
mov
test
adc
pusha
mov
andb
pushf
pop
cltd
mov
or
cmp
lahf
cmp
fsubs
shll
out
test
and
jne
or
sti
push
into
icebp
inc
pop
pop
adc
sub
hlt
push
gs
mov
inc
lods
pop
scas
cmp
jle
lods
add
add
or
xchg
dec
push
icebp
clc
or
mov
mov
pop
sti
ljmp
mov
insb
ss
pusha
nop
or
add
test
pop
add
xor
std
cmp
mov
xor
lret
ret
cwtl
push
cwtl
scas
rorb
adcb
out
std
xor
fidivl
push
and
in
xchg
out
mov
mov
inc
sarb
push
mov
dec
push
push
jbe
inc
int3
adc
popa
insb
xchg
popf
insl
pop
cmp
mov
pop
faddp
ss
lahf
movsl
xchg
mov
ljmp
pushf
daa
add
mov
loop
out
add
incb
outsl
orl
cld
popa
ss
add
or
jg
rcll
cwtl
mov
add
je
push
pop
jns
sahf
pop
stc
push
aam
add
xchg
in
cld
out
jg
adc
sbb
and
pop
push
add
inc
xchg
sarl
imul
mov
lods
fwait
pminsw
or
mov
mov
mov
in
ljmp
aad
fidivrs
cmpsl
xor
adcl
test
xchg
dec
or
inc
adc
mov
fs
je
xor
mov
clc
outsb
pop
pop
sahf
test
pop
pop
test
in
inc
cwtl
push
mov
aam
sub
aad
jno
orl
or
cli
or
js
push
add
adc
push
aam
lods
in
movsl
lret
xor
sbb
xorb
xchg
loopne
rorl
pop
lods
mov
mov
adc
dec
dec
cmp
imul
pusha
push
popf
lock
mov
test
fisttps
pushf
dec
mov
into
int
addb
or
jle
fdivr
sbb
mov
mov
pop
xchg
adc
adc
sub
add
pop
mov
mov
ret
jecxz
inc
test
mov
pop
add
into
mov
pop
in
js
in
jl
cmp
orl
sbb
in
mov
shr
jne
cld
pop
xor
bound
std
xchg
pop
adc
fistpl
pop
mov
jecxz
add
jo
jle
or
fs
add
jo
lods
test
lret
add
mov
jl
mov
mov
arpl
imul
fstpl
sbb
ljmp
cmc
movsb
add
repnz
push
and
mov
pop
hlt
mov
xlat
cmp
mov
inc
scas
pop
fsubrl
cmp
clc
in
cmc
jb
mov
xchg
and
jo
enter
jg
enter
mov
incl
xchg
pop
in
and
imul
lea
or
push
cltd
xchg
sbb
adc
pop
test
out
je
enter
loope
add
xchg
in
out
out
je
mov
cld
sti
ds
jp
mov
aas
pusha
inc
jmp
test
repnz
insb
mov
hlt
mov
sbb
jmp
aad
dec
cmp
cld
add
mov
push
jecxz
or
dec
mov
repz
add
in
stos
rolb
sbb
add
xchg
ss
push
popa
add
dec
shrl
ljmp
mov
in
lret
cmp
or
xchg
adc
shl
xchg
mov
xchg
arpl
mov
sub
dec
push
sbb
adc
sub
mov
push
dec
xchg
shrl
lret
mov
mov
or
std
jmp
xchg
adc
jbe
jmp
das
div
lahf
and
cmp
outsl
lock
sub
adc
xchg
push
sub
pop
rcrl
sbb
mov
shll
daa
dec
jle
bound
jge
push
jp
xchg
pop
jge
xor
stc
js
repnz
out
add
int3
sub
out
hlt
pop
mov
sub
shll
pop
and
gs
xchg
mov
test
inc
jno
jnp
push
ret
mov
xchg
xchg
in
pop
imul
mov
adc
iret
mov
jge
outsl
fiaddl
cmp
or
data16
flds
adc
pop
clc
and
rcrb
pop
aam
arpl
aad
xchg
push
out
sahf
mov
add
fcmovne
mull
mov
sti
adc
push
loopne
and
mov
dec
cmpl
sbbl
aam
xlat
imul
jge
dec
add
hlt
ja
dec
sbb
insl
ret
sub
jmp
shlb
scas
sbb
and
sbb
stos
pushf
xlat
in
dec
ds
add
pop
pop
dec
test
mov
xor
xchg
jne
ss
mov
mov
out
in
mov
mov
sub
pop
push
sub
loop
xchg
sahf
mov
filds
cmp
icebp
mov
les
jle
movsb
arpl
cltd
or
cmpl
sub
addr16
jo
in
cmp
stc
addr16
dec
push
dec
outsl
mov
inc
push
jg
loope
jnp
pop
fsts
jl
pushl
or
add
or
test
outsl
xorb
test
adc
hlt
fisttpll
jecxz
push
sub
or
sar
inc
scas
out
stos
add
xlat
ja
mov
mov
and
loop
push
icebp
daa
inc
pop
lcall
adc
or
lcall
mov
add
cltd
xchg
stos
and
stc
nop
jecxz
lock
mov
push
sub
ret
shrl
dec
shlb
push
jg
mov
adc
sbb
fmuls
sbb
add
and
cli
push
add
mov
std
inc
leave
shl
lock
das
shl
lods
mov
inc
pop
inc
psraw
insl
adcl
sahf
add
mov
adc
push
js
adc
and
in
in
jne
inc
pop
jbe
sbb
stos
mov
testb
push
mov
pop
js
sbb
out
mov
shlb
int3
std
repnz
and
mov
fidivrl
sbb
inc
and
mov
push
jge
ljmp
stos
or
xchg
push
and
stc
push
movsl
orl
mov
std
lds
mov
mov
lret
dec
ds
sahf
cltd
push
push
dec
pop
lds
notl
add
adc
jae
or
fimuls
fdivrl
xor
mov
aam
pop
dec
add
roll
xor
jne
in
out
inc
ds
lret
stos
sbb
cmc
xorl
mov
shlb
bound
int
and
mull
mov
dec
add
lock
fwait
insb
js
inc
mov
cmp
push
jne
aaa
mov
fimull
int
xchg
jae
arpl
stc
out
loopne
fadd
scas
mov
xor
adc
es
pusha
push
call
imul
jno
pop
imul
ljmp
or
enter
inc
ss
outsl
xchg
sbb
sub
xchg
aas
jg
sub
test
out
dec
lret
mov
cwtl
popl
or
adc
out
lds
mov
push
sub
pop
xchg
out
mov
push
test
ret
inc
stos
xor
rorl
push
sbb
and
sbb
dec
pop
fidivrs
mov
jo
pop
inc
dec
loopne
lret
jbe
loope
jg
mov
sub
mov
test
cmp
das
xor
cmp
sub
int
ljmp
and
cmp
adc
inc
jns
cmp
push
and
add
push
fisubrs
sarl
out
or
jo
scas
test
fdivrl
subb
mov
movb
addl
jb
mov
fbstp
movsl
mov
cmp
xchg
je
jle
out
jno
lock
rclb
fsubrs
xor
mov
pop
dec
pop
pop
add
pop
daa
push
filds
pop
cmc
xchg
xlat
sbb
sbb
es
mov
jne
push
lret
adc
inc
mov
sub
icebp
add
pop
mov
and
ss
xchg
mov
jle
dec
jmp
jl
mov
stos
dec
shrl
addr16
fidivs
sahf
popf
lock
xchg
repnz
cmp
sbb
cmpsl
lds
test
add
jecxz
mov
jns
inc
jbe
imul
out
shlb
mov
jl
xor
mov
dec
into
cwtl
sbb
daa
dec
lret
xchg
adc
pop
call
cmp
std
je
and
out
stos
jmp
xlat
pop
sub
mov
xchg
jae
fcoms
or
rcl
and
faddp
rol
sub
sbb
and
addb
xchg
mov
iret
fimull
jo
es
add
add
sbb
lea
push
rcrl
or
mov
sbb
data16
mov
pop
push
scas
push
sbb
cs
bound
or
cmpsb
inc
jge
xchg
gs
xor
bound
pop
call
xor
inc
imul
push
lret
call
cmc
sub
dec
xlat
cmc
icebp
xchg
nop
bound
lret
lods
jge
add
rolb
test
into
mov
clc
test
push
xchg
add
es
fidivrl
gs
push
sub
stos
bound
pop
pop
outsl
shlb
mov
je
adc
ret
rorl
push
cmp
sbb
cmc
xor
pop
loopne
rcrl
dec
sub
add
in
ss
sbb
xchg
test
mov
out
cmc
xchg
push
or
jl
test
mov
sahf
adc
xchg
mov
jmp
and
pop
jg
movsb
sub
cltd
fmull
ret
cmp
lret
xor
and
divb
int3
mov
inc
xchg
xchg
mov
push
inc
popf
jp
add
popa
pushw
and
pmuludq
clc
xchg
jle
outsb
shrb
push
fnsave
xchg
jns
mov
out
and
inc
sub
mov
sbb
fidivs
movsl
repz
jb
xchg
das
push
sahf
scas
xchg
ret
in
push
aas
jg
mov
xor
rcll
push
mov
cmp
data16
mov
movsb
or
inc
loopne
jbe
mov
popf
test
mov
jle
es
jae
mov
sub
jno
cmp
push
loop
pop
push
push
loop
mov
sub
fmulp
and
loope
cmp
push
inc
pop
mov
lahf
lods
std
pop
rclb
divl
cmp
push
mov
dec
or
and
popf
clc
movsl
xor
scas
mov
test
push
sbb
into
or
sub
mov
sbb
inc
fmul
sahf
imul
lcall
mov
lods
and
lret
fimuls
scas
sub
xchg
dec
pop
inc
imul
mov
sbb
and
jo
sbb
mov
adcl
mov
clc
dec
lret
imul
fsts
mov
scas
sub
repnz
fistpll
outsl
mov
mov
sub
sub
movsl
push
out
dec
or
ja
xchg
mov
push
aas
mov
mov
push
js
jns
xor
ja
cmp
pusha
adc
push
add
xchg
add
xchg
mov
addr16
outsb
xchg
or
push
das
rorb
ja
in
or
sbb
pop
aad
sub
cwtl
xchg
sub
test
adc
pop
or
push
out
inc
rcrb
mov
xor
gs
mov
inc
sub
scas
jp
sub
loop
popa
or
mov
sti
add
jne
mov
xor
push
call
xor
hlt
jmp
sahf
fstl
in
fcoml
aad
mov
decl
fdivrp
sbb
and
cmp
loop
xorb
or
hlt
in
int
popa
push
outsl
fildll
stos
sub
jbe
fisttpll
mov
add
div
stos
test
sub
jno
and
push
and
ja
push
sub
mov
ds
stos
mov
in
ficoms
jno
jb
fnop
mov
adc
mov
inc
mov
lock
sar
stc
sub
sub
pop
jmp
imul
gs
push
jle
fucom
shrl
scas
out
pop
aas
ficoml
mov
scas
scas
push
pop
jmp
ljmp
inc
daa
jle
testl
and
call
cld
int3
push
pusha
addr16
jbe
repz
mov
pop
pop
aaa
sub
add
loope
adc
ds
mov
mov
jb
mov
cli
inc
outsb
icebp
adc
incb
mov
add
jge
jle
insl
mov
xor
cmp
adc
sbb
dec
push
jmp
push
addr16
add
sahf
mov
aad
not
sbb
xchg
jmp
mov
jecxz
inc
mov
xchg
mov
mov
mov
jns
adc
xor
inc
xchg
adc
jmp
xchg
jl
aaa
lahf
scas
jnp
add
adc
pop
cmp
sbb
pop
adc
sahf
inc
mov
jb
repnz
sahf
lods
push
dec
test
leave
dec
outsb
pop
arpl
add
int3
push
jne
adc
adc
cmp
mov
mov
xchg
mov
call
gs
mov
in
pop
roll
xlat
shl
js
int3
fcos
call
pop
pop
push
ret
out
sub
inc
jnp
ja
ret
shll
push
sub
mov
jl
push
sti
jl
jp
mov
cmpsb
mov
xor
loop
and
sub
pop
insl
icebp
xchg
jb
or
mov
shrl
cltd
pop
pop
rclb
testb
jecxz
pushl
mov
or
fldl
dec
js
xchg
mov
mov
hlt
dec
pop
rorl
jae
shrb
les
pusha
mov
push
mov
xchg
clc
xchg
and
mov
in
mov
shl
sub
mov
call
cmpsb
or
in
aas
add
pop
inc
fisttpl
popa
mov
xchg
mov
mov
je
pop
push
cmp
jecxz
jle
jb
and
ljmp
inc
cmp
push
int3
lahf
inc
cli
cmp
stos
adc
mov
xchg
xor
lahf
cwtl
notl
imul
mov
cmp
in
ficomps
adc
add
mov
cld
jmp
call
ret
sub
pop
inc
sbb
cmpsb
push
outsl
insb
pop
sub
fwait
in
mov
into
outsb
lock
sbb
cmp
negb
movb
cmp
mov
dec
outsl
testb
ss
sbb
push
push
jge
ret
dec
stos
test
or
insb
cmpsb
mov
std
ror
push
inc
inc
mov
sbb
adc
mov
or
add
arpl
inc
add
or
adc
pop
dec
sbb
xchg
mov
pop
arpl
and
in
cmp
fldt
notl
bound
add
mov
mov
xchg
imul
cmpsl
xchg
es
sbb
sub
ret
push
xor
mov
gs
notb
mov
or
sbb
inc
jp
or
inc
jecxz
in
lcall
mov
inc
in
out
cmpsb
rorb
cmp
into
out
stos
pop
inc
xor
testb
jno
pushf
push
jo
fidivrl
outsb
mov
outsl
int3
push
mov
add
cli
outsl
pop
cmpsb
test
adc
outsl
xchg
sbb
jnp
jg
notb
inc
dec
movb
jmp
in
xor
cmp
pop
dec
cmp
lcall
cs
push
mov
fidivrs
loopne
in
ds
out
push
stos
jae
pop
mov
mov
aam
push
lret
and
mov
jle
add
pop
fs
add
dec
or
call
xor
cmp
add
push
or
cmp
aad
inc
mov
stos
lcall
lods
nop
into
lahf
and
sub
fwait
daa
cmpb
clc
mull
push
mov
das
pop
and
xchg
enter
pop
xchg
mov
les
cmp
inc
mov
popa
loopne
icebp
xchg
cmp
js
test
outsl
clc
leave
ret
and
gs
ljmp
jg
aad
fwait
orl
psubb
inc
ftst
xor
adc
into
scas
lret
xor
arpl
ret
dec
mov
scas
fdivrs
add
inc
mov
sub
jbe
filds
lahf
cmpsb
push
xchg
push
rcl
orl
fistl
jno
das
push
sub
clc
insl
js
leave
or
sub
dec
jnp
loope
xchg
adc
mov
sahf
inc
sti
and
sbbw
out
lods
in
ljmp
adc
fsub
sbb
loope
ljmp
pop
lret
add
mov
ror
addr16
cmp
mov
cmpsb
push
mov
out
out
xor
cmp
jge
cmpsl
push
mov
cmp
xor
pop
fnstcw
sbb
mov
ds
stc
pop
jle
aaa
push
add
or
movsb
adc
es
cmp
and
or
imul
mov
inc
lcall
xor
ret
mov
jmp
and
je
xor
test
pop
movsb
outsb
out
mov
mov
jg
sub
or
stc
dec
fists
push
xchg
mov
and
sub
pop
rcl
imul
dec
xor
cmpsb
and
rorl
jbe
jmp
mov
test
mov
push
out
int
jg
inc
mov
jle
inc
mov
pop
add
mov
cltd
dec
dec
stc
sahf
pop
pcmpgtb
out
mov
add
jne
cmp
int3
push
imul
mov
rcr
sarl
or
aad
adc
xchg
pop
and
mov
pop
jo
or
push
and
or
popa
icebp
sbb
add
dec
xchg
lcall
mov
or
call
mov
outsl
daa
out
popl
ret
mov
mov
xor
xchg
jle
jae
inc
popa
mov
push
adc
shll
fcmovnbe
jae
cmp
arpl
pop
add
outsb
ret
xor
mov
cmc
push
jb
lahf
sbb
in
cmpsl
mov
lret
cmc
xchg
or
and
loopne
fwait
pop
dec
cli
mov
xlat
fcmovbe
push
popf
add
adc
and
dec
xlat
push
push
mov
xor
sahf
clc
or
leave
inc
pop
imul
jg
popa
push
stos
arpl
jmp
xor
adc
hlt
mul
mov
fisttpl
sub
lods
divb
jecxz
inc
push
sbb
xor
dec
sbb
arpl
mov
fld
jmp
mov
fsubr
xor
pusha
dec
or
adc
mov
addr16
addr16
pop
popa
imul
lods
cli
in
jmp
pop
sbb
sub
sbb
lcall
mov
lcall
mov
mov
pop
data16
je
adc
xor
ss
scas
imul
ss
dec
mov
addr16
repz
xchg
xchg
inc
repz
adc
fdivl
push
clc
inc
into
jnp
out
inc
ficoml
xor
cmp
popf
cmp
sub
data16
int3
fbstp
imul
xchg
das
aaa
mov
sarb
pop
pop
pop
hlt
xchg
mov
cmp
and
cltd
in
ds
sub
cmpsl
add
cld
mov
xlat
or
int
mov
push
adc
mov
fbld
adc
imul
push
fs
jmp
movsl
add
adc
jbe
pusha
out
out
mov
sub
loop
call
jge
jl
xchg
inc
or
leave
cli
fcmovnu
scas
out
jo
bound
inc
out
mov
push
frstor
in
mov
cmp
cmp
out
cwtl
ret
cmp
incl
les
or
js
lods
cmpsl
sub
adc
push
pop
ljmp
mov
das
and
pop
test
mov
test
adc
mov
jecxz
rcr
pop
movsb
cmc
cmpb
dec
fimuls
mov
inc
mov
iret
jge
outsb
jne
in
aam
or
lods
stos
test
sub
sbb
out
xchg
or
mov
dec
lock
lret
clc
jae
enter
repnz
add
hlt
rclb
dec
insb
pop
push
fnstenv
push
imul
cmp
rcll
mov
jecxz
jge
test
jne
xchg
mov
jno
xchg
lret
sbb
dec
orb
mov
pop
pop
cmp
cmpsl
call
shll
mov
adc
dec
or
ljmp
mov
loopne
fsub
fisttpl
popa
mov
and
push
adc
test
inc
sbb
xlat
cmpsl
sarl
or
push
xor
test
pop
sarb
test
rcr
movsb
pop
mov
aaa
cmp
xor
jmp
movsl
fisubrs
jg
scas
push
in
inc
in
mov
sahf
cli
mov
lods
imul
cli
dec
cmpsl
push
mov
mov
inc
les
cmp
iret
in
insl
push
pop
pop
mov
adc
icebp
pusha
mov
push
fidivrl
xchg
lret
shll
into
sub
arpl
ret
addr16
pop
sbbl
sub
sbb
loope
adc
out
mov
xchg
add
jp,pn
jmp
stos
jo
or
cmp
pusha
xchg
mov
stos
pop
sbb
enter
push
lds
xor
jo
repnz
xchg
stos
inc
xor
loopne
subb
jnp
cmpsl
fsts
inc
int
pop
jg
outsb
pop
sub
les
adc
xchg
daa
inc
push
imul
leave
xlat
movb
cld
sbb
mov
notl
ficoms
lret
shl
outsb
dec
pop
pop
or
test
pop
fidivrs
int3
cmp
xchg
dec
imul
jge
mov
inc
bound
scas
xor
adc
add
fdivrl
sbb
sub
cwtl
out
mov
pushf
push
stos
dec
scas
push
ret
into
insb
sbb
push
and
mov
inc
repz
insb
xchg
pushf
sub
cmp
xchg
cmpsb
sbb
pop
movsl
fsubrl
outsb
add
xchg
repnz
mov
mov
sarb
mov
jecxz
push
xchg
and
sbb
fsubr
bound
enter
ret
pop
repnz
dec
pushf
cmp
mov
xlat
fidivl
fimuls
stc
stos
fisttpll
cld
add
mov
loop
inc
out
jns
cltd
ret
sub
movsb
pusha
dec
push
sbb
imul
ds
rorb
popf
add
jns
outsb
jno
add
je
sbb
dec
adc
pusha
pop
sbb
rclb
aam
mov
pop
cmp
cli
sub
icebp
les
jb
dec
pop
clc
xchg
mov
in
test
dec
sbb
inc
jae
cltd
int
cmp
push
int3
test
ja
push
xor
divb
sub
je
cltd
and
decl
push
push
lahf
cmp
test
stc
pop
testl
test
imul
lods
mov
xchg
lods
jmp
mov
adc
and
mov
inc
and
mov
loope
ljmp
sub
jg
mov
pop
mov
jbe
dec
jae
xor
stos
in
das
add
in
aam
sbb
mov
cltd
or
in
dec
jno
fsts
pop
mov
jbe
mov
aad
dec
fidivl
filds
fnstsw
aaa
cmp
jge
filds
pop
or
mov
dec
jnp
int
xchg
push
roll
pop
mov
xchg
mov
shlb
ss
push
out
pop
and
and
ja
in
fcomi
mov
adc
shr
lods
ret
scas
xchg
hlt
sbb
xor
pushf
inc
mov
xor
pop
lcall
and
repz
fistpll
mov
push
mov
cltd
and
je
adc
js
xor
jge
mov
push
repnz
aaa
mov
sti
call
stos
es
std
clc
inc
and
mov
mov
scas
loopne
and
jle
add
add
jg
lock
push
data16
fbld
cmp
es
jl
jecxz
in
js
or
jmp
cmpsl
dec
out
dec
idivl
scas
call
shrb
das
dec
xchg
mov
and
sub
add
cmp
sbb
pushf
imul
repnz
xchg
xchg
pushf
imul
cs
jnp
or
add
sahf
push
mov
xlat
adc
inc
out
fdivs
daa
push
stos
and
sbb
mov
gs
mov
fadd
cmp
popl
fiaddl
dec
divb
mov
and
push
pop
and
mov
fisttpll
rol
leave
inc
cwtl
in
repz
mov
cli
sbb
pop
sbb
popf
movsb
mov
insl
test
imul
pop
lahf
or
ja
pop
push
xor
xchg
xor
mov
pop
or
sti
mov
push
xor
imul
add
push
adcb
fidivs
mov
push
es
das
xchg
cmpsl
lcall
lret
sbb
out
jp
xchg
pop
add
cmp
sub
addr16
orb
ret
mov
xor
or
or
les
pop
cmp
loop
inc
cs
adc
pop
jae
xor
out
popa
scas
xor
out
jne
ljmp
push
mov
xchg
les
push
test
mov
mov
xchg
fs
pop
mov
std
and
inc
repnz
fdivrp
adcl
jg
pop
pop
leave
lret
add
js
aad
sub
inc
ds
sbb
push
add
xchg
out
pusha
mov
push
lret
sub
pop
xchg
or
in
mov
fstpl
adc
dec
mov
subb
sbbb
out
sub
insl
test
xor
adc
add
pop
pop
and
jecxz
es
sbb
pop
cs
test
add
push
add
repnz
push
aaa
mov
and
sbb
or
out
and
aam
mov
cmpsl
lods
push
fsubrs
sbb
and
mov
call
push
shll
mov
sub
mulb
and
stos
mov
lock
mov
xlat
icebp
pop
hlt
insb
pop
jae
pop
pop
jnp
push
jnp
pop
ret
pop
adc
outsl
int3
lret
inc
push
push
pop
mov
sahf
sub
push
mov
lds
scas
out
xor
ret
cli
add
dec
or
movl
or
add
in
adc
push
pop
push
and
xor
mov
sbb
cwtl
arpl
dec
and
adc
aas
cs
dec
loopne
push
dec
xchg
dec
adc
scas
test
lret
aam
lods
push
mov
data16
in
lahf
fistpl
sarl
and
push
pop
mov
mov
push
jmp
xor
inc
imul
pop
push
ficomps
sub
dec
mov
hlt
mov
cmpsl
cmc
xor
f2xm1
insb
int3
pop
pop
out
fwait
pop
scas
mov
iret
pop
mov
jb
shll
xchg
adcb
add
mov
add
push
mov
lahf
add
xorb
mov
jp
or
push
or
mov
enter
inc
out
jle
aaa
push
out
xor
lahf
test
push
scas
cmp
mov
xor
add
div
dec
loop
sbb
rorb
or
mov
call
call
jno
cmp
and
lret
sub
jno
cltd
testl
movsl
adc
les
arpl
jl
loopne
rcrb
hlt
testb
enter
xor
aas
mov
neg
fstpl
inc
fiaddl
and
cli
xchg
cvtpi2ps
jbe
les
pop
jno
xchg
rcl
jecxz
jbe
outsb
mov
sbb
sbb
or
push
rcll
mov
push
stc
and
iret
arpl
in
or
xor
stos
lods
addr16
les
xor
pushf
or
push
cmpsb
cld
sbb
mov
arpl
mov
push
cmp
dec
js
popa
dec
dec
sti
mov
add
xor
out
sbb
pop
jmp
ljmp
xor
arpl
fdivs
or
mov
lret
mov
jle
push
lods
rol
pop
shll
shll
dec
or
dec
repnz
popl
es
inc
scas
ja
mov
xchg
lret
imul
xor
rcr
or
cmp
inc
push
and
xor
cmp
scas
in
xchg
stos
fdivr
sbb
cld
data16
andb
pop
and
mov
les
jl
mov
add
inc
pop
cwtl
jp
xor
and
push
movsl
sub
in
push
movsb
xchg
and
imul
jecxz
stos
sub
mov
jecxz
rorl
ljmp
sbb
jns
fcmovbe
lods
mov
jns
mov
into
popf
mov
rol
icebp
pop
xchg
jns
sbb
pop
int3
iret
dec
push
xchg
push
or
in
mov
xchg
in
cltd
jo
mov
mov
or
sub
xchg
shll
or
rolw
fstps
movsl
jp
adc
test
pop
lods
adc
push
cmc
aaa
out
push
pop
ss
mov
dec
mov
pop
in
sub
jg
cmpsb
rcll
lcall
xchg
mov
imul
lcall
insb
xchg
test
and
and
xchg
outsb
sarb
cmp
aas
mov
scas
push
aam
leave
stc
fdiv
outsl
sbb
aam
or
fisubrl
push
and
or
lods
pop
lods
lret
mov
cwtl
adc
loop
orl
cmp
pop
pop
test
aad
out
les
outsb
fs
and
xor
mov
in
pop
clc
jg
rorb
test
dec
iret
int
cmpsl
fs
aad
fcomi
cmovle
loopne
iret
and
imul
vpavgw
jbe
pop
sub
int3
push
call
arpl
add
or
jle
sub
jo
test
lods
sub
popf
movsl
and
call
loop
xchg
adcl
pop
mov
sbb
cmc
xchg
or
mov
data16
pusha
xchg
les
adc
in
mov
and
xchg
mov
xchg
aas
fwait
or
cwtl
insb
cs
incb
sub
mov
dec
out
shll
pop
enter
out
jmp
jl
jge
addr16
movsb
xor
clc
dec
jnp
movsl
dec
mov
adc
sub
fisubl
push
mov
inc
sub
mov
out
rcrb
mull
mov
cmp
mov
xor
iret
xchg
mov
lods
inc
sub
inc
dec
pop
test
xchg
test
mov
std
inc
lret
xchg
insl
dec
out
xor
pop
outsb
mov
xor
xchg
inc
xchg
les
mov
out
inc
insb
jp
push
loopne
imul
mov
test
lods
pop
fdivr
mov
testb
outsb
loopne
add
cmc
jecxz
dec
or
mov
mov
xchg
in
or
mov
fs
sbb
add
xor
cs
xor
and
mov
sbb
mov
cltd
outsb
mov
lods
inc
daa
mov
sbb
stos
out
mov
cmp
xchg
mov
inc
adc
adc
pushf
sub
arpl
cmpsl
push
enter
mov
mov
and
fadds
lods
daa
insl
shrl
lret
call
mov
sub
ret
mov
or
loope
sub
stos
mov
xchg
aaa
push
xchg
dec
jo
ror
mov
test
jns
js
ljmp
mov
in
dec
pop
dec
or
mov
mov
scas
mov
and
enter
inc
ret
sbb
inc
stc
aas
rorb
scas
xchg
dec
xor
lock
shl
dec
pushf
shrb
sub
ljmp
rcrl
inc
insl
movsl
or
and
decl
jnp
dec
pop
in
push
inc
push
ss
mov
fistps
jge
xchg
lcall
mov
jle
add
push
jmp
add
xchg
lds
loope
lds
aaa
xor
rcll
repz
push
in
es
inc
xor
push
jne
sbb
pushf
xlat
jbe
xor
ret
jno
xchg
sub
mov
sub
shrl
xchg
jge
jnp
cmpsb
xchg
or
add
sub
push
stc
sbb
sbb
pop
jnp
push
jle
ret
int
xchg
xor
jo
dec
pushl
jbe
push
stos
mov
and
popf
push
fsts
mov
and
test
roll
icebp
test
sub
push
xor
jo
push
jp
jnp
fstl
pusha
inc
xor
outsl
xlat
xor
scas
or
daa
mov
mov
xchg
mov
mov
mov
xor
je
push
vpunpckldq
idivl
in
add
pop
stos
data16
jecxz
pop
enter
dec
pop
dec
loopne
in
push
movsb
insl
into
adc
jmp
les
push
and
outsl
hlt
cltd
mov
cli
stc
fiadds
inc
push
es
lcall
mov
jno
jl
cmp
mov
mov
and
loop
add
in
jp
adc
or
or
test
pop
addr16
adc
inc
and
jne
ljmp
xchg
mov
jb
pop
icebp
stos
mov
stos
cmpsb
cmp
mov
add
jecxz
or
push
mov
sbb
and
iret
pop
mov
jo
mov
repz
dec
lahf
push
sbb
test
or
mov
iret
pop
mov
movsl
ds
test
shll
dec
mov
mov
sbb
xchg
push
mov
jle
mov
shl
stc
pop
fs
sub
push
ror
jnp
ret
push
xor
jmp
mov
cmpsb
and
xchg
inc
pushf
jb
into
pop
cmp
sti
adc
out
sub
cmp
adc
iret
sbb
push
arpl
xchg
xor
je
or
push
push
lahf
loopne
xchg
fmull
call
add
jge
aas
lcall
jle
sub
and
pushf
out
dec
lds
inc
out
mov
or
dec
xchg
sbb
cs
stc
jbe
mov
ljmp
jns
movsl
loop
add
and
leave
stos
lcall
outsl
jmp
and
pop
arpl
fsincos
dec
inc
inc
outsl
arpl
or
dec
aas
cli
xchg
dec
test
addl
in
popf
adc
lock
push
mov
dec
xchg
push
into
cmpsb
js
testl
cmp
push
mov
pop
cmp
jmp
mov
insb
sub
push
scas
xor
jo
movsl
inc
dec
push
pop
scas
out
pop
and
mov
mov
popf
xor
nop
sub
and
outsb
mov
sub
aad
enter
arpl
aas
daa
mov
pop
push
mov
sub
daa
sub
fists
icebp
in
lods
dec
outsb
xor
insl
jmp
and
scas
xchg
mov
les
adc
testb
push
xor
in
jbe
int
leave
fwait
jno
sbb
mov
xlat
fs
out
jne
ret
lds
sub
mov
dec
adc
sti
jbe
icebp
fmulp
pushw
insl
lods
or
xor
jle
xor
ret
ljmp
ljmp
pop
sbb
add
ja
fcmovb
push
mov
sbb
loope
movsl
lahf
jbe
and
loopne
fwait
shlb
mov
insb
imul
lods
mov
mov
ja
sub
fsubrl
and
cmp
xchg
xchg
iret
mov
shlb
addr16
cltd
sarb
loopne
out
fnsave
outsl
cli
das
xor
addr16
adc
mov
add
js
rorb
loop
cmp
adc
loope
cmp
mov
mov
mov
xor
bound
sbb
fldcw
aas
mov
ja
cmp
pop
es
xor
sbb
iret
dec
movsb
adc
movsl
inc
adc
mov
fwait
and
mov
fidivs
cmp
test
cmp
in
inc
movsl
add
xchg
dec
dec
lea
mov
pmuludq
les
sbbb
sub
mov
lea
or
insl
dec
jmp
inc
in
sbb
or
sbb
push
or
iret
int3
loop
add
push
repz
into
cltd
std
jecxz
mov
imul
pushf
mov
fisubrl
jo
ret
out
cmp
dec
mov
jno
leave
and
push
mov
jb
loope
mov
das
push
into
xor
mov
addr16
test
add
xchg
pop
cmc
scas
xchg
dec
test
add
inc
cltd
dec
add
insw
sub
test
pop
ret
or
ss
xor
in
mov
icebp
jl
jnp
cwtl
mov
inc
or
repz
push
pop
cmp
scas
or
pop
or
fmulp
inc
movsb
and
sbb
jl
shr
mov
jle
pop
cmp
sbb
sbb
jge
dec
lods
popf
mov
pusha
and
stos
ficoml
mov
push
ds
cwtl
in
adc
dec
outsb
xor
lcall
mov
sarl
int
mov
test
dec
mov
dec
in
pushf
xor
imul
mov
popf
mov
push
xchg
push
push
jl
shr
test
cmp
int
je
or
ret
lods
cli
clc
xor
fs
mov
out
out
inc
adc
mov
ja
mov
negl
sub
xchg
gs
lcall
leave
jmp
adc
into
and
push
popf
mov
jge
lods
sbb
les
push
das
push
or
xchg
inc
loope
and
inc
xor
push
mov
mov
repz
xor
pop
mov
add
addr16
add
cltd
inc
inc
xchg
fmull
cmp
push
dec
xor
aad
sbb
ss
testb
nop
das
icebp
push
js
leave
sub
into
das
cld
inc
hlt
lock
mov
push
lds
sbb
xor
add
repz
cwtl
and
cltd
mov
adc
lcall
rcrl
les
sub
dec
inc
ret
subl
add
cmp
mov
push
mov
cmpl
fadd
sbb
xor
dec
ret
leave
hlt
push
ret
cld
pop
adc
and
pop
leave
mov
in
add
mov
adc
sbb
inc
or
mov
mov
xor
pop
stos
addr16
out
rorb
mov
addr16
out
mov
xchg
sbb
xlat
mov
push
mov
push
clc
mov
jmp
dec
jmp
xor
sbb
lahf
pusha
mov
ds
adc
cmp
cmp
es
push
ret
pop
mov
rcr
push
cmc
adc
aad
lret
jge
add
jle
jl
fisubl
inc
testb
es
pusha
aaa
jmp
nop
or
out
lods
movsb
sar
popa
ret
sbb
push
or
fwait
and
ret
scas
pop
in
add
push
fwait
jmp
mov
test
jg
pop
fstps
mov
test
fbld
push
test
test
sub
jecxz
pop
clc
jae
ret
loope
mov
inc
xor
sub
out
mov
loop
jp
pop
jne
push
mov
and
xchg
loope
into
jle
mov
jno
out
mov
jg
clc
jae
divl
ret
or
int3
imul
aam
sbb
repz
out
out
out
in
roll
ret
jo
or
jg
in
int
xchg
sub
test
lds
cmc
mov
mov
in
into
xorb
loope
arpl
push
movsb
xchg
xor
stos
imul
aaa
ret
jg
outsb
out
adc
dec
dec
xlat
scas
cmp
movsl
lea
ret
loope
cmp
mov
inc
jmp
psllq
mov
pop
js
pop
daa
or
add
xor
imul
or
xor
stos
aaa
and
ret
stos
inc
mov
das
nop
xchg
jbe
je
cwtl
xlat
nop
xor
nop
dec
jne
push
fdiv
jne
add
ret
sub
jbe
push
xchg
dec
dec
cld
mov
jecxz
sbb
dec
push
cmpl
mov
pop
in
stos
rcr
scas
xor
stos
mov
fistl
push
ds
lods
cltd
call
adc
les
jmp
push
mov
je
inc
int
mov
mov
hlt
dec
dec
nop
xchg
outsb
test
lods
push
aam
cwtl
xor
ljmp
mov
fs
add
fsubrs
inc
push
inc
inc
negb
fcoml
inc
inc
sti
ljmp
fnstenv
inc
into
int
lods
lock
push
push
test
add
dec
push
mov
lods
mov
or
fcomip
icebp
mov
iret
cmp
sti
xchg
ja
dec
lods
xchg
inc
jl
cmpsb
movsb
or
mov
repz
ret
or
popf
or
lods
inc
mov
outsb
mov
sbb
pop
and
bound
stos
mov
sbb
inc
out
push
outsb
inc
add
jbe
sbb
fcompl
jp
push
iret
aas
sbb
dec
sbb
ss
adc
out
mov
and
sarl
lea
jg
mov
sub
xchg
shll
nop
fdivr
lgs
sti
xor
add
mov
sub
mov
jp
adc
sarl
movhlps
je
sbb
xor
jge
jo
xor
adc
mov
adc
fldenv
jno
sahf
xor
pop
mov
xchg
fs
lea
sub
iret
into
xchg
movsb
inc
je
add
daa
or
dec
jge
xchg
mov
push
outsb
es
outsl
dec
and
xchg
mov
mov
cld
pop
mov
dec
jnp
sbb
neg
adc
adc
jnp
hlt
ljmp
aad
xchg
push
mov
adc
sahf
loope
xchg
lret
xchg
jno
xchg
addr16
mov
sahf
and
jb
fs
jae
push
out
sbb
into
clc
arpl
pop
jmp
inc
dec
adc
imul
or
dec
ljmp
lret
ljmp
xchg
or
cmp
popa
inc
into
mov
aad
cs
mov
shl
mov
pusha
mov
inc
fwait
icebp
sub
fists
scas
cs
dec
imulb
out
xchg
mov
int
sbb
xchg
xchg
cmp
xchg
xor
int3
mov
cmpl
inc
lock
adc
pop
mov
sub
mov
iret
push
shl
push
adc
lock
mov
sbb
lret
popf
rcll
aam
decb
sbb
cmp
insb
inc
js
cmp
pop
adc
ljmp
iret
mov
xor
mov
pop
mov
inc
push
clc
sub
cmp
sbb
mov
int
push
scas
cmp
stc
mov
xchg
jbe
dec
movsl
aam
popl
lock
sarl
add
xor
lods
mov
dec
popf
xor
pusha
pop
or
cmp
and
gs
mov
or
rep
int3
test
pop
or
push
dec
sarb
data16
push
or
mov
inc
or
arpl
or
lea
enter
gs
push
inc
leave
jp
nop
pop
pop
aad
bound
das
ds
xor
cmpsl
data16
in
xchg
jl
push
jp
inc
sbb
ficompl
shr
mov
add
sub
fcoms
filds
scas
testl
sahf
xchg
adc
add
dec
das
ja
leave
imul
mov
ja
loope
and
jmp
andps
pop
mov
sbb
aad
add
mov
add
mov
xchg
add
or
addr16
ss
imul
jbe
xchg
int3
mov
xor
jl
sub
mov
enter
les
xchg
int3
cmpb
mov
jmp
test
cmc
lock
fucomp
outsb
stc
add
fwait
hlt
inc
xchg
inc
loope
or
inc
and
hlt
lds
cmp
xor
dec
and
sbb
aad
lret
shlb
and
lret
popl
jg
push
xchg
jl
inc
cli
popf
adc
or
pop
out
push
in
lea
or
notb
daa
xchg
test
stos
pushf
pop
in
in
adc
sbb
xchg
jl
fisttps
pusha
lods
mov
test
hlt
xor
and
and
ja
jno
pop
xor
pusha
ja
mov
dec
loop
push
insb
fwait
test
mov
mov
mov
jno
push
push
in
in
jno
fisubs
cld
in
cs
adc
scas
cmp
lds
gs
and
mov
dec
and
xlat
inc
popl
movsb
movq
mov
arpl
inc
xor
lret
je
mov
stos
inc
mov
and
shl
lock
mov
add
push
lahf
stc
push
out
psrad
dec
loop
mov
inc
sbb
fwait
inc
cmc
inc
mov
sub
lea
out
addr16
movsb
or
int
inc
cld
xchg
into
sbb
bound
mov
dec
push
shl
idivl
mov
cli
add
in
jg
pop
scas
adc
cmp
scas
cmp
inc
in
scas
mov
fnstsw
add
sbb
inc
dec
pop
mov
and
and
jno
call
cmp
mov
cmp
ja
add
pop
dec
movsl
lcall
fdivrl
adc
mov
jno
mov
add
mov
pushf
iret
and
aad
xchg
lret
xchg
icebp
inc
pop
sbb
pusha
out
mov
dec
sub
inc
add
push
std
inc
adc
cwtl
mov
jl
sbb
jg
aaa
hlt
scas
loope
test
mov
xchg
int3
cmpsl
mov
xlat
add
imul
fdiv
sbb
jp
jo
jo
and
adc
mov
in
mov
mov
rolb
xlat
xlat
cmp
sbb
mov
add
shl
push
mov
icebp
mov
xor
add
push
fldl
lds
bound
imul
pushf
push
daa
cmp
cmp
hlt
cmc
and
inc
sbb
xorb
lea
imull
in
sarl
mov
dec
add
push
pop
cli
cmpsl
sub
mov
adc
pop
add
jb
jne
jp
pop
xchg
cmpsl
out
lea
int3
mov
cmpsb
shl
f2xm1
dec
dec
push
into
daa
scas
dec
insb
lcall
shll
inc
sbb
dec
sbb
xor
fst
xchg
test
jne
jns
jns
insb
jb
out
push
js
ret
jno
xor
mov
arpl
in
pushf
sub
ret
insl
xchg
or
xchg
lcall
sub
cmp
in
cmp
push
jp
popa
mov
test
jb
pop
mov
inc
xchg
mov
add
fstpl
mov
jo
outsl
scas
iret
ljmp
xchg
push
sub
das
shr
mov
push
and
add
repz
call
daa
ljmp
leave
popf
jbe
out
pusha
push
ret
cmp
mov
jl
mov
jmp
fnstcw
jl
mov
cmpsb
rorl
mov
adc
sbb
shr
nop
ror
cwtl
inc
sarb
je
test
or
push
sti
lret
scas
cmp
insb
pop
mov
inc
mov
fdivp
push
cmp
sar
cmc
mov
fadds
xchg
sub
outsl
inc
push
out
mov
fistps
ret
push
inc
and
xor
ret
mov
lds
outsl
sahf
xchg
outsl
and
out
dec
lret
popf
jp
and
aaa
cmp
xchg
mov
ret
xchg
jnp
repz
fwait
movsb
out
push
sbb
jl
stos
and
outsb
push
jmp
mov
inc
or
std
inc
cmp
xchg
jnp
or
and
fwait
enter
adc
sarl
cmp
pop
inc
pop
mov
xor
sbb
sahf
xorb
jecxz
ret
push
divb
fsts
cmp
sbb
add
pop
push
mov
inc
add
jl
lods
mov
mov
dec
lods
mov
mov
ds
add
cmpsb
jg
popa
das
jp
jge
lds
mov
and
add
cmp
jo
aas
dec
andl
insl
mov
xor
dec
fmull
mul
sti
punpckldq
leave
pop
push
add
jno
addl
pushf
inc
hlt
mov
mov
jp
test
and
sbb
outsl
popf
pop
scas
enter
pop
or
push
jb
pop
jne
jno
cmp
insb
cmc
daa
xchg
addr16
jmp
dec
adc
sbb
es
stc
clc
addr16
hlt
testb
clc
xchg
mov
stos
push
adc
jp
in
and
movsb
or
mov
mov
sub
mov
shrb
cwtl
and
sub
fsubr
ljmp
cmp
not
rcl
mov
lret
mov
fsubs
inc
jecxz
mov
fwait
mov
sub
add
inc
shll
push
call
jnp
fstl
cmc
cmp
xchg
inc
mov
ds
sub
xchg
jne
dec
jbe
shl
notb
dec
xor
dec
cmp
jb
lods
cmc
mull
push
mov
shll
jge
mov
aaa
sahf
movsl
pop
push
out
or
pop
mov
xor
add
in
jg
fwait
mov
xor
xchg
mov
aas
roll
cmc
jno
int3
and
add
mov
cmp
shll
pop
mov
stos
ret
sahf
js
sti
add
movsl
movsl
dec
lret
jb
jae
repz
mov
inc
pop
gs
out
pop
xchg
dec
les
mov
stos
dec
shl
aas
sbb
mov
pop
mov
mov
fildl
sbb
inc
dec
sbb
out
sbb
mulb
mov
push
ljmp
daa
sbb
pop
mov
add
aam
and
jmp
jbe
jl
mov
test
push
dec
rcl
sub
push
ja
push
fnsave
push
sbb
xchg
lea
sbb
push
and
inc
sub
and
pushf
xor
push
scas
fists
xor
mov
jno
testb
dec
xor
negl
xorb
mov
push
pop
mov
insb
push
cmp
sbb
pop
mov
in
mov
bound
add
mov
es
mov
pusha
jo
jno
dec
lods
lahf
push
inc
lods
push
clc
mov
cmp
sahf
add
ljmp
jo
lcall
mov
sub
cld
stc
xchg
xchg
loopne
mov
dec
insl
mov
add
mov
int3
mov
jns
or
loopne
xchg
cltd
nop
xor
cmpsb
fs
pop
shrb
addl
inc
cmp
push
push
xor
add
xor
and
dec
inc
cmpsl
mov
sbb
xor
inc
xchg
cwtl
mov
push
movsl
je
lret
inc
sbb
xor
sbb
pop
xchg
out
dec
scas
dec
repz
sbb
mov
cmc
aas
push
sbb
addb
mov
jge
sub
cltd
mov
jmp
xor
popa
movsb
xor
push
mov
xchg
ja
xchg
sub
inc
pop
pop
std
jp
test
mov
xchg
dec
out
push
push
cmpsl
sbb
int3
mov
jecxz
and
or
xchg
add
mov
movsl
mov
pop
adc
jmp
mov
repz
sub
sbb
inc
mov
test
pop
mov
scas
xchg
jp
sbb
aas
jmp
and
cltd
cs
pop
push
adc
adc
push
daa
adc
pop
shl
sbb
cmp
mov
mov
mov
pop
sahf
xchg
enter
popa
and
and
stos
pop
mov
add
push
aas
test
negb
cmp
lret
pop
xchg
cld
or
adc
sub
lods
push
sbb
mov
data16
idivb
aas
jl
cmp
xor
outsb
int3
mov
repz
repnz
pop
inc
cmpsl
std
mov
pop
jge
and
mov
int
sti
aad
xchg
mov
jmp
or
dec
mov
push
or
mov
scas
rcrl
nop
pop
cmp
jbe
addr16
popa
mov
adc
mov
jle
push
pop
enter
push
fs
inc
lret
dec
jnp
insb
and
cmp
cmpsb
out
jae
lods
xorb
inc
inc
or
dec
push
adc
sub
cld
add
jno
ljmp
mov
in
ficoml
push
sti
push
xor
mov
cwtl
fs
std
xlat
cwtl
pop
sub
mov
mov
fwait
out
sub
cmpsb
dec
xchg
mov
andb
ss
dec
movsb
pop
mov
push
dec
inc
loopne
shrl
lret
add
cmp
testb
push
pop
subb
lds
loop
inc
stos
and
hlt
ja
mov
lret
dec
and
imull
push
nop
or
push
pop
adc
ljmp
lea
mov
fwait
hlt
sub
jmp
or
flds
cmp
xchg
pop
lcall
or
xor
gs
pop
xorb
jecxz
sub
or
dec
fimull
push
pusha
adc
pop
mov
decl
popf
dec
jb
sbb
popf
cmp
loop
aad
inc
mov
ret
pusha
nop
lods
loope
mov
bound
mov
fimull
or
jmp
sub
xchg
jp
lret
mov
adc
daa
js
inc
insb
xchg
int3
push
insb
cmp
fwait
push
sahf
clc
out
mov
aas
xor
imul
pop
xchg
jae
sti
es
xchg
add
lock
aaa
jecxz
push
pop
fwait
push
pop
mov
idivb
pop
cli
leave
lods
shr
inc
sbb
daa
add
lcall
push
insb
or
jp
push
push
inc
cmp
insb
test
xchg
scas
enter
pop
lcall
insb
fisttpll
stc
stos
lock
loop
sbb
popa
adc
out
cmpsb
dec
pop
out
push
mov
xor
push
jne
lret
aad
pop
loopne
movb
cmp
lods
dec
xchg
cmp
popf
cmp
out
fadd
lahf
out
in
xor
sbb
pop
adc
cs
loop
lods
out
xchg
sub
xor
jns
xor
popf
andl
test
mov
dec
inc
cmp
sub
mov
sub
dec
test
repz
outsl
cli
shrl
ret
daa
insb
jno
pop
les
pop
mov
in
fs
cmp
fs
inc
push
adc
xrelease
test
mov
push
arpl
and
sub
push
xor
lret
mov
sbb
jmp
mov
ret
shll
jb
jb
out
adc
cmp
shll
pop
cmp
shll
ss
push
jg
aaa
into
adc
stos
mov
vphaddwd
sub
insl
or
clc
push
cmovne
push
arpl
stos
push
aad
mov
arpl
inc
or
scas
sbb
out
pop
popf
jns
test
mov
ja
shll
icebp
icebp
and
out
xchg
cmc
sbb
inc
jl
fcoms
push
mov
and
sbb
nop
push
cmp
jmp
jg
push
xchg
adc
das
pop
lds
mov
fwait
jecxz
jne
and
push
test
lcall
stos
adc
xchg
insl
insb
bound
push
ret
inc
jnp
adc
pop
iret
dec
dec
insb
jo
dec
and
push
mov
js
push
or
adc
mov
shl
jne
xchg
fdivl
fldl
sbb
adc
adc
lods
xchg
mov
aam
and
xchg
mov
aas
jecxz
icebp
iret
pop
push
cmp
orl
pop
jno
imul
and
out
addl
jl
rcl
push
mov
or
out
push
mov
popf
ret
gs
adc
cmpsb
mov
adc
outsl
mov
inc
cmpsl
push
xchg
adc
adc
xor
je
std
and
testb
out
pop
shrb
cmp
jo
inc
lcall
int3
push
mov
push
sub
mov
movsb
enter
push
cltd
js
scas
inc
popa
cmp
lds
mov
out
out
out
lcall
inc
adc
repz
aad
add
add
data16
mov
xor
mov
fidivrl
mov
mov
cmpsl
jg
jmp
sub
xchg
shll
fadds
push
xchg
jb
bound
adc
mov
xor
leave
sbb
push
push
in
ds
aaa
pop
sahf
dec
mov
sub
lods
testb
cmpsl
mov
sbbl
daa
xor
xlat
cli
xchg
inc
pop
push
mov
adc
rolb
mov
fldt
ljmp
mull
mov
jne
hlt
adc
cmp
mov
inc
lods
lea
test
psubq
test
insb
nop
es
mov
call
aam
ss
adc
test
mov
fistl
and
jmp
jo
adc
mov
inc
jmp
out
loop
push
cld
lcall
push
fnsave
dec
push
stc
popf
scas
add
icebp
les
sub
xlat
rol
adc
lahf
jl
mov
fsubl
mov
jl
mov
lret
ja
push
sahf
in
push
push
addr16
mov
add
dec
sbb
lret
scas
call
into
xor
aad
iret
pop
in
xor
sub
xchg
inc
sbb
mov
pop
in
xor
je
xchg
das
fadd
adc
jmp
in
jp
sbb
shll
push
test
das
out
pop
dec
fiaddl
or
mov
dec
pop
data16
push
mov
movsb
pop
push
loop
mov
cmp
xchg
adc
xor
out
in
ljmp
hlt
insb
push
jge
pop
cmp
int
movsb
sti
inc
adc
arpl
inc
sub
aad
stc
in
sbb
xor
or
add
mov
inc
mov
push
mov
cmp
shrb
mov
mov
iret
mov
and
xor
dec
sbb
aaa
test
sbb
add
cmp
stos
push
rcrl
pop
popa
js
jb
adc
push
cltd
ret
mov
xlat
push
or
add
lret
inc
inc
call
adc
xor
add
imul
gs
ss
aam
test
fucom
jg
cltd
fwait
lahf
inc
push
cmp
movsbl
jg
pusha
js
sbb
aas
mov
mov
mov
mov
movsl
mov
cs
stc
or
and
sub
adc
test
adcb
sbb
icebp
jbe
cltd
mov
pop
or
inc
fst
or
cmp
sbb
ret
adc
xlat
push
inc
jl
mov
inc
jecxz
ss
in
in
add
xor
orl
and
movsl
loope
out
pop
paddsw
pop
fisubrs
mov
daa
pop
xor
fmull
fmul
pop
fimuls
add
adc
fcmovne
xor
lret
and
gs
lea
dec
test
insb
add
pop
out
xchg
lods
sbb
push
enter
mov
sub
mov
xorl
xorb
jno
and
repz
sub
dec
loope
lret
mov
orb
outsb
mov
jnp
inc
fld
insb
mov
int3
pop
mov
lcall
pusha
mov
enter
xchg
adcb
and
scas
and
fdivr
push
push
mov
jmp
pop
adc
inc
mov
not
dec
inc
es
xor
adc
test
mov
movsl
push
push
inc
es
pusha
jne
and
cmp
cli
dec
lahf
fstpt
xor
add
inc
dec
xorl
inc
das
psubusb
cli
push
test
pop
lret
adc
jns
mov
icebp
leave
fcoml
fbstp
jns
xor
clc
jp
lahf
test
pop
mull
jp
xchg
sub
gs
inc
push
imul
xchg
mov
xor
cmp
push
inc
lea
arpl
sbb
cld
push
fadds
icebp
adc
cmp
jg
mov
pop
sahf
lret
sbb
loope
jbe
rcl
adc
ror
jmp
dec
add
int3
imul
push
daa
stos
pop
cltd
fwait
ljmp
jg
push
cwtl
dec
insl
js
cmp
hlt
icebp
dec
es
pop
out
xor
mov
pushf
cmpsb
std
adc
in
jle
xchg
dec
xor
xchg
push
cli
or
test
or
push
rcrl
in
imul
mov
lods
sub
jo
shlb
aam
adc
lcall
sub
in
addr16
xchg
pop
xor
adc
and
sub
cmp
les
mov
sub
mov
ret
xchg
inc
add
or
mov
mov
pop
out
out
mov
int
xchg
aaa
stos
sub
mov
dec
mov
mov
push
or
mov
jle
and
and
dec
aas
xor
or
jg
cmp
mov
lods
xchg
jo
xor
cmpsl
outsl
and
js
sub
mov
cwtl
cs
jl
adcl
mov
int
and
pushf
sahf
lret
jmp
inc
clc
inc
mov
fwait
ljmp
cmc
scas
mov
mov
loope
mov
and
cmp
jb
dec
sahf
pop
lcall
inc
cmp
xor
mov
lret
jmp
mov
dec
je
jp
in
addr16
cli
jae
pop
xor
andb
push
stos
xchg
test
shrl
test
into
jmp
mov
sbb
mov
mov
cmc
jo
xor
sbb
pop
out
daa
arpl
dec
in
sbb
cmp
int3
arpl
push
mov
cld
stos
cs
xchg
cltd
outsl
lret
iret
jbe
inc
je
pop
std
call
into
mov
scas
pushf
push
push
pop
jno
in
dec
out
imul
pop
push
mov
mov
lods
cmp
sub
in
push
std
in
leave
enter
cmpsb
jmp
adc
out
sub
adc
or
adc
inc
and
jo
in
dec
adc
ds
sbb
mov
sub
add
xlat
ds
lcall
mov
inc
adc
jne
bound
mov
pop
mov
jb
shll
rcrl
outsl
jo
scas
in
imul
jmp
sarl
pop
push
sub
fidivl
inc
leave
push
and
push
add
jp
push
fs
add
or
inc
shrd
add
xor
les
ret
jge
jbe
pop
xor
inc
mov
inc
push
std
js
test
fxch
test
jno
int3
jnp
pop
std
data16
mov
adc
insb
adc
jno
ss
mov
cmp
cltd
scas
or
mov
bound
arpl
mov
cmp
in
dec
mov
test
add
mov
movsb
and
cltd
jb
stos
mov
jns
scas
rol
or
loope
mov
ja
mov
mov
cli
jecxz
mov
rcll
bound
in
jbe
push
in
xlat
and
pop
sub
inc
xlat
leave
mov
test
ret
lock
xchg
mov
ret
inc
out
ret
inc
sub
xor
dec
es
push
int
push
sarw
xchg
insb
pop
ror
lcall
or
inc
daa
je
stos
data16
or
xchg
movsl
xchg
test
mov
outsb
enter
out
bound
inc
cmp
cmpsb
xchg
dec
inc
adc
mov
mov
cmp
adc
pusha
stos
xchg
stos
scas
and
shlb
lods
pop
xor
and
outsl
cmc
test
cmpsl
mov
imul
adc
movsl
and
cmpsl
and
mov
push
cmpl
ja
pop
pop
jge
mov
stos
xchg
jmp
mov
pushf
xchg
into
ss
lods
in
fdivrl
mov
cltd
dec
sub
adc
sarl
outsb
xchg
lahf
sub
iret
cmp
xor
int
fwait
sub
das
aam
es
shlb
mov
es
or
or
add
je
in
or
cmp
jle
imul
mov
inc
inc
or
dec
xlat
loop
mov
int
or
call
add
in
arpl
repz
ss
jb
mov
inc
xor
push
sbb
aam
lcall
rolb
push
stos
mov
sahf
sarl
inc
or
cmp
jecxz
xlat
pop
leave
push
lret
inc
sarl
rcr
cli
mov
add
fadds
xchg
pop
cld
addr16
jg
sub
fcoms
cmpsb
out
xchg
test
fdivp
ss
in
outsb
sahf
scas
outsb
adc
nop
jmp
sbb
rol
cmp
adc
pop
int3
push
add
out
dec
stos
std
fwait
sti
or
adc
inc
xor
dec
adc
push
mov
cmp
cmc
iret
into
adc
mov
sbb
lret
nop
ss
mov
insb
cmc
out
insl
inc
out
test
jl
les
fs
pop
push
mov
js
mov
pop
ljmp
dec
shll
push
shlb
inc
sarb
call
pop
pop
add
inc
cmp
cld
scas
add
testl
add
mov
adc
cs
and
cmp
or
or
popf
imul
and
mov
mov
icebp
sbb
mov
popf
and
iret
nop
dec
aam
rcll
sbb
popa
es
mov
int3
fdivrs
sub
mov
cmp
xchg
sbbl
xchg
jge
scas
sarb
gs
sahf
orb
fistl
xor
icebp
or
fidivs
shrb
in
in
xchg
jge
dec
mov
sbb
in
outsb
jmp
in
repz
jle
dec
push
loop
in
xchg
fimull
sub
xor
js
or
loopne
fdivs
loopne,pn
inc
pop
xor
insb
sahf
test
inc
sub
xor
sub
adc
movsb
push
mov
jmp
xchg
add
add
imul
sbb
xor
std
test
xorb
cmp
dec
loopne
push
popf
lahf
mov
xor
dec
dec
faddl
les
lret
adc
aam
imul
pop
push
test
shlb
push
jb
push
push
pop
loope
cmp
push
fs
pop
and
mov
loop
and
sub
mov
aas
movsb
xlat
jno
arpl
imul
jge
lea
mov
stos
adcb
and
pop
mov
iret
iret
rcrb
aam
inc
mov
cmpsb
mul
xchg
mov
adc
imul
lret
enter
mov
push
pop
jns
dec
ja
ds
int
outsb
adc
cmc
iret
mov
add
pop
mov
sbb
icebp
xchg
aad
leave
aaa
jmp
leave
push
loopne
xlat
push
and
mov
sbb
mov
in
sub
pcmpeqw
add
or
push
rclb
imul
mov
or
orb
adc
jb
fbld
push
sub
push
mov
mov
sbb
ljmp
rolb
xchg
ficoms
sub
in
in
je
jg
xchg
notl
fs
fisubl
or
xchg
aaa
insl
xchg
jge
inc
xchg
pop
jp
jmp
aad
test
xchg
stos
xor
ret
pushf
adc
xchg
sub
mov
hlt
and
push
mov
push
push
sub
sub
jae
xor
daa
bound
jg
aas
dec
fistpl
push
fists
push
sar
inc
pop
mov
pop
movsb
fsub
ret
jo
inc
or
test
lretw
cmp
and
bound
mov
test
aad
test
gs
hlt
push
ror
sub
sbb
lret
adc
addb
jp
imul
jle
push
xchg
lcall
nop
gs
dec
jbe
mov
xchg
cmp
cmp
dec
push
xchg
cmp
jns
xchg
add
lahf
inc
adc
push
jl
in
jmp
loope
mov
int
mov
lea
scas
cltd
les
xchg
addb
dec
clc
loop
ss
cwtl
xchg
pop
out
adc
inc
xor
jmp
push
in
testb
aas
imul
jl
outsb
lods
adc
repz
or
jle
inc
jns
push
sub
jecxz
dec
add
iret
vcomisd
repz
mov
icebp
ljmp
pop
push
loopne
push
sbb
sbb
mov
gs
mov
cmpb
cmc
out
je
mov
add
lret
add
std
lret
add
aam
mov
jmp
jne
xchg
mov
xor
or
faddl
xchg
lahf
movq
sbb
sub
outsl
jnp
sarl
sar
bnd
dec
ret
sub
add
cmp
pop
jne
mov
push
rcr
fimull
jbe
lret
mov
mov
stos
sbb
xor
rolb
rorl
xor
mull
lret
loop
fnstsw
adc
daa
arpl
sub
inc
pop
sbb
or
mov
aas
call
jns
sbb
lcall
outsb
mov
jb
xchg
popf
mov
int3
mov
in
jb
rolb
ljmp
cmp
data16
inc
daa
adc
ljmp
out
jbe
call
pop
call
aaa
cltd
mov
and
dec
push
out
aad
fnstcw
stc
pop
shll
sub
or
mov
ja
push
jne
jno
xlat
push
movsl
pop
loop
pop
adc
or
sub
arpl
lahf
or
or
add
jno
push
pop
pop
pop
std
sbb
sub
and
cmp
popa
test
mov
loop
or
or
or
adc
mov
and
push
inc
sub
movsl
pop
jno
push
xchg
dec
push
push
enter
out
arpl
pop
xchg
xor
out
popf
pop
pop
cmpsb
insl
push
pop
mov
or
dec
push
adc
movsb
xchg
mov
mov
lret
and
and
inc
mov
std
mov
mov
pop
shr
mov
adc
push
fwait
stos
test
xchg
push
fistpl
pop
notl
inc
mov
push
cmpsb
mov
repnz
jnp
imul
adc
push
enter
popf
xorl
cmpsb
cmp
ret
stos
in
or
leave
sub
jbe
dec
stos
jecxz
inc
imul
jg
adc
into
mov
or
stos
ds
outsl
pop
cmpsb
clc
jb
xchg
sti
dec
mov
daa
std
push
mov
mov
inc
and
out
rclb
jno
ss
push
jnp
arpl
movsl
sti
fldenv
dec
sub
iret
or
int
cmpsl
mov
push
roll
mov
mov
shld
and
adc
daa
cltd
cmc
adc
es
pop
dec
aad
ljmp
inc
xchg
jnp,pt
sub
shlb
push
dec
popf
pop
sub
clc
bound
dec
xor
popa
inc
call
inc
sub
pop
xchg
hlt
icebp
push
adc
out
mov
clc
jne
test
popa
inc
pop
ja
lea
ljmp
daa
jge
addb
daa
mov
push
ficoms
inc
jle
dec
sahf
cld
mov
mov
mov
cmp
xchg
jecxz
sbbl
roll
adcb
cmpsl
mov
mov
push
test
aas
inc
xchg
in
dec
cmp
insl
xor
dec
call
xlat
pusha
pop
or
es
dec
cmp
mov
adc
mov
clc
lret
push
jp
inc
fldcw
lcall
adcw
inc
cmp
outsl
mov
cmp
push
inc
cld
movsl
add
loope
fdiv
pop
lods
inc
mov
daa
insb
outsl
push
int
mov
and
jge
pusha
push
bound
cmp
insb
jnp
jmp
out
hlt
or
xor
scas
enter
cmp
mov
xchg
xor
pop
lret
loop
sub
xor
mov
ja
movsl
pop
add
std
into
das
mov
out
pop
stos
int3
push
int3
pop
adc
push
icebp
out
jle
ss
lahf
sub
adcl
adc
andb
mov
adc
sbb
cmp
xor
testb
shr
mov
adc
or
outsb
iret
call
hlt
imul
iret
iret
scas
jmp
xor
scas
icebp
jg
dec
dec
push
clc
enter
loope
cmc
fdivrl
cld
bound
push
clc
cmc
ds
mov
dec
xchg
lret
popa
mov
push
mov
inc
addr16
incb
pop
push
jp
test
das
lods
int3
dec
or
mov
cmpsb
mov
sarb
arpl
lahf
ja
and
call
or
adc
lea
je
sbb
sub
xchg
jbe
mov
jnp
fwait
outsb
aam
lcall
lock
popf
mov
dec
movsb
cs
mov
dec
nop
leave
adc
lea
sbb
repnz
dec
cmp
xor
int3
loop
adc
pop
cmp
mov
push
and
dec
push
loopne
xchg
sarb
or
clc
lds
jns
sub
in
fwait
lahf
sbb
add
pop
adc
inc
iret
xor
fwait
xlat
push
jmp
push
gs
or
js
cmp
adc
pop
pop
pop
or
xlat
dec
push
sarb
inc
pop
mov
sahf
cld
sub
js
pop
pushf
lock
push
mov
lock
and
and
push
and
loop
jecxz
push
cwtl
mov
or
dec
adc
add
test
insb
dec
xchg
push
into
repnz
pop
lods
test
inc
cmp
jle
and
pop
add
dec
pop
xchg
sbb
sahf
imul
xor
in
lret
mov
add
pusha
cwtl
mov
jno
push
xor
mov
pop
mov
stos
pop
jl
loope
negl
inc
cmpsl
push
inc
jp
dec
adc
mov
jae
xor
mov
test
gs
repz
inc
dec
sub
popa
push
dec
jl
pusha
adc
jne
dec
out
rcr
dec
repnz
mov
nop
dec
lcall
and
jp
cmp
cmp
fildll
lret
inc
mov
out
push
pushf
cmp
ret
push
les
sbbb
inc
fdivrl
mov
sub
mov
data16
push
adc
push
lea
push
in
es
bound
and
mov
cmpsb
dec
mov
cmp
inc
loop
mov
aas
push
or
daa
filds
dec
pushf
cmp
and
idivl
cwtl
inc
dec
pop
inc
inc
imul
repnz
pop
mov
iret
sbb
fnstsw
mulb
mov
add
pusha
jne
cmp
add
mov
inc
iret
mov
sbb
das
mov
and
mull
push
xor
mov
insl
sbb
xchg
iret
xchg
sub
or
adc
jne
dec
cmp
es
movsb
aad
jmp
add
popf
push
xchg
imul
or
push
test
int
out
aad
sub
pop
test
addb
stos
pop
xor
sbb
sub
sahf
mov
sub
shl
sbb
adc
fistps
fwait
shlb
sub
jge
jle
lock
js
mov
aad
in
mov
jge
sti
push
jge
push
hlt
adc
mov
mov
adc
das
nop
xor
sarb
sbb
dec
mov
jle
cmp
inc
pop
sbbb
out
negb
add
arpl
or
pop
push
insb
jbe
pop
jbe
aam
jp
dec
out
fisubrl
and
push
xchg
movsl
push
repz
push
xchg
cmc
mov
xlat
repz
mov
xchg
rcll
les
cmp
pop
pop
xor
imul
and
fistpl
arpl
adc
dec
repnz
push
pop
int
jl
fsub
mov
fs
adc
mov
insb
push
pop
inc
jle
fucomi
pop
mov
push
cmpb
mov
cmovle
xchg
mov
or
jnp
in
jne
sahf
sub
cmp
enter
jbe
inc
xor
fwait
or
jle
mov
mov
fildl
jmp
and
hlt
daa
xchg
lret
adc
cmp
aam
lret
cld
cmpsb
andl
push
dec
test
jg
hlt
sub
push
mov
pop
jns
lret
adc
out
popa
ljmp
mull
fistpl
std
sub
inc
mov
add
popa
das
and
repz
mov
ficomps
sbb
mov
xchg
gs
andl
inc
loope
loop
or
lds
out
sbb
insl
fsubl
add
sbb
ss
and
push
dec
fnstsw
movsl
jbe
dec
cmc
adc
xor
push
lahf
loope
icebp
mov
rcr
arpl
outsb
sahf
faddl
faddp
jno
ss
divl
loop
fmuls
mov
pop
mov
stos
mul
mov
es
inc
sbb
test
push
jmp
adc
pop
mov
clc
inc
jns
mov
ss
push
sub
cmp
inc
adc
add
int3
iret
push
mov
push
mov
or
scas
mov
jns
out
cmp
inc
lahf
pop
fwait
xchg
xchg
aaa
push
clc
imull
adc
adc
test
out
or
jmp
lock
inc
pop
xchg
shlb
and
test
leave
sbb
mov
jne
adc
mov
sahf
jae
push
outsb
push
pushf
ja
into
clc
inc
push
fnclex
or
gs
in
aas
jl
dec
imul
stos
or
in
imul
std
sbb
sbb
hlt
frndint
add
loope
out
add
xchg
inc
jne
adc
and
insl
inc
cld
mov
pop
xchg
cmp
in
in
cmc
xchg
push
aas
push
jno
in
mov
jecxz
push
aad
or
aam
jle
push
mov
mov
jne
movsl
cwtl
shll
pushf
mov
jg
sub
mov
lret
xchg
je
ret
leave
and
xchg
loope
mov
aam
std
ljmp
cmpsl
insb
jle
sub
cmpsl
icebp
fwait
sahf
mov
cld
iret
dec
adc
and
clc
mov
data16
xlat
in
aas
xor
mov
mov
jae
push
ficoml
and
cltd
in
neg
fistpl
cmp
lea
in
out
leave
sub
or
arpl
xchg
out
cmp
push
enter
pop
mov
xor
add
je
jb
xchg
push
xchg
pop
das
mov
mov
inc
fsubp
cwtl
sub
jb
push
cmp
sbb
inc
notb
cltd
jmp
sbb
cmc
cmp
rorb
sti
sahf
push
xor
int3
xchg
adc
adc
mov
lods
idivl
jp
test
mov
aam
cld
adc
jmp
pop
shrl
gs
xchg
push
lds
rorb
adcb
imul
push
cmpsb
mov
pop
jmp
mov
int
fadd
pop
jne
cmp
ds
jg
lahf
jns
xchg
and
jp
into
clc
clc
pushf
std
pushf
dec
jo
js
push
and
lret
cmp
mov
ficompl
into
push
rcll
jg
mov
dec
adc
out
aaa
push
cs
inc
pushf
sub
test
adc
pop
push
jbe
or
xor
ds
or
dec
dec
out
data16
stos
xchg
and
mov
scas
push
lret
add
addr16
fdivl
xor
mov
xchg
cmp
sbb
out
cwtl
mov
cld
adc
push
xchg
and
in
pusha
jb
sub
jnp
negl
dec
dec
mov
sarl
inc
cmpsb
test
incb
ljmp
push
test
out
dec
sbb
adc
fs
insb
jns
iret
sub
insb
lahf
aas
and
pop
inc
mov
jne
lds
out
xchg
in
cld
add
cmp
aam
mov
xchg
mov
mov
cwtl
les
and
cmc
pushf
mov
lcall
xchg
mov
lcall
ret
fimull
push
dec
push
push
aam
loop
push
mov
and
jns
or
popa
mov
insb
sub
fistl
dec
mov
mov
and
cmp
fldenv
aam
ljmp
lods
test
loopne
pop
fisttpll
cltd
fdiv
cwtl
fwait
and
out
push
sbbl
dec
and
loope
and
cli
mov
dec
mov
loope
hlt
lock
push
pop
push
call
jmp
add
or
adc
negl
imulb
and
fisubrs
fldcw
inc
mov
add
pop
test
leave
call
inc
push
in
and
outsl
cmpsb
dec
cmp
leave
or
and
test
jecxz
push
sbb
push
cmp
jns
inc
xor
out
push
mov
cmpsl
xchg
dec
lret
pop
jns
or
lret
xchg
or
shrb
fcom
lods
sbb
mov
add
cs
add
leave
rcll
sub
cmpsb
add
mov
je
sbb
cmp
and
lds
push
or
popf
push
out
cli
jp
adc
loopne
sub
pop
lret
outsl
adc
and
xchg
fisubrs
inc
hlt
fildl
ffreep
fstl
rcr
inc
sti
dec
adc
movsb
pusha
mov
das
mov
ja
cmp
nop
dec
cmpsb
add
mov
xchg
mov
cmp
sbb
dec
orb
sub
xchg
sbb
jno
and
push
pop
in
neg
outsl
insl
sub
jae
clc
cs
mov
push
sar
mov
mov
popa
jle
das
xorl
scas
mov
and
or
inc
mov
movsb
ss
inc
test
sti
nop
loopne
jle
cltd
dec
xor
jb
push
popa
push
push
xchg
mov
rcrb
cmc
ficomps
sbb
adc
int3
ret
sub
dec
cmp
loope
sub
add
pop
adcb
push
dec
out
and
lcall
cmp
in
push
popf
jno
mov
negb
fstpl
jg
pop
lock
test
lock
jo
add
lds
jmp
xchg
adc
aam
pushf
inc
push
test
es
notb
jg
push
or
pushl
cs
dec
adc
jmp
subb
xor
adcb
insl
js
leave
fistpll
aas
sahf
outsl
push
xor
loopne
decb
fistpl
jae
jge
dec
insb
mov
addb
les
ds
xchg
xchg
push
cmp
push
fisubl
jns
call
jle
and
jb
jns
jmp
push
adc
mov
pop
and
fistpll
xor
xchg
pushf
xor
sub
xor
popf
jo
jg
push
and
jl
jmp
add
adc
imulb
ds
sbb
mov
outsl
mov
xor
sbb
movsl
jmp
dec
movsb
xor
push
add
and
out
ljmp
inc
pop
loope
jns
push
out
aam
cli
mov
flds
cmp
in
jmp
mov
pop
addl
cltd
scas
push
lea
jmp
loopne
mov
sbb
ss
cli
dec
negl
mov
popa
xor
stos
scas
ljmp
fldcw
jle
stos
inc
das
ficomps
repnz
lock
lods
and
mov
fiadds
ficompl
inc
lods
mov
dec
lds
lahf
cmp
adc
mov
movsb
clc
xor
int3
js
dec
les
outsl
pop
pop
stos
sbb
xor
cmp
sbb
mov
push
lea
jb
stos
xchg
xchg
add
jecxz
cs
jns
push
xor
cmp
arpl
inc
test
push
xrelease
test
mov
jp
imul
hlt
pop
sar
outsl
mov
test
fwait
inc
and
lcall
jno
inc
adc
add
pop
or
xor
popf
mov
aaa
mov
dec
pop
in
flds
push
pop
in
push
shlb
inc
fnsave
dec
xor
xchg
cli
neg
in
and
outsb
cmp
jecxz
mov
lahf
dec
cltd
inc
popf
mov
clc
ror
mov
pop
and
int
mov
fildll
call
jne
xchg
arpl
iret
call
jmp
mov
add
stos
nop
mov
out
and
jg
jne
shlb
dec
into
ss
adc
mov
jo
les
adc
cmp
inc
lret
sub
sub
cmpsl
fwait
inc
mov
mov
jnp
mov
push
sbb
jecxz
out
jg
in
pop
push
stc
adc
enter
sub
ja
add
sub
fbstp
clc
jp
jge
js
pop
in
into
inc
mov
lahf
xchg
mov
loopne
aaa
popa
leave
or
into
jmp
inc
mov
mov
fistl
or
pusha
xchg
add
test
shll
inc
push
pop
movsb
pop
mov
sbb
andb
les
mov
inc
imul
mov
jecxz
scas
lock
cli
ljmp
repz
stos
into
sbbb
and
fwait
adc
pop
push
xor
push
aaa
adc
mov
dec
or
jge
ljmp
lahf
call
fdiv
aad
gs
jno
and
stos
mov
bound
sarl
and
push
mov
test
xchg
xchg
insb
and
cltd
xor
mov
push
stos
outsb
lcall
sub
cmp
test
xchg
mov
sbb
in
xorb
popa
fsubl
or
mov
sbb
pushf
xor
jecxz
stos
fimull
xor
xchg
outsb
add
pushf
xor
xchg
fwait
jne
cltd
enter
mov
cmp
int
mov
adc
mov
mov
repnz
sub
jecxz
es
lds
add
mov
dec
fs
fcomi
mov
or
cwtl
add
loopne
icebp
mov
jg
popa
or
leave
push
xor
add
xchg
stos
cmc
mov
and
xor
sbb
push
push
and
es
inc
aas
mov
push
sub
mov
mov
out
iret
jnp
xor
dec
mov
ret
push
jb
xor
jnp
xchg
sbbb
mov
inc
je
inc
push
mov
cld
roll
xor
push
sarl
stc
inc
sub
imulb
push
or
lock
cwtl
xchg
cltd
add
sub
push
sbb
pop
inc
mov
sub
insb
addr16
aad
adc
out
add
sbb
dec
adc
mov
pusha
xchg
out
mov
mov
or
stc
mov
mov
shll
adc
mov
push
sbb
imul
cwtl
pop
push
cmpsb
or
mov
lcall
xor
test
mov
or
push
cmc
mov
lea
fwait
xor
fwait
mov
mov
adc
mov
out
xchg
mov
xchg
ret
adc
ja
shll
xchg
jmp
das
das
fisttps
cmp
mov
mov
pop
mov
mov
cmp
lahf
out
sbbl
and
cs
inc
dec
push
test
cmpsl
mov
ret
xchg
jb
stos
mov
lods
adc
pop
sub
into
mov
imul
xor
lods
cmp
push
insb
adc
gs
stos
dec
adc
sbb
scas
jne
loope
insl
pop
fisttps
fistps
sub
faddl
fidivl
popf
loopne
sbb
adc
sbb
scas
mov
inc
and
dec
cmc
adc
mov
adc
cld
add
mov
out
xor
fistpl
fcmovnu
cs
mov
popa
in
das
pop
sbb
sub
ret
in
insl
shll
negb
js
in
daa
cltd
adc
into
mov
sub
mov
cmc
imul
pusha
aam
outsb
stc
lods
cmpsb
sti
out
stos
jle
stc
jne
mov
pop
js
ds
hlt
jns
add
shrl
jg
add
mov
push
lea
pop
test
stc
data16
mov
sbb
cmp
mov
testb
data16
cmp
cmc
mov
test
dec
xchg
xchg
test
xchg
pop
mov
cmp
pusha
xchg
cwtl
cmpsl
jne
push
dec
stos
mov
push
ror
and
jbe
mov
xchg
jle
pop
inc
adc
into
push
shld
in
ljmp
and
lds
sub
insb
loopne
in
or
or
sub
add
fs
ret
xchg
outsl
pushf
subl
mov
cli
stos
sub
dec
or
dec
fs
cmp
mov
daa
in
imul
inc
mov
jns
bound
icebp
ljmp
mov
cmp
in
jbe
pop
ret
add
mov
jge
cli
scas
repz
push
lods
int
ret
push
nop
mov
sbb
stos
rcr
pushf
pop
add
jbe
cli
repnz
lods
lahf
sbb
out
inc
cmp
xchg
cld
add
pop
addr16
stos
pusha
lds
int
or
arpl
inc
push
aaa
lds
sub
dec
daa
fmul
out
movsb
and
sub
mov
adc
bound
sbb
xchg
xor
adc
hlt
stos
pop
roll
jae
rcrl
push
outsb
mov
xchg
insb
mov
lods
cmp
xor
sub
lea
sub
ja
int3
and
xor
je
sub
ja
mov
or
sub
ja
xor
pmaxub
nop
shll
mov
cs
mov
pusha
pop
ljmp
dec
pop
fldl
adc
jns
jp
push
inc
xchg
mov
inc
daa
mov
into
out
leave
or
scas
mov
add
sahf
push
xor
mov
jae
imul
jo
ljmp
add
into
or
rcrl
test
dec
outsb
mov
pop
mov
shlb
jne
push
dec
cli
cmp
inc
fistl
dec
pop
mov
inc
push
and
cmp
insl
jge
inc
mov
clc
fnstenv
xchg
push
ficomps
scas
mov
push
pop
in
lcall
call
push
fwait
cmp
ficoms
sti
lods
dec
jno
enter
lret
jb
mov
js
imul
jge
mov
out
fidivrs
pusha
cmpsb
lods
cmp
pop
aas
and
xchg
mov
std
stc
mov
dec
fwait
jp
sbb
fbstp
and
pop
out
pop
jle
sbb
imul
mov
mov
adc
int3
popf
xchg
jns
mov
cmp
ja
iret
pusha
mov
add
cmp
lahf
xchg
jl
dec
mov
lea
cmpsb
stos
clc
lds
sbb
xchg
cmp
lock
push
scas
mov
imul
insl
sbb
pop
addr16
out
icebp
enter
ljmp
loopne
in
push
xchg
mov
jg
dec
inc
addr16
mov
mov
aam
mov
adc
inc
pop
fistps
cmp
das
sbb
rclb
ret
ss
aas
and
mov
and
or
adc
push
cmp
int3
bound
fstps
divl
jg
sub
adc
mov
xlat
push
sbb
out
mov
scas
shr
mov
jae
pop
pop
int3
adc
daa
or
mov
mov
in
push
push
cmp
nop
sub
mov
leave
roll
mov
ret
push
test
test
xchg
into
add
mov
sub
addb
into
sar
repz
or
stc
lds
repnz
jge
daa
cmp
rclb
cltd
cltd
bound
sbb
add
jecxz
sbb
ds
jge
fdivrl
dec
mov
cltd
ja
mov
mov
dec
pop
mov
lahf
loop
gs
or
pop
aad
js
shlb
loop
repnz
jge
les
mov
inc
sub
nop
pusha
test
fwait
js
and
inc
jmp
jb
pop
mov
push
inc
inc
mov
ja
mov
nop
push
push
out
adc
sbb
xor
fidivrs
inc
sbb
pushl
lods
icebp
xchg
jle
loope
jo
dec
push
sbb
xchg
push
in
jno
movsl
ds
pushf
sub
addl
mov
adc
movb
dec
adc
arpl
rclb
mov
repnz
sub
jne
loope
adc
test
enter
fisttpl
cmp
inc
lock
ret
mov
pop
cwtl
adc
test
push
mov
xchg
lret
arpl
daa
rorl
pop
fldcw
sti
rclb
and
xor
js
jg
aad
sbbb
std
in
jle
loop
jge
sbb
ret
push
out
lea
repz
inc
mov
rcl
jno
ja
lods
mov
and
pop
jo
lret
push
push
add
xor
ds
cltd
sub
add
mov
test
mov
imul
mov
fprem
pop
mov
shll
call
pop
xor
sub
leave
ja
fucomi
ja
cld
adc
les
mov
xchg
fildl
jns
xchg
xchg
rclb
daa
pop
jl
std
mov
add
out
rclb
push
fmul
cwtl
pop
pop
ja
imul
aad
test
lret
cli
push
iret
fstpt
xor
push
jo
dec
or
xchg
out
enter
jbe
push
lret
pop
mov
fwait
add
pop
mov
push
lods
push
into
mov
xlat
ja
sub
cld
mov
cmp
sub
xor
or
push
call
fwait
sbb
div
iret
add
stc
push
mov
push
scas
jbe
pop
mov
mov
adc
jmp
mov
add
add
jg
dec
mov
clc
dec
push
aas
lret
sbb
insl
jne
xchg
add
enter
pop
cmp
inc
fistps
or
ss
repnz
dec
push
or
je
inc
loop
cmp
lahf
inc
lea
mov
popa
bound
js
or
add
jns
nop
push
scas
lret
pushf
out
test
mov
popw
mov
ficomps
loop
pop
incl
push
mov
add
ljmp
lea
adc
mov
push
pop
cmp
outsl
fmul
mulb
sbb
lods
rep
mov
repnz
nop
cld
dec
sbb
inc
jo
inc
arpl
cltd
jge
iret
inc
dec
imul
pop
movsl
dec
test
js
call
mov
xor
dec
imul
xor
push
xchg
mov
mov
mov
cmp
ljmp
in
jge
ljmp
mov
fwait
sbb
adc
clc
adcl
mov
push
sub
or
imul
dec
mov
mov
jge
gs
jmp
rorl
mov
fwait
xor
call
daa
cwtl
jmp
adc
pop
into
and
daa
sub
sbb
outsb
or
loopne
lret
push
mov
adc
or
inc
inc
inc
addr16
mov
dec
xchg
outsb
shrl
pop
sbb
out
lea
in
ljmp
stc
pop
mov
cs
pop
push
push
test
iret
in
mov
test
iret
and
cmp
pop
xor
fmull
in
push
push
mov
cmp
xchg
ds
js
sub
das
sub
pop
xor
pop
ficomps
or
mov
scas
lods
sahf
std
or
jp
cmpsl
pop
xchg
adc
push
and
sub
sbb
lea
cmc
int
mov
xor
xchg
xchg
adc
hlt
adc
sub
push
in
sbb
cmpsl
mov
scas
sub
fcomps
sub
push
cmp
notb
push
sbb
test
mov
pop
xchg
jno
pop
add
std
pop
jo
jmp
lea
mov
add
dec
cmpsl
loopne
sbb
insl
xchg
ror
lret
cmp
mov
lret
jo
xor
xor
shlb
adc
scas
ret
in
mov
test
mov
pop
push
fisttpll
and
jb
cmp
fisubs
out
clc
lods
clc
ss
inc
aaa
mov
inc
ret
lahf
push
dec
mov
movsl
call
inc
xor
inc
out
pushf
ss
adc
scas
mov
loop
pop
jecxz
push
notl
sbb
add
int
pusha
jg
and
dec
out
divl
cld
and
or
mov
lret
aad
lods
adc
sti
pop
mov
cmpsb
sti
add
push
pop
shl
mov
repnz
neg
cmp
sub
or
aaa
xor
std
add
shl
xor
fistpll
ja
xor
iret
out
xchg
popa
sub
jbe
repz
push
out
icebp
and
in
adc
jns
dec
scas
xor
mov
jns,pn
mov
stc
xor
xchg
repz
into
bound
inc
xor
scas
and
andl
sub
movsb
stos
cmp
cwtl
and
je
out
test
dec
out
push
rcrl
mov
add
and
pop
mov
fldcw
cmp
sub
subb
inc
clc
or
fdivs
xor
das
fstpl
in
push
add
loopne
wrmsr
repnz
scas
or
aas
mov
dec
mov
mov
pop
mov
xorl
std
pop
aaa
xchg
inc
movsl
mov
pop
sti
xchg
or
inc
jge
sbb
pop
xor
cwtl
loopne
sti
cs
xor
rorb
dec
outsb
mov
xchg
push
jae
punpckhdq
cmp
dec
push
test
inc
xchg
int3
stos
xchg
push
insl
lock
xchg
xchg
mov
dec
notb
and
ficompl
ja
test
dec
dec
fisttpl
mov
adc
dec
and
mov
cmpsl
jbe
push
mov
lods
cld
popf
jp
pop
dec
jle
lahf
xor
movsb
pop
jnp
out
dec
jge
ret
jbe
imul
bound
xor
daa
test
stos
fiadds
lods
jge
pop
jg
es
fiaddl
cwtl
push
enter
mov
inc
mov
lods
adc
clc
xorb
fwait
adc
xchg
imul
ds
mov
fstps
sub
stos
in
sarb
cmp
mov
sbb
insl
std
xchg
jmp
push
dec
xlat
push
sub
jbe
leave
sbb
aaa
fwait
jnp
add
pushf
hlt
es
and
xlat
movl
lret
pop
loopne
mov
js
pop
dec
test
mov
and
rcrb
sti
mov
movsl
cmp
cmp
dec
out
mov
loope
cmpsl
bound
or
or
and
mov
push
rcll
xor
mov
mov
pop
push
sub
daa
enter
xchg
xchg
cpuid
aam
sbb
dec
imul
jne
push
mov
icebp
jbe
mov
mov
test
insb
inc
xor
add
repnz
scas
mov
or
cmpb
ljmp
mov
fnstenv
dec
in
movsb
push
call
shr
adc
adc
insb
out
xchg
aas
fdiv
push
mov
pop
xchg
movsb
aad
pusha
pop
pop
pushf
fdiv
and
mov
push
les
xor
in
mov
sbb
mov
xor
bound
icebp
cmp
mov
and
fiaddl
xchg
int
jno
outsb
xor
rorl
shlb
in
sti
lret
lods
sbb
mov
cmpsl
imul
addr16
adc
sub
lea
hlt
test
mov
test
sbbb
jno
cli
adc
xchg
push
mov
fs
pushf
std
das
out
lock
je
sti
and
sbb
cmp
and
xchg
nop
sti
mov
sub
or
movsb
iret
lret
mov
add
jns
mov
addr16
call
popf
daa
xor
cltd
cwtl
popf
pop
cmp
call
cltd
pop
test
xchg
pushf
adc
fstpt
rorb
sbb
dec
dec
outsl
pop
fwait
mov
mov
fldenv
cltd
inc
jb
sub
pop
fstl
mov
xor
scas
adc
sbb
pop
mov
mov
sarl
mov
daa
pushf
mov
shlb
sbb
ja
fdivl
aas
stos
push
cmp
or
add
mov
mov
or
push
test
pop
xchg
insl
rcll
cmpsl
shrl
push
nop
jge
xchg
and
mov
mov
mov
xor
mov
push
mov
inc
mov
add
adc
in
sbb
int3
int
nop
pop
sub
push
jmp
add
mov
add
pop
xor
lds
dec
add
mov
xchg
rclb
jmp
xchg
out
sub
push
jge
shl
insb
cmp
fdivr
xor
mulb
mov
jge
jno
lock
pushf
sub
sahf
dec
sub
sub
adc
mov
repnz
sub
xor
shll
adc
inc
xchg
in
sub
xor
mov
add
xchg
adc
jl
int
dec
and
clc
or
mov
repnz
andb
mov
repz
in
push
sbb
lock
sub
inc
pop
loope
outsb
popa
in
or
or
inc
lock
out
jle
in
pop
iret
test
inc
call
roll
jp
rsqrtps
pop
imul
xor
mov
mov
cmpsb
movsl
cmpsb
dec
out
ja
popf
lahf
rorb
add
dec
aam
pop
xor
bound
popf
loope
fdivrs
iret
gs
push
pop
cld
cli
mov
roll
enter
and
and
loope
mov
cli
mov
xor
rcll
add
mov
inc
sbbl
jne
lods
cltd
adc
mov
xlat
add
jmp
jg
or
add
and
or
iret
and
jge
ret
xlat
fdiv
shll
enter
mov
mov
dec
data16
mov
xchg
mov
jl
es
adc
and
mov
jmp
inc
pusha
in
mov
lods
repnz
xchg
loopne
pop
mov
pop
pop
fnstsw
dec
sbbl
dec
ss
mov
sbb
dec
sub
std
rclb
push
mov
daa
mov
lcall
cmpsl
cli
push
sqrtps
in
push
mov
pop
cwtl
pushf
cli
sbb
dec
movsb
in
int3
jne
pop
loope
shrb
cmp
cmpl
mov
dec
fisubrs
loop
in
mov
and
dec
add
push
inc
pop
pop
fidivrl
shrb
popa
add
cmp
mov
mov
lds
pop
cmpsl
inc
outsb
out
iret
add
pop
loope
jge
mov
loopne
xor
int3
stos
xlat
jecxz
daa
add
push
out
adc
mov
sahf
mov
shlb
fmuls
gs
push
mov
jne
jns
mov
enter
dec
aad
jb
mov
mov
xor
dec
inc
ret
leave
orl
out
push
and
aaa
cld
call
or
rorl
insb
test
fbld
sti
call
add
dec
push
add
push
adc
addr16
popa
fdivrp
push
mov
pop
and
xchg
push
push
dec
sahf
push
cltd
movsb
pop
and
lock
sub
cmp
sahf
hlt
and
add
jnp
xor
jg
fmuls
push
sarb
mov
arpl
cmovs
or
inc
rcll
test
sub
xchg
inc
push
adc
dec
lcall
dec
cmp
sbb
aam
xchg
inc
cmp
jne
out
pop
and
bnd
mov
aaa
mov
inc
xor
movsb
adc
cmpsb
stos
call
lock
xchg
int
rol
lods
mov
push
test
insl
mov
lret
xor
xor
in
rcrl
mov
jno
or
push
add
pop
rolb
bound
xor
jmp
pop
je
test
inc
and
push
sbb
push
mov
cwtl
es
insl
cmp
mov
push
pop
arpl
std
aam
sub
pop
xchg
push
test
fsubr
cwtl
lea
mov
mov
dec
xlat
arpl
sbb
mov
cli
add
arpl
int
imul
and
repnz
imul
cmp
add
out
jne
sbb
rsqrtps
jns
or
sbb
jo
dec
push
ds
push
push
push
cmp
insl
in
mov
or
pop
imul
jbe
call
xor
pushf
xor
or
xor
insb
add
inc
push
inc
jl
lock
out
push
cmovs
xchg
rolb
lcall
inc
pushf
int3
test
jl
push
xor
int
or
lret
nop
or
jb
gs
dec
xor
sahf
xor
cmp
arpl
jmp
xor
push
shll
mov
xor
sahf
ret
loopne
cwtl
cmp
ja
lods
iret
mov
jmp
mov
jbe
pop
mov
or
fdivl
jg
fistps
push
cs
mov
out
or
jecxz
mov
imul
cmp
xor
rclb
dec
sub
sub
dec
push
nop
jno
fadd
test
lds
inc
dec
and
ds
outsb
xchg
and
fadd
inc
add
and
jo
dec
add
and
add
sbb
outsb
inc
and
push
fldt
lea
adc
push
or
xchg
push
loopne
fildll
iret
mov
or
insl
mov
lret
mov
mov
dec
cmc
test
scas
mov
xchg
and
mov
or
nop
pushf
sub
das
add
decl
or
cmp
push
xchg
test
bound
nop
push
imul
mov
xor
rcrl
mov
adcl
sbb
push
hlt
stos
xorl
xchg
leave
mov
repz
adc
jno
xchg
mov
je
mov
movsl
xchg
stos
fcoms
push
insb
pop
xor
data16
dec
xchg
mov
cmpb
xchg
xchg
stos
in
gs
jb
mov
aad
aam
nop
popf
mov
dec
xchg
cmp
les
dec
insl
mov
ss
pop
orb
xchg
add
sub
xchg
push
insl
push
inc
mov
or
jo
iret
xor
sub
pop
mov
or
shll
mov
and
icebp
mov
sub
sub
into
rcrl
dec
inc
lcall
xchg
cmp
ret
mov
xor
mov
aam
insl
ja
xchg
sbb
lods
fcmovb
cwtl
cmpsb
mov
orb
push
nop
inc
das
xor
call
fimuls
fcmovu
hlt
add
xor
mov
cmc
sbb
je
mov
push
icebp
sbb
pushf
xlat
sub
fdivrp
dec
repz
push
inc
lea
imul
mov
repnz
push
addr16
fsubs
pop
jno
sub
call
jecxz
push
stos
repnz
iret
aad
inc
jbe
pop
aas
dec
pop
fsubr
dec
cmpsl
cmp
push
pop
pop
pop
xchg
test
mov
add
cs
aaa
mov
int3
out
hlt
mov
outsb
js
add
pop
ret
scas
dec
add
orl
lock
aad
pop
sbb
lds
call
inc
out
sub
lods
add
push
repz
cwtl
inc
sbb
cmp
movsb
pop
and
test
test
pop
dec
mov
sbb
ss
mov
pop
icebp
hlt
push
push
cmp
mov
icebp
insl
xchg
xor
or
scas
enter
xor
inc
aaa
push
or
pop
shrb
push
adc
repz
pop
or
jle
adc
inc
loope
jae
mov
xchg
lds
imul
sbb
into
stos
movsl
jge
dec
testb
std
and
int
mov
pusha
lock
xchg
pop
cwtl
xor
or
je
lods
pop
jmp
add
adc
inc
xchg
test
std
cmp
push
inc
movsb
scas
add
rcll
xchg
push
mov
cmpb
stos
mov
scas
repz
mov
aas
add
loope
dec
cmpsl
pop
sahf
sbb
jg
dec
inc
pushf
in
loop
in
cs
popa
sahf
sub
outsl
repz
xchg
mov
and
test
and
bnd
add
pusha
xlat
xor
es
sahf
sub
scas
cld
inc
jl
rcrl
cmp
mov
sbb
mov
bound
pop
lret
das
pop
outsb
cwtl
xor
inc
cld
popf
loope
mov
lahf
cli
xor
fsubrs
or
aad
lret
lcall
sub
jle
push
mov
ss
push
ret
sbb
xor
and
mov
cmp
jae
xchg
out
in
test
shlb
push
cmp
inc
insb
mov
lods
pop
sbb
out
push
arpl
pop
js
lret
or
inc
stos
lret
rorb
or
out
loop
mov
mov
data16
add
cltd
das
out
popa
and
aam
push
adc
mov
sub
lock
dec
ja
movsb
popf
mov
rolb
xchg
push
add
es
and
push
push
nop
jne
xchg
or
lock
out
out
push
add
pop
out
pop
mov
int
or
pop
inc
sbb
in
lcall
mov
ficompl
sarb
outsl
jb
stos
ds
clc
ja
arpl
inc
or
mov
push
out
inc
addr16
mov
inc
cmp
pop
or
xchg
shll
mov
ret
arpl
mov
add
test
xchg
pushf
sbb
loopne
imul
es
adc
pop
jae
push
sbb
sub
mov
mov
shld
subb
sti
in
or
sub
fcoms
pop
inc
mov
fadds
mov
or
adc
mov
pushf
sub
clc
dec
xlat
outsl
scas
addl
subl
fdivp
mov
sahf
fisubrs
mov
cmp
cli
add
std
push
jo
mov
lcall
in
adc
jecxz
or
xchg
sub
mov
neg
pop
mov
or
jg
or
mov
imul
and
test
adc
mov
imul
or
fisttpl
frstor
sub
lods
ljmp
or
and
mov
movsb
xchg
mov
ss
jge
dec
push
mulb
movsb
xlat
or
icebp
sbb
xchg
xchg
push
add
leave
aas
cs
lahf
sbb
bound
lds
mov
cld
dec
lock
jo
or
int3
mov
arpl
loope
lret
lds
in
scas
push
shrl
repnz
adc
dec
mov
dec
xchg
xor
nop
in
inc
jg
lods
cmp
inc
fsubrl
mull
test
bound
push
xlat
dec
sbb
ds
dec
lahf
inc
icebp
jecxz
pop
pop
call
cmc
testl
mov
sub
xchg
mov
call
gs
mulb
insb
jbe
aad
jnp
fstpl
fsubrl
js
dec
lock
sub
test
loop
daa
pop
inc
in
vandnps
addb
sub
mov
mov
lret
movsl
pop
mov
push
push
sbbb
cmpsl
scas
sub
jle
mov
inc
pop
clc
mov
loop
insl
mov
lcall
fs
push
push
mov
pop
loopne
rcll
sub
push
cld
push
arpl
les
insl
mov
add
fcoms
pop
jmp
sbb
xor
jae
dec
push
push
popa
nop
js
sub
push
xchg
sub
pop
nop
stos
sbb
aaa
cmp
pop
sbb
arpl
insl
ljmp
jl
cmp
in
sbb
xchg
sub
pop
cmpsl
and
sbb
xchg
jne
sbb
cmp
cmc
and
std
aam
xchg
popa
add
sub
int3
adc
jne
lds
adc
hlt
in
jmp
icebp
sbb
cmc
pop
cmp
xchg
ficoms
pop
sbb
inc
jmp
fidivs
scas
xchg
lock
pop
xor
mov
jmp
lea
dec
or
arpl
mov
or
cmc
sbb
andl
stos
add
or
sub
push
in
and
mov
or
sbb
push
shl
pop
sbb
scas
fs
test
jmp
das
add
jecxz
negb
test
xor
pop
inc
cmc
pushf
insb
divb
or
sbb
mov
xor
push
push
cli
repnz
in
inc
adc
arpl
in
sbbb
or
jp
arpl
nop
cmpsl
sarb
fs
repz
clc
ss
or
or
push
mov
jge
pop
dec
mov
lds
stc
jmp
cs
push
dec
addb
dec
enter
fsubp
and
lret
ja
outsl
mov
xlat
fsub
testl
mov
mov
xchg
dec
adc
xchg
xor
into
pop
dec
pop
pop
pop
pop
xchg
lahf
fstpl
ret
dec
je
aaa
and
into
jecxz
jle
mov
data16
xorb
add
cmpsl
stc
mov
cli
add
mov
mov
xor
or
pop
jp
or
jecxz
fildll
sbb
insl
mov
outsb
in
fnsave
dec
insl
hlt
js
bswap
stos
add
jns
dec
add
sbb
fnsave
pop
push
xchg
mov
lahf
mov
adc
sbb
repz
lcall
icebp
imul
mov
dec
daa
call
test
movsl
xor
push
gs
pop
push
mov
add
jns
repnz
repnz
mov
ss
jae
leave
dec
sub
pop
mov
inc
testl
cmpsl
and
sub
xchg
repz
sarl
cmc
mov
insb
lcall
test
xchg
cmpsl
mov
mov
and
out
pop
jl
mov
rcrb
ja
test
lock
push
or
adc
lods
xchg
cmpsl
icebp
add
push
js
out
decb
mov
inc
fldt
movsl
xor
add
mov
push
mov
push
dec
movsl
jnp
pop
fs
jge
sti
outsl
loope
inc
push
xchg
lock
jo
or
je
pop
cmpsl
pop
dec
pop
add
fcoml
and
xorb
mov
xor
out
out
fisubrs
add
or
in
xor
pusha
pop
pop
add
lods
bound
push
aaa
dec
pop
into
enter
sub
cmpb
out
cmp
cmp
iret
movsb
jo
out
push
shl
jmp
mov
jbe
adc
mov
movsl
stos
pop
jmp
rcll
adc
sub
cli
and
push
es
in
push
shrb
jle
in
xchg
ja
ror
ja
mov
fs
pop
aas
imul
lahf
das
iret
and
cmp
cmc
shll
imul
pop
inc
pop
in
xchg
cltd
nop
xchg
and
cmc
shrl
jecxz
push
xlat
xorb
xchg
pop
ret
inc
push
fnstcw
insb
push
shlb
xchg
or
xor
ljmp
mov
test
inc
sub
popa
fsubs
fldenv
in
add
in
push
push
cmpsl
aad
aam
repnz
fcompl
jmp
jae
xorb
test
sarb
testb
fs
mov
call
cld
mov
popf
jl
mov
shl
stos
daa
int3
jo
daa
pop
sbb
dec
or
mov
lahf
jae
xchg
fidivrs
sbb
and
lret
nop
or
pushf
int
adc
out
xor
fsubr
jno
or
fisttpll
inc
mov
notb
jecxz
push
jp
pop
push
mov
repnz
mov
aaa
icebp
push
insb
fdivr
shlb
dec
out
js
das
jne
das
mov
test
inc
out
call
into
pop
mov
mov
cmp
cwtl
adc
push
das
jg
push
dec
sbb
pop
jb
cmp
add
out
cwtl
aad
adc
cmp
sub
add
shrb
jae
xor
push
popf
dec
sub
enter
leave
xor
bound
out
add
leave
leave
mov
add
shlb
mov
clc
add
stos
push
cmp
iret
imul
js
scas
push
int3
std
addr16
inc
leave
clc
fcompl
mov
fists
mov
mov
mul
addr16
inc
push
iret
pop
aam
aas
scas
inc
sub
adc
pop
hlt
lcall
stos
ljmp
mov
pusha
cmp
inc
loopne
push
les
push
arpl
dec
push
in
push
cmp
cmp
mov
xchg
in
mov
fdivrs
icebp
xor
aas
or
inc
loope
mov
inc
rorb
std
xor
sub
into
xor
xor
cld
daa
xchg
dec
test
cmc
out
mov
adc
pusha
mov
aas
pop
pop
clc
popa
xchg
sti
fldcw
ds
mov
dec
xchg
or
xor
mov
out
enter
data16
inc
pop
not
mov
xchg
sarl
pop
pop
shr
jns
pop
lahf
or
cmp
xchg
sbb
repnz
fidivl
mov
lret
lock
push
dec
lea
or
je
jle
dec
and
pop
mov
xor
jp
xor
shr
xor
lods
pop
pop
xor
xor
lret
dec
shll
fsubs
jb
mov
push
icebp
jp
mov
and
loope
pop
cmp
subb
vmwrite
push
bound
iret
sub
xchg
nop
out
mov
nop
mov
push
xchg
je
or
mov
xchg
sub
lock
cmp
xchg
test
arpl
inc
inc
pop
int
shrl
repz
cld
loop
xor
jne
mov
fldt
popl
mov
push
shll
xor
push
testl
inc
pop
out
outsl
pop
stc
dec
sbb
outsl
scas
xchg
jl
test
mov
xlat
dec
stos
ds
mov
dec
shlb
xor
and
shlb
mov
aad
pop
mov
in
popf
mov
ds
mov
test
mov
inc
outsl
sbb
mov
push
lods
sahf
pop
inc
pop
vrsqrtss
xor
inc
mov
ss
pushf
nop
cmp
cld
sub
adc
or
mov
xchg
inc
xchg
or
addr16
or
repnz
cmp
fsubl
movsl
push
sbb
inc
lret
imul
xor
cmc
les
sub
xchg
fmull
sub
data16
mov
dec
xchg
aaa
mov
and
jno
or
lcall
popl
dec
ds
scas
loopne
fdivl
lahf
out
mov
sbb
imul
xor
sub
xor
dec
lods
test
mov
jmp
and
imul
mov
or
dec
sub
and
mov
icebp
cld
js
ret
std
js
inc
clc
push
out
and
and
orb
outsb
mov
decl
sbbl
mov
ljmp
xor
mov
ficoml
sub
push
mov
cmp
stos
or
sbb
dec
sti
std
iret
add
push
rol
adc
ljmp
rcrb
sub
add
mov
adc
repnz
sub
pushf
pushf
jnp
cli
leave
and
mov
cmp
cs
add
adc
xchg
mov
push
test
ds
adc
divl
data16
arpl
jge
jp
xchg
sub
scas
push
call
fldt
xchg
push
movntq
pop
sbb
test
fisubl
ret
das
popf
rcr
or
out
push
adc
inc
fdivr
push
std
xor
pop
mov
mov
fs
mov
roll
mov
cmc
push
test
mov
push
or
sti
in
cmp
fisttpl
jmp
adc
lock
xchg
xchg
fsts
loop
orl
add
rolb
dec
push
jge
add
push
adc
insb
push
ret
dec
gs
pop
aaa
sbb
pop
adc
mov
xchg
lcall
and
jle
mov
dec
mov
out
push
ficoms
aas
sarb
xlat
inc
add
inc
movsl
inc
repnz
push
and
inc
testl
roll
mov
dec
icebp
in
xchg
pop
cmp
and
inc
mov
inc
test
xchg
push
adc
xchg
stos
or
fnsave
ficoml
and
inc
into
movsb
adc
outsl
cmpsl
mov
mov
lahf
popf
insl
gs
mov
xorl
mov
push
jbe
xchg
add
push
inc
pop
lea
loop
jmp
popf
jnp
dec
fcmovnbe
xchg
xorl
add
outsl
xchg
cwtl
cltd
dec
add
loope
add
inc
test
xchg
cld
push
icebp
adc
dec
bound
ficoml
cmp
pop
imul
adc
xchg
cmp
std
sbb
mov
mov
cmpsb
mov
cmpsl
and
pop
mov
xchg
cmp
je
insl
cmc
mov
add
inc
mov
pop
movsl
mov
push
mov
cmp
addr16
int
pop
xchg
jmp
mov
sbb
cmp
aas
cmp
dec
inc
and
and
popa
mov
push
mov
mov
or
xor
or
pop
xchg
inc
jne
cld
dec
push
adc
or
lds
dec
iret
push
inc
sub
cmp
clc
push
mov
out
jmp
dec
lock
adc
xchg
jle
fcoml
xor
mov
xlat
cmp
divb
mov
mov
cmp
scas
mov
sub
cmp
sbb
outsl
out
xchg
adc
lock
int
lods
cmp
outsb
inc
jbe
fistpl
jp
cld
es
push
in
push
jns
std
or
mov
jle
dec
and
sub
push
clc
movb
dec
shr
mov
pop
sbb
xchg
out
cmp
and
dec
sbb
pop
shr
sub
movsl
adc
add
push
mov
in
jo
xchg
mov
push
repz
leave
xor
push
push
mov
dec
adc
inc
push
out
xchg
bound
jl
xor
cmpsl
dec
mov
cmp
mov
js
rol
flds
mov
sbb
mov
dec
lea
out
pop
jmp
int
mov
pop
add
dec
in
mov
or
mov
or
jmp
lahf
movsl
or
xchg
shll
inc
inc
je
mov
dec
sbbl
jp
filds
loop
adc
push
aad
mov
loope
push
test
out
push
clc
adc
lods
loope
fsts
ja
xor
xchg
pop
inc
in
mov
xor
jp
pop
mov
mov
and
ret
movsb
ss
lods
pop
imul
add
mov
pop
dec
scas
mov
or
or
inc
inc
or
inc
and
bound
rcr
fwait
sbb
stos
xchg
jo
pop
scas
mov
lea
ds
and
push
jno
sbb
imul
popa
mov
int3
xor
mov
mov
add
repnz
jb
xchg
sbb
add
hlt
inc
xchg
jae
fnsave
lods
mov
xor
addb
int
ret
stc
sbb
mov
cs
dec
lret
or
mov
ss
sahf
fidivrs
cmc
fldl2t
adc
add
inc
shlb
scas
cwtl
aaa
aas
xchg
addr16
pop
pop
or
push
out
in
mov
push
adc
roll
and
xor
fistps
mov
adc
dec
add
repnz
movsb
sbb
jge
adc
and
insb
aaa
ret
in
jge
addr16
adc
into
aas
stc
movsb
mov
sbb
dec
mov
pop
cmp
cmpsb
sbbb
test
add
mov
cld
mov
jle
xor
loop
mov
pusha
mov
leave
xchg
mov
push
and
inc
and
lea
outsl
jg
mov
das
rcr
addr16
enter
into
or
mov
push
fwait
xchg
jnp
daa
or
js
cmpsl
lret
xchg
scas
xlat
cmp
xchg
push
sbb
fmul
cmp
cmp
loop
inc
out
mov
pushf
xchg
inc
or
and
into
push
mov
xor
push
xor
and
pop
fcmove
lcall
imul
aaa
cmc
jl
test
sub
mov
dec
aaa
cs
movsb
or
sti
xor
push
xor
icebp
outsb
call
pop
xchg
lock
add
test
int
inc
fisubl
addr16
call
mov
and
es
pop
test
dec
sti
stc
dec
ss
in
sub
mov
enter
outsb
xchg
sbb
test
push
jg
jnp
xor
aam
xchg
sub
sub
sbb
mov
je
mov
mov
inc
popa
addl
std
xlat
xchg
push
inc
xchg
mov
ljmp
ds
out
hlt
add
push
faddl
mov
cmc
imull
int3
sarl
stos
pop
xchg
sti
dec
inc
daa
daa
mov
pop
je
or
and
xlat
cwtl
push
out
push
mov
add
dec
jg
lahf
inc
inc
xor
add
sub
inc
sbb
inc
mov
ret
or
add
clc
mov
in
xlat
ret
aaa
daa
mov
into
aad
and
leave
mov
xor
mov
inc
jle
stos
mov
dec
sbb
lods
push
mov
aam
cmpsl
fmull
sub
stos
mov
mov
or
cmpb
xor
ljmp
sbb
mov
cmp
scas
int
inc
lds
fildll
add
xor
sub
fcmovnb
inc
push
push
jns
daa
xor
push
jnp
pop
pusha
cwtl
out
subb
inc
adc
push
push
cmpb
cld
repnz
int
les
gs
jns
sub
inc
or
out
mov
cmp
dec
les
rcl
pop
addr16
xor
cvttps2pi
sbb
xchg
fwait
xchg
out
xor
pushf
ja
adc
jbe
mov
arpl
or
cmpsb
dec
mov
push
hlt
push
scas
sub
adc
add
xor
mov
adcl
xorl
adc
mov
jno
stos
push
jns
lock
fistpll
repnz
in
loope
xchg
fstps
ljmp
fistps
mov
les
mov
lods
icebp
mov
imull
cmp
addl
or
xchg
movsb
mov
jns
hlt
jg
dec
lahf
mov
dec
add
lret
sbb
cmp
pop
fbstp
call
pusha
mov
outsl
jno
adcl
dec
pop
mov
mov
jg,pn
mov
rolb
outsb
rcll
insl
test
push
out
gs
cmp
scas
mov
xchg
shlb
mov
ljmp
orl
mov
jnp
or
cmpsb
mov
or
rcr
fidivrl
sbb
ja
cltd
inc
aaa
filds
stc
xchg
xchg
adc
cltd
movsl
popf
mov
xor
nop
jmp
pop
adcl
jecxz
adc
mov
aas
sbb
jp
sub
pop
mov
xchg
push
fs
mov
jg
mov
movsb
push
cli
sbb
leave
sub
and
jmp
xchg
int
push
pop
mov
mov
push
mov
sbb
in
cmp
xchg
jno
out
pop
and
pop
and
sub
xchg
push
pop
push
pusha
mov
imul
or
push
or
mov
inc
adc
cmp
or
je
mov
and
into
cmp
movsb
shr
orl
lcall
cwtl
rcrl
jg
jecxz
sub
push
sub
das
push
ljmp
sbb
loope
pop
or
push
ret
pop
xchg
pop
mov
es
mov
in
loope
xchg
test
lds
push
fnstenv
imul
insb
sbb
mov
out
lods
out
sub
mov
aad
inc
add
lea
stos
mov
ljmp
scas
add
adc
sbb
ljmp
pop
fnstenv
add
sub
rol
sub
inc
je
pusha
push
push
mov
inc
in
dec
cmpsb
jae
jnp
cmpsb
lods
aad
andb
fimull
jno
dec
pop
aas
repz
or
inc
jns
sbb
scas
add
jne
pop
shll
xor
adc
mov
xchg
and
adc
push
mov
das
clc
mov
inc
jecxz
pushf
imul
pop
mov
aas
popa
and
shrl
fxch
mov
dec
loopne
cmpsb
leave
test
and
aam
sahf
nop
es
insl
mov
int3
in
jmp
cmp
ja
cmp
and
pop
je
popf
pop
cmpsl
cmp
fcomi
sti
int
cmpl
out
fstps
add
adc
add
dec
dec
cmp
loope
sbb
xchg
lret
cs
imul
dec
jns
pop
rolb
cmp
repnz
outsb
rcrb
jnp
pop
sbb
xchg
lahf
add
jb
jae
pushf
pushf
js
push
push
cmp
pop
jnp
dec
dec
push
sbb
mov
test
scas
dec
pusha
rclb
lahf
sbb
mov
push
fadds
fstps
aas
sub
fs
mov
push
inc
adc
shll
lahf
outsb
lods
lea
int
incb
cwtl
mov
sbb
sarb
movsl
jo
insl
dec
mov
ljmp
std
dec
lret
fs
xchg
cmp
std
pop
icebp
and
aaa
sahf
and
aaa
std
divl
subl
jp,pt
lods
mov
or
jb
iret
aaa
dec
test
pop
test
cmp
outsb
xchg
sbbb
jae
or
ss
push
test
into
cmpl
add
xor
fmuls
popa
mov
sbb
shlb
cltd
cld
pop
out
cli
mov
cli
jnp
ss
push
insl
dec
add
push
push
add
movsl
fimull
mov
test
xchg
pushf
mov
sti
addr16
les
xchg
sub
mov
sarl
ret
push
jge
mov
jle
ds
jle
in
repz
and
sbb
icebp
push
test
and
fwait
pop
adc
cli
sbb
out
mov
mov
mov
aaa
push
jo
fidivrs
push
fidivrl
pushf
xor
adc
and
adc
frstor
andb
movups
adc
sub
fs
lret
mul
adc
fwait
repnz
int
jae
mov
cltd
cs
xor
sti
xchg
dec
cmpsb
xchg
test
cmp
cli
mov
cmp
test
popf
cli
cltd
lods
xor
rol
cmp
ficomps
cmp
mov
push
mov
adc
jb
fstpt
sbb
inc
push
mov
lods
outsl
push
lea
pop
clc
outsl
in
sbb
inc
rcll
cmp
ljmp
scas
mov
cmc
pop
dec
xchg
mov
movsl
push
cld
xor
lock
lcall
xchg
popf
dec
dec
cmp
test
xchg
mov
call
cmp
dec
aaa
add
inc
fs
jge
dec
and
negb
out
dec
aad
inc
mov
pusha
adc
pop
pop
add
or
add
xchg
ljmp
pop
hlt
rolb
mov
cmpsl
cmp
mov
data16
cmpsb
or
insb
shl
sbb
jecxz
cmp
aad
inc
stc
adc
mov
test
push
dec
sub
sbb
popa
movb
dec
popf
rcrl
adc
push
cmp
testl
xchg
out
push
inc
cli
fisubrl
and
push
xchg
fcoms
cld
and
pop
and
or
dec
pop
jnp
data16
jecxz
shrl
stos
sarb
xlat
outsb
push
das
stos
jg
and
xlat
inc
lock
jg
std
cmp
dec
icebp
xchg
lods
sti
cmpsb
mov
dec
sbb
aam
lds
xchg
movsb
and
xor
inc
std
roll
sub
iret
leave
loope
out
mov
out
aam
rcrl
cmc
xlat
mov
mov
push
jns
jno
fadd
jo
push
jae
push
add
xor
incl
mov
fsubrs
lea
les
mov
mov
jno
in
stos
mov
cmpsl
cmc
out
sbb
es
mul
add
movsb
add
mov
fs
std
js
xor
adc
xchg
fwait
and
sub
xchg
and
push
lcall
inc
lret
repz
xchg
dec
sub
mov
xor
mov
mov
xchg
mov
cwtl
dec
mov
ss
xchg
repnz
fadds
push
leave
sbb
or
sbb
bound
nop
addr16
add
loop
xchg
inc
xchg
mov
pop
push
shlb
arpl
inc
xor
out
and
and
xchg
xor
pop
lods
inc
adc
mov
testb
cmpsl
jmp
stc
lcall
cmc
dec
pop
jns
mov
cmc
pushf
or
xor
leave
loopne
jmp
dec
pop
loopne
and
mov
je
cmp
out
xchg
mov
add
leave
loopne
jnp
mov
roll
push
repnz
test
or
out
insl
mov
cmp
add
and
imul
adc
jge
icebp
xchg
push
popf
dec
and
pop
rorb
pop
sub
pusha
add
mov
jae
out
dec
std
push
shrb
push
psraw
fidivrl
add
insl
cmpsb
and
and
jecxz
push
dec
sub
jmp
pusha
clc
dec
add
xchg
sub
lahf
inc
jmp
and
and
jns
stc
shlb
mov
sbb
inc
dec
or
jle
xchg
push
fstpl
imul
cmp
xor
fiaddl
push
dec
push
xchg
pusha
jecxz
cs
fldenv
mov
lds
mov
mov
testl
ret
int3
sbb
int
sub
dec
in
xchg
jp
mov
xchg
sub
pop
rorl
cmp
hlt
add
mull
pop
dec
fbstp
mov
mov
cltd
pushf
imulb
xchg
mov
fistpll
fnstenv
hlt
jp
cmpsb
testb
mov
or
lods
bound
pop
mov
jge
xlat
sub
sub
xchg
or
pop
adc
jne
aas
cmpb
sbb
sub
xor
cmp
sub
neg
cli
clc
and
pop
xchg
stos
sub
push
sarl
sbb
in
mov
imul
cmp
push
mov
push
movsl
pop
mov
or
push
bound
loopne
adc
inc
dec
popa
inc
xor
sbb
aas
inc
lret
mov
enter
shl
jg
test
push
mov
inc
inc
jmp
iret
iret
xchg
inc
lret
scas
inc
bound
mov
outsl
insl
jae
nop
fbld
xchg
mov
scas
bound
jb
and
ret
or
xchg
mov
hlt
adc
call
mov
test
out
ljmp
movsl
jp
loope
nop
dec
gs
adc
fisttpll
fsub
fnsave
mov
dec
jg
sub
cmp
movsl
lret
jmp
stos
pop
xchg
pop
ret
adc
and
ja
dec
inc
cmp
push
xchg
sub
and
rorl
xchg
mov
pop
xor
ret
push
mov
mov
pushf
sti
int3
mov
cmpsb
push
dec
mov
pop
jnp
repnz
test
cmp
adc
test
loope
sub
icebp
sub
test
jecxz
jnp
adc
mov
lcall
push
sbb
mov
push
enter
scas
iret
int3
ret
sub
call
inc
pop
cmpsl
dec
mov
ret
push
mov
xchg
fadds
outsb
mov
xchg
sarl
xchg
aam
aas
in
jb
mov
in
pop
es
in
jp
lods
xchg
jmp
fisubl
add
insb
sub
pop
jae
cmp
xor
xlat
adc
mov
fisubs
push
xor
sub
sbb
adc
pop
dec
in
cmc
inc
cmpsb
rcr
into
stos
xchg
dec
cmpsb
inc
aas
dec
loope
sti
not
push
and
add
aaa
movsl
lock
jnp
loop
mov
lods
pop
inc
loop
mov
je
cmp
xchg
mov
shrb
loop
pop
xchg
cmpsb
int3
imul
push
pop
pop
and
lahf
pop
fisttpl
xchg
pop
push
popf
mov
nop
mov
mov
xchg
subl
dec
aas
dec
inc
pop
pop
push
in
mov
pop
dec
push
push
in
subl
js
fs
pop
pop
fstpl
stos
jae
lock
inc
mov
ret
xorl
add
mov
mov
cmp
js
or
pop
insb
roll
repz
adc
add
xlat
loope
xchg
sbb
adc
mov
aad
jns
pushf
jb
mov
test
jo
stc
jp
push
cmp
fwait
rclb
cltd
sbb
cld
gs
fwait
mov
and
sbb
dec
cmc
and
test
aas
jae
jecxz
jge
iret
mov
movsb
sarb
imul
mov
call
mov
push
lret
lahf
dec
add
sub
pop
mov
sbb
mov
jne
es
icebp
shll
out
fsub
dec
adc
mov
pop
pusha
pusha
adc
adc
mov
and
test
add
inc
or
lahf
test
not
jb
and
mov
mov
cltd
cmp
push
or
push
ljmp
bound
pop
setl
add
daa
cli
or
pop
call
jno
xchg
js
jmp
cmp
and
or
andb
aaa
adc
std
push
out
sub
outsb
mov
test
test
jecxz
shr
mov
insl
xchg
stos
in
add
mov
dec
rcrb
pop
mov
xchg
out
mov
into
cmp
jle
enter
mov
aad
cld
dec
shr
cmpsl
jle
jmp
mov
outsl
adc
sbb
xor
movsb
or
lods
clc
loopne
std
loop
lods
mov
ficompl
dec
repnz
rorl
fisttps
mov
mov
jo
adc
mov
stc
push
push
jns
add
jbe
add
decl
mov
xchg
jbe
add
jecxz
loop
sub
sub
mov
fisubl
out
mov
cs
loop
jmp
inc
lahf
fcoms
shrb
xor
pop
enter
xchg
inc
cmp
sub
mov
sub
out
pop
in
shlb
lret
movsb
inc
popa
popf
xchg
fbstp
rcll
pop
pop
std
push
test
xchg
inc
jmp
cli
xorb
add
push
push
in
pop
aad
gs
cwtl
cld
and
pop
out
std
mov
aaa
mov
test
mov
pop
scas
outsb
push
pusha
pushf
cmp
dec
pop
and
sub
movntps
lds
xchg
sub
push
cs
mov
push
rclb
dec
add
push
jo
rcr
dec
jnp
dec
dec
lahf
in
je
pop
jecxz
sbb
xlat
repnz
lret
in
cmp
jp
gs
mov
rcrb
jl
sbb
cmp
cli
addr16
or
adc
xchg
push
adc
xchg
fistps
mov
stos
lret
mov
jne
pushf
ficomps
adc
jg
scas
sbb
sub
jno
or
nop
out
inc
mov
pushf
popf
cmp
es
lds
sub
stc
push
repnz
add
mov
mov
ret
out
push
and
inc
ljmp
dec
cmp
imul
repz
cmp
das
adc
mov
mov
fisttps
and
movsb
jl
mov
ja
dec
ljmp
sbb
add
andl
mov
pop
loope
pop
out
pop
pop
cmc
jae
jbe
shlb
sub
push
std
pop
mov
cmp
pop
je
lret
pop
ljmp
xorl
rcll
inc
movsb
xor
sbb
cmp
mov
lds
xchg
inc
jb
add
ficomps
mov
sbb
ret
mov
rcl
pop
or
xlat
adc
enter
adc
sti
into
pmaddwd
imulb
iret
das
bound
insb
imul
pusha
test
dec
stc
xor
inc
xor
sti
cmpsb
ret
imul
stos
push
push
xor
dec
data16
shll
flds
mov
mov
mov
lds
pop
test
xchg
cmp
fcmovnb
add
mov
out
loop
push
xor
add
push
sub
sti
cs
or
test
push
jbe
aad
inc
adc
jp
outsb
je
je
mov
mov
mov
test
icebp
dec
stc
mov
inc
aam
xor
shrb
shrb
data16
data16
mov
int3
add
loope
out
pop
enter
idiv
and
nop
add
ss
jmp
js
mov
xor
and
pop
std
pop
testb
sbb
incl
lahf
push
mov
sarb
stos
cs
loope
push
aaa
daa
imul
pop
pop
pop
inc
movsb
aad
mulb
push
fiadds
xchg
sbb
sub
hlt
add
shlb
jmp
mov
lret
out
out
jns
out
pusha
sub
sub
stos
mov
mov
cwtl
sub
ret
lds
jo
mov
push
or
fnstsw
shll
mov
outsl
dec
arpl
or
hlt
test
pushf
loope
and
push
pop
add
pop
hlt
fsts
and
sub
xor
mov
mov
xchg
xchg
cmp
cmpsl
sbb
jge
mov
aam
inc
stc
jl
add
and
pusha
push
mov
cmp
roll
xlat
test
mull
cmp
mov
jno
or
push
mov
and
in
jg
cmp
imul
xor
sub
leave
add
xor
pop
lret
dec
xchg
or
lods
test
lcall
scas
jae
out
pop
inc
mov
or
sub
push
shl
lds
xchg
aam
add
add
cmp
xor
fcmovu
dec
mov
sub
popa
dec
pop
xchg
movsl
xlat
pusha
jne
or
and
mov
and
hlt
mov
push
arpl
stos
inc
jns
xor
mov
jecxz
jge
dec
sub
jp
push
add
xor
xchg
ss
addr16
add
adc
add
inc
fs
mov
imul
add
jmp
repz
push
mov
loopne
and
sbb
and
negb
leave
xchg
jnp
stos
enter
orl
add
mov
jl
int
int
cmp
arpl
add
mov
xchg
inc
fisubrl
shrb
popl
cmp
mov
sti
stc
cmpsl
xchg
pop
ja
repnz
push
jnp
pop
outsl
outsl
or
gs
daa
add
lahf
push
out
popf
push
push
xchg
mov
test
out
inc
fiaddl
sahf
idivl
push
inc
pop
and
jmp
jl
jge
add
sbb
xchg
xorb
and
mov
mov
xor
push
icebp
sbb
div
lret
aad
sub
sbb
jmp
pop
dec
ja
rcll
jo
es
lcall
inc
pop
add
rorb
test
mov
stc
out
mov
imul
pop
xchg
dec
popf
mov
push
sahf
pusha
cltd
in
scas
aad
add
test
cmove
repnz
nop
dec
or
xor
sub
es
stc
out
les
je
cmp
mov
dec
push
add
inc
mov
aam
in
imul
leave
insb
mov
cmp
test
cld
lds
adc
hlt
xchg
fldl
pop
xlat
scas
mov
iret
adc
daa
push
or
fcmovne
sub
mov
dec
mov
notl
int
or
pusha
lret
outsb
sti
cmp
cmc
pop
roll
mov
mov
cmp
inc
xor
jne
std
adc
insl
mov
push
scas
mov
xor
int3
ret
mov
sub
fstps
dec
mov
mov
xchg
add
pop
ja
sbbl
and
dec
sbb
xchg
sarb
and
clc
jle
fisttpl
mov
insl
sti
daa
mov
sub
mov
popa
jae
incl
and
push
data16
inc
movsb
fsts
cmp
xchg
jo
dec
sbbl
or
outsb
cmp
mov
shrl
push
jno
les
jle
mov
fnstcw
mov
dec
mov
cmpsb
xchg
addb
or
push
outsb
js
pushf
lock
lret
pop
cmpsl
pop
jmp
fmuls
stos
jp
cmp
aad
jg
int3
sahf
pop
repz
xor
and
dec
cmp
sub
scas
mov
xchg
cmp
test
ffree
cwtl
mov
or
lret
push
mov
adc
js
aas
es
sbb
cmpb
cmp
pop
sub
or
mov
daa
pop
lods
shrb
ret
std
inc
inc
or
or
es
incl
xchg
gs
jle
dec
mov
or
enter
mov
push
sbb
xchg
ret
mov
jns
idivl
mov
sub
rcr
jb
fdivl
mov
adc
adc
test
stc
rorb
push
xor
cmp
mov
jnp
sbb
dec
jae
add
dec
inc
pop
pop
test
hlt
adc
pop
fidivs
test
cmp
lds
pop
adcl
dec
or
xchg
das
les
lods
jp
sub
sbbb
ja
data16
lods
out
clc
inc
aas
xchg
mov
inc
sub
arpl
jp
sub
add
adc
sbb
dec
xlat
shr
mov
sbb
mov
mov
bound
and
repnz
cld
insb
fidivs
xchg
sub
pop
into
popf
jcxz,pt
mov
lret
or
fcomps
sbb
lahf
shl
sbb
adc
jge
rorb
addr16
rol
xchg
dec
cmp
out
outsl
lahf
rorl
ja
cmpsb
pop
test
pop
push
pop
push
lea
pusha
and
lret
push
cmp
lods
repz
jne
ret
add
fcmovnb
add
mov
push
push
cmp
addr16
dec
aam
push
dec
in
cmp
cmp
popa
xchg
lahf
adc
mov
adc
mov
sti
xchg
xchg
out
xchg
subl
push
mov
pop
xchg
cmpsb
sub
dec
aas
and
pop
shlb
out
sarb
jbe
xchg
lret
mov
jb
js
xchg
jmp
sub
fsubs
mov
jl
outsb
mov
sahf
loopne
add
loop
jmp
xchg
pushf
dec
push
clc
cmpsb
roll
idivb
and
sub
lea
fs
lcall
jnp
icebp
mov
andl
fisubl
cmp
inc
iret
repnz
fildll
pop
repnz
rolb
icebp
xchg
mov
lea
fneni(8087
inc
pop
cmp
cwtl
mov
pushf
stos
sbb
add
fcomps
fwait
adc
and
insl
inc
fcmovb
pop
mov
nop
pop
test
pusha
outsb
loopne
fdiv
jp
push
inc
pushf
imulb
sub
subl
in
ret
loop
clc
addb
or
fs
insl
sub
xor
les
mov
sbb
movsl
in
jle
or
xchg
lcall
cld
lret
jmp
mov
cmp
or
lret
or
pusha
sub
in
into
mov
dec
cwtl
in
cmp
mov
mov
jge
dec
out
cmp
lods
xor
xor
incb
adc
pop
imul
in
jb
les
pushf
and
cmp
add
gs
pop
cmpxchg
inc
test
pop
mov
or
xlat
jns
shr
lcall
cmpsb
fadds
xchg
out
sub
lds
push
xchg
mov
dec
stos
cmp
dec
xor
or
jg
fbld
fnstsw
fbstp
mov
shrl
roll
mov
js
nop
pushf
and
shlb
test
sbb
or
pop
ret
mov
pop
xor
std
test
pusha
xorl
xor
push
fldenv
dec
jg
mov
pop
test
ja
shrl
sub
dec
xor
mov
sbb
iret
fmull
shlb
movsb
and
xchg
xlat
xor
mov
ret
mov
icebp
aaa
and
mov
lcall
imul
loop
rcrb
cmp
pop
sbb
sti
inc
clc
pushf
inc
lods
out
sahf
cmpsl
dec
push
jne
or
rcrl
mov
pop
fisubl
add
nop
jbe
fsubs
jmp
repnz
movlps
mov
push
lods
outsb
lods
cmp
jg
je
or
or
jp
push
lret
cld
ljmp
aas
fidivrs
mov
jle
pop
add
aad
add
push
out
fisttpll
lods
mov
xchg
rcrl
rorb
pop
je
fbld
dec
xor
fmulp
lds
jl
and
dec
or
and
jmp
daa
in
or
jp
lcall
jbe
push
cmpsl
js
incb
hlt
lock
ret
lret
xor
push
xchg
push
sub
add
test
pop
pop
add
jnp
out
nop
fists
xchg
jne
inc
pusha
mov
pop
dec
lock
mov
dec
lock
ret
scas
hlt
test
out
xor
ds
ss
xchg
mov
xchg
movsb
push
jnp
xchg
repz
push
xchg
leave
fiaddl
add
fildl
test
xchg
push
adc
pop
pop
enter
push
xlat
fwait
sbb
and
movsb
jno
push
repz
cmp
sti
mov
xchg
and
daa
mov
pop
out
loop
sbb
data16
push
cmp
and
loop
jo
push
imul
rorl
mov
daa
inc
sahf
hlt
sub
push
ss
outsl
nop
sbb
out
outsb
sub
pop
xor
xor
cmpsb
dec
es
inc
test
adc
and
mov
rdtsc
fwait
mov
insl
adc
nop
push
mov
jo
push
sub
ret
xor
dec
orb
in
mov
dec
sbb
xor
testl
aam
out
dec
push
and
jno
add
jecxz
and
loop
pop
cmp
and
or
loop
cwtl
push
push
mov
fwait
cmpsl
mov
repnz
sbb
jecxz
fistpll
aas
sbb
and
and
adc
in
cmpsb
imul
add
dec
cmpsl
or
outsl
cmc
call
iret
mov
lea
int3
sti
push
mov
mov
push
jo
mov
nop
gs
xchg
pop
pop
sbbl
adc
aad
test
stos
cmpsl
sahf
mov
iret
fld
pushf
call
lahf
aas
xor
test
mov
aas
pop
pop
jbe
pusha
jno
push
push
outsb
add
xor
nop
sbb
shll
dec
cmp
xor
jg
push
adc
sub
ljmp
je
mov
adc
cli
push
push
xor
push
sbb
xchg
mov
mov
outsl
cld
repnz
leave
and
sub
xchg
shlb
out
movsl
sbb
je
inc
call
cmp
cmpsb
adc
and
jl
test
lret
push
and
test
jbe
mov
fisttpl
jmp
xchg
lret
push
mov
ret
dec
scas
das
jp
mov
cld
add
loop
or
xchg
add
adc
sbb
outsb
push
std
fidivrs
adc
xchg
push
out
loope
jne
std
test
xchg
daa
xlat
dec
gs
mov
xchg
pop
loop
pop
mov
mov
and
fildll
ret
int
lret
lret
loop
jo
jns
inc
jno
pop
repnz
mov
sbb
addl
mov
pop
and
test
mov
xorl
jp
xor
push
or
adc
pop
inc
inc
dec
sbb
insl
jg
stos
and
xchg
jne
loop
fs
mov
mov
outsl
nop
ror
sti
adc
mov
movsb
daa
arpl
add
dec
fwait
or
pushf
and
mov
or
and
or
xor
stos
aas
scas
push
ja
xchg
adc
lods
int3
sub
cli
pushf
imul
adc
add
lret
xchg
fdivrl
cmp
pop
outsb
testb
cmp
xor
push
xor
aam
ja
ljmp
cmp
adc
outsl
cmp
sub
xchg
jmp
jbe
dec
adc
mov
jmp
icebp
adc
add
les
pushf
xchg
inc
ja
jne
jmp
mov
jnp
sub
hlt
cmpsl
and
jb
dec
pop
or
add
xchg
int3
test
scas
repnz
sbb
popf
pop
inc
sti
jnp
mov
or
loop
push
jae
xor
sub
sti
push
add
xor
orb
loop
lret
pop
repz
pcmpeqw
fsub
int3
fwait
jnp
out
mov
mov
cmp
orl
mov
call
js
out
outsb
xor
sbbl
sahf
mov
jnp
out
cmp
ljmp
lret
xor
mov
bound
hlt
enter
and
jne
pop
jecxz
push
fstpt
adc
dec
pop
cmp
pop
fwait
std
sarb
shrl
iret
xor
xchg
nop
imul
outsl
sti
out
pop
stc
iret
mov
ljmp
pop
cmp
xor
inc
cmp
cltd
sub
in
and
adc
dec
leave
mov
lahf
outsb
lea
shrl
iret
inc
jb
mov
stos
lea
pop
jg
adc
jg
data16
push
mov
sub
mov
adc
int3
iret
dec
sub
sub
scas
cmp
daa
and
sahf
xchg
adc
test
mov
loope
lcall
ja
popf
mov
aaa
add
inc
mov
dec
push
cmpsl
ret
stos
sub
cmp
xor
sbb
sub
les
xor
cli
add
add
rep
add
mov
ds
shl
pop
ljmp
pop
pop
lahf
push
addr16
cmp
fisubs
and
movsl
jl
icebp
xor
xor
pop
xchg
addr16
xor
les
mov
pop
pop
imul
pop
xor
xor
stos
icebp
mov
xor
jnp
movsb
push
stos
int
stos
dec
imul
dec
pop
cmp
xlat
jle
pop
pop
or
inc
pop
stos
lods
lock
sub
int3
lock
sahf
in
sbb
dec
and
cmpsb
adc
out
dec
out
adc
mov
cmc
repz
pop
and
mov
pusha
sub
mov
lods
int3
push
ficoms
xchg
xor
mov
sbb
sbb
std
dec
and
insl
std
or
sbb
push
movsl
or
xchg
je
cmpb
test
flds
cmp
xor
movsl
pop
xchg
mov
dec
mov
stos
jp
push
movsl
hlt
xchg
or
jmp
dec
sbbl
lret
imul
jl
jb
and
add
or
add
push
je
je
sti
adc
insl
push
loope
fistpll
and
push
lret
call
or
mov
inc
cmpsl
sbb
stc
mov
mov
push
mov
mov
loop
stos
enter
loope
dec
inc
out
jp
movsb
sub
fstl
fmull
mov
decl
sub
das
push
negb
mov
cs
sahf
jp
daa
popa
xlat
into
and
pop
jae
cltd
push
sbb
or
or
dec
fisttps
lods
pop
mov
in
jp
lock
loope
aad
mov
push
dec
mov
mov
and
clc
cmpl
stos
sbb
test
mov
push
shl
into
les
mov
xlat
push
test
ja
call
xchg
and
xchg
dec
mov
shl
aaa
mov
inc
inc
js
fdivrp
mov
add
cmpsb
push
data16
sub
mov
mov
imul
pop
jg
pop
cltd
aas
xchg
jae
fisttps
jl
aas
inc
cmp
mov
sub
outsw
dec
rolb
adc
mov
mov
xchg
pop
aas
mov
insl
xor
and
cs
sub
push
mov
bound
test
and
inc
shrl
xchg
push
rcr
jbe
push
sub
adc
cmp
adcl
pushf
arpl
or
xchg
lcall
test
sbb
arpl
lods
enter
sahf
jl
adc
pop
das
sbb
dec
out
fwait
sarl
jle
mov
shr
dec
xor
outsb
pop
xor
pop
in
cmp
outsb
mov
mov
movsl
push
mov
sahf
or
inc
addr16
xchg
clc
ss
mov
adc
ss
lret
out
fbld
movsb
popa
nop
in
mov
jo
test
lock
push
scas
mov
cmp
mov
or
mov
and
add
cld
xchg
ljmp
push
push
xor
sbb
mov
ss
loope
inc
mov
loopne
lods
inc
pop
rcrl
inc
jae
call
loopne
and
and
aad
movsl
std
nop
aam
dec
stos
push
test
pop
in
pusha
lea
ja
xor
stc
in
dec
outsb
lcall
stc
lods
or
sbb
shll
pop
jnp
push
scas
addl
rcrl
cwtl
jne
aas
jne
xor
jb
or
popf
pop
adc
int3
loop
sub
pop
fwait
cmc
sub
push
xorb
or
xor
in
jl
test
add
das
xor
sbb
cwtl
loopne
mov
enter
or
arpl
js
sub
push
mulb
ret
mov
xchg
or
and
pushf
cmpb
fwait
popa
dec
xor
xor
fstps
add
out
int
cmp
jne
cmc
mov
cmp
xchg
mov
mov
ljmp
mov
les
aas
lahf
mov
arpl
es
out
jnp
je
imul
clc
idiv
xchg
addr16
push
push
cmpsl
xorl
js
cld
nop
and
lret
sti
bound
dec
shl
pop
stos
xor
ja
outsl
shll
subb
xchg
cmp
pop
cltd
lret
sub
je
insl
rcl
test
in
adc
fisttpl
fsubr
orb
lods
cwtl
pushf
dec
jl
rolb
repnz
jl
cmpsb
ss
sub
mov
cmp
stc
dec
lock
rcl
jnp
lret
xor
repz
push
pop
xor
popa
test
mov
push
fisttps
xor
sbb
lea
xchg
mov
into
jns
pop
sahf
insb
add
xchg
xor
add
mov
stos
cmpsl
and
enter
nop
push
mov
rcrb
jb
dec
inc
lods
add
dec
pop
mov
cmp
fs
jmp
ret
icebp
pop
dec
ljmp
stos
popa
xchg
leave
lcall
xor
mov
and
lds
pusha
hlt
dec
addb
jno
test
xchg
std
mov
inc
inc
lahf
sahf
pop
add
pop
push
xor
sub
mov
push
inc
movsb
cmpsl
jns
stc
out
shl
mov
and
mov
ret
out
push
cli
fiaddl
and
sbb
loopne
test
stos
testb
into
sbb
jnp
bnd
push
xchg
pop
jno
test
or
dec
sub
pushf
adc
in
roll
cwtl
movsb
mov
pop
fstp
addr16
icebp
stos
lret
xor
addr16
adc
or
dec
lds
xor
pusha
xchg
ficoml
mov
xor
icebp
push
or
mov
lods
lahf
push
ja
mov
shrb
jg
ss
pop
add
movsl
popf
mov
aas
into
mov
fidivl
inc
lcall
sti
in
lea
sbb
lds
cmp
sbb
addr16
xchg
loop
cmp
test
cltd
jno
push
lea
inc
sbb
xor
or
adc
dec
pop
mov
dec
fisttpl
xor
xor
mov
sub
pop
out
pop
pop
push
in
push
stos
push
sar
and
sub
push
pop
ja
int
arpl
addr16
lods
sub
sbb
dec
adc
enter
insl
add
push
or
add
mov
or
add
inc
adc
movsl
icebp
jg
inc
jle
dec
lock
and
fiaddl
mov
jbe
scas
scas
and
iret
sbb
inc
enter
pop
imul
cmp
les
dec
jmp
add
inc
mov
or
mov
push
cli
into
jne
hlt
test
cs
inc
arpl
sti
adc
scas
or
inc
sbb
push
or
or
pushf
mov
adc
sub
inc
inc
jbe
notb
adc
lods
mov
or
out
cltd
mov
sbb
pop
cwtl
or
sahf
movsl
lock
nop
xor
movsb
imul
divb
test
test
jg
shll
jl
test
xchg
xchg
popf
int
shl
and
rcrl
sbb
popa
xchg
mov
pushf
mov
test
in
mov
inc
adc
add
jl
int3
fcoml
mov
push
inc
pop
pop
into
ds
mov
pushf
adc
std
sub
jl
push
loop
outsb
mov
fbld
xor
cmp
mov
mov
scas
data16
cmp
pushf
shlb
mov
dec
pop
insl
stc
fnstcw
push
in
rorl
iret
subb
adc
sbb
cmc
sub
nop
pusha
mov
dec
mov
mov
stc
outsb
ja
mov
pushf
aam
jg
es
loopne
xchg
push
sub
lret
sarl
imul
pop
mov
mov
incb
pop
cld
cld
loopne
inc
je
jle
inc
and
cmpsl
cmc
push
rolb
sbb
movsb
dec
cmp
addb
shl
in
clc
cld
data16
imul
adc
and
push
inc
aas
add
stc
rcr
cmpsb
inc
ret
sbb
xchg
mov
mov
in
shll
sub
mov
sbb
leave
and
or
scas
dec
add
xor
mov
lahf
neg
xor
outsb
stos
cmc
stos
pushf
pop
mov
inc
push
push
dec
xor
xchg
aas
dec
mov
lods
mov
pusha
jmp
data16
je
lods
js
out
cmp
mov
lock
lahf
lahf
add
push
jnp
out
mov
jg
xchg
cmp
pop
pop
and
mov
pop
lock
mov
movsl
lods
ljmp
lods
pop
pop
adc
out
push
bound
mov
mov
jg
ja
add
stos
jne
push
shrb
push
cwtl
sub
or
mov
loope
mov
lods
or
aam
adc
shrb
cli
std
xchg
and
mov
add
sub
jns
xchg
std
jb
or
xchg
sub
inc
or
inc
imul
xlat
jge
and
push
out
add
adc
je
jno
xlat
adc
or
mov
hlt
and
jne
pop
leave
sbb
jle
mov
jo
push
xchg
jb
test
arpl
sti
scas
push
outsb
cmc
aas
sub
ja
sbb
cwtl
out
arpl
lcall
add
xchg
xchg
es
cmc
pop
bound
test
jbe
xchg
add
xchg
ds
dec
inc
xchg
dec
ret
adc
nop
int3
mov
xchg
fs
outsb
popf
fisubl
cmpsl
rcrb
repnz
rcrl
or
lods
and
movsb
fdivrs
lods
mov
and
das
mov
insl
outsl
aad
pop
movnti
dec
jo
jmp
mov
cmpsb
test
add
sbb
cmp
mov
in
ja
pushf
dec
shlb
xorb
pop
xchg
ss
mov
push
out
mov
xor
jle
into
shll
pop
test
mov
pop
adc
inc
lahf
and
mov
imul
push
jnp
insl
out
repnz
and
mov
xor
dec
leave
mov
xor
ret
push
addr16
jle
call
pop
adc
xchg
xor
xchg
dec
lahf
int
mov
push
push
mov
in
cmp
add
iret
cmovbe
xor
ljmp
jge
sti
pop
pop
cmp
loop
mov
in
inc
push
js
push
sub
dec
sbb
xor
and
push
inc
push
push
cmp
mov
push
outsb
xor
xchg
sbb
popf
dec
jmp
jg
out
dec
test
xor
push
mov
cmp
or
inc
cwtl
xchg
inc
mov
cmp
ss
inc
mov
pop
dec
or
xlat
xor
xor
insb
sub
dec
mov
cmp
pop
mov
sub
cmpsb
dec
fcmovnb
imul
outsl
adc
inc
inc
rcl
or
and
ret
adc
roll
inc
cld
sar
hlt
and
inc
xor
sahf
loopne
rorb
xchg
pop
inc
jo
inc
stos
enter
and
xchg
in
cmpsl
decb
push
jae
in
adc
inc
shl
repnz
ret
jns
movsb
bound
hlt
fstpt
mov
add
or
int3
push
aaa
jge
jb
xchg
pop
das
add
sbb
fmull
dec
push
dec
adc
int3
mov
mov
rol
ss
xchg
ret
adc
mov
jge
xlat
outsb
adc
je
inc
add
mov
lea
fcomps
jle
pop
or
ljmp
cmp
fsts
jbe
movsb
push
xlat
icebp
lock
push
mov
sub
fildl
scas
jbe
jne
rcll
sbb
rcl
loopne
mov
adc
add
inc
lahf
adc
adc
dec
jmp
inc
out
dec
in
push
mov
xchg
sahf
and
rorl
adc
sbb
iret
sub
mov
lea
aas
xor
mov
test
in
inc
in
movb
mov
xchg
push
fld
loopne
xchg
stc
lods
adc
jo
test
fdivl
mov
jnp
cmp
xchg
sub
and
pop
sub
sbb
imul
inc
inc
inc
test
iret
xchg
jl
insl
insb
cltd
push
pop
int3
not
jbe
ret
loop
andl
cmp
imul
icebp
lret
lcall
push
push
insl
jo
fnsave
pop
sbb
sbb
lret
cmp
sub
in
arpl
sti
iret
ret
sub
and
ja
cli
mov
jmp
flds
pop
pop
aas
xlat
out
in
xor
incl
add
ja
ret
shlb
pusha
push
mov
andl
xadd
movsb
imul
jp
out
sbb
enter
mov
out
push
outsb
xchg
mov
mov
in
fwait
inc
pop
mov
inc
test
rorb
mov
cli
xlat
ret
jnp
out
loopne
sti
lret
xor
add
jecxz
imul
lret
mov
pop
mov
jecxz
push
enter
cmpsb
loop
mov
mov
mov
addr16
dec
mov
sbb
sbbl
push
and
cltd
dec
dec
int
es
pusha
out
push
mov
push
mov
icebp
dec
xchg
call
xlat
push
cli
inc
scas
xchg
sub
mov
sub
fsubrs
mov
cmp
add
stos
push
jp
dec
cmp
xor
jo
dec
inc
jb
or
fldlg2
aam
test
mov
sub
popa
mov
pop
add
or
clc
mov
js
add
cmc
aam
rcll
mov
pushf
addb
mov
dec
cld
test
push
shll
jns
dec
adc
imul
call
or
fdivr
decl
mov
das
or
cmp
pop
and
repnz
xchg
ret
xlat
ret
xorb
lds
lahf
mov
sahf
inc
ret
rolb
pop
stc
pusha
or
adc
and
or
mov
sbb
outsl
daa
sbb
cmp
xor
inc
fwait
divl
sub
dec
inc
test
sbb
push
cs
push
ss
jae
jo
clc
xlat
sbb
mov
sub
jle
aam
cmp
xchg
decb
jns
push
pop
ret
pop
jno
rcrl
or
mov
ljmp
cmp
pop
in
mov
add
movl
outsl
and
inc
test
jo
mov
jl
in
jmp
push
or
data16
xchg
or
push
inc
jecxz
pop
in
add
jle
scas
repnz
and
rcl
mov
mov
xchg
lods
pop
das
pop
add
inc
xchg
mov
dec
mov
aas
inc
mov
sbb
sbb
cltd
inc
adc
xchg
push
xor
push
out
cmp
push
popf
push
adc
cmc
sbb
pop
jecxz
ja
cli
adc
sahf
inc
jns
adc
dec
jne
imul
inc
ja
daa
adc
adc
mov
ret
inc
bound
xor
int
cmp
mov
inc
push
loopne
xchg
xchg
dec
cmp
adc
and
aam
sub
rcrl
jp
test
aas
out
push
mov
mov
and
jecxz
lods
ss
push
cltd
test
lcall
cmpsl
sub
xchg
jmp
dec
jae
ret
adc
jecxz
add
pop
jae
mov
or
imul
cli
mov
add
fimuls
popf
mov
mov
movsb
jnp
clc
push
out
cmp
fstpt
outsl
and
shlb
nop
fldenv
divl
xchg
loop
jp
or
ret
xlat
ljmp
sbb
out
sub
das
arpl
pop
add
mov
hlt
fsubl
dec
pop
out
fcomp
andb
imul
mov
fcomip
mov
jle
mov
pop
shlb
movsb
lea
test
pop
jmp
ss
cmp
ret
push
ja
adc
adc
cmp
fmull
mov
dec
pusha
mov
scas
cmp
aaa
push
not
sti
lahf
cli
imul
sbb
push
cld
push
loop
push
mov
std
fwait
or
icebp
loop
insl
pop
push
insb
insl
loope
repz
hlt
movsl
sbb
adc
jg
repnz
aam
pop
sbb
hlt
pop
cmp
jb
jmp
jbe
stos
dec
loop
clc
inc
cmpsl
lods
in
sbb
inc
xor
mov
xchg
out
adc
jmp
or
outsl
jecxz
adc
pop
daa
xchg
push
incb
js
add
adc
xchg
adc
cmp
mov
sbb
sbb
frstor
xlat
insb
push
icebp
xchg
push
push
addr16
rorl
aam
out
xor
xchg
sahf
mov
ljmp
cmp
fwait
pop
and
cmp
mov
in
xchg
add
scas
inc
into
ds
mov
movsb
outsb
mov
outsb
mov
movsb
aam
xchg
lds
mov
popf
or
xchg
mov
jbe
pop
pusha
sub
orb
sub
ja
mov
sbb
int
sub
sbb
popa
xlat
xchg
push
fistpl
movsb
fdivs
fistps
jne
dec
movb
enter
add
dec
ja
dec
shr
inc
or
test
jp
jp
or
mov
sub
scas
int
push
int
add
rcrb
shrb
ljmp
mov
js
mov
add
nop
iret
std
call
pop
lret
pop
push
or
inc
pop
test
loope
fnstenv
sub
or
mov
dec
fs
sub
xchg
add
ja
xchg
xor
inc
fstl
pop
xor
pop
sub
sahf
inc
std
mov
push
aam
jne,pn
call
popa
or
push
incb
repz
bound
mov
lods
arpl
ret
andl
pusha
test
cld
mov
ret
notb
clc
sub
jmp
ds
in
outsb
mov
repz
jle
add
dec
and
ficomps
mov
mov
mov
mov
shlb
stos
shll
aad
orl
add
xor
pop
mov
cmc
inc
pop
mov
test
outsl
mov
pop
stc
call
aad
mov
je
std
sbb
xchg
xor
push
mov
xchg
xor
cltd
dec
mov
leave
push
bound
mov
add
movsl
pop
xlat
mov
xor
insb
cmp
pop
jae
insl
jp
popf
mov
lods
movsl
shlb
mov
and
int
and
testl
cmpsl
push
idivb
sub
pusha
xchg
movsl
inc
leave
iret
sbb
add
jns
je
ljmp
call
outsl
xchg
jl
fcmovu
addr16
pop
mov
lahf
lcall
ret
cmovp
xchg
or
jg
and
or
push
lret
mov
js
and
jno
xlat
add
inc
aam
ficoms
sbbb
adc
clc
std
subl
cli
adc
lahf
ss
inc
jmp
jo
outsb
outsl
int3
adc
push
orl
or
xchg
cs
aam
dec
rcrb
incb
paddsw
push
mov
pop
mov
push
lahf
in
test
xchg
xlat
xchg
sub
push
xchg
shl
push
xlat
pop
subb
lahf
pop
loopne
mov
inc
ja
mov
cmpsb
add
cltd
mov
sbb
mov
clc
pop
aad
cmpsl
in
jbe
cmp
xchg
inc
negb
repnz
push
aam
popf
xlat
xor
add
rcl
mov
lahf
and
in
roll
adc
insl
sbb
imul
cld
mov
subb
mul
mov
push
test
outsl
adc
cli
ja
adc
mov
cld
xchg
bswap
std
jbe
clc
mov
aas
cmpsb
loopne
cmp
cmp
inc
push
mov
shlb
bound
iret
js
fbld
out
jle
jle
pop
outsl
cs
pop
mov
addr16
jmp
jbe
aas
dec
sbb
or
movsb
rorl
xor
push
lds
xor
dec
xor
lea
movsb
xchg
gs
aas
lcall
push
dec
sub
push
mov
daa
or
movsl
movsl
sbb
xor
jno
rclb
jge
push
mov
aaa
xor
push
into
dec
fucomi
repnz
enter
ljmp
insl
pop
int
jg
mov
mov
pop
imul
dec
std
in
mov
inc
cmp
mov
addr16
and
adc
pop
xor
stc
repnz
arpl
fists
jecxz
out
rcl
mov
mov
push
idivb
test
or
addr16
push
dec
sub
imul
rclb
movsb
test
mov
gs
fs
lods
and
in
arpl
push
lods
jns
mov
mov
das
xor
pop
push
fcomps
xor
mov
cmp
outsb
xchg
mov
fistpll
sbb
aad
dec
sbb
daa
sub
adc
push
jns
and
and
sbb
ficoms
push
es
cmp
push
or
ret
lea
ljmp
or
or
insb
ret
dec
in
ss
dec
mov
xchg
aam
jmp
jle
pushf
in
xchg
push
lcall
and
pop
or
cs
call
fisubl
into
sbb
inc
addr16
push
inc
cmp
sub
loope
add
fildll
sub
sub
jb
cmp
jbe
mov
jle
jmp
inc
inc
fmull
cmpsb
in
cwtl
dec
push
ficoms
lods
loop
cmp
xchg
sti
aas
push
xchg
rorl
scas
jg
sub
sub
pop
xchg
pop
mov
pop
add
ss
in
mov
dec
ds
pop
adc
dec
sub
aas
or
rol
test
pop
insl
dec
ja
cmp
dec
pop
sub
rcrb
jo
push
cltd
clc
mov
mov
jbe
add
pushf
shl
xchg
popf
push
fiadds
jns
fbld
mov
push
mov
push
push
ja
xchg
and
lcall
cmc
in
in
xor
dec
add
xor
mulb
in
cmp
adc
in
clc
mov
addl
and
xchg
cmp
xchg
sbb
push
mov
in
xchg
call
in
add
cmp
data16
outsb
jg
les
loop
dec
repz
loop
iret
jl
cld
jnp
inc
test
imul
jle
sbb
jae
pop
push
push
into
fadds
and
daa
sbb
cmp
out
imul
xchg
bound
fstpl
adc
mov
cmc
sub
rep
out
push
data16
inc
jb
push
sbb
loopne
xchg
xchg
xchg
loop
mov
out
sub
push
cmp
nop
js
sbb
lahf
mov
lock
dec
jo
mov
xor
cmp
test
hlt
repnz
addl
stos
mov
aad
hlt
cwtl
fucom
mov
mov
dec
dec
mov
push
dec
insb
and
xlat
sbbl
gs
clc
pushf
push
fsubrl
movsl
dec
sbb
pop
and
or
pop
cmp
cmpb
fsubr
inc
lods
out
mov
fisttpl
mov
push
sub
fcoml
movsl
xlat
dec
fldt
bnd
cmpb
xchg
or
push
push
scas
xchg
fildll
add
jle
mov
and
aaa
mov
sti
les
loopne
mov
xchg
xchg
xchg
movsl
mov
dec
clc
stc
add
das
jne
bound
lret
dec
lret
mov
movsl
add
xchg
mov
push
movsl
cltd
shll
inc
pop
bound
test
xor
jl
add
or
add
sti
or
in
sub
ja
push
sub
adc
push
out
cmp
xor
dec
insb
mov
cwtl
out
imul
pop
lods
jge
push
mov
les
adcl
mov
xchg
push
mov
inc
inc
xchg
xchg
ja
iret
mov
jnp
push
je
cmp
popf
clc
or
iret
mov
stos
insb
subl
loopne
and
mov
popf
stos
pushf
and
test
js
pop
dec
add
sub
test
lods
int3
adc
jmp
sbb
and
xor
inc
xor
movsl
inc
lds
push
fwait
sub
mov
xchg
aad
jb
xor
jmp
push
adc
sub
jne
pop
divb
cmp
sub
add
outsl
popa
xchg
mov
fnstsw
mov
stos
or
in
or
adc
mov
mov
in
cmc
cmp
mov
xchg
adc
sbb
ss
and
inc
repz
ss
pusha
mov
mov
lods
lret
lret
jbe
cmp
jge
mov
lret
sub
jne
ffreep
inc
and
mov
and
cmp
jnp
leave
loopne
dec
popa
mov
es
cmp
mov
cwtl
sbb
xchg
pop
xchg
call
into
sbb
bound
mov
mov
mov
pop
jge
mov
bound
mov
nop
dec
mov
mov
outsl
fnstenv
jns
jo
pop
adc
inc
xlat
jecxz
adcb
out
ja
xor
push
xor
pop
fwait
test
aaa
test
scas
or
es
push
les
pop
cs
xor
sbb
sbb
int3
leave
cwtl
ud0
jo
sbb
aad
push
or
push
jo
lret
mov
outsl
mov
sbb
not
pushf
push
adc
inc
fdivl
nop
in
inc
sti
cltd
inc
dec
fdiv
mov
xchg
mov
push
cmpsl
xchg
sahf
jecxz
pusha
outsl
mov
mov
inc
in
daa
jge
push
loopne
in
or
les
ds
sbb
dec
ljmp
lahf
sbb
inc
int
jl
enter
fcompl
test
js
je
push
sbb
fiaddl
jmp
bsf
xor
ja
scas
inc
xchg
shl
in
mov
push
mov
inc
clc
mov
jns
enter
add
dec
add
call
jl
xor
outsb
mov
xchg
cwtl
imul
xor
mov
sub
mov
mov
iret
pop
inc
lods
lods
sbb
ds
mov
lods
notl
add
sbb
xchg
push
mov
jp
pushl
mov
andb
mov
sub
add
xor
or
in
mov
mov
mov
cmc
test
lods
mov
mov
ljmp
jp
lods
cltd
out
lea
pushf
jae
mov
mov
cmp
or
jle
or
shlb
pop
pop
pop
sar
push
pop
subl
pop
jmp
jmp
mov
push
sarb
cmpl
pop
mov
fisubrs
mov
imul
sbb
data16
sub
leave
daa
xchg
mov
xchg
or
mov
ret
imul
or
push
fimull
mov
leave
cld
inc
push
inc
fcmovnb
add
adc
fs
or
fdivs
fwait
icebp
shrl
rcll
mov
sarb
sub
jbe
imul
push
data16
scas
xor
jae
xchg
loopne
test
movsb
ss
mov
fs
adc
js
clc
cli
les
jle
aaa
dec
adc
mov
sbb
lret
jbe
lods
stos
je
pop
jb
xor
add
addb
int3
sbb
push
dec
add
inc
adc
pop
jecxz
sub
cmp
sub
xchg
stc
sub
movsl
movsb
mov
xor
das
mov
cmp
enter
movsb
leave
xlat
mov
jnp
mov
addl
push
adc
pop
outsl
ss
lahf
gs
js
xchg
scas
jae
inc
inc
dec
xchg
cmp
push
and
jns
xlat
push
sub
lret
pop
loopne
mov
cmp
dec
test
mov
mov
imul
jecxz
clc
adc
inc
imul
pop
and
dec
xor
add
int
push
push
jne
mov
cmc
sub
out
sbb
dec
pop
fstp
adc
inc
lcall
and
sub
xor
jbe
out
mov
popa
jae
xchg
pop
pop
or
jecxz
hlt
mov
xor
sahf
or
sar
inc
popa
outsb
xor
dec
dec
inc
test
mov
in
jge
and
fs
xor
sahf
mov
das
or
xor
inc
out
or
outsl
jnp
pop
push
cmp
sahf
sub
ljmp
inc
mov
and
lahf
mov
sar
jno
mov
sbb
out
imul
and
push
adc
std
inc
outsb
stos
inc
inc
rolb
in
or
lret
sbb
push
xor
cmc
dec
imul
and
out
rcrl
mov
fldenv
adc
add
enter
daa
mov
jbe
push
outsl
div
nop
xchg
popf
test
mov
mov
lock
jg
xor
pop
push
adc
fisubl
mov
sbb
test
xor
mov
cmp
cs
xchg
push
int
xchg
push
dec
mov
push
adc
inc
lret
add
insb
enter
fs
sarb
fwait
sbb
push
inc
and
push
mov
mov
and
add
arpl
das
dec
sti
mov
mov
fildl
out
cltd
pushf
pop
mov
xor
and
mov
pop
and
andb
fwait
push
add
push
stos
insl
into
stc
fnsave
xlat
lods
adcb
lcall
loopne
and
ficomps
in
int
mov
out
adc
rcrb
pop
stos
lock
loopne
clc
push
push
repz
mov
mov
sub
xacquire
xchg
nop
movsl
mov
sbb
mov
lcall
mov
jae
mul
jecxz
adc
outsb
std
jg
test
movups
push
inc
ss
push
fidivrs
int
push
stos
ds
push
pop
stc
lcall
pop
add
sub
jp
sbb
daa
pop
outsb
inc
subl
xor
dec
outsb
pop
fisubrs
pop
cltd
push
sbb
inc
iret
dec
sub
and
pop
mov
sbb
cmp
sahf
outsb
jns
xor
mov
jns
add
mov
push
mull
sub
xchg
mov
lret
call
test
sahf
out
xor
jecxz
ljmp
pop
fld
mov
pop
nop
mov
es
lcall
cmp
inc
add
sbb
pop
dec
insl
out
or
jnp
push
mov
inc
push
sbb
pusha
and
pusha
push
loop
stos
mov
jg
lret
adc
ror
stos
ja
mov
pop
daa
xchg
push
or
inc
xchg
cmp
and
das
and
mov
pop
stos
or
push
aad
and
in
jg
add
and
sbb
push
cmp
mov
push
mov
test
sub
bound
push
std
sub
mov
mov
push
decl
test
test
jbe
adc
lret
cs
fbstp
cmp
das
js
adc
insb
outsl
roll
test
xchg
stos
ja
divb
sub
add
jnp
xchg
cmp
add
or
stc
popa
mov
mov
roll
xchg
js
jne
jmp
mov
mov
lds
mov
dec
in
jle
xor
mov
scas
sub
cmp
cmp
scas
pushf
and
cwtl
jbe
enter
cmp
hlt
mov
inc
and
fdivr
cwtl
call
call
out
xchg
loope
or
cmp
mov
out
dec
stos
je
lds
sub
inc
adc
jmp
mov
cmp
fistpl
loop
test
xorb
sbb
fstpl
or
adc
pop
pop
lcall
out
test
in
orb
test
mov
jl
xchg
sbb
xor
pushf
xchg
test
cmp
mov
jmp
xchg
je
jmp
xchg
add
sbb
dec
xchg
aaa
push
jp
ljmp
xchg
xchg
shlb
and
mov
xchg
push
cmp
out
aaa
mov
add
or
hlt
jl
clc
xchg
sbb
add
or
and
sbb
imul
mov
pop
shlb
lcall
mov
or
sti
shll
imul
and
out
sub
xor
or
dec
jmp
das
push
out
push
sahf
jno
repz
sub
dec
lods
sbb
test
and
adc
jne
sbb
mov
mov
das
sbb
sar
mov
popa
xorb
inc
cmpsl
out
dec
sbb
psubb
test
and
or
pusha
xchg
sbb
imul
gs
or
int
jle
int
adc
inc
movsl
inc
mov
cmp
roll
inc
aad
jle
jnp
sti
icebp
dec
out
es
jnp
add
imull
lret
jg
ret
inc
xchg
sbb
xchg
int
add
jge
jns
lahf
push
aad
inc
and
xlat
mov
or
pop
dec
cmpsl
jnp
push
jne
test
fmuls
push
mov
stos
xor
adc
inc
sub
push
pop
test
test
idivb
pop
sub
mov
or
pop
push
dec
adc
jne
pop
mov
jg
call
dec
movl
ret
adc
mov
cmpxchg
jl
mov
call
daa
jmp
cmp
and
xchg
call
xor
outsb
jmp
cmp
ficoms
jns
mov
sub
loopne
leave
lock
xchg
mov
das
inc
inc
xchg
and
sub
push
loopne
faddl
mov
cmc
add
sub
mov
int
mov
push
xchg
call
nop
lds
arpl
mov
cmp
into
cmpsb
dec
jnp
xchg
dec
js
mov
ds
xor
in
mov
mov
aam
out
ljmp
incb
inc
stos
sbb
lock
lcall
cmp
and
and
push
sbb
leave
dec
mov
jecxz
fildll
mov
adc
jg
push
aaa
cmp
daa
call
xchg
loop
ja
movsl
cmp
aas
test
scas
addr16
pop
ret
cmpsb
add
and
jns
jp
xchg
mov
cmpsb
subl
mov
pop
or
jns
mov
inc
add
mov
std
lea
test
les
cltd
push
pushf
cmp
shrb
and
shr
dec
loopne
mov
push
fwait
push
cmpsl
jno
lock
push
pop
add
test
inc
ljmp
jae
popf
jne
mov
add
sbb
popa
rcrl
or
add
testb
jl
insb
push
adcb
fs
adc
lahf
jmp
jmp
lds
jmp
mov
call
cmp
sti
leave
adc
flds
imul
xchg
lcall
les
lea
rclb
or
shl
push
sarb
xchg
mov
or
mov
inc
sbb
mov
pushf
jge
dec
call
add
sub
std
iret
aas
and
dec
std
and
loopne
rcr
mov
rcl
sahf
call
and
sbbb
mov
pop
xlat
roll
in
xor
mov
jns
pop
mov
push
andb
dec
int
sbb
or
sub
out
rclb
out
fs
inc
lds
lods
mov
jae
or
xor
inc
sarb
adc
push
cltd
dec
lea
sbb
pop
pushf
stos
cmp
stos
jns
and
shl
add
rcll
stc
and
jno
add
xor
dec
push
jge
scas
dec
ret
pop
shrb
and
ficomps
das
cld
test
push
ljmp
cld
imul
ja
pop
sub
comiss
fistl
pop
jb
cmpsl
push
repz
mov
or
and
lods
out
adc
out
fwait
insb
int3
fcmovu
jp
enter
imul
test
cld
xor
dec
push
inc
push
out
sub
lahf
pop
xchg
add
mov
xor
adc
adc
mov
pusha
jb
mov
inc
mov
call
insb
and
xchg
cmp
adc
xchg
add
adc
stos
add
cmc
aaa
leave
push
cmp
dec
push
inc
push
sbb
test
aaa
pop
adc
inc
cld
lock
outsb
or
pop
aaa
leave
and
imul
xor
mov
addr16
test
sbb
xchg
outsl
and
out
icebp
add
mov
and
mov
push
cs
and
sub
xor
nopl
mov
mov
push
adc
andl
scas
shr
lahf
loop
iret
insl
mov
mov
mov
ficoms
jae
data16
in
cs
sub
test
mov
test
stc
sub
in
add
xor
pop
rcrb
push
imul
mov
sub
xchg
int3
repnz
inc
pushf
xor
cli
adc
mov
jmp
pusha
in
ss
gs
and
jns
daa
popl
int3
cwtl
movsb
hlt
mov
loop
jge
push
cmp
mov
sub
clc
or
push
aam
andl
mov
fdivl
sbb
mov
arpl
pushf
mov
sub
decb
mov
inc
es
mul
test
ss
orl
mov
into
or
outsb
int
sbb
les
loope
ds
mov
cmpsl
adc
orl
mov
jae
adc
xchg
xor
test
sbb
sub
cmp
pop
sub
subps
lret
daa
addb
lret
rol
repz
aaa
mov
xor
fdivs
ror
ja
aaa
daa
sarl
test
sub
gs
ror
pop
fisubrl
stc
test
push
mov
or
fcoms
or
lcall
push
mov
psubw
fcoms
aad
subl
data16
sbb
test
push
push
stos
jae
dec
inc
add
addr16
pop
repz
or
sti
fsubr
cmp
push
push
xor
sub
daa
cmovge
call
inc
add
mov
xchg
mov
aad
sbb
xor
and
pop
shlb
add
pop
mov
cmp
in
add
je
loopne
jo
aas
pop
arpl
adc
push
adc
pop
xchg
or
into
jbe
jns
gs
es
inc
adc
dec
sbb
cmp
icebp
movsl
push
adc
insl
mov
or
iret
jle
popa
jl
iret
inc
jnp
into
jo
in
pop
xlat
or
pop
xor
mov
insl
jle
xlat
xchg
test
xor
inc
repnz
adc
inc
sub
aaa
xchg
aaa
fcoms
out
or
or
hlt
pop
mov
cmp
fcmovu
xchg
or
and
adc
cmp
cltd
xor
push
adc
lcall
mov
mov
cmc
stos
aam
mov
or
or
test
mov
cmpxchg
outsl
sub
sub
adc
fdivr
incb
imul
and
les
imul
fcoml
xchg
movsb
mov
jns
add
pop
jae
stos
shlb
sbb
fcompl
lahf
in
fadd
test
sbb
mov
sbb
lahf
stc
mov
jmp
movsl
cmpsl
xchg
mov
sti
call
push
divl
fsts
add
sahf
test
movsl
test
inc
push
xchg
pop
les
lcall
dec
mov
add
mov
les
adc
mov
sbb
fists
divl
sub
push
mov
or
push
outsl
mov
push
jle
in
xorl
or
pop
fcmovne
ja
sub
jmp
pusha
test
dec
inc
xor
push
push
int3
popf
test
fsts
mov
push
bound
sbb
idiv
mov
call
lock
jl
scas
fisubrl
push
xchg
rcll
lret
rorb
mov
and
push
add
and
scas
rcll
push
mov
notl
lods
leave
add
fdivrs
pushfw
dec
jns
bound
jne
stos
mov
mov
mov
xchg
and
mov
cmpsb
xchg
lods
loope
in
scas
push
mov
out
rcr
sbb
sbb
cld
cltd
in
movsb
sahf
leave
or
push
adc
jecxz
js
jae
testl
imul
mov
ret
inc
or
jne
and
mov
js
pop
rcll
add
fcomip
sti
out
xchg
lahf
mov
sub
xor
jb
loop
jns
cs
jns
stos
test
sbb
negl
lret
fwait
aad
sbb
mov
lahf
fdivr
mov
movsb
outsb
or
xor
shl
ror
xchg
imul
mov
in
push
cmc
in
xchg
out
stos
lcall
scas
and
rolb
sahf
imul
mov
rolb
in
mov
fidivl
cmc
std
sbb
cld
rcrb
icebp
mov
jbe
jnp
aad
lods
aad
mov
xor
cmp
scas
jmp
and
mov
imull
mov
pusha
je
imul
sbb
out
test
sbb
mov
pop
sar
ds
jl
xor
mulb
test
pusha
daa
push
fldl
mov
mov
pop
jecxz
fs
popl
jle
mov
mov
and
nop
pushf
ret
insl
mov
sbb
push
mov
setl
adc
aas
xor
insb
pop
or
sbb
popa
iret
jg
repz
mov
sub
insb
addl
out
cmp
lahf
inc
pop
add
push
jno
push
push
adc
cltd
mov
lret
inc
inc
jne
fistl
and
loope
rorb
fdivrs
cltd
out
mov
rolb
pop
test
cltd
bnd
add
mov
dec
ret
into
and
xchg
jle
loop
lcall
pusha
mov
roll
imul
dec
xchg
lea
sbb
jae
jb
mov
add
test
pop
cmp
test
test
pop
aad
pop
lock
xor
test
std
cmc
fisubs
mov
out
or
shrd
scas
aas
lahf
xor
loop
out
and
pop
xchg
jbe
inc
adc
clc
lcall
pop
cli
lea
add
inc
jp
dec
ret
imul
mov
ret
add
and
jo
jnp
mov
inc
into
pop
sub
cmc
pushf
cmc
mov
sahf
ret
in
xor
mov
mov
adc
iret
aad
icebp
xchg
push
push
and
outsl
popa
fsubp
ds
pop
mov
xchg
lds
cmp
enter
sub
fbld
adc
fistps
dec
stos
dec
mov
mov
ret
inc
imul
adc
data16
dec
lahf
arpl
jle
add
prefetch
addl
mov
stos
popa
sbb
inc
es
js
and
test
addr16
test
and
adc
adc
iret
xor
data16
aas
je
push
imul
inc
add
adc
mov
push
add
push
stos
das
cmpb
add
in
outsl
or
dec
push
rol
cmp
hlt
stos
mov
stos
or
out
push
pop
shll
jmp
push
xchg
icebp
sarb
cltd
push
cmp
loopne
std
sbb
push
pop
push
pop
loopne
scas
add
push
sarb
and
pop
out
mov
dec
dec
in
pusha
fnstsw
stos
jp
les
xchg
sar
in
popf
out
cmp
mov
cld
in
testb
xor
add
sti
and
call
sarl
popa
cmpsl
xor
gs
sub
mov
fstpl
mov
ljmp
fxch
nop
dec
inc
mov
or
adc
fisttpll
xchg
ds
xor
loop
orl
jne
push
xchg
mov
aad
ffreep
adc
cmc
les
sbb
push
dec
jmp
fistps
pop
aas
andb
andb
dec
xor
pop
shlb
mov
rorl
inc
cmc
leave
fcoml
cwtl
gs
and
aaa
dec
mov
test
cmp
pushf
out
cmpl
adc
adc
cmp
adc
jmp
push
pop
jle
and
jne
xchg
test
xor
js
pop
shrb
call
xor
mov
jl
xchg
les
push
sbb
jbe
mov
push
jne
popa
xchg
pop
je
lcall
push
mov
jg
push
lds
push
push
test
std
jle
rcrb
sub
icebp
lret
shll
pop
pop
or
cwtl
fidivrl
pop
cmp
dec
xor
mov
mov
adc
sub
inc
cli
and
sbb
shr
or
lret
adc
adc
mov
pslld
dec
inc
fs
enter
cmp
sti
clc
cwtl
inc
inc
leave
loope
fistpll
sub
addb
inc
insl
pop
cmp
nop
push
in
sbb
nop
int3
push
insb
sbb
jnp
out
mov
arpl
mov
fmull
xchg
or
and
std
cli
xor
jbe
movsb
fwait
pop
js
jge,pn
pop
xchg
ret
movsl
fsub
es
inc
je
pop
and
xchg
popa
mov
jp
addl
adc
xchg
mov
pop
aad
push
sub
dec
cmpsb
adc
push
mov
xor
inc
insb
dec
je
test
sbb
fcmovnb
sub
sub
pusha
in
adc
clc
pop
push
mov
push
sbbb
fwait
orl
aas
and
fadds
xchg
dec
scas
aam
sbbb
push
lcall
jg
xchg
dec
xchg
inc
pushf
sub
lea
outsb
shll
cmp
fidivrs
or
or
mov
fnstenv
cmp
pop
test
out
repnz
xchg
mov
sti
sub
lret
mov
jmp
xor
into
adcb
jg
and
mov
sahf
lea
jb
fsubl
adc
out
pusha
adc
cwtl
icebp
out
call
testb
bound
adc
fists
jp
jne
call
or
dec
mov
push
xor
dec
cmp
out
test
jp
out
pop
in
loop
or
xchg
insl
iret
nop
rcrl
mov
out
shll
xchg
gs
or
call
int
pop
stc
test
je
faddp
sbb
xor
and
mov
xchg
sbb
push
insl
fdivl
cld
jb
ret
arpl
icebp
ds
mov
xor
jb,pt
pop
jecxz
mov
xchg
out
cmc
sub
or
sub
scas
sub
add
test
add
insl
jnp
mov
xchg
adc
das
pop
lahf
outsl
pop
mov
adc
cmpsb
arpl
insb
popf
xchg
dec
push
test
adc
mov
xor
jnp
aad
iret
test
mov
and
sub
orl
outsl
xor
lods
aaa
cmp
pop
outsl
sbb
mov
push
or
jb
cltd
mov
dec
fwait
aas
movsb
pop
cmp
mov
out
jg
mov
leave
loopne
and
dec
pop
xchg
mov
js
fdivrs
cmp
loopne
and
push
das
xchg
dec
das
lods
xchg
push
insb
int3
cmp
movsb
fistps
pop
cltd
lret
js
lods
fidivs
scas
into
icebp
mov
daa
dec
dec
mov
sub
lahf
rcr
imull
sbb
inc
icebp
xchg
out
pop
jl
minps
mov
scas
clc
aaa
mov
push
frstor
nop
adc
mov
scas
push
mov
mov
mov
cmova
lods
sub
insb
push
and
shrb
jae
pop
jle
mov
fs
push
addr16
mov
mov
pop
stc
lds
mov
fbstp
dec
jbe
cmp
adc
out
out
or
cltd
jle
sub
mov
ds
and
pop
aad
popf
push
es
jmp
inc
mov
fstpl
cmp
cmp
mov
xchg
mov
xor
shl
dec
cli
sti
lods
xor
gs
push
mov
lcall
inc
jbe
xlat
fdivr
add
dec
fidivrs
outsb
loopne
loope
ficomps
inc
pop
andb
std
cmp
xor
fs
mov
in
pop
ds
mov
pop
mov
inc
stos
xchg
and
shrb
fs
ret
cltd
mov
sub
dec
movsl
ret
addr16
loopne,pn
xor
push
sti
and
jmp
call
inc
pop
push
add
dec
and
arpl
dec
xlat
mov
stos
xchg
outsl
mov
pop
orb
fcoms
out
ret
mov
cmp
mov
mov
std
jne
dec
dec
incl
xorl
loope
dec
mov
push
push
call
dec
and
cmpsb
jp
and
sbb
jmp
aam
fiadds
fstl
dec
sub
jo
insb
decl
mov
in
add
add
push
rorl
adc
mov
in
loope
sbb
aam
add
mov
pop
mov
stos
cmp
adc
xchg
lods
dec
mov
sbb
cmp
push
movsl
or
imul
pop
and
xchg
gs
cmp
repnz
es
mov
cltd
lahf
add
test
xchg
ficompl
and
rcll
ja
cwtl
dec
xchg
jmp
int
insl
mov
or
js
adc
bound
in
xor
test
push
orb
scas
sbb
xchg
add
jb
push
out
adc
mov
insb
push
sbb
push
dec
xor
mov
inc
sub
push
pop
stos
js
pop
xor
adc
jge
sahf
add
jecxz
ret
sbb
movsl
cmp
sbb
fucomip
subb
sti
sti
sub
xchg
cmp
push
test
mov
scas
daa
xlat
jae
lcall
das
lret
mov
add
xor
xor
sbb
stos
dec
aaa
adc
or
repnz
cmp
mov
out
jmp
cltd
xchg
pushf
push
mov
sub
xor
cld
rcrl
sbb
out
mov
mov
sub
xchg
lahf
mov
mov
fadds
mov
xchg
fwait
dec
push
mov
add
mov
adc
cmp
inc
dec
jge
jbe
lahf
iret
mov
pop
jg
jle
cmp
in
push
cwtl
xchg
jno
fcoms
mov
mov
into
lods
mov
jnp
or
adc
inc
cmc
insl
cwtl
xor
pop
sbb
adc
mov
or
or
push
inc
stos
jae
and
into
jecxz
fcmovb
pop
xor
neg
ja
jns
push
test
rclb
add
sub
mov
adc
xchg
mov
pop
mov
das
notb
into
xchg
jno
js
in
sbb
mov
xlat
data16
test
insb
or
dec
and
cmpsb
sub
sub
cmpsl
stc
push
hlt
cmp
push
cmp
xchg
xor
inc
inc
push
iret
sbb
imul
mov
ljmp
mov
jb
adc
pop
leave
mov
aaa
pushf
adc
scas
adc
add
outsl
inc
add
rcll
shll
pushf
xchg
mov
fcomps
rcrl
mov
rorb
dec
mov
mov
mov
fcoms
fiaddl
cmp
bound
shll
or
leave
out
mov
mov
mov
ss
cld
cmp
mov
sbb
sbb
jp
cli
das
fnsave
movsl
mov
repnz
mov
push
addr16
fwait
sarb
or
insl
sahf
push
sahf
daa
mov
xchg
stc
pop
mov
loopne
cmp
int3
gs
mov
xchg
lock
cmp
rorb
xchg
cmpsb
repz
scas
test
xchg
add
fwait
mov
add
mov
addr16
mov
pop
out
lods
sbbl
mov
leave
pop
adc
call
pop
jae
sbb
out
mov
movsl
sub
mov
pop
pop
and
ljmp
lods
lods
sub
stos
push
daa
les
or
mov
or
cmp
rcr
sti
xorl
test
mov
mov
add
mov
test
dec
fdivrl
test
xchg
jl
mov
ds
mov
scas
repnz
sub
add
inc
jbe
xchg
bt
test
mov
fwait
iret
lods
push
mov
sub
jmp
imul
sbb
out
pop
mov
dec
xlat
jb
and
add
add
cmpb
outsb
mov
std
xor
es
dec
cli
adc
ficomps
int
mov
xor
xchg
pop
inc
mov
push
clc
sti
fadds
data16
mov
addb
stc
or
push
arpl
or
popf
in
adc
ja
es
dec
pop
addl
int
push
dec
jns
scas
sarb
push
sub
cld
mov
scas
xlat
fimuls
adcl
movsl
aas
je
jp
gs
shl
mov
cmp
fisubs
mov
xchg
sub
mov
pop
das
mov
mov
call
dec
jns
mov
scas
push
call
shr
mov
scas
mov
xor
stos
test
ficompl
loope
in
imul
push
xchg
sbb
adc
fcomi
fldenv
xor
sti
loope
sbb
mov
aad
xor
add
xor
inc
pop
inc
popf
js
js
jl
arpl
jecxz
jmp
push
dec
dec
add
push
popf
subb
hlt
or
call
loop
push
lods
mov
jae
leave
lods
inc
ret
subb
cmp
jmp
push
cs
jl
pop
mov
sahf
mov
jo
or
dec
push
xor
xor
or
outsb
out
cld
test
xchg
xor
fidivrs
xchg
scas
insb
jle
xor
jg
std
fcmove
test
pop
lods
mov
and
pop
imull
push
shl
jmp
outsb
shll
icebp
mov
adc
or
fs
jl
adc
ds
test
inc
mov
arpl
cmp
mov
aad
fstl
cltd
dec
add
push
leave
aas
popf
cld
jbe
movsl
jns
test
xchg
sar
sbb
add
loopne
clc
enter
int
je
mov
imul
inc
fcoml
push
fsubp
push
scas
bound
add
pop
pop
lds
cmp
pusha
xchg
xchg
xor
adc
xchg
push
stos
xchg
mov
fisubrs
and
lahf
dec
xchg
mov
xchg
or
push
xchg
fisttpll
push
jno
xor
xor
xor
adc
push
xchg
daa
js
pop
lods
push
cmc
mov
icebp
aad
jge
sub
jns
and
mov
sbb
lods
xlat
repz
push
scas
cs
add
inc
sbb
mov
dec
mov
push
adc
jo
outsb
jne
cs
sbb
scas
push
sahf
pusha
sbb
jg
loop
sub
pop
in
mov
ds
iret
xchg
scas
pop
faddl
xchg
push
and
popa
cmovs
lret
push
int3
js
or
out
notb
pop
mov
push
sub
pop
push
xorb
mov
inc
das
pushf
mov
and
cli
jne
insb
xchg
or
sbb
int
push
pop
or
sbb
in
fldt
or
fisttpll
scas
ja
inc
jno
push
pop
ficompl
aaa
mov
fstpl
xchg
cmpsb
popf
call
cmp
bound
sbb
adc
push
dec
cmpsl
inc
ds
jae
sbb
outsb
sbb
pusha
rclb
push
insl
xchg
test
daa
sahf
insl
and
les
fnstsw
in
int
fnstcw
or
jp
dec
xlat
xor
adc
dec
outsw
and
mov
sub
pop
push
pop
das
xchg
cs
mov
clc
sub
pop
hlt
stc
ljmp
stos
addr16
out
in
xor
fucom
cmp
jl
sub
sub
jp
or
xchg
loop
notb
repnz
decb
add
mov
rorb
push
js
pop
icebp
xchg
out
cli
and
loop
out
inc
dec
mov
mov
bound
ret
cmp
shl
lods
xchg
inc
xchg
shll
addr16
pop
jecxz
push
mov
push
fisttps
ja
dec
imul
js
xor
sub
adc
xor
out
cmp
or
subl
daa
mov
shrl
pop
dec
flds
addr16
sahf
jecxz
imul
adc
je
fmuls
clc
and
xlat
adc
fwait
pusha
outsb
dec
sbb
pop
add
lods
js
push
testb
out
xchg
test
push
enter
jle
xor
bound
lret
jmp
inc
in
movsl
or
mov
fldl
orb
mov
loope
dec
pusha
mov
fs
in
push
pop
out
sbb
notl
add
jl
mov
inc
mov
out
mov
xchg
ljmp
mov
xor
adc
das
sbb
cmp
ss
shrl
or
mov
mov
jbe
jmp
push
cli
jg
mov
hlt
mov
cmpsl
mov
cwtl
data16
mov
les
lfs
adc
push
sbb
scas
shlb
mov
mov
xor
adc
xchg
add
mov
out
mov
test
int3
inc
sahf
mov
mov
movsl
lods
adcl
stos
push
dec
inc
lcall
sbb
jne
cmp
add
sahf
aad
push
repz
push
shr
std
sbb
pop
gs
add
jne
imul
push
push
stc
lds
dec
cmp
test
fcomip
inc
in
cmpsl
in
loop
and
fs
mov
stc
addr16
mov
out
movsl
lods
pandn
shrb
mov
pop
mov
mov
ds
js
fildll
inc
in
adc
cmp
jmp
push
or
push
cmp
push
fmull
sbb
pop
popa
loopne
cmp
leave
pop
arpl
or
fsubl
or
xor
repz
sub
and
sub
das
lcall
pop
outsb
pop
adc
cmp
mov
arpl
repnz
mov
xchg
in
ds
out
mov
leave
cmp
int
cld
in
pushf
jbe
dec
xlat
pop
repnz
jae
mov
adc
pop
xchg
dec
out
dec
dec
add
push
cs
std
f2xm1
pop
jg
mov
test
out
cwtl
dec
arpl
lods
int
stos
dec
je
cs
call
xchg
aam
and
lahf
int
or
mov
adc
pop
pop
rcll
push
cmp
mov
jo
fsin
gs
loopne
cmpsb
cmpsb
in
repz
sub
rclb
mov
xchg
mov
fs
in
push
clc
adc
lods
xor
mov
and
jp
cmp
ss
in
int3
pop
mov
sub
divb
xor
inc
mov
arpl
inc
rcrl
mov
pop
jae
sub
mov
arpl
dec
lock
xchg
xchg
pop
ret
and
shlb
or
jno
mov
add
int3
fiaddl
and
push
push
shrb
test
xor
repz
jp
jb
out
sti
inc
and
inc
jmp
xchg
jle
das
xchg
mov
push
mov
pop
stc
mov
arpl
call
pop
jmp
loop
arpl
adc
cmpsb
lds
push
mov
pop
jbe
fsubrs
cmp
push
das
jmp
dec
ja
test
mov
loopne
push
push
push
test
xchg
popf
arpl
inc
cli
inc
jle
push
roll
nop
mov
fsubl
arpl
gs
jp
outsb
cltd
out
pusha
add
outsb
xor
xorb
idivl
xor
ds
and
jmp
js
lcall
test
adc
lcall
adc
bound
cmp
or
daa
mov
popf
xor
loopne
dec
lods
or
fisubs
push
sub
inc
lods
ljmp
pop
jg
stos
dec
rorl
mov
xor
pop
ficomps
adc
inc
jecxz
jmp
clc
mov
es
sub
lret
iret
enter
xchg
pushf
jl
xor
cltd
lcall
fidivrl
fbstp
out
mov
je
sub
ficomps
or
push
enter
sub
mov
and
lcall
push
pop
inc
test
pop
lret
jg
repnz
jge
lret
loope
pop
push
and
scas
imul
notl
je
and
dec
dec
push
hlt
push
push
inc
jne
pop
rolb
aas
sbbb
aad
jmp
and
std
sbb
xor
xchg
iret
jmp
ret
ret
and
jns
ja
and
fsub
repz
pop
jo
and
int3
sahf
jp
lret
cmp
sub
nop
cmpsb
imul
movsb
sti
pop
and
lret
inc
inc
scas
sub
xchg
filds
cwtl
movsb
or
in
rcrb
and
adcl
subl
stos
shr
pop
test
aad
iret
xor
dec
xor
lock
test
mov
adc
repz
icebp
xchg
xor
push
ss
mov
js
mov
cmc
lea
test
je
jecxz
stos
xchg
popa
and
adc
ss
push
cmpsb
movsb
scas
outsb
lds
lret
sbb
sarl
push
jno
mov
adc
in
lods
push
movsb
jbe
mov
iret
cmpsl
xor
ret
in
pop
orb
mov
fsin
inc
lahf
push
loop
xchg
adc
dec
add
pop
inc
jl
popa
push
addr16
test
pop
mov
insl
jg
pop
pop
jle
mov
out
sbb
add
xchg
or
stos
fistps
nop
aas
pop
or
push
hlt
out
mov
mov
dec
dec
xor
imul
sarb
dec
call
fistpl
scas
cli
xchg
mov
inc
xor
and
loop
lods
lahf
stc
xchg
test
cltd
jbe
das
xor
pop
inc
or
push
insb
sbb
dec
pop
mov
dec
push
inc
lret
dec
in
imul
add
fstl
addl
cmp
sub
jle
pop
xchg
cmp
add
cmpsb
push
ret
mov
rcl
cmc
xlat
cmpsb
lret
jb
pop
shrl
dec
xlat
or
cmpsb
fwait
lret
test
push
orl
dec
push
mov
jbe
sbb
adcl
jne
and
xor
das
or
aas
je
ret
loopne
iret
nop
dec
jmp
adc
pop
push
xchg
in
fmuls
fnstsw
test
std
jecxz
push
cli
or
push
mov
stos
outsl
ret
mov
insl
addl
and
movsb
jbe
xor
fistpll
or
pushf
adc
fmuls
loope
and
mov
or
and
ficoms
mov
lahf
dec
pop
in
sysexit
or
sub
mov
idivb
out
add
pop
xchg
sbb
test
push
lret
push
sbb
or
ljmp
jnp
push
adc
mull
aad
xor
or
jo
ss
mov
push
pop
and
or
and
cltd
aad
xchg
popa
sub
jo
leave
pop
mov
fdivp
repnz
jo
xor
adc
mov
mov
out
movsl
repnz
enter
ret
mov
fcompl
hlt
inc
enter
aaa
push
lcall
popa
or
mov
add
setae
cmpsb
inc
sub
sbbl
inc
sbb
iret
call
test
lea
mov
jne
outsb
sbb
lahf
or
xchg
push
push
movsl
xchg
xorb
daa
sbb
mov
cltd
arpl
pop
mov
xchg
mov
push
imul
add
adc
call
sbb
cmp
clc
pop
dec
rclb
int3
push
xchg
inc
loope
inc
cmp
aad
jns
inc
imul
jl
shll
or
leave
jo
xchg
ja
inc
mov
mov
ljmp
repz
pop
inc
xor
dec
test
push
test
and
jns
sbb
xor
scas
add
sahf
jbe
rclb
test
gs
call
xchg
mov
imul
mov
xchg
cmc
fcoml
mov
call
ljmp
mov
leave
in
hlt
push
push
clc
mov
rol
stos
pop
mov
ljmp
jge
push
sbb
scas
ret
pop
pop
push
imul
sbb
xchg
ljmp
mov
push
cltd
mov
stos
or
or
xchg
or
lds
fs
adc
enter
aaa
dec
out
leave
out
movsl
or
jno
out
std
cmpl
in
push
xchg
roll
xor
incl
dec
popf
mov
add
sub
pop
cmp
ret
jg
adc
inc
or
rorl
jmp
stos
xchg
int3
xchg
sbb
dec
negl
int3
movsl
cmpsl
xor
outsl
mov
jge
xchg
pop
in
mov
repnz
inc
mulb
add
sbb
insl
pop
sbb
mov
aad
lock
fcoms
sub
jns
add
jecxz
leave
inc
cmp
xchg
scas
mov
leave
bound
into
sub
test
add
clc
das
daa
inc
adc
lcall
insl
roll
out
mov
gs
fmull
jo
js
stos
ja
addr16
add
in
mov
cmp
jl
fwait
test
cmpsb
sub
mov
jecxz
cmp
mov
jne
roll
mov
sub
std
pusha
stos
push
sub
adcl
call
sub
pusha
movl
test
push
inc
sti
rcrl
jle
fsubrl
test
stc
dec
or
stc
adc
or
mov
lahf
cmp
into
pushf
lock
lret
push
outsb
push
xor
call
cmp
or
inc
rcrb
dec
aad
fimuls
mov
out
mov
imul
lods
mov
xchg
jmp
jae
test
add
in
ret
push
enter
mov
push
popf
fisubrs
mov
add
cs
inc
jnp
mulb
andb
xor
jnp
mov
pop
popf
xchg
pop
mov
outsb
test
jl
mov
lret
sbb
aaa
jne
mov
sti
mov
sti
addr16
xor
dec
ret
fcompl
leave
scas
cli
push
xlat
test
in
dec
shrl
pop
inc
enter
or
sbb
xchg
std
in
jmp
subl
aad
mov
in
iret
push
xchg
fsubp
cmp
or
fwait
inc
popa
lret
ret
cmp
add
out
pop
jge
das
sbb
dec
mov
lods
push
insb
outsl
jl
mov
notl
cld
int
cmp
bound
dec
sbb
lods
je
mov
xchg
pop
jno
test
or
jp
mov
aad
xlat
xchg
or
into
adc
scas
loopne
mov
stos
dec
mov
pushf
inc
push
movl
enter
stos
rolb
sahf
mov
ret
stc
popa
pushf
mov
add
lods
lea
pop
loope
mov
dec
loop
push
mov
mov
scas
pop
xchg
or
cwtl
sbb
jmp
pop
or
dec
in
mov
shl
pop
mov
addr16
or
pop
push
ds
test
jp
xchg
xor
fcoml
mov
insb
xchg
fldcw
add
fnstenv
negb
push
cltd
pop
add
cs
or
sahf
fimull
insl
cli
mov
mov
fidivrl
in
push
sahf
lahf
mov
addr16
sbb
test
shll
movb
sub
fiaddl
aaa
mov
aad
rorb
or
js
enter
adc
pop
xor
mov
aaa
ljmp
imul
movsb
movsb
cmpsl
fldl
push
cs
sbb
mov
loopne
adc
les
mov
roll
adc
add
cmc
xor
leave
out
sub
cmp
mov
js
jl
lock
pop
adc
mov
mov
pop
leave
push
dec
fcmovb
daa
sub
ret
jnp
cmc
in
mov
insb
repz
imul
xor
sbb
pusha
xchg
daa
inc
stos
mov
shrl
movsl
push
js
pop
ljmp
aam
es
data16
push
mov
leave
mov
pusha
adc
loope
fwait
mov
cmpsl
repz
lods
push
das
in
xchg
pusha
pushf
xor
xchg
and
loop
mov
out
fs
sub
cli
hlt
dec
add
clc
repnz
les
inc
mov
int3
lock
jo
popf
movsl
mov
jns
enter
jmp
imul
loope
pushf
sarb
xchg
shl
dec
sarb
jge
rcr
dec
jae
and
xor
jmp
or
loop
daa
mov
cld
pop
dec
inc
mov
jns
mov
sub
adc
cmp
mov
xor
lds
daa
data16
and
push
fstpl
mov
and
sbb
xchg
sti
inc
pop
scas
stc
enter
xor
jnp
ret
int
enter
movsb
mov
jae
fildl
ljmp
icebp
inc
and
fwait
movsl
dec
mov
mov
jg
nop
ss
por
out
cmp
dec
es
fldenv
lret
in
mov
mov
sub
scas
lock
dec
jge
jecxz
mov
andb
insb
inc
cmpsl
pop
shlb
in
mov
push
add
push
pop
lret
inc
inc
test
mov
in
inc
outsb
adc
push
cmp
push
xchg
test
addr16
sub
jmp
test
imul
cmp
xor
mov
dec
pop
adc
mov
dec
dec
adc
mov
iret
int
mov
clc
sbb
outsb
and
inc
cs
les
cmp
pushf
pop
dec
ss
sub
cmp
clc
dec
rorb
int
dec
xor
repnz
test
push
enter
ljmp
shll
jns
outsb
pop
fsubl
orb
add
scas
cwtl
dec
lahf
insb
into
inc
fs
xor
call
mov
stc
mov
repz
fnstsw
iret
cbtw
push
jo
jo
add
pop
or
gs
insl
les
lret
mov
cli
shrl
cmp
and
insb
lret
int3
and
stos
cmpsb
cld
cmc
push
pop
imull
lret
add
dec
jns
das
ja
and
imulb
cmp
push
xor
push
add
fcompl
inc
testb
mov
ror
test
ret
and
xchg
es
pop
aaa
pop
jmp
jns
sarb
int
lods
push
ds
mov
add
lret
dec
ds
addl
xchg
pop
pop
js
pop
cmc
dec
test
push
sbb
shl
in
jmp
sbb
mov
pop
fwait
cs
jmp
xor
inc
popf
mov
movsb
movsb
rcrl
jae
pop
push
xchg
xor
push
insb
jns
mov
jnp
jns
movsl
into
cmc
jecxz
mov
sub
mov
mov
ds
jge
push
push
movsl
sub
pop
xchg
ds
sbb
cmp
cmp
mov
mulb
rorb
ljmp
and
and
out
lret
sbb
inc
outsb
out
sub
je
push
pusha
stc
imul
adc
mov
dec
push
dec
jb
jns
push
add
stos
addr16
xor
push
jl
cs
pop
scas
push
loopne
fcomps
xor
dec
repnz
sbb
jmp
and
or
mov
xchg
outsl
adc
loopne
jg
jne
xor
mov
loopne
je
mov
jo
or
push
or
shl
test
arpl
adc
sbb
fists
sahf
popa
addr16
push
je
inc
dec
dec
and
adc
stos
pop
mov
jbe
push
hlt
bound
jnp
repz
push
rorl
pushf
ret
in
mov
outsl
aad
jecxz
fxch
add
and
pop
cmc
outsl
sub
xchg
mov
push
add
scas
loopne
push
inc
out
int
movsb
repnz
or
int
sbb
leave
leave
call
in
fwait
sub
in
dec
pop
inc
push
fisubl
pop
sbb
jg
or
xchg
shl
lahf
push
loopne
cmp
jnp
fnstsw
lock
lcall
pusha
clc
fwait
psubusb
les
push
or
add
int
out
test
cmp
enter
cld
sbb
fs
out
pop
add
sbb
push
mov
xchg
cmp
push
inc
jo
sub
xchg
dec
xchg
dec
in
lods
insb
lahf
test
fucomip
cmp
out
jg
sbb
call
jb
loopne
xor
mov
insb
xchg
jne
sub
ret
jo
ret
add
or
push
adc
sub
cmpsb
loope
sbb
or
cmp
sarb
push
sbb
dec
push
loop
aad
stos
ret
lret
stos
xor
pop
imul
mov
out
ror
in
cmpsb
aam
dec
mov
sub
jp
adc
lahf
xor
divb
lret
les
push
sti
mov
bnd
add
cmp
mov
loope
lock
loope
and
cwtl
repz
aad
xchg
cmp
add
adc
and
scas
addb
sahf
divb
shl
leave
in
mov
dec
jp
out
leave
pop
add
adc
out
jbe
sahf
adc
cmp
fmul
sub
xchg
daa
fistpll
inc
sbb
fisubrs
and
push
fcoml
pop
and
or
test
scas
mov
jl
push
popa
cli
sarb
inc
hlt
sahf
dec
and
xor
lods
or
movsl
sub
inc
pop
clc
mov
testl
repnz
out
jl
aad
jmp
fimuls
aad
xchg
roll
test
dec
xchg
loopne
push
test
sub
pop
xor
mov
pop
cltd
sub
push
or
push
out
lods
pop
sub
fnstenv
mov
or
jnp
insl
inc
mov
call
cld
and
push
outsb
dec
mov
sbb
sub
pop
push
out
mov
cmp
ja
mov
inc
in
jne
cmp
add
int3
sub
inc
push
push
loop
mov
cli
and
jg
sbb
xchg
pusha
push
popf
icebp
ret
lds
pop
js
dec
jl,pt
cmpsb
add
push
fistps
mov
stc
mov
jne
in
or
mov
sarl
sbb
stos
movsb
dec
adc
cmp
mov
imul
cmpsb
cmpsl
add
mov
add
clc
aas
pop
and
adc
in
incl
and
stos
ret
dec
mov
dec
imul
push
arpl
mov
jae
xchg
dec
inc
mov
push
daa
pop
dec
fwait
inc
test
int3
sbb
lret
fwait
outsb
mov
std
enter
sub
std
xor
fisubrs
in
mov
ljmp
int
jle
mov
std
shrb
xchg
xor
out
xchg
aas
add
pop
mov
dec
adc
cltd
mov
pushf
gs
ret
cmpsl
push
test
or
sub
mov
fidivs
pop
arpl
ficoml
push
sub
nop
mov
fistpl
cmp
in
xor
cmp
lahf
adc
fistpl
adc
notl
sub
xor
inc
or
fwait
or
enter
into
sub
jb
mov
add
dec
jnp
out
pop
mov
cltd
loope
push
lret
jl
cmpsb
sub
add
jp
pop
sahf
cmp
push
lock
and
jne
inc
sub
out
shrl
cmp
xchg
fnstsw
push
lds
or
call
call
xor
jnp
dec
inc
cwtl
popf
into
rorb
mov
jg
ret
rorb
es
lock
mov
adc
sub
out
into
push
hlt
sbb
cmp
test
push
inc
jmp
add
sub
mov
mov
mov
jnp
fdivrp
cld
xchg
mov
jmp
adc
or
sub
ljmp
mov
dec
mov
jmp
xlat
dec
imul
jno
and
bound
cmp
js
mov
fnstsw
push
mov
dec
and
mov
add
add
jl
sti
push
movsb
adc
inc
mov
push
test
ss
cmp
cs
fadds
imul
and
shll
mov
lret
xor
sub
push
push
mov
repz
fwait
or
mov
mov
dec
xor
cmp
jge
add
jb
mov
jg
fsubs
xchg
adc
sub
shlb
mov
arpl
lock
adc
dec
pop
add
lods
push
mov
dec
mov
jne
inc
pop
insb
pop
outsl
loopne
sar
jp
push
or
int
sahf
in
xchg
jo
aaa
pop
adc
push
in
or
mov
call
outsl
pop
popf
int3
pop
mov
jl
jb
pushf
clc
sarl
nop
jbe
adc
pop
nop
inc
add
sub
mov
push
sti
jo
jecxz
adc
xchg
mov
loopne
movsl
push
pop
or
adc
mov
sub
gs
pop
sbb
sub
jbe
ror
cmp
dec
xchg
pop
pop
cltd
xor
jno
jle
pushf
leave
andb
rorb
divb
pop
fisttps
mov
mov
push
fistl
push
popa
and
dec
adc
inc
dec
xchg
cmp
and
jge
shlb
mul
pop
test
dec
add
lock
xor
cli
std
cmpb
pusha
aas
clc
mov
mov
cmp
jo
call
pop
or
out
ret
jb
push
or
test
outsb
sub
inc
adc
cmp
fsubrs
pop
and
out
cld
xor
aaa
es
sbb
push
pop
adcb
mov
and
lods
in
inc
ss
arpl
or
insb
arpl
cmp
xchg
lcall
add
inc
aas
xchg
cmp
and
ret
inc
add
imulb
pop
inc
repz
repnz
dec
inc
cmp
iret
shr
lret
enter
jmp
rcrl
cli
stos
daa
das
dec
mov
outsb
fisubrl
push
rclb
fstps
dec
pop
jne
sti
sub
ficoml
dec
out
sub
xorl
mov
inc
cmp
xchg
mov
xor
adc
repnz
pop
pop
movsl
movsb
mov
mov
cld
lret
add
mov
subl
lods
add
and
xor
cmp
inc
lret
jle
pusha
mov
fdivl
sub
xor
stc
imul
jbe
push
hlt
push
adc
lods
incb
sub
xor
sbb
adc
dec
pop
mov
stc
cmpb
imul
inc
mov
push
jnp
inc
mov
and
dec
sub
adcb
popa
xchg
pushf
xor
sbb
aaa
xchg
lods
sub
mov
mov
xchg
insb
jmp
fisttpl
sub
icebp
clc
test
sbb
bound
test
jae
mov
sub
mov
loope
pop
sti
imul
cmpsb
and
pop
xchg
pop
sti
inc
cld
jo
ds
out
xchg
or
data16
inc
stos
cmp
cmp
inc
cld
cld
push
xor
xor
stos
mov
rolb
in
push
dec
inc
jnp
sub
xor
jmp
scas
std
push
sbb
sub
lock
mov
xchg
add
cmp
xchg
cmc
push
fcmovu
divl
repz
outsl
sub
add
jno
popa
out
mov
mov
insl
mov
loop
add
cmp
lods
jns
mov
imul
or
movb
negb
mov
adc
adc
repz
mov
mov
cld
leave
lret
fcoms
scas
scas
test
ret
pop
icebp
add
bound
ljmp
jge
mov
repz
jno
cmp
dec
repz
jmp
lret
push
sti
and
test
inc
int3
jo
jge
cmp
or
cmp
imul
repz
gs
mov
lock
jae
not
sbb
fisttpll
dec
sar
and
pop
or
or
jl
mov
filds
in
push
mov
mov
push
mov
aaa
insl
mov
test
jp
xor
ret
outsl
mov
xor
out
xchg
fadd
cli
add
sti
xor
loope
mov
insb
push
jmp
stc
cld
lahf
push
fistpl
jno
repnz
jne
stc
test
arpl
xchg
pushl
push
mov
jle
test
loopne
fstl
inc
shlb
lret
sbb
daa
fsts
add
xor
mov
adc
mov
sbb
push
pop
sub
push
test
aad
iret
add
dec
fistl
sti
adc
and
cmp
stos
sub
mov
data16
daa
and
lahf
aad
cmp
ss
xchg
xor
cmpsl
cmp
pop
push
stos
add
cmpsb
sub
pop
mov
sahf
daa
dec
sub
cmp
nop
out
dec
addr16
jmp
cmp
insb
jmp
xchg
xor
in
les
call
sub
mov
dec
cmpsb
outsl
repz
daa
sarl
push
leave
pop
outsl
jo
add
scas
sahf
lahf
aas
cmp
cmp
pop
fbld
inc
test
pop
sub
sbb
sub
ljmp
dec
jnp
mov
loop
inc
pushf
mov
stc
lret
imul
and
sub
or
leave
push
sbb
fisubrl
icebp
lcall
push
mov
int
shld
scas
in
dec
add
iret
lods
ds
loop
jnp
push
mov
or
ss
out
mov
add
lods
rclb
div
shr
les
movsl
ss
push
daa
cmp
out
xchg
loopne
xor
push
jecxz
lret
mov
ljmp
push
cmp
cmp
es
nop
dec
fisubrl
and
lret
jbe
inc
adc
xor
sbb
rorl
mov
inc
push
inc
insb
clc
push
mov
ljmp
aad
sub
in
jecxz
or
mov
cmpb
mov
mov
mov
std
in
stc
jns
insl
fildll
push
imul
mov
lea
mov
xor
ja
ror
iret
arpl
lods
adc
fcoms
jo
push
jnp
clc
jle
fisubrs
filds
int
lds
sbb
mov
sub
mov
in
push
push
jg
xor
sub
sbb
mov
inc
clc
jnp
jmp
in
jnp
push
addr16
int
out
or
add
mov
cmpb
pop
mov
pushf
cld
cld
rolb
cmp
xor
push
scas
mov
cmp
mov
shl
cli
outsb
lahf
pop
inc
pop
ljmp
sti
jecxz,pt
and
mov
mov
jp
mov
cwtl
in
or
cmpsl
push
and
loop
mov
aas
and
push
xchg
inc
push
mov
sbb
xchg
xchg
inc
scas
sub
and
mov
jecxz
les
inc
dec
icebp
lods
or
jb
cmpsl
jne
jne
or
data16
shr
inc
cwtl
fdivrs
pop
imul
stos
mov
in
fdivrs
data16
dec
xchg
cmp
ss
arpl
cmc
out
ret
mov
mov
leave
cmp
push
adc
iret
push
ret
xchg
push
dec
adc
push
in
test
arpl
lret
cltd
outsl
cmp
xchg
push
aam
xchg
int3
bound
popf
cmp
shlb
mov
leave
ss
in
push
lahf
jmp
out
mov
mov
lods
jl
fistpll
pop
xor
xor
stos
push
daa
dec
cmp
out
in
test
mov
sbbb
and
sbb
or
pushf
inc
xor
xchg
lret
sbb
and
sbb
cltd
adc
pop
mov
ds
out
cmp
popf
pop
hlt
sti
ret
add
test
jnp
jnp,pt
lcall
jne
cmp
dec
mov
mov
adc
popf
xchg
jge
outsb
std
push
xor
pop
in
pop
add
and
mov
jge
dec
mov
push
cld
mov
sbb
rorb
lret
lock
outsb
sub
leave
jb
insl
movsb
or
pop
fucomip
les
jmp
add
idivb
mov
jns
and
push
mov
mov
testl
cmp
push
loopne
lds
and
iret
xlat
jns
inc
cmp
xorb
xor
jbe
ljmp
add
or
xchg
sbb
pop
adc
xor
and
cmpl
out
fldcw
int
shrl
mov
ljmp
dec
ret
cld
es
sub
pop
aad
jne
dec
xor
xchg
test
mov
jmp
popf
orb
gs
test
mov
cmpsb
call
bound
rcl
mov
jl
mov
movsb
cltd
lret
cmpsl
mov
xchg
sbb
fnsave
out
pop
pop
sbb
and
xlat
jno
sbb
stc
ja
loope
xchg
and
push
and
into
sub
jb
pop
lret
jne
mov
cmc
pushf
cmp
pushl
sahf
add
stc
xchg
pop
pop
loope
mov
rcl
sbb
jle
jnp
loope
dec
push
repz
xchg
add
adc
icebp
stc
aas
add
and
xor
in
adc
pop
pop
xchg
and
inc
shl
mov
jl
nop
or
fidivs
out
mov
dec
orb
or
movsl
dec
rcrb
xor
call
enter
push
sbb
sbb
imul
mov
adc
sbb
jo
xchg
jne
mov
icebp
imulb
mov
adc
addb
repnz
jmp
outsl
push
stos
push
push
ja
das
fwait
ds
xor
lea
ljmp
xor
pushf
lods
emms
inc
mov
sub
inc
shll
in
add
push
mov
dec
sahf
cmp
imul
outsl
enter
xchg
pop
and
gs
popf
cmc
mov
test
inc
adc
test
xor
imul
sbb
in
ja
testl
jp
iret
push
loopne
pop
mov
xchg
in
xchg
into
sti
movsb
add
jae
add
hlt
std
fmuls
stc
lock
leave
cs
scas
pop
enter
lret
scas
loope
mov
loop
fnstenv
int3
orb
fldcw
and
xor
movsl
popa
mov
mov
mov
jl
push
sbb
adc
xchg
jmp
ret
push
int
jne
aam
xchg
pop
mov
cmp
mov
and
sbb
test
loope
mov
mov
clc
mov
icebp
in
ljmp
pop
and
sub
test
sbb
xchg
aas
fstp
cmp
push
in
jnp
mov
mov
dec
xor
ja
addl
pop
jno
sbb
jmp
jnp
loope
push
adcb
cmp
xchg
xor
inc
push
mulb
stc
add
out
jae
bound
lret
pushf
pop
or
mov
loopne
sarb
pushl
imul
push
xor
pop
fwait
sub
lock
lcall
mov
dec
lcall
mov
pop
mov
scas
imulb
dec
out
cs
popa
xlat
ljmp
pop
pop
xchg
test
push
bound
popf
dec
adc
mov
fs
jne
push
sub
popf
adc
mov
sub
int
add
adc
xchg
sub
push
sub
jb
push
mov
jno
add
dec
out
out
cmpsl
xchg
pop
sbb
sub
xchg
jmp
add
sbb
aas
mov
movsb
imul
stos
stos
xor
or
das
jg
icebp
jo
aad
lods
aam
fsubr
sub
incl
cli
cltd
mov
pop
cmpl
xchg
mov
mov
stos
xor
movsl
push
jp
sbb
bound
xor
xchg
mov
ljmp
sub
adc
flds
jb
mov
inc
call
lock
loop
insb
shlb
push
leave
mov
adc
xor
and
cld
xchg
add
jge
jmp
fadds
dec
pop
inc
dec
cltd
xor
push
adc
pop
in
stc
cwtl
sar
inc
int
inc
movsb
int3
mov
popa
cmpsb
mov
mov
lret
jo
xor
shlb
sarl
repnz
xchg
rclb
sbb
mov
test
inc
push
imul
ljmp
rcrb
or
fstps
orl
out
mov
jecxz
adc
xchg
and
mov
cmp
inc
xlat
popl
lcall
mov
je
mov
xor
push
add
lods
push
outsb
stos
sub
sub
jle
popf
stc
loopne
insb
pop
jge
mov
xchg
in
or
cld
xchg
xor
pop
rol
adc
js
leave
add
mov
adcb
iret
and
push
aad
pop
test
mov
clc
ret
cmp
inc
push
dec
outsb
les
hlt
dec
xchg
out
sahf
jbe
stos
dec
or
mov
dec
xchg
inc
cmpsb
sbb
daa
sti
pop
mov
jb
repz
lret
xchg
xchg
cmpl
sbb
cmp
ret
fdivl
dec
nop
mov
cmp
test
pop
push
fwait
adc
xor
pop
push
stc
and
dec
dec
das
cmc
and
and
mov
out
cld
jns
push
mul
and
or
pop
and
dec
aad
pop
sub
and
mov
dec
mov
dec
fimuls
mov
fnsave
add
into
add
pushf
pop
mov
fs
mov
jmp
cmp
inc
push
add
pop
cwtl
xchg
dec
int
stos
mov
jecxz
out
adcb
inc
pop
fistpl
cmc
popa
mov
push
add
add
icebp
jle
out
add
bound
xor
add
iret
lock
or
sbb
movsl
jl
sub
icebp
aad
lret
inc
addr16
lret
fsubr
push
int3
mov
loopne
cltd
or
pop
mov
cmp
arpl
cs
out
scas
jnp
adc
pop
pop
dec
pop
xchg
movsb
inc
cs
pop
or
jae
sub
pop
dec
sub
adc
xor
es
pop
loope
xchg
out
aas
pop
inc
dec
out
fs
adc
mov
mov
not
xor
inc
data16
nop
mov
gs
out
dec
daa
add
out
pop
mov
add
dec
scas
xor
jmp
inc
cli
pop
stc
and
add
and
and
inc
push
mov
mov
sub
fisttps
inc
jmp
sarb
sub
dec
push
push
add
rcl
inc
fildl
dec
loopne
sarb
mov
sti
xchg
jbe
cmpb
mov
adc
and
mov
xor
pop
sbb
xor
popa
sbb
rorl
das
lcall
sub
fbstp
insb
cmp
mov
fcompl
cmc
or
out
int3
and
jge
sbb
lahf
adc
mov
negb
jge
sub
sbb
lret
mov
inc
leave
dec
adc
push
push
push
cltd
stos
xlat
loop
pushf
xor
lcall
jl
push
pusha
adc
ret
xchg
outsl
mov
adc
test
mov
pop
outsb
lret
add
push
cmp
pop
jae
cltd
dec
or
mov
jecxz
or
cmpsl
xchg
rcll
and
sub
or
xchg
stos
jl
mov
mov
sti
push
and
jl
shll
mov
insb
imul
add
pop
daa
int3
dec
push
mov
subb
push
xor
arpl
pop
shl
jecxz
or
xor
push
adc
inc
xor
jecxz
loopne
push
adc
sbb
movsbl
cltd
mov
mov
push
ret
pop
push
movsb
jg
in
imul
rclb
mov
sti
ja
insl
das
push
insl
popa
mov
mov
js
xor
scas
mov
mov
aad
sub
push
mov
sbb
push
or
push
addb
scas
in
loope
popf
inc
sbb
inc
lock
pop
xor
outsl
dec
fisubs
mov
cmc
popa
cs
add
adc
jne
jl
out
das
mov
xchg
push
xor
fwait
repnz
iret
pusha
mov
data16
add
push
mov
ljmp
xchg
repz
fidivs
inc
push
sarb
and
mov
mov
mov
jnp
xorb
pop
cmp
cbtw
flds
call
add
jp
jp
push
and
loopne
cld
arpl
dec
adc
cmpsl
cmp
cmp
jnp
test
or
call
push
and
addr16
data16
xchg
add
push
mov
enter
scas
addl
mov
add
test
adc
and
mov
xor
jle
shrb
int
test
cwtl
pop
fsubs
dec
cltd
jg
jae
or
add
popf
xlat
es
mov
mov
xchg
xor
jae
adc
mov
inc
mov
aam
inc
add
jmp
and
xchg
into
rcll
faddl
in
mov
and
adc
rcrl
mov
xchg
shr
pop
xor
in
push
push
shrl
mov
test
xor
ret
mov
daa
pop
add
icebp
loope
mov
add
sub
cmp
or
sub
mov
outsb
aaa
hlt
shlb
pop
pop
mov
or
decl
mov
cli
sbb
pushf
das
mov
pop
testb
rorb
dec
enter
jmp
rcr
lret
std
mov
dec
inc
imul
in
pop
ret
mov
sti
sbb
push
sbb
sub
sbb
pop
lods
lods
mov
fmulp
mov
jns
add
mov
les
add
pop
mov
xchg
fucomi
add
cmpsl
xor
dec
push
adc
mull
xor
shlb
xlat
repnz
out
mov
adcb
fwait
pop
repnz
rcrl
cmp
or
sub
or
ljmp
ja
inc
mov
loope
xor
push
lods
js
xlat
xchg
pop
out
imul
adc
mov
jns
sub
dec
jb
or
repnz
hlt
lcall
insb
fldcw
inc
or
pop
mov
cmpsb
cmp
icebp
cld
cld
cmp
or
cld
add
dec
scas
dec
int
nop
sub
add
xchg
loop
hlt
xchg
push
add
jae
aas
pop
js
add
mov
mov
clc
bnd
daa
cli
je
fsts
xchg
outsb
sub
pusha
mov
mov
stc
inc
lahf
gs
test
dec
clc
mov
nop
cmpsl
rcrb
add
inc
shr
xor
mov
insb
fisubrs
cld
idivb
into
adcb
mov
cmp
push
and
adcl
mov
lret
pop
sub
pop
xchg
fstl
mov
sahf
mov
sbbl
pop
insl
movb
xorb
xchg
test
jb
fwait
test
xor
imul
leave
add
jl
and
scas
adc
xor
xchg
cmp
cli
clc
pop
les
test
cwtl
push
dec
das
pushf
out
pusha
fdivrl
mov
xor
sahf
call
pop
xor
jb
gs
insb
and
jp
sbb
mov
out
inc
shll
insb
cmpsl
ljmp
xchg
push
mov
ficoml
dec
push
imul
jmp
sbb
lahf
add
cmpb
stc
inc
insb
addr16
in
ficompl
into
std
dec
loope
cld
movsl
xor
push
push
inc
addr16
mov
jne
ss
aad
mov
inc
and
jle
inc
imul
or
xchg
mov
cld
cmp
idivb
inc
pop
xlat
add
pop
and
outsb
add
imul
rorb
mov
push
jae
fcmove
mov
jns
scas
leave
push
push
rcr
add
pop
ds
push
dec
test
lods
xor
xor
in
xchg
and
je
in
out
insl
fistpll
add
iret
mov
rolb
repz
enter
in
fsubr
mov
imul
inc
sub
sub
int
push
sub
jo
or
inc
fstpl
jg
mov
dec
lret
inc
mov
add
andnps
push
mov
pop
add
ss
sub
or
push
dec
fidivl
aad
iret
cmpsl
pop
in
jmp
cmp
rcrl
sahf
lds
insb
xchg
ret
pop
int3
adc
mov
dec
in
movsb
insb
roll
fcompl
jno
mov
push
inc
add
clc
xorl
push
mov
ja
sbb
addl
ljmp
clc
sub
cwtl
sahf
lods
loop
jp
fldcw
push
lahf
push
outsb
adc
subb
jp
sarl
jmp
push
int3
pop
loop
mov
push
frstor
scas
test
outsb
push
mov
and
push
fisubl
cmp
push
ret
and
mov
mov
test
movsb
mov
mov
pushf
push
scas
cwtl
ljmp
orl
packsswb
push
xlat
dec
or
xchg
ljmp
ficoms
or
lock
cmp
xor
xchg
xor
outsb
pop
cs
lock
sub
outsb
in
das
xchg
mov
mov
rolb
inc
pop
lcall
pusha
inc
mov
cmpsb
inc
popf
aaa
push
and
ret
rcrb
je
gs
mov
aas
es
stc
dec
push
testb
out
gs
sbb
sbb
xor
ss
mov
loopne
mov
insl
lock
shlb
lods
lods
mov
or
loop
into
mov
imul
jmp
lcall
dec
xor
mov
daa
xchg
pop
js
dec
jl
stc
xor
out
lods
pop
pop
cmc
inc
and
out
jl
jp
arpl
cwtl
jecxz
addr16
jg
addr16
addl
push
cmpb
sub
mov
xor
inc
pop
xor
push
dec
inc
test
ja
in
popf
addr16
add
sbb
and
aam
je
test
out
cmpsb
popf
and
mov
pop
nop
mov
adc
cltd
shr
jne,pt
mulps
sbb
rclb
or
add
ret
insb
or
add
push
cmp
add
jo
mov
mov
icebp
out
mov
lock
pop
daa
imul
xor
add
nop
out
aaa
and
pop
add
inc
adc
imul
pop
insl
sti
fs
push
out
cmp
lret
lods
aam
push
inc
andl
lret
mov
push
jmp
mov
icebp
adc
stos
insb
xchg
or
insb
cmc
add
mov
mov
xor
xlat
push
lods
rorb
sub
xor
add
cmp
movsl
mov
insl
and
cs
push
gs
ficompl
jg
xorb
pop
icebp
insb
pop
pushf
push
mov
test
aas
stos
mov
mov
ss
clc
mov
dec
data16
jmp
fwait
ds
aas
lret
ds
mov
and
jo
ret
aaa
mov
adc
sbb
adc
subl
fistl
adc
inc
pop
dec
mov
xlat
pop
stos
mov
inc
fiaddl
inc
enter
dec
jmp
stos
nop
ds
mov
pop
pop
mov
push
jns
inc
add
sbbb
ss
hlt
sahf
cli
mov
in
pop
in
xchg
mov
cli
imulb
or
bound
xor
aam
xchg
pmaddwd
jae
inc
sahf
int3
push
js
lea
shl
xor
rcrb
cwtl
jns
or
adc
jmp
xor
or
leave
mov
push
cmp
popa
mov
mov
addr16
stos
sbb
data16
mov
in
add
fs
std
jno
pop
pop
clc
out
inc
xchg
fsubrs
rorl
or
sub
imul
mov
test
add
and
ds
and
mov
adc
test
int3
add
loopne
inc
or
in
add
loop
enter
pop
jo
inc
adc
jbe
jnp
test
jecxz
gs
aam
test
test
push
xor
adc
inc
jae
or
fwait
sub
jmp
jecxz
sbb
testl
fcoms
jp
pop
gs
lret
loopne
mov
pop
xchg
xor
pop
jle
add
aam
ss
sbb
popf
xchg
nop
nop
inc
mov
nop
cltd
xchg
popf
jno
sbb
fs
xor
inc
and
cli
adc
xchg
out
stos
and
add
sbb
xchg
inc
stos
bnd
push
pushl
mov
mov
mov
lock
jno
mov
dec
or
mov
outsb
jg
rorb
stc
inc
insb
xchg
sub
stos
subb
push
pop
push
mov
xor
mov
jae
cmp
movsb
mov
scas
div
adc
loop
test
mov
repz
cmc
rol
xchg
cwtl
fwait
dec
add
adc
ljmp
clc
inc
add
inc
or
add
add
testb
mov
jmp
xchg
jne
je
sub
xor
pop
jmp
shr
or
imul
mov
pusha
adc
xor
ds
dec
andl
mov
clc
pop
dec
xchg
imull
scas
push
out
push
fcomps
jno
cmpsb
repz
or
mov
add
dec
mov
or
and
and
scas
xchg
pusha
or
push
xlat
mov
pop
hlt
popa
mov
xchg
stos
xor
ficompl
cltd
sahf
loop
and
jno
xchg
enter
pusha
push
gs
push
dec
mov
pop
dec
jno
fwait
repnz
aam
add
test
cmpsl
out
insl
sbb
sub
cmp
fstps
inc
lods
or
sub
imul
xchg
cmp
mov
sarb
xchg
enter
jmp
cltd
aad
lcall
mov
sbb
push
jge
xchg
and
cmp
mov
cld
xchg
jns
addb
adc
scas
mov
pop
pop
out
push
cltd
test
lret
sbb
lds
xchg
jle
test
cmp
stc
js
out
out
call
movaps
mov
cltd
enter
mov
dec
sbb
out
pop
lods
fldl
ja
cmp
aas
add
loop
mov
xor
xlat
inc
popf
inc
ret
movsb
add
sub
test
push
xorb
mov
jnp
das
xor
xchg
icebp
movsb
sbb
push
sbb
inc
andb
mov
jg
stos
sti
les
into
pop
mov
jmp
sub
adc
sub
mov
push
inc
ret
icebp
sbb
out
stos
cmp
scas
stos
adc
popf
lret
xchg
or
cwtl
nop
loop
mov
fcompl
ljmp
xchg
xchg
lret
push
or
xchg
mov
lret
ret
add
mov
push
ds
arpl
cwtl
int3
ror
iret
mov
rorb
push
ret
lea
fdivs
sbb
je
pop
out
sub
call
and
scas
les
js
mov
cmp
jle
negb
popa
fnstenv
adc
pop
test
loopne
pop
cmp
shl
xor
and
into
adc
sarb
mov
mov
jecxz
jmp
mov
in
jle
into
icebp
pushf
das
push
add
out
cmp
xchg
dec
inc
cmp
jg
shr
or
fdivp
pop
cmpsl
pop
xchg
fldt
xchg
loope
dec
push
mov
pop
push
call
je
inc
pusha
popa
shlb
in
or
xchg
std
pop
or
pop
ret
mov
push
stos
pop
push
out
aaa
pop
std
sar
lds
push
popf
jle
into
adc
inc
movsl
into
or
xor
rclb
fisttps
mov
cmp
cs
clc
ja
xchg
xor
dec
scas
mov
lcall
inc
adc
pop
lcall
ljmp
dec
je
lret
cmp
hlt
aam
cmp
orb
mov
sahf
xor
rorl
sub
mov
jp
dec
loop
fisttps
scas
popf
dec
in
adc
out
push
inc
inc
push
popf
repz
push
cmp
xchg
or
mov
cld
adc
out
pop
sbb
lahf
sbb
dec
mov
stos
push
test
xchg
or
add
icebp
adc
sub
clc
pop
or
mov
push
fdivl
stos
cwtl
ret
out
ret
rcpps
shl
test
or
push
loop
dec
xor
or
bound
sub
mov
aaa
pop
jae
lods
jmp
je
sti
imul
mov
es
add
push
pop
dec
xchg
cli
movsl
cmc
or
push
xchg
pop
jno
pop
inc
push
mov
aad
ffree
dec
jae
mov
xor
insb
pushf
testb
add
shlb
ret
lds
int3
adc
daa
stc
pushf
int
jl
hlt
test
loope
fldcw
adc
pop
push
stos
scas
and
xor
loopne
in
sub
xor
and
jmp
push
sti
sbbb
push
lock
and
xchg
add
xor
jmp
bnd
outsb
out
or
inc
xchg
xor
jmp
loope
mov
dec
movsl
divb
test
leave
dec
lcallw
jno
outsl
mov
inc
test
test
adc
jne
sbb
sbb
jmp
fisttps
inc
lods
sbb
add
mov
push
enter
push
shrb
pusha
xchg
adc
mov
or
mov
sub
loope
add
add
dec
inc
xchg
loop
lret
ret
pop
scas
jns
in
ja
mov
pushf
ljmp
jmp
std
add
hlt
xor
lcall
xor
or
daa
sahf
out
loope
jb
mov
mov
jge
xor
sbb
add
adc
icebp
movsl
pushf
adc
enter
int3
adc
add
xchg
xlat
cmp
ljmp
cmp
test
andb
mov
cmp
mov
mov
jbe
pop
out
cmpsl
sar
sub
add
lcall
jl
push
push
test
loop
out
jle
cmc
ftst
cmp
xchg
jle
push
xchg
adc
fcomps
inc
mov
dec
mov
mov
adc
imul
pop
sti
xlat
jae
out
pop
push
jns
sahf
lcall
shll
aam
mov
mov
sahf
inc
aad
hlt
push
mov
cld
stos
jbe
repz
xor
or
mov
movsl
push
out
jae
dec
insl
and
add
sbb
bound
icebp
push
fsub
xchg
mov
shl
push
jecxz
adc
cmc
xor
loope
loop
mov
scas
daa
les
xchg
js
es
push
mov
inc
arpl
xchg
test
ret
jno
sub
inc
pop
shlb
xchg
sbb
sbb
bound
nop
out
mov
int3
out
jle
adc
add
enter
pop
sub
xor
xchg
rorb
pop
stos
ja
adc
push
into
shlb
mov
jge
mov
pop
out
lahf
mov
sbb
pop
stos
add
sub
fistpl
sbb
jle
jmp
push
push
mov
jle
jne
inc
imul
cmp
enter
mov
cltd
test
pop
loope
dec
loop
loop
cld
sub
dec
cmc
add
mov
std
nop
cmpsb
ret
pusha
leave
insl
subl
push
pop
dec
add
mov
push
xor
fistl
mov
adc
jo
pop
push
inc
aam
xchg
xlat
add
push
dec
ffree
jae
and
push
mov
xchg
fmuls
jae
imul
lcall
mov
inc
lret
jae
xor
push
and
xor
ret
adc
or
test
dec
xorl
ja
or
xchg
ljmp
ja
mov
cli
divl
and
xchg
and
es
push
inc
imul
clc
xchg
mov
jbe
jo
xchg
mov
sbb
push
push
sub
ja
add
adc
dec
insb
test
jmp
out
jnp
ljmp
insl
stos
test
mov
pop
pop
jns
ds
push
sti
adcl
lds
push
inc
cmp
add
orl
xchg
cmpsl
push
adc
push
inc
pop
hlt
lods
mov
in
push
test
and
pop
je
sbb
add
mov
jo
xchg
lods
mov
cs
popl
mov
fstps
jno
outsb
mov
jae
mov
sti
pushf
or
insl
and
loop
push
mov
rcrl
scas
pop
inc
adc
sbb
shll
and
dec
sbb
ds
int3
std
cltd
sbb
lock
xor
jle
xor
addr16
inc
cs
xor
stos
cmp
pop
bound
arpl
mov
repz
and
jno
fs
or
sub
jb
mov
or
pop
cmp
test
call
test
fiadds
jno
push
pop
lcall
jmp
or
push
rcl
cmp
push
or
push
and
and
lods
rol
push
cmp
mov
das
adc
push
xchg
push
jne
in
or
out
data16
into
pop
sub
ret
rorl
inc
and
pop
jg
push
or
sub
cwtl
mov
cmp
or
jp
dec
lret
in
pop
inc
fwait
in
das
nop
mov
iret
sbb
push
ficoml
enter
jae
lahf
scas
xlat
scas
mov
mov
cmc
push
es
or
inc
xchg
rorl
inc
mov
or
add
cltd
inc
sub
inc
jle
inc
push
movsb
imul
fisubs
sub
pop
fadds
test
jnp
dec
or
adc
mov
jle
je
jb
insb
mov
jecxz
divb
cmpsb
jp
data16
xchg
cltd
subl
ljmp
inc
outsl
lds
dec
mov
mov
and
mov
mov
xchg
aaa
pop
mov
and
call
lock
mov
outsl
pop
lods
adc
and
fsubrl
sub
sbb
data16
stos
ds
fwait
push
ret
ljmp
sahf
and
aas
pop
clc
in
inc
inc
or
loope
jo
push
jmp
cli
pop
pop
jo
push
sbb
std
loopne
stos
cmc
inc
mov
adc
pop
lock
lret
jmp
push
loopne
ss
out
scas
lahf
loop
sub
dec
rcrb
imul
push
mov
cmp
leave
movsl
inc
xchg
in
neg
mov
dec
cmc
push
scas
stc
cmp
pop
jecxz
mov
gs
push
jmp
rcrl
sbb
fcoms
imul
pop
adc
inc
xchg
cmp
dec
loopne
fcoml
mov
and
adc
pop
mov
sbb
scas
push
repz
and
fmul
and
leave
jmp
mov
jg
adc
fwait
outsl
arpl
int
xchg
pushf
lods
mov
out
xlat
inc
jno
es
mov
neg
mov
push
or
mov
mov
adc
insb
push
adc
mov
or
ss
pushl
loope
popf
push
jns
cmp
aaa
inc
and
mov
popf
cmp
xor
sub
lret
adc
xchg
test
jo
xor
fnsave
call
adc
add
das
cmp
out
xor
mov
shll
mov
dec
ja
cmc
hlt
or
sub
xchg
inc
pusha
je
mov
xchg
sbb
jbe
xchg
xchg
jp
xchg
jne
das
xor
outsl
pop
loope
xorb
mov
out
mov
pop
fmull
arpl
es
cmp
ret
std
lds
lcall
adc
fnstsw
or
call
mov
insb
movsb
sbb
les
lret
cs
cmp
je
mov
out
dec
enter
inc
mov
mov
fldl
or
cmp
lods
scas
test
add
fldenv
stos
jl
jno
fldl
iret
pop
addr16
jp
popf
ret
pop
sarb
mov
cli
loopne
push
push
pusha
mov
pop
pop
test
pop
mov
inc
aaa
adc
sub
negl
out
pop
jg
mov
pop
or
sub
addr16
test
pop
sub
cmp
pop
ja
loope
aas
cmp
mov
ja
incl
pusha
insl
dec
mov
adc
dec
fildl
daa
rorb
mov
jae
fisubs
push
aas
mov
out
movsb
fisttpll
enter
cmp
jnp
aas
jge
xchg
pushf
cmpsl
cwtl
in
fs
jns
mov
fcomp
jo
jge
outsb
out
enter
clc
mov
addr16
sub
sbb
cmp
mov
push
add
jl,pt
mov
dec
testl
add
mov
loope
mov
std
clc
mov
lods
in
dec
mov
test
mov
lret
jmp
pop
pop
sti
or
or
jecxz
cmp
xor
mov
sarb
pop
cmp
jae
sub
mov
in
imul
lds
movsb
add
pushf
add
cmc
and
sti
test
dec
andl
aas
mov
jae
cmp
cltd
or
loopne
cmpsl
jle
jp
add
push
sbb
jne
flds
out
and
test
sahf
xchg
inc
push
xchg
sub
out
inc
xchg
xor
icebp
roll
dec
sub
inc
test
add
add
mov
daa
jle
mov
aad
sbb
cld
add
jmp
test
adc
into
cltd
movsb
out
adc
daa
stc
xor
movsl
iret
bound
cmp
in
cltd
aad
and
xchg
iret
cli
jae
mov
lfs
push
sar
mov
mov
shll
ljmp
fldt
xchg
push
dec
inc
dec
cltd
in
icebp
pop
dec
movsl
movsb
orl
imul
incb
push
sbb
mov
ja
movsb
and
repz
sub
insb
pop
scas
add
sbb
bound
jl
jmp
aas
mov
mov
sub
popf
faddl
clc
xor
ja
xor
mov
mov
fstpl
pop
sti
and
stc
sub
jecxz
ljmp
js
sub
popf
pushf
cmp
repnz
mov
inc
aas
in
jl
rcll
roll
shlb
in
test
iret
dec
bound
out
inc
cmpsl
and
lret
imul
xor
inc
mov
addb
push
dec
sbb
sbb
dec
and
mov
dec
das
ret
cmp
shrb
sbb
inc
out
or
maxps
jecxz
mov
jecxz
fmull
sub
nop
fadds
shr
mov
cmp
rolb
frstpm(287
inc
lods
jle
aad
sbb
adc
pop
lret
orl
sbb
repnz
adc
mov
dec
or
repz
out
add
push
pop
push
xor
mov
mov
xor
jae
lcall
mov
push
jg
xlat
out
into
rcll
push
inc
out
es
ljmp
cmp
mulb
jb
je
xor
ja
pop
pop
pop
or
push
xchg
cltd
mov
jmp
sbb
add
cld
push
lods
xor
pop
mov
cs
sub
stos
mov
lret
push
lret
mov
and
nop
push
lret
mov
in
mov
insb
leave
sub
inc
push
outsb
scas
ss
sbb
cltd
or
lods
mov
adc
mov
sub
pop
cmp
push
jl
shrb
loopne
fnstenv
insl
mov
shrl
mov
or
shrl
adc
cmpsl
movsl
fdivrl
ficoms
mov
and
xchg
adc
xor
hlt
and
jg
adc
js
jecxz
mov
adc
data16
adcl
or
fmull
jg
jne
sbb
sub
or
stc
xchg
lcall
xchg
jo
mov
loopne
das
xchg
int3
pop
lret
ss
mov
or
sbb
test
ret
or
in
jecxz
out
hlt
xlat
push
cmc
push
xchg
fs
lods
imul
inc
pushf
lcall
mov
xchg
pop
ja
ss
fisubl
dec
mov
add
mov
into
xchg
or
pusha
mov
imul
hlt
jge
push
mov
mov
xchg
mov
dec
inc
pop
insb
xchg
sbb
pop
ljmp
aaa
je
push
jecxz
pushf
pusha
xor
mov
aam
adcl
xchg
js
jne
dec
int
lret
movsl
xchg
push
psrad
lcall
ljmp
orl
pop
fcom
cmp
mov
out
xchg
push
push
lret
stos
into
nop
xchg
pop
mov
and
pop
fmulp
icebp
adc
lds
pop
loop
sub
jne
xorl
sarb
adc
xor
ret
in
aam
gs
mov
cmpb
sub
stc
cmp
and
in
mov
pop
dec
int3
lods
xlat
ss
mov
sbb
insl
fsubs
sbb
push
lcall
add
push
aas
mov
icebp
scas
insl
das
flds
data16
in
aad
out
out
icebp
adc
daa
or
daa
mov
lcall
cmpl
dec
lcall
xchg
jle
lahf
xorb
dec
mov
aad
push
ja
cmp
lods
repnz
lret
movl
cmp
adc
jno
pushf
imul
jle
and
mov
push
pop
loope
cmpsl
inc
xor
lock
mov
je
push
gs
std
dec
add
jno
pop
cmpsb
or
in
ret
mov
inc
ds
into
lahf
push
mov
push
lods
shrl
or
jmp
dec
mov
call
xor
and
add
fisttps
aas
stos
pusha
pop
leave
filds
rolb
xchg
mov
in
and
inc
gs
sbb
jae
sbb
pop
es
lods
rcrb
imul
lahf
mov
stos
test
ja
ret
xor
cltd
mov
gs
jb
xchg
iret
mov
or
mov
jbe
imul
hlt
movsb
loop
lds
lock
and
mov
dec
negl
mov
dec
mov
push
sub
and
inc
into
push
pop
pop
add
sub
inc
xchg
mov
nop
mov
in
sbb
or
adc
inc
or
ss
xor
pop
jno
or
ljmp
hlt
xor
ret
and
cli
aam
mov
sbb
push
mov
fists
mov
aas
rcrb
rolb
lret
and
nop
mov
mov
rcrb
push
outsl
add
push
push
rcll
nop
fdiv
cmp
jge
mov
xor
fistpl
inc
sub
arpl
aaa
addl
sbb
roll
js
mov
movsl
pushf
imulb
mov
xchg
sbb
or
xor
pop
out
cwtl
inc
mov
les
lahf
in
sub
lock
inc
or
mov
jo
mov
and
loop
sub
and
in
push
xor
imull
cmp
in
dec
and
pop
rcr
push
push
movsb
jge
mov
jne
mov
inc
popf
pop
xchg
stos
pop
wrmsr
aaa
shll
xor
or
ss
or
inc
popf
dec
and
out
sub
xchg
ja
sti
ljmp
add
pusha
fadds
cmp
adc
repz
pop
lods
decb
inc
and
sbb
fwait
add
cmp
add
aas
mov
mov
cmpsl
dec
xorl
test
lods
sbb
pop
jmp
and
mull
jge
pop
sbb
dec
and
out
in
pop
addr16
pop
or
mov
xor
xchg
scas
mulb
rcll
adc
popa
dec
and
fildl
mov
xchg
repnz
add
cmp
and
xor
pop
fsubl
pop
dec
inc
in
notb
leave
push
mov
xchg
or
xor
jae
gs
js
fdivrs
push
mov
stos
and
sbb
loopne
sbb
test
in
out
cmpsb
pop
js
mov
scas
shrl
dec
sbb
add
inc
inc
fbld
js
sarl
scas
sbbb
ja
incl
mov
mov
jae
fcmovu
in
mov
stc
jbe
inc
ds
mov
sub
jmp
and
jbe
aaa
xlat
and
mov
icebp
jle
lea
mov
jg
je
mov
ficomps
push
pop
pop
js
into
outsl
jl
daa
xor
jg
cmpsb
dec
inc
pushf
decl
fprem1
pop
add
mov
mov
test
outsl
mov
lahf
and
orb
sub
fldenv
mov
jl
in
enter
arpl
xor
jae
js
aam
mov
sub
popf
sub
jle
or
and
insl
je
imul
ret
and
add
pop
test
outsb
outsl
stos
faddp
int
jge
sti
and
and
sbb
ss
dec
sub
and
jp
mov
leave
sti
pop
mov
mov
insb
dec
sar
test
loop
lret
xor
inc
sbb
stc
movb
pop
out
mov
arpl
out
mov
xor
scas
or
rdpkru
or
push
or
loopne
adc
xchg
inc
xchg
cwtl
jo
push
push
stos
inc
lods
or
xchg
dec
hlt
and
scas
jns
inc
enter
sahf
cmp
mov
sub
xor
addr16
int
clc
jae
sbb
lret
pop
out
cmp
in
clc
mov
stos
aad
andl
fsubl
jp
stos
mov
lods
mov
dec
sub
fs
cmp
ss
inc
jmp
movsl
mov
push
adc
inc
clc
lret
xchg
clc
ret
jg
outsb
xchg
and
mov
adc
in
pop
les
mov
sti
fisubl
push
aam
rorl
pop
push
xor
adc
push
inc
sbb
clc
js
fs
movsb
mov
sub
add
sbb
ds
sub
and
cwtl
and
in
or
repz
lret
es
pop
mov
push
arpl
sbb
mov
xor
nop
lds
pop
cmp
push
stos
jl
mov
mov
ss
xor
pop
dec
mov
mov
arpl
pop
rcrb
xorl
mov
mov
insb
sbb
jo
jg
jl
fimuls
mov
dec
mov
xchg
popa
sub
inc
push
mov
mov
sbb
insb
jge
sti
jno
inc
jge
ret
fiaddl
enter
inc
shl
push
jecxz
lea
lcall
xchg
adc
addr16
int
add
cmp
mov
lahf
mov
adc
mov
fldlg2
and
or
or
push
fadd
sti
mov
ss
das
xor
movsl
dec
mov
fs
cli
and
sub
xchg
movsl
jne
aam
dec
std
nop
xchg
dec
out
push
xor
mov
pop
and
or
pop
jmp
clc
in
jne
add
add
inc
push
or
sub
or
int
jmp
push
sbb
xor
and
daa
jg
shrl
lcall
jnp
jmp
inc
mov
sub
jnp
sub
xchg
leave
movb
and
mov
cld
push
sbb
aas
fists
stc
jl
xor
xchg
jg
add
mull
mov
mov
jle
dec
mov
mov
sbb
lcall
test
ret
adc
int3
clc
test
jmp
xor
or
xor
adc
adc
cmp
and
and
push
call
std
jnp
movsb
stos
push
xor
push
cmp
loopne
mov
mov
sub
sub
push
mov
pushf
pop
mov
dec
sbb
jecxz
popf
je
lret
int3
in
stos
es
shrb
and
lret
cmp
mov
mov
xor
adc
mov
pop
sbb
push
push
outsl
mov
loopne
test
pop
dec
add
cmp
data16
stos
subb
lock
push
cmp
ja
outsb
mov
fadds
out
mov
adcl
mov
repz
mov
add
into
mov
and
fbstp
cmp
sub
pop
stc
in
pop
or
in
lods
adc
test
movsb
xchg
shr
sub
testl
jle
out
push
xor
mov
cmpsb
adc
das
je
pop
lcall
lea
fiaddl
lcall
xlat
scas
ficoml
repz
dec
xchg
popf
movsb
xchg
pop
leave
imul
loop
jmp
sub
in
or
dec
addl
leave
aas
sbb
frstor
fsubrl
jle
mov
xor
adc
test
inc
or
add
push
insl
std
cmp
inc
and
xor
sbbl
insb
mov
xchg
dec
aad
lods
jb
adc
sub
push
jge
jb
cltd
and
mov
aas
sbb
add
or
mov
js
adc
adc
lods
dec
pusha
dec
pusha
int
mov
lea
cwtl
push
push
sub
loopne
push
iret
decl
xor
inc
xchg
inc
inc
arpl
lea
push
outsb
pop
inc
add
xchg
dec
sbb
es
push
jo
je
out
dec
out
sbb
dec
lods
xorb
sahf
rcll
lock
fwait
jb
outsl
mov
sub
sti
insb
out
push
ljmp
jns
jns
subl
mov
int
popf
loope
aaa
in
sbb
mov
mov
add
add
mov
mov
dec
pusha
stc
loopne
xor
mov
dec
add
mov
jle
mov
push
adc
cmp
adc
fwait
mov
js
inc
jns
dec
das
sti
jp
dec
push
out
xchg
into
mov
adcb
insl
stc
or
mov
rep
sbb
push
sti
test
or
pop
lret
sub
cmc
inc
pop
shlb
xchg
out
push
scas
mov
call
es
mov
cli
and
mov
push
inc
mov
add
loop
ljmp
lods
sbb
cwtl
lds
cmp
push
daa
ret
insl
outsb
and
call
into
push
int3
icebp
adc
and
aam
roll
jno
mov
dec
in
inc
outsb
popf
stos
sbb
imul
or
jge
call
hlt
xchg
pop
test
pop
xor
out
jnp
test
cmp
mov
push
out
lcall
stos
pop
mov
lock
push
xchg
mov
sarb
lods
inc
ret
sub
imul
insl
stos
mov
dec
mov
aaa
shll
hlt
or
push
inc
sbb
xchg
fs
sub
sub
xor
push
sub
jb
push
mov
loope
sub
push
push
add
cli
mov
popf
mov
jp
outsl
add
add
push
ja
ja
dec
popf
data16
insb
mov
call
push
mov
add
jne
rcr
pusha
cmp
inc
push
insb
popa
push
adc
lahf
adc
mov
xor
mov
cmp
imull
mov
ss
imul
ret
popf
inc
add
adc
test
leave
mov
stos
jp
xor
sub
jge
movsl
xchg
cmpsb
into
test
stc
jnp
dec
dec
pop
pop
inc
push
sbb
mov
outsb
movsl
call
dec
fs
lea
popf
pop
dec
cmpsl
and
int3
pop
rcr
roll
xchg
xchg
ds
pop
andb
in
jae
cmpsl
jne
pop
sti
je
inc
mov
mov
insb
hlt
push
jmp
xor
push
out
xor
push
scas
aas
adc
jnp
lods
cli
sbb
leave
das
std
int
nop
xchg
add
aas
cltd
xor
mov
dec
xchg
fdiv
inc
imul
pop
dec
xor
mov
lcall
fsubs
imul
sub
arpl
push
sub
jae
arpl
jns
mov
cltd
roll
fwait
dec
mov
mov
ja
js
ja
imul
je
mov
insl
sbb
xlat
xor
push
mov
ds
inc
push
mov
pop
lock
mulb
sarb
stos
adc
out
add
sub
jae
push
aam
mov
test
pop
inc
push
outsl
sarl
lods
in
arpl
inc
repz
push
scas
fmuls
es
leave
cmp
ds
sub
mov
or
adc
loope
pop
or
jmp
in
andb
out
mov
popf
xchg
outsb
sub
push
inc
popf
lods
fsts
insb
jmp
les
push
test
rorl
add
lea
pop
xchg
cmpsb
jmp
jno
dec
movsl
jns
push
fsubrl
push
pop
cmp
and
aas
mov
lret
out
mov
cmp
fsubs
jmp
adc
cwtl
std
sbb
das
pop
cli
sub
or
adc
scas
cmpl
pop
subl
xor
int
daa
imul
pop
ljmp
ds
sub
xchg
rcl
adc
dec
insl
cmp
dec
out
pop
xor
dec
push
cltd
insl
data16
addr16
stc
mov
mov
adc
inc
adc
jbe
insl
push
jmp
movsb
jecxz
test
mov
sub
mov
dec
pusha
mov
sub
popa
mov
xchg
push
xchg
jle
iret
popa
divb
roll
jno
loopne
dec
fidivs
mov
lods
pop
lea
mov
mov
cld
mov
paddusb
jmp
js
mov
dec
imulb
cmp
cmp
lods
mov
or
and
add
jmp
mov
ja
lods
pop
ja
add
dec
pop
in
popa
inc
and
cmp
xchg
jnp
xchg
pop
pop
aad
fs
mov
xor
jl
jmp
jo
and
into
pop
loop
insb
sti
mov
and
xor
push
les
cltd
xor
cwtl
pop
xlat
shlb
jne
cmpsl
loop
ror
rcrl
scas
mov
pop
movsl
int
inc
ffree
xchg
cmpsb
mov
adc
ret
sbb
mov
mov
nop
es
inc
xor
incl
adc
loope
push
ljmp
and
fwait
or
lret
sbb
rorl
mov
adc
out
mov
jecxz
dec
sti
lods
call
lock
push
scas
xor
ljmp
push
xchg
sbb
adc
jno
mov
lret
jmp
push
imul
insl
xchg
sbb
sub
mov
push
mov
add
insb
insl
mov
mov
cmc
mov
mov
jns
cmpsl
xor
insb
jbe
inc
nop
int
insb
inc
lods
lcall
adcb
push
mov
bound
sub
lds
sub
jns
xor
fistl
xor
pusha
push
scas
fs
lret
fidivrl
dec
outsb
mov
xor
xchg
ljmp
push
test
inc
fistpll
push
mov
in
add
loopne
ret
and
xor
test
je
jmp
xchg
in
jmp
sub
addl
pop
fisubl
or
ret
incl
dec
into
mov
in
mov
mov
and
test
push
mov
push
sbb
jge
test
sarb
xor
sub
xor
pop
push
test
or
pop
xchg
cmpsb
ror
inc
dec
ficoml
cwtl
or
into
xchg
mov
jbe
push
push
mov
test
in
and
pop
or
leave
call
sub
cs
add
cmp
push
cmpsb
andb
in
inc
outsb
pushf
dec
loope
push
push
call
pop
xchg
mov
in
out
or
xchg
push
jne
sti
adc
imul
add
das
xlat
aas
mov
sub
es
xor
popf
lods
mov
aas
mov
or
lock
andb
stos
push
cmp
out
xchg
dec
test
arpl
or
aaa
push
mov
add
insb
push
mov
mov
pushf
jne
insl
ret
lcall
inc
xor
in
shll
aad
or
cwtl
jno
sub
pushf
cmp
jae,pt
lahf
scas
adc
jecxz
mov
push
js
lahf
mov
push
aaa
or
xor
outsb
or
out
and
xor
and
jmp
sub
push
lret
push
pusha
mov
pop
jl
jl
stos
add
out
insb
in
xchg
xor
call
inc
call
js
pushf
pop
xor
sti
or
dec
in
test
add
cmpl
repz
mov
jecxz
pusha
int3
mov
jne
in
mov
fprem1
adc
into
cmp
push
cmp
or
ja
cmp
cli
inc
test
add
add
and
es
enter
dec
push
vpcmpeqd
jl
cld
roll
outsb
lods
xor
adc
movsl
mov
mov
fs
jb
cs
and
pusha
push
xchg
push
idiv
mov
push
mov
popa
push
mov
push
push
cmp
xchg
aas
fwait
sahf
xchg
xor
and
dec
or
xchg
xor
adc
das
popf
mov
xor
addr16
mov
inc
cmpb
sub
mov
inc
push
push
sbb
and
out
int
dec
sbb
data16
aad
es
add
jge
and
xchg
jb
movsl
adc
idivl
pop
pushf
or
shr
jne
push
adc
je
sub
mov
stc
mov
lds
movsl
into
or
xchg
and
jmp
mov
lret
push
das
scas
xchg
jle
inc
movsb
shl
dec
into
outsb
sub
out
movhlps
in
leave
data16
aad
mov
lret
mov
or
pop
adc
adc
add
or
pop
sbb
test
mov
aad
aam
test
ss
jge
insl
xchg
aaa
addr16
les
dec
jecxz
test
mov
xchg
ret
or
dec
dec
mov
pop
into
jg
aad
jp
clc
dec
out
test
cli
loope
push
mov
xchg
movsl
jo
mov
orb
addr16
dec
add
hlt
sbb
out
jns,pt
lret
lahf
inc
mov
dec
cmpsb
mov
popf
movl
jmp
mov
xchg
lret
lret
ret
jnp
mov
pop
shl
roll
js
inc
mov
aad
movsb
fnstenv
rcrl
dec
in
sbb
ss
cs
mov
mov
push
negb
pop
adc
or
stos
popf
cmpsb
popa
or
and
test
adc
ret
dec
in
loopne
or
and
lods
sub
lds
hlt
imul
ret
mov
pop
mov
leave
ja
pop
je
or
dec
mov
mov
dec
jns
imul
fstpl
cmp
rcl
sub
sbb
dec
pushf
imul
add
stc
cmp
int3
xchg
lahf
je
sti
jae
cmpsb
pop
jns
fldcw
sbb
add
push
sub
js
in
jg
push
in
sarl
adc
sub
cld
dec
push
or
adc
xor
jp
orl
sbb
push
test
mov
lds
js
sti
push
stos
push
mov
testl
iret
shrb
mov
push
mov
mov
ror
lods
stos
les
xlat
mov
sbb
and
data16
inc
mov
setb
aaa
cli
push
push
push
stc
xchg
sbbl
aad
and
mov
sti
mov
fcmove
ss
int
sub
push
jnp,pn
es
shlb
push
das
mov
push
xor
cmp
mov
add
orb
ficoml
and
sbb
sbb
or
mul
sbb
xor
dec
xchg
jmp
sbb
adc
pushl
mov
clc
ss
xor
into
add
jl
add
add
sub
out
jmp
xchg
sti
xor
arpl
jnp
mov
xlat
push
lea
int3
mov
out
daa
mov
cmp
fmull
cmp
popa
fnsave
gs
mov
stc
xchg
jnp
or
xchg
dec
sbb
mov
mov
scas
aas
dec
jo
sub
cmp
xor
inc
into
testl
xchg
xchg
mov
push
mov
mov
jl
repnz
xor
mov
and
inc
stc
dec
sub
lds
shr
mov
ja
sub
or
sub
popf
and
out
pop
mov
rcll
sti
cmc
aaa
xor
inc
lret
fdivrl
push
mov
fdiv
cmc
pushf
or
je
outsl
pop
iret
ss
test
dec
call
clc
pop
rcrb
cmp
push
xor
fdivl
push
ljmp
xchg
xchg
jbe
jg
fiadds
mov
lock
dec
push
lea
and
pusha
or
int3
test
fwait
leave
mov
cmp
adc
adc
out
pop
cwtl
clc
push
add
jg
push
xchg
test
aam
out
je
outsl
jg
fmuls
add
adc
mov
adc
imul
aas
mov
xchg
outsb
xchg
aaa
cmc
dec
dec
lea
mov
in
push
imul
dec
dec
mov
jno
mov
mov
pop
insb
pop
dec
mov
adc
js
xchg
sbb
mov
cmp
dec
mov
cmp
lea
arpl
gs
dec
xor
int3
jecxz
out
xchg
xchg
mov
bound
mov
cmpsl
mov
stos
adc
or
adc
dec
xor
cmpsb
cwtl
stos
mov
jae
mov
pop
mov
dec
imul
xchg
jl
jmp
pop
and
xchg
das
mov
mov
int
hlt
inc
jmp
incl
sbb
xor
add
js
das
adc
add
neg
jae
cli
sub
lock
inc
repz
testl
xlat
imul
inc
mov
sti
mov
jg
shlb
jg
sub
in
out
popa
jo
ret
xor
loop
cld
lods
mull
iret
sbb
mov
movsb
mov
cs
in
dec
iret
sbb
push
ss
sahf
je
pushf
pop
sub
out
cmpsb
xor
fistps
ds
fidivl
adc
imul
sbb
cmp
or
mov
and
call
xchg
mov
and
enter
jle
pop
test
cli
test
das
nop
xor
cs
movl
jp
push
scas
enter
push
or
dec
out
and
cmp
inc
sbb
and
divl
icebp
test
je
xlat
fs
inc
in
arpl
loop
mov
sub
sbb
xor
inc
or
xlat
push
scas
enter
iret
addr16
pop
hlt
adc
jl
sub
bound
das
gs
aas
ficomps
push
lcall
stos
test
sub
dec
pop
mov
adc
les
sbb
add
orb
mov
xchg
orb
scas
sbb
fmul
adc
or
jo
adc
int
or
pop
stc
repz
lret
mov
xlat
fcomp
out
decl
loop,pn
enter
rcrl
stos
arpl
sub
icebp
mov
insl
fldcw
push
mov
dec
ss
jmp
jne
add
jb
mov
sbb
gs
movsb
sbb
int3
cmpsl
cmp
testb
adc
shlb
add
std
cltd
out
loop
sbb
pop
push
mov
add
in
filds
or
mov
add
push
in
sub
stos
mov
vcvttpd2dqy
inc
or
sbb
mov
ds
bound
adc
cmp
cmp
adc
push
sub
mov
dec
inc
push
je
popa
fistpll
mov
mov
jb
mov
mov
nop
cmpl
mov
xor
jecxz
imul
es
repnz
push
bnd
test
aad
icebp
stos
add
cmp
jg
cs
cltd
add
mov
aad
test
lods
mov
lods
cmpsb
pop
cltd
mov
out
std
popa
dec
xor
pop
daa
mov
xchg
mov
jp
mov
int
jp
shll
test
dec
and
pop
dec
aas
inc
adc
mov
imul
outsb
jno
add
sbb
test
add
test
outsl
xchg
out
cmp
leave
adc
notl
mov
mov
adc
jg
call
push
insb
add
dec
leave
imul
pop
cmpb
mov
aam
mov
sti
adc
xor
fstps
mov
je
jl
mov
lock
scas
in
push
xor
push
in
dec
in
in
movsb
cs
jo
dec
dec
icebp
mov
int
or
pop
mov
fcoml
mov
pusha
lahf
daa
push
mov
jecxz
push
imul
lcall
mov
mov
xchg
xchg
push
aas
mov
and
push
and
mov
sti
pop
xchg
or
dec
sbb
cmp
loope
out
sub
push
push
mov
sbb
push
push
outsl
mull
clc
xchg
or
lock
xor
aas
lret
jg
mov
loop
repz
xchg
and
mov
gs
pcmpgtb
popa
mov
push
aam
lods
les
sbb
cmc
aad
inc
cmpsb
or
outsl
jae
lret
push
loope
mov
add
mov
inc
arpl
pop
sbb
loop
or
lods
dec
add
jo
sbb
outsl
bound
fidivs
mov
sbb
add
sbb
and
jg
xchg
cwtl
rcll
mov
lods
mov
dec
aad
cmp
fcmovnu
mov
jle
mov
inc
mov
call
sti
inc
es
lret
icebp
dec
add
jne
dec
jl
adc
push
frstor
mov
add
dec
or
adc
and
out
aam
sti
hlt
jecxz
cmp
sub
js
mov
push
cmp
dec
sub
enter
inc
add
pushf
xor
test
pop
push
test
fwait
mov
mov
out
xchg
mov
jecxz
inc
xor
mov
xchg
sahf
adc
lcall
fsubp
cli
mov
mov
push
mov
jle
sub
pop
and
and
xor
pop
lods
icebp
das
push
dec
pusha
icebp
ljmp
dec
xchg
es
ret
gs
iret
push
sti
adc
sbb
scas
inc
pop
mov
out
add
into
mov
stos
jmp
movsb
mov
add
push
lcall
and
jle
mov
jo
mov
sbb
mov
push
lret
dec
call
js
shlb
gs
lcall
js
insb
xchg
fiaddl
rcr
in
xor
xchg
fisubl
subb
cmp
xchg
mov
adc
fists
push
xor
data16
in
stc
or
repz
jmp
test
jo
dec
sub
pop
xchg
xchg
int
cld
xchg
pop
aaa
xchg
pop
enter
hlt
dec
push
cltd
arpl
ja
sbb
rorl
pop
dec
jb
rcll
adc
sub
mov
cltd
cltd
sbb
pop
mov
lea
mov
or
sbb
es
aas
jmp
cmp
lods
int3
xchg
fnstcw
pop
adc
pusha
lds
lock
in
mov
mov
lahf
mov
mov
push
push
mov
xchg
fadds
stos
sub
ss
mov
in
or
cwtl
lret
and
jmp
dec
stos
jbe
push
cwtl
stos
jmp
outsl
ljmp
pop
inc
pop
dec
inc
push
and
adc
pop
out
lret
mov
or
outsb
out
jne
mov
ftst
inc
imul
subb
push
dec
cwtl
jecxz
jmp
sbb
cmpsb
add
adc
clc
xchg
xchg
mov
roll
bound
pop
push
cld
mov
jle
cmp
test
ja
inc
jnp
shlb
orl
jae
dec
jns
mov
mov
adc
rolb
loopne
js
cltd
in
inc
das
and
cmp
cmpsl
in
sub
mov
jo
test
push
push
and
out
pop
ret
xchg
cmp
scas
pop
push
incb
js
js
jne
jmp
add
dec
ss
xchg
pusha
je
popf
or
push
in
lret
fmuls
ss
scas
mov
stos
rclb
push
xchg
sbb
xor
jbe
or
rolb
fdivrl
jle
mov
leave
int
clc
xor
push
sub
cs
adc
scas
sbb
out
or
mov
in
les
push
int
outsb
push
lahf
mov
and
das
mov
cmp
pop
insl
mov
jge
pop
mov
pop
xchg
movsb
and
xor
insb
mov
in
addr16
arpl
hlt
pop
cmpsb
and
xchg
pop
sbb
or
addr16
sarl
aad
jge
scas
out
fwait
xlat
outsb
sbbl
inc
fiaddl
pop
cmpsl
xor
mov
mov
pop
sub
push
bound
or
outsb
push
mov
imul
xchg
pop
jp
and
ds
xor
mov
lock
lea
mov
jbe
mov
and
and
dec
aaa
sarb
jne
out
lcall
loope
jbe
sahf
ja
mov
inc
push
xor
jp
jb
adc
adc
mov
lods
out
sub
push
lahf
xchg
rcrb
imul
inc
jmp
push
sbb
cltd
leave
fwait
or
pop
pop
test
add
mov
sub
push
or
adc
pmaxub
in
mov
sbb
mov
lods
sub
in
pop
xchg
jle
inc
movsb
insb
ret
pop
ds
mov
and
jecxz
jb
pop
lds
mov
test
push
aas
mov
lcall
pop
push
fsubl
pushf
jae
or
in
idiv
inc
nop
popf
sarl
int3
fs
mov
stos
sub
push
lea
sub
cmp
imul
mov
mov
fs
mov
ret
push
test
test
mov
xor
or
or
mov
pop
push
cmp
inc
fdivrl
mov
mov
jecxz
rcll
ret
or
pop
add
push
push
das
xchg
mov
fsub
or
es
pop
cmp
sub
scas
outsl
xor
ret
das
movl
pop
mov
push
in
jb
xor
xchg
std
das
ljmp
out
mov
inc
inc
jle
shll
lret
mov
out
dec
cmc
xorl
push
in
test
les
sar
and
repz
rcll
aam
pop
rolb
cmp
adc
rolb
les
cmp
mov
gs
test
ficompl
bound
mov
std
xor
adc
jge
rcl
cmp
add
rcr
xor
lret
int3
and
iret
mov
mov
dec
fwait
mov
movsb
andl
add
adc
pop
iret
adc
push
xchg
ljmp
mov
jne
adc
cmp
adcl
push
and
jb
sbb
mov
sbb
sbb
xchg
sbb
xor
xchg
fnsetpm(287
mov
fiadds
imul
in
sbb
loop
pop
popa
rcll
pop
jp
xchg
aaa
or
cmp
sub
hlt
mov
loopne
push
inc
arpl
repnz
jecxz
popf
and
insb
test
lahf
add
rcl
lcall
dec
mov
inc
int
scas
movsb
inc
ja
sub
sbb
sarb
dec
push
in
imul
pop
daa
ljmp
cwtl
mov
adc
outsl
loopne
outsb
sub
lcall
and
or
sbb
push
loop
pop
divl
xchg
push
pop
or
movsb
pop
rolb
jp
jmp
push
gs
bound
sahf
mov
mov
std
cli
stos
mov
mov
out
mov
pop
ficompl
mov
sbb
pushl
stos
ljmp
andl
arpl
orb
cltd
in
js
push
xchg
fwait
pop
int
daa
mov
pop
jbe
int3
test
inc
inc
adc
les
imul
inc
shll
insb
mov
or
mov
jb
adc
sbb
sahf
mov
clc
pusha
jl
jae
add
std
rorb
lret
or
std
ljmp
xchg
imul
inc
cmpsb
pop
inc
adcl
fdivl
mov
mov
mov
outsl
pop
jb
stos
sbb
mov
cli
int3
lahf
push
xchg
rolb
cmpsl
aaa
jl
or
pop
je
jg
outsl
stos
pop
flds
insl
int3
mov
cmpsb
in
sub
or
cmpsl
add
dec
inc
push
pop
and
enter
nop
inc
dec
aas
sti
push
sbb
roll
mov
aaa
shll
jnp
out
call
or
js
pop
pop
leave
stos
cmp
sub
jne
cmpsb
cld
push
push
jb
bound
xchg
dec
inc
js
add
lock
stos
push
push
pop
cmp
ror
fidivs
fcomps
add
push
cmpsb
pop
leave
cmp
pop
pop
add
imul
ret
mov
dec
xor
or
fdivs
loop
cmp
testl
test
mov
adc
jo
mov
stos
sbb
xchg
push
test
sahf
lods
or
scas
mov
cmp
push
pop
pop
out
lock
ss
loope
ficompl
cmc
shlb
jo
and
mov
and
je
divb
xchg
cmpsb
popf
movsl
or
lret
cmpsb
repz
in
jo
push
pop
jge
cmpsl
loop
ds
call
rcrb
lock
jp
out
ja
mov
add
xor
inc
jle
xchg
xlat
enter
outsb
fs
dec
xor
rorl
pusha
out
mov
xchg
rcrl
inc
sub
and
cmc
in
cmc
ja
call
jp
and
into
or
or
mov
jno
dec
in
ror
adc
daa
out
in
push
add
test
popa
subb
arpl
rorb
or
cld
sub
nop
sub
xor
out
jp
pushf
xor
cmp
cs
js
aam
lock
mov
int
adc
dec
in
insl
mov
push
scas
jne
lcall
xchg
pop
mov
ret
shl
ja
out
out
aad
add
or
add
int
dec
jp
dec
mov
or
xchg
mov
jmp
and
jmp
inc
test
int3
outsb
rclb
ss
adc
leave
sbbl
inc
fimuls
adc
mov
arpl
push
xchg
jb
push
in
pop
lea
outsl
in
hlt
mov
xor
out
aas
xchg
and
mov
fbld
push
loopne
sbbb
xchg
push
jle
nop
pop
pusha
jecxz
jno
mov
adc
fnstcw
add
mov
out
add
daa
adc
ret
imul
jg
test
addr16
mov
xor
mov
fneni(8087
clc
mov
loop
or
clc
mov
movsb
add
mov
jo
sbb
ja
scas
add
inc
std
sub
jne
jnp
mov
icebp
outsb
in
xor
lods
and
xor
xlat
cli
cmp
inc
sbb
test
addr16
mov
outsb
mov
bound
sub
cmp
or
rorb
repz
gs
inc
scas
push
adc
es
jle
lods
xchg
pop
pop
dec
das
jmp
iret
out
mov
jmp
cs
movsl
es
ja
inc
imul
jo
rcr
mov
push
pop
push
scas
jae
sti
cmpsb
cli
pop
dec
aas
sub
mull
xchg
cltd
push
add
aaa
popa
mov
cmpl
add
cmpsl
jge
dec
arpl
add
mov
jo
je
clc
jmp
or
push
lret
sbb
push
scas
in
adc
pop
sbb
sbb
lea
xor
sub
lock
sbb
int3
pop
repz
adc
mov
icebp
or
call
xchg
jns
mov
lods
jae
mov
pop
mov
nop
jo
jge
inc
fcompl
mov
out
cmp
fmulp
lret
lods
fiadds
loop
jbe
mov
push
lods
add
inc
inc
daa
xchg
xor
in
xor
jb
in
rclb
dec
stos
jecxz
inc
push
in
cmpl
xchg
sub
push
subl
pop
mov
pop
cs
add
or
data16
mov
and
jo
insl
loop
jecxz
shrb
es
adcl
dec
xchg
pop
cmp
sbb
xlat
add
inc
dec
sti
mov
fldt
add
fisttps
bound
ja
or
outsl
lds
jle
js
mov
popf
add
imul
cmp
pop
or
mov
mov
push
inc
adc
aaa
stos
xchg
icebp
movsl
call
adc
sub
xlat
jge
daa
or
sub
cmp
clc
push
enter
mov
adc
mov
into
sbb
sub
scas
insl
mov
push
ja
fldt
adc
imull
enter
cmp
stos
adc
xlat
mov
inc
mov
mov
daa
push
inc
dec
inc
pop
push
ljmp
aaa
sti
push
adc
xchg
xchg
xchg
es
jge
jnp
dec
sub
dec
out
addr16
jnp
out
cmp
and
lds
movsl
and
std
pop
rorb
push
scas
fwait
je
mov
das
xchg
push
enter
aam
fcom
jle
roll
cltd
cmp
fidivl
mov
jmp
imul
adc
sar
fcmovnb
pop
add
dec
cmp
xchg
xor
loope
push
call
jnp
lcall
sar
mov
inc
mov
rcrl
mov
pop
adc
and
mov
dec
jo
sub
xor
ds
adc
in
mov
push
push
pusha
and
push
sbb
aaa
sbbb
xchg
xchg
push
cld
push
andb
rcl
fstpl
push
jmp
dec
insl
es
pop
in
lahf
rolb
add
sahf
sbb
imul
jle
sub
mov
rcl
xor
rclb
sbb
lret
cli
ficompl
decb
aas
gs
jae
mov
inc
ja
dec
mov
fwait
mov
mov
pop
mov
stos
dec
mov
or
pop
fcmovb
add
mov
lret
xlat
scas
push
pop
cmp
inc
pop
adc
cwtl
sub
mov
lret
inc
mov
cltd
cwtl
push
or
data16
cli
movsb
cmp
adc
cmp
clc
out
repz
add
pop
mov
ficoms
add
js
sahf
cmpsl
jb
test
call
mov
push
sub
pushf
lock
sbb
jmp
mov
pop
push
mov
mov
loopne
into
jecxz
push
jecxz
pop
data16
xor
jne
movsl
mov
out
imul
mov
lock
jecxz
xchg
repnz
mov
jle
sub
sahf
outsl
sub
pop
lret
sbb
and
hlt
push
jecxz
jns
jbe
push
inc
mov
inc
mov
mov
sub
pop
mov
clc
and
or
push
mov
xor
leave
into
inc
popf
xchg
sub
stc
cld
mov
mov
fldenv
push
dec
adc
jg
mov
xchg
sbb
and
pushf
jns
inc
jbe
sbb
out
stos
movsb
cmp
push
cmp
pop
sahf
shrl
popf
pop
xchg
lock
inc
sti
divl
dec
stos
mov
test
ds
imul
ret
push
and
jp
aam
mov
imul
or
fisubrl
jg
sbb
inc
leave
jo
mov
ret
addb
mov
nop
inc
out
call
and
cmp
dec
mov
mov
sub
jl
insb
mov
mov
fistps
js
icebp
mov
inc
icebp
pop
mov
and
js
movsl
mov
jle
dec
stos
gs
sub
cli
sbb
xchg
out
sbb
cmc
jo
imul
lcall
enter
dec
mov
dec
cs
scas
fstpl
out
push
mov
sbb
iret
or
mov
subl
push
cmc
movsb
xchg
es
int
mov
imul
out
pop
aam
daa
jmp
nop
aad
fsts
mov
mov
enter
andl
inc
ret
shlb
xor
gs
test
dec
dec
test
push
rolb
cmp
jp
pop
je
daa
jno
in
in
xchg
fstl
jbe
add
cld
pop
push
xlat
lret
lock
mov
lret
jae
mov
add
fistpll
cld
shrb
xchg
mov
mov
pop
jl
adc
dec
pop
jnp
pop
dec
imul
dec
stos
testl
xor
pop
movq
scas
in
lods
pop
adc
pop
std
rorb
inc
mov
leave
cmp
rclb
or
pop
and
xlat
sbb
loopne
dec
fldcw
add
mov
jns
pushf
cmc
dec
sub
mov
call
test
mov
and
jae
stc
xchg
mov
leave
repnz
or
xlat
out
call
dec
inc
sar
inc
pop
cltd
or
repz
jno
jg
mov
cmp
sbb
dec
dec
mov
jp
mov
scas
cld
cmp
cmp
cmp
jg
rcll
ficoml
imul
mov
int
test
mov
ljmp
jle
cmpb
inc
jbe
add
ss
imul
loop
into
in
sbb
sti
hlt
std
xchg
and
push
xchg
push
mov
or
sbb
idivl
push
insl
scas
mov
cmp
sbb
jo
testl
add
add
enter
sub
fisubrs
stos
jecxz
cwtl
or
adc
and
sbb
sti
push
push
fdivrl
cs
cli
xor
mov
mov
call
jmp
add
or
add
sbb
xor
xor
add
ljmp
adc
cmpb
dec
fneni(8087
loop
loop
mov
das
inc
lret
daa
xchg
push
adc
repnz
movsb
dec
aaa
xor
push
out
mov
cmpsl
jno
cli
add
jnp
xor
dec
add
insb
or
cmp
cmp
push
cwtl
pop
xchg
std
loop
xchg
inc
dec
and
test
loope
adcb
push
sub
iret
je
mov
scas
sbb
fwait
cmc
test
sbb
pop
outsl
ret
aas
or
aad
inc
inc
adc
ds
divb
push
or
testb
cmp
adc
sub
push
arpl
mov
pushf
test
xchg
and
test
ljmp
insb
shl
or
push
lods
xchg
das
pop
mov
in
in
sub
popa
dec
addr16
xorl
test
movsb
aas
or
mov
xchg
cmp
adc
xchg
jp
push
push
xor
xchg
fbstp
scas
jmp
pop
jg
adc
pop
js
cmp
pop
leave
neg
je
clc
dec
pop
jmp
mov
fnsave
cld
cmpsl
push
mov
or
jg
jge
in
shlb
ret
testl
jl
stc
jp
movl
cli
imul
pusha
sub
mov
movl
pop
mov
adc
push
in
xor
sub
pop
js
cmpsl
add
out
lods
inc
sbbb
jae
xchg
jno
aad
xchg
std
adc
cmpsl
sub
or
xor
inc
adc
add
jl
leave
push
pop
out
clc
sub
lods
sub
insl
mov
dec
mov
unpckhps
in
ret
sti
pop
js
inc
lcall
ret
scas
call
mov
repnz
pop
add
rcrl
sub
sub
pop
hlt
pop
js
mov
sub
test
mov
imul
sub
push
xchg
mov
jbe
mov
movsl
sbb
js
inc
sbb
pop
arpl
mov
add
fstps
scas
mull
in
fcom
mov
and
mov
xor
xchg
addr16
ja
mul
insb
sub
sbb
adc
movsb
or
lret
insb
sub
js
shll
jae
addr16
rcrl
loope
cmc
fstps
cs
popf
xorb
jle
in
sbb
andb
xor
mov
sub
aam
inc
jno
imul
pop
or
mov
dec
es
ficomps
dec
push
aam
cld
xchg
divl
test
mov
jg
roll
adc
jle
cli
pop
bound
and
dec
xorb
popf
add
cmp
js
sti
das
jnp
ja
cmpsl
aaa
mov
sub
jbe
mov
out
mov
cli
adc
add
sbb
push
dec
inc
adc
int
push
pop
and
dec
jns
or
xchg
lods
insl
pop
mov
pusha
push
inc
ret
test
inc
popa
icebp
push
fwait
pop
adc
jl
xchg
push
sub
mov
adc
xchg
mov
mov
stos
test
test
into
insb
or
push
xorb
jne
pusha
add
ljmp
lret
mov
pop
dec
lahf
jno
mov
mov
xchg
mov
lods
xor
out
lock
fldl
jg
xchg
mov
pushf
xchg
mov
push
fcomi
xor
pop
push
jns
xor
loope
mov
out
xchg
lret
xchg
sbb
pushf
fstpl
outsb
inc
fadds
vsqrtsd
fsubl
push
sbb
fldenv
sub
cs
leave
in
sbb
hlt
jl
inc
cmpl
shl
sub
pop
add
movsl
inc
mov
xchg
dec
enter
lret
xchg
sub
pusha
xchg
insl
lcall
xor
pop
in
cmpsb
cli
sub
enter
pop
or
outsl
scas
sub
pop
mov
mov
xchg
gs
sti
mov
jle
pushf
dec
pop
sti
js
inc
jno
leave
movsb
mov
fisttpl
lahf
lods
fwait
in
mov
cmp
mov
and
mov
mov
mov
push
mov
loopne
mov
shlb
push
mov
aas
dec
inc
dec
xchg
jnp
mov
pop
xchg
inc
js
call
leave
stos
xchg
jae
push
out
rorb
and
dec
push
loope
jmp
xchg
pop
sti
or
lock
imul
hlt
push
sbbl
emms
push
repnz
jno
xor
mov
push
mov
pop
pop
rol
xor
sbb
je
lret
jnp
sarl
jmp
addr16
push
xlat
into
sahf
test
jne
jle
cltd
push
test
xchg
fbld
pusha
pusha
sub
out
inc
push
sub
std
jecxz
sub
gs
loope
push
pop
dec
cwtl
out
data16
adc
enter
xchg
push
lods
sbb
mov
dec
int3
aaa
pop
or
fbld
daa
ret
ret
les
add
lock
mov
mov
push
outsb
or
push
ss
sbb
sub
dec
fpatan
addl
out
mov
scas
mov
mov
inc
or
aam
inc
jecxz
out
cwtl
or
arpl
mull
push
lods
test
fmull
jecxz
loop
stos
cmpsb
pop
scas
cmp
cmpsl
push
xor
jbe
jnp
lahf
dec
add
sahf
dec
outsb
in
out
js
xchg
mov
cmp
inc
add
sahf
aam
mulb
in
add
push
push
call
mov
rcll
in
mov
xchg
adc
lods
je
pop
dec
adc
push
aas
jnp
mov
mov
rep
add
cltd
dec
adc
pop
adc
fiaddl
lock
js
jne
or
mov
mov
xor
jo
jecxz
sbb
fldl
insl
mov
pop
sub
mov
cmpl
ret
loop
pop
cmp
daa
mov
sub
lods
cld
and
sahf
sahf
outsb
popa
sub
or
add
pop
cmp
out
jmp
pushf
inc
lahf
in
cmp
imul
dec
cmpsl
cmp
addr16
sahf
xchg
repnz
cmpsb
dec
mov
dec
test
mov
add
inc
test
andl
dec
fstl
stc
jnp
insl
mov
sbb
sbb
pop
push
call
nop
aam
jo
jle
dec
jg
ret
mov
popa
mov
mov
pop
inc
repnz
int3
jecxz
cmpsl
push
insl
pushaw
fcomps
shll
inc
mov
xchg
in
in
add
fs
jns
and
ret
dec
js
xor
cmc
nop
push
cmc
jne
xor
add
repz
sbb
mov
pop
sub
fisubl
sub
jno
inc
dec
push
pop
clc
push
lret
pop
add
mov
or
loopne
outsl
and
pop
fdivl
sbb
pushl
lods
jno
and
rolb
iret
cmpsl
push
push
stos
testl
lahf
xchg
dec
jno
xor
repnz
sbb
popf
cltd
orb
push
lahf
ret
gs
cltd
pop
call
add
dec
ret
cmpl
or
ret
ret
movsl
and
std
inc
into
leave
js
xor
movsb
jle
cli
into
mov
mov
pop
inc
adc
jecxz
loope
push
cwtl
adc
loop
jge
sbb
sti
inc
loopne
xor
xor
ret
pop
mov
in
pop
pop
sub
xor
and
jo
je
xchg
dec
sbb
rcll
push
mov
rolb
fwait
xchg
loop
pop
mov
jae
push
xchg
in
scas
lahf
sub
outsb
cmp
sbb
pusha
gs
cltd
adc
mov
jp
stc
ud2
stos
pushf
adc
cld
sbb
popa
rcll
repz
xor
jmp
adc
adc
ja
fsubrl
outsb
fistpll
pop
cmp
fisttps
imul
mov
rorl
mov
pop
jnp
js
cmp
add
das
cmp
xchg
xchg
sub
xchg
je
icebp
icebp
movsb
sbb
pop
fincstp
mov
xor
mov
jmp
pusha
in
movsb
fwait
dec
pushf
sub
push
dec
stos
ret
mov
pop
popa
mov
movsl
test
jnp
out
xor
pop
stc
adc
in
mov
push
or
insb
cmp
and
sbb
mov
daa
jg
jmp
cmpsb
add
push
inc
ss
sbb
mov
popf
out
lock
push
cltd
xchg
inc
leave
lods
cmp
lahf
push
xchg
lea
dec
mov
in
std
scas
lods
sbb
mov
andnps
push
movsb
jge
xor
fimuls
leave
jp
mov
sbb
dec
inc
mov
dec
jl
in
scas
cmp
sub
pop
sbb
mov
mov
mov
dec
fistpll
mov
add
cld
mov
sub
jp
dec
mov
aas
cld
mov
lret
out
mov
enter
js
inc
orl
rorl
and
test
pusha
shll
ds
add
data16
adc
xchg
sub
jecxz
push
out
fildl
adc
lods
add
sub
scas
js
xor
mov
sbb
insl
push
mov
mov
loop
fs
adc
js
int3
jne
xor
push
rolb
and
fst
arpl
loop
push
ficoml
sub
lea
cltd
jg
loop
popa
cld
sbb
out
sub
push
imul
flds
andnps
out
add
shr
std
or
sbb
dec
pop
loopne
aas
sbb
out
push
out
cmp
and
fs
enter
dec
mov
int
ret
sti
mov
ret
adc
enter
cmp
and
pop
jnp
aaa
sbb
or
lret
pop
push
test
movsl
jbe
test
adc
rorb
enter
andl
nop
lcall
lahf
pushf
inc
inc
lods
arpl
outsl
lods
jno
or
or
stos
bound
push
mov
jns
lock
test
test
jge
stc
xlat
dec
fcomi
flds
cs
sbb
jns
mov
sub
ds
lods
pop
mov
jae
jle
out
das
jo
pop
test
adcb
mov
jle
jle
loopne
mov
enter
xchg
and
lds
lods
imul
ret
jle
dec
scas
xchg
jae
daa
sub
clc
outsb
inc
stos
out
sub
and
dec
push
dec
mov
call
mov
sarb
jge
ss
cmpsb
jmp
out
cmpsl
filds
je
sub
push
sbb
rcll
ret
aaa
add
filds
aaa
cltd
dec
stos
es
lret
outsl
or
xchg
scas
ret
or
pop
add
and
shl
xor
cli
mov
mov
stc
pop
pop
jmp
fstl
pop
jge
lods
add
stc
cmp
add
sbb
xor
sub
xchg
mov
mov
movsl
cmc
rolb
mov
out
sub
xchg
repnz
sub
flds
jle
mov
and
idivb
mov
inc
jne
add
lahf
adc
idiv
outsb
pop
flds
insb
pop
ret
xor
stc
int
lret
push
or
fsubl
in
jo,pn
out
push
int
je
dec
or
pop
jmp
scas
enter
pop
sbb
jg
leave
out
mov
orl
je
enter
pushf
pop
adc
pop
inc
inc
imulb
fnstenv
jae
cli
out
sbb
sub
and
fs
pop
mov
pop
xchg
mov
adc
and
cmpsb
mov
sbb
and
push
mov
xchg
push
jecxz
arpl
fmulp
xchg
testl
div
push
flds
rcl
adc
push
xlat
and
je
cmpsb
xor
jb
cmp
push
jg
cmp
adc
arpl
pop
ret
push
rcrb
xorl
mov
mov
std
cmpsl
cvttps2pi
ja
sub
imul
lods
and
pop
lds
push
cmp
in
push
inc
emms
vpshuflw
pop
jle
insb
fs
sbb
ret
repnz
sbbl
and
mov
sub
adc
pop
imul
push
sti
mov
fdivrp
imul
rorb
mov
mov
adc
rclb
aas
out
hlt
fisubs
cmc
mov
xchg
out
fstl
sub
ds
xchg
xor
cmp
or
or
mov
jecxz
or
fistl
in
cmc
add
cld
fnstenv
lods
repnz
roll
mov
into
cmp
inc
push
and
jo
push
add
inc
imul
jmp
ljmp
cli
jne
ret
lret
inc
dec
pop
mul
pop
out
cs
imul
and
inc
sahf
call
lret
xchg
lea
cmpsl
xchg
mov
stc
add
jmp
stc
mov
int3
cmpsb
sbb
ret
xorl
sbb
bound
xchg
mov
scas
mov
mov
mov
test
push
cltd
ljmp
mov
mov
inc
sub
cs
mov
cmp
das
scas
lds
push
mulb
push
xchg
cwtl
movsb
mov
mov
clc
aaa
rcl
xor
fcmovnb
dec
rcrl
rorb
or
or
fadd
jmp
lods
pop
add
push
sub
push
xor
jnp
inc
cmp
jmp
jnp
popw
or
add
mul
jecxz
ja
gs
mov
xchg
push
outsb
pop
sbb
cs
inc
out
mov
adc
popa
stos
cltd
sub
jg
clc
fsubs
inc
loopne
leave
stos
xor
mov
mov
arpl
xor
cmpsl
push
inc
ja
and
pop
fistps
fsubp
imul
or
jno
jmp
cmp
into
enter
mov
xor
xchg
xchg
popa
aad
loope
aaa
int3
aaa
in
repnz
loop
cmp
mov
cmp
arpl
pop
jmp
xchg
dec
psubw
sbb
xchg
xchg
cmc
mov
imul
mov
cmp
mov
pop
and
outsl
jnp
pushf
lock
adc
or
cltd
xor
pop
shll
and
cmc
sub
sbb
mov
movsl
xchg
cmp
cltd
imul
dec
test
loopne
adc
dec
sub
mov
xlat
sub
mov
mov
ja
xor
lahf
dec
and
scas
nop
aaa
jg
pop
pop
lods
jne
scas
or
jecxz
inc
pop
sub
xchg
fimuls
jno
fstps
lcall
mov
jmp
leave
mov
dec
ficomps
lcall
cltd
icebp
ds
bnd
and
mov
fmulp
ds
dec
ret
sub
sub
in
ds
jge
test
jl
pop
int3
hlt
adc
mov
es
mov
sti
or
adc
mov
xchg
les
jnp
dec
or
and
gs
daa
xor
xor
or
mov
cmpsb
imul
and
pop
cmpsl
int
enter
cmc
add
jmp
and
push
cmp
xchg
shr
mov
add
fcomps
inc
mov
xor
fwait
mov
push
lea
jno
lods
and
pop
je
cmp
div
mov
jb
neg
mov
movsl
xchg
cmc
xor
adc
and
nop
fsubr
cmpsb
js
scas
leave
and
out
cs
in
fsubs
inc
int3
push
mov
push
ret
mov
and
push
rorb
frstor
push
addr16
cmp
mov
add
pushf
xor
or
and
shrb
rorl
loope
scas
adc
lods
aam
aas
sbb
mov
push
mov
rcrb
data16
jmp
pop
xchg
mov
jl
push
or
stc
sahf
insb
loopne
sbb
xor
push
push
fisubrl
xchg
jno
out
cmp
mov
sbb
pop
push
lret
fisttpll
push
mov
and
add
pop
push
add
nop
mov
lods
dec
test
jmp
lods
and
je
repnz
dec
cwtl
cmp
mov
scas
pop
std
out
ret
mov
push
addl
mov
xor
popa
imul
push
pushf
or
imul
data16
mov
outsb
les
add
xchg
mov
cmp
in
inc
insl
aad
test
adc
ds
jns
jnp
pop
adcl
jnp
ljmp
mov
mov
imul
aam
mov
xlat
lret
out
pop
mov
add
scas
je
mov
inc
sub
xchg
pushf
leave
ret
xor
dec
outsb
mov
addl
xor
add
bound
add
jne
inc
out
pop
es
rcrl
aaa
jo
pop
rcll
clc
sub
insl
into
cmp
mov
lods
xor
mov
and
cmpsb
mov
pop
imul
mov
mov
xchg
std
movsl
out
fnstcw
iret
pop
sub
add
scas
lds
stos
insb
xor
inc
xor
icebp
inc
repnz
xor
jle
or
dec
lcall
cmpsl
jbe
xor
orl
jns
ss
std
bound
test
mov
pop
dec
fcoml
addl
mov
xchg
jns
outsb
scas
jb
jle
clc
or
psrld
adc
paddb
mov
mov
in
pop
rcrb
ljmp
movb
in
pop
movsl
popa
iret
mov
xor
js
andl
jmp
movsb
sub
insl
xchg
icebp
adc
push
xor
sbb
inc
addl
out
ret
xchg
jns
sub
cltd
mov
cmp
mov
repz
pop
pop
in
sti
mov
iret
and
stos
rorl
test
push
in
mov
lods
xor
pop
cmp
test
dec
xchg
add
lret
repnz
cmc
cld
push
stos
pop
jbe
filds
dec
mov
stos
sub
sbb
mov
test
cmp
arpl
jle
outsb
jmp
mov
jg
cmpsl
cmp
jbe
dec
add
es
nop
mov
or
fbld
jmp
rolb
pop
orb
repnz
inc
mov
sub
add
sub
xlat
cmp
enter
leave
dec
bound
push
push
test
and
lds
int3
or
mov
fidivrl
rcll
mov
lods
sub
mov
gs
sarl
xor
mov
dec
adc
rol
cmpsl
lcall
dec
loopne
mov
mov
dec
and
mov
jo
cmp
lcall
das
xor
lea
push
nop
sbb
add
cwtl
pop
xchg
xlat
mov
and
xlat
push
push
std
push
iret
repz
dec
xchg
pop
mov
dec
mov
out
and
and
mov
mov
call
movsl
sbb
sahf
jg
stos
negb
mov
xor
incb
stos
cmp
push
push
movsb
push
push
inc
filds
mov
inc
adc
push
push
sub
push
adc
testb
and
xor
sbb
xor
add
sbb
and
js
movsb
lea
loop
lods
xchg
inc
fstp
loopne
fwait
and
stos
addl
and
outsb
in
jmp
or
lock
dec
sbb
or
or
icebp
mov
cmp
adc
dec
adc
mov
xor
fisttpl
sub
fstp
and
jno
or
scas
scas
out
pop
movsl
fistpll
in
dec
adc
ret
inc
and
ret
xor
fildll
ss
and
mov
inc
sub
cmp
jae
inc
mov
lahf
and
xor
add
pop
cmc
xchg
mov
fdivr
sbb
sbb
xor
and
in
jnp
pop
imul
push
mov
hlt
data16
shl
add
repnz
sub
stc
js
daa
popf
cmp
adc
xchg
cwtl
push
dec
push
cmpsb
rcrb
sti
inc
add
icebp
mov
mov
mov
sbb
xchg
or
rcrl
dec
mov
adc
in
mov
and
jo
pushf
pop
fidivl
push
inc
cld
mov
cmp
mov
test
jno
nop
fidivrl
lahf
push
sbb
inc
xor
pop
inc
sbb
mov
mov
sbb
mov
pop
cld
inc
fisttpl
jno
or
loop
push
inc
imul
std
and
pop
fs
mov
push
push
mov
dec
scas
shrb
xorb
cmp
xchg
xchg
idiv
bound
xor
loope
fcompl
xor
push
in
mov
mov
dec
test
xor
pushf
fistps
mov
in
jg
fildll
sbb
mov
enter
sbb
test
stos
lock
roll
std
mov
aas
test
fsubl
lock
cmpsl
out
mov
push
rcll
or
sbb
es
shl
mov
into
ja
sub
jmp
sbb
lock
jmp
daa
jecxz
mov
fldcw
add
ja
std
data16
push
mov
and
inc
addr16
nop
xor
mov
stos
jge
mov
push
inc
mov
in
push
test
gs
add
pop
lret
mov
jg
cmp
jmp
and
inc
lahf
ret
enter
mov
cmp
cmp
jge
and
pop
lahf
leave
loope
aaa
repnz
nop
dec
daa
test
sub
inc
mov
aaa
pop
shll
adc
cmp
sub
mov
in
pusha
lods
sub
stos
les
inc
adc
movsb
and
ds
aad
cmp
out
gs
aas
pop
incl
xor
cwtl
lret
inc
add
jmp
dec
hlt
test
mov
sti
mov
cmpb
add
fdivs
iret
mov
jne
and
jo
push
jbe
push
push
mov
xor
bound
inc
roll
jp
pop
add
movsl
add
push
nop
sbb
out
inc
jmp
pop
leave
insb
add
icebp
jmp
sbb
sub
daa
inc
push
xchg
fs
sarl
stos
mov
and
nop
sbb
test
repnz
icebp
cmp
mov
in
insl
lds
dec
xchg
pop
movsb
sub
push
repnz
out
push
roll
in
iret
pop
lock
cli
mov
sbb
andl
push
add
inc
sbb
test
push
rcl
sub
mov
faddl
xchg
add
js
pop
outsb
in
xchg
add
push
mov
fwait
clc
xchg
shrd
aaa
out
jmp
xchg
or
jecxz
adc
int
pop
mull
fimuls
rorl
pop
outsb
dec
loop
popa
fisttpll
xor
inc
enter
mov
push
int3
or
testb
dec
movsl
jb
in
push
int
mov
cmp
ja
xchg
jae
imul
inc
cmc
fldl
mov
sbb
bound
mov
mov
out
and
sub
fildl
imul
popa
sub
aas
mov
adc
mov
xchg
adc
inc
rolb
in
inc
jbe
mov
cwtl
loopne
test
push
pop
jae
cmp
xchg
or
in
lods
xchg
mov
jns
negl
pop
std
lods
dec
rcrb
addr16
sbb
out
jns
mov
cs
lock
call
add
test
movsl
imul
loop
andb
and
xchg
rorb
dec
cmpb
and
sub
and
or
insb
iret
xchg
bound
xchg
call
adc
scas
push
cs
add
sbb
in
xlat
push
cmc
lods
mov
inc
out
lock
jae
sbb
stos
xor
aas
pusha
scas
mov
push
adc
add
lods
ret
inc
hlt
sahf
sbb
mov
xor
je
mov
movsb
je
dec
add
rolb
sbb
inc
lcall
mov
inc
lea
in
ja
sub
sbb
xchg
addb
xchg
cmp
fucom
addr16
fstps
push
aam
iret
rcl
pop
dec
push
jnp,pt
les
dec
pop
inc
out
xor
xor
push
pop
imul
scas
mov
xor
dec
hlt
and
jne
orl
jns
fiadds
jp
cmp
mov
jmp
pop
jg
push
jne
int
aas
xchg
push
stc
test
mov
js
inc
enter
mov
mov
idivb
dec
pop
mulb
les
popf
sub
or
push
inc
fwait
sbb
sarb
ret
stc
pop
push
nop
inc
jle
mov
cmp
iret
xchg
icebp
into
and
orl
mov
cwtl
adc
mov
mov
dec
fisubs
pop
mov
sub
cmpsl
fldcw
dec
ljmp
and
imul
dec
insl
icebp
pop
push
stos
push
push
mov
xor
cld
call
xor
mov
test
aas
mov
imul
pop
arpl
push
hlt
gs
dec
ljmp
cwtl
push
pop
push
xchg
mov
in
es
cmp
dec
or
outsb
xchg
or
mov
test
jno
pop
popf
fldt
adc
pop
iret
nop
pop
std
push
mov
js
fnstsw
jmp
add
ja
outsl
sub
jnp
adc
mov
lahf
cmp
inc
sub
mov
or
filds
xchg
in
lea
rol
fcmovnbe
sub
jge
push
test
lock
sub
pop
dec
std
mov
push
xorl
jae
push
add
test
xchg
fildll
mov
adc
push
sbb
inc
outsl
mov
rcrl
test
add
xor
arpl
stos
dec
iret
mov
aas
sub
enter
fcmovnbe
enter
imul
jnp
ror
in
xchg
aam
test
je
mov
jge
into
lahf
push
cltd
pop
adc
and
ljmp
in
pop
flds
jae
pop
or
sub
loopne
and
nop
jno
ljmp
push
iret
inc
and
testl
imul
movsb
mov
xlat
ret
xchg
cmp
sbb
cmpsl
mov
push
jno
lds
pop
sub
lahf
scas
xor
rclb
pop
push
mov
adc
outsb
mov
imul
nop
inc
mov
mov
pop
jb
mov
sub
in
adc
mov
pop
xor
cmp
loopne
inc
jl
inc
pop
push
mov
aaa
scas
incb
push
movsb
pop
ja
and
mov
xor
sti
mov
dec
jmp
and
ljmp
push
xchg
jl
cli
mov
call
scas
xor
cmc
add
pop
and
jmp
ja
mov
ja
ja
in
jg
mov
aad
sub
xchg
movl
push
mov
sbb
inc
dec
insl
inc
ss
xchg
sbb
sbb
loopne
cltd
push
cmp
cmpsb
daa
loopne
cld
push
rorl
xchg
negl
js
das
das
adc
xor
jle
jnp
ficoml
or
fnstenv
jle
insl
subps
xchg
insb
sbb
dec
or
leave
inc
outsl
xchg
sbb
jecxz
sub
jb
pop
bound
and
cmp
lret
mov
pop
push
xchg
testl
adc
jp
les
fsubs
or
loopne
mov
cld
sub
cmp
lea
jo
add
dec
out
sub
stc
test
aaa
jp
out
push
adcb
leave
in
ret
push
sbb
js
mov
and
cwtl
test
sbb
and
sub
insl
daa
and
pop
stc
fs
pop
addr16
imul
repnz
cmp
fs
call
loope
fiadds
mov
hlt
std
cs
mov
push
negl
sbb
xor
ret
iret
mov
fcoms
shr
outsl
jbe
test
inc
in
mov
test
push
js
lahf
or
pop
pop
bound
cs
pop
loop
add
jne
stos
movups
rep
xchg
lret
sub
sub
push
pmaxub
inc
in
cmp
inc
pop
rolb
cs
push
inc
mov
mov
sbb
lahf
pusha
pop
je
sarb
dec
js
fnsave
lret
test
mov
andb
rcrb
lock
inc
xorl
push
das
mov
or
sarl
stos
hlt
mov
mov
sahf
mov
dec
dec
test
adc
inc
mov
push
mov
and
movsl
add
cmc
jnp
xchg
mov
sahf
cwtl
xor
cltd
out
pop
xor
shlb
pop
nop
and
mov
mov
frstors
mov
aam
mov
push
mov
scas
jge
add
or
pushl
test
ja
dec
pop
and
iret
sti
fs
push
sub
xor
jle
out
outsl
test
movsb
push
and
mov
mov
je
mov
pushf
testb
pop
pop
dec
xchg
cmp
mov
inc
test
cld
mov
int3
fldt
cltd
pushf
sbb
lea
xor
sbb
test
shlb
dec
adc
loop
push
jle
inc
shll
mov
cmpsb
out
add
sub
or
hlt
push
inc
shl
push
pop
cmpsb
ss
out
inc
aad
push
and
rcll
mov
mov
or
adc
jp
jnp
aaa
mov
xchg
or
int3
cmp
sarb
jno
xchg
enter
fidivs
daa
pop
add
sub
mov
inc
xchg
or
jbe
popf
xchg
mov
adcl
int
leave
rcr
push
mov
ds
cmp
jns
adc
xor
or
fmull
jne
nop
jno
aas
mov
sbb
arpl
jg
mov
gs
test
pusha
into
or
pop
fstl
ja
mov
testb
jg
add
pop
xor
je
or
inc
insl
push
push
and
push
and
and
in
pop
push
xchg
jbe
dec
push
rorb
into
into
cmp
xor
mov
cmp
inc
sub
xlat
mov
loope
xor
lret
arpl
dec
int
inc
pop
dec
sbb
sbb
adc
cmc
mov
lds
xchg
jns
xchg
repz
lea
repz
dec
fcomps
mov
in
mov
pusha
dec
xor
fsub
sub
fimuls
mov
test
pop
or
dec
mov
jno
rcrl
scas
mov
aam
sub
sub
cmpsl
jae
lahf
cmc
std
mov
adc
cwtl
aad
lock
mov
and
jbe
lret
stos
jns
les
mov
add
cmp
mov
mov
mov
inc
dec
test
mov
add
or
cmp
out
jp
and
and
out
pop
lds
movsl
test
lods
xchg
jno
mov
xchg
bound
mov
mov
or
xchg
inc
push
aas
test
adc
js
movsb
sub
jmp
aaa
xchg
xor
lods
pop
cmp
pop
andl
adc
addr16
xchg
ljmp
add
push
lret
adc
xor
mov
gs
jle
dec
testl
ljmp
fwait
lcall
add
clc
inc
mov
push
scas
pushf
xchg
nop
fwait
int3
lds
push
and
lods
pushf
sub
in
xchg
push
jge
imul
scas
inc
cmp
sbb
insb
aas
jecxz
inc
xor
pop
xchg
sbbl
push
fcoms
sbb
int3
fs
jecxz
das
fcmove
dec
add
jno
mov
iret
and
rorl
add
andb
pushf
push
insl
push
or
je
lret
loopne
mov
clc
xor
iret
dec
mov
js
clc
mov
xchg
decb
sub
adc
imul
iret
mov
ds
rcrb
mov
in
out
je
cmp
lods
jg
lahf
mov
ds
cmp
cli
inc
loop
lea
jecxz
pop
leave
pop
mov
and
pop
das
jmp
or
std
mov
mov
push
sub
clc
and
icebp
ja
pusha
sbb
pop
push
jb
rol
dec
xchg
testb
mov
int3
cli
adc
and
mov
push
mov
arpl
es
inc
mov
fildll
loope
dec
push
fdivp
jne
dec
inc
test
mov
mov
pop
stos
cmp
mov
movsl
or
jno
movsl
mov
dec
les
test
and
mov
mov
in
jno
rcrl
in
cmpsl
push
ljmp
repnz
pop
aad
add
jnp
loop
in
lock
popfw
fwait
cmp
int
imul
jne
xchg
inc
push
cld
inc
popa
xchg
mov
ss
sti
loop
repnz
mov
xchg
mov
fnsave
fsubs
sbb
pop
int3
jbe
cmp
dec
movsl
cli
mov
cmp
addb
mov
lcall
rcrb
mov
cmpsb
cmpsb
push
dec
adc
in
iret
fnstenv
dec
notb
push
gs
push
cmc
mov
jmp
adc
adc
jnp
sbb
rcll
add
xchg
shll
std
outsb
cs
into
out
nop
nop
fldl
xchg
add
mov
repz
inc
pop
popa
mov
scas
int3
inc
fistpl
pop
loope
adc
pop
adc
pusha
mov
das
loope
movhps
mov
cmp
push
imul
push
lcall
hlt
xor
data16
jge
dec
in
mov
scas
movsb
or
jb
fs
nop
ret
in
and
pop
lods
jle
mov
movsl
sti
repz
xor
pusha
addb
or
rcrb
xchg
loopne
call
sub
pop
std
and
stos
cltd
inc
push
jb
lahf
leave
inc
xchg
sub
test
or
test
lock
ffreep
fmuls
mov
outsb
repnz
dec
sti
sub
dec
insl
mov
push
test
sub
lret
stc
aaa
iret
xchg
lret
popf
test
inc
scas
push
dec
bound
lock
and
pop
xor
shrl
add
sub
xchg
rcrb
pop
fdivrl
shlb
icebp
mov
mov
mov
mov
push
or
and
and
aaa
jnp
fbld
out
xchg
mov
push
addb
lcall
mov
mov
adc
or
sbb
add
das
lods
xchg
gs
pop
insl
xor
imul
jb
jae
hlt
adc
push
cld
pushf
in
xlat
xchg
stos
dec
cmc
xchg
loope
and
sbb
outsl
bound
popf
andb
fsubr
xchg
in
sub
shrl
jl
xlat
in
pop
xchg
adc
pop
aad
mov
fsubrl
ss
mov
pop
cmp
sarb
cwtl
shl
nop
xchg
cld
mov
push
imul
push
test
pop
jno
ja
mov
xor
mov
arpl
shll
push
enter
out
add
push
ds
or
push
xorl
cmc
popa
push
cmp
int
outsl
ja
fidivl
or
dec
cs
jo
add
int3
psrad
ret
cmp
call
out
mov
and
mov
pusha
jle
int3
test
lret
xlat
dec
out
mov
ret
int3
sarl
lods
cmp
daa
sub
stos
js
cmp
sbbb
js
cli
outsl
insl
scas
stc
mov
mov
mov
or
ja
fidivrl
ret
jns
xchg
cmp
dec
mov
shll
sar
dec
inc
aad
mov
adcl
fs
arpl
pop
jbe
dec
enter
inc
imul
ss
fiadds
xor
insl
sub
in
outsb
cmp
sub
fs
pop
loope
mov
mov
pop
jle
cmp
aas
mov
jo
cmp
lahf
mov
divl
fstps
fcompl
das
aaa
repz
je
outsb
ja
adcl
aas
cwtl
pop
leave
loope
pop
loop
popf
and
out
ret
add
pop
sti
daa
mov
add
push
fmuls
sub
mov
imul
jbe
mov
std
mov
rcll
jbe
jle
push
add
inc
shll
fstl
cmp
cwtl
scas
pop
int
fnsave
or
loopne
push
dec
sbb
mov
or
lcall
push
ja
popa
gs
sub
loope
add
jecxz
sbb
jne
popf
adc
sub
fs
cmp
pop
aaa
lret
cmp
cld
jno
mov
cwtl
pop
repz
aaa
mov
add
scas
sub
jmp
jmp
jne
hlt
xchg
sbb
xchg
jp
es
fisttpl
sub
mov
cli
addb
cmc
jns
or
cmp
negl
xchg
fcoms
repz
dec
add
cmp
adc
aam
gs
js
push
inc
cmc
push
pop
aas
iret
or
sub
push
aad
das
fsubrl
add
mov
pop
xchg
or
sbb
and
cmp
dec
sub
cmp
shrb
orl
xor
cmp
add
jae
pop
andb
inc
pop
mov
inc
xchg
push
in
cmp
mov
mov
mov
out
dec
outsl
es
imul
aaa
loope
pusha
int3
pop
in
and
int3
iret
aas
mov
lret
push
mov
pushf
imul
in
pop
sti
pop
lods
mov
mov
sbb
sub
out
and
cvttps2pi
ja
xlat
imul
js
mov
adc
outsb
dec
inc
arpl
sbb
lret
dec
adc
pop
ja
popf
dec
repnz
push
cli
dec
push
js
frstor
iret
fbld
fiaddl
jp
mov
pop
ja
and
pushf
jae
fnstenv
sti
cmovnp
hlt
xor
pop
cld
sahf
popa
xchg
cmp
stos
fcmovbe
sub
sub
inc
sbb
rclb
and
xor
xchg
push
ret
ret
push
aas
lret
lea
push
cmc
arpl
xor
popa
scas
mov
js
push
inc
xchg
inc
adc
mov
pop
mov
push
iret
test
lret
not
lds
adc
dec
fadds
push
add
mov
xorl
hlt
push
mov
lret
lahf
sbb
lds
or
pop
jns
xor
dec
or
pop
jmp
mov
jnp
jl
cmp
mov
popf
add
cmp
adc
push
das
add
rorb
rol
pop
push
jmp
iret
mov
jnp
pop
push
mov
test
push
mull
sar
and
das
cmp
sub
jns
ret
cli
clc
lock
sub
add
shrl
lahf
enter
scas
mov
sbb
mov
xor
int
mov
jo
pop
stc
mov
loop
fisttpll
push
iret
hlt
adc
or
xchg
and
call
jp
jne
push
pop
xor
mov
mov
push
leave
sbb
orb
out
mov
mov
jg
jmp
push
shlb
sbb
push
fildl
icebp
inc
or
pop
aad
xor
icebp
orb
outsl
adc
adc
sub
xor
insl
and
push
push
or
shr
adc
mov
rcrb
cmc
push
pusha
cmc
jp
inc
adc
lods
out
loopne
sub
stos
pushf
cmp
fmuls
jae
bound
leave
fs
xchg
push
into
or
cltd
mov
and
iret
dec
mov
adc
sub
jns
mov
lret
cmp
push
mov
in
fnstsw
pop
or
cmp
add
sub
fsubrp
loope
add
mov
jge
rcll
mov
jmp
sbb
push
jg
inc
jg
into
adc
in
fidivs
test
or
ss
push
imul
movl
cmp
mov
xchg
hlt
xchg
push
xor
cltd
sub
sbb
aas
push
sub
lcall
push
aad
push
in
ret
test
je
sub
mov
mov
addl
sub
unpcklps
mov
fs
cli
xchg
pop
or
jge
pop
xchg
sub
mov
adc
mov
and
push
lods
pop
mov
rclb
fcompl
fyl2x
mov
sub
pop
inc
or
xor
jge
lock
sahf
xchg
leave
add
inc
in
cmp
xor
mov
inc
sarl
cmp
mov
mov
out
jbe
lea
xchg
cmp
femms
mov
pop
pop
inc
call
and
cmp
inc
push
xchg
pop
jmp
adc
xlat
dec
cmc
sub
and
pop
jbe
lret
and
mov
test
cmp
pop
les
inc
inc
ret
cs
ds
in
jbe
sar
stos
sub
cmp
jns
push
movsl
lods
xor
mov
jae
or
mov
fnstsw
dec
repnz
push
sahf
mov
testb
test
push
mov
movsb
mov
xchg
in
cmpb
jmp
sub
mov
xorb
push
mov
pushf
push
lea
or
in
cmpsl
mov
cmpl
push
jne
mov
push
out
test
pop
or
sbb
in
jg
imul
loopne,pt
sbb
mov
gs
adc
sti
cmp
jmp
scas
jmp
outsb
fdivl
mov
pop
in
sahf
scas
lea
test
mov
popf
jle
and
xor
xor
dec
or
rorb
shr
sbb
adc
adc
inc
addps
dec
into
fildl
cli
daa
stos
imul
push
shl
test
xor
and
cmp
sti
xor
and
cmp
mov
mov
pop
jnp
and
mov
enter
push
dec
xchg
test
pop
jg
enter
mov
push
and
cltd
icebp
test
and
inc
ds
xchg
pop
and
jne
hlt
pop
mov
pop
insb
cmp
mov
lds
sti
dec
sub
cmpsl
xor
mov
cmp
jae
inc
idivl
cmpb
popf
icebp
sub
out
popf
cmp
lds
or
xchg
in
aaa
jne
pop
mov
cmc
sarl
stos
dec
and
xor
test
push
mov
mov
das
xor
dec
dec
jmp
xor
push
cmp
mov
adc
or
add
xchg
mov
add
xchg
rcl
mov
fsts
adc
daa
jbe
and
loopne
lds
push
fs
stos
mov
mov
aaa
jl
scas
jecxz
out
push
repnz
push
insb
cltd
mov
jp
xchg
stos
hlt
mov
aas
xor
int
push
mov
fistpl
pop
xchg
xlat
les
fcmovne
scas
iret
push
mov
cmp
sbb
or
into
push
dec
jae
mov
pop
or
int3
xchg
adc
mulb
pop
mov
aad
jno
pop
or
push
aaa
cli
sarb
inc
xchg
sbb
jg
mov
xor
pushl
outsl
lods
adc
scas
loopne
dec
mov
mov
xchg
rclb
inc
popa
mov
xchg
pop
into
cmp
push
inc
popa
push
or
mov
outsb
push
dec
xor
push
ret
jo
cwtl
mov
cmp
sbb
sbb
pop
add
in
or
ljmp
int
push
les
mov
cwtl
xchg
cmp
addb
iret
push
jle
mov
jbe
push
push
push
pop
xchg
movl
xlat
and
orl
les
movsl
insb
jno
test
cltd
mov
pusha
push
test
pop
clc
in
fisubs
ljmp
jae
cltd
enter
fwait
outsb
mov
jae
pop
int
mov
icebp
rorl
out
jo
xor
push
mov
cmpsl
mov
test
sub
pop
ss
lock
jae
movsl
stc
dec
inc
xor
xor
or
jno
cmp
sub
sub
push
xchg
push
scas
and
add
push
pushf
sti
push
enter
pop
pop
mov
lods
cmp
mov
mov
dec
or
icebp
pop
jl
push
imul
pop
xchg
rcll
out
xor
in
and
inc
into
fwait
xlat
mov
mov
push
dec
ds
and
lds
pop
inc
dec
and
mov
icebp
fisttps
dec
xor
cmp
pusha
sub
adc
stos
add
das
mov
std
mov
not
fcoms
repnz
test
pop
stc
add
mov
insb
cmp
jb
cltd
inc
adc
xor
repz
mov
inc
mov
lret
loope
in
adc
jb
ss
mov
cmp
jns
icebp
in
out
add
cld
pusha
push
ljmp
push
mov
shl
adc
mov
jmp
lods
int3
xchg
jns
xor
imul
insl
sub
xor
inc
data16
call
jne
lret
cmp
push
mov
test
testb
stos
mov
fldl
xlat
jnp
sub
and
ljmp
fcmovnb
mov
jno
add
xchg
sub
dec
inc
iret
inc
lret
xor
test
cmc
call
and
sbb
sub
sti
or
je
or
cmp
push
jo
add
lahf
clc
or
ret
insl
gs
shlb
pop
inc
mov
mov
jle
jnp
std
aad
mov
cmp
out
pop
jp
push
popa
fstl
mov
sbb
mov
punpckldq
stc
roll
dec
mov
jne
add
repz
mov
cli
inc
push
fimull
add
push
jmp
cmp
outsl
dec
arpl
repz
inc
fsubrp
or
adc
pop
jae
cltd
or
pop
sub
cmpsl
sub
add
push
mov
les
pop
out
inc
stos
pop
xchg
push
pop
mov
fs
mov
in
sarb
mov
lret
rcr
sub
jg
aam
orl
outsb
fisttpll
xor
pop
sbb
add
test
sub
mov
cmpsb
mov
dec
sbb
data16
cwtl
test
sbb
js
mov
xchg
aam
sbb
and
mov
ja
dec
aaa
aad
dec
or
jle
pop
icebp
loope
jae
movsb
arpl
sti
push
mov
jge
je
dec
mov
js
jecxz
xchg
daa
jae
test
cmp
and
into
fisttpl
and
sahf
movsb
loop
pop
fadds
adc
mov
mov
mov
inc
divb
test
sbb
cmp
mov
in
test
out
add
je
xchg
lcall
outsl
jecxz
push
xchg
inc
xorb
pop
add
xlat
out
pop
aam
lcall
push
mov
clc
iret
mov
and
mov
fs
cmp
mov
or
loopne
iret
into
les
or
dec
std
ljmp
mull
in
imull
cmpsb
cmpsl
sub
lods
dec
pop
or
jb
out
mov
cwtl
dec
mov
pop
insb
or
inc
sub
movsl
mov
test
nop
mov
xchg
xor
push
shrb
adc
mov
imul
mov
jg
aaa
inc
mov
pop
xor
mov
mov
sbb
mov
lcall
scas
and
and
add
cwtd
jno
fisubl
and
int
push
push
cltd
sub
sbb
leave
push
add
inc
std
test
nop
scas
shlb
lcall
lcall
mov
gs
imul
mov
shl
ficoml
outsl
aaa
cs
and
adcb
mov
test
jne
cld
xchg
xor
lea
in
and
push
repnz
pop
das
fld
xor
mov
ret
pop
addr16
or
lret
repz
roll
dec
cwtl
mov
mov
dec
push
push
sbb
fsubrl
aaa
xchg
test
decl
mov
adc
pop
push
jg
cmpsb
fstpl
pop
xchg
cmp
inc
in
shrb
adc
jb
iret
in
mov
pushf
push
inc
xchg
inc
xchg
test
mov
cld
arpl
pop
cmpsb
sbb
in
add
enter
and
or
testb
lods
xor
sub
out
in
push
lcall
scas
cmp
pop
sbb
loope
lret
jns
ret
sub
leave
cmc
arpl
lret
inc
xor
and
pop
arpl
stos
sub
inc
mov
call
lret
mov
xor
mov
outsl
pop
inc
lahf
inc
addl
mov
push
and
in
shlb
fsubrl
and
sub
or
sbb
ret
aam
sbb
imul
xchg
push
mov
pushf
sahf
aam
rorl
pop
fsubrs
fmull
out
out
sub
leave
popl
xchg
jle
out
or
jmp
test
insb
dec
ret
sbb
pop
push
daa
pop
jle
out
adc
jle
int
inc
xchg
xchg
jbe
call
pop
neg
fimuls
inc
dec
lods
sub
std
ljmp
xor
cltd
shrb
lea
pop
ficoml
add
insl
fmuls
pop
xchg
pushf
mov
nop
xor
adc
dec
aad
inc
xor
test
push
pop
lcall
xor
cli
xor
sti
gs
inc
add
rclb
ljmp
mov
jbe
mov
lds
sub
jge
fsubrp
add
push
push
sub
inc
mov
push
mov
push
lock
out
add
pop
xor
bound
fdiv
aad
xchg
fdivrs
mov
pop
add
out
add
fisubrs
push
stc
sub
daa
loop
mov
add
jnp
xchg
jae
pop
mov
jb
subl
pop
cmpsb
inc
sub
stc
pushf
aam
inc
mov
add
add
imull
mov
or
rclb
cmp
aaa
mov
xchg
and
mov
sbb
push
sub
xchg
mov
loop
mov
int
push
push
dec
mov
xlat
mov
dec
jg
push
je
out
mov
mov
mov
xchg
add
popf
jns
pop
repnz
sbb
icebp
icebp
add
jecxz
mov
movb
push
xchg
push
inc
leave
pop
popa
push
or
push
or
iret
fnstenv
push
aad
pusha
insl
and
test
or
pop
or
cmp
adc
lahf
in
xor
les
repnz
cmpsb
xor
dec
nop
mov
and
pop
mov
pop
push
dec
xchg
push
xchg
jne
push
cmpsb
xchg
push
mov
mov
cmp
dec
ret
movsb
xlat
lret
jno
mov
popa
pop
mov
and
dec
mov
repz
push
add
add
stos
mov
mov
fwait
push
sarb
loopne
xchg
repnz
das
rorw
je
sbb
mov
fsubrl
aas
mov
popf
fistpl
fidivl
xchg
loopne
outsl
invlpg
in
push
lret
sub
mov
lea
xor
lds
mov
cmp
mov
jg
add
xor
inc
push
cli
or
mov
cmp
push
loop
and
mov
in
xor
dec
cmpsb
inc
out
addr16
lea
cwtl
shl
imul
lahf
cli
cmpsb
ret
mov
cmpsb
scas
jae
mov
push
cmp
dec
fwait
arpl
in
ficoml
mov
test
jns
pop
xor
loopne
adc
jo
xchg
repz
in
lods
hlt
pop
cs
out
hlt
outsl
mulb
add
out
sahf
mov
inc
outsl
xor
cmp
cmp
mov
jle
icebp
jmp
xchg
mov
outsb
add
es
cmc
int
inc
pop
out
cli
in
adc
lret
pusha
push
int3
pop
loop
mov
stos
mov
push
cmp
ret
mov
test
scas
and
arpl
cmp
ljmp
push
into
popa
shll
lds
xchg
or
stc
add
aad
or
add
pop
imul
shll
cmc
and
shll
push
xorb
mov
inc
test
or
in
jg
lds
sbb
cmp
cmpsb
jno
pop
xor
push
or
push
mov
adc
cwtl
stos
xor
ds
ficompl
ret
or
adc
sub
mov
mov
mov
out
and
cmc
xchg
lods
pop
add
loopne
lea
cltd
push
sub
mov
ljmp
xchg
pause
pop
pop
add
hlt
push
adc
enter
mov
hlt
xor
pop
in
cmpsb
add
ret
dec
cmpsb
adc
bound
adc
mov
mov
orb
cmp
gs
stos
sub
push
std
xor
or
cmpsl
inc
addr16
adc
test
movsl
or
cltd
sbb
xor
mov
mov
in
les
stos
popf
sti
lods
or
movsl
popf
mov
rclb
jae
and
fdivl
inc
sub
aam
mov
lret
js
jbe
ds
sub
outsl
push
insb
lret
sbb
adc
std
shr
mov
loope
pop
fists
in
fldl
pop
inc
push
rcll
mov
add
test
or
fdivp
mov
lret
xor
stos
sub
adcl
popa
gs
outsl
pop
lock
sub
clc
cmp
negl
xchg
orl
pop
xchg
xor
sub
lods
sub
xchg
mov
bound
lods
mov
sbb
aaa
mov
pop
pop
adc
cld
in
aad
mov
push
adc
push
jge
xchg
push
sub
in
gs
insb
adc
int3
out
mov
pop
add
sbb
movsb
dec
ficompl
add
pushf
in
inc
fisubrl
aaa
add
inc
inc
sub
in
mov
add
or
pop
shl
mov
adc
or
imul
jge
in
enter
mov
xor
jo
inc
insl
dec
test
scas
sbb
loop
xlat
push
mov
xor
pop
mov
shlb
inc
xor
xor
call
push
add
mov
aaa
stos
or
mov
push
pcmpeqb
fwait
and
jg
std
data16
imul
sbb
stos
pushf
sbb
aam
xchg
jb
adcb
icebp
dec
shlb
fs
inc
xor
les
pop
push
int
cli
or
inc
sbb
in
pop
xchg
and
inc
in
ja
rcll
iret
lods
dec
mov
mov
in
add
rolb
int3
repz
pop
fmull
dec
int
aaa
sti
aam
and
sbb
sub
jmp
push
out
push
mov
xchg
mov
fnsave
cs
ret
pop
mov
data16
pushf
adc
cwtl
cli
push
pop
and
stc
dec
popf
test
mov
cltd
negb
inc
aas
sti
adc
or
pop
sbb
fisubs
fwait
jbe
push
test
pop
sub
insl
outsl
stos
mov
cmp
sahf
adcb
mov
inc
sub
sbb
cmp
xchg
dec
cli
enter
rcrb
xchg
jg
mov
mov
mov
cmp
pop
cmp
xor
inc
mov
jbe
test
sbb
nop
out
mov
clc
std
pop
xchg
in
loop
fadds
mov
sti
outsl
cli
pop
dec
sbb
movsl
movb
loop
cwtl
popf
sub
ljmp
frstor
cmp
repz
int
lret
insl
ljmp
stc
call
mov
jbe
mov
lcall
clc
lock
mov
mov
push
cmp
or
and
cmp
test
xchg
push
sub
aad
cmp
cs
inc
sar
int
add
mov
sbb
mov
mov
mov
addr16
enter
sub
push
add
scas
js
fimuls
lock
imul
push
push
arpl
pop
mov
xchg
pop
jns
gs
sti
cmp
lds
ljmp
lea
sti
mov
mulps
out
mov
sub
repnz
mov
cltd
sbb
jb,pt
cs
shl
push
aad
push
loopne
pop
popf
nop
jae
cwtl
clc
xchg
xor
sub
pop
call
inc
int
inc
cmc
test
test
frstor
mov
or
xchg
mov
xor
mov
jb
mov
rclb
jge
leave
xor
push
loop
xchg
dec
imul
shll
and
xorl
mov
adc
int
hlt
xchg
cmp
pop
adc
xchg
iret
adc
mov
mov
scas
cmp
lret
or
clc
mov
push
adc
test
outsb
popa
mov
sbbb
lret
dec
fdivs
sub
sub
test
inc
les
enter
sub
and
dec
decl
inc
addb
jmp
out
mov
icebp
adc
mov
insb
and
stos
adc
xchg
divb
in
pop
cmc
test
mov
jle,pn
filds
adc
ss
jmp
xchg
push
dec
pop
mov
sub
push
sbb
sti
out
cmp
je
sbb
mov
nop
lcall
mov
test
popf
fisubs
inc
out
push
inc
cs
cltd
and
mov
inc
mov
adc
mov
test
or
out
mov
pushf
fwait
std
xchg
vdivpd
pop
call
or
cmc
sbb
sbb
rcrb
xor
in
fnstsw
push
in
ja
push
movsb
fsubr
jnp
pop
out
es
add
daa
mov
xchg
mov
add
xchg
mov
int
cmp
ret
icebp
sub
sarb
subb
push
mov
sub
add
andl
stc
popl
icebp
jmp
push
jnp
mov
or
adc
loopne,pt
mov
dec
xor
adc
out
jge
push
xlat
sub
lds
mov
test
sub
sbb
and
or
jae
pop
jae
repz
mov
lcall
push
ds
add
pop
fxam
sub
int3
ljmp
lds
jge
mov
data16
rolb
stos
pop
rcrb
jnp
aaa
add
ja
call
sbb
lds
xchg
adc
outsb
dec
xor
inc
jb
js
jno
lahf
lock
lods
les
mov
and
in
and
popa
outsl
cmp
out
xor
and
mov
out
jbe
in
imul
adc
mov
aam
cltd
out
int
in
mov
push
jae
fwait
xor
mov
popf
push
sbb
jge
cwtl
mov
inc
mov
imul
sub
push
add
cmc
clc
test
lds
adc
mov
outsl
inc
sbb
push
xchg
pop
out
outsl
les
and
xchg
jne
adc
into
jb
addb
sub
adc
dec
add
inc
and
add
dec
jle
stos
or
int3
aam
icebp
mov
pop
mov
dec
in
mov
xor
xchg
mov
mov
imul
insb
pop
repz
or
cli
call
mov
test
sbb
pop
cli
mov
push
lret
rolb
test
xor
push
jge
inc
adc
push
in
icebp
popf
je
jl
outsl
and
sub
push
xor
sbb
inc
andb
pop
add
loop
dec
ret
push
test
ds
cli
xor
inc
mov
jge
fisttps
push
pop
xor
jge
lret
jae
cli
stos
pushf
jno
mov
insb
xor
pop
icebp
incb
and
sbbb
pop
sub
cmp
sub
mov
in
shrb
test
jae
ds
pop
dec
inc
dec
test
mov
je
dec
lock
loope
xor
jnp
mov
aaa
cmpsl
fimuls
divb
xor
leave
lds
out
and
xchg
or
dec
leave
lahf
movsl
sbb
loop
sbb
rol
arpl
cmp
pop
pop
lock
enter
sbb
mov
cmp
xchg
popf
inc
rorl
xor
pop
pop
add
int
push
ret
pop
jmp
add
call
add
scas
sbb
roll
and
push
scas
in
inc
pop
pop
and
gs
divl
into
aam
inc
js
mov
jge
pop
fcomps
outsl
mul
and
cmp
divb
arpl
test
lahf
jnp
adc
out
adc
test
push
loope
gs
adc
les
cmpsb
push
addr16
loop
loope
inc
lods
cmpsb
fisubrl
dec
push
sub
rcrl
in
fs
leave
andl
pop
pop
or
inc
imul
mov
jecxz
mov
hlt
imulb
icebp
pop
jmp
pop
fisttps
and
jno
adc
mov
push
dec
add
clc
adc
sbb
dec
mov
adc
adc
jno
fwait
pop
mov
pop
pusha
mov
popa
cmp
ret
xchg
sub
push
pushf
sbb
aas
insl
and
repnz
sahf
das
lds
or
adc
or
imul
lcall
outsl
popf
std
rcrb
xchg
cs
mov
lds
lods
movsb
pop
mov
sar
jo
mov
movsb
xlat
lcall
jo
nop
push
mov
mov
shlb
xlat
xchg
push
jl
mov
or
aaa
push
cld
test
test
scas
cmp
stos
fs
mov
pop
cwtl
push
scas
jnp
inc
adc
stos
sub
pop
std
mov
jae
dec
inc
adc
jmp
test
mov
je
pusha
mov
mov
pop
add
gs
add
pop
stos
dec
or
clc
dec
push
test
cmpsb
js
cmpsl
pop
or
fmull
xchg
insl
push
pop
insb
nop
loope
pop
pop
js
rclb
add
push
imul
scas
xchg
popl
out
dec
hlt
and
ss
add
pusha
call
sub
or
push
cmp
push
mov
jg
mov
jbe
pop
cmp
int
jno
cwtl
mov
xor
pop
cmpsb
or
pop
je
add
lret
test
cltd
nop
or
and
addr16
andl
test
sbb
pusha
sub
daa
jae
pop
inc
je
push
clc
xchg
and
sbb
mov
adc
fs
add
adc
mov
test
out
icebp
pop
ds
in
gs
popf
cmp
frstor
rolb
popf
rol
adcl
push
fisubrl
push
lret
push
cmc
lret
je
lret
sub
enter
mov
fcmovbe
jae
out
fnsave
popf
pop
xchg
popa
dec
pop
lods
int3
arpl
shll
rorb
pop
hlt
pop
adc
pop
push
pop
pop
in
cmp
xor
xchg
or
cmpsb
cli
ljmp
in
fstpt
push
imul
in
cld
and
and
sub
inc
xor
mov
cltd
pop
sub
stos
inc
adcb
xchg
pop
into
cmc
ds
sub
into
scas
iret
movsw
enter
clc
jecxz
loop
push
jl
add
push
or
lret
inc
in
cli
lea
cmp
mov
nop
jg
in
lock
lret
arpl
jo
or
pop
bound
push
sub
out
and
shl
repnz
add
push
ss
pop
jmp
lahf
cs
sbb
repnz
push
mov
dec
orb
push
loopne
mov
rcrb
loop
xchg
ja
cmp
jle
pop
jo
jmp
add
enter
es
test
sti
imul
mov
sbb
push
add
push
adc
mov
mov
adc
push
cs
cmp
push
popa
shlb
cwtl
imul
mov
in
dec
push
xchg
jne
fsubl
pop
jbe
outsb
cmpsb
in
add
scas
fstl
mov
vmovsd
scas
ret
add
xchg
in
imul
mov
adcb
cmp
mov
mov
adc
jp
dec
pop
psrld
gs
cmp
pop
aaa
int3
mov
and
js
ret
mov
addr16
rol
jg
cltd
adc
xchg
push
push
cli
in
arpl
cmp
fdivs
jecxz
pop
mov
pop
dec
jl
dec
cmp
push
popf
jnp
iret
add
pop
jne
insl
jg
ss
stos
stc
int
negb
pop
cld
lods
push
adc
lea
fisttps
mov
pop
cs
mov
es
lret
xor
je
adc
push
push
scas
pop
sub
cmp
dec
jl
push
sahf
jp
cli
xor
adc
ja
jecxz
test
mov
lret
inc
jmp
lock
push
or
xchg
fsubrs
mov
imul
xchg
dec
xor
jnp
add
pop
cmpsb
lock
pushf
test
mov
adc
into
xchg
push
inc
call
push
pop
mov
pop
cmp
fisttps
fs
rclb
aaa
jno
push
mov
and
push
dec
shr
test
fildll
sub
scas
jge
negb
dec
loopne
and
les
arpl
mov
int3
lods
lods
gs
lock
imul
dec
out
das
pushf
fidivs
sbb
pusha
mov
sbb
mov
je
sbb
data16
mov
xchg
cmpsl
inc
mov
lret
sbb
inc
dec
dec
jmp
iret
pop
sti
mov
subl
dec
cmpsb
jbe
fmulp
mov
popf
inc
clc
sbb
lea
pop
mov
lea
and
mov
rolb
mov
out
push
lods
cmp
or
ret
out
ret
rclb
dec
vcvtdq2pd
fdivl
fdivrl
mov
mov
in
xchg
ret
add
loope
xchg
aas
mov
push
loop
dec
sbb
test
jae
jl
push
push
pop
jns
jle
push
shl
push
stc
and
sti
push
ja
and
lret
mov
fistpl
push
push
test
inc
pop
subl
repnz
sub
test
loope
pop
sub
inc
insb
jge
hlt
xor
and
ljmp
fldt
mov
fnsetpm(287
lea
pop
fistl
inc
sbb
loopne
push
lret
sbb
andl
or
xchg
sarb
xlat
daa
dec
std
cli
or
jb
fadds
sbb
mov
bound
jae
xor
ss
pop
in
hlt
push
pop
add
and
push
aad
pop
mov
mov
test
sbb
fidivl
cwtl
stos
pushf
xor
lret
or
mov
imul
enter
dec
dec
mov
mov
or
or
je
pop
lret
dec
je
outsb
mov
pop
push
xchg
mov
push
pop
mov
xor
mov
fildll
push
pop
jb
and
adc
dec
int3
std
cmp
pop
notl
add
mov
orb
mov
pop
loop
pop
data16
mov
or
sub
lea
adc
push
cmc
inc
pop
scas
pop
push
xchg
stos
jg
popaw
jg
iret
insl
add
dec
outsb
int
mov
pusha
cmpl
int3
in
out
sub
xchg
jecxz
mov
or
adc
cmpsl
mov
and
or
or
popa
pop
fbld
in
mov
mov
adc
xchg
push
cmp
jns
sub
mov
sub
sahf
fsub
fsubr
jnp
push
out
lret
jae
adc
cltd
fcom
shrl
loop
inc
inc
jne
je
mov
stos
push
or
lret
cmpsl
orl
call
mov
cmc
dec
cmpsb
inc
rcrl
cmpsl
fdivl
and
or
jbe
sbb
pop
jns
shr
loopne
movsl
cmp
xchg
bound
lods
rol
jp
pop
cmp
scas
pop
mov
dec
add
sub
stc
xchg
xchg
pop
xchg
cs
xchg
stos
cmp
xchg
xchg
sbb
stos
xchg
cmp
fsts
cmpsl
frstor
sti
mov
imul
sbb
ljmp
xchg
add
jecxz
sub
icebp
cmp
xchg
add
push
fstl
pusha
pop
out
mov
push
mov
shll
and
jbe,pt
jb
cmp
into
adc
fcoms
sbb
or
mov
add
mov
mov
mov
jl
pop
cmpsb
pop
dec
dec
xor
mov
pop
jle
and
js
test
jnp
pop
cli
mov
lods
repz
push
repz
jg
in
mov
in
fdivrl
scas
jae
movsl
sarb
inc
arpl
pushl
mov
ds
and
jo
gs
mov
roll
xor
out
lahf
popf
stos
xor
mov
mov
stos
pusha
sbb
push
cmp
or
push
add
aaa
pop
std
jecxz
jb
pusha
and
push
into
xchg
cmp
push
lea
mov
add
rcll
mov
pop
mov
and
imul
in
vaddsd
popa
adc
cs
pop
jge
push
xchg
jmp
dec
inc
lahf
add
push
nop
imul
inc
scas
ja
jns
out
aas
add
pop
fisubs
or
adc
outsb
imul
hlt
enter
in
dec
dec
cmpsb
cmp
iret
movsb
cmpsb
scas
out
fcmovne
mov
fcompl
xchg
and
mov
jnp,pn
subl
fnstsw
cld
popf
out
and
jnp
fimull
pop
xlat
inc
or
stos
js
mov
inc
addl
mov
xchg
repz
enter
jae
lahf
mov
mov
int3
sub
xchg
xchg
cmpsl
pop
pop
pop
inc
pop
jb
andl
add
dec
sub
jns
mov
xchg
movsl
mov
or
clc
push
lcall
lock
add
xor
dec
out
daa
test
rorl
movsb
adc
xchg
pop
in
add
les
das
jmp
mov
dec
dec
iret
or
test
fucomip
cmp
xor
mov
xor
sub
mov
mov
cli
push
mov
mov
jl
jb
fsubrl
addr16
pusha
leave
fldl
idivb
sahf
xchg
xchg
ss
jae
sbb
orl
sub
mov
bnd
xchg
subb
pop
mov
aam
aam
ljmp
popa
mov
test
inc
mov
pushf
nop
popf
ja
cmp
jo
push
and
mov
insb
mov
addr16
loop
mov
mov
inc
adc
gs
js
mov
sbb
mov
sahf
mov
xor
clc
cltd
clc
pop
sbb
outsl
in
mov
pop
add
fmul
movsb
and
clc
call
sbb
pushf
or
flds
push
adcb
adc
mov
in
xchg
pushf
lods
fnstcw
adc
jbe
sub
das
je
fwait
mov
push
outsb
ljmp
push
mov
nop
fidivrs
and
aaa
sbb
clc
clc
push
mov
hlt
mov
ja
mov
inc
lret
push
rcrl
xorl
pop
daa
insb
push
repz
daa
jg
xor
mov
sub
fidivrl
mov
pop
jae
out
sub
test
inc
mov
scas
dec
xchg
jae
sbb
pop
fistpl
xchg
push
mov
push
stos
outsb
ja
xchg
mov
mov
decb
lret
in
cmp
stc
xchg
inc
pop
push
addr16
adc
push
dec
sbb
imul
leave
push
xlat
jle
and
xchg
xchg
xchg
dec
xor
xchg
add
dec
and
push
pop
int
jns
int
xor
add
push
sahf
mov
and
roll
leave
ljmp
aad
mov
in
cmp
stc
cmp
ret
int
call
movd
push
mov
dec
dec
loope
addr16
xchg
andl
jl
mov
xchg
cmp
int3
jl
shll
push
test
aad
sub
cmpsl
push
xchg
pop
cmpl
inc
mov
sub
stos
lds
sbb
mov
enter
xor
movsl
loope
lods
test
jle
pop
fwait
pop
fsub
fbld
inc
dec
push
testb
aad
in
insb
es
pop
mov
andl
xchg
jle
insb
cmpsl
roll
cld
jo
inc
fisttpll
daa
cmc
mov
ret
mov
push
push
aas
shlb
xchg
mov
jl
lret
pop
push
adc
xchg
jnp
addr16
mov
jae
pop
xor
pop
jecxz
repz
inc
xor
sub
movb
ss
add
sub
bound
mov
add
jmp
andl
jecxz
and
pop
sub
mov
pop
inc
push
movb
scas
daa
jo
mov
push
mov
jno
mov
out
iret
adc
scas
cmpsb
pusha
add
daa
idivl
inc
lret
shlb
adc
pop
push
xchg
outsl
or
ss
sub
repz
add
inc
je
arpl
fwait
andnps
add
xlat
cltd
adc
mov
fldenv
mov
and
pop
pop
push
jl
push
pop
mov
pusha
out
orl
mov
jbe
lcall
hlt
cmp
dec
pop
orb
mov
pop
movntps
lret
mov
ss
cwtl
jo
add
into
lea
not
mov
mov
mov
nop
and
iret
lock
push
stos
out
dec
sub
or
lret
jnp
shll
stos
lcall
push
pop
mov
out
shl
cmp
rorb
mov
jmp
sbb
in
icebp
es
je
call
cmp
fcmovnu
mov
adc
ja
in
outsl
std
inc
aad
lea
pop
xchg
movsl
add
mov
inc
sub
shrl
sbb
pushf
je
add
and
enter
movsb
dec
repnz
ss
mov
mov
cmc
mov
gs
jge
imul
inc
iret
sbb
cmpsl
ficomps
mov
mov
push
and
fdivr
rorl
aas
mov
xorl
loope
call
sbb
push
lret
ljmp
jl
cmp
push
ret
add
frstor
inc
sub
lods
mov
dec
adc
sub
hlt
dec
mov
mov
sbb
pop
pop
sub
es
repz
cli
aam
cmpsl
push
rcll
shrb
or
add
pop
repnz
mov
lods
bound
icebp
fstp
arpl
movsl
stos
fnsave
testb
stos
lods
test
sbb
stc
loopne
js
fcomps
xor
mov
pusha
jb
rol
jmp
inc
cmp
cmp
sub
jne
pop
sarl
std
or
sahf
int
mov
mov
std
lea
inc
ja
popa
jp
pop
pop
xlat
pushf
add
std
test
in
aad
stos
cld
pusha
xchg
lcall
movsl
mov
sbb
je
mov
stos
mov
arpl
ret
mov
dec
adc
jae
lahf
jmp
jnp
pusha
lcall
sti
das
pusha
rcll
cwtl
cltd
cmpsb
inc
fisttps
jl
in
ret
mov
pminub
loopne
sbbl
xchg
jle
lock
fs
mov
std
or
mov
call
jbe
out
inc
mov
test
jo
adc
mov
sbb
mov
sbb
mov
aas
ffree
aad
scas
mov
jnp
push
bound
mov
xchg
sti
inc
ret
cltd
in
pop
xchg
xor
sub
cli
cld
add
add
addr16
orl
mov
mov
ss
aam
xchg
sbb
in
mov
push
bswap
and
arpl
push
adc
leave
jbe
jp
xchg
sub
push
inc
jp
ds
pop
mov
adc
sub
repnz
sbb
jae
or
outsb
mov
test
adc
jle
outsl
insb
fildll
mov
push
out
daa
dec
fs
xlat
fs
add
mov
jo
push
mov
arpl
ficompl
xchg
repnz
fstps
jl
jae
or
and
dec
mov
mov
daa
mov
push
xor
ret
rol
mov
in
xchg
not
daa
or
outsl
inc
xchg
cmp
push
mov
mov
mov
dec
imul
mov
fs
lea
arpl
xchg
fs
bound
leave
lcall
test
cmp
mov
push
out
mov
ficoms
lock
stos
fsubrl
cwtl
xor
xchg
mov
int
mov
test
sbb
in
ja
push
cmc
xchg
mov
adc
sub
fs
mov
fwait
cmpsl
pop
and
mov
clc
cwtl
pusha
push
jmp
lahf
sub
fiaddl
es
mov
ret
lock
pop
mov
xlat
adc
lcall
mov
jle
pop
cld
int
mov
subb
or
mov
cmc
xor
imul
or
rorl
pop
mov
pop
jl
adc
dec
adc
push
sub
js
cld
add
cmp
push
stc
sbb
adc
adc
sbb
xchg
xlat
mov
mov
mov
mov
int
push
dec
xor
fstpt
int3
pop
pop
and
mov
div
adc
pusha
mov
les
addb
jb
nop
repnz
pop
cmp
sub
push
and
call
lods
inc
lds
addr16
stos
xchg
and
dec
icebp
mov
addl
das
jge
ljmp
sbb
orb
push
mov
jle
lahf
fsubrs
and
jns
sbb
dec
cmpsb
sub
ret
fcmovnbe
sahf
aad
int3
stos
shlb
inc
mov
sbb
js
sbb
mov
jno
fsubl
sbb
rcll
inc
add
data16
stos
andb
push
dec
lcall
in
clc
data16
ret
jno
mull
mov
dec
add
lret
sub
je
popf
sub
loope
adc
or
mov
add
add
adc
or
adc
inc
jg
sub
jmp
insb
mov
emms
cmpsl
adc
xchg
cmpsl
add
dec
insb
push
push
xchg
sahf
mov
mov
dec
out
push
repz
mov
stc
sub
lahf
sub
lahf
adc
ret
das
xchg
jo
sahf
mov
movsl
mov
mov
movsl
add
imul
loopne
aas
jne
in
mov
test
mov
test
sbb
cmc
xchg
xchg
sbb
xchg
lret
sub
push
add
notb
ds
xchg
or
lock
rcl
xchg
rcll
in
push
push
pop
sub
fisttpll
scas
inc
mov
sarb
stos
rcr
cmp
cld
loope
jl
iret
cltd
out
fsubrs
in
cmp
inc
or
scas
les
shlb
nop
xchg
inc
fstps
mov
call
add
cwtl
mov
adc
fisubrl
sub
inc
push
cmp
cmp
shrb
in
jns
loop
dec
pop
pop
xchg
or
xor
cmp
and
sub
dec
movsl
mov
sub
jge
repz
mov
lcall
push
jge
rep
adc
xor
jb
inc
pop
js
xor
insl
call
pushf
mov
push
popf
int
push
rorb
aam
xchg
push
addr16
mov
pop
mov
jmp
lods
mov
aam
inc
dec
push
and
xor
jle
xchg
es
cs
jo
mov
pushf
fidivrs
ret
push
push
imul
cmp
mov
mov
cld
in
sarl
call
sbb
sbb
add
mov
std
dec
pop
xchg
push
pop
stos
mov
mov
xchg
jo
gs
je
xorb
negb
popf
inc
loope
imul
cmpsl
jmp
jg
cltd
fldenv
ja
scas
and
test
jno
xchg
or
jmp
loope
aaa
int
mov
subl
cmpsl
push
cmp
add
call
inc
xchg
add
cmpsl
mov
xorl
inc
adc
jp
xchg
ret
sbb
mov
cmp
and
repnz
push
push
nop
mov
jae
in
out
lcall
or
je
clc
sub
test
das
fstpl
jnp
imul
add
lret
mov
mov
cld
push
add
mov
lea
pop
push
ja
lret
lret
xchg
cmp
or
in
sub
notb
mov
mov
test
aam
cmp
sub
movb
push
out
mov
sbb
fcomps
jo
adc
popa
adc
mov
sub
out
pop
cmp
pop
stos
jnp
jnp
mov
inc
mov
arpl
xchg
sub
sub
adc
call
mov
sub
mov
xchg
or
frstor
xorb
sbb
jl
idivb
and
test
fidivs
cltd
loopne
stos
cld
and
popw
jb
call
add
or
mov
outsl
loopne
test
dec
adc
divb
pushf
pop
aad
jns
adc
sub
dec
mov
aam
jle
inc
add
adc
loop
xor
mov
notl
mov
jbe
cmp
iret
les
mov
test
jge
mov
call
mov
adc
aaa
sub
pop
and
inc
jnp
loopne
xor
or
lcall
cmp
lea
pushf
js
jmp
outsl
sub
jge
jns
scas
or
ljmp
cmpsb
mov
dec
lcall
clc
mov
sbb
les
insb
push
enter
lret
mov
daa
mov
dec
lods
push
cld
ja,pt
popa
and
popf
insb
rorb
mov
push
mov
into
shlb
jecxz
sub
loopne
iret
out
pusha
iret
fidivrs
rcpps
xchg
dec
sbb
lret
loopne
adc
mov
sub
inc
lahf
dec
pop
repz
mov
jnp
mov
nop
lods
sbb
inc
pop
ret
add
mov
mov
dec
scas
mov
insl
pop
enter
push
pop
inc
mulb
mov
cmp
mov
jbe
add
xor
enter
leave
mov
jbe
cmpsb
mov
outsl
stos
aaa
mov
js
add
cmp
push
cltd
push
mov
je
addr16
push
push
push
mov
or
ss
out
ljmp
xchg
popf
movsl
pop
js
sub
call
mov
push
or
ss
jnp
movsl
or
pop
pop
jg
jnp
push
mov
xor
hlt
add
mov
inc
jae
imulb
data16
pop
mov
add
pop
icebp
pop
sbb
loop
lea
lahf
nop
andl
or
fcoml
imul
divl
std
push
sub
xor
out
mov
call
int
cld
mov
xchg
rolb
imul
pop
push
and
aas
xor
mov
sar
lods
or
or
adc
xchg
jne
sbbb
dec
add
xor
test
or
in
sbb
or
loop
loope
push
xchg
mov
or
mov
and
or
cltd
xor
fdivl
sub
lahf
lods
push
mov
stos
rcr
push
dec
addr16
xchg
das
out
jae
insb
jbe
ds
sbb
xor
xchg
pop
jg
jno
rcrb
xchg
mov
leave
sub
sbb
inc
rcr
repz
shlb
out
inc
fisubs
lcall
add
cli
add
enter
mov
fnsave
imul
jge
mov
push
adc
sub
stos
or
sub
int3
nopl
addr16
outsb
das
enter
pop
cwtl
orb
negb
pop
out
mov
shll
inc
mov
out
and
dec
fldt
jnp
fistps
test
cmp
mov
jmp
xor
in
pop
add
inc
push
jbe
cmpsl
movsl
fsub
jp
call
adc
jno
popl
dec
rorb
adc
mov
enter
sub
lahf
sar
cmpl
lahf
cltd
addl
mov
xorb
or
push
js
sbb
mov
pop
mov
adcb
pusha
xor
into
or
xor
pusha
enter
push
and
sub
nop
sti
and
xchg
mov
std
push
xor
xor
pop
addb
scas
mov
icebp
xor
pop
cmp
data16
cmpsb
mov
mov
repnz
repz
xchg
cmp
stos
push
push
outsl
sub
mov
jg
sbb
push
inc
jl
fimull
xchg
xchg
add
inc
rclb
mov
rolb
addr16
xchg
push
movsb
ljmp
adc
inc
mov
mov
stos
fnsave
lock
div
or
in
mov
cwtl
sub
cmpsb
xor
mov
bound
or
movsl
sbb
and
dec
or
push
cs
dec
pop
movsl
cmp
adc
push
call
jle
and
dec
ja
jns
lret
aam
mov
inc
loop
jne
xor
roll
lret
xor
icebp
xchg
and
sahf
pop
outsl
movb
push
das
inc
pop
push
lcall
pop
fildll
gs
or
mov
icebp
in
mov
push
shll
ljmp
test
dec
inc
fstpl
arpl
std
lds
ds
loope
aaa
push
adcb
fwait
stos
dec
mov
jae
test
stos
gs
mov
jo
dec
stc
aas
push
jecxz
in
or
and
fucomi
subb
xchg
or
sti
adc
dec
aas
inc
loopne
cmpsl
jnp
adc
out
dec
jmp
xor
call
pop
out
jb
mov
xchg
insl
jne
outsl
mov
xor
jecxz
cltd
into
es
pusha
inc
and
xor
data16
lret
int
in
popf
notb
push
test
xlat
xor
pusha
dec
jbe
jge
sub
cmpsl
jecxz
mov
push
sbb
adc
ficoml
lods
cmp
fimuls
je
jo
adc
jns
pop
add
loope
sub
test
cld
mov
mull
sarb
dec
push
jl
xchg
aam
dec
call
jp
jo
cltd
mov
lods
jne
lds
fsubrs
jg
leave
dec
dec
int
and
xor
pop
or
jno
jg,pt
pop
pop
cmp
cmp
fisttpll
aam
inc
cwtl
in
sub
mov
inc
push
dec
insl
aaa
push
xchg
xchg
repz
mov
dec
xor
scas
sub
sub
call
push
inc
mov
add
std
test
pop
lcall
xorb
es
pop
mov
xlat
out
xchg
xchg
rcl
aaa
jg
stos
ret
stos
push
add
mov
mov
mov
push
imul
mov
adcb
pusha
int3
nop
pop
mov
repnz
xor
cwtl
mov
lods
stc
mov
sub
xchg
in
and
lret
push
insb
mov
fsubrl
mov
ja
aaa
jge
adc
stos
nop
outsb
aad
idivl
jle
mov
bound
cs
and
pop
lahf
mov
ljmp
bound
in
dec
cmp
leave
bound
inc
cmc
pop
jno
pushl
pop
in
push
pop
das
push
into
rorl
jp
adc
adc
int
jns
or
mov
jge
sub
jnp
inc
outsl
orb
cltd
inc
pop
mov
mov
scas
adc
aad
xor
mov
mov
dec
mov
mov
add
push
jmp
sub
je
xor
sbb
popa
rorb
inc
push
inc
mov
jmp
mov
add
jge
push
xor
jb
repnz
mov
xchg
jbe
lret
xchg
insb
add
jb
mov
push
andb
or
add
cmp
mov
or
add
xor
adc
ficoml
sub
lsl
outsb
int3
lret
ret
mov
cmpsb
xchg
push
sbb
jb
lcall
fisubs
shll
frstor
dec
test
dec
mov
xchg
dec
rcrb
cmc
jecxz
idivl
pop
je
popa
data16
aas
popa
dec
push
inc
mov
jnp
test
in
cwtl
cmp
sbb
popa
mov
bound
fdivrp
shrl
push
dec
and
cmp
outsl
mov
fsubs
add
mov
pushf
or
mov
stos
lods
sahf
or
scas
stos
je
jecxz
in
add
icebp
std
test
lret
insb
test
push
pop
cmp
in
mov
pop
mov
inc
subl
lea
jmp
xlat
cli
subb
fdivr
outsl
frstor
out
mov
lock
push
cli
out
sti
mov
or
into
orl
dec
inc
lods
cmpl
sub
ss
in
dec
dec
adc
mov
pop
add
sub
mov
lock
xor
fiaddl
xchg
fiaddl
mov
dec
jb
dec
mov
jbe
sahf
cwtl
xchg
out
test
or
sbb
jbe
jecxz
rcl
sub
mov
dec
inc
xor
fdivs
ficompl
push
fldt
ror
mov
jecxz
pop
or
dec
jp
aad
mov
push
sbb
or
push
lods
xchg
sub
ljmp
xchg
arpl
and
ficompl
or
lods
jl
dec
sub
inc
inc
adc
or
cltd
inc
shll
adc
push
mov
dec
mov
xor
adc
mov
sbb
inc
icebp
jecxz
outsl
insl
or
pusha
and
xor
xor
test
inc
push
mov
aam
mov
sbb
mov
int
stc
xor
jl
or
sub
je
or
add
js
jp
insl
mov
cmp
pop
mov
je
rorl
ss
movsl
sarb
jg
xor
xchg
cmp
out
fistps
xchg
push
out
xchg
ds
imul
mov
test
dec
das
mov
adc
lcall
pushfw
push
ljmp
dec
lret
mov
jl
cs
mov
in
push
or
ljmp
xchg
lock
ds
adc
in
aaa
add
call
popf
cltd
aaa
repz
mov
sahf
push
es
inc
adc
pop
add
jne
inc
add
dec
getsec
adc
jge
test
sub
sub
mov
push
inc
loopne
inc
sarl
mov
xchg
sub
cs
lds
xchg
jbe
mov
int3
sbb
inc
cmp
jecxz
pop
test
sub
in
pushf
jg
sub
cmp
insb
out
icebp
adc
jns
xchg
fisubrl
jl
adcl
pop
dec
shlb
pop
lds
and
call
xor
in
scas
sbb
ljmp
test
int3
stos
hlt
mov
movsl
mov
pop
inc
arpl
adc
sbb
pop
inc
cltd
pop
aad
mov
popf
dec
int3
into
push
mov
das
xchg
sbb
adc
es
push
sub
pop
mov
je
mov
mov
pop
cmp
adc
outsl
jg
mov
es
inc
add
enter
out
sbb
fsubrl
mov
aas
hlt
loopne
xor
add
aam
push
jp
in
inc
movsl
popf
jns
pusha
ljmp
cwtl
movsb
mov
adc
fsubl
test
lods
mov
add
push
and
mov
xlat
dec
mov
repz
fcoms
notl
mov
inc
pop
fwait
test
inc
aad
or
add
mov
mov
popf
xchg
push
sbb
mov
and
inc
outsl
pop
jae
push
bound
mov
jecxz
fwait
loopne
mov
cmpsl
cwtl
and
pop
xor
inc
mov
dec
movsl
pop
xchg
xchg
test
jnp
pop
hlt
sahf
mov
adc
cld
and
add
mov
inc
cmp
shl
mov
es
push
mov
lock
mov
and
enter
scas
loope
xor
icebp
push
fwait
pushf
adc
int
jecxz
or
lahf
ss
push
ds
pop
mov
xchg
pop
xor
mov
rcl
pop
int3
test
inc
mov
dec
pop
xchg
fldz
js
mov
mov
sbbl
add
dec
shlb
jno
ret
je
push
lcall
inc
pop
pop
pop
mov
sub
rcrl
add
fmuls
icebp
pop
xor
das
sub
fst
mov
mov
mov
or
movsl
xchg
push
add
jg
gs
sbb
sbb
insb
es
jae
insl
and
rcrl
push
fs
cmp
daa
into
jmp
clc
int
subb
sbbl
add
xchg
cs
and
call
cmpsl
das
std
ljmp
jo
fwait
outsl
jnp
lods
int
xor
sub
mov
ljmp
push
call
shll
in
je
dec
mov
loopne
das
dec
dec
xor
int3
sub
je
xchg
jbe
notl
push
add
pop
and
mov
shlb
in
inc
pusha
mov
xchg
pop
pusha
stos
ret
sub
fisttps
cwtl
push
xor
je
icebp
mov
fldt
fidivrl
push
cmpsl
cmp
repnz
xor
push
sbb
cmp
sub
mov
jge
aam
mov
cld
lret
icebp
adc
lret
push
mov
loope
adc
bound
mov
fldenv
aad
mov
adc
jl
lcall
adc
push
mov
mov
cmp
jl
into
pop
in
dec
outsb
mov
add
in
iret
sbb
mov
lds
xchg
or
pop
arpl
stos
cld
aad
cwtl
and
pop
pop
sahf
or
pop
mov
test
in
cmc
out
fwait
sbbl
fld
stos
sub
add
mov
clc
cltd
repnz
ss
sub
cmpsb
outsl
or
sub
out
stos
and
xor
repz
aam
adc
or
mov
jb
and
movsb
sbb
push
cwtl
cmp
push
movsl
inc
mov
inc
add
push
jecxz
jp
and
ret
scas
movsb
mov
pop
jl
pop
adcl
xchg
cmp
hlt
in
add
add
enter
inc
mov
clc
ficompl
int3
cli
push
mov
enter
pop
in
js
fists
movl
mov
sbb
mov
decl
fs
jg
popa
frstor
fcoms
adc
leave
sub
push
dec
in
mov
mov
jmp
xchg
ret
inc
jne
test
sbb
sub
ljmp
adc
popf
movsl
and
imul
xchg
imul
ficoms
and
jp
in
mov
in
xchg
mov
mov
mov
repz
push
in
cmpb
fcoms
mov
adc
xchg
movsb
inc
sbb
sti
daa
push
in
addr16
mov
inc
pushf
mov
mov
icebp
fcoml
dec
sub
push
sub
sarb
pop
stos
in
mov
sbb
mov
add
pop
divl
shrl
mov
sub
pop
ret
push
add
nop
jg
mov
nop
pushf
in
popa
jg
imul
lds
call
les
and
mov
scas
xlat
cltd
mov
insl
jmp
inc
xor
sub
and
std
fidivl
mov
mov
inc
imulb
test
push
xchg
fwait
mov
fnsave
dec
xlat
dec
outsl
sbb
out
pop
mov
movsl
xchg
mov
xchg
imul
sub
xor
fsubs
sub
xchg
push
shrb
xor
popf
xor
iret
imul
sub
jb
cli
cmp
jmp
and
into
lcall
cmpsl
aad
xor
mov
scas
and
loope
lock
mov
inc
cltd
jg
fstpl
or
mov
jle
lods
bound
inc
hlt
xor
xchg
ds
xchg
cmp
mov
sbb
shrb
and
lea
dec
fs
pop
cs
daa
jne
jecxz
int
std
es
into
add
xchg
cmpsl
mov
add
mov
imul
cld
in
ljmp
add
and
int3
aam
fs
sub
mov
mov
sahf
cmpsb
pop
adc
lret
or
lods
lcall
cmp
cltd
inc
in
cmp
push
inc
push
push
lret
or
mov
inc
cld
daa
ret
push
sub
out
adc
loopne
repz
stos
cltd
add
cmc
aam
lcall
mov
cld
mov
call
pusha
jno
sub
nop
cld
cmpsl
pop
pop
pop
mov
hlt
cltd
mov
or
push
jecxz
stos
in
ljmp
or
xorb
pusha
int3
divb
dec
cld
into
ja
sub
sub
les
ja
aas
adc
jo
mov
in
repz
jne
push
jp
pop
ret
iret
lds
adc
popf
xor
scas
aas
push
imul
je
inc
and
cmp
pushf
xchg
fcoms
mov
cmp
out
cmp
std
xchg
jecxz
inc
xor
mov
scas
push
fldcw
push
popa
dec
rol
add
push
fwait
or
xor
ss
pop
and
push
jge
fistps
ret
movsl
aas
nop
mov
ds
push
xchg
cltd
mov
jp
dec
push
cltd
in
popa
lcall
out
fs
out
dec
dec
push
cmp
stos
int
jo
cmc
daa
aad
aad
in
imul
pop
int
sbb
fistps
mov
fmull
ret
js
repz
mov
jge
popf
aas
repnz
sbb
insl
ret
lods
jno
and
jecxz
xchg
inc
jmp
jno
pop
loopne
test
sub
inc
test
into
cmp
addr16
fwait
test
push
mov
in
xchg
adc
syscall
mov
jae
daa
mov
hlt
jle
jno
jae
ret
mov
data16
mull
inc
xor
mov
cmp
jo
scas
jle
and
test
hlt
pandn
mov
and
cld
xlat
js
lcall
into
sbb
add
pop
add
cmp
repz
dec
or
loopne
aad
mov
push
stc
filds
mov
or
gs
mov
mov
xchg
bound
fcmove
lret
ja
aad
add
sub
movsb
sbb
loop
xchg
in
popa
ret
mov
jae
aad
andl
cmpsb
mov
add
ror
imull
loopne
xchg
loop
fs
xor
clc
cmp
aas
dec
popf
mov
je
in
dec
dec
testl
sub
mov
adc
imul
inc
mov
sbb
lock
cmp
movsl
push
out
mov
lahf
cmpl
push
es
ror
inc
imul
cmp
jle
mov
bound
sub
and
gs
cld
ret
xchg
sub
lret
icebp
jge
daa
sahf
jo
pop
popa
cmp
es
cmpsl
loopne
pop
outsl
js
mov
sub
xor
pop
cld
es
jp
fimull
inc
int3
mov
inc
push
enter
push
mov
or
outsl
mov
xchg
fldl
outsl
cmpsb
les
insl
add
jle
mov
jae
sbb
ret
shll
jae
cmp
cltd
js
aam
call
mov
enter
sbb
xor
xchg
inc
mov
jo
mov
jns
push
adc
mov
andb
aaa
insb
pop
inc
sub
shl
ss
mov
adc
and
xor
outsl
or
xor
call
sub
cltd
cltd
sbb
mov
xchg
jne
scas
lock
xor
pop
jbe
ds
ror
stc
pop
push
xchg
cld
pop
cmc
leave
loop
pop
insl
int3
jno
or
cmp
xor
fimull
clc
or
icebp
inc
movsb
out
stc
mov
ficompl
mov
mov
out
and
cmp
mov
movsb
repnz
arpl
inc
pop
test
ret
push
es
cmp
jo
push
leave
int3
mov
mov
stc
rep
add
cmpsb
bound
jl
dec
nop
and
shrl
jnp
cli
ficomps
pop
cmp
sbb
popf
stos
es
push
mov
mov
fwait
jno
cs
mov
xor
daa
lock
int
cmp
call
stc
mov
aas
lock
leave
cmp
and
cmp
aas
and
inc
add
jnp
out
ds
inc
pop
push
testb
ret
push
popa
mov
jg
jmp
icebp
xchg
mov
test
push
aaa
mov
jne
lahf
inc
jne
mov
out
xchg
scas
jae
or
icebp
sub
push
inc
arpl
and
mov
fnstenv
adc
rcr
push
jbe
lds
mov
adc
movsl
loopne
cld
xchg
jecxz
xchg
adc
mov
cmp
rep
js
ficoms
hlt
int
jg
cwtl
push
push
mov
push
or
icebp
add
dec
jmp
pushf
jns
gs
sbb
jmp
pusha
cld
jo
shll
pop
xchg
push
lods
lock
lock
scas
pcmpgtb
das
and
jb
sbb
pop
jp
iret
lahf
mov
or
sub
mov
out
push
decb
clc
add
add
cld
lret
imul
stos
les
mov
or
cmp
scas
jns
mov
dec
inc
pop
inc
lar
push
sub
push
jmp
mov
std
sti
aas
jae
js
xor
push
cli
stos
ds
in
push
pop
dec
les
pop
sbb
and
into
hlt
enter
iret
and
xor
inc
ja
jnp
popf
cmp
les
dec
mov
or
cmp
sbb
inc
sub
pop
pop
jns
andb
jp
fs
ret
and
or
mov
cmp
push
xchg
out
or
cmp
xor
popf
or
aas
stos
jb
cwtl
pusha
fadds
leave
shrb
rcll
ret
mov
xlat
cmp
adc
or
dec
or
cs
scas
cmpsl
repz
sahf
fwait
imul
sub
fs
push
xor
aad
xor
pop
mov
mov
icebp
mov
xchg
jbe
insb
sub
das
sub
mov
pop
mov
or
adc
jbe
push
push
out
lret
cmpsl
xchg
pop
insl
clc
test
and
aad
call
loop
das
pusha
or
cs
jno
test
imul
pusha
rcl
negl
jmp
int
mov
mov
pop
cmp
jne
add
or
jecxz
mov
nop
cs
dec
xchg
faddp
jg
stc
push
push
jno
loopne
ss
push
inc
out
pop
sub
xchg
mov
cmp
jg
xchg
aaa
test
popa
mov
jle
fcmovu
dec
jmp
outsl
out
das
stos
insl
xchg
pusha
inc
jl
loopne
out
sub
and
jg
mov
nop
push
pop
ljmp
iret
adc
mov
jp
cmp
push
loopne
pop
adc
xor
dec
insb
push
lock
inc
mov
pusha
sahf
mov
xor
outsb
cmpl
push
imul
sbb
pop
adc
shrb
xor
dec
push
in
in
test
js
dec
outsl
mov
push
ds
es
cmp
mov
jae
mov
nop
cmp
pushf
out
sbb
jmp
arpl
movsb
fnstenv
call
iret
cmp
cli
add
jmp
inc
add
pop
subl
pop
je
cltd
jb
pop
mov
test
je
mov
out
addr16
sahf
sub
leave
addr16
jecxz
loopne
mov
scas
nop
pop
or
jmp
leave
cmpsl
ffreep
aad
sub
shll
sbb
add
sbb
jne
and
jnp
ds
mov
mull
or
pop
clc
dec
lahf
dec
adc
leave
adc
cmc
xor
data16
dec
mov
std
push
push
repnz
stc
or
pop
stos
mov
jecxz
test
lea
mov
cmc
mov
adc
in
mov
mov
lods
leave
mov
stc
inc
adcl
shlb
sub
pop
add
cmpsb
fwait
mov
jmp
gs
and
pop
cmp
jo
jo
push
sub
mov
js
jae
pop
ret
or
push
mov
pop
gs
or
addr16
pop
mov
sti
add
fisubrs
push
lock
das
sahf
fsubl
dec
xor
stc
mov
mov
pusha
jo
inc
leave
pusha
fwait
fwait
sbb
std
mov
xchg
inc
loopne
seta
dec
mov
pop
sarb
pushfw
mov
shl
sub
xchg
notb
shll
aas
mov
sarb
or
stc
dec
sub
loop
sub
loop
xchg
sbb
xchg
pop
outsl
cmp
int
mov
lret
fsubs
mov
popf
cs
adc
ss
adc
aas
mov
shll
add
and
push
xchg
in
sub
sbb
insl
jne
mov
xor
xchg
sub
addb
inc
ss
mov
test
call
cmp
lods
lock
mov
and
sub
lret
xchg
jmp
cmp
out
jg
mov
jb
xchg
cmp
mov
and
jnp
sti
adc
daa
out
and
push
movl
jmp
aam
push
cmove
std
mov
adc
adc
pop
jno
jmp
and
sub
mov
pop
add
push
orb
adc
subl
outsl
xor
and
cmp
adc
mov
push
inc
dec
movb
sti
pop
xchg
lock
aad
outsl
lods
gs
mov
and
insb
iret
push
je
adc
mov
sbb
or
movsb
jb
popa
sahf
int3
add
xor
adc
sub
aaa
loope
loopne
push
xor
das
js
and
shr
mov
sub
and
xchg
dec
mov
ss
ds
jno
mov
aad
dec
dec
jl
mov
in
leave
lods
mov
adc
adc
cmp
adc
shll
dec
adcb
std
call
jae
xor
add
xchg
jmp
cmp
cli
pop
test
jae
movsl
adc
loop
xchg
cmp
push
inc
mov
into
icebp
xor
outsl
enter
inc
and
stos
js
mov
movl
cwtl
getsec
push
je
inc
imul
cmp
pop
push
scas
insb
fstps
push
sbb
jg
add
stos
cmpsl
rol
inc
mov
or
add
xlat
push
leave
xchg
decl
insb
jle
scas
outsb
pop
subl
push
mov
sub
shl
repnz
mov
push
add
lcall
adc
loop
movsl
add
repnz
jmp
xor
xchg
mov
jge
cwtl
fldcw
or
sbb
cld
outsb
sub
jl
or
jmp
jns
sub
xchg
xor
jmp
loop
push
sbb
and
adc
push
mov
xor
sbb
test
mov
das
dec
shrb
push
push
adc
xchg
jg
push
stos
hlt
mov
inc
push
mov
push
ret
mov
mov
ret
jg
adc
ret
lods
addl
fbstp
cmpsl
cmp
jmp
shlb
fnsave
loopne
sbb
inc
outsb
repnz
and
push
ret
mov
adc
jp
or
xchg
out
sub
aaa
call
adc
lret
andl
daa
cmp
or
add
dec
pushf
jno
fbstp
scas
fdivrp
enter
in
adc
and
mov
push
outsb
sti
mov
ds
and
imul
cmp
test
push
inc
std
stos
dec
leave
sbb
pop
cmp
inc
test
jmp
xchg
sub
icebp
pop
ret
inc
mov
int3
lret
jle
aad
cld
mov
mov
jmp
out
fwait
insl
inc
out
mov
cmp
nop
pop
rclb
and
cmp
inc
or
mov
fs
in
fstps
lahf
push
icebp
adcb
add
inc
notb
js
and
dec
xchg
fisubrs
inc
add
add
push
inc
inc
les
clc
mov
nop
fbstp
stos
inc
cmc
inc
enter
leave
aad
add
xlat
adc
std
and
sbb
fistps
mov
push
mov
popf
notl
cs
pop
add
rcrl
out
int
cmp
and
mov
mov
nop
into
fimull
xor
lds
fisttpl
test
loope
cmp
cld
out
ret
xchg
fists
fsubr
mov
xor
or
repnz
xchg
xor
sbb
arpl
add
mov
in
sar
mov
mov
fwait
jo
add
or
xchg
cmpsl
test
pop
mov
icebp
mov
ss
enter
mov
aas
data16
jb
sbb
incb
jge
jp
arpl
jle
movsl
mov
cmc
jge
lahf
and
jno
add
mov
pop
movsl
ret
or
shll
sbb
out
loopne
xchg
push
aaa
or
inc
insb
ljmp
fwait
inc
in
loope
cwtl
outsl
dec
pop
xchg
ss
and
add
fidivrl
inc
nop
mov
adc
inc
add
out
imul
bound
or
cmp
sbb
movsl
xor
mov
cmp
test
push
call
int
gs
call
test
bound
xchg
or
xchg
xchg
and
xor
adcb
jns
in
and
mov
lea
imul
mov
pop
mov
jb
fwait
jge
pop
push
repz
cli
stos
stos
stos
insb
push
mov
xchg
les
stc
sub
jmp
mov
cs
pop
xor
xchg
aas
sbb
and
jo
sub
mov
out
je
cmp
cmp
icebp
shll
leave
mov
flds
pushf
dec
mov
mov
divb
test
add
push
pop
pop
mov
and
mov
dec
dec
outsl
push
rorl
int
mov
pop
push
rcrl
std
out
add
adc
and
out
cmpw
in
ss
pop
inc
xchg
out
fs
add
insb
sub
inc
fcoms
dec
mov
int3
subl
cmpsb
push
popf
clc
or
lcall
lahf
out
andl
dec
loopne
jbe
sbb
sbb
in
cmp
les
into
popf
int
xor
cltd
jo
movsb
ljmp
xor
xchg
push
rorb
imul
sub
shl
fstpt
stc
sbb
xchg
mov
shll
adc
in
inc
xor
cmpsb
xchg
cmp
aad
insl
xchg
inc
das
daa
mov
sti
js
popa
push
inc
mov
clc
mov
sub
jns
sbb
les
loopne
xchg
jg
std
shlb
add
out
int
or
sti
repnz
addr16
loop
push
out
sarl
dec
into
insl
pusha
xor
pop
mov
sahf
or
into
inc
xor
andb
cmc
popa
int3
in
out
mov
fists
popa
sub
test
je
sub
lods
pop
cmp
and
stos
outsl
sbb
dec
xor
popf
sbb
add
ret
sbb
icebp
icebp
pop
aad
mov
fadds
call
mov
mov
stc
pop
mov
orb
daa
fimuls
push
jae
iret
addr16
fistpll
push
out
add
adcb
and
push
js
jbe
stos
add
jp
pop
scas
add
add
inc
popf
adc
nop
push
popa
stos
jb
arpl
cwtl
clc
mov
mov
js
lahf
je
test
pop
xlat
jmp
jbe
dec
mov
call
add
sbbl
cmp
sahf
pop
and
and
push
cmp
push
jmp
xchg
lods
and
popa
pushf
ret
and
pop
das
add
xchg
sti
mov
jg
and
daa
pushf
push
and
nop
push
rcrl
and
shrb
fsubrl
pop
or
roll
imul
xchg
adc
aas
mov
cmp
add
jecxz
xchg
xlat
mov
mov
xor
cs
cmp
outsb
loop
test
aas
pop
xchg
int3
inc
push
lea
inc
mov
js,pt
test
cmpsl
mov
jg
sbb
or
and
mov
ret
or
scas
enter
and
lret
pop
subl
lods
xlat
ss
push
mov
out
inc
push
xchg
pop
gs
in
std
adc
and
sub
loope
and
rcrb
cmpsb
mov
scas
or
idivb
lcall
mov
add
test
popa
sub
jge
aas
add
mov
shrl
xchg
rcll
mov
mov
call
adc
repz
popf
pop
lds
pop
pusha
inc
push
in
xor
repz
rcll
repz
and
daa
add
stos
jne
into
lods
mov
inc
fxch
out
and
lea
jno
sbb
mov
mov
std
out
nop
pop
xor
fxch
push
out
shrd
mov
adcb
or
pop
inc
fistpll
xor
inc
cmpl
fwait
push
xorl
cmpsb
jl
mov
ret
lods
std
das
and
ret
sti
fisubrs
sbb
addb
cmc
addr16
mov
xchg
mov
xchg
dec
inc
jne
mov
sub
pop
fstl
mov
and
js
aas
push
and
lods
cmp
or
add
jo
lcall
popf
push
outsl
mov
out
pop
lret
xor
push
leave
and
mov
data16
xor
mov
in
pop
imul
pop
dec
test
dec
pop
dec
je
sub
dec
lds
cmp
push
dec
sahf
add
pop
sarl
cld
jnp
aas
adc
pusha
inc
ret
add
in
cmc
mov
adc
test
orb
mov
int
lahf
dec
mov
push
push
push
xchg
lret
or
repz
sbb
out
add
ss
pop
pusha
pop
movsl
popa
scas
into
mov
ljmp
mov
pop
inc
je
jo
iret
add
popa
clc
aas
mov
les
inc
jp
push
pop
adc
adc
xchg
cmp
movsl
push
in
call
jbe
nop
insb
imulb
pusha
inc
and
pushf
arpl
js
gs
inc
push
mov
sub
in
push
mov
fsubr
inc
out
sahf
stc
addl
push
arpl
mov
bound
add
fstpt
inc
xor
jmp
jbe
stos
sarb
in
bound
dec
scas
xchg
insb
mov
lods
cmpsl
nop
mov
or
ja
ds
add
xchg
outsb
jns
fisubl
push
xchg
aaa
ds
adc
mov
jecxz
lcall
jbe
jbe
add
mov
mov
rcl
stc
dec
and
outsl
xor
pop
imul
into
test
xchg
sub
cmpsb
cli
rcll
addl
inc
loopne
jmp
jecxz
clc
xor
popa
int3
mov
jg
xor
lds
mov
fcoml
jnp
shrl
push
xor
icebp
xchg
or
les
dec
test
jmp
cmp
arpl
dec
lss
mov
adc
jp
punpckhbw
pop
inc
dec
jp
aam
cmp
xor
inc
gs
lret
fiadds
jns
loope
and
cmp
scas
pop
sbb
jbe
gs
sub
mov
nop
les
gs
cwtl
daa
in
dec
fchs
mov
icebp
push
rorb
in
cmp
daa
dec
lar
sub
xchg
fsubs
pop
or
mov
cmp
incb
es
cmp
or
xor
test
add
out
imul
sub
push
xor
or
xor
cwtl
fimull
xchg
shlb
sub
jno
rorb
addr16
out
loopne
movsb
push
add
scas
insl
out
xor
pop
xor
push
add
xor
inc
cmp
nop
push
or
jmp
pop
cmpsl
jae
lcall
scas
aaa
mov
jl
das
out
insl
test
sbb
idivb
xor
jp
mov
out
pop
inc
pop
out
cld
gs
mov
inc
loop
inc
fidivs
movsb
mov
push
mov
aas
add
jle
out
inc
sbb
into
out
ss
out
shll
imul
mov
push
pop
inc
mov
orl
lock
ljmp
nop
xor
cmpsb
hlt
dec
inc
bound
outsb
dec
mov
cmp
adc
jmp
xchg
xchg
jno
test
jns
mov
cmpsb
inc
clc
xor
rcl
sahf
mov
mov
cmpsb
jp
jl
push
sub
mov
pop
subl
mov
inc
xchg
test
inc
sbb
and
aad
out
push
inc
icebp
pop
xchg
sbb
mov
xor
cmc
ret
sub
xor
lahf
pop
cmp
xchg
and
mov
movsb
sahf
leave
pop
add
mov
scas
add
xor
jl
bound
mov
xchg
lret
fcmovb
and
xlat
push
sub
rcll
jne
add
add
sub
into
pop
jecxz
jnp
movsl
test
ja
mov
lahf
scas
call
test
ds
pop
adc
lea
pop
sbb
scas
daa
dec
addr16
jg
inc
and
adc
in
mov
cmp
insb
inc
mov
imul
call
jo
xchg
pop
xchg
jae
xchg
rcrb
stos
cmpsb
ficoms
lcall
adc
inc
push
mov
and
or
sub
dec
popa
cltd
in
or
add
push
cmp
test
xchg
rcr
push
or
in
test
xchg
adc
adc
inc
jno
adc
xchg
lock
add
or
lods
int
mov
xor
rorl
nop
iret
ds
xchg
cmp
lods
inc
pop
xor
mov
pmullw
ret
xor
movl
cmpsb
sub
xor
dec
ret
xor
sbb
push
jle
std
sub
test
dec
add
pop
fisttps
aam
mulb
cmpsl
imul
in
scas
inc
push
out
mov
jl,pt
adc
rolb
push
inc
lods
cmp
popl
pop
lret
cmpsb
inc
je
orb
and
or
outsb
xor
out
addr16
sti
push
mov
mov
inc
call
adc
clc
les
mov
sarl
int3
mov
imul
push
or
xor
das
add
mov
lods
sbb
cmp
mov
jae
lret
add
xor
lods
push
xor
xchg
cmpl
jp
je
pop
insl
push
dec
sti
or
lea
adc
xchg
mov
sbb
add
fidivrl
rcrb
mov
and
pop
les
cli
sbb
push
jle
push
jns
loope
lcall
movsb
and
pop
jo
adc
and
cli
in
add
aam
xchg
mov
adc
ret
lea
sbb
stc
in
pop
inc
sub
loope
int
dec
hlt
movsb
int3
cli
sub
iret
jns
out
pushf
mov
push
push
out
inc
jle
jp
xchg
icebp
and
aas
xor
js
and
xchg
or
mov
or
popf
rcl
xchg
push
mov
or
jp
xchg
add
repnz
test
adc
dec
movsl
push
jge
inc
clc
in
imul
mov
mov
mov
sbb
sahf
daa
in
lahf
lds
cmpb
les
ror
mov
js
sbb
sub
leave
inc
mov
jge
or
xor
adc
lret
pushf
cmp
and
pop
sbb
jl
fdivs
pop
inc
adc
xchg
imul
in
divb
mov
jnp
xlat
shl
clc
push
sahf
stc
lahf
div
stos
scas
or
xchg
jb
or
insb
pop
data16
xor
stc
push
and
cmpsl
int
out
mov
test
pop
ror
push
adc
xchg
xchg
shl
lea
dec
push
fisttpl
inc
dec
xor
imul
fldcw
push
inc
scas
cli
loop
mov
and
stos
fidivl
adc
sub
pop
mov
outsb
push
aad
insb
sbb
lret
aad
mov
adc
arpl
rcrb
fdivl
jp
arpl
mov
push
inc
cltd
lods
mov
push
inc
mov
in
in
and
int
pushf
sub
push
add
movsl
inc
pop
xchg
jb
adc
rcll
pop
cs
incb
push
test
aas
cld
cmp
arpl
xor
pop
dec
cwtl
in
pop
inc
cwtl
jnp
jae
das
and
xor
lcall
aad
sub
cli
rorb
mov
adc
movsb
loop
sub
mov
cmp
lahf
jge
sbb
dec
inc
push
adc
cmpsb
xor
jbe
sub
xchg
adc
pop
movups
je
mov
sti
or
jecxz
decl
jg
cli
enter
mov
sbb
lods
aaa
mov
pusha
cmp
mov
arpl
lods
mov
mov
push
insb
pop
sbb
pop
adc
bnd
fdivrl
mov
mov
in
movsl
in
lret
loop
js
push
jge
mov
cld
add
divl
out
dec
fnstsw
and
mov
jb
push
int3
cs
pop
pop
mov
adc
scas
stc
mov
sub
jp
js
test
dec
xor
inc
adc
xor
call
insb
out
xor
add
xor
lret
int
ds
push
dec
and
aam
icebp
jae
mov
jmp
jecxz
scas
jp
xor
push
out
in
lcall
fs
fucomi
sbb
pusha
cmpb
je
int3
loopne
mov
mov
sbb
out
popa
mov
or
je
xor
xchg
cmp
pop
inc
cmpsb
leave
sbb
jns
ret
xchg
cmp
mov
adc
push
cld
daa
jne
jle
bound
mov
jmp
xchg
iret
push
sbbb
sub
inc
push
pop
cmp
aaa
in
push
fcoms
dec
shlb
mov
in
rol
mov
sub
fsubrl
dec
je
cmc
movsb
dec
movsb
jb
pop
inc
repnz
fmuls
mull
gs
xchg
adc
adc
sbb
or
retw
enter
repnz
lds
lods
inc
mov
fdivs
stos
addr16
xor
dec
dec
jno
sub
fcoml
mov
inc
fdivs
ljmp
inc
addr16
mov
dec
int
hlt
push
jp
xchg
scas
mov
ss
imul
rolb
add
fcomp
shll
inc
lods
xchg
push
xchg
hlt
xor
push
fimuls
movsb
fiadds
mov
or
in
mov
gs
lret
jge
into
ret
enter
jmp
dec
fbstp
xor
leave
sahf
es
adc
stos
push
inc
mov
popa
inc
in
les
jle
push
outsl
test
xchg
es
mov
hlt
inc
fiadds
push
sbb
sahf
push
shr
movsb
aaa
fcomp
jno
inc
fists
mov
xchg
aaa
nop
sahf
sub
mov
or
pusha
adc
mov
mov
dec
popf
out
bound
mov
xor
inc
xchg
xchg
xchg
jae
push
movsb
adc
int3
inc
mov
pop
ds
shlb
jnp
lret
inc
jmp
add
call
push
add
std
orl
sub
jp
cmp
sbb
jmp
add
sbb
sbb
data16
sti
rol
orb
fcomps
cltd
sbb
inc
dec
sub
sub
jecxz
fsubr
push
daa
fldenv
rorl
xlat
push
jb
sbb
pop
pop
test
mov
fadds
scas
rolb
shrl
insb
or
lds
xor
xchg
jns
inc
repnz
jecxz
and
loope
cwtl
mov
mov
rcll
mov
rorl
mov
push
mov
inc
cmp
stos
lock
pop
mov
and
mov
mov
mov
in
xchg
pop
pop
push
lock
mov
or
pop
dec
out
dec
pop
pop
sar
pop
int
push
mov
fs
mov
pop
push
xor
out
icebp
ret
sbb
xor
xor
int3
iret
enter
fwait
cmp
aas
ret
adc
ficoms
push
out
mov
dec
lcall
xor
jl
in
jp
and
jmp
daa
pop
ja
xchg
stos
sbb
sarb
jp
adc
pop
mov
es
pop
adc
loop
test
sbb
loopne
jg
sbb
push
xchg
imul
dec
add
inc
fnsave
mov
adc
cmp
insb
test
jg
mov
fistpl
push
cwtl
out
in
and
out
in
push
jb
test
popf
decb
movntq
cmp
dec
lock
movsb
sub
jns
push
into
arpl
xchg
dec
sbb
popa
jno
mov
mov
aad
movsl
nop
dec
mov
and
and
adc
mov
and
test
pop
xor
sub
lcall
mov
idivb
mov
pop
jbe
negb
rol
add
and
rorb
cmp
cmp
inc
mov
test
mov
ds
adc
mov
into
sub
leave
loopne
mov
jb
fildl
push
lea
push
jmp
adc
add
and
or
inc
shr
and
lds
xchg
pop
int3
dec
jecxz
inc
xor
in
xor
push
push
lods
jo
sbb
sbb
enter
orl
push
in
mov
clc
popa
outsb
idivb
xchg
xchg
into
mov
push
inc
dec
outsl
jno
daa
dec
sub
cmpsb
flds
push
lret
mov
jo
inc
xor
je
mov
inc
clc
ja
lea
subl
sbb
fsubrl
cmpsb
xchg
stc
mov
adcb
or
into
mov
sbb
inc
xchg
popa
pop
pushf
jnp
imul
adc
sbb
push
mov
sub
add
movsb
inc
cwtl
xchg
inc
test
dec
sbb
jb
sbb
dec
ds
or
fwait
enter
push
test
outsb
cli
icebp
xor
push
in
push
mov
stc
xor
mov
ds
sbb
test
add
jnp
sahf
mov
adc
xchg
nop
sbb
xchg
sbb
sub
xor
mov
fmuls
push
cmp
out
pop
orl
pushf
je
push
imul
sub
faddl
mov
cs
and
sbb
adc
xchg
mov
lds
xchg
insl
xchg
sub
jo
daa
sub
aas
ficoml
add
push
mov
insb
xchg
mov
and
add
testl
neg
fs
cmp
int3
add
add
sbb
or
mov
jo
fcmovnu
push
rol
repnz
xchg
mov
or
inc
jnp
push
dec
cmp
push
cmpsl
movsl
dec
push
jmp
rcll
sub
jae
sarl
or
in
fists
ret
fsts
jne
pop
xlat
loop
call
jp
popa
push
push
and
mov
dec
xchg
pop
adc
mov
out
jge
dec
stc
or
push
jne
mov
adc
loope
mov
icebp
int3
imul
insl
adc
ret
dec
mov
dec
or
insl
cli
add
adc
fisttpll
mov
jecxz
sub
sbb
xchg
mov
sbb
xchg
mov
data16
or
add
add
arpl
sbb
movsb
insb
sub
repnz
enter
dec
mov
xlat
iret
pop
fcompl
push
lret
movsb
inc
inc
fidivl
scas
fidivs
lock
ss
push
dec
cmp
or
pop
mov
in
mov
maxps
push
imul
fisttpll
xchg
bound
mov
push
repnz
mov
call
jne
jmp
push
notl
sbb
sbb
int3
mov
mov
and
insb
test
adc
jo
cltd
dec
xchg
out
mov
fstl
sbb
dec
mov
inc
lcall
daa
in
or
lea
fdiv
pop
fnstcw
cmp
xchg
lahf
mov
hlt
leave
pusha
call
in
aad
adc
aam
in
jb
adc
ficompl
mov
or
int
push
insb
sub
insl
sub
jge
mov
xorb
adc
loop
or
cmpsb
outsb
and
mov
cmc
sbb
pushf
and
sub
das
mov
cmc
or
stc
mov
mov
jae
pusha
jecxz
mov
push
aam
dec
enter
fisubrl
aam
enter
fcoms
out
jge
mov
loope
lret
lcall
mov
shl
pop
aam
lcall
jecxz
std
dec
fwait
ja
mov
xor
xchg
mov
mov
test
pop
nop
je
icebp
je
test
fs
xchg
orb
sbb
xchg
mov
mov
mov
jae
out
nop
enter
mov
and
or
mov
mov
nop
sbb
jge
and
fwait
and
xor
fs
jae
divl
or
push
sbb
xchg
mov
add
lods
pop
xor
mov
inc
lret
pcmpeqw
cmc
ja
test
cmp
data16
adcl
cmp
lods
mov
movsl
adc
ljmp
aas
xchg
sbb
dec
or
adc
jl
aaa
push
in
adc
xchg
orb
mov
mov
pop
pop
inc
lods
push
les
aas
inc
stc
jmp
rcl
jp
inc
faddl
ficoms
popa
push
mov
jp
mov
cmpsl
gs
and
shl
sub
dec
mov
and
stos
ret
xchg
test
sub
push
xchg
add
mov
push
pop
cltd
or
mov
fst
pusha
add
sbb
adc
out
mov
inc
insb
pusha
jmp
hlt
pop
xchg
nop
and
mov
shl
les
dec
jmp
push
das
mov
adc
out
imul
in
es
cs
pop
pop
pop
pop
and
pop
dec
imul
loopne
jns
inc
lcall
mov
sbb
mov
mov
xchg
jb
daa
test
sarl
jns
shlb
aas
push
test
jmp
popf
push
adc
loopne
data16
loope
push
cmp
lret
cs
bound
cmp
lret
add
vcmpsd
aam
insl
pop
cwtl
shlb
int3
bound
and
nop
sub
pop
daa
cmpsl
mov
xlat
or
or
outsl
jmp
dec
cs
xchg
movsb
shll
or
nop
pop
je
mov
or
lret
cld
xchg
inc
push
pop
test
push
pop
mov
movsl
mov
repz
push
cmp
test
cmp
sub
loope
add
lahf
push
jno
test
sub
imul
test
cmp
add
cmpsl
pop
ja
mov
out
ljmp
sub
pop
cmp
sub
pusha
inc
lsl
mov
pop
mov
outsb
imul
in
xchg
js
cvtps2pi
rcll
xchg
fisttpll
jmp
sub
popa
lret
jbe
je
hlt
add
xor
sub
test
clc
mov
scas
test
sarb
cwtl
cmpsl
movsl
adc
in
inc
in
js
adc
mov
outsl
inc
addb
push
jmp
wbinvd
inc
test
andb
gs
xchg
decb
inc
test
and
test
les
imul
lods
arpl
add
push
fnstenv
jecxz
adc
in
inc
push
pop
xchg
mov
pop
and
dec
lcall
xor
fstpl
imul
jecxz
inc
lods
js
shl
loop
pop
push
sub
mov
push
adc
scas
in
jb
out
push
pop
cmp
mov
mov
decl
aaa
je
cwtl
enter
mov
xor
adc
mov
xor
lock
pop
aad
lea
sahf
add
mov
pop
test
inc
cmp
adc
repz
mov
push
fsubs
jmp
bound
neg
stos
dec
jecxz
adc
mov
adc
push
out
mov
clc
jne
hlt
pop
out
bound
icebp
cmp
mov
test
xchg
gs
mov
sbb
rol
cmp
push
inc
movsl
cmp
popa
out
enter
jae
test
roll
push
push
sub
loopne
sahf
fistpl
add
xchg
pusha
pop
in
popf
push
mov
fstp
lahf
xchg
lcall
xchg
test
and
mov
test
leave
jle
les
sbb
mov
pop
mov
adc
loope
or
inc
pop
bound
cli
adcl
xor
test
jg
std
ss
mov
dec
cmp
jb
xchg
les
push
sarl
test
pop
pop
or
adc
notb
testb
jns
sbb
enter
rcl
loope
mov
adc
dec
addr16
jb
cmpsl
xor
fnstsw
pushf
lock
outsl
ljmp
cmp
clc
jmp
out
arpl
out
adc
sub
sub
mov
and
das
mov
loope
sbb
mov
nop
dec
push
hlt
into
je
jbe
push
mov
and
sub
iret
out
sub
lock
lods
cmp
je
xor
add
sbb
inc
cmp
jge
mov
cmp
cwtl
adc
mov
mov
fmull
fmuls
xor
pop
insb
ljmp
lock
mov
mov
imul
ret
dec
cld
mul
les
cmp
sub
lahf
orb
push
test
out
je
imul
or
into
mov
mov
jb
dec
inc
sub
adc
movsb
mov
dec
cwtl
std
xor
pop
cmp
mov
or
stc
leave
lcall
sbb
mov
aaa
mov
pop
push
lods
in
outsb
adc
sbb
in
sub
pop
jg
xchg
mov
cmc
push
insl
jno
jno
push
add
frstor
cmc
iret
cmpl
setns
mov
cmpsb
hlt
push
cmp
fsubp
pop
clc
lret
daa
sahf
xchg
aad
jns
xor
sbb
cs
cld
adc
icebp
mov
and
mov
in
in
les
rcll
loope
nop
xchg
in
lcall
push
sbb
test
mov
mov
push
std
adc
sbb
mov
dec
stos
lahf
jnp
fstpl
mov
rcrl
mov
or
pop
jp
pop
int
mov
in
pop
sub
icebp
test
dec
mov
dec
mov
inc
fs
popf
inc
jns
adc
sbb
imul
testl
dec
mov
mov
js
or
and
out
pop
cmp
and
sbb
push
rcr
int
mov
jne
mov
adcb
fisttpl
jb
clc
shl
cmp
ljmp
js
leave
cmc
decb
jnp
pop
test
mov
test
daa
jb
adc
push
gs
and
cltd
aaa
lods
adc
jle
shl
div
dec
mov
sarb
or
cltd
pop
loop
push
pop
mov
add
test
mov
dec
imul
decb
xchg
ror
mov
cltd
lock
int3
pop
fiadds
je
inc
lock
fisubrl
mov
mov
mov
sub
stos
jp
cmp
std
lods
stos
pop
clc
shlb
pop
sbb
xchg
enter
es
scas
fisttps
lcall
mov
sti
test
inc
jb
pop
out
mov
stc
add
adc
sub
push
xchg
mov
mov
outsl
flds
jmp
ret
xchg
popa
les
ljmp
ret
shl
fstpt
repz
adc
add
xchg
or
sbb
mov
xchg
xor
pop
mov
mov
scas
rcr
je
sahf
sti
sbb
and
mov
je
dec
sbb
cmp
fldenv
mov
cs
faddl
pop
cltd
mov
pop
setp
sarl
mov
sub
movsl
int
lret
inc
xchg
cmc
xchg
inc
jl
pop
insl
mov
add
mov
pop
loope
stos
cmc
adc
filds
jecxz
cmp
push
mov
bound
mov
mov
add
mov
data16
rorb
lods
cld
push
enter
insl
adc
push
pop
xor
out
lret
cmc
test
xlat
inc
cld
daa
sbb
outsl
push
in
xchg
lods
insl
cwtl
and
pushf
cltd
mov
or
dec
and
les
jb
dec
or
loope
mov
mov
adc
fsubrs
mov
jae
xchg
fidivrs
cmp
mov
jns
xchg
pop
push
mov
xor
inc
mov
mov
test
push
add
mov
nop
repz
out
in
insb
mov
jp
ss
inc
sbb
data16
adc
negl
dec
popf
test
and
stos
xor
shrb
cmp
shll
inc
scas
mov
in
mov
push
mov
insl
paddq
in
sahf
xor
notl
jg
mov
out
jb
push
adc
test
and
mov
cli
pop
ret
sti
cmp
call
mov
pop
adc
mov
aaa
xchg
test
jmp
arpl
outsb
or
adc
xchg
sbb
mov
fwait
push
mov
cmp
jns
shlb
sarl
rcrl
in
loop
mov
push
jo
fnstenv
xor
sub
das
add
pop
mov
je
cs
into
pop
push
mov
pusha
xorl
mov
gs
mov
aas
mov
filds
cltd
xchg
or
add
sbb
sbb
adc
push
stc
neg
pushf
out
lods
sub
sub
push
mov
mov
repz
jae
mov
cs
test
sub
cmp
or
frstor
pop
cmp
push
pop
roll
jp
loop
push
jl
sarb
lds
cmp
aas
inc
mov
sbbb
inc
mov
bound
xlat
jl
hlt
repnz
inc
xchg
aam
xor
mov
cmpl
jmp
test
cvtpi2ps
inc
sub
mov
xchg
push
fadds
fsubrs
lods
and
fisttpll
push
or
movb
pushf
sbb
nop
int3
adc
movsb
stos
lds
and
clc
push
pop
xchg
cli
js
jge
divb
or
jbe
add
scas
into
mov
push
xchg
mov
mov
mov
aas
push
pop
outsl
outsb
cmp
push
andl
mov
dec
xor
jle
push
mov
xchg
lds
jmp
xchg
jno
rorl
in
xor
fmul
push
jg
daa
mov
and
add
in
bound
jl
jmp
dec
arpl
or
repz
lret
mov
imul
sub
fwait
es
pop
cmp
or
int3
and
fs
mov
js
jecxz
ret
dec
adc
rorb
pop
nop
stos
lds
daa
dec
mov
xor
cmp
mov
in
push
shr
imul
inc
aad
inc
jae
aad
lahf
dec
sti
push
scas
inc
or
dec
cli
js
add
or
testl
addl
push
jle
popa
lods
gs
sti
push
rcl
mov
adc
mov
xchg
cld
in
jb
out
aam
sahf
setb
clc
xor
stos
bound
push
adc
scas
int3
pushf
dec
stos
add
jg
dec
pop
inc
jo
out
pop
stos
xor
out
add
sbb
mov
inc
lahf
mov
in
jnp
and
rorl
pushf
jmp
xlat
in
and
dec
mov
sbb
aaa
cmp
movsb
pop
lahf
push
jo
test
mov
fwait
jmp
shlb
add
int3
out
push
pop
inc
sub
push
mov
xor
xorb
xchg
or
mov
jge
add
push
cld
loop
sbb
dec
pop
lock
sub
movsl
iret
and
pop
xchg
inc
and
push
cs
fldl
or
bound
das
mov
inc
lcall
ret
mov
and
outsl
mov
push
sbb
int
push
dec
movsl
jno
loopne
orb
ret
js
mov
or
or
xor
ljmp
push
fidivrl
push
push
rolb
lds
mov
lahf
fcomps
mov
test
fidivrl
jmp
fsubl
loope
test
test
pop
or
adc
ja
and
scas
into
pop
xor
loope
mov
dec
add
loopne
movsl
xor
push
push
sbb
lahf
pop
fyl2xp1
xlat
and
jp
and
outsl
fimull
insl
cmpsl
adc
cmc
mov
xor
cltd
mov
addr16
outsb
adc
in
sbb
or
js
mov
sub
push
lock
inc
mov
ror
xchg
loope
adc
sub
lods
rclb
fimull
jmp
inc
dec
sub
pusha
test
cmp
mov
pop
or
adc
imul
jg
out
ds
pushf
pop
ds
inc
insl
push
mov
aas
outsl
push
mov
jno
psadbw
or
mov
adcb
mov
sbb
in
inc
dec
iret
mov
xchg
mov
dec
push
and
push
fcomps
nop
out
inc
mov
mov
push
mov
and
xchg
movsl
pop
cmp
cwtl
sub
mov
lea
inc
inc
ret
lahf
roll
leave
test
xchg
fstps
outsl
sub
pop
repnz
and
out
pop
push
fldl
push
lret
or
dec
mov
push
sbb
loopne
inc
stos
lret
dec
movsb
jno
lcall
dec
push
or
div
ss
dec
movsl
mov
add
or
imul
push
sbb
mov
stos
sbb
out
xchg
mov
test
jo
leave
push
insb
clc
push
leave
xchg
out
xchg
adc
push
popa
adc
inc
pop
dec
push
sbb
mov
jb
insb
lret
jg
push
test
es
cmp
enter
add
lds
daa
and
mov
stc
arpl
lahf
jl
cmp
mov
addr16
mov
mov
stc
cmp
lret
sub
adc
mov
mov
adc
mov
in
orl
mov
inc
mov
iret
movl
dec
cs
lods
adc
xchg
outsl
lods
sub
mov
jnp
xor
cltd
fsubrl
sarl
mov
push
or
jae
nop
imul
or
sbbb
inc
fcoms
add
mov
jle
xor
cltd
cmp
js
out
push
xchg
xchg
in
and
adc
jg
fisubs
and
lret
mov
movsl
sub
ret
dec
adc
fisubrs
aam
xchg
inc
sbb
adc
movsl
cmp
outsb
loopne
test
popf
cmp
or
adcb
sub
fdivr
imull
cmpsl
fistpll
ds
mov
mov
add
aaa
mov
divb
push
pop
mov
fs
push
movsl
and
adc
daa
mov
jo
loop
pop
or
and
jmp
loopne
ret
clc
dec
les
sub
cmp
rcrl
shrl
inc
cmpsl
cwtl
vaddss
fisubrs
xor
inc
clc
test
dec
test
pop
fdiv
push
add
xor
dec
xchg
sub
lds
mov
lret
and
mov
sbb
fisttps
push
push
cmp
xchg
cmpsb
sub
push
cmp
or
mov
inc
inc
jo
lock
pop
popf
pop
adc
push
int3
shr
sub
loope
in
inc
sub
shlb
ret
out
mov
repz
data16
inc
mov
enter
sti
stos
sub
xor
adc
ret
sti
fstpl
dec
cltd
jne
je
xchg
push
movsb
push
pop
mov
dec
mov
icebp
movsl
mov
and
sub
int
cmp
fidivl
jae
pop
test
popf
xchg
ds
push
sub
notl
es
into
or
mov
xor
nop
push
mov
fcmove
out
add
and
sbb
mov
dec
stos
fwait
mov
in
mov
test
fistpl
cmp
sub
outsl
pop
or
push
mov
push
jb
sub
lret
jl
jno
std
popf
out
add
mov
jno
aam
scas
outsl
int
push
leave
xor
aas
into
and
push
mov
das
test
fnstsw
mull
bound
jle
pusha
xor
cld
add
mov
jecxz
aas
sbb
movsb
pop
sbb
and
ss
push
inc
cmp
or
cs
cmp
jl
enter
xor
add
mov
jae
arpl
fistpll
pop
mov
das
or
incl
loop
fisttpll
mov
mov
cmp
and
pusha
mov
out
xchg
ret
mov
nop
mov
pop
or
mov
in
pusha
fwait
shll
mov
negl
in
fstp
jl
dec
pmuludq
icebp
or
push
or
ja
aad
inc
jae
dec
out
push
mov
xor
lods
mov
or
xlat
test
sbb
je
ficoml
jl
insb
cwtl
outsb
xchg
sub
test
mov
iret
mul
popf
fnsave
pop
leave
push
lea
int3
icebp
xor
mov
sbb
and
mov
shr
jmp
int
ja
mov
pop
dec
push
stos
ss
mov
mov
jg
add
aam
xchg
lea
or
test
mov
pushf
add
and
jns
pop
xor
sub
fdivrl
push
sbb
repz
sti
xor
shrb
cld
add
lods
or
cltd
jne
xorl
insb
ret
and
xor
push
sub
inc
clc
sbb
push
jo
daa
cmp
ret
mov
in
push
jnp
mov
mov
add
jmp
or
cmp
inc
divl
pop
jo
out
loope
xchg
push
movups
jecxz,pn
popa
loopne
and
dec
lret
aaa
adc
mov
lret
fs
daa
cmp
xor
mov
mov
ja
mov
je
mov
xor
mov
push
and
inc
sbbb
sar
pop
dec
std
clc
enter
adc
mov
xor
xchg
and
sub
jo
and
pushf
pusha
adc
push
sub
ss
lods
sub
jnp
dec
or
scas
fsts
roll
scas
add
cli
dec
cmpsb
push
inc
mov
dec
sbb
imul
lahf
push
insl
test
xor
mov
clc
ljmp
mov
cmovge
push
mov
std
xor
push
lea
jnp
sahf
nop
pop
fnstsw
shlb
pop
mov
in
dec
push
rcr
add
out
xor
cs
sbb
ss
push
xlat
icebp
out
rdmsr
data16
popa
in
pop
xlat
jg
fidivrs
movsb
and
out
xor
or
cld
outsw
test
inc
cmp
shll
lea
xor
imul
out
mov
xchg
push
sbb
push
outsb
lods
insb
cld
jae
xchg
add
lret
sbbb
mov
push
sbb
icebp
and
dec
adc
dec
dec
xor
in
dec
fcomip
xor
push
jne
fidivrl
pop
xchg
daa
popf
subb
inc
or
pop
out
sbb
pop
les
lds
lock
fwait
sbb
mov
lods
inc
cmp
push
stos
add
xchg
scas
scas
xor
andl
push
loopne
adcb
adc
push
and
out
cmc
or
mov
mov
daa
sub
aad
imul
repz
xchg
dec
daa
je
push
aad
add
push
test
dec
mov
int
push
pop
or
in
ret
mov
mov
ja
inc
xorl
xchg
xorl
ds
imul
cmpb
stos
dec
and
shlb
inc
sub
mov
ljmp
in
inc
cmp
adc
in
cmp
push
sub
mov
loope
inc
pop
test
movsl
push
fidivs
les
arpl
mov
sub
lcall
cmpsb
hlt
in
mov
out
push
mov
jae
cmp
sbb
push
imul
pushf
jne
sbb
sub
rorl
mov
in
xor
pop
cmc
ja
inc
subb
push
cli
sbb
rclb
insl
adc
shll
dec
push
popa
stos
fdivl
sub
lcall
hlt
mov
cwtl
cmp
dec
inc
cld
cmp
and
in
mov
ret
cltd
in
adc
pop
xor
fldenv
shl
arpl
mov
je
cmp
jne
mov
cli
int
xor
cmpsl
fdivs
icebp
adc
sahf
jbe
jb
pop
imul
icebp
subl
mov
jb
cli
fildl
jae
mov
stc
fistpl
mov
imul
xchg
adc
sti
aad
in
ficompl
pxor
and
push
data16
cltd
pusha
pusha
popa
jmp
hlt
lds
mov
mov
flds
aad
lea
mov
iret
cmc
mov
adcb
jne
adc
lret
push
push
shll
jb
push
ss
out
pop
cmpsl
pop
jo
mov
sbb
fsubr
dec
cmpsl
shlb
cmp
dec
push
dec
mov
jle
push
pop
cmp
fsubrl
ret
dec
ret
push
in
cltd
mov
pop
pushl
jne
mov
adc
fwait
sbb
out
hlt
push
jnp
popf
mov
iret
add
mov
cmpsl
pop
je
push
loope
outsl
lds
adc
mov
ret
add
outsl
test
inc
push
sbb
lea
cmp
cmpl
adc
inc
sbb
adc
call
fwait
stc
enter
pusha
mov
and
add
popf
pop
pop
fcomps
inc
mov
pop
mov
leave
add
mov
push
iret
xchg
icebp
lods
pop
inc
lret
xor
mov
sahf
or
jns
push
scas
jecxz
hlt
inc
in
adc
out
fisubrl
jle
mov
push
push
sbb
mov
mov
loope
jae
test
jmp
sub
add
imul
mov
jns
cmp
stos
mov
jmp
outsb
icebp
dec
adc
outsb
sub
fdiv
popf
ss
mov
mov
push
mov
xor
mov
xor
in
pop
test
mov
je
jmp
lret
imul
mov
loopne
not
xor
pop
fucom
aas
xor
imul
enter
pop
sbb
outsl
leave
cmpsb
jns
add
stc
adc
push
jno
pop
sbb
leave
sarb
cwtl
outsb
push
repz
fwait
push
mov
jne
aas
and
push
mov
jle
cmp
lock
jmp
push
stos
sub
jo
out
sti
mov
sbb
adc
mov
mov
cltd
push
jmp
dec
mov
sbb
cmpsl
and
pop
idivb
mov
sbb
dec
mov
and
sbb
test
pop
mov
xorb
dec
popf
push
jns
push
rol
mov
sbb
xchg
fistl
rorl
popa
jmp
pop
add
dec
test
cmp
mov
jmp
in
push
cmc
pop
lcall
clc
rcll
xchg
clc
xorb
pop
stos
les
ret
insb
sahf
pusha
notb
xchg
test
and
pop
dec
cmpsb
push
mov
mov
shll
adc
sti
sub
out
hlt
loopne
arpl
iret
ficompl
subl
outsb
mov
push
sub
adc
pop
leave
arpl
popa
popf
insl
scas
bound
xchg
push
pop
xchg
sub
outsl
je
xchg
in
ss
aam
cmp
and
pusha
shlb
push
push
int3
icebp
das
fsubl
mov
lods
and
fldt
lods
mov
xor
pushf
stos
adc
xchg
aam
test
sub
fdivl
mov
iret
les
stc
jne
sbb
sbb
jmp
xor
cltd
loop
stc
pop
xchg
mov
arpl
popf
and
mov
repnz
or
mov
mov
outsl
aaa
ror
jb
fnsave
repz
cli
fisttpl
sahf
or
stos
outsl
add
aam
and
mov
jo
jp
rol
mov
clc
xchg
test
das
sub
xor
mov
dec
insl
jle
sub
push
cmp
cmpsl
adc
pop
mov
lds
and
nop
jo
jmp
add
add
and
cmp
and
and
push
dec
jne
jmp
dec
inc
add
mov
dec
jns
cs
cs
cmp
adc
xchg
sti
sub
mov
add
mov
or
scas
cmpsb
loopne
insl
mov
out
mov
lds
and
daa
enter
xor
ljmp
lock
jnp
call
mov
es
cmp
lcall
dec
push
push
ja
mov
or
adc
mov
mov
push
ja
xchg
fwait
les
xchg
xchg
push
inc
lret
mov
aas
fs
dec
xor
outsl
cltd
daa
orl
sub
pop
and
lea
sbb
and
add
lds
sti
stos
cmp
sbb
xor
shll
cmp
cltd
into
xor
fimull
mov
cwtl
xchg
push
test
out
adc
repz
cli
cld
adc
jmp
out
dec
inc
out
push
mov
adc
cmp
fsubrl
gs
push
ret
hlt
pop
bound
jmp
or
stc
inc
jae
cltd
cmp
push
mov
lret
enter
push
cmp
hlt
pop
ds
xchg
cmpsl
test
insb
nop
push
daa
shl
mov
pop
xor
xlat
imull
shlb
jmp
stos
dec
xor
mov
or
cmc
add
loope
push
lds
popf
push
or
push
sbb
les
mov
pop
adc
rol
pop
sbb
cmpsl
insl
int3
and
mov
outsl
dec
cmp
pop
push
adc
psubusw
scas
popf
xor
inc
jl
test
adc
cmp
fsts
inc
mov
sahf
test
pop
cmp
push
or
jge
aam
sbb
in
ret
sbb
jecxz
cs
sarl
lahf
dec
sub
jmp
cwtl
not
movsl
cmpsl
shll
xchg
cmc
fs
xchg
pop
add
enter
mov
lret
in
sbb
aaa
sbb
dec
into
mov
sub
push
sub
sub
fstpt
aaa
inc
inc
push
push
mov
std
jnp
les
sbb
stos
repnz
test
icebp
shl
in
mov
dec
dec
push
jecxz
or
aad
mov
or
decb
js
icebp
and
sahf
pop
rclb
sbb
decl
popf
push
add
cld
and
mov
lock
cmp
rcl
cmp
xchg
mov
jne
cmp
xor
ja
cld
jmp
push
dec
das
add
sbb
mov
or
inc
lcall
add
xor
push
sahf
dec
fsubrp
sub
das
pop
call
lods
pushf
lods
inc
mov
jbe
pop
and
mov
dec
jmp
idivl
mov
sbb
inc
scas
cli
outsl
scas
xchg
and
leave
outsb
inc
inc
xchg
add
inc
cmc
inc
sbb
pop
inc
sbb
loop
dec
paddw
xchg
add
mov
aad
xor
jmp
mulb
sbb
addr16
loopne
mov
cli
inc
mov
ficomps
mov
clc
add
pop
shll
and
cwtl
mov
test
or
mov
mov
adc
psubsw
test
or
mov
pop
mov
ficompl
and
mov
xchg
mov
sub
lds
ss
cmpsl
jmp
movsb
push
inc
jbe
push
loope
je
rolb
mov
out
cmp
enter
dec
cmpsb
and
cmp
ret
popa
push
mov
out
in
ja
jge
sub
daa
push
pop
repnz
outsw
push
imul
mov
in
pop
rcrl
outsb
in
xor
sbb
ret
andb
push
movsl
mov
stos
push
jnp,pt
jecxz
cmp
mov
shll
sbb
mov
cmpb
xor
dec
jne
pop
int
cmpsb
dec
inc
ret
pop
jg
sub
js
fnstcw
or
fsubrs
movsl
jp
js
jb
mov
mov
aaa
inc
or
popf
jb
mov
push
adc
les
mov
dec
jae
clc
mov
lcall
cmp
pop
das
push
mov
or
test
pop
push
cs
es
out
cmp
push
adc
sti
mov
cmp
lock
out
lret
inc
jno
or
sbb
mov
loope
and
and
fldl
jb
pop
in
sub
pop
dec
push
daa
sub
loope
in
or
clc
xor
cmp
int
insb
movsb
loopne
aas
lcall
inc
shlb
dec
inc
lock
addr16
jge
dec
pop
mov
mov
cmpsl
jo
repz
movsb
xchg
push
jg
jp
cmpsl
cltd
xchg
in
jno
and
pop
lods
loopne
aam
popf
mov
or
add
popa
ret
cmpsb
push
and
aad
hlt
std
xor
cmp
mov
push
sub
add
call
adc
popa
dec
movsb
lret
lds
cltd
and
bswap
xor
and
pop
mov
sbb
sub
adc
cltd
jl
mov
xchg
mov
jle
pop
push
push
ljmp
lret
jno
aad
jle
dec
jnp
enter
pop
add
fstpl
mov
aam
mov
mov
push
into
cmp
xor
ja
mov
in
pop
or
mov
or
pop
push
push
ret
lret
sbb
jl
pop
cmp
xchg
inc
lock
movsl
mov
or
aad
loop
aad
cmc
jg
into
sbb
mov
sbb
clc
cmp
adc
aas
pop
les
cmp
dec
je
dec
pop
rolb
xor
xor
cmp
adc
mov
mov
sti
shll
imul
jle
pop
inc
add
repz
popa
dec
repnz
and
loopne
mov
jl
shlb
test
cmp
mov
pop
js
jle
test
lcall
mov
lret
aaa
std
inc
cltd
stos
or
cwtl
sti
mov
adc
sbb
jo
sub
insl
jge
stos
mov
xor
into
jbe
popf
in
xchg
fs
inc
adc
ljmp
inc
or
movsb
rcrl
dec
dec
mov
push
js
mov
push
xchg
jo
xchg
sub
jnp
shl
sti
push
daa
mov
inc
icebp
outsb
xor
pop
dec
je
cmp
cmp
es
adc
pop
imul
sbbb
xchg
pop
mov
scas
mov
cs
movsb
in
scas
std
pusha
movsb
push
out
cmp
push
lcall
mov
outsl
and
ja
daa
repz
daa
mov
and
ja
pusha
fnstcw
or
sbb
lds
mov
jno
xchg
js
dec
leave
iret
nop
pop
mov
lods
out
inc
mov
add
loopne
test
das
sahf
and
inc
inc
repnz
ror
lea
mov
jns
fistps
jl
dec
xor
pop
shl
movsl
jmp
xor
loopne
pop
cmp
inc
aam
mov
scas
divl
dec
inc
adc
sub
rorl
mov
pop
xchg
xchg
jp
xchg
jns
test
scas
in
sub
unpcklps
push
inc
out
sarb
pop
pop
cwtl
jecxz
movl
loopne
xorb
xor
sub
pavgb
mov
cwtl
insb
dec
insb
in
adc
fcomp
mov
jecxz
jo
shlb
add
ljmp
pop
stos
cmpsb
xchg
mov
jp
cmp
pop
dec
loope
aam
xor
jb
lods
mov
data16
and
inc
or
mov
push
into
mov
nop
mov
push
adc
out
ds
mov
jae
push
cmp
jecxz
ret
addr16
sub
mov
mov
imull
cltd
ds
cmpb
sbb
popa
rcll
inc
test
inc
testb
out
adc
push
movsb
sbbb
test
push
add
sar
xchg
cli
ret
js
loopne
cmp
fldt
pop
ja
mov
loop
aad
cmp
in
lods
jmp
pop
xor
dec
sahf
jbe
es
cmp
push
insl
aaa
jo
sbb
test
adc
jo
push
test
out
xor
cmp
xchg
jns
adcb
push
push
push
ret
stos
dec
mov
fwait
xchg
sbb
jno
xchg
cltd
mov
jmp
add
sbb
jp
pop
gs
lock
or
call
popa
sub
mov
sub
outsl
xor
pusha
in
shrb
jb
aaa
pop
push
ficompl
mov
jp
pushf
fnsave
mov
or
scas
mov
xor
lahf
cmp
or
xchg
and
sti
dec
add
jns
xchg
xor
sub
cvtps2pd
ds
lods
fs
leave
fs
movsl
jle
sbbl
push
xor
outsl
insb
jae
xlat
les
xlat
jns
xor
cld
adc
sahf
test
dec
xchg
neg
sbb
cmp
ret
je
pop
pushf
lea
add
or
push
push
xchg
imul
jecxz
cmpsl
subb
dec
shlb
pminsw
dec
cmp
scas
aaa
fisubs
jae
and
xchg
and
cwtl
mov
sub
ja
push
ret
pusha
dec
push
cmpl
adc
xchg
arpl
pop
sbb
add
jbe
cmpsb
push
daa
sbb
mov
sbb
add
push
xchg
lock
fadds
xchg
loop
into
cmp
jne
hlt
filds
aaa
xchg
and
fbld
fiadds
ja
hlt
das
mov
add
inc
orb
sbb
addr16
mov
push
mov
rcrb
push
or
fisubl
clc
cmpsl
mov
xor
rorb
mov
adc
xor
push
rcrl
push
inc
mov
lret
imul
jbe
or
jns
sub
loope
fsubr
stos
dec
mov
push
inc
inc
jecxz
in
push
add
aad
call
cltd
xlat
insb
sbb
mov
or
xchg
add
aad
daa
je
mov
jle
inc
xor
nop
push
outsb
add
cmc
stos
sub
mov
xor
mov
mov
sbb
and
inc
aas
pop
out
out
insb
movsb
cs
adc
js
inc
dec
xchg
xor
adc
dec
and
stc
in
leave
imul
ror
leave
cmp
rdpmc
subb
pop
insb
leave
pop
jmp
push
pusha
lods
or
rcrb
repnz
js
movsl
leave
pop
insb
out
push
call
pop
subl
shll
inc
ss
fs
pop
lock
xor
lods
jmp
popa
into
pop
mov
xchg
sbb
sub
dec
jl
hlt
cmp
fcomps
mov
ret
daa
roll
push
aas
jg
cmp
fstpl
pop
xchg
dec
cltd
cmpsl
loop
add
xchg
cmpsb
cmp
and
sahf
xchg
lret
cmp
sti
cmp
es
mov
std
ficoms
sub
rcrb
test
jae
hlt
test
lret
les
lahf
pop
in
lcall
ret
pop
lret
jns
pop
or
xchg
adc
xchg
add
hlt
cli
and
imul
add
icebp
fistpl
arpl
out
imul
pop
xor
ds
push
mov
aaa
xor
mov
push
xor
add
mov
add
cmp
push
fsub
adc
mov
lcall
fnstcw
cltd
clc
into
inc
cli
mov
push
adc
sbb
fs
or
mov
loope
stos
cltd
notb
and
aaa
xor
inc
xchg
adc
cmpsl
pushf
adc
inc
clc
fsubp
cmp
pop
mov
push
xor
aaa
jne
push
dec
insl
push
cmpsl
xchg
push
fiaddl
xor
sub
dec
outsb
mov
pop
sahf
push
rorl
dec
xchg
ja
scas
xor
inc
add
cmp
scas
ret
mov
push
in
add
dec
dec
cwtl
out
or
outsb
sub
xchg
out
xor
pop
xlat
rcll
jbe
movsl
push
xchg
or
dec
push
mov
inc
pop
icebp
test
mov
movsb
dec
out
mov
adc
pop
ret
xchg
imul
rorb
xchg
outsl
fcomps
xchg
loopne
sub
mov
fwait
xchg
addr16
iret
rcrl
dec
aad
mov
daa
scas
mov
xor
loope
test
push
adc
sbb
sub
pop
es
mov
pop
push
xchg
lds
scas
xor
loopne
push
cli
jecxz
ret
jmp
mov
xchg
gs
scas
out
sub
xchg
sbb
push
xchg
movl
mov
jmp
push
out
mov
ljmp
dec
lock
icebp
mov
pusha
lahf
ja
stos
ss
cmpsl
add
xor
psraw
jl
sub
jbe
shll
mov
sbbl
je
shrl
repnz
inc
mov
in
movsl
xor
pop
scas
ljmp
adc
sub
or
lahf
push
daa
jl
mov
mov
push
ss
push
lret
fs
fidivl
pop
mov
outsl
ret
out
aam
fistl
or
and
push
mov
iret
ret
cwtl
lcall
cld
adc
ret
in
les
movsl
cmp
icebp
mov
push
mov
pop
pusha
nop
rorb
xor
mov
inc
jnp
fnstenv
mov
testl
rorb
sub
mov
addr16
inc
fldenv
in
jle
scas
inc
cmpsl
inc
cld
inc
out
bound
loope
and
jg
and
out
rolb
jmp
sbb
repnz
xor
pop
mov
jo
decl
andb
data16
cltd
lds
pop
data16
and
fwait
pop
or
insb
jnp
into
and
sbbb
clc
aad
es
add
mov
jne
cwtl
mov
das
popa
and
cmp
sbb
mov
add
lahf
inc
fs
mov
repnz
cmpsb
add
mov
aas
jbe
imul
jmp
test
fcompl
bound
sub
addr16
mov
fnstsw
fcompl
scas
adc
mov
arpl
adc
xchg
push
adc
fwait
or
add
in
mov
pop
mov
iret
gs
push
jno
cli
daa
dec
or
push
pop
int
shl
mov
sub
repz
push
xor
mov
rolb
add
mov
shl
in
lcall
repz
fcmovnu
decl
popa
sub
xor
adc
pop
popf
fldln2
daa
push
xchg
lret
aam
imul
pop
icebp
mov
sub
cmp
lea
xor
movsl
and
sbb
inc
movsl
adcl
in
stc
mov
push
cld
nop
ret
aam
insl
xor
lahf
scas
jae
stos
xlat
mov
xor
sbb
loop
mov
cmp
inc
ret
sub
adc
xchg
rcl
cli
inc
xchg
popf
cmp
inc
outsl
jge
jp
mov
add
pop
jmp
sahf
pop
adc
sub
pushl
nop
jae
jo
clc
xbegin
xchg
pop
scas
push
shl
jo
jbe
mov
test
mov
fnstsw
shlb
xchg
stos
lea
or
jno
fdivr
roll
pop
in
sub
popa
outsl
in
xlat
bnd
repnz
jl
rcll
cmp
shlb
out
inc
and
shlb
mov
jmp
fisubrs
or
xlat
adc
inc
mov
data16
nop
mov
sub
add
jns
in
jmp
mov
mov
cwtl
aaa
ret
ja
dec
xchg
xorl
and
sbb
sbb
aam
sbb
shlb
jbe
lret
repnz
pop
xor
push
or
lock
out
dec
adc
stos
fsts
lret
sbb
fucomp
mov
xchg
sub
pop
out
mov
ret
inc
mov
repnz
add
and
fcompl
inc
dec
mov
outsl
push
hlt
js
sarl
pop
popaw
stos
subl
jle
add
lret
pushf
jnp
je
xchg
pop
and
jl
addr16
push
out
jnp
outsl
pop
mulb
mov
rolb
add
cmp
push
pop
add
pop
mov
xchg
mov
cmpsl
das
js
lahf
inc
mov
mov
pusha
in
push
movsl
addr16
sarb
cltd
in
xchg
aaa
cmp
cmp
les
sahf
mov
push
daa
push
xchg
or
clc
mov
mov
xchg
mov
leave
xchg
xor
aas
ret
or
push
fwait
es
sahf
mov
int3
pop
test
inc
test
mov
sbb
sub
pop
mov
jne
inc
xchg
mov
push
jg
fsubrs
jl
pop
push
cmp
and
adc
jmp
bound
pop
cmp
les
mov
mov
add
jle
out
sbbb
lcall
stos
jle
push
cwtl
lret
inc
dec
lahf
stos
jge
jmp
push
mov
cmp
fbld
inc
xchg
loopne
jge
pushf
lea
cmp
mov
push
cmpb
cmp
xchg
mov
mov
pop
xchg
jnp
jle
jns
idivb
movsl
and
repnz
pop
daa
stos
xchg
sub
mul
testl
bnd
mov
jge
mov
sub
jae
sub
and
loop
xchg
insl
clc
cmp
shrl
lds
xchg
jne
jge
mov
sbb
push
or
int3
dec
mov
ds
cmp
cmp
int
jge
popa
sbb
inc
lods
mov
ret
xchg
xchg
cmp
pushf
xchg
out
xchg
out
inc
and
aas
adc
and
push
add
int3
repnz
pushf
mov
std
xchg
lret
sub
sub
ljmp
je
arpl
cs
dec
push
cli
iret
adc
or
pop
sub
movsb
adcb
fmul
test
data16
add
fucom
xor
pop
imul
pop
pop
xchg
frstor
fcmovbe
ljmp
push
fisttpll
and
inc
push
mov
nop
sarl
xor
out
pusha
xor
add
loope
sbb
xorl
add
popf
dec
movsl
inc
in
dec
push
es
xor
notb
dec
mov
lods
in
cltd
in
sub
mov
sbb
sbb
data16
insl
and
xchg
lret
aam
call
ss
in
and
push
xchg
jge
sbb
or
shrl
rorl
dec
and
jle
mov
aad
pop
jo
sbb
jo
mov
iret
outsl
push
lock
push
shlb
popa
js
lret
sub
jb
mov
sub
mov
test
ja
sub
inc
aad
int3
aas
fildll
jno
cmp
inc
test
shll
push
mov
jmp
fcoms
or
jp
rorl
push
dec
fwait
mov
test
aam
adc
out
shlb
add
or
mov
mov
add
inc
sbb
insl
jge
and
adc
or
lods
mov
idivl
add
fcmove
lcall
and
sbb
addr16
out
cmc
in
loope
sbb
or
adcb
inc
leave
inc
mov
jp
popa
jg
cmp
jp
jg
inc
mov
mov
ja
jg
fistl
xchg
jne
cmp
jg
cmpb
test
mov
sub
mov
xlat
sahf
sub
mov
stos
rorb
adc
xchg
add
arpl
xor
rol
cmpsl
out
xor
mov
and
jl
or
lds
ljmp
xlat
mov
jg
ja
in
adc
pop
jmp
mov
dec
fistl
jns
loopne
jp
push
lods
inc
jmp
leave
insl
adc
jge
push
lahf
adc
pslld
dec
test
scas
lods
pop
inc
lea
cltd
sub
outsb
xor
out
or
push
sbb
xchg
push
outsl
push
xchg
nop
cmpsb
sahf
pop
sub
mov
stos
dec
pop
xor
movsb
push
inc
cwtl
pop
inc
mov
dec
rol
mov
jns
loop
jge
xchg
loopne
fsubl
add
xchg
cltd
mov
mov
les
andb
cld
aaa
lds
push
dec
out
sub
jmp
shlb
clc
lds
mov
or
xchg
rclb
pushf
inc
mov
push
les
mov
aad
test
stc
and
fiadds
mov
cwtl
mov
xor
int
xchg
or
lcall
pop
aas
popa
in
imul
pushf
rclb
popf
mov
or
mov
je
lods
leave
arpl
inc
insl
jl
jmp
nop
or
in
push
cld
and
mov
in
mov
out
cld
movl
aas
lea
mov
mov
lret
mov
add
jae
dec
scas
rcll
data16
push
and
out
push
sahf
mov
xchg
ror
lret
sub
sub
or
out
inc
mov
push
rcll
pop
sbb
pusha
cmp
aam
sbb
stos
mov
sbb
xlat
fiadds
and
test
fbstp
gs
jle
xor
jae
div
mov
in
call
outsb
mov
dec
cmpsb
scas
insl
inc
rorl
pop
aaa
pop
add
mov
mov
jae
nop
popa
pop
lret
push
shr
jle
in
lock
popf
daa
orl
add
loopne
cwtl
adc
sbb
je
adc
mov
arpl
cli
pop
push
mov
mov
in
fisubrl
and
ja
sub
xlat
pop
mov
cmp
std
cmp
cmc
add
mov
mov
mov
pop
in
imul
movsb
mov
pop
in
mov
mov
out
pop
push
fisttpl
repnz
lahf
fnstcw
adc
sarb
mov
pop
sub
mov
push
enter
shll
imul
rcrl
in
or
xchg
xchg
lock
imul
ljmp
movsl
push
xchg
movzbl
mov
fwait
mov
sub
test
xor
and
nop
xchg
hlt
mov
nop
es
les
pop
pop
enter
mov
push
subl
push
dec
js
sbb
sarl
cmpsl
gs
faddp
push
fs
fcoms
sbb
adc
cmp
out
sub
mov
jns
fs
mov
sub
mov
inc
mov
pop
sbb
push
mov
dec
in
lods
push
je
push
xchg
sti
outsb
cmpl
jge
mov
out
scas
call
test
jg
leave
or
xorl
fists
mov
adc
stc
jno
xchg
aad
inc
cmpsb
push
dec
pop
cmpsl
xor
dec
sub
es
mov
ret
leave
pop
push
inc
es
sbb
xor
and
pop
mov
stos
pusha
stc
fidivrl
inc
inc
mov
es
clc
insb
cmpsl
xchg
sbb
xchg
or
mov
jo
fs
je
inc
xor
movsb
sbb
inc
movsl
inc
enter
jecxz
jns
xchg
dec
cmp
ljmp
idivb
pop
leave
mov
je
out
jle
out
out
xchg
mov
push
mov
cwtl
lock
std
fdivr
popf
out
sarb
or
les
cli
lahf
ret
or
data16
aad
cs
mov
xor
xor
dec
sub
dec
jg
fdivrs
push
sub
cmp
cmp
inc
cmp
or
xor
push
mov
mov
inc
push
rep
sub
repnz
add
shlb
fdivrs
cmpsb
xchg
movb
mov
mov
mov
lea
adc
pop
repz
std
adc
outsl
add
dec
ja
xchg
or
and
rol
fsubrs
mov
sahf
mov
rcrb
jle
stos
sbb
ret
inc
mov
pop
pop
into
add
sti
add
and
sub
pusha
fcmovnu
cltd
scas
dec
mov
in
push
jmp
stos
xchg
inc
pop
rcrl
cmp
popa
push
icebp
inc
mov
fdivrl
negl
xchg
cmp
cmc
jmp
xlat
repz
ror
mov
cmpsb
fs
mov
rcrb
inc
add
gs
lods
fwait
mov
xor
aad
or
cmpsb
fistl
adc
or
xor
adc
inc
mov
xlat
mov
frstor
cmpsl
lock
fucomip
pop
cs
or
lea
dec
aam
jnp
insl
xchg
and
mov
loopne
push
js
dec
and
and
cld
push
sub
push
call
cmc
sbb
and
test
sbb
xor
adc
xchg
lret
xor
movsl
mov
sbb
or
int3
lods
cmpsb
dec
dec
aam
iret
sub
push
mov
mov
test
insb
pop
xorb
js
jle
int
sub
push
dec
add
xor
pop
push
shrb
inc
scas
fs
push
insl
jle
cmp
pop
inc
mov
lods
pop
inc
push
xlat
dec
inc
and
add
mov
imul
dec
bound
inc
cmp
fsubl
sarb
adc
loopne
lret
out
xchg
xor
pop
xor
lods
add
jp
mov
pop
inc
and
or
cmp
in
add
outsl
xchg
cmpl
adc
sti
lock
shl
jno
cmp
jmp
data16
fwait
shrb
arpl
out
shl
inc
dec
shlb
outsl
jns
cmc
stos
call
xor
jg
stos
xchg
rolb
std
sarl
inc
lcall
jle
cmp
cmc
inc
mov
pusha
shll
or
sub
mov
lcall
fsubr
cmpsl
and
ret
push
pusha
and
sbb
daa
mov
or
xor
enter
mov
push
dec
aad
stos
sti
or
push
pop
mov
pop
adc
es
flds
movsl
out
mov
lods
arpl
and
xor
aaa
inc
cmpsl
xor
nop
movsb
stc
sub
and
jo
iret
lods
loopne
mov
lret
mull
jo
mov
cmc
pop
fisttps
loopne,pt
xchg
push
xchg
jl
dec
repnz
pop
xchg
jp
out
cmp
sbb
or
pushf
je
jecxz
push
mov
xchg
test
movsb
jp
lret
push
xchg
fildll
ja
mov
xchg
dec
push
sub
clc
mov
xchg
add
outsb
ss
xchg
dec
cmpsl
ss
push
inc
cltd
aam
mov
cltd
inc
xchg
lds
sbb
into
push
les
cwtl
ret
fcmovbe
in
mov
scas
lahf
shll
sub
cwtl
jnp
nop
jmp
outsl
mov
mov
repnz
jg
iret
push
mov
pop
mov
insl
jns
fcmovnb
lods
repz
insb
and
sbb
in
jecxz
fists
jg
popf
push
pop
sub
int3
mov
lcall
cmp
pusha
xchg
jb
xchg
icebp
mov
mov
gs
mov
stos
cli
mov
lods
mov
cltd
imul
lods
add
ljmp
in
mov
mov
out
rcrl
insl
or
sbb
incl
flds
sub
pop
add
push
and
mov
lods
xchg
stos
stos
add
cmp
xchg
pcmpeqd
sbb
push
cmp
and
and
lret
push
cld
pop
gs
inc
push
xchg
popa
xchg
pop
js
in
jl
cmc
inc
mov
lret
xchg
mov
cmp
push
out
ljmp
out
mov
jl
sub
sub
push
jno
stos
sbb
mov
dec
outsb
xor
mov
sbb
xchg
ljmp
ja
out
dec
cmpsb
movsl
iret
jmp
arpl
fcom
jo
cmp
add
lods
es
cltd
xchg
and
ret
and
xor
or
and
outsb
sbb
mov
scas
sub
xchg
adc
pop
cld
pop
pop
pop
orb
dec
cld
cmpsb
xor
jge
cld
les
mov
or
pop
fwait
sub
dec
out
mov
jns
lret
lahf
in
adc
int
ja
fsubrl
fwait
cmpsl
mov
cli
fldt
shr
addb
idivb
pusha
data16
xor
and
les
cli
mov
xchg
cwtl
xor
jbe
out
repnz
ja
bound
lahf
pop
outsb
aad
fimull
in
and
jb
jge
mov
jge
mov
adcl
arpl
jg,pn
jae
push
and
cmpsl
mov
mov
loopne
fwait
aad
mull
fsubrs
es
inc
into
jnp
call
dec
std
out
xchg
sbb
scas
or
cmp
test
push
outsb
mov
jno
sub
ret
in
pop
mov
icebp
nop
cltd
clc
outsb
push
lods
dec
roll
cwtl
jne
test
mov
out
aam
pusha
or
lea
push
sub
ud1
cmp
repz
push
cmp
xchg
pop
cli
sub
ss
bound
pop
mulb
lods
test
xor
hlt
xorb
stc
and
add
stos
les
stos
inc
or
jne
mov
movsb
sbb
jae
mov
mov
xor
pop
int
loope
lcall
and
xor
ljmp
sub
insb
or
jle
pop
or
leave
push
sbb
inc
movsb
xor
dec
dec
xchg
les
mov
aaa
dec
mov
mov
fistl
inc
scas
push
add
out
dec
movsb
mov
add
dec
ds
push
xor
mov
dec
and
jmp
dec
jmp
fildll
mov
push
fistl
xor
out
popa
fcomip
lock
mov
fildl
popa
sub
pushf
jno
pop
inc
test
xchg
mov
lods
insl
adcb
sub
loop
dec
outsb
fildl
js
lcall
pop
in
sub
xor
push
addl
je
push
cs
mov
inc
sub
xchg
lahf
dec
mov
jecxz
xchg
sub
adcl
dec
jl
push
adc
ret
pop
sbb
xor
lcall
and
lock
jb
cmpsl
int3
jg
mov
mov
cmp
lret
and
jae
cmp
push
mov
mov
and
and
or
push
popf
dec
mov
push
fistpll
test
outsb
add
mov
dec
inc
add
inc
push
cltd
pop
insb
cmp
insl
adcl
mov
call
mov
daa
xor
mov
jno
pop
pop
out
push
dec
xchg
fcomps
inc
in
ficoms
jp
mov
adc
rcl
mov
es
insl
or
add
inc
insb
arpl
imul
pop
inc
mov
jae
jo
lock
movsl
mov
dec
fwait
int
fnstsw
cmp
aas
clc
pop
sahf
and
adc
fildll
cs
repz
test
mov
decb
std
push
and
push
mov
sar
mov
ljmp
inc
popa
out
sti
adc
xor
stos
repz
xchg
jecxz
mov
aam
inc
es
cs
push
pushf
mov
loope
scas
xor
jmp
add
xor
iret
cmpsl
mov
lods
mov
mov
aad
and
pusha
adc
mov
mov
jnp
pop
jg
xor
fisttps
rorb
and
jge
outsb
xor
lret
dec
xchg
cmp
aad
stc
mov
in
ffree
je
inc
adc
sahf
aas
mov
fs
and
ljmp
jge
jnp,pn
lods
aas
mov
mov
mov
inc
pop
cwtl
daa
pop
cmp
jg
mov
mov
cmp
in
mov
mov
inc
lret
int
mov
sub
jge
and
js
cs
sbb
pop
cmp
mov
inc
in
cmp
add
cmp
sbb
cltd
xor
cmpsl
out
adc
jo
hlt
mov
aam
mov
pusha
pop
and
push
sub
pop
or
cld
push
ss
movsl
mov
iret
bound
lahf
cld
testl
push
sub
fsub
sub
loopne
mov
fnstsw
push
inc
or
cmp
aaa
cmp
gs
lahf
sarl
jbe
mov
fisubl
xor
adc
xchg
push
test
push
addr16
cld
jo
fimull
dec
std
add
push
push
mov
mov
stos
xchg
es
lahf
out
aam
mov
jbe
pushl
cmp
pop
lea
shl
lods
mov
pop
and
add
jecxz
iret
mov
cmp
fisttpl
ret
lcall
sbbl
jmp
sbb
xchg
sbb
dec
rsm
push
outsb
sbb
in
adc
pop
xchg
into
movsl
mov
int3
out
sbb
dec
cmp
adcb
xchg
clc
movsb
enter
je
dec
jge
pop
test
arpl
data16
sub
fwait
and
adc
bound
and
push
scas
mov
push
add
into
mov
xor
dec
sbb
inc
mov
stc
gs
ret
push
loop
jecxz
jg
aaa
les
pop
pop
pop
adc
repz
inc
addr16
sahf
popf
stc
pop
repz
out
lock
arpl
pop
mov
roll
cwtl
mov
or
test
sub
dec
orl
sbb
sub
jle
add
loopne
xor
movsb
into
popf
inc
or
sbb
aad
fcompl
cmp
jo
push
xor
jmp
inc
jo
lods
insb
outsb
mov
rorl
push
sti
jl
jae
mov
cmpsl
decl
int
repz
sbb
mov
sbb
sti
and
insb
test
sub
outsb
and
cmp
pusha
sub
push
inc
and
or
jbe
pop
cmp
insl
mov
movsl
out
inc
dec
scas
into
or
rep
daa
imul
or
cmp
mov
jp
sti
aad
mov
test
in
loop
xor
call
cs
and
popa
outsl
les
shll
outsl
mov
sbb
shll
les
inc
push
cli
cmp
add
aaa
cmpl
xchg
mov
mov
stos
fsubl
stos
inc
mov
lods
cmpsb
sahf
lods
sarb
std
in
xorb
divb
aad
cli
sbb
cwtl
addr16
stc
push
mov
into
adc
pop
lcall
pop
in
sub
jle
push
scas
push
jl
sub
mov
fildll
in
test
int
cltd
testb
mov
or
sub
mov
sub
jle
sub
std
mov
pusha
jg
lret
test
adc
push
mov
pusha
add
adc
sbb
aaa
mov
lds
scas
mov
push
xchg
xchg
mov
dec
rol
adc
push
jbe
movsl
loope
dec
insl
and
add
inc
int3
xor
inc
stos
jnp
push
sbb
inc
xchg
jb
mov
xchg
mov
movsl
jle
fmulp
scas
sub
movsb
leave
mov
jo
xchg
ja
insb
mov
or
xchg
pop
into
dec
mov
jae
lret
insl
jl
mov
cmpsl
arpl
sbbb
add
fs
xchg
xchg
pop
mov
outsl
aad
notl
inc
sbb
out
scas
arpl
cs
jb
mov
dec
cs
loopne
pop
nop
test
les
adc
push
pop
mov
sbb
out
ljmp
nop
lods
pop
scas
cmc
sub
sarb
int3
sti
mov
sbb
lds
js
fisubl
lcall
in
push
or
addr16
shrl
pop
and
pop
pop
dec
pop
icebp
inc
mov
sahf
jnp
into
ja
xchg
enter
mov
xchg
mov
xlat
and
and
dec
pop
mov
inc
xor
fisubs
pop
pop
xchg
mov
push
push
and
dec
xchg
dec
xor
push
sub
aaa
sbbb
sub
scas
dec
gs
insb
jno
fwait
sti
in
pop
sub
adc
pushl
mov
push
inc
cmc
xorb
jg
jmp
inc
jp
gs
xlat
mov
loopne
and
repnz
push
jns
add
and
fisubrs
ret
int
faddl
cltd
testb
test
pop
jb
mov
repnz
lahf
xor
mov
pop
pop
and
outsb
scas
inc
mov
ret
xchg
loop
test
dec
xchg
inc
test
push
repz
stos
mov
pop
shr
std
jge
movsl
addr16
repz
jno
mov
jb
or
or
xchg
in
adc
mov
jae
jo
notl
dec
decb
out
sti
mov
mov
pop
jo
xlat
push
xchg
aas
pusha
psllw
popf
icebp
fsts
sbb
sar
fwait
dec
sbb
xchg
test
gs
pop
wbinvd
and
lcall
cmp
out
ja
or
dec
cmp
fiadds
jg
jne
movsb
jg
adc
pop
rcrl
psubq
dec
xorb
lods
into
cmp
cltd
out
xor
cmp
into
fdivr
inc
mov
fisubs
push
or
xchg
call
dec
aaa
inc
out
adc
fldz
push
mov
pop
divl
out
loopne
dec
inc
gs
pop
test
pop
and
push
jp
ss
push
out
sarb
cmpsb
pushf
mov
mov
and
lea
and
pop
dec
push
pop
sahf
clc
lods
repz
add
imul
test
jnp
leave
les
cmpsl
or
pop
nop
hlt
cltd
in
xchg
fisubrs
push
mov
ss
or
and
ficompl
mov
inc
enter
aaa
dec
repz
mov
ficompl
xchg
mov
mov
sbb
cli
sub
mov
push
push
clc
loopne
aam
pop
adc
loop
iret
idivl
fwait
mov
popa
insl
cs
adc
outsl
cmc
imul
sbb
sbb
pop
lock
ss
dec
push
and
inc
inc
mov
push
rcrb
pop
mov
pop
out
jmp
imul
push
in
xor
adc
inc
mov
jp
xchg
sbb
fimuls
pop
xor
into
repnz
xchg
push
xchg
pop
fwait
push
mov
xchg
cmpsb
aad
lods
fnstenv
out
mov
test
inc
mov
push
push
ffree
adc
jmp
movb
cmp
cmp
sub
fs
aas
and
negb
inc
cmp
jl
inc
lea
pop
lods
jae
test
or
loope
sub
cmp
jle
adc
test
nop
sbb
movsl
arpl
scas
pusha
mov
sub
mov
mov
mov
xchg
cmpsb
adc
dec
es
fisubl
mov
cmpsb
les
cmp
xchg
ret
jg
lods
movsl
iret
mov
push
push
out
dec
aas
aaa
xchg
ret
inc
fsubl
out
inc
inc
int
cmp
pop
addl
sbb
jo
mov
ja
ret
test
repnz
jo
cmp
pop
inc
or
test
xor
jb
adc
es
fidivrs
cld
mov
and
cli
add
mov
sbb
jbe
push
ljmp
sbb
stc
pop
push
xchg
pop
jb
addr16
mov
xchg
adc
adc
mov
jb
dec
xchg
jbe
sbb
sarb
addb
jle
ret
int
push
das
pop
sahf
lock
dec
sub
jecxz
lods
lcall
nop
shrb
mov
pop
sbb
add
sub
shll
es
cmp
dec
push
insl
loope
mov
mov
mov
sti
popa
shll
lret
or
adc
adc
fs
addr16
and
mov
movsl
loop
sub
adc
fidivs
and
jnp
bound
adc
clc
loope
ja
ss
xor
and
ss
je
out
jnp
mov
or
inc
push
jg
adc
mov
push
mov
repnz
dec
fnstenv
lret
addb
mov
inc
lahf
ja
and
inc
or
lods
mov
scas
pop
jo
pop
cmp
lock
pop
xchg
mov
jecxz
testl
mov
out
imul
dec
cmc
xchg
popf
mov
out
call
jecxz
aad
lea
pop
jp
or
sbb
repz
xchg
imul
cmpl
sahf
pusha
xchg
add
mov
test
xlat
insl
stos
aad
fldt
loop
and
jo
imul
or
dec
aas
sub
add
popa
xor
dec
adc
ret
test
ljmp
lods
pop
hlt
or
lret
inc
stos
loopne
mov
sub
push
lock
jl
mov
xor
cmp
push
pop
inc
inc
mov
sub
popa
shrl
in
in
adc
jns
sub
sbb
fsts
jmp
or
sbb
mov
and
sbb
cmc
inc
addr16
mov
es
aam
ret
pop
daa
int3
add
in
ja
and
and
inc
fwait
sbb
push
pop
sub
xchg
insb
mull
mov
mov
stos
ret
cmp
hlt
cltd
sti
adc
cmpsb
fsubp
incl
mov
arpl
push
popa
data16
jecxz
test
push
ss
std
outsb
dec
or
cmp
lods
dec
in
mov
mov
add
scas
dec
jb
or
shlb
orl
in
cmc
roll
in
pusha
les
aam
xor
pop
xchg
xchg
lahf
pop
push
pusha
jnp
jecxz
enter
sbb
lods
stos
dec
xor
mov
sbb
lds
xor
and
sahf
jg
mov
gs
sbb
sub
cwtl
fildl
xor
enter
es
insl
data16
xlat
sbb
dec
sub
push
xor
cmp
addb
fists
movsb
adc
mov
jmp
fs
xor
clc
and
lock
jp
xchg
and
sub
pop
fwait
in
iret
adc
inc
out
xchg
mov
xor
jg
push
fstp
cwtl
add
jno
test
outsl
imul
pusha
jo
leave
jle
xchg
jno
jb
ss
adc
sbb
pop
es
les
cmp
ljmp
inc
jbe
sti
cmp
adc
aaa
inc
ja
push
xchg
pop
lret
cmp
lret
and
jge
imul
sub
add
faddl
mov
loop
out
adc
fsubl
sahf
sub
xor
sar
xlat
movsb
pop
and
lods
das
sbb
lret
adc
lret
sbb
outsb
cmp
pop
dec
js
mov
cld
in
mov
and
stc
popa
xlat
cs
sti
sub
fiadds
in
add
lcall
ds
fisubrs
push
inc
inc
sub
rcl
aaa
pop
jb
xchg
xor
fldl
mov
addb
and
or
push
push
mov
test
add
scas
test
sub
das
dec
es
mov
sbb
lcall
test
cmp
pop
pop
lea
mov
out
xor
in
fcoms
xchg
pop
xor
ret
fcoml
rolb
addb
scas
pop
mov
lahf
or
or
bts
ret
mov
pop
cmp
adc
cmp
dec
pusha
test
subl
data16
icebp
std
aas
pop
cmp
push
sbb
mov
pop
pop
pop
sbb
dec
sbb
out
push
jmp
mov
out
aas
cli
ficompl
mov
ficoml
lret
adc
push
mov
mov
fidivl
sub
push
or
out
jle
push
xchg
xor
lds
adc
mov
ret
xlat
fcom
mov
outsb
iret
lods
pop
out
lods
jno
icebp
xlat
les
pop
rolb
pop
mov
pop
push
outsb
or
ss
xor
mov
jmp
xchg
pop
xrelease
loop
sub
out
sub
sbb
xor
push
addr16
dec
lret
inc
js
pop
bound
stos
test
push
aas
pop
inc
dec
mov
sub
cwtl
in
call
sub
stos
jae
addr16
adc
pop
scas
mov
pusha
shrb
decb
fcmove
sbb
stos
scas
jl
dec
inc
sub
mov
es
lcall
xor
aas
pushl
xor
bound
leave
in
jp
mov
cmpsl
jmp
lret
push
push
xchg
pop
filds
movsb
sub
pop
add
ja
sbb
adc
pop
sbb
imul
jns
dec
jb
int
imul
mov
mov
lret
add
sub
xchg
push
fisttpll
inc
sbb
std
and
flds
mov
inc
das
gs
shrb
das
xor
sbb
add
dec
aaa
or
and
push
sub
les
xor
mov
loop
leave
jg
loopne
std
jp
sub
popa
test
andl
sbb
dec
cli
daa
jns
fldcw
push
mov
cwtl
xor
push
dec
sub
push
aaa
fmuls
pop
adc
inc
add
imulb
pop
out
fwait
pop
add
sbb
dec
or
out
scas
push
jns
int
xor
leave
or
sar
sbb
les
mov
jne
sahf
setns
and
js
xchg
aad
sbb
dec
dec
loope
rcrl
jmp
mov
call
loop
cmp
pop
xor
inc
and
imul
mov
imul
xchg
cmp
add
test
shlb
or
xchg
fwait
xchg
sub
fistpll
filds
flds
dec
push
xor
pop
dec
fwait
mov
jno
and
adcb
loopne
xchg
sbb
adc
loope
leave
fildl
xchg
cmp
xor
ss
pusha
sahf
mov
xor
mov
ljmp
leave
bound
arpl
popl
movb
adc
push
mov
or
mul
push
mov
xlat
fdivr
jbe
push
mov
cmp
cmpsb
mov
sbbl
ja
xchg
pop
pop
imul
dec
jmp
push
xor
lahf
add
push
adc
sub
mov
movsl
lds
cmpsl
adc
sbb
nop
jg
push
add
jo
lret
outsl
jp
test
fcompl
insb
sbb
fisubrl
push
jnp
push
outsb
mov
movsl
data16
es
inc
dec
das
in
or
mov
mov
sbb
scas
xor
push
insl
fisttps
dec
out
gs
negb
jl
push
stc
jg
mov
push
sub
call
jnp
psubw
sbb
rclb
mov
orb
jmp
inc
push
pop
push
lds
sub
mov
aad
xchg
rcll
add
scas
sub
ja
xchg
sub
adc
and
pop
enter
xchg
lods
std
leave
aad
cmc
dec
push
test
xchg
loop
or
xor
or
rorl
push
mov
inc
addr16
les
mov
icebp
test
repz
ljmp
fstpl
ror
int
enter
or
fsubl
outsb
pop
je
mov
sahf
or
mov
icebp
jns
mov
xor
out
pop
ds
dec
inc
shl
pop
int3
xchg
jge
xchg
pop
jg
scas
dec
jge
inc
or
fsubrs
add
sub
cmp
mov
lods
cltd
aas
pop
jbe
xlat
add
test
jne
scas
or
loop
inc
outsb
push
mov
and
enter
inc
jp
and
xchg
inc
xlat
out
mov
test
push
inc
cmpsl
loop
sub
ds
mov
addr16
out
js
fbld
cmp
cmp
xor
aas
sub
cli
sti
lahf
sub
xlat
out
imulb
inc
dec
pop
sahf
xchg
or
push
jmp
dec
jae
icebp
push
pushf
fwait
lods
pop
dec
mov
sub
inc
data16
fsubr
cmp
aas
push
pop
jne
dec
int3
test
orl
sbb
jecxz
fisttps
cltd
add
cmp
test
or
fists
inc
inc
or
int
roll
cltd
cwtl
sub
cmp
cmpsl
jmp
out
pop
pop
and
xor
ds
mov
mov
arpl
ficomps
push
sbb
xchg
out
movb
aam
and
pusha
cmpsl
jne
stc
mov
stos
lret
xchg
in
mov
fists
out
ret
jb
adc
or
rcl
jg
pop
push
and
in
jbe
add
test
push
sub
ficoms
in
cltd
daa
xor
and
push
rcrl
enter
sub
cmpsl
adc
or
add
in
jne
or
fsubl
xchg
mov
addr16
mov
lret
inc
in
and
add
mov
pop
mov
jl
insb
mov
jge
xchg
repz
xor
addr16
addr16
lea
or
hlt
inc
movsl
pop
dec
dec
push
dec
addb
mov
jp
lret
pop
jl
imul
pop
jne
insb
stos
jo
incb
iret
es
mov
and
dec
leave
mov
push
push
mov
pop
inc
aaa
lock
movsb
negb
adc
sub
cmp
jmp
rcrl
push
int3
imul
dec
add
pop
push
push
mov
jns
inc
push
test
inc
cli
daa
divl
ret
cmp
imul
add
leave
mov
push
dec
das
add
dec
movsb
jle
mov
scas
call
cwtl
push
jno
jl
int3
or
enter
xchg
lcall
mov
and
mov
xchg
pop
sub
call
mov
out
mov
mov
or
sub
in
popa
pop
mov
mov
mov
jb
lods
add
mov
imulb
ss
sbb
nop
inc
mov
int
jbe
mov
sub
out
rorl
inc
addr16
cmp
roll
xor
and
mov
andb
add
daa
sub
push
cs
in
mov
push
fisubrs
jmp
inc
sbb
add
setle
jns
shl
xchg
mov
divb
mov
es
out
mov
negb
popa
xorl
call
jecxz
mov
pop
cmpsb
mov
dec
lcall
popf
cmp
mov
subb
ds
add
mov
or
mov
or
cmpl
xor
ss
push
and
call
pop
xchg
push
push
mov
xchg
bound
lds
outsb
ss
test
lds
int3
loope
fidivs
xchg
sub
mov
inc
push
push
xchg
cmp
mov
mov
std
cmpsl
cltd
arpl
hlt
outsb
pop
pop
ja
xchg
cmp
inc
mov
sarl
sub
hlt
stc
sub
imul
add
pop
sbb
or
cmp
xor
add
jmp
mov
or
loopne
mov
stos
jo
int3
loopne
stos
dec
or
mov
cmc
sahf
les
adc
sti
pushf
cs
adc
jns
adc
adc
push
loopne
jl
inc
movsb
push
ss
shll
loope
inc
dec
ds
data16
jg
push
mov
dec
stc
loopne
stos
or
lods
sbb
das
dec
rol
int3
lret
mov
dec
out
jo
movsl
inc
push
lahf
loope
sarl
cli
xor
in
push
mov
dec
xor
test
xlat
cmp
ss
test
and
scas
shll
xor
lock
cmp
movsl
repnz
cltd
ret
push
shlb
enter
mov
jl
aaa
mov
cld
daa
xor
mov
in
test
aaa
xchg
fwait
mov
dec
sbb
bound
mov
imul
int
gs
lds
gs
pop
or
or
cmp
enter
aad
aaa
or
xor
aaa
pop
cmp
cmp
mov
mov
leave
pop
in
hlt
fidivrs
pop
fidivs
sbb
hlt
sub
dec
mov
jo
mov
sub
sbb
jle
fwait
in
imul
xor
push
pop
sub
mov
loop
cmc
sti
enter
addr16
mov
ror
stc
clc
jg
lods
xlat
std
out
cmp
pop
or
cwtl
or
xchg
ss
imul
repz
cmpb
lods
push
and
movsb
daa
lret
mov
push
dec
aas
xor
and
push
out
jmp
stc
scas
icebp
js
sub
jnp
pusha
int
push
adc
rclb
mov
out
out
sub
sub
and
or
repz
cs
push
loopne
jno
sub
sti
out
mov
adc
push
loop
adc
pop
mov
shlb
push
aas
imul
dec
mov
inc
mov
pushf
mov
sub
xor
popa
pop
shrl
in
xchg
mov
outsb
clc
lret
mov
xor
inc
stos
add
cs
jg
pop
pop
xchg
insb
jb
out
add
xor
add
push
ror
outsb
sbb
xchg
in
daa
outsl
lods
cmp
dec
push
loopne
xchg
adc
mov
jbe
jmp
push
jbe
sub
lcall
jmp
cwtl
push
test
aas
jns
dec
push
mov
adc
xchg
mov
cltd
or
test
pop
jg
or
and
or
mov
jne
scas
sbb
ret
or
add
rcrb
inc
into
dec
clc
push
push
jp
stos
test
or
shl
xlat
mov
jo
cmpxchg
pop
stos
rcrl
xorl
int3
push
sbb
rolb
xchg
in
leave
or
push
ds
mov
adc
add
lret
mov
and
shl
leave
cld
cmp
jno
cltd
and
and
popf
lret
cltd
pop
xchg
add
or
inc
jl
outsb
out
cwtl
cwtl
mov
ret
mov
mov
lcall
cli
sub
dec
fdivs
inc
mov
lea
in
fdivl
stos
ljmp
aas
jge
mov
mov
bnd
addr16
enter
les
pushf
ja
pop
in
cmp
cmp
xchg
or
ret
xlat
jo
pop
push
xor
sbbl
jne,pt
lock
push
push
ljmp
add
xorb
xchg
sahf
scas
test
fcomps
and
repnz
jge
js
cmpb
push
xor
fstpl
stos
xchg
push
fdivrp
mov
mov
dec
jmp
adc
add
and
adc
aas
andl
jnp
add
xchg
test
xchg
mov
mov
push
lds
or
mov
inc
shrb
test
mov
cwtl
int3
fs
in
mov
xor
push
sbbb
push
pusha
or
data16
das
xor
je
jnp
comiss
and
out
mov
fisttpl
mov
out
cmp
shll
add
adc
adc
mov
fisttps
insb
mov
or
or
jb
cmp
pop
mov
popa
pop
cmpsb
xorl
daa
popa
cmpl
sub
mov
pushf
mov
and
cmp
jle
mov
jmp
dec
mov
int3
cld
and
call
pop
cmp
jl
jns
jg
lods
stos
mov
ljmp
push
ljmp
sbb
sarb
and
out
aas
mov
xchg
jb
inc
mov
loope
jl
push
outsb
popf
clc
scas
cmc
sahf
fidivl
sub
test
pop
push
dec
test
arpl
push
jmp
xor
int
cmp
adc
jle
dec
push
xchg
aaa
xchg
jmp
mov
loop
push
ror
lahf
mov
fmull
movsl
and
mov
push
loopne
es
testb
or
in
and
mov
inc
push
sbb
pop
jnp
pop
ljmp
pop
or
pushf
stc
mov
pop
lods
dec
add
iret
pop
inc
mov
dec
sahf
pop
in
inc
jno
mov
push
mov
call
cmpb
je
js
rcrl
out
add
pop
das
shrb
in
into
mov
jo
inc
xor
neg
popf
cwtl
and
adc
loop
ljmp
int3
fwait
sub
xlat
fwait
mov
jb
push
int
rorl
xor
pop
ss
dec
jne
repz
lea
divb
mov
hlt
ljmp
pop
ljmp
sbb
shll
cmpsb
pushl
scas
std
mov
fistpl
jecxz
jecxz
in
inc
mov
pop
add
mov
pusha
jecxz
xor
and
ficomps
mov
fidivl
cmp
sarl
and
arpl
bound
or
mov
inc
add
mov
sub
add
std
mov
addl
push
cmp
add
dec
loop
lret
jle
loopne
movsl
pop
lods
rorl
in
out
loopne
xchg
popa
sub
inc
or
movsb
jns
loope
cmp
xor
insb
cmpsb
cvtps2pi
mov
jg
xor
or
sbb
dec
xchg
fwait
ss
or
push
cmpsl
and
or
mov
sub
ja
loopne
xor
imul
inc
add
xchg
clc
ret
sahf
aad
adc
cmp
in
ret
testb
sub
xor
add
dec
push
jb
jl
int3
fildll
call
mov
mov
adc
data16
jno
outsl
stos
ljmp
adc
jo
lret
sbb
push
pusha
insl
adc
adc
sub
js
cmp
mull
rolb
out
sbb
mov
mov
xchg
fcmovne
cld
lahf
mov
push
test
mov
sahf
cmpsb
pop
and
dec
imull
icebp
flds
movsb
movsl
cmc
inc
push
es
jbe
fidivrl
mov
loopne
loope
sahf
clc
sbb
in
popf
jo
add
mov
lock
in
xor
fimull
popl
add
std
jne
sti
add
outsb
stc
adc
adc
fs
stc
push
jp
pop
rorl
xor
shlb
push
xlat
insl
in
in
push
xchg
mov
and
fadd
out
cld
lods
aas
leave
adc
jnp
add
dec
mov
call
lahf
xchg
mov
sbb
mov
pop
int
jp
cmp
iret
xchg
mov
pop
jge
sbb
mov
hlt
mov
push
jle
jle
aaa
repnz
inc
lret
arpl
movsb
adc
pop
aad
subb
push
ret
sub
loope
jp
cmpsb
sbb
push
mov
mov
sbb
lret
adc
fsubrl
or
sub
push
ret
pop
test
cwtl
cmc
adc
fdivs
or
repnz
fucomip
xlat
arpl
test
std
sbb
mov
inc
and
jne
test
call
pushl
pop
xchg
ss
icebp
jo
push
and
fimuls
mov
lret
sub
fidivl
js
inc
lahf
mov
out
cmc
push
daa
adc
mov
dec
fucom
inc
int3
je
daa
push
or
sbb
mov
jns
push
and
jecxz
adc
mov
outsb
cmp
test
adc
xor
pop
jno
aas
mov
mov
mov
xchg
jne
sub
out
out
push
pop
stos
sbb
lahf
xchg
xorl
sub
in
mov
xchg
icebp
enter
push
std
or
pop
lret
faddl
mov
mov
or
fmul
loop
andl
jge
pop
fidivrl
cmpsl
sbb
out
pop
bound
pop
mov
popa
roll
lret
mov
push
and
les
popf
dec
mov
shrl
xorb
shll
pop
push
hlt
mov
mov
cmc
out
fstp
lea
in
sbb
adc
mov
xchg
cltd
mov
popa
sti
sahf
jle
test
inc
cmpsb
xor
jno
fnstsw
fmul
test
add
lock
jne
jl
xchg
pop
push
cltd
filds
insb
lret
or
repnz
lock
cmp
inc
sbb
loopne
cmp
sub
sub
out
mov
lahf
hlt
jle
mov
sti
leave
pushf
dec
cmpsl
adc
mov
pop
push
jg
push
int3
xchg
clc
push
add
inc
add
cmp
arpl
push
mov
push
add
lcall
sbb
mov
mov
cli
mov
and
or
xorb
lods
dec
aam
jmp
xchg
ret
aas
push
stos
xlat
scas
aaa
add
mov
cmpb
stos
ret
add
ficompl
scas
mov
mov
lods
jns
lret
movsl
jg
shr
cmp
fwait
mov
mov
aas
add
popa
xchg
lret
in
sbbb
loope
in
or
shlb
scas
cmp
xor
fisttps
rorb
idivl
push
xchg
xor
cmp
fwait
inc
jb
jle
mov
das
lret
and
ret
xor
popf
in
push
pop
dec
loope
test
out
mov
mov
xchg
jne
lods
pop
lds
ret
gs
inc
mov
xor
push
dec
dec
pop
mov
and
iret
sbb
ret
cmp
mov
and
sbb
inc
test
pusha
xchg
sbb
inc
xlat
push
sbb
imul
insl
push
test
push
and
dec
outsb
and
arpl
adc
pop
bound
pop
cmp
out
jbe
pusha
shll
dec
xchg
mov
mov
sub
out
lret
testb
loopne
cmpsl
iret
jecxz
sub
cs
pop
pop
test
out
mov
aad
mov
inc
pop
call
gs
les
xlat
vmread
inc
sub
addr16
loopne
xorb
loop
sbb
xchg
int3
push
shll
jl
adc
cmp
mov
sar
pop
sbb
mov
test
call
je
sub
push
test
and
jge
rcrb
jne
sub
sbb
das
sub
push
mov
mov
mov
imul
leave
cmp
push
inc
stos
arpl
dec
mov
pop
jno
pusha
sub
hlt
adc
scas
jno
push
roll
adc
jmp
xchg
jmp
dec
loop
mov
jno
ret
jmp
inc
loopne
ret
movsb
xor
arpl
loope
xor
lahf
orl
dec
sti
fistpl
shrb
leave
js
and
leave
ret
adc
pop
push
out
cmpsl
xlat
sbb
jle
dec
rcr
imul
rolb
adcb
jns
bound
mov
push
xchg
fcomi
ret
int
in
mov
lods
hlt
test
add
mov
negb
push
mov
imul
or
inc
xchg
push
dec
dec
add
xlat
jge
into
fisttps
and
mov
lods
icebp
jecxz
pop
cmp
repz
adc
and
imul
and
or
aaa
stc
jmp
push
fisubs
jmp
dec
jg
and
les
and
pushf
adc
add
push
xchg
fwait
mov
or
cmpsb
aaa
gs
push
aad
insb
jb,pt
out
push
push
data16
shll
adc
jle
outsb
or
loopne
mov
mov
lea
lods
in
cmp
inc
pop
cltd
int3
dec
test
imul
dec
mov
add
adc
mov
outsb
mov
dec
and
cmpsl
jns
data16
adc
icebp
inc
push
or
mov
pop
push
mov
push
xor
mov
add
ljmp
sti
or
mov
les
pop
scas
sbb
push
jbe
adc
push
and
in
inc
js
ficoml
push
and
jnp
dec
ret
sbb
rcrl
and
scas
mov
lods
xchg
cltd
lret
movsl
push
push
sub
jb
lahf
dec
sub
fnstcw
outsb
cli
sub
inc
fsubrs
jnp
dec
lods
or
cli
test
fucomp
pop
ret
jle
adc
mov
push
shrb
int
loopne
fwait
pushf
jne
cmp
mov
popa
mov
sahf
mov
or
push
outsl
add
adc
js
mov
pop
mov
xor
and
sti
jmp
add
mov
repnz
mov
test
in
cmp
fwait
out
mov
sti
push
pop
fdiv
xor
inc
mov
test
xlat
jp
pop
in
mov
sarb
cmpsb
inc
dec
orb
in
fidivrl
mov
mov
out
mov
mov
dec
test
sub
shlb
mov
pop
sbb
stos
pop
sub
mov
aas
outsb
sub
popf
jnp
inc
in
test
stc
fsubrs
pop
jle
mov
push
mov
xchg
push
and
aaa
jae
imul
neg
xchg
mov
nop
pop
sub
cli
jecxz
xchg
dec
jns
mov
test
jle
or
lods
xchg
fistps
loope
enter
dec
sub
or
out
sbb
xchg
inc
mov
push
push
test
sbb
lcall
mov
sub
int3
pop
adcb
sarb
push
add
ljmp
lahf
jae
sbb
pop
sub
inc
and
enter
ljmp
flds
rcrb
out
push
dec
xor
fwait
mov
or
push
testl
stos
xor
mov
repnz
mov
mov
dec
pop
pop
outsl
into
mov
dec
mov
dec
mov
jg
jle
ja
ret
daa
call
and
mov
sub
in
cmp
fstps
lret
inc
jbe
ret
imul
enter
push
dec
test
imul
out
jne
pop
push
sub
xchg
pop
insl
mov
or
int3
std
jle
rclb
xor
sbb
xor
xor
mov
imul
enter
pop
push
dec
popa
bound
dec
test
xchg
js
orb
inc
popa
sub
aaa
out
sbb
test
cmc
add
testl
or
lods
aas
inc
rorb
fildl
mov
out
cmp
in
imul
movsl
cs
or
mov
jmp
mov
lcall
out
jo
in
pusha
gs
ljmp
movsb
scas
filds
and
or
arpl
ret
je
mov
sub
push
aas
mov
sti
dec
xor
out
jmp
loop
cwtl
jnp
roll
sbbb
and
dec
insl
jle
add
imul
lods
aad
lock
mov
add
mov
jnp
das
out
mov
stos
lods
outsl
filds
or
jge
add
mov
mov
out
sub
add
mov
pop
mov
mov
dec
rcrb
inc
rcrl
sub
std
mov
push
push
sub
arpl
pop
out
push
pusha
mov
jl
push
shll
dec
ja
hlt
mov
stc
ss
mov
and
mov
adc
or
cmp
sub
lds
sub
jmp
mov
movsb
and
lock
cltd
add
jg
mov
pop
ret
cmpl
pop
daa
das
sub
add
sti
fdiv
jb
lahf
push
loop
cmp
or
sbb
push
stos
fadds
mov
shlb
negb
clc
stos
add
fs
outsl
or
xor
lods
divb
inc
not
adc
mov
ja
lods
xchg
jmp
sbb
add
ret
xchg
jbe
xor
lds
push
pop
add
mov
ljmp
pop
movsb
sub
imul
sarl
adc
mov
ljmp
mov
sub
mov
and
sti
push
es
outsl
inc
pop
sbb
push
call
inc
ret
sbb
add
popf
fsubrs
or
push
dec
out
add
or
jecxz
shl
loop
and
pop
lcall
scas
scas
stos
mov
push
mov
lcall
stos
data16
pop
jg
jl
test
mov
mov
ss
jbe
xor
ror
test
xchg
dec
fists
nop
mov
cmpsb
mov
adc
sarb
and
inc
fs
cmpsl
cli
mov
jge
cli
es
push
or
pushf
mov
xchg
inc
inc
sub
mov
repnz
mov
jnp
push
bswap
mov
mov
dec
pop
mov
data16
adc
data16
sahf
ds
out
add
and
jb
lock
cmp
popa
insl
cmpsb
push
pusha
std
push
popf
pop
push
pop
xor
cwtl
pop
jbe
sahf
add
dec
je
xchg
fnstsw
imul
movsl
push
nop
add
ljmp
repz
add
stc
nop
sbb
mov
mov
iret
and
push
idivl
mov
inc
jle
lcall
mov
lcall
push
add
lahf
xor
dec
out
sbb
and
loopne
movsb
sarl
jo
push
push
lea
leave
add
mov
and
fcmovbe
dec
sub
insl
push
fs
loope
outsb
cmp
pop
push
push
lahf
nop
cli
je
sbb
std
push
inc
mov
scas
and
inc
ret
je
pop
or
loope
outsb
pop
jp
cltd
mov
testl
movsb
xchg
pop
adc
mov
inc
xchg
clc
mov
sub
int
sbb
mov
iret
repnz
cwtl
nop
cmp
outsl
icebp
and
iret
push
inc
dec
aas
gs
and
into
movsb
push
scas
mov
xchg
pop
dec
ds
out
mov
subl
xchg
cmp
out
test
int
jae
adc
pop
inc
mov
daa
mov
js
dec
loope
add
pop
lcall
ret
rcrb
rol
mov
inc
mov
pop
xor
loopne
dec
dec
mov
cmpsb
arpl
cmpl
xchg
mov
jnp
sarb
movsb
shl
insl
lods
or
enter
add
lods
inc
sub
lahf
xor
jb
rol
cmp
gs
push
repnz
imulb
push
push
adc
push
jno
inc
rcll
fldl2t
cmp
lds
inc
adc
inc
out
mov
sbb
aaa
push
js
loope
in
stos
sub
jge
test
test
in
andl
lods
test
or
inc
sub
out
xchg
cs
sbb
aam
iret
inc
in
test
pop
push
cmp
dec
shlb
test
ret
es
call
adc
aaa
push
not
test
mov
adc
xorb
jmp
push
xor
cli
pop
pop
or
cmpsl
imul
push
scas
out
fsubl
pop
test
mov
ret
push
pop
dec
fldl
cmp
add
nop
adc
fcmovb
sub
xchg
inc
ror
cltd
mov
sti
outsb
mov
call
sarb
and
jecxz
scas
mov
mov
shr
jo
push
add
and
push
aas
push
jne
inc
mov
rolb
rorl
pop
pop
cmp
bound
or
mov
cld
mov
movsb
fimull
in
jg
hlt
aam
mov
jne
aam
jno
aaa
movsl
dec
push
mov
aam
cmp
loop
sbb
jg
dec
ds
pop
mov
cltd
add
fwait
xchg
mov
popw
iret
mov
test
pop
jb
cltd
or
and
and
cpuid
out
es
call
das
mov
fsubrp
clc
addb
aad
mov
jno
inc
lods
scas
aad
popa
add
sarb
out
push
push
rolb
xchg
lods
cmp
jecxz
ljmp
jge
cmpsb
in
pusha
adcb
adcl
lods
fcoml
sub
and
jno
cmp
mov
mov
in
and
js
dec
mov
inc
sub
ss
sti
adc
xor
data16
mov
sbb
pop
fldcw
dec
les
movsb
push
sbb
std
xor
dec
decb
xor
ror
cwtd
mov
shll
pop
out
jnp
pop
sbb
push
das
inc
inc
add
xor
sarb
cmp
and
std
aam
pusha
mov
mov
mov
nop
aaa
out
sbb
xor
inc
xchg
sub
pop
or
push
inc
cmp
jo
pop
stos
imul
shll
adc
push
xchg
jg
scas
int
or
cmc
shl
das
icebp
fldcw
lcall
mov
mov
xorb
adc
data16
push
dec
rorb
js
mov
xor
lods
jmp
inc
pop
lea
push
xchg
movsl
aas
lods
push
hlt
fs
mov
mov
cmpsb
cltd
xor
adc
icebp
sbb
xchg
shrb
mov
int
addr16
mov
add
dec
imul
pusha
les
mov
ss
hlt
repz
psubq
add
loopne
inc
adc
std
lahf
mov
sub
das
jne
pop
es
movsb
test
adc
xor
aad
pusha
xchg
mov
mov
arpl
pop
cwtl
cmp
inc
mov
inc
mov
aad
imul
push
xchg
sbb
adc
jno
xor
clc
sub
mov
jns
insl
xchg
loop
mov
or
fldl
inc
jno
pop
push
and
sarl
mov
xchg
lods
inc
mov
aam
sbb
pop
mov
rcrb
push
pop
sahf
out
das
scas
fdivs
dec
das
loopne
decl
scas
xor
cmpps
sbb
dec
jb
cmpsb
pop
test
pop
xor
out
jne
jb
sub
popa
push
popf
mov
dec
popf
mov
and
movsb
xor
push
add
mov
xchg
xchg
setne
or
rolb
pop
leave
inc
jge
ficoml
cmp
orb
loope
enter
negl
push
fcoml
inc
mov
cmp
mov
stos
push
mov
dec
std
aam
jecxz
xlat
enter
inc
lcall
sti
adc
push
push
fsts
xor
jp
push
gs
inc
mov
sbb
sarb
pop
das
scas
sub
mov
sub
ss
in
cmc
int
jl
push
mov
fadd
mov
int
outsb
push
dec
dec
fnstsw
cmc
xchg
cmp
dec
bound
xchg
push
ja
mov
pop
xor
jl
xchg
mov
out
out
test
repz
mov
insl
ljmp
fs
mov
nop
aad
dec
fwait
out
and
mov
add
sbbb
inc
push
add
sbb
cmp
test
out
cmp
insb
loope
addb
int
imul
outsl
mov
adc
pop
or
vpaddusb
push
inc
in
and
into
fwait
std
and
jne
sub
push
dec
add
sbb
or
xchg
push
adc
and
pop
mov
pslld
addr16
repnz
fmull
lret
fists
xor
xchg
or
xor
repz
mov
imul
push
dec
movsb
push
sbb
ret
mov
mov
pop
xchg
push
sti
mov
popa
cltd
xchg
jmp
mov
fistpl
mov
inc
lods
cmpsl
sar
or
adc
cmp
fnstsw
adc
scas
lods
out
add
mov
hlt
dec
cld
cmp
test
leave
leave
and
das
adc
mov
jb
mov
or
add
mov
mov
scas
daa
imul
js
imul
in
mov
shr
inc
in
pop
mov
fdiv
xorb
xor
in
leave
movsb
test
xlat
imul
test
and
add
imul
mov
adc
or
mov
inc
lds
testb
cltd
in
cmpsb
aaa
lret
cld
xchg
cs
and
pushf
gs
sbb
sti
xchg
mov
repnz
sub
or
mov
fs
push
adc
dec
or
push
call
outsb
and
iret
mov
push
dec
dec
xchg
adc
lods
cmp
pop
add
popf
iret
mov
ror
je
and
scas
lret
scas
sub
or
arpl
ja
imul
xchg
or
dec
adc
xrelease
or
cltd
sti
aas
lods
nop
loope
clc
adc
mov
push
adc
out
pop
ja
pushf
mov
jne
add
jbe
and
sbb
push
andl
aad
loope
xor
inc
dec
xchg
sbb
js
pop
jp
stos
js
mov
stc
mov
inc
clc
in
scas
test
rcrb
pshufw
pop
jl
stos
test
scas
ret
bound
mov
push
lock
pop
add
cmpsb
dec
push
xchg
or
bound
iret
pop
push
jge
inc
or
fidivrs
and
jmp
mov
hlt
pop
das
mov
rorb
mov
mov
push
dec
pop
mov
push
and
and
jae
or
lock
sar
mov
push
in
jmp
sub
call
push
rcrb
sub
jp
mov
into
scas
or
in
movsb
aad
mov
inc
dec
mov
lcall
loope
cmpsl
mov
lods
int3
add
leave
fidivrs
out
js
jmp
aad
jno
xchg
add
mov
or
outsl
xor
stos
aas
add
mov
lods
mov
mov
adc
cmp
test
push
dec
and
cmpsb
fsts
jnp
jmp
adc
dec
or
aam
fimull
sub
jp
insb
fcoml
fwait
sbb
in
dec
shrb
dec
and
adc
sub
sbb
mov
xor
and
sub
pop
test
or
ret
mov
dec
pop
mov
cvtpi2ps
adc
push
mov
sbbl
adc
push
inc
xchg
fdivrl
ret
jp
arpl
and
adc
or
lret
hlt
fisttps
data16
xchg
ja
fistpl
inc
iret
mov
mov
in
cmp
js
fbstp
arpl
xor
je
js
and
pushf
orb
push
mov
sub
mov
imul
lock
fwait
jae
and
inc
sub
lea
out
daa
pop
dec
sbb
pop
sbb
loope
or
dec
nop
les
inc
idivb
insb
sbb
add
out
inc
mov
mov
loopne
cmpsb
insl
adc
mov
adc
xchg
inc
sbbb
mov
je
cmp
cmp
dec
int
aam
inc
sbb
movsl
push
add
or
clc
popf
push
pop
add
mov
pusha
iret
push
mov
inc
test
xor
mov
push
push
sarl
dec
cmpl
movups
rorb
out
mov
and
enter
ja
xchg
pop
xlat
lea
nop
push
mov
cli
imul
lahf
test
pop
dec
ret
call
leave
mov
adc
pop
mov
les
dec
movsl
xor
xor
pop
icebp
jo
pushf
push
jns
push
mov
jo
testb
mov
sub
or
bnd
xchg
ljmp
mov
push
dec
mov
lds
inc
add
xchg
lahf
adc
xor
sub
ret
lcall
add
sub
roll
push
enter
andl
mov
stc
lds
fwait
dec
fildl
jecxz
xchg
shll
or
lahf
mov
hlt
inc
jmp
adc
push
push
out
pop
inc
outsb
xchg
jg
imul
xchg
icebp
popf
mov
loop
xchg
sub
imul
test
and
sahf
repnz
adc
mov
push
push
sub
dec
mov
idivb
data16
sub
in
dec
fimuls
mov
add
into
pop
pop
in
jmp
push
dec
fcomps
xchg
mov
dec
jnp
jle
fs
aam
stos
lret
sub
mov
outsl
shrb
push
adc
test
mov
mov
dec
std
xchg
jp
mov
int3
gs
mov
sbb
mov
add
sbb
or
jl
dec
repz
lods
popf
dec
or
jo
sarl
mov
cwtl
rorl
or
hlt
lret
lea
jmp
dec
outsb
int
rolb
lret
mov
mov
fisttpll
add
lock
push
add
pop
mov
dec
mov
jnp
adc
lea
xor
mov
sbb
outsl
push
data16
pop
jns
outsl
fwait
out
push
sub
call
jle
cmp
call
mov
scas
xchg
sar
cltd
inc
insb
mov
pop
sub
hlt
dec
lcall
xchg
pop
fdivs
cmpsl
push
aam
xor
call
and
add
popf
out
add
out
mov
sbb
out
push
xchg
inc
cmpsb
lods
sbb
notl
ret
dec
rcr
in
mov
in
jmp
movb
test
popl
adc
xchg
jns
adc
fwait
unpckhps
in
add
cmp
jl
int3
adc
dec
icebp
add
stc
aam
popf
mov
dec
or
inc
xchg
ret
pop
add
sbb
loope,pn
xor
push
pusha
mov
inc
cmp
call
adc
divl
or
or
loop
jle
leave
sbb
out
sti
inc
adc
pop
das
cmpsb
into
popa
test
xchg
mov
or
ds
incb
scas
repz
daa
sub
push
je
loope
inc
mov
test
add
push
pop
outsl
xchg
sbb
or
mov
dec
fwait
call
shlb
jge
sbb
ss
mov
movsl
inc
cmpb
and
jge
nop
or
xlat
jno
and
shl
stos
cwtl
cmpsl
int
shrb
mov
sub
mov
push
xchg
das
std
jb
aas
mov
add
lods
jmp
fidivs
outsl
xchg
out
xchg
arpl
fs
mov
mov
push
adc
add
loop
adc
ljmp
lea
sbb
dec
inc
out
fst
mov
push
mov
scas
jg
ror
xlat
out
or
movb
xor
sbb
out
clc
lahf
adc
ffree
int
rorb
shrb
push
stos
dec
cli
inc
fwait
and
rcll
test
int3
mov
lahf
cmc
inc
loope
push
xorl
xchg
and
and
dec
add
push
or
and
in
data16
test
mov
inc
mov
aas
ja
aam
lahf
xor
xchg
clc
fdivl
pusha
shr
and
jmp
inc
stos
push
je
lods
xor
loop
mov
xor
sbb
adc
insl
stc
fmuls
mov
xchg
fs
mov
out
sub
adc
mov
sub
test
dec
fwait
jbe
jp
push
lcall
roll
pop
lcall
push
xchg
xchg
lret
ss
ja
mov
sti
ss
mov
imul
jno
neg
push
or
arpl
xchg
cli
enter
sbb
mov
outsb
jns
fidivs
cmp
or
in
nop
fildl
xor
xor
mov
dec
and
dec
aad
sub
insb
pusha
cmp
mov
sub
inc
xor
add
sbb
mov
mov
aad
stos
mov
and
jbe
xor
data16
and
idivl
rol
sub
dec
push
adc
xlat
sbb
cmpsl
aad
mov
add
cli
aam
rolb
rcrl
jns
push
in
push
xchg
xchg
es
xchg
inc
lods
int
jb
sarl
sbbb
adc
xor
adc
clc
dec
test
insb
dec
fisttpll
movsb
dec
fwait
jl
ja
loop
mov
xchg
jno
sub
fst
cwtl
mov
pop
out
out
stos
sub
andl
sub
xor
gs
pushf
mov
in
es
nop
pop
mov
call
add
inc
jmp
dec
dec
pushf
cmp
repz
loopne
adc
iret
lods
lods
dec
mov
or
lahf
cmp
dec
repz
sub
xor
lret
jbe
jle
push
aam
mov
int3
divb
jge
mov
jmp
and
fs
test
rcl
stos
mov
xor
push
push
lock
pop
push
cmp
mov
lock
xor
push
sub
rolb
and
pop
xchg
popa
shl
loope
mov
jo
inc
jnp
fnstenv
fwait
gs
xchg
mov
xor
mov
sub
jecxz
pop
cmpsb
pop
mov
sbb
lahf
cmp
faddl
mov
mov
mov
mov
jnp
jbe
mov
or
pop
sub
jo
sbb
push
mov
and
insb
pop
popf
cwtl
es
mov
cmp
mov
inc
pop
mov
mov
cltd
sbb
lret
cmpsl
movsb
jg
cmp
sbb
test
cmp
mov
mov
pop
pop
in
xchg
repnz
jo
cmpsb
jne
rcl
mov
and
sahf
ja
adc
cltd
sub
push
add
sub
inc
sbbl
gs
stc
inc
ljmp
scas
inc
or
outsb
fisttpl
out
sbb
shlb
outsb
sti
insl
lcall
xchg
std
pop
lea
dec
push
pop
call
mov
mov
jo
popa
shl
bound
loope
loope
pop
adc
mov
xchg
mov
dec
pusha
loop
scas
cmp
mov
xorl
imul
add
xlat
inc
lds
mov
push
ret
ds
ret
enter
push
adc
cmp
push
js
mov
jmp
mov
dec
xor
jmp
cmpsl
mov
cmp
dec
andb
std
sub
push
pop
mov
lahf
and
lock
pop
inc
inc
ret
movsb
dec
gs
push
add
insb
gs
movsb
test
movsb
xor
dec
das
push
adc
fcmovu
and
sub
mov
test
sub
xchg
test
cltd
sti
fidivrs
dec
out
ret
aam
sbb
loop
scas
hlt
jg
jno
jecxz
push
lods
test
mov
or
outsl
cwtl
test
xor
mov
inc
loope
lahf
push
fsts
cmc
out
scas
shl
dec
lea
jbe
ror
mov
push
xchg
ljmp
cmp
jno
je
push
push
outsl
jno
idivb
dec
fsubp
repnz
xchg
hlt
mov
movsl
inc
fwait
mov
shr
scas
lods
mov
pop
mov
and
into
testb
iret
jg
adc
sbb
or
or
fildl
mov
cmp
mov
neg
scas
loopne
fisttpll
loopne
imul
loop
scas
lods
xchg
lea
cltd
mov
mov
icebp
xor
mov
popf
insb
div
mov
cmp
bound
outsb
adc
sub
xor
stc
or
pop
iret
xchg
fistl
and
sahf
xchg
testb
fnstenv
mov
mov
jl
and
lds
push
add
mov
mov
aam
in
pop
dec
mov
sbb
add
push
addr16
and
push
add
insl
lods
xchg
and
push
loopne
jb
ds
mov
sub
mov
in
ja
inc
adc
sub
pop
mov
in
and
cmp
popa
lods
add
aaa
pop
ss
push
nop
and
mov
jo
insb
idiv
fistl
jo
pop
mov
lea
mov
es
imul
pop
xor
jg
mov
pop
xor
jae
add
push
and
insl
lods
imul
push
sbb
popf
or
test
push
cmc
push
fistl
fcom
stos
stc
mov
xor
dec
test
mov
push
adc
sbb
xchg
ja
mov
js
sub
mov
jp
das
in
push
sub
sub
and
bound
clc
push
je
shll
test
inc
out
xchg
xor
cmp
loope
inc
ret
pop
jbe
xchg
xchg
push
jecxz
nop
mov
mov
into
cmp
mov
in
push
clc
bound
fcomps
push
dec
jne
icebp
jo
push
cltd
add
ss
mov
lret
mov
popf
addr16
call
sarl
les
cmp
sub
arpl
aad
cmp
cs
jp
test
fcoml
mov
incl
sub
push
adc
jecxz
test
in
clc
cltd
fldenv
out
jmp
rorb
fstpt
adc
shrl
leave
sbb
movsl
jo
nop
ds
sbb
and
into
push
jmp
enter
in
out
mov
and
loop
jns
sbb
mov
xchg
push
insb
pop
jp
in
or
scas
sarb
pop
fdivl
in
pop
xchg
stos
scas
push
lock
test
mov
inc
mov
xor
mov
push
adc
cld
adc
popa
repz
mov
les
jno
dec
fistpl
stos
xchg
pushf
mov
imul
lods
sub
lret
mov
jg
mov
nop
lret
test
push
xchg
adc
add
jg
xchg
add
lods
mov
cltd
popf
xor
dec
add
xchg
jae
pop
mov
cmp
xchg
sbb
sbb
jecxz
mov
push
mov
xchg
inc
add
jecxz
shlb
lret
mov
mov
push
icebp
loopne
shlb
xor
ret
pop
jle
mov
add
sbbb
and
stc
inc
sbb
xlat
pop
scas
xor
lock
rclb
or
out
das
iret
xor
or
ja
push
push
repnz
inc
pop
rorb
xchg
fldcw
xchg
cli
std
adc
ja
pop
fmul
test
fldpi
loop
insl
and
jmp
jge
lods
push
shlb
mov
mov
jp
ret
insb
mov
loope
pop
fistpl
and
gs
fldlg2
inc
sbb
mov
sub
clc
adc
push
popf
fdivrp
xchg
loope
mov
pop
cwtl
and
insl
in
jno
mov
mov
pop
cmp
fildl
aad
outsl
xchg
mov
inc
lods
push
cld
adc
mov
iret
push
cltd
in
or
sti
push
pop
into
testb
push
nop
inc
je
jg
xchg
jb
stos
xchg
xchg
sbb
pop
sbb
adc
or
repz
or
das
ds
cmpsb
pop
mov
ljmp
push
adc
lea
icebp
fs
cmp
cli
popf
mov
mov
mov
scas
cmpsb
mull
dec
jns
stos
mov
push
dec
sbb
bound
mov
lahf
jbe
mov
xor
jns
ret
std
lea
ljmp
xor
pushf
add
hlt
push
mov
jae
mov
test
add
imul
addr16
jmp
fdivl
jp
int
push
leave
insl
jp
or
mov
push
out
xchg
ret
int
xchg
xbegin
addr16
xor
mov
xor
jo
xchg
add
mov
sub
sbbb
mov
ror
add
out
pop
jno
mov
add
pop
sub
mov
mov
test
xlat
and
call
repz
cltd
cmp
sub
orb
add
shrb
adc
loope
sub
cmpsb
sbb
jne
aam
outsb
inc
inc
std
jle
jnp
test
cmp
adc
dec
les
stos
pushf
xchg
std
push
pop
insb
inc
call
adc
icebp
fnstenv
mov
and
pop
adc
out
sarl
adc
mov
popf
dec
mov
dec
pop
stos
adc
gs
pop
pop
push
bound
xchg
mov
std
shlb
mov
shrb
inc
adc
mov
dec
dec
out
push
ds
js
call
bound
iret
fdivrl
fsts
jmp
fwait
add
pop
mov
in
xor
add
scas
fwait
jns
lahf
arpl
sahf
jmp
movsl
jns
pop
fcoml
mov
cmpsl
sbb
xchg
lahf
mov
aaa
jns
pop
inc
pop
test
clc
cmp
nopl
mov
aam
lahf
in
faddp
mov
adc
cmp
lea
dec
sbb
and
sbb
xor
mov
mov
mov
pushf
cmp
rorb
pop
arpl
cmp
jge
xchg
adc
loopne
ret
lahf
frstor
add
pop
xlat
jno
or
scas
jle
xchg
loope
std
out
hlt
xchg
push
mov
mov
xor
cli
inc
sbbb
imul
cmp
pop
push
xor
inc
jg
xor
lret
imul
mov
sahf
push
or
mov
sarb
mov
lahf
movsl
pop
pop
pushf
adc
or
or
pop
mov
mov
mov
nop
and
iret
cld
inc
decb
pop
leave
cmp
lcall
dec
sti
sbbl
and
sahf
cmp
pushf
xchg
pop
cmp
ljmp
inc
shrb
clc
and
sub
daa
mov
jb
add
inc
xchg
scas
sub
sarl
clc
lret
into
data16
in
mov
enter
pop
stos
jae
sbb
popf
adc
jmp
xchg
jns
mov
test
test
lahf
enter
sub
lahf
out
pop
inc
xchg
jle
cmpsl
jnp
add
lds
sahf
or
cmp
mov
pop
and
adc
fnstenv
inc
sbb
jp
jg
xor
mov
pop
ds
movsl
addr16
xchg
mov
clc
addl
hlt
stc
or
mov
dec
es
xchg
divl
imul
xorb
mov
pop
push
and
mov
pop
cvtps2pd
loop
sub
and
pop
xchg
mov
out
jne
push
push
js
out
fcmove
pop
ss
addl
clc
jo
xchg
push
fists
pop
loop
sbb
and
sti
adcl
add
push
int
add
test
insb
and
xchg
pop
push
or
shlb
jg
or
sbb
sub
cmp
loop
lret
mov
or
cmpsl
push
fbld
jecxz
mov
dec
jle
mov
push
sbb
popf
lahf
in
xor
pop
test
mov
shrl
addl
cmpl
out
loopne
cwtl
int3
std
mov
mov
dec
mov
inc
dec
mov
addr16
in
jle
sbb
fsubs
or
xchg
test
popa
lcall
hlt
mov
pop
pop
imul
inc
adc
and
cmc
add
ss
movsl
fcomi
ds
push
jge
cwtl
mov
xchg
sub
andl
fsubl
push
subl
push
movsl
jnp
mov
ja
pushf
inc
fists
push
mov
out
jle
mov
pop
push
sub
sub
loop
mov
or
dec
fs
cmp
or
mov
sbb
mov
mov
adc
test
pop
test
adc
xchg
jnp
mov
lret
mov
mov
lods
out
xlat
xor
cmc
push
push
ljmp
dec
sub
xor
pop
xor
les
rclb
add
jge
outsl
testl
dec
mov
jo
in
pop
xchg
or
sub
mov
push
lock
jbe
leave
cs
sbbl
aas
les
out
xor
xor
pop
test
je
cmp
jae
pmaxub
pop
aam
push
mov
fwait
push
push
add
loope
ret
fnstsw
cmc
lcall
subl
stos
xchg
andl
dec
dec
pop
push
lea
movsb
adc
ljmp
subb
mov
xor
jns
jne
cmpsl
fucomip
jl
or
loope
jb
jnp
add
cli
addr16
loop
ss
fistl
dec
arpl
sbb
sbb
dec
mov
pop
cwtl
outsb
push
aad
dec
movsb
pop
movsb
add
rcrl
into
xchg
outsl
pop
fs
ljmp
xor
xor
fwait
dec
arpl
out
lea
jl
aaa
dec
lods
fadd
or
jle
inc
sbb
clc
incb
leave
or
cmp
outsb
movsb
xchg
mov
fiadds
pavgb
mov
cmp
nop
hlt
stc
rcrb
xor
scas
dec
addb
add
lods
dec
enter
das
sbb
mov
or
push
jo
shrb
jmp
insl
js
add
pop
jg
push
mov
push
sub
fdivs
pop
xlat
push
ja
xor
inc
dec
out
in
dec
pop
cmp
xchg
pusha
mov
lret
mov
loop
and
cltd
and
mov
mov
mov
aaa
cs
cld
inc
add
inc
xchg
out
push
jnp
loop
push
aam
movsl
outsl
orb
mov
push
test
stos
sarl
push
scas
movsb
enter
out
xor
lcall
divb
sub
arpl
cs
sub
mov
adc
jecxz
movsb
pop
dec
jp
repnz
hlt
iret
push
fs
fmul
add
je
pop
and
and
rolb
cli
sub
sbb
mov
leave
outsl
outsb
je
stos
cmp
sub
fistl
adc
sbb
stos
mov
lds
cld
out
pop
dec
dec
adc
fsubs
adc
ljmp
pop
aad
icebp
xchg
mov
and
loop
jae
je
movsl
fdivrs
imul
xlat
loope
outsb
jp
out
lods
roll
mov
pop
dec
ret
xchg
cmp
mov
push
daa
or
mov
and
decb
and
mov
adc
mov
jle
es
fs
add
je
jle
rcll
test
cmp
cwtl
sbbl
fimull
add
and
mov
inc
mov
jno
and
mov
lret
adcb
repz
imul
dec
and
ret
and
and
sbb
sahf
pop
lods
popa
sub
mov
in
mov
out
mov
inc
jbe
and
cmp
dec
cmp
xchg
fisttpl
xor
inc
lods
mov
xchg
inc
rcrl
push
sbb
sub
fistl
shll
inc
sub
or
scas
dec
fcomps
xchg
ljmp
mov
stc
pop
sbb
out
mov
pop
inc
push
cmc
test
mov
ficoml
mov
imulb
enter
pop
test
es
ret
test
inc
inc
into
movsb
dec
mov
and
pop
rcl
stc
mov
xchg
adc
add
scas
sub
repz
dec
int3
inc
leave
mov
or
xor
in
addb
xlat
js
jns
add
adc
jle
jg
dec
das
shrl
sub
aad
cmpl
repnz
scas
loopnew
cwtl
jmp
sbb
lret
lret
cs
mov
add
ss
ss
and
or
popf
push
push
add
popf
mov
repnz
add
sub
rolb
jns
jbe
xchg
mov
xchg
cmp
mov
jge
mov
jo
enter
pop
test
repz
repz
push
mov
pop
sbb
or
mov
aad
divl
sbb
jae
dec
dec
pop
mov
mov
fdivrs
mov
push
and
loope
iret
pop
mov
pop
mov
call
mov
popa
loop
int
out
pop
je
je,pt
sahf
sub
loope
fs
loope
inc
or
sahf
push
adc
push
jg
and
ja
fisubl
jp
iret
iret
arpl
test
cmc
adcl
outsb
mov
adc
dec
xor
cmp
mov
and
out
in
cmp
nop
push
mov
jg
adc
into
repz
mov
jl
push
pop
jle
ja
mov
mov
mov
inc
cmc
shrl
inc
aad
lods
cmpsb
nop
jnp
popa
dec
jbe
imul
les
std
pusha
les
add
sti
mov
jg
mov
pop
push
inc
iret
call
fwait
sbb
addr16
insl
xor
xor
les
fidivl
scas
xor
or
push
cmpsl
jmp
sub
jl
push
shrl
dec
and
bound
leave
adc
pop
popa
cmpsb
sbb
jno
push
add
into
or
sbb
push
jl
jmp
int
jns
leave
fs
push
shr
rolb
cmp
sbb
add
popf
sub
fsubl
push
popa
outsl
cmpsl
lods
or
lahf
roll
pop
in
js
dec
add
das
ret
or
dec
in
adc
push
gs
fld
mov
ret
cmp
sub
or
jecxz,pt
xchg
adc
lods
jge
push
mov
jae
pop
into
fbld
mov
xor
pushf
outsl
xorb
lds
cmp
xchg
cmpsl
stc
int3
or
scas
in
pop
rorl
pop
add
mov
dec
xchg
das
mov
mov
aaa
mov
inc
inc
jae
pop
subb
fs
inc
jb
mov
flds
pop
cvttps2pi
or
xchg
xchg
in
stc
popa
fdivr
push
inc
push
and
mov
adc
fcoms
jne
inc
jmp
mov
movsb
scas
xor
xor
mov
add
jns
fst
adc
cmp
mov
add
shl
flds
test
cltd
mov
sub
and
ficomps
mov
dec
add
pop
ja,pt
mov
xchg
fmul
pusha
mov
shlb
pusha
mov
loopne
stos
xchg
mov
adc
xchg
xlat
sub
sbb
mov
loopne
loope
adc
scas
add
scas
rol
fwait
and
mov
push
stc
pop
add
mov
xchg
mov
pop
dec
std
ret
fdivrl
jnp
out
clc
pop
lods
in
movsb
push
sbb
inc
dec
xor
call
imul
cld
insl
aad
aaa
push
cmpl
push
adc
sub
gs
mov
mov
fwait
mov
into
stos
loope
fdivs
dec
aaa
lahf
cmp
inc
cmp
scas
idivb
xor
sub
outsl
xor
ret
scas
cs
cmp
popa
or
adc
das
mov
xlat
mov
test
in
in
push
scas
les
daa
mov
mov
jp
add
mov
repz
mov
repz
and
mov
adc
pop
cmpsb
mov
inc
xchg
adc
stos
jno
or
call
lock
xchg
and
jecxz
scas
pop
fwait
xor
fisubrs
jg
or
xchg
dec
inc
mov
loop
outsl
xor
xor
pop
dec
lahf
mov
xchg
ret
jo
stos
repz
pop
sub
push
insb
sub
sbb
or
add
leave
push
mov
cld
sbb
aam
mov
clc
std
xor
inc
mov
pusha
imul
dec
inc
push
sbb
and
dec
lcall
mov
arpl
or
test
leave
rorl
xchg
int3
out
scas
setno
lret
out
cmp
push
sub
dec
and
insl
in
mov
int
into
mov
repnz
imul
xor
insl
xchg
scas
in
push
push
popf
fstpt
mov
int3
call
fwait
stc
dec
pop
ss
test
pop
mov
popa
sbb
xor
cli
ds
fcmovnb
scas
or
jmp
pop
fwait
stos
xchg
bound
fs
clc
push
addr16
sub
shrb
loope
lahf
popf
cmp
and
sti
inc
cwtl
push
xchg
mov
ret
sbb
push
lret
pop
ja
ljmp
pop
inc
push
dec
std
or
ret
inc
pop
loopne
jmp
jmp
lahf
out
lock
push
xor
push
inc
inc
or
mov
pop
jnp
adc
jo
and
mov
gs
test
sub
or
cli
cmpl
mov
adc
int3
subb
add
mov
aad
lcall
xlat
or
testb
mov
mov
sbb
hlt
addr16
mov
mov
out
cmp
hlt
clc
ret
xchg
shr
scas
test
cmp
outsb
icebp
loope
ljmp
pop
vminsd
pop
rclb
or
push
pop
inc
lcall
pop
xor
clc
pop
cmp
int3
shr
mov
lods
pop
stos
bound
or
mov
cmp
lret
popf
or
adc
jle
les
jmp
cmc
iret
mov
add
jnp
bound
jl
add
ret
insl
adc
mov
cli
pop
add
push
pop
pop
mov
test
cmp
xor
sub
mov
add
and
sub
adc
and
scas
pop
rcrb
sub
push
gs
loope
shr
orb
push
roll
mov
test
out
sub
int3
sbb
push
out
pusha
lcall
and
or
pop
ror
mov
mov
sub
das
sub
lods
fisubrs
addr16
push
or
mov
outsl
nop
cmp
jae
movb
pusha
or
or
xchg
rcr
jb
pop
std
sbb
push
sub
fdiv
mov
mov
mov
xor
cmc
mov
fildll
xchg
or
or
das
push
sub
xchg
dec
jo
xchg
fnstenv
daa
mov
mov
xchg
out
xchg
and
int
mov
cwtl
inc
cs
or
test
add
jae
sbb
sub
push
shrl
inc
sub
sbb
cmp
test
hlt
or
push
cmp
cmp
mov
shr
fstl
sbb
add
icebp
ljmp
enter
pop
xorl
scas
pop
data16
sti
and
lcall
dec
sar
das
fdiv
movsb
cltd
icebp
or
lods
or
jne
ljmp
data16
mov
xor
xchg
mov
out
dec
inc
push
loope
xchg
popa
fidivs
loope
shrl
xchg
daa
cmp
pop
xchg
jbe
xchg
inc
ret
xor
sub
idivb
int3
pop
fs
push
insl
adc
sbb
in
ja
in
xor
jle
xor
jne
cmpsl
outsl
mov
stos
cmp
adc
jp
mov
jnp
ja
fidivrs
sub
decl
icebp
mov
rorl
cli
add
pop
xchg
mov
mov
jge
cmp
xor
jecxz
sbb
pop
xor
test
ds
mov
dec
adc
mov
mov
xchg
outsb
sub
shll
push
clc
push
loop
in
out
std
loope
fdivs
sahf
push
icebp
inc
push
cli
mov
push
dec
xchg
xchg
test
in
test
mov
or
js
pop
pop
dec
sahf
pop
hlt
adc
test
xor
cmp
inc
jl
cltd
add
fwait
in
inc
lcall
mov
lcall
rcll
je
cmpsb
xlat
inc
cmp
pop
out
bound
add
cmpsl
loopne
gs
rcrb
jne
loopne
xor
outsb
xor
sbb
repz
mov
sbb
push
jo
mov
or
gs
push
and
pop
popa
or
mov
repnz
cltd
mov
test
mov
xor
xor
out
jno
lods
mov
adc
shrb
jp
icebp
mov
in
jg
inc
jg
into
and
sbb
loopne
inc
push
adc
jo
mov
lods
cmpsl
dec
dec
fsubr
scas
scas
or
inc
and
imul
jle
or
jle
fucomi
mov
cmp
jge
dec
fadds
dec
lret
sahf
pop
mov
sbb
cmp
outsl
iret
sahf
negb
xchg
mov
adc
shrb
mov
xchg
and
sub
mov
dec
in
xor
sbb
cmp
cli
lods
mov
sbb
paddd
shlb
clc
ret
pop
divb
hlt
inc
sbb
sbb
call
jecxz
adcb
je
int
int
mov
sbb
pusha
call
dec
adc
lods
add
dec
test
jae
mov
pop
call
jae
das
fsubrs
pop
push
or
and
jo
mov
xchg
inc
mov
jne
mov
outsl
addr16
xorb
pop
cmp
lahf
sub
test
imul
dec
push
ja
std
sbb
clc
inc
mov
push
aam
aad
cs
repnz
xchg
loopne
push
je
push
mov
shll
pop
push
jle
xlat
cmp
bound
adc
lods
dec
and
mov
imul
or
sub
mov
adc
fwait
push
jno
les
lods
pop
pop
jnp
xor
fucom
and
loope
fidivl
push
fwait
push
xor
sbb
push
inc
dec
sub
je
cmp
pushf
sahf
sbb
sbbb
mov
loopne
repz
test
mov
pop
sub
fcompl
fwait
jmp
pop
ret
xlat
cld
jmp
sub
inc
data16
lods
inc
andb
push
dec
pusha
cmp
ret
jg
nop
in
int
jecxz
dec
adc
arpl
mov
adc
pop
int
pop
out
ljmp
das
addr16
outsl
or
lods
mov
js
in
push
mov
fstpt
icebp
and
jmp
dec
xchg
and
jge
pop
loop
dec
lock
in
push
pop
cld
cli
cmp
jp
ret
mov
pop
test
int3
enter
mov
arpl
lret
cwtl
cld
shlb
jle
mov
jmp
pop
lcall
loope
fbstp
xchg
outsb
in
pop
call
inc
cld
sub
push
or
test
mov
les
sbb
les
into
hlt
movsl
xchg
xor
xchg
cmp
push
movsl
push
fadds
sub
jecxz
int3
hlt
out
mov
add
daa
scas
xchg
pop
shr
xchg
xchg
jb
and
cmc
lcall
mov
push
cld
into
or
ret
in
or
or
pop
aas
js
enter
mov
pop
cmp
icebp
test
and
mov
sub
call
lahf
mov
mov
cmp
add
jle
dec
mov
jnp
outsb
es
cmpsl
sahf
push
adc
ds
sub
test
aas
leave
cmp
sbb
shll
arpl
jno
negb
aas
and
gs
add
cmp
add
cltd
mov
mov
adc
dec
int
insl
out
mov
shrb
mov
hlt
cmp
cmp
testl
adc
add
or
fisttps
jl
jb
daa
jne
push
adc
push
mov
jnp
add
dec
jl
aam
inc
cmp
pop
sbb
push
fwait
movsl
sbb
lcall
jge
xchg
stc
mov
and
dec
cltd
or
arpl
mov
movsl
adc
adc
xchg
or
mov
push
rclb
outsl
dec
out
or
mov
push
dec
icebp
cmpsl
std
call
sbb
dec
pop
mov
inc
or
sub
out
cmp
jle
cld
es
inc
ja
mov
sub
gs
sub
lret
dec
mov
mov
out
jle
in
xor
xchg
add
subb
push
xor
sub
outsl
mov
jbe
imull
gs
push
lcall
mov
mov
in
ret
and
xchg
je
in
sti
sub
cmpsl
dec
push
mov
imul
mov
jle
xchg
aas
jecxz
and
pop
stos
in
jbe
je
outsl
pop
inc
or
pop
lcall
inc
data16
stc
mov
xor
xor
pop
sub
frstpm(287
testl
mov
dec
hlt
pop
imul
gs
cmc
xchg
mov
out
push
nop
jecxz
aad
xchg
cld
repnz
data16
lods
mov
int3
mov
adc
leave
xchg
adc
in
mov
push
xor
jno
divl
mov
pop
lea
js
rolb
cmp
jge
mov
imul
dec
dec
cmpsb
inc
xorl
lock
rolb
in
jo
repnz
sub
mov
cmp
idivb
inc
scas
mov
fadd
ja
scas
shll
rolb
clc
imul
xchg
sbbb
sbb
jne
ljmp
cmp
cmpsb
adc
sbb
dec
scas
mov
aaa
cmc
pop
aas
dec
in
adc
mov
cmc
and
jnp
mov
jne
mov
mov
dec
fs
xchg
inc
test
push
mov
ret
push
pop
jle
xchg
stos
sar
and
loopne
xchg
jne
adc
out
sbb
dec
mov
jmp
shll
lahf
pop
pop
mov
add
test
fildll
push
ljmp
out
or
dec
stos
sahf
rorb
int3
movsb
pop
mov
loope
adc
leave
jns
lods
outsb
xchg
jns
iret
je
vsubpd
arpl
mov
push
inc
out
pop
mov
pop
inc
sbb
rcrl
lret
pop
hlt
jge
or
cmp
jecxz
outsb
mov
in
pop
sti
adc
and
push
addl
fisttps
cmc
out
sarb
je
cmp
inc
mov
lock
movsb
js
jl
and
adc
test
or
xchg
ja
mov
or
jmp
cmc
data16
cmp
repz
jbe
lret
andl
stos
add
jmp
dec
loop
insl
xor
mov
adc
inc
clc
or
cmp
in
mov
adc
out
in
mov
dec
xor
sbb
cmp
add
mov
call
cmpsl
es
ja
scas
hlt
loope
xor
fstl
adc
mov
das
jnp
andl
xlat
jge
and
mov
rcrl
sahf
sub
shrb
inc
out
dec
xor
jae
mov
idivb
add
stos
pop
inc
push
test
pop
stos
pop
rol
add
movlps
out
enter
cmp
xorl
lret
cmp
hlt
ret
adc
rcrl
adc
dec
inc
leave
imul
jge
or
movsl
push
push
xchg
shrb
lret
xchg
mov
cli
stos
and
mov
mov
push
ja
imul
push
rol
cmpsl
mov
sub
mov
dec
sahf
pop
in
notl
xor
out
mov
or
push
mov
outsb
outsl
fsts
test
fwait
fwait
sub
out
cli
mov
and
outsl
lret
or
lret
push
xchg
aas
cmpsl
pop
fmull
out
fcoml
xor
clc
aas
lcall
dec
popf
ds
sbb
ja
mov
pop
sub
sbb
cmp
push
repz
push
push
xor
mov
push
mov
mov
dec
mov
pause
cmp
test
daa
mov
fs
pop
iret
sbb
sbb
xor
push
shll
mov
inc
sarb
ljmp
out
adc
and
dec
dec
sbb
xor
mov
pop
mov
pop
hlt
in
pop
push
outsl
add
sub
lcall
jge
aaa
xor
sbb
in
outsb
lret
fnstcw
fimull
dec
stos
bound
xor
sarb
cmp
or
stos
adc
and
repz
pop
sbb
push
pop
push
push
jbe
hlt
mov
jae
jnp
push
enter
mov
xor
xor
mov
and
add
ja
jnp
out
dec
fbstp
xor
lds
sbb
daa
movsb
xlat
and
xchg
sbb
in
xor
mov
sub
xchg
push
mov
jno
xor
test
xchg
lea
xor
and
shl
es
jmp
xor
inc
mov
in
jl
je
pop
and
jns
sti
fcoml
jo
rcr
hlt
cmp
lret
pop
insb
xor
jge
add
xchg
add
add
inc
xor
adc
pop
sub
jns
jl
rorl
mov
mov
push
ret
test
or
dec
into
mov
and
xchg
iret
data16
mov
xchg
into
int3
addb
pusha
std
icebp
rcl
cltd
cmp
or
cmp
lds
ret
ret
or
mov
dec
mov
jle
aad
repz
sub
cli
cltd
je
mov
fwait
add
lahf
repnz
insl
lea
int
mov
pop
clc
subl
rcrb
cmp
lcall
sub
out
clc
jno
lret
push
and
push
repnz
add
aam
or
imul
fdivrs
adc
rep
xor
cmc
xlat
mov
lock
xchg
dec
pop
fdecstp
mov
mov
inc
add
sub
cli
cmovge
xor
test
ss
out
sbb
fisubs
insb
mov
stos
shlb
xlat
cs
adc
frstor
jno
mov
jno
fcmovnb
lds
leave
jb
repnz
xor
pop
stos
pop
mov
dec
dec
xor
cmc
test
imul
push
fldenv
loope
popa
sub
fists
cmp
xbegin
sub
sbbl
mov
fistpll
mov
out
push
xlat
test
mov
xchg
inc
mov
or
or
aas
add
movsb
cli
insl
mov
adc
mov
sbb
jno
push
ret
sbb
notl
add
std
lea
pop
aas
xchg
mov
push
pushf
xor
adc
shrl
sub
roll
inc
xor
int3
popf
test
push
dec
push
push
inc
hlt
pop
mov
inc
sub
jmp
or
cmpsl
cld
scas
and
lret
sbb
out
pop
js
and
imul
and
mov
test
outsl
in
idivl
xor
cmp
rcrl
adc
out
jae
outsb
adc
js
fs
dec
mov
repnz
loop
stc
in
inc
stos
sub
das
xchg
es
or
or
pop
popa
stos
adc
dec
bound
sub
jo
ja
sub
sbb
jmp
pushf
repz
out
dec
push
sbb
mov
jmp
pop
or
mov
filds
push
jns
push
jbe
int3
hlt
adc
js
sete
imull
push
mov
mov
icebp
mov
jmp
mov
mov
roll
dec
push
push
stos
iret
pop
fsubs
mov
or
repz
repz
add
dec
lahf
mov
xchg
scas
in
sub
cmc
push
fistps
pop
dec
xchg
and
jae
xor
clc
stos
pop
push
sub
lcall
pop
rorl
sbb
movsl
push
arpl
stos
dec
mov
cwtl
stos
dec
es
ja
cmp
ljmp
jmp
in
ret
popf
xor
adc
fwait
bound
push
lahf
jle
loope
pop
out
and
mov
fdivrs
test
stos
and
xchg
push
sub
cmp
push
fistl
adc
fs
cld
sbb
inc
mov
pop
mov
ljmp
gs
and
loopne
shl
test
pop
or
add
xor
gs
jg
into
stos
fisubl
leave
std
or
out
xlat
cmp
pop
push
bound
add
int
dec
arpl
inc
imul
dec
mov
sub
and
daa
insl
je
xorl
call
pop
dec
jmp
imul
in
movsl
cs
shrl
cmp
dec
or
and
xchg
cs
aad
fstl
rcr
mov
outsb
dec
mov
scas
mov
insl
jae
cmp
fmul
inc
mov
repnz
repz
push
xor
and
addb
inc
stos
loopne
mov
push
jecxz
xchg
dec
call
std
loop
jl
mov
push
mov
or
xor
push
enter
daa
xchg
cltd
test
mov
sbb
jmp
fstps
in
imulb
jmp
cmc
pop
cmp
dec
dec
sub
stos
push
push
push
scas
rcll
mov
ficompl
mov
dec
leave
mov
sarb
in
jns
cs
fadds
dec
cmp
jmp
dec
ljmp
adc
push
mov
inc
pop
lods
xorb
add
sahf
mov
pop
in
into
in
lds
mov
sub
and
addr16
jl
xchg
repnz
and
mov
int3
mov
cmp
add
sbbb
loopne
call
imul
push
cmpsb
or
repnz
and
pop
mov
cwtl
sub
push
nop
outsb
push
iret
adc
jmp
or
or
jne
cmp
mov
pop
sbb
repnz
push
pop
popf
orl
das
in
in
mov
loope
or
and
cmpsb
in
lds
inc
sub
ds
sahf
sbb
xor
enter
outsl
insb
int3
dec
jmp
cmp
roll
arpl
and
inc
int3
pushf
sbb
mov
adc
ja
push
sbb
decl
xchg
lcall
mov
loopne
mov
pop
pop
loopne
mov
and
shlb
shlb
add
bt
xchg
fisttpl
pop
sub
xchg
test
pop
and
test
pop
pop
mov
sbb
xor
je
imul
out
rcrb
lcall
icebp
dec
cwtl
jo
lahf
pusha
sbb
gs
lahf
sahf
add
add
pop
mov
sub
xchg
les
sarl
dec
push
sbb
cmc
mov
dec
cs
repz
jmp
push
pop
sbb
hlt
sbb
push
aaa
or
xchg
ljmp
push
fildl
fsubrs
lods
ret
jmp
imull
cmp
lods
add
int3
pusha
mov
mov
popf
dec
jle
fstpl
sub
cmp
cmpsl
ljmp
mov
mov
xchg
sub
test
mov
jne
call
mov
test
ja
and
stc
pop
imulb
in
mov
inc
cltd
cld
int3
jne
loop
dec
mov
jmp
fsubl
jmp
in
mov
or
imul
xor
in
outsb
gs
movsb
push
ljmp
int
lea
jl
push
cmpsl
dec
lods
ja
setno
add
clc
leave
pop
adc
mov
sub
pop
pop
mov
lcall
push
pusha
nop
mov
jp
xchg
test
add
stos
xchg
cld
rorb
jp
sbb
cwtl
out
outsb
adc
popf
mov
jge
xor
xchg
inc
jmp
cwtl
and
mulb
lea
mov
cmpsl
aas
lock
push
mov
popf
push
outsl
andl
adc
out
outsb
mov
aam
in
hlt
imul
scas
jbe
ljmp
jp
fmulp
subb
daa
adc
mov
jbe
sbb
fisttps
shrb
push
test
or
push
jecxz
out
jecxz
out
into
cli
push
aad
push
lock
into
dec
lcall
scas
jae
jns
xlat
mov
dec
push
aas
add
ret
xchg
fwait
es
ljmp
mov
sbbl
lahf
lock
mov
push
fxam
cltd
add
shl
fsubrs
mov
sub
xchg
stc
mov
popf
xor
cmp
ljmp
testb
ds
das
pop
int
repz
xor
and
test
insl
hlt
mov
mov
pop
push
int
addr16
inc
lcall
nop
or
pushf
push
push
pusha
lret
sub
out
mov
push
into
pushf
jmp
pop
sub
clc
mov
jmp
push
mov
insb
cmp
lds
dec
add
out
mov
jne
sbb
clc
pop
pop
movsl
sbb
and
fnsaves
clc
scas
rcll
js
mov
xor
jle
jo
jmp
xorb
lret
mov
xor
xor
cli
and
adc
cwtl
sub
shl
xchg
jle
add
dec
ja
ljmp
in
sbb
lods
mov
inc
push
lret
inc
lds
lcall
and
push
cltd
fidivs
dec
add
jge
mov
cwtl
imul
mov
ja
mov
jbe
and
test
push
fwait
jno
add
pop
cmpsl
lret
pop
push
cmpsl
rorb
adc
in
stc
out
es
xchg
cmp
movb
push
in
cmp
mov
ret
ljmp
aas
mov
shl
test
lea
repnz
push
add
xchg
loopne
pop
mov
sbb
aam
xchg
push
std
dec
pop
cmp
cld
jp
adc
adc
ret
and
and
pusha
lret
aad
dec
popa
add
fisttpl
insb
or
lods
ret
jnp
sbb
orl
jno
add
add
push
push
mov
cmpsb
enter
testl
jge
mov
mov
cmp
lds
mov
or
add
stos
test
fists
xor
mov
xchg
pushf
xchg
mov
insl
jecxz
push
imul
loopne
xchg
mov
fistps
fdivrs
lret
cltd
rcll
sbb
xor
cmovae
dec
in
add
subb
inc
pop
imul
aas
movzwl
mov
jns
or
xchg
subl
xlat
xchg
scas
push
aad
pop
notl
push
jne
lea
dec
cmp
test
jns
mov
inc
or
les
xchg
cltd
jno
imul
pop
push
lret
push
sahf
lahf
sti
pop
shll
lret
mov
add
stos
jg
cmp
mov
and
jnp
or
pop
push
sbb
xchg
mov
leave
mov
fists
xor
dec
fucomip
sarb
xchg
adc
mov
pop
adc
test
fisttps
push
popf
jo
popa
in
andb
jb
and
and
mov
mov
addr16
aad
rorl
adc
dec
outsl
cmp
cmp
push
adc
sbb
fistl
js
xor
sbb
cmp
shlb
mov
mov
inc
mov
loopne
stos
ss
cltd
and
mov
adc
pop
out
dec
mov
cwtl
jb
xorb
pop
scas
dec
mov
ss
xor
scas
sbb
fstpl
test
jne
add
lea
or
lcall
and
addl
xchg
pop
jo
int3
mov
mov
addl
stos
out
int
pop
jle
mov
setb
jp
lock
mov
out
dec
xor
iret
and
mov
in
data16
clc
jge
adc
or
xchg
mov
lock
sub
imul
lds
addr16
ds
dec
push
jno
cmp
adc
test
mov
imul
dec
push
popa
inc
fsts
push
cmp
mov
cmp
pop
mov
arpl
sub
aaa
jb
in
xlat
sbb
repnz
mov
pop
push
das
mov
iret
sbb
dec
nop
pop
in
fimull
hlt
in
imul
push
jns
es
jnp
xchg
pop
pop
test
rcrl
ret
fcomps
mov
stc
mov
inc
cmp
shl
sbb
sbb
iret
ljmp
out
lret
cmp
icebp
mov
sqrtps
adc
fildll
push
enter
divl
xchg
inc
out
adc
ret
js
cwtl
rclb
xchg
cmp
aas
test
jae
insb
aaa
mov
push
jns
mov
scas
xor
stc
or
into
ret
lods
jne
fnsave
dec
mov
lahf
dec
notb
xor
cmpsb
push
push
imul
inc
or
pop
mov
scas
dec
ss
mov
xchg
pop
arpl
in
cli
jnp
sub
cwtl
sbb
dec
cmpsl
mov
push
mov
rcr
in
and
inc
sti
inc
dec
mov
xchg
popf
mov
cltd
dec
aaa
sbb
stc
dec
icebp
faddl
in
inc
sub
mov
fnstcw
mov
in
push
adc
xchg
dec
lahf
mov
cmpsl
xchg
pop
or
mov
and
movsl
sbb
ret
push
xor
push
push
inc
xchg
in
sbb
idiv
or
jnp
cmp
sub
es
insl
es
prefetch
test
rclb
idiv
mov
insl
cmp
adc
lcall
jns
pop
outsl
xor
xchg
mov
push
out
cmc
jne
dec
add
in
dec
loopne
xor
lds
mov
sub
mov
test
frstor
ljmp
sbbb
dec
clc
xchg
pop
mov
loop
bound
dec
add
gs
mov
and
push
jp
divb
xchg
jmp
cld
dec
faddl
cmp
jnp
imul
shll
mov
std
mov
inc
xchg
cltd
dec
xchg
shlb
jp
sub
or
push
jle
inc
jle
iret
cmp
xchg
pop
jp
rcrl
and
push
push
cld
loope
mov
push
data16
shrb
jp
mov
rorb
add
std
dec
repnz
xlat
push
cli
fwait
sub
push
jno
cli
es
mov
fildl
enter
push
in
mov
dec
mov
movsl
ss
mov
pop
jg
addr16
push
aam
addr16
cmpsb
out
cmp
xchg
cmc
aad
cmpsb
inc
and
in
lods
xchg
xchg
fs
inc
das
inc
jecxz
stc
mov
mov
pop
dec
pop
or
mov
inc
sbb
movsb
jb
xchg
lea
sub
fs
movb
jae
cmc
out
jno
adc
lods
jne
stos
in
cmp
leave
lock
sub
scas
and
cmp
xchg
ret
xchg
pop
adc
jge
adc
or
popa
cld
imul
jno
mov
xchg
inc
and
addr16
inc
push
sbb
and
adc
cs
ja
loop
data16
xor
lahf
mov
inc
and
bound
sbb
sarl
std
movsl
out
xor
pop
pop
fmull
sub
adc
lret
daa
pop
fildl
or
add
ljmp
mov
xchg
mov
cld
arpl
out
jnp
jle
mov
ss
dec
xchg
jne
jae
dec
mov
enter
mov
cwtl
mov
call
or
adc
xor
test
jae
mov
or
inc
mov
mov
movsb
lcall
imul
leave
mov
push
cld
test
add
sub
sub
mov
push
repz
xchg
out
mov
fstl
out
inc
shrl
or
pop
pop
xchg
jno
insb
scas
dec
mov
scas
testl
rcl
ret
pop
lcall
cltd
jp
ret
jnp
insl
xchg
bound
add
cmp
in
push
daa
mov
xor
sti
or
mov
sub
imulb
pop
sbb
pop
pop
f2xm1
cld
jge
push
mov
bound
out
lds
ret
inc
pop
dec
lock
sbb
je
mull
lcall
fwait
jp
push
aas
sbb
aas
je
jbe
popa
and
xchg
pusha
mov
cld
fs
mov
add
test
ds
sub
adc
mov
cmpsl
mov
nop
repnz
sub
and
mov
sbb
mov
cmc
negl
mov
add
scas
adc
pop
call
push
xchg
and
pop
ja
jp
xchg
dec
cli
mov
jmp
jp
das
xor
inc
xor
and
ret
inc
sbb
add
outsb
pop
sahf
adc
lret
cmpsl
dec
movsl
lea
data16
cltd
mov
pop
loope
push
xchg
les
push
mov
les
test
lods
cmp
cs
mov
mov
xchg
xchg
into
loope
inc
cmp
cli
cmc
push
jle
call
pop
dec
into
jecxz
xor
pop
mov
roll
ja
push
cld
cmp
sti
inc
or
insb
loop
enter
dec
add
fwait
pop
add
push
insl
out
jnp
inc
sub
dec
push
xchg
mov
adc
or
inc
sub
xchg
dec
xorl
and
and
inc
or
mov
shl
into
jp
add
nopl
repnz
xchg
insl
cmpsb
or
xor
in
push
outsb
into
fwait
imul
sbb
fcomi
sbb
cmp
sarb
inc
pop
xlat
pop
mov
in
mov
popa
xor
mov
mov
push
dec
and
rcll
mov
fcmovbe
in
rorb
iret
push
popa
outsl
lcall
leave
sub
fmul
jo
je
fwait
inc
sub
xchg
inc
std
ss
iret
xchg
outsl
insl
inc
dec
inc
addl
jno
cmpsb
sbb
es
lret
icebp
mov
ss
mov
rclb
sbb
call
loopne
xchg
push
fwait
stc
or
xchg
cmc
nop
inc
into
xor
pop
mov
aaa
rsqrtps
mov
mov
in
mov
cld
jle
cltd
push
fimuls
xor
leave
and
mov
rclb
ds
pushf
xchg
movsb
shr
jno
and
je
in
out
xchg
fdivrl
popf
or
decb
lods
push
pop
mov
and
xchg
xor
cmp
into
imul
js
imul
push
push
mov
lcall
pusha
xchg
outsb
int3
hlt
mov
lea
adc
push
adc
and
add
scas
lcall
add
jle
jp
mov
ja
fnsave
fildl
push
aad
dec
adc
leave
cmpsl
fcomps
std
out
cs
xor
popa
es
mov
scas
enter
xchg
lret
jno
pushl
mov
or
mov
xchg
fnstenv
lret
scas
clc
insb
je
hlt
outsl
fidivl
cmpsl
in
lahf
sub
sub
and
call
fildll
inc
test
mov
inc
test
icebp
mov
mov
negl
and
fstl
je
imull
push
xor
aad
jb
mov
call
stc
jecxz
les
leave
mov
mov
test
lock
dec
add
adc
sbb
xor
pop
mov
cld
inc
jno
cmpsl
div
inc
aas
or
or
pushf
repnz
cli
cld
sbb
sub
aad
loope
mov
notb
mov
ds
movb
adc
arpl
dec
push
dec
push
cmp
test
jae
loope
mov
test
lret
xchg
cmpsl
aam
or
mov
dec
sbb
or
jg
sub
or
cmp
push
test
adc
arpl
dec
xchg
or
pop
add
cld
and
xor
xchg
stos
jne
lret
call
fcomi
mov
fadds
ds
add
je
add
outsl
decl
out
out
mov
inc
sti
data16
fisttps
xchg
lcall
aaa
shlb
pop
les
iret
lods
call
lcall
lahf
aad
mov
jnp
pop
jp
adc
scas
push
sbb
shlb
cmp
adc
push
xchg
jp
xchg
add
ror
sahf
pop
adc
push
call
rcrl
pop
push
and
pop
dec
inc
loop
into
mov
loopne
jle
negb
aad
movsl
mov
sbb
icebp
mov
and
loop
push
pop
fs
adc
sti
notb
jnp
pop
ds
xchg
aaa
push
repnz
lret
cld
add
hlt
xchg
adc
and
dec
xorl
or
xor
lea
sbb
sbb
mov
cmp
add
jne
dec
dec
cmp
in
stc
jnp
jno
aas
sbb
push
imul
mov
xor
out
push
push
inc
mov
adc
xor
insl
lret
dec
ret
push
cltd
jb
xor
push
mov
mov
shlb
je
dec
jnp
jbe
mov
sbb
leave
xor
cltd
jg
fwait
jns
jno
adc
lret
pop
clc
rorb
xor
or
xor
cmp
push
push
jae,pn
sbb
adc
repnz
sarb
sub
or
cmp
sbb
cmpsb
imul
into
jne
data16
mov
jae
or
inc
push
test
shlb
dec
repnz
mov
add
je
push
fistps
in
cltd
lcall
ret
push
or
mov
or
stc
arpl
cmpsl
aaa
sbbl
repz
stos
call
lds
sbb
ss
jmp
in
shrl
iret
adc
jge
xor
out
jmp
js
lods
movsl
iret
lods
fsts
jnp
out
pop
mov
ds
mov
pop
shrl
mov
cltd
or
mov
test
lods
push
mov
mov
icebp
push
stc
pop
mov
in
mov
or
cltd
push
popf
ret
clc
repnz
inc
mov
mov
and
mov
mov
rorl
test
mov
std
jle
int3
cli
inc
cltd
std
xchg
aam
in
inc
and
xchg
sub
js
add
push
push
cmpsb
jecxz
test
das
fidivs
dec
cld
push
imull
mov
mov
nop
cmpb
jge
gs
fsubrl
dec
call
int
fwait
jmp
dec
mov
inc
adc
pop
push
inc
nop
mov
mov
dec
mov
outsb
and
aam
xlat
idiv
mov
jne
ss
and
test
out
das
bound
pop
sbb
dec
ja
pop
int
xlat
push
dec
dec
xchg
sub
andps
mov
shlb
xchg
ltr
imul
push
mov
ljmp
sub
mov
mov
pop
shl
mov
mov
out
and
ja
repnz
xor
int3
mov
out
pop
mov
inc
xlat
movsl
mov
xor
test
add
xor
mov
and
jg
add
aas
call
mov
addb
dec
inc
daa
popa
mov
test
lock
jp
push
pushf
lods
cmc
rcrl
lret
mov
ror
xor
jle
pop
and
sbb
fldz
xlat
xchg
dec
test
inc
je
adc
dec
lods
adcb
xchg
sbb
mov
shrl
hlt
sti
sub
mov
adc
jbe
mov
xchg
push
mov
test
gs
mov
stc
mov
adc
mov
rcll
jbe
cmp
pop
icebp
jle
mov
xchg
mov
lret
lcall
xchg
pusha
sbb
inc
adc
jmp
jb
cwtl
roll
sarb
repz
and
out
pop
cmp
ljmp
pop
xchg
sub
push
or
ja
pop
lods
mov
add
mov
fwait
push
mov
gs
mov
xor
imul
push
ljmp
and
aad
leave
sub
mov
sub
outsl
adc
sub
xchg
mov
testl
xor
xchg
icebp
cmc
cmpsl
pop
lds
movsb
sub
je
xchg
mov
or
or
subb
pop
clc
sbb
cmp
push
adc
pushf
lahf
jns
and
rcl
fnstenv
pop
xlat
xchg
gs
iret
fsubrs
sahf
ret
and
adc
or
sub
mov
sbb
out
hlt
and
lahf
fstl
adc
add
stc
sbb
rol
and
jmp
push
out
into
push
add
cmp
sbb
in
outsl
lock
xor
fidivrs
mov
lea
mov
insb
fs
push
mov
sbb
dec
cs
sahf
inc
movsl
bound
cwtl
mov
jns
jne
test
cmp
fwait
adc
adc
xor
jne
push
les
adc
dec
lods
jnp
sbb
push
shlb
mov
push
sbbl
daa
sub
pop
fstl
cmp
jecxz
cs
xchg
xchg
sub
inc
mov
in
aam
add
out
ret
pop
ds
sub
xchg
push
popf
push
inc
movl
enter
cmpsl
dec
out
int
dec
sahf
pop
dec
xor
ret
inc
mov
imul
enter
inc
adc
cmp
int3
je
cld
push
push
or
je
ret
pop
mov
imul
push
scas
cld
mov
rclb
pusha
mov
cmp
mov
and
addl
mov
das
sbbb
stc
mov
adc
rcll
je
xchg
das
ss
movsb
in
jo
fs
dec
adc
lods
addr16
scas
push
movsb
shrl
pop
xchg
aas
sahf
inc
test
pop
lahf
push
xchg
shlb
add
scas
popf
and
xchg
push
out
dec
outsl
aaa
das
mov
inc
xchg
dec
lcall
imul
rcl
jb
push
jg
jg
daa
sub
mov
xchg
push
aad
mov
orl
clc
push
xor
dec
mov
pop
xor
mov
rclb
fnstsw
mov
addb
rcrb
xor
push
fisttpll
mov
lcall
dec
sbb
mov
jbe
inc
imul
aaa
xorl
adc
push
dec
movsw
adc
icebp
pop
adc
xor
inc
es
sbb
push
or
add
cmp
mov
scas
imul
out
mov
aas
mov
xchg
outsl
mov
add
xchg
lcall
out
push
and
shll
or
pop
jg
and
sbb
icebp
mov
repnz
mov
mov
ds
adc
repz
popa
pop
cmc
push
mov
cld
aad
in
vmovdqa
xchg
jge
xchg
xor
sbbl
or
sti
push
in
pop
push
mov
or
pop
adc
pop
mov
adc
and
mov
jg
ror
jns
lock
pop
daa
pop
lret
and
jbe
test
mov
xor
je
dec
sub
push
lahf
xchg
pop
lcall
push
jns
jo
lcall
dec
mov
imul
in
testb
dec
ja
int
fucom
inc
aas
or
pusha
or
mov
sahf
insl
repz
fildl
test
jo
sub
out
xor
pop
aas
movsb
addr16
ret
jge
cld
mov
mov
dec
fiaddl
pop
mov
aad
fnstcw
inc
pop
int3
inc
into
xchg
dec
push
inc
insl
hlt
mov
lret
push
mov
out
sbb
in
inc
sbb
mov
pushf
imul
pop
cmp
insb
fidivrl
xchg
clc
mov
or
fsubrl
cmp
stc
inc
push
jne
dec
enter
repz
mov
xor
cmpsl
enter
xchg
orl
jne
inc
test
mov
sbb
sub
gs
cmc
shll
shll
sbb
xchg
sub
add
repz
xor
testl
and
mulb
cld
movsb
dec
outsb
or
mov
das
xor
cwtl
mov
sub
cs
aaa
mov
inc
jbe
xor
sub
xchg
add
inc
jp
sahf
and
mov
pop
sbb
xchg
popa
popf
adc
inc
or
sbb
sub
cmp
lahf
fcoms
ret
call
es
daa
mov
shll
outsl
jle
mov
and
jl
mull
adc
out
adc
lea
sbb
sbb
rcll
daa
das
dec
iret
icebp
stc
sbb
aas
or
cmp
test
fisubrl
shrb
mov
iret
test
and
xchg
push
or
pusha
pusha
cmc
ret
cmp
add
pushf
jle
push
jne
mov
sub
test
pop
push
cmpsl
cli
sarb
fistps
sub
xchg
pop
int3
sub
les
mov
loope
scas
push
add
pushf
repz
adc
fsubp
xor
jl
out
ja
je
mov
sbb
and
push
dec
repnz
push
iret
clc
fdivrl
xor
add
jle
into
mov
jb
sti
fdivs
js
jbe
push
xchg
rcrb
je
jno
cmc
inc
cmp
sbb
repnz
pushf
mov
inc
fistps
pop
add
rolb
les
int
cli
call
push
cli
out
dec
in
rorl
sti
and
xor
iret
in
leave
xchg
testl
pop
jge
inc
in
ret
pop
or
cmp
cld
fnsave
pushf
gs
cmpsb
sbb
sub
sub
adc
or
cmp
mov
jge
cld
xchg
add
xchg
add
hlt
xchg
push
cmp
sbb
sub
loope
xchg
outsl
mov
jae
xlat
mov
lods
in
xor
mov
mov
xchg
in
push
xchg
cmp
pop
mov
cmp
cmpsl
adc
dec
jo
cmp
push
bswap
mov
cli
adc
imul
pushf
pop
inc
nop
xchg
dec
in
and
dec
pop
mov
rcr
mov
test
out
mov
sar
push
pop
int
mov
data16
pop
adc
ret
in
sbb
bound
imul
fstl
cmp
imul
fidivrs
xchg
jnp
mov
xchg
jle
test
xor
jecxz
push
push
add
pusha
xchg
out
stos
jg
stc
pusha
cli
xor
aam
adc
xor
ds
xor
mov
push
fcmove
fstl
hlt
pop
xor
and
fldenv
lods
pushf
or
add
push
outsl
mov
fidivrs
cli
rcl
xchg
pop
push
add
xor
int3
cmp
clc
mov
ds
pop
xchg
jo
mov
fstpl
jge
shll
push
push
mov
mov
mov
fs
sub
pop
and
ljmp
ret
and
mov
addl
pop
stos
test
add
shlb
adc
popa
xchg
mov
mov
mov
cs
jg
test
loope
sbb
arpl
push
loopne
mov
and
les
push
popa
push
xor
stos
into
aam
addl
push
or
in
jmp
out
negb
fsts
inc
and
inc
clc
or
or
pop
pop
and
sbb
mov
incl
fs
inc
in
sbb
xchg
std
pop
dec
cmc
xchg
enter
sbb
mov
cwtl
mov
sub
xchg
ret
data16
jae
pop
subb
xor
scas
push
mov
sti
jmp
xor
test
cmp
jnp
jg
cs
push
push
adc
adc
bound
jl
mov
imul
mov
mov
sbb
push
fcompl
scas
push
and
cmp
jg
or
scas
push
cmc
xchg
es
pusha
add
xchg
push
jmp
pop
add
rcl
sub
fwait
push
in
in
inc
cmpsb
mov
mul
negb
xor
call
sub
pusha
mov
jp
adc
andnps
mov
lods
lods
mov
mov
das
or
cmp
sbb
jnp
sbb
push
repz
call
cmp
lcall
mov
xor
cmp
adcl
push
xor
jge
ffree
pop
push
test
mov
jge,pt
and
jae
push
vpandn
lods
push
or
das
aaa
lahf
sti
jl
pop
push
dec
sbb
repnz
jbe
push
clc
fistpl
lock
cmpsb
or
pop
push
pusha
out
push
add
je
or
jmp
arpl
rclb
adc
fdivl
mov
pop
call
shll
out
pop
aam
dec
push
mov
mov
jnp
push
jle
xor
cltd
les
mov
addr16
icebp
push
pop
lcall
cmpsb
addr16
mov
add
in
jnp
subl
mov
push
rep
fistps
dec
das
xchg
push
xchg
cmp
fs
sub
int3
jp
jb
jo
cmpsl
dec
nop
ljmp
pop
xchg
xchg
pop
lea
mov
js
sti
jge
sub
test
sbb
mov
sti
and
scas
stc
add
push
test
jno
pop
sub
cmp
cmp
fcomps
loopne
sbbl
xchg
add
test
mov
xchg
sub
lahf
pop
mov
cmp
lcall
mov
push
ljmp
push
adc
repnz
test
fisubs
fnstcw
repnz
and
daa
add
inc
adc
or
fsts
iret
sbb
push
fcomps
add
fiaddl
stos
scas
enter
pcmpeqw
jecxz
mov
imul
sti
cld
mov
cs
dec
outsb
or
data16
cli
movsl
ljmp
push
jl
dec
inc
mov
jb
aaa
xor
dec
inc
add
icebp
and
test
cmp
cltd
fmul
sarl
clc
xchg
adc
adc
add
push
xor
ja
es
inc
jecxz
movups
mov
shl
pusha
fs
pop
cld
sub
shll
negl
inc
test
push
pop
pop
adc
stos
imul
cmc
mov
mov
mov
cmp
add
mov
cmpsl
xchg
inc
subl
sbb
aam
cli
fwait
and
dec
es
test
movntq
push
stos
cld
int3
push
fistpll
xlat
loop
rorl
mov
sbbl
cmc
add
loope
inc
mov
dec
push
mov
inc
daa
test
outsb
pop
pop
jae
in
xchg
lret
icebp
jmp
cmpsl
jo
clc
stc
inc
inc
lahf
xor
or
mov
int
enter
pop
jns
inc
jnp
bound
sar
in
jns
jp
pop
push
bound
popf
xor
pushf
mov
into
clc
cltd
cmp
inc
push
test
xchg
add
movsl
inc
pop
test
repz
orb
imul
add
insb
mov
fbstp
iret
jne
sbb
loopne
xchg
scas
cmp
mov
shll
into
call
xchg
or
add
xchg
or
pushl
clc
sub
mov
mov
test
and
xchg
or
pushf
adcl
ficompl
js
scas
movsl
sub
sbb
mov
gs
sbb
or
sub
cmp
push
mov
sub
push
and
mov
pop
and
ret
out
aam
xor
cmp
mov
test
test
push
clc
pop
sti
sbbl
lods
pop
jb
mov
and
int
pop
mov
lret
mov
cmpsb
xchg
adc
add
add
pop
jp
dec
fsubl
insb
nop
and
outsl
mov
cmp
cmpl
jbe
shlb
pusha
sub
sti
fistps
cmovge
push
push
jbe
push
decb
sub
jne
sarb
popf
and
adc
hlt
icebp
pop
mov
ret
mov
mov
arpl
push
add
inc
es
push
int3
popa
sub
xchg
cmp
pop
cmc
pop
sbb
and
repz
iret
repz
xchg
popa
arpl
js
mov
test
xchg
call
mov
inc
push
inc
adc
ret
and
push
mov
jl
xor
jle
jl
jmp
popf
push
mov
mov
ret
push
stos
mov
fdivrl
clc
inc
mov
xor
push
push
faddp
mov
sub
ljmp
imul
xchg
jb
jns
movsl
push
push
adc
icebp
in
mov
jo
xor
lods
jnp
mov
mov
in
fwait
mov
fs
in
hlt
jle
add
dec
fdivrl
or
pop
cmc
inc
cmp
xor
insl
je
fnsave
inc
mov
mov
mov
push
mov
lret
pop
leave
jb
cmp
pop
mov
inc
cs
imul
repz
iret
bswap
mov
aad
shlb
imul
push
orl
and
dec
cmpl
adc
in
pop
cmpsl
icebp
and
sub
xlat
das
out
scas
dec
xchg
outsb
xchg
dec
in
cmpsl
and
sub
pusha
push
call
inc
loopne
dec
mov
insb
cmpsb
scas
cwtl
cltd
js
inc
negl
lret
bound
sub
jmp
div
subl
sub
inc
sbb
inc
inc
das
jnp
ljmp
aad
sbb
adc
dec
out
inc
jecxz
gs
movsl
clc
loop
ja
inc
outsl
mov
lods
test
ljmp
inc
mov
pop
rol
movb
xor
ret
ret
divl
subb
ljmp
in
inc
adc
out
mov
sbb
push
push
mov
sbb
cmp
push
jmp
sti
adc
hlt
xor
dec
dec
push
shlb
pop
or
call
insb
xlat
inc
cwtl
fldt
ds
pop
lcall
pop
push
aad
dec
in
popl
xchg
add
mov
int3
fcompl
cmpsl
push
xchg
movsb
push
dec
jmp
mov
inc
cs
fldenv
fwait
push
das
push
xor
jg
mulb
mov
push
jno
jle
into
or
push
mov
mov
jae
stos
xor
je
hlt
daa
cmpsb
fucomi
inc
nop
add
sahf
bound
fs
pop
mov
inc
test
mov
js
pop
mov
cli
jecxz
sub
push
fmul
bound
in
rcl
mov
jae
xchg
pop
jo
iret
in
add
lret
sahf
cmpb
xor
add
push
add
scas
sub
xor
pushf
nop
pop
inc
fisubs
adc
jae
mov
cmp
pop
mov
lret
cmpsl
in
nop
scas
sbb
push
push
adc
cmc
mov
cmp
ss
mov
sbb
test
cs
test
sbb
sbb
shll
or
pop
jg
out
inc
lret
xchg
mov
and
inc
or
aad
loop
sbb
imul
lret
cmp
js
sub
ret
insb
cmpsl
pop
cmp
sub
lock
enter
adc
pop
loop
test
das
stos
xchg
sbb
fwait
fs
outsl
sbb
mov
out
dec
stos
mov
cmp
nop
insl
data16
jl
call
out
jbe
jns
xor
sbb
jg
imul
int3
push
inc
add
inc
inc
and
mov
int
mov
mov
mov
mov
cmp
and
test
mov
cli
jp
add
jmp
sub
in
call
insl
cmpl
mov
sub
dec
add
out
insl
dec
add
in
sarl
aas
mov
xchg
or
mov
push
jae
pop
sub
incb
cmp
fisttps
mul
sbb
xor
lea
dec
and
aaa
push
inc
sub
in
dec
cmpsl
pop
clc
or
xor
loope
cmp
test
jmp
xchg
cld
sub
jmp
data16
xchg
scas
cltd
sarl
or
jle
push
pop
cld
out
clc
lock
ss
mov
mov
in
push
jmp
out
mov
divl
outsb
out
add
mov
aas
xor
pop
rorb
xchg
push
lods
imul
push
dec
in
ftst
dec
push
adc
loopne
repnz
mov
jmp
xchg
and
in
and
shl
sub
cmp
mov
add
sahf
ljmp
popa
test
in
outsb
push
pop
push
sub
jns
mov
mov
shlb
xchg
xrelease
or
sbb
xor
popf
std
jg
adc
in
in
popf
loop
movl
adc
jb
mov
cli
adcl
pusha
push
scas
push
sub
adc
sub
push
or
cmp
xchg
sbb
pop
cld
jl
neg
rorl
xor
mov
push
in
mov
xchg
mov
pop
cmp
jns
mov
sti
mov
dec
insl
frstor
and
int
in
lods
cmp
into
out
pop
sahf
inc
mov
out
shll
mov
inc
xchg
adc
ret
jge
dec
icebp
clc
xchg
mov
or
xchg
ds
jne
mov
out
cmp
lods
fimuls
add
clc
bound
in
movsb
xorb
dec
std
cmpsl
pop
das
rcll
mov
stos
ja
mov
int
pusha
aaa
cwtl
push
or
sub
divl
ja
add
jnp
outsb
cmp
inc
sub
in
cli
mov
ja
pop
mov
sti
test
insl
bnd
jp
and
jmp
and
shrb
std
pushf
notb
rolb
xor
es
or
push
fisubrs
sub
mov
outsl
shr
add
rcrb
mov
push
jg
sub
jmp
push
stos
mov
inc
sbb
dec
fdivr
xor
xor
jge
dec
xlat
clc
fsubr
insb
xchg
pop
sub
mov
loop
jg
ret
xchg
adc
cli
fs
pushl
out
popf
ss
aad
inc
xor
dec
xor
dec
aam
mov
add
out
jge
call
pop
jbe
cwtl
movsl
sub
cmc
test
pop
nop
pushf
dec
jae
mov
inc
int
sbb
out
stc
adc
mov
mov
dec
lret
cwtl
fstps
mov
dec
pop
push
adc
loopne
ret
and
sbb
or
push
into
addr16
es
pusha
and
sbb
jo
nop
hlt
loope
adcb
inc
lret
mov
in
inc
out
and
fsubrl
jbe
divl
popf
mov
or
push
inc
pop
sti
jmp
sbb
jmp
cmp
addr16
pop
daa
add
fdivrp
or
in
imul
push
iret
outsl
andb
inc
loop
cwtl
jecxz
pop
imul
push
addr16
pop
and
stc
push
leave
pop
jmp
or
push
mov
push
or
push
mov
jne
sbb
dec
int
and
push
ss
mov
inc
push
add
sbb
xor
sub
ljmp
movsb
xchg
cld
mov
stos
hlt
mov
jl,pt
ret
div
mov
fstps
insl
and
jbe
jo
inc
icebp
inc
jle
jg
inc
sub
xchg
mov
adc
test
stos
xchg
pop
outsb
or
in
sbb
out
and
testb
std
xor
aas
jo
mov
les
cmpsl
add
xorb
lret
sub
xor
std
dec
xor
push
mov
sbb
push
jmp
ljmp
fld
xor
cli
clc
cmpsl
inc
insb
hlt
loope
push
out
cld
sbb
xor
dec
pop
mov
gs
xchg
sub
mov
aas
mov
test
sbb
icebp
aaa
cmpb
jg
jge
adc
cmp
pop
fmuls
sub
ja
jl
cltd
mov
pop
test
fadds
inc
imul
dec
enter
mov
inc
xchg
pop
lahf
or
daa
adcb
aaa
sbb
push
mov
push
icebp
pop
sub
jbe
outsb
jge
sub
idivb
pop
cmp
mov
pop
xchg
or
adc
adc
push
aad
dec
xor
xor
and
mov
cs
xor
stc
mov
addr16
shrb
jecxz
subl
fucomi
cmpb
div
rcrb
outsl
mov
mov
add
data16
cmpsl
add
sarl
adc
push
mov
and
test
mov
icebp
ss
mov
hlt
addl
into
mov
xchg
jmp
pushf
jecxz
fdiv
insl
cmp
nop/reserved
push
test
pop
add
push
sbbl
mov
or
loop
adc
cmp
data16
jp
sub
dec
dec
in
subb
loop
insl
lods
xlat
aam
dec
pusha
or
cmp
sbb
ficompl
push
dec
inc
xor
aaa
xor
mov
mov
pop
mov
mov
and
mov
adc
pop
and
jns
je
jecxz
arpl
mov
add
dec
addb
sbb
iret
imul
pop
fidivl
aas
or
lds
lea
mov
adc
cld
jae
pop
and
cmp
test
fsubrl
sub
sub
das
sub
pop
call
pop
jno
loopne
mov
jb
jl
jno
sbb
cmpl
pop
push
lods
in
adc
mov
mov
cli
xchg
repz
aad
lar
jmp
xor
addr16
xor
incl
dec
push
loop
inc
ds
mov
cs
fs
xor
int
aad
dec
mov
jmp
fldcw
and
add
mov
mulb
fsubs
or
xor
roll
pop
lods
jae
xlat
leave
imul
mov
pop
movsl
and
out
adc
negb
bound
xor
pop
psrlw
pop
sbb
outsl
adc
xchg
mov
lcall
sbb
cmc
es
add
ret
mov
insl
xchg
aam
rorl
clc
mov
lret
mov
imul
adc
push
adc
cmp
mov
xor
mov
sbb
ret
out
push
cltd
and
icebp
cmp
jo
and
cmp
adc
sub
in
xchg
dec
dec
out
into
dec
bnd
push
sub
cmp
dec
cwtl
mov
mov
lret
inc
fdivrs
aam
push
out
pop
cld
ror
add
div
scas
rclb
sbb
push
jns
fnstenv
xchg
in
popf
push
mov
popa
lcall
sub
cmpsl
cmp
int3
mov
mov
push
pop
stos
mov
cmp
loope
mov
shl
aad
mov
in
out
pop
push
test
cmp
out
ja
roll
dec
push
popa
jg
add
add
mov
cmc
add
xchg
lods
xor
es
in
or
call
ljmp
and
es
out
insb
xorl
dec
xchg
cmp
je
push
sbb
xor
rcl
sbbl
sbb
mov
sub
mov
jne
mov
mov
push
pop
fwait
rol
mov
insl
data16
in
in
add
cmovg
arpl
rol
montmul
cmpsb
ret
sub
rcrl
jb
adc
sbb
movsb
sbb
mov
push
cs
fcoml
hlt
lahf
js
cwtl
adc
xchg
mov
xchg
into
ds
mov
cmpsb
scas
mov
rcl
je,pn
andb
outsl
test
inc
adc
sti
cmp
testl
hlt
adcl
lahf
inc
bound
jmp
sub
addr16
testl
push
paddsb
add
popa
dec
add
pushl
data16
out
cmp
add
in
dec
push
sar
lret
inc
loop
or
or
fsubs
fsubrl
mov
sub
sbb
rolb
aas
mov
xor
mov
into
push
mov
int3
ljmp
jg
adc
mov
jecxz
clc
insl
sbb
cs
pop
fdivl
les
mov
out
rol
out
cmp
or
je
jne
add
dec
mov
fdivr
add
xchg
jae
xchg
jge
leave
out
push
lea
sub
mov
mov
xchg
out
inc
mov
inc
dec
or
inc
in
bound
in
nop
push
leave
hlt
cmp
test
mov
dec
dec
scas
dec
lret
and
fidivs
leave
xor
adcb
into
push
clc
mov
jecxz
mov
xchg
test
test
aad
stos
dec
and
popa
sarb
push
sbb
shll
into
mov
add
dec
or
push
cmp
fcoml
mov
mov
mov
adc
dec
lock
jae
mov
dec
mov
jmp
shll
jo
cmp
jge
jno
jbe
xchg
sub
stc
pop
pop
mov
ss
mov
jo
jno
mov
decb
pop
loope
cs
fmull
bound
les
mov
xor
fiaddl
cmp
pop
or
mov
sbb
leave
xchg
aad
mov
imul
rcl
push
lods
xchg
shll
fdivrp
stc
inc
push
repz
or
xor
dec
push
pop
popa
call
das
testb
fcmovu
pop
mov
adc
sbb
adc
sbbb
data16
ss
js
sbb
pop
dec
stos
xor
mov
mov
lock
insb
mov
test
dec
mov
lcall
aaa
jno
xchg
leave
imul
or
aam
lds
ds
dec
test
jl
scas
sub
pop
or
jb
or
xor
pusha
add
or
sbb
daa
mov
into
test
mov
in
pop
cmc
fwait
mov
xchg
cmc
imul
adc
in
cmp
stos
imul
inc
push
or
int3
lcall
dec
loopne
and
add
sbb
test
sbb
sbb
lock
xor
push
xchg
mov
loopne
push
stos
shll
xlat
addr16
sbb
das
lahf
ret
jmp
rcrb
xor
lds
imul
push
adc
out
lods
pop
mov
mov
pop
add
stos
sbb
popf
xchg
push
pop
add
and
fs
add
js
and
ss
call
dec
outsb
loop
jge
mov
ss
cmp
enter
movsb
popa
iret
jo
sahf
pop
sbb
mov
aas
pop
fnstcw
lret
cs
ret
dec
sahf
aam
iret
xchg
mov
sbb
and
pushf
lcall
dec
add
mov
xchg
mov
mov
test
cltd
roll
and
push
cmp
stos
push
pop
out
bound
insl
sub
add
mov
dec
shl
shl
lahf
inc
xor
push
fnstsw
mov
or
mov
push
dec
add
in
and
rorb
pop
hlt
cld
out
ds
mov
jmp
xor
xchg
stos
out
xchg
daa
xchg
xchg
cmp
mov
outsl
xor
jae
enter
mov
enter
sarb
push
jge
mov
push
and
adc
add
daa
pop
cmp
push
mov
pop
ja
or
arpl
ss
cmp
aas
or
xor
jae
sbb
mov
pop
fsubl
in
push
sahf
inc
pop
mov
pusha
lods
xchg
les
das
adc
cmp
fucomp
rcl
push
daa
data16
outsb
push
ljmp
pop
and
mov
jmp
add
mov
adc
aad
xlat
notb
add
inc
mov
or
inc
imul
ret
xchg
cmc
push
std
subl
cmp
cmp
and
ret
xor
mov
jne
xor
mov
in
sbbb
ljmp
jb
adc
push
push
mov
fcoms
sbb
movsb
mov
sub
clc
cli
inc
cmp
call
sbb
pushf
cld
shrb
mov
add
sahf
push
shrl
jne
aad
vsubsd
lds
push
or
sbb
or
pop
negl
mov
cmp
inc
std
repz
jbe
pushf
adc
dec
call
addl
cmpsl
leave
fistpll
cmp
cmp
mov
dec
insb
or
mov
cmp
lretw
hlt
sarb
pusha
ja
push
lods
aam
mov
cmpsl
xchg
cltd
lds
cmp
fwait
push
ja
push
or
in
je
push
pop
dec
iret
fcomip
push
fdiv
rorb
or
int
mov
xorb
jnp
mov
popf
mov
mov
mov
jp
js
pop
sub
or
dec
inc
push
or
and
lret
and
jo
aad
jae
loopne
lret
es
mov
jnp
into
rcll
shrb
push
cmp
or
cltd
fisubs
popf
sbb
ror
mov
mov
insb
jns
mov
hlt
sbb
ds
ret
stc
xor
lods
inc
in
cli
inc
gs
dec
mov
jne
leave
sahf
mov
cmp
adc
stos
shll
pop
dec
leave
and
cld
fdivrp
xlat
gs
cmc
xchg
push
jl
mov
or
and
insb
pop
arpl
push
cmc
cmc
nop
lods
cmpl
clc
xchg
pop
psadbw
dec
push
xor
lret
cmp
add
sub
inc
cmp
mov
xchg
sub
cwtl
mov
mov
js
dec
jle
test
stos
xchg
loop
mov
xlat
gs
test
das
xacquire
or
xlat
dec
mov
in
fs
in
pop
inc
int3
cmp
in
movsb
adc
fwait
test
add
and
sub
das
outsl
arpl
xchg
rolb
pop
mov
push
ljmp
xlat
sub
movsb
ss
cmpsb
adc
mov
push
sub
out
inc
xor
call
lods
in
adc
mov
popf
push
daa
flds
cvtps2pi
ret
xor
fwait
and
sub
lods
add
mov
mov
add
pop
inc
arpl
jge
sbb
loope
daa
adc
out
xchg
ss
pop
es
out
imul
stos
int3
fnstsw
ljmp
stc
sahf
jmp
adc
fs
lods
jl
out
repz
sbb
sub
movsb
dec
fisttpll
mov
sbb
sub
add
xor
cwtl
int
jp
out
and
mov
inc
cmc
pop
mov
das
inc
je
pop
pop
jg
dec
add
rorl
sbb
fs
xor
shlb
data16
mov
imul
sbb
xor
xchg
hlt
insb
fs
div
out
inc
and
cmp
aad
dec
sbb
fldcw
aam
jecxz
ret
sub
fisubl
pop
sbb
cs
inc
push
push
jb
cmpb
cmp
and
dec
leave
push
repz
addr16
mov
pop
sub
mov
inc
out
adc
dec
je
dec
mov
xor
or
xchg
pop
shr
add
jmp
mov
loope
shrl
call
mov
and
mov
pop
into
inc
lock
data16
mov
adc
dec
mov
mov
mov
and
sbb
pop
or
pop
inc
incb
movsb
add
cs
sbb
gs
stos
xchg
pop
and
fwait
daa
scas
imul
adc
push
divb
int
lds
scas
nop
pusha
jo
push
nop
xchg
inc
outsb
fstl
dec
cmp
leave
in
or
incb
lret
das
adcl
mov
in
add
movsb
icebp
push
addb
add
cs
lahf
or
aam
adc
lret
and
jne
cwtl
mov
push
lcall
mov
fwait
into
lods
xor
mov
pop
stos
ljmp
xchg
add
adc
fwait
cmp
adc
loop
adc
pop
pop
addr16
stos
movsl
ret
addr16
jle
mov
enter
repnz
enter
and
lret
push
shlb
xchg
movsl
ds
addr16
movsb
ret
aad
mov
mov
push
out
cld
cli
lock
jp
sbb
add
jl
mov
xor
sbb
or
xchg
mov
cld
cmp
enter
scas
ss
jae
push
out
in
xor
push
jno
idivb
jb
mov
and
in
mov
add
mov
gs
sub
xor
dec
and
jge
lret
icebp
pop
aad
xor
dec
adc
js
out
pushf
and
dec
adc
cs
pop
add
or
xchg
imul
loop
outsb
xchg
in
test
jmp
dec
and
in
inc
out
sbb
mov
jo
mov
fwait
pop
pop
and
out
xchg
out
jnp
sbb
cltd
rcrb
mov
xor
jmp
sbb
ljmp
cli
dec
xor
ljmp
aas
mov
pop
xchg
cwtl
dec
neg
lods
fcoml
hlt
cwtl
ror
and
shrl
popf
pop
dec
sub
ficoms
cwtl
or
js
out
push
imul
es
mov
push
and
lret
negb
cmp
add
js
adc
cmp
add
les
mov
stc
into
mov
mov
push
jae
data16
mov
stos
in
sbb
fnsetpm(287
pop
pop
pop
jno
push
push
adc
mull
ljmp
xchg
pop
arpl
repz
out
out
dec
call
add
pushf
xchg
nop
fcoml
icebp
ss
rcrl
rcrb
scas
loopne
push
ljmp
fnstsw
ja
xor
jl
xchg
add
pusha
ret
les
repnz
test
or
int3
out
adc
sbb
jnp
filds
xor
jno
cmc
popa
roll
enter
cli
in
lahf
repnz
pushf
jl
movsb
xchg
inc
test
cmp
xchg
dec
fcmovb
shll
inc
sub
rolb
cmp
or
cmpsl
and
pmullw
nop
mov
movsl
add
cli
push
lds
cmp
sti
loop
mov
mov
fbld
int3
or
add
insb
int
and
movl
adc
mov
and
cld
clc
sbb
and
sub
sbb
xlat
cli
xchg
push
daa
cs
xor
cmc
pop
ljmp
and
movsb
push
pop
repz
mov
and
fistl
inc
popa
imul
lea
clc
divb
inc
inc
cmpsb
popa
jecxz
sub
xchg
repz
orl
xor
adcl
mov
aam
or
int
sbbl
mov
xchg
test
mov
clc
or
sub
mov
jmp
adc
mov
adc
in
push
mov
cltd
xor
int3
aas
xchg
jp
js
pop
lea
inc
push
push
pop
jge
es
icebp
push
xchg
add
dec
ds
and
xchg
jg
pop
jb
pop
shll
lea
cwtl
push
jae
out
test
cli
les
mov
xchg
fmuls
sub
out
sbb
movsb
mov
fs
ret
mov
cli
mov
push
jno
sbb
negl
push
xchg
xor
call
and
lcall
sbb
imul
cmpl
hlt
mov
sbbb
dec
ret
and
mov
arpl
pop
push
mov
push
cmc
mov
popa
lahf
sbb
push
inc
out
add
adc
cvtpi2ps
lahf
and
adcl
mov
cld
xor
pop
stos
dec
sbb
roll
shrl
dec
cmp
and
jae
push
negb
iret
push
and
cmp
pop
mov
and
inc
out
repz
stc
mov
xor
das
shrl
inc
jo
shll
adc
xlat
push
dec
cltd
les
jp
dec
je
cld
jle
popf
rolb
push
jl
stos
pop
xchg
int3
push
jmp
jne
add
adc
cmp
pop
pop
mov
sub
jp
or
mov
test
mov
lods
adc
sub
pop
sub
xor
dec
inc
adc
data16
jg
jmp
nop
mov
jl
sahf
test
xchg
dec
pop
ret
push
mov
xor
pop
push
pop
dec
add
or
push
cld
mov
flds
pop
mov
push
aad
movsb
jl
imul
prefetcht2
push
icebp
imul
mov
inc
push
out
push
enter
sub
cwtl
inc
iret
xchg
xchg
pusha
popf
and
and
pushf
aas
aam
mov
sub
call
dec
data16
jl
lret
in
jl
jecxz
sub
lcall
lods
filds
or
std
mov
dec
xor
or
imul
mov
or
loopne
mov
hlt
jecxz
mov
cmp
dec
flds
inc
fs
sbb
enter
in
imul
cmp
xchg
jmp
adc
inc
mov
jmp
xchg
aam
inc
pusha
xchg
int3
jg
orl
xchg
xor
jg
xchg
jb
mov
mov
test
sbb
loopne
pop
mov
push
ds
dec
movb
mov
cltd
ss
add
cmp
sbb
cmp
cmp
jno
add
jae
xchg
pop
adc
jne
xchg
cmp
pop
mov
test
mov
das
jp
mov
ds
and
inc
notl
pop
and
mov
popf
jp
add
filds
xchg
and
in
repnz
adc
jmp
shl
mov
mov
add
bound
iret
mov
cmp
sbb
inc
cwtl
mov
fcompl
scas
loop
les
mov
pusha
jne
mov
mov
mov
mov
sbb
and
cli
outsb
inc
mov
jae
or
inc
imul
add
and
frstor
cmp
sbb
push
iret
popf
pop
divl
in
in
inc
es
add
xor
scas
movsl
je
das
jmp
fistpl
adc
sahf
into
xor
mov
mov
mov
ja
in
add
lock
movsl
pop
lods
cmpsb
mov
movsb
loop
push
jg
lahf
aas
iret
shrl
jg
idiv
mov
dec
pushf
das
inc
loopne
lahf
popa
push
jnp
jae
ds
and
push
andb
out
popf
pop
xchg
jge
pop
mov
and
ljmp
and
es
push
sahf
jae
push
xchg
xor
cmp
nop
push
js
jge
mul
jbe
call
adc
imul
test
fistpll
sarb
sbb
and
icebp
fnstenv
mov
jle
sbb
loopne
dec
jae
mov
in
dec
jo
or
outsb
out
loope
xor
sbb
rorl
jle
sahf
out
jnp
jo
ss
cli
push
adc
test
cld
aam
fs
inc
jbe
pop
pusha
push
fcomi
stos
xlat
shlb
jo
test
xor
and
jmp
jle
fildll
mov
pop
adc
int
pop
adc
lds
adc
xchg
dec
into
add
jle
out
inc
xchg
icebp
dec
dec
insb
test
fcom
xorl
mov
ror
pop
or
push
cmp
call
test
cs
out
pusha
add
xor
jbe
lock
clc
cmp
add
push
cld
mov
xchg
inc
or
rcll
mov
xor
rdmsr
fisubl
or
mov
inc
add
jne
sub
inc
loopne
sub
insl
mov
popf
pop
out
mov
mov
inc
mov
andb
pop
fs
xchg
push
arpl
stc
rclb
dec
mov
fcomps
jns
into
in
adc
arpl
movb
sarl
sahf
sbb
enter
int
mov
jmp
stos
std
cmp
cmpxchg
aad
scas
lret
pop
jae
and
dec
out
aam
jmp
xchg
add
cmpsl
xchg
cmp
dec
das
inc
inc
fimuls
xor
sub
addr16
pop
fcom
inc
sub
inc
pop
or
leave
or
into
push
jmp
inc
stos
out
into
insb
pop
cwtl
mov
shrb
fsin
test
fmul
out
js
jl
jl
cmp
add
mov
std
pop
repnz
add
mov
mov
flds
push
aaa
xchg
pushf
mov
adc
test
in
add
lods
popa
xlat
je
mov
adc
cmp
sub
rclb
adc
cmp
pop
das
mulb
pop
adc
pop
test
sub
and
sub
cmp
jo
xchg
cmp
jmp
addr16
dec
push
mov
rcrl
sbb
imul
fimuls
mov
sbb
jl
pop
lods
jno
mov
icebp
push
mov
lret
stos
push
inc
cmp
mov
sub
pop
lods
mov
movsl
mov
push
jns
inc
sub
andl
sbb
jp
arpl
loop
xchg
or
lret
or
mov
aaa
jp
xchg
add
jno
jl
and
or
and
sbb
mov
inc
pop
pop
cmp
sub
out
mov
push
lahf
adc
fdivl
cmp
jbe
mov
lret
js
sub
mov
push
mov
push
sbb
mov
ret
imul
push
xor
aas
aas
movsb
jl
stc
jle
test
mov
mov
xor
mov
outsb
sbb
popf
mov
inc
xchg
sub
push
xchg
arpl
arpl
mov
xor
xchg
and
in
loop
imul
js
data16
push
repz
mov
jo
scas
ds
mov
sbb
fwait
mov
lret
lock
pop
sarb
pusha
jg
shl
dec
mov
adc
mov
loope
pop
shrb
or
jg
push
adc
into
or
adc
dec
fcom
pop
call
in
shl
lret
pop
jb
bound
imul
add
cld
jl
dec
cwtl
xchg
inc
cmp
lea
jae
sub
adc
mov
bound
es
into
sub
sbb
lock
pop
popa
inc
and
push
je
pop
repz
mov
xchg
aam
cmc
scas
roll
aaa
ja
in
andl
shrl
xchg
loop
pop
cwtl
loopne
xchg
push
cmp
and
ds
jbe
mov
add
xor
adc
inc
mov
or
pusha
cmpsb
test
sub
rcll
mov
xchg
cmp
sbbb
mov
fmull
push
lods
cmp
fdivl
jns
mov
hlt
inc
ret
imul
xlat
repz
add
dec
andl
scas
mov
mov
or
cld
icebp
pop
sbb
adc
add
mov
sub
dec
bound
es
pop
out
inc
sub
shrl
scas
adc
add
outsb
lret
ljmp
gs
lret
push
sbb
hlt
mov
js
sub
pop
nop
arpl
push
into
imul
sti
in
cwtl
out
mov
xchg
push
sub
pop
cmp
sbb
imul
sub
xchg
mov
pop
cmp
js
xchg
fwait
mov
inc
sub
mov
pop
das
push
pop
dec
loopne
push
outsl
dec
jo
fsubrl
jp
and
push
or
pop
adc
popa
dec
lods
xchg
mov
fildll
push
push
popf
mov
das
fistpl
push
push
xor
inc
jg
xchg
aam
inc
pop
cmp
or
mov
dec
fwait
add
adc
into
sub
fcoml
roll
or
repnz
mov
ja,pn
inc
out
hlt
xor
fs
fwait
mov
out
sarl
gs
repz
xor
daa
dec
pop
push
out
or
shr
lods
in
stos
sti
mov
negb
jo
imul
bound
inc
aaa
or
imul
jge
cmp
jae
shll
fwait
or
out
leave
mov
dec
jmp
fistps
mov
xchg
pusha
popa
push
int3
sub
lock
xor
adc
sbb
insl
cmp
sbb
sbb
scas
or
fadd
lock
add
sbb
shr
std
mov
or
cwtl
sbb
repnz
push
add
decb
fidivs
push
movsb
mov
fstl
and
cli
mov
loop
mov
call
cs
in
divl
mov
ret
cmpsl
nop
pushf
out
ss
jbe
out
xchg
sahf
adc
aaa
xchg
inc
mov
roll
xchg
scas
mov
or
xchg
popf
mov
cmpsb
mov
sub
cmpb
or
pop
pop
aas
push
mov
sahf
sub
mov
push
scas
jbe
add
in
lret
push
into
cmpsl
pop
push
push
shrb
scas
add
cmpsb
loopne
idivb
imul
dec
cmpsb
aaa
clc
dec
push
roll
aad
or
xchg
or
mov
mov
or
sub
inc
pop
clc
sahf
lods
sbb
cltd
out
sbb
scas
mov
imul
mov
sub
ror
mov
nop
loopne
mov
fldcw
repz
adc
daa
or
in
and
mov
fsts
dec
int
insl
adc
pop
adc
adc
mov
pop
push
pop
add
cmpsl
pop
popf
jns
outsl
cli
adc
fldt
loop
mov
iret
call
mov
imul
sub
hlt
mov
xchg
or
shlb
xchg
jo
jl
mov
mov
push
xor
pop
sbb
or
in
xlat
lds
lret
xchg
mov
lock
dec
xor
shl
and
lahf
lock
loope
mov
cmpsl
fisttps
pop
gs
mov
or
imul
push
or
add
pop
call
sub
aas
or
loopne
cmc
add
test
and
stc
test
sarl
cld
test
out
push
mov
dec
negb
xor
jge
mov
xor
les
push
cli
push
mov
mov
les
push
cmp
pop
test
or
faddl
out
sbb
mov
push
push
cmpsl
pusha
iret
mov
divb
dec
pop
out
lahf
add
das
ja
dec
add
dec
fdivs
dec
fiaddl
mov
test
aas
fs
leave
fwait
mov
scas
lods
dec
push
inc
jmp
out
aam
dec
jp
cwtl
popa
jb
dec
mov
push
dec
lahf
cltd
push
dec
pop
repz
jnp
xchg
divb
pop
iret
in
mov
push
push
sub
js
and
jg
lret
xor
dec
inc
sbb
shll
push
mov
ds
stos
mov
pop
ja
test
subl
cmp
push
jp
ret
and
fucom
stos
nop
inc
jno
pop
fmul
mov
aas
xchg
mov
inc
in
aad
adc
loope
xor
fidivrs
cli
xchg
inc
push
mov
cs
jno
dec
je
sub
xlat
dec
inc
push
jns
test
or
pop
ret
inc
push
fimuls
aaa
jbe
pushf
xlat
orl
add
jae
outsb
and
add
mov
clc
aad
fldenv
sbb
int
movsl
clc
mov
ja
jo
rcr
jg
ret
pop
rol
shr
mov
sub
adc
jmp
or
push
jno
push
clc
orl
xacquire
bnd
sbb
addr16
sub
gs
sar
aaa
je
outsl
cmpsl
dec
fisttpl
dec
xlat
repnz
sub
jno
cmc
nop
adc
lret
test
inc
pop
mov
fwait
sbb
push
in
out
lret
stos
mov
push
sahf
popa
xchg
jle
imul
mov
dec
es
pop
movswl
mov
gs
xor
and
push
aas
cltd
mov
cli
mov
outsb
mov
and
xor
pushl
xchg
leave
lods
out
mov
mov
or
mov
pop
movsl
ja
fcmovnu
inc
frstor
repnz
cmpsb
fbld
push
cld
enter
popa
outsb
jecxz
in
sbb
insb
sbb
cld
xchg
sub
stc
mov
arpl
shl
popa
icebp
fbstp
jae
inc
cmc
cmp
call
icebp
inc
inc
call
push
mov
cli
xchg
outsb
inc
pop
or
jnp
mov
dec
cmp
and
xchg
pop
xor
call
jbe
xchg
xchg
das
adc
and
cmp
mov
lcall
call
xchg
sti
sbb
cmp
das
scas
push
and
jb
add
sub
cmpsb
mov
mov
cmp
xor
cmp
inc
shr
adc
mov
cmpsb
in
mov
int
push
fcomi
sub
push
shl
cwtl
jne
test
dec
notl
das
add
sub
cmp
test
mov
cmp
fwait
jnp
mov
in
pushf
loope
in
cmc
cmp
into
les
inc
inc
dec
into
cmp
popa
and
test
or
jne
fnsave
sbb
inc
insb
sbb
or
add
imul
xor
mov
cs
mov
and
inc
fwait
xorb
insl
clc
addr16
insl
mov
test
adc
fdivs
sahf
cmp
sbb
cmp
adc
cmp
daa
mov
jb
movsl
xor
cmpsb
mov
insl
cli
xchg
sub
out
fiadds
sbb
jbe
xchg
dec
bound
push
fisttpll
or
rcr
sbb
out
cld
mov
xchg
jbe
outsl
pusha
cmp
add
sub
test
mov
push
pop
xchg
scas
dec
in
mov
lods
xor
scas
sub
mov
insl
sub
icebp
ss
in
or
push
pop
cli
fwait
scas
xchg
movsl
xchg
dec
sbb
mov
repnz
lods
mov
decb
mov
cs
or
dec
or
lods
and
mov
xor
and
cmpsb
mov
test
cwtl
bound
ret
test
inc
fadd
ret
cli
mov
repnz
enter
or
jns
mov
mov
mov
inc
bnd
cmp
ss
cmp
aas
ds
mov
cmp
in
xor
data16
mov
orb
lods
adc
pop
cs
adc
jge
lret
xchg
lahf
cmp
adc
sbbb
xchg
jnp
mov
or
cltd
call
jbe
or
dec
roll
mov
cs
jmp
pusha
adc
adc
orl
test
in
ljmp
inc
mov
push
push
or
mov
sub
rcrb
lret
xorb
fsts
or
jge
or
int3
cmp
pop
out
mov
push
test
jo
or
mov
cmp
xor
popf
or
xlat
jecxz
and
mov
sbb
fsubrs
jp
xchg
test
cmpsb
movsb
out
test
insl
movsb
cwtl
cli
rcll
das
xor
fsqrt
mov
std
dec
pop
mov
mov
xchg
pop
jl
cmp
adcb
cmp
or
fimull
mov
sub
outsb
decb
nop
shll
cli
push
sets
xchg
push
insl
lock
call
push
adc
xor
stos
rcrl
mov
data16
xchg
ret
lahf
test
lret
add
out
jb
cmc
dec
jmp
jne
nop
imulb
jno
stc
xchg
add
jle
pop
xchg
adc
aad
cmp
gs
imul
xchg
mov
xchg
add
idiv
cmp
cli
jo
arpl
outsl
hlt
outsl
subl
jl
pop
mov
loop
mov
lcall
std
scas
aam
popa
jle
bswap
mov
sbb
jmp
lcall
pop
loop
mov
lcall
sub
loopne
int
sbb
add
incb
adc
call
scas
dec
adc
and
test
lds
incl
mov
sub
jno
jbe
shr
cwtl
outsb
sub
or
pushf
jne
mov
dec
pop
insb
jl
dec
std
sbb
out
lock
cmp
movsb
repz
mov
mov
aad
pop
daa
cmpsb
and
adc
repnz
and
sbb
and
rcrb
lahf
icebp
sarl
inc
push
pop
subb
fildll
iret
inc
out
mov
pop
les
int3
cmp
push
mov
lods
aaa
imul
add
cmp
enter
or
sbb
or
test
sbb
cli
push
int
rol
jge
xor
dec
repnz
xchg
lods
mov
xchg
gs
test
sub
mov
daa
int3
xchg
fwait
xorb
xchg
iret
mov
xchg
jmpw
repz
dec
adc
dec
scas
add
fistl
add
mov
js
testl
jae
adc
ud1
shll
xchg
loope
jno
sub
mov
mov
outsb
dec
sti
faddl
cmc
pushf
push
jno
add
adc
xor
pop
sbb
inc
push
in
pusha
or
pop
pop
iret
sbb
sbb
ror
push
inc
out
pop
dec
sbb
or
outsl
xchg
push
mov
mov
hlt
push
sbb
jae
or
cmpsb
leave
fmul
mov
mov
adc
cli
repz
lock
nop
out
xchg
dec
inc
je
sub
pushf
inc
pop
or
inc
int3
dec
xchg
push
add
mov
icebp
inc
sub
cmpsb
aaa
sti
inc
sub
pusha
fistpll
cmpsb
cmpsb
xor
adc
mov
cmc
dec
mov
jno
inc
insl
fnstcw
out
xchg
cmp
cwtl
stos
sbb
fisubs
repnz
roll
add
std
xchg
pop
fwait
incl
and
xchg
in
mov
pop
call
add
pop
push
push
cmp
ficompl
jae
out
notl
jns
and
inc
mov
mov
and
add
dec
and
rclb
jecxz
xor
adc
les
sbb
jl
outsl
inc
jb
jne
mov
xchg
cmp
roll
pushw
push
lods
int3
iret
mov
jge
adc
nop
fwait
mov
lods
mov
cmp
add
andb
pop
jno
fisttps
push
mov
out
add
stos
insb
in
stc
out
mov
dec
add
adc
jl
add
imul
xor
icebp
aas
bsf
add
movsb
xchg
adc
inc
leave
sahf
test
arpl
loopne
je
dec
outsb
ljmp
aas
or
popf
xchg
mov
inc
or
inc
ljmp
test
leave
or
nop
or
into
fwait
or
cmp
ss
sub
push
jecxz
das
data16
pushf
pop
jge
cmp
jne
and
mov
push
sbb
and
mov
xchg
aam
std
pop
insb
test
lret
cmp
jne
xor
in
sbbb
push
xor
pop
push
dec
ja
cmp
pushf
xchg
add
inc
daa
mov
out
hlt
test
outsl
lahf
out
xlat
leave
and
pop
shrl
add
inc
je
daa
nop
xchg
call
ljmp
lcall
mov
scas
cmc
testb
pop
cmp
jnp
popa
clc
into
inc
stos
pop
lahf
cmp
sbb
mov
mov
add
mov
mov
mov
dec
xor
daa
sub
add
out
cmp
mov
sti
cld
mov
mov
push
fidivs
push
mov
and
mov
addr16
or
jbe
push
add
scas
dec
mov
add
sahf
popa
popf
xchg
dec
in
leave
and
mov
or
mov
repnz
imull
xchg
adc
out
mov
mov
mov
popf
sarl
jmp
loop
xor
out
data16
insl
xor
push
loop
mov
ret
movsl
push
adc
jns
mov
add
or
and
fisubrs
cmpsl
mov
ljmp
sbb
inc
scas
faddl
xor
sti
fmul
inc
push
stos
push
mov
lds
jno
and
loope
cmp
divb
clc
cmp
out
cmp
push
aam
inc
dec
pop
and
jecxz
or
add
dec
std
out
push
test
mov
sbb
push
or
lret
jle
mov
mov
jnp
sub
sbb
mov
mov
test
and
mov
cmp
enter
xor
xchg
lret
jge
mov
sbb
outsb
sub
and
lock
data16
stos
xchg
mov
jp
out
cmpsb
enter
subl
or
lock
jb
gs
sub
mov
outsb
cmp
fdivs
movsl
ljmp
sarb
xor
inc
int3
fs
repz
mov
js
mov
sub
in
mov
mov
mov
xchg
daa
mov
aas
jbe
jae
jg
mov
jge
pop
pusha
shlb
shrb
cmp
mov
cmp
push
into
out
aaa
or
mov
aad
in
ret
push
aad
sbb
xchg
fldl
or
xchg
js
insl
push
dec
in
and
pop
dec
mov
or
mov
out
pop
cwtl
mov
call
loop
data16
movsl
ja
mov
out
and
ds
inc
jmp
add
push
or
adc
mov
popf
popa
add
loope
lahf
fsubl
xchg
stc
js
mov
xchg
loope
mov
scas
dec
rcrl
das
push
inc
sahf
movb
xor
jo
out
cmc
mov
jl
jp
or
sub
xor
out
insb
imul
or
lods
test
cmp
jg
rolb
pop
popf
icebp
insb
inc
ljmp
add
add
mov
out
lock
lods
inc
push
dec
arpl
aam
mov
repz
adc
ficoms
jne
loope
lret
jb
mov
in
dec
ds
jnp
mov
push
lods
shlb
adc
mov
add
mov
stos
lret
mov
inc
outsb
rcr
int3
xchg
rep
mov
push
movsl
dec
add
mov
test
jno
es
aad
sub
mov
mov
mov
jl
mov
and
cmpsb
popa
gs
pop
arpl
jno
push
cmp
aam
icebp
inc
add
dec
dec
out
adc
xor
ffreep
scas
out
xor
loope
or
adc
dec
mov
bound
adc
push
call
ret
lds
mov
ret
mov
push
mov
lret
js
int
icebp
inc
inc
and
call
dec
neg
mov
les
orb
arpl
pop
aas
fildll
push
in
lret
loopne
mov
andps
pop
pop
and
dec
and
out
leave
aad
int3
ljmp
outsl
add
sahf
xchg
imul
fsubrs
mov
jbe
js
test
aad
mov
or
imul
aas
cmpsl
das
fdivr
daa
sbb
or
mov
pop
push
jle
jle
cmpsb
lahf
cmpsl
pop
and
lret
mov
ljmp
xchg
lea
mov
mov
into
jnp
sub
idivl
and
xchg
arpl
fmuls
push
adc
and
test
jne
pop
repz
xchg
jbe
push
mov
mov
movsl
mov
mov
jmp
inc
xchg
test
inc
ljmp
int
aaa
mov
adcl
fsubrs
hlt
ds
test
lods
fwait
and
test
add
shlb
mov
jl
repnz
arpl
popf
and
int3
jl
test
xor
addr16
mov
inc
xor
mov
pop
jne
jae
cli
cmp
pusha
xor
cmp
iret
lea
jecxz
xchg
mov
jg
and
leave
sbb
fcmovnu
test
mov
cltd
cs
out
inc
clc
iret
add
jmp
jne
inc
stc
outsl
jmp
lahf
mov
xor
into
int3
rolb
mov
mov
sbb
lahf
pop
out
mov
int3
jne,pn
pop
jmp
fwait
jmp
mov
cmp
sub
pusha
mov
and
cmpsl
insl
mov
mov
dec
ja
addr16
in
fwait
mov
mov
mov
js
pop
shr
insb
pusha
fcompl
sub
dec
xchg
test
fbld
inc
lahf
and
lds
jbe
mov
imul
int3
mov
sub
mov
stos
mov
xchg
inc
out
loope
push
mov
dec
aas
xor
pop
mov
push
dec
nop
cmp
mov
mov
int
jmp
ljmp
repnz
inc
in
movsb
ljmp
xchg
adcl
das
mov
dec
inc
add
pop
mov
cli
cmpsl
inc
adc
adc
mov
pop
mov
or
pop
mov
loope
popa
fstpt
insl
xchg
adc
push
or
jb
xor
lret
lahf
jnp
adcb
in
aas
pop
dec
lret
add
push
das
jno
pop
ja
dec
push
cmp
rclb
sub
shl
ret
jle
es
jb
rclb
and
pop
insb
lcall
jmp
mov
push
test
sbb
mov
loope
push
lods
mov
xchg
call
pusha
jnp
dec
insl
dec
into
and
xor
and
pop
sbb
lretw
sti
insb
mov
adc
push
push
jmp
mov
mov
fbld
pusha
pop
into
mov
std
and
cs
mov
mov
out
repz
jmp
cmpsl
xchg
or
sbb
or
fwait
aaa
nop
pop
aaa
stos
pop
test
adc
loop
fmul
ret
or
jl
jmp
pop
fisttpl
outsl
loop
sbb
stos
jge
adc
add
mov
test
mov
sbb
jae
dec
sub
fcmovnb
ds
addr16
push
popf
cld
cmp
rcr
inc
orb
xor
cmpsb
inc
rorl
lods
in
sarb
lahf
push
imull
fwait
xor
push
xchg
aas
scas
pop
jbe
cltd
pop
cmpsl
dec
xchg
popf
rorb
sub
or
leave
test
and
push
dec
add
shlb
popf
jle
ss
mov
fisubrs
inc
ficomps
mov
inc
cwtl
inc
and
and
cmpb
iret
test
shl
push
fwait
pusha
dec
pop
jbe
adc
roll
inc
jnp
stc
jl
sub
std
nop
cmpsb
ja
testl
rorb
in
jl
mov
mov
pop
xor
adc
mov
push
loopne
gs
mov
fcmove
xchg
push
pop
test
xchg
aaa
push
pop
in
adcl
mov
dec
test
jno
lock
inc
push
jge
test
push
mov
dec
push
sbb
lahf
mov
inc
sub
dec
push
fiaddl
outsb
push
in
loop
add
adc
subb
sub
add
mov
dec
arpl
rclb
lods
ja
sbb
into
or
outsl
inc
ds
bound
xor
int3
push
push
or
xchg
idivb
xchg
pop
imul
sub
testb
push
jb
add
fwait
shlb
adc
aas
ds
cmp
aaa
bound
inc
jge
imul
xor
cmc
mov
cmp
dec
jmp
jns
stos
ss
jb
in
pop
sbb
push
pop
je
push
nop
stos
xor
sub
inc
dec
subl
scas
mov
push
push
or
xor
mov
mov
lods
xor
mov
jnp
fsubrs
stos
sbb
daa
inc
test
lret
jp
jne
inc
xlat
jecxz
ja
vmovlhps
test
rolb
adc
pop
mov
sbb
test
inc
mov
test
shll
cmp
fildl
push
je
mov
shrb
sbb
aaa
lods
push
sub
sub
sti
jo
pop
shlb
out
bound
fidivs
jnp
insb
fsubl
xor
mov
mov
leave
rorl
pushf
in
imul
enter
mov
dec
xchg
and
push
mov
in
lahf
pop
jl
enter
cmc
loop
adc
mov
lods
out
dec
inc
jecxz
in
sbb
in
xor
mov
lahf
ljmp
movsl
rcl
icebp
mov
and
ja
fistl
in
scas
mov
mov
sub
pop
enter
sub
inc
xchg
or
cli
stos
mov
push
and
daa
push
in
push
and
jp
and
daa
fwait
cmp
jnp
mov
iret
pop
push
xchg
and
sub
fsubrp
pop
dec
and
imul
add
fisttpll
pop
jmp
xorb
and
jle
adc
cld
je
hlt
imul
icebp
inc
loop
mov
pop
xor
sub
rorb
out
sub
mov
ljmp
gs
daa
jbe
or
push
pop
jl
cmc
add
or
and
ret
dec
out
fistps
ja
adc
lea
xor
fnstenv
stc
into
jg
or
cmp
dec
dec
fcoml
out
xor
adc
aas
icebp
inc
fisubrs
pop
add
xchg
lods
aas
fnstsw
or
inc
in
aam
lods
xchg
pop
pop
lahf
cld
xlat
in
shlb
bound
and
sub
gs
cmp
jg
push
jae
mov
or
jg
fsub
shll
mov
jne
xchg
jno
inc
hlt
jle
sarb
cwtl
wrmsr
stos
popf
arpl
cmp
cs
aas
lods
mov
rorb
nop
mov
pusha
jecxz
fdivp
jo
rorl
out
lahf
mov
sub
dec
aas
mov
sbb
mov
sbb
cld
sbb
arpl
jecxz
das
mov
outsb
inc
jg
repz
pop
jl
jb
dec
xchg
add
push
lea
pop
add
aaa
inc
std
xchg
inc
cli
arpl
fs
mov
fdivs
into
fistpll
lock
cwtl
mov
js
jg
and
test
mov
dec
lea
mov
outsb
inc
sub
pop
fdivrs
sbb
lcall
xchg
scas
push
sbb
pop
sub
loopne
sahf
mov
jle
stos
insl
pop
outsl
mov
inc
nop
xor
jne
rcl
jb
cwtl
adc
arpl
dec
adc
jae
adc
cmpsl
pop
and
fcmovnbe
mov
je
jmp
sub
popa
xor
xor
push
jo
pop
xchg
call
pop
arpl
jp
mov
and
jg
popf
push
cmp
test
pop
ja
sbb
je
push
outsl
popf
and
lcall
push
into
into
inc
cmovns
xchg
xorb
push
lea
xor
dec
ljmp
add
loop
popf
sbb
icebp
push
mov
jnp
nop
notb
iret
orl
cmc
sbb
pop
loopne
xchg
call
xchg
pop
repz
shr
and
sbb
mov
push
fnstenv
scas
xchg
xchg
jnp
andl
inc
push
dec
sbb
jnp
sahf
cmp
jp
cli
cmp
clc
push
dec
pop
imul
mov
or
and
fs
fnstenv
pop
cwtl
and
test
pop
mov
xlat
mov
pop
push
aad
out
adc
pushf
mov
mov
push
add
mov
and
sbb
mov
lcall
xchg
sub
test
push
out
jno
in
pop
push
dec
cltd
push
int3
pushf
scas
cmp
ja
or
pop
in
data16
push
xor
insl
sbb
cs
shld
pusha
andl
cmc
repnz
mov
ret
fmuls
out
in
mov
fwait
sub
in
jbe
mov
in
pop
out
jle
mov
cltd
sbb
fs
mov
adc
xchg
fidivrl
mov
leave
and
dec
push
mov
out
call
adc
into
outsb
imul
out
fdivrl
repz
insl
xorl
and
in
xchg
cmp
popl
sbb
or
test
add
test
jge
sub
int
sbb
fldt
addb
jae
roll
jmp
stc
jbe
cmp
out
jmp
movsl
cld
add
cld
mov
inc
mov
fcompl
sbb
add
js
push
jne
lods
pop
addb
fadds
cli
int
cmp
adc
pusha
inc
je
fldenv
scas
movsb
pop
ds
xchg
leave
mov
jbe
cmp
sbb
das
mov
jecxz
adc
es
inc
mov
stos
mov
fistps
mov
sub
idivb
sti
lea
push
fs
mov
mov
movsl
and
hlt
pop
sarl
add
aam
sbbl
shll
lret
sub
iret
fistps
into
or
shlb
pop
fists
lock
data16
mov
mov
aam
add
lea
call
sbb
mov
mov
shlb
jmp
and
sarl
inc
in
mov
jecxz
inc
in
cmp
or
out
outsl
jg
in
xchg
jl
inc
idivl
sbb
lds
bound
mov
pop
ror
cmpsb
jecxz
in
mov
test
in
mov
push
inc
and
push
cmp
cwtl
subl
sub
pop
adc
push
aam
pop
xchg
mov
sahf
inc
sbb
aad
mov
pushf
or
cs
cld
shrl
lret
jecxz
cmp
and
push
imul
pop
and
and
push
push
mov
repnz
mov
cs
mov
js
stc
ficomps
dec
dec
and
shrb
iret
dec
test
pusha
mov
push
pop
arpl
xchg
pop
scas
cmc
inc
loope
cmp
push
cmpsb
daa
push
aad
clc
push
pop
cmp
or
xchg
je
inc
stc
aas
fstpl
push
pop
xor
cld
or
xchg
outsl
cmpsb
cmp
fwait
pop
jnp
test
imul
or
inc
xchg
aad
enter
xor
or
dec
loop
dec
mov
cmpsb
mov
xorb
cmpsb
dec
bound
add
sub
in
loope
pop
xchg
or
mov
cmpsl
adc
repnz
loop
jnp
pusha
sub
mov
push
pop
popf
push
aaa
xchg
lcall
outsl
sbb
push
lods
cmp
lahf
fdivrl
push
dec
fstp
or
pop
pop
pushl
mov
icebp
adc
xchg
lcall
lahf
insb
dec
xor
push
or
add
loopne
adc
call
fsubl
add
andb
hlt
mov
in
mov
push
movsb
push
das
scas
call
dec
clc
ja
jle
and
lret
and
ss
test
ficomps
lcall
xchg
in
fmul
mov
mov
sbb
mov
jle
pop
lock
arpl
and
mov
add
jle
pushl
and
jle
pop
out
and
adc
mov
je
sbb
add
ret
ret
mov
daa
aam
cmc
ljmp
and
adc
into
push
and
lock
insb
xchg
call
dec
repz
sbb
pop
les
jp
repz
pop
fs
mov
jg
leave
sub
adc
sahf
pop
pop
out
push
lods
fs
in
sbb
in
push
mov
mov
sub
std
sbb
dec
ja
in
jecxz
mov
push
jmp
and
stos
inc
mov
mov
mov
xchg
lcall
sbb
repz
ret
ja
mov
popa
xor
outsb
cmc
and
and
or
into
mov
test
cmpsl
ja
pop
popa
mov
push
dec
in
aaa
loope
out
pusha
stos
imul
adc
or
outsl
cld
loopne
add
std
pop
push
daa
fnstcw
mov
movsl
arpl
cmpsl
dec
cmc
in
jle
movsl
push
icebp
mov
and
pop
mov
in
sarl
pop
mov
call
or
invd
adc
in
jbe
scas
xchg
scas
int3
mov
pop
pop
or
movsb
pop
fstl
stos
jl
lcall
in
and
wbinvd
outsb
xchg
jno
sbb
ss
std
iret
cmp
fs
loopne
enter
out
call
sti
xor
dec
pop
mov
idiv
inc
push
daa
sbb
loopne
mov
sub
mov
rcrl
insb
leave
xchg
rclb
xchg
dec
orl
mov
in
iret
cwtl
jge,pt
in
sbb
test
push
movsb
cmc
addr16
testb
jae
jbe
adc
dec
data16
outsl
enter
and
sub
push
rcrl
dec
incl
add
push
lods
mov
inc
pop
loope
jo
bound
call
out
sbb
push
popa
jbe
pop
pop
sti
cmp
out
and
scas
cmpsl
xor
loope
addr16
push
push
cmp
push
divl
and
lea
mov
aas
pusha
ret
mov
lods
mov
in
in
xor
xor
js
mov
cmpsl
iret
fidivrs
lods
das
adc
je
sbb
jmp
mov
std
and
das
pop
cs
jo
repz
mov
mov
mov
inc
pop
xor
pop
ret
xchg
jmp
adcb
popa
icebp
or
push
xor
sbb
xchg
dec
loopne
fs
shl
cmp
sub
jne
xor
repnz
xchg
stc
ja
mov
mov
or
insl
pop
push
negl
adc
stc
pop
mov
cwtl
cld
add
cmp
sbb
xchg
es
adc
data16
sub
mov
outsb
adc
or
pop
mov
int
aaa
fdivs
ficoml
test
add
sbb
ret
jge
push
xor
sub
sub
lea
jnp
dec
iret
adc
jle
push
movsl
sbb
out
sbb
ds
xor
fs
sbb
push
out
cmp
ds
fldenv
inc
iret
cmovo
out
test
js
daa
dec
jae
and
ss
lcall
xchg
in
dec
pusha
jae
lock
or
aas
out
rcrl
jg
call
data16
gs
mov
and
or
push
sbb
inc
stos
dec
inc
cmp
xchg
xchg
clc
xchg
xchg
dec
sbb
push
mov
pop
imulb
or
ret
out
adc
xlat
imul
repnz
pop
jne
inc
movb
inc
mov
xor
mov
shl
fwait
insl
ja
test
add
cmp
aaa
sahf
shlb
mov
shl
jp
pop
push
push
ss
xor
cmc
pushf
out
sub
or
lods
sahf
cmp
imul
shl
scas
loope
in
pop
loop
pop
push
mov
test
xchg
fisttpll
mov
mov
shrl
aam
sbb
push
scas
mov
inc
nop
cld
ljmp
lods
pushf
inc
jmp
pop
fsubrs
inc
xor
jp
push
fmuls
mov
repnz
inc
fdivl
repz
mov
add
andl
rclb
gs
andb
or
in
cmp
mov
jmp
inc
adc
ja
fwait
mov
sub
jae
test
popa
cmp
sub
orb
adc
lods
outsb
inc
into
aam
fcoms
clc
cmp
sbb
mov
mov
and
sbb
jae
outsw
enter
push
inc
xor
pop
xchg
lods
call
dec
stc
ret
inc
push
in
std
inc
cmp
xchg
popl
push
insl
popf
and
cwtl
scas
ret
test
lods
add
in
jno
aad
mov
ja
js
mov
sbb
gs
push
lods
ljmp
and
dec
insl
sub
mov
jp
cmp
lcall
testb
jg
mov
arpl
push
jae
into
sbb
pop
ret
inc
pop
dec
mov
lea
and
imul
lret
gs
push
rorl
in
mov
push
and
imull
inc
hlt
pop
ljmp
rolb
call
cmp
mov
fnstcw
xchg
sti
fs
push
add
rcr
dec
pop
dec
sub
shrl
pop
imul
lea
gs
sar
xor
cmpsb
shll
jecxz
fisubrl
add
sti
inc
add
push
cmp
icebp
push
data16
inc
insb
lea
addb
in
pop
xor
aaa
push
insl
rclb
loop
mov
xlat
imul
das
cwtl
pop
sbb
call
lods
xchg
jle
sbb
mov
jg
icebp
jb
inc
shrl
popf
ljmp
les
mov
in
sub
es
cld
sub
sub
rcl
ja
jae
iret
jo
cli
pop
xchg
xor
fdiv
aam
push
lods
rclb
lods
adc
out
sub
int
arpl
mov
jmp
out
clc
call
shll
lods
imul
xor
cmp
unpcklps
rcr
repz
inc
add
scas
in
nop
jb
test
fnstenv
sbb
push
or
xchg
repnz
xchg
mov
inc
outsb
sub
pop
jne
jnp
cmp
sub
push
bound
and
cli
test
test
idivl
sbb
fidivs
mov
mov
mov
mov
adcl
jmp
arpl
and
mov
xchg
lret
loopne
add
div
push
dec
imul
pop
jmp
inc
fs
stos
and
call
movaps
call
jp
jp
push
push
xor
pmulhw
fstl
iret
iret
push
jmp
std
popf
subl
xchg
aam
adc
into
rcl
lahf
divl
lret
dec
jp
jp
fs
jae
cmp
call
in
test
out
sub
cmpsl
adc
movsl
inc
icebp
jge
loopne
imul
xlat
xchg
mov
ja
mov
lret
push
pop
insl
stos
xlat
ss
insb
push
mov
inc
mov
aad
movsb
rcr
fwait
cmp
sub
aam
scas
adc
fwait
add
aas
push
push
xor
push
mov
pop
gs
cmp
dec
lcall
rcll
dec
xchg
mov
jp
push
ljmp
jne
shl
push
cbtw
dec
aas
push
push
enter
das
xor
adc
stos
lcall
cmp
sbb
fidivl
sahf
add
addr16
lods
cmpsb
add
push
stos
fldenv
jnp
or
inc
push
sbb
push
jb
call
dec
loope
cwtl
loope
pop
dec
sbb
and
xchg
mov
mov
icebp
dec
push
or
adc
dec
xchg
mov
mov
leave
mov
inc
inc
jl
mov
mov
testb
pop
outsb
lods
sbbb
adc
inc
cmp
xchg
in
mov
sub
xchg
test
lods
sub
lods
pushw
mov
or
in
jl
jno
jmp
cmp
gs
nop
sbb
sbb
mov
cmp
dec
aaa
js
push
and
sub
loop
jp
jle
rcrl
xchg
sarl
pop
xchg
sub
bound
push
sub
outsb
mov
andb
jbe
js
lcall
or
in
cmp
sti
cmp
fs
push
jno
sub
insb
add
popf
cmc
sti
jno
jge
and
pop
aad
outsl
xchg
mov
sbb
fstps
insb
dec
ret
movsl
mov
rorb
nop
ficoml
lods
je
cmp
mov
adc
or
nop
out
xchg
jnp
push
mov
inc
sti
leave
dec
mov
push
ss
mov
lods
ljmp
mov
in
push
fisubl
adc
adc
sbb
pusha
cli
jg
dec
orb
inc
ret
mov
or
pop
jns
jl
cmp
sbb
jb
insl
ret
andps
stc
fistpll
dec
hlt
cmp
mov
insl
pop
adc
int
inc
std
lcall
push
push
sahf
inc
push
push
in
sbb
jp
mov
mov
jl
ret
dec
mov
or
mov
push
mov
pop
push
lret
jb
into
sbb
cs
lcall
fdivs
sbb
jno
cwtl
movsl
das
mov
in
scas
push
jno
negb
add
test
aam
push
nop
add
jnp
aam
outsl
jl
cld
mov
jbe
cld
leave
mov
add
xor
xor
push
addl
rol
and
out
xchg
sarb
ret
mov
out
xor
bound
aaa
test
leave
pop
repnz
xchg
ret
jg
dec
or
cltd
dec
push
sbb
mov
insb
xor
aas
mov
xchg
ret
mov
add
jbe
nop
push
insb
mov
fs
add
dec
pushf
mov
xchg
lods
sbb
inc
call
sahf
jl
pop
and
push
repz
lret
fstl
addb
pop
adc
add
xchg
push
pop
sbbl
addr16
mov
jg
int
sbb
or
dec
sub
pop
cltd
cmp
cmp
cmpsb
mov
loopne
aam
enter
in
out
add
inc
push
sbb
icebp
test
fcoms
mov
pop
mov
push
cmp
int
aaa
mov
icebp
inc
stos
pop
aaa
cmpsb
or
pop
addw
out
cltd
push
push
lea
mov
jnp
pop
push
in
cmpl
sahf
out
leave
in
sub
inc
mov
mov
sarl
mov
inc
cmp
popf
shrb
mov
fistl
or
cmp
scas
push
ror
outsb
and
push
test
hlt
adc
popa
rclb
aas
push
outsl
jp
lds
bound
inc
xchg
ja
xchg
or
pop
lret
sbb
dec
dec
imul
and
pop
xchg
or
iret
mov
add
insb
mov
test
pop
lock
stos
paddsw
adc
xchg
mov
movzwl
mov
out
adc
xchg
dec
aam
push
adc
adc
enter
cltd
daa
inc
or
iret
das
loop
rclb
and
jno
add
jl
mov
and
push
mov
mov
ficoms
dec
jo
dec
ja
stos
mov
or
das
in
sub
cmp
jno
in
inc
mov
cmp
dec
pushf
mov
cmp
pop
pop
cmpsb
add
mov
cmc
pop
inc
mov
lea
mov
enter
xor
lock
rcll
push
ja
xchg
push
and
cmc
jecxz
mov
sbb
adc
adc
mov
ret
mov
icebp
insb
movsl
lret
stos
aas
stc
dec
insl
pop
mov
pop
cmpsb
and
addr16
jmp
mov
aas
xchg
cmp
in
out
jno
or
punpckhdq
out
pushf
jns
pushf
jae
ret
adc
scas
pusha
pop
fs
jp
ja
sub
jecxz
and
jg
jg
out
adc
mov
or
sub
jae
push
les
push
mov
test
leave
jb
fsts
mov
ljmp
mov
jge
cmp
push
xchg
lret
mov
sbb
in
jns
dec
leave
xor
mov
xor
leave
aas
movsb
flds
cmp
mov
add
cmp
adc
bswap
add
mov
fstps
push
push
ja
mov
adc
xor
adc
mov
mov
dec
jl
mov
cld
xchg
adcl
adc
pop
popf
pop
mov
in
cli
xor
add
or
or
xchg
pop
out
gs
xlat
jl
mov
fidivs
pop
into
pop
adc
pop
sub
xchg
adc
rolb
cltd
xchg
sub
pop
sub
push
mov
xchg
add
dec
insb
cwtl
inc
cwtl
lock
frstor
sub
rcrl
data16
pop
stos
dec
enter
xor
outsb
ret
mov
cmc
cmp
mov
inc
xor
jnp
sbb
fisubs
or
stos
aad
shll
fildll
xchg
outsl
push
sbb
jbe
pushf
push
push
inc
andl
mov
subb
loopne
inc
mov
pop
mov
jb
in
in
lods
fucomip
rorl
inc
inc
or
fucom
or
cwtl
xchg
test
test
adc
pop
mov
dec
dec
sub
imul
enter
pop
mov
push
movsb
lcall
sbb
out
xchg
sbb
cmp
xor
inc
aaa
ss
ds
and
cltd
mov
and
mov
es
outsb
leave
cmp
shlb
sub
fstps
cmp
dec
jno
jns
cmp
or
mov
jge
push
add
inc
jnp
popf
cmp
inc
mov
mov
cld
out
mov
mov
fbstp
insb
mov
scas
mov
out
test
fdivp
jo
pop
pop
and
in
rcrl
test
pushf
stos
jg
mov
cmp
gs
adc
mov
push
lods
xor
jle
mov
jp
aas
mov
xchg
dec
rorl
xchg
movsb
cmp
adc
xor
test
int3
into
sub
pop
test
pop
jg
lret
imul
cmp
sbb
jge
jg
inc
inc
xchg
mov
add
add
fadd
push
or
sbbl
loope
pop
push
mov
imul
sbb
inc
pop
test
or
mov
test
lea
mov
sahf
repz
pop
rorl
and
imul
mov
cmpsl
push
into
push
push
add
mov
mov
sub
mov
pop
lahf
mov
dec
xchg
mov
nop
clc
xor
fsts
aam
push
js
jecxz
or
add
jl
dec
jbe
inc
rorl
sbb
push
into
jmp
in
mov
xchg
sti
std
cmp
pop
imull
pop
int3
xchg
aas
icebp
mov
jno
mov
shl
push
dec
inc
fildl
push
dec
mov
mov
and
out
sbb
dec
fidivrs
inc
stos
pushf
testl
lods
add
and
insb
testl
fwait
mov
icebp
jo
pushf
xor
fiaddl
out
movsl
hlt
pop
loope
loopne
lret
lods
pop
adc
test
jne
push
xchg
loopne
jae
cmp
mov
dec
rcrb
jg
mov
bnd
dec
push
data16
addr16
xchg
adc
push
icebp
stos
ja
lods
xor
stos
push
hlt
cwtl
movsb
call
repnz
mov
jge
dec
leave
pop
pop
and
ret
sbb
mov
das
in
jmp
loopne
adc
insl
xor
xchg
testl
xchg
mov
out
mov
inc
adcb
jo
movsb
lods
push
in
and
or
insb
sahf
loop
push
push
aas
sub
pop
jp
test
mov
pop
test
adc
cs
inc
mov
xchg
loopne
sbb
jo
fistps
imul
sbb
and
jl
dec
dec
xor
mov
push
mov
ret
mov
xor
fildl
jne
imul
lods
loop
mov
xchg
ss
sub
fadds
push
mov
loopne
inc
mov
addr16
mov
popf
jae
fstl
push
add
cltd
jge
imul
xchg
lret
aas
xor
imul
into
jmp
jno
pop
lods
shr
inc
in
xor
dec
cltd
jnp
gs
lods
push
mov
jmp
xchg
jb
mov
stc
or
shlb
outsb
test
in
xchg
test
cmp
dec
sub
fistl
je
jge
out
scas
test
inc
mov
test
mov
pusha
mov
pop
xor
xor
xchg
popf
in
and
mov
loope
stos
pop
push
sti
lods
cmpsb
and
scas
and
dec
sbb
out
jbe
pop
outsb
pop
dec
inc
pop
popa
nop
mov
inc
mov
push
push
lods
xchg
xchg
popf
aas
mov
cmp
and
into
rclb
add
cmp
sbb
dec
pop
pushf
mov
fdiv
sub
cmpsl
jno
adc
hlt
cmp
outsl
pop
push
pop
xor
pop
inc
mov
popf
lret
mov
pop
cmp
push
inc
pop
sub
sti
pop
fisttpl
dec
jmp
or
mov
in
jae
cmp
pop
dec
fwait
mov
dec
pop
ss
sbb
std
sbb
mov
mov
or
mov
rorb
out
jae
lock
jae
cmpb
lds
fs
cli
orl
ja
adc
pop
decb
lcall
inc
dec
loop
and
jb
hlt
scas
mov
sti
mov
imul
jle
rorl
push
pop
clc
cmc
clc
stos
movsb
test
data16
lods
nop
pop
xor
mov
dec
iret
xchg
dec
mov
outsl
ljmp
insb
out
inc
mov
mov
jnp
xor
jmp
js
mov
inc
xchg
push
xchg
push
cmp
push
in
mov
incl
insl
imul
int3
pop
cmp
add
cmpl
push
pop
mov
ror
push
imul
loop
lret
push
sbb
pop
std
sub
xor
mov
aam
or
pop
test
in
ja
adc
out
jnp
xor
sbb
fimuls
stc
roll
adc
sub
movb
fs
mov
push
fwait
or
xor
jg
add
int3
xlat
add
cltd
jp
mov
mov
dec
xchg
jle
lods
mov
jmp
movsl
std
fildll
add
jg
dec
test
cltd
ds
push
mov
lods
andl
fwait
cli
cli
inc
loop
loopne
xchg
jo
sub
in
aas
mov
inc
hlt
cmp
jns
mov
shlb
jmp
jmp
lahf
ljmp
ficoml
jae
das
cmpsl
sub
mov
inc
call
and
pop
or
idivl
or
cmp
dec
test
mov
pusha
dec
xchg
test
xlat
mov
mov
sbb
inc
insl
sbb
pop
icebp
inc
lods
jge
pusha
je
cltd
inc
popf
cmp
repz
scas
scas
xchg
bnd
or
inc
shlb
sbb
jno
insl
in
jle
loop
cmc
neg
out
push
push
iret
xor
mov
add
scas
mov
mov
lods
xchg
pusha
out
mov
jecxz
sub
dec
cmp
pop
sar
sbb
or
or
insl
loop
test
pop
sub
cwtl
mov
andb
xchg
fchs
push
push
mov
cli
jg
adc
inc
xlat
call
cmp
test
or
movb
inc
mov
xchg
dec
test
xor
dec
mov
enter
sub
mov
or
in
jg
sub
enter
int3
test
push
push
aaa
dec
mov
cmc
xchg
mov
push
sbb
push
loope
mov
adc
jmp
jo
testl
fsubrl
clc
cmp
push
and
mov
into
jmp
or
sub
jl
cmp
mov
outsl
int
dec
adcb
ss
dec
nop
sub
jnp
xor
adc
call
rcll
fdivl
dec
and
jle
adc
mov
ret
test
mov
dec
jecxz
mov
push
fidivrs
insl
dec
adc
cmp
push
xor
adc
cmpsl
or
bound
add
cwtl
icebp
nop
xchg
pop
repz
sub
and
int3
dec
les
ficoms
mov
lods
xchg
jnp
xlat
push
in
jecxz
dec
push
pop
push
adc
insl
popl
jg
arpl
mov
aas
cli
negl
pop
sub
lds
les
hlt
fdivrs
ss
jp
adc
icebp
or
scas
testb
dec
inc
xchg
repnz
push
out
sub
rol
das
pushf
rorl
jns
inc
inc
cwtl
cli
xchg
cmp
lahf
jl
shlb
mov
cmc
sbb
inc
lret
roll
sbb
pop
jmp
sbb
repz
jmp
adc
rorb
or
dec
mov
lea
inc
add
out
jo
inc
cs
roll
and
faddp
sub
icebp
shr
lret
je
mov
push
mov
pop
or
mov
dec
sbb
adc
push
jnp
dec
jae
scas
jmp
sub
fidivs
mov
mov
push
sbb
ss
sub
xor
add
push
ret
scas
nop
aaa
inc
mov
mov
loope
lahf
jecxz
mov
testl
cmp
enter
mov
add
je
inc
pop
and
adc
lret
fs
aas
xchg
addl
rcr
out
pop
or
push
pop
mov
test
xor
ljmp
mov
pop
aad
fs
mov
ret
rolb
clc
xor
jns
pop
insb
mov
lds
mov
cli
lret
test
test
sbb
push
mov
mov
xor
xor
or
popf
in
leave
mov
movsl
or
add
negb
inc
mov
enter
adc
shll
xchg
cmc
sarl
cmpsl
push
hlt
pop
or
mov
mov
jae
int
loop
or
add
push
inc
sub
push
mov
xchg
mov
icebp
mov
dec
inc
mov
fs
pop
and
mov
aaa
addr16
push
xchg
ljmp
ret
lock
ficoml
cmp
adc
mov
jb
push
mov
jg
mov
mov
movsl
and
jnp
test
faddl
jno
jl
pop
jmp
xchg
in
inc
mov
dec
jb
arpl
mov
pop
cmp
jg
pop
out
enter
in
fidivrl
xor
cld
arpl
push
inc
adc
cld
sub
pop
push
icebp
lahf
jge
es
icebp
lcall
inc
pushf
mov
mov
sbb
jbe
pop
mov
pop
cmpb
or
inc
mov
mov
sbb
das
inc
sbbl
xchg
push
ljmp
pop
shlb
pop
dec
push
dec
cmp
addr16
loope
lcall
dec
pop
sbb
dec
divl
add
into
std
or
and
adc
sbb
mov
mov
jg
jb
insl
out
sub
push
xchg
scas
add
xchg
sahf
in
jecxz
lret
xchg
fldl
xchg
mov
jo
das
jne
xchg
loop
ja
addb
pminsw
es
xchg
pop
enter
sbb
xor
imul
and
sbb
jge
mov
cmc
dec
rcrl
mov
int
pop
xchg
stos
pop
mov
call
xor
nop
aam
and
dec
shrl
cwtl
cmpsb
push
cmp
loopne
mov
inc
dec
cwtl
jae
popa
dec
aaa
adc
jo
outsl
jp
repz
lret
jns
xor
cmp
cmp
stc
and
pop
dec
jns
icebp
xlat
or
mov
push
push
ror
out
imull
popl
outsb
filds
sub
mov
pop
dec
sbb
clc
negl
icebp
push
xchg
pop
jnp
aad
rcrb
adc
cmp
push
or
shll
or
call
xor
and
in
jge
call
into
sub
dec
fdiv
nop
xchg
jns
pop
inc
pop
jns
dec
xchg
js
push
inc
aaa
inc
test
and
jne
in
jae
mov
vminpd
xchg
imul
fldcw
jb
lods
lods
stos
stos
out
jmp
leave
out
shrb
jo
adc
sbb
sbb
scas
rcrl
addb
xchg
push
mov
rolb
push
insl
push
icebp
mov
push
loop
mov
sub
xor
sahf
lcall
sarl
lods
gs
adc
rcrl
or
or
cmp
dec
adc
test
pop
frstor
add
cld
into
scas
js
pop
and
ds
in
inc
enter
jmp
sub
lahf
les
scas
xchg
cmpsb
movb
fimull
mov
pop
fucomi
in
jmp
adc
sar
daa
push
roll
fildl
dec
addr16
or
mov
or
fwait
dec
jb
cltd
push
out
and
test
mov
sbb
rclb
ret
jbe
fdivrl
stos
pop
jne
mov
subb
push
cli
ror
insb
jl
jnp
mov
in
into
mov
xchg
sahf
and
jns
xchg
fwait
dec
adc
addl
add
cli
test
inc
clc
xor
into
push
shr
movsl
pop
in
and
sbb
outsb
add
mov
and
and
add
sbb
inc
push
es
cld
inc
push
cmp
push
jle
xor
ret
push
sti
pusha
enter
mov
rolb
not
mov
outsl
pop
cltd
push
pop
dec
mov
ds
cmp
or
scas
ror
sbb
fcoml
ficoms
dec
test
jle
in
inc
insb
inc
push
or
adc
pop
imul
and
pop
or
mov
push
int3
stos
mov
repnz
cmp
pop
fdivs
pop
jmp
mov
adc
push
sbb
xor
rcll
push
xor
out
les
ja
insl
xor
mov
data16
aam
dec
loopne
mov
add
fcoml
mov
xchg
mov
fdivrl
xchg
sub
dec
xchg
inc
adc
cmp
mov
mov
pushl
inc
std
in
mov
sub
cmpsl
sub
sbb
xchg
sub
fsubrl
lret
adc
popa
dec
adc
xchg
xchg
fdivs
cwtl
movsb
sub
loopne
punpckhwd
mov
vshufps
dec
mov
add
cs
cmp
in
push
or
scas
ljmp
pop
in
incl
stos
jb
dec
push
mov
ret
pusha
into
adc
cmpsl
xor
adc
sbb
jmp
sbb
pushf
insb
pop
lock
in
cwtl
pop
in
mov
push
das
push
pop
add
dec
call
xor
pushf
sub
push
es
aaa
jae
inc
pusha
cmc
sub
jecxz
scas
mov
adc
fidivrs
dec
adc
mov
mov
or
ror
frstor
aaa
inc
lret
ss
lret
pop
jecxz
addr16
into
push
jne
xchg
sub
cmp
bound
jmp
cld
ja
add
aad
idivl
dec
fwait
add
lcall
stos
out
dec
sbb
ds
adc
xchg
test
mov
add
and
sbbb
test
mov
push
or
clc
orb
int3
xor
rol
arpl
das
lret
cmp
and
call
idivl
mov
pop
push
push
pop
sbb
sbb
jne
cmp
sahf
xorl
xchg
ds
jmp
cmp
ljmp
or
mov
jnp
stos
pop
add
mov
gs
ficompl
jg
daa
xor
mov
hlt
or
rorb
jp
ret
fwait
mov
and
insb
in
fwait
nop
in
add
int3
es
inc
mov
mov
xchg
push
iret
es
lret
rcr
and
xor
xor
pop
xor
mov
xlat
mov
test
in
cmpsl
sub
in
mov
rcl
addr16
sub
and
push
aaa
or
flds
xchg
mov
jo
sbb
mov
insb
fildl
dec
ds
push
mov
pop
mov
mov
mov
add
iret
sub
adc
mov
popf
faddl
cmp
cli
cmpsb
int3
inc
addr16
adc
mov
adc
popa
pushf
faddp
mov
cld
ss
mov
adc
dec
je
xorb
jl
decl
lods
in
rclb
push
aam
adc
or
js
in
in
inc
lea
mov
mov
std
xchg
lcall
sub
push
and
mull
es
jo
test
mov
repz
movsb
add
cmp
js
mov
lcall
test
mov
push
push
mov
inc
jge
cmc
out
xor
mov
push
andl
xor
xchg
lret
adc
stc
lea
scas
push
mov
inc
stos
mov
sahf
fwait
notl
adc
pop
ret
mov
adc
lods
shrb
scas
pop
push
inc
sbb
rclb
into
test
shlb
stc
cmp
jp
cmp
jb
movzwl
into
mov
pop
inc
mul
adc
push
inc
adc
fdivrs
cmp
in
adc
bound
jb
fimull
adc
push
dec
xchg
mov
and
in
push
mov
lret
sub
mov
pop
mov
pop
orb
dec
lret
jae
in
adc
cld
aaa
mov
pop
and
mov
int3
stos
cmpsb
and
jb
cmp
call
imul
sti
mov
jne
test
lds
dec
rolb
andb
mov
notl
pop
popa
xchg
add
jge
xchg
pop
dec
mov
out
xchg
and
fidivs
inc
push
in
mov
or
adc
das
push
jecxz
or
push
jo
cmp
mov
jb
pop
xchg
push
test
push
mov
mov
loopne
fidivrs
test
mov
sub
jge
adc
mov
mov
je
cmp
cmp
or
lods
jbe
fimull
push
sti
je
mov
sarl
test
xor
out
and
imul
pop
ret
inc
mov
jge
dec
push
add
mov
filds
inc
bts
fisubrl
div
jl
mov
dec
imul
iret
loope
fsubl
inc
mov
pusha
jg
movsl
pop
mov
outsl
aaa
gs
inc
push
fidivs
mov
imulb
adc
dec
daa
jecxz
dec
and
arpl
fisttps
cs
pop
xor
movsb
out
test
scas
jl
cvttps2pi
inc
mov
movsl
in
sar
cli
stos
fnsave
cmp
add
call
hlt
insb
je
vpunpcklqdq
cli
out
addr16
test
xchg
cltd
sub
mov
xor
push
not
xchg
arpl
idivl
mov
jl
fbstp
cmp
popa
xchg
pop
test
rorb
out
sub
mov
lret
out
mov
and
test
insb
cmp
insl
and
or
jae
das
loop
movsl
pop
aaa
js
pop
push
mulps
in
mov
daa
sbb
aas
dec
clc
cmpsl
cmp
movsb
movsl
pop
aas
mov
aas
fidivrl
cmp
add
jb
lods
cmp
jo
lahf
adc
jno
sarb
outsb
cli
and
ss
repnz
addr16
cmp
sub
xor
shrb
test
xchg
leave
mov
aad
adcl
mov
jecxz
stos
sub
inc
aam
int
adc
jecxz
sbb
inc
repnz
ret
xchg
pop
aas
pop
push
sbb
fisubl
push
xor
mov
loop
pusha
cmp
pop
sbb
int
fimull
xchg
xchg
mov
or
test
dec
push
rcrb
push
shl
add
aas
pop
shl
add
mov
mov
sub
arpl
and
and
lods
cltd
stos
jb
ret
clc
ds
and
sub
popa
mov
adc
fwait
clc
out
add
test
push
xor
jg
jb
or
xor
gs
sbb
mov
jae
jo
ss
xor
push
add
ret
cs
jnp
mov
push
push
or
rcrb
mov
mov
mov
test
mov
pop
sbb
cmp
daa
jo
rolb
mov
xchg
lahf
lret
incb
mov
sbbb
rorb
aas
int
mov
hlt
jl
sbb
icebp
mov
push
ds
arpl
sbb
pop
add
out
jae
pop
popa
cmc
jl
inc
mov
jo
mov
xchg
inc
cmc
dec
cmp
js
xor
jns
add
pop
insb
sbb
loope
cmovle
pusha
ret
in
lcall
stos
test
loop
int3
mov
inc
into
xchg
insl
mov
sbb
dec
sbb
sbb
fnstcw
pop
xchg
mov
mov
push
sub
sbb
fidivl
dec
int
popa
jmp
loope
daa
push
add
jg
cmpsb
jle
lea
ret
pop
add
in
repnz
xor
mov
outsl
xchg
xchg
ja
addl
jg
sti
push
jl
adc
andb
addl
leave
ss
xlat
aaa
fwait
mov
rolb
cld
mov
push
int
and
adc
mov
lret
pop
push
and
cwtl
filds
fs
xor
xchg
imul
fcmovnbe
adc
dec
xchg
mov
xor
pushl
dec
cltd
xchg
xchg
stc
int3
repnz
inc
xchg
mov
pusha
mov
and
lds
sub
cmpsl
or
stc
sbb
aaa
jbe
ljmp
aaa
jb
lret
adc
or
movl
ret
lcall
jno
in
push
roll
inc
out
sbb
shl
in
mov
les
fcmovnu
fs
stc
adc
pop
enter
cmp
xchg
int3
push
fwait
scas
inc
fcomps
and
fcmovne
mov
adc
dec
jae
lahf
subps
scas
pusha
mov
into
dec
nop
push
sub
xchg
js
sbb
pop
pusha
sub
jg
and
cmp
pop
out
jmp
insb
mov
dec
loop
cmpsb
les
push
push
out
jp
or
adc
movsb
in
cld
imul
mov
xor
aas
jo
push
add
mov
lret
in
xor
xchg
lock
inc
mov
pushf
je
call
mov
es
mov
mov
popf
pop
lods
sarb
dec
roll
push
fnstenv
mov
imul
movsb
les
sub
std
ds
pop
daa
xchg
addb
lock
lea
out
repnz
popf
cmp
stos
fsubrs
fsub
fildll
int3
jg
mov
insb
sub
sub
jns
cmpsl
enter
rolb
mov
mov
hlt
jnp
hlt
dec
mov
dec
push
shl
sbb
iret
out
sbbl
test
jmp
nop
daa
mov
inc
pushf
sarl
adc
or
mov
loop
shrl
fstl
mov
cmp
out
push
xchg
lock
inc
adcb
jp
sub
outsb
es
add
js
shlb
fisubl
pop
sub
dec
adc
adc
push
aaa
cmp
rcrb
mov
aas
xchg
dec
aam
mov
ret
repz
cmp
clc
dec
iret
jo
movsl
repz
inc
mov
or
jge
pop
adc
jnp
cld
cltd
push
pop
int3
mov
pop
sbb
fstps
pop
adc
xor
pop
mov
es
enter
sar
jo
ljmp
add
out
adc
in
push
leave
sub
or
xchg
popa
jge
push
adc
shlb
or
call
sbb
in
jb
inc
fwait
gs
dec
push
roll
daa
add
jb
out
add
int3
push
xchg
sub
cmpl
xchg
jg
push
arpl
push
test
es
xor
add
sub
shrb
mov
andl
push
in
xchg
mov
loop
ret
ja
icebp
ret
xchg
scas
fisttpl
pushf
and
int
jo
pop
rcrb
mov
inc
push
xchg
fstpl
repnz
cmp
add
int3
fabs
bound
xor
dec
jmp
dec
rorb
mov
subb
invd
jge
sub
mov
mov
cld
aam
daa
and
das
leave
mov
repz
mov
pop
xchg
int
scas
imul
ficoml
and
out
scas
stc
cmc
jle
jle
inc
inc
inc
jge
lcall
push
xchg
ljmp
mov
mov
mov
jno
fidivl
dec
sbb
ret
push
in
cmp
pop
fdivl
jl
stos
xlat
das
clc
push
int
sub
mov
sbb
adc
mov
lds
je
aad
mov
add
inc
pop
dec
jecxz
loop
xchg
and
jmp
xchg
mov
add
xchg
adc
inc
inc
jmp
imulw
add
pop
aad
out
scas
in
push
mov
adcl
push
xchg
in
mov
sarb
mov
imul
mov
lods
dec
adc
inc
xchg
push
jbe
stc
ret
shll
jmp
into
aas
jbe
xchg
loope
aaa
push
hlt
lds
cmpsb
dec
or
lods
push
push
jge
jo
xchg
movsl
mov
sbb
int3
mov
jb
lret
fldl2t
pusha
test
or
loope
sti
jb
add
inc
adc
mov
sub
cwtl
pusha
in
fisubrl
int
xor
xchg
jne
js
jmp
cmp
pop
pusha
subl
imull
mov
lret
or
ljmp
sbbb
add
hlt
paddb
adc
nop
aad
sbb
jo
inc
mov
inc
jb
mov
scas
mov
loopne
and
add
movzbl
bound
mov
outsl
mov
out
fcmovne
pop
push
scas
dec
mov
mov
jge
xchg
xor
movsb
in
cwtl
adc
pop
dec
sub
loopne
push
cli
inc
ret
jne
mov
xor
push
jge
push
sub
xchg
sbb
mov
lret
push
mov
int
cmp
decl
sbb
jmp
jp
xor
leave
pusha
sbb
jge
jecxz
pop
iret
pop
mov
jne
cmpsl
sub
pop
int
stc
adc
lahf
dec
inc
lods
loopne
mov
sarb
pop
stos
in
sbb
lcall
xchg
adc
jne
jb
jne
jl
mov
in
xor
out
mov
push
mov
jecxz
icebp
enter
adcb
pop
jl
lcall
test
cld
cli
xchg
outsl
cmpl
push
and
mov
add
orl
xor
ret
aad
sbb
jae
xchg
adc
test
out
test
pop
cmp
movsl
cmp
pusha
imul
mov
pop
out
repnz
sub
fstpl
pop
js
iret
sbb
dec
pop
dec
into
mov
mov
xchg
jmp
aas
and
dec
daa
push
stc
sub
jg
cmpl
push
push
mov
xorl
nop
jb
insb
pop
ljmp
mov
fldenv
cmpsl
int
inc
int
inc
lahf
in
dec
fimuls
sub
fcoml
push
divl
xchg
add
jecxz
jo
pop
inc
ja
push
repz
mov
in
mov
add
lods
inc
fstp
jge
sti
negb
out
in
sarl
push
adc
std
mov
pusha
adc
hlt
cwtl
cs
mov
cltd
cmc
cmc
xchg
loop
fidivl
in
stos
mov
lods
jb
es
or
pop
movsl
xchg
movsl
add
and
cmp
or
insl
and
or
hlt
sub
jge
js
cmpl
sti
arpl
fwait
lret
repnz
mov
push
adc
bound
xchg
or
adc
fisubrs
bound
sar
stos
loopne
cmpsl
sbb
cmp
outsl
lds
arpl
xchg
cmp
jecxz
mov
dec
sub
jns
or
movsb
xchg
dec
inc
daa
adc
or
jg
and
sub
iret
pop
dec
jno
xor
add
push
nop
inc
ret
mov
add
sub
movsl
das
push
inc
dec
jb
push
mov
mov
jge
dec
int3
xchg
xor
ret
mov
xchg
aad
loope
sti
mov
icebp
xor
test
repnz
bound
dec
add
mov
dec
mov
xor
es
std
cwtl
mov
out
inc
std
dec
rolb
mov
pop
dec
mov
push
sti
adc
push
mov
cmpl
bound
cmp
jo
test
mov
ljmp
push
test
inc
jg
leave
dec
repz
xor
loop
insl
add
pop
bound
rorb
hlt
lret
ret
or
pop
cmp
xor
mov
je
sbb
std
sbb
adc
rcl
push
lea
mov
pop
push
gs
je
push
or
cmp
lods
cmp
dec
cmp
adcl
inc
stos
or
inc
lds
inc
popa
and
or
xchg
and
jne
dec
push
lret
or
int3
xchg
ror
mov
mov
cwtl
jb
aad
dec
mov
inc
jnp
shl
dec
cwtl
subl
push
pop
jge
rcrb
ret
jne
inc
sub
pop
and
xchg
je
sub
mov
mov
mov
data16
loope
rcl
lcall
movsb
leave
lock
mov
arpl
jmp
hlt
test
sub
ret
xchg
out
insl
cmp
sub
dec
jle
iret
adc
js
repz
int3
aad
jno
imul
cltd
pop
pop
bound
lods
fsubrl
je
rolb
inc
jle
mov
sub
or
or
lcall
addl
xchg
mov
inc
cmp
idiv
test
inc
popf
mov
and
pop
xor
in
filds
jae
test
outsb
pop
hlt
xor
xchg
andl
mov
rcr
loopne
mov
shlb
addr16
loope
push
sbbb
stc
cs
xchg
xor
mov
lods
sbb
pop
dec
cli
jnp
idivl
xchg
or
fucomip
lds
push
pop
inc
mov
ror
loope
adc
jae
cmp
psrlw
lret
rcl
mov
xchg
sbb
inc
add
fcmovb
cmp
loope
sbb
mov
dec
mov
je
fmuls
cmc
daa
mov
clc
ret
call
in
push
in
dec
popf
jno
in
sub
or
add
add
fistpl
and
xchg
ret
push
mov
sbb
cmp
bound
into
shrl
into
fwait
xor
js
jmp
add
jnp
mov
push
sub
dec
repnz
mov
inc
and
in
ja
dec
dec
lock
aaa
repz
std
cmp
sub
jp
or
jl
lods
mov
pop
xchg
in
testl
xchg
inc
outsb
subb
xchg
int
mov
mov
inc
and
inc
push
xchg
dec
mov
push
aam
jle
inc
imul
in
adc
cmp
stos
or
push
jo
in
jno
push
xchg
mov
cmp
xor
mov
lds
outsb
lcall
xchg
mov
mov
addr16
std
inc
es
or
inc
mov
xor
in
out
ja
cmp
or
xor
shll
xlat
inc
mov
mov
inc
jbe
inc
cmp
insb
imul
xor
cld
xchg
iret
scas
loopne
das
mov
inc
dec
loop
sbb
popa
fwait
data16
mov
sbb
sarb
sub
dec
and
adc
cmp
sub
sbb
jle
pop
movsl
inc
mov
jmp
add
xor
fwait
push
add
or
jecxz
cld
andb
addb
add
mov
fists
inc
pop
lret
mov
mov
je
cld
mov
xor
dec
push
mov
test
mov
push
outsb
jecxz
jle
jne
sahf
out
int3
ficomps
mov
imul
inc
pop
push
adc
std
pop
or
mov
cmp
push
sti
jb
clc
das
jnp
ss
jle
push
pusha
fcmovu
aad
fnsetpm(287
add
enter
inc
stos
packuswb
and
cmc
mov
into
fdiv
in
rcrl
add
imul
push
pop
outsb
pushf
xchg
inc
pop
jno
cmp
push
sahf
or
jb
sbb
shll
push
std
pop
jecxz
mov
stos
repnz
stc
mov
or
sti
pop
jmp
jl
aam
fisubl
mov
mov
aam
xchg
fstps
xor
jbe
cmp
aaa
out
int
iret
mov
adc
adc
jmp
sbb
lods
outsl
and
inc
cmpsl
pop
xor
pusha
inc
outsl
and
dec
pop
shlb
jno
pop
enter
add
jnp
shlb
ss
lock
pop
push
cltd
xor
mov
push
cmp
dec
adc
inc
or
inc
sub
out
dec
addl
loopne
jmp
sub
jns
mov
add
jo
testb
daa
pop
ret
addl
mov
push
loope
push
emms
pop
jbe
dec
jbe
pop
ljmp
mov
sub
mov
xlat
xor
stos
jg
pop
xchg
cmp
sbb
repnz
ret
test
xor
insl
push
xor
mov
scas
pop
and
jae
xor
cmp
jb
add
mov
test
test
sub
lds
scas
repnz
mov
pop
pop
fs
adc
aaa
shl
lock
andb
ret
nop
loopne
mov
sub
mov
rcrl
xchg
or
add
in
in
mov
repz
add
add
and
out
pop
fcoml
mov
dec
push
shl
cmp
insl
pop
cmpsb
jb
loope
repz
sbbb
loop
push
xchg
nop
dec
pop
ja
in
test
jge
pushw
lcall
ror
mov
or
ds
sbb
shr
or
xchg
sahf
sbb
sub
jg
repz
nop
fists
loop
push
pop
pushf
cmpl
lods
lahf
arpl
sub
scas
lahf
lock
jnp
inc
in
popa
adc
loopne
nopl
push
and
jge
cli
test
imul
aad
jb
xor
fwait
mov
jnp
mov
scas
pop
xchg
mov
push
leave
mov
mov
scas
mov
fidivrs
xchg
out
sbb
repnz
adc
iret
push
fs
lret
push
push
clc
jae
cmp
and
mov
ret
rorl
mov
lcall
test
fsubl
ljmp
fcmove
popa
fucomip
adc
pop
ficoms
sbbb
add
pushf
lods
jle
int
cmp
xchg
xor
pop
outsl
aas
shr
xor
stos
or
sarl
movsl
fistl
xchg
push
xor
and
mov
fidivs
jns
cmp
std
cmp
add
xchg
jbe
ljmp
mov
jl
cmpsb
out
dec
push
lock
out
mov
arpl
mov
mov
in
pusha
xor
sub
cmp
gs
ficompl
stc
xor
and
inc
icebp
push
out
mov
mov
cmc
push
aaa
aaa
jg
cmp
loopne
rorl
gs
loop
pop
dec
scas
push
loopne
mov
fwait
js
sbb
stc
jae
cmp
push
imul
sti
test
sbb
fdivl
sbb
adc
loope
fnstsw
jb
fwait
inc
add
mov
lods
sub
mov
inc
fildl
push
andl
cmp
push
mov
fcompl
inc
jbe
mov
inc
cmp
lahf
out
call
sub
mov
sub
gs
jbe
pop
sub
mov
stos
imul
add
jae
inc
fs
fadds
dec
ljmp
cmp
insl
pop
mov
push
push
pusha
negb
and
mov
or
pop
xor
push
in
repz
clc
nop
lods
xchg
dec
xor
ss
lea
popa
mov
loope
mov
pop
test
push
nop
cmc
sub
or
mov
xchg
mov
dec
add
rcr
mov
sbb
dec
mov
cmpl
adc
fwait
pop
push
push
adc
cld
pop
mov
les
fistpl
jno
dec
inc
mov
push
push
scas
sahf
cmc
push
in
test
mov
imul
stos
cmp
fwait
inc
clc
pop
stc
cli
sbb
scas
mov
cli
test
in
out
lds
sbb
gs
or
inc
xor
les
jp
fnstcw
jmp
sbb
cmp
aam
sub
push
enter
js
mov
sub
mov
adc
mov
pusha
ljmp
loopne
push
pop
ds
ds
add
xchg
inc
addb
sub
pop
das
mov
mov
xchg
or
in
inc
dec
nop
cmp
mov
movsl
lea
mov
bound
das
mov
and
in
loop
xor
xchg
addr16
fldt
sub
add
fldcw
addr16
push
add
adc
jl
mov
fnstcw
ja
mov
adc
rol
cwtl
adc
pop
adc
and
ret
sub
out
inc
xlat
test
pop
scas
addr16
push
inc
push
es
repnz
jecxz
cmp
imul
inc
ljmp
cltd
mov
lret
adcb
mov
xor
popf
dec
movsl
ja
push
add
clc
lea
orl
test
mov
fldt
inc
inc
inc
xchg
es
into
int3
jg
test
outsb
repnz
sbb
ret
mov
ret
fidivrs
sub
adc
out
ror
addr16
fisttpll
jecxz
cmp
pushf
cmpsb
xor
inc
jne
loop
xor
mov
hlt
cltd
lret
pop
mov
js
adc
mov
dec
je
repnz
xchg
sahf
mov
inc
jp
and
adc
cmpsb
pushf
jbe
mov
mov
dec
mov
push
mov
test
xor
pop
scas
push
xchg
mov
push
cmpsb
mov
ja
mov
mov
lods
pop
icebp
add
out
pop
test
fsubs
ret
adc
mov
pop
std
sub
and
lcall
jl
push
dec
shll
xor
sbb
dec
sti
cmp
push
test
inc
or
adc
das
lret
sbbl
cld
or
pop
sti
inc
enter
jl
inc
xchg
popf
mov
les
push
and
and
or
add
sar
mov
cmp
into
aam
pop
enter
call
repz
or
mov
insb
lret
inc
push
pushf
es
dec
add
adc
xor
and
push
mov
popf
jge
or
mov
call
xchg
and
xchg
mov
mov
sub
xchg
ficomps
push
orl
pop
scas
pop
mov
in
cmp
popa
test
enter
ret
xchg
mov
mov
sub
or
jl
lds
cmp
inc
xchg
fistps
inc
xchg
dec
cmp
in
add
or
fimull
push
cmp
xor
sbbb
lds
mov
mov
pop
in
aad
sub
pop
jp
loopne
mov
cli
pop
test
pop
lock
dec
ficomps
shlb
pop
jg
pop
mov
addr16
mov
xor
push
fnsave
cmp
xchg
or
xor
je
xor
enter
rorb
pop
sbb
incb
mov
out
loopne
test
ret
scas
cmpb
scas
je
aas
jb
and
cmpsl
insb
in
xchg
leave
in
aaa
push
mov
and
fstl
and
fsubrs
leave
stos
scas
or
aam
push
faddl
and
jp
cmp
jl
push
cmp
adc
add
in
scas
jl
push
lahf
jns
pop
and
or
mov
test
jmp
mov
fcmovb
pusha
add
outsl
inc
testl
std
xchg
pop
pusha
scas
scas
into
xchg
cmp
pop
push
lcall
retw
mov
cmp
mov
popa
lcall
push
sar
nop
daa
fistps
cmp
cmp
lahf
fdivs
clc
psubusw
mov
movsb
cmpsb
test
bts
scas
es
arpl
cld
daa
mov
mov
cmp
add
xor
js
push
dec
cmp
dec
add
insl
cmp
or
mov
lcall
push
add
jne
push
scas
cltd
ret
insb
add
fcomip
jns
popf
mov
int3
cld
leave
in
and
jb
out
fidivs
inc
scas
std
mov
adc
pop
pop
ja
je
not
aas
mov
ret
and
cmp
mov
gs
dec
mov
push
fwait
xchg
ljmp
push
adc
mov
mov
push
repnz
add
mov
pop
mov
cmpsl
adc
lcall
mov
mov
xchg
ljmp
cwtl
pop
out
andb
jno
jmp
lcall
inc
ja
imul
jle
pop
sub
ds
pop
fidivrl
pop
loope
test
out
popf
into
xor
sub
test
sbb
sub
subl
xchg
add
addl
fidivrs
sarl
pop
push
xchg
loop
les
popf
fisttpl
sbbb
popa
add
cld
mov
rcrb
mov
es
out
fmull
sub
add
iret
enter
test
addl
sub
lea
aam
inc
in
insb
mov
popa
mov
aaa
mov
xchg
es
sub
jne
sahf
dec
test
cs
or
pop
in
push
insb
and
jmp
fistpl
push
xor
inc
outsb
sub
mov
jp
adc
clc
jno
inc
mov
cmc
incb
inc
pop
jo
orb
sub
add
cltd
std
fwait
in
xchg
dec
mov
arpl
fwait
ljmp
jmp
xchg
fdivrl
adc
xchg
adc
pop
out
mov
jmp
mov
lods
rcrl
xchg
mov
rcll
push
xlat
sub
mov
add
jbe
scas
or
js
mov
xchg
mov
ss
lock
dec
cmp
add
fimull
cmp
rorl
add
xchg
test
push
adc
inc
das
jo
hlt
ja
xor
xchg
test
mov
jb
push
xchg
xor
cmp
dec
pop
lods
jno
outsb
pop
xor
xor
movsb
fwait
lods
lret
int
sbb
test
push
mov
jge
sub
leave
cmp
lret
pop
sbb
ja
pop
lea
push
or
adc
ljmp
aas
jno
loope
scas
push
jle
enter
sub
test
ds
in
xchg
or
mov
or
orb
jns
cmp
dec
movsb
out
xchg
pusha
cmp
adc
xchg
aaa
stos
std
mov
test
rcll
sbb
ret
sbbl
mov
lock
jle
inc
sbb
jge
nop
pop
aad
push
orb
jbe
daa
push
pop
mov
adc
outsl
fs
mov
or
xchg
jmp
inc
dec
mov
add
xchg
sahf
adc
push
sbb
pop
push
xchg
std
push
sar
jmp
xor
ja
xchg
fcmovnu
imul
push
mov
ja
jge
mov
test
xorl
es
push
gs
push
and
lcall
sbb
jno
mov
dec
loopne
xchg
pusha
mov
dec
adc
scas
push
cmp
lahf
fiaddl
pushl
hlt
sbb
inc
and
jg
rorb
cmpsl
in
ret
mov
jbe
dec
and
mov
dec
mov
xchg
out
les
lock
xcrypt-cbc
cmpsl
push
xchg
sbb
xor
xor
cmp
inc
in
repz
ret
adc
jne
dec
dec
out
pop
adc
lock
cld
loope
repnz
not
aad
or
inc
and
test
cmp
mov
arpl
jecxz
ret
add
shll
sahf
xchg
ret
fisubrs
cs
xor
rep
shll
loope
cltd
mov
push
or
imul
cld
push
xchg
mov
icebp
xor
aaa
fimuls
adc
sub
cmc
dec
xchg
pusha
pusha
lods
lds
or
inc
or
aam
stc
mov
dec
mov
popf
mov
mov
dec
pop
insb
dec
cmp
mov
lds
sbb
mov
mov
test
imul
jp
xchg
lea
and
sub
xchg
adc
sub
pop
fdivrs
movsl
imul
dec
add
iret
xor
jns
pop
push
push
imul
inc
fmuls
pop
fcompl
sub
fsubrp
outsl
jne
jmp
and
jno
and
cmc
xor
sub
or
movsl
aad
adc
movsl
jl
xchg
dec
icebp
ja
fbstp
add
in
mov
dec
test
enter
gs
gs
inc
dec
push
mov
loope
idivl
nop
xchg
cwtl
shll
out
fstpt
sarl
test
arpl
imul
lea
incb
push
mov
mov
gs
pop
les
pop
dec
test
mov
mov
pushl
fsubs
sub
add
mov
add
push
lret
je
cs
inc
sub
push
adc
sub
push
sbb
loopne
xor
mov
idivl
inc
mov
sbb
test
gs
popa
enter
push
test
pop
sarb
lcall
cmp
dec
lea
mov
cvtpi2ps
loopne
jmp
arpl
jns
mov
or
push
jbe
popf
daa
popf
call
push
mov
mov
add
add
rorl
ret
mov
xchg
jle
jge
mov
cmp
loope
roll
pop
lret
lock
mov
sbb
or
aaa
ror
shr
xchg
fsubs
aaa
pusha
lret
xor
or
fidivrl
pop
sub
fs
add
jge
test
add
test
sbb
dec
sarl
rcrb
adc
xchg
cwtl
jae
mov
clc
not
repnz
sub
mov
mov
sbb
mov
cmp
scas
cmc
adc
mov
stos
stos
sbb
test
mov
push
and
mov
stos
in
or
daa
add
or
incb
mov
push
push
lret
mov
mov
lods
cs
hlt
adc
and
mov
into
cmpsb
sbb
or
and
loop
rorb
es
loop
xchg
lcall
mov
or
or
dec
xchg
push
mov
hlt
add
pop
jnp
push
lods
and
lea
lods
xor
setne
das
push
and
testb
adc
jmp
test
jo
loop
cltd
aaa
imulb
xchg
cs
push
and
pop
mov
cmp
adc
inc
dec
aam
iret
mov
int3
and
mov
adc
jnp
mov
in
add
adc
fldl
aaa
cli
test
jle
sbb
sub
je
pop
dec
scas
push
gs
pop
adc
or
lds
mov
jle
or
xchg
add
test
hlt
dec
daa
sbb
sub
xchg
cmpsl
jno
shlb
iret
mov
push
aaa
mov
shlb
scas
cmpsb
mov
pop
pop
test
xchg
out
lret
jns
imull
in
mov
in
sub
push
stc
scas
sbb
sbb
outsl
or
leave
movsb
add
icebp
into
and
aad
out
jmp
loope
jle
and
int
nop
mov
xchg
lcall
jo
add
outsb
xchg
sbb
jmp
push
in
cltd
movsb
jl
push
es
imul
cli
test
loop
jmp
pop
rcr
movsb
mov
inc
mov
scas
jne
dec
mov
addr16
adc
adc
inc
push
cmp
push
stos
mov
loop
insb
jbe
push
jg
fldenv
cs
dec
divl
pusha
push
add
rcll
and
add
and
sbb
add
mov
sub
lret
rcrl
out
stos
in
mov
fdivl
test
mov
or
jae
lret
adc
mov
mov
shr
inc
repnz
add
into
sub
adc
es
lock
fwait
or
dec
test
in
push
jnp
test
insb
jmp
mov
xor
add
es
subb
int3
pop
aad
or
mov
jno
add
fiaddl
inc
test
mov
inc
mov
adc
inc
cmpsl
cmp
test
std
push
aaa
mov
or
jno
lods
mov
test
int3
push
mov
in
lahf
fldl
lea
mov
mov
out
fldcw
loop
outsb
push
sbb
fwait
mov
and
hlt
xchg
xor
add
loop
repz
scas
mov
mov
fst
cmp
dec
fs
sbb
lcall
scas
je
xor
shrb
fisttpll
mov
cmp
cli
pusha
fldl
push
jmp
jne
fsubl
inc
dec
adc
int
iret
aad
enter
ret
sbb
pop
pop
enter
js
add
xchg
xchg
outsb
shlb
sbb
adc
pop
stc
fildll
xchg
xlat
mov
rcrb
adc
add
xor
mov
lods
xor
push
inc
stos
dec
sbb
pmuludq
push
cwtl
pop
lahf
add
out
ss
push
aaa
vpunpckldq
testb
fs
and
push
sahf
sub
cli
adc
cltd
inc
leave
jg
xchg
sbb
mov
out
pop
push
jno
adc
mov
sbb
cmpsl
jecxz
push
data16
cmp
jns
incl
stc
push
mov
sub
push
mov
sbb
arpl
loopne
jg
test
xchg
fwait
mov
dec
jmp
fsubrs
jge
std
in
xchg
mov
jecxz
xchg
pop
fmuls
jmp
and
fistl
mov
and
sbb
test
jne
loop
jb
lock
jp
add
or
xchg
or
iret
xchg
dec
xchg
iret
icebp
fcmovb
push
inc
lret
fsubs
sub
sbb
ljmp
or
mov
cmc
adc
scas
lret
jne
mov
cmp
or
dec
adc
jge
jmp
mov
iret
dec
sbb
or
hlt
cmp
movsl
in
pop
jno
mov
insl
insl
dec
lret
nop
sahf
lods
push
cmp
test
clc
clc
and
or
out
mov
cmp
lods
xor
sarb
je
jbe
cli
inc
lock
imulb
or
jns
push
loop
jmpw
sub
cli
mov
ljmp
pop
jg
out
push
dec
jmp
pop
jb
dec
pusha
ds
ljmp
xchg
pop
xchg
jecxz
fidivs
cmp
sub
add
lahf
mov
add
aas
int
test
adc
push
cmp
je
push
and
push
leave
adc
test
xor
into
fiadds
mov
stos
repz
pop
inc
in
and
fwait
adc
add
fwait
jmp
aaa
ss
andl
fadd
pop
nop
push
cltd
add
inc
cmp
mov
sar
mov
cli
mov
cmp
inc
inc
in
mov
add
enter
inc
mov
pop
inc
cmp
rcrl
xchg
mov
inc
add
jo
cmpsl
lods
fisttps
mov
roll
xor
pop
lahf
mov
in
mov
repz
ss
mov
enter
adc
push
lods
xlat
or
shl
fdivr
call
mov
loopne
mov
scas
je
jg
adc
push
pop
int
dec
or
mov
pop
inc
jne
jmp
adc
xchg
es
jecxz
stc
aas
pop
fcmovbe
ds
xor
loope
or
pop
push
dec
sub
adc
out
push
dec
inc
addl
push
fildll
push
dec
sub
sub
inc
imul
xor
push
testl
cli
fidivl
arpl
nop
sbb
out
std
lods
mov
xor
lahf
pop
daa
negl
dec
movsl
dec
xor
int
mov
add
pop
in
or
push
or
dec
sbb
xor
cmp
cmp
stos
or
or
pop
mov
in
loopne
push
and
jbe
pop
pop
mov
out
clc
std
inc
sub
leave
xchg
ret
pushf
push
push
sub
adc
adc
adc
dec
mov
mov
cmp
fbld
cmp
popa
mov
xor
mov
shr
and
inc
push
push
adc
xor
lods
jg
and
xchg
inc
addr16
icebp
mov
push
ret
int3
in
mov
pop
fidivrl
cmpsl
adc
out
int
repz
js
push
fucomi
in
out
lret
and
test
pop
pop
lret
mov
mov
adc
add
fiadds
lcall
ljmp
ljmp
xchg
cltd
stc
es
mov
fsubrs
daa
test
adc
and
pusha
iret
sbb
mov
xor
mov
push
push
xchg
push
xchg
mov
dec
xor
sub
js
movb
adc
cmpsl
mov
push
loopne
out
pop
lods
mov
inc
imul
dec
jle
adcl
inc
sti
hlt
orl
adc
push
int3
sbb
out
ss
inc
call
sub
in
or
mov
push
rorb
aas
int3
inc
mov
aad
sub
outsb
xchg
mov
enter
mov
pop
lock
pusha
pop
aam
mov
rcrl
mov
cmp
pop
xor
cld
xor
push
enter
shll
in
adc
jecxz
out
int
pop
pop
inc
daa
ret
push
sub
test
jbe
adc
xchg
add
ja
add
pop
pop
repnz
mov
dec
clc
pop
dec
fstpt
popf
aam
lret
lds
aaa
cmp
orl
push
mov
pop
fs
popa
and
lret
jle
imul
mov
nop
pop
mov
pop
enter
aad
inc
dec
in
jl
scas
nop
jae
iret
jns
jno
adc
cmp
jg
inc
or
sbbb
mov
mov
adc
test
mov
xchg
pop
mov
jge
xchg
sub
cli
xlat
mov
jno
insl
cli
sarl
xchg
lods
xchg
ljmp
out
mov
movsb
lahf
aaa
pop
fldcw
insl
jae
adc
and
mov
jae
add
and
popf
sbb
in
or
push
dec
cmc
pop
inc
push
inc
inc
jmp
hlt
loopne
fimuls
pop
imul
jecxz
gs
cmc
inc
gs
push
mov
mov
roll
aad
iret
dec
nop
and
adc
mov
xlat
jl
gs
cmpsl
pop
jb
push
loope
jle
and
fwait
roll
cmp
or
xor
pop
ss
imul
sub
inc
cmp
mov
xchg
cmp
xor
repz
push
jge
adc
ja
lahf
je
shll
sub
pop
xchg
lcall
and
sub
std
lea
pop
sahf
or
in
mov
rcrb
test
addr16
out
push
lods
cmp
dec
imul
inc
mov
dec
push
jmp
out
shl
xor
js
add
lods
cwtl
xchg
xor
dec
in
fidivrl
sti
fidivrs
xchg
cmp
inc
jecxz
add
movsb
scas
mov
pop
mov
aad
xor
lahf
cmc
arpl
inc
fsts
test
xchg
xchg
inc
push
cmp
inc
push
or
sub
adc
int3
mov
data16
mov
in
mov
sbb
stc
inc
mov
popf
adc
jne
dec
lret
dec
sbb
fnstcw
ss
ja
out
pop
cmpb
ja
pop
repz
cmp
adc
dec
adc
or
mov
sub
mov
sbb
ljmp
xchg
bound
call
mov
sbbb
jne
loop
inc
or
jge
cld
ss
mov
mov
lahf
fwait
adc
sub
testl
movsl
mov
xchg
out
faddp
push
mov
rol
call
xor
fsubs
push
push
movsl
repz
leave
dec
jns
cmpsl
mov
push
pop
jp
jecxz
sti
mov
sbb
push
frstor
and
cmp
push
jmp
xor
jmp
mov
ror
ret
sub
fildll
test
scas
add
stos
sahf
sbb
pop
fucomp
dec
rcll
sti
imul
pop
pop
test
popf
push
jne
cltd
pop
mov
in
div
test
pop
add
jmp
add
repnz
jo
fucomip
jns
jae
cmpsb
cmp
inc
push
pop
lret
adc
jno
pop
jmp
xor
lds
dec
inc
mov
jno
pop
jns
inc
enter
mov
andb
inc
dec
and
and
and
js
movl
cli
or
test
rolb
xor
mov
fdivr
addb
pop
sub
mov
jno
pop
mov
pop
inc
stos
xorl
cmp
push
mov
pop
jb
xchg
inc
outsl
jg
cs
adc
shlb
out
and
cmp
ja
jp
push
mov
adc
test
scas
adc
imul
dec
cmp
sub
push
and
movsl
push
add
mov
add
mov
adc
cmp
into
mov
out
addr16
inc
sahf
push
jle,pn
cmpsb
out
nop
loope
pop
call
cs
add
sbb
cltd
adc
dec
bound
inc
std
movsl
stc
call
cmp
sbb
pop
ja
hlt
in
and
lcall
jnp
into
insb
test
jbe
push
sub
sub
fisubrs
dec
and
in
fists
or
push
pushf
push
pop
xchg
int
mov
push
imul
punpckhwd
stos
es
fcmovu
pop
dec
cmp
test
dec
dec
mov
mov
gs
repz
adc
out
jp
sarl
mov
cmp
fwait
adc
aam
fwait
cmp
les
mov
push
sub
mov
lahf
and
jne
movsl
dec
and
aas
jae
dec
push
mov
mov
jne
mov
aaa
pusha
sbb
xor
xchg
enter
sbb
jo
dec
arpl
xor
xor
insb
mov
jbe
cmp
scas
orb
sbb
jmp
shrl
cs
dec
push
sbb
add
inc
push
orb
andb
or
jno
xor
insb
fstpt
cmc
xor
push
adc
stc
pop
repz
popf
pop
filds
xor
int
inc
pop
jae
popa
mov
inc
movsl
notl
and
cltd
popa
cmpsb
cmpsl
jae
mov
gs
scas
pop
and
arpl
stos
std
adc
dec
xchg
test
mov
mov
dec
dec
pop
movsl
mov
ficomps
fs
add
rorb
xchg
xor
cmp
mov
fdivrs
test
inc
sahf
ss
inc
and
pop
mov
mov
fistps
mov
xor
in
dec
ljmp
test
out
sahf
ja
sbb
lock
dec
mov
repz
sbb
in
and
mov
or
icebp
roll
pop
ljmp
xor
bound
out
ja
push
mov
mov
xor
push
addr16
jl
test
dec
inc
jns
cli
arpl
sub
mov
fbstp
xchg
xor
adc
push
ret
aas
add
clc
popf
notb
aaa
adc
mov
sbb
mov
icebp
sub
cld
sbb
mov
sbbl
mov
test
jno
nop
and
and
int3
cmovge
push
shll
sub
sarl
aam
jp
push
mov
enter
iret
addr16
jb
jbe
bound
jg
out
mov
adc
adc
sub
push
test
or
adc
mov
or
rorb
mov
cwtl
mulb
jb
xchg
imull
arpl
lea
idiv
inc
fbld
xor
jnp
cmc
addb
hlt
add
aaa
pop
mov
cmp
cld
pop
pop
or
pop
pop
shrb
xchg
cmp
pop
sub
aad
fsubs
xchg
xor
dec
inc
xchg
fdivrs
or
and
loope
pop
cmp
xchg
mov
ja
lret
xchg
xor
xchg
out
rcl
mov
cld
into
inc
xor
xchg
jne,pn
xchg
inc
mov
cltd
add
lret
mov
test
push
and
stos
scas
pop
in
data16
cld
arpl
adc
sbb
popa
vsubss
or
dec
movsl
les
fmull
clc
or
push
mov
rorb
push
pushf
jae
jns
or
mov
jmp
in
imul
mov
xchg
dec
jne
daa
ficoms
push
lods
fdivl
cmc
stc
rolb
push
lea
lcall
pop
scas
dec
imull
mov
mov
popf
or
movsl
mov
in
adc
mov
lret
jp
jns
pop
insb
pop
inc
push
inc
insl
inc
sub
mov
mov
xchg
jns
mov
add
aad
xchg
fildl
pusha
sahf
push
imul
mov
adc
lcall
sbb
dec
icebp
jge
in
lahf
repz
les
adc
outsb
or
jae
jne
mov
add
js
or
sbb
inc
inc
subl
dec
std
pusha
pop
cmp
ss
enter
jmp
lret
ret
mov
inc
mov
jb
jl
int3
mov
fcomip
scas
lret
shrl
cmpsb
pop
lret
jbe
xlat
push
cmpsb
sbb
or
cmpsl
rorl
push
repnz
inc
dec
loop
ret
dec
sub
fisubl
in
icebp
mov
andb
std
shrl
cmp
dec
ljmp
les
enter
push
hlt
cmp
lock
cmp
es
push
xchg
lcall
xor
lret
ficoms
jbe
aaa
jbe
pop
js
pop
jecxz
cmp
lods
inc
xorb
cmp
jl
insb
jle
in
xchg
inc
jle
test
pusha
ficoml
adc
push
xor
sub
inc
lcall
clc
jno
ret
cmp
xlat
sbb
popa
loop
in
jmp
mov
xor
je
add
inc
mov
pop
lret
out
ljmp
pcmpeqb
adc
xchg
dec
pop
mov
mov
clc
iret
xor
outsl
xchg
mov
fdiv
inc
aam
sub
int3
xchg
arpl
add
push
lret
add
mov
js
ljmp
ret
int
xor
push
add
xchg
icebp
cmp
dec
inc
xor
adc
pusha
dec
ss
movsb
mov
or
aad
mov
test
pop
jbe
or
scas
aam
movsb
add
inc
inc
sub
ret
int3
imul
sub
outsb
pop
sarb
xor
mov
data16
and
sub
pop
pop
jecxz
fs
dec
scas
pop
shr
cmp
add
sbb
and
jecxz
jnp
cmpb
inc
scas
fldcw
mov
notl
imul
inc
or
cwtl
insb
aaa
and
loop
testb
xchg
dec
pusha
adcl
jb
jmp
or
daa
arpl
adc
ret
insl
and
jno
jp
cmp
fwait
cld
inc
loopne
pop
xchg
test
sub
cmpsb
push
xchg
adc
mov
ja
lret
sti
mov
dec
sahf
dec
mov
loop
inc
cmp
fdivl
cmp
sub
pop
mov
ljmp
or
push
cmp
in
pop
add
int3
pop
movsl
aad
jl
subb
cmp
out
sbb
mov
or
jne
movsl
unpcklps
dec
lods
push
test
popf
loopne
inc
loope
push
mov
cs
lret
sbb
lock
cld
fcomip
mov
adc
sbb
in
xchg
jns
clc
pop
rcr
cmp
pop
dec
lods
fwait
inc
fsubrs
pop
ret
mov
jmp
add
jns
adc
outsb
imulb
out
mov
xchg
rolb
xor
out
dec
popa
inc
xorb
les
shlb
push
push
out
int3
xchg
add
repnz
sahf
inc
movsb
test
xor
xchg
or
sahf
push
movsl
xchg
xor
cmpsl
ss
popf
cmp
cli
fs
cli
cmp
mov
test
ficoml
sbb
movsb
adc
dec
cmpsb
jo
std
mov
fildll
ljmp
mov
mov
push
jno
push
js
mov
dec
fsub
cmp
add
jle
inc
mov
int3
mov
inc
and
bound
sbb
inc
cli
addr16
mov
bound
push
gs
roll
pop
lret
mov
sub
imul
int3
pop
mov
mov
fidivl
in
and
ret
mov
mov
imul
js
add
into
push
add
pushw
inc
das
inc
dec
mov
add
shlb
shrl
out
push
lock
sbb
je
orb
jns
fnstenv
cmp
jb
push
je
pushl
jbe
dec
push
js
stos
outsb
test
out
or
cltd
push
or
push
lds
pop
pop
filds
jl
jp
lahf
mov
pop
or
fldt
jne
loop
gs
idivl
push
fwait
push
xchg
add
out
outsl
jle
dec
mov
fcoml
pop
insb
fdivrs
adc
cltd
sub
cmp
mulb
cmp
data16
cmc
cmp
dec
mov
add
xchg
pop
jle
dec
mov
push
push
mov
and
and
in
inc
mov
movsb
jb
inc
out
pusha
std
or
test
mov
push
outsb
xlat
xchg
ret
xchg
test
inc
rol
enter
pop
and
and
pop
jb
add
mov
sbb
int3
adc
mov
repnz
daa
cmpsb
cmp
fs
push
dec
adc
imul
mov
cmpl
adc
rorl
cmp
xchg
and
add
fldcw
jae
cs
mov
mov
cmp
xor
std
mov
xchg
es
mov
in
add
insb
addr16
in
adc
out
insb
mov
mov
jmp
cmp
sub
sahf
sbb
enter
and
add
lods
sub
fistps
mov
fiadds
sub
push
aaa
cmc
sub
adc
inc
add
in
lret
rol
movsl
add
insb
cli
iret
mov
les
mov
gs
jbe
testl
mov
fcomip
clc
aas
mov
fdiv
jno
outsl
rclb
hlt
mov
jmp
in
and
out
shrl
adc
cmp
dec
or
das
int
push
push
inc
jnp
jg
leave
sbb
ret
test
cmp
inc
test
ret
and
pop
push
adc
movsb
mov
test
pop
dec
jno
mov
lock
pop
pop
repnz
sub
mov
dec
cmpsl
pop
xor
lcall
dec
outsl
sub
or
xrelease
jecxz
pusha
subb
cmp
cltd
ja
test
xor
inc
rolb
cmpsb
sbb
cmp
stc
sbb
arpl
int3
lea
ja
popf
lea
pop
sub
pop
shll
cmpsb
aad
sbb
sub
addr16
jns
push
push
mov
fiadds
mov
jmp
cmpsb
fcomps
stos
test
pusha
and
in
fstpl
push
xor
sub
sub
daa
jne
cmc
nop
aas
mov
jb
call
das
inc
icebp
or
xchg
xchg
inc
sbb
insl
sbb
test
dec
mov
dec
inc
cltd
stos
leave
or
inc
in
mov
data16
lods
adc
inc
or
mov
mov
add
jo
cmpxchg
xchg
repz
jo
jae
xchg
test
inc
mov
scas
in
dec
or
out
inc
subl
xchg
add
jbe
sbb
dec
push
mov
xor
repz
lret
movsb
add
icebp
std
dec
push
add
cs
pop
pop
xchg
cmp
cld
pop
pop
and
stc
movsl
test
xchg
subl
or
jae
insl
sub
lcall
mov
push
in
out
jecxz
loop
aam
push
mov
jns
dec
xchg
mov
mov
mov
xchg
and
push
fldl
mov
push
inc
or
mov
mov
dec
aas
mov
lea
mov
adc
cmp
dec
vpsrad
xchg
call
fdivr
xor
nop
js
pop
dec
jbe
cld
dec
arpl
outsl
dec
or
repz
cs
mov
mov
loope
out
pop
mov
cmpsl
hlt
mov
fstpt
add
loop
jne
jbe
js
xchg
mov
dec
mov
dec
cltd
jmp
jmp
inc
shlb
jnp
int3
dec
leave
xchg
mov
popf
inc
pop
push
fs
xor
push
daa
sbb
cmp
xor
addl
nop
loope
push
sub
jo
mov
test
lret
hlt
xchg
mov
das
test
sarl
jb
jae
test
sahf
xchg
inc
sub
lahf
out
push
mov
cmpsl
cmpsb
sub
sub
sbbl
aas
pop
lods
sub
inc
mov
daa
push
imul
and
or
nop
cltd
stos
outsb
dec
or
and
ljmp
mov
lock
lods
jns
int3
scas
dec
push
mov
pop
jmp
aad
std
mov
push
xchg
sbb
pop
sahf
inc
push
pop
scas
popa
stos
jb
sub
cld
mov
loop
sub
push
xchg
pop
ljmp
in
cltd
icebp
lahf
ljmp
call
cmp
sahf
sbb
mov
fs
fs
mov
push
fs
sbb
out
mov
sbb
sub
sahf
pushf
sbb
test
dec
pop
mov
loope
jb
movsb
push
xchg
push
jne
test
sbb
jge
adc
dec
xor
inc
xchg
das
pop
ficoml
fcomip
dec
jg
cmp
les
xchg
inc
adc
movsl
and
inc
movsb
mov
orb
test
int3
add
mov
pushf
mov
addr16
push
jle
lret
in
lea
mov
sbb
mov
scas
inc
psrld
mov
fsubrl
jge
rcrb
in
and
pop
xchg
pop
dec
bound
shlb
pushf
imul
push
xor
leave
cmp
scas
cmp
test
pop
push
xchg
push
mov
clc
dec
add
enter
xchg
fdivrl
cld
lods
mov
inc
xor
mov
jmp
dec
das
cld
xchg
insb
mov
lds
cmp
jp
pop
cmc
pop
jle
or
xchg
jg
ja
test
aas
mov
js
adc
into
pop
cmp
mov
mov
insl
xchg
imul
imul
add
lock
stos
xor
mov
sahf
mov
loopne,pt
lret
adc
sbb
cmc
adc
add
int3
dec
or
lahf
cmp
dec
ror
sbb
push
sub
dec
out
cs
pop
arpl
stos
fistl
pusha
adcb
and
int3
jns
pop
scas
das
jns
xchg
mov
adc
mov
adcb
and
insl
cmpsb
add
mov
sub
jmp
and
imul
repnz
fistpl
mov
push
std
sbb
mov
jge
mov
fidivs
jae
lds
sub
pop
jno
aas
inc
push
std
mov
aas
outsb
sub
sub
shr
sti
cld
lahf
dec
pop
sub
jle
inc
or
cmp
push
mov
mov
xchg
add
and
loop
jmp
inc
pop
decl
fdivr
jp
pop
lods
loopne
sub
cmpsb
inc
imul
pop
es
jno
inc
mov
repz
mov
les
pop
les
and
xchg
data16
sub
adc
mov
cmp
movsb
cmp
sbb
cli
shl
aas
push
push
sti
sub
aam
mov
aam
mov
shl
stos
push
imul
je
fcomp
imul
jnp
loopne
and
adc
pop
test
rcl
loopne
int
push
repz
addr16
imul
cli
add
lods
xchg
popf
xchg
mov
mov
mov
sbb
push
add
in
lret
and
sub
jp
in
sbb
dec
sbb
and
ss
xor
pop
mov
sti
js
loop
jmp
shll
fbld
cs
mov
enter
cmp
mov
scas
mov
mov
xchg
sbbl
rol
adc
icebp
lret
mov
fs
dec
sub
fcompl
inc
adc
and
mov
push
mov
ja
jge
shlb
xchg
imul
dec
scas
adc
lcall
sub
inc
je
fstpl
mov
jne
mov
xor
push
inc
subb
pop
xchg
jmp
dec
cmp
adc
jbe
push
bound
add
jmp
xchg
jns
hlt
int3
lahf
pop
lods
cmpsl
and
scas
test
adc
xchg
inc
xchg
cmp
pop
out
xchg
lea
push
mov
mov
clc
leave
lret
fsubrl
mov
popf
dec
or
fcmovnb
mov
xor
inc
mov
loope
mov
adc
cmpsb
dec
push
xor
and
add
cmpsl
lahf
jle
lret
pop
pop
fwait
or
into
jecxz
mov
pop
add
cmc
sbb
jae
inc
mov
enter
imul
push
test
mov
sbb
mov
mov
rorb
cwtl
lods
repz
orl
xchg
or
std
ss
inc
xchg
data16
ljmp
sub
cs
mov
cmp
lods
pop
dec
mov
incb
inc
in
lock
xchg
xor
adcl
jmp
lock
sahf
cli
push
adc
mov
push
cs
cmpsb
and
pop
stos
scas
aaa
addb
jne
pcmpgtw
xchg
or
pop
fidivl
adc
loope
mov
mov
lahf
or
int
loop
sub
xor
les
mov
in
dec
jns
inc
sbbl
add
mov
jl
loop
adc
cld
pop
out
pusha
cmpsl
xor
iret
xor
sahf
out
pop
pop
push
ja
negl
out
fisubl
xor
push
or
insb
fistpll
xor
imul
repnz
lock
in
sub
or
mov
cmp
pop
cli
sti
mov
push
inc
lods
sbb
or
push
pop
mov
or
aas
mov
aam
xor
in
sbb
mov
cltd
pop
pop
inc
sub
fildl
jg
add
lcall
loopne
push
loop
or
out
add
xchg
arpl
xor
mov
add
push
and
inc
arpl
loope
sub
ljmp
iret
cmp
sbb
rcr
test
addl
jge
push
fwait
xor
iret
add
mov
add
pop
outsb
or
pop
lcall
call
mov
lods
ss
imul
adc
stos
int3
xchg
lods
aam
sub
jle
mov
push
cld
dec
leave
jmp
inc
jbe
push
in
es
mov
dec
stos
and
ds
xchg
and
cmpsl
jmp
sbb
out
test
out
mov
out
fwait
jb
mov
icebp
mov
repz
out
xchg
cli
or
mov
add
adc
lods
imul
popf
mov
mov
js
pushf
outsl
mov
movsb
jnp
cmp
mov
adc
fwait
sub
lds
adc
inc
test
stos
add
cltd
sbb
inc
idivb
and
stc
adc
imul
enter
xor
xchg
cmp
gs
xchg
sahf
add
cmp
sbb
seto
lahf
cmp
mov
or
sub
dec
notb
mov
repnz
rcrb
ja
cltd
xor
movsb
mov
inc
lcall
subb
jge
dec
mov
imul
jmp
cltd
or
aaa
dec
push
sbb
test
andl
add
test
adc
xlat
cmc
dec
aam
stc
jmp
pop
sti
xchg
cmpsl
mov
adc
sarl
jp
pushf
cmp
jmp
out
aas
movsl
test
fisttps
and
jns
cld
test
cltd
sbb
xor
push
iret
aas
dec
lea
cmp
sahf
into
cltd
lahf
lahf
push
out
aam
adc
push
ret
rolb
adc
ljmp
mov
cmp
dec
cltd
inc
inc
stos
sbbb
fbld
aad
mov
jns
mov
cmp
dec
pop
cmp
xchg
inc
pop
shrb
imul
cli
jns
mov
xchg
mov
shlb
push
jae
fs
and
push
js
fwait
sub
cltd
cmpsl
popf
inc
pop
mov
daa
pop
push
out
dec
sahf
cli
stos
adc
xchg
in
lds
push
mov
sbb
dec
pop
mov
gs
jecxz
imul
icebp
mov
mov
lcall
pop
inc
ljmp
popf
mov
jp
xlat
push
addr16
add
insb
adc
int3
outsb
inc
in
jg
add
adc
js
jp
lret
dec
insl
pop
dec
jae
shl
in
xchg
dec
xchg
adc
jnp
call
xchg
dec
lds
push
adc
daa
jne
mov
and
xor
lret
cmpsl
in
mov
popa
pop
gs
and
mov
mov
push
xor
mov
push
repz
sub
jge
fcoml
sub
insb
cli
insl
pop
xchg
jge
mov
adc
movsb
loope
mov
or
sbb
repnz
subb
subl
push
lret
outsl
sbb
inc
das
and
out
push
jp
adc
jo
pop
mov
mov
popa
movsb
mov
or
ja
and
sub
jno
mov
arpl
scas
aas
repz
fcmove
sbb
and
sub
jne
sbb
push
shl
cmp
scas
inc
in
sub
ret
mov
push
cmp
xlat
cmp
cmp
mov
shrl
call
dec
or
cmp
inc
lods
and
and
cmpsb
jne
cs
push
bswap
lods
sub
sub
pop
rcrl
pop
or
ds
in
aam
in
dec
and
xchg
jo
aas
dec
dec
pop
cmpb
push
mov
in
gs
pop
popl
and
stc
aas
pop
jne
out
jae
insb
cltd
fwait
jae
lea
notb
add
cmpsb
aam
jns
xlat
mov
int3
ret
jl
movsb
pop
sbb
fnsave
or
mov
mov
ljmp
sub
mov
in
outsb
sub
cltd
cltd
mov
outsb
lahf
add
pop
nop
test
dec
or
mov
adc
push
pop
dec
cs
fsts
sarb
das
add
out
aaa
or
cwtl
sbbb
movb
pop
push
jmp
push
dec
lcall
ljmp
cltd
rorb
or
out
xchg
ds
ficompl
cli
add
add
aaa
lea
sbb
xchg
outsb
scas
push
mov
or
adc
cs
lds
xchg
sub
aaa
jmp
push
dec
mov
in
dec
movsb
aaa
insb
xor
pop
xor
or
mov
js
adc
cmp
dec
dec
fs
sbb
sub
int
pusha
cmp
mov
in
lcall
push
xchg
push
sahf
mov
cltd
cmpsl
outsb
pop
sarl
std
push
inc
mov
xchg
pop
push
ffree
frstor
out
bound
in
js
fisubs
test
jne
aas
test
ret
ror
jg
cmp
xchg
lcall
sarl
xchg
ss
jecxz
sub
mov
inc
jmp
adc
sbb
add
cmp
cmp
daa
ret
loope
push
arpl
fimuls
push
add
ret
xchg
or
or
test
js
jmp
xchg
scas
or
aaa
pushf
movlps
push
cmp
xchg
insb
adc
dec
repz
int
or
mov
xchg
testb
cld
shrl
das
fildll
mov
inc
sbb
in
or
and
cmp
adc
scas
dec
inc
das
rcr
mov
sub
push
lcall
iret
int
sub
adc
jmp
mov
jp
cltd
pop
mov
pop
popf
cmp
imul
mov
ja
pop
jmp
insl
cmpsb
jecxz
mov
ret
rorb
faddl
sti
xchg
push
daa
pop
lds
sar
mov
loop
shr
cmp
out
lcall
jp
pop
scas
mov
push
sub
dec
pop
push
pop
push
mov
std
adc
dec
stos
push
xchg
movsl
gs
sahf
xor
xchg
adc
pop
fmuls
out
inc
js
vpunpcklbw
push
in
ret
dec
scas
arpl
ret
dec
jle
lret
outsb
ret
gs
aam
ret
mov
sub
scas
ss
aam
xchg
lret
mov
pop
loope
mov
cmpl
ret
xchg
pop
gs
dec
mov
cmpsl
sbb
sbb
lea
cmc
inc
xchg
int
loop
loope
xchg
lcall
idivl
or
or
sbb
scas
rorb
in
and
mov
js
pop
jno
scas
insb
insl
push
push
arpl
fdivs
sub
jne
cmpsl
xorl
notl
xor
les
dec
fldt
popa
stos
test
pop
sahf
mov
jp
push
jmp
aaa
out
pop
and
pushf
xor
cmpsl
mov
scas
fmull
sub
push
adc
loope
xchg
cwtl
sub
out
mov
iret
jmp
mov
jns
bound
cld
mov
sahf
pushf
pop
out
adc
scas
rcr
lcall
inc
loopne
xchg
in
sbb
mov
iret
mov
jmp
and
xor
xchg
out
sub
fwait
popa
jbe
cmp
shlb
pop
lock
jns
std
das
sahf
jg
push
mov
push
mov
outsb
pushl
add
ljmp
addr16
pop
in
fwait
test
mov
adc
cmp
out
sbb
xchg
out
in
mov
cs
jg
adc
mov
push
ja
mov
andl
loopne
lcall
xchg
sub
jns
in
push
mov
sbb
cs
pop
out
inc
test
mov
inc
mov
jbe
das
mov
cwtl
xor
pop
and
loop
cmpsl
inc
scas
xchg
jg
std
xor
outsl
and
and
xchg
xor
or
push
inc
jns
mov
loop
popf
movsl
test
cmpl
sti
loop
icebp
cmp
in
xchg
mov
sub
and
or
sbb
jno
add
xchg
xchg
loop
psubsb
mov
inc
sbbl
cmpsl
push
out
in
inc
cld
repnz
inc
movsb
fisubrs
rdpmc
mov
xchg
out
lcall
enter
mov
jb
orb
out
mov
jne
repz
mov
jne
mov
outsl
hlt
and
enter
imul
outsb
sbb
dec
ret
stc
or
push
xor
adc
movsl
mov
rcl
loop
mov
movsb
add
push
setbe
fnstcw
dec
xor
stc
jle
add
xor
pop
ret
inc
adc
movb
les
scas
xor
stc
mov
mov
jp
sub
ljmp
mov
sarb
pop
in
add
cmp
in
hlt
shlb
movsb
loopne
mov
shr
in
mov
repnz
lcall
dec
or
pushf
dec
bound
mov
scas
lahf
shlb
xchg
mov
dec
lods
pop
gs
ds
aam
das
pop
gs
dec
arpl
sbb
mov
push
stc
mov
push
cs
and
scas
and
jecxz
enter
or
dec
xchg
sbb
and
imul
push
mov
sbb
xchg
adc
mov
les
cmp
sbb
cmpsb
cltd
jnp
cmpsl
inc
js
push
ret
in
aam
mov
arpl
jmp
daa
sarl
in
hlt
mov
sbb
xchg
fs
jns
and
jno
mov
negl
pusha
mov
loopne
ror
out
fdivs
inc
fmul
hlt
arpl
jo
mov
mov
push
pop
outsl
sub
dec
xchg
push
jg
push
dec
jbe
in
dec
or
cmp
mov
negb
out
sbb
add
jo
mov
mov
div
inc
push
out
fnsave
mov
lcall
pop
add
inc
ret
or
iret
push
test
sahf
mov
mov
out
test
push
imul
xor
sub
sahf
adc
fcomps
call
clc
fldt
rcr
fbld
in
int
movsb
in
lahf
mov
mov
xor
iret
push
ret
sub
inc
mov
int3
xor
outsb
in
out
adc
jo
inc
out
addr16
out
aad
repz
mov
fldt
movsl
mov
jno
or
or
stos
cmp
mov
imul
cmpsb
inc
out
pop
daa
mov
pushf
mov
sub
addr16
fisubrs
out
mov
mov
into
loop
lcall
pop
inc
jno
jo
cmp
push
mov
adc
push
and
sbb
js
test
jle
jg
cmp
int3
push
mov
adc
adc
fsincos
mov
lods
pop
jbe
mull
sub
mov
pop
or
push
jge
in
sti
push
cmpsb
inc
ret
insb
out
mov
xchg
mov
test
ret
mov
push
adc
in
sti
fsubs
adc
cmp
jno
xchg
mov
xor
or
cs
cs
fucom
test
fistpl
insl
push
in
imul
xor
int
loopne
stos
mov
je
std
repnz
cltd
pop
std
xchg
aaa
bound
in
xchg
lods
mov
ja
es
pop
fucomi
xchg
sub
mov
and
adcb
testl
xchg
pop
xor
or
inc
jmp
inc
pop
mov
dec
xorl
push
out
rcll
mov
test
into
xor
cmpsb
mov
shlb
dec
mov
int
aaa
jge
xchg
in
mov
xorl
dec
testb
xchg
xor
dec
int3
sub
addl
cli
mov
je
mov
fdivr
fucomp
rorb
repnz
mov
insl
push
jge
rcll
add
jns
and
andb
in
jge
js
and
sahf
repz
sub
insl
inc
fwait
sahf
in
or
arpl
or
movsl
inc
mov
cltd
xchg
add
cmp
inc
add
dec
xchg
adc
push
lods
js
rcr
data16
ffreep
jecxz
cmpsl
test
dec
cmp
xchg
mov
int
popa
divb
dec
mov
outsl
test
xchg
cltd
jp
push
test
cmpsl
push
ds
pop
mov
adc
fcomps
shll
pop
adcl
mul
xchg
daa
jbe
sub
mov
or
das
dec
lock
pop
or
push
hlt
or
cmp
mov
push
dec
fmull
fistpll
movsl
adc
add
outsl
icebp
or
ret
jmp
xchg
xor
push
addr16
jb
or
push
and
and
xchg
push
xchg
push
cmp
push
xchg
adc
add
lahf
xor
jne
leave
dec
sbb
inc
out
add
fcmovu
gs
sbb
lret
outsb
inc
and
out
aas
lret
cwtl
pop
push
loop
fsincos
cmpsb
scas
mov
add
mov
cmpsb
add
jg
loopne
jmp
xor
xor
mov
outsb
stos
pop
jb
or
xchg
jp
jge
popf
mov
sub
jns
add
push
scas
add
add
cmpsb
leave
in
push
lahf
dec
mov
sub
push
xor
xorb
adc
inc
aam
push
and
cli
shl
jo
gs
es
hlt
pop
jecxz
sbb
loopne
lcall
imul
lea
loop
push
mov
jo
push
xchg
shll
mov
jmp
sti
pop
add
stc
mov
mov
pop
sahf
adc
lock
outsb
mov
xor
mov
or
cmc
dec
dec
xor
push
jmp
test
js
mov
out
fstp
push
cmp
int3
lea
mov
cmp
adc
sti
rcrb
fwait
mov
xor
mov
stos
enter
jo
mov
aaa
das
add
mov
sbb
fmull
dec
pop
pop
mull
inc
mov
outsl
test
sti
roll
add
xor
scas
ss
mov
into
pop
sub
mov
dec
out
scas
cltd
les
sbb
mov
push
pop
cld
stos
xor
mov
stc
cmp
ds
les
orb
sub
ret
jns
stos
cwtl
test
jp
daa
push
call
pmaddwd
popa
inc
and
and
xor
sbb
test
and
dec
sbb
fidivl
or
push
sbb
leave
sub
iret
pusha
ja
int3
cli
xor
cmpsb
icebp
aad
and
imul
ja
fcmovu
mov
or
inc
dec
sub
adc
inc
xchg
adc
daa
mov
fldcw
lret
das
pusha
scas
mov
mov
mov
insb
inc
nop
lret
ret
ds
ss
jge
sub
insl
sub
movsl
xchg
inc
add
mov
iret
push
loope
not
mov
and
mov
and
enter
mov
mov
scas
jmp
pop
pop
and
xchg
mov
push
xor
push
push
xchg
lcall
push
dec
dec
dec
inc
roll
shll
cmp
xor
rcll
or
jp
mov
fdivrp
xchg
sbb
jecxz
stos
repz
mov
enter
and
push
repnz
inc
lds
cmp
sti
lods
mov
shl
mov
sub
das
or
in
inc
das
popf
sub
test
add
mov
jne
push
xlat
ds
es
out
arpl
cmpsl
sahf
sub
cmp
div
cmp
sub
sti
into
cs
push
int3
jmp
mov
jle
jle
cltd
pop
dec
jmp
addl
imul
push
push
adc
inc
popf
bound
iret
xor
imul
test
cmp
xchg
mov
dec
jmp
sti
es
call
add
outsl
ret
jno
cmp
ret
cmpsb
adc
daa
lcall
ja
addl
xchg
jo
xor
je
adc
xlat
cmp
icebp
and
fstps
pop
xchg
mov
or
loope
jo
pop
call
ret
cmpsb
and
dec
fdivr
lock
mov
fmul
jge
je
std
inc
mul
ljmp
out
insl
xchg
test
insl
loop
sub
push
xor
fs
jp
movsb
dec
popf
scas
loop
aas
mov
pop
and
and
fdivrl
shrb
xchg
fidivrl
ret
mov
leave
jle
icebp
out
xchg
stc
outsl
shrl
xor
xor
std
and
mov
adc
xchg
in
add
dec
out
sub
pop
aaa
and
scas
test
push
add
pop
xchg
mov
sbb
cmpsb
pop
fldt
or
inc
shll
push
jp
mov
ja
stos
mov
shrl
les
jnp
mov
or
cwtl
roll
xchg
cli
fnstcw
test
imul
adcb
daa
add
ficomps
cli
mov
lahf
xor
sub
push
mov
sti
mov
push
insl
aaa
xchg
int3
adc
sbb
inc
xchg
pop
mov
notb
movl
mov
out
dec
add
mov
inc
add
lahf
lcall
sub
addb
shl
cs
add
xchg
ret
int3
mov
fsubr
adc
ljmp
daa
xchg
push
lea
in
and
sbb
xchg
mov
mov
js
lea
xor
js
xor
pslld
pop
vrsqrtss
pusha
add
add
rcll
jg
pop
fnstcw
dec
xor
mov
bswap
fcoms
stos
pusha
and
and
xor
pop
cmpb
enter
mov
shlb
push
roll
fsubrs
xor
and
std
cmp
std
out
mov
lock
cmpsl
push
int3
lods
ret
into
cmp
xchg
cmpsl
ja
rorb
sbb
das
out
add
outsb
ss
dec
pop
mov
jbe
cmp
sahf
shrl
xchg
mov
inc
ret
in
add
lret
shlb
xchg
icebp
and
lcall
inc
xchg
cmc
aaa
xchg
xchg
jae
aad
cmp
and
aam
xlat
lret
sbb
js
pop
lea
daa
jl
arpl
jbe
push
inc
aam
inc
mov
or
rcll
push
imul
aad
push
xor
in
lahf
mov
dec
pusha
in
test
mov
jmp
out
pop
cs
or
into
arpl
je
aas
lock
adc
enter
sbb
xor
sbb
mov
xor
jl,pt
jne
out
push
orb
cli
out
push
mov
add
xchg
sahf
pop
xchg
jnp
int3
jnp
or
add
pop
cmp
sub
jg
jnp
icebp
mov
dec
mov
std
pop
add
inc
jno
or
loope
jl
insl
les
es
lods
mov
bnd
sub
cmp
xor
mov
push
mov
cmc
loope
arpl
jae
imul
or
lcall
lock
add
daa
shl
jle
add
mov
adc
xchg
add
mov
jp
fs
sbb
test
insl
inc
sub
mov
rcrb
cwtl
jne
jne
fnstcw
xor
pop
sub
pop
dec
es
push
sub
daa
scas
int3
jge
or
enter
xor
sahf
xchg
imul
jno
mov
and
cmp
cmp
jno
test
dec
xor
popa
cltd
and
push
fcompl
clc
pushf
mov
data16
cltd
dec
inc
push
push
lods
pushf
cmp
lods
icebp
nop
mov
imul
push
aad
imul
mov
xchg
push
orb
xchg
jo
pop
test
addb
ret
pop
das
stos
add
cltd
push
sbb
pop
fsubp
fwait
pop
push
scas
pop
or
mov
cmp
imul
shrb
jmp
out
aas
push
mov
test
adc
cmp
add
and
lock
jbe
xor
aaa
sarl
out
scas
mov
cmpsb
xchg
add
sub
cmp
inc
int
and
aaa
sti
adc
insl
mov
or
push
jl
popa
adcl
sbb
icebp
ljmp
outsl
jb
test
hlt
mov
mov
mov
push
shr
xchg
mov
inc
and
xlat
scas
clc
icebp
pop
cltd
cmpsb
nop
adc
push
mov
stc
sub
fidivrs
roll
or
pop
add
and
fcomip
mov
xlat
push
add
lahf
mov
inc
ror
lods
jecxz
sbb
lock
pop
jg
mov
mov
xor
cli
mov
mov
rolb
cwtl
pop
and
push
loopne
dec
cwtl
iret
rcrb
sub
cwtl
jae
push
in
icebp
inc
movsb
js
js
inc
xlat
addr16
dec
dec
lret
dec
mov
xchg
push
movsl
push
popf
mov
sbb
cmp
push
dec
jl
pop
fwait
lcall
int
inc
mov
daa
lods
adcl
adc
jl
mov
call
aam
jnp
mov
xor
mov
pop
dec
push
jg
push
adc
pop
notb
cmc
mov
lret
call
sub
jns
inc
fwait
insb
cltd
push
inc
jo
pushf
xchg
fdivrl
outsb
ljmp
xor
jmp
imul
push
cmp
sbb
shlb
je
xchg
push
std
add
adc
pop
sub
xchg
jge
mov
std
arpl
mov
subb
adc
xor
mov
sbb
jp
mov
adc
mov
sbb
add
fsts
out
popf
mov
jle
ja
repz
jge
int3
out
mov
inc
test
pop
dec
jb
sbb
pop
icebp
test
fadd
add
fwait
jmp
pop
ror
pop
imulb
xchg
pop
pop
inc
in
xor
add
mov
pop
out
pop
pop
sti
loop
add
jnp
xchg
jge
nop
pop
lods
popa
int3
in
lock
jnp
inc
xor
cmpsb
dec
xlat
aad
test
dec
adc
lods
xchg
movntq
imul
ret
xchg
fbld
ds
enter
ja
mov
cmc
lods
push
pop
sub
and
or
mov
xor
inc
fsubl
adc
jnp
in
add
popf
or
jno
push
jne
or
and
aad
or
fdivrl
xchg
inc
sbb
test
sahf
mov
out
stos
fcmovnbe
dec
push
nop
imul
jno
movl
or
and
pop
sbb
outsl
push
mov
cmpsl
movsl
mov
in
imul
dec
ret
aam
fstl
hlt
test
dec
repz
and
or
pop
dec
ja
in
add
ret
rep
hlt
adc
mov
loopne
imul
cmp
addl
mov
mov
mov
push
psubd
xor
aas
es
inc
int3
sub
in
test
mov
rclb
adc
out
lret
xor
daa
and
pop
fsubr
roll
jmp
and
xor
into
xchg
adc
pop
xlat
dec
pop
add
popf
shl
inc
mov
ja
push
out
sbb
xchg
fwait
add
push
or
add
pop
rcl
inc
cwtl
inc
or
sbb
js
push
xchg
cmc
movsl
inc
out
mov
out
mov
ds
mov
mov
addb
pop
ja
rcr
and
sbb
sti
shrb
mov
inc
cmpsl
lock
inc
into
into
addl
call
dec
dec
dec
aam
scas
push
in
jo
loope
dec
push
or
jae
dec
dec
jae
or
cmpsl
mov
mov
push
insl
sub
adc
push
ss
pop
mov
sub
xor
jle
orl
and
mov
jmp
mov
jmp
add
in
mov
push
lret
sti
mov
mov
xchg
jl
mov
mov
fnsave
cmp
pop
aam
and
in
out
or
add
jmp
ficomps
or
into
xchg
mov
xchg
xchg
inc
or
mov
xchg
fdivrs
cli
sub
pop
fwait
add
icebp
repnz
jg
or
mov
xor
fiadds
mov
push
inc
mov
jne
adc
pop
xchg
inc
mov
pop
in
push
inc
inc
and
pop
scas
jb
cmp
outsl
pop
movsl
pop
mov
push
lods
fnstsw
pop
scas
pop
xlat
outsl
call
lret
jg
stc
out
jnp
sahf
fcmovbe
adc
imul
fnsave
xor
clts
xchg
das
push
push
into
jp
dec
xchg
aaa
jmp
xchg
mov
shlb
inc
shlb
mov
mov
push
arpl
js
sbb
outsl
daa
mov
mov
xlat
scas
lods
and
jbe
mov
popf
sbb
dec
sbb
in
lea
pop
jne
rcrb
insb
out
les
leave
dec
sbb
fisubs
sarl
rolb
imul
fs
adc
adc
pop
outsl
cmpsl
loop
jecxz
jb
fcomip
mov
sub
xchg
adc
std
sub
mov
mov
fsubrl
inc
mov
test
mov
imul
test
sub
outsb
mov
loopne
ja
sbb
rcrl
mov
jbe
fs
dec
add
imul
insl
lahf
xchg
stos
inc
dec
or
iret
and
inc
push
adc
mov
addr16
in
rcll
mov
xor
loopne
jmp
mov
daa
mov
in
mov
rolb
fadds
sbb
mov
push
pop
in
sbb
int
mov
push
or
pop
inc
mov
inc
or
cmp
in
cmpsl
lcall
loopne
lret
cmpsl
leave
ja
rcl
minps
in
sbb
gs
cmp
lock
mov
cltd
xchg
xor
aas
js
push
rorl
xchg
mov
ja
cmpsb
push
push
cmp
sbb
rolb
or
jne
push
jns
ja
ja
dec
rol
inc
test
push
cwtl
add
push
sbb
sarb
or
jle
aam
pop
arpl
xchg
mov
ja
or
cld
test
xor
or
leave
pop
daa
ror
loopne
into
xchg
mov
jl
sub
sub
jo
rorb
pushl
ficomps
fisubs
xor
jns
jbe
dec
or
mov
mov
inc
les
cs
or
in
arpl
andb
adc
add
imul
mov
ja
add
add
int3
mov
sbb
divb
mov
in
jle
mov
pop
movsl
push
sbb
xchg
rclb
mov
mov
sbb
add
in
addl
je
loope
jbe
movsl
es
into
fs
inc
add
or
mov
push
mov
es
rcrl
or
stos
pop
inc
stos
mov
mov
lcall
subb
mov
cli
les
xchg
out
push
mov
xchg
inc
loop
inc
xchg
insb
sbb
push
sbb
pop
mov
cltd
or
sbb
das
lahf
and
push
mov
fadds
lret
add
push
cmc
repnz
jp
or
popf
push
xor
dec
mov
movsl
xchg
popf
das
dec
jo
inc
jmp
or
cmpsl
dec
xchg
jns
data16
jp
ret
dec
sub
sbb
cmp
outsl
sbb
sti
repz
and
add
je
push
aam
xlat
cmp
xchg
mov
jecxz
pop
xchg
lahf
xor
in
andb
test
stos
and
fildll
daa
xchg
inc
or
test
imul
push
pop
repz
cmpsl
or
ret
loop
test
cmp
and
mov
push
repz
push
jmp
pop
call
gs
in
data16
out
push
hlt
adc
vshufps
in
mov
lock
sbb
orl
inc
jecxz
and
mov
pop
push
sbb
or
lahf
inc
dec
outsb
mov
adc
lcall
testb
jp
outsl
mov
leave
sarl
stos
roll
icebp
iret
xor
add
jl
enter
mov
push
ret
outsb
push
addr16
xorps
test
cmc
xor
imul
mov
pop
testl
mov
cmpb
pop
cmpsl
out
mov
insb
bound
mov
test
out
int3
out
enter
mov
aas
sbb
pop
jae
paddsw
adc
repnz
movsl
cmpsl
pop
inc
outsb
lods
rcrb
push
insb
jo
push
leave
arpl
cmpsl
rcrl
lock
dec
push
insb
test
jl
cmpsb
jmp
xlat
outsl
int
aad
je
cltd
add
xor
inc
fsubrp
mov
sarb
pusha
mov
test
leave
leave
sahf
addr16
or
es
sub
into
xchg
daa
rclb
cmpsl
fwait
lret
xchg
xchg
push
mov
je
loopne
shlb
push
xor
inc
lea
movsl
xchg
jbe
outsl
sbb
enter
mov
sbb
push
push
add
paddsw
mov
rorb
cltd
dec
mov
repnz
scas
bswap
sub
movsb
mov
mov
mov
mov
add
inc
fwait
arpl
mov
push
xchg
dec
push
fs
inc
hlt
mov
or
out
jns
mov
inc
mov
imul
fwait
fwait
xchg
push
pop
int3
mov
test
mov
arpl
or
xchg
in
dec
or
mov
hlt
mov
xor
imul
inc
cmp
pop
or
xchg
flds
xchg
aaa
faddl
pop
push
pop
push
jp
fmuls
aas
jbe
fwait
out
dec
outsl
aaa
mov
shrb
nop
push
sub
jl
inc
push
lret
sarl
out
jo
in
iret
xchg
out
cmpsb
out
inc
lret
add
ljmp
rorl
test
jg
lods
inc
cmpsb
push
and
mov
jne
mov
xchg
sbb
sbb
mov
incl
in
sub
sbb
and
xlat
aam
ss
cmc
mov
es
jl
mov
or
xchg
sti
push
mov
mov
mov
cwtl
lret
daa
pushf
inc
hlt
mov
cmp
bound
push
enter
cld
divl
loop
mov
call
scas
lahf
hlt
dec
xchg
xor
xchg
jbe
cmp
jae
insb
xor
pop
enter
push
insl
ds
aaa
sbb
movsl
in
sub
in
mov
paddq
roll
push
and
push
jbe
bound
and
push
nop
aaa
adc
call
jle
pop
mov
cwtl
notl
pop
mov
jecxz
inc
mov
rcrl
cmp
call
adc
out
sti
sbb
sti
movsl
dec
test
dec
popa
daa
std
xchg
jecxz
inc
sub
and
xchg
outsl
clc
into
pop
lahf
stos
xchg
lods
movsl
mov
imul
jae
xchg
aaa
and
jnp
sbb
dec
fldt
pop
scas
outsl
imul
xchg
xor
and
in
stc
mulb
enter
inc
xlat
mov
je
xlat
mov
lcall
mov
inc
adc
hlt
xchg
adc
jle
jb
rorb
lahf
and
mov
pushl
test
scas
hlt
pushf
scas
adc
dec
and
add
in
cmp
lods
xchg
push
xor
push
add
jg
cmp
sub
pop
cmp
pop
test
cs
jmp
std
insl
push
sbb
popf
mov
dec
pushf
std
sub
daa
or
sti
fcmovnu
cmc
push
xchg
inc
je
lea
xchg
lods
mov
movsl
pop
aam
daa
shrl
and
out
nop
in
sub
cmp
xor
shl
pop
sti
and
add
inc
adc
cltd
fstpt
or
mov
sub
rorb
imul
imull
fs
icebp
xchg
dec
enter
mov
mov
out
push
test
std
loopne
adc
or
xor
shl
lret
sub
push
test
inc
dec
int3
leave
rorb
sbb
repz
jle
out
andb
les
xlat
mov
cs
les
out
xchg
jmp
mov
sub
stos
arpl
or
push
jge
push
sbb
push
clc
adc
push
scas
call
mov
mov
pop
sbb
jns
in
aam
and
push
ds
fucomip
add
or
popf
mov
mov
xchg
scas
xor
cmp
sbb
lcall
add
rcrl
aas
mov
ffree
stos
add
mov
jnp
cs
out
ds
sbb
cwtl
movsl
mov
xchg
cmpsb
push
inc
jecxz
or
lcall
stos
sbb
mov
subb
adc
dec
mov
mov
or
xor
and
mov
leave
push
xor
cld
and
fsubs
adc
lcall
inc
push
outsb
pushf
cmp
pop
sub
and
stos
mov
or
push
sahf
dec
cmp
int
les
int
pop
insb
ret
mov
pop
inc
iret
mov
fwait
xor
out
add
test
jmp
mov
and
in
or
call
adc
test
mov
movl
test
sahf
push
fimull
inc
ds
sbb
inc
fnstsw
aas
mov
jp
test
data16
ror
push
mov
clc
dec
xchg
psllw
sbb
mov
push
pop
out
in
sti
sub
mov
aas
sbb
out
dec
dec
aas
lret
cmpsl
xchg
in
movb
mov
xor
inc
scas
push
mov
mulb
out
hlt
lock
loope
or
imul
add
jmp
in
ret
daa
lahf
cmpsb
dec
je
mov
sub
scas
mov
and
ret
dec
push
mov
add
push
ret
fisttps
movsl
push
pushf
pop
scas
pushf
add
mov
push
mov
and
loope
aaa
and
mov
adc
sbb
cmp
cmp
xchg
pusha
aad
cmp
xor
pusha
fs
pop
or
or
unpckhps
mov
js
or
pushf
jp
mov
pop
xor
js
fwait
dec
pushf
push
mov
mov
icebp
inc
pop
mov
cmp
inc
sub
jo
stc
shll
and
stos
dec
icebp
repnz
push
sbbl
out
dec
cld
xor
push
dec
push
scas
sub
mov
xchg
xor
ds
arpl
ret
jnp
mov
inc
adc
pop
cmp
pop
inc
mov
out
leave
gs
nop
xchg
push
in
fstpt
inc
mov
mov
jmp
pushf
push
push
or
imul
sbb
fsub
aas
int
mov
sti
cmp
je
cs
xorl
add
push
sub
fnsave
les
mov
int3
cmc
adc
imul
rorl
pop
popf
int3
nop
pushf
push
and
push
jo
jl
push
and
cmp
jns
push
stos
xchg
jmp
adc
sub
cmp
dec
cmp
push
pop
xor
mov
jg
orl
sti
xchg
sub
into
sub
cmovp
pop
cmp
cmpsl
inc
mov
lret
and
notb
jg
ret
pop
adc
mov
aam
imul
inc
push
lock
das
xchg
jecxz
lret
cmp
inc
mov
data16
sbb
lcall
push
jo
sub
mov
sbb
daa
in
xor
notb
xchg
mov
xchg
pop
xchg
jmp
jecxz
xchg
cmp
dec
daa
ret
idivb
push
divl
sbb
mov
rcr
mov
inc
rorl
mov
xchg
cmp
mov
bnd
sub
mov
stos
mov
dec
ret
into
mov
jb
jns
loopne
std
jo
add
push
shufps
mov
aaa
test
xlat
jge
ljmp
mov
icebp
aas
int3
popa
into
mov
fcmovb
ds
in
cwtl
rcl
shlb
cltd
out
xor
jge
pop
mov
xor
mov
hlt
data16
shll
mov
dec
lods
sbb
jne
movb
jns
pop
push
je
fldenv
lock
or
or
jmp
shlb
add
jb
mov
inc
lods
es
push
jne
addr16
pusha
lods
jno
cmpsb
sub
pop
mov
add
add
stos
sub
cmp
dec
xchg
mov
push
xchg
leave
popf
ds
or
movsb
pop
dec
incb
sahf
cwtl
cld
push
xchg
jle
sub
fmuls
cmc
xor
mov
cmp
pop
pushf
push
imul
js
pusha
lock
mov
cwtl
or
dec
mov
rcrb
in
jns
div
int
mov
ret
out
leave
iret
ss
mov
xor
test
push
mov
cwtl
jmp
or
xor
or
mov
aad
out
lret
les
and
jp
jcxz
lds
icebp
jns
xchg
xchg
outsl
mov
mov
cmp
shrb
cmp
sub
lods
add
jle
pusha
jb
hlt
loop
shlb
or
sub
cmc
jmp
or
test
jo
xlat
loopne
xorl
jmp
inc
adc
sbb
ficompl
cmpsl
leave
lock
xor
cltd
xchg
push
adc
out
dec
dec
pop
stc
and
inc
nop
jns
push
jg
add
sti
jg
mov
jne
fcomp
stos
hlt
mov
push
out
add
xchg
pop
cmp
adc
je
inc
xor
aas
insl
mov
adc
stos
enter
mov
cmp
mov
push
mov
pop
push
test
arpl
xchg
and
mov
lods
loope
jg
iret
mov
test
loopne
fwait
dec
push
inc
jnp
lods
xchg
pushf
pusha
lret
jae
push
sbb
dec
iret
cmpsb
jl
lcall
xor
in
xchg
negl
jp
orl
pop
fdivl
jns
sbb
test
lea
xor
push
pop
sarb
in
pop
jbe
aad
out
sub
xor
aam
test
ret
into
ret
mov
flds
aaa
lock
sub
inc
jle,pn
in
subb
rolb
dec
pop
xor
sub
cmpsl
dec
into
mov
es
test
clc
dec
jle
das
pop
lods
pop
jbe
mov
mov
xchg
mov
pop
dec
jno
lahf
xor
xchg
popf
xchg
add
ja
and
lods
push
out
cs
ja
xchg
jae
pop
adc
cmpsl
mov
jmp
adc
es
sarb
rorl
ud1
scas
cwtl
pop
cwtl
sbb
and
inc
mov
push
or
aaa
sbb
sub
fwait
or
add
nop
dec
or
stos
cld
push
and
lret
jbe
cld
mov
rorb
xchg
sub
loope
push
fnstcw
cmp
movq
stos
dec
in
scas
xor
and
ljmp
inc
cwtl
lret
jae
lcall
scas
and
jl
into
add
mov
aaa
rol
and
ja
std
dec
aam
xchg
hlt
in
jle
jmp
sub
sub
pop
mov
mov
jecxz
je
scas
mov
mov
adc
lcall
inc
sbb
lods
sbb
push
mov
sub
test
push
popa
stos
jnp
clc
push
xchg
lcall
stc
mov
ficomps
into
push
adc
xor
xchg
and
push
mov
loope,pt
into
jns
stc
ss
pop
stos
bnd
lods
std
xor
and
das
adc
mov
xor
push
out
outsb
push
mov
push
adc
pop
xor
xor
push
push
lret
aad
loope
daa
push
push
pop
out
adc
xchg
mov
cmp
adc
jl
rolb
ljmp
dec
jns
clc
icebp
out
xor
add
fcmovu
push
mov
popf
mov
dec
dec
dec
rcrl
pop
lret
pushf
movsb
ficomps
outsl
pop
dec
ljmp
xchg
ret
dec
sbb
mov
mov
xchg
jno
imul
inc
push
pop
inc
sahf
test
push
bound
pop
cmp
lock
ljmp
mov
insb
jnp
mov
inc
outsl
stos
xchg
flds
jae
shll
mov
jbe
dec
push
lds
inc
or
or
inc
ja
fstl
and
add
mov
daa
rclb
fstpt
pop
shl
pop
inc
jmp
pop
cmp
stos
push
sub
shrd
sub
xor
and
cli
addr16
aaa
or
pop
stos
or
sbbl
jbe
cmp
mov
movsb
clc
pop
jae
imul
scas
cmp
clc
leave
test
outsl
pop
aam
mov
sub
mov
in
int
scas
inc
and
add
xchg
stos
push
cmpsl
and
dec
sbb
fadds
pop
dec
scas
adc
adc
ss
mov
fstl
aaa
loop
daa
or
add
adc
push
dec
ret
push
data16
lock
adcb
xlat
pop
cmpsl
mov
add
and
fstl
ds
ja
or
in
sub
or
xchg
insb
mov
cmpsb
mov
cmp
and
mov
adc
adc
lods
sbb
aas
sub
aas
or
ja
adc
pop
test
xor
lea
fstl
push
add
repz
or
aas
mov
loope
mov
sahf
in
scas
mov
sti
pop
xchg
push
sahf
es
bound
cmp
lcall
add
lret
addb
mov
jp
push
mov
stos
test
out
xor
test
mov
xor
in
nop
or
std
push
cmp
jecxz
pop
pop
or
out
or
xor
adc
lahf
lock
aam
push
or
jbe
mov
movsl
push
out
jmp
in
or
xchg
ss
cmp
jmp
xor
test
mov
mov
and
lock
mov
les
xorl
test
mov
das
lret
out
bound
push
pop
mov
fcmove
mov
or
cmp
sub
gs
rcrl
call
es
mov
xlat
xor
and
idivb
sti
xor
mov
into
dec
loop
outsb
nop
fnstsw
sub
jno
dec
jg
repnz
int
xor
jno
pop
inc
outsb
mov
test
mov
loop
notb
and
cmpsb
push
xlat
xchg
mov
or
mov
into
shll
mov
pop
push
push
jae
imul
mov
test
add
adc
mov
sbb
mov
mov
inc
out
lea
xor
xchg
shrb
ljmp
add
cmpsb
mov
dec
enter
fwait
es
shll
xchg
adc
in
cmp
jns
repz
push
hlt
paddsb
gs
stc
push
mov
inc
mov
mov
mov
sub
dec
xor
add
std
fmuls
push
dec
push
mov
inc
mov
mov
sti
fildll
sub
shll
pop
push
addl
push
mov
ljmp
stos
out
pusha
fsubrl
jl
orb
ja
pop
push
and
cmp
out
pop
inc
add
pop
mov
push
pop
jp
vpunpckhqdq
and
shrl
lret
xchg
mov
mov
xor
mov
sub
insb
push
cltd
addr16
jecxz
sar
imul
pop
mov
jno
cwtl
or
mov
sbb
idivb
xor
mov
out
fcompl
push
nop
lods
adcl
or
sbb
aas
push
test
push
or
mov
mov
cs
push
dec
ljmp
data16
push
call
push
jnp
stos
stos
push
or
outsl
cmp
cmp
lea
push
fs
mov
and
pop
cs
xor
xor
push
cld
scas
xor
mov
pop
push
adc
popa
outsl
lea
jg
popa
repz
and
push
add
fwait
mov
gs
hlt
jmp
std
adc
pop
cmp
test
sbb
fistpl
jo
clc
cltd
push
test
or
sub
push
scas
ret
push
xor
orb
xchg
and
call
lods
push
rorl
xor
shlb
mov
std
roll
mov
ret
cwtl
adc
loopne
jecxz
inc
push
xorb
sbb
mov
out
insb
xchg
arpl
inc
sbb
mov
pop
add
mov
das
out
repz
outsb
clc
mov
mov
pop
jnp
dec
lahf
shlb
push
cs
mov
dec
pop
mov
hlt
jo
mov
mov
ljmp
into
mov
push
fs
das
fisttpl
ja
test
inc
dec
mov
sub
rcrl
ror
sub
inc
shlb
fistps
sbb
das
dec
adc
add
ret
pop
jae
loopne
icebp
push
out
movsb
arpl
lods
cli
pop
push
sub
pop
inc
leave
add
inc
pushf
pop
push
cmpsl
int
insb
inc
imul
pop
push
dec
test
lods
aam
xor
xchg
sar
push
sbb
fdivr
mov
neg
pushf
ss
mov
xlat
xor
fbld
cmp
mov
out
dec
hlt
into
pop
lods
adc
outsl
ja
jbe
mov
stos
add
outsl
push
das
jne
fcmovnu
ljmp
clc
icebp
cmp
or
frstor
repnz
add
das
les
jbe
add
shlb
fnstenv
in
or
push
mov
aad
sub
dec
inc
jne
lahf
mov
lret
sbb
stos
mov
push
adc
push
enter
xchg
push
mov
shlb
rcrl
pop
hlt
int
pop
shlb
jns
xchg
mov
cld
xchg
or
pop
clc
nop
xchg
cmc
mov
push
mov
push
jmp
ja
sub
xchg
daa
and
std
pop
inc
xchg
adc
into
jne
jne
and
mov
mov
int
fsin
call
cmp
fsub
clc
and
mov
ret
and
fs
jge
mov
add
hlt
arpl
xchg
dec
jle
sbb
add
mov
inc
rcrb
cmp
and
mov
lret
movsb
cli
mov
push
daa
sub
fisttpll
sbb
dec
nop
jno
xor
adc
sbb
mov
pop
gs
or
add
push
pop
inc
sub
arpl
das
pusha
and
dec
inc
mov
sub
push
add
lret
iret
mov
sub
fidivl
and
pop
push
pop
mov
sbb
cmc
into
or
enter
mov
nop
movsl
push
ljmp
aas
std
outsl
and
loopne
push
je
incb
mov
and
cmp
das
inc
mov
mov
fdivrs
or
daa
stos
mov
jno
lods
xchg
mov
dec
daa
mov
push
inc
inc
fbstp
jns
mov
movsl
add
cwtl
test
out
mov
in
aaa
jo
int3
jge
jb
pop
add
sbb
pop
or
jp
and
insl
mov
fildl
inc
test
fldenv
cmove
test
sbb
xchg
push
fwait
xchg
jno
fbstp
add
sbb
push
jl
push
fnsave
dec
push
mov
out
push
fucomi
test
jae
cmc
pop
popf
mov
in
sahf
cmp
inc
rcrl
cmp
stos
test
call
mov
in
and
test
sahf
push
lds
xchg
dec
je
fistl
push
aas
inc
sbbl
cmp
sub
daa
sub
sbb
dec
fcmove
xor
and
mov
inc
repz
stos
ja
test
pop
mov
gs
add
stc
popa
xchg
sbb
arpl
cwtl
xor
inc
cmp
pop
insb
pop
loope
mov
jmp
aaa
add
ret
add
adc
mov
sbb
or
add
adc
rorl
add
dec
mov
mov
dec
cmp
inc
rcll
out
into
stos
push
imul
jno
sbb
and
sahf
popa
stos
fnstsw
pop
cmp
cmc
dec
sarl
inc
pop
rcll
shlb
loope
mov
rorl
adc
shlb
xor
pop
out
bswap
lahf
xchg
jnp
mov
fdivl
push
sbb
pushf
pop
jae
es
mov
stos
lahf
in
mov
ljmp
lret
icebp
shll
mov
xor
sub
mov
lahf
dec
int3
mov
dec
xchg
je
cld
adc
adc
pusha
jl
jnp
insb
outsb
outsb
incb
pop
mov
scas
sub
mov
mov
mov
add
pusha
inc
mov
pop
mov
cwtl
mull
dec
out
xorl
ret
inc
jge
and
movsbl
jno
add
and
xor
sbbl
xchg
negb
mov
decb
push
idivb
jb
test
outsl
xor
loopne
jnp
stos
mov
cmp
push
imul
sahf
fsubl
ljmp
xchg
jno
cmc
mov
mov
iret
lret
loopne
ja
mov
push
mov
test
sub
push
and
jmp
cli
jmp
mov
mov
cmp
mov
ret
jno
jae
mov
imul
add
insb
cmpsb
fdivl
or
pusha
aas
fsubrl
dec
ja
enter
mov
dec
and
mov
mov
adcb
adc
in
or
sub
ss
jp
mov
mov
and
add
lods
dec
aad
cmp
mov
mov
ljmp
insl
or
outsl
or
inc
and
xchg
mov
imul
stos
andb
and
movsl
leave
mov
popa
jnp
repz
or
jb
and
mov
insb
xor
rcrb
pop
jae
gs
fwait
mov
dec
push
jnp
lock
dec
cmpsl
mov
pop
push
int
inc
pop
inc
inc
dec
imul
push
lret
js
xorl
andl
or
sti
ss
outsb
mov
cs
mov
and
in
mov
pop
xor
js
scas
es
add
adc
mov
mov
insl
or
inc
add
sub
dec
mov
les
loop
push
mov
cmp
leave
pop
movb
pop
mov
inc
lods
mov
push
and
nop
rolb
inc
enter
jne
test
out
out
les
fistps
repz
les
cmp
enter
pop
and
loopne
xchg
mov
insl
outsl
mov
and
aaa
xor
cmp
dec
dec
enter
adc
adc
cmp
std
cmp
mov
mov
lret
pop
xor
gs
pop
add
mov
push
cli
fdiv
jb
push
mov
test
sbb
ss
movsb
movsb
xchg
dec
iret
outsb
out
mov
out
mov
jge
push
add
aaa
xor
add
test
adc
fstps
ret
xchg
hlt
les
inc
adc
add
xlat
inc
mov
sub
or
push
dec
test
fwait
cmpsb
push
jns
loope
movsl
and
push
test
sub
jo
pop
xor
add
inc
bound
das
fwait
or
xchg
push
enter
and
adc
jmp
nop
or
test
and
aad
jecxz
xchg
sbb
sbb
add
out
fs
pop
ret
cmc
es
loopne
imul
mov
je
fldln2
push
lahf
jno
repz
std
loope
fs
push
stos
sbb
int3
pop
mov
outsb
push
in
push
pop
xor
ljmp
fs
popa
hlt
or
dec
hlt
imul
mov
mov
fildll
insl
adc
mov
mov
pop
fsts
out
cmc
adc
sub
fdivl
out
xor
icebp
add
and
cmp
inc
cltd
xchg
mov
jae
cmc
xor
mov
inc
xorl
mov
fs
fidivs
imul
mov
dec
loop
and
adcl
popa
fstpt
aas
aad
rorl
xchg
sub
lret
mov
dec
xchg
mov
and
or
pop
mov
mov
jae
xor
push
sub
lcall
xor
xor
js
jns
daa
mov
loope
adc
outsl
imul
adc
ret
jle
leave
dec
call
ds
mov
lods
push
jo
add
fwait
pop
je
ret
sahf
xor
fldcw
pop
mov
testb
enter
mov
xchg
add
jmp
jne
int
pusha
lcall
adc
fs
sub
test
lea
mov
aaa
cmp
js
movl
imul
push
divb
push
add
jge
rol
sahf
add
stos
bound
or
das
dec
out
ret
inc
jne
push
rsqrtps
fistl
pop
cmp
inc
movsl
xor
test
jmp
repnz
add
and
imul
xor
adc
add
jmp
out
shl
jo
pop
dec
inc
jns
add
stc
jge
or
ja
paddb
in
pop
xchg
das
sti
xor
data16
xchg
adc
or
pop
fstl
ja
xor
push
push
mov
sarb
add
mov
mov
movlps
popa
fistpll
inc
xchg
fcoml
inc
lahf
mov
popf
wbinvd
jnp
dec
jecxz
mov
jle
jo
popf
jecxz
ds
lods
mov
cli
push
lods
fbstp
js
fiaddl
pop
pushf
sahf
push
push
mov
mov
sub
jl
inc
fcoms
mov
adc
xchg
jno
lods
imul
gs
idivb
lcall
dec
neg
imul
xchg
out
mov
push
ret
sub
and
popf
dec
jmp
cld
xor
sbb
loope
jl
mov
out
and
sbb
leave
test
push
push
sbb
dec
fildll
xchg
xchg
or
aad
fimuls
rolb
dec
adc
sub
push
outsb
fildll
push
std
in
sub
add
je
inc
pop
sub
scas
in
push
or
dec
mov
fildl
xchg
int3
repnz
mov
xchg
into
lods
fs
mov
shrl
cli
and
std
test
test
xor
inc
hlt
movsl
pop
rorb
adc
loopne
sub
add
mov
loopne
cmp
roll
movq
ds
xchg
out
mov
push
ret
shrb
fdivrl
outsb
ret
sub
incl
pop
int
shlb
fdiv
pop
xchg
ja
mov
sti
shr
imul
ljmp
pop
pop
mov
fnstsw
repnz
mov
sub
mov
mov
in
jnp
mov
cmp
mov
lcall
fsubrs
fistps
fnsave
and
daa
clc
mov
icebp
ficompl
mov
push
mov
and
lcall
rcrb
pop
fisubs
leave
sub
push
xor
xchg
mov
sub
cmpsl
test
shrb
mov
pop
or
mov
mov
sbb
inc
jnp
aaa
repnz
repz
ljmp
cmp
xor
cld
mov
mov
sbb
loope
xchg
ret
daa
pop
stc
scas
xchg
mov
mov
andb
jmp
shlb
bound
test
cwtl
pop
push
pop
dec
mov
cmp
in
mov
inc
jae
mov
pop
clc
imul
call
imul
mov
push
int
fs
popa
ficoml
clc
aad
inc
add
sahf
xchg
neg
dec
mov
fcoml
cltd
pop
lea
pop
sti
cmp
push
mov
sti
sub
daa
push
cmp
and
pop
adc
inc
and
xlat
repnz
or
loope
test
jns
or
cmp
add
mov
lret
jo
hlt
jo
push
lock
inc
pop
cmp
movsb
fwait
aaa
loope
addr16
sbb
mov
add
pop
and
leave
mov
xor
mov
ret
mov
dec
push
mov
and
push
mov
imul
xchg
inc
shrl
ret
fmuls
xchg
lret
jl
xchg
inc
bound
jl
ja
push
aad
lods
jle
and
dec
out
inc
pusha
xor
icebp
xor
aam
inc
jp
fstpt
xchg
shr
xor
lods
mov
jecxz
lret
add
sub
in
int
push
jne
jno
xchg
aad
add
lret
fxtract
mov
loop
sbb
push
enter
push
fwait
cwtl
xchg
fcom
movsb
test
push
dec
cld
sub
mov
xlat
imul
push
stos
popa
jnp
lahf
dec
mov
lea
or
dec
push
inc
adc
ss
xchg
fs
dec
dec
insl
jno
lds
mov
insl
jmp
mov
outsl
push
cmc
repnz
outsl
stos
daa
jmp
fstpl
sbb
out
dec
loope
js
in
push
pop
push
fs
iret
jns
jns
pushf
iret
xlat
je
jo
pop
inc
pop
stos
xor
fsubr
mov
rcrl
gs
mov
add
subl
pop
inc
jno
cld
sub
cld
cwtl
mov
mov
sub
sub
pop
ja
repz
inc
mov
sbb
jbe
dec
adc
shlb
rcll
notl
movsb
es
loop
pop
pop
or
inc
fnsave
hlt
add
out
loopne
add
lds
pop
mov
add
dec
outsl
sti
adc
push
repnz
adc
lret
leave
ljmp
xchg
ss
hlt
movsl
mov
jmp
mov
cli
in
lahf
addr16
jns
adc
sar
ret
push
adc
loope
or
add
cmp
out
nop
mov
jnp
inc
mov
cmpb
xchg
cmp
in
ficomps
push
and
push
jg
jbe
mov
and
jmp
mov
bswap
mov
adc
pushf
xor
rcrb
jb
dec
jecxz
rcl
negb
push
out
xchg
push
stos
dec
outsb
cmpsb
jb
adc
ss
push
fmuls
lret
inc
mov
dec
inc
xor
and
scas
in
ja
dec
push
ljmp
outsl
dec
xchg
pop
jmp
xor
pop
aas
ds
mov
cmp
inc
into
nop
jmp
dec
inc
mov
loope
xlat
inc
dec
sbbb
adc
mov
or
mov
loopne
sub
xor
popf
js
fwait
mov
push
add
cmp
cmc
pop
lahf
aad
in
jbe
add
daa
dec
sbb
or
fcmovne
shrb
jne
jb
dec
mov
nop
addr16
add
js
adc
stos
mov
loop
mov
and
repnz
movsl
add
add
jno
dec
mov
out
leave
filds
jne
lock
or
out
add
fcmovbe
xor
xorl
sbb
push
or
jo
cmp
push
clc
stos
mov
mov
jbe
ror
jae
jnp
and
cmp
inc
ret
adc
dec
jl
push
ret
mov
lcall
sbb
pop
repnz
sbb
icebp
xchg
jne
adc
das
cmpsl
xchg
cmp
push
mov
jnp
out
gs
sub
sub
xchg
imul
jle
xchg
aaa
ds
mov
mov
pop
mov
lds
test
sbb
repnz
arpl
pop
push
cmp
in
outsl
fdivs
test
adc
ja
dec
mov
mov
adcl
shrb
sbb
loop
xlat
sub
pop
jnp
ret
xchg
fnstcw
cli
imul
repz
fs
ljmp
push
lret
mov
adc
sbb
push
xor
pop
dec
lahf
out
in
fsts
test
add
xor
jb
insb
out
or
cs
cmp
pushf
in
icebp
into
jg
std
lret
repz
inc
cmpsl
test
call
arpl
pop
push
fistps
sbb
aad
push
outsl
inc
je
js
dec
stos
cmp
sub
in
jne
mov
mov
sub
xchg
xor
popf
pop
mov
daa
pusha
cmc
fnstcw
dec
jno
inc
ss
pop
adc
xor
mov
cmp
push
adc
push
fucomp
cmpsb
xlat
cld
push
jmp
mov
popa
pop
push
mov
pop
bound
inc
cmc
enter
add
mov
adc
sti
sub
and
rorl
addr16
jl
add
mov
sub
std
mov
or
sbb
adc
fwait
iret
stos
sub
xchg
add
shr
and
mov
dec
add
dec
inc
dec
pop
outsl
adc
mov
dec
jl
into
pop
cmpsl
jge
sahf
enter
fisubl
xorl
sbb
add
in
dec
jmp
cltd
push
push
mov
sub
cmp
das
fwait
pop
out
cmp
mov
sbb
fmuls
lods
popa
stos
ficoml
jbe
pop
hlt
mov
mov
sbbl
jb
sub
add
cmc
jno
mov
xchg
movsb
jg
pop
insl
inc
cltd
xor
scas
mov
jecxz
jno
mov
lret
leave
cmc
inc
inc
ljmp
mov
in
dec
inc
mov
ret
ds
dec
xor
inc
push
lret
mov
iret
xchg
xchg
jbe
pop
or
jl
lcall
add
int
popf
pop
push
call
cltd
jp
shrb
xchg
lcall
les
cmp
mov
enter
mov
fdivl
push
dec
scas
inc
push
sub
scas
in
int3
aaa
add
push
nop
out
adc
orb
adc
jl
jmp
rcl
bound
xchg
das
stos
in
jns
push
xchg
xor
cmpsb
mov
call
mov
inc
ret
ficoms
mov
or
jmp
es
callw
sbb
divb
add
idivl
mov
movb
shlb
movsb
push
mov
aad
ss
mov
jg
push
jge
cltd
xor
inc
cwtl
dec
lcall
pop
or
es
imul
pop
loope
dec
sub
ss
or
push
dec
ja
pop
pop
add
mov
dec
mov
or
cmp
out
push
sti
shlb
dec
call
pop
inc
and
icebp
out
and
add
or
dec
mov
aad
push
mov
xchg
and
xchg
hlt
cmp
scas
dec
jge
rorb
aad
movsb
cli
nop
cwtl
in
mull
das
orb
mov
adc
push
jg
sub
sbb
ds
nop
ja
jb
xchg
lock
inc
in
mov
ljmp
xchg
inc
inc
sub
dec
mov
fsubrp
pop
xor
iret
loope
push
xchg
loopne
imul
movsl
push
sbb
push
jp
enter
loopne
push
mov
std
and
mov
rsm
loopne
movsl
divb
mov
jb
xor
stos
add
xchg
jl
mov
pextrw
repnz
push
and
push
jne
push
icebp
pop
mov
stos
cltd
xor
inc
mov
mov
orl
and
jg
mov
push
pop
in
cs
sub
push
jge
add
sub
jg
call
sbb
fwait
inc
pop
shrb
xor
cmp
xor
popa
fwait
inc
scas
mov
fcmovne
loop
orl
nop
popa
int3
ret
shlb
mov
dec
inc
mov
cmpsl
outsb
ret
test
sti
inc
pop
ret
es
inc
loope
faddl
mov
push
sbb
ljmp
lret
inc
ss
and
sub
stos
cmpsl
into
xchg
add
movsl
fsubr
adc
cli
test
mov
mov
in
test
cmp
subb
out
test
jle
mov
cmp
ss
sbb
pop
frstor
sahf
jno
cltd
mov
ret
inc
outsl
sbb
out
pop
cwtl
stc
scas
sub
dec
fs
fsubl
shll
adc
iret
in
jge
outsl
cli
jno
shlb
adc
adc
sbb
mov
rcr
cmp
mov
push
sub
int
add
fildl
pop
std
nop
jb
data16
stos
lock
andb
add
inc
outsl
andl
inc
pop
dec
push
add
xchg
loop
add
das
lods
sti
or
mov
and
add
dec
jmp
adc
dec
add
or
arpl
cmpsb
fs
mov
push
mov
mov
lret
icebp
fwait
mov
xchg
stc
jmp
in
imul
cmp
outsl
mov
sub
jge
pop
enter
mov
leave
les
lret
std
inc
rcll
scas
pop
pop
out
sbb
fisubs
outsl
lds
and
je
mov
mov
inc
addr16
dec
cmpsb
lea
jl
inc
cli
add
jle
push
add
jge
mov
ja
hlt
stos
lcallw
icebp
repz
hlt
mov
inc
loop
loope
mov
push
scas
dec
jecxz
clc
repz
cmpsl
mov
lock
add
lcall
repz
lods
xor
add
fbstp
aad
andl
rcrl
repnz
sahf
inc
insl
ss
adc
xor
stos
jle
loop
cmovnp
mov
mov
mov
stos
sub
xor
das
adc
add
ja
dec
data16
popf
push
sub
xchg
mov
xchg
sar
mov
clc
gs
inc
pop
imul
mov
sub
pop
icebp
stos
dec
jmp
ja
sbb
mov
imul
inc
adc
test
es
add
in
pop
popf
js
out
and
dec
xchg
cmc
mov
popa
int3
adc
jmp
pop
sbb
push
mov
push
and
and
xor
push
std
in
push
adc
imul
outsb
popa
lds
dec
adc
mov
scas
push
cltd
enter
mov
out
pop
adc
mov
mov
and
ss
mov
mov
jmp
loop
js
movsl
imul
fdivs
mov
rol
xor
mov
out
scas
into
push
jge
mov
xor
jl
out
xchg
test
mov
shlb
rolb
pop
push
and
adc
sti
jge
jo
loope
aad
and
clc
mov
add
jne
mov
cltd
in
pop
add
aam
mov
packuswb
or
insb
add
icebp
xchg
movsl
adc
xchg
adcl
testb
sub
mov
xor
jmp
ss
sub
popf
sar
mov
mov
or
and
mov
jg
push
test
or
mov
dec
ret
addr16
out
shlb
aad
mov
mov
enter
dec
dec
inc
shl
aam
dec
xlat
aam
push
xchg
xor
jne
push
mov
sbb
insb
cmpsl
scas
jno
stc
lock
js
pop
and
cli
xchg
push
sub
pop
pop
push
xor
add
dec
iret
jns
pop
sahf
sbb
dec
mov
test
andl
mov
xor
into
xchg
fistpll
push
jge
push
and
ror
pop
stos
test
fwait
repnz
mov
imul
add
andb
jns
hlt
mov
xlat
sub
ljmp
fists
cli
and
out
mov
xchg
jp
mov
add
scas
cld
mov
inc
in
sub
fwait
pop
jae
nop
xor
sub
jmp
jo
jl
cld
aam
mov
push
push
cmp
dec
pop
stc
xlat
movsb
mov
cmc
add
xorb
or
jns
mov
aam
sub
push
into
out
mov
pop
pop
inc
xchg
jnp
sub
push
dec
cmpsb
rcl
push
in
loope
test
dec
inc
test
xchg
fwait
pop
stc
lcall
sahf
add
xchg
lret
adc
shl
mov
and
icebp
adc
add
or
lahf
inc
ficoms
pmullw
xchg
fs
dec
lock
outsl
push
cmp
in
cltd
xchg
jns
in
enter
cmp
mov
inc
in
or
push
cmp
loop
movsl
mov
cli
sbb
push
call
mov
enter
jle
dec
cli
push
into
jge
jo
sbb
lods
jno
insl
inc
inc
lods
xchg
adc
lea
test
pop
hlt
std
cmp
rorb
mov
cli
shlb
arpl
push
outsl
mov
lret
mov
jns
xor
mov
sbb
cld
dec
xchg
inc
test
daa
xor
sti
cmp
push
jge
scas
dec
es
cli
push
pop
mov
repz
mov
mov
jmp
shrd
jbe
sti
push
jle
test
push
mov
mov
mov
fidivrl
fcomp
mov
mov
loop
or
mov
xchg
repnz
int
rcr
xor
scas
test
sub
jb
js
or
jmp
sahf
push
mov
cwtl
push
lds
lods
xchg
movsb
fidivrl
xor
and
pop
adcb
mov
xor
lcall
aad
imulb
lods
mov
pop
and
pusha
cwtl
popf
push
out
adc
addl
out
repnz
daa
xchg
dec
orl
cli
int
jmp
sti
aas
sbbl
and
sub
inc
nop
xchg
push
adc
mov
push
sahf
ds
mov
mov
mov
add
adc
pop
nop
loope
fwait
push
and
jmp
push
pop
and
or
fnstcw
jns
mov
imul
mov
mov
in
int3
pop
dec
jl
adc
pop
es
push
inc
or
sub
push
das
add
xchg
push
and
aaa
ficoms
adc
les
daa
lret
jg
pop
idivl
jg
cmpsb
pushf
rclb
pop
xchg
in
js
fsubl
ds
jb
test
sbb
sub
je
xchg
pop
xor
js
cmp
pop
pop
cmc
lods
cmp
cmpsb
test
mov
jg
hlt
imul
mov
mov
push
pop
xor
cmp
loop
insl
push
pushf
shrb
push
pushf
xor
notb
xchg
jle
dec
or
sti
sbb
lea
sub
iret
jne
rcrl
imul
sub
mov
add
xchg
add
bound
add
inc
imul
addr16
and
inc
cmpsl
mov
outsb
mov
ljmp
sti
push
jns
cwtl
push
push
test
addl
sub
cmp
sbb
imul
imul
pop
mov
out
leave
cmpsb
or
and
or
mov
call
push
mov
adcl
or
inc
jne
les
ljmp
addr16
std
pop
mov
mov
dec
mov
xchg
and
insb
mov
pop
push
arpl
in
enter
clc
mov
imul
xor
mov
jmp
ja
jb
fdivrl
lcall
jecxz
fcmovnb
dec
dec
jnp
sbb
xor
aam
or
rol
out
push
movsl
scas
or
xor
mov
or
daa
das
adc
xor
jne
ret
jmp
mov
mov
insl
mov
cmp
inc
ds
push
xor
movsl
push
iret
test
data16
jns
xlat
cmp
inc
xchg
fdivrs
push
push
sub
adc
lahf
imul
in
xchg
inc
outsb
adc
fwait
jle
arpl
test
jle
push
icebp
xor
rep
mov
lods
fwait
nop
dec
jle
pop
out
mov
pop
in
lds
lcall
in
add
movsl
negl
sbb
in
sub
dec
lret
cmpsl
xchg
pop
scas
imul
aaa
pop
testl
out
mov
hlt
repnz
jb
mov
insb
dec
jmp
or
ud2
jmp
fmull
addb
adc
jg
jnp
and
dec
adc
jg
cmovs
mov
mov
or
push
pop
jne
sbb
xlat
pop
or
xchg
les
sbb
sahf
dec
cmp
push
jo
pop
call
mov
mov
or
out
fwait
cmp
adc
jno
imul
dec
or
add
add
inc
dec
xor
xchg
jne
dec
jnp
push
daa
sbb
fstpl
ficompl
and
cs
call
and
push
adcl
daa
pushf
push
dec
ret
add
add
push
jecxz
das
vpsubq
jae
adc
mov
imul
imul
ret
pusha
out
push
cld
or
mov
gs
out
int
inc
dec
xor
sbb
negl
cmpl
stc
out
adc
lea
sbb
jns
adc
cmp
jge
shl
das
ja
fldcw
ljmp
fucomip
sar
xchg
icebp
test
test
xor
aad
test
rcrl
push
pop
adcb
and
bound
test
jne
int
scas
mov
clc
or
push
pop
mov
sub
iret
fiaddl
add
adc
sbb
repnz
test
mov
mov
divps
mov
push
dec
leave
lahf
jge
sub
sbb
test
sbb
pop
xor
xchg
xchg
shll
fcmovnu
and
daa
sbb
arpl
or
out
mov
rorb
rcll
cld
repnz
inc
pop
sub
pop
stc
push
cs
pop
mov
or
leave
and
lock
lds
ret
sti
push
push
mov
int
test
scas
lods
jle
pop
mov
call
test
jo
mov
jge
loope
testb
jno
or
mov
fincstp
and
sti
mov
filds
cmp
jecxz
and
jp
adc
jle
or
ss
add
not
out
dec
mov
xchg
repnz
popf
imul
ret
or
add
bound
sbb
inc
inc
sbb
or
jnp
testb
imul
lcall
sub
icebp
xor
push
repnz
fdecstp
je
fisubrl
sub
shlb
inc
adc
cmp
mov
aaa
nop
pop
cld
push
bound
fidivrl
jp
jb
mov
nop
inc
push
mov
addr16
push
jnp
or
lock
push
sub
xlat
and
lahf
mov
adc
paddusw
pusha
push
andb
insl
loopne
adc
pop
addl
jne
ret
out
xchg
sub
cmpb
test
mov
addr16
mov
hlt
lods
out
stos
repnz
cld
sti
rolb
call
outsb
aam
repz
fidivs
shr
pushf
fbstp
std
pushf
shlb
adc
andl
cmp
orb
in
sti
mov
jmp
in
mov
mov
in
sbb
push
cld
insb
xchg
inc
xchg
lahf
lea
arpl
rol
xor
mov
add
xchg
test
out
add
mov
jg
cmp
js
int
lods
mov
rcrb
sahf
icebp
inc
add
sahf
test
popa
cmp
shl
sub
test
nop
xchg
pusha
inc
into
xor
xchg
cltd
push
dec
out
outsb
dec
sub
mov
das
bound
sbb
popa
dec
repz
clc
pop
adc
stos
mov
cmp
pusha
imul
push
cli
add
xchg
pop
sub
xor
xor
sahf
and
pop
xchg
mov
mov
lods
icebp
dec
or
push
je
rcll
aas
lcall
stc
sub
loope
stos
xchg
adc
into
pop
das
xor
sbb
fsubrl
dec
inc
pop
xchg
sbb
decb
mov
lcall
push
mov
je
xchg
adc
sub
mov
xchg
or
jns
fbstp
das
lock
or
jmp
repz
xchg
mov
xor
mov
or
dec
inc
push
leave
ret
inc
jbe
or
xor
sbbb
aad
or
out
push
add
mov
pop
pop
sub
mov
popf
insb
cmp
in
jmp
repz
mov
xor
mov
not
xor
dec
or
sahf
push
negb
lds
push
cmpb
push
sahf
cmp
std
das
jmp
daa
test
jb
mov
fidivrl
imul
add
std
adc
sbb
lods
imul
ret
inc
xchg
mov
int3
xor
das
out
pushf
cmp
mov
dec
adc
icebp
inc
btc
xor
mov
and
std
leave
sub
int3
andb
nop
filds
mov
ja
or
popa
pop
arpl
push
inc
cmp
or
fcmovnu
dec
fcomi
outsl
push
sarl
ds
rorb
adc
cmp
stos
arpl
mov
mov
fs
jbe
sub
neg
pop
rcll
int
or
mov
xchg
int3
jnp
sub
jo
xor
dec
cli
fildll
add
and
and
fnstcw
or
outsl
push
into
or
test
aad
scas
in
or
sub
sbb
pusha
ja
mov
and
mov
lret
xchg
ret
mov
xchg
jne
rorb
push
rol
add
cmp
call
leave
jbe
ret
dec
mov
fdivs
fwait
ljmp
pusha
jo
fnsave
cmp
cli
cld
jmp
or
jno
popa
push
pop
lretw
inc
lgs
or
and
imul
xor
rcll
cwtl
dec
sub
aam
adc
dec
outsl
call
push
add
adc
push
inc
int
dec
test
imul
icebp
mov
mov
pop
and
mov
fbstp
pop
dec
test
inc
add
cmpb
xlat
inc
loop
sarl
inc
into
sbb
ficoms
mov
loopew
sbb
test
insl
lret
push
or
fnsave
imul
push
mov
mov
enter
int3
stc
push
or
xchg
ret
scas
lret
mov
xchg
movsb
and
add
test
cmp
adc
ret
fldcw
xchg
push
in
aad
mov
push
scas
bound
js
in
int
push
bound
scas
cmp
inc
inc
mov
aad
in
arpl
and
repz
xchg
in
inc
sub
fwait
ljmp
inc
iret
push
int3
das
jle
dec
sbb
sub
push
xor
xor
xor
fstpl
cmp
in
jbe
and
rorb
stos
xchg
adc
stc
ror
lea
ljmp
cmp
mov
loopne
and
leave
std
push
mov
or
addl
call
mov
sub
cmp
icebp
movsl
sbb
push
push
push
loope
xchg
xchg
cli
inc
ss
insl
popf
xor
and
jnp
jno
sub
inc
into
pop
xchg
mov
hlt
mov
jne
fistpl
sti
pop
out
lcall
fsubl
outsb
int
inc
mov
push
sub
ljmp
ficoms
xor
inc
outsb
inc
test
xor
pop
mov
cmp
push
testb
rcrb
into
popa
push
test
imul
cli
pop
and
xchg
je
xor
cmp
cli
sub
jl
leave
add
scas
into
sbb
test
je
adc
fdivrs
dec
adc
push
push
fstl
push
je
pop
subl
ffree
pop
jp
fwait
pop
adc
repnz
xchg
mov
outsl
pusha
push
inc
sbb
jne
and
out
sbbb
lods
or
outsl
dec
adc
pop
mov
andps
dec
sub
mov
sub
lret
add
sub
loop
out
cmc
push
dec
and
inc
xchg
sar
mov
mov
mov
xchg
loopne
pop
cmp
repnz
cld
cmp
repnz
push
scas
leave
and
or
inc
ljmp
leave
arpl
sub
mov
xchg
mov
pop
into
mov
arpl
mov
test
pmaxub
adc
sarl
call
mov
or
outsb
sahf
cwtl
nop
adc
in
call
test
and
cld
mov
mov
arpl
sub
mov
xchg
pop
xor
inc
sub
mov
mov
sbb
jmp
sbb
xchg
pop
roll
pop
jns
les
mov
sub
mov
cmp
push
out
repnz
xor
add
fnstsw
cmp
jns
cmpl
addb
mov
int3
daa
repnz
movsb
jbe
jle
arpl
cmp
and
int3
fstl
inc
fcoml
ljmp
test
dec
add
movsl
insl
int3
inc
loope
lds
inc
ds
outsl
rcrl
aam
movsb
std
call
inc
mov
out
or
or
mov
fistl
into
sub
adc
iret
rcrl
lea
nop
popf
sbb
pop
or
lcall
mov
pop
lea
pop
mov
addl
cmp
cmp
adc
mov
test
popa
xchg
repnz
dec
out
cmp
add
rcr
cld
or
pop
jl
rcrb
dec
jbe
mov
mov
popf
mov
insb
mov
xor
pop
push
xchg
jg
pop
lcall
jne
movsl
mov
ds
and
movsb
stos
pop
mov
sub
cmp
sahf
scas
or
stos
push
cmpsl
in
pop
sbb
and
sbb
mov
add
mov
xor
icebp
js
into
adc
mov
mov
push
dec
lcall
push
imul
jg
pop
imul
std
xchg
mov
rorl
shlb
or
add
lret
mov
cli
pop
addr16
sub
jo
paddsb
call
ret
mov
daa
lret
mov
and
sub
inc
dec
inc
lea
sbb
xchg
push
ljmp
lahf
testb
and
outsb
or
ret
orb
loop
jp
xor
ss
jmp
inc
jae
cmp
mov
iret
push
loop
cmp
in
pop
and
mov
call
jne
sub
mov
mov
cmpl
cmpsb
fimuls
sub
cwtl
enter
or
lock
push
test
lahf
mov
das
jmp
sub
xchg
sub
std
ljmp
ret
add
cmp
loopne
dec
xor
xchg
adc
dec
lret
cwtl
icebp
xchg
pop
pop
int3
cmp
jne
ret
nop
setno
push
dec
stos
adc
and
pop
addl
adc
insb
mulb
subl
inc
ljmp
push
lods
add
xchg
jb
mov
fisubrl
sbb
out
lcall
mov
xor
mov
inc
mov
mov
xor
mov
mov
dec
push
mov
add
cmp
daa
inc
jle
idivl
jae
xor
imul
lret
outsb
shr
pop
sub
and
jbe
loopne
jae
mov
dec
adc
adc
iret
mov
sbb
sbb
mov
or
out
or
adc
pop
shr
sbb
fbld
iret
icebp
inc
push
stos
loope
xor
int3
les
out
xor
mov
add
pusha
jge
adc
xchg
imul
dec
sub
mov
loop
sub
pcmpgtw
push
push
cmp
les
push
jmp
pop
push
or
lret
lods
mov
and
lds
jno
cmc
int3
xchg
in
pop
mov
jb
and
shrl
repnz
mov
jb
iret
sub
cmc
arpl
js
out
inc
movsb
fistl
outsb
stos
fnsave
jmp
xor
mov
jmp
test
sub
or
out
orl
out
clc
test
lds
fcomps
and
lret
cmp
lods
mov
cs
mov
or
ss
cmp
ljmp
insl
jae
push
sbb
mov
insb
lods
jecxz
jecxz
jl
lds
or
cmp
pop
aad
cmp
cmp
repz
mov
call
in
dec
pusha
sti
add
dec
sahf
pop
dec
xchg
mov
bound
mov
ss
mov
imul
out
movsb
xchg
cwtl
nop
jo
cmp
xchg
xor
in
es
xor
lea
adc
fisttpll
sub
mov
scas
mov
push
scas
mov
loop
mov
popa
pop
push
jg
je
inc
hlt
jae
mov
mov
or
out
sbb
insl
cli
ljmp
inc
test
and
imul
scas
mov
or
push
dec
dec
mov
inc
jno
push
inc
or
inc
pop
dec
stos
xor
sub
movsl
es
sahf
mov
sbb
xlat
dec
or
lock
dec
adc
xchg
mov
into
out
movsl
mov
fidivs
push
sub
mov
and
sub
and
sbb
pop
pop
shll
inc
fcoml
sub
imul
mov
push
add
dec
add
and
adc
out
mov
pop
shll
mov
mov
mov
lods
mov
fisubs
add
pop
and
or
out
ljmp
cmp
mov
popa
dec
cmpsb
pop
or
addr16
dec
scas
mov
sbb
or
push
xchg
pop
cli
lret
rcrb
jmp
inc
mov
adc
xor
and
test
scas
sar
leave
sub
add
mov
push
mov
out
lret
pop
xchg
cwtl
cmp
out
std
je
jnp
leave
sub
pop
lock
mov
inc
mov
gs
fsts
jmp
ss
or
pop
dec
ret
lret
sbb
lahf
mov
xchg
scas
hlt
jmp
mov
sbb
jb
loopne
daa
or
cmpsb
or
sahf
lea
or
and
dec
pop
lcall
mov
lret
scas
int3
rclb
sub
or
das
xchg
int
or
sub
les
out
popa
repz
push
dec
shl
pop
add
outsb
cmpsb
jno
test
mov
add
mov
cmp
mov
hlt
aaa
popf
xchg
push
jmp
test
inc
cmp
or
outsb
sbb
iret
lret
repz
loop
icebp
sti
std
mov
std
popf
jbe
inc
push
and
cltd
lret
cmp
mov
pop
sub
cmc
cmp
pushf
nop
pause
adcb
outsl
call
cwtl
les
pop
popa
cli
pop
stc
aas
out
daa
mov
xchg
mov
sbb
movsb
add
test
or
mov
cmc
scas
pop
test
enter
mov
cltd
pop
es
lods
cmc
sarl
icebp
mov
adc
sarb
sbb
in
pusha
cmc
imul
cmp
sbb
sub
sub
jecxz
int3
xchg
scas
cmp
jp
stc
adc
push
jp
xchg
out
gs
add
outsl
pop
mov
orb
push
cmp
inc
jne
sub
iret
jmp
psubq
imul
ds
es
xlat
mov
push
xchg
push
lea
sbb
jl
ret
call
stos
cmp
addr16
in
mov
xchg
loope
lret
movsb
mov
push
sub
pusha
test
sbb
sbb
rcr
stos
push
push
xchg
iret
or
add
pop
sub
push
cmpsl
fistpll
sub
testl
mov
inc
sub
jmp
sbb
shrl
out
sub
add
arpl
es
mov
pop
int
xlat
xor
cld
test
inc
mov
enter
push
jb
sbb
sahf
adc
aad
movsb
sub
hlt
shll
mov
andl
jge
ret
jmp
outsb
inc
cltd
insl
mov
fs
adc
sbb
add
and
movsb
outsb
dec
or
popa
or
in
add
push
pop
ja
pop
sysexit
loop
subb
lret
ret
das
fwait
outsb
push
nop
mov
adc
daa
aaa
push
cmp
adc
and
rolb
call
je
lock
xor
jg
inc
jge
popa
push
imul
xchg
in
xor
push
mov
js
cld
outsl
cmp
repnz
pop
xor
xchg
or
shrb
test
jno
shr
pop
pop
mov
std
sub
std
jmp
add
dec
cli
rorl
dec
sbb
mov
add
test
push
mov
dec
cmpsl
adc
and
std
xchg
dec
jecxz
xor
rcl
sti
inc
push
xlat
nop
add
inc
pop
xchg
fisttpl
imul
jg
dec
adc
jo
cmc
sub
adc
outsb
pushf
add
sbb
cmpsb
push
jle
jo
pop
scas
sbb
rep
pop
cli
pop
adcl
cs
mov
pusha
sbb
add
sbb
mov
lret
lcall
ret
cltd
pushf
push
out
mov
pop
int
push
mov
jo
inc
sti
push
movsl
inc
add
xchg
mov
inc
xor
mov
enter
jmp
scas
fisubrs
sbb
loop
push
add
inc
sarl
les
fstpl
inc
inc
bound
adc
jl
imul
repnz
sbb
jno
or
scas
andb
adc
or
andps
in
sbbl
je
sbb
and
adc
mov
jmp
stc
outsb
lcall
cmc
out
adc
aas
arpl
jp
out
sub
fs
int
dec
cmp
or
mov
dec
cli
jbe
jl
or
jge
and
inc
in
shl
mov
add
jne
outsl
push
call
jg
push
or
jne
lods
ljmp
sti
inc
mov
out
fcoml
pop
insb
xchg
popf
daa
push
or
popf
lcall
hlt
push
std
cmp
cmp
lea
jecxz
je
loope
mov
stc
xchg
mov
and
sub
xor
sub
xchg
sub
and
fldl
shr
out
push
dec
or
or
cs
add
push
jae
xor
cld
cmc
nop
xor
daa
jle
push
neg
es
pop
sub
cli
cmp
test
mov
test
inc
cmpsl
xor
fildll
jae
cmp
jg
xor
inc
sub
and
lods
jge
pop
fs
cli
pop
add
js
mov
sti
orb
cmc
cli
mov
lds
cmp
sarl
lret
imulb
xor
ja
pop
out
cmp
icebp
jbe
int
cmp
sbb
shll
stos
mov
outsb
add
mov
jl
push
and
fs
sbb
movlps
notb
sarl
jl
je
and
into
test
xchg
dec
and
dec
bnd
fildll
imul
jmp
movsl
cmp
sti
dec
mov
pop
shll
sbb
out
ljmp
in
sub
call
cmp
xchg
jo
inc
ljmp
lods
and
dec
and
js
cmp
mov
inc
mov
mov
fistpl
sub
popa
jo
subl
aad
add
mov
lock
push
cld
cmp
cli
nop
dec
sub
push
jnp
imul
jae
sbb
xchg
adc
outsb
inc
loop
mov
add
mov
movsb
fnstsw
leave
xor
enter
mov
adc
jge
addr16
and
lock
cmp
sti
adc
add
mov
push
push
jnp
hlt
in
repz
push
cwtl
push
insl
add
adc
xor
mov
cmpsb
jnp
pop
aas
std
outsl
dec
lret
in
imul
shll
mov
call
add
mov
sbb
sbbb
mov
out
and
rclb
gs
je
mov
mov
dec
xorb
test
dec
ret
pop
xchg
or
clc
and
iret
pop
cmp
xchg
dec
sub
jno
jo
lahf
lahf
pop
and
shr
inc
mov
insl
loopne
daa
xchg
xchg
addr16
shrl
push
ret
out
enter
es
enter
ljmp
dec
test
popa
mov
loope
cltd
shll
jbe
loop
add
lods
sbb
or
test
fs
lcall
and
push
add
jae
in
jl
not
pop
jmp
and
cmpsb
call
and
and
cli
inc
in
dec
pop
aas
pop
adcl
xchg
xchg
xchg
push
sbb
xchg
mov
into
stos
movl
cmp
fidivl
add
in
rcl
and
sub
mov
pop
inc
adc
adc
sti
adc
inc
pushl
das
pop
es
pop
cwtl
xor
push
adc
pop
jo
xlat
push
cmpps
pushf
mov
sti
test
inc
fnstcw
jbe
add
mov
loop
rcl
mov
xchg
into
push
xchg
cmc
callw
cmp
mov
jmp
push
sbb
jl
mov
out
mov
or
pusha
aas
push
mov
loope
stc
fwait
lahf
jg
xchg
xchg
lock
sub
push
pop
add
push
add
test
mov
adc
add
call
pop
inc
out
in
test
movb
sbb
mov
pushf
and
inc
mov
sbbb
xchg
xchg
out
cmc
imul
inc
jp
fwait
adc
mov
mov
push
adc
cli
cmp
and
mov
fwait
dec
sbb
xor
std
loopne
push
loope
inc
int3
lcall
mov
sbb
nop
push
leave
dec
out
fnstsw
ljmp
inc
sub
adc
mov
mov
loopne
rorb
stos
cmpsb
mov
ds
bound
outsb
sub
ds
es
jbe
mov
icebp
pop
cmpl
jge
iret
mov
mov
pop
jmp
or
sarb
loopw
mov
inc
xlat
inc
jns
cmp
aad
pop
push
addr16
andl
dec
jns
mov
push
stos
add
repnz
push
aaa
into
bound
inc
ja
inc
ja
popf
fbld
cmpsl
cmc
mov
pop
rcrl
cmpsb
xor
jp
push
int3
arpl
test
push
and
out
scas
fstps
sbb
jno
mov
test
sbbl
es
ucomiss
in
fstpt
dec
push
outsl
push
lock
incb
add
and
mov
or
out
aas
xchg
rcr
pop
rclb
inc
mov
inc
mov
std
jb
imul
repnz
jle
stos
cmpsb
mov
popa
in
push
out
adc
pop
insb
test
test
mov
push
sahf
and
dec
shrb
jb
fmull
fistps
cld
adc
mov
or
cld
push
and
push
mov
sub
ret
push
and
jp
and
mov
push
jle
sbb
inc
les
adc
push
das
pop
outsl
push
in
outsb
int3
das
fxch
call
jnp
add
inc
js
inc
jns
scas
ficomps
inc
outsl
push
sub
push
dec
push
adc
aam
mov
inc
sub
push
jbe
cli
sbb
fisttpll
imul
xchg
xchg
mov
out
or
mov
pusha
addr16
int3
xor
aam
in
or
cmp
or
scas
or
mov
insl
xor
stos
inc
test
inc
mov
outsb
insl
xlat
and
bound
xor
adc
inc
inc
lret
lock
fwait
dec
test
fcoms
jl
and
push
mov
shufps
sbb
sub
jb
cltd
push
mov
adc
pop
inc
sarb
mov
cmp
jo
aas
pop
imul
jl
or
cmp
bound
add
int
incl
imul
insl
pop
jge
xchg
add
insb
pushf
push
push
mov
add
jns
mov
lock
mov
add
fsts
dec
pop
sbb
hlt
and
mul
call
das
cli
mov
sbb
pop
and
add
sub
sbb
dec
lahf
pop
adc
adc
adcl
aas
mov
push
test
aaa
push
xchg
insb
mov
jle
fistpl
aad
or
lcall
stos
repz
orl
mov
push
pop
idivb
repz
pop
aaa
cmp
mov
out
test
xchg
sbb
add
imul
jns
icebp
push
fbstp
or
lock
mov
pop
mov
int3
cmpsl
xor
jae
adc
lods
loop
adc
gs
fwait
loope
add
popa
sub
fs
push
popf
lahf
cmp
xlat
sub
cwtl
imul
adc
enter
xchg
or
jne
lcall
cltd
cmpsl
push
or
and
scas
jo
popf
lock
sbb
add
xorb
xlat
imul
dec
add
mov
pop
mov
pop
add
add
sti
stos
sti
add
pop
add
or
aad
add
mov
dec
loope
dec
add
rol
jl
data16
es
mov
sbb
push
neg
jno
jp
pop
mov
and
stos
xlat
outsl
add
fcom
leave
mov
stos
dec
test
xchg
int3
test
sub
jnp
addr16
xchg
xchg
mov
push
sti
jecxz
push
jbe
cmp
lahf
sbb
dec
cmc
sub
xor
fldenv
lea
mulb
int
add
js
fidivrs
rcr
iret
sbb
jbe
jno
and
adc
xchg
sub
das
jne
mov
imul
mov
out
loop
push
repz
sahf
enter
les
push
imul
stc
outsl
aad
out
scas
sbb
out
shlb
dec
icebp
push
lahf
int
cmp
mov
sub
adc
cmp
in
mov
fs
aad
arpl
testl
add
mov
push
cltd
lods
jle
mov
pop
rcrb
inc
or
inc
hlt
dec
dec
stos
scas
push
or
dec
cmpsb
and
in
xchg
pop
call
inc
cmp
mov
pop
mov
aam
or
pop
push
push
push
lahf
sbb
out
mov
add
dec
enter
dec
xchg
jle
sub
mov
sahf
mov
cmp
lds
mov
enter
sub
push
int
subb
xchg
enter
hlt
jmp
hlt
shll
and
lahf
loop
jb
xchg
sub
sti
mov
push
jg
enter
xor
imul
cltd
or
int
sub
push
inc
and
sub
scas
decl
sbb
andl
out
lds
decl
push
xchg
and
lods
imul
fsubp
icebp
lahf
add
rcrl
push
mov
repz
fistps
mov
xchg
sub
dec
idivl
jae
mov
push
or
mov
lret
pop
cmp
insl
add
in
add
subps
and
xchg
test
lea
xchg
add
lds
loope
stos
mov
faddl
push
mov
in
cli
test
out
int
xor
popa
or
push
fidivrs
push
out
and
enter
or
xchg
push
xor
pop
cld
mov
inc
movsl
sub
outsl
jnp
pop
nop
mov
das
mov
mov
lods
inc
push
scas
lcall
mov
popa
adc
in
into
movq
mov
sub
repz
shrb
aad
mov
fistl
int3
cmp
insl
rcrb
push
mov
inc
sub
fmull
jns
imul
fmull
pop
mov
arpl
add
mov
pop
xchg
shll
inc
shlb
add
jnp
add
cmp
imull
push
sub
aas
cmp
leave
loop
leave
pusha
out
xorl
fildl
xchg
adc
add
pop
hlt
sub
into
aam
xor
sbb
xor
mov
and
loopne
les
pop
test
enter
fildll
xor
int
cmp
ja
clc
stos
dec
stos
jbe
jmp
and
enter
fiadds
cmp
mov
mov
aaa
ret
fimuls
xchg
pop
pop
cmp
mov
shrb
and
daa
push
jo
jmp
jp
es
xor
jl
mov
xchg
jle
aam
or
jo
fldt
aad
out
lahf
pop
fistps
data16
mov
pop
or
xor
cmpl
and
inc
push
lock
adc
int3
lahf
insl
adc
lret
push
cmp
add
jecxz
call
push
outsl
cld
or
dec
sub
data16
stos
jmp
add
push
add
sarl
test
in
cltd
cs
sar
aam
loop
pop
ret
xor
ss
out
rorb
mov
xor
lahf
and
or
filds
add
int3
push
rorl
cwtl
std
cmpsl
insb
loopne
xchg
movsl
cmp
cmp
idivl
inc
ds
mov
push
push
sub
cmc
dec
adc
popf
adc
imul
ret
or
add
xchg
dec
gs
cld
ja
xchg
lahf
clc
lahf
xchg
loopne
mov
jl
ljmp
loopne
mov
sahf
pop
icebp
cmp
loopne
jp
mov
jo
push
or
cmc
push
xor
in
dec
mov
rclb
cs
mov
loop
movsb
je
imul
ret
inc
jno
insl
out
mov
pop
rolb
xor
imul
ja
inc
dec
insl
and
push
sub
sub
pop
cmp
inc
lods
bound
movsl
jnp
cmp
clc
int
jge
ss
fdivp
sbb
pop
icebp
xor
sub
pop
fiaddl
std
pop
cmp
and
jg
lahf
or
addr16
loopne
ja
mov
pushf
inc
jnp
ljmp
and
test
pop
mov
stos
testl
and
add
stos
jb
push
push
adc
pop
mov
xchg
enter
jmp
loop
sub
test
mov
adc
inc
fs
cmp
movsl
xlat
mov
pop
and
out
cwtl
int3
sbb
push
cltd
sub
jge
cmp
pop
dec
in
pop
js
into
xchg
ja
bound
xor
jle
mov
cmc
out
hlt
dec
out
daa
dec
sbb
jae
int3
hlt
cld
xor
out
fisubrl
inc
dec
dec
ss
push
mov
leave
aas
dec
inc
cmp
adc
clc
out
xchg
cld
cmp
mov
cmpsl
pop
jecxz
push
adc
sbb
pop
sub
pop
das
xchg
mov
and
push
popf
jl
in
stos
aad
fdivs
cmc
mov
repnz
jns
mov
xchg
and
dec
out
add
repz
inc
adcb
int3
shll
sbb
cmp
inc
pop
jge
jge
hlt
aas
xchg
stos
push
mov
in
rolb
adc
fstpt
or
in
mov
add
sbb
cmpsb
orl
cwtl
jge
mov
mov
pop
arpl
loop
shlb
mov
aaa
xchg
mov
popa
jb
push
aad
or
mov
jne
je
int
jecxz
ret
sub
lods
mov
test
push
and
ds
std
js
sub
jmp
push
lods
in
pusha
repnz
adc
jl
iret
xor
adc
out
mov
mov
dec
loop
add
faddp
test
jnp
mov
cmp
mov
and
stc
or
inc
add
add
mov
sub
das
lods
xchg
adc
sub
stos
imul
and
inc
ds
cs
inc
pop
fsub
dec
and
jo
mov
lods
push
mov
sbb
push
pop
arpl
or
pop
cmpsl
jo
lods
xorb
push
movsl
cmp
cmp
std
icebp
iret
clc
lds
push
int
mov
out
push
jns
bound
loope
ss
dec
mov
stos
cmpl
test
mov
aas
pop
jnp
mov
pop
lret
xorl
out
dec
sbb
shrb
stos
and
test
rorl
out
push
and
inc
jns
sbb
stc
jmp
jbe
mov
mov
subb
test
sbb
shlb
mov
and
stos
sbb
orl
aam
push
mov
push
jmp
xchg
int
dec
sarl
xchg
mov
inc
add
in
bound
cmpsl
dec
fisttpll
imul
fstl
xchg
push
mov
push
sbb
jae
add
mov
jg
xor
fcompl
mov
mov
test
pusha
scas
cmp
dec
mov
nop
lret
cld
pushf
mov
mov
mov
jb
jl
pop
mov
mov
and
lret
mov
xchg
inc
jo
repz
insl
int3
dec
dec
mov
out
mov
adc
out
imul
cmp
fsts
add
jae
xchg
sub
fstps
jb
adc
fsubr
cltd
pop
jp
inc
lock
dec
inc
je
mov
push
dec
rol
lods
cmp
sbb
xchg
mov
shlb
xor
lret
sbb
out
xor
jns
mov
jge
sub
aad
sub
pop
fldl
lods
cld
dec
mov
js
push
stc
adc
in
dec
ds
push
and
pop
dec
adcw
push
mov
push
fwait
xchg
sbb
lock
xor
inc
jl
insl
aad
cmpsl
lock
dec
sub
and
jp
sub
add
and
fmull
xchg
xor
push
inc
stc
shl
fwait
and
push
iret
loop
jae
scas
dec
push
outsl
out
mov
xchg
test
pop
dec
stos
cmp
orl
mov
push
mov
or
lret
ljmp
and
sub
push
and
cmp
orb
loop
mov
imul
movsb
dec
sarb
test
stos
and
push
or
mov
mov
inc
mov
or
addr16
mov
in
sub
int3
xor
mov
inc
push
sbb
pop
jnp
dec
pop
cmc
xor
adc
lret
lods
xor
sub
subb
std
cmc
xchg
or
fldl
dec
rep
push
mov
rol
ljmp
push
adc
xchg
push
int3
mov
and
in
or
and
scas
ljmp
out
xorb
jg
mov
jle
xor
inc
jne
dec
test
or
cs
int3
or
fiaddl
test
xchg
dec
mov
inc
scas
ds
gs
div
jle
fwait
jb
imul
mov
repz
adc
lods
fldenv
sbb
shll
repz
in
mov
lret
addr16
jecxz
call
add
sbb
mov
inc
adc
inc
int3
jb
je
je
clc
fs
aas
push
mov
xor
xchg
scas
cmp
mov
les
pop
mov
pop
mov
mov
jl
outsb
jns
mov
loope
andl
loope
jp
add
pop
aam
imul
out
gs
into
movsl
mov
mov
ljmp
movsl
xlat
stos
mov
push
adc
stos
loope
jmp
cmpl
dec
mov
sub
mov
cmp
mull
add
sub
push
sahf
or
xor
cltd
test
jg
jg
push
cmp
pop
xlat
iret
and
jbe
pop
inc
in
inc
adc
cmp
push
fs
mov
xor
sbb
xchg
loop
inc
inc
pop
cmpsl
sahf
test
inc
cld
mov
loop
pop
mov
xor
jnp
dec
sbb
mov
and
adc
cmp
pusha
aas
mov
ret
xchg
sub
pop
decl
mov
in
sub
jb
pop
sbb
pop
pusha
adc
divb
les
mov
mov
mov
ss
mov
push
sbb
repnz
adc
mov
loop
inc
cmc
inc
movsb
addr16
orl
mov
add
das
pop
pusha
fwait
cmp
mov
push
mov
adc
and
mov
mov
mov
xchg
mov
clc
xchg
insl
jae
popf
push
lcall
mov
test
add
mov
icebp
pop
cmp
out
inc
pop
xor
sub
sbb
call
jge
sbb
ret
cld
imul
fwait
sbb
lea
std
sbb
sbb
add
add
repnz
in
jge
insl
inc
cld
popa
pop
fs
stos
jnp
lock
dec
jno
xchg
fcomps
call
sub
xor
cwtl
call
clc
adc
mov
jmp
jp
pop
sti
cmp
inc
add
push
ljmp
mov
hlt
pop
je
repz
outsl
ret
push
je
bswap
cmp
mov
psubq
shl
or
std
ret
fidivs
jbe
test
add
mov
aaa
sub
adc
jnp
push
sbb
jnp
test
push
leave
sub
pop
jp
mov
mov
adc
cmp
sbb
imul
and
inc
add
js
push
adcl
sbb
and
divb
iret
push
out
pop
push
dec
mov
lock
jge
cmp
cmp
cs
pop
push
xchg
inc
icebp
lret
aaa
or
loope
xor
mov
mov
scas
xchg
cli
js
push
movb
subb
repnz
add
mov
inc
je
and
push
les
insl
push
xchg
xlat
mov
lds
sbb
xchg
lods
stos
lcall
jge
inc
aas
cmpsl
stos
daa
out
ret
cwtl
stc
push
std
gs
push
imul
and
sahf
sbbl
iret
cmpsb
pusha
pop
add
lcall
push
out
loope
incl
dec
lcall
loope
pop
xor
fcoml
inc
ret
imul
sub
pop
fcomps
cmp
mov
int
or
inc
jo
daa
jg
xor
fsubrp
inc
jl
xor
push
sub
into
hlt
sub
js
sub
cmpsb
and
paddw
lods
scas
push
cmp
mov
push
dec
aad
mov
imul
in
xchg
xchg
push
add
xchg
cmp
ret
xor
push
xor
jnp
mov
call
mov
cwtl
ljmp
push
das
mov
subb
fcomps
int
xor
enter
gs
fcomps
dec
cmp
xchg
and
jno
lock
sbb
into
mov
inc
cmp
aad
in
ljmp
xchg
mov
mov
adc
pop
popa
sub
jecxz
push
add
aaa
or
rcr
cs
mov
push
pop
mov
and
pop
in
and
push
je
cmc
repnz
shrl
jle
mov
movsb
shll
xor
rorl
ret
or
jo
fcomi
mov
mov
mov
jp
movsb
jg
sbb
adc
inc
mov
mov
mov
les
icebp
sub
sbb
xchg
lock
movsb
push
loop
loopne
pop
jbe
notl
push
lretw
mov
shll
sub
sub
add
testl
lock
xor
push
lods
pop
lret
jg
sarw
mov
jns
movsb
xor
push
in
xchg
and
sbb
lahf
jge
mov
arpl
ss
mov
repnz
stc
dec
jns
lahf
xchg
xor
mov
mov
rorb
and
insb
cmp
dec
fwait
add
in
adcb
lods
add
xlat
jno
stos
dec
rcrl
xchg
push
jg
push
xchg
and
cmp
aad
mov
adc
fs
gs
nop
leave
lahf
test
xor
xchg
fcoms
les
or
ss
pop
ds
cmc
cmpsb
and
cmc
loope
outsl
cmp
cmp
mov
pusha
loope
pop
xor
sub
in
xor
push
outsl
sub
and
add
sub
push
in
dec
ja
or
shr
mov
or
or
xorl
pop
sbb
cmovb
and
clc
xchg
sub
dec
nop
and
push
or
test
out
push
jbe
and
mov
imul
dec
int3
stc
mov
and
test
loope
cli
lret
pop
cltd
sbb
popf
out
sub
dec
xor
bound
adc
jae
mov
mov
or
leave
lods
mov
insb
inc
orps
fnstsw
mov
mov
or
pop
rolb
je
pop
cmp
dec
or
add
cmp
jns
sysenter
int3
lods
dec
inc
and
pop
and
addb
mov
int3
mov
repz
mov
cmp
dec
dec
and
rcr
lea
movntq
pop
mov
xchg
add
les
jns
inc
cmp
int
jbe
imulb
lret
les
push
lcall
xor
cmc
push
jnp
int
divb
inc
cbtw
adc
lahf
xlat
adcl
push
rcl
shlb
pop
push
jge
mov
es
inc
stos
mov
ja
mov
and
cmpsb
inc
shll
xchg
adc
mov
dec
rolb
std
test
out
inc
das
dec
cmp
lcall
dec
mov
inc
cli
std
mov
aam
mov
repnz
inc
in
xor
jle
es
xorl
fs
xor
int3
and
les
mov
lods
xchg
cmpsb
test
lods
fsubl
cmp
and
shlb
dec
xchg
repnz
mov
sbb
fwait
mov
scas
into
popf
lcall
push
xor
xor
and
leave
or
scas
xchg
xor
andl
mov
fsub
in
jns
std
add
xchg
stc
mov
push
jno
subb
ret
ja,pt
cmpsb
sahf
jne
or
sub
add
data16
ficompl
pop
jmp
mov
adc
je
inc
lods
lods
leave
cld
xchg
push
inc
add
hlt
sub
jbe
sub
mov
cmpsl
mov
pop
decb
hlt
mov
add
adc
sti
das
lea
pop
nop
and
icebp
inc
loope
sahf
lods
fcompl
scas
or
or
mov
push
cmp
inc
rclb
xchg
pop
leave
inc
push
fdivl
add
sbb
or
pop
mov
test
xor
mov
or
adc
jno
outsl
inc
adc
jl
cwtl
fstpl
dec
rcll
lds
xchg
aas
lds
pusha
jg
mov
in
sbb
inc
dec
lret
mov
xchg
cltd
out
rolb
cmpsb
test
jecxz
arpl
push
stos
fstpl
jbe
inc
push
daa
jl
push
fdivrs
mov
out
mov
pop
add
or
gs
dec
loope
cmp
loopne
lahf
jns
sub
std
hlt
or
xchg
lcall
xchg
filds
inc
dec
negl
pop
cwtl
subps
mov
cltd
push
ljmp
clc
xchg
pop
data16
pushf
stos
inc
inc
fwait
sub
pop
pop
scas
jae
fsts
mov
sub
mov
push
dec
sbb
bound
outsl
inc
cmc
pop
cs
dec
xchg
xor
dec
mov
loop
movsl
sbb
mov
mov
fwait
jno
mov
aam
jne
push
mov
cwtl
mov
sbb
push
iret
test
movsl
orps
xchg
push
cmp
fadd
neg
mov
adc
or
cld
out
xchg
adc
sarl
nop
xchg
loop
pop
movsb
adc
jns
jns
stos
cmp
std
inc
inc
imul
adc
scas
lea
repz
mov
push
xchg
xchg
jo
in
fucomip
jge
imul
cld
outsl
nop
push
adc
imul
jg
iret
das
pop
fcmovb
xchg
les
adc
lret
mov
xchg
test
arpl
lock
pop
fucom
js
insb
sub
mov
rorb
flds
mov
daa
and
jno
add
stc
mov
pop
ss
and
mov
aam
test
lds
outsb
outsl
mov
popa
add
adc
movsl
and
mov
dec
outsb
and
je
enter
shll
lea
mov
xor
je
fs
sub
xor
sbb
pop
rcrb
daa
mov
les
cmpsl
xor
nop
sbb
fcmove
lds
xor
xor
incl
mov
stos
lods
mov
inc
aas
pop
xor
fldt
inc
pop
dec
popf
cltd
jecxz
inc
pop
rcr
popf
adcl
icebp
xor
dec
mov
xchg
addr16
fcomi
lahf
mov
xor
or
shlb
test
xchg
xor
jo
inc
insl
outsb
jnp
xor
xlat
mov
mov
lods
outsb
orb
xchg
adc
out
adc
mov
jo
pop
pushf
push
mov
sbb
fldl
icebp
push
cltd
stos
dec
mov
cmpsl
or
push
sbb
pop
jno
out
push
mov
test
les
addr16
mov
push
movsb
sub
sub
pop
push
or
xchg
mov
xacquire
mov
xor
repnz
or
sbb
cld
add
xchg
inc
push
dec
dec
popa
jno
jmp
pop
notb
or
in
psubd
jns
dec
fidivrs
dec
fwait
mov
jnp
sub
sbb
mov
cmpsb
outsb
movl
stos
mov
jno
sbb
lahf
mov
fcomip
lret
enter
and
call
inc
sbb
push
in
pop
sub
out
stc
push
jne
fs
pop
mov
or
js
or
xor
mov
out
sbb
aam
pusha
test
es
lahf
lea
iret
sbb
aad
popa
js
sahf
orb
sub
xor
mov
fucomip
adc
negl
outsl
shl
push
sub
sub
ljmp
test
shlb
add
sarb
dec
rcll
xchg
stos
adc
pop
adc
andb
das
pop
es
imul
push
jns
call
fmull
in
loopne
jmp
lahf
out
xor
xchg
cmp
sbb
push
into
cmp
jns
or
or
mov
xchg
pop
mov
or
cmovs
jl
ds
xchg
xlat
iret
data16
jns
cli
adc
nop
leave
xchg
pop
mov
cmpsl
jo
scas
push
movsl
adc
inc
fcmove
pushf
cmp
scas
add
mov
test
pop
or
mov
dec
cmc
stos
dec
sub
mov
fnstenv
push
sub
xor
pop
aas
cmp
fiaddl
mov
jo
stc
pop
mov
or
sbb
sub
xchg
ljmp
roll
lea
inc
push
shlb
xor
loope
outsb
mov
xor
sub
sbb
jecxz
xor
enter
movsb
inc
sub
nop
fldenv
lahf
loop
test
test
mov
aam
jle
cmp
or
sub
jmp
es
popf
lahf
inc
pop
adc
mov
push
lea
and
inc
jp,pt
stc
test
xchg
push
adc
sub
jb
sbb
mulps
add
movsb
test
shr
les
imull
pop
fsubrl
mov
sub
pusha
pop
pop
nop
and
ret
stc
scas
scas
arpl
call
fmul
lods
push
dec
lahf
jge
mov
cltd
mov
pop
fidivrs
add
and
pusha
cmp
stos
int
test
imul
test
push
scas
in
cmpsl
int
out
inc
jno
or
sub
call
lret
ret
dec
or
lock
mov
jmp
mov
sbb
testb
and
fistpl
lret
fnsave
inc
push
sbb
sub
fidivrl
mov
jbe
and
xchg
add
ds
pop
mov
sbb
bts
arpl
rcll
or
rorl
mov
into
jb
in
stos
ds
ds
in
sub
dec
inc
lret
xchg
dec
lea
mov
dec
add
sbb
mov
jne
andl
cmp
jg,pt
cmp
enter
push
mov
dec
in
cmpsb
imul
mov
mov
xor
add
xchg
test
pop
mov
xchg
movsb
mov
dec
lret
inc
add
cmp
sbb
out
js
int3
into
push
inc
bound
fwait
xchg
scas
dec
push
xlat
or
add
pop
pop
adc
mov
inc
mov
rol
lahf
mov
fcoml
arpl
mov
inc
insl
ret
adc
pop
fcmovne
sbb
in
and
cli
ret
cs
repz
pusha
push
cmp
sbb
std
dec
xor
mov
fwait
mov
inc
movsb
or
cli
add
les
inc
add
fbld
scas
jae
inc
leave
cwtl
cld
add
andb
sahf
fistpl
xor
or
mov
inc
mov
jecxz
cmp
insl
mov
insl
outsl
jnp
iret
movsb
scas
mov
ds
mov
jecxz
aam
ret
ja
jmp
cmp
push
lock
sub
mov
xchg
sub
ret
mov
lahf
lret
sub
mov
lret
jb
lret
mov
in
xor
pop
in
std
or
lret
push
cmpsb
iret
addl
loope
inc
insb
adc
sub
loop
dec
fcoml
mov
mov
mov
cs
loop
je
xchg
loope
mov
pop
clc
notb
push
sub
adc
xchg
mov
ret
push
mov
lock
mov
in
add
clc
clc
xchg
pop
push
clc
lret
fwait
sti
jmp
jo
mov
jp
mov
mov
push
roll
scas
or
jo
or
jnp
lock
push
in
dec
dec
or
insl
xor
mov
mov
testb
inc
sbb
rclb
inc
dec
lret
jno
in
scas
dec
push
ret
pushf
idiv
insl
lods
dec
sbb
adc
or
jg
loope
repz
cmc
movsb
arpl
pop
out
lcall
sub
cmp
or
cmc
andb
cmp
add
gs
xchg
jb
inc
sti
or
loop
dec
pushf
push
dec
inc
scas
jae
in
shlb
test
out
sub
or
fldcw
lods
aaa
sub
jle
scas
icebp
aad
shlb
mov
iret
adc
dec
lds
cmp
cmp
and
enter
in
inc
int
push
aam
and
test
dec
aaa
mov
xor
in
scas
xchg
mov
dec
lock
fs
shrb
pop
xchg
enter
fs
mov
push
cmp
fwait
mov
xorl
add
xchg
lods
insb
mov
in
roll
xor
jbe
popf
gs
test
mov
out
add
nop
mov
je
mov
insb
ss
rorb
xorl
sbb
push
iret
jg
sbb
fmuls
adc
and
inc
es
fldcw
mov
adc
jl
in
inc
mov
out
dec
mov
cwtl
or
cmpsb
jbe
ljmp
mov
add
mov
test
enter
lods
dec
shlb
lods
adc
jge
mov
sarb
lcall
lahf
sub
mov
imul
add
jecxz
mov
lahf
xor
mov
xchg
lret
scas
rcll
add
jl
test
gs
icebp
push
into
xchg
sub
mov
js
bound
and
lea
xchg
rcrb
xor
sbbl
sbb
sbb
cmc
pop
lahf
testb
xor
xchg
xchg
push
in
repnz
xor
insw
movsl
jne
xchg
test
mov
ljmp
shr
pop
cmp
adc
int3
mov
mov
lods
push
mov
outsb
mov
in
xlat
out
ljmp
nop
sub
or
adc
jmp
xchg
fsubr
jb
pop
and
outsb
int
ds
mull
mov
jns
and
push
les
cmp
pop
and
and
aam
xchg
fnsave
xor
inc
sbb
sahf
ds
stos
xchg
inc
mov
sbb
js
dec
push
stos
mov
xchg
add
ficompl
push
daa
imul
xor
loope
mov
mov
stos
jae
clc
test
jnp
add
fistpl
outsb
sub
jle
shlb
mov
ficompl
push
push
mov
sbb
pop
test
pop
ret
aaa
cmp
bound
jnp
lret
mov
push
mov
mov
andl
lock
call
je
setne
das
add
sub
pop
and
js
inc
push
mov
call
stos
sbb
sub
xchg
insl
scas
lret
sbb
pushf
pop
dec
cmp
mov
adc
and
inc
add
fcmovnbe
andl
dec
dec
inc
cwtl
sbb
xchg
pop
xor
pop
test
inc
pop
in
cmpsl
aad
jno
sub
push
mov
inc
nop
cwtl
sub
dec
fistpl
add
cld
das
out
or
mov
and
divl
testb
pop
pop
sbb
les
dec
test
xor
cwtl
stc
jge
xchg
mov
std
jg
push
mov
xlat
sbb
cwtl
mov
and
aad
sub
mov
cmc
test
fmul
xlat
jne
mov
rsm
lds
sbb
jecxz
test
arpl
and
or
loopne
pop
mov
mov
adc
js
rcll
mov
dec
and
pop
or
popf
insl
insb
push
repnz
fs
push
aad
or
jmp
aad
mov
les
scas
int
add
and
gs
aam
mov
scas
sti
mov
test
jmp
scas
sbb
or
cld
jmp
mov
cmp
adc
fwait
jle
paddq
loopne
jl
inc
cmpsb
jle
pop
pop
mov
ja
int
popf
addr16
xchg
stos
inc
popa
cld
test
mov
lods
shrb
fisttps
mov
dec
sarb
mov
sub
mov
xchg
pop
sbb
or
mov
xchg
or
sub
adc
mov
pop
loope
mov
outsb
jnp
int
jmp
das
mov
mov
cmp
mov
scas
jl
js
cmp
jns
aad
xchg
leave
mov
cltd
xchg
andl
cmp
or
and
add
jmp
flds
out
xchg
pop
lods
inc
add
iret
or
fdivrs
inc
push
enter
mov
or
ficomps
outsb
mov
sti
jmp
sbb
pusha
fdivl
xlat
inc
clc
outsl
xor
idivb
or
shl
mov
fisttpl
fmuls
push
shll
lods
jne
std
jp
out
rolb
fdivrs
aad
lret
sub
stos
dec
scas
xchg
fiadds
pop
or
lods
loopne
outsb
testb
pushf
fmull
out
or
mov
xor
out
xor
iret
push
jl
aad
add
in
and
orl
push
and
sub
jl
add
lods
or
outsb
mov
dec
cmp
loop
daa
lock
mov
jo
into
insb
xchg
pop
push
enter
cmc
aas
and
fadd
mov
add
fs
xchg
es
imul
imul
mov
cmpsl
into
jecxz
mov
jae
dec
mov
mov
mov
inc
mov
cmp
cltd
mov
into
mov
inc
jl
addb
jl
pop
cmp
ds
imul
xchg
adc
sti
cmp
in
cwtl
pop
adc
sbb
pop
stc
mov
dec
in
ja
cmpsl
push
add
cmp
jge
cmc
push
inc
or
push
sarb
push
xlat
out
xchg
aam
push
out
xchg
aas
mov
add
lods
xchg
sbb
jl
push
cmp
xlat
mov
imul
pushf
mov
xor
mov
mov
adc
mov
mov
push
cmp
cmp
stc
scas
xor
dec
dec
xor
mov
je
or
into
mov
dec
xchg
adc
scas
gs
fmuls
psubb
test
mov
dec
loope
gs
loopne
xchg
jns
jge
pop
pop
das
sbb
int
mov
repz
cs
movsb
fs
adcb
das
cmpsb
mov
out
dec
jnp
jle
xchg
cmp
negb
jg
mov
push
inc
popa
sarb
mov
push
aad
xchg
cltd
mov
leave
push
ret
lahf
xchg
sarb
cmp
rcrl
and
imul
xchg
lods
inc
xchg
add
xor
and
cmp
xchg
enter
cmp
jmp
dec
shlb
or
xchg
xor
fstpl
adc
insb
fistps
sub
rdtsc
sub
xor
mov
cmp
lahf
std
mov
div
clc
jge
stc
repnz
lahf
jne
adc
fsubl
mov
cltd
cmc
les
mov
jno
dec
fstpt
sbb
cwtl
fnsave
outsb
mov
or
adc
stos
int3
leave
mov
xor
inc
pop
out
ljmp
or
xchg
xchg
outsb
scas
and
jae
fisubrs
xor
hlt
xchg
pusha
lock
jno
stos
test
sahf
out
xor
out
and
dec
dec
inc
cmp
out
rorl
push
clc
xchg
jg
enter
icebp
movsl
ss
sti
jbe
mov
cmp
iret
or
add
adc
mov
lea
stc
stos
cmp
imul
jecxz
ja
popf
imull
push
mov
or
out
add
repz
addb
jbe
xchg
adc
jge
das
mov
push
fldenv
std
out
movsb
out
imul
and
jl,pt
fsubp
lods
loop
stc
adc
aam
adc
adc
or
mov
mov
mov
orl
test
push
gs
push
push
lds
aad
inc
jmp
insb
dec
jmp
jo
dec
or
imul
sub
jmp
mov
dec
rorb
cs
xor
xchg
lret
lds
dec
xchg
xor
je
mov
movsl
sub
cwtl
outsb
push
xchg
cmpsl
ja
add
push
pop
aas
repnz
dec
ret
mov
sahf
ret
rcrl
pop
repnz
and
or
out
xchg
shl
in
sbb
dec
loopne
mov
shlb
popf
jmp
pop
adc
and
push
sti
ret
or
xlat
or
add
pop
inc
leave
push
pop
daa
or
shll
cmc
dec
enter
jbe
ljmp
xchg
lret
imul
jg
adc
xor
xchg
shll
adc
mov
call
mov
mov
stos
push
fldl2e
ds
sti
imul
xchg
sub
pop
mov
push
in
push
adcl
sbb
inc
mov
stos
mov
orl
jmp
fistpll
cli
jmp
cmp
adc
jl
mov
cmp
fstpt
or
dec
out
scas
add
sub
sub
loope
test
pop
aam
scas
dec
mov
or
sbb
inc
xor
fwait
in
sub
sti
jne
or
sbb
aas
lods
adc
es
push
mov
cs
ficoms
cmpsl
jbe
adc
in
cmp
call
inc
out
loop
pop
lret
xchg
outsl
call
pop
dec
mov
pop
ljmp
and
loopne
cli
or
push
loopne
and
lahf
je
pusha
add
test
xlat
mov
mov
mov
daa
inc
and
fcomi
mov
shrl
pop
or
jge
push
pushl
mov
leave
aas
pop
out
aaa
lds
daa
xor
jnp
inc
rorl
js,pt
dec
mov
xchg
dec
stos
inc
push
sbb
loopne
loope
mov
lods
push
jg
xor
repz
xor
shlb
data16
popl
xchg
lret
ficoms
push
or
fldln2
sub
inc
sub
inc
xor
xchg
sahf
out
cmpsl
mov
cmp
mov
pop
xchg
aad
cmpl
adc
mov
adc
pop
xchg
push
insl
shll
xor
jle
loope
mov
pusha
les
jecxz
xchg
ret
fs
push
neg
les
movsl
inc
test
dec
test
loopne
aad
cmp
dec
sbb
cwtl
jle
int
loope
or
xchg
pop
jge
sbb
arpl
jge
and
mov
scas
push
nop
push
jl
icebp
mov
jp
mov
outsl
pusha
sbb
orl
enter
loopne
pop
pop
jmp
gs
loopne
ror
xchg
popf
push
pop
jne
mov
dec
lcall
jb
sub
inc
shlb
pop
test
pop
jmp
int
sub
jle
std
mov
mov
dec
lret
xchg
cltd
adc
mov
sub
rcl
imul
std
xor
xorb
dec
jge
xchg
xchg
into
mov
sti
dec
dec
cld
dec
test
out
cmp
subb
sub
mov
push
mov
call
rorb
jg
iret
lahf
xchg
pusha
leave
push
aaa
push
sti
movsb
cmc
dec
dec
jns
dec
stos
mov
inc
dec
rorl
jg
aas
or
jp
xchg
xlat
sarb
aas
ret
pop
sub
out
mov
xor
filds
push
lret
movl
inc
rol
dec
popf
mov
cmpsb
lret
mov
xchg
cwtl
loope
xchg
out
fisubl
sbb
imul
push
xor
pop
aad
idivl
pop
rclb
lret
call
jp
aaa
push
out
mov
mov
cmp
add
jle
inc
pushf
cmp
mov
sarl
jno
dec
stos
pusha
mov
in
sbbl
push
dec
mov
jle
xchg
lods
push
and
lock
push
loop
ret
fistpl
add
push
pop
pusha
stos
addb
jne
scas
bound
cmp
xchg
cmp
ficomps
or
mov
push
adc
cmp
in
gs
push
jns
or
pop
xor
pop
dec
xchg
shlb
int3
dec
sub
into
stos
inc
sub
fisubl
stos
inc
rcr
arpl
or
dec
or
and
aaa
sbb
push
jnp
cmp
dec
mov
inc
sub
pop
and
aad
push
test
sarl
pusha
jl
sbb
test
repnz
xlat
mov
lahf
pop
inc
cli
push
lea
adc
stc
pop
sub
xor
push
imul
add
sub
addb
inc
adc
out
test
sub
dec
mov
sub
lods
add
mov
or
mov
push
mov
addr16
xorb
fsubrl
lock
sub
lea
push
call
loopne
ds
out
mov
call
push
imul
cld
lods
dec
or
shll
pop
stos
push
ss
mov
icebp
or
imul
jne
ds
outsb
inc
scas
stos
lds
gs
push
lret
nop
xor
mov
test
push
imul
mov
test
movsb
mov
adc
shlb
loopne
jbe
and
es
inc
icebp
popa
push
and
xor
mov
and
and
in
adc
mov
scas
inc
fs
scas
loopne
aas
sbb
mov
xor
push
xchg
imul
cmpsb
movmskps
sub
sub
inc
xor
sahf
xchg
or
and
insb
or
adc
sub
lahf
lret
sbb
inc
mov
mov
divb
mov
pusha
lods
cld
ja
imul
mov
test
stc
jnp
arpl
fs
pop
subb
mov
add
mov
adc
data16
ret
rorb
mov
mov
enter
in
dec
mov
add
push
xchg
push
sbb
adc
popf
mov
mov
adc
je
mov
push
or
adc
and
sarb
in
jle
cmp
xchg
dec
mov
rcrb
outsl
jp
sti
cmpsl
sub
dec
pop
jmp
or
imul
mov
jae
mov
xchg
xlat
inc
hlt
test
mov
call
adc
jp
inc
out
cmp
iret
mov
mov
xchg
cmp
push
ja
or
fidivrs
das
push
mov
dec
repnz
out
mov
scas
push
aas
add
mov
or
popa
neg
test
jno
lods
dec
jns
imul
loope
mov
and
dec
or
lret
ljmp
mov
add
or
sub
loope
mov
inc
sub
test
pop
mov
in
mov
push
jge
into
daa
clc
jge
es
sub
int
mov
push
dec
mov
and
jl
and
dec
or
adc
mov
fwait
mov
idivl
sub
test
loop
arpl
jecxz
sbb
imul
sub
inc
dec
mov
and
cmp
jo
jge
push
ljmp
loope
mov
adc
test
mov
mov
sbb
ljmp
test
mov
xor
xlat
and
js
add
imul
adc
dec
push
jne
adcb
movb
lods
cwtl
in
mov
sti
push
es
test
xor
das
mov
cmp
push
insl
ficomps
pop
xlat
dec
lret
mov
push
in
and
jle
jp
push
mov
xchg
xchg
xchg
lea
push
ret
adc
test
js
sbb
pop
cmp
lcall
stc
aas
ret
icebp
dec
das
mov
pop
jo
jge
or
mov
outsb
les
insl
push
jo
gs
loop
fwait
mov
or
addr16
decl
pop
cs
fs
rol
repz
dec
push
test
inc
mov
jecxz
mov
mov
enter
pop
adc
shlb
pop
inc
xlat
sbb
sbb
inc
movsb
inc
in
push
pop
lahf
xchg
cmpsb
adc
inc
xchg
rcrb
push
jecxz
inc
lock
jg
inc
jne
pop
xor
popl
cmp
pop
pop
adc
sbbl
dec
pop
adc
incb
lods
add
adc
or
das
outsl
pop
in
sahf
aam
xor
cmp
push
add
cltd
adc
sub
stos
jb
jmp
jmp
push
inc
push
pop
push
daa
rorl
sub
jns
inc
int3
movsb
lods
sbb
xchg
repnz
add
repnz
add
in
movsl
push
lds
mov
leave
imull
or
add
ljmp
adc
arpl
aas
sbb
adc
stc
and
jnp
mov
adc
in
mov
mov
arpl
cmpb
scas
aam
mov
push
jne
rorb
adc
pop
add
iret
fidivrs
in
xor
bound
push
clc
add
movsl
push
popf
jns
or
out
adc
xchg
jle
lock
sbb
adc
fs
or
push
xlat
lock
xor
test
imul
aad
test
mov
mov
andl
mov
sti
push
push
mov
sub
xor
sub
movsb
mov
mov
or
test
dec
inc
lds
mov
cs
xchg
pop
sub
lret
lcall
std
sub
mov
mov
cmp
sbb
jae
dec
jb
loopne
enter
jle
xchg
jae
push
pop
movsl
lret
cli
mov
cmpsb
stos
and
data16
push
mov
sub
subb
xor
xlat
stos
mov
cs
pusha
sti
shlb
iret
sbb
into
test
sbb
cli
shlb
dec
sbb
xchg
std
addr16
hlt
ss
lcall
mov
jb
pop
xor
cmp
dec
push
lret
sub
das
jb
fimuls
fs
pop
les
ret
fimull
add
fs
test
out
shlb
scas
sbb
insl
lret
cvtps2pd
nop
addr16
sti
in
and
sub
push
divb
insl
mov
xor
or
in
or
mov
or
xchg
or
fdivl
out
pop
aad
movsb
add
jno
cmp
jle
inc
push
pop
xor
dec
pop
fiaddl
lock
out
adc
hlt
inc
mov
stos
jb
subl
push
add
push
out
arpl
out
iret
or
push
test
xchg
sbb
shr
mov
mov
subb
test
jmp
xchg
aaa
push
sbb
imul
inc
out
lea
pop
mov
shl
nop
fildll
lahf
lods
loop
movsb
leave
lods
mov
push
cmp
adc
ror
pop
mov
repnz
pop
pushf
push
bound
into
jb
mov
movsl
dec
pop
loop
mov
popf
scas
fcompl
adc
fists
inc
push
orl
test
shrl
sti
cmpsl
pushf
pop
and
ss
fistpll
push
out
or
xor
repz
jp
fbstp
test
add
mov
add
dec
call
enter
dec
mov
lcall
lahf
into
lret
mov
sbb
mov
test
test
jne
dec
sets
fidivrs
or
and
dec
sub
clc
dec
lret
pushf
jmp
stc
cmpsl
dec
cmc
inc
adc
std
push
sbb
jo
and
or
xchg
mov
fstps
subb
jg
mov
and
xchg
pop
jle
dec
out
pop
jbe
mov
jns
push
or
inc
out
and
jb
fldl
cwtl
pop
xchg
push
cmp
das
lods
pop
int3
clc
scas
or
mov
sbb
xchg
or
imul
outsl
xchg
out
push
scas
pop
xor
mov
fnstenv
push
out
mov
int
adc
or
jae
xchg
icebp
sbb
xchg
mov
xchg
stos
push
insb
mov
jb
cmp
popf
xchg
pop
sub
cmp
out
mov
push
in
stos
dec
jl
sub
aad
mov
lret
or
adc
lock
cmpsb
fwait
mov
xor
cld
cmp
and
lock
fidivrl
mov
sbb
and
mov
push
test
jge
mov
xchg
gs
jl
jge
jmp
cmp
fwait
pop
jg
sub
sub
push
cmovbe
xor
pop
adc
movsl
test
lcall
add
or
daa
out
jmp
addr16
push
lret
and
fists
or
xchg
or
iret
add
rcr
jle
cli
push
dec
ss
imul
dec
test
or
fcmovb
movsl
or
lret
fcomip
add
adc
leave
adc
xor
ret
inc
mov
adc
sbb
loopne
xor
iret
lret
pop
push
lea
lret
cmp
out
inc
pop
lea
out
push
cli
adc
rcrl
ljmpw
xor
out
sbb
sub
pop
aaa
cld
xchg
cmp
es
or
mov
out
es
push
std
jmp
repz
cs
rolb
dec
mov
addr16
cmpsb
pushf
test
or
cmp
insb
addr16
cmc
adc
dec
fidivl
pop
jo
or
sub
push
or
data16
xchg
out
lea
xor
faddl
mov
dec
cld
lods
adc
pop
adc
cli
xchg
mov
add
push
xchg
je
inc
pushf
leave
dec
adc
dec
dec
jle
testb
mov
and
sub
xchg
pop
push
stos
jecxz
xor
or
xchg
sbb
lahf
es
fildl
adc
fists
pop
xor
std
jg
bound
sub
ret
test
movsl
pushf
clc
adc
ds
inc
xlat
into
shlb
gs
push
xchg
ljmp
push
mov
shrd
fstpl
xchg
xchg
mov
jmp
cmp
or
mov
xlat
add
call
in
out
xchg
fldt
les
or
mov
add
dec
repz
and
xlat
mov
sub
into
jnp
mov
in
pop
and
data16
xor
or
shll
cltd
idivl
int
call
add
sbb
cmp
jmp
fwait
insb
lahf
mov
and
push
cmp
testb
cwtl
in
imul
mov
arpl
les
lea
mov
clc
sub
xor
or
pop
dec
lret
push
and
pop
lret
sub
xor
mov
xor
pushf
mov
mov
in
push
mov
cli
xchg
aas
lcall
or
sub
and
repnz
aas
out
pop
cmp
jb
stos
cli
daa
sbb
clc
movsb
inc
inc
lock
xchg
lret
dec
xor
pushw
clc
jns
adc
sbb
mov
cmp
lahf
cmp
scas
mov
cli
call
pop
cmp
inc
hlt
stc
movsl
pop
xor
jns
mov
and
lahf
call
je
adc
xchg
jbe
sbb
jbe
in
rcl
jg
jp
mov
repnz
mov
sub
xor
cltd
mov
rorl
arpl
jb
scas
shrb
pop
in
lcall
jecxz
cmp
jle
pop
out
pop
js
rclb
enter
jp
stos
xor
or
mov
jle
pop
jnp
fwait
push
xchg
push
mov
sbb
fnstenv
mov
cmp
push
insb
loope
mov
shl
xchg
insl
sub
fucom
adc
sub
fwait
pop
inc
aas
push
adc
ljmp
in
scas
xchg
test
loope
pop
xchg
daa
xor
adc
or
stos
cmp
aam
imul
test
stos
xchg
jae
jle
cmpsb
inc
add
mov
cvtdq2ps
jle
xorl
sub
xchg
cmp
add
ds
adc
bound
out
fsubl
mov
pop
popf
out
dec
jp
or
popa
mov
les
xchg
pop
inc
imul
insl
leave
aaa
xor
enter
stos
mov
ja
sbb
loope
xor
xchg
test
mov
pusha
lock
loopne
mull
mov
jbe
dec
in
xor
sahf
push
mov
or
fistps
and
xor
or
pop
xchg
pop
out
dec
fwait
nop
cli
add
jb
mov
and
xor
xchg
in
jb
insb
mov
loop
sub
rorl
push
fwait
mov
push
dec
xchg
es
dec
sub
fidivl
push
test
lds
cmp
mov
sbb
jl
sub
add
nop
xchg
inc
scas
sahf
xor
and
inc
faddl
jmp
scas
xor
mov
iret
es
movntq
push
add
scas
push
adc
addl
sbb
leave
je
fimull
cmc
bound
je
push
lds
cmp
xor
add
xor
xor
dec
xor
mov
cmp
out
cltd
mov
xchg
jmp
bound
xor
cmp
jb
aam
jmp
and
or
push
loop
mov
pusha
xchg
push
add
ljmp
ss
mov
jbe
xchg
and
cmc
fists
add
cmp
dec
stos
adc
mov
sub
bound
shlb
ljmp
movsb
div
xchg
pop
hlt
push
and
cmpsb
push
test
cmp
mulb
cmpsb
aas
ja
repz
mov
popf
jmp
push
outsb
pop
sub
sbb
popa
repnz
int
and
mov
hlt
mov
aas
or
cmp
or
cwtl
imul
fs
popa
pop
cmp
mov
mov
out
pop
mov
test
jns
rcrl
dec
int
jl
sub
shlb
int3
ds
xchg
repnz
pop
addr16
das
cmpsl
subb
int3
sti
rorl
rorb
cs
es
xchg
jle
sbb
and
out
leave
mov
out
test
jbe
jb
scas
lock
std
mov
cmp
cmp
add
cltd
out
stc
bound
mov
push
dec
fmull
ficoms
inc
pushf
xchg
cmp
mov
inc
jns
data16
dec
jmp
xchg
imul
sti
imul
adc
or
sbb
call
aas
sub
les
jge
fidivl
test
push
js
mov
nop
xchg
je
mov
add
insb
fistpl
jp
add
fsubl
jno
sub
mov
fdivrs
and
inc
out
popa
test
jbe
sbb
jb
jbe
xor
sub
inc
shrb
mov
add
imul
cmp
push
imulb
cltd
stos
or
popa
lods
sbb
test
arpl
push
mov
js
cmp
mov
sbb
push
mov
shrb
lods
xor
ret
and
xchg
das
or
sbb
cmp
cmp
icebp
lret
pop
cmp
mov
push
dec
hlt
repz
mov
push
iret
lcall
xor
jmp
stc
sbb
pop
dec
mov
mov
mov
insl
enter
add
jae
add
fmul
cmp
add
xchg
lea
jo
push
outsl
imul
inc
mov
outsb
cmpsb
imul
xchg
popa
mov
jbe
cmpsb
cmp
mov
sbb
scas
bound
arpl
ljmp
adc
mov
mov
cmp
inc
jno
fidivs
pop
add
cmp
xchg
mov
mov
scas
and
mov
enter
fwait
push
call
outsb
test
addr16
or
insl
pop
sub
ret
addb
ja
mov
jl
dec
mov
out
pop
inc
sub
add
inc
out
test
add
pop
pushl
push
loop
pop
mov
mov
xor
and
fwait
daa
add
or
je
pop
ret
sbb
mov
mov
mov
stos
and
cwtl
jle
mov
int3
scas
mov
inc
cli
iret
out
test
sahf
jne
bswap
xchg
mov
pushf
xor
jnp
xchg
mov
lods
aam
sbb
xchg
rorb
xor
imul
into
or
cltd
test
xchg
cmp
jno
mov
pushf
jo
popa
cli
xchg
dec
loop
filds
fmull
xor
scas
sub
and
mov
or
mov
mov
lcall
mov
notb
insb
sbb
in
pop
xchg
mov
push
adc
sbb
loopne
pushf
aam
leave
jnp
xlat
pop
bnd
inc
xchg
push
repnz
sti
cmpl
or
out
lcall
outsl
jnp
adc
pop
jno
loop
adc
sbb
xchg
push
inc
pop
popf
pop
mov
xchg
pop
iret
aas
lods
jg
mov
cmpsb
and
pop
outsb
jo
cmpsb
mov
cmpsl
mov
xchg
xchg
mov
mov
lods
mov
test
xor
stos
xchg
js
add
mov
mov
fcompl
push
add
rcl
push
stos
in
out
sti
orl
incb
xor
or
xor
int3
xchg
jnp
cmp
cmp
lahf
push
add
aam
adc
mov
movsb
push
xchg
lods
xchg
jno
add
enter
jno
test
add
cmp
mov
ret
pusha
jne
sbbl
enter
xchg
icebp
cmpsb
out
add
sti
xchg
mov
fisubl
jg
imul
mov
das
stos
cmp
ljmp
push
insl
push
or
mov
mov
jae
mov
iret
aas
xor
mov
mov
aam
call
dec
jnp
push
cltd
fdivrp
mov
outsb
bound
into
fidivl
add
inc
add
sti
mov
scas
frstor
adc
mov
mov
pusha
leave
jno
adc
jp
bsr
loop
mov
pop
inc
cmc
push
and
out
mov
dec
sahf
or
iret
rcrl
jbe
aaa
pop
adc
icebp
loopne
pusha
xchg
jle
cmp
loop
adc
adc
ljmp
les
cmpsb
out
js
lea
pop
xlat
incl
push
mov
ja
sbb
lds
mov
lret
test
mov
outsl
pop
mov
imul
fwait
push
mov
mov
scas
sub
dec
mov
mov
addl
cmpsb
cwtl
inc
rorb
jo
mov
jg
and
cltd
add
or
scas
cmpsl
scas
out
jg
scas
pop
sbb
fbld
xchg
mov
stc
mov
jo
popf
mov
cmp
mull
xchg
cmp
cmpb
je
js
out
adcb
mov
decb
shrl
pop
mov
jne
lods
mov
or
sti
mov
out
mov
xorb
xor
adc
cmpsl
cmp
enter
js
inc
scas
push
scas
xor
add
test
jmp
pop
mov
shl
lock
ja
inc
sub
dec
aam
xchg
into
or
in
xchg
push
js
and
mov
push
sbb
ret
test
das
iret
mov
pop
jo
cs
pop
mov
pushf
repz
int
dec
add
xlat
jmp
pop
clc
fistl
jns
mov
lcall
cmp
dec
mov
xchg
mov
ss
pop
xchg
sub
jl
sub
pop
pop
mov
pop
iret
xor
xchg
push
push
imul
rol
cld
imulb
test
inc
xor
mov
sbb
into
pusha
push
xor
scas
push
aas
mov
and
mov
or
or
mov
scas
jmp
and
sub
in
xor
lods
jb
arpl
dec
jmp
inc
fmulp
out
cld
in
andl
sub
or
cmc
roll
scas
negl
xchg
xchg
sbb
and
int3
pushf
fmuls
stc
push
lods
mov
jg
addl
mov
ret
jecxz
xchg
or
into
fwait
bound
adcl
cmpsl
add
fwait
cld
test
cmc
lods
lret
push
lcall
mov
or
xlat
dec
mov
xor
add
push
jne
mov
mov
push
mov
xchg
jl
push
mov
xchg
vprotd
cmp
clc
je
lds
dec
sub
adc
push
inc
mov
out
push
inc
decl
fmuls
push
inc
xor
add
dec
push
inc
bound
stos
jb
jb
jg
mov
sbb
or
push
push
push
cwtl
sub
jmp
outsl
lods
or
ss
sti
xor
cmpsb
dec
pop
aad
out
mov
xchg
pop
xchg
sahf
mov
insb
mov
inc
int
inc
cmpsb
mov
xchg
inc
xor
test
out
shll
xchg
jg
lds
xchg
pop
sbb
inc
jb
pop
or
push
negb
mov
addl
and
mov
jne
xor
lds
jb
xchg
cltd
inc
adc
inc
js
sahf
pop
lret
lods
xchg
mov
stos
mov
and
data16
ja
mov
out
mov
jp
loopne
mov
inc
xchg
adc
mov
mov
mov
cmp
subb
roll
jae
or
dec
fistps
push
repnz
pop
pop
pop
mov
addr16
mov
jne
pusha
test
notb
add
ret
push
loope
adc
imul
push
add
add
inc
fcmovnbe
sub
adc
xchg
das
jns
add
jge
fdivr
adc
fisubrs
and
pop
daa
and
mov
into
out
xchg
in
push
xor
sbb
cmp
fsubrl
out
lods
mov
ret
arpl
lods
xor
add
popf
mov
xor
mov
pop
imul
or
jns
mov
ja
insl
rorb
es
pusha
fisubrs
mov
xchg
in
jb
cmovo
adc
cmp
arpl
or
lret
rcrb
pop
mul
aad
mov
jmp
and
cmp
repz
and
or
lahf
repnz
cmp
sahf
js
scas
xchg
add
mov
lret
movsl
repz
lods
fs
xor
mov
test
pop
incl
enter
jno
aaa
inc
leave
xor
lds
icebp
lret
les
inc
iret
outsb
jmpw
int
aaa
sub
sub
add
outsb
jb
mov
push
inc
add
icebp
aas
dec
std
and
mov
sbb
sbb
jle
out
mov
mov
shl
or
jo
adc
lahf
sub
out
repz
jbe
fsubl
sub
sbb
insb
divb
mov
stos
mov
cmpl
xchg
mov
andl
rolb
cmpsl
imul
push
aam
push
xor
outsb
jbe
inc
and
xor
xchg
ret
sbb
out
mov
dec
sub
ljmp
mov
jb
dec
andl
pop
insb
aas
enter
dec
jecxz
in
je
shl
hlt
popf
sbb
pop
jns
into
shl
inc
lds
scas
mov
inc
mov
movq
jbe
xor
lahf
push
loop
lea
nop
cmp
push
xor
cmpsl
or
xor
imul
int3
bound
out
and
xchg
mov
mov
sub
imul
sbb
dec
shl
mov
lock
js
fnstcw
mov
pop
dec
or
add
xorb
lea
addr16
mov
out
pusha
pop
pop
xchg
and
xorb
mov
add
push
repnz
dec
sbb
xor
jl
push
sub
sub
in
addb
dec
testb
mov
mov
out
mov
cli
jne
mov
mov
ficomps
mov
xor
loop
iret
lcall
jo
test
dec
push
fs
loopne
mov
inc
pop
ds
mov
daa
fwait
xchg
ja
mov
dec
mov
sub
int3
mov
push
sub
xchg
daa
lds
test
cmp
stc
ljmp
popa
cmp
or
aam
pop
lret
jo
lret
jno
test
jno
cmp
test
imul
dec
mov
mov
rcll
out
push
sbb
insl
jbe
sbb
and
rclb
pop
and
fcmovb
fxch
repz
pusha
push
mov
xlat
xchg
mov
fs
add
sbbl
xchg
into
fwait
aam
xchg
jle
scas
jae
loopne
lds
xor
gs
and
inc
enter
js
adc
mov
add
pushf
in
xchg
sub
cmp
outsb
lcall
arpl
pushf
xchg
mov
ja
sub
std
mov
xchg
rcr
cltd
dec
fadds
mov
les
mov
pop
int3
mov
popf
jl
add
cmc
mov
lods
sub
int
pop
or
aad
popa
or
xor
adc
ficoml
xlat
int3
data16
jbe
cmpsl
insl
es
ficomps
mov
addr16
pushf
out
in
or
and
aas
add
and
out
pop
ja
les
cmpsb
sbb
push
imul
mov
iret
dec
bound
mov
jmp
cmp
sbb
adc
jl
xchg
add
cmp
lods
cmp
call
xchg
fstpt
stos
cmp
aaa
push
sub
sub
xchg
push
scas
jg
js
xchg
es
in
sub
imul
mov
xchg
sahf
cmp
fwait
cltd
cmc
in
mov
js
out
inc
mov
or
push
xchg
xchg
xchg
gs
je
cld
cltd
arpl
jo
cmp
mov
in
int
sub
aaa
in
enter
push
and
popf
aam
cmp
push
fsubs
js
mov
push
sub
mov
iret
xor
lods
pop
sub
xchg
xchg
shlb
mov
pop
ljmp
sbb
dec
sub
rcll
xchg
sub
push
mov
mov
ret
or
adc
cmpl
in
and
psubsw
das
out
xor
fstpl
mov
xchg
or
test
lods
mov
cltd
inc
and
sub
out
xor
daa
inc
mov
dec
sti
mov
jmp
cwtl
dec
push
pop
mov
out
xor
mov
jle
scas
mov
sbb
filds
out
cld
jp
test
out
push
loope
inc
into
mov
rcrb
jp
rcll
cmp
jb
jp
movsb
in
orl
mov
jno
rcl
adc
iret
leave
iret
mov
xchg
xor
mov
xchg
into
mov
or
sbbl
cmp
test
xchg
sbb
bound
fsubs
pop
dec
xchg
sti
jno
das
sbb
xchg
jmp
add
aad
out
in
cmp
jg
lock
das
xchg
sar
add
popa
xor
sub
sbb
push
les
sub
adc
lahf
test
inc
cmp
or
lret
imul
pushf
dec
mov
cli
into
push
mov
sub
orb
inc
leave
fisttpl
cld
mov
subl
movl
inc
fsubrs
push
xor
mov
aaa
cmp
fisubs
fdivl
jmp
adc
xor
test
ror
mov
xorl
cmp
repz
sub
push
sbb
mov
jle
lods
lock
add
repnz
or
test
jp
push
dec
cs
push
xchg
inc
jge
lret
sub
pop
div
cli
adc
sub
pop
aaa
push
adc
arpl
mov
mov
jbe
xor
sub
flds
sub
lret
cli
lahf
push
and
inc
mov
or
ret
xchg
add
repnz
mov
and
mov
mov
mov
int
cwtl
ss
sbb
xchg
int
rolb
cmp
sbb
xchg
xlat
shrl
push
lock
pop
pop
outsb
pop
aas
js
jge
int
dec
outsb
mov
mov
or
call
add
bound
mov
push
lahf
push
sti
hlt
pop
cwtl
xchg
sub
xchg
or
sub
mov
das
push
data16
add
enter
xor
xchg
sub
sbb
clc
in
dec
mov
jnp
test
inc
arpl
leave
mov
fistpl
notb
hlt
inc
out
mov
jle
mov
push
in
cmp
dec
movsl
or
mov
jg
mov
inc
into
stos
sbb
inc
jbe
cltd
and
cmp
push
test
fnstsw
in
xchg
and
and
dec
sbb
insl
ret
adc
jb
push
pop
jmp
push
mov
repz
cmp
mov
cmp
add
js
shr
mov
mov
inc
adc
int3
and
fidivrs
inc
jne
jb
sbb
push
ss
add
leave
mov
fs
repz
les
scas
ror
mov
xchg
fnstenv
mov
lods
xchg
fisttpll
std
lahf
inc
adc
les
inc
and
lret
cmc
lods
mov
aad
pop
push
enter
mov
call
mov
pushf
mov
dec
inc
stos
xchg
loopne
push
sub
testl
jg
mov
jmp
xchg
add
loopne
mov
pop
iret
and
nop
cmp
fwait
lock
out
insb
lahf
push
mov
dec
jne
in
daa
xchg
fwait
cmp
popf
test
pop
sbb
arpl
out
mov
adcl
int3
inc
in
jne
movsb
cltd
sbb
mov
mov
add
mov
js
in
in
bound
sahf
lret
shll
daa
andl
push
imul
movsb
xchg
xlat
sbb
xor
adc
sub
imul
adc
fisubrl
js
lods
mov
scas
inc
dec
inc
sahf
mov
push
jbe
mov
inc
into
mov
mov
ss
stos
je
xlat
adc
lods
fisubl
sti
add
jmp
pop
stos
push
mov
test
pop
out
adc
repz
xchg
imul
xlat
movsb
mov
mov
xor
xor
cltd
in
mov
shlb
pop
fiaddl
imul
rol
lock
pop
ficomps
push
lds
dec
sbb
and
jo
xchg
inc
cmpsb
imul
dec
in
inc
push
jmp
test
fsubl
jg
out
stc
mov
jmp
rep
sahf
adc
or
jo
mov
mov
jg
test
jg
or
xchg
mov
inc
out
lds
lock
xchg
stc
sti
xor
iret
lret
out
jno
pop
fildl
or
push
scas
outsb
jge
or
jbe
push
xor
push
add
sbb
sub
cmp
pushf
sbb
lahf
dec
scas
daa
dec
std
jbe
fsubl
pop
add
adc
mov
loope,pt
sub
inc
sub
jo
dec
push
xorl
fildl
iret
leave
push
jmp
gs
psubusb
sub
icebp
jg
mov
xchg
sti
sbb
enter
jae
loope
in
or
jb
xor
jge
aad
iret
xchg
sbb
gs
inc
push
std
mov
or
test
in
fwait
and
shlb
roll
adc
mov
cmp
inc
sbb
xchg
sub
sar
sub
cmc
cmp
sarl
dec
scas
and
or
xlat
test
cmp
push
out
dec
int3
hlt
in
icebp
and
ja
lret
pop
mov
inc
and
leave
mov
pop
sbb
pop
jne
fcomps
xchg
xchg
fsubl
and
mov
out
int
cld
dec
push
pop
cltd
das
inc
test
cwtl
insl
dec
mov
lock
push
inc
push
testl
sbbl
add
push
pop
mov
sub
or
jg
mov
rorl
fisttps
aas
add
popa
cmp
je
lret
jae
sub
cmc
rolb
cwtl
cmp
mov
jae
sbb
push
add
xor
addr16
mov
cmp
xor
push
int
mov
lock
add
orl
sbb
incl
loopne
shll
xchg
shr
pusha
enter
jnp
leave
inc
inc
adc
imul
pusha
fsubl
dec
jp
lcall
pop
sub
xchg
aam
and
inc
push
in
xor
xor
mov
daa
jecxz
adc
dec
pop
sbb
cmp
mov
xchg
mov
shlb
xlat
mov
leave
nop
mov
stos
cmp
jno
push
lds
ret
rcl
xchg
inc
dec
mov
cmp
dec
xor
aas
ja
popf
jbe
test
cmp
int3
repnz
subb
dec
mov
lods
rcrb
clc
jg
xor
cmpsb
or
dec
cmp
std
mov
std
sahf
outsl
and
lcall
jle
adc
jecxz
sbb
xor
insb
in
mov
inc
add
xchg
out
stos
mov
inc
dec
inc
xchg
and
jmp
push
inc
lods
mov
out
cmpsb
aad
push
icebp
push
jno
std
loop
xor
add
out
lods
lods
frstor
dec
sbb
sbb
pop
fistps
xor
shl
mov
xchg
movsb
out
sub
aam
cwtl
inc
dec
or
add
shlb
jns
dec
roll
pop
xchg
mov
lds
jge
hlt
sbb
test
mov
fldz
lds
popf
gs
shlb
and
bound
adc
repz
xchg
jecxz
out
stc
push
addr16
sarb
mov
sbb
pop
loop
test
and
stos
inc
add
ja
pop
push
sbb
sbb
inc
in
or
jmp
xchg
xchg
jno
sbb
fldcw
jge
xor
lods
lcall
push
sub
js
mov
icebp
notb
xor
iret
sbb
loopne
lret
sub
aaa
sbb
fidivs
adc
sti
mov
pop
sbbb
jg
hlt
fmul
int
test
pop
pop
out
xchg
lock
xor
ror
mov
jbe
push
dec
cmpsl
push
shll
lea
cmp
adc
mov
cmp
loop
cld
fwait
mov
sbb
fbld
push
cmp
andb
xchg
dec
add
cmpsl
jno
mov
mov
dec
fcompl
int
sti
sbbl
cmp
xlat
dec
mov
jle
pop
xor
push
in
stc
fwait
dec
test
pusha
ret
mov
jnp
in
xchg
push
and
inc
mov
test
and
xchg
pop
push
xchg
inc
mov
leave
and
xor
fiaddl
jnp
in
mov
test
enter
push
andb
stos
xchg
scas
jae
push
cmpsb
jne
xchg
fwait
add
or
jae
add
xor
cmpsb
sub
aaa
ja
jae
sti
mov
dec
fisubl
cli
loope
jp
dec
fsts
fidivrs
loope
cmp
andl
cmp
jl
movsb
imul
hlt
sub
push
fldt
sbb
cs
insl
push
push
adc
sub
out
jmp
outsl
sbb
sbb
mov
enter
add
mov
xchg
xchg
xchg
sbb
nop
mov
les
push
xorl
cli
imul
jp
stos
icebp
repz
loope
stos
repz
jb
lock
movsb
xchg
xchg
ficoml
push
sub
mov
add
repnz
jns
mov
cld
lea
test
mov
sub
bound
adc
cmpl
scas
mov
cmp
add
xor
cmc
loop
mov
mov
aaa
cmc
add
sbb
xchg
bound
and
add
xor
std
cmpsb
or
lds
mov
sahf
cmp
ret
mov
fdivs
push
dec
pop
jge
push
sbb
add
jl
mov
dec
mov
fsubrs
sub
stos
shrl
mov
and
jbe
movsb
mov
das
adc
icebp
push
test
add
cs
jne
in
icebp
pop
adc
bound
jg
in
shrb
mov
dec
adc
outsb
cmp
and
or
int3
dec
sub
test
push
lock
xor
push
arpl
sbb
fisubrs
outsl
arpl
leave
in
mov
test
sti
adc
sub
aaa
rclb
mov
push
enter
mov
xchg
idivl
sub
test
xlat
xchg
nop
cmc
adc
stc
xchg
fnstcw
jecxz
push
out
jo
pop
data16
mov
sahf
and
mov
lods
xor
popf
mov
repz
inc
jnp
in
cld
xor
in
lods
shl
sbb
rclb
push
xchg
in
popf
dec
dec
inc
sarl
push
jo
ret
jns
nop
scas
call
add
das
rcl
ficoml
adc
or
in
je
popa
std
or
xchg
fs
aad
movsl
dec
call
mov
rcrl
pusha
sbb
or
sbbl
ds
or
push
pusha
dec
std
mov
sbb
shrb
jo
and
in
pcmpeqw
xor
aad
mov
clc
pushf
ret
lahf
jne
sbb
nop
nop
adc
ret
leave
pop
or
out
xor
fnsave
mov
or
mov
dec
mov
cmp
mov
inc
movsw
pop
pop
cmpl
lods
ret
ja
data16
cmp
cmp
into
pop
xchg
ds
sbb
sub
dec
adc
out
mov
rcrl
aas
out
ffreep
arpl
cmpsl
pop
jns
cltd
xlat
mov
inc
aaa
test
je
loopne
insl
sub
insl
add
clc
gs
adc
xor
dec
sub
pop
cmpb
inc
ds
orb
inc
mov
outsl
or
sub
cmpsb
loop
loopne
inc
mov
in
mov
inc
jle
rcll
jge
pop
jns
fdivrs
inc
xor
xchg
ret
cmc
test
push
xor
push
inc
inc
gs
ror
cld
cmc
dec
add
dec
jns
in
das
xor
shll
xchg
pop
cmp
movsb
arpl
jp
add
jo
cs
roll
mov
add
ds
dec
ljmp
test
xor
mov
js
mov
adc
mov
pop
pop
xor
inc
push
mov
xor
and
fcomps
movsb
popf
icebp
cmp
iret
pop
fs
bound
cmp
xchg
jp
leave
jecxz
pop
jle
push
cmp
cmpsl
test
mov
into
inc
xor
mov
addr16
or
pop
jae
dec
test
cmp
or
inc
push
xchg
or
and
xchg
imul
je
mov
pop
rolb
jnp
dec
bound
in
popa
subl
xchg
mov
xchg
mov
adc
pop
arpl
or
pushf
in
jae
sub
orb
push
in
sbb
insl
xchg
fildll
test
mov
stc
outsb
jns
lahf
dec
mov
inc
sbb
clc
inc
into
jg
pop
adc
inc
loopne
push
push
push
jne
sub
dec
jle
add
xor
pop
mov
cwtl
push
ljmp
and
cmpsl
mov
push
inc
xor
les
adc
fwait
push
lods
xchg
fwait
movsb
stc
lret
or
xlat
or
mov
test
fmuls
iret
dec
scas
icebp
inc
inc
cmc
dec
mov
push
cmp
or
jnp
das
jbe
pushf
aad
test
fisubl
cmp
dec
hlt
popa
repz
mov
push
cli
xchg
mov
sub
sub
shll
lret
hlt
mov
push
negl
mov
mov
adc
aas
rcll
push
pop
out
ljmp
adc
sbbl
fst
sub
imul
mov
test
test
enter
insl
xchg
and
jp
or
inc
repz
jmp
cs
cmc
aad
dec
adc
sbb
mov
repz
cmp
mov
fsubrs
xor
sub
xchg
xor
lret
add
int3
cmp
pop
cltd
xor
cltd
xchg
in
cld
push
inc
mov
pop
mov
or
mov
aas
lock
jb
cli
div
mov
subl
imul
imul
lods
je
fdivrs
mov
xor
or
xchg
lods
add
test
movsb
in
and
lea
xchg
cltd
lea
stos
xchg
jne
out
xor
aas
fs
dec
jmp
pop
ficoms
movsl
jnp
incb
push
dec
and
push
aad
mov
hlt
bound
out
aad
scas
dec
mov
mov
jne
pushf
xchg
mov
cld
mov
xlat
xor
ljmp
outsl
mov
push
ror
mov
fiaddl
xor
mov
mov
jmp
subl
inc
lea
lds
mov
sub
scas
xchg
cwtl
xchg
xchg
subl
sbb
add
adc
dec
fsubrs
rorb
lahf
dec
jg
cmp
jecxz
in
mov
sbb
not
mov
hlt
test
insl
xchg
xor
cmp
xchg
imul
mov
es
iret
cwtl
popa
pop
sbb
mov
clc
jns
fldl
inc
pop
stos
loopne
daa
xchg
fidivrs
dec
in
xchg
push
xor
push
sbb
aaa
insb
mov
enter
aaa
xor
cwtl
gs
pop
adc
mov
push
es
mov
cmp
and
or
arpl
jmp
xor
cmpsl
pop
push
lods
arpl
mov
push
push
ret
sub
rcll
add
lahf
cmp
xchg
lock
sti
adc
dec
popa
push
push
cmp
call
xor
mov
and
or
and
adc
mov
sub
add
mov
sbb
aam
mov
mov
fs
sub
inc
loope
push
push
enter
pop
addr16
jp
pop
lods
lods
xchg
add
cmp
sbb
lods
cmp
sbb
test
or
in
pop
in
addr16
xchg
inc
iret
jo
fs
mov
inc
outsl
outsb
aas
or
mov
ja
ret
mov
in
fadds
icebp
fdivl
xchg
mov
in
insl
loop
repnz
clc
or
pop
or
lahf
lods
jb
out
rorb
rcrb
mov
add
cmc
in
pop
pop
pop
inc
push
jge
add
push
pushf
popf
idivb
xchg
adc
test
fimull
jne
test
notb
inc
push
jno
xchg
rcrl
sbb
loope
adc
iret
comiss
test
xor
or
aaa
sub
into
xchg
aam
jl
cli
mov
mov
cmp
jecxz
inc
sti
sub
mov
fsubs
xorb
xchg
fnstcw
or
jno
lea
add
ficoml
enter
inc
scas
jmp
into
sbb
sbb
and
xor
insb
je
fdiv
ja
das
cmp
out
jnp
in
adc
or
adc
or
push
jg
gs
xchg
pusha
mov
adc
test
stos
sbb
push
loope
mov
js
adc
inc
incb
xchg
addb
pop
sub
imul
in
or
sub
sbb
fwait
adc
inc
xlat
xor
cmp
fnstsw
xor
pop
push
arpl
adc
xchg
cs
lret
add
out
jnp
lea
mov
cmpsl
mov
dec
jp
mov
daa
cmpsl
jbe
movsl
std
gs
mov
scas
mov
cmp
es
sbb
pop
mov
mov
adc
out
mov
inc
sti
xor
movsb
pusha
mov
enter
test
std
fstps
mov
and
dec
out
lea
add
xchg
jae
ss
pop
sahf
iret
jmp
mov
fs
xchg
clc
jno
cwtl
mov
inc
inc
dec
cmp
jo
mov
in
add
fcmove
sbb
jne
cmp
jge
mov
mov
mov
cmp
inc
mov
dec
sub
stc
or
mov
sbb
lret
push
jge
cmp
stos
add
push
mov
xchg
xor
pop
cwtl
popf
dec
pop
jnp
and
loope
mov
sbb
push
sbb
loopne
xchg
enter
dec
mov
sub
sub
clc
xchg
stos
lret
cli
sbb
pushf
jo
aaa
dec
in
inc
loopne
cmpl
pop
mov
cs
ljmp
xor
cmp
push
mov
mov
dec
das
sbb
jbe
mov
jnp
leave
stos
cmp
xor
flds
rcll
dec
push
xlat
lods
cwtl
xchg
xor
push
adc
mov
jmp
xlat
mov
xor
cmc
outsb
std
sub
xchg
mov
dec
dec
fnstsw
lret
add
lret
mov
les
negb
imul
mov
xor
sbb
mov
add
dec
add
out
adc
xchg
cmp
jbe
push
mov
aam
bound
popa
mov
push
cmp
pop
out
dec
icebp
cmp
pop
mov
cmp
sub
jnp
mov
and
add
std
es
test
pop
or
inc
rol
aam
pop
mov
in
shrb
jne
inc
int
cmp
inc
in
pushf
sub
clc
repz
and
push
xor
pop
or
testl
stc
cmp
sub
aam
xchg
and
cmp
push
push
fldenv
test
mov
dec
inc
cwtl
and
and
and
lods
mov
out
add
mov
and
or
dec
pop
jecxz
xchg
mov
jmp
mov
sbb
pop
cmp
ret
jae
pop
adc
sub
stos
inc
std
mov
cmp
rcrl
clc
sbb
ror
xchg
lret
imul
xchg
jmp
sarb
mov
dec
out
scas
lods
mov
outsb
lcall
xorl
mov
nop
push
mov
aad
or
inc
nop
insb
or
or
pop
lret
sbb
fcomi
mov
mov
cmc
movsl
mov
test
push
push
and
mov
sbb
loop
lcall
decb
and
add
insl
xor
sti
aas
cli
add
fucom
arpl
orb
test
xor
push
hlt
popf
push
push
lret
pushw
push
lahf
ljmp
dec
cld
pusha
jp
mov
mov
push
fdivr
cmc
cwtl
dec
pop
xorl
in
repz
lock
cmp
mov
stc
push
sub
mov
mov
add
es
add
and
sahf
fwait
ljmp
and
fwait
jnp
jae
js
lcall
mov
sbb
ljmp
idiv
mov
cmp
pop
test
loop
dec
and
lock
cmpsb
aas
or
cld
stc
out
std
addr16
inc
scas
mov
ret
int
sahf
mov
inc
adc
push
xchg
fwait
sub
cmp
xor
jnp
fwait
pop
mov
cwtl
and
mov
outsb
mov
mov
and
xchg
sub
add
push
dec
in
jns
bound
dec
daa
mov
or
lcall
pop
cmp
add
adcl
hlt
cwtl
std
mov
mov
add
cmpsl
ficomps
jnp
xchg
sbb
sbb
adcl
imul
in
sub
std
fldenv
aaa
lock
push
ljmp
outsb
cmc
push
pusha
and
jmp
idivl
repz
insl
les
mov
jae
hlt
ret
rolb
mov
pxor
fdiv
pop
or
dec
lret
xchg
scas
mov
adc
jge
dec
or
mov
cli
nop
adc
sbb
scas
inc
add
sbb
add
mov
jo
sub
pop
xor
pushf
xchg
and
mov
into
das
mov
xchg
rclb
dec
mov
sub
es
mov
push
xchg
sub
loop
xchg
aad
or
mov
test
gs
or
mov
push
mov
cmp
push
mov
xchg
pushf
sub
adc
popf
lods
xchg
mov
scas
in
push
mov
cwtl
pusha
lahf
fidivrl
mov
jnp
jg
ror
pop
adc
xchg
push
mov
xor
and
jae
filds
loope
sub
dec
bound
in
rorb
into
rcll
aaa
icebp
mov
jge
xchg
sub
cmp
xchg
call
pop
pusha
ret
pop
lods
xchg
mov
jnp
jne
shlb
ret
mov
dec
mov
mov
fnsave
int3
jbe
cmp
inc
lea
movsl
cmp
popa
inc
xor
or
xchg
cmp
ficoms
bound
es
and
push
jbe
je
pop
dec
imul
bound
sbb
xor
fmul
jo
out
add
mov
pop
dec
das
cmp
dec
cmc
jg
and
dec
sub
out
in
outsl
sbb
nop
je
dec
js
adc
test
in
data16
jno
insb
fiaddl
cli
inc
cmp
inc
imul
imul
and
out
pop
xchg
push
jo
lea
add
xor
data16
xor
call
andl
jmp
and
sub
mov
sbb
add
dec
lods
les
cmp
andb
dec
mov
arpl
gs
dec
jmp
pop
rclb
inc
lds
movsl
xchg
fwait
sti
aam
xor
mov
mov
imul
loope
push
in
mov
imul
in
sbb
loope
imulb
sub
jge
sbb
pop
push
or
mov
xchg
lahf
pop
repz
push
pop
enter
imul
xchg
jns
dec
push
stos
cmp
lds
dec
dec
or
aas
daa
ss
push
in
adc
out
xchg
popa
cmp
ficompl
sbb
sub
or
pop
ja
in
rcll
gs
cmp
xor
stc
aas
mov
cmp
cmp
sbb
test
cmp
das
jle
push
mov
pop
std
ds
jne
jnp
add
add
xchg
lahf
jmp
xor
cmp
pop
popa
adc
dec
xchg
dec
shlb
xchg
les
push
or
add
dec
adc
in
ja
mov
and
cmp
lock
in
cltd
push
nop
test
inc
pop
lcall
shll
xchg
adc
movsl
mov
out
je
loop
xchg
and
or
mov
stos
push
add
ficompl
jne
testb
data16
sub
pop
or
mov
out
inc
pop
push
sub
mov
popf
pop
and
mov
mov
aas
adc
xor
leave
nop
int
out
push
pop
int
popa
mov
mov
ja
fst
clc
shufps
xlat
adc
imul
insb
xchg
push
icebp
mov
rol
pop
lea
enter
neg
dec
jl
pop
addr16
jmp
leave
cmpsb
push
xchg
mov
push
test
sbb
cli
push
jge
add
adc
call
inc
inc
add
lock
xorb
mov
inc
push
std
decl
dec
dec
jne
nop
stos
icebp
in
scas
stos
cmp
adcl
xor
or
mov
xor
sbb
and
cmp
jno
xchg
cmc
enter
xorb
les
add
lahf
bnd
and
mov
or
cmc
xchg
jbe
sbb
add
lock
mov
mov
cmpsb
movsl
dec
push
push
rcrb
sarl
lcall
dec
or
jmp
arpl
cltd
inc
movsb
inc
mov
call
enter
xorl
fwait
sub
outsl
leave
test
aas
and
mov
xchg
xchg
cmp
daa
jne
and
cs
imul
fisubl
in
dec
push
sbb
mov
test
iret
jecxz
test
push
pop
test
lods
dec
xor
clc
stos
sbb
inc
mov
loope
icebp
out
xchg
cltd
push
xchg
rorb
mov
sbb
mov
pop
inc
mov
jbe
add
jno
cmpsb
fadd
mov
popf
pop
insl
imul
outsl
clc
jl
sbb
arpl
xor
es
inc
mov
mov
int
flds
bound
cs
repz
in
out
mov
pop
test
push
adc
cltd
lock
mov
ficompl
xchg
or
je
jmp
inc
mov
fdivrs
lds
jp
jnp
cmc
xor
mov
fcomi
pop
xor
andnps
int
xchg
shlb
sub
in
shl
arpl
pop
or
and
pop
jno
mov
mov
ss
sbb
xor
push
dec
out
out
insl
aaa
call
ds
jns
push
add
rorb
sbb
jo
or
jnp
mov
cmp
sub
xchg
fdivr
cmp
and
xor
aaa
sti
cmpsl
adc
sbb
setno
mov
cmc
dec
cmp
stc
lret
push
mov
pop
mov
stc
les
inc
nop
test
xor
stos
lcall
and
cmc
in
jnp
pop
sahf
xor
or
mov
push
repnz
sub
adc
sub
pushl
push
xor
xchg
loop
xchg
ja
pop
jecxz
in
push
loop
iret
fldt
xchg
push
sub
cmp
sub
adc
call
jp
lahf
pop
xchg
mov
rcrb
lcall
sub
xor
sbb
ljmp
icebp
fmull
and
aas
xor
movsb
adc
testb
mov
cmp
pop
popf
mov
inc
xor
mov
mov
xchg
fidivrl
adc
lret
inc
jge
mov
shll
fsubl
mov
adc
push
insl
push
fwait
dec
fwait
daa
adc
xor
daa
lods
aas
mov
ljmp
test
push
pop
push
sbb
pop
sbb
mov
jecxz
andb
inc
mov
sub
and
stos
push
add
jns
push
sub
sbb
es
pop
imul
cld
outsb
lds
xchg
sub
sbb
out
jp
enter
and
pop
aaa
lods
pop
and
xlat
aam
push
lock
test
mov
or
hlt
dec
js
pop
inc
mov
mov
and
frstor
jno
int
fisubs
enter
outsl
daa
test
test
into
mov
add
adc
filds
cmp
ret
in
push
lret
mov
adc
cmp
sub
repnz
cmp
ret
jnp
pop
cli
addr16
or
cs
jae
scas
inc
dec
dec
mov
scas
add
mov
jl
add
sub
xor
in
pop
fwait
dec
sarb
repz
loope
mov
push
dec
test
add
fisttpll
test
or
lods
jmp
subl
loop
out
out
mov
and
insl
mov
or
sub
lock
imul
test
adc
popa
dec
pop
mov
mov
outsb
xor
lock
mov
shl
inc
inc
cmp
out
push
nop
add
xchg
xchg
adc
lods
mov
mov
mov
fs
movsl
lahf
mov
adc
cld
addr16
sbb
aas
les
cmc
fistl
loopne
push
pop
jl
packssdw
rcll
push
lods
sub
das
sub
fadd
lret
sti
dec
mov
gs
hlt
push
and
sar
lds
leave
mov
adcb
mov
push
jne
mov
jae
pop
pushf
loope
xor
les
xchg
sbb
call
adc
adc
dec
and
into
add
or
mov
lods
or
push
cs
cmp
mov
je
cmpsl
or
xchg
aam
adc
ds
mov
sahf
xchg
push
int
addr16
dec
adc
nop
pusha
pop
insb
cli
fbstp
sub
test
sub
jle
pop
test
dec
push
add
inc
xchg
and
mov
sahf
loopne
aaa
jo
or
jo
lds
ss
pop
push
inc
mov
test
rcrb
sbb
add
rcrl
xor
mov
inc
mov
stos
iret
pop
sti
mov
xchg
dec
in
mull
add
sub
jle
scas
out
cs
pop
fildl
ljmp
gs
dec
aas
mov
add
out
popf
das
mov
out
push
sbb
add
insb
xchg
es
pop
int
in
pop
pop
rorb
and
push
mov
push
hlt
push
or
and
jo
push
loope
jp
dec
or
pop
xor
and
test
mov
jae
push
mov
std
popa
pop
sarb
push
mov
das
push
hlt
js
imul
repz
out
ret
leave
cwtl
dec
aam
dec
push
stos
mov
mov
sti
rcrb
cmp
sahf
dec
into
out
out
sbb
sub
push
jge
call
sbb
mov
repnz
std
negb
mov
inc
fwait
dec
mov
xor
fimull
mov
adc
test
or
jno
push
sbb
adc
out
fadds
mov
int3
imul
adc
push
mov
cmp
mov
dec
orl
out
fldcw
jne
mov
jae
repnz
int
adc
inc
fdivrs
test
cld
cld
or
dec
lahf
pop
popa
xor
imul
mov
iret
pushf
xchg
fs
add
adc
push
sub
fwait
addb
popa
sub
roll
mov
jbe
int3
scas
adc
push
mov
mov
hlt
das
xchg
mov
fstp
jnp
add
mov
xchg
lahf
sbb
add
sti
jnp
gs
xchg
push
cmc
loopne
cltd
push
mov
call
lret
xchg
lret
out
sahf
sub
pop
subb
aas
xchg
jmp
pop
cmp
shrb
into
cld
call
xchg
aad
xchg
je
dec
inc
imul
jo
push
inc
jb
loop
sbb
mov
mov
orl
orb
pop
flds
arpl
inc
push
fcoml
nop
sbb
jmp
cwtl
cmp
push
cmp
shrl
es
inc
movsb
adc
xorl
das
push
or
dec
loop
rcll
bound
js
push
rcr
mov
rep
out
in
jmp
or
push
mov
loopne
aam
push
lods
scas
cmpsl
and
and
loop
mov
out
out
loopne
cld
adc
in
and
hlt
sub
pop
or
pushf
xor
outsl
cmp
cmpsb
push
pop
arpl
cmp
sbb
jge
push
dec
inc
int3
xchg
xchg
add
xor
mov
or
frstor
mov
addr16
stos
repnz
fnstenv
mov
xor
cmp
mov
mov
pop
sbb
jns
jns
cmp
cmc
addr16
pmovmskb
dec
xlat
mov
es
xchg
addr16
lcall
inc
jnp
andl
sbb
xor
dec
clc
in
test
lds
mov
ret
lods
inc
xor
mov
lret
pop
and
lcall
and
lret
add
push
hlt
aas
mov
popf
xchg
mov
sub
and
add
push
sub
out
fisubl
int
out
int3
or
adc
mov
xor
push
xchg
lret
shl
jg
add
repz
bound
dec
xlat
ret
or
push
xor
push
pop
xchg
xorb
xchg
mov
pop
pop
push
inc
iret
jo
xor
pop
movsl
inc
ficomps
sub
in
xchg
dec
out
add
lret
outsl
sub
mov
inc
mov
adc
sbb
cltd
push
mov
or
pop
push
mov
aas
stc
test
cwtl
insb
mov
les
xchg
jb
xchg
movl
aas
xor
or
push
les
lcall
aam
outsb
jb
and
les
jo
repz
mulb
xor
jmp
fs
lods
cmp
shl
addr16
push
hlt
ja
notl
fisttpl
sbb
hlt
sbb
jmp
jl
xchg
popa
aad
lods
sub
ja
lods
iret
mov
leave
shll
bnd
or
jns
push
sti
add
xor
or
pop
push
out
lahf
push
push
xchg
mov
cmp
mov
sub
in
push
mov
push
mov
jp
lock
or
cltd
pop
fdivrs
iret
and
lds
pop
dec
aaa
mov
jle
add
sub
sbb
cmpsl
push
jno
jp
xchg
pop
xor
push
xor
pop
dec
neg
jp
fsubrs
add
xlat
or
add
mov
or
pop
xchg
mov
jae
enter
sub
mov
movsl
popa
test
inc
jno
or
mov
psadbw
cmpsl
push
int
ret
lds
push
hlt
loopne
ds
mov
stc
in
sub
rcr
inc
xor
and
mov
dec
jae
add
mov
imul
mov
icebp
cmp
cmp
jb
jne
pop
pop
xor
xchg
popa
cmpb
dec
and
push
lcall
arpl
je
outsl
mov
lock
and
lcall
jecxz
sub
daa
inc
repnz
int
aad
push
sbb
in
mov
sbb
cmp
xchg
roll
add
mov
dec
mov
push
adc
dec
push
out
mov
sub
insl
xchg
xlat
fistl
frstor
iret
xor
pop
fs
lret
push
sub
hlt
scas
testb
push
mov
push
mov
mov
mov
push
in
or
outsl
mov
xchg
test
mov
shlb
imul
icebp
int
dec
sbb
and
cwtl
mov
gs
pop
in
inc
not
decl
push
shlb
and
out
cmp
mov
xchg
orb
mov
ja
dec
lods
lcall
fsubrl
pop
jmp
stos
push
jecxz
push
in
cmpb
jno
lret
fs
pop
sub
push
cmp
cmpsl
insb
mov
popa
cmpsl
jmp
mov
xorb
cmp
or
in
xor
xchg
xor
test
movsl
loop
add
test
iret
nop
hlt
lret
ficompl
push
mov
insb
or
jle
xor
hlt
ret
fs
push
int
xchg
add
adc
and
jle
dec
cmp
jo
jge
lret
jmp
inc
idivl
ds
sbb
mov
les
stos
pop
add
cmp
nop
xchg
mov
sti
jg
fwait
jmp
mov
test
data16
dec
and
aad
mov
jge
stos
push
inc
push
test
xor
sub
bnd
js
mov
push
and
or
push
cmpsb
mov
inc
shrl
and
aam
popf
insl
jnp
inc
mov
xchg
pop
in
fnsave
les
pop
loope
int3
xor
add
enter
jmp
leave
pop
inc
pop
cmp
xchg
cmpsb
pop
pop
aaa
aas
lret
sahf
jno
add
imul
je
in
ret
sub
shll
mov
adc
test
aaa
jbe
es
jo
adc
jmp
rcr
ss
fdivs
or
test
outsl
test
sub
add
ret
jo
and
add
xchg
adc
sbb
mov
clc
adc
jnp
xor
add
mov
add
jae
daa
pop
jnp
add
dec
sahf
int
xor
mov
cmp
sub
mov
adc
into
aad
fsubrs
repz
mov
sti
xor
js
cwtl
xor
push
rcrb
sub
jmp
xor
lds
shrl
add
into
insl
or
std
rorl
adc
push
mov
xchg
jno
cld
and
test
iret
mov
iret
mov
dec
rolb
lock
in
orl
push
and
lahf
in
sti
sbb
lea
fadds
cmp
in
daa
and
inc
mov
cmp
or
push
xor
sbb
push
addl
rcrl
xor
in
push
xor
lods
xor
leave
adc
push
lods
fmull
lret
mov
iret
in
daa
int
or
xchg
ja
mov
jmp
pushf
pusha
outsl
cmp
shlb
es
pushl
out
pop
nop
jmp
sahf
sbbb
cli
aam
mov
cmpsb
cli
xchg
cmp
jb
cmpsl
mulb
pop
mov
cmp
cmp
mov
jae
sti
lahf
adc
xchg
lds
in
sub
fcoms
pop
ficompl
lock
into
cmpsb
jg
ret
pop
inc
inc
popa
ja
aas
sbb
je
cmp
push
leave
les
insl
sbb
mov
rorb
icebp
push
out
lcall
cmp
pop
push
inc
clc
inc
rcrb
adc
pop
or
xor
lds
loopne
and
xor
fwait
out
popf
jle
mov
out
xchg
dec
popf
xor
mov
insb
sti
xor
and
push
fmull
mov
cmpsb
xchg
andl
xchg
inc
xchg
ficompl
loop
outsb
int3
mov
enter
mov
icebp
xchg
xchg
pusha
jmp
stc
ds
xor
xchg
mov
scas
test
je
pop
cmp
pop
dec
clc
sbb
xchg
int3
xor
fyl2x
cld
and
outsl
sbb
xor
rcrl
lods
clc
push
addr16
enter
pop
leave
lret
cwtl
jl
clc
push
and
sub
jle
sbb
xor
sub
movl
clc
xchg
push
add
loop
and
adc
shlb
and
mov
pusha
jno
jne
test
sub
into
push
sbb
adc
sbb
sub
mov
mov
jnp
enter
adc
push
movsl
xor
aas
shll
sbb
outsb
add
icebp
mov
frstor
jb
shl
jecxz
jnp
xchg
movsb
sub
xor
outsb
xor
mov
dec
inc
inc
mov
xor
arpl
and
adc
pop
inc
out
or
xor
add
lret
xchg
cmp
jp
fwait
xlat
lea
leave
add
jne
hlt
add
adc
cltd
dec
adc
out
add
lea
rcrb
out
mov
jo
or
xor
xchg
add
movsl
bound
rolb
dec
in
ss
outsb
imul
pop
cwtl
pop
push
inc
loopne
dec
or
les
jne
adcl
out
dec
pop
mov
cld
in
lret
jmp
roll
scas
dec
cli
adc
dec
sar
mov
cmp
or
into
pop
sbb
jbe
sahf
test
dec
cmp
hlt
dec
jnp
sbb
pop
mov
inc
repz
lahf
cmp
in
jno
pop
test
hlt
sub
je
out
in
test
pop
inc
inc
repnz
mov
out
pop
jb
lahf
sarb
cli
neg
cmp
lret
inc
or
xchg
dec
fcompl
mov
jns
sbb
push
loop
mov
movsl
jne
xchg
imul
fcmovb
xor
jmp
sti
jmp
sar
adc
ret
aam
out
add
push
or
jg
xchg
lret
ja
pop
cmpsb
shll
pop
pusha
insl
mov
shl
mov
inc
ret
mov
push
sub
into
jecxz
movsb
scas
sarl
cmovle
push
loope
aaa
ret
pop
lret
pop
sahf
rol
aaa
dec
pop
fwait
pushf
mov
sub
sbb
loope
and
push
ret
sbb
mov
mov
pop
mov
pop
je
xor
dec
nop
mov
fmul
and
or
arpl
mov
iret
aas
mov
into
aam
clc
ror
xor
add
ret
cs
mov
push
pop
punpckldq
pop
sub
xchg
sub
add
fcoms
push
das
inc
shll
push
seta
jbe
into
and
cs
out
fs
mov
shrb
adc
and
mov
sub
push
iret
addl
mov
movsl
push
mov
push
aaa
inc
pushl
out
sbb
xchg
insb
and
stc
cmp
sarl
orb
sbb
shlb
cmpsb
mov
or
fsubrl
adc
adc
jae
mov
xlat
mov
jp
xor
gs
push
add
test
stc
push
inc
or
pop
cmp
dec
data16
pop
loope
hlt
push
scas
add
mov
lret
call
push
aaa
ss
pop
adc
cmp
mov
faddl
loopne
dec
insb
pop
call
jmp
xchg
and
pusha
sbb
out
xchg
add
mov
pop
fcomip
cli
sbb
mov
clc
stos
lret
dec
push
push
movsb
fisttpl
mov
daa
cltd
sub
es
fs
sbb
dec
movsb
inc
pop
pop
cs
pop
fmuls
movsl
mov
mov
cld
mov
lahf
jp
ljmp
cmp
jae
add
push
shl
pop
push
mov
inc
and
out
stc
scas
inc
cli
inc
jmp
pop
mov
aad
add
ja
aad
or
sub
pusha
in
negl
sub
mov
push
add
gs
orl
sarb
in
adc
repz
gs
das
mov
mov
ss
mov
inc
dec
mov
stos
out
or
lcall
cltd
mov
scas
xor
pop
mov
xchg
insb
push
add
add
fucomip
loop
lds
orb
jb
pop
cmpsb
testb
stc
std
imul
push
stos
arpl
mov
mov
push
lcall
mov
das
jnp
xchg
pushf
pop
inc
stc
test
adcb
aad
push
mov
jae
pop
repz
dec
insl
xor
adc
push
imul
ror
adc
dec
scas
xor
cmp
enter
pushf
jecxz
outsl
sbb
push
mov
jp
push
daa
or
jl
aad
cmpsb
xorl
clc
movsb
dec
in
push
add
push
mov
arpl
jnp
xor
and
xchg
sbb
stc
pop
mov
add
test
enter
roll
cmp
or
lret
xchg
lock
mov
cmc
push
jbe
xor
test
leave
ds
xor
es
push
inc
aad
add
cmp
in
test
test
mull
mov
dec
gs
addr16
popl
push
aaa
pop
push
insb
pop
inc
pop
arpl
pop
pop
dec
jge
dec
div
ljmp
xchg
sbb
loopne
fisubrs
adc
out
jmp
enter
inc
test
movsl
push
loopne
fildl
xor
pop
aaa
pop
inc
dec
rcll
push
aaa
and
push
pop
mov
and
mov
mov
jns
or
push
insl
pop
gs
cmp
jnp
lock
inc
jp
sub
cli
scas
jnp
dec
jp
outsb
mov
negl
outsb
mov
enter
arpl
pop
jge
rorb
adc
sub
dec
lret
cmc
les
push
fdivrp
int3
ret
inc
jl
cltd
push
dec
jne
sub
arpl
push
stc
and
fld1
xchg
out
mov
lods
mov
cs
sub
mov
mov
in
cmp
sub
mov
xor
in
pop
push
mov
cmpsl
cwtl
inc
negb
add
xor
out
xchg
fcoms
cmp
pop
mov
dec
rcrl
xor
shlb
inc
xor
mov
xorl
int
pop
inc
mov
cmp
push
fwait
fs
icebp
cwtl
fdivrs
pop
in
push
ja
cwtl
or
add
or
inc
jno
mov
std
xchg
ss
out
call
int3
push
add
sbb
mov
popa
scas
sbb
mov
mov
inc
sbb
push
aam
rcrl
dec
in
pushf
mov
fisttpll
push
clc
and
cmpsb
ud2
aam
jne
leave
fadds
cs
in
in
jo
outsl
inc
call
lcall
out
adc
cwtl
sbb
or
push
cmp
enter
push
cld
test
pop
push
pop
jecxz
scas
ss
sbb
or
or
data16
jge
mov
in
xchg
and
push
mov
inc
fisubs
pop
xchg
shll
jmp
loopne
insl
pusha
js
arpl
sbb
data16
test
mov
mov
xchg
mov
cmp
push
mov
push
or
loopne
mov
xchg
fsubl
fildl
leave
int
cmpsl
mov
aam
inc
jge
and
xor
xor
lds
cmpsl
xor
cld
fistps
push
andb
inc
xchg
cmp
loope
dec
or
es
sub
mov
xor
int
jno
loope
cmpsl
xor
sub
pop
movsb
mov
sar
mov
jb
lret
imul
dec
xor
sub
ss
lret
and
inc
mov
mov
sbb
sbb
cli
dec
dec
mov
dec
adc
aad
pop
xchg
jge
dec
inc
ljmp
or
push
inc
mov
jge
mov
xchg
in
add
lea
jbe
and
inc
or
mov
nop
xchg
xor
push
sub
add
push
xlat
push
lea
or
jb
pop
cld
xchg
sbb
test
shlb
sti
enter
mov
incl
lods
jne
add
jecxz
xchg
pop
sarb
mov
adc
and
jp
test
jmp
xchg
outsl
jg
xchg
mov
inc
aad
or
icebp
pop
scas
xor
jmp
mov
loop
xchg
xor
out
cmp
jns
jp
scas
enter
jmp
fdivs
sbb
pop
out
movsb
pop
lods
inc
cli
js
add
sbb
adc
pushf
sbb
pop
add
outsb
hlt
dec
lret
fmul
jo
adc
mov
or
push
pushf
mov
sub
repnz
out
xchg
cltd
roll
enter
lds
pusha
cmp
scas
ficomps
mov
scas
sbb
subl
and
push
lock
inc
mov
in
mov
sub
jle
cld
sbb
mov
fdivrl
test
int
iret
rorl
mov
mov
mov
push
sbb
das
sub
inc
lret
sbb
xor
xchg
or
inc
jae
mov
lret
daa
stos
xchg
stc
es
hlt
add
or
shl
mov
pop
ret
sti
dec
mov
sbb
aas
fwait
addr16
adc
sbb
xchg
lea
push
bound
jne,pt
xchg
sti
shl
mov
popf
fidivs
into
adc
enter
test
frstor
jge
and
into
or
in
mov
ret
xchg
ss
loop
or
cmp
leave
outsl
sub
ficompl
pop
gs
mov
out
sbb
bound
jne
xchg
add
jno
das
mov
lret
xchg
dec
insl
mov
out
add
mov
iret
mov
sbb
ljmp
pop
inc
xchg
ljmp
cmp
fisttps
rcrb
out
arpl
cmp
andl
dec
sub
mov
xchg
cwtl
lods
sbb
mov
adc
sbb
cmp
mov
stos
shrb
loop
adc
dec
sbb
push
fistpl
out
fildl
jo
lahf
mov
cmp
es
sub
cmp
insl
sub
push
arpl
cli
pop
int
jl
imul
movsb
push
cmc
sub
sbb
xchg
or
jno
add
mov
inc
mov
je
lcall
mov
xchg
dec
jge
dec
cmp
dec
lret
nop
inc
shrb
jge
subb
sub
sbb
add
dec
lahf
fcompl
sub
sub
loop
dec
add
ss
or
lahf
in
popf
cld
pusha
mov
sarb
cmpsb
or
jae
push
nop
pop
push
jle
push
idivl
sbb
aaa
aaa
add
aas
insl
mov
and
aam
mov
dec
mov
clc
fists
mov
xchg
inc
mov
std
push
popf
dec
dec
xorb
sub
xor
or
sti
mov
sub
push
push
cmp
lods
xor
into
das
sarb
fdivl
mov
jb
cwtl
push
or
mov
and
and
push
jae
push
lock
mov
pusha
and
scas
pop
popf
stc
in
movsb
lods
cwtl
out
sbb
xor
or
adc
into
add
fucomip
out
cmp
and
dec
dec
mov
push
mov
push
std
repz
xor
es
cmp
xchg
ret
cmp
xchg
push
nop
flds
out
pop
inc
sahf
mov
jecxz
or
iret
pusha
sbb
push
adc
sahf
cli
into
add
scas
ljmp
push
cmc
in
int3
add
xchg
fmul
addr16
shlb
jl
dec
sbb
jg
enter
add
cli
xchg
or
addl
adc
pop
lcall
negl
xor
in
pushf
add
imul
lds
repz
inc
iret
sub
shlb
or
lods
aas
fcmovb
pop
cmp
inc
fsubr
sti
adc
outsb
pop
popl
and
call
jecxz
in
push
dec
jo
add
add
xchg
xchg
mov
movsl
sub
jne
outsb
lahf
xchg
arpl
aam
inc
int3
xchg
xchg
inc
inc
cwtl
adc
dec
out
xchg
das
and
iret
outsl
or
das
adc
gs
mov
mov
and
mov
pop
nop
jp
imul
or
inc
loope
cmp
test
inc
inc
repnz
aad
cli
ss
xor
popf
cmp
adc
jae
xchg
jo
lret
cmp
jmp
mov
xchg
scas
mov
int3
arpl
dec
pop
cld
lock
xchg
addb
jecxz
ret
mov
into
jnp
adc
iret
add
or
arpl
andl
scas
push
sti
lahf
pop
dec
push
lock
push
mov
lret
sbbl
stos
xchg
inc
or
cs
or
subb
dec
jns
add
and
add
lods
out
sbb
pusha
cmp
push
mov
mov
mov
xchg
out
out
or
mov
movsl
mov
mov
jg
mov
lds
or
std
sub
pop
and
in
mov
or
sub
dec
cld
pop
pop
lds
mov
cmp
andb
movsl
aas
sti
repnz
lret
sub
jnp
and
mov
push
les
push
pushf
dec
xor
inc
ret
hlt
addr16
sub
pop
jg
addr16
scas
repz
cmp
sbb
and
je
aad
popa
outsl
cli
roll
inc
pop
mov
sbb
subl
xchg
xor
pop
into
push
cli
in
add
and
lret
xchg
into
push
je
pop
xchg
push
jl
mov
add
adc
pop
adc
cmp
mov
shl
add
fimull
hlt
mov
and
adc
daa
ljmp
and
movsb
mov
mov
adc
in
in
sti
cltd
pop
loopne
sub
add
xor
push
push
je
lods
jb
or
in
xchg
orb
inc
in
repz
out
addb
xor
push
adc
cli
std
jbe
cmp
repnz
xor
inc
pop
jmp
sub
faddl
pusha
jge
hlt
adc
xor
or
cmpsl
in
push
push
lret
fstps
or
fnstcw
into
push
jb
sub
lods
fbstp
lods
xor
inc
fdivl
mov
pop
fucomip
push
ret
cmpsb
mov
adc
mov
xor
xchg
pop
mov
into
pop
jb
filds
mov
lcall
mov
push
dec
xchg
int3
cmp
lock
push
in
sub
mov
lock
pop
in
inc
fsub
add
test
stc
lods
mov
dec
mov
push
pop
loope
push
xchg
cltd
aas
jle
cld
sti
or
les
cmp
lahf
out
mov
ret
xor
or
sub
je
or
jge
mov
add
mov
cwtl
into
imul
out
fcomp
mov
lods
nop
mov
inc
stos
in
xor
cwtl
mov
dec
xchg
gs
int
jnp
xchg
mov
xchg
push
mov
push
mov
ret
test
cli
ficoms
mov
push
xlat
int3
cmp
ss
popf
sbb
dec
test
movsl
mov
ret
stos
jg
jmp
popf
outsb
lcall
lret
or
mov
jno
mov
pop
pop
ret
out
adc
jmp
push
push
adc
mov
sbb
add
daa
icebp
loop
cs
fstpl
divb
lock
mov
pop
mov
cmp
bound
mov
jae
fldenv
lret
ds
out
lea
into
mov
outsl
repz
mov
call
xor
mov
inc
into
add
mov
insb
std
lods
insl
jne
inc
arpl
popa
fstps
pop
and
push
and
or
xor
sub
orb
mov
test
loopne
sub
stos
sbb
loop
pop
loop
outsb
push
xchg
inc
mov
dec
xorb
test
pop
repz
sarl
xlat
pushf
mov
data16
jge
inc
in
add
mov
nop
dec
fs
hlt
subl
js
cmp
push
lcall
notl
add
push
mov
rcl
adc
add
outsl
mov
and
aam
xchg
push
fsubs
sub
xorb
es
lds
or
dec
mov
lret
testl
out
push
and
inc
iret
imul
push
lods
and
cli
ficoms
push
out
inc
call
or
movsl
mov
jno
gs
sar
fwait
pop
jns
sbb
add
pop
popf
pop
mov
and
cwtl
dec
xchg
xor
call
dec
arpl
lea
stos
ja
jne
int
jp
repnz
xor
inc
dec
jg
adc
fildll
cld
in
aam
add
aam
scas
stos
popa
xor
in
dec
test
or
fistpl
in
das
icebp
and
out
bound
jae
inc
push
mov
mov
sbb
jecxz
stos
jp
jmp
jp
pushf
or
push
stos
inc
loopne
mov
je
mov
and
jmp
sahf
sbb
dec
adcl
jb
mov
push
pop
push
mov
mov
and
sbb
je
sbb
roll
xchg
pop
inc
or
insb
lods
clc
and
rcrl
aad
mov
rcr
sti
decl
or
pop
call
push
mov
adc
in
pop
dec
adc
das
out
push
mov
stc
lea
and
adc
push
dec
test
loope
xor
jmp
pusha
jge
mov
jecxz
and
sub
lahf
out
aad
and
fisubrl
xchg
gs
lds
cmp
adc
pop
aad
stos
push
xchg
xor
or
lret
jb
dec
test
add
xchg
cwtl
repz
bound
mov
aas
repz
lds
idivl
mov
mov
aad
test
jle
xchg
mov
push
divl
popf
ret
cmpsb
add
and
test
sbb
dec
andl
sbb
sub
fcoml
or
imull
add
xlat
hlt
daa
jno
in
xor
mov
mov
gs
adc
fcmovnu
lea
ret
xchg
adc
sbb
xchg
repnz
repnz
dec
and
xchg
mov
mov
mov
push
cmp
xchg
cmpsb
enter
or
rorl
movsb
or
pop
pop
mov
into
fcompl
mov
push
mov
nop
push
adc
push
nop
pop
sbb
jmp
icebp
mov
cmpsb
cmpsb
xchg
stos
mov
sbbb
addr16
dec
xchg
data16
mov
mov
or
jae
ffreep
cmp
sbb
sbb
or
push
addb
gs
jns
push
pop
test
sbb
xchg
cmp
out
inc
loopne
bound
jo
push
idiv
int
lcall
inc
cmovnp
sbb
xor
sub
push
lcall
and
sarl
mov
push
mov
adc
inc
push
and
inc
xchg
daa
push
sub
pop
mov
es
enter
ret
mov
dec
dec
mov
mov
es
dec
adc
ds
gs
imul
mov
lock
movsl
mov
jbe
imul
push
inc
or
cwtl
out
cmp
repnz
add
add
in
int
pushf
jecxz
call
xchg
mov
or
gs
mov
out
test
adc
sbb
sbb
sahf
imul
add
sti
dec
cmpsl
pop
mov
test
fisubrl
pusha
pop
push
sbb
sub
insb
lret
stos
lcall
int
inc
roll
xchg
shl
sub
insb
sub
xor
add
add
aaa
cld
fsub
sbb
mov
pcmpeqd
cmp
je
jp
daa
sub
adcb
jbe
bound
add
icebp
dec
fsubrs
mov
mov
xor
sbb
xor
scas
aad
jns
pop
loope
leave
je
pop
cmp
push
jecxz
xchg
add
sub
or
mov
pop
sbb
cli
sbb
mov
sti
outsl
adcb
fwait
loopne
mov
out
push
xchg
shr
and
jmp
test
jge
pop
repnz
mov
leave
push
cmp
sub
icebp
cmp
adc
pop
lahf
and
enter
test
mov
lahf
xor
fidivl
push
dec
data16
push
outsl
ret
ret
mov
cmp
push
pop
add
cmc
imul
xchg
mov
pushf
bound
or
fidivs
outsb
jge
out
data16
sub
cmp
adc
cmpl
pop
sbb
sub
inc
sub
xor
js
xor
sub
jns
jo
dec
pop
cmp
inc
inc
pop
push
or
mov
popf
cld
push
adc
pop
cmc
movsb
cmp
lcall
lds
mov
mov
jne
sbb
xchg
pop
insl
sbb
out
scas
xchg
mov
push
inc
push
add
loop
inc
xor
jno
test
out
sub
in
push
cmp
je
or
mov
das
loop
xor
out
pop
inc
out
sbb
pop
repz
popf
es
loop
lock
or
adc
push
rclb
pop
sbb
scas
dec
imul
adc
push
dec
into
pop
cld
mov
orl
aad
inc
or
xor
adc
push
clc
sub
xor
shlb
mov
push
aas
or
dec
mov
mov
lods
adc
sub
inc
sbbb
and
xor
hlt
mov
andb
add
scas
out
loop
cmc
jo
aam
popf
and
fcmovu
andb
dec
pop
mov
repz
test
jbe
sarl
pop
insl
cmpsl
repz
mov
adc
sbbw
cs
mov
icebp
stos
out
mov
jbe
mov
push
dec
out
test
push
sahf
mov
outsb
lods
xchg
push
faddl
fcoml
fldenv
out
test
fistpl
rcrb
loopne
mov
inc
or
fsubrs
out
jae
sbb
out
daa
movsb
dec
clc
adc
leave
push
in
fnstcw
xor
push
inc
mov
sub
test
and
data16
mov
fimull
dec
jl
scas
adc
mov
movb
inc
gs
push
fldcw
dec
adc
push
mov
fs
test
daa
aas
scas
lcall
scas
cmp
jo
shl
xor
movsb
mov
dec
call
sti
fadds
adc
aas
ljmp
popf
inc
or
in
aas
rcll
sbb
lret
and
sarb
cmp
decl
in
push
and
repz
bound
adc
mov
adc
adc
stc
adc
jge
stc
or
inc
adc
pop
outsl
push
cmp
ljmp
dec
jmp
fsqrt
xor
sarl
out
pop
or
ja
lret
sbb
fdivs
sti
push
xor
fadds
scas
cmp
sub
std
stos
and
push
jno
jge
push
daa
data16
xorb
loop
xchg
pop
jg
push
les
cmpsb
shrb
cmp
xchg
scas
js
movl
ljmp
adc
fisubrs
mov
jge
mov
aas
xchg
popl
hlt
fsubl
scas
inc
daa
stc
mov
ror
imul
or
sbb
repnz
in
adc
outsl
scas
enter
fs
je
cld
mov
imul
ret
mov
in
dec
cmp
adc
dec
push
lock
sbb
stos
xor
dec
fwait
inc
pop
orb
or
mov
into
dec
adc
cmp
pop
mov
xchg
mov
or
adc
inc
push
push
outsl
cwtl
scas
fstps
loopne
in
xorl
mov
cmp
cltd
hlt
or
and
xor
and
or
push
test
dec
daa
and
adc
push
push
jg
pop
jb
stos
in
lcall
cmp
or
push
jnp
inc
xor
ljmp
pop
adc
push
xchg
xor
mov
sti
inc
fadd
icebp
xchg
fisttpl
pop
orl
scas
daa
xor
jmp
xor
out
in
aas
xchg
lds
push
mov
and
iret
rcl
jle
pop
pop
dec
repnz
roll
imul
les
jmp
daa
and
jl
cltd
push
pop
addr16
push
stos
lret
pop
cwtl
insb
sub
sub
xor
add
push
fnstsw
sbb
adc
mov
sti
lock
xchg
std
loop
xchg
push
jo
mov
and
mov
pop
sarb
mov
push
xchg
iret
dec
and
mov
rcr
neg
adc
cli
fwait
lahf
push
in
jo
scas
sub
mov
xchg
mov
xchg
lock
movsl
mov
push
mov
repz
je
in
test
inc
dec
push
scas
cmp
insl
or
dec
inc
and
ds
jge
scas
mov
popa
notb
clc
sbb
sub
lret
rclb
insb
out
and
mul
fsts
push
fsub
cmpsb
pop
pusha
sbb
in
clc
sub
dec
or
stos
mov
shld
mov
jmp
mov
xor
dec
imul
mov
inc
add
sub
das
les
mov
out
incb
sbb
inc
jno
lods
adc
jo
xchg
sbb
dec
sbb
mov
mov
sarl
or
cs
inc
out
inc
add
xor
inc
inc
push
daa
jmp
push
insl
and
aas
lods
into
mov
sti
loope
clc
insl
and
add
fs
ficoml
cmc
scas
mov
jns
sub
push
lret
sbb
idivb
data16
ljmp
push
mov
xor
shlb
xchg
sub
frstor
ss
add
xchg
fs
or
inc
xorb
or
mov
mov
cmp
pop
inc
ret
sar
dec
sbb
test
pop
pop
nop
lahf
xchg
in
mov
lcall
hlt
nop
push
cmp
std
jbe
mov
sub
mov
inc
inc
adc
stc
enter
cmp
push
jmp
mov
add
pop
ftst
or
call
push
hlt
imul
iret
jp
push
mov
jmp
xor
ljmp
les
adc
insb
sub
mov
cmpsl
test
mov
mov
fcomps
sahf
dec
or
in
ret
dec
out
mov
scas
push
dec
int3
shrb
add
sbb
pop
scas
sub
dec
fidivrl
in
xor
xchg
mov
xor
jg
loope
sub
data16
jb
mov
insb
popa
test
inc
ss
icebp
out
ja
mov
mov
stos
mov
push
shr
adc
inc
adc
jno
jnp
pusha
xchg
movsl
pop
aaa
xchg
repnz
outsb
and
mov
mov
pop
ret
add
and
js
adc
lods
shrb
pop
inc
cmp
pop
pop
xor
mov
stos
add
sti
sub
cmpsl
xor
aaa
lret
pop
and
stos
push
pop
dec
inc
mov
cmp
pop
leave
fimull
sub
test
cmc
fdivp
pop
fs
push
movsb
dec
push
xchg
int3
mov
inc
jle
pop
xchg
movsl
sbb
mov
cmpsb
xchg
mov
test
lahf
stc
inc
add
cmp
cmp
sbb
dec
dec
dec
int
inc
push
stos
scas
and
sub
shlb
and
add
cmp
test
sub
dec
ja
icebp
and
adc
fnstcw
sbb
pop
scas
ljmp
insb
lret
sub
push
test
and
sbb
loopne
sahf
mov
jne
adc
sbb
jnp
pushf
hlt
jae
pushf
out
lods
mov
adc
roll
or
subb
cmp
ds
pop
mov
sar
fcomps
imul
int3
add
dec
leave
xor
dec
outsl
mov
cmp
ret
push
pop
mov
fcmovnb
shl
fnstcw
int
jae
jg
mov
orb
idivb
add
sarb
inc
xchg
mov
scas
imul
fs
arpl
hlt
and
cltd
xor
xor
repnz
push
push
mov
data16
jbe
pop
jp
outsl
mov
pop
out
in
mov
jl
ja
ja
loopne
sub
mov
xchg
je
mov
push
out
inc
arpl
insb
lods
sarb
mov
push
xor
test
mov
mov
addr16
xor
in
xchg
xchg
sub
mov
call
pop
add
lods
incb
test
mov
push
jmp
pop
pop
mov
imul
hlt
xchg
and
xor
cmp
jge
jnp
bound
cmpsb
adc
inc
out
mov
mov
test
mov
and
pop
inc
outsl
cmp
push
pop
lock
insl
mov
xchg
fidivrs
movsb
inc
push
or
lahf
or
pushf
xor
fcmovne
out
and
cmpsb
adc
sbb
cmp
and
fdivs
subb
push
lods
sub
add
jmp
inc
cwtl
into
lcall
add
dec
lret
call
es
jecxz
int
sbb
mov
xchg
sbb
mov
jg
sub
clc
and
scas
cmc
sti
sbb
aas
gs
ret
outsl
inc
and
jle
aam
adc
and
lret
loop
subl
and
out
std
imull
icebp
xchg
cmp
mov
pop
lcall
push
jl
lods
or
mov
dec
mul
add
mov
mov
into
fistpl
xchg
sbb
test
test
lds
push
jo
test
sub
jmp
sbb
pcmpeqb
test
mov
movsb
pop
dec
iret
mov
push
rcr
or
fsubrl
in
cmp
push
call
outsl
lahf
push
fcomps
sbb
add
ficompl
push
ret
jecxz
xchg
rcll
xchg
int
lods
stc
mov
inc
push
in
xchg
mov
jl
arpl
xchg
jne
inc
dec
mov
inc
repnz
add
push
push
xchg
dec
sbb
mov
rcrl
xlat
fcompl
mov
shl
xchg
pop
push
pop
ja
call
lahf
lds
in
sbb
cli
xchg
sarl
shlb
arpl
loop
sub
add
scas
repnz
xor
arpl
add
ret
mov
add
jg
adc
mov
adc
fs
cli
or
jne
in
mov
iret
lret
inc
ljmp
sub
sbb
pop
sbb
add
lret
movl
xchg
lcall
or
jp
imulb
jne
fs
imul
lods
and
pop
test
cmp
lds
jbe,pt
pop
mov
ja
shlb
mov
mov
cmpb
popa
xchg
inc
mov
cmp
sbb
xchg
rclb
int3
xlat
or
ja
push
pushf
mull
sahf
pop
movl
pop
int3
push
inc
push
push
add
cmc
fisttpll
mov
imul
inc
aam
cmc
push
mov
xor
mov
pop
inc
cmpsl
out
dec
lods
das
dec
bound
dec
and
sbb
cmp
insl
fwait
das
jmp
xchg
and
dec
sub
push
push
jnp,pt
shll
pushf
ret
mov
iret
push
mov
jl
orb
or
sub
or
out
arpl
addr16
fs
sub
bound
fsubrl
lret
mov
test
xchg
cs
mov
mov
mov
push
inc
dec
mov
adc
pusha
cmc
dec
das
lahf
mov
xchg
into
insb
pop
test
sub
jge
test
lahf
roll
ja
es
repz
push
cld
dec
mov
sub
aaa
mov
test
add
adc
mull
fisubs
lret
popa
jmp
push
je,pt
push
shlb
fcmovnbe
dec
jge
in
adc
lods
mov
rorl
lods
jmp
push
mulb
lea
nop
stos
sbb
sub
test
js
push
notb
mov
ja
repnz
loop
add
mov
hlt
test
adc
out
xor
adc
push
imul
mov
xor
rcr
or
sti
into
das
and
fldl
pop
adc
mov
inc
mov
stos
mov
push
inc
sbb
outsb
sbb
mov
or
cmp
or
or
jg
mov
and
cwtl
push
mov
fisttpll
add
andb
sbb
adc
lret
push
scas
aam
adc
cs
or
inc
sti
aad
in
lret
inc
daa
loopne
mov
dec
or
std
jl
push
popf
inc
test
fcoml
cmp
cmp
and
insl
cmp
inc
nop
jbe
xor
cwtl
mov
or
aam
xlat
and
xor
gs
fmull
mov
iret
gs
aam
aaa
mov
jo
std
and
push
xor
cld
push
pop
mov
cmp
adc
or
sub
repnz
mov
ficompl
pop
ja
rorb
push
ja
pop
lods
lods
repz
mov
fmuls
arpl
rorl
sbb
loopne
aas
out
mov
shlb
cli
in
fbstp
aaa
notb
ret
out
cld
hlt
add
mov
mov
jecxz
mov
mov
inc
xchg
jno
addr16
cmp
dec
or
fdiv
sbb
cld
jb
mov
sub
mov
stc
adc
stc
push
arpl
cmp
iret
mov
lds
je
js
sahf
cmp
sahf
adc
lret
xchg
in
dec
int3
mov
arpl
sub
jle
inc
lahf
aad
adc
std
fbstp
sub
je
jmp
xor
or
in
cwtl
stos
cmp
in
adc
jp
jb
xor
add
or
jmp
orl
pop
sti
shrb
aaa
cs
lahf
sti
xchg
jmp
jle
decl
dec
mov
add
cmpsl
movsl
lock
aaa
push
mov
xorl
push
enter
dec
in
cmp
adc
mov
dec
sar
out
mov
push
adc
and
test
sbb
add
insb
es
and
pop
push
inc
xchg
call
mov
fstpl
dec
and
jmp
xchg
test
mov
dec
fldenv
pop
leave
and
int
loop
adc
xor
fs
cmp
sub
dec
jg
in
xor
sbb
pop
sub
xchg
or
popa
in
add
push
imul
fwait
bound
leave
jae
lea
adc
mov
lcall
push
inc
addl
repz
aaa
pop
mov
inc
mov
leave
jno
pop
inc
mov
adcl
and
add
test
shl
or
push
int
adc
jmp
repz
decl
ret
scas
xor
mov
aas
int3
jb
pop
fisttpll
enter
push
das
lcall
xor
inc
leave
fsubl
sub
xchg
adc
cmp
ja
std
jge
jg
shl
in
inc
pop
xor
inc
pop
xor
cli
les
stos
xchg
xchg
xor
hlt
lret
inc
dec
jno
inc
add
xchg
adc
imul
call
fxch
imulb
clc
mov
adcb
cmp
es
mov
dec
iret
aaa
inc
mov
sbb
sub
mov
sbb
adc
adc
repnz
and
or
jno
pop
addr16
push
popa
dec
adc
mov
jne
lds
in
fsubrl
iret
add
mov
scas
mov
lret
clc
imul
jae
adc
push
ss
xchg
dec
mov
insl
lds
dec
cmp
mov
ljmp
test
dec
mov
add
xor
mov
insl
lea
loopne
inc
js
rcl
les
adc
stos
lret
dec
mov
push
add
cmc
jmp
sbb
arpl
cltd
jno
loope
adc
iret
test
jmp
cmp
into
cmp
sbb
cs
aam
and
hlt
cmpsl
sub
xchg
mov
push
mov
loop
mov
adc
mov
xor
fldl
jge
cltd
mov
test
out
mov
fistpl
call
rorb
dec
push
je
pusha
scas
or
lea
sbb
push
fistpll
movsb
daa
jp
int3
jbe
push
hlt
fistl
dec
fwait
loope
in
pop
scas
mov
dec
push
inc
cmp
ficoms
pop
cmp
ret
sahf
aad
mov
mov
jbe
shl
or
pop
int
push
xchg
mov
fcoml
in
push
int3
mov
push
sbb
rcrb
pusha
jle
sar
add
in
int
push
je
cld
and
lret
jmp
xor
repz
fwait
sbb
lret
or
insl
movsb
fcompl
lahf
xor
jb
sbb
pop
push
movl
push
or
mov
mov
fwait
mov
push
call
mov
out
outsb
int
stos
fidivrl
data16
test
cmp
dec
push
ja
inc
fmul
pop
mov
mov
loopne
jae
mov
movsb
sahf
das
into
inc
pop
inc
xchg
mov
pop
fisttpll
push
sub
mov
sub
jbe
cmpl
cmp
shlb
sahf
scas
cwtl
dec
pop
stos
stos
repz
test
andb
mov
mov
or
mov
mov
push
mov
test
std
cmp
mov
add
into
shll
int
mov
sub
jp
xor
repnz
push
in
add
xor
pop
xchg
inc
arpl
subb
pop
mov
jne
out
or
cmp
arpl
push
inc
es
lret
or
add
fcomps
mov
call
push
mov
push
rolb
adcb
and
mov
loopne
add
adc
push
jmp
popf
pop
push
dec
ret
iret
das
and
sbbl
js
inc
inc
imul
addl
pop
pop
sbbl
ds
sti
shrl
imul
insb
push
xor
gs
mov
lret
rcrl
ficomps
xlat
jge
mov
and
and
push
push
add
into
dec
rolb
cltd
push
dec
jns
cli
pop
xchg
loope
mov
push
outsl
pushf
cld
sbb
adc
jmp
clc
xchg
movsb
xor
subb
repnz
sub
orl
push
push
push
jne
mov
mov
mov
movsb
ret
xchg
scas
nop
sbb
rcll
dec
ds
icebp
paddd
mov
or
push
out
push
cmp
xor
or
aaa
cmp
mov
mov
dec
repnz
testb
cwtl
rcrl
jge
pop
rorb
dec
imul
fsubl
jmp
sub
push
scas
test
mov
adc
lret
jge
out
scas
cmp
or
mov
aad
sbb
jg
adc
inc
lds
jecxz
jle
xchg
push
mov
and
das
inc
and
push
int
ficoml
jns
in
add
adc
adc
ljmp
les
push
mov
outsb
jl
mov
shl
xchg
xlat
out
mov
test
cs
aaa
or
lret
les
in
mov
push
rep
add
mov
xchg
cltd
mov
test
push
dec
add
cmc
movsl
fcompl
pop
idivl
dec
sahf
xchg
jne
inc
movsl
pop
cmp
sbb
xor
dec
xchg
or
cmc
mov
add
fidivl
adc
adc
xchg
sub
mov
push
orl
or
rorl
filds
lret
shll
xchg
in
insb
outsb
add
mov
inc
mov
icebp
out
clc
je
mov
xor
mov
sub
gs
adc
imul
js
mov
std
stos
jno
testb
sbb
imul
pusha
out
mov
jp
adc
into
cmpsl
or
mov
or
pop
out
es
fs
pop
push
aad
mov
xchg
ds
fnsave
pushf
mov
and
js
pushf
in
das
pop
mov
cld
cmp
push
inc
js
lods
adc
cmc
ret
mov
xchg
pusha
xchg
sbb
cmp
psubsb
add
stos
cmpb
les
or
adc
sbb
cmc
sub
les
das
out
dec
push
inc
lock
in
mov
push
pop
fcoml
fsubl
mov
rol
mov
imul
cltd
pavgw
xchg
iret
sahf
and
flds
jmp
divl
pop
or
lahf
mov
scas
int
sarb
cmp
sub
inc
sbb
push
add
lods
mov
sub
pop
movsb
and
push
subb
mov
lret
sti
jle
xor
in
imul
jbe
imul
push
jns
in
push
mov
aad
inc
inc
lea
loopne
or
mov
jne
sbb
and
outsb
repz
outsl
xchg
mov
adc
outsl
arpl
mov
out
or
jbe
mov
jb
fldt
add
push
mov
gs
pop
mov
mov
mov
adc
cmpsb
sbb
adc
out
mov
outsl
cmc
sub
mov
xchg
lods
iret
outsl
lret
dec
out
pusha
mov
mov
call
fnstcw
ss
sub
ss
movsl
jl
cmp
xchg
xor
xor
jno
stos
adc
jnp
pop
adc
or
inc
inc
jno
movl
or
cmp
scas
daa
sub
cmp
sub
fst
cmp
or
xor
outsl
sbb
sbb
jbe
test
adc
mov
push
movsb
and
xchg
ds
push
fwait
or
jb
fildl
inc
arpl
adc
jnp
repnz
mov
or
loope
in
inc
xor
mov
ja
mov
push
mov
test
push
push
xor
add
push
push
lcall
mov
movsl
xchg
in
cltd
cld
jno
aam
mov
mov
inc
ret
aaa
mov
or
outsl
pop
adc
add
pop
mov
movsl
xchg
ljmp
jg
xor
xlat
int3
add
int3
dec
jge
cmp
leave
sarb
ficomps
sti
pop
sar
or
jge
xchg
and
jge,pn
inc
or
mov
outsb
mov
push
loope
dec
rcr
sub
sbbb
les
stc
outsl
jnp
mov
sbb
in
icebp
gs
add
xchg
in
data16
jo
out
and
add
and
dec
cmp
dec
jo
or
jecxz
add
or
sub
mull
fwait
repnz
or
stos
ret
dec
mov
cmp
pop
sbb
mov
mov
call
iret
sub
mov
out
sub
aaa
test
fs
jmp
neg
inc
into
dec
push
mov
push
sahf
imul
mov
lret
xor
aas
lcall
push
mov
mull
sub
mov
lahf
pop
or
out
add
inc
divl
lahf
mov
movsl
popa
pop
mov
das
dec
sub
push
adc
fidivs
xchg
mov
into
imul
repz
fstl
adc
adc
inc
and
mov
and
cmp
popa
add
insl
jo
mov
loop
xor
aaa
add
mov
setge
std
pushf
push
pop
aam
add
jmp
test
inc
push
pop
push
xchg
es
sub
jno
mov
cmp
pop
add
mulb
add
push
pop
rcll
push
add
popa
mov
daa
ds
insb
sbb
movsb
in
std
fiaddl
mov
mov
out
mov
cmp
mov
xor
orb
pop
out
jle
mov
loopne
test
add
push
outsl
pop
push
les
fnsave
mov
jb
xlat
lods
je
dec
inc
das
int
cmpsb
rcll
fldcw
push
sbb
aad
clc
inc
jno
cltd
inc
jmp
xor
adcb
jl
sbb
dec
sub
sbb
sub
aas
cmc
push
mov
shlb
ds
iret
sub
sbb
mov
or
mov
call
in
add
in
pushf
out
movsb
call
out
es
enter
mov
popf
and
push
pop
mov
test
or
xchg
rorb
shlb
jle
movb
sbbl
xchg
fisubrl
sub
icebp
xchg
arpl
andl
and
ja
dec
int
and
iret
outsb
jle
lret
test
insl
adc
shll
arpl
or
lcall
insl
inc
data16
iret
sub
xor
jo
add
dec
mov
ss
add
mov
inc
repz
or
imulb
test
fnsave
fnstsw
xchg
mov
sahf
aad
sub
inc
scas
inc
adc
cmpsw
mov
ja
push
xchg
decb
and
or
incb
aaa
sbb
cmpl
out
sub
cltd
jecxz
inc
shrb
pop
xor
popa
push
adc
js
inc
repz
and
fcom
ljmp
pushf
jp
push
cmpsb
fisubrs
sbb
ljmp
sbb
push
lret
ret
out
sbb
jb
insb
daa
in
mov
fimull
push
loope
add
xor
adc
inc
iret
clc
adc
xchg
cwtl
sbb
insl
mov
imulb
enter
sti
cli
cltd
jle
xorl
mov
lods
xor
mov
je
xchg
mov
jmp
pop
xor
stc
push
seto
cmpsl
mov
jb
mov
ret
mov
push
lods
inc
push
xchg
mov
shrb
add
push
fsubl
dec
cmp
lds
mov
into
shr
jne
roll
or
popf
mov
xor
es
cmpsb
addr16
jecxz
subb
repz
loopne
cmc
stos
add
mov
and
popa
xchg
mov
fiadds
sub
mov
loopne
jo
push
cmp
push
inc
cld
jbe
in
lahf
call
insb
fisubrs
in
roll
mov
in
in
ret
ret
ja
inc
hlt
in
inc
jae
ljmp
xor
popf
pop
sbb
xchg
mov
mov
pop
cwtl
lods
sub
pop
insl
scas
pusha
mov
dec
inc
add
push
xchg
or
inc
int3
cmc
push
jns
xchg
and
fadds
and
imul
sub
int
mov
mov
and
xchg
push
push
aaa
fstps
add
and
jge
jp
test
inc
lods
cmpsl
fidivrl
insb
dec
mov
push
stos
jb
adc
cmp
xchg
out
adcl
mov
mov
cmp
lret
adc
push
or
jne
std
mov
and
add
roll
pop
sub
nop
out
mov
fcompl
lods
mov
pop
jmp
add
pop
mov
test
out
mov
daa
ljmpw
xchg
push
jno
or
lcall
mov
mov
xacquire
jbe
inc
mov
out
cld
dec
rclb
cld
cli
mov
mov
lock
push
sti
sbbl
loop
and
mov
test
cltd
fsubl
push
or
cwtl
ss
leave
sub
std
les
ficomps
loopne
sub
cli
lock
pop
lahf
pmulhuw
fwait
es
mov
aad
lods
add
mov
mov
test
or
sub
push
and
in
pushf
out
fisubrs
push
xlat
lcall
jbe
xor
cmp
ret
hlt
jne
or
dec
push
add
jg
test
roll
std
loopne
call
mov
sbb
jl
hlt
in
pop
xchg
xor
fidivrs
dec
test
imul
std
xchg
fiaddl
je
add
imul
jae
jae
dec
jg
fdivl
cs
jmp
test
aaa
or
sbb
dec
mov
aaa
fs
xchg
int
fistps
cmc
stc
mov
stos
mov
nop
jo
rcrl
enter
pusha
xchg
nop
lret
bound
xchg
inc
in
xor
adc
or
int3
and
cs
jge
loope
and
stos
pop
mov
dec
fsts
test
mov
dec
push
les
and
sub
dec
or
filds
lods
xchg
xchg
mov
movsb
push
shr
or
repnz
sub
lcall
rclb
hlt
sahf
push
sahf
sub
dec
cmp
xor
es
and
out
gs
into
lea
mov
movsb
push
ljmp
nop
cmpb
ss
and
call
sub
pop
sbbb
or
sub
int
add
repz
arpl
xchg
imul
push
scas
xchg
mov
shlb
mov
and
fwait
adc
push
data16
gs
shlb
adc
mov
mov
pop
insb
inc
loop
leave
sub
and
lret
ds
and
pop
add
mov
cmovo
or
jne
mov
adc
sub
sub
fisubs
cli
xchg
lock
data16
outsb
adc
aas
inc
cli
sti
sub
iret
push
out
xchg
mov
imul
push
decb
adc
mov
dec
cmc
jg
fs
pop
fst
orb
push
sub
inc
dec
push
leave
xor
lods
adc
int
mov
mov
xor
inc
or
mov
dec
jnp
push
sub
sbb
pop
push
in
fisttpl
sahf
push
mov
mov
mov
and
add
or
or
test
hlt
mov
push
pusha
adc
add
cmp
adc
arpl
repz
push
xor
in
mov
xor
push
adc
out
imul
stc
push
mov
mov
lret
fisubl
pop
in
repz
jo
jbe
xlat
mov
gs
addr16
lahf
jge
jmp
pop
push
sbb
mov
lahf
cmp
idivl
mov
aam
xchg
movsb
hlt
sbb
out
es
loop
jl
movsb
cmpsl
movsl
xchg
lcall
sub
imul
cmp
cli
dec
ss
mov
dec
and
mov
out
adc
or
cmp
rcrl
adc
mov
inc
dec
cmp
mov
out
dec
mov
and
jmp
iret
cli
mov
cmpsl
jecxz
mov
sbb
lea
ss
mov
aam
outsl
iret
push
push
ds
pop
push
scas
iret
and
jl
fadds
jmp
mov
daa
psrad
pushf
fsts
in
push
lret
add
in
inc
sahf
movsb
scas
fsubr
in
push
push
push
es
out
aad
daa
push
subl
mov
ds
lcall
sub
stos
insl
pop
xchg
pop
int
mov
jmp
dec
add
inc
cli
lret
repz
in
push
dec
scas
sbb
pop
xchg
call
xor
ficompl
xchg
add
repnz
hlt
adc
lods
loope
fs
cmp
lahf
mov
pop
popa
xor
jle
ljmp
jo
xchg
xor
dec
loopne
or
mov
jns
pop
ficoms
jno
inc
add
outsb
std
addr16
inc
mov
sbb
jne
ljmp
repnz
cmp
jmp
push
dec
push
adc
stc
xor
sbb
cli
bound
dec
insl
stos
mov
les
int
dec
sub
mov
orl
test
cmp
cmp
jae
and
in
scas
lods
jbe
xlat
add
mov
aam
and
xchg
mov
jnp
loop
filds
sahf
xchg
and
orl
mov
daa
inc
mov
loop
and
inc
push
jb
inc
shll
push
add
ds
jne
sub
orl
cmp
repz
pop
nop
inc
or
arpl
xchg
aad
pushf
gs
mov
ror
loop
movsl
push
xor
push
shl
ljmp
dec
stos
aam
xchg
aas
add
cmp
jbe
dec
jmpw
inc
push
xchg
mov
stc
cmpsl
pop
test
stos
adc
in
imul
repnz
insl
scas
sahf
mov
insb
add
mov
hlt
jmp
inc
add
pop
imul
or
imul
xchg
push
xchg
adc
push
arpl
aam
movsl
and
mov
les
mov
xor
les
sub
int
mov
fcoms
shrb
mov
and
and
pop
jp
iret
arpl
jg
adc
mov
adc
popf
cltd
push
cwtl
nop
pop
in
xor
jge
insl
scas
jnp
and
mov
insb
sbb
imul
sub
ljmp
clc
jge
jge
jb
mov
sub
mov
mov
push
test
and
cmc
pop
pcmpgtd
xchg
pop
sub
aas
imul
adc
add
loop
add
mov
arpl
jmp
rcrl
adc
dec
cmpsb
int
xchg
out
ljmp
pushf
cmp
js
or
cmp
sub
jmp
outsl
arpl
dec
push
pop
les
sub
xchg
loope
cmp
jp
ret
dec
add
xchg
push
stc
sbb
sub
dec
inc
testb
sbbl
sub
outsl
lds
lret
fcompl
test
xlat
in
std
or
mov
cmp
dec
adc
pop
lds
incb
lret
dec
nop
inc
add
lcall
leave
lods
ja
pop
cmpsw
sbb
lods
cli
jmp
movl
fs
pop
xchg
pop
cmpl
scas
outsl
push
xchg
sub
pop
and
ss
pop
sbb
dec
dec
das
dec
push
jle
or
dec
fs
jg
adcb
notl
lds
adcb
test
aad
pop
mov
mov
mov
mov
sbb
or
inc
out
scas
adc
std
cwtl
adc
sub
adcb
ret
ja
mov
testl
data16
das
mov
jmp
add
mulb
cli
and
or
imul
aaa
mov
cmpsb
sub
push
or
aad
flds
sub
cmp
fimull
jb
stc
or
and
and
sarl
pop
pop
cs
push
bound
xchg
inc
call
fsubrs
les
dec
jo
push
imul
jne
mov
xchg
in
xchg
stc
mov
inc
pop
push
mov
out
stos
mov
scas
xchg
mov
adc
je
movsl
pop
cs
mull
push
jne
enter
cmp
pop
call
subb
in
jnp
not
fwait
mov
jne
and
mov
mov
movsl
lcall
decl
pop
xchg
pop
push
jecxz
jmp
nop
stc
pop
adc
adc
test
cmpl
dec
add
roll
jo
into
cmp
fst
outsl
mov
add
cli
fiadds
cmp
mov
stos
pop
sahf
stos
xchg
and
pop
add
push
psllw
in
jge
lods
lods
in
sub
mov
mov
aam
and
adc
lret
dec
add
mov
fisttpl
inc
sub
addl
stos
jbe
pop
std
hlt
out
jmp
sub
scas
cmp
ds
adc
add
add
mov
adc
clc
test
mov
into
push
jle
mov
stc
iret
call
adc
mov
ljmp
sbb
push
xchg
sub
out
insl
iret
sub
mov
cmp
dec
push
in
xor
fcomps
js
mov
insb
sbb
xor
sbb
aam
dec
sub
adc
dec
mov
jno
jg
mov
mov
fbstp
movsb
loope
xor
jecxz
out
sahf
int3
mov
cmpsl
ds
mov
sti
cmpsb
jnp
push
mov
inc
pop
sub
jne
xor
mov
xchg
out
push
loop
push
lret
out
xchg
cmc
jmp
scas
xchg
lock
lds
mov
inc
insl
aad
pusha
rcrb
sbb
mov
fidivrl
rcl
lock
cmp
adc
jno
icebp
inc
push
mov
orl
mov
pop
into
data16
jle
mov
mov
stos
pop
popa
sub
push
inc
xchg
mov
repnz
xor
jnp
jne
mov
xchg
xchg
xchg
sub
push
xchg
movsl
mov
pop
adc
push
cmp
pushf
clc
fisubrl
dec
inc
push
cltd
and
xor
push
daa
xor
sub
lret
das
sub
dec
xchg
rorb
mov
dec
mov
not
leave
iret
sub
hlt
imul
mov
ficoml
or
and
in
repz
pop
mov
pop
cmpsl
mov
daa
movsl
fistl
cs
outsb
ja
addb
lea
mov
nop
lds
dec
pushf
clc
inc
xchg
xor
mov
hlt
jo
xor
ret
inc
cwtl
jns
enter
sti
jne
xor
add
push
sbb
lahf
jae
xchg
out
jne
jno
push
in
dec
nop
and
enter
pop
inc
pop
mov
push
mov
leave
dec
ret
jno
dec
cmp
xchg
mov
es
jecxz
xchg
adc
hlt
or
stos
xchg
xor
or
or
mov
adc
sarb
add
cwtl
sbb
inc
push
pop
imul
out
in
orl
push
mov
push
cwtl
mov
insl
inc
test
dec
mov
imul
nop
outsl
dec
jg
test
rcrl
xor
in
push
cld
in
xchg
cmp
loope
fwait
popf
xlat
push
inc
std
mov
cltd
fcmovne
mov
out
pop
inc
xchg
xor
or
cmpsb
clc
cs
lea
out
dec
call
xchg
mov
dec
fwait
ss
and
inc
jnp
lahf
push
jae
out
loopne
push
das
loope
and
int
and
movsl
popw
mov
xchg
cld
fdivl
ficoml
mov
sbb
loop
dec
dec
loopne
ror
cmp
sub
jnp
rorb
repnz
sub
pop
inc
cmpsl
push
push
cmp
and
mov
dec
pop
out
ds
cmpsl
pop
das
pop
je
mov
inc
decb
lcall
aam
dec
sbb
rclb
push
pop
sbbl
sbb
and
dec
outsl
mov
in
add
clc
dec
stos
xor
jecxz
sub
icebp
push
inc
int
mov
pop
andb
pop
dec
cld
xchg
icebp
mov
mov
jl
jl
cmp
addr16
cmp
lret
movsb
addb
push
fidivs
stc
jg
orb
xor
ds
dec
es
insl
adcb
jnp
lcall
mov
mov
inc
jl
popa
ds
or
cltd
xchg
xor
cmpsl
pop
in
test
inc
or
push
std
xor
mov
pushf
xor
mov
jge
or
mov
outsb
push
mov
arpl
in
or
or
cltd
mov
movsb
push
aaa
int
mov
imul
popf
cmp
jmp
jmp
shlb
pop
imul
xchg
popa
push
sbb
popa
mov
mov
mov
sbb
insl
mov
xor
cmp
into
and
sub
clc
jo
pop
push
cld
mov
lock
xchg
pop
add
in
mov
nop
rcll
add
dec
jl
rclb
sub
and
mov
adc
jecxz
add
lcall
hlt
test
fwait
subl
jp
jb
mov
jp
adc
test
mov
jbe
xlat
bound
pop
and
mov
stc
push
loope
sub
mov
cmp
aam
lahf
dec
outsb
mov
adc
or
add
xlat
repnz
mov
dec
das
fcmovu
hlt
mov
mov
ret
iret
push
ret
lock
and
popa
mov
movl
pushf
fisubrs
pop
push
jp
sub
lea
xor
in
scas
outsl
lds
aad
adcl
shrb
lock
iret
call
out
push
jo
stc
push
imulb
jl
lds
mov
cltd
das
pop
push
jae
pop
inc
into
mov
cmp
repz
mov
add
es
nop
jmp
adc
lds
fstpl
frstor
jne
jle
pop
or
jp
pop
push
adc
sbb
mov
xchg
jge
pop
sbb
add
cmc
inc
jmp
das
std
outsl
push
adc
and
test
pop
mov
out
jno
jg
shrl
push
mov
or
loop
mov
adc
push
push
shll
rorb
or
push
lahf
add
lcall
push
sbb
insb
adc
mov
out
rcrb
sbb
jmp
push
mov
or
or
jmp
push
loopne
out
dec
jbe
pushf
cmp
inc
and
pusha
sbb
pop
cmp
negb
cli
inc
sbb
push
fwait
cmpsl
mov
pop
sbbb
push
adc
jns
stos
xchg
jmp
leave
bound
je
test
testl
test
xchg
int
dec
lahf
out
shll
mov
sub
add
adc
mov
mov
mov
lret
iret
and
sub
jb
jge
int3
xchg
xor
cmp
adc
pop
ljmp
dec
sbb
and
jp
cld
or
in
int3
push
push
jae
jp
inc
call
xchg
lret
imul
loopne
xor
stos
xlat
jmp
mov
in
rorl
sub
cmc
xchg
cs
idiv
ret
adc
in
dec
int3
mov
push
cmp
add
scas
pop
orl
mov
push
add
sbb
imul
add
pop
arpl
pop
dec
test
cmpsl
les
outsl
mov
rclb
sbb
negl
xor
ficoml
insb
sub
mov
cmp
call
icebp
dec
xchg
push
sti
sbb
mov
cli
daa
sub
add
xor
mov
add
pop
scas
pop
insl
xor
xor
lahf
fs
cmpsb
push
in
mov
out
mov
ret
in
adc
sub
mov
repnz
mov
ret
jecxz
test
xor
aad
es
xchg
jl
mov
mov
stc
aam
imul
fmuls
and
nop
cmp
cli
jle
push
mov
sbb
cmp
cmp
push
rcl
int
rorl
jnp
sbb
sbb
mov
jge
fadd
insl
or
xchg
mov
mov
sub
repnz
inc
add
mov
enter
insl
jg
cltd
pop
movl
bound
mov
xchg
incl
shlb
dec
popl
sub
and
ds
push
dec
inc
cmp
ss
fucomp
andb
enter
leave
rcl
lds
pop
mov
out
jns
test
fs
into
out
es
xchg
mov
mov
sub
int3
lock
adc
mov
shlb
mov
jne
jl
repnz
sti
mov
jge
sbb
mov
xchg
inc
xor
mov
js
shlb
sub
cmpsb
scas
aas
or
mov
mov
adc
pop
cmp
sub
mov
and
mov
mov
cltd
jno
test
sub
mov
push
sbb
lret
adc
repnz
insl
jb
push
xor
pop
and
inc
cmpsb
add
cmp
sub
push
xchg
icebp
push
arpl
xlat
sbb
nop
fucomp
cmp
in
incl
fsubrl
jno
pop
fidivrs
sbb
mov
mov
shlb
insl
cld
adc
bound
stos
xchg
fdivrl
nop
lret
xchg
sub
out
stc
pop
iret
loope
inc
enter
jge
push
xchg
sub
push
enter
sbb
mov
mov
mov
cltd
jno
bound
jmp
je
and
push
mov
or
popf
jbe
xchg
incb
dec
repnz
sbb
push
xchg
or
push
enter
jnp
adc
icebp
clc
lea
lea
push
jne
mov
dec
inc
btr
aad
pop
fimuls
push
push
adc
or
cwtl
jl,pn
mov
lea
fld
cld
push
or
push
pop
loopne
pop
mov
jle
ja
add
pushf
mov
fcoms
lock
incb
imul
pop
clc
loop
ret
and
sub
fwait
push
cmp
sub
in
jg
dec
pop
cmc
mov
push
outsl
mov
lcall
out
imul
movsb
lret
mov
sbb
mov
fdivp
int3
xchg
add
cwtl
ror
dec
push
cmp
fistl
into
pushf
adc
loopne
sbb
mov
inc
fs
mov
dec
sub
ja
pusha
push
pop
pop
cmpsl
mov
cmp
call
int3
clc
mov
mov
out
scas
adc
mov
sub
sub
cmc
dec
subb
pop
pop
cmp
push
cmpsl
call
mov
inc
pop
sub
lret
adc
push
lcall
test
test
inc
stos
xchg
pop
xchg
or
arpl
test
add
and
inc
xor
xlat
bound
rorl
jp
insl
rcrb
repnz
push
mov
xor
jae
das
iret
inc
in
ja
daa
mov
push
xchg
out
clc
loope
sub
cwtl
and
pop
push
inc
adc
movsl
movsl
rcrl
xchg
subl
jns
outsb
loop
add
imull
cmp
cmp
lahf
pop
test
jno
mov
and
fstpl
jae
scas
inc
and
std
ss
rcll
imul
pop
pop
es
xlat
mov
test
jb
sbb
xor
xor
out
sub
ficomps
das
mov
push
popa
call
loopne
dec
insl
arpl
inc
add
into
aad
inc
fdivr
out
mov
or
or
repnz
inc
fnstenv
xor
lahf
sub
scas
cmp
cmp
jo
notl
mov
pop
outsl
sub
lea
cmp
pop
sub
shl
xor
mov
xor
mulb
mov
out
inc
or
ljmp
lret
and
push
push
sbbl
call
inc
rorb
mov
in
aam
aaa
das
xor
add
xor
comiss
jo
into
lret
add
aaa
or
sbb
add
mov
inc
mov
js
xchg
adc
repnz
imul
imul
and
mov
push
sahf
push
les
xchg
lret
and
xor
orb
sbb
xor
sub
shrl
cld
mov
pop
push
pop
push
movsb
bound
xor
mov
jge
lods
leave
cmpsl
xor
jge
ds
or
push
sub
push
inc
enter
jbe
inc
mov
add
xor
aaa
xorb
xor
mov
outsb
out
xchg
loope
cmp
inc
dec
dec
ds
jb
loop
outsl
lds
fsubrl
xchg
jae
xchg
mov
filds
sub
dec
popf
sahf
mov
cmp
ljmp
inc
repnz
cmp
test
push
or
fs
adc
push
sub
filds
mul
js
addb
pop
fs
das
push
jle
movsb
xchg
loope
lock
pop
repnz
xor
push
jmp
push
mov
or
ljmp
and
or
fcompl
or
or
jbe
mov
cmp
lcall
mov
push
mov
daa
inc
dec
rolb
or
negl
jg
dec
jge
testb
sbb
call
push
shrl
adc
lds
and
cmp
inc
dec
mov
or
outsl
xchg
mov
pop
push
mov
lahf
push
aam
daa
jle
rorl
aas
daa
push
fstpt
xlat
out
cmp
jno
stc
mov
scas
in
lea
inc
rclb
push
inc
iret
cli
add
push
leave
rcll
movsb
subl
in
jge
outsb
jne
bound
lds
xchg
or
aam
pushf
sub
rorb
arpl
mov
fildll
jne
loop
sub
xlat
popl
test
and
out
iret
jle
rolb
in
push
lahf
adc
int3
jno
out
mov
and
cmp
pop
nop
inc
int3
xor
or
enter
xchg
aam
gs
push
cmp
dec
sub
icebp
sub
stc
mov
push
cmp
imul
je
xor
shll
xor
and
fisttps
and
in
int
fsubr
lods
inc
adc
push
stos
push
cmp
popa
out
xchg
mov
bound
jne
es
std
jne
fs
sti
jp
test
mov
jo
fucomp
andb
or
sub
inc
mov
mov
bound
fldcw
fwait
dec
and
cld
cmp
shll
cli
pop
jns
pusha
jns
adc
test
cld
push
add
adc
cmpsb
cli
jp
xchg
iret
push
pop
xchg
mov
cmp
xchg
int3
pop
push
jb
icebp
sub
xor
cltd
lods
stos
xchg
push
dec
mov
add
and
shrb
sbb
mov
jns
sahf
cmp
dec
jge
rcr
test
sub
push
mov
aaa
fisubs
or
cld
lahf
push
lds
outsl
aam
pop
movsb
pushf
aam
dec
lret
or
js
scas
cmp
and
cmp
rolb
push
bound
popa
call
sbb
sbb
fcmovbe
inc
mov
dec
adc
add
mov
xor
pop
jbe
jmp
mov
movsb
inc
sub
enter
inc
fidivrl
lods
das
jae
mov
or
cmp
and
and
push
test
gs
out
pop
test
nop
mov
stos
xor
jg
fwait
ja
cli
out
mov
sbb
rol
scas
stc
ja
hlt
jecxz
mov
dec
sub
testb
pop
xchg
idivl
into
outsl
mov
or
cwtl
mov
nop
pop
cmp
pop
add
dec
jb
stos
xchg
sbb
jecxz
fildll
sbb
add
or
push
push
mov
mov
div
sti
scas
sahf
js
jb
call
iret
gs
cmpsl
jo
stos
push
jmp
dec
adc
mov
shlb
sub
pusha
cld
repz
xlat
inc
lret
in
dec
xor
xchg
jecxz
adc
rcr
adc
xchg
xchg
sbb
pop
sub
mov
arpl
or
mov
in
add
cmp
negl
pop
cmp
adc
ja
insb
lcall
das
mov
mov
pextrw
adc
testl
xchg
popa
sar
adc
mov
push
int
pop
lea
inc
sub
loope
mov
push
push
add
ret
mov
xchg
std
repnz
popf
sub
push
xor
adc
jnp
inc
movsb
das
iret
cli
push
jne
icebp
into
out
sub
inc
test
addr16
adc
mov
fidivs
push
lock
cltd
hlt
inc
push
xorl
push
inc
popf
scas
cmp
lret
xchg
jae
movsl
loope
addl
dec
xor
pop
mov
push
dec
mov
inc
pop
sub
sbb
ret
cmpsl
dec
insl
xor
jo
cltd
sub
adc
fmull
xor
and
sbb
or
int3
roll
pusha
arpl
inc
popf
leave
cs
xchg
popf
notb
adc
or
xor
push
insb
iret
iret
xchg
rolb
mov
sbb
pop
inc
xchg
out
xchg
mov
sub
mov
inc
xor
inc
inc
or
sti
repnz
shll
add
inc
loope
inc
jecxz
jp
lods
sbb
scas
and
dec
mov
popf
ss
aas
sub
nop
in
add
sti
xor
movsl
in
adc
add
mov
movsl
and
js
pop
push
mov
add
vandps
sbb
xchg
dec
cmc
add
or
push
or
push
pop
shlb
cmpsl
adc
lcall
mov
jle
rcrb
mov
in
sub
es
int
fldcw
sti
add
and
mov
push
lret
xlat
jle
mov
ds
inc
push
jp
rol
scas
aam
pop
aaa
mov
movsl
movsl
and
inc
insb
inc
add
add
push
push
orb
pop
jbe
mov
pop
jns
cmp
movsb
sti
ljmp
mov
jae
sbb
push
jmp
lret
and
stc
push
pop
enter
in
or
cmpsb
sar
enter
lds
xor
xchg
icebp
cmp
cmpsl
add
sbb
and
adc
ja
fwait
repz
or
pop
pop
push
xchg
xor
scas
dec
lods
xchg
mov
and
mov
flds
scas
fs
in
xorl
mov
xchg
cli
fdivs
ret
hlt
push
aas
push
je
ror
imul
stc
pop
mov
popf
dec
xor
dec
cld
fiadds
cmp
pop
sub
shlb
sti
fnstsw
mov
ljmp
dec
leave
sub
sub
jge
pop
movsb
or
mov
andl
pusha
call
cmp
leave
lock
mov
or
shll
adc
xor
cmp
fbld
xchg
push
ret
xor
sbb
or
cli
mov
and
fidivrs
lods
xchg
jns
cltd
adc
pop
cwtl
loope
fs
ror
insl
js
dec
ss
xchg
shrd
push
lret
aaa
jmp
cmc
repnz
adc
test
inc
adcb
push
subl
xchg
scas
scas
cld
xchg
xchg
or
pusha
jecxz
rorl
out
push
out
cmp
and
not
popf
daa
cmpsb
xor
fisubrl
mov
das
pop
cwtl
icebp
rorb
repz
mov
and
into
movsb
sbb
jb
sub
xchg
psraw
cmpsl
sub
xorl
dec
ret
aas
xchg
mov
cltd
mov
mov
cmpl
jg
icebp
jecxz
xorl
bound
outsl
jmp
sub
dec
subl
pop
and
test
inc
aaa
or
mov
lahf
mov
xchg
push
mov
jmp
insb
ja
jno
pop
mov
push
adcb
mov
inc
pop
out
fs
into
add
movsl
push
pop
out
jle
inc
outsl
pop
mov
rcrb
pop
push
inc
cld
xor
movsl
push
mov
add
push
fdivrl
add
mov
xchg
inc
cltd
outsb
outsl
add
cs
mov
pop
dec
push
jmp
movsb
movsb
sub
pop
mov
test
pop
or
mov
pop
aam
pop
lahf
movsb
and
jmp
outsb
mov
push
ja
sbb
adc
push
clc
cwtl
test
mov
or
cmp
mov
and
and
aad
mov
push
stc
test
fs
sbb
jmp
jns
mov
arpl
jmp
int3
stc
mov
push
insb
rcr
repz
jl
jle
adc
jnp
popf
or
pop
sti
ret
sub
xrelease
add
cmpsl
push
ja
insl
in
xchg
or
loop
cmp
inc
stos
xor
inc
mov
sub
addr16
cmpsb
mov
mov
cmpsb
mov
cmp
pop
lret
ficomps
lahf
aam
lea
pusha
mov
int
insb
dec
pushl
sbb
adc
mov
loope
xchg
int3
push
mov
hlt
jl
sbb
pop
or
mov
adc
and
andb
sbb
arpl
xchg
imul
dec
xor
movsl
cli
xchg
stos
push
and
xor
addr16
pop
or
fiaddl
mov
mov
sbb
mov
mov
insl
xchg
sub
enter
mov
mov
cmp
xor
clc
add
jno
aas
xchg
mov
jge
xor
fcompl
out
lods
xchg
inc
icebp
in
cs
incl
lea
pop
mov
and
scas
pop
fisttpll
test
cmp
inc
sbb
adc
ret
stos
mov
cmp
popf
mov
outsb
mov
push
mov
sbb
mov
pop
pop
out
dec
insb
int3
jg
or
rcrl
mov
mov
cmpb
xlat
push
cmpsb
jmp
lods
movsb
adc
mov
and
sbb
pusha
sti
imull
push
sti
xor
insb
sub
rorb
icebp
fiaddl
pop
pop
or
and
jp
roll
jne,pn
repz
addr16
push
imul
iret
pop
bound
clc
jl
xor
aad
add
or
mov
push
sub
dec
xor
das
cmp
jl
lea
mov
xor
lds
jecxz
ljmp
inc
test
pop
neg
dec
pop
pop
xchg
mov
jno
outsl
int
xor
cs
xchg
hlt
xchg
in
mov
outsb
sub
push
or
imul
or
loop
mov
jae
fwait
add
inc
imul
jae
into
cmpl
inc
gs
pusha
fsts
xor
fnstenv
add
cld
jp
fs
shlb
pop
push
mov
add
push
ficoms
inc
adc
inc
or
es
xchg
lret
cmp
dec
icebp
es
call
jge
mov
sub
imul
mov
push
xor
sbbb
inc
mov
add
lods
mov
pop
cmpb
pushf
lcall
sbb
ds
or
cmpl
adc
xor
add
dec
inc
shr
aaa
jns
fwait
and
mov
ss
std
lcall
cmp
shlb
mov
fcoml
add
push
ficoms
jb
mov
sub
add
dec
adc
jp
fs
sub
lock
push
shl
lahf
mov
add
gs
adc
jp
push
sbb
push
xchg
call
out
mov
aam
cmp
xchg
sub
out
int
nop
cmp
dec
leave
dec
aas
shl
xchg
js
jbe
dec
adc
popa
jnp
insl
jp
out
into
push
sub
jae
pushf
sbb
rorl
xchg
and
inc
ror
aaa
add
outsb
fsubl
repnz
cmp
push
sbb
add
xchg
test
add
stos
sub
jbe
stc
fiaddl
cmp
fcomps
addr16
and
in
sub
scas
out
imul
or
sarl
icebp
jp
mov
std
and
lret
pop
lret
enter
fistpl
xchg
add
int3
std
sbb
shlb
test
lret
insl
imul
mov
ss
nop
call
push
mov
insb
pop
cwtl
push
stos
testl
mov
push
sbb
popa
repnz
add
insb
adc
add
dec
fsub
inc
xor
loope
cmp
leave
call
or
jne
cli
out
pop
cmpsb
sub
mov
les
xlat
mov
fists
pop
pop
xor
or
fnstenv
add
jb
cmp
cwtl
cmpsb
inc
out
add
mov
or
inc
jnp
xchg
mov
mov
jnp
xor
imul
sbbb
sbb
mov
jns
sbbl
int3
hlt
stos
iret
ss
bound
js
push
data16
pop
xchg
out
cmpsb
lret
adcl
mov
fisubs
popf
fwait
hlt
sub
icebp
xlat
push
cmc
es
jo
mov
pop
fstl
sub
mov
pop
jno
xlat
push
add
fstpt
sarl
pop
test
push
jne
shll
cmpsb
stos
lahf
mov
ds
insl
inc
jmp
add
int3
mov
pop
mov
push
inc
in
scas
jg
inc
lea
nop
jge
aad
inc
inc
inc
mov
sbb
mov
lret
jno
enter
cwtl
inc
loope
jo
call
mov
pop
and
pop
sub
jae
shrb
dec
das
lcall
push
fcmove
sub
adc
xchg
movsl
xorl
inc
pop
cld
jae
push
daa
rorl
pop
cs
es
dec
xchg
cmp
xchg
aas
adc
fs
lea
subl
sbb
test
ss
dec
mov
daa
mov
xor
int
ja
lcall
adc
add
sbb
xchg
add
mov
fcmove
inc
mov
mov
lock
mov
inc
dec
adc
repz
and
mov
push
push
and
test
out
xor
mov
dec
insb
mov
mov
or
bound
mov
push
xor
xchg
mov
push
andl
dec
xor
sbb
mov
adcb
add
sbb
or
add
insb
ljmp
out
int
adc
push
mov
in
pop
sub
adc
pop
pop
mov
push
rcl
mov
rolb
push
xor
push
rorl
rorl
cmp
fists
xchg
das
add
and
or
daa
xchg
fstl
insl
mov
ds
stos
rcr
sub
push
arpl
mov
lret
js
insl
xor
imul
in
in
pop
xor
pushf
add
out
push
push
nop
imul
idivl
and
fstpl
stos
out
rcrl
jne
sbb
adc
shll
xor
ficoms
movb
sar
popa
sub
mov
pop
scas
jmp
pop
adc
lods
cmp
dec
insl
call
mov
roll
ficomps
mov
inc
stos
imul
outsl
push
push
jo
jno
std
mov
push
push
int3
mov
xor
push
fwait
sub
pop
je
xor
xlat
or
jecxz
push
xlat
cmp
sbb
push
inc
test
pop
and
cmp
in
inc
aas
sub
fisttps
jno
out
lods
gs
pop
adc
insl
push
or
mov
movsb
mov
rclb
add
cmp
mov
loop
push
or
fsub
xor
pop
mov
movl
cld
dec
int3
test
pop
mov
or
adc
fisttpl
adc
hlt
xchg
push
xchg
push
je
fcmovnb
mov
fwait
stos
inc
xchg
sbb
push
sar
imul
adc
mov
pushf
adc
repnz
push
decb
cmp
and
in
cmp
sub
loope
flds
push
pop
pop
test
or
xlat
sbb
mov
movsl
jo
or
and
inc
pop
stc
sbb
mov
imul
xchg
and
xchg
pushf
cmp
xor
mov
mov
mov
xor
cmp
pop
lds
test
imul
std
jle
sub
or
cmpsl
inc
xchg
or
adcb
and
insl
inc
mov
pop
mov
push
adc
dec
inc
add
neg
mov
mov
dec
xchg
loope
xchg
xchg
push
sarb
int3
xchg
mov
cmp
pop
cmp
aam
cmc
andl
cli
dec
sub
or
dec
mov
rcl
rcl
cli
jno
dec
jno
pop
cli
dec
insl
out
jg
jns
xor
fsubr
mov
mov
xchg
pop
pop
jnp
sbb
movsb
adc
pusha
rcrb
pop
andb
test
bound
ret
jmp
mov
rolb
or
icebp
cltd
jg
mov
or
js
scas
pop
jnp
aas
xlat
hlt
psubusw
ret
push
dec
xlat
sub
into
cmpsl
repz
insb
xchg
push
xchg
mov
lret
fdivp
iret
push
xor
pop
sbb
lods
cmpsb
aas
xor
fldl
pop
jmp
bound
in
inc
mov
or
clc
push
jns
mov
xchg
pop
leave
scas
cltd
pop
pusha
push
pop
hlt
sub
or
push
and
outsl
insl
sub
int3
in
mov
add
xchg
test
scas
mov
push
jb
dec
sbb
leave
and
mov
sbb
jge
jb
inc
inc
ja
jle
loope
mov
push
imul
mov
test
add
nop
dec
push
pop
mov
push
pop
inc
or
das
adc
xchg
dec
or
mov
mov
mov
cmpsl
pop
xor
out
testb
hlt
fistl
jae
xor
loop
adc
mov
sub
ret
pop
or
repnz
lahf
pop
cmp
xlat
jbe
aaa
loopne
out
push
adc
add
push
sbb
popf
sbb
sbbb
fistps
dec
lahf
push
sbb
cltd
fisttps
sub
inc
adc
inc
enter
ljmp
sub
popa
mov
loop
data16
dec
cmpl
add
test
les
stc
inc
dec
lret
les
pop
jne
sbb
test
sub
je
test
out
jb
mov
dec
jecxz
cwtl
sbb
and
in
dec
leave
repnz
mov
pop
lods
fisubrl
jge
cwtl
jae
or
aas
xchg
je
sti
jo
sbb
xor
addr16
adc
and
xor
sbb
shll
in
mov
push
add
rcrl
push
mov
ret
xor
mov
fildl
lds
jl
fwait
mov
aad
pop
or
movsl
repnz
or
mov
adc
int
lds
es
and
adc
repz
test
mov
aaa
andb
or
fimull
fcmovb
dec
inc
shl
test
rorl
jbe
jp,pt
sarl
insl
ret
ja
dec
mov
jl
shl
xlat
clc
rorl
test
add
pop
jnp
pop
push
cmp
filds
js
cmp
popf
fisttpll
fs
or
pcmpeqb
arpl
mov
jmp
mov
std
mov
iret
jp
in
lret
rclb
inc
dec
inc
addr16
and
popa
in
ret
stc
imul
push
or
xchg
pushf
roll
rorb
pusha
xchg
js
or
fildl
out
mov
lahf
das
std
xchg
mov
bnd
inc
loope
ds
xor
fidivs
jae
out
fnsave
aam
rorb
call
call
insb
mov
stc
ret
or
mov
lods
dec
mov
dec
std
lcall
pop
xor
adc
ror
test
enter
dec
cmc
movb
xchg
inc
cmpsl
neg
cmp
test
jle
ja
cli
sub
fisubrs
or
enter
out
jmp
xchg
xor
stos
mov
test
pop
fstpl
sub
xchg
mov
add
pushf
pop
pop
fimuls
in
negl
sub
sbb
imul
ret
cmp
test
cmp
xlat
out
xorl
sub
sbb
jle
imul
cs
fisubl
sbb
xchg
mov
loope
out
push
mov
fimull
bound
xor
mov
notl
sbb
jge
mov
adcl
aas
sub
sbb
pop
ffree
cmp
push
push
inc
movsl
mov
clc
popf
js
mov
dec
in
sbbb
test
sub
cmpl
fistl
fiadds
clc
out
xchg
loop
outsb
or
ljmp
movsb
adc
pop
inc
rcl
dec
xchg
idivl
repz
sub
test
rcrl
jl
pop
jbe
imul
or
call
pop
subb
jge
fildll
and
fs
jecxz
mov
daa
push
inc
cmp
je
xchg
loope
test
test
es
mov
mov
cmp
js
ljmp
iret
push
shrb
dec
dec
xlat
push
lret
repz
pop
and
push
cmpsb
sub
test
hlt
push
int3
call
jl
xchg
int
lret
fsubp
pop
pop
push
sti
pop
shlb
sub
aas
fstpt
mov
xchg
xchg
or
pop
lcall
in
sub
inc
pop
mov
shrl
mov
fs
into
cmp
popa
xchg
xchg
or
test
jge
test
bound
aaa
jecxz
sti
pop
dec
iret
pop
popf
and
outsl
popa
mov
shrb
inc
xor
arpl
add
pop
cmp
faddl
sbb
out
push
hlt
outsb
mov
adc
fsts
out
call
ret
inc
pop
mov
adc
mov
add
mov
jg
ret
pop
mov
leave
in
jp
fstl
and
push
ret
sub
mov
cmp
ficoms
sarl
push
adc
testl
jae
pop
mov
fistpl
inc
ds
mov
pop
std
in
incl
fisubs
jnp
xlat
jne
rolb
in
insb
lahf
fnstenv
push
mov
add
sbb
scas
stos
fsubrl
push
ljmp
cwtl
inc
push
jg
loope
sbbb
and
jae
xor
mov
mov
rcr
fnstsw
lock
dec
mov
add
xor
jb
mov
fs
jb
fldcw
or
xchg
cmp
sub
fwait
popa
push
sarb
pop
or
dec
xorl
pop
xor
dec
jp
loope
insb
scas
divl
outsl
jnp
dec
loop
in
aas
xlat
mov
jg
fwait
or
xchg
xchg
mov
sub
fidivrl
sub
or
mov
cwtl
jne
jmp
push
inc
cmpb
test
dec
mov
hlt
mov
and
adc
ss
lods
lods
insl
xchg
xchg
pop
lock
dec
sub
mov
jne
out
out
sbb
push
xor
popf
jecxz
jne
test
adc
in
fcmovnu
mov
sarb
outsl
lret
lcall
sbb
jnp
jmp
mov
cmp
xchg
nop
les
in
mov
into
test
lds
aaa
shlb
mov
inc
sahf
nop
push
jle
test
xlat
mov
dec
pushf
adc
dec
add
add
into
add
sbb
add
ret
cltd
mov
adc
fs
push
cmpsb
mov
loopne
out
dec
imul
cmp
mov
adc
cmpsl
fbld
stos
andb
inc
leavew
outsl
dec
dec
loope
xor
or
dec
les
mov
or
mov
addr16
pusha
popa
movsb
or
pop
arpl
xor
push
lret
std
xchg
pop
dec
sub
push
fisttpl
pushf
cli
xor
sbb
adc
in
jp
dec
mov
mov
sti
inc
rclb
popf
mov
cld
xchg
inc
pop
xlat
pop
cwtl
rcll
sahf
insb
call
lret
dec
add
or
pushf
or
mov
daa
mov
jl
push
jnp
cmp
fdivl
arpl
fs
mov
fwait
ljmp
rcrb
xchg
ss
pop
shr
jnp
je
push
sbb
mov
pop
xchg
push
jmp
aam
cmp
mov
in
sub
and
test
push
cmp
lret
into
rolb
or
insb
cltd
mov
xchg
mov
inc
ret
shrb
lock
xchg
out
adc
fldenv
cmpsl
or
xchg
inc
repnz
mov
sbb
jb
pop
fdivs
jg
add
adc
pop
jecxz
loopne
imul
addr16
es
cltd
pop
pusha
xchg
shlb
pop
movsl
pop
mov
iret
fidivl
mov
inc
outsb
jo
repz
outsb
adc
dec
push
mov
cli
sbb
sbb
cwtl
mov
sti
mov
jns
rcll
cmp
call
sub
inc
and
pop
add
cmp
pop
aas
inc
dec
and
and
andl
jp
jne
iret
mov
insb
sbb
or
rcll
mov
shrl
and
int3
jmp
call
notl
outsl
popa
adc
add
jb
cs
jl
rcl
lret
sub
mov
push
cwtl
jb
push
pop
xchg
fwait
or
movsb
push
xor
sub
jne
or
scas
out
fmull
aas
sahf
insb
jl
pop
pop
dec
lds
mov
outsb
mov
pop
cmp
loope
xor
loope
cmc
loopne
pop
jmp
sbb
test
xor
daa
push
lea
adc
aas
daa
xchg
pop
adc
mov
ds
jecxz
clc
push
xabort
dec
arpl
idivb
fisttps
mov
pop
xchg
cmp
fnstenv
int3
adc
xlat
mov
mov
mov
in
mov
mov
inc
or
push
inc
stc
pop
cmp
test
test
adc
cmp
add
push
decb
enter
mov
lods
repz
arpl
dec
mov
sbb
push
jns
in
inc
fldt
je
scas
int3
inc
xor
sub
fnstenv
lock
inc
sbb
int
addl
push
testl
pop
push
mov
popa
inc
pop
fnstenv
mov
dec
inc
rorl
pop
fsubrl
jecxz
sub
pop
fsubrl
dec
and
in
in
mov
test
lds
out
imul
test
loopne
jne
add
out
subb
daa
jmp
jae
pop
push
ficoml
cs
inc
cmpsb
cmp
add
ss
or
xor
pop
fiaddl
movsb
in
addr16
pop
rolb
pop
push
lods
xor
fcom
sbb
add
incb
movsb
pop
inc
and
subb
es
push
jo
add
jnp
daa
jle
mov
movsb
js
in
out
cmp
imul
xchg
add
stos
and
test
pop
outsb
xchg
int3
lret
pop
lahf
out
int
sti
jae
or
jno
cmpsl
and
rorl
xchg
popf
scas
movsb
push
fs
ret
mov
repz
les
push
xor
int3
mov
cmpsb
inc
sbb
inc
sbb
push
cltd
clc
ljmp
inc
mov
xor
pusha
ljmp
into
xchg
pushf
xor
in
mov
pop
fisttpll
jmp
lods
xor
adc
and
enter
xorb
loope
cmpb
xchg
sub
shrb
inc
mov
jnp
mov
aam
mov
mov
xchg
ret
inc
leave
insl
mov
xor
arpl
ljmp
push
loope
cmp
aad
aam
pop
cmc
inc
and
fcmovne
push
dec
mov
sub
rcrl
aas
cmp
leave
and
aaa
jle
leave
mov
out
push
push
jge
sub
repz
gs
mov
jecxz
add
sbb
inc
adc
xchg
ror
cmp
lock
pushl
sti
push
add
jb
sbb
data16
mov
xor
sbb
add
sbb
aaa
jns
shrb
adc
sub
les
popf
add
jno
aas
push
lret
iret
subb
enter
sbb
pop
xor
ret
movsb
jne
push
mov
jbe
cmpl
mov
mov
sub
cwtl
cli
jne
aam
xchg
xor
mov
mov
xor
cmp
test
negb
cmc
cmp
iret
inc
ret
sbb
addr16
jp
xchg
push
inc
sbb
cli
movsl
ret
xor
jg
inc
add
sti
dec
sub
add
jae
cld
push
aam
int
fs
popf
inc
jae
jecxz
adc
push
push
mov
jp
repz
aaa
fisttpll
imul
xor
add
pop
ja
push
xor
dec
xor
xor
lds
pop
cmp
jns
and
mov
pop
adc
loopne
cmp
aas
mov
gs
xchg
xchg
jl
lcall
sub
fwait
inc
pop
adc
fwait
adc
data16
cmc
nop
sarl
ficoml
fsubr
or
sub
scas
and
outsb
mov
mov
jne
xchg
fiaddl
cmp
dec
daa
imul
pop
lods
loop
jns
lds
xor
out
push
scas
jbe
std
jb
ret
popf
cmpsb
jecxz
mov
xchg
lods
xchg
dec
es
lahf
mov
dec
pop
jbe
jl
loopne
adc
ret
stc
fdivl
add
cmp
ds
loope
in
aam
outsb
mov
push
cmp
jmp
push
cmp
insb
push
dec
cmpsl
push
cmpl
xchg
addl
cmp
iret
test
fstps
incl
pop
cs
sbbb
xchg
into
ficompl
push
sub
lock
add
mov
lock
clc
pop
and
ds
xor
adc
xchg
negb
sub
adc
mov
sub
jne
mov
or
ljmp
push
lcall
int
hlt
arpl
fiadds
jnp
insl
imul
push
dec
sbb
pushf
push
rcrb
jo
mov
jb
pop
pop
das
call
out
inc
mov
stos
push
into
out
sbb
enter
pushf
fcoms
and
ret
or
adc
sub
mov
sub
aas
push
into
ret
lods
aaa
and
cwtl
rcrb
jne
xchg
addr16
adc
pop
jo
mov
repz
in
rorb
jb
adc
pusha
gs
push
dec
sub
aam
into
jmp
mov
pushf
push
xor
mov
iret
call
or
inc
popa
adc
push
in
insb
fcomps
push
int3
rol
dec
jae
imul
dec
stos
cmpsl
popa
mov
jnp
std
mov
aad
test
sbb
call
addl
cmp
jg
cmp
leave
sub
fptan
iret
or
fisubl
dec
cmp
lods
cmpsl
mov
notb
inc
cs
add
add
pop
pop
pop
stc
pop
sub
xor
adc
fmuls
push
shl
orb
das
or
lods
xchg
adc
pop
ss
add
mov
arpl
loopne
hlt
insl
mov
fwait
inc
sbb
sub
out
jnp
dec
data16
mov
inc
ss
lods
add
das
out
insl
or
mov
sbb
jno
jge
stc
ret
inc
out
add
and
in
sub
popf
mov
aas
js
imul
rolb
jg
jb
imul
insb
lods
scas
sbb
push
lcall
leave
in
loopne
sub
outsl
jo
jge
inc
jmp
xchg
call
push
cmp
mov
dec
push
outsb
sbb
or
mov
pop
cmp
inc
or
add
add
xchg
push
subb
xchg
and
cmp
sbb
mov
dec
out
test
aas
aas
sub
negl
ret
xchg
test
xorl
sub
lret
cmp
and
or
mov
jnp
outsb
push
pop
sbb
test
adc
pop
leave
or
push
sbb
add
icebp
cmp
jns
gs
inc
add
xor
shrl
sti
pop
sbb
call
push
jmp
pop
xor
jnp
pop
pop
jnp
jmp
pop
fdivrl
push
jle
je
subl
mov
jnp
mov
lods
mov
mov
jne
jge
arpl
adc
cmpsl
push
mov
jo
jl
insl
rcr
cmovbe
mov
sub
add
lock
int3
adc
inc
dec
shlb
push
mov
enter
push
in
outsl
repz
iret
xchg
pop
jne
pop
add
and
and
xchg
mov
add
lcall
and
sbb
or
xchg
cmp
sarb
pop
xor
mov
lods
jns
xchg
mov
sub
add
mulb
pusha
dec
les
lds
and
bnd
out
sbb
mov
push
mov
push
xchg
jp
mov
mov
push
outsb
push
das
mov
fwait
cs
pop
add
in
lock
scas
movb
add
cmpsl
fisttpll
xchg
popa
pop
scas
outsl
rclb
scas
fadds
or
sbb
mov
pop
arpl
dec
mov
sub
sbb
mov
push
jecxz
mov
jecxz
pusha
inc
pop
out
sub
pop
mov
jns
pushf
js
repnz
roll
std
test
loop
and
and
xchg
mov
js
out
test
adc
orb
inc
mov
sub
xchg
out
arpl
imul
pop
jno
mov
out
movsl
dec
lods
sbb
add
xchg
shl
leave
cmp
repnz
jge
movsb
aas
mov
inc
add
in
rcrl
mov
or
test
mov
loop
push
lret
ret
mov
imul
int
repz
mov
paddb
sbb
in
cld
pop
adc
loope
or
out
add
jg
sbb
mov
cmc
jecxz
mov
int3
xchg
cmp
xlat
ljmp
hlt
int
and
cmp
or
lea
mov
arpl
xor
inc
jne
mov
add
cli
in
sub
and
add
add
loop
add
xor
ljmp
addr16
stos
xchg
fcmovnbe
cmp
dec
fcmove
ljmp
outsb
aad
out
aaa
push
jns
pop
sti
xor
dec
mov
inc
jo
add
jle
or
and
movsl
and
adc
inc
push
loopne
and
jg
divl
push
cmpb
into
xchg
xor
jae
mov
je
push
cwtl
pushf
pop
je
inc
repz
and
mov
push
nop
dec
shrb
int3
aaa
add
aam
mov
std
jp
cld
sbb
cmp
daa
in
rcrb
jnp
add
jmp
cmpsl
jle
jae
ja
xchg
and
xor
or
add
or
jecxz
mov
add
and
stc
int
mov
sbb
cli
cmp
xchg
pop
jo
popa
xchg
mov
test
es
add
pop
cltd
add
dec
lahf
xor
inc
loope
lock
dec
cmp
mov
mov
lahf
mov
mov
loopne
nop
mov
cmp
dec
or
cs
lcall
jb
mov
mov
ret
repz
rolb
scas
mov
xor
inc
out
rcrb
pop
xor
fdiv
inc
and
lods
das
inc
call
jp
sub
arpl
pop
clc
mov
sbb
std
jecxz
not
fldl2e
sahf
cmp
jbe
daa
adc
xchg
orl
fbld
mov
orb
data16
idivb
mov
xchg
add
xchg
xchg
jle
jo
psrad
push
or
cltd
cmp
mov
or
repnz
decl
int3
xorb
jb
shl
cmpsb
xchg
xor
mov
sub
push
push
aad
stos
mov
xor
test
std
sub
leave
or
lret
aad
mov
jbe
add
xor
sarl
or
out
jmp
cwtl
xor
daa
ficomps
xor
push
sub
sub
sub
inc
movsb
je
add
test
push
xor
push
test
push
adc
sub
and
or
or
std
movsl
sarb
lds
cmc
adc
push
loopne
xor
push
jp
iret
imul
addr16
and
inc
xchg
out
test
push
lcall
and
in
out
sub
or
jnp
call
js
cmp
idivb
sti
icebp
and
cmp
aaa
xor
stos
je
cmpb
pop
mov
jbe
daa
pop
jno
ficoml
mov
mov
pushf
jns
jb
pop
xor
sahf
jmp
cli
inc
test
mov
push
mov
xor
dec
or
fwait
cwtl
shll
in
mov
lret
xor
xor
xor
cmp
lods
dec
or
std
cs
flds
push
dec
or
in
dec
js
xchg
in
sbb
test
daa
xchg
cld
push
clc
xor
ret
out
fucom
push
mov
mov
sub
call
rcl
popf
add
jle
repnz
xor
addr16
xchg
gs
push
mov
lea
push
lock
sbb
cmp
pusha
sarl
loop
push
and
cmp
es
cmpsl
pop
push
dec
pushf
stc
inc
adc
imul
sub
sti
xchg
xchg
jg
pop
pop
insb
sbb
adc
mov
jle
mov
fwait
in
in
clc
mov
mov
push
fstps
fsubs
push
adcb
sbb
sbb
sbbb
jnp
cmp
scas
pop
ficoms
xor
pop
mov
ja
adc
sub
icebp
mov
jne
insb
aad
pop
out
ficoml
lahf
push
or
push
dec
adc
inc
daa
sub
bound
in
adc
jmp
or
mov
or
jb
sysret
pop
xor
xor
movsl
pop
mov
dec
sbb
cmp
sbb
pop
or
jecxz
add
pop
fsubrl
mov
loope
sub
out
mov
jg
push
lea
push
cmpsb
scas
or
adc
xor
scas
sbb
jecxz
scas
jbe
addr16
add
push
mov
cmpsl
cmc
mov
adc
pop
jo
jle
lods
shll
out
sub
scas
push
mov
dec
scas
sbb
arpl
jne
push
rcrb
fdivp
cmpsb
jns
inc
shl
dec
int3
mov
push
sbb
out
inc
lcall
dec
pop
out
jle
pusha
sub
jnp
pop
ja
clc
je
adc
inc
out
inc
xchg
fwait
mov
dec
xor
or
mov
test
out
loop
push
jecxz
jmp
xor
xor
xchg
sbb
test
test
push
stc
dec
cmp
idiv
fs
mov
push
cmpsb
push
cld
cmpsl
dec
and
cmpsl
cmp
xchg
sub
adc
inc
mov
sub
int3
adc
dec
dec
adc
out
fcomps
sbb
dec
pop
and
stos
ret
pop
rcr
sbb
lea
scas
lds
xor
jg
jl
jnp
push
push
mov
fsubs
aad
cmpsl
loopne
sub
lds
mov
leave
lea
repz
sub
ss
xchg
in
std
std
fwait
adc
jg,pt
fdivl
xchg
jns
andl
mov
out
jno,pn
sub
cmp
in
jecxz
push
mov
push
mov
sub
pop
jae
test
sbb
dec
cmp
fcomip
or
in
dec
lcall
adc
push
inc
popf
fsubp
mov
sti
testb
out
jne
test
test
jne
push
mov
jecxz
cltd
mov
das
add
je
out
test
mov
dec
sub
sbb
int3
xchg
jns
js
push
punpckldq
lods
mov
loopew
in
push
inc
push
fsubrl
pop
call
xor
test
lea
dec
jae,pn
rcll
call
jns
xchg
cmpsb
mov
inc
fidivs
fildll
cmp
sub
clc
xorb
jo
push
jmp
ja
or
xchg
xchg
or
cmp
push
adc
nop
pushf
dec
ljmp
add
jge
jge
add
sbb
sbb
int
les
inc
push
or
sbb
cltd
inc
push
mov
outsb
iret
mov
mov
dec
leave
pop
ljmp
mov
addr16
int3
mov
pop
lods
lea
jg
xchg
popf
mov
xor
in
pop
loopne
sbb
sbb
add
push
iret
xchg
mov
push
test
mov
jg
stos
les
dec
inc
aas
jb
adc
popa
ficoml
test
add
nop
movsl
adc
xchg
jecxz
mov
sub
imul
insl
and
cmpsb
push
or
jmp
cltd
add
and
jmp
cmp
add
push
adc
push
icebp
push
hlt
lret
add
or
shr
std
dec
cmp
push
mov
jmp
cli
daa
push
sbb
jb
sbb
in
jo
fisubs
or
push
jb
jno
insl
in
push
pop
jl
add
jne
les
push
std
pushf
data16
arpl
dec
or
ds
xchg
cmp
jge
mov
cs
mov
dec
insl
sbb
popf
jmp
xor
lods
das
lds
cmp
lcall
mov
jnp
sbb
dec
push
loopne
jecxz
in
adc
out
int
jbe
sbb
mov
sbb
sub
jb
gs
sarl
xchg
jae
int3
inc
pop
jnp
dec
nop
orb
cmpsl
dec
dec
adc
add
xor
push
inc
pop
inc
int
xlat
mov
jns
in
repnz
pop
adc
sarl
adc
rcll
push
in
xchg
jnp
adc
repz
les
add
sbb
in
dec
adc
jno
data16
int
mov
bound
scas
sahf
xor
adc
into
mov
pop
fdivl
daa
gs
and
cmpsl
or
popf
adc
pop
cwtl
mov
clc
fdivs
lcall
imul
mov
mov
mov
decl
mov
adc
pusha
pop
push
cmp
mov
shlb
push
pushl
xchg
push
jne
add
adc
ss
ljmp
fwait
in
lods
movsl
push
jl
test
aad
mov
sbb
fcmovnb
mov
ss
pop
jle
adc
jns
sti
mov
mov
adc
mov
rorl
addr16
mov
fisttpl
push
lcall
inc
in
aad
pop
jg
mov
js
sbb
cmp
pop
fisttpl
push
lea
fs
scas
hlt
push
lods
jge
imulb
imul
xorl
and
mov
sub
jecxz
sub
test
pop
push
fcoml
mov
pop
jle
jno
inc
mov
clc
lds
hlt
push
fwait
loop
inc
ds
mov
dec
out
mov
lret
aas
push
or
popa
rorb
add
sbb
mov
xor
push
jmp
pop
movsb
jecxz
push
scas
cmc
adc
mov
adc
movsb
jle
cmpsb
add
dec
mov
push
xchg
stc
adc
cli
repnz
stos
sahf
repnz
pop
je
call
sti
dec
inc
push
push
out
sbb
pop
sahf
int3
or
mov
jp
cmp
dec
mov
push
enter
xchg
jl
inc
outsb
into
push
adc
adc
lret
stc
arpl
fistl
fisttps
xor
imul
int3
out
int
sub
or
add
cs
pop
xor
test
mov
cmp
inc
lds
into
pop
xchg
and
pushf
sbb
bnd
int3
inc
sub
pop
aad
push
pop
ret
in
inc
and
mov
adcl
dec
mov
cmp
push
out
xchg
or
mov
push
leave
popa
and
int
fnstcw
and
jmp
shl
jb
icebp
jns
pushf
cmpsb
jns
and
aas
cmc
aaa
pop
mov
xorl
testb
add
cmpsl
and
jb
xor
aam
or
out
int
xor
jae
inc
hlt
inc
stc
idivb
xchg
fwait
jb
aas
inc
sbb
std
loop
aad
inc
xor
xchg
aad
in
rcrl
adc
dec
and
jmp
rcll
or
lea
pop
ror
add
mov
scas
faddl
fcomps
hlt
das
push
les
sbb
push
mov
popa
lcall
dec
dec
int3
ja
std
sub
je
lods
sbb
dec
sbbl
lds
and
mov
xor
xor
or
mov
lea
sub
fucomip
outsb
cld
int
shrl
cltd
jo
and
xchg
or
xadd
fcompl
subb
dec
dec
test
lret
sub
enter
push
mov
sti
insl
jb
popl
daa
sub
add
lcall
sub
push
dec
sbb
add
pop
xchg
out
pop
addr16
test
or
inc
sub
leave
iret
repz
sub
xlat
sub
pop
and
mov
xchg
sub
add
jnp
sbb
mov
xlat
mov
mov
dec
xlat
mov
and
push
cs
adc
inc
mov
xchg
jo
jo
cmp
and
or
fdiv
js
push
int3
lret
push
push
dec
mov
loope
ds
pop
xchg
xchg
ret
lock
je
sbbl
or
imul
or
mov
add
pop
outsl
icebp
inc
push
jge
outsl
dec
and
push
stc
pop
push
push
mov
test
lods
mov
xchg
sbb
movsl
inc
out
lock
sbb
push
roll
call
cmp
aas
or
lret
test
mov
stc
xchg
shlb
call
icebp
lods
cltd
repnz
pop
stc
push
sbb
lock
dec
out
mov
fs
jmp
es
popf
out
pop
xchg
mov
push
add
pop
push
cmp
fidivl
sub
push
les
push
push
and
jmp
mov
gs
repz
sub
test
adc
jp
xchg
das
push
jae
and
and
inc
dec
xchg
ljmp
dec
cmc
fyl2x
dec
sub
leave
jl
in
mov
xor
lea
movsl
shll
icebp
sub
pop
inc
je
ja
adc
mov
clc
test
scas
std
movsl
add
lret
jo
and
xchg
out
adc
int3
xor
xchg
sub
ret
shll
or
sbb
out
or
js
and
mov
add
or
out
ret
lcall
mov
adcl
adc
mov
xchg
xchg
push
pop
stc
shll
pop
push
sarl
aaa
bound
imul
in
stos
outsb
int3
xor
rcll
xchg
movsb
outsb
rcr
mov
jl
out
xor
dec
data16
sbb
xchg
idiv
loop
ljmp
pop
push
adc
adc
mov
or
or
jecxz
jo
out
mov
ret
sahf
and
rorl
cmp
xor
mov
andl
loop
inc
pop
xorb
incl
cmp
push
xchg
dec
add
dec
pusha
xor
imul
xlat
jmp
mov
or
xchg
xchg
mov
repnz
push
jbe
add
cwtl
adc
xor
and
xchg
outsb
inc
cmc
js
push
stos
jo
out
mov
push
cmp
scas
mov
jae
movsl
lcall
adc
jg
mov
loopne
mov
jne
stos
pop
outsb
mov
insb
das
insl
mov
loope
push
sub
fnstsw
je
lods
mov
jb
pop
jbe
sub
push
ja
out
jmp
push
pop
sub
sub
adc
lods
insl
scas
jp
sub
xchg
push
mov
sub
mov
and
push
andl
ss
mov
or
mov
push
rol
int3
xor
das
cmc
enter
repnz
xlat
aam
jo
in
pushf
adc
lock
sarl
shll
mov
ficompl
fwait
adc
mov
jle
push
mov
push
and
sarb
pusha
pusha
inc
add
iret
mov
or
ja
aas
cmpsl
iret
test
sub
pushf
fdivs
into
fwait
jbe
iret
mov
jp
jbe
push
cwtl
add
test
out
inc
cmp
scas
push
and
and
mov
or
shrl
sub
cld
gs
mov
test
mov
inc
ljmp
sbb
xlat
mov
and
daa
imul
into
test
ljmp
div
mov
cwtl
xchg
push
or
fcmovnbe
cmp
pop
ret
int
insb
push
test
enter
add
inc
fstpl
dec
pop
push
rorb
ret
lcall
and
sub
adc
mov
xchg
leave
imul
pusha
movsw
pop
cmc
fsubp
rcl
xchg
xor
test
sub
mov
jno
in
pop
aad
and
xor
sub
cld
dec
mov
sbb
or
mov
int3
scas
dec
in
cmp
pop
push
xor
ja
pushf
stos
adc
sbb
push
sbbb
repnz
add
mov
rcll
cs
add
les
mov
push
or
sbb
out
mov
bnd
lcall
aam
movsb
push
notb
pop
xchg
sub
loop
jnp
and
mull
mov
xchg
addr16
test
gs
addr16
aas
dec
cwtl
push
push
lock
ljmp
sbb
call
mov
data16
mov
pop
ja
push
rorb
mov
pop
loope
pop
mov
pop
cmpsb
and
push
inc
pop
inc
xchg
ficoml
stc
clc
in
enter
sub
ja
movsb
pop
add
mov
inc
cld
cmp
std
jno
mov
jns
add
pop
inc
mov
lahf
xor
ss
adc
xor
cmpsb
push
dec
jne
lock
pop
mov
sub
dec
inc
test
lods
unpcklps
sub
mov
jmp
xchg
jmp
lods
fmul
addr16
dec
fsts
cmp
xlat
dec
fistps
mov
fsts
imul
lret
mov
lods
pop
fsubl
or
mov
mov
adcl
push
push
xchg
xor
ss
adcb
stos
lods
push
es
jg
arpl
adc
je
in
and
mov
xchg
outsb
shrl
xchg
pop
xor
cmpsl
ja
or
inc
cld
push
lret
sbb
dec
rcr
inc
push
pop
imul
stc
out
sbb
jg
lea
mov
in
jmp
xchg
sub
push
xchg
sbb
adc
fadds
mov
lods
scas
das
lcall
pop
inc
aam
es
push
sti
lods
jno
insb
add
sub
xchg
add
and
xchg
rorl
fwait
add
pop
pop
pushf
loop
inc
lods
ficompl
test
push
push
mov
aad
cmpl
adc
or
das
orb
mov
and
fdivs
leave
out
push
js
inc
and
add
and
xchg
imul
inc
lods
xchg
xor
aas
sbb
shlb
and
dec
push
pop
sahf
cld
mov
push
sub
fisttps
stos
ucomiss
mov
ret
ljmp
les
int3
inc
addr16
in
push
jl
pop
and
mov
sub
gs
ds
lahf
test
pop
loopne
icebp
mov
cmp
pop
aam
nop
dec
lods
fsubs
jp
add
ficoml
ljmp
pop
or
gs
fsubs
cmp
or
or
ret
loope
popf
lods
test
mov
and
mov
mov
jp
cmp
cmp
lds
push
enter
rcl
cmp
dec
jo
insl
push
inc
sub
jge
cltd
jae
and
mov
std
sub
fildll
in
ja
aaa
mov
lcall
dec
cmpsl
jecxz
mov
or
scas
jmp
je
lock
ljmpw
dec
push
add
loop
loopne
sbb
mov
fs
std
jb
movsl
out
push
enter
sahf
bound
jo
sub
jp
cmp
push
adc
out
xchg
jl
jp
cmp
aaa
ret
and
or
add
cmp
mov
stc
mov
mov
and
cmpsb
js
sub
lea
outsb
jg
ret
inc
lret
test
lock
cmp
cmp
test
das
aas
mov
das
int
ss
jae
fs
inc
lret
clc
sub
ret
sahf
loopne
imul
adc
xchg
push
cmc
add
pop
pop
jnp
mov
test
hlt
stos
out
mov
push
or
xor
aam
call
int
ja
pusha
sti
mov
lcall
xor
out
mov
sbb
stos
pop
jle
and
mov
sub
pop
push
enter
aad
pop
out
nop
push
iret
or
cli
mov
iret
popf
clc
fdivrs
les
add
shlb
aas
dec
fimull
loope
cld
lret
mov
lahf
pop
add
call
pusha
and
test
enter
iret
aaa
jnp
mov
imul
decl
std
sbb
rorl
dec
imul
inc
push
inc
out
in
in
bnd
jp
out
xor
adc
sub
loop
mov
mov
xchg
cmpsb
popa
push
dec
mov
stc
cmpsl
push
jl
subl
imul
push
mov
pop
icebp
cmpsb
dec
in
clc
mov
pusha
in
xor
push
and
mov
test
data16
xchg
pop
daa
cmp
sub
leave
stos
aaa
cs
adc
out
fimull
push
lret
call
mov
dec
jmp
clc
mov
jae
test
dec
sub
fscale
dec
mov
jge
push
jno
mov
add
inc
xor
or
sbb
bound
mov
pop
adc
lea
mov
aam
adc
add
inc
or
insb
dec
add
bound
bswap
dec
inc
adc
aaa
sbb
lock
and
dec
lret
pop
popa
rcrb
stc
outsb
mov
imul
xchg
sub
inc
xchg
outsl
arpl
movsb
cmp
fisubrs
shr
add
pop
nop
push
sbbb
cmpsl
lds
jae
xchg
lcall
hlt
aam
sub
xlat
jo,pt
jne
sbb
faddl
mov
pusha
pop
pop
and
insl
in
shll
or
fsubr
jo
jle
cmp
push
lock
adc
add
sbb
and
lcall
rol
xlat
push
xchg
lret
enter
pop
lods
pop
jnp
or
ds
clc
aaa
fidivl
mov
notb
call
push
add
jecxz
outsb
fs
jecxz
in
das
sbb
cmpsb
fsts
cli
mov
mov
push
inc
in
ja
and
jns
push
adc
fnstsw
ljmp
bound
movsl
cld
push
jne
in
mov
cld
std
jmp
jecxz
inc
and
xor
movsl
lahf
into
pop
dec
outsb
icebp
stos
rolb
pcmpgtb
inc
xor
jb
mov
dec
xchg
mov
sub
fwait
leave
xor
add
jecxz
inc
repnz
fsubs
stos
sub
dec
cmpb
hlt
addr16
xor
sbbl
movl
bound
mov
pushf
xchg
jne
xchg
insb
outsl
cmp
sahf
xchg
fsubp
add
push
mov
cmpsl
loop
jno
pop
push
adc
mov
dec
cmp
das
xor
jno
aas
out
stos
cmp
mov
sbb
arpl
inc
and
not
idivb
out
lcall
mov
xorps
and
mov
or
bound
leave
pop
mov
and
sbb
xchg
and
inc
or
jl
lock
mov
lock
aad
inc
leave
and
lahf
or
push
sbb
aad
xor
and
sub
idivl
and
sbb
jp
out
push
cmp
lock
int3
das
jmp
dec
add
pop
ja
int3
incl
leave
inc
repz
nop
mov
fisubrl
mov
dec
xor
mov
ret
jmp
sub
stos
popf
pop
mov
sbbb
iret
mov
push
cltd
daa
and
xor
mov
clc
xchg
lock
and
or
and
push
mov
pop
out
xor
subb
cmp
outsl
dec
lcall
into
push
push
lahf
iret
fildl
dec
mov
cmp
arpl
sbb
cs
fdivrs
test
in
lock
xlat
mov
add
js
jb
cmp
mov
adc
pop
insb
dec
jns
cmp
cmp
pop
rorb
inc
lds
mov
and
pop
adc
xchg
mov
pop
adc
mov
lods
pop
in
cmc
ficoml
jecxz
sub
mov
ss
dec
sbbb
sub
or
in
imull
mov
push
ret
lahf
inc
mov
push
xor
mov
xchg
mov
sbb
test
adc
adc
inc
mov
xchg
xchg
sbb
or
sub
aam
and
mov
and
xchg
xchg
inc
loopne
pcmpgtd
mov
pop
pop
imul
sub
movsl
pop
jbe
add
push
mov
push
jge
lea
jo
stos
sti
xchg
mov
int
cld
aaa
fldl
xlat
adc
push
mov
pop
cmovbe
incl
jne
add
xchg
sub
scas
lock
dec
js
pop
mov
rcl
cmp
fildll
flds
mov
mov
les
mov
mov
sub
mov
lea
leave
cmp
call
sbb
push
xor
push
cmp
popf
inc
loopne
ljmp
shlb
cmp
jecxz
js
outsl
mov
xchg
cltd
sub
inc
mov
and
repz
idivl
leave
ljmp
pusha
ljmpw
cmp
cmp
add
loop
mov
into
bound
adc
fcomi
lcall
shll
test
test
hlt
mov
movsb
movsb
ds
pop
test
mov
leave
mov
jns
add
loope
mov
pusha
rcrl
aas
inc
sub
js
mov
add
sbb
adc
cmp
insl
sbb
add
mov
jo
mov
sbb
cmp
sahf
push
push
imul
lret
push
sub
dec
faddl
rcrl
mov
cmp
push
jmp
jb
les
lea
xchg
cli
mov
jns
or
push
in
movsb
xlat
dec
fidivs
jbe
test
scas
out
mov
dec
jmp
addr16
mov
push
outsb
fs
jnp
inc
mov
fiaddl
adc
int
roll
inc
mov
inc
sbb
aad
inc
mov
sub
pop
fnstcw
xchg
pusha
pushf
mov
xchg
adc
jge
mov
mov
inc
xor
xor
push
daa
lock
in
mov
stos
mov
sbb
sbbb
push
mov
loope
dec
in
gs
dec
mov
je
stos
jg
jg
mov
out
dec
jge,pn
mov
cli
loope
aas
and
int
je
loop
decb
push
lods
cltd
lahf
jbe
mov
je
ds
jae
sahf
out
dec
dec
adc
mov
out
mov
xchg
mov
test
ss
dec
lods
xlat
mov
ljmp
fisubs
cmove
sbbb
adc
cwtl
cmp
call
lea
adc
xor
in
ror
pop
push
xor
sbb
xchg
in
mov
jb
out
jne
pushf
adc
jmp
addr16
mov
add
mov
sti
lock
mov
rcrb
inc
adc
mov
jmp
push
sbb
hlt
xlat
ficoml
push
sbb
inc
and
in
mov
jbe
add
cmp
jecxz
add
mov
arpl
inc
popa
pop
push
nop
into
xlat
push
in
xlat
push
mov
gs
jno
add
mov
adc
mov
xor
call
dec
jns
bnd
stc
mov
jbe
push
jb
dec
sbb
lahf
lods
or
out
adc
dec
xchg
mov
adc
stos
dec
or
and
xor
mov
mov
aas
push
idivb
addr16
jmp
push
add
jns
nop
aam
and
icebp
push
rolb
lock
fwait
push
out
or
lcall
mov
mov
cmpsl
add
jge
int
mov
mov
rcll
pop
push
insb
lock
pusha
push
hlt
sub
mov
pop
cmpsl
sub
adc
xor
aaa
jnp
dec
add
push
xchg
jae
mov
xorl
or
sbb
fsubs
insl
incb
int
orl
push
jmp
repnz
mov
sbbb
bound
xchg
sbb
dec
jnp
xor
cmc
flds
jmp
push
repnz
in
popf
xchg
rcll
push
or
xor
movsb
mov
aad
decl
sub
push
adc
ret
mov
imul
xor
cltd
jle
adc
lds
cmp
mov
cs
push
aaa
imul
adc
addr16
dec
mov
repnz
lret
cs
push
insl
fidivrl
push
fisttpll
add
popa
xor
scas
push
push
cmp
popa
mov
pop
mov
inc
push
in
mov
sbb
and
mov
sub
xchg
cmc
insl
lods
push
pop
and
sub
dec
push
lock
in
mov
jne
mov
imul
in
jmp
movsb
inc
or
sub
push
jnp
adc
stos
jne
ss
adc
xchg
jnp
outsb
fs
mov
xor
sahf
int
xor
sahf
ljmp
jecxz
pop
stos
mov
movb
mov
mov
sbb
mov
fsubr
repnz
test
inc
data16
jns
leave
dec
rorl
sub
cmpsb
imul
or
xchg
imul
andl
xor
arpl
jl
scas
push
inc
pop
pusha
pop
sbb
xchg
int3
push
xchg
mov
shlb
sbbb
shll
les
out
jg
je
dec
or
popf
or
mov
in
adc
loop
jl
out
cmp
mov
lea
inc
push
je
mov
in
cmp
bound
fwait
dec
mov
rcrl
cmc
inc
dec
push
fwait
aad
inc
std
insb
or
or
jno
cmc
repz
mov
sti
inc
ret
sbbl
arpl
adc
and
xchg
outsl
cmp
popa
rcll
addb
jo
mov
stos
xor
int
mov
fsubl
pop
xchg
repz
mov
or
mov
movsb
push
sbb
dec
xchg
sbb
mov
popf
and
xchg
xchg
xchg
or
sbb
or
test
popa
insl
iret
mov
mov
inc
jl
out
arpl
pusha
daa
cld
sub
stc
jae
in
xor
cmovs
xchg
movsb
icebp
pop
in
dec
push
test
les
lea
mov
aad
jecxz
or
sub
push
lahf
mov
mov
scas
subb
mov
xor
mov
icebp
mov
lahf
mov
mov
push
loope
mov
mov
xor
mov
inc
jmp
mov
mov
push
movsl
mov
dec
dec
fwait
cmpsl
inc
mov
cmpsl
or
dec
xor
sbb
sub
adc
mov
iret
test
into
int3
ficompl
push
xchg
in
es
insl
sbb
inc
aad
sti
mov
dec
imul
jmp
sub
cmp
fidivl
cmp
cmp
push
xlat
mov
addr16
add
lea
insl
inc
add
xor
inc
inc
jbe
loope
push
rorb
subb
cltd
push
lds
in
add
repz
popa
add
pop
pop
pop
add
stos
xchg
insl
lcall
idivb
xchg
adc
fistl
dec
movsl
and
cmpsb
mov
lods
mov
aaa
sbb
push
aaa
out
repz
add
add
and
sub
add
rolb
pop
jp
cmc
es
adc
cld
cs
jecxz
sub
imul
sbb
xor
adc
and
xchg
fs
outsb
dec
enter
xor
xor
sti
add
jns
ds
push
mov
inc
rorl
cmc
jl
loopne
insb
and
out
je
sbb
add
cmpsb
sub
sub
jge
dec
mov
cmp
aad
gs
test
out
sti
pop
dec
push
add
mov
pop
jp
mov
and
mov
mov
mov
lcall
aas
pop
js
jmp
pop
call
addr16
xchg
dec
hlt
push
arpl
fnstenv
pop
test
scas
or
ss
rcr
loopne
xchg
xor
jg
jnp
pop
push
mov
adc
or
das
add
arpl
fidivrs
mov
popf
mov
sbb
sub
adc
mov
lds
lret
sub
jge
add
cmpsb
jns
cmpl
mov
mov
pop
xor
xlat
out
sahf
aas
aad
aaa
sub
sbb
jns
pop
mov
hlt
scas
jb
leave
add
mov
ss
cmp
ret
adc
gs
test
xor
inc
push
jp
mov
sarl
fbstp
mov
loopne
cmc
fdivs
pop
hlt
int
idivl
fmuls
lahf
inc
and
add
sbb
adc
inc
push
mov
xor
jg
shll
mov
adc
das
jne
inc
and
and
fs
mov
scas
and
dec
jmp
cmp
cli
or
cmp
repnz
out
repz
stc
stos
sahf
mov
adc
jmp
mov
xor
sbb
mov
lea
sub
mov
dec
mov
adcl
pop
outsb
pop
adc
test
jno
cli
xor
dec
lret
fwait
enter
stos
sub
ds
loope
cmp
cmpsl
in
push
cli
push
push
pushl
cmp
push
mov
adc
pop
adc
pusha
pop
mov
xchg
mov
or
mov
call
push
aas
mov
add
mov
dec
mov
jno
jnp
jecxz
pop
stos
andb
testl
sbbb
push
xchg
sub
mov
or
ljmp
sub
out
fisttpl
popf
push
or
subb
iret
push
jo
xchg
cmp
inc
ret
push
adc
adc
or
xor
push
and
js,pn
lock
push
movsb
ljmp
aaa
repz
shll
inc
outsb
je
out
mov
jl
inc
es
xchg
cmp
and
push
scas
das
arpl
pop
mov
ljmp
pop
in
mov
loope
cmpsb
add
jnp
pop
jne
insb
ja
mov
sub
fsubrs
cltd
jg
jae
int3
sbbb
jl
add
adc
jns
or
dec
lods
outsb
rcr
mov
aad
dec
xchg
ja
or
cld
scas
mov
cmpsb
in
iret
in
repz
push
cmp
adc
dec
ret
jmp
imul
pop
fs
adc
mov
push
push
aam
ss
lock
fucomp
sub
adc
lret
cmp
adc
imul
xchg
xchg
in
pop
sub
push
decl
mov
push
dec
je
stos
adc
inc
xchg
jnp
pop
clc
std
ss
pusha
stos
mov
fsubrs
leavew
or
sub
xlat
or
xor
jmp
mov
icebp
mov
repnz
or
repnz
mov
xor
scas
push
and
xchg
push
mov
out
not
std
popf
pop
insb
xor
jns
imul
insl
andl
popf
xor
xor
aas
push
orl
push
lcall
call
lahf
adc
lcall
cmc
push
mov
mov
iret
test
out
clc
or
cmp
insb
cmp
adc
ret
and
add
fisubl
icebp
clc
add
cs
add
inc
jmp
pop
sub
and
std
shrl
lahf
popl
or
ja
in
and
loop
aas
jg
sbb
sub
fidivs
xchg
rorl
mov
daa
lret
fwait
xchg
jl
gs
fisubrs
inc
push
imul
ljmp
xchg
mov
xchg
lret
xchg
aad
adc
clc
inc
inc
notl
push
cmp
loop
mov
sbb
mov
xchg
or
pop
imul
mov
inc
mov
stos
sti
push
sbb
push
dec
out
sahf
decb
or
mov
inc
enter
xchg
lcall
rolb
sub
cmp
out
adc
mov
adc
push
sahf
and
and
cli
push
xchg
test
sub
adc
test
lret
arpl
xor
inc
sbb
mov
push
or
push
hlt
cmpsb
mov
mov
dec
das
pop
push
xchg
and
and
push
scas
push
add
mov
adcl
loope
fdivrs
mov
jp
mov
andl
xlat
int
shll
nop
mov
xchg
fs
fs
imul
push
xor
lods
icebp
lahf
or
aam
cltd
lock
ficoms
cltd
add
insb
pop
divl
mov
pop
sbb
or
hlt
xchg
jb
inc
dec
outsl
jae
cmpsl
insl
cvtps2pi
shrl
les
pop
mov
fidivs
inc
push
les
data16
addr16
iret
xor
pop
inc
sbb
scas
ss
data16
xchg
xor
push
leave
outsl
pop
jo
mov
test
add
inc
jno
lods
inc
sub
enter
cmpsl
mov
sub
cmp
fs
sub
or
stc
pop
mov
movsb
movsl
and
test
das
shlb
aad
repz
adc
push
mov
dec
jae
adc
jnp
popf
adc
rcrl
aas
jge
mov
dec
daa
int3
in
mov
push
add
sbb
push
adc
mov
pop
aad
dec
pop
nop
fdivrs
mov
data16
orb
jns
nop
fwait
les
jmp
fdivp
in
lds
mov
inc
mov
into
mov
inc
dec
dec
outsb
ret
iret
arpl
inc
imul
xchg
sbb
lea
fdivr
fiaddl
insl
es
fwait
pop
xchg
das
loop
dec
mov
mov
imul
jp
push
inc
lret
cmp
lods
lret
dec
push
adc
movsb
mov
mov
jo
dec
prefetcht2
lea
out
and
adc
push
push
aas
jae
out
sub
mov
add
push
rorl
inc
std
mov
loope
jmp
dec
aam
ljmp
adc
xor
shlb
jno
adc
xchg
cmc
loop
cmp
cltd
repz
fwait
hlt
cmpsb
add
xor
mov
sub
clc
jle
push
jb
and
adcl
int3
repz
insb
or
jb
arpl
mov
push
mov
push
inc
roll
cmp
cwtl
xor
pop
cltd
push
xor
inc
mov
sbb
aam
fiadds
mov
ficoml
push
test
or
in
fwait
in
mov
bound
leave
inc
dec
sub
push
bound
outsb
pop
push
enter
push
push
mov
push
adc
sbb
cmpsb
jno
out
mov
icebp
aam
loop
popf
jb
adcb
shrb
mov
add
lahf
xchg
sbb
fidivs
cmp
pop
xor
and
fdivrs
pop
mov
scas
sub
xlat
fimuls
jl
mov
xlat
cld
fcmovnb
pop
out
xor
gs
or
sub
movsl
js
sbb
js
mov
out
hlt
int
inc
mov
andl
stos
ds
js
jl
inc
dec
stos
cmp
dec
push
mov
incb
xchg
negl
out
add
xchg
adc
cmp
mov
loop
loop
inc
cwtl
les
in
xchg
dec
mov
inc
sbb
je
stos
add
push
out
or
in
cmpb
fsubs
or
enter
sub
inc
adc
ret
jle
pop
push
pop
push
xor
adc
push
mov
test
cmc
and
insb
xchg
or
repnz
lcall
addr16
out
stos
dec
pop
popa
sbb
pop
xlat
fsubs
pop
fcoml
test
cs
dec
inc
movsb
dec
dec
sti
test
add
or
nop
push
cmc
mov
or
and
test
stos
loopne
sub
mov
mov
sbbb
mov
cli
push
sub
enter
xor
subl
dec
out
mov
sbb
out
jmp
scas
mov
fmull
mov
mov
xchg
dec
psrad
xlat
and
xor
enter
mov
iret
push
enter
out
fcomi
jbe
test
nop
adc
xor
outsl
and
dec
sahf
mov
aad
add
orl
push
iret
fidivrs
mov
fidivs
ret
push
sbb
jb
xchg
add
xor
shlb
dec
pop
inc
ljmp
jecxz
out
mov
mov
push
adc
inc
ret
pop
mov
or
or
ss
int3
scas
jnp
ficompl
lods
js
pop
lret
cmp
jae
mov
jne
mov
mov
add
jg
jecxz
mov
mov
enter
and
xchg
into
push
test
mov
stos
or
mov
pusha
outsb
ss
aaa
mov
inc
ldmxcsr
xchg
ljmp
fdivrp
push
rcrl
push
xor
jge
popa
aam
inc
inc
fidivs
add
sub
inc
pop
sbb
js
and
jae
cmp
xchg
pop
faddl
adc
mov
mov
mov
xor
fimull
xor
jmp
pop
test
xchg
js
dec
xchg
cmp
imul
sbb
mov
addr16
int3
test
pusha
in
insb
add
xlat
lret
lea
add
mov
sbb
xor
lds
rcrl
lahf
loope
and
inc
mov
dec
popa
dec
cmp
and
mov
pop
test
mov
jno
loop
fnstcw
ret
xor
or
mov
fs
lods
cli
xor
aas
xchg
testb
repz
stos
add
outsb
loopne
mov
inc
add
adc
cltd
rclb
jmp
ja
dec
push
in
testb
or
mov
sub
and
xchg
addb
pop
xor
repnz
cmp
sub
jne
pop
shlb
inc
cmpsb
shll
jl
ja
dec
fldcw
cmp
cs
aas
sbb
shlb
shll
push
imul
cmp
pop
cli
push
mov
xchg
cmp
les
push
loopne
add
jg
xorl
jg
rorl
jo
xchg
xchg
push
lret
insl
sbb
and
mov
push
dec
js
mov
mov
mov
cmp
loopne
mov
loope
int3
jno
outsb
pop
jge
les
mov
sbb
or
and
lea
xchg
inc
jnp
dec
pop
hlt
xor
out
cs
cld
dec
push
sub
mov
cli
cmc
cwtl
xor
int3
jmp
pop
pop
push
test
ret
ret
clc
daa
adc
sub
ljmp
fidivrl
scas
scas
mov
ret
xor
pop
aad
fistl
dec
js
mov
testb
add
imul
inc
addr16
repz
pop
mov
push
ja
std
and
push
mov
cmp
adc
inc
xor
adc
movsl
pop
pop
rclb
push
pop
push
pushf
cmp
sub
jnp
dec
jo
mov
mov
test
xchg
sbb
push
in
jnp
mov
lods
push
xor
out
mov
out
shr
mov
loope
fists
xchg
ret
mov
jne
jnp
popa
mov
pop
iret
mov
xchg
mov
fists
jecxz
movsl
mov
inc
iret
push
in
fwait
loope
mov
insb
in
scas
jo
jle
xchg
gs
push
lret
mov
push
lret
add
idiv
js
ret
imul
insl
add
cmp
cmpsb
xchg
loop
mov
inc
data16
sbb
add
jnp
fs
lods
adc
cmp
and
mov
adc
xchg
lods
ret
jne
jmp
imul
loopne
imul
push
vmulps
shl
outsl
xor
dec
and
add
jge
xchg
and
es
push
js
cmp
mov
daa
dec
jp
adc
jl
mov
movsb
loopne
stc
popf
scas
stc
dec
test
out
outsl
push
mov
mull
loope
in
jae
inc
mov
lea
test
out
pushf
xchg
fdivrl
add
bound
addr16
iret
cmp
test
push
imul
imul
jl
pop
test
shl
jnp
aad
loop
decl
and
iret
xchg
and
dec
mov
jno
cli
addl
inc
adc
or
insb
dec
xchg
inc
sub
and
bound
sub
jecxz
pop
add
icebp
movsl
inc
xlat
aam
ret
add
ss
push
xchg
fdivrs
popa
cmp
ret
in
popf
stos
std
and
scas
or
mov
sbb
xchg
adc
pop
mov
adc
xor
bound
cmc
mov
dec
test
cmp
lahf
jg
jae
push
lret
test
repz
adc
loop
inc
cs
jne
incl
leave
cmp
jecxz
mov
pop
mov
mov
sbb
lods
insb
shlb
dec
fst
mov
xchg
lods
sahf
mov
jecxz
jle
xchg
dec
dec
rorb
test
xor
jmp
bound
sbb
adc
movsl
shll
or
jmp
mov
jmp
shll
add
shlb
xor
bound
arpl
xor
movsl
movsl
dec
fstpl
andl
test
outsb
mov
aas
sub
out
loop
sbb
les
mov
sbb
mov
loop
mov
fcmovb
adc
push
sahf
cmp
add
std
jg
scas
repnz
mov
add
js
and
add
adc
sbb
xor
mov
xchg
loope
movsb
in
std
mov
cmp
fnstenv
jno
fnstsw
outsb
hlt
scas
mov
outsl
ljmp
lret
lock
add
push
cmp
mov
dec
add
dec
sti
push
adc
or
push
dec
popa
and
outsb
adc
sub
setne
cmc
xor
fidivrl
pop
outsl
mov
adcl
nop
jge
push
pop
and
mov
dec
dec
cwtl
xchg
repz
dec
mull
fucomi
jo
xchg
xchg
xchg
or
xchg
loopne,pn
cmpsb
pop
lahf
setge
jmp
jge
xchg
fabs
and
orb
inc
insl
add
out
scas
stos
xor
clc
imul
fmuls
loop
fiadds
jle
push
daa
mov
adc
mov
gs
push
mov
sbb
sbb
sub
xchg
incb
cmc
mov
fs
xor
jno
push
cltd
dec
sahf
push
push
fcoml
xchg
pop
aam
lret
arpl
dec
lds
and
out
or
xchg
lret
pop
mov
pop
pushf
inc
mov
xor
pop
push
mov
mov
xlat
cmpsb
test
mov
jns
dec
shrl
fwait
fwait
hlt
lock
xchg
jmp
out
adc
sbbl
add
push
xchg
std
xor
test
xor
popa
lods
dec
outsl
std
call
sahf
sub
arpl
add
pushf
xchg
mov
icebp
mov
jecxz
mov
push
xor
inc
pop
inc
xor
daa
mov
and
ljmp
xchg
adc
outsl
filds
aad
xor
sbb
xorl
mov
push
jnp
mov
clc
pop
or
jns
ja
fdivl
inc
daa
ljmp
insb
pop
out
sub
jb
mov
dec
mov
test
leave
sbb
dec
dec
pop
sub
outsl
jb
loopne
jnp
dec
fldt
lret
pusha
aad
inc
shl
sub
mov
jbe
out
repz
push
adc
add
test
movb
inc
imul
pop
ds
mov
andb
and
add
std
out
ret
xlat
lcall
push
xchg
popa
push
cmpsl
in
inc
xchg
repz
sub
out
js
fs
adc
out
sti
data16
lods
and
fwait
and
xchg
lret
call
test
jmp
and
cmp
cmc
pop
shll
adc
dec
inc
pushf
lods
inc
pop
cmp
pop
mov
shlb
inc
and
dec
cli
push
lea
cld
jle
scas
adc
push
cmpsb
adc
add
outsl
mov
jnp
push
inc
das
and
xchg
add
insb
adc
jp
xorl
inc
loopne
sub
and
jmp
js
inc
xor
push
loop
sbb
dec
xchg
sub
and
inc
sbb
addr16
cmpb
ljmp
xchg
sar
mov
or
or
mov
xchg
lea
dec
cmp
fistpll
sti
call
in
sbb
call
push
dec
in
test
jnp
shll
inc
fisubrs
add
sbbl
adc
cmp
jae
hlt
inc
xor
popf
shll
lods
xorl
test
dec
repnz
cli
clc
sub
xchg
xorb
rorl
loope
test
out
pop
idivl
loope
adc
dec
jns
lahf
mov
push
filds
push
xchg
sub
adc
loope
mov
inc
leave
maskmovq
popa
pop
mov
or
xchg
in
lock
xchg
out
nop
pushf
dec
dec
push
scas
mov
or
jecxz
inc
lret
in
sahf
and
movsb
push
sbb
xor
jge
add
push
inc
add
cmp
bound
fnstenv
cmpsl
leave
cld
lcall
or
push
stc
fldenv
and
xor
jns
imul
adcb
pushf
in
fcmovnb
dec
ror
adc
jb
pop
and
or
jb
mov
xor
mov
jecxz
mulb
cmp
xor
pop
fistpl
movsl
inc
sub
jmp
mov
stc
jns
mov
loop
jmp
jae
sbb
inc
jno
pop
test
mov
and
push
xor
sbb
push
lcall
sub
pop
inc
add
inc
ja
fmuls
test
lret
inc
jg
leave
push
pop
jno
jnp
add
pusha
jne
pushf
out
sub
adc
daa
jns
add
and
xchg
jbe
xchg
jl
mov
in
and
mov
mov
lret
fistps
clc
addl
in
pushf
xchg
jo
xor
in
push
or
adc
inc
or
cmpsb
push
cmp
daa
aam
lahf
and
pop
insl
adc
cmpsl
arpl
loop
lock
mov
xor
imull
fists
in
lods
pop
pop
in
add
xor
ficoms
cmc
iret
movsl
sub
ret
out
mov
mov
and
fldt
add
mov
out
mov
mov
into
movsl
fdivrs
jo
sti
mov
sbb
stc
shl
pop
mov
adc
test
pushf
loopne
lcall
mov
adc
insl
sub
xchg
out
sti
imul
add
imul
mov
cltd
nop
fnstcw
adc
test
mov
js
in
push
fisubl
cmp
add
jne,pn
mov
sub
jne
movsb
les
push
repnz
cs
push
shrb
sbb
cmp
push
push
lahf
int3
outsb
add
push
sub
or
sub
aad
aad
in
popa
pop
test
mov
add
pop
push
cmp
jmp
shlb
mov
xchg
xchg
mov
pop
adc
mov
imul
das
mov
fmull
jmp
jmp
mov
call
xor
fldcw
pop
out
insb
outsb
lcall
cltd
or
xlat
push
mov
cmpl
xlat
push
dec
pushf
mov
fidivrs
and
cs
out
push
xor
rcrb
aam
jae
cld
push
cmovo
or
popf
push
repnz
lcall
mov
scas
aam
rorl
mov
add
aas
sub
fwait
xchg
jns
add
cltd
js
fsts
inc
sub
fwait
push
aaa
mov
fisubs
shr
ss
das
xchg
pop
lock
stos
pop
jle
adcl
pop
cmp
int
xchg
xchg
mov
sub
cmp
push
or
ss
pop
pop
int3
or
or
stos
cltd
out
imulb
rcl
xor
aaa
and
lods
scas
push
mov
stos
cmovp
test
mov
imul
lahf
sub
notl
into
std
mov
or
iret
loopne
dec
bound
in
rcrl
jno
out
and
xor
mov
ret
outsb
mov
sbb
sbbb
rcll
mov
iret
cli
rolb
adc
loop
pop
cli
mov
imul
dec
or
outsb
aam
ret
xchg
stc
jno
push
xchg
dec
sub
mov
jmp
push
xor
cmp
popa
inc
sbb
push
push
in
pop
fcmovbe
push
jbe
daa
mov
daa
sbb
add
xlat
sub
mov
lock
lret
popf
int3
inc
push
mov
idivb
sub
fdivl
daa
xchg
out
add
mov
addr16
xchg
in
gs
neg
mov
cmp
js
and
dec
pop
lods
leave
pushf
adc
and
scas
lcall
fiadds
dec
and
xlat
imul
add
pushf
lock
jecxz
inc
roll
push
iret
push
fcomp
shll
jns
cmp
adc
or
leave
jne
nop
loop
leave
mov
pop
stos
int
je
incl
pop
sti
jmp
pop
dec
hlt
daa
cmp
cmpxchg
out
pop
push
hlt
outsb
cwtl
inc
mov
stos
and
push
sbb
and
dec
and
ss
cmc
stos
push
in
nop
xchg
popa
push
and
fimuls
aam
outsb
and
shrl
jne
ret
mov
inc
mov
jne
cmp
lods
xlat
fnstsw
pop
lahf
sahf
jnp
pop
repnz
cli
push
jp
mov
movsb
sub
cmp
xlat
inc
and
lds
jmp
popl
insb
sbb
std
mov
or
lock
dec
icebp
xor
cli
cmc
pop
mov
test
roll
sub
lcall
mov
enter
fidivs
xchg
cmp
jnp
scas
xor
inc
push
dec
sub
div
xchg
sub
addr16
mov
jne
repnz
cmp
push
sti
jnp
movsl
cmp
fwait
pop
fbld
call
lcall
inc
dec
fistpll
mov
add
pop
sbb
or
jecxz
xchg
cmp
jp
push
add
cmc
mov
sahf
ret
xchg
popf
xor
lcall
cmc
sub
gs
iret
dec
push
xchg
mov
xor
xchg
mov
lea
cltd
cld
rorb
add
cmp
xor
push
movb
loopne
mov
push
rcrl
cs
lock
adc
xchg
add
mov
or
sti
sbb
push
addl
xchg
jno
mov
adc
aad
push
stos
test
mov
scas
push
cs
adc
mov
sbb
dec
in
dec
mov
ja
test
outsl
addl
in
push
mov
aaa
jmp
mov
xchg
pop
add
add
dec
or
push
push
sar
cs
ja
mov
bswap
popa
cmp
setb
push
or
fsubr
jnp
mov
add
mov
cmp
fldenv
xor
mov
fisubl
add
cmp
les
mov
inc
mov
mov
rcrl
lahf
aas
lock
bound
sub
pop
dec
into
out
lods
insl
xlat
mov
cmp
addb
lcall
ret
fld1
jb
repz
dec
adc
mov
lods
jb
repnz
jecxz
scas
mov
cmp
outsb
xlat
lret
fisubrs
rcll
dec
in
mov
lds
mov
hlt
sahf
dec
xchg
std
cltd
cwtl
pop
imul
sbb
pusha
scas
jle
enter
sub
mov
mov
jns
sub
xor
jp
inc
leave
arpl
ficomps
mov
push
or
xor
sbbl
jno
jns
xchg
scas
test
mov
mov
in
adc
lret
insb
scas
enter
xchg
int
into
dec
in
test
add
mov
pop
rcll
fwait
xor
flds
stc
outsb
cmpsl
pop
popa
outsb
and
hlt
pop
out
rcrb
in
mulb
repnz
bound
pop
jo
add
add
mov
bound
imul
je
push
aam
sub
and
or
enter
outsb
fsts
aam
mov
pusha
jmp
aam
rorb
fnstsw
out
and
inc
or
dec
mov
xchg
hlt
int
lret
inc
push
imul
push
mov
out
cld
sti
out
mov
nop
xchg
push
fisubl
jp
mov
fstpl
jecxz
inc
jae
mov
clc
jge
lret
pop
sbb
ret
in
inc
lcall
into
push
hlt
mov
outsb
outsl
sub
pop
inc
shlb
insb
mov
pop
cmc
dec
adc
or
jmp
popa
test
shr
mov
xor
mov
das
mov
out
scas
mov
xchg
rorl
inc
out
and
mov
lods
scas
data16
scas
repz
jno
jge
mov
pushl
push
push
add
int
nop
xor
les
jo
push
add
cmp
push
in
lock
addr16
pushf
insl
dec
pop
ljmp
aam
ja
ds
and
test
aad
or
dec
jge
rolb
mov
fs
ret
jg
push
sbb
imul
dec
add
scas
inc
xor
mov
pop
fnstsw
cli
out
pop
outsb
dec
fsubs
lcall
loope
out
daa
cmp
and
sbb
mov
cli
mov
xchg
inc
adc
lret
push
mov
dec
lods
mov
push
xor
rcll
jns
cmp
inc
lock
ds
mov
jne
or
jg
push
dec
out
in
cmp
hlt
ss
and
aam
add
mov
add
dec
xchg
ret
int3
mov
andb
sbb
xchg
lock
sbb
adcl
aaa
fldcw
mov
movsl
cmp
int3
dec
mov
neg
fnstsw
je
test
pop
aam
xchg
in
mov
stos
jns
addr16
sub
xor
out
out
jae
jecxz
daa
mov
dec
movsb
inc
in
mov
and
fdivs
lea
out
jge
sbb
out
negb
cwtl
je
lods
and
dec
xor
popw
shl
push
rorb
mov
in
xlat
movl
inc
push
jnp
cltd
push
add
lods
xchg
daa
loopne
lods
or
ljmpw
sbb
rcll
cmp
rclb
sbb
in
mov
inc
sub
stos
rorb
push
lret
inc
fcom
xor
popa
int
aas
pusha
std
out
fwait
and
mov
xchg
test
in
xchg
cmp
adc
adc
jp
arpl
rcll
popf
xor
mov
xchg
mov
sar
inc
mov
and
fsubrs
outsb
mov
lock
sub
dec
cwtl
repnz
lahf
or
shrl
xchg
leave
addr16
mov
mov
pushl
idivl
sbb
fsubp
sub
mov
ds
or
sub
pop
inc
dec
xor
mov
sti
sbbl
fwait
insb
daa
fistpl
push
inc
ljmp
add
out
sahf
cmp
shll
pop
ja
adcb
inc
or
xor
addr16
inc
adc
adc
xchg
xchg
daa
jl
sbb
iret
cltd
into
movsb
scas
add
sahf
inc
lret
dec
mov
pop
push
dec
cli
pushf
inc
shrb
adc
int3
adcb
xor
rcll
sar
pop
ret
fwait
aas
std
pusha
mov
inc
push
int3
sbb
mov
mov
loop
js
cmpsl
in
cmp
mov
fs
out
es
jmp
mov
xor
mov
pop
rcll
jnp
ficoms
push
insb
sbb
adcl
cmp
mov
jle
jmp
and
stc
lret
cmp
inc
xchg
or
push
iret
inc
xchg
insl
fisubrl
add
and
repnz
dec
or
push
pusha
xor
movsb
xchg
sub
fisubrs
scas
mov
dec
inc
lods
out
xor
fwait
mov
xchg
xchg
cmp
sbb
sbb
sbb
fmull
jae
sbb
out
pop
pusha
mov
xchg
out
inc
testb
jo
jmp
dec
test
cmp
scas
push
in
fmul
out
arpl
xchg
add
shrl
lds
mov
icebp
cmp
inc
fstpl
cmp
push
repnz
or
loopne
idivl
sbb
or
and
cs
adc
aaa
fcoml
mov
push
or
dec
stc
push
inc
je
xor
js
into
fwait
pop
push
dec
icebp
and
loopne
sub
decl
mov
ds
push
sbb
push
shr
adc
fisubs
addr16
pop
sbb
testl
ljmp
movsl
inc
lods
popf
ja
ficompl
in
xlat
mov
push
or
inc
std
outsl
xchg
inc
je
das
cld
fstpt
js
lods
or
mov
scas
sbb
js
adc
mov
mov
push
stc
sti
mov
xor
push
in
mov
or
or
mov
pop
fs
or
scas
add
scas
adc
andb
daa
notb
push
and
push
aaa
cwtl
cmp
adc
push
sub
into
mov
ja
and
and
nop
xchg
push
inc
lret
xchg
test
push
adc
test
or
aaa
push
or
dec
incl
shrl
dec
inc
sbb
and
movsl
xchg
out
in
ret
xchg
hlt
xchg
shr
jle
mov
shrl
xor
mov
inc
mov
cmpl
gs
mov
cmp
in
jno
lret
aas
leave
int
lahf
jno
and
add
push
dec
pushf
sub
inc
cmp
div
sub
aam
mov
sti
add
sti
jno
and
xor
lds
mov
lods
loopne
mov
andl
xchg
arpl
and
pop
clc
mov
lock
push
ljmp
loopne
roll
jl
movsb
and
ljmp
fdivr
out
repnz
mov
jmp
mov
xor
rorb
cs
pop
mov
dec
push
lods
rorl
cmc
shr
mov
repnz
cltd
sarl
sbb
outsl
fimull
mov
lds
roll
or
push
cmp
mov
ret
jmp
int
iret
sub
xor
ja
pop
lret
mov
inc
roll
sub
lods
sub
int3
outsb
fstp
push
call
lcall
mov
or
aaa
jo
jmp
dec
dec
dec
push
dec
dec
gs
adc
mov
xor
std
mov
inc
imul
xchg
mov
cmp
sarb
jo
pop
jne
imul
inc
popa
push
pop
xor
inc
xor
imul
cld
jbe
ret
pop
mov
fldcw
ret
fmull
sbb
sahf
cs
gs
mov
cmp
xlat
mov
cmp
mov
and
pop
fld
inc
dec
cs
dec
inc
cmpsb
mov
imul
sub
sub
push
repz
sub
loopne
push
sub
clc
movsl
mov
fsts
mul
pushf
push
xor
xor
inc
push
or
test
cwtl
es
or
adc
loop
inc
leave
jno
or
xchg
inc
notl
and
shlb
mov
inc
lret
lret
ficomps
mov
loop
jge
jne
mov
ljmp
xchg
imul
push
sbb
fiaddl
aaa
mov
out
pop
ljmp
lcall
cmc
sub
xchg
mov
push
enter
sub
inc
push
mov
stc
or
adc
jb
inc
inc
loope
push
in
mov
xchg
jno
mov
lcall
mov
pop
jl
imul
ret
sub
mov
xchg
ficompl
xlat
jl
jmp
sub
stos
sbb
outsl
stos
or
loopne
int3
jnp
sarl
arpl
adc
rorl
xchg
sti
push
and
xchg
push
das
rcrb
or
std
jle
fsubs
icebp
test
sti
xchg
mov
cmp
std
add
mov
add
adcl
pop
jno
jle,pn
mov
inc
pushf
push
adc
pop
imul
jle
mov
jecxz
jmp
icebp
rorl
jno
xor
popf
pop
lock
mov
out
leave
stc
dec
cmp
fldl
jmp
fisubrl
sti
test
aaa
jg
lods
lret
push
jno
and
test
icebp
push
dec
push
mov
mov
movsl
push
outsl
dec
add
mov
push
jle
jno
enter
cs
pop
xchg
aam
js
mov
xchg
push
push
pop
jg
hlt
aad
push
test
pop
xor
pop
aad
jnp
sub
push
xchg
negb
jmp
lea
and
aas
idivb
push
fists
mov
stos
sbb
xchg
or
cmp
test
xor
repz
fldl
shll
and
gs
popf
movsl
mov
adc
cvttps2pi
xchg
xor
ret
dec
jecxz
lret
mov
mov
or
mov
data16
xor
imul
js
pusha
push
and
shll
jns
aaa
sbb
faddl
inc
inc
daa
xchg
jo
push
add
adc
xchg
or
mov
lea
sub
jb
mov
arpl
into
outsl
and
sub
cli
and
test
sbb
int3
xor
fidivrl
mov
xor
and
jle
pop
repz
movsb
cli
test
stos
sub
push
and
loop
in
ljmp
add
xchg
outsb
adc
cmp
movsb
or
imul
lods
mov
xchg
mov
aad
adc
fstpl
push
add
in
movsb
ds
rorb
adc
nop
pop
cwtl
and
push
pop
jno
mov
test
inc
mov
jle
je
stos
adc
push
clc
ja
les
iret
inc
fwait
jns
fsub
lds
leave
repnz
imul
rorl
sbb
sub
sbbb
call
test
repz
push
cmp
pop
jmp
push
ja
ret
inc
daa
clc
xor
push
push
rolb
cltd
insb
inc
into
testl
aam
sbb
inc
cltd
and
mov
mov
fmul
jbe
jno
fs
inc
or
mov
cld
fcmovu
clc
sub
cmpsl
push
test
sub
and
pop
xor
aam
inc
cmp
push
xorb
inc
and
push
out
loop
and
adc
cmp
xchg
jb
or
ds
out
call
push
xchg
loope
xor
inc
xchg
sub
jns
push
lahf
std
mov
bnd
sub
sbb
sub
mov
mov
outsl
addl
xchg
add
fcoms
pop
pop
add
pop
fists
jae
mov
dec
mov
imul
dec
push
rcrb
clc
loopne
repz
fistps
push
inc
mov
outsl
stos
mov
pop
ret
ja
dec
test
adc
outsl
pop
pop
inc
mov
inc
push
and
sbb
mov
pop
aam
mov
push
shlb
or
mov
cmpb
fwait
int
jecxz
ficompl
inc
fisubrl
cmp
les
xor
jge
sbb
push
test
pop
jns
es
frstor
dec
add
call
cmp
into
jne
jnp
pushl
mov
add
out
in
or
lds
fiaddl
loopne
and
mov
sti
sbb
sbb
xchg
mov
adc
test
test
sarb
aam
fdivl
mul
les
cli
lret
outsb
inc
daa
pop
xor
adc
pop
scas
mov
cwtl
inc
leave
sahf
cmpsl
cmp
roll
lret
call
scas
clc
and
lret
add
mov
adc
insb
push
aam
rclb
in
cmp
repnz
sahf
lea
dec
and
rcl
imul
movsl
sbb
pop
dec
loopne
invd
inc
pushf
xor
pushf
sbb
lock
inc
data16
hlt
mov
sub
add
jne
cmp
aaa
mov
repz
xor
pop
or
hlt
in
mov
cmp
adc
sbb
inc
scas
pushf
mov
adc
mov
add
adc
out
out
in
test
inc
mov
icebp
in
cltd
push
cmc
or
cmpsb
ljmp
sbb
jle
jnp
out
pop
addr16
cmc
shrl
clc
lret
das
xchg
push
das
or
xchg
xchg
adcl
sub
ja,pn
fbstp
push
inc
cld
add
xor
out
jle
jo
lea
scas
aad
movsb
in
mov
rcll
sbb
mov
out
cmp
aaa
and
push
cmpsb
ds
mov
lret
lods
loopne
xchg
mov
sbb
shlb
push
mov
sub
out
out
push
rorb
fucompp
clc
mov
out
or
rol
push
xor
cmp
ss
aaa
ja
fmuls
jns
jne
mov
push
int3
pop
in
pop
pop
fldl
pushf
jp
mov
aad
mov
adc
fisttpl
addr16
repz
test
gs
in
xchg
rcl
jge
push
dec
dec
popf
mov
pop
pop
cmp
jmp
dec
push
or
pop
push
sbb
rorl
mov
inc
aaa
out
pop
arpl
and
inc
xor
faddp
outsb
push
xor
mov
xchg
mov
das
enter
dec
add
sub
add
pop
dec
sti
mov
data16
push
loopne
imul
psrlw
leave
sti
or
cli
mov
ds
addr16
push
sbb
sub
or
add
out
sbb
repz
stc
inc
sub
in
mov
pop
jecxz
inc
dec
push
add
push
pop
and
xchg
and
and
inc
sbb
or
int3
add
aam
aad
mov
aam
mov
cmpsl
sbb
loop
out
add
lcall
fnsave
fidivrl
sarb
idivl
add
addr16
pop
add
jbe
adc
mov
sbb
loope
jge
shr
dec
mov
dec
iret
jge
repnz
mov
xor
mov
xchg
and
and
push
and
pop
pushf
aam
dec
xchg
orl
xchg
mov
jg
xchg
cmp
jge
and
pop
mov
gs
mov
scas
cmp
fstps
idivl
call
arpl
out
push
out
arpl
js
push
mov
data16
iret
jae
and
xor
cmp
or
jne
cmc
sbb
popa
push
mov
insl
movsb
inc
push
inc
adcb
adc
dec
mov
icebp
sbb
data16
lock
sub
cmp
inc
hlt
sub
stc
test
addb
xchg
aas
scas
daa
test
dec
mov
test
mov
leave
xchg
iret
icebp
scas
test
and
lods
loop
loope
jp
push
and
mov
jle
loopne
stos
sub
inc
imulb
stc
push
lret
push
gs
xchg
mov
adc
dec
mov
push
and
push
xor
xchg
push
mov
pop
fcoms
cld
iret
push
mov
fsubrl
mov
mov
add
lods
mov
out
addr16
mov
cltd
inc
xchg
push
movsl
cmpsb
pop
lret
xchg
push
movsb
daa
xchg
aam
xchg
lret
sub
lahf
jo
repz
inc
stos
mov
fcompl
adc
lods
push
cmp
gs
lret
xlat
and
pop
add
push
stc
popf
push
repnz
mov
jp
dec
pop
jmp
lock
mov
mov
mov
das
rclb
dec
shrl
adc
icebp
pop
fs
xchg
pop
and
out
jl
mov
mov
lds
scas
xchg
push
fadds
fdivrs
rolb
pushf
inc
mov
push
adc
cmp
inc
lods
loop
ja
inc
in
xchg
pop
cmp
lds
mov
mov
aam
ror
inc
subb
cmpl
test
movsb
sahf
icebp
rcrl
jne
ret
xorb
test
aas
repz
rclb
cmp
stos
xor
xor
pop
xchg
in
and
fs
outsl
inc
adc
xlat
cmp
push
sub
xor
je
push
inc
mov
scas
cmp
inc
dec
mov
sub
fs
mov
mov
mov
ljmp
ja
adc
in
data16
inc
mov
jle
aam
imul
arpl
xchg
inc
hlt
int3
xlat
fists
and
xor
sub
sub
jbe
dec
mov
clc
inc
and
push
call
mov
sub
loope
mov
push
fstl
arpl
and
jno
or
xchg
out
sub
dec
outsl
cli
xchg
movsl
out
xchg
insl
aaa
mov
sahf
icebp
iret
cmp
dec
std
dec
in
cmp
jne
dec
adc
bound
mov
inc
fwait
cmpsb
mov
in
cmpsl
popf
fucomi
sub
in
fwait
push
sub
sub
clc
in
test
inc
rcll
pop
sahf
and
push
pop
adc
pop
sub
xchg
adc
push
and
push
bound
in
repnz
movsl
xchg
sub
rep
xchg
pop
lret
mov
mov
jb
or
hlt
sbb
xchg
stc
int
or
cld
mov
out
xor
xor
insl
pop
push
aas
out
inc
out
addb
and
adc
ss
mov
sbb
add
int
jle
lea
inc
adc
fists
data16
addl
andb
cmp
adc
mov
cmpsl
stc
or
mov
cmp
cs
inc
or
sbb
imul
addr16
sub
pusha
test
cwtl
int
xlat
mov
push
aaa
mov
mov
and
adc
addr16
and
push
sub
and
jbe
xchg
inc
imul
stos
jecxz
stos
popf
push
adc
push
xchg
in
jge
push
xor
out
dec
pop
adc
insl
and
jg
out
pop
ja
mov
out
inc
pop
fwait
lods
jae
sbb
sub
and
out
fwait
or
fiaddl
dec
lcall
gs
sbb
subb
jmp
jae
mov
pusha
not
fnop
andl
fidivl
pop
jno
dec
shrb
lods
inc
rcrl
imul
int3
xchg
add
dec
xor
insl
xor
addr16
jns
loope
int3
jo
popf
add
jne
push
js
push
popa
lcall
dec
fcmove
sahf
ficoms
std
jae
jl
adc
dec
mov
cli
test
frstor
ljmp
xchg
push
add
nop
cmpsb
mov
arpl
mov
adc
shr
loopne
outsl
jb
dec
inc
mov
xor
add
inc
out
incb
adc
nop
aas
jg
push
fcmovb
outsb
xlat
xlat
dec
enter
leave
test
mov
daa
lahf
divb
lods
or
ja
cmpl
pop
cltd
in
into
dec
lods
lahf
data16
push
pop
je
jae
push
or
xchg
mov
pushf
inc
lcall
push
mov
lret
shl
add
adc
lock
dec
pop
jne
popa
dec
movl
inc
dec
sbb
pop
and
sbb
xlat
out
cmp
push
cmp
mov
enter
mov
dec
and
or
stos
lret
push
cltd
int
pushf
mov
loope
mov
sbb
call
clc
js
mul
xchg
cmp
lock
pushf
ds
xor
or
outsb
popa
jo
dec
in
jae
cmp
fs
inc
pushf
mov
rcll
test
repnz
and
ds
lea
dec
cmp
cwtl
jae
in
mov
sbb
dec
cwtl
enter
arpl
push
xchg
test
shrl
jg
mov
gs
lods
aaa
mov
dec
mov
xchg
pushw
leave
xrstors
dec
lcall
loope,pt
dec
inc
or
cmp
mov
test
sbb
xchg
sub
xchg
cmc
cmp
ret
xchg
scas
movsl
xchg
clc
and
dec
loopne
cmp
jns
add
or
mov
ss
je
loopne
lods
scas
out
icebp
cmpsb
outsb
jmp
je
inc
push
dec
xor
mov
adc
out
pop
mov
test
in
mov
mov
mov
push
inc
lods
jmp
push
inc
sbb
lods
cltd
add
std
mov
inc
jmp
fimull
pop
add
mov
pop
dec
pop
inc
add
pop
cmp
cmp
adc
push
iret
push
mov
mov
xor
cmp
and
rcrl
push
mov
imul
movsb
or
mov
test
add
pop
push
mov
inc
inc
xlat
push
test
jae
push
stos
push
adc
or
data16
adc
flds
rcll
cmpsl
adc
dec
dec
mov
mov
gs
in
mov
aad
adc
mov
imul
flds
jbe
shll
xchg
mov
push
xchg
cmc
mov
pushf
hlt
inc
and
repz
mov
cmpsl
gs
or
ret
or
sub
fdivr
cltd
movsl
jl
jno
test
mov
cltd
ja
mov
lds
lahf
mov
fsts
ds
nop
xchg
mov
jg
cmovno
lock
mov
ret
xor
ret
sbb
jmp
inc
into
pop
mov
ja
fs
fdiv
shlb
jnp
pop
jmp
scas
cmpb
and
adc
sbb
inc
lods
idiv
jmp
or
orb
loope
sbb
inc
mov
pop
jae
icebp
test
inc
fcmovu
adc
xchg
sbb
cmp
push
rcrb
outsb
jmp
push
jns
jg
inc
mov
pop
les
les
out
push
sub
test
push
aam
lock
adc
pop
push
fidivrs
push
lcall
pop
dec
xor
or
lahf
push
adc
push
push
xlat
ror
add
mov
pop
xchg
pop
and
sbb
add
iret
jb
movsb
icebp
jl
push
push
test
adc
lods
lahf
mov
xchg
sub
bnd
lret
jecxz
sub
data16
lods
mov
clc
push
adc
add
notb
lods
addb
movntq
cmp
or
push
push
stos
sbb
pop
cltd
cltd
push
lds
xchg
push
imul
ret
mov
pop
pop
out
cmp
and
cmp
and
dec
imul
or
scas
adc
xor
add
in
mov
add
sub
dec
icebp
rcrl
sbb
cld
sub
movsb
movsb
mov
jns
fnstenv
loop
push
ja
ret
push
inc
inc
scas
cmc
aam
mov
mov
push
adcl
push
gs
dec
popf
insb
icebp
or
adc
xchg
fisttps
cmpsb
cmp
xlat
imul
in
ljmp
mov
es
mov
lods
add
in
inc
insb
inc
cltd
pop
fisttpll
stos
scas
stos
xor
cmpsb
movsb
xlat
sub
insb
jnp
push
jg
pushf
inc
cmp
jo
adc
ret
roll
icebp
or
lcall
inc
xchg
xlat
stos
cld
ret
ja
mov
add
out
cld
adc
mov
pop
orl
mov
add
mov
mov
je
mov
mov
inc
and
or
mov
loope
mov
test
stos
or
mov
adc
jp
mov
ss
addr16
inc
jp
sub
mov
iret
outsb
jnp
cmp
mov
repnz
int
int3
popf
xor
ds
xchg
sahf
lods
lods
mov
inc
mov
jnp
sbb
xor
movsl
sbb
shrb
sar
push
jp
push
sbb
popa
mov
jge
lret
shll
cmp
fstl
std
sahf
std
rolb
add
cmp
les
addr16
mov
jmp
fadd
imul
adc
pop
xor
add
ljmp
lret
loopne
pop
in
and
mov
mov
adc
repnz
ljmp
adc
andl
and
jp
xchg
push
std
jb
outsl
in
cmp
in
jecxz
sub
imul
leave
sbb
or
hlt
fdiv
mov
sbb
fidivrs
pop
push
adc
mov
cmovne
push
add
mov
xor
mov
in
cltd
repz
sbb
jb
fsts
lock
jmp
addr16
jg
add
fnstcw
add
testl
sti
aas
dec
xchg
pop
cltd
dec
pop
sub
sub
bound
mov
add
inc
add
jo
sbb
sub
ret
inc
xchg
mov
dec
or
sub
into
pop
inc
or
fstpl
cli
stc
inc
jp
sub
xor
insl
aas
sbb
sub
dec
int3
xchg
je
jb
or
inc
xchg
fstpl
shlb
push
adc
cmp
and
inc
pop
subb
sti
dec
sahf
jle
mov
lods
xchg
test
jnp
cmp
shrl
pop
sbb
fwait
inc
pop
pop
xchg
inc
cmp
mov
fldt
push
or
test
daa
mov
jno
int
xchg
or
fsubr
inc
aad
mov
and
jnp
lcall
mov
pop
xchg
xlat
xchg
cltd
stc
fprem
popa
and
sbb
clc
sti
popa
andb
dec
cs
mov
mov
rolb
lcall
adc
jg
inc
adcl
cmc
je
lret
or
jg
js
sub
sbb
in
xlat
add
test
jns
mov
cwtl
orb
outsb
loop
jp
aas
jae
cs
dec
dec
test
data16
test
xchg
js
insl
test
sbb
loopne
push
mov
arpl
jmp
push
fsubrl
dec
imul
pop
pop
lds
fcmovu
out
lcall
ret
in
repnz
lods
cmpb
jmp
pop
decl
mov
loopne
add
dec
bound
push
jae
cmp
dec
pop
or
xchg
xlat
sbb
xchg
fmull
push
mov
add
lods
int3
xor
cmp
dec
push
cmp
ljmp
loopw
jno
push
mov
sub
mov
jle
push
stos
jo
dec
pop
pop
outsb
adc
adc
mov
adc
mov
mul
jg
jbe
jb
lret
out
xchg
xchg
mov
int
movsl
add
pop
xor
jmp
push
adc
test
mov
in
or
adc
test
lods
add
jae
jmp
xchg
mov
push
jns
adc
movsl
mov
dec
mov
test
cmp
lods
mov
dec
mov
inc
jmp
xadd
xchg
mov
shrb
pop
movsb
mov
push
gs
mov
aaa
xchg
push
and
fmul
cmpsl
mov
pushw
sbb
sub
insb
out
and
mov
pop
loop
notl
dec
in
std
repz
adc
sub
roll
cli
dec
leave
xor
outsb
out
cmp
mov
sahf
add
sbb
push
out
js
mov
and
shll
dec
mov
cli
orl
rcl
xchg
aas
cmp
test
hlt
into
or
sub
repz
mov
sti
cmc
xor
aad
push
dec
andb
pop
or
bound
nop
mov
mov
test
test
mov
xchg
divl
jns
mov
sub
adc
cmp
out
pop
mov
mov
jnp
cmc
sbb
mov
nop
inc
jle
imul
jb
push
mov
mov
ljmp
in
xchg
jns
ret
imul
stos
dec
idivb
test
mov
out
cmc
push
mov
jno
aam
ret
jno
ret
xor
aad
xor
or
cmp
xor
cmpsl
pusha
addl
lret
lds
clc
test
cs
jecxz
jae
sarb
push
int3
gs
js
push
cmc
fsubr
jb
enter
cmc
fimull
jge
out
mov
rcrl
inc
lcall
aam
aam
outsb
jmp
cs
nopl
lods
jp
sarl
xchg
push
jo
dec
popl
xor
dec
cltd
sbb
cmp
push
ss
enter
in
inc
jbe
cwtl
push
pop
jp
adc
out
pop
popa
cmc
sbb
inc
movsb
fisttpl
test
jbe
add
lcall
pop
bound
xor
pop
xchg
sti
mov
xchg
or
icebp
enter
mov
push
lret
stos
in
or
mov
and
popf
ret
xor
cmp
leave
rcrb
mov
inc
pusha
dec
lret
out
xchg
inc
jns
dec
daa
push
imul
fdivl
popa
pop
sub
jp
and
outsl
cs
xor
and
xchg
push
xor
in
int
out
adc
add
movsb
xor
jmp
dec
jle
lahf
fcoml
into
xchg
and
dec
test
into
orb
push
mov
dec
cmp
dec
and
mov
push
push
pop
sbb
shrb
mulb
subl
sbbl
xchg
sbb
mov
xor
dec
pusha
add
lea
inc
cwtl
dec
dec
leave
int
inc
or
outsb
cmp
cmp
rcrb
iret
dec
les
inc
mov
and
add
cld
xor
cmp
push
in
mov
and
xor
mov
adc
cmp
out
mov
jl
lret
roll
lea
popa
stos
xor
test
icebp
push
mov
mov
mov
mov
fcmovnb
push
push
movsl
adc
rcrb
jg
sbb
sti
cmp
xor
sub
push
mov
push
fsubrs
and
fisubrl
aam
xchg
pop
sbb
sub
test
jp
pop
adcb
or
inc
mov
arpl
popa
xorb
mov
jge
mov
insb
mov
cltd
fwait
adc
mull
xchg
lods
sbb
push
jecxz
mov
jns
mov
cmp
js
lea
test
shr
sti
sub
jmp
pop
filds
icebp
loope
fldenv
cli
mov
stos
out
sarb
repz
inc
lahf
mov
mov
test
sub
xchg
xchg
mov
adc
xchg
pop
testl
pusha
sbb
xchg
aad
fs
bnd
nop
pop
dec
cmpsl
xor
mov
add
in
xchg
mov
pop
outsb
data16
xor
clc
push
repz
jl
popa
test
outsb
sbb
jp
fldt
fldt
fistps
and
lock
lock
cmp
sbb
cmc
mov
cmp
sbb
xor
nop
adc
sbbb
or
setg
cs
push
sbb
lods
mov
jle
arpl
lea
dec
xor
call
int3
mov
push
sahf
mov
pop
or
dec
ret
imul
sub
dec
inc
jo
in
or
push
mov
out
dec
jge
lods
inc
lock
repnz
shrb
orb
xor
xor
lods
daa
adc
rolb
mov
mov
fwait
out
pop
cmp
mov
mov
loop
out
or
filds
imul
bswap
inc
je
fcoms
xchg
sub
adc
imul
and
rorb
fstpt
xchg
call
mov
sub
fldenv
das
insl
mov
ret
sbb
dec
mov
outsl
insb
xchg
lods
mov
lds
xlat
add
cmp
cmp
inc
jne
fdivr
rorl
roll
mov
adc
jne
inc
shrb
les
pop
cmpsb
rorb
popf
xchg
loope
jp
push
test
rcr
pusha
jbe
and
movsl
mov
stos
push
push
push
popf
cmp
rep
xchg
scas
enter
movsl
arpl
loop
scas
push
pop
imul
dec
movsb
cmp
add
fbld
icebp
int3
out
pop
inc
add
fwait
adc
lret
mov
sarb
sbb
fstl
faddl
jns
jp
pusha
scas
dec
xchg
sub
dec
daa
dec
sahf
mov
dec
test
push
loope
popa
sbb
nop
lods
lds
pop
xchg
jns
xchg
lret
sbb
mov
cld
sbb
enter
out
ljmp
insb
push
inc
das
or
xlat
int
jae
rcll
jle
push
dec
xchg
mov
sub
test
sub
je
sti
lds
or
jne
push
aas
cmpsb
add
adc
imul
cld
fsub
enter
add
fstpt
xor
lods
nop
adcl
mov
cs
and
shll
xchg
enter
push
call
test
mov
cmc
or
and
fcmovne
testb
call
adc
test
in
pop
in
aaa
pop
or
mov
lahf
movsb
fs
out
ja
inc
dec
divl
mov
xor
clc
cs
or
mov
push
out
pop
js
jl
sub
mov
je
jmp
sbb
fists
rolb
mov
scas
rorl
mov
jns
dec
insb
add
lods
inc
iret
cs
test
push
cli
add
and
repnz
inc
jbe
int3
xor
loop
jae
dec
out
insb
lret
push
cmp
fcmovne
mov
hlt
inc
jbe
lds
icebp
cmp
lock
and
mov
sub
and
cli
aas
mov
cli
pop
lea
fcoml
mov
test
dec
loope
jge
push
xor
mov
or
push
push
inc
adc
jo
mov
les
imul
push
icebp
in
call
gs
adc
jmp
mov
shrl
mov
out
cwtl
repz
das
aas
iret
mov
lcall
outsl
mov
xlat
outsl
pop
test
js
adc
pop
add
faddp
xor
pop
pop
sub
aas
je
jns
mov
mov
out
jno
aam
sub
sbb
dec
inc
sub
mov
test
mov
mov
or
addr16
xchg
push
cmp
jne
pop
stos
in
cmp
popa
fxch
push
dec
xchg
add
mov
add
mov
add
lahf
stos
divl
push
in
mov
xchg
cli
jmp
add
repnz
fidivrs
sub
mov
dec
mov
in
sti
dec
icebp
mov
mov
cltd
stos
loopne
dec
dec
cli
jb
lcall
hlt
mov
mov
aad
ret
jno
dec
enter
lods
in
cmp
mov
cmc
pushf
dec
mov
adc
adcl
test
jl
popa
cmp
add
aaa
fmull
xor
mov
lods
xchg
test
xchg
mov
inc
pop
nop
xchg
rolb
and
cmpsb
push
outsl
loopne
ss
pop
aaa
inc
rorl
inc
icebp
les
push
adc
scas
cltd
lock
leave
int3
push
inc
mov
mov
or
addr16
enter
popa
jae
jmp
stos
push
mov
cmpsl
sti
xchg
in
xchg
jge
lods
mov
hlt
ljmp
pop
loope
shlb
adc
sbb
out
ss
aad
cmpsb
mov
xor
push
push
mov
int
pop
jo
and
rorb
xor
sbb
xchg
cmp
jmp
int3
push
pop
dec
mov
jmp
mov
inc
out
mov
sbb
mov
dec
fs
dec
loop
daa
mov
cmp
out
push
dec
xchg
adc
clc
nop
xor
mov
mov
pop
jbe
cmc
in
and
mov
lret
test
mov
pop
mov
adc
push
ret
jg
push
push
js
mov
mov
adc
push
dec
jns
rcrb
dec
mov
sbb
sti
cwtl
insl
nop
inc
inc
ss
pop
mov
pop
mov
push
fadds
mov
leave
mov
fisttpl
mov
or
pop
sub
lods
cmp
sbb
mov
cmpsl
xor
inc
jmp
mov
cmp
popl
dec
test
lods
shrb
ljmp
fimuls
or
pop
xor
or
xchg
insb
stos
mov
das
dec
frstor
adc
xor
sub
mov
int
fs
jo
xor
xchg
cld
xor
cmpsl
pop
in
insb
out
out
sbb
nop
ds
jne
mov
scas
int3
das
das
pop
xor
pop
cmp
cmc
pause
xchg
and
push
cmp
and
imul
inc
fbstp
outsb
lods
sarb
push
sub
push
in
ljmp
insl
stos
repnz
mov
nop
mov
fsubl
add
testl
outsb
iret
imul
xor
cld
loopne
aad
and
inc
xorb
leave
into
sbb
pop
repz
pop
inc
sbbl
jno
sbb
sbb
call
mov
inc
jns
cwtl
fs
pushf
ficomps
test
into
dec
mov
adc
cmpb
scas
push
mov
ja
jbe
mov
outsl
mov
out
loope
notb
ss
in
imul
xchg
add
lcall
mov
movsl
je
xor
dec
mov
mov
lds
adc
jecxz
and
popa
in
cmp
negb
ljmp
push
call
arpl
jge
jno,pt
lcall
lock
cmovl
dec
loope
mov
pop
fdivs
or
push
insl
cmpl
jns
into
or
sub
rolb
arpl
addl
sub
sbb
into
push
dec
syscall
sub
sbb
int
pop
jns
fstpt
out
pause
pop
jns
inc
push
mov
clc
subb
mov
adc
clc
sub
add
je
xor
jnp
lds
mov
cmp
jge
lcall
mov
outsb
push
ret
fidivs
in
xor
cwtl
cmc
and
pusha
aaa
pop
mov
arpl
icebp
push
fst
push
mov
xor
std
divb
jge
test
cmpsl
adc
sub
push
mov
mov
xchg
cmp
jo
pushf
pop
pusha
lock
sub
movsl
lods
mov
mov
sub
insl
mov
mov
add
pushf
jnp
inc
adc
xchg
mov
in
movsl
sub
mov
imull
and
mov
jns
subl
push
mov
into
jecxz
push
cmc
inc
sbb
fstl
sarl
xchg
jno
jo
popf
cmpsb
inc
sub
xchg
cmp
and
lock
push
out
addr16
and
xchg
jge
push
xor
insb
sbb
sarl
lods
cmp
jbe
aas
rcrb
stos
mov
lods
out
or
out
xor
icebp
mov
fimull
jecxz
int3
test
jnp
xchg
lret
lcall
out
sahf
lcall
sub
jl
mov
push
fwait
in
cmp
pop
push
add
ds
shl
cmc
test
cmp
sub
adc
scas
out
and
mov
dec
push
inc
ja
outsl
nop
adc
lret
fistps
dec
clc
jne
ret
push
ds
call
jl
sub
lret
call
lds
mov
imul
dec
and
in
cmp
js
ss
cmp
push
inc
out
adc
clc
das
dec
jo
dec
dec
xchg
es
ljmp
mov
cltd
fildl
ret
jl
xchg
or
loope
sub
adc
jae
pop
mov
push
mov
and
xor
lret
cmp
pop
pop
das
icebp
jg
pop
xor
xor
push
ss
in
pop
and
xchg
mov
xchg
mov
jbe
outsl
jo
out
dec
or
inc
test
dec
orb
mov
pop
inc
imul
aam
fsubr
jle
ret
dec
pop
outsb
cld
pop
mov
imul
push
std
cmp
and
and
test
cmpsl
adc
cmp
pop
mov
sbb
aam
pop
subb
push
or
loope
xor
cmp
mov
push
inc
lahf
imul
aaa
inc
dec
pop
pop
inc
scas
aas
xchg
sub
inc
push
jbe
or
test
inc
fldl
movlps
pop
popl
aad
dec
icebp
ja
xor
lods
addr16
sub
xor
das
into
stos
xor
imul
add
stos
dec
hlt
or
push
mov
jg
push
test
dec
in
sbb
popa
xchg
stos
mov
out
lods
fcom
mov
lods
cmp
ret
sbb
sbb
adc
arpl
mov
mov
subl
inc
pop
sub
dec
call
jecxz
fisttpl
sub
xchg
or
lock
lds
insl
sar
mov
scas
cmpl
add
pushl
loopne
xlat
lods
pop
pushaw
jns
pop
dec
dec
rorb
clc
sub
mov
std
popf
inc
imul
cs
jns
lea
fs
pop
ss
sbb
push
dec
xlat
cmp
dec
and
and
push
scas
mov
inc
jnp
lcall
jl
mov
out
add
test
cmp
mov
cmp
dec
jmp
movhps
cmp
jl
lock
out
aad
out
jne
shll
movsb
int3
daa
lds
adc
dec
and
lods
pop
aas
jmp
shll
mov
pusha
hlt
push
mov
nop
cwtl
or
jmp
mov
loop
mov
push
fs
dec
mov
mov
in
inc
xor
push
dec
stos
into
scas
test
cmp
xchg
das
mov
cmc
push
or
xchg
inc
fbstp
cld
enter
pusha
jg
sti
outsl
mov
pop
cld
pop
mov
arpl
aam
push
sub
jg
jl
loopne
bound
pop
mov
jmp
repnz
cmpsb
cmp
loopne
xchg
cmp
cmc
adc
xchg
in
cwtl
mov
jge
mov
and
lods
push
fists
lods
push
cwtl
xor
and
call
jp
sbb
xor
divl
jl
popf
lods
mov
daa
mov
pop
mov
in
pop
iret
xlat
pusha
movb
iret
mov
push
stc
outsb
cwtl
xor
sbb
pop
imulb
mov
pop
outsb
test
mov
cmpsb
bound
xor
cmpsl
jle
jecxz
rcll
repz
lds
pop
rolb
imulb
add
adc
fadd
mov
cld
cmp
jae
add
dec
addl
jno
jp
mov
mov
leave
push
jb
imul
cmp
mov
pop
sbb
sahf
scas
mov
mov
pop
push
add
outsl
pop
xchg
dec
push
cltd
fsubp
leave
mov
scas
cmp
bnd
out
rcrl
inc
sbbl
mov
jg
int
js
rolb
rcrb
shrb
cwtl
mov
mov
add
sub
addr16
mov
pop
sub
jo,pn
in
aas
test
cld
inc
imul
pop
lods
scas
lea
scas
sub
icebp
cmpsb
ja
scas
mov
popf
mov
pusha
gs
xor
jg
xchg
jne
xor
pop
adc
into
dec
mov
xchg
fwait
mov
ljmp
jo
je
pop
adc
cs
mov
test
adc
adc
in
imulb
mov
sub
xor
adc
ss
incb
rcll
das
insb
sub
pop
mov
adc
fidivl
dec
out
mov
ja
and
push
push
insb
adc
and
mov
push
nop
xchg
mov
mov
mov
iret
push
into
dec
mov
lods
aaa
pop
enter
push
les
shl
cmp
push
adc
fidivs
jno
add
jmp
inc
imul
xchg
push
sbb
test
test
push
dec
lods
ret
nop
jg
jo
jnp
mov
loopne
dec
adc
mov
and
sbb
inc
or
dec
sar
cld
fwait
mov
and
out
xor
int
jo
loopne
out
sub
xchg
int
lret
dec
mov
inc
pop
pop
cltd
push
out
jecxz
or
out
jp
fadd
mov
xchg
cmp
push
cmp
pop
push
idivl
stc
call
mov
pop
cmp
rorl
sub
jecxz
and
aas
cli
fwait
aam
or
mulb
das
xchg
test
loopne
icebp
lods
stos
lea
lahf
mov
xor
fsubrp
rorl
inc
andl
jae
aas
dec
pop
jbe
aaa
or
mov
ficompl
adc
mov
and
js
pushl
loope
xchg
sbb
mov
hlt
imul
inc
sbb
jmp
adc
sbb
adc
dec
mov
pop
js
insl
sub
in
outsb
mov
fwait
stos
jmp
jae
outsl
jno
jbe
andb
add
jnp
jge
adc
jl
cmp
xor
pop
jb
clc
jae
into
xor
jmp
clc
push
pushf
or
test
lea
lret
cmpsl
iret
add
cmp
mov
sbb
les
loope
jle
lcall
aaa
jmp
xchg
pop
aaa
out
repnz
out
aad
mov
jno
cmp
dec
arpl
nop
stos
shl
jge
xor
mov
iret
pusha
aam
out
roll
aaa
push
adc
outsl
jo
loope
cmp
or
inc
xchg
add
lods
int
xchg
popa
jne
mov
adc
xchg
adc
jb
movsl
adc
mov
pop
xchg
dec
fiaddl
mov
jbe
add
adc
mov
mov
mov
mov
push
dec
mov
mov
add
sbb
ds
dec
sub
push
jno
cmp
pop
ss
lock
int3
sub
movsb
pop
mov
clc
int3
mov
jmp
jno
mov
cmp
out
aas
jne
subl
ds
sbbl
insb
int3
subb
test
sub
jno
cwtl
dec
bound
cmp
jb
inc
pop
out
into
je
outsl
push
popf
cli
mov
aaa
fcomps
push
out
jecxz
es
cmp
out
mov
add
into
aaa
jge
int
and
lret
ds
sar
dec
push
fildl
lret
pop
mov
mov
popf
aad
pop
cli
fistl
cbtw
int
lcall
repz
js
and
lret
daa
sbb
aaa
inc
cmp
dec
inc
sbb
enter
test
xchg
mov
jae
cmp
rcll
arpl
push
pop
mov
icebp
data16
and
xor
lods
cwtl
popa
or
test
add
pop
pop
ss
scas
pop
xor
mov
enter
push
ljmp
adc
inc
lcall
xchg
add
push
jl
rcr
orb
ja
or
repnz
push
inc
adc
call
sbb
mov
lea
jnp
jmp
ret
scas
pop
push
dec
cmpsl
lock
mov
cmp
inc
shlb
ds
inc
leave
popf
inc
pop
cwtl
mov
sbb
adc
sub
add
imul
cmp
and
cmp
stc
in
mov
jae
sti
and
jb
imull
lahf
sub
add
imul
or
cmp
add
inc
in
add
xorb
xlat
repnz
cmp
sarb
icebp
nop
stc
mov
mov
cmpsb
adc
mov
notb
xchg
xchg
or
adc
push
cmp
push
shll
xchg
les
cmp
xchg
and
or
sub
mov
cltd
data16
sbb
push
in
fidivrl
imul
sub
inc
cmp
mov
pushf
loope
add
cmp
push
sub
xor
cmp
pop
jns
push
repnz
push
popa
outsb
mov
pop
sub
sbb
inc
xlat
xchg
inc
jl
jge
mov
ficompl
les
lods
pusha
mov
out
add
fs
nop
repz
leave
jne
sbb
addr16
ss
leave
lock
hlt
lds
mov
dec
dec
jle
leave
inc
or
mov
push
adc
inc
or
enter
std
or
aaa
mov
faddp
roll
lret
inc
out
pop
inc
call
cmp
fdiv
lcall
push
sbb
jp
push
cmpsb
pop
je
cmp
loope
adc
aam
pop
dec
lahf
and
pop
arpl
jmp
xor
fadds
push
ret
fnsave
jno
jbe
mov
rcrb
sti
pop
add
add
inc
adc
arpl
aam
xchg
testb
cmpsb
push
jb
outsb
int
pop
jbe
sbb
mov
jle
cld
mov
or
mov
sub
mov
push
lods
inc
call
std
cld
and
adc
sub
mov
imul
jnp
inc
lcall
mov
test
push
lds
aas
cltd
js
outsb
cmp
lods
and
int
sub
push
ror
rclb
test
in
or
jl
push
jbe
xor
xor
icebp
ljmp
test
push
xchg
rolb
xchg
push
cwtl
jecxz
mov
hlt
xchg
pop
dec
loope
xor
jg
xchg
jle
int
inc
je
sahf
stos
sbb
cmpsl
inc
or
daa
lcall
arpl
xor
lcall
or
in
xor
rcrb
cmp
std
sbb
pusha
cmpsl
rclb
popf
fistpll
arpl
xchg
push
in
or
jl
out
xor
mov
js
sbb
idivb
daa
dec
jmp
mov
mov
mov
pop
je
mov
stos
movsb
cltd
inc
negl
lea
inc
popa
adc
ror
cmpsl
and
jno
cmp
pop
bound
pushf
repnz
shr
inc
mov
add
sbb
inc
sub
lret
pop
int3
mov
pop
test
daa
sub
mov
test
dec
addr16
push
sbb
out
fs
fmul
lret
mov
stos
cld
inc
popf
ret
jnp
clc
xor
aaa
sbb
dec
movsl
daa
push
leave
je
inc
sub
insl
jmp
popa
xorl
inc
xchg
mov
cmp
gs
cmpsb
cltd
mov
mov
add
inc
mov
arpl
outsl
ret
push
fldl
into
xchg
shlb
cmc
loop
mull
decb
push
xchg
xchg
orb
pop
push
ret
dec
sub
test
in
sar
jo
and
cmpsb
imull
pop
push
daa
dec
jbe
sti
leave
ljmp
scas
int3
in
xor
das
cmc
jle
je
cmp
incl
jno
or
mov
mov
push
jecxz
arpl
pop
sub
cmc
mov
ja
cmp
mov
or
cmp
add
pushf
jle
xor
loope
aaa
mov
or
idivb
iret
sbbb
mov
fbstp
jmp
orb
sub
test
jge
into
and
cmc
inc
scas
mov
jp
sti
and
repnz
movsl
fsubp
sti
shl
adc
scas
call
xchg
test
out
pop
pop
jl
into
in
lods
lahf
cli
xchg
sarb
mov
addb
frstor
out
hlt
dec
add
je
ficomps
divb
popa
jecxz
lret
push
push
cmpsl
ret
stc
insb
mov
fmull
add
ljmp
and
cli
adc
mov
test
pop
ret
mov
lcall
repnz
clc
and
test
fidivrl
cmpsb
mov
ret
fwait
cmp
or
test
cmp
xor
pop
dec
inc
fimuls
push
mov
arpl
push
insl
push
add
scas
jg
dec
outsb
fcmovnbe
popf
xor
xchg
rcl
and
adc
ja
xchg
pop
pop
sbb
adc
dec
adc
xor
decb
jb
fs
insl
mov
cli
roll
jnp
cli
dec
nop
icebp
imul
adc
sbb
lcall
sbb
sti
sahf
into
add
jl
xchg
mov
pop
repz
imul
jne
enter
jns
js
aas
inc
fildll
jne
or
fists
jecxz
cld
sahf
aaa
sub
cmp
lcall
sbb
in
lods
mov
inc
cmpsl
lahf
xchg
push
and
rorl
inc
sarl
ret
in
rcrl
sbb
sbb
stos
je
popa
sbb
cmc
repnz
xchg
in
push
xor
in
sbb
lcall
std
out
cmc
push
or
imul
xchg
leave
ljmp
cmp
xchg
mov
push
inc
faddp
jp
sub
inc
jb
and
aaa
inc
mov
jecxz
dec
mov
in
fistpll
push
sbb
notl
mov
jns
loope
sub
cmpsb
cmp
mov
out
repz
in
shlb
rorb
inc
mov
xchg
pop
loopne
push
lods
pop
scas
pop
dec
dec
arpl
mov
ficoms
xchg
ja
xchg
ds
or
arpl
outsl
ret
xchg
aas
mov
std
cmp
xor
ja
cmp
add
push
std
sub
loopne
add
mov
jle
leave
and
les
arpl
notb
data16
stos
jae
cmp
cltd
rcrb
add
jp
jle
lahf
shlb
mov
call
movsb
mov
sbb
fisubl
outsb
dec
adc
fidivl
shrb
loop
leave
or
pop
loopne
movsl
and
cmp
nop
xor
dec
push
sarb
or
mov
sbb
aaa
loope
and
and
xor
call
das
adc
jns
rol
clc
sbb
ljmp
push
aad
mov
mov
mov
addr16
or
mov
stos
outsl
and
rol
pop
jg
xor
xchg
sahf
das
add
imul
scas
push
out
dec
jp
fstpt
jmp
xchg
jo
bound
gs
add
pop
sbb
cmp
lret
cmp
fisttpl
outsb
mov
int3
dec
orb
out
std
inc
jae
jecxz
cltd
cli
or
pop
sub
rcrb
sub
cmpsl
jg
mov
xchg
lahf
lods
and
pop
mov
sbb
out
xor
subl
imul
inc
movsb
ficompl
movsl
mov
xchg
outsl
shll
mov
fisttpl
loope
jp
add
cmp
mov
sti
mov
push
repnz
ret
dec
mov
hlt
sub
dec
xor
nop
les
out
add
out
daa
lds
dec
lret
cmp
movsb
icebp
add
mov
aas
inc
and
hlt
stos
sub
leave
in
mov
mov
scas
jb
out
sub
cmp
pop
dec
xor
push
or
inc
xor
pop
push
mov
jnp
gs
addl
out
jl
mov
adc
test
insl
das
pop
mov
and
addr16
ljmp
pop
rcll
movsl
mov
loop
imul
pushf
jns
addl
adc
or
cmc
mov
stos
sub
sub
mov
xchg
push
add
std
pop
lret
loop
out
jge
adc
adcl
jae
fdivrs
lea
cmp
lret
push
push
shrl
bound
mov
sub
push
aaa
add
cmp
lahf
aam
xchg
fcmovnbe
jae
enter
sbb
push
ljmp
in
add
jecxz
movsb
or
inc
push
rcll
sub
hlt
mov
dec
pusha
mov
aam
sub
js
ret
push
push
scas
cwtl
data16
jg
inc
dec
pop
cs
xor
pushf
sub
ds
je
shll
rolb
cs
dec
dec
scas
test
ss
adc
ljmp
sbb
mov
adc
sahf
mov
xor
and
pop
sub
cld
int
adc
arpl
sbb
shrb
push
jl
sar
lods
xchg
mov
add
xchg
fdiv
inc
andb
dec
shl
cld
xor
ljmp
idivb
leave
push
jae
pop
lahf
outsl
dec
out
aad
pop
out
adcl
mov
int
roll
lods
out
popa
inc
inc
cmp
popf
loope
movsl
dec
xor
and
cli
fcmovb
pop
add
sub
stos
test
lods
pop
xor
imull
jecxz
inc
imul
repz
loope
or
dec
xor
sbbl
mov
pushf
xor
inc
jne
mov
cs
arpl
pop
jg
mov
out
add
inc
imul
adc
push
push
popa
les
mov
sub
aas
xchg
ljmp
inc
dec
fstpl
lcall
mov
testb
das
and
add
inc
out
inc
push
icebp
dec
addr16
or
add
lea
lahf
loop
shrb
mov
push
sub
lea
add
sub
push
loop
iret
mov
test
hlt
cmp
xchg
jg
or
scas
movsl
mov
arpl
xor
loop
mov
mov
notb
aas
sarw
sti
scas
lds
push
jmp
mov
add
sbb
jecxz
in
pop
add
scas
push
or
jae
inc
dec
jecxz
jecxz
jg
pop
sub
xchg
or
inc
adc
mov
insl
cmpsb
add
jmp
std
push
or
fstps
mov
gs
pop
cmp
pop
mov
pop
sbb
push
lret
loop
add
inc
cmp
jae
and
xchg
adc
loop
rorl
add
rol
rcll
sbb
test
inc
ja
sub
dec
pop
and
mov
pop
lret
leave
jno
fs
jg
sbb
push
sbb
adc
and
mov
xchg
cli
jbe
fs
addl
out
mov
dec
cmp
repnz
rolb
out
xlat
pusha
ljmp
cmp
gs
sahf
mov
ljmp
push
cmp
pop
jge
das
iret
stos
pop
mov
rcll
in
dec
pop
test
sahf
jmp
cli
xchg
andl
cmp
insl
cmc
inc
mov
dec
mov
sahf
sub
mov
jl
ret
std
push
out
test
sub
push
sub
adc
and
mov
pusha
sti
sbb
scas
jp
movsb
xor
ljmp
clc
lods
ret
pop
daa
inc
je
fs
test
inc
xchg
rcrb
mov
jg
mov
mov
jns
test
es
mov
daa
xchg
jae
push
cmp
push
cld
lcall
stos
imul
add
std
jne
lret
cmp
pusha
cld
mov
pusha
mov
jp
push
pop
ljmp
insl
cmp
xchg
mov
lcall
pushf
sarb
aas
lods
cltd
fisubs
fcoml
cmp
dec
push
and
sti
lock
pop
lcall
je
imul
es
ret
loop
in
dec
cmc
dec
push
xor
jp
lahf
cmpsb
aaa
push
dec
mov
in
lds
jbe
popa
push
and
std
jnp
jae
mov
xor
inc
and
mov
cld
add
xchg
push
mov
and
outsl
in
pop
hlt
dec
repnz
mov
scas
or
push
lret
and
sbb
push
push
scas
lea
mov
and
neg
aad
mov
inc
aad
push
pop
jo
sbb
out
xor
mov
and
arpl
mov
lods
push
pop
and
adc
rorl
imul
decb
popa
xor
sahf
aad
fiadds
and
mov
aaa
xchg
or
lods
stos
out
sbb
cwtl
sarl
xchg
js
stos
sub
jbe
pushf
adc
out
mov
rorl
sub
out
add
rorl
sbb
xchg
fisttps
sarb
and
inc
mov
jmp
cwtl
repz
fwait
hlt
shlb
sbb
sbb
fs
sarb
xchg
mov
lahf
push
cmpsl
cmp
icebp
and
outsl
addl
inc
enter
add
lret
add
ja
push
test
cltd
push
pushl
xor
xchg
lcall
mov
pop
push
out
dec
dec
and
dec
inc
repz
ljmp
dec
push
imul
pop
dec
sub
cld
aad
jge
popa
cmpsl
xlat
pusha
sahf
faddp
mov
ja
hlt
popf
cmc
dec
cmp
mov
xor
push
or
mov
xchg
inc
xorl
lret
sub
add
mov
mov
mov
fistps
xor
repnz
jb
test
add
call
push
and
push
popf
out
hlt
shrb
mov
xor
add
mov
pop
scas
cmp
loopne
add
mov
jmp
jb
movsb
ja
outsl
into
and
and
inc
xchg
mov
sub
ds
jns
jnp
nop
mov
cltd
push
and
aas
into
or
pop
orb
loop
add
xchg
cltd
rdtsc
inc
cmp
in
lcall
jle
mov
xor
mov
call
jne
nop
and
sub
pop
jno
jle
mov
dec
shrb
enter
repnz
int
ror
mov
jbe
sub
push
aam
or
xor
fs
cmp
sbb
in
push
int
jo
sahf
pop
dec
fcompl
leave
popa
add
mov
repz
cmp
insl
sahf
xor
inc
stos
adc
jb
cltd
cmp
xor
fldt
js
push
divb
cmpsl
cmp
dec
add
sbb
jg
dec
inc
pop
push
mov
lcall
cli
fidivrs
loop
iret
push
pop
js
pop
push
mov
fnstcw
push
loop
mov
mov
adc
mov
mov
stos
nop
add
mov
mov
cmp
in
out
ret
outsl
faddp
push
add
adc
inc
imull
lock
cwtl
lock
lcall
mov
sub
loop
add
int3
sbb
inc
sub
adc
add
inc
mov
fnstenv
adc
pop
push
icebp
loope
mov
addr16
pop
mov
lea
pop
push
in
insb
notb
test
jg,pt
push
std
mov
push
idiv
sahf
movsl
mov
cmp
cmp
mov
xchg
ss
jge
sbb
or
out
mov
jnp
add
inc
cld
fisubs
pop
push
fsubr
shll
addr16
scas
pop
sub
mov
les
hlt
jns
jg
rorb
jne
ror
add
mov
sub
or
sti
or
out
in
je
jp
std
dec
xlat
xor
adc
inc
std
and
adc
test
mov
data16
jle
hlt
sub
push
mov
test
adc
mov
out
popf
jo
sub
dec
int
or
icebp
dec
nop
xchg
setno
test
sbb
addr16
sti
leave
mov
fdivrs
repnz
imul
dec
cmp
jnp
pop
mov
sub
addr16
push
and
sarl
jge
sbb
cs
or
cmc
fsts
int3
jb
insl
adc
mov
mov
sahf
add
mov
and
adc
mov
inc
mov
ja
clc
nop
dec
mov
mov
mov
lcall
pop
test
jno
inc
out
imul
outsb
dec
imul
stc
cwtl
push
cli
lds
and
lret
lods
test
inc
pushf
dec
int3
int
in
jno
xchg
pop
xlat
jae
xchg
pop
out
xchg
out
xchg
dec
cli
mov
push
pop
push
addr16
sub
sub
aaa
imul
adc
insb
dec
jl
loopne
cmp
pop
mov
xor
imul
push
mov
jno
mov
shll
inc
push
sub
loop
mov
ds
sahf
negb
aam
fists
jo
xor
lcall
and
andl
bound
cli
cmp
loope
cmp
lret
xchg
and
mov
into
shll
addb
dec
lcall
ljmp
lock
push
jge
lea
pop
push
add
lea
pop
xchg
pop
scas
and
jmp
into
xchg
pop
and
js
jmp
dec
mov
dec
or
sub
sub
sub
jb
sbb
xlat
jg
loope
nop
aas
xchg
mov
int
js
adc
ret
sub
push
scas
mov
leave
sub
jecxz
xchg
std
push
lock
in
js
jl
icebp
jb
xchg
movsl
dec
mov
push
xor
pop
and
xor
adc
cmp
add
mov
outsb
mov
daa
jl
call
and
subb
ret
adcb
xchg
mov
sbb
stc
mov
scas
mov
and
in
out
adc
idivl
jle
pop
mov
xor
outsl
testl
sbb
xor
cmp
movl
outsb
stos
in
subb
aam
enter
add
addb
popf
lahf
incb
push
or
lea
pop
movsl
xor
push
lret
xor
xor
outsl
xchg
lods
sbb
sahf
dec
mov
jo
jp
aad
outsb
sahf
and
rolb
jbe
and
inc
push
rcrb
mov
inc
sub
fcmove
shlb
xchg
inc
test
lret
inc
test
cmp
adc
jne
and
cmp
ja
xchg
ljmp
aad
inc
mov
sub
mov
sti
jo
loope
jecxz
cmp
fimull
mov
ret
ds
daa
leave
xchg
lret
inc
testl
pushw
lahf
dec
cs
pop
adc
or
outsb
js
jb
repz
jle
testl
inc
mov
pop
sbb
pop
in
arpl
jl
out
pop
adc
mov
xor
jo
fcomip
mov
push
inc
or
je
push
inc
adc
test
loope
lcall
push
cmpb
rcr
aaa
fstl
xor
xchg
sbb
leave
ljmp
mov
dec
insl
cmp
dec
cltd
rclb
jmp
scas
sub
outsl
out
dec
pop
xchg
sarb
pop
sarl
jl
sub
mov
andb
fcmovnu
cmpsb
sbb
fistps
out
fcomps
cmp
sbb
pop
mov
xor
mov
push
sbb
sarb
sbb
sbb
cmpsb
mov
popa
scas
aaa
movsl
jno
call
xor
dec
push
cltd
leave
push
enter
sbb
inc
mov
mov
dec
jb
add
test
xor
mov
dec
js
push
add
mov
dec
jp
xor
jge
mov
add
jg
out
scas
sub
dec
pushf
lea
pushf
pop
push
lret
mov
in
es
mov
test
in
xchg
jmp
sarl
jl
jmp
das
sbbl
or
adc
hlt
sub
addr16
adc
adc
rcr
xchg
push
or
mov
dec
xor
ja
addb
sahf
inc
daa
cmp
arpl
xor
sub
inc
mov
sub
outsl
jnp
aas
ja
arpl
mov
jne
in
push
xchg
jae
sbb
mov
loop
loop
dec
call
rolb
mov
outsb
push
gs
imul
gs
outsl
jne
fildll
mov
sub
cwtl
incb
std
subb
lret
mov
aam
lret
or
cli
repz
out
lock
pop
into
push
pop
mov
inc
jae
mov
fsubr
enter
or
sub
sti
cmp
andl
lret
sub
lds
lea
mov
in
jge
jecxz
jl
adc
bound
sbb
dec
dec
mov
dec
push
fidivl
add
loopne
pop
cmp
aaa
pop
cmp
mov
mov
xchg
test
fbstp
out
xchg
mov
mov
call
std
mov
mov
xor
ret
push
inc
es
xchg
outsl
mov
xchg
inc
jno
sqrtps
mov
push
push
pop
pop
cltd
mov
cli
stc
and
xor
out
arpl
fwait
movsl
jl
adc
ljmp
out
pop
mov
cmp
leave
outsl
cmp
cmp
push
orl
aam
inc
sub
enter
jmp
sub
insb
jo
pop
sbbl
mov
push
add
sub
xchg
loope
into
ja
or
hlt
mov
ja
stos
cltd
xlat
arpl
into
cmp
jne
arpl
out
push
jo
or
xor
movsb
pop
add
jae
mov
mov
fldenv
loop
dec
shlb
xor
daa
loopne
sar
xchg
pop
lods
repz
repnz
push
int3
mov
lret
jmp
inc
inc
sahf
scas
or
xor
xchg
mov
movsl
add
xchg
stos
js
mov
mov
sbb
testl
cmovge
dec
mov
iret
dec
cwtl
imul
adc
jae
adc
aas
aam
or
in
stos
and
adc
mov
lret
xor
pusha
jns
mov
call
mov
cmpb
loope
cmp
add
sub
dec
popf
xchg
xchg
push
mov
mov
cld
fptan
jo
xor
xchg
sbb
mov
out
ficomps
orb
jbe
in
pop
sbb
mov
aam
sub
push
mov
xchg
mov
push
in
addr16
pop
lret
mov
pop
push
xor
adc
ljmp
es
mov
jb
adc
js
push
sti
mov
pop
es
out
adc
sti
xchg
dec
out
jge
popf
bnd
jge
mov
mov
repz
xor
enter
into
icebp
fisttps
mov
mov
xorb
out
ret
pop
jle
mov
jae
pop
sub
inc
mov
jno
mov
push
pop
or
pop
es
inc
add
mov
sarl
fs
cmovb
in
in
rcl
jmp
dec
cmpsb
push
mov
sbb
fcmovbe
inc
mov
jo
xchg
mov
pop
mov
fucomp
loope
mov
jmp
hlt
mov
test
mov
call
jno
xchg
lods
scas
iret
mov
pop
aaa
ret
aad
test
push
repz
cmc
scas
pop
hlt
js
lock
mov
popl
stc
out
fimull
cmp
xchg
adc
das
mov
rcrb
cs
fsts
xlat
rolb
ds
repnz
sbb
inc
aam
or
inc
int
mov
out
fimuls
mov
in
cltd
loopne
push
out
inc
je
pop
in
sbb
orb
pop
adc
pushf
jb
jnp
decb
icebp
sub
inc
cwtl
jne
dec
jmp
bound
cmp
leave
cmp
jecxz
std
es
xchg
loop
inc
jmp
mov
xor
stos
aad
add
lods
mov
mov
mov
stos
sbb
or
sbb
cmpb
shlb
mov
faddp
aad
xchg
lahf
cmpsb
mov
adc
hlt
mov
inc
mov
aam
mov
mov
clc
and
inc
in
into
adc
stos
and
stos
and
mul
daa
sub
loope
xor
jl
icebp
inc
bound
clc
sbb
cmpsb
mov
push
das
loope
sbbl
push
cli
fcmove
ljmp
and
xor
pop
xor
stos
jge
gs
xor
mov
fsub
enter
fsts
lods
call
mov
jle
xor
inc
in
adc
ret
ret
cmpsl
xchg
int3
xchg
js
lea
xor
loope
mov
ret
sbb
movsb
rcrl
call
in
sbb
and
pop
lock
mov
push
dec
sbb
and
repz
xchg
or
jns
jno
out
fisubs
pusha
adc
insb
and
and
das
aaa
sub
pop
xor
and
or
xor
mov
jmp
jo
sbb
jmp
insb
bound
mov
lret
mov
or
lret
iret
adc
lea
or
pop
xchg
dec
mov
jmp
lret
mov
test
cmpsb
int3
sti
cmp
xlat
out
mov
mov
insb
push
jno
pop
jnp
je
subb
jle
jle
or
jo
stos
jp
xchg
push
push
das
cmc
cli
adc
jge
es
mov
sahf
movaps
mov
dec
and
pushf
mov
and
push
lret
or
jno
test
stc
sub
mov
cltd
stos
sbb
dec
or
cltd
jae
hlt
movsb
fnsave
pop
cld
push
bound
ret
rcl
out
add
sahf
xor
push
fidivl
ss
or
loopne
pop
mov
ret
rolb
mov
mov
lods
int
mov
jns
adc
push
add
enter
pusha
push
leave
push
cwtl
aad
pop
maskmovq
mov
push
or
xor
pop
fs
mov
iret
icebp
addl
std
iret
imul
popa
fadds
add
mov
insb
pop
test
mov
mov
dec
adc
xlat
test
inc
out
lcall
lds
add
xchg
insl
add
stos
pop
inc
sbb
shl
les
mov
aam
sub
add
lods
pop
popa
dec
sub
push
adc
mov
cmpsb
mov
sub
or
aas
and
cltd
cwtl
subl
push
mov
xchg
lret
lret
pop
push
filds
push
lock
shlb
dec
mov
adc
mov
repz
jl
insl
adc
paddsb
fs
adc
cmc
jle
pop
adcb
push
pop
aam
sbb
scas
test
sbb
sub
push
pop
les
and
adc
bound
pop
sub
fwait
mov
movq
sbb
sbb
outsb
fnstcw
dec
movsl
xchg
xor
loop
nop
lahf
addr16
sbb
pop
sbb
xor
int3
movsb
lahf
cmpl
pop
loopne
inc
sub
rol
int
fsts
or
inc
int3
mov
ficoml
into
pop
push
xchg
movsb
cltd
scas
xchg
push
mov
lcall
out
imul
js
cmp
add
loope
pushf
cwtl
xchg
ljmp
test
xchg
popf
add
push
data16
push
ja
scas
sub
dec
sti
xor
decb
cmpsl
ret
xchg
push
mov
insb
cmpsb
movsl
cld
cmp
sbb
xor
dec
add
lock
and
xchg
setno
testb
and
mov
dec
mov
adc
decb
cmp
call
mov
cmp
cmpsb
test
fdivrs
cwtl
dec
out
pop
lods
pusha
imul
gs
jnp
jge
sub
shlb
cmp
mov
jecxz
rclb
xor
movsb
in
or
push
dec
bnd
xchg
mov
pop
das
test
lret
pop
add
ror
pushf
das
ud1
fbstp
xchg
aas
push
fistpl
mov
not
and
jo
inc
das
mov
shrl
add
add
aam
dec
mov
jge
jl
rcr
cs
in
es
mov
sbb
adc
fstpl
inc
lret
dec
pop
ror
pop
mov
push
mov
fsts
cs
xlat
testb
jmp
in
or
pop
test
adc
stos
xchg
cs
xchg
jmp
and
lods
in
sbb
int
adc
and
mov
les
sbb
sahf
push
jae
pmullw
pop
not
ss
xor
inc
sti
or
add
pop
xchg
push
push
loop
pop
pop
popa
ret
mov
into
aad
bound
jbe
mov
data16
les
mov
iret
fmulp
in
adcb
mov
jmp
xor
inc
aaa
inc
leave
push
jp
jp
fwait
movsl
popl
lock
cmp
call
adc
push
inc
out
rorl
notl
aas
push
aam
es
icebp
scas
cmp
test
arpl
sbb
ss
enter
xchg
test
adc
pop
sbb
sbb
adc
dec
cmp
pop
xor
cltd
lods
xchg
bound
cltd
adc
int
cmpsl
pop
insl
call
icebp
stos
sbb
jl
leave
or
add
jle
push
add
jnp
dec
xchg
push
ret
arpl
jle
push
cmp
push
js
xor
sti
out
mov
push
add
mov
rcl
push
jb
cltd
rolb
or
movsb
push
das
jmp
pushf
pop
in
push
mov
fsubl
mov
add
sbbl
mov
setns
add
dec
xor
outsl
jp
in
sbb
sahf
ficoml
jo
mov
jge
push
shrl
and
out
leave
pop
std
add
dec
mov
jo
pop
inc
dec
jno
imul
in
xor
mov
pop
mov
std
ja
dec
xchg
int
fidivs
and
add
cmpl
in
subl
xchg
pop
enter
xchg
jmp
push
xorl
xchg
push
fxch
mov
nop
push
cs
decb
xchg
add
lahf
fstpt
dec
or
pop
cmp
leave
mov
pop
and
outsb
pushf
icebp
test
or
jnp
inc
mov
mov
out
iret
das
pushf
ss
mov
sub
cwtl
xchg
push
dec
sbb
or
arpl
ret
xchg
cmp
pop
adc
mov
stos
data16
push
cltd
push
jmp
sbb
lret
pop
dec
outsl
lret
gs
cmp
inc
cwtl
or
pushf
pushf
mov
call
pop
ficoms
int3
or
xchg
sub
or
fbstp
add
push
jmp
jns
push
sbb
mov
mov
mov
push
mov
mov
rclb
lds
cmc
sbb
cmpsb
sbb
lea
mov
dec
pop
add
mov
sub
sbb
mov
jge
dec
outsb
inc
lahf
xlat
or
aam
subl
mov
cmp
jle
mov
shlb
adc
mov
mov
or
in
adc
fdivs
pop
jmp
push
shrl
inc
push
and
xor
or
inc
and
loop
loop
hlt
dec
in
cmpsb
xchg
cmp
cmpb
adc
adc
jg
daa
pop
sbb
xor
imul
sbb
shlb
fadd
cld
mov
sub
pop
rcrb
jns
ds
je
add
pusha
adc
cmp
adc
lcall
cmp
jg
fcomps
jae
insl
jge
mov
pushf
cmp
cmp
pop
scas
xor
and
int
push
les
test
or
mov
dec
popa
sub
cmp
gs
jno
int
adc
cmpsb
fstps
add
sahf
rclb
outsl
mov
cmp
pop
mov
out
sub
mov
pop
andl
hlt
rorb
daa
cs
cmpsb
lock
adc
sub
dec
mov
daa
std
jmp
rorl
jecxz
mov
fcomi
xchg
jb
andl
pop
jle
cmc
and
into
cmp
pop
and
adc
lret
adc
shll
sub
daa
dec
xchg
test
push
hlt
mov
cmpsb
lods
in
mov
jb
in
mov
sub
mov
push
clc
cwtl
lahf
pop
and
gs
cmp
mov
fstpl
mov
xor
cmpb
jg
pop
xchg
mov
iret
add
inc
sub
mov
xlat
shll
sbb
shll
repnz
clc
shl
out
add
push
in
adc
inc
cs
jl
cwtl
xchg
inc
adc
cli
frndint
imul
les
mov
call
in
fwait
pop
shl
lods
lcall
daa
roll
popaw
xor
in
add
sti
sbb
mov
orb
ret
subb
repz
movsb
inc
inc
push
xchg
js
nop
in
and
lea
xchg
mov
mov
xchg
xchg
fsubr
loopne
or
inc
sub
leave
mov
or
in
fwait
inc
enter
or
or
and
faddl
nop
xlat
push
dec
push
pusha
ret
sarb
imul
shll
out
or
jmp
sbb
pop
cmp
mov
push
adc
fwait
aam
test
test
aam
push
inc
pop
imulb
fwait
mov
out
fsubr
inc
dec
rcrb
jle
int3
jle
xor
mov
sub
daa
mov
push
scas
bound
scas
ret
sarl
sti
cmp
cmp
cmpsb
push
out
mov
loop
and
dec
mov
es
jne
or
pop
push
fnstsw
adcl
fiadds
pushl
dec
or
push
pusha
pushw
hlt
adc
test
xchg
fs
xchg
jp
jge
push
push
cmpsl
pop
scas
je
cli
mov
imul
mov
mov
pop
fs
sbb
fucom
lcall
incl
jmp
test
inc
mov
insb
loop
inc
mov
fs
out
popa
loopne
call
daa
or
or
add
into
sbb
mov
pop
sbb
push
dec
sbb
fcmovnb
push
jecxz
ss
out
test
xchg
jne
pop
hlt
mov
inc
mov
sbb
lock
cmp
mov
and
and
and
incb
and
jmp
or
cmp
jns
mov
xor
cmp
fs
loop
shl
das
test
gs
fisubrl
in
cmp
je
test
jno
inc
or
jp
mov
in
mov
mov
cmpsl
ret
sub
loop
nop
inc
loopne
leave
fidivs
sbb
add
ret
jo
arpl
dec
push
std
fdivrl
adc
cmp
mov
dec
cltd
inc
movb
pop
mov
scas
sub
into
scas
push
pushf
cmp
fs
sub
push
mov
mov
std
mov
adc
pop
mov
sbb
jecxz
jmp
cld
outsb
in
and
fisubl
lcall
push
sub
loop
in
or
iret
inc
ficomps
fsub
rolb
lret
mov
dec
les
outsl
out
mov
lds
inc
daa
cmp
or
pushf
mov
xchg
movsl
adc
test
mov
add
jp
cmp
fimuls
inc
clc
in
pop
push
stc
or
outsl
addr16
cli
out
xor
cltd
cmp
xchg
je
pop
cltd
or
xor
mov
cmp
ret
enter
fsubp
leave
mov
xchg
mov
ljmp
sbb
sbb
lcall
mov
jnp
pop
daa
inc
stos
cmc
cs
icebp
dec
jae
or
mov
pop
lea
push
iret
xchg
lahf
push
or
or
mov
pop
repnz
out
rdtsc
jl
cmc
pop
xor
scas
cmp
jo
mov
sub
stos
movsb
lea
push
xlat
inc
mov
jge
cli
sub
in
daa
push
out
sub
mov
fadds
inc
notl
dec
jne
in
or
and
sub
and
ss
jecxz
stc
mov
out
aam
aas
mov
jnp
mov
jb
push
dec
lahf
fs
cld
push
cmp
xchg
mov
fmul
or
cmp
hlt
sbb
xchg
test
popf
xchg
xchg
mov
lock
inc
cmc
xlat
loope
xchg
xchg
iret
out
mov
sub
mov
out
cmp
mov
cmp
rcr
dec
clc
lahf
fwait
mov
push
push
cmp
shll
xor
aad
pushf
in
ljmp
in
xor
mov
rclb
push
and
movsl
test
xlat
and
fidivs
ja
inc
inc
mov
mov
jg
pop
sbb
adc
movsb
subb
insb
xchg
push
popa
pop
call
fcoml
mov
dec
pop
xor
cmp
pop
jo,pn
add
mov
cmpb
xchg
std
mov
inc
outsl
mov
xor
pop
cmpps
shrl
jg
vpackuswb
and
dec
xor
cltd
push
adc
cmp
xlat
mov
inc
in
pop
lret
call
mov
sbbl
out
bound
add
sbb
and
movsl
fisubl
lcall
in
jl
fdivl
int
fucomip
shl
xor
jo
nop
xchg
mov
shrl
inc
sub
outsb
arpl
mov
push
ficoms
inc
push
pop
mov
ja
aad
sahf
into
ds
push
inc
cmpsl
mov
arpl
das
jae
pop
mov
test
mov
aas
out
mov
aaa
lret
in
fiaddl
sbb
clc
and
stos
sub
lret
shlb
je
mov
mov
aas
sahf
or
xchg
gs
cli
lods
stos
xor
cmp
stos
test
mov
mov
bswap
pop
mov
icebp
adc
lock
jb
inc
sub
push
stos
into
loopne
adc
dec
dec
aaa
mov
and
inc
pop
adc
sub
inc
call
mov
xchg
fwait
mov
jno
inc
jnp
inc
or
mov
andb
mov
cmp
cmp
dec
sub
mov
les
dec
jbe
xor
sbb
xor
mov
lds
in
int3
aas
jbe
xchg
fisubrl
xchg
iret
push
hlt
aas
repnz
inc
pop
pop
stos
cmc
mov
sahf
dec
popa
xchg
mov
mov
in
ret
pop
popf
andl
test
ds
and
out
pmaxsw
aam
das
mov
sbb
cmp
xchg
xlat
push
jecxz
cltd
mov
aas
sub
clc
sbbb
xor
data16
or
or
jecxz
lea
xor
out
data16
fmulp
sub
add
iret
xchg
push
sub
fwait
loope
xor
push
xchg
xor
xor
mov
lea
mov
jbe
mov
dec
das
inc
fwait
gs
adcb
test
mov
push
adc
fwait
jne
dec
push
jno
inc
movsl
adc
mov
inc
push
push
popf
jge
aaa
repnz
cmp
mov
jne
movsb
enter
fwait
insl
fidivrs
icebp
mov
pop
jg
cld
adc
movsb
decb
mov
inc
inc
pop
in
mov
incl
scas
push
add
jecxz
adc
add
imul
mov
loope
gs
clc
xchg
inc
loope
mov
sbb
aad
aas
out
sub
mov
cmp
dec
andb
sbb
rcl
dec
push
adc
lret
or
mov
xchg
mov
outsl
adcl
adcl
or
jl
mov
inc
cmp
icebp
mov
cmp
xor
pop
popf
lods
push
jo
js
jne
jmp
or
test
mov
in
inc
or
mov
ja
jge
inc
dec
lods
repnz
pop
xchg
sub
jae
fidivrl
inc
dec
xchg
or
pop
aaa
inc
fsub
ja
test
sub
push
push
cmovnp
mov
lock
mov
pxor
push
mov
jecxz
js
repz
mov
push
aas
adc
inc
fistpl
punpckldq
push
add
arpl
loopne
ds
xchg
test
push
sbb
divb
ret
outsb
iret
and
or
rorl
stc
test
cwtl
or
push
sub
cmpsl
jl
lea
cmp
cmpsb
inc
xor
daa
cwtl
and
js
push
sub
inc
pusha
mov
xor
in
pop
mov
enter
add
adc
mov
outsb
jle
inc
xchg
cwtl
bound
bound
stc
jno
imul
pop
sarl
adc
inc
xchg
mov
xchg
mov
lret
push
scas
es
out
mov
mov
out
jl
dec
lock
dec
mov
cmp
sti
frstor
sti
pop
test
popa
test
xor
jmp
push
es
ret
cs
lods
sub
or
into
scas
aas
xchg
mov
repnz
mov
mov
adc
rolb
or
cmp
pusha
hlt
sbb
xchg
push
cmpsl
nop
lret
or
icebp
mov
xor
lock
and
enter
fwait
mov
outsb
xchg
sahf
out
scas
lret
aam
sbb
outsl
xor
icebp
pop
js
mov
push
sbb
cmp
jge
cmp
xlat
or
xchg
xor
and
hlt
mov
cltd
xchg
aad
fildll
push
pop
mov
inc
negb
mov
bnd
jno
enter
mov
sti
pop
sub
and
add
pop
sub
sbb
out
stc
adc
es
fsubrs
lret
fcmovnbe
test
dec
pop
adcb
insb
popa
cltd
mov
sub
mov
je
cmp
or
jno
sub
mov
add
dec
loop
data16
xchg
fdivrl
fidivrs
push
adc
out
jbe
pop
and
jne
cld
mov
loopne
insb
mov
add
xchg
pop
je
mov
xchg
das
scas
pop
aaa
js
sub
push
xchg
int
jmp
test
out
in
movsl
push
pop
cmp
pop
repz
out
je
jns
xchg
andb
aad
outsb
adc
or
repnz
push
xor
test
pop
inc
push
adc
xchg
mov
xor
push
popfw
inc
cmp
add
sahf
dec
sbb
sbb
xor
mov
lcall
cmp
std
inc
hlt
imul
jl
inc
pushf
inc
enter
repnz
idivb
mov
in
faddp
outsb
mov
aaa
lds
pop
in
add
shlb
mov
xor
insb
insb
inc
ja
pop
mov
rcr
frstor
push
in
ss
sub
ret
cmp
outsb
cmpsb
mov
or
add
jae
push
push
aaa
cltd
out
sahf
ret
mov
and
adc
stc
mov
xchg
inc
fst
bound
scas
mov
push
mov
les
gs
and
adc
inc
mov
xchg
pop
add
mov
leave
dec
into
pop
cmp
aaa
out
fnstsw
xlat
add
xchg
sub
mov
div
call
xlat
push
mov
add
fiaddl
in
cmp
test
in
push
fdivrs
pop
jnp
xchg
lods
mov
xchg
jne
mov
js
out
cmp
xor
iret
cli
and
cmp
cmp
lahf
popf
testb
pop
or
scas
pop
dec
loope
popa
sbb
pushf
add
adc
inc
sbbl
in
cld
jo
xorb
loop
in
jno
sub
imul
xor
out
mov
jae
rorl
in
scas
jnp
lock
js
jno
mov
fmul
xchg
sub
mov
cs
loop
inc
dec
sbb
jno
ret
pop
add
push
or
insb
ret
pop
xlat
test
dec
loop
das
dec
lock
mov
mov
test
out
fs
js
xor
mov
add
ret
insb
push
jb
dec
pushf
loopne
push
pop
lea
nop
xchg
xor
pusha
scas
lea
les
mov
dec
mov
in
lods
sbbl
rol
js
jle
fcmovnu
cmc
pop
in
mov
bound
and
paddd
cmp
and
loopne
scas
clc
or
adc
pushl
inc
into
push
loope
mov
and
cmp
sub
gs
inc
cli
mov
sub
imull
jo
inc
mov
inc
pop
mov
sub
daa
test
sbb
xchg
out
loop
xor
mov
mov
jae
arpl
dec
jb
ret
roll
mov
xchg
sbb
imul
adc
jl
add
push
push
xchg
fiaddl
sti
stc
lret
inc
and
out
les
add
or
cmp
rol
pop
lcall
jmp
jnp
sbb
dec
pop
sub
jbe
clc
jmp
andl
adc
xchg
or
sbb
xchg
fdivl
js
mov
sbb
add
mov
push
cmpsb
adc
test
xchg
negb
ret
push
test
or
mov
lret
cmp
mov
adc
js
mov
and
je
nop
pop
xchg
call
inc
fcompl
loope
popf
pop
js
mov
fisttpl
outsl
or
out
out
or
sbb
mov
sbb
jl
and
in
sbb
inc
cltd
insb
stc
bound
fcom
mov
xor
adc
loop
cmpb
xor
cmp
loopne
insl
push
icebp
jne
xlat
lret
out
out
xlat
pushl
inc
xchg
inc
mov
fmul
inc
test
sbb
xchg
jo
rcr
test
pop
xor
pop
lods
movsl
jnp
cld
pop
clc
nop
rolb
mov
dec
cmp
jb
icebp
jecxz
mov
pop
xchg
push
movsl
inc
ret
mov
jecxz
stos
dec
sub
xlat
sbb
int3
sbb
mov
repz
sahf
cmpb
sbb
xchg
scas
mov
out
pop
inc
dec
int3
lcall
into
sbb
mov
xchg
les
inc
enter
lret
push
pushl
mov
rolb
jnp
or
daa
pop
adc
cmpsb
add
arpl
stos
fdiv
fcmovb
movsl
pop
rep
mov
rolb
push
shr
xlat
iret
jge
pop
pop
enter
push
stos
xchg
shll
mov
sbb
enter
es
jg
test
fdivr
scas
fdivrs
leave
scas
lds
mov
dec
fsubs
xor
inc
out
ret
jno
dec
popf
mov
cld
mov
inc
repz
xor
adc
mov
iret
mov
jne
sbb
adcb
cmp
sbb
repnz
mov
clc
xchg
jo
pusha
std
int3
lds
dec
mov
stos
es
imul
pop
loopne
int
and
pop
outsb
mov
stc
cmp
test
not
xchg
fsubrp
gs
or
dec
dec
jo
inc
leave
push
test
xor
dec
stos
jo
shrw
and
jb
xchg
jae
stos
mov
movzbl
push
or
test
push
add
mov
inc
jne
push
rcrb
mov
test
testb
fcompp
repnz
repnz
loopne
ret
in
outsl
fwait
adc
add
push
or
subb
aas
sub
or
and
fs
push
icebp
xchg
cmovge
insb
jp
sub
or
pusha
iret
dec
xor
jg
xchg
push
cmpsb
xchg
mov
ret
out
loopne
loope
xchg
shl
shlb
insb
sub
mov
push
jecxz
test
xchg
sbb
pushf
sub
or
rolb
sub
aas
jg
aaa
or
sub
rcr
or
test
int3
out
cmovnp
or
pop
cmp
xchg
movsl
shl
and
jns
jne
cmpsb
incb
cltd
xor
fsub
jae
aad
out
pop
int3
test
imul
ficoms
fisubs
or
bound
leave
mov
push
fsub
mov
adc
les
jnp
pushf
jns
push
scas
pushf
scas
lock
jnp
ja
ret
cmp
mov
xchg
push
sub
shl
cmp
or
dec
xor
mov
jae
lock
mov
xchg
or
scas
xchg
insb
in
or
mov
and
mov
pop
std
arpl
hlt
mov
add
cs
sub
fnsave
lea
xlat
in
jecxz
arpl
xchg
add
popf
cwtl
mov
inc
shl
or
cmc
or
sub
mov
inc
outsl
xchg
cli
adc
push
cld
addr16
ret
pop
pop
adc
jg
lock
jl
sub
push
sbb
scas
inc
xor
shrl
xor
pop
nop
pop
xchg
xlat
roll
cmp
pop
dec
lock
adc
push
and
enter
rolb
data16
inc
and
subb
jp
clc
mov
cmp
xor
cmpsb
jnp
scas
mov
cmp
sub
popa
lods
popf
leave
or
inc
pop
loop
dec
test
inc
sub
push
inc
andl
js
aad
sbb
inc
lods
dec
test
cwtl
cmpsb
inc
push
mov
shll
jmp
out
hlt
xor
mov
rorl
nop
imul
aad
icebp
adc
frstor
cmp
jae
aam
jb
pop
into
sbb
test
hlt
sub
movsl
not
sbb
fcompl
push
push
mov
jnp
cld
mov
xor
dec
in
js
or
cld
lret
ror
sbb
daa
ficomps
sbb
in
cmp
dec
aad
jae
fsubrl
pusha
pop
pop
sub
lods
mov
ret
add
in
mov
jle
cmc
movsb
test
inc
std
xchg
pushf
scas
pop
sbb
mov
dec
or
inc
add
fidivrs
adc
adc
das
adc
or
clc
or
push
sbb
push
jae
mov
mov
add
sub
cmp
dec
sub
in
in
mov
gs
mov
test
and
cld
pop
jbe
xor
push
pop
mov
stc
ss
lret
pop
test
push
lahf
xchg
and
in
xorl
loop
movsb
pop
mov
mov
pop
inc
aad
mov
movsl
enter
add
xchg
je
adc
mov
mov
jecxz
shlb
out
aad
adc
or
and
in
jno
mov
in
leave
fcmove
ja
push
je
mov
xchg
ret
popl
xchg
jge
jmp
xchg
icebp
mov
movsb
int
outsb
push
outsl
addl
call
or
outsb
lock
loop
adc
lds
pop
into
hlt
xlat
or
arpl
aad
mov
pusha
orb
push
push
mov
pop
mov
jbe
sbb
xor
outsl
or
or
adc
inc
push
cmc
cwtl
dec
xor
push
insb
icebp
push
test
push
lahf
fldenv
mov
dec
out
in
addr16
jns
xor
push
std
mov
mov
jp
push
scas
xchg
insl
adc
dec
mov
movsb
arpl
aaa
mov
xlat
mulb
es
out
sets
xor
pop
lea
pusha
inc
jb
mov
xor
cmc
lcall
sbb
call
std
dec
push
cmp
insl
mov
cld
fnstenv
mov
idivl
mov
pop
fsubl
xchg
fstpt
sub
cli
jae
in
dec
xlat
sbb
cld
notl
sbb
and
xchg
shll
push
lahf
lock
iret
das
mov
jne
les
jne
mov
xlat
mov
xchg
dec
bound
xlat
daa
sbb
dec
lcall
cs
and
mov
cmp
mov
sti
sbbb
popa
test
loop
std
outsb
adc
sub
ds
dec
jp
sub
mov
push
shl
sbb
and
or
and
data16
dec
fabs
fwait
mov
or
xchg
and
add
ss
enter
lods
xchg
cmp
insb
jae
sub
faddl
addr16
cli
jle
push
cmp
loope
cmp
mov
xlat
lcall
mov
fcmovnu
rclb
push
movsb
xor
xchg
add
mov
shrl
mov
jnp
ret
loop
cmp
xor
jae
pusha
insl
clc
xchg
cmp
or
adc
rcll
push
ja
dec
jmp
jle
add
jg
mov
cmc
aaa
repz
xchg
mov
sbb
inc
sub
sub
mov
mov
mov
mov
fdiv
cmp
mov
mov
dec
sarl
mov
pop
gs
mov
cs
inc
fsubl
mov
xor
mov
mov
push
adc
mov
les
lret
xor
orl
addr16
push
xchg
movsl
mov
mov
shl
push
xor
nop
pop
pop
push
mov
sbb
nop
push
push
inc
test
add
scas
fdivrp
lea
lods
pop
inc
push
les
push
pop
test
lock
xlat
sub
daa
in
dec
mov
and
daa
sbb
inc
cs
aas
xchg
push
push
pop
mov
cmp
jae
lcall
aad
pop
jo
inc
jmp
push
out
fwait
dec
rcll
xchg
or
cltd
fwait
lods
hlt
xlat
out
shr
push
push
jle
enter
sub
aad
sub
sbb
push
scas
andb
add
stc
subb
pusha
in
jbe
xchg
mov
sti
test
jne
scas
daa
out
inc
gs
inc
adc
and
xchg
dec
addr16
or
add
push
inc
push
xor
pop
pop
push
shlb
test
addr16
shll
clc
pushf
call
int
mov
inc
push
jg
jmp
sarl
out
ljmp
lcall
sbb
movsl
mov
xlat
repz
leave
test
lret
xchg
int3
adc
xchg
mov
pushf
mov
inc
lds
cwtl
test
adc
mov
icebp
jnp
cs
pop
das
iret
std
fiadds
adc
mov
lret
cmpsb
pop
out
sbb
jnp
mov
push
push
fsubrl
push
pop
in
test
scas
pop
dec
mov
push
loop
dec
fisubrl
or
adc
rcrb
bound
sub
leave
jl
inc
add
sahf
inc
adc
mov
xchg
jb
fisttpll
les
movsb
fisttpll
scas
popf
test
loop
test
mov
insb
lods
data16
movsb
test
clc
stos
iret
cs
std
cmp
nop
add
stos
sti
sahf
dec
adc
pop
add
cmpsb
mov
and
xor
outsl
leave
outsl
jecxz
mov
adc
xchg
repz
leave
xchg
xor
out
in
subl
negb
movsb
ljmp
stc
jmp
aam
mov
icebp
and
sub
fstpt
push
pop
push
into
jecxz
xchg
xor
dec
mov
add
repz
outsb
mov
and
or
cmpsl
mov
leave
test
mov
stos
sahf
or
xor
je
outsb
xor
xor
pop
and
mov
or
cltd
mov
int
mov
mov
lcall
xchg
lock
aad
mov
add
xchg
or
loopne
incl
pop
lret
scas
sti
xor
ss
fisubrs
push
fmuls
xor
cltd
sbbb
in
mov
jp
dec
daa
xchg
ret
lret
cmc
aas
sahf
fadds
add
out
sbbb
xchg
xchg
dec
fwait
ror
or
mov
fisttpll
push
push
jp
sbb
cld
inc
mov
pop
das
sub
push
mov
popf
mov
mov
inc
cli
mov
pop
lock
aaa
lods
pop
xchg
inc
mov
sbbb
iret
pop
and
add
enter
cmp
shll
dec
aad
mov
adc
and
lea
and
or
cltd
lea
push
adc
mov
out
cltd
shrb
test
ror
rolb
push
std
cltd
je
add
scas
jne
inc
lods
in
sub
stos
scas
stc
xchg
and
mov
sub
xorb
cmpsb
and
pop
aad
or
popf
cwtl
adc
cmp
pushf
mov
add
repz
dec
movsb
mov
sbb
outsb
mov
rcll
mov
sub
pop
pop
stos
ficompl
in
icebp
adc
std
frstpm(287
mov
jno
inc
shll
stos
lcall
pop
cmp
inc
std
popf
cltd
add
mov
pop
jmp
in
sbb
jne
mov
xor
and
std
xchg
push
aad
mov
pop
inc
or
or
leave
enter
test
cltd
cltd
popf
cmp
repz
andb
jg
dec
aaa
mov
lcall
lret
xor
sub
movsl
mov
jo
push
nop
xor
leavew
loopne
add
mov
into
sbb
movsb
sbb
jbe
add
sbb
inc
adc
addl
pop
ja
stos
adc
jne
adc
fistl
inc
adc
inc
stos
cmc
shll
test
cwtl
pop
je
cmpsl
sbb
and
add
loopne
and
lcall
dec
cmp
ja
imul
stos
mov
in
fs
cmpsb
xchg
cmp
mov
pop
sub
push
int
mov
mov
jno
xchg
cli
pop
xor
lds
fucomp
xchg
dec
cmp
stos
push
faddl
in
hlt
xor
mov
xchg
and
insl
mov
fbld
fimull
sbb
repnz
pop
sahf
aam
push
mov
fildl
das
hlt
sub
rclb
cld
push
or
cmp
sub
pop
jae
cmc
loop
xor
movsl
mov
mov
out
xchg
mov
sub
dec
in
xor
pop
in
lcall
rcll
jle
cmp
push
imul
pop
rcrl
or
rorl
mov
pusha
and
jne
adc
sbb
call
inc
pop
and
sbb
test
cs
cmp
cmp
insb
push
bound
les
ret
dec
mov
xor
popa
mov
sub
adc
movsl
jmp
push
xor
jmp
inc
xchg
push
loopne
daa
call
adc
inc
sarl
pop
dec
mov
sbb
xchg
int3
ds
cmpsb
xor
and
push
and
mov
cwtl
adc
fs
push
add
push
adc
inc
dec
sbbb
push
sbb
mov
lcall
out
or
sbb
in
dec
pushf
stc
daa
mov
dec
lock
out
fnstenv
nop
push
and
jb
enter
cmp
xor
inc
das
loope
mov
bound
dec
lock
xor
ret
popf
test
imul
lock
shlb
sub
inc
xchg
outsl
js
mov
icebp
addr16
mov
mov
out
inc
xor
cs
out
and
mov
dec
sti
in
stos
pop
mov
add
adc
sub
xor
pop
mov
addb
mov
sbb
out
jle
stos
push
inc
mov
xchg
sbb
inc
shll
cmp
ret
xor
xchg
mov
stos
sub
mov
inc
mov
mov
cmp
xlat
enter
je
fists
mov
in
fnstsw
adc
in
cmc
mov
notl
mov
bound
outsl
lock
jmp
cmp
loop
mov
leave
test
jae
xchg
push
sbbb
mov
sub
jmp
dec
out
popf
sbb
jecxz
in
xchg
cs
repnz
out
out
add
in
pop
xchg
pop
jg
xchg
adc
dec
aad
add
pop
out
add
add
mov
and
imul
movsb
adc
lea
mov
out
loopne
cs
cwtl
cltd
jbe
mov
adc
sbbb
mov
xchg
dec
out
popa
cmp
imul
out
inc
pusha
ret
scas
dec
ds
push
std
mov
shl
xor
es
stos
mov
int3
add
sbb
mov
leave
out
bound
cmp
shll
push
fsubrs
imul
aam
test
jo
ljmp
push
push
fimull
and
sbb
iret
xlat
push
repz
lods
push
cmp
xchg
inc
cmp
lds
fildll
aam
aas
sub
call
call
jmp
clc
fiadds
jle
or
xchg
movsb
hlt
xchg
pop
mov
mov
das
pop
inc
leave
mov
js
push
inc
fs
xor
inc
or
fsubr
jle
sbb
loopne
jbe
mov
dec
fwait
ljmp
std
xchg
xchg
cmp
scas
adc
ds
mov
push
js
xor
mov
lret
mov
into
rcll
mov
rorb
jg
and
sbb
in
push
movsb
add
pop
xchg
xor
loopne
int
pop
lcall
pop
test
sbb
in
dec
dec
sub
sti
lds
fs
sub
pop
popa
mov
inc
fwait
sar
loopne
cmp
mov
push
popf
mov
ds
mov
xchg
xchg
cli
insl
sub
test
push
dec
and
das
push
insb
adc
push
mov
in
and
pop
rorb
push
or
mov
pop
sbb
lods
into
out
inc
inc
movsl
cli
stc
push
inc
add
sub
nop
jns
loopne
pop
inc
loope
sbb
pop
or
xor
inc
mov
aam
or
jb
sbb
fsubrs
bound
sbb
inc
and
gs
xor
in
fbstp
jo
ror
push
inc
sbb
cmc
test
mov
xor
adc
xchg
xorb
jae
into
bnd
mov
repz
sub
dec
fldt
outsb
jmp
sar
ljmp
data16
cmp
lret
xor
dec
inc
movups
stos
dec
out
test
or
sbb
pop
imul
std
aam
cmp
mov
nop
icebp
shll
or
jge
into
mov
nop
sbb
les
rcrl
rcr
addr16
adc
sub
inc
popa
mov
pop
imul
adc
rorb
push
lcall
aaa
gs
clc
sub
adc
stc
xor
or
mov
cwtl
cmc
push
ret
bswap
push
push
lcall
int3
ss
int
aad
mov
ja
fildl
movsb
cmp
fimuls
daa
js
and
mov
or
jmp
mov
and
push
int
popa
and
call
in
int3
cmp
sarb
loopne
data16
pop
daa
or
nop
scas
inc
sub
in
test
and
sub
cwtl
mov
cwtl
and
popfw
pop
dec
and
cmpsl
ret
mov
out
lret
ja
mov
mov
mov
dec
test
repnz
pop
cmc
jmp
or
lds
cmp
push
test
andb
sub
iret
sbb
gs
sub
cmpl
lods
and
xor
mov
pop
inc
pop
lcall
mov
dec
dec
push
mov
and
fwait
dec
cmp
fs
lcall
or
sahf
shl
addr16
mov
pop
stos
cmpsb
in
popf
ja
das
mov
jbe
je
cmp
cmpsl
jmp
lea
push
mov
icebp
xor
cli
cmp
mov
xchg
dec
jmp
es
popa
push
inc
call
mov
lds
add
xchg
dec
push
adc
in
cmpsl
rolb
cmp
rcll
and
mov
add
test
sub
adc
pop
sahf
mov
subb
test
sub
fistps
mov
cltd
and
in
inc
in
lret
add
inc
mov
xlat
sbb
outsb
adc
cmc
pusha
inc
lea
sbb
lds
add
jle
push
popa
jno
inc
xchg
mov
inc
sbb
and
cmp
mov
or
dec
lods
inc
or
gs
xchg
in
xor
pop
xchg
lds
rolb
scas
or
push
xchg
repnz
dec
leave
cmpsb
arpl
aam
adc
mov
insl
aam
sub
aas
imul
popf
pop
lret
push
sub
mov
je
dec
mov
negb
inc
jge
mov
outsl
sub
adc
push
lea
adc
sahf
cmpsb
test
out
fcomps
negl
or
mov
pop
xchg
dec
scas
ja
inc
dec
mov
mov
sbb
jmp
loope
mov
imul
mov
frstor
mov
dec
fidivrl
inc
out
push
into
imul
sbb
pop
jp
imul
in
cwtl
xlat
scas
vmovdqa
pop
ja
int3
inc
mov
mov
and
push
mov
cmp
popf
in
nop
enter
pop
or
aam
adc
xchg
sub
jmp
sbb
pusha
inc
inc
sub
bound
adc
ja
lahf
pop
sbb
dec
fisttps
out
push
or
lret
push
clc
inc
imul
and
and
jbe
test
mov
jnp
sbb
or
add
add
or
mov
ret
pushf
mov
pop
addr16
fisttpll
mov
xor
sbb
xor
jecxz
mov
enter
imul
cld
adc
inc
sarl
jmp
lods
sti
stc
jl
adc
add
jle
mov
sti
sbb
inc
iret
fs
push
fdivl
mov
dec
pop
push
mov
aaa
and
sar
mov
loop
and
repnz
push
in
jno
stos
sub
lds
shlb
xchg
jae
add
out
jae
push
fisttpl
cli
sahf
test
pop
push
cld
xor
jle
push
or
or
xor
sti
dec
pop
iret
add
mov
dec
ljmp
into
loop
jne
lock
out
lock
xor
fcoms
aaa
push
jns
push
ficomps
dec
dec
pop
out
rclb
test
ror
imul
test
outsl
push
ficoml
mov
fbld
gs
lret
xchg
mov
and
add
jo
test
and
scas
jmp
sub
add
mov
sub
push
xor
inc
repz
mov
cmpsl
gs
pop
inc
mov
ss
mov
dec
dec
ss
sti
sub
xchg
lods
ret
and
loope
and
cmp
mov
add
add
scas
ret
sbb
fidivrs
cmpsl
adc
icebp
shll
push
and
mov
xor
jmp
repz
cmpsl
sub
and
cmp
add
pop
cmp
mov
and
aaa
add
adc
popa
sub
fs
mov
adc
mov
add
add
mov
jae
xor
popa
ret
test
aam
clc
xchg
or
cmp
cltd
fistl
xor
and
xchg
ja
adc
cmc
ret
lods
push
mov
inc
xchg
sbb
jle
mov
imul
xor
inc
lcall
int3
rcrl
or
je
clc
mov
mov
into
mov
or
cmpsl
lcall
hlt
mov
sbbb
out
inc
shrd
das
adc
sbb
lret
nop
jge
js
push
arpl
iret
and
pop
fcompl
mov
rcrl
cld
xorb
sub
insb
mov
outsl
push
hlt
rcrb
mov
inc
sbb
sbb
mov
out
pop
lret
xchg
pop
cmpsb
stos
lods
jg
push
dec
popa
cld
adc
jns
mov
sbbb
inc
jae
xor
jle
inc
inc
or
in
iret
dec
mov
popf
movsl
gs
xchg
xchg
pop
mov
rclb
int
cmp
cli
push
jbe
insl
and
xchg
mov
leave
aaa
lea
in
pop
imul
cmpl
in
cmc
je
xchg
and
dec
jle
inc
mov
clc
mov
pop
out
aam
and
into
iret
movsb
dec
nop
push
adcb
cmp
push
push
ds
es
mov
xor
inc
pop
mov
cmc
and
in
push
call
lods
loopne
or
icebp
or
int3
sub
xchg
cmpl
in
stc
sub
jp
inc
push
mov
sti
mov
aas
dec
bound
lea
fsts
cmp
pushf
test
pop
rcll
mov
pop
call
lods
inc
jg
adc
adc
sbb
mov
cmp
and
inc
cmp
ja
popf
mov
push
mov
rcll
mov
push
subl
stc
fwait
sbb
aas
fwait
lods
and
dec
ss
cmp
xor
lret
int3
mov
mov
mov
push
jle
rcll
cmpsb
fdivl
lcall
adc
and
push
lds
test
sub
ficomps
cmpsl
jno
filds
lods
sahf
fimuls
test
gs
mov
sti
xor
imul
sbb
inc
push
cmc
testb
xor
xor
mov
ja
jg
lods
shlb
call
adc
mov
mov
notl
mov
js
push
scas
or
adc
fisttps
lcall
clc
or
into
cmp
shlb
xor
imul
adc
leave
pop
test
movsl
fisubrs
dec
in
push
out
adc
cld
jb
mov
push
fs
mov
dec
mov
cmc
pop
mov
das
mov
and
stc
in
fildll
fistpll
adc
xorl
pushf
mov
and
pop
sub
rcll
jl
das
or
es
outsb
rorl
adcb
insl
xor
pop
cmc
in
cmp
adc
add
aad
inc
xor
jnp
fnstsw
adc
imul
dec
jne
jp
sbb
stos
push
stos
daa
mov
sbb
mov
xchg
imulb
xor
jp
pop
cld
or
inc
pop
loope
cmpsb
repz
in
loop
jne
sub
add
sub
jg
in
cli
push
imul
jb
xor
jp
pop
sahf
in
sti
sbb
jp
fsubrs
adc
inc
cmc
mov
jae
sbb
das
jg
dec
inc
pop
or
mov
pop
add
jmp
test
jp
sub
imul
fisubrl
mov
lods
push
out
shll
mov
adc
test
xchg
repz
mov
popa
pop
mov
mov
fisubrs
push
loope
pop
fdivrp
imul
enter
and
fmull
fwait
dec
and
mov
sbb
aas
cmc
add
shl
pop
fisttpll
xor
movsl
pop
addl
push
adc
js
lods
cmpsl
push
sarl
mov
popa
shlb
mov
mov
into
aam
inc
dec
clc
lods
push
movsb
cli
jb
adc
fimuls
inc
je
int3
inc
dec
addr16
add
sbb
and
popf
test
xor
test
or
or
js
cltd
out
mov
pop
call
jbe
pop
test
or
cmp
fs
jg
and
xor
add
rolb
xchg
inc
sbb
lcall
or
dec
cwtl
pop
fcoml
int3
cmp
in
push
xlat
enter
sbb
in
mov
loopne
sub
fstps
sbb
in
loop
pop
cmp
fbstp
aam
fisttps
jp
and
add
mov
lods
cmpsb
pop
fwait
stos
sbb
jns
dec
mov
pop
aas
mov
lret
outsl
int
int
ret
xchg
cli
and
fcmovnbe
shrl
aad
jno
dec
cmp
repnz
mov
inc
fwait
and
fldcw
mov
xor
aad
xlat
add
outsb
cld
mov
lds
fistl
mov
stos
lcall
fisttpll
std
mov
in
mov
or
pop
or
cmp
sub
pop
lcall
push
lahf
sbb
mov
or
lea
dec
jno
mov
xchg
mov
and
pop
push
mov
xor
shrl
jns
xor
fsubp
pop
shll
push
test
or
mov
dec
jno
loopne
pop
lret
cwtl
mov
adc
js
push
femms
mov
push
pop
mov
scas
inc
pop
ds
sahf
pushf
jp
ss
cmpsb
xor
dec
sub
cmpsl
dec
idivl
popf
push
jp
test
pop
in
jl
andl
and
mov
lock
xchg
ret
inc
mov
dec
sbb
movsl
ret
imul
and
movsb
inc
xchg
or
fisubrl
fimuls
ret
outsb
cltd
movsl
jae
ja
mov
jl
sub
cmpb
mov
ret
clc
inc
out
cmpsl
cwtl
push
inc
fcompl
scas
subl
int
ret
adc
or
pushf
enter
mov
dec
call
fcmovu
mov
xor
aas
lods
jmp
mov
and
lret
sub
push
dec
call
add
dec
inc
movsl
push
insb
pop
ret
push
inc
subl
mov
xchg
sbb
ret
sbb
sub
xor
stc
xchg
in
pop
popf
jo
pop
push
rcr
iret
vpmulhuw
pushf
jns
mov
out
xchg
inc
arpl
pusha
inc
mov
pop
jl
adc
inc
jno
into
lea
out
ficoml
cmp
lahf
mov
cli
jb
mov
jns
in
fmuls
inc
or
inc
mov
pop
mov
cltd
pop
mov
mov
js
inc
test
cmp
call
das
int
mov
jnp
sarl
sub
jne
sti
push
cmp
dec
repnz
dec
ret
insb
clc
subb
dec
jns
out
jecxz
cltd
mov
sbb
push
jl
mov
aas
mov
mov
pop
and
xchg
or
sahf
aaa
rcrl
loop
xor
loop
xor
mov
rorb
mov
repz
jg
push
or
pop
sub
aad
ljmp
das
jecxz
or
and
xchg
and
push
xlat
lret
xor
cmp
icebp
mov
or
rolb
int3
jmp
dec
movsb
mov
cmp
xchg
add
add
in
mov
xchg
ss
ficompl
cmc
daa
sub
pusha
mov
xlat
scas
cmp
and
js
ret
jbe
aad
jg
pop
pop
lcall
or
insb
faddl
mov
sub
sbb
shrb
inc
mov
mov
daa
aaa
cmpl
in
je
adc
out
rsm
jge
cld
scas
mov
outsb
pop
lock
or
dec
cmpsb
ficompl
fwait
pusha
sbb
inc
das
lcall
fiaddl
lea
mov
mull
inc
flds
pop
and
aad
sbb
add
scas
add
out
ja
insb
add
mov
divl
and
mov
add
pusha
out
das
movsb
lahf
pop
fsubs
and
fninit
cmp
mov
bound
adc
in
adc
leave
xchg
xor
adc
mov
jae
pop
vandnps
mov
mov
lret
ds
xchg
pop
adc
cmp
stos
lods
movsl
jae
daa
sbb
mov
adc
jo
out
sbb
pusha
enter
mov
gs
ret
or
aas
jg,pn
icebp
mov
or
loope
pushw
and
or
mov
je
pop
jbe
ret
mov
xchg
fildl
and
mov
cld
pop
push
int
pop
jo
out
cmp
add
sti
sub
aas
or
pop
rcrl
test
scas
mov
push
push
sarb
inc
sbb
fsubrl
dec
ret
or
scas
das
ret
js
out
dec
daa
rcrb
sbb
mov
mov
dec
push
out
popa
frstor
mov
jb
inc
and
inc
pop
or
stos
xor
and
jl
lods
pop
andb
dec
sub
xchg
lahf
jns
or
mov
imul
lods
xor
push
xor
loop
in
xorb
mov
dec
push
loop
mov
sahf
mov
xor
mov
cmovl
or
xor
out
cmp
sahf
xchg
imulb
mov
imul
and
push
push
outsl
xchg
enter
arpl
lods
or
xor
cmp
std
and
ds
pop
mov
lods
mov
jle
inc
push
dec
and
daa
mov
adc
sbb
xchg
movsb
popa
mov
push
jae
shlb
cmpsb
leave
in
iret
cmp
fwait
cmp
cmp
lods
cli
xchg
add
or
mov
sbb
les
fisubrl
sub
sub
sti
push
lods
or
cmp
test
in
dec
jmp
cmp
arpl
jb
iret
inc
cmp
loop
mov
repz
or
andb
int
dec
rcll
cmp
pop
call
out
sbb
es
pop
mov
dec
dec
mov
aaa
repz
sar
and
in
sbbl
inc
dec
sbb
cmpsl
adc
fs
xchg
mov
loop
cmpsl
push
lret
inc
aas
inc
sbb
out
add
cld
sbb
sub
sbb
scas
lock
fbld
lds
je
cmp
inc
insb
jnp
adc
data16
sub
mov
incb
sbb
inc
jo
pop
mov
push
cmp
insl
aaa
negb
in
out
xor
xorl
sbbl
xor
sbb
outsb
adc
push
mov
sub
xchg
call
lods
adc
dec
sub
decl
pushf
pop
dec
std
sub
xor
outsb
adc
data16
mov
jb
in
stos
pushf
adc
inc
jno
mov
cmp
shl
sub
xchg
mov
adc
inc
or
fistpll
int
stc
sbb
cwtl
mov
sti
mov
pop
adc
mov
aas
push
push
mov
test
jo
divl
sbb
sub
lods
sti
fstl
je
les
sbb
jge
xchg
and
inc
mov
outsb
push
cmp
push
outsl
sbb
mov
jmp
dec
mov
dec
push
dec
aad
lret
popa
int3
inc
add
lods
mull
jae
ret
loop
sbb
shrl
cwtl
pop
jmp
xchg
lock
inc
in
mov
lret
test
mov
adc
jmp
sub
loopne
rorl
in
pop
repnz
pop
popa
imul
bnd
std
xchg
ror
mov
jno
mov
clc
stc
mov
sub
dec
popf
fwait
aaa
sub
lea
in
and
icebp
pusha
push
int
add
lahf
sub
push
sahf
je
or
adc
dec
push
pop
movsb
sbb
push
stos
pop
xor
pop
add
les
sbb
add
sbb
xchg
out
jmp
inc
std
icebp
imul
mov
fstl
pop
adc
mov
cmp
icebp
stos
xchg
std
cmp
adc
dec
dec
inc
push
das
cs
scas
das
sbb
das
jle
add
sub
mov
cmp
aam
xor
clc
scas
cld
xlat
adc
sbb
cmp
sub
or
cltd
and
imul
jl
pop
push
roll
jnp
and
test
or
push
xor
outsl
mov
retw
cmpsl
stos
out
mov
sbb
push
test
push
lock
push
mov
daa
addr16
test
sbb
insb
mov
ljmp
cmpsl
push
mov
push
jae
ret
push
popf
mov
cmp
add
and
leave
and
clc
sbb
push
das
pop
shrb
leave
inc
mov
bound
or
aas
jbe
inc
hlt
call
nop
pop
mov
xchg
pop
mov
adc
sub
xchg
jne
lret
cmpsl
xchg
pop
jae
dec
add
mov
cmc
cmpsl
adc
xchg
aas
pop
aam
cld
ret
xor
jnp
adc
mov
fsubrs
adc
les
and
pop
pop
xchg
jo
pop
ja
mov
pop
lock
xlat
outsl
jo
push
not
das
inc
push
sub
cmp
dec
mov
ret
in
test
mov
mov
adc
sbb
or
mov
out
jp
xorb
repz
sbb
jecxz
iret
xchg
enter
test
jnp
cmp
mov
imul
mov
jl
inc
test
fwait
add
lea
adc
push
out
hlt
pop
push
sub
mov
stos
iret
xchg
pop
jmp
dec
data16
scas
jns
jmp
mov
xchg
movsb
mov
dec
arpl
lcall
sub
cmp
stos
int
mov
jo
sbb
ljmp
imulb
xor
sub
dec
and
test
mov
sbb
nop
push
aam
push
cmc
mov
pop
xchg
lahf
push
int
int3
cli
outsl
movsb
cmp
aam
sbb
lock
pop
scas
mulb
jmp
cmp
pushf
xor
push
dec
mov
inc
pop
int
mov
shlb
dec
jnp
mov
sub
popa
mov
inc
jnp
push
or
addl
test
ljmp
shll
push
pop
dec
arpl
movsb
or
enter
and
dec
and
inc
sti
fwait
lods
adc
je
jp
push
sbb
mov
add
gs
pop
pushf
xchg
sar
cmpsl
imul
dec
pop
cmp
je
adc
sub
cs
or
cld
sub
bound
out
imul
add
cmp
mov
mov
mov
mov
xor
fisubrl
add
jle
divb
sbb
das
add
push
notl
sub
mov
xor
cld
lahf
mov
push
movsl
cmp
xor
int3
mov
pusha
enter
and
xlat
popf
jns
mov
outsb
scas
push
mov
push
jle
jb
ljmp
rcrb
xchg
xor
pushf
aam
mov
jne
xchg
lods
jp
test
mov
or
push
lods
int3
mov
xor
push
addr16
fcomps
inc
ret
sbb
xor
xchg
mov
push
test
cmp
or
cmp
shll
mov
sbb
pop
push
or
lods
xorb
pop
adc
push
sub
jne
jae
push
scas
mov
add
adcl
mov
in
enter
out
fcomps
out
sub
mov
adc
addl
xchg
cmp
cwtl
xchg
jo
stos
xchg
loope
push
dec
mov
outsl
xchg
jge
mov
out
outsl
mov
push
js
jne
xchg
sti
stc
ja
cmp
lea
in
add
sti
js
leave
mov
cli
xchg
in
ret
pushf
mov
ret
jmp
jmp
test
cld
out
mov
sub
out
pop
mov
adc
sbb
lock
add
or
rcr
das
sti
rorl
cli
jns
jne
into
loopne
repz
jb
mov
ja
and
sbb
xor
pusha
out
adc
iret
adc
sub
adc
ds
pushf
aaa
lcall
pop
xchg
or
dec
mov
push
das
stos
push
pop
inc
sub
daa
stos
lahf
xchg
pop
push
std
test
dec
sub
repnz
cmpsb
mov
cmp
inc
je
nop
icebp
scas
cmp
lds
lahf
inc
sub
xorl
sub
mov
jbe
mov
inc
mov
add
daa
push
jp
xor
popf
mov
mov
cli
aaa
dec
or
sbb
pop
test
ljmp
imul
xchg
xchg
xor
cmpsb
push
pushf
mov
xor
sbb
pop
sub
dec
dec
lds
test
clc
icebp
jno
pop
sbb
movsb
add
inc
pop
cmp
push
fwait
mov
jo
mov
sub
cmp
lea
xchg
mov
push
cmp
pop
pop
popf
out
inc
sbb
lret
jo
adc
cs
and
xor
xchg
cs
jge
testb
and
inc
movq
scas
les
sbb
pop
fildll
mov
popf
push
xor
sbb
or
or
push
loopne
repz
out
mov
lock
sub
sbb
cld
or
pop
nop
push
jg
ficoms
cmp
lock
mov
jg
das
add
sbb
fs
jae
stc
popa
mov
into
rorb
repnz
pop
push
jnp
push
xor
xchg
push
mov
in
sub
decl
xchg
loope
outsl
mov
cmp
scas
jns
pop
ljmp
pop
dec
inc
adc
xchg
jmp
cmpb
sub
test
or
jbe
orb
nop
lcall
adc
adc
dec
adc
bound
je
data16
test
inc
ret
repz
cmovnp
lods
mov
adcl
push
roll
sbb
les
jae
xor
jmp
sbbb
cld
mov
leave
hlt
imul
fldcw
xchg
lods
data16
out
mov
pop
fnstcw
ds
xor
push
call
leave
xor
xchg
dec
mov
pop
dec
inc
fidivrl
in
cmp
cwtl
jmp
adc
out
mov
pop
popa
or
pop
daa
mov
mov
add
inc
pop
mov
jnp
ret
fistl
sbb
sub
adc
movsl
push
pushf
inc
and
arpl
mulb
jae
sub
inc
and
cmc
mov
xchg
sbb
lar
sahf
sub
ret
jno
addr16
js
jne
adc
adc
inc
mov
add
push
jns
mov
repz
je
movsl
mov
mov
out
xchg
sub
push
push
pop
pop
pop
adc
cli
jns
sarl
sarb
pop
lret
loop
leave
out
add
cmp
jl
sbb
mov
xor
and
push
push
sub
xor
fidivs
push
inc
mov
imul
and
mov
adc
xor
out
stos
pop
les
fwait
hlt
pop
mov
lock
lahf
or
mov
sbb
bound
shll
rorl
lds
mov
popf
daa
ja
rcrb
push
sbb
arpl
sar
movsl
pop
push
sub
loopne
jb
xchg
test
movsb
addr16
fstl
xor
inc
pop
fwait
mov
sub
pop
and
inc
sarb
add
fsubrs
testb
sub
jge
outsl
roll
xor
callw
adc
lahf
mov
and
push
in
addb
clc
roll
out
jp
mov
out
ret
jb
and
in
and
xchg
scas
or
jmp
cmc
dec
es
push
scas
mov
push
cmp
mov
aas
inc
sub
adcl
cwtl
dec
loope
fadds
push
test
dec
aas
iret
int3
xchg
inc
jl
in
fldenv
in
jno
loopne
inc
in
sbb
repz
inc
stos
ret
xchg
data16
aam
xor
iret
or
inc
xchg
inc
rorl
mov
adc
cmpl
jns
fstpl
and
jno
or
ss
movsl
decl
cli
mov
lea
and
dec
push
inc
sbb
dec
or
jnp
pushf
shrl
jno
mov
repz
enter
cmpsb
stos
movsb
mov
in
push
xor
mov
add
pop
mov
aad
pop
out
shll
adc
shlb
push
lds
fdiv
xor
stc
xlat
orl
jbe
into
xchg
out
pop
add
lods
mov
ret
sub
xor
das
test
cmp
dec
mov
cli
xchg
push
pop
add
and
leave
outsl
test
pop
ss
mov
int
xor
inc
dec
repz
imul
out
cmp
testb
sub
mov
stos
popf
mov
leave
cmp
imul
dec
bound
sarl
mov
inc
pop
sub
pop
xchg
movsl
adc
andl
adc
adc
sbb
adc
sub
leave
scas
adc
lods
sbb
outsl
sbb
xor
mov
inc
xchg
and
jb
pop
lods
sbb
out
loop
jns
out
fsubrl
call
push
nop
mov
mulb
test
cmp
or
sub
mov
outsl
add
lods
fisubrl
sbb
andb
ret
push
or
cmp
jnp
repnz
inc
mov
mov
mov
fwait
xlat
cmp
or
nop
add
pop
mov
inc
adc
adc
fistl
jmp
mov
lods
cmp
aas
stc
mov
insb
jl
testl
jno
and
push
mov
lea
mov
xor
pop
pushf
out
outsb
lret
mov
into
push
loop
rclb
call
push
rcrb
add
adc
fldenv
jae
lahf
jg
outsb
mov
push
mov
adc
hlt
aas
add
int3
push
shrb
cmpsl
and
and
push
fnstenv
rcr
xchg
pop
mov
mov
ja
sbb
mov
sbb
scas
push
cmp
scas
sarl
or
mov
es
cmp
cltd
lret
jle
sbb
enter
int3
push
cmpsb
into
or
outsb
fisttps
pop
mov
cli
and
adc
xchg
push
mov
xor
jl
cmpsb
push
test
and
imul
mov
mov
popa
setle
jnp
pop
push
sbb
jecxz
lcall
dec
out
adc
jno
lock
nop
sahf
pop
and
dec
or
repz
ljmp
loopne
and
bound
fcomps
cld
jp
ljmp
adc
mov
pop
mov
and
mov
jg
mov
mov
aad
bound
and
jo
andl
cli
and
inc
repz
mov
nop
mov
cmpl
nop
int3
add
mov
cmp
scas
pushf
cmp
addr16
xchg
pop
clc
popf
mov
repz
testb
shrl
xchg
jmp
lods
mov
fldl
mov
dec
cmc
orb
or
add
xchg
addb
dec
call
lret
and
mov
sub
leave
push
pop
das
xchg
mov
xlat
jg
iret
add
rcl
dec
or
popa
test
imul
sub
pop
jg
or
mov
add
dec
and
ficoms
in
xchg
gs
push
bound
iret
lds
addl
cld
dec
pop
mov
aam
dec
or
rcll
ds
sub
hlt
inc
adc
repnz
in
jl
jg
fwait
sbb
mov
push
mov
or
pop
jp
jecxz
hlt
mov
jp
xlat
jbe
or
push
jo
and
repnz
pop
cmc
dec
xor
test
or
xchg
mov
out
insb
add
jecxz
dec
les
daa
push
push
imul
test
cmc
inc
jmp
pop
push
shll
jl
clc
fisubrs
imul
js
fimull
mov
int
ret
pop
mov
jb
idivl
xchg
test
inc
das
mov
add
mov
inc
adcb
ja
je
inc
rclb
fwait
mov
sbb
popa
jmp
insb
cld
int
mov
jnp
cltd
inc
scas
iret
mov
mov
xchg
jae
or
insb
shl
push
and
cmp
dec
add
dec
lahf
decb
rcll
orb
in
mov
cld
xchg
cmpsl
xchg
out
fwait
lods
xchg
shr
or
or
jb
test
pop
les
mov
insl
xchg
sbb
xor
xlat
popf
fadds
xchg
popa
lret
imul
cmp
jnp
loopne
add
mov
subb
sbb
dec
fcmovnbe
add
les
lret
mov
push
xchg
cld
jg
ret
xlat
fistl
push
stos
test
shlb
cmp
inc
inc
movsb
mov
xor
mov
ret
pop
mov
mov
insl
sub
xchg
shr
sub
add
mov
cmc
in
lock
adcl
bound
push
sahf
add
fsqrt
mov
push
xsha256
cmpsb
pop
jb
push
jl
enter
cmp
bound
iret
push
enter
hlt
or
sub
mov
mov
mov
xchg
ljmp
jne
adc
jle
or
pop
arpl
repnz
xchg
mov
arpl
negb
notb
inc
lea
jge
shlb
adc
jbe
pop
rcr
push
inc
mov
fldcw
cmpsb
popf
mov
std
pop
les
in
mov
sbb
push
lret
jg
jbe
clc
cmp
lods
xchg
sbb
add
into
movsl
rol
jge
pop
movl
iret
mov
sub
pop
ret
in
fisttpl
imul
dec
cmp
add
mov
mov
push
sbb
std
jne
inc
mov
pop
mov
xor
ja
or
adc
pusha
jle
addl
mov
mov
adc
inc
les
push
adc
leave
fnstsw
mov
add
add
sub
mov
xchg
cmp
push
shlb
and
outsl
dec
lods
outsl
loopne
stos
hlt
daa
addr16
movsl
jns
and
mov
adc
xor
adcb
mov
cs
push
jo
xor
hlt
xor
mov
cmc
cli
xchg
xlat
cmp
sbb
or
push
cmp
data16
lahf
dec
pusha
fidivrl
push
pop
into
dec
repz
cmp
out
mov
andb
in
popf
adc
cmp
jl
mov
mov
shll
jg
in
mov
in
nop
pop
sbb
out
stos
clc
data16
sarl
xor
mov
movsl
inc
jle
jo
std
cmpb
addr16
stos
lock
rcll
xchg
ffreep
ljmp
cmp
inc
sub
lahf
sbb
pop
fmul
cmp
jle
xor
testl
push
inc
loopne
xor
adc
adc
stos
adc
xchg
mov
mov
out
neg
mov
and
lock
push
jl
xchg
aad
fbld
fcmovnb
shrb
mov
cmp
adc
add
jae
mov
mov
cmp
iret
adc
mov
mov
lds
sbbl
xor
pop
in
sub
pop
into
aam
cmpsl
les
cli
sub
faddl
push
or
loope
sub
lea
out
sub
in
imul
in
leave
sbb
mov
test
rorl
sti
mov
pop
push
ret
mov
mov
adc
bswap
outsb
movsb
jg
cmp
sahf
sub
xchg
and
in
clc
test
and
aad
dec
test
fwait
mov
dec
jmp
add
sbb
dec
inc
sub
sbb
jbe
xchg
jge
lret
insb
xchg
enter
inc
jno
shl
clc
ja
fisttpl
pop
inc
movl
lock
popf
lret
mov
add
imul
cmp
mov
xor
cltd
xchg
cmc
sub
scas
xlat
dec
mov
adc
push
daa
pop
fmuls
sarl
adc
adc
rcpps
or
push
mov
xor
cmpsl
pop
pop
lods
mov
in
dec
sbb
dec
mov
push
jnp
repz
fwait
xchg
test
stc
hlt
cmp
imul
mov
stc
add
jge
subl
push
sub
testl
je,pn
adc
stos
test
cs
je
dec
cltd
rclb
popf
mov
pop
inc
in
push
js
andl
divb
fmuls
mov
sbb
loope
cld
jne
sub
dec
aaa
add
push
imul
lahf
or
mov
pause
jbe
dec
or
fmul
sub
mov
je
adc
sahf
xchg
mov
jne
outsl
mov
pop
fistpl
int
mov
stos
mov
fdivrp
push
insl
jp
push
loop
loope
bound
push
xabort
sar
mov
call
and
pop
dec
dec
fwait
lret
ljmp
push
mov
test
xlat
negb
push
inc
jmp
add
aam
pop
dec
insb
inc
sbb
jl
or
cwtl
xor
push
push
lcall
adc
jne
jle
add
xchg
js
ja
je
pop
jle
cmc
cmp
cwtl
lods
dec
inc
lds
lcall
and
dec
inc
divb
dec
lods
xchg
movsb
pushf
aam
sbb
lea
add
les
push
xchg
div
push
fs
xorb
push
push
add
stc
cld
mov
mov
pop
ja
add
and
ret
loop
dec
nop
pop
add
scas
mov
push
insl
pop
xor
in
cmp
int
mov
sub
or
ret
ss
ss
push
push
or
jo
pop
pop
fnstsw
testl
roll
out
xchg
nop
repnz
popa
nop
sub
outsl
sub
scas
add
sbb
push
ds
xor
bound
stos
pop
mov
xor
mov
int
ds
sub
sbb
rclb
xor
pop
xor
cmp
xchg
pop
mov
dec
stos
dec
push
loopne
rcrb
mov
addb
push
dec
sbb
inc
mov
and
mov
es
dec
push
loopne
add
fs
push
mov
pop
lds
lock
inc
stos
jmp
repnz
jns
cmp
data16
mov
jecxz
in
sub
push
ret
gs
aas
hlt
imul
sub
jp
add
sub
ljmp
in
je
movsl
ret
mov
mov
movsl
inc
hlt
jbe
enter
leave
aaa
dec
lret
lds
xchg
inc
sbb
ud2
ja
and
stos
xor
xchg
out
dec
mov
fisubs
test
stos
or
scas
sahf
add
pop
mov
xchg
dec
outsl
aad
aas
adc
add
mov
imul
push
dec
shll
dec
lahf
xchg
lret
and
in
inc
push
imul
inc
jg
notl
xor
mov
sbb
ljmp
jp
enter
ss
sbb
div
inc
push
lods
or
sbb
subl
push
sbb
add
loop
fidivl
and
scas
out
gs
pop
pop
mov
cmpsl
cwtl
cmc
aad
xor
add
xchg
aad
jle
ds
mov
loopne
pop
and
mov
and
and
pop
lds
repz
in
mov
or
stc
bound
aad
jp
xor
xor
xchg
and
sarb
popf
jnp
notl
push
cltd
or
outsb
in
inc
dec
insl
and
cmc
testb
jp
mov
add
or
xor
in
cmpsb
iret
stos
jne
mov
push
cmp
outsl
push
jl
pusha
push
lcall
add
mov
dec
imul
push
inc
insb
push
xchg
jmp
dec
stos
lock
mov
and
or
cwtl
or
dec
cmpsl
pop
lcall
lods
mov
and
xchg
mov
dec
test
sbb
fwait
std
shl
sub
gs
loopne
add
fsubl
adc
mov
jp
mov
test
dec
pusha
mov
js
lcall
imul
inc
or
sbb
xchg
or
mov
std
mov
xchg
sbb
ret
test
mov
rcrb
mov
push
cltd
ret
adc
popa
push
out
xchg
xor
hlt
icebp
sarb
popa
loope
shrb
and
mov
sbb
or
xor
pop
repnz
in
xchg
fwait
jb
test
rorl
mov
test
popfw
clc
mov
mov
gs
inc
leave
push
pop
fld
jbe
loopne
cmp
jle
push
push
mov
or
jecxz
adc
cmp
mov
xor
sbb
mov
push
imulb
push
xor
icebp
mov
pop
ret
mov
sub
and
lock
std
push
pop
mov
in
adc
inc
push
ret
pop
es
push
inc
ffree
jae
mov
jo
out
cltd
xchg
fwait
aam
mov
fiadds
pop
hlt
fincstp
mov
jge
xchg
xor
add
push
push
shrb
inc
adc
jmp
and
ds
enter
leave
jl
cmc
in
ja
std
lea
jns
pop
ja
lods
int
xchg
test
cli
nop
in
mov
aas
push
dec
or
lret
dec
ret
popa
inc
mov
mov
int3
mov
pop
clc
mov
popa
sbb
loopne
xlat
pop
pop
lea
dec
leave
mov
lret
fmull
es
lret
and
add
xchg
scas
push
xor
adc
outsb
nop
gs
negl
mov
pop
call
mov
andl
mov
xchg
fs
dec
bound
and
js
aas
fwait
push
rolb
cmpb
xchg
sbb
and
and
int
call
mov
push
inc
push
int3
add
data16
mov
leave
cli
ret
jmp
inc
popf
test
mov
pushf
test
addl
inc
iret
aad
fadds
mov
cltd
dec
aad
loop
cmpsb
adc
dec
push
mov
mov
ja
leave
dec
loopnew
cld
imul
sub
adc
mov
pop
ret
scas
jg
hlt
and
sbb
add
fs
push
jg
leave
pop
shrb
bnd
dec
aad
test
repz
or
mov
mov
test
or
sti
and
shr
loope
test
adc
dec
cli
movsb
push
mov
sti
and
ljmp
inc
mov
or
xchg
sahf
sbb
mov
jbe
jae
in
popf
xchg
and
testb
push
mov
insb
insb
outsl
xchg
dec
test
testb
shrl
loope
mov
lock
or
imul
shl
push
popa
adc
repz
je
and
jle
push
mov
sub
mov
jb
out
sbb
jp
hlt
mov
inc
mov
xor
xor
push
cmp
shlb
jno
outsl
js
into
push
mov
sub
test
lret
or
ss
decl
stos
pusha
jmp
push
loop
xor
pop
pop
aad
add
rcll
int3
or
es
shr
sbbl
ret
es
dec
jae
pop
in
repz
test
ss
push
aas
jne
ret
sub
push
outsb
mov
jne
fucompp
xchg
in
fldt
aas
sub
sbbl
out
adcl
jns
or
sub
fdivrs
aam
mov
xor
test
jecxz
aam
or
lea
dec
test
adc
dec
jno
jo
push
cmp
popf
incb
lods
fcomi
sarb
adc
mov
jmp
mov
xor
push
clc
jmp
pop
out
inc
sahf
mov
mov
or
and
scas
insb
sbb
mov
fisttpl
leave
pop
int
movsl
stos
or
cmpsb
dec
arpl
enter
cwtl
fistps
pushl
adc
icebp
or
loopne
inc
cmc
inc
inc
stos
call
pop
pop
push
sar
ret
or
mov
mov
leave
mov
out
push
cmp
xchg
or
loope
pusha
lods
shll
repnz
cli
lcall
sbb
in
cmp
inc
xor
adc
mov
jne
sub
xor
mov
ljmp
int3
ss
shrb
lea
mov
cmp
ret
in
mov
jae
dec
add
sbb
mov
xchg
push
lock
jae
sbb
cmp
outsl
inc
mov
mov
test
push
xor
xchg
xor
ret
mov
nop
fcoms
pop
xor
sbb
cmp
in
jbe
loopne
cmp
sub
gs
pop
data16
dec
xor
cltd
push
lret
mov
jb
jp
hlt
mov
xchg
ss
mov
ds
xchg
pop
sbb
jmp
cmc
jecxz
sbb
cmp
pop
jg
lods
sbb
jo
in
negl
dec
rcr
mov
sti
insl
roll
js
test
jmp
mov
sbb
cs
jle
sbb
movsb
fnsave
nop
adc
adc
bound
test
xchg
rol
ret
wbinvd
xchg
mov
mov
cwtl
fwait
lods
mov
pop
les
add
lret
push
mov
xor
loop
jmp
pop
cmc
cmpsl
mull
dec
call
dec
xchg
pop
mov
shrl
lods
jmp
mov
frstor
xchg
xchg
mov
xor
xchg
std
leave
push
test
mov
outsb
and
neg
int
mov
push
cli
or
sahf
and
jae
mov
jg
cmp
mov
jl
push
js
int
push
jg
mov
inc
in
arpl
dec
je
rcrb
das
shll
out
ret
mov
jo
int3
insl
xor
and
sbb
ret
loop
hlt
fidivrl
and
daa
mov
pop
clc
lods
dec
sub
jo
int3
inc
push
inc
jp
sbb
mov
inc
ret
lcall
andb
out
fiaddl
mov
jecxz
test
xorl
xor
pop
push
outsl
xor
jne
sub
mov
mov
pop
mov
aad
andb
inc
xor
enter
dec
and
lahf
aaa
mov
lock
pop
mov
and
jae
aas
stos
subl
out
lds
mov
dec
stos
fistl
xchg
lods
repnz
inc
sub
cmc
fnsave
loop
sbb
je
inc
shrl
loop
or
aaa
lods
and
inc
data16
ficompl
testl
mov
das
imull
or
or
es
es
xchg
fstpt
aaa
int3
pop
movsl
mov
xlat
and
pushf
pop
sar
cwtl
call
mov
mov
sahf
mov
lea
mov
inc
ds
std
sti
dec
popf
add
push
mov
xor
inc
lods
call
cmc
xchg
mov
pop
out
xchg
int3
dec
cmpsl
movsl
dec
pop
xor
pop
xlat
aaa
bound
rorb
pop
mov
jl
or
fstl
in
fiaddl
push
sub
mov
jecxz
push
jg
rclb
pop
cmp
out
cmpsb
cmpl
out
ja
add
repnz
pop
push
cmp
imul
andl
ja
out
xor
loop
mov
fidivl
clc
pop
pop
repz
pop
icebp
fs
out
enter
das
pop
shlb
jle
push
xchg
mov
pop
inc
movsl
sub
jb
pop
pop
nop
fwait
cli
push
in
bound
rolb
adc
int
lods
mov
popa
pop
cmp
fldenv
jp
movsb
mov
int3
pusha
je
jle
cmp
cli
cmpsb
ss
scas
pop
outsb
xor
leave
loope
test
push
sbb
lret
addb
pop
aas
daa
pop
cmpb
inc
pushf
xor
xchg
dec
into
test
in
testl
cltd
cli
pusha
fs
inc
push
add
pop
ret
jmp
cs
test
push
and
pop
xchg
enter
popf
in
xor
leave
loope
inc
hlt
cmp
jg
inc
sub
call
int
rclb
xor
and
lcall
cmp
xchg
xlat
pop
mov
lods
mov
enter
fwait
inc
mov
hlt
loope
test
xchg
or
sub
scas
mov
mov
push
icebp
mov
add
jae
push
dec
ds
cmpl
jp
lret
stos
mov
xchg
repz
popa
inc
mov
test
gs
aaa
push
mov
out
cmp
icebp
sbb
jg
cmp
and
das
repz
or
loopne
sub
ljmp
aaa
enter
jns
fcoms
pop
imul
leave
pop
loopne
sub
sub
and
pop
outsb
and
loop
bound
out
scas
inc
mov
repz
lret
fistl
test
test
pop
mov
mov
dec
xchg
jne
mov
sub
cltd
mov
mov
cwtl
mov
fdivrs
mov
insl
mov
adc
jne
jg
dec
loop
pop
or
sbb
adc
iret
pop
cmp
mov
enter
hlt
iret
pop
js
popa
ret
xor
mov
movsl
fadds
fdivl
mov
cmp
pop
subl
jmp
sti
test
mov
movsb
inc
loope
jnp
adc
mov
mov
aam
das
rorb
push
pop
ds
mov
mov
mov
ja
outsb
mov
or
dec
dec
rclb
sbb
test
pop
push
shlb
in
loope
int
cltd
psrad
dec
and
pop
movsl
or
fbstp
mov
mov
adc
inc
fsubrs
cmp
ret
push
mov
dec
inc
xor
add
stos
pop
pop
and
mov
adc
loop
and
ljmp
cs
mov
loopne
gs
mov
ss
sub
inc
pop
sarl
repz
pop
inc
rolb
or
mov
int3
jmp
das
stc
lds
pop
mov
push
sub
fucomi
aam
cmpsl
mov
test
call
pushf
push
push
mov
test
xchg
fucomi
push
mov
movsb
loope
or
out
jne
dec
jae
pop
add
xchg
cmpsl
and
jno
out
xchg
push
adc
pop
ja
mov
test
std
xchg
push
and
mov
push
stos
push
nop
push
adc
fisubs
xor
xchg
mov
adc
lcall
add
ficompl
ret
mov
mov
insl
and
into
pop
push
lcall
and
fucomi
shrl
cmp
jg
jo
adc
cmpsl
popa
iret
inc
cwtl
sarl
mov
icebp
lahf
ficompl
adc
jnp
imul
dec
lret
mov
les
jbe
aad
mov
xor
mov
fstp
or
cmp
ljmp
or
jae
cmpsb
push
shll
jo
adc
and
pop
fistpll
xor
cli
cld
pushf
push
cmp
fcoml
cmp
mov
cwtl
inc
test
test
adc
xor
sbb
fistps
mov
addb
push
or
cmc
add
cmpsb
pop
xchg
dec
push
data16
pop
push
pop
adc
ja
cltd
adc
fwait
aaa
add
aaa
notb
popf
and
insb
xor
push
xchg
shl
insb
pop
adc
test
xchg
data16
dec
stc
inc
rolb
js
push
pop
cvtpi2ps
ret
loop,pn
dec
dec
pop
mov
and
dec
cmp
and
fildl
inc
out
xor
mov
rcl
jo
adc
dec
adc
pop
or
outsl
jecxz
jb
lds
adc
leave
rcrb
clc
dec
mov
imul
ret
insl
repnz
out
sbb
pop
jle
adc
mov
sbb
popf
lods
gs
xchg
pop
mov
mov
jo
inc
and
mov
loop
ljmp
dec
lahf
outsb
outsb
fdivs
and
orb
jo
cmp
lret
ss
cmpsl
adc
dec
jae
icebp
xor
xchg
fisubrl
es
mov
sub
fcoms
lock
enter
push
lahf
fcoms
pop
addb
adc
mov
jg
stos
lock
fsub
cwtl
inc
jp
push
fwait
push
mov
cmp
add
adc
pop
inc
lods
jg
mov
xor
xchg
lea
test
jno
pop
scas
push
xchg
add
pop
das
push
mov
ja
mov
mov
pop
std
xchg
aad
lods
das
sbb
jp
ss
in
sbb
xchg
dec
and
subl
fistps
shll
mov
aad
daa
stos
daa
mov
inc
lcall
in
jl
add
insl
adc
xor
out
add
dec
inc
mov
cmp
test
mov
lahf
push
push
push
sahf
rol
sahf
test
sub
pop
mov
iret
inc
test
stos
xchg
test
lret
pop
cmpb
test
add
adc
adc
nopl
add
or
push
adc
movb
inc
add
sti
pop
div
repz
jne
cmc
mov
jo
dec
pop
xor
push
loope
jecxz
popa
fistps
mov
aad
or
pop
cld
cmp
or
pop
scas
lahf
dec
or
mov
ljmp
dec
add
insl
scas
mov
jge
das
push
sub
cmp
add
ja
fstl
gs
int3
imul
and
popa
ja
cmp
xor
mov
xchg
jno
jg
lret
ret
sbb
cwtl
fiadds
sbb
loop
adc
test
pusha
or
mov
mov
sbb
jl
or
pop
lret
mov
ret
dec
adc
adc
insl
add
dec
and
jge
jle
pop
scas
xor
movsl
push
pop
dec
hlt
sub
test
ljmp
fsub
imul
lock
jo
jp
xor
mov
andb
pop
inc
arpl
test
adc
mov
popa
es
jb
sbb
dec
mov
stc
movb
cmpsl
cwtl
cltd
aas
ret
sub
jbe
pop
pop
jo
aas
mov
into
dec
jl
std
add
add
push
mov
xchg
and
idivb
adc
mov
add
adcb
inc
or
sbb
mov
adc
lcall
lret
jle
shl
daa
loope
outsl
xchg
fisttps
repz
fdivrl
cmp
cmp
bound
mov
xchg
and
pop
pop
jnp
xor
int3
or
test
sub
outsb
loope
test
push
idiv
xor
sbb
sbb
in
jge
shll
push
jmp
add
pop
adc
add
sbb
cmpsl
pop
jge
pop
leave
jecxz
hlt
cmp
loopne
push
insb
sbb
inc
adc
repnz
out
ss
push
sbb
into
rclb
imul
rolb
addr16
cmc
add
adc
push
ja
and
dec
and
add
push
loope
xorl
mov
jle
sarb
jne
xchg
xchg
stc
pop
dec
inc
es
inc
in
aam
mov
outsb
xchg
and
mov
mov
jno
imul
mov
call
fdivrp
ss
push
and
cmpb
xchg
adc
cmp
jbe
outsl
sub
add
call
fdivs
jo
or
xchg
dec
imull
inc
inc
bound
sbb
xor
mov
or
inc
mov
dec
push
addl
mov
push
in
jge
mov
mov
cltd
repz
mov
lcall
out
dec
test
cmp
adc
loope
leave
add
or
test
push
sarl
loope
xchg
mov
cmp
inc
pop
mov
mov
dec
adc
int3
jnp
and
add
adc
jns
je
xchg
push
lret
adcl
jo
sarb
jmp
xchg
arpl
popf
clc
adc
outsb
push
ficompl
dec
pop
xchg
push
mov
ja
loope
in
ljmp
mov
mul
push
sbb
cmp
mov
mov
cmpsb
gs
push
cmp
cmp
addl
ret
jp
lahf
pop
xor
sbb
jbe
rcrb
xor
pop
std
test
xor
sti
cli
cs
lret
and
lods
dec
aam
xor
adc
std
mov
out
adc
in
and
aas
loope
add
test
add
arpl
in
pushf
dec
mov
loope
in
ret
out
mov
std
inc
mov
movsb
sbb
and
pop
lods
aaa
cmp
enter
cmc
inc
arpl
push
ja
adc
fucomp
and
dec
sub
inc
inc
xor
packuswb
mov
cmp
ficompl
insb
pop
cmp
sar
xchg
dec
out
jmp
jns
mov
add
je
fidivl
gs
test
addb
pop
out
cmp
mov
inc
mov
scas
fwait
mov
dec
and
add
mov
sub
popf
ljmp
pop
cs
pop
sub
inc
adc
lret
xor
maxps
outsb
xchg
or
xchg
test
scas
cmc
mov
das
pop
call
mov
data16
sub
nop
movsb
adc
ucomiss
pop
xor
xchg
sarl
ror
sub
push
and
daa
mov
mov
mov
mov
int
lcall
idiv
jecxz
in
xchg
or
lahf
shl
dec
lret
inc
dec
and
cmp
adc
jbe
push
inc
loopne
or
sti
adc
outsl
js
xchg
mov
push
add
inc
inc
pop
into
shlb
out
in
ljmp
repz
phaddd
pop
ja
jg
rcll
or
xchg
cmp
jmp
dec
push
aad
jmp
seto
xor
xchg
mov
fs
jmp
fprem
inc
popa
pop
inc
subl
mov
add
mov
xchg
push
fldenv
mov
fs
adc
testb
dec
outsb
mov
mov
xchg
jnp
push
cld
sbb
cs
xchg
push
mov
ljmp
sbb
pop
iret
mov
pop
ljmp
pop
clc
add
xor
mov
mov
push
push
in
mov
and
jg
popa
adc
sti
xor
mov
sti
dec
push
pop
pop
jp
sub
aam
dec
into
mov
inc
int
loope
inc
pushl
mov
fisubs
fadd
cld
sbb
push
or
in
bswap
mov
test
jecxz
dec
sbb
adc
and
sub
fisubrs
xor
or
xlat
jne
or
shll
dec
iret
pop
ret
jne
xor
pop
or
push
dec
int3
addr16
jne
loopne
lods
sub
cmp
lcall
sarl
movl
icebp
cmpsl
pop
mov
into
int
xchg
out
jns
popa
or
call
rcrb
inc
out
insb
shll
in
inc
mov
xlat
mov
jns
addr16
add
cmpsl
and
fmul
rorb
xchg
shl
scas
xor
jg
in
enter
and
je
insl
je
push
mov
mov
pop
lods
mov
xor
imull
popa
mov
sub
paddusw
daa
ss
sti
jne
cmc
test
adc
or
out
mov
clc
hlt
loope
xchg
push
jmp
dec
test
add
test
inc
rol
inc
sahf
cmovle
call
vpavgw
in
in
sbb
call
loop
xchg
imul
or
lds
jae
aad
pop
out
cmp
mov
aas
push
xchg
adc
adc
push
mov
jl
adc
jno
adc
repnz
sbb
popa
cld
addr16
mov
imul
aam
sti
gs
sbb
xor
or
cmp
movsl
xchg
sbb
and
ret
inc
aad
pop
fsts
repz
push
xchg
enter
or
daa
arpl
inc
xlat
loop
fwait
xor
push
or
xchg
cmp
daa
mov
xor
outsl
cmp
cmp
scas
pop
aad
add
test
jp
push
inc
sar
repz
cltd
stc
push
add
push
ss
lock
int
jecxz
ret
cmc
or
lds
fisubl
mov
mov
cs
sbb
icebp
pop
and
jne
hlt
sub
movsb
adc
xchg
das
arpl
mov
loope
jge
loop
xchg
ficompl
add
pop
pop
mov
jle
xchg
inc
outsb
and
dec
dec
inc
cmc
out
out
test
xlat
sub
dec
test
dec
std
sub
add
jns
test
out
mov
test
mov
aad
pop
xchg
in
sub
xchg
sbb
xlat
inc
ret
mov
orl
mov
or
inc
data16
adc
pop
xor
sbb
in
lods
or
pop
adc
out
push
sbb
inc
jg
or
test
jmp
cltd
movl
andl
adc
insb
imull
mov
out
outsb
popa
aad
jb
test
xor
mov
cmp
loopne
mov
lret
sbb
push
xor
mov
jo
bswap
jbe
add
imul
popf
jo
mov
mov
xorl
ret
mov
add
adc
cld
imul
lock
rorl
loope
aad
cltd
dec
inc
jecxz
dec
divl
outsl
fldl
xchg
fmuls
in
out
fs
rol
mov
mov
inc
mov
bound
adc
les
xlat
cmp
lock
or
sub
push
mov
daa
sbb
cmpsl
push
aaa
lods
sahf
xchg
mov
notl
sub
icebp
stc
scas
imul
push
test
cmp
jl
leave
cmpsl
xor
sub
fadds
int3
in
fsubl
in
push
jle
pop
out
into
jae
sar
cld
mov
or
jl
mov
aad
cwtl
js
mov
mov
cmp
add
data16
aad
jecxz
xor
int3
sub
in
inc
pushf
xchg
out
out
aam
mov
mov
mov
xor
mov
popa
inc
in
and
add
inc
mov
ret
sbb
add
mov
add
pop
sub
jl
push
lock
shl
imul
push
into
mov
jns
xor
idivb
mov
stos
scas
push
rcrl
ljmp
stos
mov
cwtl
sub
sbbb
push
pop
stos
cld
movsl
inc
pusha
dec
xchg
xchg
mov
mov
test
pop
adc
push
ja
pop
and
dec
adc
int
mov
faddl
cmp
push
mov
in
inc
jmp
push
mov
addr16
test
fwait
out
pop
gs
lock
push
fiadds
sub
xor
ret
jge
inc
adc
jbe
pop
jo
mov
xchg
dec
mov
add
pop
cmp
cmp
lret
cmpsl
cmp
cmp
repnz
pop
movsb
or
sub
mov
or
out
inc
add
sub
scas
xchg
jp
shrb
sbb
enter
inc
push
xlat
mov
stc
icebp
pop
fs
gs
fs
out
fucomp
scas
or
jbe
or
insl
ja
xchg
cmpl
ss
mov
adc
xchg
popf
dec
push
cmp
jnp
jge
mov
aad
jne
lret
push
lods
sbb
imul
cmp
leave
cmp
out
int3
fldl
push
mov
jg
mov
inc
xor
repz
fwait
out
mov
icebp
repz
aam
fs
sbb
or
into
mov
push
daa
cmp
ss
jne
outsl
aam
imul
adc
mov
jae
shll
inc
mov
aam
int3
rclb
aam
xor
and
cmpsb
movsb
push
mov
push
sbb
mov
adcl
xchg
fadds
sbb
int
cmp
enter
scas
jbe
and
test
pusha
sub
mov
lds
sahf
out
mov
lods
adc
fisubrl
and
sbb
pop
push
js
mov
shlb
sbb
dec
in
test
mov
cli
pusha
insl
push
xor
mov
push
popa
sahf
in
and
xor
xchg
and
pop
andl
jecxz
movsb
hlt
mov
cmpsl
mov
add
pushf
add
xchg
cmp
test
bound
pop
in
mov
inc
or
or
xchg
sub
mov
idivl
cs
xchg
cmp
mov
push
popa
scas
cmp
fsubs
cmp
jo
inc
mov
loope
mov
popa
inc
push
mov
aaa
sub
mov
stc
mov
and
inc
scas
ljmp
out
push
mov
inc
inc
push
cmc
add
rorl
push
xorl
scas
sbb
sub
push
xchg
push
mov
in
je
push
aam
call
loop
xlat
dec
cmpb
out
mov
mov
mov
sub
jno
add
aas
cmpl
jle
mov
cmc
loop
xor
xor
cmp
inc
int3
pusha
sbbl
inc
push
jne
in
aaa
pop
adc
data16
dec
mov
stos
fs
cmpsl
punpcklbw
dec
js
jns
mov
std
adc
and
fidivs
sahf
shll
lcall
jmp
xchg
out
mov
mov
dec
frndint
sub
stos
pop
in
stos
push
inc
int
in
mov
push
push
hlt
cmc
sti
shl
fdivrl
pop
ret
cld
lcall
inc
jb
sub
jecxz
or
mov
in
jnp
in
push
ret
add
rorl
sub
mov
ret
mov
iret
in
and
call
arpl
mov
fnstsw
bound
xor
mov
lahf
rorb
sbb
jnp
inc
dec
dec
cmp
jle
ret
xchg
pop
orb
jmp
insb
or
add
xchg
fidivrl
lcall
fsts
sbbb
fisttps
sub
push
sbb
out
xchg
pop
iretw
lods
and
orb
movsb
xchg
xor
mov
jl
add
std
addl
xchg
repz
sbb
fisttps
in
fcmove
std
pop
lods
sub
pushl
ljmp
pop
out
dec
testb
insb
lret
sub
pusha
pop
dec
cmpsb
jb
inc
and
sub
adc
jns
in
and
dec
add
sar
mov
jne
add
cmp
cmp
jns
cli
jnp
sbb
push
mov
out
dec
gs
mov
mov
lods
mov
sub
or
sbb
dec
push
inc
dec
movsb
ja
push
popl
pop
in
cmp
jmp
cltd
nop
outsb
push
ss
inc
stos
outsl
xchg
in
cwtl
fcomip
lahf
add
ret
pop
inc
out
dec
and
ficoms
mov
out
lcall
or
ja
int3
fisubrs
mov
loopne
std
hlt
mov
jne
je
dec
mov
aad
in
repz
add
stos
movsl
dec
fstps
add
xchg
arpl
in
xor
mov
add
push
mov
inc
push
cltd
mov
test
shrl
icebp
jne
cmp
imul
jae
test
inc
dec
sti
add
xor
int3
sbb
in
cmp
xchg
fstpt
ss
mov
push
in
out
or
and
mov
xchg
jne
pop
aaa
ljmp
subl
incl
sub
adc
or
out
xchg
popf
dec
mov
and
jg
ficomps
fcomps
sbb
sub
jmp
lcall
jns
addb
pusha
xor
scas
loopne
adc
jmp
ja
loope
jnp
pop
leave
xor
jbe
ret
stos
push
dec
mov
in
call
popf
hlt
bound
iret
pop
jae
push
cmp
dec
lret
hlt
jg
jl
pop
fisubs
gs
rorb
js
push
out
es
enter
enter
pop
das
dec
dec
sub
sti
mov
pop
pop
sbb
js
fs
data16
fisubs
mov
insl
dec
mov
call
inc
ja
aas
loope
lock
xchg
pop
jnp
int
mov
loopne
ljmp
ja
push
repnz
lret
adc
push
and
inc
out
sub
mov
clc
or
sbb
mov
mov
popf
pop
push
cld
push
int
add
mov
addl
mov
neg
jg
and
adc
int
lret
fsubl
push
popf
addr16
arpl
fsubp
xchg
jmp
xor
popa
data16
inc
jb
push
add
push
stos
mov
xchg
cmp
out
fs
mov
test
fcomps
in
dec
xor
test
sbb
sub
xor
mov
jb
inc
rolb
test
cwtl
mov
aas
cli
and
mov
push
sub
imul
xorb
jb
push
and
push
outsl
xor
inc
data16
sbb
dec
jecxz
push
add
in
xchg
pop
sbb
mov
adc
in
subb
cmp
lods
xor
ret
hlt
push
sub
push
in
mov
loope
pand
or
and
add
mov
jmp
jp
dec
cs
ljmp
push
jo
push
adc
in
mov
pusha
scas
movsl
mov
jg
mov
insl
mov
ficoms
addr16
dec
cmc
rcl
inc
push
xlat
pop
adc
mov
std
loop
out
inc
je
ds
aaa
popa
sub
ret
jmp
push
nop
mov
cld
xor
inc
leave
lret
out
sbb
aam
nop
dec
xor
sar
push
gs
sbb
adc
push
test
repnz
imul
dec
jae
adc
stc
sub
filds
ja
jmp
test
dec
or
mov
inc
scas
test
sahf
xor
leave
roll
pop
iret
mov
add
outsl
mov
mov
push
aad
orl
mov
lea
mov
outsl
or
sar
enter
rorl
cmpsl
mov
mov
sbb
test
aam
cmp
mov
jmp
cmpsb
push
stos
cmpsl
hlt
mov
xor
les
test
mov
mov
insl
in
arpl
bound
or
stos
mov
neg
sbb
and
iret
or
lahf
pop
jge
aas
fwait
int3
add
in
jns
jnp
loopne
sarl
rcr
test
cmpsb
je
adc
cmp
cld
call
pusha
jbe
imul
lahf
iret
lret
aam
push
pop
inc
fs
rorb
mov
push
ds
ss
je
aam
dec
or
cmp
aaa
daa
mov
sbb
popaw
stos
pop
negl
sbb
jne
or
shlb
hlt
imul
lds
mov
mov
shl
adc
jae
dec
dec
mov
enter
cmp
sub
xchg
jbe
mov
loop
xchg
aad
pop
inc
scas
and
xchg
adc
xchg
loope
mov
push
dec
into
adc
cmp
int3
test
mov
shll
ja
and
adc
imul
mov
test
in
xor
mov
hlt
pop
cmp
addb
sub
or
out
lcall
daa
cmp
clc
mov
jle
and
pop
mov
xchg
jg
xor
int
gs
aaa
sub
rep
jmp
arpl
jecxz
mull
xchg
push
cmp
lods
push
es
ret
jbe
push
or
mov
dec
mov
scas
sub
adc
xchg
rorb
adc
cmp
gs
push
mov
cmp
xchg
loop
adc
repnz
mov
dec
mov
mov
jae
enter
fsubrs
xor
fistl
pop
dec
daa
loop
and
sbbl
pop
mov
addr16
and
jnp
push
shr
cld
lret
stos
stos
imul
push
sbb
dec
xor
mov
jno
insb
cli
outsl
add
sti
cs
idivb
mov
call
dec
and
mov
push
fwait
sbb
call
jg
test
xchg
rcl
add
inc
in
inc
imul
push
push
mov
cmpsl
jecxz,pn
lds
notb
push
push
rorl
ljmp
add
or
out
in
aad
mov
ret
or
stos
xorb
in
jmp
add
mov
loopne
test
decb
pop
or
bound
pop
and
mov
insb
pop
jae
or
enter
xchg
mov
xor
dec
mov
lea
fs
adc
mov
adc
rcll
adc
adc
mov
out
sub
sub
lods
stos
and
out
inc
rep
ss
push
cmp
fstps
pop
and
xor
or
lahf
sbb
mov
push
xchg
mov
lock
or
jb
adc
sub
std
sub
imul
movsl
and
xor
dec
lcall
push
loope
js
aad
xchg
incl
pop
outsb
orb
push
cmp
ficomps
mov
inc
dec
negb
cwtl
fdivs
faddl
sub
enter
pushf
adc
insb
dec
pop
ja
push
pop
lret
or
mov
xlat
pop
insl
mov
out
cmp
lret
leave
pushf
add
xlat
jns
outsl
outsl
movsl
imul
addr16
and
rorb
mov
jo
xlat
mov
mov
jne
sbb
cmp
mov
inc
dec
xchg
or
aas
mov
call
int3
adc
enter
pmullw
aam
push
xor
or
mov
cmpsl
into
inc
fdivrs
add
jnp
ret
adc
in
pop
aam
push
mov
sub
jo,pn
loop
xchg
push
imul
pop
jnp
ficomps
in
int3
imul
inc
xor
adc
jno
subl
cmp
push
cmp
sbb
das
or
fs
loope
leave
pop
mov
push
mov
outsl
nop
add
push
fidivl
ret
push
xchg
inc
jecxz
inc
sub
nopl
sbb
lods
sbb
dec
jae
cltd
fisttpll
cmpsl
sub
cvttps2pi
imul
mov
mov
das
xchg
jge
test
ret
push
mov
pop
mov
push
test
xchg
mov
ret
dec
fiaddl
mov
movsl
leave
fsubr
jl
rcrb
out
mov
push
arpl
push
rclb
push
xor
adc
sbb
adc
xchg
repz
push
mov
lods
ss
cltd
scas
adc
fucomp
repz
addb
loopne
push
jbe
push
cmp
iret
dec
hlt
bnd
repnz
adc
jmp
movsl
and
adc
jecxz
and
sbb
mov
andb
mov
mov
mov
mov
addr16
in
test
imull
lea
xchg
jle
int3
sbb
std
cltd
adc
add
pop
xchg
iret
pop
mov
flds
pop
clc
inc
lea
in
repz
andl
xchg
enter
jle
mov
lods
pushf
mov
pop
mov
sub
pushf
loopne
ja
xchg
cmp
inc
mov
pop
stc
mov
xor
inc
push
ret
adc
jae
adc
aam
pop
lock
dec
rclb
mov
or
lret
rcll
aas
or
loopne
les
mov
cmc
iret
in
aas
add
subb
ljmp
jno
jmp
shrb
xlat
mov
cmpl
pop
mov
decl
add
jmp
leave
push
pop
xchg
mov
out
decb
clc
les
arpl
test
sub
stc
and
cmpsb
aad
repz
not
mov
dec
stc
inc
xchg
in
lcall
xchg
pop
daa
aaa
xchg
das
div
dec
mov
sti
push
push
adc
leave
cltd
jae
mov
ja
mov
bound
mov
mull
lock
lock
in
add
in
adc
imul
push
lods
dec
xor
cmpsl
mov
pop
add
add
ljmp
cmp
dec
out
or
sub
dec
jle
cltd
lret
dec
mov
cmp
in
pop
repz
xor
mov
dec
push
rcl
movsb
outsl
cmpsl
jp
loopne
mov
mov
cmpsb
dec
enter
sub
cld
inc
mov
pop
inc
add
sbb
mov
cmp
iret
sti
stc
sbb
mov
or
xchg
testl
pop
movzwl
sub
in
sbb
or
int
add
adc
lods
in
scas
aas
lret
ds
lret
repnz
or
shrb
loope
mov
sbb
push
leave
cs
push
cmc
in
cmc
loop
push
fistpll
clc
and
aam
xchg
pop
push
sub
out
xchg
push
push
imul
sub
sahf
sahf
ja
stc
mov
insb
and
pusha
clc
inc
and
add
popa
pop
sub
jo
xor
outsl
jmp
rcrl
in
hlt
outsb
sbb
dec
and
mov
ret
jle
jno
jge
lret
jns
pop
popf
and
push
cmp
push
and
xchg
incb
nop
cmpsl
xchg
in
xor
or
push
aad
jo
dec
pop
mov
add
rorl
iret
repnz
add
add
push
inc
into
adc
jl
lcall
mov
stos
mov
jns
pop
inc
pusha
mov
insl
xor
mov
sbb
jp
xchg
sub
leave
xchg
sbb
jb
rol
add
icebp
jl
repz
ja
ds
je
fst
mov
lock
mov
lcall
loope
sub
push
pop
xchg
mov
jg
into
jl
cmp
popa
lahf
daa
icebp
in
fmuls
mov
fnstcw
fstl
jne
dec
popa
pop
push
push
cmpsb
aaa
lods
dec
mov
mov
jecxz
in
pop
repz
inc
fstpl
xor
test
mov
lods
and
insl
shll
sub
xchg
inc
pop
jmp
repnz
lahf
add
scas
ret
xchg
cmp
lcall
stos
jg
add
movl
es
or
imul
mov
clc
dec
sub
mov
jle
pop
mov
cmc
mov
cmp
xchg
adc
js
imulb
push
gs
icebp
jb
rcrl
mov
dec
mov
inc
add
mov
loope
int3
sbb
adc
leave
pop
jp
pop
mov
enter
cmp
lea
pminub
pop
call
repz
int3
sbb
into
mov
mov
cmp
mov
into
jp
adc
cmp
lcall
dec
cwtl
pop
push
addb
push
lcall
push
mov
cmc
push
adc
fadd
adc
test
data16
adc
loop
or
pop
out
ljmp
jns
aad
xchg
pusha
leave
xor
cmp
add
push
fwait
dec
and
push
ds
daa
outsl
xor
loop
aaa
scas
or
push
jecxz
inc
jg
and
mov
inc
int
inc
clc
or
sub
mov
aaa
mov
ja
mov
cli
cmp
sbb
add
mov
push
ljmp
and
adc
idivb
jnp
push
push
dec
lret
mov
cmp
pop
mov
test
dec
add
call
cmp
mov
movsl
les
insb
mov
testb
dec
mov
pushf
out
fnstcw
insb
jb
aam
xor
add
cmpsb
stos
xchg
cmp
loop
sarl
sbb
mov
sub
adc
xor
push
cmpsb
and
push
mov
out
je
push
dec
push
jge
cmpsb
pop
les
popa
dec
sbb
pop
mov
push
mov
test
or
bound
cmp
push
fbstp
pop
jne
and
mov
inc
jg
sbb
flds
jl
and
pop
and
shll
jge
fwait
out
and
repz
adc
jns
fnsave
icebp
and
in
movsb
mov
cmp
in
cmp
enter
push
mov
inc
push
pushf
lahf
pop
and
push
or
rcrl
sar
and
jg
adc
inc
pop
sub
dec
mov
push
xchg
inc
call
cld
mov
mov
sub
subl
mov
frstor
shrb
imul
inc
ja
cmpsl
pop
mov
out
loopne
pop
sbb
ja
pop
mov
icebp
mov
sbb
sub
sbb
inc
mov
repnz
xchg
jg
pop
mov
mov
je
lods
arpl
faddl
xchg
xchg
arpl
mov
mov
jb
scas
inc
ret
ret
xchg
addr16
lahf
inc
fsubrs
cmp
jne
gs
inc
sbb
push
fildll
mov
in
mov
jns
xchg
push
mov
xor
test
cli
pop
mov
inc
ds
mov
mov
jle
jg
inc
dec
call
mov
enter
or
inc
enter
arpl
push
pop
nop
cwtl
xor
adcb
iret
arpl
inc
jnp
sub
in
and
cld
sbb
out
int3
fstpt
xchg
pop
je
inc
lahf
ret
pop
jae
sub
cltd
push
add
nop
or
shlb
cltd
into
xor
in
les
or
leave
inc
cmp
dec
insl
fcmovnbe
add
mov
sub
push
es
and
lret
dec
cwtl
mov
sbb
jle
cmp
stos
ljmp
ss
add
pop
ds
daa
push
outsb
adc
lock
incl
cmp
sub
jmp
popf
pop
pop
pop
or
mov
push
jns
push
ds
inc
loop
xchg
xlat
and
inc
ret
mov
mov
pusha
sub
pop
and
xchg
inc
aaa
pop
js
rorb
cmp
pop
mov
addr16
divl
pop
ljmp
sub
mov
cmp
fwait
notl
cmp
iret
int3
jmp
push
jne
jae
push
mov
rorl
ret
and
ss
insl
jp
and
repnz
outsl
imul
jecxz
outsl
cltd
ret
sbb
pop
sti
fwait
or
cmp
xor
nop
test
das
push
xor
scas
mov
add
lret
out
mov
mov
imul
xor
pop
xchg
mov
jle
sub
stos
out
mov
pop
dec
cmp
xor
ret
movsb
xlat
aam
in
jmp
test
cmpsl
outsb
inc
scas
add
mov
lock
or
lahf
dec
dec
push
mov
lret
jl
push
jmp
mov
repz
jge
or
pop
movsb
sbb
xor
mov
lcall
or
subl
cmc
pop
stos
inc
scas
sub
push
pop
lret
or
jp
xchg
gs
mov
jmp
inc
push
outsb
xor
lahf
imull
idivb
pop
mov
xchg
gs
outsl
cmp
sbbl
std
test
cmpsl
faddl
pop
push
cmpsb
loopne
xchg
or
ror
mov
popa
sub
or
xor
xchg
das
xchg
add
inc
push
pusha
sbb
mov
imul
xor
sarb
dec
jge
dec
shlb
lret
out
push
push
mov
adc
dec
xor
cmp
sub
in
lock
xor
inc
jae
repz
push
das
cld
test
mov
lcall
insl
sub
xchg
aaa
push
movsl
outsl
in
clc
je
sbb
mov
cs
cltd
lods
cltd
les
fstpl
mov
and
pop
pop
mov
cs
fcomip
pop
xchg
dec
stc
mov
lods
dec
inc
and
int3
sub
sbb
jg
test
push
loope
sub
and
or
dec
cmp
pop
cmpsb
inc
push
and
adc
addr16
pop
dec
push
sub
add
dec
cmp
push
mov
int
inc
clc
sbb
aaa
rclb
cmp
movb
push
or
daa
push
inc
out
cmp
rolb
xchg
dec
in
jb
mov
inc
bound
popf
les
jmp
hlt
insl
shrl
outsl
add
mov
push
inc
fidivs
icebp
push
push
jb
jns
mov
pop
jns
pushf
sbb
jb
filds
popa
cmp
jmp
dec
fldt
ljmp
outsl
sub
cmp
pop
incl
leave
cmp
rorl
fsts
fldt
stos
cmpsl
sub
cmc
hlt
loopne
fcomip
mov
jnp
lret
push
in
int
jne
inc
mov
pop
js
sbb
cs
sub
fbld
jae
idivl
add
mov
outsb
jbe
movsb
div
sarl
sarl
fisubs
pop
jbe
rolb
lea
ljmp
js
aad
test
out
js
mov
cwtl
mov
pop
xor
fwait
adc
fiadds
mov
imul
adcl
das
xor
dec
sbb
ret
pop
mov
sbb
and
mov
pushl
adc
mov
lret
lahf
push
mov
jle
inc
mov
daa
in
sbb
mov
lret
cmp
push
test
addr16
loopne
dec
jle
in
sbb
dec
xor
push
pop
mov
push
popf
test
jecxz
lods
add
sub
push
cmp
in
dec
aaa
push
dec
into
mov
xor
xchg
or
cmp
mov
sub
inc
mov
sti
mov
xchg
scas
setae
push
vaddss
mov
mov
xchg
mov
xchg
mov
lret
mov
je
fsubs
lds
js
mov
aas
in
ret
push
test
lcall
lret
cmp
lcall
ljmp
cmp
fists
and
out
pushf
std
aad
lods
xchg
mov
sbb
lds
lahf
jno
aaa
lahf
decb
test
fs
pop
mov
mov
sbb
in
mov
into
mov
mov
cmp
mov
push
push
mov
adc
jno
iret
pop
dec
mov
jns
fs
cwtl
inc
cltd
fs
push
push
jb
inc
ficoms
inc
cli
sbb
lret
shll
insb
mov
fs
je
push
leave
clc
lock
mov
imul
inc
xchg
daa
ds
jne
jmp
inc
sbb
ret
mov
lea
ds
fnsave
fistps
xor
pop
daa
ficompl
addr16
int
or
dec
mov
mov
fs
int
xchg
xor
stos
push
push
rorb
sub
mov
cmp
pushf
push
mov
sub
inc
dec
add
cs
out
xlat
sbb
addl
out
loopne
daa
insl
xchg
nop
jns
pop
jl
sarb
rorl
imul
or
lahf
sub
sbb
mov
jnp
mulb
fwait
pop
cmp
js
add
inc
sub
lea
jge
mov
push
fisttpll
out
inc
jb
push
ja
outsl
cmp
outsl
push
adc
add
and
enter
gs
push
in
cmp
mov
sbb
push
cmpl
xchg
lret
jle
xlat
xchg
push
insl
insl
leave
mov
mov
out
or
jl
out
mov
mov
and
sbb
in
push
push
les
dec
push
mov
xchg
and
pop
push
jbe
xchg
mov
lods
adc
cmp
adc
sub
inc
sti
insb
inc
aas
iret
mov
jmp
push
cwtl
aam
jg
sbb
loope
push
cmp
dec
cmp
popa
inc
testb
sub
jge
ret
push
pop
cli
adc
mov
add
xchg
add
inc
jmp
repnz
xchg
loop
lcall
cmp
daa
sub
mov
inc
xchg
test
mov
inc
pop
and
pop
lds
push
divb
pop
out
les
jnp
pop
xchg
lea
and
stc
inc
mov
push
scas
stos
inc
push
lahf
mov
insl
inc
jo
jne
pop
int
shr
jl
and
or
nop
mov
mov
adc
add
cltd
mov
hlt
push
fistpll
and
test
or
xor
cltd
pop
loopne
cmpsb
ficoms
lods
add
jns
jecxz
aad
movsl
push
mov
nop
add
mov
insb
push
mov
xchg
mov
push
cli
repnz
sbb
inc
pop
ja
jno
fwait
adc
mov
fistpll
nop
jnp
es
fimull
cmp
enter
adc
in
cmpsb
out
mov
lds
inc
push
in
repnz
jb
mov
push
int3
adc
hlt
sub
push
cli
iret
sbb
xor
daa
mov
xor
test
sub
cli
test
mov
orb
stos
frstor
mov
adc
lret
cmp
pop
mov
add
inc
xor
xchg
cmpb
fildl
push
das
aad
pushf
mull
jae
jns
sub
push
push
jmp
out
pop
xchg
sahf
test
dec
roll
in
push
aam
fxtract
adc
sbb
fdivrl
mov
xchg
jns
pop
into
xchg
xor
sbb
popa
sbb
pop
sti
jp
scas
mov
repz
sti
xor
push
xchg
sbb
mov
and
dec
ret
sub
cmpsl
fimull
sub
out
stos
pop
xor
mov
sub
stos
clc
push
jb
xor
imul
sbbb
cwtl
int
nop
lret
lret
mov
je
add
push
sub
cmp
out
clc
subl
aam
xchg
orl
mov
cwtl
add
jbe
sbb
mov
mov
sbb
adc
add
adc
and
ret
push
push
push
lcall
jnp
mull
fwait
mov
pop
mov
pop
lret
std
int3
mov
adc
rclb
rorl
mov
add
inc
mov
xchg
or
or
movsb
dec
inc
sahf
jno
cs
incb
jnp
subb
mov
int3
into
dec
mov
popa
mov
mov
imul
mov
mov
cmp
push
inc
mov
xor
test
push
pop
mov
mov
cmp
ljmp
lret
and
test
cli
jg
ficomps
adc
pop
adc
movsl
nop
into
bound
pop
pop
xchg
mov
xchg
fiadds
inc
mov
jg
sub
int
mov
mov
mov
int3
shrb
jp
sbb
cmp
pop
vphsubwd
cmp
ret
adc
dec
sub
je
dec
jl
cmpl
call
mov
daa
jno
cmp
and
sbb
xchg
hlt
inc
adcl
xchg
sbb
sub
cs
rorb
pop
jb
shlb
imul
mov
pusha
lcall
and
pop
cmp
dec
outsl
xor
cmovne
mov
test
and
or
mov
xchg
aad
mov
in
stos
les
imul
mov
xor
das
sti
mov
push
adc
push
xchg
mov
daa
and
pop
call
adc
add
sbb
xor
add
sub
mov
divl
cwtl
pop
mov
sbb
and
adc
addr16
add
ds
inc
xlat
mov
sub
and
ljmp
rcl
popf
pop
adc
mov
xchg
fisttpll
out
repnz
sub
push
shll
mov
cmp
notb
sahf
pop
fiaddl
xchg
arpl
jo
test
scas
std
and
subb
popa
pop
shl
sbb
jp
unpckhps
fidivrs
jns
js
movsb
clc
mov
insb
sub
push
fs
push
outsl
push
push
xlat
and
adc
push
sub
push
sbb
stos
mov
xchg
outsb
xor
mov
cmc
lahf
jo
mov
mov
test
lods
fwait
push
mov
idivl
in
mov
ljmp
pusha
imul
jns
and
dec
shl
dec
clc
pop
lea
push
cmp
xor
adc
jg
jae
lods
or
sub
mov
mov
mov
cmp
mov
mov
inc
dec
subb
shll
mov
aam
xchg
aad
pop
sbb
sub
pop
adc
add
add
aad
fld
test
sbb
mov
out
mov
and
gs
inc
push
ja
ds
xor
fistpll
out
xor
mov
aad
mov
mov
fadds
push
pop
test
lods
je
rolb
outsl
lret
sbb
rcr
sbb
lods
movsl
fbld
hlt
mov
ds
iret
add
and
fcmovnbe
shrb
jbe
inc
aas
xchg
enter
aad
and
repnz
inc
push
pop
insl
sbb
xchg
or
adc
xchg
fstps
out
nop
pop
inc
and
test
cmp
loopne
jne
adc
inc
and
sub
int3
and
mov
fsub
aas
sbb
sub
loop
lahf
mov
enter
jmp
sbb
pop
pusha
push
cmp
inc
sub
fs
push
loopne
cmpsl
xchg
xchg
push
repnz
inc
mov
add
jb
xchg
aad
in
std
xchg
fidivl
push
xor
daa
cmp
int
sbb
aas
ret
and
test
xchg
jl
aam
ljmp
das
push
and
push
pop
pop
cli
sbb
cmp
dec
mov
jl
out
sub
adc
inc
xchg
add
mov
jp
mov
xor
pop
sbb
mov
in
pop
adc
enter
mov
fsubs
adc
sbb
repnz
daa
inc
int
mov
adc
xor
repz
xchg
jne
jne
cltd
sti
out
test
mov
sub
iret
in
incl
clc
lret
cmpsl
inc
outsl
mov
stos
lock
mov
into
stos
scas
pop
inc
sbb
dec
daa
and
jge
call
lods
movsb
data16
fnsave
push
repnz
ss
cli
pop
fsts
fisubs
leave
inc
test
dec
lahf
push
mov
cmpsl
mov
daa
mov
mov
hlt
out
mov
scas
xchg
inc
pop
sbb
pop
ljmp
push
push
and
fs
and
and
sub
out
addr16
adc
mov
outsb
push
mov
jmp
push
pop
mov
mov
xchg
jns
addb
push
push
sub
push
xor
mov
xchg
dec
sbb
cs
test
cs
das
jl
rclb
pop
cmp
or
bound
scas
in
stc
pop
xchg
out
sbb
dec
mov
mov
add
cmp
or
adc
into
push
in
push
pop
stos
out
notl
mov
pop
add
je
jo
scas
adc
xor
fisttpll
leave
loopne
pop
ret
movsl
fisubl
mov
xchg
adc
into
sbb
inc
mov
jns
cmc
and
or
test
out
xchg
mov
lods
jecxz
jb
outsl
insb
enter
jnp
add
or
mov
dec
lea
mov
fldcw
push
lcall
clc
push
mov
cmp
shl
shrl
push
pop
cmpsl
cltd
dec
mov
pop
jp
mov
arpl
loope
int
cmc
xorl
mov
test
fwait
sub
mov
mov
outsb
fcomps
xchg
jo
cld
add
movsb
push
cmp
jo
scas
xchg
scas
ror
adc
mov
and
sub
push
cld
and
inc
mov
push
dec
notl
ret
fisttpl
sti
pop
es
add
fsubs
loopne
les
daa
mov
in
pop
mov
mov
rclb
sub
xlat
lret
imul
adc
pushf
fnstsw
stos
fnsave
call
lret
stos
in
jge
movsl
jecxz
ljmp
mov
cmpsb
push
lock
scas
mov
iret
ljmp
test
mov
jne
clc
lcall
cli
bound
and
shl
or
rorb
fadds
repnz
in
fcomps
cmp
push
mov
lcall
insb
jnp
fsubrl
inc
add
sti
sbb
inc
dec
push
lret
sbb
mov
mov
test
jp
and
pop
dec
or
pop
or
mov
or
push
or
dec
in
fidivs
push
and
loope
shrb
dec
xchg
rol
or
sbb
adc
pop
mov
popf
les
outsb
in
add
popf
mov
pop
xchg
stos
test
mov
in
fwait
mov
cmc
fisubrl
lods
stos
pop
mov
loope
scas
cmp
cs
mov
out
mov
push
mov
or
xor
adc
sti
push
or
add
into
pop
push
data16
sub
mov
lret
in
jb
inc
push
push
imul
mov
or
scas
lahf
es
ljmp
das
out
push
fs
push
ret
and
jne
cli
fwait
or
imul
call
cwtl
lea
insb
push
or
es
lea
dec
bswap
insb
je
ret
mov
ja
lock
lret
xlat
sub
cmp
jno
insb
daa
xchg
add
int3
test
push
lock
mov
dec
jmp
test
mov
lcall
push
jo,pt
sub
jae
mov
mov
leave
push
mov
loope
lds
jp
sbb
mov
dec
cmpsb
imulb
movsl
xchg
cmp
jns
lret
or
adc
push
sbb
mov
cltd
popl
sbb
push
fdivrp
xchg
leave
sarb
push
mov
lret
and
jmp
fdivrl
shlb
push
sub
jp
out
das
pop
mov
ja
pop
in
xor
out
ds
stos
push
pcmpgtw
sub
add
into
push
ss
jmp
cmp
mov
lock
test
inc
outsl
cmc
dec
clc
clc
mov
fidivrs
fstps
jmp
ss
inc
push
imul
and
in
xlat
movsb
push
popa
psrlq
outsl
mov
mov
stc
movsl
es
aaa
add
hlt
dec
adc
cmp
stos
mov
pop
out
cmp
js
sbbl
cmp
lahf
jle
pop
sbb
mov
pop
lahf
and
sub
sti
and
dec
mov
inc
inc
push
es
inc
inc
dec
ret
testb
pusha
add
jmp
in
mov
cmp
mov
mov
pop
ret
cwtl
gs
cmp
cmpsb
enter
stos
and
sbb
xchg
aas
leave
cmp
loop
andl
mov
jecxz
xlat
mov
fldenv
outsb
repz
and
mov
mov
sub
fstl
push
add
icebp
add
out
rclb
add
cltd
push
int3
inc
or
cwtl
dec
or
xchg
jo
inc
cmpl
daa
outsb
jge
xchg
xchg
push
xor
out
imul
or
xor
out
loop
repz
or
out
xchg
jl
dec
sti
push
mov
dec
push
and
insl
dec
cli
sub
mov
bound
sbb
jmp
fwait
pop
and
sub
dec
popa
mov
pop
xor
push
mov
lcall
jp
mov
sub
dec
nop
mov
pusha
xlat
insw
mov
es
cmpsb
and
jg
mov
sub
mov
inc
aaa
test
push
adc
mov
addr16
in
cmp
addb
jbe
sbb
adc
cmovbe
mov
xchg
sbb
sbb
sahf
nop
xor
sbb
mov
or
dec
mov
lret
mov
jb
inc
and
ficompl
loope
pop
push
mov
imul
out
or
pop
out
test
stos
mov
jl
jne
adc
add
dec
xchg
clc
cld
enter
inc
pop
xchg
dec
shrl
pop
or
popf
aam
xor
adc
ljmp
or
fisubrl
cmc
jb
pop
dec
sbb
cmpsl
fisubl
outsb
sbb
xchg
lahf
stc
nop
jne
ss
xor
rorb
mov
mov
cmp
aam
add
xchg
jbe
mov
push
arpl
sbb
add
mov
sub
sbb
xchg
mov
jg
in
jle
lahf
sub
mov
lret
call
add
dec
pop
fisttpl
sti
jl
es
cwtl
or
mov
sub
mov
aad
mov
adc
pop
jne
rdpmc
push
inc
leave
movsl
pop
cmp
lret
mov
rolb
in
or
and
xor
add
push
movsb
jnp
xchg
xchg
fsubs
and
jbe
les
cmp
sbb
mov
mov
sbb
xor
in
fs
nop
push
mov
mov
cmp
hlt
jne
cmp
ja
jns
jp,pn
inc
mov
pop
push
insl
xchg
or
or
jnp
sbbb
mov
sub
test
pop
inc
jl
jbe
daa
je
rorl
lahf
in
mov
insb
xchg
mov
addb
ss
jecxz
cmpsl
push
xlat
inc
iret
mov
repnz
and
shll
dec
clc
mov
pop
mov
dec
dec
push
xchg
dec
add
xor
rorl
mov
xor
push
stos
dec
cli
xchg
and
push
push
sbb
adc
ret
dec
xchg
repnz
push
sub
js
cld
sub
sbb
adc
dec
in
jge
sbb
lods
push
lret
ljmp
or
push
jb
movsb
cmc
pop
push
movsb
dec
adc
adc
jmp
jno
push
repz
movsb
adc
sti
imul
ret
add
cmpsb
mov
outsl
inc
movsl
lock
cmp
rclb
mov
xor
cmc
pusha
jle
inc
sbb
sbb
jg
pushl
mov
outsb
stos
loopne
push
dec
lock
pushf
pop
mov
es
pop
icebp
cltd
inc
shll
mov
cmpsb
sub
in
in
fwait
and
add
dec
xchg
int3
sub
out
push
and
fwait
shrb
out
test
pop
lret
and
rolb
sub
pop
jmp
add
xchg
push
inc
pusha
jno
addb
into
cwtl
out
mov
and
mov
pop
jnp
jns
loope
aam
stos
adc
loopne
outsb
cld
fstpl
cmp
dec
in
into
cmpsl
fists
push
leave
dec
push
cmp
dec
imul
mov
sub
out
dec
or
rol
mull
mov
or
fsubs
lea
mov
add
xlat
imul
jp
dec
hlt
push
je
addr16
mov
xchg
mov
lods
nop
xor
pusha
in
adc
xor
push
aam
loopne
cmp
adc
add
cmpl
cmp
inc
sbb
push
or
sti
dec
iret
inc
push
mov
mov
ret
or
xor
fadd
sbb
leave
sub
push
jmp
push
mov
call
jl
cmpsl
pop
out
ret
add
dec
sbb
popl
movsb
jnp
addr16
sbb
or
syscall
sub
mov
mov
pop
push
mov
xor
mov
mov
add
or
rcrb
popa
push
data16
lcall
or
mov
mov
fists
cmp
xchg
test
int
stos
outsl
sbb
test
or
cld
lcall
inc
xor
testb
ficoml
xchg
mov
push
in
repnz
pop
stos
mov
push
dec
jbe
fs
xchg
lret
push
add
rcll
mov
hlt
movl
mov
push
jecxz
int3
fadd
out
pop
sbb
sub
inc
adc
sbb
jmp
jae
xchg
or
mov
daa
or
push
addb
ret
cmpsb
dec
mov
aam
sub
not
mov
push
and
adc
jle
sbbb
lods
cld
inc
jmp
stc
add
mov
ljmp
push
lret
icebp
psubd
sarl
enter
sbb
lds
jne
ds
xor
cmpsb
xchg
xor
nop
out
push
fs
decb
insb
push
mov
into
shlb
insl
xchg
iret
jle
hlt
dec
repz
pop
das
idiv
outsb
xchg
xor
sbb
pop
jmp
push
mov
xchg
mov
fwait
stos
xchg
inc
ret
into
in
enter
ljmp
or
cmp
mov
rcrb
popa
in
cmc
fmuls
scas
hlt
cld
inc
lock
js
ret
jns
xor
das
or
repz
sbb
aas
dec
hlt
repz
fwait
add
mov
mov
sahf
inc
stc
dec
rcll
xchg
gs
or
mov
mull
loope
outsl
test
dec
imul
subb
or
je
inc
jns
mov
cmp
dec
lret
out
dec
pop
aaa
sarb
test
add
sarb
xor
mov
mov
mov
cmp
push
jnp
cmp
sub
jo
je
jmp
jnp
lret
fistps
orl
push
cmc
add
negl
mov
fdivr
mov
das
negl
mov
aas
ja
xlat
sub
push
inc
jns
xor
sub
aaa
faddp
push
adc
call
or
jno
fisttps
insb
repz
movsl
decl
pop
out
arpl
bound
sbb
pop
and
rol
push
jns
sub
out
xchg
adc
cmp
sbb
or
ljmp
jg,pt
out
pop
daa
xchg
lahf
repnz
mov
mov
sub
and
dec
push
ds
mov
add
outsl
test
sub
in
mov
iret
mov
mov
sbb
pop
add
dec
std
stos
cmp
movl
mov
xchg
cmp
mov
aam
push
fcomi
cmp
mov
fcomps
pop
daa
push
ljmp
jp
jbe
ja
fmulp
pop
jns
cmc
jg
dec
rorb
aas
jbe
jns
shl
fsubs
outsl
fwait
sub
js
shl
in
push
addb
sbb
dec
adc
and
inc
pop
out
repnz
es
mov
jns
push
div
inc
xchg
jmp
aad
call
mov
and
lahf
push
mov
loop
add
xchg
test
inc
xor
mov
fs
rcr
mov
lods
mov
mov
xor
fisubrs
pusha
mov
dec
cmp
ss
loop
push
call
xchg
cmp
push
aaa
push
adc
xlat
sahf
jecxz
push
jae
pop
fwait
mov
stos
mov
jns
cld
add
das
mov
pop
lahf
cmc
adc
add
sbbb
xor
push
mov
out
ret
dec
xchg
jo
xor
or
daa
pop
cmp
sub
clc
outsb
enter
ret
lods
xchg
scas
test
pop
cmpsb
popa
mov
ds
jle
mov
pop
lock
sub
sbb
movsl
and
out
iret
cmc
cli
mov
lret
ds
in
les
in
xchg
ja
js
iret
and
dec
push
xor
jo
push
sbb
mov
imul
popa
cmp
jl
insb
push
adc
push
imul
xchg
loop
cld
dec
sbb
mov
popf
cs
ja
movsl
rolb
mov
test
lock
xchg
jmp
sub
fadds
jnp
push
xchg
pop
test
dec
sub
loopne
lcall
push
push
test
movl
dec
push
push
xor
popa
int3
clc
int
sbb
arpl
loopne
mov
sbb
nop
xchg
fnsave
js
cli
mov
push
outsl
jge
mov
jbe
loope
out
cmp
sarl
dec
repnz
fmul
jbe
sarb
stc
call
sbb
leave
and
inc
inc
out
lret
dec
aaa
imul
dec
jae
andl
gs
and
lds
cwtl
lcall
insb
pop
daa
ret
fsubrp
sub
mov
fcmovbe
sarl
jo
rcr
movsb
mov
inc
xchg
xchg
adc
mov
dec
ds
in
mov
popa
cmp
ljmp
testb
test
inc
std
dec
mov
nop
daa
jae
adc
jb
mov
xlat
xchg
repnz
sar
loop
popf
mov
xchg
dec
pop
roll
and
out
orps
mov
arpl
imul
or
out
jmp
mov
sub
cmp
loopne
in
jg
push
sub
js
add
in
adc
inc
xlat
add
imul
and
repnz
sbb
mov
and
xchg
pop
jne
pop
in
negb
jecxz
push
out
sbb
call
aam
inc
sarb
sbb
lret
pop
bound
dec
stos
xor
or
mov
mov
pushf
fdivs
push
lret
xchg
sbb
lods
test
shll
subl
push
push
stos
cmp
into
mov
lds
push
xor
test
push
out
xor
sbb
sbb
inc
push
call
sub
pop
xor
xor
test
add
repz
mov
aaa
add
xor
or
jb
out
push
hlt
inc
add
dec
fs
testl
mov
jo
mov
fs
cli
addr16
ss
cmp
test
cwtl
xor
lods
cmp
pop
push
dec
push
repnz
mov
into
push
lret
push
mov
jg
repz
pop
movsb
jns
hlt
clc
in
push
mov
mov
outsb
xor
xor
mov
push
xchg
mov
stc
les
aad
sub
xor
xchg
xchg
jb
outsl
add
fndisi(8087
out
fistpll
fstpl
jg
popa
ret
add
mov
or
mov
sahf
loop
xchg
mov
sbb
and
mov
clc
mov
jnp
mull
pop
fs
mov
fwait
rep
test
xchg
out
push
out
and
hlt
pushl
inc
in
js
xchg
cmp
inc
cmp
nop
push
dec
call
cld
cmpb
xchg
or
or
xchg
jmp
jp
pop
adc
sti
es
divb
rcrb
jle
std
and
cmp
or
add
test
mov
call
sahf
cmp
cmp
mov
add
fwait
aaa
pushf
scas
mov
lods
mov
dec
cmpsl
dec
jo
xchg
jmp
cmc
ds
mull
mov
es
out
lret
inc
cmc
loopne
fimuls
jb
pop
pusha
push
in
adc
test
xor
push
xor
cmpsb
xchg
stc
jecxz
js
insb
movsb
dec
xor
cltd
movsl
popf
jno
jp
enter
ljmp
lret
popf
mov
enter
cmp
mov
jmp
mov
shlb
cltd
cmpsb
push
mov
push
cmpsl
stos
xchg
or
cmp
and
cmp
cltd
or
mov
mov
xor
cmpsl
popa
push
jno
xchg
xchg
mov
lcall
mov
lea
push
out
sarl
inc
pop
mov
push
ja
roll
jb
lock
fdivrl
test
icebp
inc
data16
into
dec
fistl
stos
imul
jle
push
incb
or
icebp
mov
mov
push
or
ss
dec
lea
add
jmp
cwtl
aam
test
pop
dec
pushl
xchg
call
sbb
scas
paddb
jno
push
xchg
sub
ds
std
mov
ss
xchg
fisttpll
dec
les
push
ret
sbb
or
fldl
mov
imul
dec
ret
cmp
andb
dec
les
cmpsb
notb
test
jecxz
cltd
lret
add
cmp
and
scas
or
add
jecxz
mov
xor
push
scas
mov
push
gs
xchg
mov
btr
mov
ds
and
mov
scas
or
mov
mov
cwtl
sbb
xor
rorl
insb
outsl
movsl
pop
cmpsb
test
xchg
testl
into
mov
push
out
orl
cmp
push
push
mov
pop
xor
push
int3
mov
xchg
push
scas
loopne
jl
inc
jmp
fbstp
aam
ds
das
push
repnz
dec
int
mov
or
cld
fisubl
out
popa
in
add
add
xchg
pop
outsl
int3
clc
test
fldl
rcrl
jbe
std
fstpt
call
scas
or
pop
cmp
jle
out
jbe
lahf
sub
outsl
sbb
and
xchg
cmp
inc
pop
stos
dec
sub
ljmp
fnstcw
jmp
add
subl
movsb
push
and
xor
inc
cmp
cmc
fsubr
jno
sub
xchg
or
inc
xchg
push
test
cli
loope
imul
or
jg
pop
cmpsl
xlat
lea
mov
and
test
jg
push
and
insb
jo
stos
mov
jg
dec
aaa
lret
pop
mov
in
adc
pop
test
js
in
sti
sub
hlt
xor
mov
or
test
jae
outsl
xchg
adcl
jo
popa
rcrl
test
mov
cmp
lret
mov
inc
in
xor
push
dec
cmp
add
mov
movsl
xchg
sub
push
adc
pop
test
inc
sbb
icebp
push
xchg
and
jle
cmc
sbb
dec
jns
or
jnp
mov
jns
mov
xchg
jnp
xchg
nop
xor
and
popa
cltd
mov
adc
cmp
test
and
in
mov
out
xlat
out
sub
or
cmp
fwait
xchg
cmp
push
repnz
orb
mov
jg
inc
test
pop
cltd
sbb
or
lcall
shl
stc
into
movsl
dec
ljmp
cs
pop
sbb
xchg
ret
insb
sahf
fisubrl
fisubs
pushf
daa
jb
inc
inc
inc
mov
inc
int
xchg
pop
adc
into
popf
sbb
cmpsb
pusha
mov
outsl
inc
scas
jae
and
pushf
cld
cmp
leave
fs
mov
cmpsb
scas
xchg
ffree
dec
stos
hlt
cwtl
clc
mov
sub
mov
call
mov
pop
xor
cmp
or
sub
mov
repz
jns
bound
inc
adc
jo
mov
xchg
rorb
loopne
jl
mov
fsubs
mov
push
imul
in
push
idivb
dec
jb
adc
mov
daa
jmp
push
stos
into
xor
loop
sub
stos
hlt
mov
push
fimull
mov
xor
mov
mov
scas
mov
push
push
in
or
add
mov
cmp
mov
int
mov
lea
adc
les
xchg
xchg
or
jnp
push
subb
push
mov
leave
cmp
push
shl
pop
lahf
sbb
push
jb
insl
bndldx
jg
xorl
loopne
call
lcall
insb
inc
and
ret
xlat
mov
cld
xchg
xchg
sub
cld
adc
repnz
popa
adc
cmpsb
mov
jnp
dec
sbb
adc
push
shlb
inc
sbb
mov
xchg
or
sbb
mov
adc
rcll
add
mov
arpl
add
iret
push
ds
xchg
dec
inc
mov
icebp
mov
jns
add
mov
outsl
and
or
jae
gs
push
outsb
or
insl
xorl
push
fidivl
xor
dec
push
js
testl
out
andb
or
daa
or
test
push
aaa
test
inc
mov
cmp
mov
out
loope
loop
jg
cwtl
imul
rcll
push
mov
add
stos
ljmp
sub
xor
lcall
xchg
jecxz
xchg
into
mov
scas
dec
sbb
jo
jo
add
stos
cmp
addr16
xchg
xor
shrb
push
les
outsl
mov
mov
hlt
jg
xchg
xchg
leave
push
jmp
arpl
mov
and
xchg
adc
dec
xchg
movsl
pusha
mov
mov
jo
push
adc
cmpsb
mov
mov
mov
iret
add
call
push
pop
xor
movsl
and
popf
outsb
cmc
dec
dec
adc
pop
push
cltd
out
ljmp
stos
inc
lods
push
repz
test
pushf
hlt
jbe
mov
dec
insl
mov
outsl
icebp
jns
jmp
arpl
int3
add
inc
mov
test
dec
ret
inc
jo
arpl
mov
mov
mov
cmp
sub
ljmp
mov
inc
pop
adc
in
push
add
mov
push
daa
aam
push
je
enter
mov
ss
int3
jle
pop
mov
int
cmpsl
push
std
shrl
gs
call
cltd
xor
xchg
push
push
call
jno
push
cmpb
mov
or
in
js
push
add
scas
jne
or
scas
push
insl
inc
and
jecxz
xor
mov
cmpb
popa
outsb
add
fdiv
cmp
faddl
xor
xchg
cmc
lcall
sarb
push
sub
sub
add
cmp
movsb
test
jecxz
adc
es
imull
movsl
inc
xor
pop
push
inc
mov
out
mov
and
ret
gs
cmp
data16
jmp
rorb
insl
add
push
out
sbb
hlt
jne
cmp
test
jne
aaa
or
mov
inc
lret
pop
jp
jb
lret
ds
pusha
mov
pop
and
icebp
bound
inc
ret
inc
dec
mov
ljmp
movsl
adc
pop
repnz
dec
in
scas
pop
out
jb
movsl
pop
cs
call
cs
push
xchg
xlat
and
lds
sub
daa
jmp
fstpt
pop
inc
sbb
scas
stc
xor
in
int3
mov
fwait
iret
scas
pop
mov
and
xchg
mov
adc
pop
shrl
sbb
test
mov
lods
adc
arpl
ds
cli
int3
jnp
pop
cmpsb
add
sub
popf
sbb
popa
out
dec
cmpsb
jae
inc
mov
mov
push
cmp
mov
dec
loopne
push
push
ja
fists
ret
data16
mov
inc
or
nop
jo
mov
mov
movsb
data16
repnz
mov
inc
or
push
insb
enter
dec
cmp
icebp
cmp
or
icebp
mov
jae
rcl
in
out
pop
lods
lea
sbb
shlb
test
inc
lock
call
testl
pusha
or
notb
push
sub
shrb
mov
repz
fs
jns
mov
cli
jo
cmp
sahf
pop
xor
les
jae
xchg
std
data16
add
rolb
xchg
inc
data16
mov
lret
inc
data16
mov
xchg
nop
fsubl
dec
pushf
enter
sub
inc
fisttpl
inc
fwait
dec
daa
nop
add
mov
cmpsl
js
xor
arpl
xchg
movsb
pop
sbb
fs
push
push
fwait
mov
pop
xchg
int
lock
in
jge
gs
fwait
pusha
std
aas
pop
lahf
cmp
cmp
pushf
sbb
add
pop
inc
cwtl
jp
arpl
xchg
dec
test
xor
ret
push
inc
hlt
fidivrs
lahf
mov
push
pop
mov
fimuls
mov
mov
inc
sti
jae
xor
add
xor
jmp
push
jo
jge
mov
push
outsl
and
xor
xorb
rcrb
mov
scas
inc
fstpt
fimull
and
push
xor
ret
lods
les
dec
mov
outsl
sub
je
fnstsw
jae
jp
insb
push
mov
aad
cld
mov
xchg
enter
mov
mov
test
add
fmull
loopne
sarl
pop
adcl
jo
jb
fiadds
clc
sub
push
dec
jbe
push
mov
jp
mov
cltd
jb
sbb
pop
xchg
pop
mov
sbb
cmp
imul
vmaxpd
je
popa
dec
cmp
pop
imul
mov
or
es
sbb
pusha
sub
lds
and
jg
and
jbe
adc
cs
ljmp
push
jae
cmp
mov
out
js
xchg
dec
and
xchg
mov
lcall
mov
call
jb
cmp
mov
cmp
cld
lret
cmpsl
lods
movsb
mov
add
ss
mulb
packssdw
sbb
mov
enter
cwtl
ljmp
xchg
cli
pop
jge
add
scas
int3
fwait
jbe
or
gs
outsl
sub
sbbb
push
mov
jnp
ds
inc
je
mov
popl
ss
imul
outsb
xor
scas
jmp
das
ljmp
push
test
mov
imul
test
test
sti
jl
stos
andl
sbb
loope
cmp
loope
add
repnz
out
jl
cmp
or
pop
out
in
outsb
pop
or
loop
test
repz
dec
pushf
pop
daa
test
jns
cmp
cmp
mov
mov
arpl
or
pop
sub
inc
out
or
sbb
dec
shlb
cs
jns
dec
mov
add
lods
mov
mov
or
jb
and
cmpsl
mov
loopne
pusha
inc
dec
cmp
dec
cmpsl
ret
rcl
sub
pop
scas
stc
mov
cs
add
add
inc
insl
pop
inc
cli
aaa
xchg
xor
mov
cmp
jge
push
aam
in
les
mov
notl
scas
jae
ds
push
cltd
push
dec
popf
push
sbbb
add
mov
mov
cli
mov
push
shrb
lock
pop
inc
shlb
adc
mov
dec
lods
inc
dec
icebp
sbb
outsb
imul
iret
cmp
mov
jp
pop
hlt
test
fildll
scas
rcrl
mov
icebp
daa
cmp
inc
in
bswap
popa
jmp
or
int3
mov
loop
and
popa
dec
add
inc
and
clc
dec
and
test
dec
je
xchg
imul
sbb
dec
push
stos
xchg
fistps
leave
pop
sti
std
fcom
mov
loop
jg
sub
pop
pop
movsb
movsb
xor
lea
mov
out
jp
pop
sub
jae
repnz
sbb
das
ficoms
and
cmp
leave
pop
xor
int
pop
adc
int3
hlt
inc
in
out
inc
movl
inc
xchg
es
ja
nop
cld
sbb
jae
ss
lret
add
sbb
push
cmc
and
or
pushf
outsl
divl
xchg
addr16
push
sub
insl
sahf
add
loop
xchg
lea
add
notb
fidivrl
adc
orl
jo
subb
add
adc
aam
xchg
push
inc
or
inc
rclb
pushf
pop
or
dec
mov
sub
insb
outsb
loop
std
scas
outsl
adc
xlat
subps
jmp
ja
adc
xchg
pop
push
sbb
xchg
test
add
jge
pop
pop
mov
mov
or
mov
frstor
fs
push
pop
xchg
or
shrb
hlt
push
xor
push
or
divb
lods
lret
scas
adc
add
cmp
lret
fucomi
out
stos
xchg
sbb
jg
stos
mov
or
xor
add
mov
dec
and
mov
jecxz
hlt
ret
adc
insl
jecxz
adc
dec
push
cmpsb
lahf
ljmp
test
aad
pop
pause
push
push
ret
sub
addb
mov
adc
pushf
rolb
inc
popf
jae
jg
jecxz
xor
mov
jbe
jnp
loop
push
mov
jno
jg
shlb
mov
scas
fadds
add
jmp
cltd
scas
xor
mov
push
jbe
pop
mov
test
jmp
pop
sub
push
add
sbb
test
jge
out
push
mov
mov
mov
mov
dec
sbb
jle
jge
orl
pop
and
in
pop
in
mov
pop
mov
lret
cmp
mov
or
nop
jl
mov
xchg
bound
lods
jecxz
leave
sub
sub
pop
adcb
aad
pop
push
mov
andl
and
dec
mov
dec
stos
out
xor
fisubrs
and
fs
call
or
jno
jnp
into
mov
dec
pop
mov
in
push
push
lret
ss
xchg
repz
lcall
aaa
cmp
or
jmp
xchg
mov
sbb
dec
dec
rcl
adc
mov
cltd
cltd
arpl
mov
loopne
or
nop
aad
fs
ds
and
adc
out
in
mov
test
out
sub
mov
std
icebp
dec
lock
cmp
outsl
arpl
sarl
pop
scas
shlb
xor
inc
cltd
xchg
aam
push
movsl
xor
cmp
cmp
outsb
push
inc
and
ss
stc
out
add
loopne
sub
xor
movsb
cmpsl
std
jbe
push
test
out
inc
mov
int
cmp
xor
xchg
nop
icebp
mov
pop
clc
add
call
adc
fcoml
movsl
add
push
gs
xchg
add
or
add
scas
mov
mov
inc
xchg
sub
in
std
inc
jl
fsts
jl
test
mov
out
inc
mul
adc
add
sbb
movsb
inc
int3
gs
fwait
in
mov
out
lahf
in
lret
xchg
call
or
pop
ret
or
stos
jecxz
pop
and
mov
mov
stos
xchg
inc
mov
popf
fcomi
out
pop
mov
xor
clc
mov
sti
push
imul
jo
insl
imul
sub
push
push
out
enter
testb
add
out
push
pusha
in
cmp
and
inc
cmpsl
mov
inc
pop
fnstenv
jno
int3
adc
or
push
or
xchg
and
xor
orl
dec
jo
leave
add
ja
add
dec
shll
orl
in
test
std
add
jnp
nop
xchg
out
das
aaa
paddsb
add
mov
adc
aam
test
sbb
mov
fadds
and
lods
jle
inc
xchg
mov
or
test
sub
sahf
dec
mov
pop
inc
mov
je
gs
aam
stos
loop
ja
mov
push
adc
inc
add
in
imul
jecxz
lods
jnp
fcompl
pushf
shlb
cmp
push
adc
mov
lcall
jp
sub
aam
sbb
loope
pop
sbb
add
lods
push
or
mov
dec
xchg
sub
sbb
sub
aas
sub
stos
repz
sub
push
mov
mov
sub
mov
jmp
sbb
cmp
flds
lods
fscale
pop
cmp
add
orb
inc
lcall
mov
lods
int
jg
aaa
push
xchg
xchg
mov
mov
jno
repnz
repnz
outsl
cmp
insb
lock
mov
push
adc
pushf
and
std
push
xor
mov
push
mov
popf
divb
cltd
xchg
aad
push
into
aad
or
xchg
arpl
idivl
scas
push
push
mov
jp
xchg
xchg
mov
sbb
into
add
cmp
mov
mov
cld
cmpsb
mov
test
inc
cltd
cmpsl
add
xor
icebp
jecxz
movsb
mov
dec
movsl
add
adc
lea
mov
or
das
sub
inc
mov
mov
movsl
mov
mov
sarl
pop
inc
shll
push
fsubrp
mov
pop
loope
dec
shl
fwait
push
dec
lret
mov
outsb
and
inc
add
shlb
sbb
pop
jp
jb
stc
mov
add
dec
jne
push
aam
call
cmp
xor
add
and
cmpsb
or
test
clc
outsl
mov
xchg
jns
repnz
inc
out
add
pop
das
mov
ret
daa
dec
mov
cmp
sti
mov
test
repz
mov
int
in
mov
fucom
daa
lcall
sub
jp
cmp
iret
sti
nop
out
cwtl
adc
xor
leave
cmp
fs
dec
movsl
dec
sti
nop
inc
cmpsb
jnp
pop
jb
movsb
cmp
dec
jbe
add
lods
dec
pop
imul
inc
inc
adc
out
mov
lock
pushl
fwait
in
sbb
lcall
inc
jb
mov
leave
inc
and
outsb
xchg
fs
fnstsw
jmp
stos
in
dec
push
pop
and
add
dec
aad
lods
ds
sbb
sbb
or
outsl
dec
jns
xchg
mov
imul
clc
jecxz
pop
mov
std
dec
popf
jge
lods
outsb
in
call
mov
adc
movsb
std
loop
int
add
push
xchg
repz
cwtl
cmpsb
fiadds
xor
aaa
loopne
mov
fadds
jle
popf
repz
lods
lret
add
cmp
mov
scas
add
push
xor
jne
ds
xor
pop
mov
es
orl
pop
test
rcrl
pop
cld
xor
popa
cmp
jae
adc
int3
push
xchg
sbb
push
incb
add
ret
push
mov
jg
jp
ja
jnp
aaa
iret
pop
test
enter
push
js
mov
pop
cmp
xchg
cmc
hlt
pop
or
test
rcl
sbb
push
mov
cmp
lock
jne
cli
das
addr16
jns
data16
rcll
dec
mov
jp
add
pop
nop
aas
xor
subb
pop
cltd
mov
popa
dec
fisttps
aaa
mov
test
std
enter
ja
fldcw
das
inc
inc
mov
shll
in
aaa
scas
jl
repz
lcall
in
shrl
into
push
dec
push
sbb
shll
aaa
les
fimull
mov
or
fcoml
enter
pusha
mov
imul
jle
add
xor
pop
into
xchg
ss
je
jae
out
mov
dec
test
push
jmp
popa
pop
pop
rcl
ljmp
loope
insb
xor
movl
cmp
mov
jne
sub
in
pop
sbb
sub
mov
cmpsl
xor
xor
jecxz
xor
idiv
out
xor
xchg
or
arpl
sub
sbb
jmp
push
cmp
sub
out
add
push
enter
hlt
mov
sbb
insb
arpl
sub
mov
mov
xchg
pop
mov
fs
sub
mov
std
inc
sbb
or
add
testb
lds
xchg
sbb
fdivrl
jo
adc
lcall
mov
test
jnp
and
mov
sbb
sbb
mov
ljmp
stos
xor
shrb
sbb
push
inc
and
add
pop
cmc
out
pop
arpl
mov
and
fsubrs
les
in
fcmovu
adc
add
cli
and
insb
jl
mov
pushf
jno
repz
adc
out
lods
mov
fwait
inc
mov
cld
mov
sub
repnz
and
sub
push
or
xor
pusha
sbb
mov
leave
fdivrs
adc
dec
inc
jbe
rcll
xchg
addr16
xor
sub
push
mov
rcrl
enter
push
push
push
mov
pusha
mov
dec
fs
loop
add
stos
add
hlt
js
cmpsb
or
sub
repnz
loop
push
push
jmp
insl
mov
jecxz
inc
insb
jmp
and
fs
ljmp
or
lods
ret
cmp
aam
mov
and
test
pop
xlat
sub
cmpsb
xor
push
push
pop
add
hlt
push
sbbl
sub
out
scas
bound
cmc
and
das
pop
push
mov
adc
dec
inc
xorb
lods
int3
arpl
std
mov
jo
iret
pusha
fsubl
lar
mov
test
cmc
fidivrs
fsub
ljmp
pop
jle
mov
ljmp
lret
cmp
lock
xchg
or
sbb
dec
push
push
jbe
mov
sbb
and
lods
insb
and
jne
test
push
fistps
inc
sub
pop
push
mov
pop
shr
push
insl
cld
pop
in
inc
jne
icebp
es
popa
notl
add
aam
cmpsl
sbb
nop
clc
mov
orl
outsl
in
mov
xor
out
fnstenv
pop
xor
mov
jbe
push
sub
scas
jp
mov
stos
sub
dec
lea
mov
sbb
pop
stc
or
aad
adc
out
aaa
sub
push
mov
pop
pop
dec
mov
mov
loopne
sti
in
scas
mov
cld
add
or
clc
xchg
es
or
jge
add
inc
and
adc
jns
fnstenv
jbe
movb
les
dec
inc
lret
xor
imul
repz
stc
cwtl
cmp
shll
pop
andl
jno
mov
fldl
push
lret
push
jmp
ret
ljmp
lret
rcr
adc
lcall
xchg
cwtl
mov
and
or
shrb
lcall
fisubs
xchg
lods
mov
pop
adc
lods
sub
mov
hlt
adcb
add
inc
push
mov
ss
lret
xchg
out
or
push
push
movsb
sub
sar
mov
jne
mov
cmp
inc
mov
push
mov
and
je
daa
mov
in
mov
jp
cwtl
lock
lea
push
cltd
xchg
cld
and
and
jle
or
addr16
pop
jbe
jbe
ret
rolb
jne
fcmovbe
cmc
movl
sub
mov
fstpl
mov
les
pop
pop
mov
add
ljmp
fs
std
dec
add
lret
dec
mov
jl
and
jno
lret
pop
dec
mov
mov
mov
or
add
pop
pop
sahf
jne
enter
shlb
fidivrs
jno
out
jmp
in
gs
mov
sub
addr16
pop
into
mov
dec
imulb
dec
lea
inc
dec
fwait
adc
jns
dec
addb
dec
shrl
inc
and
loop
scas
sub
movl
jne
inc
mov
add
dec
rcrl
outsb
push
punpcklbw
aad
xlat
fcmovnbe
mov
push
movsb
mov
sahf
clc
mull
push
xchg
cmpl
ljmp
sub
and
nop
and
xchg
clc
sbb
repz
push
adc
scas
insl
cmp
mov
jb
push
out
inc
pop
xchg
push
sarl
sarl
lret
pop
sub
or
pushf
push
in
or
ror
cmc
enter
or
and
bound
pop
test
fdivs
inc
push
loop
cld
daa
pop
and
into
xchg
pop
hlt
adc
add
dec
adc
or
iret
mov
cmp
xchg
dec
xor
shl
leave
cmpsl
cltd
xchg
testl
fimull
mov
dec
fucom
mov
leave
push
cmp
cmp
int3
sub
push
jl
stos
outsb
iret
lahf
inc
outsb
arpl
mov
add
lods
inc
pushf
xor
mov
test
xchg
xlat
icebp
shrl
mov
lods
inc
jecxz
das
fwait
dec
push
ret
mov
cmovae
dec
cmpsb
pushf
adc
or
push
dec
loope
ret
loope
divb
xchg
je
and
sub
jl
xchg
fistl
xor
fisubrs
jge
lock
jnp
sub
adc
lahf
cmp
mov
mov
mov
cmp
xor
xchg
sbb
fiaddl
insb
bound
dec
out
push
xor
mov
mov
test
lea
hlt
xor
jbe
jmp
jmp
push
xchg
movsb
sbb
xor
fdivrs
cld
xchg
pop
imul
jg
pop
dec
pop
sub
fnsave
jns
xchg
jne
scas
outsl
iret
cmp
mov
mov
cmp
mov
add
arpl
push
cs
push
push
fistl
dec
pop
mov
push
push
ljmp
addr16
pop
xor
inc
jnp
aad
or
sti
jno,pn
cmpsl
fidivrl
mov
sbbb
inc
aam
call
xor
dec
in
push
sbb
insb
repnz
inc
xchg
add
inc
data16
ds
mov
jmp
les
rol
aad
call
xor
aas
fmull
or
sbb
adc
aaa
dec
cmc
bound
add
insb
or
cltd
xor
and
les
mov
or
bound
sahf
pop
ljmp
inc
mov
insl
pop
xor
in
aad
push
jnp
pop
mov
jmp
add
xor
pop
xchg
inc
lea
rcrb
icebp
cs
movsb
dec
cli
icebp
sahf
jmp
dec
jp
scas
aad
or
xor
loop
fsubrl
lret
in
arpl
ret
push
mov
mov
or
jecxz
adc
or
aas
gs
xacquire
cwtl
fistpl
xlat
mov
xchg
sbb
add
negb
xor
pop
arpl
out
and
jns
movq
mov
cmpsl
fnsave
mov
inc
fdivl
lods
mov
fists
push
aam
mov
daa
jno
test
repnz
movsl
jle
lahf
fisubl
loope
cmp
fmuls
mov
xchg
gs
pusha
mov
add
movsl
mov
adc
pop
je
jne
push
mov
or
dec
arpl
cmp
test
iret
std
test
xchg
cmp
xor
add
int
adc
sbb
out
scas
mov
adc
adc
aas
loopne
pop
xor
fadd
mov
dec
sbb
scas
pop
in
add
js
enter
int
mov
stos
loop
cld
in
stos
jp
inc
push
sbbb
jmp
lods
int3
adc
movsl
dec
fcoms
add
jns
pop
add
xchg
fiaddl
dec
pop
dec
insl
dec
sar
out
rclb
xor
pusha
xor
push
test
adc
add
int3
ja
std
aaa
cwtl
pushl
int3
sti
cli
xchg
in
out
xor
call
jge
movsb
mov
faddp
cwtl
jmp
jo
lds
inc
fidivrs
push
notl
mov
xchg
inc
outsl
push
cmpsl
outsl
sbb
lods
mov
in
shr
movsl
mov
jbe
jne
mov
mov
repnz
cmpsb
mov
inc
add
test
mov
icebp
call
jle
int3
dec
fildll
dec
rcr
das
fistpl
xchg
add
jae
xchg
rorb
out
or
aad
es
lods
mov
sub
cld
pop
xlat
lods
push
jbe
insl
jmp
and
cmp
lahf
out
lods
push
lds
lcall
call
sti
clc
jno
dec
pop
sbb
xor
jg
push
push
test
or
fs
dec
xorb
inc
cwtl
mov
rcrb
popl
out
adc
lock
push
adc
loop
cmp
cld
mov
or
data16
jmp
xor
in
pop
and
cmp
dec
std
sub
mov
pop
std
ret
pop
jns
ljmp
pop
or
push
test
aas
aas
mov
ficompl
fwait
arpl
cmp
sbb
mov
pop
movsl
cmp
pop
sub
mov
repz
or
push
mov
sub
rclb
add
mov
sti
pop
or
das
xlat
test
cwtl
je
mov
ss
mov
orb
rcr
sub
mov
bound
push
adc
pop
jbe
jno
add
xchg
repz
out
jno
and
cmp
cmp
fadd
xlat
jo
cmp
inc
test
xchg
ljmp
cmpsl
push
jno
mov
cmp
pushf
or
sub
add
sub
sbb
push
arpl
sarl
jb
test
lret
pcmpgtw
or
push
mov
or
lahf
dec
pop
mov
test
mov
in
cmpsb
pop
xchg
mov
and
pop
lahf
aam
cmp
cmp
pop
addr16
sbb
bound
mov
jb
push
xchg
hlt
imul
and
and
loope
imul
lods
cmp
mov
test
mov
cmp
into
sub
pop
xorl
mov
xor
dec
nop
loopne
push
mov
pop
in
int3
popa
aad
jae
mov
push
in
mov
xchg
mov
inc
test
mov
leave
jb
pop
xchg
push
and
pop
ljmp
xchg
pop
mov
mov
out
in
add
or
enter
cmp
stos
mov
mov
cmovne
sbb
pop
sbb
lcall
cmc
pop
scas
and
pop
jnp
aaa
xchg
pop
xchg
popf
imul
jecxz
xor
pop
adc
sbb
push
and
jg
cmp
push
shr
fs
ficoml
sbb
daa
jecxz
test
push
cld
sub
and
in
mov
xor
inc
test
stos
adc
inc
mov
or
rorb
or
and
dec
add
pusha
push
add
cmp
fisubs
lret
cltd
pushf
mov
loope
fsubrs
xor
sub
xchg
jns
push
cmpsb
cmpsb
add
sbb
aam
imul
inc
lock
mov
cmc
or
mov
and
outsl
pop
call
jne
mov
lcall
xchg
and
xlat
or
rorb
pushf
jne
pop
lock
xor
int3
lcall
push
repnz
decb
fwait
into
mov
lret
lds
ret
pop
and
pop
repnz
aaa
push
repnz
sub
cs
inc
cld
dec
shlb
push
cmp
mov
je
inc
jb
lods
jae
jo
loopne
xor
pop
ss
ja
mov
push
sbb
xor
and
xchg
jne
pop
sbb
or
or
out
sub
and
add
into
dec
fdivrl
pop
mov
dec
scas
adc
xor
stc
xchg
mov
sbb
fadd
mov
mov
adc
stos
movsb
outsl
roll
nop
das
lods
adc
sbb
xchg
xchg
ss
ja
test
nop
insl
pop
stos
call
out
imul
pushf
xchg
and
push
in
sbb
ss
push
in
cs
test
test
mov
adc
xor
dec
fistps
push
xchg
mov
mov
ds
cmpsl
insb
inc
push
push
jmp
ret
ja
loope
sub
jle
xchg
pop
out
or
sbb
shrl
lods
jno
movsb
and
pop
xor
movsl
fwait
sub
push
jmp
les
fisubl
icebp
sub
popa
cmpsb
lods
aaa
mov
inc
xchg
aas
pusha
popa
iret
fcoml
xchg
into
sub
xchg
int
stc
in
jmp
dec
stos
fsubl
push
push
and
mov
xlat
fildl
xchg
cmp
test
pop
loop
test
ja
test
pop
jae
cmpsb
loopne
fcom
mov
aaa
dec
sbb
push
pop
insl
mov
dec
imul
cmpsb
add
jne
fldenv
cmc
rcrl
pop
and
push
fcoml
loop
push
dec
xorl
dec
test
hlt
addr16
adc
or
fwait
pusha
mov
int3
mov
xlat
fcompl
sbb
push
or
push
ds
jb
jne
leave
mov
cmp
js
bound
xchg
es
or
stos
out
or
add
dec
mov
push
insl
cli
daa
mov
cwtl
mov
cmp
and
test
inc
push
gs
pop
sarb
out
pop
repnz
out
mov
stos
inc
and
int
test
mov
ljmp
pop
push
aas
inc
popf
xor
push
sbb
xor
mov
cmp
sbb
rol
scas
push
ss
sahf
add
addl
lret
push
clc
daa
aas
add
pusha
jns
push
mov
fwait
push
les
fildll
xor
jmp
dec
jg
rclb
pop
jb
or
int3
out
mov
push
je
xor
adc
outsl
jb
inc
xor
jae
scas
jle
adc
cmp
xchg
and
les
adc
sub
dec
fistpll
sbb
mov
and
orb
in
mov
pusha
mov
popf
push
cmp
hlt
in
shlb
fstps
cmp
push
loope
add
xor
jne
cmp
dec
sbb
movsb
jecxz
movsl
lcall
cmp
jp
push
stos
fwait
xchg
in
icebp
cld
shrb
mov
mov
pushf
cmc
mov
sbb
les
sbb
push
cmp
cmp
cld
pop
sarb
pop
adc
xor
pusha
pop
sub
mov
cmp
shrl
fstpt
ja
addr16
into
lods
jp
sbb
nop
xchg
and
dec
push
push
ss
shrl
xchg
add
adc
fs
push
jbe
fwait
xor
and
jnp
add
loop
dec
mov
dec
insl
imul
cmc
adc
js
pop
inc
std
gs
sbb
push
test
adc
fisubs
leave
stos
sbb
add
mov
popa
fwait
sub
mov
cmp
xlat
or
aad
ret
cmpsl
mov
clc
lock
sbb
aam
sbb
add
xchg
mov
xchg
lock
xchg
mov
aas
xchg
xchg
clc
add
je
movsl
xchg
fidivrl
jbe
cmp
jmp
sub
loop
outsb
cmp
jmp
lds
fsts
mov
faddl
sahf
scas
leave
out
lret
mov
xchg
or
mov
out
sub
push
jmp
loopne
dec
in
pop
lahf
out
pusha
jae
pushf
sbb
out
fcmovbe
xor
sub
fbstp
pop
mov
sbb
das
insb
pop
in
ret
push
jle
lcall
cs
sub
insl
clc
jne
inc
int3
in
jle
movsl
xchg
push
mov
jg
xchg
je
xor
pop
loope
inc
inc
mov
in
xchg
pop
pop
or
jmp
pop
jae
lea
loope
fdivrs
sahf
adc
sbb
les
std
cwtl
in
xor
jmp
xor
bound
jns
xchg
mov
push
aam
sbb
jo
push
jle
jg
jge
xor
push
xchg
outsl
imul
add
mov
xchg
mov
mov
pop
xchg
fs
push
lret
jo
mov
iret
cmp
pop
adc
jne
xor
cmp
rclb
leave
daa
push
scas
mov
xlat
and
add
cld
cld
rcr
repnz
scas
mov
fidivrl
out
loope
xchg
adc
xor
lds
lret
aaa
pop
mov
xchg
xor
push
int
js
ss
movsl
adc
lea
adc
mov
lock
dec
iret
lret
jecxz
or
repz
jg
cld
jns
test
cmp
out
mov
mov
into
sbb
pop
mov
frstor
ljmp
xor
aad
push
mov
cmp
cli
mov
adc
popf
sahf
pop
dec
xchg
push
xchg
test
cwtl
out
fucomip
imul
mov
mov
jecxz
jmp
and
push
mov
imul
rcrb
xor
jae
in
mov
cmp
push
xchg
popf
leave
enter
rcrl
sahf
aam
fldcw
inc
getsec
dec
popf
std
adc
jo
das
dec
in
xchg
jbe
std
pop
hlt
add
mov
clc
jne
inc
leave
jg
or
das
cmpsb
jmp
add
pop
push
mov
mov
and
adc
mov
in
push
std
fistps
addb
cltd
iret
mov
mov
ret
adc
addr16
mov
gs
jnp
add
mov
mov
outsl
jo
in
mov
xchg
or
dec
pop
aas
or
andb
cmpsb
push
sbb
push
mov
bound
cmpsl
fistpl
mov
adc
in
stos
pop
andb
push
imul
std
sub
cmp
loope
mov
pushl
push
mov
int
imul
in
xchg
icebp
lret
iret
adc
sub
lds
jmp
shlb
scas
cmpb
addl
shl
inc
aaa
repz
std
fwait
dec
je
or
or
loopne
push
and
fwait
inc
jb
pop
jecxz
pop
dec
add
mov
jmp
test
fs
xchg
clc
adc
mov
push
jnp
jns
dec
lret
rcr
add
negb
and
and
xchg
inc
fsts
into
push
push
inc
sbb
jne
fldl
sub
pop
fnstsw
pop
insl
sbb
fabs
and
mov
fsubl
and
lods
fs
out
push
es
sbb
xchg
mov
fwait
sbb
mov
and
jle
xchg
insl
icebp
or
fiaddl
and
push
xchg
and
in
nop
repz
cmpsb
mov
cmp
fildl
jle
repz
xorb
mov
adc
push
mov
sbb
bound
push
out
fisttpl
mov
mov
jmp
push
jbe
mov
enter
faddl
shrl
aaa
sub
dec
icebp
sarb
clc
jge
call
sbbl
mov
lea
cmp
jb
sbb
subl
imul
stc
loope
outsl
dec
xchg
mov
mov
lret
or
jle
sub
loope
in
decb
call
pop
sub
cmp
cmc
popf
testl
mov
xchg
cli
jl
stc
mov
xor
inc
decb
std
scas
cmp
sahf
mov
in
scas
xchg
xchg
and
push
test
movsl
pop
push
mov
fdivr
fldt
xorb
add
or
push
dec
jmp
xchg
test
call
pop
sbb
aas
mov
inc
test
push
lret
rolb
test
jp
ss
std
aam
pop
pop
or
mov
or
aas
pop
cmpl
push
aad
cld
aas
sahf
leave
sub
mov
dec
rolb
popa
dec
cmp
cltd
bound
movsb
fdivs
mov
jl
cld
sahf
out
stc
mov
mov
arpl
lods
adc
cvttps2pi
xor
hlt
sahf
imul
and
mov
negl
inc
hlt
sahf
int
inc
adc
stos
pushf
fidivrl
or
iret
testl
mov
mov
add
cmc
pop
mov
push
cmpsb
daa
or
in
jo
xor
mov
mov
iret
pop
dec
jbe
xchg
pusha
in
or
insl
or
cmp
subl
sub
mov
mov
xor
mov
and
repnz
mov
call
imul
in
xchg
mov
cmpsb
insl
popl
push
xor
push
inc
cmpsl
cmp
cmp
cmc
sahf
mov
add
mov
mov
mov
nop
jne
xchg
add
xlat
insb
arpl
es
xor
jge
push
ss
and
xor
mov
mov
std
lcall
or
pop
add
fstpl
or
mov
lds
daa
inc
add
clc
jo
ret
hlt
inc
push
push
cmpsl
mov
jo
inc
inc
mov
cmpsl
insb
push
movsl
out
out
lock
in
frstor
pop
pop
lods
push
es
decb
cmp
add
cmpsl
and
loopne
or
jmp
std
push
insb
jle
enter
lods
sbb
inc
or
mov
lds
in
sub
lret
pop
push
mov
and
cwtl
in
mov
stc
mov
out
insl
cmp
stos
mov
cld
rol
add
movsb
cmovae
ds
jle
ja
movsl
aad
pop
es
std
outsl
das
mov
push
fisubl
jb
or
xchg
inc
push
jp
lret
xchg
sub
inc
and
jg
stos
xchg
cli
xor
xchg
lods
stos
mov
adc
xlat
xchg
loopne
test
mov
fadds
jo
mov
mov
rolb
js
jge
out
shll
jnp
add
outsb
dec
pop
pop
mov
rcrl
aas
and
popf
addb
xchg
insl
inc
mov
outsb
in
inc
mov
out
sbb
adc
cmp
sbb
jne
jge
lahf
add
xor
adc
push
pop
imul
jnp
jge
lock
fisttpl
out
sub
les
push
or
mov
lret
mov
sbb
pop
mov
push
mov
or
aam
int3
xchg
jnp
pop
cmp
gs
popf
jns
fistpl
push
test
loop
adc
js
pop
test
test
mov
jl
scas
mov
jb
daa
cli
lods
pop
cmpsl
mov
and
hlt
scas
movsb
jno
push
cmp
sub
xchg
out
dec
push
daa
mov
push
sub
push
int
xchg
mov
push
gs
fyl2x
pop
pop
inc
sub
mov
dec
test
push
loop
fucomip
or
jnp
roll
adc
or
pop
xor
fld
pop
rcr
sbbl
test
call
cmp
insb
test
mov
add
pushf
cmp
lret
inc
pop
mov
pushf
fldl2e
dec
cmp
dec
cli
cld
jle
mov
in
cmp
sbb
test
or
xor
mov
dec
sahf
popa
in
rol
sbb
push
mov
jle
les
clc
dec
cmc
test
adc
inc
arpl
es
cld
push
pop
out
jns
imul
cmp
add
pop
ljmp
sbb
push
out
and
sub
cmp
or
cmp
sbb
mov
jecxz
push
bound
lods
enter
pop
mov
pop
jb
pop
repnz
mov
test
or
xor
arpl
pop
mov
jg
test
lretw
cmp
mov
mov
std
gs
cmp
sbb
movsl
cs
inc
pop
shrb
notl
in
mov
dec
jmp
rcl
out
pushf
add
test
sub
loope
dec
inc
dec
pushf
cmpsl
sti
xchg
loopne
push
add
fbld
test
xchg
xchg
test
stos
mov
sub
cmc
stc
or
in
outsl
xchg
jae
aam
jle
std
test
fsubrs
push
or
cmpsb
lds
test
ja
out
es
inc
inc
jne
popa
insl
inc
scas
mov
imul
jecxz
addr16
ds
jne
arpl
or
sub
sarl
and
out
mov
fwait
and
cmp
and
fstps
addr16
hlt
int
pop
xchg
mov
rcll
inc
cli
loope
outsb
ret
mov
nop
pop
jmp
das
and
cmpsb
roll
jbe
pop
adc
cltd
mov
fwait
mov
imul
jne
jmp
stos
sbb
ret
mov
pushf
xchg
pop
leave
std
or
dec
sahf
push
js
mov
fildll
clc
mov
int
mov
and
testb
jnp
jnp
push
shl
cmp
aas
pop
fwait
mov
or
adc
scas
scas
mov
lods
dec
push
cmpsb
fistps
jnp
addr16
and
and
pop
xlat
jo
inc
sub
into
sub
subb
push
call
ds
or
mov
mov
jg
push
mov
mov
mov
mov
mov
jo
leave
or
push
filds
ss
and
loop
in
cli
rorb
les
movsl
xchg
push
notb
lock
out
add
xor
shll
sahf
pop
popf
rorb
int3
adc
data16
and
cmpsl
xor
out
adc
inc
mov
faddl
jns
fdivrl
push
in
cmp
add
pop
sub
into
push
mov
add
sub
add
dec
int3
sub
ret
sbb
xchg
inc
test
mov
jnp
jno
sub
rolb
dec
mov
adc
inc
adc
sarl
lock
and
les
adc
filds
mov
outsl
xchg
pop
fstps
and
sub
xchg
outsl
add
lods
sub
or
mov
mov
js
xchg
ret
and
jmp
or
sahf
xchg
mov
adc
push
mov
sbb
shrl
cmpl
jl
je
iret
sub
dec
in
sub
js
scas
push
aam
xchg
lret
push
adc
xor
in
lret
push
add
rclb
sub
test
test
mov
sbb
xchg
fidivrs
jb
pop
mov
cmp
dec
arpl
dec
pop
movsl
ficompl
cltd
sbb
push
mov
fisubrs
mov
xchg
out
mov
std
add
call
push
inc
cmpsb
out
jmp
sub
sub
andb
cmp
dec
xchg
mov
inc
xor
insb
movl
xchg
xor
cmpsl
in
ss
mov
mov
stos
mov
in
mov
cmp
inc
test
push
jns
das
loope
es
gs
xor
das
jmp
pop
xchg
add
aas
stc
pop
bnd
mov
xor
pop
add
fidivrl
ds
cmpsl
xor
scas
orb
sbb
lret
in
push
push
bound
or
add
shr
jno
mov
mov
loop
and
push
sbb
jecxz
int3
mov
mov
dec
shl
hlt
or
jnp
xor
cmpsb
xchg
pop
fidivrl
cmp
push
cmp
cwtl
mov
push
pusha
sbb
or
pop
adc
mov
mov
mov
dec
aam
or
jbe
xchg
xor
push
xchg
cmp
jo
xchg
mov
mov
add
xor
xor
mov
out
sbb
enter
out
or
push
push
or
scas
ret
ljmp
std
das
add
loop
xor
nop
xlat
pop
and
push
lods
fidivl
xor
aas
sub
neg
in
mov
or
mov
mov
fnstsw
cld
mov
pop
jo
pop
mov
adc
inc
mov
sar
xchg
push
repz
jbe
mov
cld
pop
fwait
shr
lods
xor
clc
movq
mov
mov
pop
xor
push
sbb
jge
shl
out
sbb
xchg
jbe
ret
jns
inc
mov
and
repz
ret
dec
dec
popf
pop
xor
xchg
shrb
ss
aaa
and
cmpl
mov
sub
jecxz
cmp
icebp
xchg
jge
lods
loop
push
mov
hlt
les
sbb
add
outsl
sub
pushf
xor
and
in
pop
add
inc
and
loop
sub
pusha
adc
lods
or
xor
sub
add
adc
dec
int
cwtl
xor
add
or
push
pusha
or
leave
std
repz
cmp
int
adc
sub
and
and
sub
sti
mov
jno
shufps
fstl
fldenv
pop
out
jge
call
in
btc
popa
daa
lahf
mov
adc
jbe
sub
mov
xchg
or
mov
push
cmpsl
and
xor
pop
lods
outsl
pop
jae
divb
pop
xor
mov
test
inc
aas
push
and
inc
and
xchg
rcrl
pushf
pop
addr16
mov
test
testb
and
inc
sub
dec
test
mov
inc
sbb
mov
and
sbbb
cmc
cmpl
xchg
xor
jne
push
pusha
idivb
icebp
fistpl
aas
stc
shrb
outsb
scas
movl
std
mul
scas
mov
insb
xor
fadd
dec
popf
gs
add
into
es
repnz
jns
sub
push
addb
sarb
outsl
adc
and
dec
test
push
fmull
push
lret
push
popf
xchg
ljmp
jb
clc
dec
jb
pop
mov
shll
cmp
pop
stc
push
les
jl
sub
stc
movsb
mov
jns
add
jae
add
out
sbb
jo
mov
inc
rolb
xor
inc
pop
jno
sbb
and
aas
hlt
stos
lahf
in
into
inc
xchg
push
bound
jns
ror
sub
test
call
or
cmp
sahf
or
adc
movsl
cmp
xor
adc
js
mov
jnp
addr16
pop
xor
hlt
xchg
add
jae
mov
ret
into
xchg
push
es
push
xchg
ljmp
loop
xchg
lods
adc
mov
lock
mov
movsl
ljmp
aad
xchg
mov
imul
mov
test
add
fwait
jb
push
xchg
xor
stos
cmp
mov
addr16
stos
inc
mov
pop
dec
dec
pop
fistpll
mov
push
in
dec
mov
imul
inc
dec
push
mov
arpl
mov
cmpsb
test
sub
subl
fstps
pop
cmpsb
mov
sbb
out
jo
cmp
add
sbb
mov
fsts
xchg
dec
pop
dec
push
jl
xor
jmp
pop
lods
lcall
push
aaa
lods
test
add
mov
and
sub
lds
mov
movsb
sub
mov
popf
data16
sahf
pusha
dec
mov
fwait
xchg
bound
js
std
inc
insb
push
or
jmp
sub
xlat
test
dec
movsl
imul
stos
jecxz
jmp
dec
sbb
sbb
call
cmp
pop
sub
push
clc
aaa
jno
sbb
negb
mov
sub
bound
inc
les
mov
iret
in
inc
in
dec
test
push
sub
mov
int3
jns
test
push
lea
or
sub
movsb
insb
xchg
js
cmp
arpl
scas
sbb
xchg
fcmovne
test
icebp
sti
aas
mov
out
dec
add
loop
add
jg
mov
bound
gs
fsubrl
cmp
out
push
cmp
pop
mov
dec
in
push
addb
mov
dec
fldenv
ds
lahf
bound
cmc
inc
int
loop
and
jne
inc
jb
mov
fcmovb
enter
xchg
leave
sub
mov
jne
jne
push
cmp
cmp
mov
mov
bound
jecxz
sub
testl
push
iret
mov
xchg
adc
mov
lret
in
adc
pop
lock
mov
cs
cli
mov
lds
lods
jo
sahf
adc
inc
sbb
pop
mov
mov
or
xchg
sub
cmp
inc
imul
scas
cmpsl
xor
fdivl
and
out
add
fldlg2
mov
add
frstor
xor
sbb
inc
push
mov
jmp
repz
cmp
lods
lret
push
pop
cs
mov
aam
mov
sbb
aam
jp
and
push
lret
mov
mov
xor
xor
sbb
repz
mov
fwait
pop
lahf
ss
stos
aaa
cmp
inc
mov
repz
push
dec
add
out
jle
cli
cmp
xchg
jl
icebp
pop
mov
je
daa
scas
das
arpl
sbb
mov
add
mov
les
lods
subb
or
sub
cmp
shll
fcoms
outsb
jp
ja
and
lds
imul
orl
and
push
into
adc
sahf
out
jno
outsl
cs
cmp
push
push
hlt
or
jbe
cmp
cmp
js
mov
cs
adc
sbb
iret
pop
jno
btc
ficoml
out
test
hlt
incl
shlb
stc
add
sbb
dec
xchg
aas
and
adc
push
cmpsb
ret
cmp
jl
lret
stos
sbb
sar
fcmovnu
add
nop
sub
push
push
jbe
jbe
insb
cmp
cmpsl
out
jne
cli
bound
jo
lahf
rolb
jns
jp
movsl
or
gs
js
roll
ja
or
jmp
pop
popf
cwtl
es
lods
push
in
lds
mov
mov
insl
pop
adc
mov
jl
and
and
inc
push
pop
movsl
sub
movsb
sbb
pop
es
repnz
mov
out
jmp
mov
call
mov
loop
jge
dec
arpl
mov
dec
ljmp
and
scas
and
jb
enter
cmp
rcrb
ljmp
fdivs
dec
sub
ret
jle
inc
daa
les
pop
lock
mov
adc
les
std
pop
shll
nop
into
pop
leave
inc
inc
out
xchg
lock
push
inc
sbbl
pop
cltd
jno
add
add
cs
lret
jmp
lret
ss
scas
push
addr16
aaa
sub
sbb
leave
stc
repz
sbb
ret
inc
xor
ret
add
xchg
in
cld
pop
iret
cmp
pop
out
push
xchg
xor
repz
in
and
jo
sub
jns
movsl
cmp
repz
lea
nop
push
xchg
xor
and
loope
cwtl
pop
in
jnp
rolb
mov
lds
mov
dec
xor
push
and
jge
jmp
js
jns
movsl
adc
insl
adc
mov
ss
stos
icebp
andb
lcall
xchg
pop
in
fnsave
pop
ret
cmp
jecxz
xchg
mov
aam
jmp
inc
xor
cs
aam
aas
adc
add
cmp
cmc
xchg
xchg
frstor
jp
push
cld
lock
push
jmp
sbb
pusha
pmaxub
movsb
push
and
repnz
fcoms
fsubs
or
hlt
sub
out
in
mov
arpl
pop
into
ja
or
iret
add
idivb
test
jo
mov
mov
sbb
mov
stc
pop
std
lahf
ja
add
mov
mov
dec
inc
xchg
mov
xor
leave
mov
leave
addb
and
sub
mov
adc
loop
push
jae
xchg
inc
mov
pop
xlat
pushf
jge
lds
jg
roll
test
inc
cli
rol
cmpsb
ret
out
ljmp
cmp
xchg
sbb
scas
popa
ja
arpl
je
push
jb
and
jno
xor
lret
inc
add
scas
lcall
sbb
xchg
dec
mov
rcr
pop
out
test
in
stos
hlt
push
dec
jno
les
cmp
add
sbb
cli
pop
ds
insl
cltd
or
test
pusha
push
xor
push
jmp
jno
xchg
or
loopne
ljmp
jno
stos
cmp
icebp
sbb
inc
mov
into
icebp
out
inc
mov
dec
negb
lcall
in
decl
mov
or
sub
mov
fisttps
mov
and
pop
and
repnz
pop
jns
mov
xorb
and
js
cwtl
js
push
into
jbe
push
cwtl
aad
addr16
jb
loope
mov
pop
orb
rcrb
mov
clc
or
fldt
das
fsubrl
insb
js
out
movl
idivb
fldpi
lock
mov
testb
cwtl
stos
and
stc
leave
inc
cltd
adc
cli
out
mov
fs
faddl
movsl
jecxz
mov
ja
lods
sub
into
incb
mov
mov
shrl
and
das
or
mov
jge
push
shrb
jle
and
andb
lcall
test
xchg
pop
les
negl
mov
test
cmovbe
push
mov
aad
mov
pop
and
or
or
xchg
mov
xchg
add
push
pop
mov
sbb
pop
jb
jno
push
enter
je
lods
das
daa
add
pop
jnp
ja
popf
push
stc
arpl
jp
ret
ds
shll
fcomps
lock
into
bound
repnz
lock
out
sbbl
shll
sbb
cmpsl
cld
xor
xlat
push
push
arpl
push
cltd
mov
jbe
clc
and
mov
fmull
gs
and
xchg
mov
or
ret
mov
repnz
inc
xor
movsl
xor
outsb
lods
and
bound
out
mov
cmp
inc
add
sub
hlt
and
nop
push
aam
pop
std
cmp
push
cmp
add
test
jmp
push
lahf
dec
and
dec
jne
pusha
lcall
lret
mov
int3
imul
mov
push
push
ja
adc
in
jp
mov
mov
shrb
dec
rcrb
jb
fstpl
jmp
add
adc
js
or
pop
xor
cmp
in
lret
rcrl
xlat
mov
add
dec
enter
scas
gs
cmp
arpl
fucom
les
enter
or
mov
add
push
pushf
mov
ss
sbb
inc
sub
mov
mov
jmp
je
loopne
lock
or
xor
sub
cmpsb
pop
gs
test
sahf
lods
outsl
lahf
sub
hlt
scas
sub
les
cmp
pop
cmp
push
rorb
push
cmp
pop
pop
aad
xor
stos
mov
fmull
popa
int3
xchg
bound
mov
je
xchg
jne
dec
leave
stos
loopne
push
mov
xchg
cmp
aam
sar
clc
outsb
sub
dec
ljmp
pop
fxch
imul
or
test
lret
testb
add
mov
xor
jo
arpl
xor
xchg
push
lret
adc
int3
adc
cli
out
out
push
loopne
shll
addr16
and
pop
sbb
add
testl
jbe
cmp
cmc
es
inc
icebp
jg
sbb
sub
jbe
add
mov
data16
dec
pop
jns
or
subl
repz
inc
or
out
push
out
sub
fstpt
std
mov
sbbl
add
pop
xchg
sub
sub
mov
les
out
mov
xor
mov
lea
jae
push
addr16
dec
mov
dec
sbb
inc
popa
aaa
sub
iret
xchg
repz
sahf
daa
addr16
xor
push
jp
mov
or
fwait
mov
dec
into
fsubrl
mov
mov
xchg
les
mov
mov
add
xchg
xchg
scas
lods
mov
or
scas
mov
push
lret
and
arpl
cmp
ljmp
rorl
and
cmp
sbb
test
fwait
mov
outsl
dec
mov
jle
pop
jnp
xchg
adc
pop
int3
xor
fwait
ret
xchg
mov
arpl
or
adc
mov
jnp
add
bound
push
loope
ret
nop
lods
inc
aam
add
inc
dec
or
mov
mov
jno
and
sbb
sub
push
icebp
jmp
mov
inc
gs
clc
lea
push
jmp
pop
jl
push
xchg
dec
imul
gs
mov
mov
jae
pusha
jecxz
push
add
inc
fstpt
rorb
sbb
test
push
lods
enter
mov
ss
cmp
push
lahf
adc
stc
xchg
sbb
push
fcmovnbe
push
jle
cmp
out
arpl
mov
std
cs
out
or
pushf
popf
xor
mov
pop
pop
rolb
imul
push
xchg
repnz
daa
xor
lds
inc
decb
ret
cmp
icebp
insl
pop
jb
fiaddl
inc
push
and
test
cmpsl
cltd
jg
insb
adc
out
aam
daa
pop
data16
push
sub
mov
add
or
ss
mov
or
xchg
ret
mov
push
insl
cmp
fcmovnb
mov
push
cmp
xchg
cld
mov
cmpsb
dec
ss
call
inc
fcmovb
add
scas
sbb
dec
das
sub
add
hlt
jl
mov
cs
addl
jp
sub
mov
mov
add
fsubrp
jae
add
mov
out
adcl
dec
and
xchg
adc
jo
pop
jmp
ret
cmp
mov
dec
scas
stos
dec
push
or
xor
and
push
stos
icebp
or
mov
bound
imul
xchg
pop
add
xchg
out
outsb
cwtl
sub
into
mov
pop
andb
shr
cmp
cmpsl
mov
ds
or
sarl
jno
pusha
loop
in
add
repz
xor
and
cmp
ret
xor
out
mov
mov
mov
scas
or
sbb
arpl
into
sub
sub
cmp
repz
rclb
mov
leave
sub
mov
lahf
jmp
mov
call
mov
nop
cmp
push
repz
movsl
imul
outsb
xlat
sbb
inc
pop
sub
fstl
adc
and
repnz
inc
lods
aas
es
jno
sub
xor
add
stc
pop
push
xchg
or
push
int3
out
jo
ss
sahf
xlat
mov
bnd
cmp
or
pop
mov
data16
pop
mov
shll
dec
pusha
imul
push
leave
cmpsl
mov
adc
inc
lea
mov
mov
gs
jl
mov
lret
jno
fbld
mov
jnp
fimuls
mov
outsb
leave
into
outsb
int3
or
mov
sbb
lods
pop
jae
icebp
das
lds
in
xchg
sarl
push
lahf
sub
inc
push
sbb
jnp
scas
xor
mov
push
push
sbb
push
loopne
popa
adc
sub
mov
dec
add
sub
xchg
outsb
or
sbb
mov
lods
mov
pop
xchg
data16
dec
test
cld
test
adc
or
mov
mov
mov
jae
pop
addb
shrb
outsb
scas
clc
adc
and
or
hlt
cli
repnz
faddl
or
pop
shrl
popf
add
cmpsl
push
and
inc
mov
testl
jbe,pt
mov
scas
xor
int
into
sub
pop
jg
xchg
cwtl
adc
call
outsl
outsb
out
mov
daa
dec
pop
arpl
and
outsb
add
out
pop
je
rol
xchg
push
sbb
ficomps
iret
lcall
jl
push
cmp
pop
in
mov
sbb
push
jle,pt
push
sarb
insl
push
push
xchg
push
pop
cwtl
addl
lcall
mov
orl
push
adc
ret
lods
int
sbb
stc
xchg
mov
xor
ret
popa
sub
adc
add
xlat
fdivp
mov
pop
jb
inc
lret
or
in
dec
mov
jnp
and
add
ss
xchg
cmp
loopne
mov
mov
dec
outsl
mov
sub
mov
ja
sbb
out
jg
sub
push
pop
lcall
sbb
fadd
movsb
out
xor
fs
ds
sbb
je
fwait
pop
sub
jnp
lcall
pop
jecxz
pop
mov
push
push
daa
test
adc
fs
jle
inc
ds
loopne
mov
jnp
and
jnp
repnz
outsl
sar
testb
lahf
add
mov
loopne
pop
or
hlt
mov
addr16
dec
adc
mov
inc
popf
aaa
add
dec
loope
dec
mov
mov
fucomip
adc
inc
xorl
shlb
xchg
sbb
fmuls
mov
test
mov
cmp
push
mov
add
test
mov
sbb
aaa
hlt
and
in
pop
ljmp
jmp
dec
fsubl
in
sbb
mov
and
xor
jno
xchg
test
cld
push
cltd
inc
movsl
neg
jne
xchg
aad
iret
andl
cmp
sahf
dec
push
jecxz
sub
mov
xchg
insb
add
out
orl
jo
stos
cltd
sub
inc
sbb
or
mov
sub
cmpsb
cs
xchg
or
push
mov
jp
jmp
lock
stos
fnstsw
clc
and
cmp
decl
repz
xchg
sbb
je
and
dec
out
cmpsb
jne
jne
xchg
in
and
inc
loopne
ss
in
jecxz
loopne
push
scas
les
insl
repnz
add
mov
pushf
aad
subb
sub
enter
sbb
cmpb
jmp
punpcklbw
dec
or
cmpsl
in
dec
movsl
scas
cmp
fnstcw
jp
fcmovbe
jae
enter
inc
test
add
pop
stc
arpl
push
or
enter
int3
loop
daa
add
rolb
and
fildll
sbb
in
test
stc
stos
xor
hlt
push
in
adc
out
fbld
xchg
aas
scas
dec
mov
ja
cmp
cmp
cmp
into
cmp
push
pop
dec
adc
data16
inc
xchg
adc
mov
pushf
jae
xchg
xlat
mov
jmp
mov
sarl
jl
les
pop
cmp
jae
flds
cmp
xchg
jmp
jl
sbb
mov
and
add
push
adc
mov
test
push
push
pop
pusha
mul
pop
sahf
mov
dec
sub
sbb
sbb
push
fistpll
aas
loopne
ss
push
adc
outsl
mov
mov
add
imul
push
js
sub
mov
sti
xchg
mov
sar
imul
imul
rcrb
pusha
jae
sti
mov
pushf
pop
and
mov
push
mov
addb
sub
inc
fiaddl
mov
lods
sub
and
pop
inc
add
pop
mov
and
push
and
jecxz
in
xadd
loopne
adcb
out
sub
mov
mov
mov
mov
or
push
jae
mov
je
mov
xor
cld
or
pop
dec
lea
shlb
jecxz
pop
mov
les
mov
pop
sbb
dec
movsb
xchg
xor
mov
adc
in
xor
in
mov
ja
stos
mov
mov
sbb
jno
icebp
push
add
pop
or
add
fcompl
add
sahf
or
mov
test
aam
cmp
adc
rclb
sbb
pop
call
nop
aas
sbb
pop
push
shll
stos
ja
andb
push
dec
add
push
pop
adc
mov
adc
ret
in
or
dec
mov
push
ljmp
and
mov
add
or
pop
pop
xchg
mov
ss
or
fldcw
daa
inc
pop
or
push
dec
les
cmpb
jbe
fwait
xor
rcll
jge
push
add
mov
pop
xor
dec
or
pop
ja
and
shl
xor
in
fwait
outsb
jns
movsb
test
adc
dec
sarl
fimull
xchg
mov
mov
clc
iret
mov
jmp
dec
push
mov
mov
mov
stc
pushf
cwtl
cmpsb
xchg
out
fnstcw
mov
inc
nop
out
in
lret
inc
jne
push
out
push
sti
push
dec
lods
dec
sub
stc
lahf
cmp
iret
mov
pop
andl
dec
add
lahf
pop
outsl
or
jg
pop
ret
sub
ret
in
outsl
jecxz
mov
add
mov
adc
jbe
add
icebp
sbb
pop
lcall
sbbl
lock
loop
mov
and
ljmp
scas
jo
sub
mov
imul
pusha
movsl
or
add
sbb
or
test
movsl
ror
fisttpll
es
sbb
sbb
ret
in
aaa
adc
fs
test
push
lahf
and
push
aad
fists
test
pop
insb
les
int3
inc
xchg
adc
xor
mov
jbe
sub
sti
sbb
jg
xchg
inc
subl
repnz
lret
out
imul
or
int
js
adc
pop
jb
xchg
int3
les
or
jb
jmp
pop
jae
sarl
adc
cmp
into
jno
shll
adc
adc
sbb
enter
jmp
sarb
push
jo
insb
dec
mov
adc
loope
xchg
movsb
xchg
sbbb
jnp
jnp
outsb
call
insl
or
inc
xor
jnp
hlt
js
lods
sarb
movsb
leave
repnz
jbe
lret
data16
xorl
fidivs
aad
shrl
pop
jp
imul
into
loopne
mov
rcr
add
in
sbb
loopne
jbe
into
sbb
sub
mov
and
imul
icebp
jb
cli
aas
adc
das
and
adc
mov
mov
ret
idivb
in
sti
stos
pushf
xchg
and
fldt
mov
pop
inc
loopne
add
ret
fisttps
loop
mov
std
stc
xlat
mov
xor
cmpsb
std
je
fistps
fdivl
nop
jl
sbb
sub
fnstsw
scas
pop
js
iret
iret
fwait
psubb
cmc
mov
int
xchg
lods
cmp
lret
lret
daa
cli
or
outsl
mov
lret
in
sbb
push
dec
adc
sbb
loopne
adc
bound
sbb
adc
xchg
pop
ja
inc
out
pop
lods
imul
jmp
data16
or
push
sbb
imul
pop
add
or
jns
xor
xor
add
shrl
add
out
push
mov
popa
imul
mov
push
mull
aas
das
mov
test
ret
ficomps
cmc
inc
sbb
pop
stos
xor
add
pop
add
addl
stos
cmpsb
pop
rcl
out
xor
mov
or
pop
jns
push
jl
push
mov
aas
cwtl
daa
jo
fisttpll
pop
in
cmc
adcl
mov
lahf
in
dec
mov
sbb
in
cltd
into
je
mov
mov
adc
push
or
stos
mov
sub
mov
movsb
mov
mov
cmc
xchg
inc
shrb
jno
mull
adcl
sbbl
xchg
push
js
mulb
mov
cmp
mov
inc
jo
daa
lcall
mov
enter
push
inc
lea
xchg
incb
lret
outsb
inc
shrl
loop
jbe
movsb
sbb
scas
imul
mov
sub
mov
adcl
pop
sub
push
jns
push
movsb
ret
push
sub
pop
push
cmp
mov
aas
lods
sub
lcall
ret
inc
and
pop
jbe
cld
xchg
sub
mov
push
sbbl
jl
mov
adc
addl
je
push
inc
sbb
cmp
in
push
adc
mov
or
push
push
ljmp
mov
adc
sti
enter
aas
cwtl
mov
loope
lock
mov
orps
out
mov
push
sub
js
push
das
aaa
lods
je
mov
push
nop
mov
dec
and
call
bound
insl
xor
cmp
popl
cmc
bnd
imul
jmp
movl
mov
mov
or
dec
push
lret
dec
pop
lret
je
enter
gs
sbb
clc
sahf
sub
cmpsl
das
mov
add
mov
push
mov
mov
mov
push
loop
add
sbb
or
aam
mov
das
mov
aaa
movsb
outsl
xchg
in
and
lds
call
pop
daa
ljmp
mov
retw
add
mov
idiv
dec
mov
inc
sub
mov
daa
inc
fdivs
inc
sarl
nop
enter
cmp
sbb
cmp
loop
mov
xor
mov
jecxz
enter
xchg
sub
xchg
jne
sub
adc
insl
pop
or
ljmp
stos
inc
sub
and
pop
test
imulb
adc
jl,pn
in
xchg
shll
xorl
fdivs
lods
lock
cmpsl
outsb
jb
mov
adc
fidivl
pop
push
movl
mov
fs
lret
push
imul
mov
and
call
or
cmpb
cld
add
jns
mov
stc
sarb
mov
dec
das
leave
aas
sbb
decb
xlat
mov
cmp
mov
cltd
cmp
add
in
xchg
data16
push
inc
push
inc
cmc
jb
sahf
fcomp
or
xchg
jle
lds
pop
ja
mov
and
add
movsb
dec
and
out
outsl
shll
jg
add
addr16
push
mov
dec
outsl
cmp
ds
push
cwtl
pop
add
dec
inc
ss
push
into
in
gs
dec
outsb
nop
xchg
or
xchg
pushf
and
sahf
mov
push
stc
arpl
mov
mov
sub
movsl
pop
cmp
cmp
xchg
mov
mov
xchg
lods
push
mov
fdivr
mov
jp
lods
dec
sub
icebp
cmp
dec
inc
sti
xchg
rolb
lds
fs
xchg
cmpsb
jb
fcmovbe
pop
and
fnclex
mov
dec
mov
add
pop
push
cmc
xchg
ret
mov
dec
add
jmp
pop
orb
push
aaa
imul
aaa
jl
pop
notb
xchg
push
bound
loop
imul
fscale
lds
fcoml
fs
mov
xchg
fwait
dec
rcr
add
mov
xchg
mov
jle
jg
loopne
leave
jle
push
mov
roll
bound
xor
jecxz
or
test
subb
jo
push
jg
cmp
pop
in
call
mov
mov
cmp
xor
push
mov
pop
fstps
sub
idivb
rcll
xchg
pop
dec
lods
ficompl
dec
out
mov
mov
sbb
repz
out
out
pop
cmpsb
fldcw
push
dec
and
xor
push
inc
movsl
dec
fs
aas
and
fisubl
or
cmp
fstps
xor
cmp
insl
sahf
dec
stos
push
jae
and
dec
jl
pop
pop
push
test
mov
imul
lods
stos
sbb
or
movsb
sbb
pop
movsl
cmpsl
in
cmp
loopne
inc
sbb
addr16
xchg
add
push
sbb
movsb
cli
xor
mov
adc
stos
aas
ret
je
lret
sub
mov
add
stos
stos
xchg
imul
or
arpl
in
dec
test
sbb
mov
imul
fmull
in
add
mov
mov
inc
mov
je
addr16
mov
sub
xchg
xor
inc
jge
jno
lods
idiv
cmpsb
pop
xchg
bound
mov
xor
rorl
sahf
js
shlb
fldt
lcall
push
sub
test
xor
scas
movsb
add
les
jge
jl
pop
sbb
je
inc
inc
stos
inc
jge
sub
rcr
adc
mov
ret
mov
and
mov
pusha
push
pop
lret
dec
lods
jecxz
fistl
ja
xor
aaa
das
inc
dec
movb
nop
lea
std
xor
jp
xlat
call
mov
push
loope
xor
mov
pop
xor
and
mov
jg
lret
insb
movsb
inc
inc
mov
test
xchg
test
fcmovb
add
test
out
mov
and
popf
or
push
adc
and
addr16
xchg
dec
mov
sub
dec
movsl
adc
inc
dec
lret
cmpsb
cwtl
in
pop
gs
inc
jmp
aam
push
and
or
cmp
nop
fsubr
dec
cli
or
pushf
lods
mov
mov
ss
out
mov
stos
xor
xchg
mov
sahf
lock
xchg
xchg
dec
xchg
inc
cmp
aad
mov
inc
cmpsl
mov
or
out
pusha
jmp
rcrl
adc
daa
lcall
jo
dec
sub
cmpsb
mov
and
jecxz
fdivs
inc
ja
dec
sub
fstps
icebp
jae
iret
rcll
sub
add
xor
int3
lock
xchg
jae
lods
jecxz
cmpsl
jmp
jmp
cmp
or
lods
push
sbb
pop
in
mov
mov
push
mov
mov
pop
bound
je
jns
in
jl
je
mov
add
dec
popa
popa
loop
mov
xor
or
imul
aam
mov
xor
xchg
into
imul
hlt
out
cmpsl
es
cwtl
cltd
imulb
jp
mov
and
cmpsl
mov
lods
dec
cld
add
mov
cmpl
outsb
mov
mov
pop
hlt
inc
ljmp
pop
test
outsb
stos
nop
or
lcall
mov
pop
in
out
jl
test
pop
push
imul
ror
pop
pushf
rclb
js
lcall
mov
xchg
jl
jo
jb
jge
arpl
imul
test
leave
dec
sbb
out
jle
fdivs
pop
data16
push
xor
dec
les
lods
jb
popf
push
xchg
dec
cmp
xchg
imul
mov
rcll
sub
add
jns
lds
mov
cmc
int3
cmpsb
mov
jb
lock
incb
les
lea
out
pop
xor
xchg
pop
int
loopne
iret
fwait
cmp
repz
aaa
inc
and
pop
shl
cmp
xchg
sti
int
adc
pop
jno
xchg
jle
fidivs
jb
add
and
sbbl
outsb
and
lcall
notb
cmp
lds
add
mov
lcall
cltd
pop
in
scas
lds
sti
std
mov
inc
sahf
les
gs
aad
movsb
push
lds
stos
sub
test
pushf
test
pop
or
and
fs
fmul
out
leave
fidivrl
arpl
mov
and
dec
adc
cmp
pxor
xchg
ficoms
les
pushf
mov
inc
lds
cld
add
adc
imul
dec
mov
mov
stc
mov
jg
test
lock
adc
das
outsb
lock
popf
mov
movsb
aam
fld
outsl
lds
add
int3
cwtl
and
rol
push
inc
pop
and
sub
inc
mov
ljmp
inc
je
dec
fwait
cmpb
lret
sbb
dec
sbb
dec
mov
jae
fdivr
fstpt
imul
lret
mov
push
mov
mov
aas
cmp
xchg
adc
in
imul
subl
pop
sbb
push
nop
cmc
daa
xchg
mov
cwtl
dec
mov
sbb
aam
mov
fdivrl
cmp
sbb
loope
mov
lods
xor
aaa
or
mov
loop
pop
sbb
xlat
in
fwait
test
jb
shr
sub
adc
inc
stc
add
out
data16
cmpsl
loop
xchg
cmp
cwtl
in
dec
mov
loope
shll
es
mov
push
call
cld
cmp
xor
jbe
push
push
into
push
inc
mov
enter
cmp
mov
fsub
daa
mov
cld
in
lea
aas
fnstsw
fs
popa
sub
ffreep
or
jp
negb
pop
lods
push
add
test
mov
cmp
push
out
jno
push
cli
and
ds
test
push
dec
cmp
popa
fsubs
gs
mov
fcmovu
inc
push
xor
lret
insl
loope
add
mov
clc
and
cmp
pop
inc
mov
mov
icebp
push
gs
addr16
xor
hlt
movsb
pushl
fsubs
adc
fldenv
stc
dec
xor
xchg
inc
xchg
jnp
jle
repz
fs
pop
dec
pop
pop
jmp
in
push
inc
sbb
add
jle
sbb
dec
push
cmpl
sarb
push
sahf
test
dec
push
testb
add
enter
dec
mov
scas
ret
iret
sub
clc
push
xor
jmp
sub
scas
pusha
add
jnp
es
pushf
lock
add
mov
dec
pop
mov
aas
loopne
xchg
pushf
add
imul
or
xor
fs
das
popf
into
jo
outsb
cmp
pop
orl
lcall
shll
push
lods
mov
cld
fstpl
pusha
test
clc
inc
jb
outsl
and
xchg
out
or
outsb
aad
in
lret
cmp
outsl
or
lock
shrb
fs
jge
sahf
fstp
jb
cmpsb
mov
fs
add
movsl
iret
push
test
fsubrs
xlat
push
ss
fucomi
add
and
mul
inc
repz
scas
test
dec
dec
lods
inc
ja
push
mov
and
stos
mov
sbb
cmp
movsl
pop
fmull
jp
adc
scas
bound
cmovl
rolb
outsl
mov
out
or
stos
aas
out
clc
jmp
sub
orl
ret
xor
leave
sti
dec
ret
mov
pop
jge
dec
scas
fldl
mov
testb
push
icebp
inc
fisubl
aad
shll
dec
ss
cli
into
add
jmp
test
mov
add
fnstenv
add
xor
je
nop
or
ja
scas
add
mov
adc
mov
loop
push
int
rorl
lods
xchg
fildll
mov
mov
out
insl
jl
fisttpl
cmp
ss
adc
mov
shrd
pusha
es
je
jmp
mov
xor
xchg
or
aas
hlt
pop
call
sub
aaa
mov
je
mov
xor
cld
dec
adc
outsl
and
in
scas
jecxz
push
or
jne
in
dec
pop
and
scas
fcomip
addr16
jo
popa
testb
push
test
sbb
testb
mov
jp
out
sub
bound
mov
fmuls
and
aas
lret
jp
insl
sahf
push
mov
mov
mov
xchg
rolb
aad
lcall
movsl
jge
push
cmp
xor
mov
pushl
jae
xchg
cs
fxch
jb
mov
cmp
mov
inc
lcall
pop
push
lods
mov
push
in
stos
mov
sbb
xor
aaa
icebp
notb
xchg
out
push
std
add
sub
repnz
shrb
jmp
stc
xchg
into
push
sbb
inc
sub
sbb
and
push
mov
outsl
fmul
out
cmpsl
pop
pusha
and
inc
leave
xor
cmp
mov
es
leave
inc
mov
fwait
adc
jle
lock
jl
push
aad
dec
lahf
and
cmc
jns
dec
fstps
xor
push
mov
lods
popa
adc
in
pop
pop
mov
jge
push
out
dec
nop
iret
sar
dec
test
adc
arpl
mov
int
sbb
xchg
and
scas
in
imul
xor
ret
lret
lret
scas
add
push
inc
sub
jns
imul
movsl
fldenv
popa
jae
ss
adc
add
xor
shll
xchg
mov
dec
enter
bound
sub
enter
inc
dec
jae
push
and
sub
enter
and
inc
pop
mov
bound
pop
scas
xchg
sbb
inc
add
xlat
lea
mov
sbb
dec
and
pop
mov
fbstp
decb
int
dec
jle
fadd
in
cmp
fcmovnu
xchg
addl
jmp
lret
cmpsl
cmp
mov
xor
jecxz
jnp
leave
cmp
imul
xor
xchg
lods
insl
fsubp
sub
adc
push
pop
enter
xor
into
ja
and
sbb
out
stos
imul
sub
in
adc
xchg
leave
dec
dec
xor
xor
lcall
mov
popa
jbe
mov
outsl
sbb
sbb
cltd
cwtl
lock
mov
arpl
jg
loope
das
fcom
push
pop
xchg
shrl
out
adc
pop
rcll
xchg
xor
mov
outsb
fisubrl
rcrb
repz
stc
xchg
in
dec
cmp
xchg
pushf
mov
xor
mov
ret
pop
xchg
cld
inc
pushf
or
xchg
fs
jge
sbb
mov
push
dec
nop
push
mov
imul
in
shlb
fildl
mov
pusha
push
into
mov
icebp
or
aam
mov
cmp
mov
fcoms
sub
stc
lock
sub
loope
lret
inc
jmp
and
mov
jmp
fwait
xchg
inc
push
adc
cmpsb
leave
mov
scas
in
or
pushf
lcall
in
mov
xchg
movsb
inc
arpl
dec
xchg
sbb
and
fdiv
in
gs
or
cmpl
mov
loope
sahf
cltd
mov
fwait
pusha
sub
lret
loopne
dec
xor
jge
pop
pop
mov
clc
cmp
mov
push
outsb
mov
in
jo
mov
push
cltd
shrl
xchg
sbb
into
inc
xor
mov
jb
rcl
call
stos
sub
or
cmp
clc
mov
dec
int
or
cmp
cmp
pop
dec
mov
stos
push
outsb
repnz
lcall
sub
sarl
int
xchg
cmpsb
in
xchg
fwait
or
sbb
mov
mov
ja
in
dec
popa
pop
add
lods
mov
cmp
or
push
jle
scas
stos
or
int3
shrb
mov
gs
add
jo
xor
inc
add
lahf
dec
cmovle
call
jns
mov
jge
mov
add
jmp
fistl
lods
mov
xchg
mov
lods
mov
test
adc
xor
fdivrs
data16
daa
pushf
leave
and
or
adc
jge
pop
dec
lock
xchg
enter
stos
sub
lods
sti
jg
mov
popf
mov
ficompl
jecxz
mov
mov
mov
cld
sarb
and
jo
push
xchg
dec
mov
stos
xlat
xchg
xchg
flds
pop
int
and
push
mov
push
es
icebp
jae
or
gs
pop
insl
mov
mov
cmp
or
mov
hlt
inc
and
js
outsb
dec
xor
inc
fmull
mov
xorl
rclb
jb
icebp
into
scas
jle
dec
loopne
jecxz
icebp
pop
mov
jne
xor
shrb
mov
scas
data16
adc
push
dec
fimull
xor
scas
aaa
into
mov
aaa
dec
sbb
sub
test
mov
cmc
gs
dec
mov
imul
mov
dec
std
dec
stos
cmp
push
int
bound
mov
fdivrs
andl
sbb
push
insb
dec
add
mov
movsl
insl
fisubs
ss
pop
dec
push
xchg
pushf
insl
cmpsl
sub
pop
pop
push
or
add
ss
mov
cli
xorb
iret
pushf
mov
push
inc
mov
mov
sub
push
jg
inc
ret
nop
aad
iret
sbb
push
jns
jl
or
aad
rclb
jp
cmp
jmp
add
rcll
sbb
mov
test
rorl
dec
jae
add
lcall
mov
imul
add
test
push
loope
test
jae
sbb
pop
loop
adc
mov
pop
lods
and
add
adc
in
ficomps
pop
ret
cmpsl
loope
xchg
dec
stos
scas
inc
xchg
push
push
mov
fiadds
jne
gs
lcall
jge
lahf
or
fiaddl
add
fisubl
shrl
mov
ljmp
int3
lahf
and
push
or
mov
xchg
jmp
sahf
lock
push
fwait
movntq
push
outsb
jmp
push
mov
mov
sahf
mov
in
loope
imul
inc
sbb
xchg
mov
pop
lret
push
and
mov
clc
pop
imul
enter
push
adc
lds
out
stos
das
and
add
mov
int3
xchg
or
push
loop
jl
ljmp
or
mov
pop
idiv
loopne
pop
pop
inc
dec
push
push
mov
push
loopne
je
and
ret
imul
mov
jecxz
es
push
enter
xchg
xor
daa
ds
inc
xor
leave
test
pop
scas
lods
inc
cmp
adc
cmc
xor
adc
fs
and
lea
xchg
adc
popa
jbe
jnp
stos
add
fiadds
call
call
jecxz
cmpxchg
pop
mov
push
cmp
sub
add
test
ja
xchg
xchg
and
ret
in
push
movups
add
cmp
push
jg
cmpsb
ss
xchg
cmpsl
xor
movups
mov
cmp
and
imul
out
mull
push
imul
cld
jbe
and
les
repnz
xchg
call
imul
out
adc
adc
int3
loop
xchg
pop
and
xor
push
fsubrl
dec
leave
insb
mov
jmp
push
jns
or
dec
in
testb
cmp
ficompl
bound
or
mov
sahf
or
xchg
and
loop
vpaddsw
or
sub
adc
push
cmc
lock
mov
les
dec
add
mov
jae
test
divb
and
das
fildl
cmp
push
lret
mov
xlat
push
push
in
cs
and
sbb
mov
or
cmp
and
xor
fstpt
or
std
test
sbbl
push
ljmp
adc
sbb
jle
dec
cmp
popf
icebp
xor
mov
mov
lret
ret
bound
adc
add
shlb
leave
mov
inc
je
loop
xchg
out
adcl
stos
imul
stos
pop
std
adc
xor
and
push
pop
mov
fisubl
push
cmp
sub
mov
in
mov
popa
sub
aaa
jl
outsl
cmp
mov
lret
mov
jg
call
xor
outsb
ret
fisttps
mov
adc
lods
iret
sbb
push
pop
dec
dec
insl
gs
fidivl
add
xor
movsl
mov
ja
lods
in
cmc
stos
aad
lods
jns
and
in
outsl
rcl
mov
pop
jg
adc
or
lret
mov
cs
bound
dec
add
mov
mov
in
wbinvd
out
nop
mov
lcall
mov
in
dec
lock
adc
push
aam
clc
loop
or
mov
movsb
testl
ret
or
push
cmp
push
sahf
mov
in
push
rolb
or
jg
loop
sub
dec
or
ret
mov
andb
mov
jl
fstpt
xchg
ss
adc
lea
enter
fcompl
sbb
adc
jb
dec
aas
pop
fs
punpckldq
pop
lds
push
adc
mov
mov
fiaddl
cmpb
cmp
adc
lods
add
dec
outsl
cmp
jmp
mov
data16
sub
sub
stos
push
sbb
adc
or
jbe
dec
les
iret
pop
inc
cwtl
lret
rorb
cmp
flds
rolb
dec
sub
fsubs
sbb
repnz
call
sbb
pop
xlat
in
stos
fcoms
fidivrs
into
mov
jo
pop
mov
sbb
in
jg
test
or
dec
fdivrl
les
mov
fdecstp
xchg
xor
iret
mov
insb
xlat
call
cmp
sub
shrb
xor
push
lret
sub
pop
xor
loop
out
ret
je
imul
ror
dec
cltd
cmpsb
mov
mov
enter
mov
out
iret
scas
inc
sub
pop
andb
fldl
jns
rorl
xlat
fistpll
popf
scas
das
push
rolb
popf
lahf
jne
xor
in
xchg
add
adc
push
sub
xchg
in
fldenv
xor
ja
je
cmpsl
lods
jg
mov
les
mov
sbb
mov
mov
out
data16
xor
xor
sar
push
je
pop
out
outsb
pop
mov
push
xchg
jb
div
pop
arpl
adcl
add
aas
push
or
mov
jbe
mov
mov
pop
add
adc
push
pushf
loope
adc
inc
pop
mov
cvtpi2ps
out
fisubrs
sub
cld
sbb
fs
push
xchg
outsl
adc
pop
call
pop
push
xor
and
out
mov
xor
mov
daa
sub
ret
xor
cmc
mov
lcall
cmp
into
jnp
cltd
pop
dec
mov
in
aas
mov
xchg
inc
lods
dec
dec
mov
inc
out
dec
jnp
inc
sub
les
lock
jo
and
fbstp
repnz
loope
pop
or
pop
fs
out
rorl
scas
fs
xchg
push
and
xchg
push
add
or
daa
andl
xchg
adc
jne
xchg
mov
insl
sbb
or
insb
mov
insl
xchg
mov
fcmovnu
sub
adc
in
xor
mov
mov
sbb
aam
or
sbb
je
nop
test
cmp
loop
lea
jbe
xchg
ret
xorb
fdivl
xchg
cmc
out
ret
dec
xchg
mov
out
adc
jnp
mov
jns
pusha
sbb
sub
mov
dec
mov
aad
movsl
mov
add
jle
aas
nop
jne
cli
test
aad
in
sbb
leave
ljmp
xchg
sarl
bound
incb
mov
fwait
stc
pop
pop
dec
mov
scas
test
faddl
mov
xchg
mov
dec
xor
mov
mov
adc
cmc
sahf
adc
jbe
sub
and
xchg
jnp
lahf
test
and
mov
inc
push
scas
mov
dec
xchg
jle
lock
fstpt
push
stc
or
xchg
dec
insl
dec
in
mov
int3
dec
out
xor
cwtl
or
xchg
adc
inc
jo
mov
ja
or
addr16
hlt
pop
xchg
jb
and
push
sbb
sbbb
out
fs
sub
push
mov
shrl
lods
aaa
mov
or
pop
mov
mov
dec
hlt
fildll
lcall
nop
push
xchg
and
ds
xchg
and
mov
mov
mov
inc
mov
xor
dec
stc
addr16
bound
jle
mov
xchg
cmp
xchg
xchg
out
pop
hlt
mov
out
aad
push
rclb
push
ss
or
test
into
addr16
gs
sbb
shlb
pop
rclb
mov
test
cwtl
pushf
gs
movsb
lret
pop
jno
jo
les
jge
nop
mov
call
ljmp
jecxz
mov
mov
sbb
mov
or
in
in
ds
xchg
or
adc
ljmp
sar
lcall
cltd
adc
pop
mov
mov
movsl
pop
fisubs
lods
jle
out
jne
js
in
inc
sar
in
pop
mov
xchg
jg
dec
cs
int
sub
pop
cmp
mov
jno
jle
mov
jecxz
or
xchg
shrl
stos
out
dec
arpl
push
loope
or
jecxz
movsl
mov
pause
pop
cwtl
fnsave
lcall
inc
testl
pusha
xchg
and
push
push
sbb
adc
add
cmp
jnp
lock
pop
sti
sarb
adc
inc
lcall
fnstsw
mov
jne
add
mov
or
and
test
dec
add
xchg
push
scas
or
sbb
mov
jge
adcb
mov
sbb
stos
push
mov
push
fildll
sub
mov
popf
add
ss
and
lock
lds
stc
mov
or
mov
test
in
int
fs
bnd
dec
mov
mov
es
cmpsb
cmpsb
push
lahf
gs
or
scas
in
jg
fwait
pop
dec
mov
cmp
dec
aas
dec
clc
lret
add
test
push
ja
push
xchg
test
push
dec
nop
ret
mov
cmp
jne
mov
add
jle
sbb
and
pop
sbb
rcr
xchg
sub
inc
arpl
in
daa
inc
mov
out
xchg
clc
xchg
xor
test
incb
or
test
rcrl
pop
mov
pop
outsl
sahf
pop
mov
push
cmp
test
adc
lcall
cmpl
dec
mov
sahf
idivl
mov
add
dec
inc
mov
inc
out
xchg
inc
mov
mov
decl
shlb
add
cmp
or
xor
adc
dec
dec
pop
in
out
insb
loopne
dec
aaa
test
out
repnz
in
aam
pop
rorl
push
jge
mov
ret
pop
data16
xor
out
adc
jnp
mov
lret
xor
ret
fwait
loop
cmpsl
pop
or
mov
outsl
sti
add
mov
je
jne
lret
popf
dec
jo
mov
cwtl
and
roll
xor
imul
and
hlt
or
cwtl
or
pop
js
mov
dec
mov
push
cmp
movsl
test
inc
mov
cld
sti
push
push
pop
loopne
sarb
icebp
mov
scas
adc
jns
aad
cmc
cmpb
dec
call
mov
cmp
jae
xchg
adc
int3
sub
pop
or
inc
sbbl
xor
test
stos
inc
inc
add
pop
and
push
jecxz
stc
jo
mov
xor
outsl
dec
jno
and
dec
das
lret
push
push
inc
popa
mov
into
inc
and
in
fsub
jno
and
inc
aad
push
test
sub
out
int
sbb
dec
or
dec
hlt
jbe
jecxz
cmp
int3
bnd
mov
or
lods
dec
fdivs
lea
loopne
sbb
inc
xor
add
loopne
stc
dec
pop
inc
imul
jecxz
les
add
imul
test
setne
jp
xchg
xor
ljmp
inc
lahf
xorl
mov
inc
lcall
insl
fisttpl
or
pusha
adc
adc
stos
jae,pn
js
push
cmc
jbe
add
and
xor
or
dec
out
ret
inc
pop
mov
js
pop
mov
sahf
movsl
pushf
roll
dec
jl
dec
leave
adc
mov
int3
lahf
inc
push
jne
add
push
test
insl
ficoml
enter
addb
sub
int3
mov
add
lret
ds
jge
dec
push
and
push
pop
xor
repz
sti
lcall
mov
mov
cmp
sarl
lods
sbb
sub
fsts
inc
push
in
mov
das
mov
push
lret
sarl
or
shll
add
sub
js
in
mov
pop
cmp
rcll
add
push
movsb
fcoms
fcoml
movsb
lods
xchg
sbb
adc
jb
lods
int3
xor
clc
fbstp
jge
fcompp
fs
arpl
or
stos
inc
xchg
pop
out
pop
push
cld
js
jnp
xchg
and
sbb
fld
push
pop
mov
les
cmp
or
out
stc
push
xchg
push
push
stos
mov
std
aam
pop
inc
daa
lods
test
mov
jmp
fistps
mov
cmpsl
mov
adc
mov
mov
jge
stc
in
sbb
testl
mov
mov
mov
call
cwtl
pop
mov
ret
aaa
or
push
xchg
repnz
push
popa
mov
mov
aas
aaa
mov
hlt
insl
negl
ret
pop
xor
cmpsb
mov
fildl
mov
dec
es
xacquire
pop
mov
out
outsl
push
in
clc
xchg
leave
sbb
mov
push
cwtl
movsl
fs
call
test
mov
ret
xchg
push
outsl
clc
cmp
movsb
movsb
xchg
ficoml
xor
arpl
add
test
pop
xor
mov
mov
sahf
arpl
lods
xor
cs
lcall
sub
lcall
das
jp
scas
xchg
andb
cli
adc
sbb
mov
sub
add
xchg
sbb
or
in
sarb
cld
hlt
dec
xor
adc
jb
pop
imul
movsl
mov
das
mov
xchg
jbe
rolb
jo
repnz
inc
roll
popa
pop
lcall
jmp
sbb
mov
push
pop
adc
xchg
gs
arpl
daa
fs
subl
or
loopne
cmp
rcrb
xchg
sbb
aam
sub
stos
arpl
jae
sbb
sbb
es
push
test
repnz
xchg
lock
movsb
mov
lea
fldcw
leave
sbb
sub
or
xor
dec
mov
fdivl
adc
es
movl
or
mov
stos
mov
ret
sub
test
or
js
ret
ret
in
in
inc
pop
inc
cmp
ljmp
dec
xor
cmp
mov
shll
or
pop
cwtl
pusha
mov
sub
fldt
clc
and
jle
push
shll
hlt
push
mov
pop
sti
inc
nop
sub
cli
icebp
inc
mov
mov
add
pop
dec
mov
xor
mov
gs
or
outsl
cmp
pop
fmul
sbbb
lret
mov
pop
xor
xchg
test
sbb
push
sub
adc
out
pop
pusha
loope
xchg
fldenv
lret
sub
xor
stos
insl
test
lock
cmp
pop
lret
fldcw
cmp
in
pop
sub
es
fwait
jbe
lahf
movsb
sbb
enter
vpsubq
out
cmpsl
jmp
test
push
mov
scas
or
cmp
outsb
addr16
xlat
insb
push
push
xor
scas
lock
aaa
jp
inc
mov
or
enter
insl
jo
jae
jae
fcomps
stc
mov
mov
test
clc
cld
test
lods
mov
xlat
xor
xor
push
xchg
repz
sahf
mov
jne
sub
pop
sbb
repnz
iret
cmc
pop
mov
push
lea
and
sti
mov
push
add
pop
cwtl
sbb
mov
stc
cmpsb
negb
arpl
dec
add
push
mov
ror
push
movsb
mov
or
jecxz
jl
cs
mov
xor
xchg
mov
sub
xor
mov
inc
insl
loope
outsl
sahf
lods
enter
lea
xchg
cmp
and
mov
sub
or
push
out
xchg
pop
adc
adc
repz
and
fcomi
nop
mov
push
ss
dec
mov
xor
sub
inc
in
hlt
mov
inc
fidivrs
and
mov
xlat
xor
and
fdivl
insl
cwtl
mov
addr16
lret
gs
pop
sbb
shll
inc
or
inc
mov
or
inc
pop
ja
push
stos
fldt
ljmp
xchg
mov
inc
scas
aam
test
push
scas
sbb
pop
into
push
cmp
pop
jbe
push
pop
roll
sub
jmp
clc
les
scas
add
xor
jb
daa
jne
cmp
jge
mov
mov
mov
push
push
add
cli
jbe
jl
sub
add
into
call
daa
ds
cmp
test
or
std
pop
sub
shlb
vphadduwq
xor
orb
add
aas
lock
jmp
pop
fnsave
cli
js
mov
cli
and
int3
aas
std
aas
jle
lcall
das
lahf
push
sbb
push
cmp
pop
adc
sub
outsl
div
cmp
fidivl
cmpsl
iret
mov
call
sahf
leave
sub
push
mov
dec
mov
dec
fstpl
fdivrl
mov
fistl
cli
rorl
inc
loope
xor
das
ret
adcl
inc
imul
xchg
mov
xchg
and
cmpb
xor
mov
in
nop
sbb
fdiv
pop
xchg
cwtl
out
vpacksswb
idivb
repnz
xchg
xchg
mov
inc
les
inc
push
dec
int
enter
add
mov
mov
mov
out
outsb
repnz
movsb
pop
orl
sti
data16
xchg
out
ja
mov
mov
mov
cmp
adc
add
lds
mov
push
dec
mov
subb
inc
xchg
aas
test
in
bound
imul
inc
cmc
andl
push
out
sub
jmp
cmpsb
adc
push
nop
loope
mov
leave
xor
iret
cmpsb
clc
fstpl
mov
neg
push
inc
jnp
pusha
int
xchg
mov
ficoms
mov
cmp
sub
mov
xorl
inc
subb
xor
sub
mov
icebp
movsl
ret
xor
push
js
les
mov
icebp
jo
jns
test
pop
xor
iret
inc
sbb
cwtl
pushf
or
test
mov
add
fistpl
bound
push
pop
clc
pop
adc
adc
inc
sti
xchg
scas
cmp
sbb
sub
shr
pop
ja
jecxz
and
and
push
cmpsl
sub
call
mov
xchg
loope
push
enter
jmp
ffree
rorb
lods
lcall
pop
iret
lock
push
fcoms
mov
out
mov
push
jns
pushf
insl
in
adc
movsb
xorw
in
inc
add
jno
push
scas
in
and
imul
inc
popf
cmpsb
lock
jle
js
das
pop
push
or
jae
fwait
insb
pop
das
andl
loope
inc
xor
mov
cld
pushf
push
sbb
xor
mov
add
mov
fs
loop
subb
lock
fldz
cs
daa
sbb
rcrl
cmpsl
pusha
xor
mov
jo
push
ljmp
xchg
movsb
and
cli
test
clc
jae
fs
adc
mov
jno
ljmp
and
out
push
rcl
sbb
mov
test
rclb
insl
ret
push
xor
adc
cmp
push
cmpsl
jp
mov
mov
xchg
mov
ljmp
int3
mov
dec
ret
xchg
mov
and
fisubrl
es
aad
dec
mov
ret
popf
lea
orl
cwtl
das
cmp
sbb
inc
or
les
cmp
jge
mov
inc
fsub
scas
pop
data16
adc
int
repnz
cmpsb
nop
gs
sub
sub
cltd
sub
pop
mov
jg
in
movsl
xchg
movsl
xlat
cmpsl
mov
shl
and
fsubs
ljmp
mov
sub
rcrb
int3
addr16
sbb
fisubl
pop
inc
lods
pop
nop
adc
sbb
ljmp
int
cmc
adcb
ficompl
ljmp
and
mov
inc
mov
out
stos
push
and
cmp
out
push
ret
inc
dec
mov
lods
rcrl
xlat
xor
mov
push
ds
insb
addb
andl
stc
ljmp
jno
inc
mov
pop
imulb
xchg
push
into
push
adc
outsb
jnp
pop
insb
sti
je
sub
fildl
cmp
into
add
psubb
sub
insl
or
ds
cld
imul
js
jbe
fistps
les
cmp
loopne
add
loopne
push
fbstp
push
jb
add
mov
loop
sahf
xor
imul
and
fwait
out
je
pop
xchg
sti
inc
jno
mov
jge
into
stc
jb
daa
xchg
les
arpl
daa
outsl
inc
dec
cmp
xor
shrb
std
cmp
dec
and
jmp
adc
or
in
in
jge
neg
insb
mov
mov
add
fstp
aaa
push
lock
push
adc
lods
ret
xor
mov
xor
dec
repz
jge
out
cmp
sub
sahf
repnz
mov
mov
mov
fisttpl
mov
jns
in
and
test
sub
push
jecxz
arpl
subl
or
mov
push
cmpsb
pushf
lahf
arpl
not
repnz
xor
dec
or
imul
and
inc
movsl
lret
cmp
and
mov
mov
add
repz
call
test
int3
sbb
cld
adc
loopne
pop
mov
xchg
xchg
sahf
dec
es
inc
adc
fnstenv
mov
jp
add
into
push
cmc
sbb
push
mov
xor
sbb
sub
pushf
mov
cmpsb
sbb
cmc
jns
mov
jns
pop
in
sbbl
lahf
pop
dec
sbb
loope
dec
add
ja
or
push
xchg
or
out
movsb
loope
jl
sbb
jae
xor
mov
cmp
aam
adc
std
inc
in
and
mov
cs
movsl
inc
xchg
mov
fldenv
add
out
ret
adc
das
cld
mov
in
test
push
push
outsl
dec
inc
dec
adc
popf
xor
push
cmp
sub
or
jnp
and
mov
or
xor
icebp
adc
sub
int
jns
and
adcb
push
test
xor
call
pop
fwait
dec
jecxz
cmp
mov
dec
enter
jns
push
jge
sbbb
rcrl
stos
or
lahf
popa
mov
lretw
push
outsl
sbb
fnstenv
movsb
nop
ret
jmp
ljmp
aas
insl
cmp
cmp
int
into
mov
mov
bound
mov
or
cmp
xchg
sub
in
addb
cmp
js
mov
mov
repz
fucomi
rcrl
addb
add
push
xor
shr
push
lret
bound
push
or
push
sub
mov
pushf
jmp
push
pop
inc
lcall
daa
mov
fiaddl
sub
shll
mov
mov
popa
or
lret
test
out
lret
sub
test
xor
repnz
cli
fwait
push
sbb
jp
mov
xchg
sub
icebp
or
inc
les
push
mov
add
cmp
hlt
sub
test
mov
xchg
add
stos
and
imul
mov
pushf
pusha
fs
inc
xor
fmuls
aad
inc
and
inc
push
push
sbb
pushf
insl
push
dec
or
push
push
dec
enter
pop
push
inc
std
sbb
es
pop
ret
rcl
test
inc
and
push
or
adc
mov
stos
mov
pop
out
aaa
int
push
cmc
push
mov
imull
mov
in
test
jp
popa
mov
dec
dec
cmpsl
pushw
mov
push
jns
mov
xor
pop
loope
pop
popl
rorb
jae
push
mov
and
xchg
add
dec
inc
movsl
xchg
adc
dec
inc
add
adc
cmp
cli
lcall
fidivs
or
sub
mov
sbb
inc
out
sahf
repz
mov
pop
xchg
and
adc
je
ror
out
mov
add
enter
xor
cmpsl
pushf
sub
inc
ss
and
rclb
push
rclb
clc
imulb
addr16
lret
popa
popl
sbb
jg
or
mov
das
lcall
testb
stc
out
cmp
in
mov
push
dec
fcoms
push
dec
xor
inc
jmp
jecxz
cwtl
add
xor
pop
or
jnp
jge
adcl
dec
dec
inc
stc
inc
int
mov
mov
lcall
mov
cmp
jnp
push
xchg
add
or
dec
mov
mov
sarb
mov
pop
mov
sahf
mov
pop
mov
mov
mov
scas
push
xor
mov
aad
popl
pushl
xor
cmpsl
sbb
and
stc
insb
test
xor
lods
fistpll
cmp
in
push
lret
and
inc
push
sub
outsb
xor
inc
inc
pop
popf
push
mov
sar
jnp
cwtl
sbb
test
dec
rolb
or
cli
cwtl
mov
mov
mov
push
in
imul
sub
or
and
mov
sub
into
mov
bound
enter
test
sub
std
push
jae
aam
das
xchg
mov
rclb
lahf
xchg
sbb
mov
add
pop
stos
xor
jecxz
rol
cwtl
pop
loopne
xor
aam
imul
adc
stos
and
mov
cs
adc
xor
in
mov
stc
test
insb
push
push
sub
into
repz
arpl
jbe
mov
je
cmp
cld
jns
mov
and
stos
jo
inc
ljmp
cmp
add
mov
inc
lahf
and
inc
in
filds
xchg
orb
pop
jp
mov
clc
roll
jl
mov
mov
jl
lods
and
fsubs
add
stos
jecxz
jge
add
pop
ficomps
inc
adc
lcall
loop
test
cwtl
dec
imul
scas
int3
lea
mov
xor
setp
or
iret
and
jae
mov
add
lret
add
addr16
mov
inc
cmp
push
sbb
push
pusha
xor
sbb
mov
or
mov
sbbl
add
push
daa
imul
outsb
inc
cmpsl
push
ljmp
inc
mov
cwtl
test
aas
adc
mov
test
or
cs
nop
mov
jns
cmp
das
clc
push
ja
jge
pop
repz
mov
xchg
addl
push
aad
mov
and
insl
jle
addb
subb
mov
shlb
cmp
inc
dec
jbe
pusha
in
dec
mov
data16
sbb
dec
xchg
mov
mov
js
int
pop
call
lret
lods
in
roll
jae
xchg
push
pop
mov
ljmp
inc
and
into
cli
dec
mov
adc
repnz
cltd
addr16
dec
test
add
daa
enter
fadd
leave
rorb
inc
popf
lods
inc
loope
push
popf
lods
lock
mulb
bound
les
adc
push
ret
aas
jg
shll
jle
or
push
cmc
push
pop
jl
leave
aas
adc
push
insb
mov
in
negl
jmp
push
sub
pop
xlat
bnd
out
daa
mov
mov
jae
outsl
fisttps
sub
fists
sub
mov
jg
xchg
fcoml
test
call
mov
ds
sub
xor
push
insb
lret
jnp
fisubrs
jg
ret
push
int3
jge
push
aam
and
xchg
jg
out
jbe
dec
stos
xorb
stos
sahf
sub
int3
test
xlat
fidivs
loopne
jbe
std
shl
jge
pop
and
sbb
add
push
dec
pop
jle
hlt
into
xchg
mov
mov
outsl
add
mov
outsl
ffree
shll
adc
insl
data16
testl
pop
movsl
sub
fucomp
or
rol
or
add
dec
dec
push
fstpt
mov
or
insl
dec
and
mov
lock
adc
mulb
mov
stos
into
enter
divb
outsb
movsb
mov
xchg
iret
fwait
nop
cmp
add
cmp
mov
cmp
push
and
loopne
dec
hlt
addl
cwtl
fiaddl
insl
leave
jns
push
push
lahf
ds
push
cmc
lods
mov
or
or
xor
mov
dec
inc
dec
pop
lds
jne,pn
sar
xchg
mov
push
test
je
sbb
sbb
and
cmpsl
out
sub
imul
mov
addb
inc
sarb
lds
push
shrl
das
cli
inc
lahf
stc
lds
jp
fiadds
lahf
and
out
push
fwait
xor
push
js
push
hlt
dec
and
push
sub
inc
pop
push
enter
das
gs
jl
jne
and
pop
out
sub
add
sahf
out
addr16
sub
lods
arpl
mov
sub
fs
dec
cvtdq2pd
jle
cld
aaa
add
out
pop
mov
sbb
push
mov
sbb
or
adc
mov
inc
in
sbb
imul
shrl
ret
xor
imul
inc
movsb
xchg
mov
or
imulb
out
cwtl
shll
rol
jb
pop
std
dec
sbb
inc
aaa
and
dec
nop
xchg
sbb
popf
stos
cmpsl
dec
lock
sbb
cmp
adc
ljmp
mov
pop
dec
sbb
rcrl
jno
mov
outsl
pop
fadds
pop
jbe
dec
or
loope
icebp
mov
jg
mov
lret
flds
jb
pop
pop
and
call
add
push
adc
adc
cmp
rcll
push
fnstenv
mov
cmc
les
fninit
stc
loope
cmp
mov
inc
cs
add
aas
out
idivl
sbb
jnp
inc
lock
pop
dec
push
bound
sub
inc
jnp
iret
loope
mov
sbb
sub
xchg
movsl
orl
clc
push
rorb
mov
xchg
aaa
sbb
mulb
jno
mov
sarb
insl
sub
jnp
xchg
idivb
in
ret
pop
jg
add
mov
pusha
jecxz
dec
add
pop
out
nop
and
jmp
mov
add
jne
dec
push
cmp
loop
cwtl
cld
pop
cmp
mov
jl
pushf
mov
icebp
jl
pop
ror
pop
sub
pcmpeqw
leave
sbb
fadds
imul
add
addr16
xor
sbb
ret
push
icebp
inc
sahf
mov
pop
fwait
dec
enter
mov
jae
push
outsb
xchg
ja
jl
or
adc
es
jnp
inc
adc
mov
xchg
leave
cmp
cltd
jb
jg
jns,pt
lea
push
fldt
aam
lcall
mov
popl
jbe
aam
out
add
mov
or
dec
xchg
dec
stos
loop
xchg
fidivrs
sbb
cs
shlb
cmp
gs
hlt
lahf
or
mov
sub
add
pusha
dec
mov
ficoms
push
repnz
pusha
adc
aad
cli
push
popf
ds
push
sub
lods
notl
test
lods
jb
adc
outsb
sbb
in
pop
or
ljmp
fimull
adc
mov
or
ret
xor
pop
inc
sbb
repnz
xchg
sarb
jge
das
pushf
clc
pushf
cwtl
imul
cmp
mov
mov
or
inc
test
fisubrs
or
decb
rorl
jo
mov
in
sbbb
ss
inc
or
lods
xor
jno
add
lods
push
clc
cwtl
add
xchg
cmp
jb
push
cltd
pop
gs
pop
rcl
pop
jb
repz
mov
arpl
mov
call
int
push
pop
ljmp
hlt
adc
inc
in
xlat
lcall
test
push
jb
scas
call
or
xor
dec
test
adc
fldcw
lods
pop
cmc
dec
fs
aaa
rcll
dec
ja
outsb
mov
ds
negb
dec
xor
fsts
push
aam
scas
movsl
idivb
jecxz
icebp
aas
dec
pop
in
fxch
pushf
pusha
mov
add
out
sbb
lahf
bound
mov
jl
out
dec
repnz
xchg
ret
sbb
lods
shrl
mov
sub
mov
cmc
or
mov
out
sbb
cli
mov
xor
push
loopne
andl
js
and
or
inc
flds
out
sbb
mov
out
push
mov
imul
adc
lret
mul
and
mov
cwtl
dec
addr16
sarb
loop
fsubr
pop
fnstsw
jecxz
xrelease
aad
push
or
pop
fwait
inc
xor
sub
push
adc
mov
mov
jl
fidivrl
cld
xchg
mov
inc
push
pop
sbb
lods
sbb
pop
iret
in
test
mov
xchg
pop
pushf
adc
mov
shrb
mov
cmp
outsb
scas
add
shrb
into
into
int
aam
lret
imul
sbb
sbb
jne
and
insb
out
filds
insl
arpl
dec
int3
cmp
nop
push
dec
loopne
lret
add
pop
lds
fdivrl
and
cli
js
sbbb
daa
out
lret
mov
mov
sbb
andl
push
sbb
mov
ss
cmp
cmpsl
stos
xchg
bound
int3
fcmovnu
insb
mov
cltd
jp
mov
cli
inc
mov
inc
sub
scas
sar
and
fdivl
addr16
mov
push
push
cmp
shrb
dec
repnz
out
es
xchg
cld
lods
ss
ret
test
and
fldenv
push
mov
jl
sbb
and
push
sbb
std
ljmp
movsb
pop
fwait
std
movsl
scas
push
xor
or
in
dec
icebp
pusha
inc
mov
lods
std
cmpsb
add
sarb
divb
ljmp
and
push
fnstenv
mov
pop
jns
sarl
scas
jmp
and
push
aas
cwtl
lds
jbe
pushf
std
push
in
js
sbb
dec
sbb
cmp
int
xchg
pop
nop
mov
jp
test
xchg
push
dec
jp
ds
sbb
pop
dec
sbb
and
pop
cmp
mov
loope
out
add
pop
fdivr
push
push
loop
mov
lods
add
repnz
addr16
into
call
fs
lret
test
cltd
cmp
cltd
std
iret
lods
repnz
mov
out
cmpsb
xchg
sub
dec
cmp
enter
insl
in
sarl
mov
loopne
mov
push
aam
sbb
js
int
pushf
test
popf
add
cmp
les
xchg
sub
pop
push
push
movsl
lret
imul
leave
lahf
and
mov
icebp
push
movsl
mov
cmpsb
js
mov
sar
test
cwtl
and
push
rclb
pop
repz
push
adc
cmp
mov
popa
cmpb
ds
cld
addr16
jecxz
cmpsl
out
pop
push
mov
fadds
pop
subb
repnz
shl
call
ret
loope
loopne
insb
sahf
loope
lret
push
pop
lock
fcomi
and
repnz
aam
pop
fldt
xchg
mov
sub
fnstcw
imul
mov
jns
fs
sti
or
es
jne
cmp
sbb
sbb
dec
sbb
arpl
ret
push
imul
fldl
mov
fstpt
int
adc
jno
scas
mov
ds
hlt
push
loop
jmp
mov
or
mov
rolb
xor
pop
cwtl
mov
cmc
xchg
jmp
push
sub
sti
jnp
ss
enter
stc
push
xor
scas
fwait
mov
xchg
lret
loope
pushf
addl
repnz
push
or
sub
sbb
mov
mov
loope
cmc
stos
mov
push
inc
push
sub
movsl
jno
mov
push
xchg
enter
jbe
sti
inc
sbb
fldcw
pop
cli
dec
adcl
sub
jnp
pop
mov
mov
pop
mov
out
daa
loope
call
mov
mov
mov
mov
sbb
lods
setge
cmp
rorl
dec
jg
pop
push
fisubl
pop
loope
adc
cmp
loop
adc
dec
mov
cld
pop
pop
sarb
sarl
inc
adc
iret
mov
out
and
inc
stc
fldl
insl
mov
push
push
movsl
les
mov
ljmp
jnp
pop
push
mov
mov
pop
mov
das
push
sahf
inc
or
xor
into
rolb
sbb
out
xor
mov
mov
je
out
aam
rorb
mov
cld
pop
rep
test
cmp
inc
mov
jmp
repz
es
scas
testl
mov
adc
sbb
mov
aaa
xor
movsl
outsb
cmpsl
inc
or
jb
shlb
push
inc
outsl
movsb
add
sbb
lahf
sub
je
xor
jg
cs
inc
enter
aaa
nop
pop
insb
fmull
mov
mov
xor
out
sub
and
loopne
dec
xchg
dec
dec
add
in
bound
lret
pop
pop
std
movsl
pop
lcall
inc
sbb
ret
sbb
inc
addr16
ljmp
lods
ljmp
enter
mov
cmc
shll
bound
enter
dec
cmp
or
jae
push
test
mov
push
mov
in
ficoml
xchg
add
outsl
jno
test
in
outsl
xchg
cmp
mov
ljmp
cmp
adc
fucomi
sti
mov
mov
out
mov
aad
jp
cmc
fdivrs
lea
dec
mov
ds
mov
jbe
dec
data16
xchg
sbb
add
loop
fldenv
hlt
push
clc
out
lret
add
jnp
stos
pop
jl
xchg
ret
push
lcall
or
ret
xchg
mov
sub
mov
jmp
push
mov
inc
insl
lds
cli
cmp
lcall
inc
or
pop
nop
sub
sbb
mov
cmp
call
pop
fcompl
xchg
ja
jne
mov
outsl
out
mov
fwait
sarl
cmpb
cwtl
repnz
adc
add
movsl
push
inc
cli
dec
test
les
dec
bound
scas
testb
mov
add
faddl
and
pop
or
xchg
sub
pop
sahf
sub
mov
fcoml
add
subb
inc
ror
mov
adc
push
fstpl
notl
add
fldcw
xchg
adc
sti
sahf
push
sub
adc
xor
mov
enter
dec
ss
inc
pop
jno
pop
js
pop
jns
test
and
jp
out
add
addb
xor
pop
out
ja
loopne
jp
loope
dec
xchg
mov
mov
mov
stc
es
mov
clc
sub
jnp
pop
xchg
sti
std
fcmovb
push
filds
xorb
enter
ret
and
sbb
in
add
cmp
fnstenv
frstor
mov
sbb
rcl
pop
sahf
mov
sub
ret
and
adcl
test
xor
imul
fldl
insl
sub
dec
daa
neg
cmpsl
rcr
xchg
push
jge
imul
sbb
rcrl
cmp
stc
fwait
pop
or
adc
pop
mov
mov
push
jae
les
int
out
out
fisttpll
sbb
dec
xchg
lods
mov
ffree
dec
arpl
mov
lret
jbe
or
shlb
test
push
hlt
mul
mov
ret
cld
inc
out
daa
add
inc
cmp
sti
lret
popl
test
lahf
push
adc
xor
mov
dec
mov
data16
movsl
arpl
inc
sahf
or
add
sbb
mov
jmp
mov
fndisi(8087
push
mov
jne
nop
xchg
jae
cmp
cli
lret
jmp
and
leave
in
push
testl
addr16
mov
sub
add
and
sbb
jns
and
cmp
lret
sahf
das
cmp
enter
push
jns
jle
dec
push
mov
stos
daa
mov
xlat
shl
sbb
out
ljmp
inc
leave
out
add
push
stos
cmp
fwait
and
sti
xchg
enter
push
sti
int
jb
cld
es
nop
repnz
jo
push
jp
jle
imul
pop
mov
cs
lahf
xor
movsl
mov
in
mov
divb
lcall
in
sbbl
pushf
inc
mov
cmp
stc
movsl
jae
in
aad
cwtl
adc
cmc
add
rcr
and
push
push
jb
mov
sbb
push
push
bound
enter
mov
loop
dec
in
inc
jmp
or
cmp
and
dec
dec
xchg
inc
shl
pop
call
add
imul
cmp
dec
cli
repnz
pushf
hlt
cli
jb
ds
fadds
mov
mov
shl
lock
test
fnstcw
mov
mull
fiadds
xlat
push
call
lret
jno
popf
xchg
xlat
lods
xor
idivb
popa
je
or
mov
pop
maskmovq
testl
jo
aaa
loop
int3
push
pop
push
lret
and
aas
fisttpl
inc
daa
xor
test
dec
outsl
cmp
inc
dec
mov
push
lret
stos
dec
stc
jmp
xor
xchg
stos
call
imul
lahf
cli
les
pusha
fsubrs
outsl
jmp
adc
push
and
loope
sub
pop
push
inc
pop
xchg
mov
inc
or
inc
or
inc
pop
cmc
jle
sub
int
and
ljmp
jae
shl
jae
dec
or
mov
xchg
mov
mov
enter
xor
cltd
stc
ljmpw
lods
push
call
mov
sub
jb
cwtl
lods
dec
add
push
add
jo
repz
jno
cs
lods
inc
lahf
shrl
insl
in
mov
scas
bound
sbb
sbb
push
mov
movsb
rcl
jmp
xchg
lahf
cmc
dec
movsl
orb
cmpsl
out
ret
pop
push
movsl
cs
lcall
mov
movsl
gs
call
jge
fcmovu
sbb
mov
inc
push
add
cmpsl
push
add
mulb
xchg
stos
inc
pushf
fiaddl
fldlg2
mov
daa
cmp
xor
mov
cmp
jb
out
aas
push
or
jecxz
cmpsb
add
and
mov
std
repz
jle
fmul
testl
fdivs
daa
jnp
in
clc
js
dec
or
mov
les
popf
mov
add
scas
out
shlb
popf
ljmp
in
push
mov
gs
lretw
and
cltd
lret
fwait
inc
jecxz
adc
xor
and
popf
jg
adc
or
int
mov
xor
sbb
flds
mov
inc
test
movsb
aad
xor
mov
lret
sub
filds
jns
cli
aaa
or
sahf
movsb
inc
jnp
adcb
dec
into
test
gs
cmp
mov
inc
inc
scas
jne
xchg
cmp
inc
inc
pusha
xor
push
adc
cmpsl
dec
jbe
fmuls
lcall
jb
jecxz
cmpl
sub
cmp
test
ficoms
push
push
ret
and
and
in
cmp
xchg
cli
lods
cwtl
sbb
mov
jge
lcall
jbe
cmp
stos
jle
in
mov
test
mov
movsl
js
push
mov
shl
loope
pop
icebp
pop
cmp
jmp
add
sub
lods
pop
sub
mov
lods
push
daa
es
fiaddl
or
testl
adc
mov
fwait
adc
sub
repnz
sub
mov
sbb
dec
int3
inc
and
movsb
cli
orb
inc
daa
aad
cmp
arpl
popf
xchg
sti
pop
xor
push
mov
jno
inc
inc
lods
lret
mov
jo
dec
lods
leave
int3
into
adc
push
xchg
xlat
add
lcall
add
or
cmc
pop
jno
xchg
adc
jmp
xor
mov
dec
cmp
inc
and
mov
sbb
mov
js
jae
lcall
insb
and
mov
xchg
inc
sarl
push
out
dec
mov
push
dec
and
or
push
sti
repnz
out
jno
mov
or
popa
jno
test
jns
ja
lahf
xchg
xor
iret
arpl
repz
add
sti
pop
cmp
inc
mov
int3
psraw
in
test
jb
inc
xor
xor
inc
iret
inc
cld
lahf
mov
out
xor
flds
out
push
sub
insb
xchg
addr16
jge
jae
mov
std
add
cmpsb
je
dec
push
imulb
fs
inc
pop
icebp
in
outsl
loope
or
inc
popf
or
add
je
lea
outsl
add
sbb
pop
mov
daa
ljmp
push
xor
push
push
adc
dec
shlb
test
xchg
stos
xor
inc
ja
rcl
rclb
cmp
mov
gs
push
fisubl
shll
fsub
adcl
lahf
cpuid
xchg
sub
aam
insb
repz
xchg
pop
sbb
xor
insl
jns
mov
mov
cmp
mov
xlat
ljmp
pop
sub
push
notl
out
lcall
loope
sbb
pop
fs
cmp
jno
fdiv
pop
push
ja
arpl
mov
in
inc
jle
loop
dec
inc
dec
sbb
sub
xorw
inc
mov
inc
out
mov
sbb
cmp
ljmp
add
cmp
sbb
je
daa
sbb
cmp
cmc
rclb
dec
xchg
ret
cmp
dec
pop
pop
jb
popf
aad
daa
push
sbb
push
or
dec
lret
push
push
push
lds
xchg
mov
mov
shrl
int
leave
xor
fistps
out
push
fs
adc
cmc
leave
stos
enter
jbe
fstl
je
test
push
inc
pop
js
mov
in
fdivl
stos
jno
mov
sub
add
and
int3
scas
aam
mov
push
sub
aas
lods
xor
xor
cld
dec
xchg
cli
cmp
cmc
dec
pop
inc
enter
adcl
in
mov
roll
stos
mov
cmp
dec
popf
ds
js
into
sbb
mov
dec
mov
subb
ror
mov
inc
pop
mov
dec
testb
jns
and
pop
jnp
pop
out
xchg
lds
push
cmp
cmpsb
pop
pop
sbb
inc
mov
xchg
cmpsb
xchg
subb
push
sub
insl
mov
ret
popa
jp
lods
cmpsl
push
cmpsl
add
imul
mov
jg
or
jno
int3
cmpsb
lcall
sub
mov
and
mov
and
mov
xlat
in
nop
shrb
push
xchg
xorl
sub
std
cltd
stos
inc
outsl
pusha
sbb
call
out
enter
mov
sub
pop
pop
outsb
pop
pop
pop
outsl
inc
and
bound
push
jae
sbb
shl
icebp
imul
cld
xor
outsl
lds
sarb
fsubs
das
and
jns
xchg
dec
outsb
mov
pop
outsl
rcrl
pop
adc
inc
xor
mov
push
inc
mov
mov
push
arpl
das
fwait
ret
cltd
gs
lods
jg
cmpl
pop
adc
addr16
push
lcall
ja
mov
jo
into
aaa
fwait
sbb
dec
cmp
test
lcall
xchg
cs
jae
adc
into
lock
sar
fmuls
jecxz
test
popl
mov
jl
ud0
gs
test
aas
and
call
push
push
pop
sbb
push
inc
adc
push
test
lock
sub
fcoml
jnp
cmp
cltd
and
test
push
nop
cmp
sub
cmp
fnstsw
cmpsb
pop
sbb
inc
lret
sub
lret
cmc
sub
ret
js
sarb
jno
push
push
push
scas
daa
push
sbb
fcmovnb
outsl
out
jo
loopne
push
aas
inc
sti
aad
push
push
mov
push
pop
push
mov
mov
out
xchg
sub
xchg
sti
ror
xor
or
adc
mov
out
sub
push
mov
je
xchg
jns
je
mov
popa
lods
cld
in
adc
lret
fdivr
fdivs
lea
xor
and
inc
lds
and
sub
fsubrl
jmp
xchg
jne
test
aas
ret
cmp
push
int3
lahf
rclb
mov
mov
push
jecxz
pop
adc
aad
add
push
bound
jbe
imul
xchg
xor
cwtl
dec
rorl
xchg
cli
daa
ljmp
pop
and
jl
xchg
xor
cli
pusha
jge
pushl
mov
and
insl
decb
mov
mov
push
pushf
out
pop
rorl
xchg
jo
inc
not
xor
xchg
or
test
sahf
loop
ds
jo
jl
push
xor
cmpsl
int3
in
dec
lcall
in
mov
cltd
xchg
mov
pop
xlat
inc
cmp
cli
pushf
inc
cmp
jns
xorb
push
jae
cmp
mov
cmpsb
push
dec
cmp
inc
stos
mov
push
daa
je
outsl
sub
jle
loop
dec
incl
pop
and
inc
push
dec
add
cmp
icebp
fisttpll
cmp
cmp
out
out
xor
sbb
push
xor
mov
icebp
bound
mov
inc
xlat
add
into
movsl
movsl
imul
int
dec
and
sub
lret
aad
ret
loop
cmpsb
adc
mov
data16
or
pop
popa
ljmp
sahf
and
adc
inc
arpl
popa
jno
inc
clc
push
test
test
in
movsl
pop
xchg
mov
jg
xchg
mov
call
jle
add
or
xchg
ret
inc
mov
lds
and
test
test
pop
call
mov
outsl
sbbb
movsb
pop
ljmp
jg
out
es
mov
pop
icebp
push
and
das
dec
rcr
aam
cmpsb
popa
and
pop
fdivr
mov
inc
mov
mov
loop
js
cmc
fwait
xchg
mov
cmp
fistl
mov
mov
cltd
je
or
inc
movsb
mov
mov
imul
clc
ss
dec
mov
mov
aad
add
in
cld
dec
ja
ret
mov
cli
popl
mov
aad
sti
xchg
stos
lahf
sahf
cmc
sub
fstps
cmp
lret
push
xchg
jmp
pusha
cld
and
loope
pop
add
scas
shlb
in
cmp
cmp
xor
test
out
add
loope
dec
mov
sub
ret
mov
push
and
sti
fildll
xlat
sbb
xchg
dec
jp
inc
push
int
pop
jae
dec
aam
push
fnsave
mov
jns
mov
dec
pop
sbb
adc
xor
xchg
xor
cmp
mov
shll
or
jp
dec
in
lret
adc
mov
mov
mov
ret
into
test
push
ret
sub
mov
mov
mov
sti
sbb
push
into
cld
adc
insb
inc
jnp
cmc
les
or
push
or
cs
sbb
xchg
roll
add
mov
jae
and
aaa
sbb
dec
inc
push
mov
jecxz
std
sbb
push
jns
inc
dec
sbb
adc
lods
addl
xchg
fnstsw
test
mov
popf
add
test
lea
fidivrs
jecxz
mov
pop
xor
sbb
int
inc
jp
loope
lret
add
jb
xor
mov
in
pop
xor
pop
jbe
in
pop
mov
aaa
mov
test
test
cmp
outsl
subb
xlat
dec
shr
out
jbe
repnz
and
mov
stos
push
mov
popa
mov
jbe
lods
cmp
jecxz
mov
test
stos
cwtl
dec
mov
cmpsl
fistps
pop
push
push
fcomps
lods
or
and
inc
jae
and
jmp
fiadds
dec
ds
or
xchg
outsl
adc
out
ja
cmpb
test
inc
jne
mov
and
cmp
pop
inc
cmpsl
or
daa
jno
mov
xchg
mov
xor
or
inc
clc
dec
xlat
mov
pop
xor
subl
rolb
sub
arpl
sbb
mov
cmc
or
call
mov
and
inc
push
fadds
ret
inc
inc
inc
pop
xorb
out
imul
and
fldenv
stc
push
rcll
stos
call
lods
mov
pop
mov
dec
xchg
jmp
mov
shlb
xchg
jne
xchg
dec
mov
mov
sbb
inc
mov
cli
push
sahf
ja
sub
cli
int3
adc
jmp
dec
adc
mov
aaa
push
ja
xor
and
testl
or
add
lret
add
mov
or
cmp
fs
and
data16
fcmove
jmp
push
cmp
fs
sub
sub
pop
test
ficoml
inc
push
mov
lret
adc
xchg
cmc
push
in
in
test
mov
and
dec
inc
out
jmp
icebp
aam
adc
jno
fdivs
sub
add
add
push
out
mov
pop
or
pop
sub
jae
jno
stos
sub
je
cld
jg
iret
sbb
insb
pop
jecxz
mov
jg
cmpsl
lds
cmp
sbb
push
jno
jbe
xor
loope
rorb
shll
xchg
mov
das
mov
dec
dec
test
mov
shl
or
mov
fsubs
ljmp
dec
jecxz
sbb
stos
in
sahf
loopne
inc
daa
pop
sbb
jecxz
fmull
jge
popl
push
mov
loopne
mov
jmp
push
lcall
fisttpll
pop
popf
inc
dec
das
pop
pusha
aad
nop
pop
dec
in
nop
push
jae
jg
insb
fisubrl
loop
insb
sbb
ss
push
jbe
pop
xlat
inc
sbb
mov
ss
xchg
push
jbe
sub
in
roll
clc
pop
jo
test
mov
lret
sbb
push
add
dec
jno
mov
jns
xchg
xor
xor
movsb
in
subb
sahf
divl
dec
xchg
jl
cmp
or
inc
ffree
hlt
out
push
or
dec
sbb
mov
lds
cmp
cmpsb
js
lds
jns
xchg
push
cmp
mov
mov
jge
pop
lock
jb
fcomp
shrb
lret
cltd
mov
adc
pushf
es
mov
inc
mov
mov
or
mov
ja
xchg
and
mov
leave
mov
jl
mov
ja
negl
mov
jg
jle,pn
xor
cmp
xor
jle
cld
out
lcall
hlt
fucomp
push
mull
mov
fstpl
pop
sbb
outsl
push
imul
in
jae
and
mov
cmpsb
mulb
cmp
fadd
out
sbb
and
fwait
pop
mov
sub
inc
lea
xchg
xchg
add
cmp
sti
pop
ja
dec
into
mov
push
xchg
repz
stos
inc
in
cmp
jecxz
cld
ret
rcll
scas
mov
add
xor
xchg
jmp
jno
jnp
dec
add
imul
and
lods
fs
dec
loopne
mov
lods
xorb
push
inc
test
inc
inc
jp
cmpsl
sbb
sub
test
push
mov
mov
sbb
sbb
aam
clc
jmpw
xchg
push
notl
lods
or
test
mov
push
lock
into
xor
or
jo
clc
and
orb
inc
pop
cmp
cmpsl
add
popa
mov
jge
push
ja
int
mov
leave
imul
sub
add
xorl
pop
mov
mov
mov
in
jb
or
push
nop
jecxz
stos
mov
cmc
int
mov
mov
in
adc
adc
ljmp
pop
mov
xchg
subb
or
stos
fwait
sbb
push
jne
in
mov
scas
xor
ret
ret
in
int
scas
aaa
lods
fwait
jg
jmp
xchg
fsts
shll
data16
push
dec
push
push
and
add
sbb
insl
fcomps
ds
shlb
xor
test
pop
add
and
jg
jp
or
pop
dec
push
and
jecxz
mov
xchg
lret
clc
jnp
iret
in
jno
push
movsl
nop
cltd
jo
aas
data16
jg
xlat
mov
sahf
xor
mov
pop
dec
jl
push
pop
loope
inc
pop
xchg
fisttpl
adc
leave
fwait
jecxz
dec
pop
or
xor
xchg
mov
icebp
in
and
movsb
sbbl
in
scas
aad
stc
push
negb
popa
lea
gs
mov
rcrl
xchg
or
cmpsl
cmp
push
push
out
mov
mov
cld
push
push
repnz
stc
lret
outsl
pop
loop
pop
xor
addr16
dec
test
cmpsb
sbb
pop
iret
stos
adc
xor
or
ljmp
pop
mov
add
stos
dec
imul
mov
movsl
pusha
cmp
out
mov
nop
mov
sbb
inc
rcrb
dec
cmpsl
inc
cmp
push
xor
sbb
int3
loopne
dec
dec
stc
aam
push
ror
add
dec
imul
stc
jg
dec
outsl
adc
movsb
aas
subl
incb
in
test
sub
popf
sbb
sbb
sbb
sbb
je
scas
push
or
sbb
mov
push
adc
mov
push
sti
inc
jae
dec
outsb
lods
xor
mov
es
cmp
xchg
lea
cmp
push
lahf
mov
pop
insl
addl
shll
adc
enter
test
jnp
mov
mov
es
repz
scas
cmc
xor
mov
ja
xor
mull
jg
sbb
pushf
adc
inc
lods
jecxz
cltd
repz
mov
and
outsb
insb
lahf
pop
push
push
push
outsb
je
in
pop
xchg
push
dec
insb
and
sub
pop
sti
stc
std
cmpsl
mov
xor
fs
test
addr16
xchg
lret
int
mov
hlt
xchg
lret
sahf
mov
nop
stos
jo
and
add
jl
fdivr
leave
gs
mov
and
add
fcomip
adc
push
push
cmp
add
loop
jno
mov
mov
movlps
fmuls
jo
clc
ds
inc
js
dec
adc
rol
xor
arpl
imul
ja
push
cld
cmp
ljmp
test
pop
push
pop
cmp
xor
or
jno
outsb
jge
jae
fwait
jmp
cs
push
mov
cltd
lock
ds
jne
sub
bound
mov
cmpsl
sub
hlt
cmp
and
sarl
push
inc
jmp
xor
bound
push
lods
xor
cmp
jl
sub
fnstsw
stos
push
addr16
cld
adc
xor
inc
inc
push
and
xchg
add
repz
ret
jbe
mov
xchg
sub
mov
jo
pushf
push
pop
xchg
mov
call
outsl
adc
cmp
mov
inc
cmc
popf
fs
jo
lock
cmp
in
lea
loopne
nop
call
xchg
push
test
sbbb
cmp
test
cmp
jmp
stos
and
loopne
and
sub
sub
xchg
and
into
sbb
push
cli
push
and
sbb
or
push
sbb
in
mov
shrb
fs
and
push
dec
jge
xor
out
leave
sbb
outsl
xor
lea
enter
sbb
inc
enter
loopne
repz
jno
cs
mov
adcb
xchg
sahf
out
aam
push
sub
push
nop
and
push
aas
shll
and
xchg
pushf
mov
pop
mov
aam
mov
jne
mov
jo
lea
mov
arpl
lods
and
inc
shrb
and
loope
or
pop
mov
cmp
stc
insb
sbb
js
sub
or
daa
jae
sbbl
movsb
into
fidivrs
iret
add
movsl
push
std
hlt
pop
mov
es
das
sub
lds
sti
iret
clc
andb
xchg
icebp
outsl
pusha
in
sbb
jmp
lds
push
int3
not
mov
adc
out
inc
xchg
pop
adc
or
sbb
ds
fwait
adc
int
mov
icebp
stos
mov
jle
out
dec
mov
jnp
or
mov
imul
inc
ljmp
dec
sbbl
pop
fs
out
mov
add
xor
scas
xor
sub
pop
mov
and
dec
aaa
hlt
cmp
fwait
inc
jmp
stos
jecxz
dec
test
mov
mov
push
push
sarl
push
fbstp
insb
lret
jae
hlt
mov
push
pop
jne
adc
jb
mov
lds
gs
arpl
lea
imul
xlat
scas
push
cmpsb
cld
ret
sti
mov
in
scas
lret
or
lret
pop
cmp
jl
fldt
adc
push
lods
xor
call
cmp
mov
mov
jg
lret
fidivs
pop
mov
cld
rclb
dec
jle
pop
inc
mov
in
lcall
popf
xchg
xor
in
cmp
sub
and
mov
in
jecxz
mov
sub
cmp
ja
imul
xor
bound
stos
push
aas
mov
pop
jo
add
inc
inc
pusha
sub
push
mov
xchg
outsb
cmp
sub
adc
mov
aad
xor
push
aas
movsb
enter
sub
rcrb
mov
outsb
stos
cmp
mov
pop
xor
sbb
pop
inc
loop
imul
daa
fistl
sbb
stos
and
inc
and
out
popa
and
mov
mov
add
adc
mov
out
cld
shlb
and
testl
mov
adc
jns
mov
ret
xchg
ficoms
rolb
dec
jns
dec
xchg
scas
scas
jmp
mov
setb
mov
push
ret
repnz
pop
adc
gs
clc
sbb
in
sub
mov
adcl
push
jmp
sti
mov
lock
pop
cmp
cmc
mov
jne
ja
pop
les
addr16
xor
decb
and
fiaddl
pop
xor
mov
xor
popa
pop
adc
hlt
adc
out
jle
scas
lret
cli
je
mov
adc
leave
lret
inc
out
xchg
pop
scas
call
xchg
jl
inc
rcrl
cmpsl
cltd
add
das
hlt
leave
push
inc
pusha
sti
stos
lcall
addl
push
push
mov
je
cmp
cmp
js
cmp
dec
or
pop
aad
cmp
jo
mov
xchg
add
cltd
xor
movsb
inc
insb
insl
addr16
lcall
pop
xor
fdivrs
imul
jno
push
in
imul
pop
fidivs
and
mov
mov
dec
pushf
dec
test
stos
in
fists
mov
mov
aad
test
cmc
xchg
lods
jmp
cmp
jb
jp
repnz
or
lcall
sbbb
out
das
cmp
sbb
es
mov
or
jle
jnp
push
mov
dec
nop
mov
andb
adc
icebp
int3
mov
fwait
sbb
jno
and
pop
jb
and
sub
sbb
jmp
mov
in
jbe
adcb
int3
and
xchg
add
sub
pop
mov
fisubs
pop
push
movsl
cmp
fwait
dec
xchg
ret
and
out
out
rorb
dec
pusha
pusha
hlt
dec
loopne
int3
or
inc
gs
pop
cmc
aad
dec
xor
scas
scas
out
mov
fisubrl
mov
int
mov
push
sub
test
leave
inc
insl
xchg
mov
inc
popf
loopne
inc
shlb
out
ret
fstps
push
lret
jmp
add
loop
daa
push
scas
insl
cmp
stc
es
mov
xor
xor
stc
ret
xchg
in
cmp
cmc
rcr
test
jno
jae
mov
sub
xchg
pop
mov
and
into
int
hlt
je
out
aad
cmpsb
xor
aaa
sbb
orb
cmp
and
stos
pushf
lods
loop
pop
mov
jno
cld
mov
loope
adc
cmc
test
dec
xor
pop
bound
cmp
cmp
pop
xchg
push
in
test
scas
xor
clc
lret
out
add
loopne
xchg
sub
ja
pop
xor
lret
insb
pop
push
and
insb
push
dec
mov
pushf
xchg
lahf
mov
pop
imul
adc
cmc
fisttpll
mov
lcall
mov
ret
pop
int3
into
mov
jmp
rcrl
lret
movsb
push
push
or
mov
movsb
imul
mov
inc
cltd
sub
xchg
dec
mov
stc
ja
flds
jge
mov
popl
lods
mov
cwtl
sbb
xor
das
sbb
stos
mov
sarl
shll
mov
jns,pn
cli
inc
ja
fs
xor
push
imul
cmc
ret
cmp
shlb
stc
pushf
shrl
fmul
dec
addr16
shlb
jns
setns
lods
pop
push
mulb
popa
imul
sahf
add
loope
sub
lret
fcoml
pusha
pop
leave
enter
adc
inc
adcl
loope
lahf
add
data16
xor
xor
scas
aas
adc
into
jmp
cmc
push
jbe
rol
push
in
mov
lock
add
stc
sbb
loopne
xchg
out
rep
add
mov
lds
xchg
in
dec
sub
xorb
js
pop
pop
shl
sub
push
paddsb
int
test
in
outsl
lds
call
sti
mulb
push
ljmp
mov
mov
loopne
push
aaa
push
xchg
sub
push
push
sbb
sbb
and
adc
mov
xchg
loope
sub
mov
and
or
out
inc
mov
in
cmp
cmp
pusha
lret
xchg
lret
inc
std
pop
inc
jl
ja
push
sub
fldcw
std
adc
push
jns
cmpsl
cmp
jmp
call
mov
or
lahf
and
incb
ljmp
ss
incb
add
pop
outsl
add
jns
sub
mov
in
inc
rolb
out
fildl
xor
pop
mov
pushf
mov
lcall
fcmovu
in
adc
nop
dec
popa
rol
xor
adc
add
lods
jno
fstp
sbb
cmp
sub
jb
les
cwtl
insb
ja
shrd
jle
lahf
iret
movsb
xor
push
mov
dec
xor
sbb
ret
mov
xchg
mov
sbb
dec
mov
out
mov
pushf
cmp
outsb
and
xor
mov
sub
lret
fisubl
cmp
lcall
add
sbb
adc
scas
loope
mov
jnp
sbb
xchg
mov
cmp
xchg
or
mov
dec
cmp
loope
ret
or
push
xor
int3
push
cltd
cmp
inc
sbb
sub
aad
pop
out
mov
fdiv
imul
pop
add
addl
xchg
jmp
xchg
jmp
adc
adc
loop
fsin
lock
popa
negl
pop
imul
mov
xlat
shlb
ja
or
push
dec
push
dec
shrb
fisttpl
jo
insb
std
lods
inc
jle
insl
mov
ja
fidivrl
cs
mov
cmp
dec
pop
insb
pusha
pusha
loopne
mull
xlat
cltd
out
fmulp
sub
push
daa
xchg
cmp
inc
push
pop
pop
out
cmpsl
xchg
inc
lock
inc
mov
xchg
incl
out
cmpsb
imull
hlt
mov
aad
mov
pop
pop
push
xor
enter
loop
lods
jbe
jp
call
rorl
and
fcomps
out
cmp
dec
icebp
add
jo
fcoml
std
popa
dec
gs
sbb
icebp
leave
fdiv
add
pop
mov
mov
inc
sub
clc
fadds
shl
int
adc
pop
push
insb
inc
and
or
inc
adc
je
mov
int3
push
xor
sbb
push
sub
mov
jecxz
fidivrl
aas
mov
mov
jge
xchg
push
jne
je
xor
ljmp
pop
fists
ds
orb
adc
cld
ja
pop
sbb
pop
fnstcw
mov
pop
or
test
jge
sub
inc
lock
add
and
fs
pop
lret
cmc
clc
mov
aas
mov
ret
pop
dec
loope
out
push
fildl
lock
fmul
push
dec
ret
sub
dec
je
popa
ret
adc
gs
jecxz,pn
sbb
xchg
xor
lods
repz
and
xor
and
sub
or
rol
or
aaa
iret
xchg
sub
cmp
push
popf
and
xor
sub
pop
fldt
loopne
push
icebp
outsl
adc
xchg
add
mov
insl
push
jns
inc
nop
sub
hlt
or
stos
mov
cmp
sub
out
jb
mov
or
jno
jmp
scas
sbb
xchg
sti
daa
push
lret
cli
cld
mov
ja,pn
clc
js,pn
gs
jb
xchg
xor
xchg
and
pop
sub
mov
pop
adcl
shlb
xsha1
cmpsb
dec
orb
js
lcall
leave
pop
mov
pop
adc
cmpsl
pop
test
lahf
fistl
mov
push
sub
and
into
xchg
loopne
mov
fwait
push
jo
pop
out
pop
testb
imul
sub
or
ds
dec
xor
adc
mov
or
das
js
dec
mov
jo
mov
push
loopne
sbb
loopne
mov
or
loope
push
dec
inc
xor
pop
xchg
rolb
inc
xor
dec
lock
pop
fstpl
les
in
stos
pop
addb
cmpsl
inc
inc
test
imul
xchg
shl
push
mov
daa
jl
dec
jns
sbb
fisubs
testb
mov
jecxz
gs
aad
mov
sbb
sub
mov
or
pop
adc
inc
mov
cld
add
andb
cmp
ret
ret
aaa
or
leave
cmp
out
dec
cwtl
repz
stc
jmp
std
fs
mov
icebp
pop
xchg
mov
mov
popf
fldt
add
add
mov
sbb
fucomi
mov
push
or
adc
sub
xor
stos
daa
pop
dec
inc
jmp
cmp
push
sbb
xchg
test
outsl
lcall
faddl
xchg
rcl
mov
pop
jbe
ss
fstpl
and
pop
push
fildl
mov
jns
jl
jnp
or
adc
test
pusha
dec
pop
cli
loop
jge
mov
ret
push
bound
and
push
xchg
test
mov
mov
insl
in
push
daa
sub
fs
test
loope
nop
add
es
std
or
aas
cltd
shl
aam
call
aaa
pop
xor
sahf
clc
sbb
xor
xchg
pop
xchg
adc
push
inc
enter
hlt
out
shll
and
lods
sub
mov
repnz
jns
push
mov
add
movsl
and
lahf
push
lcall
jno
orl
xor
ss
and
pop
jle
pusha
fistl
loopne
cmp
xchg
inc
sbb
loop
in
xchg
insl
rclb
arpl
in
je
jle
mov
fbld
push
out
dec
or
adc
xchg
stos
cmc
stos
jno
in
inc
and
push
cmp
pop
subl
sbb
mov
xor
stc
ja
mov
bound
add
sub
ss
dec
dec
test
enter
sti
jnp
addr16
lods
icebp
add
lret
out
leave
stc
jne
jl
sti
es
ror
lock
loope
scas
fists
inc
out
sub
lock
jge
sub
jmp
sub
out
test
cmp
clc
imul
ret
pop
mov
mov
ja
inc
stos
cmpsb
adc
push
paddq
aad
repnz
adc
iret
pushf
movsl
adc
mov
add
fnstcw
pop
hlt
push
mov
je
sbb
cli
lds
and
repnz
imul
xchg
xor
xor
xor
int
dec
ficompl
int
add
sbb
inc
movb
in
lods
jae
aaa
jl
inc
xor
or
or
cmp
stos
dec
adc
repz
outsl
ret
loopne
xchg
sahf
addb
daa
jg
mov
jo
cmp
mov
ret
mov
stos
fdivrp
ret
adc
xor
jb
adc
push
mov
mov
movb
in
insb
fwait
ret
movsb
mov
or
inc
push
dec
icebp
pusha
iret
jmp
pop
hlt
outsl
sub
dec
jne
into
shr
out
xor
les
les
xlat
dec
jb
das
mov
popa
mov
xchg
mov
or
xchg
xchg
into
and
lret
xor
mov
fisttpll
mov
mov
shll
jno
test
out
cmpl
aam
in
imul
pop
out
test
sub
jecxz
cmpsb
push
jge
data16
movsb
movsb
and
mov
jg
fsubp
ss
bound
nop
xchg
movsb
pop
jmp
in
icebp
popf
cmpsl
mov
lea
push
mov
push
dec
fdivs
stos
in
mov
xchg
movsb
jns
test
inc
in
cmpsb
xlat
arpl
repz
inc
sbb
sub
ret
movsb
pusha
aam
stc
or
add
sub
mov
adc
mov
mov
mov
mov
aad
mov
xor
lahf
or
xchg
push
xor
lcall
and
mov
mulb
movsl
shlb
cld
sbb
cmp
and
dec
repz
push
movsb
lahf
out
jnp
aas
fsubr
movsl
push
leave
negb
sub
pop
push
dec
cmp
mov
js
fcoms
addr16
jno
xchg
mov
jp
sub
addr16
les
outsb
xor
cli
lock
xchg
rolb
dec
hlt
test
loop
out
cmc
outsb
insb
cmp
cmp
rcrl
or
jecxz
arpl
jne
xlat
sbb
jno
xor
xchg
fidivl
icebp
mov
sbb
jno
leave
fs
je
push
movsb
push
jne
push
or
fdivrs
push
movsb
or
jl
ja
mov
pusha
lret
mov
push
test
pop
cmp
jg
insl
add
sbb
cltd
push
loope
lds
lcall
shll
shrl
push
lret
sub
add
xchg
fisttps
mov
jl
cmp
jae
lods
popa
sbb
mov
jo
jecxz
mov
je
cwtl
push
pop
add
jno
cmc
int
push
inc
outsl
out
or
int
negb
std
sbb
mov
mov
dec
cmpsl
sub
les
dec
mov
js
cmp
and
push
insl
insb
test
mov
sub
mov
gs
not
mov
pushf
bound
sbb
in
fsin
cli
sbb
pusha
pop
ja
movsb
xorb
jb
add
les
and
pushf
cmpl
mov
adc
jg
xchg
fsts
jge
mov
repnz
cs
mov
rclb
xchg
pop
pop
cmp
and
adc
loop
push
out
dec
add
push
scas
push
push
dec
cltd
fildl
push
sbb
testb
shll
sarl
int3
test
inc
dec
jmp
pop
in
sti
adc
mov
mov
dec
mov
enter
push
xlat
and
fisttpll
jecxz
mov
fldt
jecxz
lds
es
cli
arpl
pop
push
cmp
pop
iret
mov
jmp
mov
mov
fdivrp
mov
ljmp
or
jb
or
push
inc
dec
aam
pop
mov
test
outsb
lock
add
pop
adc
rorl
dec
cld
fcoml
jg
rol
inc
jbe
imul
cmpsb
push
jmp
loop
jne
ja
mov
lahf
or
gs
adc
movsb
sub
mov
cltd
sub
and
test
jne
sbb
imul
stc
push
jns
and
arpl
cmp
lret
mov
push
mov
je
aam
into
cs
mov
mov
or
push
test
out
int
mov
orb
pop
xchg
cli
push
sbb
and
push
push
aam
adc
ret
xchg
xchg
cld
cmpsl
pop
cwtl
aas
xchg
sub
repz
cli
arpl
testl
mov
outsb
cs
pusha
jmp
popa
mov
jbe
loopne
push
iret
sub
xor
lret
xchg
bswap
out
dec
fimull
mov
aad
loopne
fwait
ds
add
xchg
movsl
fdivrs
out
enter
and
cmp
leave
jle
mov
mov
or
adc
xchg
fnstcw
js
jb
stos
js
mov
out
movsl
xor
in
dec
movsl
mov
sub
aas
xor
sahf
movsl
ficompl
mov
mov
xor
cld
xor
imul
mov
mov
cmp
mov
mov
aaa
scas
pop
mov
push
inc
jle
inc
int
stc
and
lret
shrb
fdivrp
xor
jnp
cmpsb
popa
mov
cli
sub
sub
faddl
insb
pop
jge
cmc
adc
loop
aam
sarl
mov
out
sbb
xchg
rolb
testl
repnz
jbe
outsl
mov
scas
pop
sub
xchg
pop
and
loope
sub
jmp
ljmp
fs
popa
fwait
sbb
cmpl
sub
or
and
movsb
pushf
incb
das
cmp
pop
addl
imul
ficomps
cmp
leave
pop
cltd
adc
add
pop
test
orb
fmul
gs
pushf
jb
pinsrw
mov
out
mov
lds
std
mov
mov
loopne
out
je
cmc
test
out
cmp
mov
jecxz
or
rclb
mov
sbb
inc
xchg
mov
lock
repz
mov
shlb
es
push
jmp
inc
jne
adc
inc
dec
into
push
inc
cmp
movsb
test
adc
fnstsw
fidivrl
icebp
cs
push
xor
mov
cli
mov
mov
and
xchg
sar
in
sti
and
and
in
ds
ds
or
leave
push
or
xor
insl
jb
mov
mov
sti
outsl
sbb
out
out
in
out
rcrb
stc
lret
push
repnz
sbb
lds
push
add
enter
pusha
out
test
cmp
addb
ret
test
jecxz
pop
lods
outsb
lods
add
sub
decb
push
out
jmp
jge
cmp
bound
aas
xchg
data16
sahf
ss
ret
cmp
int3
cmp
fnstcw
leave
sbb
xor
lods
aam
add
wbinvd
fidivrl
loop
out
mov
mov
adc
jno
pop
mov
sbb
popa
xchg
test
cmp
ret
dec
cmp
nop
mov
pop
icebp
imul
hlt
inc
xchg
jb
inc
test
push
push
pop
or
shl
or
sbb
jo
xchg
arpl
sbb
cmc
mov
fs
stc
jge
add
faddl
sbb
mov
loopne
mov
out
scas
sbb
sbb
call
shlb
xor
and
lods
jg
std
pop
aaa
sub
push
xchg
push
cld
dec
cli
dec
stc
clc
ret
imul
decb
in
and
pushw
bound
pop
pop
mov
push
xchg
dec
aaa
and
sub
adc
fisttps
lcall
dec
pop
sbb
xchg
jno
cmp
pop
loope
std
mov
mov
loopne
aas
test
pop
mov
lret
in
inc
testl
lea
daa
jo
aam
imul
ds
add
sbb
add
dec
jp
dec
sub
es
cmp
lods
mov
rdmsr
sahf
mov
inc
inc
lds
mov
sub
jne
fadds
mov
mov
or
adc
pop
rcr
push
cmpsl
pop
fdivp
pop
dec
aad
std
leave
fimull
aaa
jae
mov
jns
or
xor
dec
jg
push
jno
cltd
cli
movsb
dec
lds
push
ja
adc
jmp
movsl
or
ja
xchg
scas
xchg
rorb
rorb
data16
push
es
aas
adc
js
cltd
sub
add
enter
push
sub
aam
pop
mov
out
mov
and
dec
test
loop
jo
insl
sub
xor
stos
mov
xor
add
rcl
cmp
aas
into
xchg
mov
sub
loopne
add
call
push
mov
scas
cld
add
sarl
fidivs
sahf
mov
daa
or
ret
mov
test
imul
int3
aaa
inc
cmp
adc
insl
pop
aam
mov
jae
push
push
loope
mov
lret
pop
das
xchg
fcmovne
test
cmp
and
xchg
out
inc
mov
bound
or
inc
jb
je
jno
in
fidivrs
mov
rcr
push
ss
inc
test
mov
push
pop
testb
xchg
ret
idivb
sub
cwtl
dec
out
nop
pop
inc
ret
mov
xchg
push
sub
lcall
or
repnz
mov
push
mov
fwait
scas
cltd
mov
daa
adc
jnp
in
clc
inc
cmp
xchg
adc
push
fsubl
inc
lret
lret
or
and
hlt
push
jb
sarb
cmpsl
cmp
out
jmp
aam
xchg
push
mov
repz
inc
sub
cltd
pusha
rorb
fwait
gs
add
xor
push
inc
mov
fnstenv
push
and
pop
dec
fisubrl
enter
loope
scas
mov
jl
inc
test
or
sub
imul
adc
cmc
mov
outsb
inc
lock
aad
fwait
in
jle
stc
in
xor
push
pop
stc
mov
push
ret
clc
pop
cmp
ss
insl
adc
cmp
sub
cmp
shll
lods
pop
pushf
setae
in
inc
pop
sub
lcall
fists
lcall
add
xchg
stos
gs
mov
lret
seta
lds
lea
jp
push
mov
cmp
fisubs
adc
xor
pop
push
sti
fs
xorl
or
loopne
inc
test
adc
mov
lds
dec
sbb
mov
inc
and
fsubrs
jns
xchg
popf
stos
packssdw
imul
mov
mov
mov
sub
add
mov
mov
sub
hlt
sbb
and
cmp
in
cli
icebp
out
pop
ja
or
fldt
mov
add
in
lock
sub
xor
test
in
faddp
mov
hlt
movsb
stos
fdivl
ret
xchg
cld
xchg
add
shll
adc
xor
lret
in
adc
pushf
mov
mov
adc
test
jecxz
jno
outsl
test
mov
scas
sbb
movsb
and
add
icebp
push
subb
cmc
int
mov
rorl
out
push
lcall
add
lods
mov
xor
fstpt
stos
ret
jge
adc
cmp
dec
mov
jb
push
sub
cmp
sub
sub
xchg
subb
mov
rcrl
mov
adcl
dec
adc
das
xchg
mov
and
xor
adc
insb
inc
and
iret
arpl
or
enter
inc
xchg
daa
js
push
jp
bound
imull
mov
lods
pop
fstpl
xchg
xlat
lret
hlt
ret
lcall
mov
push
push
fidivrs
inc
dec
xchg
push
ret
insb
into
hlt
lea
cmp
into
xchg
jbe
mov
xchg
scas
mov
loop
mov
sti
ljmp
push
stos
sub
shlb
jne
xor
pusha
test
nop
cmp
dec
push
sub
iret
cmp
jb
in
je
mov
xchg
and
out
or
mov
shrl
out
xchg
push
xlat
popa
sarl
inc
sbb
stc
stc
pop
or
dec
mov
or
or
sbbl
test
pop
incb
popf
xchg
and
add
xlat
xlat
mov
cmpl
fnstcw
inc
xor
add
jbe
nop
sbb
and
nop
aam
jno
and
pusha
fs
mov
in
fldcw
push
mov
push
xorl
pop
nop
and
addb
pop
imul
mov
lahf
dec
mov
xchg
or
lods
cmp
sbbb
repz
loopne
cmpsb
shlb
lock
jae
adc
xchg
sbb
inc
mov
xchg
pop
push
jecxz
sbb
aaa
pop
xchg
or
mov
fdivrl
jb
ss
sti
cmp
lcall
andl
cwtl
pop
subb
lret
add
inc
xor
popf
inc
pushf
dec
mov
getsec
and
in
rorb
imul
les
imul
mov
push
dec
adc
pop
xlat
inc
shlb
mov
add
pop
inc
push
fsubrl
mov
cltd
pop
mov
mov
arpl
mov
clc
leave
mov
nop
sub
or
jp
scas
ret
push
mov
sar
add
pop
add
inc
mov
sbb
fmull
repnz
in
push
jb
push
cld
add
cmp
sub
xchg
xchg
xchg
push
aas
std
mov
sar
pushf
add
lcall
hlt
movsb
mov
sbb
lahf
test
xchg
mov
mov
jl
mov
arpl
dec
jae
sbb
aas
test
dec
bound
cli
sbb
sub
cmpb
lahf
cmp
jo
push
xchg
insl
fdivrl
mov
pop
mov
cmc
or
cmpsb
fisubrl
popa
out
aaa
sbb
ja
jno
xlat
hlt
je
inc
stos
jns
test
aad
mov
gs
jne
cmp
mov
rclb
test
jmp
lahf
xchg
data16
aas
andl
ficompl
mov
pop
push
daa
in
js
and
fbld
mov
mull
and
fbld
xor
in
sbb
mov
pop
xchg
out
jbe
test
sbb
add
in
mov
loopne
cwtl
nop
inc
jb
loop
add
mov
xchg
adc
stc
cmp
mov
pop
cmc
add
cmpsb
mov
aas
loopne
insl
pusha
aam
fcmovnu
mov
cld
lds
inc
pop
and
lods
out
sbbl
mov
das
lea
mov
movsl
out
dec
push
loop
and
jecxz
data16
decb
xchg
cmpsl
icebp
imul
arpl
out
mov
adc
and
arpl
push
scas
andb
adc
mov
lret
xchg
pushf
mov
mov
test
jnp
andb
jp
insb
inc
imul
ss
add
fcmovbe
jl
and
dec
sbb
loopne
inc
clc
enter
stc
aaa
mov
je
inc
jl
and
xor
jne
push
mov
lcall
pop
imul
push
call
sub
test
nop
cmp
repz
arpl
stos
add
leave
call
jmp
xor
jb
push
jno
push
aaa
fwait
lods
xlat
cmp
cmp
jmp
in
popf
mov
pop
jmp
fwait
xchg
add
sti
push
mov
call
icebp
mov
mov
fcmovnu
mov
inc
pop
mov
mov
jns
dec
xchg
aad
movsb
stc
mov
mov
push
jb
sub
lods
pop
pushf
add
cmp
inc
add
test
jp
sbb
call
mov
sub
pop
mov
das
sub
vpsrlw
into
into
adc
jne
adc
xchg
mov
int
jg
and
fucom
andb
cmp
xor
stos
subb
jp
in
mov
add
cwtl
xor
out
jp
add
jg
or
push
mov
jmp
mov
ja
pop
fsubp
das
sub
lock
jle
cmp
mov
lods
cltd
ret
frstor
fsubrl
inc
pop
mov
mov
mov
jno
or
jg
cli
xor
cltd
inc
mov
mov
shll
add
fldcw
lds
mov
sub
dec
aad
jecxz
xchg
mov
andb
xor
xor
mov
les
jnp
notl
out
stc
and
or
sbb
pop
mov
mov
cs
sub
push
sbb
jne
lret
es
jno
leave
and
bound
ljmp
scas
test
jne
jle
out
dec
movsl
arpl
mov
push
and
rorl
pop
arpl
jle
sbb
dec
into
dec
ror
aad
cmc
mov
pop
dec
roll
ja
cs
pop
inc
movsb
insb
lret
loop
icebp
cmp
mov
dec
ret
ret
or
aaa
sbb
jecxz
jno
cmp
loop
xchg
scas
mov
iret
out
xchg
aaa
pop
xorl
mov
mov
cmp
push
cmp
jle
notb
negb
pop
fiaddl
mov
cli
test
mov
pop
jno
push
push
rcrb
fdivrl
sbb
insl
cltd
test
pop
in
pop
dec
push
ja
mov
pop
data16
bound
pop
mov
jae
incl
aad
aaa
or
jno
sbb
inc
adc
jl
push
and
enter
jecxz
cmc
lret
adc
lret
insb
mov
divl
xlat
in
mov
pop
and
and
sahf
and
iret
iret
repz
ret
loop
test
sbb
sub
ret
outsl
out
fs
mov
xchg
jns
leave
ret
icebp
pop
jns
mov
pop
fs
jno
jbe
out
testl
jp
ljmp
movsl
fdivrs
movsl
add
push
std
push
push
ljmp
mov
outsb
pop
stos
rorl
cmp
xchg
push
dec
pop
fmul
lea
xchg
aad
push
fimull
lcall
pop
push
xchg
adc
add
in
or
adc
test
push
mov
jg
out
push
mov
out
in
bswap
inc
ds
push
int
adc
mov
outsl
inc
notl
sahf
mov
test
repnz
enter
in
loopne
js
out
arpl
inc
je
leave
lret
sub
test
incb
inc
enter
shrb
inc
add
sub
rcr
mulb
push
xchg
mov
mov
mov
mov
lods
fs
repz
and
adc
daa
sub
mov
sbb
pop
hlt
cmpsb
mov
mov
dec
push
xor
mov
and
pusha
cmp
jle
stos
repnz
cmpsl
incl
in
call
out
pop
ja
outsl
aad
stos
fldln2
shrb
inc
sub
hlt
imul
inc
mov
add
dec
aam
enter
jge
cmp
mov
push
jmp
iret
pushf
lret
sbb
push
mov
adcb
inc
in
in
cmp
mov
pop
incl
mov
cmp
xchg
push
or
hlt
nop
and
subl
outsb
or
test
dec
pop
lods
push
out
jmp
xor
jp
pop
pop
fadds
fbld
mov
push
cli
sub
sbb
mov
pop
push
cwtl
adc
push
scas
decl
jmp
leave
push
rorb
clc
nop
mov
rorl
cmpsl
push
jmp
xchg
lods
push
lahf
jnp
xchg
push
xchg
cs
sub
pop
test
jmp
or
or
or
arpl
repz
out
out
popl
data16
mov
adc
or
push
inc
movsl
sahf
rorl
ss
inc
arpl
cmpsb
adc
jl
in
orl
lods
jnp
xlat
ljmp
mov
das
into
push
push
test
out
jno
mov
xor
dec
push
jge
lahf
xor
mov
pop
jecxz
add
push
fstpt
pop
flds
imull
out
movb
sub
push
adc
pusha
push
sub
push
sahf
fsubrs
aas
sbb
outsb
call
outsb
push
mov
rcrb
push
push
imul
aam
rcr
pop
pop
rcrl
mov
and
bt
fmull
xchg
loopne
out
dec
stos
popa
in
inc
nop
repnz
repnz
add
sub
mov
sbb
movsl
jg
fistpll
cmpsl
cld
and
cmp
xchg
jae
dec
push
rorl
push
cmpsl
enter
cmp
cmp
mov
into
fwait
jp
mov
dec
into
add
pop
sub
lcall
xchg
out
cmp
loopne
icebp
mov
add
loopne
adc
push
inc
pop
pop
and
xlat
test
scas
sub
in
repnz
orl
fistl
mov
sti
dec
push
push
rcrl
sti
push
adc
jle
pop
call
rcll
test
add
xchg
lods
cld
inc
test
fcomps
addb
int3
dec
xor
inc
ret
mov
gs
mov
xchg
jo
outsl
push
cmc
dec
jmp
sbb
popa
insl
fstpl
mov
sub
and
nop
stos
mov
sbb
push
fstl
jp
xchg
push
dec
jb
pusha
daa
nop
pop
push
jge
ret
fstpl
cmpsl
mov
pop
popf
lret
mov
push
lahf
pop
and
cld
cmpl
rorl
inc
lret
das
jge
insl
mov
cmpb
test
xor
jbe
repnz
jnp
sbb
and
clc
sbb
fildl
into
aas
mov
jae
out
xchg
jne
jns
shlb
imul
sub
adcb
imul
pop
cmp
push
icebp
arpl
test
pop
inc
out
iret
lods
dec
push
repnz
sub
icebp
lea
insb
add
mov
in
fldenv
dec
xchg
cltd
iret
sbbb
xorb
popf
mov
cmpsb
xrelease
gs
test
test
pop
pop
sbb
stos
aam
call
xor
nop
out
xor
mov
mov
mov
mov
loopne
pop
sbb
sbb
popf
push
or
push
mov
xlat
cmp
es
cwtl
push
maskmovq
stos
xor
adc
pop
sub
test
add
dec
loopne
repz
or
es
mov
or
gs
std
imul
test
stos
adc
cs
mov
sbb
cltd
push
xchg
add
int3
push
push
negl
es
iret
xor
leave
mov
ss
sub
mov
fnstenv
std
inc
push
stc
and
fiaddl
cli
sub
jecxz
inc
dec
jl
pop
test
adc
sub
xor
jno
stos
test
dec
mov
mov
xchg
mov
push
sbb
or
cmp
cmp
cmp
inc
pop
xor
mov
cmp
mov
pushf
xor
fs
sti
int3
icebp
pushf
push
clc
aam
inc
in
pop
lea
test
sbb
insb
imul
fnsave
arpl
shrl
jno
in
mov
mov
jb
dec
jbe
cli
push
aaa
fadds
aad
rcll
enter
inc
pop
loopne
cmp
iret
data16
movsl
fst
mov
mov
sub
push
lcall
aaa
iret
cmc
into
xchg
sub
loope
mov
loop
arpl
jl
adc
pop
fisubrl
cmp
adc
aaa
cmp
nop
stc
arpl
pop
adc
add
mov
movsl
lcall
mov
loopne
es
push
xchg
xor
test
jl
sbb
xor
mov
mov
inc
hlt
clc
xchg
cmp
add
aaa
pop
gs
inc
shrb
push
pop
xlat
cmp
xor
adc
xor
mov
sub
cmc
adc
xor
sub
ja
adc
cmp
mov
cmpsb
mov
sbb
xchg
cmc
mov
mov
insb
test
push
in
in
rcrl
jae
push
popf
push
jmp
sub
push
mov
mov
sar
aaa
or
xor
jne
dec
dec
inc
xchg
cltd
xchg
outsl
sub
mov
or
push
popf
sub
icebp
jnp
outsb
pop
dec
fsts
imul
mov
lret
mov
mov
inc
mov
mov
pushf
add
movsl
inc
stos
scas
aad
or
push
xadd
cmp
inc
lcall
jmp
lods
mov
out
inc
mov
aaa
adc
loop
fstl
mov
cltd
pop
xor
pop
outsb
pop
or
sub
js
mov
loopne
out
popa
movsl
dec
adc
cmp
pop
jge
cmp
popa
aas
xor
mov
xor
mov
hlt
stc
outsb
scas
ljmp
sbb
je
fbstp
jg
pop
dec
or
mov
pop
push
lods
pop
scas
mov
cli
out
mov
mov
leave
cwtl
dec
lcall
xor
adc
addl
jne
cmp
scas
mov
jmp
ja
clc
cmp
pop
call
jmp
inc
pop
sti
add
push
xchg
push
lods
jns
mov
shll
stos
aas
outsb
jg
or
notl
jle
out
popa
and
jae
cmp
xor
insl
xchg
mov
inc
iret
sbb
jmp
mov
pop
jne
sub
lret
fcomp
mov
addr16
mov
xchg
push
push
mov
ja
divb
push
push
mov
jo
shlb
cmpsb
xchg
sbb
cmp
pop
mov
lods
scas
mov
je
jb
call
aam
ret
stos
cmp
sub
mov
les
repz
ret
xor
lcall
cli
dec
pop
add
inc
xlat
in
mov
fldcw
mov
lahf
xchg
popf
cmp
in
loopne
loopne
sti
and
add
popf
mov
pop
add
arpl
mov
dec
adc
sbb
je
insb
cwtl
push
cmp
mov
dec
arpl
mov
and
int
push
fisttpll
push
mov
pop
xor
fcmove
dec
fstps
mull
rcl
pop
or
push
mov
push
aas
cmp
lods
or
fisttpll
mov
push
sbb
cmp
popa
xchg
xor
inc
outsb
mov
popa
dec
lock
sbb
test
mov
push
xor
xchg
jmp
ficompl
rcr
cli
pushf
cmp
mov
or
and
repnz
dec
aad
lret
je
in
and
aam
adc
mov
ret
and
cmc
fldcw
push
enter
lock
popl
cmpsl
cmp
mov
cmp
insl
adc
jnp
insl
bound
xchg
fdivs
and
pop
mov
sub
jmp
cmp
shll
mov
pop
dec
mov
jle
and
or
sahf
cmc
mov
stos
or
sub
lcall
dec
adc
fistps
dec
jbe
daa
ret
cmp
sub
push
pusha
xor
cmp
cli
xchg
lods
dec
mov
cmp
push
jecxz
cmp
mov
mov
ds
in
adc
push
inc
or
gs
int
pop
mov
mov
push
xor
jl
push
das
stos
cs
ss
pop
das
ss
js
sbb
aam
jp
adc
mov
inc
jbe
je
push
ss
inc
mov
outsl
mov
pop
xchg
push
sar
push
je
ud2
jg
mov
loope
add
mov
pop
lcall
xchg
jl
mov
test
sub
mov
xor
mov
insl
mov
fcmovnb
pop
add
orb
out
sub
pushf
dec
ss
inc
push
pushw
mov
outsl
icebp
jmp
xchg
jae
mov
xchg
and
imul
lea
daa
idivl
addr16
ss
pusha
in
stc
sahf
sbb
std
lods
pusha
mov
js
xchg
push
inc
jnp
fmull
out
in
inc
xor
out
test
aam
cs
sahf
movsb
xchg
fsubrp
ror
add
aad
mov
fcmovu
and
mov
jno
ds
mov
std
daa
pusha
std
jle
jb
into
mov
sahf
push
out
mov
out
add
in
sub
aaa
roll
inc
mov
test
or
aad
sub
outsb
ret
jp
loop
cld
mov
dec
cmpl
lods
inc
imul
and
push
xor
mov
out
sub
mov
mov
mov
cmp
repz
addl
xchg
dec
push
fcmovu
cmp
orb
shll
in
or
sub
cmc
ja
pusha
add
roll
testl
orb
or
xchg
pop
xchg
scas
dec
lret
pushf
loope
inc
lock
arpl
or
cmc
test
or
fs
fdivrs
mov
pop
adc
push
int3
jno
repz
pop
add
and
sbb
lret
cmp
inc
mov
add
lock
or
imul
jge
in
mov
adc
mov
jg
fldcw
clc
or
int
daa
outsb
mov
test
repz
cli
cltd
lods
ja
cmp
xchg
scas
push
inc
dec
fwait
dec
xchg
adc
repnz
js
in
and
popa
sub
mov
or
ljmp
fdivs
shlb
std
push
add
icebp
aas
cli
sub
or
scas
jo
loopne
mov
repz
leave
adcl
out
pop
adcl
mov
stos
mov
ss
jns
std
jmp
rcl
sbb
mov
js
fadds
cmovae
jb
ja
adcb
cmpsb
insb
inc
jl
pop
bnd
rorl
das
dec
int
in
stos
sbbb
jne
add
jnp
mov
mov
adc
sbb
jno
fnstsw
jge
xor
jae
orl
in
mov
rcr
pop
jp
flds
adc
add
lods
mov
mov
cmpl
push
loope
jl
rolb
inc
mov
cld
sub
popf
inc
pop
sub
orb
into
and
mov
in
mov
xor
popa
arpl
ret
and
add
movsb
in
mov
std
add
bound
cmpsl
sti
xlat
out
cltd
int
lcall
lahf
pop
fiaddl
mov
fadds
cmp
xor
sbb
mov
xor
push
ja
mov
ja
jp
repnz
cmc
iret
icebp
xor
es
out
mov
test
push
fwait
mov
adc
pop
mov
and
idivl
dec
pop
mov
movsb
or
xchg
popl
mov
inc
in
and
lret
mov
cli
mov
cmpsl
fadds
inc
mov
idiv
mov
daa
jno
jg
mov
push
cmc
push
je
arpl
mov
or
xor
or
test
ljmp
xor
or
adc
sub
inc
pop
cwtl
jg
jl
xchg
es
in
test
push
lahf
adc
push
sub
popf
gs
lcall
rorl
fwait
jbe
xchg
test
pop
jle
jnp
jle
or
push
sbb
jmp
out
inc
mov
pop
xor
xchg
mov
xchg
popf
jbe
push
cld
cmpsl
movb
xchg
jl
rolb
add
jns
insb
lcall
lods
faddl
push
repnz
xchg
outsb
push
cld
dec
dec
pushf
call
xchg
jno
jne
addr16
ljmp
js
test
push
add
lcall
xchg
mov
mov
sub
push
sbb
cmpsb
stos
pop
lcall
jne
sbb
ss
int3
sbb
pop
mov
jb
mov
bnd
scas
cwtl
sub
sbb
aam
inc
das
pop
mov
adc
movsl
pop
sarl
les
cli
fmull
popl
dec
mov
rclb
pop
nop
lret
out
std
scas
ljmp
mov
jne
push
sbbl
stos
rclw
push
jecxz
add
push
pop
lahf
xlat
jne
jge
in
sti
adc
xor
sahf
mov
mov
push
mov
jnp
xchg
mov
add
int3
es
mov
push
push
add
mov
mov
pop
dec
jo
and
and
mov
ret
test
xor
cmp
jp
ficompl
leave
ds
ja
xchg
pop
sbb
adc
pop
mov
scas
mov
pop
jp
push
adc
jno
lret
idiv
mov
mov
dec
adc
std
imulb
or
in
stc
fdivp
pop
int
jmp
lret
dec
jbe
xor
call
xor
and
rol
lret
or
iret
int
mov
rclb
jg
outsl
ret
pop
dec
jmp
sarb
mov
add
outsl
xchg
imul
cmp
xor
and
pop
test
inc
mov
test
divb
fistl
or
frstor
xorb
xchg
mov
ljmp
addb
mov
movsl
mov
xor
and
jl
cmpsl
cmp
xor
mov
xor
xor
cs
mov
inc
into
jae
add
sbb
cmpsb
jle
dec
add
es
xchg
imul
jne
or
add
adc
cwtl
dec
mov
gs
dec
xlat
jb
lods
cmp
mov
aam
les
test
pop
push
sub
xor
push
scas
sub
mov
lds
fimull
popa
mov
into
lret
or
jl
addr16
mov
stos
mov
pop
bound
jae
int3
icebp
lds
xor
test
addr16
adc
int3
inc
insl
xor
adc
inc
inc
mov
jne
dec
sti
orb
rcrl
xor
scas
insb
pop
and
inc
or
cmp
mov
cmpb
pushf
mov
or
iret
sbb
lods
outsl
dec
je
jnp
sub
or
dec
cmp
repnz
imul
std
test
addr16
fsubrl
mov
stos
mov
scas
lret
push
scas
xor
outsl
ljmp
pop
int
mov
or
mov
repz
aaa
add
xchg
mov
sbb
jle
cld
mov
movsl
cld
movsb
ret
pop
les
mov
adc
xor
mov
inc
sbb
jns
pmullw
pop
rcl
lcall
and
push
push
add
or
test
and
pop
add
mov
push
xchg
fnstcw
movsb
jl
js
into
testl
sbb
mov
xchg
adc
pop
roll
addb
addb
idivl
add
cmp
test
xchg
in
icebp
ds
inc
cld
mov
add
xor
gs
xor
repnz
imul
pushf
add
test
sbb
imul
hlt
sub
mov
jmp
jne
leave
adcb
insb
clc
in
xor
inc
adc
cmp
or
dec
dec
aad
mov
mov
mov
mov
nop
int3
call
lods
ljmp
out
std
test
jne
test
add
and
lock
sub
xchg
enter
push
movsb
mov
and
je
fcom
mov
icebp
loop
and
push
cltd
gs
push
xor
rcr
lcall
add
add
sbb
xor
sub
jae
and
sbb
cmp
into
xchg
push
imul
cld
mov
jle
push
dec
shrd
xchg
pushf
dec
pop
ret
pop
scas
mov
ret
pop
add
mov
mov
dec
clc
out
cmpsl
cltd
shll
lahf
test
adc
cli
xchg
sti
jle
jl
nop
xchg
in
mov
lock
pop
adc
add
cwtl
add
xor
data16
lcall
or
imul
xor
mov
dec
arpl
cmp
in
out
cmp
out
dec
dec
mov
adc
arpl
mov
dec
push
lea
mov
sub
test
shrl
pop
mov
ja
sbb
adcb
rol
mov
adc
cmp
mov
roll
sbb
mov
jle
add
or
adc
call
xor
stc
popa
push
mov
stos
inc
jo
and
stc
add
out
rolb
popf
shrb
add
pop
imul
adc
pop
lahf
or
sbb
cmp
flds
pop
mov
dec
mov
pop
add
testw
xchg
jne
aam
ret
insl
jl
or
jmp
sbb
int3
push
xchg
repnz
sub
rorl
jecxz
idivl
in
das
dec
mov
push
mov
push
outsl
jl
mov
inc
sti
or
mov
js
jle
fisubrl
and
lds
pop
jecxz
test
xchg
cmp
popa
add
lahf
imul
inc
mov
cmp
xchg
xor
xchg
daa
add
mov
mov
jp
aam
into
lock
cs
sti
into
inc
aaa
repnz
stc
add
sahf
mov
cmp
push
pop
pop
lcall
leave
orl
in
pop
mov
push
mov
adc
sub
mov
sub
ljmp
cmp
les
call
xchg
xor
movsb
mov
xor
mov
sbb
sbb
inc
pop
mov
dec
pop
sti
mov
mov
sub
xor
xor
clc
insb
and
pusha
mov
mov
les
idivl
pop
shll
das
mov
mov
lds
imul
ss
add
jmp
inc
add
fnstsw
xchg
pop
fcoml
push
jns
test
adc
adc
xor
movsl
adc
call
mov
mov
pop
out
push
inc
popa
bnd
jl
daa
dec
out
adc
sub
in
mov
mov
sahf
out
scas
in
xchg
jne
frstor
and
ss
lahf
adc
fidivrs
and
cmp
addl
lock
cmc
imul
loopne
lahf
pop
inc
stos
roll
xlat
ficoml
or
push
mov
outsb
inc
pop
or
adc
sbb
cltd
sub
mov
lods
cmp
xor
cmpsb
lcall
gs
or
adc
lcall
cmpsb
push
push
adc
fdivrs
sbb
test
shrl
iret
loope
adc
mov
or
inc
push
loopne
xchg
mov
addr16
testl
xor
add
cmpsl
push
adc
mov
ljmp
shll
and
dec
outsl
and
outsb
mov
int
mov
mov
ss
sbb
pop
and
loop
mov
out
dec
cwtl
rorb
dec
adc
in
adc
imulb
add
cmp
mov
lahf
pop
pop
scas
mov
and
sub
stos
iret
jp
gs
or
sub
jecxz
jmp
jle
mov
add
pusha
insb
decl
repz
jecxz
out
mov
jae
cmp
bound
cli
sahf
inc
pop
fnstcw
mov
mov
mov
ljmp
add
ja
fsqrt
adc
dec
pop
aad
outsl
and
dec
outsl
nop
mov
dec
xchg
sub
lock
jl
add
mov
push
dec
out
std
and
and
add
mov
cmp
pop
arpl
ja
jnp
into
leave
invd
dec
je
nop
and
xor
rcl
pop
ss
adc
lock
into
and
xchg
loope
sbb
cmovnp
push
mov
bound
add
pop
lahf
cld
and
call
add
sub
out
adc
loopne
adc
jmp
jmp
cwtl
pop
add
dec
imul
outsb
jne
adc
test
cmp
addr16
imul
push
push
pusha
stc
imul
test
push
aaa
push
push
nop
sbb
in
out
xchg
xor
jge
push
push
test
push
sub
sbb
ficoml
insb
sub
pushf
call
mov
ja
dec
jmp
ja
push
es
lods
mov
cli
out
mov
fcompl
cmp
out
mov
pop
lret
imul
xor
xchg
dec
jno
jo
jno
lea
js
sbbb
sub
pushf
pushf
adc
in
pop
jne
pop
cmp
dec
aas
xchg
inc
jecxz
ljmp
mov
add
xor
call
nop
in
jb
mov
stos
js
into
stos
fnstenv
mov
subb
lea
inc
xchg
mov
dec
mov
std
add
cmp
mov
jl
jb
jno
cli
and
call
cltd
and
imul
push
xchg
inc
fdivrl
sub
sub
in
mov
mov
sbb
sbb
xchg
arpl
cld
stos
sarl
inc
inc
in
cmpsb
in
fs
loope
mov
mov
scas
cmpsl
xchg
cld
lods
dec
cmp
cmc
mov
mov
fcoml
sbb
mov
dec
into
test
xlat
in
iret
test
in
mov
jge
outsb
test
and
add
inc
out
inc
push
sbb
inc
mov
jle
icebp
nop
and
push
in
adc
mov
mov
jg
movsl
jo
pop
daa
dec
repnz
scas
add
add
jns
ja
or
pushf
decl
push
dec
pop
pop
ret
lock
xchg
fistl
inc
iret
xor
inc
sub
pop
outsb
xor
sub
mov
push
out
jmp
fld
xchg
pop
adc
loope
aas
cmp
push
in
push
mov
shrb
cmpsl
push
stos
and
test
xchg
pop
nop
inc
sub
and
xor
push
movsl
mov
pushf
xor
icebp
adc
sahf
cmp
jge
insl
insb
xchg
int3
mov
fwait
jno
add
dec
dec
xchg
mov
insl
je
xchg
lret
stc
enter
je
ret
sub
jg
xor
adc
xchg
lds
sub
sub
in
sbb
rorl
movsl
test
data16
outsl
jne
in
jno
jne
mov
in
roll
addl
jno
pop
in
push
xor
adc
xchg
or
out
imul
or
lahf
adc
int3
insb
cmp
push
ficomps
rcrb
in
insb
sbb
mov
jecxz
dec
cmp
lret
push
xor
add
dec
xor
out
mov
insl
push
movsl
push
mov
cmp
mov
push
pop
mov
das
aaa
stc
jecxz,pn
lods
sub
push
sti
lcall
and
ret
aaa
loop
outsl
lcall
mov
mov
add
inc
arpl
int3
mov
xchg
icebp
or
and
mull
jae
aad
push
subl
test
mov
ds
clc
sbb
or
mov
adc
sbb
daa
adc
fcoml
imulb
clc
out
lock
sub
sbb
adc
inc
jg
mov
push
pusha
fwait
xchg
jecxz
mov
sub
cs
sbb
repz
das
outsl
aad
xchg
or
jbe
adc
mov
cmc
jge
cld
rcll
xorl
cli
call
adcl
push
sbb
cmp
insb
outsb
fs
cwtl
and
jne
dec
mov
insl
jecxz
inc
imul
inc
dec
lds
xlat
arpl
sub
mov
stc
inc
dec
and
clc
xor
inc
bound
test
cwtl
cmc
lods
mov
es
mov
mov
mov
mov
jae
stos
std
adc
pusha
lods
pop
push
sub
shlb
and
xchg
out
xchg
loope
xor
sbb
cld
sarl
xor
push
imul
jae
mov
xor
fs
fsubrs
adc
call
jp
or
add
mov
jecxz
fdivrl
dec
loope
mov
shrl
loopne
jno
mov
dec
cli
mov
inc
and
mov
add
fdivl
les
fiadds
cmp
subl
out
sahf
mov
pushf
dec
mov
enter
xchg
fabs
mov
sub
ja
repz
mov
push
add
lock
popa
test
dec
mov
cld
inc
addb
pop
in
push
in
ficoms
je
inc
push
jno
rcl
fucom
jg
mov
mulb
mov
mov
mov
mov
iret
iret
out
jmp
fdivl
add
leave
push
iret
or
or
ret
cmp
into
pop
inc
cs
lret
jae
das
ja
and
mov
sbb
adc
mov
add
aad
adc
call
xor
and
gs
stc
mov
mov
insb
clc
mov
ret
or
fld
icebp
push
gs
lds
jle
mov
pusha
dec
pop
mov
jno
inc
xor
adc
pop
out
aas
mov
insl
fmul
mov
shrl
dec
mov
and
fimull
xor
and
jo
out
pushf
push
loope
adcb
fldenv
xor
adc
das
rolb
lret
push
push
xchg
add
pop
inc
pop
cmp
sbb
int
adc
pushf
add
xor
pop
sbbb
fisttpll
lcall
inc
dec
jmp
dec
call
test
sbb
xchg
pusha
xchg
lcall
shlb
mov
sub
loop
fnsave
cmp
insb
push
mov
xchg
dec
insl
jo
cmp
clc
stos
jbe
pop
cmp
imul
xor
loopne
mov
imul
adc
lods
mov
movb
and
dec
out
loop
cmp
std
popf
add
popf
pop
and
or
mov
mov
fdivrl
pop
xor
movsb
stc
mov
dec
jbe
daa
lea
cmp
push
jle
nop
push
push
arpl
cs
pushf
roll
jns
mov
test
sti
pushf
bound
push
fcmove
and
out
push
js
aam
arpl
cli
mov
mov
sbb
int
add
or
ss
icebp
jnp
lcall
icebp
jne
insb
pop
add
xchg
inc
add
aad
sbb
lahf
mov
mov
negl
pop
push
jmp
push
mov
les
or
aad
xchg
stc
and
add
adc
push
call
js
mov
adc
and
xor
data16
pop
sub
add
loope
xchg
out
add
jo
inc
cld
dec
shll
dec
cltd
and
push
loope
outsl
lcall
jb
fimull
cld
mov
push
pop
loope
and
xor
movsb
ljmp
sbb
in
pop
jmp
sbbb
and
mov
fs
movsl
and
mov
sbb
and
ljmp
int
pop
repnz
mov
je
ss
hlt
leave
aaa
xlat
lods
sbb
movsb
push
pop
call
popf
lret
flds
and
sbb
xor
pushw
pop
cmp
rolb
pop
cmpsb
sbb
stc
inc
cs
pop
cwtl
in
in
cmp
adc
jg
pop
mov
cmp
xlat
daa
mov
xor
cltd
inc
sbb
bound
andl
dec
push
sbb
arpl
hlt
sarl
lods
in
inc
int3
push
jmp
js
push
ds
daa
xchg
and
and
std
push
shl
leave
fisttpll
push
cmp
les
andl
pusha
and
fstp
aas
push
jmp
jp
sarb
lock
mov
sub
cmp
out
dec
rcrb
sbb
xchg
dec
adc
mov
mov
push
push
mov
stos
jno
xchg
cmp
pop
shrb
dec
fwait
pop
or
sarb
pop
test
mov
xchg
cmp
out
sub
cmp
cmp
push
inc
mov
std
addl
leave
movsl
push
sbb
dec
imull
test
push
nop
dec
sbb
je
xchg
lods
adc
cld
pop
inc
mov
flds
lret
fmull
aas
in
fsubrs
sub
ss
stos
stc
fwait
pop
scas
mov
andb
pop
loop
and
jmp
inc
mov
adc
in
or
cld
dec
xchg
xor
sbb
dec
or
jns
setno
es
dec
cwtl
pop
mov
std
arpl
out
xor
jne
mov
cwtl
lods
es
cmp
xchg
fldenv
jmp
and
test
lea
push
ss
xchg
xchg
mov
repnz
pop
mov
psrad
mov
and
shr
pop
rclb
push
cwtl
mov
fcomps
lret
push
jmp
add
xchg
cmp
sbb
add
dec
mov
repnz
cmp
pop
test
in
dec
mov
pop
xor
mov
lock
scas
aad
clc
mov
xor
std
mov
or
out
mov
rcr
fldl
mov
adc
addr16
adc
mov
dec
dec
ja
std
out
xor
ret
mov
je
js
andl
ficompl
sbb
mov
loopne
jmp
add
movsl
fdivl
push
dec
sub
dec
mov
leave
stos
mov
fsubs
lcall
push
cld
xchg
adc
pop
inc
in
sub
lret
mov
push
cmp
sub
jnp
mov
int3
fnstenv
pushf
push
or
cltd
dec
dec
xorb
sub
roll
ficoml
mov
lods
adc
popa
loop
lds
jge
lcall
pop
movsl
and
push
cmp
pushf
lea
xchg
sbb
pop
dec
or
cmp
xor
xchg
lret
mov
and
daa
out
adc
les
sbb
sbb
testl
es
dec
shlb
shr
fwait
ljmp
out
gs
sub
shrl
stos
shlb
adc
popf
cmp
imul
rorb
jbe
jmp
inc
clc
add
jno
pop
rcrl
xchg
std
sahf
mov
cmp
mov
je
enter
push
cmpl
lahf
mov
mov
mov
into
popa
orl
mov
les
js
pusha
cld
pop
or
test
int3
mov
cmpsb
je
xchg
or
or
sbb
lock
jecxz
mov
mov
push
dec
mov
pop
loop
in
outsl
loope
icebp
jae
jns
faddl
dec
lods
mov
mov
ljmp
std
aas
ljmp
in
xor
push
mov
inc
push
in
dec
fs
lock
out
dec
rclb
sti
subl
in
mov
jno
pop
lods
test
stos
xchg
cmp
sub
xor
les
unpcklps
and
jae
std
push
and
pop
lods
and
aas
hlt
sbb
xor
mov
dec
inc
jae
adc
xlat
stos
inc
into
or
cmp
xchg
lods
scas
mov
add
in
cmp
lret
fldt
nop
and
push
hlt
ret
push
mov
mov
popf
pop
addl
in
lods
sub
ret
lret
aaa
cmpb
xchg
stos
rcr
jge
push
or
mov
push
lea
inc
aaa
mov
push
aaa
cmp
sti
inc
repnz
fnsave
jbe
std
fs
xor
jnp
mov
mov
outsl
aad
and
inc
lret
jb
ret
inc
insb
ret
xor
jo
inc
daa
into
add
shll
pushf
je
pusha
pop
ret
push
ret
xchg
insl
adc
xchg
fidivrl
xchg
cmc
out
data16
xchg
addl
sbb
mov
pop
scas
cmp
popf
inc
mov
adc
mov
lcall
ljmp
jle
in
xchg
lods
outsb
sti
mov
pop
mov
xchg
ss
mov
and
ja
mov
sbb
mov
cmp
mov
dec
jae
aad
xor
push
movsl
subl
xchg
sbb
mov
insb
in
sbb
mov
dec
xchg
sub
call
dec
jp
mov
into
push
xor
into
mov
lret
fistl
dec
data16
stos
out
push
jecxz
shl
sub
dec
xor
rclb
ljmp
cmp
les
fisubrl
cltd
in
fs
stos
addr16
adc
dec
add
mov
ja
scas
lock
das
dec
mov
cld
ret
lahf
popa
pop
adc
mov
jecxz
loope
mov
inc
inc
in
jne
push
cmp
call
push
in
sarb
jecxz
xlat
xlat
out
xchg
jnp
lock
adc
mov
mov
cwtl
sbb
clc
add
into
pop
stos
mov
push
arpl
cmp
sub
add
sbb
in
nop
xchg
adc
cmp
jnp
pop
dec
inc
int
sbbb
xchg
sahf
outsb
xchg
inc
mov
jg
mov
pop
sahf
jg
jae
adc
fdivrl
pop
scas
fdivs
dec
fsubrs
push
mov
insl
ret
pop
mov
jae
xor
orb
add
lea
outsb
and
lret
test
ljmp
pop
fsubs
inc
mov
cmpsb
scas
add
pop
xchg
mov
dec
je
mov
cmp
in
mov
jl
jns
in
mov
mov
popa
mov
dec
in
insb
out
rclb
xchg
mov
sbb
test
insl
and
mov
outsb
jp
popf
jns
cmc
insb
sbb
xchg
rolb
pop
mov
mov
imul
add
aam
lss
mov
mov
sub
sbb
loop
xor
add
jle
ficompl
mov
testl
addr16
out
add
loopne
cmpsb
addr16
mov
cltd
dec
shrl
gs
mov
test
and
cmpsl
cmc
jnp
cwtl
mov
inc
int3
push
das
sbb
leave
incl
or
mov
pop
add
inc
inc
inc
out
lock
mov
ficomps
enter
lods
jecxz
aad
sbb
mov
or
shrb
dec
or
les
roll
daa
cltd
ds
call
pop
jno
add
int3
scas
and
mov
rcrl
lret
mov
dec
sub
mov
and
inc
adc
mulb
xchg
mov
mov
mov
push
scas
dec
jnp
push
push
jmp
fsts
sahf
shrb
in
pushf
aaa
jge
aad
dec
and
in
lret
lds
jo
in
popa
pushf
mov
fucom
jmp
mov
rol
mov
in
mov
adc
push
or
push
jecxz
ret
sahf
mov
stos
in
and
push
rorl
cmp
dec
sbb
jmp
xor
push
mov
shrl
pop
subb
jne
in
sub
ljmp
cmpsl
lods
stos
pop
pop
cmp
push
hlt
shlb
xor
popa
pop
mov
mov
leave
inc
mov
aam
adc
push
outsb
aam
pop
testl
out
sbb
xchg
iret
aas
lahf
jb
push
mov
dec
inc
adc
mov
sbb
push
sub
test
mov
and
cmpsl
sbb
xorl
mov
jae
loopne
mov
fdivs
mov
and
adc
movsb
sub
or
in
inc
jl
jbe
or
mov
stos
enter
daa
out
cs
add
leave
lea
push
xlat
stc
xchg
rolb
push
jno
mov
adc
jl
dec
mov
icebp
std
fstpl
xor
pop
imul
jmp
ficoms
out
fisttps
and
in
and
xchg
push
jbe
jbe
aad
testl
or
xchg
addr16
adc
cmpsb
jmp
iret
mov
ret
gs
adc
or
mov
push
inc
pop
dec
sbb
stc
fstpt
lcall
dec
das
inc
or
cli
xchg
push
adc
inc
push
xchg
test
push
inc
jns
loop
lods
dec
sub
mov
mov
cld
sub
ja
inc
ret
xchg
fsubr
mov
mov
mov
cmp
pop
mov
lods
xor
fmuls
cld
jge
in
jb
loopne
mov
test
sbb
aaa
jo
cld
mov
lcall
mov
dec
xor
add
jb
rolb
stos
lahf
push
xor
sbb
xchg
dec
sub
mov
stos
sbb
cltd
mov
jbe
adc
les
rolb
fcoml
pop
aam
jns
ljmp
cmp
gs
scas
sbb
incl
xchg
sbb
sahf
pop
adc
dec
jmp
xor
mov
jmp
or
pusha
jle
leave
jge
subl
add
xor
mov
mov
inc
lahf
add
xchg
dec
lock
push
and
pop
gs
ror
fwait
add
pop
dec
dec
daa
jle
or
jno
jne
cmp
xchg
pushf
mov
lret
sub
push
adc
aam
dec
ja
cmpsb
sbb
fistpll
mov
out
dec
mov
sub
and
fildll
int
and
loope
arpl
xlat
ficoml
sahf
mov
bound
fcomi
lea
ficomps
lods
out
cmc
jmp
cmp
lea
mov
push
xchg
mov
dec
xor
pop
mov
push
cmp
mov
mov
pushf
push
out
and
imul
repnz
out
ja
dec
mov
rcr
repnz
pop
pusha
sbb
and
clc
push
daa
mov
loop
out
ds
xor
cmp
fdivl
test
icebp
xchg
aam
sti
inc
xlat
sbb
js
mov
je
xor
push
repnz
pop
std
bound
lcall
mov
test
sti
mov
decl
in
and
sub
bound
pop
and
lock
stc
sub
push
cmpsb
jl
cmp
or
ljmp
xor
aaa
in
xor
add
jb
or
sbb
dec
fucomi
mov
test
push
cmp
repnz
xor
iret
in
es
rcr
xor
pop
pop
xor
and
add
jns,pn
inc
lods
xchg
negb
notb
xchg
into
lret
pop
mov
ss
mov
xchg
xchg
insb
es
inc
lock
ljmp
adc
inc
cmp
daa
sub
insl
adc
loope
test
jl
hlt
push
in
add
outsb
ds
dec
mov
push
dec
jge
les
fnstsw
out
imul
mov
xlat
shlb
adcb
jne
in
xchg
dec
cld
lret
push
and
pusha
adc
pop
xor
scas
pop
mov
leave
and
data16
pop
ljmp
cmp
or
movsl
jmp
add
and
out
push
inc
stc
sbb
xchg
or
repz
push
mov
xchg
rcrb
fdivl
ret
addr16
lock
in
push
xor
or
or
sbb
lret
sub
jmp
pop
xor
stc
jecxz
jl
push
xchg
push
jae
sub
jp
ret
je
xor
sub
scas
lea
les
dec
iret
sbb
pop
nop
push
push
mov
push
sbb
adc
aaa
daa
sbb
cmp
xor
pop
frstor
or
or
add
pop
jge
push
push
or
xchg
shlb
jecxz
dec
out
lcall
mov
xchg
lret
and
dec
mov
xchg
jo
or
xlat
dec
cmp
xchg
sub
mov
jnp
push
in
fdivl
pop
cmp
add
push
add
push
pusha
jb
add
les
mov
test
push
sbb
mov
jge
rorb
fwait
mov
fcoml
xor
sti
xchg
adc
pop
xor
pop
mov
xchg
mov
cmp
in
mov
fsubrs
inc
xor
ret
sbb
out
aam
das
inc
add
xchg
dec
in
cli
inc
mov
test
xor
in
imul
hlt
sbb
imul
adc
or
and
outsb
imul
cwtl
adc
or
daa
lahf
fs
movsb
inc
stos
cmp
stos
cmc
xchg
add
fprem1
fisttps
fs
xchg
xor
fwait
mov
loope
lods
inc
cmp
add
jle
and
mov
mov
jecxz
fistl
jbe
pushf
into
jmp
out
cmc
jmp
sbb
push
outsl
sbb
in
jle
xchg
inc
jg
shlb
fcomps
inc
sub
clc
out
xchg
or
cmp
pop
leave
jns
xor
push
lds
xor
aaa
inc
test
mov
outsb
adc
jb
hlt
xlat
mov
push
inc
out
dec
lea
push
xor
stc
adc
sbb
hlt
push
xchg
dec
out
pop
ja
dec
aaa
sub
push
sub
lods
adc
mov
adc
and
sahf
sarl
xchg
icebp
test
mov
jae
mov
inc
mov
pop
imul
cmp
xor
nop
pop
jns
cltd
inc
xor
arpl
fcomps
les
add
rdmsr
mov
add
adc
jo
adc
rolb
and
daa
imul
inc
sbbb
mov
mov
cmc
jl
inc
and
cmpb
pop
mov
stos
in
lods
jge
fildl
nop
cmpl
fcompp
call
lea
rolb
aas
xchg
cmpsl
dec
pop
and
jecxz
mov
pop
push
ret
fiaddl
iret
pop
push
out
lret
sub
orl
fsubrs
push
push
ret
test
cmc
pop
push
or
roll
outsl
loop
xchg
inc
scas
fisttpl
mov
div
decl
cmpb
imul
pop
inc
or
jecxz
enter
or
or
pusha
cmpsl
adc
orl
mov
insl
dec
pop
lds
lds
hlt
shlb
sbb
dec
les
aaa
and
insb
cmp
addb
fcoml
or
bound
mov
jl
cmc
jg
out
jae
js
in
call
cmp
test
xor
ds
jp
push
pop
pop
sub
das
in
pop
push
js
std
dec
lds
repz
cmpsb
fwait
das
add
or
ds
addr16
dec
das
cmc
nop
rcll
inc
push
cmovs
pop
in
or
mov
ljmp
lea
xchg
push
sub
jns
rorb
or
hlt
ljmp
inc
test
mov
cmp
iret
shll
sub
and
sti
daa
push
sar
aaa
dec
pushf
daa
sbb
dec
outsb
mov
pop
aaa
add
mov
dec
dec
cld
test
xchg
jp
and
xor
mov
sub
dec
jp
aam
aaa
sar
jmp
in
push
adc
jecxz
jl
dec
xchg
jge
and
insb
mov
sarl
lea
jbe
movsb
xor
cli
sub
fdivr
jg
pop
call
sbb
add
jmp
ret
loope
pushf
jnp
daa
xor
mov
cmp
ds
lret
stc
dec
add
shll
insb
dec
daa
inc
xchg
into
int3
loopne
sub
mov
andb
loopne
sbb
insb
push
les
out
dec
rorl
adcb
jmp
pop
lret
jae
jb
imul
adc
cmp
and
inc
or
cmp
mov
jmp
test
mov
ds
pop
les
inc
xor
sub
dec
sar
jle
pop
pop
cmp
sbb
fwait
std
mov
xchg
movsl
cltd
addr16
or
lds
push
repnz
jl
mov
pop
mov
lret
push
xor
pop
or
fidivl
and
shll
fmulp
sahf
add
leave
sbb
adc
ljmp
or
push
or
xor
mov
int
dec
pop
jno
aad
fisttpl
loope
mov
sub
fmuls
dec
push
mov
filds
cld
and
mov
mov
and
rcrb
jle
push
imull
cmpsb
notl
imulb
call
pushf
xlat
outsb
xchg
loope
std
sbb
inc
pop
cld
mov
imul
mov
mov
insl
add
in
xor
or
jmp
xor
lret
mov
ret
mov
test
jg
sar
push
mov
dec
sub
pop
xchg
mov
pusha
inc
pop
iret
shll
cld
mov
pop
cmp
loopne
cmp
or
cld
fstps
xor
add
imull
sbb
xchg
mov
into
adc
pop
int3
mov
dec
inc
xchg
aam
sarb
pop
dec
xchg
jmp
inc
xor
div
fisubrs
cmp
push
test
ficoms
xor
outsl
add
mov
inc
mov
add
pop
push
imul
lahf
and
xchg
insl
fdivrp
test
mov
dec
mov
je
dec
mov
cmp
inc
mov
push
cld
aaa
mov
scas
mov
idiv
out
stos
scas
cwtl
in
scas
mov
mov
mov
data16
in
ss
inc
insl
aam
andb
das
aas
int
mov
adc
ds
cmpsb
jb
sub
xlat
sbb
out
aas
pop
ss
out
push
dec
iret
pop
mov
nop
mov
pusha
pop
push
lds
mov
lods
push
mov
add
cmp
andl
daa
or
fwait
dec
mov
xchg
jmp
popa
leave
sub
mov
cmp
in
and
xor
scas
xchg
fldt
pop
je
fs
lret
jo
movsb
cmp
dec
adc
xchg
sbb
ffreep
pop
and
mov
lds
adc
adc
arpl
cwtl
adc
add
xchg
js
inc
xchg
xorl
mov
xor
jl
imul
int3
dec
jae
sbb
jecxz
sub
outsl
xor
pop
icebp
enter
push
cmp
cmp
nop
outsl
dec
fnstenv
pop
sbb
sub
xchg
loopne
mov
push
in
add
cs
and
addr16
out
fisubs
jmp
mov
cld
bound
les
pusha
fcomip
xchg
pop
test
jmp
ss
adcb
and
jmp
mov
je
xchg
lcall
xchg
and
fdivs
sub
popa
lea
mov
jle
fistpl
pop
cmp
in
imul
repz
movsb
orb
es
jmp
jmp
mov
adc
mov
add
lahf
sub
daa
pushf
std
dec
movsb
jmp
cltd
cwtl
lahf
int3
cmp
lods
xchg
rolb
lods
std
cmpsb
std
mov
adc
cld
push
out
and
cs
dec
jecxz
dec
xchg
mov
enter
sbb
inc
sbb
out
clc
das
test
cld
adc
fmuls
add
hlt
aas
lahf
xchg
jecxz
mov
loop
mov
sahf
ss
insl
mov
sub
or
ds
aas
dec
int3
andb
lock
jg
outsl
pop
or
arpl
push
cwtl
lds
out
jp
or
in
push
mov
loope
xlat
sub
lods
test
fidivs
xlat
jbe
mov
add
jb
jne
sbb
jbe
sub
and
and
xchg
jno
call
movsl
test
jne
sub
mov
xor
inc
xchg
enter
nop
gs
push
xor
add
int
mov
or
cmpb
or
jb
push
movsl
out
push
pop
push
sbb
psubusb
shrb
das
imul
daa
inc
inc
or
mov
sub
xor
insl
pop
dec
pop
mov
push
xorb
les
push
dec
fs
gs
dec
jmp
in
and
add
sbb
xor
mov
cmp
push
inc
push
jg
and
out
mov
mov
push
mov
das
mov
nop
mov
negb
test
mov
dec
cmp
cld
insb
aad
xor
dec
xchg
je
cmpsl
xchg
pop
popf
stos
and
cmp
mov
inc
push
lea
es
dec
sbb
dec
adc
aam
jae
fwait
and
lods
mov
out
daa
scas
out
fdivrs
sbb
movsl
xlat
sub
sub
int
and
mov
jmp
shlb
or
cmp
jl
stos
pop
ljmp
add
cwtl
mov
inc
jo
cs
mov
adc
std
ret
mov
fnstenv
cmc
inc
jbe
daa
enter
jb
mov
es
push
cli
xchg
xchg
lahf
xchg
xor
pop
or
xchg
mov
push
cmp
pop
sub
jmp
out
adc
xor
shl
aaa
addr16
jg
push
hlt
loope
adc
mov
inc
or
and
jnp
sbb
push
mov
mov
mov
divb
push
jle
dec
or
lret
push
and
outsb
into
jmp
ljmp
insl
cmp
jp
jno
mov
jp
dec
push
or
ret
repz
mov
fsubl
adc
or
and
lahf
pusha
es
sbb
insl
nop
idivb
xor
xchg
xchg
pop
aam
mov
sbb
mov
xlat
in
and
imul
mov
push
mov
jne
mov
adc
fldt
stos
and
clc
jno
int
xor
popf
nop
movsl
cs
adcl
mov
repnz
cmpsl
or
sar
and
push
push
add
add
or
sti
mov
cld
rclb
rcrb
insl
cmp
fwait
insl
jg
fdivr
sub
dec
ss
or
adc
mov
push
pop
cmp
sbb
andl
movsb
inc
xor
xchg
and
dec
ds
push
lahf
es
xor
cwtl
pop
adc
out
out
js
inc
xchg
fisttpll
dec
xor
imul
mov
jmp
or
hlt
cmp
je
stos
xchg
cmp
jns
ud2
lea
mov
lcall
mov
outsb
testl
xchg
inc
sahf
mov
out
imul
mov
arpl
adc
icebp
mov
inc
testb
in
jle
dec
xchg
lret
pop
push
adc
jecxz
lahf
test
cmc
sub
add
adc
lret
out
dec
pop
mov
aam
mov
push
negl
fcoms
pop
popa
xor
mov
adc
int3
jmp
nop
popf
pushf
push
xor
push
pop
push
mov
jl
mov
pop
lcall
dec
lock
or
or
adc
fiaddl
jne
imul
adc
lods
push
js
test
outsl
xchg
cmp
in
mov
jns
push
or
mov
repnz
push
mov
add
dec
aaa
rclb
dec
nop
dec
in
cmp
cmpsl
js
lock
adc
push
sub
inc
push
iret
xchg
xor
shl
push
incb
adc
cmp
cs
inc
xlat
mov
jg
pusha
arpl
das
pop
xlat
dec
outsl
xchg
cmp
mov
cmp
jb
aas
lods
cli
clc
mov
ja
lea
push
push
inc
movl
inc
inc
hlt
inc
mov
adc
testl
push
out
lods
push
adc
cmpsb
cltd
inc
stc
push
xor
cwtl
or
or
xchg
loope
pop
mov
lcall
ret
cli
dec
adc
dec
lods
out
xor
mov
out
divl
and
add
into
push
or
jbe
mov
xchg
iret
sbb
je
cwtl
pop
int3
push
in
adcl
std
cmpsb
int3
fidivrl
mov
dec
lock
fstpt
lret
sahf
fpatan
outsl
cld
sbb
out
lcall
push
push
shlb
add
mov
outsl
repz
movsl
addr16
push
je
or
cmp
addb
mov
pop
fnstsw
ss
xchg
and
notb
add
std
clc
xchg
and
xor
into
jne
xor
out
pop
or
push
fldt
cwtl
aaa
out
testl
pop
loope
aam
mov
inc
outsb
pop
lcall
xchg
cmp
fildl
daa
xchg
rcrb
mov
and
xchg
mov
data16
orb
lret
imul
sbb
lea
arpl
into
mov
into
dec
lock
jecxz
jne
repz
cmp
aad
inc
sbb
xchg
jbe
daa
jbe
ret
add
iret
cmpsb
rcr
dec
push
aad
insb
jecxz
xorb
es
pop
cmp
cmc
iret
add
dec
lahf
and
pop
pop
inc
xchg
cmc
dec
lea
jge
dec
pop
add
lods
popf
sbb
loop
push
cmp
ss
fmull
xchg
fcompl
pop
cmp
adc
mov
xchg
cltd
imul
iret
out
jns
subl
decl
mov
movq
cmc
and
daa
and
pop
movsb
mov
mov
sbbl
mov
xchg
test
pop
cmp
fbstp
addr16
call
mov
mov
fdivs
cli
xchg
lods
add
mov
dec
es
mov
sub
lods
mov
jb
aad
andl
push
orb
test
push
pop
outsl
nop
ds
sub
push
aas
fldt
imull
rcrb
add
aam
sbb
mov
mov
int
pop
mov
xchg
lock
mov
bound
push
repz
and
out
aad
incb
hlt
mov
cmc
mov
inc
mov
and
clc
or
xchg
mov
jbe
test
lods
jo
in
xor
jo
cwtl
pop
sbb
xor
cwtl
call
nop
or
jo
xchg
mov
iret
sarb
pop
dec
mov
pop
fsubl
sti
data16
popa
out
jnp
cmpl
ds
mov
cmpsb
and
rcrb
in
js,pn
jle
lods
pop
rclb
jg
pushf
mov
push
ja
mov
or
ret
in
lods
ds
mov
sbb
es
movsb
cmp
je
ja
stc
xchg
push
jp
shlb
arpl
xlat
lods
xor
es
mov
adc
sbbl
out
mov
scas
fsts
mov
enter
pop
movsb
sub
or
loopne
adc
mov
or
sbb
incl
mov
mov
js
adc
and
call
cmpsb
into
cltd
leave
xchg
ljmp
ret
push
scas
xchg
add
leave
mov
adc
bndstx
jno
test
fbstp
sub
out
mov
cmp
jb
xchg
cmp
ret
sub
sbb
popa
fldenv
adc
std
or
lret
sub
ficoms
jo
out
or
jns
popa
pop
mov
adc
fildl
test
jb
lea
scas
fcompl
sahf
cmp
outsl
sarl
cld
test
in
mov
into
push
frstor
and
cld
mov
fsts
imul
enter
loop
sbb
mov
adc
cmp
test
arpl
adc
mov
cmc
fists
mov
insl
or
mov
mov
ds
stos
mov
es
ljmp
or
lods
dec
jmp
fsubrl
lahf
popa
les
mov
adc
lds
inc
roll
popf
dec
pop
dec
add
sub
aam
jne
inc
mov
pop
jmp
je
xchg
fistpll
inc
cmc
xchg
andb
push
mov
jae
addr16
lods
lret
inc
shll
jmp
sub
inc
je
and
and
out
sub
loopne
dec
lret
or
aas
mov
pop
lds
xchg
sub
push
sub
cmp
xorl
xor
push
push
stc
bound
sub
addr16
imul
loope
cmpsb
jo
arpl
stos
jns
sbb
subl
scas
push
xchg
leave
ja
data16
inc
xchg
pop
mov
mov
arpl
test
hlt
lds
lret
cmp
mov
lahf
dec
pshufw
add
cli
lret
das
jbe
dec
cmpsl
xchg
mov
cld
popf
movsl
pop
mov
scas
lea
xor
adc
and
loop
jnp
xorl
xchg
insl
or
sbb
popf
pop
rcl
mov
pop
sub
or
jo
insl
rorl
xchg
lret
pop
pushf
xchg
mov
sahf
sbb
or
ss
dec
xchg
xlat
js
popf
ds
push
data16
ljmp
adc
adc
in
in
ror
sbb
mov
dec
cmpsb
mov
sahf
jbe
pop
pop
inc
mov
mov
push
sbb
repnz
mov
out
jp
jmp
mov
js
call
lcall
ds
xor
imul
arpl
test
rcrl
jmp
jmp
and
mov
outsl
dec
inc
out
leave
lea
ret
pop
clc
xor
push
lock
add
loop
mov
inc
inc
and
dec
arpl
push
dec
outsb
sar
xor
xor
cld
jb
dec
repz
cli
ss
push
imul
out
add
xchg
add
iret
icebp
test
xor
aaa
jne
fbld
sarb
fadds
add
je
inc
mov
adc
icebp
and
add
adc
pop
dec
cmp
test
xlat
dec
mov
push
inc
jno
stos
scas
mov
out
dec
xchg
push
mov
loop
out
movsl
cld
xchg
xor
pop
and
push
push
mov
mov
flds
insb
sar
mov
fsubl
loope
fadd
push
fimuls
popa
push
sub
inc
push
stc
xchg
lds
std
std
mov
addr16
out
jmp
js
and
aam
sub
mov
scas
adc
cmp
loope
rolb
add
les
shl
xor
xor
jl
pop
mov
shr
xchg
mov
lods
shlb
fmulp
gs
push
lods
imul
xchg
pop
loop
mov
sub
add
jl
pop
imul
call
testb
jmp
adc
jle
outsb
lock
hlt
mov
mov
push
xchg
sbb
ret
enter
in
add
orl
jbe
pushf
std
dec
xor
and
push
cli
jmp
out
mov
adc
cmp
cmp
inc
ss
inc
adc
push
mov
inc
adcb
sbb
dec
dec
adc
in
pop
pop
mov
and
xor
push
les
test
sub
cmpsl
fmul
xor
xor
xor
adc
add
out
push
push
dec
add
popf
cmp
lret
cmp
and
test
push
ja
rsqrtps
clc
jb
dec
gs
and
in
mov
jnp
adc
sub
sub
mov
arpl
sub
push
sub
xor
inc
shll
cwtl
pop
cmp
push
enter
jl
in
dec
out
add
sti
mov
mov
fsubl
adc
imul
arpl
xchg
arpl
lds
pop
loop
js
scas
es
fcmovb
ret
out
pushf
jo
jae
xor
xor
in
cmc
cmp
pop
mov
pop
sub
pop
rcr
call
stos
inc
bound
sbb
into
lsl
jge
cmc
fsts
mov
sti
rorb
inc
adc
dec
dec
lock
dec
jg
push
cld
sahf
rol
pop
scas
jmp
adc
inc
jnp
push
sub
mov
xchg
cmp
aas
imul
pop
fstpt
mov
inc
sub
movsb
fnstcw
out
inc
andl
setl
fwait
mov
pushf
inc
insb
cmp
jo
xchg
xchg
cmp
and
jne
or
mov
sub
dec
dec
push
xchg
data16
xchg
push
je
add
lods
mov
jle
lock
pop
lea
pop
jge
jnp
xor
sub
lock
je
imul
xchg
jle
add
popf
ds
repnz
or
movsl
jl
cmc
outsb
out
insb
iret
jl
dec
lods
ljmp
sar
int3
xor
jae
ja
jle
cltd
inc
xor
inc
sub
push
aad
xor
xor
pop
inc
sub
push
mov
pusha
add
push
and
mov
xor
movl
xchg
adcl
inc
push
mov
leave
inc
add
jecxz,pn
fdivs
in
lds
cmpsb
frstor
and
mov
ja
push
cld
jnp
adc
test
inc
iret
sahf
ljmp
inc
rorl
std
mov
xor
adc
repz
and
jp
jae
adc
out
sti
dec
jne
pusha
sarb
ja
stos
xor
ljmp
inc
arpl
mov
loopne
add
adc
incb
jp
push
out
mov
jns
and
imul
testb
imul
lds
adc
pop
cmp
mov
std
int3
clc
insl
mov
rcr
pop
out
pop
mov
ja
cld
push
push
dec
sub
cmp
ficoms
sub
push
xor
loopne
mov
adc
jecxz
xchg
or
mov
dec
int3
test
outsl
jns
jae
pop
inc
pop
das
imul
push
stc
lahf
push
xchg
stos
scas
mov
fs
cmpsl
fcmovb
and
mov
push
jge
inc
ja
inc
lock
mov
cmp
ffree
arpl
inc
divb
stos
xor
dec
js
pusha
and
xor
scas
ss
movsl
imul
jae
or
mov
js
add
sbb
out
movsl
jecxz
push
stc
test
cmc
je
mov
cwtl
and
shl
jmp
cmp
fisubrs
gs
inc
repnz
das
imul
cmp
ja
adc
cld
push
sarl
xor
mov
mov
cld
out
jb
loope
mov
and
mov
mov
mov
xor
mov
xchg
and
les
or
sub
aas
scas
mov
or
or
fwait
in
addr16
mov
xchg
imul
icebp
js
testb
sbb
insl
jne
push
in
adc
pop
iret
sarb
xor
mov
aaa
sti
xor
mov
movsb
dec
jge
lret
sbb
insl
ret
dec
sub
mov
fldcw
cmpsb
inc
pop
sbb
mov
mov
fwait
mov
dec
outsl
popf
pop
mov
jg
std
xchg
mov
sbb
cs
test
leave
push
aad
jb
aas
cwtl
aam
pop
cltd
lea
lods
cmp
icebp
mulb
sub
stc
into
cmp
or
cmpsl
std
cmp
es
addb
mul
dec
lods
call
mov
nop
cmp
dec
dec
pop
xchg
cmp
lcall
add
xor
sub
cmp
or
push
movl
xor
in
imul
mov
cmp
xchg
arpl
shr
adc
inc
mov
mov
inc
cli
fmul
fisubs
dec
stos
in
add
mov
addl
pop
xor
or
jno
pop
xchg
sub
and
xor
push
outsl
mov
lret
or
mov
sbb
jge
dec
int
push
cld
sub
scas
cltd
mov
add
or
jno
push
jecxz
and
mov
mov
or
pop
push
mov
xor
push
cmp
das
fsubl
or
repnz
sub
or
ficompl
pop
mov
push
cmp
shll
mov
int3
add
insb
pop
sub
dec
mov
leave
push
pop
cmp
mov
xchg
sbb
xchg
clc
fsubrs
mov
jne
mov
jl
lods
cmpsl
imull
push
mov
sahf
out
inc
iret
test
popf
pop
push
dec
or
dec
fwait
jp
adc
fwait
les
xchg
push
enter
es
inc
das
iret
hlt
mov
clc
mov
lahf
pop
test
ljmp
push
shlb
shrb
mov
out
xchg
jno
mov
dec
adc
cld
push
pop
dec
fadd
fdivrl
ds
iret
sbb
inc
pop
mov
xlat
mov
jo
icebp
cmp
inc
sub
testb
out
xor
xor
repz
xor
cmp
pop
rorl
xor
gs
lahf
inc
xor
je
mov
mov
std
xorb
inc
inc
cs
std
and
inc
call
jl
cmp
hlt
adc
int3
test
cmp
mov
das
jle
aad
int
sbb
sub
call
mov
pop
cmp
inc
sub
jbe
das
adc
push
cmp
in
sub
sub
mov
pop
jg
mov
add
lds
push
fs
mov
jae
mov
int
ret
jne
xchg
xor
bound
icebp
mov
repz
and
mov
gs
add
pop
and
cs
jo
repnz
int3
int3
jg
std
repz
insl
add
es
into
pop
fldenv
push
daa
nop
cmpsl
pop
movsb
rolb
negl
xchg
mov
mov
dec
push
repnz
pop
adc
hlt
lds
push
lods
neg
mov
jae
mov
gs
cmpsb
out
mov
call
mov
out
dec
movb
daa
neg
sti
scas
cmpsl
movsb
and
push
enter
test
inc
dec
and
enter
jecxz
repz
rcrb
vmovupd
jl
movsb
sub
lret
mov
inc
lods
lahf
push
pop
and
jl
push
adc
jb
mov
cltd
lods
faddl
pop
push
jl
push
mov
sbb
shlb
add
and
mov
xchg
test
adcl
cmp
mov
js
lret
cwtl
std
jp
in
bound
jb
aas
ss
lret
inc
mov
dec
dec
adc
pusha
mov
fldcw
inc
xor
xor
pop
fsubl
std
dec
repnz
sbb
movl
jbe
mov
shl
sbb
dec
cmp
mov
jae
into
insl
mov
gs
pop
mov
add
mov
push
mov
xlat
xor
and
pop
pop
icebp
pop
daa
jle
inc
adc
ficoms
dec
lahf
xor
add
ds
mov
add
push
or
mov
jno
or
pop
xchg
jo
pusha
nop
dec
dec
scas
dec
inc
out
xlat
push
sahf
lcall
push
das
adcb
dec
adcb
dec
add
lahf
jno
pop
mov
push
jmp
push
or
pop
push
orb
add
lahf
inc
mov
ficoml
rcrl
pop
std
in
add
sbb
mov
xchg
shl
sub
daa
mov
scas
pop
or
lret
xchg
cmp
rcrb
test
push
xor
lods
mov
push
push
mov
imul
sub
sbb
lret
mov
push
xchg
mov
in
cmp
fists
int
shlb
int
jo
lret
out
dec
shl
outsl
push
das
sbb
pusha
dec
insb
adcb
dec
sbb
xchg
insb
call
push
insb
inc
adc
pop
lret
aaa
mov
sahf
or
pop
aas
mov
cmp
mov
xchg
pop
jp
push
cmp
xlat
inc
mov
mov
and
pop
mov
lock
xchg
and
cwtl
push
jae
push
add
xchg
pop
inc
push
fistpl
sbb
inc
xchg
sub
test
daa
mov
mov
loopne
push
lock
mov
xchg
pop
push
dec
inc
lods
out
jns
pop
mov
enter
xor
sti
pop
jno
push
ljmp
push
fisttps
lahf
adc
inc
imul
cmp
fildll
dec
push
and
jnp
shl
outsl
aam
jge
loopne
mov
jl
out
push
in
imul
inc
sbb
pop
mov
cwtl
fimull
adc
jbe
pop
inc
out
cmpsb
adc
lahf
mov
inc
lods
mov
or
gs
jmp
dec
cmpsl
icebp
adc
movsb
pop
and
dec
cwtl
int
fcom
cld
fdivrs
pop
add
xchg
fiaddl
pop
xchg
xor
cmc
add
jecxz
ljmp
mov
inc
jl
popf
testl
out
dec
xchg
mov
das
enter
orl
cmp
sarb
xchg
or
sub
ja
pop
add
add
lds
add
push
dec
movsl
cs
mov
cmp
jo
push
data16
mov
imul
sub
jns
cmp
push
mov
sbb
xor
and
push
push
pop
adc
pop
sub
sbb
insl
mov
sub
idivb
aas
lret
cmp
xchg
mov
popf
push
adc
subb
jbe
sbb
xor
pop
rorb
cld
add
pop
repnz
push
lock
loopne
cmp
xor
test
sbb
mov
mov
pop
xchg
mov
or
insb
out
push
insl
sti
lcall
lcall
dec
iret
adc
test
es
mov
jle
fdivp
dec
cltd
fistpll
shr
lahf
aas
mov
xchg
cltd
fdivrl
pop
mov
loope
push
adc
adc
js
popf
stos
es
cmp
xchg
push
add
xlat
std
shll
push
mov
push
stos
add
cmp
and
xchg
push
repnz
xchg
arpl
pushf
xchg
mov
mov
jb
loopne
xchg
rorl
dec
popa
incl
shlb
sub
out
push
cld
inc
inc
xchg
mov
cmp
jnp
sbb
aaa
test
and
adc
and
push
jns
jmp
mov
pop
and
mov
pop
lret
movsb
cmp
xchg
mov
mov
insb
inc
aaa
lods
pop
adc
mov
mov
xlat
xchg
ja
add
lods
jb
dec
inc
mov
or
notl
xor
lock
mov
movsl
dec
jmp
sub
pop
repnz
xor
rorl
xor
add
movsl
push
jmp
outsl
pop
sti
ljmp
adc
aaa
dec
addr16
and
clc
mov
lcall
daa
dec
faddp
sub
cld
mov
dec
gs
pop
lcall
jl
adc
test
rcrl
push
and
dec
sar
and
jle
mov
sub
je
fdivrl
in
inc
sub
test
stos
fwait
cmp
pop
xor
cmp
add
movsb
imul
cmp
jne
lds
out
sahf
jo
rcrb
lds
fs
das
or
jbe
mov
incb
and
pop
jmp
popf
nop
add
cmp
dec
sub
cltd
pop
iret
js
or
pop
arpl
dec
or
icebp
daa
mov
hlt
out
inc
mov
pop
push
test
cmp
mov
sub
loopne
arpl
cmpsl
mov
adc
repnz
addr16
sti
pop
adc
push
in
loop
imul
cs
or
loope
fiaddl
xchg
imul
jb
test
xor
jbe
cmpsl
xchg
daa
push
or
cld
out
jb
xchg
mov
pop
pop
inc
cwtl
mov
push
inc
adc
jne
jecxz
push
movsb
mov
les
sub
fwait
jbe
lret
xchg
outsl
pop
call
movsb
xchg
cmp
adc
mov
cmp
in
addr16
add
xor
xor
in
call
insb
jle
and
adc
add
dec
test
inc
sbb
push
pop
jnp
inc
cli
and
pop
mov
mov
jmp
insl
xchg
lret
dec
jle
in
subps
pop
out
mov
sub
imul
int3
shrb
adc
pusha
push
aaa
rcrb
push
sbb
push
iret
jo
pmaxsw
int3
jmp
imul
outsb
int
inc
add
icebp
push
mov
add
outsb
inc
lods
outsl
push
std
and
mov
push
pusha
or
aam
or
mov
mov
mov
into
cmp
loop
push
je
xchg
or
mov
fsts
in
fistpl
jbe
and
mov
movsb
mov
xor
xchg
addr16
xchg
mov
repnz
test
mov
sub
mov
enter
and
inc
or
jns
inc
jbe
mov
adc
cltd
xor
outsb
push
insb
roll
mov
stos
ja
je
jns
loop
jp
cmp
push
mov
mov
push
repnz
mov
lret
setno
pop
pop
stc
pop
fsubl
aam
mov
mov
pop
jmp
pusha
inc
xor
je
les
dec
jo
xlat
in
sub
fnstcw
cmp
cmp
lea
sub
push
push
in
std
pop
lret
dec
enter
enter
bound
test
pop
pop
push
ss
sub
rolb
and
or
subb
sub
mov
xchg
xlat
lock
mov
add
fistps
imul
push
xor
aas
imul
into
sub
mov
out
lea
inc
cmc
jns
inc
pop
imul
xchg
mov
pop
insl
test
dec
hlt
mov
adc
jecxz
push
insl
adc
addl
xor
mov
mov
ret
push
xchg
or
fwait
adc
cmpb
hlt
xor
dec
ljmp
pop
pusha
jbe
push
dec
push
pop
cmpsb
jb
mov
hlt
mov
mov
and
sbb
out
sarb
pop
lret
movsl
mov
xor
mov
or
add
mov
push
mull
test
inc
jae
imul
jne
and
icebp
sub
int
cld
test
shr
addr16
mov
mov
shll
std
xor
jae
xchg
jne
lahf
popf
cmp
test
jge
rol
dec
jp
mov
lock
mov
adc
mov
cmp
mov
fsubrl
out
mov
and
cwtl
int
hlt
stos
push
pushf
sub
int
jl
push
cmp
or
xchg
dec
nop
mov
sbb
sti
jge
xor
jnp
lods
pop
pusha
loope
cmp
stos
cs
pushf
fwait
mov
insb
mov
pop
addr16
xor
ficoms
sub
stos
loope
fadds
adc
fmuls
and
std
fiaddl
or
inc
cli
inc
mov
mov
jns
or
mov
mov
push
xor
xchg
shll
and
jge
jmp
pop
pop
sbbb
dec
and
xchg
addr16
fwait
jno
mov
test
lret
imul
int3
add
jl
cmpsb
cmp
pop
and
dec
nop
clc
pop
or
and
pop
ljmp
dec
push
push
inc
inc
mov
pop
pop
dec
out
dec
fsub
cmp
ficompl
lea
cwtl
aad
add
bound
jmp
cmp
mov
cmpsl
test
add
roll
jmp
rcll
jp
les
add
mov
fs
inc
shr
mov
jo
mov
jecxz
movsl
daa
test
out
call
fs
popl
shr
xor
ja
sub
scas
sbb
pop
sbb
mov
popa
xchg
cmp
xlat
xchg
push
lock
das
scas
cmp
pop
lahf
xor
pop
sbb
mov
sbb
dec
mov
popa
jge
pop
dec
mov
sub
xchg
pushf
mov
cmp
stos
sub
bound
pop
and
movsl
add
clc
in
and
pop
jmp
inc
lret
sbb
loope
outsl
xor
ret
jae
sbb
arpl
mov
repnz
push
test
shrd
xor
in
shl
iret
insl
clc
dec
mov
outsl
stc
cwtl
lods
in
rol
out
mov
cmpsb
cmp
and
mov
lret
lods
dec
lods
xor
aas
jl
cmp
push
imul
cmp
push
push
xchg
xchg
out
js
bound
bound
lods
lea
loop
lds
paddusb
lahf
lcall
inc
add
scas
leave
pop
scas
mov
decl
dec
xor
stc
cld
mov
test
loope
inc
sti
or
ficompl
xorw
sub
mov
loop
ret
dec
push
sbb
or
mov
das
gs
or
cli
cmp
jecxz
xchg
pop
int3
jb
cwtl
dec
lock
pop
sar
push
shrl
mov
mov
jbe
add
jns
sub
jbe
les
jo
xchg
movsl
pop
ret
and
rolb
jns
clc
dec
out
jle
xchg
push
mov
jecxz
dec
xchg
mov
popf
add
fcompl
push
push
clc
cmp
sbb
jmp
cmp
and
pop
ror
dec
or
loop
sbb
mov
inc
out
push
lcall
and
ljmp
shrl
mov
in
insl
adc
jg
jo
mov
xchg
mov
call
hlt
ficompl
add
add
and
push
push
jmp
aas
mov
and
fmull
cwtl
jl
push
mov
cmpsb
imul
xchg
pop
test
mov
in
dec
nop
xor
shll
ret
jne
jle
adc
mov
notl
xor
push
jle
jecxz
sti
in
adc
int3
mov
cmc
dec
hlt
jge
jns
inc
xor
mov
cmp
iret
dec
cld
sbb
pushf
test
mov
inc
or
mov
adc
hlt
es
and
jne
insb
dec
or
adc
lea
ret
mov
out
and
in
xchg
mov
ficomps
int3
insb
cld
or
adc
into
jl
or
sbb
xchg
ret
mov
or
insl
fdivl
add
inc
fistps
ss
aas
or
fisttpl
sub
add
outsl
add
ljmp
push
fisubl
repnz
jmp
jns
and
adc
mov
xor
jo
add
jno
xchg
xchg
in
jno
loope
pop
cwtl
lds
and
pusha
je
xor
gs
jno,pn
push
cmc
imul
int3
and
push
dec
push
enter
push
ljmp
xchg
cli
aad
add
or
add
adc
sub
or
imul
xlat
jmp
jnp
stos
dec
aam
loop
dec
sub
mov
add
out
mov
les
fistpll
rcrl
lods
in
jp
cmp
jge
les
in
movsb
adc
or
adc
sub
xor
stc
insl
ds
call
in
push
nop
das
jle
aad
inc
cmp
jle
add
nop
insl
rorl
insb
sbb
stos
push
mov
arpl
dec
roll
ss
jp
xor
movsb
mov
les
cwtl
lcall
ret
das
jmp
sarl
sub
icebp
cmp
subl
sbb
iret
and
hlt
xchg
add
lock
icebp
mov
out
jl
ret
lcall
sbb
jne
rol
jmp
jmp
ds
scas
adc
rcll
jp
in
jo
xchg
push
popa
or
and
cmp
dec
inc
xchg
scas
cmp
lock
shlb
pop
sbb
dec
xchg
stc
push
out
add
push
pop
rcl
adc
out
sub
pop
ss
stc
mov
push
movsl
push
jnp
out
iret
mov
adc
hlt
xchg
fstpt
mov
aam
mov
stc
cltd
push
pop
lcall
xor
or
cld
nop
and
pop
pop
das
cmc
sbbl
lret
dec
cmpsb
mov
iret
dec
mov
insb
jbe
mov
mov
aas
mov
lods
out
sub
push
popa
lret
add
lahf
push
add
dec
popa
inc
cmp
in
inc
mov
cmc
ret
test
pop
dec
fcoms
ja,pn
sub
push
ljmp
xchg
mov
dec
subb
insl
dec
lea
loope
sahf
icebp
mov
mov
xor
subl
cli
ret
adc
pusha
out
ja
dec
and
and
inc
pop
mov
inc
xor
jae
jmp
ret
and
aas
loop
cli
call
mov
loopne
outsl
scas
xchg
mov
cmc
decl
mov
fmul
daa
iret
adc
out
push
xchg
jnp
xchg
sub
daa
lret
lea
mov
inc
mov
sti
push
jg
insb
inc
incl
jae
add
sbb
rcl
arpl
sub
dec
mov
xchg
add
mov
imull
mov
es
pop
jno
je
inc
jae
push
sub
mov
add
and
or
xorb
push
push
jno
arpl
negl
cmpsl
jmp
adc
out
jl
bnd
lret
in
mov
pop
enter
push
test
fildll
stos
mov
inc
inc
inc
test
fcmovb
xor
pop
jnp
iret
lcall
sub
mov
inc
cmpsl
sbb
mov
add
jp
inc
or
add
in
rcrb
cmp
mov
orl
inc
and
cld
dec
xchg
addb
out
xchg
sbb
push
out
dec
hlt
dec
notb
push
sbb
pushf
fisubrl
adc
and
mov
cmp
push
testl
in
cmpsl
popa
leave
inc
inc
xchg
int3
lcall
imull
out
pop
in
movsb
gs
cmp
int3
lret
cs
jno
test
cmp
mov
lcall
cmc
xor
sahf
adc
pop
jmp
mull
or
fsubr
fnstenv
shlb
mov
jo
decl
lret
add
adc
notb
ss
pop
out
insb
and
hlt
aad
ror
dec
jnp
jp
in
aas
das
add
sbb
fwait
mov
xor
jb
xchg
xor
loope
pop
insl
xchg
aad
ret
test
hlt
xor
std
loopne
icebp
inc
mov
push
jno
nop
dec
insl
mov
sbb
sbbl
sub
stos
jl
out
push
push
fldenv
sbb
dec
adc
add
enter
mov
add
adc
adc
push
lea
xchg
cmpsb
dec
inc
inc
push
out
ss
iret
cmp
push
mov
mov
arpl
aas
adc
or
cmp
cltd
dec
dec
xchg
popf
jmp
jp
pop
cwtl
jne
cld
mov
sub
xor
je
mov
mov
into
pop
xor
jnp
pop
or
xchg
or
iret
lds
shrl
mov
or
lahf
hlt
repnz
jmp
mov
mov
fwait
xchg
xor
stos
clc
repz
fmuls
jecxz
push
int
dec
inc
mov
out
and
int3
test
pop
movsl
ret
add
fs
mov
stos
add
jl
idivb
and
dec
push
and
cli
add
cld
sbb
imul
rcr
iret
cwtl
pushf
gs
insb
jg
pop
clc
xchg
cmp
add
fld
pop
out
mov
icebp
ds
jmp
in
pop
push
dec
gs
out
in
lahf
fsubrs
or
cmp
lret
jo
in
inc
jl
bswap
mov
cmp
sbb
sbb
pop
repnz
cmpsb
outsb
cmp
lods
adc
rcll
adc
ret
call
out
mov
jo
and
sti
out
cmpsb
mov
mov
ja
shrl
jmp
ljmp
cld
sbb
mov
push
int3
rclb
mov
jns
scas
outsl
or
out
adc
stc
cltd
scas
jns
xchg
inc
xchg
in
push
inc
and
mov
stos
out
push
ror
aam
fmuls
das
xor
imul
dec
test
mov
iret
scas
fwait
subl
push
hlt
xor
mov
mov
inc
push
inc
popf
jle
cmpsb
jo
out
loopne
ret
jns
xor
insb
scas
xchg
add
jnp
ds
cwtl
test
jp
xchg
ret
ds
pop
push
add
mov
pusha
subb
cmp
repz
adc
adc
and
sbb
stos
cltd
lret
sbb
shlb
push
push
or
fcoms
negl
iret
cmp
cmpsl
and
jmp
push
inc
std
jle
addr16
xor
cmp
lahf
sbb
ds
int
jmp
jmp
lcall
jmp
adc
push
pop
insl
mov
mov
jno
push
inc
pop
jno
sbb
push
mov
mov
pop
mov
pop
inc
pop
inc
popa
mov
std
into
pop
mov
inc
lds
or
xchg
sbb
arpl
jmp
push
inc
and
mov
mov
je
call
iret
call
test
call
sbb
roll
dec
add
xchg
mov
jbe
call
in
xchg
xor
ret
out
pop
or
ret
pop
in
pop
pop
and
in
dec
xchg
aaa
je
jnp
in
mov
loop
outsl
ret
and
inc
or
pop
movsb
cmp
ret
inc
lock
lds
daa
push
lret
xor
mov
ljmp
jnp
mov
jmp
push
mov
push
sti
in
lret
inc
ja
mov
mov
xchg
inc
popa
pop
sbb
or
cmp
aas
and
mov
jg,pt
sbb
mov
fs
popf
mov
les
js
pop
rorb
and
add
jg
push
daa
data16
jo
or
xor
xor
pop
push
pop
cmpl
iret
and
cmpsl
stc
jnp
pop
sbb
mov
lds
cmp
push
sti
into
inc
xchg
push
hlt
adc
push
jecxz
pushf
jl
data16
push
dec
sbbb
into
das
push
stc
movsb
mov
divl
cmp
insl
xchg
mov
pop
lds
sti
jg
adc
mov
int3
es
mov
ss
insb
lahf
xor
loopne
pop
aas
dec
adcl
sub
imul
repnz
xchg
cltd
popf
test
sbb
movsl
jmp
sbb
jl
jecxz
mov
icebp
add
mov
jne
mov
push
and
jl
out
sti
push
cmp
test
fs
mov
pop
sbb
idivb
leave
pop
cwtl
fadds
jnp
jb
mov
sbb
iret
cmp
pop
jmp
mov
sub
insl
adc
inc
bnd
push
repnz
sbb
rol
repz
loopne
xchg
je
movsl
push
jecxz
ficoml
dec
push
fstpt
shr
hlt
lea
jns
fcmove
and
inc
lock
lret
dec
cwtl
iret
imul
lret
sti
jb
mov
repz
add
cltd
adc
enter
ret
mov
mov
pushf
push
les
jmp
sub
dec
fs
fidivrl
pop
lea
xor
xchg
sti
iret
mov
pop
adc
gs
test
mov
fs
dec
scas
mov
cmp
loop
mov
stc
pop
loopne
dec
inc
mov
xchg
shr
mov
cwtl
subb
pop
in
mov
mov
cwtl
insl
sub
cmp
jl
in
inc
pusha
into
ja
repz
das
xchg
dec
xlat
lcall
mov
mov
fisubl
mov
mov
cmp
jmp
stos
mov
xchg
mov
insb
add
stos
fld
push
lcall
cmp
cli
jnp
jecxz
and
nopl
jmp
scas
cmp
lea
and
or
add
dec
dec
icebp
inc
dec
hlt
and
jno
fidivs
aam
bound
cmpl
push
sbb
jg
dec
fs
mov
lea
jl
lret
inc
push
mov
sub
mov
push
or
push
and
int
rcr
in
inc
pusha
xchg
out
popa
inc
mov
out
mov
loopne
sbb
pop
mov
fwait
mov
sbb
mov
leave
ror
int
mov
dec
sbb
xchg
rolb
std
loope
repnz
sub
push
push
in
push
cmp
dec
cmpsb
outsl
mov
mov
xchg
nop
pop
psubq
or
push
movsb
sbb
out
mov
dec
push
jmp
rorl
test
shlb
sub
call
out
ds
xchg
mov
dec
push
stos
insb
daa
fs
mov
int3
dec
push
jb
push
dec
mulb
push
or
or
icebp
insb
and
mov
cmp
test
and
mov
inc
push
ss
xchg
sbbl
push
lods
jo
sahf
mov
dec
int3
or
int
or
adc
pop
xchg
cmp
dec
add
lcall
adc
lret
mov
insl
xchg
mulb
mov
jle
jbe
repnz
mov
pop
stos
shr
les
push
fs
rcrb
jp
test
pop
dec
jb
adc
and
lcall
sbb
out
xchg
cmp
test
mov
push
xorb
aas
pop
aaa
inc
jg
mov
jb
shr
mov
inc
lahf
fdivrl
sbb
rep
push
je
push
popa
aam
xor
js
push
jl
cmp
lret
lods
daa
push
nop
or
mov
inc
scas
dec
and
mov
lock
push
mov
js
movsl
clc
gs
push
sarl
add
adc
push
ss
add
lret
mov
nop
mov
ja
scas
adc
sbb
adc
pop
add
mov
mov
ss
imul
adc
fnstcw
xor
sti
dec
data16
sub
push
dec
mov
mov
mov
es
sbb
adc
push
sbb
cmp
adcl
addb
mov
inc
jnp
cwtl
aam
mov
test
add
fidivs
pop
out
into
je
movsl
loopne
jmp
mov
sub
loope
pop
mov
add
out
push
mov
add
test
pop
add
fldl
xlat
xchg
popf
mov
cmp
insb
call
cs
jle
mov
in
mov
or
sahf
mov
add
cmp
or
shr
jnp
filds
mov
jb
dec
leave
and
insb
mov
sub
mov
loopne
xchg
push
loope
iret
mov
xchg
imul
repz
cwtl
cmp
lcall
pop
out
ret
mov
aam
mov
lock
out
rorl
mov
imulb
loope
lret
fwait
call
je
out
inc
sub
loopne
add
lds
ficompl
cmc
gs
jmp
pop
mov
or
xchg
dec
data16
ror
adc
cltd
xlat
mov
adc
and
and
daa
sub
lret
mov
mov
jl
xor
xchg
iret
nop
lock
jl
imul
int3
aam
dec
call
ja
popf
sbb
push
xchg
jmp
sbb
imul
lods
xchg
jle
mov
idiv
fwait
stos
dec
gs
dec
dec
cmp
xchg
xlat
out
ss
cs
pop
lret
push
nop
outsb
sbb
xor
dec
or
rolb
xor
rorl
xchg
inc
or
jp
and
les
jae
pcmpeqb
std
into
leave
das
aad
imul
je
sbb
sbb
mov
dec
or
out
mov
call
mov
add
mov
orb
or
mov
popf
cmpsl
cwtl
mov
imul
test
inc
cmp
sbb
rolb
cmp
xchg
mov
xchg
bound
lods
push
aam
sub
jae
mov
add
lret
arpl
test
out
xor
fistpl
xchg
sub
mov
dec
sub
into
popa
or
cmp
lcall
sbb
sarl
das
push
mov
icebp
fs
stos
mov
hlt
mov
ljmp
mov
arpl
pop
repz
dec
out
jns
loope
mov
in
xor
mov
ss
mov
mov
adc
jnp
jno
es
popf
dec
jbe
push
lret
aad
ss
int3
mov
xor
push
leave
lret
fbld
add
nop
movsb
jmp
cli
mov
push
dec
rcrb
adc
push
cmc
lret
lcall
cmc
mov
pop
xchg
jno
cs
cmp
mov
push
pop
aaa
push
cmp
iret
push
cwtl
or
imul
cmc
in
or
sarl
jae
pop
cmpb
loopne
mov
mov
add
je
dec
sbb
ret
jmp
popa
mov
cmp
sahf
mov
mov
jbe
sub
xlat
ret
push
jno
incl
xchg
pop
insl
add
push
sub
pop
lret
ror
jo
popf
leave
imulb
enter
cmp
aam
xchg
in
adc
dec
or
mov
mov
dec
fcompl
and
fistps
jne
arpl
movsl
fs
inc
adc
dec
or
or
lds
insl
testb
rolb
cmpsl
mov
fimull
dec
lea
out
sub
stos
js
adc
out
arpl
or
add
stos
pop
adc
popa
add
sahf
in
inc
mov
dec
sbb
into
push
arpl
rcll
jle
push
dec
xchg
lods
loop
nop
pop
dec
enter
pop
pop
mull
lret
inc
sbb
mov
mov
stc
out
dec
and
test
and
or
push
dec
dec
mov
dec
fs
inc
nop
push
arpl
sbb
mov
mov
mov
mov
mov
cltd
out
cmp
pop
cwtl
cltd
xchg
divb
aaa
shll
out
scas
aad
pop
rcrb
cmp
mul
bound
sub
dec
aas
shll
sub
cld
mov
dec
lods
xor
cwtl
adc
jmp
xchg
scas
popl
dec
or
cmp
addr16
mov
and
stc
add
xchg
test
push
add
jle
loope
mov
mov
cmp
out
mov
mov
popa
xor
outsl
push
lds
lret
mov
sub
call
insl
punpckhbw
out
inc
gs
testb
out
out
sbb
push
xor
mov
aas
jp
sbb
sub
jl
mov
and
add
sub
inc
lods
sub
cs
jne
inc
dec
stc
cmp
dec
push
dec
insl
fnstenv
xor
mov
pop
fisubrl
adc
fcom
mov
repz
sub
xor
dec
lock
add
and
pop
mov
out
imul
cmp
jae
mov
add
inc
mov
rorl
push
out
gs
aaa
subb
mov
data16
int3
pop
mov
xchg
jne
popf
lret
inc
fsubrs
gs
push
mov
xor
sbb
mov
mov
mov
nop
and
inc
mov
test
jmp
in
xchg
movsl
mov
mov
add
push
lods
push
mov
andl
cmpb
addr16
insb
pop
cwtl
push
cwtl
aaa
outsb
jb
or
test
mov
out
lds
and
push
adc
ss
shrl
cmp
shlb
mov
out
jb
jge
add
push
mov
add
inc
xor
and
xchg
jbe
lahf
movsl
lods
cmp
mov
jp
or
into
and
hlt
mov
xchg
jne
int3
jae
ss
cmc
mov
incl
sbb
sbb
mov
push
f2xm1
loopne
movb
mov
inc
cltd
mov
xchg
gs
push
mov
aaa
jb
inc
mov
imull
arpl
scas
inc
pop
xchg
mov
rclb
and
sbb
push
jnp
fs
and
jmp
cmpsb
and
icebp
mov
cmpsb
stos
shl
loop
ss
cs
push
aaa
jl
nop
add
mov
in
and
pop
jno
pop
mov
insl
test
xlat
ret
fsubs
lret
mov
cmp
inc
push
sbb
jo
jecxz
push
mov
pop
cmp
outsl
ljmp
mov
mov
or
js
jp
push
sub
lea
dec
cmpsl
dec
sub
dec
pop
daa
repnz
or
fwait
leave
sub
mov
mov
xor
insb
ret
inc
aam
sub
punpcklwd
stc
clc
mov
push
cltd
xor
hlt
shlb
lcall
testb
stos
mov
lds
sahf
enter
pusha
push
jns
xchg
and
mov
fnsave
jle
dec
xchg
in
std
sbb
mov
in
sbb
and
dec
xor
jae
sti
in
fcmovu
aad
nop
sbb
arpl
shrb
arpl
jle
sbb
stc
adc
dec
xchg
test
ljmp
xchg
or
fs
ss
or
stos
outsl
int3
xor
xchg
jns
aaa
dec
sbb
or
cmpsl
jge
sub
mov
push
push
mov
and
pop
sub
fstps
into
cmp
ret
sub
mov
fstps
into
fs
or
popa
sbb
in
xchg
cmpsl
daa
sbb
adc
loopne
sbb
bound
xor
enter
nop
data16
mov
stc
int3
rcrl
push
dec
xor
fsts
inc
push
loope
xchg
test
gs
push
aaa
rol
jmp
nop
addb
hlt
ret
jg
dec
mov
insl
scas
mov
pop
cmp
insl
jns
aam
xchg
nop
jbe
or
mov
testb
sar
sarl
push
icebp
aad
fadds
xchg
dec
lock
add
xadd
mov
jo
pop
xor
mov
into
jnp
mov
dec
insb
std
in
stos
idiv
loope
outsb
mov
mov
les
fsts
leave
pushf
enter
xlat
mov
add
test
fcmovb
ficomps
adc
popa
dec
out
rcl
jno
fcomi
not
sbb
pushf
cwtl
enter
xor
mov
xchg
or
sbbb
jg
inc
inc
pop
popa
aam
xchg
hlt
fildll
stos
pop
jo
shlb
jo
arpl
int3
sahf
cltd
ljmp
mov
fidivrl
gs
out
ret
and
nop
dec
or
repz
push
les
int
fwait
mov
inc
mov
stc
jne
cmpsl
pop
jmp
test
jge
ret
repnz
mov
jno
addr16
out
por
add
les
push
inc
mov
fnstsw
outsb
in
add
jnp
adc
xchg
dec
lahf
imul
jne
add
xchg
hlt
jmp
repnz
add
aad
les
jg
fldenv
aas
xlat
movsl
pop
inc
push
daa
or
clc
data16
clts
cld
inc
push
or
mov
sbb
adc
out
dec
int3
movsb
dec
iret
arpl
int
scas
pop
xchg
insl
arpl
shl
test
add
jo
or
pop
and
xlat
decb
mov
sarb
push
push
jne
fbstp
pop
mov
mov
cli
mov
pop
and
outsl
xorl
sbb
jnp
fs
int
adc
insb
dec
pop
and
mov
mov
dec
roll
lock
arpl
or
mov
lods
sub
add
repz
jecxz
aam
fistpl
push
daa
popa
add
mov
jno
ret
shll
dec
push
add
jp
fbld
inc
xor
xor
mov
aam
mov
lea
fildl
jo
xchg
jo
dec
jecxz
adc
mov
dec
sbb
cmp
inc
ret
inc
lods
mov
repnz
inc
xchg
add
sub
sub
mov
stc
or
dec
push
sbb
out
mov
outsb
jbe
sub
in
jne
dec
es
lods
xchg
cmp
lret
pop
push
rcrb
aas
add
pop
scas
stos
inc
daa
pop
les
das
shll
pop
sbb
daa
jmp
cld
jge
mov
popa
xor
shrb
stos
aas
xor
add
icebp
mov
and
stc
in
inc
or
add
insl
push
shr
or
sbb
loopne
pusha
cli
mov
call
mov
adc
jne
jle
cld
xchg
test
adc
lods
pop
insl
ja
inc
repnz
jns
dec
jp
outsb
mov
mov
rolb
mov
int3
es
test
insl
addr16
in
xlat
jbe
add
push
sub
adc
cmpsb
mov
imulb
mov
stos
pop
add
mov
sahf
cli
lcall
xchg
aas
test
jmp
call
lahf
or
jecxz
push
adc
ja
jecxz
cmp
mov
sub
dec
cmc
push
pop
sbb
mov
daa
loopne
or
lods
sub
xor
sbb
xor
adc
lea
mov
adc
mov
pop
or
shrl
lods
into
pop
sbb
sub
push
nop
outsl
mov
push
fiaddl
pop
sub
sub
faddl
push
and
fcoml
sbb
aad
jecxz
ja
mov
xchg
ds
cmp
jne
xchg
sbbl
ret
sub
mov
icebp
es
fstpl
add
pop
mov
cltd
mov
lds
pop
sbb
test
adc
mov
dec
push
popf
adc
pop
or
sub
clc
dec
iret
lret
adc
sbb
pop
js
xor
out
in
xor
inc
sbb
dec
cwtl
addr16
sti
add
sbb
dec
pop
mov
and
lret
add
lock
xlat
push
rcrl
test
addr16
jmp
test
dec
int
inc
and
adc
sbb
add
xchg
mov
sbb
pop
add
inc
fcom
les
push
push
das
pusha
mov
or
cmpb
push
lret
sbb
sub
mov
ds
jnp
clc
mov
xchg
or
fwait
in
outsl
stc
jg
scas
xlat
stos
cmc
roll
cmp
lea
int3
fsts
and
out
fisttpll
stos
xchg
xchg
push
mov
ffreep
clc
jns
mov
nop
popa
inc
and
fnstenv
stc
push
js
or
mov
mov
cmp
push
ja
out
leave
clc
lods
ja
add
jle
out
fs
xor
sub
mov
pop
les
push
shll
or
or
scas
xchg
pop
adc
clc
movsl
sbb
inc
push
cs
loope
push
and
lods
in
into
push
rcr
mov
cmp
sub
xor
inc
jg
sahf
push
sbb
cld
call
sti
push
cmp
in
inc
mov
xor
push
pop
sbb
mov
mov
add
outsl
ss
push
bt
add
mov
subl
and
jo
dec
addr16
loopne
jecxz
and
jo
dec
xorl
push
mov
or
xchg
mov
cli
pop
push
imul
or
adc
push
dec
insl
rcr
adc
insl
insl
std
loope
out
hlt
xor
push
mov
push
rcll
jg
lods
ret
jnp
pushl
aas
cmc
push
sbb
and
arpl
test
jae
jge
dec
insb
or
fistps
call
jmp
or
sbb
test
dec
dec
xor
sbb
and
push
sbb
adc
icebp
cld
add
xor
stos
mov
loop
fisubrs
push
int
push
stos
fwait
ljmp
jecxz
stc
mov
mov
mov
mov
scas
jo
sub
lock
outsb
cmpsl
xor
or
sub
call
xchg
mov
test
xor
push
dec
bound
dec
jg
cmp
add
into
mov
jb
aam
mov
push
pop
mov
lds
xor
js
inc
sbb
scas
cmp
shlb
mov
divl
cld
loope
xchg
pop
fwait
addr16
iret
adc
aam
lds
iret
lods
incl
stos
sub
pushf
push
or
daa
add
adc
mov
mov
in
gs
or
rclb
dec
jbe
or
sub
adc
xchg
sub
shlb
adc
sub
lret
repz
shrb
insl
mov
lret
add
xchg
cmpsl
xchg
adc
pusha
call
test
aad
ficoml
pminub
sub
dec
pop
inc
les
outsb
aad
imull
sbb
fsubr
mov
mov
call
lock
push
add
out
aam
inc
xchg
add
and
inc
pop
push
lods
sub
push
and
hlt
add
push
into
bound
push
and
dec
dec
lods
sbb
shl
cli
cs
out
xor
cwtl
mov
js,pn
sbb
xchg
aaa
aam
hlt
xor
push
jecxz
add
iret
int
gs
push
push
cld
or
push
cltd
or
fcom
dec
je
jl
sbb
cwtl
jns
cmp
rcr
adc
or
push
dec
aas
xchg
in
and
stc
lcall
or
add
imul
fcoml
and
addr16
jb
inc
gs
xor
das
popf
data16
rclb
and
mov
mul
nop
arpl
push
dec
adc
in
movsb
xchg
push
xor
in
jmp
aaa
mov
pop
inc
enter
sahf
add
sub
movsl
int3
dec
and
push
clc
mov
shl
push
mov
pop
pushf
xchg
inc
fwait
daa
movsb
addr16
mov
lahf
aas
ficoms
fidivrl
xchg
aad
int3
jo
pop
adc
stos
xchg
mov
fstpl
xchg
cltd
mov
cmp
call
bound
fwait
stc
pop
mov
pop
lea
ja
mov
out
mov
dec
dec
cmp
cltd
xchg
add
call
outsl
fs
push
and
cmp
or
adc
adc
jle
sahf
inc
mov
or
not
ds
add
mov
xor
and
subb
xor
iret
jo
cmpb
adc
sbb
xchg
bound
jae
inc
lahf
repz
fcmovnbe
xlat
lods
mov
xor
aaa
mov
aad
imul
cld
pop
test
fdivrs
xchg
dec
or
out
mov
or
sbb
inc
and
mov
xchg
cmp
pop
and
int3
aad
xchg
add
sti
pop
adcl
dec
xchg
jae
aad
xlat
sbbl
xchg
sbb
sub
mov
push
stos
and
test
cmp
out
cmp
pop
xchg
xchg
hlt
shlb
cmpsl
movsb
fmul
leave
push
icebp
dec
jnp
push
sarl
jmp
push
or
xor
jmp
xor
in
dec
loop
dec
and
push
add
sub
push
aas
clc
mov
pop
or
jnp
test
lret
addr16
adc
mov
mov
jno
in
xlat
ljmp
inc
inc
or
pop
push
test
insb
pop
mov
mov
inc
lds
out
pop
dec
jo
aas
nop
jmp
loope
mov
or
mov
push
push
sub
data16
fistpll
pop
test
data16
sbb
push
add
and
scas
shlb
scas
and
cmp
mov
push
and
dec
adc
xchg
arpl
pusha
es
inc
adc
outsl
adc
pop
push
pop
cltd
int
ja
enter
out
mov
jb
fistl
adc
mov
sbb
mov
repnz
jo
stos
inc
pop
dec
fsqrt
push
scas
add
orl
cld
pusha
fidivs
cmp
cmp
inc
out
movsb
push
jmp
xchg
mov
xchg
out
jp
mov
mov
xlat
jb
sub
push
aas
movsb
pop
loope
out
push
mov
inc
adc
aaa
rcl
mov
lods
int
in
and
mov
jg
inc
sbb
repnz
inc
inc
rorb
add
adc
xchg
xchg
notl
xor
push
xchg
mov
push
jns
iret
scas
mov
adc
push
loope,pn
or
js
repnz
push
lock
add
lds
cmc
xchg
cld
mov
jecxz
adc
inc
mov
dec
sahf
loop
inc
lahf
lahf
mov
or
mov
pusha
dec
je
mov
xchg
mov
adc
lcall
ljmp
push
pop
aaa
fiaddl
sbb
mull
dec
or
test
xchg
popa
sub
xchg
and
data16
sahf
push
loope
mov
pop
mov
hlt
scas
adc
lahf
inc
pop
cwtl
xor
sbbl
lahf
pop
repz
mov
sbb
fbstp
mov
ficoms
push
lret
cmp
xchg
fildll
out
ds
jge
in
aad
xor
bound
pop
inc
jmp
outsb
test
rcrl
sarl
daa
mov
orb
mov
or
inc
sub
mull
add
and
or
cs
in
pop
sub
in
or
test
pop
sbb
xor
xor
in
mov
sub
sub
jle
inc
xchg
add
or
sbb
sub
fs
jbe
mov
and
idivl
xchg
imul
mov
push
insb
sbb
out
mov
shll
stos
mov
lds
jae
jbe
adc
leave
cmp
sbb
in
mov
fwait
mov
aas
and
std
push
in
jo
sub
and
rorb
outsl
mov
and
cmc
pop
cs
mov
test
mov
inc
xor
ret
jbe
xchg
pop
ret
in
scas
inc
jmp
pop
dec
and
adc
rcr
mov
cwtl
sbb
inc
mov
shlb
fcoml
lods
xor
cltd
sub
scas
adc
jg
pop
pop
icebp
cmpsl
das
mov
and
lods
cltd
jb
jge
cmp
or
in
or
filds
rsqrtps
pop
andb
pop
test
ret
mov
lods
arpl
popa
xchg
cmp
inc
repz
sbb
xchg
add
rcll
shll
fwait
push
cmc
data16
fisubs
add
inc
mov
cmc
sbb
lret
mov
mov
mov
scas
insb
jns
leave
movsb
dec
xor
pop
push
adc
lcall
xchg
sub
mov
icebp
mov
data16
mov
jbe
pop
stos
addr16
pop
dec
jl
andl
vpsadbw
push
dec
adc
lret
or
mov
rclb
data16
aam
pop
dec
xor
jp
popa
inc
shrd
dec
icebp
in
adc
das
enter
cli
adc
popf
jle
loopne
mov
out
jmp
and
ljmp
ret
mov
inc
repz
out
loopne
xor
push
adc
add
les
jnp
ja
rclb
pop
cmc
jl
jle
and
push
mov
subl
jo
fcomps
pop
ret
lcall
scas
mov
call
outsl
push
icebp
mov
or
and
mov
jp
addb
shlb
lret
imul
push
push
idivl
push
pop
push
jo
imul
ss
xchg
pop
jle
sbb
add
mov
mov
mov
sar
push
lods
subl
adc
pop
add
pushf
jns
outsl
cli
in
cmp
push
mov
jp
inc
xchg
pop
adc
sub
push
push
inc
test
ljmp
adc
pop
pop
cmp
adc
push
and
test
aam
and
xchg
loope
jne
rcll
pop
inc
pop
movsl
int3
fstp
arpl
addl
out
jp
mov
les
mov
cmpsl
dec
mov
jmp
pop
adc
pop
mov
inc
dec
cmpsb
xor
std
mov
bound
sahf
push
lock
lock
or
cs
dec
xor
and
out
in
arpl
pop
or
add
lret
je
jb
int
aaa
mov
push
add
lds
push
xlat
addl
jo
xchg
mov
int
cmc
cli
roll
aaa
pop
lcall
idivb
xor
fucomp
mov
jb
gs
push
ljmp
xor
in
int3
xchg
cmpsb
pop
dec
sbb
adc
nop/reserved
sbb
hlt
dec
pop
popa
xlat
and
mov
jmp
pop
fs
jae
or
sbb
jb
mov
mov
sbb
repnz
insb
inc
icebp
fidivrl
cmovl
lods
sub
lds
int
js
in
mov
jne
sub
jmp
sbb
pop
test
inc
popf
fidivs
sub
shl
inc
xchg
or
stc
adc
lahf
sbb
dec
and
push
pop
jns
adc
gs
sub
mov
rcrb
call
add
xlat
add
adc
adcl
fbstp
test
aam
imul
es
lds
pop
hlt
cmp
jae
sahf
lahf
test
mov
xor
mov
and
push
popf
ljmp
push
push
fcoml
mov
fnsave
out
cmc
sbb
jle
lret
jns
or
test
imul
sbb
arpl
mov
imul
add
xchg
mov
icebp
jecxz
xchg
out
jle
sbb
repnz
push
jnp
int
sbb
sbb
xchg
fdivrl
les
sbb
xor
rcrb
cmp
or
mov
mov
dec
mov
test
xchg
pop
fdivp
in
xchg
cmpsl
dec
push
incl
push
js
inc
call
jne
xchg
sbb
jbe
adc
mov
inc
test
in
adc
clc
faddl
push
fadds
shr
mov
test
pop
adc
mul
dec
xchg
cmp
imul
bound
stc
add
cs
adcl
mov
icebp
pushf
maskmovq
and
push
mov
inc
repz
neg
adc
popw
lock
testl
test
mov
inc
push
add
pop
add
jp
mov
inc
addr16
xor
sahf
addr16
push
push
sbb
mov
push
andb
jnp
pushf
cmp
pushf
xor
jmp
jo
fnstsw
cltd
sub
icebp
mov
sub
inc
clc
in
in
pusha
adc
mov
pop
in
xchg
add
jo
stc
aad
adc
mov
stos
int
sbb
add
inc
inc
ss
fisttpl
xlat
cmp
mov
rclb
test
negl
std
dec
adc
lock
push
stos
sti
pop
dec
xchg
and
mov
arpl
pop
scas
jmp
xchg
sbb
or
mov
cmp
dec
pop
aam
and
fsqrt
adc
inc
orb
mov
fbstp
movsb
jg
sbb
push
mov
cld
cld
cmp
lea
add
movsl
sbb
hlt
lea
enter
add
pop
int
in
cmp
int3
in
push
dec
dec
jbe
insb
pop
mov
inc
lcall
inc
in
dec
inc
ljmp
dec
ljmp
int
jmp
cs
idivb
into
push
mov
mov
cmp
ss
pop
xor
jg
jl
das
xchg
out
and
or
ret
mov
cwtl
pop
jmp
adc
inc
and
xchg
sarl
cwtl
hlt
pop
mov
shll
int
mov
dec
sub
scas
fidivl
jmp
cmp
lahf
into
cmp
cmc
jae
pop
shlb
adcb
add
imul
sub
xchg
pop
push
pop
push
mov
mov
ret
and
cmpsb
mov
pop
sub
scas
pop
dec
dec
push
push
mov
mov
jl
mov
call
mov
sbb
and
test
adc
push
mov
xor
xacquire
je
hlt
cmp
dec
sti
mov
cltd
clc
or
pop
sub
cwtl
dec
or
dec
cld
cmpsb
dec
mov
rclb
and
mov
push
es
pop
xlat
cmpsb
aad
ret
add
sbb
les
push
mov
sbb
daa
jecxz
push
idivl
pop
cltd
pop
pop
xor
stos
jns
mov
addr16
and
sub
gs
sar
sub
and
mov
bound
and
xchg
and
lcall
sbb
clc
enter
mov
sbb
and
mov
sahf
stc
data16
fdivr
sub
jns
movsl
rcll
cmp
idivl
jle
ficoml
shr
into
dec
inc
cmp
mov
cmp
add
or
xlat
mov
rorl
cmp
aas
jne
ret
push
xchg
lea
push
lret
testl
gs
in
mov
insl
in
ret
in
push
cmp
mov
sbb
jle
cmp
call
int3
adc
and
jle
push
popa
mov
addb
int
mov
xchg
adc
out
and
lods
push
push
mov
adc
hlt
lahf
jae
testl
xor
lds
fs
sub
sbb
xor
cwtl
cmp
cmp
aad
xchg
adc
xchg
dec
hlt
insb
adc
push
insl
ror
pop
sbb
jno
jne
jno
pusha
dec
or
mov
test
inc
mov
shrl
cmp
int
repnz
jbe
mov
movsl
mov
mov
in
ja
sub
inc
mov
clc
pop
test
adc
ljmp
sbb
add
ucomiss
mov
push
testb
cwtl
mov
or
es
out
insb
push
inc
aaa
pop
cmp
lret
mov
into
xchg
sahf
mov
ss
inc
jb
inc
ret
int3
xor
fcmovb
js
jns
push
inc
mov
int
or
jae
ret
test
and
mov
sbb
int3
pop
outsl
and
shl
add
push
stc
sub
movsl
inc
gs
stos
int3
loope
out
js
or
sbb
and
jg
lods
mov
clc
xchg
xchg
rclb
mov
sub
mov
loope
imul
js
and
subl
in
fistps
andb
mov
clc
adcb
les
fdivr
loope
cmp
sbb
dec
std
test
cmc
flds
push
inc
pop
mov
insb
mov
rcr
movsb
cmp
loop
mov
call
pop
addr16
add
pop
lods
cld
cld
std
mov
aaa
pushw
xlat
out
adc
cmc
and
out
shr
aad
rclb
dec
in
xor
test
xor
nop
cmp
mov
cmp
adc
jle
leave
dec
movsl
jmp
lcall
pop
ret
into
outsl
adc
cltd
rcrl
inc
push
aam
push
cs
stos
dec
outsb
test
xor
pop
test
sbb
stos
mov
adc
sub
enter
push
sbb
std
mov
and
xor
hlt
push
ds
shrl
adc
pop
inc
fistl
xor
dec
in
in
mov
stc
push
push
mov
inc
sbb
pop
insb
and
jmp
addr16
fsubp
mov
jb
jb
sub
jge
mov
cmp
mov
mov
es
hlt
adc
xor
push
inc
pop
jo
xlat
and
test
pop
and
repnz
mov
mov
cmp
xchg
jmp
jecxz
fsubrl
leave
movsb
call
dec
enter
ret
mov
hlt
sub
shl
aad
ret
lret
shll
add
jbe
je
outsb
mov
orb
int3
inc
dec
dec
sub
popl
test
loope
push
push
ljmp
cmp
jbe
mov
cmpsl
or
adc
int
addb
lods
divb
dec
insb
inc
shrl
jle
mov
and
mov
mov
pop
stc
movsb
and
clc
mov
andb
out
ret
cmp
pop
mov
cmp
icebp
fsubp
xchg
push
mov
mov
fnsave
lret
int
dec
scas
push
and
sub
inc
aas
call
scas
mov
aaa
mov
pop
push
aaa
sti
outsl
inc
and
fwait
fwait
pop
data16
pop
pop
roll
scas
add
clc
inc
mov
mov
mov
dec
sahf
add
xor
add
cmp
add
stos
stos
rorb
in
imul
shl
and
stos
push
xchg
sub
sarl
xchg
pushf
cmp
mov
ds
sub
mov
rolb
jno
jp
xchg
fistl
leave
mov
add
jge
int
add
inc
or
inc
es
adcb
fisttps
push
inc
pop
or
stos
push
repz
movsl
mov
pop
mov
rorl
pusha
and
pop
fsubs
sti
jne
sbb
xor
in
xor
pop
cmpsl
insl
or
pop
jl
stc
jp
adc
xlat
icebp
jecxz
and
scas
inc
in
xor
sub
ds
inc
fcoml
xchg
add
ss
lock
push
jge
xchg
aaa
fiadds
dec
add
add
mov
adc
notb
in
in
xchg
cs
ret
push
gs
sub
inc
xor
pusha
adc
shrb
and
sahf
lds
subb
scas
or
dec
jae
sub
lock
fbld
pop
mov
out
cwtl
lahf
aam
ljmp
jp
xbegin
jp
test
lock
sub
sbb
out
gs
aam
movsl
in
test
mov
pop
jbe
mov
jmp
sbb
mov
jns
insl
mov
loop
push
je
jo
and
cmpb
lcall
sarl
cwtl
daa
adc
xor
outsl
mov
into
push
jge
and
loope
std
jle
sbb
fstp
movsb
jns
add
ja
ror
xor
outsb
pop
in
pusha
push
mov
je
lret
mov
mov
push
outsb
jmp
adc
lret
fimull
lods
stos
inc
pop
lock
ficompl
pushf
and
lret
popf
add
jne
jne
mov
add
aaa
in
es
repz
insb
sbb
in
mov
mov
aad
sbb
stc
cmp
sub
outsl
push
out
push
pop
jns
mov
dec
js,pt
loop
mov
fadds
cmpsb
cmp
stos
push
lahf
sbb
enter
je
jmp
dec
adc
xchg
jmp
inc
jmp
call
sbb
faddl
aaa
out
jl
repz
xchg
push
out
sub
jp
push
das
sub
nop
xchg
neg
push
sub
pop
stc
adc
iret
add
lahf
outsl
jmp
mov
or
jmp
pop
pop
fdivr
aaa
movsb
xchg
sub
lods
inc
aad
mov
add
adc
xchg
cmp
or
add
mov
imul
jae
mov
aas
fldcw
ljmp
dec
xchg
jae
lds
sbb
test
roll
std
push
mov
mov
sub
xchg
cmp
gs
lods
jp
add
or
das
add
jg
jno
mov
fldenv
cmp
shlb
mov
jp
xlat
xor
int3
aad
or
ss
lods
mov
pop
lahf
andb
add
sub
xor
pusha
in
mov
xor
or
mov
repz
les
adc
cwtl
pop
mov
int3
mov
jmp
jbe
popa
faddl
add
mov
and
ds
dec
lret
and
jmp
pop
jne
das
popa
cmp
xchg
jb
dec
push
jg
fst
jne
pop
jle
and
dec
sub
les
dec
into
add
cltd
movhps
sbb
jecxz
arpl
jp
loop
jno
jecxz
jb
xchg
sub
pop
iret
repnz
ljmp
and
test
mul
dec
test
jnp
adc
out
xor
ret
lret
cli
outsl
xchg
mov
fcomps
cmp
cld
adc
inc
pop
and
icebp
mov
enter
xchg
sub
cmp
and
sbb
mov
aaa
cmp
pop
mov
mov
jg
xor
adc
iret
popa
jae
lret
ret
imul
adc
inc
jns
ret
ret
fsubrl
mov
lret
mov
dec
leave
cld
mov
aas
sbb
iret
mov
jno
das
cltd
test
xor
shrl
push
xor
push
lcall
fidivl
fwait
pop
movups
xor
negl
and
cmc
sub
int3
push
jg
lcall
or
xor
mov
int3
cmp
inc
arpl
jmp
pop
arpl
shrb
push
and
mov
lcall
scas
jb
mov
cmp
repnz
outsb
xor
xchg
addr16
jo
cltd
adc
lea
xor
xchg
or
pushf
loop
inc
mov
stc
sbb
dec
out
in
out
cs
push
nop
cmc
je
push
insl
mov
subl
xchg
out
sub
mov
pop
mov
jb
cmp
xor
pop
mov
test
mov
sub
fisubs
push
mov
dec
repnz
cld
jmp
jg
es
mov
loop
and
rorb
pop
mov
adc
loopne,pn
pusha
lea
enter
dec
lock
jp
mov
rcrl
pop
repz
cli
into
pusha
adc
pusha
sbb
sub
inc
jb
mov
fiaddl
mov
pop
push
rolb
push
sahf
jmp
rcrl
test
out
push
inc
pop
mov
xorl
xor
add
fxch
mov
dec
push
shrl
dec
mov
ss
sub
xor
sbb
out
sbb
loopne
push
gs
jne
jnp
xchg
fistpll
adc
shll
jo
adc
dec
fwait
outsl
push
dec
sahf
sti
add
cmp
jge
push
xchg
sub
fmul
scas
loopne
notb
xchg
test
mov
mov
sbb
mov
and
cmp
mov
xor
rcll
push
lods
mov
sub
add
in
cld
push
stc
push
push
js
iret
sub
inc
dec
notb
aas
mov
cwtl
or
movsl
jp
insl
xlat
cmp
in
fdivrs
sbb
movsb
and
xor
jmp
or
push
and
xchg
jb
rorb
sarl
or
xchg
in
popa
mov
sbb
or
or
xor
mov
imul
into
scas
xchg
lds
lret
mov
es
loope
mov
ret
jecxz
sub
jecxz
test
adc
cli
push
inc
shll
cld
mov
arpl
pop
push
scas
fwait
push
mov
lds
mov
cmp
fs
pop
mov
iret
adc
loopne
int
or
aad
data16
enter
cltd
js
sub
jb
js
stos
out
pop
pushf
shlb
inc
int
mov
fidivrs
aaa
mov
sbb
xchg
flds
sbb
and
mov
lret
pop
jp
loopne
sar
xor
jmp
loopne
push
arpl
jbe
push
loopne
in
fsubrs
ds
fildll
or
out
inc
jbe
fisttpll
and
jg
xchg
es
adc
mov
inc
jb
push
cmp
push
aaa
lret
push
or
cmp
scas
hlt
adc
pop
or
clc
xor
mov
push
stos
in
in
test
or
fisubs
push
or
mov
mov
jg
rcll
dec
cmp
mov
shl
push
nop
xorb
ss
pop
mov
xchg
mov
std
dec
in
aam
cmpsb
scas
inc
lods
xlat
mov
sahf
xchg
aam
add
push
into
iret
test
or
cmpsb
dec
mov
xor
mov
outsl
adc
fsubl
push
sub
and
imul
pop
movsl
ret
push
adc
cwtl
mov
cmp
dec
sub
test
aaa
js
dec
push
cmpl
jne
xchg
js
lods
dec
in
icebp
rorb
jno
cltd
repz
fisttpl
xor
dec
out
mov
mov
xor
xor
xor
add
mov
pop
sbb
mov
cmpsl
and
xchg
das
ffree
add
ret
fwait
jecxz
mov
lahf
jle
mov
mov
daa
test
test
jmp
xor
xlat
mov
add
or
pop
pop
cs
cmc
out
test
jmp
mov
rcrl
inc
cmp
jae
das
inc
xor
jmp
push
into
mov
notl
fsub
fyl2xp1
add
dec
sahf
nop
push
cmpsl
lea
push
stos
ss
cmp
in
pop
nop
jmp
aam
sbb
cmpl
adc
push
push
xor
pop
dec
das
push
cmp
roll
out
out
add
ss
push
jge
and
fnstsw
test
cmp
jle
pop
jecxz
mov
pop
int3
add
mov
sub
and
mov
daa
pop
jno
or
out
rorl
dec
mov
sbb
outsl
xchg
push
jl
ret
dec
mov
push
aaa
push
pop
push
aam
mov
lret
scas
pop
mov
pop
repz
pop
insb
push
pop
icebp
dec
pop
mov
into
inc
cmp
leave
in
xor
rcrb
repnz
push
ror
imul
rcrl
popf
test
pop
xor
push
fldl
mov
aas
scas
dec
xor
inc
cmpsl
mov
push
test
lret
xchg
mov
sub
mov
or
pop
jle
sbb
loope
pop
push
and
out
data16
sub
mov
adc
inc
jno
test
imul
cmp
push
pop
push
inc
subl
nop
mov
dec
or
add
mov
or
cmp
cmp
xor
ret
xchg
xchg
xchg
dec
repnz
idivb
add
mov
shrb
push
pop
test
clc
pushf
dec
mov
mov
cmp
cmp
inc
das
clc
jbe
in
mov
leave
ljmp
cli
popa
les
xchg
sbb
test
loopne
or
mov
inc
cwtl
ja
pop
jb
mov
rcl
es
push
xchg
sub
andb
or
mov
sub
fsubl
xchg
xor
clc
dec
cmpsb
xorb
ds
cmp
add
mov
xchg
xor
pop
adcb
sub
jecxz
outsl
and
punpckhwd
pop
scas
or
sub
mov
xchg
lea
xchg
mov
jl
or
mov
adc
xchg
mov
pop
out
test
lods
fsubl
aad
mov
push
aad
add
rorb
xchg
lret
lods
cwtl
data16
jmp
lea
orb
xchg
cld
les
insl
inc
in
push
mov
loope
std
dec
mov
sbb
or
jmp
push
jno
repz
mov
sbb
cwtl
lock
ljmp
xor
aam
jbe
xchg
cmp
sub
fdivrl
pusha
pop
pop
cmp
jo
mov
push
adc
fsubrl
cmp
outsb
out
push
xor
test
iret
adc
les
jl
cmp
mov
in
lret
sub
sahf
sbb
push
sti
xchg
pusha
adc
aam
sbb
xchg
aaa
cmp
insl
dec
mov
cmp
aaa
mov
sub
mov
dec
aad
jae
movsb
add
out
jne
xor
cmpsb
loop
lock
out
mov
mov
mov
mov
aam
stos
imul
packuswb
add
int
sub
pusha
cmpsb
add
test
sub
mov
add
aas
and
fcmovnu
lds
icebp
push
mov
fcmovu
fsubrp
mov
outsb
lods
negl
fwait
imul
cmp
cwtl
sbb
fs
cmp
test
cmp
and
leave
popf
or
sub
sbb
jecxz
dec
insb
out
cmp
mov
les
adc
mov
mov
sarl
fimuls
adc
push
or
pop
ljmp
mov
bound
xchg
mov
loop
push
fisubs
orb
cmp
or
orb
jg
lea
in
addl
scas
aas
lcall
loopne
out
xor
mov
mov
mov
ljmp
clc
lods
xchg
adc
cmp
xchg
xchg
imulb
jecxz
xchg
add
movsl
xor
pusha
and
movsb
jbe
mov
fwait
and
dec
mov
cmp
popa
daa
inc
fs
and
and
pop
movsl
mov
jbe
adc
pop
pop
pop
insb
jmp
and
decb
nop
or
negl
mov
cmpsb
dec
ljmp
jge
scas
lea
daa
jbe
inc
ss
cmc
mul
or
sbb
mov
xchg
jns
mov
sbb
movsb
cmp
push
lods
push
bound
in
add
push
mov
mov
out
rorb
fimuls
dec
adc
rcrb
or
subl
fwait
lret
lds
pop
xor
in
inc
jbe
cmp
scas
pop
cmpsb
in
lds
mov
push
out
add
lcall
test
mov
push
notb
inc
push
fisubs
sbb
mov
mov
fistl
xchg
mov
lret
or
rclb
and
inc
hlt
jecxz
repz
mov
jg
shll
popa
sbb
bound
loopne
mov
dec
sti
incb
push
or
pop
or
or
fimull
add
fwait
ret
inc
imul
and
out
nop
test
jno
and
sub
push
inc
jne
mov
xor
rolb
cmp
push
aad
data16
aaa
dec
jl
movsl
ror
lret
and
imulb
bound
int3
std
pop
or
mov
pop
mov
ficoms
and
leave
orl
cs
dec
mov
sbb
push
pop
adc
imul
lcall
adc
ror
clc
js
xor
jae
adcl
mov
fistl
das
mov
addb
scas
negl
ffreep
dec
and
dec
das
je
shr
imul
gs
sub
inc
lret
cmp
sbb
cwtl
inc
lock
pop
sub
rol
cmpb
mov
mov
stc
dec
and
loop
mov
addb
aaa
mov
xchg
xchg
outsl
jl
test
imul
lds
pop
xor
push
fstpt
repz
into
in
lret
and
adc
add
sub
mov
cmpsl
mov
dec
lea
sbb
dec
orb
cmp
aam
clc
addr16
xchg
in
lret
sbb
pop
outsl
jne
mov
push
sbb
movsl
imul
jge
pop
adc
jo
test
out
rolb
fs
sbb
int3
mov
add
cmpsb
and
push
js
leave
xor
sbb
add
adc
xchg
jp
gs
xor
sbb
or
cmp
xorl
iret
push
stc
test
loope
out
mov
js
fistl
sub
popf
test
dec
enter
jnp
sub
pop
and
clc
mov
vandnps
and
mov
mov
mov
je
out
cmc
outsb
mov
ja
or
cmpsl
repz
insl
cwtl
push
rcl
jg
cld
lea
outsb
aad
xor
in
cmp
xchg
pop
pop
xchg
dec
pop
sub
nop
mov
jle
push
add
inc
mov
testb
or
into
ds
pop
xchg
shrb
add
repz
fiadds
sbb
jnp
mov
iret
and
aad
and
lock
ss
rolb
aas
mov
fsubl
xchg
xchg
gs
test
fwait
ss
scas
rorb
sbb
add
loop
or
xchg
imulb
cmp
mov
lea
or
sbb
or
push
push
xorl
dec
out
mov
sbb
dec
subb
rcrb
bswap
push
mov
pop
fistpll
gs
testl
out
jp
cmp
leave
or
dec
xor
dec
aam
or
pop
nop
xchg
xchg
or
xchg
pushf
push
sub
sahf
jnp
or
inc
aas
in
mov
jno
in
mov
adcl
insb
jo
push
arpl
pop
sti
xor
imul
loope
cmpsl
ja
adc
xchg
pop
xorb
and
movsl
jmp
pop
fisttps
gs
int
inc
jb
int3
dec
and
add
xlat
or
iret
pop
gs
mov
or
push
jmp
lahf
addb
inc
ret
stc
cmp
cli
xlat
push
cmp
lret
jge
stos
lods
roll
repnz
cli
mov
test
out
sub
js
into
popa
pop
leave
xchg
hlt
movsb
or
lock
dec
enter
popa
test
out
aad
bound
push
adc
aas
es
jnp
pop
scas
xchg
stos
push
mov
push
movsb
adc
into
mov
dec
arpl
movaps
push
mov
clc
addr16
mov
jmp
cmc
ljmp
xor
xchg
insl
out
xor
inc
pushf
lock
popf
fwait
sub
inc
push
and
aad
mov
mov
xchg
jg
jno
mov
cmp
xorb
pushf
xchg
ret
push
sbb
or
jns
in
and
sbb
in
sti
mov
lret
shlb
test
pop
dec
pop
cmp
pushf
arpl
add
je
int3
sbb
fiadds
roll
dec
test
sbb
ret
mov
mov
lods
adcb
mov
in
test
mov
xrstors
lea
in
in
jmp
mov
in
inc
pop
lea
lods
jae
rclb
mov
mov
push
out
adc
pop
adc
in
stos
or
sbb
nop
test
addr16
jne
pushf
lret
outsb
add
int3
mov
mov
lahf
inc
sub
xchg
stos
aad
dec
fcmovnbe
fimull
lods
bound
sub
push
sti
mov
mov
push
xchg
xor
sub
pop
jb
push
mov
mov
loopne
imul
inc
ss
test
lds
fs
mov
adc
and
clc
stos
cmp
push
ds
mov
lahf
or
mov
or
add
jl
push
scas
subl
adc
pop
dec
dec
sub
xor
push
add
movsl
inc
pop
xchg
dec
push
movsl
stc
pop
scas
scas
btr
mov
or
dec
fldl
or
adc
ljmp
pop
pop
enter
xor
xchg
or
mov
jbe
js
sub
cwtl
rol
mov
lea
mov
xor
push
in
flds
out
push
xor
addl
mov
dec
xchg
cmp
std
movl
push
outsb
push
gs
mov
in
cmpl
lods
loope
ds
dec
jne
stc
sub
add
int3
cmp
sbb
jle
movaps
or
pop
fistl
mov
pop
call
jnp
jl
aad
insb
in
push
lods
ret
xor
test
lods
cltd
test
fldl
and
mov
jb
scas
xor
jle
stos
push
nop
adc
cltd
ret
sub
mov
aad
cltd
shl
call
js
mov
lcall
sbb
jb
adc
and
fists
mov
mov
test
rclb
iret
imul
test
popa
cmp
int3
lret
gs
into
ret
sbb
sub
dec
mov
sub
shl
int
push
fs
push
dec
rol
lea
int3
out
in
cltd
xor
ret
push
sbb
jno
ds
sarl
mov
lods
jg
cmp
ja
jns
adc
fs
test
leave
movsb
loope
push
mov
add
xor
xor
clc
clc
fwait
sti
inc
test
pop
sbb
cmc
test
mov
scas
in
and
fdivrs
lds
add
sar
lcall
fwait
sbb
out
pop
test
xchg
cmp
lods
mov
nop
imul
stos
subb
xor
imul
cmp
ljmp
ds
andl
popa
ja
add
dec
arpl
inc
mov
push
ds
lods
push
ret
xchg
mov
es
ja
or
lahf
xchg
mov
mov
add
iret
rcll
int3
aad
sarb
mov
mov
shr
adc
fcmove
stos
arpl
xorb
mov
imul
dec
mov
xchg
data16
movsl
jecxz
dec
popf
sbb
mov
adc
cmpb
cmp
pop
mov
repnz
repnz
push
sbb
adc
jb
mov
stos
fwait
xor
into
stc
xor
imul
push
xchg
or
popa
je
add
fidivs
inc
in
push
rorb
sub
movsb
stos
pop
jbe
dec
ljmp
inc
ret
mov
sbb
ja
add
loop
mov
add
adc
dec
or
mov
test
xor
lock
shrl
adc
fsubrs
cmp
mov
out
cmp
mov
out
cs
xor
loopne
ss
push
xlat
or
sub
or
aaa
push
aas
lcall
adcl
out
xor
shll
cwtl
in
sub
mov
and
fisttpl
mov
je
rcrb
jo
jl
push
jge
jae
rorb
mov
xchg
add
das
jne
mov
inc
rorb
xor
jnp
test
add
or
jbe
iret
mov
mov
stc
mov
mov
and
mov
cmc
das
or
movsb
incb
push
mov
stos
lret
pop
icebp
cmpsb
jg
shlb
mov
insb
sub
xchg
jno
mov
xor
pop
imul
mov
push
rol
jmp
cmpsb
scas
pushf
xchg
inc
es
adcb
xchg
pop
rclb
add
js
je
or
mov
mov
mov
cltd
and
mov
popa
sti
cmpsl
rcrl
fdivrl
push
mov
insl
jo
cmp
xor
insl
xchg
push
or
sub
outsb
xor
ret
int
inc
adc
repnz
rcrl
pushf
insl
iret
push
sub
cld
clc
fstl
out
in
loopne
push
xchg
mov
lock
mov
cmpsl
rorl
pushf
add
lock
push
mov
add
or
push
xchg
jae
xor
push
lods
inc
xor
jns
mov
pop
mov
fisttpll
fisubs
inc
cmp
pop
mov
scas
jae
pop
pop
jmp
orl
adc
addr16
jo
aaa
push
pop
push
jmpw
xor
gs
jle
inc
cmp
iret
or
fmul
mov
jge
fwait
xlat
loope
enter
sahf
loope
mov
sbb
out
inc
mov
addr16
outsb
hlt
or
and
aad
push
sub
jns
movsl
inc
sub
int3
and
xor
fucomp
adc
jae
mov
idivl
test
xor
cli
mov
out
dec
jns
mov
and
xchg
bound
fnstcw
xchg
repz
or
dec
mov
mov
shll
xor
mov
pusha
dec
sub
inc
lods
outsb
pop
push
sub
mov
neg
js
icebp
shlb
adc
sbb
pop
pushf
lea
roll
mov
sahf
sub
repnz
imul
sub
addr16
xlat
jno
pusha
test
fldl
jg
sub
pop
into
out
dec
or
lock
add
daa
andb
mov
sub
inc
outsb
jp
pop
xlat
mov
xchg
jecxz
sbb
mov
xabort
and
mov
icebp
jb
les
fadd
pop
inc
mov
jl
dec
fadd
push
pop
mov
ljmp
arpl
adcb
pop
movsb
push
cmp
dec
out
and
scas
orl
xor
inc
ds
lahf
mov
ret
and
sbb
jae
inc
lock
mov
das
fs
add
in
addr16
loop
mov
xchg
ljmp
ss
jno
pop
hlt
loopne
inc
sti
in
jmp
lea
repz
jmp
ja
sub
mov
les
lds
sahf
mov
movb
daa
and
adc
or
pop
pop
repnz
sahf
popf
je
mov
fs
pop
push
mov
outsb
cmp
xlat
mov
imul
dec
adc
sbb
lret
adc
sub
mov
popf
mov
mov
cmp
jl
scas
sub
out
xchg
inc
fbstp
aas
mov
add
scas
data16
xlat
push
imul
mov
jecxz
js
or
push
pop
ss
and
mov
test
cld
sbb
xor
dec
es
sub
cmp
cmc
or
and
icebp
insb
jmp
sbb
push
add
out
ret
es
jge
fst
push
pop
call
inc
test
sub
lods
xor
stc
popf
xor
xchg
cwtl
push
orl
cmpl
pop
jg
pushf
aad
xor
lahf
mov
std
aas
movsb
or
rol
mov
rclb
pusha
aam
movsl
jle
aas
int3
ss
sahf
push
test
mov
cmp
mov
cmpb
jae
pop
pop
xchg
jne
mov
lret
sub
push
mov
xchg
ljmp
lcall
and
daa
data16
or
push
sub
push
ret
pop
pop
ljmp
mov
arpl
dec
pop
jl
mov
call
push
jno
in
pusha
xorb
jle
cmp
inc
or
jo
cltd
and
adc
push
xchg
adc
ret
xchg
pop
inc
xchg
xchg
jg
test
loopne
imul
push
roll
xchg
gs
cltd
lods
scas
mov
adc
push
std
out
jo
add
sbb
and
dec
setae
test
shll
lods
ljmp
mov
cwtl
loope
insl
inc
les
sub
or
js
cmpsb
xor
mov
cmpsl
imul
es
push
pop
icebp
pop
aaa
fld
jns
jae
outsb
inc
in
fistps
push
fisttpll
hlt
cwtl
pop
es
mov
pop
test
cwtl
sbb
cmp
das
and
movsb
into
and
cli
loope
ret
mov
xor
popa
and
mov
dec
xor
mov
mov
mov
pusha
or
jne
lret
insb
cmp
iret
out
imul
rcrb
push
mov
dec
jns
out
add
xchg
insb
lea
mov
sub
pusha
test
push
divb
test
out
or
mov
dec
mov
sub
test
adc
push
aam
out
inc
mov
ja
ss
add
jg
push
insb
sbb
mov
stos
cs
popa
test
inc
xor
bound
xor
loopne
inc
jp
ljmp
int3
gs
jo
pushl
out
call
leave
popa
clc
imul
and
aaa
addr16
mov
jno
mov
ret
fisttpl
icebp
jp
lods
jmp
cltd
or
popa
jae
popa
mov
fidivs
movsb
cmp
push
sub
push
xchg
ret
xchg
jo
movsb
cs
test
cmp
fisubs
or
lds
mov
xchg
push
inc
popf
push
adc
inc
sub
inc
ds
mov
scas
jno
cs
cwtl
cmp
out
jecxz
in
clc
inc
ret
bound
and
insl
push
dec
mov
cmp
push
cmp
dec
sbb
fbstp
xchg
xchg
push
lret
mov
ret
dec
sarb
lock
lds
mov
iret
or
subl
mov
cltd
mov
adc
gs
inc
out
sbb
push
mov
push
and
in
or
mov
inc
dec
repz
fsubr
and
add
rcrl
mov
mov
jl
pop
fbstp
dec
jo
dec
popf
adc
and
inc
fdivrs
or
or
pop
push
es
rcrb
sbb
or
cld
testl
cmpsb
dec
sbb
jge
arpl
cmp
pop
mov
rolb
sbb
xlat
jg
call
xlat
and
fisubrs
lea
adc
sbb
dec
imul
les
lock
xchg
sbb
xchg
nop
and
inc
xchg
orl
vpmacssdqh
push
push
insl
jb
mov
or
xorl
mov
xchg
jbe
int3
iret
pop
cmp
and
jno
mov
into
cmpsl
and
inc
pop
sarl
lcall
push
sub
add
daa
sub
movsb
int
push
cmp
adc
mov
lock
out
ret
sbb
fwait
icebp
dec
pop
xchg
mov
mov
pop
das
es
pop
test
mov
mov
mov
ds
fldenv
push
icebp
push
in
jb
push
jge
cmpsl
call
mov
xchg
xchg
js
das
ffree
sti
and
fldl
xchg
scas
lahf
mov
sarb
ds
pop
dec
push
daa
fisttps
dec
mov
int3
jge
dec
inc
and
add
mov
lods
add
aam
std
pop
ret
loop
out
jns
in
insb
rcl
pop
adc
imul
mov
aad
sbb
adc
mov
push
stos
xlat
fsubrp
scas
jo
negb
dec
jle
outsb
adc
insb
int
push
push
inc
jg
shl
popf
sub
sub
add
sahf
mov
je
jo
popf
jp
hlt
stc
cmp
scas
jge
mov
lods
mov
or
inc
aam
fnsave
pop
mov
xor
out
dec
adc
xchg
stc
clc
ficomps
ss
and
adc
and
xchg
lcall
jmp
dec
rcrb
or
cmp
dec
sbb
cli
mov
mov
mov
sub
adc
lods
mov
outsb
popf
jl
or
xlat
xchg
insb
jge
sub
and
sbb
pop
jo
roll
sar
sti
arpl
pusha
sbb
out
adc
jae
enter
mov
out
test
shll
test
fnstcw
lock
fcmovne
push
xor
xchg
dec
dec
sbb
outsb
push
mov
and
xor
xlat
ss
pop
mov
sub
xchg
pop
adc
out
mov
mov
in
xor
mov
testl
pop
sub
sbb
sti
sbb
dec
je
packsswb
sub
mov
out
sbb
or
subb
aad
add
sarb
mov
es
sahf
repz
and
pop
jno
jmp
push
xchg
cmp
and
xchg
cwtl
mov
jno
mov
or
dec
sahf
stos
gs
in
insb
es
xchg
test
xor
xor
mov
jnp
shll
js
jp
test
lods
push
cmpsb
jbe
in
mov
shl
jge
xchg
sub
mov
fimull
jns
jmp
pop
iret
fcomi
push
mov
lahf
sti
imul
rcrl
nop
sub
repz
xchg
dec
add
rcrl
shlb
dec
dec
out
mov
xchg
push
pop
adc
imul
push
xchg
inc
sbb
je,pt
in
inc
push
push
aad
sar
cmp
nop
call
cmpsb
out
pop
fnstsw
lds
lcall
inc
dec
lods
jne
lcall
int
mov
mov
mull
push
push
shr
mov
ja
insl
int
movsl
push
lods
mov
pop
pop
popa
dec
cld
dec
sub
ds
or
loopne
xor
int3
scas
or
jbe
scas
xor
pop
xchg
and
insb
jnp
cmpsl
inc
icebp
mov
push
inc
pop
or
mov
cltd
mov
jmp
in
fsubrl
push
test
insl
xchg
sub
dec
nop
lret
cmc
es
push
cmp
xchg
enter
inc
pop
xchg
mov
aas
in
hlt
cli
les
jl
adc
lods
cmc
pop
repz
stos
icebp
add
xchg
out
in
inc
xor
jle
ss
fildll
push
aaa
pop
push
jmp
push
jne
addr16
les
jo
sti
fcmovb
mov
inc
pop
jno
mov
in
add
ss
lods
popa
and
adc
mov
cmpsb
cmp
es
inc
jns
nop
leave
out
jnp
mov
iret
jmp
cmpsl
mov
out
jbe
mov
mov
insb
mov
or
je
inc
fnstcw
inc
ss
outsb
push
movsl
xchg
out
lahf
dec
sub
cmp
or
icebp
mov
roll
push
bnd
movsl
stos
leave
mov
loop
roll
int
aas
sbb
mov
mov
int3
daa
mov
andb
jg
jl
push
sti
xor
aaa
repz
pop
inc
dec
lret
out
mov
fstp
pop
push
and
mov
and
jne
xchg
or
ljmp
mov
ret
xor
cltd
xchg
aaa
push
or
mov
aas
jo
push
mov
sarb
movsb
sub
rcl
movsb
jecxz
les
push
pop
cmp
cli
mov
mov
inc
out
out
inc
lea
into
hlt
mov
hlt
cmp
scas
push
test
xchg
sbb
sbb
stc
push
fisubrs
loop
out
xor
and
loope
inc
sbb
jmp
xor
jle
adc
faddl
test
xor
push
adc
fidivrl
fcmovb
stc
push
mov
sub
xor
and
movsl
ds
jb
jl
adc
push
push
cld
das
test
jno
cld
cli
and
jne
scas
pusha
and
test
pop
xor
inc
add
cmp
adc
cld
mov
adc
push
mov
inc
inc
add
xchg
pop
cli
iret
pop
inc
ljmp
lcall
push
cs
push
pop
fcoml
mov
mov
xor
out
push
or
mov
popf
xor
xchg
pop
fimull
pop
pushf
sti
mov
filds
adc
mov
xor
or
pop
into
push
lea
rolb
or
xor
aad
aam
sub
mov
sbb
inc
pop
jns
inc
cmp
out
and
dec
repz
fstps
movsl
adc
sbb
xor
mov
or
or
sarl
idivb
pop
jo
mov
in
das
inc
inc
lret
mov
fmul
sub
lret
mov
inc
jl
push
xchg
es
test
sbb
mov
xchg
jp
test
subl
sbb
fucomi
dec
loope
dec
jae
out
inc
pop
lods
adc
inc
ss
mov
ds
or
jae
cmpsl
mov
jbe
test
mov
cmp
and
in
hlt
add
ljmp
test
jb
les
pop
mov
inc
insl
out
ja
fwait
add
sbb
lock
jmp
jne
pop
out
pop
ljmp
pop
or
xchg
shr
jne
jbe
bound
and
fs
mov
int
cmc
pop
cmp
xchg
into
fildll
fwait
dec
lea
add
enter
and
mov
sbb
xchg
jg
mov
mov
or
movsb
fwait
add
sub
and
scas
sbb
ds
loop
lret
mov
and
push
movsl
negl
hlt
call
dec
adc
xchg
mov
inc
xor
movsl
icebp
sbb
dec
fcoms
inc
sub
ret
push
nop
decb
or
aam
dec
mov
leave
xor
cmp
in
mov
ret
jmp
mov
jbe
mov
mov
add
cmp
push
out
cmp
mov
into
xchg
jnp
pop
movsl
or
adc
test
and
add
pop
or
and
pop
aad
jle
or
push
push
ret
jno
test
cmp
mov
dec
fisttps
sbb
mov
and
enter
aam
cmpl
mov
aas
xlat
xor
pop
fistpll
cmc
outsb
repz
decl
arpl
in
dec
ret
add
leave
dec
xor
adc
mov
jb
or
adc
sbb
adc
iret
adc
ljmp
jmp
clc
lea
fwait
dec
cltd
push
sbb
mov
cltd
mov
aad
inc
and
pop
mov
js
push
sub
push
mov
pusha
and
sbb
int
imul
and
call
rcll
inc
mov
pushl
cmp
inc
aas
inc
test
cmp
mov
pop
add
and
mov
aaa
jl
cmp
mov
shrb
jge
cmp
insl
aaa
in
jmp
test
push
xchg
cltd
mov
and
cli
and
sub
pminsw
cwtl
pop
pushf
push
sub
cmc
xchg
ljmp
mov
shrl
jge
out
aaa
add
insb
pop
xor
adc
inc
inc
dec
dec
adc
loopne
mov
xor
cmp
aam
mov
mov
mov
mov
gs
in
push
scas
pop
das
xchg
movsl
mov
inc
lods
hlt
ror
add
pop
xchg
shll
loop
into
movsb
loope
aam
or
std
repnz
add
fs
cmpsl
and
pushf
and
das
cmp
cmp
mov
inc
jae
data16
std
lds
adc
outsb
fmuls
or
test
out
insb
outsl
sbbb
xchg
mov
xor
je
mov
pop
mov
lret
inc
arpl
mov
xor
out
rol
lret
call
fwait
mov
rcrb
clc
das
xlat
jmp
iret
dec
pop
adc
ret
cmpsl
pop
cltd
jecxz
and
loopne
pop
jno
lods
xchg
push
sub
je
push
scas
cld
jle
sbb
outsb
sub
aad
out
je
shrb
popf
fisubs
loop
test
sbb
and
jl
test
popf
adc
bound
xchg
mov
push
jnp
mov
cmc
dec
cmpsl
pop
inc
fildll
leave
dec
and
mov
pusha
insl
inc
add
mov
and
add
mov
imul
and
fldenv
fists
loope
cmp
int3
fsubrp
call
imul
adc
or
xchg
mov
inc
test
mov
mov
pop
vcvtsd2ss
push
test
das
ds
xchg
mov
movsb
add
pusha
xchg
pop
leave
dec
sub
out
shll
outsl
push
dec
jp
aad
outsl
popa
arpl
ljmp
push
or
fiaddl
fsubrl
and
xor
or
enter
push
inc
and
cmp
jno
inc
and
cltd
lret
sbb
test
fisttps
mov
add
jl
orl
mov
sub
pushf
scas
mov
xor
mov
in
lahf
cmp
jle
lea
nop
cmp
mov
mov
dec
jbe
push
push
push
mov
outsl
sbb
mov
clc
mov
jecxz
mov
mov
xor
sub
mov
pop
xchg
mov
lret
cmpsb
mov
pop
jl
pusha
inc
xchg
inc
aam
mov
dec
xchg
cmp
add
mov
mov
lods
push
hlt
mov
mov
inc
mov
mov
gs
bound
rclb
int3
in
cmc
lret
sti
mov
sbb
insb
pop
pop
sbb
push
mov
push
into
dec
imul
mov
cmp
cmc
jg
xorl
sbbb
cld
pop
jmp
cmp
rcr
xchg
pop
xchg
outsw
cs
idivl
push
lret
bound
sarb
cvtdq2ps
cmp
loope
lret
pop
std
push
mov
sbb
rolb
cmpsw
or
stos
push
sub
jb
cmp
xlat
mov
leave
pop
fcoml
mov
mov
inc
xor
sbb
xchg
loop
xor
in
cmp
mov
xchg
xor
cmp
imul
push
pop
sub
or
rcl
dec
inc
jmp
dec
clc
sub
sbb
and
mov
push
aad
movsb
pop
and
repnz
lcall
shlb
push
push
jge
add
stos
insl
sub
ds
add
in
sub
ss
int
jmp
dec
jp
sbb
pop
ret
test
xchg
je
and
jl
jg
xchg
std
pop
sbb
or
stc
int3
gs
xchg
jecxz
xchg
cwtl
insl
xchg
sbb
add
jns
sbb
js
pop
cs
fisubrl
mov
cs
or
inc
lret
mov
mov
int
sub
nop
mov
jge
mov
popa
add
insl
fcomps
push
aam
dec
movb
xchg
sahf
jge
out
ret
outsl
mov
jmp
cwtl
daa
popa
dec
jge
fnsave
jl
flds
ret
ffree
imulb
outsl
mov
pop
subl
mov
dec
outsb
repz
gs
xchg
dec
outsl
stos
sbb
cmp
sbb
inc
mov
out
movsl
inc
mov
frstor
in
loope
add
sbb
inc
or
cwtl
lahf
inc
add
or
mov
mov
mov
cmp
xchg
inc
popf
and
pop
pop
mov
dec
xor
aas
bound
inc
rcll
inc
push
int
test
push
sub
in
scas
cmc
jle
xlat
pop
pop
pop
xlat
ja
in
jl
mov
mov
xchg
scas
xor
js
inc
adc
push
xchg
sbb
inc
negb
out
cltd
xchg
inc
shr
das
push
cmp
daa
insl
rclb
je
push
cmp
mov
xor
mov
orb
pushf
loopne
mov
lcall
shlb
shlb
xchg
sbb
out
adc
and
ss
xor
push
mov
cld
sbb
ljmp
add
cmp
pushf
in
insl
pop
rcll
pop
add
xor
inc
jo
xchg
scas
push
push
out
and
je
lea
adc
inc
jns
es
pand
mov
cmp
dec
insl
mov
xor
add
jmp
enter
imul
lcall
mov
test
sub
mov
test
mov
aad
adc
dec
test
fwait
fwait
mov
inc
sub
mov
inc
xlat
shl
adc
or
xor
stos
push
test
cmpsl
clc
jae
dec
aaa
xor
inc
pop
ror
rolb
sub
cmp
pop
lods
decl
arpl
sbb
jp
pop
adc
out
pop
sub
dec
xor
movsb
mov
fidivl
push
jae
popa
xchg
subl
and
mov
rorl
mov
into
nop
cltd
jmp
mov
cmpsb
fistl
mov
shrl
test
xor
add
out
insb
dec
ret
pop
cmp
mov
adc
mov
inc
rolb
mov
pop
js
cmp
xchg
shlb
dec
push
jp
inc
mov
jp
sarb
repnz
les
icebp
mov
inc
daa
pop
xchg
mov
push
add
push
xchg
jecxz
fs
cmp
jo
frstor
mov
xor
jne
scas
inc
sbb
out
ficoml
lds
outsl
push
sbb
xchg
pop
inc
inc
adc
pop
xchg
pop
in
sbb
pop
xor
lret
sarb
cmp
es
push
into
sar
jb
lea
js
addr16
push
jne
mul
and
push
lahf
mov
and
push
jb
pop
or
jb
or
daa
pop
jno
mov
lret
js
mov
cmpsl
test
shr
or
in
or
repnz
loopne
cmc
or
cld
xlat
rcr
cmp
movsl
sbb
inc
aad
xor
add
xor
xchg
pushf
loop
ret
mov
dec
orl
adc
pop
xlat
xor
cmpsb
scas
mov
insb
adc
mov
in
shlb
loope
jmp
cmpsb
inc
push
inc
inc
mov
fwait
push
xor
shlb
insl
and
cmc
push
out
lret
mov
jecxz
jmp
adc
aam
cmpsb
rcrl
movsl
jge
pop
popa
xor
mov
adc
mov
adc
cvtdq2ps
lret
cltd
and
pop
mov
xchg
dec
cmp
mov
or
inc
mov
push
scas
or
hlt
mov
dec
mov
xchg
fbld
cmp
les
inc
push
sbb
imul
outsl
ficoms
push
jnp
adc
pop
push
popf
xchg
dec
sub
mov
push
sahf
movsb
cmpsl
out
stos
pop
mov
fistpll
fidivl
mov
dec
outsb
cld
into
pop
stos
push
cmc
xor
mov
insb
mov
adc
sbb
add
dec
xchg
std
cmp
xchg
push
movd
movsl
clc
add
add
sbb
adc
adc
mov
fwait
sub
scas
dec
xlat
out
inc
adc
sti
adc
mov
jns
mov
das
mov
xchg
in
loop
cmpsl
mov
lods
ret
cmp
lods
pop
jl
cmp
add
sbb
xor
or
movsl
test
jae
jb
in
lahf
dec
clc
je
xlat
call
inc
push
popf
mov
popa
xor
lods
jge
xchg
sti
int3
lods
pusha
jg
and
sbb
pop
mov
icebp
sbb
pop
repz
fstpl
dec
sbb
lods
les
xor
add
js
or
mov
pushf
mov
xor
adc
in
shrl
xor
sahf
sub
clc
dec
shll
dec
ficoms
and
in
jl
imull
push
push
mov
fwait
test
lret
in
pop
in
testl
xor
sti
xlat
dec
das
das
dec
jno
daa
cmpsb
push
cmp
lret
arpl
mov
jo
stos
leave
mov
imul
push
adc
push
movsb
xor
js
xchg
add
lock
pop
mov
pushf
stos
push
fildl
cltd
lods
sbb
sub
jle
test
dec
inc
sahf
scas
sbb
pop
rcrb
and
add
jle
and
repz
fisttps
push
push
xchg
dec
leave
mov
pop
movsb
scas
push
xor
adc
mov
test
inc
scas
push
pop
mov
sub
mov
enter
fdivl
cs
outsb
popl
adc
sahf
push
or
mov
xchg
popa
cld
fimull
xchg
mov
push
sub
and
push
js
aas
cmp
mov
bound
mov
inc
add
cwtl
jecxz
xchg
or
pop
arpl
push
sbb
out
jae
sbb
popf
or
orl
mov
xchg
xor
jecxz
stos
dec
adc
aam
ficoml
sbb
adc
jns
aad
icebp
sub
mov
lret
inc
mov
ret
out
lcall
ds
inc
adc
mov
mov
loopne
jne
or
js
push
adc
jecxz
lock
std
xchg
jp
jl
adc
mov
les
push
je
movsb
outsb
mov
pop
xchg
scas
scas
xchg
inc
mov
sbb
daa
push
mov
xchg
sbb
outsl
subl
mov
jnp
fucomip
mov
sar
jmp
pop
or
jmp
push
sahf
adc
cltd
adc
test
dec
push
scas
shrl
xchg
xchg
neg
into
rcll
dec
cmpsb
mov
outsb
enter
mov
fidivs
mov
mov
test
pop
inc
add
pop
test
cmp
xchg
gs
js
insl
mov
sbb
cmp
insl
push
and
addr16
loop
mov
ret
stc
sub
insl
cmp
mov
cmp
or
aaa
add
pop
fistpl
sub
hlt
mov
pop
xchg
mov
fnstenv
negb
mov
call
push
push
dec
popa
adc
sidtl
mov
iret
imul
sbb
hlt
outsb
cmp
push
xchg
or
jo
sbb
xbegin
dec
aas
mov
add
arpl
lods
in
scas
add
mov
pop
lcall
push
or
mov
je
mov
sub
lcall
or
lahf
xchg
insb
mov
in
xchg
out
push
and
dec
mov
clc
iret
xor
mov
dec
into
push
shl
mov
sub
push
push
add
mov
mov
sbb
aas
dec
into
sbb
or
mov
cwtl
xor
andb
loopne
aad
cmp
jg
push
imul
mov
jge
std
cwtl
mov
pop
aaa
out
mov
mov
add
out
sub
xor
sbb
fwait
loop
push
repnz
ss
or
lahf
popa
or
popa
xchg
fcmovnu
cs
cld
in
fdivrs
xchg
mov
data16
xchg
push
shll
xor
and
aam
pusha
cmp
and
mov
jbe
arpl
jo
and
ja
int
and
dec
aam
fimull
cmp
sub
test
cmp
cmp
jecxz
pop
mov
mov
cmp
cli
mov
cvtdq2ps
xchg
stc
cld
je
pop
cmp
outsl
xchg
jo
push
cltd
cli
jmp
mov
mov
shll
cmp
xchg
sub
ljmp
dec
jmp
adc
mov
lods
lret
mov
lahf
ja
xchg
add
shlb
cld
inc
pusha
lods
das
or
mov
in
adc
and
add
test
in
imul
sbb
push
mull
orl
imull
hlt
push
jo
aas
cli
dec
es
dec
cltd
xchg
cli
loope
xor
sub
mov
mov
jns
out
sbb
sub
jae
je
mov
mov
cmp
ret
out
scas
jp
or
or
pop
sbb
lret
ret
mov
and
aaa
loope
dec
outsb
dec
stc
cld
mov
shlb
add
clc
stos
test
sbb
and
cmp
jle
push
jo
scas
jbe
rep
inc
mov
mov
das
sbb
mov
adc
sahf
jmp
hlt
jmp
push
mov
ljmp
cmp
stos
or
xchg
jno
fsts
pop
bound
popa
out
pop
xchg
jmp
pop
adc
dec
std
sbb
ljmp
jle
pop
ss
imul
jae
xchg
dec
fcompl
lea
dec
cmp
nop
push
mov
ljmp
adc
imul
in
ss
cld
mov
and
inc
xor
popf
adc
int
lret
movsl
xsavec
push
jmp
insl
and
inc
scas
jnp
xor
inc
out
leave
mov
cmp
loopne
loop
pop
es
mov
mov
and
stos
ret
sub
push
fiadds
pop
ret
ret
mov
mov
jle
into
ds
add
adc
pop
insl
clc
jo
push
mov
out
push
and
dec
push
mov
push
fisttpll
fsub
mov
mov
xchg
icebp
orb
adc
call
sbb
negb
and
js
scas
insl
movsb
cld
nop
test
test
mov
mov
ss
and
mov
push
fadd
jo
mov
pop
jmp
mov
das
mov
push
push
jne
repnz
mov
add
pusha
dec
or
clc
aaa
jae
lahf
imul
cmpl
dec
daa
jno
negl
lcall
lahf
xor
sarb
and
sbb
inc
jne
xchg
pop
mov
fnstsw
push
jno
ss
ret
dec
outsl
mov
mov
push
mov
add
adc
mov
lock
das
stos
das
mov
stos
sub
xor
jmp
mov
mov
stos
loop
mov
leave
sbb
mov
fadd
and
inc
jg
jae
add
mov
add
in
scas
movl
mov
mov
ss
aas
mov
xor
xchg
or
xchg
std
movsl
xchg
xor
adc
cmpl
aad
lock
pop
mov
cmp
lret
rol
push
pop
test
pop
lea
icebp
out
leave
mov
xor
dec
stos
hlt
xor
fwait
fs
inc
ljmp
imul
push
push
sub
fldcw
ret
xchg
xor
cmp
loop
ret
cmp
lea
pop
enter
xchg
mov
dec
cli
je
inc
repnz
insl
inc
cld
inc
pop
add
fisubrs
add
test
dec
gs
jge
fisttps
clc
dec
insl
mov
shll
cmc
arpl
push
call
dec
out
xchg
sbb
pop
negb
in
jecxz
adc
addr16
cmc
mov
dec
clc
nop
push
dec
push
loopne
cmpsl
in
push
pop
nop
sbb
scas
lret
lea
sarl
test
mov
loop
mov
iret
ds
xchg
adc
aam
adc
loop
sbb
push
popa
push
add
call
cmpsl
adc
mov
xlat
test
pop
insb
pop
xchg
push
imul
jmp
inc
sbb
and
xor
inc
gs
js
ss
mov
fisubrs
stos
push
sbb
divl
sbb
stc
out
pop
in
clc
lods
inc
dec
stc
fsubrs
cld
repnz
or
cmp
mov
lea
mov
inc
fnsave
sub
pop
ret
call
xchg
ret
scas
push
jg
sbb
dec
aad
lods
in
adc
lahf
jge
ret
out
int
imul
xchg
mov
mov
mov
inc
fists
dec
push
jo
notb
mov
repz
cmp
sub
imul
push
pop
aas
aam
sbb
iret
xchg
push
xchg
movsl
xor
mov
and
inc
dec
lret
mov
test
arpl
cmpsl
push
in
repz
ja
movsl
sbb
jmp
cwtl
mov
std
test
sbb
repnz
test
xor
xchg
mov
mov
das
lcallw
into
cmp
fdivr
push
jge
dec
aaa
inc
imulb
popa
inc
aad
test
mov
imul
shr
js
xchg
push
mov
ficompl
hlt
mov
dec
movsl
out
sub
mov
pushf
inc
dec
sub
lods
and
xchg
push
pusha
test
orb
sbb
jno
adc
mov
inc
or
int3
mov
cs
push
pop
jecxz
inc
xchg
scas
cmpsl
cmovl
sti
out
jecxz
push
cli
stos
mov
test
dec
jne
idivb
stc
int3
or
or
das
push
popa
jno
mov
int
mov
dec
push
xor
repz
inc
sub
and
or
xor
insb
inc
push
and
int
pop
ja
cmpsl
ljmp
mov
cs
push
xchg
pop
xchg
into
test
add
mov
out
push
jecxz
sbb
dec
pop
dec
mov
mov
movsl
dec
dec
ss
sbb
xchg
sub
dec
aaa
and
adc
addr16
jae
ljmp
insb
fcmovbe
icebp
pop
ljmp
aaa
or
arpl
movsl
std
xchg
mov
jmp
sbb
mov
rcl
daa
pop
ss
xor
or
jnp
xchg
mov
shl
insb
adc
add
out
push
push
adc
mov
stos
stc
mov
jne
shrb
add
pop
mov
push
shlb
jp
cs
jae
jecxz
mov
pushf
mov
or
xchg
hlt
jb
dec
aad
sbb
mov
or
daa
mov
mov
dec
mov
nop
int3
cli
aad
jl
cs
cmp
xor
or
cmp
pop
lods
pop
adc
je
je
adc
cmp
mov
pushf
add
frstor
nop
std
adc
outsb
pop
push
xchg
push
aaa
aam
fwait
inc
inc
rorl
mov
enter
or
add
and
orb
repz
sbb
scas
imul
fldl2e
stc
xchg
sbb
sbb
bound
and
mov
roll
cmp
sub
lea
clc
inc
test
xor
pop
mov
arpl
mov
dec
adc
lret
mov
xchg
xchg
out
pop
cmp
inc
iret
jne
and
push
dec
xchg
pushf
mov
xchg
aaa
lods
test
loopne
les
xchg
push
mov
add
pop
xchg
jae
mov
add
xchg
ds
out
or
shlb
outsb
jg
lcall
dec
inc
call
jns
cmpsb
lret
ret
les
scas
pop
fmul
out
jnp
inc
or
ret
mov
mov
fidivrl
iret
mov
lcall
jne
in
inc
add
inc
cmp
push
cmp
or
pop
lds
xor
cld
xchg
loop
loopne
mov
std
dec
pusha
adc
mov
jno
xchg
sbb
sbb
mulb
int
repz
and
mov
out
addr16
sbb
and
leave
fdiv
out
mov
mov
mov
xor
jp
mov
push
xchg
push
mov
mov
lea
add
xchg
test
add
jmp
jl
mov
imul
shll
loop
aad
pop
shll
adc
cltd
jae
inc
orb
mov
aaa
lock
imul
jo
movsb
fwait
or
adc
xchg
push
shrl
pop
jp
fdivr
nop
pop
aas
push
pop
sti
push
xchg
sbb
repz
mov
and
out
das
pop
subb
cli
inc
outsl
pop
incb
mov
xchg
or
fcoml
pushf
cmp
jnp
cmp
in
lret
jnp
popa
jns
data16
stc
test
and
inc
cmp
sub
add
xchg
mov
or
fcoml
lods
pop
aaa
hlt
or
mov
mov
jno
jnp
pop
inc
popa
cmp
mov
mov
hlt
mov
mov
js
das
out
bnd
aas
sub
jns,pt
mov
mov
pushl
bound
pop
js
push
dec
xchg
cmp
mov
mov
cmp
mov
pop
cmp
adc
add
cmp
popf
mov
cmp
leave
out
lods
fisttps
or
sti
test
lock
add
lret
xor
push
popf
movsb
mov
cs
and
loope
mov
xlat
lret
rolb
movsb
push
fsubp
test
ja
test
mov
shrb
cltd
fs
cmp
pop
add
repnz
int
mov
pushf
in
ret
ret
mov
imulb
add
sub
rorl
xor
add
orb
popa
cmpsb
pop
mov
ja
mov
rclb
idivb
cmp
xchg
jno
jb
push
fdivrp
push
xchg
xor
sub
flds
fcmovnu
lret
js
xchg
pusha
or
or
fiaddl
and
add
pop
ja
shr
icebp
pop
insl
mov
pop
jecxz
cld
jl
scas
dec
adc
shr
inc
dec
inc
adc
testb
shlb
into
push
adc
xor
fldl
pusha
icebp
xchg
xlat
push
repnz
cli
or
fcmovnb
scas
jl
mov
jne
fidivrl
leave
jmp
mov
lea
ljmp
mov
jg
andb
pop
repnz
nop
xor
sbb
pop
inc
out
mov
rclb
imul
leave
insb
xor
mov
xchg
stc
inc
and
mov
sbb
mov
mov
data16
cmp
scas
pushf
hlt
jp
sahf
sar
xor
sbb
mov
cmpsl
movsl
and
out
js
jno
imul
cmp
aad
insb
icebp
movsl
movsl
ljmp
fldcw
pop
mov
xor
repnz
fadds
and
in
fwait
imul
push
dec
outsl
pop
jno
inc
cmp
jle
out
aad
sahf
xchg
mov
or
stos
lret
call
push
adc
sbb
dec
roll
into
jl
pop
adc
rorb
pop
sbb
pop
les
shll
aam
loopne,pt
sub
fists
push
pop
add
leave
jno
clc
xchg
fcomi
lock
mov
jbe
xor
pop
cmp
cmp
adc
test
outsl
ret
cli
aaa
mov
mov
jns
add
pop
adc
loop
mov
lea
adc
jge
cmp
push
inc
lahf
out
inc
jo
cltd
mov
dec
mov
adc
jle
cmpsb
pop
fldenv
xor
repnz
inc
push
mov
sub
sub
movsb
and
mov
sbb
inc
xchg
jg
call
inc
jae
mov
into
push
call
out
int
jge
lret
mov
iret
loope
setno
and
rorb
aad
in
cmp
movsb
adc
loop
sub
jae
dec
cli
push
pop
cli
inc
outsl
xor
inc
pop
sub
mov
inc
fcoml
or
dec
test
fisubrs
mov
mov
jp
outsl
sub
stc
pop
mov
pop
or
add
iret
aad
fstp
sub
xor
pop
adc
mov
or
imul
jl
cmp
les
sbb
sub
xor
loop
mov
mov
push
push
cld
mov
mov
sbb
je
push
mov
jae
fnstsw
out
xchg
imul
fs
fs
xchg
push
fimuls
aaa
xor
mov
dec
movsl
testl
lods
pop
pop
mov
and
btr
sub
out
push
lret
xor
testb
loope
sbb
jno
mov
pop
mov
into
push
je
mov
jns
sbb
pop
xchg
jnp
or
out
int3
insl
scas
jg
adc
call
jge
push
insl
mov
in
mov
xchg
mov
dec
add
imul
hlt
cmp
pushf
fldt
mov
movsl
mov
std
lret
or
push
mov
dec
addr16
pand
inc
ja
or
sbb
bound
faddl
cmpsb
test
inc
cmp
punpckldq
push
ret
aas
cmpsb
push
fldt
cmc
xchg
cmpsb
jnp
sub
scas
lods
inc
cld
dec
int
andb
dec
mov
cmp
dec
xchg
fsts
lret
push
adc
sarb
fsubl
jne
or
leave
es
jmp
xchg
mov
and
lea
dec
jmp
xorl
aad
in
xchg
lods
dec
mov
insl
pop
orb
mov
xchg
inc
sbb
dec
movsb
dec
mov
jmp
jecxz
mov
or
int3
jne
aad
dec
jno
shrb
sahf
pop
jp
shll
jle
loopne
push
loopne
cmp
push
setno
mov
xlat
js
notl
xchg
mov
pop
pop
cmp
jns
popf
xor
fbstp
push
outsb
sub
jp
cld
cmpb
or
int
inc
dec
fimull
or
xchg
in
js
pop
add
ret
mov
lods
jne
fidivs
push
jb
push
mov
arpl
xchg
stc
jle
in
and
mov
mov
push
cmp
adc
loopne
std
push
pop
into
push
xor
xchg
add
dec
cmp
or
out
lret
adc
sahf
xchg
in
bound
xor
pusha
outsb
jmp
or
pop
stc
adc
xor
arpl
adc
mov
mov
sub
andnps
xor
repnz
jp
xor
or
mov
add
rcl
push
arpl
jle
cmp
or
sub
xchg
or
fdivr
shl
sub
or
sbb
jl
mov
cmp
xchg
pop
add
fs
jbe
inc
adc
dec
je
and
sti
mov
cmpsl
lcall
mov
jbe
sbb
stos
lret
fstpt
std
push
icebp
xchg
mov
push
out
pop
fwait
dec
aad
mov
bound
es
and
push
or
xchg
sub
repnz
testl
repnz
in
cltd
dec
adc
cwtl
xor
lods
xor
push
ret
cmp
cs
shl
xchg
lea
aas
icebp
fiadds
mov
or
cmpsb
mov
sub
ret
lret
jmp
loop
pop
ljmp
cs
outsl
fstl
xor
mov
ja
imul
dec
pop
cmp
pop
sbb
sub
enter
jnp
add
fldl
add
mov
jo
add
jae
cs
pop
sbb
pop
xchg
bndldx
shll
outsl
mov
fmul
add
roll
push
or
jno
pop
lock
dec
push
inc
push
mov
add
xchg
jae
sub
cmpsb
inc
inc
push
loope
add
xchg
dec
int
xchg
repnz
cmpsb
sub
stos
out
dec
mov
test
mov
xchg
xor
mov
ds
xor
pop
pop
mov
inc
loope
popa
ret
inc
xchg
aad
fstps
and
mov
sbb
cmpsl
pop
cmp
mov
ljmp
sbb
pop
jo
fnstenv
mov
push
add
popl
sub
sub
sub
add
jg
loope
out
out
pop
cld
sahf
cld
inc
mov
dec
jge
test
mov
ret
dec
sub
and
push
call
popa
js
call
loopne
xchg
xchg
aad
or
cmp
lcall
dec
mov
leave
adc
jp
test
push
stos
ss
lods
mov
arpl
pop
lcall
mov
push
sub
je
inc
jp
aas
gs
popf
xorb
scas
inc
and
lahf
bound
mov
inc
addb
sbb
inc
in
push
fucompp
shlb
ret
xchg
sbb
mov
insl
shlb
cmp
xchg
sbb
xchg
jle
push
cmp
push
and
cmp
adc
mov
scas
fwait
add
add
mull
cmpsl
push
adc
test
shl
mov
jp
sub
ss
repnz
imul
mov
ja
enter
push
je
and
gs
xchg
cmpsl
pop
cmpsb
loopne
lods
add
add
sbb
add
and
jae
push
mov
xor
or
push
js
leave
aas
pusha
aam
imul
aas
fs
pop
iret
pop
push
or
dec
push
shlb
push
mov
int3
faddl
pop
in
sbb
xchg
imul
repz
insl
shlb
dec
ljmp
idiv
sti
inc
adc
rorl
stos
dec
popa
das
jo
fldl
rcll
das
aam
or
mov
pop
add
cld
jl
out
xchg
nop
cmp
inc
pop
lods
cli
or
mov
push
or
lahf
das
mov
cmp
xor
push
repnz
loope
push
sbb
xor
sub
sti
add
loope
mov
sbb
cli
mov
jno
cmp
sub
inc
jb
sti
fs
mov
dec
and
mov
mov
dec
fbld
adc
xor
adc
rorl
cwtl
jle
fsubs
cs
fwait
inc
adc
out
movsl
aad
mov
addl
js
in
sbb
sbb
xor
fsts
mov
dec
and
call
call
cmp
insl
inc
rcll
int
das
push
sbb
lret
jno
push
jge
fbstp
and
rclb
out
lcall
ja
outsl
adc
sub
jg
jbe
xchg
dec
push
push
xor
stc
sbb
shlb
out
loopne
xor
dec
ja
fwait
stos
push
pop
cmp
sbb
pop
jl
jns
loopne
xchg
inc
inc
add
mov
add
outsl
aad
in
jbe
pop
jecxz
sbb
mov
inc
or
clc
inc
xlat
int3
int
scas
push
push
mov
ret
dec
mov
cwtl
adc
jo
leave
loopne
mov
pop
test
dec
divl
mov
jecxz
xchg
testb
cli
mov
dec
pushf
aaa
mov
dec
inc
mov
test
dec
xchg
roll
xchg
inc
stc
jns
push
ds
sub
jno
sub
mov
adcl
dec
cmp
neg
jnp
pushf
call
cmpsb
xchg
fcmovu
sub
icebp
mov
sbb
data16
aad
jnp
aad
push
push
jo
jb
inc
or
sub
lea
mov
pop
in
mov
fsubrp
and
push
sub
arpl
inc
sbb
divps
jbe
dec
in
and
cli
cmpl
fwait
int3
cmp
xchg
std
push
jg
mov
xchg
loopne
loope
aas
outsl
add
jg
dec
mov
xchg
cltd
sarl
loope
in
jle
adc
testb
fcompl
std
pushf
sbb
divl
lret
lds
repnz
and
push
stos
ljmp
dec
fisubl
dec
add
mov
inc
xorl
rcl
loope
rcrl
fldl
leave
xor
fidivl
hlt
mov
jle,pn
jge
lock
icebp
popa
rorl
scas
cmpl
add
fwait
bound
jno
aas
out
or
leave
fcom
xor
lcall
sahf
add
aaa
in
cmp
mov
xor
xor
pusha
int3
or
or
xchg
pop
add
push
dec
out
aad
rcrl
dec
add
outsb
mov
push
sbb
mov
sub
xchg
es
cmp
aas
add
xor
stos
xor
pop
divb
mov
loopne
movsl
outsl
inc
repz
lock
ja
pop
xor
scas
dec
mov
add
hlt
enter
adc
adc
xchg
pushl
dec
xchg
dec
push
lret
cli
insb
test
sarl
insl
shlb
sub
xor
ret
xchg
adc
sub
aas
push
xor
adcl
cltd
in
xchg
mov
sbb
divb
mov
fbstp
test
add
add
rcll
jbe
dec
push
aas
cmp
int3
pusha
xor
pushf
out
push
push
rcl
cmp
pop
xchg
mov
inc
add
fldcw
lcall
fucomi
lahf
adc
pop
pop
daa
popa
aas
notl
mov
cmc
mov
pop
fmull
movsb
push
push
loopne
nop
in
cmpsl
fidivrl
les
clc
das
hlt
sub
jbe
ja
jl
cs
or
mov
fcmovne
stc
popl
push
jl
mov
fwait
sahf
lock
push
pop
lds
adc
cmp
inc
mov
pop
cmpsl
dec
inc
push
xor
adc
lds
mov
loop
pop
sbb
bound
inc
ficompl
pop
std
data16
lock
sbb
test
or
xor
mov
in
adc
mov
cli
mov
mov
add
pop
mov
cmp
push
sqrtps
pop
popa
mov
xchg
inc
cld
sbb
popa
arpl
mov
lret
push
fdivrs
int
test
and
cmp
pop
roll
loop
inc
sbb
jmp
inc
stc
mov
push
fisttpl
mov
call
inc
cs
bound
sbb
lcall
andb
ljmp
sub
mov
xor
fadds
ret
push
scas
in
insb
lock
sbb
jle
or
sbb
and
mov
iret
orl
and
mov
pop
ds
xchg
xchg
daa
ficoml
rcl
xchg
js
out
stc
in
add
test
aaa
xchg
dec
gs
sub
mov
inc
or
mov
xchg
and
cli
push
mov
int
sub
push
pop
int
sbb
pushf
push
or
push
lret
sahf
repnz
push
add
out
in
mov
stos
int
xor
dec
dec
lcall
data16
sbb
sbb
jae
and
inc
movsb
out
mov
stos
adc
insb
push
int3
ja
push
mov
pop
sbb
add
adc
sahf
cmp
mov
je
xchg
pop
fsubrl
test
jne
cs
imul
xchg
sub
xchg
pop
movb
lds
outsb
fisubl
leave
mov
inc
enter
push
push
push
movsl
or
fstl
pop
call
sbb
aam
andl
push
mov
mov
in
sbb
sbbb
add
mov
cmp
lds
mov
xor
pop
dec
imul
rcll
cmp
test
dec
lret
jb
hlt
fistl
imul
add
clc
adc
inc
or
xchg
lea
out
leave
adc
stc
mov
lods
adc
lret
inc
fidivrl
xchg
dec
enter
in
aas
popf
cmp
sti
stc
std
sbb
xor
xchg
xchg
dec
sahf
push
fwait
aas
cmp
arpl
jecxz
cltd
adc
fsubl
in
clc
jb
jae
mov
xor
aam
icebp
ds
iret
int3
inc
shlb
test
rcrb
out
std
lds
dec
aad
test
or
sti
sbb
pop
mov
daa
xchg
in
pop
std
fs
test
es
testb
fildll
xchg
mov
mov
mov
dec
adc
movsb
icebp
out
fsubrs
fnsave
jno
xor
test
and
push
inc
mov
cmp
mov
and
adcb
jmp
in
dec
subl
sarb
mov
jg
push
adc
mov
jg
dec
insb
push
xchg
dec
shlb
pop
mov
lret
or
mov
out
inc
lret
repnz
imul
sbb
dec
aaa
mov
gs
jge
mov
mov
pop
repnz
push
movsl
mov
push
loope
adc
ret
rcll
xchg
pop
ficomps
movsb
into
sbb
xchg
fistps
repnz
mov
sahf
out
xchg
push
ret
cs
leave
add
xor
or
popf
jno
mov
and
rclb
movsb
insb
lock
test
movsl
inc
push
mov
in
jl
mov
lea
and
jp
lret
add
sbb
fucomp
push
outsl
inc
xor
pop
xchg
push
push
or
push
add
movsb
jo
int
int
pop
lcall
jne
loopne
cld
lods
addr16
cmp
in
repnz
sbb
sub
icebp
jp
out
in
lods
xchg
dec
out
loope
sbb
fistpl
add
adc
cmpsl
jmp
pop
mov
arpl
cmpl
xor
fstpl
nop
icebp
repnz
sbb
test
pusha
mov
pop
aad
adc
inc
cltd
ret
mov
add
fimull
push
push
popf
add
bnd
loopne
into
dec
mov
sub
xor
pop
cmp
sbb
jnp
pop
mov
mov
push
jmp
jno
test
in
test
movsb
js
icebp
mov
xchg
dec
xor
popa
mov
adc
mov
jns
or
scas
jnp
sub
adc
cmp
data16
sbb
test
aas
mov
mov
push
sbb
lods
sbb
or
mov
mov
cmpl
out
jno
and
insb
sbb
sub
push
addr16
cmpb
ja
pop
push
fwait
cwtl
cmp
je
dec
cli
ret
pop
repnz
daa
into
lret
jo
in
mov
pop
mulb
dec
push
ljmp
lds
cmc
inc
das
js
sti
scas
lret
daa
mov
aaa
ja
adc
dec
sbb
in
out
lret
jb
aaa
dec
fldcw
and
cmp
push
mov
jmp
ficompl
ds
mov
adcl
mov
je
dec
inc
mov
mov
mov
add
push
xor
sub
cmp
popa
fld
push
imulb
icebp
rcll
adc
mov
jo
mov
xor
fidivrl
lods
aas
test
mov
push
rcll
jae
sbb
sub
mov
out
inc
xor
decl
mov
icebp
mov
mov
mov
adc
inc
mov
repnz
es
iret
out
mov
ds
loope
sbbb
inc
dec
fsubl
fwait
jecxz
andl
mov
push
ljmp
jns
add
js
xchg
popf
push
cmpsb
cmpsl
nop
jnp
xchg
mov
and
mov
adc
mov
xor
hlt
dec
jno
or
js
and
xor
arpl
jae
xchg
hlt
mov
cmpl
jmp
xchg
inc
fwait
mov
jae
sbb
mov
pop
and
mov
sub
and
cli
and
inc
insb
xor
mov
idivl
push
jo
and
test
mov
pop
jno
lods
es
loopne
cmp
dec
nop
lods
cmp
adc
out
sbb
movsl
mov
jbe
clc
dec
mov
aad
dec
sub
or
add
add
dec
mov
out
notl
jno
sti
and
cmpsl
inc
imull
push
push
popa
sub
ficomps
and
xor
je
jp
xor
mov
fistpl
or
or
or
insl
cmp
dec
fildl
into
cld
dec
in
xchg
mov
shl
mov
push
js
sub
sbb
sub
mov
neg
push
and
cmc
pop
ret
push
and
cmp
mov
sbb
jg
repnz
mov
sub
jae
jmp
cmc
inc
test
pop
mov
mov
popf
mov
cmp
jae
push
das
cltd
jns
jl
aaa
dec
cs
mov
ret
or
pop
mov
xor
dec
mov
cld
enter
test
int
dec
fidivl
push
push
icebp
pop
repz
pop
push
pop
shll
mov
xor
or
aas
cli
cltd
mov
inc
cld
inc
xchg
sbb
mov
jno
xor
dec
mov
mov
ret
pop
cmp
aad
cmp
sub
cld
mov
jge
jmp
push
jns
pcmpgtb
mov
cmp
add
mov
mov
arpl
xchg
stc
out
hlt
inc
mov
xor
stos
and
cld
sbb
mulb
sbb
int
lret
inc
cmp
cmpl
fsubp
je
int
or
push
inc
add
mov
in
in
ss
sbb
arpl
sahf
inc
in
out
in
mov
xor
leave
inc
stc
cmp
test
mov
xor
inc
pop
mov
cld
std
test
add
lods
and
pop
fadds
outsb
sbb
dec
push
call
aam
fcmovne
push
es
pop
sbb
cmp
shrl
sbb
jnp
lods
scas
movl
push
xlat
aam
mulb
es
xchg
or
mov
out
cmpsb
lahf
cmp
stos
cmp
cmpsl
sti
adc
mov
cltd
cmp
pop
cmp
std
mov
pop
cltd
scas
loopne
inc
fldt
in
in
sbb
or
mov
fimuls
popa
mov
or
imul
sub
jno
mov
stos
lahf
xlat
dec
dec
aas
pop
adc
mov
in
dec
push
out
aas
push
clc
shrb
jns
xlat
repnz
pop
xor
lcall
push
mov
faddl
inc
jl
enter
stos
jge
clc
ficoms
test
inc
outsl
fdivrl
adc
mov
mov
jmp
pushf
scas
pop
jae
cmpl
sub
xorb
shufps
leave
call
push
mov
mov
cmp
xchg
mov
sub
inc
sbbl
jp
mov
loop
addr16
jge
in
jecxz
xchg
divl
adc
or
mov
fs
test
test
lods
dec
jp
jo
push
dec
mov
push
inc
mov
cmp
scas
pop
jl
nop
xchg
pushl
rolb
and
push
and
push
lods
out
adc
hlt
cmpsb
add
ret
mov
bound
in
fisttpl
in
xchg
movsl
ret
mov
test
iret
mov
mov
aam
mov
pop
std
xchg
dec
int
push
adc
mov
xchg
add
fimuls
sub
and
clc
jb
cli
pop
js
movsb
mov
dec
sub
push
hlt
mov
cld
jnp
ja
sarl
mov
dec
les
push
popa
mov
jge
sub
lcall
stos
pop
mov
or
pop
aam
mov
imul
push
daa
call
mov
xlat
pop
insl
sbb
pop
push
push
mov
jp
pop
into
test
cld
sbb
xor
nop
stc
lcall
pop
je
out
sbb
jns
lret
lods
dec
movsl
xchg
sub
pop
sub
push
sahf
cmp
cwtl
sub
push
sti
sbb
decl
mov
loope
inc
rorb
enter
lret
add
jne
loopne
fs
div
ret
jmp
mov
in
xor
adc
leave
fcmove
sbb
or
js
test
lds
repz
mov
insb
or
dec
cmc
jae
sub
lds
in
jne
mov
pusha
mov
das
sub
sarb
and
xor
jle
mov
cmpsb
sarl
scas
in
sbb
fcos
in
dec
out
test
xorl
cmc
rcrl
xchg
in
pop
mov
test
das
mov
dec
pop
or
add
mov
movsl
pusha
dec
push
loop
jo
mov
pop
pop
pop
and
fidivs
adc
fsubrl
or
cmc
icebp
cltd
inc
mov
inc
stos
mov
fwait
or
aam
roll
out
sarl
lods
arpl
ja
mov
xchg
sub
xchg
add
xchg
aaa
mov
clc
xchg
cmpsl
pop
out
mov
mov
insb
xor
and
add
arpl
push
les
mov
mov
mov
stos
mov
pop
sti
add
ja
dec
xchg
sahf
and
inc
and
push
add
mov
sub
push
sahf
sbb
cmp
inc
pop
sbb
pop
shll
pop
xchg
les
jmp
outsb
mov
mov
sbb
pop
mov
cmp
cmp
pusha
shlb
call
in
adc
aam
fdivrs
clc
mov
cmp
shlb
cli
add
rorb
icebp
jb
xchg
mov
lret
jae
adc
inc
lahf
rcrl
mov
inc
xor
add
std
hlt
inc
dec
dec
lds
add
mov
aaa
sbb
xchg
jns
ret
add
mov
mov
rcl
sbb
insb
pop
jo
aas
cltd
mov
push
test
out
outsb
cli
cmp
ds
mov
subb
cwtl
mov
test
fwait
mov
cmp
sbb
or
and
mov
aam
pop
pop
pop
lods
and
fidivl
test
cli
cmp
or
and
in
xor
testl
fwait
cmp
insb
rcl
push
jg
push
testb
xchg
clc
stc
sti
xorl
xor
xor
icebp
idivb
movsl
clc
es
aad
subl
fisttps
pop
nop
cmp
cmp
pop
mov
ljmp
pop
in
jg
or
and
ficomps
test
mov
add
shlb
std
mov
mov
shrb
lods
mov
inc
inc
sbb
popf
iret
in
loope
cmpsl
imul
push
lds
clc
jno
nop
int
lods
mov
repz
push
and
jno
into
mov
imul
cmc
xor
cmp
jae
jb
int3
imul
xchg
popw
push
jecxz
enter
inc
dec
les
jl
mov
orb
jne
or
lcall
fs
push
cs
ljmp
cmp
test
das
aas
and
cmp
arpl
mov
rcrb
inc
push
push
or
jl
icebp
xchg
int3
sbb
mov
fisttpll
insb
lods
cwtl
ja
aam
mov
aas
mov
std
jge
mov
push
mov
cli
sbb
dec
cmpsb
fsubl
add
mov
pop
sti
pop
mov
rorl
insl
push
test
cmp
mov
and
out
fwait
jl
xchg
cwtl
jl
sbb
xchg
mov
stos
jb
sti
sbb
mov
je
adc
pushf
mov
push
ss
cmp
out
fiadds
inc
cmpsl
jae
out
imul
xor
push
pop
push
add
adc
lods
ret
insb
inc
cmpsb
inc
ja
test
clc
push
out
das
in
rorb
rol
or
push
mov
add
int3
fstpt
gs
jl
mov
loopne
jne
imul
mov
es
sarl
cltd
aam
lea
addr16
jmp
sti
sub
or
sahf
gs
jl
fsubl
pop
jmp
aad
push
ds
and
mov
cmpsl
fmull
push
sub
mov
mov
fcoml
mov
inc
adc
mov
imul
mov
mov
adc
rorl
mov
and
add
inc
aam
aas
mov
pop
repnz
imull
es
cltd
into
pop
or
lock
aas
mov
cmp
sbb
mov
ret
sbb
incl
cltd
pop
xchg
out
jp
mov
leave
incl
xchg
xchg
lods
pop
xlat
pop
mov
sbb
orb
fnsave
jnp
ljmp
add
fnstcw
sbb
push
pop
push
or
test
push
bound
sarb
push
push
into
cmc
sub
jbe
pop
mov
nop
adc
xchg
aad
incl
sub
pop
adc
js
cld
sub
jmp
mov
call
loop
into
test
mov
ljmp
nop
imul
jp
ss
sub
enter
mov
das
inc
cmp
dec
movb
aas
jge
aas
fs
pop
jb
aas
addr16
imul
push
gs
out
sbb
fistps
fxch
aad
cli
popa
out
adc
inc
cmp
out
cmc
or
sub
fnstcw
mov
jg
aam
adc
sti
loopne
fldcw
decl
mov
inc
push
sets
das
popf
sarb
and
sub
mov
addl
pop
mov
daa
pop
addr16
fistps
mov
xchg
xchg
and
aas
mov
push
xchg
leave
add
and
aam
fldenv
pop
cmc
lret
mov
adc
loop
js
popa
popf
xor
arpl
shll
dec
dec
into
jnp
sub
sahf
mov
rcll
enter
sub
mov
push
insb
ja
mov
bnd
jne
sbb
sbbl
cli
shll
xor
lret
popa
int3
daa
mov
jp
mov
sub
std
arpl
inc
inc
cmp
push
shll
mov
xchg
mov
mov
rorl
fwait
mov
xchg
xor
pop
dec
inc
mov
adc
sub
sbbl
int
lods
mov
shrb
jg
lahf
dec
sub
xchg
mov
cs
fldenv
inc
inc
je
test
cmpsb
cli
inc
ret
jmp
je
pop
push
ret
inc
das
jle
push
hlt
mov
lahf
lods
lret
mov
mov
pop
rorb
dec
add
cmp
xlat
xor
ret
jae
in
xchg
add
daa
pop
sub
cmp
ja
pop
lret
mov
and
push
mov
lcall
mov
out
jle
dec
je
fnsave
nop
fimuls
sub
dec
xlat
fnstcw
pop
repnz
mov
lds
add
mov
in
sbb
inc
xlat
push
mov
cmpsb
and
mov
mov
call
fwait
ds
nop
mov
lods
xorl
icebp
push
mov
arpl
jp
jmp
pop
les
out
xchg
rclb
lods
ficoms
inc
push
insb
push
dec
push
and
cmp
imul
stos
or
sub
scas
jecxz
daa
js
and
xchg
test
inc
inc
subl
xchg
movsb
add
popa
pop
loopne
stc
push
xor
push
push
push
aad
bound
push
inc
add
and
jle
cmpsl
fsubs
movsl
mov
cld
aad
shll
inc
daa
fwait
or
and
adc
or
mov
lods
fisubl
dec
sub
in
xor
out
jae
push
sbb
cmpsb
fs
test
xchg
fwait
cmc
jae
pop
lds
fcoml
mov
int
lds
out
je
mov
sbb
mov
addr16
add
test
vmovaps
stos
xchg
pop
mov
imul
cltd
test
stos
imul
lahf
cmp
adc
mov
fldenv
sub
adcl
pop
scas
push
push
mov
jns
cmpsl
jp
out
xchg
pop
mov
out
into
insl
fnstenv
mov
testl
in
sbb
mov
js
jo
inc
shrl
std
and
pop
stos
inc
and
jbe
cld
out
push
cwtl
test
aas
fwait
sbb
xchg
jge
ds
add
shl
sbb
jnp
mov
and
xor
scas
pop
or
sbb
xor
xor
adc
loop
jge
jns
add
xor
sub
rcrl
push
cmc
addb
xchg
or
sti
mov
int
cwtl
mov
mov
mov
jp
aad
and
test
movups
popa
pop
adc
dec
push
in
dec
into
lods
push
fcmovb
add
dec
jb
insl
xlat
pop
imul
jmp
mov
push
dec
push
rcrb
pop
and
gs
icebp
mov
cltd
repz
sbb
dec
int3
jmp
jbe
aam
sub
pop
shll
loopne
cwtl
cmovns
adc
mov
scas
clc
adc
cmp
xchg
inc
in
push
inc
lcall
mov
ret
dec
fwait
rcll
rol
lea
mov
ficoms
or
and
test
or
mov
adc
test
or
incl
in
cwtl
rcrb
xchg
movsl
mov
inc
adc
scas
in
scas
fnstcw
dec
pop
pushf
and
test
pop
and
test
xchg
cltd
jb
jecxz
int
scas
outsl
sbb
cs
dec
mov
jg
sub
repz
mov
sub
lds
or
mov
push
shl
sbb
mov
stc
jmp
add
pop
xor
sub
out
sbb
gs
sub
sti
gs
jmp
pop
adc
ss
movsl
mov
jecxz
or
push
mov
loopne
or
mov
sub
or
cmp
js
fcompl
popa
push
xlat
data16
mov
jno
xor
pop
pop
or
jb
lahf
in
ret
int3
push
js
js
mov
dec
mov
iret
xchg
xorl
in
and
lods
add
imul
add
adc
imul
sbb
mov
adc
mov
dec
xchg
shll
or
lcall
mov
loopne
xor
xor
and
inc
lea
mov
mov
mov
dec
test
stos
lods
pop
inc
inc
sbb
or
call
das
psubsb
stos
je
lods
pop
adc
inc
inc
aad
or
loopne
ja
xor
imul
jl
jle
dec
pusha
push
leave
mov
xchg
mov
cmp
xchg
movsl
into
lods
sbb
pop
clc
jl
mov
aaa
ret
pusha
adc
mov
pop
es
popf
mov
es
or
hlt
scas
mov
jp
cmpsl
jne
fmuls
sahf
repz
scas
sbb
and
add
push
mov
push
nop
push
je
pop
adc
ud2
icebp
mov
adc
movl
inc
sbb
shll
ret
cmp
jmp
xor
jnp
dec
mov
add
movsl
imul
dec
mov
mov
outsl
lock
xor
adc
push
imul
adc
cltd
mov
xor
out
mov
inc
mov
loopne
adc
or
sti
icebp
cmc
imul
cmp
out
mov
xchg
gs
sbb
es
xor
pop
jecxz,pt
and
sarl
add
sbb
and
xchg
mov
loopne
stos
push
clc
cltd
ret
call
jge
inc
je
push
xchg
scas
push
jle
xlat
xor
and
jp
jle
mov
mov
or
cli
sbb
scas
icebp
jmp
xchg
mov
jns
mov
jne
jmp
dec
into
lahf
xor
gs
or
mov
js
sbb
xor
popf
sbb
scas
lods
jl
rorl
sti
xchg
out
cmp
pop
mov
je
jmp
add
int3
adc
fdivs
jge
leave
mov
fadd
xchg
in
cwtl
mov
enter
mov
stc
fildl
pop
popf
mov
xchg
subb
jae
sub
cmc
dec
enter
notb
in
cmp
push
xor
xor
pop
roll
add
mov
clc
or
mov
jne
repz
sbb
test
outsb
pop
add
and
jnp
nop
test
sbb
mov
inc
addr16
scas
jno
cmp
inc
sbb
add
or
out
sub
sub
cltd
je
adc
daa
cli
mull
mov
jbe
push
xor
mov
fstpt
test
or
push
inc
scas
inc
and
cmp
repz
out
adc
push
sarb
jb
sbb
cmp
jecxz
mov
out
pop
mov
xor
testb
cmc
insb
push
lcall
lds
daa
mov
sahf
mov
xor
or
or
and
mov
clc
add
bound
int3
enter
in
and
popf
mov
cmc
fsub
inc
jbe
leave
out
mov
not
aad
popf
iret
sbb
cmc
arpl
out
mov
icebp
adc
inc
leave
lret
push
fnsave
lea
mov
adc
aaa
inc
xor
add
sti
mov
push
mov
sbb
fisubs
dec
scas
adc
out
cmpsl
repz
pop
loopne
scas
add
out
cmp
sbb
add
mov
mov
add
adc
ficomps
pop
and
pop
xor
int
cmp
pop
out
sub
sahf
or
adc
ljmp
jnp
inc
and
sbb
lcall
push
in
mov
ds
imul
jo
pop
int
add
xchg
clc
jecxz
faddl
adc
mov
adc
lock
cmc
adc
or
jmp
ja
pop
fists
cs
push
xor
out
pop
call
add
add
cmpsb
jbe
xor
add
test
fisttpl
dec
into
test
fcomps
lret
ficoms
xchg
out
scas
fadds
sub
add
adc
sub
ljmp
jb
stc
shl
mov
push
sahf
data16
cmp
enter
dec
repnz
lcall
int3
and
into
lods
xlat
mov
imul
dec
shlb
cmc
dec
push
sub
mov
inc
test
sub
scas
cld
mov
pop
xor
test
loop
xchg
xchg
pushf
int3
pop
add
and
andl
cs
fldl
cld
pushf
mov
fisubrs
in
outsb
ljmp
inc
daa
pop
aam
ja
loopne
mov
scas
loopne
sub
stc
push
fidivrs
je
loope
cmc
bound
jne
out
ficompl
popf
inc
data16
adc
bound
rclb
loop
xchg
mov
pusha
cwtl
or
aam
adc
xchg
pop
mov
sbb
clc
adc
out
jbe
sub
lcall
cmp
or
jae
xor
push
cmp
cs
shrb
leave
je
mov
push
lahf
cltd
lret
push
fs
addr16
pushf
mov
shlb
jl
pop
ret
cmpsb
iret
inc
xchg
jno
jle
sbb
sbb
push
inc
ret
sahf
mov
into
or
test
jmp
jg
shlb
fnstcw
cltd
mov
fs
sar
into
scas
pop
fs
iret
mov
jo
fidivs
xlat
lea
mov
lahf
cmpsl
lock
hlt
subl
pop
lds
sub
in
cmpsl
add
pusha
ja
ds
push
dec
mov
or
cwtl
push
sbb
out
test
mov
out
rcrl
xchg
and
bound
mov
enter
pop
add
add
cmc
lahf
mov
inc
loope
jmp
and
pop
leave
or
mov
sub
shlb
or
xchg
lret
lret
stos
pushf
ljmp
or
xchg
sbb
stos
add
pop
fbstp
cmp
push
lods
pop
test
cwtl
cwtl
pop
call
shrb
xchg
sub
sbb
inc
sub
pop
imul
and
and
loopne
and
test
xor
sbb
imul
repz
mov
push
out
cld
inc
int
out
test
and
pop
xchg
fidivrs
pop
ficomps
fcoms
push
mov
push
inc
mov
mov
cmpsl
mov
data16
cltd
or
push
inc
push
loopne
sbb
pop
or
movsl
test
jge
mov
or
pushf
or
and
jb
inc
test
test
fs
aad
pusha
cmp
push
dec
ljmp
iret
cmc
xchg
mov
dec
rolb
push
sbb
jecxz
fisttpll
inc
ret
add
je
inc
and
sbb
push
cmp
ficomps
sbb
pop
fs
data16
cmp
or
mov
mov
pop
popa
in
and
fwait
insb
mov
jno
dec
adc
xchg
push
xor
jg
and
xor
cli
mov
xchg
push
or
pop
push
stos
lret
pop
mov
das
xchg
jo
xor
push
inc
fldlg2
sub
dec
push
add
clc
movsl
mov
xchg
dec
lcall
shrb
jb
loope
adc
push
mov
ret
loop
inc
mov
pop
in
jg
rorl
repnz
pusha
xchg
jl
mov
fsubrs
lcall
cmp
addr16
cmp
lock
fisttpll
loopne
outsl
xchg
adc
mov
cmp
pop
push
incb
ljmp
xorb
lcall
mov
rorb
pop
loope
mov
adc
push
xchg
daa
adc
xor
dec
cmp
jno
push
mov
and
popa
sbb
imul
pushf
in
cli
nop
stc
xor
push
jb
insl
out
aas
xor
or
icebp
cmpl
or
fwait
jg
or
jmp
in
push
std
or
adc
sub
push
roll
or
out
xor
adc
adc
scas
jecxz
add
add
shlb
xor
stos
push
sbb
fwait
clc
and
cmp
push
push
cmpsb
inc
js
jns
push
test
ret
cmpsb
jge
xor
cmp
shr
push
inc
mov
or
sub
xchg
repnz
mov
or
popf
push
divl
mov
inc
mov
fiaddl
pop
cmp
jp
add
mov
lea
add
nop
mov
or
pop
add
mov
adc
sahf
add
dec
xor
shl
pop
in
push
add
stos
hlt
cmp
add
inc
sub
dec
loope
fimull
xchg
int
push
ljmp
lahf
cli
cwtl
push
into
movsl
or
das
addl
leave
arpl
push
jbe
jmp
lea
jmp
out
lock
fmul
and
xchg
addb
aad
sub
rcll
adc
dec
cmpsb
out
test
mov
and
jbe
cmpsb
imul
inc
lcall
inc
repnz
shlb
inc
mov
pop
xor
dec
cmp
jg
out
mov
insb
in
push
call
push
sbb
dec
mov
xlat
inc
xor
and
mov
jne
lods
jnp
and
pop
cmp
or
shll
fcompl
cmp
mov
stos
les
leave
pop
aas
sub
pop
sub
cmpsb
cmpsb
xor
scas
jae
xor
xchg
sbb
inc
jb
pushf
stc
pop
pushf
stc
ret
mov
gs
int
cld
pop
mov
int
pop
xor
iret
popf
push
sbb
clc
xchg
ja
inc
sbb
adc
mov
divl
mov
inc
enter
xchg
out
fwait
into
fildll
sbb
push
jg
insb
int
xor
xchg
or
mov
pcmpgtd
cs
insb
cmp
pop
adc
aas
rcrl
sub
sub
data16
daa
rorl
pushf
adc
mov
les
in
jle
out
and
imul
jg
push
mov
arpl
movsl
fisubl
mov
xlat
sub
pop
call
out
mov
mov
lahf
inc
sbb
mov
and
aas
xchg
fs
movsl
inc
jae
xor
rclb
insb
push
dec
xor
aam
sbb
stc
push
jnp
mov
aam
in
idiv
cmp
push
jne
push
fdivrp
inc
mov
mov
pop
cmc
sbb
incb
fwait
das
push
and
push
aam
pop
jno
rclb
adc
xor
xchg
jns
rcrb
and
aaa
jmp
in
lret
in
pop
outsb
pop
lcall
adc
in
adc
sub
sar
inc
sub
pop
jns
xchg
insl
movsl
negb
and
mov
mov
hlt
pop
dec
xor
sahf
add
dec
and
pushf
push
ret
cmp
inc
mov
rolb
outsb
out
notb
testb
xchg
xor
inc
sub
push
mov
xchg
adc
mov
jge
jge
add
pop
push
sar
addr16
inc
dec
inc
lods
jle
cmp
push
and
sbb
std
scas
stos
scas
fsubr
scas
sbb
std
sarl
mov
aas
mov
xor
les
mov
outsb
imul
orb
repz
cltd
cmpsl
dec
push
and
pop
mov
cmp
sbb
mov
loope
lods
mov
testb
test
cmp
sub
cli
in
add
mov
ret
pop
pop
out
sbb
movsl
ret
daa
sub
xchg
jne
rorb
scas
popf
aaa
mov
loop
dec
cmp
into
fiadds
mov
movsl
ret
or
bound
negl
call
push
jecxz
xchg
mov
xchg
push
jle
stc
xchg
mov
rorl
cwtl
add
popa
add
sbb
pop
es
mov
repz
fs
cmp
adc
and
xor
lcall
es
addr16
dec
fcompl
mov
shrl
cmp
cmpsb
mov
jge
mov
lret
jl
pop
xorl
push
jge
or
lds
fidivrl
loope
xor
jne
xchg
sbb
jns
push
push
imul
jp
adc
pushfw
or
mov
mov
imul
cmp
cltd
dec
dec
sti
jmp
fmuls
shlb
jg
pop
push
sahf
out
imul
out
je
call
in
mov
sub
or
push
xchg
jmp
repz
dec
push
scas
fsubs
xchg
roll
xlat
xor
sub
sarl
shll
cli
inc
jge
pushf
add
cmp
pop
fcoms
sahf
push
divb
subb
repnz
sti
fwait
inc
or
lods
ds
inc
outsl
movsb
xor
inc
dec
sub
lret
test
fucom
movsb
out
repnz
mov
mov
xchg
pop
mov
pop
jp
jns
mov
or
jle
mov
test
xor
stos
sub
outsl
sub
into
sub
and
cmc
lret
and
mov
movsl
adc
jo,pn
out
mov
in
inc
shll
mov
xchg
pop
cltd
test
into
test
cmp
repz
fdivrp
icebp
pop
sbb
cmp
in
mov
mov
jne
aam
jecxz
push
and
orl
imul
int
jns
sub
imul
fwait
xchg
dec
aam
arpl
mov
mov
jno
enter
rcll
xchg
lods
lds
outsb
into
cmp
mov
inc
js
push
aaa
and
mov
movsb
subl
mov
pop
pop
dec
clc
sbb
cmpsl
icebp
xor
and
fildl
xchg
pushf
jne
mov
loope
fcomp
or
mov
mov
popa
lock
push
push
xor
xor
mov
sbb
das
lods
cld
lahf
iret
ja
aaa
cmp
mov
inc
mov
rolb
stos
or
mov
dec
in
fwait
ja
data16
pop
xor
fcomp
cli
out
mov
jb
clc
aam
mov
gs
sub
jb
pop
cs
adc
ja
stos
orl
fbld
xor
shll
movsl
in
push
cli
lret
jae
mov
pop
fwait
cwtl
in
enter
push
cltd
mov
int3
jb
imul
jecxz
mov
inc
xor
xchg
lods
lahf
mov
push
cwtl
dec
ret
aas
fsubl
cmpsb
in
adcl
insb
sbb
call
sbb
jl
dec
ja
dec
mov
xchg
pop
jge
dec
lret
jnp
push
or
iret
cmp
push
push
or
cs
mov
fwait
test
repnz
mov
cmp
rclb
sub
std
subb
clc
test
test
paddb
jge
jo
mov
push
je
push
adc
repz
int3
jmp
dec
xchg
sarl
insb
int
out
xchg
inc
sbb
xchg
lods
jo
push
mov
out
pop
jns
out
ss
jno
or
hlt
jmp
cmp
test
dec
cli
xor
lcall
mov
loop
ja
pop
out
fdivrl
aas
test
dec
jae
sbb
add
rorl
leave
jmp
mov
dec
sbb
fninit
cs
pop
nop
sbb
push
scas
mov
rol
jns
add
decb
adc
mov
or
aam
sbb
cltd
lret
xor
add
mov
and
out
and
and
mov
pop
fstps
test
adcl
xchg
sbb
dec
mov
subl
hlt
fisubl
int
xchg
in
jne
or
push
sahf
cmp
cmp
movsl
clc
sub
gs
push
daa
out
fldl
int
inc
inc
lahf
cmpsb
jg
out
and
fwait
fs
cmpsl
mov
mov
or
in
push
movsb
loope
std
adc
shl
and
nop
dec
push
ds
push
fldcw
mov
shr
push
stc
fs
pop
add
aas
ret
imul
mov
mov
jae
fldenv
aad
jmp
aad
outsl
mov
jbe
loop
in
adcl
jae
pop
xor
nop
fldenv
cmpsb
push
cwtl
shll
outsl
stos
loop
scas
jl
sbb
xchg
repnz
leave
mov
adc
mov
sbb
mov
repnz
out
outsb
lret
aaa
sbb
push
dec
dec
imul
pop
scas
pop
adc
iret
sbb
repz
dec
cmp
arpl
lods
xchg
inc
inc
aam
or
js
fimuls
lret
mov
sub
aad
mov
mov
mov
dec
adcb
push
pop
ja
inc
fnstenv
adc
inc
das
cs
roll
mov
leave
pushf
jecxz
and
loopne
jmp
out
sbb
push
les
dec
cs
adc
mov
lret
jp
fcoml
mov
out
sbb
cli
pop
popa
xor
mov
insl
jle
loopne
dec
add
xchg
mov
sbb
pop
imul
or
jnp
and
lahf
out
cmp
add
push
sbb
pop
adc
cs
addb
jnp
mov
pop
mov
sub
loope
xor
push
fnstenv
andb
jmp
mov
jnp
cmpb
dec
dec
fistl
adcb
jb
mov
sub
push
or
sub
sbb
sub
or
fiadds
cld
jnp
lcall
leave
pop
scas
fimuls
sub
jmp
test
outsl
inc
push
sub
lret
dec
lock
daa
xchg
push
cmp
dec
sbb
xor
out
dec
mov
daa
mov
pusha
push
push
int3
sbb
inc
xchg
push
mov
rolb
add
jecxz
icebp
and
cmp
sub
pop
lcall
jne
pusha
insb
filds
pusha
insl
push
jmp
ljmp
sbb
sub
sti
aam
mov
xchg
inc
push
inc
dec
in
fisubs
lret
inc
js,pn
or
push
mov
cmp
out
pop
jno
push
shrl
out
inc
cltd
ror
shll
fsubrl
insl
stos
pop
pushf
je
push
stos
call
jne
push
pop
enter
fisubl
fcomps
stc
pop
lods
into
push
xor
mov
inc
adc
shll
mov
sbb
push
push
je
sub
aam
mov
or
in
sbb
jns
inc
into
add
cwtl
ret
inc
in
cmp
sub
pusha
ss
pop
jb
in
test
push
cwtl
xlat
xor
sub
push
fsubrl
mov
mov
ret
lea
cli
lds
icebp
push
xlat
fimull
push
pop
fs
loopne
add
cltd
sub
scas
hlt
push
das
lea
inc
fildll
fnsave
data16
inc
mov
cmp
pop
cmpsl
push
sbb
shl
adc
mov
inc
fstl
mov
pop
pop
ret
loop
je
sti
lahf
or
test
mulb
fwait
lcall
testl
xchg
movsb
add
cli
push
push
mov
incb
ja
pushf
insb
sbb
shrb
mov
pop
inc
mov
mov
es
mov
data16
out
insl
push
pusha
xlat
lods
cli
mov
lret
loope
out
andb
inc
add
xchg
dec
adc
ret
arpl
cmp
xor
and
aad
sbb
mov
mov
add
push
xor
jge
mov
scas
daa
loope
test
ja
js
sub
lds
lahf
dec
iret
push
jp
rcl
test
lock
std
into
cmp
push
mov
add
repz
bound
sub
lock
lret
and
enter
cld
iret
mov
xchg
test
addr16
lods
push
pop
out
pop
sub
mov
idiv
test
scas
mov
pop
or
sub
xchg
les
dec
sbb
lock
sub
sbb
mov
mov
push
and
cltd
js
divl
movsl
movsb
pushf
ja
adc
push
fnstenv
push
lahf
inc
mov
dec
lcall
mov
out
lcall
or
push
dec
cmc
mov
add
lret
mov
fildll
lahf
push
jmp
pop
js
adcl
mov
cmp
cmpsb
adc
clc
ficomps
xor
leave
leave
push
imul
jae
arpl
in
std
sbb
pop
xchg
jns
jb
mov
pop
cmp
sub
lods
clc
daa
cmp
mov
jo
jge
inc
mov
pop
and
or
xor
leave
and
nop
shll
movsb
push
jno
pusha
pop
push
jae
addr16
mov
lods
push
dec
mov
mov
push
leave
out
add
cmp
stos
pop
ficoms
add
shlb
in
and
insb
cmp
xor
fsubr
rorl
cmp
repz
or
jge
mov
cmpsl
jge
enter
dec
shlb
call
repz
mov
ja
jb
stc
call
test
inc
xchg
xchg
xlat
in
jp
sbb
cmp
mov
fwait
xlat
movsb
in
aas
xor
mov
lcall
add
and
data16
lahf
add
mov
fnstenv
xchg
in
sbb
movsb
lods
push
xlat
cmp
dec
xchg
data16
fsubs
jg
lret
sub
pop
pushl
mov
fdivrp
push
or
sbb
imul
fdivrs
dec
bound
fsts
test
scas
out
aas
and
faddl
ret
in
jbe
dec
addr16
inc
lods
cltd
jmp
rclb
dec
sbb
fwait
mov
iret
jae
hlt
sbb
sbbb
mov
mov
fidivrl
xorl
mov
sub
mov
add
inc
push
add
adc
sub
xor
jo
enter
testl
sbb
mov
xchg
aam
jo
jnp
add
dec
add
pop
and
cmp
xchg
mov
sti
mul
dec
mov
xchg
cmp
jnp
mov
and
mov
or
shl
jo
dec
sbb
je
jge
mov
rcrl
inc
ret
jns
leave
gs
and
loop
loopne
and
fstps
and
inc
or
and
mov
mov
iret
and
jmp
or
stc
lret
test
icebp
mov
xchg
stos
dec
xchg
sti
les
mov
mov
mov
mov
popa
mov
out
lea
mov
dec
cmp
rcr
dec
clc
test
sub
in
outsb
mov
dec
mov
mov
ret
cld
lahf
outsl
test
cmp
sbb
push
push
push
push
sbb
or
ljmp
mov
inc
mov
orl
int
xchg
pusha
inc
push
push
cli
adc
pop
cmpsb
push
jns
scas
jl,pt
mov
inc
hlt
pop
mov
xor
cmp
jo
mov
xchg
xor
mov
and
jg
jg
fwait
loop
push
in
jmp
pop
dec
dec
inc
pushf
xorb
push
daa
gs
jbe
paddd
out
test
add
add
aaa
mov
fmul
jnp
sbb
or
ss
mov
jbe
in
xchg
imul
imul
dec
add
sbb
fwait
imul
test
ss
neg
xlat
push
cwtl
lods
inc
sbb
jns
fisubl
rclb
test
imul
insl
mov
push
pop
add
fstl
or
push
or
icebp
in
jne
testl
xchg
cli
jg
in
jg
jns
stc
jge
push
cltd
addr16
jnp
xchg
cmpsb
aad
jge
mov
sub
or
out
je
jbe
imul
test
mov
aad
dec
mov
push
jae
push
jno
pop
lret
fmulp
cmpsl
outsl
jbe
jmp
imul
std
push
ret
rorb
test
or
dec
jmp
cmp
xchg
mov
stc
pop
mov
test
je
popa
gs
dec
enter
push
cmp
and
mov
and
aad
jmp
adc
xchg
xchg
pushf
movsl
ja
jns
jb
mov
inc
sti
sub
lret
xor
xchg
cmpsb
push
insl
add
fcoml
gs
in
add
loopne
rclb
lcall
aas
insl
cmp
int3
cmp
cmpsb
fadds
imulb
and
cmpsb
xchg
mov
push
mov
loope
aaa
pop
and
sub
cmp
fdivrp
lock
jnp
pop
dec
adc
in
out
je
mov
orb
cmp
mov
insl
adc
jb
hlt
add
or
push
sub
incl
daa
sub
pop
mov
or
push
push
adc
cmc
jl
rolb
and
mov
jae
or
fbld
sbb
rolb
nop
iret
add
jnp
ret
add
mov
jno
cmp
dec
jmp
lcall
cltd
je
and
loopne
sti
pop
cltd
nop
mov
sub
mov
mov
and
xorb
push
call
or
stos
lock
and
out
fistpll
jb
pop
stos
loop
adc
mov
test
arpl
imulb
aad
adc
mov
lods
stc
jne
idiv
mov
fwait
out
cmpsb
fsubl
lock
mov
aas
mov
cmp
fbstp
mov
inc
popf
adc
cmp
mov
jg
insb
inc
fiaddl
test
pop
cmp
insb
aaa
jmp
cmp
jle
mov
scas
jae
cmc
loop
mov
fldt
push
mov
or
and
test
mov
ret
mov
adc
pop
outsb
inc
loopne
rorb
jecxz
sub
aad
shl
jo
and
xlat
data16
jmp
inc
sti
insl
rcl
xchg
fisubs
dec
sbb
hlt
dec
fs
mov
fucomi
imul
cmpsb
cwtl
sbb
inc
pop
add
insb
push
adc
repnz
jmp
jo
cld
andl
and
sbb
mov
repnz
frstor
addr16
inc
cmp
mov
orb
jmp
sahf
or
jb
aaa
sbb
pusha
adcb
lahf
adc
loopne
lods
insl
jle
aam
xchg
xchg
push
mov
cmp
cwtl
jl
push
add
and
lock
loope
xor
sub
jno
dec
xor
jg
sub
jle
sarl
push
fiaddl
mov
fistl
xchg
cmpsl
sub
sub
and
and
movsl
clc
push
add
inc
imul
push
popa
imul
cmp
pop
out
scas
adc
push
sub
jp
fnclex
mov
add
mov
sub
lahf
jp
rolb
lretw
or
cmp
loopne
sbb
pushf
cs
repnz
jno
pop
hlt
or
mov
or
add
pusha
push
iret
mov
sub
rorl
in
sti
stos
xchg
mov
call
push
jne
jo
adc
or
push
xor
stc
pop
jmp
xor
push
lds
add
adc
in
negb
xchg
inc
stos
scas
out
fcompl
sub
adc
movsb
js
pop
test
or
add
pusha
jmp
add
cmp
fdiv
pop
inc
mov
loope
xor
je
push
sbb
or
and
sbb
dec
or
sub
jns
push
sub
sti
cmp
out
icebp
movsb
jg
pop
cwtl
jo
cmpsl
cld
rcll
scas
cmp
nop
push
inc
rcrl
pushf
jnp
add
dec
daa
pop
int3
push
sbb
fnstenv
mov
pop
iret
and
mov
ljmp
movups
and
repnz
pop
inc
out
out
sub
cmp
mov
or
fidivrl
repz
mov
xchg
cmp
push
mov
aad
jl
idivl
rol
enter
add
aad
xchg
stos
cli
push
rclb
das
xchg
pushf
push
sti
lahf
js
fs
or
xlat
sti
dec
daa
test
icebp
mov
sahf
xchg
xchg
jg
push
fs
daa
jns
xchg
mov
leave
pushf
out
xchg
addl
loopne
or
clc
sbbl
xor
xchg
lcall
lcall
push
lret
lret
inc
mov
sbb
cmp
lock
lcall
jo
push
xor
jmp
lods
popa
add
insb
pop
dec
pop
fxch
sahf
jae
cmpsl
or
roll
icebp
cmp
sub
ds
mov
mov
in
pop
movsl
dec
fs
push
sub
rcrl
aam
int3
enter
lock
mov
mov
push
sbb
push
into
mov
xor
push
mov
popa
adc
and
packssdw
xor
push
jb
dec
xlat
in
jge
jo
xor
sub
sti
dec
lcall
fwait
rclb
stc
ja
loopne
shl
addr16
xchg
test
mov
imul
je
js
push
xor
test
imul
xchg
or
push
cmc
jno
push
addb
add
out
fwait
pop
dec
cltd
xor
rcr
stos
out
fwait
in
mov
cli
mul
or
test
stc
stos
mov
or
lods
jecxz
mov
jp
leave
in
cld
mov
dec
adc
ja
push
or
call
fidivl
pop
push
mov
jbe
ret
in
aam
sbb
xchg
nop
mov
sbb
cmp
movsb
sbb
push
test
sbb
cltd
clc
mov
jo
imul
push
dec
or
mov
xchg
add
shr
or
cmp
pop
aas
jae
inc
jl
mov
cli
and
and
adc
stc
ret
scas
adc
popf
sub
nop
dec
jmp
cld
insb
cld
rorl
add
xchg
xor
sbb
mov
int3
testb
aaa
fucom
cmp
inc
push
jmp
and
pop
pop
cld
and
add
nop
flds
pusha
sbb
stc
mul
out
in
push
mov
mov
mov
movsb
push
or
inc
adc
cmp
mov
or
mov
sub
movsl
ja
faddl
or
pop
xor
lahf
mov
call
jae
mov
insb
pop
in
cmpsb
jmp
ss
mov
push
mov
pop
shlb
int
dec
sbb
lret
loopne
cmp
mov
jecxz
stc
test
add
xlat
sbb
pop
jecxz
enter
mov
sbb
aad
mov
sub
pmulhw
sbb
inc
rcrl
fmuls
push
lahf
shrb
cwtl
cmc
push
add
sub
insl
inc
movsl
faddl
orl
add
sub
xchg
xchg
mov
adc
mov
dec
gs
nop
outsl
inc
jl
and
fmuls
enter
cmc
adc
clc
lret
push
hlt
add
je
ret
push
adc
cmp
and
jo
daa
mov
sbb
cmp
stos
cli
mov
test
andnps
lea
adc
mov
xlat
jns
loop
dec
xchg
fs
fwait
pop
call
xchg
icebp
jo
daa
in
sbb
xchg
jl
add
mov
inc
push
jae
roll
add
and
mov
jge
mov
scas
ss
enter
push
xor
in
jns
xor
inc
fisttps
push
cmp
das
sahf
push
aam
and
push
adc
out
push
jg
xchg
or
arpl
call
incl
rcrl
imul
sub
jb
out
sahf
fistpl
lea
inc
xor
imul
mov
add
adc
js
fdivrs
sti
insl
add
ss
pop
negb
addr16
and
sub
lea
sub
subb
sbb
sbb
in
mov
cltd
int
lock
inc
adc
fwait
and
mov
add
mov
movsl
es
ret
daa
or
xchg
mov
xchg
daa
in
mov
xchg
push
in
mov
lret
imul
pop
push
arpl
cltd
rorb
xchg
add
scas
enter
push
or
add
mov
lods
ja
lock
fidivrs
lods
or
ljmp
shll
pop
add
push
jmp
addl
jl
xor
lea
into
hlt
sar
jp
add
sub
rcrb
lock
sahf
rcrl
adc
repz
inc
inc
ds
or
dec
adc
in
clc
xor
mov
push
fcomp
dec
les
mov
repz
lods
jnp
pop
cmpsl
dec
inc
mov
jl
push
jg
ds
test
cmp
ds
jmp
aam
pop
mov
je
enter
pop
or
mov
bound
sub
aad
mov
loope
lret
mov
sub
xor
inc
icebp
jne
mov
or
ret
jo
jle
push
dec
pusha
fstpt
push
dec
and
push
or
fwait
in
sbb
cmp
jecxz
inc
lret
call
mov
rcl
sub
inc
push
xchg
dec
pop
ret
cmp
inc
and
inc
popf
and
stos
shlb
or
sbb
movsl
loop
jp
aam
add
push
ja
jbe,pt
lods
outsb
add
hlt
sbb
dec
hlt
mov
loope
jecxz
and
lods
mov
add
add
and
fidivrs
les
test
jl
mov
adc
sbb
and
push
or
xor
int
pop
jg
aad
adc
or
lcall
aad
and
enter
mov
cmp
pop
sbb
scas
and
fsubr
lds
je
xor
sbb
cmp
xor
out
pushf
jge
ret
mov
je
ja
jmp
sar
push
into
cwtl
mov
jmp
outsb
or
push
mov
bound
sahf
mov
out
into
xchg
jp
out
aaa
shrb
addr16
and
pushf
xchg
push
mov
vpmaxub
sbb
jae
sbb
aam
lret
adc
and
fsubrl
cld
test
daa
into
jecxz
cmp
je
ja
lods
insl
lar
push
push
jle
inc
ret
jbe
out
push
fdivl
add
lods
bound
pop
and
lods
lcall
add
popf
xchg
add
fxch
adc
mov
cld
push
movsb
and
cmp
mov
pushf
jp
insb
xchg
leave
cmpsb
cs
pop
fwait
inc
sbb
je
inc
js
sub
movl
mov
pop
aam
push
and
mov
push
cmp
scas
out
xchg
xchg
mov
or
addl
test
dec
and
mov
jae
sbb
xor
add
mov
inc
sbbb
cs
pusha
xchg
test
mov
push
sbb
dec
xchg
mov
dec
in
test
xchg
mov
dec
scas
std
jo
mov
aad
clc
fstps
cmp
dec
pop
mov
test
sub
mov
pushl
mov
outsl
sti
and
cmp
rclb
xlat
mov
mov
jno
adc
mov
jmp
cld
mov
test
inc
in
lods
leave
lods
and
dec
mov
test
sbb
fsts
push
and
push
or
notl
mov
in
adc
ja
outsb
icebp
ss
push
jl
cmp
arpl
or
add
repnz
xchg
ss
hlt
and
cmp
rcl
cmp
mov
ss
push
in
dec
into
mov
cmp
movsl
adc
es
push
bound
push
adc
xor
fistpll
mov
ficompl
xchg
xchg
mov
lret
jp
add
cmp
cmp
and
fcmovnu
stos
inc
shlb
push
or
pop
aas
push
sub
ret
rolb
mov
jp
jae
dec
mov
mov
aam
arpl
or
lret
jl
out
or
ljmp
sub
hlt
notb
int
rcrb
mov
jb
stos
push
add
push
arpl
xchg
dec
fsubrs
fs
sbb
xchg
mov
adc
filds
xchg
xchg
push
sub
jae
cmp
iret
lcall
repz
mov
pushf
pushf
sub
imul
fdivs
add
out
fs
imul
dec
call
sbb
mov
filds
daa
cmp
inc
insl
xor
adc
dec
mov
mov
pop
pop
lret
or
jb
mov
mov
cmp
pop
lock
ljmp
pop
lods
jns
sub
pop
dec
inc
sub
mov
or
xor
jmp
xchg
mov
pop
icebp
jmp
imul
stos
jmp
cmp
xchg
adcl
stos
xchg
jg
fdivs
and
clc
or
into
dec
xor
dec
mov
xchg
cmpsb
stc
and
cld
jge
adc
leave
sub
dec
popf
pop
mov
jmp
test
mov
loopne
cs
add
mov
and
mov
ret
outsb
push
push
push
mov
imul
add
pop
div
xchg
jo
out
ss
rep
dec
ljmp
insl
aam
into
imull
movsl
loopne
inc
pushf
pop
xor
xchg
or
cmc
and
out
insl
pop
daa
or
bswap
fsubs
stos
lock
aas
sahf
push
ret
mov
push
mov
idiv
cltd
nop
test
stos
stos
rolb
pop
ds
orl
xchg
fdivrp
or
test
inc
xor
xchg
add
nop
leave
sahf
inc
pop
adc
test
fidivrl
mov
arpl
pusha
das
add
mov
sub
hlt
jp
xchg
cmp
cmp
and
add
pusha
adc
cmp
into
imul
push
fsubp
push
xor
std
push
mov
test
inc
mov
push
cli
xchg
scas
mov
daa
pop
and
lods
pop
mov
movsl
clc
sub
movb
cli
add
idivb
bound
cmp
ret
fs
pushf
aam
push
rorb
cmpsb
sbb
outsb
mov
popa
inc
push
sbbb
popa
xor
and
insb
sahf
mov
push
addr16
cltd
sub
data16
pop
pop
xor
mov
shll
sti
hlt
test
jmp
mov
or
dec
pop
adc
sub
movsb
mov
repz
lds
push
add
adc
rcr
xor
mov
xchg
sahf
sbb
xchg
insl
xlat
mov
push
pop
shrl
in
adc
mov
in
pop
lret
cmpxchg
xor
add
iret
mov
cmpsb
lock
mov
ret
jno
fcmove
push
fbstp
inc
add
lahf
or
fdivrs
cmp
ret
ljmp
nop
repnz
scas
xor
sub
ss
ja
out
adc
dec
bound
stos
xlat
mov
inc
out
aaa
add
jae
adc
dec
inc
inc
pushl
mov
sub
xchg
mov
cltd
leave
call
sbb
and
dec
mov
xor
loopne,pn
xor
lret
sahf
subl
popa
sarb
aas
roll
mov
aas
push
jecxz
rcr
jbe
mov
rep
mov
dec
aaa
sub
xchg
jecxz
push
bound
ljmp
inc
adcl
cmp
xchg
jecxz
jl
shr
mov
stos
mull
sbb
je
fbstp
data16
adc
xchg
je
inc
lods
jbe
adc
cmpsl
dec
fstl
outsb
add
arpl
xor
or
add
loope
pop
jne
xchg
paddsb
rolb
or
inc
cwtl
or
xchg
data16
mov
mov
add
aam
aas
imul
mov
mov
cmp
enter
cmp
pop
mov
scas
es
test
xchg
mov
scas
int
or
cmpsb
cmpsl
mov
push
loope
mov
jmp
out
pushf
lret
xchg
ja
cmpsb
pop
xlat
insl
dec
jp
cltd
add
or
mov
inc
sub
icebp
xchg
out
outsb
fists
loopne
test
jmp
imul
sbb
lods
xor
xorl
sbb
enter
nop
adc
mov
or
pop
mov
mov
rcr
cld
inc
hlt
jl
xor
or
push
add
cmp
orb
lcall
jns
add
fidivrs
cli
inc
inc
jle
aad
mov
mov
xchg
cmp
dec
pop
out
orb
fidivrs
dec
xor
push
arpl
and
xchg
or
push
divb
addb
dec
push
xchg
jmp
sbb
add
dec
xchg
mov
or
testl
ret
cld
mov
out
jmp
ja
jbe
xchg
hlt
ds
imul
sarl
adc
in
add
pop
and
out
sub
test
in
sbb
fcompl
add
std
cmpsb
add
sarb
pushl
add
popf
mov
std
jp
scas
sbb
hlt
fisttpl
adc
in
mov
cwtl
dec
test
adc
mov
or
pop
mov
data16
adc
lahf
xchg
sti
dec
out
inc
in
lock
add
add
nop
adc
out
xchg
inc
sub
fcomp
dec
dec
dec
inc
arpl
cmpsb
sbb
xor
sbb
mov
push
xchg
jo
jge
movsb
cmp
adc
iret
stos
pop
jb
xchg
adc
and
xor
push
jp
insl
mov
push
lds
stc
divb
lcall
adc
push
inc
iret
fistpll
nop
rol
popa
lock
insb
or
js
push
iret
push
xor
push
ficoms
ret
imul
fistpll
scas
jo
les
inc
sub
gs
xchg
add
jl
or
icebp
or
pop
push
add
in
xchg
mov
or
in
adc
add
fst
jge
jecxz
or
push
lcall
stc
aad
add
out
sahf
cltd
loop
ss
scas
or
lahf
cwtl
lret
sub
cli
mov
and
lahf
cmp
mov
sub
mov
aam
mov
js
mov
clc
roll
inc
jmp
push
imull
and
xor
push
outsb
push
icebp
cmp
arpl
ja
push
push
fistpl
mov
mov
mov
jg
repnz
rorl
aas
xor
sub
xor
mov
mov
in
nop
lret
jmp
push
popa
xor
inc
vfrczss
xchg
scas
rorl
out
scas
popf
fwait
add
sbb
jne
setp
ja
adc
inc
mov
pop
xorw
inc
outsl
jmp
or
dec
push
jge
sub
cmp
jno
mov
in
push
pusha
mov
imul
in
pop
jle
fisttps
fmulp
xchg
iret
xchg
mov
fsubs
inc
pop
mov
ret
cli
push
cltd
nop
lahf
add
jle
and
pop
popa
push
jle
out
xchg
xor
push
add
mov
dec
jmp
or
insb
xor
jb
int
pusha
stos
fisttps
inc
fldcw
aaa
das
fwait
ljmp
outsb
fwait
test
ja
call
xchg
mov
pusha
pushf
xor
paddq
push
das
cmc
enter
iret
inc
jp
leave
shrb
data16
pop
xor
ret
repnz
arpl
hlt
xor
pop
fidivrs
cli
out
mov
repz
scas
popa
mov
sar
sahf
fcoml
icebp
xlat
imul
insl
jo
inc
mov
jbe
sub
mov
fcmovnb
jb
jo
js
mov
repz
out
or
test
in
out
addb
loopne
cmp
mov
movups
lret
sbbl
add
mov
mov
xchg
jl
mov
dec
gs
push
dec
std
sar
xor
mov
mov
or
or
jns
adc
inc
sbb
pop
mov
xor
cld
int
pop
pop
adc
arpl
dec
sbb
jmp
mov
fs
sti
enter
icebp
daa
outsb
lods
repnz
push
xchg
iret
pop
add
xor
pushf
cmp
mov
inc
sbb
popa
add
xchg
jmp
cmp
sbb
sub
mov
add
lock
push
out
stc
popf
jo
int
test
mov
repnz
fwait
push
rcr
je
cld
hlt
or
mov
xchg
loopne
fwait
and
mov
and
div
loope
fs
jae
xor
mov
fisubrl
xchg
xor
pop
xchg
int3
pushf
orl
sbb
sbb
js
xchg
lcall
mov
inc
push
push
mov
pop
popa
js
mov
push
dec
push
iret
loopne
sub
push
or
ror
mov
push
push
test
cmc
lea
das
jge
or
mov
iret
das
mov
push
mov
or
jb
push
loope
mov
sahf
aaa
push
imul
sub
movsl
clc
mov
shrb
jb
push
imul
mov
push
repnz
pop
testb
rcr
push
popf
xor
outsb
mov
sub
mov
sbb
sbb
pop
js
adc
stos
pop
cmpsl
ret
rclb
push
fwait
es
mov
enter
jns
push
lods
lock
jns
push
mov
aas
inc
xchg
jo
out
ljmp
fcmovb
dec
or
das
xor
mov
add
adc
int3
mov
xchg
push
push
filds
popf
mov
aad
lods
sub
mov
dec
push
mov
mov
or
js
dec
sbb
ljmp
rolb
push
dec
leave
je
lret
std
fs
pushw
pop
sub
push
xchg
sarb
mov
push
pusha
cwtl
fists
jo
sti
or
and
dec
sbb
pop
cmpsb
add
dec
mov
cmpsb
push
mov
mov
cltd
stc
cmpsb
or
popa
int
stos
xchg
add
out
cmp
mov
fdivrl
jle
fst
jg
inc
scas
sbb
mov
mov
xchg
scas
sub
fwait
pop
mov
ret
pop
xchg
mov
xor
cwtl
loopne
outsl
cmpsl
test
cld
ja
les
std
push
jecxz
aam
addr16
dec
andb
jge
pop
jg
or
push
jns
mov
rorb
daa
adc
or
fidivs
adc
gs
ret
out
mov
imul
testb
mov
jns
jge
aad
xchg
dec
jl
je
push
xor
mov
ljmp
out
mov
sti
pop
xchg
ret
jmp
push
idivl
jns
jo
pushf
sub
push
lods
and
mov
sub
add
rcrl
pop
dec
repnz
lods
jle
mov
dec
push
lret
fisubrl
in
iret
in
push
lods
push
mov
cmp
lods
addr16
ss
clc
adc
cld
aaa
sub
cmp
das
out
sar
lods
pop
nop
stos
cwtl
arpl
sbb
dec
out
in
paddusw
xchg
add
insl
or
ficomps
or
imul
fadds
inc
mov
cmpsl
aas
sti
rol
sarl
push
sbb
jne
js
in
fcomps
pop
jno
cmpsl
flds
insb
nop
xor
movsb
es
outsl
je
fstps
iret
test
mov
pop
pop
outsl
push
pcmpgtd
adc
mov
sub
adc
mov
es
mov
push
ja
subl
inc
sbbl
xor
dec
mov
cmp
jg
or
into
mov
inc
and
les
or
push
xchg
dec
cmpsb
push
ret
mov
loope
mov
stos
xlat
adc
add
imul
sbb
push
or
jbe
js
xchg
add
test
repz
push
outsb
dec
inc
loopne
sbb
add
pop
cmp
push
leave
xchg
adc
dec
in
mov
pop
mov
mov
sbb
push
test
pop
std
rolb
push
dec
repz
arpl
out
mov
clc
pop
leave
push
cmp
mov
lret
xchg
call
or
test
imul
clc
in
dec
xor
cmovae
cltd
mov
cmp
pop
ds
cmp
xchg
ret
pop
mov
outsl
enter
sbb
dec
sub
aad
cld
xchg
mov
bound
lods
add
or
pop
icebp
add
mov
pop
xchg
dec
loopne
adc
and
push
add
adc
adc
and
lods
mov
xchg
adc
popa
cmc
test
imul
iret
mov
call
mov
inc
dec
jne
in
dec
das
arpl
aam
lcall
dec
movsl
sbbl
das
testb
or
push
repz
js
les
add
mov
inc
es
sbb
lret
out
hlt
add
cwtl
add
dec
pop
pop
jg
sbbl
lret
scas
xchg
push
jne
into
or
sub
and
ret
mov
add
ja
ret
pop
out
xor
jp
fs
in
xor
stc
iret
lea
inc
cli
jl
xchg
iret
add
cwtl
push
sbb
outsb
jmp
nop
movl
sub
xchg
xchg
testb
inc
mov
dec
xor
mov
cltd
sub
push
mov
loopne
mov
dec
sub
cmpb
rcrl
es
sbb
inc
cmp
mov
push
mov
mov
dec
push
push
leave
repz
or
test
xchg
jmp
in
xchg
es
sub
test
jne
jno
sub
in
xchg
out
stos
adc
insl
or
nop
adc
add
and
lods
xlat
in
cmp
or
imul
mov
out
sbb
add
mov
lea
popa
in
cltd
cmp
cmp
sub
outsl
mov
outsl
xor
xchg
inc
xor
sahf
push
and
ss
outsb
add
repz
fstl
mov
and
outsb
das
lock
aaa
mov
push
bound
pop
and
cmp
jp
sbbb
xor
pop
test
push
mov
sbb
addr16
pop
fcmovnu
addb
lahf
add
inc
int
jb
pusha
mov
sahf
sub
pop
gs
push
leave
les
and
mov
and
pop
xchg
cld
inc
push
xor
out
cwtl
push
outsb
scas
and
iret
loopne
movsb
adc
or
hlt
lret
mov
pop
dec
inc
cltd
and
movsl
mov
or
or
test
adc
mov
xchg
inc
mov
repz
insl
das
leave
lcall
jmp
jle
aad
xchg
shl
pop
push
xlat
daa
mov
fs
adc
adc
pushf
movsl
jle
test
or
mov
inc
test
xchg
dec
jno
fsubp
mov
fimull
or
es
lahf
mov
xor
inc
mov
fistpll
fidivs
clc
in
sbb
outsl
or
addr16
int3
cmp
mov
in
add
fcom
jecxz
enter
jnp
cli
dec
das
dec
xchg
jns
inc
xor
ret
movsl
and
repz
mov
loop
out
mov
add
lea
lods
shlb
and
xor
sub
sub
out
mov
scas
push
imul
aas
lods
inc
xchg
subl
enter
push
and
out
push
mov
mov
push
enter
daa
ret
pop
rcrl
sti
into
imul
pextrw
mov
lret
jae
or
dec
push
movsb
xchg
mov
adc
push
inc
pop
out
enter
mov
add
pop
or
fists
lea
and
dec
or
adc
je
jno
xchg
ret
lcall
push
inc
aaa
sbb
mov
mov
sub
mov
loop,pt
lret
scas
daa
xchg
imul
cmpsb
xchg
sar
sbb
push
and
imul
rolb
dec
and
ds
xlat
mov
iret
sub
out
les
cli
xor
sbb
sti
push
movsb
cmc
adc
pushf
pop
in
movsl
pop
pop
call
xchg
mov
add
imul
xchg
cmp
and
mov
mov
sbb
cmpb
and
inc
fwait
xchg
enter
inc
push
mov
pushf
mov
jbe
icebp
inc
xchg
fisttpll
mov
pop
pop
xor
dec
incl
js
xor
shrb
dec
inc
sbb
cmpsb
in
les
bound
adc
mov
mov
adc
mov
and
dec
addr16
xchg
push
js
push
sub
aaa
aas
inc
sbb
xchg
pop
jns
add
movsl
and
fisttps
jp
je
mov
push
js
ret
cmpb
pop
or
cmp
nop
movsb
in
sbb
jp
inc
int3
fdivrl
xorb
push
sub
cmp
xchg
xchg
lods
sub
hlt
dec
stos
cmp
xchg
fcompl
sub
adc
daa
imul
add
jb
cld
mov
decb
stos
push
rcll
pop
nop
ja
or
cmpsl
imul
nop
mov
cmp
adc
pop
dec
mov
roll
mov
cmp
adc
scas
xchg
xchg
pop
push
dec
and
cli
jbe
adc
sahf
mov
adc
call
jle
mov
scas
jbe
mov
rcrb
shll
xor
add
or
sbb
fisttpll
in
ret
mov
inc
sbb
mov
fnsave
out
inc
data16
fisttpll
pop
and
jne
inc
ficompl
jbe
repnz
pop
add
iret
push
es
stos
cwtl
jge
dec
nop
mov
jp
jecxz
mov
popa
adcb
movb
xchg
insb
and
xchg
jmp
mov
leave
or
jp
mov
mov
idivb
lcall
jb
cmp
dec
xor
sbb
mov
les
mov
jmp
loopne
loop
out
arpl
cs
aas
dec
jg
adc
xchg
call
aad
add
pusha
shlb
jecxz
push
fs
and
lock
test
in
movsb
jnp
inc
cmp
mov
mov
dec
mov
imull
add
fdivr
loope
repnz
inc
mov
jne,pn
and
xchg
roll
inc
mov
imul
mov
inc
test
jge
movsb
or
mov
enter
dec
push
jl
mov
inc
ror
aam
jl
pop
adc
outsl
out
pop
xor
imul
push
in
cmc
pop
lock
sti
popa
out
pop
scas
mov
ss
out
or
popa
push
mov
lock
lahf
sar
pusha
les
sti
sub
rclb
lea
mov
cmc
lods
push
lea
fcomp
sub
lahf
and
test
fwait
pop
pop
sbb
test
ret
popa
fcoml
cltd
inc
hlt
pop
movsb
pop
pop
outsb
out
and
jo
jnp
or
mov
shl
jmp
in
mov
dec
xlat
mov
inc
mov
sub
mov
cmpsl
lods
stc
idivl
xor
jge
push
hlt
mov
imul
orl
sub
test
fwait
mov
adc
sti
and
outsl
pop
mov
or
sub
loop
insb
ds
push
jae
mov
out
jne
cmp
sbb
ds
push
and
inc
push
or
mov
jp
fstps
cmp
out
or
xchg
pop
pop
or
add
mov
into
imul
jbe
and
inc
into
rcl
sahf
test
dec
test
add
dec
dec
mov
cmp
xor
mov
xor
jecxz
jb
outsb
jb
push
lret
mov
push
push
pop
imul
pop
cli
fistl
lcall
js
jge
push
cmpsb
and
sub
mov
lods
popf
stos
xchg
sbb
xlat
mov
fsubr
and
insb
jo
je
xor
nop
xchg
movsb
and
dec
and
cld
shll
lds
mov
pop
in
negl
jmp
sub
sbb
dec
mov
mov
mov
and
mov
mov
pop
jns
outsb
and
ss
dec
scas
sub
pop
and
loope
pop
add
mov
call
ds
adc
lds
pop
xchg
dec
jmp
lcall
adc
xor
imul
sbb
mov
aaa
sar
fmuls
test
jnp
test
pop
push
push
pop
xchg
imul
lret
dec
dec
repnz
ror
and
popa
inc
in
mov
in
mov
int3
ds
mov
xor
push
inc
aas
mov
jp
mov
movb
xchg
pop
jmp
cmp
xorb
cmp
out
fidivl
xchg
xchg
in
cmp
mov
lods
in
jp
adc
addr16
inc
sar
pusha
loop
pushf
pusha
sub
arpl
ja
jl
sbb
or
fcos
jge
aam
lods
xor
inc
xchg
popf
divl
fidivs
dec
test
add
sahf
loopne
jns
arpl
mov
dec
loope
or
stc
fisttpll
loopne
push
sub
or
dec
and
sbb
outsb
xor
scas
mov
pop
jno
out
mov
sbb
cmpsb
mov
ljmp
cmp
ffree
repnz
es
leave
add
jnp
sub
add
or
das
jb
imul
cmp
pushf
dec
ljmp
mov
mov
scas
test
mov
add
imul
adc
adc
mov
lret
repz
or
or
test
inc
repz
jno
stos
mov
fbld
inc
mov
das
fistpl
sbb
inc
mov
lcall
je
sarl
mov
mov
out
mov
pop
jbe
sarl
jne
jg
and
cltd
xchg
ret
test
flds
in
mov
shr
sti
arpl
test
sub
mov
iret
js
jg
sub
repz
insl
sub
lret
cmp
dec
imul
jns
cltd
popf
and
cmpb
loop
push
inc
data16
mov
xor
in
popl
push
push
cmp
and
dec
inc
push
and
out
jns
fnstenv
adc
enter
js
pop
call
push
pop
icebp
test
scas
test
test
xor
inc
jle
jg
fsts
aad
push
and
mov
jge
xchg
inc
gs
sub
push
popf
sarb
test
pushf
and
out
lea
push
std
adc
mov
dec
push
push
testl
dec
les
adc
icebp
pushf
lds
imul
out
jns
ret
jno
int3
loopne
bound
jno
in
and
aaa
xchg
into
mov
xor
das
movsb
dec
in
mov
xor
xchg
fsubrs
push
mov
imul
mov
mov
test
inc
in
pop
out
inc
pop
push
and
or
leave
fcmovnu
or
imul
daa
push
out
js
cmp
fistpll
rcrl
sub
insl
and
shl
aaa
rorl
adc
testb
mov
enter
sub
or
mov
or
dec
ror
rcrl
jge
repnz
lea
shrb
ficompl
enter
repnz
mov
inc
dec
push
in
xchg
push
cmpsb
hlt
and
jae
stc
mov
test
ret
adc
test
scas
adc
jmp
mov
loope
dec
sub
adc
add
xorb
push
test
incl
add
dec
aad
sti
push
dec
push
fbstp
inc
pop
inc
pop
push
jg
ss
adc
add
xor
pop
add
addb
js
xor
in
mov
adc
fldcw
mov
testb
mov
fwait
push
xor
cmpsb
hlt
ret
aas
mov
movl
sub
mov
rorb
cmovbe
lods
or
aas
or
adc
and
mov
rcl
mov
jno
sub
mov
icebp
roll
cs
cmpsl
fistpl
std
je
bnd
test
cs
in
push
lahf
xchg
jp
jno
add
xchg
iret
fimuls
mov
push
adc
mov
insb
sbb
insl
test
sar
sbbl
inc
enter
pop
push
hlt
inc
sbb
je
sub
inc
mov
cmp
sbb
or
mov
idivb
mov
add
lods
fbstp
sbb
push
adc
pop
jne
mov
dec
jne
cmp
xchg
cmpsb
dec
xchg
cmp
sub
xchg
xor
jae
out
sbb
rcpps
filds
pop
xor
or
jl
xor
pop
popf
sub
ja
inc
out
cmp
inc
gs
jns
or
loopne
out
pop
jle
je
icebp
sbb
nop
cli
arpl
adc
dec
inc
push
in
test
arpl
nop
loope
rolb
inc
sarl
in
push
bound
inc
dec
sbb
movsl
add
decl
sbb
add
mov
push
or
dec
mov
imul
subl
cmpsb
jl
in
sbbl
subl
ffree
es
movsl
movsl
jmp
sub
pop
push
pop
movsb
out
xchg
jmp
scas
pop
mov
call
or
jle
adc
mov
in
daa
and
ja
movsl
lcall
mov
jns
rcr
xor
adc
out
in
jbe
jo
jge
aas
mov
rcr
inc
mov
mov
jb
jnp
js
clc
int3
mov
cmp
and
sub
stos
ljmp
mov
lea
je
andl
jmp
jb
and
in
daa
loope
add
sub
or
cmp
xor
and
shll
pop
dec
and
lea
jb
jmp
adc
xor
sbbl
push
mov
ljmp
cmpsl
call
stos
lds
loop
scas
scas
mov
int
in
lea
add
and
int3
mov
aad
jae
dec
push
adc
std
push
sti
gs
div
repz
jmp
cmpsb
pop
mov
mov
fwait
mov
call
inc
mov
dec
jnp
cmpsb
adc
adc
mov
xlat
mov
aad
lea
and
mov
out
or
dec
call
pop
xor
test
xchg
out
je
sti
loopne
rolb
bound
test
sub
mov
shlb
enter
lahf
mov
and
in
pop
data16
sub
and
enter
add
ss
pop
pop
add
out
adc
aad
decl
negb
jnp
xlat
jge
jp
xchg
xlat
pop
loop
adc
and
in
loope
outsb
in
ficoml
mov
stc
mov
fsubs
sbb
mov
cmpsl
mov
pop
xchg
idivl
dec
or
jnp
pop
test
inc
fmuls
mov
rcr
pop
or
movsl
fsts
arpl
cmpsl
cmp
xchg
aam
out
or
popa
cltd
pop
dec
inc
cwtl
fstps
enter
and
mov
mov
hlt
daa
cmp
mov
sahf
out
xchg
xor
and
jmp
loope
xchg
sahf
cmp
mov
icebp
sub
clc
dec
push
int
push
lock
xchg
adc
jl
dec
add
inc
ret
jns
cltd
ss
inc
jb
lret
mov
aad
mov
sub
push
push
push
inc
je
jbe
pop
lods
cld
or
ljmp
or
or
out
mov
jb
sbb
bound
lcall
ja
jge
call
outsb
cmpsl
mov
lcall
hlt
outsl
aas
cmp
mov
inc
add
call
stc
xor
arpl
sti
mov
add
ficomps
mov
xchg
sub
loopnew
push
or
ss
jg
movntps
mov
sbbl
sbb
lock
fisttpl
in
dec
and
leave
xchg
ds
mov
inc
mov
je
cld
int
cltd
dec
xchg
xor
pop
popf
dec
popl
scas
scas
movsb
jb
lds
out
pusha
dec
sub
dec
add
hlt
fsubs
mov
lret
aam
mov
dec
mov
fsts
das
lcall
mov
mov
pop
ljmp
adc
fistpll
mov
add
stos
sbb
adc
mov
int
cmp
filds
mov
aam
lret
lret
push
jecxz
insb
test
xor
pop
lcall
mov
or
adc
mov
push
pop
sub
imul
rolb
mov
push
sbb
and
pushf
push
aaa
sbb
jmp
adc
add
add
cltd
xor
pop
and
fadds
in
and
xor
mov
pop
lcall
ror
jle
jecxz
push
dec
test
or
dec
lock
dec
and
push
inc
lahf
and
sub
mov
lret
jb
cld
jecxz
popf
neg
movsl
pop
inc
jnp
adcb
adc
mov
lods
into
pushf
mov
cmp
cmp
icebp
lock
push
jo
jno
cmp
mov
adc
inc
nop
in
sub
in
fsts
pop
fsts
aam
imul
mov
fs
aas
and
ljmp
push
xor
stos
or
mov
sbb
mov
add
cs
lds
jno
sbb
sub
pop
aas
sbb
test
push
fiadds
add
lods
stos
fmul
ljmp
movsb
mov
in
clc
xor
insb
fbld
imul
xchg
xchg
ret
dec
icebp
fisubs
sub
mov
or
sbb
xchg
dec
rcrl
rolb
mov
mov
lret
roll
push
aam
push
adc
cmpsb
mov
data16
stos
sbb
jl
lock
inc
enter
lods
xchg
xchg
xorl
cltd
aaa
popa
jae,pn
loopne
test
and
outsl
lods
pop
shlb
popf
out
pop
jne
add
dec
add
mov
mov
adc
popa
sub
add
jnp
enter
xor
stos
andb
cmp
divl
es
sub
inc
xor
in
in
orb
arpl
mov
stos
je
scas
push
inc
and
add
test
and
shll
fisubrl
in
movsl
mov
or
test
sbb
cli
mov
jp
mov
sarl
pop
mov
dec
mov
ljmp
cmpsb
add
das
xor
mov
sbb
mov
jns
xlat
mov
dec
repz
and
inc
fisubs
jp
lret
scas
xchg
lret
iret
mov
add
mov
dec
fwait
insl
leave
jnp
sti
aaa
test
mov
outsb
adc
jo
push
je
test
inc
call
xor
test
push
push
sbb
dec
addr16
repnz
fwait
sbb
rep
jne
mov
xchg
cmp
and
sbb
cs
xchg
dec
and
pop
fnstenv
js
pop
clc
mov
cmpsl
push
shll
gs
orl
test
gs
dec
and
inc
add
cmp
repz
cwtl
and
lret
aas
fisttpll
xor
xchg
cltd
push
jp
add
fisubrl
and
subb
pushf
jg
dec
pushl
mov
mov
mov
insl
int3
dec
sbb
xor
adc
xchg
pop
jmp
lahf
stc
mov
ljmp
dec
and
push
lods
stos
repnz
mov
mov
icebp
ss
pop
in
and
testl
imul
cmp
cmc
lock
lock
pop
or
je
add
xchg
jecxz
movsb
out
es
ror
rcr
sub
dec
sbb
aas
xchg
dec
and
push
sub
hlt
pop
mov
add
inc
jl
jge
jle
out
mov
jno
lahf
xor
test
ss
sub
enter
insl
push
lcall
fcomi
add
fsubr
push
out
inc
pop
shlb
fwait
add
or
xor
ds
pop
scas
lret
leave
ficompl
ljmp
push
add
push
mov
mov
dec
push
add
cld
inc
xchg
jne
pop
and
cmp
stos
inc
aad
pop
mov
xor
insb
cltd
xlat
mov
mov
jo
int
xor
cltd
pop
adc
push
sub
or
add
cmp
inc
sahf
loopne
or
rolb
mov
outsl
icebp
mov
inc
push
mov
xor
enter
daa
adc
ret
cmc
jno
cmp
pop
xlat
or
or
pop
xchg
mov
stos
lods
sbb
sub
dec
adc
fucomp
push
in
mov
stos
gs
cmovg
sbb
push
stos
shrb
popf
dec
out
std
adc
cmp
dec
push
add
movsl
xor
jne
xor
enter
dec
lahf
mov
pushf
bound
mov
sub
out
mov
mov
es
call
dec
mov
bnd
mov
aad
jo
dec
aas
enter
pop
leave
fwait
es
push
xor
fisttpl
popf
mov
dec
add
cmp
xor
lret
lock
xchg
mov
test
pop
int3
dec
shll
test
or
fisubl
dec
out
inc
int3
dec
ds
outsl
push
loop
ljmp
gs
lret
mov
in
fucomip
dec
iret
lock
in
mov
pop
rol
add
dec
rorb
dec
je
xor
out
sahf
mov
mov
cwtl
mov
stos
or
addr16
mov
stos
int
xchg
lea
sbb
push
rcrb
in
or
repz
dec
lds
ds
int3
xchg
leave
sbb
dec
lods
cmp
imul
push
sbb
inc
xchg
or
pop
daa
xchg
icebp
insl
push
adc
xchg
dec
xor
testl
cmp
lds
and
sub
inc
jne
mov
stc
loop
mov
jge
jle
stos
sbb
lret
insl
adc
adc
lahf
imul
mov
fs
push
pop
mov
outsl
dec
dec
sbbl
lds
mov
mov
inc
fstps
and
es
mov
test
pushf
imulw
loopne
lret
cwtl
hlt
das
jmp
or
adc
out
or
mov
cmpsl
sidtl
pushf
push
jo
xor
jns
inc
push
test
lea
pop
aas
push
addr16
imul
or
cs
inc
or
lcall
and
pop
sub
insl
cmp
movsb
mov
and
sbb
xlat
xchg
pushl
push
cld
or
add
out
xchg
dec
push
in
dec
out
out
adc
jae
bound
sbb
jecxz
rorl
pop
xchg
mov
lock
sahf
dec
sti
push
adcb
inc
inc
xchg
int
push
leave
lods
icebp
cltd
cmp
or
add
roll
lcall
mov
xor
jns
pop
lret
enter
mov
movsb
jge
sub
dec
adc
cmpsb
and
push
jg
lcall
test
rorl
push
dec
iret
aas
sbb
aam
mov
mov
sbb
fld1
test
sbb
mull
rcrb
mov
addb
xlat
fld
xor
stos
das
sub
ds
imul
jae
aaa
sub
fmulp
leave
fwait
insl
push
adc
je
dec
sahf
xchg
sub
loop
sub
push
and
inc
mov
push
aad
adc
add
jge
stos
push
in
clc
outsb
addr16
daa
test
test
jae
inc
cltd
lods
test
mov
pop
jge
mov
sets
and
clc
or
inc
xchg
add
mov
mov
xchg
cmp
shll
test
mov
aad
inc
sub
cwtl
jae
inc
xor
cld
fistps
mov
out
jae
push
xchg
inc
add
into
ljmp
sbb
adc
cmp
cmpl
insb
sbb
sub
dec
aaa
mov
outsl
int
sbbb
jns
rcrb
jbe
cmp
sar
add
mov
dec
jmp
jb
or
sbb
rcr
sbb
sbb
xchg
neg
in
xchg
xchg
mov
inc
mov
icebp
push
push
push
add
loopne
loop
in
xchg
mov
sbb
xor
xchg
jnp
sbb
xchg
std
cwtl
sbb
fdivrs
enter
push
jmp
dec
mov
rclb
nop
xor
pop
sbb
cli
lock
jmp
rcll
jne
mov
lea
cli
sbb
mov
pop
inc
dec
fcomip
cmp
push
mov
mov
push
and
lods
jmp
in
in
cltd
xchg
xchg
pop
mov
lods
loopne
push
jae
outsb
pop
jg
cs
pop
add
roll
xchg
mov
cmc
xor
sub
stc
adc
test
xchg
cmc
in
push
sbb
ja
int3
fwait
push
cmp
fwait
sbb
xchg
lcall
inc
mov
rcrb
push
cwtl
cmp
stc
insb
cmp
bound
fs
xchg
adc
sbb
loope
jmp
jb
or
call
sbb
add
or
lea
adc
fwait
sub
and
add
push
ret
in
popa
cmp
lcall
cmp
adc
mov
cmc
inc
sbbb
scas
repnz
fcmovne
cwtl
jmp
aam
and
xor
pop
icebp
dec
lret
sbb
inc
clc
fisubrl
test
sbb
insb
mov
lret
or
lret
insb
rol
xchg
push
sub
sbb
xchg
push
shl
inc
adc
cli
fnstenv
imul
adc
flds
jmp
mov
dec
lahf
repz
push
in
pop
mov
sub
inc
sub
push
cmpsb
lcall
lods
rcr
popa
das
test
push
inc
rolb
nop
stc
stos
dec
and
dec
decb
add
dec
mov
int3
mov
test
sub
pop
in
lret
sbb
xor
enter
xchg
shrl
push
or
add
push
push
jne
lcall
iret
fs
dec
jno
xchg
push
pop
fdivs
pop
mov
xchg
clc
ljmp
dec
pop
ss
push
dec
daa
mov
pop
insl
inc
inc
or
jb
lcall
les
notb
adc
fimull
adc
jp
test
mov
lods
ljmp
xchg
mov
push
jge
jle
or
push
sub
xor
sbb
jns
cmp
xor
xor
dec
adc
mov
sbb
lock
mov
or
mov
enter
paddusw
push
fs
inc
xadd
lods
fwait
iret
mov
sarl
gs
xchg
adc
xorl
mov
iret
stos
repnz
lock
mov
dec
pop
xor
sub
mov
pop
in
sbb
ja
jg
push
aam
scas
lret
cltd
iret
push
mov
sbb
iret
mov
fbld
ret
std
ja
dec
rcll
movsb
cmp
cwtl
sub
lods
push
cmp
fcompl
cmp
mov
std
pusha
in
movsb
cmp
repnz
bound
movsb
sbb
inc
sbb
sub
push
lahf
and
setl
in
push
fists
leave
aas
mov
repnz
test
sub
jae
sti
arpl
in
inc
lret
into
loopne
push
or
push
mov
sbbb
push
int3
add
ret
sbb
xchg
jb
icebp
or
sbb
hlt
out
pusha
sbb
stc
ret
mov
xor
in
inc
pop
sti
sti
or
mov
sub
jmp
inc
fwait
jge
jge
inc
mull
fmull
addr16
sub
jne
sbb
daa
jg
aaa
adc
arpl
aam
iret
dec
scas
and
mov
scas
and
pop
push
popf
or
cmp
inc
int
lock
inc
lods
mov
movsb
cs
insb
inc
js
icebp
jp
std
clc
test
push
sti
pop
mov
fwait
out
cs
test
jle
add
leave
dec
dec
and
cmp
scas
les
roll
xor
imul
cmpsb
sub
int3
mov
ficoms
jecxz
movsb
repz
fildll
shll
and
push
mov
stos
push
inc
or
addb
js
fistpl
push
jge
fcmovnu
incb
push
mov
xor
dec
pop
xor
mov
movsl
jo
stc
or
scas
add
movsl
loopne
sti
ret
mov
mov
and
add
cwtl
les
cltd
mov
jae
xor
sbb
mov
add
xchg
outsb
pop
inc
jbe
jmp
and
hlt
jnp
test
fnstsw
stos
call
idivl
cmp
mov
adc
inc
jmp
add
dec
repz
iret
sub
sub
fildl
icebp
jns
popf
push
mov
or
inc
insb
xchg
into
stos
lahf
cmp
jl
rol
add
mov
in
jecxz
inc
mov
sbb
push
xor
add
adc
mov
mov
add
fwait
xchg
jbe
sbb
adc
das
mov
adc
jo
sub
cld
es
cmpsl
jle
sti
sbb
pop
xchg
add
out
mov
jns
or
adc
or
adc
mov
addr16
imul
adcl
pop
outsb
or
inc
pop
shr
push
sbb
pop
or
test
adc
lcall
cmp
dec
into
sbb
stc
mov
adc
xor
cmp
or
sbb
iret
pushf
std
inc
daa
pop
outsb
jl
cmp
scas
clc
xor
sub
xchg
adc
insb
fisubs
adcl
sbb
dec
jnp
cwtl
leave
push
ret
inc
popf
dec
pop
addb
sub
mov
mov
or
mov
or
and
loopne
js
sbb
lods
adc
xor
inc
shll
mov
arpl
xchg
jns
fisttps
sbb
push
or
mov
int
pusha
push
sbb
scas
mov
sbb
add
in
cmpsb
fistpll
cli
fcomps
push
xor
sbb
outsl
mov
pop
cmp
xchg
adc
push
inc
inc
xchg
cmp
adc
shrl
int
adc
std
mov
xchg
adc
xor
push
pop
iret
ret
movsl
popf
loop
in
fsubrs
test
mov
stos
cld
movsl
sub
repz
cli
jb
jb
push
jge
cwtl
xchg
jmp
adc
fwait
gs
sbb
outsb
and
fs
or
sahf
in
popf
mov
cs
addb
roll
data16
jbe
push
jnp
addr16
xor
rorb
fdivrs
pop
xchg
cmp
mov
mov
rorb
sub
rcrl
pop
in
add
dec
loop
cmpl
and
ss
pop
jne
sbb
cmpsb
imul
loopne
or
xchg
add
jmp
mov
add
and
fidivrl
pusha
push
jle
and
loop
pop
ss
xchg
adc
dec
adc
push
dec
ds
test
ret
mov
pop
and
xchg
inc
mov
hlt
sub
shrb
stos
cmpsb
pop
push
sub
push
movsb
daa
add
jbe
mov
mov
mov
sub
adc
popa
jle
sub
cmpsl
loop
stos
add
in
in
lret
sti
add
mov
inc
nop
lods
cli
push
and
cld
aad
leave
xlat
sbb
add
gs
shlb
enter
sarl
push
push
int
mov
dec
pop
jo
cmp
jns
fs
mov
pop
xchg
call
rcrb
push
lods
mov
pop
iret
pop
xor
mov
jae
out
xchg
xchg
in
mov
sbb
push
dec
and
sub
jmp
jp
mov
jne
int
lret
push
add
and
jg
lcall
add
push
jl
xchg
movsb
mov
jbe
inc
les
ret
inc
rcl
xrelease
not
cmp
xor
cmp
jge
aaa
rcr
sbb
sbbl
xchg
push
imul
push
dec
jb
sarl
shrl
pop
cld
mov
insb
dec
and
aas
mov
pop
pop
xor
fcmovu
fbld
inc
cmp
or
inc
push
gs
inc
jnp
cmp
daa
mov
adc
loope
jmp
adc
cmp
ss
jl
xor
or
dec
cwtl
es
lret
lods
push
mov
movq
jmp
xor
loop
pop
scas
js
sbb
or
fsubrl
jmp
xchg
shlb
enter
inc
mov
fiaddl
cmp
outsl
mov
in
shll
repnz
cmp
lcall
adc
xor
xor
mov
popf
lea
push
sbb
jl
cltd
andb
or
jecxz
test
add
push
adc
inc
out
mov
dec
xchg
ficoms
sbb
mov
cmpl
push
and
push
rcr
out
xor
in
lea
je
ret
pop
sub
inc
out
push
imul
push
popa
cltd
movsb
dec
dec
push
jecxz
and
add
xchg
inc
lea
mov
cs
das
aaa
cmp
int3
jecxz
in
or
push
sub
je
subb
ficompl
push
stc
xlat
jae
lret
leave
js
loope
rorb
mov
ljmp
dec
cmpsb
dec
push
mov
pusha
mov
in
jmp
loopne
leave
push
dec
dec
lret
xor
repz
out
mov
sarl
adc
xchg
sbb
adc
inc
imul
daa
in
lahf
mov
movb
add
dec
and
icebp
dec
hlt
sahf
xor
adc
leave
mov
in
jge
fists
std
out
fcomps
push
fdiv
jle
or
pop
or
and
aas
add
mov
jnp
push
lods
into
faddl
sti
mov
add
adc
cmc
fimuls
dec
or
mov
jle
arpl
sub
dec
mov
test
xorps
jg
mov
sbb
cmpsb
insb
jl
outsl
insl
and
popa
lea
lea
adc
inc
jno
out
cmp
jns
jb
pop
rcll
add
lahf
fmull
fwait
in
std
inc
xor
outsb
pop
push
pop
mov
jo
push
loopne
idiv
add
ja
cmp
arpl
mov
fimuls
inc
mov
mov
in
mov
and
das
push
loope
insl
adc
inc
mov
movsl
int3
sahf
mov
and
adc
pop
daa
xor
mov
pop
addr16
pop
hlt
clc
ja
dec
adc
dec
push
cmp
sahf
pop
xor
hlt
dec
sti
dec
inc
xchg
dec
mov
cmp
pop
imul
inc
enter
xchg
call
seta
jns
cmp
inc
jne
bound
mov
jmp
popa
mov
es
scas
in
sti
ds
cmp
xor
inc
fwait
dec
aam
jecxz
xchg
and
sub
test
mov
cmpsl
cmp
mov
dec
jno
imul
inc
ss
outsb
enter
add
jo
cmp
into
add
fisubrs
sbb
addr16
xchg
mov
add
mov
rol
mov
mov
scas
std
fimull
syscall
push
rolb
push
mov
or
jnp
testb
dec
add
and
xor
adc
push
sbb
push
add
pcmpgtw
shl
xchg
out
mov
pop
daa
stos
imul
shrl
mov
mov
jnp
push
shrb
in
in
inc
dec
mov
add
xchg
dec
sahf
fmul
aaa
clc
mov
insl
loope
int3
xor
jb
adc
js
or
repz
aaa
or
push
es
dec
sbb
shll
popa
adc
inc
je
dec
ss
pusha
inc
xchg
push
std
sbb
xchg
movsl
cmp
dec
loope
and
leave
push
mov
pop
fs
pop
aaa
or
inc
and
xor
mov
cld
mov
outsl
cmp
repz
loope
data16
lock
aam
or
lret
inc
mov
xlat
incb
ret
imulb
fmul
imul
lcall
xchg
sbb
mov
adc
dec
push
or
pop
cld
repz
inc
incl
cld
stos
notl
loopne
int3
dec
std
inc
xor
inc
or
inc
push
cmp
inc
adc
repnz
push
mov
cs
pop
lods
testl
mov
or
dec
sahf
pop
jno
mov
push
aas
shll
dec
push
push
psllw
stc
clc
out
into
jge
gs
inc
hlt
adc
mov
xchg
int
sbb
sbb
in
dec
mov
rolb
in
dec
fidivl
xchg
fiaddl
push
testl
push
sub
stc
int3
loopne
add
int3
add
add
lock
jb
cmpsl
scas
mov
divb
push
sub
std
mov
pusha
add
cmpsl
aam
test
fnsave
lret
cwtl
pushf
sbb
out
mov
jmp
push
cmpsl
icebp
popf
lret
lds
mov
lahf
jmp
jp
test
sti
repz
frstor
jg
ds
scas
roll
jg
sbb
xor
lcall
and
and
icebp
call
jl
sti
mov
inc
pop
xchg
sub
and
call
push
sbb
clc
sbb
daa
es
push
test
xor
pop
jne
xorl
mov
repz
pop
lret
pop
test
imul
mov
xorb
movsl
cmpsl
popa
inc
loop
pop
rcr
loop
lock
cmp
mov
pop
stc
mov
dec
cltd
outsb
jb
fisttps
xor
jb
dec
cmp
sub
mov
scas
jge
inc
mov
nop
jmp
push
mov
xchg
jecxz
cmpsl
popf
lods
popf
loop
sbb
jecxz
insl
pop
dec
push
int3
aad
bnd
cli
mov
loop
daa
jb
repz
fldt
or
pusha
movsl
cs
or
xor
ljmp
xor
mov
imul
pop
inc
addr16
jmp
scas
dec
and
adc
movsl
pop
test
dec
mov
dec
dec
mov
sbb
or
sub
ja
jl
pop
mov
inc
outsl
cld
iret
or
sub
gs
movsl
xchg
xchg
push
dec
gs
inc
mov
sub
jle
jne
rorl
sbb
sbb
cmp
lea
les
adc
test
js
cld
jl
dec
sbb
std
xchg
xchg
mov
mov
insb
add
repz
lcall
popa
mov
xlat
push
sbb
push
mov
xchg
rcrb
mov
adc
jno
nop
out
cwtl
in
dec
pushf
xor
adc
adc
or
dec
mov
jnp
push
jle
insl
in
add
push
sbb
loope
sbb
and
clc
xchg
and
repz
lret
and
or
add
ret
cmp
out
or
adc
pop
jg
int
pop
mov
pusha
mov
lahf
sar
nop
sub
mov
mov
push
and
xchg
movsl
lahf
xchg
cmpsb
pop
dec
stos
jp
dec
jo
push
xchg
dec
xchg
mov
push
or
xchg
dec
ds
xor
into
dec
xchg
mov
mov
divl
sub
cmp
stos
sti
inc
jae
inc
sti
in
jae
mov
movsb
mov
in
mov
adc
nop
pop
xchg
repz
pop
pop
cmp
add
mov
dec
aad
cmc
jmp
cmp
sub
inc
bound
enter
mov
mov
mull
dec
fwait
sbb
ret
jo
push
cmp
xor
in
mov
add
fsts
cmpsb
subl
test
sbb
not
add
or
add
sbb
ja
pop
cmpsb
clc
mov
jb
push
pop
in
dec
aas
pop
bound
dec
sbb
cmp
adc
or
aaa
pop
icebp
inc
xlat
inc
ja
adc
mov
shll
repz
xchg
pop
imul
xor
adc
push
mov
shll
xlat
test
scas
jnp
inc
fcmovnb
rcrl
pop
or
and
loopne
sbb
ficompl
lods
push
mov
jno
xchg
insl
out
sbb
int
das
cmp
sti
jecxz
xor
xchg
mov
xor
mov
mov
cmpsb
rcl
xlat
cmp
cmc
gs
mov
xchg
out
fldt
sarl
pop
js
jnp
ja
call
add
or
mov
add
inc
lds
stos
rolb
jns
jo
les
iret
les
mov
jo
and
adc
fmuls
adc
std
rcrb
xor
mov
adc
ss
sbb
sbb
or
outsl
sub
cmp
xchg
imul
cmp
pop
negl
cld
xor
push
mov
js
xchg
test
push
sbb
sbb
cmp
mov
add
xchg
dec
lcall
out
dec
pop
stos
mov
out
addr16
into
inc
jmp
pushf
fisttpl
std
or
pop
repz
jb
mov
pop
cmp
in
dec
pop
jmp
or
test
mov
shlb
movsl
inc
mov
mov
cmp
xchg
inc
sub
xor
fwait
imul
dec
add
int
es
int
dec
pusha
sahf
pop
pop
popa
int3
loop
lock
ficompl
cmp
popa
pop
cld
fstpl
gs
xchg
mov
mov
jecxz
dec
cs
mov
mov
mov
and
mov
out
adc
shl
fnstsw
js
xchg
or
fstpt
sub
aam
xor
xchg
into
and
movsb
cmp
jge
dec
mov
cmp
push
pushf
dec
arpl
enter
shr
and
push
xchg
test
add
mov
rcll
idivb
sbbl
inc
int
pusha
xchg
pop
sub
inc
pop
lock
aaa
sub
adc
hlt
cmp
dec
push
push
mov
mov
cmpsb
out
shlb
sbbb
outsl
ret
flds
ret
push
outsl
sub
call
repz
rcrb
cmp
add
sub
or
dec
and
and
ret
test
cmpsb
push
popf
bound
inc
mov
sbb
mov
pop
pop
xor
sub
xchg
cltd
or
sbb
jno
lret
push
xlat
lods
or
inc
inc
fs
insb
icebp
jo
cmp
arpl
mov
and
pop
test
addr16
in
cmpsb
jnp
test
and
mov
sbb
scas
jle
push
mov
scas
xchg
adc
nop
daa
mov
pop
int
test
lret
aaa
inc
jg
iret
adc
fcmovne
in
in
pop
dec
push
outsl
arpl
out
inc
stos
faddp
ja
outsb
mov
mov
push
cmp
out
loopne
lcall
xchg
or
lcall
fwait
lock
add
pop
sub
repz
outsb
outsl
cmp
jge
popa
inc
pop
repnz
or
insb
movsl
pop
jmp
add
sbb
xor
movsl
push
rorl
fistl
aad
sahf
push
fwait
mov
test
sbb
dec
cmp
repnz
scas
rorl
ja
enter
add
lret
mov
bound
aad
sub
sub
rcl
subl
aad
sbb
cmp
xchg
dec
jecxz
cmp
pop
push
dec
mov
pusha
fmulp
xor
jo
das
mov
insl
mov
arpl
out
inc
add
js
test
mov
sar
in
jne
pushf
add
out
push
mov
xchg
adc
xchg
stos
fcomip
nop
sbb
sti
jns
mov
pop
pop
in
inc
lret
inc
sahf
sub
dec
mov
inc
movsb
dec
out
scas
fsubs
mov
sub
sub
inc
and
adc
pop
or
mov
pop
fists
dec
jmp
std
loopne
mov
xor
loopne
mov
push
push
nop
adc
int
pop
repnz
push
jbe
xor
dec
adc
test
jb
or
leave
mov
fabs
add
add
mov
jle
loope
dec
iret
xor
xchg
mov
adc
mov
dec
xor
cmpsl
test
xchg
dec
sahf
icebp
insb
insl
and
idiv
pusha
pop
hlt
jae
push
or
mov
insb
jmp
movsb
fsub
repnz
dec
adc
sbb
inc
jge
in
pop
lret
insb
add
xchg
xor
sahf
int3
mov
dec
sti
cmp
faddl
shll
iret
or
xchg
in
jo
fcom
int3
jo
inc
adc
pop
mov
jno
xchg
imul
mov
imul
daa
mov
insb
out
dec
popa
fildll
xchg
push
es
ds
mov
scas
pushf
mov
out
dec
imul
sbb
lods
push
testb
aas
xchg
mov
std
ljmp
mov
dec
lods
mov
stc
sbb
mov
shrl
sbb
jnp
mov
sbb
loope
cwtl
mov
stos
gs
mov
jl
shlb
mov
sub
cwtl
sbb
push
test
dec
les
mov
dec
ficoms
mov
mov
xchg
cli
mov
cld
ficompl
jecxz
lahf
cmp
call
mov
cli
mov
mov
arpl
rclb
fbld
xor
push
pop
xchg
mov
std
xor
or
in
cld
pop
imulb
adc
adc
stc
mov
xor
inc
add
fmul
mov
sbb
adc
xchg
sub
jno
inc
or
fcoms
in
ret
repnz
sub
js
sbb
imulb
lods
loope
push
mov
cmp
add
imul
out
jb
pop
xchg
mov
test
rolb
popa
rol
xor
stc
lods
stc
adc
popf
rcll
leave
mov
fidivs
icebp
adc
pop
mov
enter
je
and
and
mov
push
ret
and
jmp
jno
cmp
push
dec
jmp
mov
push
pop
das
mov
sub
cmp
xor
sub
mov
xchg
inc
flds
iret
dec
inc
clc
inc
dec
or
jg
inc
ljmp
pop
sub
mov
aad
inc
lea
lret
loope
dec
cmp
pop
orb
mov
mov
ljmp
notb
adc
cltd
stos
xchg
inc
sbb
fld
jg
adc
fimuls
inc
fwait
lds
pop
pusha
cltd
push
addr16
and
sbb
dec
and
call
repnz
mov
mov
push
sbb
cs
shr
jle
dec
add
je
mov
and
dec
jne
push
movsb
sbb
jb
jb
das
pop
mov
cmp
and
ljmp
adc
pop
divb
in
hlt
xor
dec
orb
pop
loopne
bound
push
dec
push
and
adcl
and
sbb
xchg
fidivrl
cmp
sub
add
pop
fs
mov
into
scas
add
jnp
pop
out
xchg
or
push
or
mov
lods
fwait
jg
jmp
dec
rolb
pop
mov
pop
les
je
movsl
les
subl
fs
insl
inc
outsb
pop
jge
out
and
cld
and
xchg
test
shl
xchg
int3
fs
sub
jp
mov
lds
pop
outsl
add
adc
fprem
aad
mov
inc
repnz
data16
pop
repnz
jae
inc
jg
inc
mov
gs
cli
mov
cmp
aas
int
mov
jmp
lds
aam
test
orl
pop
clc
mov
or
pop
dec
fsubrs
popa
sbb
pop
push
cs
cmp
xor
or
test
jp
jb
lds
adc
mov
gs
out
ficompl
xchg
jmp
or
decb
mov
lods
mov
loopne
cmpsl
adc
loopne
push
xor
adc
stos
inc
test
into
adc
subb
cwtl
pop
and
sti
das
dec
loop
cmpsl
jg
std
adc
ret
jp
imul
or
cmp
lahf
jg
jle
sahf
sub
decl
push
add
lds
cmpb
fwait
adc
stc
mov
jnp
in
mov
cmp
xchg
cmp
mov
inc
adc
stos
fldenv
aam
xor
repnz
addr16
jmp
pushf
and
das
dec
movsb
mov
movsb
or
rcrb
xor
cs
xchg
push
push
mov
ja
shll
xorl
out
mov
rep
pop
outsl
push
rcll
cmp
mov
mov
push
sbb
push
ljmp
pusha
sbb
insl
xchg
cli
out
adc
xchg
out
adc
popf
lods
adc
mov
popf
or
fwait
push
fwait
ret
lds
mov
test
push
ss
dec
iret
leave
dec
adc
je
adc
adcl
fwait
mov
mov
cmp
jno
idivb
movsb
out
pop
mov
inc
ja
push
cmc
inc
xor
sbb
out
xor
mov
sti
dec
push
or
pusha
fwait
sbb
cmp
jno
mov
mov
cmp
push
pop
pop
fistl
sub
gs
mov
add
scas
rolw
sbb
xchg
das
sub
nop
cmp
fists
add
mov
ljmp
add
inc
lret
mov
add
negb
pop
shlb
in
and
mov
pop
push
mov
or
cld
dec
std
das
or
cmp
mov
cmpsl
loop
in
mulb
push
mov
mov
pop
lods
xor
xchg
and
sub
sbb
jb
cmc
jo
dec
daa
in
jno
in
ja
jle
pop
andb
fdivrl
jle
pop
xlat
inc
repz
fstpl
ret
mov
call
daa
mov
or
pop
clc
mov
mov
mov
cmp
adc
test
push
mov
mov
mov
movsb
or
mov
mov
mov
sbb
dec
popa
or
sub
lret
int
mov
xchg
mov
cltd
jg
mov
pop
into
mov
mov
jecxz
scas
mov
inc
stc
popa
leave
push
sub
cwtl
pop
adc
push
push
push
pop
inc
or
mov
sbb
mov
dec
gs
jo
repz
fs
jle
xchg
sarb
dec
adc
gs
sbbl
jmp
mov
xchg
adc
push
mov
xor
loope
and
cs
popa
mov
ficomps
jmp
pop
lea
fdivp
mov
push
xor
lret
push
lret
add
pusha
cs
jo
inc
pop
stc
inc
outsl
les
fmull
clc
jns
bound
pop
pop
movl
repnz
sub
std
int3
cltd
push
add
es
lret
inc
jbe
je
mov
ds
adc
push
in
and
jo
sub
push
sti
add
dec
in
cld
test
out
dec
insl
xor
inc
add
xchg
xchg
pop
scas
leave
jns
adc
stos
xchg
add
das
xchg
inc
mov
push
imulb
adc
dec
adc
mov
xchg
ds
lds
loope
fistpll
scas
gs
pop
push
cmp
mov
and
notl
xlat
xchg
sub
jl
jl
push
aaa
pusha
cltd
cmpsb
mov
push
mov
add
cmp
jl
and
jne
cmp
pushl
mov
pusha
andl
and
shrb
mov
and
pop
mov
lcall
out
rep
les
jbe
jbe
sbb
sahf
imul
cmp
cmp
push
pop
or
pop
pop
xchg
push
dec
mov
push
inc
out
test
test
sub
adc
imul
inc
test
test
mov
xchg
dec
outsb
and
idiv
mov
mov
and
mov
dec
jmp
lret
dec
sub
loopne
into
iret
push
cmc
jae
hlt
lods
mov
loope
adc
sti
stos
mov
inc
jge
mov
fldenv
mov
add
jo
pop
loopne
add
nop
xchg
pop
lret
fbld
dec
push
dec
lcall
sub
leave
cmp
mov
jge
sub
mov
pop
push
sub
cmp
hlt
jae
sub
push
jae
mov
jb
clc
cli
es
jl
add
adc
repnz
imul
adc
or
jg
add
add
xor
das
clc
sbb
iret
into
push
data16
leave
aaa
xor
pusha
mov
cs
dec
add
cmp
popa
cmp
iret
push
cmp
mov
jmp
push
ret
jl
mov
adc
dec
sarl
ror
jb
lds
mov
pop
popf
inc
cmp
cmp
push
or
arpl
sbb
insl
test
xor
push
cmpsl
cmp
xlat
aas
mov
dec
mov
popf
sub
lea
pop
pusha
inc
xor
outsb
xor
inc
jp
jg
int3
loope
cld
fdivs
mov
les
imul
hlt
popf
cli
mov
mov
ja
mov
jno
inc
ret
imulb
fisttpll
rolb
push
repz
insb
adc
fsub
fwait
subl
mov
pop
cli
and
xor
outsl
pop
push
dec
addb
inc
adc
dec
fsubp
mov
cmpsl
fnsave
je
jns
sub
mov
fcomi
mov
pusha
and
inc
sbb
lahf
sbb
nop
lods
movsl
out
sar
aam
adc
jmp
out
jge
mov
jae
into
fwait
dec
repnz
mov
cmpsb
stos
subl
xor
clc
mov
and
and
in
mov
mov
imul
aas
sub
cld
out
xchg
lods
repnz
not
cld
scas
sbb
rclb
pop
inc
mov
cmp
add
loope
cmp
sub
pop
jno
aas
push
pop
pushf
or
and
dec
fdivrs
ret
push
ret
adc
mov
push
mov
xor
xchg
call
aas
sbb
jmp
xchg
sbb
pop
and
mov
cltd
sub
sahf
dec
clc
movsl
jmp
imul
stos
jge
out
repz
enter
cwtl
cmp
repz
dec
push
jl
mov
dec
cmp
xchg
fmuls
pop
or
sbb
cmp
rcl
repz
sbb
mov
push
bound
hlt
push
add
iret
sbb
dec
lds
dec
call
cmp
xchg
or
sub
xlat
iret
aas
push
push
xor
xchg
xlat
push
lret
aas
sbb
fmull
mov
mov
and
mov
hlt
test
inc
outsl
cmp
repnz
push
sahf
sub
fs
enter
outsb
and
lock
in
xchg
lock
jg
enter
scas
stos
pop
dec
inc
lods
pop
fsubs
aam
xor
out
lcall
jl
cmp
sbb
pop
gs
dec
add
leave
add
lahf
stc
and
xchg
lahf
mov
clc
gs
in
or
pop
or
pop
sti
fidivl
movsl
cvtps2pd
cli
xchg
cmp
lods
or
dec
adc
and
jmp
jg
xor
cwtl
jg
je
jb
notb
in
jp
rcl
fs
repz
sbb
or
fistpl
lods
cmp
sbb
dec
adc
inc
jns
jg
jmp
int
and
dec
sahf
cmp
fwait
cmp
cmp
jmp
mov
dec
xchg
sahf
push
and
adc
adc
cmp
rcrl
in
jno
jge
inc
aas
lock
out
repnz
data16
cmc
pop
push
jmp
xchg
call
jne
cmovle
lods
fld
jl
sbb
rcll
mov
insl
mov
in
call
inc
dec
out
xor
cmp
adc
dec
addl
push
out
movsb
int
sarl
lahf
and
xor
inc
cs
add
insl
xchg
ds
test
lcall
movsb
pop
arpl
insl
mov
loope
mov
xor
leave
jp
mov
add
lret
and
mov
stos
push
add
popf
das
add
dec
xchg
push
lret
hlt
sarb
aaa
jl
scas
or
aad
sarl
pop
sbb
adc
xorb
push
ss
pusha
and
mov
mov
pusha
add
cld
sub
jge
or
insb
aad
push
sbb
mov
lds
popf
jnp
mov
xchg
es
pop
inc
aad
out
imul
cld
cmp
loope
sub
addb
lock
popf
dec
xor
dec
cmp
mov
cwtl
xor
push
mov
lret
add
mov
rorb
inc
setae
push
inc
xchg
jg
push
fidivrl
jb
mov
xor
dec
cmpsb
adc
and
call
lcall
add
and
push
jnp
cwtl
mov
test
pop
imul
ret
ds
sub
stc
mov
je
jecxz
xor
xchg
push
push
pop
dec
out
sbb
int
ret
jns
mov
cli
mov
mov
or
add
stos
mulb
roll
xchg
xchg
dec
jne
adcl
roll
mov
addr16
cld
jne
sbb
or
in
mov
adc
insb
jg
push
push
xchg
add
lcall
mov
add
adc
pop
in
sbb
clc
add
or
addb
enter
push
data16
pop
dec
inc
sub
ret
jo
ret
cs
and
emms
cmpsb
cmp
jne
cmp
lds
shl
cmp
rcl
xor
pushf
adc
add
out
ret
push
dec
lcall
jge
mov
mov
test
addl
out
popf
add
outsl
insl
dec
add
jae
arpl
fstl
pop
pop
ss
dec
sbbb
xor
jp
sbb
sbb
inc
stos
in
jmp
push
pop
push
icebp
xchg
inc
add
push
push
jl
xchg
jge
cltd
clc
jg
pop
or
pop
or
sub
push
xor
iret
into
pop
mov
fcmovnu
cmp
jnp
pop
outsb
cmp
pop
mov
shlb
stc
mov
inc
jo
dec
scas
pop
enter
mov
mov
sub
test
je
cmpsl
mov
sbb
es
push
lock
dec
inc
jg
idivb
aaa
jecxz
adc
adc
out
xchg
add
mov
or
orl
xor
out
cmc
ret
jge
lods
mov
push
in
sbb
pop
mov
adc
sbb
cmpsb
mov
cmpsl
scas
dec
sbb
sub
lock
rcrl
xchg
leave
inc
add
inc
jne
xchg
xor
mov
cmp
testl
fs
outsl
call
xor
lahf
add
xchg
into
in
ljmp
repz
xlat
lret
adc
scas
pop
dec
sbb
les
add
or
aad
mov
cmp
sahf
mov
sbb
in
mov
mov
test
les
inc
in
inc
xor
dec
cmpsw
jmp
cmp
mov
mov
cmp
movsb
jecxz
js
out
sub
clc
or
or
xchg
jb
orb
xchg
insl
nop
and
push
push
xchg
lods
fisubs
or
adc
push
mov
xchg
mov
xchg
sub
enter
das
add
movsl
mov
fs
adc
add
in
push
xor
mov
sub
and
div
push
cmp
lods
pop
call
or
data16
stc
cmp
push
add
outsl
call
clc
mov
sahf
inc
leave
cmp
fiadds
pop
xlat
jo
mov
lea
mov
dec
loop
cmpb
stos
dec
dec
and
sub
stc
and
in
inc
ficoml
cmp
push
mov
pop
mov
ljmp
in
jle
aam
sub
xchg
outsl
insb
movl
test
add
sbb
or
cmp
xorl
jnp
hlt
mov
out
push
xor
nop
inc
jmp
push
and
lds
or
lret
repnz
xlat
or
sub
fisubrl
imul
into
hlt
rorl
mov
out
or
aad
mov
dec
sbb
xchg
out
pop
scas
sbbb
bound
test
pop
mov
movsb
cmp
ljmp
pop
pusha
mov
pop
or
pop
add
arpl
xor
pop
call
rcr
subb
xor
xlat
push
cmp
xchg
xor
sub
mov
cmp
or
pop
lea
and
and
jg
push
ret
pop
fstpt
loopne
fidivs
inc
cmp
fcompl
in
inc
push
pop
aad
pop
jno
jno
pop
sbb
fwait
push
or
push
daa
cli
lret
push
adc
or
testl
xor
inc
sbb
jns
cli
bound
pop
xor
mov
adc
stos
cmpsl
enter
push
addr16
cmpsl
and
jae
scas
in
fs
xor
xchg
jae
shl
int3
ja
push
ds
pop
das
sub
outsl
mov
mov
cld
ljmp
cli
xor
push
push
cs
xor
repz
adc
lret
orl
jg
aaa
xchg
jae
mov
sbb
pop
xchg
add
loope
icebp
inc
popa
mov
xlat
pusha
aam
lods
nop
mov
mov
js
pop
loope
or
popa
imul
adc
xorb
mov
roll
dec
xor
mov
push
rorl
mov
add
push
ja
sbbb
mov
movsl
mov
pop
sub
cmp
jmp
xchg
cmp
mov
loop
push
mov
out
adc
and
and
loopne
sbb
repnz
arpl
dec
cmp
stos
into
cmp
andb
mov
add
xchg
mov
mov
pop
mov
mov
in
je
and
add
lds
test
stos
pop
js
add
adc
inc
xor
dec
out
fdivr
add
mov
mov
in
mov
mov
add
xor
sbb
sbb
push
or
popa
shll
push
cltd
xor
add
mov
pop
fsts
inc
jecxz
sbbl
lea
ficompl
adc
iret
add
andnps
or
mov
xchg
push
rclb
xor
jg
or
add
pushf
imul
pusha
rolb
orb
imul
jb
ret
dec
adc
sbb
push
dec
jne
push
or
dec
jns
aas
mov
dec
lahf
hlt
popa
in
aas
xlat
mov
mov
cli
cmp
adc
and
cmpb
sub
mov
int3
das
jnp
movsb
and
movsb
ret
and
sub
push
xor
shrl
aas
stc
sahf
and
jle
or
push
jle
inc
imul
add
xchg
jb
fcmovb
pop
dec
cmp
jp
xchg
ret
mov
jmp
add
lds
scas
cmpsb
ret
outsl
sub
lods
ficompl
pushf
push
add
push
add
pushf
jnp
lret
shll
les
push
jno
xorb
jnp
adc
sub
jmp
sbb
cmpsl
jns
testl
and
add
notb
sbb
jnp
sbb
in
enter
sahf
jmp
andb
mov
push
cmp
fnstcw
jl
cwtl
inc
cld
jg
mov
jg
adc
call
fcmovu
out
cmp
dec
xchg
imul
dec
frstor
inc
int
pop
add
aad
test
mov
dec
jno
sub
ljmp
bound
test
mov
cmpsl
add
fidivl
nop
mov
in
jmp
das
test
aaa
sub
cmp
push
loope
push
jg
sub
mov
dec
mov
das
mov
iret
sbb
loop
dec
push
call
jno
or
add
jne
adc
cmp
mov
testb
divl
pop
les
fwait
test
inc
push
nop
rcl
mov
mov
cmpsb
sbb
pop
repnz
fwait
sar
gs
mov
pop
dec
dec
test
cmpsb
es
lret
enter
iret
shrl
xor
orl
popa
daa
nop
das
add
jg
sbb
xchg
stos
push
and
push
mov
and
popa
dec
repnz
dec
das
test
xchg
jmp
push
mov
or
or
pop
outsl
ds
mov
sbb
mov
lds
jnp
mov
test
mov
sbb
mov
data16
lcall
sti
jo
push
xchg
xchg
pusha
pop
fwait
iret
sub
aaa
pop
add
in
pop
cld
or
adc
mov
add
xchg
fistl
loope
push
push
sub
hlt
inc
ja
adcl
mov
fwait
imul
adcb
mov
jp
movb
push
ja
add
ret
aad
mov
sub
mov
and
js
and
jecxz
cld
fnstsw
jp
iret
fcomip
mov
ror
sbb
cmp
fmuls
in
scas
push
scas
arpl
mov
mov
mov
jne
es
les
mov
stos
xchg
imul
sahf
in
hlt
adc
fists
and
sbb
add
test
rorl
dec
mov
cli
int3
mov
cmp
sahf
aad
and
inc
into
xchg
xor
adc
add
call
pop
js
movsl
and
push
in
inc
mov
xlat
pushf
hlt
bswap
int
shll
and
jecxz
out
mov
pop
add
mov
mov
dec
sahf
pop
mov
pop
mov
iret
sub
aas
or
push
imull
aam
aam
repnz
dec
mov
cmp
sub
movsb
int3
push
jbe
enter
movsb
incl
fldt
test
sbb
ljmp
mov
out
cltd
js
cltd
mov
daa
push
loop
movsl
das
add
data16
push
dec
pop
pop
int
arpl
sub
cmpsb
fildll
xlat
add
jo
std
inc
or
inc
cld
repnz
cwtl
jp
push
sub
fdivr
test
ss
lcall
pop
mov
aaa
or
stc
rcrl
pop
fcompl
dec
dec
mov
xchg
scas
mov
and
mov
or
fisttps
pop
mov
stos
inc
rorb
xor
adc
mov
iret
loope
das
or
push
movd
push
push
cmovl
mov
cmp
sub
xor
stc
mov
sbb
js
jne
mov
lret
cmpsb
mov
lods
int
pop
pop
jo
movsb
arpl
ljmp
cmc
sub
mov
icebp
in
call
test
mov
jo
xor
sub
lods
clc
cmp
cmpsb
mov
or
fldcw
xor
movb
inc
xor
notb
jns
adc
subl
daa
dec
cltd
enter
xlat
jmp
addr16
xchg
xlat
movsl
iret
fiaddl
fwait
stos
mov
push
sub
daa
loopne
or
dec
and
add
stos
add
xlat
mov
negb
xor
notl
jns
dec
mov
fwait
mov
lock
inc
adc
add
and
lcall
push
mov
call
jns
fistps
push
adc
sbb
push
imul
sbb
or
push
movq
filds
push
shll
imul
mov
mov
lret
test
cmp
repnz
outsl
push
out
xchg
xorb
fld
out
xchg
sbb
jb
add
xchg
push
jo
pop
frstor
mov
pop
xchg
pop
mov
mov
jae
jg
jcxz
imul
les
xchg
outsb
mov
dec
cmp
xor
pop
or
or
lock
inc
mov
inc
test
je
inc
adc
into
shlb
jno
xor
push
arpl
out
popl
mov
adcl
mov
xchg
fdivrs
pop
arpl
xor
mov
pop
loopne
or
lahf
jecxz
mov
xor
lahf
icebp
cmp
imull
in
jg
fcoms
in
popf
pusha
data16
lret
pop
jbe
push
enter
add
mov
gs
push
mov
mov
cmp
add
incl
mov
inc
clc
pop
mov
shlb
mov
xchg
xor
call
add
mov
cmp
fdivr
or
mov
mov
or
cmp
clc
repnz
nop
orb
xlat
mov
mov
inc
iret
out
mov
xchg
sahf
cwtl
ljmp
xor
int3
inc
jns
and
jmp
push
mov
adc
xor
outsl
add
xchg
lock
hlt
xchg
adc
inc
imul
rcl
lea
call
shlb
sbb
mov
clc
push
sub
sub
add
inc
repnz
pop
addr16
cmp
testl
jmp
or
dec
pop
enter
or
xor
lcall
push
push
and
dec
xor
roll
aad
cld
mov
cmp
movsb
out
or
adc
mov
adc
bnd
or
adc
mov
rolb
aaa
psubb
or
mov
scas
jl
xor
in
inc
test
sbb
pop
push
sbb
ljmp
or
xchg
add
loopne
add
pop
sbb
fadd
xor
sub
jp
mov
into
inc
jp
sub
aad
std
mov
sbbl
hlt
xchg
sbb
pop
push
xchg
jmp
dec
pop
push
in
out
shlb
rorb
ret
enter
icebp
es
and
imul
fnsave
jp
outsl
push
adc
adc
gs
xor
cmp
xchg
push
jl,pt
cmp
repnz
sbb
inc
icebp
add
add
rol
mov
xorb
in
mov
sbb
cmpsl
inc
outsb
pop
add
xor
cmpsb
xchg
mov
or
shrl
sbb
es
fidivs
int3
jl
fadd
mov
jnp
lock
aad
int3
xchg
sbbb
outsl
dec
xor
out
mov
xor
jl
cmc
add
je
or
xor
fdivs
mov
adc
add
xor
nop
shlb
mov
push
repz
cmp
int3
inc
dec
fimull
adc
mov
mov
mov
push
insl
gs
mov
push
jno
loope
xchg
sbb
sub
pop
sub
rcr
scas
imul
adc
mov
xchg
and
xor
sbb
test
call
mov
dec
ret
in
scas
icebp
xor
in
out
movsb
push
mov
xor
aad
ret
ret
push
repnz
jecxz
jge
mov
test
mov
ss
jnp
xchg
cmc
pop
fidivrs
lret
dec
xor
lahf
sti
xchg
aad
imulb
sbb
jo
push
inc
or
call
xchg
dec
pop
stos
mov
inc
xchg
lcall
xor
addr16
adc
jns
pusha
mov
mov
das
data16
push
daa
sub
aas
scas
mov
xchg
sbb
pop
pop
sbb
test
hlt
adc
or
sbb
inc
adc
test
scas
int
into
lock
inc
push
or
cltd
fdivrs
and
xchg
shll
shlb
cwtl
sbb
inc
cmc
adc
sub
addr16
and
push
xlat
jb
mov
in
mov
jbe
mov
and
jmp
mov
xor
cmp
rcrb
les
mov
pop
xchg
sbb
push
cwtl
hlt
cmpsl
adc
push
xchg
cmp
jg
sahf
popf
inc
scas
inc
mov
leave
sub
ret
fnstenv
je
push
cmp
sub
or
pop
sahf
fcoml
push
gs
sbb
shlb
lods
fstl
in
das
jle
mov
dec
icebp
sbb
je
shll
push
xchg
inc
jo
adc
pop
hlt
lods
mov
adc
cmc
cli
jb
jae
sti
push
xchg
leave
fldl
push
inc
enter
xor
fstp
out
repz
and
sub
adc
pop
ret
sbb
std
pop
jl
adc
movsb
mov
cmp
mov
jle
push
mov
xchg
fsubs
adc
out
jbe
dec
leave
inc
pop
or
cmpsb
data16
loope
hlt
in
in
outsb
mov
mov
lds
xchg
icebp
popa
loop
sbb
push
xlat
in
in
push
push
mov
leave
shrd
xlat
gs
out
push
inc
fs
adc
lcall
jnp
cmp
cs
or
adc
loope
sub
cmpsl
pop
repz
dec
cmp
pop
cld
push
pushf
pop
cld
jp
stos
add
mov
roll
cmp
push
aas
or
lret
fcmovb
push
fildl
fwait
jl
pop
std
out
sahf
pushf
sub
enter
jecxz
fldt
xchg
inc
dec
sub
add
add
std
scas
mulb
test
or
shl
in
iret
fstpt
cld
aam
inc
shll
out
imul
mov
iret
pop
movsl
lods
pop
pop
ljmp
xchg
push
xor
int
push
adc
mov
dec
stc
or
cmp
jmp
pop
cmpsl
push
int3
jno
fsubrl
xor
xchg
test
inc
in
dec
das
xchg
lret
add
movl
fildll
es
popf
adc
push
ret
or
lret
jnp
loop
pop
lods
call
adc
out
adc
hlt
push
fmull
jl
dec
mov
cmp
jno
mov
mov
aaa
xchg
in
push
inc
mov
pop
ret
jbe
sbb
sbb
or
add
jns
fs
int
sub
sub
sub
add
mov
mov
jnp
dec
popf
adc
and
sti
aad
xchg
pop
add
cmp
mov
aad
mov
icebp
xor
dec
cmp
lcall
cmc
clc
pop
pop
je
lea
jbe
or
cmp
adc
cmp
sub
push
ds
adc
xor
lea
cmp
arpl
flds
or
mov
mov
push
jmp
dec
pop
jne
mov
sbb
inc
lods
jmp
cmpsb
movsl
inc
popf
inc
in
push
dec
push
adc
xchg
rorb
fstpl
into
pusha
dec
cmc
sti
mov
scas
xchg
mov
leave
into
rcrl
jg
je
mov
or
push
inc
mov
or
test
pop
add
outsl
push
pop
cmp
shl
dec
ret
push
sbb
pop
repnz
adc
fsubl
insb
fcoms
inc
gs
xor
dec
scas
sub
fsubrl
adc
jmp
or
sahf
insb
cmpsb
movsl
xchg
and
mov
xor
sub
jg
sahf
das
shll
lret
sbb
xchg
adc
loope
ja
and
leave
movsb
pop
pushf
stc
fbld
sub
lret
jge
stos
stos
ffreep
push
loopne
iret
int3
push
push
xor
popf
or
adc
xchg
mov
push
mov
sub
push
inc
push
imul
lret
aas
xchg
negb
shll
or
adcb
adc
arpl
mov
mov
xchg
popf
mov
xor
fcmovnbe
pop
dec
xorb
mov
data16
sub
inc
imul
push
inc
pop
fisttpll
pop
sahf
add
jnp
movsl
jmp
mov
aad
test
lods
mov
dec
loopne
dec
pop
pop
push
push
dec
sub
jecxz
rclb
sub
push
into
addl
mov
movsb
ret
cmp
jno
dec
lahf
pushf
scas
lods
sbb
inc
jnp
popa
sub
je
mov
mov
xchg
in
mov
insl
das
push
lea
imull
fistpl
repnz
insl
pusha
icebp
sbb
out
scas
rcrl
xchg
xchg
repnz
out
dec
mov
or
test
dec
and
and
mov
repz
push
psllq
lea
mov
aaa
cwtl
inc
mov
sti
aad
cmp
fadds
bound
sbb
pop
inc
pop
ljmp
rclb
or
pop
hlt
test
test
push
dec
in
aam
mov
mov
aas
xor
pop
adc
js
outsl
dec
xchg
mov
scas
or
and
repz
jb
ja
movsb
sub
sti
int3
fstpt
mov
push
push
push
jge
jg
clc
lea
lock
mov
jno
out
push
mov
sub
int3
mov
and
and
icebp
scas
scas
inc
ja
add
xchg
lret
pop
push
insl
or
xor
cmpsb
push
popf
pushl
fidivs
sahf
xor
cmp
xor
mov
push
jl
xor
mov
sbb
push
inc
sarb
add
sub
jmp
lea
push
popa
pop
popa
or
or
xor
movsb
fs
sub
sahf
rcl
and
lcall
ss
lret
popa
cli
xchg
pop
out
fimuls
jno
and
sub
mov
mov
jne
sbb
es
add
fs
or
push
push
aam
shll
dec
test
and
push
lods
jns
test
push
rolb
adc
hlt
cmp
jb
xor
sbb
arpl
push
lea
fidivrs
cli
fldt
repz
lret
fabs
fwait
cmp
stos
mov
add
xor
mov
jl
les
push
gs
out
jne
dec
lcall
and
fmuls
or
test
sbb
xchg
fucomip
loopne
push
push
fsubrs
mov
mov
sbb
test
shlb
mov
int3
push
jl
mov
lahf
les
xchg
adc
cmc
jns
pop
bound
pushf
cmpsb
sti
pusha
das
cmp
loopne
push
mov
icebp
enter
popf
test
push
mov
mov
mov
mov
outsb
ficoms
fnsave
push
fisttpl
cwtl
movsb
xor
cmp
mov
dec
call
pop
movl
jle
stc
popf
add
daa
ljmp
rcr
push
nop
xchg
mov
lds
pop
adc
insb
and
jecxz
outsb
xchg
dec
dec
aam
pop
je
cmp
mov
sub
sbb
lret
negl
aaa
jnp
clc
add
stc
fdivp
add
in
jno
jb
sub
dec
pop
ja
mov
pop
mov
ja
inc
test
push
pusha
andl
cmp
jno
or
sbb
int3
cmpsb
xchg
xchg
lret
add
push
sti
notb
and
pop
out
dec
inc
add
popf
and
sarb
cltd
mov
xor
movzwl
lea
sub
adc
lret
jle
imul
test
xor
adc
cmp
mov
rolb
add
and
jae
jno
clc
dec
sub
cmc
xchg
xchg
fnstcw
bound
xchg
fistpl
pop
ljmp
arpl
out
adc
adc
popa
jge
fucomip
jno,pt
lret
in
shrl
hlt
xorl
sub
push
jns
out
test
push
add
add
push
outsb
gs
mov
dec
ss
cmc
stos
sbb
mov
pop
fucomip
ret
test
xorb
mov
dec
bound
lock
push
hlt
cwtl
mov
lods
imul
fcoms
loop
mov
mov
addr16
out
aam
in
sbb
xchg
push
inc
lahf
lea
es
lods
call
mov
aaa
popf
pop
pop
push
adc
jp
xchg
sbb
push
repz
xlat
rorl
jg
aam
add
jno
rorl
fwait
aam
xor
and
arpl
test
in
cmc
sbb
je
aaa
cmp
in
popf
test
push
sbb
cmp
push
cmpsb
xchg
adc
hlt
leave
mov
pusha
and
fcoml
vpperm
arpl
in
jg
jo
aam
loope
lods
leave
dec
xchg
fmull
iret
xchg
fsubrl
xchg
ljmp
ljmp
jno
jle
fwait
mov
mov
loop
std
push
mov
add
fidivrl
dec
dec
mov
popa
mov
aas
jl
jle
and
das
test
dec
dec
adc
shll
sub
mov
hlt
mov
out
dec
scas
fwait
inc
mov
jno
addr16
sti
mov
fldl2t
push
pop
push
sbb
daa
movsl
xchg
lock
aam
jb
inc
or
or
cwtl
sbb
cwtl
xchg
pop
inc
or
pop
sbb
mov
dec
std
and
leave
lcall
std
orl
mov
outsl
jns
xor
or
shlb
mov
adc
lret
xchg
push
push
pop
in
jbe,pt
scas
out
iret
leave
pop
xchg
mov
out
mov
jns
push
or
or
arpl
int3
and
cmc
nop
ret
std
fmul
pushl
add
fimull
lret
in
mov
or
lret
mov
xchg
loope
mov
shlb
mov
sub
mov
xor
cli
or
test
das
cli
jp
popf
push
lock
sub
movsb
jg
sub
push
mov
mov
cmpsl
jo
repz
adcl
inc
imul
popf
mov
lds
jae
mov
dec
sbb
das
mov
add
mov
cli
mov
cmpsl
das
lds
dec
insb
cli
rcll
insl
mov
outsl
adc
cmpb
xor
xchg
shlb
out
mov
mov
mov
rolb
icebp
cwtl
gs
testl
mov
les
sbb
ds
shlb
stc
jno
dec
xor
push
outsl
movsl
cmp
mov
xchg
shll
push
inc
aas
mov
lret
xchg
orb
or
xlat
dec
mov
adc
icebp
lods
adc
mov
xor
rcrl
adc
and
cmp
cmp
loope
jns
fsubl
jle
adc
jmp
sbb
ja
enter
stos
aaa
cmpl
mov
fwait
mov
mov
xchg
fcoms
sbb
lret
out
xor
movsb
mov
gs
cltd
fcmovbe
adc
push
in
daa
push
int3
push
mov
inc
fcoms
mov
and
lods
lret
popa
cli
push
mov
scas
xchg
mov
mov
add
inc
sub
cmp
mov
adc
scas
add
orb
sbb
push
inc
mov
or
lock
data16
cli
out
cmp
sub
adc
xchg
jl
lods
and
cmc
or
jmp
mov
mov
icebp
lret
mov
dec
loope
add
lret
outsl
mov
jle
sub
xchg
gs
push
in
fbstp
jp
cltd
fisttpl
adcb
push
xchg
ds
rcl
jle
mov
scas
test
push
inc
arpl
movl
mov
adc
and
xor
cmp
scas
insb
mov
mov
dec
lock
mov
pop
cmp
add
lret
ljmp
xchg
inc
ss
mov
mov
cltd
pop
mov
bnd
sbb
insl
xorb
mov
lods
and
add
cmp
mov
add
pop
cld
fsubrs
test
ja
jmp
popw
inc
sbb
jb
and
sbb
mov
loop
push
sub
inc
shlb
out
and
es
scas
cwtl
fldt
lea
mov
out
jae
insl
add
hlt
stos
xor
mov
loopne
popa
das
popa
scas
adc
cmp
dec
int3
xchg
gs
jl
jnp
sti
and
out
mov
inc
testb
clc
dec
pop
pop
int3
jo
ss
xchg
jl
imul
add
rcrl
jo
mov
orl
sub
fistpll
or
sbb
pop
popa
xchg
fbstp
test
out
push
cld
scas
sbbl
or
cmp
mov
testl
jg
xchg
push
lret
movsl
mov
sub
into
mov
cmp
and
push
push
stc
leave
out
jns
jecxz
push
out
popf
dec
mov
sub
and
and
mov
push
pop
adc
arpl
dec
andl
fwait
rcl
mov
aaa
xor
sub
mov
cwtl
xor
lods
repz
jmp
jmp
outsl
stos
inc
lods
scas
pop
mov
out
scas
push
or
dec
inc
xchg
mov
jmp
iret
jl
cmp
mov
rcll
shll
mov
mov
leave
jmp
inc
mov
xchg
int3
loop
stos
pop
pop
scas
mov
pop
fmul
adc
xchg
orb
cmpsb
dec
jns
add
push
or
push
bnd
arpl
pop
push
and
lods
imul
xor
je
sub
or
fs
pop
mov
xchg
inc
push
out
data16
lea
jge
cmc
mov
js
push
dec
test
adc
inc
push
call
jns
lods
push
adcb
jg
mov
xor
popa
add
jg
cli
mov
inc
jbe
push
push
mov
sub
fdivl
jo
negl
pop
das
lods
push
sub
ljmp
pop
inc
in
and
movsb
mov
dec
xchg
and
cli
addl
fcmovnbe
adc
les
push
push
sub
cwtl
mov
cmp
js
mov
ss
cmpsl
xchg
adc
jno
xchg
inc
movsl
out
mov
fnstenv
nop
adc
in
sub
bound
in
xor
mov
cmc
sahf
aam
mov
xor
out
imul
sbb
mov
arpl
popa
add
fcompl
adc
add
dec
inc
adc
inc
pop
mov
adc
ds
into
pop
outsb
sub
cmc
mov
and
xor
ljmp
roll
or
inc
pushf
mov
lock
das
mov
jns
mov
les
jecxz
int3
daa
insl
add
lahf
cmp
pop
clc
insl
dec
xchg
and
enter
mov
jo
adc
data16
inc
into
or
enter
out
push
orl
iret
mov
movsl
fisubrs
pop
inc
cld
adc
cld
andb
xchg
scas
stos
fnstcw
xchg
xchg
movl
inc
or
je
loopne
fimull
das
pop
andb
fdivrl
popf
mov
sub
mov
adc
and
stc
repz
inc
rcrb
jecxz
and
add
dec
xor
stos
data16
adc
fs
orb
and
xchg
test
mov
pop
repnz
adc
movsb
inc
dec
loopne
xor
xchg
and
push
mov
lock
testb
mov
and
mov
add
les
push
jmp
mov
out
add
or
mov
mov
sub
cltd
fstl
jo
ds
push
sarl
or
mov
sbb
ljmp
push
pop
xor
pop
loop
push
pop
xor
xchg
sub
xor
dec
xchg
push
jecxz
or
sti
pop
inc
repnz
je
imul
sub
pushf
test
pushf
pushf
mov
adc
inc
jae
pusha
test
ljmpw
xlat
adc
or
xchg
or
adc
jl
and
cmpsl
dec
stos
jb
cwtl
int
mov
mov
inc
cmp
clc
add
cltd
or
mov
mov
or
daa
insb
sbb
inc
lret
jg
popf
fdivs
int3
pop
mov
mov
cmp
inc
jg
cwtl
shl
inc
adc
inc
pushf
push
lods
sti
out
jle
mov
rorb
outsl
ljmp
ljmp
mov
inc
xchg
iret
xchg
add
cmc
or
lock
nop
push
lods
div
ds
hlt
pop
lcall
sbb
jp
into
in
mov
das
xchg
andb
mov
inc
daa
les
popf
pop
div
lods
pop
lods
pop
roll
movsb
inc
mov
cltd
outsl
cltd
and
add
cwtl
call
mov
or
push
movsl
push
insb
jnp
cltd
mov
imul
adc
sbb
jle
es
adc
cmp
mov
inc
addb
shrb
in
xchg
xlat
push
dec
insl
leave
inc
rcrl
out
add
ljmp
push
rcll
mov
fs
aas
hlt
repnz
rclb
pop
pop
test
cmp
popf
push
jne
mov
mov
loope
xchg
mov
pushf
int3
or
inc
test
xchg
int
imul
cmc
lods
stos
add
adc
sub
fcmovnb
scas
mov
push
or
and
sbb
gs
pop
push
lahf
ds
jmp
jns
mov
pop
dec
add
gs
out
sub
mov
scas
pop
push
add
decl
ja
fdivrl
dec
pop
sti
gs
mov
lret
adc
push
xlat
outsl
sbb
xchg
sbb
rcll
cld
xchg
push
test
movsl
sbb
inc
mov
jb
fisttpll
xchg
mov
mov
pop
loop
mov
inc
adc
loopne
icebp
xchg
mov
jns
test
jecxz
sub
push
cmc
frstor
push
mov
fsubp
iret
mov
loope
and
inc
in
dec
or
cmp
js
sub
push
sbb
xchg
and
xchg
mov
ret
in
test
xchg
lahf
add
and
add
mov
sub
or
rcr
pop
jmp
cltd
and
ss
inc
adc
pop
in
cmp
add
pop
pop
dec
ret
aad
adc
mov
add
fs
je
inc
sub
test
pushf
ret
sahf
push
mov
cmp
shr
subl
sti
shll
test
xchg
pop
cld
jo
and
addb
push
pusha
xor
arpl
pop
xor
xor
in
mov
fimuls
lret
sbb
jb
pop
adc
test
les
sbb
into
xchg
mov
andl
in
inc
cli
dec
add
push
and
enter
insl
rcrb
jmp
into
mov
xchg
aaa
movsb
das
iret
nop
into
and
mov
pop
out
push
pusha
lods
mov
repz
sbb
rclb
jle
add
inc
pop
xchg
idivb
stc
mov
push
ror
xchg
in
mov
outsb
or
stos
xchg
lret
mov
hlt
sahf
mov
adc
dec
sub
pop
nop
loop
or
add
fisttpll
testb
fwait
pop
or
popa
cmp
ljmp
fimull
out
in
jl
adc
fstpl
add
aam
sbb
sbb
push
sub
or
enter
ret
jg
adc
test
push
mov
xchg
push
and
adc
cmp
popa
or
adc
stos
aaa
lcall
insl
xor
imulb
test
push
cmp
test
data16
cmp
popa
xchg
lret
mov
inc
or
arpl
jnp
and
or
or
xor
jp
push
les
in
loop
stc
jne
jnp
iret
sbb
mov
pop
iret
ret
dec
jmp
mov
les
pop
filds
es
add
push
std
mov
ret
sahf
js
xchg
xchg
cld
mov
repz
add
xchg
lea
xbegin
mov
dec
test
sbb
xor
iret
pop
insl
xor
inc
dec
mov
mov
lods
xor
outsb
dec
adc
mov
maskmovq
divl
out
test
jecxz
cmpsl
mov
push
shll
aaa
push
daa
mov
out
lea
push
loopne
ljmp
fwait
xor
mov
scas
jnp
dec
add
sub
and
loopne
jno
sbb
test
sbb
cltd
xlat
pop
js
fsubr
fsubrs
xchg
inc
addl
cwtl
mov
lahf
mov
fucomp
push
jnp
mulb
xor
ds
mov
jnp
rcll
cmc
enter
lock
lods
imull
or
mov
jl
loopne
je
in
rcrb
jp
lret
xor
or
subb
jge
ret
and
repz
lret
mov
sub
pushf
dec
and
jmp
add
push
push
shrl
xor
jno
inc
lds
cmpsl
int
push
xor
push
andl
popf
inc
popa
pushf
or
push
xchg
inc
dec
in
test
ss
cltd
inc
xor
or
inc
inc
add
pop
jl
add
inc
push
dec
dec
pusha
fistpll
sbb
outsl
cmp
ret
jmp
jle
call
pop
ds
and
int
push
scas
stc
adc
xchg
sbb
imul
sub
daa
aas
cld
inc
mov
dec
fwait
call
jb
mov
shl
xor
sbb
mov
cs
or
sub
out
pop
test
insl
adc
jp
fistl
cli
inc
out
pusha
test
mov
movsb
jne
bound
and
mov
in
aaa
push
lods
inc
add
test
mov
sub
mov
int
jnp
cmpsl
lea
and
in
mov
lea
dec
rcl
push
ret
lcall
and
dec
push
les
leave
jo
imul
fwait
sbb
leave
lahf
cli
xchg
dec
scas
test
dec
jg
xchg
sub
sbb
inc
push
aad
int
xchg
jmp
cmpsb
fldt
dec
fsub
and
and
insl
scas
mov
jbe
cmc
cmc
cwtl
stos
sub
arpl
iret
dec
fwait
mov
pop
rorb
lahf
sbb
push
lea
mov
mov
pop
stos
xchg
in
ret
jae
fwait
or
xchg
testb
jmp
pop
pusha
push
sub
cltd
add
mov
mov
data16
iret
sub
xorb
inc
test
lahf
xor
shrb
mov
jmp
std
ljmp
inc
bound
inc
out
pop
lds
or
rcl
pop
test
mov
fisubrs
and
lock
mov
dec
jg
mov
fldcw
enter
lods
enter
mov
ret
movsb
vstmxcsr
pushf
xchg
inc
mov
sahf
mov
mov
mov
mov
cmp
add
xchg
rcr
jle
jmp
lahf
xor
js
mov
icebp
leave
imul
xor
xchg
mov
int3
xchg
jo
out
test
lds
push
int
aam
mov
stc
jnp
jge
dec
in
clc
fsubs
iret
jns
push
jne
popa
mov
xor
out
inc
jnp
or
pop
leave
push
aas
iret
jno
fidivrl
push
clc
adc
mov
jbe
stc
xchg
fbld
and
sbb
lcall
scas
sahf
add
js
push
cmp
inc
hlt
pusha
lods
outsb
mov
stc
aas
sbb
loop
jmp
or
mov
nop
jge
cmp
or
push
xor
fsubr
cmp
fs
and
lock
das
mov
jb
cwtl
sbb
jl
stos
popf
xchg
xor
aam
gs
mov
adc
xlat
aaa
fcoml
jb
inc
stc
inc
imul
into
mov
pop
jbe
push
jae
icebp
inc
scas
testb
fidivrs
iret
inc
roll
add
sarb
cld
and
insl
inc
add
loopne
cli
adc
mov
lock
cld
pop
xor
jecxz
xor
scas
jl
mov
dec
iret
jo
jae
pusha
xchg
mov
pop
test
adc
cli
outsb
push
add
notb
jge
push
mov
jge
cmp
jo
inc
fwait
xchg
test
bound
add
repz
mov
push
imul
and
enter
jo
mov
ficoml
inc
rorb
adc
fldl
pop
out
mov
jle
stc
xchg
inc
adc
nop
and
lods
int3
fcoms
xchg
test
stos
sbbl
lahf
lret
in
sti
cmp
in
sub
cmp
sbb
push
mov
fnsave
aad
cmp
leave
iret
hlt
mov
shl
cmpsb
mov
mul
mov
mov
xor
or
cli
dec
nop
les
add
xor
and
cmpsb
pusha
pop
xor
daa
leave
add
fisubs
xor
push
or
dec
rolb
stc
mov
movsl
pop
lcall
pop
jno
shrb
adc
dec
call
in
in
ljmp
xchg
or
mov
cmc
scas
pop
sbb
cs
push
cli
cmovbe
adc
jecxz
xchg
dec
cmp
xorb
push
mov
and
and
dec
hlt
lock
xor
jl
mov
je
cmp
insl
xchg
scas
mov
mov
fcompl
sbb
loop
lret
cmp
adc
xchg
popa
mov
fmuls
inc
sahf
pop
adc
test
fisubs
inc
leave
fwait
leave
mov
adc
push
std
mov
mov
loop
dec
lods
out
cmc
into
mul
adc
les
xor
pop
into
jb
jnp
sub
lret
push
fiadds
mov
les
shrb
inc
pop
jnp
or
cltd
add
sti
cltd
test
sahf
cmp
or
jle
stos
jno
mov
mov
jno
cmp
pop
cli
and
lea
repnz
adc
lods
fidivrs
cltd
into
aad
jg
sarb
inc
pop
stos
pop
fldcw
dec
jnp
neg
cltd
jae
fld
pop
outsb
or
or
pusha
imul
lock
out
or
adc
lret
cltd
sbb
cmp
std
int3
jns
jecxz
loop
inc
ja
add
stos
insb
hlt
cwtl
retw
mov
mov
jae
xchg
addb
xchg
push
fisttpl
ret
sub
xlat
xor
mov
aam
clc
push
mov
pop
sub
insl
call
add
mov
imul
arpl
jae
scas
adc
push
sub
jb
ljmp
cmpsl
adc
jne
stos
mov
popa
mov
and
out
pop
cli
imul
clc
xchg
add
xchg
movsb
adc
dec
adc
nop
cmpsb
jnp
subl
test
out
sub
out
imulb
std
pop
dec
xor
les
out
push
cmp
pushf
xchg
pop
pop
jmp
in
or
in
and
or
mov
out
les
outsl
sbb
out
je
push
fsub
jns
dec
add
push
lahf
push
and
mov
lock
adc
out
xchg
and
xor
loopne
in
pop
push
loop
insb
shr
and
call
aas
mov
pop
or
ds
push
xor
pushf
bound
mov
outsl
lahf
mov
adc
daa
xor
sbb
mov
fists
call
popa
mov
or
jmp
push
out
push
ret
sub
cmpsb
sbb
xchg
cwtl
sbb
sbb
mov
hlt
pop
stos
cmpsb
push
in
fisubrs
out
sbbb
inc
in
aad
es
movsb
add
int3
hlt
rcll
xor
mov
das
std
rclb
ds
jge
test
aas
xchg
fstpl
hlt
cmp
out
hlt
lret
sbb
sub
fisubrl
jecxz
push
aaa
pop
sub
inc
bound
xchg
adc
out
popf
xchg
inc
or
lea
xchg
dec
faddl
insl
ret
dec
ret
pop
stos
in
into
sub
xor
xchg
push
aaa
pop
std
inc
mov
jns
mov
sbb
leave
cmpsb
inc
loope
and
iret
pop
js
fisubrs
push
popa
cmpsb
ret
jb
xchg
push
enter
jle
xchg
xchg
movsl
loope
sbb
pusha
leave
dec
arpl
enter
mov
add
les
nop
sub
fisubl
or
ret
push
std
arpl
pop
and
adc
sahf
andl
pop
xor
mov
sbb
xchg
inc
test
add
inc
and
bound
push
lahf
push
add
mov
ret
lea
in
mov
out
jo
lcall
push
pop
shll
cltd
inc
cmp
pusha
daa
push
insl
or
cmp
mov
icebp
xor
mov
pop
jno
ljmp
rorb
mov
mov
lret
mov
xchg
jns
jg
icebp
scas
adc
jno
or
xor
mov
fnstcw
cmp
loope
cs
jne
jle
and
xchg
and
dec
xorl
clc
ljmp
dec
mov
mov
push
xchg
enter
mov
dec
pop
inc
mov
jecxz
leave
mov
scas
fcomps
lods
mov
mov
clc
rorb
cmp
mov
xchg
jecxz
les
pop
jge
sbb
lahf
lea
clc
popa
sbb
push
push
adc
xchg
mov
pop
roll
and
into
adc
xchg
shlb
mov
pop
jae
js
sbb
cmp
xor
ret
pop
cmp
jns
xchg
mov
mov
lock
mov
int
lcall
scas
xchg
and
js
inc
inc
repnz
mov
sub
push
js
sbb
fsubrl
cld
cmovp
push
adc
dec
sbb
cmp
xchg
jl
and
xor
fldcw
fwait
dec
xchg
adc
cmp
jmp
dec
pusha
out
sbb
lds
pop
aaa
jno
add
mov
sbb
cwtl
pop
mov
mov
loopne,pt
adc
popl
push
inc
mov
or
xchg
loop
les
data16
pop
add
jmp
ljmp
movsb
cmp
push
sbb
test
test
loop
cmpsl
ds
xorb
add
jnp
inc
pop
imul
sub
xlat
xor
jmp
addb
push
rep
dec
xchg
mov
bound
lret
mov
inc
nop
pop
bound
pusha
or
repz
xorb
dec
or
mov
lea
push
or
out
push
in
adc
std
dec
daa
js
je,pn
sbb
sahf
loopne
push
adc
mov
add
mov
loop
or
movsb
fldcw
pop
jp
daa
or
adc
sbb
and
mov
mov
mov
push
add
lock
cmp
xor
je
in
stos
repz
ljmp
divl
xchg
test
into
xor
cmp
negb
cmp
xchg
testl
stc
cmp
mov
cli
mov
mov
loope
or
adc
and
rol
push
mov
pop
add
pop
pop
das
cltd
shr
aad
int
dec
or
imul
pop
mov
push
popa
cmp
inc
inc
out
stos
jg
out
call
mov
jno
icebp
inc
ja
lods
mov
int
call
test
xchg
add
lods
test
mov
js
dec
jmp
adc
cmp
dec
xchg
xchg
jae
push
rcll
push
pop
fwait
pop
dec
jae
movsl
dec
lock
xchg
mov
in
pop
in
xchg
xchg
lods
dec
jle
push
jmp
jl
xchg
fsts
or
fs
push
jnp
jp
clc
xor
push
scas
push
insl
loope
cwtl
push
pushf
out
lea
and
loopne
ja
cmp
xchg
loopne
cmp
out
outsl
mov
outsb
and
aad
mov
adc
sbb
jb
or
lcall
inc
sbb
xchg
cld
jns
push
adc
or
mov
xor
outsb
mov
call
xor
bound
popa
addr16
mov
lcall
lahf
cli
cltd
fadd
flds
scas
into
or
movsb
xchg
xchg
dec
in
frstor
xchg
push
jg
jp
inc
inc
repz
xchg
pop
dec
dec
jbe
add
ljmp
scas
push
pop
xchg
pop
jl
jmp
mov
lea
jmp
into
insl
pop
mov
xchg
aas
outsl
add
dec
dec
mov
or
sbb
idiv
jmp
xchg
pop
int3
pop
pushl
xor
sbbb
outsl
mov
shlb
add
inc
jg
movsl
cmp
subb
test
adcb
stc
sbbb
pop
adc
sbb
outsb
jg,pn
rorl
xchg
stc
jecxz
inc
and
in
jmp
out
jae
in
shrb
jp
mov
add
sbb
adc
test
and
pop
jmp
mov
outsb
enter
into
cmpsl
or
outsb
mov
push
popf
dec
inc
cmp
inc
dec
rorl
insb
jae
cs
adc
repz
xchg
addr16
fdivrs
daa
fists
std
adc
popa
dec
jmp
hlt
lea
jmp
mov
popa
dec
test
push
push
cmp
aas
popl
aas
or
inc
adc
hlt
pop
call
sbb
scas
mov
fcoms
rcl
fistpll
shr
lea
bound
add
xchg
xor
add
add
stos
mov
call
pop
test
mov
loopw
xchg
mov
pop
inc
sarl
jno
add
mov
test
mov
lds
xchg
loope
pusha
cmpsb
jge
inc
out
mov
das
adc
rcl
pop
mov
stos
sbb
out
out
jmp
ret
add
xor
out
icebp
xchg
dec
movsl
out
mov
mov
int
adc
popf
dec
orb
lock
inc
or
fadds
lea
iret
cmpsl
cmp
inc
cld
push
pusha
mov
cld
icebp
mov
jne
dec
lock
or
mov
cmp
ret
fsubrs
jmp
das
leave
jnp
aaa
test
mov
push
loope
xchg
fmull
adc
mov
xor
in
mov
lea
popa
mov
push
mov
mov
gs
mov
and
ja
repnz
subl
addl
loopne
push
fidivrl
mov
repnz
subl
sub
add
mov
mov
mov
push
fcmovne
or
das
xor
push
imulb
cmp
ret
add
scas
clc
insl
cmpsl
ljmp
dec
aam
dec
mov
dec
sub
hlt
sahf
mov
pop
lcall
loop
ss
sub
pop
adcb
or
mov
cmp
ucomiss
sysexit
cmp
aam
cmp
mov
dec
or
lahf
std
lahf
adc
enter
outsl
in
fistpll
lcall
xchg
jmp
das
jnp
scas
in
scas
das
dec
mov
jle
inc
or
es
adc
mov
push
jae
out
dec
loope
xor
mov
mov
push
adc
and
adc
and
adc
rorl
jbe
sahf
lds
aad
inc
push
pop
inc
enter
xchg
stos
sahf
aaa
or
daa
xchg
xchg
pop
test
mov
das
movnti
iret
frstor
push
and
mov
fldcw
cld
or
popa
sbb
dec
outsb
fwait
ds
adc
in
cld
in
pop
pop
pop
xor
push
add
inc
xchg
repnz
add
mov
cwtl
pop
pushf
es
pop
call
bnd
add
rorb
das
movsb
fnstsw
call
popf
lods
scas
pop
and
outsl
adc
pop
jge
dec
out
int
data16
testb
ja
insl
scas
clc
push
lcall
pop
test
outsb
inc
in
sti
push
xchg
insl
pop
aad
dec
or
shlb
clc
dec
jnp
jp
call
cmp
dec
sub
lret
mov
aas
inc
push
call
mov
loopne
je
cmp
xchg
xchg
ret
rcrb
or
ds
mov
mov
gs
into
push
push
push
leave
xchg
cmc
les
cmp
repnz
iret
inc
sarb
ror
and
div
and
cmp
and
jecxz
sti
mov
rorl
xchg
daa
xchg
xchg
in
inc
imul
cmp
outsb
jle
sbb
sbb
loope
push
enter
or
push
inc
shlb
mov
movsb
nop
sbb
mov
xchg
push
mov
xor
std
ss
adc
cmp
adc
sub
movsl
pushf
jbe
sub
mov
xchg
pop
or
cmp
cmpsl
rclb
call
imul
mov
inc
imul
aad
pop
push
nop
orl
push
and
mov
shlb
loopne
fstpt
cli
and
sub
pop
fcoml
and
dec
lahf
cmp
adc
mov
out
es
in
call
jge
mov
shlb
adc
mov
jns
js
xchg
sub
sub
popa
pop
and
jbe
lock
in
lock
and
in
sbb
push
stos
hlt
dec
add
out
addb
xchg
push
xchg
jle
movsl
fistl
out
inc
mov
mov
jo
and
scas
rorl
jg
jns
cs
fsubrp
test
test
adc
dec
push
and
je
mov
idivl
push
icebp
pop
cmp
cmpsl
out
jp
inc
mov
rolb
sub
add
push
and
cwtl
push
outsl
sbb
shll
mov
jne
add
and
ds
jp
sbb
xchg
mov
mov
xchg
popa
leave
pop
xlat
cmp
pop
aaa
sbb
push
adc
lock
aam
mov
adc
test
xchg
cmpsb
dec
add
or
mov
es
or
adc
imul
lock
addr16
mov
and
sub
xor
insb
sahf
mov
mov
push
mov
ljmp
adc
imul
test
rcrl
dec
adc
clc
xchg
adc
lea
outsl
xchg
scas
andl
dec
hlt
mov
loope
inc
xchg
push
jecxz
xchg
fsts
int
mov
xor
mov
jbe
loope
xchg
xor
mov
mov
out
loop
mov
jmp
fistps
jo
in
sub
mov
mov
clc
fs
mov
or
gs
fldt
call
idivb
outsl
ss
scas
cmpsl
add
mov
dec
scas
jno
out
sbb
daa
test
jg
lahf
mov
pop
add
add
call
cwtl
cmp
pop
clc
es
sbb
sti
or
addb
add
lret
jae
sub
cld
aaa
or
jg
fisubs
aas
es
sub
leave
iret
mov
xor
rcrb
ud0
adc
popf
movsb
aam
mov
sbb
cmp
pop
adc
in
dec
hlt
pop
aas
ja
xchg
je
push
push
scas
jp
add
dec
pop
push
test
hlt
nop
push
loop
loop
lret
mov
adc
lret
xor
icebp
pop
push
cmp
imul
dec
js
ljmp
or
dec
xlat
pusha
jg
imul
xchg
cli
lret
scas
loopne
int
xchg
xor
fstpl
mov
in
loop
data16
adc
es
jns
imul
shll
mov
pop
sbb
movsb
jb
pop
shlb
int3
inc
lock
sbb
stc
push
jl
add
out
and
pop
test
sub
shrl
cmp
imul
stc
shl
popa
sub
or
jg
inc
repnz
and
push
jns
lret
idivl
out
dec
cmp
mov
ljmp
ret
sub
adc
pusha
inc
pop
mov
lret
out
inc
sbb
mov
int
mov
lret
push
xor
rcll
repz
rcrl
cmp
in
ljmp
in
add
push
inc
pop
les
sti
std
cmp
mov
sbb
xor
insl
inc
popa
popa
jle
es
cmp
lds
dec
loopne
xchg
aam
popa
ljmp
push
inc
xor
jo
push
mov
addr16
add
xchg
push
adc
scas
cwtl
nop
or
ss
popa
pusha
shll
add
clc
cs
and
inc
mov
lahf
inc
push
sar
in
push
cld
push
or
mov
mov
in
xchg
shll
incb
ja
cmp
pop
test
cmpsl
add
mov
adc
insb
sub
pusha
es
jge
cmpsl
and
sbb
sbb
mov
pop
add
push
cmp
jne
mov
sahf
inc
addr16
jno
jmp
insl
clc
mov
stos
lock
or
pushf
dec
cmp
mov
pop
mov
mov
jp
or
sub
fisttpl
inc
sahf
punpcklwd
sbb
ret
jbe
xor
rorb
dec
stc
es
in
mov
and
inc
pop
inc
mov
fidivs
loop
fmuls
xchg
in
idivl
inc
sub
jbe
adc
mov
sar
mov
lods
mov
clc
icebp
ds
add
pop
inc
lock
jl
jne
xorb
pop
pop
xchg
inc
pop
pushaw
mov
lret
out
cmp
jnp
lock
lcall
add
push
test
outsl
insb
das
xor
jmp
ds
cmpsb
jle
xor
popf
or
out
pop
sahf
test
jmp
push
mov
xchg
movsl
xor
sti
stos
cli
and
in
mov
pop
loopne
jnp
das
ja
pushf
or
dec
and
and
pop
push
mov
jae
pop
jmp
jbe
xor
adc
push
xor
xor
inc
push
xor
pusha
call
mov
sub
std
out
lea
dec
inc
and
xor
lds
cmc
mov
out
jnp
mov
aaa
jp
je
cmc
push
out
sbb
sarb
sub
xchg
test
stc
leave
mov
aas
nop
or
mov
test
dec
pop
push
lcall
insb
fldt
repz
or
jmp
mov
lret
ret
xchg
test
daa
jge
addb
mov
and
xchg
xchg
mov
dec
inc
sbb
push
pop
ss
aad
cmpsb
and
nopl
push
sbb
jg
rorb
cmc
mov
fstps
mulb
mov
fsts
mov
fidivs
cmp
popa
mov
call
jg
dec
cmp
test
push
add
xor
xchg
cwtl
rcrb
fs
xor
lock
pop
ficoms
ds
jg
arpl
mov
pop
add
inc
cld
shlb
xchg
dec
outsl
pop
dec
jmp
test
jnp
dec
je
pop
pop
cmpsb
mov
cmpsb
adc
pushl
imul
in
push
out
sub
in
sbb
dec
pop
in
push
andb
xor
pop
add
imul
cwtl
jmp
mov
mov
jo
cmc
fs
ja
dec
push
pop
lock
xchg
into
mov
add
into
daa
repz
xor
out
dec
push
sbb
movsb
ret
adc
clc
dec
push
adc
out
out
sub
aad
mov
loop
repnz
pushf
and
imulb
ret
ss
jecxz
sahf
mov
jo
add
mov
mov
idivl
add
dec
sbb
push
mov
test
lcall
inc
das
leave
sub
xor
jno
mov
ret
sub
xchg
in
sti
adcl
imul
push
cmpsb
sbb
subl
xchg
pop
fdivrs
fucomi
ljmp
adc
das
add
push
mov
jecxz
stos
test
repnz
in
and
les
jmp
aad
xchg
jae
std
add
movsb
or
fisubrs
pop
sar
adc
test
inc
push
loop
mov
sub
dec
jl
mov
mov
pop
pop
ljmp
dec
rorb
lods
add
cmp
cmpsl
cmc
sbb
dec
lcall
push
add
inc
mov
ret
push
mov
push
inc
mov
xchg
sbb
in
push
addl
data16
scas
out
push
mov
jmp
mov
out
pop
into
hlt
dec
add
or
decb
xchg
push
test
movsb
jbe
nop
addr16
pop
fcoml
jg
inc
cmp
jbe
sbb
sbb
xor
mov
lea
dec
loop
pop
sbb
repz
jae
push
and
push
push
pop
in
imul
nop
mov
sbb
ror
fcomps
xchg
iret
test
add
call
add
js
outsl
lock
xchg
cmpb
sub
ret
repnz
pop
add
pop
ds
stos
mov
aas
cmpsl
ret
incl
and
adc
lcall
lcall
arpl
scas
fstpl
inc
jae
ss
incb
andl
pop
xchg
cmc
mov
mov
or
cmp
cmp
push
repnz
outsb
mov
cmc
das
mov
push
int
mov
js
loopne
xlat
sbb
xchg
xor
fisubrs
cltd
sti
mov
iret
pushl
scas
fdiv
xorb
ja
subb
daa
adc
jmp
loope
mov
xor
std
in
addr16
jl
sar
mov
jb
inc
lcall
call
jns
xchg
jns
out
push
ret
iret
arpl
mov
lahf
cmp
bound
aaa
mov
stos
cmp
popa
pop
das
sub
jecxz
jbe
rol
jb
xchg
dec
shll
add
cwtl
inc
mov
stos
popa
or
repz
push
sahf
adc
jp
sbb
cmp
xlat
xor
mov
loop
jmp
pop
inc
jb
clc
and
jp
loope
ss
or
repnz
int
adc
push
xor
rorl
dec
scas
or
negb
pop
inc
sub
sub
aas
mov
leave
sti
inc
fs
cmpsl
bound
sbb
jns
jno
pop
mov
mov
jbe
stc
fwait
lods
into
push
mov
insl
push
fisubrl
lcall
mov
adc
lahf
adc
dec
cmp
jb
subl
scas
lock
mov
lds
push
add
push
arpl
cmc
jb
pusha
mov
mov
into
push
imul
inc
sbb
pcmpeqw
lret
mov
xchg
fsts
xchg
jmp
add
loope
jne
into
push
mov
dec
jl
rcll
xor
cmp
pusha
pop
fwait
cltd
inc
xor
push
mov
icebp
or
push
pushf
dec
and
push
les
mov
jge
mov
add
jbe
dec
mov
mov
daa
push
adc
je
lret
aad
insl
aaa
mov
nop
rcl
cmc
dec
inc
insl
out
sbbb
ss
pop
roll
fwait
in
test
outsl
dec
jbe
dec
adc
dec
cmp
movsl
add
mov
ja
fisttpll
add
cld
stos
or
adc
add
push
std
jp
sahf
shrb
faddl
xchg
jae
test
adc
insl
test
sub
pop
test
je
sbb
ljmp
xchg
adc
xchg
movb
iret
mov
mov
mov
sbb
into
xchg
idiv
and
mov
mov
dec
xchg
mov
and
loop
mov
pop
push
lret
xlat
mov
fwait
gs
push
int
jbe
scas
dec
mov
sbb
inc
test
mov
sbb
scas
push
jmp
mov
inc
xchg
pop
pop
push
test
stc
mov
mov
enter
aas
push
jnp
ljmp
std
push
mov
cli
lret
xlat
push
rolb
ret
sbb
push
imul
popf
jne
mov
lods
dec
inc
aad
dec
pop
notl
add
xchg
push
adcl
pusha
iret
adc
cmp
xchg
sbb
inc
pop
add
inc
inc
stos
in
jge
mov
aam
pop
push
imul
addl
mov
push
mov
icebp
cmovnp
aas
pusha
out
mov
aaa
int3
add
movsl
push
mov
loope
xchg
outsb
xchg
scas
xchg
test
fsubr
insb
test
mov
call
into
ds
lret
sti
sti
addr16
testl
mov
testb
cmpsb
test
ljmp
sub
push
aaa
push
scas
xchg
scas
stc
pop
repnz
push
mov
push
mov
sub
and
enter
dec
test
ret
cmp
mov
xchg
sbb
xlat
xchg
push
sub
mov
aad
outsl
mov
fcomi
sub
mov
cmp
inc
aas
cmpb
push
leave
in
data16
lret
inc
adc
sbb
push
pop
dec
mov
sahf
cwtl
aaa
idivb
xchg
cmovne
dec
cltd
and
mov
repnz
xor
add
lret
or
test
pop
dec
dec
push
scas
jp
out
imul
xchg
cmp
push
dec
fs
data16
push
xor
dec
mov
and
cmp
push
rcrl
or
mov
mov
je
jle
push
rolb
insl
fimull
mov
lcall
ss
jmp
xor
xor
xchg
mov
jnp
dec
mov
cwtl
jecxz
mov
inc
mov
adc
mov
dec
sbb
cmc
dec
cmp
cwtl
stos
sub
pop
jecxz
or
jo
ss
fisubl
movsl
jge
mov
mov
shlb
push
sub
cmp
pop
pop
sub
movsb
or
jno
repz
pop
test
or
and
mov
adc
xchg
arpl
jl
push
push
jmp
dec
add
loopne
pop
gs
and
clc
clc
inc
jne
fidivrs
call
or
add
cmp
xchg
daa
cmp
ss
inc
sbb
mov
jnp
cmc
mov
jno
inc
insl
daa
jb
inc
dec
jmp
cmp
insb
cvtpi2ps
jle
mov
pop
pushf
jae
lcall
xor
adc
outsl
push
dec
cli
lds
lret
cmpsb
inc
cmc
push
mov
jge
add
pop
decb
ds
sub
push
or
xor
mov
outsl
adc
daa
cs
cmp
ljmp
mov
arpl
fwait
pop
push
cmpsl
jp
xor
clc
mov
jmp
push
subb
push
or
inc
sarb
loope
dec
push
sub
jp
out
xchg
popf
mov
xor
sub
push
and
jg
clc
aad
lcall
push
stos
jecxz
push
sbb
mov
mov
pop
or
xchg
imul
mov
arpl
or
jb
adc
cmpsl
repz
mov
insb
or
loop
mov
or
movsl
fstpt
out
jp
outsb
mov
xor
dec
ljmp
js
int
add
mov
add
xor
insb
push
xor
mov
fs
iret
sbb
icebp
push
sub
and
mov
jae,pt
jnp
adc
jne
mov
push
cmp
mov
push
repz
sub
dec
push
fwait
push
ja
push
dec
aam
rcr
rcrb
add
and
enter
xlat
xor
mov
xor
push
cld
cmpl
lds
loopne
jno
jbe
mov
cli
insl
imull
or
mov
mov
sub
xchg
mov
cmpsl
inc
and
inc
and
arpl
icebp
gs
and
jbe
shrb
jg
cld
sti
and
cmp
popa
sub
mov
mov
mov
xor
mov
jmp
scas
add
aaa
jb
and
repz
adc
lahf
xchg
leave
std
repnz
pop
stc
sbb
movl
in
jmp
push
adc
jne
test
lock
pop
stc
jg
xor
insb
loopne
mov
pop
sti
rcl
xchg
mov
leave
cs
negb
ds
xorl
adcl
and
out
data16
out
or
mov
repnz
js
xchg
ja
cmpsb
test
imul
push
xor
xor
in
mov
dec
pop
repnz
cmpsl
pop
iret
mov
xor
icebp
pop
jns
fadds
jo
cmpsl
enter
orl
xor
outsl
lcall
lahf
stc
icebp
jbe
xlat
jmp
icebp
xor
xor
push
jne
mov
jp
and
loop
outsl
jge
xor
ret
fisttpl
xor
popf
xchg
mov
pop
cmp
lahf
mov
icebp
adc
shl
lahf
pop
push
xchg
gs
and
out
xchg
fmull
addr16
imul
adcb
adc
leave
sbb
lods
rolb
and
out
loop
mov
fstpt
mov
insl
add
cmp
pop
loope
std
dec
cld
mov
loopne
lds
outsl
sbb
xchg
fs
pop
cmpsl
and
pop
cmp
xchg
and
leave
add
cli
stc
je
fcompl
pushf
dec
roll
je
fadds
fldl
stos
xor
das
cmp
scas
add
jg
jecxz
fsubs
pop
in
add
cmpsl
clc
xor
push
xor
or
notl
sub
adc
mov
loop
push
xor
sbb
ds
xlat
sbb
ds
mov
xor
fwait
les
int
test
int
mov
xchg
add
call
adc
mov
xor
mov
fcomi
dec
in
stos
mov
aaa
ss
cmp
mov
or
inc
jnp
or
test
ret
fisubrl
call
jnp
or
bound
aaa
pop
or
jb
ror
mov
dec
jge
movsb
or
or
cmp
call
xor
cmpl
cmp
xor
mov
sahf
adc
jle
xor
adc
push
ja
mov
pop
and
pop
add
cmpsl
pcmpgtw
cmc
stos
mov
sarb
push
xchg
mov
pop
and
mov
cmc
pop
add
in
sahf
insl
xchg
add
and
inc
cmp
xor
push
mov
data16
push
ja
pmaddwd
pop
gs
jle
pusha
xor
enter
ret
fstl
popf
daa
add
xchg
cwtl
dec
inc
jae
repz
cmp
xlat
cmp
test
xchg
inc
mov
push
ds
lahf
lds
add
cwtl
lods
lock
cli
adc
add
test
xchg
adc
xorl
decl
xchg
xlat
test
push
daa
sub
and
mov
jecxz
cmc
jne
push
out
or
pop
int
xchg
gs
push
jae
xor
int3
cmc
call
dec
xchg
inc
fs
fs
sbb
addl
ja
or
fistpl
pop
mov
fists
bound
lret
jp
or
push
jbe
sub
or
sub
push
push
jecxz
inc
ss
add
adc
or
rorl
imul
scas
fnstsw
add
mov
mov
cmp
rolb
out
into
les
mov
data16
mov
add
popa
aam
sbb
cmpl
in
ljmp
das
cli
repz
cli
jl
cmp
xlat
push
dec
inc
jp
jbe
xor
outsb
je
xchg
popa
dec
bound
fwait
and
xchg
adc
das
push
add
test
xor
scas
push
add
outsb
push
sbb
arpl
xchg
cmp
cld
or
out
sbb
mov
pop
fwait
push
addr16
test
mov
shr
fdivs
push
dec
mov
aam
sahf
rcrl
gs
popf
pcmpeqb
mov
std
and
dec
les
test
call
add
bound
pusha
xchg
insb
fcom
or
cmp
aam
or
fldcw
push
push
inc
loope
fdivrl
xor
decl
adc
pop
dec
jle
sbb
fildll
lds
inc
push
repnz
jae
mov
lcall
sbb
repz
lods
lds
mov
in
scas
inc
and
adc
and
jno
sbb
mov
and
out
int3
xchg
and
sbb
int3
lret
push
popf
sbb
loop
dec
in
or
sub
int
and
adc
dec
addr16
int3
add
xlat
xchg
sub
int
add
cmpsl
xchg
add
push
mov
lods
dec
movsl
jae
inc
std
sbb
pop
outsl
sub
jae
rolb
cmpsb
lock
daa
imul
jae
fsubs
ret
ja
js
pop
cli
outsl
movl
mov
push
cmp
popa
sarl
mov
in
push
push
jmp
icebp
lcall
inc
cltd
int3
jmp
ja
add
aaa
mov
les
out
enter
int
scas
loope
push
cmc
inc
mov
je
in
sbbl
sbb
and
mov
fadds
add
into
clc
pop
push
aas
adcl
clc
dec
mov
clc
pop
scas
ds
add
push
add
pushf
cs
imul
add
fld
in
pop
jp
add
mov
dec
shrb
ds
movsl
repz
movsb
insl
push
insb
jae
sub
and
fists
aam
pushf
imul
mov
out
xor
cli
test
daa
pop
rcrb
pop
jns
and
insb
mov
fwait
out
dec
cmpsw
jecxz
popa
mov
mul
cmp
add
jbe
adc
sbb
sub
jns
sbb
mov
lret
sahf
xor
jp
dec
push
mov
fwait
cmp
xchg
inc
aam
addr16
inc
pop
mov
cmp
dec
lcall
in
out
jecxz
cmp
cmp
fists
adc
or
out
aas
jmp
jbe
inc
xchg
jge
inc
pop
test
add
mov
rolb
sahf
add
xlat
push
mov
movsb
sub
leave
push
rorl
xor
scas
insl
xor
cwtl
loopne
fidivs
jo
scas
sub
cmp
mov
mov
cs
loopne
nop
xchg
or
adc
mov
and
fists
mov
adc
imul
adc
bound
mov
mov
pop
inc
leave
shl
or
pop
ds
in
xor
jg
sub
lea
push
push
xlat
cld
adc
bound
sub
jnp
aaa
jo
ss
xor
add
rolb
mov
std
cmp
xchg
popf
push
pop
out
cmpsl
sub
add
ss
fucomp
and
inc
mov
lea
mov
jmp
shll
fwait
repz
daa
and
cmpsb
jb
into
push
sub
xchg
jl
jecxz
test
and
ljmp
mov
cmp
pop
xor
in
dec
push
test
mov
nop
mull
scas
into
add
movsl
inc
icebp
roll
dec
add
adc
inc
push
stos
xchg
dec
cs
pop
xor
fimull
jb
icebp
int
movsl
cs
jbe
mov
test
mov
and
push
sbb
pop
test
mov
js
mov
out
add
mov
shlb
mov
adc
fcomi
push
stos
push
mov
xor
xchg
inc
sub
int3
cmpsb
jno
add
push
and
adc
xor
sti
inc
stos
pop
subb
aaa
cld
jp
rcll
das
lods
push
xchg
aas
and
adc
call
and
inc
adc
adc
cld
sbb
dec
dec
rolb
faddp
cmp
leave
cmp
push
adcb
sti
inc
and
test
nop
fdivrl
jne
mov
into
push
adcb
das
add
mov
adc
push
shll
mov
dec
cld
adc
ljmp
stos
ret
subl
ljmp
pop
dec
pushl
xor
enter
jg
movsl
cld
mov
std
out
push
in
in
out
or
jb
xchg
jns
mov
in
cmc
mov
rorb
cmp
loopne
xchg
ja
sub
and
es
mov
es
mov
mov
les
adc
repz
shlb
jo
stos
jae
loop
fucomip
jp
adc
mov
pop
hlt
jnp
lret
mov
or
and
sti
mov
fcompl
jg
dec
jecxz
jnp
int3
mov
ficoms
mov
or
lcall
dec
repnz
int
ret
or
cmc
stos
cmc
jmp
ret
mov
stos
in
js
push
imulb
inc
cmp
lret
pop
lahf
ss
xchg
popf
fisubrs
push
shlb
pop
insb
les
call
pop
xor
rorl
dec
test
loopne
add
inc
outsl
mov
sub
pop
cmp
sarl
jmp
mov
adc
mov
push
xchg
adc
mov
wbinvd
jmp
call
and
andl
and
pushf
std
icebp
jo
jge
add
stos
sarl
pushf
xchg
adc
pop
ret
add
ljmp
jge
dec
loope
push
loop
dec
push
sbb
cltd
mov
hlt
adc
jnp
dec
ret
in
and
ret
fnstsw
dec
mov
pop
movsl
into
dec
test
or
testl
aaa
test
popl
add
fsubrl
shlb
sub
roll
pop
jle
cwtl
pop
enter
shr
dec
push
lock
or
rorb
ret
lcall
aas
xchg
lret
fistpl
push
cmp
inc
adc
lock
repz
sbb
fs
cmp
xchg
cmp
adc
insb
mov
or
jmp
ret
or
jae
mov
test
ja
inc
cmp
cmp
add
fidivrl
stos
and
ljmp
ret
ja
push
ja
adc
pop
push
aad
jle
es
out
notb
dec
inc
add
movsb
nop
push
gs
lods
mov
mov
sub
sti
xchg
xor
pop
out
dec
inc
ficomps
rcll
sbb
mov
fdivl
std
add
les
or
notb
sub
inc
outsl
xchg
mov
movsl
scas
bound
pop
insb
pusha
cwtl
push
inc
movsl
mov
lods
sub
shr
sub
xor
pop
mov
cmpl
dec
mov
cld
out
sti
mov
xchg
test
lahf
and
daa
mov
jp
cli
icebp
or
mov
popa
mov
sbb
int
repz
or
xor
out
jge
pop
ljmp
pop
int3
sahf
popa
xchg
bound
push
xlat
scas
and
ret
imul
dec
out
ds
scas
push
mov
mov
jmp
sbb
sbb
mov
test
je
pop
arpl
xchg
cmpsl
jmp
jecxz
dec
ja
call
insb
pop
aad
cmp
stos
arpl
aas
inc
inc
test
xchg
addr16
test
sbb
arpl
xorb
sbb
adc
pop
push
fsubr
frstor
adc
out
or
jae
xor
sbb
add
inc
mov
push
add
jo
lret
lret
lahf
shrl
inc
jle
add
sub
les
fsubrl
adcb
cmpsl
xchg
dec
mov
jns,pn
jp
cmp
mov
jnp
or
clc
and
aas
out
add
sub
les
cmpsl
leave
push
sbb
jb,pt
jb
mov
cmp
enter
int3
xor
in
dec
push
sbbb
sti
cmp
jmp
push
add
leave
leave
dec
sub
or
dec
xlat
adc
outsb
jbe
ret
test
aas
cmpsl
test
jne
xor
mov
ljmp
cmp
rolb
out
mov
push
cmpsl
daa
rcr
and
aaa
js
arpl
scas
mov
dec
loopne
or
jne
pop
pop
dec
jg
fdivrs
hlt
int
hlt
dec
mov
sub
mov
pop
or
and
add
adc
shrb
xor
movb
xchg
rcr
mov
iret
and
ljmp
cmp
lea
ds
cmpsb
push
es
sbb
dec
movsl
cmp
inc
pop
mov
adc
xchg
sub
mov
mov
xchg
movsl
shr
call
lds
push
push
add
mov
sahf
nop
clc
dec
pop
imul
mov
fisttpll
insl
mov
arpl
loop
hlt
ficompl
popa
jmp
sbb
jmp
or
aas
or
notl
mov
int
cmp
sub
int
dec
in
stos
mov
push
lods
dec
ret
leave
sbb
push
stos
popa
shl
xchg
sbb
adc
leave
cwtl
push
mov
mov
mov
test
jmp
icebp
or
sub
xchg
pop
xchg
cwtl
xor
xor
insl
pop
movsb
inc
inc
test
xchg
enter
repz
outsb
out
cmp
cld
xor
or
lea
sbb
rorl
mov
hlt
pop
les
xlat
idivl
mov
lret
or
jbe
fwait
sub
lahf
fcomps
mov
adc
leave
cli
dec
adc
fsubrl
shll
repnz
int
loope
das
pop
aam
sub
mov
cltd
arpl
xor
inc
je
mov
and
mov
cltd
addr16
and
inc
jo
sti
fcoms
add
pusha
jb
dec
inc
leave
dec
mov
push
and
leave
sbb
call
ja
dec
test
or
xor
daa
sub
mov
cmpsl
sti
mov
push
test
lods
flds
jnp
cmc
push
cmpsl
test
jmp
cmc
inc
mov
and
cs
repz
cwtl
fistps
movsl
pop
mov
jns
pop
sub
imul
je
mov
xor
lea
stos
push
sub
lcall
mov
xchg
jnp
pop
repnz
clc
nop
and
cmp
fldl
push
out
dec
adc
dec
dec
inc
sub
jbe
fistl
mov
push
inc
lods
jge,pt
inc
jnp
les
ret
aas
mov
push
push
sahf
cmp
pop
ret
add
pop
or
mov
shlb
insl
mov
std
sub
repz
jge
add
jge
mov
jg
pop
or
lock
dec
daa
cmp
lahf
cs
add
cmpsb
js
popa
and
cmpsb
inc
xor
xchg
cld
push
stc
lret
iret
inc
jge
cltd
or
mov
xchg
addr16
ss
adc
lret
in
movsl
jg
push
inc
mov
in
aad
outsb
sub
rolb
push
fsubp
outsb
rorl
adc
lret
lea
xorl
jns
fbld
pop
inc
mov
xchg
cmpsb
cmpsl
sub
ret
cltd
sub
outsb
cmpsb
sti
push
mov
add
test
adc
rcr
inc
call
call
cmpsb
xchg
add
enter
inc
push
add
outsb
std
jno
sbbb
and
mov
js
loop
into
scas
lods
repnz
dec
data16
cmp
shrl
mov
shrl
aam
add
outsb
mov
xchg
or
popa
arpl
and
fidivrs
mov
aad
rclb
scas
enter
test
push
mov
fisubs
sbb
jg
and
or
repnz
xlat
inc
dec
mov
test
cltd
add
cs
in
mov
pop
or
js
call
xor
shrb
jnp
ficoml
sub
mov
int
pop
int3
add
push
lods
insl
test
inc
imull
push
stos
nop
and
in
pop
pusha
pop
push
aam
outsb
add
out
mov
mov
inc
std
or
out
cwtl
stos
std
shrl
aam
into
xor
ljmp
adcl
push
test
scas
push
gs
call
std
add
test
ret
mov
mov
dec
scas
cltd
sbb
xor
and
imul
dec
into
sub
lret
jmp
out
lock
ja
nop
test
jg
add
vcvtss2si
addr16
sbb
or
dec
cmc
outsb
lds
int
ret
and
jo
inc
push
mov
push
push
data16
imul
clc
sahf
cmp
mov
push
push
add
cmp
je
ss
xrelease
inc
inc
subl
mov
push
push
pop
test
lret
cmpsb
push
pop
jecxz
idivl
pop
das
mov
lret
add
xchg
jecxz
das
imul
lock
and
ja
into
insb
or
and
addr16
nop
and
cmpsl
dec
pop
ss
and
fisubl
jge
loopne
adc
roll
ss
stos
in
pop
test
sub
rcrl
stc
add
das
cmp
mov
jo
sub
push
jmp
out
xor
cli
js
xlat
xor
mov
ja
jg
xchg
add
ja
xchg
cmp
cmp
sahf
inc
notb
in
ss
ret
inc
popa
ss
xchg
dec
inc
test
test
or
push
popa
stos
or
cs
jg
jmp
fiaddl
inc
aas
cmp
push
jae
es
push
loop
jnp
adc
xchg
xchg
inc
scas
lock
lahf
jb
xor
and
fstpl
mov
sub
loope
sbb
stos
xor
ljmp
mov
jmp
inc
leave
jge
lret
sub
in
imul
repz
mov
loope
stos
loope
pop
push
mov
push
jnp
cmc
test
inc
push
mov
pop
aad
and
inc
jno
pop
les
lahf
mov
mov
mov
ja
es
push
mov
out
push
lcall
sbb
mov
mov
les
jbe
iret
stos
icebp
or
add
mov
int3
cmpsl
ja
sbb
or
mov
or
or
dec
sub
scas
aas
jmp
adc
aam
push
aad
mov
fcoms
jno
int
test
push
fwait
jns
sub
mov
iret
adc
les
mov
out
jmp
mov
jns
and
jno
mov
sbb
stc
leave
fidivrl
fs
push
xchg
adc
cmc
mov
add
mov
mov
xchg
dec
mov
push
xchg
test
test
push
mov
test
icebp
ljmp
je
call
sub
pusha
pop
cltd
mov
aad
loope
dec
and
mov
cmp
cs
sbb
loope
loopne
push
mov
or
jmp
test
dec
push
pop
outsb
mov
cmp
push
out
push
filds
arpl
rcrl
xchg
repz
stos
add
fbld
mov
or
das
daa
fstpl
pop
sbb
cmp
lret
mov
movsl
andl
fildl
dec
lahf
sti
mov
and
mov
adc
int
xchg
out
stc
out
xchg
fildl
repz
jae
inc
rorb
ss
iret
ret
and
popa
rorl
jp
dec
mov
aaa
fldl
pop
ret
xchg
popf
dec
jb
dec
pop
shrl
push
cmp
push
sbb
mov
and
neg
test
mov
pop
inc
ficoms
insl
lock
outsb
adc
xchg
xchg
test
dec
jmp
lea
in
loopne
add
pop
adc
dec
dec
and
cltd
mov
loopne
inc
xchg
sahf
loope
test
cmpsl
in
aam
adc
fwait
enter
addr16
lret
pop
loopne
mov
cmp
je
mov
lods
jg
daa
jns
xchg
jmp
mov
enter
sahf
icebp
and
inc
ss
ljmp
rolb
adc
nop
lret
shll
fmuls
cmp
lods
aam
pop
mov
popf
inc
sbb
xlat
ss
mov
in
cmp
jb
push
add
push
mov
cli
lods
je
adc
in
cs
xor
push
iret
leave
test
cwtl
call
cmp
in
insb
and
cltd
jle
out
aas
push
sbb
or
xchg
lcall
out
inc
rorb
sub
push
shrl
adcb
sub
or
out
rorl
inc
dec
jne
sbb
sti
push
mov
in
jmp
mov
lret
push
lahf
pop
je
aaa
rcrb
lret
daa
pop
enter
inc
stos
out
iret
ljmp
sub
cwtl
xor
cmp
mov
sbb
xor
test
and
push
dec
hlt
sub
lods
stc
pop
inc
ljmp
xorl
and
pop
xchg
push
aaa
mov
adc
fstpl
dec
pop
jae
ljmp
dec
push
jecxz
pop
cli
push
push
scas
hlt
popa
jae
cmpsb
mov
iret
and
push
loopne
adc
insl
rorb
inc
pushf
mov
lcall
das
push
add
mov
out
out
aam
je
ret
push
dec
into
mov
adc
pusha
mov
pop
out
scas
aad
mov
js
das
push
fnop
popf
inc
xor
or
jle
mov
and
pop
insl
cmp
or
mov
movsb
call
ret
mov
add
aam
popa
push
dec
mov
push
loope
sub
cmp
fimuls
mov
jecxz
gs
out
add
cmpsb
inc
pop
add
pop
jle
ss
adc
pop
daa
adc
dec
jae
in
out
fisubrs
push
test
popf
xor
and
shrl
loopne
mov
ret
dec
data16
xor
mov
lret
mov
add
sbb
xor
inc
stc
lods
jp
mov
jg
xchg
mov
add
push
repz
into
cld
cmp
push
test
repnz
push
sub
mov
pushf
mov
orb
jecxz
mov
outsl
lahf
mov
or
xor
or
popa
dec
insb
ficoml
shll
movsb
xchg
adc
cmp
popf
inc
mov
iret
xchg
out
loope
adc
jp
ret
and
sub
pop
fiadds
pop
loop
ja
fs
push
push
mov
mov
call
xchg
cmp
pop
push
ljmp
inc
lahf
hlt
and
dec
mov
dec
movsb
xchg
scas
pop
arpl
jno
or
ret
or
inc
out
adc
add
orb
inc
dec
pop
pop
js
pop
lea
mov
dec
push
push
cwtl
xor
mov
pop
push
fidivl
jge
xlat
jmp
out
call
push
jno
test
rorb
int
jge
orl
cs
js
xchg
inc
je
aas
xor
mov
loope
cmpsl
ss
mov
add
andl
adc
jl
jmp
jns
or
sbb
mov
or
scas
cmp
jecxz
test
stos
mov
push
adc
popa
lret
fcomip
and
sbb
into
jg
outsl
xchg
stos
add
cld
pop
fwait
adc
mov
es
stos
scas
imul
call
xchg
loop
lahf
pop
into
mov
jne
lods
jno
ds
add
pop
callw
negl
add
inc
inc
data16
popa
and
mov
mov
dec
mov
lret
mov
rcll
sti
cmp
into
pushf
loop
icebp
das
inc
dec
add
mov
inc
xchg
push
jnp
xchg
cli
mov
fadds
lret
or
jg
mov
and
cmp
inc
movsb
movsl
out
repz
fiadds
mov
fucom
mov
add
xchg
outsb
sti
adc
cmp
xor
xchg
push
or
pop
jmp
les
popl
mov
inc
jge
inc
adc
fisttpll
je
shll
enter
icebp
push
mov
pop
movsl
jnp
pop
or
stc
stc
or
inc
fwait
inc
xchg
push
jle
or
sbb
out
fiadds
inc
fnstenv
and
shll
pop
adc
cmovno
imul
adc
movsl
setne
and
adc
mov
mov
xchg
xor
sub
jo
shlb
daa
pop
xchg
and
movb
mov
jmp
ds
or
jae
sbb
mov
lods
mov
sub
out
nop
cmp
in
pop
mov
and
mov
mov
lret
xchg
aad
ja,pn
jmp
sahf
push
jns
or
imul
cld
aam
add
out
outsl
mov
mov
mov
aad
bound
pop
jp
daa
mov
push
xchg
cmp
add
js
xor
pop
popf
dec
fidivs
dec
movsb
push
xchg
insb
ljmp
int
pop
pop
mov
sbb
mov
stc
xor
jnp
call
lahf
adc
cld
cmp
test
add
sbb
scas
pushf
imul
test
ljmp
push
stos
sub
mov
jecxz
es
sub
testl
mov
mov
int3
push
push
push
sub
fs
xor
inc
mov
cmp
incl
push
les
jle
dec
cld
fcoml
lret
imul
cmp
push
loop
sahf
daa
cltd
mov
cwtl
mov
cmp
sub
sti
xlat
js
inc
das
mov
out
or
xchg
scas
js
ljmp
leave
std
xchg
sbbb
pop
sub
xchg
out
stos
rcrl
push
cmp
stos
andl
push
movl
fisttpl
imul
add
or
testl
jb
imul
sub
cltd
pop
in
cs
add
xchg
xchg
sbb
lods
add
ja
cltd
in
out
call
aam
stos
pushf
je
mov
movups
xorb
mov
push
jns
hlt
dec
mov
stc
out
and
or
in
or
push
adc
fucom
push
addr16
movsl
lret
adc
lock
jns
mov
xchg
inc
dec
aas
std
xchg
push
mov
test
pop
jg
sahf
ljmp
or
xchg
cmp
pop
cmpsl
notl
jns
jbe
jbe
cmpsl
mov
pcmpeqb
popf
loop
or
fldl
xor
or
or
xor
fsub
lods
leave
subl
and
xchg
call
xor
lcall
push
xchg
mov
mov
hlt
hlt
xchg
mov
mov
stc
jno
dec
in
lods
test
fldcw
shl
stos
stc
ret
push
outsl
jp
xor
xor
mov
cmc
clc
rcll
push
push
sbb
enter
fs
mov
int
scas
push
sbb
mov
ds
clc
add
adcb
mov
out
cs
lret
mov
test
adcl
testl
pop
ficompl
inc
shrl
lcall
mov
jg
or
xchg
scas
ret
push
incb
cmp
push
out
shufps
push
jo
enter
jmp
cmp
les
or
mov
inc
scas
shl
pop
addl
test
jno
pop
mov
sub
add
icebp
gs
jnp
loope
or
fcompl
into
xor
push
fs
nop
adc
pop
je
ljmp
push
mov
lahf
xlat
jg
gs
mov
inc
add
or
and
and
in
je
lods
pop
add
jecxz
push
aad
leave
pop
fsubl
adc
xchg
sti
jb
jae
aad
cwtl
jg
lods
inc
fidivs
gs
mov
insl
jle
insl
push
pop
aam
mov
lcall
jnp
sub
shll
cmp
and
movsb
or
movsl
mov
jne
push
or
test
scas
clc
dec
scas
out
sbb
std
add
mov
aas
adc
mov
leave
push
stos
push
pop
stos
out
loop
pop
test
mov
popa
push
test
xchg
nop
adc
shr
push
or
push
and
test
or
push
lods
pushf
daa
mov
add
dec
push
inc
cmp
mov
cli
add
repz
mov
outsl
add
testb
sbb
add
dec
inc
and
stos
mov
negb
mov
push
jp
popf
lcall
lds
push
loop
test
popa
jecxz
adc
cmc
test
cmc
jle
aad
inc
mov
out
ds
aas
jno
jle
add
pusha
leave
sbb
bound
adcl
mov
out
mov
aam
mov
and
sub
mov
nop
and
add
js
xchg
adc
xor
icebp
jl
cmp
dec
out
mov
xchg
mov
sbb
ljmp
mov
or
mulb
inc
insb
jns
mov
adc
dec
cmp
orb
add
xor
inc
mov
loope
inc
push
mov
jmp
sbb
rcll
es
movsb
enter
fucomp
mull
loop
cwtl
adc
jge
mov
and
jnp
lods
popa
mov
sahf
xchg
popa
xlat
inc
enter
dec
xchg
out
out
pop
sub
xchg
stc
sbb
fsubs
adcb
mov
lods
mov
push
rdtsc
adc
mov
cmp
adc
or
push
and
or
add
mov
stos
xchg
or
into
cmp
push
outsl
cmpsl
mov
push
push
mov
movl
ds
xchg
or
or
mulb
cmpsl
jmp
adc
inc
xchg
xchg
or
loop
cmc
cmp
rcrb
pop
movsl
pop
movsl
dec
fstpt
push
xchg
dec
sub
test
mov
cwtl
mov
inc
sbb
fidivrl
push
adc
mov
fstps
sahf
es
inc
test
or
adc
mov
in
sbb
testb
test
push
mov
push
out
mov
popl
cwtl
jns
lahf
mov
push
mov
add
mov
push
test
aaa
jge
xchg
push
mov
or
std
or
mov
mov
jle
or
jo
je
or
mov
stc
push
lea
sub
jae
dec
in
sbb
push
lret
adc
out
jp
inc
adc
xlat
jp
stc
idivl
xchg
xchg
fs
pop
adc
and
jmp
adc
jo
inc
test
loop
push
xor
or
test
add
jne
sbb
mov
outsl
mov
mov
fbstp
cmp
fisttps
lahf
mov
cmp
mov
arpl
in
mov
es
movsl
push
popf
or
adc
xor
repnz
jg
xchg
dec
pop
out
sar
adc
shl
orl
fcmovnbe
insl
sbb
pop
adc
in
lock
in
push
negb
enter
hlt
cmp
sub
xchg
aad
iret
or
test
pushf
out
pop
cmp
mov
and
jno
fisttps
jae
mov
sub
out
repnz
xor
xchg
mov
pop
inc
mov
or
aam
or
out
mov
lcall
cmp
js
sub
or
lods
sub
js
adc
cmc
pop
xor
xchg
gs
fisubl
icebp
push
popa
js
movsl
sbb
jge
xor
in
stc
mov
mov
cli
insb
sbb
clc
dec
ja
add
rolb
into
cwtl
mov
sbb
and
sarb
dec
in
adc
cs
xor
loope
rcl
outsl
mov
dec
jno
pop
sbb
rcr
data16
push
fidivrs
lret
fimull
out
and
enter
movsb
cmpsl
inc
add
dec
push
fisubrl
jo
js
xlat
imul
lea
sbb
add
mov
in
cli
filds
nop
scas
jbe
js
xor
xlat
xchg
mov
pop
lahf
or
stos
mov
call
lods
stc
adc
adc
or
or
out
jns
iret
and
enter
fistps
jae
lahf
outsb
dec
mov
add
adc
adc
andl
jl
mov
rcrb
outsb
in
lahf
cli
iret
call
mov
xor
addr16
lock
pop
insl
cmp
loopne
nop
clc
mov
jnp
sub
cwtl
int3
imulb
enter
mul
dec
pop
pop
sub
ret
sub
mov
fnsave
movsl
dec
mov
cli
in
or
or
jecxz
nop
inc
inc
jb
and
std
add
dec
jg
xchg
mov
add
adc
lods
lods
andb
sahf
xchg
fcomi
cltd
out
sbb
lock
stos
adc
rorb
les
cwtl
fldt
clc
dec
cmpsb
dec
add
mov
pop
mov
testl
hlt
sub
cmp
das
sahf
xor
dec
push
push
test
mov
pop
mov
out
cmp
shlb
lds
jg
push
je
dec
stos
pop
pop
sub
jae
xchg
outsl
jns
call
addr16
stos
sub
lods
stc
js
repnz
movsl
push
cmp
fnsave
pop
and
jecxz
call
dec
ljmp
test
pusha
or
cmc
insb
int
imulb
mov
mov
roll
sbb
int
and
adc
lret
jae
inc
sub
das
push
xor
sub
je
test
inc
repz
mov
and
add
out
lea
out
lret
xchg
push
ja
xor
dec
inc
and
pop
fsubrs
and
rorl
popf
iret
mov
fdivr
push
mov
or
xrelease
outsl
sub
imul
sbb
test
leave
ss
aam
shll
daa
fs
shll
fwait
test
and
mov
push
faddp
aam
add
call
mov
popf
cmp
add
pop
mov
ss
rcrb
rclb
mov
mov
xlat
push
mov
fnstcw
mov
mov
punpckhbw
add
gs
mov
xor
mov
insb
push
and
xchg
xor
xchg
fistps
fistl
mov
test
dec
stc
or
mov
sub
scas
divb
lahf
ficoms
arpl
ret
iret
push
inc
imul
in
mov
movl
sbb
loop
mov
jge
inc
jne
scas
sahf
dec
lahf
dec
mov
jecxz
inc
mov
imul
fistpl
cmpl
jle
int3
mov
shll
pop
pop
sub
and
fsubrl
xchg
mov
xlat
push
divb
jl
inc
pop
jns
icebp
lret
icebp
inc
ds
pop
testb
int3
xor
ret
sub
push
jns
adc
adc
pop
push
rcrb
fbstp
ljmp
mov
adc
lods
dec
negb
pop
push
ja
jne
test
jp
imul
es
push
lds
push
jle
fwait
jbe
jbe
or
insb
sbb
andb
shll
imul
or
sub
outsb
cmp
mov
jo
fmul
lds
lahf
mov
adc
test
pop
scas
and
cmp
fldcw
stos
cltd
fistpl
cmp
and
cmp
jbe
or
shrl
lret
and
jecxz
cld
out
cltd
test
fisttps
sub
scas
int3
mov
xchg
xchg
mov
jp
mov
movsl
inc
or
insl
pop
out
xor
outsb
or
jmp
xlat
mov
pop
enter
ret
gs
loop
mov
test
inc
mull
sahf
in
dec
and
pushf
pop
enter
and
cmc
std
pop
pushf
in
clc
sub
lds
test
xor
pop
imul
adc
mov
cwtl
sahf
push
mov
cmpsl
clc
es
mov
adc
fs
sbb
push
and
adcl
mov
lahf
xchg
push
test
and
xor
pop
test
sbb
sbb
test
fsubl
mov
das
inc
mov
jl
dec
out
mov
pushf
jae
lahf
scas
xchg
sub
out
into
enter
into
mov
sub
xor
lret
scas
movsb
cmp
mov
and
testb
add
aam
test
test
pushf
mov
aam
add
cltd
mov
ret
or
addr16
lcall
and
shrl
mov
aas
imul
xor
fwait
xor
divb
or
movsl
movsl
inc
add
xor
fmul
add
adc
movsb
jp
cmp
out
inc
stos
cwtl
lods
enter
mov
jmp
test
lret
cmp
mov
pop
or
xchg
nop
pop
mov
lahf
in
jg
dec
imul
sarb
fcompl
dec
in
enter
enter
mov
xchg
cmp
xor
and
out
jle
adc
jb
mov
or
inc
pop
xlat
jle
jecxz
mov
push
xchg
movsb
cmp
add
lods
hlt
lret
sahf
or
mov
xor
fmul
hlt
das
int3
fstps
ret
pop
pop
movsl
test
lds
fnsave
add
pop
and
dec
pushf
std
fadd
int3
dec
inc
push
fidivs
mov
int3
xchg
push
push
das
mov
rolb
fisubrl
rorb
insb
mov
in
push
adc
and
and
inc
mov
ljmp
mov
xchg
ret
add
mov
das
push
dec
push
lcall
scas
sub
adc
jnp
ljmp
test
pop
mov
test
mov
add
cmp
mov
add
leave
dec
and
dec
mov
scas
cltd
cmp
mov
lds
cmp
mov
sahf
lahf
in
iret
ret
sbb
aam
clc
mov
shrl
jns
shll
popa
dec
mov
loop
inc
and
ret
and
outsl
aas
scas
push
add
out
cmpsb
dec
push
insl
add
dec
loope
pop
cli
dec
xor
pop
add
out
incl
mov
pop
pusha
adc
adc
jp
hlt
pop
shrb
adc
pop
ds
mov
test
lret
ret
dec
mov
dec
jle
sbb
data16
mov
fisttpl
data16
push
das
pop
sti
add
arpl
daa
stc
insb
xchg
inc
stos
cwtl
jbe
jo
cs
push
test
adc
jb
mov
xor
adc
jno
pop
in
adc
ja
sub
test
insb
pop
jl
push
notl
arpl
iret
in
xchg
adc
subb
mov
pop
jns
in
test
clc
mov
xchg
repnz
data16
xchg
pop
pop
shlb
xor
stos
sahf
icebp
stos
mov
mov
sarl
dec
cmp
std
xor
inc
mov
mov
roll
ret
stc
push
rcr
addb
cmp
std
mov
movsl
dec
cmp
mov
push
fs
loop
or
push
adc
movsb
xchg
daa
scas
inc
iret
add
std
shl
sbb
stos
or
jle
xchg
test
or
adc
xor
fsub
add
inc
daa
mov
test
sub
int
sub
sbb
lahf
push
sub
lcall
mov
bound
xlat
fnstsw
in
pop
test
cltd
les
push
fs
mov
dec
cli
jnp
aam
jecxz
push
add
mov
cmp
pop
fistpl
mov
mov
insb
pushf
leave
adc
cmp
and
dec
idiv
sub
dec
jnp
ret
movsb
ja
mov
xor
xchg
repz
jg
loopne
fwait
icebp
sarl
inc
outsl
inc
fiaddl
pop
add
pop
gs
lods
cmpsl
sti
add
enter
jns
int
dec
out
jl
xor
rol
or
cwtl
movsl
mov
int
popf
insl
jo
imul
out
icebp
je
mov
pop
push
fists
pop
jle
ja
or
jle
pusha
or
insb
cwtl
jno
fimuls
cwtl
sbb
dec
or
push
aas
jp
sar
push
xor
cld
fdivrp
jne
sbb
fistl
sub
or
fs
xchg
pop
mov
sbb
add
popa
add
out
mov
mov
addb
ffree
mov
pop
stc
sub
into
inc
cmc
adc
sbbl
fs
xchg
cmp
scas
mov
jp
sub
cli
and
dec
mov
xor
ret
imul
mov
add
clc
test
pop
arpl
sbb
dec
repnz
ds
cmp
mov
insl
sbb
add
fisubrs
and
dec
cmp
jns
mov
xor
imul
int3
sbb
movsl
dec
mov
fs
or
cmc
call
nop
inc
dec
dec
fwait
popf
xor
popf
repz
imul
pop
ret
pop
cmp
pop
adc
rol
mov
push
mov
adc
adc
fidivrs
dec
fs
fiadds
mov
inc
pop
stos
test
sbb
pop
sbb
insl
arpl
shll
adcl
nop
adc
lea
sbbl
mov
xchg
rcrl
and
into
out
sbb
in
fstpt
stos
xchg
loopne,pn
lret
shl
jno
mov
inc
jp
popf
into
inc
or
std
jle
add
pop
jne
aam
xsha1
cmpsb
mov
xchg
jmp
and
hlt
inc
xchg
aaa
fiaddl
jge
jnp
daa
fstps
dec
imul
cmp
loopne
sti
adc
lcall
sub
cmpb
add
and
test
repz
lret
jp
gs
repz
fs
add
adc
jp
aaa
cs
cwtl
and
mov
mov
call
and
pop
jge
inc
mov
pop
lret
xchg
js
ds
popa
bound
push
mov
movsl
pop
inc
mov
lahf
fwait
cmp
jo
hlt
dec
je
cmc
xchg
sub
inc
outsb
pop
dec
add
fs
jb
cmp
cmpsb
xor
or
sbb
pop
push
and
push
rorl
js
jg
jbe
sbb
xchg
mov
inc
inc
inc
ds
xchg
push
sub
shl
dec
sti
int
call
sub
and
rol
push
sbb
mov
das
pop
cmpsb
adc
xor
push
out
mov
mov
jmp
dec
sbb
ret
push
or
push
lock
popa
inc
dec
int
jmp
icebp
xchg
xchg
sbb
lar
lds
cmp
adc
movsl
imul
lods
and
mov
dec
js
and
fstl
push
sbb
mov
adc
xor
push
outsl
ret
mov
int3
or
popa
mov
dec
dec
outsl
pop
mov
int3
out
pop
push
jle
jns
je
out
fisubl
cmp
dec
movsb
pop
add
xor
or
outsb
in
repz
arpl
into
clc
outsb
mov
add
ficoms
imul
xlat
arpl
stos
jae
pop
xor
add
sub
stos
in
jle
leave
mov
addr16
jge
or
shll
rcrl
inc
insl
dec
sub
xchg
pushf
incb
push
mov
inc
jae
inc
jl
inc
xchg
movsl
mov
outsb
shrl
test
and
adcb
push
mov
popf
or
jl
xor
jnp
scas
ljmp
ljmp
pusha
xchg
repnz
inc
shlb
and
pop
loopne
imul
mov
loop
dec
mov
js
les
cmc
jl
repz
sarl
repnz
mov
mov
lret
sub
xor
or
aas
fsts
fadds
fsubr
js
push
mov
lds
vpsubb
mov
movsl
push
insl
test
push
outsb
fdivrl
sar
fiaddl
movsl
jmp
mov
jne
scas
and
dec
sbbb
mov
daa
das
jp
fsubl
cmpsb
mov
idiv
fucomi
dec
mov
dec
inc
mov
aad
jg
cmpsb
pop
mov
test
mov
js
mull
rclb
add
ficompl
jno
and
inc
adc
pop
sbb
mov
push
loope
cs
pop
aas
iret
neg
data16
xlat
inc
das
push
push
xchg
popa
sbb
pop
outsb
in
aam
push
adc
cltd
into
dec
push
mov
xor
mov
gs
jae
mov
add
push
lds
aas
jle
xchg
cmpl
adc
adc
cs
stos
pop
call
stc
dec
insb
jns
fisttpl
push
cmp
ret
das
mov
ret
sub
shlb
aas
mov
inc
cmp
aam
out
dec
mov
jp
dec
jns
cli
cmp
das
ficomps
daa
shlb
ss
mov
orb
cmpsl
xchg
popf
icebp
jmp
or
hlt
dec
xchg
jmp
mov
sahf
jg
pop
rcl
cmpsb
jp
sarb
loope
movsl
cmpsl
ss
jb
and
sbb
xchg
clc
cld
mov
in
aam
push
out
or
mov
cmc
test
rclb
in
xchg
dec
lret
imul
lods
dec
test
aad
adc
push
lcall
inc
pop
dec
mov
dec
loope
xor
repnz
xchg
push
bound
test
jno
orps
add
jno
cmp
push
mov
cmp
clc
repz
mov
xchg
hlt
fldcw
test
divb
cmpsl
push
adc
push
nop
mov
pushf
fldl
arpl
mov
or
outsl
fnstsw
fstl
ss
and
ss
imul
dec
jnp
in
enter
pop
jmp
or
inc
mov
cmpsb
mov
adc
aaa
cmp
in
int3
pop
in
daa
xlat
adc
and
or
sbb
hlt
or
sbb
ss
pop
adc
add
inc
mov
inc
jo
mov
cmp
mov
std
out
outsl
mov
and
insb
sbb
jmp
jb
mov
stos
xor
push
add
and
mov
scas
xchg
in
shll
add
cmp
js
dec
ja
and
add
dec
ss
inc
xchg
sbb
loopne
sarl
adc
test
push
sarl
sbb
hlt
push
inc
loop
or
outsb
mov
mov
or
outsb
xor
in
test
xchg
cmp
test
cmpsb
and
jp
jnp
xchg
es
xor
popa
jecxz
decb
stos
sbb
mov
dec
lahf
sbbb
mov
idivb
add
pop
int
xchg
cmp
aas
nop
mov
xchg
gs
mov
lock
push
jg
add
pop
pop
sti
pop
lock
or
stc
hlt
ja
aaa
dec
sbb
lock
aam
gs
jbe
ds
popf
push
pushf
pop
lret
ja
lock
ret
mov
outsb
mov
and
notl
sub
fwait
mov
xchg
pusha
outsb
loopne
jg
pop
mov
jno
dec
out
in
cmc
mov
sub
daa
test
fidivrs
div
out
scas
lret
push
clc
sbbl
dec
jbe
mov
mov
sbb
cli
in
push
outsl
add
in
aad
movsb
imul
mov
sbb
int
mov
pop
out
mov
adc
jnp
sbb
pop
sar
add
scas
xlat
clc
push
jecxz
outsb
out
sub
cli
aas
jne
add
mov
js
mov
aad
rorl
les
dec
mov
popf
lret
addr16
mov
jbe
fbstp
xchg
jp,pn
adcl
imul
mov
insl
dec
rolb
movsb
fsub
mov
je
mov
cld
test
in
adc
ret
xchg
and
lods
ds
cmp
std
adc
icebp
sahf
pop
cltd
lret
lret
pop
ljmp
or
jae
inc
cwtl
popf
inc
cmp
fwait
add
fstps
scas
pop
push
incb
andl
dec
xorl
inc
addr16
in
rclb
and
in
cld
repz
loop
cld
fcmovnbe
rolb
cmp
pop
daa
push
inc
add
pop
iret
sbb
push
add
inc
xchg
sahf
xchg
cwtl
orb
cmp
sub
jo
inc
and
jne
outsw
mov
add
out
imul
hlt
add
mov
and
sub
loopne
push
in
cmp
mov
imul
jp
mov
fisubrs
rcll
out
mov
pop
out
addr16
and
jge
sarl
movsb
aas
in
mov
fucomip
lea
inc
ret
sub
xchg
mov
adc
fildll
add
jmp
bound
sub
nop
xchg
rorl
or
xor
lods
push
adc
sub
mov
xor
mov
lock
sub
mov
xchg
cmp
pop
popf
les
movsb
lret
aas
jne
cltd
fisubs
rorl
xor
sbb
pop
mov
loopne
xchg
cmp
push
or
mov
mov
stos
ja
popa
xor
xor
test
adc
xorb
aas
pop
xchg
arpl
cmp
icebp
popf
sub
rorb
sti
cwtl
mov
fiaddl
jmp
iret
mov
pusha
cli
push
fisubs
outsl
mov
pop
mov
int3
or
mov
cmp
sbb
sub
movsl
mov
rcrb
push
add
jmp
ljmp
in
push
je
jne
popf
mov
lock
dec
pop
cmp
pushf
mov
fldcw
fistl
insb
inc
mov
dec
adc
int3
iret
mov
movsb
int3
inc
inc
cmc
and
mov
push
and
outsb
jne
sub
xor
jg
cs
ja
in
ret
jle
push
lret
popa
xor
sbb
daa
pushl
lret
push
fsubrp
lret
mov
jne
icebp
jno
pop
sbb
cmp
lcall
leave
and
cmp
test
sbb
dec
test
imul
mov
fmuls
xchg
test
sub
push
out
push
jp
inc
je
mov
and
pop
mov
fldt
fidivs
pop
jg
ret
inc
jecxz
mov
arpl
lea
shlb
adc
int3
repz
cmp
gs
movsb
mov
sub
cmp
sub
jl
popaw
push
cmp
mov
mov
mov
test
iret
jle
or
add
mov
push
xchg
jl
notb
sub
inc
scas
lret
shlb
ss
push
and
adc
clc
int3
dec
push
sbb
js
cmovnp
rorb
mov
dec
lahf
xchg
ret
decb
pop
lods
loope
xchg
xor
gs
inc
testl
daa
std
in
stos
mov
lahf
and
sbb
or
into
xor
adc
bound
push
fadd
xchg
les
insb
fs
sbb
dec
pusha
pop
and
push
sbb
ficomps
jnp
xor
test
mov
fstl
jnp
cltd
inc
mov
jb
inc
add
add
sbb
popf
inc
leave
adc
aam
ss
mov
cli
inc
fcompl
loop
or
ret
sbb
stc
fucom
push
mulb
sbb
inc
out
sbb
mov
scas
sub
pop
add
ljmp
stos
sub
out
jb
jo
jnp
adc
mov
xor
and
fdivrs
test
dec
jg
ds
jne
add
sub
cmp
lcall
sbb
pushf
cmp
sbb
mov
int
sub
xchg
sahf
sub
repz
mov
jl
cmp
insl
leave
xor
cmp
xchg
inc
inc
pop
inc
push
push
pop
mov
mov
mov
dec
push
dec
pop
imul
mov
cmp
dec
jne
ffree
jmp
add
push
cld
notl
leave
push
mov
js
movsb
push
sub
lock
fidivs
mov
sub
insb
aad
aam
or
sub
inc
aas
jp
sub
cmp
icebp
lea
cmp
fnsave
jge
cwtl
sbb
cmp
das
cmpsb
add
aas
inc
lret
test
push
imul
mov
cmp
cmp
cmp
pop
and
xchg
mov
fcoml
mov
fmuls
pop
xchg
pushf
jne
mov
shlb
pushl
test
adc
push
inc
cmp
cmpsb
jne
mov
sub
stos
mov
out
adc
sbb
pop
xlat
inc
in
sbb
cmc
mov
inc
pop
test
xchg
fidivs
ljmp
xlat
jp
push
stos
clc
push
mov
push
push
dec
mov
fildll
out
std
inc
xchg
jb
and
dec
sub
lds
sbb
stos
inc
fbld
push
jge
mov
mov
lods
and
dec
movlps
out
pop
das
popl
cli
xlat
sbb
and
jbe
pop
nop
dec
inc
inc
jo
mov
add
mov
jp
lret
dec
adc
cmp
inc
adc
std
mov
pop
mov
xchg
or
mov
je
pop
xchg
das
clc
insb
mov
arpl
incb
fsts
adc
jecxz
inc
push
ret
xor
outsb
and
mov
mov
push
add
nop
push
pushl
movsb
push
push
jle
xchg
push
in
loopne
mov
imul
lahf
mov
mov
lock
xor
cmpsb
fucom
pop
jmp
test
adc
fnsave
and
je
fs
fwait
pushf
mov
negb
add
shll
icebp
sbb
and
jns
push
pop
mov
push
push
insb
mov
cmpsl
jge
sub
mov
xlat
xchg
neg
je
std
cmc
inc
stos
aas
jl
jle
iret
mov
push
cmp
push
test
push
test
ret
mov
xchg
inc
das
imul
adc
adcl
jo
std
adc
push
or
int
addr16
cmp
jmp
ds
std
mov
cltd
sbbb
inc
ljmp
mov
jmp
iret
xchg
push
dec
incb
data16
into
push
xchg
cwtl
adc
cwtl
dec
sbbl
out
fimuls
xchg
mov
xchg
jl
push
jnp
jbe
imul
ret
std
ret
push
sub
sbb
ficomps
dec
sar
lds
sub
xchg
cmpsl
push
cwtl
bound
js
or
rcll
dec
jmp
lods
jns
xchg
fcomi
arpl
pop
ror
cli
mov
rol
push
ficoms
mov
lock
xchg
sbb
fstl
mov
push
sub
pop
je
adc
das
xor
shl
incb
les
sbb
sbb
aad
adc
insb
pop
push
lret
shll
dec
xor
js
in
push
cmp
sub
negl
and
or
ss
inc
cmp
leave
push
mov
xor
je
mov
cld
test
shlb
dec
jo
pop
or
sbb
dec
ja
cmc
insb
scas
fwait
insl
adc
rcrl
cwtl
das
lcall
sbb
or
fidivrl
pop
push
rorb
test
ljmp
je
cltd
and
mov
inc
insb
pop
or
out
lods
inc
dec
out
cmp
push
inc
xchg
dec
js
pushf
sbb
push
rcll
inc
mov
jns
mov
dec
iret
inc
jl
in
mov
mov
lahf
fiadds
jns
mov
inc
out
push
dec
push
dec
or
add
addr16
aaa
sub
or
fcom
and
ficomps
mov
mov
mov
mul
and
std
mov
adc
cmpsb
push
lds
adc
pop
jmp
xchg
nop
scas
dec
add
sub
mov
orl
pop
jge
sbb
mov
mov
es
test
stos
push
aas
mov
test
lret
mov
or
lock
lret
out
push
pop
test
mov
cwtl
clc
xor
cwtl
das
fsubrl
loope
repz
cwtl
jmp
inc
mov
in
xor
movsb
jb
test
add
dec
stos
andb
add
and
sub
addr16
and
test
das
lods
bound
push
leave
inc
mov
xchg
aas
test
push
jbe
mov
add
out
inc
jg
jae
addr16
xchg
jp
lahf
xor
out
mov
add
out
inc
fwait
xchg
dec
pop
fidivl
push
pop
jg
xorb
iret
fisubrs
mov
out
es
aad
mov
xor
aad
add
pushf
xor
inc
out
jmp
push
mov
mov
lock
mov
sbbl
add
mov
lea
mov
mov
stos
or
dec
mov
lcall
inc
movb
fiaddl
scas
push
cs
jbe
push
push
scas
add
into
test
or
jmp
fcompl
mov
and
adc
lods
xor
or
es
inc
lret
incl
push
stos
adc
cld
ret
adc
aad
sbb
cmp
and
sbbb
jnp
lods
incb
mov
mov
int
xchg
cmp
cmpsb
jnp
mulb
ja
sub
xchg
es
lret
movsb
lods
call
sub
stc
je
es
jns
in
ljmp
shrb
std
inc
sbb
sbb
mov
jbe
mov
add
pop
mov
shl
ret
enter
into
out
push
movsl
sbb
insl
sbb
int3
fistpl
loop
sbb
mov
movsl
xor
push
jnp
and
adc
add
sbb
loopne
cmp
xor
mov
cwtl
pop
jne
jns
lods
jo
fadds
lds
div
enter
xchg
pusha
cld
mov
test
pushf
dec
mov
push
xchg
cmp
and
arpl
adc
daa
mov
xor
lock
imul
push
mov
lcall
je
xor
and
and
xchg
jg
sti
fidivs
or
cmp
insb
xlat
or
sti
jmp
adc
add
adc
pop
in
dec
mov
jge
or
dec
sbb
pop
push
cmpsl
mov
mov
out
add
sub
rcrl
popf
sti
xor
push
cmp
lock
pop
bound
jg
adc
xchg
lods
and
mov
xchg
vrsqrtps
test
out
sbb
sub
icebp
test
jne
xchg
arpl
mov
dec
mov
inc
push
fdivp
jge
aas
pop
mov
in
add
inc
cmp
jae
pop
or
add
mov
sbb
jg
ja
addr16
xchg
jl
sub
dec
add
xchg
movsl
pop
sbb
jl
inc
mov
ljmp
in
ret
mov
jecxz
or
enter
movsb
dec
aaa
js
addr16
dec
and
cli
push
stos
jmp
and
ret
fmul
stc
mov
ficoml
mov
hlt
jmp
ss
popf
and
movsl
movsb
mov
lds
inc
out
sar
stos
fldt
add
adc
cmp
xor
dec
or
icebp
mov
fwait
jg
or
mov
or
fnstsw
cltd
jbe
cmpsl
arpl
lock
arpl
and
inc
inc
testb
roll
and
hlt
cmp
sbb
add
daa
stos
xor
jno
jecxz
out
scas
mov
loop
xchg
loop
or
hlt
cwtl
iret
adc
adc
adcb
jae
movsl
adc
jmp
out
cld
repnz
inc
mov
jo
stos
push
xor
rcr
aas
mov
insl
int
mov
ret
pop
dec
pushf
xchg
xor
das
mov
lret
lret
pop
cmc
pop
mov
and
leave
push
addr16
cmpsl
mov
xchg
daa
push
icebp
sbb
sbb
xor
mov
loope
outsb
cmp
adc
shlb
and
les
adc
repnz
sub
ficomps
and
inc
dec
xor
adc
add
mov
mov
xchg
daa
in
jne
stos
lahf
repz
dec
sub
dec
jle
ss
stc
xchg
and
in
stos
notb
and
fnstsw
xor
std
std
mov
or
adc
aaa
jno
mov
icebp
jp
hlt
das
and
adc
sub
mov
mov
jecxz
push
sbb
xor
call
jae
or
push
rcl
and
inc
jnp
pop
fmull
movsl
inc
sbb
stc
stos
jle
inc
pop
mov
call
out
jae
shlb
popa
pop
mov
push
push
jnp
fldcw
mov
repnz
xor
jo
xchg
adc
mov
jne
xor
pusha
or
add
aam
imul
in
movsb
mov
pop
loopne,pt
push
adc
test
test
add
lret
dec
nop
outsl
jbe
sub
aam
xor
inc
ss
shll
jp
neg
mov
popa
sbb
mov
cli
sbb
in
pop
stc
rorl
mov
xor
inc
rcrb
jmp
and
sahf
cltd
out
lahf
jg
push
aas
fcom
outsl
aam
cmp
imul
nop
mov
lcall
xchg
mov
xor
mov
mov
stos
aaa
adc
lods
iret
sub
mov
repz
cmp
dec
fstl
jp
pushf
add
jle
xor
mov
jmp
fisubrl
or
test
or
mov
sub
push
push
pusha
popa
jp
nop
std
push
out
ljmp
repnz
rcr
add
xor
gs
dec
and
cmp
scas
cmp
mov
enter
pop
mov
pop
or
aam
fisubrl
jbe
mov
pop
lahf
stos
mov
in
inc
das
cmpsl
cmpsb
enter
jmp
xchg
cmp
pop
pop
add
push
repnz
jl
ret
cwtl
imul
lret
jns
and
mov
dec
dec
cmc
inc
mov
cmp
pop
pop
sti
dec
pop
xchg
outsl
je
fimuls
repz
cmpl
arpl
xchg
out
je
es
cmp
cmpsb
or
xlat
xchg
mov
mov
and
or
inc
fcomi
xchg
add
aam
mov
xor
js
sub
adc
scas
inc
or
imul
mov
cltd
push
out
fistpl
icebp
cmp
dec
xor
push
ret
mov
movsl
add
push
dec
pop
mov
mov
lret
movsl
bound
and
bound
xor
pop
xchg
mov
adcl
fidivl
fistpll
cld
jl
push
ljmp
or
add
dec
test
xchg
test
jge
jg
pop
aad
loop
aas
jo
stos
movsb
mov
adc
rclb
rcll
test
popa
nop
std
jno
orb
or
sarb
dec
in
xor
ljmp
sbb
mov
and
cli
adc
push
inc
outsl
in
mov
inc
mov
cmp
jmp
fstps
test
or
aad
stc
lea
loopne
loope
ret
mov
inc
ss
jge
nop
xchg
das
cmp
shll
sub
test
add
sub
or
mov
push
sbb
inc
movsb
or
dec
hlt
into
xor
push
xchg
std
jmp
loop
push
mov
daa
roll
psraw
bound
sbbl
inc
or
push
into
mov
xor
lock
sbb
sarl
aaa
lds
test
push
mov
dec
and
or
sbb
mov
push
sahf
inc
cmp
lock
lea
fdivl
mov
inc
data16
hlt
daa
cmc
in
pop
xchg
xor
inc
fnstsw
clc
pop
aam
sub
lods
in
xchg
mov
mov
push
std
sbb
and
mov
divb
push
push
and
rorb
mov
fcoml
xchg
mov
xor
inc
mov
stos
stc
mov
add
out
lret
push
pop
dec
insl
adcl
je
mov
or
dec
inc
mov
pusha
or
pop
jmp
roll
mov
fimuls
add
push
mov
fs
imul
push
test
dec
cmp
or
lods
loopne
stos
pop
dec
sti
sbb
mov
lds
sub
mov
loopne
aam
or
jp
cld
lods
jnp
adc
xorl
inc
pusha
je
ficompl
push
sub
movsl
jge
aad
sbb
lahf
aad
loopne
dec
pop
sub
pop
cmp
cmpsb
inc
adc
aas
pusha
cmpsb
pop
inc
dec
sahf
pusha
inc
push
shrl
jbe
push
imul
leave
push
sbb
divb
ljmp
pop
scas
call
xor
inc
dec
xchg
leave
mov
daa
mov
sahf
pop
xchg
popa
pop
mov
loop
cmp
idivb
sub
in
sub
dec
mov
shll
in
loope
jae
mov
ror
push
mov
in
xor
cmp
arpl
inc
out
push
and
leave
or
cwtl
inc
and
xor
pop
sub
call
fs
or
sbb
jle
ret
mov
cld
cwtl
ja
aaa
imul
jg
and
jb
cld
inc
xchg
icebp
movsl
leave
outsl
mov
fistl
xor
inc
pop
repz
inc
push
inc
cmp
mov
mov
mov
mov
stos
iret
test
test
in
xchg
stos
and
in
jge
adc
mov
mov
mov
pop
cmp
shll
movsb
imul
mov
inc
popf
mov
xor
loope,pt
scas
mov
push
out
pop
lret
ret
jg
fisttps
pop
pop
or
addr16
imul
bound
mov
and
clc
out
and
sbb
pop
rol
cli
repz
inc
in
dec
cld
test
fs
rcrb
mov
or
jno
xor
push
nop
sbb
xor
mov
add
sub
mov
fdivrp
xor
leave
sbb
icebp
popa
xor
cmovno
and
in
push
jl
push
cmp
or
cmp
sti
nop
dec
jno
test
mov
lods
sbb
rorb
sbb
out
pop
sub
out
pop
and
andl
mov
and
sub
popa
js
into
inc
int3
cld
push
imul
push
aad
pop
imul
xchg
xchg
add
pop
out
dec
jo
aas
pop
mov
pop
inc
test
push
or
or
push
dec
dec
cmpl
psubusw
or
push
cs
sub
pop
mov
mov
pusha
xchg
lret
or
push
add
sub
and
cltd
and
pop
pop
mov
xchg
cmpl
test
mov
cltd
push
jmp
xlat
xchg
stos
aad
push
pop
stc
pop
add
into
int
pop
push
movsl
pop
and
push
ficomps
into
xchg
cmpsl
add
outsl
dec
imul
dec
mov
jg
inc
loope
or
mov
jecxz
jmp
loopne
das
shlb
insl
ja,pt
pop
or
in
xchg
js
repz
xchg
jp
imul
adc
mov
and
leave
stos
dec
jl
adc
mov
jno
lods
adc
add
sbb
cmp
cli
outsb
aam
mov
and
push
or
in
add
xor
jns
mov
scas
fnstenv
and
pop
in
sbb
dec
outsl
adcl
mov
dec
lret
cmpsb
inc
loope
mov
jmp
lds
or
ljmp
repz
insl
jo
rol
in
lds
mov
lcall
scas
loopne
push
add
pop
sub
insl
pop
add
gs
add
mov
daa
repnz
pop
in
add
and
mov
insl
mov
mov
push
js
sbb
jno
push
mov
mov
gs
int
jle
repz
nop
out
test
das
push
lcall
das
pusha
in
dec
mov
aaa
sbb
cwtl
out
mov
xor
sti
dec
das
lahf
pop
dec
insb
stos
fs
mov
add
mov
push
lret
adc
add
popa
xchg
jp
jno
in
ret
movsb
mov
popl
sub
xlat
sub
js
jmp
roll
add
leave
push
xor
xchg
ds
lods
or
out
ja
pop
outsw
mov
sahf
xor
xchg
mov
sarl
or
or
xor
clc
cmp
es
add
xor
cld
cmp
ror
das
sub
rcr
hlt
mov
dec
xchg
pop
lea
dec
xor
ja
pop
or
push
jecxz
xor
mov
jg
dec
pop
decb
idivb
sub
cmc
cltd
cmp
fninit
sub
icebp
add
stos
das
sbb
or
in
popa
mov
add
dec
test
adc
cmpsb
aam
das
sar
aaa
add
push
fcmovnb
xchg
mov
mov
out
inc
orb
outsb
icebp
xor
in
outsb
imul
inc
addb
nop
std
lods
lods
insb
pop
imul
out
mov
movsl
lods
fadd
push
dec
int3
cmp
shlb
rolb
ss
movsb
jae
jo
fiaddl
test
les
nop
popa
push
sti
scas
sbb
test
roll
insb
in
sub
hlt
sub
mov
adc
and
adc
inc
sub
push
icebp
sub
insl
mov
add
push
mulb
lahf
roll
sub
inc
add
xor
pop
dec
jmp
sub
bound
inc
xchg
repz
clc
mov
push
mov
mov
push
dec
dec
out
sarb
shl
add
push
pushf
xchg
push
test
ljmp
popa
pop
lds
fs
xor
xor
and
mov
fstps
pop
dec
loope
es
out
andb
mov
int
inc
lcall
mov
cmp
xchg
push
cmp
lcall
loope
mov
dec
cmpsb
xor
jg
xor
repnz
add
sahf
das
stos
repz
into
enter
mov
jnp
xor
sub
icebp
mov
or
or
test
push
mov
inc
cmpsl
xchg
aas
and
int
or
xor
fisubl
out
aam
sti
repnz
mov
lret
lds
sub
add
std
mov
pushf
lea
dec
mov
mov
sbbl
movsl
pcmpeqw
adc
enter
into
sub
ljmp
jle
mov
or
scas
call
inc
mov
daa
dec
pop
jp
mov
add
test
jb
in
mov
setns
push
mov
xor
ja
fisubs
jle
sti
pop
std
push
inc
cld
pop
outsl
push
ss
xchg
jno
sub
das
ss
pop
or
orb
pop
or
mov
push
loop
fwait
popfw
dec
adc
outsb
jb
jle
scas
sbb
test
imul
loopne
mov
clc
mov
adc
aad
sbb
push
fxtract
push
jne
dec
fildl
cmp
inc
mov
lret
arpl
pop
sbb
cmp
sub
js
mov
mov
in
push
mov
movhps
add
loope
mov
dec
movsb
jg
hlt
ja
xchg
add
xchg
mov
sub
dec
xor
jo
loop
out
cmp
adc
in
neg
push
and
add
jle
mov
lock
jmp
mov
loop
xchg
xor
cmp
das
add
adc
cltd
ret
jb
dec
or
icebp
pushf
adc
push
and
inc
mov
enter
in
and
adc
jb
insb
pop
repz
add
ficoml
push
and
call
out
adc
aaa
push
dec
sub
inc
lcall
fwait
mov
int
fistl
jns
imul
push
adc
cmp
je
xchg
xchg
fistpll
inc
shrl
sub
movsb
pop
loopw
das
cmpsb
dec
outsb
and
and
stc
add
icebp
ret
and
lahf
inc
adc
shl
js
popf
jmp
adc
push
mov
or
jge
mov
or
fldt
pop
je
push
addr16
inc
inc
ss
shlb
lods
inc
or
push
push
cwtl
jbe
xor
pusha
lods
stc
jnp
adc
push
enter
cmp
cmp
lcall
test
int3
xor
sub
ja
aam
call
stos
rcrb
mov
inc
fists
mov
pop
sub
mov
push
and
jecxz
insb
arpl
sub
into
or
xor
dec
adc
mov
adc
rcrb
inc
int
xchg
loope
or
sahf
ja
out
push
addr16
pop
and
ffreep
xchg
testb
push
push
sbb
je
mov
jne
mov
jno
mov
mov
inc
inc
dec
addr16
or
inc
jns
aam
outsl
test
hlt
dec
xor
sbb
divb
mov
pop
jo
xor
mov
push
fadd
mov
inc
pop
xchg
xlat
repnz
mov
xor
jb
mov
repz
fucomp
lcall
add
in
fidivrl
lret
loope
add
mov
xorl
or
adc
test
mov
in
pop
inc
ret
neg
push
and
xor
lret
pop
addl
fcompl
hlt
lods
mov
sub
cmpsb
add
aaa
dec
adc
pop
adc
mov
enter
sbb
sub
inc
lfs
inc
loop
push
aam
pop
test
ficompl
stos
loope
cmp
sbb
inc
xor
mov
lret
adc
lds
movsb
out
cmp
in
dec
jae
orb
imul
cmpsb
shl
mov
pop
in
push
or
idiv
inc
jmp
test
sub
out
ljmp
add
idivb
inc
and
push
inc
xor
xchg
sbb
push
cmpsl
pop
push
add
lds
push
out
bswap
xor
ljmp
push
xchg
xchg
sbb
std
ret
mov
dec
dec
lret
shlb
std
daa
filds
xchg
dec
cmp
inc
shrl
movsl
jne
and
sbb
jl
pushf
cli
repz
pop
mov
scas
fstpt
pop
cld
jle
mov
push
call
push
mov
cmpsl
mov
cmp
dec
mov
push
jnp
data16
lret
hlt
js
mov
data16
push
mov
mov
inc
je
insb
cltd
xor
pop
push
imul
rcl
dec
sbb
cli
inc
shlb
jno
stc
or
int3
int3
cmpsb
add
iret
insl
or
sbb
and
mov
cld
into
mov
ja
shlb
push
adc
sti
lcall
mov
sub
cwtl
or
nop
pop
add
and
nop
int
xor
inc
fnstenv
jg
out
pop
shl
int3
int3
lods
jne
lds
mov
pop
cltd
sub
inc
dec
pop
mov
and
mov
pop
arpl
sub
jmp
mov
push
lahf
push
pop
fidivl
push
subb
outsb
sti
add
inc
insl
sub
dec
jne
test
outsl
imul
inc
push
aad
push
mov
les
lds
pop
mov
dec
push
outsb
push
sbb
adc
or
imul
cmpsl
sti
stc
dec
dec
into
and
mov
mov
in
popa
dec
les
mov
cmc
mov
stos
call
mov
insb
pop
aad
addl
push
push
insb
add
push
dec
sbb
fbstp
scas
jbe
inc
into
xchg
cvtdq2ps
out
mov
sbb
or
jo
iret
in
in
pop
inc
xchg
xchg
inc
sub
movsl
add
push
sti
setl
mov
call
or
add
jo
push
psubb
je
xchg
inc
fmul
aas
jecxz
test
xchg
mov
jp
fmul
or
enter
in
int3
xchg
cmp
imul
fnstenv
mov
pop
jns
push
fs
or
jl
sub
pop
sbb
push
daa
jae
inc
fstl
int3
fstps
lds
or
xchg
fsubl
fistps
out
scas
mov
jb
arpl
xor
mov
ficoms
jmp
fwait
push
fbstp
jl
lcall
in
aam
cs
mov
out
jbe
xchg
jp
cltd
idivl
outsb
jp
in
push
cltd
push
xor
adc
mov
pop
nop
loope
or
push
pop
test
dec
push
mov
sub
inc
push
ficoms
adc
cmpsb
roll
and
push
sub
dec
cmpsl
cpuid
lods
lret
xor
sub
xor
orb
cltd
out
mov
lea
sbb
ja
jecxz
jp
das
xchg
or
xchg
fisttpll
mov
test
lock
mov
cld
movsb
mov
mov
cmp
or
pop
sbb
mov
movsb
xchg
fstps
insl
xchg
mov
cmpsb
push
divl
movsb
mul
cmp
sub
mov
out
imul
dec
loop
mov
mov
dec
mov
scas
jle
mov
pop
and
sbb
not
sub
das
jecxz
inc
int
pusha
push
cwtl
aam
mov
lret
imul
out
mov
mov
clc
mov
fnsave
adc
out
mov
cwtl
jns
out
add
dec
outsb
xchg
aam
in
adc
sbb
in
int
cmpl
popf
imull
mov
cmc
mov
or
arpl
mov
out
mov
jp
mov
mov
inc
mov
lret
into
or
inc
add
les
xor
fwait
add
mov
mov
jbe
mov
test
sbb
sub
addr16
aad
jb
out
cmp
repz
cmp
rolb
dec
push
lds
push
fdivl
or
sbb
mov
stc
out
jp
cmp
adc
int
roll
aaa
aaa
pop
ret
dec
mov
xor
test
addr16
mov
jne
push
shrb
inc
faddp
sbb
mov
xlat
ret
lea
scas
mov
jb
inc
in
xchg
pop
pop
lock
lea
dec
xchg
popa
pop
clc
imul
sub
fdivrs
fsin
xchg
mov
jecxz
inc
adc
dec
mov
dec
mov
adc
mov
mov
bound
scas
fwait
rcll
push
dec
rcrl
cmpsb
jne
int
push
cmpsl
mov
xchg
dec
std
adc
adc
fcmovnu
adc
outsl
stos
movsb
add
mov
mov
movsb
sub
jmp
aas
loop
movsl
xchg
das
sub
ror
jbe
leave
mul
ret
inc
sub
lea
lret
inc
fcomps
mov
mov
test
ja
into
daa
fisubrl
adc
adc
clc
in
int3
cltd
and
int3
movsb
clc
push
sahf
cmpsl
mov
mov
bound
insb
rorb
adc
popa
cli
popf
loope
mov
movsb
add
mov
and
lret
mov
xchg
insl
xchg
or
cld
out
cld
and
sub
fsubrs
mov
lea
out
push
xor
dec
mov
jb
sub
sbb
add
imul
jns
push
or
cmpsb
aad
aas
jmp
mov
gs
outsb
adc
adc
lahf
inc
inc
fmuls
cmpl
in
pusha
or
fcompl
xlat
mov
cli
addl
pop
sbb
std
lret
mov
xor
lea
iret
ljmp
xor
in
sbb
movsl
cmp
das
fcompl
add
call
popa
or
insl
loope
jle
pop
ficoms
lea
add
or
cmpsl
aaa
xchg
dec
xchg
jns
test
sub
in
xchg
adc
mov
push
mov
jecxz
inc
rolb
pusha
adc
mov
mov
les
push
mov
hlt
pop
mov
or
and
jne
dec
push
pop
pop
pushf
xchg
xchg
mov
jbe
movsb
sti
push
xor
inc
sbb
push
push
push
mov
mov
mov
mov
jecxz
push
subb
mov
cld
add
cmp
sbb
mov
sub
sbb
mov
xchg
iret
sbb
dec
scas
cmpsl
in
push
cmp
cmp
or
out
gs
xchg
mov
push
xor
push
push
mov
pusha
jae
lock
rcr
mov
pop
subl
xorl
fnstenv
imul
and
sub
test
jns
jne
cs
fnstcw
imul
lcall
bound
inc
or
or
or
out
inc
inc
nop
jge
push
rcrl
push
ja
shrl
fadd
mov
pop
xor
aas
fildl
lea
lret
test
xor
mov
stos
addr16
mov
or
mov
mov
mov
push
fdivrl
lcall
pop
jnp
and
aaa
lret
pop
fwait
repnz
daa
cli
jmp
or
pop
sbb
pop
xchg
pop
bound
push
mov
and
adc
push
arpl
pop
inc
enter
sub
incb
and
les
push
xchg
repz
jne
sahf
nop
xor
lds
loope
lcall
ss
fadds
xor
dec
and
fwait
pop
mov
ds
jne
mov
xor
fisubrl
lods
xor
mov
out
cmp
or
jns
and
inc
add
daa
pushf
sub
cmp
add
and
sbb
lret
pop
dec
std
jae
xchg
mov
pushf
sub
lods
mov
sahf
rclb
sub
xchg
inc
stos
inc
mov
cmp
es
sub
add
fwait
dec
mov
push
insl
js
rcr
ja
imul
aam
pop
fildll
push
cmc
mov
pop
pop
add
and
pop
dec
xor
in
xor
cwtl
push
dec
clc
popf
sub
cli
mov
push
pop
sub
mov
or
cmc
int
jmp
dec
xchg
fcmovb
cli
xor
adc
ret
jle
out
add
out
lahf
adc
mov
andl
fistps
sub
push
gs
mov
pop
add
mov
addb
cmp
mov
cwtl
ss
jge
stos
or
push
pop
jg
cltd
mov
mov
and
push
xor
imul
in
test
cmp
not
xor
pop
lret
and
mov
adc
mov
jge
dec
addr16
roll
fwait
sub
mov
add
adc
imulb
lods
jp
les
jns
adc
push
push
push
divb
push
outsb
jnp
mov
and
xor
outsb
test
or
icebp
cmp
rcr
mov
sub
sti
imul
in
mov
pop
xchg
pop
add
pop
or
aad
adc
dec
cmp
sbb
jne
push
inc
jae
inc
out
test
mov
mov
xchg
mov
mov
adcl
jb
xor
rol
nopl
sbb
ss
or
add
dec
movl
daa
sbb
adc
push
inc
lret
sub
enter
daa
sbb
mov
mov
loop
fdivs
mov
scas
push
dec
pop
inc
loope
xchg
fstps
loopne
out
ljmp
push
pop
dec
cmp
jecxz
popf
lahf
lea
pusha
jno
pop
cltd
ja
cmp
or
icebp
add
mov
inc
js
arpl
sub
repz
xor
mov
outsl
cmp
into
pop
and
sub
sbb
daa
xor
sub
xor
in
add
pop
mov
jne
or
mov
mov
ljmp
sub
lcall
mov
dec
xchg
je
pusha
sarb
jmp
sbb
sti
jmp
sbb
scas
and
sbb
aad
sbb
inc
cld
xchg
mov
std
jle
movsl
ja
xchg
cld
fisttpll
xor
jecxz
ficompl
push
notb
dec
cmp
scas
or
sub
push
xrelease
lahf
frstor
mov
stos
sub
adc
inc
or
xchg
mov
testb
fsubs
sub
cs
and
add
adc
mov
nop
test
out
adc
data16
xor
insl
sahf
ds
cs
inc
pop
mov
xor
sbb
outsl
daa
sahf
rol
roll
je
test
sbb
xchg
xchg
push
shll
or
loopne
cltd
mov
pushf
inc
sahf
mov
addr16
js
gs
adc
ljmp
mov
in
orb
mov
push
mov
push
sub
push
ja
stc
mov
sbb
inc
cmpb
xor
mov
or
sti
into
or
int
aaa
push
test
aaa
fadds
clc
or
ret
mov
xor
mov
dec
call
xchg
ds
repz
xorl
sub
test
repnz
stos
add
aaa
inc
jbe
shl
or
fsubp
adc
mov
rcrb
aaa
push
pop
ljmp
jge
jae
loope
popf
push
enter
pop
cmp
dec
or
dec
aaa
ljmp
add
aam
and
lret
lods
xor
repz
lret
jmp
jo
outsb
shlb
dec
cmp
sahf
das
xor
and
sbb
pusha
mov
and
mov
int3
pop
and
loopne
adc
mov
das
jae
nop
pushf
dec
scas
xlat
adc
test
pop
aas
ljmp
aam
xadd
xchg
mov
call
fidivrl
jb
sbb
adc
and
pop
push
shrl
test
dec
inc
jge
aaa
out
popa
pop
sub
or
sbb
mov
pop
out
iret
xor
sbb
inc
or
sbb
mov
nop
mov
lea
xchg
stos
test
jge
ret
inc
test
fistps
sbb
jecxz
clc
push
ja
push
dec
pop
testl
gs
outsb
clc
inc
push
push
arpl
mov
add
out
jl
clc
popa
xor
and
arpl
xchg
jp
insl
adc
or
and
xchg
int3
outsl
movsl
mov
out
aam
sbb
add
xor
loope
jl
pop
popa
lods
arpl
leave
adc
cmpsl
dec
int
mov
out
and
inc
add
shll
ds
mov
xchg
xchg
dec
call
imul
fidivs
lds
cmp
fadd
cmpsb
dec
push
repz
dec
push
push
stc
sub
mov
enter
sbb
testb
stos
push
jae
out
in
mov
add
pop
mov
push
jp
dec
mov
cmp
and
test
lds
mov
xor
pop
mov
sub
lock
loop
iret
lock
cmpsl
sti
outsl
scas
cmpb
mov
fildll
leave
xchg
hlt
imulb
aaa
cwtl
jae
cld
mov
imul
test
sub
repz
mov
fldcw
or
xchg
insl
xchg
inc
movsl
cmp
outsl
cmp
lahf
jp
popf
push
lret
add
pop
sbb
imul
cmp
pop
outsl
mov
xor
adc
push
mov
sbb
pop
jne
xor
sbb
push
dec
pop
cs
inc
int3
call
outsl
dec
push
and
push
mov
mov
mov
lods
mov
and
dec
adc
int
lret
mov
sbb
dec
adc
out
popf
in
mov
movsl
fwait
mov
xchg
ja
dec
xor
mov
hlt
push
add
into
popa
fst
mov
cltd
fdivl
mov
dec
jmp
dec
sub
scas
fs
leave
inc
rorb
arpl
arpl
rolb
into
or
outsl
lods
adc
andl
repz
or
cmp
data16
test
jne
jmp
sub
cmp
repnz
xchg
fs
or
xor
scas
lret
sub
fwait
pop
inc
jbe
cwtl
cmp
dec
mov
mov
mov
jbe
mov
mov
sub
fcoms
stc
push
jecxz
xor
mov
add
add
jle
cli
rorb
xchg
cmp
cmpsl
push
lods
popa
lahf
test
inc
cld
adc
ror
into
lret
pop
nop
mov
pushf
adc
js,pn
fldl
mov
addr16
in
sbb
jle
outsb
add
test
xor
xchg
shrb
mov
xchg
ficompl
add
scas
mov
add
in
mov
adc
lret
lcall
dec
cmp
fs
mov
push
inc
gs
pushf
pop
popa
aaa
cmp
cli
and
mov
scas
sbb
cmovne
stc
adc
pop
subl
xchg
mov
dec
in
dec
popf
cmp
xchg
enter
xchg
es
inc
cmp
iret
xchg
push
push
push
cmp
xchg
call
mov
xor
push
jg
repz
or
scas
or
nop
sub
adc
jle
jg
in
shll
pop
xorl
cltd
pop
xchg
mov
icebp
xchg
insb
xor
in
pop
mov
scas
cmp
xchg
or
shl
inc
addr16
pop
dec
jge
xlat
xor
fmuls
fistpll
xchg
lcall
scas
repnz
xchg
mov
cmp
aas
or
and
inc
pop
mov
dec
pop
shrb
dec
hlt
dec
outsl
fbstp
loope
sahf
pusha
icebp
or
aaa
mov
in
stos
sub
out
push
pop
or
mov
in
mov
adcl
add
out
xchg
dec
inc
sub
testl
xlat
iret
or
cmpb
jo
out
adc
cwtl
sahf
sub
ret
pop
mov
and
or
sbb
or
mov
insl
test
jle
cli
nop
aad
in
mov
out
icebp
and
sbb
jl
hlt
mov
in
xchg
sbb
xchg
out
jb
xchg
sarb
lds
mov
mov
xor
popa
add
add
mov
incb
adc
mov
stos
icebp
das
sub
imul
and
mov
popa
loop
pop
xor
sarb
ss
pop
jae
ret
jmp
sub
pop
fucomi
stc
les
stc
les
test
push
jg
sbb
adc
jae
repnz
adc
mov
mov
add
sub
cmp
hlt
inc
push
and
mov
mov
inc
mov
lods
or
sub
xlat
adc
push
imul
jg
bound
dec
loope
mov
sub
out
inc
mov
test
cmp
mov
xchg
lea
inc
inc
pop
cmp
dec
xrelease
sbb
pop
out
or
out
adcb
ficoms
inc
leave
lds
xchg
jne
aad
xor
aam
jns
mov
sbb
sub
mov
push
mov
rcrb
mov
adc
jno
arpl
notl
jmp
lds
pushl
mov
mov
add
and
je
fsubl
sarb
mov
inc
inc
aad
pop
sub
fidivrs
inc
lds
leave
and
ds
dec
lahf
cmp
mov
cwtl
mov
int
pop
dec
sub
mov
sbb
jmp
fisttpll
mov
stos
adc
cltd
icebp
out
insb
sbb
stos
shll
xchg
nop
dec
dec
test
sbb
into
ret
scas
fs
out
dec
ja
or
lcall
pop
js
dec
sub
das
mov
ret
hlt
add
sbb
push
mov
adc
mov
fdivr
xcrypt-cfb
cmpsl
mov
jno
mov
in
sbb
ss
jnp
mov
xchg
mov
sbb
adc
or
adc
mov
push
pop
inc
xor
inc
ja
adc
or
int3
lret
ret
xchg
dec
test
fisttps
inc
sub
pop
push
out
jg
mov
setg
sub
add
jnp
sub
cld
xchg
insb
rcr
dec
cmp
call
out
call
cltd
sbb
mov
pop
bound
decl
fnstenv
and
dec
fmull
nop
mov
orl
popf
std
inc
push
leave
mov
dec
and
loope
fstl
xor
sbb
lods
or
aaa
stc
fs
ror
ja
test
push
add
nop
daa
jnp
cld
inc
inc
aaa
and
fnstcw
shlb
out
pushf
int3
jae
pop
out
inc
or
fs
xchg
pop
xor
adc
mov
and
fistps
outsb
sbb
sti
imul
push
dec
call
ljmp
adc
aas
jg
pushf
jne
roll
lods
adc
in
cwtl
xchg
popa
ds
pop
ss
out
dec
fldenv
dec
dec
ret
adc
cmp
ds
xchg
mov
es
xchg
hlt
cmp
mulb
inc
push
adc
mov
mov
dec
test
dec
jl
sub
movsl
stos
jge
fsubp
cmp
adcl
sbb
fistps
lret
stos
jo
aas
stc
aas
add
fmull
inc
jbe
mov
push
adc
and
dec
roll
andl
ds
add
add
mov
ljmp
add
pop
cltd
mov
hlt
shrl
in
adcl
mov
pop
movsb
adc
clc
arpl
ds
pop
mov
cltd
inc
lock
in
cmp
pop
stos
int3
out
sbb
cmp
adc
aas
imul
or
fistps
cwtl
push
shlb
cli
push
jmp
out
push
nop
cmp
insl
dec
cmpsl
aad
bound
pop
jl
fsubr
std
movsl
mov
sti
or
mov
shl
xchg
and
add
xchg
sti
stc
std
push
ljmp
add
pushf
aaa
or
jg
push
sub
daa
xor
mov
mul
scas
add
ds
bound
and
addr16
fildll
mov
add
jl
inc
inc
or
or
roll
cmp
inc
pslld
dec
jge
jae
call
xchg
je
xor
xchg
dec
nop
push
sbb
mov
cmp
rorb
ss
int3
inc
dec
mov
or
out
push
dec
fists
sbb
int3
or
cmp
iret
pop
nop
imul
mov
dec
xor
xor
xchg
ljmp
dec
or
jl
mov
cs
int
lahf
push
sbb
addr16
xchg
cmc
sti
cltd
rclb
push
mov
add
lahf
lea
jle
mov
dec
ja
shlb
sub
hlt
repnz
dec
sub
movl
insb
repnz
cmp
scas
push
pop
movsb
rclb
or
lret
movsl
cmp
mov
xchg
hlt
mov
stos
js
mov
adc
loopne
inc
iret
adc
lret
xor
jle
mov
mov
push
int3
push
add
aam
mov
mov
cs
push
mov
mov
mov
mov
cmp
jl
andl
inc
or
pop
ljmp
pop
sbb
cmp
clc
lret
nop
das
or
jbe
adc
fdivs
jns
inc
inc
lods
push
into
jb
stos
xor
add
mov
xchg
stos
dec
and
nop
inc
push
stos
xor
cmc
test
std
std
lret
cmc
or
dec
test
push
pop
ss
mov
int
scas
fdivr
out
les
loopne
int3
xchg
sbb
es
sti
lcall
ja
xor
lret
test
inc
pop
xor
xchg
push
cmp
mov
push
mov
xchg
dec
or
sbb
cmp
jns
cmp
xchg
mov
inc
jne
test
cmp
es
ds
sbb
push
in
jb
xor
gs
jne
andb
ret
test
inc
dec
je
test
data16
add
sub
fldcw
cld
sbb
cld
inc
lahf
jl
inc
je
mov
and
xchg
xchg
jl
mov
pop
mov
cmpsb
and
jle
hlt
sub
mov
xor
movsl
decb
dec
cmp
add
test
pop
lods
outsl
cld
pop
and
movsb
movsl
sti
aas
dec
enter
add
cmpsl
subl
pushf
sbb
insl
push
cs
pop
dec
int
lock
faddl
outsb
mov
push
aaa
lock
jle
or
les
cmpb
push
sbb
pop
pop
sbb
cmp
scas
imul
mov
bound
outsb
mov
mov
test
mov
stos
cmpsb
pop
js
shrb
je
rorb
addr16
cli
push
sbb
call
pop
xor
dec
pop
nop
mov
syscall
shrl
and
arpl
jo
sbb
push
in
mov
loop
jae
dec
loop
gs
cmpsb
outsl
stc
xorl
rcr
jp
dec
sti
shl
and
int
fwait
dec
sub
inc
in
pop
push
mov
mov
fimull
push
aam
pushf
aaa
mov
push
scas
xor
add
ds
xor
rcll
jp
imul
cmp
pop
fldcw
dec
fisubl
jp
xchg
jb
jnp
loope
xor
inc
mov
xlat
daa
dec
movb
and
popa
cli
hlt
lods
dec
pop
ficompl
push
pop
mov
xor
adc
or
into
movsb
mov
rcll
jnp
cltd
shlb
test
fwait
jg
pop
or
xchg
movsl
mov
pop
dec
mov
adc
jb
test
mov
dec
cs
sarb
mov
cwtl
and
jbe
pop
lahf
push
cmp
dec
push
hlt
pop
xchg
mov
mov
mov
cld
fsubr
pop
and
cli
loop
addb
int
inc
out
call
cmp
daa
scas
xchg
pushf
xor
subb
icebp
dec
out
jns
ljmp
lods
pop
out
fs
sub
leave
xchg
mov
adc
orb
nop
imul
out
ljmp
mov
imul
inc
mov
jnp
jns
test
cmp
ret
shll
push
mov
sahf
xor
andb
stos
sub
xchg
xor
sub
mov
jecxz
push
cmp
and
cmp
hlt
std
dec
inc
test
popl
daa
jo
cmp
ds
push
dec
jecxz
inc
dec
sar
cmp
cmp
lcall
ja
dec
out
sub
add
cmpsl
and
mov
je
and
sbb
dec
sub
fisubs
testl
sbb
out
ja
xor
add
out
mov
rcl
jns
pop
add
lcall
mov
push
imul
movswl
jp
in
scas
push
ret
aaa
sbb
stc
rcl
out
and
mov
jecxz
inc
ret
dec
cltd
fstpt
pop
mov
add
cmp
and
push
scas
add
xchg
dec
insl
ret
cli
or
dec
lret
int
addl
movsb
addr16
push
outsl
cmpsl
pop
inc
or
pusha
ja
and
mov
rorl
ds
leave
mov
mov
js
cmp
xor
xor
out
inc
jmp
cmp
xchg
out
inc
adc
jns
insl
cmp
or
sub
aaa
push
lods
and
jecxz
push
test
lock
and
dec
adcb
fcoml
cmp
cltd
sub
mov
sub
mov
mov
testb
les
adc
dec
mov
xor
fildll
fistpll
fistl
ffree
cltd
mov
mov
das
inc
xor
aad
sub
xor
rclb
mov
sub
out
cld
jae
popf
enter
jp
cmpsb
jb
push
das
lock
jo
mov
stc
xchg
popa
out
pop
adc
pop
add
insl
push
ds
jb
pop
mov
repz
cltd
adc
les
xor
test
fsts
mov
rorl
ret
fcmovbe
pop
add
adcb
mov
xlat
popa
pop
jle
movsl
mov
fstpl
jp
mov
mov
push
sbb
jge
shrl
test
iret
enter
repnz
fbld
mov
stos
push
lods
addr16
pushl
mov
push
jbe
dec
sub
cltd
sub
fsub
popa
insl
call
jnp
lea
dec
pop
pop
das
jl
test
cld
outsl
adc
cmp
sub
fs
les
jle
outsb
int
aam
stos
mov
mov
in
jmp
xor
rorb
pusha
lea
mov
jb
mov
repz
push
daa
in
lods
gs
jns
xor
or
insl
adcl
xor
mov
loopne
das
push
cmp
inc
into
jle
neg
leave
xor
clc
push
adc
xchg
shlb
in
push
test
ja
mov
pop
push
jg
sbb
inc
jl
jbe
inc
sar
pop
in
or
lock
stos
jmp
jb
inc
inc
mov
aas
ds
cmp
lods
xorb
icebp
fsubs
inc
outsl
push
cmc
mov
push
ret
jns
int
loope
mov
andnps
cwtl
int
sub
xchg
stos
sub
nop
std
xchg
pushf
orb
or
and
lock
sbb
data16
idivb
movq
push
cli
dec
repz
or
jle
mov
push
add
dec
xchg
jae
call
repz
mull
and
cltd
inc
sub
dec
cs
lods
dec
jb
push
loopne
adc
push
cmp
cmp
jmp
dec
or
sar
js
pop
mov
xor
inc
inc
xchg
xchg
mov
jg
mov
icebp
popf
in
scas
scas
loop
adc
movsb
movsb
fidivrl
push
jb
adc
decb
fdivrl
pop
stc
hlt
shrl
dec
xor
mov
or
into
mov
dec
pusha
pop
fimull
jno
loopne
dec
adc
mov
add
aaa
cmp
xchg
stc
mov
cmpsl
pop
in
stos
addr16
std
mov
in
mov
dec
rolb
ret
adc
rorb
in
pop
jg
hlt
adc
mov
mov
cld
pop
les
mov
test
or
xchg
int3
sbbl
aad
cmp
sbb
jno
pop
dec
inc
aaa
cmpsl
ja
popa
addl
cmp
cltd
xor
mov
iret
xchg
adc
imull
es
aad
push
jge
in
pop
xchg
scas
cltd
lret
mov
cmpsb
xor
mov
dec
or
in
jl
mov
sbb
add
ljmp
dec
pop
mov
xchg
outsb
mov
outsb
fldenv
push
dec
js
fdiv
xorl
pop
push
push
stos
aad
in
mov
jecxz
pop
inc
sbb
mov
adc
fnstsw
insb
add
lret
aaa
mov
xor
xchg
movsb
mov
mov
loope
ret
inc
add
push
or
jnp
test
repz
cs
cmc
mov
push
inc
je
sub
testb
in
cmpl
leave
and
pop
jno
rcrl
inc
sbb
jnp
mov
cmpsb
pop
in
dec
mov
ljmpw
jmp
sbb
or
jno
addr16
add
test
iret
add
dec
dec
xor
lds
mov
push
out
jbe
loopne
push
jo
mov
dec
and
xor
fcompl
out
xlat
push
push
shll
pop
out
and
test
or
out
pop
dec
psubsw
adc
sarl
les
scas
leave
xchg
fidivrl
jne
push
aaa
dec
test
xchg
or
or
inc
popf
in
fs
rorb
stc
mov
xor
dec
rcr
jbe
les
icebp
loope
ds
xchg
in
mov
mov
les
mov
out
xchg
or
sub
lock
xor
in
aam
cli
inc
sub
and
cmp
jns
pop
adcl
xor
cmpb
mov
jns
loope
or
jl
mov
xor
dec
je
mov
xor
movsl
ljmp
pusha
push
rclb
cs
add
xlat
push
or
pmaxsw
mov
xor
rcll
aam
fsubrl
cmpsb
push
ljmp
jge
lds
dec
jnp
lea
add
lret
push
jp
pop
hlt
sbb
inc
jnp
popa
sub
lea
lods
jge
out
xor
pop
dec
cmp
sub
mov
lahf
imul
in
mov
test
add
test
push
ljmp
data16
dec
test
mov
mov
sub
iret
fsubrs
mov
popf
imul
imul
pushf
out
push
int
icebp
in
mov
cmp
into
push
pop
inc
mov
add
adc
or
lods
mov
orb
icebp
jno
testb
push
jb
inc
iret
jmp
mov
and
xchg
lock
sbb
sub
enter
pop
rcll
orb
push
divl
test
and
in
or
jae
sbbb
xlat
sbb
pop
es
repz
sbb
mov
pop
mov
addr16
jnp
into
pop
and
xor
mov
xor
sub
pop
add
and
adc
adc
not
fisubrs
fsub
rol
and
lds
lcall
pushf
pop
xchg
sbb
xchg
jbe
lcall
rep
lock
jecxz
inc
lock
ret
insb
pop
mov
outsb
les
mov
popa
lds
jns
rolb
sbb
ret
movsb
pop
adc
fsubs
jp
mov
movsb
test
mov
xchg
xchg
inc
test
pop
imul
push
xlat
arpl
pop
popl
fmuls
pop
cmp
movsl
into
dec
loope
js
scas
enter
xor
push
std
sub
and
rclb
mov
jb
call
and
sarb
bound
xchg
push
jno
jecxz
cmpsl
inc
push
movsb
pushf
lods
popf
loopne
push
sub
xchg
lds
dec
jo
or
inc
lret
mov
and
lcall
push
outsb
sub
xor
lcall
cmpsl
or
fnsave
call
mov
pop
shl
call
sbb
pop
iret
mov
xor
inc
test
sub
mov
movsb
cmp
int3
notl
jb
cmc
xor
push
cmpsb
mov
notb
pop
outsl
cs
lods
lcall
cmp
adc
sti
mov
add
inc
cmp
cmc
sti
popa
pushf
ds
iret
addr16
xchg
jp
sahf
mov
sbb
push
lret
sarl
add
das
mov
jl
outsb
cltd
loop
mov
lahf
xchg
ja
outsl
out
jno
pop
cwtl
fimull
jb
clc
lea
push
jo
adc
add
push
je
repnz
in
pop
dec
sbb
negl
les
xor
pop
out
aaa
outsl
test
sti
mov
iret
lret
outsl
test
sub
cli
subb
xor
sahf
xchg
and
jno
shlb
repnz
icebp
lods
or
add
jo
cmp
outsl
xor
addr16
pushf
out
out
clc
andl
aad
push
mov
stos
mov
xchg
rclb
jle
sti
xor
inc
dec
jo
push
cmpsl
mov
ljmp
mov
sbb
dec
inc
lock
mov
aad
sbb
subl
outsb
pop
dec
mov
adc
outsb
mov
xchg
sub
cmpsl
sub
fsts
cmp
fstpt
cld
sub
shlb
push
subl
xchg
mov
shlb
sub
iret
pop
stos
stc
xchg
mov
push
ret
movlps
jo
sub
sbb
shlb
mov
sub
sbbb
ja
popa
test
jmp
jns
sbb
dec
or
or
xchg
or
mov
stc
cs
cwtl
dec
in
shrl
les
xchg
repz
das
andb
mov
cmp
pop
nop
test
push
setl
mov
jns
push
clc
lock
das
mov
and
movsb
ja
hlt
sbb
mov
cmpsb
subb
sub
jmp
cmp
arpl
stos
dec
aas
test
sbb
dec
add
lods
jae
repz
push
test
pop
and
aam
mov
lahf
in
xor
pop
jbe
mov
cmp
jno
gs
or
lea
outsl
sbb
cmpsl
jp
mov
xor
or
mov
cmp
add
cmc
xor
scas
lods
les
and
ljmp
xlat
and
mov
jg
dec
xchg
js
inc
fwait
xor
cmp
mov
adc
jge
jne
fadds
popl
outsb
xchg
xchg
sub
imul
aad
cmp
sarl
cli
sub
rcrl
push
nop
mov
xchg
jbe
je
or
hlt
dec
adc
in
fidivrl
xor
ret
leave
lahf
push
push
push
enter
xor
and
jne
repz
adc
jo
lock
mov
dec
push
fdivs
lcall
std
inc
or
or
cmp
jnp
xchg
repnz
sbb
rcll
inc
rclb
ss
cld
jo
push
adc
adc
inc
or
lods
pop
hlt
sub
popa
aam
push
mov
mov
mov
lea
dec
ds
cmpsl
mov
movsb
pop
pop
lods
xchg
stc
int3
aad
dec
roll
arpl
add
out
jne
into
shrl
add
pushf
add
inc
ret
mov
arpl
hlt
xchg
cli
push
les
xchg
cwtl
cld
stc
arpl
and
pop
jl
repz
lods
push
fimull
mov
jge
sahf
fwait
ret
rol
aaa
cmp
or
jmp
fdivr
mov
into
lcall
pop
adc
imul
aas
xor
cmp
mov
out
mov
cmpsb
sahf
lds
je
xchg
dec
fnstenv
mov
cwtl
sbb
int3
aas
jl
xor
mov
xor
mull
scas
imul
sti
lea
das
adc
mov
pop
sub
adc
or
adc
data16
cmp
jno
test
incb
mov
pop
cmpsb
out
xchg
out
mov
lret
vprotq
adc
push
pop
leave
js
cltd
in
insl
jge
lods
fnstsw
xchg
sub
inc
or
out
cwtl
sbb
push
adc
mov
cwtl
fwait
xchg
jne
js
lods
dec
fwait
in
cmpsb
iret
mov
adcl
jmp
stos
int3
xchg
jo
mov
addr16
cwtl
cs
cltd
push
jae
adc
cmpsl
js
or
test
and
fwait
repz
data16
jg
sub
icebp
pop
xor
rorl
xchg
movsb
bound
jecxz
or
or
rol
mov
jns
frstor
pop
xchg
out
inc
mov
stos
jae
lcall
fadd
fstpl
xchg
addr16
xchg
inc
lods
cld
add
popa
test
pop
dec
mov
int
movsl
xor
push
inc
cltd
movups
call
mov
jne
jnp
into
jle
fwait
iret
add
and
dec
inc
push
mov
cs
jl
cli
and
mov
pop
mov
lcall
mov
xor
std
pop
ljmp
outsb
cmp
in
push
sbb
test
xor
roll
or
mov
mov
push
adc
mov
jo
xchg
and
out
xchg
popf
mov
add
xchg
mov
or
sbb
inc
into
and
cmp
jo
addr16
sbb
int
cmp
das
sti
xchg
pop
loop
or
lret
add
adc
lret
sub
mov
jge
cmc
std
fcoms
ja
insl
es
loop
sbb
cmp
loopne
add
xchg
mov
sub
aam
fnsave
es
lea
and
lea
inc
inc
negl
push
jge
scas
cld
dec
pop
adcl
and
repnz
rorb
add
sarl
leave
stc
subl
and
mov
mov
gs
lret
sbb
ljmp
mov
bound
pop
es
fimull
mov
mov
test
sub
aad
dec
or
gs
cmp
mov
cs
xchg
adc
inc
out
je
adc
mov
dec
pop
pop
scas
out
lods
dec
xchg
xchg
addr16
jns
sub
test
scas
pop
repz
pop
aas
sahf
jne
fwait
sbb
ja
mov
dec
fdivs
repnz
getsec
lods
lret
xor
mov
dec
and
mov
pop
js
scas
xchg
out
sbb
pop
sub
pop
aas
lods
daa
pop
sbb
jno
push
xor
mov
cs
mov
lahf
cmp
and
leave
lret
jg
inc
mov
aam
push
add
sbb
pop
push
jae
sub
arpl
daa
lods
loop
jg
dec
dec
mov
cmp
leave
xchg
adc
and
xchg
jg
xor
mov
jo
daa
jmp
loopne
or
xchg
lods
xchg
js
jmp
cmpsb
rclb
loop
lcall
xchg
jo
dec
stos
fwait
inc
push
adc
lds
dec
cs
dec
dec
ret
into
dec
xlat
negb
lea
jno
pop
sbb
cltd
outsl
cltd
cltd
int
sti
out
xlat
xor
outsb
inc
mov
mov
fs
adc
jmp
and
les
lahf
dec
movsb
mov
adc
movsb
icebp
jmp
sub
or
nop
les
sbb
and
std
cmp
push
ficoml
call
int3
mov
or
icebp
push
adc
in
and
je
and
loope
ficoms
test
push
arpl
int
cmpsb
xchg
sbb
xor
mov
pushf
leave
fstl
pop
idivb
lods
fldl
pop
in
xor
sbb
sub
xlat
enter
aaa
call
leave
sahf
mov
adcl
add
mov
std
lock
stos
mov
das
sub
push
cmc
push
leave
test
sub
pop
mov
sub
cmp
mov
xchg
les
repz
adc
pop
ss
and
lcall
popa
push
jl
mov
mov
cmp
mov
enter
lret
mov
or
mov
jb
xchg
in
test
fisubrl
inc
inc
pusha
xor
jae
mov
ljmp
and
ret
in
mov
roll
std
mov
adc
add
dec
mov
inc
xlat
pop
mov
sahf
mov
fsubrs
vpsrlq
in
ljmp
push
xorb
fucom
shlb
lds
pop
sahf
push
or
jns
test
pop
add
mov
hlt
pop
or
stc
fsubr
jmp
mov
js
fimull
push
int3
std
ss
adc
js
xor
in
xchg
sub
jo
jns
jns
xchg
dec
subl
movsl
xchg
adc
mov
push
iret
mov
sbb
movsb
mov
cld
movl
adc
lret
bound
or
dec
dec
or
imul
or
insl
cwtl
daa
pop
cmp
les
xor
stos
xchg
cmp
dec
adc
jp
negb
fists
popf
add
loopne
xor
sbbb
sarl
lods
push
fs
lret
repnz
jg
daa
div
cmp
mov
adcb
cmc
pop
mov
and
loop
or
mov
mov
fsubrp
lock
mov
inc
loope
dec
mov
in
adc
aad
jae
mov
iret
jno
xor
add
dec
mov
inc
push
fistpl
adcl
mov
je
aas
les
sbbl
cld
ror
push
dec
cmp
js
xchg
sarb
outsl
bound
cld
jmp
add
mov
repnz
dec
repz
les
rcll
and
mov
jo
adc
xor
arpl
loop
leave
sbb
pushf
icebp
nop
aas
orl
or
stc
inc
imul
lret
movsb
pop
in
faddl
xchg
xor
scas
xchg
xor
lock
fwait
call
inc
adc
cmp
jl
jmp
sbb
xor
push
pmaxsw
addr16
xchg
push
mov
xor
inc
push
test
cmp
xchg
ret
jae
popf
cmp
push
jae
add
sub
nop
popa
les
jae
push
icebp
popa
xchg
rep
and
fstps
and
mov
jbe
call
popf
inc
ja
jle
adc
xchg
xchg
icebp
dec
cli
ljmp
push
adcl
lcall
ret
xor
push
sarb
jnp
mov
loope
dec
rcl
fldt
sbb
or
pop
shl
mov
or
xchg
mov
mov
sbb
mov
mov
cs
aad
lret
sahf
imull
mov
jle
push
dec
sbb
pop
lcall
sbb
xor
push
cltd
mov
or
gs
dec
jb
sbb
arpl
fcomps
in
movsb
fmul
and
mov
scas
mov
adc
dec
push
pop
or
sbb
dec
cmp
bound
in
add
xchg
inc
pop
add
adc
mov
mov
lods
pop
shll
mov
aad
ret
lock
xor
cs
pop
je
jp
pop
repnz
cs
sbb
push
repnz
sti
mov
cmpsb
inc
push
xchg
repz
or
or
xor
mov
mov
hlt
jg
jp
lods
dec
cmpsl
std
dec
outsl
mov
rcl
dec
adc
std
ret
xorb
mov
pop
pop
out
fstl
in
fwait
inc
ror
sub
daa
or
int
test
mov
loopne
leave
into
aad
out
cmp
xchg
cmp
pop
shrl
int3
mov
scas
jne
rolb
inc
cmp
adc
cmpsb
imul
insl
and
cmp
and
pop
xchg
aad
sahf
pusha
fcompl
stos
adc
pop
fxch
jae
dec
mov
fstps
mov
pop
xor
jecxz
xchg
gs
aam
cmc
mov
aam
mov
cmp
jae
lahf
and
bsr
jno
pop
das
shl
pop
stos
daa
adc
cli
test
mov
aas
sub
adc
mov
fs
and
in
push
test
in
xchg
repz
adc
xchg
mov
addr16
adc
mov
xchg
aam
icebp
or
sbb
inc
flds
mov
les
popf
mov
fwait
mov
and
push
movl
sar
sbb
push
aam
mov
jae
mov
mov
mov
ret
mov
or
dec
lods
xor
subb
xor
inc
lret
das
cmp
lret
je
pop
mov
cmc
ret
cld
data16
jmp
mov
xchg
cmp
imull
js
add
add
inc
dec
cli
ja
outsb
inc
mov
jns
jle
aam
in
xor
jo
mov
jecxz
icebp
insl
and
pop
adcb
cwtl
out
clc
push
inc
in
insl
jmp
dec
dec
ljmp
repz
lds
jle
lret
sub
mov
inc
push
test
pop
and
push
jo
inc
lods
push
dec
out
aas
test
push
mov
mov
aad
and
xchg
pop
add
test
aad
test
add
pop
sub
lods
jnp
push
fbld
lock
fstpt
out
adc
or
inc
push
movsl
jle
mov
push
pop
cmp
pop
pop
xor
into
push
add
enter
mov
fadds
add
mov
sbb
push
popa
cmp
stos
mov
cld
std
pop
cmp
data16
jg
jle
cmp
in
pop
adc
xlat
subb
pop
push
xlat
add
in
test
outsl
cld
shrl
xor
cmc
mov
das
inc
mov
jp
repnz
mov
sbb
mov
xlat
dec
outsl
xor
dec
lret
inc
lcall
sub
inc
mov
or
fistl
jmp
stos
mov
fmull
inc
xchg
cmpsb
mov
stos
push
dec
fcmove
mov
push
pop
lds
jns
into
arpl
pop
xchg
in
ficoms
sub
lahf
fsubs
addl
fsubp
jecxz
xchg
push
leave
push
add
jmp
lret
test
stos
movl
pop
jae
sti
dec
ror
popf
xchg
xlat
pop
mov
xchg
fstpl
pop
filds
mov
mov
test
scas
aas
dec
and
mov
in
ljmp
jge
jb
xchg
inc
push
test
inc
add
fsts
cmpsl
cmovb
jle
repz
leave
rcrl
repz
fstps
jb
or
mov
lahf
xor
cmp
jbe
lods
ja
mov
int
lret
shr
sarb
pushf
loope
into
aaa
push
mov
jl
jns
fbld
fidivrs
sub
or
dec
xor
jnp
jmp
outsb
mov
stos
cs
outsb
xor
dec
mov
in
xor
insb
inc
mov
in
neg
jo
jae
pop
mov
push
xor
shrl
repz
lea
hlt
lret
or
jb
insb
adc
into
mov
je
inc
mov
mov
fdivr
mov
stc
movsl
mov
cltd
movsb
dec
jno
fcoml
fists
sub
in
xor
gs
cmp
aam
out
in
mov
adc
aam
add
mov
adc
jmp
in
jmp
stos
mov
ss
addr16
negb
movsb
sbb
repz
mov
sbb
stc
or
push
mov
mulb
or
cmp
movsl
out
enter
jae
std
push
loopne
cmp
sbb
mov
mov
movsb
insb
aam
pusha
vmovdqu
fcompl
loop
lahf
push
das
sub
mov
jl
shll
test
add
ja
lcall
lock
icebp
sub
pop
ds
std
inc
imul
cwtl
test
jmp
cmp
pop
ret
subl
stos
add
sub
sub
arpl
mov
in
pop
jecxz
lods
mov
les
movsl
enter
dec
pop
in
xchg
cmpsb
out
lcall
push
mov
push
dec
sbbb
mov
add
lea
sub
stos
imul
movsb
add
mov
negl
into
xor
and
add
imul
gs
iret
repz
adc
insl
pop
aam
addl
incb
shlb
cmpsb
jno
negl
or
sub
out
cld
aaa
push
pop
pop
cli
push
loop
xchg
enter
cmpsl
pushf
or
mov
fnstsw
sar
scas
shll
mov
mov
or
lret
fimuls
jo
jns
in
or
daa
mov
xor
sarb
iret
arpl
bound
or
or
loop
inc
mov
jb
adc
icebp
push
pop
mov
icebp
sbb
inc
pop
sbb
push
lds
mov
fistps
loop
pop
and
aam
mov
sbb
jmp
movsb
mov
push
loopne
shrl
cmp
sub
inc
jnp
cli
sti
iret
mov
or
cmp
push
stos
push
ljmp
fnstenv
lret
fnstcw
and
movsb
aam
aas
xchg
repz
mov
ja
addr16
cmovnp
push
add
jle
addr16
rcll
imul
inc
jo
xchg
jno
outsb
jb
lock
mov
xchg
add
daa
or
dec
aaa
cmp
movsb
sbb
rclb
in
inc
test
add
leave
xchg
sbb
adc
push
pop
aaa
lahf
pop
out
hlt
gs
ret
popf
pop
or
das
loope
jno
pop
fs
movsl
cmp
repz
dec
dec
scas
icebp
into
add
cmp
ljmp
push
pusha
pop
fmul
bound
xor
xor
inc
clc
sahf
mov
add
hlt
loope
jl
xchg
cld
sub
in
jno
fisttps
jp
jb
pop
test
inc
gs
mov
pop
push
je
and
leave
jge
push
inc
repnz
mov
sarl
pop
and
dec
test
in
sub
push
pushf
imul
sbb
rorl
cli
sub
popa
mov
test
mov
mov
sarb
lods
inc
add
lret
push
xor
loopne
xchg
stos
lds
mov
mov
xchg
ffree
insb
pop
mov
mov
pop
mov
jns
ja
pop
cld
jmp
dec
push
in
jo
js
lds
and
jne
or
clc
rclb
faddl
je
scas
test
out
in
aas
cmp
add
mov
pusha
test
push
subl
iret
push
inc
test
mov
mov
in
call
or
loope
test
int
and
cltd
pop
cmp
test
push
dec
sbb
cpuid
push
rolb
pop
loopne
mov
add
or
mov
leave
add
cmpsl
aas
hlt
mov
xchg
div
movsb
sbb
push
add
cmc
cmova
rorb
cmp
pusha
imull
jae
outsl
cmp
adc
sub
or
insb
ss
mov
and
int
jg
cmpsb
sub
push
and
add
fdiv
jecxz
ljmp
sahf
bound
movsl
hlt
ja
stos
pop
mov
or
push
int
jns
xor
mov
jmp
pop
adcl
add
mov
sub
cs
mov
sbb
dec
lea
xchg
sub
cmp
xor
es
mov
in
cmp
test
fimuls
add
xchg
mov
lahf
xor
fyl2xp1
and
push
push
fsubl
repnz
mov
mov
mov
out
push
and
popf
cmp
sbb
dec
test
es
out
sub
add
mov
mov
ljmp
nop
outsb
sub
mov
add
pop
dec
mov
ds
out
stc
adc
mov
inc
popa
mov
loopne
pop
pop
mov
andb
iret
mov
cmc
dec
cmpsl
sahf
mov
into
in
xchg
inc
icebp
jle
test
push
btr
iret
adc
cltd
ret
push
loopne
test
outsl
sub
repz
rclb
mov
faddp
mov
insl
addb
xchg
ficomps
into
xor
add
clc
imul
jbe
loopne
sub
xor
jmp
filds
mov
mov
ret
dec
jb
int3
ljmp
int
fbld
jmp
pop
adcb
cmp
cmpsl
mov
add
hlt
pop
ds
lds
adc
rcrl
aaa
mov
jp
sti
cld
lcall
jae
cs
js
push
inc
test
jnp
sub
ret
xchg
adc
das
in
sbb
out
mov
scas
lcall
jbe
sbb
sub
jge
dec
push
cwtl
dec
pop
js
xor
and
into
arpl
pop
fdivs
inc
cmpsl
hlt
pop
or
push
ret
xchg
push
and
daa
adc
dec
aaa
inc
mov
cwtl
sti
cltd
jbe
mov
xchg
leave
mov
pop
mov
lea
cltd
aad
jne
cvtps2pd
je
sub
sub
mov
fcompl
xchg
out
shrb
jae
repz
inc
pop
and
xchg
insl
mov
inc
adc
mov
pop
or
nop
gs
je
sti
incl
cli
loope
sub
ss
mov
push
test
xor
mov
sahf
std
js
xor
ds
imul
mov
push
pushf
ror
mov
fdiv
call
popa
aam
cmp
pop
dec
dec
mov
xor
ds
jl
jl
andb
add
push
ljmp
pop
sub
jns
sahf
and
jge
xlat
add
rcll
sub
icebp
jns
fcomps
imul
pop
jne
pushf
mov
add
add
dec
sub
add
inc
insb
gs
push
xchg
lock
lods
loope
mov
dec
inc
mov
jae
outsl
cmpsb
leave
lret
pop
dec
stc
pop
pop
cmpsb
mov
pop
push
icebp
and
jno
aaa
add
loopne
mov
and
xchg
in
push
mov
repnz
js
int3
dec
add
push
sbb
dec
arpl
add
mov
jp
cmpsl
outsl
jbe
mov
nop
inc
sbb
lcall
fcomip
dec
int
ficompl
jp
icebp
ds
jbe
inc
bound
es
sbb
ret
rcl
aas
sbb
popa
and
pop
mov
popa
sbb
dec
call
mov
dec
aad
mov
or
inc
stc
jl
sub
out
push
push
xor
cwtl
cli
aas
sbb
clc
jns
lahf
pop
lods
orb
pop
insb
jmp
leave
arpl
sbb
mov
ljmp
lret
add
mov
add
mov
lds
inc
popf
sub
jno
add
pop
adc
push
and
mov
mov
ficompl
das
cmpsb
in
jmp
xor
adc
inc
js
es
mulb
int
pop
rcl
adc
idivb
xchg
push
sbb
call
cmc
outsl
cmp
shll
popl
mov
aad
push
add
lahf
mov
mov
mov
mov
dec
data16
sub
xchg
mov
adc
imul
mov
data16
fwait
into
ja
mov
out
push
rorb
std
xchg
pop
xchg
test
cmp
mov
inc
and
shlb
les
mov
fsts
xchg
add
or
xchg
inc
popf
xchg
adc
adc
push
movsl
lock
clc
jno
aaa
lcall
fsubr
xchg
add
jmp
fisttpl
mov
pop
ljmp
out
jns
add
add
sbb
int3
les
xor
add
push
or
push
ja
inc
out
and
jb
mov
inc
lahf
push
dec
aad
daa
pop
jl
cld
decl
cmc
ds
adc
mov
jb
sbb
inc
lret
shlb
enter
insl
lock
mov
mov
mov
sbb
mov
out
mov
js
sarb
mov
stos
xor
mov
or
loope
dec
inc
and
mov
and
mov
pop
hlt
sbb
xor
scas
and
xor
mov
xchg
pushf
xor
adc
sub
cmp
in
sbb
bound
test
mov
mov
movsl
inc
jo
stos
ret
iret
adc
add
mov
cmp
lahf
pop
outsl
inc
jo
mov
pop
lcallw
xchg
adc
mov
in
mov
pop
sbbl
dec
adc
mov
sub
mov
aad
adc
add
xchg
dec
or
push
jns
adc
and
out
add
sbb
and
jnp
test
outsb
adc
mov
xchg
jae
push
test
mov
mov
ss
inc
fdivrs
aas
pop
cld
imul
fst
loope
bnd
add
out
dec
push
out
cltd
fisubl
gs
jne
xlat
mov
scas
pop
cmpsb
mov
ja
movsl
pop
or
inc
jno
mov
jmp
or
push
enter
or
inc
sti
mov
test
fchs
mov
xchg
mov
mov
cld
scas
mov
lret
fsts
push
and
cmc
dec
sbb
rcrl
stc
out
inc
fcom
and
mov
sub
mov
cmp
fs
iret
xor
imul
adc
inc
xor
mov
jae
fs
sbb
cltd
mov
mov
outsl
cmpb
imul
cmp
test
mov
jo
pop
mov
xchg
dec
aad
in
lahf
mov
or
in
scas
xchg
push
xor
lods
mov
inc
mov
xchg
aas
cltd
lock
push
mov
je
rorl
and
sti
ret
xor
shlb
xchg
inc
add
pop
push
clc
popf
jne
jae
jg
into
popf
cwtl
aam
jbe
outsl
mov
shrb
push
jbe
cmp
sbb
xorl
aaa
ja
inc
testl
push
inc
nop
jecxz
inc
shrb
cltd
shrb
xor
int
out
ds
fdiv
sbb
test
js
push
lock
adc
adc
push
je
mov
mov
icebp
out
cmpsb
push
and
imul
or
repz
aad
or
pop
aaa
fwait
ja
xor
mov
and
or
hlt
cwtl
or
inc
xchg
inc
sub
and
and
mov
enter
add
sub
ret
test
sub
stc
add
add
pusha
jge
sbb
nop
negl
push
jle
mov
popf
sti
icebp
or
pusha
sub
sub
jno
pop
push
aas
movsl
push
sbb
fmul
mov
rolb
cmp
jo
mov
scas
push
jb
adc
jno
jge
lahf
cs
shrl
mov
ds
insb
cmp
mov
pop
pop
pushf
mov
mov
mov
iret
jnp
mov
arpl
push
lods
sbb
pop
pop
and
dec
jmp
push
pop
popf
lds
xchg
or
push
cmpsl
or
stos
faddl
jmp
cmp
xchg
mov
jo
mov
rol
in
adc
into
testb
pop
sub
push
sbb
jbe
jmp
aad
out
mov
aas
push
lret
fiadds
in
cmp
mov
fcoms
dec
fmuls
bound
push
scas
pop
dec
mov
lods
mov
ds
mov
jg
xchg
push
inc
pop
orl
call
mov
xor
inc
scas
int3
pop
fcompp
or
mov
pop
test
icebp
rclb
cmp
or
loope
cli
xchg
mov
nop
push
jp
lods
mov
dec
adc
sti
push
mov
sub
push
mov
test
out
int
dec
sub
popa
mov
mov
inc
lret
ljmp
mov
sahf
aad
or
mov
aam
fwait
lcall
shlb
insl
mov
sbb
negb
in
sub
adc
push
cli
and
jmp
xchg
mov
push
stos
and
dec
movsb
xbegin
mov
bound
inc
pushf
fadd
bound
inc
mov
orl
sbb
cs
xacquire
dec
sti
cmp
cmp
sub
cmp
fidivrl
jg
adc
jecxz
dec
mov
div
xor
sarb
and
enter
dec
lret
outsb
rcll
popf
fadds
stos
lcall
xchg
aas
xchg
movsl
and
jae
stos
xchg
xchg
scas
nop
enter
out
shrl
arpl
cmp
fimuls
loopew
sub
fdivl
fdivl
or
daa
cmp
sbb
aam
adc
mov
popf
dec
cmp
aam
fstpt
inc
sbb
lcall
jae
cmp
sub
or
imul
scas
mov
sub
jae
push
sub
hlt
and
sub
or
lds
push
std
and
fcmovne
je
je
mov
bound
jno
dec
lods
dec
test
push
int
outsl
es
es
and
pushl
stc
pop
fsubs
add
je
vmovlps
cmp
push
push
jb
xchg
int
jnp
push
fsubl
dec
idivb
jb
push
and
push
mov
hlt
push
sub
xorl
loopne
ljmp
jecxz
fadd
fistps
inc
pop
lcall
fbstp
roll
aam
cmp
xchg
call
fst
leave
jl,pn
fcomp
push
out
jnp
icebp
jb
imul
jecxz
mov
pop
sub
int
stc
pop
or
jle
inc
test
pop
xchg
add
cmp
and
mov
fsub
insl
sarl
and
mov
pushf
pop
push
push
and
pop
nop
sbbl
lret
hlt
addr16
jl
orb
or
call
sub
jecxz
dec
push
xchg
cmp
jnp
add
xlat
adc
jb
out
sub
push
jp
cs
jbe
lds
mov
pop
adc
lods
jl
shll
or
push
push
adc
sahf
decb
xchg
pop
fs
bound
sub
icebp
mov
or
add
adc
dec
cld
in
mov
xchg
vphadduwq
les
pop
out
jno
push
xor
add
sbb
cmp
jno
movsb
lock
dec
sbb
adc
fcmovu
lock
imulb
jecxz,pt
in
daa
lret
adc
nop
popf
enter
cmp
pop
push
or
rorb
fldenv
fcomps
and
sahf
sub
lods
loop
lret
addr16
push
mov
add
lock
jl
loop
fidivs
jo
mov
xchg
or
jg
xlat
xor
and
lcall
fsubrs
pop
mov
mov
hlt
mov
mov
push
lret
sub
mov
xchg
sub
pop
mov
daa
ja
pop
mov
repz
sarb
xor
insl
cs
in
in
mov
ficompl
pop
in
jecxz
in
data16
stos
jg
push
es
pop
mov
in
popa
inc
ljmp
pop
fnstcw
stos
sar
mov
cmp
inc
fdivl
lds
sbb
ljmp
xlat
push
lahf
lret
jae
xor
jne
ror
pop
stos
lock
cmp
fbld
add
pop
call
mov
call
mov
xchg
cmpb
inc
push
fstl
aad
test
cmp
out
inc
cmp
push
push
divl
in
cmp
xor
mov
lods
popf
and
loope
pop
in
xor
inc
arpl
imul
mov
xchg
in
sbb
fildl
adc
mov
and
into
mov
add
adc
imul
fidivl
in
mov
out
rcll
out
lret
adc
mov
xor
mov
push
xchg
push
add
jmp
out
enter
and
ljmp
lcall
adc
cmp
rorl
mov
fstl
out
adc
stc
jne
jle
cmpsb
xchg
stos
inc
imul
sbb
sbb
xor
dec
xor
or
xchg
dec
leave
and
xorl
xchg
or
ret
test
mov
jo
jecxz
inc
out
mov
fwait
inc
pop
cmp
xlat
in
adc
sub
sbb
pop
ja
xchg
xor
push
addr16
fiaddl
icebp
mov
hlt
rolb
inc
test
lods
sub
pusha
lahf
sub
and
jl
xchg
fldt
out
jo
loop
mov
lea
push
movsl
scas
fcmovbe
js
dec
movsl
ja
jmp
int
or
push
mov
aad
jae
sbb
bound
mov
test
pop
popa
cli
out
test
fldl
ret
dec
jno
or
in
pop
nop
inc
imul
out
cmpsl
std
iret
dec
cwtl
jge
ret
cmp
arpl
lcall
ljmp
into
jp
imul
dec
movsb
and
addr16
fcompl
adc
push
sub
or
cs
enter
repnz
pop
add
cmp
mov
dec
outsl
cmpsb
rcrb
adc
loopne
shll
fadds
inc
fisubl
call
mov
xor
icebp
sub
push
dec
inc
xchg
mov
ja
mov
and
and
mov
lock
outsb
int3
push
movsl
ret
cmp
mov
imulb
cmp
add
and
add
mov
add
sahf
mov
scas
data16
ljmp
cmc
cli
cmpsl
sub
inc
clc
xchg
jb
pop
and
addb
imul
fstpl
pop
in
cltd
mov
mov
lahf
daa
fst
sub
inc
add
ja
cs
jb
xchg
ja
jne
ret
xchg
inc
dec
push
mov
sub
imul
sahf
inc
es
cltd
outsl
lock
sbbb
push
arpl
or
pop
out
mov
nop
mov
inc
in
xor
pusha
je
jo
fdivl
push
or
inc
jle
test
pushf
fcmovb
inc
xchg
add
jbe
push
hlt
mov
cmp
inc
lds
cmp
lods
in
jne
sub
xchg
mov
inc
addr16
sbb
rclb
mov
inc
cmp
add
mov
jno
mov
sbb
mov
jle
rorb
dec
adc
dec
xlat
adc
mov
and
xchg
sahf
loop
js
je
in
adc
jg
cmp
repnz
into
mov
aas
mov
mov
cmp
add
sub
jno
aam
dec
xchg
sub
sbb
fnstenv
into
push
ds
jae
xchg
or
mov
bound
push
jp
push
cmp
dec
cmp
add
fstps
mov
jo
and
cmp
in
loop
push
shll
stc
mov
push
jnp
pusha
fisubrl
mov
imul
faddl
ja
cs
pop
scas
push
cmp
xchg
and
ret
stos
pop
adc
mov
aad
sub
mov
mov
cmpsb
xor
out
sub
shll
sarl
or
jb,pn
je
cld
enter
mov
cmp
hlt
mov
insl
push
hlt
lahf
ss
jecxz
loope
test
push
pop
arpl
adc
and
fstpt
aam
movsl
scas
mov
mov
fcomp
ljmp
or
add
out
pop
jae
jae
sub
mov
dec
add
cwtl
mov
ret
repnz
dec
xchg
int3
sub
mov
push
sub
jecxz
addl
in
movsl
mov
gs
movsb
js
add
mov
sub
fwait
mov
push
sahf
scas
inc
mov
test
rcr
xchg
sub
leave
push
out
mov
popa
test
out
mov
imul
xor
sub
pushf
pop
or
sub
lods
mov
insl
adc
mov
mov
sub
repnz
fs
push
negb
cltd
stos
add
lcall
pop
jl
loope
dec
decl
test
bndstx
loope
pop
sarl
mov
cmpsb
mov
mov
iret
jmp
pushf
lret
push
fbstp
jo
mov
xor
jb
enter
leave
add
movsb
push
mov
mov
add
ss
je
dec
cmp
mov
ficoms
cmp
xor
jbe
mov
imul
xor
dec
mov
fistps
sahf
mov
jo
push
push
ret
mov
in
outsl
push
xchg
cmpsl
and
lcall
xor
out
or
repz
push
lods
jae
into
add
ljmp
ret
cmp
out
outsb
push
mov
paddq
pop
shl
add
sub
ja
out
or
dec
mov
cmp
icebp
ja
ror
into
add
xchg
inc
clc
lds
xor
mov
outsl
xchg
xchg
mov
faddl
add
flds
cmp
rorl
cwtl
cwtl
cmpsb
int
aad
add
mov
out
aas
pop
mov
xlat
or
inc
ss
clc
xchg
das
push
sbb
rcrl
out
sub
dec
sub
outsb
push
inc
repz
mov
cltd
loope
adc
adc
mov
xor
inc
mov
adc
mov
fwait
aad
push
lcall
xor
adc
es
push
mov
lcall
movsb
pop
add
dec
or
in
mov
fisttpll
lock
mov
sbbl
mov
flds
popf
movsb
mov
xor
xlat
or
mov
mov
shrb
movsl
mov
hlt
push
pop
mov
sbb
pop
es
mov
test
mov
repnz
loopne
xchg
or
loop
sub
dec
outsb
cmpsb
jmp
jb
movsb
neg
imul
pop
rorb
test
aaa
addb
mov
jo
int3
add
mov
int
pop
cmp
test
push
filds
cmp
cmp
decb
xor
push
dec
jns
movsb
inc
sbb
sbb
rcrl
push
xchg
filds
and
mov
ret
jmp
mov
mov
mov
inc
rclb
dec
mov
cmp
push
mov
negl
xchg
mov
in
or
pop
cmp
rcrl
xchg
mov
rorb
iret
in
repnz
icebp
jmp
es
cltd
les
mov
dec
sub
cmp
xchg
mov
outsl
stos
add
in
movsb
fdivs
clc
jns
pop
or
xor
mov
in
shrb
fstps
xor
push
inc
xchg
add
jbe
mov
lahf
cmp
dec
pop
outsl
jmp
cli
pop
lret
mov
lock
cmp
xchg
mov
mov
repnz
std
xchg
push
jmp
mov
jmp
lea
sub
jg
lret
iret
xor
pop
push
mov
add
adc
add
test
std
mov
sarl
or
and
out
pop
and
lea
ficomps
in
and
bound
jg
icebp
mov
jmp
outsl
mov
je
sub
mov
jmp
mov
mov
lods
aad
cltd
mov
pop
stos
call
clc
cmc
icebp
lods
sahf
cmovbe
cmp
in
fcmovnb
mov
xchg
es
sbb
adc
mov
out
enter
push
jbe
shlb
jbe
call
ret
ret
push
out
imul
mov
pop
les
fistpl
sbb
xor
push
inc
arpl
leave
push
in
push
das
out
jbe
addr16
rorb
dec
add
push
xor
in
arpl
inc
dec
aad
pop
and
cmp
ret
js
pop
ss
out
sub
sbb
pop
cmp
mov
jbe
cmc
int
cmpsb
stos
lods
sbb
mov
inc
dec
sti
test
jae
xor
pop
sbb
inc
sub
hlt
or
lods
xor
push
cld
repz
xor
jno
sub
outsl
pop
push
ret
xlat
dec
or
pop
or
adc
icebp
xchg
xchg
fsts
cmpb
or
jb
repz
mov
inc
mov
jmp
dec
mov
mov
inc
dec
mov
pop
js
push
ret
mov
pop
jecxz
mov
mov
or
push
mov
add
and
lock
mov
cs
gs
arpl
je
es
add
das
cmp
std
dec
fsubrl
aam
jbe
cmp
mov
xor
movsl
push
cwtl
icebp
add
mov
push
jmp
fcoms
lcall
dec
mov
jecxz
std
mov
movl
std
pop
cmp
sti
xchg
cmp
lods
inc
xchg
mov
add
fcmovnbe
mov
dec
xor
add
pop
mov
pop
jle
pop
sub
rorb
sub
or
cmp
xchg
ficoms
shl
ljmp
fwait
dec
in
fsts
movsb
addr16
push
lods
inc
xchg
popf
adc
inc
fisubl
adc
adc
sub
repz
cmpsb
push
smsw
mov
jbe
jmp
pop
sbb
insl
fldenv
xlat
mov
xchg
and
adc
jle
add
shlb
push
mov
repnz
loop
lea
adc
and
gs
pop
int3
and
in
hlt
je
push
addr16
or
xor
mov
iret
cmp
push
jae
lret
bound
stos
js
dec
fbstp
push
jb
mov
sub
and
xor
add
or
addl
xchg
in
in
inc
fcoms
aad
cld
inc
sub
cmp
aam
das
push
push
stc
add
shll
pusha
xorl
cmp
pop
sub
lods
clc
mov
les
adc
push
addr16
inc
loopne
cltd
cmp
imul
js
push
or
mov
mov
out
les
jl
or
dec
adc
lret
inc
lcall
jns
jl
mov
fstl
cs
sub
push
or
mov
ffreep
cli
sbb
inc
mov
cmp
mov
cmp
adc
jle
cmp
test
cltd
testb
mov
sub
fimull
jbe
cld
daa
pop
pop
sti
nop
jg
mov
adc
jnp
loopne
inc
lods
fndisi(8087
mov
cmp
out
loopne
push
mov
xchg
push
xor
cmpsl
mov
jbe
bound
loope
lret
mov
in
lods
int3
jae
outsb
add
dec
lret
enter
xor
inc
dec
sub
ds
inc
and
lret
lcall
or
xchg
daa
pop
add
cmp
insb
test
ja
sarl
sarl
adcb
lret
enter
dec
sub
sbb
in
sbb
cmpsb
pop
rorb
or
and
fcmovb
imul
call
shlw
adc
scas
dec
out
adc
sub
shrl
add
pushf
fisttps
lock
and
lock
stos
test
daa
push
mov
rcrb
ljmp
fwait
aad
test
fwait
dec
bnd
jb
xchg
outsl
xchg
xchg
inc
pop
out
inc
aam
add
addr16
fidivl
add
mov
std
dec
pop
dec
xor
pushf
dec
call
movsl
cli
lcall
xchg
mov
or
jecxz
xchg
imul
ret
cltd
dec
mov
or
nop
or
jle
or
test
mov
xor
in
mov
jae
dec
aaa
leave
xchg
inc
sti
push
sbb
mov
sub
add
adc
jno
les
out
mov
inc
mov
jge
sti
cmpsb
loopne
add
jne
daa
pop
and
iret
pop
subb
les
dec
arpl
comiss
mov
add
jecxz
out
dec
nop
mov
or
outsb
add
cmp
arpl
xor
sub
pop
sub
xor
idivl
stos
inc
out
out
jbe
mov
mov
scas
add
mov
lahf
leave
mov
or
fsts
pop
std
cmp
mov
push
sahf
lods
cli
cmp
sub
jle
out
dec
ror
scas
test
pusha
cmpb
int
stos
push
pop
movsl
jp
adc
lea
js
add
jecxz
ljmp
stos
mov
push
mov
push
movsb
ret
xchg
sbb
insb
fs
jo
mov
subl
fs
pop
arpl
ss
xorl
fsub
add
push
xchg
xchg
push
stc
aaa
lds
mov
cmpsb
jnp
pop
in
dec
loop
inc
mov
insb
clc
jns
and
leave
gs
sub
jl
inc
sub
push
push
mov
in
ljmp
outsl
or
or
push
aad
and
jb
or
xchg
push
xor
jno
cmp
cmpsl
adc
push
clc
lret
in
roll
xchg
mov
testb
sbb
ds
stos
shl
adc
icebp
xchg
push
test
or
sbb
fnstcw
std
insb
mov
jg
test
leavew
pop
push
xchg
pop
ret
xor
shlb
std
adc
in
clc
inc
ljmp
cmp
faddp
cmp
mov
jbe
dec
jp
pop
push
add
repz
jle
cs
mov
mov
mov
mov
lcall
icebp
mov
insb
lret
cld
sbb
xchg
movsl
push
lds
add
mov
rcrb
enter
cmp
mov
js
cld
mov
jb
iret
mov
mov
pop
mov
clc
adc
jae
out
sub
cmc
sub
movsl
cmpsb
sbb
pop
out
or
add
adc
adc
cmpsb
mov
pop
shr
lret
into
dec
xor
or
mov
bound
fs
mov
inc
mov
xchg
lock
pop
call
movsl
pop
subl
adc
sbb
adc
lods
les
pop
filds
xor
mov
xor
sub
and
and
and
mov
or
push
dec
and
fs
mov
ja
rclb
xchg
sub
push
xchg
sbb
xlat
pop
imul
aas
xchg
and
clc
pop
in
add
mov
jne
cmp
loop
mov
or
or
rorb
mov
mov
or
loope
addr16
mov
xor
out
xlat
data16
mov
jmp
xor
jns
repnz
lea
xor
sbb
mov
jno
aas
outsb
jg
push
xor
cmc
inc
mov
lock
lods
dec
sub
pop
jns
movsl
addl
lods
cld
xor
xchg
and
or
mov
cs
jp
int
mov
inc
xlat
cmc
xchg
movsl
pop
hlt
dec
cmpsl
xchg
jge
int3
xor
adc
cmpsb
mov
inc
lret
dec
sub
mov
xor
fisttpll
jnp
jo
rorb
mov
mov
push
inc
loop
add
cli
inc
mov
jb
pop
loop
dec
add
cli
cmp
xchg
test
dec
jge
es
and
add
sahf
out
pop
sub
or
mov
lret
pop
add
loope
popa
outsb
xor
movb
sbb
xchg
stc
or
pop
add
stos
jmp
sbb
jg
in
cltd
int3
pop
sbb
aam
inc
and
xor
xlat
sarl
lcall
inc
out
lcall
cli
fimull
jbe
jnp
inc
ss
imul
fs
mov
cmp
jns
cltd
or
mov
sbb
sbb
in
repz
xchg
and
cmp
pop
stos
dec
pop
aas
ljmp
insb
fsubrs
in
scas
inc
mov
push
lock
pop
mov
mov
sub
out
xor
inc
and
test
pop
xchg
cmp
popf
xor
sub
mov
faddl
sbb
stc
loope
fcoml
sahf
cmp
and
les
repz
stos
push
or
les
add
iret
mov
adc
js
push
xchg
int
adc
fcmovb
xchg
sbb
fwait
sub
sbb
jle
mov
aaa
and
iret
or
jns
mov
hlt
std
outsl
daa
inc
loope
lahf
jo
mov
jecxz
movsl
inc
in
cli
jno
lret
lock
adc
cs
repnz
mov
dec
jp
xor
push
arpl
pop
arpl
hlt
das
jmp
nop
rcl
testl
xlat
mov
add
inc
jmp
cmp
loop
xor
sub
sbb
or
enter
lcall
movsb
sbb
bound
test
mov
or
and
sbb
fsubrl
xchg
rclb
push
stos
pop
mov
enter
aaa
lods
call
sub
rol
sahf
lret
inc
setbe
mov
xor
pushf
insl
sbb
push
pop
pop
in
sar
aaa
enter
jecxz
dec
and
or
pushaw
repz
ljmp
mov
bound
mov
in
push
hlt
inc
data16
callw
and
stos
sbb
xadd
nop
push
aas
mov
das
and
and
add
mov
insb
in
adc
orb
pop
mov
dec
sbb
and
add
push
jp
mov
outsb
movl
loope
push
xor
add
popf
inc
aam
dec
or
mov
push
aas
ret
enter
dec
inc
mov
mov
sbb
xchg
aad
sahf
bound
cli
shl
mov
mov
lret
mov
mov
rorl
test
and
mov
mov
jbe
sub
cmp
xchg
mov
sub
test
jge
dec
xchg
je
jecxz
sbb
sub
jo
out
xchg
in
fdivs
or
inc
mull
mov
push
mov
push
cmp
pop
lds
jecxz
mov
je
and
and
jnp
popf
out
pop
jle
pop
and
insb
jo
imul
lods
cwtl
mov
and
lcall
inc
shr
xchg
pushf
js
popf
daa
add
xorb
and
lock
pop
add
stc
sbb
pop
push
rep
int
or
pop
jne
repz
repnz
jg
movsb
nop
in
sbbb
push
sub
daa
or
loopne
pushf
pop
mov
xor
mov
and
mov
pop
cmp
loopne
pop
popf
sub
pop
je
js
mull
daa
push
int3
sahf
pop
pop
pop
xchg
adc
mov
sbb
mov
adc
inc
mov
xchg
addr16
mov
cwtl
fistpl
loope
dec
inc
mov
mov
add
mov
mov
aas
hlt
fisttpl
frstor
bound
dec
les
repnz
cwtl
push
stc
adc
xchg
mov
jo
repz
daa
mov
adc
push
pop
pop
lcall
icebp
jo
jp
aam
cli
or
in
inc
call
hlt
dec
fwait
push
push
mov
inc
pop
popa
cmp
lds
push
cltd
sbb
or
add
shl
and
inc
lods
xor
xor
inc
ret
or
out
dec
stos
fstpt
push
mov
enter
push
ret
jge
iret
sub
mull
cmp
xchg
loope
and
and
js
iret
or
jb
repz
jp
and
dec
icebp
jo
rorb
inc
cmpsb
jmp
iret
mov
jo
add
adc
jno
xchg
or
stos
call
sbb
and
mov
sub
loop
sahf
dec
movsb
fnstenv
inc
xor
inc
iret
enter
push
lea
insl
movsb
in
add
test
mov
shl
cmpsl
mov
subb
fisubrl
aas
ss
je
inc
mov
dec
in
add
stos
test
popf
gs
and
xor
adc
popa
jno
int
iret
jge
adc
loop
jbe
mov
xlat
repz
mov
addl
push
ja
and
sub
repnz
or
test
xlat
or
or
mov
fstp
jae
jle
push
cmp
pop
aad
cmpsb
imul
dec
fsubrp
aaa
or
pop
mov
adcb
sbb
mov
pop
jns
data16
movsb
test
add
mov
or
pop
jae
xorb
xor
test
sub
popa
int
pop
cs
cmp
mov
jge
mov
push
xor
loop
mov
lret
jge
aam
add
cmp
mov
mov
sbb
movsb
mov
mov
pop
inc
mov
int
mov
rorb
push
loopne
sbb
rolb
pushf
shlb
test
xchg
aam
data16
in
aas
fsubrs
pop
ja
popa
jae
repz
jnp
cs
andb
push
ja
out
out
pop
push
addb
inc
es
mov
mov
es
mov
pop
or
add
fdivl
fsubr
adc
stos
pop
push
jp
inc
imul
xor
inc
mov
mov
test
rcr
jmp
stos
cwtl
sub
inc
pushf
fwait
gs
clc
xchg
cmp
xchg
inc
adc
lcall
mov
mov
dec
or
push
popa
fsubrs
sub
sbb
or
xorb
inc
jnp
int3
ljmp
mov
cmp
cmp
mov
jnp
loop
filds
mov
pop
xchg
xor
xchg
xor
jb
sub
push
mov
adc
clc
cltd
push
fwait
movsl
sub
dec
js
stos
in
push
mov
jmp
inc
shlb
cmp
adc
push
outsl
lds
mov
push
pop
fwait
int
stos
insl
incl
call
jns
aas
in
cmpsb
fdivr
cmp
mov
mov
in
cmp
sbb
pop
jl
into
cli
je
insl
xchg
repnz
cmpsb
push
repnz
scas
hlt
xchg
es
dec
mov
jmp
push
enter
movsb
add
xchg
pop
loopne
or
push
or
jbe
xor
mov
push
lret
jmp
js
pop
xchg
rcll
cmpsl
jbe
bound
jg
fadds
cmp
push
bound
mov
les
fstpl
and
jg
dec
or
mov
or
ficoml
sub
jno
daa
cmp
loopne
dec
jno
in
add
movntq
mov
mov
sahf
push
arpl
adc
jne
js
inc
dec
mov
jno
dec
lock
cmp
xchg
loopne
mov
jne
pop
push
nop
xchg
push
cltd
rolb
orl
xchg
cmp
daa
mov
test
iret
push
mov
clc
pop
scas
aas
arpl
mov
mov
jb
outsl
es
xchg
sub
sub
scas
lods
incl
pop
cmp
dec
and
push
xchg
push
test
mov
inc
jns
sub
dec
mov
xchg
and
mov
push
inc
movsb
pop
and
mov
jp
pop
mov
push
iret
push
test
add
xor
jg
jno
pop
xor
xchg
add
cmp
rorl
js
pop
mov
xor
and
xchg
jo
sbb
and
jmp
or
inc
jo
ljmp
add
xor
popf
push
add
or
push
ficomps
xor
data16
cwtl
mov
popa
notl
lods
test
sbb
xchg
shrl
pop
cmpsb
lret
jno
add
shlb
push
mov
imul
rolb
addr16
add
out
sti
int3
xchg
inc
insb
sub
lods
mov
iret
das
out
cwtl
leave
push
nop
cmpsl
daa
jmp
rorl
inc
lcall
xchg
cld
or
ds
adc
sub
mov
fmuls
sbb
gs
or
or
push
gs
xchg
arpl
jp
xchg
jae
test
lea
in
inc
inc
loope
dec
push
sub
es
repz
lret
dec
push
jl
dec
cmp
aaa
fwait
and
sub
inc
dec
pop
inc
cmp
add
ret
jno
dec
jne
add
fdivl
test
jnp
mov
bound
cli
imul
and
iret
add
jecxz
inc
adc
fisttpl
jb
clc
mov
push
shll
data16
js
xchg
aas
mov
dec
jns
mov
cmp
ficoms
dec
mov
dec
add
adc
les
cld
sub
flds
cmp
sbb
push
div
add
and
jnp
dec
orps
call
imul
stos
repz
popa
jnp
mov
call
addr16
imul
adc
into
shrb
cmp
cmp
adc
lods
pop
mov
imul
cmp
inc
fisubrl
stos
popf
popa
js
jmp
sub
hlt
jbe
inc
js
sti
aam
pop
cs
jbe
inc
mov
andl
and
movsb
mov
mov
mov
test
rclb
sbb
fistps
fsubs
jo
gs
jo
stos
popf
fxam
icebp
or
repz
mov
mov
cmp
inc
aam
sbb
sbb
lret
pop
cmp
add
pop
dec
xchg
fcomps
jae
mov
mov
mov
sub
rcl
push
mov
xor
sbb
mov
scas
jnp
lds
ds
cmc
jl
movsb
cmpsb
or
push
pop
lret
call
aas
sti
cmpsb
inc
jo
add
sbb
mov
adc
or
adcl
push
adc
or
push
dec
mov
mov
xor
call
mov
and
adc
and
or
mov
xor
xor
mov
add
test
cmpsb
sti
bound
and
xchg
out
mov
jl
bound
and
cmp
loope
pop
add
jnp
dec
sub
pop
fidivrl
adc
mov
cmc
add
imul
cmpsb
inc
iret
insl
push
addb
dec
fistl
add
adc
jg
in
push
sbb
sarl
imul
pusha
movsb
jp
lock
mov
push
add
les
jnp
pop
cmpsl
iret
sub
sbb
call
fsub
push
mov
sbb
and
sub
push
lods
cmp
dec
mulb
loope
pop
fisubrs
mov
nop
fildl
fcoms
pop
loopne
ljmp
sub
cmpb
xor
lea
lret
pop
imul
data16
repnz
mov
xor
scas
push
movsl
adcl
xrelease
adc
mov
dec
pop
aad
or
adc
adc
rcrl
ficoms
loopne
inc
inc
ss
fs
fstpt
test
lcall
mov
add
fmul
fildl
jle
in
add
rclb
inc
cmp
fdivrl
leave
call
and
or
sub
data16
mov
xchg
inc
mov
std
dec
dec
add
insb
lcall
cmp
pop
add
cltd
hlt
lods
sbb
pop
xor
sbb
sbb
and
mov
ljmp
push
xor
adc
repz
stos
cmp
sub
mov
cmp
es
rorl
sub
mov
shll
femms
cmp
fdivl
jb
dec
jl
mov
in
xchg
mov
daa
pusha
push
in
ret
repz
jge
lcall
arpl
pop
xor
sub
push
ja
je
push
test
arpl
push
in
add
pop
mov
xchg
in
dec
pop
pop
repz
rol
dec
mov
aam
lods
sub
daa
popf
test
mov
iret
pop
fisubs
divb
dec
scas
jecxz
outsb
dec
jns
movsl
cmp
lods
movsb
imul
fbld
fwait
pop
add
lahf
xchg
scas
push
and
jnp
xchg
cmpsl
xor
adcb
jo
js
push
mov
imul
ret
test
cmp
nop
test
sahf
cmp
xchg
cmp
sbb
jmp
pop
push
sti
jne
inc
ja
xlat
inc
rorl
fwait
hlt
fcomps
inc
mov
aam
into
imul
sbb
pushf
aam
xrelease
cmpsl
daa
std
dec
xchg
adcb
sbb
mov
inc
in
jl
pop
inc
mov
jbe
loopne
sbb
enter
ret
jnp
sbb
rcll
push
imul
mov
or
xor
jg
cld
lods
call
test
inc
int
rol
stos
sahf
adc
jl
push
std
jg
lea
sub
pushf
movsl
fbstp
loopne
xor
testl
ret
or
mov
jae
jns
xor
orl
dec
cwtl
push
xor
cli
fldl
mov
out
test
popf
fwait
imul
sbb
mov
dec
jno
lea
xchg
mov
pop
pop
cld
leave
in
ds
mov
ljmp
das
jnp
add
add
sbb
dec
mov
sti
mov
xchg
xchg
arpl
rclb
out
ret
mov
mov
push
jb
xchg
in
in
insl
fisttps
mov
mov
scas
jle
and
ja
icebp
jb
xchg
xlat
roll
mov
std
and
loop
and
into
pop
mov
pop
xor
push
andb
aaa
js
addr16
mov
sub
push
and
mov
es
iret
pop
popf
mov
sahf
adc
xor
xchg
adc
mov
mov
in
or
dec
xlat
insl
push
mov
fcomps
cmc
sub
orb
imul
push
lea
cmp
stos
lret
stc
and
dec
aad
add
and
stos
stos
xor
movsl
out
and
inc
mov
inc
mov
jns
xorb
mov
daa
push
mov
and
shll
push
push
inc
rorl
das
lret
push
fisttpl
adc
push
xchg
push
imul
orl
shl
push
mov
mov
xlat
xchg
mov
scas
and
cmpsl
dec
scas
push
xchg
mov
sbb
out
aas
xchg
dec
jbe
sub
pop
dec
sbb
xor
lret
lret
inc
pushf
xchg
jg
push
jnp
mov
mov
xor
cmp
mov
jp
push
iret
cld
outsb
push
insl
mov
sub
out
and
mov
cwtl
cmpsl
mov
xor
mov
repnz
out
cmpsb
mov
out
pusha
iret
push
ja
int3
test
xor
mov
enter
rcrb
jno
mull
push
push
test
and
inc
ret
or
sbb
rclb
in
fdivl
insl
dec
cmp
xchg
xor
mov
imul
daa
sarb
ljmp
out
stos
adc
mov
jne
inc
inc
test
dec
xor
andl
out
outsl
cmp
push
aaa
les
mov
mov
stos
or
les
mov
dec
loopne
cmp
loopne
inc
and
push
insb
andl
addb
das
xor
pop
mov
int3
xor
fstps
dec
sub
pop
ds
test
outsl
ds
in
shlb
inc
mov
loop
adc
mov
mov
jo
fsubrl
mov
mov
push
mov
enter
shl
pop
imul
lahf
iret
sub
or
or
enter
mov
dec
popa
repz
ss
xor
icebp
push
rorb
mov
lahf
push
pop
iret
out
arpl
add
bound
je
scas
adc
mov
push
shl
les
cltd
nop
jne
out
mov
pop
mov
push
popa
mov
int3
scas
lret
lds
ss
ret
mov
gs
adc
leave
in
jl
js
divl
push
add
sbb
cmc
daa
mov
xor
pop
mov
outsb
sub
sub
inc
inc
adc
loope
xchg
cltd
arpl
xor
insb
sub
push
pop
out
aas
push
add
ss
mov
xchg
cmpb
pushf
push
push
xor
xor
shll
cmp
add
pop
mov
fnsave
insl
shr
js
push
fsts
sti
fistpll
adc
mov
and
imull
enter
lcall
ret
jmp
mov
or
push
xchg
imul
imul
add
mov
mov
test
clc
dec
in
add
fcomps
pop
jne
xor
pop
pop
xchg
lds
loop
loopne
mov
out
scas
jne
cmc
test
pushf
gs
pop
cli
push
pop
xor
mov
leave
in
aad
imul
jecxz
inc
add
mov
and
pop
xor
xchg
xchg
and
mov
or
or
icebp
mov
xchg
fnsave
mov
pop
shrb
fsubl
add
or
mov
lahf
aad
pop
leave
jbe
repnz
mov
sub
insb
jge
adc
xor
lods
or
flds
adc
adcb
dec
or
jle
push
fdivrl
mov
mov
xlat
fldcw
dec
mov
ja
dec
cmp
xchg
out
into
pop
iret
dec
gs
xchg
xor
cltd
jl
out
xor
cmp
in
popf
iret
dec
mov
add
pop
inc
ds
adc
movsb
mov
repz
clc
jecxz
ja
out
in
scas
mov
add
adc
sbb
fsubrl
pop
dec
cmpsl
jmp
test
inc
scas
add
jne
pop
and
int3
loopne
insb
sbb
xor
lret
ret
xchg
les
ret
test
sbb
add
push
test
dec
icebp
lahf
push
daa
fbld
aam
jbe
sbb
mov
jle
fildll
popf
daa
mov
std
mov
arpl
rclb
adc
or
sbb
or
jl
inc
push
pop
xor
or
sbb
or
inc
push
or
xchg
sbb
not
fiadds
enter
sbb
fdivrp
pop
mulb
sti
push
jge
jo
adc
xchg
cli
mov
sahf
xchg
or
lcall
adc
fidivrl
test
shrb
ret
add
dec
fstpt
xor
inc
mov
add
jae
dec
jo
xchg
push
ja
cli
sub
lods
std
cli
add
sbb
push
cmp
cltd
jbe
ret
xchg
or
xchg
mov
pop
clc
jp
cmc
mov
ljmp
aad
sub
rclb
lcall
js
test
xchg
jp
test
jecxz
add
adc
jbe
hlt
enter
adc
pop
mov
insl
or
xor
insl
cmc
leave
xchg
orl
add
scas
sub
xchg
call
sub
clc
mov
cs
andb
nop
fistl
lds
xchg
push
nop
adc
test
in
mov
movsb
js
adc
out
test
movsb
sbb
push
inc
test
sbb
outsl
xchg
xor
cmp
mov
or
or
sub
pop
mov
shlb
or
enter
les
mov
inc
jg
push
pop
cs
xchg
lds
and
movsb
lret
xor
sbb
ret
std
es
add
mov
sahf
xchg
add
sub
sub
sbb
fcmovnbe
xchg
sub
loope
das
push
out
lcall
fdiv
xchg
xchg
imul
inc
mov
repz
sub
arpl
lret
sti
pop
inc
pop
xor
imul
xchg
ficoml
and
fs
nop
andl
cld
neg
es
mov
mov
in
fwait
mov
dec
mov
pop
sub
arpl
mov
and
iret
fdivl
add
into
mov
push
mov
adc
push
into
dec
and
lock
shlb
decl
or
or
cmp
xchg
mov
outsb
stos
and
rcl
or
push
lahf
sti
nop
es
xor
fstl
shlb
jbe
pop
or
aas
insl
and
out
out
data16
sub
add
sbb
cmp
mov
pushf
sbb
pop
test
aaa
mov
and
xor
pop
sbb
pop
cmc
mov
addr16
sub
and
loopne
mov
xor
add
leave
add
cld
cmp
cmp
out
ret
rcrb
bound
lea
xchg
jle
mov
enter
scas
fidivs
dec
cli
xchg
xchg
lds
jecxz
pop
shrl
aas
adc
test
adc
jg
jge
push
cmp
cmp
cmp
add
lock
or
ja
fnstenv
pop
iret
mov
movsb
test
and
dec
daa
inc
into
inc
push
mov
cmp
xchg
jge
xchg
or
imul
decb
sbb
xor
pushf
mov
sub
mov
sbb
rcl
aaa
in
mov
xchg
sti
lret
mov
cli
adc
insb
aad
dec
pushf
jno
popa
jns
fildll
or
sub
sub
repz
rcrb
cld
cmpsb
push
xorb
push
add
sbb
shrl
inc
cmp
int3
xchg
lds
cmp
jle
sbb
add
or
jmp
cld
bound
add
add
push
adc
mov
fs
in
jl
lcall
pushf
int3
add
or
mov
xor
xchg
fldt
call
mov
sub
dec
test
cld
or
jl
in
add
xchg
push
sub
lods
fiadds
and
sahf
mov
pop
aad
stos
adc
push
mov
jno
sub
xor
jo
pop
xor
jbe
push
jo
sub
call
icebp
fmuls
jge
adc
adc
sub
in
test
and
fimuls
push
inc
enter
jae
or
and
divl
or
pop
pop
jo
inc
sahf
scas
dec
int3
jne
imul
sbb
sbb
xor
and
jo
mov
fwait
ss
fisubl
cmp
push
insb
pop
rcr
pusha
and
je
add
dec
pop
dec
mov
pop
repz
cmpsb
lss
int3
mov
push
xor
addb
aas
push
xchg
sbb
inc
dec
ret
push
pop
sub
int3
jmp
jno
jbe
push
sbb
in
jl
in
dec
xchg
sbb
jae
cli
icebp
stos
cmpsb
rclb
sub
add
sbb
nop
mov
pusha
xor
mov
mov
jge
das
test
testb
subl
dec
inc
rcrb
into
movsl
xor
pop
test
jmp
and
lea
enter
loopne
lret
xchg
dec
xchg
sub
je
inc
mov
jp
outsl
int3
jecxz
xchg
xchg
lods
stc
lods
and
dec
out
jb
lret
mov
mov
dec
xor
mov
fisubrs
xchg
push
in
push
rolb
dec
bound
mov
xchg
xor
inc
mov
dec
adc
pop
pop
test
xor
xor
cmp
cli
sahf
mov
adc
cld
mov
xchg
xchg
push
cmp
cmp
movsl
in
aam
add
shlb
sahf
popf
adc
mov
inc
cmpsb
test
mov
fnsave
cmp
inc
cli
push
mov
xor
xlat
cld
clc
ljmp
xlat
pop
out
je
and
adc
fildll
cltd
addr16
mov
loopne
sbb
or
cmp
call
mov
es
push
jae
in
icebp
shrb
inc
cld
pop
pop
and
xor
cmpl
dec
int3
mov
cmp
mov
outsl
adc
mov
cld
add
pop
fstps
or
aas
pusha
sub
in
mov
push
pop
pop
arpl
add
mov
mov
sub
mov
fistpll
cld
jo
add
xor
ljmp
dec
imul
lahf
and
add
fstpt
jo
mov
sub
jge
sbb
fwait
icebp
dec
adc
mov
jns
mov
aam
mov
test
xlat
pop
fwait
addr16
movsl
aaa
ret
out
ds
pop
nop
cmp
mov
pop
or
push
cld
adc
sub
ret
cmp
sbb
push
adcl
fxch
lds
or
gs
cmpsb
inc
and
in
xor
dec
xor
or
xor
inc
dec
dec
iret
adc
xchg
daa
or
rclb
pop
xchg
dec
jmp
jne
fstps
cmc
or
pextrw
mov
sbb
imul
leave
loopne
jbe
xor
mov
pop
adc
dec
jb
les
push
inc
aam
pop
int
sbb
mov
jbe
cmp
inc
in
add
clc
sub
mov
push
test
or
lcall
and
cli
arpl
in
or
sarb
add
loop
push
mov
std
mov
and
aam
and
mov
lea
xchg
push
les
dec
fs
divl
mov
inc
lock
stc
ret
lahf
cld
sub
push
lret
enter
scas
insl
mov
in
into
add
rorl
mov
in
scas
push
shrb
xchg
push
jnp
jnp
rorb
inc
ss
test
std
xor
and
popf
jo
jo
and
cmp
jae
pop
cmp
mov
jbe
icebp
mov
imull
xlat
xchg
xor
xor
push
imul
insb
adc
sti
inc
pop
sbbl
or
pop
mov
lea
mov
cs
ficoml
fwait
sbb
add
add
xchg
jg
and
pop
cmpsb
aad
andl
mov
xchg
and
and
pop
jne
jmp
and
pop
mov
test
icebp
shlb
sbb
and
cmp
lds
pop
xor
jno
pop
stc
push
stos
lock
movsl
test
stos
adc
ret
rcrb
andb
lea
mov
jbe
inc
pop
fbstp
and
movups
mull
test
add
cs
xchg
orb
push
rcr
adc
push
fists
pop
dec
leave
xor
mov
fwait
sub
idivb
shll
dec
jle
insb
stos
jns
push
inc
lods
fs
shr
fbld
or
sbb
or
popa
xchg
hlt
push
xlat
mov
and
add
stc
add
xchg
in
adc
adcl
mov
dec
cmp
out
cmp
cltd
cmp
pop
pop
jne
or
push
mov
jge
mov
jae
or
cmp
inc
mov
xchg
mov
adc
xchg
insl
jbe,pt
les
lahf
pop
mov
jmp
add
ror
and
or
sub
scas
sbb
mov
inc
sti
and
aas
sahf
pop
fstl
ljmp
je
push
test
dec
push
mov
popf
mov
inc
sub
push
imul
shll
mov
nop
clc
cwtl
add
in
fsubrl
lock
sbb
je
and
icebp
and
mov
mov
jmp
clc
jg
add
shlb
adc
adc
cwtl
std
xchg
sbb
jp
jnp
and
sahf
cmpsb
jne
xorb
ljmp
jns
inc
mov
stc
adc
sar
enter
jno
popa
dec
shrb
pop
in
sti
push
mov
idivb
mov
dec
cmp
mov
push
sbb
stc
mov
fists
adc
je
jo
sub
mov
bound
inc
enter
dec
sub
dec
stc
adc
movsb
je
inc
rclb
jmp
sbb
push
or
cmpsl
movsl
mov
lods
sub
es
lods
mov
or
cmc
mov
jmp
adc
loopne
jl
inc
lret
inc
in
mulb
sar
stos
inc
lods
nop
sbb
cmp
lods
xchg
ja
and
dec
fdiv
sbb
xchg
cmc
pop
scas
ret
add
inc
mov
mov
clc
mov
fwait
in
sub
mov
aaa
stos
mov
cli
or
mov
xchg
mov
fistpl
xor
movb
pusha
xor
lahf
jb
dec
mov
cmc
cmp
jne
loopne
pop
ljmp
or
movsl
mov
jg
mov
mov
jns
push
sbb
xlat
sub
mov
xchg
loopne
rcrl
pop
or
jo
pop
test
add
pop
mov
mov
imul
xchg
push
imul
jecxz
cmp
imul
stos
mov
mov
jo
mov
outsl
add
ret
jns
push
dec
iret
push
xor
lret
and
cwtl
inc
jmp
sbb
out
dec
in
jge
add
rorl
std
or
or
cmc
adc
pop
int
test
clc
jns
and
inc
adc
jno
sub
pop
mov
adc
or
pop
and
test
or
scas
popl
lock
out
pop
dec
xor
dec
inc
add
cmpsb
jo
cmp
addl
icebp
dec
sub
sub
movsl
xchg
mov
xchg
jno
stos
xor
cmp
xchg
iret
cmp
shl
ret
hlt
lds
dec
or
iret
mov
les
and
lcall
jb
xor
lea
gs
sub
negb
lods
scas
jmp
shrl
fsubrl
mov
aad
sahf
and
mov
clc
lods
hlt
mov
mov
and
clc
cmp
push
sub
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
xor
lock
je
dec
mov
fldenv
into
pop
jmp
hlt
inc
out
cmp
adc
inc
jne
dec
or
pop
test
shlb
repz
cmp
cli
inc
cmp
sbb
dec
dec
jb
cmpsb
nop
pop
into
jno
cmpsl
fs
gs
mov
into
cwtl
ret
fisttpll
dec
aad
xor
adc
add
test
aad
stos
lods
add
pushf
jmp
mov
jo
push
outsb
adc
sbb
pop
and
inc
push
and
xor
in
sbb
and
add
stc
adc
jbe
pop
push
add
mov
popf
orl
dec
repnz
cli
and
lret
in
push
lahf
or
stos
push
sbb
jno
mov
fdivrs
imul
push
cli
sbb
popf
test
mov
int3
jno
xor
in
stos
pop
repz
sbb
sub
hlt
sub
daa
out
or
mov
jo
cmpsb
dec
imul
cmp
mov
aam
mull
in
and
into
dec
dec
adc
fwait
push
lods
test
add
fs
sahf
or
mov
pop
jns
movsl
mov
popa
xor
jmp
inc
xchg
pop
rclb
or
jmp
sbb
andps
mov
mov
aad
or
dec
inc
les
sar
dec
mov
sarb
add
bound
cmpsb
ds
dec
std
cmp
add
in
sbb
lcall
mov
mov
out
aad
imul
maskmovq
testl
pop
call
xor
dec
pop
push
inc
addr16
push
adc
mov
aad
mov
leave
loope
mov
movsb
cli
fsubrl
jnp
sahf
mov
into
cs
ret
repz
iret
xor
adc
dec
or
mov
mov
cltd
out
in
fstl
dec
push
mov
test
andb
sub
int3
xchg
aas
ds
bound
push
sbb
push
add
jae
jecxz
loopne
xchg
fmull
push
sahf
and
push
test
jecxz
rolb
mov
xchg
xchg
sub
in
nop
jl
inc
mov
jmp
imul
xchg
lock
call
aad
repnz
push
jmp
mov
jnp
push
pusha
fs
outsl
xor
out
movsb
jl
sub
mov
sbb
leave
push
scas
sbb
les
aam
jnp
insb
outsl
jns
fstpt
xchg
in
movsb
ljmp
xabort
cmp
idivb
mov
fmuls
mov
mov
jl
repnz
pop
sbbb
mov
or
jmp
mov
shlb
out
nop
and
jbe
inc
icebp
add
inc
insb
into
jns
fstl
and
fsubrl
fbstp
xchg
sub
jg
cmp
enter
flds
mov
push
sbb
jge
lcall
sub
inc
adc
cmp
dec
sbb
inc
jg
hlt
pusha
or
enter
adc
outsb
mov
mov
fucom
int
jae
sti
pop
cwtl
mov
add
fcmovne
jb
pusha
jp
or
adc
pop
aaa
cmp
nop
pop
push
lds
xor
clc
pop
les
pop
andps
cltd
mov
ja
dec
test
loopne
xorb
or
sbb
pop
dec
test
adc
rolb
rol
mov
loopne
push
fsubrs
cmpsb
jno
or
push
jnp
adc
pusha
rcr
test
rorl
pushf
jne
je
mov
dec
es
xor
jmp
cmp
adc
or
jnp
out
mov
sbb
stc
xchg
add
mov
fidivrl
or
pop
sub
ret
addr16
dec
xchg
push
inc
popa
scas
mov
in
mov
aam
jno
pop
addr16
jnp
ret
vshufps
cmp
add
ja
cmp
pop
shlb
cld
sub
adc
lds
adc
mov
fimuls
jmp
cmp
jnp
xchg
aas
pop
cld
and
lcall
pusha
ret
sbb
into
loopnew
aas
aam
push
add
test
xlat
loopne
jl
fidivs
sub
cmp
ret
into
clc
and
add
cmp
adc
lret
add
inc
xchg
sub
or
and
gs
lret
rdpmc
test
mov
mov
dec
pop
sbb
cmp
push
adc
iret
inc
jmp
insb
jnp
mov
pop
pop
ds
or
push
mov
shll
repz
pop
into
push
mov
mov
mov
mov
pop
xchg
or
push
rcrl
inc
cwtl
pop
dec
mov
cli
lea
xchg
cwtl
add
lea
pop
insl
dec
sub
xchg
iret
mov
and
push
sub
inc
sub
daa
dec
in
in
js
sub
inc
shrl
mov
xchg
mov
push
je
add
pop
mov
cmpsl
insl
andb
cmp
cmpsb
stos
add
mov
cmpsb
js
jo
mov
inc
les
jb
jno
addb
pushf
jb
lcall
outsb
xor
daa
iret
or
adc
cwtl
popf
test
adc
clc
repnz
pop
idivb
pop
mov
push
xchg
punpcklwd
sarb
cmc
push
jmp
fisubs
arpl
aas
lret
fwait
sbb
into
aas
stos
sbb
cmp
je
dec
fs
call
pop
cwtl
mov
sub
in
lahf
mov
aam
in
imul
cld
mov
mulb
sub
xchg
and
inc
insb
lret
and
sub
xchg
test
loopne
imul
mov
jo
jmp
fwait
push
xchg
test
and
xchg
push
out
xor
pop
fs
xchg
mov
scas
xor
cs
test
test
lds
stc
fptan
enter
out
imul
imul
push
mov
icebp
in
push
out
incb
jno
dec
movsl
in
push
dec
xchg
test
data16
inc
xor
addb
mov
cmp
idivb
mov
int
pop
mov
negl
lret
mov
aad
xor
and
mov
aas
xchg
out
jp
xchg
sarb
leave
xchg
in
les
xchg
aas
inc
cmpsb
mov
pop
sbb
hlt
mov
fadd
fadd
hlt
cltd
push
nop
xor
int
rorl
xlat
jl
jg
push
cmp
iret
xchg
push
jmp
iret
mov
notrack
cmovl
xor
mov
fnstcw
sbb
pop
cli
cltd
mov
fsubs
cmp
xlat
gs
sub
mov
int
cmpl
xor
insl
sbb
mov
lock
mov
sahf
or
and
lea
int
rcr
or
mov
push
in
call
and
push
push
subb
adcb
lret
das
cmp
mov
mov
dec
into
mov
sub
stos
movsb
sub
mov
lea
sbb
cmpb
pop
add
sub
jbe
sub
sarl
mov
push
negl
xorl
rcr
and
fstl
out
lcall
arpl
sti
mov
adc
sub
cmpsl
cwtl
and
je
js
lea
dec
aad
mov
xchg
jp
nop
mov
loopne
push
inc
js
mov
das
rorb
push
scas
repz
mov
push
popa
dec
xchg
push
inc
sbb
lea
rorl
sub
fistl
ljmp
mov
int3
pop
lahf
xchg
movsl
roll
ficoms
pop
dec
in
lock
xor
jo
flds
jno
xchg
xchg
ljmp
sbb
lret
daa
std
lcall
xor
pop
cwtl
pop
cmp
hlt
push
mov
mov
xchg
scas
mov
sub
mov
lods
cmp
sbb
or
dec
sar
sbb
mov
loop
cmpsb
mov
adc
cmp
fxch
mov
bound
sub
cmp
lahf
xchg
test
mov
das
aad
dec
push
push
imul
out
push
add
jecxz
rcll
mov
xchg
ss
pushf
rcrb
and
scas
icebp
sub
test
rol
add
jle
add
pop
push
lods
repz
mov
lahf
dec
sub
sti
pusha
mov
gs
mov
mov
out
xchg
pop
mov
out
mov
bound
aad
mov
cmpsb
addr16
pop
popf
enter
fimull
cli
push
fcomps
xchg
sub
fldt
into
and
mov
mov
push
ret
jle
push
sar
sti
xchg
scas
sub
jo
push
pop
mov
es
pop
cmpsl
scas
xchg
fiaddl
pop
shrl
mov
pop
xchg
je
shlb
mov
mov
xchg
jb
pop
repz
adc
pop
cli
xchg
psubd
cmpsl
jb
call
subb
xor
ss
dec
or
arpl
xchg
ret
dec
push
inc
jnp
cmpl
hlt
lock
and
jae
insl
mov
les
outsb
dec
sub
inc
test
rcl
sub
jmp
push
xchg
out
lea
or
dec
popa
jno
dec
xor
sub
and
addr16
jo
fwait
call
push
popa
call
lahf
xchg
lds
xor
notl
or
idivb
jns
scas
xrelease
lea
into
inc
out
movsb
cmp
enter
loope
xchg
out
dec
dec
push
lods
inc
jb
mov
or
push
lcall
insl
push
shll
into
ja
shrb
mov
pusha
shrb
lock
popf
dec
sbb
loop
push
push
stos
mov
push
xor
dec
enter
pop
stos
jns
sub
clc
clc
jo
xor
fsubrs
xchg
lods
cwtl
outsl
inc
arpl
jl
jne
xchg
ss
cmpsb
sub
and
ret
pop
cmc
imul
cmpsb
inc
scas
shrb
dec
cmp
ret
lret
jp
cmp
mov
xchg
popf
jae
shll
xchg
cmp
xlat
popf
aas
mov
push
pop
push
int3
call
dec
pop
cmp
in
cmp
mov
aad
fs
fs
fcompp
mov
jbe
scas
mov
std
xchg
xchg
xchg
repnz
sub
push
hlt
das
iret
jg
xor
inc
int3
pop
dec
sbb
daa
mov
incb
add
aaa
xchg
insl
xlat
fldl
shl
cmpl
lretw
fcomi
mov
xlat
xlat
sbb
js
xchg
dec
ffree
paddusw
dec
add
jmp
mov
xor
in
sbb
or
xchg
jge
sub
sbb
dec
xor
add
aas
out
ja
daa
cld
inc
inc
arpl
mov
aam
jmp
pop
mov
fcomp
push
adc
fsts
push
lret
leave
mov
mov
outsl
in
popf
inc
enter
inc
mov
mov
xor
push
test
xchg
gs
notl
scas
push
scas
ror
ds
inc
test
ja
or
mov
mov
pop
ss
dec
fmul
scas
mov
lods
dec
lea
mov
decl
aas
dec
xlat
and
out
cmpsb
push
jno
lods
and
sbb
push
add
scas
push
xor
push
out
mov
lds
loop
aaa
loope
out
out
mov
xchg
inc
loope
divb
lods
adc
push
mov
int3
or
test
cmp
and
sti
test
adc
inc
cmpsb
sbb
out
cs
jb
cmpsl
push
popf
daa
hlt
push
ret
cmp
mov
scas
xchg
lret
loop
mov
xchg
imull
or
mulb
inc
sub
addr16
scas
enter
push
int3
mov
fcoms
dec
test
out
inc
insl
iret
rcll
mov
insl
mov
fnstcw
ds
add
pusha
mov
insl
xor
data16
mov
pusha
pop
lea
push
fmull
aad
test
xchg
jne
mov
add
leave
stc
mov
f2xm1
daa
or
nop
shl
gs
adc
sub
lcall
sbb
lods
addr16
js
add
sbbb
xchg
dec
pop
lods
jge
mov
lret
cltd
fcom
aam
lea
stos
inc
in
or
mov
dec
je
movsb
sti
add
mov
jecxz
fistl
cmp
inc
out
popf
fxch
sbb
insl
jecxz
adc
lret
pop
mov
gs
sahf
cmc
scas
lds
mov
xor
and
jge
roll
dec
into
shlb
xchg
or
mull
push
add
cmp
inc
aam
sub
cli
loope
ss
aad
jle
je
int3
shrl
insl
jg
cmp
pusha
and
test
fsubl
insl
xchg
or
aas
movsb
add
push
dec
or
es
inc
or
nop
xchg
mov
inc
mov
jge
popa
sahf
hlt
push
ret
enter
insl
enter
sti
add
ret
aaa
pop
scas
sub
dec
lods
je
fsts
jns
add
xacquire
inc
and
cmpsl
jo
imul
cmp
in
dec
and
outsl
inc
and
mov
or
or
add
adc
cltd
aas
mov
jl
cs
movsl
cmc
js
and
cmp
je
lcall
pop
adc
das
std
cltd
mov
mov
xchg
and
jp
mov
adc
adc
cmpsl
in
shll
jbe
ds
xor
fstpl
inc
and
arpl
sub
fildl
and
mov
sub
mov
pop
xchg
lret
movsb
sbb
aad
inc
clc
cmc
cld
lret
add
rcr
out
pop
inc
xchg
jmp
add
stos
xor
sub
xor
dec
sbbl
shl
jle
mov
andb
cltd
nop
imul
call
aam
cmp
daa
aad
push
leave
in
ror
jle
mov
adc
inc
push
lods
pop
hlt
xchg
stc
loop
adc
mov
jl
mov
repnz
int
repnz
push
push
push
loopne
fnstenv
jno
aam
int
cmp
js
pop
test
es
ret
popl
dec
lods
pxor
nop
out
dec
iret
sbb
sub
lds
rclb
pop
clc
jbe
cmp
aaa
es
stc
cltd
movsb
out
inc
xor
aaa
mov
testb
inc
ljmp
dec
dec
mov
sbb
cmp
lods
dec
adc
sbb
fimull
xchg
nop
jns
sub
xchg
mov
lcall
mov
jno
pusha
jno
inc
cli
movsb
subb
inc
mov
dec
jecxz,pn
icebp
lea
push
dec
shll
jae
pop
iret
popl
testb
xchg
add
pusha
pop
inc
pop
sub
jl
inc
inc
jae
aad
in
push
js
in
sub
inc
sub
clc
incl
ret
out
ljmp
push
inc
std
shll
ret
push
in
stc
or
notb
jle
jae
adc
pop
out
add
jg
cltd
out
stc
inc
pop
aam
cmc
nop
in
dec
push
in
jbe
inc
xor
cli
ss
or
lret
outsb
inc
ret
lods
sub
bound
mov
pop
add
shrl
out
ret
mov
pop
xor
push
pop
cli
push
cmp
cmp
lock
jp
aam
loop
and
jecxz
jb
roll
lret
es
pop
mov
scas
adc
and
test
adc
cmp
lcall
in
into
mov
test
dec
repz
sub
dec
mov
lcall
hlt
jmp
sbb
mov
lds
xorl
push
pop
notl
mov
dec
scas
push
movsl
lea
mov
push
cmc
jb
shl
icebp
shll
mov
rorb
fs
jae
and
pop
ds
mov
cwtl
shlb
xchg
ret
pop
scas
push
xchg
add
stos
lret
fs
jl
jo
mov
sahf
adc
inc
loope
sub
and
lods
push
mov
mov
mov
into
shll
and
daa
adc
inc
adc
push
or
jl
xchg
jp
aad
stos
inc
repz
inc
mov
gs
out
lock
push
push
and
loope
xor
fistpll
mov
pop
dec
and
xor
rolb
cmp
jge
enter
fisttpl
pop
jg
push
popf
mov
sub
lds
mov
icebp
mov
les
add
jle
mov
inc
push
cmc
sbb
xor
lods
je
push
insb
xor
aas
lods
cld
mov
mov
adc
fcmovnbe
mov
aas
sub
dec
lds
cmpb
lahf
fsubs
add
push
mov
movsb
out
mov
repz
je
movb
sarl
mov
mov
xor
popf
pop
test
mov
rorl
push
push
xchg
inc
jb
adc
cltd
orb
mov
jae
and
adc
pop
mov
mov
lock
jne
pop
testl
or
cmp
inc
mov
clc
stos
cmp
pushf
mov
push
and
int
cmp
mov
call
nop
cmpsl
insl
add
ljmp
mull
lea
insb
jle
or
push
mov
xchg
shlb
cmp
pop
lods
addr16
into
out
xchg
ret
push
mov
scas
lret
cmp
movsb
push
push
pop
insl
stos
dec
mov
mov
rcrl
jb
push
or
movsb
sub
inc
iret
push
or
fs
xor
mov
daa
add
sub
mov
push
cmp
aaa
addr16
adc
pop
mov
jnp
and
adc
inc
dec
mov
negb
es
sbb
out
sahf
pop
iret
push
dec
push
int3
add
aas
adcl
xor
addr16
inc
push
mov
ljmp
into
cli
or
out
out
cli
lods
or
cwtl
gs
sbb
ret
sbbl
xchg
and
inc
or
dec
es
into
jl
cmp
sbbl
mov
pushf
xchg
lods
insb
dec
stos
xchg
push
bound
xchg
sub
sub
mov
push
frstor
inc
inc
pop
std
addr16
in
lock
mov
mov
stos
insl
out
cli
aas
ficoml
call
xchg
pusha
psrad
dec
xchg
fs
imul
inc
adc
negl
add
pop
fdivrs
repnz
arpl
daa
inc
adcb
push
sbb
imul
and
jle
xchg
mov
xor
inc
fnstenv
xlat
adc
sbb
repnz
stos
addr16
push
movl
sub
or
push
hlt
pop
aas
pop
and
fimull
and
adc
arpl
outsl
adc
mov
xor
jge
pop
xchg
jo
cmc
mov
jo
inc
sbb
fildll
cmc
pop
aaa
daa
cwtl
push
pop
loopne
out
rcrb
insb
and
in
jae
into
sub
lahf
push
test
cmpsl
aam
lret
lret
inc
inc
mov
sub
popf
cli
mov
lcall
xlat
mov
adcl
or
inc
sub
cmp
lcall
push
out
jge
mov
lock
or
xchg
fidivrl
aad
mov
lret
push
out
pusha
sbb
sbb
aad
jb
mov
push
mov
cmp
adc
jae
adc
je
sbb
dec
xchg
jbe
pop
int3
pop
gs
loop
inc
les
pop
cmp
xchg
mov
out
jmp
cltd
ftst
test
inc
jecxz
aaa
adc
add
mov
div
mov
jnp
push
pop
aas
fmulp
inc
sbb
push
je
inc
lret
xchg
cli
cltd
inc
fmull
or
add
mov
sahf
mov
or
mov
add
cmp
movsb
arpl
pop
hlt
ja
call
lret
js
mov
enter
add
loope
imul
ja
outsb
sbb
es
jecxz
push
shlb
sarb
add
jl
mov
je
rol
test
into
gs
cmpsb
cmp
push
hlt
pop
inc
pop
pop
icebp
dec
xor
or
test
nop
xchg
in
mov
call
clc
mov
mov
data16
daa
test
mov
js
jl
jecxz
sub
fs
in
mov
leave
insl
jp
fcmovb
sbb
mov
dec
push
jmp
sbb
pop
call
jmp
jns
jbe
into
add
std
cmpsl
mov
shll
and
pop
es
sub
add
or
mov
outsl
jmp
and
add
xchg
movsl
and
mov
pop
es
ja
loop
scas
and
loope
xor
push
inc
ds
arpl
icebp
xor
ljmp
faddp
xor
adc
mov
sub
cmp
cmc
in
stos
enter
iret
test
out
and
xchg
or
pop
push
cmpsl
nopl
xor
lea
testb
call
ficompl
stos
xor
mov
faddl
mov
sbb
aaa
test
jecxz
mov
push
popa
inc
bound
rolb
cmpsl
mov
insb
imul
cwtl
and
mov
xchg
xchg
enter
popf
cmc
add
jbe
push
mov
jbe
sbb
jae
pop
daa
fs
jg
faddl
rcrb
fpatan
jp
push
xchg
jno,pt
in
lods
cmp
pop
jecxz
mov
inc
js
lcall
test
andl
pop
cmc
popa
out
xchg
addr16
dec
dec
jns
push
jmp
or
xchg
decb
pop
sti
mov
lcall
lods
aaa
fwait
dec
mov
pop
sbb
lods
pop
fistps
cltd
mov
std
dec
shlb
repnz
push
jl
and
cmp
push
inc
push
mov
sbb
push
pop
pop
fmull
xchg
push
jo
mov
fxch
and
enter
loop
jns
std
mov
mov
pop
bound
gs
pop
inc
mov
pop
in
dec
fmuls
cmp
mov
xor
xor
hlt
or
aaa
imulb
pop
insl
pop
mov
rcrb
dec
insl
insl
sub
rcrl
xchg
divl
dec
sbb
push
pop
pop
dec
fdivrl
pop
imul
cmp
pop
mov
and
xchg
sbb
out
test
rorb
or
or
adc
dec
stos
int
xor
movsb
add
mov
xor
clc
sti
cmpsl
sub
clc
or
js
rcrl
add
or
push
jo
pcmpgtd
data16
mov
lcall
xchg
addr16
cwtl
and
sub
jne
std
adc
ljmp
jno
mov
cmc
or
add
icebp
mov
xor
pushf
jns
and
xlat
in
xchg
pop
mov
xor
cwtl
test
add
sub
data16
xchg
mov
sbb
les
adc
xchg
sub
mov
inc
gs
ret
addr16
lds
lret
and
mov
sbb
outsb
imul
sbbb
xchg
out
or
xchg
pop
jle
xchg
mov
jno
jmp
inc
sar
sbb
lcall
xchg
daa
lcall
jge
push
pop
sbb
int3
movsl
fdivr
or
movsb
and
sbb
fidivs
cwtl
sti
lret
mov
idivl
dec
pusha
call
ror
jp
dec
jmp
les
hlt
xchg
jge
gs
mov
adc
test
fcmovu
sbb
push
push
popa
mov
mov
push
inc
and
fs
cmc
mov
push
xor
out
mov
mov
jecxz
sarl
sub
pop
jecxz
lock
jmp
repz
jp
clc
pop
sbb
inc
adc
inc
lock
push
adc
xchg
pop
jecxz
insb
sbb
push
icebp
pusha
in
int3
cmp
cmpsb
data16
out
cs
sahf
sub
ds
mov
inc
push
cli
adcl
lret
jp
add
push
xorb
in
or
js
imul
dec
or
ljmp
mulb
sub
or
cli
push
pop
lcall
push
shl
sahf
add
and
or
mov
jg
fcoml
cmp
in
add
inc
in
mov
xor
popa
or
mov
out
jp
xor
mov
and
pop
dec
xchg
push
inc
jnp
dec
and
ja
sbb
es
and
adc
sahf
push
lret
dec
sub
fdivl
inc
push
push
cwtl
test
adc
out
cld
ret
dec
out
push
mov
sub
lret
int
cmpsb
loope
add
cwtl
dec
cmp
ret
adc
gs
xchg
push
sub
fisttpll
inc
ja
int
inc
std
mov
in
jecxz
loopne
jg
cmc
out
push
fwait
into
aam
sarb
mov
das
or
dec
push
cld
insl
xchg
cmp
pop
sub
pop
and
fxam
scas
mov
adc
sbb
icebp
cld
pop
sub
shr
dec
cmp
lock
lods
fwait
insl
rclb
fistpl
push
xlat
xchg
cwtl
xor
pop
loop
pop
mov
pop
bound
and
mov
sbb
movsb
xor
pop
adc
in
andl
fldenv
mov
iret
xor
or
arpl
fidivrl
lret
addb
sbb
pop
aad
sub
cmp
and
push
aaa
shl
idivl
xor
ljmp
movl
sub
sub
sbb
pusha
dec
sub
xor
sub
aad
pop
inc
mov
jl
push
cmpsl
mov
outsl
xchg
ficoml
pop
out
insl
notl
mov
mov
ja
xchg
fidivrl
mul
fimull
or
clc
or
mov
cmpsl
adc
dec
es
lods
cwtl
ja
cmp
xor
inc
pop
sti
mov
dec
shl
mov
lret
mov
in
mov
into
repz
fwait
cld
cmpsl
adc
lods
test
rcrl
push
ficomps
rclb
iret
or
sub
add
pushf
add
jb
add
inc
push
rol
and
push
loopne
cmpsb
jp
sub
or
dec
sub
daa
xchg
iret
cmc
adc
mov
mov
and
cmpsb
in
test
in
push
icebp
outsl
loope
les
mov
mov
cmp
jecxz
xchg
movsl
push
sbb
xorl
scas
and
sub
ja
arpl
xor
inc
mov
xor
push
pop
ds
sbb
dec
push
loopne
and
les
jnp
sbb
jl
dec
add
xor
cmp
cwtl
mov
mov
inc
aaa
mov
sbb
std
sbb
sti
out
adc
loopne
movsl
inc
mov
inc
ret
xor
mov
jne
jmp
add
into
jecxz
aaa
test
ja
jg
out
jmp
sahf
shr
sbbl
cmc
nop
sbb
and
das
adc
push
popf
shll
cld
jo
xor
inc
add
test
out
mov
in
xor
ljmp
jle
in
les
loopne
fwait
cmc
and
in
aam
std
test
gs
add
push
add
jnp
mov
scas
jbe
jmp
mov
pop
cmp
mov
xor
adc
test
cmp
in
popf
pop
push
mov
mov
inc
lret
orw
leave
inc
pop
lahf
sbb
clc
jno
xchg
insl
inc
mov
imul
mov
inc
fstps
mov
xchg
push
es
sub
xchg
scas
dec
mov
and
jecxz
movsl
les
cmp
dec
mov
jle
and
fildl
sbb
mov
jo
pop
mov
and
adc
add
push
in
mov
jle
cmc
inc
dec
xor
lret
call
xchg
lods
push
and
popa
jle
dec
dec
adc
idivb
xor
inc
aaa
sub
or
mov
outsl
pop
dec
mov
popf
sub
imul
dec
sbb
sbb
pop
roll
std
das
jp
stos
cli
xchg
adc
mov
aas
divb
cmp
popa
lahf
xor
aad
dec
mov
ret
add
jnp
ret
mov
and
repnz
stos
iret
mov
jmp
cs
rcll
and
mov
dec
cmc
fsubrl
subps
popa
out
rclb
js
sub
enter
xchg
mov
jmp
imul
inc
jmp
dec
adc
cld
xchg
fdivr
movsb
dec
and
mov
sbb
addb
les
mov
hlt
subb
inc
cmpsb
stos
add
pop
dec
fwait
pop
stos
shlb
mov
pop
mov
push
pop
js
adc
push
sbb
lds
test
std
sbb
dec
push
addb
cmpsl
and
sub
jnp
rcrb
out
push
sub
fcomp
stc
xor
push
cmpsb
mov
lcall
add
sbb
dec
jg
xchg
cmp
pop
lods
fnstsw
cltd
add
scas
fcmovnu
push
nop
stos
movsl
dec
cmpl
rolb
rcl
ljmp
cld
xor
hlt
bound
sub
hlt
sbb
adc
or
shll
addb
or
test
xchg
lods
mov
in
rorb
dec
adc
daa
stc
xlat
sbb
or
out
or
sbb
fdivrp
cmp
lcall
ret
popa
hlt
movsb
ljmp
pop
mov
lea
arpl
pop
sub
aaa
mov
cwtl
or
inc
jne
fstpt
xchg
shll
into
xabort
pop
out
sti
mov
stc
ret
or
adc
in
ret
xchg
and
mov
enter
and
sti
mov
in
lret
mov
jg
aas
inc
add
mov
data16
loope
xchg
js
add
fcoml
adcl
pop
dec
in
mov
mov
pop
inc
icebp
mov
inc
and
pop
int3
movsb
call
fidivs
test
mov
sbb
pop
insb
cld
sarb
scas
fisttpl
out
mov
incb
fdivrs
push
aam
out
stc
sub
xrstors
mov
and
fistl
pop
mov
mov
stos
push
push
insl
and
cltd
mov
inc
xor
int3
inc
inc
iret
mov
pusha
popl
sub
jg
inc
push
lods
dec
enter
jp
pop
cmp
sbb
and
push
inc
lods
iret
les
dec
stc
sub
bound
orl
in
jle
push
push
xchg
cmp
les
popa
stos
pushf
xchg
push
jmp
mov
ss
into
push
rorb
and
mov
dec
enter
es
sbb
adc
ds
inc
popa
inc
xchg
xchg
adc
loope
or
inc
or
xchg
cmpsb
aam
cmpsl
push
test
and
dec
movsb
jp
dec
pop
mov
cs
mov
int
fdivs
lods
test
push
mov
pop
ja
mov
into
pop
test
movsb
push
mov
mov
mov
js
jns
test
sbb
jo
push
je
add
pop
test
pop
aaa
add
scas
jecxz
dec
frstor
aas
push
test
or
repnz
xor
jno
out
test
rol
fldl2t
cs
lret
and
movsl
jg
adc
inc
push
mov
lods
and
push
adc
dec
in
pop
aaa
stos
sub
mov
dec
or
jg
jns
xor
and
sub
dec
cwtl
aad
insb
sbb
jbe
orl
xchg
sbb
js
mov
jge
pop
aam
lahf
adc
adc
jecxz
ds
jecxz
mov
mov
fxch
add
jge
ds
push
or
cmp
sahf
xor
outsl
icebp
in
stos
je
adc
sub
ret
cmp
jbe
cmpsl
test
ds
inc
xchg
push
shlb
xor
inc
cmp
inc
mov
cmc
sahf
fwait
jae
sub
paddsb
xchg
pop
inc
les
sub
cmp
pop
xchg
cmp
cmp
js
or
inc
mov
movsb
jmp
out
insb
icebp
mov
jne
repnz
loopne
or
xlat
mov
out
sbb
pop
fs
mov
mov
into
sub
dec
xchg
repnz
aam
push
lahf
aad
lcall
mov
sbb
lock
cmp
push
shlb
lods
add
jno
dec
cmp
fcomip
arpl
pop
inc
mov
in
jg
imul
dec
or
lret
leave
jg
mov
mov
push
movsl
pop
or
push
pop
dec
test
dec
test
popa
mov
sbb
dec
addb
mov
jge
adc
jg
pop
es
inc
or
popf
pop
jae
adc
mov
lret
insl
inc
push
xor
ds
testb
pop
lods
xchg
addr16
movsb
mov
mov
out
sahf
dec
pop
pusha
jecxz
push
jnp
inc
ljmp
cmpsb
mov
les
xchg
test
inc
test
dec
xchg
mov
add
mov
xchg
fildll
cli
adc
dec
adc
or
bound
out
xor
rorl
cmp
xchg
adc
sbbl
dec
or
fwait
test
inc
push
and
jne
or
cwtl
mov
clc
mov
mov
leave
test
and
fisubrs
mov
sbb
xchg
testl
out
jne
test
ss
mov
iret
ss
addl
or
jbe
enter
pusha
xlat
hlt
cmp
fs
addb
das
nop
sub
pop
movsb
mov
test
fdivp
mov
push
ds
adc
add
or
fisttpl
test
or
and
loope
ds
pop
sub
adc
mov
out
adc
pusha
aaa
sti
cmpsl
mov
pop
or
pop
or
call
and
mov
imul
pop
and
lret
sub
mov
stos
cwtl
movsb
xchg
pop
sub
mov
jecxz
mov
dec
mov
pop
or
push
movsl
lcall
pmaxsw
mov
add
add
jl
popa
dec
xor
mov
xchg
and
call
subb
push
lods
sahf
repz
mov
jmp
inc
push
std
add
pop
or
inc
xor
in
out
ja
push
pop
jmp
dec
fbld
pusha
cmp
mov
mov
insl
out
push
push
jecxz
jge
cs
aad
mov
cmp
add
nop
mov
dec
repz
add
mov
jns
arpl
mov
popf
in
sahf
sbb
xor
xor
dec
jb
add
xchg
decl
cmp
lods
mov
ret
je
jns
aam
mov
aad
pop
aas
pop
test
pop
push
popa
jecxz
fcompl
das
cli
into
sub
push
pop
pop
cltd
addr16
incl
or
je
cmp
vpunpcklqdq
cmc
add
push
in
gs
mov
push
rcrb
pop
repz
adc
pushw
clc
and
push
sub
mov
mov
sbb
iret
and
inc
cmp
xlat
or
pop
mov
pop
pop
sub
push
mov
xlat
dec
sbb
inc
mov
fnstcw
pop
movsl
xor
cmp
cmp
jp
pusha
addr16
popa
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
fdivrl
add
jp
add
