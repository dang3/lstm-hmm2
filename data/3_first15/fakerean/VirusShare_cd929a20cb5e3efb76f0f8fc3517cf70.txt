mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
xor
lea
push
push
push
push
movl
call
add
test
je
mov
mov
push
call
add
test
je
mov
mov
add
inc
cmp
jae
lea
push
push
push
push
call
add
test
jne
pop
pop
pop
mov
pop
pop
ret
mov
cmp
je
cmp
je
cmp
jne
movw
pop
pop
pop
mov
pop
pop
ret
movw
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
add
test
jne
pop
ret
mov
xor
cmp
pop
sete
ret
nop
nop
nop
sub
lea
push
push
push
mov
push
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
lea
push
push
push
call
add
cmp
jne
mov
add
push
push
call
add
test
jne
lea
push
push
push
call
add
cmp
jne
lea
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
cmp
jne
lea
push
push
push
call
add
cmp
je
sub
pop
neg
sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
add
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
cwtl
aam
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
int
inc
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
mov
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
cmp
inc
add
call
mov
fadds
sldt
mov
add
cmp
jae
mov
mov
mov
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
cmpsb
faddl
lds
call
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
fildl
je
push
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
jno
inc
add
pop
add
repz
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
cmp
and
cwtd
and
and
in
sub
add
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
pop
lcall
jnp
and
sahf
lcall
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
mov
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
dec
ret
clc
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
xor
inc
add
pop
add
cmp
nop
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
push
loop
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
jecxz
inc
add
inc
and
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
add
add
add
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
ret
test
and
test
and
test
and
test
and
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
subb
and
stos
and
and
and
inc
stos
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
add
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
add
aad
cmp
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
mov
sub
cmp
push
push
push
push
jbe
dec
mov
jmp
mov
xor
test
jbe
mov
mov
lea
push
push
call
add
test
jle
mov
mov
lea
rep
movsw
mov
mov
mov
rep
movsw
mov
lea
mov
rep
movsw
mov
mov
mov
dec
mov
jne
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
xor
cmpl
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
push
lea
push
push
call
lea
movw
push
call
mov
lea
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
mov
push
mov
push
push
push
mov
cmp
jae
mov
xor
test
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
push
mov
test
jbe
xor
test
jbe
mov
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
cmp
je
inc
cmp
jae
mov
lea
lea
lea
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
decl
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
test
mov
jbe
mov
push
mov
push
push
sub
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
push
mov
xor
cmpl
jbe
mov
xor
lea
push
push
mov
mov
add
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jbe
mov
mov
mov
mov
shl
test
jne
inc
mov
mov
cmp
ja
mov
mov
cmp
jb
pop
pop
xor
pop
ret
mov
test
je
mov
push
shl
push
add
push
push
push
push
call
movw
mov
pop
inc
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
xor
push
lea
push
push
push
movl
call
add
test
je
push
lea
push
push
push
inc
call
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
mov
lea
push
push
push
movl
call
add
test
je
push
mov
push
mov
add
testb
and
lea
push
push
call
add
test
je
inc
add
cmp
jb
mov
mov
push
lea
push
push
call
add
mov
lea
push
mov
lea
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
mov
mov
add
mov
add
test
je
push
push
call
add
add
mov
mov
test
je
push
push
call
add
add
or
mov
cmp
jbe
mov
mov
lea
lea
movl
shl
push
call
mov
add
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
push
push
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
add
test
je
movl
mov
xor
test
jbe
xor
mov
mov
add
push
push
call
add
test
jne
mov
movl
mov
inc
add
cmp
jb
mov
cmpl
je
mov
movl
test
jbe
mov
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
push
lea
push
mov
lea
push
mov
push
xor
push
push
mov
mov
call
add
test
jne
pop
add
ret
mov
mov
push
mov
push
xor
cmp
mov
jbe
push
mov
mov
lea
push
call
add
test
jne
mov
movl
jmp
test
je
mov
lea
push
push
call
add
mov
inc
add
cmp
jb
pop
mov
test
je
mov
push
call
add
mov
pop
pop
pop
add
ret
mov
test
je
push
call
add
mov
mov
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
push
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
decl
aam
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
dec
in
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
xor
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
add
jmp
and
fdiv
dec
int3
int3
push
push
call
mov
add
mov
add
fsubrp
je
xlat
add
ret
in
add
add
mov
aad
xchg
push
mov
add
push
push
push
push
push
push
call
add
add
add
mov
add
pop
in
roll
mov
jp
shll
add
mov
ficomps
cmpsb
sub
pop
popl
push
push
lea
push
lea
push
push
push
call
imul
jb
add
xchg
add
add
int3
mov
stos
push
add
scas
jbe
add
lahf
add
add
add
add
aam
lcall
jmp
add
jnp
lock
add
mov
out
mov
in
call
push
push
push
push
push
push
push
push
call
add
pushf
add
cmpsb
in
add
add
jae
add
mov
int
arpl
icebp
add
in
call
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
mov
pop
add
add
testl
mov
add
add
hlt
icebp
mov
add
in
fdivr
lcall
push
lea
push
lea
push
call
bound
add
mov
mov
mov
fiaddl
mov
add
add
call
add
out
arpl
add
xchg
nop
push
icebp
lahf
lret
mov
sahf
jge
add
add
jb
in
hlt
pop
call
call
push
push
call
add
jl
repnz
jecxz
add
iret
lret
mov
add
pop
mov
add
pop
lock
add
push
out
add
ja
add
pop
fucomi
mov
sub
pop
push
push
push
push
push
push
lea
push
call
addl
add
add
xlat
mov
jmp
mov
mov
cltd
add
add
push
xchg
test
jmp
lods
add
add
rcrl
add
mov
add
push
push
push
push
call
push
jge
mov
jmp
add
fsubp
mov
lds
pusha
out
mov
bound
movl
fwait
jge
fisttps
add
mov
iret
imul
sub
pop
ret
push
push
push
call
add
shll
mov
in
push
add
add
in
stos
jle
add
cltd
add
add
stos
shr
lods
mov
add
jns
lahf
add
add
add
arpl
mov
mov
push
push
lea
push
push
push
lea
push
lea
push
push
call
fucomip
add
imul
add
sti
lea
xchg
lock
in
mov
lret
jbe
add
mov
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
push
pop
in
fistps
jmp
mov
add
bound
add
les
add
les
mov
add
add
movsb
scas
push
mov
gs
mov
add
add
xchg
shll
add
add
xchg
jl
sub
pop
add
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jp
push
add
mov
pop
push
xchg
xchg
add
test
add
cli
add
add
icebp
add
fsts
test
in
test
add
jecxz
std
pop
xchg
mov
mov
lcall
pop
add
repz
adc
setne
lret
adc
iret
push
sub
add
ror
dec
xor
sub
inc
rol
xor
pop
sub
shr
pop
push
push
push
push
push
lea
push
call
lcall
push
add
add
cltd
jnp
mov
mov
clc
xlat
add
je
xchg
filds
jne
push
je
xchg
enter
add
add
mov
roll
mov
push
scas
jb
jbe
jb
mov
mov
test
add
jne
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
mov
fninit
xchg
add
in
cmpb
mov
add
mov
ja
bound
pop
shrb
push
fdivs
lea
add
pushf
add
hlt
add
add
add
testl
nop
add
pop
call
push
push
push
push
lea
push
push
push
push
call
arpl
pop
jns
pusha
ljmp
mov
add
add
add
rolw
add
add
pop
mov
mov
add
testb
lods
add
add
add
add
lcall
inc
lock
push
push
push
lea
push
call
popf
mov
out
in
in
jne
jp
test
xchg
loope
popa
add
lret
out
mov
add
mov
add
add
test
xchg
in
jge
add
add
lods
add
add
add
pop
popf
into
mov
fsubrl
mov
add
movl
push
push
push
push
push
push
push
push
call
roll
addl
sahf
imul
add
add
xchg
pop
add
mov
mov
int3
add
add
jmp
add
add
lods
test
jb
add
add
lods
pop
movsb
push
cmpsl
out
lret
add
xchg
pop
add
sub
pop
lea
push
push
push
lea
push
lea
push
push
push
call
lahf
add
insb
add
cmpsl
add
int3
in
cmpsb
push
add
push
add
add
add
push
push
mov
mov
pushl
pushl
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
int3
xchg
imul
add
add
mov
add
cwtl
push
push
les
jno
cwtl
imul
add
addl
pop
add
mov
add
push
jle
add
stos
xchg
lock
and
mov
xchg
jb
loop
call
add
add
mov
pop
rcrl
stos
lods
movsb
mov
add
add
addr16
jbe
js
cld
add
mov
fcomip
lcall
jge
pop
sub
pop
pushl
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jl
add
jbe
add
add
jle
add
add
mov
mov
imul
add
mov
aam
add
cld
pop
add
jnp
popl
ror
mov
add
cwtl
add
mov
pop
fiaddl
mov
add
test
push
add
mov
loop
mov
in
lcall
jne
call
push
push
inc
rol
inc
shl
push
or
inc
add
sub
add
rol
sub
dec
sub
pop
inc
add
sub
pop
push
push
push
lea
push
push
call
add
mov
jle
mov
add
lds
jne
jo
stos
roll
add
arpl
add
mov
aad
xlat
add
mov
mov
xchg
push
mov
in
in
pop
pushl
push
push
push
push
push
push
push
lea
push
call
leave
push
push
add
roll
add
testb
mov
filds
jbe
add
add
add
jbe
mov
sahf
add
call
popa
iret
mov
add
jb
addr16
test
pop
add
pusha
bound
pop
jle
faddl
push
sub
pop
call
push
push
push
lea
not
push
push
pop
add
inc
not
sub
sub
xor
pop
shr
lea
ror
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
bound
cmpsb
add
int3
jle
push
xchg
je
add
xchg
add
vminps
pop
shrb
sti
add
add
mov
int3
push
add
addb
push
add
jp
jne
pushf
test
incb
add
xchg
fmuls
add
leave
mov
add
icebp
add
xchg
pusha
roll
add
add
push
push
push
push
lea
push
push
call
add
mov
add
pop
add
rcrl
scas
mov
fcmovbe
push
jbe
add
lcall
add
lea
push
push
push
call
add
xchg
loopne
shr
add
mov
add
stc
js
frstor
repnz
fbld
ret
ja
add
jp
scas
add
push
pop
addb
add
ljmp
out
mov
push
mov
add
add
in
in
lcall
rorb
adc
orb
push
call
mov
add
xchg
mov
clc
add
scas
add
add
add
add
out
pop
lods
add
shrb
jge
add
adcb
in
hlt
lcall
push
push
call
mov
add
add
add
add
out
add
mov
push
mov
add
add
ja
add
add
not
testl
filds
je
test
add
lcall
push
push
push
lea
push
push
push
lea
push
call
mul
negl
loope
add
int3
rolb
mov
add
add
jge
aam
add
push
out
cmpsb
add
add
add
add
fistpl
add
add
in
lcall
pop
hlt
push
push
lea
push
push
lea
push
call
shrb
test
jle
add
add
add
add
shl
in
add
clc
add
jmp
cltd
jb
cmpsl
aad
add
mov
cld
jmp
lods
in
test
add
add
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
mov
push
loop
add
add
add
rorb
jno
mov
xchg
nop
testl
add
fldz
mov
mov
add
negl
stos
pop
mov
in
loopne
lcall
ret
add
add
add
push
push
push
push
push
push
lea
push
push
push
call
jmp
pop
add
add
pop
sarl
xchg
stc
mov
mov
out
add
add
mov
add
fsubrl
mov
push
add
add
lcall
xor
jno
adc
push
mov
push
push
push
push
push
push
lea
push
call
bound
push
lret
push
add
pop
test
mov
lock
push
add
jb
add
scas
loop
add
add
mov
mov
pop
test
add
pop
add
add
js
lods
add
popl
add
ret
lahf
lret
add
jbe
add
loopne
xor
push
push
lea
push
push
lea
push
push
call
xchg
add
ficomps
add
add
cli
cld
add
pop
repnz
add
mov
push
fistl
loope
mov
jno
add
push
pop
cmc
add
add
clc
add
icebp
add
enter
add
sahf
pop
mov
add
ljmp
pop
add
push
push
call
add
lret
add
mov
scas
add
add
xchg
mov
stos
add
add
mov
in
clc
jne
stos
fs
jo
jl
add
add
sub
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
jb
mov
leave
les
mov
jl
add
bound
add
jp
je
jp
scas
pop
pop
add
data16
sub
pop
push
push
push
call
cmpsb
idivb
jbe
add
push
sbbl
add
addb
pusha
add
add
add
into
pop
out
js
imul
add
leave
cmpsl
addl
out
stos
sub
pop
mov
xor
push
push
lea
push
lea
push
push
call
imul
add
fadd
push
roll
pop
pushf
sar
add
add
out
ja
add
filds
imul
loop
pop
add
sub
pop
add
pop
push
push
push
lea
push
lea
push
call
pop
add
add
test
scas
mov
add
mov
mov
push
add
add
mov
pop
mov
imul
add
in
in
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
js
xchg
add
lret
mov
push
test
mov
add
xchg
add
add
xlat
lahf
nop
imul
add
lock
add
scas
lcall
add
fstpt
add
lcall
or
push
lea
push
lea
push
push
push
push
call
add
jge
loopne
divl
add
add
mov
mov
add
lcall
add
jae
add
lock
test
add
testl
call
add
push
push
push
push
push
push
lea
push
push
push
push
call
mov
iret
sar
cmc
add
test
adc
jecxz
in
fstps
call
push
add
mov
faddl
loopne
in
fdivr
lcall
push
push
push
lea
push
push
push
push
call
ret
shrb
rorb
jbe
xchg
push
flds
xchg
add
lcall
fnstenv
add
out
pop
mov
add
lcall
inc
or
jno
adc
inc
fbstp
cmpsb
add
pop
jp
lea
push
push
push
push
call
pop
pop
lcall
add
jo
push
insb
add
testb
push
add
add
subb
xchg
lret
mov
add
add
lcall
xchg
fstps
add
add
sub
add
add
add
mov
lcall
add
push
push
push
push
lea
push
push
push
push
push
call
lret
add
jbe
fnsave
add
ljmp
push
stc
hlt
add
mov
int
adcb
mov
jnp
cld
add
int3
add
scas
sar
jge
pop
arpl
jae
mov
mov
add
add
int3
add
lret
rol
mov
fcompl
les
lea
push
push
push
push
push
push
push
push
push
call
imul
scas
popf
add
rorl
enter
cmpsl
jae
int
xchg
ror
add
add
cld
imul
out
imul
add
jb
enter
mov
add
addw
fadd
xchg
test
movsl
jno
sub
pop
sub
push
push
lea
push
push
push
call
xchg
add
insb
add
fsubp
movsl
add
jp
add
add
add
add
jbe
mov
int3
cmpsb
mov
cmpl
in
in
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
test
mov
pushf
rcll
je
add
mov
mov
add
add
add
insb
mov
mov
loop
je
stos
nop
push
add
pop
lcall
add
arpl
fs
add
add
lcall
movsb
push
lea
push
call
addb
fcoml
add
je
add
sbbl
testl
arpl
jbe
imul
leave
mov
add
faddl
stos
mov
add
repnz
mov
add
cmc
push
add
out
repnz
mov
mov
outsl
ret
in
clc
pop
pop
mov
push
push
push
push
push
push
push
push
call
iret
jmp
add
xchg
lcall
add
mov
loope
mov
add
out
cmpsl
mov
loopne
lcall
pop
in
push
rol
rol
pop
add
push
push
push
lea
push
call
add
iret
mov
add
jl
mov
icebp
push
iret
jo
jne
clc
xchg
int3
add
pop
out
imul
add
xchg
add
andb
lds
add
fdivp
test
mov
mov
add
mov
xor
push
add
shl
ror
pop
mov
push
push
push
lea
push
lea
push
call
imul
int3
add
filds
mov
push
test
mov
gs
add
aam
mov
pop
in
outsl
add
lods
add
jge
mov
xor
push
push
lea
push
push
push
push
push
push
lea
push
call
iret
popa
fldcw
mov
scas
add
xchg
add
loop
add
mov
sti
aad
lret
add
popa
mov
add
pop
aam
test
fdivrl
add
outsl
lds
les
add
sub
pop
add
push
push
lea
push
push
push
call
ljmp
addb
push
sti
je
push
scas
mov
add
add
cmc
stos
add
mov
push
pop
add
movsl
lahf
add
mov
addb
pop
mov
push
push
push
push
call
add
push
xchg
scas
add
cli
pop
add
push
jbe
rcll
add
scas
mov
push
call
imul
mov
add
add
xchg
xchg
std
add
jle
cltd
fadds
add
mov
in
hlt
pop
xor
push
push
call
add
pop
add
cltd
aam
jo
add
mov
push
add
mov
add
lret
add
fsubr
scas
lds
fbld
add
add
push
add
push
mov
sub
pop
add
push
shr
inc
rol
pop
add
push
push
push
lea
push
push
push
lea
push
push
push
call
push
jo
call
shl
imul
movsl
mov
add
insb
add
add
loope
add
add
into
leave
imull
movb
rolb
icebp
add
popa
add
mov
jno
cmpsb
fstp
add
sub
pop
add
push
shl
pop
mov
push
push
dec
shl
push
and
add
sub
inc
sub
shl
not
pop
add
pop
push
lea
add
pop
pushl
push
lea
lea
pop
call
push
push
push
push
call
add
mulb
popa
add
movsl
lock
cmpsb
jo
mov
add
pop
xchg
add
outsl
loope
xchg
bound
add
loopne
xchg
imul
add
add
jmp
push
push
mov
mov
add
add
add
add
sarl
add
push
rol
push
xor
add
rol
sub
shl
add
pop
sub
pop
push
push
lea
push
push
call
int
popa
lods
add
pop
add
mov
hlt
add
add
lcall
push
jp
add
add
add
sub
pop
push
push
push
pop
call
mov
push
sub
inc
pop
push
push
push
ror
shl
pop
mov
add
push
push
push
call
aad
add
lods
add
call
pop
add
add
arpl
add
add
lods
lods
add
pop
cwtl
sub
pop
add
push
lea
push
lea
push
call
jb
mov
xchg
lods
jae
pop
popf
add
add
add
iret
xchg
add
add
ret
push
sub
pop
add
mov
push
push
lea
push
push
push
call
push
xchg
mov
add
jecxz
jnp
push
add
faddl
leave
notb
add
mov
add
jmp
ljmp
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
gs
fmull
add
xchg
add
add
mov
add
pop
add
addb
add
add
xorl
pop
lret
add
sti
icebp
pop
add
int3
add
sub
pop
add
push
shr
dec
pop
add
push
lea
push
lea
push
push
push
push
call
mov
scas
in
add
xchg
add
add
xchg
add
add
roll
xlat
cld
add
mov
jp
add
add
lcall
mov
negb
in
call
adc
xor
adc
push
push
lea
push
push
push
call
call
jns
rolb
lret
int3
imul
into
xlat
subb
in
push
rcll
add
add
into
add
movsb
cmpsb
add
mulb
add
loop
mov
pushf
mov
fldenv
xor
push
lea
push
push
push
push
lea
push
push
push
call
add
jl
add
popa
data16
popa
jp
int
call
in
jne
leave
add
add
add
faddl
cwtl
add
mov
shrb
jnp
roll
lock
rcrl
test
cmpsl
add
add
pop
add
loopne
add
push
lea
push
push
push
lea
push
call
add
in
add
add
add
js
addl
add
cld
rolb
xlat
test
pop
jb
add
stos
test
add
add
add
push
roll
sahf
add
test
add
scas
xchg
rolb
subb
add
add
nop
add
mov
sub
pop
add
pop
push
lea
pop
mov
xor
push
pop
rep
mov
xor
push
add
pop
or
je
mov
push
push
lea
push
push
lea
push
call
sarb
int
xchg
in
mov
fwait
xchg
shl
cltd
lret
fwait
jge
add
imul
test
add
add
movb
lods
out
test
cli
lcall
lcall
movsb
add
hlt
add
add
fldl
add
add
add
sub
pop
xor
push
push
push
push
lea
push
push
call
mov
add
jle
cmpsb
xchg
out
add
scas
add
mov
int
nop
add
add
sti
int
add
mov
add
add
add
ja
add
push
add
repnz
mov
mov
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
jae
mov
add
rcl
pop
aad
add
roll
jmp
insb
add
stos
jae
add
add
stc
jb
push
pushf
sub
pop
mov
xor
push
lea
sub
pop
add
push
dec
add
sub
pop
add
push
xor
ror
pop
push
push
shr
pop
mov
push
push
push
push
push
call
add
ftst
xchg
leave
rcll
add
add
les
arpl
addl
push
mov
mov
lods
add
movb
xchg
mov
and
test
add
lock
jge
xchg
les
push
js
pop
jge
test
mov
sub
pop
xor
push
lea
push
push
push
push
call
scas
jnp
jbe
nop
add
inc
push
add
add
add
jb
add
jb
hlt
add
add
xchg
lds
add
mov
mov
mov
add
add
add
les
shl
xor
pop
add
pop
push
ror
lea
shr
pop
rep
mov
xor
push
not
pop
or
je
mov
push
shl
pop
add
add
push
sub
add
pop
rep
pop
push
push
push
push
pop
add
sub
not
sub
shl
xor
inc
pop
add
pop
push
sub
dec
pop
pop
mov
push
lea
push
lea
push
push
push
push
push
lea
push
call
push
mov
push
fidivs
add
add
lock
jnp
add
shlb
mov
mov
bound
push
add
add
add
popf
mov
mov
add
pop
pop
fsubl
addb
add
push
add
pop
mov
push
push
push
call
add
insb
pusha
fldenv
jnp
out
add
add
add
jo
add
add
popa
mov
add
jecxz
add
mov
addr16
add
inc
and
push
pop
jmp
push
push
push
push
push
push
push
push
call
add
xchg
mov
add
jae
add
add
aam
add
rolb
sti
jecxz
add
iret
mov
lock
into
flds
jo
fs
test
add
scas
add
add
fcompl
mov
add
int3
lret
fwait
cmc
add
sub
pop
mov
push
xor
xor
pop
add
push
lea
shl
pop
push
push
not
lea
pop
push
push
sub
ror
lea
pop
push
push
push
call
jae
add
mov
lcall
jns
mov
subb
add
jbe
sub
pop
push
push
push
push
lea
push
push
push
push
call
mov
lret
add
jb
add
scas
roll
add
popa
push
call
jno
fiadds
add
add
add
add
cmpsl
mov
cld
lret
testb
lea
sub
pop
mov
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
jmp
add
data16
pop
xchg
mov
pop
add
fidivl
add
add
add
shl
rcll
sbbb
mov
test
mov
pop
loop
xchg
add
add
fmuls
fsubp
aam
fiadds
add
fwait
add
clc
jae
push
sub
pop
pop
push
dec
pop
pop
push
push
push
push
call
addb
jo
add
in
call
in
add
jmp
add
xlat
add
add
lret
add
pop
jno
mov
shrb
in
lock
lcall
push
push
push
push
call
popa
mov
push
int3
lahf
add
jecxz
lahf
add
push
mov
push
je
lods
xchg
xchg
add
add
add
mov
imul
add
add
notb
xchg
add
xchg
mov
lret
cltd
add
in
lock
lcall
ret
push
push
lea
push
push
call
add
add
stc
add
pop
mov
add
in
faddl
mov
repnz
fidivrs
stc
test
push
push
push
lea
push
push
call
add
mov
mov
lods
lcall
scas
fists
testl
jns
add
add
pop
xchg
add
jne
sti
add
add
add
clc
add
add
jbe
add
mov
enter
pop
aam
clc
iret
sub
pop
mov
push
lea
push
push
lea
push
lea
push
push
push
call
add
cmpsl
lcall
add
mov
add
shl
mov
add
ljmp
xchg
add
gs
pop
jp
push
add
lods
mov
xchg
add
jns
add
arpl
int3
jmp
push
add
mov
add
out
sti
xchg
in
xchg
add
clc
push
lea
push
push
call
mov
add
add
add
adc
add
ret
add
popa
add
cli
mov
pop
add
pop
push
add
iret
add
rcl
int
xchg
add
add
iret
xchg
add
sub
pop
push
push
push
push
push
push
push
push
call
push
icebp
add
add
test
test
outsl
lods
add
xchg
je
add
add
lods
scas
mov
lods
add
add
lcall
add
mov
add
add
lcall
push
push
dec
pop
push
push
push
push
push
push
push
call
mov
mov
insb
jne
push
add
jle
add
xchg
add
add
add
ja
jnp
pusha
je
test
sub
pop
movl
push
lea
push
lea
push
lea
push
push
lea
push
push
call
mov
nop
jge
fs
idiv
les
add
add
add
add
jmp
jo
add
in
cmpsl
addb
add
mov
in
jo
lea
mov
fldl
mov
outsl
add
aad
fnsave
fists
add
stos
push
add
add
sub
pop
addl
test
je
push
push
push
call
xchg
mov
add
lock
add
leave
xchg
lret
out
jmp
add
add
add
leave
add
hlt
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
mov
lods
mov
out
add
add
add
add
jp
add
bound
add
add
mov
add
out
add
add
mov
add
add
add
add
jnp
in
push
push
add
cwtl
add
jbe
out
rolb
push
push
call
xlat
lock
call
call
pop
test
mov
pop
js
negb
mov
add
add
popa
test
stc
sub
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
push
call
clc
int
add
into
add
add
stc
pop
out
xchg
xchg
movsb
in
je
add
fcomp
pushf
push
pop
sar
add
flds
shr
movl
mov
sub
pop
leave
ret
push
shl
ror
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
mov
mov
xchg
add
add
clc
add
add
add
std
jp
lret
out
mov
stos
add
add
in
faddl
popl
mov
add
add
loopne
not
gs
call
stc
push
call
fcomip
gs
sub
pop
add
push
xor
not
rol
pop
push
push
lea
push
call
jle
add
add
cmpsb
add
lret
add
add
jge
add
xchg
mov
cld
jmp
add
add
nop
add
mov
push
add
sub
pop
push
push
push
not
add
ror
pop
push
testl
push
push
push
push
push
push
push
call
jae
imul
pop
or
ret
add
add
add
push
jecxz
add
nop
add
add
fwait
mov
add
xlat
loopne
pusha
sub
pop
addl
push
push
rol
rol
shl
not
pop
call
mov
push
push
push
push
lea
push
push
push
push
push
call
hlt
call
fwait
bound
lods
idivb
loopne
xchg
xchg
add
mov
imul
push
lcall
mov
rolb
jmp
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
pop
add
ljmp
in
add
in
loopne
jmp
test
add
xchg
lahf
movsb
fsubr
mov
add
add
add
call
iret
lahf
mov
lea
push
push
lea
push
call
xchg
add
add
add
add
push
push
push
loope
push
push
add
mov
nop
jecxz
pop
mov
loop
cli
add
jbe
cwtl
jae
clc
add
add
test
xchg
subb
jne
xchg
add
popf
add
add
fsubs
lcall
add
mov
test
test
push
push
call
push
in
add
icebp
add
add
iret
add
test
cli
add
add
rcll
lods
push
add
loope
add
pop
arpl
add
hlt
push
jl
add
add
add
add
std
filds
lcall
jp
incl
test
std
call
dec
ret
push
lea
push
push
push
push
call
pop
pop
add
add
add
jp
mov
cld
int
xchg
out
clc
movsl
mov
notb
mov
add
add
cmpsb
pop
push
jp
add
add
xchg
add
icebp
add
mov
jbe
arpl
mov
in
iret
mov
scas
xchg
int3
add
jb
sarb
jae
sub
pop
pop
push
rol
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
cli
mov
add
add
mov
add
add
add
jno
andl
pop
mov
pop
in
push
test
pop
add
imul
cwtl
mov
mov
add
mov
add
loop
xlat
sub
pop
pop
leave
push
inc
lea
pop
ret
push
push
xor
not
pop
mov
add
push
push
push
push
push
push
call
add
roll
cwtl
xchg
add
cmpsl
add
rolb
test
jle
add
std
add
sarl
pop
add
out
pusha
mov
call
add
add
add
add
pop
ficoml
roll
sub
xor
add
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
mov
lcall
int3
movl
loop
add
mov
add
cld
mov
add
add
add
add
pusha
sti
fnstsw
sbbl
loop
add
push
sar
in
loopne
lcall
push
push
push
push
call
fisubs
add
loop
loop
mov
loop
add
jo
add
shll
push
pop
jno
lods
outsl
popf
test
pop
movl
push
push
push
push
push
push
lea
push
lea
push
call
pop
mov
lods
into
sar
pop
jp
jb
jmp
arpl
add
jl
xchg
in
movb
add
add
add
mov
iret
loope
test
push
push
push
add
add
pop
add
lret
add
lret
add
lcall
add
shrb
pop
call
push
shr
dec
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
call
hlt
add
add
push
fucomip
add
ljmp
jbe
in
add
add
add
in
add
add
in
add
add
pop
in
mov
ffree
shrb
add
add
into
mov
add
cmpsl
mov
add
stc
incl
not
pop
cmpl
jne
push
push
push
push
push
push
push
lea
push
push
call
add
pop
pop
fiaddl
into
add
add
pop
cmpsb
add
scas
mov
add
into
out
add
cmpsb
in
add
addb
mov
fdivr
lcall
push
ror
shr
pop
pop
push
shr
pop
pop
push
shl
add
sub
sub
pop
pop
push
inc
sub
shr
xor
pop
leave
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
filds
push
mov
fiadds
add
mov
out
add
ljmp
in
loope
cld
outsl
movb
add
mov
add
add
add
add
lcall
add
add
stos
pop
add
push
push
inc
shl
ror
pop
mov
push
add
ror
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
in
add
lret
add
sbbl
add
add
scas
je
shlb
xchg
lock
mov
mov
add
add
insb
add
fisubs
add
in
push
push
push
push
lea
push
push
push
call
test
add
jo
add
mov
add
lret
std
add
mov
ret
std
in
add
add
mov
mov
fbld
mov
stos
cmpsl
test
mov
clc
test
filds
jno
sahf
hlt
cwtl
test
add
add
gs
add
mov
mov
jne
add
call
or
test
cmpsl
call
in
add
add
add
add
pusha
ljmp
add
add
xchg
jns
test
add
test
add
add
add
ret
add
xchg
test
add
sahf
push
movsl
add
add
ljmp
lock
lcall
push
push
push
call
push
std
add
mov
add
mov
subl
push
std
sbbl
add
push
jp
faddl
adcb
pop
add
add
mov
sub
pop
mov
push
sub
lea
pop
lea
push
shl
add
inc
pop
sub
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
gs
fildl
add
add
cwtl
add
in
addr16
add
fwait
pop
jmp
pop
in
mov
in
jb
cld
add
add
add
add
add
outsl
add
push
out
mov
test
add
in
fcomps
call
push
push
call
pop
jns
add
add
jle
mov
add
add
add
lds
add
add
add
outsl
add
add
mov
add
sti
add
into
add
sub
pop
mov
push
shr
add
pop
mov
push
shr
sub
pop
add
push
push
push
push
call
xchg
iret
add
fidivs
add
jmp
stos
add
mov
jo
loopne
mov
add
add
add
add
add
pop
add
push
dec
dec
pop
mov
mov
push
sub
rol
pop
cmp
jne
cmp
jne
push
xor
sub
pop
mov
push
push
push
lea
push
lea
push
call
mov
add
ljmp
add
add
int
add
add
add
pop
mov
push
push
pusha
add
je
add
add
xlat
add
movsl
xchg
add
add
in
pop
movl
jmp
push
push
push
push
push
lea
push
call
incb
jno
aam
sarl
lods
add
add
leave
pushf
push
faddl
add
into
add
ljmp
fs
data16
mov
lcall
inc
cld
push
ror
pop
mov
push
push
push
push
push
call
std
js
pop
cwtl
fildl
jp
scas
incb
movsl
mov
test
add
xchg
add
fs
testb
into
mov
add
add
xchg
mov
add
mov
add
add
add
in
in
lcall
ljmp
pop
add
add
scas
push
push
lea
push
push
push
call
mov
subb
les
add
add
add
fcomps
mov
cmpsb
push
cmc
jl
add
lods
add
xchg
add
add
int3
add
lret
stc
mov
push
cmpsl
js
mov
mov
sub
pop
movl
push
push
push
push
push
call
std
add
movb
std
add
add
add
divb
in
ret
add
sahf
arpl
je
fdivr
orb
test
lock
jns
add
jmp
push
push
push
push
call
test
mov
mov
popf
add
add
mov
mov
fistps
xchg
addr16
add
add
fs
arpl
int
add
pusha
add
stos
jns
add
enter
add
mov
push
ror
lea
inc
pop
mov
cmp
jne
push
xor
shr
pop
mov
push
add
lea
pop
movl
push
sub
pop
jmp
push
lea
push
push
push
push
call
cmpsb
loopne
call
jmp
in
push
add
ja
int
ljmp
add
pop
add
test
add
lahf
imul
pop
mov
xchg
rcll
pop
xchg
xchg
jnp
add
mov
cmpw
jne
push
lea
push
push
push
push
push
push
push
lea
push
call
js
test
add
mov
add
fucom
filds
add
roll
add
add
in
mov
enter
add
add
cmpsb
add
ja
stc
add
ljmp
jnp
in
add
aam
add
xchg
flds
add
push
in
fcompl
inc
adc
inc
or
push
push
call
add
mov
ljmp
add
add
int
add
add
xchg
popa
add
push
add
in
add
push
js
lods
add
fimuls
add
lcall
add
adc
add
out
push
push
push
call
add
add
add
rclb
xchg
jl
add
push
movsb
int
push
add
in
add
fcmovb
out
mov
out
add
lods
fldenv
loope
jb
mov
movsl
cwtl
std
add
push
add
ja
add
push
jl
mov
insb
pop
pop
test
add
popf
sub
pop
pushl
push
push
push
lea
push
call
lahf
add
add
outsl
add
add
lods
add
add
aad
in
fcoms
add
add
add
push
add
mov
add
leave
add
les
mov
mov
pop
pop
push
push
lea
push
push
push
lea
push
call
cmc
mov
xchg
pop
cmpsb
add
jmp
xchg
add
fsubr
add
add
add
add
jo
pop
sub
pop
mov
mov
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
clc
push
mov
xchg
add
test
jl
addb
scas
lods
popa
pusha
rolb
lods
xlat
lret
fbstp
add
cmc
std
jmp
add
add
mov
sub
pop
mov
push
push
lea
shr
push
xor
add
add
sub
xor
shl
pop
sub
not
add
pop
push
add
pop
push
call
push
push
push
push
push
push
push
push
lea
push
call
add
outsl
mov
mov
add
mov
mov
add
add
cmpsl
std
add
cltd
xchg
fiadds
xchg
push
mov
jmp
add
lcall
js
int3
fldz
ret
lock
add
pop
push
inc
push
xor
sub
push
and
add
shl
dec
sub
add
pop
dec
sub
lea
pop
push
push
push
push
call
ljmp
add
insb
add
xlat
bound
in
jne
pop
add
add
filds
shrl
gs
popa
pop
add
mov
add
add
js
add
in
lock
push
push
lea
push
call
cmpsb
mov
jbe
add
add
rol
add
scas
pushf
mov
add
rolb
aam
xchg
rolb
cmpsl
mov
add
adcl
sub
pop
call
cmpl
je
push
push
sub
shl
sub
push
and
add
xor
add
add
sub
add
pop
add
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
mov
movsl
test
add
add
std
int3
add
fiaddl
add
stos
imul
xchg
subl
scas
push
mov
fiadds
stos
push
add
add
add
add
ret
movsb
mov
testl
mov
lcall
push
shl
rol
pop
call
push
shr
sub
pop
cmpl
je
push
push
shr
add
sub
push
sub
add
sub
sub
shl
xor
sub
pop
shr
xor
pop
push
pop
push
call
push
add
rol
pop
cmpl
je
push
push
sub
sub
inc
push
or
inc
add
ror
lea
sub
ror
sub
shr
not
add
inc
pop
pop
push
push
lea
push
push
call
aad
jnp
cmc
jmp
xchg
out
add
add
clc
add
mov
ret
cmpsb
add
cwtl
add
jmp
mov
add
sub
pop
push
push
inc
lea
pop
call
push
push
push
push
push
push
push
push
push
call
pop
add
sti
fidivrs
push
add
pop
add
mov
add
push
mov
mov
xchg
fdivp
nop
add
cld
pushf
sub
pop
cmpl
je
push
push
add
shr
push
xor
add
dec
rol
sub
not
ror
pop
add
ror
pop
push
push
lea
push
push
push
push
push
call
add
mov
mov
add
add
call
les
add
sti
add
add
add
pop
sti
into
subl
add
lds
mov
add
sbb
add
push
add
in
testb
add
jge
jecxz
call
xlat
add
into
imul
pop
push
push
lea
push
push
push
push
push
push
call
add
cmc
mov
add
pop
xor
mov
mov
flds
add
add
in
jo
add
add
popa
repnz
add
scas
lea
add
add
add
add
ljmp
add
add
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
lock
xlat
movl
std
rclb
add
add
int
add
jns
gs
lods
fwait
mov
flds
jo
add
test
outsl
in
mov
mov
add
xchg
jl
roll
pop
sub
pop
cmpl
je
push
push
inc
push
xor
add
add
not
lea
sub
inc
inc
add
ror
pop
lea
pop
push
add
ror
pop
push
push
sub
lea
shl
xor
pop
call
push
push
push
push
lea
push
push
call
lock
mov
mov
sbb
add
add
pop
mov
lcall
in
aam
add
test
add
imul
std
cmpsl
jns
push
sub
pop
cmpl
je
push
push
sub
rol
shr
push
and
add
sub
add
dec
sub
ror
shr
pop
dec
xor
pop
push
pop
push
push
dec
pop
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
cltd
add
lret
add
add
addl
mov
add
in
mov
add
add
add
add
fistps
ljmp
add
sub
pop
cmpl
je
push
push
add
push
xor
add
rol
sub
inc
shl
add
pop
sub
pop
push
ror
shl
sub
pop
push
call
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
movb
pop
add
add
add
orl
add
je
lret
jmp
add
xchg
add
scas
jae
mov
pop
subl
add
fadds
lcall
cmp
rol
je
push
push
add
push
and
add
sub
shr
rol
pop
add
inc
sub
pop
push
shl
pop
push
push
inc
add
dec
sub
pop
call
push
not
add
add
pop
cmpl
je
push
push
sub
ror
sub
not
push
or
not
add
shr
add
sub
sub
add
not
not
add
pop
shr
ror
sub
pop
push
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
popa
addb
fwait
add
add
pusha
imulb
jmp
popa
xchg
sub
pop
les
scas
pop
xchg
add
add
add
in
fdivr
lcall
es
add
rolb
inc
push
xor
sub
pop
cmpl
je
push
push
dec
push
xor
add
lea
xor
xor
sub
xor
pop
shl
pop
push
rol
sub
pop
push
call
push
push
push
lea
push
lea
push
push
push
call
mov
xchg
mov
add
je
xchg
loopne
add
add
add
nop
add
sti
ret
rolb
add
add
mov
sahf
add
add
add
add
pop
jecxz
add
jl
mov
into
jle
test
pop
push
push
mov
loopne
pusha
add
imul
js
jmp
les
je
push
push
rol
push
xor
add
add
sub
sub
rol
sub
shl
pop
inc
not
inc
pop
push
lea
push
lea
push
push
push
push
call
out
add
roll
loopne
cld
add
clc
popa
scas
jbe
add
add
testl
mov
add
call
push
push
push
lea
push
push
call
add
std
xchg
jns
add
pop
fsubl
nop
je
add
pop
add
mov
mov
xchg
add
add
add
xchg
sub
pop
call
push
lea
pop
cmpl
jne
mov
push
push
push
call
sbbb
mov
add
add
add
push
mov
push
add
mov
add
rolb
mov
mov
jge
add
popa
add
add
popf
add
add
int3
popa
add
add
add
add
scas
add
add
fldz
xchg
shrb
or
lea
push
push
lea
push
call
pop
addl
jge
leave
insb
mov
repnz
add
pusha
push
add
sti
mull
cmc
mov
lahf
add
sub
pop
xor
push
push
push
call
aad
testl
add
aad
add
xchg
push
mull
add
fnstenv
add
add
pusha
add
add
jl
cmpsb
fldcw
mov
out
fnstsw
add
add
lcall
push
sub
add
shl
pop
pop
pop
push
lea
push
call
add
in
mov
add
popf
pop
push
sti
add
test
add
add
lret
cmpsb
jmp
jmp
add
subb
add
test
stc
repnz
ljmp
mov
xchg
into
mov
fadds
add
xchg
ja
add
out
mov
sub
pop
pop
push
xor
add
shl
pop
leave
ret
push
lea
push
lea
push
push
lea
push
push
push
call
mov
clc
push
add
fcoms
insb
scas
push
pop
add
jae
pop
shlb
push
add
add
add
ljmp
loopne
rcl
movsb
mov
scas
add
testb
pop
add
add
add
jl
add
mov
lcall
mov
push
push
push
push
push
lea
push
push
lea
push
push
call
fs
out
add
out
add
add
loopne
lods
js
cmpsl
add
stos
add
ret
ror
add
sarl
add
add
add
js
add
pop
add
nop
jae
jle
lahf
add
mov
jno
lds
push
sub
pop
add
push
push
push
push
push
push
lea
push
push
push
call
add
xorb
add
scas
add
add
stos
addr16
fnstcw
add
add
add
nop
add
add
add
in
fdivr
lcall
jge
add
test
push
push
xor
add
sub
sub
sub
xor
lea
shr
pop
add
xor
pop
push
not
sub
pop
pushl
call
push
lea
push
push
lea
push
push
push
call
mov
add
imul
out
add
fadd
add
xchg
add
les
nop
fptan
add
mov
fcomip
leave
jbe
add
mov
stc
mov
jns
add
cld
jge
fldl
xchg
imulb
sub
pop
push
push
push
lea
push
call
call
xlat
add
add
andl
add
add
add
push
add
mov
ffreep
add
add
mov
test
add
call
add
add
add
ret
add
jb
xchg
mov
pop
cmc
fiadds
jge
jo
sub
pop
call
push
sub
add
not
pop
jmp
push
push
push
lea
push
push
push
push
push
push
push
call
add
testl
mov
add
cld
scas
add
pop
ror
add
xchg
add
add
sti
ljmp
mov
push
test
xchg
add
add
test
into
addb
add
int3
add
faddl
adc
fdivr
lcall
jge
add
test
add
add
test
shr
sub
shl
lea
pop
leave
push
shl
pop
add
pop
push
push
call
loope
mov
popf
add
pop
xchg
add
cltd
pop
add
add
roll
out
call
add
scas
xchg
test
add
in
jnp
push
lea
outsl
add
cmpsl
lods
add
add
sub
pop
pop
pop
push
push
push
call
push
into
xchg
sarl
movsb
mov
add
xchg
in
add
add
fnstsw
pop
pop
add
mov
add
loop
xchg
fs
mov
push
xlat
cld
jne
pop
jo
data16
cwtl
push
add
add
add
push
js
fdivs
leave
xchg
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
xchg
into
add
mov
add
hlt
add
call
pushf
pop
repnz
add
add
add
pop
add
add
cmc
add
sahf
xchg
test
pusha
retw
jecxz
fdivp
add
in
loopne
lcall
add
push
push
push
push
push
push
push
call
in
add
call
cmpsb
into
pusha
add
add
pop
sar
cmpsl
in
add
add
mov
add
push
sub
rol
ror
pop
jmp
cmpl
jne
push
push
add
push
and
add
sub
sub
shl
dec
pop
sub
dec
pop
push
lea
inc
pop
pushl
push
push
lea
push
push
push
call
shll
in
arpl
loop
nop
stc
add
add
outsl
jle
jno
push
jae
orb
test
push
rolb
push
frstor
imul
arpl
add
stos
xlat
push
int
add
add
add
int3
clc
jmp
in
lcall
pop
sub
add
push
push
call
fdivr
js
mov
jecxz
add
cli
test
cmpb
into
jae
add
add
add
enter
xchg
scas
nop
icebp
add
in
add
add
add
add
sub
pop
call
push
push
push
push
lea
push
call
scas
shr
add
popf
add
lds
add
add
add
ficompl
out
aam
hlt
mov
add
popf
data16
sahf
xchg
xchg
add
pop
add
pop
fiadds
jle
stc
flds
add
sub
pop
jmp
cmpl
jne
push
push
push
lea
push
push
push
call
loopne
add
out
add
mov
neg
add
fadds
movl
add
add
mov
add
scas
lret
add
add
cmc
add
push
in
call
add
push
lea
sub
sub
pop
mov
push
push
push
add
xor
sub
push
xor
add
add
rol
add
sub
rol
add
pop
rol
shr
lea
pop
push
push
push
push
call
fadds
xchg
add
jl
add
add
data16
roll
add
add
enter
add
neg
xchg
in
cld
jb
testb
add
cmpsb
shrb
add
add
fldl
add
outsl
icebp
mov
push
sub
pop
pushl
push
shr
sub
shl
pop
call
push
not
pop
call
push
push
xor
add
sub
push
or
inc
add
lea
shl
sub
xor
rol
pop
shr
inc
shl
pop
push
add
not
sub
pop
pushl
push
push
call
add
roll
pop
addr16
hlt
cli
js
shll
mov
mov
repnz
mov
mov
stos
bound
scas
gs
addl
add
add
scas
arpl
rolb
movsl
test
add
sti
sub
add
shrb
jns
push
push
shl
lea
add
push
or
not
add
add
add
sub
add
sub
pop
inc
add
shr
pop
push
push
push
push
push
push
call
add
arpl
fldcw
add
add
fwait
in
add
jmp
addr16
add
bound
jae
in
call
push
push
push
push
lea
push
push
push
push
push
call
incb
add
add
add
mov
add
add
in
mov
jmp
mov
cmpsl
add
xchg
cmpsl
lock
pop
shlb
sti
arpl
mov
in
fcompl
pop
sub
add
xlat
call
add
add
iret
scas
pop
xchg
mov
add
push
xlat
ret
clc
sarl
loop
pop
aad
pop
ret
mov
fadds
in
clc
lcall
shrb
maxps
dec
shl
inc
push
push
pop
add
sub
sub
rol
sub
sub
sub
pop
add
ror
pop
push
add
pop
pushl
push
add
pop
call
push
ror
pop
call
push
push
rol
add
push
push
pop
add
dec
sub
pop
xor
dec
pop
push
push
push
push
push
push
push
push
call
add
mov
jle
mov
add
js
lcall
jmp
add
imul
add
gs
mov
add
cld
mov
add
add
add
add
add
filds
lcall
jne
push
ror
pop
call
call
push
push
push
xor
add
rol
sub
add
sub
pop
lea
ror
pop
push
not
pop
pushl
call
push
lea
push
lea
push
push
push
call
enter
lea
icebp
jno
arpl
pusha
cltd
add
add
ljmp
lret
fnsave
mov
add
imul
mov
rol
add
lcall
shrb
mov
push
not
lea
add
add
push
sub
add
not
inc
rol
rol
sub
dec
ror
lea
pop
ror
shl
lea
pop
push
not
lea
sub
pop
pushl
push
lea
push
call
mov
roll
cli
add
jecxz
push
movsb
add
mov
movsl
les
add
pop
xlat
add
jnp
jecxz
add
movsl
add
mov
into
jno
add
jecxz
mov
lahf
add
add
add
iret
stos
ret
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
add
fsubl
jle
mov
add
mov
add
add
roll
add
into
add
repnz
pop
call
push
push
push
or
not
add
add
add
sub
not
add
not
xor
pop
sub
pop
push
push
call
shr
filds
mov
add
mov
add
incb
popf
mov
jnp
mov
jnp
add
mov
add
sti
add
add
addl
add
add
popl
pushf
imul
add
pop
push
cltd
rolb
pop
mov
in
clc
pop
pushl
push
push
call
push
add
mov
mov
imul
incb
mov
pop
mov
add
int3
fistps
lea
loopne
imull
pop
jp
testl
jmp
push
mov
add
add
push
jp
add
bound
xchg
cltd
mov
in
clc
lcall
pop
and
add
shrb
pop
into
or
ret
push
or
not
add
shl
sub
sub
pop
lea
sub
inc
rol
pop
push
sub
shl
not
pop
pushl
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
mov
mov
lahf
cwtl
push
cltd
add
xchg
mov
cltd
mov
shr
add
add
mov
fiadds
add
mov
arpl
add
lret
add
fildl
shrb
xor
mov
shl
push
sub
add
ror
sub
shr
sub
xor
xor
pop
ror
dec
pop
push
shl
add
add
pop
pushl
push
pop
call
lea
push
inc
sub
pop
push
push
ror
pop
call
push
push
add
ror
push
xor
add
add
lea
lea
sub
sub
pop
add
pop
push
push
push
lea
push
push
lea
push
push
call
fdivs
mov
add
add
jecxz
add
pop
jns
add
jbe
add
add
stc
add
mov
add
data16
stc
xchg
add
in
bound
popa
cmpsl
mov
add
add
add
add
sti
imul
push
mov
lret
in
pushl
push
lea
push
call
add
sbbl
sarb
pushf
fists
add
imul
add
js
fcoml
add
add
ret
mov
out
jnp
add
mov
addb
add
add
sub
pop
call
push
pop
call
push
push
push
or
inc
add
inc
shl
xor
dec
sub
shl
not
inc
pop
lea
ror
dec
dec
pop
push
rol
inc
ror
pop
pushl
push
push
push
push
lea
push
push
push
call
pop
add
xchg
mov
testl
int
push
add
insb
add
add
push
add
je
xchg
add
enter
add
add
mulb
call
push
sub
sub
add
pop
call
push
push
dec
push
push
pop
add
not
sub
pop
sub
sub
pop
push
rol
rol
lea
rol
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
call
imul
xchg
add
add
jl
add
cmc
test
ret
add
add
add
fdivs
add
iret
push
add
mov
leave
add
add
push
mov
pushf
jno
lret
loop
in
loopne
call
push
xor
xor
pop
lea
push
push
sub
sub
add
push
sub
add
xor
sub
dec
pop
shr
pop
push
push
push
lea
push
lea
push
call
add
add
add
icebp
mov
jp
add
xchg
mov
push
mov
add
ja
mov
sbbl
lock
pop
add
cmpsb
add
push
sti
add
xchg
add
js
add
clc
sub
pop
pushl
call
push
push
push
push
push
push
push
push
call
add
add
mov
mov
xchg
addb
xchg
adc
add
add
in
add
add
add
jnp
add
lock
xchg
addb
aad
mov
incb
sub
pop
push
call
push
push
inc
ror
push
push
pop
add
not
sub
ror
not
pop
rol
dec
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
add
xchg
cli
rolb
out
ja
cld
iret
movsb
nop
fisttpll
ret
pop
int
add
lods
add
jo
ljmp
movb
push
mov
push
add
mov
jb
jl
add
mov
out
add
add
mov
test
addb
add
lcall
jne
call
push
pop
call
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
xchg
testb
les
jp
add
push
mov
pop
outsl
push
out
push
add
add
jb
popf
add
leave
into
sub
pop
mov
push
push
lea
push
sub
add
rol
sub
sub
inc
inc
pop
shr
add
pop
push
push
push
lea
push
call
cwtl
pop
pushf
test
xchg
lcall
outsl
xchg
loop
jno
movsb
add
mov
add
data16
lret
mov
xchg
add
fildl
add
popa
sub
pop
pushl
call
push
lea
push
push
push
lea
push
call
xchg
jmp
jne
add
cmp
enter
movsb
lret
lcall
add
push
xchg
mov
not
outsl
add
fbstp
mov
add
xchg
movsl
outsl
jnp
push
or
add
add
lahf
add
addr16
pop
push
push
sub
not
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
popf
stc
add
ja
xchg
mov
rcll
add
fildll
add
mov
add
mov
add
mov
out
add
stos
xchg
add
lcall
shrb
addl
push
pop
add
xor
sub
xor
dec
shr
lea
pop
shr
shl
inc
dec
pop
push
push
push
push
push
push
call
add
jmp
add
fiadds
test
add
mov
clc
add
cld
jp
mov
jle
push
add
jnp
add
jne
call
push
push
dec
sub
push
and
add
inc
sub
shl
pop
sub
sub
sub
pop
push
push
rol
push
or
not
add
dec
sub
inc
rol
pop
add
rol
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
bound
xlat
into
arpl
add
iret
or
add
xchg
add
lcall
shrb
xchg
outsl
mov
clc
push
push
pop
add
dec
xor
add
dec
sub
add
rol
pop
lea
pop
push
lea
add
xor
not
pop
pushl
push
add
xor
pop
call
mov
push
push
lea
push
push
lea
push
push
push
lea
push
call
arpl
xlat
add
pop
add
xlat
add
cwtl
enter
jb
add
movb
je
mov
mov
add
arpl
add
loopew
add
mov
mov
loope
imul
gs
push
mov
add
add
mov
shll
lcall
pushf
and
call
loope
shr
pop
lea
push
rol
pop
push
push
add
xor
not
pop
push
push
push
sub
xor
ror
not
pop
push
push
lea
shr
pop
push
push
push
push
push
lea
push
push
push
push
push
call
ljmp
add
xchg
icebp
leave
in
jle
add
add
add
add
pop
aam
test
mov
jbe
add
jbe
mov
push
int3
bound
je
add
lcall
add
push
push
push
push
lea
push
call
jecxz
jle
add
outsl
in
neg
mov
out
add
add
leave
hlt
in
addl
jbe
add
add
add
add
add
mov
out
movsl
add
popa
add
lahf
push
movb
pop
push
push
inc
pop
pushl
push
push
push
call
add
cmpsl
push
mov
outsl
jnp
add
repnz
clc
add
arpl
rcll
fisubrl
add
fimull
add
push
ja
in
clc
lcall
push
hlt
push
push
ror
rol
shl
add
push
sub
add
inc
sub
shr
rol
pop
sub
rol
sub
pop
push
lea
lea
pop
pushl
push
sub
lea
dec
pop
call
push
add
add
ror
shl
pop
call
mov
push
not
shl
dec
pop
pop
push
lea
push
push
call
jne
add
add
xchg
int3
add
gs
pusha
js
pop
add
mov
flds
shr
pop
jno
add
mov
mov
add
lcall
mov
sti
xchg
jno
sub
pop
dec
jne
push
inc
add
pop
jmp
push
sub
ror
add
rol
pop
call
push
push
sub
not
push
or
inc
add
not
sub
sub
dec
sub
dec
sub
pop
dec
rol
pop
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
jge
push
jnp
jmp
loope
xchg
scas
add
add
push
add
xchg
add
pop
xchg
aam
out
mov
test
mov
jb
enter
frstor
xchg
sub
pop
pushl
call
push
push
push
lea
push
call
add
mov
hlt
add
add
lret
add
lret
pop
xchg
loope
add
xchg
mov
mov
add
out
mov
add
nop
lret
imul
add
jno
pop
addr16
add
push
add
add
add
lret
lods
add
add
add
lcall
call
loop
call
mov
push
lea
push
call
mov
add
into
mov
add
add
add
xchg
add
mov
ljmp
mov
jl
shrl
add
add
stc
testb
add
in
clc
pop
lea
push
push
shl
xor
rol
push
sub
add
shr
sub
not
ror
pop
pop
push
lea
push
push
lea
push
push
push
push
call
add
andb
add
jp
jp
mov
push
xchg
mov
add
out
xchg
in
jo
add
add
pop
jnp
add
add
add
add
lcall
jne
push
push
push
call
xchg
add
stos
pop
jl
add
roll
lods
add
loope
add
in
test
out
pusha
jo
add
add
push
add
leave
sarb
add
cmc
in
call
shll
into
xchg
add
add
call
push
shl
shl
pop
push
call
push
push
xor
add
push
sub
add
sub
shl
sub
add
add
sub
pop
add
sub
pop
push
dec
not
not
pop
pushl
call
push
push
call
xchg
test
repnz
jne
mov
add
add
xchg
mov
sti
add
mov
add
loope
add
fwait
push
jnp
in
clc
pop
call
push
push
push
lea
push
push
push
push
call
xchg
std
add
int
add
add
out
xchg
push
roll
add
push
add
add
add
test
ljmp
push
data16
sub
pop
mov
push
push
push
push
push
call
xchg
pop
push
xlat
add
insb
mov
add
xlat
add
aam
add
add
jo
jae
mov
adcl
add
in
int3
add
leave
jne
call
cmpl
in
pop
lea
push
push
add
add
sub
push
push
pop
add
not
add
sub
ror
lea
pop
lea
ror
rol
pop
push
inc
xor
pop
pushl
push
sub
pop
call
push
not
rol
pop
lea
push
push
shr
pop
push
push
shl
not
pop
push
pushl
push
push
sub
inc
push
xor
add
sub
shl
sub
sub
sub
shr
pop
dec
dec
add
pop
push
push
push
lea
push
push
push
push
call
jge
loop
add
out
add
add
shlb
add
shlb
add
mov
mov
stos
rolb
mov
rorl
add
mov
aad
push
ja
arpl
lcall
lock
into
nop
add
cli
add
popf
jns
add
add
add
rolb
lcall
push
shl
ror
ror
pop
call
push
push
rol
add
shr
push
or
inc
add
shl
sub
inc
sub
pop
sub
pop
push
ror
not
pop
pushl
call
push
add
xor
pop
push
push
lea
add
pop
call
push
push
sub
push
sub
add
add
sub
ror
sub
lea
pop
rol
not
xor
pop
push
push
push
push
push
push
call
pop
stos
add
cli
loop
add
addb
sbb
mov
add
push
icebp
mov
fadds
add
hlt
stc
add
xchg
push
add
shlb
add
add
add
arpl
jmp
aad
movsb
cmpsl
add
add
jne
int3
add
cltd
lods
loopne
sub
pop
pushl
push
xor
pop
call
call
push
sub
lea
not
shl
pop
jmp
pushl
push
dec
pop
mov
jmp
push
push
add
push
sub
add
add
shl
ror
sub
dec
add
pop
dec
pop
push
lea
push
push
call
clc
stos
push
add
add
mov
add
add
int
clc
add
push
add
enter
xchg
out
gs
add
out
popl
add
jne
lcall
lahf
add
add
add
movsl
add
rcll
lcall
jne
call
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
lcall
add
add
lock
jb
add
add
jle
stos
andb
add
add
mov
add
xchg
add
mov
in
fdivr
lcall
add
push
push
push
push
push
push
lea
push
call
push
stos
nop
add
pusha
jnp
lahf
add
mov
aam
add
add
fbld
add
add
repnz
add
jne
test
pusha
mov
test
add
add
in
add
fcompl
shrb
iret
rcl
push
inc
add
ror
sub
push
or
inc
add
sub
dec
add
pop
inc
sub
add
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
addb
xor
add
lret
cmpsb
pusha
add
add
push
add
sti
fimull
add
add
js
aad
in
fcompl
jne
call
push
lea
push
call
loopne
add
ljmp
push
divb
push
add
add
fs
sahf
mov
imul
in
clc
lcall
push
shr
sub
sub
add
pop
call
leave
push
push
push
push
lea
push
push
lea
push
push
push
push
call
jo
call
movsl
pusha
add
pusha
cmc
add
add
movsl
cmpb
cli
add
add
mov
add
lret
mov
add
add
jp
cld
lret
fdiv
cli
add
into
addb
lcall
les
ror
pop
pop
push
push
call
jecxz
add
push
pop
int
imul
fwait
hlt
pop
andb
add
push
xchg
push
add
pop
add
icebp
push
shr
test
cwtl
ror
test
add
pushf
ret
std
add
jne
mov
add
sub
pop
pop
pop
push
rol
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
jecxz
add
subl
mov
push
loope
lock
scas
add
jns
lret
cwtl
fsubs
insb
sub
pop
leave
add
push
push
push
push
push
lea
push
call
repnz
mov
add
add
add
add
pop
loope
lcall
enter
cwtl
add
ret
add
addb
add
add
add
iret
add
add
add
pop
add
sub
pop
ret
push
push
lea
push
push
call
jb
scas
add
nop
add
add
add
je
add
popf
xchg
lahf
add
pushf
in
pop
mov
add
add
lcall
push
rol
xor
dec
pop
ret
push
push
push
lea
push
lea
push
push
call
icebp
mov
push
cmpsl
imul
add
add
jns
add
roll
push
push
fmuls
imul
stos
fstps
add
popf
pop
jne
xchg
sti
push
test
add
add
add
add
mov
push
xchg
cli
sub
pop
push
push
push
call
add
add
jmp
add
enter
jmp
into
rolb
add
ret
bound
xchg
rcrl
sarl
popf
lock
add
je
add
push
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
push
cltd
cwtl
ret
fwait
mov
cmpsl
clc
add
std
add
add
int3
movsb
lods
popf
loop
add
push
mov
mov
out
cmpsb
add
mov
add
add
add
jmp
push
fwait
add
add
leave
add
add
xchg
je
aam
push
push
in
add
add
add
lcall
jge
add
test
add
push
add
dec
pop
mov
jmp
push
rol
lea
lea
pop
mov
push
pop
and
push
push
call
add
pop
add
add
add
loope
xchg
les
outsl
add
jecxz
ja
jnp
mov
add
pop
out
add
pop
add
xor
push
pop
xor
push
add
dec
add
add
pop
add
push
push
push
push
push
call
add
jl
mov
add
outsl
shlb
mov
in
push
bound
popl
add
cmpb
add
add
jae
jno
push
xlat
add
test
mov
int3
jmp
mov
mov
gs
sub
pop
xor
dec
push
push
push
lea
push
push
lea
push
push
push
call
jns
fwait
add
imul
pop
lea
rcrb
pop
mov
mov
leave
mov
mov
lea
mov
add
ret
loop
mov
fsub
push
add
add
out
jae
mov
roll
mov
cltd
xchg
mov
sub
push
dec
pop
jmp
push
dec
rol
pop
sub
push
lea
lea
xor
pop
pushl
pop
push
push
lea
push
push
call
lahf
rolb
pop
add
add
icebp
in
add
pusha
jecxz
add
cltd
pop
mov
add
add
js
xchg
rcrl
loopne
scas
add
add
add
rorb
pop
mov
sub
pop
sub
push
dec
rol
pop
cmp
jne
push
add
pop
mov
push
sub
pop
lea
sub
push
lea
push
push
call
add
add
ja
add
add
add
add
sarb
movsb
add
leave
mov
or
fnsave
iret
mov
push
call
add
mov
add
add
add
xchg
add
mov
fisubrs
add
hlt
add
push
fdivs
add
xchg
stos
cmpsl
add
jge
xchg
add
add
add
pop
mov
in
fwait
sub
pop
shr
push
shl
inc
pop
add
push
lea
push
push
push
call
add
push
add
cld
add
scas
add
lods
mov
add
add
jmp
mov
adcl
popa
add
add
lock
add
iret
add
add
add
mov
out
add
scas
add
int
add
cli
add
mov
add
jnp
add
icebp
sub
pop
sub
push
lea
push
push
lea
push
call
std
add
shrl
clc
out
fldt
mov
add
testb
add
stos
add
add
mov
add
add
add
xchg
add
fnstsw
pushf
push
repnz
js
push
push
pop
cltd
add
push
add
xchg
add
addr16
pop
pushl
push
push
push
lea
push
lea
push
call
out
push
mov
add
add
ret
push
pop
add
cltd
xchg
add
add
mov
out
enter
add
push
sub
pop
pop
shr
push
push
push
push
push
push
lea
push
call
add
out
add
gs
add
xchg
bound
enter
jae
add
loopne
mov
pop
mov
test
mov
ja
js
add
sub
pop
and
push
ror
lea
pop
sub
cmp
jne
push
xor
pop
leave
ret
push
push
push
push
push
push
lea
push
lea
push
push
push
call
leave
add
push
jne
add
add
add
add
popf
popf
mov
scas
add
mov
mov
add
jae
mov
mov
arpl
in
push
add
aad
push
and
add
mov
pop
add
xchg
add
lcall
mov
push
ror
pop
add
push
add
add
not
dec
pop
push
push
push
push
call
push
mov
mov
pushf
add
add
jmp
add
testl
add
mov
shll
call
add
add
imul
mov
scas
add
push
hlt
shlb
lds
cltd
rcrb
add
hlt
add
filds
fmul
jae
lds
add
lcall
push
lea
push
call
add
mov
xchg
add
add
push
movsl
jbe
add
addr16
fiaddl
add
mov
test
into
jl
shll
add
add
add
loopne
add
jp
jno
cmpsb
andb
push
push
shr
dec
pop
push
push
rol
add
shl
pop
push
push
ror
add
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
rcl
add
aad
int3
negb
add
cmpsb
out
add
add
into
mov
add
xchg
arpl
lcall
push
cmp
ljmp
adc
dec
fistl
pop
sub
and
loopne
sbb
push
lea
push
lea
push
push
push
call
movsl
add
out
movsb
jge
add
shl
out
add
mov
add
lahf
add
roll
add
xchg
pop
add
add
add
add
mov
pop
add
add
mov
xlat
loop
jge
faddl
push
push
gs
pop
shr
add
push
ror
add
shl
pop
mov
push
rol
pop
add
push
not
lea
pop
mov
push
dec
add
shl
pop
add
push
push
push
lea
push
push
lea
push
call
add
add
add
add
add
fnstsw
test
jb
add
add
int
fidivl
mov
out
sahf
int
mov
leave
pop
jp
faddl
add
sahf
mov
imul
add
in
add
jno
nop
lea
sub
pop
xor
mov
push
sub
pop
and
rol
push
lea
not
ror
pop
rol
xor
push
rol
sub
add
xor
pop
inc
cmpb
jne
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
jo
mov
add
add
stos
pop
scas
add
pop
insb
out
add
add
lea
mov
add
add
out
jb
add
out
pushf
lea
push
clc
add
shr
fstl
jl
add
add
mov
pop
add
cmp
je
push
push
push
call
fadd
mov
test
stos
lahf
jecxz
add
pop
jle
enter
jl
pushf
jl
add
add
add
add
mov
add
push
add
add
movsb
hlt
fiaddl
lahf
add
stos
lods
sub
pop
add
cmpl
jne
push
push
lea
push
push
push
push
lea
push
push
push
push
call
addr16
add
iret
xchg
roll
jp
cltd
mov
mov
add
add
add
lods
xlat
mov
add
jle
pop
lds
add
mov
data16
add
je
xchg
stc
in
sahf
pop
add
in
fcomps
rclb
push
push
push
call
add
stos
fcomi
add
pusha
add
ljmp
mov
cld
pop
addb
jp
out
add
mov
add
movsb
mov
add
into
jmp
mov
fistps
in
in
lcall
pop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
icebp
clc
add
scas
jne
add
push
push
mov
lret
mov
mov
fwait
addb
movsl
std
add
add
add
in
add
lcall
push
add
inc
sub
pop
pop
push
lea
push
lea
push
call
jbe
cmpsl
add
out
shr
mov
int3
jb
add
add
arpl
rorb
jae
leave
addr16
jne
jns
add
push
push
push
lea
push
push
push
call
add
xlat
add
enter
bound
imul
lods
jo
out
add
je
les
test
int
add
jmp
add
not
add
jge
in
call
leave
push
push
push
push
push
push
call
mov
pop
stos
nop
push
js
in
add
lods
add
add
in
ror
insb
xchg
add
or
add
leave
loope
add
lcall
or
mov
push
sub
shr
rol
pop
add
push
add
ror
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
cmpl
add
flds
nop
mov
cmpsl
ret
pusha
add
pop
add
fadd
fildll
mov
enter
add
int3
mov
mov
mov
mov
ret
dec
add
add
add
leave
jns
mov
rorl
stos
add
pop
push
push
push
push
call
add
jno
add
jnp
add
cli
add
add
add
pop
test
add
add
loop
out
pop
add
mov
iret
test
push
add
negl
push
push
int3
jbe
add
push
xchg
xchg
add
nop
add
lods
push
test
fwait
lahf
add
push
mov
aam
pop
negl
add
add
add
push
push
lea
push
push
push
push
push
call
fistl
add
add
test
add
add
add
add
jmp
add
add
jl
add
mov
stc
add
sub
pop
mov
testw
push
push
call
mov
add
xchg
mov
outsl
pop
out
sahf
lret
lret
mov
jb
add
scas
add
add
add
sahf
add
fistps
arpl
mov
add
add
jge
xchg
sub
pop
pop
push
add
rol
pop
pop
push
ror
shl
inc
pop
mov
push
push
pop
call
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
sti
push
mov
pop
add
int3
fiaddl
mov
aad
cmpsl
enter
cltd
add
add
add
clc
std
addr16
lcall
xlat
add
add
out
adcb
arpl
mov
je
js
popa
test
push
add
les
movsb
cltd
add
pop
movl
inc
sbb
push
lea
push
push
push
push
push
push
call
jmp
sti
out
add
add
add
add
les
sub
add
mov
xchg
add
lock
xlat
imul
add
jo
add
fs
jmp
iret
js
push
sbbb
in
fdivr
lcall
push
inc
xor
pop
pop
pop
push
dec
inc
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
popf
mov
add
mov
mov
add
out
mov
icebp
cli
div
xchg
add
add
shll
movsl
add
stc
add
mov
add
lcall
add
insb
push
loopne
lcall
ret
push
push
push
call
add
add
pusha
orb
mov
nop
mull
mov
add
ja
add
add
in
mov
mov
jo
add
lcall
mov
push
sub
add
shl
rol
pop
add
push
push
lea
push
call
mov
test
add
in
js
add
jmp
flds
mov
test
cmc
in
lods
add
add
in
hlt
pop
push
push
lea
rol
not
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
sarb
add
fnstcw
mov
jl
mov
add
nop
lods
add
arpl
popa
popa
add
rclb
pop
add
jnp
add
sub
pop
push
push
not
rol
ror
pop
push
push
push
lea
push
call
add
sti
add
add
out
imul
xchg
imul
pop
pop
fwait
mov
add
test
add
add
mov
add
mov
test
out
insb
add
add
xlat
add
jp
jne
xchg
jno
fsubr
roll
add
pop
mov
push
push
push
lea
push
push
push
call
cmc
lcall
add
divb
add
add
aad
xchg
add
lahf
push
add
cmpsb
add
data16
imul
mov
add
add
add
mov
aad
add
add
add
andl
add
addb
push
push
push
push
push
push
push
push
push
call
add
shlb
outsl
int3
movsl
imul
add
mov
mov
add
jle
add
add
pop
add
add
scas
movsb
cwtl
in
lcall
add
in
jno
mov
scas
jno
sub
pop
pop
push
push
push
lea
push
call
mov
mov
mov
into
jns
scas
mov
add
repnz
jp
add
add
cld
sub
pop
lea
push
add
pop
sub
push
lea
push
push
push
push
lea
push
call
scas
shlb
mov
jmp
add
add
clc
cwtl
add
add
scas
lock
jae
jno
jae
add
xchg
push
mov
sub
pop
mov
push
dec
pop
shr
push
sub
pop
add
push
push
call
bound
fcoms
jo
aam
aad
test
add
lcall
add
add
imul
add
sub
pop
mov
push
lea
push
lea
push
push
call
add
mov
rcl
xchg
add
add
cmpsl
mov
add
lods
mov
cltd
add
add
add
add
test
xchg
push
mov
nop
jo
jge
pop
push
add
insb
mov
lcall
fsts
pusha
push
push
push
push
push
lea
push
push
call
add
mov
mov
add
scas
xchg
fldt
add
add
add
iret
stos
push
add
add
addl
orb
pop
jle
aad
push
mov
mov
add
lcall
jae
push
push
lea
push
push
call
loopne
mov
add
xchg
in
lods
push
subb
add
add
pop
add
fldl
mov
mov
add
mov
xchg
stos
pop
mov
add
add
fcmovnb
shlb
pop
jl
add
push
popl
push
add
sub
pop
mov
add
push
push
push
push
lea
push
push
lea
push
call
ja
add
adc
add
aam
jmp
add
add
add
mov
add
add
add
sub
pop
xor
push
push
push
push
push
push
push
push
call
xchg
roll
movb
add
add
add
add
aam
mov
test
pop
jp
add
add
add
in
js
aad
add
mov
icebp
mov
add
addl
into
clc
add
mov
testl
add
xchg
add
add
lcall
adc
push
push
push
push
push
push
call
cld
sahf
ficoml
movb
fs
add
rcr
add
jae
out
fists
jbe
mov
add
lcall
adc
das
call
jne
add
add
imul
mov
add
mov
add
lods
cwtl
mov
stos
fcmovb
add
mov
jns
out
add
add
in
clc
pop
add
xor
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
pusha
rolb
add
mov
call
add
push
test
add
int
mov
popa
out
imul
add
add
cli
add
xchg
test
js
scas
jbe
add
cli
enter
sub
pop
rol
nop
push
dec
lea
shl
rol
pop
nop
push
rol
pop
xor
nop
push
push
push
call
jle
mov
jl
add
fstp
loopne
in
shl
bound
add
push
add
pop
nop
xchg
std
imul
into
mov
add
hlt
lcall
push
add
pop
inc
nop
push
lea
sub
pop
nop
cmpb
jne
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
mov
popa
jno
mov
add
pop
mov
pop
add
jae
fucomp
add
add
add
fadds
add
add
add
popl
add
mov
add
pop
data16
fcomps
inc
pop
ss
push
lea
push
push
push
lea
push
push
call
add
leave
gs
push
jb
cmpsl
add
add
add
testb
add
cltd
add
cld
ret
add
fstpt
loope
mov
in
mov
xchg
fnstenv
xlat
add
std
orl
push
sub
pop
nop
push
inc
add
pop
nop
push
lea
push
push
lea
push
push
call
xchg
xorb
add
add
jnp
jnp
shrl
add
fwait
add
jp
aam
add
add
cltd
aam
pop
mov
add
add
mov
add
push
lea
popa
add
xchg
fucomp
mov
rcrb
ja
add
in
loop
in
in
pop
cmp
je
nop
push
sub
pop
nop
push
shl
pop
inc
nop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
sti
add
ljmp
add
add
add
scas
insb
ret
cmpsb
scas
add
push
pop
xlat
mov
add
add
add
add
pusha
add
sahf
fwait
add
ljmp
add
out
ret
lea
jns
sub
pop
nop
cmp
jb
push
lea
push
push
call
add
add
into
add
in
in
sti
sti
add
clc
add
outsl
add
jle
lret
add
test
aad
add
lods
mov
cwtl
call
add
add
ret
add
push
add
push
add
lcall
rclb
add
rorb
out
pop
jmp
push
push
push
push
push
push
push
call
push
add
add
mov
fildl
jle
mov
test
push
roll
add
xchg
add
cwtl
xchg
add
js
add
fldl
add
ret
add
test
mov
test
rorl
add
add
lahf
add
lcall
push
and
rol
add
pop
add
push
ror
inc
sub
pop
movzwl
mov
push
push
call
add
pop
push
fsubs
mov
pop
shlw
add
xchg
rolb
xchg
add
jnp
add
ljmp
ja
add
mov
add
into
add
add
add
sahf
add
push
data16
data16
add
rcll
lea
push
push
push
push
push
push
push
push
call
out
add
mov
call
xchg
fldenv
mov
jbe
mov
mov
pop
sub
pop
mov
push
push
push
push
call
filds
jbe
pop
je
pop
lods
push
ja
test
test
sti
mov
add
mov
lret
add
rolb
into
test
jmp
pop
ljmp
fsubr
filds
add
mov
lcall
lcall
leave
push
lea
push
lea
push
call
lods
sti
std
xchg
movsb
aam
cmpsl
add
add
add
cmpb
add
incb
lcall
add
xchg
add
sarb
stc
nop
fistpl
in
add
popa
add
sti
add
in
stos
gs
pop
xor
shl
push
not
add
pop
xor
push
shr
add
pop
shl
push
lea
push
push
call
add
mov
js
leave
in
xchg
mov
add
jbe
add
mov
out
add
add
add
jns
imul
fcompl
in
mov
add
mov
mov
add
gs
int
pop
add
mov
add
add
lret
xchg
rcrb
loopne
add
sub
pop
xor
push
lea
push
call
cld
add
addr16
aad
add
movsb
cld
pop
scas
push
in
flds
add
mov
lods
add
add
mov
push
add
jbe
add
add
add
add
pop
aad
nop
jl
add
shrl
ja
call
data16
jge
roll
sbbl
sub
pop
shl
xor
push
push
push
push
lea
push
push
call
mov
xorb
xchg
add
jno
out
mov
pop
popa
aad
pop
mov
ljmp
lds
add
js
sub
pop
mov
push
add
not
rol
pop
add
push
push
push
push
push
push
push
push
call
add
add
add
push
push
std
add
bound
andb
ja
add
add
add
add
adcb
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
push
call
js
movsl
add
mov
out
add
xlat
fidivrl
fiaddl
add
add
add
nop
add
push
add
sub
pop
pop
pop
push
push
push
call
mov
in
add
add
les
add
mov
add
add
add
icebp
add
nop
push
add
mov
in
jnp
add
sahf
pop
push
int3
lcall
in
hlt
lcall
leave
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
insb
add
xchg
popl
add
push
fdivl
lcall
test
movsl
add
add
pop
gs
add
loop
add
fdivl
lcall
or
push
push
add
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
les
shll
insb
pop
fcompl
add
out
jb
add
pop
pop
add
xchg
cld
add
lods
jnp
lods
add
into
repnz
jle
iret
pop
add
push
mov
scas
addb
add
clc
add
push
push
push
push
call
add
into
sti
lcall
push
fildl
popa
test
xchg
lret
mul
je
add
add
fwait
jae
mov
addb
add
add
test
push
jp
jo
add
nop
xchg
add
jmp
subl
clc
add
add
stos
roll
push
sub
rol
not
pop
mov
push
lea
add
add
inc
pop
mov
push
xor
ror
rol
inc
pop
mov
push
sub
pop
test
je
mov
push
sub
add
pop
test
je
mov
push
push
call
cmp
add
add
add
add
addl
add
cli
add
fdivl
fldt
mov
jnp
incb
jmp
sub
pop
mov
push
sub
pop
mov
push
sub
sub
add
pop
inc
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
je
cwtl
lahf
pop
add
pop
add
add
les
add
stos
add
add
add
jnp
add
lcall
xchg
cmc
mov
add
add
repnz
pop
cmp
je
test
je
push
push
lea
push
push
lea
push
call
add
mov
fs
xchg
add
add
lea
jo
add
andl
lods
repnz
jmp
jmp
add
mov
mov
add
add
ficompl
ja
add
cld
imul
add
push
inc
push
sub
dec
pop
cmp
je
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
jmp
add
aam
add
les
mov
pop
add
or
add
fsubrs
add
mov
testb
mov
lcall
rorb
test
call
shr
push
add
enter
pop
xor
push
not
sub
pop
pop
pop
push
ror
not
inc
pop
pop
push
push
push
push
lea
push
push
call
out
add
push
addb
incb
add
mov
out
mov
lods
testb
add
mov
out
cwtl
test
xchg
add
add
popf
hlt
add
add
jmp
add
add
mov
sub
pop
pop
push
push
push
push
call
in
jp
add
iret
pop
add
lret
add
add
mov
add
addr16
add
add
sub
pop
leave
ret
push
add
not
ror
pop
mov
push
push
push
lea
push
push
push
lea
push
call
add
cwtl
add
add
add
add
imul
add
fcom
add
std
filds
jae
lods
pop
mov
mov
lcall
cmp
jne
push
lea
push
push
push
call
cld
add
cld
add
fcomip
add
push
add
add
mov
int
mov
jb
add
add
in
push
loopne
add
nop
aam
add
bound
shrb
jmp
push
add
xchg
fiadds
jle
push
push
lea
push
push
call
out
hlt
addb
out
filds
call
fisubrl
sti
out
add
add
add
out
movsl
mov
cltd
add
add
add
addr16
add
cwtl
add
add
subl
scas
add
add
in
ljmp
jl
je
add
sub
pop
mov
test
je
push
not
sub
pop
mov
push
lea
sub
shr
sub
pop
add
cmp
jne
push
dec
dec
pop
mov
test
je
push
push
push
call
add
cmpl
add
aam
cmc
call
cld
movsb
out
add
fistl
lret
shr
push
loop
add
add
add
ljmp
lcall
callw
inc
ret
add
pop
add
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
repnz
add
nop
test
pop
add
add
add
add
add
iret
stos
add
xchg
mov
jle
add
pop
add
mov
test
mov
add
add
add
lcall
insb
add
add
icebp
shr
scas
mov
cli
pop
cmpsb
jb
in
fcomps
loopne
test
call
loope
not
pop
jmp
push
pop
xor
push
push
call
mul
fisubrl
mov
popf
add
add
leave
jle
pop
icebp
popf
sarl
push
add
lods
mov
mov
insb
add
push
add
mov
rolb
in
lea
add
add
lcall
pop
push
ror
rol
dec
not
pop
pop
pop
push
add
pop
leave
push
push
push
push
push
push
lea
push
push
call
mov
cwtl
add
fcompl
ret
add
jmp
imul
add
clc
push
in
loopne
ret
push
inc
add
pop
lea
push
dec
shr
pop
pop
push
rol
ror
pop
pop
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
stc
add
add
mov
pop
pop
mov
add
ljmp
add
imul
nop
add
push
add
add
cmc
cmpsb
add
sub
pop
pop
leave
push
shl
sub
pop
ret
push
rol
pop
mov
pop
push
push
lea
push
push
call
add
mov
pop
add
clc
nop
xchg
add
leave
fs
mov
add
mov
add
icebp
roll
lea
cld
cwtl
sub
pop
pop
push
push
push
push
call
add
add
testb
pushf
add
scas
xchg
stos
add
add
jnp
add
mov
les
cli
frstor
add
test
clc
add
add
jne
add
sub
pop
pop
pop
push
push
push
lea
push
call
add
mov
imul
add
addb
add
add
roll
pop
cmc
jo
insb
add
jno
jp
hlt
add
into
add
add
xchg
in
add
lods
loop
add
add
add
pop
mov
add
mov
push
add
pop
les
add
pop
fmull
add
sub
pop
leave
push
lea
add
pop
ret
xor
cmp
jnp
cmp
xor
adc
and
adc
cmp
popl
cmp
fcomi
cmp
xor
adc
jb
adc
mov
add
mov
cmp
fwait
lock
dec
ret
add
incl
or
loopne
dec
rcrl
jb,pn
and
xchg
lahf
jle
inc
jae
in
pusha
int
dec
hlt
xor
jle
mov
testb
enter
fcmove
jae
dec
push
adc
mov
jbe
cmp
lock
add
pop
lret
sub
lods
pop
std
push
pop
cmp
je
test
sub
enter
mov
jae
jnp
daa
inc
test
mov
cmp
mov
loop
jg
cmc
dec
inc
inc
inc
push
push
push
sarb
in
clc
cmc
fcoml
js
daa
or
js
mov
pop
dec
data16
xor
call
dec
nop
fidivl
movsb
test
dec
jne
addl
mov
or
je
lea
and
dec
push
cs
inc
jbe
aad
pop
xor
add
fcmovu
adc
xchg
sub
mov
adc
push
and
xchg
iret
das
jp
mov
jecxz
jge
inc
or
test
and
lock
jae
fistpl
in
rcrb
jo
int3
mov
repnz
inc
xchg
xchg
lods
inc
pusha
cli
int3
sahf
inc
mov
mov
xchg
pop
sbb
mov
sarl
in
scas
enter
pop
mov
mov
rorb
js
or
push
pop
mov
jb
pushf
mov
mov
xchg
or
and
int
pop
aam
shlb
lds
pop
sti
test
les
and
jecxz
xchg
aam
mov
pop
roll
outsl
sub
mov
out
and
xchg
lret
sbbl
ja
rcl
inc
mov
in
dec
sbb
sub
push
int
fdivrs
cmp
mov
fistpl
mov
daa
ds
pushf
push
dec
and
aam
xchg
bound
pusha
mov
add
stos
push
jg
adc
mov
mov
mov
mulb
sub
incl
add
and
cmp
adc
nop
push
jp
jge
int3
mov
mov
mov
lods
testl
push
lret
push
lods
test
jne
mul
pop
leave
aas
loop
or
mov
lcall
gs
pop
xchg
cmc
jp
adc
cmp
xchg
mov
pop
push
movntq
int3
hlt
xchg
cli
cmp
push
int3
mov
or
pop
testb
and
mov
pop
dec
rclb
or
repz
add
das
imul
pop
pop
or
pop
repnz
fwait
mov
outsl
adc
xchg
repnz
popa
cmp
scas
cwtl
mov
out
cld
movsb
pusha
daa
xchg
add
mov
inc
sbb
mov
mov
sbb
xor
in
jp
fidivrs
addr16
idiv
in
dec
mov
push
insl
out
vunpcklps
mov
shl
jns
out
inc
xor
mov
or
shll
mov
adc
dec
testl
lcall
fs
aad
sbb
inc
leave
loope
arpl
xlat
inc
push
das
icebp
repnz
push
imul
mov
mov
cmpsl
push
cld
neg
popf
pop
pop
pop
jle
pop
jp
xor
adc
pop
mov
cmc
push
ja
into
sbb
in
bound
push
adc
xlat
daa
inc
push
shlb
lea
jecxz
push
mov
jo
pop
arpl
and
mov
mov
aam
dec
bound
sbb
mov
or
xor
jl
out
sub
dec
inc
pusha
mov
mov
pop
mov
add
fstpl
pop
push
pop
push
or
mov
jle
jo
aaa
popa
mov
adc
sub
int
test
ds
ja
jge
mov
mov
cmp
loop
xor
ret
es
push
xchg
fcmovne
and
out
out
lods
add
dec
and
daa
in
ds
xor
fadd
pop
or
cltd
mov
push
int3
inc
test
xlat
mov
push
jnp
pop
icebp
cmp
mov
cmp
adc
outsb
repnz
mov
lods
push
jns
jb
js
cmp
inc
xor
fs
mov
jge
sub
push
cwtl
xchg
rcrl
iret
jbe
repnz
out
aam
lahf
fsubrs
popa
mov
jmp
or
loopne
fcomi
and
sbb
das
mov
push
jae
cld
stos
loope
daa
pop
xchg
and
dec
test
iret
cmp
es
xchg
les
pop
setno
xor
sarl
adc
or
xlat
jmp
inc
outsb
fwait
cmpsl
stc
xchg
jle
out
mov
out
cld
div
inc
lods
mov
ret
arpl
movsb
mov
flds
out
pop
sbb
orl
mov
pop
push
cmpsl
push
cmp
ss
mov
jae
xchg
pop
daa
xor
pop
scas
jno
push
repz
imul
add
push
pop
xchg
icebp
push
or
lds
xchg
fsubr
sbb
push
pop
out
es
std
add
jle
aam
sbb
lcall
mov
mov
data16
adc
mov
dec
lret
add
mov
jge
rcll
or
cmpsb
jne
pop
and
xor
stc
jns
cmp
mov
hlt
dec
inc
sbb
mov
fs
pop
or
cs
jg
xchg
mov
push
sub
adc
das
or
frstor
movsb
test
push
fstl
sub
out
aad
fsubs
out
mov
adc
mov
jg
xchg
test
str
iret
ret
ret
lcall
rcr
push
push
sbb
jmp
int3
xchg
lret
pop
repnz
dec
repz
je
repnz
or
push
daa
movsb
adc
pop
xor
mov
fucomp
xor
leave
das
push
cmpsl
push
movsb
decl
inc
popf
div
mov
cmp
fdivs
test
mov
push
ss
lcall
sbb
shl
jne
xchg
movhlps
cmpsb
push
xor
or
dec
pop
or
les
and
cmp
sbb
and
cwtl
push
jle
xchg
movsb
arpl
pop
sub
cmc
in
jecxz
pusha
pop
test
mov
push
xchg
cmpsb
xchg
je
dec
std
arpl
cli
sbb
ds
xchg
lret
inc
sti
jmp
cltd
dec
out
movb
subl
popa
fwait
mov
icebp
es
push
negl
lcall
js
test
add
sahf
aad
pushf
add
inc
inc
xchg
pusha
mov
stos
insl
push
add
fs
in
xchg
xchg
mov
mov
mov
insb
lret
mov
adc
xchg
inc
mov
mov
inc
jge
divb
pop
xorb
gs
mov
adc
ja
mov
jnp
xor
xchg
add
jecxz
mov
cmp
push
and
push
or
add
aad
daa
xchg
lret
fs
adc
daa
xchg
mov
mov
les
fcmove
arpl
fidivs
and
pushf
inc
popf
dec
lock
jnp
andb
and
xchg
mov
fwait
cld
push
addr16
xorb
sub
push
sbb
sub
inc
add
ret
push
push
jno
cld
adc
in
pusha
adc
xor
insl
xlat
out
add
ja
scas
icebp
dec
sbb
and
add
std
fcoml
decl
mov
mov
adc
add
jno
das
pop
sub
adc
mov
sub
add
ret
xchg
scas
flds
nop
mov
leave
push
jge
das
mov
adc
lea
jp
mov
push
lahf
and
push
stc
dec
jle
pop
aaa
pop
stc
loop
mov
xchg
sar
xor
cmc
pop
mov
mov
cmp
cltd
addr16
out
sbb
mov
in
in
lcall
or
xchg
push
mov
cmp
out
cltd
xchg
mov
out
xchg
jmp
cmp
nop
inc
popl
ljmp
daa
dec
cmp
jmp
push
fmuls
inc
jns
fidivrl
insb
roll
shrl
movsb
jecxz
pop
stos
leave
loop
ret
stos
test
ds
call
and
nop
pop
pop
and
jbe
das
ja
cmp
mov
mov
xor
sbb
mov
mov
jns
pop
not
mov
sbb
mov
dec
arpl
inc
adc
repnz
adc
hlt
pop
loopne
pop
mov
aaa
aas
or
push
aaa
jg
or
outsl
jno
cmp
xchg
jp
pop
cmp
dec
add
and
dec
cld
dec
mov
es
outsl
idivl
gs
int
pop
push
pop
into
lret
dec
aas
and
or
stc
andl
mov
mov
or
idivl
and
ret
rcrl
and
rorb
js
into
or
shrb
fbld
data16
add
push
fcomps
push
lcall
pop
adc
loopne
add
lds
mov
sbb
jmp
jl
mov
xchg
inc
cmpsl
jbe
shlb
xchg
mov
and
push
pop
lcall
dec
xchg
xchg
imul
sbb
pop
lods
push
add
repz
mov
sub
cmpsl
repz
aam
dec
pop
jne
mov
pop
and
push
idiv
xchg
dec
ret
scas
stos
int
mov
sti
pop
sub
into
lds
jl
sbb
adc
insl
mov
nop
movsb
sbb
stos
adc
inc
sbb
mov
or
adc
mov
sahf
mov
or
mov
jecxz
jne
push
xor
pop
sbb
inc
out
push
sub
xchg
mov
popf
mov
xchg
loop
repz
lret
push
jmp
or
cmpsl
mov
sbb
mov
xchg
sub
mov
in
push
in
inc
out
aaa
jno
movsb
jb
stos
pop
mov
jecxz
pop
mov
nop
mov
cmpsl
jo
cmovbe
jnp
jmp
decl
imul
and
or
insb
and
pop
dec
incb
inc
cltd
mov
push
in
lret
pop
and
loope
mov
in
or
adc
loope
stos
mov
or
adc
clc
pop
pop
mov
insl
cmpsb
inc
jmp
cmpsl
mov
aas
lock
xchg
mov
push
sub
pop
sbb
mov
inc
lahf
mov
je
adc
jne
add
mov
or
add
or
mov
clc
es
xchg
dec
jne
pop
dec
dec
out
dec
dec
insl
push
mov
lods
out
sbb
mov
hlt
jecxz
rcrl
mov
dec
fucom
inc
inc
adc
mov
lcall
imul
mov
push
push
fisttps
dec
xchg
call
dec
dec
repnz
loope
cmpsb
lret
sub
and
ficomps
stos
stos
adc
imul
or
jbe
dec
lret
int3
repz
sbb
inc
or
fistl
inc
fsubr
xlat
loop
and
arpl
cmp
inc
imul
mov
dec
add
cmpl
sub
mov
outsl
aaa
call
jmp
outsl
mov
ss
test
je
xor
xchg
into
aad
or
jl
mov
stc
sub
push
movsb
xchg
cmp
fwait
jnp
lret
int3
dec
mov
into
jne
add
imul
aas
sbb
push
int
adc
mov
mov
xor
cld
or
inc
inc
xor
loopne
add
mov
dec
or
outsl
stos
dec
fimull
cmp
pop
scas
lods
xchg
xchg
enter
clc
pop
jg
jne
mov
cltd
jg
mov
jmp
cmp
cmp
jmp
popw
push
iret
inc
inc
outsb
arpl
test
sub
mov
mov
leave
shll
popa
daa
shlb
das
push
and
loope
daa
pop
sub
mov
outsl
out
cmpl
iret
sub
sub
lds
fdivs
fstpt
test
cmpb
fs
add
pop
mov
notl
cmpsb
aas
push
cmp
mov
adcb
add
jecxz
and
pop
pop
mov
and
xchg
jg
dec
pop
dec
notl
aas
xor
cmp
push
push
jp
cmpsl
inc
xor
psllw
inc
inc
fimull
stos
sbb
dec
xchg
fisubs
int3
stos
cmp
lcall
add
ficompl
push
ja
sbb
sbb
dec
cltd
les
xchg
xor
popa
scas
cmpsb
fs
or
dec
sub
sub
mov
push
outsl
call
pop
loopne
outsl
lods
jne
test
push
fcmovb
xor
mov
sbb
lods
inc
jl
push
jne
cmp
rorb
adc
mov
cmp
sub
sbb
adc
adc
es
sahf
lahf
aam
stc
jmp
notb
test
insb
fadds
lahf
fiadds
sbb
add
pop
lret
mov
and
imul
pop
sbb
ds
sahf
or
loop
mov
lret
fstps
and
cmp
dec
cs
loop
cmp
js
fucom
lds
je
sub
sub
push
cltd
scas
mov
je
push
loope
add
std
inc
lcall
pop
repz
push
icebp
xor
les
leave
arpl
cltd
xchg
and
cmpsb
mov
repnz
mov
dec
push
push
stos
add
or
mov
les
mov
pop
in
adc
mov
xchg
push
cmp
sar
pop
sbb
add
insb
xchg
iret
fsubr
push
stc
dec
out
or
stos
dec
bound
mov
mov
jne
jo
mov
jae
pop
cltd
movsb
inc
lea
ds
inc
repz
sub
cltd
test
aaa
push
stos
rcrl
pop
xchg
icebp
jmp
sahf
mov
or
int3
fisttpll
dec
mov
aam
sub
mov
ficoms
bound
popf
pop
and
js
and
adc
addr16
sub
dec
jp
imul
stos
cmp
fdivl
jl
and
lahf
jp
dec
out
roll
mov
mov
cmpsb
mov
or
ss
xchg
pop
test
mov
in
and
stos
adc
fdiv
test
out
stos
cmp
ret
hlt
pop
aad
sbb
lods
shl
pop
dec
mov
fdiv
andb
mov
and
mov
push
xor
in
lretw
and
jge
push
dec
mov
mov
bound
pop
adcb
into
js
pop
jmp
gs
jno
xchg
cmp
push
xor
out
mov
inc
aam
js
pop
cmp
dec
das
cwtl
or
loop
repz
jg
clc
push
mov
iret
or
fsts
push
lret
xor
bswap
out
pop
lods
mov
xor
aas
fstpl
insb
in
jecxz
bound
je
outsb
sbbb
sbb
ficomps
mov
pop
js
fbstp
mov
xchg
ret
cmp
pusha
cltd
sbb
inc
xor
mov
addr16
js
aaa
inc
loope
ljmp
lret
mov
nop
push
inc
fistpl
mov
loope
out
xor
pop
ret
stos
dec
sti
cmpsb
jns
push
shr
dec
and
or
cmp
or
call
movsb
jle
out
push
leave
scas
xor
sbb
push
std
fbstp
mov
or
cltd
addr16
or
sub
popa
stos
cld
add
mov
daa
sbb
imul
push
inc
mov
pop
xor
sti
dec
push
cld
push
jo
adc
jmp
xchg
jo
loope
jb
sub
mov
das
xchg
insl
xchg
imul
into
xor
xor
and
idivb
lods
push
sbb
pop
inc
outsb
test
aaa
insl
jge
inc
sti
int
mov
cmp
int
cmpb
mov
push
leave
inc
cmpsb
mov
in
and
or
push
fs
outsb
hlt
vunpcklps
out
pushf
mov
js
cmp
mov
dec
mov
lock
xlat
pop
test
fwait
stos
aaa
lods
popa
sub
xchg
idivb
cmpb
mov
scas
mov
xchg
divl
sar
sub
inc
adcb
outsb
ds
int3
not
pop
mov
es
stos
push
mov
outsb
into
add
out
sbb
and
fsubs
jl
popf
add
push
mov
icebp
fwait
push
sbb
mov
adc
pop
mov
popa
into
test
test
push
jns
pop
mov
xor
dec
mov
add
cld
arpl
stos
adc
stos
jnp
in
inc
outsb
push
dec
fists
movsl
lahf
add
mov
data16
andl
mov
push
push
out
cwtl
outsb
mov
add
data16
iret
cs
jg
or
sbb
addb
push
std
shll
out
jmp
adcb
les
call
call
or
rclb
clc
pop
insl
push
push
aas
lret
imul
roll
jb
stos
sub
xchg
lret
inc
push
mov
jno
mov
xchg
xorb
inc
pop
push
icebp
pop
adcb
add
push
ret
fs
lods
xor
outsb
jne
sbb
je
inc
sbb
sbb
imull
fnclex
dec
cli
fldl
aad
andl
jns
xor
mov
xchg
lock
cmpsb
mov
lcall
icebp
shll
jecxz
mov
inc
cs
roll
pop
rcr
out
outsl
dec
mov
pusha
cmpsl
movsl
adc
pop
and
cld
sbbb
sub
notl
jge
les
lods
pop
icebp
lock
pop
int3
cmp
in
ja
stos
xor
inc
xchg
push
stos
sub
in
int
fstpl
fbstp
xor
aas
es
adc
jnp
push
shlb
testb
jmp
or
xor
imul
iret
scas
repnz
or
fcmovu
sbb
xor
lahf
imul
mov
js
test
mov
inc
mov
arpl
fs
addl
in
mov
fwait
sub
and
mov
mov
rorl
pop
outsl
push
out
jo
dec
push
decb
mov
pop
loope
out
fistpl
mov
xchg
or
push
xor
pop
mov
loope
or
cli
cmp
inc
fs
inc
xchg
or
pop
aaa
or
pop
mov
out
push
cmpsb
repnz
cmp
in
jae
lods
jae
mov
push
fwait
jle
xor
jbe
dec
mov
in
jns
popa
sbb
out
out
gs
lret
les
into
push
sbb
add
in
out
xor
inc
fsts
ss
loopne
mov
loop
stos
sbb
pushf
loopne
cmp
je
test
sbb
outsl
fcmovbe
iret
mov
movsl
les
push
mov
cltd
call
xor
movsl
fwait
es
cld
jno,pn
adc
or
and
cmc
push
fbstp
inc
lock
cwtl
movsb
and
cs
ja
sub
inc
icebp
pop
jnp
fcompl
mov
roll
and
aad
xchg
mov
test
or
and
sbb
add
dec
push
daa
push
add
std
xor
push
jne
pop
sub
js
das
mov
jne
sbb
loop
pop
and
push
mov
mov
je
cmp
cmp
inc
inc
stc
shlb
dec
lcall
sbb
maskmovq
negl
cwtl
adc
data16
push
mov
cmc
mov
or
repz
xor
je
jo
fcompl
pop
cmp
sbb
and
in
mov
push
call
fdivrs
jo
jo
in
and
pusha
repnz
cmpsb
lret
xor
aad
mov
pop
pop
push
mov
nop
loope
mov
pop
enter
cmp
dec
std
arpl
scas
or
ss
es
pushf
xor
jl
dec
xchg
jle
sarb
jo
mov
jbe
cltd
xor
leave
inc
and
in
push
sub
pop
lods
psubusw
loop
or
loopne
movsl
js
ja
shrl
iret
mov
mov
pop
xor
rolb
and
test
jb
sbb
or
or
xchg
pop
xor
leave
std
inc
pop
loop
movsl
jg
ja
mov
push
xor
xor
adc
cmp
icebp
je
in
insb
pop
insl
lcall
repnz
inc
test
inc
fwait
xor
mov
mov
cmpsl
adc
je
dec
nop
popa
aaa
lea
inc
cld
push
dec
out
lret
rcr
rclb
repz
dec
repz
iret
pop
out
dec
and
sahf
sbb
jno
mov
nop
fs
orl
cltd
xchg
scas
dec
pop
das
mov
jg
push
jns
test
xchg
pop
out
mov
loop
cmp
jb
pop
stos
dec
add
inc
xchg
rol
add
xchg
sbb
cmp
add
fdivrs
add
push
mov
or
jmp
cli
inc
and
xor
inc
addb
xchg
cmp
xchg
mov
and
lret
imul
add
xor
or
inc
lahf
inc
lods
aaa
fs
sub
or
adc
or
pushf
js
mov
out
jno
sbb
mov
mov
ret
ljmp
es
dec
stos
dec
arpl
fdivl
into
jge
jo
loop
out
arpl
les
push
cld
mov
push
xor
dec
in
call
mov
icebp
pop
cli
jle
rclb
aad
dec
fdivr
pop
jne
push
cmp
je
ds
fiaddl
xor
in
call
arpl
pop
inc
add
mov
loopne
ja
or
inc
fsubr
pop
movb
xlat
mov
adc
lcall
jno
sub
and
es
or
jmp
pop
sbb
gs
mov
sub
dec
gs
cli
pop
push
push
je
jp
stos
or
cmp
xchg
xor
scas
fdivrl
mov
or
adcb
or
repnz
daa
loope
jns
loopne
xchg
mov
lcall
in
or
stos
mov
ja
xor
push
test
mov
mov
mov
jbe
xor
push
cmp
sbb
lcall
adc
int
loop
cmp
lret
lea
mov
ljmp
mov
xchg
push
das
inc
mov
in
std
jmp
fwait
jmp
push
xor
loope
arpl
bound
pop
dec
out
xor
test
les
fmul
in
fsubrl
push
xchg
mov
mov
repz
add
mov
aam
fisttpl
mov
mov
xchg
jmp
outsl
movsl
push
cld
mov
inc
andl
pop
fisubrl
sbb
push
js
in
lahf
cmp
and
mov
stos
inc
lods
mov
xchg
aam
lock
aas
inc
js
pop
mov
dec
scas
push
incb
into
daa
repnz
test
sbb
in
mov
xor
mov
sub
inc
mov
pop
cmp
mull
jbe
mov
out
movsl
cmc
cli
pop
aam
adc
daa
add
inc
daa
stos
outsl
push
sbb
fidivrl
push
jae
push
and
xchg
loope
inc
cmp
and
cmp
mov
dec
xor
in
test
je
lods
push
push
shrb
push
iret
and
lods
push
adc
rclb
and
mov
cwtl
inc
sbb
orb
addr16
adc
dec
aaa
out
iret
pop
cmpsl
leave
and
repz
out
dec
jmp
in
mov
into
arpl
xchg
out
test
mov
dec
pop
adc
idivb
je
pop
fisubs
scas
pop
cmpsb
inc
add
cmp
lret
aas
cld
fadd
sbb
repz
inc
mov
xchg
push
pop
mov
pop
dec
cltd
stc
adc
sub
scas
icebp
or
add
test
xlat
or
aas
xchg
icebp
in
out
sti
mov
ja
jge
imul
rorb
and
sti
push
fsubrl
and
mov
push
push
loopne
in
dec
cmc
inc
jl
jle
pop
cmp
add
lahf
jno
pop
sub
and
mov
xchg
roll
and
or
or
lahf
rcrb
xlat
push
arpl
pop
inc
jno
mov
mov
dec
dec
push
sub
dec
xor
xlat
jle
subl
scas
mov
mov
push
xor
aaa
dec
aaa
dec
das
add
enter
mov
pop
sub
nop
mov
lods
cmc
fists
pop
jns
pop
jns
pop
pop
mov
mov
arpl
test
pop
sbb
cmp
dec
std
repnz
aam
adc
data16
cmp
xor
mov
cmp
popf
decl
mov
lods
cmp
jae
sub
push
xor
adc
int3
cmp
ja
clc
add
dec
stos
jno
mov
ljmp
or
adc
outsl
daa
xchg
fildll
or
popa
cmp
mov
pop
mov
fimuls
std
std
cwtl
jl
sub
in
or
rcll
inc
and
dec
jecxz
ja
mov
push
cwtl
xchg
jb
sub
lock
daa
out
sahf
mov
jg
pop
ret
fcompl
test
jp
mov
cmpsl
jl
adc
push
std
inc
mov
pushf
dec
ja
rcll
mov
jl
mov
pop
into
fs
sti
sub
into
adc
pop
sub
adc
adc
jbe
cmp
pop
cwtl
push
mov
xor
shrl
inc
fisubrl
jns
sub
sbb
mov
push
mov
in
imul
xor
or
pop
inc
lock
cmp
dec
xchg
mov
mov
jle,pt
mov
insb
xor
pop
inc
aam
add
loope
pop
shl
pushf
mov
push
push
adc
mov
subl
fisttps
sar
sarl
hlt
mov
lahf
add
adc
xor
rorl
cwtl
mov
iret
fnstsw
jge
or
out
pop
fwait
mov
and
sbb
insl
sbb
repz
das
jg
cli
or
clc
std
popa
enter
jo
data16
test
dec
and
adc
ljmp
jg
sbb
fistps
mov
shll
xchg
mov
mov
and
pop
cli
decb
or
push
lret
jbe
dec
add
sub
cmp
push
and
das
adc
sub
dec
sub
lea
or
jmp
sub
jge
xchg
call
xchg
fiaddl
push
pusha
xchg
dec
outsb
les
lods
and
outsb
mov
out
mov
std
ds
icebp
fdivrs
xchg
xchg
add
push
sti
and
out
aad
dec
fcmovne
sarb
and
bound
insb
imul
mov
and
adc
scas
xchg
les
imul
aas
sbb
movsb
cli
popa
std
xchg
fdivrl
stc
insl
int3
xor
mov
inc
xchg
scas
leave
pop
fadd
and
movsb
sbbl
int3
xchg
jb
xchg
jmp
fs
in
leave
pop
xor
xlat
sub
in
nop
sub
jl
jns
imul
sub
adc
cwtl
imul
dec
inc
out
dec
loopne
arpl
jge
inc
dec
xchg
out
push
and
out
or
jge
lea
lahf
or
sub
fcoms
ret
jo
adc
out
in
sub
push
sub
inc
xor
and
nop
lcall
adc
and
dec
ror
sbb
test
mulb
icebp
adc
ret
clc
and
ss
cs
add
inc
jo
inc
and
xchg
aas
mov
add
les
out
jb
dec
inc
mov
sub
cmp
popf
test
shlb
push
cmp
inc
sbb
lcall
mov
enter
int
movsl
mov
add
movsb
pop
ret
sbb
cmc
dec
jns
js
jbe
aaa
and
mov
mov
mov
testb
xor
stc
xorl
jae
das
aas
nop
and
flds
es
xchg
jge
xchg
xchg
sub
cmp
test
daa
scas
xor
push
fs
inc
stc
dec
dec
inc
mov
movsl
in
inc
in
push
jo
nop
push
inc
movl
dec
psubsb
rcr
insl
cmp
inc
loop
rorl
aaa
cwtl
lret
mov
or
sub
insl
jmp
pop
jno
push
mov
cmp
test
push
jge
push
mov
aam
incb
inc
mov
scas
lock
xchg
popf
mov
mov
fdivrs
mov
dec
dec
leave
xchg
aas
aad
cwtl
arpl
rcll
sbb
add
inc
mov
imul
movsb
mov
xchg
mov
shrw
cs
mov
cld
sbb
ja
popa
push
in
das
aas
ret
addb
mov
xchg
jg
sar
rorl
mov
cmpsl
iret
ficoml
test
fistl
fistps
pop
sbb
inc
andl
cmc
xor
fstps
xorl
fsubs
cmp
movsl
push
int
jg
mov
pop
aaa
test
and
inc
pushf
out
lods
loope
les
add
push
and
lret
xchg
mov
addr16
push
or
inc
jns
dec
hlt
sbb
stos
or
fisubrl
outsb
icebp
fsubs
fs
in
adc
adc
cmpsl
add
sub
cmpsl
inc
xor
jmp
mov
stc
notl
sub
ljmp
sbb
adc
xchg
leave
cs
fs
and
shrl
cli
and
roll
mov
pop
iret
int
lahf
les
out
fmulp
inc
add
sbb
stos
mov
adc
xchg
cmp
cmpsb
jg
xchg
push
adc
ret
and
outsb
xlat
loopne
xchg
in
cltd
pushf
test
test
sub
sub
xchg
movsl
leave
mov
pop
popa
pop
mov
loopne
mov
fistpll
push
ja
xor
out
cld
cmp
fisttpl
push
leave
ss
inc
mov
inc
sbb
mov
es
das
xchg
xor
dec
fidivrl
popa
xchg
mov
repnz
clc
scas
mov
jae
repz
xchg
aad
and
mov
pop
add
cmpsl
xchg
pop
nop
mov
loopne
cmp
hlt
daa
mov
decb
jg
cwtl
into
xor
mov
mov
ja
or
push
push
pusha
loop
out
fwait
lods
mov
jbe
fwait
cwtl
fwait
cmp
ljmp
outsb
pop
in
mov
dec
loop
aam
pop
mov
sbb
adc
adc
repnz
out
push
int
mov
ret
mov
and
add
sub
adc
dec
or
push
jb
std
and
mov
lods
jg
mov
fcmovnbe
xchg
push
dec
ficoms
jmp
sbb
or
push
xlat
jnp
mov
sahf
sub
rcrb
and
leave
cltd
sub
push
dec
cmp
sub
or
pop
cmp
int
jle
push
xor
idivb
jne
out
fcmovne
data16
cmp
in
xchg
mov
enter
aam
inc
ss
loope
stc
ret
clc
sbb
cwtl
sbb
push
jl
jecxz
xchg
cwtl
ss
pop
pextrw
test
pop
cld
pop
xchg
stc
sub
out
insl
add
into
repz
pop
sbb
xchg
push
pop
sbb
pop
pop
cmp
or
inc
inc
pop
sti
aam
jns
test
mov
sub
movsb
mov
stos
test
mov
and
stos
or
mov
xchg
nop
sub
inc
imul
leave
or
xchg
cmp
std
adc
mov
dec
jge
xor
test
into
das
mov
mov
mov
push
mov
mov
inc
or
jne
fisubrl
notb
pusha
insl
outsb
cld
adc
cmp
jecxz
jb
dec
outsb
jno
dec
or
push
adc
jl
frstor
push
cmp
xacquire
jp
ror
sub
add
xchg
push
adc
popf
xchg
and
add
dec
mov
mov
daa
cmp
aas
jns
ljmp
fdiv
adc
out
ja
test
mov
sbb
into
push
aad
jbe
add
pop
dec
sbb
fcmovb
rorl
xor
fwait
jnp
mov
mov
fistps
flds
fs
fnstsw
fnstsw
mov
rclb
sub
lods
mov
jnp
dec
add
cld
sahf
fxch
into
push
sarb
shll
fstpt
int3
mov
pop
in
cltd
push
pop
mov
and
add
jns
mov
jmp
mov
dec
or
outsb
fnstenv
cwtl
add
mov
xchg
lock
dec
lahf
xchg
mov
inc
lods
loopne
into
shll
mov
add
fbld
movsl
mov
xchg
movsl
lods
or
lahf
sbb
test
addb
arpl
call
outsb
mov
adc
fs
mov
pop
lods
daa
orl
push
jnp
mov
lret
lods
lcall
mov
jmp
fnstcw
rorb
les
xchg
icebp
dec
cmpsl
xor
cli
add
nop
js
xchg
fcmovb
filds
and
in
cmp
xlat
pop
push
and
dec
jg
into
mov
pop
sahf
sbb
mov
out
or
sti
sti
add
sbb
ds
xchg
pop
sub
rolb
sub
lods
adc
jge
adc
cs
aad
xchg
das
in
push
push
lret
movsb
test
mov
sbbl
mov
in
sub
sbb
mov
enter
xchg
loope
cwtl
dec
lcall
add
bts
or
cmp
das
pushf
inc
cmp
adc
jbe
lcall
call
cli
adc
mov
ss
mov
repz
or
push
cmp
bound
mov
inc
dec
into
inc
adcb
aas
dec
xor
pop
fs
es
inc
fldl
mov
jns
into
mov
xchg
aaa
sub
cld
fxrstor
cmp
cld
test
fwait
dec
addr16
movl
pop
mov
mov
int
mov
jbe
and
loop
adc
cmpsl
sti
js
icebp
cli
mov
je
andb
addl
mov
pop
ror
adc
inc
sar
push
mov
jnp
popf
stos
sti
xor
cmpsb
cs
or
jne
push
das
iret
dec
jb
sub
fs
mov
and
mov
mov
cmp
std
jno
popa
imul
push
in
orl
imulb
lret
ret
int
iret
lods
inc
jg
mov
lcall
imulb
test
xor
xlat
or
cmpsb
and
mov
push
lock
mov
or
sbb
sbb
xor
fsubs
lret
adc
cli
add
xor
jg
jns
dec
std
scas
xchg
fwait
jne
mov
sti
ret
pop
mov
fists
push
into
loopne
jecxz
gs
fiaddl
push
int3
adc
xchg
out
out
sbb
test
movsb
sbb
and
mov
out
sti
jae
cmp
into
jmp
aaa
mov
sahf
pop
xchg
xchg
push
jnp
pushf
jae
sbb
cmp
pop
outsb
aad
out
inc
pop
mov
insl
jb
inc
inc
sbb
rcrl
int3
out
test
mov
ficoml
inc
xchg
movsl
ds
loop
or
inc
das
inc
out
and
add
std
js
xlat
call
movsb
ret
cmp
cltd
fstpt
pusha
daa
mov
jno
repnz
je
or
sbb
popf
je
sbb
jl
frstor
rcll
jmp
sub
cmpsl
flds
std
ja
lods
addr16
push
mov
xor
ret
mov
mov
or
mov
sub
mov
cmp
or
jne
sub
mov
out
pop
popa
xchg
imul
add
sbb
js
ss
mov
test
pop
or
jo
or
or
stos
test
inc
data16
inc
sbb
test
adc
push
sbb
dec
sub
mov
stc
jnp
lea
fwait
sub
inc
cmp
and
pop
cmp
out
std
xor
pop
xchg
xchg
inc
dec
jne
cli
xchg
inc
icebp
out
aas
mov
sahf
fs
or
inc
xchg
mov
out
int3
mov
movsl
pop
jge
mov
and
jb
ret
icebp
xchg
pop
adc
dec
adc
sbb
add
std
fidivrl
icebp
test
mov
inc
in
dec
push
in
das
ret
mov
hlt
ss
xor
aam
pop
sub
adc
lcall
jb
mov
pusha
lock
jnp
mov
dec
xchg
jo
sbb
aaa
cmpsl
jno
rcll
mov
mov
stc
xchg
cltd
js
mov
fiadds
push
stos
xorl
jecxz
flds
fmuls
sbb
mov
dec
fnstsw
pop
dec
jge
sbb
ja
enter
dec
movsb
fdiv
sub
mov
orps
dec
sub
out
jns
sub
mov
out
cvtdq2ps
push
insb
loop
repnz
lock
mov
push
iret
div
sub
dec
dec
nop
in
aam
into
or
lds
shlb
mov
data16
xchg
mov
cmpsl
add
fwait
xor
and
outsl
rcrl
loopne
xchg
push
pop
fcoms
jg
out
sti
inc
test
data16
out
mov
sub
pop
add
decb
les
sarb
faddl
cmp
xor
mov
in
leave
es
es
mov
insb
rolb
push
and
leave
insl
lds
test
jno
leave
insb
cmp
jnp
cld
lahf
xchg
sarb
mov
cmp
pop
aad
mov
sbb
cmp
mov
out
pushf
push
ret
gs
pop
xor
fs
es
sbb
movsb
xor
movsl
cmp
jo
lcall
jge
pop
mov
sbb
cmc
mov
cmp
pop
sbb
cmp
or
mov
pop
aas
sti
stos
jmp
xor
jae
inc
sbb
pop
sbb
pop
jp
inc
dec
mov
test
in
imul
data16
pop
ja
jp
mov
cs
fs
stc
xor
aam
incl
and
incb
flds
mov
dec
mov
mov
add
sbb
inc
adc
and
pop
sub
xchg
xchg
jp
testb
test
sub
ljmp
in
nop
sbb
fdivrl
dec
faddl
out
jb
mov
dec
xchg
and
or
xorb
lcall
mov
loope
pushf
adc
mov
mov
xor
cmpsb
cmpsl
cs
fldcw
lock
loop
mov
imul
lock
sub
sub
fisttps
stos
stos
xor
or
inc
insb
cs
xchg
dec
stos
ja
adc
mov
add
add
cmp
adc
push
push
push
mov
xlat
pop
stos
stc
sub
xor
out
lcall
pop
pop
into
mov
divl
mov
bound
sbb
test
mov
dec
mov
test
cltd
xchg
out
sub
dec
cltd
imul
jns
sbb
lods
insb
mov
pop
add
cld
jl
sbb
push
mov
das
jp
lahf
adc
scas
jmp
cltd
addr16
add
js
xor
cmp
movsb
nop
mov
dec
jg
sbb
mov
mov
fwait
in
call
popa
push
enter
lret
jno
pop
iret
adc
test
cmc
pop
inc
pushf
ss
sti
and
js
repz
rcr
sub
stos
push
lds
inc
popa
in
or
xchg
cs
xor
xchg
pushf
lret
push
inc
inc
adcb
mov
int3
jbe
jge
xchg
add
dec
arpl
sub
addl
cli
cmc
mov
xchg
insb
adc
cwtl
test
test
push
int
mov
outsl
lea
cmpsl
lea
dec
xchg
lods
mov
out
jnp
push
dec
scas
mov
dec
sbb
pop
lods
fdecstp
leave
test
xor
push
aaa
pop
dec
adc
cvtps2pi
sahf
mov
rorl
mov
push
sbb
das
scas
movsl
dec
cmp
inc
and
pop
hlt
xchg
popf
mov
xchg
jb
add
push
add
or
cmp
cmc
dec
and
xlat
out
and
pop
mov
test
lret
loopne
pop
inc
mov
lds
inc
sub
push
mov
fs
leave
pop
push
test
shlb
jae
push
add
cs
stos
xchg
cltd
scas
in
add
imul
mov
xor
adc
and
mov
fldcw
mov
or
sub
xor
call
fisttpll
pop
lret
ljmp
outsl
std
add
pop
jl
les
mov
push
rcl
xor
or
jp
lods
xor
lea
int3
sub
sbb
sub
adc
push
inc
scas
shrl
pushf
dec
push
mov
dec
and
pop
jl
movsb
dec
add
xor
add
jmp
movsb
stos
stos
bound
xor
inc
dec
xchg
lock
hlt
sub
sub
mov
test
xor
sbb
int
addr16
js
push
mov
jmp
movsl
jg
lret
test
jmp
sbb
adcb
lret
mov
mov
jb
jae
push
inc
mov
sti
or
mov
pop
adc
mov
aad
ja
and
jno
xchg
pop
hlt
arpl
fimuls
popa
jmp
popa
testb
sbb
push
dec
jns
shll
adc
sub
les
or
and
sub
xchg
lods
out
lret
je
out
mov
js
mov
nop
imul
adc
xchg
lfs
xchg
pop
mov
pop
aad
lods
pop
arpl
ds
popl
sar
out
mov
out
test
jns
push
inc
adc
fldl
dec
repnz
loop
daa
inc
out
sub
bound
int
cwtl
in
std
xlat
xor
sub
loop
mov
insl
mov
sbb
sbb
add
mov
hlt
jns
inc
pop
cmp
int
sub
push
lods
sbb
and
lock
stc
cwtl
test
aad
xchg
ss
into
mov
movsb
and
insl
nop
pop
sbb
hlt
mov
jae
mov
xchg
aad
push
cltd
jp
xchg
lods
jnp
sub
xchg
ja
sub
stc
sti
adc
js
jae
and
es
inc
shrl
sbb
inc
scas
push
xorb
in
jge
das
jmp
stc
jae
jl
pop
icebp
cmp
pause
pushf
cld
and
or
mov
int
shr
fdivrs
testl
add
sub
lea
add
adc
out
pusha
or
push
adc
xchg
xchg
jl
sbb
stos
add
imul
js
shlb
lock
mov
in
aam
mov
jp
ds
and
jge
push
sbb
adc
lock
dec
sub
shr
int3
dec
mov
arpl
decb
adc
dec
sbb
pop
mov
xchg
mov
adc
iret
add
stos
stc
pop
xchg
lret
out
cmp
push
lea
or
pop
cwtl
cld
imul
pop
sbb
insl
dec
pusha
pop
test
outsb
loop
arpl
and
xor
adc
jne
sub
hlt
xchg
mov
rcl
ss
rcr
mov
or
into
jmp
sbb
pop
jmp
mov
lcall
push
cli
pop
push
aam
cltd
and
adc
push
es
out
push
psrlq
int3
int3
inc
sbb
push
stos
pusha
cli
out
xchg
js
cmp
dec
jl
test
dec
or
js
shrl
imul
aam
pushl
je
ss
xchg
jg
mov
mov
push
mull
icebp
dec
or
insb
xor
mov
repnz
loope
mov
test
inc
jne
adc
cmp
cmpsl
or
fwait
push
adc
xchg
mov
cwtl
and
adc
sbb
mov
mov
sbb
test
paddsb
mov
jae
or
shll
mov
cmp
add
mov
cmp
lret
push
adc
jo
les
daa
cmp
xchg
dec
int3
jns
mov
push
stos
and
push
mov
js
mov
add
out
jns
sub
mov
popa
test
sar
shlb
outsb
add
jnp
shlb
mov
mov
sub
hlt
add
jne
dec
sti
inc
adc
cmp
mov
pusha
jnp
push
in
addr16
xchg
jp
dec
movsb
decl
push
mov
xor
mov
cmp
vpmuludq
clc
insb
es
std
popa
mov
stos
pop
test
insb
gs
xchg
xchg
mov
mov
mov
dec
add
inc
ljmp
rcll
inc
stc
rcrb
test
jnp
mov
rcl
rolb
cmpsl
incl
and
fwait
add
xchg
movsb
cld
aaa
outsb
add
movsb
inc
sub
lds
mov
add
adc
sti
pusha
jge
sarl
inc
add
xor
jle
dec
sti
daa
icebp
and
ss
pop
popf
inc
insl
xlat
shl
fsubl
mov
bound
int
push
sub
loopne
pushf
cmp
mov
inc
adc
int
add
inc
xchg
repz
bound
fisttpll
fdiv
test
mov
xchg
mov
mov
or
jmp
imul
push
repz
jl
outsl
fidivs
cvtdq2ps
mov
int3
sbb
pushf
sar
jge
xor
adc
ljmp
mov
outsb
lods
ret
aaa
adc
mov
jns
xchg
pop
xor
testl
sbb
loopne
es
jns
or
push
hlt
xchg
dec
xchg
and
jmp
cmp
cli
and
jle
xchg
pop
xchg
xchg
or
dec
jae
hlt
add
jp
cmpsb
pushf
jle
pop
dec
loop
and
dec
xchg
sbb
mov
mov
out
jb
xor
xor
lock
inc
mov
and
aas
jnp
dec
cmp
adc
repnz
xor
mov
push
inc
sbb
fxtract
icebp
adc
repnz
jne
mov
cmpsl
cmp
rcr
test
test
in
sbb
or
push
jl
ds
leave
dec
cltd
mov
icebp
movsb
inc
jmp
xchg
or
dec
jge
je,pn
pop
push
sub
jle
add
cmc
push
jo
inc
push
jge
inc
fbld
bound
and
sub
sub
sbb
and
icebp
pop
lret
push
fnstcw
mov
inc
outsl
orl
int
mov
jo
push
jmp
lea
jnp
ja
inc
fsubs
xchg
xchg
sub
pop
add
in
ljmp
cmpsl
aam
xchg
mov
faddp
imul
negl
push
pop
jle
cvtps2pd
divb
loope
jmp
xor
aam
pop
std
mov
mov
pop
movsl
sbb
adc
xor
dec
jp
cwtl
fwait
sbb
xchg
cld
sbb
or
stos
imul
nop
les
adc
in
movsb
fcoms
cld
sbb
inc
push
data16
xchg
pusha
nop
jnp
or
mov
sub
mov
es
rolb
ja
dec
test
cmp
jp
sahf
pop
adc
mov
aam
je
lret
fisubl
loop
int3
scas
add
pushf
inc
jne
pusha
sbbb
repnz
sub
std
cmp
popa
imul
mov
inc
iret
lahf
ja
xchg
sub
stos
repz
mov
loope
aad
lret
popf
lcall
push
pop
sub
cld
mov
cltd
or
ja
or
mov
nop
cmp
enter
xchg
jbe
add
mov
out
sahf
mov
in
pop
cmp
mov
lret
jle
mov
mov
cld
and
outsb
cld
sub
dec
aam
scas
ret
out
popl
pushf
jg
mov
std
push
push
je
mulb
popa
movsl
das
jb
jge
rcrl
jp
pop
add
dec
mov
and
xchg
mov
mov
jns
push
enter
mov
xor
jg
add
push
pop
add
mov
adc
jge
mov
imul
mov
ljmp
mull
pushf
xchg
movups
inc
out
pop
mov
into
inc
push
stos
xchg
or
and
les
pop
call
mov
jno
cmp
xchg
mov
ret
sbb
ret
bound
cmp
push
lret
jl
jge
inc
push
stos
fcmovb
std
push
movsb
push
lods
inc
or
sub
mov
rcrb
out
insl
bound
mov
add
mov
mov
test
movsb
and
ret
mov
dec
hlt
dec
mov
fcmovnb
jl
adc
lahf
sub
flds
push
mov
iret
xchg
in
xchg
inc
add
mov
sbb
clc
notl
fiaddl
into
sub
outsl
mov
adc
pop
lahf
dec
xchg
sahf
jne
jns
mov
insb
cltd
out
sbb
test
xor
hlt
or
enter
inc
movsl
loop
jle
or
pop
fcompl
je
dec
jle
adc
in
in
jp
stos
jb
mov
sbb
xor
sbb
in
enter
dec
mov
stos
mov
outsl
jle
rcrl
fxsave
loope
and
gs
ficoml
ja
jno
shll
addr16
mov
test
adc
je
jl
push
lret
popa
lods
sbb
jb
lahf
push
pop
dec
sub
shrb
repnz
mov
xchg
inc
arpl
pushf
mov
push
xchg
fidivl
mov
fwait
dec
and
repz
shl
mov
in
test
add
mov
insb
neg
movsb
and
test
fldz
rclb
stc
jg
sbb
adc
out
out
sbb
cmpsb
mov
mov
cmpsl
sub
ljmp
inc
adc
mov
jno
xlat
mov
and
pop
fsub
mov
add
xchg
mov
pushf
cmp
inc
imul
dec
or
inc
pop
pop
test
jbe
sti
dec
push
sub
sbb
inc
xchg
out
mov
sarb
push
dec
pushf
mov
mov
lock
sub
mov
or
lea
mull
movsl
sbb
jmp
mov
sar
sbb
adc
aad
orb
jmp
icebp
xor
xchg
push
xlat
inc
ds
pop
mov
mov
dec
mov
test
cmp
divl
dec
jae
xor
or
test
repnz
jle
xchg
in
and
sbb
leave
jl
dec
dec
push
sub
or
add
int
fcmovnu
fstpt
jmp
in
lret
lret
lods
adc
ds
das
scas
cmp
adc
ds
aam
lret
cmp
push
mov
lock
jb
xlat
gs
hlt
in
gs
inc
dec
mov
std
gs
shrl
pushf
push
and
fst
push
iret
ret
mov
push
call
popa
adc
jns
xchg
cmp
sub
mov
add
imul
pop
daa
add
sbb
ja
repz
mov
jle
nop
loop
sti
cmp
or
les
mull
adc
sub
scas
cmc
jl
hlt
sbbl
xlat
mov
xchg
loopne
shl
push
dec
and
repnz
xchg
adc
pop
jnp
imul
push
fwait
popf
add
pusha
aaa
aam
stos
addr16
dec
popa
cmp
sub
sbb
pop
sti
stc
out
cld
shrb
popa
dec
pop
ja
mov
into
push
loope
lret
iret
push
xor
sti
fistl
rcl
pop
mov
jecxz
cmp
mov
aam
fisubl
hlt
out
jle
add
aas
jo
xchg
stc
fmuls
scas
lahf
div
adc
lret
mov
shlb
leave
or
adc
gs
hlt
ficompl
cmp
jl
xorl
mov
out
xchg
rolb
jb
aad
xor
jo,pn
in
pop
or
sbb
add
clc
aad
push
int
out
call
xor
pop
loopne
adc
out
jnp
mov
xchg
or
jne
cmpsl
and
gs
xchg
inc
lds
das
rclb
cmp
mov
shll
sub
iret
add
pop
push
daa
xchg
test
mov
jg
or
pop
movsb
jge
movsb
lret
scas
cmp
cli
xor
adc
ret
jbe
enter
push
pusha
out
orb
ja
shl
dec
add
std
jae
into
sbb
xchg
bound
ret
ja
mov
mov
aaa
push
mov
inc
sahf
xlat
xchg
leave
lds
roll
xchg
roll
push
insb
movsb
mov
out
add
xchg
or
push
arpl
pop
nop
add
imul
add
dec
xchg
xchg
jne
jo
inc
into
push
inc
loope
push
push
cli
int3
insb
fwait
outsb
mov
inc
or
out
xorl
xchg
cld
add
in
lods
mull
js
sub
pusha
clc
lret
sbb
ret
cld
pop
xchg
cmp
aam
fisubs
inc
and
or
sbb
pushf
cmp
loopne
movsb
bound
mov
push
mov
cmp
add
inc
loope
xor
aad
cs
loopne
adc
ljmp
ljmp
flds
aas
sbb
sar
out
dec
sub
sub
xchg
out
dec
adc
fistps
mov
mov
sbb
cld
xchg
push
inc
addr16
cmpsb
cmp
and
mov
enter
in
daa
rcr
cmpsl
test
popa
call
test
dec
inc
aaa
sub
divb
ljmp
ret
stos
push
mov
inc
xor
insl
push
repz
jl
sub
nop
movsl
sub
add
adc
sub
rclb
adc
sub
pop
outsb
leave
push
sbb
add
jne
sub
mov
dec
pop
pop
arpl
int
dec
mov
rcl
arpl
insl
out
xorl
jmp
data16
mov
aaa
js
dec
adc
pusha
mov
shl
mov
in
shll
pop
mov
mov
xor
test
xchg
movsl
in
ds
sub
add
inc
shlb
dec
lcall
scas
push
jnp
and
int
loop
sbb
adc
dec
mov
xchg
cld
scas
stos
and
outsb
fstpl
mov
mov
mov
xchg
in
test
mov
dec
insl
insb
inc
xchg
adc
ret
pop
popf
arpl
dec
mov
adc
mov
sub
rcl
mov
sbb
xor
xor
popf
push
push
or
je
ret
mov
mov
int3
push
lds
or
mov
mov
arpl
leave
ss
xchg
stos
bound
dec
bound
push
jo
lret
imul
out
sbb
into
push
out
cwtl
pusha
sub
ficoms
lret
std
pop
imul
mov
inc
jle
adc
pop
or
jns,pn
sbb
jp
mov
lret
sbb
push
pop
jecxz
divb
jnp
and
pop
cmp
fdivrl
leavew
scas
int
jecxz
adcb
ljmp
loopne
lahf
movsb
out
jb
into
and
and
jecxz
push
cmp
loop
loop
xchg
dec
xchg
push
and
cltd
xchg
mov
sarb
mov
das
test
jle
cli
adc
mov
sub
je
add
push
push
movsb
lods
xor
jae
and
xchg
mov
cmpsb
push
xlat
js
cmp
push
inc
push
pop
push
lock
cmp
pop
cmp
std
cltd
int3
inc
hlt
sub
test
pop
addr16
cmpsb
push
testl
aaa
push
mov
into
sub
hlt
mov
sti
loope
jae
sub
mov
or
out
les
inc
mov
mov
jno
mov
cmp
push
popa
jmp
push
and
jo
jbe
dec
inc
fcmovu
loopne
aad
add
and
push
lods
sti
mov
xor
mov
pop
inc
add
std
insb
jge
mov
aas
sub
ret
arpl
lcall
cs
cmp
jns
mov
fwait
mov
inc
outsl
xchg
push
pop
rcpps
scas
xchg
push
mov
pushf
mov
fstl
jmp
leave
lods
fistl
cli
and
and
insl
dec
insl
dec
les
pushf
les
sub
xor
jb
cmp
nop
lret
test
divb
mov
jl
js
inc
mov
jb
mov
cmpsl
out
adc
inc
pop
fs
adc
and
mov
icebp
lods
stos
push
cmp
pop
and
adc
clc
repnz
xor
xchg
mov
aam
ss
mov
shrl
fisttps
jbe
sbb
outsb
pop
cwtl
in
psubsb
sbb
cli
xchg
inc
adc
xchg
stc
jge
fists
mov
insb
dec
lds
xchg
mov
adc
or
push
jnp
jl
ss
leave
mov
mov
xlat
adc
enter
mov
lea
mov
mov
loope
mov
or
xchg
out
mov
pusha
and
filds
repz
sahf
into
adc
mov
sahf
adc
inc
fnsave
jg
js
aad
repz
inc
orl
push
sbb
or
into
cmpsl
scas
adc
std
adc
lods
or
popf
push
mov
and
int3
fsubl
jmp
jle
or
mov
mov
xchg
clc
outsb
shlb
push
jnp
pop
mov
sub
pop
inc
in
in
rcrl
fs
in
dec
mov
mov
cli
hlt
xlat
push
jl
push
popf
mov
add
scas
pop
loope
daa
and
push
cmc
dec
jmp
dec
adc
hlt
lret
cmpsb
sub
mov
pop
orl
mov
repnz
sbb
pushl
sbb
gs
mov
aam
mov
mov
lcall
loop
ret
aaa
test
cs
movsl
and
mov
in
mov
lret
push
iret
cmpl
adc
sbbb
int
in
sub
dec
xchg
jbe
and
sahf
cmp
fcmovb
lret
popf
and
xor
inc
sarb
cmp
push
or
cltd
sti
jb
and
andb
dec
mov
jns
iret
adc
push
cli
xor
fdivrl
jle
add
sbb
xor
pusha
in
pop
xchg
aaa
sbb
xchg
int3
fnsave
adc
lret
mov
push
inc
ret
mov
push
call
mov
jg
pop
repnz
sub
mov
popf
and
out
add
sbb
outsb
pop
cmp
adc
movnti
pop
ja
ss
dec
pop
sub
mov
cmp
xchg
mov
pop
into
mov
mov
push
ss
stc
inc
dec
jecxz
add
xor
jg
dec
jne
mov
sub
mov
mov
push
mov
mov
in
cmpsb
popf
scas
hlt
mov
sub
fimuls
cmp
adc
and
mov
sub
inc
jbe
adc
imul
and
sbb
sbb
sbb
inc
rcll
or
push
lea
ds
mov
adc
xchg
xlat
notb
fisubrs
lea
xchg
out
and
push
sub
push
pop
in
pop
stc
out
dec
lret
loopne
je
insb
icebp
push
ds
adc
aas
in
add
mov
lea
ret
sub
iret
outsl
repnz
shr
and
sarl
dec
dec
push
test
xchg
jb
fidivrs
xchg
sahf
aad
jp
and
shlb
mov
ret
repz
inc
jo
jbe
in
xor
in
cwtl
inc
xor
dec
pop
pop
sarb
mov
fldenv
add
popa
pusha
jae
rcll
mov
adc
add
out
dec
sub
xchg
inc
test
push
outsb
xor
inc
test
je
adc
outsl
in
enter
adc
adc
pop
push
imulb
imul
in
push
movsb
fcoml
dec
out
rcrl
mov
xchg
push
jb
or
insb
sub
add
dec
pop
mov
lds
dec
jg
push
add
cmpl
out
jae
addr16
mov
push
dec
stc
jbe
mov
icebp
loopne
shl
add
mov
cmp
pop
adc
out
or
ljmp
addr16
push
mov
adc
jno,pt
or
pcmpeqd
or
pop
dec
mov
cmp
test
sbb
push
mov
pop
push
cmpsl
jp
ret
fs
movsl
or
cmp
and
aam
mov
and
sbb
mov
inc
cwtl
out
repnz
add
add
cmp
mov
sti
dec
or
sbb
inc
mov
dec
arpl
jb
clc
in
subl
and
add
adc
mov
aaa
dec
xchg
mov
mov
sahf
cmp
es
mov
adc
out
lock
mov
lds
xlat
fcoml
fs
dec
popf
aas
pusha
inc
sub
inc
aam
jle
movsb
fdivr
jnp
loopne
or
ss
push
and
test
divps
xor
stos
packssdw
ds
ss
sbb
pusha
lods
jp
add
mov
setle
iret
xchg
sbb
mov
stos
xor
mov
leave
mov
gs
push
mov
mov
aaa
shl
ds
clc
leave
fsubrl
xchg
and
push
xchg
dec
incl
push
leave
sub
mov
mov
mov
leave
mov
and
mov
jmp
push
jnp
stc
mov
testl
dec
cmp
sub
sub
dec
jge
movsl
mov
sbb
dec
adc
mov
popf
insb
test
xchg
shld
in
xor
pop
or
adc
mov
out
sbb
cmc
push
mull
cmp
xadd
lock
xchg
xchg
int
sbb
sub
incb
jge
pop
movsb
repz
mov
outsl
mov
adc
inc
nop
sub
cltd
mov
out
push
sbb
cmpsl
pop
movl
cmp
arpl
jle
push
mov
push
stos
push
dec
push
adc
das
dec
mul
mov
inc
leave
test
sbb
mov
call
je
adc
enter
adc
push
scas
cs
ljmp
dec
xchg
inc
dec
test
fwait
mov
dec
xchg
subl
and
lret
addb
aam
outsb
leave
push
fidivrl
xchg
cwtl
std
inc
and
cmp
addb
mov
fsubrs
jle
out
stc
mov
xor
adc
xor
mov
push
mov
mov
xlat
push
cs
dec
fcoms
out
push
push
fnstenv
cmc
mov
mov
xchg
insb
movsl
sbbl
inc
adcl
nop
in
jecxz
fdivr
in
cwtl
lods
mov
insb
inc
add
add
adc
mov
cs
push
dec
xor
mov
xor
sarb
pop
sub
xchg
mov
dec
int
stos
mov
movsb
and
and
aad
xor
ret
push
sub
mov
cmp
xchg
pop
inc
inc
insl
rcll
loopne
jl
lret
add
shlb
sub
ss
xor
adc
push
cmc
jo
push
in
jge
pcmpeqb
aaa
outsl
add
xor
sbb
add
jnp
sbb
cmp
pop
sub
sub
sub
cmovbe
stos
inc
sub
sbb
or
js
mov
jns
cmp
pushf
jo
mov
hlt
mov
subl
mov
sbb
aaa
sbb
outsb
xchg
pop
xor
xor
dec
cmp
jb
leave
pop
adc
icebp
aad
push
cwtl
dec
popa
loop
mov
std
gs
mov
ss
jnp
sti
mov
cmc
fldenv
bound
xchg
push
jecxz
pop
les
inc
jmp
popf
xchg
movsl
inc
int3
fdivrs
in
push
fwait
push
xchg
ja
xchg
lcall
ds
xchg
fadd
inc
cltd
es
test
jnp
cwtl
out
cmp
xchg
sub
gs
push
push
call
int
pop
pop
pop
decl
mov
jnp,pt
mov
sub
int
in
subb
mov
aaa
xchg
mov
mov
mov
fwait
mov
lods
ds
pushf
stos
ja
movsb
adc
inc
mov
or
jmp
or
adc
lahf
push
lahf
mov
jp
add
lea
cld
add
jb
pop
sahf
mov
sub
stos
std
sahf
mov
test
xor
stos
jns
inc
call
imul
stos
test
mov
sbb
push
insl
outsl
outsb
and
xor
mov
inc
jecxz
pop
fwait
enter
mov
push
cltd
mov
subb
test
rorl
sbb
mov
pop
movsb
hlt
sub
and
repnz
outsl
shrb
std
mov
mov
ja
mov
or
sarb
pusha
enter
jmp
mov
add
mov
mov
cltd
in
mulb
fs
inc
and
in
arpl
rorl
push
das
loop
test
rcrb
inc
push
ud1
pushf
out
fisttpll
cmp
xchg
cmc
lds
jmp
mov
std
iret
dec
mov
mov
loop
mov
psubsb
divl
jg
mov
inc
push
jg
rolb
xor
arpl
xchg
adc
neg
stc
jge
push
mov
rclb
loope
lret
loopne
and
jg
mov
add
push
mov
and
push
test
xchg
repnz
mov
std
cltd
sbb
repz
movsl
or
cmp
cmp
inc
js
lods
pop
jp
les
cmc
repnz
xor
mov
mov
pop
imul
adc
loope
cmp
fsubr
xchg
es
ret
xchg
scas
mov
xchg
pushf
mov
in
lret
jns
cld
and
inc
inc
push
inc
xchg
dec
xorl
in
ret
out
fwait
repz
outsl
cmp
lods
imul
vminsd
sbb
mov
pop
add
xchg
arpl
pop
mov
out
inc
lods
cli
sbb
aad
outsb
push
fiadds
shr
hlt
incl
clc
push
arpl
daa
test
fcomps
sub
aam
loop
std
negl
cmp
jb
rcr
sub
or
xor
dec
push
in
jle
sbb
test
sarl
xchg
roll
xchg
arpl
adc
cmp
outsb
xor
neg
jle
int
push
addr16
push
inc
cli
mov
xchg
inc
xor
push
and
cmp
add
aas
push
and
loope
cmc
dec
sub
cmp
aad
push
pop
jp
arpl
js
mov
orb
mov
fsubrs
inc
incl
fwait
or
mov
imul
xchg
mov
xchg
adc
fdivs
or
pop
pop
push
les
into
inc
loop
nop
movsb
repnz
mov
dec
pop
add
push
scas
jo
arpl
pop
sbb
imul
pop
nop
jbe
nop
aaa
inc
push
pop
adc
mov
stc
cwtl
test
gs
push
sbb
xchg
pushf
add
push
push
or
adc
loopne
xor
dec
bound
xchg
push
neg
dec
inc
ss
cmp
xor
aam
sub
jb
out
sub
inc
sarb
ss
cmp
mov
sbb
insb
loopne
jae
sub
mov
inc
addr16
ja
dec
or
rcrb
gs
and
pop
gs
push
hlt
test
fimull
dec
insl
xlat
clc
cld
add
icebp
aad
scas
js
hlt
lods
push
pop
lret
or
mov
mov
push
sti
mov
or
movsl
mov
in
jns
mov
or
sbbl
jl
iret
das
lea
jo
lods
pop
mov
test
add
sbbl
pop
aas
clc
cs
cltd
jbe
inc
push
sahf
test
or
iret
mov
shr
xchg
data16
push
leave
imul
cmp
cld
sub
jae
add
shr
std
adc
mov
aas
pop
inc
ror
pop
dec
and
sbb
lods
mov
pop
roll
notl
outsl
daa
ret
adcb
jno
shll
jl
xor
or
fsts
rcl
neg
cmp
popa
xor
adc
adc
inc
jg
sub
mov
push
out
push
ret
adc
push
in
call
jp
or
dec
xor
popf
and
or
ret
outsl
stos
pop
in
or
push
fildll
cmc
mov
mov
mov
mov
pop
cmp
dec
scas
cmpsb
aas
jb
cld
movb
mov
sti
movsl
insb
sbb
leave
lcall
sbb
xchg
or
xchg
stc
testb
and
movsl
pop
subl
stc
sub
xchg
les
stos
dec
ret
jg
xlat
in
pop
push
dec
outsl
je
mov
movsl
push
push
sub
movsb
and
jo
pusha
and
ljmp
mov
jmp
dec
cmp
push
popa
cmp
je
mov
stc
or
fldcw
out
and
cwtl
arpl
jne
fdivrl
jp
xorl
fistps
aas
ds
mov
out
adc
mov
out
leave
icebp
movb
add
lock
aaa
jne
addl
xor
out
add
call
push
xchg
nop
or
lock
jns
mov
aam
jae
xor
mov
icebp
mov
aas
adc
popf
cltd
xor
fsubl
mov
add
pop
aaa
pop
push
ss
sbb
pop
data16
pop
fs
jb
test
lods
mov
outsl
inc
es
cs
add
insb
lret
mov
dec
movsl
inc
mov
xchg
jg
fistps
inc
std
enter
cmp
mov
scas
mov
lret
and
shl
out
mov
mov
int
xor
jno
out
mov
xchg
mov
or
push
dec
lret
lcall
and
pop
ret
xchg
aaa
popa
dec
cmp
out
cwtl
fcomps
jae
jp
mov
test
dec
xor
aas
int
jae
adc
inc
aas
or
cwtl
out
fwait
push
inc
les
call
sbb
lock
pusha
or
fwait
cmp
push
pop
xchg
lods
mov
pop
cmc
sub
fisubs
rcrb
movb
xlat
dec
xchg
add
das
dec
stc
and
jo
mov
das
clc
jmp
sti
popf
push
inc
inc
dec
dec
outsb
mov
movsb
cmp
sbb
out
xor
call
into
xchg
arpl
aam
inc
jno
mov
aaa
ret
jg
push
icebp
sahf
mov
xor
pop
dec
inc
stos
and
push
cmpl
dec
leave
pop
xor
xor
or
data16
test
xchg
inc
sahf
add
mov
gs
inc
pop
test
and
jge
pop
sbb
data16
sub
inc
dec
aam
jmp
mov
mov
add
sbbl
imul
jmp
pop
push
into
mov
push
call
jae
je
testb
and
mov
aad
jcxz
and
movsb
sbb
xor
sahf
shl
mov
out
gs
inc
pusha
orl
jns
ret
fsubrp
pop
inc
fwait
and
test
hlt
hlt
add
iret
lods
pop
mov
or
sub
mov
mov
shrl
pop
xchg
cli
rclb
adc
sub
mov
js
in
mov
inc
jp
mov
daa
hlt
cmp
mov
imul
cwtl
xor
mov
stc
add
mov
xchg
add
xor
xchg
testl
popf
jecxz
les
dec
stos
stos
lret
das
in
jno
inc
repnz
mov
fnstsw
lret
mov
jmp
mov
inc
imul
or
mov
jbe
loop
sub
push
dec
cmp
dec
pop
nop
mov
pop
rcrb
dec
or
and
shll
lea
sarl
lret
das
inc
les
sarb
insl
test
push
cmp
ja
add
in
clc
fildll
sbb
fs
dec
sbb
rol
dec
jp
sub
loopne
mov
std
std
aas
int
scas
test
xlat
js
inc
nop
fst
cmp
stos
or
addb
inc
test
pushfw
icebp
fistl
mov
dec
movsl
ror
cmc
dec
mul
in
pop
xchg
mov
clc
ret
inc
and
xor
jnp
sbb
mov
insb
pop
lds
mov
jge
fstpt
daa
aas
mov
mov
dec
mov
mov
imul
shll
and
jbe
repnz
iret
test
test
push
dec
icebp
and
cmp
push
call
or
xchg
pop
shlb
scas
lock
mov
xchg
clc
mov
addr16
pop
popa
mov
pop
push
add
mov
push
xlat
in
icebp
cwtl
and
cwtl
sbb
scas
popf
std
in
fildl
pop
inc
sub
adc
add
or
mulb
push
and
mov
inc
xor
pop
fwait
icebp
pop
mov
cmpsl
xchg
inc
shlb
push
xor
inc
test
lcall
jmp
imulb
add
js
mov
lea
xchg
push
xor
movb
xlat
adc
jmp
call
lock
test
movsb
stos
dec
adc
cltd
mov
fidivrs
ljmp
or
addps
inc
mov
push
imul
scas
push
bound
xor
adc
mov
gs
loope
pop
test
push
std
dec
adc
cmpsl
adc
pop
mov
pop
pop
or
cmp
loopne
scas
int3
or
ret
sbb
pop
xchg
mov
mov
cmp
sub
les
lods
add
jnp
ljmp
inc
push
iret
rorl
in
pop
cmpsl
pop
inc
or
ret
test
outsl
mov
adc
and
xor
imul
insl
sub
in
stos
arpl
scas
out
cmpsl
adc
sbb
ret
fcoms
subb
and
push
outsb
inc
movsb
adc
fcomip
mov
jo
and
movsb
clc
pushf
ja
xor
push
outsl
sbb
push
leave
sbbl
sbb
aam
mov
fists
and
dec
and
div
push
loope
sbb
pop
lods
xchg
jge
push
or
sub
xor
popf
test
aam
inc
jnp
iret
aad
xor
sahf
or
ljmp
sarl
xorl
and
xlat
and
pop
mov
sti
test
cltd
arpl
ljmp
cld
dec
stos
xchg
sbb
and
cli
rcll
xor
and
push
mov
js
out
popf
pusha
inc
iret
outsb
sbb
icebp
stos
sub
aas
sbb
dec
add
enter
imul
pushf
in
iret
add
add
jge
sub
pop
adc
ds
or
cld
out
imul
xor
add
push
sub
and
imul
inc
dec
outsb
adc
dec
inc
lock
fnstsw
ss
shll
cmp
pop
mov
mov
xor
movsb
fildl
lods
ror
xor
sbb
cmp
xchg
adc
fisubrl
push
pmaddwd
sub
jp
mov
or
jb
jecxz
dec
xchg
sbb
call
mov
pop
movsb
std
fs
push
lret
cwtl
xchg
shrb
test
gs
cld
add
add
cs
loope
xchg
jg
imul
xchg
xchg
mov
mov
xor
shll
xchg
jne
ljmp
jae
push
lahf
adc
jl
fwait
nop
int3
test
cmp
sti
cmpsl
jge
hlt
mov
ret
sbb
fmull
jle
jg
mov
std
loope
dec
lea
ja
ret
lret
outsb
push
lcall
push
fisubrl
adc
lock
sub
addl
stos
adc
sbb
daa
rcrl
jge
or
push
sbbb
mov
std
imul
shll
lods
arpl
jb
ss
push
fs
out
sub
imul
xor
and
in
and
ret
shlb
movsl
push
adc
popf
push
shl
mov
cmc
mov
jle
lea
sti
xchg
je
lds
fnsave
rcrl
mov
flds
sbb
mov
int3
in
into
in
fdivrp
mov
shrl
and
cli
and
cwtl
sub
jnp
daa
inc
movsl
call
mov
sub
push
dec
mov
push
jbe
in
or
sub
sbb
push
lods
push
aas
and
jl
lret
xchg
mov
pop
adc
fadds
lock
ret
xchg
addl
push
sub
push
pop
fcoml
lods
or
icebp
repz
dec
mov
or
in
push
mov
pcmpgtd
insl
mov
jmp
mov
mov
f2xm1
roll
dec
pushf
lret
or
icebp
movsl
addr16
aaa
jnp
jmp
or
mov
dec
fnstenv
andl
mov
lret
push
pop
dec
cmp
jmp
jg
lea
adc
inc
mov
iret
or
hlt
or
pushf
loopne
aad
pop
lfs
popa
xlat
dec
jg
sbb
xchg
inc
jg
xchg
lods
and
cld
cmp
mov
rolb
repz
inc
enter
clc
push
dec
mov
rcll
cmp
xchg
lret
int3
sub
movsb
hlt
loope
sub
mov
sahf
and
bswap
xchg
mov
jo
lret
fldl
or
mov
dec
dec
push
sub
rcl
mov
out
fs
cli
inc
lcall
sbb
mov
repnz
xor
adc
repz
inc
sub
inc
mov
jmp
push
pop
sbbl
sahf
xor
push
jg
mov
xchg
out
jae
pop
repz
loope
into
cmp
mov
adc
or
clc
test
xor
stc
add
cmp
push
sbb
lds
shr
iret
lods
or
mov
outsl
inc
lods
setne
xchg
stc
mov
dec
cmp
lret
add
das
nop
jb
xchg
nop
cs
test
shl
jl
sbb
mov
mov
push
jecxz
mov
or
push
mov
fnstcw
pop
xchg
push
mov
add
and
xchg
movsb
add
hlt
fildll
mov
cltd
fistl
dec
nop
sbb
movsb
out
test
rorl
and
cmpsl
addr16
cs
imul
mov
mov
and
sti
lods
fsubrs
in
and
sub
out
stos
jo
andl
push
jmp
imul
xor
pop
push
pop
mov
mov
dec
mov
and
insb
or
sbb
sub
xlat
inc
fidivs
aas
add
sahf
pusha
jo
push
stc
or
ss
inc
push
pop
jnp
sub
sub
cmc
mov
popa
dec
pop
dec
cmp
jne
dec
push
jb
sub
mov
and
aam
repz
xchg
incl
dec
push
add
test
sarb
mov
mov
and
mov
inc
mov
imul
jmp
les
jge
out
xchg
adc
jb
dec
loopne
adc
sarl
insl
pop
out
out
dec
mov
mov
sbb
jns
rcl
lea
mov
cmp
fwait
xchg
sbb
jae
sbb
xor
mov
arpl
pop
mov
xor
push
mov
int3
pop
daa
add
push
sbb
pusha
jmp
pop
pop
push
inc
data16
ret
ss
inc
xor
movsl
inc
fbld
dec
jnp
fimuls
into
adc
jbe
clc
mov
pop
test
stc
mov
jne
fisubrl
xor
sub
mov
and
jle
push
test
mov
and
adc
xchg
push
xchg
xchg
daa
stc
gs
dec
into
mov
cmp
pushf
xlat
or
popf
mov
push
call
xor
mov
gs
jo
into
mulb
addr16
jl
cli
xchg
scas
or
bound
and
call
std
clc
scas
cmpsb
dec
push
cmp
jne
xchg
bound
outsl
mov
cmp
mov
imul
inc
cmp
ljmp
roll
sub
or
mov
xor
ss
ljmp
fistpll
je
cld
cmp
xchg
lods
lahf
test
jle
ss
xor
paddb
xor
or
push
lret
mov
mov
sbb
adc
dec
fdivrl
push
xchg
mov
imul
sub
jle
pop
sub
adc
inc
arpl
in
jb
cwtl
sbb
add
js
into
jge
int
movsl
gs
push
cmpsb
mov
jbe
shlb
cwtl
adc
xor
ss
ret
dec
fistpl
mov
clc
icebp
push
sub
jle
ds
xchg
aad
fwait
loop
push
adc
in
jmp
inc
add
call
dec
scas
adc
inc
xchg
cltd
shr
push
inc
jp
movsb
stc
lcall
xchg
push
aad
adc
repnz
imul
inc
imul
inc
mov
push
xorl
mov
dec
push
jbe
mov
pop
push
add
test
test
sub
stc
and
ljmp
dec
sbb
test
sub
test
andl
repz
out
push
inc
lcall
mov
xchg
pop
fnstcw
push
leave
mov
add
xchg
xchg
es
je
mov
adc
push
jb
jno
jg
or
lods
pop
xor
jns
xchg
outsl
std
out
mov
mov
loopne
xchg
or
mov
fbstp
sub
repz
leave
insl
aad
xchg
rcl
fwait
push
mov
movsb
mov
xor
inc
insb
pop
mov
cmp
int
test
lods
push
adcb
cmpsb
xor
or
gs
movsb
scas
lods
decl
insb
test
ret
lea
aad
in
mov
cmp
sub
sbb
ret
sbb
cld
aas
jl
ljmp
add
mov
in
jo
mov
lea
sbb
mov
and
mov
scas
mov
dec
mov
cwtl
inc
add
pusha
rol
mov
mov
mov
xchg
push
mov
cltd
inc
arpl
push
lods
adc
fwait
pop
arpl
jne
cmpsb
insl
inc
sub
leave
jmp
int3
into
lods
push
test
inc
in
mov
ljmp
loop
push
popa
ss
mov
mov
sub
xchg
mov
mov
dec
adc
data16
xor
ficoms
mov
insl
scas
cmc
push
and
jg
out
enter
pop
or
mov
outsb
adc
in
fstpl
or
and
cmp
mov
sti
xor
inc
enter
xchg
jp
lods
pop
xor
mov
aas
mov
imul
scas
pop
fiadds
push
pop
test
cmpb
or
and
cmp
sub
stc
cmpsl
test
inc
xchg
pop
mov
mov
cmp
out
nop
inc
daa
sub
cmp
mov
lock
jne
shlb
dec
shrb
inc
ss
psllq
push
out
and
lret
lods
push
mov
sub
out
iret
sub
test
pop
pop
sub
dec
ficomps
or
icebp
jl
cld
pop
xlat
and
cmp
xchg
hlt
and
enter
mov
lcall
dec
shl
sarb
push
pop
arpl
lods
notl
test
or
cwtl
in
out
and
lds
xchg
ljmp
push
mov
sbb
repz
sub
aam
xor
out
pop
jne
mov
sti
sarl
clc
mov
jmp
xorb
icebp
ror
std
fwait
cmp
mov
and
dec
push
stos
es
cltd
mov
sarl
add
ret
jno
mov
js
lcall
popf
in
cld
cmc
xor
push
adc
in
iret
or
int3
jno
jecxz
loopne
push
or
lret
mov
inc
cmpsl
xchg
sbb
out
sub
xchg
and
fstpl
mov
cwtl
jle
lock
popa
sub
lcall
cmc
xor
mov
cmpsb
adc
leave
hlt
or
xor
mov
int
cs
mov
fistps
jb
pop
or
and
jecxz
xchg
dec
mov
or
xchg
stos
loopne
xor
inc
add
das
std
inc
repnz
and
in
mov
xor
xchg
pop
dec
sub
mov
sbbb
lcall
lret
call
xchg
xchg
and
in
pusha
cld
mov
in
jle
stos
outsl
or
cmp
test
icebp
mov
not
ret
pop
jl
dec
push
inc
and
jmp
jle
jb
pop
out
adc
repz
jne,pn
lea
pop
loop
dec
das
shl
push
cmp
sbb
into
adc
add
lret
or
xor
iret
jo
divl
mov
je
loope
aam
sub
not
ljmp
xor
out
fs
out
inc
fstps
leave
dec
mov
inc
enter
xchg
mov
mov
or
mov
push
flds
sbb
loop
dec
cmpsl
fwait
pusha
push
stos
adc
dec
and
and
sub
push
sub
in
in
jbe
in
mov
push
push
clc
out
xchg
leave
xor
sub
cltd
xchg
stos
cmp
fwait
push
push
imul
mov
adc
popa
outsl
loope
insl
adc
pushf
aas
outsl
dec
adc
xchg
adc
fwait
ljmp
add
pushf
fmull
popa
in
pop
test
pop
in
mov
xor
cmove
and
aaa
dec
mov
dec
dec
or
push
mov
popa
cli
jmp
sub
lret
cmpsb
loop
stos
sub
sub
mov
dec
sub
sbbb
jmp
roll
push
test
inc
js
in
xbegin
loop
aam
adc
pop
ret
mov
cmpsb
or
sbb
into
fwait
enter
cmpb
pusha
push
in
mov
xchg
xor
jmp
mov
adc
pop
imul
add
int
cmpl
jg
imul
pop
shrb
in
fidivl
mov
shrl
mov
dec
sarb
jp
xchg
mov
xchg
push
pop
pop
notb
mov
movsl
lret
push
cmp
or
mov
scas
adc
lods
inc
cmpsl
cli
repz
jo
xchg
pop
mov
inc
jns
push
push
sub
pop
xor
mov
icebp
gs
cmc
jmp
mov
add
dec
or
mov
nop
add
rcl
and
lock
loope
mov
sub
stos
popa
cmp
mov
push
pop
lods
dec
sti
cmpsl
dec
jg
jb
test
xorl
insl
jmp
mov
mov
sub
hlt
xchg
aad
cmp
jnp
roll
sub
hlt
pop
push
rcrb
jne
sbbl
mov
sahf
add
adcb
sbb
je
scas
pop
and
inc
lods
mov
aam
and
hlt
ficoms
cmc
call
shl
testl
mov
push
hlt
xor
sbb
mov
es
push
or
mov
cld
cmpsb
test
mov
pop
cwtl
jmp
leave
add
aaa
jp
pop
popa
dec
jmp
lret
sub
in
movsb
cs
mov
mov
adc
ret
mov
pusha
js
and
jns
pushf
mov
bound
test
mov
ret
xor
xor
imul
lret
mov
out
lds
jae
cltd
push
cmp
cmp
imul
cmp
clc
sbbb
repnz
dec
sahf
or
mov
add
add
movsl
dec
push
mov
pushf
shlb
shll
lock
pop
icebp
mov
les
ds
cld
sarb
mov
cmpsl
into
lods
aad
push
jle
into
push
and
nop
xor
inc
aas
loop
pop
fdivrl
adc
cltd
sbb
lea
nop
sbb
mov
inc
or
outsl
popa
data16
aam
and
xchg
mov
andb
push
xchg
fs
or
push
xorl
lods
jg
xor
mov
mov
das
and
outsb
cmp
inc
ds
rcrl
movsb
popf
stc
xlat
jne
inc
jle
int
cld
mov
movsb
cmp
fs
fistl
call
or
rcrb
repz
dec
mov
push
mov
aad
nop
movsl
fwait
enter
negl
push
insl
icebp
rclb
stc
sbb
scas
push
mov
mov
insl
xor
lret
xor
cmp
clc
repz
cmp
dec
jg
inc
je
in
cmpsl
pop
push
fsubrl
or
mov
fstl
sbb
dec
or
push
fcmovne
das
mov
dec
xchg
sub
push
inc
and
xor
xor
repz
xor
add
mov
out
popa
mov
scas
jns
leave
daa
inc
adc
int
fildll
icebp
jle
call
lret
cltd
mov
inc
jmp
mov
mov
mov
insb
fbstp
jl
je
pop
fimuls
mov
out
mov
aam
scas
cmp
add
insl
jbe
ja
and
pop
icebp
cmpb
and
fs
jae
xchg
or
pushf
cmpsb
test
adc
mov
inc
mov
and
push
pop
shrb
out
push
inc
lret
cmp
xor
scas
in
xchg
cmc
in
jecxz
and
call
notl
xor
popa
push
shlb
jl
xchg
add
stc
inc
mov
xchg
push
or
repnz
xchg
pusha
mov
inc
jle
sbb
add
inc
lock
std
inc
xchg
ficoml
push
add
push
scas
nop
mov
adc
sbb
loopne
js
pop
ss
cld
dec
repnz
ret
xor
dec
xor
sub
cmp
aam
adc
sbb
push
stos
iret
cmp
jae
jp
mov
mov
popa
push
inc
out
push
cs
std
jns,pt
call
adcb
pushf
outsl
cwtl
bound
ss
cmp
std
mov
jne
mov
push
pop
jo
jns
aad
daa
mov
add
stos
repz
call
int3
imul
inc
add
lock
sub
in
mov
and
je
and
lret
cmp
push
inc
push
xor
sahf
jmp
xor
ret
mov
lret
xor
insb
in
arpl
inc
cmpsl
mov
in
mov
jb
inc
shrb
xor
or
cmpsl
jnp
or
daa
sbb
adc
imul
iret
jmp
push
dec
fldt
and
sbb
sub
loope
in
mov
mov
sub
enter
or
ud1
push
mov
adc
lret
dec
sub
out
add
push
fs
jne
push
cmp
fdivs
stos
mov
lahf
popa
pop
dec
jne
xchg
lcall
mov
insb
scas
sub
xchg
movsl
xor
mov
inc
enter
xlat
mov
jbe
mov
arpl
pusha
sti
mov
cld
push
add
and
aad
mov
and
mov
xor
pop
in
inc
and
and
mov
xchg
xor
push
and
in
adc
sub
sbb
mov
outsb
pop
lds
pusha
cwtl
pushf
in
cmp
push
cs
inc
test
orl
dec
lea
sbb
mov
outsb
movsb
and
std
ljmp
adc
dec
jmp
cmpsb
jb
dec
je
and
cmc
xorl
and
out
jle
mov
out
mov
lock
push
jg
xor
and
insl
out
and
mov
in
inc
test
test
shrb
push
adc
loop
mov
sub
les
mov
cli
cmp
xchg
clc
out
xor
adc
sbb
mov
jae
adc
adcl
or
out
imul
jno
xor
sub
xor
push
sbb
shll
adc
and
hlt
push
or
add
sub
cmpsb
stos
or
pop
pop
mov
xchg
int3
mov
loopne
insl
push
push
call
mov
push
daa
xorl
les
adcl
dec
sahf
inc
std
cmp
mov
fwait
notb
cwtl
pop
inc
clc
pop
push
ret
aad
sbb
adc
lods
mov
fs
jns
das
cmp
ss
lcall
pop
dec
insb
insl
rcl
clc
loopne
shrl
sub
xchg
jge
lock
sahf
or
inc
bound
call
jbe
cmpsl
loopne
into
dec
test
sub
iret
mov
push
test
and
scas
sbb
xchg
std
mov
es
fwait
in
outsb
xchg
outsl
sarb
test
dec
dec
sub
ret
xchg
mov
xchg
hlt
mov
cwtl
fs
cs
scas
jl
lcall
pop
clc
scas
inc
je
data16
ja
or
js
and
jp
in
cmp
mov
pop
and
mov
push
int
jnp
mov
jle
sub
sbb
jo
js
inc
sti
loopne
fwait
and
fsubp
cs
mov
mov
inc
pop
cwtl
push
inc
outsl
shll
imul
inc
push
rorl
rcrb
into
arpl
and
mov
and
jl
mov
sub
cmp
mov
push
rorb
sub
xlat
inc
cmp
cmp
xchg
gs
push
mov
sub
orl
nop
xor
jae
mov
push
cmp
jne
mov
push
dec
call
mov
sarl
dec
addr16
pop
xchg
jl
ljmp
cmp
cs
shrb
out
cmpsl
fadd
sub
rorb
dec
shlb
add
dec
scas
scas
test
mov
outsb
xchg
and
addr16
popa
push
loop
sbb
je
push
pop
add
stos
fldcw
mov
xchg
sbb
and
sbb
adc
jg
add
fnstcw
inc
in
scas
push
mov
roll
jne
dec
lahf
mov
stos
movsb
pop
mov
pop
outsl
in
mov
pop
sub
xchg
into
lds
scas
jbe
jae
fs
lahf
dec
xor
pop
pop
loop
sub
test
out
sar
pop
fmulp
scas
sbb
testl
test
add
xorl
pusha
pusha
xor
add
push
mov
testl
enter
sub
lods
rorb
mov
scas
cmc
or
int
xlat
outsb
xor
es
fsubrs
movsb
mov
cltd
roll
mov
fdivp
xor
nop
andl
fstp
les
mov
or
xchg
dec
gs
rclb
or
dec
push
lods
mov
int
cmc
inc
and
dec
xchg
xchg
mov
mov
xchg
mov
nop
fisubl
adc
into
inc
pop
iret
sbb
test
sbb
push
jl
dec
jp
mov
push
dec
mov
push
test
mov
into
mov
cltd
add
pop
sub
loop
fsts
lret
faddl
sbb
sbb
add
cltd
xchg
mov
js
sbb
clc
cmpsl
mov
pop
push
sahf
icebp
es
sub
out
dec
sbb
sub
adc
mov
sub
mov
and
ljmp
mov
in
shl
in
into
nop
adc
ds
aam
dec
mov
rcr
mov
test
loop
int3
add
frstor
xor
dec
push
push
jno
nop
out
push
cs
dec
lods
adc
and
xor
das
mov
outsl
xor
inc
jp
sub
call
mov
mov
rorl
pop
rcrl
icebp
xchg
jl
das
popa
and
inc
test
fnsave
lahf
cmp
pop
pop
fwait
mov
dec
fldl
mov
add
jbe
xor
das
add
jne
sbb
dec
in
pop
cmp
ljmp
add
sbb
jle
popf
xor
movsl
mov
test
pop
inc
cli
sbb
dec
stos
cmp
pop
cltd
fisttpll
push
aad
out
push
jb
xor
repnz
jns
dec
and
mov
jmp
xor
cmp
mov
test
in
mov
fildll
in
pop
addr16
fisubl
lret
jle
out
xchg
cmp
mov
scas
lock
mov
xorb
lahf
adc
inc
scas
or
or
mov
repz
push
push
test
or
jo
dec
pop
aad
xor
and
fwait
sub
cld
out
push
ljmp
mov
pop
out
inc
jnp
das
int3
pop
push
mov
jb
mov
ss
pop
sub
sti
shlb
imul
lret
pop
imul
data16
or
out
repz
scas
pop
aaa
cmp
add
jecxz
shlb
std
mov
jb
clc
dec
dec
push
dec
xor
push
sub
arpl
dec
faddl
sub
sbb
out
cli
xchg
mov
or
inc
ljmp
or
inc
es
movl
and
lds
or
or
cmp
push
rcll
or
pop
dec
fs
mov
test
xchg
push
dec
mov
add
sarl
int
or
inc
sub
int
xor
shll
lods
dec
sub
shrl
shll
sub
pushf
or
out
ror
push
movsl
in
or
repz
jmp
sbb
scas
cs
mov
inc
mov
cmp
cmp
clc
lret
inc
bound
loopne
push
insl
push
daa
pop
neg
repz
sbb
xchg
mov
push
scas
sub
ret
pushf
cltd
cmp
in
jge
sbb
sub
jno
aad
or
decb
mov
mov
popl
int
cmp
jmp
scas
pop
or
stc
jp
test
pop
inc
out
and
jo
loopne
mov
push
sub
add
jb
clc
es
cli
or
xor
jp
shl
insb
jl
mov
into
sarl
push
nop
out
add
push
pop
sub
xor
int
xor
mov
rcrl
arpl
in
test
mov
stc
rorl
inc
jl
andb
push
jns
cs
sbb
cwtl
and
jp
mov
loopne
cmp
hlt
xchg
in
mov
fadds
test
and
jp
hlt
push
nop
sub
push
push
xchg
out
std
add
jno
int
dec
adc
and
cmpsb
cmp
ret
dec
imul
dec
xor
shrl
repz
mov
jnp
and
ljmp
in
sbb
mov
out
sub
push
sub
jb
pop
cli
jae
mov
push
leave
test
ffree
push
mov
add
pop
test
clc
std
push
imul
inc
je
and
adc
es
das
push
sbb
push
push
test
and
stos
xor
movsl
rcrb
cwtl
mov
test
jmp
add
mov
sbb
jg
or
out
pusha
sub
mov
movb
pop
pop
popf
sbb
test
xchg
mov
std
out
cwtl
or
add
mov
adc
nop
or
outsl
ficoms
jmp
mov
cmc
xchg
jb
push
loope
cmp
xor
pusha
jno
ja
test
or
mov
fcmovu
and
cmp
cmp
xchg
push
pop
in
mov
pop
jnp
nop
aaa
int
sbb
or
xchg
mov
and
cltd
test
xchg
push
sbb
jl
sbbl
or
and
shlb
push
cmp
pop
xchg
sti
and
in
cltd
jbe
jg
sub
pop
mov
stos
js
rclb
stos
pop
stos
inc
sub
mov
out
inc
fildll
add
adc
pusha
jp
and
in
setnp
sbb
jge
mov
out
and
mov
xlat
adc
aas
inc
call
or
xor
jl
es
jmp
mov
outsl
sub
mov
cmc
cs
cmp
push
mov
leave
jg
pop
sbb
mov
ror
xchg
fisubl
imul
mov
testl
test
mov
inc
adc
xchg
mov
scas
sbb
popf
hlt
and
xchg
pop
sarb
mov
mov
inc
incb
ja
insb
loop
cmp
sbb
mov
repz
dec
dec
xor
inc
and
cmp
sarl
dec
mov
sti
cmp
sub
cs
sub
mov
push
xchg
dec
pop
call
cmpsl
jbe
push
pop
stos
dec
mov
insb
sub
pop
sub
fmuls
into
stos
cwtl
mov
cmp
je
out
mov
dec
sub
pop
jnp
ret
dec
push
lcall
dec
pushf
shll
pop
mov
enter
jg
push
cmp
lods
add
push
or
call
xor
shr
push
inc
or
sti
hlt
jecxz
adc
jb
add
into
jnp
pusha
inc
and
sti
jb
xor
cmpsb
fnstenv
fldt
ja
pushf
lahf
push
xor
int3
les
cmpsl
fistpl
mov
and
inc
in
dec
js
push
clc
insl
mov
pushf
jmp
xorl
out
mov
scas
and
pushf
sti
lods
or
iret
mov
lret
xor
push
imul
test
sub
push
stos
clc
cmovp
or
stc
lahf
sub
or
push
pusha
rolb
xchg
xlat
popa
and
fs
mov
and
xchg
push
mov
test
adc
cli
adc
pop
jg
pop
sbb
push
cmp
shlb
lods
mov
mov
or
or
adc
iret
dec
sbb
and
jb
mov
fidivrs
int
popf
dec
sub
scas
push
cld
or
adc
sbb
mov
pop
add
lret
mov
aam
dec
ret
insb
push
cmpl
stos
mov
in
mov
xor
mov
bound
fcomp
adc
or
pop
ror
je
xchg
dec
mov
mov
cmpsb
imul
jge
leave
jne
punpcklbw
mov
movsb
mov
cs
sahf
add
xor
incb
sub
shl
mov
xor
sbb
add
add
mov
sub
pop
xchg
mov
sub
mov
test
ret
pushfw
fcmovb
mov
notb
sbb
inc
jp
pop
das
ficoms
xchg
xlat
shl
in
or
in
mov
lret
cld
xor
lret
lcall
inc
mov
gs
mov
push
sbb
sub
mov
test
cltd
sbb
and
int3
ja
or
addr16
add
sub
ficoml
fstl
fldt
xchg
push
out
xchg
jns
pop
xchg
and
inc
inc
enter
push
sub
neg
push
repz
jmp
cmp
and
das
fs
and
push
shll
jge
mov
std
mov
dec
outsl
adc
add
mov
mov
jo
mov
sbb
jae
jnp
add
sub
dec
xor
push
inc
xor
sti
mov
xchg
out
dec
jb
push
or
out
loope
out
xchg
nop
pop
xor
mov
sbb
inc
sbb
dec
xor
xorb
sub
mov
fnsave
xchg
xchg
sarl
add
fstps
and
jp
ficomps
dec
inc
and
call
mov
out
pop
lret
stc
push
pop
jl
sarl
shl
lock
mov
aad
push
sbb
jg
dec
push
into
loop
enter
mov
pushf
arpl
cmp
jne
add
sub
imulb
sbb
add
out
outsl
cmpl
rcll
and
add
push
pop
mov
in
js
inc
cld
inc
pop
in
sub
push
mov
sbb
pushf
in
cmpsb
xchg
ljmp
cmc
daa
xchg
pop
sbb
leave
addl
fwait
sub
mov
jle
fistps
cwtl
pop
xchg
inc
xor
aas
or
or
mov
push
loopne
addr16
and
add
xor
outsb
leave
mov
cmp
sbb
je
or
adc
fwait
scas
sbb
mov
sbb
or
pop
sahf
push
test
addl
rolb
sub
cmpsl
mov
js
mov
pop
xchg
fcomps
popf
add
and
and
or
jne
lret
fisttps
and
and
shll
lock
adc
fsubl
lods
movsb
repnz
icebp
push
inc
push
fcom
dec
push
cwtl
leave
xlat
dec
and
pop
arpl
outsb
sbb
icebp
mov
bound
jl
jg
sahf
inc
insl
mov
jle
add
jl
loope
addb
mov
cmp
sub
imul
xor
aas
mov
dec
pushf
movsb
sub
cmp
int3
and
mov
mov
pop
adc
push
push
in
inc
in
sbb
add
loope
mov
int3
pop
out
jp
and
or
fisubrs
inc
mov
outsl
in
jne
mov
inc
pop
xchg
into
stos
push
ret
pop
push
ja
gs
outsb
lods
mov
stos
fldt
test
mov
int
adc
pushf
sbb
or
xor
push
xor
jl
push
fldl
mov
add
push
xchg
loopne
fdivrl
int
or
imul
or
ficomps
clc
mov
imul
fistpll
sahf
jne
cmpsb
or
arpl
lcall
aam
mov
sbbl
cmp
les
gs
jmp
shr
aad
mov
lcall
jg
jecxz
loope
add
add
push
add
fs
push
ret
mov
in
lock
in
lret
shr
pop
addb
cmp
pop
cli
scas
lea
push
dec
jp
jg
fwait
in
and
and
loopne
push
xchg
mov
roll
in
clc
xor
mov
pushf
sbb
sti
or
aaa
adc
shll
int
or
js
mov
aaa
adc
xchg
mov
aam
sub
push
rcl
lods
insb
je
push
mov
xlat
in
xorb
dec
inc
inc
push
and
add
fnstenv
xchg
dec
sbb
xchg
scas
punpcklbw
xlat
mov
sti
xor
mov
sbb
outsb
pop
or
movsb
mov
mull
aad
inc
leave
cmovae
lea
std
ret
xchg
adc
in
lods
mov
rol
add
lret
outsb
inc
mov
imulb
call
push
push
stos
das
int
call
cmpsl
pop
dec
lahf
adc
jo
movsl
mov
fisubrs
or
xchg
jnp
and
adc
push
pop
test
adc
repz
lahf
pop
adc
fistpll
ja
clc
fwait
push
or
push
bound
push
sti
fldenv
inc
outsl
xchg
gs
shlb
call
rorb
rcrb
fnstsw
cltd
adc
pop
dec
cmp
cvtps2pi
gs
cli
nop
pusha
loop
jnp
sub
push
in
xor
rcl
pop
xlat
repz
mov
dec
push
into
das
dec
jg
cmp
or
stos
push
sbb
test
and
adc
sub
and
shrl
jnp
or
push
pop
out
add
cmp
pop
pushfw
xchg
jge
jns
inc
nop
inc
loopne
sub
jmp
cmp
dec
and
scas
pop
dec
mov
mov
orb
sti
xor
lret
sub
dec
jns
jle
dec
nopl
std
cmp
sbb
jge
mov
js
push
sub
std
insl
in
xchg
ror
adc
data16
lock
mov
test
and
mov
out
pop
adc
cmovno
adc
xchg
push
sbb
cmpsl
jecxz
movsl
insb
mov
cmpsl
mov
stc
incb
mov
addr16
fsubl
and
xorb
dec
fists
mov
js
add
xor
idivl
jge
or
jl
cli
or
push
push
push
dec
cmp
add
vpcmpgtb
rcrb
in
sub
out
push
jae
mov
cli
ss
dec
mov
and
sub
pusha
cmp
sahf
lret
sub
sbb
aaa
mov
jo
hlt
xchg
fbld
push
push
add
shrb
inc
pop
sub
stos
push
push
lea
lods
mov
out
andb
mov
or
arpl
insl
shlb
xchg
popf
fs
jmp
pop
add
xor
pop
in
arpl
jb
shrb
adc
and
cmp
mov
adc
add
nop
je
call
pop
cmc
test
shll
insb
mov
jbe
sahf
xor
or
insb
lods
mov
sbb
movb
loope
or
adc
pop
ja,pt
add
cwtl
inc
ljmp
sub
test
pop
mov
push
jb
inc
cmpsl
add
js
push
iret
xchg
ret
test
add
pop
pop
int3
mov
jno
pushf
les
mov
loop
adc
jecxz
xchg
and
inc
addb
subb
sti
cmp
mov
pushf
ret
xor
adc
push
cld
or
jb
xor
mov
sbb
call
ss
jp
sbb
inc
jecxz
push
stos
jno
mov
mov
cmpsb
fistpll
jmp
xchg
mov
jne
rorl
daa
inc
scas
inc
iret
xor
and
arpl
fistpl
xlat
adc
xrelease
mov
mov
sbb
push
pop
pop
stos
xor
cmpsl
dec
inc
repnz
out
cmp
ss
inc
or
jge
pop
in
push
fs
std
je
dec
lods
cmp
push
and
or
lods
or
mov
add
loope
or
inc
mov
enter
jae
lock
push
cmc
sub
inc
fidivrs
and
inc
push
mov
adc
xor
xchg
ljmp
cmpsl
jmp
loop
adc
or
mov
mov
in
imul
enter
add
movsl
cmp
cmp
loop
xor
lahf
mov
test
scas
movsb
jno
stos
adc
mov
adc
test
and
push
call
jae
lock
notb
and
push
dec
mov
push
in
outsl
jecxz
push
adc
sub
or
or
mov
mov
mov
lahf
jle
and
icebp
and
f2xm1
pop
mov
pop
mov
xchg
inc
shrb
lcall
push
mov
push
andl
jmp
mov
jecxz
or
dec
daa
adc
jecxz
fsub
std
fisubs
bound
inc
ss
cmp
fsubs
xchg
mov
js
loopne
lahf
dec
xor
cmp
out
push
cmpsb
push
jp
ffree
clc
lods
push
sbb
or
out
jno
add
mov
fnstenv
adc
and
shr
pop
inc
pop
sti
dec
sub
repnz
xor
test
mov
fnsave
pop
cmc
jp
dec
pop
push
or
cs
xchg
iret
addr16
ss
or
mov
lds
xchg
mov
arpl
adc
mov
mov
repz
mov
out
sahf
lcall
xchg
sub
call
inc
divb
rcrl
push
into
xor
imul
cwtl
jecxz
sub
cli
xchg
xchg
out
lahf
test
jmp
shll
jo
xor
sbb
leave
cmp
mov
ljmp
push
out
dec
sti
out
jl
and
cmpsl
cmp
mov
adc
mov
mov
inc
or
mov
pop
test
add
daa
addr16
mov
sub
out
mov
jnp
mov
mov
rep
js
fldcw
xor
popf
sub
pop
mov
jne
xchg
icebp
push
outsl
fldt
lret
popf
bound
inc
sbb
aas
adc
stc
popa
loope
in
adc
push
loop
sti
sub
sub
insb
loop
sub
add
fwait
cmp
in
cmp
jns
sbb
pusha
fistl
cmp
loop
cmp
dec
sarl
out
xor
push
push
aad
push
pop
rol
fidivl
push
imul
or
lods
or
fst
out
cmc
out
adc
jne
xchg
inc
jl
fs
inc
pop
xlat
and
push
push
xchg
orb
sbb
jnp
int
push
outsl
jne
cwtl
cmp
rcll
mov
std
dec
dec
cwtl
fcmovu
add
xor
pop
enter
lahf
pop
mov
cmpsl
mov
xchg
pop
xchg
or
jp
orb
cmp
out
cmp
je
rcll
stos
mov
int
push
out
ret
add
popf
pop
lahf
sub
rcl
adc
xor
call
sbb
shll
aaa
xlat
fdivr
cmpsl
cmc
cmpsb
push
mov
mov
enter
mov
mov
inc
cmp
adc
inc
xchg
dec
jmp
pop
int
test
lods
in
and
mov
rcrb
insl
cs
sbb
sbb
pop
daa
lods
sti
pop
lret
icebp
push
adc
xchg
push
mov
orl
dec
adc
add
insb
push
xor
pop
sbb
pop
jg
enter
xchg
in
hlt
push
outsl
enter
jg
sbb
stos
rep
sbb
aad
cmp
or
das
pop
test
js
in
mov
fsub
nop
mov
adc
cli
jns
sbb
inc
dec
enter
xchg
mov
add
out
xchg
pusha
push
sub
repnz
xor
fists
cmp
nop
push
jb
cmp
sarb
sub
push
scas
outsl
mov
dec
xor
sub
stos
cmp
fmull
enter
jge
ljmp
cmc
mov
mov
shlb
inc
je
cmp
movsl
pop
xor
cli
jns
rcl
adc
xor
imul
sub
out
sub
push
mov
or
xchg
lahf
add
jle
add
xchg
enter
or
and
mov
add
sbb
lret
bound
cmpsb
dec
xor
cmp
popf
mov
into
popaw
repnz
sbb
push
pusha
push
rcr
mov
sbb
out
inc
mov
fcoms
cmp
cs
cwtl
aaa
in
sbb
and
enter
jge
sbb
cmp
pop
int
pop
int3
jnp
xor
cmc
scas
rolb
and
inc
arpl
xchg
inc
sub
sbb
cmp
add
cli
sti
ljmp
push
mov
iret
pop
mov
pusha
pop
xchg
jb
mov
add
cmp
adc
into
pusha
dec
test
inc
and
arpl
xchg
es
adc
mov
sub
adcl
in
pop
test
mov
lock
fdivrs
stos
loope
and
push
mov
js
adc
push
or
loope
fsubp
push
jecxz
pop
cmpsl
jmp
xor
test
push
pushf
push
inc
dec
mov
out
mov
ffree
xor
add
and
add
inc
pop
xor
inc
in
fcmovnbe
lahf
sbb
test
or
sub
das
jg
lock
add
nop
push
add
sti
mov
aaa
das
addr16
out
xor
mov
and
clc
lcall
pop
xchg
lret
xlat
jbe
xor
cmp
loope
pop
gs
rcrb
lahf
dec
mov
jg
xor
or
test
rclb
leave
std
out
in
imul
out
or
out
repz
cmc
hlt
xor
add
xor
test
sub
mov
xor
add
clc
aaa
xchg
hlt
test
xor
add
xlat
pop
ljmp
xchg
cmc
jns
push
repnz
faddl
out
sbb
mov
fimull
outsb
mov
xor
push
sbb
push
push
push
xchg
andb
xchg
cmp
xor
aaa
test
pushf
dec
add
sub
xchg
mov
inc
jnp
shll
mov
sub
and
pop
inc
pop
sbb
sbb
add
loope
mov
negb
xorl
es
lods
dec
data16
mov
scas
cld
in
inc
repnz
and
inc
jecxz
push
icebp
mov
outsb
jb
inc
gs
inc
repz
pop
and
cli
sub
cmp
pop
sahf
imul
inc
cld
je
fildll
aam
mov
enter
xor
and
gs
mov
xlat
pop
test
pop
lret
es
sbb
and
es
in
movsl
xchg
test
mov
and
or
lods
jg
xchg
cmc
jmp
push
aad
fsubl
mov
pusha
pop
inc
jno
ds
add
enter
ljmp
mov
adc
outsl
cmp
mov
out
out
movsl
mov
xor
cmp
leave
xchg
pop
out
std
push
lods
loope
movsl
ret
lock
aas
inc
cmpsl
or
andb
lds
cmp
pushf
decb
pop
ret
stos
es
lds
adc
jmp
mov
sahf
add
outsb
loopne
dec
add
jmp
aam
push
test
int3
and
push
dec
push
pop
in
cmp
mov
lods
sbb
insb
das
and
lods
cmc
add
out
or
jno
push
stc
xchg
ja
cmpsb
pop
cltd
xor
outsb
add
pop
stos
nop
or
lahf
jp
add
out
push
mov
rcrl
call
jnp
data16
push
or
loope
inc
hlt
cmp
mov
out
push
mov
mov
sbb
lods
add
rcrl
sub
lock
pop
aad
daa
mov
sbb
mov
mov
fisttpll
inc
cwtl
jp
push
sbb
mov
add
pop
sub
sbb
fsubrs
aaa
xchg
and
popa
mov
movsl
ds
add
xchg
lods
mov
mov
xor
dec
cmp
pop
lahf
fldt
jb
test
push
or
xor
ja
ds
sbb
jmp
cmp
test
ljmp
adc
cld
adc
mov
outsb
pushf
jne
cmp
mov
and
push
dec
or
cmp
js
and
enter
and
and
and
adc
adc
inc
mov
inc
dec
adc
mov
fcmovne
cmc
jo
sbb
jecxz
sahf
rclb
dec
add
popa
hlt
pop
xor
or
aam
push
mov
adc
icebp
sbb
mov
test
insb
sbb
movsl
sti
cmp
xchg
pushf
js
not
cmp
adc
mov
enter
mov
fcmove
cmpsb
add
dec
push
je
ja
rcrb
mov
push
jp
cmpsl
pushf
stos
xor
and
fsub
mov
add
mov
fadds
and
cmp
mov
adc
push
aad
mov
or
mov
mov
push
jb
in
iret
cmpsb
subb
gs
lock
imul
xchg
jns
ds
mov
call
iret
ds
fwait
sbb
mov
pop
mov
jno
and
xchg
aaa
mov
adc
iret
sbb
out
dec
adc
and
push
in
jnp
mov
cmp
cmp
and
fidivl
adc
adc
cmpsb
jp
loopne
push
repz
icebp
gs
dec
repz
xor
jp
inc
sar
adc
mov
fcmovnbe
add
sub
cmp
cli
or
dec
inc
loop
test
push
sti
mov
jns
cltd
pop
int
cmpsb
sub
jge
test
movntq
out
dec
into
std
dec
pop
fisttpl
into
aas
and
sti
push
es
dec
imul
stos
test
push
inc
popa
sbbl
mov
ret
or
testl
adc
cwtl
ds
push
clc
mov
dec
lret
xchg
enter
aad
cwtl
unpcklps
out
push
pop
fsubp
daa
mov
add
xchg
mov
and
mov
jmp
push
or
aas
jmp
inc
and
jl
test
pop
repnz
and
or
cs
pop
cmc
or
mov
out
cmp
pop
mov
fs
xor
cmp
in
dec
lods
cmp
test
sbb
jg
test
pop
mov
in
lcall
xchg
adc
sar
and
mov
xchg
sar
cwtl
mov
stos
pop
and
orl
je
push
das
jbe
pop
movsb
mov
push
and
mov
jo
jo
xor
aam
aaa
dec
push
push
dec
sbb
xchg
push
jnp
js
loop
das
test
mov
fisubl
add
cmp
clc
mov
fwait
dec
stos
mov
fstps
adc
std
insb
mov
outsl
dec
sub
mov
pop
in
sub
xor
shlb
inc
inc
arpl
cmp
mov
jns
sbb
lret
xchg
mov
xchg
mov
jne
leave
xor
mov
pop
into
mov
and
mov
out
sbb
jns
or
adc
out
and
mov
sbb
mov
push
hlt
inc
and
insb
nop
mov
popf
in
mov
push
out
push
aaa
movsl
sbb
scas
jae
mov
jmp
jns
dec
iret
mov
ret
mov
fbld
daa
or
sbb
clc
mov
icebp
mov
bound
fsubl
pop
mov
pop
pop
aad
jb
arpl
std
cmpsl
jae
adc
aad
mov
jmp
mov
push
test
pop
in
sbb
mov
and
mov
cmp
test
mov
push
xor
push
lret
repnz
in
xchg
push
int
sti
mov
dec
dec
pop
and
mov
adcb
lahf
xchg
mov
mov
push
cltd
pop
sub
adc
es
aam
xor
stos
mov
cmp
leave
xlat
mov
mov
rorl
sub
jo
cld
js
and
mov
mov
jb
push
sbb
cmp
mov
mov
inc
sbb
testl
inc
add
xor
loopw
repz
push
push
iret
pop
lods
aaa
cmc
pop
sub
fs
cmc
mulb
js
ljmp
and
add
rol
cmp
adc
test
pop
test
out
and
mov
xchg
inc
inc
imul
mov
jb
inc
add
mov
lock
sbb
sub
daa
inc
imul
jo
push
in
insb
insb
inc
inc
repnz
push
call
push
inc
xchg
mov
cmpsl
int
cmc
mov
cmp
pop
push
sbb
shll
dec
inc
and
and
rorb
je
sbb
mov
jb
popf
dec
mov
xchg
call
push
jp
add
and
or
outsl
mov
mov
iret
jg
mov
mov
je
cmpl
xchg
leave
in
movsl
push
xlat
pop
dec
adc
xlat
xchg
repnz
dec
ret
xor
pop
add
sbb
ret
push
jp
mov
mov
loopne
call
es
and
out
je
mov
inc
jge
dec
mov
sahf
aas
xor
pop
fdivl
mov
adc
sahf
xor
lock
leave
mov
and
inc
fisubl
sarb
inc
mov
mov
and
dec
sub
imul
sahf
adc
inc
cs
mov
xchg
into
je
in
push
sbb
sub
lcall
int
pop
cmp
das
or
mov
orl
and
add
loopne
inc
and
dec
mov
jge
aaa
mov
repnz
movsb
hlt
js
cmp
loope
jl
mov
movsl
push
cmp
xchg
mov
das
int3
fnstcw
pop
push
push
js
mov
gs
inc
inc
int
dec
inc
xchg
lock
dec
loop
mov
push
jno
cmp
repnz
mov
xchg
ret
mov
push
cs
imul
shlb
fildl
fidivrs
mov
push
xor
mov
std
loop
jl
outsb
jne
aad
cwtl
je
dec
pop
int
xchg
pop
adc
and
jle
sbb
out
jnp
lock
pop
dec
and
sti
jle
xchg
clc
mov
mov
cld
inc
or
rcrl
mov
rcll
jmp
xor
jg
push
mov
mov
xchg
push
aam
xchg
fmull
fmuls
mov
sahf
insl
in
xor
es
insb
cmp
orb
jg
jno
pushf
scas
js
retw
mov
and
fs
add
fcomp
cltd
scas
shrb
mov
push
adc
jo
sub
scas
mov
dec
loopne
jae
push
push
in
sahf
dec
add
popa
inc
lcall
loope
sub
mov
popa
or
mov
sub
enter
dec
adc
stc
out
stos
mov
jg
pusha
ret
push
popa
rclb
punpcklbw
sbb
adc
out
push
or
mov
adc
ja
dec
imul
roll
adc
mov
and
movsl
xchg
pop
int3
xchg
mov
mov
aad
push
mov
repnz
dec
push
aas
sbb
mov
and
push
push
scas
dec
push
add
add
stos
inc
jo
dec
je
bound
sbb
mov
outsb
sub
icebp
jg
jae
daa
sbb
out
jo,pt
loope
or
fsubr
outsb
xor
cmp
jmp
push
repz
hlt
jmp
repnz
insb
sbb
jmp
jmp
inc
ret
lret
das
xchg
in
rcll
jg
dec
push
aad
popa
aas
adc
int3
mov
inc
ljmp
xchg
push
push
in
int3
cltd
pushf
pop
mov
cmp
jecxz
repnz
popf
lcall
rol
out
in
xchg
ljmp
mulb
adc
push
push
jb
ffreep
sarb
ds
sub
sbb
pop
in
out
dec
jb
inc
inc
push
test
lcall
inc
add
ds
popf
push
push
call
jmp
xlat
dec
and
mov
pop
mov
iret
stos
clc
dec
jmp
inc
mov
mov
pushf
sti
cwtl
vpshab
mov
js
and
lods
cmc
insl
pop
push
ret
lcall
orb
lret
outsb
jae
mov
add
test
mov
pop
loopne
mov
cmp
pop
call
js
inc
in
push
repnz
jecxz
xchg
add
xor
mov
and
adc
mov
lds
cld
pop
icebp
shrb
lock
test
test
test
cmp
push
aas
or
xchg
push
pop
flds
push
mov
sbb
xlat
mov
in
cs
mov
push
rolb
cld
mov
bnd
lcall
inc
ret
rolb
stos
mov
cmc
inc
enter
js
sbb
rcrb
dec
cld
shll
mov
mov
out
sbb
xchg
mov
sbb
fimull
jp
inc
adc
push
lock
loopne
out
arpl
shrl
cld
cmpsb
pop
repnz
hlt
andb
xor
vprotd
mov
inc
adc
test
or
mov
aas
cltd
add
jg
push
or
aam
mov
repnz
ret
add
out
dec
or
mov
mov
das
adc
push
cmp
xchg
inc
mov
outsl
bound
std
jg
pop
add
dec
push
add
aaa
pop
mov
inc
sub
iret
ja
fidivl
sub
fmul
jns
and
pop
iret
pop
jae
out
ljmp
xchg
aas
or
clc
sbb
scas
pop
test
test
cmp
cmc
jns
jo
loop
jae
cmc
pop
shlb
add
imul
fwait
jmp
or
shlb
fisttps
mov
adc
push
lret
add
sub
add
aaa
test
cmp
movb
sarl
stc
aam
push
mov
out
pop
repz
addb
lods
call
ljmp
mov
out
call
lret
pop
sub
cwtl
shrb
push
jmp
adc
loop
mov
xchg
sub
aad
pop
push
ja
jb
les
pop
ret
and
in
outsl
icebp
filds
call
mov
jno
sbb
lds
xchg
mov
scas
gs
mov
or
jecxz,pt
cmp
daa
inc
arpl
adc
pop
dec
enter
cmpsb
pop
call
cmpl
pop
dec
lods
xor
fmull
sbb
cmp
repz
mov
jno
shr
mov
scas
add
sub
ja
pop
xchg
pop
push
pop
lahf
sbb
ds
adc
jne
jbe
scas
aam
je
clc
cmp
popf
adc
fs
js
stc
int3
ret
adc
mov
and
inc
cs
sub
and
inc
jmp
add
push
fstpl
mov
mov
adc
incb
pusha
in
cmp
xchg
pusha
add
mov
xor
pusha
cmp
xor
ja
mov
pop
js
jno
inc
push
aam
sbb
lcall
xlat
imul
xchg
push
ljmp
push
int3
inc
aaa
inc
stos
pop
or
out
das
mov
clc
jge
inc
jl
adc
ds
lret
sbb
or
aam
lods
xlat
push
movsb
pop
xor
adcl
imul
add
les
mov
es
push
push
jnp
div
jbe
push
push
sahf
cli
adcl
lods
xor
sbb
sub
cmp
inc
dec
iret
inc
aad
loope
push
stos
neg
sub
dec
movsb
ja
xor
or
mov
pop
cmp
hlt
int
fisttpll
cmpsb
cwtl
pop
scas
int
fsubrs
mov
call
jnp
test
add
or
mov
adc
mov
fnstcw
jecxz
lcall
out
inc
pop
mov
and
repz
data16
sub
add
cltd
lods
or
sbb
push
cmp
add
rcrl
clc
pop
inc
imul
adc
mov
insb
mov
test
fnstsw
dec
mov
pop
mov
arpl
add
outsb
inc
xchg
push
pop
xchg
xchg
mov
inc
imul
mov
rcl
adc
mov
cltd
push
and
in
jae
in
jg
ret
inc
pop
addl
mov
add
mov
push
add
in
jbe
dec
dec
cli
call
pushf
cs
les
lret
lods
jns
enter
cli
mov
lods
pop
mov
pusha
aam
mov
in
inc
hlt
in
loop
sub
inc
out
fs
adc
pop
xchg
bound
mov
mov
pop
jp
sarl
out
vpsadbw
aaa
push
jmp
add
push
int3
orb
jne
stc
lret
mov
jb
dec
and
sbb
adc
dec
and
lea
pop
dec
test
mov
test
mull
mov
dec
scas
jmp
xlat
xor
addr16
ljmp
shrb
adc
lea
into
mov
incl
inc
ljmp
mov
pop
jle
mov
inc
dec
add
jo
aaa
cmp
pop
push
insl
cs
xchg
nop
popf
inc
mov
xchg
jge
adc
pop
hlt
cmp
fidivrs
dec
stc
das
inc
mov
push
mov
xor
imul
or
pop
pop
ret
inc
bound
xor
jb
jle
push
push
mov
jl
lret
jnp
fs
pusha
icebp
outsb
lock
jnp
adc
adc
mul
rorl
cmp
imul
inc
and
inc
shll
les
fnstsw
mov
mov
rclb
jns
ficomps
or
and
pop
or
aas
push
sahf
xchg
imul
dec
add
jecxz
insb
data16
fisubrs
lahf
sub
xor
mov
sub
test
cs
fidivs
cmpsl
fdivr
mov
cmp
add
imul
insb
ja
xorl
in
test
dec
adc
push
nop
sahf
add
lods
cs
setl
add
frstor
loope
addr16
rep
push
add
fsubrl
out
leave
cmp
sub
sub
push
xchg
pusha
popf
dec
shr
aas
jne
xor
and
jg
mov
xor
out
mov
jecxz
pop
enter
mov
sbb
shlb
ret
sarb
dec
std
push
shl
or
xchg
pop
xor
xchg
pop
lods
inc
or
testb
or
and
sbb
xor
jno
repz
lds
pop
and
push
xor
jg
adc
rcll
sarl
lds
ds
outsb
stc
hlt
js
pop
push
mov
lods
rol
ret
mov
shrb
jle
mov
mov
outsb
dec
cmp
aaa
pop
push
fldl2t
adc
in
sub
mov
fsubrl
adc
jno
cmp
test
mov
or
outsb
ror
sbb
in
jmp
fs
inc
aam
mov
mov
add
xchg
and
jb
jo
adc
lret
jbe
shl
enter
xchg
lods
inc
cltd
pop
insb
push
inc
in
repz
lods
mov
fsubrs
fisubrl
lcall
test
mov
rorl
xchg
cmp
pusha
pop
or
mov
adc
sbbl
cmpsb
test
lret
cmp
pop
cmp
in
add
cmpsl
cmp
mov
test
outsb
fsub
mov
pushf
xor
lahf
jmp
lods
out
sbb
jae
push
adc
into
mov
jg
add
aad
cmp
roll
pop
xor
sub
xchg
ja
pusha
push
sbb
outsb
push
sub
ret
idivl
mov
jns
imul
cmp
jle
mov
mov
data16
addr16
or
int3
leave
cli
std
movsb
xchg
pop
sub
fidivrl
mov
sbb
jp
out
lahf
cmp
add
stos
ror
mov
add
ljmp
cmp
xor
das
push
xor
pusha
sbb
ljmp
repz
int
scas
and
loop
add
mov
popf
dec
fs
dec
push
or
mov
cli
sub
jb
or
mov
outsl
rcll
add
push
mov
stos
xchg
mov
js,pn
loope
mov
and
mov
cmp
add
dec
ret
fstp
mov
mov
out
je
arpl
test
out
cmp
je
mov
jle
sarl
pop
mov
in
imul
and
xchg
mov
adc
mov
sahf
sub
mov
cmpsl
out
and
or
int
pusha
aas
mov
imulb
out
xchg
pop
ret
push
imul
je
mov
shrl
je
jecxz
dec
mov
jno
std
in
sbb
in
sbb
push
sbb
add
pop
or
jp
pop
cmc
orl
cli
popa
mov
cwtl
sbb
pop
add
in
scas
ljmp
scas
repnz
shll
sti
mov
testl
dec
imul
movsl
shl
jno
dec
jo
xor
jg
lock
loop
and
dec
test
test
mov
aas
lods
mov
mov
jmp
adc
fnstsw
or
push
xchg
sub
cmpsb
vmovshdup
clc
repnz
jecxz
in
std
mov
jle
add
mov
xchg
in
mov
jae
aas
or
mov
cmp
mov
mov
and
sahf
mov
lock
out
mov
jnp
xorl
xchg
hlt
pop
xchg
aam
push
adc
pop
imul
lcall
push
cs
in
vshufps
add
fcompl
bound
test
and
jp
lods
imul
stc
sbb
xchg
cmpsl
dec
xchg
into
loope
stos
stos
xchg
mov
inc
adc
in
mov
test
mov
fadds
pop
or
test
dec
sbb
jno
dec
push
push
jns
adc
and
cs
mov
mov
cmpsl
arpl
in
pop
lods
inc
lods
pop
js
movsb
push
outsl
rcrl
in
das
or
xchg
mov
sub
xchg
sub
ret
imul
or
daa
and
add
cltd
dec
les
inc
ds
popf
cmpsb
xor
lret
imul
dec
mov
pusha
dec
push
test
jmp
data16
sub
lcall
test
or
inc
mov
sbb
add
cmovl
dec
xor
mov
inc
adc
fs
data16
fs
lret
enter
adc
lea
ljmp
mov
mov
inc
idivb
add
mov
cli
fnstsw
outsb
and
jp
xchg
push
out
enter
call
imul
and
rclb
rolb
push
pop
inc
xchg
fsubr
cmp
outsb
cmp
dec
pop
cmpl
xor
xor
add
jl
pop
sbb
icebp
sub
mov
add
jl
inc
sub
scas
in
add
pop
jp
lcall
popa
pusha
js
push
or
loope
sub
shr
push
cmp
daa
lods
jb
mov
outsl
mov
movl
sub
jg
into
sub
mov
push
pop
xchg
lahf
push
scas
stc
ss
mov
mov
mov
movsl
mov
mov
stc
fcoml
jnp
cmp
lods
cwtl
push
clc
js
lahf
mov
xchg
idiv
out
add
inc
inc
ret
jb
pop
aad
int3
test
pop
dec
jmp
sbb
es
stos
or
mov
cmpsb
clc
ss
lock
jecxz
cltd
push
insb
adc
cli
adc
inc
repnz
inc
adcl
mov
inc
sub
rdmsr
xchg
jbe
adc
andl
push
pop
push
mov
sarb
mov
pop
xor
lds
or
insb
xchg
xchg
mov
adc
test
das
sahf
inc
push
xor
mov
mov
dec
or
cld
lods
sbb
or
dec
xchg
dec
lea
stos
pop
dec
mov
mov
mov
pop
aam
xchg
cmpsb
inc
cltd
sti
rolb
xchg
cwtl
aaa
push
ficoms
pop
adc
jne
xchg
cmpsl
lahf
shl
mov
popf
xchg
lretw
push
mov
shlb
inc
rcrb
cmp
mov
jecxz
mov
negl
in
imul
rolb
imul
jne
daa
or
pop
inc
cmc
pop
inc
subl
les
jae
mov
xchg
repz
mov
adc
std
scas
xchg
leave
jle
pop
adc
mov
out
in
jnp
std
cmp
xchg
pop
popl
icebp
sbb
loop
dec
jl
or
loop
jae
sub
or
xchg
or
cmp
inc
add
aad
adc
mov
lea
xchg
sbb
fsubl
sbb
rclb
cmpsl
push
stos
xchg
and
push
jmp
add
xchg
xchg
imul
cmp
in
dec
in
jl
cmpsb
movsb
or
in
sbb
dec
xabort
inc
aaa
sbb
sbb
xor
sbb
lods
shlb
loopne
mov
jb
mov
and
imul
hlt
cmp
out
jb
imul
leave
into
ret
inc
pop
jo
in
mov
mov
mov
arpl
mov
push
pop
push
mov
or
mov
loopne
and
out
pushf
jmp
roll
es
add
mov
pop
mov
jp
sarb
jmp
lods
movsb
or
sbb
pop
jg
enter
out
fcoml
push
mov
pop
xor
mov
lods
add
and
sub
shll
scas
cli
arpl
pop
pop
test
add
into
jle
push
xchg
mov
pop
andl
push
lock
mov
xor
mov
dec
aas
lods
lock
cmpsl
rcl
xchg
in
popf
mov
fiadds
in
and
aam
jb
negl
rcl
push
notb
lock
stos
stc
mov
popa
mov
and
bound
mov
out
mov
xor
enter
sub
push
mov
inc
inc
nop
dec
fstps
add
test
and
mov
cmp
mov
cld
add
cmp
lock
add
and
xor
adc
push
mov
pop
xchg
pushf
fsubrl
or
loope
cmpsl
inc
cmp
dec
lock
jmp
cmp
jne
pop
and
lret
jne
test
loop
out
push
fistl
jmp
repnz
in
xchg
mov
xor
mov
pop
mov
jp
cmp
adc
fcmovbe
inc
pushaw
cmpsl
gs
stc
mov
cmpsb
ret
leave
addr16
mov
xor
mov
addr16
inc
pop
and
stos
inc
adc
icebp
loope
pop
sarl
adcb
adc
shr
cmp
in
cmc
adc
adc
and
loop
sub
add
xchg
enter
push
sbb
sti
cli
pushf
in
xchg
test
jae
lea
fwait
jg
faddl
adc
jnp
adc
les
dec
sbb
cmc
sahf
adc
or
sub
dec
xor
or
imul
mov
adc
dec
mov
jno
shlb
aas
mov
popf
addb
lods
fdivrp
inc
dec
jbe
pop
sub
add
xlat
jg
ljmp
repnz
dec
add
inc
cmc
shrb
movzwl
sti
push
and
inc
jb
popf
inc
push
pop
or
sbb
out
add
pushf
aas
ss
pop
pop
mov
xor
in
or
inc
cmc
sbb
imul
cmc
fnsave
jbe
lahf
stos
mov
cmp
inc
movsb
xchg
out
fs
clc
stos
and
mov
addr16
mov
mov
hlt
mov
inc
jg
xor
fcompl
dec
into
aaa
fsubl
dec
inc
mov
cmp
inc
inc
pushf
sahf
fstpt
into
inc
loopne
loope
mov
adc
jo
je
fsub
ret
jle
jo
mov
push
popa
pop
divl
fcompl
sub
jb
jge
fs
xchg
rcrb
mov
mov
add
stos
cmp
or
mov
cld
or
fldt
in
xchg
or
lahf
dec
ffreep
daa
scas
outsb
dec
cmp
mov
and
in
into
das
pushf
ret
jmp
cmp
cmp
mov
jo
mull
sbb
fimull
xchg
dec
xor
into
pop
or
sub
and
lahf
mov
mov
jmp
rcrb
test
adc
push
inc
scas
sbb
fidivl
inc
push
push
decb
xchg
ficompl
cwtl
push
aas
std
push
inc
out
add
nop
icebp
xchg
or
jno
or
pop
hlt
repz
mov
lods
in
or
fnstenv
xor
mov
push
push
negl
add
mov
or
inc
clc
pop
push
fldcw
xchg
mov
mov
aad
mov
push
sub
punpckldq
mov
mov
push
fldenv
pop
or
arpl
xchg
mov
adc
fcompl
stos
mov
adc
add
ret
jmp
out
xlat
sub
xor
add
testb
orb
div
call
test
test
push
movsb
add
sub
fisubrl
adc
adc
outsl
pop
mov
xchg
arpl
outsb
jns
cli
test
or
rol
js
iret
xchg
mov
cmpsl
movsl
and
fucomip
pop
dec
aas
xor
and
mov
das
stos
push
bound
les
test
cmc
jecxz
push
sbb
xchg
xchg
daa
jl
mov
mov
mov
lahf
jae
addr16
iret
out
fidivl
adc
sub
xorb
lret
std
sahf
lea
xlat
add
dec
pop
fsubrl
adc
xor
jo
push
int
pop
js
ss
jnp
and
inc
add
outsb
movsb
nop
pop
nop
adc
nop
lods
mov
xor
stos
pop
std
mov
sahf
fistpll
dec
cli
mov
int3
repnz
mov
nop
mov
paddusw
mov
inc
and
ret
mov
sbb
xor
dec
push
movsb
adc
and
adc
jo
adc
int
cmpsb
inc
push
cltd
fistpll
into
sar
dec
xlat
rcrb
push
sub
je
aam
sbb
sbb
pop
push
imul
mov
dec
cmp
cli
or
out
push
gs
stos
mov
rorl
jne
jae
aad
xchg
add
inc
mov
test
fidivrs
outsl
ljmp
pop
cld
xchg
enter
mov
mov
int3
push
cmp
scas
sti
sub
lods
jnp
out
dec
push
or
cmpsl
loop
push
mov
fnstcw
push
iret
jbe
movsl
data16
jo
dec
xchg
xchg
lcall
sbb
jl
imul
mov
dec
in
push
and
ja
cmp
notl
mov
pusha
daa
push
push
add
pop
call
outsb
jle
nop
sbbb
mov
and
jnp
add
stos
iret
pop
push
sti
dec
xchg
hlt
cmp
pusha
add
mov
cmp
xchg
and
inc
aad
xchg
cmp
data16
xchg
add
fwait
out
andl
jecxz
push
bound
sub
ja
jbe
mov
pop
push
insb
push
movsl
out
cmp
ficomps
shll
mov
sbb
out
add
je
push
scas
xchg
mov
out
enter
jp
lea
jae
es
dec
mov
cmp
leave
sbb
sahf
cli
lods
or
push
push
push
lahf
pusha
dec
call
pop
mov
xor
sbb
xor
clc
leave
stos
push
and
adc
lahf
ljmp
push
testb
push
test
pop
pop
movsl
fidivl
js
mov
iret
mov
sub
jae
cmp
aaa
adc
adc
mov
push
push
enter
mov
hlt
sahf
data16
leave
push
divl
lcall
leave
pop
loopne
gs
stc
std
js
sub
xchg
nop
xchg
mov
or
mov
aaa
cmp
mull
fidivs
add
push
jecxz
mov
mov
fdivr
xor
stos
mov
jno
dec
sub
loopne
ret
xlat
int
or
push
outsb
inc
add
je
stc
pop
in
pop
stos
add
test
mov
jp
jbe
cld
int
jle
push
lods
sub
frstor
sarb
mov
loope
insl
in
into
xchg
pop
dec
add
outsb
lods
out
daa
cmc
sbb
dec
mov
insb
in
mov
xor
and
push
sub
mov
cmpsb
gs
ljmp
push
dec
dec
ja
dec
mov
add
mov
cmc
in
call
ret
sub
add
test
push
cmp
fisttps
sub
mov
add
lods
jecxz
ret
cltd
or
loop
lea
mov
or
jae
cmp
add
add
loope
dec
aam
or
mov
dec
shlb
pop
loopne
repnz
aad
sarl
dec
pop
push
stos
imul
out
jle
cmpsl
xor
push
scas
jae
dec
aad
rorb
fwait
mov
adcl
pop
jno
lea
arpl
push
mov
cmp
adc
lea
cmp
jl
mov
jne
pushf
xor
dec
dec
pop
add
pop
imul
outsl
test
and
test
clc
lret
mov
jmp
orb
pop
fdivs
jae
mov
movsb
pop
outsb
ja
cmp
and
pop
sub
mov
cmpsb
fidivrs
and
xchg
sub
lahf
cltd
ss
add
fdivl
popa
mov
mov
lods
fstl
gs
xlat
lock
mov
out
nop
nop
loopne
add
mov
jb
pop
push
and
sbb
push
addb
fldt
xchg
dec
mov
std
mov
push
inc
cmp
rclb
mov
int3
add
sub
xchg
push
xchg
stos
outsb
outsb
pop
gs
iret
pop
inc
xchg
stc
push
mov
or
popf
imul
jp
or
jge
xchg
sbb
xchg
jno
in
jle
jns
mov
and
mov
add
or
test
push
std
nop
loope
jge
xchg
in
mov
cmpb
out
fcmovnbe
fs
sub
out
sahf
dec
lret
mov
mov
xchg
je
loop
mov
lret
fmull
out
inc
dec
inc
pushf
or
sub
xchg
inc
cmp
movsb
inc
stc
cld
pop
adc
repz
xor
pop
add
leave
bound
std
in
inc
popf
stos
insl
sbb
lcall
repz
popf
mov
push
pop
lea
jge
push
mov
mov
in
mov
pop
sub
push
jne
mov
pop
shrd
ret
lcall
jge
jp
insb
xchg
das
test
rcrl
lds
enter
xchg
sub
mov
and
jg
pop
fisttps
out
push
push
in
fadds
sub
inc
pop
in
hlt
sarl
icebp
adc
and
imull
mov
or
mov
in
je,pt
xchg
adc
mov
dec
cmp
inc
fs
mov
inc
add
daa
xchg
aas
lahf
cwtl
jb
test
push
jno
pop
into
mov
xor
sbb
and
lods
cld
ds
call
or
in
cmpsl
sub
fcoms
into
loop
mov
cld
cmpsl
loopne
sti
sub
xchg
cmp
mov
shll
lods
xor
in
mov
and
mov
jmp
std
dec
jp
cmpl
jg
out
adc
scas
pop
ljmp
pop
fcoml
cmp
sub
xor
adc
lock
jg
lret
or
mov
adc
push
es
cmc
fs
dec
cmpb
xor
int3
lods
lock
jb
dec
int
xchg
dec
dec
loop
adc
pusha
push
fs
lds
mov
stc
je,pt
jge
jb
pop
xchg
repz
pop
cmp
dec
cmp
ja
xlat
jae
cmp
out
mov
enter
dec
popa
inc
pop
imul
es
adc
mov
pop
and
orb
or
add
xor
pop
mov
js
enter
cmp
jae
sbb
popf
sti
or
fmull
repnz
scas
mov
jnp
mov
pop
out
mov
mov
mov
push
repnz
adc
pop
rcl
sub
and
ffree
sarl
sub
or
aas
jo
test
jae
into
dec
not
mov
imul
add
lods
or
sbb
xchg
outsb
dec
aas
test
inc
imul
mov
scas
or
cld
pushf
push
dec
xchg
jae
xchg
dec
pushf
pop
int
jmp
sbb
inc
in
add
jle
outsl
es
jbe
std
call
loope
dec
jae
lea
in
xchg
sbb
and
adc
inc
and
in
xor
std
sti
xlat
lds
ja
in
adcl
or
pusha
fwait
push
in
cli
sub
cs
mov
lods
das
loopne
inc
loope
stc
mov
mov
or
push
stos
fdivs
dec
cmpb
fdivs
xchg
dec
clc
push
aad
pop
stos
pusha
sub
ret
sbbl
faddl
cmp
pop
popa
push
xlat
adc
cmp
aaa
outsb
push
push
jmp
sti
mov
popf
repz
jnp
movsl
add
xor
les
ror
and
icebp
mov
test
fists
pop
mov
pop
xor
sbb
aaa
clc
xor
push
inc
jno
ja
mov
cmpsl
sbb
fdivl
daa
adc
imul
add
ljmp
pop
mov
sub
popa
mov
js
xchg
imul
arpl
loopne
xchg
push
xor
jbe
aas
repnz
push
cmpsb
movsl
imul
popa
loop
mov
scas
repz
pop
js
jl
aam
out
mov
mov
sbb
scas
cmp
mov
push
mov
aad
in
dec
pop
sti
xchg
adcl
hlt
mov
sub
rcrl
cwtl
mov
stos
or
or
inc
inc
in
dec
jp
ret
les
outsl
leave
hlt
jb
sbb
clc
repnz
jl
cwtl
push
mov
xor
popa
mov
popl
repnz
cmc
sub
lahf
inc
js
ror
add
adc
add
mulb
inc
push
xchg
adcl
adc
inc
into
xlat
xor
loopne
insb
int3
jns
into
ja
lahf
or
clc
rorb
sbb
or
rorl
test
adc
sub
pop
outsw
insb
push
pop
bound
test
xor
push
jo
mov
mov
sbb
lahf
idivl
mov
push
xor
fmul
clc
sti
inc
jns
insb
popa
sub
dec
ret
sub
shlb
adc
jecxz
jns
xchg
jp
les
hlt
int3
aaa
mov
mov
xor
push
mov
mov
push
add
dec
jmp
jle
mov
dec
xor
call
inc
idiv
sub
sbb
in
movsb
sbb
mov
fldz
adc
xchg
scas
mov
in
movsb
aas
mov
adc
inc
sub
xchg
pop
imul
push
mov
loope
mov
sti
sub
test
testl
pop
pop
inc
je
mov
imul
mov
jge
xor
inc
mov
nop
out
out
inc
inc
mov
test
push
and
cld
jo
jg
insb
sub
and
sub
push
pop
movsl
aas
mov
icebp
inc
fwait
pop
mov
push
dec
xchg
push
inc
test
mov
in
mov
fdivl
lcall
daa
out
movsb
or
jb
pop
or
leave
xor
ja
or
push
into
fdivr
xchg
jge
dec
xchg
jg
push
lods
push
mov
notl
sub
cmp
xchg
xchg
loopne
scas
sub
in
aaa
jl
jle
jg
and
push
arpl
and
lret
out
js
sarl
jecxz
push
jg
sbb
repnz
mov
inc
xchg
fcomps
das
cs
sbb
pusha
push
and
fwait
push
jg
xor
and
dec
lods
and
std
inc
icebp
or
add
cmpsb
sbb
int
ficoml
push
gs
ja
add
sub
mov
fdivp
lock
das
jns
jno
jge
cmpsb
mov
fistpl
fwait
xchg
inc
mov
sti
mov
mul
lods
insb
mov
or
pop
and
sub
loope
xchg
loopne
cmp
roll
mov
or
lds
or
xchg
mov
dec
and
pop
negl
push
rcrb
xchg
inc
add
iret
mov
fs
cmp
xchg
cmp
lahf
test
jmp
bound
rcl
xchg
lahf
xchg
push
cmc
ljmp
cmp
cmpsl
das
xchg
shlb
dec
push
pop
mov
sbb
xchg
dec
xchg
inc
sub
sub
mov
call
mov
stos
push
push
test
out
inc
jb
aas
jmp
dec
sub
fldt
inc
jo
repz
sti
mov
int3
call
add
test
outsl
mov
mov
xchg
test
jecxz,pn
jns
fnstcw
lahf
pop
jmp
inc
jle
gs
gs
ja
sbb
test
xchg
daa
sub
in
jno
std
je
into
cmp
xor
sbb
inc
inc
lods
out
call
xlat
rolb
mov
mov
xchg
mov
dec
mov
mov
in
pushf
daa
or
adc
push
in
int3
scas
adc
mov
scas
iret
lret
or
jns
repz
scas
jne
adc
pushf
xchg
aad
mov
xchg
sub
xchg
mov
iret
dec
shr
into
sbb
mov
insb
cltd
in
push
in
xor
push
movsl
cmp
mov
aaa
lods
push
data16
and
lcall
stos
adc
mov
orl
jle
cmc
xlat
jnp
sahf
or
inc
jle
mov
cli
push
fcmove
icebp
lret
jae
jl
out
pop
rclb
xchg
call
lods
es
xlat
ds
xor
fcoms
and
sbb
nop
mov
icebp
data16
mov
add
sbb
aas
pop
jns
mov
hlt
add
cmpsb
jo
xor
add
pop
addr16
mov
xor
push
adc
aas
xor
lods
into
adc
mov
xor
mov
mov
imul
js
popl
inc
push
fldcw
sub
les
into
cli
and
mov
leave
dec
jns
xor
fst
sbb
mov
sub
dec
dec
movsb
sarb
fldl
mov
hlt
inc
xlat
shl
aaa
les
loopne
cmp
mov
std
cmp
push
loope
fisubrl
mov
push
xchg
push
dec
popa
fstpl
out
jbe
popf
ss
fisubrs
add
adc
mov
das
jle
cld
scas
icebp
rclb
scas
das
pusha
mov
push
jnp
clc
push
add
adc
mov
test
adc
jb
or
hlt
mov
sub
xor
push
jne
or
push
repz
mov
mov
pop
pop
sahf
dec
and
addr16
out
adc
xor
mov
arpl
push
iret
push
lods
xchg
inc
xor
and
dec
xchg
and
movb
clc
cs
xlat
pop
out
xor
movsb
xor
stos
jp
hlt
jae
mov
jnp
mov
pop
mov
push
jmp
sub
push
cmp
mov
sahf
daa
push
add
addr16
pusha
popf
test
mov
dec
in
outsb
std
fsubr
in
mov
and
adc
push
icebp
lock
dec
nop
mov
daa
aad
iret
mov
mov
push
loopne
xchg
add
fldcw
push
sbb
mov
cmc
and
xchg
movsb
mov
les
sbb
call
cltd
sub
pop
inc
jmp
out
cmpsb
and
jmp
in
xchg
icebp
and
mov
jg
cmpsb
rol
or
lds
dec
mov
mov
js
test
or
xchg
andl
movsb
fs
aas
add
cltd
in
mov
push
mov
xchg
push
daa
jmp
sbb
jno
lret
stos
in
test
push
add
jnp
call
sbb
movlps
push
pop
inc
push
mov
xorl
aad
pop
in
pop
pop
mov
dec
cltd
mov
inc
add
pop
adc
cmp
push
fbstp
js
stos
cmp
fldl
sahf
aas
mov
dec
popl
ljmp
sbb
or
push
mov
pop
xchg
out
jne
aaa
loopne
jae
test
fwait
ja
mov
in
inc
cwtl
sbb
cmp
jo
fcomp
fildll
push
fsubrl
add
es
xchg
adc
int
adc
mov
mov
or
push
shlb
adc
pop
push
dec
push
push
pop
roll
mov
add
and
lret
fisubrl
xor
mov
imull
lods
das
mov
jne
shr
fcom
mov
cmp
and
push
pop
lea
roll
sti
adc
sbb
xchg
cmc
mov
out
jmp
shl
and
xchg
sub
cld
outsb
mov
out
out
fisubs
ret
adc
mov
imul
sub
test
data16
or
jle
mov
lret
cmpsl
or
mov
jg
jl
mov
mov
lea
ret
or
mov
lods
jp
fsubl
movsl
scas
movsb
lds
repnz
cmpsb
pop
dec
pop
dec
mov
pop
lock
mov
aaa
jmp
dec
cmc
add
jmp
jae
aam
cmp
mov
push
lahf
imulb
lcall
cmp
fs
jmp
inc
cmpsl
push
mov
cs
lcall
movsb
dec
lods
test
inc
shlb
jg
cmpsl
imul
test
dec
or
mov
por
mov
sbb
mov
dec
mov
inc
push
fwait
or
fcmove
adc
adc
pushf
ret
push
jo
sub
pop
mov
and
outsb
xlat
xchg
out
pop
jae
lret
lcall
pusha
add
mov
dec
xchg
pop
daa
lret
mov
mov
mov
xor
push
ds
scas
sti
jle
jmp
loope
clc
clc
jmp
jae
test
jp
adc
call
inc
xchg
xchg
xor
sbb
fsts
and
or
lock
sbb
push
jo
pushf
sbb
jns
and
inc
imul
pop
std
pop
push
pop
int3
mov
push
daa
in
inc
lock
hlt
add
jne
push
xor
pop
xchg
decb
push
repnz
adcl
cwtl
jmp
mov
sub
mov
mov
adc
xor
pop
inc
sti
lahf
pushl
hlt
adcb
lret
rcrb
jg
sarl
add
cmp
int
or
lock
jnp
dec
dec
loope
pop
push
mov
jb
stos
lret
cmp
or
cli
jns
jo
mov
jp
cmp
out
add
xor
nop
jecxz
pop
cmpsl
push
or
and
sub
push
js
mov
je
or
faddp
sub
pop
gs
add
dec
inc
push
sbb
push
push
pushf
cmp
push
sub
xchg
repz
in
jne
dec
cmp
pushl
loop
adc
sub
or
loope
push
cmp
ja
and
or
pop
cmp
mov
insb
or
aad
jge
sub
in
ret
ss
xchg
xchg
lock
mov
add
push
outsl
pop
outsl
lods
pop
data16
popa
addr16
ljmp
movsb
push
adc
out
ret
sbb
ss
lss
dec
in
ja
or
loopne
mov
cmp
sub
int
test
sti
cmc
cmc
fdivs
xchg
scas
mov
jg
sbb
insl
xor
jl
shll
xor
loopne
cmp
movsb
mov
lret
mov
out
ret
mov
push
add
inc
pusha
lock
out
adc
xlat
sub
mov
inc
pop
add
rorb
in
sub
add
testb
sbb
sbb
sti
rcl
pusha
ja
inc
xor
mov
loope
arpl
divl
std
mov
pop
jo
scas
lods
adc
mov
notb
inc
adc
add
rolb
add
cmp
xlat
xlat
mov
test
insl
sahf
lahf
mov
test
aaa
mov
dec
mov
sbb
inc
mov
add
jbe
aaa
mov
mov
jl
or
das
and
cmpsl
push
cwtl
enter
jle
test
add
or
in
cli
add
int3
ret
fs
mov
data16
sbb
mov
adc
xor
jno
and
movsb
orb
or
fwait
and
cli
ja
in
mov
lods
mov
add
loopne
jae
cmpsb
aam
sbb
and
fdivs
movsl
inc
sahf
mov
pop
subl
pop
add
xchg
dec
push
dec
mov
sbb
ljmp
jg
mov
mov
xchg
or
xchg
xor
jbe
pop
mov
pop
xchg
stos
adc
cld
xchg
or
sbb
mov
xor
cwtl
bound
adc
insb
adc
movsl
fs
iret
cmpsl
push
loopne
xor
cmp
mov
xchg
iret
ds
xor
or
push
test
je
sbb
aas
aam
adc
imul
test
lahf
pop
sbb
mov
ds
dec
ret
loop
dec
cmp
retw
shrb
gs
pop
mov
push
addb
or
icebp
sbbb
scas
cmc
jno
fwait
icebp
cmp
pop
sahf
in
xor
in
jmp
cmp
stos
pop
pop
lods
and
jo
imul
dec
subl
popf
fimull
icebp
notl
rcl
out
pusha
jp
dec
sbb
xor
mov
mov
movl
arpl
add
outsl
add
push
xor
jno
jb
lret
dec
fwait
sub
iret
dec
or
lret
stos
stos
addr16
jb
int
cmp
rclb
sti
sub
fidivl
cmc
sbb
mov
jbe
sahf
scas
mov
dec
mov
adc
dec
or
subb
push
lods
js
sub
add
xlat
and
mov
insl
mov
or
sarl
cmpsb
jb
out
sti
pop
jnp
adc
shr
fsubr
paddusb
mov
mov
adc
sti
add
repz
or
adc
add
cmpsl
fmul
lret
cli
jno
mov
scas
jge
sub
das
icebp
movsl
dec
dec
sbb
out
push
fldt
xchg
shll
ret
andb
cmp
mov
mov
adc
repnz
pop
int
adc
pop
movsl
mov
lcall
pop
inc
cmp
push
push
cwtl
jno
xchg
aas
and
insl
mov
out
rcrl
inc
and
add
popf
xorl
ss
inc
incb
int3
dec
fldenv
mov
insb
add
movsb
xchg
inc
daa
ljmp
shr
cmc
adc
std
xor
sahf
add
es
rcrl
arpl
mov
inc
movsb
jo
mov
mov
jle
and
sub
les
scas
mov
into
mov
push
or
psrlq
gs
cmp
fs
mov
cmpsb
rorb
ss
xor
gs
and
and
movsl
inc
bound
int
push
mov
in
xchg
jg
bound
add
cmp
dec
stos
xlat
clc
push
ret
enter
std
dec
jnp
lret
jbe
sbb
dec
inc
and
and
jmp
sub
in
in
sub
clc
insb
push
pop
in
xchg
sub
jp
mov
movsb
adc
mov
ret
mov
or
nop
xlat
jnp
and
inc
lcall
cmp
push
inc
cwtl
pop
pop
sub
pop
add
mov
das
or
push
in
or
hlt
mov
or
mov
std
pop
iret
fs
sbb
add
rcr
incl
and
mov
popa
in
imul
xchg
jge
stos
insb
add
aaa
arpl
push
mov
inc
rclb
adc
ds
movsb
leave
cmpsb
mov
fs
ds
jg
cltd
jge
cmp
mov
or
call
sbb
dec
cmpsl
jb
andl
jle
and
sarl
xor
ss
cmpsl
incl
or
fnsave
mov
add
mov
repnz
lock
adc
push
jno
movsl
sbb
lahf
xchg
bound
inc
fidivrl
jns
icebp
inc
out
call
xchg
mov
and
mov
mov
jge
cmpsb
xchg
sbb
iret
cmp
jbe
push
movsb
aas
lahf
push
mov
icebp
push
sub
push
mov
cmp
xchg
out
or
sbb
jae
jne
sahf
or
xor
clc
mov
push
mov
cwtl
cmpsl
mov
mov
int
jae
mov
bound
push
or
movsl
push
int
fnstsw
xchg
add
shrl
add
test
mov
popf
int3
xor
xchg
cs
mov
or
lret
add
cmpsl
or
icebp
sub
cmp
aad
int
loopne
cmp
jmp
pop
xchg
push
inc
and
es
push
dec
mov
add
lret
nop
mov
push
les
test
sub
mov
cmpl
lcall
outsl
mov
push
xchg
roll
mov
inc
sbb
mov
loope
jo
jmp
aaa
hlt
jbe
push
mov
icebp
out
das
int3
mov
fiaddl
cs
xchg
fisttps
out
pop
insb
cmp
mov
inc
sbb
pop
lahf
xor
ret
xor
jle
pop
outsl
adc
lock
mov
pop
inc
mov
dec
enter
lea
testl
arpl
adc
sbb
sbb
por
cmp
adc
and
sahf
mov
cmpl
dec
xchg
push
xchg
inc
adc
jl
adc
sub
fwait
mov
or
cwtl
pop
push
aam
jb
xor
inc
adc
in
jge
fwait
mov
cmp
mov
xor
int3
mov
imul
cmp
mov
mov
dec
insl
mov
and
push
jecxz
xor
xchg
mov
dec
popa
pop
or
inc
mov
fs
mov
mov
mov
xchg
adc
or
xor
xor
leave
leave
cmpb
std
das
jmp
and
lcall
dec
lea
pop
bound
movsb
rcrl
shll
cmp
push
ds
sbb
fistpll
adcl
push
xchg
mov
dec
fwait
neg
push
and
into
cs
sbb
out
nop
hlt
push
jae
cmpsl
xchg
or
test
repnz
shl
adc
xchg
sub
shlb
inc
sub
mov
jno
sbb
bound
addr16
add
shrb
cmp
mov
test
aas
and
clc
stos
fisubs
call
aas
fs
mov
inc
add
lea
fcomp
out
jo
cltd
fstl
xor
leave
mov
out
cmpsl
test
lcall
jl
pop
pop
push
fsubs
fisubrl
push
decl
pushf
fstpt
add
sbb
sub
fisubs
mov
mov
cmc
dec
iret
pop
movsl
adc
and
dec
les
inc
outsb
mov
xor
hlt
xor
jae
xchg
repnz
mov
ficoml
pop
imul
idivl
sahf
scas
dec
jmp
or
cwtl
lret
imul
cmp
mov
xor
cmpsl
or
in
sarb
push
icebp
sbb
into
push
push
sub
divb
hlt
mov
inc
les
scas
hlt
dec
inc
lds
lock
xor
rcrl
stc
out
jg
ds
mov
mov
imul
xchg
push
lds
dec
lret
pop
icebp
mov
mov
jge
mov
add
loop
roll
mov
es
sbb
pop
xchg
cli
subl
aad
ret
aaa
mov
ror
xorl
aas
mov
loope
mov
pop
out
dec
lock
push
jmp
xchg
testb
sbbl
mov
and
movsb
rcl
dec
sahf
cmpl
popa
lock
call
cmp
fistps
in
test
and
dec
sub
jle
aad
scas
mov
inc
sub
call
out
lock
jbe
out
jmp
in
gs
scas
mov
jmp
in
into
and
adc
insb
pop
jmp
sbb
fidivrs
subb
popa
add
stos
push
cwtl
jmp
aas
pop
push
mov
xor
mov
in
add
push
xchg
push
xchg
data16
mov
mov
rolb
add
les
icebp
aaa
push
mov
fsubr
lea
sahf
pop
pusha
jmp
cli
mov
add
xor
pop
cmc
icebp
into
mov
test
arpl
inc
inc
popf
scas
mov
ss
mov
inc
pop
aaa
gs
push
int
xor
xchg
aaa
movsl
test
fstl
push
lret
popa
loop
jp
adc
xchg
pop
nop
hlt
mov
cmp
fidivrs
jb
pop
fisubs
call
sbb
jl
jmp
sbb
add
pop
dec
orl
xchg
pop
dec
ja
ret
cwtl
setl
cmpl
mov
and
dec
pop
mov
in
mov
pop
push
jge
test
sub
movsb
pop
or
mov
sub
cmpsb
push
xchg
shlb
push
mov
in
jmp
cwtl
push
xor
ss
mov
popa
roll
cmp
mov
and
or
sbb
aas
dec
stc
xchg
mov
sti
mov
push
inc
sub
xchg
jmp
imul
icebp
adc
jnp
xor
xor
mov
int3
or
pop
xchg
mov
testb
mov
xor
lahf
push
in
nop
fcoml
mov
mov
sub
loope
rcl
pop
clc
xchg
jp
test
ret
inc
mov
inc
inc
nop
xchg
popf
push
andb
cltd
test
aad
icebp
fidivl
pop
outsl
lods
imul
sub
ds
jno
out
sub
xlat
js
dec
sbb
int
jmp
mov
shlb
mov
test
call
jbe
xor
adc
jl
pop
dec
pushf
inc
mov
pop
sub
cmp
ficomps
test
xor
icebp
inc
jb
add
xor
std
out
ficomps
aaa
jns
rorb
mov
jmp
cmpsl
jns
add
test
xchg
xor
es
cmpb
popf
pushf
xchg
notl
idiv
lcall
outsl
dec
push
sub
pop
test
mov
movsb
call
test
push
in
cmp
xor
mov
adcb
mov
push
mov
dec
pop
in
adc
mov
mov
adc
int3
fmul
push
fsubs
add
insl
cwtl
inc
and
popa
jns
mulb
adc
repnz
fistl
xor
inc
testb
cmp
cmp
daa
sti
lret
cmp
lds
adc
mov
loop
mov
nop
lcall
cmp
inc
adc
xchg
arpl
mov
cmpb
xchg
jge
aas
lea
mov
or
or
std
or
lds
data16
pop
jae
pop
ds
xchg
push
jge
mov
das
add
and
mov
pop
push
dec
mov
xchg
inc
xchg
pop
cmp
and
and
mov
aam
cmp
pushf
inc
cld
pmaxub
xchg
cli
sbb
lret
add
cwtl
mov
fwait
or
sub
lods
popa
dec
pusha
inc
pop
hlt
pop
sub
or
pusha
mov
xor
icebp
dec
mov
sarb
jecxz
gs
enter
mov
aam
pop
fstpl
int3
data16
or
je
or
cmp
dec
clc
mov
xchg
outsl
mov
stos
popa
sub
mov
inc
lods
pushf
fcmovu
sbb
xchg
jnp
cmp
push
data16
stos
add
and
add
mov
mov
and
xor
add
mov
cmpl
inc
sub
inc
je
call
adc
clc
add
adc
cld
out
das
xor
adc
mov
sub
push
pop
or
mov
jg
mov
dec
xor
js
jbe
fmuls
stc
shrb
xchg
mov
out
push
cmpsl
mov
loopne
mov
shl
cmp
jae
aaa
in
mov
jb
cmp
xchg
pusha
scas
jnp
mov
adc
jp
les
insb
push
pop
jle
mov
and
leave
insb
out
and
mov
mov
mov
jnp
and
pop
sbb
cmc
mov
in
cmovl
daa
lods
popf
mov
mov
jne
imul
mov
jno
mov
pusha
test
lea
push
stc
clc
stos
or
test
insb
mov
mov
fists
xchg
repnz
fcmovnb
pop
outsb
sti
xchg
mulb
jne
jns
or
xchg
mov
jmp
es
cmp
mull
mov
cmpsb
into
jmp
jg
adcb
xchg
and
mov
cmp
xchg
add
mov
cmc
sub
cmp
jae
mov
xchg
test
pop
mov
loope
pop
jl
in
sbb
xchg
dec
out
lret
mov
out
out
cmp
or
or
sti
loope
mov
ret
fwait
inc
fidivs
cmc
rcl
pop
shlb
xchg
dec
lock
int3
push
cli
lods
rcrb
cld
jns
das
sbb
adc
mov
dec
jg
es
xor
in
pop
pcmpeqd
insl
addb
in
dec
insl
sub
cmp
mov
inc
adc
outsl
and
mov
in
mov
lcall
ja
cmp
adc
add
test
mov
push
xchg
mov
sarb
xlat
repnz
push
bnd
fnsave
and
in
pop
test
and
repz
pop
scas
aam
mov
mov
daa
ljmp
xchg
dec
xor
addr16
leave
clc
push
sub
or
sbb
sbb
imul
bound
aas
addl
xchg
shlb
add
dec
push
xchg
js
xchg
mov
pushf
aaa
cs
sub
add
mov
dec
xchg
xlat
into
push
or
imul
dec
pop
jge
and
loop
rorl
cli
into
cmc
jnp
adc
loope
push
mov
and
mov
add
ljmp
enter
pop
dec
arpl
jg
or
lret
fadds
std
lahf
fs
movsb
movsb
inc
push
cmp
add
test
jne
inc
test
push
jnp
push
xor
adc
mov
jecxz
mov
jecxz
test
xchg
xor
fsubrl
mov
mov
in
push
shrb
lret
dec
inc
mov
mov
shll
outsb
fsubrs
push
jbe
pushf
sub
mov
popa
test
push
inc
mov
fwait
dec
outsl
fistpll
add
push
and
add
push
push
lret
xchg
xchg
dec
jns
xchg
aas
pop
mov
out
cmp
mov
and
mov
jmp
je
daa
notb
xchg
jecxz
sub
jecxz
inc
aas
fwait
jo
pop
leave
or
xor
notb
inc
je
mov
scas
push
mov
jb
insb
dec
iret
test
mov
clc
xchg
fstps
cmp
mov
pop
cmp
mov
add
inc
fisubrl
aas
fistpl
mov
xor
pop
adc
jns
pop
xchg
je
or
sub
js
gs
or
inc
addr16
xor
cmp
loop
adc
xchg
push
mov
test
iret
hlt
mov
fstps
mov
loope
pop
push
pop
sbb
stos
sub
iret
sub
jo
imul
pushf
lcall
add
pop
lcall
mov
sti
insb
add
adc
push
xor
lret
pop
icebp
xchg
inc
int
mov
adc
cmp
inc
fstpl
stos
sub
add
push
add
xor
and
test
frstor
add
fwait
popf
mov
sbb
mov
dec
xchg
and
mov
adc
xor
sub
stos
and
lds
sti
cwtl
inc
lret
sbb
stos
add
iret
loop
repz
divb
xchg
inc
mov
cs
es
adc
push
iret
or
dec
loop
insl
stos
and
jg
push
xor
jmp
cmp
jae
add
lcall
dec
jecxz
dec
adcl
sbb
mov
lds
fimull
ja
mov
sbb
mov
add
lcall
mov
mov
adcl
xchg
fwait
add
arpl
xor
xor
inc
dec
xor
sub
lret
add
hlt
adc
rorl
test
lret
ds
out
or
adc
test
jbe
add
mov
jnp
jl
pop
sbb
pop
xchg
leave
adc
dec
aas
popf
imul
loopne
cmpsl
sub
jne
and
mov
mov
pop
loop
test
in
jne
add
ja
cmc
dec
xchg
push
add
lcall
enter
add
inc
sub
bound
push
xchg
cmpsb
mov
inc
mov
aas
aam
inc
push
cld
fidivl
fisttpll
ret
insb
sbb
add
lds
jae
mov
jle
lret
lock
pop
jae
cmp
jns
imul
mov
jl
or
out
cmp
xor
adc
pop
cmpsl
jo
sub
dec
fldl
arpl
cmp
adc
pushf
xor
les
mov
rorl
dec
repnz
test
sub
fsubs
cmp
popa
push
inc
xchg
dec
mov
leave
imul
jo
mov
pop
jmp
push
lea
cmpsb
iret
fisubrl
in
in
sarl
dec
adc
jge
loop
int
push
stos
fwait
out
lods
jno
int
lea
mov
adc
sbb
enter
loope
lock
or
sub
cld
adc
fwait
or
inc
jns
and
movsb
iret
call
sarl
aas
mov
push
jbe
pop
dec
les
gs
cmovns
push
faddl
cli
lds
jno
add
rcl
inc
cwtl
xchg
jl
lret
fsubrl
xchg
or
enter
adc
dec
adc
in
testb
shr
cmp
push
aad
pop
nop
lcall
imul
sub
sbb
jg
adc
scas
in
adc
mov
mov
pop
in
jmp
jo
pop
mov
jp
iret
rcrl
dec
xchg
lods
stos
lret
mov
in
sti
jb
xchg
jmp
call
push
in
aas
adc
fiadds
repnz
push
pop
fwait
jg
jo
sarl
mov
imulb
mov
outsl
shrl
insl
sub
add
and
out
scas
jb
ja
imul
mov
add
add
pop
pusha
mov
push
das
ljmp
sahf
and
rcrb
jl
daa
inc
cld
ret
in
and
mov
sbb
popa
mov
xchg
and
xlat
insl
repnz
out
push
mov
sub
stc
inc
add
dec
pop
dec
xchg
inc
lock
out
mov
push
cmp
pop
sarl
pop
mov
icebp
pop
mov
lcall
and
mov
icebp
int
pop
sbb
mov
and
dec
lcall
out
lahf
xchg
arpl
test
add
pusha
enter
xor
sbb
icebp
loopne
xchg
jge
mov
addr16
pop
add
aad
adcl
dec
pop
inc
nop
lea
xchg
dec
mov
aam
fildl
xchg
loopne
dec
add
es
xor
push
pop
roll
clc
data16
stos
sub
addb
lret
dec
in
ljmp
aam
mov
stos
add
out
sbb
mov
mov
sub
lods
int3
shlb
inc
dec
push
push
je
mov
test
sbb
push
push
jg
mov
fnsave
pop
mov
add
xchg
arpl
xchg
add
xor
outsl
add
bound
js
cld
test
addr16
sti
js
movb
cmp
xchg
scas
cwtl
jp
inc
sbb
and
dec
mov
mov
in
add
sub
and
sub
iret
inc
jg
cmp
js
insb
aas
inc
out
sahf
add
sub
pop
or
push
std
jg
sbb
xor
add
pop
sub
popa
ds
neg
push
and
dec
mov
jo
sbb
mov
out
sub
jp
fnstsw
push
leave
jne
das
add
sets
cmpsb
cmc
add
push
pop
mov
mov
adc
std
fcompl
push
pop
mov
stc
jns
out
fsubp
or
sbb
js
pushf
dec
repnz
pop
xor
movsb
rolb
mov
stos
pop
dec
jmp
sbbb
jl
inc
and
push
mov
les
fs
and
sar
add
lods
inc
cmp
or
cmp
mov
cmc
jle
pop
mov
push
neg
data16
insl
incb
pop
sarl
aaa
ds
pop
popf
arpl
push
ss
jne
lahf
aaa
outsb
dec
mov
insb
mov
xchg
insb
dec
inc
stos
lds
xchg
les
addr16
loope
jb
popf
jo
sbb
enter
xchg
shlb
mov
outsb
aad
mov
push
movsb
jo
imulb
or
mov
test
add
cmpsb
push
sbb
cmp
mov
pop
lods
fs
in
popf
mov
mov
sub
cmpsl
cli
andb
add
movsb
ja
push
mov
xchg
lea
push
or
or
xchg
out
movsb
sbb
xchg
mov
dec
aaa
sbb
push
popa
push
add
es
insb
add
sbb
inc
and
xchg
loopne
xchg
dec
popa
pop
push
and
clc
cmp
jge
aam
outsl
das
or
xchg
dec
cmp
pop
mov
mov
in
insb
push
push
clc
add
shll
push
or
pop
push
cld
push
push
mov
ds
mov
jno
outsl
jmp
mov
mov
lods
inc
ficoml
mov
fs
xchg
dec
inc
stos
lods
call
pusha
jmp
sahf
ret
pop
push
out
xchg
stc
pusha
jae
xchg
cmpsl
add
xor
rcrl
push
pop
add
mov
arpl
or
or
inc
cmp
out
adc
cwtl
rcll
arpl
push
testl
adc
dec
cmpsl
mov
push
sbb
js
adc
das
push
adc
inc
cli
in
xchg
repnz
xchg
adc
jp
mulps
in
imull
call
out
or
dec
cmpsb
xchg
inc
lods
dec
outsl
jle
enter
lds
dec
daa
inc
cmc
scas
xchg
pop
das
out
lea
or
roll
mov
pop
ret
nop
jbe
jmp
and
fimull
test
push
mov
xchg
xchg
mov
fstl
add
movsb
add
mov
out
mov
inc
out
bound
dec
and
sub
and
inc
subl
add
mov
adc
dec
push
lock
mov
xchg
loope
hlt
mov
insl
dec
shlb
cmp
mov
dec
subb
mov
out
sbb
add
int3
cmp
mov
dec
insl
adc
inc
mov
pop
cmpsl
pop
std
lahf
dec
lock
stos
jmp
jns
xchg
fs
and
ficomps
in
and
push
add
push
or
push
out
pop
icebp
dec
cltd
mov
push
xchg
jl
xor
add
test
dec
sbb
jnp
ret
lea
scas
and
das
sarb
into
add
sub
xchg
aaa
inc
push
fnstenv
xor
cmp
add
ljmp
mov
and
scas
pop
out
in
pop
dec
lods
pusha
js
mov
push
adc
in
jmp
inc
jle
sub
shrb
push
divl
jb
jns
call
dec
jecxz
ficoms
xor
pop
shl
sbb
jp
das
shll
xchg
mov
pusha
out
sbb
push
inc
dec
bnd
jo
jne
xchg
pop
roll
and
pop
mov
sbb
test
insl
loop
push
mov
or
mov
sbb
sub
jge
int
test
mov
mov
xchg
fldl
jmp
pop
and
cmpsl
mov
add
daa
add
add
pop
les
sti
in
mov
pop
adc
out
or
test
jns
cmp
push
fdivl
push
xchg
lock
push
mov
mov
in
lcall
loopne
jns
push
int3
push
jg
shrl
insb
sbb
pop
popf
inc
imul
add
fwait
mov
idiv
push
sahf
and
or
fdivrs
pop
jg
scas
daa
jge
arpl
ds
mov
not
xchg
xchg
add
inc
je
push
jl
xor
loope
out
loop
jbe
mov
test
xchg
push
shlb
frstor
adc
add
movsb
sbb
hlt
sarl
push
loop
mov
mov
inc
rcrb
dec
adc
adc
inc
push
test
push
inc
js
pop
fucom
jbe
movsl
pop
gs
mov
sahf
dec
iret
and
inc
stos
inc
shrl
sbb
in
push
loop
adc
inc
mov
mov
imul
push
ret
mov
sub
data16
mov
sbb
cmp
fwait
shlb
and
push
in
sub
int3
xchg
adc
bound
add
mov
sub
roll
adc
cs
sti
and
sti
aam
cltd
cmp
andl
popf
push
add
adc
out
mov
push
sarl
mov
mov
outsb
xor
icebp
pop
in
lock
push
mov
loope
nop
dec
fadds
and
not
sbbb
ss
and
cmp
je
jmp
out
js
arpl
sbb
in
je
mov
pushf
stos
jnp
call
sub
test
in
arpl
or
inc
push
int
cmp
lock
mov
arpl
adc
enter
dec
rcr
mov
push
xchg
mov
imul
addl
inc
lret
or
xchg
dec
jbe
inc
shrl
enter
daa
ds
mov
mov
mov
aad
xor
shlb
imul
pop
inc
out
cmc
jecxz
xchg
loopne
aad
mov
and
test
mov
hlt
push
add
cmc
outsl
call
lods
inc
sub
sbb
scas
pop
stos
popa
mov
cli
psrld
je
loopne
aad
push
push
cli
pop
stos
jecxz
xchg
dec
mov
lret
ret
cmp
dec
fldcw
xor
add
add
fsubl
test
subb
sbb
inc
outsl
mov
mov
inc
xor
sub
cmp
adc
ja
outsb
xor
jno
sub
jns
fildl
cld
aas
je
inc
cli
cmpsb
ret
dec
ret
lock
and
jle
xchg
cmc
addr16
xor
adc
dec
pop
xchg
pop
test
lret
int
push
lds
test
xchg
mov
inc
jne
mov
sbb
test
out
jns
jb
sbb
xor
in
xor
xor
dec
sub
rcl
adc
sbb
add
sub
add
push
aas
negl
xor
shll
sahf
xchg
andb
pop
pop
cwtl
cmpsb
dec
xchg
pop
xchg
inc
or
or
lret
repnz
mov
jl
fisubs
icebp
stc
jmp
inc
push
out
mulb
add
js
fimull
xchg
mov
mov
jo
orl
loopne
dec
jno
repz
imul
mov
add
jge
inc
mov
gs
in
and
fiaddl
jecxz
scas
cmp
add
aad
inc
mov
jbe
xor
lock
sbb
cwtl
mov
lahf
adc
cmp
jmp
jl
push
push
or
push
fs
jo
cmc
mov
lds
xor
lds
popf
adc
and
or
enter
inc
sub
test
jle
jns
add
fdivs
mov
inc
xor
mov
stos
sbb
push
jmp
xchg
imul
shrb
les
jle
cltd
add
jl
orb
xchg
stos
cmovge
jne
push
pop
sbb
push
pop
rcrb
xchg
in
popa
leave
jb
loopne
mov
and
aam
loop
lret
xchg
adc
jns
lock
cmp
sti
sbb
sub
add
mov
or
dec
cmpsl
rsqrtps
dec
aas
mov
fisttpl
movsb
xor
push
jecxz
mov
pop
adc
mov
pop
mov
inc
loopne
push
pop
mov
aam
cld
cmpsl
xchg
jne
ljmp
movsb
call
mov
ds
or
dec
insb
jmp
pop
lods
xchg
lret
mov
movsb
imul
jnp,pt
xor
add
dec
pop
add
cli
leave
push
adc
int
test
pushf
lcall
orb
push
pop
dec
adc
dec
addb
int
imul
pushf
in
inc
ret
adc
mov
or
cmp
daa
pop
and
lock
adc
push
jne
jg
or
xchg
test
decb
and
fidivs
in
nop
or
mov
push
out
leave
mov
out
repz
stc
jne
cmp
popa
sub
jg
cmp
lret
fists
adc
push
lcall
adc
inc
icebp
inc
mov
std
and
movsb
jl
cmp
rolb
cs
xor
xchg
add
iret
jmp
fldt
add
and
ds
jb
popa
fmulp
and
loop
lock
sub
jl
loop
loopne
ja
mov
insb
ror
in
jg
or
mov
ds
adc
mov
sub
testl
lods
and
cld
sub
cmp
xchg
test
addl
pop
jbe
sub
outsb
sub
push
mov
out
jns
and
out
leave
das
jb
sbb
lds
out
leave
ret
lods
or
data16
add
mov
sbb
or
or
lds
mov
das
imul
xchg
xorb
cld
and
sub
das
out
jo
add
xchg
jo
jno
push
bound
and
fildl
sub
sub
pop
jno
xor
cli
sub
cmpb
cmc
push
fsubrl
mov
mov
add
push
jno
pushf
lret
cmpsl
call
pop
inc
std
movsb
jae
pop
pusha
in
push
enter
leave
cli
cmp
outsl
pop
negb
sete
insl
loopne
leave
push
push
mov
inc
movd
xor
push
dec
in
jmp
js
mov
xchg
daa
dec
sub
cli
lods
rcrl
mov
and
push
and
jp
push
xchg
xchg
mov
jbe
xchg
loopne
mov
leave
in
mov
lret
mov
gs
daa
rcr
fwait
loope
pop
mov
adc
pop
mov
bound
fs
mov
dec
int3
das
mov
xor
out
jge
pop
in
fisttpl
fnstenv
pop
lods
insb
fists
insb
dec
jo
or
xor
clc
xchg
mov
cli
in
xchg
std
test
cmp
jns
xchg
movsl
loope
movsl
cmp
jl
dec
icebp
in
jmp
dec
sub
mov
cld
adc
pop
pop
pop
cltd
les
mov
popf
cli
xor
scas
shll
scas
adc
imul
movsb
dec
lcall
aas
addr16
les
dec
jno
jmp
icebp
ds
notb
lock
mov
les
mov
roll
icebp
je
aam
cmp
repnz
pop
or
inc
jge
adc
popa
xor
cmp
mov
add
iret
nop
loope
jns
sbb
push
shll
inc
lahf
out
fisttps
das
aam
mov
xor
cmp
mov
mov
in
pop
ds
push
cltd
ljmp
mov
push
icebp
pop
jne
lods
push
fstpl
cmp
dec
mov
shl
lods
jno
jns
xchg
mov
test
xor
adc
out
xor
cmpsl
sbb
scas
out
std
jle
cmp
or
cmp
mov
pop
dec
bndstx
mov
lods
cwtl
loopne
pushf
aaa
int3
out
mov
pop
arpl
mov
pop
inc
add
or
xchg
xlat
aaa
cmp
test
pop
mov
hlt
push
add
push
dec
test
pop
jns
iret
cmp
sub
loop
sub
pop
std
lahf
cmp
and
arpl
jle
ret
aad
xchg
scas
mov
lds
ret
cwtl
mov
daa
popa
dec
push
test
push
movsl
mov
insl
gs
sub
dec
xchg
sarl
mov
es
addl
jle
imul
test
adc
pop
push
les
movsl
dec
push
adc
cmp
mull
mov
fidivrs
lret
sub
js
sbbl
fisubs
dec
sbb
or
mov
pushf
outsb
jmp
nopl
ficoml
iret
imul
pop
inc
out
adc
in
dec
imul
jle
and
mov
mov
dec
daa
pop
stos
dec
fdivrl
subb
out
mov
insl
push
and
mov
inc
dec
jo
xchg
fcmovb
mov
xchg
inc
into
mov
imul
dec
scas
mov
and
xor
cmpl
xchg
sarl
clc
stc
jl
subb
cmp
dec
mov
scas
fadds
movsl
cld
loope
cmp
mov
cmc
xchg
mov
imul
cmp
mov
and
xor
mulb
scas
data16
mov
hlt
inc
pop
or
lds
pop
mov
cmp
xchg
mov
daa
lods
fstp
push
dec
xchg
les
mov
subl
add
test
dec
mov
subl
out
add
aaa
add
dec
xor
int
shlb
inc
and
pop
into
nop
mov
js
inc
cmc
loop
sub
jmp
push
cmpsl
popa
sarb
mov
hlt
test
dec
std
mov
fiaddl
lods
or
or
test
dec
bswap
ss
xor
std
xor
cld
mov
ret
jb
mov
push
mov
dec
sahf
cs
roll
movsl
call
sub
or
pop
clc
push
jb
fbld
pop
and
test
mov
push
xor
mov
scas
std
adc
je
dec
add
into
or
or
shrl
inc
fdivrl
loop
pusha
add
nop
push
pop
xchg
dec
xchg
lret
aam
mov
movsb
push
inc
pop
outsl
cmp
imul
mov
xlat
jecxz
mov
pop
js
xchg
aaa
xchg
xchg
sub
and
adc
ljmp
sub
es
movsb
pop
sarl
jne
pushf
repnz
push
dec
rcll
fldt
push
push
pop
push
dec
stos
hlt
nop
mov
pop
jae
dec
xchg
and
push
push
clc
in
ror
or
sbb
popf
sub
sub
test
flds
add
stc
bound
add
ljmp
mov
movsl
pop
nop
add
push
fistps
sub
adc
je
loopne
insl
ror
imull
ficomps
push
and
test
in
mov
lods
shlb
push
imulb
fisubl
push
mov
sub
leave
push
ds
fnstcw
jl
pushf
es
xor
out
int3
pop
test
pop
lcall
and
cmp
dec
mov
and
xor
mov
insb
and
mov
mov
insl
ljmp
sbb
xchg
and
scas
negl
sub
cmc
mov
sbb
orb
adcl
mov
dec
aam
sbb
imul
fxch
mov
mov
pop
dec
sub
mov
lcall
rorl
dec
sbb
loope
xor
jne
cmp
faddl
jns
jne
data16
aaa
pop
mov
xchg
lahf
jnp
push
addb
xor
jne
mov
addr16
mov
ret
push
imul
repz
dec
outsb
fsubr
in
lds
jbe,pn
loopne
pop
xchg
mov
enter
xchg
dec
mov
mov
add
pop
in
adc
sti
leave
sub
cwtl
ljmp
mov
inc
xor
sbb
enter
cmp
pop
or
pop
lock
jo
sub
mov
sbb
aad
pop
shll
shlb
push
xchg
xor
jnp
repnz
push
xor
jle
mov
sti
jge
push
cltd
or
pop
mov
stc
iretw
adc
or
subl
mov
mov
cs
push
lret
int
sbb
fildll
add
mov
testb
dec
xchg
jo
adc
shll
sbb
mov
xor
dec
rclb
imul
xchg
aam
xchg
push
arpl
lahf
cmp
movsl
dec
sbb
aaa
imul
mov
shlb
fnsave
repz
xor
ja
fdivl
push
mov
adcb
mov
push
push
xchg
outsl
mov
cmp
push
lcall
cs
and
jb
ret
mov
sub
sub
mov
jge
jns
insb
mov
pop
push
mov
rclb
out
and
adc
jo
xor
test
or
and
inc
aaa
sbb
xchg
mov
fisubs
jg
dec
mov
jge
cltd
je
arpl
xchg
popf
loopne
fldenv
add
dec
sbb
enter
ja
loop
mov
xchg
cmp
dec
mov
sti
je
sub
aad
pop
jns
xchg
xorl
outsb
cmp
and
sbb
or
dec
arpl
jg
fisubs
inc
xlat
std
popf
push
mov
ds
lret
xchg
xor
pusha
or
fcoms
inc
pusha
jne
lahf
push
lret
jge
cld
xchg
in
mov
fs
mov
call
sbb
inc
mov
fmuls
lods
jl
movq
out
popf
in
cli
enter
add
mov
pop
mov
mov
daa
movl
leave
push
andl
dec
rorb
int3
xlat
and
cmp
movsl
cmp
pop
jecxz
xchg
adc
rolb
ds
les
sti
cmp
jle
jge
lock
adcl
lods
push
jno
cmp
sbbl
add
mov
inc
sbb
adc
test
call
inc
xchg
fs
mov
fisubrs
inc
loopne
push
jbe
ds
jne
xorb
lret
imul
push
and
cltd
mov
leave
std
pop
bound
xchg
andb
xchg
xor
andb
outsl
aam
lea
int
cli
movb
sub
cwtl
fmuls
add
bound
push
xchg
xor
outsl
stc
mov
cmp
call
icebp
push
lahf
dec
cmc
loop
dec
xorb
insl
aam
jecxz
dec
xor
jecxz
sbbb
inc
and
pop
fiaddl
jns
pop
testl
fst
jmp
sub
data16
adc
addb
fs
outsl
les
ljmp
data16
mov
adc
sahf
loop
mov
pop
repz
add
sbb
movsb
sahf
shrl
pop
in
imul
lcall
sbbb
js
movsb
inc
hlt
out
xor
mov
sbb
sahf
mov
lods
pusha
test
in
sub
or
rorb
xchg
jnp
adc
sbb
loop
in
aad
int3
push
sbb
sub
sub
outsb
mov
add
lods
aas
mov
push
data16
fpatan
jns
jl
mov
test
fstpl
scas
sbb
daa
out
jle
movsl
jecxz
adc
mov
jb
or
daa
outsl
daa
cltd
pop
mov
fwait
std
mov
adc
jp
xchg
pop
adc
ljmp
pop
jecxz
ds
aas
fwait
rcrl
pop
mov
aaa
faddl
jne
push
popf
lret
lret
into
pushf
push
fcmovu
pop
mov
mov
arpl
shlb
add
adc
and
idivl
xlat
popf
mov
dec
lods
ret
lret
scas
imull
dec
arpl
mov
pop
pop
adc
cwtl
stc
or
int3
mov
ds
pop
arpl
nop
push
test
cmp
jo
cmp
and
dec
scas
fcomps
imul
xchg
xchg
test
into
xchg
pop
adc
iret
ja
daa
mov
ret
push
mov
adc
sbb
push
mov
mov
mov
and
imul
daa
and
repnz
das
sahf
sbb
int
movsl
cmp
inc
rol
hlt
pop
xchg
fildll
push
adc
xchg
or
das
inc
int3
jae
aaa
jl
call
cli
ret
add
adc
movsl
lahf
cmpsl
jg
inc
mov
cmp
xchg
adc
je
xchg
das
cmpsl
les
dec
arpl
pop
bound
push
add
ds
enter
jle
shlb
ds
xor
pop
test
cmp
xchg
leavew
rclb
or
or
bound
inc
sti
pushf
mov
cmp
add
jge
sub
adc
and
jmp
cmp
dec
pop
xchg
jle
mov
mov
call
sub
mov
or
pop
mov
icebp
aad
push
ss
pop
pop
test
clc
and
add
imul
add
cmp
mov
pop
shlb
xchg
je
in
out
fiadds
lret
mov
pop
and
movsl
ljmp
fldt
sbb
mov
lahf
jle
scas
aaa
inc
cmpsl
sbb
testl
and
dec
inc
inc
into
insl
adc
popa
xchg
cltd
mov
popf
jns
and
std
jo
mov
bound
and
dec
frstor
dec
addr16
hlt
pushf
pop
mov
mov
movsb
inc
adc
mov
sbb
out
fdivs
jbe
inc
jg
bnd
and
jg
add
nop
test
movsb
mov
fmull
cmpsl
push
in
push
xchg
push
xlat
mov
cmp
push
negb
repnz
testl
icebp
ret
adc
fdivrl
fs
inc
xchg
mov
push
inc
and
bswap
mov
cmp
mov
fbld
cli
cmp
mov
push
aas
fiaddl
inc
icebp
notb
cs
sbb
xor
pushf
bound
aam
movsb
mov
notb
ret
and
insl
mov
pop
xor
mov
cwtl
adc
loop
mov
icebp
push
out
popf
mov
dec
vpaddd
xchg
les
sbb
frstor
xorb
insl
in
mov
mov
adc
adc
push
mov
mov
adc
lods
adc
pop
push
pop
in
fldenv
cmpsb
sbb
xchg
imul
and
pop
and
outsl
in
adc
out
xchg
cmp
or
outsl
xchg
push
cld
fs
mov
dec
aas
add
mov
mov
xchg
sub
notb
adc
jne
fmul
das
into
nop
int
loopne
push
repnz
fs
sbb
out
xor
daa
repz
aaa
in
imul
test
ret
xor
jbe
cmp
fwait
push
rorl
ljmp
xor
fisubs
or
test
sub
lea
lods
outsl
or
sub
cli
sub
inc
movsl
inc
rcrl
mov
push
out
lret
inc
aaa
push
neg
mov
adc
shll
cs
aam
pop
jns
loope
and
mov
cs
mov
mov
insl
adc
cmp
cwtl
inc
ss
push
pop
addr16
mov
xorl
cmp
lds
lcall
in
inc
repz
jno
aaa
clc
sub
das
cltd
pop
aaa
dec
out
xchg
and
mov
sahf
mov
mov
mov
jbe
test
scas
and
mov
lea
test
push
aad
mov
cmpsb
dec
mov
cmc
push
bound
ret
lods
dec
pusha
xor
stos
jecxz
not
es
jle
sarb
xchg
mov
jnp
jmp
sti
insb
inc
adc
scas
adcl
xlat
xor
dec
jae
adc
and
pop
stos
rcll
data16
shlb
lods
mov
fnsave
ljmp
jne
xchg
fldcw
arpl
mov
mov
dec
in
cmpsb
mov
ljmp
jo
xchg
inc
inc
mov
jl
push
ds
int
or
roll
repz
out
lods
pop
lods
mov
cmp
stos
push
shll
cmpsb
dec
mov
pop
addl
addr16
sbb
push
dec
cli
mov
adc
add
jns
rcrb
xor
leave
sarl
sbb
sahf
fidivrl
aas
cmp
xchg
xlat
and
pusha
sub
enter
sub
push
add
test
aas
cmp
negb
add
insb
xchg
les
data16
push
xchg
rcll
mov
cmp
and
sbbl
arpl
mov
and
pop
inc
enter
pop
add
add
mov
xor
cmp
out
mov
jecxz
lea
movsl
push
les
ficoms
stos
sub
mov
das
popl
or
sbb
adc
pop
pop
out
mov
addr16
mov
aam
xchg
cmp
pop
sbb
mov
cwtl
arpl
pop
arpl
movsb
add
scas
mov
rcl
loop
stos
fsubr
stos
or
xchg
push
push
jge
dec
mov
dec
mov
add
push
mov
adc
or
lcall
mov
sub
push
jnp
mov
mov
inc
xlat
cwtl
sub
mov
pop
dec
in
mov
stos
clc
mov
mov
shrb
add
push
inc
or
shlb
rolb
and
sbbb
test
add
mov
lock
sub
mov
push
pop
addb
movsl
call
adc
jns
loopne
movsl
aas
and
ja
push
in
push
xor
rcrl
ret
fstps
xor
mov
adc
les
sbb
or
push
mov
sbb
popa
push
lods
jmp
out
inc
adc
les
adc
or
mov
push
push
sbb
into
cmp
test
outsb
inc
aaa
jno
mov
or
inc
mulb
jnp
mov
or
add
clc
std
arpl
insb
mov
sub
sub
outsb
imul
push
mov
sub
mov
gs
push
and
jne
sub
aas
mul
insb
sub
adcb
inc
dec
mov
mov
jle
push
repnz
mov
stc
adc
lods
mov
js
out
jge
sbb
xchg
test
shrb
clc
mov
mov
into
int
sbbb
loopw
outsl
ja
mov
or
repz
ja
add
in
push
push
mov
std
jmp
ja
mov
xchg
jmp
rorb
or
fcoml
rcll
xchg
jbe
push
push
adc
pop
or
mov
test
cmp
int3
mov
fucom
mov
addr16
sbb
incl
xchg
add
aaa
push
cld
es
fld1
repnz
xchg
rorb
movsb
fdivrs
or
or
and
mov
or
jg
jne
insl
ljmp
xor
daa
in
sub
test
imul
fisttpll
dec
or
jbe
mov
shl
sbb
jns
fdivrs
jns
pop
dec
frstor
out
imul
cmp
int
xchg
jl
mov
mov
dec
mov
pop
cltd
mov
cmp
test
sbb
les
sbb
test
pushf
pop
ret
jns
addr16
mov
dec
push
xchg
sbb
mov
test
mov
and
add
call
cmpsl
subl
sbb
into
jecxz
push
adc
pop
lcall
pop
call
mov
das
dec
mov
rolb
lods
data16
insb
jns
inc
inc
jp
or
outsb
daa
sub
add
lret
gs
adc
loop
push
jle
test
aam
fsubr
repz
pusha
jae
jnp,pt
cwtl
inc
test
inc
sbb
push
dec
std
mov
add
stos
fwait
mov
enter
inc
loope
ds
or
adc
stc
inc
shlb
scas
add
jno
lret
cmovae
ror
xorb
scas
loop
cmc
inc
fs
lahf
mov
inc
or
cmp
add
mov
call
xor
or
ljmp
mov
jmp
mov
loopne
ja
nop
lock
push
cmp
out
decb
imul
mov
sarl
push
cld
mov
loope
or
sub
jno
adc
fwait
jmp
insb
testl
jnp
negb
stc
mov
cmp
fs
mov
cltd
xchg
cli
mov
mov
mov
fs
ret
xlat
mov
cmp
mov
jbe
out
in
mov
clc
add
xor
cltd
cmpsb
dec
dec
cli
int
jns
out
jle
bound
insb
stos
cmp
mul
fwait
js
jge
test
or
sub
xchg
cmp
xchg
scas
int3
in
test
mov
cld
pop
das
pop
sbb
push
or
or
lcall
xchg
lods
popa
outsl
jge
pop
pop
lds
push
cltd
jbe
pop
int
lret
dec
sbb
mov
fcmovnu
repz
add
cmp
repnz
adc
push
scas
xor
mov
test
pusha
adc
inc
push
aas
aad
adc
lret
inc
shlb
mov
stos
nop
inc
out
sbb
inc
loopne
int
cmp
mov
aad
mov
or
and
sbb
scas
add
insl
subl
pop
cmpsl
lods
in
dec
sbb
test
pop
fstps
mov
lcall
and
push
pop
test
sub
xor
xor
cmp
enter
stos
imul
xor
xor
fwait
ret
jl
lea
pop
mov
out
repnz
push
lds
fistpll
mov
es
add
daa
aas
or
sub
lret
inc
stos
jecxz
sbb
stc
and
icebp
iret
repz
cld
test
mov
cld
movsbl
jl
shlb
push
scas
cmp
fs
sarl
es
sbb
jge
jo
mov
fstpl
sub
mov
in
cmp
aaa
into
outsl
enter
stos
imul
cld
fbstp
stos
push
adc
scas
dec
push
int3
loopne
jge
add
jecxz
rclb
cltd
in
dec
test
push
jae
xor
jae
gs
mov
subb
dec
iret
fiaddl
es
jmp
dec
test
adc
and
lods
cld
or
cltd
and
lods
adc
repz
cmc
enter
or
jmp
pop
daa
mov
add
pop
icebp
sbb
add
fs
faddl
rcl
iret
xor
inc
cmc
pop
daa
adc
lret
lds
or
add
or
int
sub
xor
push
mov
and
cmp
push
pop
cltd
cmp
clc
nop
fincstp
sbb
inc
shlb
arpl
ret
dec
push
mov
cmpl
into
cmp
xchg
push
cmp
loope
cmp
fsubrs
inc
push
test
sarb
js
hlt
pop
xchg
push
sti
fwait
jns
mull
int
addr16
adc
adc
cs
movsb
mov
cmc
mov
pop
mov
sbbb
push
xor
jmp
fmul
dec
jbe
out
mov
dec
out
test
outsl
stc
rorb
cmc
fcmovb
roll
sti
pop
gs
jecxz
out
in
test
adc
js
popa
jl
xor
xchg
jne
or
push
fnstcw
clc
pop
aam
jg
xor
xor
pop
dec
loopne
mov
lds
andb
sahf
add
test
jns
les
inc
ljmp
leave
inc
sub
movsb
cmp
out
and
ljmp
mov
pop
adc
sub
sub
or
xlat
arpl
roll
mov
adc
fidivrs
leave
push
inc
daa
jmp
loop
test
outsl
lcall
jge
movsl
pop
or
in
pop
arpl
out
pop
or
add
pop
mov
push
mov
imul
loopne
mov
lcall
add
insb
call
mov
test
sbbl
xchg
rorb
mov
loopne
pop
loopne
fmuls
lds
or
cmp
push
rorb
mov
inc
lock
mov
sahf
std
movsl
inc
add
jge
in
push
out
jg
mov
pusha
xchg
xor
sbb
adc
inc
mov
repnz
sahf
loopne
ret
cmp
add
out
decl
ja
fsubr
in
cmp
fsubr
mov
xlat
repz
js
mov
aaa
xchg
push
add
xor
clc
imul
sub
movsb
sahf
cmp
aaa
data16
or
mov
int3
push
mov
mov
jle
outsb
push
fsubrl
in
pop
pop
movsb
cmp
imul
lods
dec
dec
test
sub
insl
add
dec
xor
or
sti
cmp
add
xchg
fcoml
hlt
and
and
mov
sub
mov
mov
lcall
xchg
xchg
das
imul
pop
and
add
mov
jne
lds
mov
mov
stos
aad
dec
aad
mov
nop
shlb
cmp
test
insl
mov
sub
stos
cmp
mov
subl
ljmp
xor
mov
dec
dec
and
mov
fs
push
xchg
out
and
sbb
inc
push
cmp
jb
loopne
loope
and
pop
enter
and
adcb
addl
pop
sub
dec
sbb
test
roll
adc
cld
xlat
out
xchg
lahf
fldl
sub
or
outsb
sbb
shll
push
rcr
jns
jle
std
dec
sub
xorb
cmpsb
in
mov
lock
mov
clc
das
rorl
es
loopne
jg
sbb
cmpl
sub
pop
pop
je
ficomps
arpl
mov
retw
mov
push
mov
jns
adc
mov
or
aad
leave
cmc
shrl
addr16
add
cmp
les
testl
adc
add
add
cld
jl
xor
aam
mov
mov
pop
mov
mov
or
shrl
push
aam
add
add
pushf
add
mov
jl
out
jp
pop
push
out
mov
mov
leave
add
push
faddl
ljmp
test
mov
push
lahf
dec
push
jae
and
mov
aaa
pusha
mov
jne
push
jo
push
jns
dec
jp
je
bnd
aaa
jae
pop
add
subb
fcmovnbe
scas
repnz
xchg
mov
js
mov
jo
movsl
in
or
push
xor
jp
sbb
xlat
pop
nop
adc
pop
ror
dec
lods
aam
lds
test
mov
int3
outsb
sti
or
jecxz
pusha
jl
outsl
xchg
mov
xchg
xchg
inc
out
out
push
fisttps
mov
mov
arpl
aaa
flds
mov
pop
push
cmp
sbb
pop
mov
fsubrl
les
test
mov
mov
cmp
jle
dec
mov
loopne
fistpl
xor
and
repz
push
and
hlt
les
addr16
jmp
out
lds
testl
mov
dec
in
dec
enter
xchg
or
or
and
mov
test
das
and
or
or
stos
mov
pop
in
dec
add
cmc
mov
inc
icebp
xchg
dec
add
ret
mov
cmp
lods
xchg
bound
push
iret
mov
mov
push
scas
push
sub
ret
pushf
inc
call
cmp
sti
gs
cmp
sarb
in
clc
inc
dec
insl
mov
cmc
push
in
add
xchg
xor
mov
test
jns
out
cmp
arpl
rcrl
jbe
mov
aad
stc
bound
mov
mov
sbb
repz
jbe
push
xor
adc
sbb
pop
mov
mov
inc
xchg
dec
cs
es
fldl
popf
inc
repnz
push
das
fs
or
dec
add
inc
mov
inc
ret
jle
adc
pop
mov
lds
call
pushf
jg
pop
stos
jnp
push
mov
push
pop
push
pop
lods
fcmovb
mov
imul
cmp
pushf
pushf
fisubrl
aaa
out
lret
bswap
inc
in
cmp
dec
mov
aas
sub
push
dec
cli
int3
popa
movsb
mov
cmp
roll
lds
jbe
pusha
inc
push
mov
pop
les
mov
push
popa
test
aam
mov
sbbl
xor
les
test
std
pop
ret
pop
xchg
pop
adc
cltd
fcomps
ret
push
movsb
leave
dec
popf
cmp
and
aaa
adc
adc
cld
movsb
test
rcll
cmp
cli
or
xchg
in
repnz
push
insl
add
xchg
and
scas
mov
daa
cmp
mov
psubq
shll
xor
jo
aad
bound
mov
or
loop
adc
pushf
in
insl
imul
lahf
andb
pop
mov
or
cwtl
push
cmp
subb
sahf
pop
ss
jae
add
mov
addr16
xor
mov
shld
adc
jne
add
popf
or
xchg
dec
mov
lcall
test
cmc
or
sbb
sbb
push
mov
or
repz
sti
pop
scas
push
aad
or
fnstenv
sahf
xchg
and
cmp
call
das
int3
lods
int
add
pop
test
enter
pop
and
sub
push
cmp
sbb
xorl
xlat
and
aas
ftst
add
int3
lahf
adc
pop
ds
adc
call
jle
repz
dec
into
int
ljmp
or
rep
shlb
cmpsl
lock
push
je
cmp
ljmp
test
jnp
fiadds
push
stos
cmpsl
ds
push
add
in
jp
mov
push
mov
fmulp
adc
pop
lock
jnp
clc
sub
jmp
cmp
add
xchg
add
ja,pn
sbb
in
jle
clc
bound
in
jns
mov
xor
mov
cmp
int
push
stc
nop
mov
jne
aam
xchg
push
and
and
pop
mov
imul
lahf
fcoms
fstpt
movsl
notb
cmp
test
leave
rorb
dec
xchg
fcmovb
adc
xor
mov
dec
in
dec
test
jns
pop
out
je
popa
es
pop
and
outsl
or
cld
sub
outsl
fdiv
mov
push
sub
dec
adc
loope
aam
fnstenv
mov
inc
jg
add
adcb
and
call
fs
ss
outsl
pop
ret
xchg
popa
fisttpl
mov
clc
inc
pop
into
stc
ss
push
sub
sti
fcomi
lcall
fnstsw
aaa
adcl
dec
xchg
sbbl
pop
clc
in
arpl
in
fbstp
sbb
cmp
lret
cmp
and
jl
xchg
sub
test
in
iret
loopne
sbb
jmp
mov
jmp
int
lods
sti
nop
xor
ja
fdivrl
fnop
test
xor
ljmp
sub
and
push
rcl
pop
mov
cltd
cltd
mov
cmpsl
pop
xor
into
loop
and
jae
push
in
inc
jnp
add
jb
orl
xchg
lahf
xchg
icebp
inc
movsl
and
mov
cs
stos
mov
fldcw
popf
or
arpl
pop
out
idivl
xor
imul
repnz
sub
mov
pop
lock
xchg
sub
dec
push
mov
into
shll
inc
mov
inc
push
mov
test
and
pop
and
std
icebp
push
test
ljmp
sbb
ret
sub
sbb
shlb
or
fsubrl
xor
pushf
cmp
rcll
js
out
xor
and
gs
mov
jnp
xor
jo
mov
cmpl
adc
das
push
push
insl
out
aaa
pop
add
mov
call
pop
mov
push
fistps
inc
jno
xchg
mov
mov
cmp
out
scas
aam
mov
pop
fsts
imulb
test
jl
adc
gs
iret
sahf
testl
js
roll
nop
and
xor
lock
mov
shr
in
stc
push
jo
jb
inc
repz
test
add
shrb
arpl
sbb
test
jns
mov
dec
pop
rorl
mov
sti
xchg
adc
jle
cmp
cmp
jmp
iret
in
pop
sub
pop
jne
stc
pop
sbb
pop
cmp
sbbb
add
add
pop
jl
movsl
sub
adc
ret
scas
dec
clc
adc
icebp
lock
jno
mov
je
mov
stos
fists
dec
dec
clc
sarl
outsl
pusha
mov
sub
sub
mov
sbb
mov
sbbb
xor
lret
add
jecxz
jg
imul
and
in
jb
xor
dec
mov
sub
icebp
xchg
and
mov
das
data16
test
adc
push
xchg
pop
adcl
subb
add
popf
and
fists
loope
sbb
imul
insb
mov
and
aam
push
xchg
clc
mov
pop
cmpsb
and
sub
test
or
jno
adc
repz
or
lds
push
pop
mov
mov
mov
xor
or
mov
scas
cmp
rcr
int3
daa
hlt
rcrl
xor
or
out
out
sbb
pop
jnp
int3
int3
xchg
add
cmp
and
js
je
or
jnp
rcll
enter
pop
ss
xor
sarl
outsb
add
adc
jp
lret
loop
jo
ret
xchg
xor
mov
movsb
adc
ljmp
push
xchg
scas
add
xchg
cltd
pop
out
bound
roll
enter
cmp
mov
push
jmp
cwtl
jb
cld
in
adc
aad
xor
imul
in
fistpl
add
sbb
pop
fwait
jo
mov
xchg
mov
jo
in
mov
xchg
fcoml
pop
dec
lea
mov
jp
jnp
loop
xchg
cld
xor
dec
jne
pop
push
out
xchg
sbb
or
sub
cmp
cmc
movsl
mov
mov
fdivs
jne
dec
mov
xchg
mov
movsb
and
call
fwait
xor
mov
jle
lret
sub
xchg
mov
fiaddl
out
scas
mov
roll
inc
sbb
outsb
mov
cwtl
jle
idiv
xor
xchg
stos
jne
cmp
sub
int3
add
mov
add
jno
iret
xchg
cli
mov
or
bound
mov
sbb
or
jp
xchg
int
icebp
scas
or
andl
jne
mov
insl
jle
jg
pop
pop
mov
ret
enter
ss
adc
lds
dec
adc
xchg
ret
test
push
jno
xchg
sub
dec
adc
fdivrl
mov
int
or
jp
adc
mov
adc
repz
mov
repnz
mov
add
insb
or
mov
ret
xchg
xchg
jecxz
mov
mov
ficompl
xchg
lretw
fcomps
scas
ja
lock
pop
pop
test
xchg
adc
mov
push
mov
mov
mov
clc
loopne
scas
shrb
sti
add
out
jno
fildl
fadd
push
adc
imul
mov
roll
inc
cs
dec
pop
ja
pop
xchg
lahf
mov
aas
adc
fsubs
int
loop
inc
adc
ss
push
mov
jns
sbb
lods
sbb
mov
out
inc
aaa
lea
test
insl
ret
aaa
pop
xor
ror
cwtl
shr
push
stos
and
mov
cltd
push
cmp
mov
dec
or
jecxz
mov
std
mov
inc
roll
nop
mov
sbb
cmp
sub
std
mov
imul
pextrw
aaa
and
inc
mov
sbb
xchg
xor
fmuls
mulb
dec
jge
xchg
lcall
icebp
gs
ss
pop
push
or
ret
lock
sbb
lret
sbbl
lret
out
out
lods
jno
mov
mov
mov
mov
sti
add
push
dec
and
orb
addr16
mov
mov
jns
add
sbb
sbb
xchg
mov
cwtl
in
mov
neg
adc
mov
cmc
enter
xchg
pop
shrd
push
xor
in
adc
sbb
sub
in
xor
popa
std
aaa
sarl
push
lods
popa
idivb
jb
cld
push
or
jmp
push
in
and
fisubl
add
xchg
ret
push
roll
leave
frstor
xchg
push
inc
add
pushl
addr16
mov
popf
or
mov
fimull
fisttps
fwait
push
pop
shlb
addb
inc
push
lcall
pop
sbb
adc
sbb
push
icebp
cmpsl
pop
xor
in
movsb
or
int
lret
out
ljmp
mov
rclb
mov
call
in
sti
push
mov
mov
out
lods
ss
in
pop
or
rcr
sub
daa
jg
or
out
bound
invd
xor
lock
jo
mov
int
bswap
vmovdqu
into
mov
arpl
int
les
jns
pop
jmp
lds
enter
mov
sbb
das
ja
xor
push
xchg
xchg
mov
inc
enter
mov
sub
jnp,pn
aas
insl
lcall
fldcw
inc
lcall
fisttps
cmc
jne
jmp
pop
mov
sarb
xchg
mov
out
shll
cmp
pusha
je
mov
nop
cwtl
cmp
es
inc
rorb
dec
enter
mov
push
mov
or
sbb
das
imul
and
lods
sbb
bound
in
adc
stos
dec
or
cmp
xchg
clc
stc
fsubrs
pop
lock
sbb
ss
sub
cs
push
addr16
jl
sbb
and
add
cli
les
jne
dec
scas
lods
pop
ffree
inc
inc
inc
or
sub
mov
lock
dec
mov
xchg
push
sbb
mov
inc
inc
out
and
lret
mov
stos
jp
je
mov
aas
insb
xchg
or
sbb
jbe
xchg
lods
xor
mov
jmp
pop
mov
in
fbld
mov
stc
nop
fs
mov
popf
adc
sbb
and
test
and
jle
mov
jbe
sti
inc
int3
add
jbe
daa
mov
add
int3
test
xor
and
cmp
cmp
stc
cmp
lahf
fidivrs
pop
inc
inc
inc
or
pop
pop
rol
mov
cmpl
aas
icebp
pop
stc
sub
pop
ret
stos
xchg
xlat
ja
mov
jl
add
xchg
and
mov
jecxz
icebp
xor
ficomps
and
loop
mov
loop
or
add
lret
cli
xor
cmpsb
aas
jb
aaa
mov
and
ljmp
sbb
jmp
and
jne
mov
jns
mov
pop
add
enter
xor
adc
adc
cltd
jl
cld
popa
and
cltd
sbb
in
ljmp
push
jae
out
push
iret
add
sbb
xchg
lds
bnd
dec
loop
dec
lahf
mov
xchg
in
out
movsl
and
pop
arpl
push
or
mov
fcmovu
es
adc
inc
rcl
mov
mov
mov
xor
cmpsb
sub
das
or
loop
aas
dec
sbb
rcl
loopne
iret
jnp
cld
subb
sub
js
mov
adc
dec
int
scas
jns
pushf
js
out
call
pop
daa
jl
test
jbe
movsl
jne
jno
test
cmp
dec
and
push
cs
ret
insl
pop
repnz
xchg
sbb
xor
pusha
and
shl
cmp
jp
add
cmp
pop
xor
lods
push
add
xor
and
out
inc
fcmovu
pushf
enter
ja
ficoms
daa
adc
loopne
bswap
in
jns
mov
repnz
xor
jnp
fsubs
stos
cmp
xlat
or
int3
imul
jecxz
push
mov
rcl
sarb
add
pop
xchg
loopne
sti
push
mov
mov
inc
cs
push
dec
in
xlat
xor
mov
imul
dec
and
das
mov
push
pop
mov
shlb
fcomps
mov
aas
push
push
dec
icebp
push
cmp
rcrb
xor
mov
dec
gs
mov
ret
enter
or
add
mov
cmpsl
or
iret
adc
jle
sub
push
addr16
out
sbb
push
push
push
fimull
call
ss
dec
imul
jne
imul
lahf
add
ficoms
push
mov
xchg
mov
imul
xor
rol
hlt
mov
repnz
scas
mov
add
pop
xor
push
xchg
ja
loope
hlt
sbb
cmp
hlt
jne
aam
ds
jp
fstpl
lock
repnz
pop
es
mov
call
addr16
popa
lods
ja
mov
mov
repz
add
test
adcl
xor
sbb
hlt
push
insl
jb
cmp
inc
pusha
xchg
fbstp
push
call
out
rcll
outsb
inc
jecxz
movsl
fnstcw
xchg
mov
cmc
insb
xor
fscale
popfw
xor
fiadds
leave
enter
js
or
mov
call
mov
and
loop
mov
jns
lods
lahf
inc
cltd
or
fildll
or
sub
mov
insl
add
out
push
dec
cmp
push
push
pop
ja
cmpb
adc
pop
jno
shlb
jp
xchg
mov
or
sbb
mov
mov
sub
into
and
or
sbb
lahf
push
std
xlat
cld
es
jecxz
loopne
pop
jb
jbe
loopne
test
out
neg
push
push
jp
cltd
inc
mov
lret
hlt
pop
cmp
sbb
jae
mov
cmp
bnd
mov
sub
lea
das
loop
xor
iret
push
fisubrs
mov
addl
push
ljmp
ljmp
loop
rolb
xor
mov
repz
fsubl
xchg
jg
adc
lret
adc
xchg
mulb
mov
cld
decl
xchg
xchg
mov
sbb
addb
ret
jbe
incb
jno
lock
jl
and
xchg
sahf
or
mov
jmp
xlat
pop
in
or
mov
out
lret
pop
lcall
mov
sub
loop
sub
out
aaa
pop
xchg
xor
cmp
leave
popa
push
out
popf
push
dec
cld
outsb
aad
pop
xchg
cmp
jae
adc
in
sbb
push
pop
or
cmc
pop
sbb
fwait
dec
push
pop
fucom
and
test
cmp
cmp
pushf
mov
inc
xor
lret
sbb
push
ret
fsubl
jmp
std
inc
jae
add
rcll
mov
inc
out
mov
test
mov
int3
inc
push
xchg
xor
cmpsl
shll
adc
xor
mov
xchg
mov
test
lret
mov
lahf
movsb
loope
add
add
mov
mov
stos
jge
adc
sbb
or
push
jb
xchg
sub
outsl
or
out
add
sbbb
fs
push
int3
or
stc
rclb
or
addr16
cmpsb
shrl
js
ljmp
pop
stos
inc
or
lock
in
imul
fnstcw
ror
in
inc
sti
adc
inc
adc
fldt
sub
hlt
add
sbb
xchg
cmp
push
cmp
mov
add
push
sti
out
data16
cld
outsl
xchg
mov
lock
mov
addr16
aam
cmp
push
cld
adc
sub
jae
fdivr
lods
lahf
cmpsb
outsl
movsb
xchg
sub
mov
ret
inc
xchg
cmpb
pop
adc
rcl
inc
cmp
add
adc
pop
add
mov
dec
sbb
dec
fsubs
jmp
lret
popf
jl
pop
rorb
push
rclb
mov
push
mov
dec
mov
ljmp
dec
jbe
cmp
rorb
and
jns
push
xor
xor
mov
mov
xor
fsub
cmp
outsb
dec
inc
mov
aaa
cli
cmp
or
mov
jle
ds
mov
fidivs
arpl
leave
sbb
sub
test
ds
stos
push
je
cmp
mov
aam
inc
jo
push
movsl
push
movsb
les
mov
or
mov
daa
and
sub
or
add
loope
push
sbb
mov
push
movsb
mov
out
test
sbb
clc
icebp
or
sub
lock
popa
xlat
ret
add
aaa
xchg
dec
sub
sub
cld
mov
mov
imul
into
adc
sbb
aam
lds
mov
jne
mov
jb
push
push
or
stos
adc
lock
xchg
idiv
pop
jmp
add
shll
cmpb
jo
jbe
imul
mov
aad
inc
mov
push
dec
adc
imul
sbb
cwtl
pop
pop
adc
add
rolb
or
mov
mov
xlat
inc
es
daa
xchg
in
inc
mov
test
jmp
test
scas
or
in
lahf
mov
adc
mov
aaa
scas
lret
sbb
mov
test
lods
cmc
fsubrl
stc
aaa
ret
stos
stos
mov
mov
cmp
loop
mov
shl
pop
cltd
loope
shlb
fldcw
lret
dec
out
push
aam
cmp
push
mov
xchg
fwait
dec
inc
jbe
ljmp
imul
push
dec
cmpsl
hlt
in
pusha
daa
dec
popl
dec
cld
pushf
fbstp
ljmp
ret
popa
sbb
mov
cmp
lock
shrb
inc
mov
pop
in
pop
std
xor
outsl
mov
or
cli
cmp
stos
mov
fmulp
push
lods
lcall
je
or
shlb
mov
divb
in
cs
adc
push
scas
pop
loope
dec
jecxz
sti
lret
je
bound
jbe
xor
mov
adc
flds
xor
nop
pop
xchg
mov
ficomps
shlb
je
or
fidivs
ljmp
pop
mov
sub
outsb
xlat
jns
lock
lahf
ds
pop
dec
adcl
cwtl
jle
and
mov
mov
and
pop
xchg
testl
loopne
inc
subb
inc
int
ret
add
jge
adc
push
jl
push
jbe
jb
mov
ret
mov
leave
andl
jne
adc
jb
dec
mov
js
cld
or
cld
jecxz
into
push
fdiv
mov
xlat
jge
iret
push
jl
mov
mov
pop
stos
xchg
sub
std
loopne
dec
test
pop
idivb
fmuls
mov
xchg
xor
mov
dec
dec
jo
bound
mov
outsl
dec
cmp
jo
loopne
pushf
stos
jmp
mov
sub
push
js
push
in
sub
add
jge
cli
sbb
movsl
cmp
pop
push
stos
sub
dec
popl
dec
dec
out
or
test
iret
stc
ja
stos
mulb
hlt
adc
fdivrs
jle
fcompl
ss
int
push
ljmp
shl
nop
cmpsl
adc
sbb
sbb
dec
bound
inc
je
dec
mov
test
gs
jmp
xor
cs
and
test
sbb
jge
dec
popf
push
mov
or
mov
jo
cmp
add
mull
xchg
inc
test
inc
in
push
jge
cmpsl
mov
add
arpl
mov
mov
or
outsl
shl
fldenv
xchg
idivl
imul
in
cli
mov
flds
push
outsl
fidivrs
std
insb
inc
pushf
movsl
aaa
jg
xor
lock
aad
jge
aaa
call
cmp
mov
aaa
sbb
lret
mov
es
sbb
sbb
fst
and
enter
std
jecxz
sub
xchg
gs
cs
push
or
dec
scas
adc
nop
mov
movsl
out
or
dec
sbb
mov
push
mov
jmp
inc
imul
nop
push
out
inc
lds
adc
aad
mov
or
lods
add
jle,pn
lret
test
push
jle
mov
add
pop
inc
call
ja
xchg
xor
bound
mov
push
les
sbb
pop
jg
xchg
jge
div
rcrb
sbb
pop
inc
push
sbb
xchg
lcall
inc
push
mov
sbb
cmp
inc
nop
test
mov
lock
je
clc
push
xchg
rorl
scas
arpl
shll
inc
loopne
mov
imul
fwait
xchg
and
xorb
and
or
inc
aaa
rcll
out
jp
jno
mov
adc
push
fs
in
mov
popf
mov
jae
mov
adc
add
jle
cltd
outsb
add
jo
test
pop
jg
lock
xor
mov
test
sub
push
lret
or
inc
cmc
popf
cmp
repz
cltd
mov
imul
cmp
adc
mov
shld
jp
sub
xor
or
arpl
mov
arpl
dec
push
addr16
test
push
fs
jb
adc
in
shlb
mov
mov
dec
pusha
lcall
jns
stos
or
loope
dec
xchg
daa
mov
lcall
add
fs
ljmp
jnp
rcll
sar
pop
fst
mov
add
sbb
pop
fwait
jae
xor
fcoml
in
stos
mov
dec
repz
into
fcom
push
sub
outsl
int
adc
scas
stos
xchg
ljmp
xchg
mov
xor
leave
adc
jo
sub
jae
stos
je
nop
popf
jne
jp
jle
es
pop
mov
mov
es
out
xchg
in
les
lahf
scas
adc
rcr
adc
out
rcrl
sti
psrlw
cmp
inc
cmp
jmp
or
pop
cld
or
jecxz
mov
imul
in
out
test
xchg
inc
das
imul
xchg
std
lods
adc
cmpsb
mov
in
cmp
movsb
push
xchg
pop
lods
pop
add
push
pop
dec
cmpsb
and
sbb
cmp
mov
sbbl
and
das
pop
xchg
inc
pop
inc
xor
mov
loop
mov
xchg
mov
jno
sbb
faddl
imulb
adcb
lds
jg
and
mov
mov
sub
pop
mov
xchg
dec
add
or
ficompl
lahf
loope
sbb
jne
bound
fildl
movsb
test
lret
icebp
lret
cmp
mov
mov
mov
imul
adc
movsl
cmp
test
sub
mov
lcall
and
inc
sbb
ljmp
cmp
push
adc
xchg
sub
in
cmpsb
addl
inc
dec
movsl
loope
ret
and
sbb
xor
jecxz
mov
sahf
roll
fnsave
aaa
out
xchg
out
lds
inc
in
rcrb
fcmovne
cmp
shlb
scas
mov
ja
xor
fdiv
cli
xchg
add
mov
into
jno
iret
cs
mov
sbb
cmp
lahf
lock
mov
mov
or
push
cmp
jmp
or
and
adc
mov
mov
and
repnz
cmc
pop
cwtl
repz
fwait
enter
lods
mov
in
into
stc
fimull
out
inc
loopne
cmp
push
dec
insb
in
test
adc
mov
inc
out
in
mov
cmc
in
cli
ss
or
sbb
les
push
xchg
sbb
lods
lahf
jg
call
mov
scas
xor
lods
shl
push
imul
xchg
cmp
add
arpl
xor
cmc
cmp
data16
ja
sub
sbb
hlt
or
mov
add
insl
mov
jne
scas
mov
loopne
inc
push
adc
cs
loopne
das
in
mov
and
cwtl
sbb
dec
push
aas
fwait
sub
mov
fidivs
scas
insb
pop
mov
push
sbb
shl
xor
mov
mov
enter
cmp
sub
and
mov
iret
jb
iret
add
das
adc
imulb
mov
pop
jge
or
sub
lock
rcrl
leave
cwtl
jae
adc
xchg
and
int
push
pushf
push
xor
shrb
xor
daa
aad
push
lret
and
test
inc
add
mov
add
sub
in
inc
inc
mov
in
xor
jb
pop
shrl
sub
aaa
or
loop
insl
adc
xlat
test
es
imul
out
and
dec
inc
inc
cmp
inc
jne
outsb
dec
and
push
mov
add
sub
movsb
data16
add
movsl
aas
stc
and
push
mov
cmovne
add
jno
ret
cmc
xchg
pop
repz
std
mov
je
aad
jno
and
inc
sub
inc
add
gs
sub
inc
popf
inc
es
add
pop
lds
pop
jecxz
loope
cs
xchg
pop
adc
mov
or
adc
push
mov
adc
clc
sbb
sbb
loop
dec
cmpsl
loop
enter
sbb
dec
mov
out
sbb
adc
cmpsl
mov
fs
out
stos
jbe
add
lds
test
dec
popf
sub
pop
fs
mov
mov
mov
sbbb
inc
jg
jnp
mov
popa
insl
or
mov
xchg
hlt
inc
adc
push
adc
and
xor
decb
jmp
dec
jecxz
mov
and
mov
shr
jns
mov
pop
in
cmpsb
pusha
adcl
add
xor
mov
sub
test
jnp
xor
mov
cmp
arpl
lods
aad
jne
push
outsb
lret
inc
dec
pop
leave
and
cmp
dec
pop
jl
leave
mov
into
test
dec
lock
mov
xchg
sub
xchg
testl
shll
push
lret
mov
dec
movsl
popf
imul
mov
jnp
test
ror
mov
movsb
fsubs
pop
cmp
into
ss
push
loope
sbbl
cld
jb
xchg
mov
xchg
sbb
insl
lret
nop
int
cmp
fisttpl
mov
sbb
icebp
fcom
mov
jmp
xchg
or
or
sub
inc
in
cmp
enter
sub
jecxz
or
and
shr
sub
out
pop
lret
pop
out
or
fildl
test
jl
bound
sbb
in
push
outsb
jmp
enter
mov
das
sub
push
jecxz
inc
mov
ds
cmp
xor
and
cltd
les
cmp
and
into
shr
push
icebp
push
fisttpl
cld
mov
lret
cli
jmp
dec
lret
out
outsb
or
lock
dec
push
out
push
mov
push
jecxz
cmp
loopne
int3
ret
jg,pt
or
xor
mov
sub
push
xor
jle
loop
in
enter
mov
addr16
cmp
outsl
hlt
push
jo
sbb
pop
enter
mov
cld
cmp
shr
mov
cmp
dec
push
jno
pop
loope
clc
mov
daa
lds
push
dec
sbb
negb
out
xorps
adc
sbb
scas
jmp
mov
std
pop
jno
enter
jmp
lea
mov
in
inc
push
mov
pop
push
lds
mov
xor
nop
push
add
add
mov
push
out
inc
ljmp
ja
jbe
gs
adc
filds
mov
or
dec
pop
mov
aad
jmp
popf
pop
mov
add
sbb
mov
xor
dec
and
push
out
out
inc
inc
roll
imul
outsb
addb
xchg
sub
xchg
scas
popf
jnp
pop
dec
les
dec
push
jl
add
mov
aas
mov
dec
and
ret
xor
mov
and
test
ss
xchg
xchg
xchg
shlb
outsb
lock
pop
arpl
sbb
push
push
xlat
jl
pop
jg
and
or
rorl
cwtl
sbb
cmp
push
sub
sub
fisttpll
sbb
add
mov
sbbl
inc
sti
push
xchg
jp
and
lock
mov
hlt
ja
jo
rcll
sbb
pusha
mov
add
js
addr16
leave
lea
adc
into
push
jbe
sub
int3
push
cmpsl
mull
negb
xlat
mov
cmpsb
push
pop
mov
and
and
movsb
and
test
fdivrp
nop
xchg
test
aam
movsb
aaa
mov
stos
push
mov
imul
movsl
int3
dec
nop
xchg
aam
and
mov
lock
clc
loopne
sub
jmp
orl
inc
mov
inc
jg
sti
ljmp
mov
mov
les
jl
mov
push
mov
pop
add
dec
mov
adc
in
pop
xchg
pusha
std
push
out
mov
adc
and
cmp
jns
jno
pop
push
and
xor
jnp
test
jae
test
nop
push
dec
loopne
cwtl
xchg
cmpps
sbb
cwtl
pushf
out
lods
movsb
push
and
and
enter
cmpsb
mov
stos
dec
js
pop
cs
rorb
xchg
cli
clc
sbb
mov
out
lds
add
sub
sbb
fisttps
sub
xchg
repnz
push
mov
inc
out
dec
cs
jle
inc
lret
pushf
test
mov
pop
pop
out
and
jns
and
sbb
mov
mov
add
dec
push
mov
and
in
push
adc
lret
test
and
popf
mov
sub
loopne
repnz
lea
int
jp
add
adc
loopne
dec
shrl
lock
dec
js
rorb
push
mov
ss
imul
out
jo
imul
imul
in
enter
xchg
mov
dec
in
pop
push
aaa
out
popf
pop
xor
lret
fwait
cwtl
push
daa
xchg
sbb
sbb
inc
cld
movsl
in
cmp
cmp
stos
test
xor
setp
hlt
xlat
movq
daa
sub
pop
dec
or
cmp
in
pop
push
dec
mov
push
dec
imulb
mov
orb
add
fnstsw
subl
call
xor
mov
sub
and
outsl
test
cmpsb
gs
adc
sub
fs
adcl
shrb
jmp
aad
sub
sub
pushf
imul
shll
cli
lods
outsb
insl
sub
mov
mov
pop
lret
rolb
push
pop
mov
lods
xorl
les
and
aam
es
pcmpgtw
and
jmp
dec
adc
popw
pop
icebp
aaa
scas
cmp
mov
mov
pop
mov
push
dec
std
dec
les
and
sahf
and
pop
sub
sbb
js
subl
mov
add
aam
adc
outsb
sub
ret
and
out
das
out
test
push
jp
push
lock
jecxz
xorl
pop
or
stos
subb
loop
cli
cmc
rolb
cld
sub
fldl
movsl
lcall
dec
cli
je
and
inc
ljmp
xor
xor
loope
adc
into
movl
mov
dec
je
or
sahf
jmp
and
int
std
push
cmpsb
jge
fidivrl
sbb
jnp
arpl
jns
repz
nop
rclb
mov
or
pop
mov
mov
out
sbb
dec
jl
stc
sub
jmp
or
sbb
push
cs
pop
into
rorl
mov
or
xor
movl
das
mov
sub
lock
inc
gs
into
bnd
gs
sbb
or
gs
pop
inc
in
mov
inc
sub
or
divb
jnp
mov
push
push
fidivrl
ffree
into
pop
lahf
cltd
in
dec
adc
repnz
lcall
mov
adc
xchg
lods
pop
mov
ss
popf
in
idiv
aam
xor
cmp
mov
ret
popa
xorl
dec
ret
xchg
push
add
rol
push
dec
jmp
lret
push
lcall
faddl
das
add
mov
add
aad
xchg
das
or
fs
cld
mov
xchg
movsb
adc
jno
ds
sub
cmp
add
aas
pushf
mov
xor
lods
push
jbe
jl
pop
push
sbb
mov
imulb
cmp
xchg
adc
push
test
test
ja
das
pop
roll
mov
cs
mov
loop
scas
je
mov
push
mov
out
jmp
jle
andl
loop
das
sbb
jbe
xchg
sti
and
imul
stos
and
dec
psraw
fisttpll
mov
lock
pop
imulb
jne
add
cs
in
jb
jne
aad
xchg
sub
push
aad
dec
fadds
outsb
or
js
sbb
fucomip
pop
insl
cmp
in
fidivrl
out
ja
jl
add
pop
cli
in
mov
jl
jmp
imul
imul
push
push
jmp
cmp
inc
repz
outsb
adc
mov
mov
xchg
es
or
cmpsb
icebp
call
mov
push
mov
pop
adc
mov
jmp
cmp
mov
stc
test
jl
jl
sahf
mov
movsl
insb
xor
lcall
and
jg
lods
das
push
adc
push
sbb
aaa
insb
psrlq
jg
sub
sub
es
inc
dec
sti
leave
mov
imul
jne
shlb
cmp
mov
push
mov
out
fidivs
add
in
cltd
movsl
jmp
pusha
xchg
mov
loope
test
jl
dec
loope
cmp
fistl
lods
outsl
lcall
leave
pusha
xchg
fbstp
scas
mulb
les
ret
jns
test
cmp
sub
sub
ljmp
ljmp
mov
xor
jge
cmpsl
mov
push
mov
sbb
xchg
aad
push
push
jecxz
test
jns
push
dec
sti
or
loope
das
mov
test
pop
jnp
repnz
xor
adc
jbe
clc
mov
xorl
cmp
or
inc
cmp
sbb
call
jbe
stc
xor
jle
pop
xor
jb
cmp
rcr
and
shlb
mov
lretw
lahf
dec
push
inc
stos
mov
js
in
add
cld
outsl
sarb
mov
sub
daa
scas
sub
icebp
ljmp
in
out
xchg
loopne
clc
addr16
sbb
xlat
std
test
adc
cmc
and
add
jle
sbb
mov
ds
stc
mov
into
adc
sbb
shrl
cli
icebp
dec
stos
ret
iret
insb
lahf
mov
icebp
and
insb
adcl
mov
cmpsb
stc
ret
xor
or
call
push
add
pop
test
pop
sbb
xchg
xchg
lret
fs
dec
lods
cmp
and
outsl
mov
add
xchg
cmp
mov
les
in
les
add
outsb
sub
lds
lods
dec
adc
mov
in
dec
dec
push
andb
add
add
jge
in
inc
cmpb
fisubrs
push
mov
jnp
in
imul
sub
sbb
aaa
pop
inc
dec
icebp
jbe
shll
push
sbb
add
inc
mov
mov
push
into
rorb
or
xchg
pop
push
into
mov
jmp
cmp
mov
mov
fldl
xchg
inc
loop
movsb
inc
jno
sbb
push
sbb
clc
push
pop
lds
int3
jae
icebp
mov
mov
ret
cmpsl
icebp
add
pushf
inc
xor
jno
mov
daa
and
xor
scas
js
repnz
call
lods
dec
mov
cmp
add
adc
cli
test
call
int
iret
push
cltd
jge
lods
jae
jecxz
cmp
inc
jno
test
add
sarb
pop
xor
jo
or
xlat
popa
cwtl
ljmp
mov
fbstp
mov
adc
ljmp
jg
fists
repz
jns
mov
pop
adc
es
mov
add
fbstp
pop
nop
insl
add
lcall
movsl
pushl
push
jno
incl
cmpsl
enter
insl
jae
loop
mov
rcrl
cmp
and
les
jae
fld
mov
repnz
les
xchg
cmp
xchg
pusha
mov
cmp
cld
fistps
testl
jcxz
mov
jae
push
mov
icebp
adc
lcall
arpl
xchg
pop
inc
mov
inc
in
cmp
inc
and
or
push
cwtl
popa
or
fst
rorl
pusha
inc
test
dec
dec
add
shl
in
xor
int
fidivl
out
jns
in
cmp
jne
and
dec
test
out
jb
shlb
sbb
das
mov
jle
pop
ficompl
stos
dec
xor
sub
pop
sti
sub
adc
jb
add
and
cmp
lret
push
dec
out
jle
lcall
dec
addr16
das
inc
sbb
rcrl
push
pop
adcl
jbe
xchg
pusha
sub
push
in
cmp
fdiv
dec
xor
test
mov
push
adc
fstp
mov
rcrb
jl
aad
es
aas
jnp
es
fcmove
and
int3
jb
mov
push
sub
int3
add
inc
push
add
pop
es
xor
push
fwait
pop
inc
jle
repz
inc
sbb
repnz
dec
push
mov
dec
repnz
pop
testl
out
xor
xor
cmp
fldl
cmp
xchg
outsb
hlt
fsubrl
hlt
adc
in
adc
movsb
mov
push
aaa
aam
jl
push
test
scas
xor
xor
pushf
pop
js
inc
push
fwait
insb
cli
rorl
xchg
es
test
test
xlat
mov
lret
lcall
lods
js
arpl
xchg
jbe
sti
lret
rorl
test
repz
xlat
cmp
cmc
pop
jbe
movsb
pop
lret
jmp
sub
adc
fdivr
in
jb
push
cld
repnz
mov
ja
mov
lock
mov
hlt
fs
mov
xor
inc
push
jp
scas
jecxz
mov
jbe
mov
bound
outsb
mov
leavew
or
push
dec
scas
mov
es
aas
js
mov
lret
push
fdivs
sub
out
xor
push
adc
sbb
out
push
int
xor
xchg
sub
sbb
pushf
out
or
pop
mov
or
xor
xchg
inc
les
nop
mov
out
test
pop
insb
sub
xor
or
mov
stos
sti
mov
in
arpl
icebp
jp
dec
xlat
inc
xchg
dec
ja
data16
mov
mov
push
shlb
sbb
aaa
pop
dec
in
outsb
cmp
cs
call
fidivrs
jae
jmp
mov
arpl
mov
ja
decb
out
pop
mov
cli
push
cmp
sbb
add
sub
arpl
and
movsl
inc
xchg
hlt
push
ret
cmp
neg
xor
lods
push
and
mov
adc
loop
add
js
push
fistpll
in
fnstcw
or
sub
mov
xchg
xor
das
stos
pop
pop
push
aaa
iret
dec
js
and
push
pand
hlt
push
add
inc
es
and
add
adcb
mov
push
ret
cmp
fwait
stc
nop
aaa
mov
mov
and
clc
cmp
into
add
mov
or
shrl
pop
mov
aad
clc
lret
test
repz
dec
and
jmp
int
or
dec
les
jb
sbb
sub
pop
in
push
mov
ret
inc
aad
add
xchg
jl
loopne
popa
add
inc
push
faddl
push
cmp
pushl
cmp
xchg
mov
dec
out
movsb
push
push
sbb
mov
sub
mov
ds
ret
cs
pushf
aas
sbb
inc
frstor
jno
arpl
mov
lds
and
jb
cmpxchg
push
sbb
push
out
fstl
into
rclb
sub
mov
data16
mov
arpl
rcll
mov
inc
das
sbb
lret
mov
fwait
mov
sarb
mov
xorb
daa
or
push
aas
sbb
dec
pop
ret
clc
sub
xchg
fidivrl
ja
stos
hlt
out
xchg
xchg
sbb
mov
insb
xor
aas
insl
sahf
or
dec
scas
jg
jle
push
cmpsb
lock
dec
rclb
rcrl
jg
and
dec
scas
stc
cmp
test
bound
ds
rclb
into
imul
push
inc
fists
jmp
mov
outsl
xor
mov
rcrb
in
jb
cmp
jo
jecxz
stc
lods
lahf
dec
nop
stos
arpl
inc
mov
lcall
imul
std
imul
imul
mov
xor
fisttpll
push
stos
xchg
stos
nop
jle
ret
int3
cmp
jmp
push
push
pop
mov
ret
out
shr
gs
xlat
and
notl
cld
adc
and
xchg
jmp
pop
ja
cltd
mov
pop
out
jae
fidivrs
jbe
adc
je
add
repnz
inc
and
jbe
adc
cmpsb
stos
clc
push
stos
fs
pop
xchg
bound
ror
xor
ljmp
icebp
arpl
jle
repz
aad
ret
or
cmp
adc
and
into
dec
pop
mov
mov
add
movsb
xor
push
or
stos
stos
push
loopne
cltd
and
pop
ljmp
ret
ret
cmp
push
ss
jno
or
lret
jg
lods
imul
mov
lods
adc
iret
and
call
xchg
mov
int
fsts
push
rorb
ror
das
stos
loope
or
icebp
xchg
gs
sub
push
push
jg
fisubrs
adc
or
push
lahf
jp
lds
es
pop
mov
sub
loop
add
pop
sti
cmp
test
lret
mov
pusha
inc
inc
push
aad
xchg
mov
push
sub
pushf
pop
cwtl
enter
xor
jecxz
test
add
in
xchg
lea
pop
dec
mov
or
or
in
out
mov
push
mov
scas
mov
sbb
cmp
jns
xchg
jbe
addl
mov
adc
sahf
xacquire
jecxz
mov
popf
mov
lret
int3
cli
fldt
aaa
out
movsb
xchg
push
mov
lahf
or
mov
adc
daa
cmp
sbb
sbb
cld
sbb
jb
frstpm(287
daa
aam
insl
and
pop
cmp
add
cmp
ds
out
cmp
adc
mov
mov
aad
and
mov
mov
fdivrs
sbb
mov
jge
cmp
loopne
sub
mov
dec
mov
xchg
test
dec
sbb
es
dec
adc
xchg
mov
popf
std
push
or
or
pop
cmpsl
cmp
xor
lret
clc
aad
xorb
mov
repz
inc
mov
mov
sbb
loope
xor
dec
xchg
scas
and
mov
pop
mov
add
add
loop
xchg
sbb
fsub
sub
aam
rcl
pop
push
nop
aaa
mov
mov
lret
mov
push
mov
int
loopne
in
sbb
and
test
leave
popa
mov
icebp
mov
pop
mov
xor
aas
in
sti
xor
and
mov
adc
movsl
gs
enter
xchg
or
add
ds
loopne
xor
sbb
sahf
dec
inc
enter
lock
movsl
sbb
fsub
daa
sub
jp
cmp
sub
pop
lret
mov
and
dec
arpl
dec
lods
xchg
adc
mov
in
aam
mov
mov
stos
lods
lock
mov
lods
movsb
fwait
sahf
dec
cld
or
pop
sarl
or
in
or
dec
ret
std
adc
add
in
jae
sahf
shll
mov
in
mov
enter
push
lret
jmp
cmp
add
test
loope
inc
jae
fs
loopne
addr16
push
cmp
push
ss
leave
jmp
popa
rcr
icebp
repz
jmp
pop
xor
aad
inc
shrl
inc
mull
or
fmuls
sub
cmc
pop
jl
jmp
ljmp
mov
sub
nop
or
ja,pn
dec
icebp
push
jg
movsb
fld
sti
mov
ficomps
mov
sub
mov
inc
scas
cmp
dec
sub
scas
pop
dec
test
subb
mov
inc
mov
cmp
xchg
jo
mov
into
mov
dec
outsb
push
mov
push
or
xchg
nop
xor
cmp
fidivs
mov
imul
mov
or
mov
gs
es
lahf
stc
outsl
and
out
into
push
or
stos
test
xchg
push
test
dec
dec
add
stc
aad
leave
out
pop
jmp
add
nop
clc
gs
stos
lret
enter
imul
iret
pop
sub
cmp
lods
subl
in
mov
clc
or
scas
rcrb
inc
adc
pop
ja
cwtl
movsb
in
popa
push
popa
outsb
push
idivb
jbe
pop
xlat
mov
push
sbb
scas
push
inc
jl
pop
sub
imul
aas
mov
test
sbb
movsl
jbe
push
sub
stos
jo
or
adc
cmpb
sti
lret
das
mov
push
int3
add
fiaddl
pop
add
ja
inc
adc
add
jge
fdivs
insb
popf
pop
jmp
pop
xor
add
arpl
es
mov
xchg
orl
mov
cwtl
data16
jno
nop
push
push
xchg
adc
fdivs
xor
push
insl
pop
loopne
jmp
or
xlat
push
je
iret
ds
and
mov
out
das
pop
or
xchg
les
dec
popa
and
mov
ficompl
aam
xchg
adc
pop
gs
popa
sub
ret
cwtl
xchg
jmp
fiadds
or
add
cmp
loop
arpl
mov
nop
xchg
adc
jl
pop
dec
xchg
xchg
jecxz
xor
or
sbbb
aas
and
pop
lds
lret
inc
mov
mov
cmp
xorl
mov
add
scas
pushf
sub
push
clc
movsl
jge
sub
mov
pop
ljmp
add
fs
xchg
jae
push
fucomp
neg
divb
je
jo
fisttpll
or
js
rorl
jp
addr16
push
pop
mov
jnp
repz
rorl
push
nop
lods
add
xor
pop
jge
cwtl
xor
rcll
dec
arpl
lret
sub
sbb
xchg
stos
int
lds
mov
lret
arpl
mov
sahf
mov
int3
sub
pop
jne
dec
dec
add
and
nop
dec
js
push
pop
adc
push
mov
outsb
adc
mov
cli
mov
pushf
aad
mov
adc
mov
jbe
bound
sbb
pop
jmp
faddl
sbb
orb
sub
daa
push
popf
pop
inc
adc
sbb
mov
repnz
or
xlat
push
xlat
push
mov
pop
push
stc
lcall
cmp
cmp
int
jmp
cltd
insl
pop
sbb
popf
dec
data16
mov
sub
dec
arpl
lret
cmp
xor
dec
jle
shrb
jge
xchg
or
scas
sub
inc
and
imul
adc
inc
lods
dec
sub
movsl
cmpsl
mov
mov
cmpsb
int3
pop
inc
test
mov
jle
lretw
jae
or
fs
in
dec
fsubl
pop
jb
mov
mov
cltd
jg
jecxz
or
les
mov
mov
jmp
jae
mov
sti
jo
sbb
ss
insl
inc
stos
cmp
int3
add
sub
aad
lock
pop
xchg
roll
cmpsl
int3
fucomip
out
stc
fildll
adc
lcall
mov
enter
test
pop
jge,pt
lahf
fsts
xchg
pusha
cmp
mov
sbb
repz
jecxz
xchg
pushf
test
pop
jp
sub
pop
mov
xor
sbb
xor
test
clc
sub
aaa
popf
xchg
adc
ret
popf
in
cmp
jnp
imull
hlt
xacquire
or
add
pop
stc
loop
mov
nop
jns
lcall
mov
lcall
repnz
je
push
and
inc
hlt
sub
xchg
pop
insl
mov
add
cld
jne
or
rol
pop
push
pop
adcl
jmp
loop
ss
insl
add
cmc
or
pop
cltd
test
sahf
mov
jg
movl
xlat
mov
sub
into
push
lret
cli
outsl
stc
mov
addr16
cmpsl
sub
sub
cmp
aas
in
add
dec
dec
repnz
or
mov
scas
adc
or
pop
enter
inc
inc
mov
sub
pushf
pusha
add
mov
ds
pop
jns
dec
add
repnz
cmp
or
loopne
call
cmp
lods
lods
mov
xlat
lahf
add
ret
mov
sub
test
test
lods
adc
iret
cld
dec
pushf
inc
movsl
xchg
xchg
lds
xchg
mov
fsubl
cld
into
lods
dec
rcrl
scas
and
xor
mov
test
lock
lcall
jp
push
fptan
jnp
je
lock
js
cmp
hlt
xor
dec
mov
idiv
andl
push
test
fildl
hlt
cmp
or
and
jnp
xlat
insl
push
cmp
imul
int3
or
faddl
and
cmp
cltd
or
dec
xor
dec
xor
jae
pop
xor
push
adc
outsl
cmpsb
cld
add
dec
add
shrl
addr16
xor
push
jne
inc
enter
out
push
mov
dec
data16
xor
sbb
out
cld
pop
inc
popf
idivb
lret
clc
xor
adc
xor
and
sub
rcl
repnz
push
loope
or
add
insb
data16
xchg
outsb
cmp
ret
push
pop
mov
cwtl
cmp
call
fistps
in
aam
pop
inc
popa
fdiv
icebp
mov
pop
adc
aas
jg
loopne
mov
imull
fisubrl
sub
sub
or
rolb
sub
scas
inc
into
sbb
icebp
pop
and
mov
cmp
pop
outsb
push
aas
flds
sub
dec
xchg
inc
mov
inc
adc
aas
cmpsb
and
dec
xor
cltd
pop
fists
jp
mov
cmc
and
mov
ficompl
inc
inc
push
mov
mov
pusha
xor
int
pop
mov
cs
pop
lret
sbb
push
dec
in
mov
orb
cmp
inc
fcoml
push
mov
xchg
pop
imul
dec
jecxz
fidivrs
and
jo
je
mov
or
cld
add
in
jns
adc
into
mov
sahf
mov
xchg
fstl
test
icebp
sub
mov
push
mov
out
in
lret
popf
lcall
xlat
mov
and
fidivrs
mov
out
cld
adc
pop
incl
push
mov
xor
jbe
scas
in
call
rol
push
ret
sub
icebp
jmp
les
popa
dec
into
mov
mov
mov
imul
sbb
int3
addr16
sub
push
mov
sub
dec
outsb
gs
lahf
sbb
mov
jle
outsl
push
inc
push
fsubl
cli
or
aam
fsubp
lcall
cltd
push
xchg
movsb
sarb
push
cmp
lret
pop
add
lcall
mov
xchg
xchg
sub
cmp
imull
shrb
add
cmp
mov
push
pop
inc
test
cmp
mov
cmp
mov
mov
push
cmp
adc
mov
jno
xor
push
arpl
push
aam
xchg
cli
lret
pcmpeqw
pop
add
movsb
inc
sub
sub
lretw
cmpsl
inc
cmp
mov
mov
cmpsb
inc
sub
int3
mov
repnz
inc
jbe
mov
mov
pop
cli
mov
scas
cmpsb
out
lcall
xchg
in
push
cmc
dec
and
push
cmp
mov
push
cwtl
js
xor
adc
jmp
jg
hlt
movsb
stc
and
mov
idiv
xchg
pop
adc
lock
out
outsl
ds
cld
adc
in
in
pusha
cmpsb
add
rclb
int
xor
xor
mov
pop
jb
mov
lds
popa
xlat
or
pushf
aad
aaa
in
mov
in
add
mov
outsl
punpckhwd
ss
ds
or
popa
cmpsl
jno
dec
outsl
cld
cld
mov
mov
pop
data16
push
mov
jns
inc
add
xchg
mov
sbb
int
or
sbb
jno
xchg
cmp
mov
loop
mov
push
ljmp
cmp
or
loope
jmp
pop
add
cmp
mov
cmp
call
mov
mov
test
push
cmpb
in
dec
mov
jg
and
imul
bound
mov
or
sub
inc
cmpsl
test
popa
pop
or
mov
adc
lea
and
dec
bound
xchg
sbb
sarb
jge
and
iret
add
lret
mov
cmp
out
iret
sbb
fstl
adcb
mov
xchg
push
in
push
mov
dec
sbb
es
addps
cltd
dec
shll
inc
xor
ss
mov
sub
sub
mov
dec
mov
in
xor
repz
insb
adc
push
pop
jno
add
sub
pop
cli
leave
sti
movl
nop
xor
ss
cmp
mov
add
sub
ds
sahf
inc
pop
jns
fsubrp
fisubl
cmp
daa
push
out
mov
or
sti
mov
repz
test
jl
xor
add
xchg
scas
inc
push
in
jne
lods
add
mov
mov
cmp
xor
test
popa
mov
outsb
and
pushf
test
std
add
orl
cmc
data16
repz
aaa
leave
movsb
loope
cmp
sub
shrb
adc
test
xor
mov
bound
cmp
dec
mov
push
leave
je
pcmpgtw
mov
jmp
test
mov
cmp
jge
mov
pop
mov
mov
lds
fists
push
mov
loope
mov
xlat
or
test
add
mov
xchg
mov
mov
movb
hlt
aaa
mov
inc
dec
and
dec
sub
mov
and
scas
bound
inc
jae
ret
cmp
out
test
cmp
lahf
and
lahf
mov
fstl
pop
stos
xchg
xchg
flds
dec
leave
mov
daa
enter
js
mov
jp
mov
jnp
lds
es
mov
mov
push
ficoms
and
or
pop
ss
mov
dec
push
xchg
fistpl
cmp
or
xchg
pushf
ficomps
movsb
lcall
cmpsl
subl
cmc
inc
jo
lock
dec
xchg
mov
jnp
outsb
mov
mov
fldl
imul
fadd
add
popf
adc
insb
loop
shll
fistpll
test
jb
fsts
popf
inc
bsf
fdivrs
jae
jle
lahf
jecxz
sti
popf
mov
scas
or
jecxz
lods
cmp
pop
push
icebp
lods
out
or
sbb
loope
jecxz
push
inc
fcoml
mov
push
pop
jmp
pop
or
sbb
imul
movl
mov
pop
inc
dec
std
push
aas
lahf
jnp
imul
dec
leave
jmp
pop
add
stos
pop
pop
cmpsl
xchg
mov
mov
sbb
cmc
mov
int
sbb
push
mov
rorl
pop
sbb
sbb
lahf
rcr
and
in
in
repnz
dec
dec
xchg
stos
jns
sub
sub
sbb
inc
iret
xchg
frstor
cltd
psrad
ret
push
inc
push
in
or
clc
push
sub
out
out
repz
fcmove
repnz
add
sahf
xchg
lea
cmc
jp
stos
add
jne
lods
rcr
cmp
lods
aam
daa
mov
in
xchg
scas
clc
mov
cmovnp
stos
mov
xchg
sub
cmp
mov
pop
or
fistl
out
mov
in
sti
arpl
popf
scas
rcll
pop
incl
loope
inc
jns
outsl
sbb
xor
mov
push
jmp
jl
dec
adc
fwait
les
js
shr
or
rcrb
mov
test
mov
mov
stc
xor
mov
adc
sub
jbe
test
push
adcb
int
mov
jl
pop
shl
sbb
jl
sub
and
pop
fs
adc
mov
insb
push
xor
enter
pop
cwtl
mov
push
mov
or
int3
shlb
stos
loop
dec
insb
shlb
cwtl
push
mov
mov
enter
mov
xchg
pushf
cmp
and
sbb
lods
loopne
pop
in
xchg
jo
xor
in
jae
daa
xor
pop
mov
dec
xlat
sbb
cwtl
cmp
fst
into
enter
and
inc
paddw
fs
mov
xchg
xchg
sub
mov
pop
lods
inc
cmp
pop
movsb
stos
aas
push
push
dec
daa
jns
sbb
or
js
out
sub
gs
in
pop
add
negl
dec
xor
psubsb
addr16
js
adc
shl
cwtl
jle
mov
ja
stos
cmpsl
mov
lea
je
sbb
pop
ds
and
in
mov
jg
xor
in
push
inc
ljmp
mov
lahf
ret
cmp
icebp
pusha
xchg
jg
mov
fimull
cmc
out
lret
js
mov
jecxz
ja
pop
cli
inc
jp
cli
pop
or
in
scas
sub
adc
clc
out
fucomi
daa
nop
fsubl
sub
mov
loop
hlt
test
scas
push
fisubl
inc
in
or
pop
adc
mov
push
insb
fcmovu
inc
jnp
pop
xchg
in
fidivrl
sub
sbb
push
cltd
cmp
pop
adc
mov
add
aad
loopne
fs
add
aad
shr
clc
pop
jae
xlat
xchg
push
mov
out
inc
in
push
fadd
je
jmp
dec
imul
sahf
xchg
mov
jns
aaa
mov
js
add
insb
cmpsl
cltd
mov
mov
stc
inc
addr16
test
mov
call
ja
fsubrs
or
stos
jecxz
or
int3
das
or
pop
mov
in
dec
pop
mov
push
mov
in
adc
mov
scas
mov
loope
xchg
loopne
push
sub
jl
jg
int
sub
dec
mov
ds
xlat
shrb
cmpsl
xchg
and
sub
int
jns
lahf
fxch
lret
lahf
jo
mov
xor
lds
ljmp
pop
mov
outsl
scas
mov
dec
lock
adc
ljmp
push
mov
cmpb
xchg
mov
push
sub
push
sbb
push
les
shl
dec
out
outsb
popf
mov
mov
arpl
mov
lods
push
aas
shll
push
sahf
jb
push
imul
aam
sub
lock
cld
or
loopne
add
mov
xor
mov
push
pop
push
sbb
rcrl
mov
popf
ja
dec
pop
sub
les
push
int3
es
mov
insl
shll
in
add
movsb
scas
fs
daa
lahf
pop
mov
sbb
lret
cs
mov
imul
add
in
pop
outsl
add
aad
pop
xor
push
sbb
jns
adc
add
sub
cmp
inc
jnp
out
xor
test
movsl
aaa
or
into
mov
pushl
lahf
jecxz
adc
or
and
and
add
icebp
cs
mov
fwait
out
add
ljmp
mov
jae
mov
add
movsb
mov
sarl
or
inc
push
imul
mov
test
rol
mov
jno
rorl
test
arpl
aam
insl
jl
mov
cmpsl
insl
mov
test
andb
lret
push
pop
lcall
fmull
dec
add
stos
leave
inc
lock
jns
adc
fadds
and
jns
jle
dec
scas
shr
or
ss
xchg
fnstenv
xchg
lahf
push
adc
repnz
dec
shll
popa
mov
stc
subl
nop
bound
insb
or
in
cmp
ror
mov
aas
sbb
add
adc
add
sub
push
dec
dec
push
je,pn
sub
push
sub
push
fbld
adc
jo
cwtl
adc
push
arpl
movsl
out
add
cwtl
push
cld
sbb
jbe
mov
push
xchg
cld
rolb
fnstsw
lcall
lds
and
lods
shrl
adc
dec
sbb
rorl
dec
ds
push
in
mov
test
adc
adc
data16
es
dec
push
mov
test
setae
dec
lcall
in
scas
enter
xchg
mov
sub
lods
addl
jnp
ds
sahf
ret
aaa
les
shll
hlt
xor
jo
test
cmp
pop
jp
pop
in
mov
in
rorl
sahf
lret
xor
sub
pop
fildl
mov
loope
js
add
sahf
jns
dec
loopne
inc
sbb
movsl
xchg
not
sbb
imul
and
push
outsb
cmp
xchg
jo
cmp
mov
xlat
adc
nop
fld
aam
popf
push
push
aas
sbbb
pop
je
pop
and
lods
lret
cmp
vprotq
daa
push
dec
mov
add
jg
shl
mov
lahf
adc
jnp
lret
into
cs
push
pop
dec
jne
sarb
inc
pop
mov
jne
mov
adc
mov
rolb
lret
adc
dec
call
sti
rorb
mov
xchg
push
mov
mov
in
add
inc
dec
test
cmp
scas
bound
sti
pop
movsl
hlt
in
push
cmp
mov
or
jne
jno
xchg
fmuls
sti
movb
dec
xor
arpl
lcall
rol
loop
mov
popa
xor
aad
cmpsl
movsl
mov
cmp
insb
inc
movsb
aad
adc
cmp
cmp
loopne
mov
das
out
mov
jmp
jae
add
inc
xor
sub
mov
addr16
dec
jbe
mov
xor
pop
cmp
cmpsb
and
jg
mov
sarl
scas
rcr
xchg
sti
sar
in
inc
je
fwait
out
pop
sarl
jg
bound
jmp
aaa
xchg
clc
sbb
cmp
add
clc
sbb
repz
pop
mov
push
movswl
mov
push
mov
js
pusha
xchg
out
decl
adc
movsl
mov
add
daa
jle
mov
lahf
pop
les
fdivs
sub
mov
xor
pushf
fucomp
mov
jb
xchg
fidivrl
jnp
stc
xor
lods
jae
test
clc
xchg
std
cmp
aaa
lcall
bound
aas
dec
push
lods
pop
xorb
add
dec
dec
jmp
rol
jbe
cmpsl
mov
lea
aam
push
and
mov
and
lahf
js
stos
mov
xlat
lods
ljmp
bnd
cmc
ljmp
jo
mov
push
fidivl
scas
movsb
push
add
xor
call
mov
fmuls
lea
ljmp
repz
cli
dec
pusha
mov
add
push
dec
clc
push
cmp
shrl
mov
mov
int3
xchg
popf
std
mov
xchg
aad
or
sub
pop
rolb
inc
cmovbe
hlt
sbb
cmp
mov
out
add
or
cmc
test
cwtl
mov
int3
xchg
ret
dec
pop
stos
adcb
adc
dec
cld
call
in
sbb
add
xchg
cmpsl
push
mov
mov
sbb
cmpsl
test
lahf
jbe
pop
fisubrs
ja
test
arpl
int3
jl
pop
hlt
push
sbb
aaa
mov
mov
xchg
adc
mov
repz
cmpsb
iret
addb
and
add
sbb
cmpsl
test
mov
stos
test
popf
and
jnp
cwtl
cmp
pop
lock
addr16
in
idivb
xor
mov
mov
mov
repnz
and
mov
imul
repz
and
sub
ja
daa
ljmp
out
mov
cmp
jno
sub
cli
inc
jle
sub
xchg
insb
jnp
adcb
call
lret
pop
imul
sub
imul
ret
mov
mov
mov
dec
mov
mov
das
in
mov
scas
or
call
push
ret
pop
in
dec
aas
sbb
pop
imul
xor
mov
dec
cmpsb
out
pop
dec
ljmp
jle
push
mov
xchg
out
or
xor
scas
lea
xchg
mov
sub
push
loopne
dec
push
idivb
pop
cmpsb
push
adc
ss
lea
xchg
push
ds
adc
inc
arpl
push
sbb
sbb
outsl
mov
mov
pushf
ret
test
xor
fnstsw
sbb
xor
and
scas
mov
mov
sbb
ficoms
stos
adc
dec
scas
fstpl
dec
pop
sub
jo
clc
call
jae
fistps
into
icebp
jge
xlat
out
and
mov
push
ss
cmc
and
sub
ret
xor
roll
adc
test
adc
push
call
pop
jnp
roll
sahf
inc
and
mov
jge
iret
inc
inc
lahf
dec
mov
adc
push
push
pop
xchg
mov
ret
retw
es
xor
lret
inc
add
mov
or
packssdw
lds
xchg
jp
sahf
int3
cmp
or
in
jge
jo
scas
js
jbe
movsb
enter
outsb
mov
scas
push
lret
es
js
cmpsb
testb
fcmovu
add
sub
pop
loopne
sub
inc
int3
pop
js
ret
loop,pt
jecxz
movsl
in
xchg
test
mov
call
lock
xchg
enter
push
push
test
sti
xor
inc
iret
fwait
pop
cltd
adc
cmp
fstps
and
sbb
subl
inc
inc
movsb
imul
popw
subl
cltd
les
cs
ret
in
sti
in
xchg
sub
push
in
inc
imul
orl
int
cmp
lret
int
push
inc
add
adc
add
stos
sub
mov
adc
lock
lret
xchg
pop
jmp
dec
and
jmp
daa
push
xchg
pop
in
mov
sub
mov
cmpsb
xlat
xor
cwtl
test
icebp
push
lock
out
mov
xchg
push
or
xchg
sbb
push
shll
jae
sub
jmp
mov
xor
les
push
aam
sub
or
cli
insb
add
mov
ret
imul
bound
inc
mov
inc
jbe
cli
mov
mov
lods
mov
into
inc
lds
inc
cmp
mov
fisubl
jnp
sub
repz
add
push
dec
in
mov
add
repnz
mov
fdiv
loopne
mov
mov
movsb
sub
fwait
mov
cmp
dec
cs
mov
mov
and
mov
in
push
out
aam
jbe
cmpb
repnz
lods
sub
cmp
push
or
sub
lret
cli
pusha
jne
mov
and
mov
daa
lods
frstor
mov
movb
popl
sar
ljmp
xchg
pop
pushl
roll
pop
or
fsubrs
lret
or
sub
mov
pop
decl
test
cli
and
shr
add
pmulhuw
jae
not
imul
pop
sbb
sbb
call
jb
mov
bound
jp
inc
xchg
or
aas
cltd
mov
pusha
stc
xor
or
in
int
xchg
push
push
jne
adc
rcrb
jns
mov
loop
jnp
cmp
inc
lds
lahf
mov
fwait
mov
cmp
inc
cli
jp
sub
imul
xor
cli
mov
inc
mov
stos
bsr
xchg
and
mov
lahf
push
ret
pop
flds
pop
fwait
imulb
insb
out
inc
outsb
lock
lods
popa
test
cmp
mov
lea
inc
test
out
and
xor
dec
pop
dec
mov
cmpsb
mov
xchg
pop
loopne
stc
js
mov
push
pop
sbb
ljmp
in
xor
cwtl
aas
std
popa
iret
jmp
lret
lret
jb
outsb
add
pop
dec
add
and
movsl
xchg
sub
sub
xchg
out
imul
pop
xor
add
cmpsl
push
jno
aam
ja
call
cwtd
das
rcrb
hlt
adc
mov
mov
inc
test
repnz
mov
daa
and
addr16
sub
roll
lock
add
fs
sub
jp
dec
fwait
mov
sub
inc
inc
rcll
jae
fisubl
cmp
or
insl
sbb
adc
out
add
cmp
aam
or
inc
sub
aam
cltd
push
neg
cmp
jmp
movsl
dec
adc
in
adc
adc
mov
push
push
addr16
inc
mov
cld
int3
enter
xor
adcl
jae
lods
out
scas
test
cmpb
pop
mov
mov
cmp
fisubs
es
xchg
iret
clc
roll
sub
shll
aaa
cmpsl
popa
xor
arpl
add
das
xchg
into
dec
fsub
cmpsb
iret
add
std
cli
mov
aam
cmp
sub
push
jmp
int
mov
cmp
arpl
pop
rdtsc
inc
cld
sbb
test
xchg
outsb
popa
out
iret
mov
xor
jmp
xchg
stos
icebp
bound
add
ss
lret
cmp
fnstsw
jg
dec
and
xlat
mov
in
xchg
ss
push
sbb
test
movsb
jb
cmp
mov
cld
scas
adcb
inc
sbb
cmp
stc
cmp
mov
sti
pop
mov
mov
cmp
jns
popf
sti
adc
lcall
xchg
or
aad
rolb
adc
sub
dec
andb
mov
push
jg
shrl
sti
lods
sbb
mov
jge
nop
adc
jg
es
outsb
xchg
jle
in
loopne
and
lea
cmc
pushf
cmp
je
sbb
sub
xchg
mov
mov
mov
jmp
leave
or
mov
aad
pop
jb
pop
jno
or
in
sarb
push
das
pop
stos
insb
inc
jecxz
sub
or
or
push
cwtl
add
mov
mov
das
mov
popa
fisubrl
outsl
sub
shl
inc
or
cmp
loop
stos
aaa
mov
sub
mov
jl
decb
add
cmpb
ficoms
cmpsb
insl
test
fdivl
pop
pushf
shrl
mull
inc
jmp
sbb
loope
aaa
or
adc
dec
repz
mov
dec
js
mov
jle
inc
xchg
pop
test
xchg
jne
lahf
mov
sbb
pop
xchg
jmp
mov
jb
adcl
subl
mov
in
fistps
loope
sub
mov
xor
sbb
addb
or
mov
lahf
and
aam
insb
fnsave
repz
fs
pop
pop
inc
inc
cltd
xor
pop
addr16
push
mov
xor
mov
cwtl
mov
les
xlat
cmp
flds
xor
xor
mov
ljmp
dec
inc
subb
inc
mov
icebp
sbb
lods
in
ret
sub
xlat
xlat
cmp
pop
or
cmp
jns
fstps
daa
push
fstl
jmp
dec
or
jae
jle
in
dec
lahf
mov
dec
mov
and
add
inc
dec
bound
mov
aam
xor
or
rorl
dec
sub
and
test
imul
in
add
cmp
in
inc
dec
adc
jb
jno
and
hlt
movsl
repnz
loope
sarl
mov
inc
dec
ficoml
mov
gs
xor
andl
and
mov
sub
jmp
stos
mov
dec
inc
xchg
adc
hlt
lock
sbb
push
insb
insb
mov
ljmp
inc
test
xor
pop
jle
push
aad
adc
jo
xchg
flds
and
stos
push
addr16
out
sub
or
bound
scas
insb
dec
mov
stos
into
icebp
xorb
movsb
sub
ficompl
add
std
loopne
das
push
cwtl
mov
adcl
jmp
push
inc
in
stos
mov
fs
lahf
in
xor
mov
fildll
xchg
vfmsub231pd
les
xchg
mov
in
and
sub
lods
pop
and
pop
mov
jne
pop
jecxz
and
roll
or
mov
addl
int
sub
jl
adc
mov
lahf
xchg
mov
int3
dec
aas
add
adc
cmp
das
imul
mov
cli
mov
push
inc
lcall
out
xor
sbb
lea
sub
fld1
pop
int3
jbe
movsb
jp
hlt
dec
cmp
and
pop
jne
dec
jne
jo
push
push
dec
ss
mov
and
gs
mov
mov
mov
dec
lcall
fsub
or
scas
mov
iret
push
mov
int3
pushf
or
jg
rorl
inc
jecxz
fildl
ffreep
fwait
push
sahf
or
fcoms
aad
push
xor
movsl
pop
repnz
jle
es
push
das
in
xchg
jle
push
imul
in
cmp
loop
mov
pop
roll
imul
loop
adc
jge
inc
jp
mull
pop
xchg
xchg
repnz
or
pushf
push
ss
xor
adc
gs
test
int3
dec
out
push
xor
push
hlt
popf
test
lret
fildll
dec
mov
mov
data16
bound
jmp
popf
stc
add
inc
xchg
mov
push
mov
dec
mov
or
sar
lock
mov
add
int
inc
mov
mov
repnz
xchg
loopne
imul
repz
xchg
push
jecxz
out
xor
lahf
pop
add
sbb
jl,pn
pop
dec
pop
mov
cmp
ret
ljmp
add
in
das
movsb
jo
sbb
xor
pusha
mov
nop
cwtl
xchg
iret
loope
imul
pop
cmc
lahf
adc
test
push
mov
inc
mov
test
in
pop
mov
sbb
xor
or
or
enter
imul
inc
sti
pop
mov
mov
test
xchg
pop
icebp
testb
jmp
jne
std
stc
jns
add
push
pop
fistl
push
loopne
add
popa
or
jle
popf
shr
and
ljmp
aas
mov
xor
cltd
fstpl
in
insl
loope
add
cmc
ds
push
insb
ds
ret
mov
aas
pusha
xor
in
ljmp
jb
or
cltd
add
lock
jnp
xchg
loop
add
nop
leave
stos
sahf
bsr
push
mov
decb
mov
inc
xor
jp
loopne
pop
inc
loope
push
or
cmpl
cmp
dec
in
sub
lret
in
stc
mov
gs
out
and
lds
push
push
pop
inc
add
cmc
sbb
test
add
lock
mov
push
test
ds
scas
inc
rcll
push
jl
les
xor
sbb
jo
jg
movsl
xorb
mov
out
mov
add
xchg
popa
lea
loopne
pop
adc
push
pop
mov
push
cmpl
sahf
inc
and
movsl
mov
inc
in
add
pop
test
arpl
fdivs
xor
stos
cwtl
and
mov
mov
stos
imul
jmp
xchg
sbb
enter
dec
mov
iret
and
mov
jne
js
out
push
or
push
stos
sub
je
adc
mov
mov
xor
lods
adc
icebp
fucomip
inc
push
fisubl
jb
cld
leave
push
push
cmp
pushf
jae
insb
add
cmp
cmp
jle
stos
or
imul
and
mov
inc
cmpsb
lcall
or
lods
repnz
test
das
sub
adc
adc
nop
hlt
xchg
ljmp
xor
rcrl
cld
aad
mov
bound
cmpsb
aad
mov
dec
out
jmp
int
lods
test
pop
inc
inc
or
std
push
loope
fisubl
scas
hlt
cmp
pop
hlt
shlb
cwtl
jmp
cld
jp
aaa
je
mov
push
loope
xor
idivb
cmp
decl
insb
dec
adc
lea
add
dec
or
jp
mov
popa
mov
rclb
fwait
xor
push
movsb
pop
cmp
negb
outsb
cmp
cmpsb
cmc
aaa
add
or
lods
in
lds
das
mov
push
hlt
cmp
out
and
mov
sbb
addr16
scas
xchg
dec
xor
out
mov
out
add
sbb
xchg
into
test
stos
fsincos
in
movsb
sbb
cmp
cs
pop
les
pushf
cmp
or
ja
lds
or
push
nop
sub
mov
das
fidivrs
or
adc
xchg
cltd
inc
pop
int
std
popa
adc
lret
shr
and
nop
and
loopne
fmull
and
stos
adc
pop
push
mov
cmp
incl
xchg
dec
rorl
or
and
ret
jbe
or
push
xchg
repnz
lahf
sub
sbb
mov
pop
iret
add
inc
jl
cli
jle
stos
pop
mov
mov
cli
ja
rol
loope
mov
jl
dec
in
jecxz
jo
loop
jo
aaa
sar
fmuls
mov
leave
fnstcw
xor
jb
cmpsl
push
mov
notb
ret
negb
jo
ds
jmp
sub
push
test
das
mov
pop
jmp
and
and
pop
cld
andl
insb
cmpsb
adcl
int3
pusha
movsb
mov
mov
stc
daa
xchg
ret
and
fildll
iret
mov
loope
mov
add
lret
inc
cmpsl
mov
cmp
xchg
xchg
adc
in
sahf
mov
push
ja
fwait
jae
add
inc
sub
sub
arpl
ss
push
or
fidivrl
mov
mov
ds
iret
xchg
ja
cmp
mov
sbb
aas
sub
stos
stos
and
mov
sub
out
xchg
mov
pushf
and
movsb
scas
aad
rcr
sti
imul
fs
push
or
packssdw
sti
test
jbe
imul
add
sub
jbe
outsl
clc
mov
mov
fadds
int3
sbb
aam
pop
clc
scas
sub
xor
jns
xorl
xor
mov
inc
pop
cmp
cltd
fs
cmc
jl
inc
jp
faddp
jl
ja
cmpsl
xor
or
lcall
mov
les
or
mov
insl
sub
in
pop
divl
jecxz
jbe
scas
inc
push
mov
and
mov
mov
xchg
xchg
inc
jmp
in
loopne
cmc
inc
pop
shrb
pop
mov
out
lcall
pushf
sbb
lret
in
out
jecxz
push
adc
repz
xor
mov
jecxz
bound
cmc
cmpsl
jno
das
and
aad
std
xchg
sbb
xor
add
dec
popf
dec
lea
pop
jecxz
or
xchg
js
sbb
xchg
xlat
sbb
cmpsl
dec
jmp
leave
int
and
stos
mov
mov
jo
sub
adc
pop
mov
or
enter
rclb
pop
jmp
sbb
add
mov
orb
fnsave
cmp
pop
fdivrs
adcl
adc
xchg
lahf
sbb
icebp
mov
fimuls
cld
sub
test
adc
das
andl
mov
dec
adcb
jmp
xchg
pop
dec
mov
ret
je
aam
cmp
fistpl
lret
xchg
pop
bound
mov
inc
sahf
adc
xchg
outsl
xchg
push
cld
out
xor
sahf
xchg
out
mov
std
inc
int3
mov
out
xchg
pop
enter
dec
shll
jmp
dec
or
stc
mov
loop
mov
test
les
ret
ret
repz
inc
fs
sub
pop
out
pop
adc
mov
lock
iret
hlt
pop
repz
push
xorb
push
mov
dec
and
leave
dec
cmpsb
in
rolb
mov
popf
jp
lcall
xlat
out
test
fwait
mov
flds
adc
push
xlat
out
test
mov
adc
loop
rorb
imul
inc
jne
or
push
xchg
stos
out
rep
jmp
mov
dec
lret
out
mov
xchg
dec
cmp
jno
stos
les
aam
add
pop
add
ret
mov
scas
sbb
mov
lea
xchg
cmp
ja
xor
sub
push
cmp
sub
pop
mov
fs
xlat
xchg
out
pusha
xor
mov
test
pusha
mov
into
sbb
fidivrl
mov
aam
pop
push
test
ret
mov
and
outsb
mov
das
movsb
and
xor
add
ret
cmp
sahf
inc
sahf
or
pop
jge
loopne
inc
cld
adc
insb
sub
xor
sbb
movsb
fwait
cli
aam
in
adc
jae
je
sub
lock
movsl
roll
ss
adc
inc
dec
cs
neg
incb
or
xor
ret
test
sbb
into
lods
ss
dec
mov
loopne
adc
jle
popf
cmpsb
dec
sysexit
sub
outsb
in
into
cs
dec
add
dec
pop
push
inc
test
inc
pop
cltd
inc
outsb
mov
sbb
and
adc
or
lds
xchg
mov
push
sbb
jne
sbb
jns
ficoms
scas
dec
lods
aad
ja
or
jno,pt
mov
lock
rcll
sub
into
js
push
mov
frstor
rclb
js
and
xor
xchg
jns
jg
xor
inc
jecxz
xchg
push
js
and
and
sahf
adc
inc
add
xor
push
mov
aas
pop
push
lret
sbb
test
std
xchg
mov
test
cwtl
add
xchg
push
cmpl
fdivl
repz
adc
cmc
adc
mov
orb
lret
pop
jno
xchg
pop
pushf
xchg
mov
arpl
push
hlt
cmp
call
mov
and
ds
lcall
in
mov
push
xlat
sub
test
mov
fidivs
jbe
pusha
scas
pop
cli
mov
std
mov
xchg
fbstp
int
xchg
pushf
adc
pop
push
loopne
leave
adc
call
jle
add
push
mov
xchg
mov
mov
cs
leave
mov
decl
xchg
sbb
mov
sti
push
test
push
fdivr
aaa
push
loop
inc
iret
jo
xchg
xchg
sti
xor
rcrb
mov
mov
mov
jae
shrl
jmp
les
jb
adc
pop
mov
xor
lcall
mov
aaa
hlt
push
xor
jno
lods
sarb
divl
fisubs
fwait
adc
aaa
icebp
adc
sahf
xchg
push
rcr
push
xchg
add
nop
jge
ljmp
mov
sahf
pop
xor
jae
cld
mov
mov
ja
aad
mov
xor
ss
sub
test
mov
roll
enter
sub
xchg
adc
adc
pop
inc
imul
lods
fnstsw
jno
add
push
leave
push
mov
cli
pop
cmp
fdiv
movsb
mov
sub
push
dec
loopne
inc
push
mov
sbb
dec
add
or
cmpsb
mov
pop
sub
jp
pop
int
jl
lcall
insl
xor
sar
das
rcll
dec
shll
testb
push
ds
mov
push
out
xchg
outsb
lds
mov
mov
aaa
xchg
test
sub
movsl
into
mov
sub
mov
arpl
mov
sbbl
aas
xchg
mov
sbb
data16
jle
mov
sub
adc
cld
add
dec
push
loop
ret
pop
fsubrp
flds
dec
ljmp
sub
je
sub
mov
dec
rcr
dec
outsb
mov
add
sub
outsl
dec
out
cmp
mov
lods
and
fs
js
in
pop
adc
mov
xchg
and
or
push
mov
cmp
lahf
imul
jo
jno
mov
mov
mov
clc
adc
sbb
addb
std
push
enter
add
add
lahf
xchg
cli
mov
and
ss
lret
call
or
stos
push
cmpsl
sbb
pop
clc
icebp
clc
xlat
inc
mov
or
cmp
pop
inc
sbb
divb
ds
fistl
and
mov
addr16
mov
adc
addl
scas
xchg
clc
dec
or
jno
shl
mov
nop
cmp
lret
pushf
dec
fisubrl
mov
test
jecxz
rolb
mov
xchg
sbb
cwtl
stc
or
test
and
stc
repnz
outsb
out
movsl
jl
and
pop
mov
jmp
outsb
pop
in
or
and
fwait
inc
rcr
jecxz
mov
pop
ror
xchg
out
or
mov
rorl
add
test
pop
push
mul
jl
push
inc
cmpb
popf
dec
das
lahf
xchg
xchg
push
ret
jp
pop
cmpsl
rorl
aas
push
and
popf
xchg
inc
cltd
adc
outsl
push
lods
inc
sub
mov
fstl
cmp
cmp
aam
push
cltd
pusha
in
sarl
fsubrs
cmp
push
sub
out
inc
idivb
andb
loope
loop
lods
movzbl
popf
insb
stos
sub
sti
fnstcw
sub
xlat
mov
xchg
out
jp
or
fildl
mov
movsl
jecxz
xor
jp
ret
sahf
ljmp
inc
fdivrl
xor
mov
inc
add
ljmp
sub
mov
mov
addb
pop
or
fucomi
enter
sbb
sbb
xor
roll
adc
stc
js
fimull
pop
sub
mov
ja
inc
fs
sub
push
mov
pop
jl
jmp
pop
inc
int3
in
cmp
clc
aas
outsb
mov
adcl
roll
sub
lret
add
dec
xor
xchg
xchg
rclb
adc
push
fcompl
movsl
xchg
andb
je
test
decb
jb
xchg
cmp
scas
outsb
mov
mov
sbb
test
cmp
insl
add
cmp
ret
scas
stc
lcall
push
out
sahf
jnp
loope
pop
mov
inc
insl
jl
frstor
pop
bound
sub
sub
push
jl
mov
out
jecxz
or
lret
mov
dec
cmpsb
dec
push
dec
jmp
add
inc
gs
cli
mov
mov
aaa
imul
xchg
das
pop
aam
mov
sub
cld
neg
and
pop
push
and
jb
out
mov
clc
rclb
movsl
jbe
adc
pop
ljmp
adc
fwait
movsl
loope
pop
mov
movsb
push
inc
out
and
je
and
test
lods
jnp
shrb
shrl
mov
cld
int
jns
dec
mov
xchg
mov
xchg
ret
fdivrp
xor
iret
imul
fwait
or
test
fsubl
mov
jl
mov
mov
pop
cmp
xchg
iret
mov
out
out
mov
shll
mov
inc
loope
fs
add
adc
imul
popa
dec
xchg
add
push
lods
rdmsr
leave
dec
pusha
xlat
int
pop
ret
nop
ss
jbe
int
in
test
or
add
inc
mov
push
pop
jmp
stc
xchg
mov
mov
inc
test
cli
es
das
dec
imul
vmread
jo
pusha
sbb
je
mov
xor
adc
fwait
imul
add
adc
dec
ljmp
jecxz
std
rcrb
and
sarl
add
pop
ret
add
cmpsb
cmpsl
xchg
jle
fbstp
shl
inc
xchg
push
jmp
mov
ror
or
outsb
xor
push
std
cmp
ror
push
cmp
xlat
sti
sub
push
xchg
mov
adc
sub
lret
loope
lock
adc
sbb
cld
mov
cmp
mov
cmp
out
hlt
test
fdivr
adc
mov
push
inc
sbb
jno
shr
je
and
adc
mov
inc
pop
jne
xor
push
out
shr
sbbb
xor
xchg
mov
xchg
dec
out
int3
adc
xor
call
xor
lea
std
mov
lcall
mov
push
dec
ret
pop
insb
add
rol
xchg
dec
pop
lcall
mov
mov
push
cld
mov
outsb
jnp
mov
inc
test
xchg
cli
xchg
into
lods
and
int3
popa
jle
add
sar
rolb
fisubl
aaa
dec
xchg
test
imul
pop
pop
dec
addr16
iret
sarl
nop
rorl
xor
loop
mov
fisttpll
aaa
dec
push
lods
jno
dec
dec
push
xor
test
mov
cltd
inc
test
pop
xchg
jge
add
and
fidivs
je
clc
dec
faddp
jge
xor
pushf
stos
rcr
jge
mov
in
pop
or
inc
lahf
jb
test
jb
aam
xchg
cmp
cmpsl
rcrl
imul
xchg
push
cmp
sbb
stos
adcb
pop
and
fildll
addr16
aas
mov
nop
andb
jecxz
sahf
imull
jecxz
iret
mov
sarb
mov
je
frstor
xchg
dec
dec
dec
cmp
inc
jmp
test
pushf
or
sub
movsb
pop
lea
enter
fchs
ds
hlt
nop
notb
or
adc
adc
sti
inc
outsb
test
bound
movsb
test
adc
lahf
hlt
push
call
jp
sahf
jbe
cmp
in
mov
pop
hlt
or
shlb
pop
sbb
adc
xor
addr16
fcmovbe
fidivrs
scas
shl
cltd
test
fsubrp
or
inc
je
sbb
lcall
inc
popf
daa
loop
movsb
mov
stos
jecxz
cwtl
sbb
adc
in
cmp
call
add
sub
sub
imul
lcall
push
cmovp
dec
xchg
scas
cs
push
or
or
push
fsubrp
or
loopne
and
dec
xchg
mov
xorl
push
or
adc
jne
popa
pop
jg
cmp
pop
stc
test
mov
test
movsl
mov
bound
or
cmp
shl
out
jns
jne
cmp
mov
iret
jb
mov
stos
jnp
mov
jmp
dec
xchg
and
adc
cmp
mov
pop
stos
mov
and
mov
add
sub
inc
sahf
sub
test
jmp
mov
shl
jo
cmp
sub
cmp
adcl
adcl
cmpsb
dec
and
lock
xchg
adc
jecxz
loope
cmp
add
out
inc
xchg
in
test
push
sub
jbe
pop
or
pop
push
mov
adc
xchg
mov
out
mov
sub
fwait
stos
cmc
fisubs
rclb
fsubr
mov
std
cmpl
fldcw
inc
xor
and
scas
push
mov
mov
loope
jb
inc
xchg
jl
fwait
in
pop
xchg
mov
es
lret
fwait
inc
and
xchg
push
jne
rcl
pop
xchg
pushf
inc
xor
aam
ret
stos
aaa
cmpsl
jle
inc
inc
xchg
mov
xor
jne
ficoms
push
test
sbb
pop
test
xor
iret
lcall
mov
jp
and
or
add
and
dec
cwtl
and
push
add
dec
sbb
mov
daa
cltd
outsb
out
mov
insb
bound
push
push
xor
add
mov
xchg
xchg
mov
mov
push
ret
or
lds
shll
jae
es
mov
iret
addr16
fisubl
inc
and
jbe
lahf
xor
or
jo
xchg
or
push
fadd
iret
int
pop
jno
aad
and
cmpsl
psrlw
cld
and
cld
clc
inc
or
inc
sbb
addr16
and
in
push
loop
mov
dec
cs
loop
sub
es
jno
mov
jge
pop
xchg
scas
mov
in
mov
dec
and
push
lret
testb
mov
pop
dec
lds
jg
sub
jne
orl
xchg
add
in
xor
cmc
mov
jbe
cmpsb
ficompl
xchg
mov
ljmp
jns
rcrb
das
cld
pop
or
xor
stc
loop
repz
add
jae
and
jp
pop
push
adc
clc
das
xor
hlt
mov
ss
lahf
repnz
clc
fldt
out
jns
push
jmp
imul
in
pop
dec
int3
add
adc
outsl
push
rcl
ljmp
inc
scas
add
ljmp
inc
push
test
jnp
mov
fdivrl
mov
cmp
cwtl
pop
or
push
mov
adc
pop
mov
or
dec
dec
xchg
in
loop
sbbb
push
iret
xor
or
inc
lret
jb
sti
arpl
sarl
arpl
rolb
dec
push
mov
sbb
pop
adc
mov
inc
fwait
int3
adc
xchg
test
loope
inc
scas
mov
stc
mov
or
push
cmp
fistps
lcall
adc
lret
filds
in
cmp
imul
cmpsl
jg
stos
mov
iret
stos
jbe
dec
push
jecxz
mov
lcall
hlt
out
sub
fmulp
sub
dec
out
mov
jne
dec
addb
sarb
cmp
nop
scas
pop
iret
push
mov
in
rol
sti
and
loopne
sub
in
add
repnz
push
mov
in
adc
jecxz
sub
push
test
cli
lret
jmp
sub
xor
enter
fs
adc
xchg
lods
mov
xor
call
je
dec
mov
cltd
test
not
xor
leave
dec
aad
jg
push
add
sti
out
add
push
popa
mov
lods
cmp
add
xchg
call
push
leave
push
adc
inc
jge
popf
fildll
push
cwtl
clc
cmp
mov
sub
xchg
imul
shlb
mov
pop
add
push
repz
stos
sub
imul
incl
imul
cmp
sub
stc
aam
test
cmc
xchg
sbbl
popl
mov
test
mov
or
lret
push
ljmp
test
mov
inc
and
mov
jl
ret
xchg
iret
inc
call
sub
aaa
loopne
mov
push
inc
fwait
adc
push
jmp
stos
and
dec
cmp
adc
pop
repz
jl
or
xor
push
jmp
push
mov
mov
stos
inc
adc
push
shr
dec
and
mov
call
call
pop
insl
jp
lods
cwtl
pop
push
xor
and
int3
out
cmp
incb
sub
xchg
std
lret
pushf
fisttpl
cmp
cmp
jo
int
cmp
stos
or
jg
sub
leave
outsb
pop
sbbb
stc
call
push
gs
mov
pop
cmp
mov
clc
or
shll
mov
repnz
jl
xor
mov
pusha
xchg
jne
scas
test
sbb
cmc
lcall
inc
pop
stos
pop
adc
sbb
jl
xchg
stc
fists
jecxz
test
or
inc
xchg
test
mov
das
cli
xchg
push
leave
sti
sub
inc
mov
out
or
jmp
dec
mov
mov
ret
rorb
loope
gs
test
lods
rorl
inc
aad
orb
mov
bnd
adc
fisubrl
dec
out
fs
test
jg
loope
bnd
loop
push
push
adc
ficoms
data16
jp
std
sub
pushf
lods
mov
imul
cwtl
fnsave
jae
repz
dec
pop
lea
cwtl
aad
mov
fs
adc
cmp
ja
aad
add
xlat
pop
popf
iret
xlat
insl
lret
dec
mov
cmp
push
mov
jge
push
stos
lods
sarl
xchg
inc
cmp
out
mov
dec
fbld
inc
scas
sub
push
xchg
mov
xchg
push
jae
scas
sub
jp
sbb
fwait
data16
pop
add
mov
pop
adc
inc
jns
sub
pop
cwtl
sub
outsb
scas
mov
daa
cwtl
sub
lods
cs
callw
fwait
ud2
mov
and
and
fsubrl
adc
insb
xlat
jnp
aas
cs
xor
cmpl
mov
and
ror
rorl
dec
xor
xor
fwait
sub
lds
and
inc
mov
xchg
mov
mov
ja
pop
xchg
jge
std
dec
ja
mov
push
or
push
sahf
lret
das
adc
dec
js
inc
ror
add
rorb
inc
lock
arpl
mov
lods
mov
inc
mov
sbb
gs
stc
subb
les
pop
mov
fldenv
and
jbe
shlb
jg
jle
jmp
pop
stos
js
inc
mov
xor
notl
addl
pushf
sbb
dec
mov
inc
pop
insl
in
rclb
aaa
xchg
nop
or
adc
int
das
vcmpnle_uqpd
lret
ljmp
sub
mov
ljmp
dec
push
cld
sbb
cmp
fldt
sub
adcl
xor
movsl
push
mov
rcr
inc
imul
cmovge
xchg
ret
std
mov
mov
int
pusha
jg,pt
mov
fdivrs
jne
cmp
adc
les
or
mov
fstps
jne,pt
fnstsw
mov
outsb
lret
lods
sarl
outsb
mov
pusha
mov
loope
ret
roll
mov
inc
sub
xor
das
inc
inc
std
out
jns
xchg
les
and
push
out
adcb
dec
bound
clc
pop
rorl
mov
inc
mov
addr16
jg
dec
popf
addr16
adc
push
aam
lods
xchg
mov
dec
insl
sub
enter
and
cli
and
sbb
inc
scas
cmp
mov
es
push
mov
enter
out
mov
or
inc
mov
into
adc
push
jge
sub
jge
rep
cwtl
mov
sbb
pop
push
jne
stos
mov
push
push
sbb
test
rsqrtps
addb
ret
pop
sbb
and
outsl
orb
sub
loope
adc
or
mov
xor
es
icebp
cld
repz
mov
mov
adc
loop
jge
push
cmp
dec
push
les
push
mov
js
pop
in
fs
add
sbb
mov
add
fidivrs
inc
dec
jno
shl
mov
rol
cmpsb
pop
mov
xchg
pop
movb
cmp
outsb
sub
lock
sub
cmp
xor
bound
ret
lods
adc
out
fstp
repnz
push
ja
xchg
popa
dec
inc
les
fdivrs
mov
push
lea
lcall
pushf
je
push
out
dec
jle
out
jbe
mov
push
loope
xchg
and
and
aam
insb
inc
cmp
add
sub
ss
pop
movsb
pop
int
repnz
stc
mov
aaa
and
adc
data16
mov
sbb
dec
sbb
pop
out
repz
scas
bnd
pop
pop
cmp
out
aas
pop
push
xchg
orb
lods
loopne
mov
mov
enter
dec
movsb
addr16
aas
jae
mov
mov
jne
repnz
sbb
adc
add
mov
dec
hlt
ret
scas
cltd
sti
xchg
and
std
in
jo
stos
cmp
cmp
scas
push
lahf
iret
cwtl
sub
inc
repnz
aaa
inc
orb
rcrl
stc
dec
xor
pushf
fstpl
bound
pop
or
cmp
mov
cmc
bound
xchg
in
in
mov
insb
jge
pop
ss
adc
xchg
xor
push
stos
cld
mov
and
inc
mov
fmuls
jo
push
daa
pop
negb
adc
into
and
cmp
js
push
xchg
mov
loopne
mov
out
dec
imul
cmp
daa
add
mov
test
mov
clc
xchg
jno
lahf
mov
mov
pop
leave
mov
outsb
pop
cli
in
mov
test
lret
jo
ret
lcall
xor
mov
nopl
lcall
or
or
rcrl
xchg
call
call
pop
push
lock
xchg
jp
stos
push
and
idivl
push
iret
push
aad
push
sub
cli
xchg
mov
mov
jg
pop
aad
dec
ljmp
sbb
and
mov
js
jno
jb
fists
test
jno
mov
and
cmp
or
sub
xor
mov
fadd
loopne
xchg
sub
lret
or
dec
in
add
sbb
sbb
xchg
and
dec
dec
in
ds
pop
lret
pop
je
bound
je
xchg
cmpsb
or
dec
fsubrs
mov
rorb
dec
xchg
or
hlt
cmp
insb
sbb
and
xor
data16
hlt
and
mov
mov
cltd
test
pop
ret
ljmp
mov
push
cmp
lret
xlat
mov
js
push
pop
pushf
aad
pop
pop
loopne
sbb
jae
and
fldenv
jb
scas
inc
rorb
dec
bound
fcomip
hlt
leave
lock
sub
jle
mov
or
idivl
icebp
jne
mov
mov
jb
mov
ljmp
dec
mov
xor
aad
mov
test
mov
add
in
decb
cwtl
mov
scas
dec
movd
pop
push
pop
mov
inc
mov
mov
fcompl
std
xchg
cmp
mov
mov
or
cmp
mov
xorb
lcall
push
movl
xchg
pop
ret
cld
and
xor
and
in
push
rorb
das
cmp
stos
call
and
cli
cmc
out
xchg
add
add
cmp
jmp
mov
inc
imul
out
movd
shll
pop
or
fwait
dec
js
imul
repnz
xor
rolb
loop
dec
mov
sti
inc
or
push
or
dec
mov
dec
hlt
loope
in
ds
lds
or
add
jl
cmpsb
and
push
insb
cmp
jp
repz
jl
adc
sti
stos
sti
sbb
xchg
xor
out
sbb
leave
popf
mov
ss
pop
push
rorb
stos
lret
lea
dec
xor
and
fbstp
fsts
aam
mov
lahf
ja
xchg
mov
dec
ffreep
aaa
inc
inc
mov
mov
fisubrl
adc
push
mov
push
or
pop
stos
mov
xchg
jne
cmp
add
jle
movsl
ret
ret
pop
dec
sbb
and
ja
adc
dec
iret
je
sbb
xor
inc
xchg
pop
cmc
nop
hlt
and
inc
das
xchg
inc
inc
pop
push
icebp
add
sub
mov
mov
dec
push
addr16
push
sub
cltd
sbb
cmp
dec
inc
dec
leave
fstps
pop
inc
mov
data16
jmp
add
loopne
fwait
pop
repz
push
stos
loopne
push
mov
leave
lock
adc
sbb
and
xor
and
and
or
pop
xchg
mov
adc
mov
or
xor
dec
test
cltd
mov
sbb
dec
push
xor
hlt
js
loop
jmp
xor
adc
mov
cmp
xlat
dec
mov
lahf
ss
jno
xchg
hlt
out
adc
xlat
aad
sbb
inc
add
cmp
lods
hlt
into
xor
dec
mov
xchg
xchg
pop
adc
movsl
call
adc
dec
cmpsb
popf
mov
insl
pushf
sub
hlt
mov
push
adc
dec
cmp
orl
cmp
add
andl
data16
int3
cmp
adcl
das
es
fcompl
push
stos
adc
cmp
push
xor
adc
in
test
mov
mov
inc
add
orb
lcall
pop
test
and
push
and
jae
fsubr
inc
shll
rorl
mov
inc
std
test
push
ja
outsl
loop
push
mov
sarb
sahf
xor
in
cmpsl
push
repnz
xchg
xor
cld
inc
and
xchg
jno
ljmp
out
loope
shll
mov
inc
xor
mov
movsb
mov
mov
xchg
lcall
fisubrs
stc
xchg
cmpsl
in
cmp
in
push
fcomps
jl
dec
test
sti
inc
dec
or
dec
mov
sbb
adc
bound
mov
sub
icebp
inc
scas
pop
leave
shrl
fmul
cmpsl
je
jo
stos
mov
mov
add
inc
mov
add
andb
ret
mov
adc
lret
dec
jbe
popf
pop
xchg
pusha
push
inc
mov
notl
mov
or
into
push
mov
test
outsl
pop
dec
cli
sub
repz
fnstenv
inc
imul
adc
mov
dec
clc
flds
call
xchg
cli
adc
fwait
or
js
push
fbld
out
mov
insl
mov
jmp
cmp
dec
sub
pop
pop
dec
fcompl
push
and
repz
imul
lret
xchg
xor
dec
clc
jecxz
xor
popa
cmp
dec
and
pop
xor
add
xchg
into
mov
out
lret
int3
pxor
mov
insl
outsb
jg
xchg
jmp
cwtl
scas
mov
pop
stc
scas
pop
inc
cmpsl
lret
inc
aam
mov
cmp
rcll
pop
pusha
dec
roll
xchg
cmpsb
and
mov
insl
mov
test
xchg
sbb
jmp
mov
in
pop
jg
mov
outsl
sub
xchg
negb
cmp
cmpsl
jne
jge
out
jecxz
xchg
negl
shlb
mulb
jle
sti
test
xor
xlat
pop
inc
aas
ss
aad
push
repnz
lahf
xor
push
or
mov
xor
js
adc
lret
mov
mov
sbb
in
lcall
lods
or
xor
aas
push
sub
dec
stos
sbb
out
test
jb
and
sub
jne
pop
cli
xchg
movsl
sub
enter
mov
setne
push
lock
or
fwait
add
movsb
aam
mov
adc
pop
pop
jns
or
xchg
inc
mov
xchg
sub
test
xor
mov
or
fisubrl
jg
jbe
out
out
sti
sub
add
cmp
mov
and
rcl
roll
jo
pop
sti
xchg
push
fwait
push
lret
push
ds
insl
cmp
cmp
cmp
and
fdivl
loope
adc
into
pop
clc
add
iret
insb
je
lds
outsb
mov
or
dec
cli
lcall
mov
jl
cmp
push
arpl
jns
xchg
and
sarl
fsubr
jb
das
dec
or
jns
cltd
rorb
loopne
adc
lret
adcl
push
add
add
mov
mov
jecxz
mov
add
jecxz
sub
pop
sub
sub
imul
jbe
cmp
pop
outsl
aam
adc
mov
into
push
lock
push
insb
adc
jne
stos
lahf
sub
clc
push
push
push
jmp
fmul
and
lods
cmpsl
add
mov
xchg
xlat
dec
ffree
pushf
mov
in
les
jbe
add
inc
mov
inc
lret
jo
ja
loop
dec
mov
cmpsb
shlb
sub
mov
repz
push
out
dec
insb
xchg
rol
inc
sub
jmp
cmc
aad
test
test
dec
ljmp
lcall
or
and
mov
or
jg
pop
mov
dec
arpl
pop
push
push
repnz
out
and
lods
dec
inc
fisubs
sub
push
mov
xchg
hlt
sahf
xorb
mov
je
mov
pop
lret
sbb
das
cmp
dec
leave
loopne
xor
pop
lret
dec
and
xor
testl
lock
or
push
inc
dec
dec
mov
mov
cld
lock
sbb
xlat
addr16
cltd
out
fisttpl
and
inc
icebp
cwtl
out
cmp
xchg
inc
jno
jne
cltd
xchg
xchg
stos
stos
lds
sahf
movsl
inc
repz
arpl
cmp
cwtl
cmc
lea
sub
out
dec
adc
mov
sti
push
adc
sbb
lret
les
xchg
jbe
fnsave
xchg
mov
mov
inc
jl
out
dec
outsl
call
ljmp
outsl
sbb
test
xchg
aas
jmp
xchg
jmp
xchg
mov
aad
jmpw
test
lods
daa
into
mov
pop
fistl
sbb
test
std
sbb
ds
sbb
out
adcb
insl
dec
shrb
cmpsl
mov
sbb
cmp
push
leave
ss
repz
stos
jp
mov
adc
lret
pop
push
cmc
xchg
ss
lock
and
sbb
ret
int
gs
ds
xor
sub
mov
push
cmp
xchg
and
xchg
or
sti
sbb
push
in
sti
cmp
out
nop
mov
pop
pop
loope
lods
test
add
pop
xor
aad
cwtl
hlt
insl
add
hlt
xchg
or
int3
std
mov
js
xchg
outsb
sbb
sti
mov
lods
fcompl
and
inc
cs
cmpsl
into
test
sbbb
shlb
icebp
jae
mov
adc
xchg
ret
stos
push
push
xor
sbb
sahf
mov
sbb
std
insl
push
add
mov
mov
out
shrl
push
ljmp
cli
fwait
popa
jg
pusha
ss
lcall
xor
lret
push
push
xor
daa
subl
inc
movsl
xor
out
ja
mov
mov
add
loopne
xchg
out
ljmp
mov
pop
xchg
dec
xchg
jnp
cmp
in
and
dec
jecxz
push
insl
lods
shlb
cmp
jg
mov
add
aam
hlt
inc
dec
sub
mov
and
xor
std
repz
push
outsb
jns
pop
pop
jle
xchg
mov
pop
pop
xor
rcrb
dec
and
inc
pop
xor
sbb
cmp
ss
shll
mov
imul
pop
mov
push
or
clc
pop
xor
insl
inc
pop
adc
rorl
out
push
sub
repz
mov
xchg
push
sub
mov
sbb
cmp
pop
sbb
add
orl
sbb
mov
sub
pop
sbb
cmpsl
jp
popa
mov
repnz
jne
sbb
in
mov
mov
jbe
imul
js
out
leave
xchg
daa
or
in
mov
lret
js
pop
mov
sub
xchg
sbb
jb
and
mov
or
and
add
cmp
xchg
jae
or
dec
mov
cmpl
sarb
inc
pop
ss
push
jne
xor
xchg
les
adc
addb
mov
mov
iret
lock
xchg
popa
rol
or
cmp
mov
pop
inc
lods
divl
and
and
shll
imull
call
stos
rcl
out
xchg
push
subb
push
pop
mov
pop
fdivr
int
jns
inc
add
popf
pop
jg
mov
adc
lods
shlb
mov
hlt
fwait
push
dec
inc
push
sahf
push
and
scas
pop
clc
push
ret
vmptrld
pop
inc
push
outsl
jmp
inc
fbld
mov
xchg
out
xchg
and
jmp
push
jp
pop
es
adc
xchg
out
fstl
inc
std
add
fwait
insb
fcompl
cmp
cld
pop
out
add
xor
fdivl
repz
fidivl
mov
fisubrl
mov
orb
icebp
cmp
int3
inc
js
mov
adc
and
xlat
test
insl
into
or
lods
call
dec
cmp
mov
push
or
icebp
mov
pop
add
jo
sbb
dec
inc
cli
push
pop
jl
or
xchg
test
push
arpl
mov
mov
into
inc
mov
xor
sub
fdivs
sub
ljmp
cmp
loopne
mov
add
cltd
loope
andl
dec
xchg
jb
setb
cltd
or
and
fimull
mov
inc
and
lahf
fcomps
fistpl
adc
into
nop
and
ljmp
hlt
jle
mov
in
fwait
rcrl
fisubrl
add
pop
sbb
lahf
or
add
add
sub
mov
mov
xchg
push
xchg
push
gs
jno
jae
xchg
adc
repz
pop
in
inc
adc
mov
inc
insl
dec
testb
dec
pop
pop
xchg
rclb
mov
xchg
push
lret
or
stos
loop
pop
inc
repz
push
mov
mov
into
xchg
mov
sub
rolb
and
imul
jns
inc
mov
pop
mov
adc
jmp
cwtl
cmp
fisubl
leave
push
and
push
jl
icebp
or
addr16
inc
loope
pop
out
and
jb
add
addr16
ret
sub
xchg
lret
pop
or
sbb
lret
jo
call
test
loopne
or
les
push
adc
lods
je
movsb
hlt
jae
sub
and
inc
mov
test
dec
rcl
or
jbe
stos
popl
mov
or
and
cs
push
aam
icebp
or
add
mov
sub
sbb
mov
jns
adc
imul
sbb
mov
jmp
aad
or
imul
jnp
push
out
sub
shrb
push
jb
cs
mov
test
dec
xor
jle
pop
in
inc
or
nop
test
fucomip
std
rcr
int
dec
jnp
cmp
push
imul
add
cmpsb
gs
sub
jns
xor
cld
out
sub
mov
jo
rcl
fstps
fisubrs
sti
sarl
pop
mov
out
sub
aam
cmp
inc
popf
xor
bound
sbb
pop
mov
xchg
add
adc
mov
movsl
sbb
or
mov
mov
inc
add
sarb
insl
xor
lret
push
cmp
inc
xchg
inc
push
out
or
das
sti
les
ja
jecxz
movl
subl
cmp
mov
xchg
enter
jno
push
cmp
cmc
mov
test
in
js
lahf
mov
fdivrl
jp
adc
push
dec
sbb
arpl
mov
lods
js
mov
mov
adc
sbb
mov
xor
ret
sbb
mov
ret
daa
subl
mov
cmc
imulb
sub
ds
std
cmp
fs
sbb
movsb
jae
ret
sub
cmpsl
and
pop
in
cmp
aad
subb
aaa
xor
lret
push
sbb
in
cli
into
cmpsl
jnp
enter
push
jmp
pop
lret
xchg
or
das
cmp
aaa
aad
xor
aam
xchg
dec
sahf
pushf
int
into
jmp
scas
movsl
addr16
jo
jo
ds
mov
mov
shrl
xor
and
mov
mov
clc
pop
cld
add
iret
test
out
jge
inc
add
add
arpl
mov
inc
xor
jne
test
inc
stc
mov
cmp
jecxz
ret
mov
sbbl
adc
lahf
jge
mov
dec
cmp
mov
jb
cmc
inc
orb
in
sub
dec
mov
push
in
idivb
jae
int3
mov
call
fld
pop
ficomps
pop
jno
xchg
xchg
push
lret
out
cmp
cmpsl
imulb
xor
xchg
pop
dec
jg
lahf
mov
fldenv
out
out
dec
jmp
fstpl
data16
into
dec
incb
xchg
xchg
jne
mov
lret
jno
xor
or
out
repnz
fsqrt
adc
pusha
fmuls
jne
int
movsb
push
ficoms
pop
mov
mov
subl
arpl
popl
mov
mov
xchg
push
clc
mov
jnp
ret
xchg
inc
out
leave
sbb
mov
mov
jae
mov
jae
mov
or
cmp
sbb
add
dec
outsb
jne
cmp
addr16
mov
mov
push
enter
icebp
dec
sbb
jmp
loop
cld
jecxz
dec
xchg
stc
add
inc
fcomps
mov
mov
in
add
add
dec
cmp
mov
lock
cli
xchg
ds
push
jno
arpl
outsl
push
xchg
sub
add
mov
shrb
xchg
or
mov
sysret
stos
bound
popa
ja
push
js
in
mov
dec
dec
sbb
lret
sub
mov
in
add
out
mov
cmc
jp
jl
jg
pusha
mov
mov
push
roll
sahf
push
dec
mov
arpl
cmpsl
lret
push
sub
push
pop
or
jnp
ret
or
clc
add
add
mov
xchg
xor
jmp
cwtl
adc
jp
pop
icebp
test
mov
sbb
test
mov
add
mov
inc
sbbb
les
cwtl
das
cmc
sub
mov
data16
fists
fnstenv
inc
es
mov
add
je
das
xor
push
mov
sbbl
rol
add
ja
pushf
lret
adc
loopne
das
lods
jo
int
sub
push
iret
outsb
dec
and
sub
fnstcw
jae
test
mov
int
lahf
loope
in
xor
popf
lock
inc
pop
rcll
push
or
and
in
mov
enter
pop
fidivrl
loop
icebp
sbb
insb
xchg
inc
iret
les
mov
adc
loop
mov
adc
cmp
clc
dec
lds
push
xchg
lret
aas
mov
fdivp
sbb
cltd
test
testl
insb
pop
push
inc
data16
sub
sub
push
mov
inc
std
cmp
mov
mov
mov
xor
and
inc
xlat
pop
adc
push
inc
push
adc
and
fsubr
mov
xchg
dec
sub
and
dec
mov
push
das
int3
sbb
add
mov
inc
imul
or
das
jnp
xor
movsl
or
inc
mov
mov
xchg
jae
jae
fdivrl
bound
aad
or
leave
in
imul
test
pop
push
mov
xor
lock
cld
add
movsl
repz
add
mov
xchg
sbb
les
mov
pop
lret
scas
test
jnp
jmp
xor
daa
aaa
sub
outsl
clc
call
ret
pop
call
xchg
and
inc
into
pop
ret
pop
sub
nop
jo
inc
sbb
mov
rolb
cmp
and
popl
insl
lcall
adc
lcall
push
jns
mov
add
and
in
or
jp
and
jb
pop
mov
sbb
std
pop
test
push
cwtl
mov
or
fwait
jae
repz
xor
xchg
stos
push
adcl
inc
cmp
jmp
stc
hlt
in
cmp
dec
pushf
xchg
or
jg
pop
xchg
out
mov
xchg
cwtl
pusha
add
hlt
movsb
sub
mov
icebp
add
ss
hlt
std
sub
adc
lahf
test
lock
fisubrl
addl
or
mov
scas
mov
cld
lds
xor
and
push
fdivl
sub
lret
fcomi
frstor
jbe
cmpsb
movsl
or
jo
dec
or
jp
ret
xchg
gs
xchg
inc
adc
add
or
jl
sbb
mov
leave
push
lret
push
mov
inc
inc
lock
cmp
or
xchg
lret
cmpsl
mov
ret
pop
push
arpl
xchg
inc
sub
jge
adc
pop
in
mov
inc
fisubl
mov
pop
inc
inc
sub
pop
xchg
nop
stos
arpl
rcr
add
sub
and
pop
push
mov
fnsave
push
sbb
out
iret
es
mov
fmull
xchg
ds
ficomps
cmpsl
in
into
cmc
int
cmpsl
lcall
add
xchg
and
int3
int
loope
repz
inc
sub
inc
insb
shll
cmp
rol
daa
inc
pop
xor
test
mov
cmp
cmc
movb
jnp,pn
dec
sub
out
stc
jae
fisttpll
adc
shll
push
push
add
fcmovbe
lock
sbb
les
mov
push
int
sbb
mov
fcmovbe
stos
xor
test
cltd
xchg
xorl
jne
sub
dec
int3
loop
mov
adc
sbb
mov
ss
sub
push
scas
add
mov
inc
int3
mov
adc
in
xchg
dec
aas
push
ret
subl
test
daa
mov
ficoms
sbb
clc
hlt
pop
push
stos
sub
xor
aaa
dec
add
mov
leave
in
test
loop
aaa
fsts
repnz
dec
fs
and
not
jp
lods
mov
es
or
popf
jae
push
imul
shll
and
insb
mov
mov
adc
jmp
divl
fstl
cmpsl
std
lods
pop
add
scas
gs
xchg
mov
orl
shll
cwtl
js
sarb
cmp
decb
pop
out
inc
test
call
or
sub
dec
paddsb
adc
push
adc
int
cmp
es
hlt
and
rcrb
inc
out
pusha
adc
out
jb
mov
pop
jle
mov
loopne
sub
nop
jne
movsl
bound
scas
test
lods
fwait
inc
dec
out
mov
ljmp
stos
int3
or
stc
mov
call
cmp
cld
add
and
jae
decb
leave
arpl
fcmovnu
jp
test
jb
mov
loopne
dec
cli
stos
aaa
pop
insb
jo
std
and
ret
out
push
push
and
fs
jecxz
jae
sbb
mov
sub
adc
pop
ss
add
incb
inc
mov
les
test
pusha
xor
xor
fisubs
iret
test
cmp
mov
out
jbe
xchg
sarl
mov
int
sbb
lret
dec
das
test
xchg
jle
bound
mov
mov
in
xor
scas
inc
call
xchg
xchg
into
pop
mov
dec
or
je
cmp
sarb
jge
sbbl
pusha
jbe
pop
add
push
or
inc
mov
pop
xor
xchg
xchg
mov
inc
pop
lea
ja
jg
adc
call
sarl
out
neg
into
sarl
int3
pop
mov
jecxz
mov
mov
loopne
adc
fwait
arpl
orb
jmp
movsb
mov
aaa
fcompl
sbb
push
jmp
mov
sub
outsl
cmp
mov
test
pop
test
sbb
jo
daa
cmp
pop
inc
fldl
xor
mov
andl
and
dec
cmpsl
pop
mov
test
pop
rcrl
cwtl
test
lcall
jecxz
std
daa
insb
test
pop
jo
out
stos
daa
sbb
push
stos
das
add
jmp
pop
mov
ds
cli
jge
sbb
movsl
mov
cmp
rcrb
in
pop
push
and
ja
jge
xor
xor
dec
cwtl
je
sbb
inc
adc
imul
jne
cs
clc
negl
and
pushf
decb
ja
jne
xchg
adc
lret
shll
aaa
mov
jae
pushl
add
cld
mov
orl
jne
jne
scas
cmp
push
enter
xorb
lret
pop
std
bound
outsl
push
sti
pusha
pop
addb
and
fwait
scas
dec
jne
dec
loope
inc
icebp
cmpsl
cwtl
dec
jne
pop
mov
mov
cli
int
gs
cltd
or
dec
je
jb
je
pop
in
pop
test
in
and
push
loope
mov
xlat
idivb
and
ljmp
decb
scas
cli
or
and
xchg
pop
cmp
cmp
jmp
repz
inc
arpl
jne
add
mov
mov
pop
ljmp
xchg
jp
add
cltd
xchg
out
faddl
ss
dec
data16
jb
les
fimull
popa
cmpsb
sarl
mov
mov
mov
and
mov
push
aam
aad
xor
cmp
out
mov
scas
xor
imul
xchg
mov
fwait
add
dec
jp
int
out
les
push
outsb
stos
ret
mov
xor
mov
cmp
into
dec
jg
hlt
and
xchg
ret
lret
xorb
xchg
xchg
sub
sbb
inc
xor
test
aaa
bound
fadds
push
jns
mov
inc
je
add
mov
jmp
shll
cs
mov
push
jmp
push
outsb
jge
jecxz
or
subb
xchg
mov
test
cmpsb
hlt
or
imul
mov
mov
inc
cmp
stc
xchg
scas
fstpt
and
push
into
jnp
pushf
fwait
push
sysexit
jmp
xlat
mov
or
inc
push
mov
hlt
clc
stos
mov
dec
int
enter
inc
jae
dec
div
mov
or
je
ds
aad
sub
and
pop
inc
std
and
cmpl
loop
mov
mov
out
popa
les
xor
push
aas
xchg
decl
sbb
sub
xor
jnp
mov
movsb
je
mov
push
or
mov
or
movsl
inc
es
pop
mov
jns
xchg
jne
icebp
ret
out
sub
std
cmp
dec
icebp
jb
ss
mov
mov
sbb
ret
sbb
mov
addr16
scas
pusha
or
cmpsl
in
out
inc
bound
fldl
dec
cmp
or
call
sub
hlt
cmc
xor
add
cmpsb
sti
mov
rcrl
adc
js
inc
pop
or
mov
inc
in
push
cmp
mov
adc
cmp
dec
mov
and
mov
inc
aad
fistpll
mov
and
imul
and
cld
jns
mov
lcall
xchg
les
lcall
cmp
aaa
mov
xor
and
push
and
insb
mov
adc
jns
jmp
jbe
and
xor
cld
pop
xchg
loop
pop
insl
sbb
pop
cmpsl
pop
ret
dec
xchg
cmp
cmp
or
je
cmp
jge
popa
aad
mov
cmp
inc
and
jge
aam
mov
pusha
loopne
in
xchg
or
jae
je
negb
jl
inc
fbstp
xor
xor
cltd
dec
inc
push
mov
inc
lock
adc
repz
mov
push
ljmp
lods
sub
movsl
push
shrb
pusha
pop
jmp
and
ret
cmp
xor
xchg
mov
cmpsb
or
cmp
and
inc
lds
mov
jp
lahf
add
fs
inc
and
fisttps
cli
loop
sahf
daa
push
scas
dec
xchg
cmc
dec
fadds
sub
cmp
stos
push
dec
inc
iret
cmpsl
iret
movb
js
int
ds
sbb
repnz
subb
or
inc
cld
repz
subb
rcrb
mov
xlat
leave
adc
bound
dec
jb
cmp
pop
adc
lcall
push
pop
pop
jmp
adc
test
lahf
sahf
iret
adc
arpl
divb
jno
xchg
jge
and
dec
cs
push
sub
lcall
jno
pop
rclb
aad
add
cld
scas
loopne
stos
xchg
out
sub
push
sub
sbb
lods
add
in
repz
pushf
mov
sub
inc
mov
add
sar
test
stos
xchg
and
outsb
pop
mov
mov
cld
pop
out
adc
xor
and
push
nop
xor
jnp
xchg
fadds
inc
pop
and
pop
lret
ja
test
xorb
inc
out
mov
ss
int
daa
add
inc
fistpll
or
xor
push
add
lret
cmp
fdivrs
dec
inc
imul
inc
push
and
xchg
ret
inc
lret
adc
xlat
jge
test
or
pushf
or
outsb
sahf
dec
mov
lcall
or
or
inc
pop
inc
inc
cltd
cmp
pop
push
mov
shr
xor
int
test
mov
and
leave
aad
gs
stc
pushf
out
cltd
addr16
movl
mov
jl
mov
iret
int
ret
rclb
mov
fs
les
push
cmp
jle
enter
sbb
xor
cmc
in
adc
lcall
enter
push
leave
mov
stos
mov
test
jno
adc
mov
out
js
leave
movsb
xchg
push
inc
jmp
jnp
add
jge
jl
dec
hlt
iret
loop
fsubrl
mov
dec
dec
stos
add
jns
add
sbb
mov
popf
pop
or
in
test
pop
test
mov
pop
lds
in
int3
popa
and
mov
lea
xor
outsb
notb
sub
or
jle
lret
popf
push
out
cmp
xor
lcall
add
inc
aas
pop
nop
repz
setne
push
jb
cmp
outsb
and
adc
xchg
xchg
shll
dec
es
xorl
mov
and
orb
ljmp
addl
pop
adc
sub
loop
rorb
xchg
mov
rolb
out
or
push
jp
sub
movsb
cli
inc
enter
pop
lods
push
imul
pop
cld
ljmp
nop
clc
add
lcall
mov
lret
inc
inc
inc
push
js
adc
inc
xabort
mov
mov
jno
pop
mov
sbb
or
or
inc
and
push
mov
pop
dec
test
mov
xlat
pop
mov
cmp
or
inc
pushl
or
cwtl
out
bound
int3
adc
adc
lcall
jns
dec
fsubrl
movsb
movsb
xchg
adc
fsubr
mov
jb
mov
and
push
xchg
mov
aam
cmp
pushf
sub
es
addr16
out
lea
sub
mov
pop
add
dec
xchg
mov
pushf
or
ror
jbe
ret
sbb
cmp
mov
mov
pop
pop
or
outsb
arpl
push
mov
cmpsb
push
adc
ret
mov
outsb
hlt
xchg
popa
scas
ljmp
enter
sub
mov
or
or
sbb
sahf
add
push
inc
loopw
cmp
mov
add
cmp
repz
ss
pop
pop
insl
mov
pop
pop
fstp
test
aaa
ror
push
fnstcw
seto
xor
dec
popf
and
shrb
loope
out
push
mov
dec
and
cmp
or
mov
jno
mov
scas
cmp
push
push
xchg
inc
cs
arpl
xor
push
xor
mov
mov
adc
out
lcall
in
dec
scas
inc
adc
push
mov
vmovshdup
cmp
mov
sahf
dec
popf
push
js
xchg
loope
test
mov
lret
test
pop
cmpl
push
ss
push
xchg
ljmp
bound
adc
inc
dec
imul
push
lods
adc
loope
mov
mov
out
jae
lods
mov
sbb
sbb
popa
jmpw
dec
inc
iret
int
lods
fs
int3
rcll
scas
ret
jecxz
dec
push
push
or
xor
jg
scas
pop
insb
sahf
sti
rcrl
jle
jo
lds
push
lods
jg
sub
or
imul
stos
add
inc
es
sbb
fs
or
arpl
xchg
mov
movsl
pushf
cmpsl
in
jne
sbb
mov
sub
stos
xchg
popf
icebp
inc
jmp
mov
pop
mov
or
loope
arpl
sbb
rcrb
stos
dec
adc
xchg
push
loop
jg
push
add
loope
mov
add
jmp
adc
inc
nop
popf
enter
add
jo
and
jb
test
adc
loopne
enter
pop
push
pop
out
and
arpl
shlb
pop
fisubrl
rorb
dec
test
fsubs
cmp
push
test
sub
pop
insl
fdivr
sbb
je
into
enter
push
hlt
push
xchg
clc
fiadds
ds
inc
adc
mov
aas
dec
test
pop
shl
into
pcmpeqb
cmp
cmpsl
add
ficoms
jecxz
stos
push
movnti
cwtl
jge
sbb
push
pop
addl
shlb
dec
ja
xor
scas
jp
iret
call
je
and
xor
dec
loope
xor
jl
fwait
or
mov
sbb
shrb
sbbb
xor
ja
xchg
popa
pushf
mov
int3
jmp
fstpt
mov
mov
out
push
sbb
fisttps
xchg
dec
fildll
or
out
out
cs
sbb
push
jbe
les
aas
out
gs
xchg
fistps
fsub
mov
sar
mov
jns
test
lods
cmp
dec
cmp
pop
fildl
dec
out
xchg
jecxz
scas
push
ret
mov
out
outsb
pop
cwtl
pop
cltd
icebp
fisttps
or
cmp
fistl
jae
shll
addb
dec
jecxz
inc
lods
leave
mov
sbb
cmp
sets
add
push
cld
xor
enter
push
loop
mov
cmc
scas
mov
mov
xor
inc
xor
push
pop
push
inc
cmp
movsb
adc
or
fmull
popf
mov
lret
jae
mov
push
in
bound
lahf
sti
call
cmp
imull
inc
jmp
mov
fsts
mov
in
push
fmuls
fcomps
mov
stos
sbb
sbb
pop
rcl
cmpsl
pop
xchg
xor
adc
and
ljmp
or
xor
or
xorl
mov
dec
adc
aad
les
jo
es
outsl
sbb
xor
sub
sar
iret
clc
enter
addr16
pop
stos
inc
imul
and
xor
xchg
pop
or
mov
shlb
orb
inc
xor
int3
xchg
cmpsl
mov
jle
mov
xlat
out
hlt
popa
cld
inc
clc
mov
repz
aaa
popf
or
sub
xor
aam
mov
jge
or
pusha
icebp
shlb
loopne
test
push
jle
lea
repz
int
cltd
mov
dec
loope
pop
or
aam
fwait
xchg
inc
sub
pushf
sub
stc
ret
xchg
repnz
pop
mov
push
mov
cs
test
pop
xor
sahf
sub
cs
mov
dec
sub
lcall
ror
in
data16
jno
bound
loop
pop
jb
sbb
loopne
out
pop
mov
arpl
mov
movsl
lea
push
mov
lods
gs
or
loope
enter
out
imul
adc
leave
pop
pusha
jmp
repz
imul
xor
cli
xchg
pop
add
mov
xchg
je
mov
sti
cmp
push
lea
mov
cs
test
lock
inc
test
inc
lds
push
jno
and
inc
fs
addr16
or
das
add
xchg
fsts
stos
adc
push
mov
sbb
or
testl
mov
mov
fiadds
icebp
andl
pop
push
addr16
or
mov
mov
stos
lea
scas
cmp
mov
mov
fwait
negb
sbb
loopne
inc
shlb
xchg
in
push
movsl
jnp
hlt
sub
jmp
int3
add
gs
ljmp
add
xchg
pop
mov
jle
js
bound
jb
jb
les
sbbl
push
mov
stc
cmp
jl
xchg
sub
hlt
mov
pop
inc
stc
xor
in
lret
xchg
repz
outsl
xor
inc
push
call
jns
scas
pop
mov
ret
sbb
rcrb
lods
jne
jg
in
xor
inc
lods
ret
mov
adc
adc
jbe
adc
add
loopne
lods
and
in
dec
mov
add
lock
sbb
insl
clc
mov
mov
out
adc
mov
and
enter
sbb
mov
pop
jae
shr
inc
cld
inc
jo
adc
rorb
adc
je
xor
mov
mov
fidivs
xchg
jno
mov
ja
lock
data16
mov
jnp
shrb
mov
cmc
dec
jle
cld
cmpsl
or
inc
sahf
dec
loope
pushf
mov
insl
or
lcall
inc
push
das
pop
mov
ja
jnp
daa
cs
jle
xchg
lcall
out
into
cmp
int
pop
push
stos
lcall
add
cmpsl
xor
sub
out
fisttpl
jecxz
add
leave
cld
jle
les
cmpsl
add
add
dec
adc
mov
std
daa
test
push
push
or
and
dec
adc
sti
test
push
mov
mov
inc
adc
packuswb
daa
sub
insb
adc
push
outsl
fmulp
aas
and
xor
mov
ffreep
fdivl
and
and
pop
xchg
lcall
aam
or
sbb
xor
or
mov
xchg
mov
push
xchg
repz
in
sub
rorb
hlt
insb
cmpsl
std
lahf
adc
arpl
inc
xor
jecxz
cmp
and
dec
mov
pop
inc
push
sbb
into
sbb
pop
rcl
call
out
js
xchg
sub
sub
addb
sar
push
xchg
sti
mov
push
push
push
xor
arpl
push
sahf
call
sbb
xor
fcoms
mov
fs
dec
ljmp
out
sahf
inc
mov
push
push
xchg
insl
xchg
stos
adc
cld
xor
out
jmp
in
scas
mov
pop
std
in
xchg
inc
repz
xchg
ficompl
outsb
dec
inc
pop
inc
add
adc
or
sti
adc
xor
mov
cmc
jbe
mov
cmp
pop
jl
pop
jg
divl
into
mov
xor
jb
mov
sub
inc
in
sbb
frstor
cmpsb
bound
jnp
xor
es
imul
stos
inc
sub
jp
xchg
stos
shl
mov
cmc
mov
mov
sub
push
xchg
aad
mov
cmpsb
mov
sbb
mov
xchg
sub
aam
mov
mov
fxch
mov
pop
sbb
stos
push
mov
and
je
aad
mov
push
mov
test
jmp
cmp
outsb
cmpsb
mov
add
iret
mov
jb
inc
inc
jo
mov
int3
cmp
pop
adc
leave
imul
test
into
jo
mov
add
xchg
fs
negl
mov
push
pusha
xchg
mov
push
xchg
and
fdiv
pop
mov
out
and
pop
adc
pop
sbb
ss
rolb
lds
fistl
push
imul
fstpl
pop
add
fnstsw
push
lret
add
and
sbb
jle
aaa
mov
je
scas
cmp
call
in
add
adc
test
or
push
jecxz
push
aas
inc
fimuls
movsb
cmp
dec
lret
arpl
shlb
push
call
int3
sti
mov
mov
pop
out
test
xor
sbb
fwait
adcb
mov
cmc
mov
cmpl
pop
in
cmp
cmp
mov
sub
jnp
or
inc
imul
loopne
xor
enter
out
lret
or
push
bound
mov
pop
fs
dec
pusha
mov
push
fsts
and
mov
adc
mov
sub
add
jecxz
test
mov
scas
cs
testb
nop
stos
out
hlt
cmp
mov
jae
popl
xor
fstl
add
out
mov
lock
aas
push
jne
xchg
js
mov
pop
cmpl
cmp
fidivrs
aam
loopne
out
stc
lret
out
in
dec
repnz
mov
dec
fnsave
push
stos
xchg
cmp
cmp
test
jb
in
jnp
out
xor
ljmp
stos
mov
into
adc
ficoml
adc
or
adc
cmp
stos
adc
popl
outsb
mov
imul
stc
and
addr16
stos
mov
pop
xor
stos
inc
clc
push
mov
dec
push
mov
pop
pusha
mov
pop
cmpsl
and
sbb
nop
adc
or
sub
out
arpl
iret
fldl
jg
sbb
jl
jp
lea
sahf
xchg
sbb
sub
repnz
xchg
out
dec
jp
xor
bound
pop
jo
sub
repz
call
cmp
sti
jecxz
adcb
pop
sti
jo
bound
mov
imul
repnz
fiaddl
in
repz
pop
roll
std
mov
add
add
add
nop
fldenv
pop
jl
sti
insl
push
push
popa
cmp
or
movsl
push
push
leave
cmpb
test
mov
xchg
pop
pop
xor
adc
push
int
cld
cltd
jle
mov
mov
in
mov
sbb
or
aad
test
fsubr
add
mov
pop
mov
fwait
mov
jbe
hlt
mov
fdivrs
xor
test
xorl
or
jp
sarl
std
jle
jle
sub
pop
pusha
dec
cld
cltd
jle
lret
jb
aas
aas
sbb
fimull
or
es
dec
jl
data16
jl
pushf
sbb
jo
adc
inc
sub
xchg
loopne
pop
cmp
jecxz
stos
xor
mov
shl
in
jns
pop
sub
and
pusha
icebp
popf
jmp
push
jge
loop
xor
cli
dec
inc
mov
sarl
adc
dec
jmp
aaa
inc
pop
repz
and
fs
jo
dec
in
mov
das
das
movsb
shl
mov
data16
adc
testl
fldcw
adc
loope
jmp
sub
or
jecxz
jns
mov
push
shrl
pop
pop
in
push
mov
push
ja
out
push
push
mov
mov
mov
dec
outsb
mov
push
dec
nop
gs
cltd
jl
fildll
lods
jle
mov
jb
pushf
ds
dec
jl
ja
sub
repnz
cs
and
arpl
jp
ret
mov
das
int3
xor
push
cmp
shl
xor
movsb
das
ds
xlat
aam
jmp
fstpt
fdivl
adc
test
push
xor
ljmp
lret
pop
push
lods
les
jmp
addb
mov
div
pushf
cmp
pop
rclb
in
jle
xchg
sub
inc
dec
mov
add
cmpsb
pop
js
mov
push
mov
push
jnp
jecxz
xlat
stos
rolb
stc
test
sbb
pop
aam
mov
ret
inc
test
adc
pop
lret
lret
mov
insl
dec
shl
rcrb
loope
iret
sbb
daa
mov
std
rcrb
cli
mov
jp
and
aam
pop
fmul
or
add
and
mov
sub
and
add
add
dec
aaa
push
dec
push
iret
imul
pop
cwtl
icebp
jno
cvtps2pd
push
inc
aas
shr
mov
cmpsl
jge
adc
and
cmp
movsb
in
sar
pop
xchg
xor
sub
mov
jge
xchg
lret
dec
shr
clc
cwtl
jbe
dec
and
je
adc
lcall
aam
xor
dec
pop
cmp
sbb
loope
jp
sub
and
inc
mov
fs
or
push
mov
push
aaa
mov
popf
mov
les
aad
sahf
sti
add
and
daa
rcrb
mov
push
fnstsw
pop
inc
or
xchg
repz
popa
jns
inc
or
dec
pusha
xor
mov
scas
notb
lea
outsl
push
inc
adcl
or
and
clc
jns
incb
in
mov
aam
add
or
inc
xchg
sahf
nop
xchg
add
lret
js
lods
mov
mov
mov
fcompl
aas
test
ljmp
cmp
dec
insl
dec
cmp
push
lcall
or
lcall
inc
mov
shrl
jl
mov
repnz
add
push
mov
aad
lods
aad
or
dec
test
mov
lock
in
adc
or
add
and
stc
test
sbb
mov
flds
cmp
pushf
jbe
push
mov
jp
mov
scas
xor
std
mov
fnstcw
pop
mov
xorl
jg
xor
lahf
add
or
jns
lea
mov
add
push
in
aad
ds
mov
xor
push
fildll
ret
dec
dec
out
rcr
les
mov
loope
dec
and
and
dec
jl
jmp
movsb
sbb
push
inc
pop
pop
fistl
cmp
jns
jno
pop
fisubrs
mov
hlt
jbe
into
inc
and
lret
inc
xchg
inc
push
scas
push
pop
sbb
fmulp
in
jle
mov
mov
mov
xor
sub
icebp
adc
push
mov
add
sbb
inc
out
ret
into
xchg
sbb
out
test
xchg
jb
push
sti
xchg
sbb
mov
pop
xchg
push
mulb
cld
jle
dec
mov
test
repz
into
cmp
daa
adc
mov
jl
ds
adc
mov
negl
ret
jecxz
add
int3
sti
sbb
mov
data16
sub
inc
push
mov
dec
pop
and
clc
cltd
in
xorl
jecxz
mov
add
sahf
mov
popa
push
pop
nop
push
add
push
xchg
mov
ljmp
and
cmp
mov
shl
mov
mov
clc
js
and
xchg
leave
shll
cmp
xor
bnd
push
lret
je
imul
cmp
inc
aad
adc
cmovl
jl
inc
add
jmp
loop
scas
jle
push
dec
sbb
inc
mov
adc
or
mov
fisubrl
pushf
mov
stos
sub
push
jl
xchg
inc
sbb
cmpsl
mov
jle
inc
inc
pop
jbe
and
add
sub
ror
push
dec
sub
sub
xor
cld
fisubrs
and
push
xchg
rcl
icebp
add
lcall
scas
cmc
xchg
je
add
das
sub
xchg
push
and
pop
dec
inc
out
cmp
cmp
push
mov
jae
ss
jl
jo
ret
mov
adc
and
sbb
mov
stos
inc
xchg
aam
sbb
sbb
jb
mov
orl
fdivrp
push
cli
xor
mov
mov
int
sub
frstor
ja
sub
cli
or
imul
jb
pushf
into
dec
lret
stc
xchg
lcall
jbe
adc
mov
negb
sahf
ret
call
mov
mov
mov
push
jae
xlat
lods
push
insl
jmp
hlt
popa
ja
xchg
add
xchg
jmp
inc
in
jb
andb
pop
sub
mov
cltd
out
in
mulb
mov
popa
pop
divb
adc
sub
shll
jle
int
imul
push
or
ret
pop
stos
jnp
mov
mov
hlt
mov
pusha
xchg
dec
ss
mov
std
aam
int
jns
test
out
jmp
and
mov
sbb
sub
jbe
jae
bound
imul
shlb
mov
mov
pop
push
inc
enter
push
insl
outsl
cltd
mov
adcl
sub
vmptrst
lds
xor
push
push
jae
sbb
arpl
push
mov
dec
dec
xchg
add
sbb
loopne
cld
ja
and
and
add
stos
pop
aas
into
mov
jmp
jmp
fcomps
cmp
int3
sub
cwtl
xchg
xor
jp
jno
mov
dec
jp
add
and
movsb
rorl
sub
fsubl
mov
and
sub
sub
mov
mov
xor
fimuls
das
pop
or
int3
push
add
mov
sbb
stos
jp
mov
cltd
lock
int3
aam
nop
sbb
iret
in
mov
ficompl
push
test
ss
iret
in
in
dec
adc
sti
adc
pusha
push
std
icebp
pop
daa
loopne
adc
shll
cmc
cwtl
jbe
or
or
xor
mov
fnstcw
sub
pusha
mov
lret
cmp
repz
jecxz
or
add
sbb
mov
lea
shlb
mov
movsl
xor
lock
mul
subb
ss
push
xchg
jp
inc
mov
sub
add
sub
adcl
pop
mov
imul
and
cmp
inc
hlt
pop
fsubp
jmp
arpl
mov
nop
dec
push
mov
loop
sti
nopl
cwtl
movsb
fs
push
xor
jmp
xor
lods
out
out
dec
fisubs
aas
sub
sbb
outsb
icebp
ljmp
and
and
mov
dec
add
fdivr
fwait
arpl
add
inc
cli
cmpl
inc
xor
scas
xchg
cld
sub
sub
lock
std
dec
stos
push
ljmp
jo
nop
xor
inc
ja
jmp
addr16
xor
mov
cvtps2pd
iret
push
call
dec
imul
xchg
fdivr
push
sub
sbb
scas
add
test
dec
lcall
lods
loopne
subb
mov
out
ss
scas
sti
xchg
jo
lods
adc
in
fs
outsl
daa
mov
or
pop
scas
mov
js
js
lret
jns
sub
sub
cmp
bound
inc
xlat
rcll
mov
or
pop
jae
rcr
das
mov
or
mov
imul
scas
dec
scas
mov
dec
mov
sti
mov
jl
fs
loop
es
lea
xchg
lret
add
iret
les
movsb
icebp
mov
out
and
not
lods
mov
bnd
adc
mov
cld
test
popa
push
or
adc
sbb
jle
aam
sub
shlb
imul
xor
sub
push
addr16
sbb
push
test
mov
test
inc
inc
jle
lods
shrl
push
test
rcll
cmp
test
adc
lock
xchg
xchg
or
inc
xor
sbb
jnp
pushf
dec
lock
sbb
arpl
pop
cmp
daa
jl
shlb
dec
and
iret
xchg
xor
sahf
test
aas
sbb
cli
stos
lock
es
in
testb
sub
adc
ljmp
inc
loop
add
repnz
vprotq
pushf
movsl
jge
cmp
stc
push
nop
cmc
add
mov
jno
or
iret
or
xchg
add
xorb
out
nop
cmp
jecxz
cmp
pop
pop
mov
add
pop
cwtl
out
divl
xlat
jg
xlat
sbbl
xchg
or
pop
fstl
xor
insw
rcrl
mov
mov
cltd
mov
dec
mov
fisubrl
mov
loopne
sub
js
das
into
nop
repnz
aas
divb
mov
je
jns
cmp
sahf
sahf
out
cmp
gs
mov
sbb
out
cmp
mov
adc
pusha
push
pop
enter
xchg
pop
push
sahf
jle
mov
mov
sahf
mulb
imul
hlt
lcall
mov
dec
lahf
movsl
mov
icebp
jp
icebp
pop
loope
out
lret
iret
ljmp
addl
clc
jno
repz
or
aaa
xchg
ret
cmp
and
jmp
sub
pop
insb
and
inc
and
in
jmp
sub
mov
jno
xor
mov
mov
out
das
sbb
pop
adc
dec
subb
add
icebp
fwait
in
and
xchg
test
bound
repnz
mov
lahf
jns
decl
mov
fwait
divb
cld
fsubr
push
xchg
jae
xchg
xchg
in
in
movsb
shlb
sbb
xor
ret
push
mov
push
sub
fidivrs
cmp
out
sbb
mov
lcall
and
xor
lcall
outsl
sub
dec
in
hlt
inc
jns
data16
mov
and
incl
cmp
fists
mov
xchg
jecxz
mov
adc
out
xor
xchg
cwtl
aaa
je
fdivr
movsl
pop
add
dec
mov
dec
push
scas
into
in
mov
jl
sub
xor
jmp
les
xlat
adc
mov
pusha
sbb
jp
jp
bound
imul
jns
mov
or
aad
mov
notb
jmp
fldt
lahf
push
push
decl
dec
stc
pushf
and
jmp
mov
cs
cmp
inc
rcl
out
filds
adc
or
xor
mov
mov
cmp
ret
pop
push
loopne
repnz
bnd
cmpsb
pop
mov
and
mov
or
sbbl
out
jmp
xchg
addb
lret
or
xor
mov
xchg
clc
std
mov
mov
mov
cmc
jno
adc
mov
xchg
cmp
mov
cmc
sbb
test
jecxz
jmp
subb
dec
stos
repnz
mov
adc
and
subl
or
rclb
je
mov
dec
mov
jno
aas
popa
lods
sub
sahf
inc
dec
cmp
push
mov
fadds
or
dec
pushf
lods
cmpl
mov
cmc
int
jae
jg
loopne
jcxz
ffreep
imul
mov
in
jle
cmpsb
nop
call
mov
inc
mov
into
dec
arpl
sbb
in
fimuls
add
mov
sub
push
cmc
xor
rcl
pop
xor
jb
lock
hlt
int
push
push
cmp
pop
add
mov
add
iret
jle
test
pop
mov
dec
aaa
popa
adc
adc
mov
int3
les
push
negb
cltd
add
push
cmpsb
mov
mov
fistps
pop
mov
out
test
sti
xchg
mov
and
and
enter
stc
sbb
mov
or
in
jno
pop
jle
into
pop
add
or
xor
inc
enter
push
movb
sbb
jg
pop
addr16
test
cmc
jnp
sti
lcall
push
mov
add
fwait
cmp
int
cmp
push
js
cld
pop
fwait
jge
aad
sbb
mov
xlat
imull
jp
inc
sub
in
jnp
jmp
ss
lahf
xchg
test
xchg
out
pop
and
add
idivb
scas
mov
sub
enter
cmp
cmp
scas
mov
paddusw
loope
pop
clc
loope
fldenv
js
adc
jecxz
and
inc
sahf
insb
mov
test
ret
or
cmp
xor
xor
imul
iret
push
xchg
cltd
aad
push
ret
sbb
adc
adc
test
pop
jle
movsl
push
aam
movsl
and
loope,pn
xor
rcl
fs
push
cmpsl
aam
pop
movsb
mov
pushf
push
inc
cmp
cld
outsl
mov
out
mov
xor
dec
push
out
and
or
add
enter
push
xor
push
jo
sub
lods
sbb
aad
add
inc
mov
cs
daa
out
shll
adc
and
je
xor
add
ljmp
fbstp
pushf
cmp
icebp
cld
int3
push
loope
cmc
inc
cmpsb
outsl
movsb
insl
sbb
sub
xor
cmp
stos
loopne
sbb
shlb
pop
imul
lods
cli
push
inc
mov
or
scas
call
adcb
jbe
xor
addr16
adc
adc
mov
dec
dec
arpl
dec
fstpl
cmpsb
arpl
insb
inc
je
cmp
aad
or
mov
cmp
and
pop
and
aad
jge
jne
push
loope
jl
mov
sub
jl
xor
jmp
addl
sub
mov
push
mov
mov
mov
test
jge
in
in
iret
adc
leave
cmp
popf
ret
push
fldcw
aad
adc
inc
mov
xor
xchg
jae
divb
cmp
dec
fidivrl
dec
mov
xchg
outsb
subb
popa
sti
bound
sbb
jb
sub
cmp
lea
dec
push
negl
or
rcll
leave
and
jno
jns
xorb
fwait
or
push
out
hlt
idivl
ret
pusha
xlat
jb
aad
inc
stos
pop
push
jbe
add
shlb
int3
sub
mov
mov
ja
jp
jns
lea
enter
cmpl
pusha
into
aas
or
mov
scas
dec
insb
mov
add
cmp
ficomps
mov
sbb
inc
push
loop
mov
and
test
xor
mov
dec
cmp
sahf
ficomps
in
fwait
sub
out
in
push
jecxz
test
in
push
lea
data16
pop
inc
stc
ds
adc
into
xchg
cmp
pop
or
outsb
sbb
in
ja
decl
sbb
pop
adcb
adc
dec
sahf
jge
mov
cmpl
jo
mov
js
loop
xor
out
cmpsb
insl
je
aas
jp
aaa
ret
add
int
inc
xchg
insb
imul
dec
dec
aad
mov
push
daa
pop
pop
hlt
ss
movsb
int
shll
fs
xchg
push
mov
add
and
push
fsubrs
xor
lret
jge
lret
add
fistpll
or
lods
xchg
sbb
jb
mov
push
sub
out
test
mov
arpl
in
or
cld
cmp
mov
xchg
or
mov
notl
das
mov
popa
cmp
dec
adc
cmpsl
sbb
fcomp
pop
adcl
aad
mov
dec
out
divl
xchg
test
mov
xchg
popf
gs
mov
dec
iret
sti
adc
dec
or
stos
pop
aas
cmp
popf
je
aam
sub
add
mov
sbb
and
dec
adc
addl
pop
xchg
and
push
mov
pop
mov
pop
outsl
mov
out
stos
xor
arpl
out
sbb
pop
fucomi
push
pmullw
cmp
lods
pop
mov
push
xlat
jp
jle
xor
jne
aam
pop
sbb
fwait
int
adc
jle
in
dec
cmp
jbe
add
mov
push
fsubs
push
loopne
mov
xor
push
rcr
and
cltd
inc
push
fisttpl
ret
dec
subl
fists
push
jge
imulb
mov
xchg
je
inc
pop
bound
ret
leave
dec
orb
scas
and
jno
call
jnp
call
subb
imul
movsb
es
and
imul
jmp
xor
pop
mov
lea
mov
cmp
shrb
and
aam
cmpsl
pop
xchg
push
inc
cmpsl
push
mov
fucomip
out
call
pop
pop
adc
or
mov
add
jb
jo
and
in
fbstp
jle
jecxz
sbb
pop
mov
dec
adc
int
cltd
adc
mov
mov
xchg
sub
aam
rolb
push
push
pusha
add
and
sbb
jne
or
inc
mov
shll
imul
enter
push
loopne
sti
mov
pop
shll
sbb
int3
cmc
push
icebp
cli
mov
adc
je
loopne
xchg
dec
clc
pop
lods
xlat
jo
sub
jle
push
int3
xor
pop
insb
rcrl
cwtl
push
xor
sub
dec
cwtl
xor
mov
stc
xor
stc
icebp
cmp
sbb
repz
rcl
test
pop
add
add
out
mov
mov
addr16
xor
enter
sahf
pop
pushf
test
das
rclb
mov
xor
pop
loop
les
cmp
icebp
popa
xchg
int3
mov
test
xor
pop
xlat
xor
test
inc
and
out
mov
imul
mov
pushl
inc
scas
out
xor
or
insb
mov
stos
popa
rclb
push
cld
imul
int
jl
jg
sbb
sbb
rcl
data16
mul
test
jge
cmp
int3
mov
pop
xor
mov
ret
mov
outsb
decl
repnz
addr16
mov
and
and
jecxz
dec
stc
fidivs
sbb
stc
dec
mov
fcoms
aas
lods
test
testl
push
jo
popa
lods
fildll
fs
adc
xchg
in
add
in
lret
lds
dec
jle
sbb
es
pop
sbb
cld
inc
popa
pusha
addr16
stos
mov
les
loop
ficoms
xchg
jae
push
adc
loopne
lods
xchg
sub
test
or
lods
push
mov
sbb
jnp
jae
enter
out
xor
mov
pop
lock
pop
mov
test
test
and
js
rclb
lds
leave
je
sti
nop
arpl
dec
out
out
in
sahf
stos
add
mov
mov
fwait
mov
lods
fimull
cmc
mov
test
push
adc
mov
and
ja
xchg
neg
xchg
sbbl
outsb
cmc
fnstcw
mov
push
push
fsubl
gs
aad
inc
push
in
and
aad
jmp
xor
pop
decb
ljmp
out
popf
pop
mov
xchg
jg
adc
movsb
and
dec
mov
ret
xor
or
sbb
stos
loope
jb
adc
std
cmpsl
or
frstor
outsl
pop
fbstp
and
int3
mov
dec
add
xor
out
data16
push
aad
dec
pop
and
mov
orb
rcrl
push
add
mov
lods
std
jmp
push
mov
jmp
push
push
sub
xchg
or
lea
bound
xor
loop
and
mov
cmp
and
xchg
sbb
int
push
and
sbb
xchg
jmp
cltd
push
cmc
mov
pop
sbb
lret
cmp
mov
mov
fwait
ljmp
add
xlat
ja
test
data16
mov
fimull
lret
cmp
sub
dec
mov
sbb
add
in
push
mov
in
inc
push
fildl
pop
shr
mov
add
push
dec
mov
mov
sbb
jae
aaa
call
xchg
adc
lcall
and
shr
sbb
aam
ret
push
repnz
loop
lret
mov
push
bound
or
sbb
xor
xor
mov
add
cmp
pop
and
stos
xchg
xchg
adc
mov
scas
test
mov
dec
roll
orl
cmp
xchg
lea
test
daa
loope
scas
es
cmovne
sub
cmovge
aad
mov
fisubl
pop
div
gs
ljmp
pop
outsl
jl
pop
testl
jae
sahf
pop
pop
or
mov
js
imul
fimuls
ljmp
or
and
addl
sub
clc
movsb
loop
sbb
outsb
loop
lock
mov
lock
orb
ja
inc
sbb
jg
cmp
ret
add
mov
mov
jb
jmp
add
movsl
xor
cmc
out
mov
jg
stos
pop
sub
push
jns
inc
sub
lret
dec
xchg
movsb
jecxz
fadds
lods
out
icebp
pop
pop
add
adc
filds
or
sub
mov
sbb
fstl
adc
sbb
mov
pop
push
out
mov
cwtl
inc
inc
dec
jmp
gs
dec
dec
pop
cmpsb
mov
pop
sub
add
mov
or
or
mov
repz
fidivs
aad
and
xchg
not
into
shrb
fistpll
aas
repnz
pop
incl
jns
add
dec
jecxz,pt
mov
or
mov
pop
or
adc
jb
cltd
or
push
notl
stos
jne
pop
fsubrs
jo
push
sbb
push
mov
jg
mov
ret
inc
mov
ljmp
xorl
cs
cmp
pop
loopw
sub
ljmp
xor
and
arpl
jo
jg
adc
aad
fidivs
mov
outsl
adc
jle
div
xchg
sbb
in
xor
mov
dec
jmp
dec
dec
push
repnz
add
push
dec
adc
lret
adc
mov
loop
loope
inc
adc
add
jge
mov
dec
in
adc
lea
adc
rcrb
sbbl
out
or
pusha
push
jns
stos
outsb
out
mov
xor
jp
and
loop
mov
push
pop
pop
cwtl
fnsave
mov
mov
adc
jle
sbb
ja
fdivl
arpl
shlb
movsb
jmp
aad
xchg
sbb
rolb
push
and
loope
and
popa
and
mov
sbb
mov
inc
lods
call
imul
sbb
ror
xchg
sub
add
mov
xchg
sbb
int3
jb
shll
mov
mov
pop
test
lock
jg
and
push
ljmp
sahf
jle
add
daa
sbb
sub
cmp
xor
sbb
sub
mov
emms
gs
incl
mov
aad
ret
dec
add
aas
xlat
add
cmp
insb
test
or
and
jo
lock
add
andb
cmp
int3
jmp
xchg
dec
jp
and
cmp
in
and
in
insb
jmp
cmp
imul
cmpsb
cmp
xchg
sarb
lea
push
mov
das
in
es
mov
cli
andl
je
aaa
hlt
inc
jbe
and
out
adc
out
pop
xchg
shlb
movsb
inc
pop
and
mov
push
xor
xchg
xor
or
clc
add
add
sub
inc
in
add
mov
fists
sbbl
add
movsl
or
pushf
mov
pusha
jnp
jge
addr16
jmp
repnz
fcomp
ljmp
notl
call
enter
inc
xchg
xchg
mov
mov
adc
mov
int3
imull
xchg
or
shr
inc
dec
mov
test
xchg
dec
loop
mov
in
ret
cmpsl
push
jno
cmpsl
mull
push
imul
outsl
push
mov
subb
push
cmpl
add
popa
rolb
cmp
mov
fs
push
bound
pop
les
out
test
test
pop
adc
fiadds
jecxz
push
mov
xchg
std
movsl
push
sub
pop
dec
or
or
mov
inc
xchg
out
cmp
sbb
js
sbb
cmpsl
rclb
mov
sub
les
dec
subl
icebp
das
lahf
mov
pushf
adc
mov
adc
es
bound
lock
dec
jp
in
clc
pop
mov
sub
inc
loop
adc
and
sub
inc
xor
loope
test
fistpl
and
into
add
stc
adc
leave
sbb
pushf
mov
mov
mov
aad
cmpl
call
push
or
inc
adc
jo
mov
inc
jne
test
mov
mov
sub
mov
mov
pusha
cmp
xchg
cli
or
sbb
fistpl
lret
clc
out
pop
sar
mov
rorb
shll
add
icebp
fucomi
and
or
shl
add
or
enter
push
je
scas
test
loope
sbb
inc
nop
aam
shlb
mov
cmp
div
push
imul
sub
inc
aaa
test
jbe
xor
popl
mov
pop
aad
icebp
pop
out
out
clc
mov
sub
push
cmc
cld
sbb
mov
mov
jge
cld
inc
and
or
outsb
inc
mov
cmpl
jno
jge
ror
push
into
mov
mov
adc
jmp
js
jle
pop
repnz
or
mov
negb
mov
mov
fisttpl
out
adc
ja
scas
das
jmp
mov
call
out
stos
or
jg
sbb
xchg
inc
mov
arpl
xchg
add
loope
jnp
leave
fsincos
mov
sahf
jle
xchg
inc
lret
idivl
insb
push
xchg
add
xor
fs
mov
jmp
in
aad
in
inc
mov
mov
xor
push
and
ret
add
mov
cmp
push
jnp
lock
shrl
sahf
xchg
push
testl
jp
ficompl
imul
xchg
xchg
dec
xlat
lods
cld
pop
and
test
mov
push
inc
mov
fcmovne
cmp
or
addr16
inc
mov
mov
cmp
dec
movsl
cmp
fdiv
rcll
cmpsb
mov
inc
mov
mov
dec
adc
imul
sbbb
sub
xor
xchg
lods
fsts
or
xchg
popf
das
sub
add
pop
dec
call
jb
sbb
ror
clc
les
inc
cmpsl
add
push
out
xchg
loop
ljmp
fistpl
mov
pop
push
pop
sbb
stc
aam
dec
rorb
sbb
mov
scas
lods
inc
and
cmpl
push
loope
cmpb
in
les
sbb
mov
cs
add
fiaddl
jno
insl
or
pop
sub
lock
mov
cmp
fldt
in
movsb
mov
adcl
lock
lahf
lods
pop
push
mov
outsb
and
stc
or
inc
mov
sub
push
enter
inc
nop
cmp
std
gs
jle
cld
and
ljmp
out
sub
sbb
push
insl
rcrb
xor
push
or
xchg
int
add
mov
mov
add
ficompl
mov
cmp
sbb
xchg
in
sbb
lods
outsb
adc
mov
cmc
xchg
add
pop
xor
pop
loope
adc
xor
lods
cld
xor
jns
inc
fsubrl
adc
mov
icebp
es
sub
call
js
out
sbb
sbb
lahf
inc
fwait
dec
mov
mov
fucom
prefetch
imul
sbb
push
fcoml
inc
sbb
rcrb
pop
aas
xchg
cmpsl
sahf
loopne
xchg
sahf
cmp
push
jnp
or
or
xchg
out
arpl
jmp
mov
test
ret
pop
lret
cwtl
lock
fdiv
fisttpl
lods
fldcw
daa
xlat
and
insb
aas
dec
dec
jp
dec
push
rcl
imul
fsubs
lds
xor
and
aaa
pop
xor
loopne
test
divl
movsb
jno
sub
xchg
bound
pop
cwtl
jne
scas
jmp
je
push
out
xchg
or
push
imul
mov
mov
sub
movb
pop
mov
jo
jg
ss
aas
in
ljmp
mov
repz
inc
aaa
daa
cmp
mov
fistps
mov
addr16
mov
adc
stos
popa
out
pop
testb
ret
add
and
loop
xchg
insb
ret
mov
add
jnp
sub
add
dec
ret
jecxz
sbb
inc
add
in
or
lcall
xor
frstor
inc
xor
data16
inc
jle
loop
scas
inc
test
jecxz
scas
mov
jecxz
xchg
jbe
cmpsb
mov
fisubs
inc
scas
jne
mov
jns
dec
mov
mov
cmp
xchg
xor
pop
aaa
cwtl
jno
sbb
stc
std
mov
les
enter
pusha
sub
jns
cmpsb
mov
in
xchg
pop
mov
adc
mov
sub
jb
lret
decl
dec
enter
lahf
push
dec
push
cmp
stos
pop
sti
dec
mov
aaa
pusha
push
adc
punpckhbw
push
push
cmpsl
dec
ret
sbb
sub
ljmp
ja
sbb
push
rolb
push
loope
imul
test
adc
std
int3
out
aaa
in
cld
loop
xchg
into
scas
hlt
stos
add
rcrb
addr16
sbbl
into
aas
xor
std
xor
dec
jecxz
xor
sbb
push
mov
xchg
mov
mov
ja
mov
int3
lods
jle
in
rcll
or
scas
mov
add
mov
mov
out
sbb
xchg
mov
and
ss
cmpsb
es
enter
sarl
jae
repz
jo
arpl
fists
push
add
cmp
mov
dec
imul
lcall
daa
sbb
inc
mov
rcll
jno
mov
roll
jp
fs
and
or
out
ja
popf
aaa
sbb
movsl
cs
in
sub
jmp
jo
or
pop
cs
outsl
lds
int
push
rcrb
call
into
or
and
jnp
stc
pop
add
mov
fwait
sbb
iret
jbe
mov
mov
fnstcw
fldcw
pop
mov
adc
cmp
sbb
jne
and
mov
xchg
movsl
xchg
jbe
ljmp
push
icebp
stc
iret
push
mov
sbb
sub
mov
repz
or
imul
adc
xor
test
les
jle
sub
movsb
inc
mov
pop
mov
sbb
fisubl
filds
mov
sarl
fcompl
push
lcall
pop
dec
enter
outsl
into
inc
shll
adc
std
dec
test
daa
jns
dec
lcall
add
push
inc
mov
pusha
mov
das
mov
xor
imul
arpl
dec
test
insb
mov
xlat
add
xchg
add
rcll
lea
sbb
insb
mov
mov
lahf
dec
jmp
pushf
in
out
xor
fildll
aam
push
icebp
adcl
aad
pop
nop
cmp
pop
sarl
stos
mov
aad
mov
loope
add
cmc
cmp
movsb
mov
push
leave
jge
data16
and
cmpsb
inc
jns
mov
xchg
add
adc
dec
test
sub
lods
adc
xchg
cmp
sub
and
mov
outsb
jno
adc
rolb
cmp
sub
xor
sahf
push
sbb
pop
neg
dec
pop
inc
fs
jae
bound
jg
adc
inc
xor
jo
dec
hlt
mov
ljmp
pushf
in
and
stc
iret
insl
or
mov
push
fbstp
xor
rorl
loope
inc
push
insb
mov
mov
push
les
mov
insl
in
sbb
call
pop
lds
repz
mov
mov
pusha
push
jbe
stos
or
cmp
cs
xor
mov
lds
insl
fs
cmp
xlat
out
aas
sub
out
and
mov
lods
sbb
jne
das
push
outsb
std
fwait
test
xor
roll
sub
out
lret
fwait
and
jbe
aaa
mov
in
cmp
sahf
out
cmpsb
pop
shrl
jnp
sbb
aas
into
es
mov
and
mov
lcall
push
sahf
pushf
push
out
movsl
in
outsb
sub
push
insl
pop
or
push
jp
fwait
xchg
in
ljmp
loopne
mov
add
sarb
mov
shll
jecxz
xchg
sub
aas
cli
jge
or
mov
ficoml
pushw
push
test
and
cmp
inc
test
pushf
insb
imul
data16
das
sbb
mov
or
dec
adc
push
mov
mov
push
adc
inc
mov
sbb
add
xchg
stos
mov
jp
fwait
out
xor
mov
clc
aad
in
pop
call
cld
adc
mov
in
mov
push
outsl
sub
sbbb
fidivs
aaa
ret
nop
leave
mov
aad
movsl
xchg
inc
xor
xor
adc
mov
sub
in
cmp
mov
xor
scas
repz
lret
leave
dec
sub
bound
jg
sarl
jae
lret
cmp
adc
push
adc
dec
mov
cmp
outsl
xor
mov
add
or
mov
cmp
push
add
test
pop
cmp
jp
das
sub
xor
xorb
adc
mov
add
pop
mov
scas
out
jns
imul
push
addr16
dec
std
cmp
clc
mov
mov
outsb
cmc
xor
mov
pop
inc
out
xor
mov
int3
test
xchg
push
aas
ret
fdivs
fldl
add
adc
mov
pusha
nop
push
orl
add
sub
adcb
mov
sbb
scas
fnstenv
sub
xlat
subb
xchg
dec
or
mov
push
xchg
out
xor
pop
mov
ss
cld
stos
cmovnp
push
mov
jae
lock
stos
add
mov
sahf
loopne
mov
out
push
pushf
orb
cmp
xchg
adc
ljmp
jp
ja
push
scas
in
repnz
add
jno
pop
mov
lock
fadd
aas
mov
imul
inc
xchg
rsm
push
insl
daa
iret
fiadds
dec
lcall
sub
faddl
cmpsb
dec
pop
mov
ret
push
popf
add
ja
xchg
test
repnz
int
not
insb
movsb
icebp
xchg
push
lds
inc
xor
jnp
negb
pop
je
push
fwait
or
sub
dec
xchg
xor
hlt
jmp
push
add
clc
mov
mov
lret
das
mov
in
dec
adc
cltd
cmpsl
loopne
adc
fistpll
jmp
pop
and
xchg
or
push
inc
int
push
pop
sbb
cmp
ret
aaa
sub
nop
cmp
rorl
scas
jne
mov
mov
mov
cwtl
fildll
sbb
mov
jns
or
dec
fsubr
push
movsl
clc
add
inc
pop
xchg
pop
dec
sbb
cmp
cmp
xchg
push
mov
repnz
out
xor
out
pushf
jmp
ss
or
pop
cmp
xchg
mov
pushl
scas
in
arpl
xor
cmp
mov
enter
popa
push
add
enter
pop
xchg
lret
jl
xrelease
xchg
mov
fildll
add
sub
jne
mov
sub
cwtl
mov
jo
inc
jmp
lret
and
mov
mov
cmpsb
adc
outsl
xlat
ffree
mov
add
mov
outsl
je,pn
pop
test
sbb
pop
xor
jb
inc
stos
push
pop
push
push
xchg
movb
rcll
lcall
iret
hlt
cmp
inc
insb
sarb
imul
mov
loop
mov
mov
xchg
js
xchg
mov
and
dec
cmp
dec
mov
xor
test
icebp
pushf
shrl
outsl
lea
stos
lret
sbb
fwait
mov
ret
mov
out
shll
xchg
mov
push
sub
sti
inc
daa
mov
pop
xor
mov
lock
sahf
in
xor
and
mov
std
pushf
mov
adc
jne
lods
xlat
jae
inc
sbb
lret
aad
pop
adcl
shll
mov
jno
push
inc
mov
scas
fs
mov
movsb
push
fs
xor
mov
mov
jns
or
insl
push
movsl
pop
pop
xor
or
or
or
jp
dec
das
push
add
movq
sub
pop
adc
jno
mov
jb
jnp
push
mov
mov
popa
xchg
adc
lock
mov
xchg
bound
cmp
sub
movsl
nop
out
sub
push
add
push
xchg
iret
fadd
jge
mov
js
jnp
and
adc
add
push
mov
shlb
xchg
jne
jg
xchg
jns
mov
in
jae
mov
mov
outsb
pusha
fsts
fisubl
jg
jb
out
mov
sbb
push
fsubs
dec
cmp
jp
fsubrl
push
cmpsb
inc
pushf
push
push
mov
jle
fcmovnu
push
insl
call
call
pop
xchg
lret
mull
cmp
pop
jns
cmp
call
sub
mov
adc
scas
ret
push
add
jae
pop
std
rcrl
shll
mov
insl
inc
push
jb
jb
loope
mov
fstl
sbb
xor
scas
or
mov
xchg
loopne
or
push
mov
push
fsub
mov
dec
mov
inc
bound
into
mov
pop
inc
shlb
xchg
pusha
jns
orl
mov
ljmp
mov
sub
jecxz
sarb
and
fwait
pop
sbb
pop
sub
inc
sarl
ret
or
inc
or
js
ds
cltd
or
addr16
fadds
sub
mov
jl
mov
cmpsb
push
fucomi
sbb
repz
ljmp
mov
sbb
mov
inc
mov
shll
inc
icebp
sbb
sub
iret
stc
adc
adc
add
movsb
repnz
das
mov
xor
aas
push
call
fistps
cmp
stc
imul
sbb
ljmp
jbe
or
and
sbb
test
push
bound
mov
sub
dec
inc
mov
mov
popf
adc
or
out
imul
jnp
jns
mov
sub
jp
xchg
loope
cmpsl
xorb
push
inc
jno
stos
insb
add
rcrb
gs
jl
fiadds
ds
inc
or
mov
xchg
adc
cmpb
lahf
push
cmp
decl
inc
clc
jne
cltd
sbb
in
xor
test
or
aam
test
or
shrb
jno
mov
adc
dec
jmp
imul
in
and
daa
aad
xchg
scas
push
dec
lock
sbb
loop
mov
imul
mov
imull
push
aam
mov
imul
jp
mov
mov
cmc
test
jae
sub
cld
andb
aam
popa
mov
stos
sbb
xchg
loope
mov
or
xchg
mov
mov
pop
aas
sbb
outsb
nop
jecxz
out
adcl
jae
mov
repz
mov
or
stos
popa
shll
call
pushf
mov
adc
and
mov
sbb
sub
push
bound
pushf
cmc
ret
outsl
cld
push
and
data16
jp
addr16
ret
gs
test
jp
cli
push
xchg
lods
push
and
inc
or
fs
call
or
inc
mov
ss
sub
jae
mov
xlat
andb
inc
icebp
jecxz
aam
xlat
mov
nop
popa
mov
mov
sbb
loop
outsl
testb
jg
pushf
fmuls
inc
xor
outsl
cmp
scas
fcoms
add
out
push
pop
add
mov
in
or
sub
mov
cld
les
cli
pop
cmp
repnz
cs
xchg
mov
adc
addr16
cmpsb
fdivrl
add
cmp
ds
popa
sub
or
cmp
or
jb
and
jnp
incb
sbb
hlt
pop
pop
fwait
imul
test
rcl
pop
loop
xor
ret
mov
jb
pop
xchg
movsb
xchg
lret
and
test
fldlg2
lfs
imulb
xchg
or
movsl
in
lahf
stos
dec
mov
stos
or
rclb
inc
test
cmp
or
adc
pop
loope
test
les
push
test
inc
loop
adc
int3
push
into
lahf
jo
cmp
mov
cltd
incb
imulb
popf
jge
dec
or
fdivrs
and
sbb
xchg
aam
lret
xchg
leave
aad
jb
xchg
inc
repz
mov
out
pop
inc
cltd
lods
insl
jbe
push
sarl
mov
cwtl
cmp
mov
andb
jns
jle
aas
icebp
and
daa
fldz
xlat
jecxz
cmp
pop
jg
stc
filds
dec
jmp
push
scas
dec
jecxz
bound
fildl
add
lcall
push
outsb
popf
push
and
movb
xchg
mov
shlb
push
sbb
jb
and
mov
mov
mov
clc
or
xchg
mov
sbb
xchg
test
mov
mov
fcomp
test
hlt
jne
pushf
leave
sub
mov
jbe
and
mov
ret
out
in
daa
jl
cmp
mov
inc
push
or
fsubs
das
push
inc
paddw
adc
lock
and
push
in
ljmp
mov
rorl
jns
inc
sahf
sbb
rcrl
out
aad
add
xchg
xor
xor
mov
shlb
mov
xor
push
leave
pop
test
xor
popa
inc
inc
sbb
iret
xor
cmc
adc
arpl
mov
mov
jmp
push
mov
mov
adc
push
clc
int
fcomp
and
sbb
add
jmp
test
dec
xchg
icebp
icebp
xor
xchg
sub
aad
inc
jmp
add
cmpsl
mov
mov
push
add
ret
cmovg
cwtl
and
testl
cmp
xchg
mov
shl
sub
or
sbb
inc
push
cmp
mov
cli
push
sub
daa
mov
cmp
movups
push
in
and
lds
sbb
jl
pop
std
push
call
int
fldl
scas
lock
push
mov
test
jno
cs
fisubrl
bnd
jmp
mov
pop
testl
xorb
or
add
shll
inc
xor
sub
sub
fwait
jbe
lret
je
fldl
lea
push
loopne
xchg
or
cmp
repz
cltd
xchg
dec
adc
xorl
push
aaa
mov
mov
sbb
push
adc
and
outsb
jae
pushf
cmp
cld
dec
xchg
pop
push
jbe
ds
icebp
xor
cmp
add
into
jge
pop
mov
clc
hlt
stos
xor
lds
insl
mov
or
sbb
outsl
xor
es
std
cmp
mov
jbe
sbb
jno
jmp
cld
bound
jge
shlb
mov
sbbl
jmp
sbb
inc
cmp
loope
loop
pusha
add
push
push
xorl
pusha
lret
mov
test
repz
pusha
jb
push
inc
and
loop
pop
or
jecxz
int
sub
bound
jge
and
fsubrl
mov
fidivrl
cmpsl
add
inc
jb
add
add
and
sbb
icebp
push
jge
mov
cmp
xchg
int3
xchg
jae
xor
xchg
inc
aas
push
shrb
or
in
xchg
push
fwait
test
sbb
sub
cltd
xchg
ds
ret
test
lock
imul
imul
lods
sub
mov
je
in
pushl
mov
fistpl
fiadds
mov
add
cmc
cmpsb
pusha
fsts
imul
lods
dec
fstps
sbb
jbe
hlt
hlt
sbb
std
mov
test
jp
cmc
dec
das
std
gs
cs
jb
or
fsubrs
movsb
dec
pop
xor
fcom
mov
and
mov
sub
imul
mov
lds
int3
push
iret
mov
xorb
adc
jns
cmpsb
lods
jne
jo
in
cwtl
fistl
jge
fisubrs
add
filds
fsubrl
scas
or
ja
inc
subl
seta
jo
sbb
rcl
mov
mov
dec
lcall
sub
gs
jne
cmp
fistpl
dec
jo
mov
pop
cmp
lahf
pop
mov
sbb
inc
insl
xor
push
push
mov
adc
in
aam
mov
sbb
mov
repz
and
xchg
test
adc
rcl
mov
sbb
in
pop
mov
loope
jo
imul
mov
std
sbb
jnp
sbb
imul
jno
sub
xchg
pushf
mov
popf
push
add
cmc
cmp
inc
fsub
adc
sbb
idiv
cmp
das
jae
add
daa
cmpsl
gs
xrelease
cltd
icebp
stc
gs
loopne
into
add
push
dec
cli
sbb
jns
sbbb
sbb
stos
es
xlat
popf
push
xchg
jl
xchg
push
dec
loope
jbe
inc
jbe
dec
mov
push
xlat
fstl
sub
mov
in
cmp
and
mov
jae
movsl
xor
or
xchg
jmp
or
pop
out
outsl
insb
pop
or
cld
rcll
pop
shll
movsb
sti
call
pusha
in
les
cwtl
dec
mov
sub
mov
cltd
sub
dec
lret
outsb
jae
dec
je
jg
jmp
add
cmp
pop
movsb
xor
loope
mov
cmc
push
std
add
cli
test
sbb
sbb
das
test
xor
js
rcrb
shlb
jo
sub
mov
insb
popa
clc
or
add
mov
popa
jecxz
mov
xor
adc
add
or
ja
xchg
add
ss
dec
mov
push
mov
cmpsb
sbb
mov
fimuls
jp
mov
ss
sbb
push
pop
jo
daa
leave
mov
out
inc
add
sub
fcoms
fsubl
mov
mov
adcl
aam
shll
push
mov
imul
movsb
sub
mov
inc
out
popa
fnstcw
add
add
mov
pop
push
pop
and
push
add
mov
insl
in
mov
inc
jmp
sbb
xor
mul
inc
sub
mov
loop
test
xchg
push
xchg
lock
iret
fidivl
outsl
dec
es
orl
sub
mov
outsl
mov
or
jmp
lahf
jno
pop
ret
lods
clc
jo
add
jle
adc
adc
imul
cwtl
sbb
sbb
pushf
std
sub
cmpl
shl
shll
or
nop
and
sbb
repz
scas
xor
adc
mov
adc
rcll
movsl
dec
scas
sbb
mov
je
movsb
sbb
push
fldenv
sbb
mov
mov
das
adc
pop
mov
jg
ficomps
mov
daa
xchg
push
mul
jecxz
fs
mov
lret
fs
std
push
aas
scas
fnsave
loop
lods
ret
sbb
and
ret
sbb
cmp
add
and
mov
shr
mov
jle
imul
inc
mov
pop
cmp
je
inc
loopne
idivl
add
cld
mov
sti
pcmpeqb
xchg
stos
sub
mov
hlt
lret
rorl
or
mov
cmpl
xchg
jp
ret
sub
in
mov
aas
cltd
out
xlat
fwait
mov
dec
inc
movsb
popf
mov
popa
data16
xor
mov
sbb
lods
gs
movl
shrl
das
xchg
push
jl
mov
xor
rorl
push
xchg
cmc
sbb
in
sbb
xchg
or
pop
push
mov
ret
lret
popf
add
sbb
sub
mov
movsb
int
mov
xchg
notb
mov
jo
movsl
or
mov
push
dec
mov
test
or
pop
jp
lret
repnz
add
aad
sub
out
add
jne
fsubrp
stos
sti
repnz
xchg
insb
xchg
pop
lea
and
fcompl
inc
dec
ret
mov
xor
cmc
int
dec
mov
mov
cmp
xor
sbb
pop
push
sbb
ret
inc
cmp
cmp
fmuls
lret
and
jmp
push
pusha
mov
mov
mov
pop
sbb
dec
sub
decb
je
call
fcmovbe
cmp
mov
push
shl
xchg
stos
xor
aas
insl
mov
stos
jp
dec
lret
jle
sbb
jle
dec
lret
stos
dec
sub
mov
cmpb
inc
mov
xchg
dec
insb
in
pop
repz
push
cltd
aad
call
sub
lock
out
sub
in
or
xor
and
test
push
daa
pop
inc
pop
jge
bound
pop
in
pushf
cmp
lods
xor
pop
fldt
jg
push
daa
test
insb
push
lcall
call
cmc
out
push
or
daa
popl
ja
sbb
cltd
loope
icebp
aad
dec
mov
sub
out
lea
push
xchg
xlat
mov
inc
gs
rep
idiv
mov
jg
shll
test
mov
add
and
out
mov
xchg
or
es
insl
cmp
mov
push
push
outsl
aam
test
bound
inc
xchg
gs
jb
mov
xlat
pop
xchg
and
mov
int
aas
fldenv
xchg
test
xor
bound
daa
cmpsb
push
mov
insb
pusha
popf
fadd
push
jns
wbinvd
pushf
sub
or
xor
cmpsl
inc
sbb
inc
cmp
adc
mov
jmp
in
jbe
repz
shlb
push
dec
lea
xchg
ficoms
sub
xchg
dec
aas
adc
xorl
jecxz
dec
fnstcw
ljmp
mov
cli
call
movsl
and
in
cmp
scas
xchg
call
in
inc
mov
sub
in
sub
dec
arpl
repnz
dec
sub
mov
cs
repnz
add
or
jae
mov
jl
cwtl
cmp
xor
mov
dec
call
movsb
and
mov
mov
addr16
sti
data16
pop
fnstcw
adc
sub
leave
mov
pop
clc
js
repz
test
mov
push
mov
lods
mov
lcall
pop
sub
mov
xchg
lea
mov
dec
lret
add
add
mov
adc
ljmp
cmp
outsb
leave
stos
je
or
loop
fsubs
int3
mov
xor
mov
dec
cmpsb
lds
mov
out
daa
or
test
and
and
mov
leave
outsb
push
lods
cmpsb
addr16
outsb
jnp
sbb
loop
pop
mov
fs
or
adc
ljmp
add
xchg
je
sbb
mov
bound
xor
mov
or
sub
imul
lea
cmpb
xor
cmp
lret
cmc
xchg
out
jnp
cwtl
and
ljmpw
jae
call
adc
mov
inc
int3
dec
mov
ja
lahf
imul
push
jb
jl
xchg
jae
add
pop
lahf
loop
ds
divb
and
arpl
addr16
mov
dec
pop
mov
sahf
dec
or
sub
and
sub
pop
or
out
popa
push
ret
inc
jmp
and
push
mov
test
cmc
mov
aaa
and
push
push
lock
mov
shll
sub
int3
ja
push
test
enter
stos
sahf
push
push
sub
je
jl
xor
pop
jb
orl
imul
cmp
xor
add
mov
mov
mov
sarl
testl
adc
jne
fistl
jns
aaa
mov
mov
pusha
sub
pop
call
jns
sti
addr16
mov
cmpsl
mov
mov
rorb
xchg
mov
pop
add
out
or
mov
pop
sbb
and
or
loope
xchg
pushf
insb
movsl
add
push
inc
xor
jle
rcrl
fmuls
mov
movsb
repz
and
inc
sbb
push
sarb
cmp
cmpsb
sub
repz
in
or
js
sbb
mov
mov
pop
dec
push
test
adc
xor
pop
adc
std
stos
loope
sar
insb
xlat
jg
and
out
cwtl
add
cld
dec
frstor
imul
out
loope
cmp
jb
sti
fists
jns
fdivrs
xchg
sbb
push
stc
test
mov
les
jno
ret
bound
dec
cmp
clc
shrl
jmp
ljmp
adc
orl
inc
xchg
int3
in
inc
jp
in
insl
sarl
push
scas
push
gs
dec
adc
jmp
ss
out
mov
jns
in
lcall
push
stc
lret
cmp
out
ret
mov
adc
jp
mov
dec
cli
jg
dec
lods
xor
rol
jbe
dec
filds
icebp
and
loop
inc
cs
fisttps
fisttpl
lock
dec
lret
fcoml
cmc
or
push
cmc
stos
jge
fs
sarb
push
test
fists
fnsetpm(287
pop
jmp
rolb
dec
jle
xor
push
test
or
test
repz
jp
mov
pop
and
movsl
pop
sets
pop
jl
stos
iret
inc
mov
ds
out
mov
scas
cmp
loope
adc
xchg
add
outsb
out
loop
xacquire
ficompl
clc
out
sbb
xchg
imul
loopne
mov
mov
icebp
cwtl
mov
adc
shll
lods
push
mov
ss
roll
aas
mov
and
daa
out
add
cmpsl
arpl
sbb
and
aad
testb
mov
mov
sbb
test
ljmp
iret
push
dec
loopne
out
fiadds
mov
subb
loop
xchg
push
mov
cmpl
jnp
mov
in
jb
ret
and
add
mov
enter
or
pop
je
subl
or
jne
or
jo
and
xchg
stos
mov
add
adc
mov
test
xchg
imul
inc
add
lcall
jne
dec
jmp
data16
jnp
lahf
add
int3
inc
pop
sub
ficoml
inc
pop
push
data16
das
mov
cmp
push
pop
mov
sbb
loop
mov
mov
pop
inc
das
adc
add
xchg
int3
daa
mov
fnstenv
int
dec
xchg
cwtl
mov
and
cmpsl
loope
stos
sub
imul
inc
inc
ret
mov
dec
stos
jmp
mov
adc
outsb
loope
fwait
loopne
push
clc
pop
dec
mov
ds
icebp
xchg
push
mov
and
aaa
add
inc
mov
inc
popf
lock
sbb
jge
push
push
into
or
pop
cld
fsubrl
int
sub
stos
loopne
inc
pop
in
clc
push
int
or
dec
fsubrs
and
daa
pop
fistpl
ret
mov
and
insb
enter
ja
dec
sbb
lret
jno
adc
jle
cld
outsb
or
stos
sbb
or
fnstenv
stos
or
aam
mov
pop
push
sbb
icebp
add
dec
mov
cs
and
addr16
mov
or
into
push
fdivr
pop
sarl
nop
adc
push
jge
adc
out
inc
and
in
into
clc
dec
gs
mov
push
shlb
call
fwait
xor
and
data16
cltd
jae
lods
mov
mov
fs
and
mov
cmc
sub
repz
maxps
repnz
add
push
add
orl
andb
cmp
popf
add
pop
dec
add
stos
adc
jne
adc
cwtl
xchg
lea
jbe,pn
dec
mov
fs
movsl
sbb
lea
pop
aas
sub
lret
enter
orl
cli
sub
adc
and
es
and
test
or
fstps
pusha
pop
add
sbbb
orb
mov
mov
cmp
ljmp
sub
jmp
lret
push
xchg
rdmsr
xor
xlat
cmp
and
dec
jp
imul
jo
or
hlt
shrb
lahf
sbb
pop
sub
adc
repnz
cs
push
ret
jecxz
stos
push
fisubrl
cmpsb
xchg
in
cmpl
sbb
push
test
repz
cmp
xor
cmp
push
arpl
sbbb
aas
es
mull
push
popf
into
test
and
push
fwait
mov
push
cmp
cmpsb
jmp
loop
les
test
iret
int3
dec
mov
mov
sub
xchg
rolb
aam
sub
mov
and
in
xchg
push
or
lea
ret
xchg
mov
aam
and
stc
dec
dec
xchg
iret
mov
enter
cmpsl
loope
sub
stc
xor
data16
xchg
clc
adc
inc
adc
cltd
repnz
jg
jge
jmp
sahf
test
mov
jno
incl
imul
jge
or
push
mov
adc
and
jecxz
outsb
nop
inc
std
or
arpl
add
popa
push
arpl
pop
add
pushf
call
sbb
loopne
and
ja
mov
imul
test
pop
mov
insl
mov
push
mov
bnd
aad
jge
sarb
mov
mov
outsl
lds
shrb
lea
lahf
bound
es
mov
sarb
push
cmpsl
pop
outsb
sahf
fdivrl
sub
out
ss
pminub
cmc
or
clc
popa
mov
mov
ljmp
cwtl
sbb
and
xchg
ljmp
rorb
cmp
lea
inc
sub
leave
mov
sets
jg
loope
cmp
inc
inc
ja
repnz
mov
outsb
imul
aaa
sub
mov
pushf
orb
pop
jae
mov
jl
lret
out
repz
out
add
mov
fs
jns
ret
pop
std
ret
fisttps
cmp
sti
outsb
scas
push
jp
test
push
mov
inc
dec
xchg
inc
shl
es
push
push
lcall
lds
adc
pop
push
push
aas
imul
stos
xchg
pop
adc
adc
cmp
push
push
jg
mov
int
jp
sbb
sti
fcomp
pop
cmp
mov
lock
popf
or
mov
jecxz
push
test
xor
test
xchg
pushf
mov
mov
jg
imul
in
jae
xor
mov
add
xor
xchg
pushl
flds
out
mov
arpl
test
dec
ds
sub
xor
in
aas
cltd
jo
fsts
push
xorb
adcb
push
xor
fs
pop
mov
sti
insl
sbb
push
popa
in
or
je
scas
xchg
or
jbe
test
popf
jae
data16
bnd
fildl
rorl
lret
outsb
cmc
adc
nop
jg
lea
pop
sub
cmpsl
inc
pop
lock
jbe
pop
test
xchg
lret
xor
xchg
sbb
lret
jo
cmpsb
and
callw
add
sbb
add
dec
xchg
mov
lahf
inc
aad
in
cs
mov
mov
sbb
sub
cwtl
xchg
inc
push
sti
and
pop
arpl
jle
sbb
dec
mov
push
xor
cmpsl
ret
stc
iret
push
enter
pop
aad
pushf
pop
pop
jp
pusha
aad
jp
mov
lods
xchg
xchg
or
xor
pop
mov
sub
pop
dec
jno
sbb
addl
cmp
mov
inc
jo
sahf
xor
outsl
cli
loop
mov
lods
dec
jne
jl
int3
fidivs
jmp
repz
popa
cmp
test
test
popa
rorl
hlt
jge
orb
out
xor
adc
in
cmp
inc
ds
and
or
push
lods
mov
sbb
mov
pushl
xor
mov
enter
in
out
dec
outsl
mov
sub
sub
mulb
rorb
fcomp
test
pop
lret
mov
imull
sti
jnp
jl
test
je
push
xor
das
dec
fistpll
out
add
sub
pusha
jg
and
iret
outsb
fisubs
in
xor
lock
imul
mov
mov
js
ss
cmc
mov
xor
lods
jno
test
das
dec
jp
mov
mov
push
fwait
bound
or
inc
sahf
jae
in
pop
cmpsb
aas
loop
pop
sbb
mov
adc
addr16
and
inc
add
jbe
inc
sub
xchg
call
fidivl
test
xor
xor
dec
push
mov
sub
sub
inc
sub
dec
test
mov
ss
bound
sbb
adc
add
cs
mov
mov
xor
push
leave
shl
lret
int3
fmuls
nop
lcall
andb
xchg
xchg
mov
xor
jbe
jle
mov
dec
in
mov
cmp
sbb
mov
leave
push
or
adc
lret
and
adcb
pop
adc
jge
inc
pop
push
xchg
add
fists
in
push
cmpsl
adc
mov
sahf
imul
push
iret
mov
in
jbe
shl
jnp
push
sar
sti
movsb
cmp
mov
mov
cmc
test
call
inc
iret
push
or
adc
jb
adc
ss
sahf
dec
cmpsl
push
adc
push
cmp
pop
std
sbbl
in
scas
cmp
mov
pop
lods
cmpsb
ja
mov
xor
push
cld
push
adc
jne
cmp
or
lret
adc
sub
divb
xor
add
lods
ljmp
rorl
xor
addr16
nop
dec
sti
adc
push
mov
into
das
out
jne
es
xor
loopne
or
push
adc
push
sub
inc
bound
loop
jne
negl
cmpsl
or
xor
rorb
cmp
jno
movsl
cwtl
sti
insl
ret
test
aad
ja
das
nop
xchg
fnstsw
faddl
test
cwtl
mov
mov
mov
pop
movsb
loope
out
clc
or
popf
inc
xchg
mov
adc
sbb
pop
sbb
cmpb
mov
add
cltd
enter
add
lahf
mov
orb
mov
mov
xchg
test
loopne
add
sbb
or
mov
inc
out
in
add
lods
dec
xchg
rcrl
dec
pop
clc
adc
mov
fsubrl
ret
mov
add
pop
cmp
rol
nop
xchg
sbb
mov
push
pop
jg
enter
xchg
shrb
xchg
mov
fildl
pop
mov
bound
jb
mov
out
mov
jecxz
insl
xor
sub
push
cmp
add
jmp
pop
cmc
mov
lods
cld
pop
mov
ss
mov
test
add
cld
mov
jge
cmc
test
scas
mov
ja
das
fldt
cmp
orl
dec
stc
or
jecxz
js
pop
mov
mov
xchg
jmp
mov
fidivrs
mov
adc
pop
adc
ret
pop
cmp
loop
xchg
scas
enter
mov
mov
xchg
fnstsw
repz
cmp
movb
push
sub
fwait
out
ret
jmp
dec
cmp
sbb
test
loope
jl
loope
lea
roll
test
cmpsb
add
jl
cmc
arpl
les
mov
xchg
mov
dec
and
pop
mov
bsr
ja
push
int
das
push
es
repz
jmp
mov
add
test
add
mov
aas
sbb
pop
jecxz
iret
mov
mov
sbb
ja
push
jne
xor
mov
sbb
inc
pop
stc
mov
xor
iret
dec
shrl
imul
subb
enter
sub
in
pusha
shl
mov
inc
jns
ss
cli
cmp
push
mov
test
fnstenv
test
daa
fstpt
mov
popa
idiv
test
mov
hlt
enter
mov
push
out
add
arpl
cmpb
xor
scas
cmc
ret
sub
scas
or
xchg
sub
data16
fdiv
mov
xchg
mov
or
hlt
mov
mov
inc
cmp
mov
lret
in
xor
fs
push
insl
imul
lods
inc
iret
clc
dec
sub
sub
decb
sahf
cmc
out
mov
mov
scas
sbb
jne
mov
hlt
popf
sub
insl
fdivrl
cmc
push
aam
xchg
push
mov
pop
jno
fldt
imulb
cld
cmp
sub
jae
mul
mov
jae
sarl
dec
pop
add
fcmovnu
das
sub
adc
push
and
sub
push
adc
xrelease
sbb
adc
mov
mov
sub
lea
bound
sub
dec
mov
cld
insl
lods
out
fstpl
mov
fdivl
mov
mov
test
add
gs
lcall
pop
lahf
jno
sti
xchg
push
lds
fcoml
add
mov
adcb
popa
mov
sbb
jo
repz
fwait
sbb
dec
movsb
arpl
mov
and
or
mov
stos
enter
pop
mov
mov
outsl
stc
sub
and
je
push
xchg
push
mov
inc
pop
cmc
aaa
lea
popa
inc
icebp
popf
or
xchg
shl
xor
jg
mov
movmskps
push
loope
mov
or
in
aad
mov
pop
add
add
aam
or
repz
jge
sbb
jecxz
cmp
pop
mov
lea
fldt
jmp
lods
pusha
dec
add
pop
inc
cld
and
push
jno
sbb
imul
fs
mov
inc
subb
outsb
or
cmp
jo
in
repz
push
fiaddl
mov
cmpsb
out
int
aam
pop
mov
aaa
hlt
mov
lock
scas
push
jle
xchg
ss
and
or
push
inc
dec
inc
lahf
fisubrl
adc
mov
mov
scas
cmp
jo
adc
mov
lcall
mov
sub
cmp
sti
mov
iret
scas
sbb
cmp
and
pop
faddl
pop
negl
pusha
fs
dec
mov
fwait
pop
scas
mov
pop
test
into
xor
fsubrs
jmp
jmp
jl
jmp
lods
and
mov
add
mov
jno
add
xchg
scas
jle
cwtl
sarl
push
clc
mov
lahf
jb
inc
and
mov
movsl
in
pop
scas
cmp
repz
sbb
mov
xchg
sub
aas
and
push
mov
lahf
insb
loopne
aas
xchg
mov
in
int3
and
imul
or
test
mov
cmpsb
cmp
push
loope
xor
out
lahf
sub
push
outsl
push
pop
aas
int
notl
repz
out
std
jecxz
sbb
sbb
pop
fwait
sbb
rorl
popa
xchg
jae
adc
pusha
dec
les
into
xor
sub
push
arpl
adc
mov
dec
xchg
jmp
in
aaa
loope
pop
cmp
dec
cmpsl
or
sub
data16
jl
lret
mov
jnp
ret
cmc
sti
add
ljmp
into
fyl2xp1
mov
popf
imul
or
lods
jge
gs
lods
xchg
and
mov
cmc
out
mull
test
sarl
mov
enter
stos
xor
cmc
out
insb
xchg
mov
repnz
jo
cmpsb
xchg
xchg
sub
lcall
or
jno
pop
mov
mov
lods
sbb
mov
cmpb
jmp
ret
gs
and
jae
pop
jge
jmp
pop
and
inc
cmc
fs
mov
lret
fstpl
jg
mov
mov
inc
fmuls
add
xor
and
std
sbb
repnz
andl
add
mov
ljmp
sbb
pop
nop
in
pop
xor
jmp
lds
stos
mov
popf
loopne
mov
shlb
sbb
sbb
in
dec
or
mov
add
insb
inc
lahf
dec
xor
mulps
ljmp
add
xor
insb
fsubrs
out
push
arpl
and
dec
and
fcomps
or
mov
or
or
cmp
mov
push
mov
scas
fldt
add
and
fisttpll
outsl
hlt
cmp
adc
dec
pop
push
das
xor
and
push
int3
pop
xor
addb
test
push
push
push
pop
fistps
mov
pop
js
pop
or
scas
adc
sbb
inc
xchg
ss
test
imul
shll
mov
pop
pusha
scas
xor
inc
ret
jg
lcall
popf
mov
adc
dec
lcall
add
lret
xchg
in
adcl
popl
mov
sbb
xchg
out
add
jnp
out
or
mov
jb
out
pusha
pushf
dec
sbb
test
adc
xor
cld
and
jge
mov
mov
sub
or
ret
rcll
cmc
mov
imul
in
sbb
cmpsl
pop
lret
cld
addr16
xchg
loop,pn
inc
movsl
pop
cmpsb
cmc
pop
dec
mov
mov
leave
rcll
out
and
lea
gs
lcall
ds
xor
sti
and
imul
out
jae
jbe
xor
xor
mov
xor
xchg
mov
mov
mov
loop
mov
fsubrs
or
rcrl
cmp
out
xor
mov
outsl
push
pop
push
or
push
lahf
sbb
les
popa
add
mov
sub
bound
test
imul
mov
jnp
insb
cld
addb
jo
push
mov
lods
call
mov
into
mov
mov
sarl
sub
test
xchg
cmpsl
pop
ja
fbld
int3
lods
mov
xchg
adc
je
sub
jae
in
pop
movb
stc
jl
mov
cmp
ljmp
repnz
arpl
aad
adc
push
mov
sti
xor
cmp
dec
je
push
pop
sub
test
shll
dec
adc
jmp
sahf
rclb
mov
mov
ret
push
pop
lock
pop
out
xchg
mov
xchg
negl
in
lret
ret
and
jae
insl
add
ljmp
mov
sub
cmp
in
mov
pop
enter
fmull
jl
movsb
mov
xor
aaa
cmp
dec
mov
and
push
lcall
inc
xchg
or
popa
push
fnstcw
mov
jg
cmpsl
cmp
xor
ljmp
js
jno
pop
jle
das
fcoms
add
cmp
in
add
add
add
cld
cmp
loope
add
pop
cli
add
addr16
mov
mov
nop
insb
mov
inc
push
xlat
xlat
je
fisttpl
pop
or
iret
mov
popl
scas
mov
mov
andb
ret
hlt
pop
dec
ja
cltd
shrb
jl
cmpsb
gs
pop
mov
mov
dec
push
mov
dec
push
not
xchg
or
xchg
js
aad
cmc
or
sub
push
ss
andb
aas
fnstsw
add
dec
popa
mov
pop
cmc
in
rclb
sub
in
xor
xor
test
outsl
out
sbb
pop
hlt
movq
and
jb
mov
pop
out
inc
mov
andb
pop
dec
movsl
jb
iret
arpl
and
jns
dec
sbb
cld
movsl
into
push
mov
xchg
and
push
ja
mov
out
je
loop
leave
mov
rclb
in
cmpsl
aas
push
cmp
loopne
test
ret
lds
cltd
out
aas
scas
and
call
inc
jae
adc
adc
xlat
adc
mov
xor
leave
mov
inc
sub
pop
jne
loop
enter
add
mov
xchg
jmp
add
cmp
mov
loope
lahf
push
sub
lods
pop
sbbl
and
xchg
pop
sahf
popf
mov
aam
cmp
dec
repnz
aaa
jl
outsl
mov
loop
out
mov
mov
fsubrp
daa
je
or
cld
iret
xchg
adc
add
jmp
cbtw
out
pop
add
popf
pushw
or
hlt
xchg
adc
inc
sti
aam
mov
sbb
sub
mov
pop
ja
fyl2x
aas
dec
fmull
and
mov
push
mov
insl
out
pusha
aad
jecxz
out
lods
adc
sbb
test
mov
mov
test
incl
outsl
or
pop
aam
ret
mov
jne
xchg
push
data16
nop
cmpsl
rol
insb
lcall
inc
push
arpl
and
cltd
jno
inc
int
ljmp
je
in
in
cmp
adc
cmpsl
fidivs
inc
mov
cmp
and
ret
xlat
jecxz
test
cmp
push
lock
ljmp
add
inc
movsb
sahf
jl
add
and
mov
sub
notl
loop
xor
fwait
out
in
mov
imul
cs
shrl
mov
mov
mov
popl
mov
xchg
fisttps
sarl
or
and
clc
dec
dec
pop
call
sbb
loopne
in
push
inc
sarb
pop
cld
sbb
add
mov
insl
inc
in
pushf
inc
add
stos
inc
adc
push
outsb
xor
rcll
es
adc
pop
incl
xor
dec
adc
scas
or
or
test
adcb
cmc
cmpsl
das
dec
loopne
stc
xchg
idivl
xor
leave
repz
mov
or
inc
imul
pop
xchg
push
mov
rcrl
cmp
lret
test
scas
mov
sahf
cmp
aad
push
inc
push
in
push
push
pop
jne
cmp
dec
aad
xor
test
jnp
scas
cmp
inc
jecxz
sub
jl
jge
xor
sub
shlb
jmp
mov
pop
fs
lret
mov
mov
cld
test
cmp
xchg
ret
pop
push
ficoms
push
rcrl
add
int
cmpsb
cmpsb
leave
ss
adc
mov
inc
shr
mov
jp
xor
adc
hlt
out
add
sbb
std
mov
pop
pop
loopne
push
xchg
lods
hlt
dec
call
cli
adc
out
pusha
mov
loopne
pop
je
bound
leave
loop
pop
clc
les
fmull
ss
in
mov
jge
insb
hlt
add
int
sbb
sub
dec
clc
outsb
jne
mov
and
ficompl
es
xchg
loopne
test
ds
popa
mov
les
into
pop
xorb
rcrb
in
dec
mov
hlt
and
lcall
add
jae
sahf
insl
mov
mov
inc
xor
inc
push
and
xor
jae
jno
mov
or
adc
dec
inc
add
xor
dec
shll
sub
adc
cmp
mov
out
rolb
mov
mov
cmpsl
ret
js
roll
xor
push
push
sbb
test
movsb
xor
add
popa
pop
cmpsb
imul
fistps
imul
out
es
mov
outsl
movsb
cmp
js
iret
shll
outsl
fcompl
arpl
pop
ret
les
test
fwait
dec
out
jl
xchg
rcrl
sahf
xor
sub
mov
inc
lock
mov
ljmp
fbstp
or
dec
mov
dec
adc
iret
popa
out
push
or
insl
dec
pop
fcomip
ljmp
out
sbb
mov
xchg
ret
mov
jnp
aaa
sub
daa
and
cmp
inc
jl
inc
pop
or
into
dec
mov
repz
xchg
jl
ja
mov
aam
xchg
dec
dec
cmp
xchg
mov
pop
mov
das
sbb
mov
mov
adc
ret
test
aad
add
daa
es
addl
xor
mov
dec
sbb
in
outsl
dec
dec
mov
sub
data16
inc
clc
stos
pop
cmp
jg
sub
lretw
sti
loop
xchg
pop
ret
mov
lea
mov
sbb
mov
pop
psrad
enter
adc
adc
hlt
xchg
es
sarb
add
aas
pop
jecxz
lock
and
sbb
inc
xor
fnstsw
nop
push
fsubr
pusha
cmp
jbe
out
jp
xchg
cmp
repz
sub
jp
pop
outsb
xor
mov
sub
push
add
cmpsl
push
pop
xorl
movsl
ja
lds
lock
test
jecxz
in
scas
cltd
scas
mov
xchg
mov
ljmp
and
pop
and
push
or
jbe
adc
shlb
xor
rcrl
jmp
ret
aad
scas
insb
clc
jbe
int
or
mov
mov
jp
sbbl
or
jbe
ss
mov
adc
mov
push
cmp
pushf
ret
add
scas
mov
mov
mov
jno
adc
popl
outsb
adc
jae
mov
xchg
xor
push
test
pop
fcomps
int
pop
add
cli
mov
dec
add
loop
cmpl
xor
addb
inc
mov
xor
loopne
aas
sbbl
je
dec
cmp
insl
cmc
aas
jnp
popf
sti
push
add
testl
add
adc
xor
mov
inc
mov
mov
cmp
int3
out
arpl
mov
das
cltd
in
hlt
fdivrl
test
icebp
adc
lea
int
mov
mov
lods
and
lea
leave
out
js
mov
pusha
daa
push
imul
cli
mov
or
sahf
sbb
in
cli
mov
and
jb
xchg
push
bound
pusha
xor
mov
movsl
pushf
sbb
shl
xchg
nop
insl
lret
notb
out
lcall
hlt
xor
mov
loopne
jg
dec
mov
push
call
decb
cli
movsl
jne
fcmovne
jl
xchg
aad
jl
fs
testb
outsl
iret
xchg
or
mov
adc
adc
sahf
in
std
inc
popf
sarb
inc
es
out
pop
sbb
movsl
push
and
loope
mov
push
shll
sub
mov
mov
stc
out
mov
stc
cmpsl
and
push
cmc
aam
pop
popa
xchg
std
ret
sbb
jmp
jmp
into
and
addl
aaa
scas
sbb
rcrb
or
xor
add
lock
scas
enter
ret
insl
aas
ret
or
popf
ret
icebp
jge
mov
or
push
fsubrs
cmp
mov
mov
pop
in
or
xor
lret
popf
mov
mov
push
and
clc
bound
cmp
in
bound
sbb
jg
scas
notb
pop
xchg
notl
jmp
stc
mov
bound
cmp
cmp
iret
mov
mov
in
adc
insb
cmp
es
enter
dec
dec
call
test
sub
repz
jns
adcl
es
dec
test
or
fiadds
addb
gs
lods
shrl
setae
int
xchg
sbb
or
pop
lock
idiv
pop
dec
das
je
jbe
add
lods
sub
pop
mov
or
adc
lods
or
inc
mov
mov
add
je
push
and
jecxz
sub
cmp
dec
lock
test
mov
jbe
sub
aad
mov
sub
ret
jg
dec
mov
icebp
mov
mov
lods
mov
push
cmp
outsb
cmpsb
test
dec
push
ret
sub
cli
pop
sub
sub
jecxz
pop
jne
mov
inc
into
push
bound
pop
inc
movsl
mov
insl
insb
sbb
adc
outsb
cld
pusha
fdivp
popa
shl
call
fists
xchg
or
xchg
dec
adc
andl
pop
and
aad
scas
repz
sbbl
mov
test
les
xlat
fstpl
mov
jecxz
mov
mov
xchg
rclb
inc
jle
stos
lcall
push
ss
cmp
mov
xor
test
mov
jge
pushf
aam
popf
cmp
out
lods
dec
out
xor
mov
aas
imulb
adc
push
dec
mov
and
mov
jnp
cmovbe
fs
mov
cmp
icebp
dec
call
mov
xor
test
sar
mov
out
xor
sub
or
dec
cli
fwait
jae
mov
xchg
mov
in
inc
shll
lret
out
data16
inc
js
or
fimuls
cltd
lret
xor
push
and
cmp
cltd
sbb
das
fcmovnu
jp
inc
jmp
sub
sbb
push
push
push
lea
daa
pushf
pusha
inc
loop
or
mov
xchg
scas
in
xabort
push
faddl
sub
xlat
fsubs
mov
lcall
sahf
pop
lea
inc
mov
adc
cmp
cmp
pop
lods
pop
ret
or
pop
push
xchg
je
dec
shlb
or
mov
dec
fstpt
jbe
mov
shll
mov
ljmp
loopne
jbe
cwtl
repnz
les
lahf
pop
mov
cmp
mov
lods
and
xorl
ljmp
dec
pushf
dec
xor
movsl
xchg
outsl
mov
ds
stos
jae
add
xor
mov
scas
pop
es
mov
or
pop
pusha
mov
pop
mov
inc
jecxz
sbb
fs
add
mov
add
push
cmpsl
fidivrs
lret
or
inc
stos
sbb
fwait
xor
cld
cmp
xchg
cld
jo
sbb
js
mov
in
adc
iret
jp
daa
mov
push
adc
dec
out
fstl
mov
cmpsb
sub
xchg
mov
mov
movsb
adc
mov
mov
mov
fsubl
rcr
repz
pop
adcl
sub
mov
test
loop
inc
bswap
mov
rcll
mov
cli
cltd
jnp
popf
dec
mov
aam
mov
in
sti
mov
mov
fsubr
ret
mov
lret
out
or
push
and
int3
push
enter
addr16
jbe
gs
test
adc
js
lret
inc
and
push
adc
stos
test
pushf
mov
cmc
in
lods
and
int3
mov
push
sub
mov
adc
mov
push
into
in
dec
sbb
jne
in
repz
push
push
jo
arpl
pusha
outsl
mov
movups
adc
ds
inc
movsl
in
mov
pop
lds
and
test
daa
fldcw
sub
sbb
test
dec
jne
loopne
dec
push
rcll
inc
jmp
adc
stos
ret
into
out
or
cmp
pop
jae
leave
and
and
xor
je
sahf
jecxz
jbe
mov
fwait
cmp
dec
std
lock
xor
push
pop
pop
xchg
pushf
pop
dec
loopne
cld
xor
dec
sub
movsl
fdivrp
jp
cwtl
adcb
mov
mov
jg
aaa
sub
jbe
sub
inc
and
ret
pop
pop
adc
mov
repnz
outsl
enter
mov
cmpl
iret
insl
pop
fldt
fnsave
int
jge
lcall
cmpsl
subl
xchg
dec
dec
stos
hlt
lods
outsl
or
jbe
mov
mov
out
lods
mov
add
pop
pop
and
fldl
adc
out
push
lret
xor
lea
xor
jp
add
add
xor
and
mov
lock
aas
jg
dec
inc
dec
rolw
insl
mov
lcall
cmp
mov
aam
mov
jp
and
lahf
pop
lds
out
rorb
pop
pop
stos
mov
add
pop
mov
jle
test
loop
in
xchg
fistpl
cld
fists
iret
adc
and
mov
push
loope
sub
mov
push
jae
push
out
adc
imul
push
cmpsl
xor
and
call
jno
ss
jb
es
sti
test
xor
scas
test
mov
pop
out
add
and
push
add
loopne
push
sahf
leave
jmp
mov
out
nop
push
cmpsl
inc
pop
sbb
add
xchg
in
push
or
shrl
or
adc
daa
push
xor
push
cmp
shr
sub
scas
adc
xlat
adc
addr16
cmpsb
or
subl
lods
xchg
cmp
pop
pop
adc
aam
xor
add
xor
das
movsb
std
pop
xchg
adc
das
lret
add
adc
mov
out
push
into
sub
push
loopne
shrb
mov
popf
fcoml
in
dec
dec
mov
sub
nop
insb
inc
roll
cmc
enter
test
int3
sarl
push
mov
js
xlat
test
and
adc
push
xchg
mov
scas
fisttps
mov
loop
mov
jmp
inc
fadd
xchg
mov
negb
push
xorl
aas
daa
add
inc
rorb
pop
jnp
ret
add
and
adc
dec
or
scas
push
xor
jmp
inc
mov
ret
loopne
and
push
mov
sbbl
test
mov
jno
call
and
in
test
push
pop
push
xchg
mov
sub
jb
lahf
mov
and
sub
scas
pop
xchg
or
mov
adc
pop
mov
insl
frstor
push
push
cmpsb
arpl
push
cmp
test
jb
pop
mov
pop
fdivrl
inc
subl
mov
xchg
lret
jecxz
mov
leave
adc
mov
ret
mov
pop
jnp
inc
mov
stos
pushf
jnp
mov
mov
sbb
lea
icebp
push
loopne
xchg
outsl
ljmp
lock
out
jno,pn
fbstp
or
insl
jp
rcrb
sti
pop
jp
or
pop
or
rclb
jle
mov
mov
cmp
movsl
mov
nop
jo
pushf
sbb
loope
lods
scas
mov
clc
mov
roll
adc
sti
add
daa
into
mov
or
push
fiadds
loope
out
adc
mov
mov
cs
xor
sbb
movb
mov
cs
xchg
add
pop
adcl
pop
jecxz
xchg
ljmp
and
mov
mov
cmp
test
jp
in
sub
int3
sbb
andb
pop
xor
push
aad
stc
aad
shrb
mov
nop
stc
cmp
add
movsl
pusha
jmp
aam
cmpsb
aad
and
jo
shlb
pop
pop
dec
pusha
es
jmp
xchg
fimull
pop
or
shrl
fsts
xchg
rolb
fcmovu
pop
fistpll
and
xchg
or
ret
dec
inc
push
mov
xor
xlat
adc
push
and
ja
repnz
dec
sbb
out
push
inc
mov
movb
and
pop
test
xchg
sbb
sub
outsl
add
stos
idiv
cltd
jle
or
cld
and
int
jns
add
addr16
add
mov
mov
jbe
adc
adc
fldt
test
jp
jle
loop
and
pop
inc
stc
mov
or
sbb
imul
or
lcall
jmp
jge
aas
inc
std
movsl
sbb
js
sbb
aam
or
aas
daa
pop
outsb
push
mov
push
fdecstp
jno
adc
jmp
lret
test
mov
daa
push
lods
xor
push
jb
outsl
mov
cmpsb
lcall
mov
push
and
jg
pop
cld
out
xor
xor
repz
sub
mov
out
or
int3
test
lahf
hlt
lahf
xchg
push
pop
sbb
dec
sbb
mov
fucom
jle,pn
ss
orl
orl
lret
xchg
lahf
testl
fstpl
jge
jno
cmp
pushf
or
sub
test
jnp
insb
clc
adc
xchg
ret
pop
dec
out
cmp
icebp
in
stos
popf
iret
push
leave
lds
push
mov
sbb
mov
lahf
mov
loope
je
ja
and
out
mov
mov
add
sbb
mov
add
push
adc
sub
and
sbb
aaa
add
jno
dec
adcb
cmpsb
push
mov
pop
pop
aam
call
and
bound
sbb
dec
push
bnd
fs
dec
jmp
sbb
out
aaa
cld
ret
lock
pop
xchg
xor
xchg
jle
dec
jmp
lret
and
push
and
xor
sahf
xchg
fcoms
aaa
sub
pop
je
scas
pop
in
mov
cmp
cmp
ds
xchg
inc
jmp
jl
mov
clc
jne
fsts
xchg
div
jns
cwtl
js
mov
aad
mov
push
cmp
dec
mov
cmc
out
pushf
jmp
icebp
popf
clc
dec
out
inc
mov
out
jbe
cmpsb
add
and
ljmp
or
and
imul
cmp
inc
mov
push
cmp
mov
loope
movq
sahf
cmp
dec
frstor
mov
pop
iret
fimull
inc
lods
or
xor
int
cltd
mov
jle
jmp
and
loopne
xor
lea
sti
stos
test
xor
dec
jp
pop
inc
pop
sbb
popa
das
sub
lock
flds
xchg
shr
ja
rcll
jg
push
sahf
mov
push
inc
addl
outsb
xlat
fmuls
pop
std
jmp
lods
jg
mov
inc
jns
sbb
push
cld
xchg
xchg
sub
xchg
xchg
sub
fimull
inc
add
jge
sub
jmp
out
adc
mov
iret
pop
xchg
sub
fwait
test
in
mov
loop
lods
add
jns
sbb
dec
or
hlt
lret
dec
pop
sbb
mov
dec
sbb
stos
mov
sub
ret
mov
jo
push
mov
inc
push
xchg
add
lea
mov
mov
scas
fstpt
jne
adc
les
in
cmpsl
add
lods
clc
cld
cmp
dec
dec
mov
pop
lea
add
dec
dec
cwtl
xchg
out
xor
stos
movsl
dec
dec
fstpt
add
or
popf
cld
mov
inc
out
je
jno
jge
push
push
sub
out
sbb
gs
les
inc
shlb
xchg
xchg
pusha
sahf
pop
xchg
and
push
cs
pop
sub
jle
fsubrs
pop
xchg
xor
cmc
insb
aad
js
jnp
adc
adc
imulb
jge
rorb
or
mov
and
test
and
dec
std
scas
out
mov
sub
das
repnz
sti
push
outsb
insb
or
loopne
fsubp
push
sbb
sbb
mov
push
inc
xchg
dec
xchg
mov
sub
jo
mov
insb
into
mov
mov
xor
loopne
fistpl
and
fcompl
xorb
lret
test
adc
push
inc
stos
dec
out
cwtl
pop
jno
pop
adcb
das
xchg
adc
and
movsb
int
lods
push
js
rolb
jecxz
and
cmp
addr16
jo
mov
repz
jne
fwait
jecxz
inc
or
xchg
adc
cmp
xlat
and
pop
jbe
xchg
sub
xlat
sbb
insl
cmp
push
loope
or
inc
in
pop
jne
stos
fisubrs
orl
inc
aas
mov
scas
inc
jb
in
xor
xor
jmp
cli
cli
mov
dec
repnz
mov
andb
push
loope
cmp
imul
add
or
mov
mov
leave
std
sbbb
jae
sbb
and
jl
cmp
in
push
push
pushf
mov
cmp
ret
in
and
fimull
jne
rcl
jne
push
or
pop
or
xchg
xor
sbb
call
pop
sub
pop
imul
mov
mov
enter
mov
sbb
popf
xorl
loope
pop
ror
push
stos
mov
sbb
cmp
leave
inc
int3
xor
push
outsl
xchg
lcall
icebp
or
jmp
mov
mov
leave
xchg
fcmovu
jg
daa
sbb
xor
fisubrl
shl
outsl
daa
fwait
test
inc
pop
insb
push
out
adc
sub
mov
jno
push
add
pop
pop
push
xchg
cli
xchg
in
xor
jo
push
gs
xor
inc
das
scas
pop
addl
mov
inc
pusha
and
clc
ss
loope
xchg
and
loope
push
cmp
fisubs
mov
fdivrs
mov
out
das
test
xor
sub
arpl
stos
addr16
and
sbb
stos
dec
bound
aam
clc
jns
rclb
jb
mov
add
int
in
xchg
push
xchg
sub
mov
lret
mov
pop
imul
insb
jmp
mov
mov
and
imulb
lea
xchg
pop
pop
out
inc
mov
daa
fcoms
ret
mov
sub
mov
int
lcall
xchg
mov
out
clc
pusha
add
inc
sbb
mov
dec
xchg
mov
pop
mov
inc
jg
aas
adc
xor
and
shrb
xor
cltd
aad
cld
scas
aam
push
gs
in
std
inc
dec
scas
or
das
pop
pop
mov
or
sub
add
sub
aad
ret
enter
inc
pushl
outsl
movb
add
sub
lods
mov
mov
ficoms
mov
out
mov
or
outsb
cmp
mov
sbb
je
into
lock
pop
outsb
jo
mov
mov
add
gs
roll
dec
daa
jmp
or
mov
and
and
in
xor
shll
aad
xor
push
lcall
jns
push
sub
popf
xorb
pop
add
pushf
push
sbb
dec
test
push
rolb
in
das
ss
xchg
xchg
push
iret
lods
mov
mov
fcmovnb
mov
fwait
gs
shl
shlb
mov
ss
add
jle
xchg
test
add
decb
xor
ss
cmpsl
loope
or
lahf
iret
test
push
jae
dec
sbb
gs
pushf
mov
mull
insl
sbb
adc
dec
movsb
cmp
sahf
fldl
std
outsb
sub
xchg
mov
xchg
mov
rcrb
mov
arpl
mov
mov
popf
iret
call
pop
add
test
xlat
sahf
loope
fucomi
fs
sbb
push
jp
dec
mov
imul
in
jae
cmpsb
push
lock
pusha
xchg
adc
test
jecxz
add
stos
lods
push
pop
adc
mov
dec
sahf
sbb
sub
pop
nop
or
inc
or
es
mov
lea
pop
cmc
xchg
mov
jae
and
mov
mov
jecxz
hlt
out
fwait
movl
push
aam
jl
xchg
int
ret
xchg
cld
jg
push
xor
dec
jmp
scas
insb
cmp
cmp
out
inc
inc
add
rolb
in
das
pop
cmp
mov
jo
mov
dec
sub
and
sbb
fsubrl
insb
and
mov
pusha
test
xchg
test
arpl
shrd
hlt
cmp
rolb
rolb
sbb
jmp
mov
xor
xor
jae
out
sub
in
fnstsw
mov
cmpsl
adc
push
cwtl
jmp
xchg
push
cld
xor
and
and
out
fbstp
outsb
daa
and
outsl
repnz
mov
enter
and
rep
je
out
cltd
sbb
xlat
das
ret
mov
sbb
add
and
and
pop
cli
add
cltd
es
fstps
mov
cld
inc
jnp
ret
or
and
dec
jae
data16
inc
jle
hlt
xchg
mov
jg
or
test
sub
xchg
or
gs
dec
test
cli
fistl
add
push
mov
bound
inc
data16
in
jb
sub
cmp
movsl
pusha
xchg
fbld
out
and
and
sbb
mov
jae
lods
sarl
jmp
jmp
int
pop
lret
int3
mov
xor
mov
sbb
dec
shl
push
or
imul
jge
dec
icebp
pop
rcrb
jecxz
push
scas
cltd
aas
mov
outsb
push
aam
scas
xchg
lret
pop
push
pop
test
shll
jge
mov
adc
and
out
xor
shrl
cmpsb
add
add
cwtl
aas
jns
mov
push
stos
cmc
jp
jg
insb
rcrb
gs
push
les
ffreep
lcall
and
cmp
push
jecxz
xchg
sub
sub
mov
and
ret
xlat
sarb
xor
sub
scas
das
xor
jbe
or
dec
lea
inc
mov
sub
stc
out
hlt
inc
pop
mov
adc
shlb
je
hlt
fs
call
aad
and
pop
xor
add
xor
cmpl
mov
pop
xorb
jne
push
rolb
decl
dec
das
or
xorb
inc
repnz
cltd
mov
pusha
test
fnstcw
outsb
outsl
sub
push
enter
add
scas
xchg
push
xchg
popf
nop
sub
adc
ret
push
sub
jno
push
shrb
stos
in
ret
in
jnp
imul
lods
ja
or
idiv
scas
int3
xor
call
adc
push
xchg
xor
shl
repnz
mov
pop
ret
das
lods
mov
adc
and
fsubl
cmp
gs
movq
ja
mov
sti
mov
or
ljmp
mov
testb
add
mov
xchg
sub
dec
ljmp
mov
fcompl
cmp
mov
cld
fnstenv
xchg
push
decl
test
mov
push
push
jmp
inc
arpl
divl
jge
sbbl
mov
lock
or
cmp
mov
insl
sub
fsubrs
xchg
push
inc
test
mov
icebp
pop
sub
xor
add
sub
pop
enter
adc
and
test
xor
mov
testb
push
stc
pop
xchg
push
int3
push
gs
std
loope
sahf
test
lahf
xor
lcall
mov
adc
aad
or
test
cltd
add
lcall
test
pop
notb
push
cmp
push
cwtl
mov
pop
push
aas
adc
scas
or
sbb
das
bound
jge
outsl
call
and
sub
fdivrl
mov
cli
xor
sahf
lahf
xchg
dec
jo
insb
dec
movsb
push
setno
sbb
mov
std
fsubrs
imul
push
icebp
and
test
sub
adc
adc
jbe
inc
mov
call
stc
inc
and
push
movsl
test
jecxz
jne
mov
mov
mov
mov
jecxz
cmp
lcall
icebp
cwtl
idivl
jg
stos
inc
or
sbb
jp
cmp
adc
daa
xor
mov
jge
push
and
ljmp
push
jno
std
pop
cld
sbbl
adc
jnp
into
fnstenv
jns
xchg
jo
lret
cs
mov
fninit
insl
and
adc
mov
pop
popa
add
push
ds
pop
sub
aad
jb
push
sbb
mov
cmp
add
pop
sbb
ficoml
dec
xlat
xchg
pop
jecxz
adc
xchg
enter
dec
stc
cmp
inc
test
lcall
xchg
xor
call
pushf
add
adc
xlat
loop
daa
cld
and
enter
lods
xchg
in
popf
mov
pop
das
cltd
cmp
dec
in
sbb
mov
lret
fwait
inc
pushf
or
pop
jmp
pop
xchg
cmp
jp
shll
add
mov
adcl
and
xor
mov
sti
mov
pop
xor
in
push
repz
mov
jno
popa
push
mov
hlt
les
fidivrs
and
addb
mov
rclb
daa
jl
and
cwtl
test
loopne
mov
aam
movsl
lds
mov
std
ror
cmp
cmp
ljmp
dec
mull
mov
mull
pop
pushf
mov
shll
cmp
add
in
cld
xor
lea
mov
jbe
xchg
add
fsubs
pop
mov
cli
sbb
loope
outsb
test
movsb
in
push
pop
cs
outsl
xorl
ficoms
addr16
xor
std
xchg
dec
push
cmp
hlt
fiadds
fcoml
lahf
daa
ja
std
cltd
jne
sub
xlat
in
and
popf
loope
mov
fucom
inc
sbb
insl
jg
mov
push
or
jg
fcomip
std
imul
subb
sbb
movsl
in
mov
push
push
sub
xchg
add
add
mov
stc
xor
fsubl
push
mov
jae
jo
inc
dec
inc
xchg
arpl
cltd
push
jbe
sbb
sub
ret
jp
jns
jecxz
cmp
stos
daa
mov
mov
in
and
push
leave
jno
mov
aad
shll
jmp
cmp
daa
mov
adc
mov
rcrl
sbb
pop
inc
lcall
jo
popf
pop
jecxz
fisttpll
adc
movsb
or
dec
or
or
nop
and
push
aad
mov
cmp
lock
inc
jne
pop
aaa
dec
flds
cli
mov
dec
jp
loope
lods
xor
or
or
and
xchg
out
and
mov
mov
mov
inc
push
out
std
add
scas
adc
fwait
mov
inc
repz
mov
or
adc
sbb
dec
mov
ja
pop
pop
dec
jns
fisubs
roll
ja
pusha
adc
mov
xor
icebp
mov
xchg
inc
push
jmp
mov
dec
es
data16
test
cmc
mov
sub
rcrl
push
inc
mov
out
fnsave
jae
std
in
test
jne
insb
hlt
add
ds
add
repz
adc
and
mov
daa
pop
aam
dec
jle
push
xchg
je
mull
dec
test
js
mov
sbb
ficomps
mov
or
in
cmc
cmpb
movsl
xchg
jmp
clc
mov
cmpsb
stc
dec
jmp
outsb
js
ds
mov
jnp
push
add
mov
pop
std
and
hlt
add
mov
pop
mov
cli
and
sbb
shr
mov
int
and
shrb
fcompl
sbb
mov
ficoms
pop
xorl
es
push
and
push
stos
adc
or
mov
mov
gs
gs
cmp
aas
shld
into
stos
stos
xchg
popa
out
adc
mov
frstor
sub
enter
andl
out
cmp
rcll
leave
pop
or
inc
sahf
sub
rcrb
add
add
rcrb
or
rcl
es
addr16
xchg
js
aad
hlt
aam
int3
dec
aas
push
movsb
mov
mov
push
lcall
test
iret
out
mov
xchg
test
jg
lds
ss
lcall
cmp
add
in
fs
loopne
or
xchg
into
sub
into
mov
cltd
sub
and
fdivrl
aaa
test
mov
and
mov
xchg
enter
je
shll
mov
inc
shl
inc
push
sbb
mov
movsl
popf
sub
in
add
jle
movsl
mov
repz
push
call
mov
mov
mov
push
ljmp
int3
std
mov
mov
mov
push
mov
fstl
adc
jo
in
jbe
push
clc
pop
sub
lea
xchg
fildl
xchg
xor
mov
dec
bound
scas
jno
cmp
mov
sub
adc
fcoms
pop
ds
pop
xchg
dec
xchg
or
dec
ret
adc
xchg
mov
dec
aad
xchg
lea
in
aad
lcall
icebp
test
je
xlat
xchg
add
adc
imul
jg
stos
aad
adc
ficoml
pop
or
cltd
mov
cwtl
push
addr16
pop
mov
mov
xor
sbbl
jbe
pop
fbld
mov
mov
push
dec
jmp
xlat
add
aad
or
xchg
cmp
add
scas
adc
adcl
sub
push
mov
jmp
fildll
cli
mov
jmp
mov
mov
adc
sbb
call
jg
cmpsb
aam
mov
les
push
and
mov
mov
loopne
lcall
lock
in
lods
and
mov
cmpsb
movsb
xchg
jb
jge
xchg
push
aas
jmp
inc
ss
je
je
pop
and
or
jne
jle
sub
sbb
std
je
test
pop
arpl
jecxz
imul
popa
negl
xchg
or
cltd
decl
and
adc
enter
xchg
pop
xchg
push
or
inc
dec
inc
jle
inc
cmp
mov
dec
hlt
jmp
out
in
aaa
les
sub
xchg
fbld
mov
lret
add
rsqrtps
pop
fistpll
or
mov
js
test
lds
out
mov
adc
jbe
leave
add
notb
mov
mov
addb
lret
mov
sahf
incl
popf
mov
sbb
adc
int
shll
sar
push
aad
xchg
vpcomw
stos
jge
loopne
xchg
add
jmp
push
add
faddl
push
icebp
sub
cmpsb
cwtl
inc
fwait
mov
rcl
cld
incl
fadds
rcrl
add
pop
sbb
mov
xchg
sub
int3
cld
sahf
sbb
add
ja
xchg
arpl
bound
mov
push
jbe
je
icebp
jp
push
repz
cmpsl
mov
fxch
addr16
sub
mov
mov
out
pop
sbb
inc
xor
dec
loopne
sbbb
ljmp
jns
in
sbb
mov
sbb
jl
inc
ss
out
lock
fdivrs
xor
dec
mov
arpl
pop
arpl
and
fcoms
subl
xchg
mov
mov
shll
ds
shrb
pop
push
dec
add
jmp
scas
ljmp
inc
or
add
in
jge
xchg
sbb
incb
call
mov
and
sbb
int
ds
repz
clc
sub
jns
pop
mov
push
mov
adc
mov
lods
les
jg
cli
mov
test
out
cmc
fistps
inc
adc
daa
in
dec
int
test
sub
pushf
xchg
or
fs
lock
std
dec
sbbl
mov
cmc
mov
lahf
mov
imul
jae
or
test
push
fs
cmp
das
push
imul
sti
hlt
pop
add
pushf
mov
leave
and
sarl
mov
jge
mov
push
stos
xorb
mov
dec
or
sti
sbb
pushw
in
jge
movsl
mov
jno
mov
hlt
jno
in
jae
lods
into
mov
sahf
jae
sahf
push
and
mov
xchg
inc
xchg
cltd
mov
inc
push
or
lea
enter
add
push
mov
jge
mov
mov
jge
adc
dec
push
jns
ss
stos
lcall
nop
sbb
mov
popa
mov
je
inc
clc
rol
repz
fdiv
or
int3
enter
xor
adc
mov
sbb
mov
pusha
fimuls
sub
addr16
cmp
mov
stos
je
jne
xchg
jnp
dec
in
dec
sub
xor
push
push
dec
aas
adc
in
jnp
mov
movsl
mov
sbb
out
adc
dec
outsb
push
out
adc
rcrl
adc
mov
pop
repnz
xchg
or
push
incl
int
fcmovu
and
lcall
xchg
sti
push
mov
adc
mov
sbb
mov
pop
aam
fwait
rcrb
lcall
std
sub
test
mov
sbb
jns
inc
je
int
int
dec
stc
jo
cmp
sub
cs
push
lea
adc
fs
xchg
pushf
pop
pusha
pop
divl
xor
lret
mov
xchg
sbb
push
andl
sbb
addr16
lret
aad
cmp
insl
cmp
cmp
push
push
loop
insb
je
into
and
mov
inc
ss
and
push
imul
mov
push
rcll
lret
sub
popa
in
inc
testl
inc
dec
mov
lock
outsl
push
arpl
sub
jae
mov
jge
sbb
les
push
jns
icebp
add
shlb
mull
aaa
mov
push
mov
xor
mov
call
shll
cld
jns
xchg
int3
cmp
adc
iret
clc
movsl
into
lret
scas
out
loopne
adcl
mov
stos
cmp
stos
in
jecxz
or
mov
in
jns
call
leave
lds
rcll
jl
icebp
fadd
and
lret
pop
fs
dec
cmp
sbb
fimull
mov
push
jnp
mov
mov
xor
std
inc
push
push
push
inc
sbb
cltd
aad
mov
add
insl
das
or
pusha
dec
fistpll
daa
into
mov
bound
xchg
jp
loope
adc
stos
enter
sti
arpl
sbb
cmp
fisttps
into
call
xchg
or
push
fnop
lret
cmp
and
mov
mov
int
clc
sub
mov
dec
fstpt
cmp
mov
xchg
inc
mov
cli
cmpsb
jp
jno
pop
mov
fdivrs
sbb
lds
inc
push
adc
inc
fs
sbb
inc
into
imul
mov
jo
fsubl
mov
jb
dec
testb
dec
or
or
inc
aam
or
mov
cmpsb
inc
out
inc
xlat
cmp
es
sarl
xor
gs
mov
adc
sbb
les
in
das
add
ja
sub
jnp
in
ret
ljmp
sti
dec
adc
dec
rorl
adc
inc
xchg
bound
and
add
and
jne
mov
push
adc
and
xchg
bound
mov
jbe
push
dec
xchg
inc
pop
fiadds
call
sahf
push
sbb
dec
mov
icebp
adc
test
push
xchg
fld
lcall
push
or
loop
pop
jecxz
mov
or
push
cs
popa
dec
rcll
jle
inc
push
jae
push
jmp
fnstenv
call
dec
std
cmpsb
in
add
xchg
push
call
out
jp
cmp
lahf
mov
sub
or
insb
in
dec
lds
xor
add
mov
or
out
and
fdivrl
shlb
popf
sub
jge
scas
xchg
sarl
icebp
inc
or
sub
rolb
inc
test
or
xor
lret
cwtl
mov
or
adc
flds
aad
stos
negb
xchg
sbb
repz
lods
test
filds
xchg
xchg
xchg
mov
and
lret
arpl
push
cmpsb
push
or
pop
repnz
lods
or
xor
xchg
arpl
cmp
enter
cmp
repz
stc
xor
mov
xchg
testl
jo
or
insl
jnp
push
jns
andb
cmc
in
out
add
popf
insl
jo
sbb
cmpsl
jb
popf
xor
mov
dec
cmp
cli
ljmp
add
inc
popa
test
or
jmp
mov
xchg
cmp
pop
sub
imul
jp
popf
xchg
cmp
mov
sti
xchg
push
or
stos
push
stc
arpl
jbe
fsubrl
push
mov
movsb
and
mov
js
mov
imul
dec
pop
stos
mov
mov
mov
fildl
or
and
cld
rclb
test
jle
pushf
push
add
xor
adc
xlat
jb
or
stc
ljmp
sub
enter
outsl
das
xor
sahf
jecxz
mov
jecxz
iret
test
xor
cli
and
mov
cld
or
push
cmpsb
mov
or
dec
add
imul
push
or
xor
ds
jp
sbbb
dec
push
addr16
jle
pop
cmp
xor
ret
andl
ficoms
divl
je
cmp
sbb
cmp
das
data16
test
stos
mov
or
lods
lods
arpl
inc
loop
faddp
mov
push
push
shlb
fistpl
std
push
dec
push
push
loope
ret
jl
cltd
jmp
decb
sbb
stos
andl
xchg
fstpt
mov
jbe
movsl
sub
sbb
std
fwait
mov
and
dec
testb
xlat
xor
dec
xchg
mov
cmc
xchg
jno
cmp
sbb
cmp
mov
out
movsl
sbb
push
mov
and
mov
fucomi
fs
inc
sub
aam
mov
movsl
loope
ret
incb
scas
push
push
pop
push
outsl
mov
jecxz
stc
cmpsb
loope
sbb
and
add
sbb
mov
repnz
dec
mov
movsb
inc
push
fsts
mov
loope
inc
cmpsb
daa
fnsave
movsl
fbstp
hlt
cli
in
dec
subb
sub
mov
inc
cmp
xchg
adc
adc
sahf
nop
mov
sub
loopne
sbb
and
sub
les
mov
adc
cli
inc
movsl
adc
cltd
int
imul
and
pop
test
cmp
call
fists
inc
mov
ret
add
shr
cmpsl
std
push
push
jb
pop
xor
ret
icebp
shrl
in
jmp
ja
dec
xchg
fstpl
fiadds
nop
push
hlt
push
push
or
jbe
lcall
imulb
and
or
mov
sbb
xchg
jmp
ja
adc
mov
xchg
jmp
sub
pop
int
arpl
mov
pusha
jns
dec
shrl
pop
jnp
add
jg
push
loopne
out
push
jl
sbb
gs
sub
jae
push
sub
pop
mov
lea
jmp
cmp
notb
sbb
cmp
insl
cmpsl
mov
push
dec
jns
ljmp
push
dec
xchg
stos
outsb
out
cmp
roll
lods
aad
mov
test
lds
cmp
std
xorl
add
rcr
rcl
add
xchg
movsl
arpl
sbb
mov
rcrl
pusha
sbb
loope
xchg
pop
pushf
ret
adc
pop
arpl
sti
push
pop
les
mov
mov
sahf
adc
mov
jns
sub
cltd
mov
lds
stc
add
inc
vpunpcklbw
inc
daa
mov
cmp
adcl
inc
fdiv
sub
xorl
dec
sub
cmp
std
push
aaa
xchg
sub
fnstsw
mov
mov
js
jg
sbb
arpl
idivl
or
dec
xchg
cmp
mov
mov
and
add
call
xor
mov
negb
xchg
int
insl
push
mov
add
stos
mov
out
or
fisubrl
sbb
gs
jp
fidivl
aaa
sbb
loop
inc
adc
popa
pop
imul
lods
or
filds
ds
gs
push
push
add
ljmp
mov
lds
jg
ljmp
cwtl
cld
xchg
cmc
out
outsl
mov
adcb
lret
and
pop
cmp
jae
xchg
out
popa
xchg
dec
mov
cmpl
jnp
outsl
xor
addb
and
and
lea
ss
pushf
sub
push
pop
sti
mov
lret
filds
push
iret
mov
btsl
jecxz
ret
es
fs
sub
dec
popa
ret
add
pusha
in
xchg
xchg
or
push
test
pop
adcl
cltd
int
es
mov
mov
jno,pt
mov
fnsave
mov
stc
pusha
iret
cli
push
fsub
jl
stc
cmp
test
fstpt
sbb
jnp
xor
cmpl
mov
and
repz
out
lret
jmp
imul
or
lret
push
sub
lret
dec
sahf
popf
push
cmp
jmp
cmp
pushf
inc
imul
addr16
ljmp
pop
mov
int
stos
or
jecxz
into
ja
inc
fistps
add
ffreep
sbb
add
test
push
loop
fiadds
jp
fcom
ret
push
xchg
pop
fwait
dec
aad
or
les
fiaddl
jmp
out
mov
and
clc
pop
add
push
xor
popf
pop
mov
jns
or
push
mov
mov
dec
sub
popa
dec
push
popa
movsb
adc
in
or
movsb
cmpb
cld
fwait
insl
fidivl
stos
fdiv
jl
fidivs
in
dec
cs
js
fs
push
jle
int3
inc
std
jge
sbb
sarl
fstpl
jb
std
hlt
inc
add
jmp
sbb
nop
jbe
scas
pop
add
add
jb
mov
addr16
xchg
data16
push
mov
and
mov
rorl
into
mov
pop
cwtl
lock
cmp
mov
dec
je
xchg
adc
mov
push
std
xchg
and
xor
ja
mov
int3
mov
lret
mul
lret
xlat
sbb
push
bound
gs
dec
pop
inc
dec
inc
xchg
mov
outsl
loope
gs
sbb
xor
and
sub
jg
sbb
stos
mov
les
rcrl
inc
sbb
repnz
frstor
jnp
dec
cmp
ss
xchg
sbb
ja
repz
test
dec
adc
sbb
fiaddl
inc
pop
pop
jb
mov
fwait
call
xchg
in
cwtl
les
lret
xchg
lods
mov
inc
mov
push
mov
jbe
mov
cwtl
or
ret
add
test
outsl
mov
test
adc
push
dec
fildl
mov
inc
and
gs
push
lea
cmp
or
adc
fisubl
dec
jb
xor
mov
call
jge
loop
shll
pop
sub
xchg
adc
mov
cmp
cwtl
xchg
push
das
mov
pushl
jne
test
fwait
xchg
sbb
psrlw
pushf
pop
sub
fisubs
lds
fs
mov
add
les
adc
mov
xchg
mov
xchg
fwait
mov
dec
mov
lret
adc
add
mov
mov
cmpsb
stos
popf
mov
lret
in
outsb
pop
lcall
push
push
adc
add
mov
add
mov
fcmovb
aam
push
imul
repz
fadd
js
test
jmp
xlat
xchg
cs
mov
sbb
or
scas
inc
add
mov
popf
inc
std
jno
fistpl
dec
jecxz
in
divb
inc
cmp
test
mov
lret
aas
xchg
enter
add
push
cmpsl
iret
clc
pushf
jno
dec
mov
mov
dec
arpl
cmp
adc
icebp
les
rorb
das
ljmp
pop
xor
in
popa
ret
jle
fmuls
inc
mov
mov
int
in
lret
jnp
testb
xor
sub
addb
push
scas
and
inc
inc
jp
or
ret
pop
out
mov
and
mov
repnz
in
dec
enter
cmpsb
inc
inc
mov
out
push
xchg
mov
insb
enter
rclb
aam
daa
mov
inc
pop
dec
cmpsl
clc
dec
xchg
or
loop
iret
fistps
dec
stc
rcll
rclb
sti
jo
mov
scas
insb
xor
mov
loope
xchg
pop
xlat
test
arpl
or
cwtl
xchg
or
mov
mov
adc
vpsrlw
insl
push
push
rorb
sarl
mov
loope
ds
jp
outsl
cmp
into
dec
dec
xchg
mov
dec
sub
mov
mov
sbb
dec
sbb
repz
lahf
dec
inc
imul
inc
cmp
and
fldt
lret
rcrb
push
mov
lds
mov
scas
insl
mov
adc
sti
int3
and
test
pop
jge
or
in
inc
aas
data16
outsl
push
sub
sub
xchg
jbe
dec
lds
ljmp
xchg
test
mov
cltd
sub
push
ljmp
push
lret
cli
stos
lods
pop
ljmp
in
inc
aas
cmp
cmp
jae
pusha
push
dec
add
or
ret
cwtl
adc
xchg
enter
dec
lods
shl
out
nop
mov
lods
mov
xor
push
xor
sbb
pusha
or
dec
push
decl
test
jecxz
xchg
repnz
sarl
pushf
neg
pop
dec
ss
shr
imul
jle
mov
jge
loop
add
push
dec
jl
cli
mov
jae
pop
cmc
in
imulb
or
mov
jae
pop
dec
inc
lret
and
pop
imul
ds
dec
push
adcl
pop
push
sub
clc
iret
cmpsb
cmp
ja
fnsave
cwtl
fbld
mov
mov
shl
pop
mov
mov
aaa
pop
mov
mov
movsb
add
rolb
rolb
js
dec
and
icebp
cmp
xchg
sbb
int3
cli
imul
cmpsb
mov
sub
mov
out
mov
scas
cmp
adc
fs
ret
cmp
and
mov
jae
lret
rcll
sub
je
fxch
lock
js
dec
adc
test
push
jne
dec
jecxz
bound
xchg
and
dec
sub
mov
push
push
jle
aas
xchg
int
sub
aam
hlt
shr
test
xor
adc
dec
add
movsl
dec
test
cmp
popf
jnp
xlat
push
xchg
mov
lret
fs
adc
lods
push
popa
inc
push
pop
leave
loopne
push
jb
cmp
imul
and
sti
mov
xchg
cmp
dec
ficoms
lahf
add
mov
imul
mov
xchg
stos
cmp
insl
in
testb
dec
and
scas
ds
cmp
mov
jne
lcall
out
les
sub
jbe
pop
jno
cmp
xor
aam
sub
dec
mov
mov
sahf
cmp
cltd
jp
fstpt
dec
movsb
push
mov
daa
pop
imul
imul
ret
repnz
mov
lcall
int3
mov
sbb
rclb
sbb
pop
mov
xchg
adc
push
cltd
cmp
mov
into
data16
lret
mov
pop
jbe
xchg
push
fnstcw
pop
sub
push
adcl
push
insb
mov
out
mov
push
mov
cs
sub
push
xchg
mov
adc
xchg
int3
xchg
lods
stc
xchg
pop
pop
icebp
xor
sbb
daa
pop
and
xor
push
ljmp
aam
ds
cli
xchg
push
and
pusha
cltd
or
or
arpl
xor
jno
loop
push
jb
out
mov
imul
add
xor
adc
fucomp
mov
mov
leave
stc
cmp
icebp
aas
stos
inc
push
ret
dec
ds
sub
ljmp
add
fbstp
ds
je
cwtl
les
push
sub
stos
repz
mov
or
inc
xchg
cmc
sbb
test
ret
lret
mov
jmp
xor
andb
cld
lock
adc
push
das
push
lock
mov
sbb
mov
inc
cmc
dec
push
pop
sbb
dec
cli
lea
jne
addb
xor
inc
push
or
scas
push
cmp
cmc
or
cmpsb
mov
adc
inc
xor
fcoml
or
iret
pop
and
pop
lea
push
or
pop
cmpsl
sahf
loopne
testl
push
not
test
xchg
arpl
gs
arpl
sub
jno
sar
dec
jb
adc
mov
fists
int3
in
mov
out
sub
or
ret
inc
pusha
mov
and
int
xlat
int3
roll
sub
mov
jae
addr16
std
dec
out
mov
ss
fcoms
cmp
sbb
insl
pop
dec
lret
dec
mov
in
daa
iret
sbb
cmp
and
dec
ds
sub
pop
loope
sub
imull
mov
sub
cmp
dec
mov
push
fwait
mov
loop
cmp
adc
jecxz
or
xor
and
sbb
movsb
push
lahf
lret
xchg
or
mov
call
cmp
cmpsb
cmp
pop
xor
jmp
hlt
push
xchg
xor
shl
and
adc
mov
rol
lods
push
shlb
xor
leave
mov
sbb
pusha
xchg
scas
fldt
fnstenv
sub
ja
out
movsb
dec
push
sub
pop
lea
push
or
and
inc
out
fdivrs
inc
ficompl
sub
mov
sbb
dec
lahf
xlat
lcall
cwtl
pusha
cmpsb
adc
lods
and
dec
loop
aad
popa
mov
cld
call
dec
mov
pop
les
cmpsl
sub
test
ret
sarb
mov
inc
gs
lahf
in
aas
fstpt
cmp
sub
leave
adc
stc
and
dec
pusha
into
sbb
lods
je
fs
pop
add
fwait
xor
das
shlb
sub
sbb
pushf
jne
xor
std
or
in
test
test
std
xlat
xchg
daa
aam
add
xor
cmp
inc
lock
loope
jmp
test
xchg
stos
mov
push
div
jno
cmp
dec
fdivrl
hlt
iret
push
mov
es
jbe
shl
inc
or
jo
pop
out
and
or
xor
jmp
sti
andb
xchg
in
lcall
popf
jbe
push
mov
lahf
mov
lea
push
cpuid
mov
repz
fcmovbe
mov
jmp
pop
inc
push
cmpb
stc
stos
popa
jno
or
push
mov
sarl
sub
cmp
xor
add
pop
and
outsb
sbb
or
xchg
lods
xchg
js
sbb
and
jmp
inc
push
hlt
mov
into
das
and
push
sub
inc
inc
sub
adc
mov
push
mov
das
jo
arpl
shrl
gs
daa
push
mov
lret
shlb
call
dec
stos
or
test
in
pop
jmp
stos
fisubrl
insb
pminsw
or
call
dec
repz
fwait
dec
out
sbb
xchg
dec
pop
inc
dec
iret
out
push
cs
and
ficoms
add
ret
cs
or
sbb
test
test
adc
loop
repz
push
out
pop
inc
lea
push
pop
fcompl
in
insl
adc
rclb
mov
sub
sub
shrl
cs
jmp
shr
push
cmp
into
movsl
aas
or
stc
shll
out
sub
and
xchg
xorl
leave
jp
enter
mov
sbb
loopne
sub
pop
jecxz
jecxz
rcrb
ss
ds
push
mov
out
xchg
je
mov
outsb
hlt
lods
out
cld
jo
sbb
fldcw
cmp
mov
mov
jmp
dec
shl
add
iret
test
ss
cli
mov
xor
outsl
mov
mov
jbe
sub
push
sbb
pop
fs
jp
enter
cmpb
push
adc
inc
insl
aaa
and
std
adc
out
inc
pop
jmp
lret
xchg
inc
arpl
pop
popa
and
mov
sbb
mov
cmpsb
fstpl
cmp
xlat
inc
les
inc
adc
adc
fistl
out
or
ja
mov
movsb
sub
add
jae
lahf
dec
sbb
mov
insb
sub
mov
popf
mov
sarl
lcall
mov
in
arpl
push
fistpl
iret
xor
loope
push
adc
and
popa
ja
xlat
or
in
adc
dec
inc
fsub
jle
stos
jbe
pusha
clc
out
xchg
mov
subl
cmp
add
cmpsl
stc
sbb
pop
pop
in
mov
and
cmp
cli
fidivl
int
es
push
je
sbb
outsb
out
popa
lahf
fs
fwait
popl
into
cmp
leave
dec
pop
dec
subb
aam
xchg
or
adc
sub
pop
cmp
xchg
arpl
mov
xchg
push
adc
test
outsl
pop
jne
adc
scas
cltd
and
jbe
rcl
add
imul
loopne
and
ffreep
cld
js
pop
clc
inc
pop
cmc
mov
mov
sbb
repz
lods
lret
daa
mov
or
jne
adc
and
lods
dec
push
dec
push
cmp
jecxz
mov
pop
push
fs
fistpl
and
push
xlat
bound
rcrb
xor
repz
sbb
ds
clc
push
inc
cmp
cmp
push
insb
test
sbb
jg
lret
push
push
mov
lods
xorl
hlt
mov
pop
insb
ret
shlb
ret
clc
lock
mov
push
subb
inc
or
out
mov
add
add
or
sbb
push
call
mov
mov
mov
fstpt
test
pop
cmp
stos
fadd
xor
cmpsl
aas
scas
lods
lret
pop
xor
dec
jp
xchg
dec
aaa
pop
jg
mov
xchg
fsubrs
xor
jecxz
nop
sarb
divl
rorl
or
addr16
imul
popf
cli
sub
fwait
ret
lods
mov
xchg
add
out
adcb
xlat
cmc
sti
inc
fs
jae
cmp
sbb
in
adc
cmp
rcr
dec
mov
lds
mov
ljmp
cmc
adc
sub
outsb
sbb
xchg
or
inc
repz
add
stos
sbb
mov
test
test
xorb
popf
popa
jb
jae
xor
xorl
jno
push
jge
cmp
xor
jb
gs
sbb
jb
pop
fstps
fildl
jl
mov
fadds
sub
and
xchg
push
sub
mov
jns
dec
jo
into
loopne
repz
and
xchg
mov
fstps
cmpsl
std
pop
divb
xchg
sbb
adc
lret
rcr
adc
push
mov
sub
adc
push
std
mov
mov
add
adc
cmp
mov
add
pusha
mov
mov
daa
and
and
ret
aam
int3
imul
cmpsl
inc
push
lea
inc
sub
lcall
mov
push
xchg
adc
fstpl
cli
iret
mov
lcall
sub
sbb
imul
je
push
adc
inc
adc
jns
cmp
loop
in
sbb
out
iret
imul
fldt
pop
je
xchg
dec
popa
div
addb
xor
dec
ficompl
dec
mov
add
sub
call
shlb
pop
ficoml
pop
and
pop
sti
push
cmpsl
stc
test
orb
push
lock
ss
cs
addr16
push
gs
jp
push
add
cwtl
add
inc
sahf
add
ja
aas
popa
add
repnz
cmp
sub
in
inc
imul
jne
cmc
sbb
adc
leave
test
mov
sub
shl
out
or
sar
in
sub
xor
pop
push
cmc
fwait
ds
mov
rcrl
out
and
inc
scas
inc
shl
and
add
lcall
push
rcl
mov
stos
sbb
cmp
popf
adc
mov
lret
mov
add
sbb
bound
mov
movsl
jo
inc
lock
movl
enter
fs
jl
aas
sbb
iret
sahf
push
xorl
mov
test
popa
and
scas
cs
fadds
out
push
pop
outsl
mov
cltd
push
jmp
mov
inc
mov
fidivrs
nop
mov
or
lods
jp
imul
mov
stc
jle
sbb
push
mov
arpl
lock
clc
orb
xchg
out
mov
jmp
std
frstor
xchg
shll
shll
push
fs
jg
mov
mov
mul
push
lcall
into
shr
xchg
mov
xor
stc
add
test
xor
adc
push
mov
lods
bound
cld
mov
sahf
iret
and
xor
cwtl
hlt
adc
xor
pmuludq
or
cmpsb
outsb
out
lods
cmpsl
dec
mov
sbb
jmp
orl
and
fcmovnbe
and
pop
divb
repnz
out
stc
daa
shlb
lret
push
dec
dec
xchg
cmpb
pop
cmpsl
xchg
ret
lds
jno,pn
push
or
pusha
hlt
sbb
inc
cmp
pop
pop
xor
cmp
xchg
mov
dec
pop
popf
mov
test
roll
pop
arpl
mov
push
lret
ja
push
les
int
mov
enter
pop
mov
inc
mov
mov
dec
fistpll
test
xchg
imul
mov
mov
cmp
push
mov
gs
int
sahf
dec
mov
inc
leave
sbb
or
xor
push
jp
fs
daa
dec
ss
aam
iret
cwtl
imul
xchg
or
mov
or
inc
daa
xor
xchg
rcrl
mov
in
call
mov
repz
jmp
in
std
mov
inc
cmp
sub
cltd
push
or
jmp
inc
mov
push
and
adc
pushf
popa
clc
xor
add
mov
fldcw
negl
lods
clc
mov
cmp
int3
pop
and
fstpl
les
dec
or
jmp
dec
mov
cmp
ror
jmp
in
fs
inc
cmp
xchg
scas
out
push
or
ret
mov
out
ds
mov
subl
jecxz
mov
add
ret
pop
sub
movsl
int3
pushf
jge
pop
cmp
add
xor
in
mov
jae
cmc
in
pop
push
sarb
enter
mov
scas
mov
or
pop
les
rcr
in
rcrb
mov
mov
sbb
add
mov
in
leave
xchg
lods
out
scas
imul
negl
mov
shll
pop
fcomps
mov
xchg
mov
xchg
jno
adc
mov
or
dec
aas
outsl
jne
lret
sahf
int
in
or
and
out
sub
xor
scas
je
inc
ja
mov
inc
inc
xchg
xor
mov
daa
jbe
push
xchg
sub
lods
das
gs
jb
pop
jecxz
fistpll
sbb
into
in
xor
dec
movsb
lds
call
icebp
xor
nop
push
and
mov
add
aaa
movsl
mov
loop
sbb
ljmp
cmpl
inc
cmp
mov
xchg
enter
inc
movsb
repnz
sarl
outsl
mov
push
jl
sbb
insl
adc
xchg
adc
dec
and
ret
cld
push
mov
cld
faddl
pop
into
daa
jno
xlat
push
xchg
or
pushf
fstpt
or
call
mov
xchg
ljmp
pop
jo
cmpl
in
push
mov
adc
sub
xchg
test
das
mov
rcrl
mov
aam
pushfw
fmuls
mov
xchg
push
addr16
aas
sbb
pop
lcall
ficoml
adc
add
call
add
or
mov
lret
pop
mov
cmp
push
ja
or
lahf
divb
popa
sub
cli
out
inc
sbb
push
int3
call
push
sbb
popf
fstl
ret
ds
dec
cmp
mov
mov
cmp
out
movsb
pop
dec
mov
mov
subb
pop
int
lret
mov
pop
sub
test
xor
leave
jno
mov
ret
dec
dec
sub
push
shl
pop
shll
rclb
mov
mov
int3
xchg
pop
jle
aad
sbb
imul
popf
test
rcr
lods
adc
push
push
push
aas
add
bnd
inc
pop
dec
push
ja
or
shl
adc
and
ja
outsb
mov
cmp
scas
ret
test
inc
pop
jnp
xchg
add
jp
fdivrs
push
inc
mov
pop
xor
int
push
dec
and
pop
push
jno
add
mov
out
adcb
mov
inc
push
scas
out
jmp
ficoml
into
outsb
popa
mov
mov
les
mov
rcrb
inc
add
inc
dec
bound
sub
jnp
push
add
xor
jg
psrlq
pop
or
jg
mov
stos
jmp
loopne
inc
das
or
add
stos
push
lcall
dec
loop
loop
aad
fidivrs
ret
xchg
xchg
mov
insl
cmpsb
int3
mov
movsl
pop
cmpsl
movsl
and
mov
out
test
sar
and
daa
cmpsb
repz
aaa
xor
inc
subl
cmp
and
pop
in
and
lock
pop
mov
mov
ja
mov
das
xchg
loopne
fldenv
iret
sbb
pushf
dec
sbb
dec
out
inc
mov
mov
adc
sbb
imul
icebp
repz
push
pop
dec
cmp
adc
lds
or
pop
xor
adc
cli
lock
cmp
lcall
sbb
mov
jnp
add
adc
push
stos
dec
frstor
pusha
and
movsb
sub
mov
cmp
push
cmp
out
fisubs
mov
test
scas
mov
fcoml
and
sbb
fidivrl
mov
je
mov
pop
cmp
fbld
mov
or
popf
sub
aad
les
pop
sarb
push
pop
and
test
or
aad
push
pop
popa
push
jmp
inc
jno
add
cltd
mov
or
adc
cmp
or
idiv
icebp
scas
mov
mov
and
inc
inc
mov
jmp
das
out
xlat
movb
mov
shll
jo
pop
es
mov
ret
sub
xchg
aas
jl
cmpsl
ja
std
bt
mov
and
pop
lretw
or
fcompl
outsl
inc
inc
push
dec
xor
repz
or
aad
jle
movsb
aas
std
gs
inc
xchg
loop
push
imul
lds
dec
inc
cmp
xlat
outsb
xchg
xchg
dec
or
xor
pop
pop
cli
pop
cs
push
aad
jge
inc
sbb
xchg
xchg
int3
aaa
adc
repz
sarl
sub
sub
popa
in
sub
outsl
mov
and
mov
and
daa
inc
divb
clc
push
sub
in
aam
xor
lea
lds
inc
cmp
mov
lcall
aad
insl
js
fistpll
mov
mov
push
out
mov
or
mov
pop
cld
mov
insb
lds
sub
push
sub
mov
sbb
test
ss
std
add
mov
negl
jbe,pn
cld
cli
push
in
cmp
test
insb
sbbb
pop
pop
orl
and
or
mov
fs
pop
inc
icebp
push
pop
jecxz
mov
insb
pop
dec
cmp
jp
push
xchg
rol
std
dec
test
or
insl
xchg
orl
push
lods
mov
pop
loop
call
daa
and
int3
adc
jge
insl
lahf
mov
fidivs
mov
jns
ja
fcom
std
dec
aam
into
orb
arpl
mov
out
into
pop
xchg
inc
cmpsb
arpl
push
call
dec
call
mov
fwait
lods
dec
pop
and
call
stc
cmp
orb
sbb
or
imul
sub
sub
adc
jmp
pop
roll
xchg
rcl
push
inc
sub
fneni(8087
test
pop
insb
xchg
jbe
jmp
in
sbb
and
icebp
and
xchg
jle
dec
test
jns
mov
adc
das
in
repnz
icebp
sbb
stos
push
xchg
mov
aad
testl
adc
pushf
xchg
jecxz
xchg
xor
mov
ja
xor
fldz
dec
test
cld
in
cltd
xchg
stc
cmp
fsubl
ret
es
push
pop
hlt
mov
in
rorl
test
or
dec
inc
push
dec
test
insb
int3
es
mov
fnsave
movsb
addr16
popa
jne
test
push
xchg
mov
adc
jle
push
xchg
jo
xchg
stos
cltd
ret
adc
and
out
jmp
rolb
add
lahf
adc
out
lcall
sbb
repz
rcrl
and
insb
ja
enter
jp
gs
mov
faddl
outsb
or
imul
mov
jle
rcrb
jle
sub
mov
out
mov
push
pop
in
sbb
icebp
addr16
cmp
mov
pop
jnp
cmpsb
add
fidivrl
cmpsl
iret
pop
loopne
cmp
sbb
sub
xlat
sbb
fistl
stc
pop
cmp
dec
xchg
test
xchg
xchg
cmp
dec
pop
stc
adc
add
pop
cltd
insl
jl
xchg
daa
or
inc
and
ss
sbb
inc
inc
sbb
or
call
stc
outsl
mov
mov
sbb
dec
jmp
gs
cmc
pop
and
cmp
inc
mov
ss
jecxz
ret
add
dec
fs
push
mov
pushf
daa
insl
or
aad
xchg
xchg
jno
mul
sbb
and
sub
sbb
cmp
scas
mov
shrl
mov
pop
mov
or
pop
adc
rclb
mov
aam
cs
sarb
add
aam
call
adc
xchg
scas
mov
xlat
mov
add
dec
pushl
shl
jl
mov
aaa
or
add
icebp
addr16
ret
ret
dec
xchg
pop
hlt
lea
cltd
adc
in
cli
loope
jg
dec
adc
movsl
pop
outsb
pop
xchg
or
int
and
cs
xchg
fisubs
cmp
sub
test
dec
push
aas
mov
dec
or
mov
mov
mov
orb
jo
shlb
test
fldt
sub
xchg
sub
sub
xlat
shrb
xchg
pop
es
xchg
ss
mov
inc
xor
dec
int
fwait
cmp
push
jbe
or
add
jp
mov
fidivrl
popf
jg
popf
xor
addr16
xchg
mul
sti
jp
adc
xor
cmpsl
xor
jg
std
out
pop
xchg
mov
mov
movsl
scas
pushf
sar
ret
outsb
insl
ljmp
or
stos
push
jno
lods
repnz
pop
xchg
shl
xor
cmp
jl
stos
cs
push
lcall
cmpsl
cld
add
aaa
lahf
cwtl
inc
xor
sub
mov
sahf
iret
push
jnp
out
jo
test
inc
cmpsb
in
mov
jle
cmc
lds
data16
pop
fdivr
cwtl
test
mov
pop
test
jg
stos
inc
push
add
andl
inc
push
cmp
sbb
fbstp
outsb
pop
es
imulb
rorb
pop
jp
pop
icebp
push
sbb
jge
outsb
mov
adc
fstps
push
push
add
cmp
cmc
sub
scas
xchg
inc
push
push
inc
dec
daa
loopne
sbb
jg
cmp
out
fwait
xchg
cmp
pusha
pushf
fwait
dec
cmp
in
xchg
dec
mov
add
aam
pop
int3
push
jg
jnp
dec
add
filds
mov
mov
or
jmp
mov
cmpsb
mov
jb
aaa
iret
and
stos
adc
fidivrs
lock
mov
pop
cs
arpl
and
fs
insl
cmp
dec
pop
out
out
popa
outsl
pop
das
fidivrs
insl
push
pop
cmp
sarb
movsl
inc
and
push
mov
out
lds
xchg
dec
mov
push
push
jae
lret
rcr
dec
sub
addb
cmp
mov
push
xor
sub
add
mov
mov
push
stos
jl
or
lcall
in
scas
jns
lret
add
loop
jl
fistps
fldt
aaa
mov
arpl
ss
inc
in
pop
fsubl
add
in
stos
mov
inc
dec
inc
or
mov
pop
mov
push
adc
cmp
cs
mov
sbb
mov
into
pop
cmp
movsl
or
sbb
xchg
adc
sbb
xlat
mov
int
mov
out
jle
lods
notrack
sub
lods
xchg
fsubs
ret
pop
lret
push
in
push
jp
test
push
dec
lods
sbb
stc
fucomip
insb
adc
pop
push
jbe
fiaddl
sub
mov
pop
subb
dec
jmp
test
inc
and
jp
xchg
sub
xchg
mov
pusha
or
jne
xor
mov
cmp
out
or
mov
sub
push
ljmp
mov
in
sub
fcom
movsl
mov
shrb
mov
mov
es
imul
mov
mov
pop
jo
push
or
or
hlt
inc
mov
rolb
mov
in
aam
jnp
insl
pop
dec
pop
adc
hlt
xor
ret
xor
xchg
adc
mov
mov
aam
cs
and
dec
xlat
scas
mov
fs
add
testl
frstor
in
aad
mov
lret
push
mov
pop
xlat
fnstsw
pushf
rorb
sbb
std
test
lea
push
jnp
fnstenv
cmc
ljmp
hlt
push
lods
xchg
push
out
mov
stc
js
jae
imul
push
das
out
xchg
cmp
jne
add
mov
shll
inc
out
pop
shrb
popa
cld
dec
cmp
in
subl
stos
or
jae
jecxz
mov
xor
cld
lahf
andb
cmp
jg
rcr
or
shlb
outsb
add
mov
incl
or
rcrl
in
ret
push
push
stos
sbb
adc
cli
mov
sbb
adc
mov
cmc
or
int3
dec
data16
mov
bound
bnd
push
cli
adc
jecxz
fnstsw
jb
jl
hlt
inc
icebp
imul
cmc
push
out
cs
and
ljmp
jg
push
sbbl
xchg
mov
jno
mov
loopne
xor
and
fcompl
shll
and
insb
push
add
inc
jle
jb
pushf
sti
andb
pop
mov
push
sub
mov
sbb
lds
xchg
ret
out
testb
mov
push
xchg
inc
dec
mov
and
scas
cmp
inc
push
cmc
rcr
dec
adc
pop
cmp
jmp
inc
add
outsl
fs
xor
and
mov
push
dec
adc
cmp
mov
out
push
hlt
jg
shll
add
fdivrs
lahf
mov
inc
fcoms
shlb
mov
mov
push
aad
in
push
jnp
aad
aad
repnz
push
into
lds
adc
iret
or
js
pop
lds
ret
rcl
or
dec
div
incl
sub
mov
cld
ja
xor
jle
pusha
int
shrl
popa
pop
sub
cmp
dec
inc
inc
outsb
inc
std
pop
inc
outsb
sub
mov
insb
clc
or
inc
test
lcall
xor
shl
aaa
push
pop
lods
ljmp
cmp
inc
sbb
cmp
pop
js
fnstenv
out
mov
movsb
add
inc
xor
sahf
imul
pop
mov
aaa
in
ds
pop
lret
mov
sarb
insb
and
push
add
inc
or
jp
ficoml
sbb
dec
xchg
xor
cmp
fwait
rolw
add
pop
inc
adc
stc
jo
mov
or
call
out
ret
ds
gs
in
das
adc
out
pop
mov
cmp
add
inc
jecxz
pop
and
fxam
add
pop
jnp
jg
es
xor
iret
movsb
sbb
cmp
scas
adc
sub
ljmp
sub
into
pop
nop
inc
out
cltd
jne
fstl
mov
sub
pop
adc
lods
pop
hlt
icebp
loope
mov
loope
jbe
clc
sub
inc
call
mov
sti
outsb
xchg
mov
pop
jae
shlb
sarl
aam
lahf
aad
jle
jg
lcall
loopne
jle
fwait
mov
xchg
daa
ds
rclb
inc
sbb
pop
fdivs
cs
fs
movsl
rorl
in
dec
mov
sbb
jmp
int3
jnp
sahf
cmp
rclb
xchg
into
lds
cmp
roll
outsl
xor
push
fcmovb
in
mov
dec
inc
int3
sub
xchg
ret
jg
stos
repnz
and
es
aas
jge
push
mov
aas
sub
mov
les
into
test
insb
fwait
push
mov
add
addr16
jne
mov
test
scas
push
mov
mov
cmp
mov
movl
adc
mov
ficompl
das
pop
or
sub
test
add
sbb
xchg
shrb
int
xor
mov
fldl
popf
cld
arpl
sbb
xchg
dec
adc
and
pusha
pop
rol
or
loop
or
sub
add
addb
cmc
sarb
add
pop
rcl
push
jns
dec
repnz
mov
push
jno
pop
jecxz
es
nop
dec
xor
dec
xor
leave
cltd
outsl
push
mov
popa
in
and
push
and
lods
xchg
mov
cli
frstor
mov
xor
adc
sub
xor
xor
daa
in
inc
dec
jmp
add
mov
push
test
andl
decl
jne
adc
jecxz
jge
call
inc
jo
xorl
fisttpll
jnp
cmp
int3
cmp
fnstsw
mov
push
lcall
roll
cld
movsb
pop
pop
mov
jbe
movsb
add
mov
inc
lea
xchg
push
pop
enter
ja
loope
jp
test
ret
insl
ret
mov
pop
mov
or
jbe
scas
addr16
je
adc
fidivl
pop
or
in
hlt
mov
xor
jle
mov
lret
aaa
in
xchg
dec
ret
jecxz
or
shl
and
xchg
xchg
data16
lret
or
pop
arpl
enter
mov
lcall
inc
and
or
sub
andb
jnp
add
mov
mov
add
jg
jl
dec
mov
mov
inc
in
insb
xchg
cmpsl
push
pop
and
push
and
pop
jns
sti
insl
lcall
pop
dec
xchg
sbb
dec
sbb
inc
stc
icebp
fmul
or
lea
nop
or
or
aam
cmp
jecxz
out
clc
mov
sbb
andl
or
add
cmp
mov
and
test
shrl
sahf
aas
jae
lahf
sbb
daa
incb
rcrl
out
jb
mov
test
pop
icebp
add
pop
sub
sahf
repnz
jno
pop
into
das
inc
subl
inc
sbb
xor
enter
sahf
lret
in
aas
dec
dec
sub
push
call
push
pop
mov
shrl
movsl
loopne
fcoml
in
push
lcall
inc
fidivrs
popf
fs
jl
sub
xchg
or
or
xchg
ds
mov
pop
fcmovnb
aaa
xor
call
jo
gs
pop
mov
and
inc
dec
cmp
out
push
cli
xchg
jno
dec
aaa
scas
jae
sarb
mov
mov
fldl
and
nop
pop
sub
jno
xchg
jg
lret
mov
cmp
adc
int3
mov
testb
sub
pushf
imul
pop
jmp
pop
mov
lods
sub
fsubp
xor
add
lret
test
lods
loope
mov
dec
xchg
jl
jl
push
out
xchg
clc
stos
pop
clc
pop
cmp
dec
fstps
push
sbb
sub
fcoml
popa
icebp
rorl
lahf
fcoml
xor
and
movsl
dec
and
dec
or
mov
sti
inc
inc
imul
sarb
je
mov
pusha
into
xchg
mov
xchg
xchg
les
jl
jg
mov
xchg
jmp
mov
fcompl
pop
jbe
loop
in
mov
cmp
test
enter
push
insb
clc
jecxz
pop
and
mov
dec
xchg
jmp
enter
movsb
std
rcr
xchg
mov
inc
push
mov
sti
ja
add
movsb
lcall
repz
sarb
xchg
xchg
xchg
aam
jns
dec
jle
lds
test
outsl
fidivrl
inc
cmp
fsubrl
jns
ss
xchg
or
mov
jno
mov
call
daa
mov
es
dec
decl
enter
and
inc
out
in
rep
stos
bound
cltd
fcomp
sub
adc
cmp
enter
lret
mov
popa
fidivrs
xchg
iret
test
dec
or
lcall
mov
arpl
stos
aas
arpl
mov
test
cmp
icebp
fsub
aaa
movsb
into
test
adc
mov
dec
ss
int
and
fcoms
in
jmp
fdivrl
add
xchg
add
cmpsb
enter
mov
scas
push
adc
and
hlt
cmp
mov
inc
adcb
dec
inc
popf
mov
fwait
jmp
jp
add
mov
xor
push
xchg
ljmp
or
mov
jg
sti
lea
rorl
ljmp
int
cld
xor
loopne
into
outsb
cmp
stos
clc
dec
mov
add
insb
sbb
dec
fdivp
or
mov
shl
jns
ret
dec
pop
addr16
pop
stos
mov
jle
loop
adc
or
mov
mov
sub
cltd
fs
push
aaa
mul
dec
notl
jbe
sub
mov
dec
pusha
adc
sbb
xchg
jo
push
push
xchg
mov
addr16
jge
xchg
stos
pop
cmp
and
call
arpl
scas
fdivrl
sbb
mov
gs
or
out
ret
adc
jnp
out
push
jae
sub
jge
pop
push
sbb
push
int
aad
enter
xchg
mov
fpatan
xor
lcall
jns
xlat
nop
arpl
outsb
in
lea
cmpl
ror
jmp
mov
jecxz
rep
dec
test
inc
xlat
rorb
pop
sarb
in
mov
pop
in
inc
dec
loope
xchg
mov
fstpt
inc
pop
mov
sbb
insb
lret
outsb
int3
testb
push
xlat
mov
stc
out
mov
dec
out
xchg
jp
adc
push
sti
ret
in
daa
mov
mov
push
mov
fdivrp
inc
insb
outsl
shlb
cmp
cmpsl
addr16
or
sbb
jge
les
mov
jae
jp
add
cmp
shl
inc
or
pusha
mov
mov
out
icebp
xor
sbb
test
mov
fcompl
push
sahf
push
pusha
pop
and
lea
popa
cmp
pushf
inc
inc
mov
inc
pop
or
mov
mov
fdivr
ret
cmpsb
fldcw
jns
lds
xchg
push
fwait
adc
clc
repz
out
test
imul
and
mov
mov
adc
out
sbb
stos
add
cwtl
mov
jl
test
sbb
aad
xchg
sub
push
sti
pop
pop
stos
inc
add
nop
sbb
cmp
ss
pushf
in
addr16
cs
enter
push
repz
pop
xchg
std
push
in
mov
fs
xchg
adc
je
pop
pop
pop
and
push
and
jecxz
into
xorb
push
lret
pusha
xchg
mov
and
dec
fwait
cltd
es
xor
push
cmp
dec
out
sar
push
cmp
outsl
loopne
push
loopne
mov
adc
scas
fidivrs
loop
lods
jbe
shrl
cld
sub
in
inc
inc
add
push
adc
outsl
das
adc
sti
sub
inc
inc
mov
jge
ja
adc
push
pusha
jno
inc
jecxz
loope
sbb
push
jbe
push
loopne
push
dec
adc
arpl
inc
adc
cmp
or
mov
test
xchg
xor
add
push
push
mov
xor
sub
inc
mov
insl
xlat
fwait
inc
jnp
pop
mov
jo
mov
insl
cltd
mov
out
adc
ret
jb
in
jg
mov
es
ss
inc
or
push
pop
cs
inc
xchg
dec
mov
mov
setnp
mov
clc
mov
lods
testb
mov
add
ficomps
or
push
jmp
dec
xchg
inc
push
movsb
out
aam
jbe
popf
fnstsw
les
inc
jns
and
add
and
popa
inc
les
shll
push
das
ror
aad
pop
fwait
iret
sub
cli
fildl
ljmp
sbb
mov
and
loope
ljmp
imul
jp
mov
in
gs
jae
mov
push
jl
pop
inc
jp
push
lret
or
daa
sub
jae
and
xor
pop
jle
jl
shll
icebp
popf
mov
icebp
mov
cld
cwtl
add
lea
jg
clc
inc
xor
xchg
sub
ss
jne
pop
clc
lods
movsb
bnd
fadd
inc
ja
jg
aam
sbb
mov
pop
in
and
sbb
je
add
push
or
push
shrb
pcmpgtw
push
in
pusha
push
lea
add
les
imul
xlat
mov
jge
icebp
fisttpl
adc
pushf
push
push
jle
push
mov
cwtl
xchg
fmull
out
sbb
sub
lahf
push
negb
std
jle
sub
and
add
or
xor
cli
add
push
fistpl
mov
jl
push
dec
sahf
pop
cmp
dec
adc
data16
clc
mov
pop
xchg
sarl
xchg
adc
xor
adc
mov
fidivl
push
cmp
push
out
fsubrs
push
cmp
xchg
push
cld
in
inc
add
jecxz
out
shlb
cwtl
add
ja
ret
xor
and
jl
cwtl
loope
pop
pop
mov
dec
jp
fidivl
pusha
cmp
pop
dec
fcomi
aas
pop
sub
add
aad
push
out
mov
pop
ret
popf
add
dec
or
inc
pop
fistl
xchg
les
xchg
push
cld
jecxz
push
sub
dec
xor
lret
jecxz
mov
test
fildll
fwait
imul
pop
loopne
xor
inc
pop
les
inc
pop
xor
and
mov
test
hlt
jae
int
inc
lea
mov
daa
sub
leave
insb
repz
inc
insb
mov
lock
mov
out
push
or
cld
mov
sbb
mov
pusha
xchg
test
mov
divb
cmc
stos
sarl
dec
sbb
jns
pop
pop
jae
or
lods
subb
dec
repnz
imull
nop
adc
sub
pop
sub
add
mov
bound
loop
mov
fcoms
inc
sub
sub
or
fisttpll
xchg
mov
add
or
popa
mov
cwtl
push
into
stos
xchg
faddl
les
das
pop
add
add
aad
dec
push
mov
stc
les
push
movsl
xor
sub
add
addb
dec
or
xor
js
call
jno
cmp
sbb
jg
sbb
icebp
jecxz
fmul
mov
cmp
out
jecxz
jae
push
and
or
dec
test
jl
add
pushw
and
test
sub
leave
push
test
xchg
jae
sbbb
and
les
adc
mov
ja
xchg
stos
xchg
push
xor
sahf
push
and
movsb
adc
jo
push
sbb
fimuls
pop
mov
outsb
or
push
and
mov
push
jns
cmpsl
inc
outsb
adc
push
pusha
outsb
loopne
test
repz
push
pop
addb
fstps
daa
ljmp
dec
movsl
mov
cmp
mov
adc
and
jp
punpckldq
addr16
adc
fldl
fnstenv
jae
pop
in
in
jns
loopw
xchg
and
sbb
lods
mov
dec
stos
stos
lahf
mov
xor
and
or
stos
addr16
sub
lds
in
mov
xor
mov
addl
je
and
mov
mov
xchg
pop
pop
iret
rcll
jbe
pop
es
aad
dec
mov
mov
mov
cmc
pop
aad
shl
cmp
inc
sbbl
cmp
mov
mov
and
int
jmp
xchg
iret
loop
mov
insl
js
imul
dec
jge
pop
xor
mov
or
loope
mov
ljmp
inc
imul
dec
sub
dec
xchg
lds
movsb
mov
xor
scas
adc
es
mov
jmp
ret
pop
xor
mov
sub
inc
fsubp
xchg
icebp
mov
arpl
sbb
jle
inc
dec
dec
cltd
inc
mov
addl
adc
push
cmp
cmp
pop
xchg
pop
add
cli
sbb
test
xchg
cli
cmp
sub
xor
shl
mov
xor
push
repnz
adc
pop
in
xor
movsb
cmc
xorl
sub
mov
xchg
lret
movsl
inc
aam
jl
xor
cmp
sub
imul
je
jnp
movsl
rorb
fiaddl
int3
and
sub
ss
ss
xchg
pushf
rcr
outsl
mov
cmp
cmp
push
stc
cmp
pop
stos
mov
fcomps
scas
fisttpl
scas
jo
mov
gs
out
cmp
push
fisttpl
scas
fwait
clc
xorl
cmp
pop
jl
xor
sahf
cmp
mov
aad
push
test
imul
push
push
and
push
jge
mov
ret
inc
pop
or
pusha
jbe
sub
stos
rorb
shll
dec
and
fiadds
mov
or
dec
lcall
and
call
sub
ljmp
mov
or
jne
stos
fcmovnb
inc
int
icebp
cmp
imulb
mov
push
inc
std
adc
add
xor
jmp
mov
repnz
sub
sub
pop
out
cli
sbb
push
or
and
dec
out
gs
iret
push
fidivrl
jmp
je
mov
mov
sbb
pushf
sbb
push
enter
inc
imul
rclb
pop
jecxz
pushf
cld
xor
std
xlat
popfw
mov
les
cmp
pushf
repnz
xor
xor
pop
cwtl
xchg
add
ret
cld
mov
sbb
sti
lea
jge
pop
mov
pop
dec
lahf
and
jae
pop
cli
sbb
jecxz
out
xor
pop
outsl
enter
lret
sahf
movsl
mov
scas
dec
sub
cli
jge
js
fistpll
stos
jb
push
notl
dec
jnp
pop
out
jmp
movnti
mov
cmpsb
in
adc
es
sahf
movb
pushf
add
dec
repz
adc
adcl
je
cmp
shll
aas
inc
dec
fisubs
es
negl
aad
sub
wbinvd
js
shll
subl
push
andb
inc
cli
jle
xor
enter
loop
push
int3
scas
mov
icebp
push
popa
test
inc
cmp
int3
jne
popa
push
clc
jno
mov
xchg
sub
lahf
sbb
test
mov
lret
mov
test
test
mov
push
cli
pusha
sbb
ljmp
jmp
mov
ljmp
cld
dec
nop
push
mov
lahf
pop
insl
jmp
ja
pushf
sub
jecxz
adc
sar
pop
jno
insl
lcall
aaa
inc
push
sub
imul
pop
sti
clc
lcall
out
adc
cmc
push
in
push
xor
cmp
test
sbb
and
and
ret
xchg
mov
inc
jecxz
repz
jnp
inc
ret
rcll
dec
inc
push
cltd
ljmp
lahf
pop
rcrb
push
lahf
mov
sbb
mov
outsl
add
jns
xor
mov
rolb
jne
pop
sub
fsts
mov
in
and
sub
and
jo
aad
mov
and
and
mov
add
mov
fucom
push
sbb
fbstp
cli
push
loope
xchg
int3
inc
in
aas
idivb
sbb
cmp
jg
mov
xchg
test
or
sarb
xor
xor
clc
divb
push
adc
cmpsb
lock
sahf
lret
rolb
cwtl
lods
xor
adc
push
dec
jmp
aad
mov
dec
jmp
clc
sahf
les
aam
inc
sub
inc
mov
inc
cmpsb
int
jae
add
jl
sbb
inc
inc
mov
lahf
out
mov
fcmovu
push
add
adc
pop
enter
lcall
pop
xchg
or
and
out
inc
and
enter
and
push
mulb
hlt
mov
dec
jae
and
jae
xchg
and
pop
sbb
xor
in
cmp
xchg
and
lock
loopne
sahf
or
test
arpl
movsl
stos
mov
fldenv
cmpsb
jo
mov
mov
test
mov
daa
rcl
int3
sub
jmp
mov
ljmp
mov
test
add
inc
int
les
lods
mov
testl
out
in
xor
fistpll
jecxz
and
fmull
repnz
call
mov
lahf
imul
jo
inc
hlt
push
into
sub
insl
inc
loopne
insb
enter
ljmp
not
test
fisubl
adc
outsl
fs
xchg
cwtl
push
inc
and
xor
insl
mov
sub
lcall
cs
mov
fisubs
negb
jp
mov
repnz
popf
subps
icebp
shll
lds
cmc
and
xor
sbb
stos
push
mov
ja
movl
mov
xchg
jb
hlt
sahf
stos
addr16
movsl
mov
sbb
roll
push
push
scas
dec
fbstp
jl
adc
fildll
and
push
sbb
mov
cmp
fstpl
and
movsb
fstpl
fldl
ret
outsb
fistps
nop
rorl
adc
adc
in
mov
stc
pop
fisubl
lods
inc
mov
or
xchg
shlb
add
movb
inc
push
iret
mov
repnz
add
subb
loope
xchg
add
out
fsubs
iret
in
push
sbb
lcall
jne
sub
inc
push
sub
cwtl
sub
cmpb
imul
cmp
outsl
clc
imul
cmp
in
lods
in
mov
pop
mov
cmp
push
std
and
mov
shll
dec
mov
popf
dec
je
mov
icebp
arpl
bnd
mov
push
pop
add
push
pusha
xor
mov
add
xchg
cltd
outsb
jbe
js
mov
and
add
ret
mov
lret
xchg
daa
inc
jl
sbb
js
subb
daa
nop
ret
dec
arpl
popa
adc
mov
mov
addr16
and
decb
mov
test
add
sbb
mov
mov
movsl
inc
sahf
int
rorl
xor
lock
cs
loopne
adc
push
cmp
mov
cmp
pop
add
xchg
push
mov
mov
call
clc
fists
repnz
and
add
fldl
test
mov
or
jmp
mov
lcall
sbb
pusha
adc
movsb
and
repz
mov
out
mov
es
pop
cmp
xchg
xlat
and
xchg
pop
inc
cmp
jmp
clc
fucomp
pop
bound
mov
lcall
mov
sub
xchg
sub
pop
and
xchg
push
sub
mov
push
pusha
fmul
jb
xor
xchg
inc
mov
and
xor
mov
aam
testb
add
clc
ja
sar
das
repnz
push
andb
sub
mov
test
lret
insb
popf
push
sub
push
or
dec
popa
dec
cmp
cmp
rorb
sub
mov
and
add
rorl
and
pop
bswap
jmp
or
aaa
and
movsl
xor
stos
pop
cld
sti
jae
imul
jnp
push
scas
mov
pop
data16
jge
cmp
lds
ret
sub
mov
test
dec
scas
adc
insb
ljmp
in
ljmp
jns
jmp
loope
ficoms
sti
test
xchg
mov
add
sbb
test
ljmp
and
lods
les
adc
cmpsl
stc
clc
xlat
xor
pop
mov
push
aam
mov
movb
andl
in
jg
xchg
and
mov
out
fisubl
add
fidivrs
pushf
jge
mov
jecxz
push
test
fildll
in
lock
inc
xor
lods
jo
out
xchg
push
imul
cltd
ja
shrl
lcall
roll
les
cmpl
inc
test
das
xor
cmp
adc
sbbb
push
or
jmp
idivb
mov
mov
adc
fimull
popa
xor
jnp
loope
popa
or
test
add
jg
pminsw
push
test
jmp
test
xor
and
and
cmp
lock
nop
pop
mov
fldenv
sub
dec
inc
push
dec
xchg
adc
fdivrs
cmc
mov
dec
push
out
mov
mov
out
addl
mov
xchg
loop
rcll
int
in
dec
loopne
jmp
scas
jl
mov
ss
pushf
mov
inc
jl
add
push
lahf
jle
jns
cmpb
push
mov
xchg
jle
ljmp
mov
cmc
shlb
mov
std
fs
and
fldt
mov
sbb
push
sub
aaa
repz
push
mov
xchg
mov
stc
fimull
cmpsl
int3
sti
sub
nop
push
and
jbe
movsb
jno
loopne
das
sub
xchg
mov
xchg
xor
outsb
in
inc
scas
jo
mov
xor
cltd
pop
pop
inc
out
dec
out
sbb
and
xchg
ret
adcl
insl
repz
xorb
pop
addb
jmp
dec
andl
inc
popf
movsl
mov
mov
hlt
sub
je
cmp
iret
dec
int3
dec
xorb
cmp
jnp
call
add
xchg
enter
lds
and
dec
cmpsl
mov
inc
movsl
shrb
sbb
shll
cld
shlb
xchg
imul
mov
cltd
mov
adc
mov
loop
pop
test
aaa
fisubl
outsb
or
inc
cmp
push
pop
cmp
es
xchg
xlat
jo
adc
dec
push
or
out
je
movsb
fstl
ret
in
pop
cwtl
cltd
fsubrl
out
lcall
addb
sbb
sbb
cmpsb
pushf
fsubl
xchg
outsl
ss
cwtl
pop
inc
sub
je
pop
cmp
and
jo
les
in
xor
test
push
push
imul
fisttpll
jp
adc
jns
mov
scas
jl
daa
lcall
xchg
dec
sbb
mov
ja
rorb
xchg
and
fidivs
call
in
rolb
pop
pop
pop
inc
popf
daa
pop
pop
push
sarl
cmp
lret
sar
dec
mov
xchg
pushf
xor
mov
popf
xor
test
xchg
call
lock
jg
push
sub
test
cmp
xchg
add
jno
arpl
ja
jns
int
push
xlat
adc
xchg
or
push
mov
inc
outsl
sub
fisubrl
sub
lock
mov
sub
xchg
repz
mov
fs
pop
fsubs
in
pop
stos
shrb
fisubl
xor
std
xchg
sti
xor
out
mov
dec
or
scas
sbb
or
pop
push
pop
ja
push
icebp
push
ret
pop
xor
cltd
mov
imul
fisubrl
sub
stos
jp
xchg
les
pop
jno
sub
sarl
jecxz
jecxz
xchg
mov
pop
pushf
mov
hlt
sahf
ljmp
stos
jle
fildll
sub
mov
cmpsl
aas
push
pop
pop
movsb
andl
outsb
das
nop
ficompl
ljmp
cmc
lock
repnz
insb
mov
inc
sub
adc
jl
sbb
jge
mov
mov
in
jne
xor
loope
les
out
shlb
mov
leave
and
je
fsubrl
inc
adcb
mov
leave
and
mov
test
cmp
push
mov
xchg
aas
jne
add
adc
xor
add
movsl
mov
mov
je
pop
sub
xchg
subl
mov
rcrl
aam
cmpl
cmp
jo
dec
xchg
addr16
stos
sbb
mov
sbb
mov
cltd
movsb
lods
xor
mov
cmpsb
mov
rep
lret
lret
pop
lcall
inc
sahf
add
sub
jl
mov
cmpsl
pop
mov
jb
xchg
mov
xchg
xchg
and
add
mov
jle
rorb
fwait
jmp
cmp
push
pop
cld
or
inc
mov
or
adc
hlt
xchg
into
and
not
aas
inc
int3
mov
xor
lahf
les
addl
stc
mov
ret
cld
jo
xor
pusha
loop
clc
fidivrs
lods
push
mov
scas
xrelease
push
xchg
inc
call
xor
dec
lods
xor
xlat
cmpsl
sbb
add
pusha
xchg
adc
cmc
cld
repz
cmp
cld
pop
jecxz
fstps
jne
push
jnp
ds
clc
push
iret
aas
sbb
in
push
pop
add
or
roll
jo
mov
test
push
stos
into
mov
cmp
add
dec
inc
inc
fisttps
cltd
daa
sbb
push
mov
sub
inc
mov
sub
test
or
mov
cli
imul
mov
mov
sub
pop
jecxz
sbb
popf
jmp
js
mov
dec
mov
dec
leave
fstpt
inc
mov
mov
add
in
fcmovbe
cltd
call
mov
adc
pushf
clc
dec
inc
outsl
xchg
mov
les
cmpsl
xchg
dec
mov
lret
push
lret
sar
push
and
pusha
push
cmp
cli
ret
push
adc
mov
pushf
cmc
andb
pop
imul
in
push
and
inc
or
jl
adcb
data16
mov
xchg
scas
xchg
enter
faddp
lahf
or
adc
adc
add
les
imul
cwtl
shlb
movsl
xchg
enter
leave
mov
insb
sahf
stos
insl
mov
fs
fimull
daa
sbb
mov
arpl
std
inc
sub
push
decb
inc
data16
int
lea
imul
inc
in
push
lods
outsl
loopne
daa
push
adc
jp
rcl
cltd
jl
enter
adc
cld
or
icebp
fwait
pop
out
jne
dec
pop
std
outsl
mov
and
mov
jno
push
jo
push
dec
add
scas
rcrb
dec
fs
int
fimuls
js
sbb
lret
xchg
mov
cltd
ss
sbb
jae
sbb
jecxz
outsb
lods
sti
leave
cmp
in
fwait
iret
jne
loope
push
daa
xor
in
cli
call
sub
scas
rorl
inc
rolb
xor
imul
sbb
inc
sub
pop
mov
fdivs
shlb
les
repnz
or
inc
je
lods
mov
add
std
mov
les
mov
jbe
push
call
mov
lock
shll
xchg
pop
dec
mov
fimull
daa
push
cwtl
add
loope
divb
sahf
cs
mov
or
sbb
add
xlat
dec
xor
mov
andb
stos
cwtl
push
dec
lret
or
lock
add
push
pop
fwait
ja
repz
repnz
sbb
insl
or
xor
faddp
hlt
inc
aam
rorl
out
movsb
jbe
cli
sbb
inc
cld
fs
ljmp
dec
lods
jmp
xor
xchg
fsts
add
and
push
dec
in
push
pop
decl
jecxz
stc
adc
jp
stc
repz
and
jbe
or
sub
pushf
mov
insb
loopne
xchg
jge
inc
xchg
loope
pusha
cmp
pop
inc
roll
jg
push
ret
pop
js
out
push
fisubl
jge
pop
dec
pop
xchg
inc
push
jns
std
aad
mov
outsl
jge
aaa
pusha
add
fcmovne
pop
out
jbe
notb
sub
dec
xlat
lahf
out
movsb
mov
add
mov
cmpsb
mov
add
dec
fnsave
sahf
icebp
or
mov
dec
loop
in
mov
loopne
in
jmp
mov
adc
and
cld
push
push
mov
leave
pop
dec
daa
sub
call
shrb
pop
inc
inc
je
es
sub
pushf
out
or
movsb
stos
sbb
inc
cwtl
push
pop
xor
shrb
leave
rolb
sub
jbe
cmp
xchg
stos
jb
push
sub
inc
xchg
cmp
addr16
mov
mov
lods
cmp
cmpsl
mov
std
ret
out
movsl
push
fisttpl
inc
insl
loop
push
out
lret
push
out
test
call
adc
loopne
lods
in
xor
rcrl
push
stos
into
call
jl
fstpl
ja
fcomps
cmc
loopne
xor
sti
stc
test
pop
outsl
add
and
daa
sub
push
lea
les
xlat
jl
cmp
push
adc
into
sahf
in
adc
cld
call
pushf
ror
pop
dec
call
aas
repnz
out
xchg
add
aaa
sarb
lds
mov
sbb
out
dec
inc
dec
lock
dec
popf
cmp
push
outsb
cltd
push
outsb
bound
push
bound
cmpsl
push
fidivs
jno
leave
sbb
sub
sarb
hlt
inc
adc
cmp
mov
push
call
scas
roll
shlb
iret
repnz
das
mov
iret
pop
sbb
and
and
push
push
arpl
add
add
sbb
jmp
inc
int
sbb
jbe
pop
cmc
mov
cmp
mov
cmp
out
daa
movsb
or
mov
in
repnz
xlat
push
popa
das
popf
dec
mov
cmp
push
call
push
mov
sub
ja
inc
cmp
mov
mov
ja
movsb
xchg
mull
cmpsb
and
mov
icebp
mov
jle
xor
push
js
insb
shrl
or
sub
jbe
call
add
inc
or
sub
inc
sub
fs
or
movsb
insb
adc
push
out
or
push
pop
mov
scas
stos
jnp
mov
sbb
or
mov
test
insb
shll
ret
jo
imul
ja
inc
arpl
fmulp
xor
dec
sar
lock
sub
cltd
cwtl
mov
push
add
mov
fs
out
insb
adc
dec
adc
xchg
jecxz
ljmp
pop
xor
cmp
push
jge
sbb
and
jns
push
call
jmp
push
cli
pop
xor
xor
arpl
inc
sbb
jle
cmp
ljmp
or
roll
fcmove
adc
inc
pop
push
adc
mov
jne
push
movsb
sti
cli
cmp
jns
ss
mull
xchg
popa
and
mov
mov
jno
popa
in
aam
sub
cmp
adc
rclb
adc
pop
mov
ds
pop
ror
xor
sarl
xorb
stos
cpuid
xor
mov
jbe
cltd
sbb
mov
cmc
mov
mov
add
lds
out
sub
shrb
in
test
add
push
out
sub
push
lcall
xchg
test
mov
mov
sbb
mov
mov
cmc
idivl
out
add
push
sub
push
sbb
fisttps
repz
mov
sbb
mov
push
pusha
and
mov
out
xor
xchg
jae
scas
fidivs
mov
movsl
in
dec
cmp
mov
xchg
test
or
imul
sub
cmp
es
or
mov
loope
movsb
or
aaa
daa
pusha
push
sbb
sub
nop
pop
sbb
loopne
jl
or
shrl
inc
loop
mov
das
xchg
aaa
out
test
push
icebp
mov
cmpsl
pop
push
mov
xchg
cwtl
call
in
sbb
jge
std
inc
lea
fmull
lods
jge
scas
push
scas
sub
xchg
rclb
into
jl
mov
xchg
aaa
pop
mov
in
mov
adc
mov
mov
adc
pop
or
and
xlat
shrb
add
test
test
adc
data16
jge
sbb
cmp
pop
scas
sub
test
jae
push
jge
jp
outsb
inc
cmp
pop
jbe
jg
inc
sbb
xlat
or
sbb
nop
aad
aaa
mov
sbb
or
push
mov
ret
push
out
aas
jp
cmp
jne
loopne
xor
data16
aad
iretw
xor
dec
shlb
shrb
mov
and
sbb
mov
mov
push
mov
inc
lcall
pop
inc
mov
and
imul
xchg
std
sub
into
fldenv
push
scas
and
push
mov
dec
cmp
stc
outsl
lods
int
dec
out
popf
mov
adc
mov
stos
pop
testl
jne
and
lea
lret
mov
adc
and
mov
rcrb
xchg
out
sub
shl
jge
lods
pop
dec
pop
shll
cmp
inc
jmp
xchg
adc
cmpsl
mov
mov
xchg
mov
cs
dec
js
xchg
sbb
imulb
sbb
in
jae
fists
xchg
mov
enter
sahf
pop
add
and
fs
cmp
rolb
xor
mov
push
inc
ficoms
daa
jo
fwait
xor
int3
aad
mov
jo
xor
out
pop
or
xor
notb
and
bound
sub
call
dec
sahf
or
fisubrs
mov
pop
xchg
sbb
inc
cmp
push
xchg
lods
pop
pop
lea
xor
adc
mov
xchg
xchg
pop
mov
inc
popa
cltd
sub
or
ss
xor
pop
cmp
mov
adc
call
aas
out
adc
test
mov
sbb
leave
loope
add
cltd
lods
out
test
fisttps
outsb
in
int
jb
shr
fstps
jne
jecxz
push
dec
dec
sub
dec
pop
inc
mov
iret
arpl
and
cltd
scas
insl
sar
arpl
ja
lcall
pop
cmp
sbb
dec
les
out
arpl
mov
and
cmp
stc
pusha
aas
add
pop
mov
mov
xor
sub
adc
sub
pop
rolb
mov
outsl
xor
testl
outsb
dec
int3
pop
xor
pop
insl
sub
adc
mov
pop
push
imul
cmpsl
cmp
cltd
sub
add
mov
scas
and
dec
mov
xlat
and
fwait
cmp
jl
pop
lods
sbb
out
pushf
fcompl
dec
jae
xor
adc
sub
insb
shll
shll
or
inc
sbb
repnz
mov
jmp
add
fsubrs
dec
cld
mov
jo
enter
xorb
cmc
outsb
pop
test
sbb
aad
cs
mov
shr
pop
pusha
int3
jecxz
mov
je
aam
in
aaa
das
pop
fnstsw
sub
cmp
in
sub
or
xchg
xor
ss
push
mov
xchg
add
mov
add
jbe
or
push
jne
je
pushl
data16
add
jo
mov
sarl
das
aas
pop
insb
xchg
fs
xor
popf
add
mov
or
fistpll
loope
jbe
clc
xorl
and
mov
pop
add
mov
out
inc
adc
fisubl
jo
outsb
cmp
movsl
pop
push
push
test
inc
std
cmp
cmp
sub
jge
adc
dec
mov
pop
mov
and
xor
or
stc
cwtl
bound
dec
fxtract
pusha
sub
repnz
testb
stos
add
jp
subb
sahf
xlat
mov
dec
sub
mov
mov
insl
sbb
jno
jg
cmpsl
mov
cmp
xchg
and
daa
and
mov
xchg
cli
cmc
and
iret
aad
rsqrtps
jo
push
xlat
inc
add
mov
dec
shlb
dec
inc
cmp
push
js
hlt
cmpsb
mov
sbb
lock
iret
cmpsb
cmp
ret
dec
pop
iret
leave
in
sahf
nop
push
sbb
pop
les
mov
aad
jb
mov
or
mov
mov
dec
dec
pmaxsw
aas
xor
mov
bound
cmp
imul
aas
aam
stos
in
push
daa
dec
lahf
adc
add
xorl
insl
sarb
and
sbb
ds
mov
mov
cmp
mov
stos
int3
add
dec
jne
cmp
pop
pop
movsl
popa
adc
xchg
mov
cmpsl
sarl
leave
call
pop
mov
loopne
les
ja
cmp
cmpsl
subl
adc
sub
xchg
ljmp
out
pop
mov
popl
fstps
xor
imul
jo
jne
clc
ds
or
jge
xchg
inc
sub
lea
insb
out
add
repnz
lods
xor
lods
mov
arpl
fidivrl
add
std
mov
mov
xchg
mov
push
add
andb
hlt
subl
mov
pop
cmp
aam
xor
pop
lahf
idivl
xchg
cmpsb
or
iret
rcrb
pusha
in
fcmove
mov
sub
jg
outsl
ss
push
lods
test
pop
rcrl
or
mov
loopne
fbstp
jb
jno
lret
pop
test
lcall
cltd
mov
aam
dec
fistps
test
testb
in
push
jnp
sbb
jb
add
mov
int3
xchg
inc
fsubrl
scas
sub
int3
push
cmp
or
dec
pop
mov
sub
mov
or
add
std
pop
shll
jno
adc
xor
jnp
js
icebp
cmc
inc
in
sub
out
inc
push
jge
jg
pushf
and
cwtl
inc
movsb
arpl
lock
loopne
dec
aas
jle
cmp
jmp
sbb
add
inc
cltd
lretw
jg
daa
lret
push
push
stc
jns
loop
add
in
cmp
shrl
adc
xchg
push
mov
push
icebp
and
and
and
cmpsb
cwtl
into
push
out
rcrl
push
add
inc
xchg
pop
lock
negb
movsl
or
jle
ljmp
sahf
outsb
mov
xor
adc
dec
fisttpll
adc
or
pushf
js
mov
stos
mov
int3
or
std
cli
loopne
sub
lea
dec
inc
xchg
inc
ret
push
dec
aam
xor
cmp
in
adc
outsl
scas
aas
orb
and
cmpsb
and
icebp
pop
mov
sti
hlt
repnz
add
push
cmc
aam
repz
xor
xchg
in
xor
cli
mov
adc
cmp
cmp
add
pop
imul
lret
pop
adc
aam
push
jo
rorb
sbb
lcall
jmp
cmp
cmp
xchg
add
sbb
xchg
ror
mov
and
xchg
inc
in
bound
fistpll
pop
and
rcl
and
lods
pop
shll
test
pop
xchg
cmp
push
mov
outsl
daa
cmp
dec
pusha
aaa
sti
sub
fnsave
pop
js
jmp
mov
call
mov
sbb
ss
icebp
add
sahf
mov
test
pusha
lret
icebp
add
pop
repz
rcrl
test
loope
cmp
hlt
es
mulb
adc
lods
add
rcrb
scas
mov
outsl
insb
jne
lahf
movsb
call
sub
ja
jbe
pop
sbb
xchg
out
mov
outsl
int
cld
push
inc
adc
insl
dec
adc
dec
mov
mov
push
rcll
push
mov
dec
sub
add
stos
mov
pop
js
sbb
lea
js
pop
cmp
loop
push
inc
inc
mov
scas
and
lock
fmull
pop
cmp
hlt
pop
mov
mov
jmp
jnp
mov
push
stos
jge
mov
mov
mov
shlb
sub
push
xchg
jp
adc
out
push
add
das
adc
enter
and
daa
mov
lds
cwtl
sti
cmpsl
adc
lret
mov
aas
adc
xor
jns
sbb
xchg
std
mov
in
pop
sub
popa
repnz
dec
sub
and
rolb
rcr
pushf
sbb
movsl
xor
mov
jg
sbb
add
mov
fists
mov
mov
cwtl
hlt
out
insb
push
test
pop
sub
movsl
and
mov
neg
cmpsb
sub
adc
push
or
pushl
push
in
in
mov
arpl
rclb
sub
pop
mov
xor
lahf
inc
and
test
pusha
pusha
jle
hlt
mov
mov
mov
ret
aas
push
or
and
cmpsl
insb
test
xlat
and
pop
bound
fisttpl
in
or
addl
sbb
cli
dec
add
lock
sbb
inc
jge
pop
xor
mov
push
cmc
cmc
jns
sti
out
mov
pusha
mov
shlb
mov
pop
in
jle
lcall
push
push
sti
sbb
in
ljmp
pop
mov
addr16
sub
or
adc
das
jg
sub
insl
xchg
aam
sbb
mov
jno
or
sbb
xchg
push
mov
xor
addb
sbb
mov
hlt
fcomi
fwait
and
cmp
aam
iret
aad
mov
aaa
outsl
fistpl
aas
loop
js
inc
iret
pop
loop
mov
sub
push
sahf
insb
mov
add
fidivl
xor
sub
stc
adc
xor
mov
popa
and
imul
dec
mov
test
lret
xor
repnz
and
adc
call
movsl
cmpsb
mov
clc
mov
rorl
lock
fcompl
leave
fsub
jae
sahf
test
cs
xor
mov
xor
test
out
cmp
cmpsb
imul
stos
and
jno
xorl
jbe
out
push
jle
xchg
cwtl
aaa
add
jge
dec
je
xchg
imul
pop
sub
xchg
ret
hlt
xchg
push
dec
or
popf
xchg
lret
inc
call
xchg
orl
fmul
icebp
xchg
xchg
or
pop
les
addb
les
mov
mov
shrl
mov
xor
adc
xor
add
pop
dec
mov
movsb
in
loop
ja
stc
sub
lcall
xor
sub
sub
lods
loopne
orl
notb
lret
sbb
aas
test
repnz
push
enter
cwtl
dec
mov
xlat
add
dec
adc
cwtl
cli
pushf
hlt
adc
cli
popa
adc
cmpsl
movsb
rorl
cld
and
divb
xchg
mov
js
inc
mov
cmpb
sub
jg
hlt
rep
or
les
mulb
xchg
or
mov
scas
jecxz
lea
clc
ds
shlb
mov
jbe
es
cs
jle
mov
in
lret
xchg
clc
outsl
testb
sbb
push
fidivrs
pop
mov
dec
xor
es
sbb
je
test
icebp
sti
enter
mov
jg
ficoms
pop
js
je
icebp
fisttps
inc
pop
inc
cmpsb
imul
mov
jle
loopne
xchg
jae
push
cli
jge
fcmovnbe
sahf
pop
addr16
mov
jg
cmpsb
pop
mov
jns
push
inc
mov
ja
enter
inc
sub
into
inc
ljmp
or
out
scas
adc
loope
or
icebp
shll
jle
aad
data16
jae
push
or
cmpb
cs
out
sbb
iret
mov
outsl
sub
popa
sarb
repz
mov
cltd
mov
daa
scas
enter
notb
mov
pop
mov
inc
jbe
adc
pop
pop
cmpsl
jp
push
mov
adc
mov
push
fcmovnb
push
xor
leave
out
addb
pop
lcall
inc
loopne
mov
out
xlat
std
and
ss
dec
xchg
fwait
and
jmp
xchg
pop
lea
xchg
inc
adc
or
cmp
enter
test
in
and
mov
mov
lock
rcr
push
popa
ficompl
dec
mov
loope
mov
jns
and
mov
std
or
dec
fninit
dec
jno
pop
jnp
sub
into
sbb
mov
jno
sbb
push
xor
or
xchg
mov
sub
adc
jbe
mov
pop
fs
addr16
mov
jle
scas
jmp
mov
mov
adc
ja
mov
in
inc
push
out
ret
jne
dec
xchg
negl
mov
sar
sbb
xchg
adc
insb
pop
movsl
insb
or
incl
mov
movsb
push
das
add
add
enter
fwait
push
int
dec
dec
push
adc
and
ror
pop
pop
xchg
shll
adc
aad
jo
sub
jne
popf
xlat
push
add
adc
je
roll
fidivrl
pop
arpl
dec
add
sub
jbe
add
pop
fwait
ss
jne
jp
ljmp
push
pushfw
sub
mov
jle
xchg
lock
aad
xor
mov
push
call
cmp
push
jae
sbb
fdivs
ret
stc
jnp
das
mov
dec
mov
int3
add
rol
inc
jo
push
mov
cltd
shr
cmp
mov
jne
sbb
rdtsc
add
aas
cltd
xor
push
mov
dec
mov
xchg
cmp
enter
or
push
cli
imul
cld
sub
pushf
les
xchg
je
push
ss
test
rclb
out
cltd
inc
mov
aam
push
xchg
test
sbb
scas
ja
insb
faddp
shlb
jbe
cmp
sti
out
insb
push
push
mov
xchg
and
ror
arpl
inc
xor
insl
sub
lea
fisttpl
outsb
sbb
aad
push
sub
cmp
aas
or
rcrb
lret
xor
or
sbb
aas
rolb
push
jb
jo
xor
rcll
sbb
cmp
or
popa
jno
or
lahf
movsb
and
int
dec
mov
mov
xor
leave
and
add
out
xor
pop
movsb
outsl
push
jne
cmp
jp
add
shll
xor
cmp
and
icebp
gs
or
cmp
xor
in
jno
jge
inc
cmpsb
and
lret
scas
xchg
pop
mov
lret
filds
push
sbb
enter
fnsave
mov
pushf
xor
cmp
aas
test
pushf
int
mov
xchg
jecxz
jns
test
inc
test
mov
incl
mov
add
inc
jg
dec
ret
out
inc
gs
mov
sti
jne
or
or
adc
inc
pop
es
cmp
addr16
clc
repnz
push
sbb
insb
push
mov
add
mov
out
lock
inc
int
and
pop
es
cmp
dec
stc
jl
mov
mov
sar
stos
dec
iret
mov
imul
sbb
fcoms
scas
hlt
dec
test
sbbl
scas
mov
mov
lcall
loope
cmp
aam
imul
xor
mov
push
pusha
inc
add
adc
mov
shll
cmp
dec
scas
aam
inc
rolb
cmpsl
push
ja
push
aad
sub
push
rcll
xlat
jl
inc
imul
test
negb
dec
pop
ljmp
call
test
in
aas
mov
inc
stos
sub
or
fbstp
shlb
xor
stos
subb
fwait
sti
fstpt
addr16
dec
fildl
or
pop
idiv
addl
push
or
movsl
lea
fbld
sub
inc
insb
mov
sbb
xor
cli
enter
cmp
add
mov
xor
mov
andl
xchg
jle
gs
inc
push
push
addr16
jp
xor
and
out
adc
loope
xor
xor
add
inc
sbb
jno
mov
xlat
sub
lret
lcall
push
loope
rcll
insl
push
fcomi
push
mov
scas
push
hlt
rorb
inc
lods
pop
nop
mov
push
sbb
movsb
hlt
dec
dec
arpl
sbb
xchg
add
mov
ret
hlt
mov
fs
xor
mov
jno
add
add
pop
lods
pop
in
lods
test
and
rorl
xchg
mov
lds
mov
stos
hlt
into
jmp
xchg
ret
sbb
loope
cs
sub
xchg
push
xor
insb
aas
xor
cld
out
ret
aas
ja
adc
dec
cli
into
aas
adc
shlb
outsb
xchg
in
movsl
std
add
sbb
addr16
out
enter
mov
sub
mov
add
push
jp
xchg
fiadds
and
fdivrs
mov
lods
cmp
cwtl
and
mov
mov
xchg
mov
fcompl
clc
cmp
in
inc
mov
into
fidivrl
shl
jbe
adc
cmp
cmp
inc
and
and
sub
cmpsl
cs
push
sbb
cs
push
inc
iret
jge
add
push
lcall
in
bound
xor
nop
xchg
xchg
push
jmp
dec
xchg
xchg
push
inc
lods
adc
ret
arpl
push
test
mov
cmp
rcr
gs
mov
mov
inc
xchg
lea
cli
loope
scas
sbb
mov
add
jne
and
mov
mul
lods
icebp
int
andl
sub
push
ficoms
ljmp
inc
adc
adcb
insb
lret
or
aas
dec
pop
and
dec
or
sub
push
in
mov
push
inc
jnp
jge
mov
or
mov
inc
cmp
inc
test
stc
cltd
outsl
or
inc
lahf
outsl
sub
out
xchg
xchg
sbb
mov
cmc
jp
ja
sahf
out
test
cmpsb
loopne
and
cli
inc
mov
dec
xchg
push
lods
lret
or
mov
dec
mov
mov
aam
lock
xchg
pop
adc
movsl
xchg
enter
fiadds
test
and
cmp
dec
bound
jb
daa
imul
adc
xchg
addr16
pop
sbb
push
xlat
sbb
dec
push
jne
push
std
stos
imull
inc
sbb
push
dec
lea
and
mov
sub
adc
pusha
mov
jne
dec
stc
xor
int
add
lret
push
mov
mov
pop
or
and
jbe
aas
testb
sub
test
outsb
icebp
gs
movb
pushf
icebp
lret
out
add
jae
testl
push
xchg
mull
adcl
test
aad
push
inc
fbstp
scas
dec
es
xchg
fldcw
xchg
cltd
mov
cmp
jb
cmp
sub
jae
es
mov
sbb
hlt
dec
mov
loope
mov
dec
decl
aam
ds
ficoms
jbe
fistps
out
mov
add
fistpll
mov
pop
out
pop
push
call
push
push
dec
or
jns
cwtl
push
aam
cmp
mov
outsl
mov
jno
cmovp
adc
std
or
fstpt
cmovge
pop
or
and
cld
inc
mov
sub
inc
in
mov
cmp
outsl
adc
fwait
dec
cli
fnstsw
into
scas
imul
jl
mov
outsl
shll
cmpsb
xchg
jp
pop
jge
icebp
aad
stc
inc
mov
xchg
inc
add
mov
inc
mov
test
adc
jmp
mov
sbb
fwait
sub
mov
add
loop
dec
jle
xchg
pushf
stc
add
jmp
inc
push
and
xchg
or
adc
cmp
repnz
stos
cs
mov
add
divb
mov
xor
dec
test
dec
mov
loop
sahf
imul
es
hlt
mov
notb
push
aas
pop
daa
push
pop
pushf
nop
stc
sub
cltd
xor
stc
mov
pop
cmpsl
and
and
xlat
fs
jo
outsb
sub
xorb
and
in
imul
aaa
jl
jle
add
sbb
lahf
stc
lea
jns
adc
fs
and
mov
test
int3
jnp
inc
repnz
and
mov
fnsave
shl
cli
aad
stc
daa
pusha
adc
call
pop
ret
in
call
xchg
sbb
insb
clc
cmp
stos
test
cld
dec
stos
rolb
inc
cmpsl
scas
cmpsb
jmp
mov
jno
fwait
xor
and
loop
push
or
add
mov
add
or
mov
add
pop
out
pushf
sti
sahf
nop
stos
add
xor
and
mov
hlt
or
add
push
dec
je
shlb
fmuls
lcall
adc
cmp
lcall
jl
cli
mov
push
in
jmp
pop
add
push
notl
mov
jb
outsl
xlat
sub
decb
insl
xor
clc
mov
cwtl
sbb
in
or
test
or
jb
iret
inc
popl
loope
sti
scas
sbb
lds
xchg
sbbb
mov
inc
mov
xchg
mov
and
push
xchg
jbe
scas
or
sahf
fwait
lret
dec
shl
fwait
jp
push
in
sbb
jmp
mov
ljmp
pop
in
pop
push
testl
push
insl
or
adc
dec
jns
rorl
adc
test
mov
and
push
inc
in
mov
lods
clc
fimull
xchg
sbb
xlat
popf
out
lahf
jg
sub
mov
out
mov
or
mov
fcoms
dec
cmp
jecxz
sbbl
mov
les
movsl
mov
sub
mov
mov
je
lock
pop
shrl
pop
jg
mov
out
xchg
mov
fwait
sahf
sbb
xchg
mov
mov
imul
and
in
and
mov
lahf
mov
inc
and
jge
imul
mov
or
push
scas
dec
or
enter
inc
push
jecxz
jns
pop
scas
loope
sbb
dec
inc
cmp
mov
lahf
lock
sub
hlt
leave
mov
mov
pop
dec
xlat
jmp
fimull
and
push
mov
cld
sub
inc
mov
cmp
mov
rcrb
and
pop
jl
cmc
pop
sub
rclb
mov
xlat
leave
ret
xchg
cltd
cmp
adc
xchg
sbb
mov
jmp
scas
mov
test
cmpsb
push
jmp
push
cmpsb
push
inc
dec
lea
loope
in
jl
jne
stos
loop
ss
xorb
xor
inc
pop
jg
scas
pop
mov
adc
sub
stos
hlt
popa
negl
pop
es
mov
cltd
movsl
xchg
sub
shrb
adc
and
cmp
mov
ja
add
push
lret
xchg
lods
xchg
push
jle
push
out
jnp
mov
adc
dec
push
dec
sahf
jae
mov
sub
cmpsb
mov
cwtl
jae
or
mov
pusha
repz
sar
hlt
jge
jmp
cmc
push
les
xor
sub
ret
in
xchg
dec
mov
scas
or
jnp
cld
imul
jp
push
xchg
jp
xchg
pop
insl
xchg
xchg
in
leave
and
sbb
fistps
clc
add
sub
insb
loopne
dec
rcrl
cmp
add
movsb
add
fnstenv
xchg
mov
scas
insl
cmp
inc
mov
lahf
ret
dec
xorb
sti
jmp
cwtl
sub
xor
shrd
pusha
cmp
repnz
xchg
lret
pop
in
adc
into
stc
pop
sbb
mov
mov
arpl
or
jnp
add
add
and
jne
sub
jmp
add
icebp
xchg
or
inc
jmp
sub
and
xchg
add
inc
std
pop
out
imul
imul
xchg
jge
loope
push
mov
mov
cmp
ja
xchg
dec
cmc
jmp
jbe
mov
cmpl
jp
pop
fs
mov
xchg
iret
xchg
lods
scas
out
xchg
sub
cmpsl
sbb
push
daa
insb
adc
stc
test
and
pop
add
fldenv
xchg
jp
mov
add
dec
mov
push
dec
mov
pop
pop
mov
jge
mov
inc
pop
outsl
enter
jp
js
sbb
mov
cld
pop
in
jmp
fcomp
lods
lods
push
scas
ds
clc
xchg
fidivrl
rorl
jp
ja
and
cld
inc
test
pop
dec
cmp
add
add
adc
orb
gs
sub
lods
clc
aaa
xchg
arpl
fwait
pop
push
mov
inc
aad
insl
or
push
in
pusha
xor
push
movsb
mov
inc
lcall
ja
repz
mov
jmp
push
loop
stc
pop
sbb
adc
fsts
pusha
decl
sub
stos
mov
pushf
xor
cmpsl
cs
scas
cmp
pop
inc
xorl
loop
cli
fisubrl
xchg
adc
je
repz
jmp
rcrb
movb
cmp
adc
imul
mov
pop
out
mov
and
and
aam
shll
fcomps
movsb
aad
sbb
sarb
jo
cmp
out
and
cmp
iret
push
repnz
xchg
popa
inc
push
push
mov
jl
jno
fisubs
lret
sbb
roll
fimuls
in
in
or
mov
enter
jns
mov
pop
gs
cmpb
cmp
cld
jbe
mov
or
sbb
gs
push
std
and
push
ss
test
or
enter
cmpb
je
add
cltd
out
pop
inc
mov
cmp
icebp
sbb
hlt
testb
clc
scas
je
ret
lock
jg
push
repnz
push
aaa
push
xchg
outsl
jae
sarl
aaa
call
inc
ret
or
pop
and
pop
out
pop
les
repz
rcrb
pop
mov
insb
mov
jecxz
push
stc
add
xchg
test
jo
xor
mov
sub
mov
xchg
mov
mov
cmp
fnstcw
nop
testl
add
jns
std
ja
xchg
lods
loopne
lcall
fsubrl
cld
and
cmp
in
and
adc
idivl
or
lock
idiv
jo
pop
fidivs
in
stos
xchg
movsl
fsts
stos
and
stos
shl
mov
test
js
push
or
bound
rclb
mov
inc
add
inc
iret
mov
push
add
jp
sbb
mulb
or
cwtl
iret
das
or
and
and
mov
scas
pop
mov
xlat
movsb
pop
mov
or
arpl
sbb
int3
adc
push
inc
xor
int3
xlat
mov
or
jae
imul
xchg
ljmp
sbb
stc
and
aad
test
push
das
jle
mov
into
mov
notl
xor
aad
adc
or
xlat
sbb
loop
scas
fistpl
cmp
ds
xchg
inc
es
daa
sarl
push
xor
out
andl
dec
jno
cmp
mov
inc
mov
ds
or
mov
push
lods
jns
sbb
mov
icebp
rolb
xchg
out
insl
mov
out
jmp
sub
sub
mov
shr
jne
push
and
dec
test
in
cld
movsl
vcvtsi2ssl
mov
faddl
in
xchg
sub
push
cmp
out
push
xor
dec
test
mov
xor
movl
pop
daa
and
outsl
adc
adc
jae
outsl
or
out
mov
inc
dec
enter
adc
sub
nop
push
pop
std
or
outsb
adc
xchg
adc
rcll
push
adc
sub
pop
mov
xor
push
mov
mov
test
or
aad
jmp
and
mov
jbe
xchg
enter
addl
neg
sti
testl
dec
fdivl
out
sbb
xchg
lret
jbe
sub
mov
mov
mov
push
adc
jg
iret
ds
jecxz
xchg
mov
inc
iret
hlt
es
mov
add
sbb
sbbl
xchg
inc
icebp
push
mov
or
xchg
aaa
stos
xchg
cli
call
imul
movsb
int3
clc
adc
pop
fldl
pusha
pop
fcomip
jge
test
mov
mov
xor
mov
loopne
repnz
repnz
mov
in
and
xor
pop
shll
sub
hlt
dec
mov
fwait
push
push
out
and
pop
cli
das
cld
inc
sbb
ret
rorl
iret
sub
nop
sarb
push
add
test
xor
and
add
add
pushf
sti
mov
fstps
cmc
dec
fbstp
cwtl
arpl
or
stos
es
mov
jno
out
xchg
aad
arpl
inc
mov
movsb
push
mov
lods
rcll
xor
xor
mov
bound
lock
outsl
add
lods
push
out
faddl
pop
hlt
xchg
inc
mov
and
scas
out
adc
mov
mov
sbb
xchg
sub
xor
bound
xchg
outsb
pop
dec
clc
or
cmp
sbb
mov
pushl
lahf
loope
aam
stos
xchg
call
push
fwait
lret
cmp
mov
popf
dec
cmp
jg
fsubrs
dec
or
jp
mov
mov
stos
mov
cmp
and
mov
mov
lods
xchg
pop
les
adc
arpl
cs
or
sub
mov
repnz
jb
je
lock
rcl
mov
int3
mov
mov
arpl
xchg
add
bound
xor
inc
push
xor
bound
sub
das
lret
scas
xchg
out
fbstp
ret
aam
nop
sti
std
jmp
adc
imul
fadds
or
cmp
sub
mov
daa
mov
and
sbb
xor
clc
jmp
repnz
sti
push
and
das
push
nop
aad
aas
repnz
mov
dec
push
inc
negl
jge
sbb
push
sti
div
xchg
push
jmp
push
xchg
cmp
fwait
call
pop
out
imul
mov
rorb
daa
mov
in
fcmovu
call
push
jno
jbe
sahf
adc
xchg
mov
fs
xor
lahf
sub
insb
js
or
inc
stos
out
cmp
jle
fiadds
ret
stc
lods
fstl
or
out
nop
xor
push
xchg
xchg
push
push
lock
or
sub
xchg
mov
sbb
jno
jbe
fisubs
jmp
mov
in
mov
clc
xchg
in
int3
dec
push
orl
mov
push
or
movsb
jp
jmp
or
test
ja
sbb
outsl
cli
xor
or
cmp
push
push
adc
fisubrs
pop
or
mov
mov
pop
push
or
xchg
dec
fnstenv
rolb
dec
xor
sub
push
xor
mov
subl
mov
rep
jnp
xlat
fwait
mov
and
pop
jbe
sahf
mov
or
stc
shl
pop
inc
xlat
sub
mov
fnsave
sub
bound
hlt
pop
loopne
add
xor
mov
jno
aas
dec
out
sbb
mov
sbb
push
jg
shlb
push
mov
inc
andb
and
add
lock
pop
jmp
cltd
dec
mov
stc
lret
mov
push
sbb
testb
dec
jmp
pop
outsb
lcall
sbb
in
out
out
call
pushl
outsl
ret
xchg
rcrb
lea
pmaxsw
sub
cli
sub
lahf
ss
stos
incl
push
and
movsl
push
in
repz
add
es
xor
js
subl
jp
stc
rcrl
movl
jae
xchg
push
cmc
es
imul
imul
cmpsl
rorb
xor
and
xchg
fwait
gs
push
dec
jns
mov
xchg
cmp
test
xor
ficompl
test
mov
jmp
jmp
push
jg
and
test
xchg
sub
or
fs
jle
rep
lea
inc
sbb
lods
aam
loopne
addl
lods
mov
inc
cmp
mov
fildl
inc
mov
mov
imul
sar
or
jne
addr16
repz
and
push
mov
nop
dec
xchg
ret
add
lret
sahf
iret
sub
or
popf
outsb
divb
cmpsl
outsb
mov
lcall
cmp
cmp
leave
leave
out
test
test
xor
out
push
fcoml
cltd
mov
inc
jae
lods
call
cwtl
es
insb
sub
xor
xchg
inc
cmp
lahf
xchg
jmp
gs
subl
mov
inc
mov
and
nop
cmpsl
push
pop
sub
pop
stc
jbe
cli
pop
sub
mov
push
mov
and
fidivrs
push
lcall
jnp
pop
sarb
lds
ret
test
insl
stos
or
mov
bound
mov
mov
cmp
mov
mov
rcll
out
lods
jno
jge
push
movsl
push
in
daa
xlat
out
ret
push
mov
add
xor
adc
mov
inc
test
and
jo
ret
jg
lret
xchg
mov
rcll
xchg
mov
pop
pop
or
sbb
adc
add
imul
stos
negb
aas
mov
adc
movsl
out
int
or
insl
dec
push
jge
mov
loopne
mov
pop
xchg
sub
mov
xchg
and
mov
daa
jb
int
arpl
mov
xchg
repz
loopne
ja
mov
fisubl
jp
jno
adc
out
lahf
xchg
lods
or
jle
jno
shrb
xor
xor
jno
idivl
mov
add
sub
dec
popa
ds
mov
fbld
lcall
sbb
movsb
int3
in
addl
in
adc
push
pushf
pushf
imul
or
pop
fcompl
scas
jle
lock
cmp
scas
shr
dec
pop
aam
and
aam
mov
decl
xchg
loope
lods
push
dec
int3
add
push
shll
inc
cmp
xor
push
fsubl
incb
jne
cmp
fists
testb
pop
mov
cmp
or
movsl
jnp
push
imull
xchg
xor
pop
cmp
cs
clc
cmpsb
mov
inc
ss
cli
mov
xchg
jb
sub
loop
push
jae
or
add
push
lock
popa
stc
cmc
imul
in
stos
mov
cmp
mov
out
movsl
push
cs
dec
sbb
fs
jge
data16
test
inc
mov
adc
popl
cmpsb
or
sub
imul
shlb
jmp
lret
cld
push
jbe
stos
sbb
xor
into
or
push
dec
sbb
sbb
subl
sub
xor
pop
jno
aas
repnz
loope
push
push
inc
jmp
repnz
rcrb
popa
and
fisttpll
xchg
ret
mov
add
sahf
mov
sbb
lods
ss
mov
data16
xchg
mov
or
xchg
cltd
lcall
mov
mov
mov
push
daa
and
jb
std
mov
inc
orl
sahf
xchg
pop
or
sbb
out
pop
fiaddl
gs
andb
cmpsb
call
pusha
fwait
call
pushf
ljmp
fwait
mov
dec
mov
test
clc
add
mov
daa
mov
mov
pop
jle,pn
dec
daa
pop
sbbl
out
cmp
cmp
fbld
insl
adc
mov
ficomps
dec
sbb
push
mov
aam
rcrl
adc
xchg
cli
sub
sub
push
or
pop
adc
lahf
repnz
aas
pop
sub
xor
inc
dec
adcb
inc
and
scas
pop
pop
push
popf
das
loop
or
add
test
js
idivl
xchg
xchg
lahf
aas
call
in
jns
test
scas
pop
mov
sub
cmp
and
cmc
cld
mov
filds
int
and
xorb
jmp
popf
std
mov
je
addr16
jno
pop
in
pop
cmovo
mov
xchg
push
push
dec
push
loope
pop
lods
sbb
dec
mov
mov
adc
and
push
xchg
jne
adc
xchg
fmul
mov
nop
sub
mov
mov
cli
inc
fdivrs
leave
pop
inc
push
rcrb
sub
xchg
add
ja
nop
insl
lds
inc
add
xor
mov
insb
fwait
and
loop
in
xor
lahf
jg
mov
test
mov
enter
add
cli
xchg
fs
lods
push
inc
rorl
test
data16
fwait
dec
out
fimull
push
sbb
cld
dec
leave
out
adc
cmpsb
push
shlb
aam
js
jo
inc
or
lcall
mull
aad
jecxz
push
mov
and
push
dec
jno
mov
insb
imul
ljmp
push
mov
fsubl
xor
fildl
jns
lods
arpl
xchg
push
cmp
repz
ret
push
fbstp
jno
mov
imul
xor
loopne
dec
add
lcall
mov
sti
out
mov
cmovno
xor
cmp
adc
dec
int
pop
add
out
ss
mov
jl
push
sbb
push
push
sbb
dec
mov
xor
jge
mov
mov
lret
test
bswap
sbb
mov
fldl
fidivl
mov
repz
cmp
push
hlt
mov
add
das
data16
pop
mov
jb
dec
lods
stc
mov
xchg
dec
ja
sub
or
movsb
and
sub
sbb
iret
ja
cmp
jae
mov
add
jle
outsl
ljmp
xchg
lret
mov
inc
test
mov
out
lret
pop
jmp
push
ds
sub
lret
ficoml
or
inc
test
jbe
ret
xor
xor
out
or
sub
out
cld
nop
scas
inc
dec
inc
sbb
cltd
and
ficompl
mov
aam
sbbl
sbb
pop
stos
add
sub
mov
jbe
mov
in
or
cmc
scas
mov
and
cli
lret
pop
popa
push
enter
sub
inc
jne
dec
fdivl
jmp
imul
fxam
pop
inc
nop
mov
stos
dec
cmc
lahf
negb
jbe
cwtl
outsb
popl
add
adc
sbb
inc
sub
mov
stos
aad
rorb
pop
ja
sbb
imul
push
add
imul
inc
lods
jo
add
pop
adc
add
push
jecxz
popf
repnz
daa
xchg
pop
dec
fs
fxch
push
xchg
int3
out
jl
in
iret
shl
jmp
add
mov
sbb
dec
iret
js
or
sub
mov
arpl
xor
mov
and
rcl
push
dec
dec
add
jmp
stos
inc
pop
int
sub
mov
add
jecxz
into
xchg
inc
cld
mov
fstpt
or
sub
lret
ret
nop
imul
mov
test
idivl
imul
jge
jl
inc
push
outsl
es
insb
mov
or
sub
xlat
out
mov
jle
mov
jecxz
jno
lds
cli
dec
fnstenv
and
callw
dec
loop
daa
scas
add
pushf
outsl
pop
orl
enter
pop
lock
add
inc
adcb
daa
mov
push
or
mov
and
test
lea
fisubrs
jae
fdivl
insb
addl
and
mov
pushl
xchg
push
out
int
fldl
add
inc
jmp
add
test
mov
mov
adc
mov
jl
adc
fimull
jae
xchg
int
sub
jp
mov
mov
leave
lahf
pop
cmp
dec
daa
aaa
and
cltd
jbe
test
movsl
mov
or
lret
inc
aas
test
and
xor
mov
aam
mov
ret
mov
repnz
fimull
loopne
xchg
jmp
fisubl
jl
sti
adc
divl
out
das
dec
pop
mov
jo
test
mov
lea
stos
out
mov
fs
mov
push
and
fcomi
dec
and
maskmovq
negl
inc
int
jl
in
iret
dec
adc
leave
repnz
lock
fwait
rorl
pop
test
mov
and
ret
push
dec
call
clc
hlt
jnp
das
pushf
arpl
mov
imul
nop
sbb
xchg
pop
pop
mov
mov
call
mov
jnp
mov
dec
dec
ja
cmp
mov
and
cmp
loopne
mov
dec
in
inc
dec
fs
cld
test
fldt
fidivl
xorl
ss
fists
adc
jge
outsb
xchg
jns
mov
aad
fistps
rcrb
aam
pop
pop
xchg
aaa
int3
push
fistl
jbe
mov
mov
rcrl
or
gs
mov
fisubrs
jecxz
or
sbb
fisubl
lods
cmp
fidivrs
gs
imul
cld
into
and
add
rolb
push
add
mov
out
imul
and
popa
pop
adc
sbb
or
ret
mov
inc
mov
daa
pop
rcrb
pushf
leave
int3
mov
into
andl
add
adc
insb
or
xchg
pop
and
push
push
dec
in
enter
std
mov
push
push
repnz
stos
ja
jo
xchg
enter
imul
movsb
cmp
or
mov
cmp
movsl
push
fmuls
sub
and
aas
lret
les
ret
out
iret
lret
mov
xchg
dec
adc
xchg
xchg
adc
sub
in
in
jg
jae
repz
xor
jo
scas
adc
dec
repnz
add
mov
sub
inc
mov
xlat
stos
jecxz
jp
sarb
mov
cmovae
push
inc
imul
sbb
pop
sbb
and
mov
andb
loop
loop
cmp
aaa
adcl
lods
out
sbb
add
cmpsb
inc
mov
das
stos
mov
jno
jbe
mov
popa
fst
ja
ss
ret
mov
fmull
ficoml
mov
in
lahf
mov
xchg
xchg
leave
push
and
or
pop
xor
cld
dec
mov
xor
xor
ret
sub
add
pushf
ret
loopne
mov
sbb
sub
std
adc
xor
ret
jb
addb
jmp
mov
xchg
lea
jmp
mov
add
add
mov
cmp
xor
les
cmc
and
es
push
jg
mov
movl
xchg
mov
sbb
insb
lret
sti
imul
enterw
add
jbe
pop
cmpsb
jle
xchg
adc
mov
lea
push
icebp
out
mov
loop
in
repnz
arpl
mov
sahf
lods
pop
xor
pop
mov
dec
in
fstps
dec
inc
roll
xchg
jb
lea
lcall
adc
sbb
xor
iret
les
jle
repnz
add
sbb
sbb
push
sub
push
mov
or
pop
pushf
and
fwait
xchg
sahf
fistpl
out
xchg
mov
xchg
ja
mov
jne
mov
out
or
adc
adc
cmpsl
ljmp
xchg
sti
push
cmp
mov
ficomps
into
push
nop
shl
cmp
std
xchg
loope
mov
or
test
and
dec
add
xchg
pop
shl
stos
stc
std
rol
dec
push
mov
sti
xchg
cld
sub
and
push
mov
loop
dec
cmp
or
adcb
scas
in
pop
orl
out
fstps
popa
inc
int
or
mov
mov
orb
jno
mov
adc
dec
mov
pop
xchg
decl
jnp
addl
or
mov
int3
xchg
loopne
mov
movsl
imul
push
test
cli
pop
pop
pop
mov
push
pop
pop
test
lret
cltd
fstps
and
les
pop
es
adc
jmp
fwait
stc
repz
push
push
xor
adc
ret
push
mov
aam
fidivrl
test
mov
dec
adcb
pop
inc
sub
jg
adc
add
imul
xchg
int
lahf
adc
fnstenv
addr16
mov
loop
cmove
imul
mov
fwait
mov
sahf
add
dec
lret
jg
xor
sub
sbb
icebp
adcb
popl
lock
sbb
mov
testl
and
popf
pop
pop
adc
sub
cmp
movb
cmp
pop
ret
vphaddudq
pushf
fs
add
je
and
sub
fsts
mov
mov
jp
hlt
or
xor
push
jmp
xchg
adc
bound
dec
lock
mov
mov
test
jnp
dec
inc
sbb
dec
fwait
mov
pop
dec
adc
int3
pushl
in
pop
iret
dec
mov
jbe
inc
stos
push
and
xchg
mov
out
and
xchg
sbb
add
jle
sub
dec
dec
incl
sbb
pop
das
cld
idiv
or
mov
push
fidivrl
dec
sarb
popf
xor
mull
test
scas
jecxz
mov
dec
fldcw
dec
daa
leave
mov
inc
cmpsl
mov
movsl
ret
cli
sbb
movsb
enter
xchg
mov
cld
loop
sub
fisubl
movsb
ljmp
jge
adc
add
push
xlat
mov
cmp
stos
pop
popf
sub
lock
es
ljmp
stos
es
mov
imull
sbb
push
xor
jmp
repz
filds
adc
sahf
xor
scas
in
outsb
test
mov
shrl
clc
repnz
popa
sub
mov
pop
cmp
dec
mov
icebp
push
iret
mov
imul
mov
or
or
daa
xor
int
mov
imul
xchg
mov
int3
ret
rolb
mov
inc
fnstsw
inc
pushf
cmc
movl
test
cmp
sbb
idiv
aas
icebp
mov
dec
pop
mov
inc
sub
mov
stos
and
cmp
out
cmp
mov
xor
incb
push
pop
in
daa
inc
lods
push
add
mov
mov
jbe
loopne
xchg
fwait
movsb
pop
add
insl
and
lods
push
out
jl
jae
insl
ss
loope
inc
mov
xorl
pop
cmp
jno
stc
insb
cmp
mov
cwtl
push
push
fs
enter
lock
pushf
jg
and
shlb
scas
add
filds
outsb
mov
test
pushf
or
inc
cmp
cmp
stos
fxtract
jp
or
push
icebp
movb
rorb
fbstp
loopne
inc
or
je
dec
or
dec
int
scas
push
pop
and
js
xchg
out
dec
repz
dec
fucomip
ds
lods
nop
popa
xchg
add
scas
xorl
jno
jns
nopl
mov
sbb
fdivl
aad
ds
jo
pushf
outsb
fcmovnu
movsl
sbb
sahf
xchg
xlat
sub
icebp
sbb
sub
and
insl
ljmp
sbb
stos
pop
in
insb
xor
jno
mov
add
mov
mov
cld
and
sub
xchg
testl
outsl
cmpsl
push
xchg
push
lahf
fisttpll
mov
cmp
adc
lahf
pushw
sbb
jne
bound
orl
adc
lock
xor
cmp
xlat
xorl
int
in
inc
notl
cmpsb
movsl
or
divb
clc
mov
add
or
in
fcmovnb
cltd
aaa
inc
cmp
sub
ljmp
fucomip
pop
xchg
mov
adc
incl
fwait
sti
and
sbb
ficompl
sub
push
cmp
xchg
fwait
xor
and
icebp
and
or
sbb
cmp
pop
scas
or
push
and
loopne
cltd
sbb
out
adc
add
repz
mov
sahf
push
push
add
push
mov
push
imul
icebp
sub
mov
icebp
jno
mov
in
int3
loopne
pusha
inc
test
orb
push
pop
addr16
adc
call
pop
sti
repz
lcall
outsl
pop
mov
sub
lods
bound
mov
cld
clc
test
push
jp
icebp
out
xor
xchg
pop
imul
scas
cmp
stc
testl
cmpsb
xchg
and
data16
inc
gs
clc
xor
ja
out
stc
popl
xor
pop
pop
mov
ljmp
sub
jo
mov
daa
cmc
sbb
js
inc
or
mov
repz
adc
mov
lods
xor
js
std
fwait
clc
insb
negl
loopne
arpl
mov
xor
push
ret
mov
and
stos
and
out
pop
in
jno
xchg
mov
in
frstor
lods
dec
out
mov
int3
movsb
inc
or
popl
jbe
das
setno
mov
pop
fists
repnz
dec
push
aam
nop
dec
faddl
push
in
sbb
adc
push
xor
out
pop
fsts
inc
xchg
jle
iret
test
mov
push
lcall
scas
mov
adc
sbb
lods
xor
sbb
dec
mov
fwait
or
cmpsb
pop
int3
xchg
add
fnsave
pop
sub
nop
data16
aas
ret
es
repnz
testb
pop
cld
or
jbe
mov
sbb
mov
mov
pop
pop
std
mov
rolb
stos
cmpsb
adc
ja
aam
data16
movsb
call
mov
test
sbb
mov
cmc
add
stos
lahf
push
dec
sbb
iret
dec
out
jnp
fbstp
mov
in
sub
repz
jmp
mov
inc
std
mov
jnp
cmpsb
into
sbb
xorl
jbe
rcll
mov
clc
xchg
fidivrl
xor
cli
sahf
pop
dec
in
mov
adc
ja
repz
out
leave
jns
add
mov
pop
xlat
push
loopne
test
jmp
mov
cmpsb
fsubs
jns
call
je
jne
xor
jbe
fimull
imul
lret
mov
sar
jbe
ret
sahf
sbb
mov
xchg
ror
jns
into
adc
rcrl
jnp
or
repnz
ja
mov
pusha
jae
insl
pusha
std
loopne
clc
hlt
insl
fisttps
mov
outsl
jne
aaa
pop
inc
dec
mov
jne
xchg
inc
pop
lods
mov
add
mov
insl
stc
mov
cld
lcall
test
push
lcall
inc
je
mov
ret
xchg
fiaddl
int3
in
mov
add
je
cmpsb
hlt
xchg
scas
in
sti
ss
imul
fs
aas
lods
lcall
aam
sub
jle
xchg
and
push
out
mov
adc
mov
lret
pushf
negb
add
shrb
mov
push
les
insb
out
aad
mov
outsl
jge
mov
cwtl
jb
jp
mov
dec
je
add
stc
fdivl
imul
mov
xor
inc
sub
push
sarb
mov
jg
xor
mov
test
repnz
ret
cmpsl
xchg
outsl
or
movl
andb
xchg
lock
imul
ds
or
sbb
fmul
pop
imul
pop
xchg
je
lds
popa
xchg
mov
sbb
pop
xchg
repnz
mov
cltd
xchg
leave
aam
mov
pop
imul
mov
mov
add
dec
mov
push
adc
test
into
add
mov
push
push
sbb
ja
pop
adc
incb
push
pop
jbe
leave
mov
lret
sub
jge
outsl
ds
jp
test
xor
xor
adc
mov
nop
js
add
sbb
cmp
dec
mov
aas
std
sub
push
jae
loop
testl
sbb
lods
mov
in
roll
sbb
andl
andb
sub
insb
sub
das
xor
mov
inc
jp
push
xchg
shll
push
and
push
cmp
mov
inc
and
mov
mov
arpl
pusha
shl
jmp
push
jg
ret
cmp
sbb
mov
adc
jb
adc
push
xchg
shlb
jmp
clc
push
test
movsb
push
fcompl
addl
jno
inc
aas
out
popa
es
fucomi
in
insl
dec
cmp
lods
cmp
add
and
cmp
xor
jno
fstl
mov
stc
js
xchg
frstpm(287
push
inc
pop
lcall
in
fstl
jmp
and
push
cld
jecxz
mov
jno
mov
jne
sahf
xor
nop
mov
dec
das
push
fs
pop
xor
add
xchg
mov
xchg
sub
sbb
and
repz
loopne
orl
into
sbb
xchg
addr16
pop
cmp
call
sbb
cmc
jl
cltd
push
inc
inc
cmp
inc
jb
and
mov
push
push
test
in
mov
mov
or
jbe
mov
pusha
mov
jno
push
in
cmpsl
sub
xchg
and
es
jmp
movsb
daa
mov
cmp
inc
cmp
mov
push
inc
ljmp
mov
xor
pop
test
xor
repz
in
ror
mov
xchg
sbb
daa
repz
xchg
sbb
insl
xchg
pop
xchg
lea
sub
sub
outsb
dec
push
mov
notb
push
add
push
cmp
lds
inc
repnz
ret
ds
popa
xlat
outsl
aad
push
stc
dec
xchg
fmuls
out
stos
mov
iret
push
push
push
cmpsb
dec
in
xchg
leave
push
loopne,pt
jecxz
fdivr
and
in
mov
jae
sbb
xor
sub
cmp
cmpsb
clc
and
mov
outsl
jb
outsl
ja
mov
js
adc
stc
xchg
push
data16
test
adc
sahf
xor
test
sub
adc
jno
ret
sub
bound
stos
pusha
aaa
adc
fcmovne
jg
pop
sbb
es
xchg
cmp
xor
xlat
imul
outsb
cs
push
outsb
loope
inc
loopne
rorl
leave
cld
loope
add
dec
fists
fldl
push
insl
stc
pop
dec
xchg
aad
jmp
rorl
dec
cmp
ds
imul
sub
jbe
das
adc
xor
xchg
xchg
mov
outsb
aad
push
mov
lret
mov
mov
jmp
outsb
mov
xchg
jne
add
jge
shlb
xor
sbb
insl
sbb
lds
or
xchg
sti
scas
mov
jg
push
jle
sbbb
jg
sahf
cmp
dec
scas
subl
test
fistpll
fidivrl
mov
push
mov
cmp
loope
mulb
daa
fmul
or
ret
sub
pop
mov
cwtl
adc
cmp
cmpsb
jnp
js
cmc
inc
cld
or
outsl
stos
jne
pop
cwtl
movsb
dec
clc
push
sub
ds
push
cli
into
inc
mov
xchg
mov
addl
shl
adc
adc
and
jnp
lea
pusha
jns
aad
out
les
xor
outsb
ret
push
push
mov
mov
adc
jb
sarb
pop
pop
shrl
mov
mov
inc
popa
jb
cs
sti
jge
inc
xor
mov
lods
mov
aaa
cmp
aaa
test
outsb
or
daa
jne
mov
inc
lods
adc
cs
das
mov
inc
sub
cltd
jl
out
add
aaa
aaa
cmp
add
outsb
ficoml
cmp
cli
loopne
arpl
cmpb
mov
adc
gs
and
icebp
dec
adc
push
jle
pop
cmp
fisubrs
add
jl
sti
add
jns
fadds
mov
cld
iret
cli
xchg
aas
mov
ss
xchg
stos
adc
aas
jns
xlat
cli
mov
and
push
sbb
mov
fiadds
add
outsb
cmp
mov
insl
and
lock
jl
movsl
jge
jl
push
fldl
dec
pop
jecxz
jl,pn
mov
enter
pop
cwtl
bnd
movsb
movsl
push
ljmp
ret
inc
inc
push
or
xor
gs
fcomps
jle
pop
out
inc
lock
pop
mov
aas
jns
or
leave
add
mov
insb
mov
inc
adc
and
mov
and
mov
push
pop
pop
icebp
jns
mov
push
mov
push
mov
loope
cmp
mov
ds
lea
scas
mov
pop
pop
mov
xor
and
mov
in
out
imul
test
xor
sbb
imul
jmp
jne
xchg
xchg
add
jmp
push
or
nop
mov
and
inc
mov
pop
adc
and
mov
pop
das
cmp
out
add
hlt
xchg
mov
adc
push
inc
mov
jb
inc
rcrl
mov
cltd
fcomps
xor
cmp
cs
je
cwtl
arpl
adc
orl
aam
pop
out
hlt
mov
ret
fidivrs
add
mov
inc
pop
or
rclb
iret
adc
loop,pn
decl
inc
ljmp
lea
ds
int
out
jl
xor
insl
nop
mov
inc
cltd
testb
jecxz
jmp
and
out
cmpsl
cltd
shlb
push
cli
enter
arpl
dec
insb
mov
sub
and
pop
jg
clc
inc
xor
jg
hlt
dec
push
cmp
movsb
jp
xor
inc
jo
lock
cmp
xchg
mov
pop
aas
add
jg
jge
lea
loop
int3
sbb
fwait
push
xchg
mov
lock
and
into
cltd
adc
push
inc
ret
push
push
notl
aad
adc
lcall
shrl
icebp
fcomi
stos
insb
xor
push
pop
mov
or
in
int
flds
xor
lret
bound
mov
das
jbe
cmpsb
popa
dec
nop
jg
test
push
adc
or
and
insb
lods
cld
daa
sub
ret
or
mov
js
push
je
mov
sbb
in
xchg
pusha
movsb
fisubrs
mov
add
mov
mov
iret
inc
xor
sub
es
push
mov
int3
sbb
arpl
xor
fcoml
pusha
mov
mov
xchg
aas
icebp
inc
mov
adc
sub
push
daa
out
and
xchg
leave
adc
jg
cs
pushf
xor
std
hlt
and
ficompl
pop
je
ljmp
mov
popa
push
outsb
mov
xchg
cmpl
jae
rolb
and
jnp
adc
sub
cld
push
insl
repz
iret
bound
xlat
mov
loop
in
repnz
sahf
pop
hlt
mov
cld
icebp
pop
cwtl
sub
dec
push
cmp
mov
mov
fnstcw
mov
mov
je
and
mov
mov
inc
mov
hlt
mov
mov
sub
jle
jbe
test
cmpsl
mov
and
mov
pop
mov
aam
mov
js
js
bound
mov
insl
or
aad
lods
mov
add
sbbb
mov
inc
xor
xor
mov
xchg
pop
mov
sbb
push
movsl
jmp
sarb
addb
jl
bound
xor
popa
enter
or
sbb
movsb
arpl
jl
out
and
mov
xchg
in
popa
fisttpll
adc
xor
movsb
call
testl
sbb
and
dec
dec
cld
rcpps
adc
outsl
daa
gs
aas
scas
or
mov
je
jmp
mov
pop
addl
nop
frstor
mov
xorb
inc
sub
