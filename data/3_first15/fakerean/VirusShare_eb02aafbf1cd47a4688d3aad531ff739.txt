mov
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
xor
inc
jmp
push
mov
sub
mov
xor
mov
mov
shr
movzbl
push
push
mov
shr
movzbl
push
movzbl
push
push
lea
push
push
mov
call
add
push
call
test
je
andl
lea
push
mov
call
mov
lea
push
movl
call
pop
pop
mov
xor
pop
call
leave
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
xor
cmp
je
cmp
jne
push
call
test
js
mov
mov
mov
mov
mov
lea
mov
push
lea
mov
movl
mov
mov
mov
mov
mov
movl
movl
mov
mov
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
jne
mov
push
lea
call
lea
mov
lea
lea
lea
mov
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
testl
lea
jne
mov
push
call
lea
mov
lea
lea
mov
lea
mov
add
lea
lea
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
push
call
mov
mov
test
je
mov
add
push
mov
call
add
test
jne
mov
push
call
add
mov
test
jne
test
jne
test
js
mov
mov
mov
shr
and
lea
je
lea
push
push
push
mov
movl
movl
mov
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
sub
push
mov
push
add
push
lea
mov
call
mov
call
mov
mov
and
jne
andl
push
lea
call
mov
push
call
mov
xor
push
push
push
lea
push
lea
push
mov
movl
call
add
testb
mov
jne
testb
jne
mov
mov
and
jne
mov
mov
mov
add
mov
mov
call
mov
mov
add
call
mov
mov
add
call
mov
mov
call
mov
lea
push
xor
push
lea
inc
push
movl
movl
mov
call
mov
and
mov
jne
pushl
mov
push
mov
call
lea
call
cmpl
jne
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
push
push
pushl
mov
pushl
mov
push
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
lea
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
cmp
lea
je
call
jmp
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
movzbl
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
xor
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
mov
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
mov
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
cmpl
je
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
pop
pop
pop
ret
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jmp
mov
push
push
push
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
call
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
mov
mov
call
andl
push
mov
lea
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
mov
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
jae
mov
pop
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
mov
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
cmp
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
testb
je
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
pushl
mov
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
pushl
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
call
mov
push
call
pop
mov
call
push
mov
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
cmp
jne
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
cmpl
je
pushl
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
pop
xor
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
andl
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
inc
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
push
call
mov
arpl
add
ja
xchg
jno
add
add
repnz
add
mov
fiadds
pop
add
rcll
stos
sub
push
mov
add
push
push
push
push
lea
push
push
call
add
stc
ret
cld
add
rcll
fsubs
xchg
out
mov
add
out
add
add
popa
jge
xchg
add
add
out
add
cmpl
filds
pop
mov
add
cli
add
lcall
inc
in
push
lea
push
push
push
push
lea
push
push
call
lahf
mov
add
rolw
add
add
pop
add
xchg
clc
pop
ret
add
lods
shlb
mov
fdiv
in
jo
fdiv
pop
rol
in
in
lcall
push
lea
push
lea
push
push
push
push
push
push
call
add
add
xchg
xchg
add
add
xlat
add
add
jae
addr16
cmpsb
add
add
xchg
add
leave
int
add
add
add
add
push
push
push
lea
push
push
push
push
push
push
call
imul
out
pusha
add
add
add
js
add
in
pop
jne
rolb
add
enter
push
add
ret
ret
in
loopne
push
push
lea
push
push
push
push
push
lea
push
push
push
call
into
shll
out
add
movsb
add
add
bound
add
data16
add
fldl
addb
cltd
lods
add
sub
pop
call
push
lea
push
call
add
out
add
lds
add
add
add
add
je
add
pop
xchg
je
add
pop
add
mov
cltd
scas
repnz
pop
out
ficomps
xchg
pop
add
add
add
icebp
adcl
push
add
loope
jmp
pop
repnz
shl
sarl
leave
sub
pop
push
push
push
push
push
push
push
push
call
mov
add
add
add
cmc
mov
add
push
lds
add
movsl
out
lock
rolb
mov
rolb
add
les
add
add
pop
add
iret
bound
add
add
add
pop
lods
mov
in
lcall
adc
add
lea
push
push
lea
push
push
push
call
mov
add
add
xchg
jne
mov
bound
cmc
out
mov
add
mov
add
movb
stos
cmpsl
adcb
push
jne
add
loop
clc
add
test
lock
mov
gs
lods
sub
pop
jmp
ret
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
imul
xchg
add
mov
out
loop
in
add
add
add
lcall
inc
hlt
push
push
push
push
push
push
push
push
call
lret
jl
in
xchg
test
add
add
xorl
scas
mov
add
add
lcall
pop
hlt
push
push
call
add
mov
nop
add
add
jno
add
movsb
popa
mov
roll
push
mov
jb
push
add
xchg
js
cli
add
orb
add
mov
cwtl
out
les
stos
ret
add
lcall
pop
in
push
push
push
push
push
push
push
push
push
call
fimull
add
xchg
add
add
cld
add
cld
ljmp
add
add
add
xchg
mov
add
mov
push
mov
repnz
imul
roll
addr16
add
sub
pop
add
add
push
push
call
leave
add
add
jecxz
add
divl
add
add
sahf
add
rorb
out
add
pop
shl
add
mov
add
add
add
xchg
fcmovnu
fildl
jnp
add
add
add
add
jp
add
add
add
pushf
movsb
mov
xchg
gs
pop
mov
xor
push
push
sub
push
sub
add
xor
sub
add
lea
ror
pop
add
xor
dec
lea
pop
push
push
push
push
call
pop
add
into
xchg
mov
xchg
add
add
clc
push
lcall
add
add
push
add
add
jno
scas
loopne
add
jmp
add
ja
in
lock
pushl
call
push
push
push
lea
push
push
lea
push
push
lea
push
call
push
cld
add
ljmp
jns
cltd
test
add
fbstp
mov
add
aad
pushf
in
add
mov
add
ja
movb
mov
out
xchg
add
in
cmpsb
add
add
std
addb
movsl
pop
add
cwtl
add
xchg
jbe
push
mov
add
loopne
lret
in
loopne
mov
movl
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
call
stc
xchg
add
add
add
je
cli
testb
add
jb
flds
pop
ret
ror
jp
faddl
scas
jmp
lea
xchg
iret
add
sarl
xchg
jnp
pop
jbe
xchg
scas
sarb
add
jne
jmp
add
out
pop
mov
je
cmpsb
ljmp
add
ficoml
fdivr
lcall
inc
call
mov
stos
push
push
push
lea
push
call
add
add
add
jp
imul
add
add
test
leavew
mov
push
mov
add
in
push
cwtl
add
pop
add
jno
xlat
test
sti
aam
add
add
push
add
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
loopne
mov
test
jge
add
bound
add
lock
jbe
add
flds
add
add
add
mov
in
fdivr
lcall
jne
pushl
push
push
push
lea
push
lea
push
push
push
push
push
call
pop
stos
push
add
je
add
fnstsw
add
add
push
xchg
mov
add
jb
add
int
mov
divl
jmp
pushf
push
je
roll
stos
call
test
int3
pop
stc
push
loope
test
fdivr
lcall
xor
jne
push
push
push
push
push
lea
push
call
add
add
add
add
fisubrs
scas
add
add
push
cmc
add
addl
sub
pop
pushl
push
lea
push
call
leave
mov
xchg
mov
ficoml
add
add
fidivl
popa
cltd
add
add
add
pop
arpl
add
rolb
aad
add
xchg
push
outsl
jecxz
add
lods
ficomps
pop
hlt
rol
add
faddl
insb
loope
js
add
in
clc
lcall
sub
add
xlat
mov
ror
sub
push
sub
add
ror
shl
sub
lea
pop
add
sub
pop
push
push
push
push
push
lea
push
push
call
add
add
xchg
add
add
mov
add
stc
add
add
add
icebp
add
add
lea
les
add
mov
add
add
call
lds
pushf
mov
pop
scas
mov
add
test
add
popf
push
fcmovbe
nop
sub
pop
pushl
call
push
push
push
push
lea
push
push
push
call
add
mov
push
jne
test
mov
add
call
popf
aad
add
add
mov
add
add
arpl
out
mov
add
out
les
mov
add
in
lcall
inc
push
push
rol
shr
add
push
or
inc
add
xor
sub
xor
sub
xor
pop
rol
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
xchg
add
add
add
adc
pop
jno
add
pop
add
cli
jle
fdivrs
add
lea
jle
push
test
mov
add
hlt
push
sar
loope
push
popf
rcrl
mov
add
cwtl
add
pop
push
push
push
push
push
lea
push
push
call
add
add
add
fst
xchg
add
roll
mov
add
test
add
add
add
addl
mov
les
movsb
add
add
jecxz
pop
sub
pop
push
call
push
push
push
push
push
push
push
lea
push
call
pop
aam
add
add
clc
add
add
push
xchg
jne
movsl
add
in
je
add
arpl
in
stc
in
add
mov
pop
in
ficomps
call
insb
mov
mov
push
push
call
mov
notb
add
add
movsl
mov
addb
add
into
in
imul
add
add
add
mov
add
scas
scas
add
mov
jo
xchg
add
std
faddl
mov
into
add
add
sub
pop
push
push
push
push
lea
push
lea
push
push
call
add
add
push
jnp
loop
fiaddl
mov
imul
mov
jmp
fcomps
pop
ljmp
in
mov
addr16
mov
cld
add
testb
cmpsl
add
add
xchg
mov
cmpsb
mov
ror
out
loopne
mov
add
arpl
stos
add
in
call
push
push
lea
push
push
push
lea
push
call
loopne
mov
fistps
cmc
push
jo
add
add
lcall
add
in
icebp
add
sub
pop
mov
push
push
call
jne
add
add
arpl
add
push
add
add
gs
add
xchg
xchg
add
add
add
add
lahf
add
add
add
push
add
lret
hlt
sub
pop
add
push
push
push
lea
push
call
add
mov
into
test
aad
cwtl
pushf
pop
add
testl
lock
add
add
add
add
add
ljmp
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
push
call
testb
stc
sti
add
add
stos
ljmp
mov
fcmovnbe
pusha
add
imul
push
addl
fiaddl
mov
cli
mov
add
add
clc
loop
mov
sub
pop
add
push
push
lea
push
call
out
xchg
pusha
imul
add
jb
add
add
mov
add
add
add
push
imul
add
cld
subl
jl
add
pushf
push
add
jecxz
cmc
add
jge
lods
add
jecxz
add
push
mov
in
hlt
lcall
xor
mov
lea
push
push
lea
push
push
push
lea
push
lea
push
call
stc
add
in
movsb
js
mov
add
movsl
clc
add
add
jo
lea
mov
mov
addl
add
enter
add
mov
add
jbe
push
mov
add
add
in
loopne
add
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
pop
pop
mov
mov
jl
aam
sarb
add
lea
mov
faddl
add
add
push
add
out
add
fcmovu
add
lock
push
push
add
add
jl
jns
pop
add
in
fcompl
mov
push
push
push
push
call
add
mov
mov
cltd
incb
sbbl
out
add
jle
mov
add
popf
popl
stc
mov
add
add
pop
mov
rolb
mov
add
lret
test
clc
add
sub
pop
xor
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
iret
jns
add
add
add
cmc
add
outsl
loop
mov
add
add
add
add
les
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
jae
add
jno
movl
clc
jae
test
movsl
add
add
mov
lret
add
push
add
out
sbbl
push
mov
add
gs
mov
gs
add
add
add
lcall
lock
lea
push
lea
push
push
push
push
call
fisttpl
pusha
xchg
testb
cli
adc
add
add
add
jle
push
add
add
mov
js
mov
mov
add
stos
pop
iret
popf
add
add
ret
add
add
add
mov
jmp
add
hlt
addr16
add
scas
popl
xchg
lcall
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
lret
add
add
test
cld
add
push
add
test
leave
push
iret
add
enter
add
add
mov
add
pop
add
call
add
mov
sub
pop
mov
xor
push
push
push
lea
push
call
add
mov
add
xchg
mov
fstps
loopne
lods
add
mov
xchg
scas
add
clc
cmpsl
add
add
sub
pop
push
push
push
call
add
aad
movsb
add
xchg
aam
jmp
ror
add
cld
add
rolb
add
add
out
jbe
sti
pop
cltd
mov
in
add
add
mov
aam
in
clc
pop
mov
push
push
push
push
push
call
add
mov
roll
enter
add
pop
add
add
xlat
mov
add
add
loope
xchg
call
lahf
mov
add
add
push
lea
push
push
call
mov
nop
jnp
add
add
mov
cmpsb
mov
add
test
mov
out
in
add
add
roll
hlt
jle
add
hlt
pop
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
lods
test
cltd
out
aad
add
jge
icebp
insb
add
add
add
popa
push
push
add
jecxz
add
add
add
popl
addr16
ljmp
jle
add
outsl
mov
imul
lea
enter
xor
rclb
lea
int
push
push
push
call
add
add
movsb
in
lret
add
cld
test
mov
jne
imul
jl
add
rcrl
mov
add
add
out
sahf
add
in
jo
pop
testl
int
mov
add
add
mov
pop
push
push
push
push
call
flds
xchg
add
add
pushf
aad
jge
xchg
add
add
imul
add
mov
push
mov
sub
in
add
cmpsl
mov
je
push
fldenv
mov
into
mov
add
pop
xchg
add
mov
add
test
fmuls
int
addb
pop
push
push
call
add
add
add
scas
lds
mov
cwtl
ja
nop
add
mov
sti
add
add
add
add
add
jno
out
add
lahf
add
cli
xchg
add
pop
hlt
push
lea
push
push
push
lea
push
push
push
call
add
aad
roll
iret
add
add
add
lds
lods
repnz
fsubrs
add
mov
bound
add
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
xchg
add
hlt
lcall
int
add
cli
cmc
lods
loop
add
lcall
cltd
rolb
add
in
xchg
push
add
add
add
xchg
fs
mov
lahf
in
cltd
mov
lret
add
xchg
jnp
add
jmp
add
add
popf
add
ret
add
add
add
push
lea
push
push
lea
push
push
call
xchg
mov
call
addr16
out
mov
add
int
jae
andb
call
addb
movsl
add
mov
orb
mov
mov
add
mov
bound
in
stos
add
jge
sub
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
pop
lret
ror
add
pop
call
test
add
rcrl
add
movsb
add
in
in
xor
push
push
push
push
lea
push
call
test
mov
add
movsl
add
jmp
jnp
add
lock
add
loopne
mov
repnz
add
add
in
in
pop
add
push
push
call
add
push
add
imul
add
add
mov
add
add
roll
add
mov
rcr
rcl
add
xchg
add
pop
push
mov
xchg
int3
imul
arpl
fldl
cmc
cltd
sub
pop
mov
push
push
push
push
call
popf
add
movb
add
add
cltd
add
adcb
add
mov
add
add
rcrl
add
pusha
add
lret
jne
mov
add
je
add
leave
add
add
scas
popa
add
sub
pop
xor
push
push
push
push
lea
push
call
lds
add
jo
mov
movl
fwait
add
add
hlt
jl
mov
xchg
add
add
add
add
add
pushf
clc
add
add
add
add
add
add
in
mov
jl
add
sub
pop
add
push
push
push
push
push
call
flds
add
subl
jns
add
xchg
mov
cmc
add
add
pusha
add
add
lods
add
add
rolb
loopne
add
add
add
push
stos
out
repnz
add
add
pop
mov
nop
add
mov
add
loope
insb
mov
mov
pop
mov
xor
push
push
push
lea
push
push
call
add
add
lock
add
pop
imul
scas
insb
add
mov
je
add
cmpsl
mov
ret
mov
add
cwtl
add
add
loop
add
add
bound
fistps
gs
fsts
xchg
jl
in
in
lcall
ret
jge
jno
push
lea
push
push
push
push
call
add
in
add
cli
lds
in
mov
add
test
add
xchg
jecxz
ficomps
jge
roll
add
add
fnstsw
in
lcall
rcll
push
call
arpl
add
add
add
add
add
add
fwait
push
xchg
ret
rcl
xchg
add
push
add
mov
add
mov
arpl
mov
fs
imul
data16
sub
pop
mov
push
push
inc
shr
shl
push
push
pop
add
ror
sub
not
sub
add
pop
rol
sub
pop
push
not
shl
pop
pushl
call
push
pop
push
push
push
sub
push
sub
add
add
inc
xor
sub
sub
inc
add
pop
sub
sub
sub
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
aad
in
les
adc
into
stos
add
pop
mov
add
mov
add
add
stc
lock
test
test
cmp
add
add
push
movl
add
jecxz
mov
add
lcall
push
xor
rol
pop
push
call
push
lea
lea
pop
mov
push
push
push
push
push
call
sbb
jmp
add
add
add
fs
movsb
sti
add
add
mov
add
add
pop
xchg
icebp
add
pusha
call
add
mov
push
out
pop
add
in
lcall
push
shl
dec
not
pop
push
push
sub
xor
pop
mov
push
rol
pop
add
push
not
rol
pop
add
push
push
push
push
push
push
push
call
fildl
pop
lret
rcll
add
add
popf
sti
mov
jae
jns
add
icebp
icebp
rolb
add
add
add
lcall
lcall
ret
cmpsl
inc
add
mov
push
push
push
push
push
push
push
push
push
call
addl
mov
add
add
cld
add
arpl
into
nop
lds
ja
jl
pop
add
mov
add
gs
add
add
shrl
loop
mov
add
add
add
js
add
add
sub
pop
xor
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
push
int
mov
mov
add
xchg
lods
add
icebp
mov
into
add
add
clc
mov
add
jmp
push
xchg
push
add
movl
jb
stc
add
ljmp
sub
pop
add
push
push
push
push
lea
push
lea
push
call
add
xchg
popa
fists
addl
add
andl
arpl
int
add
add
mov
cli
add
mov
cli
clc
hlt
arpl
je
bnd
mov
cmc
pushf
test
lcall
jne
push
rol
shr
xor
lea
pop
push
push
push
push
lea
push
push
push
push
call
movsb
stc
rclb
push
je
add
jecxz
add
out
mul
lret
add
mov
add
out
add
fs
add
fisubs
stos
mov
add
sub
pop
mov
xor
push
add
pop
add
push
dec
sub
inc
pop
pop
mov
xor
push
lea
pop
rep
push
shr
add
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
call
pop
add
test
jmp
cmpsl
loopne
add
add
add
add
sahf
add
imulb
add
add
add
mov
out
mov
mov
loopne
or
je
push
rol
dec
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
movsl
nop
add
incb
popa
add
cmc
fwait
mov
jmp
pusha
add
mov
xlat
add
add
push
test
add
scas
pop
fcmovnb
data16
add
mov
add
add
mov
stos
push
popf
sub
pop
xor
push
push
push
push
push
lea
push
call
mov
pop
xchg
cmpsl
mov
add
jae
stc
leave
mov
jle
lods
jno
les
mov
add
je
add
in
call
add
add
push
push
push
push
call
jmp
mov
jecxz
rolb
add
add
add
add
push
add
add
push
jbe
xchg
mov
add
outsl
mov
add
mov
add
fldl
fnstsw
leave
cmc
add
add
push
sbb
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
fmul
add
mov
ja
aam
jmp
xchg
pop
ja
xlat
mov
add
add
add
add
fs
pop
in
sahf
pusha
xchg
les
jae
add
xchg
add
add
ja
add
out
mov
cmpsb
add
sub
pop
add
push
push
call
add
mov
mov
idivl
mov
add
cwtl
popf
je
into
add
fcmovne
lods
rol
add
lcall
roll
add
mov
add
add
add
in
cwtl
add
out
arpl
jns
add
clc
pop
add
push
pop
push
push
push
push
push
push
call
add
imul
push
stc
out
mov
add
pop
mov
in
mov
push
je
mov
fst
add
add
ja
fisubs
add
rolb
stos
aad
jne
icebp
xlat
je
add
add
jae
lock
lcall
inc
or
or
adc
icebp
push
push
push
call
add
xlat
add
add
add
add
add
push
flds
in
filds
add
fst
add
jnp
mov
aad
test
lret
add
mov
lea
ret
add
xor
push
push
push
call
add
jecxz
flds
jnp
xchg
fs
mov
ret
enter
imul
jne
idivb
pop
add
push
push
push
push
push
push
lea
push
call
mov
jno
mov
jmp
popa
stos
add
add
add
mov
leave
add
flds
xchg
add
fdivp
add
jmp
add
add
xchg
xchg
testb
fs
pop
mov
jmp
jo
js
mov
add
roll
add
lcall
lock
push
push
push
call
add
test
xchg
mov
ljmp
cmpsb
add
mov
insb
rolb
xchg
mov
add
js
scas
cld
add
add
sarb
into
add
cld
add
div
int3
movsb
rcl
jge
sub
pop
pop
push
xor
pop
rep
mov
xor
push
lea
sub
lea
not
pop
or
je
mov
push
lea
push
call
add
enter
add
xchg
ja
push
mov
push
jmp
loopne
cmpsb
add
addb
add
add
pushf
jmp
loope
add
jno
stos
add
add
add
enter
repnz
lds
lcall
sub
push
call
push
add
fildl
adcb
pop
add
roll
stos
add
add
add
jno
add
add
add
mov
xchg
add
xchg
addr16
lods
add
lret
add
add
pop
mov
clc
add
popf
shlb
pop
mov
in
clc
lcall
movb
add
rep
push
push
push
push
push
lea
push
push
push
push
push
call
add
cld
mov
add
push
iret
loopne
push
rcll
jno
add
mov
add
stc
add
imul
add
add
arpl
mov
pop
add
out
stos
mov
add
add
mov
add
add
mov
lods
add
add
lcall
push
push
not
push
or
inc
add
xor
sub
sub
pop
xor
pop
push
push
push
push
call
fsts
nop
add
out
test
mov
stc
mov
mov
in
add
add
cmc
add
mov
ja
xchg
add
add
rolb
add
lock
lcall
push
xor
xor
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
test
add
mov
add
cli
xchg
sbbb
roll
lods
add
add
xchg
clc
add
add
sti
add
rol
std
add
add
mov
add
add
shrl
lcall
insl
hlt
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
add
and
add
add
aad
lds
jecxz
add
mov
jle
add
fucomip
add
add
lret
push
in
add
fisubrs
push
scas
add
fadds
lcall
inc
and
push
inc
shr
pop
jmp
push
inc
sub
shl
sub
pop
push
push
push
lea
push
push
call
add
jae
add
add
add
mov
cli
std
jne
nop
cmpsl
add
add
add
add
add
lcall
in
add
push
dec
sub
pop
push
push
lea
not
pop
push
push
push
push
call
jno
loopne
add
fldl
mov
fmuls
add
stos
add
fdiv
add
rolb
std
add
lods
hlt
add
cltd
push
bound
add
lods
push
add
cmpsl
jmp
jmp
loope
icebp
add
lods
add
hlt
lcall
push
push
push
call
into
mov
add
add
lods
mov
push
push
addr16
repnz
jmp
sub
pop
mov
push
inc
pop
pop
push
not
pop
pop
push
push
call
cltd
cmpb
lods
add
add
add
movb
mov
int3
add
add
add
test
add
lods
pop
out
jae
add
add
add
in
clc
lcall
push
push
push
push
push
lea
push
call
data16
add
mov
shlb
add
jl
add
aam
repnz
vminps
lods
add
xlat
add
add
add
add
mov
add
add
in
add
jo
fisubl
add
clc
fiadds
push
push
push
push
push
push
push
call
scas
les
mov
add
add
add
add
push
lret
in
ret
push
cwtl
fwait
outsl
ljmp
idiv
add
pushf
test
mov
mov
lcall
push
lea
push
push
push
push
push
call
push
push
in
insb
out
add
into
cmc
add
add
addl
add
add
add
add
testb
jge
add
jnp
mov
lods
mov
pushf
xchg
rolb
add
lcall
add
lahf
add
mov
sub
pop
ret
push
rol
shl
shr
pop
push
push
push
push
lea
push
call
add
add
lock
mov
push
xchg
mov
add
add
pop
add
aam
add
out
out
jnp
jno
add
out
push
push
add
push
sti
jp
pop
lods
add
stos
add
add
add
repnz
add
iret
add
add
test
addr16
add
addb
sub
pop
mov
add
push
push
push
call
in
lahf
cli
add
cmpsb
add
pop
add
add
add
add
imul
add
rolb
add
jecxz
add
rolb
sub
pop
push
push
push
not
shl
inc
not
pop
push
push
push
push
push
push
call
mov
add
add
add
sahf
add
push
imul
lret
fs
add
xchg
filds
mov
clc
add
add
cmpsb
add
add
push
push
push
push
call
incb
icebp
add
andb
xchg
popa
mov
add
add
out
add
addr16
popf
ljmp
add
push
add
scas
into
mov
jge
jp
add
test
test
add
add
xorl
add
lds
ljmp
pop
movl
push
push
push
lea
push
push
call
mov
add
arpl
sub
popa
aad
mov
pop
lea
roll
mov
sahf
in
add
roll
jns
jge
rolb
bound
add
lret
in
pop
addl
push
lea
push
push
push
call
bound
pop
add
fwait
add
outsl
lahf
shll
movb
mov
jns
les
add
add
leave
jb
add
mov
mov
add
cwtl
add
lock
lcall
rorb
add
add
pop
mov
push
push
push
push
push
push
push
call
add
add
mov
add
add
aam
push
lock
addr16
add
mov
ljmp
push
bound
cmpl
xchg
add
add
add
fwait
add
add
add
pop
add
jl
sub
pop
pop
pop
push
add
pop
pop
push
push
lea
push
push
push
push
call
lret
call
push
fiaddl
scas
pop
jge
cli
scas
les
mov
add
iret
mov
add
repnz
fidivrs
loop
nop
rcr
and
jno
add
fucom
pop
mov
iret
cli
add
lock
add
mov
add
add
cmc
xchg
add
add
add
call
or
and
add
add
add
add
mov
loop
add
push
lods
mov
int
xchg
test
jl
add
pop
out
add
movsl
mov
faddl
loope
rorb
arpl
push
add
clc
add
add
ja
add
cld
add
add
nop
add
add
rol
add
hlt
lcall
ret
push
push
push
push
push
push
lea
push
push
push
push
call
xchg
add
add
add
lods
fiadds
xchg
jmp
add
lahf
clc
add
push
mov
add
add
add
out
popf
sub
pop
push
push
add
inc
pop
mov
add
push
add
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
mov
je
in
add
jno
iret
mov
add
rcrb
add
add
push
adc
scas
jnp
add
add
pop
push
push
push
push
push
push
call
insb
add
mov
fabs
mov
add
add
add
bound
add
mov
jle
jbe
add
insb
add
add
mov
mov
add
add
xor
add
lcall
push
sub
add
pop
testl
push
push
lea
push
call
add
mov
add
clc
add
out
cltd
add
add
clc
imul
add
jne
add
or
iret
add
jns
bound
add
sti
loopne
sahf
add
fiadds
add
data16
fidivs
xchg
clc
in
mov
pusha
pop
add
in
lods
sub
pop
addl
push
rol
ror
pop
push
call
push
sub
not
pop
mov
push
inc
pop
pushl
push
push
push
push
lea
push
call
js
cwtl
lcall
add
aad
fldl
add
xlat
add
add
add
testb
lahf
shlb
negl
add
fwait
add
sub
pop
push
push
inc
pop
push
push
push
push
push
push
call
js
mov
add
add
jns
lahf
mov
mov
add
cmpsl
cwtl
andb
xchg
rclb
lret
fistps
add
add
add
add
test
loopne
rolb
mov
xchg
add
add
cli
mov
lcall
push
idiv
incl
test
add
shr
inc
sub
pop
pop
push
not
xor
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
mov
xchg
add
add
ficomps
scas
jp
pop
mov
ret
insb
add
add
add
add
add
pop
std
sub
pop
pop
push
not
pop
pop
push
add
sub
inc
shr
pop
leave
push
lea
push
push
lea
push
push
call
mov
roll
les
nop
in
cwtl
add
rolb
pop
add
jp
insb
flds
add
add
mov
xlat
test
fcmovbe
cltd
mov
lods
out
add
mov
mov
xchg
add
aad
xchg
add
add
in
in
lcall
add
push
push
lea
push
push
push
push
push
call
pop
add
add
sti
add
add
jmp
add
aad
loopne
push
add
lock
add
add
in
in
lcall
push
push
push
push
push
push
push
lea
push
call
cld
mov
xchg
arpl
add
fsts
test
int
add
add
lahf
add
enter
mov
mov
icebp
mov
fadds
je
add
add
add
mov
nop
in
add
in
loopne
lcall
in
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
aad
add
lods
push
push
xchg
add
push
stos
add
sahf
push
repnz
add
in
ret
popa
add
loop
pop
add
pop
ficoms
mov
add
push
out
add
xchg
roll
add
ja
add
lods
add
popa
add
xchg
push
add
mov
add
push
push
push
push
push
call
add
pop
jge
fldcw
add
lods
imul
outsl
xchg
add
push
add
add
add
add
in
add
add
cwtl
add
add
add
add
pop
add
sub
pop
push
push
push
push
push
call
mov
test
add
add
lcall
les
fucomip
ja
add
add
mov
lea
into
push
flds
lods
add
add
add
jl
add
add
mov
add
add
push
int3
add
add
add
lcall
push
lea
push
push
call
add
add
add
jl
add
aad
movsl
mov
mov
add
int
add
fiadds
jbe
sub
pop
movl
push
push
not
inc
not
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
add
aad
lods
push
mov
icebp
mov
jb
iret
mov
mov
push
int
add
scas
in
loopne
jns
sti
add
add
filds
add
add
jp
add
sub
pop
push
call
push
lea
push
push
call
add
push
mov
pusha
push
push
add
add
add
xchg
mov
xchg
fs
in
add
shl
add
mov
mov
add
add
in
hlt
lcall
insl
cld
add
or
mov
push
lea
push
push
lea
push
push
call
pop
add
cmpb
add
iret
roll
in
mov
out
pusha
lret
or
lret
leave
je
pop
add
add
lcall
jge
add
test
call
pop
pop
pop
push
not
xor
pop
pop
push
add
ror
not
pop
pop
push
add
sub
pop
leave
push
sub
pop
ret
push
lea
xor
dec
pop
push
push
lea
push
lea
push
push
call
add
add
mov
jl
add
add
add
add
lds
add
data16
aad
add
jo
add
add
insb
cmc
stos
in
in
add
add
mov
shr
add
add
fildl
fyl2x
add
add
add
add
into
int3
mov
movsb
add
in
push
push
push
call
add
negb
push
mov
add
lret
iret
jmp
testb
loop
add
xchg
int
ja
popa
sahf
add
fcoml
sub
pop
add
push
push
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
test
pop
in
push
test
test
popa
xchg
add
cwtl
sub
add
add
shr
bound
stc
pop
push
mov
nop
pushf
add
xchg
lahf
add
add
add
pop
int
add
rolb
fildl
lods
fwait
add
cwtl
add
add
mov
in
loopne
lcall
push
sub
not
pop
push
push
push
dec
sub
lea
push
xor
add
shl
sub
pop
sub
sub
pop
push
push
lea
push
call
add
add
ja
arpl
add
shl
add
mov
xchg
push
add
js
push
xchg
jae
cmpsl
imul
mov
shr
ljmp
or
call
shlb
mov
add
mov
xchg
xchg
incb
add
add
sub
pop
pushl
push
push
push
push
push
push
push
lea
push
push
push
call
rclb
in
add
cwtl
pop
mov
add
pop
hlt
mulb
jecxz
mov
add
mov
push
scas
xchg
mov
scas
aad
in
add
fucom
add
iret
mov
cmc
loopne
scas
sti
out
add
mov
std
push
in
fcomps
lret
inc
add
push
not
sub
pop
call
push
push
not
shr
add
push
or
inc
add
add
sub
shr
pop
shr
inc
pop
push
dec
dec
pop
pushl
push
lea
push
lea
push
call
add
shr
xchg
add
fdiv
xchg
mov
test
pop
mov
rcl
push
mov
add
mov
xchg
sti
into
add
cmc
andl
mov
rolb
jmp
out
add
mov
sub
pop
call
push
push
lea
push
push
push
push
call
stos
mov
add
shll
add
test
jnp
loope
loopne
addr16
cli
lods
add
hlt
add
add
lcall
shrb
repnz
add
loope
xor
push
or
not
add
xor
sub
add
shr
rol
pop
add
shr
rol
pop
push
push
lea
push
lea
push
push
call
add
ret
add
addl
mov
add
mov
mov
add
xchg
add
add
mov
cmc
mov
add
lcall
jne
call
push
push
push
lea
push
push
push
push
call
mov
mov
icebp
push
jge
addl
popa
add
add
mov
add
add
pushf
cld
test
add
movb
int
mulb
mov
add
add
in
in
call
push
push
sub
not
inc
push
and
add
add
lea
rol
sub
lea
lea
xor
pop
shl
shl
sub
dec
pop
push
not
pop
pushl
push
push
push
push
lea
push
push
push
push
push
push
call
hlt
shlb
add
test
lahf
popf
add
jb
add
add
test
jmp
xchg
mov
add
add
mov
roll
pushf
movb
add
xchg
testb
add
sub
pop
call
call
push
push
shr
push
or
inc
add
sub
sub
xor
pop
shr
pop
push
dec
lea
shr
pop
pushl
push
add
not
pop
call
push
push
push
push
lea
push
call
add
scas
repnz
add
add
add
add
mov
mov
mov
mov
std
fsubr
add
add
lcall
shrb
pop
or
push
pop
add
dec
ror
ror
sub
xor
dec
pop
inc
rol
add
pop
push
shl
sub
rol
pop
pushl
push
xor
xor
ror
add
pop
call
push
rol
lea
add
pop
call
push
push
inc
add
push
sub
add
sub
sub
dec
pop
shr
rol
not
dec
pop
push
lea
push
push
push
call
imul
add
add
add
add
addl
add
jmp
add
je
in
in
lret
shlb
adcb
iret
add
lcall
jne
push
push
push
push
push
push
call
xorb
push
mov
add
add
add
je
add
mov
stc
insb
add
add
flds
in
pushf
add
les
scas
cltd
pop
data16
rcr
iret
lods
add
ja
add
nop
jl
imul
add
add
jle
add
add
add
jo
mov
in
call
add
push
not
sub
add
sub
pop
call
push
push
lea
push
push
pop
add
add
sub
pop
ror
pop
push
sub
pop
pushl
push
lea
push
push
call
add
lock
add
sti
add
pop
push
add
pop
jnp
pop
aad
add
out
imul
add
mov
roll
add
pusha
data16
aam
popa
ljmp
in
hlt
lcall
lret
aas
add
push
inc
pop
call
push
sub
rol
xor
pop
mov
lea
push
push
push
push
push
push
push
call
ret
mov
std
loopne
mov
std
mov
into
gs
int3
add
add
testl
jge
filds
add
add
xchg
xchg
add
add
test
add
call
imul
add
hlt
lds
ret
mov
scas
add
lea
add
xchg
loope
add
push
mov
add
fcoms
test
enter
stc
pop
idivl
ffreep
ja
add
add
add
mov
xchg
add
stos
pusha
add
add
in
clc
pop
mov
shr
push
push
push
push
push
push
push
push
call
add
add
subl
mov
add
cltd
movsb
aad
add
add
jle
ror
movb
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
call
movl
lods
add
movb
xchg
lret
jb
je
cmpsl
add
jp
movsl
fwait
mov
add
mov
add
sub
pop
mov
mov
push
push
push
push
lea
push
push
push
call
nop
push
add
jns
push
add
add
outsl
add
jp
xlat
nop
add
xchg
out
add
add
pop
add
push
ror
pop
add
push
push
push
lea
push
push
push
call
loopne
lock
xchg
add
in
std
add
mov
add
incb
int3
add
mov
addr16
add
add
test
push
add
add
add
add
lcall
pop
add
ret
push
add
in
call
add
push
sub
pop
mov
push
xor
shr
sub
pop
cmp
jne
push
push
push
lea
push
lea
push
lea
push
call
add
int3
add
movb
add
iret
mov
jp
add
mov
pop
add
add
cmc
jmp
add
cmpsb
clc
ror
out
in
add
add
push
imulb
fists
add
add
lods
add
add
mov
jecxz
add
pop
cmp
jne
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
xchg
repnz
fcmove
int3
mov
add
add
jmp
add
push
or
xlat
cld
scas
hlt
jecxz
sub
pop
mov
movl
push
add
pop
jmp
push
shr
dec
pop
mov
mov
push
push
push
push
push
push
lea
push
push
call
shl
add
into
loope
roll
add
add
add
add
xchg
jno
cli
in
rolb
add
rcl
add
clc
jae
cli
jecxz
in
loopne
sub
jne
mov
push
lea
push
call
mov
add
mulb
addl
clc
lret
push
jno
out
addl
rorb
add
add
jp
orl
les
add
imul
int3
hlt
xorl
add
jno
xchg
sub
pop
movl
push
lea
push
push
push
push
push
call
orl
mov
into
add
shlb
pop
jnp
add
test
aam
jno
mov
nop
jbe
lret
add
add
mov
sar
jmp
addb
add
les
addr16
push
jb
push
mov
lcall
sbb
add
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
scas
mov
in
add
cli
int3
pop
add
add
repnz
jmp
fucom
add
push
add
add
je
enter
jle
add
cmpsb
movsb
xchg
add
add
mov
add
add
test
add
add
orb
sahf
fsubl
add
lods
sub
pop
mov
push
add
pop
cmp
jne
mov
push
shl
pop
movl
push
sub
shr
pop
jmp
push
push
push
push
lea
push
push
lea
push
push
push
push
call
add
movsb
add
iret
add
cld
out
add
cld
je
mov
popl
xchg
add
popa
xchg
add
jnp
not
push
add
push
add
mov
out
jl
rolb
add
mov
mov
in
fcomps
inc
cld
push
dec
pop
cmpw
jne
push
push
push
push
lea
push
lea
push
push
push
push
push
call
imul
add
mov
imul
in
add
int3
sbbb
mov
fsubrl
insb
je
mov
xlat
or
cld
lea
mov
in
fcomps
inc
adc
push
push
push
push
lea
push
push
push
push
call
add
popf
addb
sti
sbbb
add
add
loopne
lds
aad
mov
cmpsb
add
add
add
mov
jno
lock
add
sahf
sub
pop
movl
push
sub
pop
jmp
push
shl
add
lea
xor
pop
pushl
push
lea
rol
shr
pop
pop
mov
push
pop
mov
push
push
push
push
call
out
jb
xlat
add
scas
fadd
add
addb
mov
js
clc
add
ja
popa
add
add
call
add
push
aad
add
imul
hlt
push
jnp
lods
add
pop
add
fldl
push
or
mov
inc
push
add
xor
push
xor
add
add
shl
sub
sub
shl
sub
lea
pop
sub
pop
push
push
push
lea
push
push
push
push
push
call
lods
add
fadds
pop
add
add
leave
add
add
xchg
mov
add
add
lock
mov
push
push
push
push
push
call
idiv
loopne
push
xchg
icebp
push
add
mov
test
ljmp
add
arpl
cmc
scas
lahf
push
add
mov
add
xchg
add
add
mov
add
xchg
push
shrl
mov
icebp
xchg
push
mov
shll
add
pop
or
push
push
lea
push
push
push
push
call
test
add
mul
push
cmc
fnop
stos
push
movsl
add
gs
stos
add
ret
add
xchg
xlat
lods
leave
orb
pop
in
add
call
jp
push
add
xchg
add
lcall
js
int3
fldz
ret
mov
xchg
inc
push
rol
inc
add
push
and
add
ror
sub
xor
pop
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
fstl
popl
add
lods
fs
nop
add
add
add
imull
mov
nop
pop
add
add
rolb
add
lods
movl
mov
call
push
push
lea
push
lea
push
push
lea
push
call
add
test
popf
add
add
std
push
popf
loopne
fstpl
insb
fiaddl
add
in
hlt
add
jge
lahf
scas
mov
add
pop
cmpl
je
push
push
add
rol
push
or
inc
add
sub
not
sub
sub
lea
pop
dec
sub
pop
push
inc
lea
pop
push
call
push
lea
push
push
push
lea
push
push
call
add
pop
jge
out
add
imul
add
test
add
add
pop
mov
pop
add
lret
jnp
stc
mov
cwtl
add
filds
lcall
cmp
add
int3
je
push
push
push
or
inc
add
xor
lea
add
dec
sub
dec
pop
add
pop
push
not
add
pop
push
call
push
push
push
push
push
lea
push
call
out
mov
add
add
add
add
mov
add
jne
ficoms
add
aam
negb
cltd
add
add
lret
movsb
jne
add
add
add
sub
pop
cmpl
je
push
push
rol
shr
lea
push
push
pop
add
not
shr
sub
add
shr
pop
shr
add
dec
pop
push
push
call
add
add
pushf
add
mov
js
out
add
add
nop
notb
pop
mov
add
add
add
sahf
add
rolb
cmp
add
add
adc
add
add
imull
add
push
lds
add
imul
rcll
in
std
add
xchg
stc
xchg
sub
pop
push
push
push
push
lea
push
call
xchg
testl
test
add
in
add
add
add
mov
je
xchg
mov
ljmp
add
xchg
mov
lcall
cmp
cmp
rol
je
push
push
push
and
add
sub
sub
dec
pop
not
sub
shl
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
loopne
add
jmp
arpl
add
add
aad
add
mov
add
add
int3
add
fcmovu
mov
add
add
ja
test
ror
test
pop
ret
add
fs
into
mov
add
lods
add
mov
add
in
test
push
push
lea
push
push
push
lea
push
lea
push
call
add
call
add
add
pop
pop
scas
imul
cmpsl
add
add
popl
xchg
add
xchg
jl
lods
xchg
stos
add
pushf
scas
add
ret
mov
roll
add
pushf
sub
pop
call
push
lea
pop
cmpl
je
push
push
add
shr
xor
sub
push
push
pop
add
sub
sub
pop
shr
shl
pop
push
push
push
push
lea
push
call
test
mov
add
jo
pop
mov
out
add
add
fdiv
push
add
pop
add
jle
fldl
xchg
ret
pop
add
cli
add
incb
add
jbe
repnz
pop
push
push
add
inc
xor
sub
pop
call
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
jecxz
add
add
sar
jne
add
cli
lds
add
mov
add
out
addr16
shrb
add
pop
add
fcmovbe
push
lret
add
addl
lcall
cmpl
je
push
push
ror
lea
ror
push
and
add
sub
add
sub
sub
xor
not
rol
pop
sub
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
add
mov
mov
xchg
push
add
test
mov
imul
add
mov
jb
push
add
push
mov
add
add
popa
test
mov
xchg
add
into
incb
std
add
xchg
pushf
pop
add
push
shl
pop
call
push
add
lea
pop
cmpl
je
push
push
sub
xor
shl
push
or
inc
add
ror
sub
inc
pop
add
pop
push
ror
pop
push
push
shl
sub
pop
call
cmpl
je
push
push
shl
push
sub
add
shl
not
rol
sub
shl
pop
add
rol
add
pop
push
push
push
push
call
jle
pop
mov
stos
add
add
in
add
mov
jo
xchg
add
imul
add
jo
mov
pop
shlb
add
cwtl
iret
xchg
push
add
add
int3
fs
test
in
scas
ja
add
lcall
push
push
push
push
call
mov
add
add
roll
arpl
add
lods
in
add
cld
push
add
stc
add
popf
mov
lcall
add
leave
add
scas
mov
call
cmpl
je
push
push
rol
add
shr
push
or
not
add
add
sub
sub
rol
shr
pop
pop
push
push
push
call
cli
outsl
add
ljmp
clc
test
add
add
add
add
push
pop
cwtl
addb
push
jae
jbe
pop
add
sub
pop
push
call
push
push
push
push
push
push
push
push
lea
push
call
add
rolb
add
push
add
add
add
add
add
push
mov
popa
add
add
sahf
jmp
sub
pop
cmpl
je
push
push
ror
shr
xor
sub
push
push
pop
add
shl
shr
not
ror
sub
pop
lea
lea
not
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
int
jns
add
int3
add
out
clc
xchg
aam
pop
add
loop
add
pop
add
jmp
sub
pop
push
call
push
xor
inc
ror
pop
cmpl
je
push
push
ror
shr
push
push
pop
add
shl
ror
sub
sub
xor
pop
lea
pop
push
add
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
imul
add
ficoml
flds
test
add
add
jp
mov
in
lea
pop
negb
add
int3
into
out
add
sub
pop
call
push
push
push
push
push
push
push
lea
push
call
add
flds
mov
add
add
int
pusha
add
jge
stos
mov
ficoms
pop
add
loope
add
cmc
add
lcall
ja
in
loopne
cmpl
jne
mov
push
push
push
push
push
push
lea
push
push
push
call
pop
xchg
pop
sti
add
les
lahf
xlat
push
add
mov
pop
js
add
testb
add
add
add
bound
mov
gs
test
sub
pop
movl
jmp
push
add
inc
shl
pop
xor
pop
push
push
call
test
jmp
cwtl
add
add
xchg
aad
lods
lock
add
addl
add
movsb
je
pop
add
add
add
add
cmc
testl
push
cld
add
add
cmpsl
xchg
push
add
out
mov
pusha
mov
in
clc
lcall
pop
push
xor
dec
pop
pop
leave
push
push
push
push
push
push
push
push
push
push
call
add
add
int3
lds
push
add
jns
enter
mov
test
sar
mov
add
fcomps
or
push
shr
inc
pop
push
mov
push
push
call
add
nop
add
add
out
add
mov
add
add
jge
push
leave
push
movsl
add
in
xorl
clc
pop
add
push
add
pop
cmpl
jne
push
push
sub
add
shr
inc
push
sub
add
ror
not
sub
lea
shl
sub
rol
pop
not
add
xor
pop
push
lea
push
lea
push
push
push
push
call
add
lock
cmpsl
jnp
add
test
mov
add
jae
add
add
js
jl
add
call
sub
pop
pushl
push
lea
rol
sub
pop
call
push
push
push
lea
push
push
call
out
xchg
sbb
lahf
out
add
add
lret
add
addl
mov
int
mov
add
mov
add
mov
shl
add
mov
xchg
shl
xchg
jle
add
add
sti
mov
push
call
in
pop
push
call
push
push
push
push
push
push
push
push
push
call
int
pop
int3
add
add
pop
lock
pop
pushf
mov
lods
add
add
cbtw
xchg
add
aad
fistpll
add
fisubl
pop
sahf
add
add
in
add
add
int3
sbb
add
pushf
push
cmc
or
mov
xchg
adcb
call
mov
cmpsl
fwait
xchg
lock
test
pop
add
mov
in
add
xchg
jle
imul
add
jmp
out
add
add
add
add
add
add
aam
test
lret
add
add
out
add
iret
xchg
add
mov
add
imul
in
in
pop
cmpl
jne
push
push
push
push
push
push
push
push
push
call
cmpsb
lret
jbe
add
pop
add
into
add
int
push
pusha
xchg
jp
mov
ret
out
out
ret
jae
jge
leave
int
add
call
int
mov
add
push
mov
add
mov
sub
pop
mov
push
sub
lea
pop
call
push
shr
sub
pop
ret
jmp
push
add
add
dec
pop
cmpl
jne
push
push
add
xor
push
or
not
add
sub
not
ror
dec
sub
shl
xor
add
sub
pop
sub
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
fiadds
mov
jo
pop
add
add
in
rolb
add
rol
xchg
xchg
loope
out
xchg
stos
fsts
add
hlt
mov
add
jmp
add
jne
imul
add
popf
add
std
pusha
divl
popa
add
add
add
add
icebp
shrb
loopne
pushl
call
push
dec
pop
push
call
push
push
push
push
lea
push
push
push
push
push
push
call
mov
add
jbe
out
add
add
mov
ja
add
add
add
add
mulb
pop
xchg
pop
jmp
add
les
add
add
in
fdivr
lcall
imul
add
shlb
pop
cmpl
je
push
add
lea
pop
cmpl
jne
mov
push
push
lea
push
push
push
push
push
push
push
push
call
lret
mov
add
shl
clc
mov
hlt
jbe
jno
cltd
test
mov
mov
addr16
add
add
in
add
mov
xchg
movsb
mov
push
pop
clc
sarl
lcall
or
add
push
push
push
push
call
leave
arpl
add
add
incb
insb
add
push
cltd
cwtl
sti
aad
mov
add
pusha
mov
shlb
add
aad
jno
jno
int3
jmp
incb
push
add
out
add
movsb
sub
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
out
xchg
push
iret
add
add
add
shrl
pop
add
pusha
in
add
stos
add
jle
add
sub
pop
call
push
push
dec
push
and
add
sub
xor
lea
add
sub
sub
pop
shl
pop
push
pop
pushl
call
push
push
lea
push
push
call
jl
mov
in
cli
add
add
push
add
rorl
movsb
xchg
test
add
lcall
in
mov
xchg
jl
je
add
je
insb
add
js
add
add
mov
add
lcall
shrb
stos
leave
cmp
out
icebp
push
xor
add
add
add
ror
sub
rol
pop
add
shl
add
pop
push
add
pop
pushl
call
push
push
push
push
push
lea
push
push
call
rolb
hlt
push
fst
add
popl
mov
add
movsb
pusha
je
mov
insb
addr16
add
add
jge
add
enter
push
add
add
scas
cltd
mov
jl
add
fwait
pop
add
mov
add
mov
shl
sub
pop
call
push
push
xor
dec
shl
rol
push
or
inc
add
inc
add
sub
inc
pop
not
pop
push
add
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
ljmp
addb
add
jecxz
ja
mov
rolb
addr16
push
pop
movsb
xchg
cld
js
xchg
push
repnz
add
push
mov
imul
aam
add
outsl
xchg
test
jb
in
fdivr
lcall
mulb
add
shrb
cmpsb
dec
dec
push
add
push
push
pop
add
dec
sub
add
rol
pop
ror
ror
shl
pop
push
inc
ror
ror
lea
pop
pushl
push
shr
sub
pop
call
push
shr
pop
call
push
push
sub
push
and
add
add
sub
xor
shl
lea
pop
not
pop
push
push
push
push
push
push
push
call
imul
out
mov
mov
add
mov
jp
add
add
pusha
lret
data16
out
add
add
pop
mov
mov
sub
pop
pushl
push
ror
lea
pop
call
push
shl
dec
add
add
pop
call
push
push
shl
dec
add
inc
push
or
inc
add
sub
shl
not
sub
pop
dec
pop
push
push
call
lods
add
mov
add
fadds
popa
add
mov
push
test
in
in
mov
sahf
add
xchg
lock
lcall
add
clc
subl
out
jae
adcb
fadds
add
push
add
stos
sub
pop
pushl
call
push
push
lea
push
push
push
push
push
push
push
push
call
test
cwtl
icebp
pop
shrb
add
xchg
add
add
lahf
xchg
mov
add
lods
mov
addr16
mov
push
nop
mov
sub
pop
call
push
push
dec
shr
lea
push
push
pop
add
ror
sub
sub
pop
dec
pop
push
lea
push
call
scas
incb
add
add
add
leave
add
int3
add
add
add
mov
ret
in
fldl
outsl
push
testb
imul
add
sbbb
add
push
add
lcall
jne
push
push
push
lea
push
lea
push
push
call
jo
in
add
jnp
mov
add
iret
add
add
add
push
add
add
scas
out
loop
popa
loopne
bound
fcoms
xchg
fildl
scas
add
fiaddl
incb
imul
loopne
add
mov
add
in
call
call
call
push
push
shr
sub
inc
inc
push
sub
add
sub
sub
rol
inc
add
pop
inc
shr
not
ror
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
push
add
add
add
add
lods
addl
into
xchg
mov
outsl
jnp
popf
xchg
add
cltd
outsl
jb
addb
add
add
data16
test
add
in
add
out
cmc
jp
push
add
popl
cli
add
jne
push
lea
push
lea
push
push
lea
push
push
call
scas
add
push
add
add
add
shlb
cmpsl
out
testl
loope
push
loope
fxch
add
andl
push
jbe
add
in
jl
out
ret
add
clc
add
lods
testl
gs
pop
call
call
push
push
sub
lea
rol
push
or
not
add
sub
sub
shl
xor
pop
ror
shr
pop
push
lea
push
push
push
push
push
call
xchg
add
pop
add
add
stos
mov
imul
add
mov
std
negl
add
mov
int
repnz
imul
add
lcall
cwtl
nop
xchg
add
lea
add
mov
cld
add
mov
loopne
add
add
pop
sub
pop
pushl
push
rol
sub
xor
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
lea
push
call
push
sahf
loopne
loop
imul
add
add
lahf
or
cltd
jns
pop
mov
pop
shrl
jbe
out
add
aam
mov
xchg
add
in
fdivr
lcall
shrb
lret
das
mov
not
lea
push
or
inc
add
add
shl
not
sub
sub
ror
sub
lea
xor
pop
inc
not
not
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
arpl
fildl
bound
mov
mov
add
fildl
nop
cmpsb
rol
add
add
pop
add
add
pop
jae
add
add
push
mov
xchg
xchg
add
ficoml
pop
loope
std
add
cmpsb
add
add
fsubs
fdivr
lcall
jne
push
sub
pop
call
lea
push
sub
add
pop
push
push
add
pop
call
push
push
rol
push
and
add
sub
sub
inc
sub
pop
lea
pop
push
lea
pop
pushl
push
dec
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
add
cwtl
push
mov
pop
xchg
loopne
loopne
add
add
add
cmpb
add
add
ret
add
xchg
add
add
jbe
imul
rcll
loopne
lcall
shrb
lcall
push
roll
add
loopne
lea
dec
sub
sub
inc
not
dec
pop
inc
lea
rol
pop
push
push
call
fs
mov
lock
xchg
std
icebp
add
mov
pop
push
add
popf
add
mov
stc
add
add
mov
cwtl
scas
add
add
add
add
jl
fsubr
add
fnstsw
add
jae
jmp
mov
add
js
jne
mov
mov
in
clc
pop
pushl
push
ror
rol
add
pop
call
push
lea
push
push
push
call
push
add
add
add
arpl
lcall
xchg
add
add
add
add
mov
add
add
aad
add
add
add
push
scas
add
add
add
ja
add
add
lock
pop
add
push
mov
lcall
shrb
in
stos
push
add
sub
push
xor
add
inc
xor
rol
sub
rol
pop
sub
pop
push
push
call
add
jae
mov
icebp
fwait
scas
loop
lods
test
cmpsb
mov
mov
cmc
cwtl
imul
mov
add
add
add
insb
sub
pop
pushl
push
dec
sub
pop
call
push
shr
add
not
xor
pop
call
push
push
shl
not
push
sub
add
inc
rol
sub
inc
sub
add
pop
lea
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
add
data16
add
imul
pop
test
stos
shll
cmc
roll
stc
jge
addb
add
in
out
rcr
xchg
fistpl
xchg
hlt
ror
out
add
xlat
add
add
mul
mov
add
mov
add
xlat
popf
add
jne
push
sub
pop
call
push
push
inc
push
sub
add
ror
ror
add
sub
sub
not
shr
pop
sub
add
sub
xor
pop
push
push
lea
add
xor
add
push
or
not
add
inc
add
sub
sub
pop
inc
pop
push
add
add
pop
call
push
push
lea
push
push
lea
push
push
push
call
jns
add
add
test
add
add
rclb
fidivs
add
add
mov
fidivrl
cld
movsl
add
add
adcl
mov
add
add
jp
add
lcall
push
push
push
push
call
shll
jno
jp
sbb
push
test
add
mov
mov
popa
icebp
add
js
xlat
shr
xchg
sarb
mov
and
iret
cmc
in
fwait
xchg
mov
add
xchg
push
mov
fdivs
add
mov
add
lcall
jne
call
push
push
call
add
insb
mov
into
jnp
push
add
add
mov
jmp
lods
in
add
jne
mov
pushf
mov
add
mov
out
scas
roll
in
clc
lcall
add
add
int
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
cmpsl
add
arpl
mov
add
add
add
pop
add
push
jb
test
pop
addr16
add
mov
add
pushf
add
mov
pop
scas
fists
mov
add
cli
lods
add
push
cmc
mov
out
xchg
add
pushf
and
ljmp
add
ljmp
insl
int3
or
shr
sub
ror
add
pop
ror
pop
push
add
sub
pop
pushl
call
push
inc
rol
pop
push
push
rol
ror
pop
call
push
push
rol
push
xor
add
ror
sub
add
shl
sub
rol
ror
sub
pop
ror
pop
push
add
add
pop
pushl
call
push
sub
add
pop
call
push
lea
push
lea
push
push
call
add
add
imul
arpl
add
pusha
add
add
add
jmp
add
sti
cli
add
push
add
test
testb
fldl
add
push
jmp
xchg
scas
jecxz
fdivrp
xorl
inc
cld
lea
push
push
not
add
dec
push
xor
add
shl
sub
not
pop
add
ror
pop
push
sub
not
pop
pushl
push
lea
push
push
call
mov
add
add
add
jbe
icebp
sbb
ljmp
add
arpl
add
mov
pushf
jo
imul
add
std
add
in
hlt
pop
call
lea
push
rol
pop
push
push
lea
push
push
push
call
add
add
push
add
add
loope
pop
push
xchg
lcall
mov
mov
jns
pop
icebp
add
lods
xchg
int
imul
push
aad
add
jmp
add
add
sub
pop
push
push
push
lea
push
push
push
push
call
js
mov
std
mov
pop
add
add
in
add
lods
sarl
add
jmp
mov
xlat
loop
std
fstpt
add
add
add
add
add
add
rolb
iret
stos
movb
add
mov
add
ljmp
roll
add
push
call
in
call
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
mov
add
int3
mov
xlat
aam
add
add
stos
lret
test
mov
sahf
test
xchg
add
arpl
mov
mov
add
mov
test
push
lahf
jle
mov
add
fdivr
lcall
jne
push
push
inc
add
shl
push
xor
add
shr
sub
shr
sub
add
sub
lea
pop
shl
shr
sub
pop
push
not
sub
ror
shr
pop
push
call
push
push
sub
rol
not
shr
push
and
add
ror
sub
not
pop
shr
pop
push
push
push
lea
push
push
call
test
add
pop
pop
testl
add
add
add
mov
add
add
mov
ljmp
push
add
mov
stc
add
add
mov
add
hlt
mov
out
add
outsl
add
mov
add
cltd
xchg
jae
mov
pop
xchg
add
stos
add
jne
push
lea
push
push
lea
push
push
push
push
call
xchg
loopne
data16
add
addl
bound
add
fsubl
les
cld
out
int3
mov
leave
mov
add
add
add
or
test
aam
add
lcall
test
add
push
push
shl
add
not
pop
call
push
push
not
add
shr
push
push
pop
add
xor
add
lea
shl
sub
pop
rol
pop
push
shl
dec
sub
pop
pushl
push
push
push
call
test
xchg
cmc
test
push
add
add
clc
add
add
add
scas
in
stos
add
mov
add
out
repnz
add
movb
test
add
add
loop
jb
mov
add
add
out
lea
pop
call
push
lea
push
push
push
push
push
lea
push
push
push
call
push
mov
jne
add
test
fiadds
xchg
add
mov
mov
imul
add
jl
rcr
add
add
mov
add
add
pop
lds
leave
add
testl
sarl
pushl
push
shr
ror
shl
pop
mov
push
lea
pop
jmp
push
push
shr
add
xor
push
sub
add
dec
shr
inc
sub
lea
not
sub
ror
pop
rol
not
dec
pop
push
push
push
push
call
out
in
dec
push
cld
xchg
cmpsb
mov
pop
andb
add
rcr
repnz
pop
add
add
fldl
mov
push
testb
nop
repnz
lods
movsl
add
outsl
fcomps
mov
add
add
cltd
add
cld
scas
out
push
in
add
loopne
xchg
mov
add
in
lock
lcall
jne
call
push
sub
add
pop
push
push
shl
xor
pop
call
push
push
sub
push
or
inc
add
xor
sub
xor
add
pop
shr
pop
push
add
not
lea
pop
pushl
call
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
mov
push
mov
je
add
mov
add
jle
add
mov
add
add
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
cli
add
mov
jnp
movsl
add
xchg
push
mov
jnp
imul
mov
cli
call
add
rolb
add
jae
add
push
push
mov
add
jecxz
add
fcmovbe
add
add
lods
add
xchg
push
add
add
mov
mov
cli
add
ror
sub
pop
call
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
add
add
push
leave
lcall
add
add
add
sub
pop
leave
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
fdiv
testb
add
add
mov
add
roll
mov
cmpsl
loopne
int3
faddl
arpl
add
fadds
aad
cmpsl
xchg
rol
add
mov
fstpt
mov
add
add
add
add
add
into
scas
sub
pop
pop
push
lea
not
pop
pop
pop
push
rol
add
pop
xor
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
xchg
add
incb
in
test
xchg
mov
lds
add
les
clc
add
mov
fs
repnz
mov
add
in
add
add
lcall
cmc
add
add
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
enter
add
imul
add
mov
add
add
mov
in
fcomps
or
leave
push
shr
xor
pop
ret
push
push
push
push
push
push
call
add
test
sti
add
add
add
test
add
cmpsb
cli
sti
mov
mov
scas
xchg
xchg
popf
cld
gs
add
icebp
int3
add
addl
in
call
push
push
add
xor
pop
mov
push
push
push
push
lea
push
call
loopne
fnsave
stc
add
fiaddl
add
add
jmp
loopne
mov
stos
fadds
push
add
add
jo
pop
add
add
icebp
add
out
mulb
add
mov
add
add
add
sub
pop
cmpl
jne
push
lea
push
push
lea
push
push
push
lea
push
push
call
rolb
add
iret
data16
sti
jmp
pop
add
mov
add
cltd
mov
sti
lcall
in
imul
add
hlt
lcall
add
jmp
add
add
lret
cwtl
push
movsl
push
sub
pop
mov
push
not
add
shl
xor
pop
jmp
push
dec
lea
not
pop
mov
push
lea
pop
and
xor
push
lea
inc
pop
xor
add
push
push
push
lea
push
lea
push
call
push
iret
push
add
lret
cwtl
repnz
add
add
lret
add
sahf
xlat
cmc
add
pop
cmpsb
ljmp
jecxz
add
into
mov
in
in
pop
xor
push
push
push
lea
push
push
call
repnz
add
add
pop
jno
add
add
sahf
mov
add
add
cli
mov
push
xchg
mov
push
jae
add
lds
in
fstps
movsl
add
mov
add
add
lods
jmp
add
sub
pop
dec
push
push
lea
push
lea
push
lea
push
call
ret
add
add
mov
mov
cmpsl
add
push
add
fisubrs
add
mov
push
mov
fucom
jne
add
xchg
lcall
jmp
push
push
lea
push
call
lds
xchg
add
xchg
add
mov
popa
sarl
imul
add
add
add
loop
add
xchg
les
push
lds
push
add
add
jo
popf
filds
test
test
incb
add
loop
leave
add
out
jnp
mov
in
in
xchg
sub
pop
jmp
push
xor
sub
sub
pop
sub
push
shl
pop
pushl
push
sub
add
not
pop
pop
push
push
call
test
cltd
fldl
add
jecxz
add
flds
scas
xor
push
add
add
add
add
int3
add
add
out
mov
jp
add
add
pop
mov
addr16
gs
add
push
xchg
add
add
push
enter
enter
sub
pop
sub
push
rol
shl
ror
pop
cmp
jne
push
push
push
push
call
add
les
rclb
jae
add
add
mov
pop
rolb
jp
lods
add
add
mov
add
add
add
add
test
add
out
mov
js
add
sahf
add
add
add
in
add
movsl
pop
stc
add
mov
mov
in
lock
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
cltd
add
pop
hlt
add
ficoms
incb
add
add
xchg
push
add
clc
stc
mov
fdiv
aad
popl
pop
repnz
add
std
mov
fcompl
dec
cmp
push
push
push
push
push
push
lea
push
push
call
movsl
mov
add
aam
jl
add
add
lahf
mov
mov
lcall
add
add
std
add
out
jnp
jo
add
add
popf
loope
jecxz
jecxz
xchg
nop
movb
test
test
fdivr
lcall
jmp
shrl
ror
push
push
push
push
lea
push
call
add
mov
add
add
pop
cmpsl
add
add
add
pop
data16
add
in
loopne
lcall
or
lret
shr
xor
not
pop
shr
add
push
push
lea
push
push
push
lea
push
lea
push
call
insb
add
mov
fistpl
pushf
add
push
add
out
add
xchg
clc
add
pop
jl
movsl
addb
add
out
popa
add
int
mov
mov
aam
pop
lea
jl
call
in
in
sub
pushl
push
push
push
lea
push
push
lea
push
push
push
call
xchg
sahf
mov
xchg
lock
nop
xchg
add
add
loope
add
std
imul
sub
pop
pop
push
rol
not
shr
dec
pop
shr
and
push
sub
inc
pop
sub
push
add
inc
inc
pop
cmp
jne
push
lea
push
push
push
push
lea
push
push
call
add
clc
test
addl
mov
mov
jo
add
mov
loop
fisubs
xchg
add
xchg
scas
ret
add
add
mov
lea
add
add
add
or
add
lcall
add
lea
add
push
sti
add
add
fwait
add
in
add
xchg
into
je
in
in
leave
ret
push
inc
pop
push
push
lea
push
lea
push
call
sahf
scas
pusha
add
mov
mov
add
push
push
fs
add
jnp
add
loopne
add
add
add
add
jl
insb
add
mov
in
hlt
pop
mov
add
push
not
inc
xor
add
pop
push
push
push
push
push
call
add
sahf
jnp
mov
jb
loopne
pop
movsl
add
testb
test
ljmp
out
add
lret
add
add
mov
lcall
add
insb
test
add
into
add
add
mov
mov
add
cmpsb
out
add
in
lock
push
push
push
push
push
push
push
push
call
pop
mov
in
pop
pop
pusha
add
ja
add
xchg
lret
rol
add
xchg
add
add
out
stos
ja
mov
add
mov
call
xlat
cli
add
fisttpll
or
ds
lea
push
call
mov
mov
addr16
jno
fwait
in
je
out
lods
mov
add
int3
sarb
add
add
add
mov
add
pop
add
add
call
push
mov
in
in
push
mov
push
push
call
add
cmpsl
repnz
xchg
jge
loop
add
rclb
add
add
xlat
add
stos
mov
add
jne
stos
imul
cmpsl
xchg
push
into
add
add
mov
add
mov
faddl
add
in
clc
pop
lea
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
jns
mov
push
popa
add
mov
add
xchg
push
mov
add
jne
bnd
fdivr
add
cwtl
roll
add
add
iret
in
jb
add
add
sub
pop
sub
push
not
pop
mov
push
ror
shl
dec
pop
shr
push
push
push
push
push
call
add
cli
arpl
push
push
add
ja
add
hlt
add
push
outsl
add
roll
add
xlat
add
iret
pushf
add
sti
xlat
jae
sub
pop
add
push
xor
sub
pop
mov
add
push
push
call
stos
add
fdivp
clc
jne
ret
cmpsb
add
push
jnp
enter
filds
jae
add
xchg
test
push
mov
add
test
xchg
add
bound
add
add
add
cwtl
pop
add
mov
in
clc
pop
mov
add
push
push
lea
push
lea
push
push
push
push
push
call
addb
loop
push
add
push
add
push
in
jmp
arpl
mov
add
jb
stos
jno
addr16
cld
cltd
add
fsubs
mov
add
pop
shl
addl
add
add
js
add
add
sahf
add
notb
call
add
fists
jle
add
int3
add
aam
add
rcll
fdivrs
sbbl
mov
stc
add
add
fincstp
add
mov
movsl
add
lahf
jmp
add
cwtl
addl
add
imul
jecxz
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
add
movb
mov
add
add
in
lret
add
imul
mov
add
popf
add
cld
int3
xchg
mov
cld
mov
rcrl
fstl
add
popa
enter
sub
pop
and
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
xchg
roll
add
test
add
xchg
xchg
add
int
scas
add
imul
add
mov
pop
add
push
add
push
faddl
add
flds
jnp
mov
movsl
mov
mov
add
add
mov
arpl
add
fiaddl
add
add
xchg
sub
pop
rol
push
sub
pop
rol
xor
push
dec
pop
inc
cmpb
jne
push
push
push
push
push
call
loop
add
lods
add
add
pop
add
cltd
add
mov
add
add
add
insb
scas
in
add
add
add
mov
in
add
adcb
rorb
gs
mov
add
into
cmpsl
add
leave
ret
in
pop
add
push
sub
pop
cmp
je
add
push
push
call
test
lds
mov
xchg
test
icebp
fisubl
pop
bound
add
add
add
add
sub
pop
cmpl
jne
push
push
push
push
lea
push
lea
push
call
add
gs
mov
rcll
add
mov
lods
mov
outsl
add
sti
add
loopne
stc
lods
scas
push
add
jae
add
fwait
jno
repnz
pop
xchg
add
mov
add
add
stc
mov
imul
faddl
gs
pop
aam
in
call
xor
push
lea
push
push
push
push
call
movsb
add
imul
cmpsb
add
stos
stc
add
add
xchg
add
mov
add
push
addr16
xchg
mov
sarl
add
movsb
mov
add
into
mov
xchg
test
add
lahf
lret
ljmp
cmc
leave
jne
jo
mov
cld
lret
imul
sub
lcall
push
push
call
push
xchg
call
fs
add
stos
add
add
add
jno
add
ficoml
hlt
add
add
add
repnz
add
add
cwtl
sub
pop
pop
pop
push
sub
lea
ror
pop
pop
pop
push
not
add
inc
pop
leave
push
rol
add
pop
ret
push
lea
push
push
call
mov
add
xlat
add
roll
jbe
fstps
mov
imul
add
mov
mov
pusha
jno
lods
add
mov
add
lcall
push
adc
push
or
mov
aam
or
push
push
push
push
push
lea
push
push
push
lea
push
call
add
pushf
stos
add
xchg
add
loopne
mov
lahf
test
add
add
add
outsl
add
add
add
mov
mov
add
jl
add
add
xchg
leave
add
shlb
mov
js
mov
lcall
add
lea
push
push
call
mov
add
add
add
add
xlat
addl
fiadds
xchg
add
add
shr
add
sahf
leave
loop
cmc
push
in
loop
add
scas
add
xchg
hlt
add
pop
mov
mov
add
jp
add
pop
add
clc
add
lcall
and
jae
xchg
movsl
push
push
lea
push
push
push
call
je
lods
mov
add
sarb
fildl
jmp
add
add
enter
pop
add
sub
pop
pop
push
dec
ror
pop
call
push
push
push
push
push
lea
push
call
push
add
mov
add
add
push
add
movl
add
mov
add
retw
mov
jge
add
add
add
sub
add
jae
add
into
std
add
xchg
ja
cmc
mov
jne
testb
pop
push
push
not
sub
pop
call
push
not
add
pop
xor
pop
push
push
push
push
call
add
add
into
mov
add
add
mov
out
sarl
ficompl
xorb
add
shll
faddl
add
cli
add
out
cli
lret
sub
pop
pop
pop
push
inc
ror
dec
xor
pop
pop
pop
push
lea
push
call
out
add
stos
push
add
jnp
add
ja
add
add
add
add
add
jmp
jl
fiaddl
test
int3
add
jne
ja
add
leave
ret
push
lea
push
lea
push
push
call
pusha
add
out
movsl
add
add
popf
add
xorb
xchg
mov
data16
add
cwtl
mov
cmpsl
add
add
rclb
add
fisubrl
movsl
add
in
add
lcall
push
rol
rol
pop
mov
add
push
lea
push
call
push
add
imul
ja
push
xchg
add
sti
add
push
add
lret
xchg
lret
add
rolb
pop
push
push
push
push
push
call
cld
shl
sti
add
xchg
add
add
add
xchg
push
mov
add
leavew
push
popf
push
cmpsb
add
add
jne
fiaddl
add
add
enter
loopne
int3
movsl
jbe
out
push
add
add
pop
add
scas
add
hlt
lcall
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
pop
addb
add
add
testl
aad
add
mov
popf
add
shr
jb
mov
ror
pop
fdivrp
sti
jnp
icebp
add
add
pop
add
addb
stc
in
shl
pushf
pop
fcompl
mov
mov
push
push
push
push
call
push
fmull
xchg
jecxz
lcall
add
add
mov
add
jl
add
push
js
pop
int
into
jmp
push
add
pop
pop
add
add
lcall
push
not
pop
lea
push
not
rol
pop
sub
push
lea
push
push
push
push
push
lea
push
push
call
jns
add
sahf
add
add
push
add
leave
xchg
fldenv
add
add
add
add
push
add
mov
add
sub
pop
mov
shr
push
lea
pop
add
mov
push
xor
not
dec
pop
add
push
push
push
push
push
call
rorb
fstps
addl
mov
add
add
add
clc
add
add
cmpsb
jne
aad
mov
add
add
in
mov
push
int
add
out
push
add
addb
add
add
add
mov
mov
sub
pop
pushl
push
sub
pop
popl
mov
push
push
push
push
call
test
add
lods
push
rcrl
add
add
lahf
xlat
add
mov
in
add
fiadds
rcrl
lcall
stc
xor
push
push
call
movb
add
mov
cmpsb
mov
add
pop
repnz
popa
add
add
mov
push
enter
mov
mov
add
stos
add
lret
add
adc
push
sub
ror
pop
mov
add
push
push
push
push
push
push
push
push
push
call
fiadds
stc
mov
outsl
cwtl
stos
imul
push
add
mov
les
add
add
subb
push
mov
add
mov
roll
add
jl
mov
xchg
pop
add
add
add
pop
xor
push
lea
dec
add
pop
rol
push
shr
sub
pop
nop
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
mov
arpl
add
add
mov
add
add
add
movsb
fcompl
test
stos
imul
into
aad
add
mov
add
add
jns
mov
jle
add
pushf
add
push
add
cmpsb
pop
add
mov
in
fcomps
push
shr
sub
pop
xor
push
add
add
sub
not
pop
nop
nop
push
rol
rol
shr
pop
inc
push
rol
ror
dec
pop
nop
nop
push
sub
pop
cmpb
jne
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
movsl
jle
add
mov
mov
loopne
test
pop
mov
int
add
mov
mov
add
scas
jecxz
add
mov
in
testl
add
add
sub
pop
add
push
xor
pop
nop
push
push
lea
push
push
lea
push
push
push
push
call
orb
add
add
fwait
add
add
pusha
add
pop
add
addb
add
lcall
cmp
je
push
push
push
push
push
lea
push
call
add
in
add
add
rolb
les
push
add
scas
mov
jp
add
add
sti
add
add
test
add
mov
mov
add
push
push
push
push
push
call
mov
add
fstpl
jo
pop
pusha
in
xchg
xchg
mov
call
add
lods
mov
adc
mov
mov
lods
mov
test
jmp
addb
stos
add
call
mov
loope
movsb
add
lcall
push
not
shl
rol
not
pop
inc
nop
push
xor
ror
sub
pop
nop
push
add
dec
add
pop
cmp
jb
xor
push
dec
dec
add
pop
jmp
push
push
push
push
call
add
out
add
mov
jns
mov
add
cld
int3
push
scas
add
push
add
mov
test
jne
lea
jno
add
ljmp
add
fiaddl
add
subl
add
add
add
xchg
fistps
mov
sub
pop
mov
add
push
push
push
call
add
push
aad
lock
mov
push
jle
in
in
lock
xor
roll
add
add
adc
add
add
add
add
fcmovbe
xchg
into
pop
jns
xchg
add
add
lcall
mov
jb
sub
sub
dec
pop
mov
add
push
dec
pop
mov
xor
push
dec
xor
shl
pop
xor
push
push
push
push
push
push
lea
push
call
clc
add
xchg
sar
out
mov
cmpsl
fdivrl
add
push
in
loope
add
add
add
iret
push
fldenv
aad
sti
add
add
fistpll
fdivrp
mov
mov
add
push
add
mov
push
add
pusha
add
movb
sub
pop
shl
push
not
pop
xor
shl
push
push
lea
push
push
push
push
lea
push
call
stos
stc
orl
add
jge
outsl
leave
add
fisubl
shrl
add
mov
jnp
add
push
add
add
pop
push
add
in
in
lcall
dec
nop
add
loope
push
push
call
add
pop
lret
mov
add
mov
call
add
ja
negl
add
stos
jno
add
fisubrl
jbe
jae
add
add
mov
add
add
sub
pop
xor
mov
push
push
push
push
push
push
push
push
call
fsubrl
add
fadds
enter
mov
andl
add
imul
loop
add
loope
add
push
nop
ljmp
sub
pop
add
push
shr
dec
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
lea
xchg
push
add
jns
add
fildll
fisubs
je
bound
stos
add
add
clc
notb
in
fdivr
lcall
push
push
push
push
call
mov
call
mov
add
add
in
ljmp
arpl
add
jbe
add
fsub
rcl
popf
push
add
add
mov
mov
fadds
add
add
add
rolb
add
add
sub
pop
pop
push
shr
pop
leave
push
shr
pop
ret
push
push
lea
push
call
add
hlt
cmc
add
add
xchg
mov
test
add
mov
loope
push
loope
add
lret
cld
push
lds
jbe
add
hlt
sub
add
cld
xchg
add
add
out
in
add
roll
test
pop
fs
lcall
mov
push
xor
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
add
andl
mov
add
cmpsb
push
add
push
clc
add
out
jnp
lret
cwtl
jmp
add
add
add
sub
pop
push
push
push
sub
shl
inc
pop
mov
push
shr
pop
mov
push
push
call
in
cld
movsl
add
add
ja
add
add
out
pop
add
add
lret
stos
icebp
insb
add
xchg
add
xchg
insb
cld
fadd
add
ret
in
xchg
cwtl
cmpsb
mov
add
mov
lods
lods
add
cmpsb
mov
sub
pop
mov
push
push
call
add
add
shrb
lods
add
loopne
add
stc
add
jge
mov
imul
scas
jmp
mov
add
add
hlt
popa
xchg
lahf
mov
mov
mov
movb
pop
test
je
push
dec
shl
pop
mov
push
push
push
push
push
call
roll
add
add
add
add
out
mov
add
jmp
faddl
push
add
nop
add
add
add
call
lods
add
add
pop
push
mov
xchg
add
add
jb
add
add
add
add
loop
add
test
je
push
push
push
lea
push
push
push
push
push
call
add
mov
add
push
add
lock
out
pop
jmp
in
add
add
add
add
mov
mov
ficomps
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
test
cli
iret
into
add
add
add
jae
add
add
add
mov
jp
movsb
add
popa
les
pop
mov
mov
push
shr
shl
inc
pop
inc
push
push
push
lea
push
push
push
push
push
call
add
add
into
mov
mov
cwtl
decb
out
lret
clc
mov
add
add
add
add
xchg
je
push
imul
add
fmull
data16
mov
loopne
lcall
rorb
test
add
push
push
push
lea
push
lea
push
lea
push
push
call
out
roll
add
add
add
push
insb
add
pop
ljmp
add
xchg
in
mov
lds
out
addb
add
mov
popa
lea
int3
add
mov
add
add
pusha
push
sti
sub
pop
test
je
mov
push
rol
ror
pop
inc
push
push
lea
push
push
push
lea
push
push
call
pop
mov
xchg
jecxz
jne
icebp
add
mov
lret
cli
jb
mov
add
add
jle
loope
add
add
ficomps
add
add
iret
mov
lcall
sbb
add
add
mov
icebp
jns
out
add
push
pusha
cmc
add
mov
stos
sub
pop
cmp
je
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
push
mov
cmpsl
add
outsl
cld
jge
nop
lret
add
add
add
mov
add
add
fmuls
fldl2t
add
add
add
fdivr
lcall
rorb
or
call
test
movsl
int3
adcb
add
add
loopne
jl
push
test
add
add
add
add
pop
add
int3
add
pop
add
add
mov
pop
pop
imul
cli
jecxz
push
add
pop
sti
in
jb
pop
add
add
clc
pop
xor
pop
push
push
call
push
mov
add
fiaddl
lcall
add
fs
mov
into
add
add
nop
add
imul
add
xchg
mov
mov
add
scas
pop
jbe
into
popa
add
loop
add
sub
pop
pop
push
sub
xor
pop
pop
push
push
call
int3
push
add
jnp
mov
xchg
loopne
out
in
lds
loopne
add
lret
mov
jns
add
add
icebp
into
add
scas
push
sub
pop
pop
push
sub
not
not
pop
leave
ret
push
add
pop
mov
push
lea
push
push
push
call
xchg
frstor
testb
add
mov
add
push
ror
add
fldl
sahf
mov
roll
add
add
add
mov
add
in
lock
inc
cmp
jne
push
push
call
add
add
out
fistl
mov
mov
enter
testb
add
push
bound
fistpll
ja
loopne
add
mov
pop
sub
pop
lea
mov
push
inc
add
inc
not
pop
test
je
mov
push
not
dec
pop
add
cmp
jne
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
pop
into
add
add
xchg
add
mov
mov
fistpll
add
imul
push
jmp
mov
fs
shr
sub
pop
mov
push
push
lea
push
push
push
push
push
push
call
push
mov
add
data16
mov
popl
aam
lahf
fs
add
lea
add
add
add
hlt
movsb
sub
pop
test
je
push
inc
dec
sub
pop
mov
add
push
ror
pop
cmp
je
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
add
loope
mov
add
pusha
add
add
add
add
loopne
jmp
push
push
push
push
push
push
call
add
pusha
loope
add
add
xchg
xchg
add
add
xchg
add
mov
add
add
jns
add
add
add
lock
add
lcall
rclb
push
push
call
int3
push
add
popf
imul
rcrl
add
out
data16
add
bound
cli
add
add
testl
leave
outsl
mov
add
aam
jae
movsb
sub
pop
pop
push
add
shl
pop
pop
push
inc
add
pop
pop
pop
push
push
lea
push
push
call
fwait
add
test
push
pop
std
clc
jmp
add
shl
cltd
jbe
add
add
cltd
add
into
jbe
je
in
lock
lcall
push
push
push
lea
push
push
push
push
call
add
add
cmc
mov
xchg
loopne
add
add
mov
cli
add
add
sbbl
in
imul
shlb
mov
ljmp
jne
test
les
add
add
add
mov
add
shll
jno
in
in
ret
lea
push
push
push
push
push
push
call
mov
ret
aam
add
add
mov
add
stos
add
add
lret
loope
aam
add
pop
pop
pop
push
add
shr
shr
add
pop
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
in
ficomps
xchg
mov
test
add
iret
notl
hlt
movsl
mov
pop
mov
add
ja
add
aad
cmpsb
cmpsl
mov
sahf
add
add
filds
lcall
push
shr
sub
pop
ret
mov
push
lea
pop
pop
push
lea
push
push
push
push
lea
push
push
push
call
mov
into
mov
add
add
loopne
cmpsb
imul
add
push
add
add
add
roll
lret
jb
xchg
pop
pop
jecxz
mov
lock
mov
gs
data16
add
jb
flds
push
fwait
add
pop
pop
push
not
pop
pop
pop
push
add
pop
leave
push
shl
dec
pop
ret
cmp
mov
inc
lret
ror
cmp
into
mov
ror
mov
mov
mov
out
lret
or
lret
or
mov
add
add
std
cmp
sub
mov
lods
ret
fbstp
xor
imul
dec
ss
jbe
inc
inc
sbb
dec
xor
adc
xor
hlt
sarl
or
mov
test
sub
inc
in
fistps
xor
adc
jnp
jne
jp
js
push
leave
dec
insl
scas
cltd
leave
outsl
or
les
jb
andl
dec
push
out
pcmpeqd
pop
add
xor
push
vaddps
mov
mov
es
pop
adc
xchg
inc
loop
push
cmc
inc
and
inc
into
fildll
inc
fcmovnbe
xor
test
mov
outsl
dec
push
mov
pop
movsb
lcall
cmp
xor
divb
or
jae
dec
imul
sub
enter
sub
mov
aaa
call
js
push
je
andl
xor
imul
jg
ffree
faddp
mov
lods
test
mov
pop
out
mov
jl
test
mov
mov
int3
sub
xchg
daa
loope
inc
add
mov
shlb
insb
in
test
rcll
adc
out
mov
test
and
fldt
jae
xor
jne
xor
dec
mov
inc
stos
sbb
dec
gs
call
test
enter
dec
ret
lcall
int3
test
jo
fldt
mov
aad
push
mulb
fsub
popf
pop
push
pusha
imul
and
and
sbb
jge
aaa
push
ficoml
std
nop
inc
fsts
sub
and
or
jns
lds
pop
int
and
scas
push
pop
xchg
sbb
xchg
cwtl
daa
push
ret
xchg
int3
xchg
and
pop
jmp
es
fidivl
jp
hlt
hlt
add
test
gs
push
push
daa
adc
scas
jle
ss
mov
imul
xchg
mov
iret
clc
pusha
jnp
jmp
test
pop
out
jae
pop
outsb
xor
arpl
and
ret
jno
jl
clc
incb
mov
mov
sti
mov
pop
jo
sti
cmp
jle
adc
pop
pop
xlat
jecxz
insl
test
xor
xchg
insb
sub
loopne
sub
xor
imulb
das
push
xchg
out
add
imul
rol
fldcw
mov
into
lock
ss
jns
leave
fcmovne
jg
mov
push
jae
sbb
insb
clc
xchg
mov
iret
and
mov
fdiv
into
mull
rorb
lret
or
fs
shrl
cmp
mov
jmp
jmp
push
loope
cmp
outsl
inc
lahf
jne
pop
inc
jmp
jb
mov
les
das
push
cmp
add
out
adc
cmc
loop
stos
scas
pusha
adc
xchg
inc
sub
add
sbb
push
mov
xchg
pusha
rorl
sub
sti
pop
mov
rcr
or
and
sub
push
mov
adc
jae
cltd
sahf
xchg
filds
into
mov
int3
pop
cmp
or
jne
adc
jne
js
cld
sub
test
xchg
shll
cmp
leave
fiadds
push
mov
ljmp
das
jno
daa
ret
mov
inc
lret
cwtl
lret
xorb
dec
inc
pusha
bound
xor
cltd
sub
add
fadd
sti
inc
xor
mov
fdivr
and
stos
hlt
and
in
mov
mov
jmp
fcoms
in
dec
or
and
enter
mov
or
mov
or
std
js
aas
add
jbe
movsb
stos
jnp
push
add
rcl
cmp
mov
sub
mov
lcall
mov
push
sbb
xchg
gs
and
and
sahf
jb
jmp
sbb
sar
or
pop
mov
aam
std
movsl
xor
dec
and
jge
adc
xchg
addr16
iret
mov
jno
test
pop
dec
xchg
les
xchg
xor
loopne
arpl
cmp
mov
or
js
and
cmp
mov
rcll
inc
call
lahf
js
popf
ljmp
cmp
mov
xor
shll
out
mov
sub
negl
push
add
cmp
push
nop
xor
popfw
xchg
mov
punpckhdq
and
jo
repnz
adc
inc
js
jmp
fists
aad
or
pop
hlt
pop
jge
jae
cmp
mov
pusha
add
iret
cmc
lods
add
inc
mov
mov
cmp
pop
sub
fwait
xchg
stc
cmp
es
fnstsw
add
lahf
fcmovu
inc
iret
push
out
pop
scas
and
or
xchg
xor
adc
inc
mov
cmc
pop
xchg
ror
adc
cmc
mov
loopne
cmp
adc
lcall
lahf
mov
or
dec
cltd
stos
addl
push
js
imul
jb
jl
hlt
dec
adc
cmp
xchg
xchg
and
fdivl
sub
out
xor
popa
scas
subl
hlt
inc
mov
leave
shr
inc
pop
jb
mov
cmp
xchg
lret
mov
neg
rorb
lret
xlat
xchg
insl
fimull
mov
hlt
icebp
into
sub
jecxz
and
sbb
test
fwait
add
in
sar
mov
aas
movsl
aam
add
dec
adc
mov
clc
sbb
bound
adc
push
push
push
cmp
stc
xor
gs
into
fs
sbb
lcall
push
mov
push
jp
fstpt
cli
adc
jae
mov
and
das
stos
push
jns
mov
ja
cmp
add
jg
dec
mov
lods
test
add
mov
test
xchg
sbb
push
xchg
mov
inc
add
ljmp
scas
adc
xor
xchg
stos
jo
std
or
in
sub
js
mov
and
fsubrs
pop
push
lea
scas
addb
fisubrs
or
xchg
inc
shr
xchg
adc
dec
outsb
dec
push
scas
rorb
sbb
xor
push
jp
adc
and
adc
fiaddl
add
sub
test
xor
ds
ds
jge
lret
gs
jb
jge
lods
and
jg
lahf
add
dec
in
loop
adc
sbb
ljmp
pop
xchg
clc
xchg
xchg
sbb
jle
mov
mov
sbb
sbb
popf
and
mov
pop
jbe
pop
xchg
pop
dec
cli
popa
dec
cmp
ss
ds
stos
mov
stc
gs
iret
and
adc
inc
mov
out
scas
or
xor
fs
pop
popa
pop
iret
enter
dec
inc
push
jg
mov
pop
cmc
addr16
mov
xlat
push
pop
push
js
loopne
pushf
lods
scas
sub
fisubrl
cli
int
int
or
fildl
outsb
cmc
scas
mov
hlt
nop
daa
mov
mov
push
dec
push
sbb
shlb
xchg
mov
dec
xchg
pop
mov
enter
call
imul
pop
xor
sub
cmp
pop
cmpsb
cmc
sahf
push
jle
popa
inc
push
xor
aaa
mov
int3
dec
sahf
cmp
jnp
adc
lds
push
cmp
fildl
mov
and
xorb
dec
xor
lret
sub
std
jo
loopne
push
lcall
mov
notb
aas
rcr
mov
xchg
int
dec
and
xchg
jle
inc
roll
mov
test
mov
adcb
lcall
test
adc
out
or
insl
push
push
and
loope
daa
mov
mov
mov
add
lods
push
xor
xor
mov
scas
pusha
ljmp
cmp
cmp
xor
pop
mov
repnz
aad
aam
cwtl
push
push
aam
sahf
in
mov
cltd
xchg
mov
mov
lea
mov
cld
push
and
cmpsb
xor
sti
mov
pop
add
je
in
add
jbe
fsts
movsb
mov
orl
lahf
inc
outsl
cld
sub
enter
push
dec
inc
or
icebp
mov
cmp
movb
out
ja
jne
cmp
push
add
iret
repz
stos
idivl
xlat
out
inc
xchg
ds
aas
cli
fsin
xchg
iret
cld
fsubl
sub
hlt
jg
arpl
sahf
pop
stc
loopne
pop
into
lods
cmp
fsubrl
int
imul
jge
pop
ja
outsl
pop
ret
inc
cmp
add
sub
ret
ljmp
icebp
and
pop
push
imul
xor
jns
aam
adc
cli
punpckhdq
leave
sub
adc
movsb
leave
ret
push
iret
in
adc
add
cli
and
xchg
test
aas
insb
imul
sub
pop
push
cwtl
popa
loop
loop
inc
into
fmul
mov
gs
les
jbe
loope
scas
test
mov
cmp
loop
pop
mov
sbb
sub
jmp
jmp
push
inc
mov
es
mov
decl
ljmp
leave
cmp
popa
sbb
hlt
jecxz
push
xlat
sbb
dec
xchg
aad
int
inc
mov
or
and
push
mov
jo
pop
ss
out
rcrb
bound
xchg
mov
fcompl
cmp
std
adc
lahf
xchg
jae
mov
adc
cmp
or
cmp
aam
dec
mov
jno
loopne
push
mov
adc
test
dec
sbb
cmc
xlat
cwtl
xor
jae
test
aad
mov
sub
lea
mov
push
mov
popf
add
shrl
pop
movsb
mov
add
push
add
inc
ja
mov
cmpsb
mov
clc
xor
rol
int3
in
jecxz
pop
pushf
push
xlat
dec
rclb
mov
sub
cmp
xchg
das
imul
int3
xor
dec
mov
xchg
in
and
test
in
jmp
mov
push
jge
pop
inc
ret
dec
inc
jo
cwtl
inc
shll
pushf
int3
call
loope
push
pop
pop
add
hlt
out
je
js
ret
lods
pushf
cmp
mov
mov
pusha
sbb
mov
lret
or
mov
mov
push
int3
pusha
ss
lods
xor
dec
xor
xchg
mov
pusha
pop
jg
mov
xor
xor
scas
leave
sbb
imul
out
mov
dec
cmpsl
jg
sub
shlb
loope
pop
jp
bound
jecxz
or
mov
movb
aaa
int
fsubrl
movl
punpcklbw
les
xchg
mov
insb
mov
cli
mov
pop
nop
or
fcomp
pop
bound
repnz
cmp
fnstenv
jnp
xchg
jbe
push
sub
out
ficoms
test
and
nop
adc
mov
repz
mov
out
in
sbb
int
xor
push
andb
aad
lret
in
out
repz
cmp
movsb
sub
push
mov
addb
sbb
lea
jbe
adc
mov
decl
ljmp
cs
xchg
stc
mov
jae
decl
inc
pop
sbb
jmp
repnz
sbb
xchg
add
mov
mov
aam
rolb
adc
stc
sar
xchg
mov
lds
and
fnstcw
jecxz
pop
adcl
sub
hlt
test
cltd
ret
movsb
jg
mov
jmp
and
js
push
sub
add
stos
push
pop
cmp
punpckhdq
inc
inc
inc
push
fnsave
aad
pop
and
repz
or
sahf
jns
leave
cmp
sti
icebp
int
push
test
fwait
mov
js
in
clc
sub
rcrb
mov
inc
in
pop
xchg
and
leave
inc
push
mov
call
sbb
cs
push
jge
sub
cwtl
scas
jnp,pn
fistpll
adc
sub
push
adc
loop
xchg
les
call
mov
scas
and
adc
in
jae
jmp
add
and
mov
xchg
sub
xor
popa
inc
add
push
xchg
add
in
dec
push
mov
call
pusha
cmp
dec
push
mov
test
push
cmc
call
mov
lcall
mov
scas
adc
mov
and
arpl
mov
dec
cs
insb
sub
xor
jle
push
cwtl
repz
popa
adcb
aas
fiaddl
pop
inc
sahf
add
sbb
pop
pop
rorb
mov
xlat
rorb
adc
cmp
adc
lret
dec
inc
nop
push
sub
cmp
lock
sbb
popf
pushf
mov
movsl
xchg
lahf
repnz
ret
push
xchg
cmp
in
stc
add
mov
xchg
jns
addl
imul
jno
lret
das
inc
dec
mov
sub
sub
add
mov
je
jp
outsb
mov
insl
ret
bound
jbe
adc
cltd
out
xchg
mov
xchg
stos
or
mov
mov
sbb
push
inc
mov
imul
mov
xor
rcrl
dec
sub
inc
pop
sbb
out
jnp
mov
inc
mov
popl
insl
loopne
push
push
sbb
popa
repnz
mov
bound
jno
fcmovbe
add
push
xor
stos
pop
rorb
or
cli
jne
mov
xlat
pop
inc
cmp
pop
jnp
out
loope
mov
jp
sbb
ficoml
xlat
jno
inc
inc
daa
sbb
sub
push
cwtl
sbb
test
sbb
scas
add
imul
pop
repnz
mov
cmc
pop
inc
test
jb
push
xchg
out
jl
ss
imul
jge
stc
sub
cs
test
addl
jns
stos
sub
mov
sub
mov
jge
jl
mov
jp
pushf
sub
loopne
pushf
in
xchg
ja
xor
xlat
shrb
fwait
mov
xchg
sub
push
fistpll
sub
jg
dec
cmp
sbb
mov
cwtl
test
bound
mov
ret
add
test
pop
inc
in
rcrb
xchg
pop
aaa
cld
pop
inc
loope
or
mov
cmp
movb
ja
ljmp
add
bound
jbe
out
mov
cwtl
cmp
pop
mov
out
test
test
xchg
out
outsl
xor
loop
fwait
xchg
mov
push
daa
cmp
xchg
sti
inc
mov
lret
sbbl
imul
ljmp
push
dec
xchg
and
mov
push
lahf
outsl
dec
sbb
dec
lret
clc
adc
inc
das
es
xchg
pop
push
hlt
add
cmp
mov
cmpsl
jnp
daa
loopne
mov
or
mov
test
dec
cld
push
out
out
popf
dec
xor
push
cmp
sbb
cmp
std
and
inc
rorb
xchg
sbbb
adc
gs
sbb
fisubl
and
loope
imul
xchg
sbb
dec
sahf
rclb
mov
fs
lret
popa
push
fisttpll
pop
scas
and
movsl
imul
cmp
and
inc
inc
adc
inc
outsl
cmc
xchg
push
cld
xchg
cmc
lahf
imul
arpl
adc
div
push
mov
loop
sbb
add
imul
popa
subb
jecxz
adc
pop
push
out
push
dec
xor
insl
pop
fsubp
cmp
sub
jno
xchg
jmp
or
ljmp
jno
xchg
jmp
repz
lea
push
aaa
sbb
negb
lods
fadd
jb
mov
jb
xchg
jmp
leave
cmpsl
cld
enter
adc
out
mov
push
push
pop
cwtl
sbb
push
mov
adc
aas
jo
inc
pop
inc
es
subl
in
dec
outsl
mov
adc
sub
ja
mov
cli
sbb
mov
fs
movsl
ficoms
loopne
stc
mov
mov
pop
xlat
inc
lret
mov
cmp
ret
pop
je
call
xor
lcall
and
out
not
daa
sub
shr
add
sbb
daa
xchg
int3
incb
cmp
xchg
ret
xchg
sub
xor
js
out
inc
into
out
mov
mov
pop
push
mov
or
and
push
mov
mov
lret
pusha
add
inc
mov
sub
lret
xchg
or
and
xchg
hlt
or
inc
rclb
outsb
shll
and
mov
push
push
fcompl
cmpb
leave
mov
iret
add
addl
cmp
loope
pusha
lods
cmp
cmpb
xor
aad
adc
ljmp
pop
mov
test
call
or
pop
mov
inc
cmp
dec
mov
jns
mov
lea
jno
out
sub
repz
sarb
imul
add
mov
jne
cmpsb
lret
bound
lods
int3
jb
cmp
inc
les
sbb
and
cmpsl
xchg
in
and
ja
ret
xorl
xchg
inc
mov
jbe
jp
jo
xlat
imul
popa
sub
out
stos
sbb
adc
mov
out
es
das
push
sbb
xor
push
lock
repz
repz
jecxz
sub
mov
out
loop
inc
mov
and
xchg
ret
incl
pop
loop
xchg
cmpsl
lret
inc
aaa
insl
xor
xorl
pop
test
xchg
sub
inc
fisttpll
out
into
bound
ja
mov
add
mov
hlt
adc
ret
jbe
call
xchg
bound
cmpsb
push
pop
adc
scas
mov
cwtl
pop
mov
add
stos
cwtl
adc
mov
mov
shll
icebp
bound
mov
mov
cli
adc
and
leave
jne
nop
ja
fwait
add
xchg
xchg
sub
add
pop
clc
inc
pop
pushw
jge
push
or
and
push
popf
jnp
mov
inc
dec
adc
xor
adc
xchg
pop
adc
dec
rcl
push
imul
sbb
mov
inc
xlat
sub
clc
gs
out
pop
push
popl
int3
add
ss
sbb
cmp
sbb
negb
inc
mov
mov
ret
movlps
cmp
test
adc
iret
sbb
loope
jo
incl
xchg
push
ja
std
lahf
pop
cmp
jmp
pop
lret
xchg
leave
or
test
mov
subl
cmp
lods
aam
mov
mov
mov
add
jle
in
cld
fimuls
test
jns
maskmovq
notl
push
and
push
unpckhps
jecxz
inc
and
xchg
adc
inc
add
xchg
push
imul
and
mov
ret
stos
jae
inc
loope
push
aas
xchg
les
leave
mov
mov
dec
pusha
stos
pop
icebp
mov
in
fucom
mov
cwtl
push
xor
pop
int3
lret
mov
jne
xor
inc
add
sbb
xor
call
push
inc
adc
sub
jb
ret
inc
xchg
jb
cwtl
iret
popf
lret
cmc
dec
test
mov
arpl
mov
xchg
mov
mov
lds
sahf
orb
lea
outsl
int3
xchg
fcmovnb
mov
push
ja
xor
aad
mov
add
mov
fsubs
stc
jo
rcll
sti
loopne
ja
sbb
movsl
fdivl
roll
inc
das
cmp
and
mov
shll
lea
daa
mov
fucomp
mov
mov
rep
mov
xor
mov
ret
or
mov
or
xchg
int
pushl
sbb
adc
mov
test
sbb
lock
xor
sbb
jns
mov
fsts
jnp
cmp
cmpsb
cmc
push
or
mov
jo
mov
outsl
ds
or
lods
leave
sbb
jb
dec
sub
pusha
jb
iret
pop
nop
mov
adc
sahf
mov
push
xchg
int3
jle
pushf
fsubrs
scas
lahf
pop
cmp
sbb
mov
dec
pop
or
ja
dec
jg
cmpsl
fistps
psllw
fs
sbb
sbb
and
sub
push
dec
loopne
mov
sahf
dec
adc
push
insb
mov
or
lret
out
pop
out
fistpll
movsb
decl
int
sbb
enter
rcl
sub
sub
mov
aas
fnstcw
dec
xchg
jecxz
mulb
fidivs
cmp
mov
xchg
sbb
mov
fdivrl
sarb
or
addb
xchg
scas
pop
jne
and
stc
fsubrl
add
xchg
shl
sub
cmp
pop
cs
in
mov
lds
popa
xchg
mov
int
xchg
ja
mov
fwait
and
inc
lret
jae
rcrb
pusha
mov
mov
pop
stc
and
push
mov
test
xchg
test
std
sub
into
leave
lods
xor
out
push
stc
aam
mov
adc
outsb
mov
xor
jle
repnz
and
ret
les
scas
xchg
ljmp
test
hlt
out
movsb
enter
lods
je
jbe
inc
inc
or
push
mov
repnz
inc
dec
pushf
mov
fisubrl
shll
add
aam
pop
mov
mov
xor
fiadds
cmpb
aaa
sahf
jge
xchg
jns
popa
scas
sbb
dec
mov
inc
mov
push
pop
jb
rclb
iret
ja
mov
cltd
cld
imul
fiadds
mulb
xor
rcrb
test
sub
dec
xchg
orl
std
cmp
inc
std
mov
icebp
out
jmp
mov
pop
lcall
and
mov
aam
imul
es
icebp
mov
pop
int
jp
adc
ja
xor
cld
cmpsl
ljmp
sub
adc
mov
cmp
adc
mov
outsb
imul
sub
push
shl
sbb
jmp
scas
jp
push
push
jmp
sti
mov
nop
adc
add
and
mov
pop
xchg
and
pop
mov
call
sbb
ret
lock
jg
push
imul
loopne
rorb
insb
and
pop
movsl
movsb
lea
mov
push
out
cmp
xchg
cmp
sarb
xor
push
mov
popa
dec
and
mov
lcall
adc
sbb
pop
adc
mull
in
test
xor
lahf
clc
jmp
stos
in
or
add
inc
xchg
pop
push
xlat
jle
pop
or
shrb
xor
aad
leave
sbb
sbb
lahf
lods
lea
mov
hlt
out
xlat
jns
add
mov
dec
inc
popa
clc
icebp
mov
es
into
inc
push
xchg
xchg
adc
test
fstpl
fiaddl
mov
mov
imul
std
xor
enter
call
pop
pop
xor
dec
call
add
dec
sub
mov
fstl
in
cmpsl
and
or
ret
mov
das
push
subb
jns
rol
add
jae
popf
jo
test
xor
inc
and
mov
sbb
ret
mov
inc
gs
cmp
push
mov
mov
lret
jo
sub
js
clc
jbe
nop
push
and
xorb
dec
sbbb
mov
push
out
adc
mov
adc
xchg
add
mov
pop
shll
leave
or
adcl
loopne
add
adc
into
pop
mov
imul
and
add
imul
dec
push
mov
inc
or
mov
call
push
mov
or
fldt
mov
xlat
addb
jg
repz
aas
lcall
rcll
mov
jp
ljmp
sbb
mov
stos
ret
mov
stos
test
leave
xchg
fwait
jmp
inc
lcall
xor
cs
andnps
and
ret
aaa
iret
jbe
push
repnz
jp
sbb
push
rcll
xor
das
and
push
enter
stos
outsb
push
fcoms
daa
int
dec
movsl
fcomi
pop
les
sub
notl
mov
in
and
testb
add
and
push
sub
movsb
jb
mov
xchg
sub
add
and
daa
push
ret
sub
rcl
bound
adc
call
dec
test
adc
push
out
lods
xchg
aas
adc
stos
or
std
into
mov
dec
mov
and
stos
movsl
cmpsb
ret
or
or
pop
stc
fsubrs
vpunpckhdq
xchg
mov
dec
xchg
les
lcall
sbb
jnp
sti
test
mov
mov
std
sub
push
dec
add
lock
fsubr
lcall
je
add
mov
stc
inc
outsl
or
dec
dec
fnstsw
mov
ja
scas
push
sbb
into
mov
sub
pop
jle
sub
std
adc
pop
mov
daa
lods
xor
sub
jno
sbb
sub
bound
pop
xor
lcall
or
or
ds
mov
mov
ljmp
sbb
pop
jns
jno
aas
out
roll
sbb
add
and
sub
cli
push
mov
stc
fdivl
gs
inc
popf
push
movsl
sti
in
or
shlb
out
dec
sbb
inc
mov
stc
lcall
jmp
repnz
sbb
dec
or
dec
scas
lods
rdmsr
sub
addr16
test
push
push
pop
mov
sbb
fadds
xor
fs
rcrl
cmpsl
jmp
mov
dec
mov
out
pop
fisubl
inc
outsb
pop
push
test
mov
push
adc
xlat
mov
push
insb
pushf
test
mov
sub
xchg
inc
loope
xchg
mov
mov
sarb
pop
mov
loope
and
shll
cmp
pop
std
push
xchg
push
ljmp
test
ffreep
xor
sub
jbe
push
mov
out
lods
outsb
mov
mov
adc
push
repz
dec
sub
hlt
pop
dec
inc
stos
pop
cmp
addb
jmp
push
fwait
ret
xchg
call
cli
inc
pushl
xor
aam
push
pop
xchg
xor
sub
push
mov
loopne
inc
fiadds
sbb
aas
push
in
mov
adc
loope
dec
sbb
fnsave
test
sbb
enter
lcall
cmc
cmp
test
in
div
pusha
sbb
call
idivb
cwtl
fsubl
orps
sbb
shrl
fdivs
mov
pop
xchg
fiaddl
jb
bound
movl
test
push
aam
in
fistpl
pop
sbb
mov
adc
jle
dec
popf
es
mov
push
pop
and
cmp
test
incl
mov
ret
xchg
scas
mov
dec
mov
pop
test
enter
jb
mov
mov
icebp
cwtl
push
orb
and
add
sbb
xchg
pop
dec
mov
sub
jp
aaa
in
mov
cmp
cmc
daa
inc
insl
aad
pop
sbb
inc
xchg
mov
xchg
int
and
clc
test
cmp
sbb
xchg
push
jns
fs
and
mov
and
cmp
gs
cmp
fwait
jo
mov
lds
mov
cmp
push
inc
and
cmp
jecxz
sbb
in
out
adc
sub
jbe
jno
or
jge
jge
inc
sbb
dec
cmp
jae
pop
pusha
out
pop
jb
sub
push
testb
pop
sbb
movsl
fs
mov
xor
xor
xor
add
push
movsb
mov
mov
push
sbb
lds
lret
fnsave
mov
mov
insb
popa
lret
adc
inc
inc
pop
push
xchg
adc
mov
scas
das
imul
jbe
mov
xor
es
xchg
icebp
hlt
cmp
pop
sub
cmp
mov
mov
sub
loopne
xor
fwait
ror
push
jne
outsl
or
adc
dec
flds
fbld
repnz
stc
xchg
call
ds
cmp
scas
push
sarl
pop
in
cmp
je
cld
pop
push
add
pushfw
shll
bnd
jbe
data16
lahf
jnp
inc
lea
pop
mov
push
mov
jno
in
jmp
aad
movsl
sub
mov
jbe
test
mov
dec
sbb
testb
and
jne
imul
jbe
and
sub
xor
ficoms
fstl
dec
inc
popf
xchg
scas
faddl
mov
pusha
cli
cltd
xchg
dec
shlb
daa
push
dec
dec
cs
push
call
xchg
sub
mov
psllw
das
daa
imul
mov
neg
xchg
movsb
mov
scas
out
jcxz
inc
dec
xorb
dec
push
movl
sub
repz
mov
mov
jbe
leave
or
stc
mov
cld
xlat
xchg
mov
xchg
test
push
mov
adc
es
mov
or
mov
mov
fsubr
xor
test
xchg
daa
push
mov
mov
imul
outsl
ja
stos
xor
mov
mov
and
or
dec
or
iret
sub
xor
mov
mov
shll
insb
adc
mov
cmp
jae
les
pmullw
popf
jmp
into
inc
ja
jecxz
in
sub
sub
mov
jg
sbb
out
push
inc
push
leave
push
loopne
cltd
mov
rolb
xchg
xlat
enter
mov
sarb
clc
or
jp
shl
les
arpl
add
cmp
lcall
out
mov
fcom
push
lahf
repz
mov
inc
add
xchg
adc
xor
dec
pop
lock
movsb
and
mov
daa
jno
xor
add
inc
sti
out
pusha
jl
mov
xchg
add
jbe
lahf
or
mov
or
push
pop
inc
int
ficomps
jno
cmpsb
xor
and
mov
lret
xchg
aad
or
jecxz
xor
push
push
fucomp
pop
sub
dec
jnp
repz
sbb
cmp
jg
mov
jmp
lods
add
jo
adc
out
push
cli
ror
mov
out
sub
push
or
cmc
mov
sbb
jg
add
rcrl
fs
stos
nop
lds
jl
mov
inc
cmp
cmp
or
out
pop
dec
in
cltd
decl
cmp
hlt
xchg
dec
clc
paddq
std
jl
mulb
pusha
das
cld
add
shrl
pop
xlat
xor
ds
adc
fsubl
adc
pop
pop
cmp
mov
test
sbb
cmpsl
sub
or
inc
or
pop
stos
andl
sbb
adc
shlb
test
fld
sahf
faddl
xor
sub
mov
dec
call
pop
pop
push
test
inc
mov
insl
sub
push
test
mov
dec
push
push
mov
adc
les
fistl
push
add
inc
cmpsl
nop
mov
xchg
aam
in
pop
add
jle
movsb
lret
out
pop
cld
pop
popa
loope
bound
mov
popa
nop
loopne
fistpl
pop
pop
outsb
popa
cmpb
movsb
cltd
sub
and
int3
sbb
mov
xchg
pusha
divb
push
mov
repz
sub
cmp
dec
sbb
pushf
xlat
cmc
hlt
lcall
mov
leave
gs
fcoms
bound
out
cmpl
xchg
mov
xor
ret
iret
bound
andl
std
sub
fistps
insl
shll
jns
sub
push
fisttpll
fstl
mov
pop
mov
or
dec
incl
xchg
andb
add
mov
xchg
clc
ss
shrb
mov
or
xchg
frstor
cmp
xchg
mov
jae
inc
push
out
adc
and
test
xchg
mov
mov
jno
inc
scas
pusha
push
aam
add
mov
inc
leave
cmp
sti
icebp
cltd
fcmovne
scas
inc
loop
add
lahf
inc
in
cmp
push
adc
dec
dec
mov
insl
cmp
mov
or
ljmp
sbb
push
in
jecxz
mov
mov
test
aas
subb
insl
stos
pop
aam
push
dec
jg
xchg
xlat
je
mov
addr16
js
jb
and
js
hlt
test
and
lcall
pop
xchg
inc
loopne
xchg
dec
jne
and
mov
fistpl
ret
fdiv
jg
ret
mov
sbb
cmpsb
fninit
and
out
mov
push
xor
test
aad
mov
shlb
jo
imul
les
mov
and
rcrb
sbb
sti
jmp
mov
int
neg
jne
shlb
out
mov
mov
aas
call
inc
adc
push
movsb
jbe
out
shll
cmp
jl
das
sarl
sbb
mov
outsb
dec
add
xchg
divl
fadds
ljmp
aaa
ja
test
xor
mov
ret
jle
inc
bound
xchg
jne
imul
xor
insb
lcall
mov
xchg
add
mov
or
mov
aas
sub
call
mov
je
jp
jp
inc
negb
mov
mov
xchg
faddl
clc
mov
lock
jb
xor
test
inc
xor
rcll
fwait
stos
stc
sub
sbb
jg
aaa
adc
xor
fdivr
push
rcll
daa
out
pop
mov
push
mov
into
pop
cmc
jecxz
mov
insb
push
mov
xor
mov
cmpsb
mov
xor
push
das
adcb
nop
mov
xchg
rolb
dec
dec
clc
or
sbb
jnp
icebp
std
jg
in
rcll
cmpsb
dec
stos
leave
add
mov
cld
push
mov
inc
shll
sbb
fs
dec
mov
movsl
mov
les
adc
sub
movsl
adc
ret
pop
push
incb
push
enter
mov
jns
cltd
mov
sbb
add
or
jbe
je
ret
scas
clc
fistpl
xchg
rorb
mov
scas
adc
bnd
sbbl
sti
dec
cmp
fwait
into
jo
cmc
ds
pop
mov
and
jl
sahf
push
cmpsl
data16
xor
filds
sub
popa
or
sub
ret
dec
mov
push
pusha
xchg
and
sub
sub
xor
lret
repz
sub
mov
cmp
or
popa
pop
pop
leave
sar
mov
rorl
shl
jb
cwtl
fwait
cmp
pop
mov
das
xchg
pushf
stos
jmp
lds
jp
hlt
adc
pminsw
out
lcall
sub
inc
mov
fisubrs
andl
insb
lahf
or
mov
fidivl
ficoml
out
mov
pop
jle
xchg
lret
mov
xchg
pop
add
paddsw
fwait
sub
adc
outsb
mov
ja
stc
or
push
jge
repz
or
adc
mov
mov
rol
and
adc
xor
mov
push
inc
lret
bound
jo
or
and
out
test
adc
in
or
mov
fmuls
scas
scas
dec
ficomps
push
sbb
dec
adc
js
dec
mov
jge
sbb
jmp
mov
rcll
fxch
jb
cmp
lcall
dec
rcr
mov
dec
jmp
adc
fst
sub
and
jae
cmp
adc
popa
aad
ds
aas
dec
loop
xor
dec
sarl
iret
xlat
mov
sbb
pop
dec
test
push
mov
vprotb
loopne
fdivrl
psubb
cmc
mov
and
test
or
sahf
push
jmp
push
out
fwait
psubsb
aad
sub
push
les
cltd
sahf
mov
or
push
addr16
jno
jbe
add
scas
shll
push
bound
aad
das
movsl
jbe
mov
xchg
aaa
mov
enter
popf
jns
inc
out
movsb
sub
lret
dec
sti
mov
pusha
fbstp
repz
out
std
leave
sbb
shlb
je
inc
adc
mov
sbb
sarl
sbb
mov
leave
lret
add
pop
aas
add
cmp
xor
inc
inc
scas
daa
mov
pop
mov
jne
loope
out
mov
push
sahf
mov
cmp
sbb
rorl
or
dec
or
rorb
stc
mov
sub
fnstsw
and
cltd
cmp
cltd
aad
shlb
stos
jno
cmp
mov
xchg
rcrl
dec
xchg
push
lcall
dec
or
mov
and
in
mov
cmpsl
roll
addr16
xchg
and
ret
xor
aam
mov
cmp
cld
lds
cmp
in
imull
mov
popa
pop
das
in
cmp
add
movsb
out
rorl
insb
addr16
add
das
iret
add
dec
imul
xor
mov
cmpl
leave
out
aam
stos
sbb
sub
ljmp
nop
ljmp
mov
pop
mov
push
mov
es
jae
xchg
es
xchg
jl
sbb
xor
cwtl
es
loop
inc
xchg
out
and
dec
cs
sub
xor
je
div
jnp
adc
icebp
das
xor
mov
or
aam
adc
hlt
and
mov
pop
icebp
aad
add
push
inc
pushf
adc
sbb
adc
daa
pop
xor
push
mov
dec
or
pusha
mov
dec
push
pop
cmp
jle
cld
adc
xchg
gs
cmp
xchg
repnz
icebp
jns
mov
mov
mov
jmp
mov
xor
cmp
and
jl
push
or
pop
push
or
inc
xor
or
mov
jne
ja
mov
popf
or
push
sub
sbb
sbb
call
mov
stc
sbb
adc
test
in
push
mov
mov
sub
loopne
iret
adc
popf
sbb
out
jg
or
inc
movsl
xlat
mov
mov
jge
xor
lret
xor
sbbb
daa
sub
fildll
into
mov
cli
mov
xor
push
test
jo
popl
jg
cltd
nop
xchg
mov
lods
sub
ja
mov
insb
fstpt
mov
mov
loop
jnp
rsqrtps
outsl
jb
push
xchg
or
cwtl
pop
jns
adc
mov
adc
jbe
sub
mov
and
roll
mov
jge
dec
mov
addb
mov
pop
dec
xor
stc
push
addr16
mov
outsb
cli
cmc
test
cltd
pop
imul
mov
xlat
inc
sti
dec
jge
adc
scas
in
dec
fcomi
ret
inc
pop
fimull
shlb
mov
and
fwait
pop
xchg
xchg
sub
mov
jle
ljmp
cmp
lods
mov
jecxz
xchg
mov
fidivs
mov
lahf
daa
adc
sbb
out
scas
lret
and
lods
lods
push
repz
xor
jo
jge,pt
testb
jnp
xor
fcmovnb
cltd
aas
mov
data16
test
dec
aam
jns
hlt
xor
or
mov
dec
mov
int3
decl
shlb
jne
mov
popf
mov
add
jae
cltd
test
cs
imul
sahf
pop
adc
scas
add
inc
adc
sub
lock
inc
rolb
in
ficoms
out
imul
pusha
mov
sti
mov
xchg
fs
leave
xchg
or
int3
loopne
jge
inc
in
sub
xor
cmp
add
mov
mov
adc
fstpt
add
sub
mov
imul
push
cs
clc
popf
push
fildl
mov
mov
jge
pop
jg
push
in
xchg
movsl
lahf
movsl
push
test
lret
inc
or
test
jns
pop
inc
jnp
out
dec
mov
sbb
xchg
jbe
sbb
stos
inc
jge
notb
hlt
dec
jnp
popa
nop
cmp
cmp
mov
lea
xor
cmp
mov
push
dec
jge
cld
outsb
xorl
push
dec
insl
aaa
imul
je
cli
xchg
int3
daa
xchg
daa
push
ds
mov
and
xlat
call
dec
cld
inc
add
cmc
in
or
aaa
fadds
movsl
and
inc
inc
sbb
int3
sbb
pop
jae
cmp
outsb
jno
aam
and
shll
cli
test
mov
jb
movsl
mov
in
xor
mov
push
loopne
push
xchg
xor
dec
bnd
les
jne
fadd
push
aas
rolb
into
cmpsl
dec
jle
and
or
lods
fldt
mov
mov
dec
and
cmp
mov
and
cmpsl
lahf
das
pop
sub
shrb
xorl
int3
and
push
test
je
loope
and
sub
rcrb
mov
or
std
mov
cmpsl
jns
mov
mov
inc
jmp
in
push
and
rcr
sbb
mov
nop
fs
xor
ret
xchg
sub
xchg
test
ss
xor
sub
in
or
rcl
dec
neg
int3
outsb
mov
mov
or
pop
call
repnz
pop
sbb
push
push
sbb
mov
mov
stos
xor
test
jb
loope
aad
loop
outsb
inc
xor
adc
jecxz
scas
and
mov
or
sub
int3
idivb
das
dec
xor
mov
mov
inc
sbb
pusha
cli
dec
dec
test
ret
movsb
jnp
es
mov
movsl
add
mov
mov
xchg
fdivrs
into
mov
gs
clc
fstpt
sbb
cs
mov
aad
inc
arpl
and
mov
test
out
sarl
jle
mov
jae
push
pop
sbb
insl
in
inc
cmp
clc
fistps
test
loop
mov
mov
jecxz
fildl
inc
int3
lret
push
sarb
inc
sahf
sub
ficoml
and
test
jg
inc
sub
push
mov
rep
inc
push
dec
push
or
xchg
xor
ja
lret
out
enter
dec
mov
lret
mov
sub
call
lea
loopne
mov
inc
adc
pop
xor
mov
popa
jmp
dec
sub
mov
subl
insb
and
pop
sbb
outsb
iret
mov
dec
push
cmp
popa
mov
add
mov
clc
ss
add
sub
push
mov
fbstp
inc
jns
mov
mov
and
lods
icebp
mov
sub
push
frstor
daa
add
dec
push
xchg
cltd
jnp
jo
fstpl
xlat
fstl
nop
std
jmp
mov
cld
jb
cmp
mov
mov
hlt
xor
mov
sub
in
les
pusha
jmp
fstpl
mov
and
clc
jmp
cltd
sbb
lods
pop
push
and
pop
enter
scas
adc
hlt
out
sbb
cld
inc
mov
add
sbb
xchg
sarl
divl
pop
sub
cmc
mov
popf
add
cmp
or
xor
stc
ljmp
or
shll
mov
push
sbb
dec
lret
xor
cli
mov
in
xor
lock
mov
test
mov
lahf
popa
loopne
mov
movsb
xor
mov
mov
or
cwtl
mov
adc
add
jo
sarl
adc
inc
iret
adcb
ss
popf
shlb
cmp
xorl
lea
cmp
int3
pushf
popf
cld
pop
dec
sbb
jge
cltd
dec
pop
adc
cmpsb
xchg
fstp
imulb
add
cmp
sub
dec
test
jecxz
push
ficomps
jbe
fstpl
rorl
mov
xor
into
call
sbb
push
pop
jl
mov
push
jae
insb
push
insb
insb
cli
pop
insl
and
pop
push
fmull
pop
cmp
ret
sbb
mov
lods
lods
shll
iret
jns
jge
xchg
js
sbbl
push
mov
imul
jne
lock
popf
adc
lcall
test
rcrb
fwait
push
push
xchg
and
push
xor
xor
sbb
rorb
add
mov
pusha
jo
jp
cmpl
cmp
xor
xor
mov
xchg
pop
fidivl
outsb
mov
jnp
and
imul
jle
jns
bound
imul
out
pop
mov
sbb
pop
xchg
cmp
add
mov
pop
mov
lcall
out
clc
add
xor
jo
pop
addr16
rcrl
and
shl
jae
xchg
add
hlt
xchg
pop
xor
mov
test
in
in
pop
lahf
jg
in
pop
mov
js
dec
xchg
jbe
mov
and
pop
ret
rolb
dec
jmp
and
xor
jns
movsb
jne
push
lahf
div
cmp
iret
adc
loope
mov
shlb
jne
cld
int
int
mov
sbbb
jb
push
mov
out
int3
mov
movsb
clc
test
cmp
fdivrl
sarl
sub
pop
outsb
sar
push
es
test
jno
sbb
dec
sbb
pop
jbe
push
cld
cmpsb
inc
in
fisttpl
out
mov
mov
mov
push
dec
sub
xor
adc
in
dec
mov
repz
out
out
and
fistps
inc
push
lods
ret
mov
imul
cmpb
inc
add
add
xor
lcall
lcall
out
insb
outsl
mov
xor
xor
mov
dec
push
sti
add
das
in
jecxz
add
bound
push
addl
icebp
fucomip
xchg
xor
inc
mov
jnp
jae
cmp
push
xor
pop
pop
inc
aaa
add
or
imul
popf
call
out
sub
pusha
fs
les
mov
dec
loope
xchg
pushf
sub
or
mov
push
mov
imul
mov
sbb
sub
add
mov
outsl
in
pop
jmp
jae
mov
push
ret
js
dec
mov
outsl
imul
inc
mov
lret
add
ds
bound
insb
inc
jl
hlt
pop
and
dec
jle
sbb
inc
jae
or
ss
bound
aam
imul
fwait
jecxz
pop
sub
mov
into
insl
fucomip
inc
mov
dec
pop
jne
xchg
cmpsl
popa
adc
push
xchg
xor
or
mov
clc
mov
icebp
sub
hlt
push
imul
loope
sbb
sbb
pop
pop
lcall
mov
stos
xor
cmp
dec
mov
flds
insb
jmp
push
scas
in
scas
dec
or
loope
ret
fldenv
adc
xchg
add
mov
outsl
xchg
out
je
mov
xchg
mov
ret
xor
arpl
jecxz
add
cmp
cmp
mov
and
rcll
cmp
mov
mov
inc
mov
mov
dec
sbb
data16
cli
pop
cltd
xlat
pop
add
adc
repnz
in
daa
and
sub
xchg
pop
jnp
int
inc
iret
or
cltd
push
test
or
jo
aad
inc
ljmp
incw
push
mov
and
data16
sub
iret
jbe
cmp
sub
lds
out
adc
push
test
jge
aas
loop
outsl
stos
push
xchg
ljmp
dec
push
mov
and
and
xchg
in
out
aaa
push
ret
rcr
xor
inc
or
scas
inc
fimuls
subl
int
add
push
insb
mov
sub
mov
mov
out
mov
roll
push
addr16
movsb
test
repz
pop
push
add
pop
clc
dec
movsb
in
iret
rcll
pop
loop
sahf
iret
fwait
cmpsl
out
inc
scas
or
sub
dec
inc
pusha
out
in
lahf
jmp
ss
sub
xchg
dec
inc
sub
es
cmc
scas
in
mov
jmp
jne
les
adc
pusha
out
mov
pop
xor
stos
xor
fcoms
mov
pop
sarl
pop
iret
jecxz
jo
insb
pop
pop
cli
sub
pop
test
push
mov
test
roll
int3
ljmp
add
jno
mov
mov
pop
mov
inc
sbb
sub
stc
ds
loope
xorl
xor
pop
stos
je
add
cmpl
xchg
repnz
imulb
inc
ljmp
push
add
pop
pop
les
mov
jg
inc
in
ret
enter
insb
mov
aad
call
xchg
inc
push
pop
movsl
or
loop
pushf
movsb
mov
inc
adc
push
adc
mov
add
mov
popa
in
xor
adc
lea
xor
sub
int
fs
mov
dec
pop
ss
mov
ret
xchg
cli
push
test
xlat
fs
dec
out
popf
pop
int3
aas
xor
pop
hlt
fists
pop
adc
outsb
hlt
test
xchg
add
inc
loop
jnp
stc
ljmp
dec
js
sbb
outsl
mov
rolb
sub
in
insb
fcmove
jnp
pop
out
xor
xchg
sub
cwtl
es
xlat
xchg
push
std
test
fidivrl
or
addr16
dec
mov
out
pop
in
or
pop
cs
lcall
push
push
daa
mov
xor
call
pop
scas
les
loopne
pop
xchg
int3
jp
jnp
adc
xor
jbe
lods
push
test
outsb
lea
inc
fbld
pop
test
jecxz
lods
mov
icebp
out
mov
call
stos
cmp
jg
mov
pushl
imul
mov
push
push
xchg
pop
sar
push
add
cs
lods
pop
inc
loope
xlat
fdivrl
push
push
ret
clc
sbb
add
icebp
mov
out
sahf
imul
mov
adc
jl
add
movsl
push
int3
loope
cmp
addb
xchg
hlt
mov
sbb
pop
sbb
cmp
loopne
inc
dec
arpl
in
and
inc
push
push
cmp
dec
push
mov
pusha
data16
cmpsb
fsqrt
jb
movntq
adc
push
adcl
je
fiaddl
icebp
int3
nop
loope
or
add
das
jno
fcoms
test
cmp
inc
pop
mov
and
xchg
sub
andl
les
aas
es
pop
shlb
orl
push
jns
mov
mov
lahf
aad
pop
stos
imul
les
mov
stos
imul
dec
sbb
jb
repz
bound
jl
test
fisubrl
cmpsl
inc
cmp
loope
iret
adc
cwtl
add
add
out
sub
sbb
dec
adc
add
test
and
pusha
mov
push
decb
bswap
fistpll
fcompl
push
fsts
xor
add
aas
and
push
shlb
mov
xchg
xchg
jmp
jl
fldenv
call
dec
inc
stos
mov
lock
inc
stos
not
push
hlt
jns
js
cmp
dec
jnp
add
fnstsw
inc
cli
add
ret
pop
add
movsl
ret
fstps
push
or
push
push
adc
pop
lret
dec
jmp
xchg
sub
mov
or
and
in
push
lret
lods
push
rcr
sbb
mov
inc
fwait
js
xchg
cmc
xchg
adc
cmp
jo
orl
idivb
add
xor
push
dec
and
pop
push
gs
xchg
stc
jbe
or
lahf
push
pop
ficomps
jge
clc
dec
xchg
outsl
test
push
xchg
subl
dec
push
test
imul
ja
or
sbb
and
dec
repz
shll
push
ror
imul
stos
in
loop
mov
in
or
lret
sahf
jg
hlt
mov
into
sbb
cmp
jle
test
or
sbb
in
outsl
fsts
adc
stc
test
cli
mov
mov
or
pop
and
sbbb
pop
mov
or
and
xchg
iret
mov
sarl
sarl
popa
arpl
mov
cmp
es
int
int3
sahf
mov
push
add
push
call
test
std
xchg
pop
jl
ret
push
lahf
imul
adc
daa
cwtl
xchg
in
xor
inc
mov
jge
mov
shrl
int
sarl
shll
cmp
dec
xor
out
mov
outsl
filds
add
mov
push
dec
aad
stc
xor
sub
movsb
loope
xchg
lcall
or
shll
pushf
xor
mov
sarl
sti
lods
cmpsl
xchg
andl
pop
fs
ficoms
dec
sbb
shlb
lcall
cld
pop
jl
stos
sub
lea
test
jbe
ss
cli
shrb
sbb
js
xor
shll
pop
pop
push
and
repz
test
stc
dec
xchg
test
mov
xchg
add
jbe
pop
mov
push
jmp
xlat
adc
cmp
jns
add
and
out
ljmp
mov
jb
cmpxchg
push
jg
jmp
mov
lods
call
fstp
and
mov
or
add
outsb
ss
fdiv
lahf
popa
cltd
shrb
dec
lock
rorb
rorb
inc
mov
popf
sbb
or
jmp
dec
jbe
adc
xchg
and
xchg
mov
mov
cwtl
xlat
adc
outsb
xchg
inc
sub
and
push
in
or
jo
push
push
flds
xor
jecxz
outsl
push
jnp
ret
stos
int3
and
and
arpl
push
pop
movl
ljmp
jge
push
add
xchg
pop
mov
inc
jns
fwait
jnp
pop
mov
cmp
ja
xlat
mov
cli
shll
imul
ljmp
les
cmpl
popa
jle
aam
add
push
iret
mov
add
pop
mov
push
push
aas
inc
movl
pop
iret
xor
int
cmp
pop
jae
cld
nop
mov
adc
imul
inc
jns
popf
jecxz
jmp
insl
int
xor
push
sbb
fistpl
mov
loopne
mov
xchg
push
lock
test
fiaddl
push
dec
dec
add
mov
sub
mov
mov
insl
push
lret
test
movsb
or
cmp
and
jmp
adc
cmc
test
push
push
mov
adc
mov
mov
imul
adc
sub
push
and
fdivs
outsb
dec
movsl
ret
pop
adc
sarl
mov
into
fcompl
call
notl
scas
leave
xor
lret
xchg
push
cld
ss
push
add
jae
outsb
push
cld
jns
adcl
out
cwtl
sub
test
shrb
pop
fcompl
pusha
enter
out
mov
in
cmp
push
adc
or
sbb
flds
mov
jnp
mov
lcall
in
icebp
or
sbb
mov
loopne
mov
dec
fs
sahf
push
lock
imul
mov
test
and
sahf
fsubrs
ljmp
inc
adc
or
mov
inc
push
sub
or
inc
hlt
xor
dec
out
mulb
in
mov
xchg
loopne
daa
lcall
cwtl
mov
xchg
jb
jge
cwtl
iret
jl
inc
aad
or
repnz
fisubrs
pop
pushf
mov
mov
mov
mov
mov
xor
add
adc
lock
out
xchg
out
std
and
clc
pushf
aas
into
lcall
mov
test
lods
pushf
arpl
fs
pop
push
jns
mov
xor
push
xor
sub
jbe
cwtl
pop
out
out
jno
adc
je
and
dec
mov
shll
cmp
jbe
pop
mov
mov
mov
cmp
mov
stc
push
sub
sbb
jp
ret
loope
mov
imul
dec
loop
pop
sti
fninit
or
fimuls
mov
andb
pop
daa
nop
cmp
sub
fnstcw
scas
xor
iret
add
shlb
mov
mov
and
loope
test
sarl
dec
mov
fsubs
test
mov
cbtw
mov
cltd
mov
inc
out
inc
and
shrb
adc
lods
xlat
ljmp
mov
mov
sbb
sub
xchg
test
popf
push
jle
pop
sub
inc
push
xor
fdivs
sbb
sarb
imul
dec
xor
mov
sbbb
das
aad
xor
pushf
mov
bound
adc
xchg
push
mov
fpatan
stc
movl
daa
shlb
mov
push
mov
add
xchg
or
in
sbb
xchg
test
jns
dec
insl
test
aam
popf
sub
scas
xorl
lret
and
push
xlat
adc
pop
xchg
out
mov
mov
into
and
and
rol
int
div
js
insb
pop
mov
ret
fisubrl
pop
mov
in
push
xchg
lock
mov
rol
mov
repz
imul
fdivl
ss
push
lods
mov
dec
lds
das
mov
test
inc
clc
fildl
mulb
mov
aam
adc
inc
out
fisttps
leave
add
push
popa
fadds
jp
and
push
scas
mov
xor
and
outsl
push
mov
pop
lods
dec
mov
in
mov
jg
test
lock
enter
gs
sti
sbb
pusha
fiaddl
addl
sbb
ret
and
enter
push
mov
xor
xchg
cltd
ret
mov
sti
repz
push
out
xor
and
jmp
rcrl
fistpll
call
stos
xor
mov
test
adc
xchg
loop
fldenv
test
mov
sub
or
stc
inc
mov
pop
mov
icebp
mov
ret
adc
popa
xor
sbb
cmp
mov
hlt
sub
mov
push
aad
inc
loopne
outsl
mov
pop
icebp
push
je
jo
push
xor
pop
insl
jge
inc
xor
cwtl
dec
push
addr16
stos
shll
xchg
jb
add
adcl
imul
inc
mov
push
pusha
bound
insl
ja
xchg
bound
push
sub
mov
push
inc
xlat
or
mov
shr
lahf
andb
cmpb
out
add
test
mov
mov
ja
sbb
jbe
out
push
aad
stos
pop
daa
testl
arpl
das
icebp
mov
popa
pop
movsl
mov
jnp
mov
test
lret
cs
ljmp
jae
imul
inc
cmp
jg,pn
mov
push
arpl
mov
jge
imul
ret
test
aad
mov
add
cmpsl
mov
jmp
std
ljmp
xchg
lret
adcl
frstor
loop
shl
ljmp
or
leave
lock
insl
xor
lea
inc
pop
sahf
mov
cmpsl
pop
xor
hlt
cli
mov
imul
and
dec
jns
outsl
inc
push
push
dec
pop
sbb
mov
adc
dec
and
jmp
cmp
loopne
cmovb
cmp
pusha
rol
fnstenv
pop
mov
nop
mov
scas
stos
out
mov
and
loope
iret
mov
jp
je
dec
jl
sub
clc
lahf
jo
mov
es
pop
jb
dec
push
in
push
lret
cmp
adc
inc
push
mov
sub
jp
add
notb
cmp
clc
mov
popf
fldl
xor
in
adc
or
out
mov
dec
cmp
sbb
bound
jge
xchg
push
rcl
ss
add
and
popf
xchg
pop
movzbl
push
cld
cmpsl
xchg
popa
movsl
loop
orl
push
and
push
sub
aas
lods
cwtl
insl
out
pop
sbb
cltd
mov
pop
xchg
das
pop
mov
dec
pop
lock
xchg
adc
aas
mov
mov
int
cs
dec
fs
movsl
aaa
stos
loope
jle
sarl
lock
seta
gs
push
mov
jb
and
adc
repnz
fstl
fwait
jl,pt
jns
add
cmp
mov
mov
repz
dec
xlat
mov
arpl
cmc
cmp
mov
mov
pop
repnz
dec
jge
aaa
ret
out
pushf
inc
add
jbe
cmp
xor
xchg
inc
rorl
repz
pop
clc
rcrl
in
jae
pop
fsubl
pop
xchg
inc
or
mov
cs
sbb
iret
add
or
and
sub
daa
inc
scas
mov
inc
test
xlat
test
aad
push
sub
std
fadds
dec
aad
push
outsb
add
fstpl
lds
es
clc
mov
or
and
popf
movsl
js
push
pop
inc
dec
xchg
repnz
mov
jge
jb
in
icebp
and
mov
fsts
outsl
xchg
xchg
inc
mov
inc
out
stos
call
pop
xor
movsb
cs
xor
rcr
lds
push
add
push
mov
jnp
or
pushf
pop
int
jmp
lcall
arpl
jecxz
out
xor
xchg
lcall
cs
cmp
cmpsl
insb
mov
xor
fdivl
ret
call
push
mov
push
or
je
mov
xor
out
ret
cs
mov
pop
mov
loopne
push
sbb
rorb
xor
neg
in
enter
add
mov
pop
push
pop
or
or
icebp
xchg
test
push
cwtl
jp
fistps
test
mov
stos
aaa
dec
or
rcrb
outsb
and
popa
adc
fs
xchg
aas
inc
adcl
pop
lds
inc
pop
and
jb
mov
insl
sub
stc
sub
inc
js
movsl
scas
inc
stos
hlt
fs
push
bswap
jbe,pt
lret
sub
or
jecxz
sub
out
out
jle
inc
das
mov
lret
test
xchg
clc
sbb
push
inc
jae
xor
clc
shr
push
cmc
loop
push
jno
popf
pop
sbbb
sbb
pop
into
mov
push
and
pop
in
clc
mov
popa
sub
or
mov
test
fcoms
clc
aaa
jecxz
arpl
mov
push
push
icebp
push
sbb
add
fcomi
mov
mov
sti
test
push
addr16
mov
adc
hlt
adc
or
jb
iret
push
mov
push
outsl
push
pop
sub
aas
push
test
test
inc
mov
adc
sub
aaa
push
icebp
mov
jmp
jle
hlt
xor
jecxz
ss
in
xor
jge
push
scas
popa
mov
ja
jg
test
mov
dec
scas
cmp
ret
or
add
aam
sbb
stos
inc
iret
push
xchg
mov
xchg
lea
lea
push
movsb
aam
push
jb
sub
ds
sahf
or
pop
sbb
sbb
or
stc
jnp
ds
call
push
add
pop
jmp
lods
or
enter
sbb
inc
pop
cmpsb
mov
sbb
mov
dec
lock
xor
sub
int
add
cmp
mov
loop
pop
adcb
pop
jmp
push
dec
and
shrb
push
mull
sub
pop
jnp
rcrl
hlt
icebp
popf
xchg
outsb
movsb
in
ss
ja
pop
pop
popf
ss
hlt
mov
dec
jmp
in
xor
or
lret
addr16
dec
aaa
ret
addr16
lock
pop
ret
inc
in
and
jb
cwtl
and
addr16
repz
addl
pop
xchg
insl
bound
add
cmpsl
aam
repz
sti
push
mov
xchg
cmpsb
inc
xchg
in
push
xchg
mov
scas
pusha
into
call
inc
pop
imul
aaa
or
push
out
lods
shl
xchg
jg
cmp
sub
and
sbb
aam
dec
jg
insb
sbb
adcb
mov
test
lods
lock
cmp
imul
in
lods
sub
add
or
and
ficomps
cmp
cs
add
int3
sub
iret
int
mov
andb
add
loope
cltd
cmp
adc
movsl
xchg
fisttps
lea
ret
in
insl
mov
mov
or
cmc
nop
dec
inc
popf
lret
rolb
mov
clc
in
add
pop
xor
int3
and
mov
mov
inc
xchg
dec
jo
or
cmc
ss
push
jne
out
mov
in
sbb
repnz
out
mov
insb
test
aam
pushf
xchg
or
in
jg
adc
dec
cltd
push
sbb
mov
sbb
sub
scas
sub
nop
in
enter
movsb
xlat
mov
fisubrs
insl
mov
sbb
lahf
sahf
int
test
ja
xchg
lock
inc
mov
xor
orl
adc
and
int3
dec
and
cmp
and
xor
lods
test
scas
rcll
xchg
int
adc
pop
inc
fsubrs
dec
pushf
mov
push
cmp
sbb
and
iret
insl
mov
push
push
lahf
xchg
repnz
test
push
pop
out
fisttpl
orl
mov
jge
add
das
ret
ret
pop
pop
in
imul
test
andb
shlb
and
mov
inc
xchg
cs
aad
inc
movsl
adc
jae
fwait
pop
jae
setg
stos
xchg
add
mov
mov
icebp
mov
sbb
cwtl
inc
daa
icebp
pop
pop
cmpsb
or
je
and
repnz
sbb
jmp
arpl
mov
inc
add
rclb
call
out
pop
pop
in
insb
sbb
mov
fsts
xlat
sbb
inc
dec
repz
adc
shl
data16
icebp
cmp
mov
adc
data16
sbb
inc
fldcw
sti
test
fisubrl
push
sbb
aam
fnsave
cmpsb
mov
into
js
pop
sahf
jb
scas
push
add
ds
xchg
jle
or
shll
je
pushf
ret
jecxz
mov
or
mov
cmp
push
js
loopne
js
jae
cli
jb
jno
inc
shll
sub
prefetch
jge
popa
sbb
jg
fimuls
inc
adc
fisttpl
and
fsts
jo
out
sbb
inc
lahf
fmuls
mov
pop
mov
cltd
push
add
scas
jne
inc
lods
inc
mov
insb
and
lods
sbbb
inc
push
ret
js
sbbb
jne
mov
test
iret
sub
mov
xor
lds
nop
pop
push
ucomiss
jg
xorb
add
sub
xor
incb
mov
add
cwtl
dec
data16
dec
lds
sub
xchg
mov
push
mov
pop
mov
ds
inc
jb
pop
xchg
mov
mov
call
mov
or
and
lds
test
xchg
fimull
loopne
cmpsb
pusha
jmp
sbb
jle
mov
shlb
xchg
jbe
lea
subb
xor
mov
and
enter
lcall
fstpt
ret
call
sbb
jns
xor
lock
lret
lret
cmp
cmp
stc
rolb
test
lcall
fcoms
jecxz
mov
sbb
fsubs
and
ljmp
xor
lds
inc
jge,pn
mov
scas
push
iret
jno
fisttpl
daa
in
add
jnp
enter
mov
cltd
orl
ret
sbb
push
sarb
adc
push
int
rolb
fs
jno
xor
adc
aaa
inc
aas
pusha
lcall
mov
sub
aaa
inc
dec
sahf
je
cli
pop
shl
cmp
pop
movsl
gs
xchg
fwait
or
popa
xchg
sub
clc
mov
mov
inc
pop
sub
ljmp
popf
dec
and
pop
or
xor
in
jmp
mov
inc
cld
fdivrl
or
lods
adc
bound
mov
rcl
rolb
pop
push
rorb
imul
mov
shll
mov
pop
or
jne
jo
mov
mov
sbb
mov
jns
cs
sub
push
mov
mov
sar
int
stc
into
pop
stos
mov
sahf
pop
mov
mov
pop
shlb
mulps
xchg
mov
lret
test
xchg
insl
mov
sbb
sub
cmp
sub
ret
dec
test
je
sub
xchg
test
lea
pop
mov
loope,pt
outsb
sub
mov
mov
or
inc
push
lea
sbb
mov
rep
out
popf
cmp
jnp
rcr
mov
test
rcrb
cmp
movl
push
mov
mov
dec
es
movsb
add
ss
lods
cmc
dec
xchg
xor
sti
mov
insl
sub
pusha
out
pop
mov
addr16
ret
jne
dec
adc
mov
jnp
push
inc
jnp
xor
dec
out
repnz
inc
sti
shll
ret
jg
sbb
ret
inc
or
cld
and
add
test
jo
data16
dec
inc
pop
scas
enter
push
jae
pop
adc
popa
xor
mov
mov
mov
push
ror
sub
pop
cwtl
jmp
std
push
cmpsb
and
fwait
ret
cmp
sub
and
into
mov
push
mov
loop
jo
in
sub
roll
sbb
mov
loopne
les
and
notl
dec
jb
or
cmp
lds
or
pop
jge
fidivrl
xchg
ljmp
adc
mov
inc
pop
inc
or
nop
cmpsl
adcb
lods
cmp
push
aaa
std
outsl
adc
lret
sub
push
stc
mov
lret
inc
sarb
add
cmp
into
divl
jg
repnz
frstor
jle
outsl
pusha
sbb
js
and
sub
pop
mov
fcoms
fiadds
or
jecxz
fisubs
loope
data16
mov
cmp
call
outsb
test
xchg
xchg
popa
cmp
imul
aad
lds
mov
mov
in
add
xor
mov
ds
jecxz
in
push
mov
jnp
and
aas
and
test
imul
clc
pop
cmpsl
adc
cmp
cltd
addr16
out
jno
dec
scas
dec
inc
push
ja
sbb
push
add
jg
inc
add
or
mov
pop
repnz
fwait
aam
in
cld
cmp
in
imul
std
orb
xor
cmpsl
bswap
cmp
leave
scas
mov
cli
bound
inc
add
dec
jns
andb
jno
ret
fildl
or
mov
inc
or
imul
and
test
lret
jbe
mov
and
dec
leave
pusha
stos
fwait
jns
and
xchg
xor
mov
inc
scas
pop
cmp
push
std
stos
add
inc
jl
mov
pop
cs
hlt
mov
das
mov
sub
add
bound
dec
popa
inc
and
inc
add
in
lret
cmp
pop
gs
jno
or
popf
aas
and
test
push
dec
sub
iret
pop
mov
insb
test
nop
jnp
dec
inc
into
jge
cmp
xchg
sub
and
adc
sahf
mov
xchg
mov
cld
cs
lret
mov
test
dec
cli
pop
loope
mov
jmp
adcl
xchg
xchg
mov
push
add
lcall
sub
xchg
sbb
insb
repnz
inc
dec
arpl
push
std
cmp
mov
jmp
mov
rcr
je
or
push
cmp
xlat
cmp
dec
lea
loope
cmpsl
or
pop
popf
div
add
xor
mov
mov
jo
lock
inc
adc
rcll
jmp
push
xor
sbb
xor
cmpsb
vpcmpgtw
dec
mov
movsl
gs
shrl
add
jnp
cmp
into
cmp
inc
mov
out
add
pop
js
test
ljmp
and
dec
xor
rorb
lods
xchg
sub
jbe
push
hlt
aam
into
mov
cmpsb
jb
push
shlb
pop
push
lret
mov
sbb
les
sbb
fidivrl
push
lds
add
cmp
push
bnd
xor
shlb
lret
in
add
movsb
lret
enter
xchg
lahf
or
sti
jb
ds
lret
sub
in
aad
pop
push
sahf
in
scas
push
int3
loopne
inc
movsl
xor
lcall
les
push
or
jo
out
imul
fcmovnu
arpl
adc
dec
dec
mov
lock
mov
xchg
fwait
inc
jmp
aas
rorb
sbb
xchg
push
inc
jecxz
rcl
mov
cmp
je
cwtl
and
nop
jp
xor
daa
insl
jg
inc
repz
aaa
push
into
mov
pop
jo
imul
xor
mov
jg
gs
les
nop
fldcw
jae
gs
mov
nop
xchg
xor
in
mov
fs
or
cs
sbb
xlat
xchg
sbb
pop
sbb
fldt
das
lods
sub
push
and
pop
das
xor
jmp
cltd
in
pop
push
cltd
sub
sbb
fs
dec
mov
push
test
and
cmpsl
js
cmp
push
inc
inc
jl
dec
sub
out
cltd
int3
leave
mov
fs
dec
jmp
shld
je
test
add
cmpsl
arpl
fmulp
mov
icebp
popa
jb
add
cmp
mov
push
loopne
lret
cmpsb
sbb
mov
dec
xor
mov
rcrl
pop
jle
mov
testb
mov
faddl
ja
xor
in
cmp
insl
pop
dec
shll
jmp
repnz
dec
sbb
add
pusha
mov
jl
aaa
test
mov
cmpsb
aaa
mov
gs
pop
inc
pminub
cld
fildl
lods
push
pop
jne
xlat
mov
testl
inc
xor
push
or
and
pop
mov
sub
rep
fisubrl
fxsave
jle
mov
dec
xor
xchg
add
jns
rep
mov
pop
imul
loopne
push
add
in
mov
xchg
outsl
cmp
movsl
inc
cmp
or
jl
cmp
inc
pop
cli
jne
xchg
out
mov
mov
sub
and
mov
into
mov
aad
mov
jbe
mov
adc
push
arpl
sbb
ljmp
inc
popf
pop
pop
push
outsl
lods
mov
adc
and
dec
add
cmp
dec
ljmp
adc
fmul
and
mov
movsl
out
fld1
jbe
sbb
jge
insb
xor
popa
inc
fildl
sbb
std
inc
subb
out
lcall
jmp
movsl
fmuls
or
or
xchg
inc
aam
fistpll
mov
out
adc
mov
pop
inc
pop
jbe
push
rcrb
inc
and
movsl
addb
bound
decl
dec
in
enter
jmp
scas
inc
xchg
add
lds
xor
cmpsl
dec
imul
xchg
dec
lock
fistl
loop
sahf
rcl
cld
dec
pop
cmp
sbb
sub
and
pop
xor
push
ljmp
in
fs
xchg
xchg
fldcw
xchg
xchg
mov
iret
and
add
pop
xor
out
repz
repz
jle
pop
imul
push
mov
cmpb
into
imul
xor
addr16
ret
mov
imulb
mov
and
insl
add
int
je
cmpsl
cwtl
or
pop
cmpsb
adc
inc
andb
xor
pop
ret
jb
mov
pop
dec
insb
and
and
pop
cld
push
stos
cmp
mov
xor
mov
sbbb
pop
dec
xchg
mov
jo
xlat
call
lret
adc
push
cmp
sahf
cld
fdivrs
mov
mov
in
fmuls
push
mov
aad
cmp
lea
outsl
push
das
out
jbe
lds
cmp
jns
pop
jle
mov
cmpl
jnp
in
push
dec
add
pusha
ds
stos
cmp
cmp
adc
add
stc
add
cltd
imul
lea
dec
inc
bound
xchg
das
adc
fdivr
shlb
or
fidivrs
dec
rol
jge
and
cmp
jmp
push
sti
sti
add
xchg
and
test
ret
sub
ja
movsl
lods
adc
hlt
xchg
rclb
icebp
es
jp
out
ja
or
ficomps
add
adc
popa
aam
push
jo
nop
jae
std
dec
xchg
push
rcrl
sub
push
dec
xlat
stos
rcll
push
push
sub
popa
test
test
mov
ss
dec
xchg
jge
mov
push
jnp
arpl
loopne
shl
fisttpll
xor
negb
xchg
pop
movsl
fimull
mov
lock
mov
cli
popf
nop
adcl
adc
mov
cltd
mov
repnz
orl
dec
mov
lods
popa
mov
popl
xchg
test
ljmp
int3
lds
jmp
jae
fmull
pop
cmpsb
cmp
je
fidivs
cmp
std
add
rorb
arpl
jno
cmp
jne
add
cmp
sbbl
je
jae
dec
mov
addr16
sbbl
sbb
daa
imul
cmpsl
cmc
js
cld
push
adc
mov
stos
cltd
sti
popf
xchg
xchg
mov
shr
sbb
inc
jbe
inc
pop
mov
xchg
xor
in
mov
adc
push
jne
sar
popf
dec
std
leave
sub
sbb
movsb
mov
hlt
and
mov
cld
mov
mov
and
scas
xchg
dec
aas
sub
sbb
aas
xor
aad
insb
dec
xor
mov
pop
cmp
ror
icebp
cltd
xor
jns
ffree
fldl
or
lret
sbb
xlat
xor
lds
or
mov
dec
xchg
jmp
loop
push
and
roll
adcl
into
mov
mov
cld
sub
push
fwait
pop
push
sub
shr
xchg
cmp
sub
mov
dec
add
xchg
iret
push
mov
sub
mov
push
adc
adc
jns
es
jo
pop
fs
jp
aas
js
daa
ret
sbb
jno
xchg
fiadds
or
imulb
ret
fstpt
outsb
aam
mov
adc
dec
insl
rolb
sbb
dec
movsb
sbb
pop
push
jnp
fbld
scas
cmpsl
pop
jo
cpuid
xor
cmp
icebp
clc
icebp
xchg
inc
add
bound
arpl
pop
ljmp
mov
sbb
test
dec
mov
inc
fcoml
stos
aas
inc
adc
mov
xchg
inc
sbb
rcrb
mov
xchg
mov
std
xorl
shlb
int3
test
push
int
inc
data16
jmp
test
xchg
addr16
in
cmp
adc
xlat
call
js
cmp
sub
into
repz
fbstp
mov
xchg
in
or
pushf
cmp
push
pop
push
insl
adc
mov
in
in
outsl
ret
dec
add
push
cmp
xchg
xor
aam
data16
jbe
adc
xchg
stos
jb
inc
add
sbb
loop
stos
repz
loope
movsb
fsubl
dec
loope
push
popf
push
mov
fldcw
xlat
test
test
cmp
jae
shll
jecxz
mov
jno
and
pushf
push
das
push
push
loope
je
sub
pop
cmpsl
rorb
pop
cmp
pop
dec
rcrl
xchg
aas
sub
or
jbe
inc
mov
and
sub
and
aas
test
push
sub
inc
out
mov
pop
jl
mov
lods
ja
cli
insl
orb
fmul
push
loop
movsl
xor
xor
addl
dec
cmp
call
je
inc
mov
sub
outsl
rolb
mov
fisttpll
bound
sbb
into
test
jp
jne
sub
or
mov
push
cmp
and
ds
int
fs
push
imul
icebp
xchg
std
mov
push
pop
fistps
and
rcrb
xor
es
loopne
jne
xchg
into
xor
jbe
jmp
add
ja
fwait
sahf
test
mov
dec
jno
orb
mov
loope
out
std
xchg
mov
xchg
push
lcall
xor
aas
mov
push
push
shll
sbb
lret
int
std
cmp
insb
insl
sahf
rclb
inc
cli
hlt
pop
cmp
cwtl
in
mov
icebp
popa
xchg
ja
pop
movl
mov
push
daa
rcl
add
mov
pop
mov
and
mov
cmp
stos
cli
mov
mov
push
lret
cmp
cli
lds
xor
pop
das
sub
dec
mov
stc
push
nop
mov
push
pushf
fnstcw
icebp
dec
mov
sbb
cmp
loop
push
adc
arpl
xor
pushf
push
push
hlt
inc
mov
test
rcll
adcb
jecxz
aad
jl
inc
das
sbb
jmp
ja
movsl
clc
jns
je
fimuls
mov
push
cs
in
fwait
jg
nop
fiaddl
xchg
outsl
xchg
insl
dec
bound
jl
inc
iret
jae
sarl
scas
cmpsl
push
bound
lock
enter
mov
stos
pop
and
add
xor
cli
fsubp
out
int3
adc
and
addr16
scas
cwtl
into
cmp
mov
sub
aas
cld
insl
mov
jne
xchg
in
cmpsl
fucomp
mov
arpl
aas
mov
cmp
xlat
jge
mov
sti
xchg
inc
push
dec
and
mov
jnp
cmpsl
arpl
xchg
jle
push
test
test
or
aas
out
xlat
xchg
fidivs
sarb
movsl
xlat
call
pop
mov
out
out
mov
pushf
cmpsl
gs
hlt
mov
jp
xor
mulb
filds
movsl
stc
int
mov
loop
loop
sbb
negl
sarl
dec
xchg
mov
add
outsb
pop
punpckhwd
loopne
aas
mov
bound
mov
push
fwait
dec
inc
das
mov
inc
aad
int
jns
pop
outsl
loop
out
icebp
jl
jnp
sub
and
pop
jns
andl
mov
dec
jle
lcall
pop
mov
pop
add
adc
std
js
lret
aam
leave
dec
pop
sub
push
js
into
and
aad
mov
cltd
scas
xchg
aad
and
nop
mov
dec
push
pop
sub
push
dec
or
pushf
popa
push
push
add
scas
sub
insb
hlt
sub
orb
jne
loopne
sub
into
xchg
dec
mov
and
mov
mov
jmp
cmp
clc
mov
cmc
lods
xchg
in
or
das
pop
and
or
fsubrs
lret
pop
out
lds
dec
icebp
sub
shll
add
fistps
aad
stos
in
xchg
pop
xchg
adc
mov
dec
push
mov
lods
add
sbb
xor
jmp
cmp
mov
mov
and
rcr
and
pop
pop
adc
pop
jno
add
pop
addb
je
fidivrs
sbb
and
pop
or
repnz
jae
scas
pop
mov
pop
sub
add
std
pop
xchg
xor
in
orl
popf
mov
pop
sbb
sub
jb
xchg
test
aad
add
xorl
stos
or
sub
neg
ljmp
pop
mov
shrl
in
xchg
stos
adc
fisttpl
cmp
push
mov
adc
fadd
xchg
add
dec
imul
dec
sbb
mov
mov
xor
push
imul
out
out
js
push
lret
mov
fs
cwtl
fsts
and
arpl
mov
sahf
ljmp
lods
dec
push
jne
pop
dec
push
cmpsb
jp
fcomi
stc
std
add
dec
adc
cmpsb
add
cmp
sbb
in
ja
and
ret
ficoms
fnstcw
adc
cmp
xor
and
outsb
push
and
addr16
push
lds
sbb
cld
jne
pop
xchg
adc
add
cmpsl
mulb
mov
cmp
pop
mov
mov
sub
and
xchg
loope
push
into
inc
div
mov
test
or
aad
inc
sbb
mov
mov
sbb
add
push
push
add
jge
clc
dec
adcl
sbb
scas
add
mov
mov
jnp
filds
sbb
xor
jmp
stos
pop
jbe
loope
insl
add
xchg
push
scas
mov
fs
add
fdivl
insl
icebp
in
shrb
in
xor
xor
mov
ret
loop
nop
mov
pop
and
adc
test
xor
mov
add
pop
pop
scas
out
lods
and
mov
adc
jae
roll
mov
stos
in
mov
and
dec
push
pop
pop
movsb
sub
aas
xor
jg
and
xchg
jecxz
pop
stc
dec
mov
sbb
jge
mov
and
jnp
scas
mov
fmulp
lret
data16
mov
jge
movl
fbstp
repnz
std
mov
adc
inc
stos
push
push
imul
xor
mov
jge
mov
test
and
mov
xchg
cmp
sarb
xlat
into
jge
add
push
mov
js
cmpsl
sub
jle
cmpsb
xor
cwtl
pusha
test
pop
cmp
pop
sarb
xchg
in
push
cmp
addr16
mov
push
in
scas
loope
jge
pop
jae
and
mov
pop
sbbl
data16
push
or
call
outsb
push
mov
add
movsb
es
sbb
insb
push
mov
push
mov
lcall
repnz
mov
or
repz
sub
cmp
add
addr16
das
sbb
mull
add
std
subl
push
icebp
bound
adc
sbb
and
add
int
xor
test
inc
mov
adc
xchg
fs
push
sub
inc
push
xor
stc
loopne
sub
dec
insb
dec
xor
sbb
xor
sub
add
stos
leave
shl
cmp
lret
cmp
je
xor
sbb
mov
xlat
cmp
mov
mov
dec
adc
repz
outsl
push
mov
or
loopne
dec
js
ret
jb
xchg
ss
push
jne
pop
jne
arpl
xor
clc
mov
jle
lcall
jnp
cltd
mov
xchg
aad
xor
mov
push
popa
sbb
add
xchg
or
xchg
out
push
sub
ja
stc
sub
popf
adc
xchg
rcrb
sub
out
icebp
test
pop
pop
in
jne
scas
jb
mov
sbbb
mov
repz
mov
test
stos
cmpsb
shll
js
lahf
out
push
cmpsl
in
imul
xor
pop
jne
sub
lds
add
sub
leave
mov
jae
adc
push
out
mov
fs
jne
push
lea
inc
cwtl
push
xor
iret
repnz
int
insb
add
out
sbb
in
push
mov
dec
adc
int
pop
dec
add
pop
adc
mov
jecxz
adc
push
mov
xchg
xchg
dec
inc
pushf
add
fwait
iret
sub
sti
mov
lahf
mov
div
ret
sbb
mov
cmp
cmp
cmp
nop
sbb
push
gs
jp
popf
ret
js
pop
imul
popa
cmp
jbe
inc
cmc
adc
inc
popa
repz
inc
pop
loope
aaa
inc
and
ds
mov
dec
inc
daa
fdiv
out
sub
push
mov
lret
mov
and
xchg
cmp
inc
cmovl
iret
jp
dec
xchg
and
push
flds
mov
mov
sbb
and
inc
mov
mov
shlb
sti
je
xchg
and
in
cmp
sbb
imul
xor
or
shl
adc
pop
push
ss
popa
sbb
xor
mov
lds
pop
in
pop
jg
das
and
std
mul
movsl
mov
nop
ljmp
push
sub
cs
das
pop
pop
mov
rclb
sbbb
int
imul
mov
in
or
sub
jg
lcall
inc
pop
jae
mov
jnp
loop
ds
arpl
xchg
sti
add
stos
int3
push
inc
mov
cs
cmp
pop
insb
popl
cmp
adc
pop
push
out
mov
cs
clc
pop
loope
sub
and
adc
xor
xor
jns
test
and
or
ja
lret
in
insb
loope
andl
and
out
mov
cmp
and
scas
pop
cmpl
push
clc
out
mov
pusha
imul
push
ror
shl
mov
or
xchg
mov
cmp
mov
insl
into
popf
rorl
adc
jne
push
pop
je
xor
inc
xchg
inc
sbb
stc
loopne
loopne
jp
cmp
adc
bound
cmp
inc
movsl
test
fcoms
mov
cmc
clc
xchg
cmc
aad
mov
stos
xor
lahf
cli
lidtl
popf
pushf
jae
jne
jo
sbb
pop
std
xchg
xor
repnz
push
dec
push
xchg
popf
lcall
imul
mov
mov
pop
rclb
loop
jg
mov
stos
fiadds
push
pop
out
add
jge
mov
shlb
clc
bound
jp
imul
out
nop
cltd
ds
or
add
xor
lods
repz
adc
inc
bound
mov
or
cmc
mov
in
sti
sub
cs
xlat
shrl
sahf
inc
fiadds
stos
push
fsubl
sbb
and
xchg
iret
sub
cmpsl
mov
adc
jb
inc
xchg
arpl
push
jg
bound
push
icebp
cwtl
jecxz
ret
jp
out
dec
and
ljmp
out
mov
mov
mul
scas
jb
sahf
jbe
mov
in
sbb
bnd
in
adc
and
jne
xor
fwait
jne
add
int
push
js
jo
lods
subb
fwait
stc
xchg
call
xchg
jp
mov
stc
jne
cld
cmp
xorl
push
inc
cmp
pop
dec
test
sti
lcall
xchg
outsb
add
inc
test
sahf
sbb
and
sbb
cltd
rclb
dec
idivb
ret
pushf
pop
push
xor
sub
or
repnz
mov
ds
lods
sbb
das
cwtl
and
outsb
decl
sbb
mov
mov
loope
xlat
ss
inc
pusha
sti
and
cltd
out
sbb
aam
call
aam
sub
loop
repz
and
or
inc
fst
xchg
rcll
mov
jae
pushf
idiv
vmulsd
pop
and
lcall
add
shll
cltd
push
push
cmp
gs
inc
jne
out
mov
mov
lds
mov
jge
aas
jno
sbb
xchg
mov
mov
and
test
test
mov
movsl
pop
dec
lcall
pop
fnsave
pop
and
int
push
xlat
jnp
mov
flds
js
mov
repnz
cmp
add
aas
pop
outsb
lea
jmp
or
in
cmpsl
adc
es
mov
call
xchg
or
lret
in
xor
int
inc
jne
mov
or
dec
jp
fwait
lea
mov
in
cmp
pop
pop
lahf
adc
dec
jl
sub
dec
lcall
fidivs
sub
test
jge
shll
movsl
cli
mov
leave
std
movsl
lock
jge
jae
xlat
or
sub
fiadds
pusha
sbb
iret
push
adc
mov
dec
jmp
lea
scas
mov
adc
push
xchg
and
lea
xor
clc
out
mov
pop
lods
add
adc
jle
sbb
lods
stos
fucomi
mul
and
inc
or
movsl
sbb
xor
rorl
orl
pop
xchg
push
mov
in
icebp
pop
stos
jnp
mov
add
fnstcw
or
inc
xchg
inc
idivb
popf
adc
xchg
and
mov
or
jae
push
stos
rcrl
stc
mov
add
not
mov
mov
mov
inc
ljmp
add
fnsetpm(287
or
sahf
popf
inc
xor
adc
pusha
cmp
jecxz
sub
push
cmp
cli
xchg
out
cmp
and
mov
push
clc
in
jle
addb
cmpsb
xor
aad
or
xor
pushf
push
push
aam
dec
jnp
mov
das
scas
test
xchg
mov
dec
dec
sub
xor
mov
das
mov
inc
pushl
mov
jno
pop
xchg
data16
add
xchg
inc
imul
xchg
fisubl
mov
jbe
cmc
mov
nop
pop
xor
fisubs
ljmp
popf
cmpsb
pop
xorl
addr16
into
insb
lret
dec
dec
mov
push
mov
add
pop
pop
fcomi
clc
pop
xor
test
mov
xor
jp
mov
lret
imul
push
data16
pop
jl
cs
mov
test
inc
cwtl
push
or
outsb
cld
pop
rcrl
mov
fcompl
lods
fstp
sbb
or
pop
mov
or
pop
push
xor
sub
cwtl
mov
frstor
xchg
dec
inc
fs
in
aam
cmp
inc
mov
int3
cld
fimuls
out
std
pop
rcrl
ljmp
outsl
in
fbld
sub
fstps
lods
psrlq
xchg
test
mov
dec
insb
les
in
ja
popf
dec
rolb
inc
jl
mov
dec
inc
adc
loopne
and
pop
inc
mov
cs
xchg
mov
xchg
jo
dec
aad
aas
and
fldl
addr16
out
lret
clc
mov
js
pop
orl
fstl
test
lret
adc
xor
jp
pop
jle
mov
xchg
dec
in
push
arpl
aad
out
sbb
lcall
int
testb
loope
mov
mov
hlt
stos
test
and
leave
sub
aas
movsb
cltd
sahf
inc
das
cmp
stos
lds
xchg
push
mov
cltd
mov
jp
sub
dec
out
mov
int3
jae
int
push
add
sbb
lcall
sub
out
popf
push
scas
sbb
and
ret
cmp
rol
sbb
mov
mov
in
sbb
jmp
jp
sub
cmpsl
xchg
fwait
or
or
push
into
fildll
mov
lea
stos
int3
lret
jmp
lods
les
sbb
imul
out
jle
in
inc
int3
fidivl
imul
fmull
xor
jecxz
or
shll
push
pop
cwtl
add
push
punpcklwd
scas
sbb
jb
loope
fs
push
sub
xor
xor
jl
sbb
sub
mov
pop
jmp
nop
in
cmpl
sub
std
or
int
push
shll
test
jb
xlat
fs
dec
nop
dec
cmp
mov
scas
sbb
push
xchg
jo
xor
sbb
loope
roll
jmp
cld
sbb
arpl
mov
dec
push
bound
fsubrs
in
push
cmp
mov
jle
mov
orl
add
mov
gs
mov
cs
lock
mov
orps
push
frstor
cli
jg
daa
int3
add
es
xorl
mov
adc
mov
aaa
fwait
inc
clc
dec
ljmp
sub
mov
sahf
cmc
sahf
push
insb
outsl
sub
loop
inc
dec
or
push
ret
mov
xor
xchg
ja
iret
dec
stos
movsb
movsl
adc
fcoml
adc
int3
jno
mov
fimuls
mov
das
push
fmul
adc
sub
iret
iret
ret
xlat
or
or
xor
nop
mov
xchg
hlt
pop
fwait
mov
jo
incb
int
push
mov
ret
inc
add
popf
cmpsl
leave
jp
addr16
pop
sti
rorb
add
add
in
pusha
lods
mov
nop
xor
mov
adc
mov
push
jp
mov
aaa
divb
cmp
dec
cmp
or
sub
or
jmp
mov
stc
sti
push
sub
arpl
xor
popa
stc
inc
or
adc
cmp
or
fidivl
cwtl
xchg
and
loopne
dec
icebp
jb
or
mov
rcll
pop
inc
sub
or
cmp
xchg
dec
mov
vpsubsb
mov
ss
jbe
fldenv
mov
mov
push
and
fstl
aam
push
dec
clc
jle
stc
lahf
ljmp
subb
push
ds
pop
sub
dec
addr16
pusha
leave
sbbb
inc
inc
cmp
cs
cmp
out
mull
aas
rcrl
call
cmc
jnp
push
loopne
fsubl
psrlq
jae
scas
mov
or
jp
js
outsb
adc
outsb
loop
mov
and
repnz
subl
sub
mov
cltd
push
sub
jne
loop
inc
loop
cmp
adcb
mov
push
out
fbld
scas
stc
shrb
xchg
adc
clc
jle
mov
cmp
pushf
xor
nop
sub
in
inc
daa
cltd
add
ja
pushf
inc
insl
test
dec
dec
xor
shrb
push
js
movsl
js
cmp
xchg
dec
pop
inc
imul
imul
shrb
pusha
cmpsl
bound
or
insb
or
sahf
adc
ds
popa
add
xchg
jmp
xchg
mov
ds
insl
cmp
out
movsb
push
mov
loop
test
test
jge
push
lods
addr16
jle
push
add
jmp
lds
mov
and
hlt
pop
mov
iret
cltd
mov
dec
cmp
dec
adc
push
out
and
jge
leave
loopne
addr16
adcb
outsb
clc
rolb
std
mov
test
cmpsl
lds
test
mov
and
mov
or
incl
jae
jo
xchg
jae
mov
int
loope
jae
xor
mov
movsl
outsl
jge
cmp
sub
pop
push
jmp
jle
js
in
scas
outsb
cmp
ja
roll
roll
je
jo
inc
sbb
arpl
jae
out
cmc
loop
mov
xchg
push
inc
ds
xchg
aaa
movsl
aad
push
adc
push
cmp
inc
vpsrlq
dec
pusha
out
stc
mov
jnp
sub
notb
incl
and
fistps
jge
ffreep
cmp
pushf
test
jl
rclb
lcall
mov
cmpsb
bound
repz
dec
outsb
pop
cmc
cmp
cmpsl
dec
popf
insl
inc
nop
into
stos
adc
test
lods
scas
xchg
repz
cmovne
cmp
mov
inc
jno
test
idiv
repz
push
sbb
mov
mov
imul
lds
sbb
fsub
movsb
std
lock
dec
pop
sbb
ficoml
loop
fidivs
ret
dec
jp
mov
pop
call
or
mov
dec
push
xor
sti
dec
aaa
jne
inc
notl
clc
movsl
rolb
sub
push
mov
xchg
sub
leave
xchg
and
inc
fwait
loopne
adc
sbb
ficoml
shrb
or
xchg
fnstcw
pop
add
or
xor
xor
xorl
rorb
loop
iret
das
jecxz
jl
mov
xchg
rcl
lret
es
xchg
sub
popf
repz
jmp
rcrl
into
mov
push
add
cmc
int3
sbb
enter
jb
sub
inc
jge
pop
popa
je
sbb
bound
int
pop
das
mov
loope
aaa
int
or
shll
pop
ret
xor
orl
push
jo
vfrczpd
xchg
ljmp
fsubs
pop
push
inc
fidivrs
repnz
mov
and
lods
aaa
mov
jecxz
add
cmp
das
negl
shll
fstps
rcl
stos
stc
jno
testb
push
es
aas
shr
ret
clc
cmp
cltd
test
loop
js
add
not
frstor
fcmovb
inc
and
rcrb
loopne
idiv
in
and
vpsubusb
js
test
std
dec
jmp
repz
jl
in
lods
lods
xor
in
in
dec
cmp
mov
mov
pop
xchg
and
gs
push
rcrl
jle
cmpsl
pop
pop
mov
test
popf
sub
clc
insb
xor
pop
sti
icebp
lds
inc
enter
nop
or
repnz
and
arpl
aas
and
test
pop
popa
in
je
or
fptan
mov
mov
or
cltd
addr16
out
push
jge
dec
inc
call
dec
adc
pop
and
adc
jbe
adc
movsb
das
push
dec
mov
or
orl
mov
sarb
sub
js
flds
adc
daa
dec
jnp
das
call
repnz
scas
and
inc
and
jmp
sub
xor
cli
cmp
push
jae
enter
inc
int
leave
rcrb
orl
pop
jae
jl
lods
out
ret
cwtl
fisubs
andb
movsb
inc
sbb
ror
xor
mov
js
insb
mov
mov
popa
out
xchg
push
jae
fwait
aaa
and
roll
fisubrl
lret
pop
add
movsl
gs
aam
pusha
movsl
sub
iret
arpl
pushf
fidivrl
sub
jp
lods
in
cld
push
cmp
mov
mov
or
daa
mov
add
mov
dec
in
xchg
pop
fsts
xlat
movsb
adc
push
jg
adc
sbb
ror
lock
aas
push
out
stos
xchg
mov
fisubrs
movsb
inc
test
negb
mov
pop
and
sub
push
push
test
repnz
dec
insb
lahf
push
loopne
mov
cmpsb
int
dec
push
xor
push
movsl
push
add
test
mov
orb
rolb
add
sub
mov
shl
mov
add
dec
andl
je
cmp
iret
push
popf
sub
xchg
xchg
scas
mov
pop
lcall
in
mov
loopne
int3
add
mov
std
sbb
lcall
popa
jns
mov
xlat
bnd
rolb
mov
movsb
xchg
lea
push
fwait
mov
imul
dec
mov
scas
or
icebp
xor
jge
or
pop
cmpsl
lahf
loope
xchg
jmp
sub
cwtl
rcll
mov
iret
and
mov
xchg
fs
pop
js
lahf
sub
addr16
out
jo
rcr
flds
jp
test
mov
sbb
movb
push
adc
into
xchg
stos
lods
ja
cld
push
sub
pop
adc
sub
and
enter
ret
mov
pop
dec
fs
ja
icebp
jmp
out
hlt
aaa
scas
leave
or
push
sub
pusha
das
cli
and
scas
movsl
sub
mov
xchg
xlat
push
inc
cld
mov
xor
adc
mov
mov
mov
push
jl
mov
loopne
cld
push
jg
xor
fs
cmpsl
mov
shr
fisttps
xor
fists
psrlq
add
mov
fnstsw
and
dec
cmpb
mov
xchg
mov
das
mov
push
stos
js
test
adc
arpl
shl
xchg
nop
sbb
add
cmp
das
mov
cld
hlt
push
nop
dec
aam
mov
cltd
gs
imull
sub
test
sbb
scas
adc
cld
xor
xchg
aad
lret
inc
add
mov
movsl
inc
ds
lods
mov
pop
scas
xchg
jmp
inc
adc
and
cli
inc
xor
es
mov
aaa
pusha
mov
fisubrl
je
das
cs
enter
jle
or
lods
and
cmp
inc
scas
cs
inc
es
sbb
loope
push
stos
out
jg
lock
push
lret
orb
mov
mov
push
mov
bound
push
add
mov
pop
insl
mov
sbb
cmp
lret
aaa
and
sub
scas
in
xlat
sbb
dec
test
js
jg
jp
or
repnz
bound
jne
mov
inc
cmp
cmp
jns
data16
mov
sti
push
xor
mov
or
imul
into
aad
adc
lock
xchg
xor
and
pop
fldenv
or
test
cmc
push
add
mov
mov
movsb
mov
enter
jns
sbb
jp
add
lcall
sbb
pop
xchg
add
fs
das
stc
ds
jmp
test
movsb
sti
mov
jne
hlt
pop
push
xor
pop
lods
gs
pop
push
sarl
sbb
lds
sub
mov
adc
xchg
mull
fxch
adc
pop
pop
sbb
jecxz
inc
lret
xchg
push
add
outsb
pushf
xchg
stc
jmp
jbe
movsb
dec
push
push
cwtl
and
aad
jmp
sbb
push
jmp
jmp
sub
dec
adc
outsl
cwtl
jmp
scas
xor
loopne
or
lret
mov
sbb
pop
pop
or
or
adc
mov
cs
inc
and
gs
push
push
call
mov
je
adc
pop
int3
call
add
adc
lcall
xchg
addr16
sbb
es
out
shl
add
pop
sbb
push
fistps
pop
pop
jge
test
test
jne
sbb
xchg
arpl
sbb
mov
pop
sarb
pop
das
into
or
jg
sbb
clc
xor
pop
fs
ljmp
xchg
xchg
sti
call
cmp
scas
push
xchg
daa
test
arpl
jg
shll
mov
mulb
or
cmp
sub
cmp
push
fiaddl
sti
lods
adc
and
lahf
sub
adc
and
mov
jp
pop
lock
clc
add
mov
mov
or
cmc
mov
pop
scas
daa
sbb
sahf
in
mov
js
add
out
xlat
inc
rorb
lret
inc
aam
xchg
in
movl
paddb
dec
clc
push
int3
arpl
add
ds
test
jbe
cmp
sub
mov
push
js
sbb
sub
test
sbb
push
repz
aad
xchg
insl
cmpsl
es
subb
and
push
arpl
push
call
adc
sbb
sub
mov
es
mov
jmp
mov
jb
ffree
add
lcall
lret
jle
push
push
jae
lea
dec
and
mov
lds
stc
lods
and
lret
and
and
fidivrl
movsl
jns
push
jnp
cmp
mov
in
sbb
aam
and
mov
mov
aaa
pushf
cmp
lret
pusha
dec
movhps
aad
mulb
mov
add
or
xor
dec
or
dec
fadd
add
push
dec
pop
adc
scas
loope
scas
push
das
lock
fisubl
mov
and
pop
popf
jnp
jl
stos
jg
clc
sub
lods
jge
fnstcw
adc
loop
cli
and
cmp
lahf
push
xor
push
dec
inc
push
push
dec
mull
mov
jmp
in
ret
pop
or
mov
mov
cmp
rep
fidivl
push
mov
jl
dec
cmc
mov
pop
xchg
in
cmp
inc
ficoml
ss
xchg
inc
adc
enter
xor
das
add
jle
jbe
sub
dec
dec
and
sahf
movsl
out
mov
mov
addr16
cmp
mov
clc
ret
adc
add
popa
sub
addr16
arpl
mov
mov
pop
ja
aaa
ror
pop
cmp
or
cmpsb
add
scas
jb
mov
cli
lret
clc
adc
cli
cmovg
in
les
xchg
fs
mov
ret
adc
andb
cmpsl
inc
mov
dec
and
mov
dec
idivb
and
adc
sub
stc
sub
enter
push
mov
loop
cmc
loope
or
add
iret
add
jle
lds
jmp
test
jge
dec
bound
mov
cmp
sbb
pop
scas
js
jns
loop
xchg
or
test
es
sbb
push
movsb
hlt
cs
and
mov
loop
pop
int
adc
jg
lods
in
pop
dec
in
dec
add
pop
insl
mov
shr
pop
sbb
lods
clc
xchg
mov
mov
repz
mov
dec
dec
sub
cltd
cmp
pop
or
dec
test
sub
or
imul
mov
pop
jmp
jno
lcall
add
aad
shrb
inc
cmpb
int
imul
cmp
ds
movsb
adc
mov
jo
fisubs
rcrb
dec
das
jb
imul
adc
adc
outsb
lods
out
shl
sti
xor
pusha
cwtl
xchg
sub
stc
sbb
in
push
mov
in
push
cmp
and
mov
rorb
sub
sti
jecxz
in
in
out
rcr
add
cwtl
testl
rcrb
or
mov
clc
sahf
jmp
enter
imul
cltd
and
lea
mov
lahf
dec
sub
inc
jns
xchg
out
xor
add
lea
les
push
lret
ror
notl
cs
popf
movsb
mov
cld
mov
and
mov
enter
fsubrs
ljmp
lods
int
icebp
xchg
mov
jl
inc
cmp
jo
cs
mov
push
iret
out
addl
sub
xor
mov
mov
sub
shr
xor
add
lock
and
aas
pop
mov
mov
pop
jl
mov
pop
mov
adc
insb
cwtl
lret
mov
idivb
push
mov
addr16
adc
jle
fdivrp
mov
scas
and
pusha
jg
shll
pop
or
cmp
fsubs
jae
mov
cmp
pop
jne
dec
cmp
and
into
xchg
aaa
add
enter
dec
sbb
aaa
cmc
push
inc
pop
dec
test
fidivl
cs
pop
mov
std
sbb
sub
shll
add
add
add
out
rorb
jbe
iret
sbb
sub
rcrl
cvttps2pi
loope
jne
sbb
cli
mov
or
adcl
adc
fidivs
pop
xchg
pop
pop
es
lret
mov
fisubl
scas
pop
js
or
fcmovbe
push
xor
dec
lret
or
mov
lahf
mov
test
and
inc
dec
mov
mov
ljmp
mov
into
js
push
jg
repnz
adc
mov
repz
and
imul
hlt
mov
bndstx
dec
scas
xchg
push
lods
cltd
bound
hlt
jmp
out
inc
subb
push
push
out
xchg
cmp
cmp
and
ret
shll
inc
sbb
mov
jecxz
adcl
lods
in
xor
pop
mov
jle
mov
movsb
add
cmpsb
insb
jne
cmpsb
int
sbb
add
sbbb
mov
xchg
push
test
ss
dec
addr16
add
sub
popa
adc
les
mov
jno
ja
mov
andb
dec
out
std
pop
rcrl
pop
int
xchg
lods
nop
pop
mov
jg
inc
mov
shl
clc
inc
pop
dec
dec
rol
stc
and
pop
xor
mov
xchg
int3
inc
repnz
add
fs
negb
jmp
mov
push
xchg
lods
test
pop
cmp
daa
lahf
leave
into
cmp
int3
scas
push
sub
push
popa
sbb
cmp
out
lds
andnps
inc
aam
xlat
and
cs
and
sub
mov
out
loopne
mov
mov
inc
mov
push
and
push
je
inc
dec
imul
in
xchg
and
inc
push
in
mov
sbb
ret
mov
mov
jle
pushf
faddl
test
add
jle
xor
mov
fucom
cwtl
xor
cmc
pop
pop
insb
nop
je
adc
jb
idivl
stos
or
push
xchg
dec
loopne
mov
les
or
and
popf
xchg
in
and
push
dec
jle
cmp
loop
sub
repz
fisubl
fbld
aad
es
dec
dec
out
add
sbb
mov
mov
mov
mov
adc
mov
roll
inc
xchg
rcrb
sahf
sub
and
push
bound
in
popl
pusha
or
xchg
dec
or
dec
jne
jnp
jae
sbb
jecxz
mov
std
add
in
std
out
pop
pop
cltd
cli
test
xchg
mov
addl
mov
call
loope
cmpb
loopne
cltd
xchg
jl
adc
xor
je
rclb
dec
outsb
loop
sbb
stos
stos
mov
ljmp
and
jecxz
or
sbb
dec
add
ds
cmc
stos
pop
jno
or
jmp
jp
mov
in
adc
jl
xchg
leave
adc
mov
push
dec
popf
sbb
push
dec
lea
push
clc
mov
jle
pusha
sbb
mov
jb
xchg
test
imul
xor
and
mov
dec
sub
push
cmp
xor
fs
les
mov
jecxz
sub
push
js
lods
mov
lret
jns
and
insl
frstor
lock
jge
repnz
xor
lret
mov
into
push
xor
movsl
or
jno
mov
jnp
shrl
sbb
mov
or
xlat
addl
cld
inc
pop
pop
mov
push
adc
loop
xor
lds
lcall
in
packssdw
mov
arpl
arpl
push
xor
xor
scas
cmp
leave
lret
arpl
leave
push
into
push
jne
adc
adc
xchg
and
loopne
mov
sub
mov
pop
enter
xor
call
inc
mov
std
pop
jl
xchg
les
cmp
xor
cmp
movsl
hlt
cmp
cmpsb
aad
imul
stos
insb
pop
xor
add
xchg
ret
adc
jns
mov
cmp
movsl
add
test
jge
mov
dec
jns
mov
add
xchg
dec
pop
jp
movsb
xchg
pusha
xchg
push
lock
in
mov
rcrb
sub
arpl
arpl
and
in
push
jmp
movsl
jecxz
pop
mov
sub
dec
call
mov
into
xchg
lret
sbb
sub
push
cmc
pop
mov
mov
outsl
push
jle
insl
and
inc
out
jmp
divl
jg
fidivrs
dec
gs
jo
fs
movsb
pop
jns
mov
pmulhw
or
mov
push
lock
jl
lds
push
pop
sarl
les
cs
xlat
xchg
pusha
sarl
shll
test
mov
and
sahf
cmc
pop
test
ret
jnp
stos
push
sub
mov
push
pushl
mov
adc
cli
xchg
movsl
sbb
or
sub
stos
adc
inc
push
inc
jnp
pop
adc
in
sbb
jno
loopne
call
and
pop
stos
pop
push
shl
jle
test
cmc
orb
lcall
test
pushf
int
bound
pop
mov
xor
outsb
and
sbb
inc
sbb
adc
out
jns
add
aad
or
pop
std
xchg
inc
inc
testl
sbb
test
jl
dec
aam
xchg
inc
cs
outsl
mov
in
xchg
cmp
push
pop
rorl
jg
mov
imul
out
fsubrl
out
mov
dec
inc
push
shrl
mov
enter
ss
xchg
test
jne
push
int
sbb
test
loopne
or
sub
cli
dec
repz
cmp
push
dec
loop
push
pop
lds
mov
mov
ret
cmp
jne
sub
pop
dec
push
add
jns
int
movb
sbb
inc
and
lahf
out
mov
or
sub
pop
popa
xor
in
js
push
pop
push
push
xchg
sbbb
jle
and
loopne
mov
xor
cld
outsl
or
repz
testb
lcall
jp
jge
ret
cmpsl
cltd
mov
jb
out
lahf
sub
push
out
pusha
push
and
mov
inc
pop
dec
loopne
and
sbb
xorl
push
cmpsb
push
dec
fs
xor
adc
adc
lea
and
sbb
pop
adc
out
jae
jb
sub
flds
lret
jno
pop
ss
fists
dec
push
outsl
iret
dec
test
js
faddp
sahf
sbb
lea
in
das
mov
stos
and
pop
insl
mov
outsl
dec
test
mov
push
je
xchg
lahf
xor
mov
xor
add
pop
xchg
pop
es
and
sub
push
inc
lds
lret
cmpsb
repnz
adc
sbb
xchg
ja
call
xchg
in
xor
movsb
pop
dec
mov
cld
cmp
test
xor
or
push
int
test
sub
imul
fisubl
push
or
or
insb
adc
imul
mov
je
loopne
push
push
push
ja
pop
out
cmovl
mov
lods
das
call
sub
test
mov
mov
addr16
test
mov
in
and
scas
dec
xor
into
jae
mov
popa
jae
cltd
pop
data16
add
lock
push
push
imul
cmpsb
in
xor
sub
xchg
out
fwait
mov
in
jns
js
mov
sub
dec
movb
shll
fwait
lret
xchg
sub
aad
and
aad
inc
sbb
push
push
cltd
imul
into
in
jns
jp
push
pop
fwait
call
add
xor
add
adc
mov
dec
mov
push
jmp
ret
xchg
inc
mov
sarb
sarb
cmp
jae
popa
es
dec
xchg
pop
mov
ss
adc
dec
arpl
js
mov
xor
xchg
mov
fdivr
rclb
sbb
mov
pop
insl
sub
pop
out
xlat
mul
jmp
fs
inc
dec
lods
popa
mov
and
adcb
xorl
add
add
js
pop
mov
jo
mov
call
xchg
jbe
jb
ret
mov
nop
sbb
in
mov
jbe
xchg
xchg
ss
je
mov
inc
hlt
in
mov
aas
lods
mov
pop
mov
mov
pushf
jg
fists
rolb
and
outsb
push
sahf
xacquire
xchg
cs
ja
mov
ret
or
xchg
movsb
or
push
mov
stos
cmp
adc
addr16
mov
into
xchg
stc
push
add
sbb
xchg
cld
sub
fcmovb
dec
insl
mov
stos
stos
js
mov
data16
in
leave
clc
into
push
cwtl
mov
loopne
enter
sbb
out
sbb
cmp
push
repnz
ds
dec
outsl
mov
inc
xchg
jmp
push
mov
pop
loop
adc
add
xchg
negb
mov
push
negl
push
adcb
push
xchg
data16
xchg
push
aaa
dec
lea
xchg
test
jns
lods
rorl
out
fdivrp
fstps
dec
ds
mov
rorb
jecxz
enter
xchg
xor
int
pop
adc
aad
psubw
inc
into
sub
aad
inc
aas
gs
aam
pop
bound
add
mov
test
add
ja
in
iret
fdivl
lds
sahf
scas
dec
imul
nop
push
leave
add
daa
mov
std
rorb
lcall
lods
in
fldl
xor
xlat
dec
push
push
jno
pushl
mov
sti
lds
jno
fs
cmpb
int3
lock
lret
out
fwait
inc
mov
adc
andl
inc
inc
aas
push
adc
cmc
bound
xor
jbe
cmpsb
push
pop
xor
movsb
jae
and
mov
jle
orl
call
sbb
ljmp
shlb
xchg
les
nop
sbb
add
sbb
dec
arpl
lret
and
imul
je
adc
mov
add
adc
leave
es
scas
shrl
push
fdivs
shr
leave
loop
push
aad
adc
aas
and
mov
inc
xor
icebp
xor
out
pop
call
les
mov
cmpl
pop
lea
mov
pop
fs
push
adc
add
and
push
xchg
aas
in
push
mov
int
xor
push
cmp
rcr
sub
xor
pop
into
jb
mov
xchg
pop
cmp
test
sub
mov
scas
loope
mov
push
xor
xlat
dec
scas
imul
and
and
sub
add
mov
lds
and
popf
inc
cmp
pop
fldl
mov
jbe
push
or
mov
mov
cmp
xor
int3
xchg
push
mov
dec
out
mov
add
pusha
loop
shll
jecxz
cmpsb
in
add
insb
cmpsb
ljmp
dec
int
and
call
daa
xor
test
jg
sub
pop
xchg
cmp
push
out
imul
pop
lret
jle
fisubrl
lcall
cltd
icebp
dec
inc
push
adc
and
pop
mov
adcb
lds
aad
call
push
shl
daa
xor
insl
adcb
pop
adc
mov
xor
into
cmp
mov
repz
xchg
or
popa
fidivrl
inc
xchg
push
jge
mov
dec
push
jmp
push
sub
sub
sarl
jp
ljmp
push
pushf
pop
dec
js
pop
mov
and
rorl
xchg
in
dec
inc
push
cmp
and
push
adc
in
test
int3
pusha
es
imul
pusha
insl
and
xor
int
pop
push
mov
jle
inc
leave
cwtl
ja
xchg
pop
mov
iret
lret
jns
test
aam
cmp
ret
imul
push
inc
jo
jnp
daa
sub
stos
hlt
cwtl
cltd
mov
repz
jbe
mov
xchg
mov
mov
xor
add
cmp
dec
adc
psrad
sub
iret
int3
sub
hlt
inc
jmp
mov
or
outsb
daa
mov
or
jbe
mov
lcall
nop
dec
and
and
cmpsl
mov
lret
mov
mov
mov
dec
push
cmpl
sub
ljmp
inc
jns
test
repnz
xchg
shlb
xchg
dec
fnop
je
adc
pop
sbb
popa
mov
sti
ret
and
cmp
push
daa
mov
sbb
rolb
int
daa
mov
push
adc
mov
das
out
imul
in
push
pop
dec
inc
push
in
xchg
xchg
adc
mov
fdivl
popf
idiv
cmpsb
divl
rcrl
add
fsts
push
iret
inc
dec
dec
or
xchg
jmp
mov
fcoml
scas
adc
stos
sbb
call
subl
adc
daa
jl
mov
mov
sti
stos
mov
jg
sub
subb
incb
xorb
mov
mov
xor
std
repnz
mov
inc
into
pop
sub
call
bound
lret
mov
ud2
movsb
dec
clc
out
jae
mov
loop
xor
or
out
push
scas
mov
mov
mov
push
or
mov
inc
stos
lcall
mov
pop
popl
je
inc
xchg
fisubrl
mov
divl
cli
je
jmp
popa
xchg
shlb
popa
jl
cmp
and
mov
es
fcomip
subb
xchg
or
in
xchg
inc
arpl
or
inc
inc
jns
jle
sub
push
imul
mov
pop
jle
push
add
in
pop
mov
mov
adc
arpl
sub
mov
jo
lahf
pop
imul
mov
add
pop
ss
ficompl
cld
cs
fisubrl
mov
mov
xchg
in
scas
repnz
dec
pop
push
mov
aad
jae
xchg
inc
xchg
shl
mov
fdivrl
lcall
adc
ficoml
mov
mov
out
lcall
pop
loope
or
lret
loope
out
inc
sub
nop
loop
fwait
mov
call
fisubrl
or
in
std
mov
xor
sbb
mov
sub
or
push
push
adc
rclb
aad
mov
pop
and
mov
ret
lea
jae
jg
fmull
sub
jmp
loope
lret
inc
jmp
shll
jg
dec
mov
mov
call
or
les
mov
sub
shrl
dec
ja
mov
push
sarl
jo
mov
mov
mov
dec
mov
add
pop
inc
fs
xlat
in
or
bound
pop
ljmp
jae
jns
in
cwtl
pushf
inc
movaps
ljmp
xor
adc
mov
out
pop
jmp
sbb
adc
mov
test
test
cmp
cmp
jp
sbb
xchg
pop
fdivl
mov
rcrb
mov
mov
jge
xor
jp
cmp
loop
sahf
das
dec
enter
jae
inc
push
adc
out
sbb
pushl
jecxz
clc
jb
aad
fildl
sub
in
sbb
cmpsb
cltd
xchg
mov
lock
loope
mov
xchg
xchg
aaa
dec
push
ljmp
jp
mov
popf
movsb
adc
stos
iret
pop
pop
jne
mov
xchg
mov
jb
dec
mov
mov
mov
stos
lods
scas
imul
aam
adc
pop
lock
xchg
stos
ss
stos
ss
jge
xchg
in
adc
add
lret
mov
jg
jge
xchg
push
xchg
push
inc
add
push
xchg
inc
arpl
and
adc
js
test
push
adc
das
mov
clc
mov
mov
bound
mov
and
cmp
xchg
and
pushf
pusha
xchg
clc
pop
dec
js
pop
sar
insb
pop
dec
test
fs
daa
jb
pushf
lds
xchg
sub
pop
fldt
mov
insb
jb
das
mov
jnp
icebp
movsl
xor
jp
mov
mov
repz
fs
nop
idivb
out
inc
mov
repz
xor
push
cmc
xchg
mov
daa
lods
out
mov
es
cmp
imul
mov
std
pop
hlt
nop
das
sub
icebp
aaa
inc
mov
mov
rclb
mov
lea
fcmovbe
sbb
add
sub
mov
out
inc
adc
or
mov
aaa
js
movsb
jp
dec
dec
ficomps
inc
cmc
mov
inc
lea
inc
dec
xchg
ror
mov
mov
add
push
loop
in
or
orb
adc
mov
mov
and
test
cmp
call
shlb
pop
insl
or
jne
icebp
mov
rcll
loope
dec
mov
fisttpll
mov
rclb
pop
xor
aas
adc
imul
mov
adc
push
push
pop
sub
icebp
int3
aas
fists
ja
adc
cmove
inc
mov
pop
or
sub
jno
loop
ret
push
mov
cmovnp
mov
int3
pop
leave
outsl
out
test
scas
leave
ljmp
sub
jecxz
enter
icebp
cld
mov
inc
pushl
out
repnz
sti
or
int
mov
popa
test
sbb
bound
push
push
and
pop
xor
shl
push
xorl
pop
add
je
cmp
fstpt
test
test
or
mov
mov
mov
xor
imul
ficoml
dec
and
adc
sub
push
fwait
and
jl
xchg
mov
mov
add
lods
inc
push
es
push
mov
and
mov
cmp
lahf
add
cli
or
or
cmp
mov
rorb
lds
xor
inc
pop
inc
inc
popa
hlt
call
inc
jg
jns
xor
or
sbb
inc
push
xor
mov
rorb
push
dec
sbb
mov
nop
inc
shl
xchg
inc
sarb
mov
dec
rcrb
cmp
clc
inc
pusha
and
sti
mov
bts
cltd
mov
fwait
sbb
cmpsb
push
int3
xor
loop
xor
sbb
xor
divl
out
pop
cmpsl
fstpt
cs
iret
sub
sti
sub
fmul
fcoms
imull
sbb
test
mov
jns
xor
jnp
jmp
mov
cmp
push
das
dec
cld
cmpsb
pop
jne
mov
mov
add
jge
sbb
cmpsl
out
cwtl
and
jge
inc
repnz
mov
sahf
inc
negb
mov
jl
adc
sub
sbb
jge
stc
test
mov
js
ficompl
push
into
mov
mov
fsubs
lret
pop
pusha
cmpl
xchg
loopne
mov
dec
call
int
add
sub
xchg
lret
cmp
pop
mov
inc
mov
jo
stos
pop
outsb
push
inc
mov
in
fucomip
faddp
push
sahf
insb
dec
mov
cmp
jnp
test
pop
cmp
add
xchg
outsl
add
ret
inc
push
loope
pop
cwtl
in
aad
jge
pop
and
fwait
or
dec
je
idivw
xchg
lahf
jl
test
je
sbb
sub
enter
lret
daa
js
pop
or
or
cmp
lahf
das
psrlw
push
xchg
sbb
lods
xor
xor
mov
jbe
adc
jmp
ret
gs
sub
insb
mov
mov
dec
lahf
cld
lcall
mov
in
orb
fbld
xor
add
or
cmpsb
mov
dec
out
or
cmp
inc
push
and
mov
fdivrs
ret
out
addr16
rcr
xchg
push
pop
pop
js
xor
cmp
dec
xchg
lea
mov
rorb
xchg
jne
mov
lea
jmp
xchg
out
jo
call
sub
jle
xchg
mov
pop
je
mov
out
mov
pop
ljmp
push
in
dec
rorb
mov
fwait
ss
inc
leave
bound
or
sbb
dec
ss
iret
push
pop
iret
lret
fisttps
es
or
imul
jno
ss
xor
sti
push
int
in
push
addr16
inc
cld
lock
lret
jmp
inc
out
stos
mov
iret
sub
inc
test
mov
cmp
jne
out
in
in
rclb
pop
jmp
repz
sbb
add
movsl
mov
dec
sbb
inc
test
adc
js
test
cmp
mov
jle
sahf
jne
mov
nop
jmp
add
inc
sbb
loopne
and
xor
dec
shlb
push
subb
pop
or
sbb
dec
xchg
addr16
int
jo
enter
lock
outsb
add
dec
add
js
or
cli
movsl
fidivl
push
xchg
shrb
lahf
cmpsl
mov
mov
sahf
bound
bound
lock
sub
jns
xor
stc
cmpsl
jnp
xor
xchg
aad
or
ss
int3
push
dec
and
xchg
lcall
popa
add
dec
mov
or
push
lods
xor
loopne
aas
push
daa
mov
xor
xor
outsb
mov
sti
xor
jle
xchg
dec
fisubs
ror
out
fidivrs
jg
jno
adcb
pop
ljmp
mov
lea
sub
pop
add
insl
add
jae
or
out
sub
adc
xor
fsubl
andb
mov
xchg
inc
pop
push
mov
add
out
les
pop
pusha
stc
sbbb
mov
push
test
test
sub
daa
testb
cmpsl
in
movsb
shr
pop
push
nop
pop
mov
lea
cld
pop
leave
lret
sbb
in
test
aas
fdivp
jne
push
push
jl
mov
push
iret
sub
mov
mov
imul
cwtl
or
adc
jo
mov
pop
sub
lods
aas
jle
sahf
lcall
jb
das
and
adc
negb
dec
mov
cmpl
stos
xchg
dec
mov
cmp
leave
int3
bound
and
ds
daa
inc
sbb
jmp
mov
push
cmc
pop
js
dec
jecxz
fldcw
xabort
shlb
add
pop
dec
dec
dec
ficoms
sbb
iret
pop
cmp
xor
out
push
inc
cltd
mov
xchg
outsb
and
sahf
adcl
push
pop
ficompl
shrb
movsl
xchg
sub
cli
jne
aam
jno
in
shr
test
daa
or
and
aas
fs
ja
push
cwtl
mov
fildll
in
bound
mov
and
rcrb
push
dec
lcall
cmp
rcrb
aaa
stc
gs
inc
repz
add
aam
mov
mov
mov
or
adc
pop
push
adc
inc
movsb
in
adc
xchg
push
sbb
xor
mov
add
xchg
add
sub
cs
lods
sbb
pop
push
movsb
or
adc
xchg
movsb
nop
sbbl
xor
mov
cmpb
sub
xchg
dec
out
xchg
imul
dec
or
sbb
popa
stc
fxch
lret
push
inc
subb
or
and
xor
in
pushf
adc
lods
sub
xchg
xor
xchg
add
into
push
jo
movsl
ja
les
test
jmp
jmp
test
mov
mov
ja
mov
je
xchg
lea
jmp
arpl
mov
push
and
cwtl
stos
andb
mov
inc
in
hlt
lock
xor
std
cmc
xchg
enter
cmc
lret
scas
inc
inc
sbb
stos
sub
out
mov
xchg
stos
sarb
lods
sbb
bound
jb
es
cmpsl
in
inc
adc
outsl
das
xchg
xor
inc
lcall
cmpsl
jle
loopne
inc
xor
adc
pop
invd
iret
lods
mov
roll
cltd
fs
xor
iret
in
cmc
popl
and
fsub
push
sbb
sub
repnz
mov
rorb
bound
pop
mov
int
sub
xchg
mov
aad
test
shl
add
popa
sbb
cltd
mov
movsl
xor
out
cmp
pop
jg
push
sbb
inc
bound
sbbb
pushf
icebp
movsl
loope
pop
cmp
div
or
mov
mov
jle
mov
pop
lods
add
insb
fwait
sbbb
testb
arpl
dec
sub
loope
or
stos
add
out
or
push
enter
pop
repnz
loope
test
mov
popf
cmpsl
fiaddl
inc
jp
fadds
add
cltd
sar
fs
inc
lods
adc
pop
jle
xchg
dec
inc
xlat
hlt
sub
and
outsl
test
sarl
mov
jnp
insb
test
mov
imul
jp
mov
dec
sub
jne
leave
jo
and
gs
jne
jae
sub
call
xchg
stos
testb
pop
mov
pop
fmuls
pop
lret
dec
test
pop
inc
popa
pop
in
dec
jnp
test
aaa
and
or
fmul
movsb
repnz
daa
out
repz
loop
dec
inc
sti
mov
repz
loope
inc
push
rep
je
filds
xor
lods
xor
jp
nop
adcb
ja
rclb
xchg
movsl
xchg
rolb
hlt
jb
jmp
cltd
or
lret
lcall
out
xor
insl
mov
in
pop
pop
sbb
add
mov
mov
test
pop
ja
mov
push
dec
xor
mov
add
mov
stos
bound
dec
int
out
jge
test
push
pop
fildll
pop
pop
mov
inc
fistl
es
int
addr16
push
fistps
shlb
in
aas
cmp
dec
jmp
cmpsl
xor
push
pusha
bound
sbb
jbe
add
fprem
pop
or
add
pop
push
or
inc
je
jecxz
jmp
repnz
push
inc
add
mov
sti
xchg
push
shl
sub
lods
mov
xchg
lcall
test
cwtl
jno
in
mov
xor
fsubrs
lods
test
lock
fcoms
sub
dec
divl
sbb
xor
inc
sub
in
lcall
adc
and
push
outsb
inc
dec
mov
nop
sti
ret
jp
inc
mov
in
jns
fnsave
pop
fnstenv
xchg
push
fistps
xor
add
inc
inc
cmp
add
jl
mov
out
aad
and
mov
into
xchg
cmc
decb
adc
mov
adc
add
add
add
ret
stc
fcoml
loope
jl
xchg
mov
push
sahf
inc
mov
push
daa
lds
jbe
dec
fstpl
lds
shrl
aaa
fstpt
js
repz
ljmp
mov
cmp
mov
sbb
mov
xchg
ficompl
repz
or
daa
gs
push
push
enter
pop
aam
repnz
mov
adc
dec
lods
fadds
addr16
sub
or
jmp
fdivrl
dec
cmc
jno
or
adc
sub
cltd
dec
in
xchg
add
add
push
inc
hlt
test
stos
int
pop
fcomps
lods
push
jge
cli
adc
aad
push
add
cmpsl
jmp
or
jg
push
sbb
lret
pop
push
fwait
lret
push
rolb
ljmp
and
shll
dec
add
cmpsb
dec
mov
das
ror
pop
rcrb
cmp
push
mov
pop
bound
subb
inc
inc
sub
lcall
adc
xchg
inc
lock
adc
push
xor
out
add
jp
nop
push
lahf
mov
aad
mov
popf
setns
and
pop
icebp
xchg
push
mov
dec
and
out
int3
mov
roll
cmpsb
sbb
adc
mov
mov
adc
cmpsl
stc
idiv
clc
jno
pop
or
cld
scas
or
lock
fdivrs
pop
mov
pop
ljmp
cmpsb
iret
pop
push
jle
or
stc
lahf
xchg
test
shlb
xor
out
push
iret
sbb
mov
or
dec
mov
pop
cmovle
cmpsl
add
inc
sysexit
lods
loopne
add
mov
das
aam
jge
pop
adc
push
sbbb
leave
xor
rcr
stos
push
adc
std
mov
push
nop
sbb
cmp
pusha
mov
outsl
inc
jae
dec
xchg
cmpsl
int3
fadd
sbb
push
test
lods
aaa
stos
cmpsl
fwait
out
cmp
pop
xor
daa
inc
fstpl
pop
arpl
adc
rol
fs
xor
fcompl
push
sbbl
movsb
jle
ss
inc
mov
stos
loopne
fs
mov
pop
stos
mov
outsl
jmp
loope
stc
iret
jmp
test
imul
jo
loopne
and
movsl
mov
mov
mov
adc
push
orb
out
dec
adc
pushl
popf
shll
ss
push
es
xchg
xchg
hlt
iret
push
sti
int
sahf
jne
sbb
push
mov
into
lret
or
add
data16
pop
inc
cmp
xchg
out
js
rorb
sub
or
daa
dec
and
and
icebp
into
pop
addl
adc
and
adc
mov
cli
test
mov
or
iret
or
mov
sbbb
jbe
pusha
js
cmp
jecxz
sbb
ret
xchg
mov
xchg
and
stos
cmp
mov
dec
mov
fdivrl
and
clc
mov
mov
mov
clc
mov
cmpsl
pop
ret
or
aaa
ja
lahf
popa
jl
mov
push
fsubl
xchg
dec
bound
aas
or
pop
add
repz
into
adcb
shl
lcall
jno
adc
dec
ss
lock
xor
movsl
adc
sub
movsl
push
test
fldcw
sub
mov
in
cmp
add
push
mov
cwtl
int3
sbb
xor
or
ljmp
mov
fsubr
dec
mov
mov
fsubrs
mov
popaw
mov
repz
adc
xchg
or
outsl
into
xchg
insb
xor
arpl
insl
push
int
sub
shlb
and
adc
add
shrb
or
sti
movsb
and
cmpsb
jl
adc
movl
mov
sbb
js
enter
and
dec
icebp
dec
mov
inc
fwait
adc
sbb
mov
cmp
push
and
pop
aam
lahf
push
jnp
movsb
or
movsw
lret
jnp
pop
mov
xor
sub
fs
shlb
pop
popa
stos
idivl
xchg
add
add
and
test
dec
pop
jnp
inc
or
outsb
add
mov
pop
ss
sbb
inc
push
cld
faddl
stos
and
lds
popf
pop
popl
fs
das
sub
sub
push
sbb
cmpsl
mov
jle
cmp
mov
mov
daa
inc
sub
push
fstpl
jns
mov
popf
and
jge
jecxz
xor
push
xchg
ds
xorb
aad
mov
jmp
rcll
push
mov
add
mov
push
mov
movsb
punpckhdq
sub
xchg
dec
lcall
sub
xlat
scas
scas
nop
les
aad
gs
cmc
pop
mov
andb
outsb
das
sti
mov
loop
mov
in
test
jge
sbb
inc
push
jecxz
fists
push
and
cmc
xchg
loope
sub
movsb
adc
call
leave
test
cmp
xchg
jae,pt
das
push
push
ficoml
jl
mov
int
mov
mov
jb
push
mov
cmpsb
aam
scas
lahf
lret
jae
lods
or
clc
and
iret
adc
or
pop
mov
sub
aaa
lods
mov
dec
jmp
ror
hlt
sbb
sarl
repnz
jb
adc
lock
ss
pop
pop
ljmp
xlat
das
add
pop
sbb
lods
js
gs
dec
mov
repz
push
dec
add
push
and
cltd
mov
test
lock
stos
lods
movl
cmc
fwait
pop
or
out
dec
cs
sbb
jns
jno
pop
test
inc
push
sub
rolb
jns
iret
je
out
ret
inc
sbb
jbe
adc
pxor
icebp
xchg
repz
cmp
xchg
sahf
stos
imul
or
dec
add
or
cmp
push
movl
add
add
movsb
jecxz
mov
das
dec
leave
mov
push
sub
loopne
xchg
push
pop
icebp
push
sub
cmc
adc
push
push
insb
out
mov
and
adc
daa
outsb
mov
addr16
and
cmp
cmp
dec
and
mov
int
cld
dec
xor
pop
js
pop
mov
nop
adc
cmp
push
fs
push
out
nop
popa
adc
push
pop
aam
or
pop
imul
xchg
push
xchg
cmp
int3
stc
arpl
jg
jle
popf
ja
lods
push
xchg
dec
cmp
fwait
mov
sarl
xchg
jl
in
clc
or
scas
push
loopne
adc
add
ja
inc
mov
into
dec
adc
xchg
jge
cli
mov
dec
mov
bound
int
push
mov
shll
sahf
aam
sahf
pop
mov
cmpsl
lock
bound
jmp
daa
ds
fmul
xor
or
and
mov
xor
adc
ficompl
mov
popa
push
inc
push
lock
or
cmp
outsb
push
test
cmpsl
or
aas
insb
inc
dec
sahf
mov
sbb
mov
pop
in
daa
cmpsb
andb
out
addr16
adc
mov
sub
pop
cmp
icebp
xchg
into
test
stc
arpl
out
xlat
mov
and
cmp
xor
js
push
mov
out
out
jp
in
shll
cmp
aad
mov
arpl
jnp
sub
mov
xchg
and
fadd
mov
fidivrl
in
clc
pop
icebp
mov
test
int3
add
adc
and
arpl
mov
sub
test
popf
sbb
std
cmp
jmp
test
adc
out
sahf
jmp
xor
jge
std
jp
sahf
fldl
jecxz
add
in
push
dec
sti
ret
dec
pop
mov
push
xor
pusha
call
mov
pop
or
aaa
lds
and
mov
std
int
scas
mov
inc
and
movsl
and
enter
mov
jnp
es
cld
xchg
lahf
lret
cmp
into
fnstsw
sar
sub
rorl
repnz
movsl
jge
cld
stc
and
test
push
clc
fstpl
and
hlt
gs
loopne
arpl
enter
outsb
ss
or
dec
cmp
cmpsl
push
inc
in
inc
mov
dec
mov
aas
dec
test
rcrl
jnp
test
ja
insl
sbb
cmpsl
mov
sub
aad
test
xchg
inc
arpl
mov
lret
ficoms
hlt
lahf
jl
scas
int
dec
add
dec
into
outsl
jmp
cmc
lret
mov
sbbl
cmpsb
adc
mov
fstl
pushf
inc
jno
subb
pushf
mov
jmp
mov
dec
outsl
cmp
mov
pop
repz
rcr
rcll
sbb
shr
lds
mulb
jae
inc
inc
cmp
jnp
movsb
aas
or
out
scas
jns
std
xchg
stos
out
jno
sahf
xor
repnz
inc
sbb
mov
adc
sbb
imul
push
inc
jge
inc
sub
jmp
xchg
and
cld
fsubrl
dec
in
movsb
lcall
pusha
and
xchg
int3
mov
stc
scas
or
cmp
incl
cwtl
test
cli
repz
mov
mov
and
mov
push
xchg
push
push
inc
xchg
sub
movsb
pop
in
test
ficoml
xor
lret
stos
cmp
add
push
cmp
ljmp
and
push
pop
sbb
lods
cltd
adc
sub
cmp
scas
mov
jb
mov
push
int
ds
pop
cmp
ss
mov
arpl
popf
mov
jbe
scas
aad
sub
lds
xchg
jp
add
aad
imul
add
xchg
pop
jp
lret
addr16
mov
push
out
popa
outsb
cli
lret
into
stos
adc
fmull
xchg
imul
pop
outsb
cmp
pop
dec
jno
pop
jecxz
jp
mov
xor
push
ljmp
lret
dec
movb
gs
sub
out
inc
popf
sub
cwtl
mov
sbb
or
dec
sub
in
iret
cmp
or
sub
int3
das
pop
inc
jno
or
pop
push
fwait
sub
cli
mov
addr16
add
push
xchg
cmp
aad
jg
shl
fcmovnbe
ficomps
lods
fdivl
jmp
insl
loopne
addb
pop
sbb
aam
add
mov
mov
jnp
mov
pop
aas
xchg
iret
jnp
int
inc
arpl
pop
fildl
mov
or
adc
and
insb
xchg
mov
mov
lods
test
or
cmp
shll
pushf
mov
fnsave
stos
ja
pop
mov
rol
outsl
add
cmpb
inc
fists
mov
lds
pushf
stc
ret
pop
push
xchg
in
mov
xchg
mov
cmp
xchg
and
push
stos
jle
sub
imul
or
cwtl
jle
lock
xor
dec
mov
test
inc
subl
pop
mov
enter
dec
out
inc
popa
std
xchg
stos
mov
repnz
dec
xchg
in
and
out
icebp
add
mov
addr16
sub
lret
jns
cmc
adc
aam
es
in
adc
pushf
in
stos
mov
jns
aas
xchg
jo
push
sbb
loope
push
mov
inc
out
ffreep
sbb
subb
int3
loope
inc
push
arpl
cmp
sub
repnz
pop
dec
mov
cmpsl
mov
es
pushf
push
sub
idivl
lret
aad
orb
imull
stos
testb
inc
cmpsl
mov
pushw
sub
pop
mov
dec
fadds
sub
andl
aaa
out
cwtl
sahf
pop
jo
out
xchg
sbb
je
mov
gs
les
cmp
fnstsw
jge
push
push
fsubs
leave
inc
imul
mov
mov
insb
xchg
stos
push
arpl
in
pop
and
lds
lea
shl
out
push
call
jbe
pop
icebp
dec
mov
inc
pop
jb
adc
xor
inc
lods
pop
dec
xor
jecxz
iret
adc
fcomp
jno
jae
imul
scas
xchg
mov
mov
test
call
das
dec
rclb
or
adc
adc
sub
in
fdiv
pushf
xor
out
dec
and
pop
jg
or
mov
or
xchg
stc
movsb
mov
ss
cltd
hlt
inc
dec
call
cmp
imul
inc
xchg
mov
shll
dec
add
ja
xor
fnstcw
jmp
idivb
pushf
or
cld
outsb
lret
popa
or
aas
shl
and
xor
xchg
xchg
dec
inc
pop
shlb
call
dec
fdivrp
dec
test
subl
pop
in
ret
pushf
adcl
push
lcall
dec
inc
sbb
lods
pop
inc
adc
popf
cli
outsb
aas
pop
aam
cmp
sub
sarb
sbb
aaa
and
clc
add
pop
js
fisttpl
push
sbb
jmp
pop
rclb
cvtpi2ps
add
sahf
xor
scas
sbb
mov
stos
cmp
mov
lods
repz
lret
nop
ja
dec
rcrl
xor
sbb
iret
dec
movsb
pop
and
jbe
pusha
jmp
stc
xor
hlt
rclb
inc
dec
in
sbb
inc
dec
mov
pop
adc
test
stos
cmp
ds
cld
rcrl
fs
out
mov
insl
mov
push
loopne
jge
xor
in
lods
fcmovbe
outsl
sbb
push
sub
mov
push
sub
outsb
adc
inc
jnp
dec
addr16
push
gs
icebp
xchg
add
cltd
dec
les
fldt
sub
dec
sub
xchg
add
xor
stos
add
xchg
pop
jae
cwtl
int
lret
sbb
hlt
mov
mov
aam
iret
pop
xor
std
mov
xchg
add
push
dec
sbb
adc
and
sbb
sbb
and
xchg
lea
loop
aad
sub
ss
cmpsb
sub
lods
insl
outsb
push
clc
push
sub
js
mov
push
out
and
sbb
or
jp
dec
jge
adc
or
fidivrs
mov
out
mull
popa
xchg
push
cmp
out
xchg
hlt
fs
std
pop
cmc
cmpb
sarb
test
xor
mov
cmp
out
scas
mov
pop
mov
mov
adc
mov
cld
push
popa
aad
push
int3
push
loope
pop
inc
cltd
and
hlt
lods
push
sub
shlb
ds
icebp
sbb
out
add
movsb
jl
in
dec
dec
and
sbb
mov
cmpsl
aas
adc
lahf
pushf
rcl
push
adc
dec
ja
inc
adc
test
mov
mov
imul
jecxz
stos
or
sbb
xchg
lods
in
stos
push
push
negl
lcall
imulb
sbb
pusha
jno
mov
insb
add
or
pop
mov
std
jle
dec
outsl
pop
cmpsb
xchg
or
add
cmp
jl
xchg
cmpl
push
jecxz
sbb
pop
lahf
fsubrp
push
repz
xchg
dec
mov
insb
dec
fwait
daa
fldenv
or
int
subb
rorl
and
xor
xchg
and
into
xlat
into
sbb
movsb
inc
jbe
fnsave
pop
or
or
sbb
or
mov
jb
mov
das
jl
sub
mov
xchg
cmpsb
cli
js
jmp
daa
or
mov
int
fs
inc
rcrl
out
arpl
push
sti
mov
add
loop
je
jmp
sub
lods
je
jl
andl
test
mov
or
mov
mov
insb
cmc
xchg
ja
insl
addr16
mov
rclb
pop
rcrb
jne
mov
stc
in
sub
jo
int
mov
fcoms
xor
xor
sti
sub
in
shl
inc
test
out
pop
rol
jg
test
push
mov
mov
inc
cld
pusha
stos
push
jne
xchg
in
add
or
lahf
pop
mov
and
pop
or
pop
or
push
push
lcall
leave
push
out
add
push
push
add
pushf
jge
push
fidivl
out
lret
sbb
xchg
xchg
fcomip
inc
or
testb
sub
fisttps
dec
jle
jp
cmpsl
sbb
scas
xchg
sub
arpl
ret
mov
add
sbb
les
loop
xchg
pop
test
in
arpl
inc
test
or
decl
jnp
push
nop
lea
add
shrl
pop
jnp
ss
mov
xchg
adc
sbb
xor
pop
sbb
popa
stc
lock
hlt
repz
cmp
mov
dec
pop
pop
shrb
imul
mov
jl
or
rol
int
add
mov
jl
fs
lret
outsl
mov
pop
add
inc
inc
and
adc
in
push
sti
aad
adc
rolb
ret
into
inc
push
pop
mov
pop
and
sbb
mov
ds
pop
jl
push
push
div
insl
xchg
push
xchg
int3
sarl
lret
push
jg
jge
inc
mov
mov
fdivs
cmp
cmp
dec
xlat
dec
sbb
mov
push
and
mov
pop
addr16
cs
int
movsl
fnsave
int3
mov
sti
or
fdivs
stos
pop
out
adcl
sti
inc
jnp
int3
pop
add
or
outsb
mov
ljmp
inc
bound
cltd
add
or
notb
stc
jl
xchg
mov
cmp
call
movsl
pop
mov
sub
push
les
test
jp
cmp
cmp
inc
mov
jp
mov
pop
test
lds
pop
add
adc
sub
inc
into
jae
mov
jg
clc
and
jae
push
cmp
and
lds
push
int
outsl
dec
dec
out
in
jmp
push
adc
xchg
test
ds
push
add
xchg
clc
xchg
out
mov
push
inc
inc
test
jno
clc
sub
push
stc
in
push
mov
dec
xor
pop
sbb
mov
ljmp
in
insb
dec
sbb
mov
inc
mov
inc
mov
jg
pop
mov
in
xlat
hlt
sar
subl
sahf
shll
test
jbe
and
mov
div
xor
es
pusha
repnz
out
movsl
jne
imul
mov
mov
and
adc
xor
xchg
push
scas
fwait
ds
dec
and
or
xor
push
cmp
pop
outsb
cmc
sbbb
mov
sbb
or
movsb
popa
leave
xlat
add
jb
lock
outsb
punpcklwd
ljmp
add
and
stos
and
xor
xchg
into
movsb
out
cmpsl
xor
sub
fdiv
xlat
cli
xor
mov
cmp
call
push
shll
loop
inc
into
adc
mov
mov
and
mov
adc
fldenv
xor
mov
add
icebp
addr16
mov
push
push
and
stos
in
mov
mov
mov
fwait
jo
pop
insl
pop
in
mov
ds
sub
gs
out
sarl
enter
addr16
add
inc
push
dec
xchg
add
push
pop
and
jnp
testb
dec
std
popf
jl
ja
sbb
cwtl
cmpl
jecxz
jl
enter
add
pop
xchg
in
test
jne
stos
scas
roll
clc
jecxz
mov
mov
inc
fiadds
pop
mov
scas
mov
xchg
jp
sbb
add
push
and
cmc
add
and
ret
jns
cmpsb
jecxz,pn
inc
mov
cmp
and
and
mov
and
out
or
pop
inc
cmpl
mov
out
mov
xor
add
pushf
jge
jge
std
mov
idivb
cmp
cmp
ror
dec
fsubrl
adc
and
cmp
jne
in
into
xor
xchg
lret
fstpt
in
push
incl
inc
push
mov
jp
imul
clc
rcrl
and
inc
xchg
push
mov
mov
ficoms
ret
js
mov
ret
fsts
and
add
push
sub
rolb
shl
mov
or
pop
mov
rcll
inc
rolb
ret
adc
lcall
mov
pop
pop
loopne
inc
fstpt
outsl
xchg
sbbb
sbb
sub
cld
fmuls
mov
jno
int3
pop
xor
jge
pop
push
jmp
and
movsb
mov
push
xlat
xchg
test
push
cmpsb
mov
test
sbb
leave
mov
sbb
push
pop
cli
call
pushw
loop
data16
mov
lods
push
data16
std
fsts
mov
xchg
mov
mov
xchg
ret
mov
pop
sbb
mov
mov
xorl
pop
mov
mov
popa
vdivss
xor
jge
fdivr
add
frstor
xchg
mov
mov
or
sub
icebp
ss
sar
mov
out
out
test
sub
fldl
sub
push
cld
test
xchg
mov
dec
bound
xor
mov
add
mov
hlt
dec
call
inc
pop
loop
fptan
into
in
test
mov
lds
popa
rorb
sub
add
sbb
orl
pop
pop
jno
mov
stc
pop
aas
and
sbb
ja
dec
hlt
xchg
loop
fwait
inc
xor
bound
xor
addb
jmp
dec
jo
add
cmp
push
in
or
inc
and
sahf
pop
dec
sbb
mov
in
dec
jle
pushl
call
comiss
push
xchg
xor
sub
cli
xchg
movsb
in
mov
pop
cmp
enter
jmp
cmpsb
push
es
ficomps
xor
daa
maskmovq
negl
sbb
mov
cmc
dec
fimuls
adc
imul
stc
cmc
lret
cmp
fsub
inc
jecxz
add
pop
cwtl
add
mov
mov
stos
ror
ja
adc
xlat
sub
je
lods
push
lret
mov
stc
test
sbb
add
testb
adc
cmp
stos
jne
inc
jmp
mov
std
cli
call
jo
or
idiv
dec
ds
push
inc
mov
push
mov
mov
out
cmovbe
jae
xor
mov
push
jp
mov
ds
sub
adcl
jmp
repz
sbb
mov
ss
inc
push
inc
pop
push
enter
or
xchg
push
lock
in
popf
sbb
mov
cs
pop
push
xchg
mov
repnz
jb
dec
test
movsl
push
enter
dec
pop
shll
adc
rcl
mov
inc
xchg
outsl
jmp
xchg
cmp
sbb
int3
out
sub
nop
js
cmc
arpl
loope
or
add
lret
xor
cmpsl
cmp
pushf
pop
dec
cltd
movsl
push
sub
mov
cmpsl
xchg
jge
xchg
insl
jo
or
andl
stc
mov
les
xchg
sub
jecxz
scas
xchg
add
jns
jne
mov
adc
pop
inc
dec
adcl
mov
mov
push
sub
lret
ljmp
xchg
push
dec
adc
iret
dec
mov
scas
hlt
lock
sub
fsubs
xlat
push
inc
cli
dec
sub
pop
ret
fldcw
loop
scas
lods
mov
xchg
push
cmp
mov
or
rorl
mov
jecxz
fdivs
icebp
dec
clc
sub
mov
mov
repnz
push
pop
mov
pop
push
mov
cltd
aad
cli
ret
call
out
lret
dec
aas
mov
inc
addr16
into
push
mov
mov
js
pop
xor
fisubrs
jae
sub
loope
mov
andb
sbb
sbb
rcrl
and
lea
or
jb
add
xchg
inc
sarl
push
loopne
cwtl
jl
jmp
stos
stos
mov
pop
icebp
cmc
pop
fistpll
push
mov
and
jmp
pop
xor
push
test
or
and
dec
mov
iret
or
cltd
jecxz
xchg
fcmovb
in
mov
sub
cmp
movsb
lea
inc
sbb
xchg
and
pop
sub
popf
xor
and
inc
jae
xchg
inc
jbe
ret
loopne
sbb
clc
or
xlat
mov
gs
dec
sbb
stc
ss
subl
cmp
rclb
jb
add
sti
in
cmpsl
sbb
mov
jbe
xor
adc
lds
les
cmpsb
mov
xchg
aad
mov
das
jns
insb
ljmp
cmp
xchg
ret
dec
out
cmc
les
lret
push
xchg
nop
imul
adc
mov
xchg
fwait
or
insb
leave
jo
add
or
cmpsb
push
dec
rcl
mov
dec
push
scas
cmp
mov
pop
int3
ss
popf
das
pusha
cmp
mov
mov
cmp
adc
mov
mov
lock
inc
mov
mov
scas
iret
outsb
imul
mov
js
loopne
inc
adc
jl
and
xor
out
push
ret
gs
sbb
or
cmpsl
adc
sti
or
sbb
mov
imul
int3
cld
fwait
xor
jmp
sub
or
mov
popf
xor
arpl
ret
es
pop
cmp
mov
adc
fcom
inc
ljmp
sbbl
mov
and
data16
adc
notb
xlat
lret
adc
ret
xchg
sbb
dec
sub
out
cltd
sahf
repz
aad
sti
pop
fmul
pop
mov
repnz
mov
dec
insl
jl
xorl
xor
lahf
pop
mov
sar
adc
cmp
dec
push
push
push
pop
rorb
arpl
mov
adc
and
insl
dec
aas
lret
fmuls
inc
xchg
enter
pusha
lds
mov
daa
and
sub
push
scas
pop
fisubrl
xchg
adc
pop
mov
inc
pushf
outsb
xchg
sbb
cmpb
xor
adc
outsb
jp
dec
lret
dec
sahf
out
push
add
jmp
jmp
iret
cld
enter
test
cmp
jnp,pt
xchg
xor
mov
cmp
cld
iret
xor
jle
loope
test
sbb
fstps
imul
popf
gs
sub
ds
mov
scas
sbbl
aam
inc
pusha
sbb
ja
push
pop
push
pop
lds
mov
sub
popa
pop
loope
add
xor
bound
mov
out
jns
aaa
mov
mov
jge
add
ja
fcoml
pop
out
xchg
pop
inc
fimull
js
mov
sbb
add
jge
mov
sub
mov
cmpsb
xchg
xlat
sbb
push
mov
adc
cltd
xchg
push
dec
call
dec
jo
push
lods
movsl
push
and
movsb
fs
mov
addl
jmp
fwait
adc
lret
inc
jp
adc
mov
cmp
pop
shrl
add
out
inc
adcl
add
mov
push
mov
ret
inc
xchg
cmpsl
cmpsb
adc
sub
and
imull
xor
sbb
mov
xor
adc
sub
sub
mov
sub
push
push
scas
and
jne
mov
std
outsw
scas
xchg
xchg
bnd
sub
mov
stc
fadd
lret
lret
fisttpll
cli
jge
std
adc
xor
push
xlat
push
xor
test
es
sbb
and
fdivrs
ja
sbb
or
in
cmova
cltd
push
data16
fimull
in
inc
cmp
insb
in
out
add
cwtl
push
pop
fistl
js
push
fld
cmp
adc
movsb
add
xchg
cmp
pop
push
cmp
aam
push
and
arpl
push
mov
js
mov
mov
mov
sbb
push
enter
imul
imul
jmp
jb
jne
mov
jge
jecxz
pushf
dec
xchg
lock
jae
cmpsb
std
push
pop
mov
fldl
lds
add
mov
lcall
push
enter
push
test
stc
inc
add
lret
dec
adc
mov
mov
in
mov
or
mov
in
sbb
push
fst
pusha
cmovae
mov
inc
addr16
and
lock
pop
dec
push
mov
ret
mov
xchg
test
push
sub
popf
add
mov
jge
jl
movsb
cmp
pmuludq
inc
mov
lock
add
jmp
lahf
pop
xchg
mov
repnz
xor
rorb
dec
test
dec
xchg
stos
push
sbb
mov
inc
lods
loope
pusha
imul
mov
sbb
and
sub
loope
sbb
sbb
mov
xchg
out
jae
sti
add
faddl
fldl
push
clc
inc
mov
inc
xchg
outsl
stos
push
inc
rolb
iret
mov
sti
jp
cmp
jle
mov
leave
nop
movsb
lock
xchg
push
in
or
popf
mov
mov
jnp
inc
or
mov
sbb
sub
mov
int3
gs
xor
jbe
dec
push
call
inc
mov
ret
call
sti
outsb
mov
dec
fsubl
jp
out
inc
xchg
jns
testl
push
lret
push
push
insl
sar
cmp
clc
mov
stos
enter
gs
idivl
mov
adc
pop
or
fstps
pop
jecxz
mov
or
je
jb
fistpl
mov
outsl
dec
je
pop
jnp
dec
js
xchg
idivl
orb
repz
pop
scas
cmp
xchg
arpl
pop
out
mov
mov
ja
fidivs
mov
insl
mov
jno
dec
xchg
mov
dec
call
jns
in
fistl
data16
xor
dec
mov
movsl
nop
xchg
mov
repnz
or
nop
pop
sbb
add
mov
adc
popa
and
repnz
arpl
fistps
ret
dec
pop
jp
shr
mov
and
jne
add
out
mov
push
xchg
jae
mov
mov
bnd
ss
dec
mov
rorb
xchg
xchg
xchg
into
clc
inc
fisubs
inc
xor
mov
aas
jmp
lcall
ljmp
pop
mov
std
push
mov
push
xchg
add
shl
fstpt
scas
mov
sbb
fmul
pop
ss
aaa
cmpl
fcmovbe
push
leave
dec
test
in
push
mov
add
stc
cmp
aaa
ja
push
push
les
fstpl
dec
in
push
mulb
add
mov
gs
cs
cmp
mov
addr16
xchg
fs
mov
mov
xchg
sbb
add
push
jbe
mov
repnz
outsl
mov
leave
movsb
pop
rcr
pop
adc
cltd
pushf
rorb
cmp
mov
mov
int3
jge
test
leave
int
inc
std
scas
mov
and
call
sbb
lcall
jp
cmpsl
aad
sbb
mov
int3
cmp
outsb
jns
out
mov
cmp
aas
fidivl
mov
gs
xchg
pop
movsl
loope
cwtl
js
sub
fwait
cs
mov
les
add
add
push
pop
adc
adcl
jle
fdivl
in
jg
stos
stos
jno
sub
mov
sbb
jg
or
das
repz
test
movsl
stc
push
sarb
lea
ss
leave
js
cmpsl
pop
pop
sub
cmpsl
imul
jmp
xor
clc
std
xchg
lea
lret
int3
xabort
ja
lds
add
adc
inc
fwait
inc
xorb
add
push
cwtl
xchg
mov
push
fistl
addr16
cwtl
out
mov
mov
std
test
ret
and
and
mov
lods
sub
adc
jno
cmpsl
dec
stos
loop
lods
pushf
js
mov
repnz
in
xchg
fisubrs
inc
mov
and
inc
fdivrl
sbb
jb
jecxz
aas
ficoms
in
movsb
scas
xor
jl
cli
test
xorl
aam
imul
out
cwtl
sbb
movsl
std
add
rorb
xorl
push
or
xorl
rorb
add
xchg
shlb
in
mov
dec
es
and
push
pop
movsl
xchg
leave
xchg
test
xchg
shrb
xchg
dec
test
jecxz
scas
fwait
push
pop
lcall
fcomps
and
mov
xor
loopne
out
jns
lahf
or
xor
fnstenv
sbb
sub
lcall
mov
lahf
inc
lcall
inc
xchg
and
ret
loopne
call
fs
add
sahf
push
das
jb
outsl
xlat
mov
fadd
inc
mov
add
outsb
loopne
inc
popa
mov
push
test
addr16
mov
lretw
andb
shrb
jnp
lods
outsb
mov
push
push
rcrl
stc
mov
add
fistpl
xor
add
cld
mov
out
inc
lahf
mov
add
testb
cli
sti
mov
data16
nop
and
add
add
sub
loope
not
and
xchg
sahf
push
lods
inc
mov
jno
gs
add
out
std
shrl
or
sbb
xchg
roll
pop
fwait
cmpsl
test
das
out
dec
pop
dec
xchg
lods
sub
pop
mov
shll
dec
out
into
cld
or
fwait
inc
lcall
or
jecxz
fldcw
sti
mov
int3
repnz
addps
lods
pushf
scas
in
in
inc
in
pop
add
ret
bound
adc
flds
or
ja
cwtl
jg
adc
pop
or
push
jno
in
mov
mov
cmpb
adc
mov
inc
inc
mov
xor
push
cmp
test
mov
imul
or
cmp
aaa
add
es
push
js
out
fldcw
ss
jo
mov
xchg
mov
inc
sbb
les
push
fwait
mov
adcl
mov
mov
cmp
mov
jnp
lret
inc
xchg
call
jb
out
dec
cwtl
add
sarl
and
xchg
sbb
ja
int
push
popa
sub
ret
daa
movsb
adc
cmpb
fs
lds
dec
dec
pop
jno
cmovns
pop
and
pop
test
jp
scas
cld
mov
dec
lret
fisttps
iret
lcall
adc
inc
xlat
inc
adc
add
mov
js
xchg
inc
dec
das
repz
popf
cs
push
or
inc
mov
cmp
mov
mov
mov
xchg
push
mov
mov
inc
mov
dec
sub
xchg
mov
shlb
rcll
push
nop
pop
jle
push
out
addb
mov
jno
xchg
pop
inc
add
cmpsb
mov
cld
pop
stos
xchg
sti
out
js
jge
add
push
pop
mov
out
ret
adc
dec
push
ficoms
subl
xchg
mov
test
xor
js
mov
jp
and
call
movsl
jnp
xchg
ret
pop
or
pop
mov
test
adc
cs
pop
mov
adc
mov
jb
mov
push
test
loope
scas
call
gs
inc
mov
and
rclb
and
mov
data16
inc
dec
and
mov
fcmovnb
xor
xchg
inc
jle
push
adc
dec
test
jno
cwtl
lcall
pop
lds
or
mov
frstor
daa
mov
ljmp
cmp
repnz
sub
cli
cmp
sub
adc
adc
scas
cmpsl
xchg
and
inc
out
mov
scas
pop
leave
add
mov
pop
aad
aas
lds
int3
push
and
xchg
in
cmp
into
aam
pop
mov
xchg
cmp
mov
lods
xchg
cmp
jmp
mov
lahf
call
fidivrl
iret
mov
jbe
pxor
dec
push
dec
add
popa
sahf
push
jle
pushf
ret
lea
mov
adc
cmp
dec
push
shl
push
cwtl
fwait
out
hlt
jmp
xchg
pop
mov
je
add
insb
cmp
gs
push
push
pop
mov
jl
add
sbb
stc
in
js
mov
std
xchg
mov
push
sub
pop
inc
icebp
push
testl
andb
lret
movsl
stc
add
shll
sbbl
icebp
lods
inc
xor
dec
push
mov
or
xchg
lds
in
mov
jb
mov
paddsw
scas
sub
lods
mov
fldt
cmp
dec
je
imul
mov
and
sbb
sub
and
enter
inc
dec
inc
mov
xor
pop
les
fsubs
mov
mov
add
arpl
xor
and
das
pop
out
jp
mov
test
sbb
cli
out
scas
cwtl
in
leave
daa
cwtl
test
mull
fdivp
shl
jecxz
xchg
inc
mov
pop
xchg
pxor
fidivs
mov
inc
mov
scas
or
mov
int
rorl
rolb
int3
dec
sub
sbb
in
aad
mov
into
pop
lea
les
or
mov
lds
push
xchg
xchg
mov
jp
sub
mov
pop
inc
xor
lds
aam
cmp
adc
and
fwait
sbb
sbb
or
mov
pop
jns
aas
and
cld
popf
or
adc
ja
push
sti
roll
imul
lahf
daa
adc
lock
jge
xchg
daa
fwait
inc
jl
in
mov
loope
cmp
incl
pop
xor
es
roll
out
jp
pop
push
dec
add
in
sbb
add
inc
dec
sbb
leave
leave
pop
cmpsb
outsl
push
dec
jo
sbb
scas
xor
cmpb
popf
pop
repz
mov
adc
add
dec
or
lods
add
cmpsl
xor
subb
dec
adc
dec
cs
repz
and
dec
add
jl
mov
push
or
ss
das
xor
loope
lahf
jecxz
dec
fimull
sti
sahf
enter
cmp
pop
ljmp
fadd
xor
xor
mov
shrl
adc
push
sahf
hlt
mov
push
xchg
pop
xor
or
sub
ss
arpl
lods
mov
lods
mov
imulb
stos
mov
inc
mov
adc
js
hlt
push
mov
inc
mov
repnz
dec
int
mov
xchg
mov
xor
mov
int
ds
ret
mov
das
cmpsl
test
mov
test
xor
sub
lret
xchg
xlat
fisttpl
jns
or
fcoms
mov
sbbb
jbe
sahf
rol
jle
cmp
sahf
addl
push
leave
and
lahf
jmp
cmp
dec
mov
arpl
push
jne
fdivs
mov
push
loopne
in
rclb
ss
ljmp
mov
je
jl
fstpl
sti
icebp
push
cmpsl
addr16
out
jmp
push
mov
cmpsb
adc
pop
bound
stos
adc
cli
sbb
lret
lods
cmp
shl
fmul
dec
mov
cli
push
scas
push
xchg
dec
and
sub
jge
cmpsl
data16
push
push
movsl
int3
inc
sbb
jbe
cmpl
in
push
out
adcl
les
out
xor
mov
pop
leave
push
xchg
sub
and
jl
out
in
mov
lcall
flds
scas
push
daa
aaa
jp
inc
adc
jle
aad
xor
adc
dec
test
push
lret
jb
sahf
mov
mov
repz
sbb
pop
xchg
and
aaa
roll
dec
aad
sbb
pop
mov
insl
idivl
rclb
pop
test
push
mov
mov
shll
dec
dec
sub
jbe
push
cmp
iret
negl
add
pop
test
push
cmp
idivl
fsts
xor
xchg
inc
dec
push
movsl
rcl
aam
movsl
popa
mov
repnz
out
out
pop
rorb
fstp
rol
shll
int3
mov
hlt
dec
push
lods
stos
popa
aam
dec
dec
add
inc
aaa
jmp
pop
adc
ja
cld
aad
xor
shr
and
repz
loope
orl
pop
out
xor
cmp
out
add
cli
test
ds
das
jge
lret
movsl
push
jo
orl
mov
int
push
adc
push
jp
jnp
aam
stos
mov
or
loopne
xchg
lds
pop
xchg
in
mov
adc
cld
loope
fistpll
pop
jo
cmp
jmp
xlat
dec
xchg
test
fcomps
mov
add
scas
popa
addr16
mov
xchg
rolb
xor
ljmp
enter
or
mov
lods
mulb
adc
sti
scas
jge
aam
xor
adc
out
pop
jnp
or
sub
ja
jnp
loopne
xchg
lds
adc
mov
lock
scas
and
std
idivl
out
add
xor
jge
prefetch
jnp
hlt
mov
xlat
dec
inc
push
mov
popa
jg
mov
cmp
popa
add
jne
add
cli
aam
lods
scas
divb
popf
addr16
and
and
jbe
mov
inc
push
out
cmpb
xchg
xor
repz
inc
and
jae
loope
dec
and
push
sbb
mov
fmuls
cmp
pop
dec
dec
cmp
clc
jae
filds
dec
data16
imul
pusha
or
fbstp
xchg
push
push
jecxz
or
test
aaa
cmpsb
divl
push
xchg
mov
cmpsb
mov
cmp
dec
xorb
pop
jne
ret
sub
test
iret
loopne
adc
sbb
dec
insl
mov
mov
sbb
mov
push
mov
xchg
sbb
sarl
pop
adc
mov
js
xlat
in
idivl
sbb
stc
cmc
adc
jnp
aad
push
xor
xlat
nop
punpckhdq
bound
daa
out
add
push
pop
mov
js
std
cmp
cmp
inc
pop
or
adc
leave
mov
dec
sarb
cmpsb
iret
loopne
icebp
rorb
and
out
std
arpl
ja
mov
movsb
sub
cmpsl
sbb
bound
xchg
je
popf
mov
loop
imul
xchg
inc
mov
lret
mov
nop
roll
icebp
add
pop
and
dec
int
and
jb
jge
adc
and
mov
xor
pop
sbb
add
push
inc
push
cltd
xchg
sti
es
xchg
shrb
out
rorl
xchg
xor
xor
lgs
rcll
sbb
mov
mov
fstpl
mov
mov
jmp
dec
pusha
idivl
xchg
lahf
inc
xchg
or
popa
lret
dec
xchg
or
daa
dec
push
push
lods
or
js
push
sub
jno
dec
test
mov
or
fnstsw
out
pop
lods
cmp
aaa
int
lahf
push
iret
aam
xchg
fnsave
daa
sub
xor
push
xlat
outsb
mov
dec
adcl
jns
js
xor
adc
pop
fbstp
lcall
add
pusha
repnz
jle
push
and
mov
and
nop
sarl
pop
and
std
jnp
aam
sbb
push
stc
iret
cs
jmp
jge
xor
lret
outsb
mov
popf
xor
cmp
dec
cmpsb
sub
mov
xchg
mov
stos
icebp
test
sbb
jp
add
cmpsb
les
push
in
les
mov
iret
jg
sbb
xchg
popf
repnz
cmp
mov
sarl
mov
pop
push
into
push
or
jbe,pn
je
or
enter
xor
adc
mov
and
push
sbb
sub
imul
cmp
inc
fwait
jb
xchg
cmp
in
push
jnp
outsb
aam
mov
insl
lock
lea
jnp
orb
xchg
int3
in
notb
cmp
add
xchg
sbbl
lret
push
inc
adc
push
mov
pop
xchg
pop
mov
mov
pop
lods
cli
in
jecxz
xor
jecxz
push
outsb
lcall
pop
sub
enter
fldl
dec
inc
clc
push
rcrb
xor
pop
adc
mov
jae
pusha
push
call
jle
push
inc
push
jno
negb
sub
inc
fidivs
xor
pusha
std
popl
test
adc
and
sbb
faddl
add
jo,pn
bnd
leave
loopne,pt
enter
int3
mov
jnp
mov
je
js
adc
pushf
adc
mov
or
mov
pop
movsb
popf
stc
sbb
cwtl
jecxz
test
cmp
cmp
sti
jecxz
sbb
jo
and
in
lret
sahf
jmp
jmp
dec
adc
xchg
bound
lahf
inc
scas
xchg
sub
mov
jg
call
call
aad
call
mov
cmp
inc
dec
pusha
inc
pop
or
imul
mov
fisttps
scas
jnp
lahf
frstpm(287
dec
mov
rorb
enter
add
xor
mov
xchg
dec
xorl
jle
dec
mov
jb
fcmovnb
mov
pop
xor
repnz
or
in
dec
cmp
xchg
and
mov
fiaddl
scas
push
or
xor
and
jnp
fisubl
sub
sub
jge
mov
pop
mov
jge
leave
pop
jmp
std
dec
pop
cmp
push
cmc
push
stc
aaa
pop
enter
cmp
jl
mov
dec
call
mov
movsb
adc
ret
repnz
adc
push
stos
in
inc
or
test
inc
mov
inc
dec
inc
add
and
mov
cltd
in
std
out
push
ds
call
add
dec
mov
jno
std
sub
loop
inc
fsts
lcall
dec
icebp
pop
ja
arpl
sub
mov
cmp
pop
stc
mov
add
mov
jne
dec
or
mov
cmp
sahf
leave
gs
icebp
leave
mov
push
fldl
mov
jne
xor
insl
test
cld
stos
jno
jbe
jae
gs
shl
js
jg
inc
xor
add
inc
out
inc
hlt
mov
or
dec
adc
stos
or
lock
xlat
and
mov
in
pop
pop
fldcw
mov
dec
mov
or
sub
sub
push
push
mull
testl
jmp
dec
idivb
xor
fiadds
daa
mov
stos
inc
out
js
es
xchg
aad
xor
sbb
mov
ss
xlat
orb
mov
add
cmpl
jle
dec
mov
outsb
inc
mov
or
add
aad
incb
mov
mov
sub
jns
or
ret
or
cmp
int
lahf
mov
dec
dec
or
dec
dec
stos
pop
mov
bound
jne
out
lret
leave
rcrl
out
xchg
mov
cmpsl
or
aam
pop
xchg
sarl
fists
fildl
xchg
lret
sub
shlb
cmp
pop
inc
pop
pop
xchg
push
in
add
and
xsha1
cmpsb
mov
imul
iret
jmp
repz
xor
xor
cltd
test
outsl
mov
les
inc
mov
in
ret
sbb
mov
push
dec
push
nop
inc
addl
mov
call
or
lock
loope
mov
repz
dec
or
imul
ret
jmp
cmp
cmpsl
aad
lcall
enter
out
ss
sbb
adc
inc
cmp
sbb
sbb
mov
xor
mov
pop
push
sub
push
cltd
lea
xor
ficoms
enter
sbbl
sub
cmc
aad
in
into
inc
mov
out
and
test
nop
das
ljmp
data16
xor
xor
aaa
dec
pop
add
cli
lea
enter
in
daa
jnp
adcb
cltd
outsb
push
loope
mov
and
popf
mov
and
add
xor
pop
and
lds
jge
dec
sub
xchg
shl
fildl
sti
lret
cmpsb
test
in
xor
push
sub
cmp
push
cmpsl
arpl
pop
jp
addr16
jbe
cwtl
std
mov
pushf
jmp
jbe
cmc
jl
pop
mov
inc
xchg
cmp
shl
fs
in
pop
leave
insb
into
out
pushl
notb
scas
mov
adc
leave
mull
or
aam
and
inc
mov
push
jno
mov
stc
inc
loop
xchg
jmp
insb
adc
decl
jle
ja
cld
adc
pop
inc
push
fsub
scas
push
lods
int
adc
aas
lret
cmp
aad
lahf
and
leave
roll
push
push
and
lds
push
aas
dec
inc
push
fimull
cltd
jmp
scas
outsb
ss
push
inc
mov
ja
fists
pop
inc
mov
adc
adc
mov
leave
sbb
out
out
push
gs
fs
bound
sub
xchg
jne
lahf
icebp
cli
sub
cmpsb
lock
ljmp
in
das
lret
call
mov
mov
mov
xchg
divl
out
pop
or
repz
fiaddl
ret
test
aaa
aas
and
dec
imul
stos
mov
add
sahf
or
jp
scas
cs
es
mov
fs
mov
dec
jle
test
out
push
outsl
xchg
mov
sbb
cmp
and
paddw
xor
fldl
and
sahf
dec
xor
jbe
mov
in
test
test
sub
bound
cmp
mov
testl
sub
popa
hlt
sub
out
fildl
addl
adc
mov
popf
data16
iret
stos
push
bound
pushf
inc
cmp
xor
jbe
arpl
jp
pop
orb
mov
std
jb
and
and
sarl
adc
testl
pop
out
mov
insl
imul
xchg
jno
sbb
dec
pop
sub
sti
testl
add
mov
mov
sbb
fnstsw
les
std
in
and
movl
scas
xchg
push
adc
cltd
rorb
dec
jge
mov
shlb
cmc
xor
dec
test
sgdtl
out
cli
out
ja
xlat
jecxz
xor
sti
adc
fidivl
bound
pop
mov
inc
pushf
mov
dec
xchg
in
push
loop
clc
pop
or
add
cmp
and
int
jl
push
int3
loop
sub
pop
sbb
xchg
cmp
lods
and
cmp
jae
dec
imul
rol
fdivrp
sbb
lods
add
sbb
loopne
iret
idivl
rcr
or
notb
rclb
and
cmp
or
xor
lea
roll
add
cmp
fbstp
push
cmpb
test
lock
stos
pop
or
in
mov
sub
pushf
popf
pop
mov
ror
add
repnz
movsb
and
sub
je
dec
stos
and
movsb
xchg
mov
aam
lods
mov
pop
lods
inc
sub
cmp
pusha
out
cmpsl
loope
mov
insb
out
pop
repz
sub
sbb
cwtl
sti
lret
stos
sub
je
cli
iret
ss
bnd
pop
stos
lea
xchg
mov
imul
cmp
dec
pop
mov
mov
jo
dec
popf
inc
fs
jl
mov
fidivrl
xchg
sub
test
icebp
cmp
add
inc
pop
insl
xchg
add
dec
xor
idivl
mov
inc
mov
and
roll
cmpsb
sbb
js
and
sahf
orb
movsl
push
xor
fdiv
push
mov
loop
movsl
xchg
iret
push
sti
push
shll
and
jae
jo
xor
push
pop
xor
lods
out
push
dec
sbbb
jg
fldz
mov
sbb
push
sub
mov
cmpsl
clc
and
leave
xchg
jg
push
fldcw
test
cmp
pushf
xlat
shl
pop
xchg
rolb
dec
sbb
jns
cmp
cmp
aas
xchg
push
ja
stos
jmp
jg
mov
mov
sub
push
jg
das
xchg
sbb
pop
push
pop
cmpsl
popf
insl
jmp
fnclex
aam
pop
add
call
mov
hlt
ljmp
sub
scas
jae
jo
test
dec
ret
mov
push
ds
cs
push
xor
mov
repnz
test
gs
mov
dec
out
xchg
iret
inc
add
pop
add
pop
sbb
push
fimuls
mov
mov
std
int3
fidivrs
out
aaa
inc
clc
xchg
ret
mov
imul
push
add
cmc
iret
sbb
xor
popa
xchg
je
adc
push
pop
jmp
popa
int
leave
std
aam
fsubrl
xchg
jnp
std
xchg
imul
push
data16
std
addl
add
sti
cmp
sbb
or
push
movsb
mov
sbb
add
rolb
fisttpll
gs
fsubrl
call
int
or
pop
movsb
dec
shll
xor
sahf
inc
push
hlt
outsl
and
ficoms
sahf
push
rcrb
sahf
idiv
cmp
xchg
ja
sbb
push
addb
in
leave
pop
xchg
hlt
subb
jns
sub
movsl
das
lods
negb
xor
push
shll
in
pmulhw
adc
mov
mov
rclb
inc
xchg
cmp
jno
inc
ss
jecxz
insb
in
inc
mov
dec
test
mov
cmc
pushf
cmp
sub
test
pushf
rcll
mov
ret
bound
and
jl
pusha
ja
in
sahf
dec
add
cmp
push
popa
test
cwtl
cmp
enter
fstp
sbb
mov
stos
outsb
jo
out
jmp
cmp
xor
xchg
fcoms
push
int
pop
pushf
mov
mov
push
adc
loopne
hlt
rcll
enter
scas
cmc
je
or
mov
pushf
sbb
cmp
clc
jmp
mov
clc
loope
push
mov
mov
imul
mov
je
ret
dec
iret
xchg
gs
sbb
cmpb
nop
mov
inc
shrb
pop
rclb
out
aam
and
dec
cmp
stc
xchg
push
lret
sbb
pop
mov
push
sub
fsubs
push
pop
in
mov
or
add
pusha
pop
mov
dec
push
xchg
cld
ret
fildl
pop
test
pop
cwtl
push
xor
push
into
dec
dec
cmp
add
popf
inc
pop
lods
xchg
mov
outsl
aam
iret
jno
mov
jnp
cmp
mov
iret
jnp
repz
in
leave
ret
mov
add
and
mov
js
inc
mov
movsb
add
xor
pop
jbe
fmuls
adc
rcrb
mov
pop
mov
loopne
leave
xor
push
std
adc
jle
iret
scas
out
jnp
jb
dec
or
sbb
xchg
cld
mov
sbbl
pop
cmpsl
cmp
lret
pop
outsl
dec
jns
mov
sbb
loop
mov
loopne
jnp
jge
js
and
adcb
push
and
sub
bound
cmp
jp
lds
outsl
data16
dec
xor
loopne
stos
loopne
pop
ljmp
dec
lret
stos
shl
lahf
movsl
or
repnz
add
andl
inc
fnstcw
sub
insl
xchg
inc
dec
fnstenv
xchg
push
push
movb
pop
jecxz
jl
mov
or
aad
pop
ficoml
pop
mov
mov
stos
cmp
jne
cld
push
dec
dec
xchg
sbb
push
mov
clc
mov
aad
mov
xor
mov
jb
clc
mov
and
sbb
shll
push
lods
and
aam
jb
push
jb
ljmp
cmp
pop
movsl
fsubl
adc
aas
ljmp
pop
aaa
dec
inc
sub
loop
popa
and
xchg
push
sbb
or
lret
inc
sub
jmp
test
cld
movsl
and
mov
xor
lods
sub
or
imul
test
and
xchg
testb
stc
mov
arpl
and
in
jle
xchg
sub
mov
sub
push
mov
sub
or
cld
pop
add
outsl
test
lret
clc
jns
out
mov
adc
pusha
push
or
flds
fbld
cmp
mov
call
mov
loope
inc
int
js
clc
cmp
adc
or
push
xchg
mov
sbb
std
mov
sbb
dec
dec
ret
out
imul
xchg
je
sub
dec
fnsave
adc
lods
sbb
js
fwait
inc
ret
movsb
mov
mov
cmp
ss
fildll
jle
aam
nop
cmp
push
addl
sbb
std
cmp
cmp
jbe
or
int3
roll
add
mov
adc
fstp
lcall
fwait
mov
mov
es
out
insl
out
or
stc
or
rcrl
and
push
mov
xchg
cmp
stos
lods
or
test
xchg
xor
int3
fs
test
pushw
inc
hlt
rcr
repnz
int3
add
sbb
inc
sub
adc
add
lret
dec
mov
imul
fstpl
xchg
add
mov
inc
adc
mov
adc
das
insl
and
decb
mov
adc
imul
leave
mov
pop
ljmp
mov
sbb
fs
outsl
inc
inc
xchg
adc
arpl
fstl
call
into
dec
xchg
sbb
inc
out
dec
je
shrb
jno
cmp
mov
int3
push
mov
inc
clc
cmp
sub
pop
mov
add
fistps
dec
sub
dec
sbbb
fs
jo
mov
ret
cld
sarb
dec
imul
sub
adc
bound
add
sbb
out
sub
sbb
lods
bound
xchg
stc
shlb
mov
mov
inc
and
out
mov
add
mov
frstor
out
fmuls
shlb
enter
xor
int
insl
outsl
xor
test
test
sub
stc
into
jmp
fsubl
pop
mull
and
popa
call
out
ret
fwait
iret
scas
loope
ret
sarb
xchg
push
xchg
das
sbb
es
inc
mov
push
sarb
int3
and
cli
push
in
aaa
les
sti
int3
mov
repnz
xchg
pusha
fs
lock
cltd
jecxz
pop
dec
push
stos
pop
and
into
jge
and
fmull
mov
dec
scas
xor
or
nop
pusha
adc
aaa
and
daa
sti
mov
lahf
sub
sti
roll
stos
rcll
cmc
lret
stos
xor
sub
mov
nop
and
or
add
mov
pushl
and
add
sbb
jbe
call
jg
push
pusha
std
pop
xor
rclb
aas
out
or
push
addb
mov
xchg
test
mov
out
outsb
mov
fistpl
mov
ret
lock
fs
pop
pop
add
lret
loop
or
lahf
add
lret
je
les
lret
loopne
lahf
xor
and
mov
inc
xchg
jae
adc
push
cmpsl
mov
mov
mov
movsl
pop
mov
and
push
mov
sub
stc
sbb
test
inc
pusha
or
out
loop
shrl
in
inc
sarl
movsl
pop
push
pop
mov
cwtl
test
push
arpl
xchg
dec
push
xchg
mov
xlat
pushf
and
jecxz
das
ljmp
orb
faddl
cmp
dec
jnp
loop
fdivrl
cwtl
or
sahf
cmpsl
fildl
stc
ret
fldl
push
adc
lock
lcall
xchg
leave
dec
adc
and
imul
loopne
lret
mov
int
jns
shll
sub
jle
cmp
adcb
dec
pop
inc
cs
ror
loope
stc
mov
lods
mov
stos
insb
leave
push
inc
sub
call
insb
shl
push
js
add
jb
push
aaa
xor
mov
cld
and
in
push
or
cmp
loopne
pop
dec
sbb
rolb
int3
jne
je
mov
adc
lahf
stc
or
fcoms
and
jle
cli
push
adc
sbb
mov
jmp
jbe
inc
and
cmp
cmp
mov
roll
sti
mov
shl
push
in
xchg
lret
fidivl
cmp
movl
hlt
inc
adc
xor
mov
lods
outsl
ds
sbb
lds
lea
ror
cli
sbb
pusha
sbb
pop
inc
sbb
push
dec
mov
sbb
and
rcll
cmp
addl
mov
mov
fimuls
fcompl
out
sbb
enter
xor
mov
ret
jno
popa
popf
push
dec
mov
inc
fs
insl
sbb
pop
incb
outsb
sub
inc
inc
xor
ret
clc
xchg
sub
into
mov
iret
push
into
mov
notb
jg
hlt
orl
mov
sbb
xlat
scas
icebp
hlt
adc
jmp
shl
aas
repnz
mov
mov
mov
ljmp
iret
adc
stos
cmp
aam
jmp
mov
adc
pop
jecxz
inc
xchg
adcb
imul
sahf
daa
stc
filds
jle
shlb
jno
dec
imul
popf
imul
jbe
xor
lcall
pop
enter
hlt
and
rolb
sahf
mov
jno
dec
fstl
jnp
push
data16
jae
xchg
dec
pop
and
fiadds
jmp
int3
popa
and
dec
std
rcrl
cmp
das
sub
hlt
dec
push
jne
cld
xor
or
jmp
gs
leave
jns
enter
jle
icebp
das
lahf
dec
test
cmpsb
mov
cmp
inc
pop
iret
or
mov
dec
xchg
jl
push
mov
mov
ds
jg
and
in
imul
mov
leave
sahf
push
icebp
insl
sbb
jle
fiadds
xchg
dec
lcall
ss
lea
xor
dec
mov
sahf
and
out
dec
fwait
inc
jmp
sbb
loop
mov
add
mov
ss
call
seta
fwait
and
xchg
cs
rorb
lock
mov
outsb
dec
jmp
popa
insl
imul
xor
dec
ret
mov
nop
roll
sub
xchg
push
cltd
jge
aam
inc
test
pop
push
test
iret
fists
adcb
add
fldl
inc
fst
aam
and
mov
push
pop
cld
xchg
test
xchg
add
sar
jne
icebp
cmp
jp
inc
test
punpckhdq
call
js
xchg
pop
rolb
shlb
div
fsubl
popa
shrl
nop
mov
movsl
loopne
xor
movsb
call
sbb
negl
and
sub
mov
dec
push
je
xor
imull
popf
mov
in
insw
addl
sbb
ror
mov
mov
pushl
or
xor
or
xchg
imul
sub
scas
dec
loop
cltd
adc
pop
xchg
inc
loope
xor
xchg
xchg
xor
xorl
inc
out
dec
popa
cmp
xor
cmp
lods
sarl
test
dec
or
in
cmpb
mov
ret
inc
push
push
jb
leave
dec
lcall
dec
add
xor
and
fstp
stos
jmp
in
and
pop
pop
or
and
in
cltd
adc
or
mov
xor
clc
shrl
sarb
add
setae
mov
sub
or
xchg
outsb
roll
mov
xor
jnp
clc
fisubs
pop
mov
imul
jmp
pop
lret
inc
insb
ds
and
jle
rol
xchg
test
andb
ret
roll
stos
pop
sub
push
pusha
inc
push
fs
stos
les
shlb
loop
pop
adc
cmp
cmp
pop
adc
xchg
jl
in
xor
sub
call
inc
adc
cli
fwait
std
out
pop
adc
nop
inc
and
aaa
pop
pop
lds
hlt
push
icebp
mov
je
in
inc
mov
in
loop
jns
and
addr16
mov
mov
mov
mull
push
add
rcl
outsb
dec
outsb
or
neg
push
push
out
fsts
mov
jecxz
aad
lcall
mov
xchg
mov
pop
xchg
les
stos
in
push
test
jne
gs
jne
fmull
subl
inc
adc
daa
xchg
sub
dec
sbb
je
out
mov
sub
inc
xchg
sub
insb
aad
rorl
cltd
fwait
cmp
cwtl
push
jge
mov
ljmp
jbe
push
test
xchg
jnp
and
mov
and
mov
scas
shlb
rclb
outsl
mov
pushf
lods
dec
mov
and
inc
ljmp
jle,pt
xor
mov
mov
sub
out
arpl
xchg
fidivrl
mov
dec
jp
cs
sbb
lds
incb
push
bound
mov
icebp
ss
pop
jb
test
pop
push
adc
popa
test
and
inc
jl
jne
testb
adc
dec
call
add
fmuls
test
xchg
cmc
mov
xchg
inc
sbbb
aad
jns
aas
jecxz
sub
push
stos
jne
dec
pop
push
out
movsb
cmp
or
inc
cmpl
jle
lods
gs
and
out
stos
sub
aas
movsl
popa
mov
xchg
add
push
pop
movsb
dec
sbb
in
lret
sub
adcl
mov
jg
sbb
sbb
push
imul
sub
cmp
shrb
sub
and
adc
pop
push
jne
test
sub
sub
mov
clc
movsb
movsb
loope
iret
cmp
fldt
xor
xchg
jno
pop
test
sub
lahf
mov
xor
pop
in
mov
popf
push
imul
push
fwait
iret
jns
adc
mov
sub
jb
jp
aam
ja
sbb
stos
mulb
sbb
jle
jmp
shlb
stos
sahf
fistps
jge
into
lods
mov
sbb
cltd
icebp
sub
push
xchg
lret
shll
mov
daa
add
int3
mov
inc
in
pop
inc
fiaddl
add
fisubl
insl
push
fcomps
cld
flds
faddl
sbb
test
and
pop
into
mov
inc
js
mov
fimuls
cmpsl
xchg
xchg
outsb
jb,pn
dec
stc
notb
sbb
mov
and
ja
mov
int3
inc
shll
ja
add
dec
movsb
jbe
add
pop
push
out
push
push
sbb
dec
xor
movsl
fistps
iret
sub
adc
mov
add
sbb
pop
push
cltd
cmp
jmp
pop
nop
test
out
mov
dec
xor
dec
in
jmp
sub
mov
sbb
repnz
mov
mov
sbb
cmp
leave
cmp
sub
dec
fmul
in
stc
orb
jmp
or
js
scas
push
arpl
and
outsl
jecxz
mov
rorb
mov
fldcw
sub
stc
lods
je
fistps
and
sbb
push
mov
lock
dec
cmc
push
and
push
mov
cmpsb
pop
dec
fwait
or
sbb
fdiv
jp
dec
popf
cmpsb
mov
aaa
fsubl
add
xor
addr16
xlat
sbb
sub
shl
mov
mov
aad
lret
or
mov
mov
pushf
popf
mov
dec
xlat
xorl
mov
sbb
test
add
mov
push
outsl
pop
call
push
xchg
sbb
sbb
shll
or
insl
test
mov
mov
out
push
cmp
push
dec
xor
mov
xlat
icebp
aaa
jo
ljmp
lock
fisubs
fsubl
inc
xor
scas
mov
pop
movsl
repz
iret
daa
fidivs
in
nop
jmp
mov
or
sbb
jge
cld
loope
es
repnz
add
div
cld
lds
xchg
inc
bound
ljmp
lahf
addb
lcall
push
push
lcall
sarb
sub
call
inc
xchg
or
out
nop
push
add
testb
cmpsb
jp
sub
inc
xchg
pop
mov
lods
xor
dec
cmp
cmp
push
cmpsb
je
fsub
scas
mov
lods
push
popl
lods
or
lock
sbb
fidivrs
mov
xchg
push
adc
ja
add
adc
cmp
fwait
loope
bound
fcoms
sbb
stc
push
ljmp
loope
fs
test
ja
shl
js
or
wbinvd
lods
pushf
lcall
or
popa
pop
mov
push
or
push
xchg
sti
pop
iret
insl
aad
sbb
cmp
daa
out
pop
dec
jge
iret
fsubr
fists
lods
cmp
mov
cmp
cmp
in
lods
xchg
ss
mov
mov
sbb
iret
push
stos
sbb
sbb
jp
sti
les
aad
push
xchg
mov
sub
fs
cmp
aaa
xlat
das
out
mov
jns
add
push
js
pop
adc
and
insl
fs
xchg
adc
and
xor
lods
lcall
pusha
adc
adc
test
int3
xchg
pop
push
jmp
or
into
pop
movsb
pop
ret
dec
and
dec
sub
dec
or
xor
or
sbb
push
push
mov
adc
jp
jmp
orl
fmull
adc
repz
mov
xor
data16
and
jb
inc
imulb
popa
and
push
mov
or
outsb
out
sbb
mov
lock
rcrb
insb
jo
mov
mov
lds
nop
jle
sub
pop
sbb
add
and
ds
or
sub
js
pop
sub
stos
add
inc
in
addl
inc
loopne
push
scas
repnz
and
mov
clc
mov
lcall
lret
mov
inc
xor
mov
cmpsb
jmp
mov
mov
jmp
jnp
testl
ret
jle
inc
repnz
dec
pushf
jbe
sti
sub
xchg
mov
mov
sub
in
imul
lret
js
adcb
pop
scas
add
push
ret
mov
mov
and
inc
jecxz
popf
push
pop
jo
cmpsb
mov
sbb
sub
repnz
imul
mov
push
cli
jg
in
dec
arpl
cs
std
inc
xor
pop
cwtl
pop
in
dec
repz
sbb
cmp
inc
and
push
insb
and
xor
pushl
xchg
xlat
dec
mov
cwtl
incb
add
adc
dec
and
pusha
loope
inc
mul
cmc
xorl
jecxz
xor
inc
mov
mov
pop
sub
jae
shll
daa
xor
pop
es
imul
roll
fildl
sub
ud1
mov
cmp
dec
mov
dec
jp
pushf
mov
test
jno
fstp
stos
testl
pop
mov
mov
mov
sub
xor
lods
sbb
in
mov
lret
test
mov
shl
test
iret
add
xchg
lds
movsl
int
je
xchg
jmp
popa
add
movmskps
faddl
mov
push
fstps
lods
xlat
xchg
in
adc
lea
addl
test
sub
bnd
sub
inc
imulb
mov
icebp
insb
pop
ror
fiadds
popf
ja
and
mov
xor
jg
call
jmp
adc
and
xchg
stos
insl
add
xchg
cmpsb
sbb
push
mov
je
and
mov
jmp
pop
cwtl
fsubrs
mov
and
push
push
jecxz
push
dec
outsb
sbb
push
inc
addr16
jmp
pop
sbb
and
fs
movsl
cmc
cmpsl
loop
sub
ret
shlb
and
fisttps
sub
adc
cs
lea
test
mov
and
addr16
mov
ret
call
stos
jo
movq
lods
pop
jge
pop
loope
and
mov
or
xchg
pop
sbb
repz
xchg
dec
lahf
fsubl
adc
sbb
xchg
les
loopne
sti
mov
int
mov
push
and
xchg
icebp
mov
mov
cwtl
nop
push
shrb
dec
outsb
pop
mov
icebp
lret
out
flds
jmp
dec
sbb
cli
sbb
dec
popa
jle
jmp
shl
cmpsl
add
or
cltd
cmp
mov
jns
rorl
std
pop
dec
adc
push
mov
push
insl
push
pop
xor
and
cmp
adc
mov
and
adc
sbb
inc
arpl
jle
mov
cmp
sub
inc
fisubrl
js
popf
dec
mov
jle
push
clc
mov
dec
lahf
bound
inc
icebp
or
jle
pop
xchg
push
adc
fsubl
cmpsl
jge
push
inc
lahf
push
dec
pushf
dec
cld
xchg
int
test
push
popf
and
sbb
dec
jge
cmp
mov
mov
add
es
pop
das
push
mov
adc
pop
dec
mov
nop
cmp
scas
imul
in
sti
push
mov
push
cmp
ret
mov
into
cmc
xchg
dec
pop
int3
or
hlt
cld
xchg
into
subl
cwtl
aas
das
and
int3
and
popa
ror
ljmp
jo
repz
jl
fnstenv
jne
js
test
ja
xor
lcall
shlb
cmpsb
das
mov
inc
xor
xchg
push
cmp
fwait
add
stos
mov
jge
mov
mov
fists
inc
push
aaa
inc
in
dec
cmpsb
jle
mov
mov
push
mov
or
stos
adc
xchg
pop
in
enter
jecxz
push
and
sbb
xchg
pusha
ja
xor
xchg
push
sub
sbb
pusha
ret
push
mov
into
std
aad
fiadds
test
mov
mov
jl
imulb
std
hlt
imul
adc
jle
push
aas
sbb
shll
push
xchg
add
push
fs
shrl
and
repnz
icebp
xadd
push
stos
inc
sarb
fistpll
add
call
cwtl
jmp
aas
or
into
mov
add
jbe
out
loop
mov
xchg
sbb
test
push
inc
lret
clc
xchg
outsl
pop
xor
outsl
sub
call
mov
sub
mov
rorb
add
ja
movsl
fucomp
lret
shr
pop
push
dec
sub
mov
jle
lods
cltd
or
aam
inc
push
sbb
lock
ret
adc
scas
pop
sub
imul
sub
pop
lcall
in
jnp
dec
icebp
or
push
inc
mov
sub
adc
xor
push
ja
xlat
dec
push
pop
lock
push
cmp
subl
je
xchg
xchg
push
add
add
mov
mov
push
data16
push
and
cmp
xor
or
mov
call
push
iret
push
pusha
mov
sub
insl
faddl
pop
lock
cmp
pop
xorl
std
sbb
jge
jmp
popf
int3
or
addr16
mov
add
dec
cltd
adc
inc
movsl
popa
jns
xor
ds
push
pop
jl
xor
jae
stos
dec
pop
jne
add
mov
adc
pop
cmp
dec
test
sub
cmp
fwait
sbb
out
add
lahf
dec
mov
ret
inc
out
out
sbb
stos
lahf
cmc
push
adc
ljmp
dec
out
mov
into
scas
je
fadds
dec
or
test
lea
xor
es
inc
jecxz
sub
dec
js
or
dec
xchg
adc
icebp
mov
out
dec
xchg
enter
mov
xchg
pop
mov
ja
jp
cmpl
cmpsl
push
add
pop
add
push
outsb
outsl
add
ss
and
scas
icebp
pushf
dec
pop
jmp
imul
inc
arpl
cli
or
ret
and
dec
push
les
jae
cld
scas
jns
sbb
mov
inc
sahf
test
cmpsl
push
lret
push
mov
lea
inc
mov
nop
rolb
mov
adc
xor
pop
jmp
scas
das
fimuls
fldt
and
cmpsl
cmp
dec
mov
cwtl
fs
pop
popf
adc
rcl
call
into
jmp
jno
in
outsb
pop
mov
das
dec
pop
jae
xlat
cmp
cmp
daa
push
jle
jo
or
in
loopne,pn
out
shrb
aaa
sarl
xchg
add
pop
sbb
mov
mov
xchg
aam
push
aam
push
or
rolb
jg
fwait
xchg
jge
out
fidivrs
out
movsb
push
insb
mov
shll
lcall
mov
xor
js
jae
popa
xor
cmc
shrb
test
in
mov
imul
scas
mov
push
enter
loopne
cld
mov
push
cwtl
jne
insl
aaa
stos
fidivrl
push
fcoml
jle
inc
cli
cmpsb
lods
rol
or
push
push
mov
nop
mov
les
les
xchg
int
xchg
push
leave
mov
std
jno
repz
dec
push
aaa
pop
imul
mov
popa
inc
mov
repnz
enter
mov
or
jno
pop
sub
lods
ljmp
out
dec
incb
call
mov
dec
out
mov
loopne
inc
cmpsl
jb
int
sahf
int
ljmp
mov
insl
dec
std
insb
jbe
or
test
mov
and
or
xchg
fdivrs
scas
and
jns
sub
sbb
and
fcmovbe
aad
and
sahf
jb
fcmovbe
jecxz
rolb
and
cmp
pop
mov
xor
scas
mov
push
stos
jb
cmp
push
sahf
cltd
pushl
jo
inc
mov
mov
jnp
sbb
push
int
arpl
lret
pop
dec
or
inc
hlt
enter
xor
inc
or
stos
movsl
arpl
push
test
jge
shlb
cwtl
sbb
inc
mov
movsl
out
shlb
sbb
cwtl
ret
xlat
sub
push
mov
out
mov
mov
add
cli
xchg
dec
and
inc
or
cmc
jb
pop
xchg
decl
jmp
and
pusha
iret
aad
mov
pushf
je
mov
mov
sahf
jb
sub
leave
inc
cltd
ja
notl
mov
clc
popa
push
imulb
pusha
aaa
push
in
mov
outsl
dec
xchg
not
push
xor
mov
and
int
inc
push
push
pop
sbb
sub
out
out
jno
sbb
data16
cmp
je
call
repnz
sbb
ficompl
push
mov
inc
outsb
sbb
sbb
xchg
and
dec
or
out
mov
jno
imul
lahf
jle
mov
push
dec
mov
in
jae
lret
cld
pop
xlat
mov
popf
mov
fwait
out
jmp
cmp
pop
xchg
stos
mov
jmp
cmp
test
dec
add
jl
sbb
jns
les
and
ret
subb
nop
test
jbe
fwait
sbb
les
call
mov
stos
inc
daa
dec
xchg
fimull
stos
aad
outsl
add
aaa
and
xchg
iret
lret
popa
push
rcrl
fwait
aas
rcrb
mov
mov
inc
mov
add
idivb
cmpsb
push
cmp
std
cmp
mov
bnd
mov
jne
scas
call
adc
mov
aaa
sub
test
mov
add
cmc
push
loop
js
inc
pusha
mov
push
ljmp
jmp
xchg
xlat
mov
ret
add
test
mov
ret
pop
cltd
cld
mov
movl
mov
mov
and
jg
mov
inc
scas
or
jno
pushw
pop
js
icebp
lahf
pop
test
jp
repz
mov
rcl
cmpsb
shll
out
push
sub
xchg
or
mov
sub
aaa
jge
int3
dec
fs
cmp
sti
push
cs
insb
fwait
loope
jmp
mov
pop
filds
or
nop
or
mov
cmp
mov
sbb
adc
add
dec
inc
adc
mov
iret
or
add
or
ljmp
dec
cmpsb
sti
push
pop
mov
push
add
jp
xchg
repnz
jle
sbb
sub
cmc
mov
pop
push
out
repnz
mov
mov
push
loopne
xchg
flds
imul
xchg
ja
outsb
dec
ss
xor
cmp
loopne
bnd
cmp
fisttps
nop
icebp
ljmp
arpl
xchg
adc
cs
mov
push
testb
pop
popa
mov
push
sub
fisubs
cmp
add
lock
lods
add
in
fisubs
sub
and
fs
pop
jo
out
inc
mov
decb
mov
and
and
push
out
sub
adc
scas
rolb
lock
cld
enter
inc
fst
xchg
loopne
add
xlat
mov
inc
aad
jns
lock
jmp
xor
jp
andb
jg
movsb
ljmp
loope
jp
call
mov
sbb
out
pusha
xor
cld
out
jns
push
push
or
lret
push
fs
jg
aaa
push
hlt
js
jle
insl
or
add
mov
fldenv
sarl
dec
push
mov
or
xchg
xchg
in
push
std
push
mov
repz
adc
cmp
test
mov
mov
int
out
inc
shlb
mov
mov
push
xchg
sbb
clc
leave
cmpsb
outsb
jmp
int3
js
test
adc
adc
jae,pn
mov
push
xchg
negb
jl
in
and
or
lods
xchg
push
push
lock
vorpd
mov
xorb
fsubs
xor
lds
mov
dec
inc
jle
pop
xchg
and
jge
fstps
jne
iret
js
inc
pusha
inc
mov
mov
lds
push
lock
and
scas
pusha
and
fistl
lods
repz
dec
sahf
iret
xchg
aaa
or
push
repnz
sbb
nop
mov
push
hlt
add
mov
dec
dec
nop
in
rorl
or
je
xchg
rcrb
sub
loop
outsb
clc
bound
hlt
cmp
inc
pop
popa
stos
pop
push
in
fs
or
lcall
sub
rcrb
sub
or
iret
pop
mov
jle
lods
inc
test
mov
sub
fldenv
mov
inc
xor
push
dec
fcomps
xchg
xchg
sbb
sub
cmp
ficompl
cwtl
sub
dec
jo
ret
dec
test
ds
sbb
xchg
or
mov
lods
xchg
aaa
leave
cli
pop
dec
or
divl
jecxz
mov
fcmovnb
dec
mov
xchg
mov
js
out
jno
jbe
mov
dec
pop
sub
fs
ret
hlt
sbb
in
and
nop
cld
daa
fistpll
mov
jbe
addr16
lods
out
lcall
jno
clc
push
movsl
out
jle
xchg
cld
dec
jae
sub
mov
fmull
pop
popaw
adc
cmc
loopne
jae
push
ja
ret
enter
mov
inc
jmp
cmp
jle
cmpsb
je
fwait
mov
xor
dec
dec
rorl
in
aas
push
ret
push
adc
iret
test
inc
aaa
stos
fcmovnbe
icebp
fldt
ds
pusha
mov
ror
outsb
aad
in
inc
mov
inc
jno
pop
push
outsb
stc
mov
jle
push
lock
dec
pop
xchg
add
add
in
mov
repnz
mov
lock
push
sub
fidivl
jmp
xor
mov
jbe
popa
mov
aas
loop
xchg
xchg
mov
sbb
jno
push
cmc
out
std
cmp
jg
push
lahf
xchg
into
fistpl
mov
outsb
loope
mov
cwtl
mov
adc
adc
in
pop
mov
cmp
pop
or
mov
loop
push
add
jb
cli
or
mov
out
jl
movsl
push
jge
das
rcrl
dec
cli
pop
stos
aam
pop
inc
out
cmpsl
loope
dec
sbb
jb
in
icebp
in
pop
test
fstpt
scas
xor
sub
mov
add
stos
fldl
js
or
into
xchg
rcrb
or
in
adc
imull
cmp
orb
popl
mov
clc
sarb
inc
and
and
es
mov
pop
jae
data16
cli
mov
jp
adc
and
mov
nop
neg
outsl
repz
dec
xchg
mov
cmc
addr16
shlb
fs
lea
jecxz
into
adc
test
mov
xchg
jno
xchg
pop
scas
push
ds
sbb
and
pop
sub
xor
xor
mov
movsl
ficoml
sub
arpl
data16
xchg
jb
ret
cmp
mov
hlt
add
repz
push
cmp
rorl
mov
dec
notb
dec
int
jecxz
cmpsl
xchg
test
adc
daa
and
pop
adc
div
inc
inc
cltd
push
ljmp
mov
aas
out
pop
leave
xor
mov
jecxz
lods
aad
lret
pop
dec
leave
lcall
cmp
and
jge
mov
loopne
pop
imul
test
cld
inc
mul
xchg
jno
out
sahf
ret
mov
hlt
movsb
push
pop
movsl
inc
sbb
hlt
leave
mov
gs
repz
sbb
sbb
add
jge
out
fs
inc
daa
cmp
xorb
jp
std
scas
dec
dec
dec
mov
imul
mov
jno
sahf
mov
loop
inc
jle
imul
xlat
sub
mov
or
cltd
cmpsl
xchg
inc
sahf
stos
cmp
mov
clc
adc
jg
xchg
mov
mov
movsb
mov
fildll
pop
cmpl
or
dec
mov
sub
push
repz
jle
sbb
push
ds
fsubl
addb
or
fadd
jb
sti
push
mov
add
inc
cmp
mov
inc
stc
pop
mov
sahf
jb
scas
xor
ds
leave
aad
lods
mov
adc
cmc
push
test
add
adcl
jecxz
cmp
fldenv
movsl
mov
pop
insl
sbb
scas
jae
pop
cmp
and
xor
mov
aas
sbb
pop
aas
xorl
lock
repnz
adc
imul
movsb
xchg
mov
aam
add
dec
xor
add
mov
push
dec
jnp
popf
sub
shr
rcrl
and
call
mov
ljmp
pop
scas
push
xchg
repz
mov
inc
jecxz
out
fldt
inc
mov
bound
sbb
add
adc
orl
pop
jno
divl
sbb
pop
stc
and
scas
jnp
ds
lods
or
xchg
movsl
xor
ret
mov
aaa
stos
vandnps
sub
sub
jae
jae
into
pop
jno
arpl
pop
les
push
jge
insl
sbb
mov
bound
xor
xor
and
sarl
insb
adc
mov
cmp
ljmp
scas
xor
vmwrite
pushf
mov
and
mov
loope
cmc
fwait
xor
pop
mov
ficompl
add
int3
testl
jae
mov
mov
mov
out
add
mov
aas
js
xchg
pop
sarb
jo
sbb
call
fadd
test
dec
mov
push
mov
ror
andl
ret
add
xchg
mov
cmp
inc
cmpsb
cs
fimull
cmp
daa
dec
enterw
add
jb
or
js,pt
inc
lods
mov
in
andl
in
mov
int
add
mov
pop
pop
cmp
in
lahf
cmp
xor
test
or
fisttpll
cmp
jmp
call
lret
sbb
adc
ja
xchg
lret
cltd
xchg
mov
mull
mov
jns
arpl
and
or
mov
xchg
std
icebp
mov
add
xor
sub
popl
xchg
jg
jae
mov
xchg
lcall
and
cli
push
inc
inc
adc
or
dec
fmuls
mov
mov
sahf
mov
push
and
test
sbb
jb
and
inc
mov
sbb
pushf
xchg
xor
push
movsb
sub
and
decl
add
jge
mov
out
dec
xor
aad
ja
popa
push
push
jne
out
xchg
adc
or
adc
pop
repz
mov
daa
lcall
cld
leave
and
or
or
pushf
mov
mov
adc
mov
and
pop
fimull
pop
cmp
bound
xor
outsl
popa
fwait
leave
in
pop
mov
mov
ficomps
jecxz
jnp
popf
lods
iret
adc
in
ss
and
addr16
mov
fcompl
fsubs
xor
iret
adc
hlt
ljmp
xor
cltd
dec
jmp
adc
inc
xchg
lcall
lahf
out
jb
jo
xor
push
lds
push
dec
xor
or
mov
sub
jo
addr16
jle
and
pop
insb
dec
and
xchg
pusha
mov
pushf
cld
dec
cmp
pusha
dec
lret
fdivs
xchg
mov
fstpl
mov
mov
sbb
mov
nop
xor
cmp
mov
fstpt
xchg
xchg
add
pop
rcrl
ljmp
mov
sar
call
add
daa
insl
fwait
aam
push
jge
pop
add
mov
sahf
mov
or
rolb
ja
jns
push
jno
xchg
and
sub
inc
sbb
imul
sbbb
cmp
cmp
les
xchg
xchg
jecxz
push
dec
mov
and
and
stos
or
rcrb
movsl
xchg
fisubrs
test
fwait
adc
push
xor
pop
mov
bound
roll
and
inc
mov
mov
mov
fs
fs
lds
fwait
cmp
mov
inc
mov
push
adc
iret
add
xchg
push
jp
addr16
out
mov
faddl
and
mov
mov
ljmp
dec
or
pop
add
out
ror
fmulp
rcrl
cmp
mov
push
fldl
push
movl
sub
stos
pop
ss
and
cwtl
lcall
xor
scas
xor
leave
and
adc
insb
test
rorl
pop
add
adc
outsb
fidivrs
rorb
xchg
adcl
andl
out
rorl
es
das
rcrl
mov
xchg
jp
add
jnp
mov
loop
dec
cmp
mov
jno
movsl
lds
gs
or
mov
leave
adc
pop
popf
sub
jb
sbb
shlb
adc
ret
fisubs
cmp
adc
subl
jge
repz
push
test
les
mov
pop
insl
or
addr16
sbb
aad
dec
sbb
sahf
mov
or
mov
outsl
in
sbb
inc
sahf
aaa
push
flds
adc
movsl
adc
jns
loope
or
sub
lods
add
incl
andl
pop
test
push
fidivrs
lret
les
cmp
cmp
stc
hlt
lahf
or
jnp
add
xchg
jle
cpuid
shlb
shl
dec
push
push
hlt
pushf
add
inc
repnz
out
pusha
and
xchg
fmuls
add
out
pop
mov
inc
pop
sbbl
mov
xor
ret
inc
mov
es
cmpsl
call
mov
sbb
sti
fwait
dec
sub
dec
data16
loope
jo
cltd
in
jg
loop
xchg
mov
cltd
mov
or
xor
xorl
push
adc
push
fstpl
ss
lds
sbb
cs
aaa
mov
int3
ret
fdivrs
aad
lret
ds
push
cmpsl
ret
nop
inc
or
mov
sbbl
xor
loop
mov
repz
xchg
xor
ja
xchg
rolb
or
jo
mov
out
pop
lcall
arpl
push
out
cli
neg
lret
mov
push
aaa
fwait
arpl
inc
movl
in
int
jge
insl
pop
and
or
outsb
scas
jns
mov
sbb
inc
mov
sbb
js
and
test
loope
imul
pop
jg
sbb
rol
shrl
inc
jecxz
adc
cltd
gs
adc
lcall
mov
pop
mov
add
jg
jecxz
fidivrl
cltd
icebp
xchg
mov
and
out
pop
jmp
inc
sbb
inc
lock
dec
pop
mov
popf
jnp
dec
cmp
hlt
inc
pop
clc
loopne
or
cmp
and
inc
mov
out
loopne
jecxz
jmp
sub
shrb
push
pop
jbe
cmp
xchg
aaa
out
sbb
dec
sub
fcmovu
jo
outsl
ror
xor
xchg
mov
xchg
daa
jae
jl
pop
mov
popa
jbe
jge
insl
pusha
dec
dec
pop
je
xchg
jl
and
or
ffreep
sarb
add
js
push
mov
ret
clc
nop
adc
jb
sahf
xor
mov
add
repz
sub
stc
mov
sbb
or
ja
roll
cmp
pop
xchg
jns
adc
mov
mov
les
add
je
add
jecxz
fnstsw
mov
pop
mov
testb
mov
adc
push
push
mov
jae
mov
xchg
test
int3
cmp
clc
fs
xchg
and
sub
ljmp
lahf
mov
sbb
and
movsb
pop
sub
stos
scas
add
dec
nop
push
test
sbb
loop
xor
aas
inc
das
je
adc
repz
fnop
sub
loopne
out
cmpsl
test
data16
out
jo
inc
mov
dec
adcl
loop
xor
push
push
int
jg
push
dec
xor
pop
mov
int
mov
and
cmp
and
cmp
jp
out
pusha
inc
mov
pop
jo
je
scas
dec
cli
ds
xlat
movsl
repz
dec
inc
sub
xchg
insb
push
cmp
dec
push
mov
addr16
cmp
push
pop
fmull
adc
test
je
dec
cltd
mov
aad
inc
push
out
push
rcrb
stos
roll
clc
push
hlt
stc
add
xchg
inc
mov
std
or
push
jge
xlat
cltd
add
daa
mov
testl
testb
aas
mov
out
push
or
lahf
push
cmp
lahf
pop
adc
inc
jae
loopne
shll
lds
out
dec
xchg
add
cmpsb
bndldx
mov
test
pop
add
stos
test
scas
int3
roll
sbb
stos
dec
jge
daa
jg
cmp
mov
outsl
pop
jge
lods
xchg
pop
sbb
sub
xor
mov
outsb
push
call
sbb
das
cltd
pop
xchg
lea
test
adc
jecxz
daa
or
dec
das
je
pop
xchg
sbb
jae
and
cmp
mov
pop
scas
cld
outsl
xchg
push
in
adc
aad
pop
dec
cmp
add
add
fisubrl
or
adc
and
pop
outsb
jae
jmp
or
push
sub
xchg
notl
clc
push
stos
out
and
lcall
cs
cmc
dec
cmp
gs
jge
sarl
in
xor
lea
sub
sub
std
test
mov
jmp
lret
add
sbbl
add
add
mov
js
aas
pop
xchg
cmp
inc
imul
push
je
mov
int
mov
inc
jne
add
shll
xchg
ljmp
pop
mov
jo
jno
scas
stos
inc
inc
push
fcoml
sbb
aas
adc
sub
dec
sub
push
sbb
push
xchg
filds
cwtl
loopne
adc
xchg
into
and
daa
add
xlat
int3
lds
cmp
hlt
lret
rcrl
and
out
insb
out
inc
leave
pusha
test
pop
loopne
pusha
clc
imul
xor
enter
mov
popa
push
mov
sbb
and
fidivs
push
outsb
push
pop
sahf
mov
pop
jb
adc
pop
xchg
lret
push
xor
orb
addr16
pusha
pop
ds
push
sbb
iret
mov
cli
pop
int3
or
lcall
sti
xchg
xor
rorb
or
add
rcrl
xchg
xchg
inc
add
test
fsubs
fstpl
lahf
ret
jmp
inc
pop
mov
lea
mov
jmp
cmp
or
add
mov
scas
or
jb
xlat
jg
pop
push
int
stc
iret
out
daa
or
cmp
pop
repz
out
fmuls
or
roll
cmpsb
out
test
push
hlt
outsl
add
mov
sub
fiadds
nop
and
cmc
icebp
out
sbb
rcrb
icebp
jle
jp
lahf
jmp
jp
mov
sub
dec
push
inc
arpl
sub
mov
xchg
mov
sbb
aam
loop
in
into
sarb
addr16
fnsave
push
shlb
pop
sti
fstpl
out
mov
out
ljmp
jbe
inc
in
xchg
mov
jp
jle
dec
dec
shlb
xchg
mov
in
mov
xchg
out
aaa
int3
popf
incl
jp
imul
dec
inc
mov
data16
mov
lods
sub
jo
cli
pop
hlt
push
add
aaa
loopne
repnz
mov
inc
loop
jb
lods
int
adc
mov
sbb
and
push
mov
xchg
xorl
xchg
clc
mov
fldt
loopne
sbb
inc
dec
jmp
or
xchg
lods
leave
aaa
and
push
idivb
dec
xor
arpl
test
jecxz
daa
insl
mov
fmull
xor
ds
xchg
mov
cmp
cld
or
xchg
sbb
sub
and
in
pop
xlat
pop
adc
pop
adc
sub
movsb
mov
pop
sub
pop
sub
test
jl
adcl
or
sub
sub
jns
xor
into
outsl
fadd
in
add
xor
add
lea
xor
ret
push
int3
pop
jle
inc
or
sub
adc
mov
scas
jb
shlb
jle
jmp
loope
out
btc
int3
jle
outsb
mov
xchg
out
add
cmpsb
pop
insl
mov
cmp
fldcw
stc
adc
and
cltd
add
lods
adc
push
cmpsl
ja
in
xor
cmpsb
inc
push
loop
inc
std
sarb
ss
pop
imul
out
arpl
jl
icebp
cmp
adc
mov
out
scas
aas
xor
mov
pop
mov
out
lea
rcrb
mov
aam
push
outsl
lds
pushf
or
fs
ds
pop
insl
fcomps
fstl
daa
in
pop
mov
dec
mov
test
movsb
ljmp
stos
in
stc
mov
cld
push
jbe
xchg
xchg
cmpsl
je
outsb
pop
in
xchg
mov
addl
pop
inc
lds
jge
sbb
cltd
xor
scas
pop
divl
call
ja
xor
sbb
and
jno
mov
fildl
mov
mov
movsb
mov
pop
adc
mov
movsb
sbb
mov
test
pop
fstl
add
iret
push
daa
mov
outsb
lahf
in
mov
push
cmp
gs
lret
mov
das
xchg
or
cli
repnz
push
arpl
cmp
push
dec
ret
nop
ret
addr16
adc
cltd
cmp
shll
add
call
adc
mulb
xor
loop
scas
fcoml
jnp
push
adc
ljmp
movsl
shrb
repnz
ds
into
pop
movsb
or
leave
jecxz
je
lods
std
sti
fmuls
add
out
rcll
add
nop
push
mov
aas
loopne
sbb
fsubr
xor
ja
inc
and
cltd
mov
arpl
sbb
in
ret
pop
loopne
shlb
movsl
dec
lcall
mov
cmpsl
stc
fbstp
enter
insb
bound
push
push
aad
cmovbe
pop
jno
ja
loopne
mov
mov
sub
fs
je
aaa
movsl
shll
dec
mov
popf
es
cmp
repnz
aaa
or
fsincos
mov
adc
mov
movsb
movb
in
cmc
pop
push
pop
sbb
incl
sub
and
daa
sahf
fldt
stc
ljmp
pushf
lds
mov
pop
adc
in
and
sahf
and
ss
out
inc
andb
std
jmp
dec
xchg
subl
cltd
ret
idivb
cmp
ljmp
fidivs
cmp
inc
stos
jns
mov
and
sub
das
rcrl
into
stos
sub
pop
arpl
and
xchg
daa
movsb
sti
mov
in
pushf
inc
jb
gs
int
xchg
cmpsl
xor
jp
pop
sub
inc
sub
pushf
and
lret
shlb
push
or
or
inc
jg
add
mov
arpl
lods
in
adc
mov
push
data16
test
sub
fs
jge
xchg
jne
add
or
mov
in
pop
jmp
jp
scas
dec
sti
jg
cwtl
aam
inc
arpl
incb
or
out
lcall
rol
jnp
inc
aas
cmc
in
scas
and
sbb
faddl
mov
add
mov
push
push
movsb
fs
test
fwait
push
das
adc
mov
xor
jae
mov
xchg
jae
test
loopne,pn
ret
cwtl
js
and
cld
in
iret
ret
jb
arpl
cmc
test
and
lahf
inc
mov
sub
cli
popa
mov
in
mov
cmpsb
insb
pop
inc
mov
dec
cs
test
xchg
sti
mov
test
dec
pop
pop
sub
das
sbb
cltd
and
fisttpl
jbe
repnz
mov
xor
testb
data16
mov
loop
add
jbe
popf
mov
call
fwait
mov
dec
aam
jne
cmp
inc
add
and
or
push
jp
hlt
clc
fstps
mov
outsl
lods
rorl
sar
mov
dec
out
mov
sbb
cli
push
xchg
inc
pushf
js
inc
gs
mov
cs
lcall
test
int3
inc
mov
jnp
mov
ljmp
stos
adc
xchg
sbb
and
test
xorb
shll
fisubrs
test
inc
xor
or
mov
leave
ds
jnp
repnz
mov
mov
hlt
sub
push
int3
stos
jge
jbe
jbe
cmp
gs
inc
pop
jmp
xor
push
in
mov
mov
push
rcll
adc
imul
fwait
inc
rol
mov
iret
mov
out
out
mov
fsubs
test
lret
bound
jl
mov
dec
jmp
icebp
add
imul
xor
dec
rorb
inc
daa
rclb
sbb
dec
push
sbb
mov
rcrb
mov
test
lds
mov
jne
pop
popa
fisubl
fsts
imul
adc
adc
insb
pop
subb
xor
lcall
and
inc
outsl
xor
mov
adc
add
aad
lods
xlat
mov
je
add
iret
xchg
in
sbb
adc
add
lock
pop
sub
pop
dec
clc
les
stos
pop
lahf
jo
fisubl
pop
mov
sbb
les
xchg
push
int3
movsl
jg
ss
sarl
cmovae
push
sub
xchg
shr
mov
or
xchg
mov
test
push
push
cmp
inc
pop
xor
addb
pop
sbb
pop
insb
aam
cmp
cs
xlat
scas
fwait
adc
dec
mov
mov
stos
clc
aad
sub
xlat
inc
push
push
ss
adcb
mov
xor
ss
jle
ucomiss
push
jb
popf
loop
mov
out
or
xchg
push
out
adc
popf
dec
sub
mov
push
xchg
jmp
adc
int
shll
xchg
mov
test
xchg
mov
sbb
add
test
cmpsb
insl
movsl
cmpsb
inc
add
outsb
mov
inc
jnp
outsb
sar
cmp
enter
add
aad
push
sbb
cmp
mov
sub
shlb
push
mov
mov
pop
cmp
add
cltd
sahf
xchg
mov
bound
in
xlat
repz
mov
iret
test
xchg
and
aad
addl
inc
pop
add
leave
jle
cmpsb
inc
and
ss
cmp
les
adc
cli
andb
pop
mov
mov
fidivrl
aas
inc
adc
inc
adc
inc
add
jns
leave
jg
inc
sbb
sub
adc
lcall
sbb
shlb
flds
pop
jbe
jge
sbb
and
push
cmpsb
mov
or
rcrb
sbb
in
inc
mov
inc
adc
leave
cmc
sbb
adc
pushl
and
fbstp
fistl
push
sti
mov
bound
cmp
out
ss
or
aam
add
inc
and
or
loop
jne
push
fnstcw
mov
das
add
bound
popf
mov
icebp
or
lock
arpl
insl
push
sbb
mov
jecxz
mov
mov
push
aam
jmp
loop
subb
loope
into
test
test
jo
test
dec
les
mov
mov
addb
icebp
in
sub
test
fildll
popf
sbb
cmp
push
xor
fmul
add
out
mov
sub
mov
jl
mov
shl
lahf
push
mov
pop
aas
push
sub
mov
cmp
xacquire
dec
orb
test
jae
stc
in
dec
int3
lods
dec
cli
jno
rol
sti
dec
lods
rol
sarb
sbb
in
or
lds
mov
sbb
xor
jnp
movsb
mov
jae
test
mov
cmc
cwtl
pop
xchg
jecxz
int
dec
addr16
in
into
mov
mov
mov
or
pushf
in
aad
leave
in
xchg
and
jb
pop
in
aas
sub
int
aas
test
cltd
nop
pop
mov
xor
daa
jo
lods
shrb
fs
mov
and
shr
dec
dec
in
push
lret
je
pop
and
arpl
aas
in
stc
loope
mov
mov
jb
xchg
fsubr
mov
mov
ss
inc
hlt
mulb
arpl
dec
lahf
fwait
jno
rcrb
das
xor
ret
add
rcr
sub
push
jecxz
or
clc
adc
sarb
enter
dec
xchg
lret
push
jne
xchg
aaa
and
outsb
adc
adc
push
cmp
rol
aad
imull
in
pop
mov
xor
pop
xor
dec
mov
int3
pop
incl
add
loope
mov
sti
xor
popf
cwtl
push
movntq
insb
cmpsb
int3
lret
test
cmp
addb
loopne
repz
jle
fstpt
xor
sbbl
mov
xacquire
insl
enter
xchg
fsubr
daa
cmp
fxch
pop
xchg
push
lea
mov
lcall
ja
aad
push
xor
dec
mov
jl
subl
dec
lahf
outsb
push
mov
popa
mov
sub
pop
scas
xchg
orb
mov
inc
call
imul
mov
add
mov
mov
push
sub
popa
aam
negl
mov
inc
or
in
inc
sbb
mov
mov
insl
push
lret
mov
fdivl
fstps
hlt
clc
aam
sbb
jae
mov
push
ja
lcall
iret
dec
mov
add
mov
sub
arpl
or
push
jae
jnp
stc
mov
fsubr
std
sbb
mov
in
add
dec
sbb
arpl
jle
cwtl
andl
sbb
mov
bound
dec
jns
xchg
adc
aaa
jo
stos
fdiv
add
pop
repnz
inc
push
mov
int3
mov
inc
xor
out
in
xor
push
and
data16
cmp
add
add
inc
push
std
ljmp
lret
sbb
movsl
in
push
in
xchg
aaa
gs
arpl
push
ljmp
jle
xor
mov
subb
idivl
ficoml
or
push
shrb
push
fcomps
sbb
adc
fimull
jns
adc
daa
leave
adc
roll
mov
pop
cmpsb
ja
lahf
xor
adc
hlt
jno
pop
lea
mov
adc
adc
jmp
rcrb
xor
int
adc
das
adc
mov
and
jns
fbld
repz
sbb
adc
push
call
in
jbe
xchg
das
int3
pushf
dec
leave
cmp
ss
mov
scas
fwait
lcall
mov
loop
ret
imul
cmp
imul
adc
jne
addr16
enter
testb
dec
or
movsl
jp
cmc
lods
xchg
das
jl
mov
out
jl
mov
cli
data16
test
test
inc
outsl
jnp
sbb
push
stos
push
fwait
xchg
xor
and
sub
mov
data16
jns
cmp
xchg
dec
call
sub
in
sarl
shl
fldcw
push
jae
cmp
aaa
dec
popa
fldt
inc
xor
imul
ja
sbb
push
dec
psllq
sub
scas
mov
inc
xor
cli
fs
cmp
add
sub
mov
ds
inc
jmp
into
aad
ret
popa
inc
lods
insb
jno
lds
das
cmp
imul
lcall
stos
pop
test
mov
and
mov
shl
xor
clc
add
dec
inc
out
mov
aam
push
ficompl
fisttps
push
fimuls
cmp
fst
lahf
test
add
xor
ss
gs
push
xchg
rcrb
xchg
jge
push
jl
mov
cmp
hlt
push
mov
dec
cltd
stos
cli
lret
pop
sub
out
jae
and
out
lock
pop
sub
dec
xor
sbb
in
sbb
or
popa
push
or
gs
mov
xchg
jne
sbb
pop
pop
inc
and
mov
ss
xchg
xor
xor
icebp
mov
ljmp
ret
mov
dec
lock
mov
clc
xchg
popf
sbb
add
sub
lods
lcall
xor
popf
pop
test
xlat
jae
push
xchg
mov
data16
adc
in
cmp
pop
cmp
cmp
mov
ss
ret
repz
in
in
xchg
and
add
dec
fdivrl
out
gs
or
and
dec
xor
lret
out
and
aam
gs
xchg
mov
and
cmpsb
iret
xor
daa
cmc
mov
mov
xchg
arpl
movsb
xlat
out
in
jnp
testb
xlat
pusha
push
sbb
insb
imul
mov
repz
push
outsb
push
xor
std
movsl
test
mov
lret
popa
out
bound
ficoms
dec
js
stos
icebp
lock
mulb
iret
testb
xchg
fidivs
nop
subb
or
call
jb
dec
es
insb
faddl
xchg
shrl
testb
or
les
div
adc
das
in
adcl
lcall
inc
movsl
int
cmp
jo
es
push
and
and
mov
and
adc
mov
dec
cmpsb
mov
loopne
in
pop
bound
inc
test
jg
push
enter
adc
adc
xlat
pop
dec
sbbb
xchg
aas
xchg
gs
pop
dec
or
mov
jmp
jne
pop
sahf
push
sbb
pop
lds
rclb
mov
inc
jb
daa
aas
pushf
data16
bound
lods
dec
add
sbb
push
sub
push
jge
pop
sti
sti
mov
xor
frstor
pop
aas
push
mov
into
lds
negb
shlb
lds
test
jno
sbb
addr16
movhlps
orb
dec
adc
movsl
in
lret
test
rorb
or
pop
aas
int
clc
dec
aam
enter
and
or
mov
xor
lods
aad
jg
dec
loop
mulb
sub
add
cmp
cli
lret
fmuls
cmp
inc
push
add
xchg
test
pop
into
sbb
pop
inc
mov
jnp
and
ss
and
inc
sub
cmp
repnz
adc
iret
cmp
dec
jnp
sbb
cmc
pop
push
pop
push
jbe
js
leave
push
lods
xor
lock
fbstp
orl
cli
lcall
jg
pop
subl
sahf
add
mov
fcomps
sbb
pop
push
mov
mov
pop
sub
in
or
mov
cmpsb
lcall
scas
pop
xchg
sub
jecxz
pop
insb
adc
mov
xchg
paddw
das
lds
mov
ja
add
pop
jge
adc
adc
xor
js
enter
adc
inc
inc
es
fidivs
inc
std
insb
add
xlat
mov
xchg
lock
cmp
mov
jl
int3
inc
outsb
out
call
scas
cmp
mov
stc
xchg
xchg
lods
ljmp
ss
jne
inc
test
movsl
sub
jle
lcall
xor
dec
and
xlat
movsb
mov
push
xorb
fdiv
sbb
notb
fisubrl
std
loopne
lret
jb
pop
imul
xor
adc
jne
stos
addb
pusha
inc
cmp
notb
cmp
pop
rclb
jge
xchg
jecxz
sub
xchg
dec
push
loopne
rcrb
dec
inc
push
mov
push
sbb
pop
enter
icebp
xlat
sub
push
jge
cli
add
xchg
js
ds
mov
xchg
test
push
stc
pop
fisubrs
fdivr
pop
xchg
push
mov
sahf
sti
nop
cltd
testl
test
int
int
jb
daa
mov
rolb
and
lret
sub
stos
jmp
aam
pushf
iret
pop
push
stc
cmp
outsl
aas
push
cmp
cs
mov
push
jo
pushf
adc
inc
rcll
int
mov
icebp
shlb
cs
bound
sti
sub
xor
sbb
cmp
jns
dec
jg
mov
xor
sub
push
and
pop
fistps
nop
jo
mov
rcrl
sub
into
call
mov
sarb
pop
mov
dec
dec
or
adc
pop
push
cwtl
xor
aaa
push
adc
mov
mov
jmp
pusha
nop
cmpsl
push
out
orb
sarl
xchg
imul
nop
inc
pushl
lret
lret
addr16
repnz
rolb
push
nop
push
add
cwtl
xlat
enter
aas
adc
idivl
push
outsb
xor
add
movsl
pop
dec
cs
pop
or
lret
fwait
enter
pop
push
mov
icebp
lss
pop
xchg
mov
pop
mov
sbb
shrl
jnp
cld
adc
stos
out
mov
shll
push
clc
and
inc
pop
pop
loopne
fmull
xchg
nop
inc
sbb
es
mov
cmc
pop
popf
mov
pop
xlat
push
outsb
das
push
push
pop
repnz
mov
cmp
adc
outsl
add
cmp
sub
lods
mov
mov
inc
dec
hlt
fsubr
pop
enter
test
jmp
loop
cs
lret
mov
into
or
add
out
imul
dec
movsl
test
repz
dec
stos
xchg
add
and
sbb
inc
das
push
pop
dec
add
je
add
lea
xchg
mov
imul
push
das
xchg
mov
push
fwait
mov
mov
and
mov
lcall
into
ret
mov
test
cli
add
pop
mov
es
lock
int
pop
jns
movsb
sbb
call
dec
faddl
xchg
jno
dec
hlt
xchg
jbe
pop
mov
adc
ret
jl
imul
pop
cld
loopne
inc
push
sub
cmc
mov
mov
sub
sub
xchg
loope
ficoms
rorl
mov
rcrl
clc
jns
mov
cltd
cmp
lock
mov
cmp
sbb
cltd
movsb
mov
xchg
dec
xlat
subl
or
cli
add
and
repz
sbb
mov
fstps
repnz
cltd
xor
shrl
push
jae
add
incl
jp
inc
loope
mov
mov
in
xor
out
jae
push
jb
pushw
loopne
jns
lret
mov
cmp
mov
movsl
pop
bound
cmp
fwait
cwtl
inc
repnz
fadds
inc
xchg
push
mov
je
cli
xchg
movzbl
outsb
add
and
sti
orb
movsl
stc
or
add
incl
mov
inc
mov
jecxz
fists
mov
ret
cmp
add
mov
mov
inc
sbb
jo
aam
ret
sub
jl
push
inc
mov
das
mov
std
dec
leave
jnp
jmp
testb
inc
fdivrl
xchg
cmp
aaa
outsb
lods
xor
ret
and
push
add
mov
sbb
adc
lahf
cmpsb
push
adc
aaa
dec
les
pop
mov
test
mov
movsl
gs
cld
lock
push
add
adc
push
inc
jl
inc
and
pusha
mov
mov
loop
cmpsl
jae
adc
and
test
jp
pop
call
addb
or
dec
fcoms
fimull
xchg
or
adc
and
jg
mov
ret
push
add
sbb
xor
popa
push
std
cmp
or
out
cmp
sbb
jnp
lret
xchg
dec
mov
rolb
insl
jmp
imul
popf
inc
dec
pusha
adc
loopne
in
popa
lcall
push
mov
lcall
and
push
fsubp
cmp
mov
in
adc
sbb
sarb
pop
addl
dec
and
xchg
and
out
std
pop
sbb
sar
cmpsb
out
xchg
pop
lahf
pop
mov
push
fisubs
push
into
gs
insl
xor
jno
xor
mov
inc
ja
lods
dec
sub
adc
pop
ror
dec
insl
call
push
sti
sub
adc
call
enter
fnstcw
jne
xor
cmpsb
xchg
sbb
test
loope
sub
jp
xorl
insl
lahf
out
mov
loopne
xor
pop
mov
mov
dec
pop
pop
push
xchg
jns
lret
jp
lock
pop
ror
sub
lret
mov
cmp
jns
xor
sbbb
aad
test
into
call
fcomi
mov
sub
pop
xchg
pop
cmp
push
aaa
pop
pop
arpl
stos
adc
dec
sbb
or
repz
mov
mov
int3
icebp
int3
ret
scas
inc
xor
idivb
push
sbb
pop
popf
xor
jno
xchg
lcall
jecxz
jle
jns
cmp
ss
shr
leave
mov
xchg
mov
push
push
mov
dec
dec
test
ret
inc
mov
loop
daa
cmp
testl
pop
jae
dec
inc
dec
repz
aad
jp
shlb
cmp
lahf
aaa
inc
and
mov
push
cmpsb
xchg
push
inc
mov
sbb
arpl
cld
or
push
test
push
stos
insl
push
add
inc
xchg
xchg
int
sub
stos
in
arpl
and
sub
dec
add
loop
mov
dec
mov
out
lcall
inc
mov
adc
ja
jno
rcl
xchg
lock
pop
outsb
lahf
test
icebp
popf
fisttpll
test
lcall
sbb
mov
stos
fwait
or
jnp
jb
fstcw
popf
in
icebp
pushf
mov
pop
clc
and
aas
stc
and
jne
dec
jle
and
aas
les
mov
into
mov
mov
mov
std
mov
dec
or
push
cli
imul
sbbl
clc
ret
mov
add
jnp
jb
or
cmpsb
jb
sbb
shrb
mov
sub
call
mov
dec
push
jecxz
add
push
cmc
push
mov
subl
hlt
es
cmc
stos
inc
push
sub
dec
add
jl
in
mov
out
cmp
shll
sahf
xchg
push
xor
insl
xor
addr16
mov
xor
leave
and
inc
adc
cmp
loop
xor
in
jnp
cmp
push
inc
jo
jo
fst
xchg
in
mov
sbb
sti
outsl
push
jno
lds
cmp
push
push
jbe
outsl
xor
push
mulb
les
pusha
push
loopne
add
jp
mov
das
dec
lahf
pop
into
enter
jns
xlat
mov
mov
jb
mov
mov
and
cmpsb
ljmp
add
push
jmp
adc
lahf
test
repnz
mov
cs
mov
enter
mov
and
mov
adc
xchg
test
mov
jnp
cmp
adc
jle
xchg
repz
inc
jecxz
inc
mov
xor
pop
inc
mov
decb
add
push
imul
lret
xor
push
mov
sbb
mov
push
out
test
mov
add
call
and
and
jp
enter
add
pop
pop
add
cmp
pop
mov
hlt
push
rcrl
inc
jmp
leave
faddl
adc
mov
mov
stos
shlb
movsl
sub
push
in
cmp
imul
mov
sahf
add
mov
inc
test
add
xchg
fistps
lahf
or
jl
inc
inc
cmp
rcl
rorl
clc
jo
sarb
or
jg
lods
dec
push
push
add
pop
push
jge
getsec
inc
out
xchg
mov
movsb
in
sbbl
pop
dec
lea
shll
mov
adc
push
cmp
cmp
xchg
jmp
cld
dec
mov
or
aad
ljmp
push
jmp
shlb
ret
add
pop
inc
cmp
mov
ds
jl
xchg
adc
outsb
enter
sti
icebp
sub
and
jle
mov
ds
mull
and
jle
inc
adc
mov
pop
out
adc
daa
addb
fildll
inc
test
xor
adc
cmp
test
movsl
sub
and
ficompl
sbb
inc
jmp
inc
loopne
cmpl
and
and
mov
loop
outsb
movsl
jp
mov
mov
mov
pop
jle
arpl
clc
mov
push
pusha
notl
cmpl
out
or
mov
and
mov
enter
pushf
sub
push
lret
fldenv
push
rclb
mov
adc
pop
add
mov
dec
iret
pop
push
mov
jne
int3
roll
gs
push
lret
cmp
lea
lods
ror
lock
push
push
inc
addr16
or
mov
test
ds
pushf
mov
imul
push
outsb
pop
cmp
roll
sbb
sbbl
je
je
inc
cmpsl
adc
sbb
sbb
movsb
add
mov
push
pop
jo
iret
push
test
and
or
fs
dec
std
jae
and
enter
dec
out
jns
lods
popf
lds
imul
in
push
rorb
test
mov
mov
cli
jg
xlat
imul
inc
movsb
fiaddl
sbb
stos
rcl
sub
test
dec
push
inc
mov
int
and
or
das
adc
inc
xchg
and
or
lock
jp
imul
mov
gs
int3
dec
pop
movsb
cltd
sub
lret
ljmp
lock
mov
mov
jge
negb
lock
out
arpl
out
lret
insl
mov
std
imul
xor
call
sbb
and
insb
jno
das
sub
ss
push
mov
push
pop
or
mov
incb
sub
push
mov
cltd
stos
fisttpll
mov
xchg
dec
push
std
inc
stos
cmpsl
mov
xchg
shlb
shll
in
js
cmc
in
mov
out
rolb
and
roll
mov
inc
or
popl
mov
jp
add
ds
imul
mov
mov
lock
in
xor
outsl
push
and
adc
int
cs
xchg
inc
and
xchg
test
xor
cmp
sub
fcomps
pop
xor
aam
mov
lods
jns
jb
ljmp
sub
and
cli
and
xlat
jne
lods
dec
mov
fidivs
add
stos
cli
cmp
sbb
xchg
vmovd
in
and
add
in
mov
push
mov
mov
push
jnp
xchg
mov
lret
push
mov
call
push
jmp
add
data16
lcall
push
pushf
insb
fadds
stc
xor
movsl
mov
subb
mov
arpl
adc
add
loope
imul
ss
jle
push
or
fcmovb
mov
mov
ss
lds
test
push
mov
int3
pusha
xchg
dec
push
push
xor
add
push
incl
ds
int
inc
mov
lea
inc
add
sbbl
jge
clc
push
jbe
lcall
pusha
iret
sub
or
jns
and
xor
outsl
cmp
shrb
cmp
adc
decb
clc
jns
sarl
sub
lock
add
push
ja
fstps
or
dec
inc
dec
imul
and
pop
lcall
das
add
cmp
sub
mov
xlat
mov
or
dec
inc
ror
xchg
inc
ja
int
push
pop
mov
mov
jg
dec
push
mov
jg
jg
sub
jae
inc
pop
outsl
int
jbe
add
sub
cwtl
xlat
ja
out
inc
cmpsb
pop
sbb
mov
pop
mov
pop
out
lahf
bound
sub
mov
dec
mov
jg
loope
enter
xchg
stos
xor
jmp
aaa
and
aam
adc
ljmp
sub
popa
jmp
outsb
mov
fs
addps
js
mov
jle
cld
xor
stos
cmpl
xchg
and
jne
outsl
inc
jns
loope
scas
scas
out
lods
rcr
push
push
jmp
and
ja
lea
adc
jns
addl
xorl
dec
iret
pop
test
and
shlb
adc
jne
sbb
push
cltd
xlat
mov
in
sbb
in
dec
enter
dec
mov
jne
xchg
inc
mov
inc
cmp
lret
subl
lods
dec
ss
xchg
push
mov
orb
dec
xchg
push
fwait
popa
lret
add
dec
add
sbb
cld
jp
aad
jno
int
in
mov
dec
das
inc
cmp
pop
in
shll
xor
xchg
mov
push
pop
dec
scas
out
cmc
lods
or
divb
dec
into
mov
out
fcomps
pop
dec
inc
sbb
bound
aaa
mov
add
lahf
xchg
push
movsb
add
mov
fsubr
inc
or
dec
loopne
es
dec
xchg
dec
pop
clc
mov
and
xchg
dec
jmp
pop
test
jl
pop
mov
sbb
repz
cli
pop
addr16
jbe
ret
mov
sbb
mov
addr16
or
data16
pop
lea
dec
ljmp
into
or
iret
lcall
movsl
orb
xlat
inc
stos
std
cwtl
push
lret
in
add
pushf
cmp
fsubr
mov
movsb
or
mov
imul
daa
jno
cmpsb
pop
pop
loop
xor
mov
jle
push
or
xchg
mov
cmp
fstpl
jle
hlt
fdivrs
sbb
add
pop
insl
aaa
pushf
gs
out
lahf
dec
cwtl
inc
imul
rorl
lahf
push
jg
adc
rorb
mov
sub
jge
or
lcall
pop
pop
sbb
pop
or
imul
dec
push
ja
push
sub
pop
in
in
stos
mov
fmulp
rolb
cmp
cli
jae
mov
ljmp
sub
xor
xor
xchg
inc
rcrb
mov
sub
or
loope
ficoms
loopne
vmwrite
data16
jno
cmpsb
cmp
nop
pushf
dec
and
push
inc
dec
stos
or
scas
sbb
dec
repz
jge
test
xor
jg
and
leave
paddusw
cmp
int
dec
enter
cmp
mov
xchg
leave
inc
out
ss
dec
loopne
push
or
sub
sti
rcll
push
mov
sbb
popa
cmpsb
pop
cmp
add
incb
push
scas
lea
mov
subl
cwtl
push
ss
fdivs
dec
icebp
fstps
mov
fs
cmp
rcll
lock
fwait
test
int
push
dec
and
cs
pause
fildl
mov
and
xor
mov
mov
mov
sbb
sbb
sbb
popa
rolb
push
mov
mov
sub
cli
cmpsl
and
les
pop
leave
jp
mov
frstor
loope
inc
pop
lea
cmp
jmp
fwait
dec
aaa
es
jp
cld
lea
jmp
pop
lcall
popf
sub
leave
iret
push
clc
mov
pop
push
mov
aam
lret
std
mov
and
movsb
out
aad
in
faddl
icebp
xor
aam
sub
insl
fisubs
shll
jo
push
mov
cwtl
or
sub
add
jbe
mov
mov
loopne
mov
dec
jp
dec
test
add
xor
and
mov
push
xchg
pop
lds
mov
repnz
xchg
cmp
insl
and
and
push
cmp
into
mov
cmp
jle
insl
push
jae
fiaddl
push
cmc
outsl
test
hlt
testb
mov
mov
xchg
xchg
out
mov
add
mov
outsb
mov
rcll
jge
mov
fisttps
push
mov
cltd
sbb
push
stos
dec
lods
into
xorl
lods
dec
xor
sbb
adcb
shrl
and
mov
push
shr
xchg
pop
mov
mov
sbb
fwait
mov
out
sbb
fwait
in
roll
ret
mov
rcr
into
xor
mov
mov
and
mov
repz
movsb
adc
jecxz
daa
pop
insw
rorb
jae
sub
xchg
pop
mov
cmp
add
mov
repnz
lea
ljmp
inc
or
std
fmull
out
sbbl
mov
rcll
leave
adc
mov
mov
dec
cmp
sub
cmp
mov
test
mov
sti
das
jbe
mov
in
cmp
rclb
jge
adc
or
pop
pop
xor
fsubs
outsl
fdivrs
and
sub
filds
fimull
in
add
inc
xor
adc
add
in
pop
js
xchg
cltd
jl
je
mov
cli
stc
gs
pusha
push
lahf
out
idivl
pop
movsl
pushl
andl
xchg
ret
mov
push
mov
jb
xchg
push
outsb
or
cmpsb
xor
fnstcw
sub
or
xchg
push
xchg
cmp
sub
adc
scas
dec
imul
push
icebp
pop
jnp
aaa
sbb
repz
cmp
and
gs
fwait
adc
aas
xor
inc
arpl
nop
dec
lods
rcrl
pop
sahf
jge
dec
xchg
push
dec
cmpsb
ss
and
ficoms
jns
jecxz
mov
cld
mov
pop
es
lret
outsb
les
and
cmp
mov
or
loop
push
cmp
pop
pop
enter
xcrypt-ecb
cmpsl
leave
cmp
out
jnp
lock
sub
cmp
xchg
or
ss
cmp
lods
test
xchg
lahf
mov
lods
and
stos
out
fadds
sbb
xor
xchg
adc
nop
pop
cmova
outsl
mov
inc
loope
nop
cli
enter
shlb
call
xor
filds
loopne
scas
call
clc
mov
inc
push
or
loopne
aam
nop
xchg
repnz
xor
rolb
mov
addr16
pop
mov
dec
inc
or
insb
push
cwtl
fucompp
push
bound
leave
jne
jecxz
jmp
add
lock
mov
sbb
cs
popa
mov
jle
in
hlt
mov
ror
lods
xchg
leave
lcall
imul
dec
insb
add
icebp
lcall
xchg
test
mov
mov
movsl
sub
icebp
ja
or
add
imul
mov
cmp
mov
or
stos
ds
fnstsw
int3
js
jmp
fwait
nop
cmp
call
fwait
js
pusha
and
adc
idivl
pop
in
stos
inc
stos
mov
mov
lods
lods
int3
pop
pushl
push
mov
mov
cli
out
and
pop
cmp
and
lret
xor
sarb
mov
in
dec
jns
icebp
add
pop
fsubrs
push
outsl
jb
xchg
mov
mov
insb
xchg
dec
and
js
bound
pop
aas
xchg
xlat
cwtl
je
sub
imul
inc
faddl
sbb
xchg
lds
ds
adc
mov
push
push
and
jo
leave
mov
xor
jge
and
ljmp
out
mov
inc
jne
shll
daa
movsl
inc
xchg
cltd
mov
inc
jl
jb
jmp
xchg
out
mov
adc
inc
push
out
mov
ds
imul
xor
and
cmp
imul
dec
scas
and
add
ret
jb
fisubl
call
call
mov
sbb
cli
insl
mov
fisttpll
cmpsl
ljmp
sub
stc
pusha
mov
pop
push
js
leave
js
rorb
test
and
add
gs
cs
test
fcomps
fldenv
adcb
xor
push
xor
out
hlt
arpl
push
lods
jge
jg
aam
stos
divl
mov
push
repz
movsb
mov
enter
xchg
insl
push
push
cmc
mov
and
subl
mov
aaa
dec
add
fdivs
rol
aas
imull
mov
adc
xchg
jge
mov
and
sbb
int
xor
mov
pop
bound
jmp
cmc
mov
data16
push
jp
in
in
fwait
jo
sbb
add
sub
dec
nop
sbb
inc
cmp
jg
repz
and
inc
data16
add
inc
pusha
xchg
es
subb
add
shrb
sbb
int3
repnz
sbb
jo
into
cmp
push
mov
mov
pop
mov
into
ficoms
mov
lret
pop
fisttpll
inc
add
rcrl
jo
in
bound
inc
orl
out
ljmp
inc
int
mov
sub
jmp
lahf
mov
mov
ret
lock
andl
loope
movsb
sbb
mov
xchg
ficoms
fidivrs
or
into
lcall
es
jo
les
fisubrl
scas
sahf
mov
xchg
and
popa
fsubl
mov
jbe
cmp
or
fs
jb
inc
xor
repz
fwait
lock
je
ljmp
jmp
mov
pop
jmp
les
and
subb
mov
mov
and
mov
arpl
jl
jne
jmp
pop
and
arpl
cmp
mov
mov
popa
ss
mov
shl
cmc
jmp
add
clc
loop
shufps
imul
sub
sbb
xchg
push
push
shll
insb
xchg
adcl
mov
fs
push
xchg
cmp
or
int3
add
pop
mov
mov
mov
add
xor
imul
inc
stc
mov
icebp
cmp
cmp
jmp
xor
idivl
and
cmp
and
out
xlat
and
adc
negl
push
inc
inc
xor
cmp
adc
push
cld
adc
orl
add
scas
mov
cmp
test
xabort
fisubl
cwtl
scas
ret
shr
mov
clc
mov
xor
mull
dec
add
into
into
lahf
dec
fsubs
jo
adc
insb
dec
movsb
jne
lock
dec
mov
cmp
fiadds
int
sbb
aas
pop
cs
dec
jl
push
dec
mov
mov
repz
sbb
shlb
mov
les
push
xor
lods
pop
cld
enter
cmpsl
jle
mov
roll
mov
push
pop
imul
or
stos
adcl
ss
into
jecxz
negb
sbb
jecxz
fwait
jns
sbb
adc
add
clc
pop
push
outsb
pop
adc
jge
cld
mov
jae
sbb
sub
addl
dec
mov
les
xchg
rclb
dec
gs
xchg
sbb
mov
orl
jg
ficoms
out
icebp
daa
xchg
push
aas
and
push
fdiv
in
movsl
xchg
and
mov
sbb
mov
and
mov
or
loopne
or
adc
mov
dec
inc
pop
push
cmp
xchg
add
bound
enter
push
stos
push
mov
sbb
out
add
mov
in
push
dec
push
dec
sbb
jo
sbb
pop
xor
outsl
pop
push
outsb
xor
jle
popa
int
dec
pop
int3
xchg
shr
arpl
jo
aam
and
or
mov
adcb
test
addl
test
lcall
push
subb
mov
mov
out
inc
mov
fdivs
scas
lahf
pusha
int3
into
insl
adc
pop
xor
aad
push
pop
or
test
cs
test
dec
push
and
pop
cmp
loope
fidivs
sbb
push
jo
jl
cmp
mov
inc
in
repz
mov
into
mov
pop
xor
jp
popa
imul
flds
loop
mov
sub
xor
cs
inc
pop
mov
cwtl
push
inc
pop
fs
inc
and
lcall
jnp
cmp
shll
dec
inc
jmp
mov
or
or
mov
inc
aas
in
fwait
loopne
xchg
pop
test
jnp
in
adc
sub
xchg
inc
sbb
les
in
jo
out
inc
ficoms
cld
xchg
or
add
stc
outsl
lcall
gs
push
and
cltd
and
mov
pop
sbb
xor
test
and
sbb
push
jae
test
push
xor
jg
gs
dec
loopne
sub
ror
and
cmp
inc
addb
and
addr16
or
xchg
stc
notl
fisubrs
jo
icebp
test
mov
fdivrs
daa
cmp
sbb
inc
leave
cmc
roll
iret
push
arpl
incb
mov
pushf
mov
stc
sub
aam
and
int3
or
sti
ret
ds
popa
stos
mov
push
ds
enter
xchg
addb
cmp
inc
pop
sub
ret
xchg
out
add
int3
xchg
and
dec
xlat
add
lahf
inc
mov
cwtl
out
repz
cld
jae
add
sbb
pop
out
arpl
adc
neg
out
cld
mov
imul
dec
and
inc
inc
jp
aam
add
popa
xor
pusha
pop
jns
sbbb
cmovge
jbe
sbb
aad
fnstcw
pusha
push
fsubrs
in
lret
enter
mov
xchg
add
sub
ja
sbb
pop
sbb
xchg
mov
out
push
mov
inc
push
loope
arpl
push
and
inc
or
cld
in
cmp
test
std
shrl
int3
adc
sbb
addr16
mov
mov
adc
movsb
lods
adc
mov
and
or
cmp
push
out
xchg
pop
cmpsl
sub
xor
or
outsb
sub
mov
mov
xor
roll
les
jns
enter
inc
push
fst
bound
push
jmp
ljmp
cli
inc
nop
cmp
mov
daa
ss
dec
jp
xor
ss
fmulp
and
mov
mov
lcall
shl
mull
stc
in
adc
stc
ja
lcall
xor
icebp
jp
lods
loope
and
out
xchg
jbe
adc
das
jbe,pn
push
mov
xor
mov
cwtl
inc
les
inc
inc
mov
gs
mov
inc
mov
cmp
or
fisubs
sbb
jecxz
adc
repnz
mov
fwait
jp
push
mov
add
ret
int
cmp
sub
jb
js
xchg
push
aad
pushf
das
in
sbb
push
xchg
push
adc
dec
movsl
addr16
incl
cmp
push
roll
inc
dec
std
pop
nop
mov
cmp
push
lods
push
test
pusha
cltd
jb
dec
js
outsl
add
or
in
je
pop
push
test
lea
or
or
imul
mov
lea
pop
xchg
pop
fdivrs
rclb
shlb
push
imul
or
mov
mov
xlat
outsb
lds
push
loope
sub
retw
sub
jb
xchg
sbbl
push
cmp
xchg
push
jb
sbb
lahf
das
inc
add
loope
sbb
lock
sarb
cmp
cmp
xorl
add
mov
rorb
push
adc
data16
xor
std
call
mov
mov
test
nop
dec
xor
out
sahf
xor
push
xchg
ja
rolb
mov
insl
cltd
add
fistpl
sub
dec
pop
push
das
xor
fldl
data16
or
cmpb
loop
dec
xchg
stos
pop
mov
xchg
mov
test
gs
outsb
mov
mov
in
ror
stc
jl
rclb
fisubrs
pop
aad
lret
xchg
jnp
hlt
gs
mov
add
mov
dec
mov
add
sbb
pushf
cmc
iret
add
sbb
push
push
icebp
jg
idiv
dec
cmpsb
rcrb
dec
arpl
mov
out
movsl
pop
and
mov
iret
lret
or
arpl
mov
pop
inc
lea
xchg
xchg
int3
xchg
repnz
jp
pop
cwtl
mov
or
arpl
das
push
in
add
jle
sub
push
mov
jne
jno
jmp
sbb
fisttpl
or
push
bound
out
xor
pop
fisttpll
inc
scas
and
xchg
icebp
rsqrtps
enter
cmp
and
dec
loop
push
mov
cld
cmp
rorl
ljmp
lcall
adc
ljmp
mov
cwtl
cmp
popa
cld
lds
cmp
add
inc
sub
add
cld
or
mov
sbb
cli
lods
jmp
outsb
jmp
add
fs
push
hlt
cs
in
daa
inc
xorl
into
pop
and
sbb
ret
sbb
daa
xchg
adc
std
scas
sti
pop
sbb
ror
mov
xor
call
in
mov
mov
sbb
inc
ret
insb
les
call
xchg
lds
enter
scas
push
test
mov
xchg
mov
sahf
jp
movlps
aas
out
ds
incb
pop
pushl
or
inc
test
test
sbb
pop
sbb
mov
cmpsl
jge
cmpsb
push
mov
insb
and
pusha
sti
mov
jg
cmp
xorl
xchg
push
cltd
dec
sbb
rorl
xor
fbld
add
loope
inc
mov
adc
lret
mov
mov
mov
inc
push
mov
mov
fwait
dec
push
mov
add
push
sbb
pop
push
sbb
or
scas
mov
imul
mov
dec
or
xchg
add
push
in
adc
sahf
ljmp
mov
and
adc
shr
dec
into
insb
arpl
adc
cli
cmc
fidivs
sbb
pop
jae
push
repnz
cmp
xor
dec
jbe
push
lret
pop
add
xchg
cmp
mov
cmp
in
jmp
bound
das
push
xchg
adc
adc
mov
jnp
sbb
sbb
test
or
ret
test
cltd
ret
negl
xor
mov
cmp
or
aas
sahf
daa
sahf
push
out
hlt
jle
cli
pop
rcr
push
jne
pop
in
leave
icebp
cmp
dec
sub
and
push
cmpsl
push
or
jo
mov
aam
int
test
subl
adc
into
in
jae
loopne
adc
push
adc
imul
cmp
lahf
add
jb
leave
xor
call
sub
jecxz
js
rcll
push
sahf
addr16
je
mov
sarb
loope
pop
shrl
push
sbb
orl
testb
in
sarb
cs
hlt
cltd
push
push
pop
rep
xchg
pop
cwtl
psrlq
mov
fdivr
jno
sbb
mov
jbe
mov
adcb
mov
jl
xorb
scas
leave
cmp
aaa
inc
mov
mov
jae
xchg
xor
test
add
insl
cld
mov
jae
jle
fs
dec
and
add
jmp
push
bound
xlat
imul
add
loopne
xor
test
repnz
cld
leave
imull
push
cmp
in
leave
icebp
mov
sti
dec
lock
iret
inc
mov
jno
adc
jecxz
mov
add
jo
cld
int
sub
cmp
lea
sub
jl
jae
ss
mov
xor
jnp
add
sbb
gs
pushf
push
sub
clc
xor
pop
decl
enter
add
mov
mov
mov
and
dec
push
decb
imul
adc
mov
mov
jp
cmp
and
aaa
shlb
lds
mov
add
or
test
aaa
ss
andl
inc
push
push
adc
orb
data16
lock
mov
filds
outsl
lds
inc
push
pushf
insb
dec
lret
push
mov
out
sub
pop
div
xchg
stc
test
mov
ja
and
push
sbb
hlt
push
outsb
imul
push
ljmp
pop
ficompl
inc
sub
aad
jne
out
or
out
pop
xchg
mov
mov
push
cmp
fldl
cmp
mov
xor
jmp
aam
cmpsb
cli
pop
adc
pop
ljmp
icebp
add
xor
pusha
xor
push
jmp
out
scas
arpl
orb
mov
fbstp
jg
mov
cmp
push
imul
imul
iret
out
std
roll
insb
push
jecxz
push
jno
or
mov
pop
xchg
fcomip
fcomps
lods
mov
inc
jg
adc
inc
add
push
mov
lds
pop
xchg
sub
cmp
std
cwtl
hlt
iret
mov
xor
xor
scas
loopne
jno
push
lahf
fcompl
mov
adc
push
xor
insb
lock
mov
add
mov
add
xor
jbe
mov
sub
mov
add
int3
mov
loopne
or
sti
pop
sahf
xorl
cs
lods
cmpsb
imul
das
jl
inc
jge
stc
adc
decl
cmc
test
mov
push
int3
dec
inc
inc
sbb
sbb
ljmp
sbb
ja
mov
lods
jg
leave
push
movsl
sub
lret
push
dec
fwait
xor
add
dec
dec
pop
jae
jo
stos
out
mov
mov
sbb
fwait
aaa
and
xadd
add
test
pop
adc
push
pop
pop
jecxz
mov
jno
ds
jno
mov
cli
es
or
pop
inc
int3
ljmp
fisubrs
mov
jl
xlat
das
jl
es
das
jmp
cmp
dec
stos
cld
aam
mov
int3
cmp
stos
xor
int
jg
and
dec
fucomi
or
addr16
jne
cltd
lahf
pushf
sub
mov
dec
iret
inc
mov
push
mov
fcompl
data16
push
ret
in
and
in
in
mov
sub
gs
mov
sub
into
arpl
sbb
mov
mov
jecxz
fimull
and
add
mov
aas
dec
mov
popf
ret
sahf
lods
daa
jae
gs
xor
push
scas
repz
sbb
es
lods
and
xor
aad
aam
mov
pop
lock
xchg
pop
push
dec
push
dec
adc
add
cwtl
mov
mov
sbb
pop
notl
adc
in
aaa
adc
add
dec
dec
cmp
inc
lods
cmp
push
pop
rolb
fbstp
xor
outsl
xchg
push
dec
mov
add
jns
int3
add
dec
sbb
cwtl
and
fs
mov
test
sub
push
dec
dec
rcl
jbe
gs
xchg
dec
inc
cmc
dec
loopne
clc
insl
xor
btc
pop
mov
push
std
or
or
mov
add
dec
xor
leave
mov
repnz
cmpsb
fisttpll
loop
cmp
lahf
lret
inc
mov
lret
daa
add
outsl
jle
xchg
xchg
clc
pop
rep
add
fs
mov
loope
or
jl
push
xor
sub
jns
in
or
mov
loopne
and
mov
cbtw
and
xchg
inc
arpl
mov
scas
jle
mov
jecxz
test
sar
xor
cmp
mov
aad
dec
loope
adc
cmp
jnp
mov
jne
mov
mov
fwait
push
and
mov
ja
sbb
test
sub
jbe
fdivr
cmp
cmc
push
xor
dec
jne
and
std
cmp
fisubs
dec
jns
fistpl
adc
insl
pop
xor
cmc
pushf
mov
sbb
pop
daa
sahf
cmp
shll
mov
test
adc
inc
jl
rcll
push
lock
jae
ljmp
cmc
lea
and
loopne
sub
test
int
push
inc
mov
xor
sub
into
in
mov
add
jae
add
mov
mov
inc
inc
iret
jmp
aaa
aad
jmp
fiaddl
or
jmp
fsubs
cmp
push
or
loopne
jmp
ret
push
mov
jae
cmp
ljmp
pop
fsin
bound
add
out
mov
push
dec
mov
aam
sbb
cmp
mov
out
xor
fistl
sub
sbb
xor
or
cs
or
loop
stc
add
push
out
mov
cli
mov
rorb
popa
cwtl
ret
sbb
cmpsl
mov
push
push
aad
repnz
ret
dec
test
pop
mov
into
inc
dec
sub
lods
mov
xchg
cmc
xor
pop
mov
xor
dec
in
mov
or
fadds
insb
and
pop
lds
cltd
sbb
xchg
dec
in
or
test
mov
pop
pop
daa
bound
mov
and
sbb
jo
lret
sub
loope
sti
adcl
movsl
arpl
jns
stc
out
int3
mov
xchg
push
adc
xor
lcall
outsl
jp
mov
cmpb
ret
mov
xchg
fwait
popa
popa
lods
shlb
jbe
jae
dec
xor
and
inc
pop
insl
bound
lods
cmp
out
jle
data16
int3
mov
jo
jne
stos
push
sub
jno
shll
dec
ss
cmp
mov
sub
fwait
xchg
pop
jo
push
and
xchg
sub
push
mov
faddl
into
inc
jl
int3
sbb
loop
sahf
jno
cld
pop
sbb
or
mov
xchg
mov
add
lods
cmpsl
rcl
and
pop
lods
jle
loop
push
hlt
jnp
xlat
jb
outsl
and
push
cmp
inc
test
or
xlat
mov
fadds
loop
xor
inc
lahf
shrb
dec
and
imul
dec
stos
pop
xor
cmpsl
xor
and
dec
add
sub
adc
std
jg
addr16
out
or
pop
scas
mov
mov
xor
lock
jb
repz
data16
mov
hlt
and
popf
push
lods
or
insl
xor
out
jne
xlat
sbb
cltd
jle
mov
out
dec
mov
mov
jne
mov
mov
jbe
std
jmp
call
inc
stos
out
pop
lea
out
adcl
cmpsl
movsl
das
call
leave
sub
in
test
add
inc
lcall
xchg
push
scas
fwait
popa
and
lea
fidivl
mov
sbb
sub
and
sbb
insl
sub
jge
and
ja
push
xor
mov
or
inc
push
pop
ljmp
ret
inc
adc
ret
clc
mov
dec
js
bound
popf
or
loope
sbb
into
scas
or
jbe,pt
pop
pop
pop
sbb
outsl
out
insb
xchg
sbb
addr16
pop
out
call
push
mov
mov
pushf
or
aaa
stc
out
out
movsw
lock
movsl
mov
add
mov
inc
adc
rol
adc
movsb
imul
jns
xchg
jl
or
adc
cld
pop
ss
push
in
sbb
out
push
mov
sbb
push
into
mov
xchg
outsb
lods
jne
sbbb
lea
and
popa
xchg
mov
scas
dec
pop
sbb
xor
xor
xor
out
jl
lods
adc
push
insb
inc
mov
repnz
jb
inc
jb
sbb
iret
or
sub
inc
imul
popf
orl
inc
xchg
insl
mov
in
add
jl
daa
shlb
rorb
out
mov
xchg
jae
jnp
cltd
lea
mov
or
pop
xchg
push
cmp
test
mov
mov
movsb
sub
jp
or
xorb
push
rolb
fucomp
mov
push
pop
mov
push
mov
push
adc
jae
push
mov
clc
fiadds
mov
cs
adc
fildll
mov
std
popa
mul
stos
mov
orl
inc
pop
xchg
xchg
push
xor
es
jb
fwait
xor
roll
jno
sub
inc
fldenv
lods
and
fnstsw
sbb
add
jo
and
and
jecxz
stc
or
inc
jb
mov
cmpsl
pop
mov
fcoms
push
mov
sbb
mov
xchg
push
aaa
sbb
mov
int3
push
stos
cli
ret
xchg
sbb
mov
aad
pop
mov
cmp
std
push
inc
lods
jne
insb
jmp
adc
mov
aas
xchg
and
sahf
cmpsl
cmp
sub
xor
test
pop
or
and
sti
dec
fs
idivl
mov
xlat
dec
mov
pop
loope
or
cmpsl
call
call
xchg
leave
decb
inc
pop
xchg
inc
jmp
jecxz
sub
mov
inc
subb
pusha
adcl
sahf
sbb
scas
mov
dec
adc
inc
pop
outsl
dec
inc
daa
cmpsb
mov
jns
pop
mov
stos
jnp
or
lods
mov
bswap
cmp
sbb
sub
fisttps
fcomi
xor
test
rcll
fldenv
cli
in
mov
pop
dec
and
jbe
fcomps
add
inc
shlb
dec
sub
addb
fisttpll
push
sarl
xchg
mov
xor
scas
dec
enter
cmp
mov
xor
xor
lret
mov
inc
ret
and
adc
jecxz
sbb
testl
mov
cmp
xor
imull
xchg
push
sbb
jmp
ret
xchg
cmp
mov
sahf
insb
mov
fisttpll
inc
test
mov
mov
sbb
push
mov
psrlw
and
push
pop
mov
jno
lea
mov
pop
cmp
add
or
lret
sub
and
iret
loope
les
sarb
adc
icebp
mov
jg
cmpsl
or
int
std
sahf
es
adc
pop
call
daa
xbegin
cmp
xchg
pop
in
cmova
ret
test
scas
mov
arpl
outsb
loopne
and
pusha
jl
lods
jb
mov
dec
fbstp
das
sub
sbb
icebp
or
jmp
fnsave
out
sbb
and
adc
sub
daa
pusha
inc
out
sbb
xor
scas
adc
dec
bound
mov
mov
pusha
popf
fisttpl
fiaddl
inc
push
inc
mov
js
stos
insb
xchg
and
popf
adc
cmc
xchg
mov
loope
test
addl
lods
jnp
jp
mov
jl,pn
stos
stos
fsubp
cmp
pop
inc
inc
int
jno
push
push
push
pop
in
fnstenv
imul
mov
out
jnp
pop
mov
inc
xor
imul
pusha
cli
jo
std
and
pop
push
fnstenv
adc
mov
int3
leave
ret
sbb
sub
dec
mov
xorb
outsl
mov
ja
mov
xchg
sub
pop
push
or
add
lret
imul
das
jo
leave
nop
subl
outsb
and
insl
xchg
jnp
out
movsb
adc
adc
ret
mov
lds
cwtl
pop
pop
pop
rcll
cld
adc
inc
pop
xlat
mov
lods
cmp
xchg
pop
in
add
sbb
popa
sarl
add
jge
enter
ja
lods
mov
js
lcall
sbb
sub
jmp
sbb
js
imul
cwtl
ror
mov
ret
popf
aam
cmp
faddl
xor
cmp
daa
cwtl
mov
jae
aad
xchg
dec
outsb
add
dec
mov
jp
outsb
movsb
out
push
adc
ds
mov
or
xor
add
sub
sub
les
jb
fadds
add
jmp
add
jp
ret
push
les
ja
lcall
in
pop
jno
rcrb
push
mov
jmp
jge
sub
or
dec
out
mov
into
arpl
fsubp
push
inc
adc
push
push
divps
sbb
inc
fsubrl
mov
push
call
mov
rorl
jno
xchg
mov
inc
sahf
jne
push
cmc
out
mov
js
mov
shrb
xchg
imul
cltd
jno
mov
mov
or
decb
test
add
or
popa
fwait
jmp
xchg
scas
bound
mov
icebp
mov
pusha
cld
push
dec
daa
jne
xchg
xor
lods
add
xchg
and
sarl
inc
int3
cmp
dec
cmp
add
paddsw
test
lods
xchg
sub
loope
das
mov
cwtl
hlt
xchg
inc
inc
or
out
out
pop
test
jl
push
stc
add
scas
loop
fwait
mov
inc
roll
cld
push
inc
sbbl
fstpl
sub
rorl
ret
in
data16
scas
cltd
out
lods
movsl
aas
push
aad
mov
scas
psrld
into
les
pop
hlt
inc
mov
into
dec
add
out
dec
or
dec
fs
cmpsb
iret
mov
xchg
cld
shll
out
test
and
sub
jge
popf
ret
inc
inc
das
sbb
xchg
clc
sahf
inc
mov
inc
test
xor
or
rorb
pop
fisubrs
rclb
addr16
test
and
lahf
outsb
cmp
dec
push
loopne
dec
add
enter
xchg
jo
outsb
mov
mov
adc
cmpsb
sub
sahf
or
movsb
sub
jae
jecxz
adc
mov
sbb
clc
fdivrl
push
popa
nop
adc
ret
enter
sbb
xor
pop
mov
mov
cmp
xor
cmpl
adc
cmpl
mov
aad
or
jge
push
sub
mov
and
data16
xchg
push
xchg
add
cwtl
mov
je
addl
std
es
jne
dec
jbe
jg
gs
cmp
mov
pop
lea
mov
lods
xchg
dec
add
mov
cmpsl
cwtl
mov
xor
and
cmpsl
sub
jne
xorl
stos
sub
test
call
popl
sub
or
dec
in
xor
cmpsl
cmpsl
enter
fsubr
sub
push
orb
inc
adc
les
jge
xchg
jle
daa
cmp
mov
test
adc
ret
aaa
pusha
stos
inc
pop
inc
mov
shll
xchg
jmp
push
subl
cmp
nop
hlt
loope
adc
outsl
push
into
dec
push
and
adc
jecxz
dec
push
pop
xchg
inc
adc
pop
movsl
out
mov
hlt
mov
loope
mov
adc
mov
insl
lret
roll
in
movsb
inc
repz
gs
lahf
loop
sub
add
insl
lret
inc
sahf
mov
cmp
cltd
test
fimuls
les
icebp
sbb
xor
mov
mov
jle
cmp
push
imul
xchg
and
pop
xor
mov
fisttps
add
jno
or
adc
mov
lds
cli
pop
or
popa
aas
xor
dec
bound
outsb
sbb
mull
inc
mov
jno
cmc
cwtl
ds
aas
mov
pop
arpl
mov
jle
ljmp
std
div
test
sbb
nop
mov
cmp
mov
jno
jge
bnd
mov
outsl
ret
xlat
lods
data16
aam
popf
xchg
lahf
sbb
dec
leave
xchg
shlb
or
mov
movsb
fcmove
lods
mov
stc
dec
adc
xor
out
outsb
sub
fcmovb
fsub
test
sahf
setns
adc
ret
aaa
and
ret
insb
loop
call
mov
das
loop
faddl
loope
pop
jne
fwait
or
push
jns
fsubs
adc
lock
loopne
int3
inc
dec
inc
fwait
test
mov
stc
cwtl
inc
pop
jmp
jno
add
pop
cmpsl
fs
cld
stc
jbe
dec
lds
scas
data16
mov
pop
imul
ds
fstps
movsb
hlt
sbb
push
adc
iret
fwait
mov
and
loop
sbb
xchg
les
dec
repnz
jl
cld
dec
js
ljmp
jnp
repz
aad
in
lds
in
sbb
cld
pop
insl
adc
in
push
in
movsb
xchg
ret
enter
cmp
shrb
test
inc
or
pop
movsl
sahf
mov
in
mov
mov
cmpl
pop
jae
cli
mov
lcall
inc
sahf
fidivs
xchg
ds
pop
cwtl
add
imul
in
add
jno
and
into
lret
xlat
jbe
mov
mov
in
cmpsb
aad
jne
cmp
mov
clc
jmp
dec
les
clc
imul
iret
cwtl
mov
lcall
in
cmpsb
adc
inc
or
pop
fildl
push
leave
lods
mov
fbld
push
inc
int3
lret
dec
jb
mov
jne
push
sbb
loop
or
mov
ret
addr16
xchg
dec
jg
xchg
pop
cmp
cmpb
aaa
cmp
adc
in
test
jns
inc
arpl
popa
xchg
lods
shlb
dec
mov
xor
mov
jb
jecxz
movsl
adc
xchg
movsb
inc
xchg
jmp
pop
pop
dec
scas
sbb
push
push
scas
cmpsl
les
fcomp
in
ficoml
aas
mov
lods
xor
and
call
cli
in
mov
je
jns
push
sub
push
and
dec
xchg
popa
push
pop
adc
jmp
movsl
fisubrl
clc
btrl
xchg
cmp
enter
aad
mov
in
iret
int
xchg
dec
popf
add
into
sbb
jo
jecxz
das
fidivl
inc
cmp
movsb
shll
mov
cmp
add
roll
dec
jle
jge
xchg
mov
mull
xor
jle
mov
sti
rcrb
dec
mov
aaa
xchg
enter
xlat
repnz
lahf
movsb
mov
mov
jg
xor
js
je
aaa
fdivr
sbb
mov
out
or
fldcw
mov
inc
pushf
shll
mov
mov
sub
sbb
in
in
push
pop
sub
mov
mov
pop
in
adc
test
hlt
lcall
add
fcomps
or
ffree
pop
sub
stc
add
pop
jns
mov
mov
xchg
pop
inc
xor
adc
dec
push
lods
nop
loopne
ljmp
test
push
adc
inc
xor
int3
inc
jo
add
in
scas
subl
adc
adc
cwtl
hlt
gs
mov
popf
mov
rcll
xchg
push
pop
mov
mov
fstpl
mov
aam
mov
add
mov
jp
xor
jae
aaa
sub
mov
jne
xor
inc
sbb
jp
cltd
xorl
dec
fsubrs
out
jl
orl
call
pushf
icebp
fdivrp
sar
in
cmp
sub
mov
jno
loopne
addr16
scas
loope
jns
test
ljmp
or
add
pop
push
aaa
cmpsb
jnp
push
add
sub
mov
inc
cwtl
js
jp
sbb
ljmp
lock
xchg
xchg
mov
inc
popa
jecxz
mov
arpl
sbb
add
shll
dec
hlt
jmp
mov
xor
or
mov
inc
xor
ret
dec
push
xor
arpl
test
and
xor
sbb
push
popa
dec
and
mov
fldenv
cmp
lret
push
xchg
repz
divb
in
in
out
movsl
mov
xor
jo
ss
fidivrs
in
mov
sub
repz
push
shll
dec
push
lret
mov
adc
xor
stc
insl
jne
push
pop
sbb
data16
inc
inc
loope
add
mov
jmp
xchg
mov
mov
test
call
arpl
add
lock
inc
pop
sub
jae
dec
adc
mov
jg
outsl
call
dec
sahf
shrl
or
sub
xchg
std
fcomps
scas
adc
dec
and
in
jno
push
push
cmp
inc
es
xor
mov
sub
inc
lcall
mov
pop
push
cli
dec
vmovsldup
mov
cli
push
push
or
xor
aas
mov
jecxz
fildl
inc
push
int
int
dec
xor
xchg
lret
push
out
je
jecxz
mov
scas
mov
pushf
xchg
xchg
fmul
loope
add
push
mov
pusha
sbb
xchg
mov
mov
pop
mov
mov
out
add
icebp
pushf
and
push
int3
add
in
mov
xorb
dec
scas
mov
das
icebp
adc
ret
icebp
cmp
dec
push
inc
mov
aad
mov
dec
mov
add
mov
mov
add
fs
aam
add
test
imul
pop
sahf
pop
test
cmpsb
mov
aam
and
repnz
fisttpl
es
loopne
and
aad
mov
bnd
or
xchg
in
dec
test
jbe
dec
pop
bound
mov
inc
iret
inc
add
out
add
sti
cmp
mov
rcr
pushf
mov
xchg
mov
ret
cmp
sub
xor
lret
int3
push
xchg
lret
aam
add
fistps
mov
add
sar
mov
repz
cli
cmp
in
in
push
inc
test
xor
lret
arpl
push
xchg
or
mov
mov
mov
jg
hlt
out
fsts
adc
and
push
add
call
out
js
scas
fisubrs
inc
fcmovne
xchg
subl
std
add
and
and
ret
mov
or
aad
rolb
mov
mov
scas
and
cmp
xor
mov
ss
pop
add
dec
les
sbb
outsl
ja
dec
inc
ret
mov
and
mov
jge
jb
and
sbb
repnz
xlat
fadds
aam
rolb
cmp
notl
iret
jmp
cmc
in
push
mov
test
push
test
xor
jp
das
test
cmp
or
add
sbb
dec
pop
cmpsb
xor
pop
mov
rcrl
and
fs
imul
push
mov
loope
test
lods
pop
mov
jmp
cmp
movsb
lret
or
movsb
mov
mov
jo
icebp
ret
adc
xor
outsl
push
xchg
sti
out
mov
mov
or
andb
addr16
mov
int
popf
int
scas
icebp
or
outsb
cmp
add
pop
scas
cmp
sub
push
ja
into
es
ja
daa
jge
dec
xchg
and
xor
dec
push
jl
jno
into
and
mov
sub
in
push
push
mov
cmp
out
xor
popf
fdivl
jle
bound
mov
dec
xor
popa
xor
test
scas
aas
scas
lock
movsl
pop
sbb
push
sbb
push
inc
push
mov
les
jl
cwtl
das
sbb
xchg
add
outsb
xchg
inc
push
add
mov
xor
mov
lods
lea
cs
adc
push
movsb
sbb
adcl
jmp
dec
imul
cmpsl
icebp
leave
xchg
pop
fisubl
repz
pop
push
and
xlat
and
mov
add
std
lea
dec
dec
div
push
nop
cmpsl
xchg
nop
lahf
mov
sbb
sbb
mov
out
mov
jb
into
xchg
mov
je
sbb
outsb
dec
out
loop
sbb
hlt
xor
xor
mov
mov
xor
lea
push
cmp
mov
sub
out
pop
xor
lods
sub
adc
rcrb
lret
push
in
stc
mov
xchg
loop
jl
rcr
mov
add
adc
pop
ret
out
jle
inc
xor
out
lret
bound
scas
xchg
xchg
sti
cmp
jge
lcall
ljmp
inc
cmp
add
cli
xor
mov
frstor
out
xchg
arpl
cli
jae
adc
call
sbb
mov
jnp
shll
inc
dec
clc
ds
rorb
jnp
xchg
test
jbe
or
fs
std
scas
lods
pop
dec
push
jne
mov
pop
lret
mov
adc
adc
add
xor
cmp
inc
adc
add
scas
pop
jb
pop
and
push
int
mov
pop
sub
iretw
or
mov
jb
inc
jge
popf
adc
test
add
inc
mov
inc
aaa
xor
in
push
xor
icebp
call
test
xchg
jns
rcrl
sbb
incb
push
push
sub
das
jg
aad
in
subl
adc
gs
and
push
xchg
mov
lods
stos
push
sub
arpl
or
loop
gs
inc
pop
test
clc
dec
cwtl
sbb
and
cmc
test
mov
sub
inc
pop
aas
test
dec
addl
mov
lahf
or
gs
lret
adc
xor
mul
jecxz
call
hlt
push
push
int
test
in
adc
icebp
xchg
sbb
mov
movsb
stos
mov
mov
in
cltd
inc
push
sub
es
xchg
subb
jp
sarb
cmp
inc
dec
fstps
mov
sub
or
lretw
mov
aas
pusha
imul
lahf
sub
jl
sbb
js
adc
push
sbb
dec
cld
cs
ficoms
out
mov
gs
mov
into
mov
jg
and
push
daa
sub
xchg
and
aam
add
fdivrs
cmp
loope
outsl
fwait
sub
mov
lds
imull
fwait
mov
lret
daa
fcmovnbe
jns
hlt
sub
mov
cli
aam
ja
andl
and
es
ret
lea
push
sar
cli
pop
cmp
bound
dec
or
nop
mov
hlt
cmp
cmp
iret
imul
movsb
repnz
xor
jmp
in
cmc
fisubl
or
pop
fcmovne
mov
ja
dec
stos
andb
inc
jmp
xor
jp
mov
xor
cmc
or
outsb
daa
push
cli
test
cmp
stos
pop
sub
andl
add
and
repnz
push
iret
and
call
mov
daa
test
and
dec
lret
mov
in
sub
jg
into
inc
cmp
jno
test
and
push
jnp
icebp
dec
inc
lret
add
mov
mov
jmp
cltd
ds
out
adc
jb
xchg
mov
dec
dec
inc
loope
movl
mov
test
xor
dec
popa
insb
adc
mov
inc
push
mov
jo
lds
dec
mov
xchg
iret
push
and
rcll
jnp
jnp
and
test
mov
in
mov
cmpsb
xor
and
dec
int3
sahf
outsl
push
outsl
clc
pop
inc
int
fnsave
int
ret
cwtl
inc
push
pop
adc
xor
aaa
jmp
out
loop
rcrb
mov
jae
or
xchg
pop
pop
imul
and
xchg
mov
jge
sbb
test
out
add
pop
fwait
mov
and
mov
enter
pop
pop
insb
xchg
dec
dec
mov
or
jmp
mov
outsl
mov
fnsave
cmp
jnp
ss
mov
pop
movsb
out
test
fldenv
insl
jo
push
fwait
mov
and
popf
adc
sti
push
and
lods
mov
push
lods
popa
daa
cmp
loopne
mov
int3
cmp
pop
rolb
jg
test
push
inc
dec
push
jg
sahf
inc
cmp
pop
add
in
cwtl
faddp
adc
mov
push
mov
adc
pop
mov
addr16
orl
stos
mov
and
popf
mov
xchg
push
jne
outsl
movsl
push
xlat
inc
jmp
cmp
in
in
xchg
movsl
jae
xchg
je
sub
jle
cli
shll
xlat
leave
shlb
cli
inc
loope
pop
loope
xchg
fldenv
adc
loop
inc
loopne
in
rclb
ljmp
scas
mov
call
lock
stos
ret
adcb
adc
inc
xor
out
push
lods
test
push
add
and
jns
and
or
dec
adc
mov
push
dec
adc
pop
pusha
mov
pop
outsl
addb
sub
jo
push
sbb
mulb
mov
call
cli
mov
movsb
or
mov
dec
xorl
jmp
sub
inc
dec
jle
push
pop
ss
rcll
inc
push
aaa
in
dec
inc
cs
lret
xor
add
das
xor
cwtl
inc
push
mov
loopne
or
xchg
jecxz
fsts
pop
add
imul
or
jne
jle
es
into
ret
pop
cmpsb
popa
sub
mov
cmp
imul
aas
outsl
retw
xor
jbe
lds
rcr
jo
or
pop
cmc
gs
ret
mov
in
jmp
add
inc
cltd
push
scas
dec
cwtl
aad
xor
xor
mov
lds
mov
fistpl
mov
cmp
lahf
jp
jmp
cmc
or
fstps
pop
iret
mov
jne
jecxz
shl
psubd
add
jno
xor
lret
push
insb
pusha
xlat
add
test
int
loope
or
inc
inc
out
jmp
aam
inc
fadd
sbb
or
lcall
clc
test
adc
cltd
or
pop
sarl
lret
rcrb
jnp
fdivrl
lea
adc
stos
xchg
test
xor
push
dec
daa
push
pop
add
jns
in
push
lods
sub
cli
test
xchg
adc
enter
insl
cmp
vmovmskps
dec
out
xchg
inc
subb
dec
xchg
mov
dec
xchg
and
pusha
jnp
out
in
out
mov
cmp
sub
xchg
pop
popa
lods
dec
and
shll
pop
add
add
xchg
xor
enter
mov
pop
xchg
loope,pt
sbb
inc
addr16
gs
rorl
cmpsb
xchg
add
test
fisubs
lods
aad
mov
lret
into
push
aad
jmp
cltd
arpl
mov
mov
xor
xchg
jne
out
cmp
jecxz
xchg
jl
push
lret
call
and
popf
or
popf
out
shll
test
pop
or
inc
inc
push
mov
outsb
inc
cltd
mov
outsb
adc
sub
mov
pusha
inc
sbb
stos
push
scas
mov
mov
cmp
je
sub
in
in
cmpsb
adc
sbb
and
sub
rcrb
jns
sbbb
mov
mov
es
addr16
js
lret
addr16
fisubl
pop
jl
sahf
insb
jb
jbe
iret
dec
pop
imul
xlat
push
inc
xchg
and
dec
mov
xchg
mov
push
and
jp
push
jne
add
aas
sahf
or
or
xchg
ss
test
fcoms
dec
cmpsl
lret
ja
jbe
push
cs
ljmp
xchg
sbb
push
xlat
jbe
mov
das
bound
adc
fbstp
out
sub
fists
imul
mov
jno
es
sub
push
or
stos
dec
enter
mov
mov
jns
push
mov
xor
cmpsb
cli
mov
sub
mov
ja
inc
popf
test
mov
or
mov
aad
fldcw
push
push
out
bnd
jge
aam
scas
dec
cmp
iret
nop
pop
cltd
je
and
sbb
jmp
in
adc
mov
sbb
imul
mov
mov
add
inc
and
add
jl
addr16
jl
imul
sbb
pop
or
mov
daa
adc
dec
ljmp
cmp
outsl
xchg
adc
dec
dec
jne
or
out
xchg
jb
jmp
mov
shlb
dec
addr16
adc
or
pop
pop
cmp
pop
mov
in
inc
mov
andl
sub
stc
sahf
push
daa
ret
insl
pop
das
mov
in
jns
lds
adc
push
xchg
rcl
pop
outsl
add
shll
bound
or
nop
das
mov
call
popa
daa
xor
fists
stc
mov
or
or
jno
jae
scas
mov
add
lret
aas
xchg
mov
dec
mov
mull
pop
push
mov
or
int3
cmp
jp
into
mov
mov
mov
fidivs
popa
adc
xchg
das
mov
ror
imul
mov
jo
xchg
fucom
xchg
in
xor
jmp
and
sbb
mov
sbb
stc
repz
mov
pop
out
jae
movb
xor
leave
push
loope
jle
ds
mov
mov
es
dec
xorl
pop
fwait
push
test
adcl
pusha
jecxz
or
jns
arpl
dec
in
and
ss
xchg
ss
add
jl
addl
pop
leave
pop
pop
xchg
mov
pop
mov
cmp
pusha
mov
pop
push
mov
into
ss
in
rcr
mov
cmpl
mov
loop
fldenv
mov
shl
inc
lea
lcall
cmpsb
or
fcomps
mov
es
flds
push
loopne
pushf
cwtl
mov
add
jns
push
push
cmp
lcall
inc
sub
bound
sbb
jno
adc
insl
cmp
lret
je
mov
loopne
imul
xchg
in
xor
pop
mov
pop
in
xor
out
jmp
aam
dec
ficoms
movsl
fcomip
idivl
decl
push
fs
test
js
mov
test
hlt
std
or
pop
ja
das
jns
push
dec
aam
out
rorl
dec
mov
in
lock
push
xchg
mov
add
jg
sub
or
jle
mov
or
pop
arpl
or
adc
arpl
aad
std
fmuls
sub
out
add
daa
je
dec
push
je
sahf
xchg
std
mov
mov
inc
aam
out
sti
sbb
aam
lcall
mov
pop
jo
cmp
jo
xchg
sub
mov
sub
popf
repnz
out
sbb
adc
hlt
mov
lock
add
mov
nop
jg
xor
adcl
shlb
std
cld
jb
test
shll
adc
cmpsl
loop
aas
lret
mov
pop
and
push
insl
js
xchg
fimull
mov
insb
add
or
dec
js
mov
into
inc
xor
in
or
mov
push
and
dec
in
mov
cs
jmp
pop
pop
outsl
dec
sbb
cmc
jae
pop
faddp
push
shll
push
or
inc
imul
cmp
pop
int3
sbb
add
jo
xchg
mov
std
mov
in
std
inc
popf
fstpt
xor
lds
inc
fistl
rcll
add
stos
mov
xor
hlt
and
dec
mov
cmp
int
adc
push
aas
mov
sbb
jae
repz
cwtl
push
xchg
test
ja
and
incb
scas
cmp
jo
mov
mov
fdivrp
ret
adc
aam
sarl
mov
lods
sbb
ds
jno
adc
xor
sbb
or
out
imulb
lods
dec
dec
sti
cltd
jle
hlt
jmp
into
mov
insb
sahf
test
daa
mov
or
in
or
mov
and
cmp
jge
and
dec
sub
call
xchg
out
cs
dec
fwait
imull
xchg
mov
js
divl
dec
xor
idivb
mov
jmp
cmp
in
add
fsubr
and
icebp
add
rcrl
mov
sahf
outsl
js
or
pushf
ror
in
jmp
clc
sbb
inc
or
add
dec
sbb
mov
outsb
push
mov
mov
data16
rcl
ret
cmpl
jne
test
fiaddl
rcll
mov
in
adc
and
subl
mov
imul
imul
push
sbb
call
dec
enter
sub
pop
or
stos
lcall
pushf
incb
stos
ja
jbe
mov
std
push
mov
les
or
data16
in
sahf
adc
dec
lea
imul
dec
mov
cmp
nop
testb
lret
ficomps
cmp
inc
add
xchg
lds
sbb
lret
mov
and
inc
add
inc
mov
pop
mov
sbb
add
divl
pop
dec
and
aaa
jb
add
sbb
mov
imul
mov
xchg
call
popf
jns
aad
pop
dec
test
call
dec
cs
int
imul
jae
cmc
xchg
jg
xchg
out
fnsave
out
add
stos
xchg
xchg
mov
cmpsl
fmull
stos
cld
dec
test
dec
fists
or
leave
mov
js
push
popf
popw
rorl
jo
cmp
clc
stos
push
sti
stos
das
fninit
repnz
mov
fisubrl
adc
fstl
push
jmp
outsb
lods
mov
jp
popf
cltd
xor
aam
fstpl
cmpsb
jo
adc
jle
cmpsl
push
push
push
adcl
je
shrl
xlat
loope
int3
jl
imul
movsb
jnp
fucomi
lcall
insl
xlat
call
in
std
mov
jno
insl
aad
es
and
pop
ret
out
push
movsb
pop
std
mov
jle
pusha
inc
in
fwait
push
and
popa
push
aam
hlt
pop
adc
mov
push
leave
mov
fiaddl
ret
pop
sub
subb
lret
loop
mov
or
arpl
clc
dec
mov
push
mov
xorb
shrb
call
dec
test
out
out
or
or
in
sub
pop
sbbb
jne
sub
dec
and
das
mov
jbe
mov
fwait
mov
jo
in
xor
sbb
lods
mov
sub
xor
pop
das
sbb
cmp
ror
ret
cld
in
repnz
adc
mov
mov
or
xchg
mov
int
mov
dec
rorl
mov
pushf
sarb
sbb
add
mov
out
mov
lods
jne
jno
mov
dec
sbb
lret
dec
and
iret
sub
or
cmpsb
xlat
or
mov
and
loope
ja
pop
jle
fists
jbe
scas
dec
sbb
pop
lock
aas
adc
dec
sbb
pop
mov
jnp
aas
test
mov
add
icebp
insl
aad
and
stc
movsl
icebp
shl
xor
dec
pop
fldenv
mull
sahf
cmp
add
mov
stos
push
cmp
popf
std
xor
lds
dec
jmp
pop
hlt
fmull
arpl
scas
and
fwait
add
daa
push
rclb
dec
inc
and
fs
xchg
movsb
bound
leave
pop
call
mov
or
arpl
pop
aas
lret
mov
or
je
push
jp
movsl
xchg
mov
mov
xchg
pop
jnp
xor
dec
xchg
dec
jp
leave
jno
insl
sub
cmc
add
push
push
fdiv
sbb
sub
out
cmp
mov
and
movsl
sti
xchg
fwait
mov
pop
es
das
mov
mov
mov
lods
dec
mov
sti
dec
stos
pop
testb
sub
pop
mov
mov
push
and
mov
mov
jnp
dec
shll
mov
pusha
int
in
int3
cltd
shlb
mov
insb
add
addr16
popa
mov
cmp
mov
scas
pop
adc
sarb
push
mov
inc
push
insl
cmp
ja
aad
je
pop
mov
test
data16
jmp
lods
out
jle
mov
push
cltd
inc
lret
test
pop
iret
push
in
rcrb
and
mov
jg
fldcw
js
cmp
shl
push
cmovne
fadds
outsl
ds
mov
lret
jl
movsb
mov
fnsave
lret
test
xor
fisubrl
jnp
jo
stos
xchg
aaa
out
jne
adc
xor
cmpsl
add
ret
lods
or
dec
fs
in
cmp
jb
movsb
xchg
clc
push
ret
je
jnp
aaa
xlat
testl
call
push
pop
sti
adc
pop
push
mov
xor
inc
dec
jo
mov
mov
mov
lret
ja
add
jnp
lods
push
and
jns
mov
push
or
out
adcl
dec
enter
add
lock
xchg
mov
repz
jp
gs
pop
hlt
ds
cmpsb
fimuls
mov
push
lea
insl
xchg
pushf
cmp
mov
dec
sub
rorl
dec
test
push
aam
sbb
mov
stc
xchg
inc
hlt
pop
xlat
jae
mov
fsubrs
mov
imul
enter
aam
mov
cmp
sub
or
and
xchg
sahf
insl
cmp
aas
pop
cmp
mov
imul
outsb
in
clc
scas
push
jg
sub
dec
int3
sbb
and
jnp
sbb
js
mulb
std
adc
cmc
push
push
mov
dec
jmp
enter
cmpb
xchg
repnz
out
pop
dec
lahf
stc
adc
mov
mov
lock
jmp
iret
push
icebp
push
daa
cmpsb
add
mov
mov
jnp
addr16
pop
nop
inc
sub
out
out
js
ljmp
adc
paddb
push
lea
repnz
dec
mov
adc
enter
sbb
das
sbb
add
xor
into
pop
mov
icebp
test
pop
lret
and
pop
test
or
lea
pop
or
jmp
inc
jle
out
or
jmp
push
loopne
movb
or
ljmp
je
push
pop
roll
and
jmp
sub
mov
mov
test
jns
push
and
rcrl
inc
hlt
jmp
rcr
idiv
mov
sub
jne
xor
fstpt
inc
mov
sub
sub
jne
rorb
jne
sbb
es
inc
mov
shlb
out
pop
inc
and
xor
add
add
sbb
xchg
mov
mov
mov
push
repz
in
sbb
bound
popa
shll
ds
jne
cmp
cwtl
inc
push
andl
inc
lods
pop
mov
dec
insl
xchg
xor
mov
dec
lds
and
pop
je
sbb
dec
pushf
add
mov
rcr
cmp
jge
jle
sbb
sahf
stos
int3
mov
dec
fs
insl
lahf
mov
pop
js
xchg
xor
xchg
dec
inc
jmp
lods
push
int
dec
push
jns
rcrl
lret
nop
adc
ss
jle
cmp
int
test
stos
outsb
xor
lret
add
mov
shlb
repnz
pop
fld
or
in
inc
mov
jae
mov
mov
dec
add
add
inc
lahf
dec
push
scas
jns
mov
or
sti
xchg
outsb
sbb
mov
lods
push
adc
scas
dec
icebp
mov
xchg
aam
loop,pn
inc
shlb
push
xor
mov
arpl
leave
cld
sub
dec
daa
inc
cmp
mov
sahf
pop
jmp
mov
inc
rorb
movsl
loopne
mov
and
add
mov
xchg
cwtl
stos
loopne
aas
cmp
jns
sub
jnp
lcall
hlt
test
mov
mov
test
lahf
cmpsb
mov
push
dec
dec
xchg
cmp
mov
mov
jo
jno
lcall
sub
aam
push
ret
push
cmp
jmp
hlt
rol
outsb
lret
push
or
xor
insl
mov
clc
hlt
repnz
into
dec
popa
aas
sti
jl
push
sub
cltd
pushf
dec
xor
pop
cmp
jns
enter
inc
loope
xchg
add
cmp
and
mov
lock
mov
xorb
aas
stc
call
inc
mov
jne
mov
mov
cld
xor
int3
cmc
insb
shll
hlt
dec
mov
xchg
push
or
hlt
movsb
jne
lock
arpl
or
int
mov
adc
sbb
cld
pop
xor
int
loop
outsb
pop
cmp
cmp
dec
test
push
mov
lahf
cmp
inc
sub
enter
adc
xchg
dec
js
ret
xor
pop
push
jl
rorl
jp
push
or
rorb
stos
mov
aad
shrb
and
jmp
or
mov
mov
xor
mov
xlat
dec
cli
nop
das
lea
pop
push
lahf
arpl
xor
mov
xchg
fsubl
in
or
repz
call
pop
movsb
in
scas
dec
inc
jp
mov
or
sbb
cmp
push
adc
adc
pop
mov
dec
push
jne
stos
ss
pop
clc
xchg
repz
adc
or
push
in
dec
xchg
out
jp
pusha
pushf
xchg
sbb
inc
pop
xchg
gs
mov
jmp
loope
int3
mov
hlt
jbe
leave
popf
sub
lret
xor
out
mov
and
cmpsb
or
xchg
sub
push
mov
inc
shrb
lret
mov
into
repnz
fsubrp
cli
sub
cmpsb
fwait
js
mov
push
mov
sti
pop
and
mov
dec
sahf
mov
data16
cld
push
sbb
xchg
ret
nop
fbstp
movsb
mov
pop
adcb
xchg
jno
jb
xchg
jns
push
cmc
cltd
mov
std
mov
dec
fwait
or
mov
xor
or
pushf
in
mov
inc
jo
fistps
sub
mov
adc
xchg
xor
sbb
jge
outsb
outsb
adcl
sub
pop
add
gs
mov
sub
inc
mov
xor
jnp
pop
nop
or
push
cwtl
loop
jmp
loopne
fucomi
mov
or
lock
es
sbb
adc
fistpl
xor
and
and
int3
mov
push
shll
stc
cld
daa
sbb
insl
lds
rorl
add
test
sub
stos
pop
add
push
xchg
inc
test
push
pusha
mov
shlb
sahf
pop
jmp
lock
inc
mov
out
xor
jne
xor
jnp
jb
stos
mov
pop
stc
cmp
daa
pop
cld
cmp
popf
insl
mov
iret
push
add
cmpsb
pop
and
or
test
in
or
pop
mov
mov
fbstp
mov
sub
sbb
scas
ds
loopne
dec
mov
enter
hlt
lods
and
dec
es
push
scas
hlt
daa
mov
push
stos
gs
inc
mov
out
repz
adc
sbb
into
out
out
rol
mull
sub
test
ffree
pop
outsb
add
dec
sbb
fcom
jbe
int3
or
jg
xor
ljmp
or
or
mov
push
xor
and
add
mov
sbb
sahf
jb
stc
cs
cmpsb
pushf
add
insl
outsb
out
inc
sub
sub
arpl
xor
and
jg
cwtl
int
xor
orl
insl
dec
iret
loope
xchg
jae
or
inc
lahf
pop
shll
pop
gs
mov
imul
jmp
dec
jnp
in
push
pop
cmpb
inc
jae
seto
xor
mov
cmp
loop
fisubrs
xchg
movsl
lea
inc
mov
xchg
lock
cmp
decl
mov
sub
mov
mov
pushf
and
or
andb
dec
mov
std
cs
sbb
andb
add
push
pop
repnz
mov
sbb
ficoms
repz
repz
ficoms
fcmovu
cmpsb
xlat
mov
inc
pop
sarl
jae
outsl
addl
test
pushf
push
mov
fmuls
test
and
std
jbe
inc
aaa
sub
adc
or
lahf
and
mov
and
inc
or
xor
ss
cmp
loop
call
cltd
pop
and
aam
ret
jg
icebp
les
insl
mov
or
sbb
mov
sub
pop
xor
stc
loope
in
orl
enter
lahf
push
insb
jmp
out
and
int3
aam
ret
call
hlt
insl
out
dec
mov
lret
or
fsubrs
pop
pop
xchg
mov
lock
add
add
inc
and
mov
sub
iret
sbb
in
and
mov
movl
mov
xchg
fwait
mov
lods
outsb
and
push
and
mov
cmpsl
lds
daa
das
add
jb
jle
ja
js
lcall
xor
xchg
sub
out
roll
xor
loopne
xchg
das
pop
xorb
inc
or
pop
and
mov
and
shl
test
gs
sbb
dec
jp
sub
mov
inc
aaa
mov
jne
iret
fidivrl
xchg
push
mov
andl
cmp
mov
or
frstor
push
push
shrl
xor
test
in
ret
dec
movsb
ret
inc
enter
inc
ficoms
dec
ret
jnp
test
inc
fstps
xchg
adc
test
xchg
push
dec
mov
sahf
mov
shrb
sub
add
negb
nop
call
enter
mov
dec
ret
push
inc
testl
fsubl
lods
mov
cs
fldenv
sahf
pushf
jne
push
clc
pushf
clc
adc
pusha
je
test
ljmp
subb
icebp
or
jbe
imul
xchg
push
lods
ds
imulb
and
aad
jb
and
daa
gs
sub
int3
ret
add
cmp
lea
jmp
adc
js,pn
aaa
push
and
dec
jb
popf
inc
xchg
and
push
mov
outsl
jp
push
and
mov
insl
popa
loop
lods
sub
sub
fmull
push
push
iret
repz
xor
pop
bound
push
outsl
cmc
xlat
sub
dec
cmpl
dec
sbb
xorb
xor
loopne
mov
jmp
in
pop
or
sti
adc
imul
jecxz
insb
jecxz
dec
jb
pushf
movsl
add
dec
fimull
sub
outsb
shlb
imul
or
xchg
xchg
push
fbstp
loope
das
xchg
imul
add
arpl
insl
pop
cmp
sub
jge
mov
test
jmp
push
sti
xchg
scas
cmp
adc
js
jle
arpl
test
out
add
subb
push
in
sbb
aaa
or
cmp
mov
pop
jl
cs
mov
and
call
fistpl
adcl
pop
mov
or
aas
scas
mov
outsb
mov
sbb
insl
loopne
fstpl
jl
sbb
push
sub
xorl
dec
mov
bound
jbe
pop
push
outsl
add
je
pop
sbb
sub
jge
or
cmc
mov
mov
and
mov
dec
scas
jbe
outsl
hlt
insb
xchg
arpl
or
push
dec
lcall
add
sub
loope
arpl
adcb
jo
push
aad
outsl
ja
andl
inc
enter
mov
jg
xlat
sub
or
push
mov
das
insl
test
fmuls
out
testb
pusha
xor
ffree
aas
mov
jl
xor
jge
sbb
rolw
jno
add
push
xchg
add
mov
or
adc
or
and
pop
or
enter
stos
add
and
adc
mov
dec
ljmp
add
sub
cmp
mov
add
ficompl
mov
push
mov
cmpsl
popa
fildll
jno
mov
xor
loopne
outsl
in
push
es
cltd
pop
mov
xchg
leave
hlt
mov
inc
shrl
jno
inc
mov
inc
xor
fimull
lea
cmp
int
pop
lcall
subl
xor
iret
push
js
mov
movsb
nop
loope
mov
pop
add
push
and
vmwrite
ljmp
mov
dec
daa
stos
lea
icebp
sub
imul
inc
mov
lcall
aas
cmpsl
sub
ret
adc
stc
subps
jmp
and
sbbl
aaa
pop
loop
stos
leave
cld
pop
in
enter
unpckhps
cli
aad
jnp
jo
jge
mov
iret
xor
lahf
mov
inc
jo
xor
subb
mov
enter
in
pushf
sub
pop
test
mul
negl
sub
xchg
scas
jne
fwait
cmpsl
dec
mov
icebp
cltd
lock
rorl
jg
jmp
mov
dec
xchg
out
and
mov
sbb
sub
pop
sub
or
fmuls
push
mov
movsl
cltd
mov
stc
mov
jns
adc
sbb
jnp
popa
lods
aad
pop
sbb
loope
test
inc
adcb
inc
mov
sbb
xlat
inc
xchg
aas
lock
rcrb
shld
test
movsb
cltd
je
aaa
das
inc
sub
or
test
sbb
fwait
jle
mov
mov
inc
xchg
out
adc
mov
inc
jbe
pop
xchg
cmpsb
mov
mov
lahf
adc
mov
push
outsb
dec
cld
sbb
icebp
inc
es
or
insb
and
lea
inc
or
outsb
and
jbe
cmp
jl
fstpt
pop
push
add
cli
leave
pop
fsubl
in
dec
sub
mov
pusha
cmp
std
cmp
fisttpl
sbb
pop
ficompl
sbb
test
xor
add
add
mov
fisttpl
mov
ret
xchg
sub
icebp
jae
aad
in
adc
pop
adc
stos
or
cmpsb
jg
cmp
into
iret
mov
and
inc
aam
mov
xchg
adc
mov
cmc
mov
dec
and
test
or
clc
pop
lcall
jno
in
push
lea
dec
inc
sub
aad
pusha
xchg
sti
pop
sub
dec
cmp
xlat
adc
and
out
mov
mov
inc
dec
in
in
jae
vaddsd
mov
xchg
and
ds
rclb
inc
jl
cmpl
sub
pop
xlat
icebp
xlat
stos
xor
lock
jle
dec
xor
stc
mov
mov
or
and
in
insb
sbb
js
adcb
int
hlt
mov
mov
or
inc
icebp
add
fiadds
test
lea
adc
test
icebp
cmp
leave
inc
movsb
sbb
stos
add
xor
and
aaa
jecxz
popa
imul
sbb
shrb
xor
add
mov
popa
sbb
jg
xchg
push
sar
jns
add
notb
adc
popl
loop
or
imul
pop
mov
adc
aad
sti
aam
sbbl
jns
cmpsb
out
mov
mov
mov
xchg
push
popa
cmp
xor
es
aad
movsb
out
xchg
add
cmpsl
stos
add
jle
cmp
repnz
jg
out
jl
lods
cwtl
arpl
push
scas
lock
push
mov
push
xchg
pushf
xchg
add
pop
icebp
jnp
and
fists
xchg
les
mov
inc
xchg
mov
dec
pop
sub
dec
jo
mov
icebp
xor
and
and
pop
xchg
push
xor
scas
mov
mov
out
mov
stos
cmp
and
popf
mov
gs
adc
pop
pushf
inc
sti
aaa
push
lcall
nop
cs
cltd
daa
fcmove
repz
popf
pop
rorl
pop
std
mov
ficoml
movsb
or
shr
mov
int3
jp
hlt
sub
dec
out
mov
movsl
inc
out
push
in
jbe
andb
xchg
test
xchg
and
ret
jne
xchg
cmpb
js
ds
aad
aas
inc
mov
popfw
fsubrl
cs
xor
lods
adc
and
scas
movsb
lret
js
fldt
mov
xchg
mov
pop
inc
je
inc
mov
sbb
sbb
mov
testl
xchg
inc
roll
fldl
inc
lea
mov
mov
push
lcall
push
jb
sub
and
adc
xchg
mov
mov
popf
movsb
ss
xchg
pushf
xor
xchg
sub
cwtl
out
cmp
mov
xchg
lret
subl
test
jp
sbb
sbb
int
int3
fistl
in
mov
test
pushf
popa
call
aaa
fdivs
cmpsb
add
call
xchg
fwait
push
xor
cmp
mov
inc
or
iret
mov
jp
push
jne
mov
arpl
push
ret
sub
loopne
incb
mov
push
lds
jecxz
inc
cwtl
jns
mov
cmp
or
push
mov
hlt
mov
mov
es
out
addl
mov
inc
pushf
push
pop
in
inc
mov
nop
cmp
mov
cs
sub
adc
pop
cwtl
pop
mov
mov
movsl
cmp
stc
mov
in
mov
jmp
scas
fimuls
out
into
add
push
jge
xorl
push
shrb
imul
push
adc
add
enter
scas
out
mov
xchg
pop
dec
js
xlat
xor
fwait
xlat
jp
pop
xchg
pop
mul
mov
add
jp
leave
nop
sbb
int
fmull
ss
inc
in
mov
cmc
sahf
jmp
es
cmp
ds
enter
cmc
push
jp
mov
lcall
fwait
inc
lea
add
mov
subl
shrb
pop
mov
cwtl
cmp
xlat
rcll
xchg
mov
xor
xchg
mov
int3
xor
cmp
push
push
out
xor
fldenv
addr16
mov
sbb
xor
cmpsb
mov
pop
mov
adcl
cmp
sbb
adc
out
lahf
aad
push
mov
jmp
sub
inc
add
pusha
or
mov
pop
push
xchg
mov
jle
in
xlat
adc
arpl
push
dec
movl
enter
rorb
inc
nop
inc
hlt
sub
fidivrl
mov
je
in
dec
inc
ds
mov
inc
fisubrs
or
adc
xor
push
sub
adc
cld
and
popa
add
push
pop
popl
fidivs
jmp
shrl
sub
lock
add
push
in
int
mov
mov
loop
cmp
es
div
adc
inc
cld
test
mov
cmp
mov
push
jne
cli
add
lods
insb
test
xor
cmpsb
pop
jb
adc
fs
cmp
mov
cmp
mov
lret
hlt
sbbl
aad
and
dec
cmp
add
xchg
call
and
movsl
cwtl
mov
lcall
das
test
pop
sub
jge,pt
and
mov
cmp
xor
mov
pop
cwtl
dec
pop
fistps
xchg
adc
fs
testb
pop
mov
push
inc
dec
push
mov
aas
je
add
fdivl
lock
lret
pop
xor
in
pop
push
into
xchg
addr16
xor
daa
sub
test
enter
jge
notl
out
mov
bound
icebp
mov
xchg
arpl
ljmp
pop
out
ljmp
sbb
sub
or
mov
xchg
mulb
pop
mov
add
jg
sbb
imul
xor
stc
nop
movsl
cld
fistpll
or
xchg
xchg
push
push
rol
fadds
and
insl
lock
xchg
pop
mov
lods
add
out
pop
repnz
jb
stos
cmpsb
push
jns
ret
adc
aad
daa
stos
sbb
xorl
mov
cmpsb
cmp
mov
test
lret
add
jbe
xchg
adc
xor
pop
bound
stos
cmp
std
in
fcomps
test
fs
stos
rorb
fldl
popf
push
add
inc
mov
cli
movhps
pop
outsb
rol
outsl
sbb
scas
dec
rolb
cmp
mov
dec
rcr
jb
pop
movsb
in
and
imul
mov
fiaddl
mov
lcall
pop
out
das
mov
loope
popf
adc
mov
repz
lds
or
icebp
mov
dec
cmpsb
sahf
mov
push
pop
lock
pop
and
push
sbb
jb
xchg
add
mov
test
scas
xor
cwtl
xchg
mov
add
loope
xor
repz
jp
stc
push
dec
cld
insl
cmp
dec
negb
mov
ret
nop
xchg
or
outsb
lahf
mov
xchg
xchg
inc
add
clc
mov
daa
pop
mov
xorl
xchg
sbb
fs
sar
push
ja
movsl
push
mov
pop
out
out
ss
cmp
xorl
lds
jne
ss
mov
aas
xor
pop
xor
jp
mov
mov
adc
into
xchg
mov
mov
in
sub
mov
push
aad
lret
mov
movsl
call
mov
push
dec
adc
fstps
pop
adc
sbb
in
jb
sahf
jnp
push
cmp
loop
icebp
imul
aad
push
mov
inc
xchg
mov
pop
clc
cld
push
mov
adc
pop
push
or
cltd
xor
pop
dec
pop
fs
fcmovne
mov
sbb
inc
pop
jg
insl
cmp
aad
outsl
jecxz
push
add
sub
mov
pop
cmp
sub
mov
sbb
jbe
mov
cld
pop
jno
and
xchg
or
mov
aam
pop
lea
loopne
mov
scas
add
mov
adc
xchg
xor
hlt
cltd
xor
repnz
push
fstps
jns
dec
adc
xchg
dec
cmp
inc
dec
push
mov
pop
js
xchg
jne
daa
xor
incb
sbb
jle
pop
pop
pusha
leave
xchg
and
jle
bound
add
mov
mov
mov
cmp
repnz
ret
std
in
jg
push
jno
inc
sbb
fbstp
pop
aam
or
cmp
mov
mov
lods
sub
cmp
dec
cld
js
cmpsb
dec
pop
pop
ret
adc
push
pop
inc
ret
push
lock
xor
ret
inc
aam
xchg
inc
inc
enter
adcl
and
test
jge
popf
repz
pop
outsl
in
mov
xor
jge
xchg
mov
jg
dec
repz
scas
jbe
sub
or
or
lods
imul
and
jnp
mov
pop
pop
fisttps
cwtl
mov
mov
push
sbb
movsb
fimuls
scas
jge
xchg
sbb
and
xchg
pop
or
add
mov
xor
cltd
push
in
pop
cs
sti
adc
push
mov
test
aaa
iret
inc
movsb
jno
in
xchg
push
and
mov
mov
movsb
xor
push
clc
and
xor
pushf
insb
sbb
hlt
mov
aas
mov
shrb
push
pusha
push
imull
lods
mov
jp
jle
test
adc
xchg
fnstcw
vxorps
push
cli
pop
xor
xlat
aas
push
sub
mov
sbb
jae
pop
pop
xchg
jno
and
mov
add
and
lods
pop
loopne
dec
dec
jae
dec
bound
sub
outsl
push
jmp
cli
push
dec
call
pop
inc
push
lock
cmp
add
mov
in
sti
push
sbb
push
push
fwait
sahf
xchg
inc
in
adc
inc
sahf
add
inc
mov
ds
je
lods
rclb
stos
xchg
mov
sbb
daa
out
and
jl
inc
xchg
outsb
jmp
mov
rcrl
dec
mov
jge
mov
jns
inc
xor
ds
cmpsl
push
arpl
dec
js
lods
shrl
ss
inc
mov
push
rorb
pop
xchg
xchg
lahf
pushf
sbbb
popf
and
stos
mov
fbld
fs
movsl
and
movsl
fidivrl
push
lock
jge
or
cmp
outsb
adc
dec
push
outsl
add
dec
jbe
inc
leave
cmc
pop
xor
xor
arpl
call
dec
adc
iret
imull
push
int3
insb
scas
arpl
ljmp
pop
cmp
cmpsl
xor
sbb
adc
push
xchg
fiadds
xchg
shl
in
cmp
lret
dec
dec
pop
xor
pop
inc
test
sbb
ja
add
mov
test
int
mov
mov
add
icebp
push
xchg
incb
stc
push
or
mov
roll
mov
mov
adc
shr
push
pop
stos
sub
pushf
sarb
mov
outsb
cmpsl
arpl
mov
mov
jmp
aad
iret
mov
pusha
dec
push
stos
nopl
inc
fs
and
push
out
pop
test
push
and
sbb
cmc
and
sbb
ret
push
xor
dec
scas
aas
pop
add
je
push
pop
insb
fdivrp
xchg
cmp
mov
cmpsb
orb
ret
and
push
inc
inc
xchg
test
movsl
jg
inc
pop
pop
loope
aas
mov
add
sbb
fsubs
int3
lahf
imul
leave
frstor
pop
cwtl
inc
scas
adc
popf
mov
in
push
fistl
push
jnp
aas
pusha
xacquire
mov
fistl
loopne
cmp
scas
and
add
mov
sbb
cwtl
dec
icebp
dec
jae
sbb
data16
push
dec
adc
lods
cltd
cmpsb
mov
pop
xchg
cmp
inc
cmp
les
dec
adc
mov
add
cmc
push
pusha
add
push
scas
cmp
shlb
sub
pusha
sub
pop
daa
mov
adc
out
cltd
inc
fisubrl
mov
rorb
cmp
sbb
test
mov
pop
xchg
push
cmp
sub
loop
cmp
addps
mov
and
std
lret
and
fs
push
sbb
jae
add
dec
cmp
jno
inc
imul
stc
xor
ljmp
bound
cmpsl
ret
dec
cli
xchg
mov
jnp
and
fnstcw
arpl
call
enter
and
xchg
ds
mov
or
add
arpl
pushf
inc
sbb
sub
or
shl
push
push
inc
push
cmp
dec
decb
adc
xor
testb
je
sarb
or
ja
into
push
callw
xor
stos
dec
data16
cltd
cmp
fcmovnb
lahf
dec
sti
pushf
repnz
gs
orw
and
mov
xchg
mov
dec
pushf
jae
mov
mov
imul
test
es
ds
sbb
insl
mov
jg
insl
mov
daa
mov
in
shr
stos
push
nop
in
and
pusha
nop
xor
mov
js
iret
jge
mov
sbb
cmp
jmp
jecxz
lret
sub
xchg
push
push
lods
sbb
adc
insl
shlb
pop
mov
cmp
inc
push
push
mov
rolb
fcoml
and
cld
int
jl
mov
push
arpl
aas
cmp
scas
jmp
adc
mov
cwtl
cli
and
and
push
stc
add
and
inc
inc
orl
movsl
in
repz
mov
aad
adc
and
scas
xorl
sbb
lcall
sti
or
int
lret
bound
stc
xor
ja
push
dec
inc
fidivs
pop
mov
lret
ret
rcrb
sub
pop
inc
dec
sub
sti
aas
scas
sbb
daa
stos
cmp
mov
lahf
loop
sub
in
outsl
adc
pop
shrl
sub
push
cli
lahf
pop
das
mov
fmull
sbb
jnp
jge
cld
sbb
cmpsl
es
jmp
shll
xlat
pusha
inc
xchg
jno
mov
sub
mov
subl
idivb
sub
inc
xor
jo
cs
pop
aas
mov
xor
aam
int3
mov
add
mov
mov
repnz
and
add
xor
pop
inc
lcall
aaa
adc
pop
addl
les
jnp
enter
pop
ret
ret
mov
out
pop
fs
fistps
rolb
jbe
push
pop
insl
fdivr
sub
fsts
jae
rolb
lahf
lods
aam
pop
lods
icebp
sarb
mov
xchg
sub
xor
sahf
ret
ficompl
cmp
ret
stc
jnp
fcoms
popf
sbb
mov
cmp
push
inc
into
ret
pop
icebp
jo
mov
dec
je
sub
sub
dec
fs
mov
cmpsl
sub
pop
mov
pusha
stc
add
arpl
popf
sub
les
sub
add
pusha
pop
arpl
sub
movsl
mov
xor
movsb
movsl
cmc
cmp
cld
rcll
inc
pushf
insb
push
out
xchg
outsb
movsl
aad
pop
roll
and
adc
loope
pushf
adc
xor
outsb
enter
add
pop
cld
sub
mov
das
pop
or
inc
cmp
push
and
xor
leave
repnz
mov
test
dec
adc
and
mov
ja
in
sbb
stos
test
mov
adc
int
orb
mov
mov
add
js
xor
repz
flds
xchg
js
sbb
jno
mov
cmc
int3
in
faddl
es
and
nop
mov
pop
scas
sahf
sbb
add
jae
loopne
push
and
je
jbe
pop
jecxz
stc
jp
jp
dec
sub
int3
int
pop
orl
push
jno
fldcw
mov
jecxz
in
sbb
pushf
sub
cmc
in
iret
mov
mov
push
sbb
push
fwait
xor
lea
gs
ss
in
iret
addb
mov
inc
aas
inc
movsl
ret
test
inc
add
jae
fdivrp
orl
fisubrs
mov
xchg
dec
mov
into
nop
stc
lock
mov
mov
mov
mov
push
xchg
mov
cmp
mov
inc
pop
fdivrs
pop
mov
sti
call
inc
ja
xchg
shll
sti
sub
aam
dec
aas
sub
sub
pop
out
imul
aad
push
and
int3
sbb
ljmp
lcall
mov
add
xchg
sahf
loop
inc
mov
test
jnp
or
push
mov
xchg
inc
mov
jl
fsubrs
jns
pop
cmp
test
xchg
ret
and
loope
ret
sub
cmp
cmp
pop
aam
mov
imul
xchg
xor
push
cmp
shlb
and
ljmp
xchg
in
rclb
xchg
scas
jl
adc
lret
mov
cmc
mov
das
mov
outsb
cmp
fdivs
scas
jge
add
dec
mov
sub
xlat
or
xchg
rcll
push
data16
loope
data16
adc
pop
fdivrs
lods
outsl
icebp
ss
rcll
aas
adc
outsb
clc
mov
xchg
push
jl
repnz
or
pop
jg
leave
dec
xchg
push
rorb
ret
xorl
lahf
leave
mov
int
stos
sub
or
adc
int
push
xchg
cld
dec
sahf
push
filds
add
aam
imul
jb
aam
lock
das
push
adc
and
ljmp
add
aaa
jne
out
mov
xchg
sahf
mov
pop
lret
fcompl
hlt
iret
rcr
cmp
out
and
xchg
add
mov
mov
test
jg
aaa
scas
pop
icebp
mov
call
fs
inc
sbb
movl
stos
xor
cmpsb
dec
push
xchg
xchg
xor
push
loop
dec
imul
jno
popf
xchg
jne
or
mov
scas
adc
push
daa
mov
fsubl
mov
inc
ja
stos
test
das
mov
lods
xchg
xor
imul
pop
les
mov
pop
pop
inc
fst
cs
mov
mov
popa
std
into
mov
fwait
test
push
adcl
lret
loope
jle
fcmove
mov
dec
push
xchg
cmc
leave
xor
add
and
cmp
push
xor
cmp
roll
dec
xchg
cli
clc
test
jnp
or
repz
cli
daa
dec
mov
mov
adc
xor
sub
mov
xchg
cmp
dec
cmpsb
lcall
sbb
insl
push
stc
xor
cmpsb
test
jge
mov
pop
push
mov
mov
mull
shl
add
or
push
enter
pop
ss
dec
fimuls
loop
mov
lahf
sub
mov
test
repnz
sub
xchg
test
lods
xchg
mov
xchg
mov
scas
inc
cmpsb
jne
sarl
out
sbb
xchg
mov
int3
mov
jb
jnp
pop
add
xor
lea
std
mov
repz
xor
xor
jl
jo
rorl
jle
aas
inc
pop
mov
pop
xchg
cltd
repz
mov
jmp
xchg
subb
xchg
and
test
inc
xchg
mov
fdivr
mov
jge
jge
and
sub
jbe
sahf
imul
xchg
lcall
xchg
xor
mov
test
push
jns
adc
push
pop
dec
mov
xor
pop
xor
lcall
mov
insl
lea
mov
ja
rol
adc
std
xchg
gs
shll
rorl
sub
clc
mov
mov
push
cli
push
mov
test
sbb
pop
sbb
adc
insb
cmpsb
test
inc
and
js
ret
push
and
sarl
shll
pop
mov
mov
insl
jno
lods
xchg
adc
fidivl
xorl
lea
dec
mov
pushf
data16
fbstp
mov
push
enter
repz
daa
repz
enter
les
and
test
cmp
outsb
xor
and
pop
cmp
cmp
and
mov
mov
or
cmc
subl
pop
pop
out
clc
xchg
cwtl
lock
cltd
mov
pop
insl
mov
sub
mov
xor
xchg
aas
enter
les
stos
aaa
loope
jecxz
sbb
aam
adc
lock
sarb
cld
leave
out
in
push
mov
fbstp
pop
fidivrl
imul
es
mov
jo
repnz
or
mov
dec
jne
jmp
inc
sub
xchg
mov
sbb
push
pushf
dec
mov
xchg
mulb
sbb
call
leave
pop
daa
testb
cltd
pop
shrb
mov
add
insl
mov
decb
jmp
ss
fiadds
arpl
jp
inc
or
push
movsb
mov
add
and
in
pushf
imul
fmul
push
and
and
int
xor
mov
fsts
pop
xor
fwait
ret
in
lea
push
pop
mov
lods
xlat
jne
jbe
pop
jmp
push
xchg
sub
add
push
jnp
mov
cli
subb
jb
test
jmp
adc
jecxz
mov
clc
lock
inc
and
xchg
int3
les
lock
cmp
ja
call
jmp
mov
jg
clc
in
ds
fadds
jg
bound
mov
iret
pop
iret
cwtl
jne
xchg
jmp
test
hlt
dec
dec
xchg
je
movsb
sub
xchg
test
dec
dec
jmp
test
jge
loop
nop
sbb
in
cld
sub
sbb
sbb
outsb
movsl
mov
gs
test
sbb
push
mov
jo
ljmp
lds
lock
in
push
sbb
or
sbb
gs
gs
adc
mov
dec
mov
xor
xor
mov
lds
sub
mov
fnsave
sub
lret
cmc
mov
gs
call
rcl
test
sub
fildll
inc
lcall
lock
push
adc
mov
repz
dec
add
mov
loop
insb
out
shrb
scas
xchg
ds
pushf
xor
popa
dec
out
inc
ja
push
ds
push
hlt
mov
add
clc
int
and
sbb
lds
fidivs
dec
cmp
repz
hlt
out
cmpl
cmpsb
mov
xlat
or
jne
xchg
enter
cmp
mov
scas
pop
cld
in
push
or
cmp
lods
cmp
fwait
sbb
jb
ret
xor
out
ds
pusha
sub
in
scas
or
jl
inc
icebp
mov
pop
call
out
out
sti
arpl
stos
jnp
push
in
and
mov
and
inc
int
mov
jg
outsl
jbe
shlb
cmp
imul
and
cmpsl
bound
clc
mov
test
das
and
iret
jle
adc
push
add
fwait
pop
ds
jns,pt
cmpsb
add
fimuls
sub
lea
pop
pop
lahf
fisttpl
fcompl
add
shr
les
jbe
subb
dec
cmp
jl
mov
push
dec
xchg
lret
cltd
stc
and
xchg
nop
imul
pop
mov
mov
push
and
orl
andb
test
mov
fcoms
mov
push
sbb
inc
insb
ljmp
mov
popa
add
das
adc
lock
and
add
cmpsl
repnz
fs
dec
out
pop
dec
push
icebp
scas
pushf
dec
iret
sahf
mov
mov
and
fstl
dec
cmpsb
push
out
sub
dec
movsb
repnz
or
cli
sub
movsl
mov
pop
movsb
into
clc
xor
pusha
scas
aas
insb
fwait
aaa
out
jp
scas
xor
fdivrs
imul
xor
lods
aam
lretw
jp
cmp
in
scas
sbb
dec
insl
inc
lcall
adc
cmpsl
pop
pop
push
dec
ja
out
sub
clc
in
xchg
jnp
inc
adc
bound
push
xchg
add
shlb
mov
dec
icebp
mov
es
mov
and
mov
test
clc
sbb
aam
outsb
cli
push
pusha
rorl
or
dec
and
cmp
mov
and
push
mov
cltd
jmp
arpl
int3
js
cli
jg
out
or
stos
movsl
test
dec
in
es
int
sahf
mov
or
pusha
pushf
popa
jle
lods
xadd
adc
pushf
adc
bound
inc
push
xchg
sbb
push
lods
pop
add
daa
dec
cmc
popa
call
xor
adc
jmp
xchg
push
inc
push
int3
hlt
icebp
xchg
sub
push
pop
cmpsl
popf
sbb
inc
jg
mull
les
negb
pop
cmp
jae
xor
repnz
enter
mov
mov
jge
sar
push
in
imul
push
pushf
call
cmpl
push
xchg
aas
and
lods
int
mov
dec
mov
sbb
sub
jb
or
repz
mov
adc
inc
push
dec
fs
call
push
imul
in
push
hlt
pop
mov
mov
subl
jns
roll
repnz
daa
sub
filds
test
push
popf
pop
fsubrs
js
in
ret
pop
push
icebp
push
js
test
cmpsl
loopne
stos
jo
pusha
es
sbb
xchg
pop
enter
inc
push
cld
sub
xor
cwtl
jbe
cmp
xchg
lds
pop
push
cli
movsb
dec
imul
push
stos
lods
xlat
push
stos
dec
outsl
inc
in
mov
lret
stos
ljmp
lods
int
leave
add
mov
mov
sub
test
jl
andb
and
jae
notl
cmc
notb
xchg
nop
movsb
push
cmp
int3
fcmovu
inc
mov
push
xchg
aad
dec
inc
mov
push
or
push
sbb
adc
scas
int3
push
mov
push
and
pop
insb
xor
sbb
fsubrp
push
push
loope
sahf
js
es
lretw
xor
pop
pop
imul
sahf
dec
cli
ja
popf
shr
in
call
dec
jb
scas
sti
add
cmpsl
lods
popa
mov
insb
pop
dec
sub
call
xor
sub
jnp
mov
pop
push
popf
out
push
into
inc
mov
fincstp
adc
outsb
cmpsl
and
sbb
xor
scas
mov
mov
and
adc
jp
jmp
icebp
sub
and
imul
test
jno
cmp
scas
inc
es
xchg
add
ja
push
jl
stos
mov
push
mov
or
push
bound
idivb
in
fimuls
xchg
imul
shr
aad
xor
shl
fstpt
xchg
xchg
ret
mov
insl
jmp
xchg
ficoml
cmp
mov
xchg
jb
popl
and
lea
rcrl
mov
bnd
add
out
std
stos
test
dec
bound
leave
push
adc
mov
cs
ds
movsb
dec
int3
daa
hlt
or
xorb
cltd
shlb
mov
cmpsl
int
fstpl
jmp
xchg
orl
lahf
lcall
adc
bound
and
xchg
sub
mov
les
push
popa
mov
xchg
dec
fsubrl
inc
enter
popf
push
lahf
mov
sub
push
lcall
inc
pop
ja
mov
mov
adc
xchg
iret
jbe
mov
or
add
fsub
outsl
bound
movsl
inc
int
lods
loope
cltd
sbb
mov
cwtl
dec
dec
fcoml
cmpsb
pop
xor
xchg
mov
mov
ret
cmpsl
in
add
roll
xchg
sbb
xchg
enter
dec
pop
fxch
push
nop
insb
mov
insb
and
xor
rcr
and
test
mov
shr
int
push
pushf
adc
out
loope
cmp
stos
movsb
lock
pop
scas
pop
cmpsb
jl
push
add
cmpsb
aaa
bound
cli
fsubrl
fsubrs
or
cli
dec
cmp
nop
xchg
adc
in
outsb
lock
int3
pop
adc
dec
jo
jno
mov
js
popf
push
incb
mov
rolb
jns
jnp
or
testb
out
push
cwtl
jp
in
jecxz
subb
push
mov
mov
xor
mov
pop
push
jp
mov
inc
cmc
into
test
pop
mov
push
loop
mov
test
inc
repnz
mov
sbb
test
int
imul
imul
les
mov
dec
call
mov
jnp
call
xchg
and
scas
and
ss
and
mov
push
pop
dec
push
outsb
xlat
and
out
lock
pop
cs
jo
in
push
ljmp
imul
sub
ret
ror
lcall
push
mov
fwait
dec
jb
fidivl
addr16
xlat
mov
addb
mov
fwait
pop
jl
dec
ret
push
fsubl
fiaddl
pop
shlb
push
arpl
das
xchg
mull
pop
pop
mov
inc
fcoms
ljmp
in
and
xchg
pop
dec
scas
sbbb
jae
mov
xor
mov
xchg
mov
xchg
popa
mov
mov
sahf
outsb
jecxz
mov
in
addr16
cmp
push
imul
stos
jmp
and
rcrl
pop
pop
add
insb
cmc
push
or
xchg
jge
mov
out
test
xor
jno
push
sbb
or
gs
mov
mov
xlat
enter
clc
pop
popa
icebp
in
push
xor
push
xor
sti
add
mov
dec
xchg
pop
inc
sub
jnp
mov
push
ljmp
mov
test
lds
lcall
jb
popa
xchg
hlt
stos
arpl
mov
ljmp
xor
sub
jl
data16
daa
mov
sub
lods
xchg
dec
xchg
mov
mov
loopne
fisubl
adc
sahf
pop
dec
hlt
dec
loop
inc
adcl
aas
adc
jge
pop
push
insb
mov
mov
dec
lods
dec
push
gs
movswl
mull
loop
xorl
add
xchg
xor
xchg
insl
scas
jns
dec
dec
ljmp
dec
imul
movsl
and
sub
xchg
xchg
insb
loop
int
jne
sub
mov
pop
adc
ja
dec
or
mov
mov
add
jno
stc
xor
mov
test
imul
sarb
jmp
lods
fwait
adc
jg
cmp
mov
cltd
pop
sbb
dec
mov
iret
daa
aad
xor
loope
jmp
addr16
pop
ret
mov
dec
lret
or
fnstcw
cmpsb
mov
sti
shll
jae
addr16
or
pop
dec
or
mov
pusha
inc
fcomp
das
and
outsl
cmp
mov
outsl
int3
pop
test
js
cmp
sub
inc
sbb
add
icebp
scas
and
mov
notb
inc
and
subb
into
xor
and
mov
scas
xor
fwait
sub
sub
push
mov
pushf
inc
xchg
adc
call
imul
mov
sub
lock
and
dec
add
sub
xchg
leave
mov
rcll
fbstp
push
add
adc
jns
sbbb
jae
scas
in
fmull
stos
cmp
pusha
and
dec
pop
xchg
shll
mov
push
xchg
aaa
and
test
psadbw
xor
add
inc
sub
adc
cld
push
cmp
pop
dec
outsl
xchg
pusha
clc
sbb
xor
adc
mov
cs
pusha
mov
dec
pop
inc
ret
mov
scas
pop
incl
xchg
add
scas
inc
stos
int3
mov
mov
fsubp
jne
cmp
addl
pop
test
je
loop
ds
scas
jge
cmp
stos
sar
test
jl
negb
add
add
repz
push
shll
imul
int3
js
xlat
imul
cmp
in
push
cmpl
mov
pop
enter
mov
adc
add
mov
fwait
sbb
sub
dec
dec
pop
jmp
sbb
sub
push
push
popf
in
outsb
dec
lahf
stos
rolb
jp,pn
push
jne
jge
lcall
sbb
cmp
fildll
cmp
test
ret
dec
divl
std
out
or
repnz
aas
and
in
cltd
dec
outsb
fucomip
mov
fimull
popa
mov
test
lds
lods
mov
inc
daa
xor
lock
jae
lock
insl
leave
mov
push
cmp
sbb
out
xor
shrl
cmpsl
push
pop
lock
jae
xor
aam
dec
popa
cmp
push
inc
xchg
mov
cltd
mov
aad
sub
rcrl
xor
aas
xor
jmp
or
imul
inc
lret
xchg
dec
mov
add
mov
and
mov
sahf
in
dec
out
sti
aam
or
fwait
repz
xchg
hlt
adc
xor
clc
ret
jle
inc
fcmovne
sub
insl
cmp
jge
in
pop
clc
pop
mov
mov
cmpsl
push
xor
xor
ror
std
jmp
push
cmpsb
dec
push
rorb
lock
jmp
dec
aaa
push
adc
aam
xchg
shr
push
jne
inc
cmp
mov
or
mov
push
push
iret
lock
jp
mov
push
xor
sahf
or
sub
ljmp
push
mov
push
dec
leave
dec
sub
jmp
ror
test
mov
lds
int
pop
gs
and
ret
mov
dec
stc
cmpsb
fadds
xor
lcall
jge
push
jne
clc
sti
loop
push
ret
pop
out
or
scas
nop
sub
popl
data16
pop
fs
mov
mov
add
push
inc
add
outsb
outsb
inc
cmpsb
mov
xor
jae
adc
add
mov
pop
jl
push
inc
imul
cmpl
and
adc
sbb
lcall
pop
xor
inc
jl
dec
sbb
loope
adc
adc
mov
lcall
xlat
push
mov
jmp
or
mov
mov
add
inc
outsb
jne
into
xchg
push
add
jecxz
sub
aaa
jl
lods
mov
pop
sub
xor
ljmp
lret
daa
icebp
scas
lods
lea
lods
mov
jbe
inc
stos
xorb
xor
sbb
mov
push
pop
xchg
mov
lret
xchg
pop
inc
das
sbb
xor
sbb
stos
mov
leave
and
push
xor
xchg
or
cmpsl
jecxz
and
imul
mov
pop
sbb
add
and
scas
repnz
add
pop
fcompl
dec
add
imul
add
lea
pop
repz
adc
outsl
stc
xor
lahf
ret
int3
pop
fisubrl
repz
int3
aaa
pop
add
cltd
sbb
popf
mov
xor
mov
sarl
cwtl
push
adc
dec
pop
aam
push
jb
jbe
mov
das
or
lea
fiaddl
or
cmp
push
enter
fst
mul
mov
data16
push
xchg
mov
jle
inc
sub
repz
jge
push
add
cwtl
stos
lods
xor
xor
jmp
push
mov
fists
andl
and
xor
iret
shrb
lret
add
push
mov
inc
xlat
jno
xlat
repz
jae
ficoms
loopne
jmp
lret
das
daa
popf
nop
loop
xor
dec
adc
xor
inc
fnstenv
insl
push
dec
test
in
xchg
js
pop
jo
pop
add
xchg
hlt
xchg
or
jbe
lea
dec
dec
mov
sti
xchg
dec
xor
xor
dec
cmp
mov
lcall
jg
mov
cmpsl
push
jl
add
inc
lock
jmp
push
pop
mov
dec
ret
stos
add
fldl
loopne
sub
call
stc
or
leave
std
jne
mov
dec
dec
test
es
ljmp
movsb
cmp
ret
mov
scas
shlb
push
and
test
xor
push
call
mov
cmp
jnp
call
mov
and
adc
leave
and
xor
pop
jg
daa
test
inc
in
mov
mov
cmp
lret
adc
and
pop
pop
cmp
push
js
add
xor
mov
in
jae
out
test
aas
stos
daa
stos
cmp
fwait
ljmp
call
jge
or
test
scas
cmp
inc
jno
fldpi
xor
mov
sbb
out
stos
mov
ret
mov
pop
jne
test
stc
and
fwait
lret
paddsw
fs
mov
pop
mov
push
in
rcrb
addr16
aaa
and
push
roll
enter
push
fxch
sub
or
jno
xor
repnz
xor
adc
idivb
adc
jp
push
jo
xchg
sub
adc
cmp
sbb
popf
aam
and
ret
popa
fldl
sbb
push
cmp
xchg
and
repnz
jle
ret
pop
stc
gs
xchg
sti
hlt
int3
fidivrs
popa
sbb
js
sbb
iret
inc
sar
and
inc
fstp
inc
cli
fcoms
push
popf
gs
fiadds
mov
rcll
ret
stos
push
add
add
pop
enter
mov
add
lock
hlt
lret
jno
jne
jno
test
mov
dec
cmp
inc
jmp
adc
in
test
jecxz
lock
pushf
and
cltd
pop
incl
subb
xor
mov
adc
loopne
testb
mov
leave
xchg
ficomps
jl
scas
inc
inc
ret
orb
into
or
pop
inc
insl
fcmovbe
xor
and
leave
mov
out
icebp
mov
dec
mov
es
jno
test
rcrb
xchg
sub
outsb
imul
mov
popf
sub
xor
sub
sub
jg
out
adc
stos
insl
ds
xchg
cltd
xor
inc
es
xor
je
jle
movsb
sbb
cli
mov
iret
mov
ss
xchg
loop
xor
ss
outsb
jne
or
cmp
scas
xlat
jne
jae
lods
bound
es
sbb
add
mov
ret
insb
push
imul
rclb
nop
dec
push
fwait
push
pop
sub
push
sbb
sub
les
xor
rcrl
cmp
inc
faddp
outsb
jmp
mov
daa
or
mov
lret
ljmp
pop
and
in
pop
push
jmp
dec
pop
mov
sti
pop
lahf
test
inc
outsl
outsb
test
aaa
xchg
push
sub
mov
xlat
sbb
and
push
lahf
sub
add
inc
enter
push
push
repnz
pop
decb
jnp
cltd
adcb
adc
xchg
mov
add
jp
popf
jl
push
popa
pusha
in
cmp
fidivl
jb
push
out
jg
mov
mov
cmp
lds
xor
fbld
in
cmp
mov
in
aas
movsl
push
xlat
mov
pushf
push
imul
and
xchg
fistpll
mov
fisttpl
shlb
lods
loop
mov
xlat
cmp
out
sbb
aaa
call
ljmp
xchg
cli
add
jge
mov
jp
sub
and
dec
sbb
cmp
dec
test
xchg
jne
pop
pop
push
inc
xorl
jmp
lock
stos
mov
idiv
fwait
mov
pushf
js
lret
popf
ret
lret
movsl
push
fnstcw
mov
shlb
mov
out
sbb
cmc
sbb
mov
sti
dec
mov
jns
test
sub
fldenv
mov
ja
dec
mov
fidivrl
xchg
jge
push
sbb
ss
fbld
xchg
imul
push
or
xchg
ret
mov
lcall
push
mov
add
dec
pop
mov
lds
icebp
xor
mov
mov
push
lock
leave
shll
mov
sbb
xor
data16
add
outsl
je
scas
push
int
push
pop
jp
fisubs
arpl
enter
shrl
out
push
pop
adc
in
mov
inc
addr16
push
add
inc
cmpsb
mov
inc
out
xor
dec
pop
sub
add
stc
xlat
mov
pop
frstor
ss
adc
adc
fnstsw
sub
push
dec
pop
lods
or
inc
inc
add
ret
sbb
or
dec
cmp
sub
sbb
xchg
dec
push
push
mov
loopne
push
cli
mov
xor
fs
into
mov
fbstp
xor
mov
arpl
cwtl
mov
mov
jo
movsb
or
cmp
or
iret
add
movsb
rcrl
call
into
in
rorb
xor
fwait
test
lcall
dec
pop
mov
and
inc
push
jne
mov
or
mov
ss
jl
fnstenv
cmpsl
popa
sub
setg
sub
push
loope
pop
jo
xchg
test
cmp
pop
int3
out
pop
xchg
or
dec
aaa
aam
xchg
cmp
xor
xchg
les
and
pop
pop
xchg
mov
cs
mov
sbb
je
jle
and
bound
sbb
pop
push
out
or
sbb
and
fcom
push
dec
or
clc
stc
pop
fwait
repz
xchg
mov
mov
mov
mov
les
push
push
jle
nop
and
sbb
incb
mov
icebp
pop
test
mov
enter
lock
pop
push
imul
mov
cltd
mov
mov
mov
sbb
loope
rolb
xor
rolb
bound
push
pushf
dec
mov
scas
test
dec
mov
jnp
scas
xlat
fwait
sti
mov
mov
lds
fisttpl
jno
jmp
push
xor
sbb
add
mov
lods
adc
int3
mov
inc
sbb
scas
nop
dec
lds
rorb
jns
sti
fsubl
aas
dec
cltd
or
pop
inc
push
cmpsb
aad
dec
push
dec
fsubr
lds
mov
inc
and
ds
aas
loop
in
and
loope
jg
pop
fs
inc
outsb
push
or
jb
and
mov
push
sub
xchg
outsl
lret
jmp
ss
push
cwtl
or
aaa
out
mov
push
xchg
stc
les
lahf
stos
das
inc
or
push
iret
inc
jb
cmp
mov
adc
xor
aam
out
hlt
and
add
lea
add
enter
or
cli
dec
sub
add
mov
mov
inc
je
ret
jmp
jnp
paddb
and
loopne
cs
inc
stc
cmp
out
pop
adc
or
sbb
xchg
push
mov
sbb
cmp
pusha
pop
push
pop
sub
pop
imul
mov
push
dec
iret
insl
pop
sub
aas
jle
jge
lds
push
lret
xor
jg
adc
std
add
mov
into
addr16
mov
push
bound
sub
stos
gs
ret
daa
xor
in
out
lret
scas
mov
sub
push
lahf
jb
inc
test
fstl
icebp
jge
ss
push
mov
test
mov
bound
lods
sti
xor
jae
push
pop
inc
cltd
sub
push
mov
imulb
leave
fstl
out
xor
in
adc
in
sub
clc
jmp
cmc
cwtl
mov
inc
sarl
pushf
aad
popa
fcompl
jae
lret
push
mov
into
pop
adc
add
gs
sbb
arpl
or
int3
inc
cmp
sti
adc
lahf
fst
inc
fmuls
xchg
cmp
sbb
and
ds
rol
sub
test
cmp
ret
rorb
std
mov
in
dec
pop
push
adc
mov
lret
mov
xchg
and
outsb
inc
xor
jnp
sub
imul
mov
xor
fmulp
jae
mov
ja
sbb
push
ret
test
mov
sahf
movsb
push
and
xor
sub
test
push
ficomps
sbb
add
add
fisubl
mov
jo
test
inc
stc
pop
mov
lods
fmuls
xor
push
adc
push
adc
sub
push
push
loope
add
mov
mov
call
outsl
add
lret
movsb
stc
adc
fwait
push
cld
xchg
je
or
push
ljmp
mov
incb
fistps
mov
test
adc
sbb
mov
xor
cltd
pop
cmpsl
lods
aaa
cmp
mov
into
mov
rorb
int
jns
out
out
popa
jmp
push
nop
or
pop
add
adc
scas
sub
imul
sub
aad
and
cmp
jl
stos
es
iret
fs
push
push
mov
pop
ret
or
sar
xchg
rol
lret
aad
test
fs
xchg
hlt
hlt
inc
sub
insb
and
mov
js
in
push
scas
mov
sub
loope
jne
test
and
test
hlt
call
push
xchg
clc
bound
fs
push
add
ja
mov
cli
pusha
movsb
out
mov
xchg
dec
popa
daa
std
pop
pop
inc
add
and
int3
lods
xor
and
mov
cmp
dec
add
and
mov
inc
sub
inc
rcll
push
dec
mov
mov
cmp
sbb
adc
mov
push
push
jg
xor
testb
xchg
jb
std
cmpsl
and
data16
dec
add
sub
inc
sub
jnp
push
scas
inc
popf
xor
loop
outsl
nop
add
loope
and
inc
jae
es
push
xchg
stos
outsl
or
and
in
fidivrl
mov
sbb
aas
xchg
sbb
mov
xor
mov
lds
lret
xor
mov
pop
and
mov
out
leave
xchg
mov
icebp
adc
dec
rorl
out
push
ljmp
test
add
pop
js
xchg
arpl
mov
mov
add
xorl
add
iret
call
jg
push
inc
arpl
push
andb
lds
hlt
xorl
fdivl
or
rcl
lock
inc
int3
popf
dec
jns
fildl
dec
loope
ret
loop
nop
jge
shlb
push
adc
out
out
sub
and
and
scas
rol
push
lock
or
mov
pop
popa
cli
inc
popl
insl
lock
or
jne
scas
dec
add
jp
lock
test
in
dec
popf
fmull
inc
aam
mov
fucomi
cmp
xchg
and
xchg
loop
sbb
pop
lods
mov
cwtl
mov
mov
and
insl
mov
scas
or
xor
shll
xchg
sti
pop
inc
sahf
test
pop
std
scas
adc
test
mov
jnp
mov
or
loopne
icebp
js
pop
aas
sub
jbe
sub
shll
xor
mov
cmc
popf
dec
dec
arpl
mov
xchg
popf
jo
inc
fnsave
sahf
das
shrl
xchg
outsb
xchg
jg
xchg
addr16
gs
lahf
sub
outsl
mov
and
and
push
push
jbe
add
mov
mov
or
and
xlat
cmp
inc
addr16
aad
cld
testb
and
aad
popa
jmp
insb
mov
add
xlat
fwait
mov
movsl
jbe
inc
sbb
xchg
inc
aad
sahf
fwait
outsb
inc
lods
int
jbe
mov
es
mov
loopne
dec
fiadds
imul
repnz
xchg
jns
cmpb
test
sub
add
rcll
ds
sbb
cs
add
push
fldt
sbbb
cmpsl
push
lods
sahf
mov
jbe
jp
out
jl
add
adc
xor
das
cs
pop
out
fs
out
lahf
in
outsl
roll
notb
fiadds
loopne
jne
add
in
sar
add
in
test
xor
or
jne
test
jle
mov
cmp
test
cmpsb
vmwrite
icebp
and
jno
mov
xor
mov
or
nop
jp
xlat
call
pop
pushf
ljmp
loopne
movsb
dec
out
mov
dec
add
idivl
dec
insb
call
aad
out
mov
pop
ljmp
loop
cmp
stc
add
inc
pop
sbb
outsl
mov
mov
add
sub
pop
out
movsb
lock
jecxz
and
dec
aas
sbb
pop
jae
popf
lds
arpl
xor
es
div
pop
xchg
pop
push
cli
aaa
push
sbbb
inc
xor
imul
pop
jp
mov
lods
inc
xlat
insb
stc
jmp
cmp
aad
imul
push
xlat
aaa
iret
inc
out
pop
cmp
cmp
lret
dec
jmp
shlb
xor
fs
pop
rcll
or
outsl
pop
stos
and
bound
hlt
loop
jns
jp
push
lahf
lahf
fsubs
dec
test
or
or
fs
mov
pusha
push
dec
pop
js
pop
test
lock
and
push
icebp
adc
mov
xchg
icebp
jg
imul
ds
pusha
test
and
cmp
fisttpl
add
inc
shrl
pop
cmp
xor
notl
ss
iret
adc
push
dec
fidivl
adc
pop
adc
cmp
mov
pop
inc
fcoms
rorb
hlt
mov
negb
inc
dec
cmpsl
push
movsb
pop
xchg
ss
xchg
rorl
stos
xor
repz
push
mov
sti
je
cmpsl
out
loope
fcmovu
outsl
lret
pop
push
rol
test
js
decb
gs
mov
mov
fistpl
jne
mov
push
push
push
loopne
out
pop
sub
test
jmp
clc
and
stc
adc
rorl
push
inc
aas
pop
mov
in
outsb
outsl
sub
fimuls
sbb
lahf
and
push
out
loope
adc
adc
in
movsl
imul
fs
nop
jo
imul
cltd
fs
pop
test
jg
pop
imul
pushf
in
xchg
fsubl
test
fwait
adc
xlat
loopne
arpl
mov
add
jl
cmp
test
mov
lock
and
adc
mov
push
cli
pop
mov
mov
leave
cmp
cwtl
jno
adc
ret
gs
decl
dec
add
xor
cmp
mov
push
in
and
popa
insl
adc
daa
mov
mov
adc
inc
sahf
stc
jnp
aas
or
test
bound
stc
adc
push
mov
addr16
push
fs
pop
fisttpll
push
jno
inc
stc
sub
shll
sub
in
ss
shr
mov
mov
add
aaa
sub
enter
dec
inc
add
push
pop
push
dec
mov
lea
add
adcb
arpl
loop
cmpsl
sbb
mov
jbe
fwait
rorb
lcall
daa
jge
pop
unpckhps
jle
pop
pop
ljmp
jle
mov
mov
sti
inc
cmp
mov
int3
cmpsb
cmp
lea
mov
xchg
and
pop
lcall
fisttps
das
xchg
in
pop
inc
sub
inc
shrb
mov
add
xchg
mov
ljmp
in
lahf
stc
inc
fldt
push
adc
int3
push
repz
div
sub
xor
xlat
push
or
js
mov
mov
sbb
cmp
into
gs
jge
shlb
add
pop
iret
mov
xchg
dec
fistpll
jbe
pop
fscale
jmp
pushf
mov
xlat
cmp
jg
jl
out
loope
push
test
dec
cmp
fwait
or
dec
push
push
pusha
adc
ret
mov
stc
subb
jle
xchg
icebp
call
jo
fbld
lret
iret
lods
hlt
dec
push
mov
jbe
xlat
dec
ja
es
lea
sub
out
icebp
cmpsb
out
sub
fwait
jbe
sub
sahf
lea
out
add
jbe
cltd
insb
cmp
and
aaa
cmp
push
ret
in
add
iret
in
mov
shrl
lods
int
cmp
xorl
addr16
push
push
dec
xchg
imul
xor
and
mov
xor
pop
or
adc
xor
adc
scas
sti
dec
xor
jae
sbb
in
stc
cmp
outsl
add
sbb
outsl
cltd
and
push
arpl
pop
xor
out
pop
shl
adc
push
xchg
push
sbb
stos
push
adcb
cmpsl
mov
cmp
test
mov
mov
mov
mov
mov
dec
inc
mov
fdivs
enter
les
push
stos
add
mov
dec
aad
ret
adc
ss
adc
movsb
jo
mov
stos
nop
pop
adc
inc
fdivs
dec
cmpsb
setb
and
clc
jle
mov
enter
repnz
jo
rcrb
lsl
xchg
inc
aad
cmp
and
lods
push
rorb
pop
test
and
push
loopne
sbb
cmp
mov
out
inc
cmc
inc
ds
ficompl
xchg
jne
mov
cmp
mov
jmp
test
mov
jno
shll
dec
jecxz
xchg
inc
pop
push
stos
pushf
push
xchg
mov
pop
push
faddl
sub
in
pop
movsl
test
scas
loope
or
fsubl
adc
jmp
cld
shrb
xchg
into
adc
pop
lock
dec
adc
xor
lret
fbld
dec
and
mov
xor
mov
xor
mov
dec
fmulp
pop
xor
popf
cmpsl
shrb
xor
dec
xor
ret
xor
fsubs
insb
xor
mov
mov
dec
or
jno
leave
dec
out
xchg
aas
sti
dec
getsec
shlb
jl
pop
movsb
insl
inc
sbb
push
das
jmp
xchg
mov
ds
out
and
and
mov
cwtl
jno
popa
xor
adc
mov
lds
inc
jne
ret
inc
mov
insl
inc
insl
out
popf
ficoms
fcomps
mov
or
lods
mov
addr16
sub
lods
mov
aam
nop
hlt
lahf
dec
cmp
pop
repz
call
xchg
inc
jle
shl
mov
push
sbb
and
cmpl
add
mov
adc
dec
popf
xorb
sub
dec
mov
popa
mov
rorb
cmc
mov
lods
decl
inc
icebp
pop
shl
shrl
int
rcr
gs
iret
insb
lret
mov
hlt
add
hlt
and
icebp
fsqrt
js
loop
mov
dec
cld
aas
popl
push
cmp
jns
pop
ljmp
fmull
imul
dec
and
leave
pop
push
shll
push
push
aas
mov
shll
fldt
pop
jmp
pop
sub
jnp
or
dec
jp
es
inc
jle
addl
push
dec
in
rorb
mov
out
xchg
dec
lret
ss
or
icebp
xchg
in
mov
xchg
sbb
add
daa
inc
mov
mov
cwtl
pushf
int
sub
test
mov
pop
mov
orb
mov
pop
sub
mov
adc
aam
inc
lods
dec
cmp
add
mov
jge
int
mov
sbb
push
push
mov
xor
xor
movsb
shlb
in
das
xlat
cmp
sub
jge
push
lods
lods
mov
xor
imul
mov
xor
inc
lret
pop
jmp
xchg
xlat
je
fldl
dec
insl
mov
sub
push
inc
push
jp
sub
cltd
adc
lcall
int
jmp
adc
shrl
nop
aaa
lea
lea
cmp
imul
scas
mov
cmp
cli
out
cmp
jecxz
cmpsb
pop
scas
push
xor
sbb
mov
das
mov
push
xchg
jecxz
sub
mov
sti
out
insb
xchg
xchg
xchg
mov
add
adc
mov
fwait
mov
test
test
pop
mov
out
sub
inc
les
sbb
jg
mov
dec
adc
imul
fsubrl
lods
cmp
inc
ret
int
cmp
jl
inc
xchg
mov
cmp
das
iret
daa
fnstenv
fdiv
test
imul
pop
aas
rorl
fisubl
mul
sbb
jmp
jl
xchg
inc
test
inc
sbb
daa
dec
adc
in
mov
jg
pop
jmp
ja
inc
mov
cmp
xor
fwait
sub
add
out
fisubrl
cmp
sbb
xchg
ljmp
aam
lock
into
mov
or
xchg
inc
out
xor
in
xor
mov
sbb
in
mov
shl
mov
cmpsl
lods
dec
shll
sarb
sti
sbb
lods
imul
ret
push
dec
mov
loope
adc
int3
sbb
xlat
fcoms
cmp
int3
test
mov
orl
aas
add
mov
mov
and
lock
sub
mov
in
addr16
or
pop
and
jae
dec
stos
mov
sub
push
xlat
out
push
mov
aaa
cmp
inc
push
adc
out
cs
push
sub
xor
adc
xor
mov
cs
cltd
fs
divb
jg
or
outsl
add
daa
subb
stc
int
add
cltd
ss
and
das
xchg
cwtl
inc
outsl
mov
or
mov
ja
imul
jne
es
xor
push
mov
scas
push
mov
insl
int
popf
xlat
pushf
mov
aam
xor
push
scas
loopne
movsb
push
and
push
mov
nop
mov
ja
bound
fcmovne
js
repz
xorps
std
mov
inc
mov
aam
mov
adc
and
inc
cmpsl
push
test
hlt
or
out
dec
int
mov
inc
mov
repz
out
mov
inc
inc
mov
cmpsl
xchg
jbe
inc
fbld
xlat
mov
hlt
sbb
aas
xchg
inc
je
dec
enter
adc
scas
mov
cmp
test
cmp
push
cwtl
or
xlat
je
adc
call
sti
sbbb
adc
xor
push
mov
pusha
adc
sbb
push
int
fnstsw
lcall
dec
mov
jno
mov
cwtl
mov
dec
inc
add
cmp
imul
in
cmp
dec
sbb
sub
aas
in
loope
sbb
outsb
adc
not
stos
movb
lea
mov
jg
gs
fisubs
negb
ljmp
mov
xlat
in
dec
mov
adc
jo
add
aam
or
mov
subl
cmpsb
pop
shrb
mov
arpl
or
repnz
sahf
enter
pop
xchg
orb
mov
test
addr16
mov
sbb
mov
daa
in
sbb
fsubl
push
and
ret
fldcw
in
add
cmpsl
icebp
cli
js
jnp
xchg
dec
test
scas
xchg
xchg
ret
lock
idivl
daa
xchg
pop
xchg
cmp
inc
and
jo
test
daa
sub
clc
mov
adc
jle
push
sub
je
ficomps
mov
aaa
push
mov
clc
jno
adc
sahf
scas
cli
sub
je
add
test
pusha
lods
xor
ja
mov
popf
sti
push
es
rorl
add
pop
inc
xorb
and
loope
push
dec
push
scas
lea
push
ds
inc
orl
pop
mov
or
cli
cmc
jl
cwtl
or
jmp
mov
pop
mov
movsb
lea
outsl
lea
pushf
inc
addr16
out
fcomps
cmc
lock
add
jecxz
out
lcall
sub
ljmp
or
faddp
popa
inc
xchg
add
mov
pushf
push
rcr
mov
dec
test
lock
mov
push
lods
and
adc
cmp
mov
sbb
roll
xor
fildll
mov
ss
and
out
dec
lcall
jo
fnstsw
aad
push
iret
sbb
push
or
jp
sub
jg
inc
ljmp
aaa
outsl
jnp
out
cmpsl
push
cmpsl
imulb
or
fmulp
data16
mov
in
mov
sbbl
mov
lret
and
lcall
dec
mov
dec
test
js
jl
arpl
adc
outsl
ds
lahf
jmp
std
xchg
dec
adc
fstpl
iret
adc
sti
push
or
sbb
cmp
in
push
jmp
cmp
inc
inc
sbb
outsl
or
push
shll
iret
mov
mov
or
mov
inc
dec
scas
into
stos
outsb
ss
sub
mov
jnp
div
cmp
cmpsb
icebp
rcrl
test
lret
xchg
and
jmp
push
aam
mov
out
repnz
lods
sub
mov
jmp
scas
sahf
out
sbb
xchg
dec
sbb
movsl
push
push
lahf
xlat
test
jge
rclb
sbb
inc
insl
scas
enter
rorl
iret
and
inc
jno
rcrl
add
or
movsl
fbstp
pop
test
jle
push
add
out
aas
stc
cmpsl
daa
cltd
cltd
add
fnsave
xchg
iret
pop
div
mov
ja
pop
jne
daa
test
xchg
rorb
sbb
mov
daa
out
dec
lret
leave
push
test
pop
mov
and
push
mov
mov
inc
pop
xchg
adc
adc
cmpl
call
or
mov
sbb
cwtl
sub
dec
daa
shrb
cmp
push
addr16
adc
or
jecxz
inc
pop
ret
rorl
lcall
mov
dec
jl
rcr
jg
int3
jecxz
pop
and
out
pop
insl
notl
and
add
sub
adc
popa
xchg
cmp
xor
jmp
stos
adcb
mov
cltd
cmp
jle
sub
movsl
fimuls
iret
inc
jbe
pop
inc
test
adc
and
icebp
sbb
mov
hlt
inc
inc
jnp
adc
js
adcb
mov
inc
or
mul
xchg
scas
scas
adc
mov
lods
out
ja
cmp
add
scas
repnz
mov
nop
leave
fwait
mov
outsb
pop
fcmovb
jne
push
add
cltd
xchg
sahf
cmc
jo
jge
dec
in
ret
pop
loope
imul
dec
cmpsl
test
mov
or
sbb
mov
in
sub
mov
mov
pop
cli
sub
xor
bound
sbb
cmp
push
adc
loop
hlt
repz
push
lret
test
inc
dec
and
adc
shl
repz
or
inc
mov
stos
outsb
adc
push
sahf
dec
sbb
out
pop
xor
int
sbb
pop
pop
adc
sbb
lcall
sub
xchg
xor
pop
fmull
test
pop
fwait
adc
push
mov
cmc
rolb
inc
pop
scas
or
dec
adc
jge
jb
push
cmc
loop
aam
xchg
xor
rcr
xor
mov
rorb
xlat
push
fcoms
ret
pop
fcomps
xchg
cmp
test
cmpsb
jbe
jp
mov
jmp
leave
loope
mov
push
loope
mov
mov
push
aaa
add
stc
outsb
pop
push
ja
jmp
stos
xchg
shlb
or
lret
fldcw
les
inc
popa
push
cwtl
add
pop
cmc
lods
lock
andl
cmpsl
lods
leave
and
call
je
cmp
cmp
scas
xlat
ljmp
push
jbe
xchg
xchg
fisttpl
add
cmpsb
and
sub
test
push
mov
pop
adc
mov
mov
pop
aaa
scas
adcl
jbe
push
arpl
fnstcw
mov
mov
mov
insl
sub
xchg
rol
add
pop
mov
pop
dec
mov
loope
push
movsl
jno
aad
or
xor
push
adc
xchg
push
lea
stc
ret
mov
ret
aam
in
es
xor
and
inc
fs
xchg
hlt
mov
and
mov
fstpt
pop
add
mov
out
mov
pop
xchg
xchg
cmp
icebp
push
lea
xchg
push
sti
cs
push
cmpsb
movsl
mov
xorb
cwtl
or
mov
sbb
and
mov
cmp
test
lret
sahf
mov
ret
shlb
and
and
shll
lret
ja
roll
mov
sti
jl
or
lcall
popf
mov
xchg
test
testb
loopne
fildl
pop
cli
push
push
or
fcmovbe
imul
cmpl
repz
push
imul
sub
or
mov
cmp
ljmp
dec
dec
lods
lock
jne
out
in
inc
xchg
pop
shlb
repnz
lret
xor
sub
mov
pop
outsb
aaa
sbb
clc
mov
fnstenv
inc
jnp
cmpsl
lods
pop
iret
cmc
add
add
ret
dec
nop
pop
sahf
add
pop
push
push
jne
sub
sbb
cmp
push
xchg
xchg
dec
xchg
test
test
popf
inc
pop
adc
mov
jecxz
mov
je
dec
loopne
adc
das
sub
and
pop
test
xor
call
es
or
inc
negl
outsb
mov
shrb
jne
movsb
popl
and
sbb
aaa
popa
fwait
jns
aaa
imul
aad
fidivl
push
loopne
imul
xchg
mov
sbb
xchg
pop
loop
mov
fstpl
outsb
sahf
std
testl
movsl
xchg
sahf
outsl
pop
sti
test
xor
mov
pop
in
jno
rcl
mov
test
arpl
sbb
lret
fwait
xchg
mov
jl
xor
mov
mov
rcll
inc
call
stos
mov
je
pop
lcall
faddl
jg
mov
nop
mov
xchg
pop
mov
adc
sub
pushf
cltd
push
ja
cmpsb
dec
dec
xor
inc
dec
test
and
iret
movsb
stos
or
or
sub
icebp
aam
xchg
sub
stos
fs
stc
fmuls
pop
fdivrs
daa
or
movsl
jno
cmpsl
loop
repz
adc
subb
mov
bound
inc
xor
xor
hlt
push
test
out
lcall
push
inc
mov
jbe
lods
sub
push
mov
push
jle
xchg
pop
js
pop
je
dec
inc
xchg
call
cli
sub
pop
xchg
mov
insl
add
xchg
adc
add
jae
test
push
sbb
push
or
mov
push
xor
incb
outsb
push
test
loope
mov
or
stos
lods
jg
testb
xchg
sbb
ljmp
push
and
xlat
push
sub
mov
jno
push
cmp
adc
push
and
push
mov
test
gs
aad
mov
sub
push
push
push
mov
fisubrs
add
mov
enter
repz
push
aam
mov
sbb
mov
call
js
sbb
repz
jne
push
mov
sub
pusha
jge
xchg
loope
push
test
push
push
sub
pusha
sbb
mov
cmc
sub
dec
mov
leave
add
ja
push
inc
adc
lcall
or
loopne
xor
enter
push
sub
add
repnz
sub
add
cmp
push
xchg
lods
arpl
mov
cmpsl
jne
lods
lock
stos
pushf
lcall
sub
dec
mov
sbb
xchg
pop
cmc
out
rclb
mov
pop
sbbb
sbb
mov
xchg
sub
or
leave
outsl
and
lds
add
dec
pop
pop
in
push
movsl
aad
data16
ficomps
lock
inc
inc
fnsave
adc
out
dec
dec
fcompl
xchg
in
cmp
test
inc
imull
arpl
mov
push
and
scas
andb
es
imulb
mov
xchg
stos
inc
ljmp
mov
in
lea
add
shlb
das
sub
ljmp
rcll
sahf
push
pop
and
mov
dec
lret
fnstsw
xor
test
and
mov
sti
jne
ljmp
mov
xchg
ja
sahf
rep
test
int
dec
mov
divb
sbb
xor
inc
mov
mov
pop
inc
icebp
xchg
or
scas
or
or
jb
adc
fldcw
dec
jmp
imul
sbb
cltd
mov
xlat
sub
pushf
inc
and
into
std
das
insl
sti
inc
push
stos
inc
mov
jbe
je
repnz
fdivp
aad
xchg
inc
xchg
inc
mov
test
mov
test
hlt
push
lock
adc
add
jno
sbb
sbb
push
out
fdivrs
lcall
loope
xor
test
mov
arpl
add
mov
inc
cltd
push
mov
xor
sub
push
xor
stos
lods
push
push
ret
cmp
push
mov
pop
data16
mov
xchg
xchg
mov
mov
aaa
mov
pop
mov
jbe
rcll
push
ja
jecxz
insl
xchg
jg
dec
mov
cwtl
pop
enter
cltd
cmp
xor
jns
and
adc
mov
sbb
sub
push
jnp
push
dec
cmp
xlat
xchg
inc
iret
and
add
aas
bnd
push
testb
and
popa
js
pop
inc
inc
hlt
xchg
add
test
inc
adc
cmp
shlb
or
shll
jne
adc
jnp
fst
jp
cmp
in
jg
ss
mov
or
gs
xchg
xor
mov
mov
mov
outsb
popf
or
inc
pop
je
push
xor
sbb
mov
insb
ss
outsl
test
push
nop
loopne
sti
mov
jmp
add
loop
add
sbb
add
sbb
sbb
mov
dec
and
xchg
imul
pushf
mulb
lods
test
out
imul
hlt
xor
jmp
fisubl
sub
outsl
fnsave
add
in
stos
fs
sarl
sub
cld
fcomp
pop
movsb
or
push
jne
movsb
insb
xor
xlat
inc
mov
push
mov
xchg
out
pusha
arpl
push
dec
mov
inc
and
mov
mov
mov
movl
cmpsl
sub
cmp
mov
or
or
fcoml
aam
cltd
int
int
mov
xor
dec
mov
adc
inc
xchg
testb
jne
std
or
mov
stc
fmuls
mov
movsb
mov
add
adc
lds
ljmp
fwait
sub
lock
vmread
sti
mov
xor
inc
adc
lahf
test
lret
adc
icebp
stos
sbb
mov
mov
mov
fstpt
jmp
mov
lret
ds
and
popf
inc
pop
xor
cmp
pop
jecxz
push
bound
sub
ja
out
insl
fucomi
add
negb
imul
scas
and
iret
leave
ds
dec
xlat
lods
movsb
sbb
sbb
dec
js
xchg
jb
push
adc
xchg
rorb
push
dec
test
dec
call
fcomps
pop
gs
loop
arpl
mov
push
shlb
cmp
aad
fisubrs
adc
clc
ret
cmp
cld
mov
imul
xor
aad
pop
cmp
push
jbe
mov
fwait
pop
adc
out
add
push
es
mov
mov
shlb
add
cmp
cwtl
xchg
repz
sub
push
lds
xchg
in
fst
scas
out
outsl
xlat
push
repz
xor
dec
xchg
jmp
faddl
jbe
bnd
inc
leave
xchg
adc
xchg
sub
pop
jmp
mov
lcall
shrl
cltd
mov
popa
jge
mov
aad
add
outsb
add
nop
lea
and
jno
jo
jb
xchg
arpl
ss
cltd
push
adc
xor
pop
mov
int3
test
ss
fld
adc
insb
mov
xchg
push
add
ret
add
sbb
push
ja
leave
pop
pop
xorb
imul
lods
push
das
jg
jne
scas
lret
mov
xor
lods
mov
pop
in
pop
out
dec
in
stos
adc
pop
add
out
mov
mov
mov
jns
pop
dec
stc
outsb
adc
stos
out
adc
movsl
inc
lods
pop
dec
loope
es
pop
ret
addr16
push
int3
jg
jo
dec
ret
cs
sbb
js
or
ja
scas
aaa
xchg
xor
push
bound
push
xchg
xchg
js
inc
push
push
and
or
dec
jo
outsb
call
cli
in
bound
pop
pop
mov
jae
jno
jo
inc
hlt
shl
test
lods
cli
int3
popf
mov
test
adc
mov
repz
dec
subb
xchg
and
add
or
xor
xor
sub
sub
and
das
sbb
enter
add
mov
mov
lahf
fcompl
stos
mov
dec
push
add
pop
inc
gs
lret
pop
push
outsb
adc
shl
jns
leave
xchg
rcr
insl
lods
sub
inc
out
test
fisttpl
xchg
pop
push
subl
pushf
or
movsl
mov
lock
xchg
mov
sbb
pusha
imull
or
loopne
stos
xor
inc
sub
hlt
lret
add
addb
mov
xchg
add
jne
dec
subb
stos
jnp
mov
xchg
jne
xchg
fcmove
inc
imull
ljmp
adc
mov
dec
push
and
jp
cmp
sbb
cmp
insb
jecxz
cmp
push
add
mull
jecxz
sti
lods
pop
ja
aas
data16
sahf
lods
in
les
imul
lret
ret
dec
lcall
mov
mov
sub
sbb
loop
ss
fldl
add
dec
repz
lcall
mov
mov
icebp
outsb
sub
pushf
fstl
outsb
add
and
pop
sbb
xchg
pop
repnz
xor
sbb
pop
lods
mov
and
dec
jbe
xchg
mov
gs
xchg
xor
in
sub
out
mov
jg
jl
test
sub
pusha
inc
in
jmp
addr16
or
test
sbb
mov
sbb
adc
mov
adc
dec
fcompl
jl
dec
test
jbe
es
mov
adc
or
cli
icebp
xchg
imul
imul
cmpl
push
std
dec
push
mov
test
mov
mov
into
rorb
push
xlat
pop
mov
popf
fwait
xor
mov
or
stc
mov
inc
and
push
shrb
ret
mov
movsl
ljmp
jmp
pop
mov
popf
jle
popf
dec
cmp
jno
cmp
pop
loop
jns
out
xchg
insl
inc
dec
cmp
add
mov
add
and
jmp
xchg
sahf
xor
or
xchg
xor
pushf
ljmp
xlat
push
movsl
pushf
ret
lock
fbstp
sbb
out
cmpsb
jnp
negb
xchg
adc
pop
imul
enter
xor
dec
scas
mov
vphadduwd
mov
dec
push
add
sti
out
pop
pop
push
das
in
cmc
leave
or
es
imul
cmp
shll
cmp
pop
clc
adc
inc
jmp
cmp
push
lret
sti
sbb
outsl
mov
fnstcw
mov
cmp
push
out
and
imul
sub
jmp
add
les
arpl
dec
xchg
test
mov
xchg
gs
adc
outsl
xchg
mov
enter
bound
add
ja
int3
fwait
or
push
out
pop
add
rolb
cmp
aaa
daa
les
stc
jno
or
and
add
fsubrs
int3
andb
xchg
fcoms
cwtl
pop
inc
shl
icebp
shlb
imul
push
clc
pop
ss
xchg
xchg
divl
sarb
or
mov
push
idivb
push
push
leave
sbbb
jo
ror
test
xchg
into
hlt
movsl
pusha
int
enter
iret
stos
pusha
mov
push
popf
aaa
dec
push
je
xchg
and
push
cmpb
imul
enter
std
fwait
int3
fwait
pusha
mov
xor
sbb
pushf
mov
and
outsb
cmp
xchg
test
sbb
or
sub
scas
aam
xlat
enter
aad
lea
sbb
xchg
or
clc
outsb
xor
test
into
push
or
mov
inc
test
outsb
mov
out
stos
jmp
pushl
sub
cmc
dec
sbb
and
cmp
pop
adc
jno
push
ljmp
fwait
iret
test
mov
or
cmpsb
cwtl
incb
insl
mov
iret
fdivrl
bound
not
xor
mov
insl
mov
inc
cmp
and
jp
dec
loope
insb
les
daa
push
fsts
rol
aas
mov
mov
bnd
push
icebp
push
int
mov
popa
fldenv
mov
sbb
and
call
xor
js
sub
adc
cmp
fisttps
xchg
cmp
test
aaa
adc
jl
inc
push
xchg
and
addr16
and
xchg
dec
aas
aad
or
push
ret
mov
mov
test
dec
jo
adc
loop
pop
cmp
out
xchg
pop
div
dec
add
mov
xchg
lods
stc
scas
les
xchg
lea
jo
sbb
add
ds
inc
and
inc
bound
push
dec
xor
mov
stos
dec
fsubp
std
inc
adc
xchg
aaa
xor
jno
sbb
popl
add
cmp
inc
cmp
sbb
add
xor
sarb
mov
shll
shrl
xchg
addr16
or
mov
cmp
xchg
cmp
mov
incb
push
cwtl
adc
adc
dec
or
sub
pop
mov
cmpsb
adc
sbb
mov
gs
adc
pop
adc
pop
push
add
mov
lds
sarb
adc
mov
xchg
mov
dec
jmp
jmp
dec
xor
pop
jno
cmp
inc
in
sub
iret
and
mov
xlat
fxch
mov
lahf
mov
shlb
loopnew
and
stos
fwait
mov
mov
or
and
in
out
clc
gs
pop
lcall
xchg
jne
stos
or
shlb
call
outsb
int
jnp
or
cld
out
xchg
shll
aam
inc
fildll
push
dec
or
jecxz
jmp
lret
cmp
xchg
popf
leave
jp
out
in
dec
xor
mov
cli
aas
inc
add
mov
inc
cmp
add
mov
repz
mov
mov
movsb
push
pop
or
out
push
mov
cmp
fmuls
cmpsb
jecxz
add
adc
stc
mov
or
inc
jbe,pn
dec
lahf
jge
outsl
mov
movsl
add
lods
aaa
mov
loopw
sbb
cld
mov
add
sti
xchg
call
je
dec
mov
hlt
xor
in
orl
xchg
stc
das
xor
clc
sbb
pop
and
shrb
push
inc
sarl
mov
outsb
sbb
xchg
mov
adc
or
rclb
fs
inc
xchg
fwait
lsl
into
insl
testl
add
les
jbe
test
jp
popa
mov
jns
movsl
xorl
jl
jns
shl
in
leave
pop
loopne
loop
adc
mov
dec
mov
adc
lods
loop
mov
xor
jg
add
add
loop
pop
mov
addl
xchg
ret
and
icebp
add
mov
lahf
hlt
outsb
add
or
sbb
outsl
rorb
inc
repz
mov
cmpsl
jecxz
mov
fcompl
ss
ficoms
sub
add
aam
mov
xor
xchg
mov
mov
xorl
xchg
inc
cmp
push
mov
adc
bound
adc
mov
jb
jne
xchg
popf
leave
ja
xchg
test
aaa
int
loopne
mov
jbe
cltd
sbb
lret
daa
outsl
jne
dec
mov
test
clc
fadd
cmp
data16
gs
jmp
cmp
pop
cmp
xchg
test
shl
push
imul
push
pushf
xlat
cmpsb
adc
inc
sbb
aad
pop
repnz
test
cmp
jl
sbb
jns
mov
decb
outsl
push
xor
push
mov
addr16
out
jg
or
les
xor
pop
fists
inc
sub
adc
mov
into
mov
sub
cmpsb
loope
loope
jne
inc
and
ror
int3
stc
sub
mov
pop
movsl
arpl
loopne
xchg
add
mov
subb
push
repz
stos
leave
daa
jle
dec
sub
dec
js,pt
in
dec
fildll
gs
rcl
add
repz
mov
adc
movsl
fs
enter
aam
cli
daa
push
push
add
js
jns
repz
push
sbb
test
hlt
sbb
inc
ds
cmp
inc
add
cmc
and
lock
jbe
and
insl
mov
inc
and
aaa
mov
mov
sbb
mov
jp
ret
inc
mov
dec
cmpsl
lcall
pop
les
push
in
ret
dec
dec
jg
pop
hlt
cmpsl
andb
sub
add
test
adc
and
es
pop
dec
mov
sub
sbb
aaa
jecxz
jl
in
xor
push
inc
sahf
sub
insb
mov
jnp
and
loope
push
sub
add
jno
rcl
jbe
sub
mov
and
jmp
jp
adc
popf
aad
xchg
mov
popa
xor
fadds
pop
ja
jbe
loop
dec
out
in
push
xor
push
and
xlat
call
sub
outsl
jecxz
les
or
test
cwtl
loop
outsl
pop
pushf
outsb
in
mov
or
stos
push
out
sbb
push
out
xchg
or
icebp
adc
cmp
mov
leave
imul
cmp
push
mov
push
repnz
mov
rclb
test
and
scas
cmp
in
ljmp
lcall
lea
mov
incb
and
imul
mov
add
sbb
aad
ja
aad
cmpsb
xchg
dec
cld
lods
cld
jp
mov
push
mov
das
push
inc
lret
jnp
add
mov
pop
loop
in
add
das
pop
sbb
aaa
dec
inc
sbb
cmc
std
xchg
divb
clc
mov
pop
enter
jmp
mov
gs
scas
ljmp
das
push
pop
movsb
insl
dec
jae
sbb
hlt
xchg
movsb
push
sub
sub
int
mov
sbb
fwait
add
sbb
rol
js
aam
sbb
imul
xor
loopne
adc
cwtl
je
call
enter
jl
xor
dec
pop
pop
frstor
data16
or
adc
adc
imul
xchg
add
mov
sahf
xchg
jbe
dec
and
stc
aam
fistpl
lcall
xchg
inc
addb
jae
cli
cmp
mov
mov
leave
cmpsl
mov
mov
adc
clc
and
notl
fisubs
sbb
xchg
mov
sar
shlb
dec
push
mov
jbe
test
push
inc
ret
sbb
mov
push
mov
mov
push
jmp
lods
push
cltd
jbe
sbb
mov
inc
mov
pop
xchg
or
fwait
sub
push
jle
mov
cmp
mov
cmpsl
andb
inc
fnstcw
mov
je
mov
add
lret
dec
bound
ret
sub
inc
inc
popf
pop
sub
push
fldenv
in
xchg
fstp
xchg
inc
add
fcmovnb
inc
pop
pop
lret
or
insb
incl
and
ficomps
out
dec
insl
or
xor
xorl
rcr
lock
xchg
inc
mov
or
loopne
icebp
popf
sub
rcll
mov
sub
cmp
in
mov
stc
cwtl
out
jmp
mov
sti
pop
nop
lcall
and
mov
shlb
daa
fwait
das
clc
lret
dec
dec
rcrb
push
or
jne
jb
dec
out
sti
push
inc
and
add
and
jb,pt
arpl
xchg
in
mov
dec
sbb
insl
shrb
add
mov
fdivrs
xor
pop
arpl
je
mov
jae
mov
call
cmpsb
loope
mov
jbe
cmp
jmp
or
push
adc
push
test
add
mov
mov
pusha
sti
jae
and
adc
cs
ss
mov
xchg
add
test
lock
cmp
out
xchg
and
ror
stos
test
dec
pop
out
mov
add
lret
jmp
push
mov
leave
nop
mov
push
int3
push
addb
fstpl
sti
push
aad
jae
pop
mov
test
pop
dec
aam
daa
shr
sbb
cmpsb
jmp
push
fdivrs
shlb
jns
rorb
in
pop
lea
xchg
pop
jnp
out
jp
pop
xor
xchg
mov
inc
in
mov
cmp
mov
or
imul
fwait
cs
mov
jp
movsl
pop
push
jbe
test
fisubs
movsl
gs
inc
pop
xchg
not
aaa
aaa
jmp
fisttpll
iret
jge
mov
jp
xchg
add
aam
or
inc
pop
inc
jp
or
stos
fwait
push
fiaddl
mov
push
ret
push
dec
loope
int3
push
add
out
out
stc
jno
testb
pop
add
fs
or
fmull
andl
or
jns
roll
mov
sub
stc
pushaw
and
pop
mov
mov
ja
repz
cmc
mov
push
add
inc
int
cmp
outsl
xchg
lret
jno
shlb
inc
outsb
pop
mov
pop
xor
cmp
cmp
pop
jecxz
and
es
jp
pop
mov
and
es
decl
loopne
mov
imul
dec
cwtl
xlat
or
adc
xchg
int3
cmp
mov
jns
cmp
lcall
sub
clc
in
sub
push
cmpsb
imul
pop
inc
shrb
or
xchg
fisubrl
daa
ret
sbb
xor
aaa
mov
jmp
cmp
sub
movsl
jae
or
pusha
les
jl
ljmp
push
mov
sub
in
ljmp
aas
xor
cmovle
cmp
dec
mov
aam
aad
or
popf
jnp
lock
fdiv
mov
ja
mov
pushf
dec
cmp
cld
jle
rclb
jle
shlb
and
add
xor
fcoms
fsubs
pop
insb
dec
jp
pop
lret
pop
subb
lcall
cmc
test
jecxz
push
test
fs
testb
test
data16
cli
psubw
popa
mov
jno
inc
dec
adc
lock
jle
aaa
mov
lds
xchg
push
popa
sub
pop
shlb
popl
xor
bound
sub
lods
dec
mov
jae
dec
decl
jnp
sub
cmp
dec
jo
shll
mov
loopne
inc
xchg
daa
sti
push
mov
enter
gs
jnp
cmp
push
pop
lods
sbb
addb
rclb
mov
shr
daa
scas
or
push
push
add
out
and
sbb
repz
in
rcrb
jnp
stos
mov
and
mov
xchg
addl
les
cmpsl
mov
ljmp
pop
xchg
pop
outsl
pop
jg
inc
rcr
mov
jmp
lods
push
outsb
pop
xor
in
xor
mov
ret
dec
loop
sub
push
add
lret
pop
sbb
mov
out
add
out
cs
sti
mov
stos
cwtl
dec
sub
cmpl
arpl
dec
roll
sub
arpl
add
mov
cmc
lahf
xorb
fisttpll
sarb
fwait
sbb
adc
mov
test
adc
hlt
inc
in
ror
test
orb
outsb
jae
pop
xchg
push
add
fbld
xchg
cld
add
jns
fldenv
iret
data16
imul
iret
int
and
lea
mov
jo
clc
cmpsb
lea
in
and
lock
rcrl
test
sub
sti
in
andb
stos
xor
push
push
push
inc
in
adc
setne
add
mov
bound
std
cmpsl
sub
push
movsb
cmp
mov
imul
pop
push
jecxz
cmp
mov
aad
inc
loop
cmp
in
adc
add
and
push
dec
data16
into
or
loopne
push
loope
push
leave
lods
pop
xlat
and
js
repnz
inc
fstl
lret
mov
or
pop
or
pop
repz
lret
push
nop
lock
inc
add
pop
mov
mov
lock
and
push
aad
hlt
std
mov
out
adc
xor
push
popa
sub
xchg
stos
sbb
fld
xor
fnstenv
stc
xchg
loop
jp
jle
dec
mov
je
cld
mov
xchg
mov
add
jnp
roll
mov
scas
repnz
iret
gs
sub
popa
jle
xchg
or
jle
sbb
and
inc
inc
cmc
and
or
cmpsl
popa
aas
cmp
outsl
adc
pop
test
push
jge
mov
pop
pop
outsl
mov
mov
inc
pop
sub
popa
xchg
movsb
pop
lods
outsl
mov
cmp
adc
into
cli
fidivs
in
shll
adc
pop
adc
or
sub
xchg
ljmpw
dec
test
cltd
fstpt
pop
mov
out
pop
call
int
popa
lahf
mov
rcll
xchg
testl
ljmp
aaa
in
xchg
mov
cld
jp
dec
in
ret
adc
push
and
stos
lret
hlt
jg
jbe
push
or
in
or
orb
and
mov
lcall
test
data16
dec
push
sub
xchg
xor
repnz
mov
pop
xor
jnp
sbb
popa
and
cmp
rorl
or
inc
pop
int3
stc
or
loopne
stos
test
ficoms
outsl
jae,pt
cmp
iret
inc
daa
lds
adc
imul
pop
mov
xor
dec
ret
mov
mov
or
insb
int3
xor
jne
mov
push
xlat
leave
lcall
popf
movsb
data16
leave
fwait
xchg
ret
clc
repnz
hlt
adc
insb
inc
mov
stc
stos
sbb
test
dec
testl
test
test
mov
stos
jle
cmp
shll
popf
insb
mov
sahf
shr
aas
pushf
imul
aaa
fisttpll
cld
xor
sub
jae
adc
xor
cmp
les
jle
rcr
xor
cmp
add
leave
sub
pop
stos
rcr
jae
fisttpll
stos
pusha
lods
push
icebp
cmp
add
iret
popa
in
cmp
jb
lret
test
mov
lods
hlt
lock
je
nop
ss
mov
push
xchg
daa
js
nop
stc
insl
pop
insl
sti
inc
test
mov
rcl
cmp
orl
mov
jne
sub
shrl
mov
xchg
icebp
xlat
cli
mov
fcoml
in
nop
dec
clc
jnp
mov
das
ficoms
push
stos
inc
mov
push
cmpsl
xchg
cltd
rol
les
decl
aas
mov
ljmp
cltd
fisubl
test
xor
or
xchg
call
xchg
mov
out
inc
xor
repz
fsubrl
xor
aas
push
loop
outsl
and
mov
das
xchg
pop
shrl
pushf
into
lea
cltd
fimuls
push
sub
cmpsb
jnp
jle
mov
pop
js
cli
pop
ror
stos
mov
mov
loop
fwait
jnp
jge
scas
inc
push
or
out
outsb
mov
mov
les
psubw
jp
push
out
sbb
sub
popf
test
out
addr16
inc
mov
repnz
cmp
inc
stos
scas
js
cmc
iret
dec
call
negl
scas
sti
shl
les
sahf
jae
lret
push
aam
int3
pop
repz
xor
and
pop
cmp
ficoms
inc
push
cmpsb
sub
mov
ss
add
xchg
add
outsb
cld
cltd
sarb
sub
fbstp
inc
mov
test
adc
mov
aas
pusha
push
cmp
mov
dec
sub
out
sub
add
mov
ror
dec
sti
sub
inc
movsl
loop
mov
mov
popf
adc
mov
jo
push
inc
mov
inc
ljmp
pusha
dec
sar
push
dec
jg
jae
cwtl
ss
iret
nop
push
jnp
test
lods
ss
dec
outsl
and
les
push
jecxz
fdivr
bound
lret
xchg
ror
cmc
das
fs
insb
int3
cld
push
pop
fisttpll
aaa
bnd
rclb
mov
pop
xor
sti
pop
std
sti
jns
mov
aad
add
xor
push
xchg
rcrb
or
popa
inc
mov
push
mov
icebp
inc
sbb
and
inc
arpl
dec
sarl
addr16
stos
shll
lret
mov
fcmovnu
sarb
icebp
sub
dec
mov
mov
sub
sbb
jp
mov
loope
adc
popa
ljmp
dec
xchg
call
nop
adc
mov
faddl
sub
sub
shlb
xchg
sarb
sub
sbb
cmpsb
bound
xchg
in
pop
inc
movsl
imul
daa
jge
je
fcomps
add
pop
mov
mov
insl
adc
or
dec
xor
repz
cmp
sahf
inc
push
movsb
xchg
xor
xchg
or
pop
sahf
push
scas
ljmp
push
pop
mov
jae
jb
loopne
or
out
rorl
sbb
inc
sti
push
jbe
scas
and
mov
dec
hlt
lret
dec
insl
aam
xchg
jge
jae
jp
out
arpl
clc
pop
mov
ret
jb
mov
cmp
and
movl
loop
fdivl
push
icebp
aaa
mov
sbb
pop
bound
and
jp
cltd
int3
mov
ss
dec
dec
add
int
xchg
pop
je
mov
icebp
sbb
push
mov
jp
into
jnp
ffree
adc
lret
push
sub
repnz
outsb
test
mov
jne
clc
cltd
dec
outsb
jae
sbb
test
pop
scas
mov
push
pop
jno
sub
adc
jmp
and
arpl
jbe
fs
jl
sub
inc
push
mov
cmp
add
clc
sbb
xor
mov
repnz
adc
mov
rol
enter
daa
pop
mov
xor
ficoms
mov
and
jb
pop
fcoml
sbb
mov
addb
jl
mov
mov
scas
rorl
inc
test
adc
test
or
sub
push
cmp
mov
leave
adc
out
imul
mov
aas
ds
ret
push
lds
push
adc
jno
dec
insb
xor
jle
sub
scas
pop
push
dec
mov
pop
mov
sahf
inc
and
xchg
dec
clc
adc
xchg
sbb
xchg
jle
les
divb
dec
insl
xor
ret
xchg
movb
jecxz
xor
mov
mov
inc
mov
push
pop
sbb
cltd
pop
out
jae
mov
and
lahf
in
testl
pop
ss
cmpsb
jbe
adc
pusha
testb
repnz
std
nop
dec
add
lahf
sbb
mov
pop
or
shrl
jne
lahf
push
loopne
outsl
mov
bound
je
push
lock
leave
xorb
mov
add
push
jns
inc
sub
movsl
mov
sbbb
iret
jmp
addr16
mov
loop
dec
pusha
add
lds
mov
and
je
sbb
ret
scas
es
and
into
xchg
inc
xor
add
test
js
popa
add
inc
xor
dec
sub
and
loope
mov
lahf
pop
movsb
push
mov
stos
sbb
mov
cli
pop
add
xchg
ret
aam
int
cmp
jo
adc
mov
out
rolb
enter
in
rcr
lret
cwtl
dec
inc
faddp
imul
jnp
xor
inc
movsb
aad
fistps
ss
call
test
jl
cld
mov
and
subb
stos
inc
dec
jnp
fdivrp
fsubrl
xchg
popa
pusha
add
add
dec
push
pop
sub
repz
test
dec
in
pop
in
cmp
mov
pushf
add
mov
mov
mov
fstpt
jecxz
push
or
xchg
sub
and
push
clc
add
xor
sub
inc
or
jecxz
sbb
and
call
incl
jnp
int
in
mov
leave
dec
ljmp
imul
dec
xor
sarb
icebp
sbb
fwait
sbb
ficompl
xchg
aad
mov
xchg
loope
xor
cmp
xchg
sub
mov
cmp
jne
mov
push
aaa
nop
xchg
in
xchg
popa
push
mov
xor
sti
and
notl
das
popf
push
leave
cltd
adc
imul
les
pop
inc
das
pop
hlt
repnz
push
mov
dec
dec
fwait
pop
enter
faddl
cwtl
in
and
add
sbbl
xchg
lcall
xlat
adc
dec
mov
icebp
adc
cmp
push
clc
or
out
hlt
push
popf
enter
add
leave
push
out
jnp
or
xor
sbb
xlat
out
xlat
call
jg
std
ret
pushl
loope
sti
and
int3
mov
icebp
push
stc
popf
pop
inc
arpl
adc
std
adc
movl
pop
and
cmpb
out
notb
and
inc
pop
std
inc
push
outsb
xlat
jo
lea
mov
xlat
out
ret
jns
pop
ret
sti
adc
xor
pop
mov
push
movsb
jbe
inc
cmpsb
lret
nop
popa
pop
pmaddwd
or
mov
ja
or
mov
jae
cli
outsl
movsb
add
xchg
push
or
mov
mov
lods
sbb
iret
lods
push
cmpsb
roll
movsb
sbb
sub
daa
cmpb
pusha
lahf
jo
adc
jno
inc
and
je
cld
fisttpl
outsb
popa
xchg
stc
inc
xchg
in
fucom
push
es
dec
adc
fisttpll
cmp
add
lret
ret
adcl
pop
das
jmp
mov
pop
xchg
cmp
aaa
test
scas
iret
mov
add
mov
loope
outsl
daa
inc
mov
cmpsb
ja
iret
xchg
in
sti
adc
bound
inc
push
sbb
lods
mov
jno
pop
call
mov
lock
rolb
push
mov
sub
lcall
adc
push
in
scas
jecxz
sbb
in
stc
sbb
xchg
jmp
lock
inc
dec
gs
jae
sub
insl
xchg
ds
dec
inc
cmp
mov
mov
repnz
inc
cld
push
pop
sub
xlat
sub
jg
cmp
inc
jmp
add
sbb
sub
and
nop
xchg
lahf
lret
jmp
lcall
xchg
stos
sarl
loope
bound
fdivrs
adc
mov
rolb
scas
cmp
xchg
bound
jp
in
mov
rcrl
pop
int3
xor
add
daa
cmp
testb
scas
std
inc
out
xchg
nop
lock
int3
cs
jg
jg
rclb
inc
add
cmc
dec
testl
cmp
or
xor
test
lcall
jnp
cmp
mov
lcall
shrl
cmp
mov
cmp
push
lea
adc
stos
jo
popaw
addl
push
lahf
mov
mov
imul
sbb
or
outsl
outsb
add
ja
rcrl
scas
ja
inc
jo
loope
cs
add
imul
test
js
hlt
jae
hlt
mov
pop
add
jecxz
mov
xchg
cmpsb
ficoms
stc
dec
cld
movsb
int3
cmp
push
adc
aas
iret
pop
add
xor
in
sbb
pop
jp
inc
inc
dec
jmp
mov
mov
scas
add
daa
aad
loope
dec
mov
arpl
jmp
mov
stc
jns
xchg
adc
stc
jl
orb
xchg
mov
aaa
data16
out
dec
mov
sub
fcomp
or
imull
arpl
add
in
cmpsb
rcrl
push
stc
push
insb
or
push
leave
cmp
lea
stos
fidivrs
jg
xlat
and
stos
leave
lods
cmp
xchg
inc
data16
adc
aam
mov
jne
sahf
jb
pop
dec
lods
sub
or
xchg
cmp
je
jp
add
cld
rcll
jl
add
xlat
cmp
and
sarb
mov
mov
sbb
fcmovu
hlt
loop
jbe
in
mov
xchg
dec
sub
sub
dec
add
xchg
mov
stos
push
imul
mov
lock
cs
fnstenv
dec
sub
dec
and
in
pop
gs
xchg
mov
loop
pop
push
sub
insb
jne
test
jnp
jnp
les
push
ror
mov
adc
sbb
or
mov
xor
cmp
xchg
push
add
jno
dec
cld
cwtl
cltd
sbb
and
mov
inc
inc
xchg
jmp
daa
out
iret
sbbb
or
out
push
jnp
iret
les
fimuls
jge
cmpsb
pop
dec
dec
push
push
xchg
loop
mov
pop
out
cmp
push
jnp
mov
lcall
cwtl
add
mov
xor
hlt
xchg
inc
xor
xor
jle
and
scas
xor
jne
xlat
jg
jg
xor
into
xchg
push
adc
jg
push
inc
inc
inc
mov
xor
pop
xchg
hlt
aad
push
pop
insl
pop
xor
adc
inc
shll
jmp
gs
adc
mov
fcomi
shll
shrb
cmovs
xlat
and
insl
sub
jl
dec
mov
out
lock
lds
and
ret
push
out
and
int
loopne
mov
and
inc
push
xchg
sub
sub
inc
sub
es
dec
add
lahf
mov
scas
cmp
xor
or
stc
pop
leave
imul
adc
cmpb
dec
je
xchg
adc
and
shrb
pop
aam
movsl
ja
pop
pop
mov
sub
mov
cwtl
sahf
pop
shll
mov
jo
add
int
push
addl
rcrb
outsl
aad
sub
enter
inc
into
decl
int
xlat
adc
mov
in
push
mov
pop
dec
cmp
mov
mulb
fsubrs
int
fcoms
pop
lods
in
scas
and
sbb
fmuls
or
sbb
popaw
jle
stc
add
out
dec
or
mov
dec
ret
das
ret
and
xchg
loope
fstpl
inc
push
std
mov
call
inc
sahf
pusha
lahf
out
mov
outsl
sub
xchg
xor
loop
out
imul
fwait
and
les
scas
repz
cs
repnz
cmp
dec
lcall
jo
into
mov
stc
pop
jge
pusha
lret
and
das
sbb
bound
mov
and
repz
es
ljmp
cld
push
cmpsl
adcb
sbb
dec
push
xor
mov
ljmp
call
je
or
xchg
mov
sub
nop
push
subl
xchg
sbb
pop
orb
iret
cmpsb
jne
sbb
cmp
cwtl
sbb
jo
mov
in
pop
ret
frstor
xchg
pop
inc
sbb
sub
shlb
or
lods
pusha
test
pushf
jp
outsb
lods
das
fs
outsl
push
sahf
cmc
fsubrl
push
or
pop
test
or
jbe
and
mov
cmc
xor
mov
stos
out
xlat
xor
inc
inc
dec
test
xchg
adc
add
sbb
out
out
int3
imul
push
daa
xchg
clc
incb
adc
pop
mov
ds
push
call
ja
cli
fldt
sub
sbbb
jecxz
daa
jmp
pusha
std
xchg
mov
cwtl
sub
stos
test
cmpsl
les
add
dec
add
sbb
inc
jmp
inc
loopne
sbb
rcr
fimull
inc
fisubrl
in
inc
test
pop
jae
stc
mov
xor
mov
scas
scas
pushf
xor
pop
xchg
sub
mov
and
jp
xchg
sub
xchg
dec
repnz
in
das
xor
shlb
lahf
outsb
sub
adc
mov
push
gs
and
mov
stos
jmp
clc
mov
ret
call
or
inc
loopne
pop
scas
lret
imul
mov
add
cmp
push
inc
push
dec
loop
fs
sbb
push
pop
in
push
push
jle
pop
nop
std
mov
std
jo
mov
inc
adc
pop
or
and
add
push
movsb
xor
mov
mov
adc
test
movsl
orb
dec
imul
cmp
push
mov
push
push
jo
fcmovnb
xor
mov
mov
addb
test
cmp
int
fistps
mov
aad
fidivl
jl
scas
inc
add
pop
push
and
adc
jle
mov
fistpl
adc
ljmp
mov
push
jmp
sub
or
jmp
inc
jb
push
xchg
icebp
dec
sbbl
xchg
jmp
xor
test
add
or
add
cs
stos
or
or
das
and
aam
push
push
cmp
negl
test
lea
xchg
pop
sbb
idivb
pop
enter
sbb
negl
pop
jae
mov
lahf
cmpl
add
sti
xchg
mov
out
pop
add
mov
daa
sub
pop
out
mov
mov
scas
and
xchg
divl
sbb
jmp
jae
push
js
xchg
pop
mov
fdivl
es
jg
add
xchg
jle
mov
test
push
and
cld
fiadds
mov
xor
repnz
shlb
cltd
sbb
stos
add
dec
cwtl
sub
cs
rcr
adc
mov
popf
xlat
jecxz
out
push
push
push
or
inc
lds
leave
dec
ficoms
aam
adc
sbb
lods
mov
pop
xchg
xchg
imul
mov
in
movsl
sub
mov
and
add
or
cmc
lret
mov
imul
outsl
inc
mov
mov
jo
icebp
loop
dec
xlat
add
pop
dec
push
lea
jns
jne
mov
and
push
mov
leave
fmull
idivl
push
lods
test
jmp
popl
lea
cmpsb
into
pop
lret
pop
inc
mov
cmpsb
outsb
jb
sbb
decb
loopne
pop
dec
test
test
cs
stc
loop
dec
jle
inc
adc
aad
pushf
push
mov
inc
mov
mov
in
test
sub
xchg
hlt
stos
mov
inc
std
lods
out
not
lds
pop
cmp
adc
out
mov
mov
lds
and
mov
in
jmp
xchg
test
or
icebp
lea
cmp
fadds
enter
push
sbb
outsb
sub
mov
and
xchg
sarb
dec
xchg
pop
sub
mov
mov
xchg
push
gs
out
xlat
dec
jge
fcomp
add
push
inc
in
xlat
outsb
sbb
roll
jnp
fidivrs
cmpsl
shlb
fidivs
mov
pop
es
push
in
scas
aam
fs
loopne
xor
cltd
movb
fbstp
pop
and
add
ljmp
fstl
pop
gs
leave
inc
mov
xchg
or
fs
or
leave
rcl
rorb
lcall
cmc
sti
movb
insb
pusha
adc
mov
lea
btc
addl
jb
fildll
inc
jno
pop
psubb
inc
inc
pop
inc
pusha
sub
and
ret
test
mov
jns
stc
pushf
into
jae
shlb
cmpsb
ret
dec
push
adc
sub
std
sub
shr
insl
repnz
test
enter
sbb
fidivl
call
clc
sub
pop
stos
dec
add
mov
es
ret
lahf
xlat
jno
jb
push
sbb
insb
add
mov
mov
hlt
dec
ret
mov
sbb
mov
xlat
pop
mov
loop
jl
cmp
pop
mov
mov
mull
js
daa
cmp
jns
lret
xchg
inc
xor
lods
push
xor
stos
lods
hlt
mov
cmp
iret
pop
stc
inc
dec
fisttpll
adc
lret
mov
add
insb
pop
ja
jae
push
not
sbb
xor
add
add
jmp
cmpsl
loope
dec
es
sbb
fs
pop
push
stos
or
daa
ljmp
lret
icebp
faddl
test
iret
jge
or
ja
sysexit
xchg
jo
adc
and
test
rolb
sub
sbb
cltd
and
mov
popa
into
mov
aam
push
jp
fisttpl
sti
insl
cld
inc
mov
jle
xchg
aam
mov
sti
in
sbb
cmpsl
ret
cmp
push
test
call
pushf
xor
fisttpll
sub
sbb
cmp
aad
or
dec
insl
repnz
cmpsl
sbb
lcall
mov
push
sarl
adcl
adcb
jnp
sub
mov
ret
enter
dec
cltd
in
das
dec
or
push
mov
int
xchg
fcoml
sbb
xor
lret
stc
or
repz
or
xor
dec
sti
dec
fcomps
lea
icebp
out
bound
inc
nop
pusha
out
fwait
sarb
iret
xchg
addr16
dec
aaa
lock
and
mov
in
xor
out
xlat
int
shlb
mov
mov
hlt
dec
sarb
loopne
xor
ret
push
sbb
cmp
fisubrl
or
lahf
xchg
iret
enter
arpl
das
adc
xchg
mov
lods
bnd
pushf
cwtl
or
test
sub
aas
mov
insb
push
repnz
shr
mov
adc
aaa
ficomps
push
push
jmp
dec
and
sbb
xor
ret
mov
fnstsw
xchg
aas
jbe
daa
cli
push
ret
and
ds
adc
jmp
mov
pop
imul
iret
pop
jl
jns
mov
nop
adc
xchg
xchg
mov
pop
cmp
mov
in
fimuls
or
mov
out
imul
adc
jmp
popa
push
push
aad
popf
mov
add
jo
call
incl
mov
loop
dec
dec
daa
mov
pop
lret
jge
test
mov
int3
mov
and
push
or
fnsave
jl
bound
adc
lods
xor
dec
fwait
aas
add
pslld
xor
mov
or
jno
cwtl
push
outsb
in
clc
cmpsl
sbb
mov
stc
adcl
test
inc
mov
popaw
and
fistpll
adc
lods
jg
xchg
insb
mov
ret
mov
pop
pop
dec
outsl
inc
mov
inc
and
cli
cli
cmp
popf
mov
xchg
xchg
inc
xchg
aas
sub
mov
lock
sbb
scas
not
int3
adc
push
rorb
jnp
jnp
pop
mov
sahf
jle
scas
jae
dec
cmp
push
pop
cmpxchg
dec
sub
js
cmp
loop
jl
lcall
jge
out
push
into
mov
lahf
xchg
nopl
pop
cmp
jmp
inc
sub
cltd
xchg
nop
in
lahf
pop
xchg
cld
jmp
jmp
jbe
mov
test
call
jae
pusha
aad
jo
jns
sti
call
or
ficoms
stc
inc
cld
jecxz
mov
add
xor
mov
jbe
enter
lcall
push
and
mov
jg
lods
int3
into
push
xor
jl,pn
test
fldt
roll
or
out
repnz
mov
mov
dec
cmpsl
xchg
xchg
mov
mov
daa
pushf
ljmp
imul
fistpll
shl
mov
mov
loop
fdivrp
jne
outsb
sub
mov
jg
in
mov
xlat
sahf
add
pop
and
fistpl
leave
inc
jb
jp
in
dec
xchg
add
xchg
xchg
mov
imul
add
in
lods
test
insb
mov
pop
xchg
jb,pt
add
jmp
fwait
bound
clc
mov
sbb
loop
sbb
jne
push
sub
test
pop
xchg
icebp
mov
inc
loope
sub
mov
jmp
or
mov
scas
inc
sbb
decb
lods
in
testl
xchg
bound
push
mov
push
push
pop
jecxz
dec
lahf
enter
mov
popl
xor
je
in
push
cmpsb
pop
push
xor
lcall
arpl
ds
shlb
sub
push
dec
mov
sub
pop
cmp
leave
lret
xlat
sti
and
ja
rorl
mov
jns
push
filds
out
add
pop
lods
lret
imul
and
stos
stos
jno
enter
test
jg
lret
and
lahf
mov
cmc
or
clc
sbb
mov
fadds
mov
insb
loope
cmp
ret
fimuls
es
cmp
mov
jo
jno
lcall
push
mov
outsl
mull
xor
dec
inc
jb
mov
sbb
pop
mov
orb
add
adc
push
xor
imul
jp
and
ret
cltd
rorb
das
loop
add
jmp
cmp
pop
mov
push
pop
push
mov
cld
cmpsl
mov
push
out
xchg
hlt
je
sub
pop
addl
bound
jp
mov
add
stos
addr16
mov
mov
cmp
mov
mov
push
scas
inc
mov
and
cs
xor
pop
jb
pop
fistps
sbb
pop
sub
mov
jg
stos
popa
ljmp
inc
mov
sbb
popa
rcll
rolb
jge
mov
out
pop
sub
test
mov
or
in
mov
jnp
adc
pop
jo
mov
push
cmp
stos
pop
pop
lea
mov
pop
pusha
popf
clc
dec
and
mov
mov
test
mov
outsl
push
mov
and
jo
aas
dec
or
adc
inc
pop
xchg
mov
push
push
push
add
aam
sub
sbb
notb
in
cmp
xor
inc
lds
scas
mov
out
or
lcall
sub
or
imul
sub
in
pop
and
lahf
pop
mov
xor
jp
or
pop
pop
cs
mov
movsl
test
loop
sbb
call
add
push
stc
arpl
xchg
or
iret
mov
or
cmp
or
mov
xchg
in
adc
test
or
ffree
lds
js
stos
cld
popa
cmc
notl
dec
imul
repz
sarb
fs
mov
or
xor
sbb
mov
xor
pop
out
inc
fs
daa
xor
push
mov
jno
xchg
enter
sbbb
sbb
mov
call
outsb
or
ds
out
jmp
pop
inc
lods
mov
xor
cmp
jp
in
pushf
arpl
lods
aad
cwtl
or
cmp
mov
dec
mov
and
push
pop
pop
xchg
loopne
fwait
or
lret
or
cltd
jae
jl
out
int
adc
fists
or
dec
popa
int3
and
sub
repz
sahf
sbb
daa
mov
and
mov
neg
mov
dec
out
in
fisubrl
sbb
jle
adc
sub
jmp
aaa
ja
pop
frstor
cmc
mov
lret
fcompl
jne
lahf
stos
add
push
mov
sar
jb
cmc
aam
sub
orl
adc
inc
mov
xchg
ret
stos
faddl
mov
notl
pop
cmc
cmp
shl
jae
inc
out
mov
or
cmp
add
pusha
mov
mov
repnz
scas
xchg
rorb
and
push
and
push
nop
mov
sub
adc
ja
adc
xor
add
adc
sub
push
push
xor
mov
inc
dec
xchg
fwait
push
sbb
ficompl
mov
out
jnp
movsl
lahf
xor
cmp
test
shr
cmpsb
ljmp
clc
jge
gs
xor
jbe
mov
decl
cld
xor
iret
xor
pop
cmpl
imul
movsl
cmp
xor
sbb
push
jb
and
pop
hlt
dec
lds
cmp
mov
js
lcall
aam
and
cltd
and
mov
push
call
test
data16
pushf
or
or
and
push
fmulp
sarb
mov
cmpsl
jne
push
fists
sbb
aas
nop
dec
repz
test
xchg
cmp
shlb
ret
in
scas
inc
fdivrs
jo
sbb
lret
add
add
inc
sbb
xchg
shlb
add
jnp
sbb
push
xlat
cmpsl
fs
cltd
sahf
shll
lods
or
adc
sub
sbb
add
loope
jg
mov
rep
fs
sbb
mov
cltd
daa
inc
and
inc
inc
je
fisubrs
push
xor
test
dec
jo
sbb
mov
fsubrl
push
and
jecxz
sbb
lret
ja
push
jae
inc
sti
xor
cmpsb
stos
mov
jle
mov
outsl
js
test
out
cli
in
in
cld
mov
fnstcw
cs
addr16
in
add
insl
cmpsb
jbe
push
cs
mull
xchg
mov
add
add
jl
lds
sub
in
mov
mov
sbb
sub
sub
jl
loop
jp
push
cmp
inc
or
push
jge
push
orb
xchg
push
inc
inc
fisttpl
or
jmp
mov
mov
popa
outsl
xchg
jo
cmpsb
aas
sbb
dec
xchg
ds
adc
pop
stc
jb
addl
popa
iret
xchg
adc
pushf
lods
pop
movsb
into
mov
sbb
pop
jp
xorb
push
rcl
mov
mov
cmpsl
data16
enter
cs
das
xor
xchg
cwtl
adc
mov
leave
mov
mov
jecxz
fwait
jl
lds
out
int3
jp
xchg
sub
ret
imul
cli
scas
inc
inc
dec
sub
sarb
fwait
sbb
and
rclb
mov
scas
or
xor
scas
jo
je
mov
push
cltd
jl
test
fucomi
lret
lds
xor
lock
mov
or
fdivl
lock
add
das
outsl
xchg
shr
mov
or
ljmp
stos
clc
mov
jb
outsl
add
jns
mov
inc
mov
or
lret
dec
xor
arpl
shrb
aad
jg
and
xchg
push
or
or
xor
fsub
inc
sbb
add
or
mov
mov
int3
std
jg
pushl
lock
pop
ja
xchg
sbb
lret
cmp
out
ret
outsl
je
mov
push
sbb
pop
mov
clc
add
xchg
or
mov
in
lds
xchg
dec
dec
lcall
sbb
inc
xor
movntq
jle
call
mov
clc
jno
and
daa
or
mov
out
mov
xchg
div
fstl
pop
mov
lret
jo
mov
inc
cmc
and
repnz
mov
jnp
hlt
xor
stc
sub
mov
imul
shr
iret
mov
adc
cmp
popf
dec
xor
ror
insb
lcall
mov
into
fmull
xchg
int
ret
cwtl
mov
adc
push
xchg
fimuls
jg
sub
push
pop
dec
lret
cmp
sahf
xor
mov
mov
retw
ret
sarb
stos
push
or
ja
xchg
lds
clc
mov
or
stc
fmuls
push
in
fstpl
xor
outsl
xchg
cmp
cmp
sub
pushf
imull
std
fistl
out
pop
jno
mov
std
inc
cli
sarl
dec
sub
subb
mov
faddl
in
je
cmpsl
lods
rcrb
xchg
mov
mov
push
stos
dec
adc
lcall
add
inc
dec
xchg
inc
iret
mov
dec
out
mov
scas
inc
pop
xchg
rorl
xor
mov
popa
mov
cmp
shrl
lcall
jg
adc
mov
xchg
jno
adc
imul
mov
adc
xchg
xchg
jnp
xor
and
out
pop
push
sar
fnstcw
pop
and
std
loope
repnz
jg
je
mov
push
push
dec
cld
test
incl
call
and
jne
loope
ds
movsl
xchg
dec
call
push
lahf
imul
test
addr16
imul
fstp
fs
or
shll
jle
fsubrl
xlat
dec
out
stos
push
xor
out
hlt
cmp
movsl
hlt
loope
xchg
or
divb
and
jmp
bnd
dec
in
bound
lods
data16
jle
push
dec
jo
lock
cmpsb
mov
fbld
mov
mov
shll
data16
in
push
jae
xor
es
imul
sub
repz
sbb
and
sarl
repnz
iret
ss
sbb
dec
pop
or
inc
sbb
mov
cmc
loop
rcll
cmp
xor
add
mov
xor
lods
jb
jnp
push
pop
jae
dec
mov
sub
inc
cmp
pop
sahf
sbb
mov
call
mov
mov
lods
or
popa
outsb
cmpsl
test
sbb
xchg
sarl
add
adc
jl
push
in
mov
jmp
and
xor
and
jmp
inc
ror
fwait
add
add
neg
sbb
or
aaa
jae
adc
daa
add
sbbb
cmpsl
movsl
mov
sti
outsb
daa
stc
mov
ds
jge
ret
push
inc
cs
stos
andl
lds
mov
call
and
mov
int
adc
xchg
decl
cltd
mov
clc
cld
lret
xor
orb
lret
in
insl
mov
mov
or
pop
cmp
jns
xchg
adc
or
sbb
pop
inc
icebp
mov
jmp
js
jge
mov
adc
mov
test
test
jle
push
xchg
les
aad
into
push
mov
xchg
lock
hlt
sub
adc
push
test
bound
fdiv
ficoms
or
and
int3
cmc
push
popa
mov
sbb
leave
mov
lods
mov
mov
jg
cli
adc
push
push
loope
repnz
sahf
mov
xlat
lods
repz
cmc
inc
mov
movsb
xor
iret
sbb
repnz
icebp
jmp
clc
inc
cmp
ret
or
mov
jmp
mov
es
fldln2
pop
jb
jle
in
push
xchg
pop
push
sub
push
ja
notb
pop
mov
pop
adc
and
sub
cmpsb
testl
aad
idivl
test
jne
sbb
ss
outsb
adcl
subl
fistl
roll
push
mov
mov
bound
test
lds
push
or
aad
std
jmp
lret
cltd
xchg
fdivrs
jmp
jecxz
loop
push
enter
in
mov
cmp
mov
stc
cmp
shl
hlt
push
sbb
arpl
les
int
sub
mov
add
fucomi
lods
sbb
mov
enter
add
je
test
cmc
dec
xchg
gs
xchg
pop
popa
scas
pop
sti
sbb
inc
mov
and
sub
jge
in
cmp
repz
fistpll
mov
test
filds
xor
pop
xchg
ljmp
outsb
cmp
xchg
xor
ds
in
dec
scas
cltd
test
pop
push
push
jno
insb
and
aam
imulb
fadds
cmc
jnp
rcll
mov
inc
push
push
lahf
pop
movsb
out
sub
sti
aad
add
rorl
arpl
dec
dec
sarl
sbb
icebp
jl
popl
bound
out
test
sub
push
loop
and
cmpsl
pushf
fwait
cmc
add
sbb
xchg
in
push
shll
bound
jo
subl
mov
adc
aaa
or
int3
test
rclb
pop
inc
xor
lahf
sub
push
push
fisttpl
sbb
push
dec
jmp
lods
or
je
inc
test
mov
sub
lods
test
inc
mov
out
in
rcrl
cs
loop
leave
cmpb
jae
imul
jne
mov
stos
jno
into
cmp
xchg
cmpsb
stc
fimull
xchg
lock
jno
ss
cwtl
ret
ss
scas
inc
scas
jb
sbb
sbbb
mov
dec
mull
push
push
ljmp
or
or
lods
adc
mov
xchg
dec
add
push
cwtl
icebp
xor
mov
push
lret
cmpsb
out
jge
negl
jnp
push
shlb
lea
xchg
in
inc
mov
sub
jo
jb
outsb
dec
mov
dec
movsl
popa
enter
jb
rorb
inc
xorl
std
xchg
in
push
xchg
jg
jmp
popf
adc
fdivl
arpl
mov
insb
call
insl
cmp
mov
aad
or
mov
in
push
xchg
hlt
fstps
pop
loopne
mov
mov
pop
fwait
aad
fldl
jnp
int3
cmp
fldcw
lret
sbb
js
pop
xchg
xor
mov
cmp
mov
daa
pushf
jecxz
stc
add
lret
sub
or
and
xor
jno
mov
movsb
nop
cmp
test
lods
fdivrl
leave
lret
jp
dec
test
cmp
addb
mov
jl
adc
xchg
mov
test
outsb
inc
mov
sarl
or
mov
insb
adcl
addr16
cld
pop
fwait
sbb
dec
movsl
das
mov
push
push
xlat
add
pop
rorb
mov
jbe
rol
punpcklwd
push
pop
outsl
cmpb
sub
jne
ds
push
add
sbb
pushf
iret
int3
and
xchg
cld
cli
or
loope
je
pop
pop
pop
mov
mov
inc
cmp
loope
lret
mov
nop
dec
push
jge
into
push
mov
jl
mov
ficomps
imul
shll
repz
jmp
jg
icebp
jo
and
pop
sbb
testl
lahf
int
dec
xchg
lret
pop
jae
in
cmp
dec
add
mov
xor
mov
jae
add
mov
add
sub
test
xchg
push
ja
sbb
movsb
cmpsb
aad
mov
ret
cmpsb
sbb
cmp
insl
jle
stos
jno
iret
cs
push
xchg
clc
mov
xor
div
es
or
cld
or
and
push
test
sub
cmpsb
mov
xchg
fsts
sbb
aad
inc
mov
addr16
rol
xchg
xchg
cmp
sbb
aad
dec
jb
dec
xchg
xor
pop
cld
cmp
js
mov
std
add
ja
testb
xchg
insb
xchg
jp
cmp
das
jp
lods
stos
sub
xchg
aam
fistpl
inc
jmp
enter
int
rcll
js
sub
mov
or
jle
jo
lds
xchg
das
pop
cmp
outsb
loop
mov
out
fwait
fs
outsb
mov
fcompl
shlb
int3
sub
sti
mov
inc
add
push
mov
dec
mov
call
inc
mov
jns
and
push
xchg
xchg
xchg
dec
loope
stos
popf
ljmp
mov
scas
xor
orb
out
stc
cmp
popf
int
es
xchg
and
xchg
mov
cmpsl
loope
clc
adc
lret
stos
mov
cltd
in
mov
jg
es
dec
pop
and
test
jno
loop
outsb
bound
dec
fnstcw
mov
mov
int
fcmovbe
pop
inc
aam
add
push
in
jbe
push
add
push
shrb
aam
mov
xchg
push
push
cld
jne
cmp
and
mov
mov
outsb
push
adc
insl
js
jmp
cmp
push
daa
out
bts
sub
test
sub
inc
adc
movsb
or
sub
push
ret
jbe
inc
xor
sub
std
or
pop
cmpl
cs
push
ret
cmp
pop
imul
rcrb
mov
imul
sub
daa
shufps
out
cmc
ret
cmp
jge
mov
xchg
add
mov
add
test
into
xor
mov
stos
dec
adc
cwtl
inc
push
test
add
mulb
jns
sub
popa
loopne
and
cwtl
xor
scas
jnp
mov
pop
xchg
cltd
ret
pop
inc
pop
insb
scas
mov
push
das
lahf
mov
or
mov
dec
out
movsb
imul
or
inc
leave
lea
mov
cmp
mov
sub
shlb
mov
xorl
mov
stc
hlt
mov
push
jle
sub
push
cmpsb
mov
cmp
sbb
jmp
iret
out
jbe
sbb
adc
aam
jge
cmpsb
sbb
push
nop
pop
or
dec
xor
dec
push
lahf
insl
andb
mov
push
fistpl
lock
xchg
jne
test
mov
bound
clc
ror
push
inc
sub
dec
jnp
popf
test
and
das
daa
push
cwtl
jecxz
aaa
dec
add
adc
inc
push
cmp
pop
fwait
nop
mov
fistps
xor
jmp
popf
mov
push
scas
adc
cmp
insb
mov
mov
xchg
les
cmpl
pop
test
xchg
xchg
inc
fimuls
jmp
pop
or
fidivrl
loop
jle
mov
pop
test
cmc
data16
stc
and
add
bound
fisttpl
jle
mov
mov
push
dec
lahf
cmpsl
les
xor
fnstcw
cli
adc
push
mov
or
jmp
dec
mov
dec
mov
xor
fs
mov
popl
sub
pop
scas
mov
xchg
add
movsl
mov
pushf
jb
cld
add
shrb
cmp
das
sub
dec
jb
aad
in
pop
and
aas
in
outsl
testb
sarb
test
cmp
loope
inc
sbb
pop
outsl
popf
fisubs
adc
jns
push
shll
mov
mov
hlt
mov
sub
mov
jge
or
hlt
popf
aad
clc
dec
into
xchg
mov
inc
hlt
xchg
cltd
insl
fwait
and
mov
push
movsb
dec
adc
fwait
es
push
xchg
xor
xchg
enter
adc
pop
je
inc
test
fcomps
xchg
iret
lods
and
jecxz
pusha
mov
cmc
cmpsl
inc
jns
fdivl
subl
push
mov
mov
fbstp
movsl
test
mov
mov
and
sbb
push
xor
jmp
jnp
imul
xchg
pop
pop
add
aaa
fs
and
mov
dec
pop
stos
cmpl
movsl
cli
sbb
bound
imul
mov
pushf
mov
push
out
adc
pop
add
add
dec
dec
mov
bound
insl
cmc
jmp
fwait
pop
out
adc
bound
loopne
lods
out
cmp
imul
add
into
cmp
les
mov
fld
push
add
sbb
jbe
mov
cmp
or
or
pop
je
out
jae
xor
test
adc
rcll
xor
pop
scas
es
xor
negb
adc
repz
sub
cmp
push
lret
cmc
int3
addr16
imul
pop
add
and
jno
push
or
test
pop
movsb
rolb
in
in
addb
test
jg
lcall
fxam
inc
aad
xor
imul
lods
jmp
sbb
repnz
adc
scas
mov
into
hlt
add
js
mov
insl
jbe
cli
xchg
in
adc
clc
fisttpl
pusha
pop
sti
pushf
test
dec
mov
jne
push
repz
sub
push
stos
test
inc
ret
sub
jmp
fiaddl
fwait
adcb
push
rorb
leave
xchg
in
adc
sbb
or
inc
daa
ljmp
add
call
clc
fistpll
adc
add
out
add
shll
dec
iretw
mov
scas
xor
inc
movsl
rol
dec
sub
fisubrl
sahf
fstl
or
rcl
test
adc
xor
shl
jb
or
inc
adc
addr16
shl
sbb
xor
fdivrl
push
pushf
fimull
cld
push
push
cli
mov
sub
pop
out
adc
daa
cmpsl
repz
inc
mov
pop
and
jmp
mov
mov
inc
cmc
adc
movsb
in
xchg
pop
dec
mov
es
pop
in
insb
mov
add
lock
cmpl
dec
sub
shrl
gs
inc
xor
addb
stos
pop
fldcw
jmp
xor
mov
mov
dec
dec
jbe
iret
sbb
enter
jp
je
lahf
jge
mov
and
arpl
push
mov
cwtl
andl
jp
cmpb
dec
push
lret
cmpsl
rcl
xor
dec
popf
xlat
cmp
sbb
mov
lea
call
int3
xchg
ret
shlb
mov
or
cmp
ss
push
jb
std
addb
pop
xchg
inc
push
push
jl
add
pop
xchg
fstps
cmpsb
sub
sti
loopne
mov
nop
sub
pop
arpl
aad
jb
subl
add
sub
jmp
and
sahf
lret
scas
cli
xchg
xchg
addl
and
test
or
sub
fwait
or
push
cmc
push
cmp
adc
pop
mov
mov
lods
outsb
inc
sbb
mov
das
fistpll
in
fnstsw
loopne
lods
dec
loop
mov
pop
lock
es
inc
xchg
inc
aaa
in
xor
fdivrs
gs
insl
cmp
push
xorb
mov
mov
mov
pop
mov
jns
in
pop
stc
xchg
mov
or
ja
push
rol
jb
ljmp
pusha
mov
inc
add
add
les
cli
in
cwtl
fisubrs
or
arpl
sbb
out
aam
mov
sbb
push
rcl
pop
sub
arpl
insl
lds
xor
ja
cmp
stos
dec
jbe
inc
ljmp
cmp
cmp
lds
imul
stc
dec
cs
jo
and
in
lret
add
cmp
mov
stc
pop
jle
in
popf
cmpsl
mov
in
in
or
out
fisubrs
cld
cmp
loop
mov
sti
jl
mov
pop
sbb
xchg
pusha
test
pop
mov
mov
xor
inc
cmp
dec
out
pop
fsubr
jne
xchg
ret
dec
fcmovnu
into
movsl
jne
ret
clc
mov
mov
mov
enter
pop
test
dec
inc
stc
sbb
and
movsl
add
scas
cmp
xchg
cli
push
gs
paddw
sub
sub
je
dec
std
je
cmp
xlat
fbld
sub
jns
sub
dec
add
andl
ret
sub
lock
es
mov
cmpsl
lods
rorl
xchg
mov
xlat
das
dec
jg
repz
inc
mov
test
mov
jns
cmp
xchg
push
fimuls
leave
ret
cmp
loope
and
add
mov
xchg
shll
outsl
fidivrs
in
xor
iret
movsb
xchg
repz
jb
arpl
sub
dec
jmp
mov
pop
push
and
jecxz
or
mov
push
popa
decb
repz
imul
sub
pop
push
clc
lahf
outsb
repz
pop
es
sbb
jl
jns
and
fbstp
repnz
inc
push
in
sub
cli
push
xchg
bound
jecxz
shrl
dec
push
je
cwtl
es
mov
jmp
cwtl
xor
outsl
push
xchg
pop
pusha
dec
fcomip
cwtl
popa
push
and
outsl
sbb
inc
push
mov
push
push
frstpm(287
mov
mov
shlb
add
cmp
or
dec
xbegin
jae
data16
pusha
pushf
sahf
xchg
stos
mov
lods
push
xchg
insb
aam
mov
mov
jmp
sub
pop
and
or
mov
mov
clc
pop
shll
push
pop
clc
daa
sbb
push
mov
mov
sbb
or
hlt
inc
sub
dec
repnz
sbb
pop
lods
loope
popa
scas
out
sti
jae
jp
and
xchg
inc
sub
add
lahf
dec
jmp
pop
sbbl
sbb
ds
fs
push
scas
cwtl
inc
xchg
bound
lret
fldt
jle
dec
xlat
push
sub
cs
push
fbld
aaa
and
ljmp
popf
adc
lret
flds
push
lcall
daa
test
dec
loope
mov
or
gs
jg
pop
xchg
nop
test
rorl
js
pop
cmc
rolb
jns
cltd
sub
jg
mov
out
jmp
arpl
pop
jp
push
cmp
std
inc
shl
fstpl
mov
aaa
inc
ucomiss
ljmp
and
cs
out
sub
test
cwtl
out
mov
scas
daa
nop
cmc
cmpsl
dec
adc
pusha
adc
fimull
hlt
or
adc
imul
dec
popl
gs
cmpsl
xchg
out
inc
and
aad
xchg
cmpsb
xchg
inc
cmp
out
xor
adc
aaa
sub
xor
mov
xchg
push
repnz
je
fcom
mov
fcoml
ja
arpl
lds
and
and
inc
cmp
popa
xor
fldenv
xchg
pop
push
fcoms
pop
mov
sub
ret
stc
sarb
or
leave
or
push
push
movlhps
popf
popa
mov
in
push
imul
bound
jnp
loop
cltd
cltd
pop
mov
lock
adc
lahf
push
ffreep
dec
push
dec
inc
cmpxchg
lret
roll
and
lea
es
test
aam
push
cmc
add
cltd
inc
pop
aam
inc
movsb
in
and
leave
hlt
add
xchg
sbb
stos
mov
cmp
loope
iret
inc
cmp
out
sbb
dec
jae
pop
cmpb
in
cmp
icebp
iret
std
xor
xor
jmp
mov
dec
push
test
nop
int3
cs
cmpsl
das
lds
cwtl
movsl
add
push
sub
jae
shrl
pop
sub
or
call
mov
mov
mov
xor
insl
or
sub
xchg
sub
pop
jecxz
pop
pop
aam
sub
sub
je
sbb
loope
add
or
push
roll
jle
nop
mov
and
pop
push
or
lret
push
mov
cmp
mov
cmp
stc
and
sub
aaa
fnstcw
rcl
xchg
xchg
or
cmc
dec
mov
push
inc
xor
inc
jns
and
mov
js
mov
out
mov
lret
shll
push
push
nop
dec
lods
pop
or
int3
pusha
loopne
xlat
push
in
push
fldt
and
dec
jns
aad
mov
stos
add
mov
sub
fcmovnb
cmc
xor
or
cwtl
js
aaa
in
cmp
cmpl
mov
adc
out
out
jmp
push
and
fisubl
sarb
iret
xchg
sub
aas
dec
jb
push
mov
jo
pop
adc
sahf
push
idivb
stc
repz
fimuls
icebp
pop
rclb
add
dec
divb
sub
pop
out
test
jg
add
and
dec
jge
push
xchg
push
rcrb
jg,pt
jnp
es
std
pop
xor
xlat
xchg
movsl
or
adc
out
pop
ficomps
add
dec
adc
sbb
lea
push
mov
mov
lds
pop
pop
or
or
stc
dec
sbb
pop
cmp
arpl
popa
xchg
scas
mov
stc
cmp
dec
jno
sarb
jecxz
dec
adc
pop
mov
xor
cwtl
es
fldenv
leave
pop
lahf
out
xchg
pop
stos
clc
mov
cmpsl
xchg
cmp
dec
out
movsb
jg
dec
xchg
imul
mov
cmp
or
adc
les
push
dec
push
mov
popa
or
mov
mov
imul
xor
mov
inc
xchg
test
push
mov
insb
mov
add
xchg
or
shrl
mov
xchg
movsb
mov
cltd
fcomi
xor
dec
dec
aad
int
pop
jne
dec
mov
je
pop
cmp
in
xchg
and
mov
pop
std
in
pop
lock
movsb
lods
ds
mov
add
mov
rorl
jo
and
cmp
inc
test
mov
xor
pop
xor
xor
push
push
les
test
and
and
fisttps
mov
in
in
push
jl
dec
insl
lahf
daa
daa
imul
jnp
ficoms
mov
repz
ss
addr16
movsb
adc
test
in
mov
int
in
push
ja
push
fldt
loope
cs
jp
mov
sub
outsb
inc
and
rorl
scas
xchg
stos
and
std
fs
lods
xor
ljmp
scas
rolb
jae
cs
outsb
fsub
mov
cmp
mov
std
in
pop
arpl
mov
cmp
or
mov
movsb
repnz
add
aaa
mov
cmp
loop
lahf
sbb
cmpsl
incl
dec
xor
iret
sub
stos
mov
xchg
xor
pop
push
clc
inc
add
jle
fbstp
and
xchg
fwait
add
pop
adc
pop
in
and
xor
sbb
and
in
adc
xor
pop
sbb
dec
sub
inc
or
stos
pop
mov
jp
cs
cmp
fcoms
sbb
arpl
sbb
jns
dec
sahf
add
xchg
pop
jp
push
insb
mov
shll
in
xchg
movsl
jge
inc
inc
jnp
sub
subl
iret
lret
mov
xor
roll
repnz
iret
popf
and
lcall
mov
dec
sti
push
testl
push
xor
add
enter
sub
jb
sub
daa
test
gs
scas
rclb
insb
rorb
push
dec
push
push
xor
andl
arpl
popf
push
mov
xchg
adc
mov
sbb
leave
pop
rorb
or
hlt
decb
pcmpeqd
cmc
shlb
lahf
push
pusha
inc
pop
pop
sub
aad
mov
mov
adc
test
xchg
aas
shlb
int
inc
push
sub
or
popa
lods
not
movsb
jno
mov
pop
mov
jne
mov
mov
mov
and
ja
inc
out
add
mov
or
stc
movsb
icebp
mov
out
dec
insl
enter
lcall
inc
mov
dec
in
orl
pop
sub
and
mov
cmp
jnp,pt
fidivrs
ret
dec
dec
push
and
sub
out
mov
aad
mov
push
add
push
push
pop
rorl
jecxz
pop
dec
inc
xor
dec
lock
jae
xchg
pop
mov
ja
adc
push
inc
mov
xor
lcall
mov
pop
nop
int
jnp
adc
pop
leave
sub
ss
jp
cmpsb
mov
pop
xchg
sbb
jae
ljmp
cmp
test
cmp
mov
dec
orb
std
out
sbb
sbb
loope
add
sbb
loop
inc
enter
mov
sbb
push
and
mov
addr16
sub
cli
jne
dec
xchg
imul
cmp
and
cltd
repz
cld
pusha
sub
gs
cmpl
fnstsw
mov
int
dec
testl
cmp
in
fsubrs
mov
fstpl
cwtl
jns
and
cmp
scas
cs
iret
adc
imul
rclb
lods
sub
sbb
jmp
hlt
xor
and
insb
nop
inc
cmc
rorl
jg
fldcw
add
loope
cmp
ljmp
adcb
pop
mov
xchg
mov
fbld
mov
inc
inc
sbb
inc
lret
jo
push
ret
xor
test
rorl
or
adc
cmp
cwtl
popf
cli
repnz
xor
mov
jnp
in
sub
jle
js
pop
mov
ret
mov
and
cmp
xor
sub
in
repnz
aaa
lret
jp
clc
neg
xchg
leave
sarl
push
dec
movsl
jmp
sar
xor
out
mov
and
jne
hlt
mov
pop
lock
scas
sub
ja
mov
sti
sbb
insl
fwait
push
stos
inc
add
xor
call
out
lea
pop
pop
inc
xchg
pop
and
or
arpl
cmpsb
cpuid
push
jg
mov
ja
jge
pop
mov
or
repnz
cmp
dec
add
cmp
lcall
test
jp
mov
pusha
outsb
and
fsubr
fwait
rcl
nop
aad
into
cmc
dec
pop
xchg
sub
lret
cmp
mov
push
jp
cmp
cmpsb
xor
movsl
push
jnp
or
push
jb
fisttpll
add
out
pop
ja
adc
int
outsb
flds
cltd
inc
test
outsb
push
fcomp
mov
dec
cmpsb
sbb
addl
stos
testb
jb
adc
mov
cmp
js
popa
lret
nop
mov
dec
out
xor
lods
inc
adc
mov
xchg
mov
scas
in
or
lret
push
jne
pop
jne
push
jns
fcoml
inc
pop
nop
cmp
outsb
jle
and
and
std
loop
in
lret
mov
mov
push
aaa
es
pop
push
mov
lret
push
and
dec
push
jne
dec
repz
es
push
shll
pop
mov
imul
mov
sbbl
add
outsl
cmc
fistps
sub
dec
test
push
jb
and
jns
gs
test
popa
fistps
and
js
xchg
and
xchg
in
in
push
imul
in
fucomp
cmp
loop
sbb
bound
mov
pop
add
flds
xchg
cmp
subb
nop
fimuls
shrl
dec
push
cli
imul
mov
xchg
pushf
cs
rol
inc
mov
or
fwait
in
jbe
movl
sbb
sbb
out
adc
stos
dec
dec
lock
and
rcrb
push
jb
iret
lcall
insb
lahf
cmpsl
jmp
pop
out
xchg
or
jge
shll
dec
out
mov
jp
push
xlat
mov
mov
sub
mov
push
jo
out
mov
repnz
mov
cld
dec
dec
cmp
dec
sbb
hlt
cmp
pop
fstpl
rorl
fnclex
sbb
mov
jg
ss
iret
out
sub
dec
insl
mov
xor
stos
push
inc
scas
dec
std
loope
cmpsb
lahf
lds
stc
pop
outsl
fucomi
dec
mov
sub
dec
arpl
push
cmp
mov
mov
fistpll
pop
addr16
dec
mov
inc
inc
adc
sarb
and
int
cltd
xchg
lock
sub
imul
sbb
pop
sub
popf
jmp
imul
ret
or
scas
stos
xchg
test
jb
pop
aas
roll
sub
loopne
push
mov
dec
fmuls
fidivrl
mov
rcrb
sbb
push
lret
jmp
jae
cltd
add
adc
mov
pop
clc
loopne
inc
push
inc
lcall
mov
sub
int3
or
test
sbb
cwtl
xchg
mov
cmp
negb
rcrb
mov
pop
repnz
les
enter
cmp
xor
in
cmpl
cmpsl
push
pop
sbb
std
mov
dec
and
cmpsb
inc
jge
call
push
scas
add
mov
lods
sub
and
jno
pop
inc
jge
in
sbb
dec
xor
inc
mov
xchg
or
adc
add
and
inc
or
mov
stc
stc
outsb
or
scas
mov
gs
jb
idiv
mov
out
dec
insb
sti
rcrl
inc
sub
jo
pusha
mov
sti
add
fbstp
or
adc
into
mov
test
cmp
or
mov
mov
push
mov
jecxz
and
ljmp
call
xchg
repz
push
cmp
and
and
cmc
add
lret
sub
mov
jnp
mov
mov
in
popf
lods
xor
sbb
std
xchg
dec
mov
aad
in
aas
mov
cli
mov
shlb
lds
stos
out
in
cmp
push
push
jae
mov
ret
ja
mov
mov
imul
popf
or
lods
cld
dec
lret
clc
js
inc
adc
dec
imul
pop
test
inc
iret
mov
jne
or
xchg
mov
sub
cs
mov
add
cmp
loope
push
jae
mov
dec
add
mov
pop
outsl
pusha
inc
dec
mov
out
outsl
mov
call
repnz
jmp
adc
sub
mov
pop
add
ljmp
testb
outsb
negl
dec
xor
inc
pop
nop
int3
and
in
add
mov
je
and
push
mov
sub
dec
mov
loop
mov
jo
ja
out
lods
iret
add
test
fldcw
pop
imul
in
push
xchg
imul
xchg
push
cmpsb
mov
orb
or
sub
push
and
out
int3
inc
data16
cmp
add
sub
pop
xor
sub
clc
out
mov
adc
outsl
lcall
mov
insl
inc
mov
push
popa
fidivl
inc
test
xchg
xchg
and
into
push
hlt
fstps
test
sti
call
pop
cmp
das
mov
lcall
adc
inc
xchg
lock
out
cmp
sub
aaa
sub
adc
out
or
ja
lcall
mov
mov
popa
jne
mov
mov
fsubrp
jns
jl
dec
inc
out
fimuls
lock
dec
fsubl
and
add
movsl
pop
imul
mov
insb
stos
addr16
jno
or
shlb
sbb
loopne
leave
add
mov
adcb
shlb
outsb
cltd
int
in
mov
into
in
lods
jne
daa
jbe
mov
mov
sbb
fwait
loopne
dec
outsb
lods
add
cmp
sahf
in
push
sarl
lods
rorb
test
notb
jmp
mov
lret
cwtl
ret
cs
mov
lods
and
add
sahf
dec
dec
and
enter
push
xchg
xchg
cltd
push
or
sub
loop
sbb
ficompl
decb
xchg
inc
mov
insb
shr
xchg
mov
ret
jns
scas
push
ss
push
aas
pop
xchg
push
cmp
fistps
repnz
mov
mov
scas
dec
mov
xchg
in
pusha
repz
cltd
jae
sub
aas
lahf
jno
push
jge
mov
andl
mov
in
jecxz
imul
lods
testb
in
into
pop
pop
mov
fnstsw
ljmp
andb
ljmp
hlt
std
mov
mov
std
call
pop
lods
mov
xor
rolb
test
jne
imul
mov
mov
test
xor
fmul
insl
lods
pop
out
outsb
adc
push
aaa
adc
insb
int
mov
insl
lcall
leave
mov
and
push
popf
iret
jnp
cs
pop
inc
stos
or
shll
jg
and
jb
hlt
pop
sbb
push
out
push
outsb
cmp
ja
inc
jl
or
push
xchg
mov
gs
testl
or
fiadds
or
rorl
imul
jge
sub
and
mov
dec
ret
pop
lock
fldt
ljmp
jmp
sub
pop
fwait
adc
ret
jge
pusha
pop
push
pop
pop
jge
mov
or
and
jno
or
push
int3
and
xchg
lcall
mov
stc
sti
inc
je
lods
ds
jb
inc
sub
fsubl
sahf
das
add
addr16
and
add
mov
je
outsb
jle
sub
mov
ljmp
cmc
pop
sbb
sbb
adc
insl
xchg
bnd
mov
lahf
xor
inc
popa
popl
negl
sub
pop
ljmp
dec
push
mov
push
testb
add
push
in
pop
cmp
add
cmc
xchg
push
jp
int3
pop
dec
jg
push
outsl
imul
jle
bound
push
cmp
adc
loopne
sbb
cmp
popf
jno
and
jno
or
cltd
cmp
fwait
out
dec
lods
out
xchg
insl
test
sub
out
outsb
mov
add
pop
xor
sub
lret
es
add
cwtl
inc
mov
nop
stc
adc
dec
jg
inc
imul
inc
mov
mov
lret
xchg
add
cwtl
and
mov
jp
fistpl
mov
mov
rorb
cmpsl
nop
mov
xchg
pop
aad
cwtl
xchg
call
or
mov
jo
outsb
mov
fmulp
iret
push
insl
sbb
add
fisubrs
cmp
fsubrl
les
cli
lret
cmp
shrb
sahf
loope
adc
inc
add
push
pop
mov
loopne
arpl
mov
outsb
push
pop
add
adc
xchg
jmp
mov
mov
inc
mov
or
xor
mov
mov
shll
pcmpeqd
sbb
inc
insl
pop
jbe
sbb
imul
cmp
xor
add
cmc
inc
ret
dec
fwait
mov
out
mov
jecxz
adc
in
clc
out
stos
adcb
cmpsl
addr16
xchg
aas
xchg
cld
sbb
pop
push
push
std
adc
hlt
add
xchg
fidivrs
inc
xchg
mov
dec
add
clc
adc
aas
lods
in
loop
or
mov
hlt
adc
mov
out
mov
or
sbb
and
push
loope
inc
xchg
imul
inc
icebp
or
xorl
rcrb
out
aad
dec
test
adc
clc
sub
pop
std
pop
test
and
jbe
lods
jmp
bound
imulb
push
lock
push
dec
ljmp
add
cltd
or
repnz
push
pop
xchg
movsl
push
xorb
lcall
fidivrs
xchg
mov
or
mov
lock
inc
pushf
cmpsl
mov
sub
mov
xchg
pop
movsl
ljmp
dec
les
xchg
xchg
into
dec
loop
mov
leavew
mov
add
in
scas
mov
inc
aas
and
outsl
or
out
outsb
jg
jbe
sub
cmpsl
adc
or
xchg
ror
xor
js
and
or
stc
inc
aas
add
sbb
jmp
test
iret
clc
into
mov
mov
das
clc
mov
subb
cmp
cmp
jne
push
call
pop
mov
stos
fisttps
push
sbb
pop
fldenv
mov
movsl
imul
aaa
lods
mov
or
test
mov
push
testl
movups
rclb
je
dec
nop
or
inc
fptan
bound
cmpl
pop
aas
mov
dec
andl
jbe
sahf
jmp
in
mov
in
mov
cmpl
arpl
cltd
cli
cmp
xchg
sub
in
cmp
dec
mov
lret
pinsrw
and
jno
xchg
jle
in
scas
and
inc
rclb
jl
ret
movsl
push
dec
cwtl
and
pop
or
xchg
jbe
lock
hlt
mov
lret
jbe
push
jecxz
inc
pop
movsl
lret
movlps
fstps
in
jno
mov
jecxz
jb
nop
loopne
mov
and
mov
pop
test
dec
lods
arpl
movsl
add
into
pushf
mov
cmc
fnstcw
scas
push
sub
popa
mov
or
sub
mov
inc
daa
sub
add
lret
mov
xor
mov
pop
fsubrp
mov
push
mov
movsl
repnz
out
cmp
fsubrl
mov
loop
lock
enter
xor
std
clc
scas
testl
bound
lods
cltd
test
loopne
je
rcrl
mov
push
lods
push
push
xchg
sub
xchg
pusha
sbb
in
in
mov
icebp
inc
std
adc
mov
iret
outsl
xor
test
test
roll
dec
pop
push
adc
dec
cmpb
fstp
mov
lret
adc
std
add
lods
dec
and
cli
std
hlt
inc
icebp
pop
aaa
insl
push
jle
shr
lahf
loop
sbb
ret
and
lock
sub
mov
mov
rolb
and
mov
mov
lret
jmp
pop
movsb
loop
inc
sub
inc
pop
les
mov
cmp
xchg
cmp
xchg
push
lret
cmp
dec
mov
cwtl
mov
fisttpl
gs
dec
out
xchg
lock
or
xor
jg
test
stos
outsl
mov
mov
adc
cmpsl
ficoms
loop
sti
ja
stos
add
popa
icebp
filds
xor
mov
loopne
push
out
push
das
lcall
loop
push
fs
mov
in
lds
pop
or
setnp
inc
enter
jno
testl
lock
dec
xor
jne
test
xor
adc
out
jns
pop
add
add
mov
ret
mov
ljmp
push
sub
addr16
call
sub
stc
clc
jle
imul
inc
push
adc
push
mov
xchg
jecxz
pop
arpl
dec
aas
jae
addb
scas
add
or
sti
test
mov
mov
imul
mov
inc
or
dec
mov
xor
mov
cmpsb
cwtl
xchg
adc
hlt
in
push
cwtl
sub
and
push
lret
adc
pop
movsl
pop
dec
xor
mov
lea
push
pop
call
aad
push
rcrb
push
xchg
roll
std
adc
adc
lods
neg
adc
push
sub
sub
xlat
mov
sub
cld
sub
pop
xor
sbb
shrl
dec
push
imul
xlat
pop
mov
or
in
or
fstl
mov
shl
fcomps
subb
pop
xchg
icebp
adc
sub
mov
js
lcall
cmp
clc
mov
sub
add
aam
cmp
fldl
fstpl
push
push
mov
or
mov
mov
cmp
pop
inc
dec
repz
sbb
push
roll
mov
sbb
jns
xchg
dec
push
xlat
rclb
pop
sub
loop
scas
xchg
test
ljmp
stc
and
pop
out
jne
cmp
out
pop
pop
addr16
rcrl
outsb
cltd
pop
enter
insb
movsb
hlt
jbe
or
push
pushf
inc
sub
sub
xor
mov
lods
outsl
test
push
hlt
adc
test
divl
mov
ret
fidivs
fucom
out
dec
hlt
fldenv
push
outsl
movsl
xchg
test
out
dec
popa
push
jp
mov
aaa
sub
ja
push
ljmp
test
mov
xlat
lcall
insl
pop
subl
add
pop
xchg
jmp
xor
jle
xchg
push
xor
add
pop
icebp
gs
jg
and
adc
idivl
rcrb
in
and
sub
arpl
fisubrs
out
aad
fstl
jbe
js
mov
lock
dec
insl
dec
jl
sub
push
andl
xor
shl
mov
cwtl
div
addr16
xor
scas
or
pop
mov
outsl
in
and
xchg
gs
arpl
xchg
arpl
int3
scas
pop
adc
or
mov
xor
xchg
loopne
cmpsb
sub
into
push
or
xchg
xlat
insb
stos
push
inc
inc
mov
int
aam
pushf
and
loope
xchg
xor
or
mov
and
dec
lock
lret
repnz
cld
and
std
in
js
push
fists
mov
cmp
mov
and
hlt
cmpsb
insb
fsubrl
push
lret
mov
cmp
je
jp
adc
insl
leave
add
insb
mov
cmp
js
ss
or
pusha
aad
sub
cmp
ds
stos
mov
cmc
test
pop
ret
push
ret
hlt
loop
frstor
xchg
jmp
arpl
fists
pop
cmpsb
movsb
pop
dec
or
bswap
gs
jecxz,pt
mov
add
xchg
adc
sbb
lds
inc
inc
enter
mov
repnz
jne
mov
stos
rcrl
sub
nop
dec
push
int3
pop
fimuls
call
pop
out
mov
jg
mov
xor
rcrl
cltd
bound
pop
cli
loop
or
inc
pop
ret
test
in
pop
add
dec
lcall
pop
mov
out
inc
cmp
arpl
push
or
in
and
fwait
jmp
pop
push
bound
fcoms
adc
inc
jno
and
jnp
lds
inc
aad
movsb
imul
loopne
mov
in
pop
notl
ret
je
push
cmc
or
sub
das
jecxz
cs
jge
rcrb
das
xchg
sub
fcom
repnz
enter
lods
es
aam
inc
pop
cli
mov
jmp
hlt
ret
stos
lret
insl
and
shr
jl
and
mov
dec
mov
std
and
dec
jmp
nop
and
mov
xchg
scas
xchg
out
pop
sub
loop
bound
lods
or
inc
dec
push
mov
xchg
out
sub
arpl
arpl
xchg
lock
adc
mov
inc
jmp
imul
repnz
repnz
or
sbb
inc
add
push
jmp
mov
xor
stos
fdivrl
lcall
push
mov
test
ljmp
je
out
mov
ret
and
fadds
bnd
adc
sub
cmpsl
or
leave
cld
std
dec
cmp
mov
int
filds
add
cmp
call
xorb
cmovo
shrb
inc
push
and
xchg
push
mov
mov
mov
daa
cmc
out
xchg
clc
cltd
sub
xor
das
mov
xchg
dec
scas
fimull
push
ss
jmp
lods
or
cmp
add
arpl
scas
and
xchg
jp
shll
dec
and
pop
dec
mov
sub
and
sub
pusha
push
and
jl
cmpsb
ljmp
inc
ret
jl
cmpsb
addr16
pop
inc
adc
xlat
xor
outsb
mov
pop
lcall
xorb
cwtl
repz
jl
push
mov
cmpsb
daa
cmp
arpl
xor
mov
cli
imul
xor
mov
in
aaa
mov
push
pop
aad
sar
and
mov
mov
test
dec
arpl
push
inc
push
mov
jg
aas
orb
mov
cmp
mov
pop
fldenv
mov
lds
ficompl
and
popf
sub
out
xchg
cs
fiadds
pop
push
and
mov
and
or
iret
test
jae
lods
aaa
xchg
pop
scas
xchg
loop
out
scas
xchg
nop
jno
mov
push
jo
lret
je
pop
or
in
out
cld
fsubp
adc
cld
jmp
adc
ja
pop
mov
xchg
lea
aam
sub
sub
cmp
jns
jns
out
mov
insl
mov
or
dec
jne
loope
dec
mov
xchg
pop
mov
push
add
test
test
xlat
push
call
clc
pop
mov
add
loop
int
lahf
xor
int3
and
rorl
dec
jbe
in
loop
and
sbb
mov
or
mov
cmp
adc
pusha
and
and
addr16
ljmp
sub
xchg
mov
sbb
cmp
pop
add
jle
cmc
push
sbb
mov
into
mov
or
pop
push
lcall
push
rcrb
iret
lds
or
aaa
fwait
cmp
ds
mov
pop
add
fmul
or
xchg
fstpt
inc
int
and
push
sarl
sub
cld
movsl
adc
sbb
insb
xchg
sbb
stos
ss
scas
xchg
daa
and
jle
mov
fadds
xor
add
loope
xor
adc
xchg
mov
pop
aas
loop
fimuls
cwtl
insl
int
sub
fadds
push
mov
fsubl
sbb
sbb
cmpb
add
sahf
or
iret
and
imul
mov
push
gs
jl
adc
jg
adc
inc
outsb
imul
popa
mov
icebp
xchg
jne
xchg
push
fistpll
test
inc
cmpsb
lahf
add
pop
cs
jmp
cmpsb
lods
rcl
adc
push
xor
shll
mov
ss
sahf
dec
pop
repz
sbb
xor
into
cmpl
hlt
loope
negl
mov
mov
sbb
mov
loope
fldl
rclw
jb
adc
fcmovu
xchg
adc
sub
loope
ds
dec
or
xchg
xchg
push
imul
inc
sbb
sbb
inc
dec
sub
dec
ficoms
inc
mov
icebp
fdivrs
sub
cmp
push
jle
int
or
into
mov
inc
push
dec
dec
les
push
call
jbe
xchg
adc
or
int3
sub
into
pop
mov
jo
dec
fisttpll
push
dec
cmp
sub
mov
mov
push
popf
vsubsd
lods
pop
push
iret
dec
mov
mov
fisubl
mov
adc
ret
out
cs
popa
mov
lock
fadds
fiaddl
or
sub
sub
xchg
mov
inc
out
xchg
or
add
in
inc
rclb
icebp
fistps
and
mov
push
out
rclb
icebp
cmp
sub
nop
push
push
ds
lods
jnp
mov
xchg
cmpsl
call
sub
xchg
mov
loop
mov
test
dec
mov
repz
repz
hlt
ja
xchg
push
arpl
ret
mov
inc
mov
pop
and
jl
rclb
mov
mov
add
int3
and
bound
mov
cld
push
and
aam
bound
jp
xchg
stos
push
insl
not
lahf
pop
cmp
inc
std
fildl
dec
int
data16
jge
jnp
add
call
outsl
jle
aaa
ljmp
mov
xchg
jl
bound
pushf
pusha
fwait
call
shll
push
sbb
push
out
roll
in
xor
fsubs
rorl
lret
bound
gs
sti
lods
sub
or
pop
fisubrs
xlat
scas
mov
aaa
adc
loop
adc
mov
lret
out
mov
outsl
adc
insb
and
jp
pusha
jle
pop
jl
xchg
jl
xor
pop
adc
and
aaa
xor
popf
inc
mov
and
cmp
incb
xor
mov
insl
and
push
sub
xchg
adc
xchg
sub
insl
clc
mov
call
scas
inc
das
dec
or
mov
daa
stc
imul
push
in
jbe
dec
dec
cmp
rcll
aam
cmp
fwait
mov
test
add
mov
pop
test
mov
out
scas
in
arpl
or
lea
mov
push
and
cltd
xor
lret
inc
inc
mov
pop
xor
shl
xchg
pop
and
and
mov
sbb
jno
out
orb
or
test
lret
sbb
sti
sti
push
jno
in
cmp
xor
jns
pop
jns
mov
adc
repz
sub
xchg
dec
sub
shrl
push
mov
subl
loope
enter
adc
fnstcw
ds
scas
ds
jge
mov
inc
sub
insl
mov
mov
subl
pop
sbb
shr
or
add
mov
and
push
adc
lds
mov
outsl
add
jmp
daa
loope
inc
adc
push
add
mov
jecxz
outsb
sbb
aaa
test
adc
mov
or
in
cmp
pop
jne
mov
mov
aam
sub
mov
aaa
add
and
add
mov
xchg
in
xchg
jge
or
lcall
jne
lods
arpl
das
ficomps
mov
mov
mov
scas
sahf
push
imul
stos
or
repnz
inc
adc
xor
mov
bound
pop
pop
into
pop
call
aaa
loope
out
and
dec
or
dec
out
pop
loopne
mov
pop
jecxz
movsb
sub
loopne
mov
out
shld
repnz
xchg
icebp
jnp
dec
into
jl
sarl
jmp
mov
iret
test
add
adc
sub
out
fstl
fsts
mov
dec
jbe
clc
mov
jnp
push
mov
sbb
daa
dec
loop
aad
or
addr16
xchg
adc
mov
pop
leave
cs
call
add
cmp
sbb
outsl
orb
jg
jle
push
insl
test
xchg
int3
sbb
pop
iret
fcomps
jb
mov
enter
pop
shrb
test
pop
pushf
sarb
int3
adc
fisubs
or
inc
sub
xchg
lcall
insb
outsb
xor
orl
jbe
dec
jecxz
xchg
in
ret
xchg
cltd
pushf
push
adc
cld
inc
push
jo
outsl
clc
jecxz
adc
enter
jae
jg
movsb
xchg
outsb
dec
dec
ficompl
mov
pop
mov
add
pop
mov
xor
fdivl
loop
fnstcw
mov
loope
sbb
test
negb
lahf
mov
xchg
es
push
xor
add
fstps
js
sbb
ret
sub
and
sbb
sub
jge
das
pop
popf
pop
push
dec
aaa
xor
std
test
or
sbb
xchg
adc
adc
jb
jb
jle
aam
push
aas
xchg
or
dec
or
pop
push
adc
jae
sbb
pop
push
dec
outsb
xchg
cmp
xor
push
inc
jbe
mov
insl
mov
stos
lods
sub
and
lcall
and
in
cmp
adc
std
adc
gs
addb
es
fmul
fists
xbegin
lahf
stc
shll
xor
pusha
mov
in
add
push
push
test
push
mov
test
add
and
mov
mov
test
filds
cs
rcr
mov
ds
decb
pop
jne
loope
xor
jns
adc
pop
fdivl
mov
sub
movsl
rcr
shll
dec
push
fs
ljmp
and
int
aas
xorl
repz
add
aam
ja
test
lret
xchg
cmpsl
cmp
icebp
or
cmp
data16
inc
pop
mov
mov
jo
ljmp
jns
out
andb
ljmp
add
dec
inc
ror
and
cmpl
stc
jb
xchg
pop
add
dec
xor
iret
xor
les
inc
lock
fbld
pop
rolb
xchg
inc
icebp
fldt
cwtl
xchg
xchg
xchg
lahf
lea
pusha
lea
inc
mov
ds
add
xchg
out
lods
lods
mov
sbb
cmpsl
fdivrl
out
push
mov
frndint
xlat
lds
bound
loop
jge
out
in
popa
cs
pushf
mov
mov
xorl
jecxz
push
xchg
aam
pop
rolb
imul
in
out
sub
push
test
jg
pop
push
jl
cmpsl
mov
mov
jp
push
pop
and
dec
scas
push
fsubrl
ja
mov
jo
out
pop
mov
push
call
movsb
dec
imul
int3
push
stos
frstpm(287
scas
rorl
lcall
xor
mov
and
hlt
jo
loop
mov
cld
mov
jns
std
inc
clc
cmp
jnp
add
add
inc
and
aad
rcrb
mov
pop
inc
nop
in
lea
repz
mov
and
pop
push
mov
add
push
mov
mov
mov
or
push
ret
push
sub
adc
xchg
mov
lea
jg
mov
int3
sub
popf
or
outsl
mov
push
pusha
push
adc
pop
rcrb
clc
addr16
add
mov
inc
out
lcall
call
or
imul
ficoms
in
jne
negl
inc
push
and
js
std
es
xor
stos
jle
nop
push
cmp
dec
mov
rcrb
cwtl
imul
add
bound
sub
insb
outsb
rcl
popf
push
adc
cs
ret
xchg
aas
jne
xlat
out
mov
lret
repnz
inc
inc
mov
cld
inc
adc
iret
add
cmp
push
add
fcomp
push
dec
ss
dec
sub
dec
pop
push
xor
loopne
xchg
nop
imul
mov
xor
test
jno
mov
sbb
mov
enter
add
push
lret
cmp
pop
cld
test
outsl
jge
add
rcrl
dec
add
daa
pop
andl
lcall
test
into
rol
sbb
in
xchg
clc
xchg
cmpsb
dec
add
std
push
cmp
addr16
sub
inc
int3
xchg
ror
stos
lods
inc
jb
mov
add
jne
aas
fwait
popa
xor
and
stos
lahf
lea
lcall
pop
or
fistl
and
push
movsb
dec
sub
mov
ljmp
jne
mov
pop
or
mov
inc
out
lea
sub
pop
mov
dec
xor
outsb
jb
push
push
out
mov
fdivrl
scas
les
jl
push
call
ljmp
push
lods
rcr
andb
imul
cs
mov
das
out
dec
push
outsb
mov
push
ja
in
sbb
add
cmp
jno
jle
sbb
aaa
xchg
hlt
adc
mov
mov
in
mov
gs
jg
jge
std
xor
mov
cmpsl
pop
imul
jg
pop
inc
rolb
mov
lds
jo
cmp
call
popf
mov
xor
xchg
out
insl
sub
or
std
jbe
adc
jb
fcompl
cltd
jp
jmp
push
arpl
inc
fisubrs
dec
sbb
cmp
jb
scas
xor
inc
mov
push
iret
int
fistps
jle
loop
out
jmp
add
ret
les
outsb
xchg
sbb
mov
sub
and
icebp
sarl
les
shll
jnp
inc
dec
jle
adc
mov
sbb
ror
je
mov
cmp
or
out
sub
ds
adc
aaa
imul
ljmp
inc
adc
prefetcht1
mov
dec
inc
dec
cltd
popf
xchg
ret
mov
xor
sub
jne
mov
push
jg
ret
jb
sbb
lretw
ret
test
or
or
and
xorb
inc
stc
pop
mov
push
rclb
dec
add
shlb
movb
mov
or
add
lock
sbb
gs
mov
jnp
or
rep
jo
aaa
jo
xchg
or
js
and
adc
ss
mov
out
inc
hlt
dec
and
in
cwtl
fwait
in
add
push
sbb
xor
hlt
sub
popf
dec
jnp
xor
jb
fdivrs
int3
push
in
xacquire
pop
lods
or
sub
xchg
mov
sub
sbb
cmp
mov
push
sbb
xor
push
test
inc
add
mov
test
fxch
rclb
xchg
bound
out
jg
bound
or
pop
sti
push
cmp
lahf
mov
in
gs
sub
xchg
push
jecxz
mov
hlt
mov
js
fistpll
mov
xlat
mov
or
int3
dec
lods
inc
lea
xchg
jno
rol
sbbb
pop
xlat
adcl
insb
imul
jge
mov
mov
sbb
idivl
icebp
mov
push
repz
shrb
hlt
repnz
in
cmp
iret
jp
add
add
scas
xor
popa
pop
cmpsb
xor
or
or
les
mov
mov
push
test
sub
push
lret
add
fwait
mov
out
dec
sub
push
xor
cltd
rorb
jnp
adc
nop
inc
out
scas
jl
mov
in
dec
cli
jl
pusha
xchg
mov
jae
test
jno
stos
sti
pushl
mov
mov
inc
mov
call
jne
xor
add
adc
inc
pop
mov
pusha
add
jle
pop
filds
mov
ss
sbbb
std
xor
xor
int3
pop
jno
or
hlt
pop
pusha
inc
adc
mov
and
mov
rcll
adc
shr
seto
sahf
mov
bound
test
mov
call
pop
call
pop
andl
stos
xchg
movsl
xor
sbb
insb
jl
cmpsb
xor
inc
nop
cs
mov
xor
xchg
xchg
push
xor
dec
in
data16
sub
lds
dec
stc
lcall
xchg
nop
cmp
out
lea
repnz
xchg
sub
fwait
and
fimuls
jmp
adc
inc
test
out
in
popa
or
jge
sarb
jo
into
out
aad
jbe
aaa
loope
adc
cmp
into
dec
arpl
loope
hlt
lret
fiaddl
pop
mov
push
aaa
cli
ret
test
cmp
loopne
and
sub
call
aam
test
daa
xor
xor
lds
int
mov
adc
ja
xchg
pushf
xchg
movsl
cmp
les
sub
in
mov
out
loope
adc
xchg
or
cltd
notl
js
lods
nop
sbb
lods
mov
mov
je
and
mov
mov
lock
cmpsb
xor
mov
mov
lcall
insl
xlat
scas
in
inc
cmp
std
push
enter
stos
adc
sar
mov
or
dec
outsb
test
pop
negb
gs
in
jle
scas
xchg
sub
test
insl
pop
lea
sub
aam
inc
push
xchg
iret
jle
mov
ja
scas
sbb
addb
aaa
aaa
jmp
in
add
dec
das
dec
pushf
out
mov
aas
bound
push
adc
pushf
jle
pop
cltd
dec
adc
mov
ficoml
dec
mov
jmp
fs
sarl
cmpsl
xchg
lret
pop
jbe
addb
jns
aam
xchg
loope
xor
leave
test
cs
jg
or
mulb
stos
shlb
mov
mov
add
cmp
pusha
or
pop
icebp
int
push
ret
or
mov
loopne
cmp
pop
mov
out
ret
repnz
push
daa
mov
adc
jno
add
jne
and
push
xor
mov
fcom
pop
out
ljmp
add
insb
push
sti
lea
daa
mov
movb
test
out
imull
movq
push
stos
mov
sbb
in
jge
xchg
add
adc
call
in
sbb
pop
mov
cmp
adc
or
sbb
cltd
pop
in
inc
jp
xchg
adc
add
repz
mov
adc
pop
adc
insb
repnz
mov
jmp
mov
mov
sub
notb
inc
sbb
push
cmp
jge
out
inc
mov
push
jg
je
inc
inc
imul
cmp
sub
add
cmpsb
cmp
test
lods
cmp
cmpsb
push
das
popa
mov
insb
in
add
xchg
stos
test
cld
nop
xchg
into
add
pop
push
int3
sub
add
cwtl
subl
add
shl
ret
adc
dec
outsb
stos
xor
pop
aas
mov
jae
in
cmpsb
xchg
ja
das
adc
jnp
and
xchg
push
xchg
xchg
shll
xor
in
cmp
xchg
mov
ss
mov
mov
das
enter
ds
mov
lahf
jg
mov
cmp
je
ret
loopne
out
insl
out
stos
fwait
lcall
out
pop
aas
fistpll
mov
popf
outsl
xorb
cwtl
xor
jmp
xor
enter
sbb
ja
popa
xorl
dec
mov
mov
stos
aam
int3
in
cmc
dec
pusha
imul
int
inc
adc
push
mov
fistpll
stos
lahf
mov
mov
call
cli
mov
scas
repnz
mov
dec
xor
and
jmp
les
sub
into
outsl
cltd
gs
pushf
xor
imul
call
mov
cmp
hlt
and
or
lods
fucomp
movsb
scas
adc
fwait
dec
fidivl
mov
out
mov
push
or
stc
or
mov
sub
test
xchg
arpl
jmp
shlb
cmp
sar
pop
jp
jne
lds
stos
nop
mov
icebp
cld
shlb
cmp
clc
add
cmpsl
cmp
pop
enter
lret
adc
mov
aaa
dec
sbb
jb
xchg
mov
mov
cmc
popf
sbb
jne
addr16
mov
cmpsl
jl
loop
sbb
pop
jmp
jle,pt
loopne
fsts
arpl
outsb
mov
xchg
int
test
mov
cli
and
or
jp
int
lods
jl
movsb
mov
rcll
cmpsb
aad
aas
out
pop
sti
sub
pop
lret
lods
and
mov
scas
ret
mov
push
fmuls
push
jle
sub
mov
push
xor
rol
xchg
jmp
in
dec
inc
outsl
cli
std
push
aad
xor
mov
dec
sbb
adc
dec
adc
adc
and
push
sbb
lcall
sahf
adc
mov
and
ss
div
mov
xchg
lcall
mov
mov
jo
mov
lods
loope
mov
sub
dec
mov
movl
int
inc
mov
add
cld
inc
gs
ret
les
cmp
sbb
push
mov
pop
fistps
jle,pt
data16
js
daa
mov
push
fistps
push
stos
fnsave
sarb
fdivr
dec
xor
push
adc
pop
jb
mov
incl
ja
xor
lret
or
cmp
fidivrl
push
and
loop
mov
fsts
sub
rcll
sub
cmc
adc
xchg
and
les
jmp
inc
cmpsb
pop
jmp
fadds
mov
ds
icebp
adc
addr16
mov
aaa
fsub
mov
das
aad
data16
test
add
xor
jl
in
cmpsl
bound
lret
mov
sahf
mov
insl
dec
ja,pt
rcr
mov
push
cmp
int
sub
pop
jl
lret
inc
fwait
dec
shlb
xchg
jle
cmp
in
dec
adc
sub
pop
fnstsw
sub
rcrl
push
mov
imul
pop
xchg
cli
sub
fisubl
xchg
jo
test
pop
shlb
and
xor
sti
and
aad
psubsw
incl
cmp
inc
jecxz
add
jno
in
ficompl
ds
test
popa
mov
gs
test
jb
dec
lock
mov
cmp
pushf
adc
add
inc
mov
push
int
ss
jecxz
pop
mov
out
pop
push
outsb
fnstenv
aas
pop
xorb
out
mov
cli
shll
xchg
push
pop
push
mov
lock
and
sub
push
icebp
push
cmp
add
pop
sarl
imul
pop
imul
sub
in
sbb
rcll
cmp
sbb
adc
inc
int
mov
mov
add
shlb
sahf
sbbb
filds
mov
stos
lea
push
xor
pop
out
mov
pop
jae
repnz
inc
test
sub
push
insl
fidivl
adc
pusha
movb
lea
iret
daa
dec
stos
mov
shlb
adc
xchg
pop
clc
adc
into
mov
and
push
aas
enter
mov
jmp
cltd
sbb
pop
aad
pop
adc
push
pop
inc
push
shrl
das
sub
add
aad
and
and
xor
fwait
call
hlt
js
call
push
loop
push
aaa
pop
mov
ds
lret
cmp
push
dec
adc
push
int3
std
lea
xor
or
sbb
sub
or
ljmp
popf
dec
push
or
sbb
stos
inc
cltd
xchg
es
push
mov
je
dec
scas
rol
sub
scas
adc
dec
xor
in
outsl
enter
sbb
and
xchg
dec
mov
rcrb
in
pop
jge
inc
popf
xchg
adc
ds
pop
mov
loopne
loop
jnp
xchg
movsb
jbe
aad
mov
fwait
xchg
ja
stos
lock
sbb
loope
cltd
call
add
inc
aas
mov
das
jnp
cmc
leave
insl
int3
xor
lahf
cmpl
addr16
xor
sub
mov
jmp
sbb
in
add
mov
push
mov
sub
pop
mov
cmp
jo
popa
push
movsb
push
xor
cs
pop
into
cmpl
nop
inc
movsb
scas
ret
cmp
popa
fadds
xchg
inc
and
mov
test
test
iret
daa
outsl
dec
add
sub
movsl
inc
outsl
lods
sbb
shll
jns
out
insb
divb
adc
cli
cmp
jne
push
ljmp
sbb
aad
pushf
inc
lahf
mov
mov
pushf
imul
and
cs
popf
lahf
leave
and
and
fwait
mov
sahf
xor
mov
add
jo
xchg
out
rcl
mov
and
scas
outsl
jns
fisttps
mov
pop
movsb
jmp
or
mov
sub
xor
xor
or
mov
das
repz
lds
sbb
mov
scas
mov
arpl
or
jp
out
mov
cmpsl
push
cltd
jmp
adc
sbb
je
hlt
in
fsubp
fdiv
cltd
adc
mov
xchg
clc
mov
xor
push
sbb
cli
sub
rcrl
fsub
jns
or
cmp
out
int
repz
xchg
fwait
pop
or
rolb
push
xor
sbb
lock
aad
jmp
sub
lods
xor
cmp
and
ja
inc
xchg
aaa
out
test
in
pop
dec
xchg
fisubrs
xor
push
adc
sbb
cmpsl
add
mov
inc
mov
cmp
mov
lret
xor
xor
dec
leave
cwtl
es
xchg
dec
movsb
les
xchg
pop
sahf
xor
push
dec
shrb
shr
cwtl
scas
mov
push
mov
clc
and
sbb
mov
cmp
pop
dec
dec
jno
pop
mov
in
out
pop
mov
ds
mov
and
clc
xlat
hlt
cmp
pop
sub
lods
clc
stos
push
nopl
loopne
out
cmpsl
outsl
jmp
push
shlb
cli
push
outsb
lret
dec
pop
call
mov
sbb
rol
pop
outsl
mov
popf
mul
sbb
sbb
daa
xchg
xchg
xchg
sub
aad
cli
mov
mov
xor
cwtl
loope
mov
fisubs
sbb
test
add
aad
add
adc
push
mov
sub
icebp
insb
cmp
lods
frstor
lret
mov
sub
fstpl
and
xchg
push
fstps
fld
das
fstl
dec
aad
mov
jg
mov
icebp
shlb
and
fldt
add
xor
rorb
ss
sub
cli
dec
je
jno
into
add
scas
pop
push
inc
jmp
mov
fbstp
cmpsb
push
test
sti
pop
loopne
outsl
push
mov
movsl
outsl
jo
jne
cmp
and
fs
adc
out
mov
mulb
fsub
jecxz
decb
and
sbb
shll
ja
addr16
sub
and
enter
and
fistps
jl
jns
jns
cwtl
es
cld
push
loopne
fdivrl
sub
cmp
insb
leave
mov
jl
loop
nop
in
movsb
repnz
pop
add
lods
push
dec
mov
das
aad
cmp
xchg
add
test
pop
push
mov
cs
icebp
lret
mov
movsb
cld
lret
push
dec
xchg
dec
imul
xlat
mov
add
fs
mov
xchg
sbb
insb
xchg
mov
dec
mov
mov
and
in
cwtl
imul
xor
cmp
adcb
and
lods
cwtl
cmp
scas
jbe
xchg
and
pushf
xchg
fistpl
fiaddl
leave
sbb
jns
pop
fwait
movsb
rol
mov
mov
test
jl
cmp
cmp
cld
lods
in
cmc
mov
inc
or
add
pop
cmp
inc
daa
popf
jb
cmp
ds
cmp
sub
stos
pop
addl
fmull
cmp
xor
sub
adc
fstl
mov
aas
enter
adc
jb
xchg
movb
lcall
xchg
mov
mov
sti
outsb
cmp
std
addl
into
sbb
push
scas
dec
into
dec
std
or
fidivl
mov
bound
cmc
xor
cmp
lods
dec
and
fsubp
divl
fnstcw
push
push
mov
cltd
cmp
cmpsl
or
adc
lods
scas
inc
out
test
xor
fmull
xorl
xchg
cmp
dec
js
or
xor
push
loope
out
and
add
icebp
mov
imul
push
xchg
add
jmp
loope
and
adc
rcll
stc
push
cli
push
mov
popa
and
push
inc
movsb
mov
jge
sbbl
mov
and
or
scas
into
out
test
fwait
insb
xchg
pusha
pusha
mov
jne
cltd
jns
sub
sub
sti
lret
stos
cmp
jmp
or
daa
mov
push
xchg
pop
pop
add
enter
pop
les
jmp
xor
mov
push
push
lods
mov
sahf
call
loope
xchg
mov
icebp
aam
aas
dec
push
mov
cmp
or
orb
fwait
and
mov
or
or
insb
push
dec
push
dec
nop
cmpb
sbb
popa
pop
mov
pop
loope
mov
inc
minps
mov
data16
xlat
sub
incb
jno
cmpsb
dec
cmp
lea
pop
sti
mov
icebp
pop
sbb
imull
int3
sti
adc
insl
mov
lea
mov
js
pop
or
aas
stc
jge
jne
in
sahf
jl
lret
or
lcall
sbb
aad
jmp
sub
add
nop
push
dec
jno
jbe
imul
jo
fstl
add
aas
es
jns,pn
xchg
test
xchg
lret
jb
adc
outsl
add
loop
sbb
cmp
sub
das
test
sub
sbb
adc
mov
mulb
out
or
xchg
cmp
js
push
aas
sti
das
loope
xor
pop
add
xchg
popa
sbb
out
push
dec
jp
rolb
data16
xor
or
jno
int3
inc
push
inc
insl
or
insl
jmp
and
push
pop
jle
outsb
aas
dec
jl
cmp
scas
leave
loopne
fmul
push
aas
fdivp
jns
cmc
sub
pop
add
push
mov
scas
in
loop
push
pop
fcomp
dec
sbb
mov
shll
dec
stos
inc
lds
sbb
cmp
xchg
adc
mov
xchg
dec
sbb
xor
adc
xor
scas
mov
lahf
sbb
mov
aas
loopne
in
adc
xchg
dec
je
pushf
test
unpckhps
les
jae
sbb
dec
mov
mov
mov
dec
xchg
xchg
sahf
inc
test
cmpsb
pusha
popf
fsts
jl
scas
mov
mov
pop
cmp
stos
xlat
out
xor
out
push
mov
sbb
imulb
aad
push
inc
sub
jle
es
push
lret
xorb
dec
push
and
cmp
lret
push
lret
pop
cs
inc
out
push
mov
in
adc
mov
das
out
shll
jae
lret
out
xchg
mov
adc
mov
xchg
lahf
pop
pop
sti
cwtl
adc
mov
pop
ljmp
scas
inc
test
mov
enter
adc
hlt
cmp
push
push
popf
sub
or
sbb
gs
inc
xor
push
in
xor
sub
fcmovnb
xchg
loope
or
and
jno
repnz
arpl
mov
in
fdivrs
push
sbb
int
hlt
push
cmc
and
sti
adc
scas
pop
cmpsl
fcompl
es
scas
and
movsb
xorb
mov
push
jmp
loop
out
call
mov
mov
insl
fld
dec
xor
jg
cmp
pop
fnstcw
je
xor
repnz
dec
rcrl
repnz
aad
jl
xorb
jnp
and
aaa
push
xor
pop
popl
cmp
sti
pop
std
dec
in
aas
jle
xchg
adc
push
mov
call
sbb
idivb
pop
sysenter
mov
lcall
pop
cmp
inc
jb
fs
add
xchg
rolb
mov
fsts
adc
jecxz
push
in
ficompl
loopne
insb
mov
shl
inc
pop
cmp
push
scas
pop
cmc
mov
insb
test
jno
test
sbb
xchg
jb
shrl
int3
push
inc
stos
sbb
testl
clc
adc
and
push
orb
in
jbe
jl
cmp
add
jb
mov
push
icebp
sbb
aas
xchg
int
aam
cmp
or
dec
out
int3
das
or
or
add
mov
pop
je
test
inc
clc
movsl
sbb
cmp
repz
mov
mov
jmp
ja
enter
cmpsb
out
insb
sub
push
pop
cltd
loopne
xorb
sub
stos
push
adc
jbe
mov
pop
mov
sub
jae
mov
xchg
and
mov
mov
xchg
lock
sub
lds
out
cmp
adc
in
into
add
cmp
subb
push
lahf
xor
sahf
outsl
movsb
jl
pop
cmc
lcall
popa
in
dec
and
int
cmp
jae
jnp
sub
inc
loop
add
out
push
mov
sub
xor
inc
fbld
sub
adc
jnp
fs
adcl
out
mov
pop
xor
dec
push
inc
fmull
lret
shl
outsl
ljmp
mov
insb
test
test
xor
fdivrl
pop
xchg
ja
inc
in
mov
dec
das
fs
mov
imul
dec
rcll
lcall
mov
sub
enter
fdivl
pop
fcmovnbe
mov
push
sti
loopne
sub
jle
lahf
out
leave
adc
add
pop
pop
adcl
loope
sub
mov
jb
out
xor
bound
fadd
mov
dec
jmp
incb
test
icebp
sub
pop
es
cli
popf
and
jo
aam
mov
in
data16
lcall
mov
mov
sub
jno
xor
ficoms
ds
repz
and
popf
xchg
pop
sub
cli
or
sub
cmp
add
pop
ret
mov
inc
cs
xchg
or
shl
shrl
shl
adc
rclb
sbb
aaa
mov
rcrb
loop
push
out
jnp
out
xor
mov
xchg
stos
sub
mov
in
mov
jbe
scas
lahf
data16
mov
pop
jae
pop
mov
sub
dec
pop
enter
mov
push
dec
sbb
addr16
xor
js
sbb
addr16
push
xor
lods
sahf
fisubrs
rcll
leave
mov
cmpsl
xchg
pop
push
sbb
dec
jmp
mov
daa
cltd
adc
jmp
sub
or
fs
pop
mov
xchg
stos
in
sub
iret
jg
mov
repz
push
fnstenv
and
mov
and
loop
mov
mov
and
jne
pop
in
sub
repz
or
inc
lods
xchg
jle
in
sub
inc
cs
clc
xor
out
mov
sbb
mov
or
mov
inc
in
mov
int
stos
cmp
push
xor
sbb
lods
add
add
cmc
sub
fs
setg
add
xchg
mov
cltd
popa
xchg
xor
jb
adc
xchg
lock
add
lcall
jnp
dec
int3
push
mov
cmp
addl
adc
mov
shr
mov
cwtl
fimuls
adc
and
pop
xchg
repz
xlat
jae
repnz
mov
add
out
test
enter
and
popf
popa
push
and
and
dec
pop
pop
rcr
mov
cli
push
pop
mulb
and
movsl
push
xor
xor
push
shlb
shll
imul
fwait
leave
cmp
daa
adc
flds
add
out
lret
adc
insb
lea
push
leave
sub
jns
leave
nop
adc
in
out
xor
xchg
div
sbb
loope
cmp
xchg
jle
scas
cmp
shll
mov
and
cmp
pop
xchg
push
cmpsb
fwait
xchg
jp
rorb
bound
pushl
push
cmp
push
out
jge
movsb
adc
lcall
int3
adcl
movsl
and
push
xor
test
push
cmpb
mov
sarl
fxch
loop
pop
pusha
inc
or
push
lcall
testb
push
pop
and
mov
adc
cs
pop
cmp
mov
outsl
or
sbb
pusha
rorb
fcompl
fdivp
hlt
std
mov
into
popa
bswap
loopne
and
cmp
xor
cmpsl
hlt
jnp
xor
repnz
nop
rcrb
fwait
mov
cmpl
or
mov
repnz
fisubrl
cmc
adc
adc
arpl
dec
xor
sub
push
lods
movsb
inc
and
arpl
das
push
cmp
sub
shl
ds
out
and
jp
adc
mov
loopne
cmp
sub
cs
mov
xchg
orb
xchg
or
mov
dec
ret
fidivs
cmp
xchg
ds
dec
loopne
test
ljmp
mov
aaa
cmpl
push
fcomps
aam
cltd
lds
jmp
ja
push
movsl
push
adc
cmpsl
aas
jnp
lods
shl
xor
push
dec
sbb
xchg
pop
sub
jo
and
mov
imul
call
jne
inc
inc
sbb
push
movsl
mov
xor
ljmp
sub
cmc
dec
std
cmp
push
mov
hlt
jmp
sub
popa
jmp
pop
or
fwait
inc
xor
iret
inc
jg
cmp
cmp
xchg
pop
jp
xchg
pop
jo
xchg
imul
test
pop
bound
in
fcomps
in
pop
adc
cmp
movsl
jle
mov
cwtl
nop
test
push
pop
dec
add
cld
ds
les
jnp
dec
loop
push
lock
xor
mov
scas
jo
test
xchg
push
cli
hlt
pop
movsl
sbb
addr16
push
paddusw
add
int
les
xor
mov
movsb
loop
movd
fcom
cs
mov
pop
or
cmp
adc
sbb
ficoms
out
dec
push
pop
iret
jge
cmc
repz
jle
mov
sub
icebp
push
loop
stos
inc
loop
fs
std
iret
pop
aam
mov
pop
arpl
aas
cmp
ss
ret
sti
inc
inc
lea
inc
test
insb
cmpsb
xorb
repz
add
cmp
push
pusha
dec
push
add
push
movsl
xor
push
and
jg
imul
jne
jno
sub
sub
outsb
push
xchg
push
loope
xor
mov
out
daa
in
das
mov
fsubrs
lods
push
mov
jno
pop
out
push
aad
imul
aaa
xor
gs
adc
adc
lods
pusha
mov
xchg
lret
xor
and
pusha
rcrb
daa
push
outsb
fisttps
nop
xchg
aas
pusha
mov
fcmovu
pop
rorb
in
cmp
or
lods
push
psubusb
and
sti
inc
mov
sahf
push
stos
add
dec
push
das
xor
push
xchg
cli
pushf
addr16
fmulp
jnp
sbb
movsb
test
xchg
call
das
loopne
cmp
xchg
adc
ja
leave
cmc
cmp
mov
inc
mov
jmp
xchg
jl
movsb
pop
mov
pushf
insl
xor
push
pusha
cmp
pop
rcrl
stc
leave
stos
mov
push
in
push
movsl
sub
mov
sbbl
int
dec
cmpb
loopne
pop
in
in
xchg
inc
testb
clc
int3
fwait
push
mov
jo
lret
or
dec
inc
add
xchg
or
cmp
fs
mov
and
fld
jmp
inc
aas
xor
out
mov
mov
stos
mov
cmp
dec
jmp
fidivrs
mov
mov
stos
inc
mov
and
pop
jne
in
jns
arpl
mov
std
push
lret
mov
in
mov
add
inc
push
adc
add
inc
mov
lods
cmpl
aam
adc
std
lcall
cmc
mov
test
loopne
fs
lcall
sbb
call
pusha
jl
imul
mov
fidivs
xchg
and
lock
imul
push
repz
xchg
stc
xchg
fdivr
ret
outsl
xchg
pop
aas
shl
or
jbe
jno
pop
dec
test
rclb
xor
test
sub
jno
insl
pop
sub
mov
jmp
adc
jb
lock
push
iret
cld
pop
fs
or
popa
sti
xor
cltd
rolb
das
pop
inc
cmp
data16
xor
pop
xchg
loop
ja
lcall
adc
lret
jae
sub
push
ret
dec
and
call
sbb
add
repnz
fwait
pop
xchg
or
ja
out
divb
adc
pop
imul
aam
shll
or
or
imul
sub
pop
xlat
test
pop
mov
dec
jle
pop
mov
dec
xor
arpl
into
ret
in
pushf
jge
jb
mov
cmpsb
imul
scas
and
mov
scas
xlat
fadds
les
shlb
jle
divl
push
cmc
xor
xlat
push
pop
xchg
insb
ja
xchg
push
orps
or
imul
xchg
xchg
pop
push
loop
addl
jecxz
mov
xchg
cmp
add
jnp
std
push
aam
outsl
rorl
icebp
pushf
and
fbstp
xorb
test
fidivrl
int
bound
in
fistpll
inc
cmp
pop
shl
sub
mov
call
xor
push
mov
pop
or
fsts
fnstsw
mov
outsl
dec
xchg
xchg
or
jl
fs
cmp
repz
pushf
mov
xor
or
sub
mov
mov
nop
stc
inc
mov
cmp
mull
mov
xor
aaa
xor
jb
inc
daa
fsubp
int
lcall
dec
mov
push
jl
lods
dec
dec
pop
sbb
mov
adc
xchg
or
jnp
xchg
add
xchg
mov
data16
pop
rcrb
lods
cltd
sbb
push
inc
outsl
js
sti
jl
dec
int3
push
pushl
popf
test
ljmp
test
ficoms
lret
or
lret
sti
push
ja
jecxz
in
or
and
sub
adc
ss
add
push
imul
clc
mov
loop
clc
xchg
push
push
sbb
mov
xchg
lds
mov
inc
jns
mov
repz
ss
jno
cld
out
ss
cmpsb
push
int
pop
mov
xchg
or
inc
sti
negl
iret
call
fildl
inc
jno
cli
push
and
out
add
or
jmp
out
lods
std
das
pop
mov
stos
in
inc
rcll
sbb
add
aad
push
push
or
and
xchg
hlt
test
add
test
loopne
inc
inc
adc
stos
and
pop
dec
imul
dec
test
mov
lcall
pop
dec
fs
dec
ret
jg
sub
inc
mov
dec
mov
xchg
sub
jb
sub
xchg
aad
in
sbb
xor
mov
add
ror
inc
out
shrl
test
out
cmp
push
xchg
cltd
push
push
mulb
mov
scas
push
jbe
and
lock
sub
fwait
outsb
testb
xchg
cmp
adc
repz
cmpsl
gs
xchg
test
repz
dec
dec
push
dec
nop
sub
xchg
ds
fbld
dec
les
jecxz
rcrb
fdivrl
or
out
nop
mov
dec
ja
mov
mov
push
mov
adcb
lods
adc
xchg
pushf
test
or
ror
xor
daa
mov
out
or
or
clc
into
lcall
jae
sub
into
or
mov
cmp
push
faddl
cli
in
aaa
pop
sbb
push
jns
jns
repnz
lock
xor
cmpsb
sarl
fcmovb
mov
mov
or
mov
xchg
scas
xchg
push
mov
jg
cmpsl
sbb
adc
push
and
outsb
lock
mov
xchg
test
ror
movsb
rcll
lahf
jae
xor
push
mov
ds
cmp
and
mov
addl
addr16
cli
xchg
loopnew
shr
incb
jmp
int3
addr16
imul
and
or
fsubrs
clc
xchg
cmc
cs
xchg
adc
orl
andb
dec
in
inc
stos
mov
xchg
ret
int3
dec
out
pusha
cmpsb
out
enter
cmp
mov
les
mov
ret
xor
rol
test
iret
or
push
cli
cmc
outsb
sahf
lret
push
push
xchg
decl
sbb
sub
icebp
test
addb
cmpsb
shlb
outsl
dec
sbb
jns
insb
gs
add
inc
in
mov
hlt
mov
icebp
mov
icebp
addr16
push
fildll
mov
dec
ds
fistpl
mov
jmp
int
fbstp
lock
dec
and
xchg
add
lock
imul
add
push
rcr
xchg
push
ret
aas
dec
sub
adcl
lcall
ret
call
mov
push
mov
stos
js
clc
inc
in
push
xchg
push
cmp
lock
cli
ds
sti
cmp
or
mov
push
out
push
sbb
jae
mov
ds
test
in
or
orl
jle
lods
mov
loopne
sbb
sbb
push
xchg
sbb
mov
out
nop
fidivl
or
mov
and
pop
or
popl
enter
push
pusha
push
jg
mov
nop
ret
sub
push
inc
xchg
xor
jb
imul
pop
push
ficomps
test
pop
xchg
lods
pop
xor
push
jae
jne
mov
ja
faddp
fsubr
or
or
sub
fnstsw
xor
mov
scas
neg
xchg
stos
setb
push
mov
mov
fwait
dec
shl
sub
dec
repnz
mov
leave
dec
xchg
mov
add
out
shrb
cltd
pop
xlat
xchg
aas
add
pop
ficompl
mov
mov
fnstenv
push
pop
jno
loopne
rclb
cli
or
stc
and
adc
sti
sbb
daa
sub
mov
mov
bound
sbb
test
test
ret
adc
sub
sarl
push
shll
cmp
pushf
fstps
add
xlat
xor
pop
xchg
xchg
lret
out
aad
add
mov
test
sub
mov
xchg
sarl
insb
shlb
mov
adc
mov
scas
scas
xchg
inc
xchg
sbb
stos
mov
pop
push
movsl
inc
push
paddd
pop
inc
and
out
aaa
fbstp
add
es
int3
xor
cmp
mov
enter
adc
adc
sbb
aam
scas
lea
xchg
jp
mov
jno
int3
cmpsb
sub
mov
mov
jae
jl
inc
mov
inc
xchg
loope
into
and
jmp
clc
mov
cmp
xor
scas
outsb
clc
jo
push
pop
sbb
push
sub
out
xor
leave
inc
ja
fcmovnb
cmp
shll
loopne
mov
xlat
test
adcb
push
add
jecxz
sahf
mov
insl
je
fs
test
sbb
incl
sub
mov
push
lds
prefetch
cmp
or
sahf
inc
xlat
bound
sti
add
into
mov
dec
ja
xchg
ljmp
inc
add
add
int3
jl
xor
adcl
sbb
xor
stos
in
fdivs
sar
sbb
pop
sub
jnp
shlb
sub
mov
cmpb
jns
sbb
dec
rclb
repnz
xchg
xor
and
add
cmp
ret
push
or
mov
add
push
inc
enterw
or
in
adc
mov
aad
imul
es
cwtl
sbb
cwtl
sbb
dec
add
call
sub
mov
out
adc
loope
scas
push
inc
xchg
pop
fstpt
sbb
aaa
cmpsb
add
mov
popf
stc
mov
scas
sbb
pop
sbb
negl
lods
addb
cmp
add
das
fimull
test
cli
out
xchg
adc
xor
test
xchg
es
jecxz
mov
mov
stos
mov
mov
xchg
in
pop
push
inc
push
push
push
loop
push
sbb
and
fldcw
jle
cmp
lds
mov
push
sti
jp
loope
fstpl
xchg
mov
xchg
sub
and
arpl
dec
cli
or
push
xchg
lock
and
push
push
pop
xchg
xor
sbb
xchg
add
subb
popf
pop
in
cmc
mov
jge
inc
testl
sub
lret
and
inc
fdiv
add
pop
ss
aas
rclb
imul
xor
aaa
bound
into
shrl
push
jne
jo
adc
pop
mov
cltd
sbb
mov
cmpl
leave
gs
lock
inc
lcall
dec
mov
mov
xor
jae
sbb
cmp
lds
and
je
adc
jle
xor
inc
sbb
dec
adc
push
and
icebp
imul
jae
add
jge
ljmp
or
xchg
fisubrl
or
xchg
sbb
subb
push
mov
sub
popf
sub
lods
fldenv
lret
sub
out
test
ds
mov
adc
xor
jmp
jns
xchg
push
or
inc
sub
or
and
andb
add
negl
push
outsl
ret
adc
cmp
scas
ret
sti
cld
dec
mov
adc
gs
jmp
ja
bnd
push
insb
and
in
jmp
push
inc
adc
mov
pop
cmp
addr16
nop
pop
ljmp
jg
bound
enter
iret
add
add
jecxz
sahf
and
xorl
in
pop
mov
out
sbb
imull
sub
mov
jbe
test
loope
dec
inc
js,pn
inc
dec
add
addr16
arpl
shr
adc
bound
and
clc
ror
ja
pop
mov
xchg
adc
sbb
scas
lcall
scas
out
cmp
xor
out
xor
outsb
and
and
inc
mov
mov
cmp
out
js
sbb
adc
stos
xorl
push
jl
cmp
dec
mov
mov
mov
xor
xor
adc
sub
divb
cmp
lods
ret
inc
in
mov
int3
mov
mov
inc
leave
fildl
mov
daa
xchg
cmp
idivb
test
dec
inc
mov
lret
xor
xchg
mov
inc
push
mov
mov
jbe
mov
push
or
cmp
call
into
push
addr16
in
fmull
pop
arpl
lcall
add
pop
scas
adc
loopne
push
xchg
or
push
add
imul
jbe
sbb
cmpb
fcmovnu
hlt
push
or
gs
mov
push
fsubr
lahf
dec
out
and
fcompl
test
inc
lods
stos
xchg
ficompl
outsl
sahf
aaa
shll
sbb
in
adc
aas
ljmp
xor
dec
dec
outsl
pop
push
sbb
lea
lds
dec
xchg
add
jecxz
jg
mov
test
nop
repnz
arpl
inc
pop
ja
sbb
dec
mov
loopne
lret
jecxz
inc
movsb
roll
cmp
aad
pop
dec
test
shrb
cmp
mov
lds
shlb
sub
mov
push
sub
mov
aad
repnz
add
pop
loope
add
rorl
mov
sub
pusha
mov
negl
push
shlb
cmp
adc
jo
popa
push
sub
mov
in
sbb
inc
arpl
adc
fisubrs
pop
aaa
adc
mov
sub
int3
insb
jno
mov
mov
and
enter
mov
in
shll
and
ret
pop
ret
hlt
cli
cmp
hlt
xchg
fisubl
pop
pop
cmp
iret
int3
rcll
push
daa
in
sub
jecxz
out
inc
in
push
cs
xchg
out
das
popa
mov
fidivrs
lahf
mov
and
push
and
mov
adc
cmp
inc
fwait
lea
hlt
arpl
pop
clc
out
add
fldz
stos
or
jmp
inc
lahf
mov
imul
sarl
shlb
sar
out
dec
and
shll
repnz
nop
aam
fcomps
mov
bound
ds
push
jo
xchg
pop
fisubl
mov
cs
aad
mov
adc
inc
pop
xlat
outsl
arpl
enter
inc
jns
addr16
jle
out
adc
xchg
and
mov
sbb
orl
sub
cmpsb
inc
xor
sub
push
sarb
cmpsl
push
jne
rcrl
jp
add
push
shr
sbb
mov
sub
sub
push
lock
lret
push
and
jmp
fistpl
popf
in
mov
or
mov
pop
pop
push
imul
ds
icebp
inc
add
jns
pop
cmpsl
pop
repz
sbb
fbstp
stos
jg
add
dec
inc
lds
ret
int
fwait
push
inc
mov
cmp
jnp
fdivs
add
sub
cmpsb
dec
xchg
hlt
cmpb
sbb
cmp
pop
push
mov
cmpsb
push
lods
call
lods
xor
pop
out
cli
xor
and
lods
fnstcw
test
mov
fstpt
mov
xchg
in
insb
ljmp
xor
adc
insb
mov
mov
test
pop
fisubs
aaa
mov
adc
mov
jnp
rcll
adc
lret
pop
inc
mov
add
mov
in
jl
jp
mov
jo
push
push
lret
ss
outsl
dec
xchg
inc
cmp
mov
pop
lock
xchg
inc
add
push
pushf
lahf
test
andl
movsl
gs
lret
or
add
xlat
rcl
push
frstor
out
aaa
repz
cmpb
aas
orb
pop
icebp
lcall
in
pop
out
pop
mov
xchg
aas
jns
sbb
cmp
aad
add
fcoms
cwtl
sbb
jb
repnz
loop
mov
sbb
dec
sbb
out
add
sbb
or
mov
xchg
divl
sub
fstps
cmp
int
jne
jle
jmp
push
stos
sub
mov
movl
push
and
sub
orl
andl
out
lahf
ret
lret
sub
loopne
dec
pusha
push
inc
rorl
nop
stc
dec
stos
ret
pop
xchg
sbb
sub
jo
cmp
xchg
rclb
leave
mov
in
cmpsb
xlat
movl
and
std
mov
cmp
fldl
xor
mov
pop
repz
dec
sbb
jle
shll
pop
jne
pop
cmp
lcall
gs
pop
sarl
and
fdivp
and
adc
add
cld
jns
sub
xor
arpl
test
mov
mov
les
mov
mov
ret
jle
jmp
cmpsl
notb
in
pop
nop
add
rcll
xchg
add
sbb
push
pop
xchg
lock
ret
inc
imul
sahf
mov
adc
jae
inc
adc
push
dec
mov
sub
cmc
jle
pop
scas
fistl
cmp
gs
xor
push
mov
data16
dec
push
sarb
loopne
xchg
push
hlt
pop
push
xchg
xlat
jno
in
inc
mov
dec
cmp
pushf
dec
movsb
dec
lahf
sbb
mov
pushf
mov
push
imull
insl
data16
jo
push
push
mov
push
and
dec
dec
mov
push
test
jbe
sarl
xor
jge
add
das
xor
add
hlt
fwait
push
ljmp
push
xchg
test
push
mov
ret
xchg
insl
add
stos
pop
xchg
add
cmp
mov
xchg
xchg
scas
jp
xor
pop
xchg
aad
dec
in
rcl
clc
cwtl
mov
aam
cmp
sub
mov
xchg
pushf
jno
sub
stos
sbb
cs
setno
jnp
fisttpl
mov
fnstcw
and
jmp
cmp
test
js
repz
pop
arpl
push
cmp
fisttpll
adc
repnz
mov
cmc
push
inc
pop
data16
out
outsl
cmpsb
jg
adc
and
rolb
lea
rolb
dec
hlt
pop
movsb
fistpl
aas
in
jle
filds
lahf
bound
dec
scas
mov
add
mov
sbb
pushf
mov
adc
jecxz
push
sub
cmc
mov
test
dec
inc
jae
mov
icebp
in
rol
sti
ucomiss
or
clc
sbb
shll
fsubr
xchg
imulb
push
dec
add
movsb
xor
ret
add
pop
js
xchg
addr16
push
into
cwtl
js
cltd
aas
jg
push
mov
clc
cwtl
loopne
sub
lret
push
cmp
loope
movsb
xor
fdivl
daa
in
stos
cmp
mov
adc
sti
cmp
inc
jo
mov
dec
scas
test
cmp
cmpsb
rorl
jge
icebp
stc
or
sti
push
dec
xor
imul
fucomp
jl
mov
jecxz
cwtl
mov
in
xchg
addr16
push
in
cmp
jp
adc
xchg
xchg
cltd
push
rcrb
ret
xchg
fidivrs
push
xor
in
sub
rclb
pop
mov
adc
cmp
jo
or
insl
lods
ret
xchg
loop
xchg
xor
and
cmp
push
xchg
fwait
gs
cmp
cmp
jne
inc
mov
dec
jo
into
pop
test
sbb
lcall
cmpsb
mov
subl
outsl
xchg
addl
mov
std
push
shrb
test
ret
out
mov
ja
adc
add
sbbb
rorb
push
sub
mov
jb
lods
jmp
jp
scas
add
pop
fwait
nop
inc
fs
sub
popf
fwait
mov
aaa
cmp
call
inc
sbb
and
push
and
sbb
sarl
movhps
adc
xchg
jne
jo
jge
gs
or
mov
in
inc
push
jg
cmpsl
cmp
push
push
xor
jnp
inc
ds
lea
xor
ret
test
cld
leave
repnz
jge
cwtl
xchg
les
std
dec
cmc
sub
aas
adc
sub
sub
jle
pop
add
jp
inc
scas
inc
jnp
movsl
pop
sub
push
adc
leave
or
xchg
pop
sub
mov
xchg
mov
inc
cmovle
les
fdivl
es
movsl
cltd
stc
pop
or
jg
ret
les
cmp
addr16
xchg
xlat
ljmp
jg
xchg
adc
add
sbb
or
add
cmp
repnz
popa
arpl
adc
mov
cmp
jecxz
inc
jne
xor
pusha
or
sbb
add
mov
fucomip
inc
pop
pop
bound
xchg
push
ficomps
push
shll
cwtl
push
aas
iret
lds
arpl
out
iret
test
xchg
jmp
push
inc
mov
jnp
in
ss
rol
aad
je
xor
dec
xor
mov
insb
mov
adc
mov
je
cmpsb
stos
in
push
ja
cmpsb
mov
fdivs
fdivp
out
mov
xor
daa
sbb
sbb
jg
push
pop
stos
pushf
mov
inc
arpl
pop
sub
push
pop
cmp
mov
mov
js
cmpl
outsb
adc
out
fs
iret
sbb
pop
out
push
adc
bound
pop
mov
or
xchg
int
clc
adc
fstps
cmpsl
mov
cmc
adc
mov
dec
ljmp
jp
lock
jbe
inc
push
repnz
cld
arpl
jno
inc
add
jne
xchg
xchg
push
or
jmp
dec
dec
inc
mov
cmp
outsl
lods
add
push
cmp
cmp
xor
jp
out
inc
movsl
repnz
mov
stos
dec
cli
jne
ss
xchg
cwtl
push
mov
push
push
xchg
inc
xchg
sub
cmp
adc
es
js
sbb
int3
jae
cltd
xor
push
cwtl
inc
sbb
add
neg
xor
out
cmp
shll
cmp
negb
flds
fildll
insb
push
imul
pop
movsl
jg
jae
pop
pslld
bound
inc
push
fcompl
jecxz
inc
mov
pop
sbb
push
pop
bound
cwtl
sbbl
in
iret
lods
add
out
sbb
ds
mov
in
cmpsb
mov
mov
mov
jmp
movsb
popa
ret
cmpsb
xchg
xor
or
mov
insl
ror
insl
mov
or
out
loop
clc
jo
sub
cmpsl
out
cmp
push
pop
fiaddl
and
clc
sub
push
imul
fucomi
imul
pop
ljmp
lds
lock
sahf
mov
adc
push
aad
jo
icebp
pop
sbb
or
xor
cmp
and
jmp
jno
lcall
enter
and
xchg
sub
jge
jo
loope
mov
int
int3
add
out
adc
xchg
add
test
cmpb
into
xchg
loop
enter
inc
jb
movsl
jmp
ret
fildll
aas
xchg
pop
ret
pop
mov
mov
clc
fmull
data16
add
xor
add
inc
test
mov
jno
pop
repz
dec
hlt
jge
adc
jle
jbe
jg
inc
inc
pop
test
mov
lods
adc
mov
mov
dec
push
xchg
cmpsl
loop
push
xor
mov
fdivrp
gs
mov
adc
and
mov
in
cmp
add
inc
mov
sub
loope
mov
mov
dec
xchg
pop
test
xchg
xchg
lods
icebp
in
or
add
cmpsl
xchg
in
inc
dec
mov
sbb
mov
lret
out
push
and
cwtl
pop
jnp
iret
outsl
ret
sub
inc
sub
cs
inc
inc
arpl
aam
sbb
lcall
mov
xchg
mov
mov
and
enter
sbb
dec
xor
loop
int
movsb
cmp
mov
jg
sbb
scas
pushf
repz
mov
lock
pop
out
cmpsl
insl
mov
xor
push
fdivrl
add
and
fucom
add
fcmovne
fstps
cwtl
dec
fbld
pusha
cld
mov
fwait
lahf
nop
mov
imul
pushf
xchg
inc
aad
adcb
repz
sbb
jo
jle
test
sbb
jae
loope
imul
inc
das
aas
aam
lahf
adc
dec
pop
addr16
pop
daa
mov
or
out
pusha
mov
jle
out
sub
sub
lea
fdivs
sub
xchg
sti
int3
inc
mov
sub
inc
test
sti
inc
cmp
mov
sub
lock
pop
dec
pusha
mov
fadd
mov
sarl
cmp
sub
pushf
mov
add
and
shlb
out
mov
enter
pop
adc
cmp
sbb
jnp
rcr
punpcklbw
cmc
mov
ret
add
inc
adc
cwtl
rcll
cmpsl
mov
les
ret
inc
pushf
fldln2
mov
adc
das
imul
sub
cmpsl
or
jbe
movsb
adc
sub
jle
inc
or
add
dec
lret
pop
mov
aad
mov
test
add
inc
mov
xor
xchg
xor
xchg
or
xchg
dec
push
mov
push
fwait
xor
in
or
std
push
inc
push
push
add
popf
ljmp
cmpsl
or
mov
lock
cmp
fisttpl
fucomp
jg
add
lahf
cmp
stos
jo
jmp
jae,pt
lds
addb
les
lcall
xchg
xchg
pop
jp
and
pop
lret
add
adc
push
repz
rol
outsb
dec
dec
test
out
hlt
loop
adc
cmpsl
adc
cmp
mov
cltd
mov
lods
hlt
loopnew
js
mov
sub
lds
out
les
jp
in
mov
inc
sub
mov
fisubrs
mov
dec
dec
movsl
mov
sbb
xchg
test
push
enter
movsl
sahf
repz
mov
and
insb
xchg
dec
pushf
pushf
aad
jnp
ret
ljmp
pop
pop
push
mov
jae
in
adc
xor
mov
sub
mov
iret
ljmp
movsl
ficompl
pop
xabort
cmpl
push
mov
inc
pop
inc
and
mov
outsb
fisubrs
stc
push
repz
dec
sub
pavgb
jae
shlb
mov
and
pop
sahf
call
mov
and
xorl
mov
dec
xor
in
push
jnp
js
lock
sub
cmp
xlat
lods
enter
pusha
push
pop
jbe
out
movsl
popf
mov
xlat
adc
jmp
jecxz
jnp
frstor
filds
or
add
mov
or
inc
mov
test
mov
jecxz
jnp
out
xor
sub
sbb
jo
mov
lock
inc
jmp
fwait
imul
or
xchg
pop
in
xor
je
or
in
fcom
cmp
push
lods
lret
daa
and
insl
add
stos
add
enter
iret
jae
sbb
jge
bound
jg
movsl
cmp
cmp
pop
xorl
mov
sub
test
in
ds
scas
sub
sbb
pop
sub
inc
das
sarl
xor
dec
mov
adc
in
nop
sarb
dec
add
scas
pop
outsl
sub
sbb
sub
lds
jno
mov
and
in
sub
pop
xor
sti
into
adc
sbb
xchg
iret
sub
sbb
cmpl
outsl
sarl
repnz
mov
test
and
xchg
fiadds
stos
or
rolb
xchg
inc
fmuls
dec
icebp
pop
dec
cmp
sub
push
and
cs
cld
lcall
dec
mov
inc
pop
ss
dec
test
xchg
and
sub
mov
cld
imul
aas
fsts
xchg
jmp
test
gs
andb
mov
das
insb
add
aam
in
pop
je
mov
sub
ja
xchg
fists
mov
push
fsts
mov
fmul
jecxz
mov
and
insl
xchg
xor
lods
fiadds
pop
out
cmp
mov
mov
mov
cmpsb
or
sahf
or
repz
lret
pop
test
out
push
push
nop
pop
xor
push
mov
enter
dec
xor
jnp
out
cmp
push
jp
ret
enter
into
xor
and
pop
mov
mov
scas
mov
lock
pop
sbb
add
sbb
fildll
lret
popa
rol
sub
and
pusha
js
enter
cmp
shufps
mov
pop
add
ret
jne
pop
in
cmp
negl
ret
test
sbb
and
out
into
push
hlt
sti
mov
xchg
add
mov
xor
sbb
aaa
loop
and
fdivrs
adc
adc
test
hlt
out
fdivl
pop
add
cmp
add
add
nop
lock
mov
addb
addr16
mov
stc
lahf
out
sub
mov
xchg
ret
push
popa
rcr
pop
cmp
pop
inc
stc
push
pushf
out
insb
mov
and
adc
xlat
stos
loope
mov
cmp
in
lds
mov
movsl
clc
fistl
xor
shlb
add
fisttps
faddl
xchg
or
cmp
sub
lcall
lock
inc
mov
in
fcompl
imul
fisubrl
sbb
inc
jge
scas
pop
or
in
loopne
in
sbb
and
push
iret
add
adc
imul
orb
pushf
ss
les
lock
mov
cmp
aam
cs
daa
pop
fisubs
jo
out
inc
inc
inc
adc
cmpl
and
add
dec
pushf
ret
adc
dec
xchg
sahf
push
adc
std
mov
push
aas
test
dec
mov
ret
push
add
fisttpll
ret
add
jae
xbegin
rcll
enter
hlt
mov
xchg
xor
xor
adc
mov
cmp
jp
mov
and
sbb
jge
cltd
inc
sbb
cwtl
and
lret
clc
jns
out
imul
mov
repz
inc
pop
cmc
ret
shr
add
and
cmp
lds
iret
adc
inc
mov
iret
pop
pop
or
inc
sbbl
movsb
cmpb
int3
and
sbb
bt
xchg
std
jb
shl
cmp
fwait
insl
outsl
or
je
aaa
sub
sbb
sarb
push
push
and
and
xor
mov
dec
lcall
fst
dec
sub
jmp
loopne
clc
shlb
inc
mov
test
adc
mov
jmp
fstps
pop
mov
ss
repz
xor
push
jb
sub
mov
adcb
push
push
adc
out
xchg
mov
xchg
pop
inc
push
push
xchg
enter
addl
sub
ret
push
loopne
push
push
mov
xor
sbb
xchg
adc
lock
xor
add
add
adc
data16
push
inc
adc
fwait
cld
mov
push
dec
out
fimuls
rorl
clc
push
data16
lret
rcr
mov
jl
nop
xchg
ss
mov
mov
inc
push
scas
pop
mov
push
push
mov
push
lds
push
stos
dec
inc
push
mov
xchg
mov
lods
pop
jbe
dec
insb
and
mov
dec
pusha
mov
adc
push
jns
pop
mov
and
or
push
mov
mov
decb
inc
in
jns
dec
mov
push
or
xor
ret
cli
sbb
loopne
dec
xor
lea
jl
inc
inc
leave
add
jne
sti
pop
cmp
cld
mov
paddsw
cwtl
xlat
stc
inc
sti
lret
jns
pop
xchg
mov
jg
sub
dec
inc
jg
subb
push
sarb
pop
aam
mov
lods
rorl
xor
dec
addb
pop
mov
jmp
int
adc
shl
pop
sub
into
sub
loopne
mov
push
int
mov
ret
xchg
pop
push
data16
adc
iret
xchg
pop
or
cmp
jp
mov
adc
cmp
push
mov
inc
in
outsl
loopne
call
inc
nop
aad
sbb
mov
in
and
imul
add
dec
push
mov
adc
cmpl
aad
inc
out
and
adc
sub
adcl
add
sub
int3
clc
insl
aaa
lcall
xor
mov
jge
sbb
rcr
ja
popf
inc
into
push
jl
cmp
add
ljmp
insb
sbb
sub
adc
jnp
scas
lods
jbe
push
leave
jge
push
mov
pop
bound
sub
jg
ret
movsl
mov
add
popf
sub
mov
push
rcl
int3
sub
sbb
xchg
stos
mov
inc
mov
inc
mov
pop
pop
out
xchg
lods
xor
jae
pop
cmpsl
lods
and
pop
dec
out
inc
jbe
or
cmc
xor
popf
dec
add
mov
cmp
pop
and
mov
or
add
imulb
push
cmc
addr16
mov
xchg
cmpl
pop
add
or
cli
jmp
and
add
inc
inc
lret
push
call
push
push
cmp
mov
mov
xchg
cmp
gs
cmpsl
pop
push
or
movsb
and
ja
push
cwtl
aam
stc
add
cmp
add
lret
push
mov
mov
ss
jb
mov
mov
ss
fwait
imul
or
cmp
out
ja
mov
lods
dec
lahf
mov
out
cmp
sbb
leave
dec
fcmovu
mov
outsb
popa
sbb
out
jbe
cltd
push
lock
in
jl
sub
out
test
xchg
mov
mov
xlat
loopne
int
mov
jge
fimuls
pop
lret
js
pop
shlb
jne
incl
sbb
push
imul
dec
iret
mov
bound
gs
iret
pushf
inc
add
sarb
mov
test
or
fwait
xchg
movsl
data16
mov
fdivp
pop
negb
cmpsl
mov
adc
xor
outsb
sbb
aad
loope
mov
iret
dec
insl
std
out
roll
push
enter
sbbl
icebp
arpl
xchg
cli
push
je
lock
repnz
jge
mov
call
mov
mov
xchg
mov
ss
jns
mov
inc
sub
xchg
xchg
popf
xchg
mov
dec
das
add
pop
xor
repz
mov
test
adc
jnp
xor
rolb
jge
adc
cmp
lcall
dec
dec
xchg
cmc
cmp
xchg
inc
adc
jle
lcall
jns
xor
std
mov
and
std
int3
scas
xor
dec
lds
inc
aaa
ret
sbb
sub
int3
sbb
sub
fstps
stos
adc
ror
add
ja
popf
paddusb
sub
call
lret
das
cmp
xlat
pop
or
jns
jge
lock
inc
loope
popf
test
inc
and
mov
add
push
addl
rclb
addb
fwait
pusha
xor
sub
mov
dec
xchg
lods
pop
push
xchg
cld
es
in
mov
sbb
ret
outsb
sub
inc
xchg
addl
dec
push
repz
inc
addr16
aas
mov
lcall
sub
leave
push
enter
out
xchg
pop
dec
das
movsb
aam
pop
or
shll
push
xor
or
sbb
imul
xchg
sub
mov
shlb
xor
fwait
subb
das
xchg
aaa
aas
dec
mov
xor
sbb
stc
rorb
and
inc
xor
push
cld
sbb
fs
cmp
push
jle
movsl
pop
int
jecxz
sbb
or
dec
cmc
sbb
add
nopl
mov
mov
outsl
sbb
outsl
jae
cltd
cmp
lods
inc
cmpsb
repnz
ss
std
push
stc
lea
jp
add
rorb
dec
jb
fsubs
jnp
je
jnp
or
dec
and
loopne
cwtl
adc
jge
push
mov
ja
xchg
xchg
popf
jp
xabort
jmp
fcmovnbe
out
push
mov
xor
scas
sub
cwtl
andb
add
mov
xor
cmc
or
lds
mov
mov
xlat
add
data16
push
mov
lahf
and
ljmp
lods
pop
push
lcall
xchg
insb
adc
sub
das
out
cltd
lds
xchg
jnp
out
pop
adc
ja
mov
repnz
sub
or
shlb
aas
mov
xchg
adc
lods
pusha
pushf
xchg
or
push
loop
lahf
mov
sub
mov
sub
cltd
xchg
sbb
add
bound
jle
xchg
adc
int3
loope
jle
cmp
pop
xchg
int
xlat
adc
jno
ds
mov
dec
mov
loopne
daa
jns
lock
push
pop
arpl
bnd
dec
xchg
shrl
inc
xlat
push
insb
jl
or
int
shr
in
mov
cmpl
popa
js
ljmp
leave
lahf
push
cmpsl
jle
fimuls
push
dec
adc
add
test
mov
or
test
xchg
fnstsw
out
aaa
fmull
mov
test
nopl
xchg
daa
dec
shl
mov
xchg
repnz
push
ds
mov
pop
dec
data16
mov
lds
pop
and
fsubrl
arpl
ljmp
sub
jno
xor
pop
lret
sub
xchg
jp
and
adc
gs
sbb
out
inc
push
cld
icebp
xchg
je
clc
mov
fwait
jmp
jl
mov
movsb
sub
mov
xchg
inc
jbe
cmp
dec
hlt
daa
adc
cmp
cmpsl
or
and
scas
xlat
jmp
jb
fadds
push
aaa
pop
cltd
sti
stos
push
inc
out
orl
in
std
rclb
mov
test
mov
inc
leave
lahf
fidivl
xlat
mov
daa
nop
mov
add
test
pusha
push
shlb
lods
jne
add
jp
int3
or
jp
in
lahf
iret
sti
mov
push
mov
pop
adc
adc
std
stc
jecxz
popa
in
fwait
ss
sahf
fwait
jne
mov
mov
les
shrl
ret
inc
test
je
insb
or
add
mov
adc
int
out
adc
jne
sub
mov
add
std
adc
and
mov
ret
and
lret
jp
adc
or
mov
jbe
stos
test
stc
push
call
dec
or
sbb
dec
xchg
int
jg
sbb
rcrb
popa
jbe
orb
add
cmp
xor
dec
iret
jmp
or
lahf
pop
xor
andl
dec
and
jl
into
sub
insb
mov
mov
pop
jo
leave
dec
fwait
add
push
pushf
push
movsb
daa
adc
sub
pushl
mov
int3
and
int
cltd
push
pop
lcall
addr16
out
lcall
add
sbb
mov
inc
inc
cmc
in
mov
and
mov
gs
int3
lock
cmp
sbb
data16
in
pushf
push
mov
inc
cmp
repz
fimull
or
out
lods
aaa
cmpb
movsl
imul
and
ror
sbb
jp
fs
shll
aas
and
cmp
sbb
and
push
in
and
xchg
insb
call
pop
scas
jecxz
adc
movsb
xlat
ds
pop
fstpt
and
shrb
and
fwait
daa
cmpsl
pushf
mov
mov
jmp
cmp
jp
adc
rcrb
repnz
movaps
fdivl
int3
jl
ficoms
mov
fimuls
aas
scas
jbe
cmpsl
push
add
repz
jle
fadds
push
and
insl
sbb
ret
jns
loopne
and
clc
jle
shr
cmp
push
mov
sbb
xor
adc
je
movsl
addr16
lods
rolb
jo
scas
inc
mov
jmp
ficomps
shrb
and
out
mov
mov
xchg
out
jge
les
jnp
jo
call
shll
out
xchg
dec
mov
xor
mov
mov
sbb
jl
adc
jae
mov
int3
xchg
icebp
push
cld
repnz
sub
loope
mov
or
popf
pop
mov
xor
mov
or
jecxz
mov
jmp
mov
nop
int
cmpsb
in
test
test
into
ficoml
mov
jg
in
xchg
negb
pushf
cmp
push
lret
repz
idivl
mov
pop
adcl
adc
xchg
shrl
das
dec
jb
push
dec
test
ds
addb
call
sub
adc
jno
inc
xlat
cmp
inc
insb
inc
lea
xchg
ja
imul
sarl
xor
dec
mov
rclb
icebp
std
cmp
lcall
sbb
pop
daa
ljmp
sub
jo
xchg
mov
es
call
xchg
jno
cwtl
enter
adc
add
push
jnp
iret
or
xor
adc
imul
xor
push
leave
or
lds
jbe
addr16
xor
cs
cmpsb
xchg
jno
dec
insb
pusha
fwait
mfence
inc
addb
sahf
loopne
mov
xchg
lods
xchg
repnz
and
out
push
fdiv
jae
push
xchg
jns
icebp
xchg
cmpsb
addl
adc
jb
fdivp
addr16
mov
sbbb
push
fucom
fnsave
out
add
data16
xchg
mov
test
dec
xlat
scas
mov
pop
mov
xchg
aas
pop
jp
stos
mov
sub
inc
jge
aaa
scas
aas
gs
sub
lret
inc
popa
mov
ret
fwait
push
in
jo
stos
and
idiv
inc
call
mov
pop
sub
jo
mov
adc
es
test
test
cmp
sub
cwtl
arpl
and
ret
das
lahf
dec
push
sub
out
subl
popf
mov
pop
cmpb
xchg
frstor
inc
or
sbb
scas
jmp
adc
sahf
and
les
sub
pop
inc
sbb
mov
dec
push
jp
mov
xchg
fsubl
daa
adc
sti
scas
and
into
push
cmp
xor
mov
test
mov
cltd
cmpsl
aad
xor
dec
sbb
mov
push
push
xchg
hlt
or
es
mov
xor
mov
ds
and
cmc
out
rorl
mov
call
cmpsl
outsb
mov
push
shrl
add
out
arpl
mov
lret
push
mov
sbb
fisubl
mov
sti
add
js
mov
arpl
mov
add
es
mov
pushf
outsb
sbb
cltd
test
lds
rep
push
xchg
jmp
cmc
sbb
mov
cmpsl
push
jge
xchg
jmp
mov
mov
xor
sbb
mov
push
mov
mov
sub
adc
lret
jno
lret
lret
pop
cmp
sarl
popf
ds
push
into
pop
jp
xchg
dec
jns
mov
xorb
mov
mov
movsl
jl
inc
cmp
es
push
mov
adc
sub
loop
cwtl
hlt
xchg
or
orb
lret
mov
cmp
in
or
mov
mov
cmpsb
pop
das
fnstenv
sub
or
dec
sbb
scas
add
sub
pop
loopne
add
xor
bound
mov
stc
cmp
mov
insb
mov
mov
mov
xchg
fldl
add
jne
cmp
in
call
les
xor
mov
addr16
and
xchg
daa
and
cltd
es
leave
sub
mov
sbb
shr
jmp
cltd
mov
mov
in
mov
cmp
or
cmp
push
dec
es
test
mov
sub
call
inc
push
jns
dec
dec
sub
cltd
add
loop
and
fistpl
inc
jns
ficomps
test
inc
or
jge
cwtl
adc
lods
mov
shl
stc
rcrl
mov
dec
adc
inc
xor
test
dec
jb
test
jmp
pop
popa
cmp
movsl
imull
and
pop
rolb
mov
jnp
mov
push
mov
mov
pop
dec
pop
inc
dec
test
aam
xlat
sub
mov
mov
dec
je
stos
pop
sets
imul
pop
sub
sbb
insl
push
pop
ss
xchg
mov
inc
mov
xchg
mov
rol
dec
sahf
sub
push
mov
fsubrs
adc
fldenv
lret
fs
rcrb
mov
push
xchg
jmp
in
cmc
mov
push
mov
mov
fisttpl
data16
cmc
test
test
push
adc
cmp
xchg
jecxz
lret
mov
sub
dec
pop
jle
fcomps
add
fstpt
das
fwait
mov
pop
xor
adc
cmp
lods
push
or
out
dec
loope
xor
push
negl
pop
cmp
mov
lcall
je
fdiv
cmp
mov
push
shrb
mov
push
sahf
add
ja
mov
xchg
sbb
and
adc
inc
sub
mov
sbb
mov
fs
js
pop
xor
and
clc
out
push
rolb
pop
insb
fcomip
push
sbb
push
add
out
outsl
mov
push
lds
ds
and
push
out
inc
out
cs
bound
insl
ret
fwait
mov
mov
mov
lea
mov
rclb
movsbl
lret
cmpsb
lret
int3
pushf
jmp
movsb
xchg
cwtl
mov
test
repnz
mov
leave
sub
ja
xchg
jb
out
fcoms
and
loop
fldt
push
jne
or
fisubrs
test
xchg
fucom
imul
fisubs
hlt
dec
push
add
test
dec
xor
fsts
fwait
lods
add
idiv
mov
push
popa
push
cmp
xor
lock
ds
xlat
enter
push
add
cmp
testl
andb
mov
pop
fmull
imul
inc
mov
mov
lret
shl
jle
shll
jbe
in
sbb
pop
or
lcall
pop
push
xchg
lahf
loop
fisttps
aas
aam
jecxz
mov
or
in
lcall
sahf
out
add
lret
pop
sub
sbb
outsl
push
add
cwtl
inc
insl
xchg
scas
sahf
cmp
cmp
cld
dec
fwait
xor
stos
and
lods
xorb
imul
sbb
lret
shl
cmpsb
adc
nop
dec
imulb
dec
imul
push
xchg
int3
inc
mov
mul
cmpsb
cmc
mov
fst
or
test
test
pop
pop
and
inc
adc
pop
in
pop
and
in
xchg
mov
mov
lret
ret
sub
out
sub
ja
sbb
dec
out
js
mov
xchg
mov
roll
in
mov
or
clc
push
push
cmpb
add
shrb
pop
mov
pop
push
fcmovu
mov
cltd
pop
rorb
or
fwait
push
xchg
iret
xorb
cli
inc
push
jns
cmc
push
icebp
aas
push
lea
xchg
ljmp
mov
out
and
push
test
adc
mov
roll
pusha
dec
test
aaa
in
pushl
out
out
sbb
movsb
mov
push
imul
mov
iret
insb
jnp
mov
mov
lea
add
pop
xorl
push
pushf
cmpsl
dec
nop
mov
test
sub
sbb
jmp
cli
ja
sbb
xchg
ss
sub
pop
loopne
test
mov
dec
lock
pusha
inc
addr16
lcall
sti
push
divl
pop
mov
rcll
inc
arpl
inc
cmp
mov
enter
pop
inc
cmp
ror
fdivrl
lret
scas
inc
cmp
insl
cwtl
cmp
dec
dec
out
cmp
push
xchg
adc
push
cmp
dec
sub
push
enter
xlat
adc
xor
movsb
mov
sub
push
notb
pop
xor
jae
pusha
dec
sub
lret
jg
push
in
stos
enter
xor
or
adc
ljmp
jne
repz
cmp
dec
fistpll
xlat
mov
lods
mov
pop
rcrl
pop
xchg
dec
andb
xor
pop
mov
sbb
or
sbb
iret
dec
add
cwtl
les
in
mov
or
icebp
push
loop
pop
jb
adc
hlt
je
jbe
in
aaa
ror
lods
or
xchg
push
scas
mov
mov
and
add
stos
stos
adc
loop
je
xlat
mov
fwait
and
pop
scas
pop
cmpl
push
or
adc
mov
mov
mov
mov
cmp
lcall
aaa
lods
mov
and
out
xor
lcall
aad
pop
dec
sub
mov
aaa
jbe
rclb
adcb
sub
fsubrl
dec
pop
lret
and
nop
cld
stc
shll
push
push
jge
mov
pop
rorb
sarb
dec
pop
ljmp
xchg
movsb
pop
mov
hlt
aas
sbb
mov
loop
push
pop
inc
sbb
es
cmc
testb
push
fsubl
cmp
cmp
xchg
cmc
adc
jg
popa
daa
mov
mov
push
or
mov
pop
insl
push
into
popl
fildl
sarl
lods
sub
mov
fs
inc
and
cltd
loopne
pop
mov
sbb
mov
xor
imul
jnp
rol
or
and
std
ret
aaa
jnp
sbb
jnp
or
push
sub
cmc
cmpb
mov
clc
outsl
cld
lea
mov
pop
das
out
fistpl
push
cld
in
jle
mov
pop
xchg
scas
bound
movsl
push
test
add
inc
adc
push
rcr
push
sub
mov
shlb
mov
jmp
aas
js
push
arpl
mov
cmp
cmp
sub
fisubrl
inc
aam
adc
fnsave
mov
jns
push
xor
sub
or
and
scas
pop
fsubrl
je
arpl
xchg
xchg
pushf
sbb
push
push
pop
mov
mov
ficomps
out
insl
xor
cmpsl
sub
enter
add
inc
idiv
pop
pop
inc
xchg
mov
ror
jae
call
test
in
cs
mov
sbb
dec
das
repnz
adc
ja
dec
sbb
inc
dec
orb
mov
cld
cmp
push
mov
iret
mov
imul
lcall
dec
or
movsl
daa
cmp
and
inc
jmp
pop
in
dec
add
lcall
adc
push
popf
pop
mov
mov
mov
daa
add
cmpsb
test
pand
cmp
mov
nop
lret
jge
adc
sub
rorl
jns
mov
test
mov
sub
shlb
sbb
lds
add
mov
add
jmp
cmpsl
outsb
jne
inc
aas
aaa
mov
xchg
xchg
pop
sub
mov
lret
or
gs
adc
clc
jp
mov
and
mov
jno
xor
jb
add
pop
shr
ficompl
roll
enterw
aam
mov
cwtl
cmp
jecxz
xchg
aad
fs
jns
xchg
sub
xor
add
movsl
dec
fmulp
aas
fstps
lods
cltd
or
sbb
mov
sbb
inc
sbb
mov
mov
sub
push
mov
gs
or
xchg
xchg
in
fnstsw
dec
mov
sub
mov
fisubrl
jp
fcmovnu
dec
mov
xchg
out
stos
loop
mov
out
fs
mov
mov
mov
mov
adc
fsubl
clc
or
cmpl
push
xchg
in
fwait
aam
inc
adc
jno
sub
ds
cmp
fistl
cmpsl
popa
mov
lods
mov
stos
cmp
enter
xchg
pop
dec
mov
xlat
scas
xchg
jbe
repz
dec
cmpsl
jb
mov
sarb
cmp
add
inc
fisttpll
sub
pusha
les
ret
dec
sub
sbb
adc
es
into
rcrl
jbe
sbb
cmp
test
xchg
iret
mov
pop
cmp
push
xor
add
and
int
fprem1
sahf
pop
cmpsb
push
movsl
adc
add
jns
in
mov
jl
cmp
or
xchg
cwtl
fidivs
push
popa
stos
clc
mov
dec
mov
push
rolb
pop
pushf
mov
cwtl
jns
cmp
dec
out
inc
fsubl
lcall
add
pop
dec
cli
mov
fs
cld
push
movsl
mov
aad
out
sbb
mov
movsb
data16
mov
mov
enter
ret
movsl
pop
mov
and
adc
adc
xor
pop
scas
adc
iret
adc
sbb
cwtl
rclb
or
xor
icebp
adc
movsl
add
add
popf
inc
jbe
dec
mov
push
std
add
mov
cmp
and
test
inc
addr16
cltd
xor
testb
mov
lock
jb
addr16
jno
xchg
stos
in
mov
dec
mov
and
or
add
mov
aad
pusha
stos
shrl
mov
mov
mov
movl
rorb
imul
cwtl
cmp
cli
mov
mov
xchg
xchg
out
jecxz
adc
dec
pusha
jl
jl
inc
inc
adc
cmp
les
pop
loope
sbb
pop
mov
sub
cmpsb
outsb
inc
or
movsl
dec
faddl
jnp
jno
jne
mov
inc
add
imul
jno
mov
mov
and
pop
daa
jp
add
xor
push
daa
in
scas
movsl
mov
rcr
push
mov
jnp
loop
pop
push
sub
inc
xor
pushf
push
pushf
push
fnstenv
test
inc
cmpsb
mulb
stos
mov
pop
adcb
xchg
mov
fyl2xp1
mov
popa
or
insb
bound
pop
push
push
lahf
aaa
das
in
pop
pop
sti
outsl
leave
pop
movsl
adc
inc
cmp
pop
xchg
or
ret
pop
mov
lods
lret
imul
shl
outsl
dec
mov
loop
inc
jmp
jno
loopew
ljmp
pop
movsl
loopne
mov
xchg
mov
jmp
sbb
out
or
mov
push
cmpsl
ds
cmpsl
cmp
cltd
mov
dec
or
sti
jbe
out
out
icebp
push
faddl
dec
into
xchg
mov
sbb
add
dec
lahf
insl
cmp
fistpll
cmp
pusha
mov
xor
mov
cltd
mov
lahf
or
cmc
popa
addr16
adc
leave
fs
imul
mov
cltd
pop
dec
push
xchg
out
int3
dec
push
scas
ror
jno
ja
xor
les
je
lret
push
xchg
xor
adc
fidivrl
and
jns
adc
stos
cwtl
cmpsl
mov
idivl
sub
jns
fwait
inc
testb
mov
and
xor
pusha
bound
mov
lret
dec
das
adc
xchg
int
idivl
negl
xchg
pop
mov
cmp
dec
gs
cmp
jge
jnp
arpl
inc
mov
cmpsl
fmuls
mov
idivl
mov
les
sahf
pop
das
les
or
jle
mov
add
shrb
jl
or
cmpl
add
in
sub
addr16
aaa
mov
jne
xchg
sub
in
addr16
fdivl
outsb
add
xchg
cmp
loopne
hlt
sub
shrb
jg
mov
lds
imul
mov
gs
out
jl
pop
xchg
sbb
out
daa
add
adc
dec
sbb
sub
fstps
xchg
sub
add
or
into
nop
fildl
lock
push
xor
pusha
lock
cmp
pop
insb
imul
fcmovnb
xchg
sahf
cmp
and
xchg
cld
add
add
int
outsb
pop
shll
jmp
mul
lods
jp
jns
loop
cltd
push
or
test
lods
in
in
icebp
sub
ret
pusha
dec
insl
push
dec
out
insl
or
fs
adc
fdivr
push
mov
add
xor
sbb
mov
or
outsb
cmp
shlb
mov
data16
fs
subb
xor
jle
push
cmp
inc
and
mov
cltd
in
stc
sti
xor
in
lahf
sub
fwait
loopne
jmp
mov
test
xor
jp
fildl
adcb
lret
test
jbe
adc
or
or
push
mov
movzwl
cmp
cli
inc
shlb
dec
jnp
ds
aad
mov
fdiv
lock
lahf
rorb
lds
or
and
push
int
movsl
fidivs
iret
fs
movsl
xchg
inc
mov
mov
xchg
fsubrs
pop
jecxz
rcrl
pop
jne
iret
mov
fs
fwait
cmp
xchg
or
test
scas
jnp
jbe
or
jae
push
popa
repz
dec
and
in
out
test
test
mov
mov
fwait
dec
mov
ljmp
sub
data16
xor
jae
orl
adc
ret
jne
dec
imul
aam
lock
mov
arpl
or
cmp
xchg
and
aas
cltd
adc
adc
fdivr
jno
fadd
test
and
lods
lcall
mov
cli
pop
jno
adc
pop
mov
jbe
test
sub
push
lods
out
jne
sub
mov
adc
aaa
sub
lcall
jne
and
sbb
push
or
imul
in
push
pop
xchg
jle
in
push
mov
adc
and
mov
mov
pop
push
xlat
xor
loopne
push
fildl
lds
adcb
cld
je
in
ds
xchg
out
ja
cmp
dec
clc
cmp
lock
push
mov
jg
ja
int3
addr16
je
mov
pop
ret
mov
adc
gs
lock
sbb
add
aaa
imul
insl
sbb
jmp
pop
mov
sub
lcall
scas
imul
imul
ss
in
mov
adc
add
pop
imul
test
gs
cmp
cmpsl
mov
nop
nop
jmp
sbb
jne
popa
movsb
stos
mov
jp
push
dec
dec
mov
sub
repnz
cld
xchg
xchg
fabs
addr16
jns
jne
mov
stos
push
cli
sub
jbe
loopne
loop
xchg
mov
cmp
cmp
jge
fcmovnu
push
lock
movsl
dec
leave
aam
push
jmp
popf
push
dec
cmp
jge
js
push
inc
xchg
arpl
imul
add
mull
iret
iret
scas
and
fstps
ror
xchg
popa
sbbl
mov
leave
push
mov
push
jnp
inc
or
ja
cwtl
jnp
faddl
stc
cmp
xlat
jp
add
inc
sbb
lcall
cmpsb
sbb
or
pop
adc
lahf
jecxz
mov
mov
mov
arpl
dec
outsl
outsl
add
out
gs
clc
push
mov
iret
or
jbe
push
push
ffree
imul
inc
mov
and
mov
out
data16
aas
ljmp
cmp
bound
and
jns
cmp
sbb
sub
das
xchg
lret
jbe
add
int3
shll
movsl
mov
or
jne
push
shlb
xchg
dec
mov
sbb
push
lods
lret
cmpsl
dec
push
fisubrl
mov
clc
xor
loopne
fdivs
movsl
rcll
push
jae
int3
ss
shl
test
out
addr16
daa
loope
fbld
cltd
lea
sbb
jb
lea
or
jb
out
cmpl
std
xor
dec
gs
das
mov
push
jmp
xor
fldenv
xor
sub
bound
ss
pushf
aas
dec
bound
inc
and
fdivl
repnz
cmp
movsb
inc
or
pop
sbbl
fcoms
dec
jl
push
repnz
pop
lods
ss
lret
movsb
inc
add
mov
dec
dec
cmp
xor
xor
add
pop
pop
mov
movsb
orl
mov
cmpsl
sub
pushf
inc
gs
imul
jb
cwtl
mov
jnp
push
and
jecxz
push
cmp
loop
lea
inc
sub
data16
add
push
pop
in
cmc
mov
cs
sub
sbb
in
xchg
inc
xchg
jns
ja
sub
sahf
sub
add
xlat
cmp
push
jg
sbb
ss
das
or
mov
jns
xor
aas
es
lret
insb
out
les
out
cmp
sub
testl
xlat
popf
dec
fsubl
int
adc
mov
pusha
jae
add
sti
cmp
or
jl
push
sbb
clc
sub
or
mov
leave
cmp
pop
nop
ss
or
sub
loop
sub
xchg
sahf
leave
fucom
adc
vpshuflw
cmp
frstor
in
sarl
adc
fcmovbe
sub
cs
in
testb
jo
or
jmp
pop
movsl
pop
fisubl
pop
cmp
lods
or
sbb
mov
in
aam
sbb
lcall
mov
pop
int3
xchg
rorl
clc
ds
sbb
or
ret
outsb
xchg
xor
cmp
sub
adc
xchg
mov
fmull
mov
fistl
push
add
icebp
xor
testl
lcall
mov
outsb
mov
loopne
push
scas
and
push
dec
jp
push
jo
std
xchg
mov
adc
or
jg
mov
movsb
push
xlat
outsl
pusha
lds
sarl
adc
sbb
fwait
sub
clc
fs
out
sub
ds
mov
xorb
outsl
mov
adc
mov
testl
adc
dec
cwtl
std
out
fs
pop
dec
testb
test
dec
rorl
repnz
jle
push
pmulhuw
mov
rcrl
xchg
sbb
or
cmp
push
in
sub
mov
ds
add
adc
rcrb
sbb
mov
movsl
in
mov
inc
mov
mov
imul
gs
call
inc
add
xor
push
xchg
xchg
js
xchg
int3
add
fadds
dec
rclb
jge
and
nop
inc
cmp
idivl
and
ljmp
adc
call
lock
fsubs
sahf
ds
add
shlb
cld
jno
in
jp
sarl
addr16
xchg
xchg
pop
inc
mov
mov
movsb
dec
pushf
jle
je
gs
rclb
jle
aad
leave
mov
cmc
and
mov
int3
pop
and
mov
push
pop
lds
cwtl
and
test
adc
scas
and
push
leave
mov
adc
sub
jbe
ds
dec
int3
pusha
in
out
outsb
test
sbb
sbb
pop
cmp
fistps
xlat
vmwrite
stc
xorl
outsb
mov
rol
or
test
movsl
rcll
bound
and
sahf
movsb
fnsave
pop
sub
mov
xor
fstp
mov
mov
add
jo
mov
repz
push
add
push
data16
scas
insb
jo
subl
inc
popa
mov
lds
xor
mov
rcl
std
lock
dec
inc
sub
or
cmp
inc
xchg
bound
add
push
or
scas
or
sbb
xor
push
mov
fistl
repz
mov
out
inc
push
sub
jge,pn
add
cld
les
cmpsb
out
cli
sbb
mov
iret
out
inc
xor
jmp
scas
or
rcrb
in
shll
xchg
stc
lahf
xchg
cld
mov
repz
jne
pop
into
ja
adc
inc
fmuls
jbe
xchg
jae
in
fmulp
sbb
outsb
mov
popw
sbb
loopne
mov
jp
mov
iret
lea
test
push
push
jge
movsl
roll
das
pushf
daa
jnp
in
lcall
dec
out
bound
dec
sub
add
adc
mov
outsl
aas
mov
adc
and
cwtl
add
or
sub
cltd
inc
sbb
inc
aam
cmp
out
sub
mov
sar
mov
out
jnp
cli
adc
xchg
xchg
sbb
jmp
inc
pop
lds
into
mov
adc
and
xor
inc
push
xor
stc
jo
push
ficomps
push
xchg
popl
loopne
adc
imul
dec
fstpt
jae
ret
cmpsl
inc
cs
mov
pop
xchg
fsubl
cmpsb
icebp
fimuls
pop
jo,pn
popa
push
pop
push
mov
xchg
pop
xchg
rclb
out
and
stos
imul
xchg
gs
pop
jge
adc
movsb
sbb
mov
ror
das
xchg
sub
addr16
mov
dec
or
lahf
jbe
mov
jae
mov
es
in
adc
pop
outsb
xor
aaa
cmp
and
cmp
add
aaa
lahf
mov
fadds
test
sahf
or
fisubrl
or
add
and
das
loop
add
int3
adc
ja
jne
jmp
mov
test
fwait
icebp
into
fs
cs
cltd
pop
jg
mov
test
pusha
pushf
push
push
fisubrl
mov
push
insl
mov
jne
push
xchg
xchg
mov
jb
sbb
jo
cmp
mov
and
jmp
pop
cli
aad
shll
dec
int3
in
stc
xorl
clc
insb
in
inc
leave
jno
cmp
mov
inc
outsl
stc
fs
push
adc
push
or
lahf
jg
loope
arpl
pop
paddb
sbb
je
mov
jl
xchg
fsubs
test
sub
pop
pmovmskb
sahf
pop
cmp
xchg
jne
add
lods
and
insl
pop
push
sti
pop
add
inc
inc
add
das
scas
jbe
lret
inc
xchg
xor
mov
fmuls
es
push
adc
std
ret
sahf
lds
cmp
cmpsb
pop
int
or
mov
fimull
cld
lea
mov
add
sub
dec
jp
xchg
repnz
jl
mov
adc
or
daa
les
das
loope
cwtl
lods
xchg
sbb
dec
sbb
sbb
je
fsubrl
push
sbb
jg
jmp
orl
daa
pop
lret
inc
scas
jecxz
stos
xchg
xor
xor
mov
jne
inc
jnp
decl
fs
in
xchg
into
dec
iret
imul
push
inc
test
xor
pop
mov
stos
push
inc
push
es
mov
push
mov
pop
lds
fisttpl
push
ja
xchg
add
jecxz
arpl
mov
cli
in
mov
jg
sti
cmpsl
xchg
ret
cli
test
jecxz
clc
adc
push
cmc
mov
inc
test
ss
adc
dec
mov
jae
fadd
in
xchg
je
and
pop
mov
mov
mov
adc
in
insl
cmc
test
push
push
mov
lds
jp
and
das
out
jg
mov
loope
pop
sub
insb
pop
push
test
dec
push
jl
test
pop
dec
mov
mov
in
imul
adc
sbb
sub
lret
mov
pop
push
sbb
inc
and
adc
push
sub
lea
rol
jo
mov
xchg
lcall
outsb
call
push
jl
inc
push
inc
fidivrl
sub
mov
sbb
push
mov
xchg
jno
pop
iret
push
or
sub
dec
and
cmp
aad
sahf
cmp
sub
adc
test
std
mov
pop
mov
push
mov
mov
sub
adc
xor
nop
inc
pop
fidivl
mov
push
sbb
mov
mov
insl
push
dec
mov
pop
and
test
push
and
inc
loopne
add
pop
push
cld
xor
testb
fwait
sub
add
idivl
daa
lret
inc
xchg
int3
decl
lods
add
rclb
jp
cmpl
cmp
jne
and
mov
imul
or
test
lret
into
lea
sti
cmc
sbb
xchg
repz
sarl
mov
insl
ds
push
jno
push
imul
add
std
mov
dec
imul
mov
fisttps
lods
pop
or
lods
sub
sbb
out
lods
pop
sub
xchg
cltd
pop
mov
inc
lret
cmpsl
pop
jecxz
out
or
inc
outsb
in
add
push
les
sub
daa
cmp
pop
mov
mov
stc
loop
pop
subl
xchg
loop
sbb
in
insb
xor
call
lds
inc
adc
and
jb
dec
aaa
xchg
jae
or
out
gs
sti
aaa
hlt
add
sbb
inc
iret
cwtl
jne
aam
push
aam
jo
test
cmp
jecxz,pn
movsb
pop
sbb
xor
idivl
sub
lods
imul
ficompl
lahf
icebp
dec
xchg
shrd
cmpsb
std
roll
adc
aas
lret
jb
out
pop
fs
mov
ret
fwait
lret
cmpl
sub
imul
push
pusha
xchg
cmp
mov
adc
or
popa
sbb
shl
add
sub
or
mov
jo
jg
enter
insl
cmpsb
stos
ret
inc
gs
testl
or
stc
or
jae
adcb
jmp
cld
mov
or
and
int
mov
and
cmp
pop
out
rclb
dec
lea
pop
or
pop
adc
ljmp
mov
mov
mov
inc
sahf
mov
