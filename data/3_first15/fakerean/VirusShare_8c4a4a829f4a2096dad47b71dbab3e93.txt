jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
int3
lock
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
leave
out
inc
add
and
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
scas
jecxz
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
gs
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
icebp
mov
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
out
ret
jmp
inc
adc
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
mov
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
push
in
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
jmp
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
adc
inc
add
fidivs
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
aam
inc
add
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
insl
lds
mov
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
sbb
inc
add
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
loopnew
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
loope
add
mov
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
mov
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
jle
inc
add
push
and
mov
movl
movl
movb
lock
add
inc
push
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
faddl
or
push
add
or
jmp
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
call
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
iret
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
pusha
push
call
mov
push
jne
add
add
jns
add
test
sbbl
add
nop
cmpsl
add
pusha
fiaddl
add
add
int3
xlat
add
add
add
pop
add
outsl
add
pop
add
jnp
enter
xchg
push
add
cwtl
add
add
pusha
pop
add
add
add
in
int
push
jo
push
add
add
add
add
add
leave
add
add
movsb
mov
nop
add
ljmp
ret
pop
add
mov
mov
js
add
rolb
mov
add
jmp
add
pop
add
mov
loopne
add
add
mul
popa
scas
pusha
add
vzeroupper
add
add
lea
in
add
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
ljmp
rolb
add
iret
add
add
add
add
add
mov
add
add
lret
int
rcr
xlat
cmpsb
add
add
add
scas
add
lods
ja
add
add
lcall
sar
cmpsb
add
mov
lea
pop
movl
popl
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
arpl
add
ja
insb
idivb
add
cmc
push
add
add
add
leave
loop
mov
clc
bound
in
test
ljmp
add
lret
scas
add
in
scas
lock
jns
add
add
add
add
push
mov
add
incb
jge
mov
mov
lock
lcall
push
push
push
push
push
call
aad
add
add
mov
add
push
add
sahf
scas
outsl
out
repnz
enter
idivl
push
mov
pop
gs
lods
sahf
cld
mov
add
push
add
add
mov
add
push
popa
add
popf
add
push
sti
arpl
lds
fsts
jecxz
je
add
add
xchg
pop
add
add
add
add
add
mov
repnz
loop
add
jnp
lahf
fistl
lea
pop
call
call
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
jnp
fdivr
add
add
add
add
popa
jp
xchg
out
rcll
cld
testb
pop
add
xlat
pusha
in
stc
in
add
add
cmc
iret
andb
mov
add
cmpsb
jmp
ret
mov
mov
add
add
flds
add
pop
call
jmp
push
lea
push
call
rcll
add
mov
add
add
add
in
out
add
add
popf
into
add
hlt
movsl
add
add
jl
add
add
add
add
push
loope
mov
add
mov
out
scas
mov
mov
shlb
nop
add
add
sahf
add
pop
movl
orl
ret
mov
mov
push
lea
push
push
push
call
jl
rolb
add
ja
int3
add
xchg
nop
int
add
mov
add
mov
lret
mov
call
mov
mov
popf
pop
mov
pop
add
sbbb
jmp
arpl
je
aam
xchg
icebp
add
jno
cltd
mov
out
add
cltd
aam
test
add
popf
cmp
mov
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
in
cld
jle
add
enter
enter
pop
ljmp
cwtl
cmc
ja
mov
imul
mov
aam
mov
rorl
add
ljmp
add
add
in
fsubl
add
mov
ror
add
add
add
mov
mov
pop
fwait
pop
in
mov
rolb
add
mov
mov
pop
add
push
lea
push
call
add
add
ljmp
push
add
jecxz
mov
fwait
std
pusha
add
rolb
lret
cmpsb
add
jae
cmc
add
add
pop
je
mov
add
add
pushf
add
mov
cltd
sbb
mov
stc
add
add
add
lock
pop
push
mov
jnp
adcl
jbe
add
lods
imul
fbstp
or
ret
sbb
lea
push
push
push
push
call
xchg
popf
add
add
shr
add
add
add
fiaddl
fiaddl
call
insb
mov
add
leave
push
add
iret
clc
xchg
cltd
add
add
xlat
push
scas
xchg
jle
push
mov
add
mov
add
lock
mov
add
mov
loop
movsb
stos
cld
rolb
shll
add
lock
mov
xchg
lods
add
add
call
add
pop
mov
xor
add
push
push
push
call
add
add
add
rcrb
jecxz
add
pop
add
add
add
add
pop
loop
roll
add
add
out
xchg
cmpsb
fnstsw
add
icebp
jo
test
pop
lret
add
sarl
add
pop
add
add
jle
xchg
bound
mov
add
add
shll
add
imul
call
mov
push
push
push
lea
push
lea
push
push
call
mov
pop
fiaddl
add
lods
cli
loope
loopne
mov
fbld
add
add
cld
add
add
rcll
loop
push
jmp
aad
add
mov
add
lds
js
add
aam
mov
add
cwtl
add
jle
add
testl
mov
add
add
add
add
cli
lods
add
jns
xchg
test
pop
cltd
add
add
jecxz
add
pop
xor
push
push
push
push
push
call
jnp
add
mov
in
ja
out
add
ja
in
out
lea
add
add
int3
popf
fldl
add
enter
mov
mov
add
add
test
lret
mov
cwtl
cmpsl
in
lret
jno
stos
leave
add
popa
xchg
xchg
mov
add
stc
mov
mov
add
jl
add
add
adc
add
push
push
rol
push
push
pop
add
shl
xor
lea
sub
lea
pop
inc
pop
push
push
push
call
test
add
cmpsb
scas
popf
les
xchg
pushf
rclb
idivb
int
filds
mov
xchg
add
push
pop
mov
add
add
out
rolb
cltd
xchg
imul
add
notl
shlb
add
add
add
fadds
out
test
add
jne
loopne
add
subl
add
add
mov
lea
pop
pushl
call
mov
push
push
push
call
lea
addl
pusha
jns
jbe
add
pop
data16
lods
in
add
add
call
addr16
out
xchg
rcl
add
add
test
add
add
sti
add
add
add
cmc
scas
add
add
add
push
int
ja
in
jle
mov
testb
add
pop
movl
push
push
push
push
call
jmp
fs
fwait
mov
bound
add
push
add
add
sti
mov
cmpsb
add
lea
add
lods
add
add
insb
pop
jae
add
je
add
aam
mov
jmp
mov
fwait
mov
cld
movb
pop
bound
add
cli
outsl
add
addl
fmull
inc
loopne
push
call
in
rolb
xchg
shlb
xchg
add
sbbb
add
out
movsl
add
add
jne
jl
mov
add
roll
push
data16
add
leave
pusha
fmuls
in
add
std
jns
add
cmc
add
add
mov
add
add
jmp
add
ror
xchg
loopne
jmp
add
orb
pop
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
jo
add
addb
xchg
xchg
loop
ret
rcl
shll
into
add
enter
fnstenv
leave
scas
pop
mov
lods
add
add
mov
add
loopne
xchg
jle
add
lods
pusha
lret
lods
sub
mov
shll
add
sti
imul
add
pop
pushl
pushl
call
push
push
push
push
push
call
ret
add
test
sti
movsl
mov
mov
mov
mov
pop
add
add
add
aad
add
movsb
cld
sarl
test
xchg
scas
pusha
rolb
leave
xchg
lods
lds
hlt
js
push
mov
lods
xchg
lock
stos
add
cmpsl
icebp
test
popf
add
rcr
adcl
jl
add
in
push
add
mov
push
int3
lea
pop
pushl
push
push
call
add
add
jecxz
scas
cmpsb
scas
testb
add
add
movl
add
mov
mov
pushf
roll
cmc
pop
pop
add
add
lahf
add
ja
roll
fstpl
data16
rcr
mull
add
add
add
jmp
push
add
add
test
lds
movsb
add
add
cwtl
mov
lea
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
pop
add
in
add
stos
andb
pop
movsb
add
js
add
fstps
add
mov
sahf
xchg
add
mov
call
jmp
add
add
add
stc
add
repnz
and
lret
add
data16
rclb
xchg
mov
movsb
push
loop
dec
push
or
inc
add
shl
shr
sub
sub
pop
dec
sub
pop
push
push
lea
push
push
call
addr16
push
push
mov
out
add
xchg
xlat
add
pushf
clc
addl
jb
clc
add
add
sahf
pop
imul
lods
add
test
rol
add
mov
lea
cmpsl
incb
leave
loope
fidivrs
jmp
imul
add
add
shl
enter
lea
pop
pushl
call
push
push
push
dec
add
push
xor
add
shr
rol
dec
sub
dec
shr
shr
xor
pop
shl
pop
push
push
push
lea
push
push
push
call
add
fiaddl
add
mov
mov
jbe
add
fwait
sti
push
add
mov
mov
mov
add
add
jnp
filds
bound
lcall
mov
add
mov
jns
push
mov
add
stos
add
movl
add
clc
lret
mov
add
in
mov
bound
mov
int3
lea
pop
push
push
lea
push
push
push
call
insb
testb
incb
pop
jae
popf
insb
ret
add
pop
add
fs
mov
push
lock
push
test
add
rclb
popa
add
add
addb
xchg
add
add
movl
rcrb
jb
aam
add
popa
rcr
popa
sti
cmpsb
add
loopne
add
or
mov
jne
les
add
rorb
stos
mov
outsb
lea
push
lea
push
push
call
pop
add
in
enter
jge
add
mov
loopne
add
xchg
add
add
pop
out
jno
imul
std
ja
add
mov
add
out
jge
add
add
out
add
add
add
add
lods
mov
test
movl
lea
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
cwtl
mov
int3
mov
push
add
pop
mov
add
add
pop
add
mov
xchg
add
add
mov
out
pop
add
push
add
add
xchg
add
pop
mov
jnp
lods
add
add
add
add
cmc
ja
add
add
add
lea
pop
mov
add
add
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
stc
add
add
rcll
add
add
add
add
push
pop
add
data16
add
insb
jmp
pop
add
add
call
xchg
clc
xlat
movsb
repnz
scas
cmpl
mov
add
pop
cwtl
push
add
mov
mov
mov
hlt
lea
pop
add
mov
xor
push
lea
push
push
push
lea
push
call
add
mov
add
add
jle
xchg
push
lcall
pusha
clc
addr16
clc
je
mov
imul
jne
jbe
mov
leave
mov
movsb
js
mov
test
jne
add
aad
rclb
lret
fiadds
lods
mov
add
in
jmp
add
add
lds
add
pop
nop
jp
add
mov
add
pop
add
push
push
lea
push
push
call
push
stc
add
mov
add
push
mov
out
add
int
stos
out
test
add
mov
cli
cmc
add
add
mov
aad
add
push
add
add
cli
iret
push
xchg
add
add
add
add
add
mov
add
xchg
add
fldl
mov
add
pop
add
jb
cld
lea
pop
push
mov
push
push
push
push
push
lea
push
push
call
fstpt
movb
sahf
add
add
in
in
ficoms
add
add
lock
lret
loop
add
add
stos
imul
loope
xchg
les
add
mov
roll
add
mov
add
add
add
jo
stos
mov
lea
pop
xor
push
lea
push
lea
push
push
push
lea
push
call
out
add
push
lahf
mov
call
push
mov
mov
movsl
add
add
jp
ljmp
test
add
scas
shlb
add
pop
into
add
push
add
mov
add
push
divl
cmpsb
add
pop
stos
add
shrl
stos
add
test
xchg
add
int3
lea
pop
add
push
push
push
push
call
add
add
mov
jns
filds
leave
flds
loop
cmpsl
jnp
stc
filds
add
lahf
cmc
fildll
add
xchg
sahf
in
std
add
cmpsl
popl
mov
add
lock
iret
push
push
fldt
add
xchg
sahf
pop
sub
outsl
test
addr16
mov
jnp
out
add
add
add
arpl
pop
add
push
lea
push
push
push
push
push
lea
push
call
jo
test
add
imul
add
cwtl
add
loop
push
add
add
loope
pop
add
add
filds
push
add
add
add
pop
aad
mov
pop
cli
outsl
push
add
add
add
jp
cmp
arpl
add
xchg
jnp
mov
add
mov
pop
cmpsb
add
jnp
fidivrs
leave
add
fwait
sahf
cbtw
xchg
xchg
mov
in
mov
int3
loop
out
xchg
mov
lea
pop
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
ficoms
xchg
add
add
in
mov
pop
cmpsb
arpl
xchg
mov
push
movsb
add
shll
mov
mov
gs
add
fidivl
scas
xchg
iret
add
rcll
repnz
jbe
mov
add
popf
add
std
add
stc
add
fstps
and
or
push
lea
push
push
push
push
push
push
push
push
push
call
lret
sti
pop
lcall
cmc
mov
add
mov
ret
add
sti
add
loopne
pop
add
add
add
add
add
iret
mov
add
cli
jae
test
jns
add
add
add
scas
pop
add
in
insb
jl
add
lcall
push
push
out
hlt
lea
pop
add
push
push
lea
push
push
push
lea
push
lea
push
call
add
fildl
jge
js
hlt
mov
add
add
jb
aad
bound
add
jnp
test
retw
ficoms
js
add
mov
shll
test
roll
add
push
insb
loopne
push
add
add
cwtl
add
test
repnz
add
add
add
pop
pop
add
add
push
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
in
xchg
push
jns
test
add
add
loopne
add
sbbl
push
addl
add
fildl
hlt
push
mov
popf
xchg
mov
lcall
hlt
leave
bound
divb
les
inc
and
shll
push
push
call
add
fcoms
fidivl
lds
add
ret
jo
add
cmc
int
loopne
add
add
gs
shll
gs
add
loop
add
bound
add
movb
add
add
fisubrl
mov
mov
push
scas
add
ljmp
lcall
test
pop
sahf
add
push
hlt
mov
add
mov
adc
add
push
push
push
call
ja
rcrb
mov
movsb
mov
mov
add
add
add
loopne
add
imul
add
imul
mov
pop
idiv
jo
xchg
add
mov
out
add
add
add
lods
add
mov
push
mov
mov
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
push
test
stos
aam
add
add
add
jno
stos
jno
cmpsb
add
test
fiadds
add
in
add
loop
loope
xchg
add
cli
ja
test
mov
hlt
add
testb
fcmovne
mov
push
add
popf
add
add
imul
add
add
add
mov
ljmp
leave
push
lea
pop
sub
pop
push
push
push
push
push
push
lea
push
call
add
push
pop
cmpsb
clc
jmp
loopne
mov
repnz
jge
test
out
jl
int3
push
loopne
mov
mov
cwtl
jns
add
lock
add
add
add
lret
loope
add
gs
les
add
xchg
call
pushf
out
add
mov
add
in
arpl
xchg
sar
arpl
mov
pusha
insb
jbe
push
cmc
add
lret
ljmp
pop
rep
pop
push
push
push
push
lea
push
push
push
push
call
pop
add
push
add
add
add
cmpsl
aad
jnp
add
pushf
add
scas
add
add
out
roll
mov
add
add
loope
scas
add
add
stc
lahf
add
mov
add
cltd
jmp
xchg
add
add
fdivp
xchg
add
mov
add
xchg
pop
mov
add
push
push
lea
push
push
call
leave
fadds
add
xchg
add
add
js
int3
fnstcw
flds
add
add
cmpsb
fs
add
push
popa
sahf
mov
pop
movsl
jns
add
cmpsl
mov
loope
leave
testl
add
add
out
xchg
lock
add
out
std
mov
mov
lea
pop
add
push
push
lea
push
push
push
call
movsl
adcb
pop
mov
add
add
cmpl
add
pop
fildll
xchg
add
loope
add
out
add
add
add
mov
cmc
movsl
mov
add
add
lret
mov
mov
add
testb
jp
cld
mov
add
aam
in
add
divb
out
ljmp
out
les
ret
sbb
push
push
push
push
push
push
push
push
call
jne
push
int3
shll
test
add
add
add
stos
movl
jne
lahf
add
add
xchg
sahf
xchg
mov
add
add
test
add
add
add
add
pop
xorl
add
mov
int3
jbe
xchg
iret
add
push
add
add
add
add
rcl
add
add
add
cld
lea
pop
mov
push
push
push
call
push
mov
add
rolb
negb
mov
stos
ja
mov
jecxz
mov
add
pop
mov
push
cwtl
mov
jb
lcall
cld
jecxz
pop
xchg
lahf
add
mov
mov
addr16
add
xchg
add
jae
mov
add
add
jle
ret
add
add
jbe
cltd
add
xchg
jnp
push
add
jmp
ficoms
add
insb
mov
lea
pop
xor
push
lea
push
call
test
add
jb
in
add
add
lahf
mov
xchg
ficoml
repnz
enter
jmp
iret
xchg
pop
sbbl
pop
into
pop
add
scas
add
lahf
add
std
add
add
add
xlat
add
in
push
add
add
les
in
add
add
mov
add
int3
lea
pop
add
push
push
push
push
call
test
lret
cltd
mov
pop
push
add
pop
mov
add
add
xchg
int3
sbb
outsl
xchg
andb
add
add
add
fnsave
int3
icebp
lds
add
popf
clc
add
add
jle
lcall
add
fsqrt
lret
data16
adcb
idivb
add
nop
add
movl
imul
adc
push
cmp
repnz
shll
push
push
push
call
in
add
add
int
xlat
int
mov
add
add
add
add
fldln2
in
mov
mov
loopne
fucomi
add
add
add
add
add
fptan
add
out
aam
add
jp
call
aam
mov
add
add
roll
add
mov
int3
data16
mov
ret
lea
pop
mov
xor
push
lea
push
push
push
push
push
push
push
push
call
imul
arpl
pop
ljmp
stos
pop
subl
add
mov
iret
cli
scas
add
sahf
call
push
popf
icebp
scas
add
pusha
nop
mov
jge
testb
mov
aam
pop
out
mov
mov
fiadds
fidivrs
jno
mov
int3
lea
pop
add
push
lea
push
push
call
add
push
add
imul
popa
push
fiadds
add
ljmp
data16
add
in
loope
jmp
mov
add
push
pushf
mov
mov
clc
add
pop
add
add
popf
clc
test
add
add
movsl
jns
add
out
sbbb
mov
add
add
add
xchg
mov
lea
pop
add
mov
push
push
push
or
not
add
not
sub
sub
rol
pop
shl
dec
pop
push
push
push
push
lea
push
call
add
add
ret
ja
roll
mov
push
jge
icebp
popl
insb
xchg
add
cltd
js
pop
lea
mov
pop
lahf
jge
add
add
sahf
add
int3
add
out
out
add
fwait
add
add
test
mov
shl
ljmp
add
cwtl
add
les
jne
call
push
push
push
push
or
not
add
inc
sub
lea
not
lea
pop
inc
ror
xor
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jns
add
in
add
call
mov
xchg
add
add
shrb
popa
mov
cli
xchg
add
int3
loope
push
add
into
pop
add
push
add
aam
fiadds
cltd
add
add
faddl
xchg
add
add
shl
add
push
add
cmc
mov
lea
pop
push
push
push
push
push
call
add
add
fldl
add
ret
jle
cmc
lret
ret
sar
add
add
scas
into
add
mov
add
add
cwtl
into
loop
add
push
loop
add
add
imul
mov
add
add
mov
add
add
in
add
mov
add
mov
adc
add
push
push
lea
push
push
call
add
xchg
lods
mov
add
add
add
jmp
lock
add
add
xchg
add
add
lods
loope
xchg
iret
lcall
data16
test
mov
add
add
popa
add
push
imul
push
add
add
add
movsb
add
add
push
mov
movsl
mov
lret
push
add
xlat
push
xchg
add
data16
rorb
push
push
push
lea
push
push
lea
push
lea
push
call
cmpsb
nop
add
scas
add
jb
add
jae
push
repnz
add
mov
int3
add
add
mov
add
sar
loopne
add
je
pushf
ja
test
add
mov
cmpsb
mov
pop
fdivrs
cmpsb
rcrb
add
stc
add
stos
ljmp
add
xchg
test
aad
test
mov
test
mov
lea
pop
push
push
push
push
call
xchg
jb
add
add
jbe
fiadds
movb
add
mov
add
add
add
add
add
into
jnp
cld
pop
fistpl
jb
fdivr
stos
add
add
lds
imul
push
jne
in
pop
add
add
fadds
jae
lods
adcb
xchg
jge
int3
lea
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
loopne
mov
mov
in
in
add
jge
add
add
shll
mov
push
jge
add
rolb
mov
add
stos
gs
mov
popa
xchg
mov
mov
pop
aam
jb
mov
fisttpl
xchg
test
add
pop
lods
lds
add
add
fwait
loopne
mov
lea
pop
add
add
push
push
push
call
loopne
add
jle
mov
add
shr
andb
fildl
mov
rcrl
add
test
int3
add
pop
mov
testl
int
add
popf
push
lret
push
add
mov
add
add
add
xchg
arpl
jo
pusha
bound
imul
gs
lret
add
loop
push
insb
pop
jp
push
add
out
add
mov
mov
lea
pop
add
mov
push
push
push
push
lea
push
push
call
xlat
ja
add
shrb
add
jp
cmpsl
add
add
push
test
lods
test
add
mov
in
je
jmp
shll
add
scas
mov
rcr
je
add
jle
stos
add
mov
add
jnp
add
fildl
mov
add
pop
mov
lea
pop
xor
push
lea
push
call
mov
mul
add
push
data16
adc
movl
add
add
mov
mov
xchg
out
icebp
pop
push
fiadds
mov
push
add
sarb
add
add
roll
stos
pop
add
xlat
fildl
cmc
add
add
add
xchg
add
mov
lea
pop
add
push
push
call
add
sti
ja
add
add
inc
aam
add
mov
jp
movsb
lret
jp
out
stos
add
cwtl
jns
movsl
scas
pop
add
les
shr
mov
lret
add
add
pop
push
cli
xchg
mov
iret
jle
cmpsl
stc
movsb
add
incb
fadd
aad
icebp
mov
popa
add
imul
jb
filds
fnstcw
pop
push
mov
lea
pop
add
push
push
push
push
call
movsb
test
add
add
push
jns
jl
out
scas
jns
add
cmpsl
pop
outsl
add
shrb
jne
add
pusha
add
add
lret
mov
sahf
test
add
movl
fiadds
js
movb
out
xchg
add
fiaddl
mov
lcall
add
add
mov
add
pushf
add
add
add
stos
add
add
fimuls
pop
push
mov
push
push
push
push
lea
push
lea
push
call
add
mov
add
js
add
lea
add
mov
add
push
jo
mov
rolb
add
add
add
xchg
pop
add
add
xchg
jp
add
nop
popf
push
push
add
xchg
add
test
bound
pushf
pusha
add
add
scas
fldl
testb
xchg
loop
lea
jne
push
add
add
add
add
pop
xor
push
push
push
call
mov
mov
cmpsl
add
xchg
add
add
mov
out
add
add
std
add
je
push
out
icebp
add
lea
add
xchg
frstor
gs
addr16
add
jecxz
fsubr
xchg
lret
add
stos
jno
cmpsb
cltd
test
add
pop
add
lea
mov
mov
shl
leave
add
mov
orb
add
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
jae
popl
loop
jecxz
sti
xchg
jle
add
xchg
push
je
faddl
add
xchg
add
sar
ja
push
add
mov
loopne
mov
shlb
pop
add
test
add
xchg
mov
data16
add
add
jns
cli
push
jge
mov
add
push
mov
and
add
pop
push
lea
push
push
push
push
push
push
push
call
add
add
loop
add
mov
fcmove
jne
cmc
pop
fwait
push
add
pop
add
xchg
imull
scas
mov
outsl
jmp
mov
jo
in
mov
iret
addl
cwtl
xchg
add
add
add
pop
mov
pop
xchg
jnp
arpl
fildl
std
out
add
stos
xchg
pop
add
add
mov
lea
pop
mov
push
push
push
push
push
push
call
mov
add
cltd
cmc
sahf
into
pop
push
lret
into
mov
add
rolb
add
cltd
fsubrl
mov
add
negb
mov
mov
mov
scas
add
cmpb
jecxz
mov
std
mov
mov
test
movsl
lret
test
lahf
into
add
add
cmpl
imul
adc
xor
push
push
push
lea
push
push
push
push
call
add
xchg
add
call
pop
add
iret
in
sahf
test
addl
add
mov
push
ret
add
aam
hlt
lock
push
lds
add
lret
lock
in
test
roll
add
mov
int3
cmc
addb
ja
mov
add
imul
add
add
add
jl
clc
jae
pop
push
in
add
mov
lea
pop
add
push
push
call
add
add
add
add
mov
pop
add
add
pusha
add
add
add
xchg
imul
test
mov
add
add
addr16
pushf
add
out
add
mov
add
add
rolb
fadds
cmpsl
out
aad
add
mov
mov
lea
pop
rep
mov
push
push
push
push
lea
push
lea
push
lea
push
call
add
rcrb
ficompl
pop
mov
jge
test
push
add
pusha
add
add
add
add
mov
push
add
hlt
xchg
lret
add
push
pusha
sahf
add
push
add
cltd
add
add
cli
mov
jno
cmpsl
pusha
jno
out
mov
jb
jb
mov
add
cmpb
xchg
mov
lea
pop
xor
push
push
push
call
pop
shll
jnp
add
add
add
add
add
lds
add
fisubl
cld
add
jno
add
nop
xchg
add
cmpb
add
xchg
repnz
aam
add
add
xlat
add
jo
test
mov
xchg
add
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
loop
cmc
add
addb
je
mov
test
add
push
pop
push
add
add
cli
add
pop
sbbl
add
jo
pop
add
std
add
imul
sti
add
xchg
add
movsb
add
lock
test
mov
push
in
sti
jno
xchg
push
add
add
iret
jno
add
hlt
jb
add
add
scas
add
add
bound
pop
or
je
mov
push
push
lea
push
push
lea
push
call
add
icebp
std
ret
push
fildl
in
add
xchg
stos
add
add
add
mov
sub
mov
jae
mov
clc
jmp
add
fiaddl
stos
fmul
lret
in
add
add
fldl
add
xchg
add
out
add
mov
mov
arpl
pop
xor
push
push
push
push
push
push
call
add
enter
add
cli
add
cld
jge
add
jno
jne
add
movb
arpl
xchg
stos
add
add
ror
mov
sahf
ja
push
add
ret
loope
imul
mov
add
popa
mov
mov
mov
pop
add
push
lea
push
push
push
lea
push
call
testb
bound
xorl
test
add
in
add
js
add
add
lods
add
add
lods
mov
clc
ficomps
add
lret
fwait
push
insb
add
xlat
add
testb
add
scas
jecxz
jnp
add
in
add
xchg
push
add
mov
test
mov
lea
pop
mov
xor
add
push
lea
push
push
push
push
call
add
cmpsl
add
xchg
mov
jge
cmpsl
jne
xchg
add
add
add
cmpsb
call
test
add
jae
les
add
add
add
cmc
movsb
cltd
push
add
arpl
push
lcall
add
in
lahf
loopne
jne
out
add
bound
pop
add
push
mov
push
push
lea
push
push
push
push
call
add
xchg
add
add
add
mov
push
pop
in
add
add
imul
add
jp
int
bound
addl
hlt
add
stos
jo
add
add
add
add
mov
add
xchg
jp
xchg
jae
lahf
in
mov
jmp
loop
add
andb
lret
add
ljmp
testl
les
add
push
lea
push
push
push
push
push
push
lea
push
push
call
add
js
add
ljmp
add
aam
xchg
add
gs
add
add
fwait
scas
mull
cld
out
add
aam
mov
mov
iret
movsl
mov
jbe
jnp
cltd
arpl
shl
add
add
pop
add
add
add
fcmove
fldl
leave
add
add
jbe
add
lret
stos
add
jns
test
xchg
into
add
repnz
add
pop
add
push
add
add
pop
add
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
pop
push
xchg
add
pop
add
jmp
add
add
out
je
loopne
add
add
cmpsl
stc
add
jnp
mov
jns
jnp
add
cltd
add
add
jns
add
add
leave
push
pop
add
cltd
test
mov
add
add
mov
mov
ja
stc
xchg
clc
in
add
add
in
add
frstor
add
xchg
add
add
pop
pop
rep
mov
xor
push
push
push
call
pop
mov
mov
pusha
add
stc
mov
stos
add
int3
xchg
add
je
int
add
xchg
mov
repnz
add
lahf
mov
add
scas
add
add
aam
add
negb
jb
add
pop
mov
movl
into
rcl
add
add
lock
mov
fnsave
mov
popa
mov
add
cli
fisttpl
pop
or
je
mov
add
push
dec
inc
pop
add
push
lea
push
push
push
push
push
call
push
add
mov
add
push
mov
add
shll
add
pop
add
xlat
add
add
add
mov
add
add
iret
add
enter
out
add
flds
mov
cmp
pop
lahf
add
push
call
negb
lcall
lea
pop
rep
pop
push
push
xor
push
sub
add
sub
dec
rol
pop
sub
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
add
add
leave
add
cld
add
jmp
add
xchg
stc
mov
stos
in
lds
ljmp
mov
push
add
loopne
aad
fidivrs
add
mov
push
jo
add
lea
add
pop
mov
add
fcmove
aam
lock
lcall
in
mov
pop
pop
mov
mov
push
shr
pop
mov
push
push
push
push
call
bound
add
add
push
aam
mov
add
loope
sti
add
add
add
xchg
mov
popl
movl
mov
xor
xlat
stc
out
push
rorl
sahf
hlt
add
add
add
add
add
lret
outsl
jmp
xchg
add
fiaddl
pop
int3
adcl
pop
movsl
rolb
push
flds
sti
cld
mov
lea
pop
jmp
push
push
push
push
push
push
push
lea
push
push
call
aam
add
lods
mov
pop
mov
aam
pusha
addb
add
data16
add
in
add
add
stos
test
repnz
add
add
mov
stc
int3
imul
jecxz
rolb
add
push
fcmovb
add
jmp
fisubl
add
mov
xchg
jnp
add
ja
mov
lea
pop
mov
push
push
call
popf
sti
add
pop
js
jl
pusha
add
lahf
jge
out
loope
pop
lods
pop
std
add
test
add
pop
int3
mov
int3
push
js
add
rolb
add
lcall
add
add
add
in
add
add
mov
icebp
pop
fnstcw
add
add
push
movsb
add
pop
mov
lea
pop
add
push
push
inc
pop
push
push
push
push
sub
add
ror
pop
mov
push
push
push
push
call
lret
jb
cmpsb
mov
xchg
ljmp
add
mov
fcmovu
push
add
add
add
mov
mov
mov
fildl
add
pusha
cmpsb
mov
add
mov
test
add
fdiv
loope
fldl
add
add
fidivrl
add
aad
mov
cltd
mulb
add
js
push
nop
addb
add
pop
pop
pop
pop
push
push
call
fmulp
addb
incb
out
mov
aad
add
add
lahf
add
fdivrs
je
push
add
je
fsubr
cwtl
ja
test
lock
add
leave
js
add
mov
mov
popa
gs
rolb
lock
std
test
orb
bound
add
or
cwtl
cltd
ljmp
add
aam
bound
pop
pop
leave
push
lea
push
push
push
push
push
lea
push
push
push
call
add
stc
lahf
add
add
gs
repnz
jae
lock
add
cwtl
jae
add
jp
jb
add
xchg
add
int
add
jo
leave
js
test
add
add
add
incb
add
incb
add
add
cli
clc
jo
cwtl
push
mov
mov
mov
movb
mov
lea
pop
ret
push
dec
pop
push
push
ror
pop
mov
push
add
shl
pop
add
push
push
push
push
push
push
lea
push
call
loopne
testl
in
je
jmp
mov
in
enter
ja
add
in
js
mov
pushf
popl
add
add
push
push
mov
add
add
add
add
jmp
out
add
lods
add
sub
pop
leave
icebp
in
aad
divb
aad
add
push
sbb
push
ror
pop
push
push
movl
push
push
push
push
push
push
call
repnz
add
add
imul
loope
shrb
xchg
push
roll
repnz
repnz
lods
add
sti
add
pusha
add
add
icebp
roll
fsubl
loop
add
loop
ljmp
add
push
stos
add
add
jns
out
mull
arpl
sti
aam
jno
xchg
aad
add
add
add
sar
sti
mov
add
add
pop
addl
test
je
mov
push
push
push
push
lea
push
lea
push
lea
push
push
call
jl
cmpsb
add
xchg
add
add
add
xor
mov
mov
int
add
jb
out
xchg
add
xchg
mov
add
pop
mov
add
in
jae
lret
add
push
add
add
add
add
mov
add
insb
add
enter
add
mov
stos
add
add
add
mov
mov
mov
into
add
add
and
pop
push
push
push
call
lret
pop
lret
add
add
xchg
add
add
in
add
out
push
lock
add
cli
hlt
xor
mov
mov
push
add
ljmp
xchg
popa
icebp
mov
add
jecxz
loopne
orl
addr16
mov
roll
add
fmull
cwtl
mov
je
push
add
add
pop
pop
push
shl
ror
not
pop
pop
push
push
push
push
push
call
stos
add
popa
add
add
jp
roll
xlat
pop
in
addl
add
leave
jl
xchg
add
xchg
lods
scas
add
jne
popf
in
add
mov
ror
out
add
add
ror
lret
add
jns
fwait
add
call
jnp
add
pop
add
xchg
add
xchg
test
add
sahf
mov
rcrl
arpl
leave
push
push
push
push
push
push
push
push
push
call
cli
add
in
add
xchg
add
call
cwtl
pusha
hlt
lahf
jns
add
roll
lret
mov
add
mov
pop
add
jp
jb
jmp
movsb
lea
mov
add
add
fists
add
push
mov
add
stos
loop
add
add
hlt
add
mov
lea
pop
ret
push
push
shl
xor
pop
mov
push
rol
lea
ror
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
call
loop
fprem1
xchg
les
add
add
add
cli
add
ja
add
in
xchg
mov
push
add
xchg
adcb
pop
sahf
push
lds
add
test
mov
lods
add
jno
lret
int
mov
out
cld
mov
mov
add
xchg
add
pop
mov
loop
fmull
push
ror
sub
dec
add
pop
push
push
inc
inc
shr
pop
push
push
push
push
push
push
call
je
add
add
add
movsb
loope
roll
add
add
mov
add
je
mov
div
add
cmpsl
pop
movsb
mov
fdivrl
add
out
mov
add
pop
add
add
add
scas
add
cwtl
popa
flds
aad
add
js
add
add
bnd
addr16
add
imul
add
fmull
testl
addl
push
lea
push
lea
push
push
push
call
roll
mov
test
loopne
add
incb
mov
addl
add
cltd
mov
jmp
push
add
add
imul
hlt
pop
add
add
add
jle
icebp
mov
add
add
orl
imul
cli
pushf
mov
les
add
jle
decl
or
int
cmpsl
call
push
js
mov
add
add
mov
clc
sti
mov
mov
notb
sahf
mov
aad
cli
add
add
add
mov
add
mov
in
add
mov
add
fstpt
je
xchg
fwait
mov
add
lret
add
imul
push
add
add
add
add
adc
jne
push
lea
push
push
lea
push
call
faddl
jmp
add
add
add
jecxz
stc
push
add
add
frstor
add
add
bound
mov
add
in
add
lods
xchg
add
add
jge
mov
fnstcw
out
mov
fldenv
out
mov
add
add
rcrl
cmc
mov
add
pop
je
gs
mov
fisttpll
pop
push
push
push
lea
push
push
push
push
call
jnp
imul
pusha
jl
add
roll
add
test
add
mull
add
outsl
add
jmp
stc
add
add
push
push
add
add
popl
xchg
add
add
cmpsb
add
stos
lods
mov
add
cltd
add
data16
popa
test
add
cmc
scas
xchg
mov
aad
int3
lea
pop
push
call
cmpl
jne
push
lea
push
push
push
call
lods
ficoml
add
add
jo
add
add
in
roll
mov
add
jecxz
add
lcall
cli
mov
ffreep
sti
scas
aam
add
xchg
xchg
fs
add
push
scas
mov
cli
mov
add
push
add
add
jle
mov
pop
jle
cmc
add
add
lea
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
add
bnd
pop
add
add
add
add
push
add
int3
outsl
stos
jno
add
add
aad
xchg
arpl
add
rcll
add
add
gs
pop
lea
test
add
ja
ljmp
add
les
lea
mov
add
push
movsl
add
xchg
mov
add
test
mov
mov
movsl
lods
add
add
add
test
pop
pop
push
push
lea
push
push
push
push
lea
push
call
add
mov
add
add
add
fldt
add
add
xlat
add
call
add
add
fildl
mov
clc
int
push
fwait
jmp
in
add
mov
stos
add
add
mov
aad
add
push
add
xchg
shlb
int3
add
mov
iret
add
add
pop
pop
pop
push
push
lea
push
push
lea
push
call
jne
sarl
movsl
add
add
cmpsb
add
add
int3
add
jle
jo
add
add
test
les
add
add
jge
mov
je
rcrb
add
test
add
jae
mov
add
add
mov
stc
mov
lea
pop
leave
ret
push
push
push
call
add
mov
scas
jbe
add
scas
xchg
add
out
mov
mov
add
cmpsb
pop
jge
jb
add
fldt
fnstsw
add
xchg
mov
pop
je
adc
cmc
add
add
add
ret
add
imulb
add
iret
data16
add
mov
mov
add
les
in
add
push
push
lea
ror
shr
pop
push
push
push
xor
sub
shl
add
pop
push
push
shl
pop
movl
push
call
push
push
push
lea
push
push
lea
push
call
ja
push
fadds
mov
add
mov
add
loope
jl
add
add
int
add
cmpsl
add
add
cld
jp
lods
mov
mov
add
rorl
add
test
mov
lret
pop
ret
fiaddl
add
std
jge
js
mov
stos
mov
lea
pop
push
call
push
shr
sub
pop
subl
push
shr
shr
pop
cmpl
jne
pop
push
pop
pop
push
inc
sub
pop
pop
pop
push
add
shl
add
not
pop
leave
push
dec
add
dec
pop
ret
push
mov
push
push
push
call
leave
add
leave
add
mov
mov
jl
mov
add
stos
mov
imul
add
mov
push
test
fiadds
add
jno
jbe
in
push
fadds
leave
jp
add
add
add
add
add
mov
add
imul
movsl
std
subb
add
or
add
push
push
lea
push
push
push
call
add
movsb
add
add
mov
pop
into
scas
je
lock
add
cli
testl
jae
cltd
add
repnz
add
test
add
pop
add
add
add
into
fstps
xlat
add
mov
lahf
add
popf
out
clc
movsl
addb
add
mov
jns
shlb
push
add
pusha
adc
push
push
lea
push
push
lea
push
push
call
nop
ja
mov
pop
add
add
jp
mov
add
movb
mov
fidivs
imul
arpl
les
pop
lea
add
pusha
pop
add
roll
loope
jnp
pop
lods
movsl
pusha
cli
fsin
mov
loop
lret
add
add
div
add
in
in
add
add
add
aam
add
mov
lea
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
shrl
add
add
mov
mov
mov
add
add
mov
movsb
cmpsl
add
call
popl
add
pop
fiaddl
add
xorl
xchg
mov
test
add
iret
cmc
add
gs
add
movl
fmull
push
add
pop
push
push
ror
shl
add
pop
mov
push
xor
pop
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
addb
add
int
add
jns
pop
enter
or
add
xchg
mov
fimuls
jle
mov
pop
add
flds
shll
mov
add
mov
sti
add
rolb
add
add
sti
add
add
add
add
add
call
fmull
call
mov
bound
inc
push
push
lea
push
call
sahf
mov
popf
add
mov
add
arpl
add
jp
add
add
add
fildl
imul
arpl
add
aam
add
mul
out
pop
add
aad
mov
add
cwtl
popf
movsl
add
add
add
addb
ljmp
rcrl
jmp
sarb
push
add
ret
mov
lea
pop
mov
push
add
add
pop
shr
add
mov
push
lea
push
push
push
push
push
push
call
xchg
cmpsl
jge
stc
lods
out
outsl
cmpsb
mov
add
pop
fs
jmp
add
push
xchg
movsb
insb
add
stos
cmc
int
les
add
add
test
fldl
adc
add
pop
jle
pop
movsb
roll
mov
jmp
test
jne
sar
insb
add
aam
bound
mov
add
add
push
lea
push
lea
push
push
push
lea
push
push
call
mov
lret
int
add
add
mov
pusha
fcmovb
ljmp
test
jnp
add
lock
add
nop
add
nop
jp
add
add
lds
mov
add
addb
add
add
pop
add
in
add
mov
jle
push
xlat
add
ljmp
cli
add
add
pop
mov
add
mov
lea
pop
mov
push
pop
mov
push
push
push
push
push
push
push
call
xchg
mov
fstl
stc
in
mov
fwait
call
clc
pop
addl
add
mov
popf
add
add
in
roll
jae
add
jnp
roll
idiv
xchg
into
test
int
mov
push
jne
fcmovbe
aam
cld
mov
cli
jbe
into
jmp
in
add
jge
add
mov
push
sahf
add
mov
int3
lret
lock
pop
cmp
jne
push
shl
pop
cmp
jne
push
push
lea
push
push
call
add
add
bound
aam
cmpsb
fldl
add
hlt
add
add
add
popf
repnz
add
cmpb
addr16
aad
add
rolb
add
mov
add
arpl
add
iret
add
cli
add
cmpb
fucomip
jl
add
add
add
loop
imul
mov
cmpsb
addr16
sahf
fildl
add
pop
mov
movl
jmp
push
shr
pop
mov
mov
sub
jne
push
add
dec
sub
pop
mov
movl
push
lea
push
push
push
call
push
mov
in
add
stos
add
aad
add
roll
jae
mov
add
xchg
add
add
mov
loope
test
add
movsb
pop
lods
add
int3
int
mov
aad
add
lahf
add
add
lea
mov
add
add
roll
addl
bound
add
add
mov
lea
pop
jmp
push
sub
pop
mov
push
push
lea
push
push
push
push
push
call
add
add
std
mov
add
add
sahf
lahf
scas
add
fwait
add
pop
arpl
add
add
jge
push
mov
add
sti
add
lods
add
movsb
bound
add
fistps
shll
fldl
in
add
nop
add
add
subb
hlt
lea
pop
mov
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
test
imul
pop
add
lret
call
add
jp
xchg
scas
add
mov
lahf
rcr
mov
add
add
imul
add
add
ficomps
xchg
pop
add
add
add
fldl
add
add
mov
add
add
add
jmp
add
pop
mov
add
mov
lea
pop
cmp
jne
push
lea
push
push
push
call
add
mov
add
outsl
push
pusha
xchg
add
add
lds
int
je
cld
ja
fiaddl
push
add
fadds
push
add
out
add
jne
jecxz
adcl
add
jmp
add
fwait
xchg
scas
rol
add
pop
testb
add
loopne
in
mov
add
add
rolb
add
lds
add
mov
cld
lea
pop
mov
movl
push
inc
shl
pop
jmp
mov
cmpw
jne
push
pop
mov
movl
jmp
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
out
mov
jle
pop
add
add
mov
stos
addb
add
jmp
add
fucom
add
push
lcall
mov
mov
add
popa
add
add
add
pop
mov
add
mov
arpl
add
jp
add
mov
add
add
add
mov
jo
mov
add
les
pushl
push
push
lea
push
push
lea
push
push
call
loope
add
xlat
filds
data16
add
nop
add
mov
imul
out
add
mov
add
mov
add
mov
mov
mov
gs
xchg
add
jne
pop
int3
nop
pop
add
mov
mov
in
arpl
add
add
mov
mov
mov
test
pop
pop
mov
mov
push
shl
pop
mov
push
push
ror
push
push
pop
add
inc
not
sub
lea
pop
xor
dec
add
add
pop
push
lea
push
push
push
lea
push
push
push
push
call
jge
scas
jnp
in
ret
add
add
popa
mov
ficompl
add
cmc
ret
add
js
push
add
add
add
add
add
pusha
add
add
push
jmp
add
ret
xchg
fstl
ret
jl
jno
add
jae
add
add
jnp
mov
lea
pop
push
push
rol
pop
call
push
push
push
push
push
push
push
push
call
mov
jno
movsb
rolb
mov
movsb
add
add
popa
test
loop
enter
add
push
jecxz
push
add
add
stos
add
lahf
nop
add
lret
add
lods
jbe
call
add
jl
add
lcall
add
mov
pop
je
add
add
mov
mov
lea
pop
cmpl
je
push
push
xor
inc
push
sub
add
shr
shr
sub
xor
pop
lea
sub
shl
shl
pop
push
inc
sub
shr
pop
push
call
cmpl
je
push
push
add
dec
push
push
pop
add
sub
inc
dec
sub
shl
pop
shr
pop
push
ror
add
dec
pop
push
call
push
ror
ror
not
shr
pop
cmpl
je
push
push
rol
add
add
push
push
pop
add
add
lea
sub
xor
shr
xor
pop
not
not
shl
pop
push
push
push
lea
push
lea
push
push
push
push
call
jge
add
in
add
add
xchg
test
sti
loopne
in
test
add
add
mov
jbe
add
mov
ja
add
add
xchg
add
loopne
sbbl
add
push
add
std
mov
mov
enter
js
add
add
mov
push
add
jle
pop
add
mov
lea
pop
push
call
push
ror
xor
rol
pop
cmpl
je
push
push
add
sub
push
or
not
add
dec
ror
sub
add
rol
pop
ror
pop
push
add
dec
ror
pop
push
call
push
lea
xor
not
pop
cmpl
je
push
push
sub
push
xor
add
sub
sub
dec
pop
sub
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
cltd
add
add
addr16
jecxz
lds
repnz
add
vcmppd
fmul
lods
push
fs
cld
mov
out
add
mov
mov
je
add
popf
add
add
add
add
fimull
int3
hlt
aad
mov
add
xchg
jmp
xchg
ror
ret
pop
addb
add
add
mov
pop
call
cmpl
je
push
push
add
push
xor
add
lea
not
dec
sub
shr
pop
add
inc
sub
pop
push
sub
pop
push
call
push
lea
push
push
lea
push
push
call
mov
jle
add
add
xchg
add
data16
pop
push
add
fidivrl
mov
popa
rolb
fstpt
pushf
add
mov
cld
pop
sti
rcr
add
cmpsl
add
add
in
fstp
add
jp
addl
push
into
add
out
vpsubw
mov
pop
lahf
adcl
push
mov
lea
pop
cmpl
je
push
push
inc
dec
push
push
pop
add
shr
sub
dec
pop
ror
pop
push
lea
add
pop
push
push
push
lea
push
push
push
push
call
add
jae
in
mov
imul
mov
jo
cld
stos
imul
loopne
mov
add
jb
push
add
mov
pop
add
add
add
mov
sti
movl
xchg
add
pusha
xchg
add
add
add
add
addb
add
jns
add
pop
add
add
pop
call
push
sub
pop
cmpl
je
push
push
add
dec
add
push
sub
add
ror
sub
not
add
xor
pop
sub
shr
not
pop
push
push
push
lea
push
lea
push
call
add
mov
loope
jl
iret
add
add
movsb
in
add
int3
push
rcrb
push
add
mov
mov
cmpsl
mov
add
data16
add
cmpsl
xchg
add
les
rolb
add
mov
add
pop
add
xchg
mov
add
add
cmpsl
add
add
xchg
add
cltd
in
les
push
lea
push
push
lea
push
push
push
lea
push
push
call
test
mov
mov
fs
bound
add
mov
add
add
cmpsl
fsubp
push
xor
add
add
add
stos
fs
add
sahf
outsl
loope
lock
call
xchg
add
sbbl
mov
push
rolb
lret
mov
lea
pop
call
push
add
pop
cmpl
je
push
push
rol
sub
add
push
push
pop
add
shl
sub
sub
sub
lea
shl
pop
sub
pop
push
push
push
push
push
push
push
push
call
add
mov
jnp
sahf
add
iret
mov
popa
scas
xchg
int3
clc
jl
xchg
xchg
mov
std
cld
add
add
in
add
add
add
add
mov
mov
pop
mov
popa
add
pop
add
cmc
jae
mov
mov
repnz
cmpsl
lret
incb
add
add
scas
sti
add
push
mov
lret
lods
jle
mov
add
hlt
lea
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
negb
addl
add
push
movsb
push
add
pop
add
or
popl
add
mov
notl
pop
test
pop
mov
je
adcl
pusha
add
mov
add
add
add
lods
add
cmpb
scas
jb
xchg
frstor
pop
push
pop
imul
add
add
testb
mov
in
out
popa
pop
mov
lea
pop
call
cmpl
je
push
push
shr
push
or
not
add
lea
add
sub
ror
add
pop
xor
shl
pop
push
rol
pop
push
call
push
lea
push
push
lea
push
push
push
push
push
call
add
add
repnz
imul
fs
mov
add
xchg
add
pop
add
add
arpl
test
add
push
push
add
fiadds
pop
sti
jmp
jmp
add
add
add
outsl
jecxz
lock
xlat
add
add
add
add
and
js
xor
ret
test
add
add
pop
xor
sub
push
and
add
xor
xor
shl
sub
shl
pop
rol
dec
add
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
popl
add
xchg
add
mov
shr
addr16
push
jne
add
xlat
mov
xchg
add
aam
add
stc
add
add
faddl
add
in
jae
add
icebp
add
add
jle
add
add
add
add
call
pop
roll
add
movsb
jae
add
mov
add
lret
xchg
lock
add
pop
push
push
shl
add
pop
call
push
inc
not
pop
cmpl
je
push
push
sub
lea
push
xor
add
shr
sub
dec
xor
pop
shl
sub
pop
push
push
push
push
call
mov
enter
add
cli
test
add
add
push
add
mov
iret
add
add
leave
add
sahf
mov
out
nop
add
add
add
lods
add
loopne
add
lods
fldl2t
mov
jge
bound
add
add
out
push
popa
add
lds
add
pop
add
mov
shl
mov
lea
pop
push
push
add
pop
call
cmpl
jne
mov
push
push
push
push
call
add
add
add
jl
jl
mov
ljmp
cld
scas
scas
negb
shll
add
addl
add
movsb
shlb
add
add
add
outsl
cltd
push
add
fsubp
add
jmp
add
pop
xchg
add
add
ficoml
xchg
add
jnp
add
outsl
arpl
mov
lea
pop
movl
jmp
push
push
push
push
call
xchg
add
jl
test
cmc
insb
mov
into
xchg
test
add
add
lret
rcll
add
cmpsl
mov
pop
add
out
add
leave
add
mov
add
lds
add
lods
add
add
jmp
bound
cmpsb
add
add
les
rcrb
add
add
pop
pop
pop
push
shr
shl
pop
leave
push
not
add
shl
pop
ret
push
add
shl
pop
push
mov
push
xor
ror
rol
pop
add
cmpl
jne
push
push
shl
push
sub
add
sub
pop
dec
sub
shr
sub
pop
push
lea
pop
pushl
push
sub
shr
pop
call
push
shl
inc
pop
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
add
fisubrs
mov
lret
mov
mov
scas
jbe
clc
mov
ret
loopne
loop
test
add
jns
sar
add
lea
scas
out
add
xchg
fisubl
push
xchg
in
div
add
push
add
push
pop
add
mov
movsb
dec
in
add
push
xchg
fisttpll
pop
call
push
push
call
adcb
in
mov
add
aad
add
jle
add
add
pop
add
mov
add
cld
out
orl
in
into
mov
mov
mov
fs
mov
lds
int
add
push
mov
add
mov
rcll
add
cld
lea
pop
jmp
cmpl
je
cmpl
jne
push
add
shr
shl
pop
leave
push
push
push
push
lea
push
push
call
jmp
add
lods
call
add
movsl
add
popl
mull
add
pusha
mov
add
add
out
mov
add
mov
out
imul
stos
add
lods
les
add
mov
push
fs
xchg
cltd
push
pop
add
push
ja
add
lds
xchg
add
call
lea
pop
add
push
add
shr
shl
ror
pop
pop
push
push
push
call
add
mov
add
fwait
loope
lret
push
pop
lods
lret
add
add
fadds
add
incb
jno
fildl
ljmp
push
mov
mov
repnz
add
jecxz
add
add
add
push
add
add
add
add
add
add
add
xchg
add
pop
add
icebp
roll
add
fmull
push
push
push
push
push
push
push
push
push
push
call
int3
add
clc
add
add
jbe
add
out
aam
jp
out
mov
out
int
push
jns
add
cmpsl
insb
add
test
xchg
testl
mov
push
jo
add
add
scas
cli
add
push
pop
fs
add
fcmovnbe
lea
rorb
lods
jno
fs
add
je
mov
add
shl
enter
lea
pop
pop
pop
leave
push
sub
lea
lea
shr
pop
add
push
pop
ret
push
push
push
call
mov
movsl
js
popa
jne
pop
jb
mov
iret
call
add
rorb
lods
add
add
add
push
add
out
stc
mov
mov
pop
mov
add
add
shll
push
fadds
fcoml
mov
fs
test
xlat
add
pop
jmp
cmpl
jne
push
push
xor
shr
push
or
not
add
shl
sub
rol
pop
sub
inc
dec
pop
push
push
call
fildl
sti
repnz
xchg
sbbl
xlat
cli
jge
add
hlt
lods
loope
stos
popl
test
xchg
cltd
insb
bound
testl
test
leave
fwait
add
add
addr16
bound
add
add
pop
add
xchg
sti
add
hlt
add
lods
mov
add
in
add
cmpsl
mov
jae
add
xchg
xchg
fsubrs
jne
insb
add
pop
pushl
call
push
push
call
faddl
pop
add
not
mov
scas
ja
add
test
int3
popl
lcall
add
pusha
add
push
pop
add
push
add
add
lods
mov
je
popf
in
add
add
mov
add
add
jno
fsubl
add
mov
add
add
mov
leave
mov
lea
pop
push
push
push
push
call
fiadds
mov
add
ffreep
in
lcall
pop
jmp
mov
add
lods
stc
lret
adc
mov
vsqrtsd
mov
popl
add
aam
mov
add
add
mov
test
flds
add
in
add
test
lcall
int3
lea
pop
call
jmp
push
lea
push
push
lea
push
push
call
pop
filds
pop
push
add
add
arpl
add
addb
testb
lock
js
fiadds
jecxz
add
add
add
mov
add
mov
xlat
mov
add
ljmp
xchg
cmpsb
enter
sahf
add
cli
add
je
add
add
push
cli
je
test
add
push
push
add
cli
test
mov
les
add
mov
les
jge
add
test
adc
add
add
add
add
jecxz
add
lods
mov
add
scas
mov
bound
cwtl
xchg
add
jecxz
mov
mov
stos
add
pop
add
fildl
lods
add
xchg
pop
lea
add
fiadds
add
add
add
aam
bound
pop
mov
push
push
push
push
push
call
fcompl
add
add
pop
add
add
stos
add
add
xchg
ret
lods
hlt
hlt
ja
add
add
add
pusha
scas
add
add
popf
add
cli
add
add
mov
enter
add
test
xchg
imul
add
out
push
lahf
push
mov
ljmp
add
add
mov
fmull
add
add
push
push
push
add
add
ror
push
or
not
add
ror
sub
rol
ror
pop
add
not
add
pop
push
push
call
mov
push
shll
add
mov
add
popf
add
stc
loopne
jp
into
data16
out
mov
add
arpl
xlat
mov
mov
add
mov
xchg
add
add
lret
mov
stos
mov
loopne
add
out
add
add
mov
mov
cld
xchg
add
xchg
mov
lea
pop
pushl
call
push
shl
lea
pop
call
push
push
dec
lea
lea
not
push
or
inc
add
add
ror
inc
sub
lea
pop
rol
pop
push
shr
not
pop
pushl
push
push
push
push
push
push
lea
push
push
push
call
add
imul
add
mov
add
xchg
add
mov
add
add
movsl
mov
movsl
add
add
add
enter
jge
add
mov
gs
add
add
enter
add
add
lcall
add
int3
fiaddl
add
mov
add
add
add
cwtl
jl
in
fmull
cmpsb
sbb
add
mov
shrb
movsb
mov
xor
add
sub
ror
dec
add
pop
rol
add
pop
push
add
dec
ror
pop
pushl
push
dec
pop
call
call
push
push
ror
xor
push
xor
add
add
sub
ror
sub
pop
dec
pop
push
push
rol
ror
push
xor
add
sub
lea
pop
rol
pop
push
push
push
push
call
add
add
add
faddl
jne
cmpsb
add
add
add
add
pop
add
add
cmp
in
add
shl
test
lds
push
push
add
roll
add
fcmovb
add
jp
add
popa
test
add
out
add
add
mov
jmp
cld
lea
pop
call
push
push
lea
push
lea
push
push
lea
push
call
add
loopne
add
stos
mov
add
xchg
aam
in
add
add
add
add
add
add
mov
add
jns
add
xlat
lahf
mov
add
add
xlat
add
movb
icebp
add
push
lret
mov
icebp
add
movsl
out
add
scas
cld
add
mov
add
push
arpl
add
jae
imul
aam
bound
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
xlat
in
add
add
shl
add
movsl
cmc
add
jae
mov
add
adcb
mov
add
out
lahf
add
xchg
ret
pop
int
data16
add
add
add
mov
add
add
mov
add
add
movsl
mov
popl
xchg
lock
out
xchg
add
test
out
push
add
pop
dec
jne
push
add
rol
lea
pop
call
jmp
call
push
push
sub
shr
inc
push
push
pop
add
add
dec
sub
not
sub
not
add
pop
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
call
mov
jnp
fsubl
popa
mov
sar
add
mov
gs
into
pop
bound
ficoml
leave
add
pop
jae
insb
add
in
fstps
fldt
add
add
add
roll
jle
add
add
push
mov
pop
add
add
add
add
mov
mov
jmp
xchg
in
add
jo
mov
add
pushf
mov
mov
lea
pop
pushl
call
push
push
push
push
call
jae
cmpsb
cmc
out
into
add
out
add
in
mov
pop
mov
add
int
iret
jns
add
ljmp
fidivl
jo
roll
stos
pop
add
lcall
nop
push
scas
add
add
cmpsb
popa
out
jo
add
lret
ja
repnz
add
push
add
mov
lea
pop
call
mov
lea
push
push
shr
sub
push
sub
add
not
shr
rol
sub
ror
pop
lea
sub
dec
pop
push
shl
pop
pushl
call
push
shl
add
add
lea
pop
push
call
push
push
shr
shr
push
xor
add
add
sub
sub
pop
inc
pop
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
out
add
push
ja
add
push
push
add
lods
mov
orb
jb
jne
mov
jge
push
pushf
add
add
add
xchg
add
push
mov
add
addl
add
gs
fildl
mov
call
and
mov
add
data16
fldenv
add
mov
addb
push
mov
mov
lea
pop
pushl
push
push
call
mov
mov
add
add
add
mov
add
pop
xchg
add
test
add
jl
xchg
mov
mov
mov
imul
add
ljmp
cltd
stos
xchg
adc
add
mov
push
pop
mov
add
mov
add
pop
call
call
push
shr
inc
shr
pop
mov
push
push
call
add
add
add
add
add
insb
les
add
mov
fdivs
add
push
add
cmc
mov
rcr
jnp
lret
add
leave
pop
lea
lods
into
rol
sti
nop
hlt
negb
mov
lods
mov
ja
js
enter
add
nop
mov
clc
movsb
jne
push
xchg
add
mov
lea
add
add
arpl
ja
mov
lea
pop
lea
push
push
xor
rol
sub
push
sub
add
sub
sub
dec
ror
lea
pop
shl
dec
ror
pop
push
push
lea
push
lea
push
push
push
call
insb
push
add
add
fnstenv
lods
faddl
push
add
fiaddl
ljmp
out
pop
add
add
mov
jae
mov
add
add
bound
add
add
fcoms
lods
stos
stos
mov
mov
add
push
mov
add
lds
mov
xchg
fs
shrl
add
loope
aam
bound
pop
pushl
call
push
rol
pop
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
aam
add
xchg
aad
pop
sar
rcrb
fildll
add
mov
add
add
mov
ficoml
push
cmpb
add
mov
out
mov
push
add
push
jge
fs
add
mov
leave
add
add
popf
add
roll
add
add
add
jns
push
jl
mov
mov
cld
add
add
lea
pop
push
push
push
add
sub
dec
pop
pushl
push
push
sub
dec
push
and
add
add
sub
pop
sub
pop
push
push
not
pop
call
push
push
dec
shr
push
xor
add
xor
sub
dec
sub
pop
dec
dec
pop
push
add
pop
pushl
call
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
outsl
add
add
fidivrs
roll
mov
add
pusha
in
add
pop
mov
add
add
aad
imul
add
mov
mov
add
add
add
lret
pop
add
cli
add
addr16
add
int3
lea
pop
push
call
push
push
lea
ror
push
and
add
sub
not
sub
add
xor
pop
add
pop
push
push
lea
push
push
push
push
push
push
push
call
add
js
add
add
mov
stc
mov
stc
add
jae
add
mov
lret
jb
mov
arpl
add
add
mov
add
add
xchg
add
add
fwait
add
mov
pop
add
sahf
lret
add
add
add
mov
push
add
push
add
icebp
add
sti
jb
ja
add
hlt
ret
mov
lea
pop
pushl
call
call
push
lea
push
push
push
call
add
fwait
mov
mov
iret
xchg
mov
add
lcall
add
push
cwtl
cwtl
shll
jnp
add
jge
sti
mov
jle
push
jmp
roll
pop
lret
add
call
mov
movsb
out
test
add
add
fld
cwtl
test
mov
lea
pop
jmp
pushl
mov
push
pop
jmp
push
push
add
push
or
inc
add
lea
lea
sub
inc
pop
shr
sub
shl
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
hlt
add
add
add
add
bound
add
imul
stos
add
mov
add
xchg
add
pop
add
mov
push
add
loopne
mov
add
add
lds
lods
ja
cmpsb
add
ret
mov
stos
fildl
mov
lea
pop
pushl
call
push
add
ror
pop
push
push
sub
sub
add
add
pop
call
push
push
inc
shl
push
or
inc
add
ror
dec
dec
sub
lea
ror
rol
pop
xor
xor
sub
pop
push
add
rol
not
pop
pushl
push
lea
push
push
push
push
call
fs
fwait
add
add
mov
test
loope
jns
ja
add
add
add
add
iret
clc
mov
mov
leave
add
add
aam
add
add
add
add
add
popa
add
add
ljmp
jne
fmull
and
add
push
call
push
lea
push
lea
push
call
testl
add
imul
add
add
ja
add
xchg
out
lea
stos
pop
add
add
lock
add
imul
add
add
rolb
mov
add
insb
add
imul
insb
cmpsl
add
push
rorl
add
je
add
add
xchg
mov
lea
pop
leave
push
push
push
push
push
call
sti
add
into
add
add
faddl
idiv
addb
test
cltd
jae
int3
filds
add
jo
mov
jbe
pop
iret
add
add
mov
mov
add
lds
js
mov
les
add
add
add
loope
mov
add
cmpsl
les
mov
lret
push
cli
les
add
mov
add
fmull
les
jbe
pop
push
xor
add
sub
pop
pop
push
push
lea
push
lea
push
push
lea
push
call
arpl
sahf
mov
add
mov
jno
fisubrl
jecxz
add
stos
add
add
jne
leave
fwait
cli
lds
add
movsl
jo
cmpsb
jp
pop
hlt
jae
pushf
xchg
add
add
jno
in
add
add
rolb
push
test
pop
mov
add
sar
fiaddl
add
mov
lea
pop
leave
add
ret
push
shl
shr
shl
pop
leave
ret
push
push
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
cmpsl
jge
outsl
lret
mov
cmpsb
hlt
cltd
scas
in
add
mov
pop
add
add
mov
fldl
add
add
add
shrl
add
int
add
mov
popf
add
add
add
fxch
add
add
add
loopne
ret
fldl
add
lret
add
add
in
lods
add
jp
add
add
pop
add
add
pop
cmpl
jne
push
lea
push
call
add
jo
xchg
mov
add
clc
cmp
add
ficoms
push
adcl
add
add
jo
out
test
out
lcall
add
add
add
push
xlat
std
xchg
mov
add
ljmp
add
add
add
jl
add
lods
add
fiaddl
nop
in
enter
les
or
inc
and
jmp
push
push
push
push
call
add
mov
add
bound
add
call
cli
jl
test
add
aam
pop
ret
call
xchg
or
add
add
in
fdivrs
mov
add
ljmp
out
add
popa
jb
add
add
add
add
add
pop
mov
push
add
pop
and
push
push
push
lea
push
push
push
push
push
call
fnsetpm(287
out
mov
ja
movsb
push
add
imul
mov
push
add
scas
loop
lret
add
filds
jbe
add
shl
add
sti
fwait
add
add
mov
jecxz
lea
add
test
int
mov
imul
push
add
mov
xlat
jge
add
jmp
pop
add
ljmp
rolb
add
xchg
add
add
pushf
mov
lea
pop
xor
push
ror
pop
xor
push
not
ror
pop
add
xor
dec
push
lea
add
pop
sub
push
add
add
pop
jmp
sub
push
shl
pop
pushl
push
shl
pop
pop
sub
push
sub
sub
pop
cmp
jne
push
lea
shr
dec
dec
pop
mov
lea
sub
push
push
push
push
push
call
add
add
mov
xchg
xchg
add
add
loopne
add
add
add
stc
lcall
rcl
lds
jne
xlat
xchg
push
cmc
enter
iret
jbe
push
add
test
in
add
add
arpl
jbe
fwait
add
ja
sahf
mov
add
lea
pop
mov
push
push
push
call
jbe
xorb
jne
cmpsl
add
call
mov
mov
jno
in
add
addl
in
movsb
mov
mov
jo
cld
cmpsl
test
fidivrs
add
cwtl
ret
add
jne
xchg
mov
xchg
in
js
in
jecxz
mov
loope
cwtl
mov
lea
pop
shr
add
sub
push
push
lea
push
push
call
jns
add
add
loop
out
sti
add
jb
mov
add
add
add
add
les
add
jle
add
add
add
call
int
outsl
push
scas
js
xchg
xorb
in
add
outsl
add
add
mov
les
add
pushf
divb
add
lock
mov
lea
pop
pushl
push
dec
add
add
pop
pop
push
add
pop
shr
and
push
push
push
push
push
lea
push
push
push
push
call
lods
mov
jbe
add
lret
mov
add
pushf
add
stos
jns
add
jae
lds
add
mov
test
add
add
test
lahf
lret
mov
orl
sarb
iret
xlat
add
int
popa
cld
jb
imul
arpl
sub
push
inc
pop
cmp
jne
push
push
push
call
add
xchg
mov
add
int
popa
add
fistl
pop
add
add
xchg
add
ja
in
add
add
add
pop
enter
lods
ret
add
push
add
popa
data16
out
addl
add
mov
add
popa
add
js
add
pop
xchg
add
aam
add
mov
lea
pop
leave
push
push
call
add
add
sti
lret
ret
sahf
stc
out
into
loop
jp
add
mov
add
sahf
xchg
mov
jbe
lods
add
add
shl
push
test
into
rorl
add
push
into
add
add
add
or
add
shll
mov
mov
lret
lds
aam
bound
pop
ret
push
push
rol
inc
pop
mov
add
push
push
push
call
add
add
out
push
fs
mov
roll
fimuls
roll
add
pop
pop
add
add
jge
add
rolb
add
add
pop
movsb
jae
stc
add
repnz
insb
add
testl
sahf
add
add
call
fwait
out
add
sti
rolb
mov
lea
pop
push
push
push
lea
push
call
add
cwtl
add
loopne
test
pop
add
add
mov
jo
jmp
add
cmc
add
in
mov
mov
lret
shlb
add
loope
jl
add
subl
fs
push
add
add
fs
ljmp
add
xchg
add
test
cld
add
pop
jne
hlt
mov
arpl
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
jne
mov
popa
add
add
loop
pop
movsl
lret
fsubl
add
add
mov
insb
push
add
add
pop
cmc
add
add
jne
push
add
add
shrl
mov
hlt
pop
add
add
lods
repnz
adcl
hlt
movsb
mov
jnp
popa
add
add
shrb
nop
add
into
mov
test
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
in
addb
push
jnp
add
add
icebp
addb
mov
add
add
in
data16
aam
negl
popa
les
add
add
add
addb
shll
cwtl
data16
pop
out
add
bound
xchg
popf
pop
in
cmc
icebp
jp
filds
rolb
add
add
jae
fwait
jb
mov
lea
pop
lea
push
sub
add
rol
pop
sub
push
push
lea
push
push
push
call
mov
icebp
add
mov
test
add
test
add
add
add
lds
jmp
hlt
js
add
add
mull
mov
aam
add
fsubrp
test
stos
add
add
ficompl
push
pop
mov
int3
lea
pop
mov
shr
add
push
pop
mov
add
mov
push
add
shr
add
pop
add
xor
mov
push
inc
lea
add
pop
and
call
push
lea
push
call
add
add
add
xchg
mov
movl
in
fistps
shrb
add
add
into
clc
stos
add
add
out
add
add
popl
add
fstpl
push
push
add
fiadds
add
lret
add
add
pop
add
nop
add
add
push
lea
add
mov
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
pop
add
out
test
add
cltd
add
mov
mov
jno
xchg
add
out
ret
add
add
stos
xchg
repnz
in
faddp
movsb
add
imul
fildl
bound
mov
jb
push
movsl
add
pop
mov
je
rcll
ja
popf
fisubl
cmpsl
mov
lea
pop
cmp
je
push
not
add
pop
add
cmpl
jne
xor
push
shr
pop
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
call
sbbl
push
lods
add
stos
add
mov
mov
add
jmp
add
add
add
add
pop
add
fdivrl
push
push
jmp
add
add
jb
movsl
loop
add
pop
add
add
mov
les
loope
mov
aad
popf
addb
jbe
add
push
push
jns
add
push
add
mov
lea
pop
pop
pop
push
lea
push
push
call
add
mov
push
jae
push
lret
add
add
add
out
add
push
add
scas
lret
add
add
fidivl
popa
sahf
add
xchg
add
xchg
insb
mov
cmpsl
call
pop
in
test
pop
pop
xchg
add
rolb
nop
in
add
add
aad
add
ret
mov
add
addl
add
mov
add
add
mov
lea
pop
pop
pop
leave
push
push
push
push
call
pop
orl
add
nop
add
add
pop
jnp
add
add
jecxz
add
icebp
add
add
movsb
repnz
flds
mov
movb
fsub
cld
pop
add
mov
data16
insb
add
hlt
xchg
add
lret
out
add
mov
add
jae
mov
add
push
in
pop
adcl
lea
pop
ret
push
shl
shr
rol
pop
mov
push
lea
push
push
push
lea
push
call
add
repnz
add
xchg
xchg
fsts
add
add
xchg
repnz
rol
lret
add
add
lret
add
std
jp
jge
pop
lods
add
imul
lret
mov
add
roll
movsb
add
add
hlt
lods
push
sahf
push
into
mov
lea
pop
add
push
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
out
cmpsb
rolb
add
pusha
push
add
hlt
jae
adcl
data16
add
add
mov
mov
add
outsl
pushf
stos
jmp
add
mov
test
cmc
aam
jns
addr16
pop
fldl
push
xchg
add
add
add
mov
jb
stos
mov
add
add
imul
add
pop
pop
pop
mov
push
lea
lea
inc
pop
push
push
rol
not
add
pop
call
xor
pop
push
push
push
lea
push
push
push
push
push
call
jae
fsubp
imul
add
leave
data16
add
mov
test
add
push
movsb
mov
add
shll
pop
std
notb
mov
mov
mov
xchg
js
add
add
loopne
test
mov
pop
fcmovnu
fwait
mov
mov
hlt
mov
cmc
add
rorl
pop
pop
push
lea
push
lea
push
push
push
call
pop
add
add
pop
jnp
add
add
pop
jmp
add
loopne
add
add
add
out
add
insb
xchg
pop
add
add
add
add
imul
jge
add
roll
add
push
add
gs
aad
out
add
add
cmpsb
push
lret
popf
aad
roll
mov
sar
fwait
xchg
add
pop
pop
pop
push
push
push
call
scas
add
mov
add
insb
gs
lcall
push
add
push
data16
loop
fstps
testb
add
insb
add
add
movb
add
mov
fbstp
ljmp
add
mov
lcall
iret
xchg
in
add
mov
mov
lea
pop
pop
leave
ret
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
fwait
repnz
add
std
push
mov
add
add
cmpsl
nop
add
mov
add
sti
add
add
xchg
outsl
add
add
cmpl
mov
mov
mov
pop
mov
in
stos
aad
add
add
add
ret
jbe
add
bound
test
jnp
jle
add
sub
push
push
push
push
lea
push
call
add
add
call
add
xchg
add
add
add
xchg
mov
ror
mov
add
add
mov
add
movsl
add
rcrb
add
iret
cli
add
add
add
lds
push
add
mov
add
mov
lea
pop
mov
add
push
push
push
call
add
mov
pop
js
add
xchg
jns
lea
adcb
add
addr16
pop
roll
mov
add
jo
push
stos
add
stc
loop
xchg
jge
add
add
jecxz
add
lret
mov
je
jle
test
xchg
add
push
push
popa
add
cmc
ljmp
add
fsubl
add
pop
xchg
add
mov
cmpsb
jp
addb
cld
lea
pop
push
push
lea
push
call
orb
mov
rclb
in
push
icebp
mov
cwtl
add
data16
add
jecxz
in
add
mov
add
add
pop
add
sarb
add
pop
add
mov
jno
add
add
mov
add
popa
push
mov
les
push
sub
sub
pop
push
mov
push
push
push
push
push
push
push
call
sahf
scas
add
xchg
jp
sti
mov
gs
add
pop
mov
add
cmpsl
add
add
add
fwait
lods
out
add
jae
add
popa
jmp
xlat
mov
arpl
add
rcrl
add
mov
add
add
add
push
gs
out
add
pop
add
mov
add
add
add
rcr
jno
mov
pop
pop
lea
push
push
push
push
push
push
push
push
push
call
add
add
pop
adcl
mov
pop
add
pop
loop
add
xchg
test
add
lcall
cmpsl
push
add
cld
add
add
push
movsl
fstpl
add
cmc
add
lahf
add
add
push
xchg
add
add
xchg
add
shl
xchg
add
add
mov
pop
jecxz
mov
mov
lea
pop
sub
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
out
pop
mov
test
ret
add
jns
push
add
fwait
loop
cltd
mov
add
ret
add
loopne
test
jns
add
aam
popf
addr16
not
add
int3
popf
push
subl
shlb
add
je
add
int3
out
fiaddl
pop
mov
into
addl
into
add
xchg
add
mov
lea
pop
mov
push
push
lea
push
call
mov
add
jge
test
add
add
test
lret
fdivrs
xchg
jecxz
mov
cltd
mov
add
addl
out
filds
je
adcb
popa
int3
add
cltd
xchg
fwait
add
add
add
xchg
add
cmpsl
add
add
add
mov
mov
xlat
cwtl
xchg
add
test
push
add
fldl
add
in
cli
int
mov
hlt
lea
pop
shr
add
push
push
push
push
push
push
push
push
call
add
addb
mov
add
xchg
fiadds
add
cltd
loopne
pop
push
in
add
add
add
add
mov
roll
pusha
mov
pusha
stos
add
lahf
mov
movb
jmp
lret
xchg
add
add
push
fs
add
jmp
add
jp
mov
mov
lea
pop
mov
push
dec
inc
pop
add
push
xor
sub
pop
pushl
push
lea
push
push
call
sarb
mov
mov
ja
cwtl
pop
add
xor
add
add
add
pushf
jle
fildl
add
cmc
pusha
int
insb
in
add
add
lds
loopne
add
mov
add
xlat
add
add
roll
mov
add
add
repnz
bound
popl
mov
add
push
push
push
call
add
cmpsl
lret
mov
arpl
stos
data16
imul
enter
add
push
mov
add
add
mov
add
test
hlt
pop
les
jne
mov
add
add
mov
cld
lods
rcl
add
addb
add
test
jl
add
add
cmpsl
pop
pushf
shl
add
mov
xchg
add
outsl
rcr
add
lret
pushf
lret
scas
mov
lea
pop
xor
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
lds
idivb
add
fiadds
stc
add
push
mov
jne
add
push
add
add
mov
je
mov
mov
add
fiaddl
add
jmp
insb
scas
jecxz
in
loope
add
pop
add
lock
add
add
add
jmp
add
popa
add
leave
add
pop
ja
int
adcl
mov
add
xor
push
ror
dec
inc
not
pop
call
add
push
push
push
push
push
push
push
push
call
add
add
rolb
pop
add
add
add
ljmp
add
jge
loope
xchg
add
add
mov
jnp
add
stos
fists
jae
clc
jle
add
neg
mov
loopne
add
iret
iret
cli
pushf
fisubs
add
jb
add
xchg
add
xchg
add
add
add
mov
lea
pop
nop
nop
push
sub
sub
shl
pop
cmp
je
push
sub
ror
pop
nop
push
push
push
push
call
movsl
add
add
add
mov
add
addb
je
jns
mov
add
add
mov
add
add
add
pop
mov
stos
fwait
pop
add
roll
add
push
add
repnz
add
add
xchg
lock
jb
add
lods
add
add
push
add
add
cmp
mov
jae
add
loop
mov
lea
pop
nop
push
push
push
push
push
push
call
add
add
mov
je
fiadds
add
add
pop
nop
call
add
lods
enter
add
push
test
into
pop
jl
cmpl
loop
cli
mov
mov
add
add
rclb
add
addr16
add
add
push
pusha
stos
in
add
data16
nop
push
lea
push
lea
push
push
push
push
push
push
push
call
cwtl
add
push
stc
popf
add
add
push
addb
in
add
xchg
fcom
loop
lods
add
fstp
add
xchg
add
add
int
loope
shrb
fiadds
xchg
les
add
add
lcall
add
add
loopne
scas
add
mov
fidivs
add
pop
add
mov
mov
lea
pop
nop
push
push
call
lcall
add
add
mov
out
add
add
mov
js
add
pop
add
push
fstpt
loopne
aam
mov
insb
add
add
add
pop
push
clc
add
add
add
enter
lahf
ljmp
cwtl
out
in
enter
sti
mov
pushf
push
repnz
jne
mov
add
test
pushf
pop
add
test
mov
lea
pop
cmp
jb
push
push
push
push
push
lea
push
lea
push
lea
push
call
imul
data16
add
insb
mov
mov
mov
stc
add
add
mov
mov
add
pop
fucomi
add
data16
jmp
lock
add
shll
out
aam
in
adcb
leave
mov
in
add
imul
add
and
shr
add
add
rorb
push
lea
push
lea
push
push
push
call
pop
fsubr
pop
add
mov
add
add
ja
sahf
imull
push
insb
add
add
cwtl
out
pop
push
outsl
add
lcall
add
add
jecxz
push
popf
mov
add
mov
stos
cld
xchg
jae
fwait
out
rolb
fdivrs
lock
jne
icebp
push
add
lods
jp
mov
jecxz
test
pusha
and
add
movzwl
push
sub
lea
xor
pop
mov
push
lea
push
push
lea
push
push
call
xchg
addr16
pop
cmpsb
movsl
add
cltd
mov
enter
test
mov
test
add
cwtl
add
incb
lahf
mov
cltd
fucom
add
add
add
add
add
hlt
xchg
cwtl
fidivrl
jp
movsl
add
add
data16
xlat
call
nop
add
cmpsl
insb
mov
lea
pop
add
mov
xor
push
ror
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
call
sub
xchg
add
addr16
sahf
add
aad
jmp
mov
pop
pop
xchg
scas
in
shl
jge
add
mov
add
xchg
mov
add
fiaddl
data16
fisttpl
mov
test
pop
fnstsw
xchg
add
ja
mov
add
add
fiadds
add
js
ljmp
mov
mov
mov
add
mov
lea
pop
shl
push
lea
sub
not
pop
xor
push
add
not
pop
shl
xor
shl
push
not
rol
pop
xor
mov
push
lea
push
push
push
push
push
call
add
add
pop
pop
add
popa
push
add
ja
add
add
add
add
xchg
add
jo
pop
add
mov
add
jl
repnz
add
add
mov
addr16
add
iret
cwtl
pushf
add
mov
incb
cmp
std
loopne
xchg
movsl
lret
data16
push
aad
add
mov
lea
pop
add
pop
pop
push
add
ror
sub
pop
pop
pop
leave
push
lea
push
lea
push
push
push
lea
push
push
call
les
les
add
push
add
in
jno
add
add
add
add
add
push
add
rcll
add
loope
mov
mov
ja
int
pop
add
add
mov
jmp
in
add
iret
push
mov
clc
data16
add
add
add
in
movsb
pop
je
in
add
stos
xchg
mov
pusha
sbb
ret
push
push
call
add
lret
rol
add
push
aam
icebp
mov
test
pop
popa
pop
fildll
mov
out
add
xchg
data16
rol
add
add
add
add
std
jle
frstor
push
jge
divl
pop
lret
add
add
stos
push
add
out
add
add
cld
mov
add
pusha
or
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
flds
lds
in
add
add
add
add
add
sbbl
rolb
fs
push
add
push
fsubs
imul
lea
add
add
add
jne
mov
add
jns
outsl
add
add
add
mov
data16
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
mov
js
out
jb
jae
ret
out
mov
mov
mov
add
mov
add
out
popa
lock
add
arpl
add
add
mov
add
mov
add
add
add
cwtd
jp
add
add
jmp
jb
cwtl
add
xchg
add
add
movsl
shl
add
add
pop
push
push
push
push
push
lea
push
push
push
call
movsl
add
xchg
out
add
jecxz
add
jb
add
ret
add
into
push
test
add
test
in
push
bound
sti
lcall
into
test
mov
xchg
fisttps
jl
icebp
xchg
add
push
add
lahf
mov
add
outsl
add
fwait
add
jnp
add
cltd
add
mov
lea
pop
mov
push
sub
sub
dec
pop
mov
push
pop
mov
test
je
push
lea
push
push
push
call
ret
pushf
lahf
add
add
jge
filds
cwtl
add
hlt
pop
add
add
in
jl
add
add
out
xchg
lds
stc
repnz
ja
add
xchg
add
mov
aad
fildl
out
pop
loop
add
stc
orb
mov
jp
pop
popf
jnp
int
add
mov
int
add
nop
mov
les
jno
push
push
call
add
flds
jno
fistpl
ret
add
loope
je
imul
repnz
add
add
add
xchg
add
data16
xchg
xchg
xchg
pop
add
push
std
add
ljmp
mov
jge
mov
xchg
lcall
popa
add
aad
fwait
add
bound
stc
cli
mov
js
in
mov
lea
pop
test
je
push
inc
add
pop
mov
mov
mov
push
sub
pop
inc
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
jns
add
push
push
lock
add
stos
into
jns
mov
cmpsb
mov
xchg
add
clc
add
popa
int
add
push
add
jmp
add
lock
test
add
add
popf
add
into
add
mov
jle
add
jno
leave
add
add
mov
in
jno
jo
add
add
add
ret
shrb
sub
rorb
test
add
add
xchg
mov
push
push
call
add
hlt
add
ja
jnp
cmpsl
stos
mov
add
movl
add
movsl
iret
fstp
out
add
lcall
imul
test
lahf
add
jmp
lcall
pop
mov
xchg
js
filds
jmp
add
add
add
add
pop
test
je
mov
push
lea
push
push
push
call
push
incb
test
imul
xchg
add
add
pop
mov
add
add
icebp
cld
add
pop
add
stc
lods
add
cmpsl
fnsave
add
mov
mov
mov
add
loope
add
insb
lcall
movsb
aad
lods
ficoml
call
mov
mov
add
mov
xchg
add
mov
movsb
add
pop
inc
push
push
call
int3
jnp
out
add
pusha
enter
movsb
les
test
add
add
jae
flds
int3
int3
add
fiadds
add
stos
fcmovu
les
fnsave
cmpsb
add
pusha
add
cltd
add
push
add
push
enter
fiaddl
add
add
mov
add
lret
add
add
pop
movl
mov
aam
bound
pop
cmp
je
push
sub
ror
pop
test
jne
xor
pop
push
push
lea
push
push
push
call
scas
add
add
mov
add
add
fbld
add
bound
icebp
add
cwtl
movsl
nop
add
ret
add
fisttpll
add
jl
add
mov
add
out
arpl
push
push
scas
mov
bound
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
fmul
add
call
cld
pop
add
out
jnp
jnp
cmpsl
pushf
cmpsl
jne
add
xchg
addb
add
mov
in
loopne
add
js
mov
add
arpl
pop
add
in
add
mov
add
fiaddl
mov
fwait
add
pop
jmp
add
lea
pop
pop
pop
push
push
push
call
push
xchg
icebp
fcoms
add
add
insb
fnstsw
add
leave
add
push
jbe
push
mov
ljmp
fwait
movsl
add
lahf
aad
mov
cmc
cmc
andb
int3
mov
cmpsl
pushf
add
jmp
sti
add
addl
out
mov
cli
add
jmp
add
loop
mov
mov
pop
mov
lea
pop
leave
push
shr
pop
ret
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
mull
mov
add
jo
add
lret
add
mov
xlat
in
sbb
sbbl
add
add
clc
jb
add
jle
mov
shll
add
sahf
scas
jmp
pop
pushf
stos
mov
add
les
popf
cltd
add
mov
insb
add
les
push
inc
cmp
jne
push
push
push
call
pop
mov
add
add
int
push
iret
testl
mull
add
nop
je
add
add
add
add
add
mov
add
xlat
add
add
add
test
adcl
mov
jl
pop
add
lret
mov
mov
add
add
roll
mov
pop
add
les
pop
lea
mov
push
push
push
push
call
add
ja
push
cwtl
add
out
testb
cwtl
add
add
xor
add
add
mov
add
in
jecxz
lea
xchg
lahf
jmp
add
pop
add
lods
imul
loopne
mov
mov
pop
mov
add
add
cld
lea
pop
test
je
mov
add
push
sub
add
pop
cmp
jne
mov
test
je
push
shl
shl
pop
mov
push
inc
inc
pop
add
cmp
je
jmp
push
push
call
lret
jmp
sti
enter
add
add
mov
jl
enter
add
mov
in
pop
pop
jae
jne
cld
loope
mov
add
test
add
mov
add
mov
jae
push
add
push
add
push
add
enter
add
add
add
add
xchg
arpl
mov
mov
push
ljmp
push
mov
lea
pop
xor
push
add
add
pop
pop
push
add
pop
pop
pop
pop
push
inc
sub
pop
leave
ret
lea
push
push
push
push
call
mov
add
add
pop
add
cld
out
mov
insb
test
arpl
popf
add
into
add
lcall
mov
add
pop
add
aam
xlat
shll
add
mov
push
in
test
add
mov
xlat
std
add
mov
add
add
int3
lea
pop
pop
pop
push
sub
dec
xor
add
pop
pop
push
push
push
push
lea
push
push
push
lea
push
call
rcll
rolb
add
cli
push
add
xchg
add
add
in
add
mov
cmpsb
add
int
add
js
addr16
mov
add
add
lock
push
enter
add
add
ljmp
pusha
add
pushf
rolb
add
jge
arpl
add
test
add
hlt
lea
pop
pop
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
add
mov
add
add
pushf
test
mov
loop
pop
enter
add
mov
jl
call
mov
hlt
add
xchg
add
mov
add
push
add
fs
add
jge
popf
add
xchg
imul
out
add
add
lock
add
add
sti
jns
leave
mov
lea
pop
leave
push
push
push
push
push
push
push
lea
push
push
push
call
fmul
lods
add
pop
mov
add
icebp
add
popa
loope
roll
add
mov
clc
mov
test
aam
xchg
outsl
jecxz
leave
rcrl
sahf
imul
jnp
mov
addl
push
gs
xchg
jb
add
mov
add
add
mov
ljmp
mov
lea
pop
ret
push
lea
push
push
push
call
pusha
test
mov
jp
cld
add
cmpsl
add
call
into
add
addb
add
mov
lret
add
stc
test
add
add
add
add
add
popa
fcmovbe
data16
mov
add
jbe
push
add
add
add
jle
fsts
testl
add
mov
or
in
aam
bound
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
test
adcl
add
idivl
ljmp
xchg
add
loop
rolb
int
add
fisttpll
jle
loope
add
lcall
pushf
mov
mov
add
mov
cli
xchg
jbe
out
ror
push
addb
lret
mov
lea
pop
pop
push
push
push
push
call
mov
call
add
add
add
add
rolb
add
shlb
iret
in
add
add
mov
pushf
add
push
pop
add
mov
mov
jae
mov
mov
int
add
cltd
fisubl
lahf
add
xchg
jb
not
outsl
ret
add
mov
lea
pop
pop
push
add
inc
pop
pop
pop
leave
push
push
call
add
jb
loop
mov
jecxz
andl
add
scas
add
xor
add
add
ret
scas
test
add
jo
ret
negl
add
stos
add
sahf
add
int3
fcoml
ljmp
addr16
jge
insb
add
jmp
add
add
mov
lea
pop
ret
rol
rol
push
rol
pop
xor
push
push
push
call
add
imul
add
add
adc
mov
add
add
mov
cmc
mov
add
add
add
mov
add
add
add
rorl
add
in
add
jne
jb
push
mov
xchg
jae
mov
mov
insb
mov
fisubrs
outsl
add
icebp
pusha
add
arpl
add
add
add
test
mov
lea
pop
inc
push
inc
inc
pop
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
add
sti
movsb
push
mov
sti
jb
mov
sti
dec
inc
mov
sti
movsb
shlb
sti
cmp
adc
push
xchg
repnz
mov
ja
push
add
and
pop
clc
pop
outsl
aas
stc
out
ss
xchg
int3
mov
jge
lods
xchg
cmpsl
rcrb
pop
xchg
fsubrl
insb
jb
sub
in
mov
mov
lods
xchg
inc
lret
jecxz
inc
mov
js
and
lods
jg
mov
cmc
jmp
ljmp
rcrl
sar
xchg
int3
add
xor
mov
and
into
sti
aad
xchg
jno
clc
sub
xor
pop
mov
sti
test
popa
popf
movsb
stos
add
push
pop
xor
mov
or
pop
jmp
or
mov
lock
lea
imul
das
js
mov
cmp
jecxz
and
inc
aaa
sbb
outsb
sub
lret
fs
adc
in
cmp
jl
pop
mov
cld
xchg
roll
and
test
popa
add
fadds
stos
call
sahf
adc
mov
xchg
bound
lods
xlat
dec
adc
and
sarb
mov
mov
dec
int
sbb
push
ja
sub
jp
mov
rorl
das
xor
cmpl
pop
testb
mov
mov
sub
sbb
out
inc
ret
subl
xchg
mov
jecxz
inc
or
lds
push
inc
mov
mov
mov
or
push
lret
xchg
jge
in
lods
mov
mov
mov
out
xor
repz
dec
mov
notl
std
cmp
cmp
dec
hlt
jns
test
cmp
or
pop
pop
repz
push
and
inc
xchg
aad
or
int3
aad
pop
insw
jb
clc
mov
popl
jnp
push
loopne
adc
cmp
inc
mov
movsb
in
cmp
inc
jae
pop
add
xchg
int
jns
dec
stos
cmp
push
xchg
sahf
cs
test
dec
test
sbb
je
mov
sbbb
xor
mov
pop
jle
fcomps
push
js
jecxz
xor
dec
mov
inc
addr16
lock
sub
int
loop
sbb
call
and
adc
cmc
add
out
in
add
imul
inc
rol
mov
ret
push
sbb
inc
aad
imul
push
or
sbbl
in
add
pop
lcall
jnp
rol
sarl
scas
add
leave
mov
jae
mov
jne
mov
jl
push
out
inc
or
push
or
and
scas
mov
push
out
std
sub
xchg
je
jnp
add
ss
stos
das
push
or
je
shll
cmp
add
fcmovbe
or
adcb
loope
xchg
xchg
cltd
test
insl
mov
cmc
cmp
jl
xchg
or
xchg
cmpsb
or
pop
repnz
sub
sbb
rcl
jae
test
sub
in
add
and
sub
and
ss
lret
xchg
addr16
xchg
xchg
mov
sub
arpl
popa
and
rcll
jo
lods
mov
xchg
loop
in
aam
ret
adc
call
jne
in
dec
jo
fdivrl
push
xchg
push
adc
rep
fldenv
bound
push
aas
nop
mov
sbb
test
xchg
jge
gs
inc
test
jae
pop
or
xchg
es
pushf
fidivrl
pop
jmp
pop
sbb
jb
xchg
incl
xchg
mov
or
popf
pushf
jbe
ror
sub
jne
lret
fmul
mov
push
ret
negl
ss
jne
inc
pop
inc
test
sbb
jns
xchg
xor
mov
cmp
push
xor
dec
in
xor
cmpsl
mov
and
dec
mov
and
in
cmp
sbb
movsl
adc
and
cmp
jno
adc
xchg
mov
popa
xchg
xor
and
pop
push
dec
jmp
sub
pushf
pop
jg
loope
cmpsl
adcl
mov
xchg
fisttps
add
cwtl
push
stc
pusha
movsl
mov
addr16
inc
movb
fmull
inc
cmp
xchg
arpl
lahf
adc
imul
adc
sbb
inc
adcb
jecxz
dec
cmp
je
cmovno
pop
mov
nop
fisttpl
lret
cld
movsl
fistl
bnd
ljmp
pop
pushl
xor
push
sub
pushl
aam
aas
sbb
fdivrl
adc
in
pop
loopne
or
inc
jae
arpl
and
les
mov
push
in
js
push
mov
xchg
mov
jg
ficoml
jmp
ss
loopne
xchg
shl
jecxz
mov
xor
stos
enter
jl
loope
lcall
jbe
call
cmpsb
inc
js
js
sub
shll
shrb
iret
test
imul
out
cmp
dec
jp
test
fbstp
pop
inc
bound
pop
mov
sub
dec
int
cvtps2pd
cmpsl
mov
mov
fmulp
or
call
lock
mov
ret
repz
xor
out
addr16
into
cmpsb
mov
mov
xchg
shl
andb
decl
add
xchg
cmp
push
xchg
inc
cmpsl
and
lods
sub
jp
cmp
pop
sbb
add
fs
mov
and
nop
inc
inc
pop
lods
mov
xlat
xor
movsb
cmc
test
mov
push
sbb
xchg
shll
push
xchg
inc
mov
xchg
mov
inc
fsts
sar
or
in
inc
aam
mov
fcoms
mov
lds
movsb
insb
cltd
lret
sarl
cmpsb
aad
fwait
test
test
sbb
nop
test
lcall
pushf
fstps
iret
insl
add
jmp
ds
dec
pop
andl
push
cmp
out
push
aam
in
xchg
test
lds
jne
or
jl
mov
cmovne
add
sbb
aad
lcall
rcl
ds
xlat
pop
cmpsb
rorb
push
mov
adc
inc
inc
call
roll
or
cmp
jae
mov
add
sbb
xchg
push
repz
fiadds
jae
push
out
adc
cmp
aam
or
pop
pushf
mov
sahf
cmp
and
sbb
sub
or
xchg
mov
js
mov
loope
fsubrl
cwtl
push
add
jb
aad
adc
fdivrs
aad
outsb
sbb
loop
lds
lret
adc
sub
push
lds
xchg
clc
xor
xchg
loope
lods
bound
popf
rorb
fdivrs
repz
mov
cmp
lock
cmpb
cmp
test
mov
ja
incb
dec
aad
mov
fadds
mov
push
push
mov
push
iret
lds
inc
out
push
inc
mov
jecxz
gs
loope
mov
lods
ljmp
addr16
fst
filds
test
ljmp
sbb
addl
fisubl
push
xchg
test
roll
hlt
insb
outsb
frstor
pop
pop
mull
cmp
jae
mov
xor
sbb
dec
test
in
loop
jne
pop
mov
mov
out
inc
aaa
mov
mov
test
sbb
lds
je
and
lret
test
fnstsw
rcrb
outsb
lcall
and
rcrl
mov
neg
dec
andl
and
jg
adc
out
push
orl
stos
std
adc
xor
stos
xchg
xchg
ss
vphaddubd
movsb
rcll
clc
lock
xchg
pop
or
mov
cmp
jl
sub
dec
adc
mov
push
pop
pop
adc
daa
jp
push
hlt
aam
and
mov
js
dec
adc
clc
xchg
cli
out
pop
mov
cmc
daa
test
add
mov
xchg
cmpb
in
repnz
lret
dec
test
cmp
call
inc
iret
jae
outsl
mov
stos
dec
dec
pop
sbb
aaa
cs
js
dec
sub
inc
sarb
jae
mov
lcall
cmpsl
jmp
arpl
enter
add
add
or
xor
pop
jnp
lods
mov
stos
cs
out
loop
add
es
leave
aam
adc
mov
repnz
in
jne
dec
xor
sub
inc
xor
test
pop
out
and
pop
sahf
iret
or
jmp
dec
jg
push
out
sti
fcomps
lods
sbb
push
cmpsl
jp
enter
je
arpl
mov
imul
jecxz
cmc
xorb
sbb
ljmp
addr16
dec
xor
cld
popf
fdivrp
xchg
inc
add
sub
cmc
aaa
xchg
dec
andb
movsl
sbb
or
negb
sub
dec
lret
and
add
outsl
sub
sub
iret
jbe
inc
enter
mov
fimuls
mov
shlb
andl
pop
cli
inc
pop
outsl
sub
dec
jl
pop
daa
data16
sti
mov
jb
push
pop
test
addr16
mov
or
xchg
lahf
adc
jnp
popa
pop
stos
xor
fisttps
inc
lock
roll
ja
sub
jae
and
cli
mov
dec
rcrb
mov
dec
sbb
sbb
idivl
addb
inc
mov
rcrl
in
pushl
push
jb
nop
xorl
add
sub
cltd
adc
xchg
push
in
fisubs
roll
push
mov
pop
mov
lods
icebp
lods
ret
orb
lock
gs
and
sbbb
jae
xchg
jae
shl
mov
xchg
sbb
and
inc
sbb
cmpsb
cld
cmpsl
or
xchg
sbb
pop
xlat
cld
jb
xlat
in
sub
out
lods
cmp
xchg
jmp
cli
stos
jnp
mov
xchg
testb
rorb
dec
or
decl
cs
aad
mov
lahf
push
add
fld
sub
sahf
bts
adc
jl
mov
ljmp
cld
xchg
jle
jecxz
ja
pop
hlt
xchg
std
cmp
notb
dec
negb
jge
adc
addl
lret
cmpsb
fs
stc
hlt
push
xlat
cmp
shrl
xchg
push
dec
imul
and
pop
add
cmp
sub
xchg
xchg
or
std
movsl
mov
sub
aas
loope
dec
mov
test
mov
mov
lret
bound
int
xchg
add
add
hlt
and
mov
adc
cmp
gs
jle
push
and
rcrl
jne
and
dec
rclb
popf
insl
je
or
out
sub
test
and
xor
int3
ljmp
dec
add
sub
jecxz
std
and
rorb
clc
pop
mov
negl
out
xor
sbb
notl
xor
dec
push
in
sbb
call
sub
cmc
lea
xorl
je
sbb
inc
push
mov
stos
mov
das
xor
sbb
inc
test
ffree
repnz
rcrl
mov
leave
jl
inc
repz
jb
xchg
mov
jns
sub
mov
sub
push
adc
xchg
dec
push
mov
mov
cmpsb
pop
lock
and
or
sbb
shlb
or
push
inc
cmpsb
jb
xlat
sbb
mov
fcoml
and
sar
dec
lret
clc
dec
pop
or
sub
mov
mov
fwait
mov
add
and
shll
push
pusha
jg
mov
pop
sub
icebp
push
lret
ljmp
gs
jp
or
aaa
ret
jbe
lret
xor
test
or
sub
push
aaa
jno
jnp
lds
and
aam
dec
das
outsl
mov
aaa
testb
repnz
lret
sbb
iret
fcmovbe
jecxz
outsb
mov
mov
pop
jl
xor
lods
fstpt
inc
ja
ficomps
cli
dec
mov
clc
test
push
push
push
jo
sub
and
scas
lods
or
xor
pop
lahf
xchg
lock
mov
push
std
lcall
cmp
mov
rcll
jg
and
fisttps
pop
aam
xchg
imul
ss
mov
xchg
sub
dec
push
lods
mov
xlat
and
lret
mov
jl
push
and
push
in
mov
cli
mov
pusha
mov
sahf
lahf
dec
popa
sub
jnp
adcb
stos
jns
mov
mov
pusha
mov
lods
bound
lret
adc
sbb
dec
subps
out
jp
sbb
cmc
ret
push
sub
mov
jo
mov
cmp
std
mov
lret
jo
mov
out
daa
jle
adc
mov
push
icebp
clc
popa
and
div
out
shll
leave
cmpsb
jbe
filds
xchg
fldenv
or
lret
xchg
aad
fimull
mov
daa
or
outsl
or
loop
xchg
push
inc
loop
mov
sub
push
ds
cmp
call
jmp
mov
xchg
and
push
sbb
fs
arpl
or
ja
xchg
jae
and
rcrb
pusha
sub
pop
decl
sub
jl
ret
mov
jno
inc
mov
push
push
add
pop
repnz
clc
and
out
mov
in
hlt
in
xlat
pop
in
cli
inc
pop
xor
icebp
xchg
enter
add
test
adc
not
sti
push
loop
gs
test
rclb
inc
and
xor
mov
out
mov
fwait
loopne
outsl
mov
call
cltd
jg
jg
xor
pop
or
or
cmc
into
and
into
jle
xor
dec
mov
in
bndstx
adc
push
pop
call
xchg
mov
dec
mov
outsl
orb
popf
adc
pop
or
mov
dec
stos
out
dec
xchg
cmp
loopne
mov
imul
xor
mov
inc
xchg
gs
call
imul
out
rolb
enter
frstor
mov
push
jge
xor
fnstsw
adc
jae
dec
xchg
cld
ret
imul
dec
aam
in
sar
mov
adc
jmp
insb
sbb
pop
int
aad
cs
push
js
jmp
xor
xchg
lea
push
bswap
into
pop
inc
lea
in
jb
mov
testl
sub
das
addb
jle
mov
add
inc
out
idiv
sub
mov
dec
sub
mov
cmpsl
roll
shll
in
imul
leave
das
jmp
out
add
fcmovnbe
jg
mov
and
jo
push
and
outsb
inc
sarb
shll
fsub
mov
lods
out
jns
jmp
addr16
pop
pop
pop
call
mov
jno
out
lods
loop
and
shlb
add
xchg
fcmovnu
xor
lock
enter
insb
mov
clc
popa
dec
mov
pop
rorl
sbb
push
and
subl
jg
xchg
mov
mov
cld
rcrl
punpckhwd
negl
pop
jnp
stos
add
aaa
test
loopne
xchg
push
pop
xchg
adc
xor
leave
pop
popa
sub
lret
imul
or
push
repz
fdivs
lea
jl
inc
or
lock
cmp
dec
cmpsb
jmp
fimull
cmp
aad
mov
mov
cltd
out
and
xor
aam
nop
cmc
pusha
fwait
and
mov
jae
daa
mov
or
push
push
sub
mov
lods
add
loopne
sbb
cmp
push
mov
pop
loopne
fwait
in
loop,pt
mov
jmp
lods
adc
sahf
shlb
rorl
cmp
add
jp
ret
pop
out
jmp
jmp
stos
jbe
xchg
inc
mov
popa
jmp
je
mov
ret
push
rcll
fucomi
outsb
inc
out
mov
add
nop
fidivrl
les
mov
movsl
dec
pop
mov
mov
lret
inc
adc
cmp
xor
xor
leave
adcl
pop
and
popf
hlt
cmp
pop
or
jmp
mov
and
jo
jp
pop
mov
xor
pop
inc
dec
imul
std
test
std
sbb
xor
sub
push
fcomps
lcall
fwait
stc
inc
repz
adc
pand
push
pop
loop
movsl
rolb
mov
xchg
dec
mov
adc
adc
xchg
sbb
pop
xor
lcall
adc
popa
mov
push
negb
mov
xor
test
dec
mov
aas
fistpll
or
xor
test
stos
sub
repnz
repz
stc
int
inc
call
les
jbe
in
or
sbb
push
sbb
jl
rcr
push
mov
mov
daa
ret
xor
jb
lds
xor
gs
call
test
in
outsb
inc
sub
jp
fistpl
aad
and
push
jno
das
or
out
lret
mov
and
push
or
mov
bound
pop
fisttpl
es
scas
pushf
add
push
inc
sub
rcrb
cmc
push
xchg
in
cltd
scas
dec
adc
xor
in
aas
cs
push
adc
mov
test
mov
xchg
sub
or
lods
jne
add
inc
cmpsl
scas
mov
cs
cmp
and
int
ja
cmp
xor
outsl
sbb
ud1
in
xor
cld
shlb
lret
into
xor
add
xor
insl
xor
xor
sbb
jecxz
sbb
bound
lods
jmp
jno
xchg
and
mov
xchg
jb
xor
insl
xchg
fmuls
or
adc
inc
pop
push
sbb
bound
push
jl
inc
push
repnz
xor
js
jae
popf
jne
ss
xor
mov
ret
cmpl
cltd
rclb
inc
and
shll
scas
repz
fisubrs
repnz
orl
cs
ds
idivb
or
sbbb
outsb
mov
scas
repz
push
xchg
das
or
dec
fcoml
or
jae
xchg
add
loopne
rorl
mov
out
jge
cwtl
sbb
jnp
dec
mov
ja
stos
js
mov
shlb
mov
add
arpl
imul
mov
add
pop
loope
fimuls
adc
adc
ret
mov
inc
cmp
mov
mov
das
and
and
xchg
call
xor
dec
sbb
enter
fs
in
sub
icebp
lcall
scas
rcrb
in
sbb
ljmp
test
daa
imul
adc
push
data16
cwtl
in
or
andnps
jb
lahf
mov
fisubrs
mov
dec
ja
and
push
inc
lcall
add
pop
nop
add
rolb
adc
adc
or
out
aas
xlat
dec
je
mov
dec
jne
lods
cli
dec
adc
cmp
int
mov
mov
xchg
lret
int3
push
popf
dec
andb
out
sysret
fisttps
cmp
lcall
cmpsb
mov
mov
cmp
jo
mov
xor
sarb
hlt
js
clc
and
sub
jo
stc
pop
js
aam
hlt
inc
push
sbb
leave
adc
ljmp
cmp
pop
insb
dec
fstpl
inc
sbb
mov
add
sub
pop
mov
xchg
xlat
or
lods
pop
into
push
stos
push
inc
stos
fildll
loop
cmp
dec
aas
sbb
addl
mov
xchg
cmpl
jbe
fxch
movsb
and
sahf
ret
mov
ror
bound
cwtl
push
xor
fidivrl
mov
xor
cli
ret
shrb
and
stc
xlat
jecxz
cmp
scas
mov
enter
push
cwtl
in
mov
fwait
scas
mulb
xor
mov
cmpsb
arpl
pop
jle
mov
call
int3
mov
mov
pusha
sarb
xchg
mov
mov
push
jns
sar
and
dec
xorb
cmc
add
mov
aam
mov
fs
ljmp
rorb
sbb
push
fsts
into
sbb
or
push
push
repnz
adc
aas
and
or
or
rcrb
cltd
inc
cld
fcmovnbe
ja
jne
mov
pop
jo
adc
int
pop
or
xor
inc
and
arpl
aas
cmp
jae
outsl
fcmovb
mov
mov
int
repnz
mov
push
adc
clc
lcall
cmp
dec
mov
sbb
push
lret
xor
mov
pop
out
sar
or
xor
mov
shlb
push
popa
jnp
sahf
daa
push
int3
xor
stos
insb
pop
dec
adc
sbb
in
ficoms
sar
xchg
cltd
push
loope
loop
and
mov
cmp
cs
iret
cltd
adc
scas
mov
mov
cmp
in
sub
sti
inc
ret
mov
mov
cs
loope
sbb
pushf
add
jae
mov
sbb
repnz
int
mov
daa
adc
mov
adc
adc
inc
cmp
xchg
ficomps
or
xor
dec
shlb
cs
cmc
or
dec
loopne
popa
mov
cmpl
aas
mov
enter
mov
test
lret
push
sbb
repz
mov
inc
repz
jp
jbe
pop
cltd
or
cwtl
dec
cmpsl
xchg
jbe
inc
adc
test
nop
loope
mov
mov
xchg
mov
scas
fimuls
insb
lds
jge
test
imul
mov
pop
sahf
dec
stc
push
mov
inc
ja
sub
adc
add
not
aaa
add
in
or
xchg
bound
popf
sbb
and
inc
fs
mov
fildl
pop
adc
leave
out
sub
cmp
inc
mov
jno
sub
movsb
or
pop
cli
test
adc
mov
push
ds
ret
cs
xlat
mov
mov
mov
out
pop
cmp
out
mov
gs
mov
mov
push
dec
jmp
push
sbb
add
jg
lock
imul
das
ds
dec
out
sti
pop
hlt
mov
cmp
xor
insb
dec
adc
xchg
mov
jecxz
popa
inc
mov
lahf
dec
das
ret
addr16
mov
push
stos
sbb
cmp
sub
xchg
mov
pop
nop
mov
pop
pop
out
mov
sub
and
rcll
push
aam
and
or
xchg
test
pop
andb
je
les
std
mov
or
scas
xlat
or
or
sbb
xor
repnz
and
add
fdivrp
lock
push
inc
into
adc
or
out
nop
push
jle
pop
adc
in
orl
or
sub
cmp
scas
es
cmc
fdivrs
add
pop
and
mov
daa
jecxz
fildll
push
cmp
pusha
add
adc
cld
adc
dec
adc
sub
addr16
and
daa
xchg
ja
outsb
sbb
fxch
push
xor
mov
jp
sbb
xchg
jae
pop
xor
push
and
cmp
mov
je
dec
sbb
cmp
lcall
aad
inc
jb
inc
jbe
lods
push
or
inc
mov
pop
lods
mov
pop
inc
in
cltd
stc
rclb
mov
iret
dec
cltd
je
js
and
sti
int
repnz
adc
test
cmp
in
lods
xor
mov
pop
data16
mov
loopne
sbb
adc
mov
adc
push
test
or
dec
mov
in
add
jge
xchg
push
fnstenv
xor
inc
out
std
mov
cmc
sub
mov
std
shr
dec
adc
jns
dec
hlt
rclb
lods
test
jle
add
fistl
cld
fimuls
inc
flds
xchg
add
pop
xchg
stos
sbb
xor
js
add
out
jnp
jb
mov
push
out
push
or
xlat
xchg
pop
xchg
scas
sarb
push
stos
fwait
into
sti
jp
insl
xchg
stos
repz
fnstcw
arpl
xor
dec
dec
lds
or
sbb
jns
xor
jo
sub
shrl
je
daa
sbb
push
jge
sub
lea
add
push
cmp
pop
and
mov
rol
dec
aam
or
xchg
mov
xlat
stc
jno
pop
or
insl
stos
out
and
fbstp
daa
lret
push
inc
insl
mov
pop
in
cmpsb
movsl
lds
xchg
and
arpl
loope
lcall
mov
lret
xor
mov
add
loope
fwait
int3
imul
mov
outsb
std
inc
pushf
xor
push
jnp
pop
ret
call
xor
nop
xchg
ss
shll
or
test
shl
inc
pop
loop
in
cwtl
iret
es
push
cmp
loopne
jae
jb
mov
push
js
jb
sbb
mov
das
or
jne
ret
xor
dec
in
repnz
cmc
xor
sbb
arpl
sub
sub
ret
es
mov
cld
es
xor
test
xchg
icebp
push
dec
popa
dec
cli
int
sbb
pop
cld
insl
adc
jmp
dec
mov
jmp
rcll
fwait
mov
and
ror
push
imul
lcall
xchg
xor
aas
and
cmp
lea
mov
xor
lods
cmp
mov
mov
dec
scas
fsts
and
ja
stos
cld
cmp
loope
push
sub
mov
push
pop
addr16
loop
pop
pop
in
es
add
lea
int
scas
bound
lret
ret
cwtl
or
jl
roll
mov
adc
jns
ljmp
ret
or
cmpl
or
mov
mov
dec
popa
aas
and
xchg
and
xchg
xchg
pop
adc
push
mov
enter
out
mov
nop
test
jmp
ss
sub
movups
sbb
ja
test
movsl
pop
loop
bound
neg
lcall
add
subl
jns
and
and
and
fs
mov
sbbb
fs
shrd
out
lods
cli
fsubrl
xchg
je
les
mov
pop
add
mov
cmpb
pusha
mov
in
shl
subl
sbb
and
test
das
lock
lods
dec
push
push
sbb
push
arpl
inc
cmpsb
movsl
lcall
cmpsb
sbb
repnz
test
in
add
mov
mov
movl
or
cs
cmp
stc
pop
sbb
or
aaa
mov
ret
cmc
sbb
flds
jmp
pop
clc
jmp
mov
ja
xchg
dec
test
ja
inc
mov
mov
jecxz
popf
adc
fisttpl
popa
ret
xlat
hlt
in
inc
rolb
insl
lods
fcmovnu
rcrl
call
cwtl
sub
xor
mov
mov
sub
pushf
adc
mov
dec
fcoml
xchg
stos
jmp
daa
xchg
lea
mov
mov
inc
stos
ficomps
in
sbb
mov
mov
fwait
or
les
test
push
lods
adc
shlb
pop
adc
adc
inc
pop
push
or
test
sarl
or
test
leave
sub
sub
sti
outsb
push
mov
xlat
inc
sbb
leave
iret
sub
mov
pop
outsl
lea
mov
sbb
dec
xlat
add
stos
loopne
movsb
add
or
mov
fstl
dec
pusha
in
ret
push
aaa
xor
mov
fisubrl
inc
sbb
or
sbb
in
sahf
cmc
movsb
push
cmp
andl
xlat
faddp
ret
dec
jo
push
imul
jns
mov
and
out
inc
pop
jb
dec
imul
push
hlt
jo
out
sbb
adc
xchg
xor
mulb
aaa
or
test
aas
push
jg
bound
mull
leave
xor
jmp
gs
lret
stc
and
and
movsl
ds
fs
jle
pop
mov
xor
aas
enter
add
cmc
adc
cmc
mov
pop
mov
in
cli
push
jg
mov
outsl
mov
into
sub
xor
xchg
aas
jns
out
mov
fwait
lahf
in
cmc
fucompp
mov
cmpsl
ret
pop
push
lea
call
inc
les
inc
or
pop
mov
pop
jle
and
mov
push
xchg
ljmp
pop
adc
out
xchg
icebp
add
test
insl
sub
pop
arpl
sub
jnp
cs
out
dec
mov
push
cmpsb
dec
sbb
push
pop
cmp
daa
aad
gs
ret
inc
imul
mov
sub
dec
mov
dec
inc
jecxz
repz
push
jns
cltd
and
mov
xor
mov
out
lds
mov
sbb
cld
dec
aaa
mov
xchg
ds
inc
mov
dec
lret
mov
add
push
cli
rorb
pop
mov
cmc
sbb
pop
sbb
sbb
pop
jl
cld
mov
cmpsl
sub
add
and
lods
pop
and
jmp
cmpsb
scas
push
dec
hlt
out
sub
leave
cld
iret
sub
ljmp
sub
mov
inc
jmp
ret
sub
pop
inc
or
and
pop
popa
stos
mov
and
push
add
add
xchg
inc
popf
icebp
std
cwtl
push
mov
roll
ss
push
stos
fs
inc
or
pop
ror
ret
mov
cmpsb
sub
or
out
pop
push
fsub
mull
scas
adc
inc
cmpsl
inc
mov
mov
cmp
inc
push
fadds
mov
ret
adc
push
dec
out
sbb
inc
pop
inc
insb
mov
scas
mov
ss
mov
mov
xor
mov
push
or
lea
pusha
iret
pushf
inc
jmp
in
movsb
pop
mov
loopne
push
or
cmp
shrb
xchg
scas
out
cmp
test
fisubs
fisttps
pop
jecxz
ja
jp
push
push
add
inc
sub
bound
data16
adc
xchg
repnz
cmc
pusha
push
pop
loopne
push
ljmp
call
lahf
xchg
iret
and
out
lret
or
dec
push
pop
das
jmp
mov
mov
jae
push
fs
sub
test
pop
xchg
jnp
adc
mov
lea
scas
pop
cmpsb
add
into
dec
leave
icebp
xor
mov
sahf
cmp
mov
and
aam
and
or
popa
lret
pop
addr16
arpl
in
cmp
ja
cs
jl
pop
jg
test
sub
adc
addr16
cmp
dec
adc
lods
pop
mov
xor
add
mov
cmp
inc
test
jnp
test
xchg
cli
xchg
jne
adc
fsubr
call
mov
sahf
inc
cmpsb
push
dec
jmp
mov
sub
and
jl
sbb
inc
add
dec
stos
repz
and
out
movl
mov
arpl
fdivs
aas
push
cs
xor
fsubrl
les
push
lods
mov
dec
daa
sub
inc
push
push
cmpsb
cmpsb
pushf
or
adc
test
enter
jne,pn
ret
add
inc
xchg
lcall
addr16
jae
pop
adc
push
add
cld
sbb
add
or
cmp
xlat
insl
icebp
mov
xchg
and
sahf
ss
cltd
int
xchg
mov
icebp
test
sbb
add
dec
dec
filds
and
daa
out
clc
ljmp
ljmp
test
add
lahf
sub
jbe
mov
int
jl
mov
jb
add
cld
add
pop
ds
push
imul
in
lea
lret
inc
dec
imul
push
loopne
and
mov
int
imul
jmp
xchg
lods
mov
adc
jmp
jb
cmp
icebp
add
or
neg
mov
roll
pop
mov
mov
and
int
pop
xchg
cmp
jmp
imul
outsb
push
xchg
cli
fistps
mov
jecxz
push
xor
and
fs
lods
pusha
out
xorl
sahf
mov
lock
arpl
ret
mov
repnz
outsb
xorl
cmpsl
call
lret
and
jns
mov
lods
adc
cmp
sub
movsb
ja
mov
push
sbb
movsb
jge
cmp
loopne
imul
lods
and
sbb
sub
or
sub
dec
rcrb
ja
push
xchg
out
mov
clc
mov
out
das
aas
cs
pop
inc
cmp
rclb
mov
outsb
es
pop
call
or
fsts
dec
mov
lock
ds
jo
out
xor
sub
sub
lret
call
adc
es
lret
aad
jno
dec
and
fdivl
xor
incl
pop
push
sbb
pop
in
out
fimull
mov
or
imul
not
mov
divl
daa
adc
inc
and
aam
mov
mov
inc
adc
rcrl
adc
std
and
sub
test
cmp
inc
push
inc
add
xchg
push
xlat
dec
lods
pmuludq
aad
pop
push
fsubr
pop
sbbb
test
popl
pop
sbb
sub
testb
outsl
and
xchg
mov
sti
xchg
lds
adc
int3
adc
or
shrl
push
jno
fidivl
leave
rcrl
mov
bound
sbb
xchg
rolb
or
inc
clc
inc
mov
negb
imul
adc
jle
je
xchg
adc
xor
or
fs
int
lea
jge
nop
push
ficomps
sub
push
mov
inc
pop
mov
lds
rorb
add
dec
mov
push
xchg
cmpb
or
int3
addr16
jbe
aaa
popf
dec
mov
js
sbb
out
xchg
pop
jb
jbe
loop
movsl
push
cmpsb
add
outsl
mov
outsb
mov
mov
ja
mov
xor
inc
mov
push
sub
push
ret
adc
or
in
addr16
sbb
xchg
pop
sub
and
and
adc
xchg
sbb
out
and
dec
cmp
sbb
popa
inc
sub
call
mov
movsb
push
and
mov
adc
xor
mov
outsb
adc
fnstsw
scas
in
mov
leave
fcom
insl
jmp
cmp
cmc
sbbl
ret
loope
out
in
imul
ljmp
inc
and
add
mov
fidivs
jg
aaa
repz
jmp
pop
push
dec
stos
aas
and
cmp
popf
jmp
dec
jg
mov
mov
rorl
stc
or
imul
call
nop
dec
or
jae
and
sti
les
inc
mov
push
mov
out
stos
fdivs
push
adc
fucomip
arpl
popf
ss
fildl
mov
add
push
push
daa
test
and
lods
arpl
xor
inc
jo
cwtl
mov
loop
mov
push
incb
xor
ds
jnp
or
insb
mov
lahf
fdivl
test
loope
aad
loop
cmp
notb
xchg
aad
jo
sbb
int3
rcrb
adc
enter
dec
mov
lahf
xchg
js
icebp
scas
dec
outsb
jmp
jmp
pmaxsw
jbe
sbb
popf
pop
movsb
notb
je
in
call
xchg
daa
js
mov
adc
adc
subps
xchg
inc
jne
and
in
dec
lds
arpl
dec
push
and
es
dec
or
and
daa
pop
sbb
cmpsl
mov
int3
in
in
inc
cmp
decl
push
pop
push
lods
pop
and
mov
xor
data16
dec
push
push
test
xchg
mov
push
ret
in
fs
bound
icebp
push
jg
cmp
push
mov
lret
call
insl
xor
lds
jecxz
addr16
daa
pop
int
rorb
cmp
sub
add
add
leave
mov
movsb
dec
sbb
cmc
aas
mov
jae
and
fucomp
int3
lahf
lret
lret
int
std
mov
dec
rolb
shr
cwtl
sbb
test
daa
mov
in
lods
mov
mov
mov
inc
jns
enter
or
push
dec
push
mov
cmp
jmp
sahf
je
jb
dec
and
leave
add
jb
lock
cmpsl
mov
sbb
int3
pop
cmp
and
xlat
dec
pop
adc
cli
cmc
pop
decl
mov
cmp
fnsave
xchg
adc
scas
rcrb
sbb
subb
sahf
mov
sti
mov
dec
call
in
adcb
pand
jae
negb
shrb
fimuls
jns
pushf
sarb
lahf
jg
inc
push
test
mov
sahf
add
xchg
dec
out
jns
pop
inc
adcb
add
mov
insb
ror
js
movsl
mov
xor
dec
pusha
jge
lock
xchg
mov
imul
divl
pop
mov
dec
adc
mov
sbb
leave
dec
pop
shrl
int3
cwtl
jns
push
in
into
fwait
or
jnp
fldcw
scas
pop
sub
xchg
mov
dec
mov
in
jbe
add
sbb
xchg
scas
pop
xor
subb
aam
adc
or
outsl
daa
xchg
enter
in
ss
mov
cmp
fs
mov
mov
sub
jmp
push
cmp
cmp
push
fcmovb
or
adc
mov
cmp
or
pop
sub
sahf
fdivr
fisubs
mov
loope
cmpw
loope
rorl
mov
outsl
mov
jmp
ror
add
mov
sbb
xor
pop
pop
loopne
shlb
push
cli
jle
jns
test
mov
lea
or
xchg
or
loopne
cmp
cmp
push
adc
mov
mov
pop
pusha
das
outsl
dec
mov
pop
fstps
jb
ret
je
and
rcll
add
arpl
lret
stos
adc
leave
and
mov
jne
jg
out
roll
push
pop
ds
dec
imul
mov
jne
mov
dec
mov
ljmp
test
shlb
adc
lcall
dec
aaa
dec
push
sub
jno
or
and
and
or
xor
cmpsb
mov
mov
or
arpl
xor
inc
movsb
int
or
stos
es
push
je
cmp
add
shrb
out
in
xchg
push
pop
imul
or
mov
push
aam
inc
pop
mov
mov
sbb
repz
inc
add
jmp
xor
mov
lret
mov
or
jecxz
mov
push
sbb
pop
cmp
xchg
fildll
mov
jns
xchg
int3
inc
sub
pop
aam
and
mov
xchg
mov
lock
dec
jp
dec
push
inc
setnp
popa
mov
es
arpl
and
jns
enter
scas
xor
adc
repz
rclb
out
pop
mov
out
jmp
fdivp
add
sub
in
add
gs
mov
les
sti
xchg
pop
xor
out
aaa
push
add
push
cmpsl
dec
add
pop
cwtl
mov
fld
pop
fucomi
lret
sub
addr16
xchg
and
outsb
sub
mov
jecxz
fisubrs
fnsave
adc
jo
dec
cwtl
add
cmpsl
jecxz
inc
mov
arpl
push
arpl
fcoml
push
push
insl
scas
iret
pop
dec
ds
les
les
cltd
scas
inc
jbe
xor
cmp
or
sub
push
adc
inc
adc
mov
out
ds
loope
cmp
dec
sbb
sbb
cwtl
mov
pop
push
inc
nop
push
pop
sub
repz
int3
ljmp
loopne
sub
icebp
outsb
popf
iret
insl
xchg
inc
dec
push
fisubl
fsubp
repnz
push
sbb
loopne
mov
or
lods
lock
ja
lods
xor
jno
adc
sub
inc
jbe
fimuls
mov
movsl
inc
jno
jno
cmp
nop
hlt
mov
mov
jecxz
pop
mov
insl
mov
gs
hlt
pop
mov
jo
fsubs
or
and
jl
jae
mov
ficomps
out
incb
and
inc
mov
push
outsb
ljmp
fld
pop
lcall
adc
push
adc
test
pop
sahf
xor
test
pop
popa
jle
and
aad
sub
xchg
mov
out
jp
int3
fnstsw
pop
and
outsb
ds
enter
mov
je
mov
icebp
xor
dec
jns
out
add
mov
daa
cmc
pop
mov
outsl
sbb
dec
movb
inc
mov
push
xchg
jbe
cmpsb
inc
shr
or
mov
addr16
fisttps
out
test
pop
jo
jno
lock
sub
ficomps
mov
jp
push
nop
int3
sub
out
stc
cmp
or
cmpl
sbb
and
out
ss
sbb
ds
mov
xchg
pop
xchg
add
mov
out
movsb
adc
sbb
and
gs
popa
bound
lock
or
mov
call
pop
jne
or
lcall
jns
stos
mov
adcl
sarb
loop
sbb
arpl
adc
leave
in
and
test
pop
mov
mov
or
mov
dec
lret
adc
nop
lods
mov
in
mov
jns
push
and
negb
jne
jle
gs
dec
clc
sbb
jo
pmuludq
push
sahf
or
jg
xchg
mov
pop
stos
aas
test
ds
nop
mov
inc
add
xchg
les
aad
int
mov
or
mov
comiss
xorb
inc
sub
inc
mov
add
test
in
testb
repz
repnz
fildl
cld
testb
and
pop
fsts
jmp
pop
out
xchg
add
rcrb
mov
movsb
fisubrs
int3
imul
dec
inc
mov
sti
lahf
fwait
iret
push
pop
lods
mov
sbb
data16
or
lds
mov
xchg
mov
fidivl
xchg
xchg
xchg
mov
push
cmp
insb
mov
push
stos
add
mov
or
fs
fwait
sarb
dec
sbb
shlb
loopne
repnz
bndstx
les
inc
xchg
mov
xchg
xor
mov
adc
dec
mov
cli
sti
arpl
adc
mov
or
xchg
fidivl
outsb
test
aaa
or
cmpsb
jae
or
lcall
mov
sub
mov
add
mov
push
lcall
xchg
ss
popf
movsb
xchg
pop
repz
lock
enter
hlt
fidivrl
dec
aas
enter
xchg
push
mov
sbb
scas
mov
jge
xchg
iret
repz
xchg
andl
lods
jnp
popa
sbbb
sbb
mov
adc
out
movsl
nop
std
cld
shlb
in
mov
pop
cmp
push
enter
fidivl
int
ds
and
sbb
cmpsb
mov
cmpsb
mov
fisttps
jecxz
mov
or
aam
cmp
push
jo
rorb
test
xchg
ss
adc
xchg
mov
push
sarl
and
adc
sub
stc
sbb
loop
xor
inc
mov
je
adc
mov
je
subb
push
rolb
push
pop
and
js
addr16
push
scas
call
dec
imul
es
push
mov
mov
scas
mov
mov
mov
daa
xchg
sbb
mov
in
add
mov
mov
xor
stos
outsl
pop
fnsave
jne
sahf
nop
jle
mov
outsb
cmp
imul
and
rorl
mov
aaa
jbe
lea
pushf
sbb
xchg
jmp
jecxz
xor
out
adc
popf
cmpl
fisubl
jnp
shll
dec
jle
push
fwait
out
adc
flds
hlt
mov
arpl
jnp
shl
add
cltd
bound
imul
hlt
fdivs
or
cwtl
out
in
and
add
fwait
xchg
andl
or
add
stos
xchg
lock
xchg
ret
adc
shll
dec
shl
cwtl
outsb
js
cmc
xchg
daa
add
hlt
jp
inc
pop
sbb
mov
in
sub
test
mov
mov
xchg
dec
and
ja
xchg
push
or
sbb
and
push
push
ja
rcr
das
jmp
inc
add
sub
xchg
dec
and
xchg
pop
idiv
fisubrl
adcl
loope
mov
mov
push
leave
pop
add
std
and
xchg
movsl
int
sub
push
es
bound
jae
or
fildll
pushf
xorb
out
lret
adc
cli
in
jo
out
xchg
loope
aam
call
jnp
mov
sub
lahf
xchg
jp
mov
inc
add
push
xchg
mov
cmc
insb
sbb
push
imul
test
mov
cwtl
pop
lods
lods
sti
mov
xchg
cli
mov
pop
out
push
xchg
aaa
fidivs
sbb
shll
dec
and
lret
add
sub
add
inc
or
leave
add
in
cmp
sbb
lret
or
mov
xchg
sarl
out
stc
insl
push
sub
push
mov
add
cmpsl
in
imul
jge
xchg
leave
mov
mov
mov
or
sub
lock
into
jae
xchg
jl
jle
clc
adc
or
push
jle
repz
jo
scas
mov
addr16
push
add
call
stc
xchg
inc
mov
mov
mov
jp
or
std
stos
ret
cli
or
hlt
repz
mov
outsl
sub
mov
lock
jg
ret
or
ds
pop
movl
leave
lods
add
sbb
cmp
mov
call
in
fsub
pop
sbbl
int
movsb
jge
xchg
sub
les
filds
fistpl
orl
fdiv
leave
outsb
cld
inc
lcall
stos
xor
push
js
cwtl
loop
test
enter
mov
lret
mov
jmp
imul
adc
inc
inc
dec
pop
divl
add
stos
cmp
lret
sbb
xchg
scas
push
jb
cmc
sbb
mov
loope
add
fucomi
in
call
mov
rcrl
movsl
mov
mov
or
push
pop
roll
dec
sbb
adc
inc
stos
insb
push
es
inc
aas
sbb
fcmovb
adc
sub
ret
popa
inc
enter
push
jne
or
sbb
ficoml
std
cmp
lahf
adc
or
loope
mov
sbb
add
adc
div
xchg
mov
cld
insl
test
mov
notb
daa
les
cmp
jbe
rolb
addl
enter
mov
add
xor
idivl
dec
dec
lcall
push
movsl
iret
je
rcrb
sub
lock
cli
addr16
loopne
push
push
cmc
sub
mov
xchg
fists
cmc
mov
scas
loop
test
cmpl
pop
js
stos
sub
push
or
popl
clc
mov
sub
adc
xor
jle
push
and
inc
push
fisubrl
inc
xchg
and
xlat
sahf
pop
addb
sbb
ds
adc
cmpsb
push
and
dec
mov
dec
gs
mov
pushf
insb
insl
lret
jmp
cld
das
jecxz
mov
jmp
pop
add
push
stos
test
ljmp
sbb
xchg
or
push
add
push
pushf
gs
jbe
popl
push
std
jmp
out
inc
xor
loopne
mov
push
jle
lcall
shll
outsb
sub
dec
ret
aas
iret
lods
pop
dec
mov
std
sarb
xchg
in
mov
lahf
push
stos
scas
mov
ljmp
jns
mov
fndisi(8087
push
cmpb
push
into
nop
loop
gs
ret
adc
cli
shlb
data16
ja
bound
sahf
mov
mov
mov
dec
out
add
iret
and
xchg
push
sbb
pusha
lds
faddl
ret
subl
cmp
jbe
and
mov
or
insl
nop
mov
sbb
jo
dec
mov
dec
jae
xchg
push
mov
add
in
mov
sahf
mov
push
popa
adc
push
shr
pushf
dec
pushf
andl
adc
jo
mov
cmp
fcmovnbe
cmp
popf
imul
in
lds
inc
cmc
data16
pop
mov
push
out
test
push
cmp
pop
xlat
pop
fs
sub
pop
xor
jl
or
sbb
lods
dec
mov
add
loope
jecxz
dec
push
xchg
out
sbb
and
sub
add
xor
mov
adc
loope
jae
fnstsw
adc
adc
pusha
adc
js
pusha
stc
cld
inc
cld
les
aad
mov
mov
das
cmp
negl
pop
xor
addb
cs
insb
inc
loopne
test
mov
mov
jp
ret
test
data16
and
push
jnp
mov
call
aad
lret
aam
lea
cwtl
imul
cmpsb
lock
jmp
int
mov
dec
ficompl
imul
daa
cwtl
cmp
mov
pop
jo
push
add
mov
mov
mov
outsb
enter
in
pusha
int
jno
pop
dec
pop
loope
loop
and
mov
pop
mov
add
mov
sti
cmp
push
jb
and
fwait
push
incl
test
fidivl
orb
jno
pop
dec
add
and
jno
sbb
mov
outsb
push
fucom
xchg
or
lods
xchg
pusha
xchg
and
jo
cmp
into
stos
or
dec
xor
call
xchg
cmp
adc
xchg
lock
lret
aad
aad
sbb
jbe
fistpll
mov
dec
pop
sbb
mov
clc
bound
cltd
enter
ds
outsb
mov
mov
add
sub
setl
dec
sub
lahf
jmp
cmpsb
shll
dec
data16
push
lret
pop
jp
or
adc
mov
dec
sub
and
lds
sahf
cmp
or
lret
cmp
nop
nop
push
add
repnz
fildll
jno
dec
xchg
lahf
mov
or
jo
pop
insl
sti
imul
mov
out
xor
clc
adcl
fcoms
shlb
into
aam
xchg
jo
out
rorl
push
adc
adc
xlat
fimull
aas
xchg
ficompl
jb
xlat
sahf
movsb
mov
das
pusha
rcrb
aam
jb
xor
inc
pop
push
push
mov
outsb
push
mov
dec
fisubl
movsb
mov
adc
neg
fs
pop
pop
insb
sahf
xor
sub
inc
stc
lret
fmuls
scas
xor
call
das
clc
pop
daa
mov
adc
mov
mov
int3
and
cmp
nop
adc
mov
fucomip
fiadds
fcmovnbe
loop
xchg
push
push
xlat
into
cltd
scas
and
rcl
mov
lret
jle
mov
cmpl
imulb
popf
loop
test
cwtl
or
jb
pop
pop
xor
mov
scas
addr16
aam
jb
sahf
xor
jg
popf
test
lcall
xchg
cltd
mov
push
dec
outsl
cmp
pop
dec
fstpl
cld
dec
jp
imul
inc
cwtl
pop
int
jg
ss
sub
and
ret
sbb
mov
lcall
mov
daa
xor
in
test
sub
xor
setb
sti
mov
or
xor
loopne
jnp
data16
inc
push
pop
mov
sub
add
xchg
aad
jecxz
and
push
ja
sbb
cmp
cld
xchg
dec
push
dec
mov
sub
inc
push
sub
cmp
and
mov
lds
lret
mov
js
daa
out
pop
out
movsb
jle
jo
and
pusha
sbb
or
sbb
lods
cmpsl
and
xorl
pop
test
inc
mov
mov
dec
popa
mov
inc
lcall
leave
adc
xchg
lret
add
test
lea
movsl
cmp
cld
sub
cmp
add
int
dec
in
xor
cld
test
mov
outsb
outsl
popf
dec
pop
sbb
or
pmaxub
mov
test
xor
into
outsl
or
leave
cmp
jne
mov
mov
push
cmc
adc
ret
sub
mov
les
cld
idivb
jne
in
sbb
push
adc
add
scas
movsb
hlt
js
pop
jo
push
scas
or
sbb
inc
push
adc
flds
testl
scas
fldcw
or
mov
cltd
pop
daa
push
xor
xchg
lret
sub
dec
fimuls
nop
cmp
jbe
es
xor
mov
arpl
je
sbb
xor
mov
nopl
test
dec
arpl
in
push
mov
jecxz
sbb
adc
pop
div
dec
ret
xchg
lds
cs
imul
repz
shlb
cmpsl
cmc
xchg
not
add
outsl
add
pop
lcall
inc
fisubs
or
sub
cmc
pop
cmpsb
and
mov
lea
xchg
or
lcall
dec
cmp
insb
and
sbb
out
mov
pushf
repz
mov
in
cmp
push
or
adc
xor
or
stos
in
push
fildll
into
addr16
cld
arpl
insl
inc
gs
push
cld
dec
lret
xchg
jne
mov
fs
loope
mov
xor
sub
jns
lcall
push
imul
fidivrs
sub
mov
and
ljmp
jl
lret
mov
and
andl
std
mov
xchg
ret
mov
sbb
mov
lods
mov
aam
and
jmp
adc
aaa
mov
sub
cmpsl
add
jmp
lea
sbb
enter
ja
inc
cmpsl
jbe
enter
enter
dec
add
negb
xchg
icebp
ljmpw
inc
cmp
cld
cmp
jb
imul
loopne
mov
pop
test
sbb
mov
jo
pop
flds
pop
cmpsl
and
dec
xorl
std
cmp
cmpsl
fistpll
push
mov
enter
push
scas
xchg
pmulhuw
leave
xor
xchg
mov
inc
and
fcompl
into
fsubl
dec
out
fstpl
ret
clc
dec
xor
mov
cmpsb
fisubs
sub
fcomps
mov
aam
and
stos
rcl
push
dec
xor
insb
inc
jns
test
xor
xchg
cmp
dec
ljmp
inc
int
sarl
in
enter
pop
test
sbb
adc
jg
dec
adc
dec
stos
mov
cmp
jp
jecxz
out
popa
sahf
or
imul
repnz
xor
push
fbld
shlb
sbb
mov
addl
in
sub
sbb
push
bound
out
jnp
aaa
jbe
cmp
lds
pop
mov
lea
je
add
dec
xchg
or
pop
sub
outsb
xchg
xchg
sbb
sbb
xchg
test
cmp
fwait
sbb
jo
xchg
into
lret
mov
into
sbb
sub
fdivl
mov
data16
incb
inc
xchg
cmp
das
maxps
inc
lea
mov
leave
mov
inc
push
push
insl
inc
fnstsw
xchg
mov
lods
push
jge
stos
xor
aaa
fwait
sbb
jo
mov
jle
lret
dec
addr16
sbb
mov
loop
and
scas
aad
stc
daa
jge
xor
call
push
je
cmpsl
xchg
lret
mov
jge
push
mov
in
add
xchg
in
popf
xchg
pop
or
push
sti
or
rol
enter
aas
xor
sbb
cmc
mov
xor
fimuls
fmulp
in
cmp
fwait
rolb
sub
pop
mov
or
inc
inc
xor
sub
jno
mov
add
push
stos
and
sahf
sahf
mov
loop
bound
arpl
dec
push
xor
aad
mov
hlt
cwtl
adc
ret
out
es
sub
dec
and
mov
mov
adc
mov
xchg
xor
test
adc
je
popf
mov
mov
test
repnz
inc
stc
inc
adc
lret
and
fiadds
xchg
cmp
enter
lock
js
inc
xor
fwait
adc
push
scas
loope
xchg
mov
sub
fs
das
mov
out
data16
xchg
fadd
bound
adc
ss
xchg
xchg
adcl
xchg
mov
fiadds
or
bound
addr16
xor
sbb
int3
mov
lcall
frstor
dec
ret
sub
mov
jno
out
fisttpll
add
sub
orl
pop
push
mov
std
mov
adc
and
adc
xchg
dec
lcall
out
loopne
je
popf
mov
push
xor
rorl
push
inc
cmc
inc
add
sub
mov
xchg
js
sarl
aas
test
fcmovnb
divps
in
xchg
inc
mov
pusha
push
and
add
into
das
cmpl
lock
adc
push
cmp
push
mov
jnp
adc
pop
out
inc
loop
and
xchg
imul
push
push
and
mov
out
insb
insb
pop
pop
xchg
cmp
mov
dec
xlat
adc
inc
push
addr16
fiaddl
sbb
dec
pop
bndstx
pusha
sub
push
pushf
push
add
cmp
int
xchg
orb
xor
std
and
repz
jecxz
jb
xchg
cmpsl
iret
push
dec
push
jnp
and
push
push
subb
xor
sub
xor
mov
or
push
pop
or
push
ss
mov
fldl
bound
jno
dec
nop
repnz
loopne
xor
je
mov
sub
cmp
js
push
cmp
addr16
lcall
mov
adc
cmp
fisttpll
add
jns
repz
xchg
pop
jl
jl
andb
xor
cltd
fmull
int3
fisttpll
pop
cmpsb
dec
adc
fsubrp
jnp,pt
aad
ss
pushf
add
arpl
test
in
mov
cltd
pusha
jge
and
push
mov
ret
xchg
cmp
jns
test
dec
xchg
sbb
pop
cld
stos
test
pusha
inc
test
stos
xchg
imul
cmp
sub
jle
adc
scas
fidivl
sub
push
sub
lcall
stos
imul
ljmp
mov
imul
jae
rclb
and
and
mov
inc
in
in
ljmp
sub
add
iret
mov
std
dec
sbb
insl
xor
in
inc
sub
push
xor
std
scas
test
icebp
andb
jecxz
sub
mov
and
or
mov
jp
leave
out
outsb
xor
mov
into
stos
pop
test
pop
or
repz
daa
cltd
mov
push
jne
xchg
vpunpckldq
push
fdivrp
mov
cwtl
icebp
sbb
outsl
fnstenv
adc
pop
addr16
loop
lcall
das
xchg
inc
pop
mov
outsb
add
add
sub
addr16
and
or
or
loop
cli
ret
nop
outsl
xor
adc
sbb
xor
movsb
sbb
sub
in
ljmp
fisubs
jne
sub
xor
mov
fildll
aas
int3
push
addr16
pop
add
pop
xchg
imul
sub
out
pop
push
popf
cwtl
movsl
mov
dec
fwait
mov
testb
ret
iret
loope
xchg
mov
ja
lock
jnp
xchg
out
add
and
push
and
mov
aaa
insb
jmp
std
scas
jno
xchg
mov
xorl
ret
mov
xchg
jb
int3
jecxz
arpl
jecxz
xlat
stos
loope
cltd
int3
repz
iret
xchg
push
fucomip
scas
mov
fldcw
mov
in
inc
and
xlat
cmp
shr
shrb
ret
movzbl
std
ret
add
push
jno
push
mov
mov
or
pop
lods
jle
add
sub
outsl
and
xchg
dec
fsubrl
sti
dec
mov
xchg
fwait
enter
idiv
jmp
cs
cmp
ret
call
push
and
add
je
inc
daa
aas
mov
jmp
fwait
mov
pop
loope
pop
es
movsb
dec
pop
bound
and
loopne,pt
cmc
adc
stc
fnstsw
sbb
jae
ss
cli
call
lock
sub
xor
mov
jns
fs
mov
adc
stos
or
addr16
pusha
adc
add
cmpl
jg
icebp
jl
out
lods
iret
mov
lret
loope
mov
sub
stos
jp
adc
push
or
push
and
sarb
inc
lea
jecxz
cltd
adc
test
inc
inc
push
inc
outsl
popl
das
mov
arpl
std
pop
push
pushw
loop
addr16
ljmp
ss
sub
add
add
xor
pop
fcomip
mov
mov
test
mov
lods
mov
nop
int
sbb
adc
mov
pop
add
cmpsb
cwtl
ret
iret
push
pop
jecxz
push
push
mov
jg
es
jb
cld
add
inc
cmp
movsb
xor
insb
in
cli
imul
lock
insl
comiss
xchg
xchg
xor
sub
inc
add
mov
cli
push
mov
pop
stos
aas
loope
addr16
pop
sbb
sar
aas
cmp
aas
out
dec
cmp
pop
pop
cltd
lcall
rclb
add
dec
lods
jo
frstor
cs
fbstp
mov
dec
add
dec
mov
xor
mov
movb
bound
inc
insb
fstpt
iret
lahf
mov
gs
mov
addr16
mov
cmc
gs
push
dec
sahf
or
mov
or
jge
test
ret
cmp
pop
fildll
push
cmc
in
xlat
xchg
or
lds
fs
push
jae
and
cmp
movsb
lock
jnp
fstl
add
mov
aaa
push
out
inc
leave
insb
sub
mov
adc
add
xlat
shlb
cs
pop
lock
icebp
loopne
aam
jg
sbbl
jmp
dec
dec
lods
dec
or
jle
fdivrl
lret
inc
ds
xor
daa
fistpll
sbb
push
lods
jbe
jl
cmp
bound
jp
add
sbb
xchg
lcall
lods
sub
cmc
cmp
dec
sbb
mov
mov
out
bound
pushf
ja
adcl
jo
xchg
mov
mov
cmp
cli
sbb
out
stos
ret
jnp
mov
mov
jmp
cmp
jbe
sbbl
cmpsb
aaa
shlb
cld
shl
mov
ret
lahf
xchg
mov
outsb
xor
cmp
sub
stos
fldt
pushf
ds
or
and
dec
push
outsl
push
rorb
dec
dec
je
ret
cmp
inc
adc
xchg
add
lock
adc
mull
add
push
jecxz
or
mov
or
sub
scas
cmpsb
xor
scas
outsl
aas
adc
jle
fistps
mov
iret
sbb
popf
imul
notl
insl
out
shlb
fisubs
addr16
jg
sti
mov
mov
mov
mov
loopne
xor
inc
sbb
pop
adc
out
sbb
mov
cmp
rolb
add
mov
add
shlb
popf
fwait
dec
int3
add
cmp
dec
outsl
mov
call
shrb
jne
pop
out
inc
pop
out
xlat
stos
test
and
jo
in
frstor
aaa
xlat
scas
cmp
test
adc
dec
nop
shll
xor
loop
sti
sub
inc
and
cwtl
xor
cmp
sbb
scas
fwait
add
sbb
js
int3
cwtl
inc
mov
jle
stc
sub
mov
sbb
mov
aaa
xchg
andl
int3
repnz
jb
jecxz
psubq
icebp
pop
insb
roll
adc
or
repz
add
ret
and
and
cltd
xchg
repnz
and
fldt
mov
in
add
ret
xchg
dec
dec
xor
out
leave
out
inc
cmpsb
push
mov
xor
fnstsw
iret
add
shl
test
popf
test
std
mulb
mov
loop
jae
xchg
inc
xorl
jne
stc
jmp
and
mov
push
push
in
xor
and
lods
jmp
lods
sub
sub
lret
jl
sbb
hlt
test
mov
rcr
ja
pop
sub
mov
mov
shlb
jg
add
arpl
dec
cld
dec
outsl
test
leave
or
cmp
push
xor
jns
pusha
pop
shlb
dec
rol
test
mov
out
inc
add
imul
jle
sub
mov
int3
or
rol
ret
lock
xchg
les
pushf
inc
stos
xchg
loope
ret
clc
ss
nop
dec
ljmp
ja
in
jb
lock
ficoml
jle
ds
je
sub
lahf
cmp
fbstp
jp
sub
pop
add
sub
and
mov
fisubs
cmp
cmp
cwtl
jle
rcll
jno
repz
mov
mov
scas
mov
fists
xor
mov
out
daa
jbe
sbb
iret
ret
and
add
xor
mov
cmpsl
orl
repnz
fldcw
push
push
push
test
adc
das
add
test
aad
rol
dec
out
stc
lret
imul
cltd
mov
pop
pushw
push
aaa
bound
cmp
cmp
ja
es
mov
int3
mov
xor
dec
loope
lods
add
and
push
sbb
mov
repnz
mov
xor
loop
cld
movsl
xchg
adc
out
das
jne
jae
in
cmp
js
push
jne
or
loopne
bnd
aad
inc
ficompl
out
xchg
or
pop
jmp
push
ss
jecxz
jge
sbb
pop
push
call
fs
mov
push
aaa
adc
inc
dec
loopne
lahf
fisttps
shl
mov
adc
jle
or
rclb
and
out
jg
dec
lods
insl
sahf
daa
push
sub
call
and
jg
xor
ss
fnstenv
sub
add
aad
inc
mov
lret
pop
mov
pop
mov
enter
mov
sub
enter
movsl
outsb
enter
or
arpl
mov
clc
decb
inc
out
in
pop
mov
sub
in
adc
jno
mov
and
mov
lahf
fwait
out
arpl
in
inc
mov
jecxz
push
subb
sbb
pop
jnp
sar
cmpsb
test
loopne
movsl
or
in
dec
sarb
inc
repnz
pusha
or
flds
fidivrl
lods
mov
leave
jl
dec
xor
les
push
ja
repz
lods
inc
movsl
cltd
xchg
inc
cli
or
lock
loop
cmp
inc
out
sbb
cmp
ljmp
jae
jns
push
dec
icebp
fistpl
jp
pop
mov
ds
rcrl
adc
enter
jno
cmp
xchg
xor
push
orb
push
mov
cmpl
xrelease
sub
es
shlb
inc
repnz
pop
pop
inc
xchg
out
cli
jecxz
arpl
cmc
sub
cmpsb
nop
daa
scas
pop
pusha
enter
aad
jl
and
pop
add
rorl
jo
mov
or
inc
iret
gs
xor
jbe
push
shrl
ror
rcrl
stos
lcall
mov
divl
cmp
xor
lret
mov
sub
xor
add
int3
mov
push
fwait
aad
add
mov
adcl
fstl
test
jb
jg
jge
out
lds
xchg
rcll
out
stc
inc
and
sarb
cmp
rcrl
inc
dec
and
or
test
or
outsb
lea
test
dec
xchg
xchg
scas
pop
xchg
mov
xor
ret
scas
scas
inc
sbb
movsl
lahf
test
lea
ljmp
inc
shlb
jecxz
xorb
loop
cmpsb
jbe
pop
adc
cmpsl
add
fistpl
out
fstpt
mov
cwtl
stc
divl
cmp
nop
outsl
push
cli
push
mov
inc
roll
cmc
ret
xchg
mov
add
stc
lea
push
rolb
cmpsb
push
inc
gs
mov
cltd
push
mov
cltd
rol
mov
decl
jmp
mov
adc
inc
xor
pop
xor
icebp
xchg
mov
in
push
fdivrs
xor
mov
aam
adc
bound
pop
lock
scas
add
addr16
cmc
sbb
and
mov
test
test
dec
frstor
dec
xor
xor
sbb
and
inc
int
jp
or
and
mov
sub
es
and
mov
hlt
dec
stos
sbb
or
dec
adc
shrl
mov
dec
mov
adc
xchg
sbb
negl
in
pop
insl
cmpsl
xor
mov
push
mov
push
jecxz
aaa
js
notw
movsl
pop
sub
loopne
and
sbb
ficompl
xor
outsl
adc
daa
shlb
aam
sbb
mov
icebp
xor
inc
stos
ret
lods
scas
stos
pop
inc
adc
inc
or
pop
push
in
call
test
ficoms
push
mov
pop
dec
mov
fs
and
shlb
in
cmp
inc
pop
shll
fistpl
and
jne
pusha
push
pop
inc
pop
hlt
ror
mov
and
or
xchg
test
jbe
jmp
xor
in
push
xchg
jp
sub
xor
mov
xchg
outsb
lods
inc
aam
push
mov
dec
mov
mov
push
adc
aas
xor
add
jg
fildll
ret
fsubs
xor
cmp
add
repz
jg
xchg
inc
jnp
and
xor
mov
pop
jge
and
or
call
inc
cmp
call
sarb
aam
cwtl
hlt
loopne
dec
aad
clc
pop
leave
lahf
in
repz
xor
inc
mov
in
fisttpll
arpl
les
enter
pushf
inc
adc
cltd
pop
xchg
add
js
out
mov
push
stos
mov
cmp
or
push
push
dec
mov
stc
pop
popa
cli
xor
mov
mov
shll
into
mov
fldenv
pop
push
stos
icebp
adc
in
imul
lret
dec
ret
and
push
int3
mov
ret
xlat
push
fsubl
jns
push
cmp
cmp
xlat
mov
mov
pop
loopne
push
jo
add
lods
pop
clc
pop
leave
fwait
pop
cmpsl
in
fcom
xchg
jmp
lahf
scas
lahf
outsl
sub
mov
xchg
shrb
adcb
or
jns
ja
dec
cwtl
or
jo
mov
fcmove
pop
dec
cltd
jle
xchg
mov
out
xchg
data16
rorb
out
push
add
or
mov
test
sbb
cmp
adc
push
in
push
sbb
xor
adc
rcrl
mov
push
jecxz
mov
in
ljmp
mov
js
push
popa
nop
add
lret
mov
mov
dec
rorb
imul
ljmp
jl
out
ret
push
sub
xor
sahf
cmp
lahf
ret
sbbb
dec
dec
incl
insb
outsb
bound
ss
inc
sti
in
iret
and
mov
fwait
jno
ljmp
jg
out
outsb
divl
movsl
xchg
sbb
sti
rorb
add
xorb
sbb
in
push
aaa
call
or
fisttpll
loope
lds
arpl
mov
jns
std
pop
lea
add
loopne
call
sub
inc
adc
pusha
aaa
inc
mov
dec
jnp
push
scas
aad
stc
in
cli
fs
add
push
ja
insb
xchg
mov
imulb
jo
into
test
xor
mov
sbb
xchg
scas
sbb
sarb
or
jb
movsl
in
out
xor
movsl
inc
lret
movsbl
mov
leave
and
leave
adc
bound
shrb
int
xorb
inc
xchg
xorl
sub
mov
add
lock
call
push
dec
mov
in
mov
xchg
add
push
aad
jbe
adc
jle
ficoml
sbb
cmp
cmc
shlb
add
lret
cwtl
filds
jle
les
andl
mov
jp
mov
psubw
inc
rcr
andl
andb
nop
and
popf
addb
pop
hlt
out
in
cmp
dec
push
xor
cltd
movsb
sbb
pusha
jb
cs
pushf
xchg
and
adc
adc
lcall
pop
pop
movsl
push
je
fs
mull
stos
jo
jbe
testl
adc
adc
or
pusha
mov
dec
aam
sbb
push
or
int3
cmpsb
pop
cmc
push
xor
xlat
xchg
pop
xor
in
mov
insb
loope
es
xor
shll
or
cltd
stc
dec
mov
int3
xchg
xchg
std
cmc
addr16
in
mov
dec
mov
adc
cli
lds
sarl
andl
push
mov
stos
cwtl
xor
pop
js
dec
outsb
push
nop
std
mov
data16
das
sbb
fnstcw
movsl
lahf
xor
add
or
sub
lret
lcall
ficompl
in
std
adc
sarl
sbb
mov
adc
dec
mov
es
xchg
xchg
rcll
sbb
inc
dec
sub
push
dec
fwait
mov
xchg
jge
sbb
mov
add
popa
ja
out
pop
sub
inc
mov
lock
repz
iret
sbb
mov
loope
push
lret
xchg
cmp
cmp
popa
shll
in
jo
gs
cmp
cmp
or
jo
cmpsl
or
jl
jo
sub
or
popl
push
xchg
jb
or
and
hlt
dec
cmpsl
pop
inc
imul
cmp
pop
lret
mov
push
adc
mov
mov
ds
fcomps
int
or
int
or
popa
cs
iret
cmp
adc
sub
push
cs
ret
dec
mulb
sbb
mov
adc
clc
inc
aad
pop
mov
outsb
imul
aad
insb
sbb
or
and
js
adc
ret
push
adc
xchg
hlt
lds
fcmovnb
xor
dec
pop
mov
out
imul
push
popf
xor
int3
cmp
cwtl
sti
jle
enter
dec
movsb
stos
push
jecxz
decb
nop
cld
orl
mov
int
cltd
mov
xorb
cwtl
cmp
jb
mov
mov
mov
ret
dec
inc
hlt
sub
pushf
mov
mov
fdivs
mov
int3
popl
movsb
inc
popf
inc
testl
movsl
mov
leave
lahf
js
mov
xor
mov
pop
xorb
mov
sahf
xor
lds
mov
adc
inc
xchg
leave
out
cmpsl
mov
filds
sbb
movups
sbb
sar
in
inc
mov
in
gs
cmc
das
cmc
inc
fcmovnbe
loop
ss
mov
mov
push
cwtl
jl
xor
sbb
sub
and
sar
imull
push
add
jb
xchg
add
outsl
daa
mov
arpl
lods
mov
jge
loop
outsl
lock
cmpl
xchg
xchg
xchg
sti
push
and
push
push
fistl
xor
inc
insl
pop
or
and
shlw
arpl
lcall
jae
sti
pop
mov
sti
xchg
fidivl
xchg
sti
or
aam
mov
int
mov
scas
push
add
js
insl
aam
sub
clc
mov
loop
push
das
insl
insb
dec
leave
das
sub
dec
sub
mov
rcrl
add
push
stc
mov
add
sarl
les
bound
sub
lods
out
adcb
icebp
sbb
inc
andb
mov
aam
xchg
je
jne
out
dec
fisubs
out
notb
or
jle
sub
dec
emms
pop
push
jb
sbb
adc
sahf
cmp
jb
stos
mov
vmovaps
cltd
stos
cmpsb
cmp
hlt
dec
pop
out
mov
aas
push
scas
aad
jb
sbb
mov
mov
fcmovnu
cltd
dec
into
cld
scas
jle
imul
jnp
push
pop
pusha
fnstenv
fcmovnu
fimuls
fistpll
fstl
rorl
movsb
and
pop
popa
pop
popf
fwait
ds
das
lcall
jns
mov
and
mov
cmp
jb
loopne
jne
movsl
loopne
sbb
pop
popf
cmp
icebp
std
inc
inc
sbb
punpckhdq
cmc
in
mov
pop
mov
test
leave
addr16
mulb
xchg
push
xadd
out
bound
mov
test
hlt
int3
inc
je
push
pop
imul
test
popa
addr16
mov
movsl
ja
push
bound
pop
test
cld
int
xor
add
mov
cwtl
test
arpl
sub
push
inc
pop
or
aas
mov
pop
aas
push
ret
sub
insl
in
lds
mov
gs
imul
jmp
and
mov
push
inc
inc
mov
adc
xor
scas
cmc
daa
lret
cmp
test
and
fbld
fldt
fcmovu
enter
sbb
scas
imul
aaa
dec
dec
dec
aaa
fstpt
jmp
in
pop
nop
inc
int3
cmpsl
out
mov
enter
mov
cs
xor
bound
movsb
pop
out
or
fcomip
in
mov
jg
test
mov
mov
xor
insl
fildll
aas
mov
xchg
outsb
lahf
jns
add
dec
jmp
mov
inc
jmp
repz
push
mov
fldl
fdivrs
push
bound
inc
fisttpl
jecxz
push
addr16
jno
negl
push
dec
dec
jne
fisttpl
mov
pop
add
in
cmp
cmp
hlt
xorb
mov
pop
fldcw
mov
xchg
shrb
adc
int
sbb
or
mov
inc
mov
testb
adc
pop
mov
je
ret
push
cmp
sub
cmp
mov
or
je
mov
loope
data16
int3
stos
clc
xor
sti
stos
fmull
mov
add
movsb
jae
scas
mov
mov
sbb
mov
ja
cmc
popf
mov
xlat
add
jp
and
cmp
hlt
stos
inc
ret
inc
fildl
bnd
mov
mov
pop
out
lcall
outsb
addb
fs
lds
out
and
je
mov
mov
jne
insb
out
jno
xor
dec
stos
mov
icebp
add
sub
hlt
das
fwait
cmpsl
icebp
mov
stos
inc
nop
and
cmp
lret
push
inc
imul
scas
js
inc
adc
mov
lods
dec
dec
dec
ret
xor
aad
sbb
enter
or
dec
jbe
mov
pop
cmp
pop
mov
popf
mov
cmc
inc
jnp
xchg
and
test
mov
cmc
push
sub
fcmove
sub
out
insl
and
movsl
andb
sub
fdivrl
cli
cld
jmp
in
jae
out
orb
pushf
addr16
sbb
outsb
adcl
movsl
sub
mov
test
inc
jnp
adc
data16
xor
push
iret
aaa
xor
inc
pop
xchg
adc
xor
lods
scas
iret
out
insl
jae
adc
out
lods
call
or
pop
pop
ds
mov
loop
sbb
pop
pusha
loopne
xchg
push
or
xchg
test
mov
stos
mov
jae
mov
rclb
iret
cmpsb
jle
push
cmp
dec
loop
into
aas
divb
jo
pop
les
enter
loope
sub
sbb
pop
push
jo
xor
cwtl
insb
rcr
push
jbe
push
push
sbb
icebp
mov
cmp
mov
pop
fisubrl
mov
les
cmp
flds
jle
xchg
jp
and
xor
movsb
aaa
dec
inc
mov
mov
or
xchg
sbbl
push
stc
jmp
or
push
movsb
dec
sbbb
and
add
ret
sti
sti
movsl
out
add
cmp
mov
lret
pop
sahf
mov
jno
sub
jae
popf
sbb
lcall
test
push
int3
dec
mov
adc
inc
or
inc
imul
cld
cmpsl
sti
test
and
jnp
les
mov
pop
test
stos
gs
lcall
das
jb
jb
bnd
xor
mov
fs
adc
dec
gs
mov
out
and
lods
mov
scas
rcrl
pushf
int3
push
jg
mov
dec
rol
sub
mov
shrl
jge
mov
addb
push
sub
sarb
cmp
cmc
js
xorb
xor
mov
xlat
dec
jne
lods
xorb
jb
fcomps
cltd
test
fnstenv
sub
cld
fldenv
or
outsl
mov
lret
jo
and
call
sub
sub
je
loope
das
jl
push
fldcw
sub
jecxz
jne
sub
adc
adc
push
add
icebp
fisubs
cmp
jnp
mov
sub
mov
mov
mov
xchg
scas
sbbl
ret
jl
out
dec
jae
mov
jg
jb
imul
loop
ja
int3
pop
xchg
inc
call
mov
push
push
sub
mov
cmp
mov
lock
xlat
jmp
push
stos
xchg
add
fisttpl
adc
cmp
je
pop
pop
pop
call
pop
xchg
ret
pop
rorl
push
jg
pop
lock
je
sub
cmpl
lods
sbb
mov
push
sub
push
or
sub
sub
jg
xchg
inc
imulb
mov
push
add
pop
mov
jl
rcrl
pop
shll
imul
sahf
cmp
int
out
ret
push
jmp
cld
stos
pop
pop
xchg
out
leave
stos
sbb
add
divb
pushf
push
popf
in
test
dec
or
cld
mov
in
cmpsl
mov
add
mov
mov
insb
dec
jl
frstor
or
mov
loope
fs
inc
incb
mov
and
xor
lahf
sarb
ficoms
sbb
pushf
push
mov
das
and
js
iret
inc
imul
mov
dec
push
sahf
out
mov
xchg
je
mov
fwait
adc
or
nop
mov
add
or
std
scas
dec
xlat
mov
dec
ret
popf
ret
pop
imull
imul
mov
shlb
cmp
fsubs
test
or
shrl
hlt
std
cmp
repz
movsl
pushf
adc
sbb
jb
mov
cmp
stos
inc
jmp
and
pop
daa
cmpsl
pop
lret
mov
inc
in
sub
xor
sub
add
dec
mov
ss
in
sbb
faddl
pop
and
dec
inc
lds
push
push
imulb
adc
push
rorb
ja
insb
sub
fsubrl
mov
mov
shrl
stos
mov
cmp
xor
ficomps
mov
clc
xchg
insb
xchg
or
scas
push
cld
cs
inc
lds
push
add
inc
mov
add
add
or
cltd
lods
xchg
out
mov
adc
jbe
push
sub
sbb
sub
data16
push
repnz
sub
mov
shll
test
add
mov
lods
dec
std
cmc
mov
pop
movsl
test
xchg
rclb
test
aam
or
mov
push
dec
lods
inc
or
call
leave
loopne
inc
out
xchg
fsts
arpl
cmp
mov
pop
fstl
lahf
jg
mov
cmpb
sbb
push
xor
mov
out
aam
and
xchg
and
and
and
mov
orl
cmp
imulb
movsb
push
jbe
xor
xor
mov
mov
je
into
dec
lds
das
cmc
popa
cmp
inc
xchg
test
loope
xor
sub
sub
mov
lret
xor
jge
aad
or
xchg
mov
lret
jae
dec
and
xchg
pop
sbb
xorl
sbb
sub
bound
jmp
push
jle
ss
lcall
ret
and
jle
popf
scas
lret
xchg
daa
mov
jbe
fstp
clc
mov
dec
ja
loopne
lock
scas
cltd
enter
pop
xchg
aaa
mov
mov
mov
out
or
test
mov
pop
test
pop
nop
dec
shll
into
out
and
aas
xor
push
ds
dec
jae
add
aam
jp
lods
lock
push
imul
fsubrs
adc
aad
movb
andl
ja
dec
pop
nop
test
pop
fs
jnp
repnz
imul
mov
sti
cmpsl
add
inc
cmp
adc
rorb
xor
xchg
in
push
or
fmulp
int
test
dec
popa
xor
in
sub
in
jg
sbb
rcrl
daa
mov
je
lahf
xchg
addr16
insb
in
add
outsb
adc
xor
repz
and
fisubs
jo
lcall
push
sbb
in
mov
xor
repnz
push
sarb
popa
adc
add
aam
cmpsl
or
sti
call
mov
mov
stc
sub
pop
loop
mov
adc
push
call
push
das
jae
jbe
pop
cmp
outsl
ljmp
filds
sub
aas
pop
loop
ret
inc
push
cmpsb
mov
popf
mov
push
out
mov
pop
pop
divl
pop
pop
cmp
xor
mov
adc
xor
scas
andl
in
xor
jg
pop
push
iret
test
or
add
daa
push
mov
push
arpl
fldenv
inc
xor
movsb
or
xchg
iret
mov
xor
enter
lods
int
sbb
arpl
fnstcw
mov
loopne
lahf
xlat
mov
mov
mov
cmpsb
aam
imul
add
gs
lret
ret
adc
fstpt
testb
movsb
sbb
out
mov
cmp
pop
dec
inc
jne
call
dec
jge
pop
adc
popf
or
and
repnz
in
jmp
int
jbe
cld
shll
dec
pop
sti
sbb
jmp
test
mov
inc
and
test
rcrb
adc
sbb
dec
add
leave
in
push
inc
or
xchg
aaa
lahf
pop
les
test
cs
sub
call
inc
sbb
mov
mov
jns
adc
icebp
stos
or
popa
or
les
lea
std
xchg
pop
into
mov
ffree
notb
dec
addr16
out
push
xchg
popa
cmpsb
mov
fnstcw
add
pop
adc
fdivp
jle
je
xchg
cwtl
jbe
jnp
ss
dec
aad
int
lds
cmp
test
mov
pop
test
ljmp
popf
es
ljmp
push
rorl
insl
mov
in
lea
jge
push
and
shlb
pop
sbb
add
popa
xchg
pop
mov
aas
pop
mov
mov
xchg
mov
push
jno
test
xor
dec
mov
push
mov
or
sahf
add
push
sahf
push
sahf
mov
mov
mov
ficomps
mov
xchg
stos
je
ret
insl
fstps
xor
daa
cmpl
test
mov
mov
sub
stos
or
mov
mov
popf
add
mov
adc
hlt
jle
and
sar
aad
dec
mov
sbb
out
or
inc
rclb
xor
arpl
dec
pop
sbb
mov
clc
pop
cs
mov
outsl
cmp
in
ret
adcl
xor
arpl
sbb
fistl
outsb
inc
mov
push
inc
shlb
cltd
mov
sbb
fcmovb
pop
jl
push
ret
sub
cmp
and
jns
sahf
rcrb
and
sbb
call
fisttpll
jns
sub
lea
xor
sarb
add
push
addr16
lods
and
adc
das
or
pop
movl
mov
add
jne
gs
fs
dec
std
movsl
bound
aas
test
fistps
inc
out
mov
push
lret
jbe
shl
in
push
xor
and
dec
adc
out
sbb
mov
sub
sbb
dec
pop
nop
inc
xchg
mov
orl
xor
jno
pop
cltd
fs
mov
daa
pop
stos
sbb
jae
mov
xor
shrl
adc
mov
test
mov
dec
dec
cwtl
add
loope
sub
aam
popa
out
int3
xchg
xor
sub
scas
aaa
lds
inc
and
enter
sahf
or
inc
xor
aaa
decl
pop
jbe
in
and
mov
dec
push
call
mov
test
sbbl
int3
pusha
in
mov
gs
push
cmp
into
jne
push
mov
sar
aaa
repz
pop
or
add
pushl
ss
iret
mov
jb
in
push
roll
and
dec
add
loop
xor
mov
add
loope
mov
pushf
cmp
adc
push
ret
scas
pop
dec
inc
fidivrl
xchg
or
push
inc
pop
hlt
mov
jg
inc
popa
scas
rol
jo
xchg
xchg
jmp
sarl
xor
outsb
lcall
dec
xchg
push
xor
jno
hlt
lods
push
ja
sbb
mov
rclb
xor
iret
or
xchg
stos
inc
pop
inc
push
dec
rcl
iret
mov
imul
mov
sub
push
arpl
cmp
push
sub
xchg
hlt
jns
mov
sbb
mov
dec
pop
push
cmp
pop
or
mov
inc
mov
mov
loop
out
xor
cmc
std
rol
loope
lea
cwtl
repz
lods
imul
in
jae
fs
xor
pop
loop
sbb
sub
and
sahf
negb
hlt
out
stc
xor
dec
add
fucomp
lret
sbb
pop
int
cmp
and
push
sbb
xchg
push
fstpt
stos
dec
test
insb
xchg
mov
iret
jae
leave
cmp
jl
rorb
mov
push
arpl
mov
repnz
push
repnz
push
in
push
mov
adc
shrb
or
xchg
xchg
ret
xchg
ljmp
ja
jle
popa
adc
enter
repnz
int3
ret
cmp
mov
pushf
sti
push
std
int3
dec
enter
dec
cmp
mov
in
lea
or
mov
lods
test
iret
scas
inc
lea
pop
rolb
mov
fisubrl
inc
push
mov
sti
xor
xor
pop
add
mov
iret
mov
fsubr
mov
pop
fdivrl
lret
cli
xchg
dec
mov
push
sbb
pusha
xor
push
jns
in
rcll
mov
or
fsubrl
adc
loopne
imul
and
sti
push
in
jo
mov
fmuls
mov
ret
bswap
in
jmp
mov
cltd
loop
jns
fisubrs
scas
dec
xchg
frstor
mov
lret
mov
outsl
aaa
inc
mov
mov
xchg
pushf
cmp
sub
clc
push
adc
int3
out
out
mov
mov
into
lds
addb
sub
fld
xchg
das
out
or
xor
das
outsb
pop
stc
sbbb
cld
add
xor
mov
les
sbb
aam
fdivrl
in
hlt
cmp
mov
sub
cmp
stos
int
pusha
sahf
xchg
setnp
push
adc
push
sti
sbb
addb
pop
dec
add
mov
int
imul
cmp
xor
in
adc
and
mov
xchg
pop
fucomi
add
mov
fidivrs
fsubl
or
sub
enter
add
sub
stos
and
dec
js
repz
mov
mov
cmc
in
fsubrl
xchg
adc
pusha
xor
pop
mov
mov
inc
test
cmp
lock
je
stos
insb
ja
cwtl
inc
popf
cmp
xchg
insb
lret
lahf
hlt
sub
and
mov
mov
loop
mov
sti
orb
pusha
stos
bnd
pushf
pop
aam
adc
pop
adc
aaa
add
or
xchg
push
cmc
cwtl
inc
jl
xchg
addr16
pushf
out
out
cld
adc
mov
subl
pop
aad
jno,pn
scas
jns
movsb
mov
dec
sub
sub
inc
hlt
popf
cmpsb
mov
or
push
mov
mov
arpl
ja
push
pop
in
mov
mov
stc
lahf
push
pop
jge
dec
scas
lds
cmc
les
inc
std
sub
add
add
cmc
popa
imull
dec
cmp
aaa
jns
xchg
jmp
fs
xor
xorl
fcompl
out
fbld
jbe
cmpsl
movsb
pop
jmp
jno
mov
push
inc
lods
jl
jno
pop
sti
ja
dec
push
cli
and
insl
pop
out
xor
leave
xchg
mov
xor
add
repz
lods
add
mov
push
mov
mov
out
xchg
mov
push
inc
lea
lcall
adcb
clc
xor
mov
ljmp
inc
push
ds
fidivs
ret
xor
je
fcom
call
sbbb
sub
stc
gs
xchg
loop
fldt
add
and
push
xchg
jae
push
mov
xor
fs
jnp
notl
mov
jns
sub
mov
les
inc
mov
les
out
or
add
cmp
cmpsb
mov
ud2
repnz
cmp
mov
mov
jae
fcmovb
pop
std
and
cmp
shrl
or
mov
mov
push
cmpb
in
add
movsb
jge
mov
and
movsl
lahf
inc
xor
mov
les
cli
stos
dec
pop
cltd
mov
pop
test
scas
stc
push
mov
fldl
cmp
adc
push
jmp
hlt
push
adc
stc
jle
jbe
rcrb
scas
cmpl
pop
out
or
dec
sbb
xor
stos
lods
lret
iret
fs
outsl
int3
jmp
pop
shr
mov
push
std
out
xorl
push
hlt
rcl
aad
pusha
pusha
cs
movsb
inc
jnp
out
mov
jg
mov
add
sub
push
imul
dec
jp
or
push
outsl
mov
xchg
sbb
xlat
or
jb
pusha
xchg
mov
fwait
ret
mov
sub
ljmp
cmc
inc
pop
loopne
jmp
aam
fistps
xor
filds
rclb
jo
push
in
push
fsubrl
lret
mov
jne
cld
iret
inc
sub
mov
cmp
jecxz
mov
sti
outsl
pop
mov
xorl
or
in
adc
bound
lcall
push
push
or
sbb
sbb
rcrl
sub
cmp
mov
aaa
jno
sub
int3
pop
cmc
ljmp
aaa
or
push
mov
push
xor
jp
mov
daa
fisubrs
scas
jnp
cmp
jo
jp
jmp
imul
and
mov
ret
in
movsb
add
mov
nop
stos
pop
xor
call
add
std
in
jmp
jge
inc
jp
repnz
popl
add
and
icebp
add
jne
xchg
sub
push
scas
mov
add
push
addl
mov
out
mov
fincstp
jl
and
mov
dec
sbb
dec
mov
add
push
xor
sbb
pxor
mov
mov
call
sbb
aam
es
pushf
jle
pushf
ret
hlt
das
gs
jmp
sbb
out
mov
cmc
imul
push
mov
xchg
lret
inc
cmp
loop
out
xchg
xor
push
leave
repnz
and
adc
xchg
ja
hlt
scas
pop
mov
sbb
stos
mov
jo
fwait
movsb
leave
inc
je
inc
mov
shll
add
pop
cmpsl
movsb
movsb
ret
dec
push
mov
dec
in
popf
dec
mov
push
or
sub
xor
incb
jecxz
pusha
push
stos
orb
add
das
mov
push
jo
push
and
movsb
jmp
fs
cmpsb
xor
jns
or
lret
insb
mov
mov
push
bound
test
xlat
sub
xchg
push
outsl
or
lret
cmpsl
sbb
js
pop
push
add
inc
xlat
mov
movsb
mov
push
xor
das
mov
mov
sbb
outsl
int
cmp
ret
dec
mov
outsl
sub
mov
leave
pop
mov
nop
push
test
xor
movsb
mov
data16
mov
pop
xor
add
aam
lock
mov
int3
or
fisttps
mov
mov
adc
jmp
push
hlt
push
mov
inc
scas
push
pop
les
aad
icebp
xchg
cmp
hlt
es
mov
popa
pushf
aas
lods
cmp
test
push
hlt
stos
mov
popa
fs
add
popa
andl
xor
rcr
ret
sub
sub
cmc
daa
mov
jne
into
jae
daa
sbb
dec
jb
jg
mov
pushf
add
jno
jmp
fs
subl
xchg
xor
fwait
mov
dec
cmpsb
retw
dec
gs
fwait
in
pop
das
test
insl
ss
jg
dec
mov
movsl
pusha
jns
ret
mov
dec
ds
loop
mov
int
inc
xor
xor
push
or
cmc
mov
inc
les
adc
mov
out
push
int
leave
pop
fisubrs
dec
into
in
jbe
cltd
push
mov
sub
mov
mov
push
push
push
adc
add
inc
sbb
mov
inc
sub
mov
xorl
lret
mov
cmpsb
pop
xchg
fsubs
pop
idivb
out
jp
mov
imul
or
and
jg
lock
arpl
jmp
les
test
xchg
shlb
add
mov
mov
std
and
sbb
mov
lret
lcall
cld
dec
jb
nop
popf
xchg
dec
push
xor
jbe
jmp
lret
xor
fsts
daa
imul
mov
jecxz
sahf
push
lds
add
cmpsl
movsl
lds
sub
scas
mov
ret
push
cmp
xor
shrl
orb
sub
out
xchg
adc
dec
aaa
or
out
push
push
mov
hlt
sbb
mov
push
push
cmp
inc
imul
or
push
pop
icebp
xor
aam
cmp
cmp
adcl
add
and
fdivs
outsb
jmp
in
mov
pop
cli
sub
jno
lcall
cmp
adc
jno
int
andl
cmp
sub
cmp
or
mov
rcrl
jnp
jmp
aas
pusha
jae
jnp
jno
cmp
sbb
jno
xchg
divb
pusha
leave
xor
push
add
gs
push
and
xor
jecxz
fdivr
test
lret
jecxz
sbb
outsb
loope
divl
ret
cmp
push
cmp
ds
cld
sar
out
xor
fistpl
pop
test
lret
mov
or
pop
lret
dec
iret
xchg
sti
pop
cmp
ss
adc
mov
jne
jo
cmpsl
xchg
vandps
inc
jnp
lock
lods
sbb
jle
mov
sub
call
cli
xor
sub
das
mov
sahf
dec
sbb
adc
and
ss
in
scas
mov
daa
stc
jge
sbb
mov
or
mov
subl
cld
std
pop
imul
imul
lds
mov
mov
adc
loope
push
mov
jg
dec
sahf
or
rcrb
popa
ja
pop
sub
lods
adc
mov
push
lods
sub
minps
movsl
sbb
daa
pop
rcrl
xchg
adc
cmp
xor
xchg
test
pushf
jno
data16
or
imul
insb
arpl
adc
xor
sbb
jle
bound
sub
pop
ja
adc
lret
insb
adc
sub
mov
mov
negl
lret
out
sub
cs
loop
test
push
cmpsb
ja
rorb
mov
cmpsl
loop
mov
in
sahf
mov
push
sub
pop
pusha
mov
stos
push
mov
fnstenv
or
int3
scas
pop
xchg
pop
add
and
mov
pushf
in
xchg
mov
push
subl
in
adc
pop
sahf
fcompl
mov
clc
push
fwait
in
adc
jl
sub
inc
xor
cwtl
push
cltd
jb
fisubrs
out
es
pusha
cmp
cmp
in
aad
and
push
sbb
cmc
call
xchg
xor
repz
aas
jns
or
mov
lea
pop
push
push
incb
test
push
lods
cmp
ret
pop
and
decb
outsb
stos
in
aam
mov
mov
push
and
das
ret
push
push
xchg
outsb
clc
and
pop
dec
jno
out
sub
icebp
or
push
stos
fs
adc
pop
jo
cli
imull
hlt
mov
adc
sub
jmp
add
outsl
jl
inc
push
cmp
adc
mov
icebp
pushf
jae
pop
mov
or
mov
ss
inc
pushf
test
add
xor
or
pop
cli
push
imull
inc
movsl
fisttpll
test
imul
and
nop
and
jno
seto
pushf
mov
push
popa
xlat
mov
outsl
xchg
mov
fisubrl
push
inc
sbb
shl
adc
pop
sub
push
or
cmpb
jmp
xchg
stc
cli
cmp
dec
jp
rol
xor
mov
mov
mov
push
insl
add
aam
imul
sahf
push
xor
xor
xlat
mov
popa
notb
insl
lods
cmp
or
mov
dec
ds
xor
push
sub
pop
ljmpw
rol
idiv
and
sbb
out
nop
add
mov
addr16
movsl
sti
mov
lret
xchg
sub
pushf
fincstp
jl
cltd
sahf
repz
pushf
jmp
jbe
add
push
fdivrs
inc
jb
push
pusha
sub
or
pop
adc
pop
insb
ja
jb
jnp
leave
sbb
into
leave
ret
out
hlt
es
popa
mov
sahf
push
sbb
jp
mov
insb
pop
neg
cltd
cmp
sahf
data16
xchg
sub
and
inc
inc
mov
mov
inc
fcoml
mov
mov
popf
and
idivb
pop
addb
inc
lods
sbb
adc
call
push
sti
ret
addr16
mov
dec
dec
and
call
clc
pusha
cmp
cwtl
mov
sbb
std
dec
xorb
sahf
addr16
loopne
jecxz
xchg
js
cli
scas
adc
lcall
xor
inc
loopne
in
subb
mov
movsl
pusha
xor
mov
pop
xor
sti
into
fbld
mov
out
mov
pop
fisttps
and
lret
jl
adc
mov
cmp
or
inc
mov
int3
jne
add
dec
mov
mov
and
fisubrs
lcall
push
out
mov
xor
ret
jo
rolb
mov
mov
aad
push
sbbl
push
dec
jecxz
fs
xlat
or
stos
inc
xor
pcmpeqw
andl
into
mov
addr16
movsl
cmp
pop
pop
jmp
incb
sub
loop
push
push
les
loop
xorl
pusha
clc
cs
repz
fadds
data16
mov
fsub
cmpsl
push
repz
mov
adc
jb
jl
and
addr16
mov
test
cmp
adc
loopne
cmp
jle
cmpsl
jecxz
and
rorl
scas
cld
ja
daa
ja
sahf
ja
push
dec
or
xor
call
adc
xor
aaa
insl
sahf
mov
cltd
xchg
mov
ja
fs
mov
test
es
bound
fs
ljmp
xchg
lds
mov
int
outsb
pop
std
pop
jg
mov
leave
mov
adc
and
and
mov
jge
adc
icebp
aad
dec
insl
lods
data16
out
cli
dec
lock
addw
sub
mov
int3
sbb
or
scas
push
sub
fcmovu
pop
mov
inc
push
and
push
sub
outsl
fdivl
sahf
addr16
movsl
xor
outsb
adc
lock
sub
adcb
adc
sub
or
add
push
mov
repnz
or
scas
jo
cmp
lea
mov
sbb
movsb
hlt
pop
ds
lea
test
mov
inc
pop
adc
mov
icebp
fldl
sub
imul
mov
pusha
pop
outsl
and
lock
dec
testl
push
and
aaa
mov
out
aam
sbb
sti
out
adcl
mov
inc
lods
in
loope
push
ljmp
lea
mov
dec
push
xchg
cmc
mov
dec
lret
fst
jmp
sub
sub
cli
xchg
cmpsl
loopne
adc
xor
mov
lret
add
int
cmp
adc
mov
aaa
in
mov
dec
jg
mov
fidivrs
pushf
push
mov
add
stos
fucomip
out
lock
test
into
test
cmp
lods
pusha
sarb
add
movsb
sahf
push
orl
pusha
stos
aaa
mov
incl
scas
cmp
mov
jl
pop
cmp
push
insb
jp
add
dec
rcrb
dec
fbld
inc
aas
adc
cmp
push
dec
repnz
jle
sbb
repnz
gs
jo
cmp
add
stos
adc
mov
push
mov
xchg
cli
jp
lret
pop
push
lods
cld
push
add
shl
pop
or
xor
push
push
roll
in
jp
sbb
mov
sbb
push
xor
loopne
jne
add
loop
cmc
scas
stos
stos
jle
cs
icebp
imul
push
push
dec
push
outsb
dec
enter
fs
lock
test
in
sarb
lret
test
rcll
test
push
rcll
xor
hlt
test
out
sbb
mov
push
sbb
pop
xchg
cli
pop
xor
xchg
sub
adc
pop
lods
add
fcomps
jge
jle
call
jge
fwait
roll
je
je
fisttpl
dec
je
test
out
sub
xchg
cmp
scas
jg
sub
insl
pop
push
nop
stos
pusha
sahf
jns
inc
xchg
testl
push
lods
sub
jne
or
shrl
sbb
pop
dec
jecxz
movb
sbb
pop
cmpsb
jmp
push
andb
lcall
pop
leave
ja
testl
loopnew
stos
xor
arpl
fnsave
push
pop
xchg
push
test
and
outsl
ss
movsl
sarl
xchg
pop
mov
jg
out
scas
sub
pusha
sbb
mov
pusha
sahf
fstpl
jmp
inc
inc
push
cltd
scas
hlt
pop
fstl
push
ljmp
leave
das
jno
stos
inc
sub
lods
add
push
push
mov
xchg
jp
mov
mov
je
mov
mov
cld
pop
xor
lret
lcall
lret
clc
cmp
cmp
pusha
adc
pop
es
adc
stc
push
cmp
into
arpl
sub
in
mov
adc
mov
cltd
dec
xchg
inc
cli
mov
xlat
or
sub
mov
adc
add
cld
adc
jg
jb
sbb
loope
mov
shlb
insb
mov
cmpsl
dec
scas
jo
movsb
cmp
inc
cli
out
daa
sub
xchg
xor
mov
add
mov
std
fsubrs
nop
mov
imul
test
dec
ja
push
jbe
pop
jg
cmc
fwait
pop
or
adc
pop
pusha
idivl
pop
sti
and
notl
push
inc
gs
mov
lret
lods
push
pop
xchg
lods
add
js
add
mov
mov
outsb
xor
outsb
in
push
lods
pop
icebp
and
xchg
daa
lds
sti
loopne
or
popa
and
and
jbe
mov
ret
push
mov
movsl
pop
and
arpl
add
mov
jne
out
and
std
in
shl
lgs
in
insl
xor
mov
or
pop
je
aad
hlt
cmpsl
lcall
push
jo
bts
incl
stc
pushf
loopne
popf
outsl
in
rclb
lea
sbb
xorl
movsb
sbb
push
inc
add
jbe
lcall
adc
popa
mov
sub
fimuls
mov
inc
mov
lret
or
mov
lods
lods
lahf
stos
push
scas
lds
add
mov
loope
cmpsl
gs
outsl
out
xor
or
adc
mov
mov
imul
and
push
inc
fldt
rcll
cli
hlt
dec
push
sbb
mov
pop
adc
cld
push
pop
movsb
int3
std
xor
repz
clc
xchg
xchg
push
add
inc
inc
lds
test
jno
inc
test
les
shrl
notl
cmpsb
inc
dec
dec
and
and
sub
jmp
xor
mov
fsts
popf
ja
cld
sbb
imul
push
pop
push
lea
ret
jle
loopne
lahf
into
ja
jbe
lods
iret
fists
sti
push
mov
add
pop
das
push
andl
je
rorl
outsl
inc
push
pop
cmc
out
pushf
mov
movb
popf
add
mov
daa
and
sti
add
jmp
ficomps
mov
lcall
imul
cwtl
fisubrs
movsl
pop
mov
jge
movl
je
lods
mov
cld
pop
pop
leave
les
pop
fwait
mov
xchg
out
cmp
pop
testl
jge
cmp
mov
ss
push
cmp
pop
in
cli
sti
bound
or
xchg
pop
arpl
mov
jnp
jo
pop
pop
popf
mov
enter
inc
test
jmp
negb
dec
and
lock
inc
ret
xor
popa
lock
loope
push
popa
mov
mov
repnz
jo
mov
lods
rorb
jge
push
in
aam
in
or
push
mov
notb
add
rclb
and
sbb
out
sbb
das
and
cmc
xchg
inc
pop
cs
inc
add
xchg
jo
pushl
xor
daa
ljmp
push
inc
xor
test
les
out
mov
outsl
add
fnstsw
push
push
inc
mov
inc
pop
push
bnd
mov
dec
fsubrs
mov
dec
pop
mov
mov
pop
and
mov
mov
push
adc
filds
dec
bound
dec
scas
fcmovu
ret
jb
lock
imul
cmpsl
pushf
mull
inc
fsubp
cmp
sbb
fwait
xlat
lahf
pop
add
insb
mov
push
and
popf
dec
mov
jnp
insl
sub
mov
fs
fidivrs
imul
mov
dec
xor
push
push
mov
enter
ds
xor
sbb
ret
rclb
movsl
mov
repnz
and
adc
or
das
push
into
jne
sbb
or
jle
mov
nop
sbb
std
add
push
sub
testb
imul
cwtl
and
stos
in
pop
and
out
adc
lods
mov
repnz
decb
push
or
sti
pop
out
mov
sub
loopne
xchg
test
cmpsl
mov
mov
xor
ds
sub
fistpll
icebp
fcmovnb
stc
ficoms
sti
mov
hlt
push
jle
pushf
pop
fildl
dec
insb
mov
xchg
fldl
lcallw
adc
jle
divl
inc
or
or
mov
arpl
popl
icebp
fsubrp
push
sahf
fnstenv
jno
sbbb
xchg
push
xchg
sbb
daa
jecxz
sub
mov
cld
movsb
push
ret
int3
cltd
mov
pop
outsl
ss
rcr
pusha
cmp
rcrb
push
ljmp
mov
inc
scas
cmp
nop
jb
xor
jg
stos
mov
jae
inc
or
repz
add
gs
sgdtl
shl
or
int
cltd
push
aas
and
ror
push
iret
sbb
ficoms
or
mov
mov
mov
fs
and
push
rolb
bound
fldcw
fisubs
dec
push
fnstenv
push
push
cmp
xchg
xchg
cmp
in
sbb
inc
add
test
xchg
outsw
fidivl
or
adc
xchg
mov
es
outsl
sbb
lcall
xorl
fwait
add
xchg
cs
gs
push
lcall
sbb
or
pop
std
cli
daa
mov
sti
adc
inc
dec
test
or
cmp
jmp
pop
pop
test
dec
push
jb
or
jb
stc
fnstcw
cmc
jno
jb
ret
sub
rclb
inc
cld
jge
xor
lds
jo
les
inc
xchg
lahf
mov
insl
popf
fcmovbe
mov
cltd
je
dec
enter
pop
gs
xchg
xchg
mov
insb
mov
cmp
cli
jp
test
in
dec
xor
mov
lock
sahf
pop
pop
xor
subl
icebp
or
in
mov
rcrb
scas
push
push
imul
lret
pusha
in
mov
pop
je
xchg
clc
hlt
mov
push
dec
sbbb
out
mov
push
idivb
incl
add
aad
push
jl
xchg
into
inc
dec
dec
push
scas
mov
and
in
insl
xchg
scas
mov
into
adc
fisttpl
fcoms
jmp
adc
pushf
mov
mov
lods
inc
xchg
and
jmp
ja
sbb
and
push
mov
push
add
jns
pop
fmuls
and
push
sub
mov
insb
cli
dec
in
jg
adc
sahf
push
dec
pop
jp
inc
jle
faddl
dec
mov
inc
mov
scas
pop
int
fbld
push
add
fbstp
pushf
out
lret
std
fdivs
sti
roll
mov
hlt
mov
mov
gs
cwtl
pusha
jne
jo
cmc
cltd
rolb
push
pushf
add
in
shlb
insl
xor
xlat
adc
aam
mov
inc
enter
test
pop
mov
pop
pop
sbb
orb
cmp
push
jmp
nop
mov
inc
jno
std
mov
dec
xor
je
out
fwait
push
and
jno
mov
cmp
lret
cli
and
add
pop
push
mov
jb
mov
repnz
inc
jg
sub
dec
imul
fidivs
loop
aas
jo
ds
jae
pop
jmp
rclb
cmc
or
mov
mov
fimuls
adc
jg
or
push
lret
pop
popl
decb
iret
mov
pop
mov
pusha
or
xor
lods
pop
lods
loope
pop
adc
mov
test
or
cmp
cmpsl
xorl
test
inc
in
lret
mov
in
mov
sub
mov
dec
loope
jp
pop
pop
sub
xlat
mov
or
shr
pop
or
inc
popa
cmpsb
in
dec
sbb
inc
sahf
jg
xor
and
out
mov
mov
aas
negl
fimull
dec
icebp
inc
ljmp
cmp
icebp
add
push
fdivr
mov
xchg
adc
mov
or
push
pop
mov
dec
mov
insl
dec
clc
mov
pop
xchg
ret
dec
sub
stc
jmp
mov
inc
fdivrl
punpcklbw
fstpt
cwtl
cmp
inc
sbb
inc
inc
pop
xchg
cmp
repnz
mov
cwtl
or
loope
call
xor
cmp
inc
icebp
pop
sbb
or
dec
repnz
mov
ds
fcmovb
fadds
sti
xor
sahf
cmpsl
push
add
outsb
fs
mov
cmpsl
cmc
negl
cmp
loope
iret
ljmp
dec
push
xor
ss
mov
mov
mov
jnp
dec
aad
je
cmc
jne
adc
popf
enter
scas
push
decl
stos
movsl
pop
shll
loope
push
movsb
adc
movsl
sbbl
pushf
pop
sub
xor
jle
pop
shrb
and
xchg
in
cwtl
dec
fwait
xchg
xchg
and
rclb
cmp
mov
dec
xchg
sub
nop
clc
sbbb
cmp
mov
jmp
xor
pop
fmul
jo
xor
fildl
fnstsw
mov
fs
dec
sub
fnstenv
vzeroall
sub
mov
cmp
jg
sub
add
jmp
xor
ss
sub
and
jl
lret
fnsave
test
sbbb
js
sbb
lret
push
pop
mov
repz
push
shll
test
cmpl
aam
mov
jae
lds
call
js
xchg
xor
mov
fistps
cmp
push
into
lea
or
fnstsw
push
add
call
jb
daa
adc
lret
adcl
jae
ret
adc
sti
rol
lret
xchg
dec
pop
xchg
dec
push
mov
mov
and
inc
aam
xchg
sahf
adc
push
mov
fistpl
fwait
jne
and
push
ficompl
push
pushf
mov
push
je
arpl
sub
divb
mov
pop
stos
pusha
pushf
xchg
inc
push
incl
adc
mov
jb
popf
test
mov
or
push
ljmp
lock
dec
dec
test
in
ja
mov
mov
adc
ds
movsl
add
fwait
jb
loopne
and
fdivl
pop
pop
fld
jae
xchg
pushl
mov
mov
dec
lods
pop
sub
cli
adc
xor
inc
inc
jmp
cmp
out
adc
call
testl
mov
jle
dec
call
mov
or
sbb
in
xor
fimuls
add
mov
xchg
and
sub
lea
mov
test
push
movl
es
lds
dec
scas
xor
dec
and
push
push
inc
sbb
dec
inc
xchg
call
decb
push
push
ret
jl
ljmpw
call
lds
inc
in
and
pop
ss
pushf
mov
movsb
push
frstor
hlt
dec
ss
btr
test
andl
mov
add
or
mov
pushl
mov
dec
inc
mov
pop
mov
loopne
sbb
mov
out
sar
sbbl
fiadds
xchg
fidivrs
and
setl
pusha
mov
sub
sub
scas
inc
ret
insb
int3
jg
push
dec
jl,pn
movsb
data16
xchg
push
jae
jg
mov
loopne
xor
icebp
jecxz
imul
pop
push
mov
mov
loop
add
or
shlb
add
dec
mov
fiadds
mov
stc
divb
xlat
xchg
call
outsl
dec
push
or
imul
or
or
clc
cwtl
mov
cmp
or
mov
mov
jne
or
je
hlt
and
or
inc
test
pop
jle
pop
call
fwait
leave
pop
mov
jge
add
add
mov
sub
jecxz,pn
shlb
nop
enter
rcrl
loopne
clc
jle
add
inc
dec
lods
fwait
movsl
in
sbb
add
pop
jecxz
ja
in
xchg
mov
jb
dec
lods
imul
or
test
push
xchg
pushf
lods
pop
mov
mov
adc
movsb
or
hlt
pop
jp
outsb
inc
fimuls
mov
mov
stos
jno
xchg
ffreep
rorl
cmp
out
out
imul
inc
jns
lock
in
ss
dec
push
adc
in
test
iret
cmp
pop
push
push
lahf
or
dec
into
inc
xchg
mulb
dec
mov
mov
push
xchg
or
mov
inc
imul
push
inc
lahf
leave
incl
bnd
into
shll
enter
push
jp
or
and
mov
sarl
lock
les
pushf
movsl
pop
pop
push
rcrl
mov
xchg
mov
dec
rcrb
sti
push
jne
push
cs
out
nop
mov
add
sbb
inc
arpl
popf
dec
pop
fsub
jb
push
or
hlt
bound
push
jb
sbb
xchg
push
pop
addr16
adc
push
push
rcrb
and
mov
mov
scas
mov
imul
pushf
scas
push
aam
stos
xchg
dec
push
iret
in
insb
push
cs
outsb
mov
rcr
shlb
dec
faddl
lds
mov
push
cli
jmp
xor
test
int
andl
sub
dec
inc
add
mov
mov
arpl
inc
adc
pop
in
in
sbb
loopne
xacquire
test
push
mov
out
pop
dec
hlt
mov
leave
push
mov
jb
js
mov
xchg
arpl
lods
pusha
loop
add
mov
dec
orb
push
fmuls
roll
push
flds
negl
mov
jp
or
leave
sub
rcr
dec
mov
push
jmp
fimuls
je
fistl
adcl
jbe
dec
push
add
xchg
out
aas
imul
scas
movsl
cmc
mov
pcmpgtd
adc
jle
cltd
adc
repnz
ljmp
je
loopne
jno
jno
push
push
mov
sbb
mov
pop
test
popa
xchg
movsl
mov
and
and
adc
xor
rcrb
outsb
loopnew
jmp
or
es
jo
adc
jl
mov
xlat
hlt
cmp
lahf
and
aam
pop
fsts
or
in
out
cmp
mov
out
xchg
cmpsb
in
jno
cmp
pop
mov
jns
dec
inc
das
add
cwtl
out
aaa
imul
int3
push
add
ds
dec
mov
repnz
or
xchg
sub
fimuls
outsb
scas
push
inc
inc
push
out
ss
xor
xchg
mov
sar
ljmp
mov
daa
lock
dec
jno
imul
flds
cmpsl
push
imul
sbb
xor
dec
lds
push
mov
iret
idivb
gs
sti
mov
clc
addb
je
pop
cmp
jno
dec
sbb
inc
sbb
cld
dec
cltd
dec
mov
out
clc
mov
xor
cs
sbb
outsl
mov
add
leave
shlb
pop
mov
ds
ja
inc
xchg
movsb
popa
jb
jno
lret
cmpsb
mov
out
pop
stos
mov
xchg
mov
jmp
sub
jecxz
cs
jo
mov
push
pop
mov
loope
cmp
mov
xchg
int
lea
mov
es
and
lret
je
pop
mov
js
and
adc
mov
push
xchg
dec
jb
out
dec
cltd
fimuls
bound
out
mov
pop
popa
sub
jecxz
lods
sarl
mov
jno
jne
inc
and
adc
adc
cmp
pop
jmp
out
je
fnsave
cmp
pop
les
adc
xor
ffree
add
push
sub
dec
ror
pop
sbb
sub
outsb
or
movsl
call
mov
mov
jno
insl
add
mov
xor
mov
lds
sub
aam
les
rclb
fdivs
jne
cmpb
ljmp
xchg
lock
jle
xchg
mov
jg
add
sub
jmp
pop
adc
idivb
aam
or
push
in
cs
push
cmp
mov
in
inc
jmp
adc
shlb
push
shrb
mov
cmp
in
sub
test
mov
sahf
push
sub
out
xchg
negl
sub
gs
out
std
and
in
int3
test
aas
and
sub
insb
sub
sahf
mov
and
push
leave
xchg
arpl
xchg
fisubrl
pusha
dec
mov
push
loopne
in
mov
push
ja
ror
pushf
add
jmp
movsb
aaa
addr16
dec
inc
xchg
ss
push
xor
pop
cmp
push
jle
ja
adc
aam
test
rcrl
cmp
inc
lds
or
adc
dec
sti
mov
inc
jg
int
jb
jns
sub
mov
iret
and
lret
dec
mov
mov
lds
mov
xor
popa
fwait
inc
jae
mov
ljmp
ret
xchg
cmp
add
pop
lea
lcall
es
cli
xchg
dec
push
test
ret
xchg
aam
shr
pop
push
lcall
ljmp
ret
pop
js
push
jg
xchg
sbb
fdivrs
cld
fidivs
movsl
or
loope
xchg
mov
inc
pop
mov
lcall
das
repnz
lahf
lods
or
and
into
add
jbe
add
popa
jg
and
ret
sub
je
lret
ss
sar
movsl
mov
jno
xor
fldl
xchg
lret
mov
or
ror
sahf
mov
or
inc
int
inc
mov
sub
das
push
cmpsb
pop
jb
dec
jecxz
fildl
mov
pop
lcall
lods
aaa
xor
xchg
rcr
add
hlt
fnsave
fs
ret
outsb
cmp
out
adcb
xchg
in
popa
fisttpll
mov
mov
or
sti
dec
add
insb
mov
sbb
fwait
in
inc
or
xor
inc
pop
pop
std
insl
xchg
push
mov
mov
push
cmp
xchg
jl
dec
add
aam
xor
jbe
add
xor
pop
mov
test
inc
xor
jmp
sbb
in
das
mov
int
mull
lret
sahf
or
and
add
add
cmp
bound
lds
xchg
xchg
mov
popf
add
inc
mov
adc
aas
mov
mov
js
lahf
sbb
sub
sbb
xchg
pop
lods
adc
jne
stos
lret
fwait
adc
cld
movsb
dec
jg
lcall
xchg
adc
daa
inc
jne
je
xchg
movsb
jne
fidivs
mov
test
mov
ret
pop
lcall
ss
mov
xchg
int3
in
icebp
sub
sbb
imul
imul
xor
negb
movsb
int3
leave
mov
add
push
icebp
es
push
in
cmp
out
dec
lea
push
xor
jnp
inc
bound
push
mov
jmp
rep
sbb
mov
out
cmp
mov
inc
fstpt
aaa
jg
add
adc
dec
popf
and
loopne
mov
push
pop
add
fisubl
lods
pop
xchg
adc
sub
insb
ja
mov
cwtl
inc
out
push
cmp
shll
daa
cltd
in
lods
dec
add
and
mov
inc
mov
iret
loope
jno
mov
xchg
pop
subl
mov
insl
das
ss
jge
mov
in
xchg
mov
sbbb
jnp
shlb
sahf
in
pop
xchg
dec
inc
push
fstl
fildl
mov
or
lcall
cmpsl
ss
xchg
jno
jns
scas
daa
xor
rolb
fadds
jnp
test
xor
mov
pop
push
mov
or
mov
sahf
add
call
xchg
push
jo
sbb
xor
mov
dec
enter
xchg
mov
cmp
adc
sbb
fistpll
mov
push
popf
es
mov
lret
and
aad
adc
ja
out
push
mov
sbb
stos
adc
lret
in
popf
push
test
cmp
daa
lods
mov
ret
cmp
out
jns
adc
mov
rolb
fcoms
mov
pushf
mov
aaa
mov
cmc
insb
push
outsl
inc
pop
out
or
mov
lcall
loope
fwait
jl
or
ja
and
fs
add
test
mov
and
pushf
add
gs
cmp
pop
push
lret
sub
pop
movsb
arpl
add
xor
je
or
cmp
out
jbe
xchg
adc
out
jl
aam
jnp
int3
xchg
pop
inc
das
mov
lods
dec
or
or
mov
sbb
outsl
jno
pusha
aaa
mov
xor
add
sub
icebp
xchg
clc
xchg
xchg
mov
add
fimull
sahf
pop
push
lea
fchs
or
movsb
add
pop
ds
scas
shlb
push
dec
inc
and
inc
addr16
sub
lret
lahf
stos
insl
lock
cmp
ficoml
divl
leave
jmp
push
xchg
mov
or
push
lea
and
mov
daa
test
mov
jae
int3
lock
sbb
dec
int
stos
nop
in
jne
ret
jle
and
rclb
and
sub
int
insl
in
add
xchg
sbb
mov
pop
adc
call
xchg
dec
loope
dec
cs
jno
jle
inc
xchg
inc
imul
cld
sbb
roll
dec
jmp
lahf
jg
adc
sub
mov
push
inc
pushf
test
add
cmp
fisubs
add
jmp
adc
sub
xchg
movntq
ljmp
enter
ds
dec
jbe
mov
mov
mov
add
or
pop
insl
mov
mov
pop
pop
in
bound
stos
sbb
filds
inc
mov
out
cwtl
ss
jecxz
test
shl
lahf
pop
fnstenv
jmp
sti
hlt
pushf
adc
cwtl
push
lret
xchg
ss
test
sbb
and
xchg
fwait
popf
mov
mov
cwtl
add
mov
leave
sub
sbb
popa
jb
popf
sub
fdivs
ss
pop
imul
jno
sub
mov
and
mov
leave
mov
cmp
clc
push
pop
sub
jge
cwtl
or
pushl
jp
cmpsb
in
test
scas
push
xchg
loopne
iret
jg
or
fmuls
or
dec
stos
cmp
fs
add
xor
xlat
insl
clc
popa
push
jmp
movsl
rol
dec
mov
out
dec
out
mov
fnstenv
test
test
cmp
lods
jp
xchg
scas
mov
rclb
pop
insb
cli
mov
push
fsubs
icebp
imul
jo
sub
bound
mov
gs
je
xlat
mov
cwtl
loopne
faddp
cmc
imul
subb
inc
and
sub
inc
in
test
cmp
jbe
insl
inc
es
sub
fsubs
jge
aam
and
mov
je
push
movsb
outsl
xchg
mov
ret
nop
mov
test
cltd
aad
inc
andb
and
mull
cwtl
add
frstor
fistl
lock
cmp
outsl
fldcw
fwait
dec
mov
ds
sub
mov
arpl
mov
push
faddp
fwait
or
and
inc
push
aas
mov
mov
mov
fcomps
push
xchg
jnp
lock
lret
repnz
mov
mov
stos
xor
cmpsl
cmpsb
lds
lods
pop
test
adc
in
mov
mov
std
mov
push
icebp
or
and
pop
addr16
cwtl
sub
mov
cmc
add
xchg
dec
dec
push
cmp
sub
and
ljmp
cmc
cmpsl
and
push
loop
subl
scas
sti
inc
popa
dec
into
fimull
into
leave
in
mov
push
arpl
dec
mov
pop
sti
js
pop
add
fxch
into
mov
push
and
stos
dec
dec
dec
bswap
sbb
lret
xor
out
das
sub
sarb
das
mov
sbb
push
push
aaa
mov
or
xchg
sub
adc
mov
pop
jl
dec
mov
out
inc
jnp
and
aam
xlat
test
in
sub
rcll
or
push
cmpl
dec
jg
lret
push
inc
mov
xor
pop
fnstenv
cmpsl
repnz
fs
mov
std
xor
push
lods
nop
xor
mov
and
push
mov
mov
mov
adc
xor
stos
shlb
stc
insb
jno
out
nop
mov
jecxz
pop
pop
add
push
sbb
cmp
pushf
popf
lea
push
pop
mov
into
iret
dec
rorb
sarb
into
dec
ret
pop
addr16
cmp
lret
je
sti
notb
imul
fpatan
mov
cmp
movsl
inc
jo
fsubr
fidivrs
dec
push
lret
icebp
outsl
out
mov
and
ret
daa
xchg
or
mov
adc
pop
out
mov
pop
daa
mov
jl
adc
xor
jnp
lcall
add
movsl
scas
and
pop
clc
jnp
or
jl
dec
dec
pop
bound
in
aaa
movd
inc
sbb
mov
mov
pusha
and
lcall
sahf
mov
xchg
rcrl
push
scas
mov
in
punpckldq
lds
push
imul
lret
testb
add
inc
sbb
push
loopne
test
in
call
add
call
outsb
in
mov
cli
fwait
adc
dec
sbb
movsb
dec
fcmovbe
xlat
rcl
pushw
or
add
in
outsl
dec
stos
rcrb
mov
mov
adc
insb
scas
dec
adcb
dec
cmp
adc
iret
dec
pop
repnz
insl
dec
jle
or
hlt
ja
mov
stos
or
adc
push
sbb
ja
dec
mov
cmpl
jg
imul
push
test
cmpb
nop
xchg
shll
fnstenv
xchg
aam
int3
lret
dec
bound
add
leave
inc
push
xchg
jb
out
imul
psubd
sub
mov
ret
scas
or
sbb
loopne
xchg
cwtl
jnp
decl
push
sbbl
inc
daa
shrl
cwtl
pop
in
sub
xor
jo
and
adc
sub
mov
jl
insl
inc
mov
pop
rorl
rorl
inc
push
int3
fmuls
push
cs
sub
gs
push
hlt
add
shrl
aas
mov
cmpb
xor
rcrb
mov
cmpsb
lret
jge
ja
bound
bound
jo
jmp
insb
inc
mov
mov
imul
mov
in
push
pop
cmpsb
mov
adc
or
ja
mov
mov
in
dec
icebp
adc
les
inc
dec
nop
mov
mov
xchg
out
pop
add
and
sub
sub
adc
stos
scas
mov
xor
push
push
mov
mov
mov
fbld
shll
push
test
js
mov
cwtl
aas
jl
xchg
movsl
shrb
sti
pop
mov
mov
xchg
out
push
and
and
test
mov
ljmp
repnz
mov
mov
jbe
adc
pop
xor
out
jne
push
and
dec
xchg
push
xchg
xor
fadds
push
cmp
push
push
int
cmp
adc
popa
xor
lcall
lds
popa
cmp
and
sahf
addr16
cmpsl
mov
outsb
jnp
mov
loope
mov
inc
cmpsb
xlat
outsb
pop
stc
repnz
dec
ja
test
push
or
inc
outsb
and
lret
cwtl
mov
inc
and
add
stc
in
aad
inc
roll
add
enter
into
add
ljmp
jo
cltd
pop
and
mull
addb
adc
jecxz
cltd
incl
and
push
pop
in
test
scas
js
mov
cltd
adc
popl
inc
push
adc
inc
loope
popf
mov
mov
outsl
add
cli
add
loopne
stos
or
test
adc
mov
mov
sbb
mov
cmc
push
loope
ret
lcall
sbb
sbb
test
ljmp
incb
and
mov
stos
mov
das
sbb
inc
call
cmpb
mov
xchg
jo
pop
push
sbb
iret
shrl
loope
mov
cmp
xchg
mov
lods
dec
xchg
hlt
iret
xchg
mov
cltd
xorl
into
dec
cmp
dec
lret
ret
insl
jl
cmc
adc
adc
sarb
leave
fiadds
icebp
subb
loop
push
push
pop
lcall
mov
xchg
pop
jb
lods
mov
cmp
out
int
mov
push
xchg
dec
sbb
or
push
adc
and
jge
idivl
xchg
nop
sub
sub
jbe
sarl
xchg
lahf
pop
or
rol
call
mul
push
mov
sbb
pop
add
out
mov
ret
pushl
inc
lds
insb
repnz
daa
in
push
lods
arpl
jns
push
mov
push
cs
pop
mov
jl
push
mov
or
cld
add
pushf
scas
in
out
jo
out
xor
mov
test
cwtl
rcl
sbb
dec
sbbl
mov
in
movsl
repz
int3
mov
rcll
or
mov
loopne
or
pusha
jg
push
movsl
test
cmc
or
cmc
cwtl
adc
hlt
jno
add
clc
dec
outsb
fstl
std
or
imul
stc
xor
sti
inc
cmp
xor
dec
mov
test
stos
ljmp
ljmp
push
push
hlt
push
xchg
cmp
and
scas
pop
jo
insl
shrb
cmp
mov
call
xor
mov
enter
push
movsl
push
cmc
mov
push
jo
andl
stos
xchg
mov
push
testb
lock
rclb
mov
xor
inc
jge
mov
int3
scas
inc
pusha
je
fbld
scas
int
pop
nop
sbbb
nop
out
mov
push
pop
call
repnz
cwtl
adc
and
lret
sbb
mov
xor
jle
pushl
jnp
jp
inc
or
mov
ja
das
in
jl
test
jns
pop
stc
mov
mov
jb
das
enter
negl
sub
imul
popf
adc
mov
xor
filds
mov
inc
sbbl
and
jo
movsb
mov
mov
fistpl
sahf
xchg
add
lret
imul
lahf
and
jp
imul
mov
inc
insl
adcl
jecxz
cmpsb
std
sub
xor
jg
test
mov
xchg
push
mov
pop
pusha
enter
xchg
aam
lahf
scas
jb
xchg
into
adc
or
mov
push
lret
cmpsb
push
xchg
and
jecxz
sbb
in
add
fwait
int3
lods
mov
aas
mov
inc
mov
enter
pushf
outsl
movsb
test
push
scas
sahf
in
imul
mov
cmp
inc
fsubrl
xor
mov
jl
fnsave
aas
adcl
or
shl
cld
call
out
pushf
arpl
dec
dec
add
enter
xor
movsb
dec
enter
pop
cmp
cltd
idivl
fdivr
sub
sub
inc
mov
ljmp
aaa
push
mov
imul
mov
popf
out
je
jns
xchg
xchg
ror
mov
mov
cli
lcall
push
scas
pop
adcl
fs
lea
inc
push
cmp
xor
cmp
loop
cmpsb
mov
mov
sub
stos
loop
mov
mov
fs
movb
out
repnz
iret
jge
xor
jns
jmp
push
pop
in
and
scas
jae
pop
ljmp
xchg
scas
loop
mov
add
ficoml
inc
pop
int3
fs
test
aaa
fs
or
and
xchg
enter
add
cmpsl
pop
les
push
jno
call
adc
js
jbe
aad
xchg
int3
xor
dec
push
loope
add
repnz
lret
vpaddb
xchg
out
add
pop
filds
adcb
or
pop
sub
cmpsl
les
mov
inc
lods
inc
into
pusha
jne
mov
repnz
xchg
ret
sti
xor
out
data16
loope
push
out
mov
inc
mov
push
or
pop
mov
adc
and
jne
mov
mov
pop
shlb
mov
xor
clts
mov
push
pusha
xor
dec
int3
testl
xchg
add
aaa
mov
lods
xchg
stos
push
inc
daa
mov
aas
movsb
enter
xlat
loope
or
fistpll
loope
inc
xchg
stc
fs
mov
stc
mov
rorl
les
cmp
push
stos
int3
iret
sub
pushf
mov
setno
inc
mov
dec
ss
popa
cwtl
add
loope
xor
pop
shrl
sti
hlt
xchg
cmp
aaa
sub
adc
sbb
repz
jnp
loope
jp
lea
pop
mov
inc
sbb
inc
sub
push
mov
xor
and
je
push
pusha
inc
js
adc
add
and
inc
xor
xchg
imul
jmp
push
mov
xor
adc
adc
mov
xchg
xchg
aaa
add
imul
lds
loope
scas
adcb
cld
inc
les
mov
xor
fldcw
or
out
pop
fldt
mov
mov
movsl
mov
enter
flds
cltd
cwtl
loop
js
daa
fildll
fidivrl
pop
xor
cmp
pusha
fmul
fmull
mov
pop
mov
inc
mov
inc
lock
in
dec
fnstsw
shlb
into
mov
leave
add
inc
cmpb
add
mov
call
mov
lcall
sti
xchg
cmpl
sub
shl
in
mov
shll
adc
xchg
aaa
pushf
cmpsl
add
mov
or
ds
mov
popa
push
stc
jge
mov
repz
aam
xchg
xor
cwtl
cmc
jge
add
jns
icebp
jno
clc
fbstp
rolb
cli
sbb
scas
dec
movsl
mov
pop
or
cli
nop
je
jg
or
xchg
or
movsl
push
in
cli
cli
xor
popf
out
lock
ret
adc
sbb
lahf
enter
xor
xchg
movsb
enter
ror
or
and
jbe
testl
jle
push
in
add
test
enter
ror
subb
in
mov
fcomi
jecxz
push
test
mov
sbb
mov
dec
push
push
inc
sub
out
sbb
gs
cltd
insl
dec
or
mov
mov
cmpl
mov
movsb
in
jl
add
push
stc
cltd
js
mov
cmp
xor
test
mov
out
in
sbb
pop
xchg
insb
iret
fwait
movsb
sbb
push
gs
fwait
idivb
orb
lret
fwait
dec
jbe
jns
cld
lods
lret
xor
mov
mov
jle
ds
cli
mov
dec
ret
pop
int
fcmovnu
nop
fdivr
jne
int3
mov
and
pop
pmulhuw
sub
add
movsl
cmp
pop
loop
stos
sub
divb
add
xor
hlt
sarb
pushf
push
push
popf
inc
test
dec
jle
xor
mov
jns
push
and
push
sbb
pop
rol
jg,pn
fistpl
or
pop
test
lret
rorl
jbe
movsb
test
daa
sbb
xchg
xchg
data16
dec
push
cmpl
popa
jl
rcl
and
push
push
jge
mov
jbe
or
inc
cmp
jno
or
sbb
cmpsb
jge
out
dec
sub
inc
push
outsl
lret
invlpg
mov
xchg
dec
jecxz
aas
lea
xchg
jecxz
pop
aaa
roll
push
test
nop
insl
mov
imul
mov
jnp
fidivrs
and
lock
outsb
xchg
xor
sbb
mov
push
mov
add
dec
addr16
mov
fidivl
xor
loop
xlat
inc
xchg
mov
xchg
pop
popf
inc
mov
lcall
pop
inc
test
in
sbb
or
je
lds
jo
test
sub
lahf
cmp
push
mov
mov
inc
dec
std
inc
cmc
push
pop
adc
inc
dec
and
test
or
jno
daa
push
mov
out
sbb
cmp
pusha
loope
sub
mov
cmp
pop
push
mov
dec
xor
mov
sub
or
jecxz
dec
mov
mov
sbb
sub
jb
mov
fmull
add
in
ret
xor
xlat
cli
test
int
add
or
push
sbb
leave
bound
jb
sbb
lods
lret
sub
inc
pop
xchg
test
sarb
mov
out
jg
clc
mov
xor
lods
cmp
cs
jle
in
sub
in
js
cltd
ljmp
stos
aaa
repz
dec
imul
jb
pop
fsubs
fldt
mov
je
xlat
add
insl
pop
in
outsl
mov
lock
leave
ljmp
or
push
dec
fnstcw
repnz
push
mov
add
rcrb
mov
fstpt
mov
stos
cmpl
in
dec
cmpsl
test
sbb
in
xchg
arpl
loop
push
adc
ss
pop
push
hlt
in
rcrl
xor
ret
mov
sbb
repnz
cltd
popa
pop
sbb
xor
call
xchg
dec
ss
adc
mov
mov
ss
sub
xchg
jne
cmc
and
inc
cmp
jle
xchg
xor
fcomps
mov
aad
adc
xchg
fucomi
jg
movsl
aas
dec
pop
xchg
cmp
xchg
pusha
pop
mov
pop
pop
sahf
pop
loop
dec
xlat
fwait
sub
mov
fs
or
mov
movsl
insb
add
cmp
cmp
subl
sub
jnp
xor
push
pop
jo
sub
out
int3
test
push
enter
je
pop
addr16
test
dec
insl
fdivp
xchg
das
in
mov
sub
fcomp
jno
fimuls
shll
test
cmp
push
xor
outsl
push
dec
cmpsb
adc
sub
ds
add
xor
xchg
sbb
hlt
inc
mov
or
push
mov
and
pop
fildll
jbe
dec
xor
loopne
insl
sbb
js
outsl
xor
sahf
mov
fs
cwtl
adc
fidivs
xor
sbb
push
adc
push
push
pop
adc
aad
out
incl
stos
add
into
and
popa
cli
ret
in
sbb
adc
cmp
loope
jb
xchg
imul
add
addb
cmp
mov
jmp
loopne
les
pop
jp
sbb
push
in
mov
xor
iret
push
push
push
cli
fimuls
lea
ret
aas
push
aas
mov
out
sbb
push
jg
or
and
and
es
mov
sarl
xchg
mov
scas
repz
push
cmpb
sbb
sbb
call
shrl
bound
in
test
imul
adc
icebp
push
cmp
test
lds
pusha
clc
xchg
mov
inc
orl
adc
hlt
inc
xchg
icebp
scas
cmpl
inc
fiadds
mov
jge
push
and
mov
out
sahf
cmpsl
dec
cltd
fsubl
xchg
cmc
mov
xchg
inc
push
xchg
rcrb
push
pop
ds
mov
in
je
jge
push
sub
mov
jns
pop
rolb
in
ficomps
in
ret
jmp
jns
mov
mov
add
add
mov
sbb
adc
mov
loope
test
std
mov
ret
mov
mov
loope
leave
xlat
mov
imul
dec
je
enter
xchg
cwtl
loope
mov
xor
sarl
xchg
dec
jmp
movl
and
in
add
push
out
fcompl
fpatan
repnz
call
movsb
in
jle
ljmp
jmp
inc
jmp
adc
inc
hlt
mov
add
lahf
sbb
fucom
inc
pop
inc
ret
rolb
pop
push
adc
fmull
mov
pusha
aam
test
lock
push
mov
ss
mov
mov
repnz
mov
pop
jns
mov
pop
adc
xchg
xchg
flds
rolb
dec
fmull
jbe
cli
cltd
xchg
cmc
pop
mov
mov
mov
or
enter
xor
push
imul
adc
sahf
cmp
in
jge
push
xchg
dec
dec
iret
jle
insl
jo
addb
imul
sbb
enter
inc
mov
inc
fnstsw
lds
or
cld
mov
sub
cwtl
pop
lret
test
sbb
enter
jnp
nop
es
std
lods
dec
cmpsb
mov
into
aas
sti
sub
mov
inc
aad
test
push
or
popf
cs
imul
hlt
mov
ss
shll
pop
mov
data16
pop
into
jecxz
scas
rorb
jge
cltd
jnp
cmp
sbb
je
loop
movsl
into
notl
cltd
push
and
fisubrl
push
ret
fdiv
xchg
pop
cmpb
pop
lret
ss
add
insl
sub
pusha
or
dec
ror
pop
fcoml
lds
scas
jle
jbe
jp
jp
lahf
or
inc
adc
lcall
lods
sub
xorl
xchg
scas
lea
add
mov
inc
imul
out
lods
movsl
mov
popa
addr16
pop
jecxz
sbb
stc
jl
or
das
pop
pushf
aaa
jmp
adc
je
add
gs
imul
nop
in
and
lret
aam
or
cmp
xor
mov
icebp
push
pop
adc
mov
pop
pushf
pushf
or
ret
xor
lcall
inc
fdivs
outsb
xchg
pop
call
aaa
cli
adc
jl
js
ljmp
and
pop
pop
loop
mov
dec
cmp
sub
jae
mov
or
add
outsl
test
pop
jnp
cld
sahf
aam
les
outsb
mov
cmpsl
movsb
into
sub
inc
xor
push
fld
inc
cmpsl
leave
les
mov
jp
jbe
scas
mov
popf
push
add
divb
insl
pop
xchg
jmp
fisubs
ja
stos
mov
fisubl
daa
sub
iret
ret
cmp
pop
rclb
notb
iret
shrl
fidivs
jmp
dec
push
xchg
lds
sbb
pop
mov
add
and
cmpl
ficomps
pop
xlat
je
jb
mov
pushf
sub
fldcw
test
in
nop
lea
dec
shlb
adc
icebp
pop
cmp
ja
xchg
push
mov
call
imul
or
adc
or
notl
pusha
jmp
int
sub
xchg
xchg
jb
sbb
dec
dec
adc
sbb
xlat
and
test
and
sub
add
aam
in
sbb
movsb
xchg
shrb
orl
mov
out
xchg
xlat
loope
add
mov
push
daa
test
jmp
insl
into
add
shrl
repnz
scas
push
cmp
mov
movsb
sti
inc
xor
pop
mov
adc
movsl
out
aad
push
imul
mov
enter
xor
pushf
or
cli
jbe
and
lock
fs
aaa
js
xchg
sbb
mov
lods
dec
push
popf
loop
dec
mov
mov
or
pop
jecxz
xchg
mov
pop
add
cmp
cmp
int3
xchg
lret
xchg
sbb
icebp
xchg
add
sahf
aas
cmpsb
inc
mov
dec
aam
dec
gs
inc
add
in
cmc
je
mov
call
mov
ds
in
test
pop
jnp
sub
cmp
add
xor
xchg
enter
jbe
test
push
mov
out
lcall
movsl
sbb
xchg
sub
push
pop
mov
cmp
jbe
arpl
ss
or
pusha
xchg
les
push
movsl
shll
mov
sub
add
aad
movsl
add
arpl
push
pop
jecxz
xor
mov
add
sub
jmp
xchg
add
lret
cmc
and
add
std
xchg
into
sahf
jne
or
cmpsb
inc
pusha
and
adc
movsb
clc
shrl
cli
aad
insl
shr
cwtl
das
cmp
mov
adc
xchg
in
pop
fiadds
sbb
stos
adc
cmp
xchg
sti
mov
push
hlt
sbb
xor
insb
loop
xchg
lret
push
sub
xchg
pop
hlt
lds
outsl
sub
ds
push
or
push
fsubrp
or
std
popa
push
daa
adcb
lea
pop
popa
notb
mov
lods
rcrl
add
mov
pop
hlt
mov
lahf
data16
pushf
push
and
scas
fsubs
dec
gs
lahf
inc
stc
hlt
inc
mov
cmp
jecxz
pop
loope
mov
push
lret
inc
dec
lahf
stos
addr16
push
dec
pop
lods
lock
ret
aad
mov
ss
stos
xor
sub
adc
jecxz
pushf
outsl
clc
mov
cmp
sub
stos
je
out
push
mov
sbb
icebp
movl
sbb
dec
in
out
in
pop
jno
mov
adc
sbb
and
std
xchg
or
sub
int
cmp
shufps
mov
xor
fsts
push
mov
cs
jge
add
out
out
push
dec
cmp
push
cmpsb
out
add
fs
out
jp
scas
push
shrl
adc
ud0
pop
pushf
adc
test
testb
clc
test
push
mov
xchg
bound
movsb
dec
jmp
test
xchg
stos
push
cmpsl
rep
push
jb
mov
daa
push
add
dec
jecxz
ljmp
stos
ja
dec
les
ficompl
cmpsb
cmp
mov
jno
xor
imul
rolb
shl
and
fiadds
xlat
lret
outsb
jmp
in
mov
sbbl
shrb
loopne
ljmp
sub
lock
and
jne
cltd
adc
sub
in
pushf
cwtl
cmp
mov
jb
sahf
leave
pop
xorl
xor
sti
popf
leave
jns
cmp
inc
dec
inc
test
paddb
aam
and
addl
add
mov
xchg
and
jns
pop
loop
and
idivb
pop
dec
in
movsl
ja
mov
push
jne
insb
mov
mov
xchg
cmp
mov
mov
repz
mov
xor
xlat
dec
cli
xor
mov
ret
jbe
sub
js
ss
jae,pt
dec
inc
mov
or
add
add
clc
or
sarl
inc
orb
insb
xchg
rol
mov
mov
fsts
in
push
mov
test
sub
jne
mov
addr16
aam
mov
in
call
inc
sub
sarl
popf
sub
cmc
jne
push
sbbb
xor
and
jle
adc
jmp
out
aam
fcomip
fcompl
ret
inc
pop
add
sub
das
jecxz
fildl
xchg
cwtl
or
add
push
push
mov
push
jle
pop
mov
cmpsb
dec
lock
sar
dec
leave
dec
das
test
in
lcall
or
and
fstpl
test
lret
xchg
dec
push
add
xor
cmp
jmp
mov
loope
das
daa
inc
movsb
mov
cmp
push
test
outsl
fcmove
xor
scas
xor
arpl
push
push
jns
mov
pop
ret
pop
cmp
xchg
fistl
gs
ljmp
push
jnp
add
je
sbb
in
mov
ret
mov
cld
movsl
addr16
xchg
xlat
or
or
arpl
addr16
mov
mov
sbb
clc
mov
cmp
ds
addr16
xchg
mov
dec
bound
mov
add
jecxz
mov
and
sbb
arpl
cmpsl
insl
lret
movsl
xor
jmp
push
mov
push
add
xor
mov
mov
jmp
outsl
pop
pop
dec
lcall
mov
inc
scas
adc
add
add
fidivrl
and
lods
es
bnd
repz
or
pop
fcomps
insb
adc
jne
mov
test
stos
imul
shrl
icebp
push
hlt
loopne
xchg
xchg
mov
mov
out
mov
mov
jl
push
pop
jecxz
mov
cmp
mov
jge
or
dec
cmpl
test
popa
sbb
pop
or
jnp
dec
adc
insl
add
les
mov
rol
and
icebp
out
mov
dec
jl
jbe
sahf
lcall
and
jb
fdivrl
hlt
in
pop
mov
cmp
shl
sbb
xchg
in
cs
sbbl
or
popl
mov
adc
out
mov
jnp
int
xor
ret
popa
pop
mov
sbb
insl
or
cli
mov
dec
xchg
mov
jo
aas
pop
pushf
arpl
test
mov
mov
sarb
jbe
mov
test
cmp
in
ds
std
mov
pop
mov
inc
sbb
enter
mov
ret
mov
adc
aas
cmp
mov
mov
mov
push
sbb
mov
push
hlt
daa
xor
jecxz
and
cmp
adc
outsl
jg
sub
loop
scas
test
xchg
repz
jbe
fiadds
inc
sub
dec
add
int3
fisubrl
stos
sub
jae
roll
cwtl
mov
aaa
std
ljmp
jbe
mov
cltd
jno
mov
mov
add
xchg
push
cmp
xchg
mov
jne
lret
jg
push
sub
xor
into
sub
jb
lods
cmp
shlb
cli
mov
call
pop
add
mov
lods
xchg
inc
aam
test
loopne
and
push
mov
or
gs
xchg
xor
and
aas
loope
stos
mov
add
outsb
pop
jbe
inc
pop
sub
ret
ss
fnsave
xor
or
fdivs
xorb
sub
fildll
or
iret
sti
sbb
popa
xor
dec
mov
push
push
aaa
scas
xor
call
mov
cmc
movsb
dec
xchg
mov
lock
pushf
inc
pushf
clc
cltd
mov
ret
jne
sbb
hlt
or
dec
ds
cli
loope
fwait
add
shrb
ret
pop
xchg
jmp
mov
mov
ds
leave
sbb
cs
xchg
pop
nop
sbb
jle
lret
cmp
sahf
sub
and
es
mov
repnz
call
rclb
lods
and
jecxz
nop
add
cltd
xchg
push
stos
movsb
add
cs
clc
push
sbb
push
cmp
mov
jmp
cld
arpl
repz
dec
in
ret
fcomps
jae
mov
jl
push
daa
test
inc
in
test
jle
inc
push
inc
dec
sbb
and
dec
ror
xor
mov
push
addr16
lret
aaa
mov
mov
popa
jnp
bswap
mov
push
or
gs
mulb
mov
pop
repz
sbb
lcall
shlb
shll
pop
out
and
push
cmc
add
xchg
add
jl
xchg
cmp
scas
inc
xchg
dec
les
ret
jmp
daa
ljmp
inc
cmp
xor
adc
xlat
mov
andb
inc
movsb
outsl
adc
sti
dec
insl
mov
jl
cmp
repnz
sub
bound
sub
inc
xlat
push
aam
ret
jle
adc
jmp
int3
jecxz
xor
pop
ret
cli
lea
jmp
fildll
cld
cmpsl
mov
sbb
adc
xlat
pop
cmpsl
sbb
jbe
rolb
mov
pop
aad
lods
jp
mov
shl
sbb
dec
mov
fdivs
or
ja
mov
mov
jne
jle
rclb
jg
mov
repnz
in
imul
int
mov
mov
mov
scas
adc
xorb
sbb
out
icebp
sbb
dec
out
inc
xor
cmpsb
push
fs
dec
popf
fcomip
cmovb
jno
jb
push
js
aaa
cmp
ds
pushf
mov
add
sbb
fisubrs
and
push
sub
rclb
shrl
mov
outsb
frstor
pop
jbe
lahf
pop
sbb
xor
xchg
arpl
scas
sbb
mov
std
test
and
into
rcl
out
mov
pop
sbb
ja
push
mov
icebp
jge
iret
fildl
ret
shrb
mov
fs
jecxz
das
movsl
fucomp
jbe
inc
mov
ret
addr16
les
in
and
jnp
jp
inc
xchg
dec
xor
adc
inc
or
lds
rorb
scas
loop
pop
repz
test
xor
cltd
push
jbe
stos
mov
mov
dec
lcall
mov
push
mov
out
dec
fsubrs
sub
dec
daa
filds
loop
sub
shl
lahf
cld
pop
scas
xor
mov
push
cmpl
push
mov
shlb
push
sbb
adc
mov
cmp
sbbl
jecxz
adc
push
push
fistps
cmp
cmp
dec
push
in
mov
lret
push
ficompl
cmp
into
es
pop
jbe
cmpsb
dec
adc
mov
push
cwtl
adc
sub
cmc
xchg
dec
mov
sbb
nop
jge
sub
js,pn
pop
hlt
lds
loopne
outsl
pop
insb
cwtl
pop
cmp
leave
add
and
clc
mov
dec
notb
pop
jno
daa
jl
adc
repnz
lret
daa
in
sbb
xchg
cmp
imul
jbe
clc
cmc
cmp
pusha
cld
pop
stos
pop
push
and
fwait
stos
pop
fwait
push
andl
movsl
sarb
push
testb
mov
sbbl
insb
sbb
jne
add
lahf
hlt
dec
mov
push
inc
jmp
int
vunpckhps
addb
cltd
xchg
loopne
fbld
mov
fs
xorb
and
ficompl
bound
sarl
add
sbb
dec
ficomps
mov
mov
sti
test
push
in
xor
fisttpll
lret
dec
push
hlt
lret
icebp
push
xchg
sbb
fdiv
stos
push
fxam
add
mov
sub
mov
dec
add
mov
ja
pusha
push
sahf
shll
jae
lds
out
pusha
les
cltd
pushf
sub
xchg
push
pushf
push
out
dec
adc
jg
aam
and
fnstcw
or
mov
pop
xchg
ja
sub
loope
xor
and
dec
inc
jg
outsl
cmp
aas
adc
push
mov
mull
push
popa
in
lret
add
jno
jmp
mov
inc
repnz
mov
jle
fcmove
inc
subb
test
fimull
inc
mov
in
hlt
sub
jl
lret
push
xchg
insb
fcomps
cld
pop
aad
cmpsl
pop
sbb
popa
adc
sub
sbbb
sahf
fsts
adc
shll
or
ja
sbb
cltd
in
lods
aas
mov
jnp
pop
add
out
dec
ja
je
push
imul
movsb
add
test
push
shlb
mul
pop
lods
aas
loop
call
dec
pop
rcll
aaa
inc
daa
sbb
jmp
fwait
jne
jg
jb
aad
xor
mov
push
sti
jmp
test
cli
dec
imul
ret
dec
mov
mov
push
fidivrl
push
xor
push
jecxz
mov
xchg
orl
jge
push
cs
loop
lock
jecxz
push
cmp
xchg
mov
xchg
push
cmp
shr
jns
neg
rolb
shrb
jbe
pop
xchg
daa
jne
inc
enter
cld
stc
out
jmp
xchg
xchg
mov
mov
mov
enter
push
scas
sbb
add
lock
outsb
mov
inc
les
sub
adc
fldcw
cmp
xor
lret
mov
xor
clc
into
mov
cmp
xlat
mov
jno
cli
daa
cs
push
mov
push
ret
dec
call
pop
mov
xchg
pusha
jle
or
inc
push
loop
mov
add
push
jnp
scas
mov
add
cltd
fcmovbe
enter
add
lock
mov
in
loopne
scas
push
push
pusha
rcll
arpl
fnsave
popf
add
mov
fdiv
rorb
mov
sub
stc
imul
mov
inc
nop
fstps
jbe
mov
or
adc
jb
in
mov
or
loopne
xchg
mov
cld
cmpsl
std
or
loopne
out
aaa
mov
and
imul
sbb
test
mov
cmpsb
outsl
es
cmp
das
stos
dec
xor
into
mov
sarb
fcoml
add
cmpsl
rorb
ret
aaa
mov
test
xor
push
cltd
call
jbe
out
mov
fsubrl
fmull
mov
cld
repz
mov
xchg
cltd
into
in
cmp
add
sub
std
mov
push
ss
das
sbb
aad
call
out
adc
mov
xor
adc
ret
mov
inc
or
in
lea
inc
mov
les
insb
ljmp
adc
fsubs
cmpsl
testl
and
add
push
addl
mov
pop
pop
mov
mov
popl
addb
sub
cmp
daa
pop
imul
mov
inc
lds
push
cwtl
hlt
sti
insl
adc
fs
aas
dec
jmp
enter
icebp
adc
xchg
jne
sti
fldenv
xor
and
dec
mov
xchg
cmpsb
sub
mov
fs
inc
or
je
mov
push
dec
sbb
mov
cmc
mov
in
sub
incb
cli
lcall
lods
or
popa
xchg
jbe
dec
push
divl
aam
xor
push
sbb
into
mov
divb
cld
mov
iret
push
mov
push
fadds
and
ds
add
imul
outsl
aad
cmp
sbb
cmp
ja
push
xor
pop
jp
clc
pop
dec
cmovge
xor
and
sbbb
xchg
sub
cmp
cli
shl
xor
and
rcll
or
es
jmp
sti
push
push
pop
adc
cmp
dec
push
bound
addl
stos
jl
mov
sub
inc
mov
and
push
lcall
mov
lret
cmc
movsb
dec
add
jae
lret
mov
inc
add
sbb
push
or
in
xor
repz
pop
or
cmp
fsts
jno
xchg
sub
test
inc
mov
cmpsb
popa
mov
and
sarb
or
shl
jno
pop
mov
mov
and
add
fucomi
xchg
dec
out
cmpsb
test
out
inc
push
daa
sti
push
mov
aas
push
mov
scas
aaa
cmc
shll
je
repz
cltd
jmp
fcomip
xchg
add
xor
loop
mov
dec
rorl
sub
ljmp
test
cmp
loop
push
inc
cs
pop
rolb
sarb
pop
pushf
mov
mov
xor
in
pop
sbb
shll
pop
xchg
push
sub
cltd
jbe
repnz
in
cmp
jp
ficomps
int3
xchg
sbb
push
shrl
pop
inc
add
mov
mov
push
popf
dec
loopne
test
mov
xor
insb
out
mov
inc
inc
sub
mov
into
scas
jmp
outsl
shlb
adc
and
test
add
cld
or
add
in
mov
mov
sbb
push
aas
mov
pop
sahf
or
loope
adcb
into
xor
sub
ljmp
push
jmp
mov
movsb
and
xor
push
dec
fmul
xchg
hlt
dec
add
xor
test
push
or
movsb
lret
incl
lcall
dec
fstp
fldcw
add
and
dec
fwait
ljmp
pusha
cmp
xchg
mov
xor
in
in
test
mov
sbb
or
dec
inc
scas
std
mov
outsb
bound
divps
flds
add
outsl
inc
inc
insb
pop
push
mov
addr16
inc
insb
outsb
pop
lods
es
jl
cmc
jecxz
adc
jae
cmp
stc
stos
pop
movsl
dec
dec
fists
fcompl
cmp
bswap
xchg
andb
iret
xor
mov
fldz
fnsave
add
add
pop
xor
mov
sbb
xor
shlb
push
pop
mov
add
aas
test
out
scas
filds
push
or
adc
into
inc
int3
fdivrl
cmp
sbb
pop
das
aaa
mov
in
cmp
mov
jnp
jb
jmp
jbe
mov
repnz
or
jne
and
aas
or
outsl
dec
cmc
test
sbb
push
movsb
dec
in
jge
or
rolb
imul
inc
inc
jae
inc
dec
pop
jmp
adc
lret
loope
pop
dec
loopne
sub
add
test
sub
fsubrl
fwait
jle
mov
insb
xlat
sbb
cld
js
jbe
loope
dec
or
sub
sahf
cld
cmpsl
adc
stos
lods
sar
imul
loop
xor
divl
dec
in
in
mov
fsts
push
pop
cmp
mov
int
dec
or
push
pop
fwait
enter
inc
fsubrl
add
scas
cltd
jnp
jmp
xchg
xchg
nop
push
addl
fdivl
jge
aad
notb
mov
enter
fistps
clc
lahf
addr16
and
popf
cmp
iret
data16
lds
out
test
pusha
sbb
adc
int
mov
push
fdivrp
adc
sub
cmpb
adc
and
and
aas
pusha
mov
mov
add
or
and
test
push
or
stos
icebp
movsl
pop
daa
push
test
imul
pop
add
pop
or
xlat
rcrl
or
in
aaa
mov
xchg
rcr
or
push
daa
sti
sub
mov
je
dec
mov
fwait
mov
jo
leave
mov
xor
loop
in
into
dec
jbe
fldt
sub
bt
lahf
dec
jg
jg
test
cmp
push
push
push
mov
push
sbb
aam
icebp
icebp
inc
iret
test
mov
pop
jl
stos
mov
mov
fimull
mov
call
loope
jnp
adc
shlb
mov
dec
pop
cmpsl
pop
or
add
addr16
jecxz
xchg
xor
xor
mov
pop
lret
inc
fstps
xchg
cmpsb
ja
shlb
adc
mov
xchg
inc
inc
xchg
ret
das
pop
je
inc
push
mov
mov
inc
stos
inc
lds
ret
sub
ljmp
push
insl
ret
clc
add
dec
cmpsl
cs
lcall
pop
and
cld
imul
jmp
and
add
rorl
enter
outsl
mov
pusha
test
adc
sahf
clc
cld
dec
mov
insl
inc
int3
xchg
xchg
inc
dec
xor
jle
loopne
cmc
aaa
push
jo
or
or
mov
mov
xchg
movb
cltd
hlt
dec
cmpsb
mov
fistpl
icebp
aam
movsl
jno
mov
cmp
ficomps
lret
or
hlt
dec
sub
jg
repnz
mov
inc
lea
rclb
ret
push
faddl
mov
cmp
aam
xchg
inc
out
fcompl
ds
mov
movsl
pop
jno
jmp
aam
push
jmp
mov
xor
inc
inc
decl
imul
ret
shl
in
cmpb
sti
lea
sbb
ljmp
inc
mov
lds
sub
push
sbb
push
out
cs
xchg
sbb
xor
inc
mov
dec
inc
cs
mov
daa
ljmp
into
jno
adc
mov
daa
push
add
and
pop
pop
in
lcall
mov
push
mov
outsb
nop
pop
enter
pop
lahf
push
and
pop
add
cmp
es
fsubl
dec
pop
imul
js
addb
or
lret
imul
sub
sbb
xor
sbb
imul
daa
lods
mov
inc
or
mov
lea
out
inc
aam
dec
insl
mov
gs
bound
sbb
je
mov
loop
sub
mov
leave
push
cmp
jnp
adc
mov
repz
shr
aaa
je
inc
nop
test
mov
sbb
icebp
mov
fisubs
repz
xlat
push
jae
repz
add
add
mov
loope
enter
inc
fisttps
clc
xorb
jmp
lret
out
xor
jp
cmpsl
adc
and
rorl
mov
and
inc
bound
mov
ss
in
ja
daa
or
in
shrb
stos
sbb
iret
adc
inc
movsb
cmc
cmp
add
je
push
mov
dec
ljmp
dec
cmp
push
stc
add
pop
in
mov
add
mov
lcall
xchg
jns
fisttpll
lret
aam
cmp
int
cmp
gs
inc
xchg
mov
shrl
mov
adc
decb
call
adc
repz
test
pusha
jbe
push
ret
popf
push
lahf
and
jnp
rcrl
add
pop
and
shl
loopne
mov
sub
stos
sahf
sbb
xor
out
sahf
das
sti
pop
lock
mov
mov
jl
fwait
inc
cmpsb
pop
jmp
mov
inc
les
out
mov
fimull
rcrl
cmp
subl
stc
scas
xchg
pop
mov
imul
mov
adc
outsb
xchg
dec
xor
adcl
sub
xor
fnstsw
dec
dec
mov
mov
jle
and
pushf
jle
mov
fdivrs
push
mov
and
mov
xor
test
inc
mov
jp
mov
mov
mov
and
jb
bound
cwtl
aam
mov
notl
jno
jp
dec
mov
sub
nop
int3
jecxz
rcrb
cmp
movsl
mov
mov
mov
repz
es
xor
xor
and
notb
popf
and
mov
lock
mov
sbb
andl
or
out
lds
jg
xchg
jne
loopne
mov
sub
mov
cmp
fstpl
stos
xor
mov
popa
push
fists
pop
fwait
adc
lods
inc
mov
dec
sbb
fnstsw
cmc
daa
iret
imul
rcr
popf
xchg
cli
fsubl
cmp
jg
push
and
or
lret
push
std
rclb
sub
xchg
arpl
add
jno
xchg
cli
pop
fidivrl
lcall
add
jb
scas
idivl
push
cmp
mov
ret
and
sbb
sbb
repz
fdivl
mov
xchg
lahf
push
shlb
pop
ret
scas
mov
rolb
inc
test
sub
cmp
arpl
loop
mov
pop
xlat
loope
arpl
dec
lods
cmp
jg
jbe
out
int3
mov
push
jl
inc
aaa
cmp
aam
push
dec
xchg
popf
pop
mov
push
lcall
je
jb
xchg
int3
out
cltd
imul
aaa
scas
fs
xchg
sub
repnz
sbbl
cmpsb
dec
jo
fstpt
push
add
test
inc
in
and
sub
mov
mov
out
push
xchg
mov
aaa
xor
das
out
fistl
out
xchg
or
sbb
loopne
and
inc
push
out
fdivl
push
cmp
sti
sub
jge
cmp
push
push
adc
std
push
vcmpss
push
movsb
jecxz
ret
cmp
xchg
xor
mov
push
or
jno
add
mov
sbb
sarb
aad
mov
das
sub
mov
cli
call
sti
sub
jmp
addr16
adc
cld
lret
sbb
int3
dec
imull
icebp
xor
ret
in
adc
sub
mov
js
dec
mov
add
adc
cmp
gs
lcall
adc
xor
packssdw
pop
mov
negl
sub
hlt
mov
ss
test
cmpsb
fldl
mov
hlt
cwtl
mov
sbb
xchg
push
cmpsl
or
movq
push
dec
mov
je
fwait
xchg
notl
pop
jne
or
lret
lahf
cld
sub
sbb
jle
outsb
mov
popf
adc
loope
sub
jnp
jne
dec
and
mov
clc
xor
add
jne
pop
mov
jbe
xor
outsl
lods
pop
jns
mov
jl
bound
jnp
and
scas
shll
leave
out
add
mov
inc
outsl
fnstcw
or
dec
movsb
jmp
inc
gs
cmp
cmp
lcall
mov
cs
or
or
fs
lods
data16
sbbb
pop
mov
dec
mov
push
mov
adcb
bsf
dec
add
test
leave
repz
or
movsl
cwtl
lds
bound
xchg
lret
add
jmp
out
pop
mov
xchg
jo
jne
lds
ja
sbb
in
sub
pop
pop
xor
into
mov
clc
add
sub
arpl
adc
fnsave
lret
arpl
popa
icebp
sub
aaa
lds
and
enter
fsubr
movsl
add
dec
jo
push
xor
mov
out
push
or
lahf
loope
sbb
lods
cmp
sahf
into
out
lods
pop
fcmovnbe
fmulp
sahf
push
jns
cs
and
fwait
scas
aam
movb
addr16
dec
or
cmp
xchg
ret
ret
icebp
jl
or
test
mov
aaa
movsl
sbb
aam
pushf
lcall
pop
or
test
fucom
bound
pop
bound
cld
or
je
push
or
dec
push
movsb
mov
aam
xlat
mov
jns
dec
or
xchg
jmp
in
icebp
sub
fcmovne
mov
ror
fsts
sbb
std
fists
aad
pop
inc
pop
fdivrl
outsb
iret
shlb
shlb
nop
cmc
or
xchg
lea
rolb
add
addr16
adc
je
loopne
adc
inc
les
xchg
push
out
inc
xor
jg
add
push
lds
sahf
inc
add
ds
inc
push
in
loope
cltd
ret
loope
xor
push
fdivrs
push
and
add
mov
out
scas
aas
fmul
xor
cli
imul
in
sub
cmp
xor
xchg
es
in
sbb
movsb
dec
jmp
loop
mov
outsb
xlat
or
data16
inc
or
arpl
add
sbb
xor
jle
mov
loope
mov
pop
insb
jp
pop
xchg
daa
fisubl
das
mov
xchg
mov
push
xchg
pop
test
pushf
shl
dec
cmpb
pop
test
ds
add
test
mov
mov
mov
sbb
cld
add
arpl
and
fdivrs
pop
jp
leave
xor
jbe
sbb
mov
int
push
dec
and
mov
jmp
or
mov
add
mov
and
inc
add
shll
sub
lock
jo
xor
andl
lahf
cmp
ja
imul
mov
mov
pop
pusha
ds
cmpsb
add
clc
sbb
popf
outsl
or
mov
mov
sbb
stos
mov
xor
jecxz
shrb
fisubrs
call
into
jb
jge
sbb
mov
fwait
inc
or
jl
mov
sub
lret
out
rcl
inc
sahf
popf
or
lods
int
xor
jecxz
cmp
sub
jge
in
pop
push
das
ret
dec
call
fisubs
out
pop
sub
cmp
fidivrs
inc
bound
stos
jp
mov
xchg
sbb
daa
fildll
cmc
test
jl
mov
pop
push
pop
jo
ja
incl
add
xlat
push
mov
and
mov
xor
xchg
or
mov
int
enter
das
xchg
pop
loope
sub
adc
inc
lock
pop
scas
push
add
mov
test
and
movups
mov
icebp
aam
imul
sub
inc
jno
cmp
gs
out
lock
mov
test
out
jns
stos
or
mov
rol
inc
lods
pop
scas
cmc
mov
or
ja
and
inc
pushf
adc
and
loopne
je
imul
adc
adc
popf
push
inc
aam
mov
jl
jb
loop
cmpsb
nop
adc
sbb
lahf
jne
and
jb
xchg
jo
xchg
adc
push
mov
add
push
xor
cmpsb
arpl
mov
test
mov
data16
call
stos
push
shlb
in
cmp
hlt
test
orb
dec
cs
hlt
pop
mov
aas
mov
xchg
and
push
mov
adc
addb
in
and
jo
repz
xlat
mov
sub
mov
xchg
mov
std
pop
sti
dec
mul
mov
in
outsl
add
add
or
lods
pop
sbb
or
iret
cmc
or
jb
or
test
ljmp
mov
jecxz
jle
subl
into
jae
push
adc
push
inc
fidivrs
repz
cmc
icebp
out
loop
mov
test
repnz
add
mov
jl
jns
lret
xor
push
push
or
cmp
pop
cmp
mov
jo
in
pop
out
and
insl
adc
jnp
pop
and
enter
pop
lock
add
outsl
or
in
push
add
inc
arpl
mov
leave
or
xchg
aaa
lods
adc
in
sbb
pop
movsl
inc
mov
push
mov
rcrb
pop
mov
push
loope
popa
addb
pushf
dec
cmp
out
inc
sub
pop
stc
sbb
nop
les
mov
ret
pusha
rorb
ljmp
mov
pop
pushl
dec
pop
leave
pop
orl
outsb
or
pop
in
xchg
out
sbb
ret
cmpsl
sub
and
es
and
or
outsl
pop
push
sub
pop
sahf
ss
fistpl
mov
insb
xchg
rcrb
je
dec
sub
negb
dec
cwtl
aam
cmp
mov
xor
dec
repnz
xchg
mov
aad
imul
fwait
cmp
push
mov
inc
int3
sub
push
icebp
xchg
lahf
push
in
enter
ret
outsb
out
pop
scas
push
mov
notb
out
jbe
std
outsl
mov
sub
pushf
mov
test
aaa
jp
xlat
pop
imul
popa
sarl
cmp
scas
add
or
addr16
mov
inc
push
adc
repnz
cwtl
or
andb
sahf
pusha
sbb
mov
push
insl
xor
xor
fwait
or
push
or
mov
mov
xchg
pop
int3
outsb
and
jp
nop
jmp
incl
pop
mov
sbb
jle
loop
js
pop
movsb
stos
or
dec
push
sbb
xor
and
dec
sub
and
jmp
mov
mov
ds
mov
adc
aaa
pop
inc
inc
dec
sub
lock
inc
scas
mov
jmp
lahf
mov
lret
fnstsw
xchg
lahf
mov
adc
imul
std
das
xchg
adc
sub
mov
movsb
mov
or
inc
pop
arpl
jno
js
push
cltd
test
imul
xor
or
xchg
xchg
shll
mov
dec
and
cmpl
scas
dec
xlat
je
test
loope
fiadds
sbb
test
jmp
insl
xchg
mov
in
enter
loope
mov
xchg
mov
add
push
idivl
aam
lea
repz
jo
adc
inc
rcrb
push
cmp
orl
test
push
fcoms
jno
mov
jg
inc
inc
popa
xchg
or
mov
xchg
popf
in
lahf
outsb
dec
repz
imul
xor
xchg
js
test
popf
jle
cmp
imul
aam
leave
aam
lods
inc
xor
in
mov
and
out
rcll
int
inc
mov
inc
pop
push
shr
flds
popa
imul
fnstcw
nop
add
jo
and
jnp
add
adc
pusha
lea
test
inc
out
pop
jo
inc
scas
jne
das
xchg
cld
push
mov
rcl
sti
leave
jle
sbb
pop
xlat
cld
push
xchg
andl
adc
aas
adcl
and
shlb
or
pusha
xchg
ret
mov
sub
xchg
pop
mov
gs
ss
mov
xchg
inc
push
cmp
or
jl
outsl
daa
das
push
xlat
lahf
pushf
bound
mov
mov
in
in
and
or
je
adc
sti
and
imul
and
frstor
das
fs
mov
push
cmc
xchg
iret
mov
jle
add
popa
pushf
mov
repz
inc
les
or
and
mov
and
mov
and
in
hlt
data16
fdivrl
into
daa
ficoms
push
imul
repnz
frstor
sbb
jns
mov
xchg
lret
push
mov
stos
jecxz
clc
fimuls
int
jne
push
push
jns
push
lock
adc
or
es
sbbl
jge
add
fs
fcompl
jp
outsb
dec
fiaddl
or
pop
pop
pop
mov
test
lods
push
stc
fs
in
decl
jns
out
jl
stc
nop
xor
push
aad
int3
cmp
jb
lahf
cwtl
aas
or
movsb
push
and
add
dec
mov
rcrl
nop
push
scas
sub
ret
loope
shll
inc
xor
pusha
into
jecxz
lea
sbb
xchg
or
out
sub
jns
xchg
test
sub
mov
sbb
mov
xchg
into
aam
pop
cmp
dec
or
mov
movsl
out
loop
add
mov
sub
add
shlb
mov
push
jp
push
pusha
std
aam
sahf
mov
inc
dec
push
xchg
loope
pop
clc
loopne
popf
insb
inc
or
gs
sbb
fcmove
push
loope
ss
rclb
sbb
mov
stos
nop
jae
jo
adc
or
stos
imul
or
lds
sbb
sbb
inc
pop
add
cmp
movsb
test
sbb
sarb
push
inc
shrl
jns
test
enter
sub
shll
repnz
mov
insl
mov
call
imull
adc
fcomps
ss
push
pop
or
hlt
push
pop
mov
push
mov
cmp
dec
mov
lods
les
outsb
mov
push
push
mov
ljmp
dec
mov
xchg
pop
jne
add
dec
lods
mov
scas
mov
pop
aas
scas
insb
aam
loope
cmpsb
loopne
fcmovu
push
dec
cmpsl
out
popa
in
add
loopne
jmp
movsb
dec
mov
lcall
fs
cld
xchg
jg
adc
mov
push
jbe
inc
sub
lea
cmp
divl
inc
mov
jp
pop
pop
or
ret
xlat
jne
das
imul
mov
or
in
mov
fistl
shlb
lahf
int
bound
and
repz
in
mov
in
cwtl
clc
sbb
and
lret
cmp
pop
jnp
and
push
rcrl
pop
inc
nop
push
pusha
outsb
add
mov
test
sbb
add
repnz
sub
inc
pop
adcb
fbstp
mov
ret
sar
lret
adc
out
dec
test
addr16
cmp
xchg
and
pop
and
loope
cwtl
stos
fldcw
sub
add
push
outsb
sub
push
popa
xorb
cmp
mov
jmp
inc
and
dec
cmp
lret
roll
or
mov
sub
outsl
cmpsb
inc
xchg
incb
insl
decb
xor
lcall
push
insl
popa
xchg
dec
aas
push
stos
nop
jmp
xchg
loop
test
sbb
out
clc
stos
inc
jecxz
sti
xchg
dec
pop
adc
push
adc
loopne
cmp
push
loope
sub
shl
pop
jl
ljmp
test
mov
insl
and
mov
push
mov
sub
inc
int3
stos
dec
fwait
xor
adc
jl
sub
jo
test
adc
in
inc
sti
pushl
incb
xor
push
add
pusha
in
push
adc
sbb
nop
jae
mov
fildll
adc
dec
inc
adc
dec
inc
inc
cwtl
push
out
xchg
mov
loopne
into
xchg
test
ljmp
mov
pop
lret
lret
ret
mov
xor
fisubs
sarb
adc
loop
movsl
lcall
jge
ss
xchg
int3
addr16
jmp
and
adc
xchg
pusha
ja
adc
cld
jb
aad
ret
fcmovnb
loope
aam
int3
in
inc
mov
out
mov
mov
mov
dec
aad
movsl
dec
cmpsl
sbb
inc
xlat
fstpt
xchg
out
mov
or
icebp
push
ret
inc
and
sbb
cmp
lds
pusha
push
mov
test
mov
dec
mov
mov
fidivrs
neg
sbb
loop,pn
je
sbb
jl
dec
movsl
mov
rorb
push
je
clc
test
inc
es
test
xchg
sub
pop
add
mov
push
jmp
loope
push
stc
jb
dec
shl
xor
cmp
insb
mov
stos
sbbl
push
lea
fchs
mov
xchg
dec
in
js
xor
test
or
push
movsbl
ds
cmp
inc
mov
insl
pop
cli
sub
andb
in
push
xchg
sti
cmp
jno
and
cmpsb
pop
testb
std
xchg
mov
fcoms
outsb
push
dec
jno
add
outsb
lods
sbb
cld
add
rorb
scas
pusha
push
xor
dec
or
aas
xor
daa
mov
vsubps
pop
addr16
jl
push
and
inc
push
push
in
stos
mov
cmp
inc
mov
mov
jnp
test
mov
jmp
in
stos
pop
stos
pop
inc
scas
and
loop
cmp
add
sub
sti
sahf
mov
jae
xor
pop
xchg
into
ficompl
adcl
sub
in
pop
inc
addr16
ja
sub
stos
jo
xor
hlt
test
or
jg
ret
pop
jb
sub
jecxz
test
loope
jne
and
adc
popa
mov
cmp
cli
sbb
jl
xchg
out
or
aad
mov
push
loopne
mov
sti
or
pop
pop
and
inc
adc
aad
lock
mov
mov
xor
push
nop
and
icebp
mov
sbb
push
clc
xor
insb
out
mov
cmp
lcall
sub
fnstsw
pop
stos
push
ficoml
mov
sub
imul
inc
xchg
leave
lret
inc
out
sbb
cltd
mov
pop
lea
inc
pop
xor
mov
subl
jp
xchg
ds
inc
loope
stos
push
push
repnz
out
imul
clc
mov
ljmp
rcll
mov
lods
and
xchg
push
sti
pop
pop
sub
push
dec
xchg
mov
or
scas
into
sbb
jge
repnz
adc
fists
stc
lret
lods
push
addl
pop
and
and
mov
jo
aaa
in
cli
and
ljmp
sahf
pushl
xor
stos
sub
or
clc
xlat
pavgw
push
pop
and
movb
mov
fs
inc
in
sti
ret
adc
popa
lcall
shll
dec
mov
mov
daa
pop
jnp
xor
lcall
test
roll
shll
movsbl
dec
mov
mov
in
pop
jmp
adc
dec
pop
idivl
jp
jo
imul
jne
cwtl
stos
add
dec
dec
jg
pusha
data16
xchg
add
push
jo
movhps
js
xor
sti
push
pop
cvttps2pi
scas
add
dec
sub
pop
out
sbb
data16
mov
xor
and
jp
xlat
loopne
adc
icebp
std
das
xor
in
andb
in
jae
loope
jp
psraw
roll
icebp
cli
xchg
fs
push
xchg
sub
jo
push
inc
ja
xchg
sbb
test
cmpsl
xchg
xchg
pushf
cmp
bound
adc
add
gs
mov
daa
sti
in
cli
aad
sub
imul
inc
xor
sub
and
pop
cmp
imul
or
push
adc
adcl
cltd
sbb
sbb
adc
icebp
test
cmpsb
sti
push
xor
jmp
movsb
cs
sbb
sti
movsb
test
in
xchg
xor
mov
and
mov
out
or
stos
loopne
adc
repnz
dec
dec
fnsave
leave
loop
mov
mov
out
dec
push
rclb
idivb
and
sbbb
int3
mov
mov
shl
sbb
xchg
xor
lret
jno
pop
pushf
sub
cltd
push
fwait
data16
or
fdiv
outsb
sub
scas
outsl
sbbl
std
loope
dec
mov
sbb
jl
push
sbb
mov
inc
lds
in
fldenv
std
fmull
mov
jo
inc
lcall
cld
pop
aaa
or
scas
xchg
notb
xchg
insl
xchg
je
outsb
insb
push
cmp
idivb
dec
or
mov
mov
adc
rcrb
mov
push
ja
jp
mov
xchg
mov
xchg
dec
push
scas
dec
mov
jle
andb
loopne
pop
mov
popa
dec
or
lods
cmpsb
aad
pop
stos
add
shlb
jb
or
sub
pop
std
rcrb
test
sbb
inc
leave
in
insl
jae
xchg
push
notl
ja
pop
xor
repnz
cltd
jge
std
bound
popl
pop
js
loopne
mov
stos
int
test
daa
subl
test
mov
add
sub
or
int
aas
fucomi
dec
hlt
or
mov
scas
xchg
adc
rcrb
xlat
inc
fidivrl
shr
pop
and
bound
pop
push
or
xchg
xchg
jnp
loop
jb
xchg
xchg
pop
push
movups
in
test
mov
fildl
cs
sarb
insb
mov
sbbl
jg
adc
enter
adcb
dec
insb
ljmp
imul
add
jbe
jo
mov
dec
push
push
jmp
add
push
lds
loopne
into
mov
inc
mov
lahf
cltd
inc
lret
mov
push
jmp
sub
mov
cld
sbb
inc
or
pushf
mov
fisttpll
fstpt
inc
cwtl
es
dec
sub
ds
scas
lret
mov
sub
mov
ljmp
movsl
or
in
sti
cltd
cwtl
int
pop
mov
cmp
pop
sbb
ljmp
mov
jle
in
inc
mov
and
loop
maskmovq
dec
push
push
xchg
sub
cwtl
or
xor
push
sub
pop
dec
sahf
and
push
push
jnp
dec
xchg
jnp
push
sbb
pop
es
mov
out
aad
dec
jae
rolb
lret
xor
cmc
daa
inc
push
adc
dec
mov
jo
bound
stos
movsl
xor
dec
cmp
out
adc
ss
sbb
push
push
icebp
adc
and
cmp
pop
insb
push
sbb
daa
loope
cmpsl
scas
jo
xchg
aam
lods
cltd
mov
add
xchg
nop
lsl
xor
xchg
andb
aad
mov
dec
dec
inc
ficoms
js
in
das
idivb
call
out
jb
and
dec
push
pop
mov
mov
popa
rcll
pop
ljmp
jp
cmp
dec
lds
inc
icebp
fwait
xorl
lret
inc
adc
out
fisttpll
in
cmc
cmp
pop
das
mov
push
and
insb
andb
xor
hlt
imul
fdivrl
dec
ret
push
mov
mov
jno
lret
push
mov
movsb
test
stc
pop
ror
mov
jb
mov
mov
push
pop
arpl
jp
mov
sbb
outsb
mov
roll
jmp
fwait
test
shll
cld
enter
enter
in
int3
sub
lock
into
test
dec
rorb
mov
push
push
mov
add
xchg
jmp
and
xchg
or
fidivs
adc
push
mov
mov
fdivrl
lods
insb
clc
insl
mull
pop
outsb
mov
push
lcall
int3
sbb
sbb
scas
lods
and
inc
ds
cmp
xor
leave
jne
dec
mov
adc
loop,pn
cwtl
dec
lds
ficoml
shll
jecxz
sarb
std
add
cmpb
add
sbb
in
gs
fimuls
lahf
and
lea
sub
sub
lods
add
dec
sbb
std
adc
sub
ss
lahf
aad
shr
sub
divb
xor
jge
and
jb
mov
cmpsb
sbbb
mov
das
sub
ds
das
sbb
dec
ret
xlat
lea
ficoml
cmpl
inc
hlt
imul
mov
or
into
push
paddd
ss
fisttps
pop
and
jl
and
mov
push
sbb
fsubrl
popa
nop
dec
je
sbb
xchg
js
jo
pop
aaa
mov
or
xchg
ds
push
sti
movsb
mov
mov
pop
test
mov
nop
enter
ss
xlat
lahf
sbbl
mov
lret
je
js
loop
pop
hlt
pop
popf
lods
add
clc
sbb
movsb
clc
fdivp
fwait
mov
and
sub
stc
pop
mov
xchg
sbb
ds
flds
sub
gs
pop
xor
sbb
pop
sbb
jb
test
roll
test
roll
xchg
lock
fs
int
pop
mov
ss
xchg
inc
jne
ljmp
jmp
dec
adc
sbb
insb
stos
lods
inc
jnp
rcr
lods
mov
xor
lcall
add
xchg
in
loopne
mul
push
adc
mov
stc
sbbl
out
lea
rcrl
call
loop
push
mov
call
mov
leave
inc
jmp
jmp
lret
mov
aam
stos
xchg
fldl2t
lcall
fcmovbe
sar
jge
out
cld
ljmp
sub
sbb
imul
jne
sub
into
xor
outsb
pop
cs
fstpt
fs
pop
adc
and
jns
pusha
sbb
pusha
les
rcr
orb
add
xchg
dec
mov
jne
cmp
pop
outsl
fnsave
push
xor
xchg
push
std
in
out
mov
arpl
or
or
adc
call
test
ja
std
insb
push
sub
jne
and
push
mov
sub
clc
jmp
push
outsl
mov
out
dec
mov
loopne
sbb
iret
mov
ja
add
movl
push
std
je
imul
shrb
jns
or
test
mov
pop
hlt
push
repnz
out
lods
adc
inc
into
std
and
int
jnp
cmpsl
push
shrb
nop
push
daa
jo
pop
xchg
adc
mov
jmp
scas
lret
popf
pop
movb
jmp
outsb
aaa
dec
pop
hlt
rol
sbb
pop
add
daa
ret
gs
sub
push
in
test
mov
mov
mov
rorw
jmp
push
ljmp
xchg
mov
scas
pop
xor
xorl
ja
xchg
repz
cmp
pop
or
das
xor
jne
jnp
jb
enter
js
mov
xchg
add
notl
mov
jbe
xor
jg
mov
subb
push
fildll
insb
jl
call
aas
xor
cmp
mov
add
mov
mov
adc
mov
dec
mov
jnp
fdivp
xchg
push
movsb
das
sbb
inc
sbb
out
dec
inc
pop
lods
movsl
insb
out
mov
fwait
sbb
xchg
nop
fidivrl
cwtl
jnp
clc
adc
cmp
lods
int
out
dec
pop
daa
orl
mov
jno
fcoms
xor
stos
or
add
mov
js
jle
xor
jecxz
repnz
addr16
and
daa
aam
test
sti
pop
cmp
adcb
jp
loopne
mov
mov
movsl
lods
adc
mov
add
mov
sub
xchg
fistps
aam
adc
dec
ss
or
cmpsb
arpl
ret
pop
mov
cltd
popa
adc
lea
and
xlat
or
jnp
pop
iret
push
cmp
js
enter
repz
push
ljmp
jbe
xorb
mov
mov
push
movsb
jnp
push
mov
addr16
inc
mov
lret
mov
in
mov
sub
std
insl
lcall
push
and
inc
call
sub
jge
les
xor
cmpsb
hlt
cmc
jmp
mov
or
push
and
jl
push
test
jmp
fisubs
dec
stos
aad
gs
mov
dec
loop
loop
pop
loope
inc
fidivl
fbstp
lea
lahf
mov
imull
mov
fwait
sbb
out
jae
test
lea
push
movsl
sub
sub
loopne
imul
pop
dec
in
xchg
fsubs
stos
ja
ja
mov
fisubrl
sub
movsb
cli
aam
fucomip
jmp
and
js
cwtl
inc
testl
jp
movsl
xlat
inc
xchg
bound
sysret
jnp
popa
adc
outsb
repz
mov
or
mov
mov
mov
add
shrl
scas
add
aaa
dec
into
ret
call
jne
mov
pop
xchg
adc
arpl
imulb
arpl
ret
fs
rcll
mov
inc
sti
cmc
jp
cwtl
lahf
push
xor
stc
jns
data16
dec
inc
lods
pop
idivl
mov
inc
cli
cmp
cld
pop
pushf
cli
cmp
xchg
or
cltd
mov
lahf
mov
hlt
je
imulb
dec
inc
fucomi
xchg
sbb
dec
or
cmp
sbb
push
jmp
or
mov
push
rorl
ds
dec
pop
lea
mov
jge
pop
add
pop
jae
cmpsb
dec
sbb
mov
test
fcomps
ljmp
repz
fimull
xchg
jnp
cmpsl
push
movb
cmp
xchg
rolb
gs
add
mov
lock
out
insb
scas
sti
sub
pop
fbstp
push
mov
shufps
jle
inc
jecxz
mov
sbb
insb
and
xor
dec
rol
ljmp
int
je
jns
rcr
adc
daa
lds
adc
xor
lret
addr16
push
push
inc
jae
mull
outsb
mov
sets
fdivrs
sub
cmp
xchg
mov
mov
stos
and
jl
pop
cwtl
addr16
add
clc
rorl
ss
cltd
add
mov
js
fcompl
iret
lods
and
loope
push
popf
std
lret
cmc
pop
ret
in
in
pop
dec
push
cmp
jbe
andl
lods
mov
in
loop
pop
out
rorb
xchg
sahf
xchg
push
mov
xchg
xor
push
mov
fs
push
jns
pop
mov
lahf
mov
lret
dec
mov
das
pop
and
movsl
xchg
jns
push
and
sub
mov
mov
pop
out
jae
jp
dec
enter
and
or
scas
or
ss
popf
dec
dec
and
movsb
fwait
bound
push
je
pusha
sahf
pop
jb
cli
loop
xor
dec
lcall
leave
pop
adc
sub
loope
cmpsl
iret
shrb
jmp
sbb
sub
push
jbe
lods
lret
rorb
dec
push
ds
push
mov
out
mov
add
push
cmpsb
sub
loop
cmp
int3
jbe
xchg
and
push
fwait
clc
mov
insb
cld
jae
adc
pop
pusha
inc
sbb
pop
inc
push
adc
jns
cmp
lods
sbbb
push
arpl
mov
cmp
rclb
adc
aad
movsb
push
inc
testb
test
fildll
cmp
add
jp
adc
inc
pop
add
push
mov
call
clc
repz
arpl
add
repz
jne
or
dec
cwtl
dec
push
ret
inc
mov
fdivrp
cmp
clc
lea
gs
and
ljmp
lods
adc
or
test
mov
rcll
sbb
je
dec
rcrl
xor
pop
push
xchg
fwait
clc
push
pop
ljmp
fnstenv
adc
jge
imul
popa
ret
and
xchg
iret
or
lock
xor
cs
shl
pop
lock
ljmp
push
dec
cli
jg
mov
xor
xchg
aad
sub
add
mov
push
push
xchg
or
push
or
jns
cmp
int3
jmp
push
test
or
or
xor
xor
cld
roll
xorl
fst
outsb
mov
cli
pop
mov
ljmp
mov
dec
xchg
mov
mov
rorb
imul
test
ret
xchg
rcll
xor
pop
adc
insl
scas
adc
int
mov
paddsb
gs
jge
loope
add
ja
pop
int
xchg
add
cmp
dec
into
push
test
rclb
pop
shrl
mov
das
inc
cwtl
fstpl
mov
and
fstpl
aad
into
adc
addl
sub
xor
and
mov
xchg
in
shrl
call
sbb
test
cmpsb
dec
das
imul
mov
add
and
or
lock
imul
or
loopne
cmp
outsl
jl
loop
call
fs
in
xor
jns
add
into
mov
lahf
cltd
test
stos
add
dec
xchg
jns
aad
into
mov
icebp
push
xchg
popa
loope
mov
movsl
mov
popf
jbe
sub
fs
mov
popf
and
mov
add
add
fwait
xchg
dec
test
sbbl
pop
sub
ds
push
dec
push
and
dec
lds
add
mov
nop
ret
fcoms
sub
icebp
adc
sahf
movsb
jns
ljmp
outsb
test
pop
sbb
and
in
xor
clc
jbe
filds
repz
fstps
jle
cmp
jae
sbb
mov
lds
popf
hlt
lahf
aaa
cmp
stc
enter
outsl
mov
mov
rcll
xchg
mov
loopne
inc
loopne
movsb
ljmp
in
repz
jle
stos
push
sarl
xor
loopne
sub
int3
mov
cs
jl
adc
lret
test
ret
lock
sub
add
mov
add
cmp
cmp
pop
test
sub
outsl
jne
xchg
xor
sbb
pop
repz
outsl
inc
pop
sti
or
movsb
aas
xor
push
gs
sbb
xchg
inc
idivl
ljmp
mov
cmpsl
aas
or
pop
push
addr16
xor
scas
addr16
jnp
mov
pop
ja
rolb
hlt
xor
cmp
mov
push
shlb
pop
fldln2
xchg
lahf
mov
jns
fnstsw
xchg
aaa
xchg
movsb
fwait
aad
js
enter
cs
and
stos
adc
sub
inc
ljmp
int
jne
leave
aas
adc
rolb
imul
repz
fcmove
out
or
mov
lods
int
sbb
add
sbb
mov
xchg
lcall
ds
mov
ljmp
mov
jo
dec
mov
mov
test
sub
inc
mov
pop
push
sub
cli
pop
inc
movntq
and
insl
adc
mov
jge
jb
ret
or
mov
aam
xchg
loopne
xor
arpl
sarl
ds
mov
lahf
and
adc
jnp
popf
pop
dec
loopne
in
jb
xchg
mov
shlb
into
dec
leave
in
pop
push
adc
sbb
jae
shlb
inc
fsubl
jp
sbb
and
mov
lods
and
push
jl
adc
fdivl
jae
push
nop
test
xor
mov
mull
push
stc
jae
stos
repnz
in
push
pusha
mov
outsb
inc
sub
push
lret
dec
mov
mov
xorl
mov
mov
arpl
out
fldl
sub
icebp
push
push
pop
xchg
jl
pop
and
incb
xchg
mov
cmpsl
or
push
or
cmp
popa
jo
cwtl
fidivl
inc
psllq
pop
iret
inc
movsl
filds
pop
or
dec
inc
add
inc
mov
test
push
cmp
sbb
nop
leave
push
sub
outsb
or
pop
xchg
sub
mov
mov
movsb
lods
xchg
sub
add
and
sbb
mov
lret
inc
mov
lcall
rolb
mov
sub
push
inc
mov
shrb
into
inc
jo
cmpsl
dec
ffreep
fldenv
mov
mov
leave
fwait
roll
xchg
rcrb
cmp
sub
push
and
nop
movntq
in
pop
xor
lods
sub
lds
pop
add
cld
lock
in
jae
stc
nop
or
jmp
stos
mov
push
aas
xchg
or
push
popa
gs
and
aam
jnp
dec
sub
pop
repnz
fbstp
or
xchg
cmp
popl
daa
les
movsb
xchg
add
fldcw
sub
adc
movl
or
xor
scas
std
sbb
mov
pop
or
push
and
mov
push
sbb
mov
inc
enter
lea
dec
or
lret
nop
negl
and
pop
leave
mov
push
es
and
stc
in
cmp
jne
out
insl
pop
adc
mov
jnp
xchg
popa
xchg
xchg
arpl
repz
stos
jnp
ds
add
mov
mov
mov
cmp
cltd
push
cltd
jo
loope
mov
jge
adcb
inc
xchg
int
mov
mov
xor
cli
add
cwtl
pop
xchg
sbbb
ja
scas
jmp
out
scas
lret
clc
sub
ret
stc
and
push
jo
xchg
popf
sbb
push
mov
pop
pop
into
inc
inc
jmp
std
push
pop
je,pt
xor
ljmp
jmp
mov
sub
or
jmp
dec
mov
repnz
push
xchg
movsb
shl
mov
ror
outsb
lods
and
in
xor
sbb
rolb
dec
ret
fdivrp
cld
gs
pusha
mov
faddl
testl
lret
push
cld
adc
rcl
imul
jg
adc
imul
push
arpl
xchg
xchg
mov
clc
mov
dec
loopne
and
add
out
mov
mov
pop
sbb
cmpsl
fistpl
inc
rcr
or
lods
outsb
sub
pop
xchg
ds
push
mov
push
sbb
xlat
pop
sub
cmp
cmp
lock
cmp
xor
pop
jle
push
enter
jmp
test
test
test
pop
push
mov
movsb
xorb
lea
popa
pop
aas
pop
xchg
dec
mov
adc
daa
mov
lea
add
cltd
sbb
pop
les
xor
stos
jno
jmp
jbe
mov
dec
dec
push
dec
dec
daa
fidivs
mov
push
mov
mov
dec
das
sub
rcrb
test
mov
sub
push
outsb
adc
lcall
clc
pop
rcl
das
insb
sbb
inc
jg
into
mov
mov
orl
jmp
movsb
pusha
test
test
pop
inc
inc
add
insl
aam
mov
mulb
jecxz
adc
mov
and
decl
xor
icebp
fstps
iret
pop
jbe
test
jne
fidivrl
shrl
les
out
adc
divl
ljmp
xor
push
aam
loopne
inc
mov
popf
scas
rorl
mov
mov
idiv
push
or
cli
xchg
ds
mov
mov
loop
inc
lods
dec
cmpl
jg
adc
insl
or
fxch
mov
jge
nop
inc
ret
neg
sub
les
inc
jecxz
test
mov
int3
lods
pusha
pop
fnstenv
enter
add
adc
imul
pop
sahf
jg
mov
stos
arpl
dec
es
or
fldt
lret
mov
xchg
stc
jae
out
repnz
loop
mov
int
push
jmp
or
stos
loopne
loop
mov
fisubl
mov
push
push
stc
dec
mov
mov
scas
mull
jne
push
mov
lret
lcall
cmpsl
mov
out
and
jnp
dec
rcr
sbb
js
pop
data16
shrb
add
lret
push
test
aam
negb
xor
jp
jmp
out
xlat
push
es
fisubl
enter
jns
movsb
xor
and
inc
sub
mov
xchg
lea
rclb
or
adc
mov
orb
adc
out
pop
xor
push
ljmp
lcall
sub
xor
pop
mov
sahf
push
arpl
pop
ret
outsb
loope
aam
call
sub
xor
call
popa
or
stc
shrl
inc
lock
pop
sub
inc
adc
sahf
cli
xchg
cld
pushf
cwtl
fdivrs
std
test
cmp
xchg
bound
or
fadds
lock
pushf
aas
bound
jno
repnz
or
jge
dec
jmp
mov
jl
inc
adc
mov
cli
jno
and
insl
xchg
xor
cmc
aad
jmp
xchg
addr16
addr16
rcrw
in
inc
cmc
jge
xchg
xchg
inc
pop
andb
inc
pop
or
jg
jecxz
jle
out
cmpsb
pop
inc
jg
mov
int3
sub
fs
lret
cli
dec
jno
jne
jle
xor
mov
div
jp
cmp
adc
lahf
jecxz
inc
dec
lock
call
cmp
dec
stos
or
inc
neg
test
cmp
rcl
push
scas
shlb
mov
pop
std
adc
xor
ljmp
out
insb
or
mov
mov
push
adc
packsswb
push
push
dec
and
test
xor
cmpsl
xor
sti
lcall
inc
stc
cmc
fdivs
fnstsw
dec
inc
xchg
push
aas
test
cmc
inc
sbb
or
inc
xchg
decl
sarb
outsl
xchg
mov
xchg
scas
mov
lret
pop
sbb
sbb
xor
subl
call
push
xchg
dec
call
fwait
jg
fiaddl
sub
mov
rolb
ljmp
sub
int
mov
push
dec
and
push
xor
mov
shr
fsubrp
repnz
pop
cmpsl
sti
lea
pushf
inc
add
jo
push
xlat
jbe
mov
bound
call
js
icebp
aas
jmp
mov
lret
cmp
xor
imul
cmpsl
popa
push
cltd
jo
cli
sbb
inc
add
movsb
adc
repnz
push
mov
iret
adc
sub
xchg
loopne
jae
js
cmpsl
or
ja
inc
cwtl
psubusw
mov
loop
dec
mov
jmp
into
xchg
les
adc
push
rclb
mov
pop
das
jg
fs
push
push
xor
loope
mov
add
aas
cltd
push
insl
int3
insb
mov
pop
xchg
or
pop
cmp
pop
jns
cmc
fld
mov
ret
jle
lcall
in
das
gs
jmp
xor
movsb
das
xchg
dec
sub
xor
adc
es
mov
std
jge
or
stos
das
mov
adc
les
xchg
pop
sbb
fimuls
inc
pop
xchg
out
adc
fistpll
fwait
inc
scas
adc
push
jb
add
fmuls
mov
loopne
sub
push
clc
xchg
aas
and
or
lods
scas
mov
and
push
mov
and
test
inc
outsl
pushf
push
xor
in
and
push
cmpsb
inc
aam
adc
xchg
or
daa
les
movsl
xchg
or
fcmovb
adc
lods
sbb
mov
arpl
sbb
mov
pusha
orb
and
rorb
xor
data16
and
cmp
xchg
orl
cwtl
pop
cmc
cmpsl
les
in
jo
test
enter
xor
mov
and
fidivl
adc
cwtl
xor
sahf
mov
cmp
outsb
cmp
and
and
sub
sub
and
in
mov
or
rcl
and
push
ret
int
lds
jbe
cmc
and
loopne
fbld
xor
jb
cs
fildll
out
mov
jle
or
fcmovnu
inc
movsl
bound
fwait
out
idiv
inc
xchg
cmc
cmp
xor
je
int3
call
jns
dec
sub
jns
adc
mov
scas
aam
mov
aaa
lret
stc
hlt
push
dec
scas
daa
mov
lods
daa
push
mov
fcoms
dec
cmp
xchg
cltd
dec
dec
xchg
cs
cltd
dec
lcall
adc
test
cmp
jns
adc
inc
lods
or
andl
mov
je
dec
pushf
cli
outsl
in
push
mov
enter
test
mov
mov
imul
lcall
insl
mov
pop
jnp
sti
out
lcall
ficomps
repz
cmp
sarb
adc
or
xchg
mov
test
dec
mov
mov
seto
das
sbb
jb
js
stos
or
xchg
fsubs
js
add
pusha
data16
mov
lahf
movsb
adc
push
cmpsb
push
in
orb
pop
fcmove
out
out
pop
push
imul
hlt
in
push
fists
mov
push
mov
popf
enter
dec
sbb
inc
mov
loop
pop
in
pop
int3
rorb
jmp
or
arpl
mov
mov
pop
stc
icebp
xor
dec
dec
mov
lret
lret
out
xor
mov
mov
fmull
xchg
mov
arpl
mov
and
push
jb
xchg
mov
arpl
dec
aad
mov
loop
adc
adc
xor
sbb
push
fidivrl
fistpll
loopne
sahf
mov
pusha
sti
mov
mov
or
xchg
mov
mov
mov
das
lea
shrl
lret
xor
in
jbe
cmp
and
mov
cmp
mov
jnp
daa
cli
push
cmpsl
into
jbe
les
push
int
fisubrl
das
dec
mov
insl
imul
push
aas
mov
and
nop
loop
xchg
fstpl
cmp
mov
insb
pop
leave
imul
push
mov
ret
sub
mov
adc
inc
pop
ja
rcrb
addl
inc
out
loopne
cwtl
je
dec
xor
stc
cmp
jae
jbe
jae
sub
mov
jp
aas
jnp
cmpsl
outsl
jne
in
push
daa
in
dec
push
pop
mov
dec
insl
hlt
jl
sub
jg
dec
lods
arpl
dec
add
add
push
inc
push
pop
and
out
mov
dec
dec
lahf
xchg
mov
and
cmpsb
daa
xor
fstpt
lret
push
mov
in
cmpsl
adc
and
mov
sbb
leave
popa
sub
mov
outsl
jl
and
out
mov
cmc
adc
ror
cmp
ljmp
xchg
arpl
jae
push
rorl
mov
and
clc
testb
bound
push
push
sbb
mov
push
lea
inc
cmc
cmpsl
push
fldenv
mov
outsb
rcr
add
mov
out
std
ljmp
in
loope
pushf
jo
aaa
lea
xchg
out
xor
adc
adcb
mov
xor
push
inc
loop
aaa
adcl
divb
jno
mov
mov
jbe
js
pop
cltd
aad
ret
bound
and
outsl
mov
and
push
repnz
sbb
push
dec
push
adc
nop
jae
cmp
push
jl
movsl
test
inc
insb
lret
shll
daa
cwtl
adc
mov
xchg
jl
std
and
fs
sahf
mov
inc
aam
lds
xlat
jmp
movsl
push
or
inc
addr16
mov
dec
cmp
daa
mov
push
fcoml
ss
rcl
outsb
gs
xor
rcrl
out
sub
in
rcrl
sbbb
push
fs
dec
xchg
push
jmp
aam
aad
inc
in
mov
fxam
das
sbb
xchg
dec
and
mov
sub
mov
jl
sbb
sbbw
shl
loope
stos
out
out
lods
pop
jbe
sub
jno
mov
jno
inc
repz
imul
inc
or
push
push
int3
adc
enter
xchg
push
adc
jb
push
inc
nop
movsl
sub
xchg
jb
ret
sarl
outsb
js
cs
jnp
and
mov
shrl
stc
into
push
notl
inc
in
pop
sub
push
out
roll
jl
pop
mov
pushf
sub
mov
sub
xor
push
mov
sarl
pusha
push
mov
int3
pop
mov
pop
mov
ja
cmp
jbe
test
ror
outsl
out
lret
das
mov
iret
inc
sbb
pop
push
xlat
and
mov
popf
les
push
and
pop
mov
push
js
dec
mov
lods
push
mov
ds
int
shr
cmp
inc
cmpsb
leave
or
cmp
xor
xor
enter
push
int3
mov
inc
insb
repnz
and
hlt
lahf
jmp
dec
imul
leave
push
jno
cmpsl
sbb
loop
jns
jbe
sub
out
insb
add
stos
or
xchg
xor
sbb
sub
arpl
push
mov
loop
push
pop
mov
xor
or
pushf
push
sbb
pop
xchg
popf
mov
jae
add
mov
lods
hlt
mov
aad
test
sub
xchg
fwait
xor
add
push
or
push
adc
cltd
movsl
sahf
subl
mov
mov
mov
popa
pop
js
mov
pop
jb
ss
stos
jno
pop
dec
lcall
stc
pop
push
out
and
sub
jl
mov
or
mov
pushf
pop
mov
add
test
xlat
sub
sub
test
lret
mov
stos
adc
cmpsb
movswl
call
jle
inc
mov
push
aad
mov
jle
adc
or
fstpt
jbe
test
cmc
pushf
dec
or
jle
inc
in
inc
mov
scas
sub
rclb
je
filds
mov
inc
dec
or
in
mov
subb
je
push
aad
and
movsl
iret
or
inc
xchg
xchg
mov
cmpsb
scas
cmc
push
bound
xchg
lret
cwtl
sbb
pusha
incb
rorl
cmp
push
dec
lods
xchg
hlt
adc
sub
add
dec
pop
rorb
sub
xchg
daa
inc
cmp
and
mov
push
shl
xor
cmp
push
mov
mov
dec
mov
pop
inc
sbb
sbb
gs
pop
ret
mov
push
jl
sub
sbb
sahf
aaa
mov
mov
xchg
sub
or
hlt
sbb
and
mov
in
jb
dec
incl
or
mov
aaa
scas
pop
fldenv
xchg
fwait
cmp
push
sbb
xchg
pop
inc
sbb
aam
mov
pop
in
cwtl
jae
cwtl
adc
jl
jg
and
xchg
inc
xlat
xchg
push
mov
add
popa
popf
imul
fsubr
and
stos
mov
pushf
xchg
add
iret
js
lock
mov
aas
sbb
adc
fcmovnb
fmulp
scas
and
pusha
pop
test
mov
leave
sbb
fistpl
xorb
popa
or
xchg
push
mov
pop
mov
stos
les
sbb
sub
fsubl
sahf
pushf
or
std
sbb
shld
pop
mov
jb,pt
cmpsl
mov
jp
xor
aad
sahf
aad
add
ds
sbb
stc
cwtl
imul
ficomps
xor
cmp
lea
xlat
lahf
xlat
cmpsl
cmp
sti
pop
in
xchg
insl
adc
xlat
pop
popf
push
xor
pop
mov
aaa
pop
icebp
ficoms
inc
and
sbb
add
daa
sbb
xchg
xchg
andl
pop
popf
xor
inc
cmp
pop
add
inc
push
dec
mov
xchg
mov
xchg
outsb
les
pop
repnz
sarb
cmp
pop
rorl
sbb
scas
cmpsb
ja
add
sbb
xchg
mov
sahf
mov
lods
xor
xor
lods
int
rorb
sub
xchg
insl
sub
mov
out
adcl
xor
mov
movsb
push
mov
addl
aad
pop
xlat
push
mov
out
popa
cmpsb
fcoml
mov
imul
idiv
ss
stc
lahf
std
cmp
dec
xor
jle
es
xchg
je
push
cltd
xchg
inc
repnz
addb
add
icebp
xchg
shrl
ret
dec
rcll
adc
popf
sub
ret
mov
out
mov
aaa
add
scas
pop
mov
dec
cmc
jne
icebp
jecxz
pop
cmp
idivl
mov
mov
aaa
imul
add
std
xchg
scas
push
in
jl
test
rorl
xor
cmpsl
pop
mov
sub
sub
insb
push
pop
and
adc
lds
hlt
es
xor
setg
jg
sub
xor
or
push
sub
cwtl
aad
or
popa
cmpsl
outsb
fstl
or
lds
mov
in
push
inc
loop
mov
clc
jg
clc
dec
mov
mov
pusha
dec
and
dec
pushf
test
cmpsl
daa
dec
cmovno
scas
pop
xchg
jnp
stc
add
mov
ds
push
test
inc
or
imul
data16
cmp
inc
jge
lods
aam
pop
adc
ja
jbe
js
xchg
push
adc
lret
mov
xchg
in
mov
pop
outsl
sti
sub
xchg
and
leave
lock
dec
push
sub
lcall
sub
movsb
sbb
mov
sub
int3
push
cmp
pop
int3
out
movl
rclb
popf
push
xlat
cmc
cwtl
sahf
ja
xchg
sbb
pusha
inc
movsb
mov
inc
sub
and
adc
sub
and
mov
sub
outsb
fldl
cs
movl
dec
inc
into
jmp
shl
add
push
pop
icebp
scas
notb
mov
ss
mov
movsl
or
in
fwait
rcr
push
lods
in
mov
fcomps
jo
sbb
jecxz
sub
das
fs
mov
jbe
sub
mov
cwtl
es
cltd
clc
push
fsubl
out
sbb
xor
and
fs
lahf
push
adc
icebp
iret
mov
jmp
popf
mov
jg
fs
push
pop
inc
dec
sbb
pop
lods
out
mov
inc
movsb
int3
mov
push
hlt
movsl
ss
adc
jg
aas
mov
mov
adc
sub
repnz
repz
mov
or
dec
mov
cli
mov
sbb
cwtl
jne
jge
dec
jle
dec
inc
orb
pop
inc
test
mov
les
divb
loope
sbb
movsl
pop
stos
les
into
sub
jno
lret
push
inc
test
jg
lahf
ret
pop
popa
stos
mov
insl
pop
and
cmc
inc
roll
sub
lea
fmuls
sbb
repnz
inc
jnp
test
inc
dec
fwait
andl
movsb
push
imul
mov
and
xor
cli
les
inc
outsl
subb
pop
pop
add
push
xlat
xor
sub
fimull
mov
mov
je
sbb
mov
and
adc
test
add
and
mov
mov
fs
leave
scas
sub
rcll
xchg
pop
pop
les
jg
push
inc
fldenv
push
xlat
ror
sub
mov
cmpsb
push
mov
loope
jmp
mov
lcall
stos
lret
repnz
rcrl
xor
mov
xchg
cmp
mov
or
loopne
std
dec
movsl
mov
or
push
stos
stc
cmp
repz
push
push
movsb
mov
negl
jae
sbb
push
addb
cmpsb
or
jg
xchg
nop
and
push
or
sub
imul
gs
push
mov
and
mov
movb
pop
pop
shrl
mov
out
xor
or
jl
cwtl
add
inc
cli
jp
lods
sti
shrl
pusha
fbstp
and
and
clc
inc
lods
jns
stc
scas
mov
cli
pushf
push
mov
xchg
jle
xchg
jb
sub
fwait
or
outsb
mov
orb
jbe
in
pop
xor
daa
mov
stc
clc
jns
ja
imul
mov
mov
sub
iret
enter
xor
repz
inc
arpl
data16
pushf
add
and
clc
add
dec
or
push
sub
jge
or
sahf
or
jle
sub
imull
lret
add
cmp
mov
enter
xchg
andb
mov
pop
repz
divl
push
movsl
stc
bound
in
imul
int3
cmp
sbb
test
sbb
je
stc
jno
inc
leave
nop
lods
bound
xor
xchg
sub
test
lock
sub
fs
jp
test
lock
xor
dec
dec
stos
jmp
sub
jmp
jb
out
dec
outsl
mov
leave
movntps
mov
pop
icebp
aad
and
xor
mov
frstor
mov
sub
xor
das
shlb
sub
imul
mov
xor
icebp
fs
xor
lcall
je
mov
cltd
inc
dec
jecxz
repnz
shrb
push
test
stos
cmp
addl
jns
lret
clc
aaa
outsl
loop
ds
push
sub
insl
cmpsl
sub
pop
daa
pop
insl
shrb
xchg
fcmovb
or
cmp
dec
nop
call
lcall
cltd
imul
fildll
pop
testl
adc
aas
mov
sub
out
and
xor
cmpsl
pop
pop
aam
fsubs
mov
sbb
or
mov
pop
loope
in
and
test
xor
cmc
dec
sbbl
jnp
mov
repz
and
setl
and
cmp
fildl
ret
mov
or
es
adc
stos
test
arpl
cmp
and
adc
fcoml
cmp
add
add
daa
push
insb
lea
sti
out
lcall
loope
sbb
in
xor
jae
mov
push
sti
dec
hlt
xor
aam
ljmp
lods
jb
jae
add
mov
push
push
jbe
in
icebp
negl
push
js
movb
xchg
xor
xor
jmp
repz
adc
andl
mov
pop
aam
cmp
sbb
insl
mull
push
xor
mov
sbb
push
push
in
inc
push
dec
test
xor
pop
sarl
js
enter
aaa
and
out
sysenter
dec
std
cmp
push
add
push
aam
out
add
adc
inc
cltd
call
push
mov
mov
and
mov
sti
pop
call
pop
and
das
pop
mov
out
js
xchg
or
inc
jnp
setge
xor
lret
or
adc
mov
mov
jp
dec
mov
and
add
mov
mov
sarl
imulb
push
push
lock
adc
fwait
fs
dec
iret
add
sub
into
inc
xchg
pop
push
data16
into
scas
mov
or
int3
and
sbb
or
test
inc
adc
pushf
cmpl
insb
gs
xchg
or
lea
or
ljmp
adc
loop
mulb
xchg
push
sub
call
daa
xchg
and
sbb
lret
mov
push
lret
and
push
inc
out
movsl
and
in
xor
push
dec
out
lcall
pop
stc
inc
jmp
dec
jne
int3
mov
fldenv
mov
xor
jno
jo
jae
sbb
les
mov
inc
sbb
sbb
sub
and
test
imul
xchg
mov
mov
sub
mov
cmc
dec
je
jno
adc
leave
call
cltd
sub
dec
scas
and
pop
dec
dec
push
jo
push
pop
add
pop
es
aas
les
iret
mov
jnp
aaa
mov
cli
aad
je
push
gs
xchg
cmp
sbb
in
and
mov
es
lock
inc
scas
scas
scas
dec
in
pop
xchg
mov
jbe
xchg
add
jg
divl
push
inc
pop
test
jecxz
lahf
in
mov
or
sbb
lahf
push
mov
scas
pop
sub
notl
jp
xor
xor
or
adc
scas
or
into
pop
sub
ret
in
nop
sbb
mov
or
fisttps
mov
mov
add
push
ret
decb
or
fdivs
or
pushf
inc
std
mov
or
and
inc
popl
negl
adc
inc
fcomps
rolb
iret
sbb
stos
add
dec
adc
push
mov
neg
sarl
and
xor
bound
jnp
lret
lods
push
movsb
mov
cmpb
dec
aam
andl
out
mov
aad
stc
fndisi(8087
dec
out
mov
pop
jg
imul
fnstenv
pop
dec
es
xchg
inc
mov
ds
aas
and
outsl
nop
xlat
xchg
in
pop
add
push
sahf
jb
mov
lret
bound
jno
cmp
inc
lahf
das
bound
inc
leave
in
imul
ss
lret
pop
push
pop
subl
jne
inc
and
dec
jge
ficomps
into
xchg
sbb
xor
add
ret
mov
mov
dec
cmpsb
push
js
xlat
aad
loope
jbe
jns
test
sbb
dec
aaa
pop
fdivs
dec
dec
sbb
inc
xor
insb
imul
cmp
lahf
nop
push
bound
mov
je
dec
sub
les
aam
jmp
test
mov
ficoml
or
xlat
in
shll
jl
lods
data16
push
push
pop
xchg
dec
or
mov
lcall
mov
stos
cmp
bound
pushf
fiadds
fwait
sub
rcrb
pop
push
mov
test
mov
mov
xchg
cmp
movsb
lret
dec
mov
outsb
dec
dec
fwait
mov
xor
lea
jmp
pop
xchg
jl
and
push
and
cmp
adc
mov
out
popa
das
adc
xchg
mov
std
inc
mov
cmp
xchg
loop
into
sub
lds
insl
xlat
mov
cli
xor
inc
lds
popf
inc
pop
inc
cwtl
and
insb
cmc
mov
stos
xor
les
jp
jns
ljmp
xor
pop
punpckhbw
xor
dec
dec
ret
sbb
jbe
rolb
xchg
push
idivb
sbb
and
push
pop
cmp
es
cmp
mov
sbb
scas
hlt
ret
sub
lea
or
sub
mov
pop
add
sbb
add
xlat
cmp
inc
test
cmp
fidivl
mov
sti
movsl
mov
push
fwait
or
in
imul
test
dec
sbb
clc
pop
cmp
dec
inc
adc
loop
rorl
dec
sub
mov
dec
push
xchg
insl
ja
jl
lret
sti
bound
mov
into
dec
sbb
mov
xor
fdivr
pop
xchg
inc
inc
std
je
clc
lods
mov
rol
je
aas
test
in
popa
dec
cmp
inc
cmc
xchg
pop
push
movlhps
sbb
fnstcw
mov
push
lock
popw
rcl
in
sahf
mov
jp
out
mov
xchg
nop
rcrb
sub
stos
mov
ret
mov
lods
lea
in
fs
repnz
mov
or
sbb
add
mov
addr16
dec
add
pop
in
lock
cs
popf
out
mov
mov
rorb
dec
inc
sub
xor
push
mov
and
push
add
mov
add
es
jns
std
or
loop
jle,pt
mov
aaa
and
stos
and
imul
daa
aas
pusha
daa
adc
test
fisttps
dec
sub
push
cmp
mov
movsl
mov
call
stc
xchg
data16
xor
adc
cmp
out
push
mov
movsb
mov
lret
add
es
xorl
ds
out
int
out
data16
mov
and
push
mov
testb
fcmovb
or
xchg
or
cmp
lahf
outsl
addb
inc
xchg
addl
mov
stc
fimull
cltd
in
icebp
cmp
ss
add
enter
test
notl
ficoml
fldcw
dec
insl
cmp
les
mov
lods
lock
fstpt
inc
lea
pop
or
das
sub
mov
jno
add
ret
adcb
or
jno
jmp
cmp
hlt
adc
inc
xchg
fmull
test
mov
in
out
jg
inc
xorb
jmp
insb
iret
jnp
cld
pop
adc
mov
cmpsb
pop
xchg
mov
xchg
aam
mov
fisubl
xor
dec
into
jmp
jecxz
jecxz
jle
mov
sti
lods
das
lahf
pop
adc
ja
mov
mov
leave
xchg
andl
inc
int
xchg
insb
pop
mov
push
pop
cwtl
repnz
rcrb
cli
add
movsb
adc
mov
add
shrb
fsubrl
pop
lock
ret
movb
ror
mov
adc
popf
cmpsb
scas
mov
inc
add
imul
imul
add
jbe
mov
dec
cmpsb
pop
cmp
xor
bound
xchg
mov
mov
shrb
shrb
stc
sbbl
stos
inc
sti
aam
insl
cs
pop
dec
mov
lea
adc
inc
add
jno
stc
aad
lock
dec
insl
mov
subb
xchg
xchg
xor
fimuls
mov
sbb
fmuls
movsl
inc
xchg
pop
out
mov
insb
inc
leave
mov
push
xchg
ljmp
mov
sub
add
and
add
je
popf
in
aad
push
or
insb
in
add
mov
adc
repz
cmp
sub
clc
aas
clc
iret
lahf
and
pop
arpl
pop
iret
jo
and
cmp
daa
mov
mov
sbb
imul
dec
pop
or
sbbb
cmc
push
pop
pop
iret
pop
lret
negb
jle
jb
jecxz
xchg
repnz
test
les
adcl
pop
inc
mov
pop
pop
xor
div
inc
fistl
xacquire
cmp
sbb
add
testl
xchg
gs
mov
pop
push
ljmp
lods
in
cmpsb
xlat
or
jmp
mov
and
push
fdivrs
out
xchg
movsl
movsb
adc
enter
sub
popa
mov
jns
inc
and
mov
loop
pop
adc
jne
mov
movsl
mov
mov
fisttpl
loope
sbb
mov
mov
call
test
call
mov
in
mov
adc
pop
jl
xchg
push
inc
cmpsl
push
sub
mov
lds
flds
test
mov
shl
xor
aas
ja
lds
push
fadd
fcomps
push
push
lods
jg
loop
xor
inc
pop
outsb
std
or
jnp
imulb
push
or
inc
xor
jae
inc
shr
jo
psrlw
sahf
xchg
mov
add
push
fidivrl
ret
mov
mov
push
sub
pop
push
jg
or
sub
inc
cmc
mov
xor
ficompl
test
jbe
or
xadd
xchg
mov
cltd
mov
push
dec
pop
cmp
ja
inc
cmp
gs
ror
call
adc
xchg
pop
xchg
xchg
jb
mov
dec
pop
xor
or
out
or
jae
enter
jp
pushf
daa
push
push
mov
cmpsb
subb
xor
lock
mov
jecxz
hlt
int
sahf
imul
add
aas
cmc
or
or
and
sub
rcrb
adc
and
lock
xchg
xchg
jg
add
out
lahf
sub
insl
lret
mov
pop
and
and
into
cwtl
insb
pop
loop
cltd
inc
shrb
mov
inc
mov
sub
inc
xchg
cmp
mov
mov
cmp
test
pop
in
add
push
roll
mov
sbb
jns
inc
mov
mov
jge
stos
movl
stc
ret
adc
insb
sarb
insl
out
nop
out
push
repnz
clc
pop
jp
jle
mov
sub
mov
test
sub
sub
inc
iret
xchg
repz
ret
fs
mov
push
lret
cmp
and
jle
lds
pushf
pop
mov
inc
lods
in
adc
inc
ret
cltd
ljmp
dec
addr16
in
fucomi
fisttpll
repz
xor
loope
mov
dec
popa
stos
mov
fnstsw
sub
sbbl
ret
cmp
test
mov
insb
and
shlb
in
pop
xor
rcrb
jns
ficomps
mov
jo
inc
in
sbb
int3
sub
mov
xchg
sbb
sbb
std
pushf
in
dec
mov
sarb
hlt
xchg
pop
or
adc
sbb
sub
mov
xor
inc
mov
inc
hlt
pusha
scas
cs
pop
cltd
mov
cs
lret
imul
in
cmpsb
xlat
js
les
dec
xchg
mov
or
sbb
inc
mov
jno
jge
out
mov
sbb
leave
xor
and
mov
popf
push
ss
fdiv
add
loopne
push
sar
jne
stos
mov
jge
mov
sbb
das
stos
dec
test
lock
addl
cmc
iret
call
xchg
test
cmc
lods
and
dec
jns
xor
mov
das
mov
sbb
add
cmpsl
inc
out
je
lods
fnstenv
aaa
push
ss
adc
int
push
ja
push
xor
mov
mov
mov
leave
jmp
mov
xchg
cwtl
bound
sbb
mov
xchg
mov
mov
jo
fstpt
sbb
ror
adcl
mov
adc
sub
nop
rolb
xorl
les
lcall
fadd
pop
lcall
aaa
and
and
cld
dec
jae
fistpll
or
shr
push
les
and
hlt
add
push
flds
mov
cmp
clc
mov
fimull
inc
repz
xor
jae
mov
std
push
sbb
lods
lods
in
fsubs
repnz
in
hlt
push
rclb
mov
jle
fstpl
jl
enter
out
jmp
fwait
mov
lds
mov
fwait
lods
aas
adc
xchg
int
mov
lea
and
xlat
in
in
rep
adc
xor
les
jmp
sbb
leave
test
inc
cld
movsb
hlt
push
mov
pop
pop
pop
xchg
mov
pop
cwtl
adc
fcomp
sbb
sbb
mov
sbbl
jns
jge
je
arpl
push
or
push
in
push
adc
xchg
call
std
push
add
ja
jne
enter
mov
pop
jecxz
jge
cltd
sub
adc
pop
fs
mov
mov
jl
lret
lds
dec
xor
test
lods
sub
xlat
ds
push
sub
stc
sbb
cwtl
cltd
cmp
push
bound
movsb
mov
xchg
outsb
setp
inc
sbb
insl
pop
cmp
sbb
push
mov
test
or
scas
aam
test
mov
inc
lock
in
cmp
ret
pop
adc
popa
decb
inc
shrb
add
ljmp
xlat
mov
call
xchg
sbb
pop
cmp
es
and
sbb
sbbb
pop
jge
lahf
and
adc
enter
lahf
jnp
push
mov
push
mov
dec
jp
jl
lret
mov
iret
sub
xchg
adc
push
or
shll
mov
xlat
pop
das
jb
push
out
out
xor
inc
repz
adc
test
mov
sbb
lock
test
das
movsl
pop
push
and
fcmovb
ja
push
aas
out
inc
inc
cli
xlat
sahf
xchg
roll
enter
push
cli
xchg
in
dec
leave
ss
xor
mov
lret
flds
xchg
and
mov
add
js
stc
cmp
rcrb
popf
imul
movb
or
and
cltd
daa
dec
loope
inc
test
push
rcrl
push
ret
sti
int3
negb
jecxz
sub
xor
in
dec
fs
and
dec
mov
xorl
enter
stos
push
rcrl
stos
or
and
pop
nop
lcall
jb
hlt
ret
in
cmp
cltd
icebp
pushf
and
decl
sbb
loope
icebp
sbbl
xlat
jb,pn
sbb
fstp
jns
xchg
loop
mov
cltd
jp
inc
shll
test
lahf
jno
mov
push
sub
rcll
test
mov
ljmp
and
cmp
lods
popa
pop
mov
outsl
adc
mov
xor
shll
mov
cmpsl
or
mov
lock
arpl
scas
push
cmp
mov
push
shll
push
loopne
xor
mov
dec
leave
xchg
mov
imul
add
dec
or
fsub
int3
sub
shlb
adc
das
cmp
aad
adc
stos
loop
push
inc
or
xchg
sbb
xor
mov
ljmp
enter
pusha
cwtl
or
fsubr
push
dec
int
cmp
out
and
fildll
out
scas
je
jg
fwait
add
pop
out
and
fcomps
scas
mov
jle
lea
xor
dec
mov
popa
mov
xor
in
xchg
les
jne
mov
cwtl
inc
dec
movsl
shl
xor
sbb
xchg
add
stos
pusha
or
ljmp
rcrl
test
sub
adc
jecxz
repz
xchg
shlb
or
mov
ds
loope
push
insb
pop
test
fs
adc
test
cwtl
push
mov
stos
sub
pop
movsl
jns
xlat
movsb
out
dec
jb
and
in
sub
push
xor
mov
arpl
popa
arpl
std
cmc
xor
cmpsb
ret
mov
sarb
dec
lret
jmp
lock
jecxz
pop
clc
mov
cmp
add
ficoms
insb
inc
outsb
cmp
stos
jmp
adc
mov
out
inc
pop
mov
sub
int
mov
xor
dec
push
pop
inc
in
inc
mov
or
imul
test
dec
icebp
int
sub
or
adc
cmp
inc
fldl
pop
movsb
clc
fistpl
jns
outsb
ficomps
add
xor
xchg
add
shrd
cmp
jns
sbb
mov
hlt
push
xchg
enter
mov
mov
iret
dec
aaa
bound
pusha
jg
hlt
ret
cld
loop
jae
pop
mov
pushf
pop
mov
mov
mov
imul
pop
inc
add
cmc
xchg
mov
dec
push
idivb
mov
sub
pop
cmpsl
inc
mov
aaa
lods
inc
dec
and
sub
cmpsb
insb
inc
adc
leave
lods
cmpsl
pop
push
adcl
in
popa
push
inc
dec
rcrl
ss
xchg
sti
mov
rcrl
lret
pop
xchg
aas
adc
jmp
leave
xor
movsl
jbe
cmpsl
ds
xchg
mov
icebp
mov
notl
sbb
cmpsb
dec
or
inc
xchg
xchg
je
inc
call
inc
inc
hlt
pop
jmp
fimull
mov
les
xchg
add
xchg
arpl
icebp
stc
pop
call
popa
xchg
cli
sbbl
dec
ja
push
jns
mov
aad
and
xchg
imul
movsl
jne
rorb
xor
adc
bnd
fstps
aas
decl
xchg
cs
inc
sub
jle
jmp
lret
mov
loop
mov
out
and
inc
adc
orl
xchg
sub
xchg
cmpsl
icebp
lahf
pop
in
iret
test
mov
pop
dec
mov
adcb
call
lods
test
pusha
push
addl
mov
aas
mov
fadds
lahf
inc
and
pop
xchg
sti
sbb
fwait
pop
pop
xor
cmp
mov
std
mov
jmp
pop
dec
push
rol
and
inc
jae
xor
scas
jo
scas
lahf
mov
xor
xchg
pusha
adc
add
popf
ljmp
pop
repnz
cmc
stos
mov
jne
dec
xchg
xchg
inc
stos
jl
push
adc
mov
adc
cld
mov
jle
push
xor
mov
add
mov
arpl
popf
sbb
int
cmp
ficoms
sub
xchg
mov
mov
adcb
adc
stc
call
add
sbb
in
mov
pop
imul
mov
jnp
dec
dec
xchg
adc
mov
lods
std
enter
jl
aas
cli
loop
shrb
push
insl
sbb
ds
in
push
add
fs
and
and
jle
and
inc
mov
cmp
cmpsb
or
push
repnz
and
sti
jne
loop
stc
mov
mov
lret
add
leave
sahf
imul
lret
mov
sti
cmpsb
shr
inc
stos
stc
ja
sub
movsb
lahf
adc
pushf
pop
fistpll
fdivrs
dec
mul
cmc
and
call
cmpsl
cld
das
stos
dec
pop
sbb
jge
hlt
push
outsb
push
mov
aad
xchg
add
push
mov
mov
mov
scas
addr16
icebp
aas
jmp
lahf
pop
sahf
xchg
mov
cmc
aaa
pop
arpl
pop
shl
ret
out
pop
ret
mov
sar
in
push
push
dec
mov
push
mov
push
adc
dec
cmp
ret
inc
repnz
or
in
mov
test
or
cli
xor
jnp
sub
clc
ds
or
fldl
mov
inc
fs
cwtl
push
int
mov
iret
inc
xor
out
adc
in
pop
pop
push
hlt
ds
icebp
mov
notl
stc
xchg
pop
push
mov
xchg
adc
iret
xchg
mov
jbe
mov
inc
shl
movsb
inc
and
jmp
mov
push
adc
and
test
out
inc
xlat
js
sbb
mov
notb
mov
mov
das
fnstsw
sub
push
and
fidivrl
xlat
or
jl
cmp
fbstp
fidivrs
ds
roll
cli
push
add
jne
les
lods
push
out
pop
mov
cwtl
xor
lahf
int
pop
loopne
sbbb
add
pop
test
ret
pop
stos
xor
adc
and
push
pop
xchg
or
aas
cmp
ret
fmull
fbstp
sbb
sar
aaa
sahf
xchg
mov
cltd
fisubs
popa
inc
clc
or
xor
fdivrl
fimull
and
adc
mov
pop
adc
mov
jg
insl
cmp
clc
xchg
or
sub
inc
mov
pop
test
cmp
js
lds
add
push
mov
subl
mov
mov
int
cmp
mov
jmp
xchg
and
je
jne
mov
mov
cmp
pop
or
and
xchg
call
sub
mov
sub
or
std
pop
aad
cmp
shlb
testb
xchg
jmp
sub
cmp
mov
or
push
filds
popf
popf
aam
sub
icebp
lods
fadds
mov
mov
jno
mov
rorb
iret
data16
mov
xchg
cmpsb
xchg
mov
rcl
in
scas
push
fcmovnb
lock
push
test
dec
adc
xchg
xchg
add
push
les
mov
add
incl
in
dec
jno
movsl
enter
rorb
or
hlt
inc
sub
ljmp
mov
cli
das
sub
mov
mov
ret
push
enter
mov
sti
xchg
xchg
pop
shlb
xor
cmp
je
out
lods
push
ljmp
aas
sbb
aas
xchg
movsl
mov
ficomps
ds
std
ret
pop
xchg
inc
add
stos
es
in
mov
pop
pop
movntq
imul
movsb
xchg
push
sbb
imul
push
pop
loop
rolb
cmp
cmp
pop
fidivrs
xor
aad
jp
pop
adc
fcmovne
mov
mov
mov
cmp
pop
clc
pop
adc
push
sbb
inc
leave
sub
or
call
mov
out
mov
dec
jp
pop
int3
fidivs
shll
aad
bnd
sbb
int
mov
out
cmp
mov
fidivrs
lds
xor
cmp
add
add
mov
je
gs
mov
pushf
icebp
mov
xchg
cltd
pop
mov
into
dec
aaa
or
notl
xchg
cmp
stos
pushf
xor
dec
push
stc
push
and
sub
lret
inc
fst
inc
repnz
lods
inc
mov
stc
scas
and
jae
jp
xor
out
sahf
jmp
stos
cs
or
arpl
dec
fs
into
lret
mov
rolb
leave
and
std
cmpsb
je
xchg
test
cmp
aas
addr16
imul
cld
inc
adc
inc
or
mov
stos
andb
ret
leave
jae
js
pushf
stc
and
cmp
js
dec
in
data16
and
aad
divl
push
jle
mov
cmpsl
lock
dec
pop
pushf
jp
and
ljmp
push
insl
cltd
or
sbb
loopne
or
repnz
adc
out
test
shlb
sbb
pop
mov
out
jns
xchg
push
add
or
call
add
xchg
imull
mov
aad
lock
in
ss
inc
sub
jno
or
push
sub
ljmp
jmp
movsb
stos
mov
mov
push
dec
dec
dec
or
out
fldt
andl
fisttpll
pop
and
mov
dec
or
inc
dec
in
pop
ret
movsl
scas
imul
sbb
jg
emms
jl
sarl
mov
je
jae
clc
cmp
pop
rorl
push
lea
and
adc
pop
mov
sub
jmp
cmp
lret
dec
pop
cmp
ret
jb
loope
and
sub
pop
xorl
mov
mov
mov
sahf
aam
outsl
ss
or
xchg
lret
add
repz
sbb
xchg
cwtl
outsb
testl
push
lret
push
cmp
jnp
mov
mov
ret
xor
lcall
test
push
js
sbb
mov
sarl
add
sub
xor
push
jecxz
mov
pop
aad
and
jns
jmp
popf
pop
sbb
mov
inc
jb
js
inc
out
or
stos
mov
jo
inc
sbb
in
xchg
xchg
jne
std
mov
sar
inc
jnp
push
test
cld
sbb
ss
adc
cmp
sti
add
test
cmp
xchg
push
inc
pop
in
call
push
int3
lea
leave
push
xchg
jns
jl
dec
into
insb
and
push
pop
add
gs
inc
mov
push
insb
movb
cmpsl
mov
ret
adc
inc
loopne
pop
bnd
sub
shll
jmp
les
dec
inc
sbb
fmul
int3
leave
xorb
popa
adc
push
mov
rorl
cld
ds
mov
es
inc
mov
push
js
mov
testb
cmpsl
lret
xchg
sbb
or
cli
inc
sbb
xor
sub
cs
das
lret
jbe
pushf
jbe
add
cltd
push
sub
add
pop
sub
jp
or
cmc
lods
push
call
mov
repz
lret
xor
jno
sbb
xchg
stos
fistpl
mov
pop
push
repnz
in
cmp
cmc
into
pop
or
in
jle
sub
and
fnstenv
inc
xor
mov
jae
je
add
divl
cmpsb
sbb
sub
mov
xchg
int3
imul
fnsave
and
pop
or
push
addr16
cmp
mov
movsb
jae
neg
neg
sbb
xchg
dec
inc
repnz
xchg
shl
repnz
nop
dec
je
sbb
aam
inc
lcall
das
sahf
repnz
adc
ds
xchg
dec
stc
daa
cwtl
out
xchg
mov
and
push
bound
mov
sbb
add
and
in
movsl
std
cwtl
add
fs
mov
shll
jl
outsb
jecxz
mov
ljmp
stos
lods
pop
std
loopne
cmpsl
xchg
add
dec
fs
mov
lods
jae
ljmp
fs
int
fcmovnbe
xlat
or
rorb
push
je
int
mov
adc
xor
addr16
sub
dec
and
jne
movsl
das
sub
cmp
jae
push
adc
fs
pop
sahf
repnz
mov
pop
cmc
mov
xchg
ja
mov
xchg
test
insb
cld
push
out
xlat
shrb
cmp
cltd
bound
xor
leave
loope
stos
ret
out
cltd
mov
shrl
push
mov
divb
loope
dec
pushf
or
loope
dec
jle
daa
das
and
scas
or
mov
mov
push
enter
lds
sbb
pop
shlb
repnz
sub
sti
mov
xor
adc
das
repnz
lret
xchg
cmp
push
or
clc
adc
cli
std
cmpsb
out
jb
sti
mov
pushf
ja
jge
loopne
pop
dec
sbb
sub
ds
jmp
hlt
lcall
xchg
pusha
outsb
fcmovbe
add
cmp
call
dec
cld
fildl
pusha
cmp
push
or
pop
scas
jmp
jmp
cmp
mov
jne
je
sbb
push
icebp
setge
pop
push
adc
push
fs
adc
clc
or
and
pushf
aad
scas
mov
jp
xor
insl
sbb
stos
imull
add
repz
adc
in
cmpsb
mov
xchg
jmp
and
in
nop
push
or
roll
loop
and
jno
stc
ret
push
icebp
sbb
lret
pop
cmp
xchg
push
sarl
pop
xchg
in
std
mov
or
addl
sbb
dec
mov
jne
out
mov
or
fisubrs
mov
ret
js
test
mov
mov
popf
push
dec
jg
xchg
loop
ljmp
ljmp
add
mov
push
leave
inc
mov
loopne
jl
xchg
xchg
jmp
inc
jg
push
xor
push
push
int3
xchg
aaa
cs
add
sub
imul
sub
cmp
fcompl
imul
push
in
stc
cmp
dec
or
sbb
inc
adc
cmpsl
ja
sbb
mov
das
inc
push
in
movsb
in
aam
hlt
fiaddl
test
pop
jp
test
mov
dec
mov
mov
pop
dec
jmp
adc
xchg
call
shrl
mov
pop
pop
inc
faddl
mov
fidivs
xchg
xor
push
or
inc
fisttps
adc
pushf
mov
sbb
sbb
or
stc
pushf
jl
mov
xchg
add
pop
aam
push
dec
cli
shll
jge
repz
hlt
pop
pop
cwtl
mov
scas
and
adc
xchg
test
cmp
mov
stos
scas
loop
dec
stos
and
lods
inc
call
cmp
loop
mov
xchg
jp
icebp
mov
mov
xor
push
mov
push
or
fldenv
cmp
jmp
sti
fs
aad
jle
push
shlb
in
cmp
or
mov
mov
ret
stos
add
pop
mov
enter
add
sub
adc
jp
addr16
popa
jne
int
add
push
adc
loope
testb
mov
gs
decl
push
jge
cwtl
movsb
divl
popf
rcrl
pop
rcl
stos
cld
lahf
push
int3
jns
mov
xor
mov
lods
mov
in
xchg
adc
and
cltd
cmp
jecxz
mov
xchg
cmp
push
lea
insb
dec
dec
dec
test
aaa
cs
dec
mov
das
js
pop
loopne
mov
pop
fsubrl
cld
outsb
in
inc
mov
movsb
cmc
cmp
dec
std
push
push
pop
int3
idivb
dec
sbb
data16
lds
jae
in
imul
call
mov
scas
mov
xchg
stos
daa
fsts
dec
fnstsw
jo
jl
hlt
loop
cmp
aad
inc
pop
mov
mov
push
icebp
jl
shll
aas
in
dec
adc
rcrb
push
push
mov
scas
in
nop
mov
or
xor
hlt
mov
xor
sti
push
push
test
xchg
xchg
insl
push
inc
lods
data16
loop
inc
jns
push
shrl
out
adc
mov
int3
les
push
cmp
pop
or
scas
out
dec
cmpsl
ja
sub
or
jno
push
fwait
nop
xchg
js
test
xchg
jne
and
mov
mov
loop
xchg
stos
xor
lret
jg
pop
mov
sti
fs
popf
and
sub
dec
push
shr
lock
sub
mov
cli
mov
lcall
xlat
and
lods
addr16
mov
jecxz
orb
cwtl
xchg
dec
adc
xchg
jp
and
sbb
rorl
sbb
popa
mov
dec
sahf
testb
flds
push
mov
sub
lods
dec
out
shll
insb
repnz
sbb
xlat
jp
or
les
mov
push
flds
lahf
dec
loop
bound
jns
xchg
pop
fcompl
add
adc
cltd
out
sub
rcll
lock
adc
lret
mov
xchg
adc
jecxz
xchg
lds
adcl
aam
xchg
mov
dec
ret
and
out
pop
or
jbe
pop
ret
mov
inc
popa
pop
mov
and
jmp
jg
int3
mov
cli
cmp
mov
ljmp
sub
and
pop
fnstsw
cmp
addr16
repnz
xchg
pop
in
repz
mov
pop
test
jne
test
insl
or
popf
cmc
loope
dec
jge
arpl
ffree
gs
popa
in
enter
rcll
inc
sbbb
or
lods
add
sbb
push
push
lea
enter
jle
jo
or
pop
sub
cmp
jmp
pop
into
scas
shll
xchg
or
arpl
jge
test
fadds
add
je
sti
mov
xor
mov
adc
imul
pusha
adc
mov
das
or
xor
push
dec
into
push
jmp
insl
or
push
mov
insb
and
xor
outsb
imul
push
insb
pop
dec
inc
fwait
arpl
adc
inc
clc
sub
add
insb
dec
int3
adc
das
sti
adc
push
jmp
loop
int3
mov
jmp
mov
movsl
lret
test
movsl
test
pop
inc
test
push
mov
and
gs
orl
mov
sbb
test
mov
repz
xor
aaa
lcall
bound
nop
iret
pop
out
xlat
xor
dec
pop
jge
inc
mov
popf
or
mov
std
loop
push
mov
lcall
cmpsl
rcrl
std
adc
jge
iret
mov
xchg
sbb
out
shrb
add
les
pop
or
xchg
mov
mov
cmp
jle
and
addb
repnz
jle
addr16
adc
pop
stos
mov
and
les
jecxz
mov
mov
stos
orb
cmp
stos
mov
xlat
scas
push
ficomps
outsb
cmp
bound
fdiv
mov
fstl
das
jnp
pop
cmp
aas
or
andb
pop
mov
test
scas
push
std
je
or
out
add
fs
jl
fiadds
and
lcall
stos
pop
mov
cmp
orl
lret
cmp
aam
mov
jmp
test
mov
or
stos
mov
xor
ret
xor
push
dec
inc
imul
sub
pusha
call
nop
adcb
add
popa
cmpsb
xchg
lahf
pop
std
mov
repz
pop
fisubrl
push
xor
xchg
cmp
xchg
jae
cmp
sti
outsl
out
insb
int3
lods
addr16
in
cmp
int
or
shr
jno
in
dec
rorb
adc
push
stc
rol
addr16
setbe
xor
inc
adc
xor
mov
iret
xor
ja
xor
sub
mov
push
jnp
jbe
sub
repz
xor
xchg
dec
adc
xor
mov
dec
hlt
xchg
shll
or
mov
sub
ja
scas
sbb
es
pushf
jecxz
cmp
mov
pop
xor
sbb
test
push
mov
jns
pop
or
inc
xchg
mov
loopne
sbb
or
daa
add
cmc
cld
popa
scas
stos
lcall
fidivl
pop
push
mov
xchg
test
mov
adc
roll
imul
lcall
xlat
imul
jmp
lcall
add
imul
pusha
cmpsb
lods
pop
fwait
cmp
mov
fimull
mov
nop
sub
ljmp
bound
fcmovu
mov
les
leave
jmp
sbb
jecxz
jb
das
mov
clc
mov
daa
mov
xchg
xor
or
adc
cld
mov
jecxz
push
popf
movsb
call
xorb
jmp
xchg
inc
xlat
xchg
cvttps2pi
popa
xchg
cmp
mov
int
js
xor
push
jl
pop
mov
sub
push
push
roll
scas
pop
ds
cmp
xchg
test
arpl
xchg
pop
js
xor
sub
scas
loopne
push
rcr
mov
sbb
ret
cwtl
ret
jmp
jl
pop
enter
sub
push
cwtl
nop
scas
loope
jno
inc
cmp
stos
test
jmp
xchg
and
push
push
pusha
cwtl
adc
dec
loopne
push
mov
loopne
adc
mov
dec
xor
add
cmp
mov
lods
test
mov
rorb
movsl
pop
loopne
jns
adc
rolb
fwait
add
pop
out
jae
push
insl
inc
mov
stos
xchg
inc
nop
pop
inc
rsqrtps
xor
enter
push
aas
and
out
dec
ret
jb
inc
sbb
mov
loopne
test
dec
ret
sbb
repz
push
jmp
roll
aaa
ljmp
push
inc
lcall
push
in
mov
push
pop
sbb
into
stos
pusha
inc
lahf
xlat
mov
cmp
lcall
int3
push
pop
das
rcl
cld
xor
mov
jl
imul
es
adc
out
movsb
nop
push
pop
pop
cld
clc
sub
nop
clc
push
pop
scas
stos
lcall
mov
movsb
mov
add
cs
rorl
pushf
lds
jg
push
push
add
dec
test
jne
pushf
mov
inc
incb
mov
lods
mov
stc
adc
add
xlat
lret
popf
je
add
add
fs
mov
mov
or
cmpsb
repz
lods
and
xor
movsb
imul
xlat
adc
or
int
xchg
xchg
mov
int
aad
cmpsl
jecxz
pop
adc
divl
stos
repnz
je
push
mov
repz
std
scas
out
testl
add
ss
jg
pop
je
sahf
cmpsl
addr16
push
insl
setne
add
pop
sub
push
cmpsb
sub
imul
out
in
push
add
mov
mov
add
mov
jecxz
mov
xchg
pop
mov
lret
cmc
and
fldt
outsb
js
cs
pop
push
mov
fdivl
fs
mov
test
jecxz
mov
loopne
mov
loop
cwtl
ljmp
push
fstpt
incb
shll
push
sbb
cltd
mov
mov
mov
xor
mov
sub
scas
nop
add
sahf
stc
jge
subb
push
or
andb
stos
cs
cmp
pop
xor
divb
int3
push
mov
mov
mov
testl
int3
outsl
clc
hlt
inc
gs
scas
nop
mov
dec
mov
insl
add
cli
inc
sub
hlt
jmp
sarb
clc
jno
test
cmp
sub
scas
jo
popf
pop
cmp
mov
inc
loop
jo
testb
pop
push
js
jb
jmp
test
mov
pushf
sub
jb
or
cmp
fiaddl
aaa
iret
in
mov
jp
mov
rclb
loope
mov
stos
dec
scas
repz
aam
jmp
shl
jmp
or
sbb
and
jle
cwtl
out
lcall
daa
ja
push
dec
popl
ret
das
mov
xchg
mov
outsb
les
lock
or
dec
repz
ds
sbb
ja
inc
je
cwtl
jne
pop
into
outsw
xchg
aam
lret
cmp
push
inc
mov
push
mov
cld
mov
movsl
das
adc
xor
pop
es
data16
outsl
out
aad
in
or
cmpsl
out
mov
dec
push
pop
sti
sbb
jmpw
popa
fisttpll
int
xchg
cmpsb
imul
push
jl
and
ret
rolb
fsubs
pop
or
push
xor
shll
dec
fstps
cmp
aaa
adc
cmp
es
js
jg
jp
add
popf
ljmp
out
ret
inc
aad
mov
mov
dec
or
jg
popf
pop
or
mov
lds
out
and
lods
lret
push
sub
push
popf
shrb
mov
data16
enter
cmp
pop
repz
xchg
sbb
sub
scas
fdivrs
mov
mov
or
add
in
popl
pop
aad
daa
dec
out
xor
mov
and
repnz
fcoms
jl
sbb
outsl
mov
mov
ret
int3
adc
dec
jp
leave
mov
jo
add
inc
movsb
sub
lea
movsb
mov
adc
divl
into
mov
jb
xor
outsl
je
xchg
xor
jb
in
and
mov
shr
xor
loop
sbb
mov
lret
jae
in
pop
and
out
mov
or
lods
push
stc
sbb
int
mov
mov
icebp
xor
outsl
outsb
into
inc
ret
rorl
dec
pop
inc
movsl
push
mov
push
jae
mov
nop
stos
cli
jmp
mov
clc
xchg
mov
mov
sahf
enter
dec
fidivrs
xor
in
mov
pop
mov
shr
xchg
out
push
cmp
std
or
lret
cmpsb
push
pop
xchg
jle
cmpsb
mov
daa
push
push
fld
imull
xchg
cmpsl
or
sub
call
fnsave
enter
pop
lcall
jne
xor
lods
and
inc
push
push
dec
xchg
jo
rcll
popf
imul
pop
jmp
inc
add
lahf
loop
decl
xchg
int3
ficoms
push
mov
out
clc
inc
imul
mov
sub
adc
rcrl
sub
pop
hlt
sbb
add
insl
in
and
sub
call
and
clc
cmpsl
js
js
mov
sbb
mov
mull
ja
adc
cmp
hlt
movsl
xor
sub
xor
int
xchg
mov
mov
sahf
ljmp
sbb
mov
ds
call
das
and
je
insl
push
cld
dec
into
pop
add
sahf
and
dec
das
sub
cmpsl
xchg
xor
add
dec
fbld
push
lea
js
add
mov
loopne
icebp
xor
test
mov
lods
jge
mov
cs
pop
and
and
clc
xchg
push
and
mov
stos
fidivrs
mov
mov
xlat
inc
inc
add
int
pop
mov
cmp
repnz
and
iret
push
aaa
loop
pop
loop
add
or
in
int3
ljmp
jb
mov
test
mov
cmc
or
dec
add
in
cmp
aam
aad
pop
sub
jle
fbld
ds
xor
lret
push
cmc
pop
mov
pop
jl
pop
je
cmc
mov
fisttpll
mov
inc
adc
faddl
dec
orb
and
push
cltd
pop
sbb
add
fucom
into
jo
test
adc
pop
imul
mov
jns
scas
outsb
out
pop
xor
inc
ja
jmp
inc
sub
xor
or
mov
and
dec
xchg
shll
add
inc
xlat
test
dec
adc
and
inc
mov
pop
stos
scas
outsl
fdivrs
cmp
ret
push
repnz
popa
xlat
pop
mov
pop
movsl
out
sbb
lret
mov
sub
lods
jno
jge
mov
test
out
and
push
ret
mov
sarl
in
sbb
add
bound
popa
sbb
pop
notb
fnstcw
adc
sbb
out
inc
repnz
inc
sahf
out
cmp
add
test
movsb
insl
scas
xor
js
push
cmp
push
ret
pop
pop
aas
subb
lock
clc
sti
add
or
lea
pop
mov
loope
jp
imul
inc
clc
add
mov
out
mov
dec
pop
bound
ljmp
incl
mov
insl
jae
mov
inc
fs
and
popf
lahf
loop
mov
jae
fs
jmp
cwtl
clc
testl
sbb
fwait
mov
and
popf
jle
outsl
mov
jne
inc
jno
xchg
jmp
push
mov
das
rcr
scas
mov
push
cmovb
cmp
dec
mov
repz
das
sbb
fwait
xchg
pop
les
flds
rcrl
pop
pop
sahf
jnp
popa
sub
pushf
dec
pop
clc
and
out
mov
out
pop
jnp
mov
in
jecxz
push
out
adc
lods
aad
iret
aas
cs
leave
mov
sub
out
cltd
iret
mov
nop
xor
int
jg
push
sbb
shll
rorb
js
lcall
stos
add
test
xchg
rclb
pop
leave
mov
clc
lret
push
lock
pop
and
fnstcw
dec
lret
je
lcall
push
mov
and
loope
int
test
test
out
nop
adc
sub
dec
mov
pusha
repnz
out
mov
jne
sub
push
add
xor
hlt
pushf
mov
mov
fimuls
stc
inc
sub
push
push
jo
std
cmpsb
sbb
xchg
jmp
fldt
cltd
xchg
pusha
or
rorl
xchg
xchg
cmp
mov
sbb
lahf
inc
sbb
push
mov
pop
movsl
cmp
xor
int
push
inc
or
jl
jae
or
adc
gs
push
ret
pop
mov
popf
dec
or
adc
xchg
gs
sbb
adc
or
call
ficoml
pop
push
cmc
scas
mov
fdiv
leave
xor
je
rolb
xor
pop
sub
bound
icebp
mov
lahf
popf
pop
sub
add
xor
push
sub
mov
and
push
cmp
lret
dec
or
mov
popf
cli
aad
xor
out
inc
inc
pop
xchg
sub
in
hlt
ret
les
dec
sbb
out
int
out
xlat
lahf
mov
call
rcll
inc
pop
or
xchg
mov
adc
adc
stc
rol
push
test
inc
iret
fimuls
insl
inc
lods
cwtl
ljmp
in
into
mov
sub
fldl
iret
cltd
popa
jno
pop
roll
iret
jmp
push
out
lcall
popf
lcall
or
test
push
cli
xlat
xor
cltd
jb
jle
mov
cli
cmp
add
xchg
shlb
xlat
mov
fs
js
add
sub
push
subl
data16
xchg
xchg
pop
clc
jl
mov
imul
lods
jbe
daa
lret
push
outsb
inc
mov
test
cmp
nop
rorb
xor
mov
sbb
cmp
test
nop
or
repz
cs
in
dec
cld
andl
leave
and
mov
pop
sbb
adc
les
jae
andl
js
cmpsl
test
or
movsb
testb
and
dec
or
dec
push
dec
out
push
cmp
and
mov
popa
loopne
flds
psadbw
insb
or
xor
imul
pop
aas
push
jmp
jmp
ret
mov
fnstcw
rcrl
pop
outsl
mov
js
jnp
pop
jb
sbb
fistl
or
add
push
or
loope
lea
add
jg
mov
pushf
add
hlt
es
loop
mov
dec
fcmovnbe
in
nop
dec
fdivl
xchg
mov
in
inc
push
dec
lea
xchg
movsl
xchg
mov
jno
mov
popf
fisubs
lahf
dec
adc
cmp
lahf
imul
mov
jl
ret
xchg
inc
jne
push
dec
mov
mov
add
xor
out
mov
mov
mov
jle
lds
call
push
sbb
stos
mov
mov
das
in
mov
xchg
jb
inc
sti
hlt
adc
cmp
in
mov
fildl
clc
jno
xchg
xor
inc
out
sarb
jg
xchg
inc
dec
xchg
jg
pusha
push
mov
mov
aad
fimull
or
xchg
lret
imul
in
and
insb
shll
ss
pushf
sub
test
mov
outsb
sub
xor
xchg
bnd
jmp
xchg
les
call
popa
lahf
xchg
cmpsb
push
loopne
mov
pop
dec
fcom
xor
xor
lcall
je
xor
aas
aas
inc
scas
out
jge
fldenv
mov
imul
int3
cmpl
daa
repz
or
rorl
jecxz
jmp
pop
cmp
push
imul
lock
mov
add
ficompl
add
and
cmp
scas
sbb
xor
pop
lcall
addr16
mov
xchg
call
xchg
fidivs
dec
cmpsb
adc
stos
xchg
sbb
call
pop
mov
xor
and
incl
adc
and
popa
andl
pushf
sub
ret
mov
enter
lods
mov
inc
cmp
jge
out
out
jl
cld
push
sarl
jns
jge
push
aaa
movsb
ljmp
fdivs
jne
lcall
pop
pop
adc
push
push
or
cmp
inc
loopne
adc
fsubrs
shl
push
in
aad
mov
popa
cs
addr16
push
scas
cmp
jns
mov
mov
icebp
xchg
xchg
into
hlt
ja
ss
les
loopne
test
lahf
ljmp
xlat
pop
pop
and
mov
xchg
hlt
test
inc
fs
jge
ret
out
xor
or
sarl
or
cli
hlt
or
push
ret
push
fisttps
shrb
inc
sub
mov
fidivs
decb
scas
and
addr16
sub
testl
mov
cmp
jecxz
rcrl
sub
and
shlb
jmp
pop
js
mov
out
lock
mov
in
xchg
lea
test
mov
aam
in
lcall
mov
xor
dec
add
sarl
push
lcall
hlt
lahf
or
divb
idivb
and
test
not
xchg
negl
push
in
xorb
stos
add
test
aaa
sub
jae
adc
stos
adc
add
repz
xchg
enter
xchg
or
fs
cmp
iret
or
sbb
xchg
inc
push
jo
dec
sar
inc
mov
add
add
mov
repnz
mov
out
cli
sarb
scas
ficoml
mov
roll
jne
pop
repz
prefetch
add
mov
mov
out
jno
push
in
outsb
add
and
pushf
or
movsl
jns
and
dec
in
adc
rclb
cmp
int
cmpsb
insb
or
cs
dec
xchg
push
fiadds
sahf
adc
hlt
jne
mov
ja
in
into
mov
fs
jno
jle
adc
mov
js
push
xchg
test
sub
dec
pop
rcr
jo
lret
repz
inc
inc
mov
js
jge
pusha
xor
insb
rcrl
mov
fadds
mov
fwait
jne
sbb
sub
cltd
into
popf
out
jno
jno
mov
nop
notb
arpl
and
lock
dec
or
and
mov
fwait
mov
scas
adc
xor
lods
or
scas
jp
pop
add
cwtl
and
cwtl
jg
xchg
shll
add
dec
pop
xor
popa
add
in
stc
scas
aas
inc
subl
cmpsb
push
xor
or
dec
andl
mov
mov
imul
pop
jae
fcoms
cltd
mov
push
jge
mov
mov
ja
repz
lretw
out
pop
ja
rcrl
daa
ret
pop
lods
or
punpcklwd
jmp
in
add
outsl
jmp
out
lret
sub
xchg
in
imul
cmp
std
push
mov
sbbl
dec
pop
sti
shlb
bound
or
jns
call
mov
test
cmc
repz
ret
inc
testl
push
mov
cld
push
adc
xor
shlb
sbb
dec
notb
lock
jecxz
mov
push
jg
xlat
add
sbb
add
loop
dec
cmp
pop
lahf
xchg
popf
push
push
or
push
xchg
push
add
fs
cmovge
pop
mov
jb
pop
mov
mov
orl
mov
roll
aad
movsb
push
mov
dec
jne
out
xchg
scas
stos
mov
mov
cmp
inc
stc
ja
fbstp
pushf
xlat
mov
mov
mov
mov
movsw
test
sub
and
cmpsl
in
jae
lret
addr16
shlb
pop
xor
push
cmp
divl
inc
in
or
mov
rolb
mov
leave
xchg
mov
and
mov
mov
dec
shlb
xchg
sbb
add
fisubl
cmc
pop
inc
int
and
fsubs
in
pop
jns
movsb
jmp
sub
int
lea
mov
das
lds
decl
push
xchg
imul
fcoml
jne
movsl
lret
or
sub
jb
sbb
mov
mov
inc
jg
cmpsl
jecxz
stos
inc
dec
ljmp
aam
jb
popf
popa
lahf
cmpsl
gs
addr16
pop
fstpl
mov
dec
loope
and
mov
jp
fcmovbe
xorb
xchg
fwait
loope
jmp
lahf
adc
sub
xor
test
jmp
loopne
or
pop
sbb
dec
mov
sub
popa
stos
andb
jp
cmp
dec
pop
push
jle
std
cmp
push
and
cmp
pushf
incb
or
rcr
pop
aam
sarb
cs
pop
sarl
or
sahf
and
push
dec
or
add
add
mov
ds
call
insl
pop
mov
or
and
in
mov
dec
in
shrb
pop
jecxz
mov
mov
test
pop
cld
mov
xchg
dec
mov
inc
sbbb
or
adc
adc
jg
mov
out
xor
test
xor
in
xchg
dec
sbb
cmc
fwait
bound
adc
and
fcompl
iret
mov
or
jle
cli
retw
jp
imul
sarb
adc
dec
inc
mov
jo
pushf
enter
shrb
mov
and
and
xor
jg
iret
hlt
fwait
cmp
fists
sti
cmp
mov
dec
add
je
cmpsb
in
pop
pushf
cwtl
pop
xor
sub
ret
fidivl
xchg
sub
cmp
sbb
or
inc
and
std
addr16
jns
imul
sbb
out
lds
ja
inc
push
mov
xchg
adc
lret
mov
movsb
push
inc
imul
insl
andl
adc
out
mov
rorl
push
lods
ror
pusha
dec
arpl
dec
cld
cmpsb
out
push
dec
add
in
cmp
fdiv
in
or
fs
int
jp
adc
dec
inc
fnstcw
orb
lock
dec
das
std
mov
mov
je
faddp
cmc
mov
jne
jns
test
push
or
push
xchg
loop
mov
inc
addr16
les
js
jge
fidivl
mov
pop
xchg
push
jns
push
cmpsb
adc
aad
jns
and
iret
ljmp
movsl
fwait
pop
rcl
jg
mov
or
dec
sub
jae
xchg
pop
or
cmp
ss
sub
lock
sbb
mov
inc
dec
std
into
jbe
or
aaa
inc
pop
sub
outsb
call
push
rcl
mov
mov
into
in
cmp
mov
in
cmpsb
outsb
push
aam
cmp
lcall
fwait
les
push
cmp
push
pop
out
orb
and
inc
cmp
or
push
pop
rcr
dec
insl
mov
cli
xor
dec
mov
mov
out
cs
adc
mov
movsb
popf
mov
sub
xchg
movsl
imul
rcrb
cmp
xor
scas
iret
xchg
mov
std
cmp
xor
pop
cmpb
adc
movsb
mov
pop
leave
mov
test
mov
jo
mov
cwtl
sbb
mov
jo
sub
cwtl
adc
xchg
jb
dec
fisttpll
aam
ret
stos
pop
dec
jp
mov
mov
in
int
int3
gs
push
fisubs
scas
jmp
add
int3
es
lcall
in
add
movsl
loop
scas
adc
dec
test
gs
stc
add
enter
and
cmp
in
cmp
xchg
adc
add
clc
inc
mov
daa
icebp
js
in
cmp
mov
es
or
xor
xchg
pop
pusha
jae
out
mov
aam
cmp
inc
adcl
mov
cmpsl
stos
jns
pmaxsw
xor
or
cmpsb
ljmp
push
je
into
enter
sbb
cmp
jp
xchg
add
mov
xchg
and
adc
jo
lcall
das
mov
fistl
stos
gs
and
xlat
dec
sbb
and
cmpsl
and
pop
stc
mov
mov
ljmp
inc
out
ja
fisubrs
sbb
add
and
hlt
pop
inc
div
jge
je
in
jecxz
or
sub
jmp
movsl
mov
or
xchg
sub
out
aad
divl
mov
lret
test
cwtl
sti
aad
cmp
xchg
sbb
rcr
mov
fcomps
sar
imul
outsb
fisttpl
mov
xor
xor
test
popl
dec
js
faddl
and
ss
out
xchg
add
imul
mov
pusha
clc
std
xor
lcall
mov
sub
aam
je
popf
xor
sarb
mov
sub
sub
bound
shll
lret
jnp
pop
push
push
push
out
mov
lock
fcoms
into
fmull
sub
pushf
mov
adc
add
inc
mov
sub
fsubrl
add
adc
leave
cld
clc
pop
lahf
push
cli
add
mov
sbb
es
pop
adc
outsb
or
popa
in
jp
xor
and
scas
aad
les
push
imul
lea
mov
cld
mov
mov
mov
insb
mov
cmpsl
xchg
mull
or
je
inc
fsubrl
mov
ret
jno
movsb
or
mov
loopne
xchg
jno
jno
std
xchg
div
insl
in
fucomi
mov
fstps
bound
shrl
dec
xchg
sub
mov
pop
jmp
add
push
outsb
pop
and
xchg
adc
add
ja
cltd
fucomp
xlat
popf
sub
out
jnp
cs
shll
rcrl
je
dec
sahf
loop
icebp
push
xorl
sub
and
mov
imul
loopne
sub
inc
into
fbstp
bswap
rclb
das
jnp
inc
fildl
mov
sbb
lods
orb
mov
or
jo
push
mov
sti
fists
mov
aaa
sub
sbb
adc
js
ret
les
adc
setb
cmc
mov
incl
lds
or
gs
popl
outsl
xchg
pop
push
lods
adc
idivb
je
fcoml
xchg
pop
mov
adc
movsl
iret
mov
sub
dec
jnp
ja
pop
xchg
push
push
loop
sbb
adc
inc
cmp
jne
addr16
adc
pop
xchg
push
inc
lcall
cmpsb
sarb
push
dec
movsl
mov
or
jecxz
pop
fdivs
sbb
mov
sub
lds
les
aas
dec
mov
cmp
xchg
push
adc
inc
push
aam
aas
adc
adc
fnstenv
sbb
sbb
adc
cli
icebp
fbld
jecxz
mov
dec
sti
pop
mov
jle
adc
push
dec
cltd
xor
int
fistps
clc
xchg
push
inc
adcb
inc
sbbl
adc
sub
ds
inc
jnp
mov
das
or
xor
clc
xchg
adc
xchg
add
inc
push
lds
insl
sbb
mov
adc
roll
ja
loope
nop
mov
mov
lods
jne
mov
jecxz
pop
xor
cmc
mulb
popf
jae
ss
mov
mov
push
js
test
adc
inc
and
fldl
out
out
sarb
jle
xor
pop
fdivr
insl
jp
and
pop
outsb
dec
xchg
notb
adc
scas
pop
lcall
jnp
pop
or
je
outsl
out
xor
mov
lea
ret
leave
pop
fwait
or
fdivl
adc
cmpsb
pop
mov
jmp
add
xchg
call
lret
pop
dec
and
push
jmp
js
inc
andl
fsubrl
repz
test
add
mov
sti
jb
dec
sub
jo
xchg
jecxz
or
xchg
addr16
cwtl
sub
jno
inc
xchg
mov
add
aas
in
jge
in
push
mov
movsl
adc
fcomps
ficompl
test
xor
dec
xchg
push
les
fldl
mov
lahf
stos
mov
dec
das
sub
add
sub
push
fmul
cwtl
pop
cmp
roll
pop
inc
jnp
jge
add
stos
iret
push
push
jl
pop
imul
pop
dec
stos
inc
add
pop
fbstp
sahf
push
mov
add
lret
jg
mov
stos
jmp
cmpsb
mov
in
int
in
test
in
pop
aaa
sahf
or
enter
mov
sbbl
mov
aas
mov
popf
xor
fndisi(8087
mov
les
or
fistps
imul
mov
fdivs
pop
loopne
xchg
add
ljmp
mov
ret
push
lds
fcmovu
out
enter
aas
aad
ljmp
mov
lret
mov
je
jae
in
pop
mov
xor
inc
xchg
inc
rcrb
xor
in
in
clc
leave
xchg
rcr
fidivs
std
mov
xchg
cld
mov
pop
pop
rcl
jg
aas
jns
mov
movsl
dec
pop
cmp
xchg
nop
int3
inc
addr16
pusha
jl
xor
adc
rcrl
adc
xchg
fld
lret
jno
std
les
jecxz
adc
xlat
or
and
mov
inc
inc
icebp
add
add
repz
rolb
add
inc
ja
testb
jno
adc
in
inc
movsb
mov
and
mov
ljmp
out
cmp
sub
pop
out
or
jecxz
jecxz
ds
xor
xlat
divl
jg
or
xor
cld
xor
insl
fstps
clc
push
ds
jno
shlb
xor
inc
test
jae
icebp
mov
fsubp
cmp
adc
lcall
incb
test
pop
in
daa
scas
cwtl
fildl
aaa
jecxz,pt
bound
ret
and
pop
lock
sti
mov
std
mov
xor
inc
and
jmp
mov
jb
pusha
aad
fwait
inc
pop
jmp
sub
test
mov
add
sbb
and
mov
lcall
push
inc
ret
cmpsb
cmp
dec
push
scas
dec
pusha
imul
mov
xchg
enter
pop
add
push
pop
push
mov
movsbl
cli
jb
sbb
push
ret
stos
or
cli
leave
add
rcrb
or
push
pop
rorb
xorb
jecxz
and
stos
push
sar
ret
test
pop
arpl
jecxz
pop
movl
adc
pop
rcrb
dec
push
movsl
sbb
loope
cmp
adc
dec
inc
mov
dec
lcall
movsl
push
je
jp
les
stc
and
jb
fsubs
mov
push
jmp
add
cmp
addb
or
sub
add
cld
lret
movsb
pop
push
or
orl
fs
dec
sub
mov
pop
inc
dec
push
mov
scas
fldcw
xchg
mov
jecxz
mov
adc
jge
fwait
stc
add
sub
xchg
loopne
xor
xor
test
and
rorl
push
sbb
sub
jl
pop
data16
fdivrs
jle
dec
mov
add
insl
jno
inc
insb
in
pop
call
inc
mov
jns
sub
enter
pop
imul
and
addr16
fldl
adcb
dec
shlb
mov
cwtl
sbb
daa
outsb
xchg
add
jge
xchg
ljmp
mov
jns
fcoms
data16
pop
add
notl
pop
and
cmp
je
aam
test
in
popf
push
mov
and
ss
repnz
inc
inc
iret
fwait
shll
mov
cltd
ds
cmpl
or
xchg
adc
xchg
sbbb
and
lock
cmp
ds
fdivrp
mov
cmp
jns
leave
rcrl
lahf
mov
lret
jmp
inc
movsl
iret
dec
jge
xlat
xchg
and
pop
mov
mov
lret
into
stos
cwtl
popa
outsl
inc
xchg
shl
push
and
push
repz
mov
pop
xor
dec
out
jmp
jle
test
fimuls
pop
cmp
mov
je
std
aas
jo,pn
pop
ficomps
pop
xor
fldenv
call
call
scas
xchg
shrb
pop
movsb
jb
jmp
or
xor
in
dec
addb
insl
test
dec
addr16
idivl
xor
in
mov
mov
mov
into
ds
movsb
stc
test
sub
mov
pop
or
into
sahf
test
loopne
aaa
cltd
jno
and
jge
mov
in
rcrl
mov
inc
enter
in
out
pop
dec
xor
inc
arpl
xchg
or
fmull
adc
xchg
mov
jge
jge
dec
out
je
repnz
sti
cmp
hlt
sub
pop
pop
sub
stc
sbb
and
xor
or
xor
push
cmp
and
insb
sub
int
pop
cmp
xchg
inc
xchg
mov
mov
cs
pop
out
cmpsb
fcomp
out
adc
cmp
mov
stc
or
ljmp
fnstsw
inc
testb
sub
mov
cmp
cltd
or
jmp
stc
xchg
in
lcall
jecxz
add
dec
fstpt
xchg
ja
int3
data16
fsubp
rcl
sub
out
jnp
sub
mov
fs
sub
mov
jg
xchg
aas
add
loopne
pop
cld
ss
stc
movsl
aaa
rolb
ret
mov
nop
out
ret
into
fs
stc
call
jae
xchg
cld
mov
daa
ds
dec
push
jo
mov
pop
jmp
ljmp
shll
or
jp
mov
sub
add
cmp
jb
add
or
in
jno
jl
test
push
fdivrs
sbb
pop
dec
or
xchg
mov
sbb
movb
mov
out
outsl
clc
and
test
addr16
mov
dec
cltd
cltd
loope
fdivl
dec
dec
test
jle
sbb
scas
or
sbb
push
add
sbb
cmp
cmp
push
xor
and
push
test
push
inc
gs
dec
outsl
call
nop
mov
cld
mov
push
jge
push
mov
sub
mov
mov
jl
xchg
push
fscale
adc
mov
and
push
ret
pushf
add
cmpb
add
push
outsl
out
inc
push
xlat
arpl
xlat
fbld
insb
xchg
inc
fdivrl
mov
sti
rclb
fildll
jg
lcall
xchg
pop
into
xor
cmp
lahf
or
and
add
addr16
jmp
loope
mov
scas
loop
xchg
adc
sti
dec
adc
jge
xchg
mov
mov
push
mov
in
jl
sub
xorb
pop
mov
cmp
push
adc
pushf
adc
xchg
jg
xorb
xchg
xor
fs
insl
out
fwait
xor
cmpsb
xor
arpl
stos
bound
lock
mov
cmp
inc
or
mov
psubq
subb
and
jbe
or
xlat
mov
ljmp
dec
loop
in
aam
xchg
xchg
into
fs
jge
jae
flds
pop
fwait
movsl
dec
jae
jp
cwtl
aam
ss
aaa
sti
mov
stc
call
scas
adcl
out
sbb
cmp
jnp
mov
mov
sahf
mov
inc
je
xor
xor
pop
stos
mov
bound
shll
into
loopne
aas
nop
sbb
jae
fst
pop
fmul
fisttps
mov
adc
mov
flds
and
pop
mov
sub
jmp
fmull
inc
in
int3
xchg
mov
cmp
add
bound
movsb
inc
gs
decb
lcall
jo
sarl
shlb
jecxz
ret
sub
mov
push
fnstsw
mov
imul
arpl
jne
xor
mov
cmc
push
adc
mov
nop
inc
orb
jg
mov
push
leave
xor
fistpl
jae
jecxz
dec
pop
xor
adc
dec
pop
mov
mulb
sub
jle
test
mov
cmpsl
idivb
xor
inc
inc
inc
xchg
mov
test
dec
sbb
add
je
xor
cli
fstps
cmp
mov
imul
sahf
jb
xor
xchg
mov
mov
pop
mov
push
popa
inc
mov
add
hlt
fdivrs
xchg
xchg
fwait
leave
xor
pop
test
lahf
sti
fists
fimuls
pop
jbe
movsl
pop
cmc
mov
fnstsw
sar
ret
pop
cmp
lret
movlps
cmc
cltd
pop
mov
cmp
hlt
movsl
mov
std
insb
cmp
dec
scas
lcall
repnz
lcall
jp
pop
iret
test
xlat
mov
inc
or
pop
pop
dec
jge
push
ficoms
cmc
roll
stos
pop
inc
pop
cltd
clc
lods
hlt
jecxz
adc
fsubl
addr16
jbe
in
jb
push
add
in
ret
mov
nop
popf
clc
pop
and
cwtl
push
loope
inc
xor
sub
push
out
out
fidivs
add
or
push
mov
or
pop
scas
pop
add
add
push
ss
lds
push
and
sub
jae
imul
mov
jmp
mov
mov
mov
repnz
arpl
loop
leave
mov
mov
pop
into
mov
lahf
add
bound
adc
cmp
in
sbb
add
xor
arpl
push
lret
pop
aad
mov
push
and
mov
outsb
adc
outsl
mov
scas
jb
sarb
sub
mov
sub
jo
fnsave
mov
mov
dec
mov
shll
cli
sti
and
xor
pop
imul
fisttpl
dec
mov
or
enter
inc
cmpsb
outsb
mov
movsl
adc
push
adcb
add
fidivs
es
outsl
push
sbb
fs
clc
sub
push
shrb
jns
cmovge
fiadds
lds
mov
iret
xor
imul
ss
xor
jmp
mov
fldl2e
fstl
cmp
stos
insl
rcl
incl
cltd
jno
sub
movsb
clc
push
decb
push
arpl
seta
jmp
jns
aam
push
movsb
adc
add
xor
cs
cld
test
shll
jmp
out
test
or
mov
lds
out
push
xchg
cmpsb
out
jle
mov
jecxz
into
cltd
inc
or
insl
inc
sbb
ljmp
data16
mov
aas
add
fidivrl
cwtl
ljmp
cmp
out
ss
cmp
and
push
or
ffree
push
ljmp
jle
jge
push
sahf
enter
cltd
jno
mov
lods
sub
rcll
fdivr
adc
and
incb
test
aas
push
adc
add
stos
loopne
sahf
cwtl
push
jns
push
dec
hlt
das
mov
gs
sbb
mov
or
mov
sbb
jb
hlt
sbb
xlat
xchg
adc
mov
or
dec
mov
xcrypt-ecb
cmpsl
or
cmpb
es
sub
test
mov
shl
mov
imul
inc
pop
jmp
cmp
push
mov
inc
aad
cltd
popf
push
imul
dec
sub
and
sbb
inc
dec
pop
mov
sub
inc
sub
in
inc
inc
xor
iret
jl
mov
rclb
fidivl
nop
adc
and
daa
scas
int
nop
pusha
or
cmp
pop
pop
movb
cmp
adc
cmp
pop
sub
fsub
sti
cld
pop
test
xor
add
imul
insb
dec
jnp
lret
pop
cmp
adc
inc
and
jo
out
mov
push
daa
icebp
xlat
mov
mov
add
mov
out
xchg
scas
test
insb
lods
mov
loope
mov
mov
inc
jb
std
mov
sbb
insl
sub
hlt
push
mov
dec
xor
sbb
pop
push
lea
dec
aaa
das
pop
mov
cmp
lret
rcrb
mov
lret
arpl
lds
aaa
cwtl
mov
jecxz
loopne
cltd
pop
aas
cmc
test
cld
jnp
jo
inc
add
push
push
jno
pop
ret
cmc
push
shll
jne
jmp
push
xor
jg
xchg
adc
jb
mov
jbe
pop
cmpsl
outsb
jne
mov
scas
push
int3
push
daa
in
inc
xor
sbb
imul
hlt
push
jle
lret
lods
fildll
push
divb
jmp
or
or
clc
mov
pop
out
lahf
add
out
insl
mov
jp
xchg
add
icebp
xlat
dec
sbb
sub
test
loop
sub
or
mov
sub
sbb
inc
ficompl
lret
into
jp
mov
xchg
xorb
jb
adc
mov
or
push
push
jbe
adc
dec
mov
data16
adc
movl
xchg
pop
lcall
lret
lods
xchg
or
inc
dec
cmc
cmp
test
fdiv
mov
aam
pusha
or
fdivrs
push
and
aad
pop
adc
sbb
inc
loop
and
push
adc
xchg
shlb
and
jecxz
inc
movsb
or
incl
mov
loopne
xor
push
inc
subl
push
mov
test
cmp
pusha
fs
xlat
pop
scas
out
imul
ds
adc
xor
shlb
ret
sub
cltd
cld
int3
pusha
mov
jg
repnz
gs
dec
pop
pop
pop
sub
lahf
mov
xchg
ljmp
in
push
cmp
push
sahf
les
mov
xchg
dec
shll
addb
mov
clc
pop
out
push
sub
pop
aas
xor
call
decb
and
mov
test
xchg
jp
cmpsl
fcoml
sub
ja
or
sbb
int3
dec
xchg
cmp
arpl
pop
stc
pop
lret
sbb
clc
imul
ss
pop
adc
lock
test
icebp
imull
sub
sub
xor
jns
mov
adc
sub
popa
push
push
fldl
test
imul
cld
mov
inc
divl
sub
push
dec
lret
dec
jno
push
adc
lea
daa
xchg
nop
mov
loop
insb
sti
lret
push
daa
xor
and
add
aam
xor
aad
aad
mov
cs
mov
xchg
push
or
or
pop
mov
dec
xchg
xlat
fadd
mov
outsl
inc
sub
cmp
fildl
adc
int
fcmovb
ds
repz
loopne
dec
sbb
push
or
adc
dec
scas
inc
pop
add
cmc
inc
push
cmc
sbb
imul
daa
in
fists
loop
pusha
aaa
int
add
ds
fidivrl
cmp
sub
dec
jg
dec
mov
cmc
xchg
mov
jl
cwtl
mov
sbb
xchg
mov
or
fistpll
mov
adc
in
std
pusha
mov
loopne
sbb
in
push
cltd
dec
mov
push
bound
jecxz
leave
xchg
ret
out
sbb
push
movsb
sti
insb
ret
xor
push
dec
mov
je
ret
pop
adc
pop
cs
inc
push
jns
into
iret
pop
out
xchg
sbbl
xor
in
sbb
jecxz
inc
or
les
enter
pop
jne
lods
xor
cmp
push
or
stc
mov
push
xchg
ja
add
mov
mov
sarl
idivl
pop
leave
out
in
cli
ret
inc
mov
call
ja
pop
mov
fnsave
xor
mov
shll
imul
nop
fcmovbe
inc
add
in
sub
mov
in
adc
pop
xchg
je
stos
pusha
fildll
rorb
or
xlat
cltd
jl
pop
xchg
xchg
nop
inc
jmp
sbb
sbb
ja
pop
aam
push
jno
pusha
es
test
dec
sbb
aas
pop
xchg
add
jno
inc
aam
mov
inc
dec
daa
and
orb
hlt
aas
mov
pusha
out
roll
sbb
jbe
pop
std
lahf
cmp
add
in
inc
mov
jo
xor
dec
sarb
mov
lds
enter
mov
sub
cld
test
inc
pusha
fildl
mov
cmp
movsl
ret
and
in
pushf
adc
dec
and
cld
in
xchg
push
sub
pop
scas
pop
jle
and
xor
orl
ret
adcb
mov
jl
cltd
pop
scas
sbb
mov
xor
and
mov
add
fistpl
push
mov
out
adc
in
ret
cmp
repnz
and
jp
repnz
jge
je
xor
xchg
inc
clc
push
add
and
jg
aad
cmc
subb
sbb
adc
push
jns
idivl
mov
inc
jnp
mov
sub
sahf
lcall
add
sbb
or
pop
stos
and
pop
imul
inc
movsb
mov
addr16
jbe
or
and
push
cmc
stos
mov
lods
stos
lea
push
inc
mov
xor
xchg
mov
enter
dec
mov
pop
je
stos
mov
mov
fwait
pop
popa
movsl
jb
jnp
sub
adc
into
push
shl
andl
or
xchg
outsl
gs
sub
flds
outsb
fildll
push
sub
insb
testl
mov
shl
inc
loope
inc
xchg
adc
js
adc
es
mov
rclb
adc
sub
repnz
aaa
cmp
xchg
data16
add
jge
jbe
popa
sbb
push
imul
mov
and
imul
testb
gs
rcl
dec
lea
adc
jb
rcll
xchg
js
cmpsl
mov
adcb
in
push
jnp
lahf
push
leave
das
out
imul
sbb
scas
insl
das
fistpll
xchg
loope
out
mov
ss
popf
outsb
dec
fcomip
cmp
cld
or
pop
cld
xchg
mov
pop
out
mov
jmp
adc
mov
jbe
adc
pop
testb
mov
push
pusha
mov
test
mov
add
ds
xchg
leave
int3
inc
mov
pop
mov
jae
and
lret
pop
jl
negl
call
xchg
add
sahf
outsb
rol
lahf
icebp
jp
notb
or
pop
cmp
mov
pop
ljmp
xchg
hlt
aad
mov
sub
testb
add
ret
adc
rclb
out
pop
jno
daa
jae
aad
xor
mov
dec
xchg
pusha
test
js
cmp
scas
jne
push
add
mov
ds
mov
xchg
add
sub
inc
scas
movl
test
cmp
jp
cwtl
adc
push
xchg
sub
repnz
cltd
sub
imul
cmc
push
sub
outsl
xchg
in
push
mov
out
in
dec
lods
mov
sarl
cwtl
pop
dec
jmp
pop
into
loope
out
fwait
push
inc
jp
sub
xchg
movsl
stos
cmp
mov
inc
testl
adc
push
aad
add
jle
xchg
fimull
cmp
sarl
xchg
cmpsb
mov
test
xor
aam
andl
movsl
xchg
dec
jb
adc
adc
mov
sarb
dec
dec
mov
div
sub
mov
dec
sub
jl
jmp
rolb
std
add
insl
shlb
xor
lods
js
mov
xchg
push
loopne
adc
ret
ret
and
outsb
bound
push
jae
and
sbb
push
push
arpl
push
mov
or
sub
in
sub
adc
das
aas
test
scas
rclb
push
pop
mov
out
scas
xchg
jno
dec
dec
js
sub
aam
in
pusha
addl
add
test
mov
cmp
lock
out
inc
mov
mov
dec
push
push
jnp
data16
aam
das
divps
cmp
test
push
add
mov
jmp
cmp
sub
fistps
jle
pop
mov
xchg
ret
fidivs
and
jg
push
xor
sbb
repnz
xchg
stos
cmp
xor
jge
mov
mov
xchg
mov
and
in
shlb
push
loope
hlt
cli
adcb
std
incl
dec
sbb
pop
outsb
or
xchg
adc
cltd
in
in
fcoml
xlat
shl
outsb
pop
sbb
stos
adc
jae
and
cmp
aaa
inc
ja
jg
in
xor
xor
add
stc
inc
iret
fwait
pusha
cmpsb
gs
jge
lock
mov
cmc
filds
adc
gs
negl
ds
pop
jecxz
les
adc
hlt
xor
xor
in
jecxz
cmpsl
loope
cmp
sub
push
adc
in
cmp
notl
mov
cwtl
repz
mov
mov
in
dec
fistl
jbe
je
mov
outsb
xor
and
loopne
filds
lret
push
mov
cwtl
xchg
je
je
xor
stc
mov
imul
or
cmpsb
lea
mov
mov
jmp
and
out
hlt
pop
push
pop
pop
popa
into
insl
fimull
pop
std
jle
mov
loop
add
cltd
nop
outsb
and
fimull
xor
insl
push
rcll
pop
push
push
test
in
outsl
adc
mov
mov
dec
ljmp
mov
sbb
cmp
frstor
add
inc
xor
inc
push
test
andb
or
push
xor
or
and
xor
adc
scas
xchg
jl
and
and
aam
int
lods
aam
add
sahf
enter
and
xchg
sahf
arpl
or
jbe
aam
add
test
nop
xor
push
dec
push
fwait
jns
mov
push
pop
aaa
cmp
mov
mov
inc
mov
orb
xchg
and
ds
icebp
int3
cld
cltd
popa
outsb
js
into
adc
dec
fadds
mov
loope
lahf
jl
jb
xchg
int
mov
rcrl
mov
test
or
xor
lahf
mov
push
jg
scas
or
jno
push
sub
xor
or
or
xor
bound
cmpsb
jo
push
and
adc
dec
lods
mov
ja
pop
clc
int3
or
insb
jns
bound
cmp
cld
es
mov
lcall
jno
outsl
mulb
cmp
jmp
flds
adc
pop
add
cltd
ljmp
jns
xchg
fsubrl
and
cmp
jge
mov
jmp
shrb
or
popa
int3
xchg
mov
loop
mov
cmpb
xor
xchg
pop
in
or
imul
sbb
lcall
push
cli
inc
lahf
adc
leave
push
test
mov
mov
xlat
fcmovnu
pop
jne
ds
enter
sbbb
pushl
jns
leave
mov
mov
cmpsl
repz
ljmp
pop
or
sbb
pop
test
cltd
xchg
mov
and
cli
sahf
xchg
dec
or
xor
mov
loopne
hlt
gs
cwtl
ret
inc
decl
cmpb
sbb
inc
push
and
inc
jmp
orb
in
jo
inc
loopne
pop
mov
pushf
push
scas
mov
pop
mov
jle
lret
pop
jno,pt
dec
es
and
in
jns
inc
fbstp
sub
inc
rorl
jle
test
cmp
fisubrs
movsl
lods
dec
pop
mov
sub
aaa
pop
loopne
push
loop
out
stc
mov
mull
movd
aas
jbe
rcrb
pusha
lahf
loope
mov
mov
jbe
aaa
call
jp
dec
cmp
jb
jle
icebp
int3
shll
jge
fisubs
les
dec
and
sbb
popa
mov
sbb
xor
mov
xchg
testl
cmp
int
xor
mov
loope
and
lods
test
test
and
scas
mov
fwait
sbb
or
subb
jg
jb
aad
add
xchg
xchg
cli
mov
jns
test
lret
test
and
imul
out
jge
sbb
movsb
sub
dec
fdivr
jecxz
pop
outsb
arpl
jne
inc
xchg
das
push
cmpsl
cmp
add
pop
insb
pop
mov
xchg
call
adc
mov
int
scas
call
popa
push
ret
push
shrl
jmp
cmp
in
insb
mov
mov
mov
fisubs
loopne
xor
sub
xchg
jp
inc
rcr
int
test
lods
xchg
ljmp
xor
mov
inc
push
mov
mov
nop
out
or
outsb
std
xlat
insl
call
or
insl
or
pop
sbb
adc
scas
push
xchg
mov
iret
mov
and
jge
xlat
push
add
mov
xorl
fucomi
fistps
push
mov
mov
sub
pop
in
je
cld
cmc
test
movsb
inc
lret
lahf
icebp
add
push
jae
sub
rolb
ret
mov
insl
push
mov
push
data16
jae
icebp
hlt
sub
pop
xor
adc
ljmp
add
jbe
xchg
in
dec
mov
sahf
ss
pop
mov
push
jecxz
push
xor
outsl
mov
loop
imul
mov
or
dec
lods
inc
jbe
pushf
mov
in
jo
xorb
daa
ds
shll
aad
int3
cmpsl
dec
pop
sub
out
and
pop
add
push
imul
aam
les
imul
test
add
out
lds
xor
dec
imul
mov
or
xor
int
sbb
hlt
pop
js
cmp
outsl
cs
and
popa
dec
mov
aad
scas
and
mov
and
mov
jns
loop
je
out
jge
add
mov
pushf
daa
mov
enter
jne
jl
lcall
pop
pop
in
inc
add
pop
test
adc
lods
add
cmp
cmpsb
aam
xchg
sbb
sbb
jge
xor
pop
in
cmp
pusha
test
js
xchg
and
xchg
dec
movsb
mov
jle
push
or
arpl
cmp
xchg
clc
and
fdivrs
adc
mov
mov
pop
stos
jne
sti
fistpl
or
push
sub
ss
mov
xchg
test
mov
lds
inc
fmul
incb
mov
mov
mov
dec
lds
inc
push
insl
sbb
test
lods
roll
int
pop
test
and
lods
fs
psubusw
sbb
rcll
pop
sub
aaa
fs
aam
idiv
xorb
cwtl
xchg
sbb
jo
fmulp
dec
repz
leave
push
int3
pop
mov
add
push
mov
ja
sti
movsb
mov
mov
mov
repnz
mov
jbe
jns
push
jl
shlb
repz
out
push
jae
xchg
ret
hlt
cmpsb
jbe
cltd
iret
and
fsubl
ja
psraw
mov
jns
fstpl
data16
dec
xor
cmp
out
addr16
pop
jae
cmp
xlat
dec
mov
push
sti
mov
adc
cmp
mov
fsubrs
cmpsb
lds
rcrl
out
insb
pop
or
mov
rcl
push
fs
mov
es
test
push
sbb
mov
out
rorb
fs
mov
popf
and
test
je
sbb
and
xorb
push
ds
stos
add
in
jge
lock
and
dec
cs
das
and
mov
mov
inc
out
ja
ljmp
jns
ss
push
out
lahf
cmp
mov
mov
ret
and
in
adc
jle
leave
mov
jecxz
cltd
aam
mov
xchg
mov
testb
test
int
es
push
icebp
or
dec
xor
in
insb
loopne
daa
lock
pushf
in
lea
sbb
xchg
jmp
fisubl
mov
xor
sub
inc
dec
loopne
mov
fbld
pop
std
jae
mov
popf
ljmp
arpl
inc
out
movsl
sbb
xor
lea
mov
push
sahf
leave
mov
jns
xor
cltd
sti
iret
inc
insl
dec
adc
push
and
add
mov
mov
outsb
push
adc
jne
mov
xchg
or
mov
into
clc
pop
push
pushf
hlt
pop
shrb
push
ret
mov
jns
sbb
decb
ljmp
pusha
adc
je
fcmovnbe
dec
sub
mov
lods
in
jo
sbb
pushf
daa
jg
mov
xor
push
xchg
xchg
data16
cwtl
pop
stos
and
or
rolb
std
fwait
push
pop
xorl
arpl
icebp
movsb
jp
inc
js
jl
cmp
push
sub
orl
cltd
out
mov
rolb
icebp
dec
push
lret
cmp
push
xchg
sbb
aam
inc
jle
fadds
dec
fsubrl
test
fs
leave
jns
ljmp
pop
lock
fs
jo
mov
repz
or
push
xchg
int
dec
inc
sub
jo
xchg
mov
pop
pop
lds
xor
mov
xchg
xchg
leave
lret
fsubl
mov
jo
enter
sub
rorl
imul
xor
mov
loopne
in
and
mov
mov
ret
aas
add
xor
fsubrs
mov
pop
shrl
imul
cmp
and
adcl
pop
sbb
xor
les
sahf
add
cmpsb
push
push
pop
dec
xchg
ja
push
push
js
xor
pop
stos
imull
xchg
inc
pop
mov
test
push
bound
nop
dec
ja
push
mov
inc
mov
mov
mov
push
push
outsb
aaa
jo
inc
cs
pop
bsr
aaa
and
movsb
sahf
or
jp
mov
dec
xor
xchg
sahf
int
mov
loop
cmp
adc
mov
inc
mov
stc
jbe
loope
popf
gs
pop
lods
xor
add
xor
inc
mov
es
sbbb
push
xchg
leave
fisubl
scas
bound
xchg
pop
addr16
insl
xchg
fdivrl
pusha
mov
stos
cmc
ljmp
aas
test
fsubrs
xchg
push
sbb
cmovbe
stc
insl
cmp
fsubl
push
sahf
pop
andb
pop
or
sub
aas
lock
xchg
in
inc
stos
pop
push
pop
div
lods
scas
pushf
mov
testl
inc
rcrl
incb
xor
jl
jp
or
fneni(8087
push
bound
adc
sbb
dec
fnstenv
or
jp
mov
mov
js
sbbl
xchg
mov
push
cmp
fucomip
clc
mov
jne
mul
mov
push
out
jg
lcall
lahf
gs
pop
scas
push
enter
ret
out
out
mov
jae
and
xchg
push
xlat
and
outsb
inc
sbbl
add
and
mov
mov
xchg
es
cmp
mov
mov
sarb
adc
in
mov
inc
fistps
out
ret
jb
jl
lcall
cmp
push
loopne
pop
adc
lret
in
andl
sub
add
outsl
adc
cmp
fistpll
add
xor
inc
mov
lds
cld
cld
stos
adc
test
dec
and
loopne
test
int3
iret
cmp
xchg
ret
push
test
fsubr
push
pop
push
jo
jl
repnz
mov
fcom
das
sub
xchg
sbb
mov
std
iret
dec
pushf
hlt
pop
dec
das
push
sahf
and
mov
sub
inc
jmp
aas
adc
sti
shll
int3
repz
push
dec
lods
mov
clc
jns
dec
add
cmp
push
pop
in
fadds
xchg
dec
imul
in
aam
add
push
pop
jno
jbe
lcall
cwtl
mov
stos
fwait
mov
xchg
dec
push
xchg
jnp
xlat
pop
mov
sti
subl
wbinvd
jne
mov
jmp
in
inc
and
adc
ja
sbb
mov
add
jg
pop
cmpsb
andb
xchg
es
stc
ss
lret
orl
add
hlt
setge
ss
test
cmpsb
inc
push
jmp
or
sub
xchg
cmpsb
imull
in
xchg
incl
cmp
and
divb
inc
inc
sbb
lret
imulb
sub
inc
push
jns
popa
mov
hlt
and
mov
leave
dec
mov
sbb
ret
dec
outsb
sbb
and
mov
cmp
sbb
aam
outsb
pop
add
add
cmp
mov
cmp
mov
in
push
push
and
fwait
jb
jnp
sbb
in
push
cmc
fsubs
pop
data16
add
loop
cltd
and
sbb
enter
push
std
aaa
add
push
dec
fwait
dec
stos
mov
pusha
inc
outsl
or
inc
pop
mov
gs
mov
loopne
bound
leave
scas
sub
inc
sbb
adc
clc
orl
mov
sbb
stos
sbb
sbb
dec
sbb
pop
scas
out
int3
jne
pop
iret
in
loopne
mov
sub
jmp
push
scas
inc
push
sti
stc
scas
imul
loope
sub
cmp
mov
ficompl
scas
shlb
and
out
das
cmp
mov
std
out
sub
test
push
jecxz
push
clc
cs
pop
mov
hlt
and
mov
repz
shl
arpl
push
sbb
in
inc
cmp
or
xchg
mov
ficomps
mov
and
mov
dec
push
inc
test
addr16
inc
repz
popf
mov
dec
mov
filds
cmp
iret
sbb
mov
in
push
aaa
decb
pop
sbb
outsl
xor
pop
mov
fmul
add
add
insl
mov
fildl
fwait
mov
stos
test
mov
sti
dec
add
leave
daa
test
fwait
pop
and
lea
stos
mov
mov
int3
popf
lods
push
xchg
pop
ds
subb
xchg
mov
enter
scas
pushf
pop
add
dec
sub
push
repnz
inc
push
lods
aaa
outsb
cmpsb
iret
inc
mov
mov
mov
icebp
and
jg
push
into
inc
ret
mov
insl
in
mov
mov
xchg
or
jo
test
or
mov
push
ret
loop
sarb
and
add
mov
cmp
jmp
outsl
iret
or
push
cli
hlt
in
pop
xor
rorb
adc
stos
jmp
xorl
mov
aaa
dec
jnp
jle
cmp
