sbb
add
mov
pushf
mov
add
dec
repnz
or
das
shll
enter
cmp
sub
mov
push
sub
inc
xchg
cmpl
addl
imul
adc
mov
mov
nopl
inc
lret
push
aaa
cmp
sbb
rorl
xchg
push
popf
aam
cmp
sar
or
arpl
pop
shlb
sub
aas
in
or
sub
push
js
push
in
test
push
notl
movsl
pop
nop
jp
mov
aam
iret
call
jno
adc
inc
dec
sub
icebp
sub
pop
ljmp
pushf
lods
rcrl
dec
mov
lret
jge
imul
xor
jns
call
fmul
pop
xlat
jnp
popa
add
sbb
lcall
mov
jns
mov
nop
add
xchg
xor
sub
mov
push
cld
push
xor
ljmp
cmp
inc
cmpsb
jp
test
outsl
jb
sbb
pushf
sahf
pop
std
jnp
scas
pushf
adc
es
cwtl
mov
or
jmp
jb
ds
adc
jae
jbe
or
mov
cltd
ja
enter
jne
pop
pop
xor
dec
push
dec
and
lea
jecxz
cmpsb
dec
into
jb
stc
js
insb
lcall
push
incb
pop
cwtl
orl
stos
cwtl
stc
xor
rolb
in
sti
test
lret
xchg
repnz
push
mov
push
xlat
call
sbb
push
or
rol
mov
mov
addr16
jae
inc
dec
cs
sub
fucomip
or
shrl
add
popa
pop
fbld
js
push
outsl
negb
ss
bound
mov
fists
dec
in
mov
mov
xor
cmc
add
cmpsl
xor
test
fistl
shlb
xchg
cmc
dec
imul
adc
mov
xor
popf
jae
ds
dec
or
push
mov
sbb
cmp
sbb
ljmpw
test
sub
push
jae
stos
movsl
inc
insb
cltd
testl
fsubl
jge
stos
push
sub
bound
mov
pop
arpl
movsl
inc
sbb
mov
hlt
xchg
xor
jns
jl
sub
xchg
lahf
cld
mov
mov
lahf
sti
lahf
mov
cli
in
ljmp
cmp
dec
stc
sbb
mov
call
in
fwait
in
inc
jecxz
scas
stc
mov
push
je
sbb
or
in
push
ljmp
and
ja
ret
sub
jle
adc
in
xor
pushf
daa
mov
movsb
ja
push
dec
add
fwait
gs
add
xchg
xor
cmc
stos
scas
mov
pop
cmpsb
jne
jg
push
enter
inc
push
lret
clc
fs
pop
push
lods
and
jp
repz
jns
mov
movsb
jnp
lea
push
shll
popa
sti
mov
mov
xchg
jb
sbb
dec
jmp
jg
ret
add
push
lods
hlt
outsb
lcall
mov
mov
popf
jne
das
pushf
sub
stos
out
xor
sahf
add
cmc
jnp
and
loop
lods
mov
cvtpi2ps
pop
xchg
sub
adc
imul
cltd
pop
sbb
mov
ficoml
test
hlt
or
adc
pushf
lahf
gs
inc
int3
ficomps
dec
jle
mov
test
sub
push
xor
pop
imul
test
adc
out
ja
rcll
gs
idiv
fwait
xor
loop
jle
adc
xchg
push
mov
sahf
push
ds
adc
xlat
popa
movsl
xchg
lods
jp
cmp
test
cmp
test
mov
mov
cmpsl
adc
xchg
and
ljmp
icebp
adc
ficomps
push
clc
mov
gs
mov
pusha
lcall
pop
mov
dec
lcall
scas
lds
sub
push
push
incl
outsl
dec
icebp
inc
or
cs
pusha
pop
sbb
data16
fmull
cs
dec
jnp
xor
xor
sbb
lret
aad
sahf
xor
shl
adc
repz
jmp
jp
loopne
movsl
lods
mov
mov
sub
add
sub
arpl
mov
fbstp
mov
push
mov
jp
inc
inc
addl
dec
and
insl
push
popf
cmp
shlb
cmp
adc
add
push
fdivp
sbb
pushf
pushl
push
inc
dec
or
movsl
lea
pmullw
add
jb
scas
adc
push
ret
arpl
jnp
rolb
lret
cmp
cltd
sub
call
push
stos
mov
dec
iret
mov
in
mov
cmp
outsl
xor
mov
sub
mov
ljmp
lcall
loop
pop
xor
lock
sbb
mov
loop
push
lock
and
ss
mov
xchg
sbb
test
mov
xor
pop
jnp
fwait
push
dec
pop
es
mov
fucomi
sub
xlat
inc
subl
mov
sbb
addl
insb
jecxz
xchg
out
test
subb
int
ljmp
pop
scas
jnp
mov
push
sbb
pop
pop
sub
fs
push
adc
mov
rclb
cs
push
lret
mov
jl
adc
xchg
icebp
mov
xorb
es
int
fstl
jg
cmp
int
mov
cs
and
jp
xchg
sub
pop
lcall
adc
les
or
hlt
mov
inc
mov
rcrb
pop
mov
fstpt
jne
add
sahf
xchg
dec
ss
mov
jl
test
push
and
lods
jb
dec
pop
inc
cmp
daa
stos
aaa
adc
push
imul
inc
xchg
shll
daa
inc
or
sahf
adc
sbb
dec
fisttpl
inc
ss
adc
and
mov
push
adc
dec
lea
mov
dec
xchg
and
idivb
push
jecxz
dec
sbb
and
xor
inc
inc
inc
mov
push
clc
sub
rclb
xor
jns
lods
or
std
insb
out
clc
into
or
cmp
or
push
repz
pop
pop
loope
xchg
add
jb
mov
pop
pop
pop
std
mov
test
adc
pop
or
ja
andb
cwtl
push
insl
cmp
icebp
jno
mov
pop
imul
inc
push
push
inc
pusha
addr16
xchg
insb
mul
jg
sub
adc
pop
inc
mov
push
js
and
push
ret
adc
fidivrs
mov
pushf
ljmp
outsl
and
cmp
sbb
movb
or
addr16
out
xchg
ret
add
xor
ljmp
adc
xor
xor
test
mov
push
push
fs
loope
mov
lahf
aas
dec
mov
push
jo
sub
daa
clc
mov
in
loop
out
pop
pop
rcl
sbbl
push
das
xchg
out
aaa
incl
push
xchg
sahf
mov
cmp
sub
iret
pop
popa
shl
inc
mov
mov
jle
data16
push
test
iret
pop
repnz
std
outsl
sahf
inc
call
pop
xor
sbb
mov
dec
sbb
and
sbb
imul
fisubrl
stos
out
and
cmp
mov
push
mov
je
pushf
mov
mov
xchg
es
pushf
mov
lock
sbb
call
xchg
jo
mov
es
sahf
xchg
mov
enter
xor
or
lret
test
arpl
cmp
fimuls
sahf
lcall
mov
dec
xchg
inc
mov
pop
jg
xchg
adc
sub
xchg
add
cltd
jbe
ss
lea
sub
adc
inc
repz
mov
mov
sbb
sbb
les
xor
or
sbb
imul
popa
or
fidivl
shlb
pop
mull
push
aam
pop
aad
movsl
xchg
gs
aas
clc
cld
mov
push
sub
fidivl
aas
fstps
jb
xor
pop
xchg
lret
dec
outsb
push
daa
shrl
cld
adc
jno
xor
jmp
out
arpl
adc
mov
mov
and
and
stos
mov
popf
leave
rcl
repnz
hlt
adc
mov
jge
or
mov
mov
cwtl
clc
rorb
push
pop
add
xor
ljmp
movsl
nop
add
push
mov
jno
int
or
cmpsb
ja
inc
pusha
sub
inc
inc
fs
add
les
sbb
rcll
push
fstpl
cmpsb
adc
sub
insl
xor
mov
mov
insl
dec
fistl
hlt
push
sub
or
sbb
mov
stos
dec
insb
push
sbb
ret
fsubs
out
xor
add
mov
daa
fcomp
adc
lds
test
xchg
sub
push
mov
cmp
jb
inc
add
sbb
pop
popa
dec
adc
ficompl
dec
insl
inc
mov
adc
daa
imul
push
flds
and
loopne
jne
shlb
and
pop
sarb
jg
in
in
add
addr16
push
fildl
cmp
scas
pop
cmp
int3
imul
out
jge
loopne
call
adc
xchg
and
fcomps
mov
sub
push
fisubs
inc
out
push
clc
frstor
dec
xor
or
shl
mov
sti
outsl
push
and
and
test
scas
pop
arpl
icebp
pusha
ljmp
mov
fistpl
push
movsl
jmp
pop
test
cmp
jns
mov
inc
xchg
cmp
mov
pop
xchg
sti
dec
push
xor
fs
fildll
notl
sbb
es
scas
scas
add
xchg
xchg
imul
dec
jo
inc
mov
scas
pop
imul
pop
push
mov
mov
sub
shl
repz
mov
mov
sbb
fdivl
ret
hlt
mov
jns
cmp
push
cmp
pop
call
xor
ficoms
sub
and
sub
repz
lods
xor
jns
mov
sub
iret
jmp
rol
into
xor
cmpb
xor
jno
neg
aaa
aas
sub
sub
aas
mov
jae
sub
aaa
std
pop
adc
inc
outsl
mov
mov
lcall
mov
sbb
cmc
dec
xchg
mov
stc
jle
cmp
lods
sub
in
sbb
push
push
aad
sub
loopne
fstpl
jae
subb
lcall
ds
negb
int
mov
push
and
sub
xchg
int
movsb
ret
stc
lar
dec
jge
insb
xor
lret
mov
sbb
scas
sbb
push
jae
in
ljmp
mov
arpl
xor
jae
sbb
jb
js
or
hlt
jmp
js
pop
gs
xor
mov
aas
cld
xchg
imul
leave
sti
pop
or
dec
mov
push
imul
and
adc
cli
icebp
sub
pop
icebp
arpl
push
add
cmp
cs
adc
xchg
fistpl
js
xchg
sbb
lcall
push
xchg
cwtl
outsl
mov
mov
mov
test
loop
push
push
lahf
cmp
mov
and
mov
or
mov
push
ret
notl
adc
mov
sub
icebp
mov
or
mov
test
into
rcl
inc
mov
int
mov
stc
jge
sub
stc
push
mov
std
sbb
jmp
mov
jle
push
sbbl
cld
test
mov
or
daa
mov
cmpl
pop
loope
leave
insb
ficoml
xor
jae
pop
in
push
fldcw
mov
loop
je
cmpb
aad
mov
and
leave
ds
add
mov
xor
and
es
xchg
mov
popa
or
lods
fisttpll
test
mov
xchg
add
sbbl
scas
in
je
push
jmp
test
jmp
adc
inc
sub
shl
and
adc
test
subb
or
and
push
leave
daa
mov
shrl
out
adc
roll
repnz
fisubs
rorl
push
lahf
push
fwait
inc
mov
scas
repz
fistl
xchg
inc
in
bound
test
or
xchg
sbb
lcall
test
push
mov
testb
ret
or
or
push
scas
cwtl
test
xor
xchg
pop
push
shrb
ret
stos
jmp
mov
push
notb
lods
cmp
inc
out
xchg
stc
lock
jl
sbb
bound
pop
push
jp
ret
add
sub
cmp
cwtl
not
push
sbb
imul
out
inc
cmp
stos
fbstp
cmp
add
and
enter
jp
cmp
icebp
out
lock
xor
rorb
sub
sbb
jns
sub
nop
je
sbb
or
cmpsl
inc
push
push
into
xchg
mov
dec
in
inc
dec
xor
test
aas
push
cltd
mov
sub
rorl
ficompl
jge
rcl
sub
cmpb
shrb
aad
dec
mov
incb
cmp
inc
xchg
mov
stos
dec
repz
dec
adc
out
les
movsl
mov
add
inc
jno
fnstenv
xor
inc
in
push
lret
popf
dec
sub
xchg
cmp
jbe
mov
scas
push
cld
dec
push
not
ja
inc
mov
fdivl
xchg
mov
aam
or
fisttpll
rorl
xor
push
sub
inc
adc
lock
pop
or
jo
xchg
arpl
lret
push
mov
adc
xlat
push
mov
dec
dec
mov
fcomps
enter
in
sbb
xchg
jmp
mov
adc
out
adc
xor
stc
lea
fistps
arpl
lock
dec
push
bound
sbb
lods
fidivl
add
inc
xchg
mov
std
sbb
push
call
test
test
mov
inc
inc
xor
movsl
leave
mov
mov
movsl
shl
jecxz
jo
repz
jp
stos
cmpsb
or
xchg
lret
mov
push
push
pop
inc
adc
out
fwait
pop
pop
pop
mov
push
xlat
aam
stos
sahf
mov
add
inc
or
mov
sbb
cmp
push
and
jbe
shl
mov
roll
sbb
push
and
jle
jmp
mov
lods
jnp
cmp
fstpt
aam
pusha
popf
stos
cmpl
mov
and
lods
mov
addb
out
cmpb
xor
pop
loopne
mov
mov
cmc
test
lret
es
mov
stc
out
xorb
iret
or
cmp
push
cltd
sarb
pop
das
enter
push
mov
mov
pop
jl
pop
xchg
jg
int
cmp
or
loopne
mov
mov
cmpl
mov
lcall
pop
test
pop
iret
pop
int3
xchg
jns
jne
fidivl
leave
aaa
mov
pushf
out
adc
lods
int
ljmpw
pop
aam
shll
fimuls
xchg
xor
iret
mov
sub
clc
sub
xchg
test
xor
lea
test
aam
sub
cmp
arpl
mov
sbb
shr
pop
inc
outsb
adc
jne
dec
jge
daa
stos
daa
movsb
push
mov
popa
xor
mov
data16
inc
outsl
mov
xchg
xchg
ja
dec
xor
pop
pop
mov
jnp
mov
cmpb
lret
push
push
aaa
lods
add
in
insb
mov
pop
jmp
pop
mov
xchg
adc
or
xchg
push
mov
shll
scas
scas
inc
push
std
xor
mov
push
xchg
pop
mov
sbb
cmp
pop
sub
notb
inc
sbb
xlat
mov
jae
fwait
xchg
inc
push
jbe
mov
or
adc
cmc
adc
xor
scas
sbb
mov
mov
fimuls
cmp
ss
push
xor
and
fidivs
std
pop
mov
int3
stos
test
sahf
xor
popa
dec
dec
lret
or
pop
cmp
mov
out
add
es
mov
or
inc
sub
fldenv
inc
push
jecxz
push
out
pop
mov
fisttpll
cmpsb
and
cmp
ljmp
loop
mov
mov
sub
jbe
in
sti
aas
mov
add
jne
pop
xlat
fs
scas
inc
hlt
mov
sbb
mov
jg
push
gs
sbb
adc
dec
cmp
jp
cs
xor
mov
or
mov
inc
fistl
jle
pushf
icebp
mov
cltd
mov
cmp
add
or
or
add
mov
jmp
sbb
mov
shrb
fsubrl
pop
call
pop
lock
xchg
in
lock
and
inc
das
dec
adc
int3
cmp
pushf
call
pop
add
push
test
shr
lods
shlb
ret
fs
popa
pusha
cmp
in
test
jecxz
adc
sub
ret
je
cwtl
adcl
ret
aaa
stos
inc
xor
and
add
push
jae
out
or
adcl
xor
inc
jo
inc
mov
mov
stc
aad
fmull
test
inc
and
mov
test
out
xchg
xlat
stos
cld
ljmp
scas
ja
cli
out
rcrb
mov
sbbl
mov
nopl
or
imul
mov
outsb
pop
in
mov
sub
xchg
testb
sbb
cli
mov
jmp
repz
inc
lods
adc
icebp
nop
push
ja
jae
btr
hlt
aam
pop
mov
mov
ds
das
movsb
pop
in
lret
lcall
leave
cmp
mov
add
test
inc
nop
repz
int3
lahf
loopne
jne
adc
mov
mov
lea
nop
inc
push
dec
jg
in
sub
push
sbb
adc
xor
mov
push
out
jmp
int
leave
or
out
mov
rcr
movsl
cltd
pop
pop
lds
dec
lock
std
inc
dec
enter
xor
dec
js
rcl
jae
out
mov
leave
pop
mov
lods
or
xchg
lock
xor
lods
cmp
lret
and
gs
cmc
pop
lods
adc
imul
enter
inc
test
std
andl
sub
andb
daa
sub
jge
mov
icebp
imul
sahf
arpl
jle
scas
mov
int
mov
stos
outsb
pop
bnd
inc
enter
mov
or
aam
jle
imul
and
hlt
call
dec
mov
pop
js
cmpb
scas
xchg
and
xchg
movsb
mov
or
push
mov
mov
cmp
and
inc
xchg
mov
fcmovne
xchg
jne
imul
sub
mov
test
icebp
pop
rorl
dec
test
xor
lods
or
or
ja
or
and
movsb
add
aam
jns
ret
mov
pop
adc
xchg
push
inc
mov
xchg
outsb
xor
insb
in
mov
cld
push
fcomip
cli
in
and
and
or
sbb
in
loop
xchg
xchg
fwait
arpl
xor
jbe
lds
cmp
ffree
fisubrl
nop
jl
inc
out
xchg
shl
xor
xor
jns
fadds
lret
pop
mov
push
pop
pusha
scas
lcall
pop
scas
cmp
jb
mov
dec
mov
cmpsl
lcall
mov
jae
dec
and
int3
fbstp
testl
repnz
and
data16
cmp
xor
shrl
mov
add
sub
inc
inc
xlat
inc
test
aaa
xchg
test
or
dec
idivb
add
das
cmp
les
ja
lcall
lea
add
call
in
adc
sbb
ds
lods
sarl
jp
into
ljmp
jp
pop
pop
das
pop
shl
add
pushl
jp
inc
mov
pop
cmp
or
dec
loope
mov
imul
dec
push
xchg
je
inc
xor
lret
xchg
sti
bound
hlt
mov
enter
and
mov
cmc
test
xchg
decl
add
dec
mov
lret
shrl
jl
out
sub
xchg
scas
push
sub
xlat
into
mov
repnz
int
lea
movsb
popa
mov
jmp
jne
jecxz
xchg
pushf
add
shll
sub
pop
movsb
cmp
mov
lea
dec
ret
jae
lods
mov
nop
dec
in
jmp
int3
and
pop
flds
sub
nop
cmpsb
icebp
sub
lcall
lahf
shlb
sub
pop
sbb
push
push
fs
ss
sti
dec
shl
cltd
call
in
insl
lcall
adc
fneni(8087
mov
popa
repz
mov
jbe
lods
iret
shrl
in
mov
int
cs
inc
ret
in
leave
sarl
mov
mov
aad
repz
das
shlb
out
sarb
pusha
add
pop
sbb
imul
adc
popa
jge
adc
push
sub
aas
mov
fbstp
xrelease
insl
mov
in
roll
decl
push
loop
fwait
add
stos
sahf
sbb
daa
ljmp
sub
fldt
push
ds
adc
pop
jae
fimuls
lret
mov
inc
xchg
les
xor
mov
dec
outsl
pushf
lds
fldl
dec
push
and
sub
les
into
inc
or
fidivrl
ljmp
sbb
mov
aam
movsl
inc
ds
mov
pop
icebp
fildll
insl
lcall
and
mov
adc
push
cwtl
out
add
jge
sub
repz
and
sbb
es
xor
js
lret
mov
cmp
in
int
stc
pop
cmpsl
in
sbb
push
jp
sbb
xor
sbb
push
inc
mov
inc
add
pop
test
lods
mov
sub
pop
mov
cld
push
pushf
mov
push
mov
wrmsr
addl
pusha
push
sbb
cmc
xchg
pusha
cmc
jns
out
add
sbb
js
int3
inc
aaa
xor
mov
in
pop
mov
lods
pop
xchg
cwtl
popf
mov
ja
insl
jl
jge
inc
adc
pop
adcb
movsl
xchg
add
ja
aas
clc
xor
leave
cmpsb
cs
add
mov
jl
test
fidivl
test
lods
dec
ror
aaa
inc
xchg
stc
roll
push
fdivrl
je
pop
inc
sbbl
rclb
in
in
push
cmp
cmpsb
bound
insb
inc
and
xor
pop
adc
pop
icebp
negl
pop
mov
adc
arpl
jp
ljmp
ret
lods
cmpsb
lds
mov
xchg
adc
sbb
outsb
mov
pop
jne
dec
ss
inc
push
pop
sti
dec
data16
cmp
jno
aas
xchg
xchg
inc
mov
add
iret
or
jno
popa
cmp
push
dec
sti
add
push
mov
push
in
jne
imul
mov
sbb
popa
outsb
shll
not
mov
inc
fildll
sahf
mov
adc
dec
lods
lods
popf
mov
sbb
and
test
add
stc
push
stc
ret
push
mov
and
js
sub
adc
cmp
std
popf
jg
or
subl
bound
push
fcmovbe
lret
adc
iret
mov
lcall
inc
ror
adc
test
mov
push
jns
push
les
jge
addb
pop
out
repz
jo
fdivrp
add
aam
sbb
inc
sub
sub
test
rcll
loopne
xchg
dec
add
popa
aas
xchg
mov
popa
inc
jo
mov
inc
push
fcompl
fisttpl
mov
cmpsb
pushf
jns
test
rclb
mov
mov
xchg
aas
testb
call
sub
mov
mov
pop
aad
jnp
sub
add
loope
fs
in
das
jo
jge
cmp
adc
pushl
movsl
mov
sub
ret
and
movsb
pop
out
push
stos
xchg
insl
mov
mov
push
push
mov
je
xlat
leave
mov
insl
insl
clc
loope
test
out
adc
orl
loope
jae
nop
out
iret
gs
add
and
and
cli
mov
mov
test
hlt
and
sbb
and
fbld
subb
push
dec
stos
sarl
and
xor
cmc
out
test
pop
int
stos
js
jns
jns
mov
mov
or
xor
rorl
popf
sub
mov
loop
lret
andl
inc
imul
mov
xchg
out
push
in
dec
push
add
lock
ror
out
popl
sub
ret
dec
mov
lea
mov
xor
cli
push
leave
in
loopne
sub
int
xchg
pop
insb
push
loop
mov
lahf
enter
mov
cmpsb
stos
aad
cld
in
fst
imul
cmp
jns
xchg
sarb
fwait
shll
push
or
and
push
adc
in
xchg
push
ficomps
push
mov
out
xchg
xchg
push
mov
sbb
dec
bswap
mov
mov
xchg
out
test
cwtl
adc
dec
insb
loope
xor
pusha
movsb
or
add
add
add
mov
loopne
in
fdivrl
idivb
out
or
cmpsb
clc
test
pminsw
aad
cmp
sbb
sbb
aad
jo
leave
jns
cmp
and
dec
idivb
mov
and
aad
mov
sub
iret
fdivl
jmp
lret
push
push
rorb
dec
xchg
cmpsb
mov
xor
and
xchg
decl
mov
or
fistps
or
insb
bswap
inc
jns
lock
imul
xor
scas
xchg
das
adc
push
push
cmc
cmp
mov
call
and
mov
mov
jns
cmp
xchg
idiv
push
inc
je
repz
fnstcw
lret
push
fnstenv
in
gs
push
out
test
push
pop
push
mov
jns
je
xor
and
cmp
mov
jp
xchg
pop
insl
add
xchg
xchg
xor
xor
push
sub
ret
mov
mov
outsl
xchg
bound
dec
pop
addb
test
mov
mov
test
inc
subl
adc
test
daa
outsb
xchg
scas
jl
loopne
jmp
or
xlat
pop
lcall
inc
test
pop
insl
shrb
out
ss
cmc
lcall
das
push
add
sbb
aad
ja
mov
mov
pop
stc
mov
cs
adc
sbb
cli
rcr
fidivs
lods
notb
mov
test
jl
xchg
std
inc
mov
mov
nop
xor
push
sub
adc
lods
ficomps
popf
jmp
xchg
or
pop
mov
mov
nop
loopne
and
popa
cmc
outsl
aas
xchg
aas
mov
sub
stos
mov
in
mov
es
hlt
mov
and
add
and
aas
andb
adc
cmpsb
stc
aaa
xlat
pop
and
cmp
dec
push
xor
paddb
and
into
mov
push
mov
mov
inc
andl
inc
in
rorl
mov
and
mov
jg
push
lods
loope
pop
fcoml
arpl
mov
inc
outsb
rcll
out
dec
dec
addl
jl
adc
in
popa
sbb
adc
cwtl
or
fwait
sub
add
lcall
sub
fbstp
push
dec
iret
mov
mov
je
sbb
lock
xlat
outsl
out
sti
int3
xor
in
clc
and
fnsave
mov
add
or
inc
jge
mov
push
jecxz
std
push
sbb
test
xchg
and
push
push
jp
xchg
or
xor
rcll
xor
jnp
test
add
cmp
jae
mov
sbb
cwtl
adc
adc
cmpb
cmc
aam
or
test
or
mov
cwtl
jbe
in
mov
xchg
movsb
mov
dec
insb
fstp
popf
add
mov
ret
movsb
movsb
mov
ds
test
sbb
pop
xor
push
rcl
gs
inc
fisttps
jmp
inc
add
ret
jno
xor
xorb
movsl
nop
gs
lret
hlt
jp
pop
cwtl
test
lock
std
inc
mov
fisttpll
lret
jno
sub
sbb
cmp
mov
sbb
notl
jge
cld
lcall
and
aam
out
push
data16
inc
fwait
lcall
movsb
or
pop
pop
add
mov
loopne
leave
or
fwait
clc
es
mov
inc
dec
data16
sub
fs
and
arpl
clc
add
mov
out
loop
cmpl
jae
orl
loop
cli
dec
sub
and
pusha
inc
insb
xor
push
icebp
push
fdivrl
bound
or
jp
stos
lock
push
sbb
cmpb
leave
or
aam
xchg
cmp
lock
out
adc
pop
mov
ja
je
pop
dec
cltd
or
repnz
push
bound
lods
pop
and
data16
xlat
inc
mov
push
sbb
push
push
cmp
xchg
lea
jp
daa
xor
inc
push
mov
pop
ss
lcall
inc
xchg
fcmovb
fwait
lds
sbb
aad
pusha
lret
inc
and
shlb
ja
push
aad
xchg
dec
push
lret
cmp
xchg
pop
lock
adc
fs
dec
iret
mov
loope
ret
push
pop
xchg
stos
dec
stos
sub
ja
cmovno
sub
adcl
scas
mov
pop
call
jb
add
adc
pop
arpl
push
push
sub
xor
push
mov
aam
cmc
mov
cli
jae
pop
dec
inc
mov
add
inc
lcall
adc
int3
cmp
inc
push
pop
iret
mov
cmc
push
and
data16
mov
adc
jbe
add
mov
mov
sub
mov
push
iret
shrl
mov
and
cmovne
inc
fstl
mov
xchg
in
add
nop
push
mov
pushf
mov
negb
mov
xchg
and
int3
testl
in
xlat
test
mov
xor
xchg
adc
lret
ss
push
iret
testl
lahf
addr16
pop
adcb
fidivrl
mov
cmpl
out
cmpsl
addr16
lds
ja
fadd
jnp
nop
pop
cwtl
pop
imul
push
xchg
push
sti
in
movsb
jge
sbb
sub
fbstp
mov
insb
mov
sub
mov
ljmp
sub
movsl
cmp
sub
mov
loopne
jle
pop
stos
pop
ss
inc
sbb
mov
jne
and
ja
shll
sub
scas
jnp
jnp
mov
bound
adc
fcmovb
mov
mov
jae
js
lcall
repnz
dec
sar
adc
testb
sub
cmp
lods
adc
mov
repz
sarb
clc
sbb
push
or
dec
cltd
xchg
mull
push
adc
add
jge
cmp
aam
sbb
lea
mov
in
push
or
inc
mov
mov
inc
stos
adc
mov
mov
xor
add
out
ljmp
out
icebp
mov
or
inc
cmp
mov
cmc
in
int
or
loopne
mov
xchg
jnp
mov
mov
aaa
icebp
jae
mov
pusha
pop
ds
cmp
mov
and
cmp
jns
xchg
dec
ja
mov
fsubrp
int3
add
jns
addr16
enter
mov
push
sti
loop
clc
scas
addr16
xor
pop
mov
mov
out
adcl
notl
pop
icebp
fwait
inc
insl
into
push
push
hlt
xchg
mov
clc
popa
inc
push
mov
pop
pop
negb
insl
sbb
nop
repnz
fs
push
pop
adc
xchg
jmp
mov
bound
push
jle
fsts
inc
in
arpl
movsl
pop
jmp
int
loope
push
add
push
bound
lret
imul
sbbl
pop
dec
out
xorl
and
outsb
jo
jbe
bswap
jmp
loop
xor
lods
inc
xorb
cmp
push
or
sub
outsb
mov
xchg
push
or
adc
adcb
fdivp
in
cmp
repz
arpl
fwait
loope
sub
into
fiaddl
fnsave
pusha
lods
lcall
pop
cwtl
jnp
xchg
xchg
pop
inc
call
dec
enter
xchg
push
cmp
andl
repnz
ret
std
and
cli
pop
xchg
inc
addb
outsb
and
jp
jmp
aam
push
dec
mov
stos
cli
pop
xor
je
mov
daa
push
sbb
daa
fsubp
pop
dec
test
aad
jmp
cmp
xchg
jg
mov
cwtl
and
mov
dec
mov
cmc
mov
push
fwait
mov
inc
and
jbe
sbb
out
mov
push
jmp
push
sbb
pop
sub
loope
cld
add
fstps
incl
mov
pop
daa
cmc
inc
adc
outsl
push
shlb
add
mov
sbb
int3
push
mov
and
inc
popa
aaa
out
aas
arpl
fsubl
push
pop
js
mov
or
push
pop
imulb
mov
dec
push
mov
shrl
notb
pusha
mov
sarl
adc
test
in
mov
lock
repz
pop
adc
imul
mov
les
dec
cmp
int3
sub
jb
push
inc
dec
push
out
ja
mov
std
lcall
mov
jns
xchg
or
lea
pop
sbb
xor
push
xor
jp
mov
out
mov
jnp
pop
jmp
add
mov
out
sbb
pop
lahf
imul
xchg
stc
into
orl
pop
das
rol
test
pop
fstl
add
jmp
stc
and
sbb
xchg
cld
cmpl
repz
jnp
mov
lret
into
aas
inc
push
adcl
aas
mov
jecxz
jno
push
mov
mov
loopne
aam
push
sub
pushf
pop
jo
add
out
rclb
push
cmc
nop
sub
popaw
faddl
pop
sub
pop
stc
xchg
jo
adc
push
mov
pop
xchg
push
xchg
out
jbe
xor
cmp
pushl
xchg
test
jmp
dec
dec
or
push
jb
pop
xor
cmp
orb
xchg
add
int3
pop
fcmovnu
mov
ret
pop
xchg
jg
xchg
negl
pop
cmpsl
lods
mov
or
inc
imul
arpl
lds
jns
aam
ret
outsb
xor
mov
inc
pop
sarb
es
addr16
cmp
jecxz
add
rcll
pop
sbb
das
int3
popa
mov
sarl
outsb
shrb
gs
out
gs
jge
lods
lret
push
cwtl
les
adc
les
mov
and
push
sbb
inc
in
aas
and
inc
loope
cmp
loop
ss
subps
xchg
enter
add
or
sti
pop
jge
xchg
stc
xor
jg
mov
lret
pop
sbb
push
xchg
jnp
push
lods
sbb
mov
mov
js
dec
push
mov
push
sub
push
js
out
or
pop
sub
int3
aad
jae
loopne
push
and
jl
pop
mov
inc
push
xor
sbb
jae
add
jmp
sbb
sbb
data16
and
dec
out
pop
pop
dec
jecxz
adc
inc
or
push
mov
ljmp
out
lods
movsb
or
jmp
mov
in
shlb
sub
repnz
push
adc
enter
mov
sbb
js
sarb
adc
push
testb
ljmp
mov
mov
xchg
test
mov
insl
jmp
mov
int
or
jae
stos
les
xchg
mov
imul
nop
cmpsb
add
xchg
mov
xchg
sbb
jmp
mov
inc
rorb
jg
pop
fildl
pop
lcall
nop
arpl
add
add
popa
repnz
int
loopne
cli
out
push
cmp
fists
lcall
inc
xor
pop
faddl
sub
cwtl
ja
loope
in
or
ret
repz
jb
xchg
xchg
hlt
lock
std
insl
cwtl
fxch
test
fnstsw
xor
inc
out
bound
movsl
lea
add
dec
sbb
hlt
es
and
sub
cld
ret
add
fidivrs
inc
xchg
mov
fildl
addr16
mov
pop
dec
jecxz
jne
sub
inc
rclb
lods
xchg
mov
pop
scas
or
in
and
xchg
not
or
insb
cltd
test
cwtl
js
ret
cltd
cmpsl
les
sub
imul
fisttps
mov
stos
xor
xchg
mov
xor
incl
cmpsb
dec
stos
xchg
inc
lods
fadd
mov
jo
ficoms
add
push
je
cmp
test
cmp
add
adc
or
rcr
push
mov
cmp
outsb
pop
ret
cs
jno
mov
mov
int3
stc
and
jge
sbb
js
sbb
pop
in
dec
mov
test
lcall
push
imul
pop
mov
sub
clc
or
pop
cmpsb
nop
pushf
sbb
jae
inc
dec
jno
iret
sub
ds
inc
add
aam
repz
cmp
mov
leave
pop
out
sbb
xchg
mov
cmpsl
ds
dec
fdivs
ret
push
lret
bnd
or
mov
fdivp
loope
dec
nop
or
mov
pop
inc
and
xchg
jecxz
std
dec
push
pop
subl
divb
outsl
mov
insb
test
fildl
mov
push
and
xchg
xor
pop
sbb
pop
cmc
sub
mov
fildll
sbb
pop
pop
dec
fsubrs
xlat
imul
pop
pop
xchg
pop
xchg
jo
das
test
jle
and
sbb
ds
daa
shl
pop
jno
icebp
orl
adc
xchg
scas
xchg
stos
or
sub
lcall
adc
push
pop
add
sahf
out
in
push
xor
cmp
loope
add
adc
jae
lahf
xchg
out
inc
lret
push
xchg
in
stc
pop
dec
test
out
pop
testl
out
cmp
leave
inc
push
push
inc
and
cltd
lods
and
dec
mov
in
in
lret
imul
in
jo
popl
dec
pop
pop
push
daa
mov
pushf
ds
fists
pushf
sbb
xchg
outsb
mov
or
adc
push
jne
dec
test
fwait
and
push
stos
fistps
js
cmpsb
push
pop
push
or
push
mull
xchg
mov
pop
ja
mov
repz
xor
ljmp
ret
pop
adc
fidivrs
leave
movsb
xchg
mov
or
xchg
inc
mov
xchg
and
stos
inc
movsl
in
cmp
into
add
test
test
mov
xchg
adc
cmp
or
sub
and
adc
scas
and
inc
movl
add
lock
xor
and
pop
fwait
add
int3
in
cmpsl
add
sub
arpl
dec
je
lods
mov
adc
dec
xchg
cli
sub
push
sbb
or
pop
pop
sub
push
mov
inc
lods
mov
add
es
fsubrp
movsb
jp
sbb
imul
loopne
outsl
sub
inc
jl
sub
hlt
lods
sub
jmp
jle
xchg
add
outsl
jnp
add
mov
js
add
test
pop
loop
jl
mov
jns
shll
js
ret
lock
in
sub
sbb
iret
dec
sarb
add
sbb
loope
sbb
imul
outsb
into
scas
sbb
addl
adc
lock
mov
sub
cmp
mov
call
add
subb
cwtl
adc
stc
icebp
ret
les
bound
data16
add
adcb
outsb
into
movsb
test
xor
scas
test
flds
or
scas
xor
ja
lahf
addr16
pop
je
mov
push
or
adc
rorb
pushf
pop
repnz
cmp
stc
andb
jne
inc
cmp
mov
and
out
cmp
mov
xchg
cltd
pop
test
and
pop
idivb
xchg
pop
int
jnp
push
mov
mov
xchg
xchg
rep
call
lds
fistpl
cmp
addr16
fnstcw
push
push
bound
push
pop
pop
nop
xchg
dec
pop
mov
clc
cmp
and
lock
or
das
mov
mov
roll
aam
movsb
xor
scas
stc
xchg
dec
xchg
lcall
push
add
sarb
aas
sub
lods
in
mov
and
sbb
jecxz
ror
lahf
push
mov
mov
std
ja
notb
je
cmpsl
fidivs
cmp
stc
in
jmp
add
xchg
xor
mov
fldenv
out
jmp
xor
not
pop
aad
nop
jnp
mov
mov
add
out
or
jne
stos
out
xlat
fxch
in
jp
bound
dec
mov
aas
mov
movsl
pop
lods
cwtl
adc
jno
fwait
aas
inc
or
lret
sti
es
scas
mov
xor
cmp
or
aaa
cltd
lea
std
cmp
lea
pushf
frstor
inc
mov
add
xlat
dec
push
sub
push
cli
mov
dec
nop
mov
jae
test
dec
cmp
xor
jg
xchg
out
sub
orb
sbb
mov
push
xor
or
ret
xor
lret
sub
cld
mov
inc
out
xchg
jg
mov
pop
ret
sbb
pop
mov
or
cmp
adc
adc
mov
rolb
and
movsl
inc
dec
xchg
jo
adc
hlt
adc
or
into
xchg
pop
cltd
or
xlat
inc
ds
mov
or
jnp
insl
mov
aas
in
push
and
in
cmpsl
adc
aas
jns
dec
clc
mov
test
sbb
sub
add
sahf
mov
pop
cmpl
push
dec
mul
insb
push
add
and
jge
xchg
cwtl
lods
mov
lds
push
nop
jp
mov
mov
jmp
stos
test
add
push
rcll
dec
pop
xor
sub
rol
push
ror
std
clc
xchg
lea
lock
cmpsl
pusha
xchg
lock
pushf
mov
jge
aad
iret
jecxz
push
lahf
sbb
adcl
push
xor
ret
subl
popf
push
lret
jb
das
pop
mov
call
add
xchg
add
lahf
ja
rclb
mov
xchg
das
cmc
xchg
fnstenv
into
outsb
mov
ret
add
xchg
js
cmp
scas
jnp
int
jae
sub
jmp
push
mov
inc
xchg
aam
jg
mov
jl
cli
cmpsb
jle
mov
and
jae
adc
cltd
xor
loope
popl
pop
cwtl
jp
adc
mov
pop
cli
xor
mov
stos
aad
jmp
les
mov
js
mov
add
notl
call
fidivrl
pop
ja
mov
test
adc
iret
into
mov
xor
lods
repnz
insl
enter
sarb
jecxz
or
dec
push
scas
push
push
iret
pop
mov
push
jmp
outsl
movsb
popf
andl
iret
ja
int
push
xchg
push
gs
out
pop
shll
movsl
mov
mov
repnz
aam
and
lds
jg
push
push
inc
enter
push
mov
lahf
popf
mov
cmp
pop
dec
adc
cwtl
test
popa
js
xchg
int3
adc
clc
or
inc
push
push
adc
sbb
pop
arpl
dec
stos
jle
jge
hlt
cld
xchg
push
mov
mov
dec
unpckhps
cltd
jp
rorl
inc
sub
or
loop
sub
idivl
inc
mov
iret
push
aas
ljmp
cwtl
lods
add
addb
jns
dec
xor
mov
and
int
push
repz
push
add
and
xorl
imul
lods
jecxz
add
pop
push
leave
data16
and
mov
popa
push
lret
pop
outsb
mov
jmp
enter
and
test
sbbl
les
inc
aaa
js
divb
sbb
pop
ja
and
cld
jno
outsl
mov
jmp
jg
sub
push
addl
sub
aam
mov
mov
cwtl
push
iret
pop
ret
pop
cmpsl
lret
push
insb
repz
jmp
pop
andl
cmp
and
push
icebp
lahf
lods
repnz
outsb
imul
push
cmc
ja
mov
and
movsl
add
jle
lods
jecxz
cmp
jo
enter
cmp
xor
mov
xor
sub
gs
mov
cmp
push
jmp
xchg
cwtl
cmc
inc
or
jecxz
sbb
ss
arpl
dec
xchg
jle
ficomps
sub
fwait
imul
sub
mov
cli
repz
loop
or
loopne
xlat
test
pop
xor
push
out
inc
cmp
or
inc
xor
imul
icebp
mov
ret
jnp
sbb
inc
cs
pop
dec
and
push
lds
aad
pop
cld
xor
xchg
mov
sbb
pushf
scas
xchg
scas
divb
data16
test
adc
push
push
pop
push
mov
fcomip
dec
dec
mov
je
popf
inc
and
outsb
push
xor
loopne
and
lds
sub
inc
shrb
mov
outsb
add
push
lock
inc
or
add
in
insl
out
repnz
push
sbb
mov
adc
je
mov
call
mov
push
xor
jns
jg
jo
std
mov
mulb
mov
sub
cmp
repnz
fists
sub
sub
xorl
dec
nop
jmp
lds
mov
and
jnp
push
add
ss
xor
mov
rcrb
rcll
xchg
xor
psubb
cmpsb
insb
sub
scas
daa
popa
fucomp
fstp
or
lret
cmp
jno
cmp
stc
dec
rorb
xor
lret
gs
cmp
movsl
into
subb
xchg
in
push
test
insb
push
and
cli
aas
push
aas
loop
lods
jb
pop
mov
pop
addl
or
cmpsl
jno
fs
lcall
loop
cmp
loop
dec
cltd
xchg
mov
les
xchg
sarb
xor
shlb
hlt
inc
imul
sbb
idivb
enter
lea
jnp
jmp
mov
and
mov
push
imul
cmp
jmp
pop
pop
mov
test
mov
pop
or
js
loop
xchg
sbb
mov
sti
je
flds
into
cmc
test
test
xorb
or
addr16
and
pop
lds
sbb
push
bound
mov
in
sbb
xchg
insl
repnz
mov
mov
int3
test
stos
insb
inc
lods
movswl
loop
icebp
in
xchg
fxch
xchg
add
aas
int3
dec
ret
fmull
out
push
xchg
pop
adc
outsl
ljmp
push
out
enter
or
daa
out
pop
push
lahf
xor
cwtl
into
lds
outsb
xchg
adc
cmc
test
ds
push
mov
jns
mov
shll
add
int3
push
lret
push
pop
push
push
sub
mov
nop
sub
adc
fwait
int3
pop
mov
add
xchg
lret
ljmp
icebp
cmp
push
sub
pop
pop
mov
sub
sbb
pop
mov
cltd
cmp
scas
inc
fimull
div
lret
mov
mov
sub
aaa
adc
xchg
loop
das
inc
lar
pop
dec
sbb
jge
sbb
scas
scas
mov
call
add
nop
cmp
scas
imul
xor
fsts
sbb
adc
mov
dec
mov
leave
pop
and
test
outsl
in
xchg
sub
add
or
aam
insb
pop
xorb
hlt
mov
repz
int3
xor
das
push
add
popa
faddl
adc
cmp
aaa
in
test
jb
fs
nop
sub
xchg
jbe
cmc
add
push
outsb
enter
mov
in
push
xchg
jno
insb
dec
shl
popf
cmc
gs
enter
out
loop
testl
pop
sub
and
ljmp
push
outsl
dec
sbb
mov
ficompl
imul
jne
mov
loopne
push
sbbb
call
inc
and
orl
cmpsb
shlb
fdivrl
lcall
mov
jp
shrb
mov
popf
les
rcll
dec
stos
cmp
cld
xchg
mov
push
je
or
mov
jb
iret
fsubr
outsb
popf
aaa
push
outsl
movl
jns
lahf
pop
add
pop
mov
jno
pop
out
loop
push
cs
xchg
or
jle
cmpsl
sbb
cld
cmpl
cli
pop
xor
push
out
ljmp
push
rcr
ret
sbb
in
xor
adc
or
jg
or
dec
sarb
cmp
and
inc
mov
or
jmp
adc
mov
mov
or
cmp
adc
xchg
enter
mov
xchg
aad
pop
or
lahf
pop
or
push
sbb
adc
fdivrs
icebp
jae
mov
out
xor
xor
stos
push
les
subl
lahf
sbb
dec
addr16
jmp
pop
imul
ja
ds
mov
in
sbb
sub
mov
dec
xchg
sub
repnz
fnstsw
jmp
mov
test
dec
mov
repnz
inc
in
jnp
pop
mov
ret
pop
or
xchg
mov
pop
jo
push
in
pop
out
mov
cltd
shrl
inc
adc
add
mov
jl
inc
add
push
ret
cmp
addr16
jge
scas
leave
lock
mov
jb
xchg
sahf
xchg
push
inc
jns
cmpsl
and
out
fisubrs
sub
loopne
fisubs
inc
repnz
outsl
push
pop
or
jecxz
addl
aam
addl
mov
aaa
adc
out
rolb
fsubr
lods
out
or
sub
std
mov
sbb
std
mov
fs
jmp
insl
imul
movsb
add
push
incl
pop
cmp
or
mov
int
in
in
push
sarb
pop
dec
xchg
adc
dec
mov
mov
xchg
pop
std
fisubl
maskmovq
outsl
cmp
inc
mov
inc
repz
int
mov
mov
mov
or
mov
popa
inc
xchg
dec
icebp
xor
clc
mov
xor
dec
push
les
mov
xchg
add
xor
add
mov
lock
add
sbb
loopne
lcall
mov
cmpsb
leave
cs
dec
and
sub
test
mov
lret
and
push
rcll
mov
and
scas
or
inc
ds
jge
adc
in
mov
sbb
imul
xchg
mov
sub
or
inc
aaa
pop
xor
cmp
pop
cmpsb
fs
cwtl
cli
sbb
dec
adc
push
inc
inc
aaa
jo
mov
jg
pop
inc
xchg
ficomps
pop
cmp
push
mov
pop
xchg
lret
shlb
outsl
test
out
sti
and
div
or
xchg
fisttpll
jle
das
out
stos
jo
int
push
scas
jns
jecxz
mov
pushf
loopne
mov
mov
outsl
dec
pop
je
jno
test
outsb
in
mov
fs
mov
pop
aam
and
dec
out
std
dec
cli
xchg
mov
sub
cli
sub
leave
xchg
inc
lock
sub
sarl
aam
dec
mov
arpl
scas
es
stos
push
fiadds
ds
out
sbb
shl
mov
jle
pop
xlat
or
push
inc
dec
repnz
repnz
dec
sub
repz
mov
pop
shlb
and
cmpsl
add
das
jge
fs
xchg
fwait
jmp
iret
rolb
cwtl
inc
pop
stos
fmuls
fcmovnb
and
cmp
insl
or
inc
sarb
imul
jl
in
mov
les
push
cld
pop
push
sbb
imull
adc
and
imul
ljmp
js
or
ss
pop
push
js
mov
ja
push
ret
out
ficomps
adc
clc
push
out
std
dec
std
jne
cli
jp
movsl
jnp
add
pop
pop
push
arpl
pop
movups
out
shlb
lods
inc
jns
pop
movsl
lahf
std
inc
shl
pop
mull
cmpsl
inc
mov
add
add
add
mov
push
fldcw
mov
outsl
dec
pop
jecxz
insl
xchg
wbinvd
pusha
lods
lds
or
cmc
mov
ja
decb
lret
or
sub
push
jle
pop
jmp
fcompl
push
fsubs
popa
lods
lods
fsub
jb
fstpt
jb
into
subl
xchg
pop
cmp
cli
ret
hlt
sbb
test
cmp
shlb
add
js
adc
insb
in
sti
xor
xlat
jle
pushf
sbb
orb
out
push
movsb
fcmovu
jg
inc
jne
loope
loopne
test
push
rorl
adc
out
dec
mov
test
shrb
fidivs
rorb
jecxz
dec
jge
je
push
mov
mov
xor
inc
fsubl
out
cli
setae
neg
mov
xchg
sub
sarb
jne
cmp
loopne
inc
xchg
xor
cmpsl
movsb
repnz
test
es
xchg
test
movsb
push
mov
xchg
sub
mov
addl
insl
movsb
imul
inc
fdivp
fdivrs
lret
xchg
ljmp
stos
xchg
lods
or
ja
adc
ret
inc
xor
int
daa
add
clc
jp
ljmp
adc
pop
adc
cmp
mov
inc
lods
cmpsb
mov
jbe
cli
mov
je
mov
mov
andb
push
in
jle
add
add
jp
daa
insl
push
lea
stc
push
xchg
sti
pop
stc
xor
and
pop
adc
out
pop
mov
sarl
stos
cli
jg
sahf
mov
xchg
inc
in
lahf
pop
pop
jg
mov
mov
cmp
pop
fimull
and
in
mov
js
fnstsw
mov
sub
in
xchg
pushf
stos
pop
dec
jle
sbb
mov
xlat
int
push
xchg
ljmp
scas
and
test
scas
dec
mov
fnstcw
dec
and
jae
and
cmpsl
shrb
shr
sub
xlat
push
mov
daa
push
xor
mov
add
outsl
pop
sahf
mov
popa
repz
out
or
xchg
mov
pop
test
add
movsb
ret
sti
fsts
fsubr
or
mov
dec
lea
mov
xor
dec
in
mov
push
mov
push
movsb
sahf
lret
jb
repz
sub
jae
addr16
out
scas
adc
pop
xor
or
and
xor
jo
loope
lea
das
mov
jg
daa
leave
jecxz
call
pop
fwait
pop
add
sbb
adc
fwait
adc
scas
adc
rcl
fwait
movsb
mov
cltd
bnd
xor
mov
hlt
and
fwait
rcr
xor
jg
push
adc
fists
stos
shrl
movsl
adc
push
cmp
jnp
ss
add
cs
jg
lret
lds
or
cmp
sbb
jecxz
clc
stc
push
int
es
mov
out
sbb
or
push
jae
or
mov
jmp
add
addr16
mov
ss
jg
xchg
ret
rol
jne
push
jno
pop
inc
test
pop
cmpsl
mov
add
hlt
xchg
push
sbb
xor
cmp
jmp
sbb
cmc
fistps
int3
adcb
xor
sub
add
inc
xchg
xchg
jmp
cmp
adc
lea
dec
dec
jno
js
sub
push
incb
daa
add
scas
nop
rcll
ret
lods
pop
iret
call
dec
inc
jns
mov
xchg
push
scas
insb
lock
frstor
dec
aad
sbb
nop
or
cmc
inc
mov
xlat
loope
addr16
fimull
jbe
push
push
sti
mov
fisttpl
ret
stos
scas
ja
push
cmpb
mov
mov
pop
jg
shrl
shll
cmp
out
stos
loop
push
mov
repz
push
mov
sbb
roll
fisubs
or
jge
test
fstpl
je
cmp
and
sub
jnp
mov
lret
mov
popf
and
cmpsb
mov
xchg
icebp
out
popa
pop
jg
jmp
push
adc
out
push
cmpsl
mov
jg
movsl
inc
in
sbb
repnz
mov
pop
mov
mov
xchg
aad
imul
adc
out
ds
arpl
xlat
out
push
das
pop
sbb
and
dec
int3
pop
icebp
xor
pop
xor
in
pop
jbe
scas
sarl
addl
pop
sbb
sub
daa
push
sub
inc
mov
push
push
out
sbb
pop
push
cmc
out
test
jb
or
pop
popa
stos
or
jl
xor
dec
add
test
cld
sahf
pop
push
adc
scas
inc
xchg
adc
xor
sbb
subb
or
xchg
jmp
pushf
scas
sbb
and
xchg
jecxz
inc
push
push
jle
inc
mov
fimuls
push
mov
push
jmp
sbb
test
and
hlt
gs
xor
push
dec
sub
push
xchg
shr
inc
cwtl
rolb
jp
lods
shrl
xor
flds
xor
shl
cld
lret
mov
test
dec
jb
inc
in
outsl
ret
mov
or
iret
loop
shrl
sub
cld
call
cld
push
sbb
push
jl
push
leave
mov
mov
xchg
add
ret
bound
push
inc
lods
pop
shrl
jg
pop
rep
xchg
adc
dec
jne
loop
push
testl
inc
std
fucomp
xchg
push
roll
jge
dec
pop
arpl
or
and
mov
into
inc
push
adc
sub
rcll
xchg
ss
or
clc
cmc
xor
jbe
pop
cmp
sub
lods
lock
mov
shll
pop
sahf
movsl
push
xchg
xor
adc
mov
fstl
cmp
ljmp
gs
fnstsw
movsl
xor
call
popf
push
test
adc
stos
sbb
mov
sub
sbb
xor
cwtl
test
sub
mov
sbb
lret
cmp
call
push
mov
pop
inc
lcall
call
pusha
mov
test
je
ret
add
mov
cmp
xor
rorl
std
adc
cwtl
mov
outsl
push
fcmovb
out
roll
xor
add
call
pushf
push
jle
jg
xchg
addr16
leave
unpcklps
or
pop
jge
icebp
into
jmp
je
cmp
or
ret
xor
mov
push
repnz
mov
cs
in
sub
and
mov
xchg
or
inc
inc
repnz
outsb
adcl
popa
mov
in
sbb
ret
fwait
test
nop
lds
fucomip
mov
jns
mov
fistpl
roll
dec
push
push
sub
adc
push
mov
stos
int3
sbb
cmc
insl
mov
jmp
xchg
jo
xor
rcrb
movsl
int
xchg
push
mov
pop
sbb
cmp
pusha
lock
mov
mov
arpl
icebp
adc
jns
into
insb
adc
stc
or
nop
sbb
dec
push
sbb
js
fwait
std
sub
jl
mov
or
mov
insb
and
or
and
ficomps
jbe
outsb
add
inc
orl
movb
ficoms
arpl
mov
sub
int
xchg
mov
sub
xchg
insl
adc
xchg
popf
adc
sub
dec
int3
push
mov
iret
mov
stos
pop
or
outsb
nop
lahf
jmp
fldl
cmp
push
jo
push
gs
pop
jmp
mov
in
or
push
jo
out
rolb
mov
clc
sub
xchg
xchg
lock
das
fstpl
adc
in
lock
shll
mov
xchg
adc
xchg
cs
scas
fisttpl
push
mov
push
add
lcall
dec
hlt
cmc
imul
jp
rolb
nop
data16
stos
adc
or
loopne
adc
inc
sarb
test
xor
pop
cmp
nop
mov
or
mov
daa
mov
add
or
lret
insb
cmp
ds
aad
int3
sbb
pop
std
nop
sbb
jbe
aad
incl
fbld
test
les
jbe
adc
jmp
sbb
ja
stos
bound
xchg
sub
shrb
dec
jae
in
mov
lds
rcll
jo
mov
scas
add
and
ffreep
fprem
dec
adc
mov
xchg
pop
cmp
fs
mov
js
jno
jno
loope
adc
ret
push
mov
scas
cmp
jp
mov
cmp
rcrl
push
mov
mov
fs
xor
dec
mov
and
fwait
pop
sub
mov
push
scas
adc
xor
xchg
js
fnstsw
mov
gs
push
fiadds
sti
mov
fs
sahf
nop
xor
jg
call
mov
pop
dec
addr16
mov
mov
mov
or
mov
fsubrs
sbb
in
push
scas
inc
mov
adc
insl
imul
hlt
pusha
xor
dec
xchg
stos
sub
lahf
mov
and
sbb
mov
mov
sub
fwait
pusha
insl
mov
aaa
fcoms
rcrl
jae
jb
call
inc
movsb
jns
nop
inc
nop
push
repnz
cwtl
fcompl
push
jbe
mov
mov
mov
addb
push
lret
les
dec
mov
mov
jp
dec
mov
test
or
lds
sub
jbe
shrl
mov
ja
xor
or
arpl
lcall
cmp
aaa
stos
xor
das
xchg
add
jmp
jno
sub
xchg
push
fbld
inc
push
add
sub
jge
shl
adc
inc
aas
fdivl
mov
mov
add
stc
clc
lods
pushf
shrl
jle
popa
push
and
mov
iret
in
and
and
mov
loop
es
cltd
xlat
dec
jg
lret
push
in
xor
jb
cmp
cmp
flds
push
popa
xchg
pop
loop
std
ds
lods
test
mov
inc
mov
lret
xchg
cmpsb
sbbl
dec
sbb
dec
push
xchg
cld
rcrb
bsf
and
sub
cmp
sub
lret
or
adc
push
repz
repz
xor
adc
push
pop
insb
ljmp
sbb
pusha
xor
sahf
cmpsb
mov
xlat
push
shll
push
sub
push
out
fists
mov
jbe
dec
xchg
and
fistl
sbb
cmp
repnz
mov
xchg
fwait
mov
sub
movsb
sub
daa
nop
and
pop
loopne
inc
mov
cmc
mov
cmpsl
ret
pop
enter
sbb
ret
mov
push
jo
mov
ss
inc
adc
ss
imul
push
xor
add
clc
adc
dec
cmp
repnz
es
shrl
and
imul
and
jae
scas
sbb
cltd
cli
sbb
in
mov
dec
xchg
sbb
add
push
mov
enter
mov
push
add
rol
ror
gs
sbb
push
lock
mov
ror
xchg
sahf
and
fildl
aas
lea
jp
and
cmpsb
pop
pop
adc
inc
mov
es
mov
cs
sbb
rorl
xor
leave
mov
data16
sub
stc
or
aam
repz
push
pop
xlat
add
scas
mov
fistpll
inc
loope
call
das
repz
loop
divl
int
cs
das
fwait
inc
popa
bsf
pop
sbb
mov
push
scas
cmpsb
mov
mov
lods
xor
mov
adc
shl
test
test
sbb
in
test
fbstp
or
movsl
aas
rcrb
loope
cmp
dec
lock
cmp
cmp
mov
mov
sub
xchg
insl
jmp
int
xchg
cmpsl
inc
pop
insb
filds
enter
les
icebp
adc
mov
pop
mov
jecxz
cmpsl
xor
out
lea
cmp
cltd
push
dec
adc
lods
insb
push
in
fldenv
sarb
stos
movsl
push
lds
sub
cmp
pop
aam
mov
cld
out
dec
dec
rcrb
rcll
subb
in
cli
cwtl
cmc
shl
imul
xchg
iret
add
lret
or
mov
sbb
enter
fists
insl
pusha
sbb
and
cmp
dec
sub
imul
sub
dec
dec
pop
je
adc
push
inc
jle
out
push
insb
xchg
lds
sbb
fadd
cli
mull
xor
nop
adc
sub
rorl
movsb
dec
jge
pop
cmp
mov
sub
xchg
mov
cmp
test
push
and
icebp
xor
add
add
and
lock
or
fnstenv
pop
cmp
mov
mov
pop
divb
sub
and
into
add
sbb
insb
sbbl
cmp
pop
mov
jg
sbb
daa
or
cmp
mov
fsubrs
test
fildl
mov
sti
sub
scas
sbb
adc
adc
mov
push
fs
adc
sbb
div
outsb
imul
clc
cmp
jno
in
mov
adc
lahf
in
push
mov
daa
mov
out
lea
daa
adc
sbb
xor
fidivl
push
nop
ss
sbb
frstor
push
xchg
imul
js
repnz
daa
rorl
fistl
mov
push
cmp
adc
dec
and
pop
inc
std
push
test
popf
xor
mov
jno
sub
and
js
jl
sbb
and
mov
jo
ja
ret
push
mov
xchg
leave
adc
jp
dec
mov
add
add
notl
adc
shrb
pop
and
sub
mov
xchg
xor
fldlg2
cwtl
adc
subl
and
in
out
daa
imul
adc
lret
mov
add
mov
adc
in
mov
sub
mov
pop
filds
sahf
sti
adc
imul
jp
shl
std
pop
inc
into
cmp
mov
jbe
test
jmp
cli
sub
and
inc
fbld
stc
xchg
js
jmp
lods
sbbl
adc
iret
mov
adc
sub
mov
mov
xchg
inc
js
aad
xchg
and
sti
adc
lret
lods
sbb
ljmp
push
jbe
ret
mov
aas
lea
ja
mov
call
add
pop
inc
cmpsl
or
mov
jno
ret
popf
repnz
jge
lcall
pop
hlt
adc
pop
mov
jmp
cwtl
add
xor
dec
lahf
fstl
push
push
js
and
sti
mov
gs
sbb
dec
mov
push
ficomps
mov
clc
sarl
xor
adc
jno
lcall
es
bound
jle
xor
jns
pop
loop
ja
ret
leave
xor
dec
and
push
and
sub
xorl
xchg
push
jl
mov
loop
add
xor
daa
mov
xchg
adc
out
test
cwtl
sbb
mov
daa
test
mov
mov
sub
jns
loopne
sarb
mov
and
jae
lret
movb
pop
pop
fs
and
outsl
push
xlat
xor
or
rorl
add
cli
mov
aas
stos
shll
pop
push
cmp
daa
out
subb
xchg
in
data16
mov
lahf
adc
xchg
sub
xchg
push
push
or
jo
cmp
lds
cwtl
push
xlat
insb
mov
dec
lea
add
mov
aas
sti
scas
jmp
clc
push
push
ljmp
imul
out
out
xchg
lock
push
les
dec
push
decb
je
dec
dec
fstpl
jp
sbb
imul
or
push
jp
jge
or
inc
dec
fs
addr16
mov
add
mov
add
pop
popa
xchg
push
fldt
jge
add
in
out
rcrl
push
fdivr
aam
adc
jb
shr
xchg
jle
mov
mov
push
lods
std
xchg
adc
inc
in
lret
lods
clc
sbb
icebp
movsl
inc
pop
jns
sub
clc
sti
ja
cwtl
add
xlat
adc
dec
shrb
ss
gs
dec
in
aas
or
mov
mov
cmpsl
shlb
sbb
scas
mov
pop
and
mov
fwait
shrl
push
lret
jo
sbb
scas
in
or
es
addb
lock
push
lea
aad
fwait
gs
icebp
pusha
loop
cmpsl
out
loope
jle
sbb
lcall
es
push
mov
push
sbb
dec
dec
jge
in
daa
add
cmp
pop
es
add
and
repz
lds
adc
xor
sbb
movsb
lods
mov
or
and
icebp
push
popf
icebp
xor
or
push
arpl
xchg
xor
mov
sbb
in
add
mov
xor
sub
adc
jecxz
pop
adc
shrl
dec
sub
clc
adc
mov
adc
ljmp
push
mov
test
pusha
jle
lret
push
cltd
loope
pushf
jp
cmp
adc
dec
adc
ja
mov
mov
popa
and
pop
movsl
dec
or
bound
sbb
into
js
stos
xor
aas
int3
iret
xchg
pop
cld
sbb
add
insb
mov
xor
and
mov
gs
loopne
mov
popa
imul
ss
pop
std
pop
pop
lea
out
pushf
lock
nop
fstps
or
xchg
adc
imul
xchg
xlat
sbb
mov
repz
cs
fbld
ss
xor
push
push
loope
dec
rolb
hlt
add
push
rclb
movsb
or
inc
xchg
push
cmp
jecxz
cli
les
aam
movsl
bound
add
les
outsb
in
lret
cli
jno
lret
jmp
cmp
dec
jns
mov
or
mov
clc
std
std
into
add
leave
pushf
hlt
test
lea
cmp
or
xor
mov
mov
sub
jo
jecxz
lahf
xchg
add
mov
add
cmpsl
mov
loop
bound
fdivrl
mov
mov
bound
fstpt
pop
dec
add
bnd
pushf
int3
ds
mov
fldt
repz
mov
ja
or
dec
leave
mov
mov
sbb
push
rolb
out
add
inc
adc
decb
pushf
std
and
mov
lret
push
vunpcklps
push
lock
out
xor
ds
xor
jge
lahf
dec
ljmp
inc
add
jo
mov
pop
mov
pop
cmp
or
mov
and
or
mov
scas
roll
lret
jmp
push
jae
ja
xchg
pop
dec
or
jle
adc
adcb
repnz
shll
pop
outsl
insl
rcr
jno
jno
pop
cli
and
shlb
psubusw
sub
pop
xchg
mov
inc
push
jns
sbb
loopne
arpl
mov
mov
pusha
daa
movsl
cmp
ja
inc
gs
fimuls
or
push
cmc
and
xchg
scas
dec
sbb
xchg
mov
sub
adc
xor
mov
testl
popf
in
and
aas
and
fucomp
inc
xor
enter
mov
jg
adc
xchg
mov
or
push
into
lret
sub
imul
cmp
arpl
push
and
int
push
push
shr
addb
jae
push
pop
inc
int
movq
mov
jb
dec
jae
xchg
add
stos
cltd
sbb
rclb
xor
push
les
inc
jo
int
insl
adc
js
inc
mov
icebp
xchg
pop
fstpl
fists
inc
jb
pop
gs
add
shll
mov
test
or
iret
sub
pop
and
xlat
jns
movsl
insl
pop
mov
clc
aam
pusha
xorb
mov
xchg
gs
popa
push
cmpl
mov
aas
mov
mov
filds
aad
inc
pushf
sub
ljmp
shr
movsb
pop
xchg
adc
cmp
mov
ss
jb
and
sti
arpl
mov
sub
cmp
or
jbe
mov
je
lcall
jnp
dec
int3
lret
add
push
std
push
push
sbb
pop
les
adc
and
jp
or
push
lea
loopne
pop
cmp
nop
cmpsb
lret
cmpsl
push
rcl
je
cmpsl
ret
or
add
imul
add
andb
movsb
mov
outsb
jp
mov
subl
add
or
jge
imul
aaa
xchg
push
sbb
push
jb
xchg
xor
test
sar
xor
lret
adc
jp
sarb
push
push
mov
sub
mov
adc
jmp
stos
lock
test
xchg
mov
imul
fsubl
shrl
shlb
out
mov
cltd
pop
popf
dec
imul
lock
lock
sbbl
pop
into
into
leave
fcoms
cld
sub
leave
sahf
pop
push
add
out
aas
adc
in
mov
jl
mov
ret
ficomps
inc
js
add
repnz
xchg
jb
into
icebp
pop
lods
pop
test
lret
cmp
lret
xor
jg
js
or
sbb
cmp
xchg
pand
imul
and
jae
jbe
push
ljmp
roll
out
jmp
xchg
cmp
and
adc
out
dec
pcmpeqw
js
push
xor
shrl
mov
pop
sahf
cmp
add
push
scas
sub
pop
ja
xchg
lret
lret
or
add
xchg
and
push
dec
or
mov
cmp
stos
xchg
sbb
orb
add
in
dec
pop
sarl
add
pop
subl
dec
jne
push
xchg
lea
fidivl
les
mov
pushf
daa
fsts
push
push
fisubrl
push
fildl
inc
test
call
dec
in
xor
lock
and
jae
mov
dec
aaa
inc
fcom
mov
stos
mov
xchg
xor
aaa
shrl
repz
in
xor
bound
nop
pop
repz
inc
ret
in
cmpb
popa
inc
insl
pop
inc
add
or
adc
jle
test
pop
lahf
adcw
test
xor
jg
mov
xor
lock
scas
xor
fmul
add
pop
mov
pop
pop
lock
xor
rolb
push
pop
fisttpl
hlt
cmp
push
lods
insl
dec
push
pop
inc
fbstp
pusha
dec
in
push
jmp
stos
cmp
push
icebp
adc
sub
sub
test
lret
pop
adc
push
imul
inc
es
mov
cmc
or
push
call
xchg
adc
fincstp
push
stc
pop
rorb
cwtl
dec
sbb
push
sub
pushf
loope
jae
pop
push
das
out
aaa
dec
mov
pop
mov
push
jbe
or
mov
push
scas
xor
pop
lahf
lds
repz
mov
mov
gs
jge
lods
les
or
dec
das
fcomi
lahf
cld
jnp
inc
dec
push
add
mov
mov
xor
sub
or
xchg
in
push
ds
iret
fidivl
jns
xchg
lds
sbb
repnz
sub
ja
add
fldl
cmp
sbb
aas
outsl
fwait
add
jl
inc
in
inc
pusha
mov
outsb
les
adc
lds
je
lds
outsb
in
sbb
negb
mov
rclb
push
or
fdivrl
mov
out
or
nop
or
mov
ret
adc
cmpsb
jge
sub
jge
mov
daa
pop
test
roll
xor
scas
addr16
test
gs
in
aam
mov
in
or
sbb
sub
test
ss
pop
popa
mov
fcompl
movsb
xor
das
or
mov
xor
lods
and
cmp
addr16
add
fldln2
inc
jb
popl
jmp
push
idivl
jb
dec
jae
ja
xor
pop
dec
test
cmp
ret
lahf
push
out
sub
sub
pop
movb
leave
insl
add
inc
mov
and
pop
sarb
pop
inc
mov
pop
or
fnstcw
mov
pushf
sbb
rcll
jne
cmp
js
mov
fnsave
lods
loopne
inc
mov
xchg
shl
adc
cltd
inc
mov
cmpsl
add
dec
add
das
daa
negb
lock
test
leave
lock
jge
mov
popf
aas
and
pop
outsl
sti
shl
mov
jl
mov
pop
fs
aas
xor
pop
popf
push
inc
negb
xor
adc
sbb
cmp
ds
fstp
pop
out
add
mov
xchg
adc
add
inc
jo
pop
mov
inc
inc
enter
xor
jbe
add
dec
sbb
fs
scas
push
mov
jb
add
push
mov
pushf
test
sub
in
fst
ret
fcompl
cmpl
mov
adc
fimull
push
inc
push
sub
jns
roll
adc
mov
subb
repnz
movsb
xchg
test
dec
dec
out
dec
lods
aas
push
adc
mov
mov
shrl
dec
add
mov
pop
imul
cmp
or
icebp
or
and
insl
aad
sbb
into
dec
push
test
sbb
mov
mov
push
dec
mov
push
scas
inc
mov
outsl
mov
jo
imulb
sub
nop
xchg
mov
xor
imul
popf
gs
pop
sbb
push
fidivrs
mov
pop
mov
insl
or
push
ss
fstpt
inc
mov
nop
pop
cwtl
jle
es
lea
stc
outsb
jl
adc
mov
inc
lods
test
sub
mov
cmc
cli
orl
hlt
cs
cmp
outsl
and
bound
sarl
jbe
test
pushfw
dec
dec
ljmp
pop
aas
rcr
adc
pop
icebp
dec
cmp
sub
loopne
jge
mov
sbb
mov
vmread
sub
inc
outsb
movsb
insl
lret
test
ja
add
stos
adc
mov
and
ja
dec
adc
inc
insb
into
pop
sub
rcl
inc
pusha
repz
psubw
jns
add
pusha
sahf
decb
scas
jae
cmp
add
mov
inc
sub
cmpsl
lock
sbb
sbb
subb
push
gs
jnp
shr
pop
push
mov
dec
pop
and
out
push
inc
adc
nop
lret
psubw
ja
jp
gs
pushf
mov
daa
arpl
popf
xchg
xchg
frstor
stc
mov
jnp
and
lret
push
jmp
in
pop
pop
jnp
sbb
add
gs
or
cwtl
jae
xchg
repnz
fildll
int3
jmp
in
int
mov
test
jnp
push
inc
cmpl
ja
pop
ret
int
sti
jecxz
dec
add
sbb
insl
lock
cs
or
lods
push
xor
inc
test
test
push
movsb
mov
das
test
cwtl
xchg
pop
test
xor
fistl
or
test
gs
and
mov
fxam
and
test
repz
jne
mov
mov
repnz
add
xorl
testl
cmc
pop
ja
sbb
lock
imul
in
fisttpl
jnp
fstl
fcom
xchg
test
call
mov
mov
sbb
ds
scas
sub
icebp
or
pop
cmpsb
add
pusha
sub
repz
sub
sub
push
xchg
mov
imul
add
xor
sub
sar
add
out
cwtl
mov
jne
data16
pop
push
mov
pop
xchg
xchg
xchg
popf
movsl
out
inc
subb
push
pop
push
push
mov
cmp
stc
cli
lahf
aad
mov
rol
adc
call
sbb
jns
inc
sub
and
ja
imul
hlt
or
shll
sub
fisubrs
insb
ficoms
push
in
data16
and
nop
push
jo
push
xor
dec
lahf
xchg
cmp
xchg
stc
insb
jmp
push
js
push
cmpl
mov
push
add
xchg
pop
cs
sbb
dec
mov
dec
mov
sbb
loopne
roll
sub
outsb
pop
je
adc
inc
out
imul
inc
in
std
push
aas
and
adc
arpl
movsb
lret
pop
and
cmp
inc
mov
inc
sub
inc
dec
ret
ljmp
std
pop
shrb
sbb
in
inc
cmc
aam
push
mov
sbb
inc
cmp
outsb
inc
outsl
lds
add
push
pusha
push
rclb
jns
mov
xchg
aam
sub
fcoml
adc
pop
inc
and
shll
inc
loop
lea
xor
gs
adc
mov
dec
scas
mov
shrl
push
into
dec
add
cwtl
inc
sbb
ds
inc
in
pop
and
pop
ljmp
inc
pop
cs
push
imul
mov
pop
es
sub
cmc
outsl
shll
cwtl
mov
xor
jge
sbb
scas
dec
and
xchg
mov
clc
mov
mov
js
cmc
jno
pusha
idivl
enter
loope
mov
sub
arpl
adc
push
mov
and
sub
add
inc
sahf
sbb
jns
sbb
mov
fisubs
xchg
mov
rcrl
inc
hlt
xor
push
dec
xchg
jl
aaa
pusha
in
outsb
leavew
movsl
leave
lods
cld
rorl
fmull
mov
pusha
xchg
jo
movsb
lods
fadds
jle
dec
add
ja,pt
mov
or
jmp
mov
mov
arpl
xchg
loopne
out
addl
addr16
mov
fcompl
fsub
sbb
repz
sbb
ret
mov
int
fbld
cltd
scas
jle
and
outsl
out
xchg
mov
shlb
pop
pop
mov
shrb
lea
insb
scas
cmc
jmp
cld
and
or
xchg
and
sub
pop
sbb
ret
loop
jo
and
push
fsubrl
ret
xchg
jno
sub
pusha
fisubs
mov
mov
mov
add
std
js
and
sbb
adc
or
loop
add
out
ja
mov
iret
jo
jo
push
add
jmp
pop
outsb
into
xor
inc
sbb
mov
and
cmp
in
pop
movsl
bound
pop
or
add
adc
cmp
adc
or
lret
xchg
mov
cli
ds
shl
lcall
cltd
aad
lret
adc
mov
movsb
test
stos
loop
ficomps
lods
pop
mov
leave
in
ja
cmp
enter
data16
fstl
inc
cli
stc
push
shll
push
jl
add
jl
data16
testb
mov
shlb
or
imul
in
adc
push
xchg
mov
push
mov
repz
sub
fwait
and
test
cmc
mov
mov
in
or
cld
and
jp
shrb
iret
mov
add
loope
cmp
mulb
and
fdivrl
or
not
inc
pushf
arpl
jno
rorl
ja
shrb
stc
push
hlt
cmp
rolb
pop
sbbl
pop
loope
addl
mov
or
pop
jns
push
add
std
pop
popl
mov
mov
or
psadbw
idivl
nop
push
mov
fs
sbb
mov
mov
clc
fsts
sub
add
xchg
or
nop
fldenv
cmp
insl
inc
lcall
loop
mov
fucomp
jl
cmp
push
adc
shl
inc
ja
jae
mov
sub
jno
push
daa
data16
lods
or
mov
mov
push
sub
enter
mov
xlat
add
pop
mov
jns
lock
add
pop
repnz
inc
and
add
mov
lcall
scas
nop
adc
gs
pop
enter
lret
add
xchg
js
andb
in
mov
push
mov
add
mov
adc
lea
fs
icebp
mov
sbb
repnz
fwait
jp
es
jg
gs
in
lds
js
sbb
xor
push
push
push
movsl
out
pop
mov
lods
loope
aaa
cmc
lcall
add
jmp
ja
push
push
insb
sub
mov
lcall
dec
les
cltd
mov
ja
lea
or
pusha
pop
add
xor
lret
cmc
popf
stos
ds
icebp
lret
sub
stos
xor
mov
test
adc
sar
sbb
push
dec
das
and
jle
sub
sbb
pop
pop
cs
inc
lret
inc
xor
fsubrl
loope
shl
scas
outsl
add
push
clc
notb
jo
ss
pop
sub
stos
mov
xlat
cltd
test
sarl
in
inc
std
or
movsb
push
insl
or
fnstenv
insl
test
shlb
pop
mov
mov
add
andb
cs
inc
fs
or
inc
arpl
pop
hlt
pop
les
and
mov
sti
lods
jl
aad
test
into
or
test
push
mov
mov
cmp
pop
testl
std
movsl
psraw
mov
mov
mov
adc
cmp
xchg
jl
push
lea
test
loopne
jg
push
inc
sub
dec
sub
push
gs
sbb
fsubr
and
out
xchg
xchg
mov
fstpl
js
push
nop
xor
insl
loope
arpl
in
xchg
mov
out
test
mov
mov
cmp
push
hlt
in
pusha
test
and
add
jmp
out
and
std
outsb
xchg
push
jae
mov
push
push
sahf
test
push
and
xchg
or
ja
adc
xchg
adc
shll
mov
push
rorl
xor
jo
xchg
sarl
in
aam
or
or
adc
lods
test
mov
xchg
in
mov
sbb
mov
out
adc
sub
mov
gs
out
push
aaa
lahf
scas
fsubrl
jns
outsl
or
pop
fadds
push
leave
out
dec
xchg
shrl
pop
outsb
jns
xchg
ja
xor
push
lock
jg
sti
test
int
outsb
push
or
jns
dec
dec
mov
and
cwtl
xor
ds
adc
jp
cltd
sub
test
adc
lds
lods
in
in
scas
out
mov
ds
fnstsw
sub
subl
pop
pop
loopne
jge
pop
aas
cwtl
mov
out
test
or
test
cmp
mov
repz
mov
xor
and
aas
sub
sbb
mov
jmp
movsl
loopne
les
or
and
movsb
sub
popa
mov
mov
inc
hlt
test
hlt
sub
mov
ret
sbb
icebp
sub
je
fdivrs
fisubs
int3
push
fcomps
aad
dec
imul
xchg
dec
jb
dec
nop
mov
dec
dec
bound
fstp
insl
adc
and
call
mov
or
in
xchg
mov
fidivl
daa
mov
popf
js
mov
jo
into
int
aas
inc
sbb
pop
in
jmp
mov
xchg
adc
lahf
sub
inc
bound
jl
pop
inc
mov
es
ret
mov
inc
mov
mov
and
cmp
push
or
pop
mov
and
pop
sub
jnp
adc
out
inc
pusha
insb
mov
xchg
jo
fsubr
mov
stos
jb
fidivrs
das
inc
mov
ret
aas
bound
push
add
mov
shrb
cli
imul
xchg
test
jle
cltd
and
inc
repz
jg
out
cmpsl
repz
loop
jnp
out
mov
and
mov
push
push
bound
outsb
inc
sahf
adc
aaa
and
mov
xchg
sub
daa
push
xchg
in
sbb
mov
pushf
push
push
lcall
or
inc
cmpsb
or
call
mov
or
push
iret
cmp
lret
int3
lods
loope
mov
rorb
adc
push
sbb
sbb
add
mov
xchg
loopne
xchg
cltd
pop
jecxz
mov
and
dec
push
cmpsb
cmc
or
in
pop
dec
xchg
and
and
push
enter
xchg
stos
rclb
arpl
stos
repnz
test
jbe
mov
inc
push
xchg
adc
aad
push
fildll
cli
pop
or
shll
sahf
sbb
popa
and
xor
ret
sarb
mov
scas
mov
push
fdivrl
fimuls
sbb
hlt
xchg
and
fdivrs
pusha
fisubl
jne
cmc
sub
xchg
jge
adc
sbb
xor
jo
mov
data16
mov
pop
jle
mov
rorb
xor
les
push
gs
jl
xchg
mov
hlt
lds
sbb
mov
sbbb
in
ffree
and
stos
jae
mov
dec
pusha
inc
lds
iret
mov
sub
adc
pop
mov
xchg
enter
mov
mov
inc
adc
fs
sbb
or
jno
leave
jmp
mov
ret
notb
nop
mov
sub
std
jo
and
scas
hlt
sbb
in
out
das
pop
cmp
mov
stos
cmpsb
fdivl
sub
lods
jb
push
aad
sub
incb
push
sbb
add
cmpsb
and
dec
shll
lret
in
rolb
cli
fwait
add
mov
outsb
rcrb
jno
gs
xchg
ret
mov
jnp
mov
decl
rolb
ja
stos
and
mov
into
jecxz
mov
outsb
pop
sub
dec
xchg
mov
iret
push
test
mov
xor
imul
xlat
add
test
xor
pop
icebp
pusha
mov
or
ret
mov
inc
inc
out
push
fiaddl
fdivs
cmpsb
xchg
int
es
nop
rolb
out
xor
xchg
xor
into
adc
xchg
fdivs
sti
dec
outsb
outsl
fstpl
dec
adc
test
repz
nop
mov
clc
xchg
or
mov
fildl
add
jle
cld
insl
cmp
adc
aad
fadds
adc
jmp
repnz
mov
mov
subl
dec
mov
clc
and
pusha
fwait
sbb
inc
out
push
mov
hlt
in
test
mov
sub
mov
cs
jnp
jecxz
sarl
jno
pusha
ja
pop
fstl
outsl
cmp
push
mov
jg
repnz
enter
movsb
mov
sub
test
mov
mov
mov
mov
hlt
jmp
lds
mov
aaa
adc
lret
out
stos
mov
dec
pop
in
andl
jmp
inc
push
repnz
cltd
sub
loope
shll
movsl
xor
dec
inc
jge
push
icebp
out
stos
fiaddl
cli
pop
cmp
out
aam
stc
mov
enter
test
lds
jns
push
mov
ds
adc
fcompl
sbb
adc
pushf
push
cmp
sub
pop
lahf
outsl
es
bound
test
sarl
and
mov
repnz
les
mov
call
xchg
and
fsubrl
pop
sub
dec
or
sub
cmp
cmp
int3
sbb
sahf
clc
mov
icebp
xor
pop
lea
icebp
shrl
out
mov
push
sub
aam
sbb
pop
jg
dec
xor
mov
mov
pop
ret
mov
insb
test
hlt
mov
inc
lret
sbb
movsb
and
jg
mov
stos
test
dec
mov
dec
jl
loop
mov
fisttps
xlat
insb
pop
ja
mov
ds
push
movl
add
jno
push
fwait
mov
cltd
andl
sbb
jmp
lods
pop
jp
mov
je
cmp
sbb
mov
xor
loopne
in
mov
xchg
sbb
cwtl
cli
xchg
lock
je
mov
push
sbb
dec
sbb
cs
js
or
int3
fcmovnbe
lret
add
bound
popf
in
aas
push
lock
stos
pop
nop
jb
inc
fisubrl
cmp
jb
fisubrl
ja
mov
xchg
inc
out
push
insl
icebp
push
lods
jl
cmp
jl
adcl
call
mov
xchg
xor
std
xor
lea
inc
push
xor
jo
push
mov
imul
lods
push
cmp
mov
jle
outsl
mov
cmpsb
in
sub
in
das
and
lds
lds
fstps
adc
cmp
in
shlb
cmpl
pop
jne
addr16
push
ja
xchg
dec
mov
pop
into
mov
xor
lret
lods
cmpsb
inc
in
dec
jbe
mov
lods
cmpsb
je
mov
or
mov
enter
add
lahf
cltd
xor
mov
mov
inc
fcoml
jge
ret
sub
xor
xchg
notl
mov
pushf
push
cmp
adc
pop
cmpsb
cmp
push
daa
fistl
jmp
mov
mov
lahf
push
push
leave
testw
jno
pop
fdivs
xor
mov
xchg
dec
jo
popf
lcall
push
icebp
ss
mov
jge
xor
in
frndint
outsl
xchg
mov
add
icebp
fwait
and
sub
fisttpl
mov
mov
xchg
loope
xchg
scas
and
in
enter
jl
push
ds
out
and
inc
cmp
dec
int
iret
mov
pop
sbb
loopne
in
push
sub
mov
mov
and
add
cmpsb
scas
cmc
push
fstl
pop
inc
push
pop
lock
push
inc
mov
mov
rcrl
movsb
inc
dec
mov
or
push
jbe
adc
arpl
out
mov
jbe
stos
fdivrs
sbb
cmpsl
jp
fsubrl
jo
les
leave
adc
dec
cmp
jg
sahf
cli
push
cmp
ss
mov
enter
leave
in
pusha
adc
xor
mov
sbb
repnz
jne
xlat
out
rcl
sub
popw
das
mov
inc
push
mov
frstor
adc
outsb
orl
fdivrs
ret
push
add
cwtl
rorl
fwait
inc
dec
imul
lahf
iret
fidivrs
dec
push
pop
sbb
cltd
lods
fisttpll
test
rcr
add
sbb
rcl
mov
movsb
insl
ds
add
cli
aad
xlat
incb
sbb
pop
jmp
mulb
or
fcmove
jo
ficoml
stc
in
adcb
je
movsb
mov
test
lret
mov
pop
xor
pop
int
fidivs
scas
pusha
jle
sahf
into
mov
enter
or
ret
mov
add
sub
repnz
add
imul
arpl
dec
push
fstl
adc
mov
jg
lcall
mov
dec
and
add
mov
imul
sti
sub
int3
cmp
mov
dec
int
and
aas
xchg
lock
stc
push
jl
lahf
mov
jbe
pop
icebp
sti
add
push
std
flds
inc
divl
dec
loopne
mov
ljmp
pop
ljmp
inc
jp
dec
sahf
adc
sbb
inc
lods
xor
mov
in
xchg
sbb
xor
ror
push
sahf
jmp
cmc
inc
imul
push
loopne
push
and
popf
dec
cs
fwait
mov
mov
rcrl
or
adc
fistpll
sub
mov
or
ret
sub
add
adc
sbb
xor
out
cmp
adc
jbe
out
loopne
xchg
cmp
jo
mov
sbb
mov
idivl
sahf
hlt
mov
lret
inc
lret
push
cmpsb
inc
stc
and
xor
popa
xlat
sbb
pop
mov
xor
fmul
js
orl
mov
pop
movsl
jns
cmpsb
in
xlat
xor
dec
lcall
test
nop
mov
cwtl
cmp
jae
clc
jns
pop
adc
jp
scas
movsl
iret
adc
in
test
mov
xor
ret
insb
notl
or
jge
imul
add
out
jns
mov
dec
out
push
mov
inc
add
sbb
lret
cli
fs
push
push
mov
dec
or
aaa
lcall
out
aam
call
ficompl
sbb
jb
sub
cli
jecxz
out
ror
adc
repz
sbb
aas
mov
imull
or
sub
fildll
ret
mov
jge
xlat
lea
fs
xchg
mov
movb
into
test
insl
or
xchg
in
push
hlt
dec
dec
ljmp
push
pop
lret
testl
into
lods
mov
push
sbb
mov
lret
ja
pop
or
addl
jb
mov
gs
in
add
repz
jne
fcompl
stos
dec
dec
pop
daa
popa
das
cmp
std
outsb
in
mov
test
mov
inc
add
xchg
je
xchg
cs
jb
leave
adc
scas
es
cmp
mov
lret
sub
data16
cmp
sti
or
mov
ljmp
stc
jae
fsubrs
fprem1
fidivrl
and
jp
in
imul
mov
mov
push
adc
fisubrs
aaa
sbb
arpl
inc
push
pushf
adc
mov
sti
push
mov
test
add
inc
cs
in
sbb
sbb
nop
mov
mov
jo
push
xor
test
js
ds
adc
adc
adc
popf
mov
lret
push
aam
mov
xchg
filds
scas
pop
pop
stos
mov
xlat
insl
ja
arpl
loopne
mov
scas
sbb
adc
hlt
and
xor
inc
popf
movsl
xchg
mov
and
cmc
jecxz
pusha
outsb
push
stos
cmp
adc
aaa
dec
rorb
adc
push
imul
call
mov
sbb
xchg
lods
lret
or
roll
add
hlt
mov
mov
fiaddl
xchg
movsl
loope
cmovp
inc
push
xor
xor
and
out
scas
addr16
mov
movsl
add
jbe
stc
push
pop
pop
fs
nop
jmp
in
pop
ds
aaa
xor
cmp
stos
mov
dec
stos
or
push
negl
ss
js
xchg
lcall
pop
out
jnp
aaa
mov
hlt
add
push
mov
inc
and
sub
insl
ret
cmp
push
ds
in
jo
jge
dec
enter
push
cld
ja
rclb
pop
jns
loopne
lcall
in
mov
xor
in
cli
xchg
and
sbb
dec
or
loope
mov
call
cmp
lods
pop
or
push
cmp
adc
adc
lods
es
stos
xchg
push
or
jo
mov
xchg
hlt
xchg
je
loop
cmp
cs
mov
sub
fbld
xor
lret
fisttps
push
push
fsubrs
sbb
pop
mov
push
outsl
sbb
mov
adc
xor
loope
xor
insb
add
pushf
nop
xor
xor
push
les
pop
add
mov
inc
sbb
pop
loop
adc
lret
stos
mov
ja
jae
xchg
in
mov
daa
pop
in
movnti
stos
xchg
jo
mov
mov
sahf
pop
adc
xor
inc
sbb
loope
fadds
adcb
fidivrs
dec
mov
cwtl
imul
popf
ror
gs
xor
and
add
rcrl
adc
mov
sti
js
or
ret
fisttpl
sbb
testb
push
sub
push
mov
push
sbb
mov
xor
lds
je
xor
xchg
add
push
xor
fninit
and
mov
adc
and
pop
push
pop
sbb
fsubrs
sub
add
ss
fcmovnb
ljmp
xorb
scas
dec
jno
mov
mov
mov
push
mov
push
sub
sbb
cltd
xor
mov
jg
cmpb
cmpsl
pop
dec
xor
push
lock
les
int
cmp
adc
popf
add
and
mov
pop
dec
mov
aas
mov
fldcw
xchg
and
adc
aas
test
rclb
into
enterw
lods
pop
xor
xchg
mov
cli
push
shrl
mov
int
add
adc
aaa
in
add
dec
xchg
sub
divl
pushf
xchg
sahf
or
and
in
ja
out
scas
jno
jnp
test
outsl
mov
or
int
lock
mov
xor
add
push
or
pusha
push
mov
lods
xor
pop
sbb
inc
aaa
imul
jl
inc
cld
dec
add
jl
mov
jne
pop
inc
aam
sub
into
mov
aas
lea
cmp
mov
lea
dec
mov
and
es
in
fisttps
sub
mov
cmp
jae
popa
mov
inc
pop
clc
xchg
fisttpl
jnp
jo
or
mov
mov
inc
fstp
pop
cmpsb
mov
xchg
push
shl
push
fisubrl
adc
xchg
nop
fstl
push
setns
je
fwait
sub
mov
pop
scas
fwait
sub
add
inc
push
push
mov
les
xor
arpl
lds
sbb
cmp
add
or
add
ljmp
ret
cmp
popf
mov
aam
fs
pop
add
shrl
jle
push
mov
jnp
or
xchg
sbb
pop
mov
push
add
test
push
scas
mov
sbb
jmp
xchg
or
push
dec
lahf
in
inc
ficomps
or
gs
cmpb
rolb
jg
out
ja
iret
dec
mov
dec
push
daa
and
push
cli
jge
dec
mov
gs
jecxz
arpl
mov
push
mov
lcall
xorl
xchg
dec
push
adc
fwait
int3
push
xchg
jbe
mov
stos
and
inc
shr
fnstsw
mov
add
mov
sbb
jno
mov
jns
xor
fcmovnu
clc
xlat
stos
cltd
jo
lret
in
mov
xchg
icebp
adc
call
daa
dec
xchg
and
es
mov
sbb
mov
int
lcall
pushf
mov
mov
popa
push
adc
enter
insb
dec
inc
aad
cmp
sbb
hlt
test
aas
js
cmp
jns
sbb
pop
shrb
cmc
sbb
hlt
jmp
adc
outsb
popf
test
jg
fsubrs
ds
ds
lds
xor
inc
xchg
fisttps
ficoms
push
or
out
js
pop
addr16
outsl
pop
push
jo
sub
xor
movsb
icebp
cwtl
test
fdivs
mov
dec
cmpsl
xor
loopne
lods
xchg
adc
add
lret
sub
imul
pop
pop
outsl
sbb
ljmp
ror
jge
xor
inc
in
stos
js
cmp
cmp
out
add
ret
push
je
mov
fimull
test
cltd
dec
sub
loop
jle
call
inc
add
test
out
push
jae
lods
rcrl
jl
decb
andb
testl
test
mov
jne
gs
movsl
adc
add
jo
xor
movsb
dec
stos
je
and
xchg
fiaddl
fsubrs
outsl
inc
jo
repz
adc
push
and
pop
ret
push
inc
dec
sub
clc
jge
and
mov
pop
sarl
mov
mov
hlt
xor
idivb
in
and
xor
test
dec
in
push
push
xchg
xlat
mov
gs
call
dec
push
gs
arpl
add
inc
mov
and
jne
loopne
xchg
lods
sti
adc
and
sub
lock
imul
pusha
cltd
xchg
xchg
mov
adc
fildll
shr
cltd
pusha
push
andb
pop
pop
push
mov
mov
xor
mov
ja
mov
mov
push
jo
lds
sbb
pop
cltd
rep
iret
ljmp
dec
cmp
push
fisubl
sbb
daa
push
sbb
insb
fsubl
pop
mov
movsl
sub
or
add
jp
lret
les
jl
ds
in
dec
iret
lods
and
call
in
mov
or
cmp
jb
shl
mov
das
pop
lds
pop
adc
mov
dec
fmuls
lret
out
decl
mov
int
cli
aad
ret
jbe
orl
call
push
cltd
sbb
sahf
divl
test
jns
xchg
xor
test
adc
lods
jecxz
test
test
sahf
stc
mov
sbb
add
mov
mov
stos
dec
pop
add
dec
or
outsb
push
pop
jmp
sbb
cmp
inc
outsl
sbb
pop
inc
xor
jno
das
in
ss
adc
daa
xchg
xor
decl
adcb
shll
mov
adc
roll
xor
add
sbb
dec
cmpsb
cmp
mov
jecxz
mov
push
inc
movsl
int
fisttpll
sbb
rolb
pop
dec
scas
loopne
test
mov
pop
mov
test
and
inc
pop
mov
jg
inc
inc
sub
inc
pop
cmpsl
int
pop
stos
push
xor
push
repnz
push
xchg
jae
add
gs
xchg
pop
xlat
les
shl
mov
in
sbb
imul
sbb
sbb
out
lcall
sbb
jge
div
movsl
cli
fldcw
insb
in
mov
add
sti
cmp
paddw
inc
or
inc
cmp
les
test
cltd
dec
mov
inc
or
or
mov
ja
fnstenv
push
insb
add
pop
and
popf
jge
sub
jmp
inc
jmp
outsb
jne
xchg
movsl
cmp
test
call
lea
popa
sahf
add
popa
inc
nop
dec
cmpsl
pop
or
push
test
movsl
in
mov
std
pop
scas
imul
and
fcmovne
or
xor
in
cmp
clc
xchg
and
stos
cmp
cmp
and
repnz
repnz
mov
lret
pusha
testb
sbb
add
adc
jb
fisubs
mov
leave
mov
je
ret
mov
mov
push
loopne
or
sub
or
xchg
mov
adc
dec
xor
in
or
or
xchg
sub
xchg
adc
xlat
xchg
imul
cmp
xchg
repnz
adc
cs
pop
adc
test
in
mov
xchg
pop
xchg
xchg
inc
xor
or
or
add
inc
pop
into
and
insl
fs
xor
or
lcall
popf
add
dec
push
add
sarl
or
aas
or
mov
test
push
outsb
xor
aas
aas
std
mov
ret
pop
mov
addr16
and
fwait
mov
adc
cmp
fidivl
aaa
ja
pusha
out
rolb
cmp
aam
cmp
in
and
or
xchg
je
xor
cmp
pop
std
aad
loope
sbb
mov
aas
fsubrs
jae
cmpxchg
xor
iret
xchg
push
pushf
idiv
test
dec
mov
clc
cltd
xor
loop
shlb
add
repz
and
in
mov
add
psubw
imull
repnz
loop
push
xor
and
pop
push
scas
test
subb
mov
mov
rcll
sbb
lods
push
mov
leave
mov
jge
jp
add
mov
inc
cli
es
or
sbb
insl
and
insl
adc
shll
mov
mov
imul
daa
or
aad
jb,pn
inc
xlat
add
fisttps
loop
inc
fld
and
pop
push
dec
stos
enter
ficompl
inc
leave
out
jg
in
jae
jg
mov
fbstp
inc
fbld
cmp
loop
popf
das
addr16
jae
mov
push
adc
in
in
mov
repz
stos
pop
dec
cli
jns
dec
out
ret
jle
xor
popa
add
ja
and
inc
xchg
aad
jp
inc
mov
in
fwait
lahf
dec
mov
icebp
and
repnz
mov
scas
sub
fadds
cmpsb
insb
ficompl
ret
add
push
jmp
loop
sahf
loope
xchg
lods
push
push
sbb
faddl
cmp
push
push
pop
mull
push
mov
out
push
in
loop
stos
add
mov
lods
into
cmpsb
push
inc
nop
pop
scas
arpl
pushf
int
rclw
mov
mull
test
push
mov
inc
push
daa
xchg
xlat
add
add
cmp
lods
dec
push
push
filds
test
push
jp
mov
pop
push
shl
loope
idivl
mov
fdivrs
push
xor
mov
push
xor
mov
jle
ja
xchg
xor
inc
dec
or
add
rcll
or
rorb
lret
inc
xchg
sbb
xchg
sbb
fdivrp
push
inc
ret
jb
out
inc
lret
in
and
adc
dec
lea
and
lds
fistps
mov
or
and
pop
jge
mov
xor
push
pop
lea
loopne
fsubl
outsb
push
or
jle
xor
adc
and
sub
dec
mov
mov
dec
ds
fwait
push
divl
jns
adc
pop
std
mov
cld
test
in
push
mov
sub
adc
enter
in
aas
cltd
pop
outsl
sub
and
inc
arpl
pop
sbb
dec
xor
test
inc
cmp
mov
cmp
pop
into
mov
hlt
ret
arpl
jbe
and
mov
push
test
mov
in
lea
xchg
or
xchg
adc
jb
xchg
ss
cmp
shl
mov
rcrb
repz
or
xchg
pop
pushf
mov
inc
fcompl
cmpsb
out
adc
fadds
push
jns
call
fbstp
mov
lret
movsb
add
sub
cmp
xchg
mov
xor
xchg
jbe
pop
cmp
mov
popa
jecxz
sarl
add
test
out
aaa
or
inc
pop
loope
mov
out
jl
es
daa
data16
retw
jp
lret
and
jecxz
cmp
jmp
add
add
mov
xor
mov
fnsave
add
sbb
sbb
pop
ss
mov
fs
test
stos
jbe
sub
cmpsb
mov
adc
notl
jecxz
add
enter
fcomps
es
mov
push
enter
add
and
out
cmpsl
jne
ja
jnp
or
inc
inc
adc
sbb
outsb
mov
or
sarl
jp
fisubrs
add
jns
and
test
adc
movb
or
pop
lcall
or
cmp
jmp
std
roll
mov
pop
inc
sub
cmp
sbb
sub
push
xchg
out
dec
jb
cmovl
cmp
inc
dec
aaa
push
inc
adc
fs
test
imul
lret
test
in
mov
adc
jl
adc
push
fistpll
pop
mov
jae
jle
push
xchg
pop
mov
repnz
xor
inc
in
jmp
add
imul
xlat
push
cld
rorl
mov
dec
pusha
sbb
mov
iret
in
and
xchg
imul
dec
pop
test
jge
mov
dec
sub
dec
insl
or
adc
stc
mov
inc
and
pop
sbbl
cwtl
mov
lahf
imul
cmp
add
test
mov
bnd
or
aam
mov
stos
cli
cwtl
imul
mov
xor
shl
cmc
fwait
aam
jg
sbb
mov
add
into
fisttpl
push
out
push
mov
xchg
xchg
push
xorb
orb
inc
mov
and
ret
inc
mov
scas
sbb
mov
xchg
les
jae
pop
jl
pusha
jno
pop
mov
int
incb
pop
outsb
bound
dec
mov
movsb
sbb
and
xchg
xchg
lods
pop
hlt
adc
or
mov
dec
dec
adc
fs
inc
cmp
scas
inc
mov
imul
pusha
repz
pushf
scas
dec
jmp
in
pop
xor
pop
std
subl
les
nop
dec
pop
sub
fxtract
cmpsl
lahf
dec
repz
ret
dec
jb
addb
inc
jmp
pop
inc
imul
and
pop
cmp
loope
nop
fcomps
adcl
int3
mov
test
push
shll
negb
jecxz
rorl
sbb
jno
mov
aas
cmp
push
stos
in
fnstenv
mov
lds
repnz
in
fs
push
mov
pop
shrb
dec
fidivrs
inc
jmp
mov
mov
dec
cmp
mov
and
push
mov
sbb
xor
inc
xchg
cmpsl
test
fucomip
adc
adc
sarb
adc
sub
mov
add
into
adc
xchg
outsb
inc
pop
sub
adc
aas
into
lcall
push
mov
dec
fnstenv
lock
jecxz
sarl
test
mov
ss
and
iret
lret
les
cwtl
out
es
and
fdivrs
pop
test
pop
sub
push
rcrl
in
ret
cld
xchg
in
mov
add
cmpb
cmpsb
mov
xor
and
bound
xchg
in
xlat
mov
pushf
cltd
dec
mov
gs
cmp
fidivl
add
cwtl
jno
dec
shl
add
ror
push
and
iret
cld
std
sbb
pop
stos
sub
cli
in
cltd
lds
in
mov
add
shl
leave
adc
icebp
inc
and
pop
sbb
or
sbb
outsl
repz
sbb
mov
pop
fisttps
mov
inc
inc
int3
cltd
lea
mov
xor
addr16
mov
je
xchg
cli
pop
sbb
xchg
adc
dec
xchg
sbb
mov
inc
loop
mov
rep
xchg
int
jmp
fisubs
xchg
sbb
xchg
lea
leave
movsb
fcomps
add
mov
push
cld
pop
or
clc
pop
ljmp
cmp
lret
add
aas
xchg
fidivrl
jo
sbb
out
mov
mov
fcomps
mov
scas
sarl
xlat
pop
lds
shr
cmp
ficoms
jns
pushl
xchg
jns
daa
cltd
gs
loope
cli
lods
out
adc
pop
pusha
popa
out
lret
cmpsl
mov
das
popf
lahf
movsb
popf
adc
not
sbb
lahf
dec
iret
jmp
inc
adc
dec
push
mov
mov
jp
dec
cmp
dec
ss
or
lcall
mov
mov
ds
inc
test
add
shll
std
lds
gs
mov
addr16
push
add
jae
xchg
pop
cmpsl
ss
and
aad
mov
sub
testl
cmc
out
pop
jmp
inc
push
lods
jo
pop
cltd
jnp
into
jecxz
ja
cwtl
mov
addl
mov
mov
sbb
stos
xchg
subl
ja
xchg
fisttpl
mov
adc
dec
test
sbb
cmp
aam
push
or
cmp
arpl
fdivs
mov
sub
pop
inc
pop
mov
mov
cmp
push
scas
add
adc
dec
lahf
dec
cmp
xlat
fidivrs
pop
imul
mov
jae
popf
loopne
sub
xor
insb
xlat
testb
sahf
into
push
scas
mov
std
jae
add
adc
mov
dec
xor
mov
cmp
sub
push
xchg
adc
mov
xchg
rorb
sub
pop
pop
lahf
dec
les
loop
sbb
pop
fwait
sbb
add
les
mov
adcb
fucom
adc
lods
mov
hlt
mov
add
xchg
in
enter
movsl
stos
dec
xchg
pop
dec
and
xor
popf
pop
jmp
outsb
jno
mov
inc
fistpl
pop
cmp
leave
decl
idivb
pop
das
xchg
pop
int
jg
add
testl
pop
loopne
das
pop
push
sahf
aaa
fsubr
fldt
nop
stos
cmp
dec
loop
dec
cmpsb
dec
leave
dec
jnp
xor
stos
test
mov
jae
push
cmpsb
pop
shrb
xchg
jp
xor
mov
test
std
push
sub
es
in
push
test
mov
jns
jb
push
cltd
pop
mov
jmp
adc
jmp
jb
sbb
sarl
inc
push
sbb
xor
inc
jle
push
lcall
rorl
ljmp
jae
and
adc
push
and
xchg
sbb
repz
xchg
push
push
movsl
das
into
or
outsl
push
jnp
sub
ss
aas
sti
dec
pop
scas
jle
pop
sbb
inc
popa
push
or
repz
xor
mov
loopne
cmovns
fiaddl
stos
or
hlt
movsl
pop
rorl
lret
cmpsl
lret
push
pop
imull
jb
inc
dec
popa
mov
lcall
daa
dec
or
cmpsl
pop
je
jmp
push
stc
mov
std
inc
and
out
out
lods
and
rorl
dec
pop
lahf
xor
mov
lcall
out
in
and
mov
out
in
push
ds
fisubs
push
xor
sahf
cld
mov
ljmp
cmp
andb
jg
fldenv
gs
mov
rcll
cmp
es
pushf
mov
pop
jp
pop
cmc
insw
cmp
test
gs
adcb
insb
sub
pop
sub
aaa
mov
or
sbb
fistpll
jnp
lods
mov
dec
cli
lods
movsb
mulb
fisubrl
jge
sbb
ret
push
cli
cmp
add
das
aaa
or
outsb
adc
mov
les
enter
push
lcall
xchg
xor
and
sub
leave
xchg
pop
aad
lcall
add
hlt
ret
pop
push
das
pop
xor
mov
cltd
popf
mov
sbb
mov
xor
lock
leave
insb
or
repz
mov
les
addr16
sub
call
xchg
lods
inc
decb
jle
dec
outsl
sti
mov
and
mov
lret
mov
adc
stos
sub
stos
sbb
inc
inc
rclb
out
imul
mov
jp
jae
mov
and
mov
aas
addr16
pop
xchg
xchg
mov
dec
cmp
das
addr16
ds
idiv
fcomps
test
out
cmpsb
push
mov
adc
rol
movsb
loop
lods
mov
sub
dec
adc
fcoml
cli
in
mov
loop
clc
dec
mov
pop
and
in
add
jmp
mov
jmp
and
pop
xchg
jne
inc
ljmp
or
jns
jnp
add
pop
xor
sarb
xchg
jge
sarb
dec
mov
lea
pop
ljmp
push
jns
hlt
popf
mov
pop
dec
xor
mov
scas
loopne
or
repnz
dec
fstpl
lods
jo
fldl
xor
cmp
and
dec
hlt
and
add
lret
lcall
js
cmp
push
cwtl
lods
stos
push
pushf
inc
rep
pop
dec
push
ret
call
sbb
rcrb
jge
stc
push
in
je
cmp
daa
add
loop
shrb
ss
push
mov
out
je
lods
jnp
jmp
pop
mov
jae
fs
push
mov
push
dec
mov
adc
test
cmp
sub
jge
xchg
sbb
movsb
aas
sbb
mov
cmp
lock
filds
jl
addr16
sub
pop
and
popa
imul
mov
dec
popa
dec
call
inc
jb,pt
loope
loop
push
out
mov
inc
in
popf
pop
mov
add
mov
add
shrb
outsb
add
cmc
cmp
mov
and
insl
repnz
push
push
pop
cmp
jmp
pusha
dec
or
shr
loop
pop
push
jg
xchg
add
push
pop
sahf
pop
pushf
in
xchg
lods
xchg
mov
ret
icebp
pop
or
mov
mov
dec
xchg
jno
pop
hlt
pop
xchg
dec
and
cmp
ret
jmp
push
push
sbbb
jnp
adcl
dec
rorb
int3
ret
jo
sbbb
adc
mov
addb
push
in
imul
sub
imul
inc
lock
nop
mov
jo
mov
lods
test
scas
shlb
inc
aam
aad
daa
mov
lret
mov
orb
shrb
shll
or
mov
not
enter
ljmp
outsb
test
cs
ljmp
loopne
sbb
into
inc
mov
or
mov
jp
repz
stc
shl
sbb
mov
jl
lds
and
add
push
cs
cmp
pushf
mov
ja
bound
cwtl
pop
sub
and
dec
or
outsb
insb
adc
arpl
xlat
push
xchg
sub
pop
xor
lods
rcrb
inc
and
inc
pop
cmp
fwait
push
imul
inc
fcmovb
and
ss
mov
aas
popf
adc
testb
ljmp
mov
sbb
daa
fstp
jo
inc
cmpsb
enter
jg
stos
enter
pop
push
mov
cmp
divb
push
cmovne
xchg
cltd
in
jae
rol
jae
or
xor
mov
push
mov
and
scas
pop
pop
test
or
dec
in
add
lahf
jo
push
jmp
outsb
jecxz
mov
into
cs
inc
jno
imul
mov
cmpsb
or
enter
in
xor
popa
ds
xor
mov
push
push
vmovhlps
pop
cmp
sahf
adc
sbb
adcl
mov
ror
jp
insl
aaa
addl
sbbb
test
out
arpl
int3
jle
outsb
imul
xor
fstps
lds
mov
cmpb
push
cwtl
in
jg
pop
cmpb
add
and
and
dec
add
mov
push
enter
and
dec
xor
rorl
pop
rcrb
mov
cmp
xchg
sti
scas
mov
sub
outsl
shrb
inc
shl
xchg
jg
or
and
and
fisttpl
loope
subl
or
rolb
cmp
adc
mov
fbstp
jg
in
mov
jecxz
and
add
xchg
pop
rcrb
mov
mov
nop
cltd
or
cmp
test
movsb
push
push
in
mov
pop
ficomps
test
loop
cmp
fs
xor
cmc
add
roll
js
xchg
jns
mov
movsl
jo
xor
dec
ss
inc
sti
add
inc
pop
or
dec
pop
outsb
movsb
lods
adc
sbb
es
mov
push
sub
loope
push
notb
ss
es
ss
inc
push
pop
sbb
shll
gs
pop
sti
and
push
popf
out
dec
dec
pusha
inc
cwtl
xchg
xor
cmp
xchg
adc
inc
pushf
dec
cwtl
xchg
fsubl
pop
cmp
cmp
scas
insb
ret
fldt
sbb
ss
stos
jno
jns
inc
xchg
pop
or
cmp
jns
jg
fcomp
inc
xchg
sub
outsb
dec
fs
cmp
jmp
or
cmp
cmp
in
add
pop
test
sub
push
data16
out
inc
sbbb
addr16
sbb
rolb
insb
loop
or
dec
add
loopne
jno
fldln2
movl
addb
lods
dec
jo
dec
pop
push
xor
aas
inc
test
sbb
sub
mov
cltd
out
into
dec
inc
mov
pop
stos
scas
ret
ja
mov
sar
andb
add
add
int
subl
data16
mov
fstl
cmp
inc
ret
sbb
and
fucom
sarb
mov
stos
leave
addb
das
lods
ret
sahf
popf
ja
pop
unpckhps
xchg
jmp
adc
mov
and
cmp
imul
lock
dec
test
out
dec
xchg
sbb
and
fisttpll
push
stos
notb
or
and
cmp
dec
and
into
int3
adc
pushf
cmp
xchg
adc
mov
addr16
ret
cwtl
int3
sbb
fidivrs
mov
mov
jl
jmp
prefetchnta
jo
adc
cmp
jmp
testl
es
insl
outsl
iret
mov
das
inc
jnp
or
push
arpl
jmpw
popf
sub
cmp
sahf
es
mov
push
clc
sbb
lcall
and
push
xor
mov
or
xchg
adc
cmp
popf
sbb
dec
mov
cmp
into
outsb
mov
sbb
clc
aad
inc
and
and
cmc
mov
add
sub
sub
ljmp
test
cmp
or
mov
es
cs
pop
into
repz
andb
adc
rol
xlat
and
and
mov
subl
pop
cli
mov
addl
aam
fcomps
adc
jg
std
sbb
mov
fs
push
jge
or
jno
dec
cmp
adc
and
jbe
and
pusha
fdivrs
xchg
andl
dec
adcl
xor
ja
repz
inc
pop
mov
adc
add
xchg
es
loope
popf
loope
push
mov
push
sarl
mov
subb
jns
and
sahf
cmpsb
in
xor
jbe
aam
or
fs
jge
lahf
and
push
repz
push
data16
cld
dec
and
mov
fimull
mov
repz
addr16
mov
rol
jge
xchg
jecxz
inc
and
scas
cmp
dec
lcall
mov
and
orl
lock
or
sub
addb
jns
clc
sahf
dec
add
jbe
aam
sub
or
mov
and
sbb
and
lock
inc
cmp
addl
in
nop
push
out
jmp
xchg
iret
mov
aam
mov
stos
xchg
mov
enter
loop
jmp
push
loope
es
sub
out
xor
sahf
insb
mov
shrb
arpl
stos
loope
sub
stos
ja
or
push
sar
stc
xor
aad
inc
mov
inc
mov
mov
pop
pop
addr16
cmp
jbe
dec
adc
lock
ljmp
add
addr16
outsl
adc
inc
inc
dec
cmpb
aad
jecxz
cli
pop
sbb
insb
lods
pop
pop
clc
mov
in
sahf
inc
loopne
inc
cmp
popf
in
pop
je
jns
js
ret
shrl
mov
inc
cmp
out
push
sbb
enter
mov
and
int
dec
cmpsb
pop
sti
sbb
fs
sub
mov
mov
nop
in
pop
enter
dec
test
decb
inc
dec
dec
push
movsb
clc
sahf
jmp
fisubs
mov
sti
cmp
mov
aam
jmp
scas
and
test
and
mov
adc
fidivs
mov
lds
pop
out
adc
loop
popf
movb
adc
push
mov
adc
fdivr
jno
xor
cld
test
ror
in
nop
xchg
loop
mov
sarl
push
in
je
mov
pop
mov
insb
sti
nop
jmp
jne
scas
in
enter
mov
jge
fcmovnb
jb
xchg
xchg
xchg
ljmp
int
test
popf
pop
add
lods
shl
loope
imul
loope
push
xor
imul
mov
inc
xlat
mov
adc
pusha
pop
vmovsd
jl
sbb
xor
sahf
mov
in
xor
loop
mov
jno
jge
xchg
mov
push
mov
cmc
inc
xor
fmuls
orl
shl
sub
push
ljmp
and
out
ja
jno
jl
jo
sbb
jnp
dec
loope
lea
mov
rorb
or
popa
push
insb
adc
xor
mov
mov
stc
cli
shll
inc
icebp
jb
arpl
mov
ds
and
mov
repnz
xchg
fiaddl
jne
pop
xor
movsb
or
mov
pop
nop
lcall
arpl
mov
pop
jecxz
sti
out
in
fnstcw
or
mov
aad
push
nop
jl
sub
and
cmp
mov
lds
mov
mov
push
inc
decl
aas
pop
daa
push
scas
and
fstps
pop
cmp
xchg
into
inc
mov
mov
gs
testb
and
cltd
stc
andl
mov
in
or
push
push
adc
dec
sbb
pop
gs
inc
out
push
cmp
add
loope
inc
cmp
testl
sub
mov
mov
jne
dec
int
pop
imul
scas
sub
mov
xchg
movsb
outsb
push
notl
sbb
fs
dec
sbb
inc
ds
jbe
aas
daa
push
jmp
fwait
scas
ret
cmp
cmpsl
stos
mov
addr16
ret
subl
in
fcompl
jle
mov
cli
mov
push
call
xor
popf
mov
xchg
adc
mov
lea
out
int3
movsb
cmpsb
fmul
orl
jg
sub
add
sbb
mov
mov
subb
xchg
or
cmp
jg
movsb
cmp
xorl
ret
mov
lret
pop
inc
dec
inc
sub
dec
xchg
sbb
and
lcall
sbb
cwtl
sbb
mov
subb
jae
test
js
data16
mov
sub
mov
adc
adc
mov
sbb
xor
xor
std
arpl
xchg
cmpsb
rclb
das
rclb
pop
push
push
std
jecxz
aas
adc
movsb
push
sbb
push
or
loopne
sub
and
inc
lock
mov
mov
push
scas
cld
ret
das
sbb
jmp
fists
sbb
push
jb
imul
sub
and
fiaddl
add
cs
mov
xchg
cmp
mov
xchg
mov
fsubrs
js
sbb
repz
decb
and
pop
stc
pop
lea
ret
idivb
lds
pushf
repnz
jmp
mov
rcl
aad
pop
movsb
xor
pop
inc
fninit
loopne
movsb
test
scas
push
mov
xlat
xchg
movsl
mov
nop
xchg
sbb
mov
js
push
inc
push
inc
out
cwtl
fisttps
sub
push
imul
ret
push
shl
push
ret
mov
fildl
test
pusha
fildll
loop
pop
add
cmp
and
adc
shrl
arpl
pop
movsl
sub
test
gs
xchg
push
cs
ja
cmp
inc
push
pushf
leave
stc
aad
mov
shrb
mov
into
dec
notl
sub
jne
pop
clc
insb
pop
iret
push
cmp
adc
and
dec
lss
mov
mov
clc
mov
mov
cmpsl
mov
dec
push
cwtl
daa
jno
mov
and
xor
or
xor
loopne
fwait
jnp
jp
mov
sbb
dec
inc
dec
out
or
xchg
mov
lahf
lret
pop
in
ret
pushf
out
sahf
jg
pushf
jno
jge
mov
cmp
push
or
repnz
xor
dec
cmpsl
sbb
jno
insl
mov
mov
mov
out
push
pusha
mov
cltd
hlt
and
mov
mov
push
out
cmpsl
fwait
test
lea
push
jo
ficompl
int3
cmpsl
out
sahf
add
repz
xor
movsl
inc
es
les
add
dec
cmc
sar
cmc
orl
outsb
cmp
xchg
repnz
sti
xor
mov
cmp
sbb
mov
or
fs
cmpsl
mov
js
nop
pop
push
jmp
aas
cmc
popa
stos
add
cs
int
std
insb
shl
inc
inc
pop
lods
add
je
jo
mov
out
xor
sbb
lahf
sbb
sub
mov
fsts
sti
cmp
sbb
push
imul
stos
cmp
push
add
out
into
not
sub
mov
and
xchg
jns
xchg
xchg
xchg
pop
std
nop
sbbb
inc
les
stc
out
out
outsl
sub
pop
dec
imul
xor
insb
push
add
lea
and
mov
into
jae
mov
in
xchg
ret
and
mov
cmp
lea
nop
hlt
fwait
imul
sub
mov
in
mov
es
shlb
sarl
xor
out
jae
cli
push
cmpsl
xor
mov
js
insl
mov
repz
pop
sub
inc
cmpb
pop
xlat
sbb
cmp
daa
out
call
dec
das
popf
pushf
sahf
dec
loope
xor
add
out
mov
mov
jbe
mov
fucomi
sbb
stc
je
sahf
cs
shrb
mov
and
cmp
pop
je
xlat
call
mov
push
pop
sub
lret
cli
mov
subb
xchg
mov
and
imul
daa
cmp
inc
push
ret
aam
mov
xchg
das
xchg
ss
sbb
dec
sbb
mov
jl
iret
pop
mov
pop
sbb
in
outsb
add
nop
jae
mov
xchg
mov
cmpsl
push
dec
scas
or
inc
andl
je
sti
sub
aam
adc
pop
int3
xor
add
pop
dec
mov
aam
xor
push
xchg
push
mov
xchg
dec
jecxz
xor
aaa
lret
lret
jae
cld
push
xor
bound
cmpsl
in
inc
andl
in
enter
pop
fimull
add
xchg
into
inc
out
lods
not
adc
data16
inc
enter
popf
jno
xchg
out
jne
aaa
fstl
mov
stc
add
pop
push
fsubrp
adc
shrb
xor
lret
pop
mov
mov
lods
jo
clc
popf
mov
loop
pop
out
and
xchg
push
xchg
insb
test
sbb
aas
out
test
cwtl
movsb
sbb
pop
xchg
enter
mov
arpl
or
pusha
out
popf
jecxz
xor
or
mov
js
dec
pop
xor
popa
clc
sub
dec
sahf
subl
xchg
bound
cmp
xchg
adc
das
inc
outsb
mov
sub
pop
push
lcall
jp
mov
fidivs
xor
fistpl
cmp
mov
lcall
jne
adc
test
mov
cld
addb
icebp
or
push
sbb
inc
les
pusha
push
add
or
add
fs
mov
or
pushf
vrcpss
jae
ret
out
or
sub
ret
xlat
jle
loope
adc
xchg
shr
cmp
inc
sub
push
lret
cmp
xchg
arpl
and
je
cmp
push
dec
je
push
movsb
xchg
add
lret
jbe
add
fs
rolb
push
enter
ficompl
dec
aam
inc
mov
mov
push
cmp
int
mov
cli
cs
lods
hlt
out
enter
fsub
mov
popa
test
add
movsb
inc
push
add
inc
stos
lcall
loop
ret
pop
cld
xchg
push
mov
iret
push
xchg
enter
pop
fmull
sti
add
inc
inc
push
mov
add
out
pop
jle
push
scas
mov
cli
cmp
jmp
in
test
xchg
jbe
ljmp
lret
iret
xchg
mov
mov
loop
imul
hlt
sub
in
and
dec
lahf
xchg
and
fimull
ret
call
add
roll
mov
repnz
testb
movsb
inc
hlt
fnstcw
jmp
xchg
out
pusha
sti
ljmp
mov
jb
into
stc
push
mov
cltd
fwait
xor
mov
insb
pop
inc
mov
xchg
fwait
paddsw
sub
mov
mov
fadds
and
call
dec
fadd
in
adc
push
xchg
clc
test
sbb
aaa
jne
jae
out
lea
fmulp
or
mull
or
loop
sub
mov
jb
mov
lret
mov
xchg
andnps
xchg
jbe
call
inc
push
into
cmp
mov
insb
stos
mov
inc
adc
sub
xor
jno
jl
sahf
and
fcoml
cld
add
pop
dec
js
cmp
in
das
outsb
or
fcompl
sbb
imul
movsl
enter
test
imul
mov
add
cld
cmp
push
leave
mov
in
mov
insb
incl
mov
aad
push
cwtl
cs
pusha
add
inc
and
inc
paddsw
cwtl
adcl
fildll
scas
jno
lock
mov
les
sub
or
and
test
aas
fimuls
sarl
aas
cmp
imul
xchg
push
adc
ds
xchg
rol
pushf
sbb
imul
push
lods
clc
xorl
mov
fsts
jns
int
lahf
lahf
and
xchg
sbb
sti
pushf
movsb
cmp
add
mov
dec
popf
popf
jl
xor
sbb
mov
push
movsl
in
cmpsb
jle
cmc
sarl
lret
ret
lcall
dec
ljmpw
jmp
cmp
or
inc
dec
push
sub
movsb
adc
les
lret
out
pop
data16
adc
inc
xchg
or
fdivl
jecxz
jle
pop
lods
sbb
pop
mov
lret
xor
xor
repnz
test
aaa
sub
test
iret
mov
xor
jne
shlb
std
sbb
clc
fwait
int
dec
stos
jno
inc
out
addr16
loop
daa
data16
adc
ljmp
jb
ret
add
mull
mov
pop
cld
cwtl
lret
mov
pop
xchg
push
pusha
je
shlb
and
xor
lock
mov
jne
lret
pushf
mov
cmp
pop
mov
cmpsl
cltd
inc
das
imul
mov
repnz
pop
and
cmp
inc
dec
push
xor
adc
gs
xchg
sbb
icebp
jle
lods
mov
mov
ljmp
sub
xorb
xor
repz
dec
aaa
cmpl
pop
ja
test
push
ss
inc
add
out
sti
add
xor
or
dec
add
mov
mov
inc
loopne
movsb
sub
cmc
movsl
push
pop
ja
sbb
push
es
dec
rcll
shl
dec
mov
adcl
jno
mov
scas
mov
cmp
stos
inc
mov
movsb
jb
sub
mov
xlat
dec
mov
xorl
push
imul
aam
daa
jae
andb
test
loop
imul
xlat
fisubl
insl
out
outsb
aam
push
xor
pop
and
lods
test
mov
icebp
push
data16
es
adcl
shlb
mov
push
jo
orb
jnp
sti
jno
cmc
cltd
rol
test
push
xchg
dec
dec
idivb
inc
daa
inc
clc
lods
fsts
xor
aaa
cmp
jo
push
das
fwait
jp
pop
aas
int3
push
ss
jmp
or
jmp
adc
mov
xchg
iret
mov
pop
sub
lea
ret
sbbb
sahf
xchg
aam
push
sbb
and
add
aam
and
in
andl
mov
or
dec
jle
xor
xor
out
pusha
mov
mov
fsubr
test
rcr
or
adcl
fcompl
cmp
adc
xchg
ds
jecxz
ret
dec
dec
inc
mov
shrb
cli
and
mov
adc
mov
mov
sti
dec
es
ret
aam
pop
outsb
or
mulb
mov
mov
pop
repnz
dec
cmc
lock
add
xor
test
mov
cmc
inc
loop
adc
pop
mov
je
inc
outsb
pop
mulb
pop
jmp
movsl
and
dec
inc
cmp
xchg
xchg
xchg
inc
push
pop
push
out
outsb
mov
jnp
jl
jge
or
sahf
add
inc
pushf
mov
imul
in
xor
inc
iret
shll
int3
ds
cmp
stc
pop
push
cs
fsubr
xchg
lods
pushf
inc
call
dec
mov
fs
fprem1
add
xor
pop
cmp
mov
sbb
push
dec
int
sti
and
sti
add
cld
hlt
aam
repz
fcomi
xor
sub
fisubl
adc
xor
mov
xchg
mov
insl
popf
jae
popa
mov
pop
sahf
mov
in
sbb
xchg
in
ljmp
mov
inc
pop
cwtl
sub
jae
leave
lock
in
lcall
gs
imull
into
fldt
or
jle
inc
hlt
loopne
or
cmp
pushf
repnz
jb
push
hlt
jo
ja
push
jle
pop
shll
loope
pop
sub
sub
cltd
jp
rclb
shll
xor
mov
popa
or
fadds
jl
xchg
xor
and
js
jns
jmp
test
inc
sbb
frstor
rolb
in
inc
shll
imul
add
pop
jge
jno
adc
inc
or
xlat
cwtl
insl
hlt
mov
ret
dec
cmpsb
test
cmp
dec
stos
pop
mov
xor
and
sub
mov
aaa
jmp
arpl
sub
aaa
leave
xlat
pushf
arpl
gs
push
or
and
rcl
jmp
arpl
add
cmp
push
insl
cwtl
and
je
pop
lods
pusha
fwait
test
sbb
mov
lods
les
scas
or
sbb
mov
shl
or
or
out
jmp
mov
sarb
clc
jle
out
adc
lcall
ret
xchg
pop
push
je
pop
adc
cltd
shll
mov
and
pop
imul
popa
mov
enter
push
dec
inc
inc
cli
xorl
cmp
pop
div
jno
popa
fwait
lcall
sbb
add
test
mov
stos
inc
sub
mov
and
data16
push
jecxz
push
push
cmp
sbb
push
inc
mov
lahf
push
shrb
es
sbb
scas
jnp
inc
in
sti
push
gs
out
jo
dec
add
cmp
xchg
adc
adcl
icebp
and
outsb
inc
dec
sbb
jb
mov
mov
mov
lods
rorl
insb
mov
fcom
cwtl
hlt
outsb
nop
fadds
xchg
loope
stos
nop
xor
push
je
xchg
imul
in
fnstenv
ret
pop
sbb
jg
adc
mov
jp
icebp
imulb
rdtsc
dec
arpl
mov
mov
xchg
int
stc
inc
mov
xchg
mov
das
scas
add
mov
lods
mov
dec
loopne
enter
or
es
adc
add
ja
sub
cmpsb
mov
je
gs
js
jne
or
ljmp
xor
aam
roll
inc
add
ret
fidivrs
add
mov
adcl
fldl
imul
xor
pop
mov
scas
mov
out
in
xor
je
push
add
mov
push
sbb
inc
orb
xchg
pop
popf
outsl
adc
in
pop
xor
lock
pop
adc
sarl
jmp
dec
scas
push
loop
icebp
sub
mov
lods
aad
inc
mov
pop
cmp
mov
imul
adc
test
loop
dec
dec
fsubrl
out
add
out
test
out
mov
mov
int3
rol
xchg
cmp
push
mov
ljmp
mov
jp
jle
jp
pop
mov
xchg
push
push
inc
push
leave
inc
cwtl
jno
xchg
mov
xchg
leave
push
mov
adc
adc
aam
int3
in
repz
dec
cli
jmp
lcall
jo
out
outsl
jle
lea
leave
mov
int3
int
mov
dec
jbe
adc
dec
cmp
mov
pop
shrl
loopne
and
int
repz
scas
cmp
dec
pop
jmp
push
xchg
lock
inc
push
jb
out
out
lods
nop
adc
stc
js
aad
sbb
push
xor
clc
shrb
leave
add
gs
js
aad
insl
push
sti
in
adc
daa
aaa
sub
insb
ss
pop
in
dec
repnz
xlat
mov
lea
hlt
mov
out
daa
push
and
pushf
xchg
add
sub
dec
or
jbe
lcall
jmp
inc
pop
adc
inc
rorb
stos
iret
mov
dec
mov
stc
ljmp
pushf
push
jns
gs
mov
cmp
iret
adc
ds
data16
test
push
fistpl
mov
es
cmpsb
pop
pushf
stos
push
xchg
pop
add
push
loop
aam
cmc
pop
mov
xorb
sbb
lret
mov
add
add
mov
dec
mov
je
add
mov
ja
mov
mov
cltd
xchg
pop
lahf
sbb
jnp
cmpsb
cmp
je
mov
lret
mov
mov
xlat
or
add
sub
cmpsb
adc
stos
jmp
pop
sbb
sbb
add
sbb
cmp
out
xchg
std
int3
xor
add
jnp
pop
pop
push
add
fldl
pop
lods
push
xor
mov
dec
mov
mov
inc
arpl
insl
inc
fadds
sbb
sbb
add
stos
sub
mov
lea
xchg
mov
mov
dec
pop
cmp
and
cmp
fwait
cmp
popf
js
cmp
pop
jp
dec
xor
popa
push
fidivrl
aaa
lea
sbb
ficomps
xchg
test
sbb
or
mov
xor
and
stc
jmp
imul
out
sub
inc
cwtl
ljmp
and
inc
pop
adc
repz
rclb
pop
lods
in
mov
inc
in
cmc
hlt
pop
xchg
call
arpl
add
mov
xchg
rcl
ror
xchg
pop
jno
pop
negl
loopne
lret
jl
iret
inc
push
loopne
inc
imul
enter
add
push
adc
lret
and
adc
imul
loop
lock
lods
lret
lret
pop
subb
movsb
push
lcall
lret
cmc
sub
cs
adc
loop
pop
sub
std
jl
sbb
scas
nop
cwtl
dec
or
icebp
rcl
jg
jmp
cld
fisubs
inc
stos
cld
mov
adc
neg
xor
jae
xlat
xchg
sbb
fmull
mov
mov
or
mov
faddp
lods
sahf
mov
lea
dec
loope
mov
dec
sahf
out
jg
loope
xor
cmpsl
mov
cmp
iret
mov
fnstenv
jg
sbb
push
stos
adc
mov
mov
ja
frstor
scas
inc
sub
jg
jbe
cmpsl
xor
jmp
xchg
fs
mov
les
outsl
mov
clc
cmp
xchg
cmp
ja
xor
pop
add
or
cmc
mov
push
aaa
or
pop
lock
in
add
into
iret
push
scas
pusha
das
in
add
lds
psubusw
mov
inc
or
outsl
shl
loope
or
cs
push
xor
clc
lahf
add
in
in
pop
fwait
rcrb
xlat
outsl
adc
sahf
shll
ja
aas
fdivrl
xor
lret
xchg
pop
je
pop
push
scas
pop
sbb
ss
and
pushf
push
shrb
and
out
add
mov
pop
sbb
cmp
loop
mov
cmpsb
inc
call
mov
dec
xor
pop
push
push
js
jnp,pn
adc
sbb
rorl
push
sbb
fs
push
sbb
mov
mov
loopne
and
das
and
xlat
jg
sbbb
gs
popf
mov
or
arpl
cmpsb
out
mov
push
int
add
outsb
popa
ss
repz
hlt
inc
icebp
xor
jo
pop
scas
jp
and
adc
mov
pushf
push
jp
in
call
or
int3
cmp
jg
das
and
xor
push
mov
push
mov
sbb
mov
mov
ss
sbb
mov
out
mov
pop
aam
mov
in
jnp
test
lods
jl
mov
movsl
and
add
aam
nop
shlb
ljmp
mov
or
mov
xor
inc
lds
das
sbb
push
mov
shlb
rcrb
xor
loopne
sti
mov
cmp
mov
mov
aam
jg
push
dec
sub
call
mov
fwait
pop
mov
negb
push
and
mov
inc
or
xchg
mov
in
xchg
push
and
push
mov
decb
mov
imul
mov
inc
frstor
xchg
fwait
cmpsl
push
nop
leave
or
pop
call
push
xor
pop
dec
mov
scas
sbb
sbb
lret
dec
jecxz
push
mov
adc
push
add
ds
scas
pop
cmp
mov
jbe
lahf
dec
push
ror
mov
dec
sbb
mov
pop
and
insb
icebp
mov
subl
fcoms
cmp
mul
mov
fnstsw
jmp
hlt
dec
sbb
mov
lods
lcall
xor
push
inc
fwait
add
je
div
adc
inc
inc
fadds
inc
pop
stos
jmp
outsb
push
jl
and
dec
in
sti
je
jmp
jl
xor
cmp
or
stos
imul
dec
jne
dec
and
cmp
pusha
out
xchg
xor
or
lcall
sbb
scas
stos
push
out
mov
cmc
lods
addr16
mov
pop
jo
add
xchg
shr
int
adc
aad
pop
pusha
std
popa
sbb
jnp
out
cltd
mov
inc
adc
arpl
fidivl
mov
xchg
ss
mov
aaa
or
dec
push
jmp
popa
push
rorb
out
subl
cmc
jg
or
lds
aaa
cmp
rorb
sbb
jp
faddp
push
xchg
popa
push
or
mov
sbb
inc
je
or
lcall
add
jb
pop
mov
xor
dec
scas
loopne
pop
xlat
or
outsb
sahf
inc
lret
cmp
xor
jp
xor
shll
outsb
xor
pushf
xchg
out
add
push
lret
sahf
cld
ljmp
xlat
mov
scas
les
xchg
jns
lcall
fs
xchg
jnp
xchg
arpl
clc
stos
js
fs
sbb
stos
mov
daa
cmp
and
sbb
shll
pop
cmp
mov
in
xor
aam
sub
xchg
ret
sub
add
dec
ret
add
adc
mov
inc
adc
cmp
into
rolb
or
cwtl
and
fucomp
add
test
push
adc
aas
outsl
jecxz
sub
mov
inc
scas
femms
xor
mov
daa
mov
mov
lcall
cmp
push
lcall
incb
jnp
stc
jnp
jbe
jecxz
pop
repnz
dec
pushf
mov
pop
arpl
scas
cmp
inc
or
pop
cwtl
cmpsb
mov
mov
lock
mov
lahf
lock
or
dec
cmpb
mov
sbb
call
sub
mov
cwtl
sub
lock
jne
js
ljmp
loop
push
mov
loope
push
imulb
arpl
push
nop
rorl
jo
jb
xor
fldenv
js
mov
push
arpl
cwtl
out
push
test
push
jbe
push
push
lds
fldpi
test
pushf
dec
out
data16
add
sub
xor
lcall
xchg
jp
sbb
xchg
outsb
rcrb
sub
mov
dec
sbb
outsl
add
adc
xor
add
push
popf
cmpsl
dec
scas
mov
lret
cmpl
cmp
fwait
jge
call
lcall
xchg
jle
rcl
fnstsw
xlat
xor
add
mov
sbb
outsl
mov
cmc
mov
jbe
jnp
popa
std
jnp
pop
nop
test
lea
push
add
clc
or
cmp
xor
xchg
popa
dec
inc
jb
imul
test
lea
dec
cwtl
sahf
xor
roll
push
jl
jmp
fldenv
mov
add
cmpsb
in
mov
add
fmull
test
push
imul
hlt
in
loopne
enter
cmpsl
lods
sub
popa
cwtl
pop
fs
xchg
cmpsb
lds
pushf
adc
dec
sbb
and
ds
add
sahf
loop
cmpsl
jae
outsl
adc
out
dec
movb
fs
cli
jae
int
mov
sub
add
add
mov
cmp
and
mov
pop
int
je
inc
cmc
inc
xor
mov
das
xchg
inc
repz
dec
mov
cmp
mov
mov
aas
fdivl
add
sbb
push
xchg
mov
jge
mov
in
std
mov
jp
cmp
movsl
imul
negb
stos
add
jecxz
lahf
hlt
dec
daa
call
adc
mov
mull
addr16
dec
pop
xor
sub
imul
ljmp
fbld
jl
insb
lret
sbb
aam
dec
fdivrp
or
call
std
push
imul
loopne
xor
test
call
mov
mov
or
jecxz
inc
xchg
mov
mov
nop
aad
ss
ret
sahf
dec
pop
xchg
cmp
fsubs
pop
pop
movsl
call
pop
and
cmpsb
lods
mov
and
adc
cltd
cmp
iret
sti
aam
sti
in
dec
pushf
iret
lods
pop
out
mov
mov
jl
or
inc
cmovs
aam
xor
bswap
adc
popf
or
inc
hlt
dec
jg
dec
outsl
mov
pop
rcll
push
shlb
idivl
fcmovu
insl
sar
add
xor
adc
clc
or
pusha
sub
sub
cmpsl
outsl
mov
popa
jle
xor
adc
ret
in
sub
inc
adc
add
inc
inc
test
fdivp
mov
push
inc
add
out
data16
clc
mov
call
leave
out
js
mov
clc
pop
orb
int
mov
in
jbe
xorl
ret
push
sti
mov
mov
mov
xchg
add
push
mov
mov
fsubs
cld
pop
cmp
shl
xlat
dec
sbb
xchg
fisttpll
lods
add
inc
lock
jb
insb
fucomi
sub
pop
pop
mov
bound
inc
not
pop
inc
das
es
loopne
jg
ret
jecxz
stos
inc
mov
cmp
mov
xor
es
inc
mov
dec
aas
sub
or
aaa
add
mov
cmp
fcompl
ljmp
adc
adc
add
cmp
in
and
out
fwait
orb
xchg
xchg
icebp
inc
fbstp
das
aas
mov
or
xchg
out
jmp
fnsetpm(287
lahf
sub
cltd
mov
cli
loope
xlat
and
pop
push
data16
mov
jns
dec
lods
shll
adc
mov
push
and
stos
mov
shlb
add
mov
loope
and
jne
lods
aam
stc
pop
adc
pop
repnz
out
and
lock
sub
jo
shlb
push
cmp
lret
or
dec
cmpsb
push
push
call
sbb
mov
sub
inc
or
in
aas
jmp
and
jg
sarb
cld
add
loop
xchg
jo
push
inc
xchg
mov
stc
sbb
cmp
fstl
push
popa
cs
pop
inc
dec
test
pop
jecxz
add
faddl
movsb
and
xchg
sbb
jecxz
fmuls
out
pushf
xchg
pop
or
mov
sub
outsb
sub
arpl
push
addb
mov
daa
movsb
nop
cmp
loopne
add
shrl
mov
outsb
dec
jae
mov
xchg
mov
loopne
ds
fs
dec
and
pop
sbb
dec
shlb
mov
out
mov
pop
mov
sub
inc
rcrb
rcl
mov
add
and
ficompl
cmp
test
adc
adc
pop
mov
int
sub
gs
mov
data16
icebp
loop
pop
call
fld
pop
jb
sub
mov
jo
sbb
and
rorl
rcrb
rolb
test
jecxz
or
adc
mov
mov
decl
loopne
dec
lds
out
mov
je
mov
loopne
add
sub
pop
jae
call
mov
cld
jno
mov
or
jmp
mov
mov
mov
xor
pop
push
loopne
cmc
xor
sub
mov
or
arpl
jecxz
add
sbb
mov
jp
pop
stos
jb
cmp
xchg
jnp
mov
loopne
mov
and
jecxz
testb
jnp
pop
lret
sbb
sbb
movsb
out
out
adc
outsb
mov
adc
adc
mov
popa
cmc
mov
jle
pop
mov
mov
xchg
mov
pop
rcrl
add
mov
adc
xor
int3
pop
mov
push
dec
aaa
pop
xchg
dec
loopne
pushf
pusha
cli
int3
dec
mov
xchg
adc
mov
sub
mov
sahf
or
sbb
aad
ds
pop
xchg
test
arpl
fcmovb
and
leave
mov
test
xor
sarb
mov
jno
daa
aas
iret
jmp
arpl
das
add
jle
aad
sub
enter
dec
fcoms
lret
std
test
xchg
cld
es
fstpt
pusha
pop
xor
push
jns
cltd
jp
push
cmp
or
xchg
or
sub
lods
jmp
mov
orb
pop
mov
notl
cltd
push
mov
testb
xor
aaa
sbb
push
pop
pop
lret
cld
dec
mov
pop
push
mov
sub
add
add
sbb
stos
and
push
lods
sub
push
pop
mov
scas
shr
cmp
ret
xor
pop
or
pop
sbb
stc
mov
adc
sahf
or
ja
jnp
jae
sub
fs
adcl
dec
pop
push
push
mov
cmp
mov
xor
mov
and
jne
cmp
and
stos
add
icebp
fdivrs
sahf
push
add
and
mov
repnz
push
orb
roll
jae
jb
test
vmwrite
pop
pop
jnp
cmc
fdivrp
enter
mov
push
pusha
lock
push
dec
cwtl
insl
aaa
fidivl
movsl
xchg
pop
adc
mov
lea
cs
mov
adc
mov
lahf
push
jnp
movsb
nop
or
jae
sbb
ret
in
lahf
xchg
les
fprem
xor
sarb
xchg
testb
addl
jae
cli
icebp
cmpsb
and
mov
outsb
inc
sub
cwtl
cmp
xchg
cmp
jge
pop
in
inc
add
xchg
icebp
icebp
dec
or
repz
cltd
dec
sub
fucomi
add
or
sub
add
loop
repnz
pop
mov
fld
jecxz
cmpsb
fadds
arpl
push
movsb
sbb
dec
rcrl
sbbl
daa
add
aaa
sbb
xor
pusha
dec
dec
sbb
or
test
mov
scas
fwait
pop
sti
push
shlb
cmpsl
fnstsw
pop
insb
in
scas
mov
add
sbb
lds
mov
xor
pop
jp
sti
mov
dec
stos
push
cld
shlb
fldt
sbb
dec
push
sub
les
sahf
test
push
jbe
enter
aad
in
fistl
pop
scas
fs
adc
test
mov
sahf
mov
idivl
xorb
fistl
pushf
xor
sub
daa
clc
push
test
pop
or
rclb
scas
fsubl
cmp
jne
and
jle
fbld
pusha
push
pop
imul
push
ret
mov
dec
pusha
push
es
aas
roll
mov
rolb
cmpsb
es
pusha
sub
jl
dec
adc
jne
je
leave
xchg
mov
mov
imul
fstp
pop
add
dec
mov
sbb
lcall
mov
addr16
sbb
push
mov
xchg
adc
sbb
mov
shll
enter
js
push
sbb
dec
inc
inc
in
cmc
jecxz
out
push
lods
jnp
gs
and
aam
mov
cmp
inc
js
dec
dec
mov
out
mov
sub
test
add
aas
aad
sbb
nop
push
cwtl
xor
lret
add
mov
jle
sbb
loopne
mov
clc
fwait
fs
xchg
xchg
out
pop
stc
fdivl
and
mov
int3
jns
mov
jge
mov
add
and
cltd
mov
idivb
pop
outsb
leave
arpl
jp
pop
mov
loopne
push
push
adc
push
in
es
sub
and
repz
dec
insl
mov
xor
lret
mov
repnz
sub
xchg
pop
pop
shrl
or
sbb
sbb
xlat
stos
sbb
mov
cltd
sub
xlat
std
cmp
sub
mov
loop
outsl
stos
movsl
lea
or
inc
sahf
aaa
xor
cmpl
mov
je
jo
add
sbb
dec
imul
pushf
pushf
outsb
xchg
out
aam
dec
lods
add
or
push
jnp
cltd
push
inc
out
sti
ja
out
lcall
fwait
jne
iret
pop
loop
stos
sbb
mov
daa
cltd
imull
push
mov
cltd
std
xchg
out
out
testb
or
jge
sub
adc
mov
mov
call
pushf
insb
push
js
add
loopne
add
cmpsl
xchg
loopne
add
addr16
dec
sahf
out
mov
jb
pop
dec
xchg
lods
out
movsl
test
mov
jmp
xchg
shl
fwait
mov
xorl
das
sti
dec
insl
and
jecxz
push
mov
cwtl
cmc
jecxz
in
pop
outsb
and
cmp
fstl
mov
inc
mov
sbbb
test
test
in
in
cmc
inc
fisttpll
out
mov
repz
scas
sbb
mov
xor
sbb
repz
jle
rcl
push
test
lods
adc
xor
xchg
enter
in
rcr
fs
fwait
adc
inc
mov
cmpsb
and
ja
lods
mov
fstps
mov
adc
cmp
sahf
mov
mov
add
and
mov
lret
and
scas
pop
jne
fldt
pop
pop
xor
adc
dec
shrb
in
xor
pop
iret
sarl
xor
adc
pop
sbb
loop
fsubrl
repnz
and
leave
decl
test
dec
push
insl
jle
fldlg2
fabs
jp
push
jb
pop
cli
push
xchg
je
jns
mov
push
stc
xor
or
mov
loop
loopne
cli
xor
or
loopne
out
js
cmp
lock
adc
jno
adc
cmpsb
rcrb
pop
sarb
add
mov
mov
sub
jge
mov
inc
push
add
xchg
jecxz
sub
cmc
notb
fdivr
pop
inc
add
push
add
sbb
dec
and
mov
pop
leave
into
add
mov
lods
lods
scas
cld
outsb
inc
sub
lds
repnz
pop
dec
inc
push
sub
pop
idiv
mulb
call
fucomi
js
je
daa
stos
xor
data16
loop
push
mov
mov
ret
add
push
dec
mov
jo
mov
mov
jp
adc
daa
sahf
hlt
jnp
and
lea
inc
loopne
rcl
or
repnz
cmp
in
push
mov
out
out
mov
sub
leave
in
fcmove
push
mov
dec
sarb
or
int
mov
adc
dec
adc
inc
cld
sbb
pop
sti
push
mov
pop
mov
movsb
ret
adc
xchg
jb
adc
jmp
fmull
xor
movsb
js
jecxz
dec
shl
std
and
mov
mov
mov
cmp
inc
and
popf
push
mov
push
int
or
fdivrl
rolb
loopne
and
mov
xor
loopne
lcall
or
stc
push
sbb
adc
xor
sbb
lcall
outsl
scas
jae
maxps
push
cmp
push
cltd
js
test
adc
fimull
jge
orb
jno
or
xchg
mov
hlt
pop
inc
out
pusha
xor
mov
push
inc
in
jnp
movq
in
sbb
cli
cmp
adcb
test
cmp
sbb
movq
addr16
xchg
add
sbb
mov
xchg
fidivrl
mov
push
push
in
mov
popa
fiadds
divb
mov
popf
jmp
popa
inc
test
lds
xchg
add
loopne
inc
or
mov
inc
imull
imul
dec
testb
ds
stc
lds
or
or
pushf
ret
insb
sub
int
push
cmpsb
dec
mov
ret
adc
cmpsb
cltd
popa
insb
stos
pmaddwd
xchg
mov
mov
test
inc
jo
jg
test
sbb
mov
out
cwtl
jne
adc
and
daa
cmpb
or
sti
dec
std
stos
jg
mov
fwait
subl
in
hlt
sbb
or
mov
jne
sbb
inc
adc
aam
cmc
lret
mov
jmp
arpl
or
das
sarb
mov
pop
negb
adc
and
sbb
mov
lret
orb
mov
imul
loope
or
insb
pop
push
push
out
sarl
mov
outsb
fcoml
insl
push
add
pop
rolb
pop
push
ret
cmp
xor
sbb
dec
sbb
add
addl
mov
jmp
inc
push
jle
mov
mov
mov
or
dec
sub
dec
sub
xor
es
call
xchg
test
pop
hlt
cmp
call
pop
sbb
lods
loope
aaa
cmc
mov
insl
fwait
sub
or
cmp
mov
xchg
mov
mov
iret
xchg
push
mov
inc
enter
pop
push
leave
sti
add
lods
sarb
xchg
jnp
adc
mov
idivl
dec
pop
dec
jp
iret
inc
lods
cs
mov
sbb
xchg
ror
flds
fcomip
push
jne
lds
add
xor
sbb
pop
cmc
fisubs
jns
call
outsb
outsb
pop
mulb
pop
mov
xchg
int3
jl
xor
inc
adc
xchg
jmp
imul
cmp
js
mov
outsb
jle
mov
jl
pop
mov
dec
xor
pop
pop
mov
jecxz
xchg
add
push
in
inc
cmpsl
xor
sbb
scas
or
mov
adc
rclb
pop
add
in
pop
pusha
or
shll
shll
mov
and
jno
jne
mov
cli
xchg
mov
mov
scas
push
mov
xchg
daa
aad
mov
loop
dec
jp
notl
or
fisubrs
xchg
fisttpll
pop
outsl
sbb
lods
test
loop
aas
xor
das
stos
xchg
jb
out
ds
into
push
or
mov
ret
pusha
inc
dec
in
jg
push
sahf
pmaddwd
jp
push
in
pop
int3
outsl
adc
inc
cli
push
les
xchg
call
loope
or
or
xchg
cmpsl
mov
lcall
mulb
or
clc
es
dec
addl
lods
int
adc
push
push
testl
lods
sbb
pusha
repz
lahf
jge
in
and
add
sbb
fcmovnb
sub
ret
xchg
lret
das
cmp
pop
jb
adc
push
fsubrs
mov
stc
dec
lcall
loopne
and
mov
jp
repz
daa
sbb
lods
mov
lods
ret
sub
fmuls
std
cwtl
pushf
mov
jne
mov
cmp
inc
mov
pop
mov
or
clc
ljmp
addr16
mov
ljmp
out
jns
dec
adcb
mov
sub
cmc
sub
xorb
int3
lcall
jo
dec
mov
cmp
cmpsl
popf
daa
idiv
mull
test
mov
mov
mov
test
inc
frstor
scas
hlt
enter
shl
test
jb
mov
pop
js
cmp
and
mov
rorl
or
daa
cmpsb
aad
popa
loope
push
rcll
mov
insb
xor
mov
xchg
xor
movsb
pop
movsl
push
test
mov
xor
pop
loop
or
jno
mov
adc
mov
rcll
leave
mov
ds
icebp
mov
cmpsb
mov
jo
ret
pop
pop
xchg
fwait
mov
dec
cmp
das
incl
fbld
les
insl
bound
inc
add
fildl
cmp
sbb
dec
and
jns
xor
fwait
imul
stc
pop
jge
jns
sub
mov
mov
fstpt
insb
or
imul
push
in
stc
mov
cmpb
bsr
ja
sbb
nop
inc
repz
sbb
loop
outsl
cwtl
call
xchg
adc
flds
pop
insl
es
sbbl
xor
adc
mov
push
dec
insl
scas
xor
mov
aam
push
jno
aam
jp
test
jle
cmp
xor
adc
aad
fisubs
adc
mov
addb
ror
hlt
outsl
cmpsb
pop
cmp
pop
add
mov
cmp
add
or
fs
cmp
addr16
xchg
pop
ljmp
shrb
xorb
sbb
pop
test
scas
push
sbb
lock
out
das
notl
push
dec
nop
js
pusha
push
push
xchg
scas
cli
loopne
add
xor
xchg
inc
cltd
jmp
cwtl
cwtl
xchg
push
jne
xor
xchg
lahf
pop
repnz
testl
inc
insb
cmp
fbld
repnz
lods
int3
ret
xlat
loop
push
push
mov
mov
subl
fisttpl
mov
and
mov
push
fs
push
sbb
aam
loopne
cmp
lcall
icebp
lcall
or
ss
pop
scas
xchg
push
sbb
and
ss
rorl
cmp
inc
inc
insl
aad
ds
addl
outsb
push
scas
dec
es
push
mov
xchg
lea
enter
mov
lea
adc
sbb
sub
jecxz
mov
rcrb
fwait
xchg
dec
push
sahf
fwait
jo
aam
sub
addr16
fwait
xor
mov
int3
movl
aaa
aas
rcpps
xchg
loop
jp
stc
ret
incl
sarb
scas
stos
hlt
mov
loopne
stc
push
mov
pop
loopne
inc
jb
sub
es
arpl
pop
push
mov
cmpsb
or
popa
cmp
call
rcrb
outsb
or
sbb
pusha
shlb
fwait
stc
dec
inc
cwtl
sbb
call
js
insb
das
adc
xor
loopne
ffreep
and
and
cmp
add
in
sbb
cltd
lahf
push
cmp
lahf
aam
sbb
jb
mov
xor
cmc
enter
xor
sub
nop
gs
popa
bound
fs
add
stos
push
fstp
jg
test
and
cli
test
popa
adc
ss
mov
int
xchg
xchg
jle
and
int
jo
add
or
test
scas
insb
test
aam
sbb
inc
and
out
into
mov
clc
jnp
xlat
jnp
mov
jae
insb
push
inc
sbb
push
fsubl
dec
xchg
iret
add
dec
sub
mov
xchg
mov
aad
lods
clc
fidivl
and
jae
stos
cltd
lock
push
popf
pop
divb
loop
sbb
dec
imul
or
mov
lods
add
mov
out
add
mov
mov
jns
add
rclb
jle
mov
repz
test
das
mov
popf
sgdtl
test
jge
das
inc
sub
sub
pop
pop
or
mov
push
mov
jge
or
imull
iret
insb
jbe
int3
icebp
pusha
dec
loopne
cld
hlt
popa
sub
outsb
std
and
test
sbb
or
jecxz
xor
hlt
and
xor
das
subb
scas
lock
adc
push
jno
or
addl
cmp
jo
ficomps
jbe
sti
pop
idiv
jo
test
jmp
iret
dec
pop
pop
mov
cmpb
push
adc
dec
mov
sahf
push
sbb
incl
and
push
xor
mov
pop
sbb
fildll
inc
lret
aad
xor
mov
inc
cltd
sbb
cmp
bsr
scas
je
or
jecxz
out
add
dec
xor
xchg
test
sub
pop
push
mov
loop
sub
sahf
sbb
xor
les
jbe
or
and
roll
aam
and
jbe
xorb
jnp
mov
outsl
hlt
push
push
idivl
cmp
fwait
stos
push
pop
es
daa
sub
mov
daa
out
lods
mov
and
jp
adc
xor
sahf
popl
xor
mov
test
lcall
cmp
pop
bound
cmp
mov
push
test
mov
push
dec
push
pushf
xlat
aad
xchg
sub
adc
jmp
in
loope
scas
push
xchg
mov
leave
outsb
outsl
mov
mov
mov
repz
inc
or
scas
mov
call
cmpl
pop
pop
ret
ret
icebp
pop
xor
mov
pop
mov
add
pop
push
enter
jecxz
jge
pop
jl
js
mov
jae
push
out
pushf
das
les
cmpsb
arpl
mov
pop
popa
inc
push
roll
dec
lahf
push
sbb
sub
mov
mov
cmp
cs
cmpsl
mov
xor
push
jge
jge
sub
hlt
push
lock
xchg
xchg
iret
movsb
push
icebp
ss
inc
inc
sti
jns
vmread
nop
ret
sbb
add
xchg
cltd
xor
sbb
mov
sbb
pop
pop
dec
cli
add
sti
xchg
add
mov
outsl
mov
xchg
fwait
jno
inc
cmp
aad
mov
xchg
mov
in
repnz
test
xor
or
add
add
div
imull
mov
pusha
call
dec
pop
fisttpl
icebp
stc
int
jb
xor
ss
test
mov
and
ljmp
pusha
add
cmp
xchg
stc
lcall
add
xor
mov
xchg
mov
xlat
mov
inc
inc
dec
cmpsl
mov
mov
lret
xor
fwait
mov
lods
dec
mov
imul
in
adc
add
push
les
push
jmp
frstor
mov
or
gs
mov
hlt
iret
add
push
dec
sbb
mov
pop
add
enter
sub
fcomps
imul
aas
enter
dec
cmpsb
dec
movsl
and
in
push
mov
pop
jp
ss
movsl
repz
jb
xchg
add
test
dec
int3
addb
mov
test
jo
es
mov
cs
lds
cmp
outsl
jns
icebp
js
sub
add
mov
bound
cmp
aas
mov
xor
lods
cld
xchg
mov
push
push
xor
jecxz
pusha
popf
mov
imul
test
repnz
xchg
or
inc
imul
sbb
dec
dec
xchg
int
dec
push
adc
mov
lret
sti
out
pop
sub
sub
xchg
out
xchg
xlat
xlat
mov
int3
popf
xor
imul
mov
mov
mov
cs
mov
je
pop
inc
lret
movsl
add
out
push
mov
sbb
xchg
aad
lea
lret
test
jmp
out
cmp
leave
push
lea
scas
int3
push
add
ret
popf
movsb
cmp
sub
sbb
mov
testl
and
stos
adc
outsb
jp
pop
xchg
lods
sti
xor
outsl
aaa
out
xor
andl
cmc
add
int
inc
mov
inc
enter
jp
push
jge
cmp
sub
bnd
xor
arpl
sub
mov
push
nop
insl
fcompl
xchg
andl
fcomi
cmp
xor
mov
outsb
mov
cmp
insl
jno
arpl
pop
xchg
lea
and
mov
mov
sbb
repz
mov
push
push
in
push
cmpsl
mov
and
dec
xor
out
ja
loop
movsl
jl
sbb
andb
out
cmp
dec
fmulp
pop
int3
jle
repnz
push
into
add
call
int3
dec
jo
pop
sti
xchg
js
cwtl
mov
jne
popf
lret
js
mov
lock
flds
out
jns
movsb
aaa
fidivrl
xor
push
push
inc
gs
or
or
dec
cmp
inc
mov
mov
pop
xchg
fsubr
adcl
lods
jl
pop
xor
dec
mov
pop
mov
orl
fwait
leave
popa
notl
cld
xchg
inc
movsl
xchg
push
or
or
shll
aad
dec
test
test
jl
pop
int3
clc
lock
and
test
pop
push
sub
pop
es
push
xchg
pop
mov
inc
out
and
lahf
shr
push
xchg
ja
cmpsb
insb
sbb
dec
sahf
out
cmc
pop
dec
dec
or
sarb
fwait
push
lods
mov
cmc
sarb
sbb
movsl
push
jns
dec
clc
push
popf
mov
mov
out
push
mov
into
pop
rcrb
mov
out
movb
pop
xchg
jnp
test
push
push
mov
push
call
pop
jle
mov
sbb
mov
inc
repz
mov
xor
add
push
sbb
mov
fnsave
push
outsw
in
outsb
sub
addl
jbe
stos
test
dec
iret
stos
in
adc
cmp
out
mov
fstps
pusha
cld
idivb
mov
scas
faddp
icebp
lret
jge
adc
shl
pop
and
sbb
mov
aaa
aaa
dec
orb
lahf
cmc
and
lahf
jnp
hlt
push
repz
adc
cmp
xchg
cmp
mov
out
les
dec
xlat
icebp
add
decl
inc
scas
push
out
cmpsl
fisttps
adc
add
push
mov
inc
mov
lret
mov
les
adc
insl
mov
sbb
filds
movsb
sub
movsb
imull
pop
or
int
mov
ss
repz
push
ds
insl
dec
aaa
enter
iret
push
testl
aam
loope
lds
push
shll
jecxz
sarl
sub
cmp
btc
sub
push
fsts
scas
imul
jo
std
dec
or
std
aad
sub
cs
lods
lods
xor
cmpsb
bound
filds
jne
push
hlt
pushf
fldenv
ljmp
mov
std
sub
and
nop
stc
fcompl
out
lcall
int3
je
mov
dec
adc
adc
leave
jno
xchg
int3
xchg
mov
mov
shlb
jmp
cmp
mov
and
lret
adc
leave
lret
jl
test
inc
test
mov
test
test
and
aas
mov
xchg
pop
xchg
xor
pop
out
out
mov
pushf
inc
xchg
push
lahf
std
mov
fmull
dec
jno
test
jmp
arpl
push
mov
aas
scas
inc
lea
jecxz
pop
cmpsl
pushf
and
sbb
ss
dec
out
lods
jne
mov
out
leave
or
dec
push
and
test
filds
addr16
cmp
xchg
adcb
mov
repnz
repz
stos
pop
stc
sub
adc
repnz
lcall
xor
movsb
xor
lret
dec
lret
push
push
mov
data16
push
inc
push
mulb
xor
lcall
mov
pop
dec
hlt
mov
je
xor
mov
xchg
add
int
mov
or
lcall
add
jns
mov
sbb
fisttpll
iret
xor
mov
arpl
cld
dec
aad
subb
lret
ret
sub
or
jmp
push
sbb
ss
mov
jmp
mov
inc
and
sbb
mov
and
les
stc
xor
push
repz
scas
aad
mov
repnz
mov
add
addr16
push
push
mov
in
in
pop
dec
push
aad
dec
add
mov
mov
popf
pop
clc
mov
push
cwtl
cmpsl
bound
cld
pop
push
std
std
nop
mov
popa
add
rorb
popa
sbb
or
mov
push
stos
andb
and
pop
fucom
push
jb
add
jno
pop
mov
insl
jl
fs
int3
in
mov
js
sbb
daa
movsb
rorl
inc
and
jb
loope
add
and
jbe
pop
js
xor
jbe
shlb
xor
push
mov
dec
clc
xlat
ljmp
jne
inc
shlb
lret
inc
mov
push
sub
adc
push
jl
mov
jle
call
sbb
xor
jae
lds
jl
out
loope
fs
dec
les
div
pop
rcrl
pop
cli
pusha
cld
mov
and
std
cmpb
fcompl
cmp
dec
in
and
in
push
call
pop
ja
hlt
lcall
aad
shll
jae
sub
iret
data16
int
push
xor
push
es
movsl
iret
push
out
xor
mov
scas
test
and
cs
ds
add
mov
mov
jno
rcll
into
mov
xchg
and
ret
cmpb
adc
mov
mov
mov
and
jns
mov
fidivrs
sti
add
mov
cmp
lea
pop
outsl
fs
loop
scas
outsb
jne
mov
pop
mov
or
push
dec
mov
cltd
sub
fnsave
and
and
pop
push
in
xchg
icebp
adcb
inc
or
movl
push
pop
stos
mov
push
add
test
ret
xchg
fsubp
daa
pop
xchg
dec
add
and
jmp
faddp
jae
cmp
int3
adc
in
push
or
push
gs
mov
pop
ds
out
imull
xchg
imul
mov
and
jmp
fadd
mov
iret
shrb
ror
xor
insb
mov
daa
dec
add
insb
cwtl
xchg
loopne
add
imul
loope
add
mov
scas
push
in
cs
mov
push
or
inc
daa
lcall
mov
add
mov
fists
sti
ja
test
or
xchg
jmp
cmp
push
xchg
adc
mov
mov
dec
dec
xor
adc
fsin
adc
push
cmp
into
fcom
or
cs
xchg
daa
sarb
or
outsl
add
scas
mov
scas
xor
xchg
in
imul
sub
adc
not
or
jb
inc
testb
xor
fsubrs
iret
jecxz
adc
mov
cs
cs
sbb
mov
mov
pop
iret
divl
rcrl
mov
inc
xchg
mov
xor
mov
sbb
inc
ljmp
add
pop
mov
iret
repz
cmp
sahf
sub
decl
movsl
jmp
mov
sbbl
fstpt
and
shrl
mov
xlat
add
xchg
inc
loope
sub
add
lcall
movsb
jle
mov
loope
sub
int3
jl
mov
mov
add
cmp
inc
lcall
mov
out
pop
add
std
test
imul
or
jl
insl
adc
or
arpl
or
outsb
adc
stos
jg
js
mov
jne
aad
aam
ljmp
clc
or
lcall
negl
cli
cmp
adc
sub
lret
push
mov
fdivl
rolb
cmp
ret
push
xchg
jb
mov
es
loop
cwtl
lods
adc
ja
arpl
sub
and
xchg
lods
std
push
and
pop
mov
shlb
adc
cmp
adc
cld
or
roll
jbe
inc
adcl
outsl
mov
test
les
pop
xchg
cltd
and
dec
es
xchg
sahf
push
mov
cltd
test
sbb
arpl
mov
xor
clc
sbb
adc
outsb
push
cmp
js
xor
test
mov
out
jp
and
and
mov
pop
out
ret
push
test
add
push
lds
mov
inc
pop
ficomps
jb,pn
ds
jbe
mull
imul
or
or
out
popf
mov
nop
loopne
mov
cmp
jmp
mov
inc
int3
or
add
inc
mov
dec
mov
lea
push
adc
mov
daa
pop
mov
je
dec
mov
ss
push
cltd
mov
mov
lods
and
or
sub
jae
push
adc
stos
dec
mov
fistpl
outsl
cmc
call
dec
inc
jl
cltd
and
jle
icebp
sahf
xchg
lock
out
rcl
add
cmpsb
cmpsb
out
lock
movsl
inc
aaa
add
inc
sbb
je
mov
sbb
push
cwtl
xor
stc
xor
jl
ss
and
sub
sub
dec
js
sbb
cli
mov
ficoms
mov
cmpsb
mov
dec
icebp
xrstors
test
lahf
outsb
repz
jmp
mov
sbb
inc
sbb
pop
data16
sbb
lods
and
xchg
out
popa
xor
xor
and
or
test
push
ret
mov
mov
sti
and
lds
inc
jle
jmp
inc
push
mov
addb
mov
mov
mov
push
mov
out
mov
cmp
repnz
addr16
int3
mov
pop
xor
out
push
pop
sahf
stc
sbb
nop
sbb
out
mulb
adc
lret
retw
lcall
or
popa
mov
fsubs
cmp
xchg
nop
lret
into
lods
jns
mov
frstor
test
push
daa
pop
into
mov
adc
pop
lcall
cmp
movsb
add
lret
fcos
pop
mov
xor
out
jno
cmp
jmp
xor
sbb
test
les
push
bndldx
aaa
cmp
fstpl
sbb
ret
stos
in
and
pusha
cwtl
fbstp
add
clc
dec
rcrb
xchg
ret
adc
inc
jp
cs
jns
jecxz
mov
sub
and
ss
pop
lahf
cwtl
dec
insb
in
push
ret
subl
int3
mov
adc
xchg
movsb
xor
adc
xor
push
lods
mov
adc
cmpsl
pop
sub
mov
add
or
cmc
fsubrs
scas
sub
popa
add
icebp
dec
fstpt
shll
pop
sahf
sbb
scas
xor
cli
jl
mov
test
xchg
and
xchg
out
lods
mov
mulb
pop
leave
popf
leave
xchg
mov
or
inc
scas
ljmp
inc
aam
push
pop
loopne
nop
push
xor
lea
loopne
dec
pop
jp
sub
mov
xor
add
loopne
movsb
div
repz
pop
std
jecxz
rcll
sti
inc
stos
mov
push
sub
and
int3
add
sti
pop
pop
andb
push
cs
jbe
and
insb
push
xchg
repnz
aaa
fstpl
pop
push
xor
xchg
mov
xsaveopt
rorl
stos
jl
sahf
jg
testl
je
push
cmp
cmp
jl
mov
mov
enter
adc
imulb
repnz
adc
outsl
fildl
add
in
movsl
imul
popa
mov
or
inc
dec
in
repz
pop
cmp
sub
fs
test
add
add
xchg
std
aam
mov
push
jae
mov
push
cmp
loope
jge
rcrl
outsb
loop
stc
sub
cmp
sbb
movsl
fs
xor
dec
mov
mov
cmp
stos
add
cmc
mov
or
xchg
insb
stos
jb
add
jg
orb
imul
mov
addl
mov
and
imul
jmp
inc
cmc
lods
scas
test
pop
mov
cwtl
mov
push
cmp
cmpsb
sbb
sub
dec
lods
mov
cltd
xchg
xchg
stos
sti
clc
pusha
mov
inc
std
out
push
and
mov
and
in
or
mov
hlt
sub
test
cmp
push
cld
mov
xorb
pop
subb
and
mov
push
lea
fadds
sbb
or
pop
out
pop
into
mov
repnz
xchg
aam
outsl
jae
jmp
data16
or
popa
xor
push
daa
jmp
lock
ljmp
inc
mov
xchg
jg
addb
lods
push
sbb
outsl
incb
xor
andl
mov
inc
mov
aam
pop
fsts
and
mov
pushf
or
adc
test
or
mov
pushf
movsl
ret
stc
jecxz
jae
pop
push
testb
adc
cmp
jl
mov
or
aas
jne
daa
inc
imul
icebp
adc
add
popa
xor
mov
inc
incb
outsb
iret
popf
aad
xor
cmp
sarl
push
xor
in
or
popa
mov
aad
add
stc
pop
test
mov
push
mov
pop
mov
jbe
mov
jge
xor
rol
push
adc
xchg
inc
test
pop
mov
and
dec
iret
jge
inc
pop
jo
push
push
cmp
clc
sar
je
cmpsb
mov
test
adc
pop
xchg
jl
jno
push
add
mov
aad
addl
jo
adc
jbe
mov
clc
and
cld
and
inc
ds
fstps
push
lcall
std
test
sbbb
sub
fistps
sbb
loope
add
inc
mov
jg
fadd
mov
mov
fdivs
movsl
mov
loop
dec
or
pop
sbb
outsl
dec
fdivr
shl
push
jl
mov
pop
cmpsl
rcrb
mov
dec
or
mov
cwtl
lock
or
lahf
xchg
cld
movsl
repnz
lea
mov
iret
adc
adc
nop
ds
scas
xchg
jmp
pop
add
inc
mov
jbe
dec
cmp
out
push
test
mov
cmp
push
dec
mov
pop
jns
mov
xchg
cmpsb
push
in
sub
or
scas
lds
inc
cmpsl
out
jb
in
dec
jb
xor
sti
movsb
loope
nop
sbb
je
and
and
sbb
adc
imul
adc
pop
and
push
jne
pop
cmp
push
mov
dec
aas
pop
xor
aad
addr16
pop
adcb
or
inc
scas
popf
jl
pop
imul
jecxz
in
push
sarb
idiv
repnz
cmp
jl
mov
in
out
lret
jb
sbb
sbb
lret
mov
lods
out
sub
es
je
mov
es
int3
loopne
sub
xor
sub
pop
jae
int
adc
fldenv
mov
jno
pop
xor
mov
push
mov
movsb
sbb
je
das
mov
sarl
lcall
jle
in
sub
loop
xchg
test
jmp
push
mov
xchg
hlt
out
lods
lret
sbb
push
sbb
incl
das
jae
fldlg2
xlat
add
aas
mov
cwtl
fcoml
out
adc
mov
jmp
inc
and
pushf
cmp
in
insb
mov
dec
jg
arpl
pop
aam
cld
push
jbe
xchg
out
or
or
xor
sub
mov
in
pop
stc
inc
jge
lret
das
adc
pusha
mov
jg
sbb
xor
push
mov
jns
sbb
dec
mov
outsb
fldenv
push
das
test
fistpll
gs
neg
cmp
mov
xchg
jns
dec
lcall
xchg
sti
push
dec
push
xor
in
js
stos
pop
xor
dec
pop
adcl
sub
mov
iret
sbb
test
rcrb
cli
pop
ss
loop
xor
jb
sub
and
imul
mov
push
inc
fdivrl
nop
movsb
and
cltd
mov
cmp
mov
pop
adc
gs
addb
es
mov
xor
jb
sarl
dec
nop
adc
adc
push
out
stc
lcall
cmp
mov
pop
mov
jle
pop
sub
pop
lds
sahf
mov
bswap
sbb
xor
sbb
jo
in
sub
mov
ret
or
icebp
sbb
mov
dec
add
test
add
push
ss
push
pop
arpl
xchg
cmp
test
lock
mov
and
aad
addr16
fldpi
cwtl
fdivrp
stc
insl
mov
ss
xchg
stc
fmuls
push
cltd
stos
outsb
cmp
les
add
pushf
mov
dec
mov
or
xchg
fistpl
loopne
ret
pop
jmp
push
jb
orl
xlat
sti
xchg
data16
jg
xor
xchg
cmpsl
inc
fstpl
jp
out
inc
jno
pushf
mov
sbb
cmp
sub
sti
sub
test
mov
stos
pop
mov
ficomps
dec
lds
ja
fisttpll
movsl
cmc
and
mov
mov
pop
mov
xor
or
xchg
cltd
jg
fnsave
ds
or
xor
sub
sbb
pop
adc
xor
arpl
push
cmpb
push
shlb
pop
in
cmpsb
inc
mov
pusha
subl
push
mov
xchg
fdiv
cmpsb
jnp
sub
lret
lods
les
imul
shll
pop
stos
aas
int
cld
sub
shl
mov
jmp
or
nop
loopne
sub
dec
xchg
or
fisttps
rol
or
shl
xchg
mov
cltd
in
cltd
adc
xchg
sub
cmp
lods
out
and
icebp
mov
cwtl
or
jle
out
xchg
loopne
cmp
pusha
test
sbbb
or
daa
mov
push
lcall
outsb
pop
jl
mov
adc
or
and
lret
das
ds
or
push
xor
lods
push
dec
adc
and
mov
cmp
inc
pop
es
andb
int3
data16
jle
in
out
or
int3
add
test
in
fwait
or
ds
aam
push
jmp
xchg
mov
popa
adc
bound
rorl
jp
nop
push
jbe
int
sub
add
pusha
and
stos
xchg
cmp
sub
scas
rolb
and
shr
cmc
cli
dec
push
adc
hlt
add
sub
in
das
ljmp
stos
dec
inc
cs
push
xor
mov
mov
dec
rcrb
jb
mov
push
scas
add
repnz
xor
stc
jle
js
xor
jp
mov
in
out
push
push
jno
mov
ds
pop
push
pushf
dec
addl
sahf
mov
movsb
int3
or
inc
sub
rcrl
lahf
cs
pop
ljmp
in
repnz
out
fwait
iret
push
dec
add
subl
cmp
or
mov
int3
push
ficompl
fildll
or
add
or
pusha
add
ja
jno,pn
ss
mov
jge
loopne
cmpsl
cmp
inc
enter
in
xchg
outsl
mov
mov
dec
jl
outsl
pop
imul
push
sbb
jle
push
mov
js
cmp
sbb
nop
mov
fsubrp
stos
xchg
dec
or
dec
xchg
jmp
hlt
jae
sub
or
mov
dec
sbb
ds
out
jnp
mov
xorps
sbb
pushf
push
jle
inc
daa
int
nop
dec
clc
push
gs
dec
cli
iret
mov
in
mov
xor
shr
lret
jne
enter
enter
xor
dec
mov
xor
aaa
jg
addr16
xchg
into
mov
iret
lock
fsqrt
jne
negl
cmp
xorb
roll
and
jmp
int3
mov
jp
ret
scas
lods
sbb
js
xor
mov
xchg
jno
outsl
inc
inc
outsb
mov
xlat
pushf
mov
adc
dec
imul
mov
lods
xor
mov
test
pop
repnz
or
ss
jno
fimull
in
sahf
mov
idivb
add
loope
xor
lods
out
inc
into
mov
adc
out
ret
xor
mov
fcoms
adc
adc
call
xchg
pushf
xchg
loopne
jns
xchg
sbb
push
add
cmpsb
dec
sar
fldenv
mov
ss
ret
idiv
ret
pop
shl
mov
or
jle
sbb
mov
push
push
mov
push
add
pcmpeqb
sar
xchg
xchg
sbb
mov
xchg
cmp
iret
jnp
jae
roll
icebp
xor
in
mov
and
push
orl
inc
mov
outsb
in
sub
add
inc
pop
xor
iret
je
out
sub
push
and
sbb
loope
mov
xchg
jno
push
mov
imul
jns
mov
mov
adc
inc
movsb
ret
ret
lret
xor
and
cmp
xchg
lock
shlb
test
mov
lods
fs
add
or
mov
mov
inc
mov
inc
xlat
fs
das
or
sbb
jge
mov
dec
sbb
mov
jns
jmp
into
dec
in
icebp
pusha
addr16
sbb
popl
inc
push
jg
xchg
nop
imul
and
jo
fadds
sbb
or
mov
movsb
jno
mov
loop
mov
adc
loope
jns
fistpll
insb
jns
insb
xor
cld
xchg
scas
pop
fsts
jns
inc
daa
jnp
repz
movmskps
mov
cmp
cli
pop
out
in
cs
push
adc
add
aad
inc
fdivl
ss
dec
js
xor
and
xlat
sub
adc
sbb
mov
out
and
scas
jp
cltd
outsb
scas
popa
jp
fnstenv
adc
cmpsb
add
mov
cli
outsl
pop
int3
clc
and
cmpsl
ds
pop
in
icebp
dec
out
aaa
jnp
inc
pop
test
adcb
mov
xor
push
mov
lcall
fisubrs
mov
ret
push
cs
pop
xchg
mov
xor
mov
mov
push
jo
shll
sarl
shlb
cmp
push
mov
add
dec
push
rcr
out
xlat
mov
dec
jp
push
jl
pop
ret
jge
scas
clc
test
sbb
icebp
push
pop
mov
test
lock
xchg
sub
xor
mov
mov
shll
int
xchg
ja
inc
dec
sub
jo
das
mov
jp
mov
fwait
loopne
add
or
dec
lea
dec
loop
fcmovne
loopne
add
pushf
fld
push
icebp
mov
fnstenv
push
or
popa
sub
inc
dec
pop
arpl
push
and
push
jb
movsl
lea
sbb
stc
jge
adc
inc
sbb
outsb
in
push
stos
test
int
adcl
xor
mov
mov
mov
mov
adc
scas
xchg
daa
mov
push
push
push
push
pushf
adc
mov
mov
xor
sub
push
xorl
xlat
mov
or
xor
or
and
negl
and
push
mov
sbb
pop
outsl
inc
or
mov
inc
cmc
aas
sbb
lds
xchg
mov
cmp
mov
out
xchg
insb
xchg
mov
pop
cltd
test
fmull
dec
fisttps
sar
push
std
dec
scas
test
inc
cmp
or
insl
repz
mov
shlb
icebp
gs
jne
test
cs
jae
inc
rclb
and
ret
dec
std
pop
xchg
mov
jno
rorl
or
jnp
jg
scas
mov
jmp
mov
test
mov
inc
dec
dec
xlat
mov
enter
adc
cli
movl
dec
mov
jne
insl
mov
cmpsb
inc
into
cmp
cld
movsb
loopne
sub
xchg
push
loope
arpl
jns
jge
aaa
stos
mov
inc
std
mov
dec
inc
es
lock
add
inc
and
pushf
mov
and
push
jb
pusha
dec
fdivrl
hlt
pop
jae
mov
subb
cmp
pop
shrb
decb
repnz
push
ficompl
int3
je
imul
sbb
dec
nop
push
push
loope
js
imul
xor
add
ja
imul
clc
xchg
adc
mov
pusha
sub
jmp
add
mov
add
sub
flds
sbb
pop
nop
mov
aam
lahf
sub
push
repnz
mov
sbb
jns
xchg
aad
cltd
push
adc
pop
mov
popa
mov
lcall
xchg
push
frstor
push
mov
jecxz
aam
mov
add
mov
mov
loopne
out
in
cmpsl
loopne
pop
xor
iret
sub
orb
xchg
mov
adc
jo
mov
sbb
cwtl
sbb
inc
jb
or
adc
cmc
test
movsb
fcoml
add
pop
sub
ja
jno
cwtl
dec
jb
outsl
les
adc
imull
pop
stc
push
jae
shlb
add
mov
or
add
pop
cmp
push
out
sti
mov
cmp
jl
and
je
mov
sti
sbb
daa
mov
inc
test
inc
stos
mov
add
jnp
dec
daa
pop
xor
mov
inc
pop
ret
sbb
shll
or
xor
sub
js
ret
xor
push
jp
sbb
pop
cmpl
and
adc
mov
jmp
cmc
fdivl
sbb
sbb
jno
add
push
aad
int
cmp
decb
pop
fbld
sbb
lcall
fld
js
push
iret
pop
mov
mov
js
lock
xchg
push
dec
je
test
test
leave
adc
sub
fldcw
faddl
cmp
pop
cmpb
pop
adc
xchg
test
jbe
inc
int
and
jge
mov
imul
jg
jnp
mov
adc
or
dec
insl
stos
and
cmp
loopne
hlt
mov
mov
xchg
jge
das
loop
jg
pop
mov
sub
mov
push
out
mov
int
scas
fdivrs
es
mov
push
in
xor
in
adc
pop
mov
shll
imul
jl
das
aad
rcr
mov
outsl
es
mov
test
movsl
in
inc
add
add
sbb
loopne
cli
lea
fucomip
dec
sub
aas
addr16
xchg
sbb
sbb
mov
xchg
js
daa
jne
cwtl
clc
pop
adc
jp
sbb
rol
pop
sub
mov
dec
insl
mov
adcb
cmp
scas
push
mov
pushf
sti
loop
push
in
mov
insl
movsb
inc
and
push
test
cs
cwtl
neg
loope
inc
in
arpl
iret
mov
jmp
sub
sbb
call
leave
sub
mov
dec
ffreep
pop
movsb
jo
and
aas
ja
lea
mov
jecxz
adc
testb
adc
daa
je
inc
jmp
scas
ja
dec
adc
pop
adc
stos
xor
mov
xlat
lods
loopne
insl
mov
mov
aas
jmp
sbb
pop
test
pop
into
jmp
jle
out
cmpsb
lock
push
or
adc
pop
and
aaa
roll
or
inc
mov
cmpsb
and
icebp
add
or
scas
je
idivb
add
fs
xor
inc
push
das
pop
fcom
outsl
push
add
insb
and
mov
push
jg
sti
lret
fists
std
mov
add
xchg
popf
cmc
and
or
ja
jae
dec
sub
jmp
cld
cmpsb
dec
lock
imul
push
insl
mov
jle
outsb
arpl
insb
hlt
insb
xor
lods
fldl
xorb
cmc
dec
das
gs
daa
push
les
mov
inc
dec
jno
into
in
popf
lret
test
pushfw
xchg
and
mov
je
lds
in
outsb
mov
pop
in
add
sub
push
sbb
dec
mov
mov
push
pusha
popf
lock
xchg
push
or
push
mov
adc
leave
mov
jmp
push
dec
es
mulb
xchg
pop
icebp
xor
mov
stc
lahf
cmc
aam
addr16
mov
pop
faddl
adc
repz
pop
fmuls
fcomps
mov
fidivrs
and
ja
daa
mov
pop
lcall
imul
pop
jmp
enter
cli
repz
ret
imul
aas
pop
add
mov
xor
pop
mov
bound
mov
aad
jno
inc
out
adc
int
mov
jno
sub
jl
movsl
push
pop
or
jmp
in
push
dec
inc
cmp
shll
mov
pop
jb
jg
xor
or
mov
inc
lods
add
mov
jb
ja
imul
ss
pop
pop
and
sub
sub
out
xchg
in
dec
or
in
push
xor
ss
mov
fdivrl
cmpsl
push
add
cmc
enter
imul
mov
and
mov
arpl
incl
dec
cmp
test
dec
outsb
or
xchg
cs
or
lock
dec
into
push
rcrl
imul
and
sbb
sub
pop
mov
and
leave
scas
xor
cmc
fcompl
mov
icebp
mov
shlb
into
movsb
into
rclb
lcall
push
outsl
xor
test
mov
jnp
in
jle
dec
pop
add
pop
xlat
jnp
or
pop
pop
popa
jne
das
sbb
inc
or
leave
pop
ja
mov
int
jnp
xchg
mov
jb
xlat
xchg
sub
xchg
pop
xchg
pop
or
cwtl
hlt
sub
and
bound
mov
daa
push
scas
cmp
pop
arpl
adc
stos
xchg
mov
pop
adc
insb
ficoms
ja
insl
mov
cmp
pop
jge
popa
in
mov
mov
incl
sti
jmp
mov
add
push
add
dec
adc
fsubs
imul
xlat
jnp
sti
in
inc
and
lods
cli
xor
jne
inc
and
jg
js
push
sbb
add
push
xchg
outsb
lcall
stc
iret
push
les
cwtl
adc
push
sub
sbb
inc
dec
inc
aam
lcall
add
jne
in
xor
pop
sbb
lret
rcrb
lahf
xor
inc
push
pop
mov
jmp
loop
cwtl
mov
jg
pop
subb
pop
xchg
mov
addl
dec
adc
inc
loopne
xlat
xchg
popa
cltd
cmpsl
and
mov
sub
ljmp
jb
add
mul
dec
stc
mov
stc
lahf
cli
das
cmpsb
addr16
sub
mov
pusha
insb
ja
sahf
and
cmp
sbb
lret
xorl
pusha
push
pop
jno
sbb
nop
fnstcw
dec
xchg
inc
xchg
jge
test
cmpl
sub
cmpsl
jae
mov
and
stos
xchg
stos
sbb
je
jmp
imul
add
pop
dec
xor
sub
enter
shlb
out
sahf
mov
lahf
call
aad
cmp
dec
scas
xor
out
jo
pusha
add
std
push
xchg
adc
outsl
in
inc
loop
and
push
mov
inc
ficompl
adc
mov
fdivl
cmp
negl
pop
xchg
sub
outsl
adcb
insb
jb
imul
shl
inc
mov
lea
loop
mov
push
xor
adc
dec
cmp
insb
mov
aad
fimuls
mov
insl
xor
sti
lret
cs
in
sbb
cmpsl
stc
mov
dec
mov
jno
xchg
mov
add
adc
dec
ja
inc
fstps
inc
xor
pop
sbb
add
jno
mov
mov
adc
pop
lods
and
stc
es
lock
and
add
dec
sbb
push
out
aam
add
mov
xchg
je
fs
fimuls
scas
mov
fs
mov
leave
in
out
test
fldl
push
xchg
push
push
or
fs
popa
mov
ficoms
xchg
in
fs
cltd
push
push
xchg
adc
popa
popa
cld
pushf
mov
mov
cli
imul
inc
hlt
imul
push
push
test
into
imul
mov
aam
add
int
xor
leave
sub
xchg
mov
jbe
test
lcall
leave
inc
or
stos
add
xchg
nop
cmpsb
insb
js
ds
ja
pop
inc
jno
aam
sbb
dec
add
in
pop
out
adc
add
cltd
push
inc
lcall
push
pop
jnp
cmc
or
xor
pop
jae
call
out
iret
push
repz
or
ja
bound
dec
add
cmc
aas
jne
sahf
mov
sbb
pop
sti
cmp
int3
xchg
push
nop
push
out
push
int3
rorb
pushl
pusha
gs
enter
jns
shrl
pushf
pop
cmp
mov
sahf
mov
dec
fistps
shrb
lcall
cmp
pop
lds
scas
mov
pop
lahf
sub
cwtl
daa
hlt
pop
jg
clc
push
jo
sti
addb
js
adcb
mov
dec
sub
adc
xor
in
xor
jns
mov
push
bnd
push
stos
lock
jb
into
fwait
int
mov
jg
cmp
add
cmp
xor
xor
adc
and
int
and
jb
xchg
jg
pop
xchg
jp
mov
je
fdivrl
cli
inc
adc
out
adc
je
in
fdivs
or
xchg
outsl
sahf
pop
call
mov
lahf
aam
pop
jae
xchg
leave
in
ljmp
int3
pop
cmp
arpl
mov
mov
cwtl
jecxz
loop
mov
cwtl
loopne
aas
push
add
add
jnp
push
jmp
push
jb
rcr
push
clc
aaa
mov
xlat
cltd
adc
inc
js
enter
ret
push
adc
jle
cmp
test
xor
leave
xchg
inc
lret
push
pop
xchg
aaa
inc
xchg
pop
push
sub
bound
out
xchg
test
pop
jnp
pop
ds
imul
enter
fdivrs
dec
sbb
or
mov
das
xor
xchg
inc
ljmp
inc
cmp
sub
sub
fxch
cmpsl
insl
mov
leave
test
jae
xchg
dec
aam
jb
jp
cmc
test
xchg
imull
sti
jno
sub
pop
adc
xor
pusha
das
int
mov
popa
hlt
mov
out
push
mov
or
scas
mov
cwtl
inc
in
sbb
ror
imull
jns
and
sub
loop
fs
xor
imul
dec
lret
pop
fs
stos
push
arpl
and
in
cmp
in
fistps
leave
and
stos
or
imul
inc
push
jmp
or
repnz
lock
mov
xchg
scas
adc
daa
dec
cwtl
repnz
lods
iret
push
jns
and
jp
mov
mov
sti
xchg
xor
jmp
adc
mov
ss
int
rcr
loopne
aas
and
sub
xchg
dec
ret
mov
push
aam
icebp
jnp
mov
xchg
cmpsl
int3
sub
push
pop
xor
add
loopne
xchg
idivl
sub
insb
and
fidivl
out
dec
xchg
out
loopne
jecxz
ja
add
or
jle
adc
and
pop
lods
pop
test
dec
dec
jno
sbb
xor
inc
cwtl
pop
mov
or
pop
jb
das
add
callw
xchg
cmp
rcrl
pop
xchg
mov
dec
sbb
cwtl
mov
jecxz
mov
cmp
jo
or
aad
adc
cli
cmp
push
jl
or
xlat
les
popf
neg
add
out
add
push
xchg
pop
popa
push
dec
dec
iret
fstps
pop
sbb
je
inc
jno
and
pusha
adc
sub
dec
stos
xlat
repz
fs
mov
sub
and
ja
mov
into
out
lock
outsb
fisubl
icebp
lahf
roll
jnp
test
dec
scas
popf
adc
and
jno
and
inc
or
pop
dec
mov
ret
inc
adc
mov
mov
push
test
cmpb
outsb
notb
pop
ret
dec
mov
mov
in
mov
ret
movsl
bound
pop
fistpll
mov
sbb
jno
xchg
mov
xor
push
or
or
insl
lds
ljmp
mov
add
push
lahf
and
xchg
push
inc
int3
mov
pop
xchg
jp
xor
popa
iret
adc
icebp
and
pop
insb
lock
clc
dec
imul
rclb
addr16
inc
scas
xor
mov
fildll
cmp
jns
xchg
cmpsl
cs
sbb
pop
cmc
jecxz
and
push
add
push
mov
and
icebp
push
xchg
or
lcall
xor
js
push
in
pop
xor
outsb
dec
mov
cmpsb
sbb
adc
shll
ffreep
nop
inc
dec
jmp
xor
das
ss
pop
sub
repz
and
cmp
insb
sbb
mov
out
pusha
inc
sbb
xor
fwait
arpl
jnp
popf
inc
das
shr
not
mov
lret
xor
dec
into
subb
xor
add
stos
cmp
jnp
insl
gs
lock
inc
dec
inc
xchg
mov
dec
dec
movsl
xor
rcrl
adc
clc
ret
lahf
mov
data16
sub
xor
cmp
icebp
scas
das
pop
out
cmp
push
bnd
dec
and
in
jno
je
push
cmpl
hlt
pop
in
inc
out
sub
into
jmp
adc
int
out
inc
dec
or
leave
mov
idivb
adc
cli
rcrl
ds
leave
inc
pop
xchg
and
dec
mov
cmpsl
rcrb
jge
dec
iret
adc
int3
mov
push
arpl
lods
or
add
push
and
dec
push
js
lods
sbb
pop
jo
inc
jl,pt
sub
pop
dec
andl
fnstenv
dec
pop
es
push
inc
ljmp
mov
jp
pop
or
imul
in
sub
js
inc
insb
jns
and
mov
insb
test
mov
and
mov
shlb
test
cld
dec
aas
test
mov
inc
xchg
dec
lret
rorl
sbb
add
leave
lods
inc
sub
xor
sbb
or
scas
pop
out
xlat
jle
ficoms
js
addl
cwtl
popa
push
xchg
leave
gs
xor
push
lret
xlat
mov
lds
cmp
ret
pop
jnp
cli
idivl
jno
add
cmpsb
mov
aam
outsl
xor
jge
inc
icebp
xor
xchg
cmp
cmp
xchg
insb
mov
in
push
cli
sub
dec
mov
loope
ds
std
pop
fists
jb
dec
ja
push
ret
fnstsw
and
fistpll
aam
dec
pop
mov
test
cmp
mov
push
add
mov
adc
inc
inc
jecxz
jno
jae
cmpsl
icebp
mov
dec
repz
add
je
xchg
int3
mov
or
cmpsb
mov
mov
add
mov
or
movsl
or
lcall
jno
mov
sub
pop
xor
push
fldenv
xor
stc
push
push
fwait
push
int
add
mov
jae
mov
push
xchg
shr
mov
sbb
mov
ret
pop
push
ss
mov
inc
mov
mov
js
jmp
cld
ss
jecxz
gs
sub
ret
and
popa
cmp
lds
push
jmp
stc
paddusw
pop
loopne
cwtl
pop
jle
cmp
scas
cmp
jle
and
mov
lods
push
int
movsl
jns
sbb
xor
aam
movsl
shrb
out
add
inc
mov
test
popa
jne
jbe
cld
jle
push
daa
test
sub
jmp
lds
inc
mov
fstl
jge
fs
add
aad
in
cmp
mov
xchg
cld
addr16
leave
xchg
push
push
push
insl
sbb
sbb
or
sbb
cs
cmp
or
shrb
jecxz
inc
push
shll
push
fisttpl
fndisi(8087
repz
test
and
dec
jmp
mov
mov
dec
das
push
pop
mov
dec
lods
mov
rdmsr
push
sti
andb
xor
in
or
ror
pushf
aam
inc
shll
xor
cld
push
dec
insb
xchg
push
idivb
int
inc
idivb
push
adc
in
xlat
pushf
int
mov
xchg
push
push
jbe
daa
mov
lahf
sub
add
aam
idivl
ja
dec
xchg
cmp
cs
xor
sbb
pop
dec
pusha
or
mov
or
scas
or
pop
mov
adc
rorl
dec
lret
loopne
clc
xchg
push
jae
dec
ds
inc
add
push
add
push
add
out
xchg
sub
and
add
push
and
imulb
pop
add
popf
or
repz
sub
push
aad
pop
mov
pop
pusha
int
cli
into
push
popa
mov
std
xor
in
cmpsl
stc
mov
enter
fsts
mov
rol
adc
fistl
mov
int3
in
xor
insb
mov
mov
leave
add
jle
pop
add
lods
pusha
out
pop
cld
push
add
adc
shrb
orb
out
inc
aam
mov
mov
ss
sub
xchg
mov
lea
xor
inc
and
fnsave
fs
addl
jnp
rclb
or
test
mov
push
adc
fistpll
pop
pop
jne
stc
test
pop
dec
int
data16
xchg
sub
iret
pop
lahf
mov
rcr
fildll
mov
in
bound
cltd
loope
adc
test
in
lock
mov
push
dec
pop
xchg
test
mov
sbb
mov
adc
jbe
aas
lock
mov
lret
leave
mov
lret
shl
mov
scas
jp
jmp
or
add
mov
pop
xor
flds
xchg
fiadds
bound
mov
scas
mov
js
mov
lahf
lods
test
cmp
fcoms
xchg
test
sub
sbb
rorl
push
gs
jae
out
and
and
faddp
xchg
push
fs
das
inc
cltd
xchg
ret
push
dec
pushf
cmpsb
sti
sub
mov
stos
repz
sbb
aad
outsl
ds
jbe
xorl
pop
add
jle
lahf
in
jne
cmp
pop
mov
cmc
lock
ret
stc
sti
sbb
xor
inc
ss
xchg
shr
jnp
loopne
cld
dec
addr16
loopne
mov
jmp
xor
pcmpeqb
push
es
rorl
push
xchg
call
enter
inc
fcmovbe
sub
xchg
cmc
or
mov
test
mov
rorb
out
push
xor
inc
outsb
adc
mov
inc
mov
adc
sub
rcr
imul
icebp
mov
stos
roll
nop
pusha
repz
cmpsb
out
xor
movsl
test
fmull
jne
cwtl
mov
scas
and
cltd
sbb
jle
pop
pop
sbb
push
mov
divb
dec
bound
mov
xchg
out
movsb
jbe
cld
sbb
inc
jb
fsubl
scas
xor
xchg
enter
inc
sub
in
ds
fdivrs
rclb
xchg
imul
aad
ja
hlt
call
sub
mov
sarb
push
sub
sbb
aad
sub
cmp
test
and
sbb
mov
loop
or
cmp
outsb
popf
push
loop
jne
test
sub
push
xor
mov
cltd
aaa
mov
insl
rolb
mov
sahf
pop
fcmovb
rcll
lods
mov
rorl
repz
popa
mov
adc
dec
and
or
dec
insl
adc
cmp
js
fisttpll
addr16
std
pop
xor
insl
jg
mov
fidivs
push
sahf
cmp
xor
add
or
stc
cmp
out
data16
push
inc
add
ja
xchg
fistl
xor
in
add
and
outsl
and
xchg
lds
push
test
pop
push
mov
mov
mov
cli
add
xor
xor
movsl
mov
inc
adc
pop
push
clts
push
pop
insb
popa
sbb
fs
popf
out
sub
testb
fcompl
clc
add
clc
xchg
jmp
mov
adc
int
pop
stos
inc
orb
adc
stos
jmp
cmp
and
test
les
mov
cwtl
push
movsl
jne
inc
or
mov
div
cmpsl
cmp
lret
pop
jnp
pop
les
stos
aaa
out
popa
sbb
roll
repz
inc
jnp
popf
jmp
jns
cld
popa
mov
lock
push
cmp
inc
mov
or
sahf
push
outsb
subl
in
pop
mov
loope
push
mov
pop
sbb
roll
add
mov
call
pop
out
pop
aam
mov
and
insb
pcmpgtw
mov
xor
mov
xchg
lret
hlt
or
mov
ficoms
add
subl
pop
push
call
repnz
pop
xchg
push
insb
mov
push
cmp
adc
adcb
mov
add
jle
popa
cmp
popf
mov
imul
sti
dec
imul
push
mov
jns
and
out
mov
jmp
dec
movsb
jns
fisttps
push
js
lcall
mov
jb
stc
mov
xor
ret
test
sub
sub
fmull
and
iret
pop
in
outsb
movsb
cld
jle
xchg
jne
or
lahf
cmp
cmp
mov
mov
mov
leave
pop
mov
adc
adc
jmp
lcall
ja
stc
lret
clc
in
pusha
sub
rorb
int3
js
sub
adc
push
xchg
dec
xchg
mov
push
add
sti
mov
dec
test
jne
ljmp
sub
mov
outsl
cmp
inc
addb
andb
xor
shlb
test
sub
adc
dec
jb
mov
fwait
dec
pop
xor
rorb
push
test
jmp
testb
and
lods
imul
aaa
jge
pop
mov
sub
fcoms
xchg
lahf
scas
dec
jne
fstps
pop
cli
mov
xor
rcr
daa
and
mov
mov
test
or
push
test
ja
jb
imul
repz
adc
out
pop
or
and
pushf
fbstp
cmpsl
inc
jmp
push
popf
adc
mov
arpl
cmp
mov
ret
rorl
cmp
xor
aaa
movsb
adc
sub
jns
mov
cltd
or
pop
xchg
shrb
xchg
ret
divl
pop
mov
lods
leave
and
js
lret
pop
sbb
movsb
in
mov
adc
jo
test
and
arpl
add
pop
scas
ss
inc
fstpt
stos
mov
imull
shll
test
int3
pop
jae
addr16
es
xlat
dec
leave
mov
test
pop
mov
dec
stos
dec
lds
adc
aad
dec
cmpsb
lods
rorl
inc
or
test
sub
mov
lods
jbe
test
push
dec
test
ja
mov
fs
ja
xchg
in
stc
inc
rclb
inc
nop
cmp
pushf
shr
mov
cli
sub
into
or
mov
and
add
mov
in
xor
cmp
sarl
xchg
lahf
sahf
ljmp
sahf
inc
sub
pop
imul
ja
push
jp
jo
adc
sbb
push
lds
cmp
inc
arpl
enter
push
lock
push
add
pop
mov
les
cltd
xchg
aaa
mov
or
enter
arpl
sub
popa
test
cmp
test
jp
hlt
or
dec
sub
mov
test
jle
cwtl
jle
dec
out
inc
mov
sub
iret
lahf
loope
shl
xor
push
xor
ret
jp
imul
add
cltd
repz
pop
cmp
mov
adc
inc
jmp
pop
sub
jne
mov
sub
dec
mov
loopne
push
mov
std
push
push
mov
cmpsb
fwait
test
pusha
mov
pop
mov
and
ds
jg,pt
scas
xor
aad
inc
mov
xchg
inc
data16
sti
xor
mov
xchg
fcoms
pop
mov
jae
push
andl
mov
push
sbb
push
loopne
popa
int3
cld
rclb
test
jnp
jo
addr16
mov
push
mov
mov
mov
iret
jle
lahf
jp
xchg
jge
adc
add
imul
lret
inc
xlat
adc
aad
push
clc
es
mov
out
inc
push
inc
in
cmp
sbb
scas
imul
xchg
mov
cwtl
stc
dec
xchg
scas
push
subl
es
mov
ds
lahf
add
shlb
loope
imul
int3
and
cmp
add
sti
les
push
and
push
hlt
adc
outsb
enter
fsts
inc
cmpsl
test
iret
lret
xchg
leave
bound
hlt
or
out
idivb
orb
scas
add
rorl
add
aad
lea
mov
xchg
data16
mov
push
inc
clc
stos
jne
test
into
xchg
movsl
shl
push
ljmp
add
ss
or
lds
loop
pop
inc
sbb
sbb
imul
enter
stos
pop
sub
sub
xchg
xchg
mov
das
cwtl
repz
out
test
arpl
and
xchg
adc
imul
ja
xchg
test
mov
pop
dec
fs
pop
jne
cmp
mov
push
js
push
and
cmp
dec
adc
push
mov
call
mov
mov
std
mov
push
push
idivl
aam
fs
leave
sub
pop
sbb
mov
xor
pop
les
movsl
jge
into
adc
iret
roll
std
imul
pushf
dec
jg
adc
cmp
cmp
or
out
pop
dec
cmp
xchg
mov
xorb
dec
aas
pop
or
dec
mov
repz
xchg
push
push
and
mov
out
out
sub
xchg
xor
insl
xchg
mov
lods
testb
jg
sub
stos
pop
cmpl
dec
daa
repnz
lock
lds
repnz
data16
pushf
mov
pop
test
add
jne
pop
mov
outsb
aas
mov
aas
adc
rclb
jno
scas
xor
inc
mov
lret
imul
lods
cld
inc
lahf
in
pop
aam
hlt
push
sub
push
sub
arpl
loopne
enter
addr16
aaa
mov
lahf
xor
inc
push
xchg
xor
push
orl
xchg
fcomp
test
mov
and
in
dec
push
pop
out
cmp
mov
xchg
sub
jae
jne
xorb
dec
jb
pop
subb
xor
call
jnp
add
aaa
shl
dec
add
xor
push
sub
adc
xchg
sbb
out
inc
shrl
mov
cmp
cmp
in
push
fiadds
mov
xchg
je
xchg
mov
ja
mov
mov
aaa
test
cmpsb
add
push
fwait
xor
xchg
iret
mov
out
xchg
ret
daa
sti
xor
vpmulhw
out
cltd
or
test
jecxz
stos
in
add
lock
call
icebp
add
lret
dec
xlat
cld
inc
mov
inc
pop
mov
out
mov
or
ja
mov
pushfw
jo
jns
clc
sub
loopne
pop
or
fsts
insl
push
sarb
pop
cmp
dec
stc
mov
and
sbb
stos
add
repnz
or
or
subl
inc
js
imul
imul
addr16
scas
pop
push
ret
cld
bound
rol
pop
mov
je
dec
dec
rclb
mov
hlt
add
mov
mov
and
mov
jne
in
out
xor
out
cltd
mov
xor
cmp
mov
scas
inc
insl
out
sti
mov
ret
or
mov
ds
sbb
cltd
pop
mov
cs
or
jp
pop
mov
dec
sbb
jmp
les
pop
je
mov
adc
xchg
rorb
lock
cmp
aad
leave
mov
rcrb
fs
out
pop
leave
cmp
nop
pushl
mov
js
cmpb
pushf
addr16
adc
dec
adcl
fisubrl
pusha
pop
clc
jg
in
adc
add
sbb
adc
or
jne
mov
test
lcall
xchg
jl,pt
mov
arpl
dec
sub
into
xchg
cld
outsb
mov
jecxz
fsubl
fisttpl
add
mov
roll
fwait
and
adc
dec
jne
test
xchg
jno
mov
clc
sub
push
sub
lahf
out
add
inc
push
mov
mov
push
lock
mov
push
mov
call
jne
mov
push
lret
movsl
xor
es
jns
jne
lods
adc
and
cs
idivb
loope
or
ss
add
and
int
data16
sub
je
imul
push
addr16
xchg
adc
sbb
out
push
test
cld
ret
insl
mov
dec
mov
mov
xchg
adc
sbb
test
mov
aaa
sti
imul
adc
cmpsb
lock
xchg
mov
inc
ror
and
inc
fs
movhps
mov
mov
fidivrl
inc
int3
test
ljmp
repz
test
push
enter
sub
cmp
test
pop
sar
out
bound
in
roll
push
sbb
fwait
sbbb
daa
cli
sahf
mov
js
fistl
jns
sahf
out
stc
jns
mov
xor
sub
in
xor
loopne
rol
or
cvtps2pd
mov
jb
stos
stos
test
addl
push
jge
cmp
push
pop
iret
ret
jo
push
cmp
push
cmpsl
xchg
jecxz
cmp
lock
aas
sbb
sub
jb
lods
aaa
or
inc
ja
scas
mov
sahf
cmp
sbb
fs
loopne
rcl
add
push
xor
dec
mov
pop
pop
dec
cld
outsb
cwtl
xchg
lahf
inc
test
push
cli
mov
mov
icebp
call
xchg
xor
fs
pop
out
int
pop
mov
xchg
dec
mov
nop
ret
add
push
leave
ss
gs
add
test
jb
dec
inc
arpl
shll
fdiv
arpl
lret
inc
and
pushf
cwtl
adc
aaa
push
das
insb
sbb
lcall
rcl
mov
or
xchg
mov
sbb
push
stos
mov
jb
pop
sub
outsl
cli
dec
push
mov
add
std
rorb
insb
repz
cmp
sub
pusha
and
repz
and
mov
cmpsl
mov
shlb
push
mov
clc
push
add
loope
call
cmp
test
test
loope
mov
xchg
addr16
push
pop
xchg
clc
pop
jmp
push
sub
dec
shll
pushf
rolb
push
cltd
pop
sbb
shll
adc
lret
dec
xor
decb
adc
or
pop
pop
xchg
out
ret
push
leave
lea
scas
sbb
sub
rcr
mov
jecxz
sti
or
mov
in
add
xchg
pop
push
cmc
sahf
shlb
cmc
sub
or
les
sbb
cmc
cmp
jmp
mov
fcmove
push
xchg
mov
mov
mov
test
cmp
ja
popf
outsl
push
adc
sub
mov
sbb
mov
loope
add
fsubrp
add
push
inc
pop
lcall
mov
add
fwait
aam
in
xchg
inc
add
fxch
pop
pop
pusha
les
lahf
add
negl
cltd
adc
cmp
bound
cmp
and
push
adc
es
jae
jecxz
ficompl
and
sbb
addr16
cmpsb
cmp
inc
cmp
mov
xlat
loopne
aam
xor
or
fadd
dec
inc
jmp
ret
push
shrb
xchg
dec
aaa
data16
xchg
scas
test
pop
and
dec
sar
jae
mov
xchg
push
je
add
imul
sarl
jns
push
mov
icebp
mov
pop
gs
push
cwtl
rcrl
into
xchg
test
or
out
aam
adc
cmpl
mov
mov
and
loope
ror
clc
das
and
add
iret
mov
adcb
adc
fdivl
loopne
in
mov
fsubs
mov
push
std
icebp
repz
ja
shrl
in
xor
adc
out
push
dec
push
ret
ja
sets
xchg
clc
sbb
dec
mov
in
negl
mov
int3
mov
pop
pop
xor
es
adc
cmp
stos
fidivrl
out
fimull
xchg
cmp
jmp
jne
mov
xor
in
dec
xor
inc
es
cmc
adc
fbstp
fdivrl
jae
js
popf
cmp
out
aaa
and
mov
fs
jl
fwait
pop
test
cmpb
cltd
mov
clc
or
push
movsl
sub
sub
test
xchg
push
fwait
stc
dec
je
movsl
dec
and
cwtl
je
jl
sbb
rcll
mov
mov
stc
and
rolb
cwtl
mov
and
xchg
ja
inc
rcrl
inc
add
dec
je
insb
daa
xchg
stc
and
lahf
aaa
movsb
cmp
dec
jle
sub
or
mov
lods
outsb
sub
incl
mulb
mov
push
movsb
dec
xchg
call
dec
les
jg
adc
jle
je
aas
or
jnp
or
mov
mov
cmpsb
ror
add
in
shrl
or
pusha
pop
sbb
in
mov
in
inc
or
shlb
inc
push
cmp
jns
xchg
and
push
in
data16
push
scas
in
rol
testb
inc
rclb
pop
jnp
sbb
in
stos
lcall
push
mov
aaa
adc
inc
es
mov
xor
push
into
jo
lock
ja
jg
mov
ret
mov
sub
and
std
jle
cmp
adc
mov
lret
ret
repnz
outsb
or
fisubs
andl
andb
mov
fldenv
jl
aam
les
out
xchg
int
out
imul
dec
int
scas
test
leave
add
test
and
out
sub
lahf
jle
scas
rorl
sbb
push
js
and
andb
push
insb
in
mov
fsts
push
adc
jns
mov
mov
cmp
insb
mov
cmc
inc
stc
and
mov
push
inc
addr16
mov
add
push
push
cmpsl
xor
xor
mov
nop
fmuls
daa
cwtl
ja
dec
cmpsb
into
ds
mov
add
pop
ds
cmp
pop
daa
addr16
loope
popa
out
push
xor
movsl
mov
or
add
mov
mov
inc
jne
popf
sbb
add
cmpsb
cmpsl
int
fcomps
and
add
cs
fwait
push
xchg
mov
and
mov
xor
mov
xorl
in
lods
aas
fadds
push
fldt
sbb
adc
lods
imul
sbb
sub
mov
mov
cmpsb
fstpt
adc
push
fstl
add
int
fldenv
mov
not
adc
in
insb
mov
gs
mov
aad
sbb
add
sub
mov
pop
imul
dec
out
xchg
cmp
mov
xchg
fiadds
cld
xchg
hlt
daa
ss
xchg
call
xchg
mov
push
mov
popa
mov
pop
dec
xchg
pop
sub
cmp
inc
add
ret
subb
jno
icebp
pop
andl
pop
das
pusha
mov
sub
aaa
push
add
add
push
dec
mov
into
mov
lahf
repz
jns
jg
mov
xor
outsb
fisubrl
mov
cmp
push
ret
pop
inc
mov
daa
jmp
aam
and
fildl
add
adcl
xor
jnp
fs
pop
push
iret
iret
lock
lcall
adc
lock
nop
scas
adc
andb
push
jl
mov
and
jecxz
sub
pop
and
sbb
in
sub
mov
sub
jg
lahf
ret
cmpsl
incb
mov
rol
cs
and
mov
mov
pop
test
cmp
fstpt
gs
jecxz
mov
add
lcall
push
sahf
gs
cmpsb
mov
dec
repz
xlat
sub
push
jp
inc
fbld
jg
popa
scas
push
das
icebp
and
enter
testb
inc
sub
sahf
aas
daa
jns
or
rcrb
jo
jl
decb
inc
int3
xchg
imul
adc
mov
mov
mov
push
test
pop
push
inc
and
xchg
sub
shrl
mov
sahf
pop
mov
jmp
shrb
jo
gs
bound
jmp
sbb
nop
sbb
ss
cmp
xchg
ret
popa
cli
int
addb
sub
cmp
cmpsb
dec
add
adc
push
popa
pop
frstor
sub
mov
sarb
mov
or
push
adc
divl
dec
js
push
or
mov
xchg
sahf
rorl
xchg
pop
push
or
push
in
xorb
dec
fadds
add
stos
out
pop
xor
scas
or
push
sbb
imul
cmpsb
cmp
ss
jno
jae
test
je
push
jne
lods
mov
fwait
push
xchg
or
mov
pusha
fwait
popf
dec
pop
mov
push
stc
packuswb
pop
pushf
sbb
in
cmp
clc
test
andl
push
and
sbb
mov
lret
lock
in
roll
in
mov
adc
mov
enter
fs
jb
push
xlat
mov
inc
std
loopne
mov
pop
sbb
dec
jg
sbb
push
es
popa
aas
pop
jp
pop
es
adc
and
iret
es
push
and
jmp
push
nop
call
xchg
mov
outsb
sbb
mov
shr
pop
gs
and
or
in
in
or
pop
stc
int
and
pop
or
fs
dec
ja
mov
ret
loope
test
outsl
jns
fs
insb
xchg
test
aam
mov
je
jp
mov
lods
mov
sub
cmp
insl
pop
push
clc
dec
sar
jno
daa
pushf
jne
push
or
adc
xchg
adc
test
mov
scas
adc
or
and
sti
imul
inc
ret
ror
sbb
pop
sub
and
dec
out
jo
jns
dec
in
dec
inc
or
or
mov
fnsave
push
lea
pop
xchg
sbbl
inc
mov
push
lcall
sbb
push
ret
mov
push
aaa
and
cmp
jge
inc
test
and
dec
add
movsb
leave
xchg
adc
cmp
add
add
mov
push
fidivl
mov
mov
cmp
orb
adc
xor
pop
mov
mov
sbb
sbb
pop
sbb
movsb
mov
jecxz
pop
repz
clc
mov
movb
enter
jns
loop
push
mov
test
cli
ljmp
or
mov
cmp
sub
mov
insb
out
sub
jnp
jle
shl
aas
jecxz
pop
dec
je
push
sub
das
fs
subl
lea
stos
lds
jmp
mov
in
out
sbb
xor
roll
jmp
push
cmp
adc
inc
ret
insl
xor
imul
rcrb
icebp
loop
and
adc
pop
xor
daa
ljmp
fisubrs
std
cmp
pop
mov
insl
in
mov
xlat
cld
stos
pop
pop
adc
in
out
jb
dec
enter
cltd
cmp
cmpsl
fidivrs
dec
and
lret
or
aas
lods
mov
sti
ret
lcall
scas
inc
out
lcall
xor
jp
inc
add
jo
dec
pop
inc
sbb
clc
jg
xor
mov
dec
cmp
push
leave
inc
jo
or
jmp
imul
jb
movsl
fidivs
xchg
push
pushf
mov
aad
imul
stos
push
test
in
bsf
mov
push
xor
pushf
test
les
int3
in
jno
inc
xor
mov
aaa
outsl
leave
inc
mov
lock
sti
inc
outsl
jns
insb
insb
or
in
mov
lds
ja
jae
dec
ret
and
in
lret
imulb
dec
test
clc
push
dec
dec
stos
das
das
and
xor
loopne
ret
mov
lds
orb
pop
movsl
out
loopne
mov
enter
sub
bound
add
inc
dec
inc
xor
or
xchg
pop
xor
into
add
sub
jg
jge
push
inc
faddl
pop
and
andb
pusha
pop
cli
fistl
mov
and
xchg
dec
lock
les
mov
push
ret
test
cmp
dec
cmc
daa
bound
popf
sub
sbb
icebp
outsl
ret
sti
cmpsb
dec
cltd
je
sub
or
adc
mov
and
sbb
pop
mov
inc
mov
mov
mov
div
out
cs
mov
pop
push
cwtl
sub
mov
add
into
repz
jp
sahf
adc
sub
adc
les
sub
mov
adc
push
sub
es
aad
adc
fs
sbb
push
fsubs
xchg
adc
jo
push
in
call
mov
sub
mov
push
jno
pop
iret
mov
dec
adc
mov
mov
and
scas
cltd
movsl
mov
inc
push
jmp
add
loope
pop
mov
iret
jb
clc
inc
xchg
add
mov
xchg
lods
fucomi
clc
stc
mov
int
sbb
mov
and
or
inc
int3
das
jno
scas
imul
adc
jbe
add
icebp
sbb
dec
jb
test
das
in
mov
mov
popf
dec
dec
mov
lret
xor
addb
fcomi
icebp
loop
outsl
xor
inc
test
and
jge
ss
andb
mul
leave
aad
fnstcw
add
push
scas
movsb
inc
xor
push
loope
cmp
cmc
out
mov
and
stc
mov
xor
in
adc
sub
dec
bound
dec
or
or
jns
ljmp
xchg
test
inc
cmpsl
push
js
pop
jno
dec
dec
and
adc
nop
nop
or
mov
stos
out
inc
pusha
pop
pop
push
in
insl
mov
ret
imul
stos
dec
lds
ds
test
inc
rcll
cld
add
stos
and
ljmp
sahf
pop
fdivrs
dec
mov
sub
test
sub
jbe
scas
cmp
dec
xchg
lock
mov
xchg
mov
out
or
enter
into
mov
mov
dec
pop
inc
outsb
fisttpll
pop
sub
lret
std
sub
scas
movl
into
shrl
jg
xchg
inc
sahf
in
add
inc
add
fcoml
jbe
icebp
inc
mov
inc
jecxz
pop
or
addr16
push
outsl
rorb
sbb
adc
test
dec
mov
cmp
loopne
out
inc
jbe
pop
call
outsb
fs
jbe
sbbl
pop
aad
xor
cmp
push
lods
inc
jbe
pop
je
es
es
add
subps
xchg
pushf
sbb
out
adc
dec
dec
add
jns
cmp
dec
push
dec
out
xlat
cltd
cmp
das
stos
and
cmp
sbb
add
pop
mov
test
in
call
xor
jge
sub
stos
add
push
pop
mov
stos
rcl
popa
adc
adc
mov
test
and
loope
push
push
mov
roll
add
in
or
or
int
xchg
add
je
enter
stos
or
inc
push
xlat
imul
mov
mov
xor
add
inc
arpl
ss
xchg
adc
adc
xchg
jg
inc
jbe
outsb
call
inc
fmull
mov
push
jmp
add
outsb
mov
les
push
and
mov
pop
fs
out
inc
mov
inc
inc
movsb
xor
dec
xchg
int3
mov
push
cmpl
push
mov
jmp
in
lcall
cmp
std
adc
xor
sub
mov
xchg
xchg
jo
mov
cmp
push
dec
insl
and
push
or
mov
push
mov
mov
push
cmp
nop
test
push
or
adc
loop
imul
jb
mov
xchg
dec
mov
data16
add
sub
stos
lods
incb
lock
jmp
adc
test
adc
test
xchg
lods
or
push
ljmp
xor
add
aas
jl
xor
loope
lods
mov
pop
fimuls
imul
out
mov
or
jecxz
dec
in
shlb
aas
mov
jmp
repz
mov
rclb
pshufw
pop
repnz
test
subb
or
adc
orb
pop
dec
js
pop
cs
xor
and
xor
les
or
mov
sub
repz
mov
jo
lret
xor
lahf
jmp
mov
dec
mov
xchg
adc
xor
sub
fcmovbe
rclb
mov
sti
bound
loop
subb
mov
popf
ret
aam
sbb
and
rorb
sub
popf
sub
mov
sti
sub
addr16
cmp
sub
xor
cmpsl
loopne
inc
mov
inc
cmpsl
jl
sub
sahf
cmp
insl
out
add
in
mov
std
dec
outsl
call
dec
dec
push
adc
jnp
stos
in
fdivl
lahf
jno,pn
out
pop
addr16
shr
cltd
jno
lods
push
addb
hlt
stos
aad
push
cld
insl
hlt
pusha
ret
cmpsl
outsb
adc
sub
cmp
adc
and
icebp
push
loopne
addb
jno
lret
jae
or
mov
ret
insl
rclb
jnp
call
sbb
inc
jp
jb
xchg
outsb
or
xchg
cli
jle
mov
ret
jno
pop
add
cwtl
mov
pushl
or
cmpsl
cld
mov
xor
out
data16
push
fcoml
imul
roll
push
xor
js
or
mov
mov
add
dec
and
fsubl
call
cmp
nop
incb
push
test
out
test
mov
repz
insl
adc
push
sub
js
dec
push
xor
hlt
pop
mov
imul
lods
mov
xlat
xchg
jle
push
and
inc
mov
pop
cmp
mov
dec
fildl
cmc
and
ficompl
in
pop
mov
inc
jbe
imul
inc
cmp
imul
or
xchg
jg
xchg
push
lock
arpl
imul
pop
xor
cwtl
daa
in
sbb
movsb
lret
scas
jle
loope
popa
jb
hlt
xor
xchg
ret
mov
cmpsl
xchg
fs
dec
push
jecxz
and
push
dec
cmp
dec
push
xor
sbb
sub
cld
fimuls
jae
aas
data16
pop
or
sbb
fistpll
test
int
fmuls
sbb
lds
out
lds
adc
movsl
pop
push
in
ljmp
imul
cmp
inc
jae
in
lcall
fmull
leave
mov
stc
mov
sbb
jmp
fists
fs
dec
push
int3
aam
lods
jge
xchg
adc
into
popf
fldl
mov
adc
fwait
and
mov
stos
mov
movsl
push
sub
dec
mov
ds
jbe
sbb
sbb
and
dec
inc
shrb
pop
out
aam
xor
lcall
cli
std
or
lods
sbb
or
xchg
dec
mov
push
mov
cmp
or
orb
mov
adc
and
fdivrl
js
outsb
inc
jp
mov
push
rclb
fxch
ja
xchg
inc
lock
jecxz
push
mov
jbe
pop
lahf
mov
gs
arpl
pop
scas
andps
iret
xlat
and
push
adc
repnz
add
cli
flds
out
push
fwait
cli
iret
icebp
jle
movsb
cmc
dec
inc
ret
mov
xlat
jle
sbb
lahf
iret
xchg
adc
jb
rcr
repz
inc
fists
mov
js
es
lods
xchg
loopne
cmp
xlat
mov
loop
sahf
imul
push
sub
jns
pop
inc
add
mov
cmpsl
pop
cld
addb
xchg
pop
std
xor
sub
sbb
mov
loopne
or
fwait
lods
loope
add
or
insb
repz
andb
neg
pop
dec
sahf
bound
adc
pop
sbb
adc
xor
sbb
bound
inc
in
lods
xchg
jl
add
test
mov
fidivl
repz
inc
and
aas
iret
sbb
pop
fxtract
dec
imul
nop
inc
out
ljmp
xor
in
xor
and
aad
clc
push
xor
lock
in
push
insb
and
add
jae
or
jnp
cs
cld
add
and
cltd
mov
in
or
and
mov
int3
fs
in
and
sub
pop
mov
into
popa
dec
imul
inc
addl
sub
xchg
dec
les
pusha
pop
bound
sahf
and
cmp
pop
xlat
add
aaa
ret
mov
enter
xchg
xchg
subb
inc
xor
nop
pop
cwtl
iret
xchg
les
sahf
mov
cwtl
mov
nop
pusha
mov
mov
push
rolb
outsl
sub
adc
mov
fadds
addr16
mov
scas
mov
mov
test
sbb
iret
iret
dec
imul
jae
int3
ljmp
lret
xor
cmpxchg
ja
mov
pop
repz
insl
xchg
or
xchg
cmpsb
jae
loope
imul
lret
out
loope
jno
mov
xor
pop
or
cmp
and
mov
ds
inc
or
and
add
adc
add
sbb
aad
sub
xorl
cmpsl
mov
or
dec
mov
in
xchg
insl
dec
push
lcall
fld
fdivs
pop
shll
ret
sub
outsl
ja
push
cmp
xchg
mov
loop
aam
arpl
dec
loope
pusha
out
notb
adc
loopne
mov
bound
jnp
push
mov
movsl
inc
cmp
stos
das
sub
jle
and
shll
dec
ficomps
popf
and
fidivrl
dec
mov
pop
mov
xor
cmpsl
mov
pop
cwtl
dec
and
xchg
inc
fwait
and
testl
inc
cltd
cmp
jle
inc
jne
add
xor
in
sub
push
loop
shrb
arpl
inc
push
sbb
pop
inc
xchg
push
push
jbe
push
sahf
adc
pop
jg
in
dec
and
test
push
fidivl
bound
mov
xor
aad
imul
clc
mov
push
sti
cmc
fdiv
cmpl
jae
mov
mov
fmul
cmp
cmp
cmp
inc
mov
bt
pop
inc
jge
je
movl
jge
ret
cmpsb
or
jns
hlt
testl
jns
lods
dec
fwait
push
push
xor
xchg
loopne
and
xchg
rorl
pushl
inc
cmpsl
nop
das
xchg
fnsave
mov
fsubrl
aaa
xor
jp
mov
addr16
std
xor
imul
mov
scas
xchg
inc
mov
jg
jo
cld
jne
sqrtps
mov
loopne
test
inc
pop
mov
or
sbb
fwait
xor
mov
mov
jmp
mov
xor
ss
in
std
in
aam
jl
sub
mov
in
loop
or
adc
in
or
mov
insl
mov
cs
imul
loop
jecxz
popf
out
xchg
cs
sbb
int3
in
test
mov
fcmovu
mov
jecxz
push
dec
sbb
es
mov
packsswb
mov
and
push
stos
rcrb
push
push
cmp
loop
out
push
popa
test
xchg
pushf
or
sbb
jp
pop
idivl
cmp
push
inc
xor
gs
push
clc
mov
test
jp
push
jne
mov
cwtl
arpl
cmp
sbbl
xchg
dec
sbb
rorl
mov
or
push
add
jg
movsb
shl
ret
cmp
scas
rorb
pop
mov
inc
sbb
cmp
push
pop
daa
jae
adc
fnstcw
test
pop
fistpl
jg
jecxz
cmp
pop
dec
in
stos
sub
icebp
add
mov
scas
mov
lcall
sbb
push
sbb
inc
mov
mov
adc
aaa
mov
mov
shrb
mov
xchg
loop
and
dec
repz
jbe
add
cmp
pop
clc
nop
mov
xchg
push
mov
aaa
icebp
pop
jns
or
add
xchg
scas
mov
or
out
xor
and
pop
mov
in
and
push
ss
pop
outsl
cmpsb
mov
mov
mov
sahf
push
shrb
cmp
lods
arpl
jl
insb
lds
adc
cmpsb
nop
xorl
leave
in
data16
movsl
mov
mov
mov
out
add
out
in
mov
add
test
ljmp
pop
mov
push
test
xchg
pop
loopne
bound
mov
xor
scas
xchg
sbb
mov
sub
lods
lods
imul
push
push
mov
cmp
andl
leave
sbb
rcrl
negb
inc
idivl
aad
add
inc
call
lds
loop
pop
mov
mov
sub
xchg
loopne
ljmp
mov
fisubrl
cwtl
fdivrl
add
popa
jmp
shl
mov
fistl
adc
mov
ficompl
pop
lcall
adc
add
lahf
nop
fcmovne
push
lods
repz
mov
adc
jg
imul
or
add
mov
pop
push
fwait
mov
lock
into
add
shll
cmp
xchg
lret
mov
mov
dec
mov
adc
pop
inc
xchg
jnp
ja
in
stc
push
and
xchg
je
mov
lock
sbb
outsl
ljmp
jg
lods
fwait
enter
and
movsl
push
push
lea
test
mov
sub
adc
sbb
invd
out
ljmp
cli
or
cli
clc
cmp
aam
inc
int
out
or
push
add
mov
pushf
data16
loopne
xchg
jne
push
in
cmp
cmp
cmpsl
cmp
test
lock
cwtl
andl
and
pop
imul
dec
and
aam
cmpsl
pop
cmpsb
add
jmp
jg
fwait
mov
jns
cmp
adc
scas
movsb
cs
pop
mov
lds
push
fmuls
dec
jmp
inc
push
aam
ljmp
es
ret
popa
mov
xor
pop
call
insb
push
in
cmp
insl
jb
xchg
cmc
xchg
fisubrl
ds
scas
enter
lret
and
call
leave
lea
sub
lods
adc
insl
mov
push
shl
outsb
sub
push
mov
fwait
xchg
xchg
outsb
jns
aad
enter
std
push
mov
ljmp
or
mov
push
stc
xor
sbb
ja
push
push
scas
adc
mov
sbb
rcrl
std
or
sub
jg
dec
mov
jmp
fldcw
ja
int
xchg
cmp
mov
xchg
xchg
jge
int
push
lret
gs
pop
imulb
mov
jno
xchg
sub
shll
cmp
repz
out
push
dec
mov
dec
out
loope
add
ja
inc
xor
pop
mov
jmp
dec
pop
mov
lret
fnstenv
jb
jnp
les
ljmp
and
sub
rcrb
mov
sarb
ret
imul
rolb
inc
mov
or
xorl
xor
popf
ficoml
cmp
xchg
adc
stos
js
fidivl
jmp
scas
daa
ljmp
sub
jl
fwait
jo
fs
sub
fistpl
arpl
icebp
aam
pop
sub
add
push
dec
xor
add
out
mov
pop
and
fcmovne
push
xlat
cltd
pop
jmp
lret
shrb
xlat
push
inc
and
jns
in
adc
lods
mov
push
mov
add
jo
enter
test
addb
add
aas
stc
or
popa
jne
add
das
pop
jmp
mov
push
clc
and
mov
mov
push
cltd
sar
sarb
loope
pop
lcall
icebp
adc
and
add
ja
or
xlat
cmp
sub
xor
mov
mov
pop
adc
lret
and
sti
insb
jecxz
jecxz
in
inc
sub
sub
fbstp
bound
xchg
sub
lea
popf
insb
mov
cltd
cmp
or
negb
inc
and
xchg
sarl
cmp
add
hlt
push
arpl
fisttps
fiaddl
scas
mov
and
loope
mov
pop
movsl
subl
jne
addr16
fimull
push
mov
pop
enter
xchg
dec
jns
xchg
xchg
sub
sub
xor
or
add
and
xlat
and
inc
adc
mov
push
push
dec
cmpsl
scas
add
in
jnp
test
or
dec
xor
and
push
jae
jmp
or
insb
mov
xchg
cmp
pop
lret
fsubrs
addr16
lret
imul
mov
scas
pop
pop
jb
push
push
dec
adc
xlat
gs
mov
fs
sti
repz
icebp
pop
popf
jno
pop
xor
js
and
movsb
insl
daa
and
sub
xchg
or
mov
dec
lea
clc
cmpl
test
enter
enter
pop
or
jp
sub
adc
loop
ret
nop
push
fistpl
lret
dec
inc
ret
fisubrl
mov
jo
xor
and
jo
cmp
leave
cwtl
jg
or
xchg
add
adc
sbb
xchg
xor
rclb
jae
inc
rclb
mov
je
pop
xchg
xor
mov
test
aad
or
add
scas
dec
lret
pop
add
adc
fwait
cwtl
inc
push
outsl
or
mov
fidivrs
dec
dec
cmp
dec
frstor
adc
mov
add
mov
xor
mov
in
xchg
mov
int
jmp
and
idiv
cmp
int
mov
inc
xor
clc
sbb
pop
add
xchg
pushf
push
push
int3
jmp
pusha
inc
jg
xchg
loope,pn
rolb
add
mov
jnp
repnz
push
scas
inc
xor
sub
sub
stos
jo
or
scas
sarb
xchg
leave
dec
jecxz
pop
repz
cwtl
pop
mov
cmc
push
add
lods
and
or
repnz
outsl
push
adc
add
pusha
ret
ds
and
arpl
cmp
jmp
pop
add
aad
mov
cli
sbb
int3
pushf
or
push
scas
lds
jne
mov
call
int
stos
fwait
mov
mov
stc
daa
out
push
jno
push
int3
or
inc
jle
dec
pop
mov
mov
cmpsb
mov
adc
xchg
insl
jbe
das
sub
dec
sti
mov
mov
add
pop
mov
mov
hlt
out
push
jb
add
pop
loop
sub
jecxz
cmpsl
lret
ficompl
mov
gs
mov
inc
rclb
mov
cmpsl
rol
testb
ljmp
pushf
stos
sub
or
fmull
movsb
and
jge
or
sahf
adc
test
pop
fidivs
push
test
mov
int
ja
sahf
xchg
movsl
fsubrl
xor
lea
xchg
in
mov
xor
out
ljmp
int3
inc
and
js
loopne
xchg
mov
mov
mov
das
xchg
popf
xchg
cmp
rorb
movsb
dec
add
jae
lock
outsb
aam
js
cmpsl
jge
cmc
jae
inc
xor
rcrb
je
in
fisubrs
cmp
mov
cmp
test
mov
xchg
sbb
int
gs
testb
push
repnz
mov
dec
xchg
xchg
add
xchg
ljmp
sbb
dec
sbb
jnp
in
popa
jg
pop
jl
fwait
push
inc
push
insl
rolb
scas
or
sub
cmpsb
imulb
js
xchg
cli
dec
mov
dec
mov
aam
add
repnz
pop
ror
inc
or
in
adc
stc
into
test
xor
or
xchg
mov
mov
jae
lcall
or
jge
test
cmp
jg
inc
mov
jae
mov
xlat
nop
sarl
push
scas
insl
stos
mov
dec
push
dec
dec
dec
loope
dec
adc
addl
fcompl
lcall
xchg
push
mov
lret
test
xchg
xchg
adc
cmp
aam
test
mov
pop
stos
fs
frstor
xor
mov
loope
loop
xchg
dec
adc
cmpsb
hlt
out
mov
enter
mov
xchg
push
test
je
adc
push
push
mov
mov
mov
ficoms
sub
pop
mov
jecxz
or
int3
scas
push
adcl
xor
lock
jmp
mov
pop
movsl
cmp
cmp
push
nop
aam
inc
mov
or
ret
imul
mov
and
fmull
in
jnp
xor
repz
xor
mov
sub
xor
jmp
mov
inc
mov
filds
repnz
sub
adc
in
stos
cmpsb
jg
add
into
jle
push
out
vpshufhw
add
repnz
movsl
out
jecxz
cli
pop
cwtl
add
pop
mov
inc
jb
imul
and
lea
lds
lods
add
dec
rcll
mov
sbb
jnp
sbb
mov
push
mov
bound
rclb
test
jge
push
rolb
mov
arpl
pop
mov
cmpl
jne
sub
pop
test
outsb
sbb
dec
sahf
shll
dec
jp
xlat
pop
fldl
or
insl
cwtl
add
push
mov
mov
sub
push
pop
out
push
orb
xchg
and
cs
cmp
fcomi
xchg
test
mov
push
inc
sbb
push
lahf
sub
mov
xor
mov
xor
hlt
inc
fisubs
cmpsl
mov
xchg
inc
and
xor
out
push
fsubr
or
add
stos
sahf
mov
aad
dec
mov
xor
cwtl
jbe
lods
aas
pop
in
and
daa
sub
mov
imul
cld
jle
adc
xchg
imul
mov
lea
jo
mov
sbb
and
int3
jnp
add
adc
cs
dec
lock
imul
or
ds
fcoml
movsb
les
sbb
nop
movsl
lea
jno
push
inc
aam
dec
or
cmpsl
cwtl
adc
adc
pop
into
ror
mov
push
inc
cmc
cmp
pop
ss
sbb
enter
sbb
and
sarl
pop
add
out
aam
xor
or
sbb
imul
pushf
andb
adc
fcomps
xor
mov
mov
pop
aad
cmp
das
clc
and
insb
insb
stos
js
cmp
fidivs
pop
adc
or
pushf
xchg
sti
mov
jecxz
les
jecxz
mov
cltd
fs
fldt
cs
mov
jns
dec
int
je
inc
or
cmp
add
test
adcb
repz
mov
movsl
adc
mov
fdivrs
xchg
xchg
mov
das
inc
push
leave
sbb
add
mov
lcall
push
jno
sbb
scas
fidivs
push
pop
xchg
sarb
adc
inc
mov
or
sub
cli
mov
xchg
mov
mov
push
aad
cmp
sti
repnz
cmp
add
and
or
fcmovbe
push
lods
cmp
out
movsl
dec
ja
dec
imul
dec
leave
sub
xchg
inc
ja
gs
sbb
pop
pop
xlat
dec
adc
orl
and
jge
cltd
sub
push
outsl
addr16
and
mov
shr
fs
push
popa
rorl
divl
xchg
out
or
fs
mov
dec
lret
adc
and
pushf
scas
cmp
lret
movb
cmpsb
inc
or
pop
add
sub
test
int
pop
pop
cld
pop
or
loop
dec
xor
xchg
loope
ljmp
ds
rorb
sahf
sub
add
or
bound
into
sub
stc
mov
aam
insl
pop
cmpsl
or
std
outsb
inc
ss
adc
into
add
pop
jno
add
mov
fcoms
test
mov
add
and
enter
addb
sbb
dec
imul
dec
inc
pop
bound
adc
loopne
jbe
aad
scas
les
sub
cmpsl
loope
or
stos
lret
fyl2x
dec
loope
fnstcw
aad
add
sahf
pop
mov
xchg
adc
fdivl
dec
popf
gs
arpl
add
in
jns
rorl
in
out
xchg
sbb
cmp
movsb
add
aaa
ja
inc
scas
jb
adcb
jno
jno
scas
jmp
sbb
mov
add
and
push
or
sub
mov
mov
addr16
in
add
in
fidivrs
cmp
rolb
shrl
ret
insb
sub
into
jnp
jle
xchg
mov
cmp
adc
orb
adc
push
and
jnp
ret
mov
cmp
pop
iret
cmp
test
scas
jbe
jl
jmp
fildl
repz
fmulp
icebp
or
insb
stos
sahf
push
mov
jb
addl
xor
dec
sub
mov
jo
dec
cmc
push
jb
fcmovnb
js
or
cmpsb
out
xlat
dec
popa
aas
cld
in
shl
adc
pop
add
mov
fisttpl
cs
stos
sub
mov
rcll
dec
cmpsb
and
xchg
pop
xor
and
xor
cltd
in
sbb
and
filds
out
jp
ficompl
outsl
cmp
das
mov
insl
jecxz
jle
shrl
ja
xchg
mov
scas
mul
add
mov
lea
ret
jmp
jno
loopne
pop
sar
xchg
jmp
mov
sub
or
leave
cwtl
mov
and
push
fisttpl
leave
pop
mov
xchg
jmp
mov
call
mov
add
xchg
cmpsb
sti
daa
push
ficoml
xchg
enter
imul
dec
clc
js
mov
inc
or
aas
or
mov
pushf
ds
add
mov
rolb
pushf
pop
sub
xchg
jno
shll
pop
sub
xchg
ficompl
pop
adc
fildl
or
xor
in
push
mov
dec
ja
movsb
sti
out
adc
insb
gs
jg
xor
xchg
pop
dec
jge
movsl
ja
cmpsb
ja
lods
mov
cmpsb
cmp
scas
ret
out
repnz
push
sbb
mov
push
or
mov
nop
pop
cltd
fsubs
adc
mov
pop
push
daa
call
and
scas
sbb
scas
cmpsl
das
shll
jp
xor
mov
push
sub
mov
enter
sub
jmp
mull
cmc
pop
lock
and
pop
out
xchg
repnz
imul
xchg
or
xchg
sub
std
stc
push
ja
xchg
insl
lea
dec
icebp
xor
ljmp
dec
ret
fs
or
adc
aad
jl
push
adc
mov
or
fisttpl
test
dec
in
ret
or
int3
ja
push
sub
dec
aad
es
cld
js
mov
jmp
int3
int
push
add
popf
rcrl
fwait
dec
sbb
cmp
cs
xchg
out
mov
xor
test
sub
xor
ficomps
or
mov
xchg
ficomps
pop
and
cmpsl
xchg
dec
sub
rcll
sarb
xor
fwait
sub
das
sbb
cmp
fisttps
sub
pusha
sub
mov
aad
jecxz
scas
orb
push
push
xlat
sbb
sbb
or
jb
dec
push
stos
movsl
jnp
and
add
mov
mov
inc
mov
imul
inc
or
iret
jle
push
push
out
cli
cmp
loope
xchg
mov
adcb
test
add
pop
sbb
jecxz
cltd
divb
pop
and
pop
pop
push
or
inc
xchg
and
cmpsb
xchg
inc
pushf
fcompl
lods
sbb
add
shrl
mov
int3
repnz
and
bound
les
stos
pop
push
mov
mov
sub
in
aaa
shlb
sub
mov
cltd
leave
add
leave
inc
aam
ss
arpl
repz
das
stos
lods
js
aaa
call
sub
xchg
jecxz
cmp
dec
pop
out
in
sbb
push
into
inc
adc
or
inc
pop
mov
movsl
bound
push
shll
mov
out
out
fldlg2
ss
mov
dec
xchg
sti
mov
shlb
push
jno
jo
clc
jl
daa
dec
cs
push
jmp
sub
jp
enter
test
out
xchg
jecxz
jp
rclb
jo
pop
in
imul
fidivl
dec
jno
aaa
stos
call
jb
fdivl
cmpsb
xchg
xchg
mov
push
aas
push
cli
lcall
push
pop
lds
jg
adc
jl
mov
shr
adc
cmc
notb
and
hlt
push
shrl
stc
cltd
dec
loop
sbb
es
pop
into
rorl
into
adc
cmpsb
lds
ljmp
add
mov
mov
cmp
xchg
sub
and
lods
adc
and
sbb
imul
out
cmp
jecxz
cli
aaa
sbb
stos
push
xchg
mov
mov
out
mov
jnp
xorl
dec
fcmovne
rcll
cld
cmp
roll
mov
push
push
enter
frstor
movsl
dec
rolb
push
fisubrl
mov
fwait
xchg
cli
pop
les
loope
addl
add
ja
jmp
scas
andb
sub
mov
inc
or
mov
icebp
mov
out
mov
add
movsl
popf
cs
cmp
and
rorb
call
cld
or
inc
insb
fdivrs
dec
xchg
sub
or
popl
ret
xor
mov
mov
mov
shrl
sub
mov
outsl
dec
scas
push
mov
cmp
lods
lret
and
daa
cmp
loopne
outsb
jo
dec
jnp
xchg
push
fs
mov
aam
mov
loope
test
mov
push
ror
push
into
cmp
cmp
mov
data16
and
lret
jmp
into
xchg
repnz
mov
lret
and
dec
mov
or
cmc
leave
xchg
and
xor
lret
add
jne
lock
rorl
push
mov
lret
jp
incb
ja
cmc
jae
dec
aad
insb
data16
mov
pop
jg
lret
test
and
mov
rorb
shrb
jmp
insl
int3
pusha
push
sarb
or
ss
jns
loop
std
test
shll
inc
mov
fwait
inc
add
add
leave
adc
mov
xchg
out
sbb
pop
or
jbe
fadds
xor
loope
out
mov
rcrb
mov
xor
stos
insb
call
pop
push
in
xor
jo
lea
xchg
shll
and
cmp
cmp
xor
clc
leave
xchg
inc
int3
pop
jmp
xor
mov
xor
stc
or
in
jo
test
sbb
stc
fisttpll
cli
adc
ret
and
mov
xlat
imul
cmp
iret
cmpsb
sub
push
cmc
or
jmp
xchg
pop
add
insb
insb
add
popf
sbb
add
push
nop
adcb
popa
js
lret
addr16
in
jge
dec
insb
lock
pop
and
dec
mov
pop
mov
cmpsb
adc
push
add
dec
sbb
outsb
adc
cmc
cltd
xor
mov
push
mov
mov
mov
push
inc
sbb
xor
cmp
sbb
movsl
xlat
ss
add
andb
mov
xlat
adc
sbb
js
je
pop
push
ja
cmpsb
stc
push
aad
cli
out
pushf
and
mov
sbb
and
call
fldl
sbbl
or
push
loope
pushf
inc
sbb
cmp
xchg
out
cmp
mov
stc
les
mov
stos
push
sub
imul
xchg
dec
and
sbb
jg
shlb
lods
imul
movsl
add
addr16
cmpsl
cs
push
scas
xchg
jecxz
cli
pop
lods
or
sub
int
or
loope
add
addr16
pusha
shl
push
jecxz
pusha
movsb
pushf
push
inc
cmpl
shrb
sbb
cmp
shlb
push
sbb
shl
fcoms
push
inc
push
dec
and
dec
jbe
test
mov
push
sub
cli
inc
push
dec
jecxz,pn
ss
pushf
clc
aas
movb
pop
out
jge
ljmp
push
pop
mov
jecxz
js
addb
cmp
adc
cmp
push
mov
out
arpl
int
cmpsl
adc
mov
out
mov
inc
pushf
nop
mov
lahf
xor
out
jno
loopne
dec
or
adc
or
int
jmp
aas
rcrb
repnz
dec
or
outsl
loop
mov
mov
inc
jne
jae
adc
xor
lea
push
push
ret
xchg
cmp
mov
sahf
mov
inc
lods
cmp
call
pop
push
iret
push
push
adc
fildll
jmp
pop
in
or
or
rcrb
in
mov
movsb
cwtl
or
cmp
add
sbb
add
cmpsl
int
and
call
icebp
fwait
shl
pop
aad
sbb
dec
cmp
jle
adcb
mov
add
push
push
lock
dec
cmpsl
add
daa
add
mov
push
les
dec
cmp
mov
adc
pop
lahf
add
pop
sbbl
sbb
cltd
out
sbb
imul
mov
ret
pop
out
leave
inc
call
cmp
add
mov
movsl
push
inc
sbb
push
loopne
lods
mov
jge
stos
test
push
cwtl
mov
dec
in
jnp
cmp
std
jge
cmc
mov
std
cmp
inc
adc
mov
add
add
dec
sub
xchg
dec
jb
cmp
je
cmc
sti
cli
jmp
cmp
dec
and
mov
push
imul
xor
pop
pop
mov
pop
in
out
ja
sub
aas
outsb
dec
jne
sbb
nop
ret
xchg
fidivrs
stc
xchg
shl
adc
test
jns
xor
jecxz
mov
cwtl
lahf
and
dec
mov
push
fcompl
in
cmp
pop
cmp
xor
insb
rorb
inc
pop
insb
repz
shlb
fistpl
jmp
and
mov
mov
pop
jecxz
push
mov
pushf
and
or
jno
dec
cmp
jne
loopne
je
and
mov
pop
mov
std
sti
js
mov
push
pop
scas
out
sub
sub
pop
outsl
dec
stc
adc
xor
cmp
mov
addl
jbe
xchg
ljmp
add
repz
push
stos
and
stos
add
or
lret
enter
out
lock
test
imul
inc
or
mov
pandn
mov
cmp
dec
gs
stos
add
ficompl
inc
xor
dec
dec
xorb
and
jmp
jmp
std
mov
hlt
movsl
aad
or
ret
aas
cmp
sub
loopne
sti
mov
dec
test
je
loop
mov
pop
sbb
aad
arpl
and
pushf
ds
sbb
or
mov
mov
pop
push
mov
std
xchg
test
lcall
and
jb
ja
jmp
jne
imul
mov
add
and
pop
or
ds
mov
cmp
mov
dec
int3
xchg
les
pop
cmc
scas
jo
or
push
imul
mov
and
sti
xchg
popa
fisttpl
insl
and
repnz
fistl
repnz
insl
in
sub
or
mov
sub
test
or
ja
jp
jp
cmp
mov
xchg
lods
add
adc
mov
cwtl
or
aaa
mov
imul
inc
cmpsl
or
xchg
repnz
cmpsb
and
xchg
mov
loop
repnz
add
fsincos
jno
fs
out
mov
sub
outsl
repz
fbld
in
fst
inc
cmp
leave
jge
sti
adc
jp
pop
push
push
and
aas
mov
lahf
repz
jo
enter
mov
aaa
dec
out
sbb
cmpl
vcvttss2si
push
adc
ret
jno
ljmp
test
lock
loope
xchg
mov
push
inc
in
sub
sbb
aam
ficompl
push
stos
pop
mov
test
movsb
inc
aas
movsb
ja
jo
mov
mov
pop
inc
test
je,pn
mov
pop
xchg
sahf
ljmp
or
nop
mov
inc
mov
enter
jo
jo
inc
lock
or
fcmovnu
xchg
in
jle,pt
push
std
mov
cs
fwait
jg
insb
inc
xor
pop
daa
dec
adc
aad
cmova
dec
ds
pop
ret
jno
cli
in
lods
pop
lret
dec
imul
cmp
adc
push
movsl
inc
sub
pop
arpl
arpl
fcoml
insl
loope
jnp
ret
andb
inc
jo
pop
js
cmpsb
inc
out
mov
xlat
daa
and
and
mov
cwtl
test
and
pop
pop
sbb
sbb
or
lods
out
cmp
sub
scas
scas
add
negl
aas
in
xlat
fistl
shl
mov
das
mov
aas
jbe
push
int3
jnp
jb
out
test
loop
and
jecxz
pop
mov
mov
jmp
inc
pop
ret
addr16
ds
jbe
jo
mov
cmp
and
stc
lret
fwait
xor
sbb
mov
ret
cmp
incl
data16
insb
lret
insb
jo
out
xlat
inc
inc
cmp
xchg
jge
aad
dec
inc
pop
xor
jnp
aaa
jnp
test
mov
iret
adc
pop
js
jbe
pop
dec
jns
pusha
mov
mov
dec
add
xor
js
pop
aam
sbb
mov
testl
dec
pop
adc
add
mov
push
and
inc
sbb
aad
sbb
andb
sti
or
mov
outsl
mov
mov
adc
xchg
popa
outsl
cld
push
mov
test
lahf
sahf
sbb
inc
lock
pop
dec
mov
fistpll
cmpsb
daa
outsb
idivb
lods
inc
rorb
cmp
pop
scas
test
leave
mov
mov
push
outsb
or
gs
lock
dec
push
enter
bound
sahf
sub
data16
sub
push
ficomps
pusha
mov
or
mov
xor
imul
xchg
jle
xchg
iret
cwtl
shrb
shrb
jmp
popf
rol
adc
movsl
clc
jle
int3
mov
xor
mov
xor
ret
rorb
cmpsb
xor
ss
and
xlat
add
dec
pop
daa
out
outsb
cmpsl
sbb
mov
loopne
add
mov
ja
ds
lods
ljmp
cwtl
lock
js
xor
aaa
ja
inc
stos
cmp
xchg
dec
adc
xchg
mov
cwtl
xchg
jle
ret
hlt
fisubs
lea
jle
fs
sub
cmpsl
fistpl
push
and
scas
xchg
add
or
hlt
and
rorl
xchg
mov
adc
pop
push
test
xor
loopne
sti
outsb
pop
cmp
pushf
jle
mov
ss
cmp
in
lock
pop
dec
mov
movsb
mov
adc
cltd
push
add
cmpsb
enter
dec
cld
xlat
pop
push
sub
notb
dec
dec
subb
iret
pusha
pusha
jecxz
or
movsb
lret
repnz
ja
jns
call
les
lea
sub
sub
dec
dec
addr16
mov
xchg
aas
stc
mov
add
or
or
jo
add
sub
insl
test
cs
pop
cmp
and
test
lret
aad
push
mov
rcrb
imul
lret
adc
orl
xchg
or
ljmp
xchg
lret
dec
js
fadds
cmc
les
iret
ret
loop
sub
adc
bound
push
pop
jmp
cmpsb
jmp
ret
out
xor
roll
lock
adc
lds
dec
rclb
mov
xchg
or
scas
and
and
pop
loopne
or
add
lret
pop
xchg
cmpsl
jo
pop
lods
mov
or
pusha
and
aas
pop
sbb
arpl
jg
cwtl
sub
lea
lds
aad
add
testl
mov
sbb
gs
xor
and
sarl
push
mov
dec
dec
cwtl
jp
stos
arpl
out
adc
add
xchg
jle
xchg
aaa
movsl
gs
insb
xor
cwtl
fwait
pop
sarl
pop
add
ret
jns
jb
out
adc
stos
icebp
std
inc
mov
in
push
and
in
add
jnp
adc
call
loope
xchg
mov
mov
daa
xchg
out
mov
pop
add
push
loope
pop
pmullw
pop
pop
cmpsb
add
in
fstpt
cli
push
mov
xor
sbb
into
or
push
aaa
loop
fildl
lock
in
pop
push
out
xor
out
orb
dec
sub
arpl
push
add
sub
jmp
fnsave
xchg
iret
insb
les
push
or
inc
sarl
shll
add
pop
in
ficoms
aam
pop
lcall
dec
xor
stos
sub
out
mov
testb
rcrl
push
or
in
test
jne
bound
je
xor
add
push
inc
and
xchg
movsb
mov
stc
add
adc
gs
mov
sub
xor
pop
or
and
or
iretw
push
push
movsl
sahf
jnp
and
add
mov
push
rcll
loopne
mov
push
daa
scas
shll
in
xor
xor
lods
sbb
inc
cmp
lahf
lahf
lock
popa
out
cmp
jle
cwtl
mov
jmp
sbb
in
add
push
push
mov
lahf
inc
xchg
stc
adc
sbbb
cmp
lret
popa
out
mov
dec
mov
mov
jnp
ret
in
jecxz
cmp
scas
jg
add
lret
mov
or
int
aad
push
push
in
test
les
ds
sub
jle
mov
aad
sbb
push
inc
movsl
call
mov
mov
pop
add
sbb
fnstenv
inc
shlb
mov
push
adc
and
sti
dec
fcompl
loope
enter
inc
out
shll
mov
loopne
push
pop
out
mov
and
sbb
cmc
inc
push
push
outsl
jge
out
daa
xorl
push
out
pop
imul
xor
js
stos
dec
aam
push
mov
sub
ret
fidivrs
pop
mov
dec
lret
and
adc
xor
sbb
sub
pop
inc
les
mov
pop
pop
adc
repnz
xor
xchg
add
js
xor
and
nop
fstpt
jns
pusha
pop
xor
ret
cmp
ret
jmp
inc
js
lret
xchg
ret
sbbl
jno
popf
out
push
cltd
mov
insl
dec
jecxz
push
pop
cmp
hlt
sub
sarb
into
and
push
out
mov
cld
test
pop
movsl
inc
test
push
sbb
stos
sub
call
lcall
push
rcll
loopne
rcrl
int
cmp
test
subl
mov
and
popa
sahf
pushl
or
jecxz
insl
arpl
scas
cmp
jo
sbb
insl
test
rdpmc
cmp
and
cltd
cltd
stc
daa
rolb
add
sti
adc
hlt
adc
push
fldl
fdivl
ficompl
push
in
sub
inc
inc
jae
inc
lods
test
aas
aam
insb
in
xor
mov
loopne
aas
mov
or
xchg
aad
push
cmp
iret
cmovge
push
pop
cmp
sub
mov
sar
ja
stos
push
dec
cmp
lock
ds
int3
lret
jae
push
mov
ds
xor
xor
movsl
js
lods
outsb
xchg
sub
insl
popf
frstor
mov
lret
lret
jne
mov
call
lcall
mov
call
loopne
jl
inc
fcomps
mov
fistpll
jge
adc
dec
dec
and
jp
repz
add
sahf
mov
stc
mov
out
lret
mov
sub
add
out
addb
mov
js
and
sub
add
fcom
clc
pushf
xor
add
mov
mov
mov
mov
adc
dec
push
jmp
imul
mov
jnp
xchg
test
filds
jno
outsl
dec
lds
scas
pop
test
mov
shlb
out
je
xchg
hlt
inc
scas
sbb
pop
inc
mov
sbb
fisttpl
lods
jl
adc
sbb
and
mov
fisttpll
mov
fimull
add
sbb
push
mov
fbstp
mov
out
jnp
fldenv
pop
jb
aaa
xlat
jge
fsubl
pop
nop
outsl
fidivl
cli
movsl
pushf
jg
xchg
aam
lods
sbb
repnz
out
cmp
dec
mov
jnp
add
sub
add
push
and
fstpt
jg
ljmp
mov
mov
outsb
es
push
lds
mov
out
dec
push
fs
xchg
imul
xor
fcoml
sarl
jecxz
jns
push
movb
inc
loop
pushf
clc
xchg
xlat
lods
dec
sbb
lock
inc
jg
cmpsb
cwtl
mov
xor
cmc
int3
jne
and
outsl
push
mov
dec
push
push
add
fs
popf
sbb
mov
jl
adcb
add
jle
sbb
mov
jecxz
sub
pushf
pop
mov
sbb
sub
dec
mov
push
out
mulb
out
cld
outsb
ljmp
sbb
mov
jns
mov
inc
mov
and
test
pop
lods
in
cmpsb
and
nop
mov
nop
out
sarb
mov
adc
mov
mov
inc
or
jno
cwtl
lahf
leave
les
jmp
sub
pushf
popf
add
push
jge
in
pusha
dec
ljmp
xchg
cli
xchg
xchg
imul
pop
jnp
repz
or
jb
jg
mov
pop
ja
lea
mov
shrb
test
xor
xchg
imul
test
ss
scas
insb
push
call
mov
scas
ret
mov
dec
jp
push
fldcw
xchg
sbb
pusha
enter
mov
iret
in
jns
or
jbe
and
fnstsw
das
ds
fdivl
outsb
rcr
nop
sbb
lret
jg
dec
ja
lds
pop
sbb
mov
pop
fbstp
les
mov
in
imul
arpl
lret
decl
sub
jo
and
outsb
add
or
inc
into
fstl
test
dec
xor
sbb
dec
popa
cmp
dec
lret
cmp
dec
jne
adc
out
cmpsl
dec
jae
pop
mull
mov
orl
sub
incb
lods
mov
xor
pop
push
adc
inc
and
mov
lcall
orb
pop
clc
jo
sub
loope
jle
cmp
nop
lods
imulb
push
pop
add
ret
mov
pop
call
out
and
pop
pop
cmp
jb
adc
adc
xchg
mov
pushf
icebp
bound
cld
xchg
enter
jecxz
loope
add
test
in
fwait
mov
mov
stos
and
xor
jl
sbb
cmp
pop
sub
nop
dec
jg
add
jl
lock
bound
push
sbb
inc
ja
sub
lods
mov
inc
cmpsl
xchg
insb
xor
xchg
lret
sti
and
adc
cmp
push
inc
or
popa
lock
out
xchg
mov
sbb
sub
xor
pop
adc
xchg
stc
daa
sub
rorb
adc
inc
cmpl
in
sbb
dec
cwtl
dec
sti
fcoms
mov
push
repz
inc
dec
and
jnp
sbbw
pop
adc
pop
hlt
push
mov
pop
mov
fisubrs
in
inc
int3
pop
inc
push
aam
sarl
das
cmp
pop
cmp
xchg
data16
ja
lods
ret
pop
cmp
lods
arpl
pop
test
mov
cmp
cmpsl
cltd
sub
mov
adcb
mov
mov
push
into
cmc
outsb
js
orl
repz
and
fists
repz
jb
lret
fwait
in
jge
sahf
in
pop
notl
push
sbb
xor
mov
push
jno
btc
dec
pop
std
scas
hlt
aaa
and
mov
mov
ror
push
xor
sbb
ja
inc
lret
mov
jmp
mov
dec
mov
sbb
xchg
pop
sysret
std
add
cmc
pusha
fildl
mov
xchg
adc
and
fimull
dec
insl
aaa
addr16
fisubrl
nop
popf
js
fs
dec
jmp
fstps
push
in
xor
sub
xchg
aas
xor
mov
out
cmp
inc
insb
lods
arpl
push
jbe
outsb
cmp
xlat
out
jg
test
inc
jns
push
push
add
psrlw
in
inc
stc
mov
mov
ds
push
pop
mov
inc
adc
sub
and
jg
xor
jo
sub
fsubrs
or
fcoml
ret
adc
inc
imul
or
aaa
leave
adc
fwait
or
stos
pop
repnz
cmp
jb
pop
mov
push
addl
addl
or
ja
adc
inc
sub
jecxz
sbb
mov
or
je
popa
scas
daa
dec
mov
adc
xchg
mov
test
outsl
test
lret
es
xor
push
lfs
dec
in
cmp
inc
add
xchg
jne
and
xor
popa
mov
out
movsl
mov
popa
add
rcll
stc
sbb
push
ljmp
mov
rcrb
scas
adc
dec
adc
push
mov
pop
outsl
aaa
sbb
movzbl
adc
icebp
pop
jge
push
aaa
mov
jl
jns,pt
mov
push
scas
lea
repz
mov
sub
in
aam
mov
ds
popf
pusha
and
push
pop
mov
orb
negl
mov
inc
cmp
pop
popf
leave
sbb
je
inc
popf
mov
cs
xchg
cltd
pop
lods
dec
mov
repnz
mov
cmc
sub
gs
cmp
rep
test
push
je
pop
add
or
jnp
inc
push
sbbl
in
test
dec
int3
push
mov
mov
loop
jne
psllw
dec
je
xor
mov
aaa
cld
loopne
mov
std
adc
in
jecxz
cmp
in
mov
aaa
addr16
imul
jb
jnp
outsb
cli
inc
ss
mov
outsl
loop
jo
ret
ret
daa
sarl
pop
mov
daa
leave
inc
mov
mov
fs
jbe
inc
shrb
xchg
arpl
mov
outsl
rolb
out
xor
mov
cs
popa
orl
insb
xchg
cmp
sar
cltd
mov
xlat
mov
mov
popf
pop
aam
insl
mov
add
int
lds
aaa
dec
lods
mov
std
aam
sub
add
mov
or
mov
and
cmp
push
sar
repz
nop
add
push
jns
dec
add
mov
je
or
inc
xor
insl
push
push
jbe
dec
popf
jno
lcall
jne
xchg
int
xor
fwait
adc
cld
fadds
fstps
rcl
push
enter
pop
cmpsb
push
xlat
mov
cli
sbb
xchg
scas
addl
inc
imul
mov
rcrl
gs
cmp
cmpl
out
cmp
test
arpl
push
xchg
xor
push
xor
inc
clc
mov
test
cmp
addb
mov
out
test
or
mov
aad
pop
dec
shrb
or
loopne
push
mov
sbb
add
or
xchg
push
call
sahf
jbe
fnstenv
xchg
cmpl
js
jmp
add
mov
leave
into
inc
cmp
adc
lahf
roll
fs
push
test
imul
sahf
mov
adc
jecxz
jge
lea
rorb
push
ret
jb
shll
fdivs
gs
les
roll
xor
mov
das
cmpl
or
sub
cmp
inc
cmp
out
inc
cmpsb
sbb
pop
rcll
mov
andb
jg
dec
sbb
int3
cmpl
hlt
std
lock
cmpsl
mov
cmc
andb
mov
jnp
icebp
sbb
xchg
mov
xor
and
inc
push
adc
mov
fwait
cmp
and
mov
stos
push
mov
fdivrs
mov
and
icebp
fsubp
pop
pusha
mov
js
popf
jmp
mov
dec
sbb
es
daa
fs
lds
add
ret
shll
xlat
pop
in
sar
mov
lahf
mov
mov
xchg
stos
jg
jo
jmp
aam
and
add
aam
leave
sub
gs
aad
and
insl
jns
inc
jge
sub
cmp
loop
sub
loop,pt
shll
mov
aam
cmp
cmpsl
scas
shl
pop
cmp
push
cmc
test
es
add
cmp
aas
cmpsb
idivb
rorl
xchg
mov
cmp
cmc
hlt
les
inc
ds
mov
add
pop
push
xor
loopne
fisttpl
xchg
pusha
das
mov
mov
push
jge
adcl
aaa
jl
xchg
lods
pop
movsb
xor
out
pop
or
out
aaa
lcall
adc
jo
xchg
fwait
in
inc
je
push
push
mov
fimuls
ret
inc
xlat
push
fistpl
xorb
addr16
rorb
jae
xor
inc
popl
xchg
lds
mov
mov
popf
jns
lea
shr
and
jns
lods
jns
lods
daa
stos
stos
mulb
data16
ljmp
mov
push
fimuls
xor
fistpl
rcll
sub
mov
out
cmp
mov
es
and
cmpsb
out
pop
add
ficompl
test
pop
mov
inc
mov
movsb
pushf
push
incb
adcl
div
or
cmpsb
mov
jl
and
mov
xor
std
mov
adc
mov
jle
push
dec
jge
sub
scas
mov
dec
int
push
xchg
ss
and
push
mov
in
sub
jp
push
cltd
push
and
sub
pop
jno
test
push
pop
loope
ljmp
sub
pop
call
cmpsl
pop
outsl
pop
add
ret
or
jle
xlat
mov
pop
inc
add
adc
xor
psubb
fcmove
insl
xchg
sbb
negl
mov
je
jns
xlat
and
test
fmul
pop
in
cs
jp
mov
dec
push
or
aas
in
mov
loopne
in
stos
xchg
rcll
adc
sub
lods
test
and
push
mov
popf
mov
clc
cltd
sbb
lods
mov
stos
call
xchg
xchg
cmc
insb
mov
jns,pt
stc
popa
fistl
imulb
jns
pop
dec
xlat
out
sub
xchg
mov
pop
xchg
inc
lods
popa
cli
push
cs
enter
loope
mov
cmp
ja
fs
push
aam
ficoms
and
cmp
push
pop
jns
push
push
or
push
ljmp
adc
rcrb
mov
sahf
mov
or
sub
and
cmp
push
cwtl
mov
push
xor
cmp
repz
jns
hlt
fisubs
push
int3
fnstsw
mov
or
mov
nop
dec
mov
repz
lret
subl
mov
popa
sbb
pop
sbb
pop
rcrl
add
adc
jb
ret
arpl
sub
inc
adc
std
out
call
sub
lret
and
repnz
cmpsb
xor
mov
aad
imul
or
mov
and
rcl
mov
pop
adc
lock
lret
cs
mov
inc
mov
cld
mov
pushf
cli
fiaddl
xor
add
mov
xorb
or
es
les
dec
imul
mov
cs
js
dec
inc
repnz
xor
sub
xchg
or
icebp
iret
stos
push
pop
pop
dec
ja
rorb
dec
dec
inc
xor
jbe
fs
js
jecxz
push
cwtl
cmp
andb
bound
out
js
push
pop
cwtl
and
mov
call
jno
stos
int
mov
sub
int
in
mov
pusha
push
jge
xor
pop
dec
lea
xchg
xchg
fwait
inc
adc
pop
je
out
pop
jmp
add
cmp
std
push
lds
fildll
dec
or
cmp
lea
les
mov
adc
push
aaa
mov
test
dec
or
push
inc
pop
xchg
rep
imull
lea
xor
xorl
jmp
es
aaa
shll
pusha
cmpb
jno
cmp
lret
lret
cmp
xor
imul
scas
das
in
push
adc
and
data16
aad
out
sahf
ja
lea
mov
jmp
pop
sbb
inc
jb
pop
inc
enter
push
adc
dec
pop
mov
sti
and
sub
test
add
insl
fnstsw
add
pop
rep
pop
xchg
out
ljmp
xor
jno
jo
dec
enter
jae
and
das
pop
or
push
push
aad
dec
fsubrl
subb
daa
jnp
dec
sbb
and
sbb
xchg
cltd
xchg
cli
pop
cmp
arpl
pop
rcrl
jbe
aam
sarb
adc
test
pop
sub
inc
pop
mov
sbbl
mov
pusha
sahf
cmpsl
xchg
das
mov
nop
in
push
roll
add
out
inc
or
insl
adc
push
test
xor
jp
jmp
in
pop
dec
fadds
mov
rclb
or
inc
mov
scas
xchg
fsubl
repnz
pop
mov
lds
push
dec
push
and
sbb
cmp
pop
call
mov
or
sub
jbe
xchg
add
add
shll
in
pop
aam
add
jp
push
sar
and
std
adc
jae
mov
arpl
jbe
mov
lods
dec
xchg
sub
stos
in
testl
dec
dec
cmp
dec
xor
outsb
fcmovu
mov
out
lods
push
push
jp
mov
jnp
pop
xor
jno
dec
xchg
sub
xor
inc
mov
lea
jno
popf
cwtl
lret
jnp
pop
push
cmpsb
add
lods
imul
xchg
cmp
xchg
sarb
mov
dec
jne
push
out
jecxz
mov
jmp
out
dec
faddl
inc
stc
mov
jns
ss
call
scas
sbb
mov
push
out
push
mov
xchg
repnz
inc
enter
imul
repnz
ja
mov
je
aaa
in
mov
or
jae
cli
xchg
or
pop
int
fcmovne
mov
insb
mov
cmp
sbb
dec
mov
mov
mov
add
jmp
xor
outsl
sbb
test
loope
mov
scas
mov
sub
in
pop
fmulp
fisubs
mov
jno
cmpsb
or
jo
ds
push
mov
fldl
out
mov
cmp
mov
test
std
dec
and
faddl
xchg
jle
daa
les
pop
and
sbb
inc
cmpsb
xorl
mov
sbb
movl
enter
or
clc
push
or
fidivrl
je
pusha
mov
xchg
xchg
fadds
negb
imul
xchg
daa
das
ds
sti
stc
mov
setbe
stos
aaa
aas
or
pmaxsw
inc
adc
dec
xor
pushf
xchg
fdivrl
sbb
stc
pushf
mov
add
mov
xchg
call
nop
xor
out
and
pop
ret
das
leave
xchg
lret
adc
ja
out
outsb
jp
or
ret
jg
out
addr16
pop
xor
push
inc
jp
imul
push
lret
inc
xor
cmpsb
movsb
mov
fldenv
dec
mov
in
and
pop
xor
jnp
or
dec
add
mov
inc
push
cmp
je
das
fwait
call
rclb
pop
push
cmpsb
adc
jb
fstpt
dec
dec
and
test
xchg
ret
pop
xchg
push
add
outsl
test
or
jo
jns
int
jo
shlb
inc
mov
rorb
divb
mov
cs
mull
popf
jb
call
jg
inc
sar
imul
sbb
incb
jnp
fwait
push
mov
lret
inc
inc
mov
dec
push
push
xchg
inc
xor
lret
push
jno
out
pop
pop
pop
je
lods
mov
or
fcoms
adc
xchg
jge
movsb
cmp
mov
sub
insb
mov
cmp
xorb
pushl
mov
fchs
cmp
push
aad
pusha
push
stos
dec
and
pop
or
pop
aaa
dec
arpl
insb
testb
cmp
arpl
mov
and
xor
shl
pop
cli
mov
lods
jecxz
aaa
mov
jae
jo
cmpsb
nop
int3
or
ljmp
jmp
cmp
cmp
insl
mov
test
push
outsl
adc
adc
inc
cmp
notl
sub
jno
fisubs
js
xor
sbb
lret
mov
xor
xor
out
lds
iret
jle
xlat
adc
shl
fwait
sbb
scas
or
sbb
mov
sarb
cmp
mov
rorb
rolb
mov
xchg
andb
jmp
inc
and
jge
inc
or
push
fwait
out
fidivrl
inc
and
cwtl
jne
xchg
mov
jecxz
push
xor
and
cltd
adc
and
and
xchg
scas
test
pop
sub
mov
flds
hlt
ss
jo
es
andl
xor
push
dec
dec
call
loope
jle
add
adc
mov
pushl
xchg
fcoms
inc
in
adc
or
loope
push
inc
hlt
and
popa
lcall
lahf
jl
aad
and
sub
js
loopne
loope
in
pop
das
push
push
jae
and
add
daa
push
lret
lahf
lret
xchg
repnz
mov
mov
shrl
pop
rcrl
push
fidivrs
xchg
rcrb
xchg
fs
lcall
mov
test
mov
cltd
push
xlat
mov
push
stos
daa
into
js
and
cmp
cld
lret
xchg
inc
repnz
mov
xchg
xchg
fidivl
push
dec
dec
std
js
hlt
rcll
rolb
cmp
jno
mov
and
and
mov
adc
mov
or
jae
push
mov
ret
pop
lret
push
jns
add
adc
enter
pop
mov
mov
sbb
outsl
jne
stc
repnz
lret
cmp
push
cmpsl
vmovupd
mov
adc
lret
mov
out
cmp
addb
or
js
mov
xchg
adc
inc
in
popf
sbb
je
mov
clc
xor
cmp
hlt
push
pop
mov
jmp
pop
sub
out
test
mov
imul
and
or
jae
pushf
test
xlat
xor
das
xor
cmc
fs
add
bound
sarb
and
ja
cmc
int
sub
fldt
xchg
lret
insl
adc
mov
into
xchg
insb
stc
cmpsl
cmp
pusha
mov
insl
sub
inc
xchg
in
in
nop
and
imul
adc
sbb
movsl
in
cmpsb
in
and
mov
jb
pop
push
push
cmp
mov
out
out
ret
aad
xchg
mov
adc
add
mov
xorb
mov
in
sub
mov
mov
ss
cmpsb
fldenv
mov
pop
dec
cmpsb
xor
mov
push
inc
cmp
adc
push
and
push
xlat
adc
pop
imul
push
adc
sbb
rcrb
xchg
bound
adc
xlat
mulb
inc
dec
and
outsb
out
jl
sbb
push
mov
pushl
xor
in
and
or
or
xor
fmuls
flds
ss
ficoml
in
xchg
insl
sub
push
sub
sbb
fsubrs
cmp
and
cmp
cmp
int3
js
push
cmp
push
jo
mov
orps
leave
push
bnd
sub
gs
push
mov
hlt
push
jnp
push
xor
iret
movsb
sbb
iret
movsb
in
outsl
or
sub
inc
sub
mov
dec
ljmp
add
nop
out
push
mov
xlat
les
or
mov
jl
mov
fistpll
mov
lods
data16
mov
push
rcl
movsb
aam
jmp
mov
and
in
subb
loope
jns
mov
and
adc
push
xor
test
sbb
fidivrl
fists
popf
shl
sbb
shl
test
ljmp
loope
mov
or
pop
fxch
xchg
mov
push
pop
jne
mov
and
jecxz
repz
mov
gs
scas
add
xor
out
cmpl
fwait
inc
xor
mov
fldt
daa
mov
push
mov
pop
stos
mov
pop
adc
dec
jno
lds
xor
lods
popf
fwait
mov
lretw
lret
ret
jae
repz
aam
fbld
jns
mov
lock
scas
aaa
cmpb
cmp
sbbl
scas
iret
pusha
lahf
stos
mov
popa
adc
jo
adc
out
in
sub
std
xchg
iret
mov
jmp
sbb
or
add
movsl
mov
push
jp
aad
popa
xchg
popa
jl
push
push
jecxz
and
push
aas
lods
push
aam
add
jp
mov
jp
in
es
dec
and
mov
fidivrl
jle
inc
jne
jmp
inc
xchg
push
cmp
inc
inc
scas
insb
emms
xchg
repz
adcb
lds
adc
pop
loop
lret
and
xchg
movsl
lahf
pop
addb
mov
lret
into
sahf
cmpsb
in
scas
add
mov
lcall
pop
imul
cmpsl
sub
out
decl
fsubl
cld
dec
loopne
push
pop
inc
dec
inc
mov
mov
jne
adc
inc
xor
inc
nop
pop
jmp
js
loopne
aas
jg
mov
cli
out
cmp
lock
int
cmp
aaa
lret
test
mov
and
stos
mov
mov
xchg
or
out
adc
shll
mov
mov
rcrl
and
and
sub
pop
dec
dec
loopne
adc
das
testl
jnp
pmovmskb
xchg
cmpsl
insb
das
stos
pushf
stc
mov
pop
outsl
adc
test
and
dec
movsl
mov
sti
push
mov
sub
jno
xorb
ljmp
rclb
push
xor
shl
inc
sub
fwait
les
call
mov
pop
jbe
je
mov
adc
mov
aad
jnp
iret
jno
mov
and
mov
jl
cmp
nop
or
dec
enter
xor
xchg
dec
jae
cmp
std
inc
mov
add
push
and
pop
aaa
sbb
nop
xchg
jno
jle
jne
loope
mov
sbb
jmp
imul
adc
popa
and
sbb
shlb
aam
ret
jle
aam
jg
and
mov
outsl
fisubl
pop
sbb
popa
or
fldenv
mov
xor
sbb
mov
stos
or
ja
dec
or
jne
outsl
xchg
add
mov
lret
psubsw
adc
push
pop
call
mov
nop
xchg
xor
and
dec
inc
out
pop
cmpsb
sub
push
lea
jp
dec
jne
les
das
xor
data16
mov
ficoms
imul
mov
stc
addr16
mov
push
ljmp
push
dec
xchg
mov
test
mov
scas
cmp
xor
push
sbb
xor
insl
fistl
mov
rcll
popa
xor
mov
pop
xor
add
pop
mov
hlt
out
nop
aas
or
xchg
hlt
push
inc
icebp
pop
mov
lock
jp
cltd
xor
and
pop
inc
loope
movsl
sbb
outsb
jl
pop
or
hlt
fists
cmpsl
mov
fsubrp
aas
push
fcmovnbe
aaa
sbb
inc
divps
xchg
and
andl
mov
ds
inc
ja
inc
data16
sbb
push
mov
push
sub
push
dec
jns
insl
int
fidivs
pop
ljmp
fcmovne
jns
mov
sub
cld
popf
fsubrl
inc
imul
and
mov
rcll
iret
jae
cli
inc
shll
inc
int3
inc
fisubs
mov
stos
and
fldcw
inc
das
es
fadds
enter
adc
mov
inc
sbb
jo
cs
pop
cmp
xor
push
loop
mull
popf
shl
int3
jmp
add
jl
insb
adc
ret
and
xchg
lret
stos
and
ss
scas
and
lock
call
sbb
lods
push
push
pop
in
pop
iret
mov
ja
dec
cmp
stc
xchg
je
sbb
jmp
sbb
aas
mov
cmpsl
leave
loop
fldl
jmp
shrl
mov
addr16
in
add
pop
das
addr16
push
out
mov
push
outsb
or
jne
bound
idivb
inc
or
push
mov
mov
fsts
add
cmpsb
mov
pop
jo
pop
int3
insb
xchg
sub
fistl
leave
sub
popf
cwtl
jle
sub
fists
xchg
adc
cmp
cwtl
sarl
xchg
loop
mov
pop
push
les
jbe
sub
inc
lock
int3
mov
push
pushf
test
mov
inc
cs
sub
mov
aaa
fidivrl
repz
fimull
cmpsl
call
outsl
sbb
pop
sub
xchg
test
dec
mov
adc
popa
mov
hlt
ja
push
inc
jg
push
adc
xchg
jp
hlt
dec
or
pop
jnp
lret
test
push
mov
mov
repz
out
shll
add
sub
push
sbb
dec
pop
lock
jno
inc
arpl
xchg
ljmp
sub
fidivrl
ret
jp
push
testl
dec
aam
stos
test
push
mov
ds
xchg
inc
dec
js
cmpsb
xorl
mov
mov
push
negb
add
xchg
mov
push
movsb
mov
sbb
pop
rol
insl
outsl
xor
inc
imul
add
shl
loop
cmp
inc
jne
jne
enter
xchg
push
jp
ret
and
sub
sbb
xchg
jl
das
or
xlat
bound
pop
andb
roll
sti
push
fsubl
jg
dec
subb
loop
js
push
dec
shll
or
outsb
xor
mov
push
push
mov
dec
add
in
mov
pop
daa
push
insl
ficomps
std
mov
addr16
mov
add
adc
and
sub
scas
js
sub
das
dec
sub
mov
mov
ja
cld
adc
mov
xor
push
out
mov
dec
sbb
call
xchg
rcrb
cmpsl
mov
inc
loop
js
adc
lods
ret
lret
scas
inc
gs
xor
and
scas
idiv
in
add
and
sbb
pop
lods
mov
repz
sbb
pop
or
in
jl
in
push
fstpl
adc
xor
cmpsl
push
divb
add
mov
jl
negb
loope
push
ja
push
clc
in
addr16
out
out
jp
dec
loope
imul
and
mov
movsl
aam
mov
xchg
stos
movsb
pop
insl
andl
mov
jmp
cmp
mov
add
lea
mov
aaa
mov
insb
in
addr16
mov
add
dec
or
pop
fisttps
jge
add
dec
inc
push
fs
rclb
cmp
and
int3
in
loop
fistl
sub
adc
xor
jl
xchg
mov
jmp
es
fstpl
aad
add
in
jo
push
fidivl
cmp
icebp
nop
pop
add
push
mov
jmp
cs
outsb
cs
mov
fists
rclb
inc
fwait
or
pop
mov
nop
adc
sti
push
dec
gs
jmp
push
icebp
mov
inc
mov
repz
pop
je
aam
jmp
mov
inc
cmp
iret
jae
in
push
push
cmp
ja
or
sbb
mov
retw
cmp
out
dec
ret
or
xchg
arpl
pop
rcr
sub
rcrb
push
cltd
stos
and
xchg
jle
mov
jle
pop
lret
in
inc
das
out
mov
inc
imul
mov
icebp
mov
sub
out
aam
in
dec
jbe
xchg
gs
loop
lahf
test
mov
ja
aas
dec
add
daa
jne,pt
dec
shll
push
jnp
cmpl
xchg
in
popa
cs
sbb
sbb
or
jbe
scas
pusha
pop
mov
icebp
test
sbbb
dec
cmp
std
loopne
sub
add
mov
jmp
and
and
popa
outsl
sbb
clc
sub
lock
outsb
gs
cmpl
fwait
movsl
push
out
sbb
fstpt
sub
pop
push
repnz
mov
mov
sbb
ret
int3
xor
aaa
ljmp
pusha
adc
lret
sbb
add
jg
and
addr16
popa
push
pop
les
test
jne
sub
aaa
sub
inc
jbe
das
mov
repnz
add
bound
push
xchg
test
loop
lods
in
pop
aad
stc
fsub
ja
push
les
ds
cmp
pop
stc
add
xchg
cmp
cmp
fninit
mov
and
arpl
popf
pop
daa
in
mov
aas
push
mov
test
scas
jle
cmpsb
cltd
dec
lret
cmp
test
dec
andb
mov
iret
mov
sahf
mov
push
and
jne
insl
cmp
enter
sub
hlt
and
decl
xlat
loop
jmp
and
movsl
je
in
lcall
setb
mov
pusha
xor
cmp
mov
repz
jb
mov
out
rolb
bound
and
xchg
std
fldt
pop
in
lods
test
cwtl
out
mov
test
adc
push
addl
jg
mov
mov
sbb
inc
inc
mov
rclb
push
jmp
jns
fbld
mov
mov
mov
add
inc
and
push
sbb
sub
scas
cltd
sbb
subb
inc
jo
add
lods
outsb
movsb
loopne
inc
es
push
push
dec
in
mov
push
jnp
dec
ljmp
int3
inc
mov
sub
pop
rcrb
insl
push
xlat
sar
mov
stc
divb
or
je
mov
idiv
shlb
xchg
sbb
jo
insb
nop
push
xchg
aad
nop
mov
cmp
out
xor
lods
sahf
inc
stc
mov
cmp
jl
mov
cmp
jo
and
xchg
std
push
cmp
adc
lods
cmp
fistps
push
imul
lock
insl
dec
cmpl
cmp
cmp
int
cmp
outsb
or
out
loopne
shlb
lds
pop
lahf
arpl
xchg
cmp
das
mov
hlt
pop
clc
fisttpll
and
cltd
movsb
push
mov
cwtl
loope
arpl
imul
in
bound
hlt
mov
jne
lret
cwtl
mov
pop
in
lret
inc
shrl
xor
je
mov
scas
fucom
gs
jnp
fadds
or
imul
and
out
lret
mov
jmp
or
xchg
sbbb
stc
mov
lret
adc
jb
and
movsb
insl
lahf
and
or
push
fadd
dec
dec
mov
repz
cmp
imul
out
xor
mulb
jg
sbb
daa
jmp
and
xchg
cmp
test
popa
pop
and
addl
ljmp
inc
pop
je
int
dec
test
mov
imul
cltd
call
into
out
mov
ss
cmc
mov
scas
xlat
mov
ja
adc
mov
pop
ud2
outsb
aaa
pop
mov
push
adc
mov
ljmp
ja
andb
mov
mov
clc
stc
dec
jbe
push
push
rcrl
mov
cmc
xor
in
mov
pop
out
jg
and
sub
setg
aaa
pusha
mov
jle
sahf
dec
mull
push
jl
es
mov
iret
enter
xlat
cmpb
mov
xchg
ret
in
mov
jb
mov
fsub
daa
pop
cs
out
mov
imul
lods
jne
adc
sub
sbb
aad
idivb
ss
push
mov
lods
es
movsl
nop
mov
jmp
ficompl
add
and
es
push
push
int
rcll
sbbb
jl
adc
aas
cmp
imul
inc
mov
subb
gs
mov
cmpxchg
jno
fidivrs
dec
out
adc
leave
mov
je
stos
jg
xchg
cwtl
rcrb
mov
cwtl
push
cmp
imul
loop
icebp
scas
popf
jo
rol
into
fdivl
inc
or
aaa
mov
insl
pushf
mov
dec
arpl
xchg
xchg
mov
pop
fadd
loopne
lea
xchg
jbe
stos
outsl
cltd
aaa
dec
inc
js
push
xchg
or
mov
add
sub
mov
sar
icebp
fcompl
mov
sarb
movsb
fsts
imul
pushf
mov
jns
xor
xor
mov
sarb
mov
inc
fnstsw
dec
and
jle
scas
add
jns
adc
negl
cmc
push
xor
push
and
fmuls
outsl
pop
out
sahf
and
lds
mov
icebp
push
push
fs
or
cltd
loop
sahf
scas
andb
je
cwtl
sub
addb
fdivrl
xchg
ds
jo
cmp
lcall
sbb
push
shll
pop
mov
xchg
xchg
adc
add
adc
push
daa
fildll
fsub
sub
ret
mov
iret
mov
lods
jne
out
inc
push
xchg
test
in
sti
bound
imul
nop
inc
ret
adc
or
lret
pop
xor
movsb
adc
popf
inc
popf
sbb
fwait
dec
cmp
xor
inc
cltd
mov
inc
jge
xchg
sub
std
mov
mov
clc
xchg
push
jecxz
lret
test
aad
sub
iret
repz
adc
sti
lock
leave
lcall
pop
mov
and
dec
mov
outsl
out
mov
test
aam
sub
lret
sbb
nop
and
jno,pt
sub
jno
jmp
inc
mov
pop
pop
daa
fstpt
sub
add
nop
loope
test
loop
out
add
shll
pusha
cli
fidivs
dec
push
xchg
add
pop
rcr
jne
mov
insl
sub
fcmovnb
andl
int
push
and
test
cwtl
mov
aad
pop
inc
and
cld
test
aad
mov
pop
inc
fwait
jne
push
out
out
sub
and
push
inc
mov
sub
pop
jbe
mov
adc
clc
push
sbb
cmp
lock
js
mov
dec
inc
mov
addb
and
divl
int
outsb
sbb
push
cmp
push
jmp
pop
jae
fnop
movsl
mov
cwtl
stc
push
sbb
sub
and
xor
sub
and
dec
lcall
fstl
jmp
ret
clc
jnp
std
cmp
icebp
cmp
clc
iret
aam
or
int3
fstpt
sbb
andl
xor
dec
add
mov
mov
xor
fwait
sbb
pop
mov
sbb
js
fdivl
shlb
out
inc
imul
push
cmp
popa
test
jmp
inc
shl
sahf
lods
es
jl
add
push
push
out
mov
xor
lahf
pop
xlat
cmp
loop
stos
xchg
lcall
sahf
xchg
das
orb
cltd
or
sbb
into
addr16
stc
stos
xchg
cmp
out
mov
inc
popa
pop
cmpsl
jbe
out
xor
shl
std
adc
shll
inc
jno
stc
cmp
xchg
push
adc
mov
leave
fcomps
fwait
push
add
push
enter
dec
mov
and
filds
or
jb
inc
jbe
adc
adc
in
push
mov
rcll
cmp
pop
hlt
lahf
popa
aad
mov
sahf
inc
mov
aad
mov
int
sub
dec
cmp
ds
xor
subl
mov
adc
mov
into
mov
mov
and
dec
imul
mov
rcrb
imull
mov
out
jp
xchg
mov
jecxz
loop
insl
jmp
pop
push
xor
sub
xor
inc
add
mov
adc
mov
fnstsw
lahf
repnz
shll
stos
cmp
mov
jmp
aad
test
mov
inc
cmpsb
outsb
jmp
jo
jnp
xor
push
inc
insb
mov
lret
pop
push
and
push
pushf
mov
sbb
xor
ftst
cs
mov
xor
bound
cmp
hlt
ret
xchg
pop
dec
jb
or
jp
ss
push
and
and
xchg
rolb
call
arpl
xor
cwtl
mov
pop
xchg
rcll
inc
sbb
mov
mov
orl
inc
mov
jl
test
cmp
push
subb
je
xchg
inc
xor
test
adc
ja
mov
pop
dec
out
test
aam
outsb
loopne
rclb
pop
test
dec
dec
cmp
mov
push
out
xchg
ds
arpl
push
loopne
cmpsl
mov
fisttps
inc
push
cmp
sub
lds
aaa
out
in
or
mov
out
scas
pop
ja
lret
insl
pushfw
pop
shrb
aaa
in
les
adc
repz
mov
and
ss
fsubr
leave
sbb
cmp
jg
imul
sbb
scas
addr16
js
loopne
or
sbb
push
push
xchg
nop
and
ds
ret
jbe
xor
push
aas
mov
cmp
xchg
adc
mov
sub
pop
in
into
divl
andb
and
push
rcl
repnz
lods
sub
cmpsb
fiadds
dec
sahf
testl
addr16
jg
ffreep
mov
pop
adc
inc
mov
mov
int3
fmuls
sub
xchg
xchg
inc
outsl
sub
sbb
pop
push
xchg
sub
lret
adc
lods
loop
jnp
pop
data16
in
push
push
or
push
jmp
push
push
pop
pop
jbe
out
fimuls
cs
in
xor
push
pop
pop
xchg
out
lea
inc
ret
xor
pop
jge
jb
sarb
shll
push
sub
mov
or
das
sbb
aam
lock
icebp
in
jbe
add
pop
cmp
or
pop
sub
addr16
test
outsl
inc
xor
lods
test
mov
test
adc
mov
push
push
lea
mov
mov
bound
ljmp
mov
and
insl
lock
mov
or
ss
mov
add
cltd
ret
mov
xchg
or
push
decb
mov
xor
fidivs
mov
push
faddl
cltd
mov
mov
imul
inc
jo
das
dec
adc
mov
imul
pop
test
cmp
jno
ficompl
pop
pop
lret
jo
sbb
push
mov
jle
scas
imul
xchg
ljmp
pop
loopne
or
repz
mov
rol
inc
push
lahf
lcall
jne
leave
pop
outsl
mov
cmp
testl
cmp
xor
rcrb
js
lods
adc
lret
cmc
sbb
rolb
insw
cmp
sub
xchg
fnstsw
inc
hlt
pop
sbb
mov
int3
je
push
ja
mov
inc
int
dec
stc
push
int3
maskmovq
divl
dec
xchg
popf
cmp
outsb
sbb
rol
inc
jmp
adc
push
cmp
shr
mov
lcall
inc
loopne
stos
aas
iret
test
je
cmp
int
test
fimuls
in
jno
in
int
lds
dec
ffreep
arpl
mov
lock
sahf
aaa
pop
xchg
test
mov
adc
scas
push
and
inc
add
inc
xchg
xchg
mov
repz
int
in
push
or
add
sbb
pop
clc
out
add
jns
cmp
cmpsl
stos
cs
stos
push
test
adc
mov
andl
add
out
enter
lds
stos
fstps
insb
pop
and
mov
lods
xchg
dec
mov
inc
mov
cmp
mov
int
imul
stos
mov
lahf
mov
jae
out
xchg
subb
pop
out
inc
arpl
insb
in
shrl
cltd
psrad
mov
fs
xor
test
inc
out
and
in
and
out
add
sbb
xchg
stc
push
xchg
adc
sub
inc
js
fwait
pop
hlt
ficompl
sub
nop
adc
movsl
ja
imul
jl
mov
cmp
repnz
insl
pop
dec
gs
fwait
les
dec
sbb
scas
xchg
loopne
and
andl
in
cmpl
repz
jns
mov
fcomps
outsb
loopne
iret
jmp
xchg
je
bound
clc
cmp
fucomi
inc
jg
mov
mov
leave
and
dec
cltd
jmp
fs
sub
sub
andb
popa
add
xor
sub
add
stos
jecxz
dec
fcoml
push
or
fwait
cs
fdivrs
push
nop
pop
pop
mov
nop
push
xor
or
shll
dec
gs
mov
test
cmpsl
sub
and
cmp
scas
pop
cmp
in
mov
in
decl
jle
adc
dec
inc
stos
inc
aam
lods
dec
call
cltd
xor
dec
xchg
aaa
lds
add
rcr
sbb
xor
test
adc
les
in
cwtl
jo
daa
pop
cmp
or
push
test
cmp
xchg
hlt
ds
push
mov
xor
popf
lret
scas
sti
and
sub
repz
rcrb
pop
ss
repz
and
std
sub
int3
pop
lods
bound
sahf
out
sbb
sahf
mov
out
gs
pop
test
scas
xor
xor
adc
mov
aaa
mov
xchg
nop
dec
push
fnstenv
cmc
stos
and
scas
mov
lret
ss
subps
jge
and
xchg
push
push
pop
sub
xor
fs
xchg
mov
daa
ljmp
popf
pop
cs
loope
movsb
mov
xchg
leave
clc
jg
lods
lods
inc
sti
inc
jb
test
add
jnp
push
mov
and
pusha
dec
pop
add
aad
js
xlat
xchg
or
test
sub
mov
jo
iret
adcb
fnclex
nop
push
jbe
mov
das
imul
notb
out
fsubrs
iret
jne
sbb
adc
adc
rorl
mov
ja,pt
sbb
imul
and
out
stos
jbe
xor
pop
or
pop
jae
mov
cmp
int
mov
mov
shrl
jge
xlat
jp
push
rep
lahf
sub
fisubrl
jge
xlat
clc
sbb
lds
mov
push
mov
pop
jmp
js
outsb
imul
add
push
pop
lods
jge
ret
js
mov
ror
xchg
out
jle
push
xchg
adc
pavgw
mov
mov
outsb
fcoms
mov
add
jl
rorb
and
or
pushw
aad
fildll
and
adc
inc
cmpsb
adc
adc
xor
in
mov
imul
outsb
stc
cmp
and
ljmp
sub
insb
pop
hlt
in
fcmovbe
mov
inc
push
mov
xchg
sti
inc
sub
fcompl
xor
ss
jmp
ds
xor
enter
bound
mov
sbb
sub
and
and
adc
test
mov
inc
xchg
inc
stos
insl
cmp
popa
jo
push
fsubrl
pop
xchg
push
mov
mov
add
stos
popf
dec
xchg
hlt
or
int
gs
lea
and
jmp
pushf
mov
and
pop
sub
sub
enter
inc
sahf
xchg
jg
mov
nop
and
push
push
divb
popa
xlat
mov
mov
sbb
sbb
mov
out
daa
cld
mov
mov
call
aad
dec
jecxz
shl
jae
mov
or
stos
scas
push
xchg
daa
xchg
repnz
loope
mov
into
add
adc
int
scas
mov
jmp
ret
inc
rep
dec
xchg
popl
jle
jae
or
xchg
mov
xlat
movsl
fdivrs
pop
push
cs
popf
push
cmc
ficoms
jmp
sub
sub
insl
pushf
stos
adc
ja
sub
ficompl
xchg
xchg
scas
aam
call
gs
mov
into
das
mov
mov
inc
sub
dec
mov
ret
pop
loope
idivb
mov
idivl
incb
xchg
dec
aas
push
push
xor
pop
fcomp
cmpsb
lds
cmpsb
xchg
or
inc
xor
and
mov
fs
fisubrl
fsubrl
sub
cwtl
dec
mov
pusha
fldenv
lods
cmp
iret
fcoml
and
lods
add
dec
xchg
call
dec
pop
in
dec
or
or
push
mov
enter
or
cmp
and
xor
xchg
gs
adc
xor
lds
sub
dec
std
mov
cmpsb
int
fdivp
fimull
pop
in
in
leave
xor
cmpl
xor
insl
fsubrl
lret
pop
shll
adc
sbb
jbe
les
je
fisttpll
dec
dec
ss
dec
lea
scas
mov
jae
cmp
push
xor
sub
xor
or
cs
leave
pop
xchg
add
push
adc
loop
ret
lods
movsl
and
das
ret
stos
paddsw
and
incb
rdpmc
mov
mov
jg
push
lahf
les
test
jne
out
scas
push
cmpb
xchg
pop
test
xchg
and
imul
vunpckhpd
cmpsl
mov
sbbb
cmp
fwait
cmp
inc
sbb
inc
xor
je
push
subl
and
push
cmp
mov
fcmovnbe
pop
mov
mov
mov
pop
xchg
pop
mov
or
test
or
rorl
xor
or
pusha
test
movsl
sbb
adc
mov
pop
scas
addr16
pop
sub
rorl
jns
and
cmp
lahf
sbb
push
pop
cmp
pop
jo
mov
out
popa
xor
aaa
mov
jo
xor
and
sub
jmp
aam
daa
pop
popa
push
mov
in
cli
push
imulb
jge
cld
mov
xchg
push
inc
jmp
loopne
imul
or
imul
fwait
xchg
cltd
xchg
push
and
or
or
bound
in
inc
add
scas
outsb
ljmp
push
xchg
adc
repnz
test
inc
negb
pxor
xchg
mov
pop
add
pusha
xchg
or
add
fdivl
jle
lods
add
stc
inc
inc
rcrb
pop
and
pop
or
xor
cli
or
ret
mov
cmp
sub
pop
fisttps
push
cmp
ljmp
add
xchg
xor
jae
andl
test
lods
cmp
icebp
mov
push
mov
imul
ret
out
jo
inc
mov
andb
stos
test
pop
in
dec
leave
mov
ds
lret
adc
shll
pop
pop
lcall
push
xchg
dec
hlt
ficoms
add
sti
imul
or
inc
mov
pop
and
push
pop
movsl
dec
call
es
jmp
push
imul
pop
loop
outsl
inc
leave
icebp
sbb
test
loopne
insl
jl
sbbl
out
stos
test
xor
out
nop
push
hlt
int3
mov
cmp
shll
lea
push
cmp
sbb
sub
negb
sub
pop
iret
push
imul
mov
inc
xchg
nop
lea
mov
pusha
movsl
mov
sbb
out
sti
push
les
loope
ss
xor
adc
xchg
push
jns
cmp
insl
out
sbb
mov
js
mov
jmp
cmp
outsb
cwtl
insl
add
mov
adc
inc
ljmp
outsb
ret
add
insl
shlb
lahf
shll
sub
push
mov
mov
in
in
push
xchg
fwait
nop
pop
outsl
jo
test
cwtl
bound
fmuls
adc
mov
cmp
sub
jecxz
popa
insb
xchg
pop
push
and
xlat
mov
cmp
sbb
movsb
mov
mov
push
sahf
loope
loope
movsl
test
xchg
mov
pop
inc
dec
xor
add
mov
inc
out
or
cmp
mov
bswap
inc
sahf
mov
cmp
and
mov
popa
neg
jle
and
popf
jo
lods
xor
out
cmp
rcll
stos
xchg
inc
dec
xchg
test
push
movsb
dec
cmp
push
mov
repz
and
mov
sbb
testl
cmpsb
sbb
test
bound
ja
lret
out
in
icebp
in
jmp
xchg
inc
movsb
adc
popa
inc
push
lds
add
and
fs
jns
outsb
add
es
movsb
xchg
cld
xor
push
aaa
pop
sbb
jno
es
jns
add
mov
iret
xlat
mov
popa
mov
mov
xor
sub
jne
add
mov
fsubl
sbb
xlat
lds
test
jecxz
mov
or
fnsave
popa
jns
aad
mov
add
pop
pusha
mov
iret
mov
add
addr16
jnp
push
push
mov
scas
pusha
dec
xchg
jmp
sbb
sti
mov
mov
dec
lods
push
in
test
fisttpl
fwait
loope
and
mov
lds
mov
notl
push
cmpsl
insl
aad
push
mov
cmc
cli
add
je,pn
xor
sbb
outsl
ret
or
jmp
jmp
cmpsl
loopne
cmp
out
mov
push
lahf
int3
ss
mov
inc
cmp
mov
fnstcw
addr16
arpl
mov
jne
sbb
fwait
addr16
jnp
scas
iret
xchg
daa
cmp
dec
pop
jecxz
push
sub
push
lcall
ja
rol
xchg
and
cmc
jns,pt
pop
inc
shlb
and
mov
iret
mov
rclb
add
jnp
ret
out
cmp
dec
loopne
mov
movsb
sahf
adc
movsb
int3
mov
dec
xchg
lret
scas
jbe
aas
sub
adc
pop
stos
das
push
pushf
mov
adc
loopne
addr16
fwait
or
xorl
sub
push
fbstp
dec
movsl
xchg
xchg
ret
jns
in
rorb
shl
movl
mov
push
shl
fstpl
into
xor
inc
cld
adc
ret
pop
movsl
mov
mov
jp
or
adc
cmc
adcb
gs
add
imul
call
pusha
sbb
jo
negb
xchg
into
mov
xor
or
insl
insb
jecxz
test
pop
shlb
push
add
and
mov
int
scas
jmp
push
imul
or
xchg
jno
stos
or
testl
adcb
leave
int
sarl
mov
and
jne
inc
subb
aam
arpl
test
inc
push
xor
pop
std
xchg
mov
pop
fisttpl
add
inc
push
xor
int3
mov
movsb
fs
sahf
ss
notb
nop
loopne
xchg
sbb
xor
popf
std
iret
fcom
icebp
ficoml
or
xchg
lret
xchg
jmp
jg
xor
inc
jecxz
fs
out
insl
lock
push
pop
popa
xchg
jl
xchg
in
shlb
adc
sbbb
adc
cltd
xor
cmp
xchg
pop
jo
shlb
sarl
pop
sbb
sub
jecxz
das
shlb
add
inc
xchg
imul
mov
xor
out
inc
cmp
lods
push
lret
jne
xor
inc
sarl
aam
mov
leave
cmc
dec
bound
in
inc
js
fstp
movsl
push
or
insl
stos
sub
sbb
and
dec
xchg
mov
test
stc
inc
aam
cwtl
lods
mov
enter
lahf
jno
lock
jmp
ljmp
cmp
dec
pop
dec
pop
or
pop
mov
and
and
je
sahf
jmp
shr
dec
push
cmp
pop
popa
jecxz
mov
xchg
int
lret
into
mov
loopne
sahf
into
fldl
sub
mov
aam
enter
or
pop
lret
cmpsb
xor
arpl
loopne
mov
inc
and
mov
mov
push
adc
push
testb
xchg
xor
gs
in
stos
fs
mov
out
inc
mov
out
ficoms
push
mov
mov
call
mov
cmp
jo
test
cmp
out
popa
fisubs
adcl
cmp
push
pop
xor
ljmp
rcrl
add
jle
dec
mov
jg
xchg
neg
rolb
add
sbb
inc
jle
in
cmc
or
sub
mov
mov
dec
sub
sub
insl
dec
lret
dec
mov
mov
add
addb
fdivrl
push
imul
pop
add
push
mov
push
rcrl
dec
pop
inc
repz
in
insb
add
xor
movsl
push
mov
inc
es
adc
stc
add
cmp
sub
cmpsl
mov
loopne
jbe
jg
rcrb
lret
adc
and
ss
fiaddl
push
ret
hlt
movsb
xor
xor
dec
es
icebp
sub
jl
mov
mov
daa
push
popf
lds
iret
sub
add
cmp
das
mov
dec
jnp
mov
in
stc
jns
outsb
pop
pop
sub
adc
lahf
out
sbb
adc
mov
pop
push
aaa
mov
push
jo
sbb
repnz
js
popa
fcoml
xor
lret
ror
stc
jb
cmp
js
nop
lods
js
and
shr
xchg
leave
pop
lods
xchg
sbb
mov
addr16
cltd
stc
shll
mulb
dec
in
push
sbb
es
mov
add
push
stos
mov
mov
push
pushf
or
clc
xchg
jmp
xchg
xchg
daa
add
aad
lock
int
scas
ja
ja
pop
sub
mov
inc
sahf
jg
cli
push
adc
push
repz
dec
push
mov
into
sahf
lcall
pop
out
mov
push
inc
or
fistpll
lods
and
lcall
lcall
adc
outsb
mov
es
xchg
mov
mov
dec
dec
test
mov
jmp
in
ds
out
jp
xchg
cmc
lea
jle
xchg
jnp
fnstcw
sbb
ljmp
xlat
push
xor
pop
out
cmp
mov
mov
xor
xchg
lcall
test
pop
xor
js
dec
sbbb
insl
fistl
mov
hlt
imul
cmp
xchg
loopne
mov
cld
leave
popa
les
mov
bound
sarb
pop
jmp
stos
or
xor
fwait
hlt
addl
jno
lods
leave
add
push
mov
fisubrs
dec
lods
or
mov
mov
outsl
dec
cmp
dec
cld
fwait
inc
jno,pn
mov
and
mov
imul
test
mov
jno
hlt
sub
dec
jl
cmp
pop
rolb
mov
movsl
push
cmp
int
mov
lock
mov
iret
mov
lds
cmp
test
aam
pop
loop
test
imul
jae
cli
add
mov
shl
jmp
inc
or
adc
add
mov
jl
adc
sbb
jl
push
out
cmpsl
jl
inc
inc
and
mov
adc
lret
mov
pop
inc
mov
divl
dec
test
mov
pop
mov
popf
inc
dec
pusha
lock
pusha
mov
push
mov
movsl
fwait
cli
mov
test
pop
in
pop
vpunpckhqdq
dec
loop
into
pop
mov
or
xor
and
scas
mov
into
fsubrl
dec
push
fs
xchg
or
pop
cmp
ss
push
ss
shrl
jmp
outsl
ja
mov
negb
out
call
xchg
out
or
add
push
int
adc
negb
aam
dec
jmp
cli
pusha
sbb
push
mov
ljmp
cmp
cmp
iret
add
in
dec
bound
in
mov
out
in
sub
imul
and
adc
sbb
mov
sti
fstpt
inc
sbb
insl
pop
dec
dec
adc
xchg
fidivrs
adc
notb
ret
mov
iret
out
push
cmpsl
lret
repnz
sahf
adc
int3
ds
jns
pusha
cmp
and
insb
mov
fidivrl
mov
and
in
lcall
push
ds
sahf
sub
scas
sbb
shll
jl
mov
rcrl
add
inc
mov
sub
push
lcall
jle
pusha
out
notb
cmp
ret
fsub
sbb
insl
outsb
push
jg
jno
lret
sbb
test
jae
test
xor
loop
cmc
jae
mov
sbb
in
pop
inc
dec
cmp
xchg
push
inc
sbb
pop
jne
adc
push
xchg
cwtl
orb
mov
push
inc
dec
int
inc
or
lds
lahf
xor
test
xor
in
mov
mov
xor
enter
xor
or
dec
add
cmpsb
dec
movsl
inc
cmp
lods
into
js
nop
lods
stos
out
je
dec
xor
adc
pop
jmp
in
pop
enter
scas
inc
repnz
mov
mov
xlat
test
addb
jno
sarb
lret
lds
push
and
test
es
outsb
jae
mov
add
movsw
inc
in
adc
mov
xchg
xchg
pop
lods
lods
popf
xchg
dec
in
repnz
jmp
sub
adc
pop
jne
adc
fs
xchg
pop
mov
test
cmp
mov
jno
out
in
add
mov
ss
ret
jg
or
ja
loopne
mov
lahf
js
cmpsb
inc
andb
push
push
test
dec
clc
pop
mov
add
jge
jnp
pusha
lods
in
pop
pop
divb
fs
mov
push
sbb
out
xor
push
pushf
ds
out
cmc
jge
icebp
push
loope
push
insb
inc
notb
lcall
ja
xchg
inc
inc
aam
outsb
sbb
cmovg
cwtl
push
fcoml
lods
inc
dec
pop
es
sub
movb
out
into
and
icebp
sbb
loope
or
xlat
imull
dec
inc
pop
js
push
mov
cltd
movsl
push
cmp
lods
xor
popf
jge
popf
mov
out
test
lret
in
aas
daa
cmp
push
daa
inc
mov
les
mov
jns,pn
sub
and
out
icebp
fidivrs
mov
cli
and
das
cmp
sbb
lahf
out
fisubrs
and
mov
push
xor
mov
xchg
sub
repz
jge
fildl
lea
out
mov
sub
movsb
js
lea
imul
cmp
xlat
lock
adc
push
mov
and
cmp
xor
cmp
rcll
adc
stc
scas
jp
or
es
imul
dec
push
pop
fwait
std
ss
scas
out
lret
imul
sbb
adc
das
hlt
push
push
mov
mov
test
and
ljmp
lea
push
mov
or
push
mov
mov
shlb
or
pusha
out
mov
adc
push
mov
push
imul
leave
loopne
xor
es
call
into
outsl
fcompl
push
lods
cmc
xor
mov
fsub
inc
ret
xchg
adc
and
sub
in
xor
adc
sub
mov
nop
jp
mov
iret
jl
sub
dec
stos
popa
aam
inc
push
xor
xor
test
jne
dec
push
mov
cli
cmp
std
jno
nop
or
mov
repz
das
out
clc
mov
push
rcrb
push
jmp
int3
adc
jns
dec
fcoml
pop
sub
cmpsl
mov
lcall
lahf
adc
pop
mov
jb
js
jle
inc
push
and
arpl
lcall
in
outsb
sub
fsubrl
push
aad
fwait
mov
andb
idivb
clc
mov
pusha
aaa
fcoms
jmp
adc
popf
in
inc
and
jp
sbb
sub
cli
mov
out
pusha
enter
sub
cmc
cmp
cmpsl
js
xchg
int
inc
data16
xchg
jns
js
imul
rclb
add
enter
ss
mov
sahf
aas
or
push
test
push
fdivl
adc
pop
inc
cwtl
xor
ret
jne
sbb
inc
fldl
cltd
pop
xchg
aas
popf
nop
mov
and
inc
mov
sub
push
adc
dec
and
adc
pop
ljmp
icebp
js,pt
out
push
add
sub
in
fnstenv
xchg
or
repnz
sbb
loopne
sahf
aaa
sub
rclb
enter
stos
lea
and
int3
cmc
mov
inc
scas
mov
movsb
mull
and
mov
je
push
and
pop
xlat
loope
sub
mov
cmpsl
shlb
cmpsb
xchg
jne
cli
mov
inc
sti
jne
and
sbb
lock
push
out
roll
sbb
outsl
pop
stc
cmp
fcmovnb
ret
mov
dec
xchg
daa
aam
xor
rorb
cld
xchg
dec
outsb
dec
scas
imul
lcall
shrl
movsl
adc
gs
out
xor
je
push
or
cmpsl
push
imul
lock
xor
call
push
aaa
sbb
fwait
xor
and
idivb
mov
and
insl
nop
stos
andb
add
lahf
out
dec
sbb
sbb
mov
das
cli
xor
or
je
fdivl
pop
jb
xor
xchg
sub
mov
lea
mov
mov
repnz
iret
imul
xor
popa
popf
mov
cmp
insl
dec
or
jns
dec
xchg
sub
js,pt
add
fmuls
jmp
je
ljmp
int
lods
or
or
fbld
fldt
mov
loopne
jge
xor
rcr
push
jge
or
insb
pushf
xchg
out
dec
dec
pop
shll
jae
inc
mov
pop
push
movsb
xchg
ss
mov
jb
mov
call
push
je
gs
repz
fs
outsb
pushf
loope
xchg
rcl
jle
sbb
cs
jo
mov
lcall
pushl
push
jp
or
fisubs
movsb
cmp
fwait
jnp
xchg
or
push
insb
jne
popf
cmp
pop
into
ds
sub
pushf
mov
mov
push
pop
fucomp
mov
cmc
xchg
and
fs
pop
aaa
enter
imull
in
shl
sub
scas
into
push
cmp
daa
add
in
mov
out
ljmp
adc
add
scas
les
sbb
pop
jecxz
pop
scas
mov
int
in
sub
dec
xchg
inc
dec
cmp
ss
jnp
fmulp
or
jno
inc
adc
sub
hlt
sahf
inc
pop
cmc
jae
ljmp
pop
test
ljmp
sub
sub
mov
int3
dec
mov
imul
adcb
shll
lea
cmp
les
xchg
add
cli
js
xor
jns
fldl
add
fnstsw
in
and
das
and
add
int3
jae
dec
sub
mov
xchg
or
leave
sub
popa
stos
cmpsb
ds
add
cli
insb
inc
das
cltd
push
jl
and
xor
ror
ret
jne
fcompl
adc
jg
xor
decl
les
scas
or
popf
addr16
ds
push
popa
loope
push
pop
jo
loop
or
sahf
pop
mov
mov
into
cmp
inc
mov
jnp
sbb
adc
out
cmp
clc
sbb
outsb
imul
pop
jl
jne
dec
pop
roll
add
sbb
mov
out
cmp
addr16
lret
fdivr
inc
shll
pop
pop
and
jle
jbe
sub
dec
cmpsl
push
and
mulb
or
dec
cmp
mov
popf
cmc
aad
cmp
imulb
jns
cltd
xlat
or
sub
gs
pop
adc
les
dec
dec
jae
add
lock
movsl
jecxz
ret
xorb
ds
stc
jp
cmp
xchg
loop
out
pushf
dec
in
repz
dec
push
out
adc
xchg
sub
cmp
ds
stc
and
mov
mov
aad
push
and
sbb
and
jecxz
and
leave
bound
daa
sbb
inc
push
pop
mov
icebp
xchg
jecxz
insb
stc
sub
ds
cmp
mov
mov
push
pop
inc
fisubrl
je
inc
xchg
sub
jmp
stos
lcall
push
mov
inc
in
ret
divps
int
enter
out
cmpsl
add
test
imul
ja
jae
inc
push
and
mov
mov
jae
mov
test
lds
inc
lods
mov
dec
dec
out
repz
ja
out
push
js
jg
push
jnp
sub
hlt
mov
sbb
test
push
and
or
and
xchg
aas
loope
jl
sub
int3
or
in
push
mov
lcall
xlat
pop
mov
push
popa
mov
inc
aas
mov
push
hlt
mov
pop
sbb
add
add
mov
dec
sbb
adc
lods
outsl
mulb
inc
pop
sub
pop
jno
fisubrl
pusha
lods
xchg
adc
out
call
ljmp
scas
xor
sub
push
fsubl
int
cs
test
add
jno
or
sbb
jmp
or
or
scas
cmp
and
addb
pop
xchg
or
in
pop
ljmp
xor
pop
mov
push
xor
into
push
cmp
or
sbb
ss
mulb
cmpsb
sub
pop
xor
clc
dec
pop
movsl
je
inc
loop
cli
mov
cli
int3
xor
mov
popa
mov
repz
and
test
mov
mov
push
sbb
mov
movsb
call
mov
xchg
cmpsb
loop
scas
or
les
push
aad
lods
lods
insb
push
xor
pop
pop
xchg
rorl
aaa
sbb
add
mov
add
stc
push
fistl
fbstp
pusha
push
sti
faddl
lret
call
daa
into
mov
sbb
scas
lret
cli
lret
leave
outsb
inc
jle
mov
inc
fmull
icebp
pop
ja
lret
ljmp
in
inc
dec
mov
push
push
mov
adc
das
pop
jmp
sbb
or
shrl
push
pushf
and
out
leave
pop
add
mov
pop
or
jle
dec
xor
test
xchg
nop
mov
in
push
cli
loopne
fisubs
fildll
jb
xor
adc
fnstcw
inc
xor
mov
cmc
or
add
es
mov
outsb
push
loop
dec
js
push
fxch
mov
push
add
xchg
sbb
fwait
pop
mov
test
or
sahf
and
mov
mov
iret
xchg
jge
and
divl
divl
sbb
xchg
insl
jmp
lods
mov
push
push
mov
test
in
movsb
aad
in
negb
jmp
sar
push
pop
out
xchg
lock
test
outsb
pusha
addr16
pop
mov
cmp
adc
rclb
bound
sbb
mov
or
aaa
push
rcrb
xchg
movsl
or
push
shrl
cmpsb
sub
loopne
test
jno
xchg
xchg
or
mov
lahf
adc
push
aad
mov
outsl
inc
scas
loope
scas
addr16
add
pop
das
adc
and
add
cwtl
jmp
stos
lods
mov
ss
cli
je
leave
xor
sbb
xchg
gs
push
sub
sti
ret
dec
cmp
jecxz
push
sub
ljmp
push
std
rep
xchg
lock
mov
fwait
test
or
add
jmp
add
imul
adcl
push
add
mov
ljmp
popa
ljmp
xor
sti
inc
or
lea
pusha
cld
add
dec
mov
js
cmpb
pop
adcb
incb
ret
jmp
fnstenv
push
ret
jp
subl
xor
pop
in
test
xchg
dec
xchg
cmc
cmp
bound
ret
scas
mov
nop
pop
fisttps
inc
loop
adc
jb
mov
insl
rorl
imul
sub
cmp
sbb
jecxz
xchg
cmp
movsl
dec
xchg
mov
outsb
mov
je
or
mov
jo
mov
test
xlat
sbb
xchg
mov
jb
adc
mov
int
pmaxsw
test
test
fbld
push
in
orl
xor
enter
dec
inc
rcl
adc
inc
xlat
push
add
mov
rcll
xchg
js
cmp
addr16
aam
sub
ret
pusha
cmpl
subl
in
jne
sbb
or
scas
inc
xor
enter
sub
sbbl
add
xchg
pop
fstpt
xor
mov
rcl
out
inc
push
cwtl
pop
sbb
repnz
inc
out
sbb
sub
add
xchg
pop
add
mov
iret
push
sahf
insb
roll
mov
insl
jg
or
es
lret
or
lret
icebp
pop
nop
aaa
mov
jb
jns,pt
pop
loope
repz
loopne
mov
lcall
push
xor
int
insb
shr
pop
mov
and
xor
jmp
pop
mov
in
pop
or
sbb
and
inc
sahf
add
mov
rorl
push
sub
or
lock
adcb
cmp
jmp
ja
fcoms
test
cmpb
and
fsubr
pop
mov
mov
dec
divb
lahf
mov
jb
dec
adc
out
rclb
stc
cmpsb
rclb
cmc
leave
cmp
mov
mov
das
movsl
pop
fisubrs
das
icebp
jg
push
mov
mov
jge
imul
outsl
adc
mov
or
pop
jecxz
ret
inc
das
in
leave
cmp
push
sub
add
mov
out
rorb
clc
shlb
arpl
push
gs
sti
jae
fidivs
push
mov
xor
jl
mov
cmp
enter
or
addr16
adc
daa
repnz
sub
pop
pop
iret
iret
cmp
and
and
or
movsb
pop
and
filds
jns
add
fisttpl
in
push
sub
outsl
stos
roll
sbb
inc
push
cld
xchg
cmpl
sti
sub
mov
fdivp
xchg
mov
enter
xor
movsl
adc
inc
push
sbb
push
dec
pop
in
adc
jb
xor
arpl
xor
pushf
cmp
xlat
sub
mov
jle
fisubrs
mov
clc
mov
pop
jno
xor
loop
arpl
or
mov
xlat
lcall
cmpsb
loop
fldcw
xchg
shlb
cmp
movsb
dec
lcall
mov
xor
mov
stos
test
inc
and
fcmove
xor
popa
cs
out
loop
loop
fs
movsb
xor
pop
aaa
fisubrl
gs
aad
push
not
mov
inc
divl
inc
push
out
stos
add
mov
xlat
mov
jl
out
cmp
inc
pusha
out
outsl
stc
subl
or
mov
mov
jmp
popf
sub
jle
fistpll
mov
bound
xchg
mov
adc
jl
adc
cmp
sub
push
in
stc
movsl
push
scas
inc
fwait
xor
in
rcrb
xchg
test
xchg
xchg
cld
sahf
mov
int3
pop
pop
and
addb
loop
pop
scas
mov
push
push
or
popf
pop
xor
inc
pop
sarl
fs
int3
sub
push
jbe
les
dec
enter
add
cmp
outsl
jo
test
adc
xchg
mov
je
inc
add
jp
cmc
or
dec
daa
iret
out
loopne
mov
or
test
xor
andps
add
mov
insl
shl
in
imul
cmp
call
or
test
fidivl
and
dec
test
sbb
mov
loope
or
call
in
test
loopne
enter
movsl
pop
xchg
in
call
sbb
pop
andb
mov
cwtl
jno
add
push
jmp
dec
lds
pushl
lock
sub
push
aad
sbb
cs
lock
dec
jmp
jb
out
inc
jl
test
aam
shr
add
cmpsb
jmp
rolb
sub
call
sub
mov
bound
es
not
mov
xor
fwait
xchg
addr16
sbb
jge
cld
and
pop
jecxz
aaa
pop
sub
cld
int
fs
or
in
lsl
mov
sbb
sbb
cmc
pop
fists
sub
call
insb
or
sub
ljmp
jne
mov
rolb
fsubrp
daa
push
jl
xchg
add
dec
xlat
add
pop
test
cmp
push
jg
repz
jae
test
ja
xchg
mov
pop
xchg
mov
mov
xor
ja
mov
fnstsw
ja
cmp
aaa
in
or
sub
cmp
sub
dec
sub
push
add
cmp
mov
std
mov
jne
test
jbe
fidivrl
sahf
arpl
xchg
test
mov
jno
lahf
mov
addr16
test
pop
add
bound
out
xchg
jnp
inc
add
add
sbb
pusha
arpl
adc
lahf
and
ret
repz
jge
and
push
mov
push
inc
aaa
mov
add
frstor
fs
and
imul
dec
iret
hlt
test
aad
mov
or
cmp
loope
inc
pop
in
dec
xlat
cmp
insb
adc
sti
mov
popf
add
mov
xchg
icebp
pushf
mov
or
dec
divl
les
cmpsl
cmp
push
adc
fwait
movb
pop
jbe
sub
in
pushf
movsb
xchg
adc
xchg
push
jb
leave
aas
bound
int
cli
jae
rclb
cmpsl
sbb
xchg
fcmovnbe
lods
dec
adc
call
fists
pop
roll
pop
mov
add
pop
sarb
adc
adc
ret
clc
sti
xor
pushl
mov
sbb
adc
lock
out
sbb
inc
push
sbb
into
dec
sti
nop
jae
cmp
dec
pushf
sub
bound
outsb
decb
xchg
add
in
pop
pop
call
adc
xchg
cld
push
imul
fstl
and
mov
and
das
adc
or
push
or
mov
das
movsb
sbb
shlb
pusha
sub
pop
and
rol
test
mov
punpckhwd
fisubs
in
pop
cmp
popa
xor
push
pop
cmp
jnp
pushf
sbb
mov
mov
aad
test
repnz
and
sub
push
loopne
xchg
jmp
xchg
iret
jg
and
and
icebp
aas
inc
es
mov
cs
dec
call
pop
rorl
xor
orb
nop
lea
ret
loop
inc
out
push
fwait
sub
jmp
jl
pop
decl
push
divl
and
xlat
mov
xor
sbb
stc
cwtl
adc
enter
add
pop
ficompl
xchg
add
cmp
dec
or
sub
sbb
lods
call
push
test
lret
sbb
sub
pop
pop
inc
push
or
addr16
mov
mov
movsl
dec
fsubs
mov
cld
jmp
in
fs
ljmp
mov
notl
lret
gs
jb
dec
xorl
lret
repnz
cli
mov
clc
push
and
orl
mov
rolb
inc
idivb
push
les
fs
mov
pop
mov
push
cmpsb
sbb
in
das
leave
dec
or
push
call
data16
popa
fstl
lret
imul
mov
xchg
and
std
cmp
mov
in
pop
es
cltd
mov
mov
add
push
outsl
ljmp
cmp
push
dec
fcmovb
cmp
dec
add
dec
inc
fildll
sub
sbbl
sahf
and
seto
xchg
sub
test
adc
gs
imul
adc
daa
fisubrs
shll
sub
mov
xchg
mov
push
and
into
ret
mov
out
mov
xor
dec
jle
aad
dec
in
jo
mov
add
mov
sub
sbb
js
clc
jae
incb
das
aam
out
fimuls
sahf
mov
xchg
repnz
cmp
leave
and
js
rcll
rolb
inc
add
ficoms
arpl
clc
insl
loop
mov
push
fwait
sbb
mov
push
loop
lcall
cmpsl
in
or
mov
cli
push
mov
ss
mov
clc
out
push
outsb
lock
out
test
popf
mov
mov
negb
jo
aas
add
outsl
mov
cmc
pop
pop
test
adc
cmp
shlb
xchg
in
push
js
xor
inc
movsb
pop
or
sahf
es
cli
push
out
mov
in
shrb
inc
mov
sti
fisttpll
fsubs
in
lahf
pop
pop
jae
adc
mov
cmpsl
lcall
aas
and
out
xlat
push
xlat
mov
xchg
daa
fwait
cs
and
gs
rcr
fwait
pop
mul
loope
xchg
les
mov
mov
pop
pop
pop
xor
mov
stc
inc
test
nop
mov
les
fsubs
fbstp
xor
fidivrs
mov
ficoms
sbb
out
inc
xchg
xchg
les
bound
cmc
lods
pushl
loopne
mov
dec
mov
je
mov
testl
xchg
aam
addr16
test
jne
dec
hlt
iret
xchg
xchg
sub
nop
mov
jecxz
rclb
out
aaa
shll
pop
xor
inc
cli
jmp
pop
xorl
not
test
test
mov
mov
inc
outsl
enter
ret
dec
loop
pop
xorb
popa
maxps
les
jbe
cmp
leave
aas
mov
sub
and
jle
pop
dec
sti
mov
std
out
cmp
add
xor
xchg
stos
loop
sub
mov
cmp
andl
sbb
stos
ret
sub
roll
sub
lods
push
out
ficompl
daa
xchg
imul
and
xchg
dec
nop
push
ja
pop
filds
pop
pop
out
push
pop
or
mov
cmp
jb
lods
mov
mov
ficoml
js
xchg
pop
sti
xchg
lcall
xchg
mov
das
clc
push
cmpsb
fcmovb
adc
jl
repz
sub
inc
and
shlb
pop
pop
and
imul
cltd
xchg
mov
xchg
icebp
or
es
lahf
repz
mov
add
jo
sti
mov
lret
pop
cli
mov
xor
pop
inc
addr16
insl
or
jle
mov
pushf
push
xchg
jp
and
hlt
cltd
fldt
imul
add
jle
out
or
jp
xor
repnz
cmp
insb
imul
xlat
or
nop
mov
pop
pop
fcmovne
fstps
jb
out
dec
jl
jnp
int
sub
sub
push
xorl
xor
or
adc
cld
and
mov
mov
pop
loope
xchg
pop
add
xchg
mov
xchg
push
out
jbe
mov
xor
adc
in
pop
mov
inc
pop
push
xchg
sub
push
mov
and
adc
enter
ljmp
push
inc
push
jl
xchg
add
in
pop
pop
mov
pop
enter
push
lods
icebp
or
lcall
add
cmp
into
mov
xor
repz
adc
leave
or
insl
scas
lret
push
jno
ss
rcrl
push
inc
add
pop
mov
mov
jbe
pop
inc
int3
sub
jae
sbb
sbb
push
mov
inc
loopne
mov
out
dec
mov
sub
mov
mov
out
or
fbstp
mov
lret
rorb
ret
call
sbb
sub
mov
dec
sbb
mov
arpl
dec
push
addb
dec
out
js
push
ret
push
mov
cli
or
pop
sbb
push
mov
and
insb
movsb
rol
int3
stc
mov
test
sub
sti
mov
xor
popa
mov
cmpsl
imul
add
fdivl
lock
mov
mov
cwtl
je
fimull
mov
lret
lods
in
add
and
aad
add
pushf
outsb
jno
popf
or
into
fwait
out
outsb
inc
out
insb
mov
ja
out
roll
sbb
add
jnp
loope
mov
mov
pop
orl
sub
repz
lret
mov
in
jne,pt
into
lret
or
ljmp
cmp
and
mov
adc
loop
enter
dec
pop
jg
sub
inc
ss
lods
pushf
aad
movsb
sbb
inc
iret
arpl
mulb
sbb
orb
fsubrl
popa
xchg
push
cmp
mov
sbb
dec
xor
lods
ds
xchg
adcl
mov
addr16
lret
hlt
lods
cmp
out
ss
aas
dec
out
jnp
xchg
push
adc
out
das
mov
sbb
das
jne
test
aad
je
fwait
pushf
jmp
lea
xor
fwait
cmp
stos
mov
and
cltd
mov
sbb
cs
and
or
dec
out
subb
jmp
xor
push
ss
jnp
pop
xchg
cs
jae
or
in
mov
jecxz
imul
xor
arpl
lcall
inc
cmp
popf
and
push
xchg
popa
mov
lds
mov
stos
arpl
subb
sbb
push
incl
rcrb
gs
aaa
pop
pop
mov
pop
mov
jnp
fstps
in
repz
cmp
jmp
adc
xchg
sbb
push
in
cmpsb
adc
adc
sub
pop
movsb
xchg
mov
rorb
popa
fstpl
movsb
pusha
sahf
jns
mov
pop
xchg
data16
lret
add
cmpsl
add
rcr
popa
cmp
xor
push
stos
lcall
les
fmull
sub
stc
push
adc
inc
test
data16
in
fwait
pop
scas
add
in
nop
xchg
push
add
test
inc
push
out
lret
out
mov
mov
idivl
adc
ljmp
cmpsb
sub
inc
xchg
pop
push
inc
cwtd
mov
outsb
adc
sbb
jmp
mov
or
hlt
cmc
inc
push
repnz
or
popa
fdivl
inc
loopne
out
pop
outsb
xchg
inc
in
in
jg
cmpb
fisttpll
sub
not
fldt
loopne
cmpsb
mov
lods
or
or
popa
inc
jbe
loop
subb
fisttpl
in
mov
add
pushf
mov
pusha
and
inc
loope
push
insl
jbe
imulb
out
scas
or
and
into
js
xchg
jns
repz
push
mov
bound
and
jns
arpl
jns
test
xchg
outsb
stos
xchg
roll
cmp
sahf
dec
add
adc
fisttpl
movl
in
jge
fwait
cltd
jns
jmp
imul
or
jmp
adc
mov
or
jmp
pop
sbb
gs
ljmp
movl
addr16
lret
in
jae
mov
mov
hlt
shrb
push
insl
fiadds
or
aad
lods
aaa
mov
sub
mov
cmp
into
dec
cmp
inc
pop
sub
dec
push
aad
mov
popf
sub
adc
jle
cmp
mov
out
jb
mov
stos
insb
faddl
das
popf
sbb
gs
xchg
jae
sub
jle
mov
xor
xchg
adc
outsl
enter
pushl
outsl
shll
cmp
lahf
jle
mov
add
or
sub
xchg
sub
mov
add
adc
jne
icebp
jge
call
aad
xchg
iret
xor
pop
retw
int
cmpsb
in
std
push
outsb
ds
subl
mov
dec
fwait
or
inc
jb
fiadds
outsl
dec
ljmp
inc
inc
mov
and
mov
sbb
inc
or
int
sub
movsl
inc
inc
jnp
and
addr16
in
inc
je
imul
mov
and
push
mov
sub
mov
push
inc
xlat
rcrl
push
mov
xor
jnp
xor
std
mov
sbb
ds
mov
mov
ss
dec
add
mov
loop
mov
ss
ds
je
xchg
js
xchg
loop
ret
or
lds
gs
mov
cs
mov
cmpsb
call
lea
mov
dec
push
pusha
lret
xor
fiadds
out
pushf
out
loopne
mov
fnstcw
push
lods
mov
and
loop
popa
pop
mov
pop
mov
mov
sbbl
pop
into
mov
sbb
fsub
dec
dec
ss
cwtl
and
arpl
sbb
dec
sti
roll
cwtl
add
adc
je
xor
xor
xor
add
push
cmp
sub
ret
shrb
dec
inc
shr
imul
xor
and
and
dec
fldl
mov
dec
fimuls
imul
movsb
into
jge
lods
push
idiv
out
jmp
leave
pop
in
stos
cmc
adc
cli
mov
or
add
dec
adc
lods
andb
xor
imul
test
fnsave
repz
inc
arpl
adc
pop
mov
pop
loop
mov
mov
inc
lcall
pop
movsl
and
shll
popa
ds
js
and
int3
insl
sub
mov
cmpsb
sbb
ret
rcrb
scas
ret
outsb
mov
jp
jmp
mov
incb
mov
cmc
and
fs
inc
mov
dec
les
leave
insl
xchg
cs
stos
jne
nop
hlt
mov
je
je
fstl
jne
and
xchg
mov
pop
inc
mov
pop
sbb
movsb
xchg
xor
jno
arpl
mov
jbe
pop
inc
mov
xchg
push
nop
and
inc
dec
xchg
imul
cli
enter
push
and
scas
gs
push
dec
jg
lcall
das
sbb
call
cmp
xor
movsl
std
cmp
mov
in
jno
push
popa
lds
daa
ret
push
jns
xchg
push
mov
push
lock
dec
cmp
push
rcrl
mov
xchg
sbb
mov
rcrl
push
test
repnz
rorl
test
pusha
cmp
imulb
mov
xor
leave
stc
adc
pop
add
cwtl
lea
les
sub
rcr
jmp
or
aad
jecxz
nop
insb
mov
je
dec
adc
push
sub
out
shll
dec
lret
add
sbb
xchg
adc
outsb
loopne
mov
cli
pop
pop
pop
adc
add
stos
xlat
pop
das
lock
cwtl
mov
mov
pop
dec
jbe
imul
lcall
mov
push
cltd
idivb
mov
push
cmpb
mov
mov
les
pop
lret
nop
nop
jo
inc
out
jge
adcb
fcomp
popa
xor
addr16
ja
push
dec
cmp
adc
adc
nop
mov
and
sbb
nop
cmp
pop
and
fcomp
lcall
cs
gs
mov
rclb
out
jbe
add
push
rcrb
hlt
lock
jbe
sbb
add
adc
das
dec
pop
fs
mov
sarb
jmp
fdivrl
mov
outsb
fiadds
cmp
mov
loop
cmp
insb
adcb
jp
test
add
pop
push
in
add
int
ljmp
fwait
inc
mov
jp
mov
outsb
ds
stc
push
mov
hlt
dec
cmp
mov
mov
aas
xor
ret
cmpb
repz
gs
popa
stc
sbb
add
fadd
push
insb
mov
cmp
sbb
int
cmp
xor
stc
jge
insl
inc
jo
jb
add
stos
push
aaa
sbb
in
inc
mov
xor
inc
add
cli
gs
and
lods
loope
jmp
movsl
jb
lods
sub
push
cmpsb
lcall
out
repnz
pushf
imul
pop
lds
inc
rclb
les
lods
arpl
mov
add
mov
enter
mov
push
mov
inc
shll
cs
add
push
mov
and
das
aaa
pusha
xor
jb
cs
sarb
push
andb
test
addr16
test
daa
jne
sbb
sbb
and
adc
aaa
mov
cmp
lret
add
pop
lods
fcompl
push
mov
xor
dec
fldenv
xlat
aam
iret
nop
inc
mov
adc
inc
fisubrl
imul
out
popf
in
adc
xor
subl
adc
cmp
jae
fimull
mov
xor
das
inc
push
lods
test
xor
fsubrl
je
enter
stos
mov
in
mov
inc
and
sbb
mov
stos
inc
inc
inc
das
inc
lcall
scas
sub
xchg
mov
pop
out
mov
rcl
icebp
push
push
int3
mov
jle
xor
in
jo
stc
arpl
push
arpl
movsl
ja
in
inc
jnp
xor
mull
mov
mov
mov
jns
stos
push
in
jbe
mov
fwait
mov
loopne
gs
movsl
sub
and
aaa
push
jge
mov
call
lods
dec
push
jmp
cmp
arpl
cwtl
push
fists
push
mov
fwait
mov
movsb
xchg
xor
push
adc
shl
push
lock
pop
mov
mov
pusha
mov
sbb
loope
xchg
lods
loopne
ret
test
and
mov
pusha
xchg
push
sbb
fists
sub
pop
add
add
lds
dec
cmpb
add
lods
mov
mov
cld
jb
ret
or
pop
icebp
mov
daa
pop
adc
lds
mov
sarl
fsubl
xor
pop
dec
jecxz
shrl
out
xchg
ret
lahf
or
into
dec
fiadds
cmp
push
clc
mov
cmp
xchg
jnp
push
sbb
push
nop
test
pop
sub
add
fadds
js
cs
je
sahf
sbb
jg
jbe
test
shl
xor
sbb
mov
mov
and
ret
sarb
add
test
xchg
xchg
cmp
sbb
mov
lds
pushf
mov
in
adc
fwait
and
or
or
sarb
mov
popa
jecxz
stos
inc
sub
sti
pop
inc
xchg
outsl
call
push
iret
pusha
cmpsl
fs
dec
xchg
mov
bound
test
ret
inc
jmp
test
pushfw
push
stos
xchg
add
mov
mov
es
jbe
mov
adcl
xor
iret
ds
fwait
inc
push
scas
xchg
stc
negl
mov
mov
xor
and
addr16
pushf
mov
aaa
mov
jle
push
sti
xchg
arpl
sqrtps
in
call
mov
into
mov
rolb
add
cmp
push
add
xor
jmp
mov
xor
fsubp
jae
and
cmp
mov
pusha
inc
xchg
test
gs
xchg
xchg
dec
jnp
xor
lcall
inc
int3
mov
xlat
sub
hlt
xchg
mov
ret
push
ja
mov
loop
fdiv
sbb
test
ret
shl
mov
mov
mov
xchg
cmc
xchg
mov
js
dec
xlat
jbe
inc
sahf
lock
or
adc
addr16
xor
mov
push
pusha
mov
jbe
aad
pushf
pop
lret
push
push
xorl
inc
pop
das
or
adc
dec
mov
jl
outsb
or
mov
jmp
mov
pop
cmpsb
cmpsl
pop
mov
jae
lahf
mov
data16
push
push
or
and
leave
jbe
fidivrl
icebp
mov
mov
jg
outsl
or
aad
push
fnsave
andb
push
sahf
mov
cs
xchg
icebp
jg
fs
dec
push
mov
mov
stos
jle
mov
out
hlt
inc
inc
sbb
aaa
cmc
sbb
mov
outsl
pusha
je
dec
adc
inc
dec
push
jg
adc
xor
jp
dec
pop
fimull
rcrl
lcall
arpl
mov
push
hlt
xor
daa
mov
negb
pop
add
pop
cwtl
sahf
sbb
das
pop
add
push
outsb
das
pop
and
out
stos
insl
pop
dec
icebp
mov
or
fucomi
mov
inc
iret
pop
sti
mov
arpl
ljmp
addl
cmc
call
sbbb
sub
cmc
xchg
and
std
cmp
lret
inc
push
icebp
sub
ds
adc
addb
ret
jmp
jns
in
mov
lcall
jb
xor
fdivs
aam
das
fwait
jbe
call
push
xchg
pop
jecxz
shlb
sub
jne
inc
pushf
addr16
xchg
push
scas
das
int
fwait
jb
xor
push
out
mov
fcoms
ss
mov
sbb
xchg
sbb
ja
or
mov
rcrb
sbbb
xor
ret
xchg
loopne
sbb
daa
mov
push
je
and
add
or
xchg
in
push
push
loopne
dec
cwtl
cmpsb
cmp
mov
sahf
add
add
sbb
mov
push
xor
faddp
movsl
pop
inc
outsb
fisttps
leave
mov
jnp
test
push
mov
push
ja
push
push
adc
mov
pop
int3
shlb
sbb
insl
jecxz
cmp
xor
stos
cwtl
push
mov
or
pop
cmp
iret
jp
lods
xchg
lahf
jge
adc
push
movsb
push
mov
ret
fwait
adc
jne
sahf
std
addr16
push
xor
jle
imul
js
and
aas
mov
sub
inc
rcrl
pop
aad
add
test
inc
and
inc
and
xchg
mov
cmp
iret
or
push
xor
jmp
pop
mov
int
adcl
inc
in
xor
cld
sbb
push
aam
sbbl
daa
outsb
push
mov
stos
xchg
movsl
pop
and
cmc
pop
mov
pop
data16
xchg
sub
movsb
cld
xor
out
rcll
lcall
int3
xor
mov
sub
xchg
out
mov
jge
mov
xchg
pop
sbb
popf
push
dec
rcrl
dec
cmpsl
cs
inc
mov
pop
or
mov
push
pop
jne
lret
pop
adc
lahf
fmul
jne
sti
ljmp
mov
lea
sub
or
xor
or
mov
jl
mov
popf
add
jp
int
mov
dec
xchg
adc
in
out
ficompl
xor
pop
outsl
sarb
pop
movsb
scas
and
shlb
lret
fmuls
jp
cmc
mov
call
out
addr16
or
rorl
int
mov
stc
imul
mov
jge
stos
es
mov
cmp
ss
mov
ret
mov
push
jl
add
inc
mov
fisttpl
data16
outsl
pusha
push
gs
arpl
clc
aam
sbb
fimull
out
pop
nop
xlat
cs
xchg
lods
mov
adc
add
push
xchg
sub
xchg
and
movsb
insb
cmp
jmp
lods
je
xchg
dec
aaa
sub
push
sub
ljmp
push
mov
scas
dec
inc
pop
xchg
scas
aas
mov
or
mov
aad
mov
enter
sub
inc
scas
jecxz
jne
fnclex
in
mov
xor
xchg
push
sbb
out
dec
loopne
lret
cmp
push
in
fidivs
or
shrl
fs
push
in
push
dec
push
and
mov
fsubrl
adc
cli
testb
in
repnz
pop
lock
lret
xorb
loope
cmp
jo
mov
shrb
loopne
sbb
test
shrl
and
adc
pushf
rcrb
stc
into
cmp
scas
popa
cmp
icebp
jl
dec
jo
jne
sub
dec
push
into
rcr
fbld
lock
inc
dec
cmp
pop
sbb
mov
push
rcr
test
inc
lods
cwtl
adc
sahf
jne
cs
fisttpll
mov
mov
and
cmp
push
fstl
push
out
push
fwait
mov
out
les
push
cmpsl
push
push
pop
imulb
loopne
xlat
inc
fcoml
mov
and
imul
int
es
std
in
mov
adc
sub
out
fwait
scas
dec
repnz
enter
sub
mov
int
push
in
inc
rcll
mov
daa
mov
and
std
and
stos
or
sub
sbb
push
pop
sbb
push
xor
nop
icebp
mov
es
stos
ficoms
lret
dec
in
xchg
xor
mov
sbb
out
jo
sti
clc
idiv
cld
or
xlat
xchg
int
dec
and
jo
or
das
sbb
addl
xchg
repnz
popa
pop
cmp
dec
pop
adc
push
ljmp
adc
cmpl
lea
mov
sub
adc
dec
xchg
popf
cmpsb
std
sub
mov
jge
jo
mov
jmp
lret
push
mov
push
loopne
add
call
mov
les
sahf
mov
ds
jae
cmc
or
push
adcl
scas
shrb
jo
cmp
xlat
cld
and
stc
sbb
add
xchg
mov
std
and
aam
sub
orb
test
je
or
and
scas
cmp
iret
cli
enter
rclb
push
jnp
cmp
pop
sarl
adc
pop
xchg
jno
jp
insl
push
repz
scas
ret
pushl
aad
iret
sahf
inc
or
inc
mov
sarl
sub
popa
jb
mov
cs
es
fldenv
pushf
xor
in
orl
popf
mov
xor
push
mov
pop
outsl
pop
aam
icebp
and
push
movsb
std
xchg
cmpsb
adc
adc
out
repnz
adc
cmc
movsl
in
push
bound
mov
xchg
mov
out
inc
pop
jae
adc
inc
inc
shl
jne
psubb
cmpsl
sbb
cltd
mov
addl
pusha
andl
inc
movsl
dec
gs
test
inc
dec
push
pop
mov
mov
inc
ss
pusha
outsb
pop
jae
pop
std
mov
lahf
mov
loopne
pop
inc
dec
clc
or
data16
stc
notb
std
fcmovnbe
jge
xor
jmp
xchg
shll
sbb
and
mov
pop
xchg
ja
mov
mov
fdivr
xchg
dec
push
push
out
dec
shlb
in
dec
jle
mov
std
ja
or
mov
dec
rcrb
pop
movsb
cmp
xor
fimuls
xor
outsl
sahf
dec
jp
pop
stc
mov
out
xchg
cmp
call
xchg
cmp
pop
xor
push
sarb
cmc
push
bound
paddusw
cmp
lahf
inc
fadd
and
mov
mov
bound
aam
push
xchg
into
add
fwait
jle
jb
adc
out
fldenv
scas
movsb
mov
out
movsb
mov
push
bound
pop
xlat
rcrb
ret
adc
mov
in
jl
cwtl
out
jg
sub
xor
xchg
rorb
test
test
push
repnz
jmp
or
arpl
cli
sbbl
popf
mov
add
inc
sub
shlb
dec
sub
mov
push
stos
insb
dec
clc
pop
bound
daa
add
sub
mov
cltd
movsb
adc
pop
test
cmp
in
dec
arpl
mov
jnp
cmp
in
repnz
arpl
inc
leave
or
loope
xchg
sub
push
gs
adc
aaa
cmc
hlt
js
stc
add
jp
or
pop
mov
out
out
pusha
push
jl
idiv
mov
sub
sbb
cmp
sub
movsl
sti
test
leave
lock
call
lret
sub
cmpsb
dec
xor
aam
pop
ss
lock
jle
imul
ja
mov
jb
test
out
cmp
sbb
mov
das
xlat
ss
jne
sub
mov
imul
mov
and
dec
fwait
sti
mov
cmp
xchg
sbb
or
and
mov
fadd
lcall
mov
fadd
enter
clc
cmp
repnz
pop
xchg
cltd
cmpsl
or
or
cmc
and
and
jne
adc
pop
mov
jae
jae
or
jae
mov
add
sub
mov
xlat
cmpsb
xchg
mov
loope
push
in
movsb
dec
xlat
inc
cmpsb
jg
pop
xchg
int
mov
sub
data16
aaa
shl
dec
xchg
jp
mov
or
pushl
sub
cli
daa
pop
mov
inc
pop
mov
sbb
adc
in
xchg
repnz
loop
sbb
imul
sub
sub
sbbb
test
pop
jb
pop
in
aas
pop
pop
push
push
push
pushf
addb
idivl
icebp
and
outsb
add
mov
push
push
fcmovb
xor
inc
out
divl
xchg
sahf
incb
ficoms
mov
loop
mov
mov
xchg
out
dec
movsl
sbbl
lret
mov
std
jl
mov
sahf
or
out
pop
sbb
inc
mov
dec
scas
jecxz
das
ljmp
notl
data16
popf
cwtl
add
inc
int
mov
push
sub
addr16
xor
dec
adc
mov
push
xor
add
pop
mov
add
dec
js
shll
iret
push
fldt
insl
sti
cs
fistl
lds
jo
movsl
mov
sahf
adc
add
push
push
movsl
ror
mov
mov
inc
lea
push
xor
push
xor
je
lock
push
clc
jne
push
sub
cld
or
lahf
push
cmp
scas
popa
xor
out
jo
lock
stos
aas
cmovs
loope
dec
decb
add
lds
into
push
pop
dec
pop
jo
je
push
cs
rcl
rcl
push
mov
dec
pop
test
mov
fldl2e
pusha
mov
and
loope
mov
insb
and
leave
int3
mov
mov
lret
mov
shll
cmpsb
shl
leave
sbbb
nop
xchg
insl
dec
jecxz
or
jmp
add
dec
lds
nop
or
xor
cld
mov
cmp
outsl
dec
outsb
cmp
dec
cwtl
dec
jg
dec
ljmp
leave
mov
lods
mov
xchg
je
mov
add
orl
fcmovbe
pop
mov
pushf
pusha
cmc
hlt
scas
adc
scas
jp
jae
test
smsw
dec
jo
fldl
xlat
aas
push
sbb
roll
fdivrl
pop
xor
mov
in
cli
inc
push
inc
les
and
icebp
mov
lret
movsl
adcb
les
fs
jno
xchg
movsl
jl
mov
sti
pop
mov
enter
cmpsb
inc
mov
aaa
shll
add
or
in
xchg
cli
cltd
repz
pusha
pop
add
jns
nop
into
cmpsb
dec
inc
xorl
mov
negb
test
test
xchg
mov
mov
or
sub
in
jno
in
test
ret
cmc
imul
mov
xchg
or
dec
adc
or
xor
pop
lret
ja
sub
adc
pop
popa
pop
and
jge
andl
repz
pop
pop
mov
inc
in
and
test
inc
sub
in
and
push
int3
andb
inc
shl
cmc
bound
sub
jae
icebp
stos
lcall
add
xor
insl
dec
out
enter
mov
mov
dec
dec
xor
xchg
es
cmp
inc
popf
push
test
mov
or
andl
jl
cli
mov
push
jmp
cmp
mov
rorl
into
push
mov
sub
repnz
cmp
xchg
ret
mov
mov
sarb
rcl
jmp
aam
fdivs
nop
int
ljmp
fsubrl
shrb
pop
testb
in
sbb
push
je
xor
or
addl
ret
add
jo
jbe
out
insl
lret
les
ficomps
test
push
dec
lods
push
sub
add
rorl
clc
sbb
sub
sub
mov
fcmovb
cmp
mov
pop
cmp
push
or
dec
shrb
xchg
add
pop
dec
call
stc
xchg
test
sbb
pop
sbb
inc
jge
xchg
push
pop
insb
fldt
cmp
push
jl
sti
xor
or
or
jg
into
sbb
mov
push
mov
push
cmpsb
loop
push
fisubl
push
or
push
mov
imul
sbb
pop
or
aaa
pop
pop
adc
scas
mov
jge
test
insb
mov
sub
cwtl
outsb
dec
pop
ljmp
mov
xlat
out
pop
push
mov
int3
and
aad
fidivl
js
mov
stc
mov
mov
cld
nop
jg
imul
inc
jle
jle
lret
adcl
xlat
inc
jecxz
popw
xor
in
inc
inc
sbb
fstps
int
aad
add
xchg
rcrb
repz
test
addr16
shrb
push
stc
push
adcl
add
adc
pop
int3
loope
and
xchg
addr16
xchg
inc
pop
inc
orl
xchg
cmp
in
bound
aas
fs
fsubr
movsl
add
adc
dec
jbe
repnz
movsb
mov
cltd
adc
mov
cmp
sub
data16
cmpsl
jl
pop
adc
dec
sub
xchg
jg
xor
mov
enter
jno
mov
sbb
jno
xor
add
add
sbb
or
cs
mov
cwtl
jbe
popf
lock
dec
add
out
pop
xor
data16
ss
test
xorl
jns
insl
adc
int3
pop
jmp
xor
add
push
ja
xlat
add
mov
insl
ja
lahf
hlt
cmc
pushf
push
adc
inc
or
repz
lods
mov
rorl
popa
ljmp
mov
and
mov
sub
inc
sub
push
cmp
lea
fistpll
sbb
adc
cmpsl
cmpl
or
loop
in
and
repz
push
inc
or
pxor
aad
mov
cmpsl
ret
add
clc
out
inc
adc
pop
mov
and
mov
enter
pop
icebp
outsl
xlat
enter
adc
mov
or
xor
imul
std
cmp
shlb
push
aas
and
adc
push
cltd
cmp
xchg
mov
icebp
shlb
cltd
xlat
in
mov
xchg
mov
xchg
iret
fldcw
add
xor
lret
pop
mov
and
push
jmp
pop
pop
sub
add
loopne
in
in
lea
jnp
arpl
pushl
jb
ret
lret
push
cmp
pop
dec
sub
jp
rdtsc
jp
dec
cld
iret
mov
andb
push
mov
xchg
or
movsb
jg
scas
pop
pop
add
inc
sbb
jmp
mov
loop
add
fmul
pop
jge
fcomip
xchg
iret
test
or
mov
or
push
jge
sar
push
ret
aad
pop
sbb
push
repz
popa
xlat
icebp
push
mov
cwtl
ret
test
shrl
jns
call
and
adc
lods
adc
movsl
mov
into
jmp
cs
inc
imul
lea
jnp
cltd
je
mov
xor
cmpsl
ret
in
xchg
sar
cmc
xchg
insb
or
push
adc
cmp
data16
cmpsl
loop
outsb
lods
add
xchg
inc
mov
and
jnp
mov
jg
lock
and
aas
pop
xchg
test
dec
or
lock
inc
int3
xchg
loopne
rcl
adc
lods
pop
mov
push
stos
mov
jge
or
cmc
imul
imul
mov
pusha
inc
push
xchg
stos
les
dec
sbb
sti
cli
outsb
or
repnz
in
or
ret
mov
ljmp
jbe
ret
jl
sbb
int
sub
lret
int
lahf
or
test
insl
cmp
sbbb
in
mov
scas
push
insb
les
leave
mov
rorl
mov
inc
out
mov
adc
jo
mov
lds
dec
lock
jbe
xor
add
mov
jecxz
in
loope
jns
cwtl
je
aaa
or
cmp
sub
inc
pop
adc
push
mov
js
push
hlt
cmp
push
pusha
cmpsl
cmp
daa
cmp
ds
push
jnp
inc
fcompl
adc
adc
pop
scas
xchg
mov
mov
or
dec
pop
divb
pop
add
int3
mov
jge
inc
jmp
loopne
mov
rcrb
fildll
insb
jg
mov
sbb
leave
testl
pop
mov
divl
add
cld
pop
subb
adc
das
aaa
xchg
xchg
into
mov
mov
pop
mov
loopne
push
lahf
and
xchg
xor
clc
sub
jne
std
or
lcall
pop
and
jne
bound
addr16
filds
mov
stos
stc
decl
lea
fcmovbe
lret
leave
pop
mov
pushf
jge,pn
inc
xor
sahf
sahf
or
mov
jg
fldl
push
jmp
lcall
xchg
negb
jnp
scas
nop
fldln2
icebp
mov
push
rorb
lret
cli
mov
scas
add
pop
ljmp
push
pop
pop
sub
cli
sti
and
sub
push
je
or
xlat
out
test
push
std
rclb
jns
inc
fwait
push
push
adc
cltd
iret
sub
ret
mov
call
mov
sahf
lds
imul
mov
ds
cmpsb
dec
scas
roll
test
test
stos
and
scas
xchg
std
push
mov
pop
scas
insb
lea
nop
pop
out
sub
lea
sarb
popa
push
flds
imul
in
iret
pop
and
add
andl
jo
loop
das
xchg
loopne
mov
lret
aam
dec
test
mov
out
not
fs
mov
cli
fstpt
fidivrl
imulb
dec
outsb
mov
or
push
aas
mov
xchg
gs
push
xor
scas
mov
into
int3
xor
pushf
and
or
mov
cmpsl
inc
sahf
stc
cmpsb
js
push
jg
push
or
and
mov
xchg
iret
stos
dec
shll
push
cli
ret
and
sbb
mov
xchg
pop
subl
xchg
imul
jg
cmpsb
mov
mov
cmc
mov
shll
jle
pop
lahf
scas
aam
fisttpll
pop
mov
push
cld
dec
mov
xchg
jge
jno
mov
pop
out
leave
fists
out
pop
popf
test
jo
jle
icebp
or
imul
ret
rcll
push
xchg
movb
sub
dec
jae
data16
xor
xor
sbb
sub
shlb
cltd
xlat
int
stc
adc
gs
jb
mov
lock
xchg
loop
hlt
ffree
movsl
mov
pop
fsubs
out
aam
xorl
xorl
xor
shlb
mov
sbb
cmp
loop
fmuls
sbb
add
jp
mov
insb
cmpb
popa
arpl
aas
sbb
jnp
jmp
daa
jns
stos
cmpsl
daa
sbb
adc
bswap
ja
addl
aaa
mov
add
lea
inc
sub
or
shlw
pop
mov
leave
mov
insl
sti
cmp
mov
iret
or
lea
dec
outsb
xor
cld
pushf
loop
lods
and
xor
sbb
jmp
and
das
xchg
xchg
iret
add
pop
inc
ds
dec
sbb
pop
mov
mov
mov
mov
or
fcoml
data16
mov
rcrl
xor
add
ret
cltd
into
mov
jae
inc
sub
adc
imul
daa
inc
adc
fs
sub
or
pop
sbbl
mov
clc
scas
dec
cmpsl
add
loopne
pop
clc
pushf
dec
push
mov
mov
mov
or
aam
adc
call
aaa
cmpsl
and
adc
xchg
inc
out
pop
inc
sti
imul
stos
dec
shll
aad
xchg
or
cmpl
xchg
fcoml
add
data16
mov
pop
std
cmp
jns
in
mov
movsl
fstpl
test
iret
lahf
add
sub
inc
test
cmp
hlt
xchg
cmp
lret
ret
and
aaa
xchg
addr16
imul
loopne
sub
add
jnp
mov
popa
add
cmp
aas
and
fwait
adc
sub
pop
and
xchg
mov
mov
outsb
mov
iret
sub
rcrl
xor
mov
gs
jae
cld
out
mov
mov
cmp
mov
cltd
fdivr
dec
or
add
cmp
test
mov
mov
arpl
sub
fwait
pop
ss
cs
stos
incb
gs
sub
jg
lods
cmc
adc
sahf
dec
stos
test
cmpsb
mov
dec
dec
sbbb
xor
in
in
jno
jg
xor
incl
or
ss
in
sub
ret
push
cwtl
push
add
imul
pop
and
les
dec
pop
in
xchg
imul
push
rcl
pop
lods
insb
pop
push
in
test
xor
dec
mov
pop
cmp
inc
cmp
inc
xchg
out
pop
xchg
shlb
adcl
daa
mov
jmp
inc
outsb
into
clc
xor
ja
jge
adc
call
dec
std
ficoms
repz
movsb
cmp
test
dec
mov
ja
icebp
outsb
push
xchg
ret
je
iret
movsl
fnsave
fimuls
lret
cmovle
das
mov
std
sub
jnp
aam
insl
cmp
psrlw
jbe
sub
and
pop
orl
cmp
cmp
int
clc
das
adc
shrb
and
stos
aad
js
jnp
out
test
fimuls
mov
push
jo
popa
jmp
or
lcall
mov
push
mov
movsl
mov
xor
ja
pop
aaa
aam
pop
es
loop
je
or
push
jmp
addl
xlat
mov
add
imul
stos
push
dec
sub
xlat
lods
arpl
ret
sub
outsl
pop
or
cwtl
xor
inc
inc
std
je
mov
xlat
mov
mov
mov
push
jge
aam
stos
daa
jae
lods
jnp
lods
adc
std
fadds
mov
or
js
cmp
or
adc
lahf
pop
push
or
shrb
test
mov
aam
out
dec
and
ret
sub
outsb
mov
inc
inc
mov
xchg
aas
cmp
stos
shll
cmpsl
je
mov
jp
jmp
add
xor
lds
repnz
sbb
inc
stos
dec
dec
fisttpl
in
add
rsm
jl
jle
std
shll
lahf
push
test
jno
sub
sub
cltd
fstps
es
lahf
mov
out
pop
mov
cmp
mov
dec
inc
loop
enter
mov
sti
inc
pmulhw
adc
and
jbe
es
fldl
sti
fsubrl
and
xchg
rcrb
xor
ss
or
test
insb
std
rcrl
jle
loop
dec
xor
aas
pop
fwait
jns
cmp
xor
ret
lds
push
xlat
cmpl
mov
andb
outsb
mov
rolb
pop
xchg
outsb
test
push
lcall
insb
mov
mov
dec
movsl
mov
push
dec
sbb
rcll
dec
shrb
inc
lret
push
dec
pop
sbb
shl
nop
test
and
fwait
sarl
push
cmp
ret
cmp
pop
mov
jmp
and
mov
es
les
cmpsl
push
int
add
pusha
test
xlat
inc
sbb
stos
pop
adc
adc
jmp
negb
repz
psubw
sub
aaa
ja
adc
push
inc
repnz
imul
xlat
jns
mov
sahf
inc
pop
ja
test
inc
hlt
pop
das
xchg
int
dec
push
add
imulb
push
sti
jg
jno
xlat
sbb
inc
cmpsb
xor
and
aaa
xor
dec
insl
xor
cwtl
loope
cltd
xchg
movsl
or
push
or
inc
lcall
leave
sub
dec
push
pop
push
xchg
out
mov
out
shrb
out
addr16
xor
inc
push
fsubr
and
dec
test
xchg
add
lods
in
cmp
sub
and
inc
lods
mov
and
shrd
bound
popf
rol
add
dec
add
int3
imul
pop
dec
dec
mov
push
xor
sub
sub
test
pop
and
mov
aaa
sub
adc
sbb
xchg
hlt
outsl
aas
loope
rorb
lahf
mov
dec
fiadds
push
loopne
sbb
sbb
imul
sbb
push
cmp
and
popf
into
xchg
popa
arpl
sub
inc
testl
in
adc
mov
xor
cmpsb
test
test
adc
cmp
das
xchg
fsubs
or
test
cltd
es
cwtl
nop
pop
mov
mov
fstps
pop
mov
xor
push
mov
repz
ret
inc
test
test
fildll
pop
popf
mov
xor
decb
ficoms
stos
je
adc
dec
xchg
push
adc
cmovbe
pusha
mov
movsb
sbb
mov
pop
insb
push
aaa
adc
adc
stos
std
mov
test
fxch
pushf
aad
std
inc
and
xchg
sahf
outsb
ljmp
mov
cmpsb
ss
sub
ljmp
bound
push
pop
pop
sbb
hlt
mov
dec
mov
clc
cltd
push
fstl
in
cmp
movsb
push
and
test
movsl
jle
jne
pop
sub
int3
mov
jne
sbb
push
jb
mov
jmp
pop
out
or
jne
aad
push
loope
ret
and
rep
jecxz
sbb
pop
in
dec
daa
adc
movsl
or
mov
dec
xlat
sub
shl
lods
arpl
xor
ljmp
sub
xor
ret
xor
pushf
mov
cmpl
jmp
jb
shlb
int3
pop
inc
xor
mov
loope
rclb
and
push
or
jne
mov
dec
adc
inc
push
inc
test
inc
movsb
hlt
jecxz
aas
xor
ja
shlb
mov
pop
jle
pop
push
cmp
out
movsl
cmp
pop
insb
push
and
outsl
cmp
xchg
js
lock
add
push
repz
or
mov
movsb
sub
xchg
and
mov
pop
lea
adc
adc
cmpl
push
daa
int
add
jno
fwait
inc
loop
xchg
fldcw
xor
jb
or
dec
aam
pop
cmp
xchg
push
mov
cmp
mov
push
or
mov
jbe
xor
inc
sbb
xchg
gs
sub
test
incl
push
insl
dec
xchg
mov
push
xor
add
and
cld
inc
shlb
xchg
fistl
xchg
and
and
cmpsb
mov
mov
lods
addr16
xchg
sbb
in
bound
adc
lcall
inc
sahf
inc
mov
push
mov
sbb
iret
mov
add
jp
sub
xchg
mov
and
mov
cmp
enter
daa
or
in
daa
loope
mov
js
popf
inc
arpl
mov
lods
scas
xchg
sub
lahf
repz
pop
pop
shlb
adc
mov
inc
pushf
cmp
jnp
imul
adc
xchg
je
aas
jae
sub
inc
push
push
xchg
pop
sarl
jo
lcall
xor
cmp
incl
out
inc
movsl
in
clc
lods
popf
mov
inc
stos
inc
cmp
pop
xor
popf
and
xor
pusha
aaa
mov
jge
aaa
test
cs
mov
movsl
push
and
lahf
bound
daa
dec
into
insb
sbb
and
pop
jb
loope
sub
add
jns
push
or
decb
push
jb
out
jne
test
hlt
cmp
out
clc
mov
cli
lock
jno
and
sbb
andl
ror
jno
fistl
decl
pop
mov
push
inc
outsl
pop
lock
adc
inc
inc
mov
fcomps
sub
aaa
adc
call
clc
ret
xorl
adc
out
lds
dec
into
addl
xor
inc
and
and
or
jne
lds
cmp
push
add
test
les
push
ljmp
gs
shl
lock
sub
inc
fmulp
mov
push
and
pop
or
je
cmp
mov
inc
insl
mov
sbb
nop
jne
and
lods
jg
sbb
lret
loope
clc
shlb
cli
insl
push
mov
lock
sarl
hlt
sarb
lods
jmp
pop
mov
aad
pop
or
push
cmp
es
arpl
bound
lret
push
or
stc
push
xchg
and
lock
xor
ret
bound
pop
sub
stos
lods
mov
sbbl
adc
aam
fdiv
mov
push
js
mov
pop
ret
pop
lret
sbb
movsl
and
pop
inc
mov
shrl
arpl
jne
mov
ja
insb
cmp
and
popf
sub
lret
sar
inc
xor
popf
pop
imul
pop
loope
sbb
rdtsc
pop
lahf
std
mov
pusha
out
rol
cmp
in
add
insl
mov
pop
test
ret
cmp
lods
or
sub
fstpl
dec
jg
mov
repz
mov
popf
and
jo
adc
icebp
sarl
lret
mov
pusha
add
xor
jbe
rorb
pop
push
lods
aam
testb
ljmp
fcompl
add
into
js
mov
test
mov
ja
sub
xor
enter
jl
loope
pop
repnz
jg
jecxz
arpl
mov
in
jne
add
adc
xor
bound
dec
jbe
mov
or
xchg
mov
sub
lods
xor
fsubs
pop
imul
cmc
add
adc
push
call
mov
lods
fistpll
outsb
scas
push
mov
mov
dec
je
pop
iret
and
lock
hlt
aas
push
inc
fisttpl
addl
sti
lods
shlb
fwait
out
leave
out
stos
sub
add
addr16
imul
dec
and
insb
cmp
shrl
lods
mov
push
mov
cmp
xor
mov
int
int
ret
lcall
insl
loopne
nop
xchg
and
iret
xchg
or
enter
xchg
adc
sti
adc
cld
or
cmp
aad
cmp
shrb
lret
ljmp
cmpl
pop
add
jle
adc
add
fwait
outsb
push
mov
jge
dec
cmp
fcomps
dec
pushf
testb
dec
repnz
xor
cli
add
ret
fdivrl
adc
xchg
rcrb
lock
push
xchg
xchg
subb
fstl
adc
fsubrs
adc
into
and
mov
mov
out
push
dec
loop
into
aad
xchg
leave
cli
dec
push
insb
out
int
cmp
cmp
lcall
lret
mov
mov
and
mov
cltd
and
shl
inc
adc
addr16
push
jl
mov
mov
mov
rcll
cmp
mov
dec
movsb
xchg
xlat
xchg
adc
in
push
insl
pop
jne
loope
fsub
aaa
fdivp
and
fxam
cmpsb
sub
ror
mov
inc
pop
adc
fdivs
sahf
lods
and
scas
sub
loop
sub
jns
jbe
inc
lret
fdivrs
and
mov
fstl
or
xchg
inc
popa
shl
sub
js
addb
js
cmp
out
mov
and
inc
std
jo
dec
out
hlt
fldl
pop
dec
dec
xchg
scas
cs
mov
pop
mov
or
mov
mov
xchg
inc
imul
sub
gs
sbb
loopne
mov
inc
popa
jno
sbb
lret
int
insb
inc
scas
push
jge
cmp
pop
ret
pop
mov
fadds
das
jge
fucom
sbb
into
lods
fs
jno
cmp
or
lods
fcoms
mov
lahf
or
jb
das
cmp
int3
int3
and
movsl
movsl
pop
popa
push
mov
jb
dec
mov
mov
out
xor
inc
div
adc
lods
xchg
movsb
addr16
sbb
outsb
mov
enter
std
xor
roll
xlat
rorl
cmc
mov
push
stos
enter
sarl
in
jecxz
clc
scas
and
movsl
cwtl
push
or
iret
dec
xchg
out
pop
shr
mov
ljmp
lcall
mov
repnz
pop
jg
adcl
fdivrs
lock
lds
imul
add
sub
loop
fidivrl
mov
dec
movsl
cmp
mull
mov
mov
loop
sub
movsb
dec
push
imul
pop
pop
push
xor
pop
test
mov
cmp
stc
inc
insb
sub
or
sub
pop
fisubl
sbb
mov
lods
divb
add
sub
push
lods
jle
add
or
popf
and
scas
mov
jno
fwait
adcb
nop
das
xor
lahf
repnz
add
jno
fstps
jns
and
scas
movl
mov
jg
mov
mov
mov
out
subb
addl
push
lahf
mov
pop
sarl
outsb
jo
das
pop
jb
push
adc
mov
xchg
mov
in
dec
clc
xchg
add
mov
push
out
xor
daa
xor
dec
dec
lea
inc
data16
addr16
jp,pt
push
je
add
stc
gs
xchg
repnz
mov
arpl
fdivrp
add
adc
stos
imul
cmp
lods
int
jb
sbb
test
iret
xchg
in
pusha
mov
and
stc
out
rcrb
aad
push
inc
imul
jne
ljmp
data16
xor
rorl
jae
pop
mov
adc
sub
mov
inc
jb
popf
mov
aad
push
cltd
sti
mov
cmpsb
dec
and
repz
jnp
mov
push
inc
push
pop
int3
insb
pop
jmp
scas
rorb
inc
cli
mov
inc
pop
dec
insl
jno
adc
mov
js
jg
mov
cmc
pop
int3
and
shrl
inc
mov
cs
imul
dec
aam
push
pop
insb
mov
push
rclb
aas
roll
dec
call
pusha
cmp
xchg
mov
mov
xchg
push
push
inc
jg
gs
ss
push
jmp
out
in
jmp
jns
xchg
pop
xchg
fistpll
sbb
mov
mov
dec
mov
push
cld
fdivrs
movsb
lahf
cmp
dec
pop
pop
sbb
and
jo
movsb
pop
leave
cmp
add
mov
movsl
pop
mov
xor
add
lods
xorl
cmp
dec
pop
out
cs
xchg
mulb
aam
and
xor
dec
test
pcmpgtw
inc
adc
lret
mov
mov
scas
rcl
jmp
inc
subl
jns
dec
dec
fisttpl
loopne
addr16
dec
pushf
mov
add
jmp
loope
jno
pushf
call
adc
mov
lock
mov
sub
inc
aaa
lret
ret
divb
fdivl
scas
mov
lods
or
imul
sub
js
xchg
pop
lret
push
or
daa
add
stos
popa
mov
dec
dec
scas
jp
pop
gs
add
pop
pop
roll
xchg
mov
stos
stos
sti
cli
mov
jb
loopne
sbb
fbstp
movsb
adc
push
shll
pop
out
push
jb
test
out
push
rorb
jae
int
inc
lahf
add
jge
jns
lods
aad
inc
sbb
pop
inc
out
fwait
std
fs
and
sub
in
into
pop
insl
aam
mov
gs
inc
mov
push
push
mov
mov
stos
addr16
mov
into
mov
outsl
cli
push
or
mov
mov
mov
or
call
cmp
add
out
cmp
push
pop
and
mov
imul
add
or
mov
dec
cld
repnz
mov
jbe
loopne
xchg
jno
dec
cli
mov
mov
ret
push
pop
add
enter
sbb
adc
mov
stos
es
fidivs
or
or
and
rcr
test
push
fdivs
cmc
adc
sti
dec
mov
pop
fldenv
gs
mov
fdivs
scas
subl
aaa
cltd
in
jp
int3
xchg
add
movsb
dec
and
fmull
fs
jl
and
lods
jbe
mov
xor
or
mov
ficoms
loope
adc
cmp
cltd
pushf
pop
xor
scas
pusha
loopne
fcompl
mov
outsl
es
inc
mov
mov
data16
outsb
out
xor
call
int3
pusha
jp
cmpsb
icebp
jp
pop
popf
int
jecxz
sub
or
inc
shrl
enter
add
testb
cmp
xchg
nop
inc
enter
xchg
pop
adc
lcall
mov
loopne
mov
nop
push
mov
xor
shrl
jns
jo
fdivr
jne
push
sbb
pushf
add
mov
xchg
aaa
imul
bound
out
sbb
imul
pop
fdiv
sub
and
cmp
lock
pop
fwait
out
repnz
gs
jg
adc
sbb
push
xor
in
push
adc
add
xor
jecxz
push
cmpsl
loop
inc
mov
jmp
add
xchg
jmp
cmp
push
out
insb
int3
pop
dec
test
push
pusha
add
or
leave
stos
xchg
mov
test
test
add
or
ljmp
inc
jae
cmp
xchg
and
fildll
add
xchg
cwtl
in
pop
ljmp
mov
jno
inc
mov
test
in
jmp
test
stos
lea
popf
dec
sub
mov
repz
xor
pop
jge
fdivrs
mov
push
das
sbb
add
cmp
mov
mov
mov
lret
xor
and
cmpsb
xor
and
sbb
push
push
jmp
rorb
stos
popf
mov
js
mov
dec
ret
xor
adc
mov
adc
movsb
dec
xor
lret
mov
adc
imul
scas
fbld
fisttps
pop
enter
rcrl
cli
int
push
sub
or
ret
es
push
mov
mov
addb
repz
rclb
sbb
mov
aas
enter
sahf
xorl
andl
sub
sbb
inc
and
clc
cmc
icebp
aas
fcompl
mov
aas
inc
aam
mov
adcb
in
inc
arpl
popf
mov
outsb
aam
jl
push
cs
pop
data16
out
or
mov
pop
jb
incb
jp
test
mov
xorl
int
jns
out
sbb
fld
scas
sub
fsub
mov
in
pop
jae
inc
pop
inc
pop
push
push
aas
xchg
mov
mov
pop
pop
dec
aad
inc
sbb
dec
mov
lcall
or
movsb
cli
xor
push
divb
jns
pop
sub
test
outsb
xchg
pop
das
popa
add
lock
adc
mov
call
sarb
xlat
push
pminub
xchg
hlt
ljmp
iret
jp
xor
daa
lahf
inc
or
pop
add
ret
and
shrb
pop
call
mov
xor
mov
int
jb
or
nop
pop
dec
imul
and
xor
jl
push
mov
mov
lea
data16
aaa
push
stos
pop
aad
cmp
ficoml
addr16
and
into
loope
pushf
or
pop
cmpb
add
icebp
jge
loope,pt
sbb
fscale
and
stos
sti
cmp
pop
jno
jns
push
jecxz
fsubr
xor
sub
leave
or
mov
ficoml
xchg
iret
xchg
and
push
add
jb
femms
lret
dec
mov
fadd
cmp
push
jge
in
loop
xchg
sti
mov
mov
push
pop
stos
pop
and
inc
and
jbe
sub
mov
inc
xchg
xor
stos
loopne
sbb
or
cmpsb
mov
ret
jb
inc
test
dec
cmp
xchg
ret
sub
cltd
xchg
xor
push
push
mov
mov
cmp
xchg
popa
mul
xchg
lea
rclb
jg
cmp
inc
in
nop
mov
into
outsl
xorl
hlt
fstpl
adc
and
das
push
std
out
lods
shr
dec
ret
sbb
sarl
xchg
movsl
iret
mov
adc
out
mov
inc
ja
out
js
xor
jno
jbe
in
cmp
mov
mov
aad
cmpsb
push
in
fidivl
push
fnstcw
fsts
stc
inc
imul
fld
xchg
xor
push
ret
dec
mov
adc
js
and
int3
xorb
scas
mov
aam
cld
popf
xor
xchg
scas
mov
fwait
push
icebp
lahf
aas
mov
test
inc
jo
popa
xor
or
dec
rorb
ljmp
sub
pop
cmc
ja
push
out
jno
sub
dec
sub
mov
test
fiaddl
push
test
imul
cmpsb
lods
xor
icebp
and
arpl
jne
inc
xor
cld
test
insl
dec
jb
pop
push
dec
addr16
add
das
ret
dec
aad
icebp
imul
adc
sbb
mov
push
xor
mov
cmp
hlt
scas
xor
pop
icebp
push
jp
dec
fcom
insl
push
inc
cld
or
mov
mov
push
push
dec
in
sbb
xor
sub
push
cmpsb
test
cmc
or
push
cs
or
stos
xchg
mull
xchg
movsb
fdivl
lahf
iret
popf
lds
ljmp
push
cmp
sub
push
cltd
sub
or
fisubs
and
imul
jg
jp
cld
jne
xchg
mov
aaa
leave
aam
cmpsl
mov
popf
pushf
ret
xchg
add
imul
push
iret
jl
cmpsb
mov
mov
icebp
ljmp
push
pusha
jg
dec
xchg
in
pushf
mov
imul
xchg
cmpsb
adc
fwait
rcrb
xchg
addr16
lret
inc
loopne
add
inc
fnstcw
cmp
popf
xlat
clc
daa
loop
xchg
pop
sar
lret
negl
add
es
decl
data16
jecxz
push
enter
sub
adc
cmc
adc
ret
cmpsl
out
cmp
mov
ret
mov
mov
cltd
sub
mov
nop
test
mov
lods
mov
scas
adc
iret
daa
xorl
sbb
jno
cltd
sbb
add
xchg
stc
ficoml
or
sbb
mov
das
into
movsl
cmp
adc
push
dec
inc
push
xchg
and
jae
mov
leave
xchg
mov
cmp
loope
repnz
addb
or
pop
cmp
popa
xlat
fs
mov
jmp
dec
add
xchg
fldenv
mov
xchg
aas
shl
cli
add
loop
out
sub
jle
add
sahf
addr16
xchg
xchg
cmp
outsl
sub
xchg
cmp
addb
push
jns
mov
stc
mov
cld
dec
in
inc
add
mov
jp
pop
and
dec
add
out
ret
xor
fsubrl
mov
call
and
and
inc
mov
push
jns
dec
push
sub
pop
jnp
sahf
cmpsl
sbb
nop
and
cwtl
into
cltd
xchg
fs
push
enter
shll
or
cld
incb
and
test
and
insl
adc
jmp
pop
pop
lods
nop
pop
cmp
jno
dec
lds
pop
push
cmp
adc
cld
push
dec
adc
jae
jno
scas
js
or
sbb
movsb
adc
rcrb
pop
sbb
xchg
pop
pop
xchg
add
clc
or
int3
js
out
in
xchg
or
pop
push
call
dec
out
jecxz
les
test
xchg
dec
cmp
ja
cmp
scas
pop
fstpl
cmp
mov
popa
popf
push
mov
pop
repnz
shr
mov
out
enter
into
aaa
lahf
insb
rcr
adc
xlat
nop
loope
sub
sbbl
mov
mov
out
aas
xor
cmp
shr
loopne
inc
pop
add
pusha
jbe
jno
daa
xchg
fidivs
or
xor
jecxz
dec
loopne
mov
push
jno
sub
dec
scas
mov
xlat
inc
push
mov
pop
insb
into
push
xchg
repz
xchg
and
sbb
push
inc
jae
sbb
mov
mov
mov
or
shlb
aaa
mov
mov
fcmove
sbb
pop
pop
mov
iret
enter
mov
dec
stc
rcll
subb
fdivrs
loope
ret
mov
pop
pop
xor
dec
fldcw
jns
jl
sub
mov
xor
xor
leave
xor
int
jno
push
test
lea
jae
sub
adc
icebp
xor
mov
adc
xor
repz
dec
cmp
jnp
push
push
and
inc
int
int
mov
push
xor
push
inc
and
pop
into
or
inc
insl
mov
shll
repz
xrelease
pop
std
push
mov
std
pop
mov
cltd
dec
sub
int3
cmp
cmp
mov
adc
and
fimuls
and
hlt
sbb
mov
adc
dec
push
push
xchg
int3
inc
mov
lret
adc
xchg
cmp
lret
jle
xchg
inc
xchg
repz
flds
xor
lahf
int
out
mov
inc
mov
outsl
popa
or
cmp
adc
pop
into
sbb
aas
aad
scas
xchg
ret
lods
jns
or
push
aam
push
rol
mov
cmpsl
outsl
or
rcrb
fs
xchg
xlat
in
mov
test
pop
test
movsb
xor
lods
cli
cmp
push
jae
pop
fistl
push
scas
pushf
pop
push
push
cli
stc
inc
leave
adc
ret
mov
iret
stc
stos
adc
jl
cmpsb
movsl
ss
mov
mov
iret
sub
dec
fdivs
sbb
or
pop
push
cmp
outsl
adc
jecxz
pop
addr16
pop
js
cltd
aas
movsl
hlt
adc
cmp
mov
sub
inc
jecxz
pop
mov
loop
mov
dec
xchg
fidivl
xor
pop
aam
inc
movsb
lcall
adc
dec
stc
mov
cmpsb
test
xor
daa
mov
jnp
adc
ficomps
dec
mov
mov
stos
es
push
mov
pusha
mov
inc
mov
fdivr
add
inc
inc
shlb
jo
inc
inc
push
sbb
xchg
daa
jne
or
mov
push
and
sub
pusha
sbb
ja
sbb
cmp
add
push
lea
push
xchg
xchg
xor
ficompl
mov
sub
sbb
cs
sbbl
sahf
and
lret
incl
and
push
jb
in
adc
std
or
pop
leave
popf
lahf
adc
incb
testl
cs
lahf
ret
or
popf
cmp
out
push
jno
rcll
in
or
movsl
add
xchg
cld
mov
lods
inc
ds
sbb
xchg
xchg
jmp
out
jnp
mov
push
popa
repz
std
out
sarb
and
or
test
mov
mov
rcrl
xor
in
ss
sbbl
loope
mov
mov
stos
cmpsb
mov
adc
repz
clc
out
aad
mov
data16
movb
mov
cmp
mov
dec
xor
js
dec
mov
xchg
xchg
mov
pop
inc
hlt
mov
dec
popf
push
jo
mov
adc
dec
cmp
movsb
iret
lods
pop
adcl
ficoms
push
in
insl
lret
sbb
sbb
out
mov
mov
mov
es
rorl
rolb
in
stos
and
dec
mov
and
fs
icebp
push
lods
js
xchg
and
imul
daa
mov
int3
xor
dec
popf
popa
push
xchg
psubusw
jle
cmp
mov
push
xor
cmp
cmp
mov
decb
in
lock
adc
sbb
dec
add
add
stc
xor
clc
lcall
shrb
sbb
sbb
arpl
adc
das
sub
xchg
cmp
cmp
dec
adc
push
out
adc
mov
lcall
xlat
aad
jle
fnsave
ret
test
mov
jno
add
jecxz
sub
icebp
test
mov
inc
out
xor
jp
mov
fsubs
xor
sbb
inc
jge
xchg
push
pop
xchg
sbb
inc
mov
or
add
xchg
mov
js
xchg
lods
jmp
or
roll
jno
or
cmpsb
pusha
mov
ret
repz
mov
out
cmp
mov
bound
mov
mov
jnp
bound
rcrl
add
pop
jge
push
cli
cmp
inc
jecxz
xor
stc
data16
add
scas
and
fwait
xchg
pop
pop
daa
jno
pop
mov
inc
test
lock
lret
test
mov
xor
bnd
outsb
hlt
mov
add
push
cmp
int
iret
mov
test
push
mov
jbe
lahf
rorb
popf
adc
xor
addr16
sahf
push
or
xchg
and
xchg
sbb
fists
xor
cmp
out
inc
jne
dec
out
loope
cmpsl
xor
sbb
ret
cmp
cmpsb
fsubl
cltd
lahf
push
jo
orl
pop
aad
sub
jb
add
inc
xchg
pop
adc
jb
push
xchg
mov
add
mov
push
mov
mov
ud0
in
cmc
cmp
mov
fwait
adc
xchg
mov
push
push
push
fcomp
in
sub
xchg
lret
add
test
outsb
icebp
sbb
xchg
cmp
push
inc
inc
jle
inc
mov
fistpll
jno
movsl
adc
lock
cli
sbb
mov
xlat
stos
push
outsb
mov
insl
xor
test
jbe
fidivrs
sarb
enter
das
push
mov
subb
mov
pop
jge
scas
in
jns
aad
aas
pop
mov
test
enterw
cli
xor
in
jecxz
inc
xchg
sub
es
inc
stos
les
mov
and
test
cmpsb
lret
clc
mov
outsl
push
inc
lret
cmc
push
rcrb
jbe
sub
sahf
movsl
cli
sbbl
cltd
xor
fidivrl
pushf
push
cmp
repz
ja
pop
sahf
lods
sub
imul
add
movsb
hlt
iret
xchg
pop
bound
insb
adc
cmp
xor
adc
ficomps
sbb
cwtl
repnz
sub
pop
adc
xlat
lds
mov
cmp
push
repz
xchg
mov
push
cmp
rcrb
adc
mov
mov
cmpsl
and
jne
adc
leave
adc
dec
inc
imul
loope
in
hlt
cwtl
xorb
pop
std
in
loope
push
insl
xchg
divl
fnstsw
imul
shlb
jmp
xor
and
in
dec
mov
in
and
cmp
sub
loope
xchg
lret
fwait
sbb
inc
cld
cmpsl
or
adc
and
cmp
nop
mov
scas
xchg
mov
inc
or
inc
sub
ljmp
cmp
je
push
jns
dec
adc
sub
fistpl
dec
fnsave
cli
test
or
out
mov
insb
flds
into
imul
cli
repz
xchg
int3
outsl
dec
or
mov
fisubrl
dec
xchg
lcall
rclb
or
pop
and
jge
mov
sbb
jmp
inc
mov
mov
mov
jbe
out
in
mov
gs
jbe
stos
jmp
mov
adc
inc
adc
mov
jmp
dec
add
dec
testb
sub
sbb
or
pop
or
mov
mov
xlat
pop
in
aas
shrb
cmp
xor
lahf
xchg
cmpsb
fbld
mov
scas
and
fmuls
jp
or
das
sub
lock
aaa
push
push
add
mov
loopne
cld
aam
xchg
pop
and
mov
or
popf
jae
mov
clc
mov
add
mov
push
pop
dec
jl
testb
stos
pop
dec
repz
sarb
jle
into
dec
insl
jo
cltd
orb
add
out
in
rcrb
fistl
outsl
out
lahf
sbb
fstps
dec
mov
ds
jo
frstor
mov
inc
and
inc
or
ljmp
or
orl
decb
add
fidivl
mov
or
repz
fdivrl
stos
enter
js
out
fnsave
sbb
jmp
fdivrp
cld
negl
fmulp
pushf
fsubl
fucomp
aas
pusha
mov
popf
call
push
sub
and
clc
fsubrs
mov
ret
inc
pop
lock
fmull
das
loop
scas
xchg
adc
push
inc
pop
cmc
lcall
cmpsl
inc
test
fldt
icebp
inc
or
mov
xchg
mov
mov
adc
divl
ficomps
add
sub
mov
mov
inc
out
imul
and
mov
sbb
mov
sub
and
cmp
sub
inc
enter
lock
cmp
addr16
push
add
sub
cmp
push
push
adc
add
jge
jp
push
mov
xchg
ljmp
in
sub
or
popa
cmpsl
movb
incl
jmp
arpl
push
imul
addb
fstpt
in
movsb
lret
fwait
adc
loopne
mov
xorb
sub
shll
shl
adc
cmp
mov
shl
ficoms
outsl
and
mov
xor
cli
inc
or
sarl
jmp
popf
mov
cmpsl
sbb
dec
jle
mov
rorb
mov
push
ret
adc
shrb
leave
add
mov
cwtl
dec
inc
add
and
mov
jnp
sub
cmpsl
scas
mov
std
outsb
sub
or
xchg
cld
test
out
jb
xchg
test
sbb
jecxz
dec
lods
mov
mov
jmp
adc
es
mov
cmp
or
out
mov
lea
and
adc
lret
mov
inc
sbb
into
inc
sbb
mov
inc
fs
mov
xchg
imul
mov
jge
shl
cmp
dec
negl
or
and
xorb
std
xor
sahf
insl
fistl
sahf
aas
ret
add
pushf
sub
push
mov
jecxz
xor
rcrb
repnz
mov
fmul
push
sahf
sub
mov
mov
out
jae
xor
jne
ret
out
popa
xchg
mov
mov
pop
loopne
fisubrs
insb
pop
push
push
loope
mov
loop
mov
cltd
fs
adc
rorb
mov
pop
xchg
test
jne
cmp
fistps
pop
adc
aad
pop
dec
bound
fucomip
mov
jmp
int
ljmp
mov
push
das
fmuls
cmpsl
movsl
sti
jl
mov
sub
mov
mov
testb
jno
pop
lods
rcrb
cmp
xchg
or
jbe
push
das
dec
mov
daa
xor
jle
int3
test
add
testb
cmpsl
nop
aas
loope
je
dec
addr16
int3
call
imul
pop
inc
or
jecxz
jmp
stos
jl
add
into
cltd
mov
loope
jg
roll
mov
push
movsl
jg
gs
xchg
pop
fldenv
jmp
stos
testb
dec
fsin
inc
jl
push
cmpsb
dec
jl
jl
fsubl
fsubl
cmp
cmp
das
es
add
loopne
dec
subl
repz
xchg
es
push
mov
fdivrp
mov
or
test
movsl
ret
inc
mov
fcompl
sub
jecxz
adc
dec
xor
std
xchg
or
movsb
inc
cmp
dec
scas
inc
mov
or
ret
daa
rclb
iret
pop
push
rcll
push
mov
fldcw
arpl
out
and
cli
xor
bnd
mov
nop
add
push
rorl
dec
cld
add
pop
jle
scas
in
sbb
daa
or
push
cmp
push
inc
sub
add
gs
pop
add
mov
icebp
xor
in
stos
lock
pop
in
cmpsl
pop
nop
add
xor
lods
mov
lret
stc
xor
mov
shr
std
in
lcall
lret
into
dec
enter
sti
push
pusha
in
add
lret
cld
add
js
out
out
cmpsl
and
pop
and
cmpsb
stos
stos
or
test
mov
add
pop
mov
add
imul
or
xor
mov
xchg
or
mov
push
in
xchg
stc
pcmpgtb
add
mov
inc
in
rorl
mov
divl
and
lods
add
filds
gs
movsb
and
inc
push
mov
mov
out
jne
push
cs
adc
stos
mov
sub
mov
mov
mov
lock
adc
mov
mov
or
xchg
or
les
ds
add
xor
mov
push
push
push
std
das
adc
mov
jecxz
push
jmp
xchg
mov
xor
dec
sarb
dec
adc
mov
pop
and
fistpll
ja
mov
test
arpl
fcomp
imul
mov
loopne
add
sub
out
jae
jmp
cmp
ja
andl
rolb
lds
clc
call
xorb
xchg
or
xor
mov
sub
sahf
dec
xlat
gs
xlat
dec
or
pop
xor
lret
cmpsb
cld
loope
adc
jmp
add
jno
and
mov
cltd
push
icebp
sbb
popf
push
and
xlat
push
in
shl
mov
das
aas
adc
in
ja
cmc
out
push
inc
addr16
adc
cmp
push
stc
xor
push
fcoml
or
and
pop
push
xchg
fisubl
xor
dec
jge
add
mov
jae
cmp
les
scas
or
adc
js
inc
pop
int
sahf
add
xor
xor
scas
sbb
arpl
dec
inc
aam
xchg
andb
dec
repz
leave
mov
mov
nop
xchg
pop
push
inc
inc
inc
xchg
push
fstps
or
dec
push
mov
mov
pop
int3
cli
imull
xchg
adcb
lret
bound
pop
cmp
ficoms
out
lea
lcall
fisubl
xor
fucomi
js
add
push
push
or
pop
ja
fs
xchg
or
inc
sti
rolb
jmp
dec
pop
pop
or
jp
xor
xor
popf
js
test
int3
jae
es
cli
inc
frstor
loope
ds
pop
or
and
cmpb
jge
and
mov
lahf
inc
into
fisubs
out
xor
pop
or
lret
mov
stc
jg
push
cmp
into
cli
pop
mov
cwtl
pop
inc
push
xor
lods
xchg
cmp
fisubrl
js
sbb
jmp
repz
pop
mov
inc
lret
mov
bnd
xchg
ret
sbb
cld
ds
subb
shl
pusha
and
or
push
pushf
fcomps
dec
mov
lea
or
jbe
ds
push
stos
cmp
mov
push
sbb
or
jp
sub
sub
mov
add
add
iret
lods
lret
lods
sub
in
out
push
jecxz
outsl
jno
or
mov
pop
nop
jge
stos
pop
les
cmp
xor
pop
or
xchg
and
xchg
sbb
mov
pop
sbb
insb
xor
push
inc
out
das
xor
int3
xchg
stos
mov
lret
ret
out
push
shll
ret
and
test
sahf
xor
pop
into
insb
push
xchg
xchg
or
or
xor
mov
xchg
and
in
push
push
mov
xchg
jmp
mov
push
out
mov
loopne
jg
adc
push
dec
stos
div
pop
xchg
addl
mov
push
mov
add
in
loop
test
into
or
inc
push
mov
push
lret
push
repnz
das
imul
push
jmp
pop
jae
pop
ja
push
test
loop
mov
jge
daa
xor
test
cmpsl
ret
ljmp
mov
andl
loope
in
push
arpl
jno
popf
mov
fildl
sarb
ljmp
sub
pop
in
xchg
out
hlt
add
inc
mov
or
or
xor
adc
inc
cmp
je
es
mov
stc
adc
es
dec
je
push
pop
sbbb
addl
mov
lods
lret
mov
jmp
lods
inc
std
sub
lret
stos
decb
lea
dec
push
orl
test
or
xor
cs
aam
xchg
push
int
inc
sub
scas
lock
sub
push
or
cmp
mov
ret
in
wrmsr
add
mov
shrl
sub
pop
adc
jae
dec
mov
mov
ret
jne
push
fisubl
hlt
loopne
cmp
sub
leave
inc
push
popa
test
xor
push
cmp
xchg
lahf
push
das
gs
jo
or
call
cld
in
jbe
lar
pop
js
jge
xor
mov
and
inc
scas
scas
sbb
sub
push
jno
lods
or
mov
xchg
test
mov
xlat
fildll
or
or
loop
push
or
add
pop
xor
jl
sub
js
stos
out
faddl
xchg
cmp
movsb
cmpsb
mov
stc
add
stc
out
and
sarb
fdivr
adc
pop
cmp
mov
ficoms
dec
push
jno
jae
cmp
sub
andl
icebp
add
pushf
add
je
cmp
lahf
mov
dec
jecxz
test
addr16
out
jno
je
cwtl
cmp
icebp
pop
jp
jns
out
in
repnz
and
and
pop
cmovno
xlat
je
adc
aad
or
sbb
lahf
shll
add
fiadds
cmpsb
test
mov
pop
jle
shrb
xchg
cmp
lods
data16
in
xchg
sti
or
pop
cmp
stos
jne
adc
sahf
jo
sub
cli
lods
cwtl
push
mov
mov
sbb
loop
mov
addr16
in
test
popf
aam
movsb
xor
push
xchg
aad
dec
cmp
sbb
shrb
add
shll
mov
sbb
testb
sti
sub
out
cmp
dec
lods
pop
das
loop
add
xchg
push
lods
cmpw
aas
iret
jbe
aas
lds
ds
rcl
lods
addr16
mov
jno
outsb
jno
dec
adc
mov
mov
into
mov
stc
lea
inc
fwait
in
cmp
out
cwtl
ror
push
mov
jg
das
push
aaa
movsl
xor
jno
xchg
pop
sbb
fbstp
push
jmp
xlat
fs
inc
pop
xchg
mov
iret
int
mov
pop
cmp
popf
lds
iret
ficoml
shll
sbb
xor
xchg
out
push
sbb
aam
or
mov
into
ret
sbb
lds
les
cmp
loop
or
es
cmp
jle
pop
sbb
jno
xchg
sbb
arpl
aam
inc
test
dec
rorl
arpl
jl
xchg
ljmp
inc
inc
adc
pusha
xchg
cmpsb
push
in
hlt
xor
iret
out
pop
out
mov
or
and
jns
pop
pop
ljmp
pop
addr16
or
cwtl
adc
call
or
shrl
and
adc
scas
jg
sub
sarl
mov
xchg
add
mov
pop
arpl
lock
scas
xor
fisubl
rorb
push
push
push
pop
adc
jns
push
pop
ret
je
inc
nop
aam
fidivrs
adc
pop
cmpsl
fadd
xchg
jne
lods
push
fldl
mov
cmp
pop
sti
lods
mov
jae
popa
ficoml
les
jae
or
cmpsb
xchg
dec
push
scas
sbb
lock
addr16
fcmovne
jae
stos
fldl
add
fdivs
inc
and
pop
xor
lret
mov
sbb
shll
adc
pop
or
shll
add
out
and
imul
and
inc
sub
or
jmp
lret
hlt
cltd
call
mov
fwait
mov
lret
mov
jns
jns
dec
dec
jo
js
push
mov
inc
hlt
loop
imul
jecxz
in
jb
ss
clc
cmc
xchg
jle
inc
loopne
mov
cmp
cmpsl
popf
xorb
push
jl
and
ljmp
mov
lea
xor
mov
sub
cld
or
mov
and
loope
js
lcall
scas
in
hlt
gs
add
fidivrl
or
repnz
fwait
dec
jb
les
push
pop
push
push
rcrl
pop
jnp
into
sbb
xchg
test
ja
out
ja
les
in
push
mov
pop
enter
cld
adc
sub
xor
popa
xchg
lds
xchg
mov
or
jecxz
pop
push
lahf
lods
mov
sti
xchg
inc
and
rcrl
jbe
cmp
pop
ret
pop
iret
dec
pop
add
icebp
jge
out
mov
shll
ja
out
hlt
push
or
outsb
hlt
pop
push
lock
stos
jp
inc
call
mov
fmull
cmc
push
mov
test
loope
in
jne
xor
cmp
inc
fisubrl
rcl
push
add
sbb
push
mov
cmp
xor
ds
aaa
fldl
test
test
and
and
mov
dec
orb
ja
fsubl
pop
repnz
into
incl
movsb
dec
mov
bound
dec
sbb
imul
pusha
pop
and
daa
jmp
test
fiadds
sub
test
sub
mov
adc
pop
dec
mov
add
out
push
pop
addr16
faddp
hlt
andl
jge
jg
inc
iret
jmp
or
decl
ret
lahf
loopne
mov
push
mov
out
sbb
push
push
sub
pop
imul
adc
push
push
dec
loope
shr
push
add
mov
jle
fildll
into
imul
iret
inc
add
aas
icebp
push
lods
push
xor
inc
sbbl
test
insl
pop
push
mov
dec
or
lahf
add
js
hlt
lods
pop
cmp
imul
orb
enter
andb
jecxz
push
xchg
or
dec
add
add
aas
adc
jge
dec
jae
lahf
or
aam
jno
jmp
push
gs
js
out
mov
and
int3
mov
or
aad
rcrl
repnz
pop
mov
clc
pusha
movsl
jg
inc
in
push
sub
mov
push
mov
cs
pop
loop
adc
cmp
jne
rorb
orb
sarb
ja
pop
xor
sub
xchg
xor
iret
and
loop
or
mov
or
sub
xchg
mov
sub
incl
sti
cmp
sub
test
fsubr
cmp
add
mov
mov
and
in
cmp
inc
push
xor
xor
out
rcr
test
push
or
in
xchg
imul
movl
inc
into
movsl
ljmp
xchg
push
sub
pop
ja
js
in
cmp
int3
enter
cwtl
mov
loopne
jo
fcmovu
cmp
cmpsl
mov
aad
pop
movsl
adc
jmp
mov
sbb
push
adc
pop
push
pop
xorl
adc
xchg
les
jge
sbb
ss
inc
shrb
mov
pop
xlat
and
aad
inc
loope
pushf
adcl
dec
sub
push
mov
fwait
adcl
xchg
int
xchg
in
dec
sbb
mov
in
insl
lods
push
cmp
cmp
adcb
add
popf
insb
leave
stos
or
mov
xchg
in
dec
and
mov
rcl
pop
inc
fs
aaa
mov
test
jmp
mov
and
dec
mov
jle
and
mov
xchg
xlat
mov
pop
xchg
mov
push
jp
mov
sbb
es
mov
dec
jb
je
imull
out
or
and
add
sub
adc
mov
inc
mov
push
xchg
or
inc
dec
fdiv
mov
bound
fwait
das
aad
sub
push
xchg
sbbb
test
popf
add
adc
mov
stos
insl
sbb
in
loopne
ret
mov
test
inc
sbb
sarb
das
lret
push
cmpsl
dec
mov
pop
lret
xor
jg
add
clc
lahf
pop
jecxz
test
data16
ljmp
or
or
loope
mov
cmp
pop
rcl
test
push
mov
popa
mov
pop
cli
daa
mov
xchg
arpl
mov
pushf
in
cmpsb
xchg
imul
popf
add
shrl
out
mov
pop
outsb
and
lahf
cmp
rcrb
in
int3
adc
or
dec
inc
jp
pop
cmp
cli
xchg
cmc
pop
in
xorb
outsl
sub
std
fsubp
adc
lods
cmp
les
jmp
cmpsb
cmpsl
jecxz
ds
mov
mov
in
sbb
push
pop
sbb
adc
pop
push
scas
cmpsb
mov
cmpsb
data16
xchg
outsl
xor
sbb
testb
scas
or
in
lods
popf
mov
sub
push
test
jb
mov
sub
out
push
loopne
mov
or
add
mov
in
sbbb
fstps
mov
xlat
loopne
add
rol
push
dec
iret
addr16
jne
xchg
cmp
adc
inc
loop
sarb
push
imul
das
dec
and
and
pop
dec
jo
dec
ret
ret
xor
add
out
test
scas
adc
add
std
cmpsb
cmp
cmp
push
push
pop
icebp
adc
pop
insb
inc
aaa
data16
and
push
loopne
sub
sbb
cmp
xchg
pop
mov
inc
test
lret
pop
jle
or
adc
or
call
pop
inc
dec
dec
test
xchg
cltd
inc
fisubrl
and
es
scas
cwtl
lods
lret
outsl
sbb
jl
sub
cmp
pop
dec
sbb
rcrb
dec
and
scas
jge
mov
fs
or
popf
push
jne
testl
out
inc
push
arpl
mov
sub
testl
fwait
int3
sti
mov
fldl
cwtl
jae
adc
mov
xor
arpl
push
xchg
xchg
cs
dec
shrb
or
cmp
sub
ror
sub
dec
fsubrs
add
orl
daa
adc
ret
pop
daa
ficomps
push
add
mov
stos
pop
jae
jle
dec
cmp
xlat
dec
into
mov
add
mov
cmpsb
push
das
out
pop
inc
xchg
dec
mov
sub
sub
ficompl
cmp
popf
or
and
xor
ret
test
pusha
pop
test
xor
inc
shlb
popf
popa
xchg
call
push
fisttpl
das
clc
and
sub
cmp
cmpsb
hlt
push
orl
fidivl
insl
imul
popa
jp
mov
inc
jns
cli
cs
inc
push
rcrl
movsb
and
mov
mov
dec
sub
add
or
push
mov
mov
hlt
or
mov
sub
out
test
mov
pop
arpl
cltd
ljmp
jg
adc
leave
or
push
jmp
mov
xor
pop
out
daa
mov
ljmp
mov
xchg
push
popa
pop
pop
dec
jl
addb
sub
cli
jne
or
lret
cmp
arpl
ficomps
lcall
clc
mov
in
dec
mov
jnp
lcall
push
fidivrl
dec
rolb
cmp
cmp
cmpsb
xchg
xor
jmp
cmp
cltd
ss
push
andl
dec
je
scas
add
pop
in
xor
mov
or
jne
das
inc
js
hlt
cli
popf
cmp
sbb
stos
aam
insl
test
jge
mov
pop
xchg
dec
pop
sbb
ss
or
dec
pop
push
mov
mov
sub
pushf
outsb
and
or
and
jnp
cmpsb
fwait
clc
ret
fdivl
jae
gs
int3
dec
push
imul
test
int3
pop
jl
jp
add
cmp
push
push
pop
imul
jbe
sbb
subl
lods
ljmp
inc
ljmp
hlt
leave
mov
gs
push
sbb
fcomps
adc
sbb
push
nop
pop
cmpsl
or
call
daa
dec
sbb
lods
mov
sbb
push
nop
fucomi
ds
mov
and
push
add
dec
rorb
push
arpl
xchg
pushf
daa
cmp
or
lret
jp
outsl
inc
lret
rcll
jb
movsb
data16
inc
pop
inc
lds
std
sub
aas
or
push
pushf
aaa
inc
jmp
imul
and
cmc
shl
std
stos
cmpsl
loopne
xchg
or
cmpsb
dec
cmp
pop
or
cmpsb
cltd
aas
push
inc
fchs
sub
cwtl
outsb
stos
out
push
push
jo
scas
jp
lods
sbb
push
call
cmp
clc
aaa
push
ret
lahf
jo
out
and
sub
dec
out
out
jp
and
lock
fwait
and
xchg
dec
pop
mov
repnz
lahf
clc
mov
ss
mov
inc
lea
paddsw
mov
test
fnsave
pop
popa
jo
popa
push
cmpb
cld
mov
xor
mov
or
stc
hlt
xchg
and
push
mov
dec
jo
jl
scas
xchg
mov
ret
imul
mov
mov
push
les
push
daa
in
mov
outsb
jmp
adcl
jo
int
jb
or
test
shrl
test
mov
in
sbb
in
mull
cmpl
and
mov
jb
and
sub
pop
aas
idiv
repz
lret
or
xor
or
es
neg
xlat
lret
mov
hlt
jno
out
mov
pop
sarb
es
pop
push
loop
movsb
js
loopne
cli
repz
icebp
xchg
jg
filds
mov
stc
loope
shrl
sub
popa
and
shlb
ljmp
mov
les
push
int
data16
mov
and
cli
adc
loop
gs
xchg
jmp
pusha
out
push
in
dec
push
stos
sub
pop
cltd
mov
add
xchg
mov
in
jl
mov
add
fadd
jg
jge
cli
fcmovb
xchg
ret
outsl
lock
icebp
sub
xor
clc
adc
mov
jmp
xchg
out
nop
cmc
xchg
and
jbe
aas
loop
movsl
mov
sub
jae
std
dec
stos
int3
test
imul
lods
sub
scas
setns
movl
sbb
fucomip
inc
mov
loop
pop
cmp
and
jmp
scas
jle
pop
iret
fistpll
je
xchg
pushf
mov
stos
jbe
test
dec
add
insb
xchg
test
dec
lea
stos
and
dec
dec
push
and
outsl
mov
test
out
jb
xchg
push
or
daa
mov
movsb
ss
loope
aaa
aas
mov
pop
int3
sbb
sar
addl
pop
lcall
repz
xor
ja
mov
jl
xlat
mov
stos
test
or
mov
cmp
mov
mov
scas
clc
loopne
sbb
mov
arpl
xor
in
sub
repz
xor
sbb
inc
mov
es
pop
jns
mov
mov
popf
call
dec
leave
xchg
push
inc
ret
rcl
mov
cmp
cmp
js
pop
sbb
dec
xchg
aad
jp
cmpl
cmc
dec
test
ljmp
pop
and
aam
adc
mov
lahf
mov
add
sbb
sbb
dec
fisubrl
inc
pop
imull
pop
test
fstps
in
sarb
into
lock
iret
and
sub
xlat
or
outsb
es
ret
jb
dec
into
leave
lahf
ret
fs
aad
cmp
jns
adc
jno
jo
push
add
orb
push
jge
mov
xlat
ret
or
cmp
cwtl
shrb
jecxz
pop
or
dec
pop
sbb
xor
inc
push
aad
sub
and
xchg
pusha
cwtl
fcmovnb
inc
push
insb
cmpsb
inc
xlat
mov
mov
push
or
shrl
ljmp
mov
pop
cld
mov
mull
mov
rcl
ds
adc
das
cmp
mov
into
insb
stos
mov
add
sub
xchg
pop
imul
dec
cs
out
sub
sbb
sarl
jmp
frstor
sti
inc
and
jae
push
sahf
and
pushf
int3
push
or
insb
jp
mov
int
or
mov
xchg
pop
adc
popa
int
mov
pop
jge
jge
test
add
adc
adc
ret
push
cwtl
movsb
xlat
inc
push
add
popa
xchg
xchg
ja
cmp
orb
push
mov
mov
outsl
push
inc
pop
inc
push
and
jns
popa
mov
fdiv
add
sub
xchg
cmpsl
leave
sbb
xchg
mov
dec
dec
jmp
fisubrs
movsb
daa
xchg
ljmp
pushf
not
jnp
xchg
and
sahf
push
jl
data16
pop
add
xlat
push
push
repz
xor
and
jmp
lea
stos
jnp
mov
gs
jp
push
sbb
pop
in
xor
in
sbb
mov
int3
testl
adc
sti
xchg
cmp
inc
xor
adc
push
in
icebp
movsl
adc
mov
pop
adcl
pop
lods
xchg
sub
aam
push
mov
mov
bound
repz
push
leave
cmp
sbb
cmp
cmp
shll
push
inc
add
jns
icebp
fwait
cmpsb
jb
loop
lods
aas
pop
push
fs
cli
in
pop
cld
fs
icebp
fnstenv
in
mov
and
in
popa
pop
inc
and
inc
scas
mov
andb
xor
jge
fistpl
push
mov
xor
push
or
mov
add
push
or
loope
mov
shll
add
lret
in
jl
jb
dec
mov
pop
dec
xrelease
sbb
push
cs
sub
loopne
add
jne
and
mov
cmpsl
mov
arpl
mov
mov
sbb
xor
inc
lods
sub
sbb
fldl
mov
call
and
sub
fs
pop
xchg
mov
in
sarl
adc
adc
push
shlb
add
mov
subb
adc
jmp
pop
pop
mov
ret
dec
lea
arpl
das
and
std
jnp
sahf
shr
in
repnz
jnp
push
mov
jb
jge
mov
push
push
cli
cwtl
das
lea
inc
leave
and
push
jnp
andl
pop
sub
pop
repz
leave
jb
sbb
mov
jo
dec
sub
jo
mov
movsb
push
inc
mov
mov
jb
xchg
and
mov
mov
js
mull
sbb
or
or
je
cmp
dec
adc
sub
popa
xchg
xchg
mov
add
aas
imul
movsb
test
pop
shlb
cmpsb
pcmpgtw
out
lret
stos
pop
call
test
ficompl
push
jno
imul
sbb
sub
mull
outsb
mov
out
pop
outsl
ss
std
lcall
nop
outsl
sti
mov
addr16
push
sub
pop
dec
fisubs
ss
mov
hlt
or
xlat
pop
pop
mov
je
push
scas
or
mov
icebp
mov
mov
inc
sbb
mov
jge
mov
bound
loop
out
testl
mov
pop
add
cltd
ss
aaa
js
jmp
cs
push
inc
xchg
pop
fcompl
mov
xchg
xor
sti
cmpsl
adc
incb
mov
loopne
pusha
sub
enter
data16
sbb
in
pop
adcb
loop
mov
mov
inc
rorb
iret
cmc
in
aas
mov
fsin
movsb
xchg
and
push
bound
dec
push
in
pusha
mov
sbb
add
mov
scas
xor
mov
pop
loop
ret
lea
test
fildll
and
pop
ret
push
test
mov
jge
lret
mov
cmc
xlat
ja
testb
mov
mov
ljmp
jle
xchg
cmp
fs
les
sub
mov
xchg
mov
push
push
inc
or
pop
out
xlat
pop
push
imul
or
push
xchg
sbb
and
std
loop
scas
cmpsb
mov
stos
stos
mov
inc
mov
fstpt
and
in
cwtl
jnp
xorb
push
es
push
ja
mov
xchg
dec
ljmp
bnd
mov
into
lods
xchg
popa
mov
cli
mov
add
mov
stos
and
xor
mov
pop
fstpt
imul
gs
in
sub
cltd
daa
aaa
enter
push
leave
inc
popf
cmp
sbbl
or
not
mov
mov
dec
inc
cmp
xchg
cmp
mov
clc
sub
dec
jb
lahf
pop
out
jge
pusha
xchg
das
xor
xchg
jle
xor
scas
pushf
hlt
call
int3
enter
xor
or
lahf
ret
dec
aam
ret
mov
mov
push
cmc
pop
out
inc
outsb
jae
inc
adc
push
push
mov
sub
mov
sbb
and
cld
xchg
lea
or
jle
ficoms
add
jmp
js
popf
int
push
and
stc
cmp
mov
stc
insb
inc
mov
sbb
leave
stc
jge
dec
fld
iret
mov
int3
pop
cmp
dec
xchg
jnp
and
test
xchg
das
das
push
pop
out
push
jle
dec
das
sbb
inc
inc
and
jb
scas
test
push
loopne
inc
xor
and
imul
mov
in
jb
inc
lods
test
push
enter
arpl
mov
stc
iret
ds
in
in
std
sub
loop
les
xchg
jae
or
sti
mov
testb
cmc
push
int
inc
dec
adc
cmpsb
pop
loopne
inc
cwtl
sub
shl
xchg
or
pop
mov
sub
xchg
mov
incl
mov
lock
add
push
pop
jecxz
jge
jl
std
or
and
lahf
push
mov
add
cmp
or
dec
dec
andb
xor
xlat
dec
ja
das
jnp
fsts
jg
push
fstl
cmp
inc
push
mov
fadds
stc
andb
cmp
mov
in
popl
pop
arpl
jg
cmpl
dec
inc
stos
and
lods
xor
mov
fwait
and
jmp
daa
xchg
jo
mov
push
sub
add
xchg
sti
jp
test
pop
mov
ljmp
or
leave
cltd
inc
dec
mov
pop
mov
mov
push
jl
inc
or
sub
cmp
pop
xchg
adc
mov
sub
jnp
jb
pop
inc
or
andl
repz
push
outsl
xor
outsl
cmp
jecxz
stos
lret
sub
pop
in
mov
dec
sub
loope
out
jbe
dec
je
mov
hlt
dec
jge
cmp
fildl
pusha
xchg
aam
xchg
push
arpl
add
jnp
leave
push
mov
addr16
fwait
lahf
pop
rcr
stc
push
popa
int
lods
pop
push
cmc
into
or
pop
cmpxchg8b
sahf
pusha
cmp
scas
cmpsl
lea
enter
stos
loope
xor
mov
scas
cld
jnp
mov
jb
pop
fwait
outsb
xchg
mov
int
call
mov
ret
mov
dec
lret
inc
les
and
rcll
mov
popa
int3
jne
enter
jl
inc
push
ret
loope
popf
aas
mov
aam
out
and
push
add
rorb
jge
aad
sub
out
jp
xchg
cltd
push
shll
lods
push
sub
mov
mov
ds
mov
sbb
or
cmp
mov
into
dec
ficomps
fcom
cmc
add
inc
clc
cmp
xchg
adc
sbb
adc
shl
test
jg
test
xchg
lret
enter
int3
mov
inc
jmp
call
jmp
stos
pop
js
and
xlat
lea
dec
cmpsb
sub
xor
adc
pop
aas
or
cmpsb
lea
adc
mov
xor
cmc
jg
push
and
pop
flds
loope
cs
or
push
inc
add
rorb
ffreep
xorl
jge
push
inc
in
hlt
jne
sub
lea
les
loope
jns
fdivr
or
dec
lods
mov
jb
and
stos
cmpsb
loope
push
in
aad
mov
mov
add
popa
xor
or
into
xchg
jl
test
out
adc
shr
pop
cmp
xlat
and
bound
add
sub
xlat
sbb
icebp
bound
fs
das
mov
or
pusha
xchg
cmp
out
jno
mov
xor
in
inc
iret
jmp
rcr
pop
insb
fldz
jle
nop
arpl
push
mov
loope
sub
fdivr
sbb
mov
xor
sbb
jae
jne
push
repnz
sbb
and
mov
sub
movsl
aad
mov
test
fldcw
cmp
sub
enter
insb
rcr
into
in
xor
push
mov
es
into
add
sub
outsl
int3
inc
sub
mov
je
or
or
bound
lods
popa
adc
roll
xor
cld
insl
loope
scas
push
pop
xor
jl
sbb
daa
lds
out
pop
xor
and
jne
in
test
clc
dec
and
idivb
mov
fwait
mov
mov
lods
sub
fs
inc
push
cmp
icebp
int3
inc
jnp
cmc
fmul
xchg
xchg
pop
pop
aas
mov
inc
ljmp
cs
jp
out
pop
fiadds
int
push
in
xchg
and
lret
cmp
movsl
inc
scas
push
add
jne
outsl
dec
lods
cmc
fimull
dec
xchg
sbb
mov
mov
subl
test
rorl
dec
subl
and
dec
cltd
mov
and
hlt
ficompl
mov
mov
lcall
std
add
fcmovb
icebp
adc
ds
shlb
push
or
push
scas
scas
movl
imul
lods
popf
pop
mov
cs
ss
xchg
and
fisubs
cmpl
sbb
mov
insb
popf
dec
movsb
call
xchg
ja
pop
jmp
rclb
popf
gs
xchg
sbb
cwtl
lret
jnp
inc
add
movsl
insb
call
aaa
aaa
mov
int
addr16
out
shlb
stos
stos
das
sub
aam
ljmp
cwtl
call
sbb
xchg
pop
pop
dec
dec
xor
call
cmp
jno
ret
and
cltd
pop
mov
or
testb
stc
lods
sarl
aas
lods
rorb
popa
push
subl
enter
pusha
fistps
mov
fcoms
dec
adc
dec
cs
sub
pop
mov
iret
fisttps
orl
jl
ficoml
scas
cmpl
push
sbb
push
sub
pushf
pop
jg
sbbl
div
jecxz
mov
pop
mov
adc
sub
push
sbb
aam
sti
jne
aad
inc
iret
out
mov
test
es
cwtl
adc
arpl
pop
stos
cltd
sti
vcvtpd2psx
inc
cmc
xor
lret
test
add
mov
jns
cmpsl
bnd
mov
call
xchg
dec
bound
pop
jecxz
mov
dec
movsl
cmpsl
and
ds
arpl
jo
add
rorb
dec
nop
mov
xorl
cmp
clc
movsl
cmpsb
mov
cmpsl
sub
dec
insl
mov
lods
aad
cmpsb
jnp
mov
xchg
fsubrp
mov
mov
lret
lahf
test
sub
push
cmpsb
sbb
pushf
jne
ficomps
subl
dec
sbb
lret
out
std
in
and
dec
jle
cmp
bound
add
cmp
dec
or
dec
xor
enter
cmp
lds
aas
punpckhbw
int3
sub
pop
push
divl
mov
fstps
fmull
dec
and
pushf
movsb
pop
and
dec
sub
adc
push
dec
mov
scas
out
xchg
dec
mov
or
and
cmp
mov
js
in
push
gs
lret
fcompl
jg
and
pop
fwait
std
fwait
jl
pop
inc
jbe
or
repz
sub
and
mov
mov
daa
loope
insb
lret
jbe
sub
cltd
inc
outsl
aas
adc
push
lock
test
sbb
cmp
push
out
call
sub
pop
sub
jbe
iret
jecxz
jmp
add
mov
movsb
xor
aas
mov
insb
mov
pop
pop
jae
iret
inc
test
mov
or
pushf
insb
xchg
mov
add
or
and
nop
dec
shll
jg
into
rorl
mov
mov
test
mov
sub
jge
mull
add
cmp
icebp
mov
cmp
insl
inc
lock
clc
jg
sahf
jmp
in
xchg
and
fcompl
mov
inc
jbe
jle
inc
inc
lods
mov
loopne
arpl
jb
and
or
sub
decl
xlat
rorl
adcb
jp
push
jnp
xor
adc
cwtl
cwtl
jne
stos
adc
mov
push
jmp
sub
mov
pop
dec
jl
sbb
jb
lea
imul
outsl
mov
test
and
sub
pop
test
test
xlat
pushf
xor
add
cmp
and
mov
movb
sbb
repnz
into
fnsave
mov
mov
mov
sbb
je
adc
out
mov
xor
int3
or
dec
mov
push
lods
adc
pop
pop
aad
sub
or
jmp
jne
popf
pop
pop
adcb
fdivl
into
inc
fsubrs
iret
xchg
gs
fs
lret
dec
push
or
pop
jbe
push
popa
in
les
int
loope
sahf
mov
imul
popa
or
lahf
mov
sahf
pop
fs
jle
out
dec
push
cld
lods
int
roll
ret
fistl
add
and
jecxz
lret
mov
jne
cmpsb
push
test
cmp
dec
jo
ss
aaa
ss
aaa
push
cmp
jmp
in
dec
push
fdivs
inc
xchg
or
sbb
std
xchg
lods
rorb
xor
add
and
pop
dec
pop
stc
and
or
leave
or
sub
adc
cmp
inc
adc
call
jmp
jnp
fs
repnz
push
test
aaa
movsb
sti
mov
test
in
outsb
sarl
fs
add
jecxz
xor
dec
divl
cltd
push
leave
mov
inc
push
mov
mov
loopne
pop
jb
das
movsb
or
repz
sbb
imul
push
sub
gs
jo
mov
nop
std
aam
cmp
sub
mov
pushf
fidivrl
in
in
xchg
sbb
xchg
mov
ret
lcall
std
hlt
neg
xor
mov
lcall
mov
cltd
ss
push
push
fs
into
jne
mov
mov
sub
mov
data16
push
movsl
movsl
movsl
int
cmp
xchg
lret
dec
push
sub
mov
fists
mov
dec
repnz
or
aad
xchg
mov
rcrb
popa
mov
pop
xor
mov
repz
js
push
dec
sub
ja
push
lret
mov
and
popf
push
pop
mov
stos
push
inc
insb
ss
sahf
jmp
jne
xlat
mov
popa
add
int
insb
test
int3
cs
loope
mov
movsl
push
cmp
mov
inc
add
push
shll
fisttps
dec
sbb
mov
je
enter
cld
adc
lret
and
js
pop
jae
clc
test
xor
jge
jge
add
loope
jmp
sub
adc
cmpsb
jbe
pop
jne
pop
pop
pop
jb
nop
addr16
add
je
jp
jle
adc
add
dec
cmpsb
xor
push
subb
mov
popf
cltd
sarl
loop
adc
sbb
add
xor
cld
stc
mov
jae
and
clc
add
adc
fs
mov
mov
out
add
sub
xor
jae
aad
push
mov
jbe
xor
sbb
stos
adc
mov
dec
bound
mov
rcrb
push
fisubs
es
adc
push
imul
jecxz
call
cmp
cmpl
js
enter
punpcklbw
test
mov
and
imul
cld
or
loope
inc
push
fnstenv
lret
xor
cltd
insl
cmpsl
mov
jae
sub
out
sbb
loopne
ss
arpl
popf
push
mov
jnp
stos
adc
sub
std
enter
daa
mov
fsubs
mov
in
sahf
dec
popa
or
xor
lret
daa
mov
aaa
cmc
pushf
hlt
inc
movsl
fdivrl
cmp
sbb
aas
or
mov
repnz
nop
mov
dec
ja
or
nop
imul
adc
stc
inc
jo
pop
fidivl
jl
inc
jno
loopne
cli
in
orl
ds
pop
pop
fwait
sti
filds
out
imul
stos
push
inc
xchg
fstps
leave
sub
cli
das
loopne
movsb
add
les
fidivs
add
push
and
xchg
cld
sub
pop
jl
mov
lcall
adc
lea
cld
aam
fcoms
sbb
lods
orl
xor
int
test
dec
or
pop
ds
rcrl
mov
jp
rcr
test
cs
sbb
push
fucomp
scas
mov
cltd
inc
xor
and
mov
clc
jg
mov
test
out
jae
or
xchg
jno
out
scas
jl
and
add
push
push
movsl
pusha
int3
clc
test
jae
sbbl
sbb
data16
in
push
out
enter
nop
xor
pushl
xchg
mov
push
aaa
lods
push
lcall
repz
das
sub
add
sti
jae
add
dec
and
icebp
inc
pop
or
adc
push
dec
das
mov
mov
mov
cmp
dec
sub
pop
push
outsb
dec
cmpsl
pop
inc
stos
addl
cmpsb
in
es
and
jns
jge
out
es
imul
aad
push
insl
ret
mov
push
mov
xorl
je
cmp
pusha
pop
popf
xchg
add
test
fwait
or
ss
mov
lds
push
rcll
hlt
mov
test
adc
bound
hlt
xchg
pop
dec
sbb
cltd
sbb
mov
imul
and
pop
scas
fldenv
ror
mov
sbb
jno
in
subb
mov
xchg
shl
arpl
mov
cwtl
fimuls
shrb
fadds
pop
out
in
cwtl
sahf
adc
ljmp
ja
stos
xchg
movsb
in
clc
xchg
sbb
and
fistps
int3
or
xchg
xor
sbb
sarl
push
andl
mov
in
sub
outsl
mov
insl
add
dec
ljmpw
lds
repz
add
pop
repz
jecxz
loope
sub
xor
ficomps
std
out
les
cld
dec
les
test
mov
ficoml
mov
mov
clc
mov
mov
and
xchg
fsubl
imul
xor
call
cmp
inc
sbb
jecxz
and
fs
jge
ljmp
popa
shll
repnz
jns
fwait
js
sub
mov
mov
fstpt
loop
jle
jae
jle
fs
stos
fsubrs
hlt
inc
or
add
pop
std
and
call
cmp
sti
adc
rclb
mov
sub
jbe
fstpl
mov
rcl
icebp
imul
xor
shll
lds
sahf
push
cmp
out
dec
lret
adc
arpl
inc
stc
mov
and
mov
pushf
cmpsb
or
addr16
sti
fimull
and
mov
pop
je,pt
cmpsl
jle
aam
mov
jl
mov
mov
ret
data16
sbb
xor
xchg
int
sti
js
mov
xlat
xchg
call
xchg
popa
pop
cs
jno
cmp
mov
jl
movsb
out
fcomip
out
adc
test
scas
xlat
mov
vandps
add
fnstenv
shr
cltd
test
adc
loop
popf
jge
subb
test
push
in
loope
jge
pop
nop
dec
push
mov
cmpsb
mov
pop
push
push
ja
or
adc
xlat
stc
mov
out
cmp
rcl
mov
sbb
xor
sub
adc
jns
lds
sub
int3
inc
mov
mov
push
inc
ja
aaa
or
inc
cmp
dec
inc
dec
adc
adc
mov
loope
mov
xlat
push
cwtl
pop
shl
into
ds
dec
mov
pusha
push
pop
push
jne
xchg
mov
cs
movzbl
mov
fists
movsl
out
shll
mov
dec
push
das
mov
dec
mov
sar
jl
outsl
or
ja
orl
das
push
leave
rorl
cmp
or
repz
cli
adc
add
add
nop
lods
cmp
pushf
scas
mov
jg
in
cmp
mov
inc
lds
jnp
int3
mov
xchg
xchg
movsb
and
fstpl
cmp
mov
shr
mov
xor
and
and
sbb
sbb
jl
mov
push
xchg
fs
or
imul
inc
push
sub
repz
iret
iret
mov
mov
jge
cld
cmp
outsb
pop
jecxz
xchg
mov
sub
pop
sub
into
fcomip
cmp
lea
pop
mov
xchg
pusha
test
ljmp
or
push
sbb
insb
jbe
outsb
enter
int3
cmp
movsb
push
int3
in
sub
sub
daa
into
push
outsl
fmull
jle
pop
cmp
sub
sbb
cmpsl
aad
stc
mov
pop
scas
jge
aam
add
cmp
mov
test
push
add
test
mov
xchg
pop
jecxz
pop
out
jmp
iretw
aaa
sub
or
or
outsl
enter
scas
sbb
jmp
shll
shll
mov
movsl
cs
fld
lock
mov
cmp
in
pop
imul
dec
jl
cmp
xlat
shll
arpl
or
dec
adc
insb
push
pop
stc
hlt
cli
mov
jne
fbld
shlb
rcrb
push
inc
push
sub
add
push
lods
xor
xchg
adc
test
xchg
incl
or
aas
xor
adc
add
adc
dec
insb
push
push
aaa
pusha
cwtl
mov
pop
iret
xchg
aaa
xor
ds
adc
pushf
push
sub
sub
jae
cmp
or
pop
hlt
mov
pop
and
outsb
ret
ds
sbb
jnp
cmpsb
and
fistpll
mov
jnp
cli
mov
push
jns
mov
in
call
arpl
dec
push
pushf
dec
xchg
xchg
inc
in
adc
into
int
jmp
outsb
xlat
mov
lea
loope
js
movsl
cwtl
js
adc
rorl
iret
js
idivb
iret
and
push
rcrl
in
clc
push
add
mov
cltd
xchg
mov
xchg
pop
into
cmp
testb
cmp
push
inc
dec
adc
pop
sub
call
add
cmp
sbb
in
pop
in
test
mov
jg
xlat
mov
shr
decb
sbb
xchg
xchg
adc
aam
xor
stos
cwtl
pop
xor
jb
pop
adcl
jne
cs
jp
or
xchg
cmpsb
loopne
aaa
add
repnz
paddusb
les
inc
shrl
mov
loope
aaa
push
into
ss
mov
xchg
add
xor
shl
cmc
xchg
ret
fs
sub
out
mov
jne
xchg
push
inc
add
enter
and
adc
movb
ret
pop
fistl
cmovo
enter
cmp
negl
out
cmc
cmp
and
or
and
pop
cmp
popa
les
cmpsl
in
shrl
mov
data16
adcb
loope
dec
daa
mov
xchg
fisubrs
ja
mov
lea
ja
mov
jecxz
mov
jae
add
jo
and
sub
jne
mov
jg
push
push
cs
shrb
aad
jne
sub
aad
incl
test
jmp
mov
add
fst
xchg
rorl
xor
fcoml
imul
out
add
inc
add
xchg
mov
dec
in
push
mov
daa
mov
or
movsb
sub
loop
push
cwtl
dec
or
addb
sbb
pop
cmpsb
sub
mov
push
and
cmp
test
lret
sub
je
push
decl
int
pop
lods
fmull
sub
pop
jge
adc
mov
sbb
xor
in
or
loop
mov
iret
cmc
jae
sbb
xchg
in
inc
rol
sbb
adc
testl
popa
das
sbb
jecxz
inc
fildl
xlat
ret
lods
mov
out
cmpsl
mov
push
clc
enter
sub
call
jb
mov
pop
cli
jmp
daa
or
sbb
pop
mov
fcomps
test
add
outsb
add
cmp
jo
bound
and
and
xlat
xor
and
fcoml
push
mov
inc
pop
stos
insb
test
fsubs
fidivl
pop
push
inc
xchg
dec
pop
dec
int
cmp
movb
mov
xchg
inc
jae
daa
push
mov
imul
insb
or
dec
sub
xchg
pop
or
pop
mov
ljmp
subb
shlb
xchg
sub
pushf
repnz
sub
mov
and
leave
jmp
mov
das
add
and
aaa
out
push
pop
out
mov
fidivs
jmp
ja
jle
icebp
dec
inc
add
push
xchg
test
cmp
imul
lahf
dec
xchg
adc
hlt
push
sbb
neg
rdtsc
push
fcompl
push
test
adc
xor
fisubl
push
inc
subl
and
bound
inc
in
mov
fs
je
mov
add
dec
push
cmp
adc
xor
add
fwait
in
sub
movsl
daa
xchg
imul
jle
repnz
pop
insl
mov
dec
ret
popf
sbb
add
and
into
popa
ret
xor
fsubrl
pop
popa
xor
adc
lea
roll
dec
inc
add
jl
loope
sahf
bound
subb
xorl
sbb
loop
fsubrs
call
cmp
loop
int
and
inc
sub
pop
mov
mov
cli
out
xor
cmp
mov
and
shlb
ja
mov
stos
test
or
jp
out
xor
lret
cmpsl
sbbb
mov
add
loopne
insl
cmp
lods
ficoms
hlt
popf
cld
lock
mov
fwait
mov
pop
notl
or
sbb
add
mov
repnz
pop
or
data16
aaa
addr16
in
xor
add
cmp
add
cmp
mov
fnsave
cmp
or
adc
mov
push
mov
mov
cmovne
scas
das
push
insb
rorb
add
imul
push
adc
cmpsb
popf
add
add
jmp
push
mov
xchg
sbb
or
sub
sbb
sbb
pop
xor
and
adc
ds
jnp
inc
mov
add
or
mov
cmpsb
mov
orl
fadds
or
in
jbe
fucomip
cmp
add
jg
and
mov
pop
sbb
xchg
xchg
into
and
adc
repnz
push
add
sahf
notl
into
xchg
cli
pop
push
pop
mov
aad
sub
gs
jnp
sahf
mov
cmp
scas
mov
add
imul
sub
xor
adc
aam
adc
cmp
insb
jnp,pt
pushf
inc
push
jnp
mov
das
movsl
scas
jmp
fsubs
push
pop
fimuls
pop
push
inc
inc
or
dec
js
xor
popl
shr
adc
cmpsl
mov
jns
xchg
dec
dec
push
mov
mov
and
pop
sub
add
inc
mov
divb
sbb
movsb
ljmp
pop
push
pop
pop
popa
in
sub
lds
mov
sbb
lret
testl
mov
fdivrs
pop
xor
xor
or
pop
pop
xchg
nop
fstpl
dec
dec
adc
cwtl
adc
sub
jl
iret
and
lds
dec
xchg
mov
sub
mov
rolb
psubw
sbb
cmp
fdivr
and
push
add
ja
adc
jne
clc
mov
pop
and
scas
adc
mov
jo
or
arpl
mov
fnsave
mov
sbb
xchg
xchg
dec
mov
mov
or
push
lret
jl
mov
cld
shrl
nop
int3
mov
hlt
push
ret
sti
mov
push
push
lahf
push
mov
mov
push
push
mov
and
lcall
das
adc
cs
push
jp
jbe
push
std
pop
xorl
clc
sub
insb
dec
lret
test
scas
dec
xchg
pop
lock
xchg
jp
lcall
sub
fcmovnbe
cmp
cmp
les
sbb
dec
movsb
xchg
lcall
jge
fisubl
je
ss
jle,pt
ret
jbe
inc
scas
jmp
rorb
adc
sub
test
or
in
mov
popf
jmp
sbb
popa
xor
xchg
mov
pop
mov
out
pusha
pop
in
aas
jae
and
jns
and
and
fwait
cmpsl
pop
jne
call
test
dec
lret
pop
icebp
call
cmp
into
dec
push
mov
sub
mov
rcll
mov
lahf
pop
xchg
mov
push
xor
pop
push
test
outsl
ljmp
or
mov
pop
shl
and
neg
outsb
nop
mov
shll
mov
cltd
movsl
mov
mov
or
push
test
fistpll
xor
cli
pop
icebp
jle
std
into
cmp
aad
inc
int3
or
push
xor
ficoml
ss
stos
aaa
cli
jle
xchg
jnp
and
aaa
lret
imul
out
loope
push
adc
bound
cmp
pop
lods
jnp
inc
cmc
mov
mov
xor
fidivl
stc
cmp
dec
popf
or
cmp
mov
loop
rcrl
popa
out
in
jmp
xor
maxps
jnp
adcb
fs
mov
orl
nop
and
inc
stos
jle
test
xor
jb
inc
sbb
and
and
jnp
fwait
lea
xor
pop
push
rorl
add
scas
xchg
and
repz
stc
pop
lea
mull
mov
dec
push
xchg
jnp
fisttpl
notb
jecxz
fwait
jno
rorl
lods
mov
movsb
jo
test
outsl
or
stos
pinsrw
xor
inc
adc
and
aas
imul
xor
fstpt
xor
xchg
jle
xchg
adc
movsb
or
push
mov
nop
movsb
mov
mov
push
ficomps
jmp
ret
stos
push
std
fsubs
xor
out
add
pop
xor
jo
and
in
add
std
xor
je
cs
xchg
or
stc
jo
cmp
and
mov
push
add
jge
sbb
movsl
add
jbe
fisttpl
inc
repz
xchg
dec
fdivs
out
arpl
ret
pop
dec
sub
dec
call
mov
jbe
cwtl
rcll
jl
push
bound
lds
push
jmp
imul
ret
repz
adc
push
jecxz
ja
jl
cmp
xlat
lahf
xchg
push
xor
jnp
xchg
stos
and
mov
out
fldcw
jno
daa
dec
jbe
jecxz
mov
cmp
lcall
push
sbb
adc
lds
jnp
or
dec
jb
push
dec
jns
mov
dec
push
xchg
cwtl
pop
sbb
push
stos
fidivrl
shrb
cli
jl
jno
out
subl
mov
jl
mov
xchg
test
lret
mov
jnp
jb
arpl
leave
inc
pop
or
js
shlb
movsb
orb
sub
les
mov
pop
cmp
pop
inc
sarl
nop
js
add
mov
sub
xlat
test
iret
int3
mov
je
xchg
test
popa
adc
lock
jno
xchg
in
int3
mov
pushl
cs
pop
mov
fistps
sub
in
test
sub
mov
sarb
sbb
ret
enter
mov
push
jl
cmpsb
call
shl
test
inc
es
js
jle
loopne
jbe
shr
imul
pop
sahf
mov
outsl
mov
icebp
xor
sbb
popf
sub
inc
and
jno
pop
or
pop
in
pop
fldl
xor
sarb
in
sbb
pop
inc
xor
lods
mov
dec
xchg
das
cmpsl
or
inc
sub
out
fsts
jnp
stos
in
fimuls
scas
pop
repz
hlt
out
repnz
mov
out
insl
test
fdivrp
jecxz
fsubrs
aad
pop
adc
cmpsb
xor
test
pop
add
dec
into
imul
jbe
hlt
add
sti
sub
xchg
xchg
jecxz
clc
rolb
fistps
add
in
adc
pop
jmp
dec
push
pusha
bound
rcr
mov
mov
imul
cmp
pop
movsb
enter
dec
xchg
ss
sbb
mov
mov
sbb
clc
into
xor
std
ffreep
or
pop
inc
mov
xor
xchg
and
xchg
rclb
pop
icebp
inc
pushf
xchg
push
stos
das
push
or
outsb
push
mov
and
inc
addr16
xor
xor
das
cmc
les
cltd
outsl
dec
sbb
mov
adc
sbb
movb
or
pop
inc
mov
out
jbe
call
fdivrl
mov
push
push
loopne
icebp
jl
in
sub
in
and
push
jl
fimull
and
dec
mov
mov
in
fdivl
cltd
mov
or
adc
push
mov
mov
mov
xorb
outsb
xor
xchg
xchg
xor
imul
inc
je
sarb
cmp
mov
jg
cmp
pusha
jb
mov
mov
add
cmp
pop
rcrl
pop
xchg
fcmovbe
xorl
mov
adc
es
pop
jo
scas
dec
sbb
and
xchg
sub
mov
fs
jg
rolb
mov
stos
notl
mov
pop
mov
mov
jg
mov
mov
pop
xlat
jbe
xor
push
movb
xchg
je
fildl
xor
pushf
cltd
inc
cmp
cmp
aas
lock
loope
int3
test
sti
jg
sub
subps
mov
in
push
and
aaa
pop
or
xchg
mov
out
add
mov
adc
lock
shrb
mov
pop
cmp
pop
movsl
js
gs
test
in
push
pop
mov
jne
iret
leave
nop
scas
ja
mov
aas
add
jns
adc
mov
in
loop
ss
cld
icebp
mov
enter
xchg
insl
jl
cs
cmpsl
push
and
sub
insl
dec
xor
iret
xchg
or
add
xor
fldcw
icebp
nop
push
leave
jbe
xchg
test
inc
nop
mov
rcll
sub
or
mov
cld
push
jp
push
push
das
push
jle
pusha
and
cmpsl
or
sbb
dec
mov
sub
mov
mov
outsl
xchg
dec
rcr
mov
js
xlat
popa
adc
sub
rcrb
and
in
jg
ds
push
pop
inc
mov
test
pop
decb
in
push
inc
adc
xor
rcrl
jne
xchg
popf
jae
adc
dec
sub
lock
pop
aas
sub
jbe
rcl
mov
or
cld
out
pop
imul
int
inc
ds
pop
push
sub
cld
cli
mov
lea
pop
ret
lahf
addr16
addr16
xor
jg
ss
pop
sub
es
insb
jne
add
mov
jo
call
lcall
popf
push
dec
ja
and
in
ja
push
cmpsl
sbb
xchg
stos
sub
sub
cmp
ja
rol
test
iret
je
mov
mov
fcoml
ds
fwait
jmp
add
jge
clc
out
lods
cmp
or
push
inc
cmp
aam
sarl
jae
jp
xchg
adc
dec
enter
add
push
pop
je
cmpsl
sahf
mov
in
ljmp
add
loope
mov
jg
adc
sbb
jnp
stos
loopne
outsl
jo
jb
dec
aam
fwait
std
dec
and
jno
adc
out
mov
adc
mov
cmpsl
loopne
lcall
sub
add
dec
aam
jg
js
cmp
pop
sbb
sbb
outsb
aad
cmpsb
add
subl
mov
or
mov
or
mov
sar
sbb
cli
mov
pop
not
sub
es
icebp
pop
sbb
and
ja
inc
inc
sarl
or
int3
mov
mov
cwtl
out
dec
push
push
jne
mov
ljmp
popa
sbb
lods
add
mov
xchg
test
xor
mov
push
inc
stos
int3
imul
mov
xchg
aaa
pop
inc
movsl
test
jmp
and
lahf
sbbl
aaa
jno
mov
xor
les
outsl
cmc
clc
idivb
jbe
dec
out
jae
test
or
mov
addr16
rcll
or
mov
std
fmuls
ds
inc
adc
add
lds
inc
imul
mov
and
pop
insl
stc
pop
lods
cmc
push
orb
xchg
mov
popf
jno
es
or
popf
ret
xor
fidivrl
sarb
and
int
ss
fsubl
jnp
cmp
lret
cmc
sti
add
call
js
dec
and
ljmp
jno
das
inc
push
arpl
adc
imul
add
pusha
pop
loopne
push
push
sbb
loope
jmp
xchg
mov
cmpsl
push
dec
ja
pushf
fwait
out
and
sti
xchg
and
push
mov
push
mov
push
es
mov
dec
or
sub
hlt
gs
mov
pop
daa
mov
or
in
test
es
mov
jbe
inc
add
test
imul
jge
in
in
out
sbb
inc
fnstsw
dec
adcb
mov
mov
jecxz
rolb
pop
or
mov
outsb
bound
cld
js
jae
xor
pop
addr16
andl
cmp
pop
inc
xchg
mov
stos
jmp
pop
sbb
sub
jmp
scas
mov
xchg
jle,pn
pop
rcrl
popf
adc
cld
mov
inc
in
fst
mov
and
jno
sbb
ficomps
daa
sub
and
dec
jecxz
pop
cwtl
scas
shrl
daa
dec
pop
cmc
mov
inc
nop
outsl
cmp
xchg
or
ljmp
js
xchg
gs
popa
sbb
jae
add
insl
and
fcmovb
cmc
fisubrl
mov
sti
mov
xchg
mov
mov
lret
inc
fst
push
loop
dec
mov
push
daa
dec
ljmp
cli
inc
pop
sahf
ds
stos
jnp
push
adc
inc
sub
insb
sarl
mov
loope
dec
xchg
cmp
xor
jbe
out
aas
pop
pop
aaa
shlb
mov
test
jns
loop
fwait
outsl
mov
pusha
pop
xor
sub
xchg
lcall
xchg
sub
icebp
cmpsb
dec
xchg
mov
sub
xchg
pop
jp
pop
cmp
adc
or
insb
aam
or
mov
out
addl
test
outsb
sbbb
cmp
push
or
add
cmp
mov
cmp
xor
pop
lods
ds
repz
ja
sub
roll
mov
xor
ss
js
mov
scas
jb
sub
mov
cltd
sbb
pop
jp
sub
pop
scas
mov
pop
out
mov
push
fistpl
std
mov
mov
sub
mov
jae
daa
mov
rcr
jnp
aaa
mov
jne
pop
or
or
mov
filds
out
cld
fdecstp
aaa
push
pop
mov
test
xchg
pop
adc
fiadds
push
jge
shrb
xor
int
ret
negb
push
mov
out
addr16
jge
clc
fwait
iret
test
add
inc
add
imul
out
mov
sub
nop
dec
ret
sub
sbb
adc
xchg
pop
pusha
call
stos
std
daa
inc
in
mov
test
pusha
mov
inc
repnz
mov
clc
aaa
mov
sbb
jno
mov
push
iret
add
inc
push
cmp
ss
sbb
sbb
test
adc
push
data16
cmc
jmp
fists
push
push
ss
adc
cmpsl
pushf
out
push
scas
jo
inc
hlt
add
inc
stc
sub
jecxz
dec
rorb
addr16
lock
sbb
mov
push
sahf
pop
mov
mov
push
push
adc
inc
divl
gs
scas
sub
sbb
movsb
das
in
push
fistpl
ss
xchg
mov
inc
dec
fcmovbe
es
pop
xchg
pop
jecxz
mov
inc
jae
movsl
pop
jle
mov
sbb
cmp
mov
arpl
add
dec
bound
mov
push
mov
xchg
push
addr16
cmpsl
xor
jp
jns
aas
pop
stc
pop
repnz
cmc
lods
out
cmc
xor
mov
dec
daa
inc
mov
pushf
inc
or
ds
mov
sbb
xor
iret
mov
jg,pt
sbb
aam
in
call
xor
mov
aad
or
add
xchg
dec
mov
ja
dec
xchg
jmp
push
mov
repz
mov
add
insb
jge
aam
inc
or
fidivl
arpl
repz
sti
xacquire
clc
mov
pop
inc
ret
aas
push
xor
dec
iret
jno
ja
icebp
movb
inc
or
mov
mov
or
adc
in
dec
push
dec
leave
cmp
lods
insl
test
les
ret
nop
sahf
orb
push
and
imul
es
call
arpl
xor
sahf
jmp
aaa
mov
stc
fimull
sub
xchg
mov
scas
in
pop
mov
dec
clc
inc
xchg
dec
mov
inc
xlat
sub
xor
sbb
mov
sub
push
xchg
push
sub
stos
icebp
fisubrl
cwtl
cmp
inc
dec
dec
gs
shlb
and
push
das
inc
xchg
add
jmp
push
inc
dec
jne
jecxz
sbb
lods
pop
mov
aam
stos
ja
pop
scas
clc
mov
xchg
pop
xor
les
outsl
jnp
sub
mov
lock
pop
lcallw
push
inc
add
xor
loope
and
xor
add
sub
aas
mov
or
sub
cmp
cmpsb
ret
mov
pop
adc
adcb
imul
in
sbb
lret
fisttpll
in
mov
das
jbe
notb
xor
in
test
xchg
lea
dec
sub
cli
mov
ret
push
cmp
xchg
add
jno
push
mov
out
add
push
xchg
in
mov
cmp
inc
outsb
sbb
hlt
ss
jnp
pusha
lds
add
repnz
in
fsub
jmp
cmc
sbb
sti
les
pand
in
addr16
insl
pop
mov
insb
or
ret
mov
or
in
ja
stos
pop
sbb
mov
lcall
mov
ss
push
jmp
mov
sub
or
push
sub
fstl
test
loop
xchg
pop
add
pop
mov
stos
icebp
insb
dec
into
adc
insl
sbb
insb
cwtl
push
loopne
fld
push
xchg
movsl
bnd
andl
push
inc
mov
shrl
sbb
std
rolb
cmp
jle
in
out
mov
mov
out
mov
out
and
push
add
imul
imul
cmpsb
scas
ja
mov
mov
mov
pop
cmp
add
push
fwait
pop
xchg
dec
add
jle
pop
xchg
adc
test
popf
push
movsl
pop
jne
mov
nop
test
sbb
xor
dec
inc
sbb
fnstcw
call
pop
mov
mov
lock
mov
jle
test
fcompp
jb
jo
stos
gs
testb
lods
in
adc
xchg
stos
loopne
mov
daa
aad
mov
mov
test
ss
cmp
jge
stos
pop
cmovle
fwait
jmp
out
jne
test
push
xor
adc
and
repnz
pop
clc
jecxz
sbb
lret
bound
sbb
jno
mov
popf
cmc
mov
mov
lods
mov
xchg
ret
daa
std
xchg
xchg
mov
jne
jo
mov
data16
push
fwait
sbb
repz
jmp
pop
mov
mov
pushf
out
test
dec
into
mov
cwtl
bnd
fstl
jmp
xchg
incb
out
fcomps
into
stc
xchg
push
push
sti
leave
or
pop
arpl
cmc
xor
add
adc
sub
jecxz
pusha
adc
ficomps
adc
imul
xor
xchg
xchg
bound
scas
xlat
sub
xor
movsl
xor
xorb
div
jg
adc
and
or
fs
hlt
imul
daa
js
mov
add
ljmp
adc
cmp
jno
test
ret
das
testl
pop
fcompl
pop
add
xor
and
push
repnz
jmp
les
out
mov
dec
ret
inc
push
mov
dec
cmc
adc
xor
pop
aas
jge
mov
dec
sub
xchg
mov
inc
popa
es
fcoml
jae
sbb
and
xlat
mov
cli
pushf
arpl
stos
cmp
shr
in
ljmp
les
aad
ljmp
jbe
inc
add
mov
xor
xor
sbb
push
push
jae
fsubl
xor
or
push
mov
jbe
or
mov
xor
mov
popf
adc
movsb
cmp
cmpsb
push
sbb
je
in
adc
fnsave
fadds
popa
jp
in
cmpsb
jl
sub
xlat
sbb
mov
sub
inc
insl
sti
add
adc
inc
stos
inc
cmpsl
add
adc
outsl
xchg
insl
ret
xor
aaa
xor
fsubrp
adc
insl
les
stos
mov
xchg
out
inc
dec
mov
lods
in
cltd
ss
adc
cmpsb
or
mov
test
imulb
iret
ss
xchg
pop
push
xchg
insl
mov
shrb
inc
add
fistpl
pop
loope
inc
adc
sbb
jp
dec
js
int3
cmp
ljmp
mov
mov
pop
fisttpl
cwtl
inc
test
pop
jno
inc
cli
cmpb
push
into
ss
adc
lcall
insb
ret
iret
adc
iret
xor
mov
sbb
jge
fildl
pop
cmp
mov
xor
test
xchg
xlat
adc
fmull
adc
dec
cmpsl
push
aaa
xor
orb
mov
aas
es
push
in
jns
popf
mov
mov
stos
imul
xor
lahf
cld
sbb
imul
lock
push
sub
jg
in
pusha
dec
insb
in
repz
dec
lds
js
pop
dec
orb
and
xchg
aas
add
sub
and
rorb
lock
inc
sbb
mov
push
insb
dec
mov
push
mov
fimull
std
and
inc
mov
mov
enter
lret
push
xchg
xchg
in
jbe
xchg
arpl
pop
push
loopne
andl
popf
pushf
mov
outsb
hlt
xchg
fcomps
mov
sbb
and
in
movsl
mov
lahf
pop
push
cmpsb
jmp
fistl
and
sbb
adc
lret
xor
fidivrs
pushl
mov
mov
aam
insl
inc
prefetch
addr16
sti
xchg
in
xor
push
test
mov
mov
fstps
mov
and
jp
mov
xchg
mov
sub
dec
in
sbb
push
push
cltd
sbb
xlat
mov
and
jnp
mov
xchg
ss
cmc
nop
loopne
ret
xor
push
rcll
jae
jp
dec
add
call
sbb
xchg
and
sub
movsl
in
jno
pop
out
stos
enter
out
cmp
cli
or
mov
mov
ljmp
mov
in
mov
sbb
in
xor
fmul
sbb
lcall
dec
shlb
xor
and
out
mov
ljmp
negb
cmp
test
adc
cmpsb
pop
pushf
jmp
sbb
aad
dec
pop
ss
cli
mov
stos
mov
arpl
push
fmull
les
imul
adc
and
cwtl
movsl
pusha
clc
sbb
daa
or
jmp
mov
std
adc
aaa
mov
sub
divb
out
pop
push
mov
sti
adc
outsb
mov
add
lods
pop
or
rorb
add
outsl
xor
mov
xchg
mov
mov
push
mov
out
loop
cltd
mov
mov
add
scas
pop
push
inc
outsl
jmp
les
negb
pop
mov
and
jle
js
sbb
dec
jbe
push
in
cmpsl
out
pop
mov
scas
outsl
mov
mov
dec
fisttpll
out
fs
fdivl
mov
cmpsl
xchg
inc
fdivrl
mov
out
xrelease
and
pop
sub
or
xchg
repnz
sub
jecxz
or
sub
pusha
frstor
lahf
in
pop
ljmp
stc
into
jno
pop
cs
pop
inc
jnp
shrb
popa
shrb
cmp
out
push
pop
xor
inc
dec
lahf
push
cmp
inc
sarb
fcomi
dec
mov
out
fimull
jne
mov
lods
push
addb
data16
cmp
or
dec
sbb
xchg
xchg
mov
sahf
ret
xor
or
ja
push
fists
dec
mov
or
fucomip
pop
mov
add
cli
dec
mov
frstor
stc
xchg
mov
out
out
cmp
repz
cmp
xor
lds
les
mov
cmc
into
inc
pop
rcr
cmp
movsl
ror
sub
lret
mov
sbb
icebp
xlat
or
bound
add
into
and
sahf
mov
paddsb
repz
xchg
mov
jo
and
push
inc
roll
pop
dec
in
lahf
mov
lods
test
orl
iret
loope
repnz
jbe
in
xchg
loop
adc
les
cmp
lds
in
sbb
pop
pop
or
inc
lds
fisubrl
scas
loopne
out
popa
stc
or
rcr
xor
sbb
inc
xchg
mov
mov
dec
jae
int3
inc
dec
add
cli
jo
fwait
int
dec
jge
and
mov
xchg
scas
xor
sub
loopne
pop
out
inc
add
mov
push
nop
pop
gs
jle
fdivs
js
or
and
xchg
jge
lret
lcall
jp
or
lods
lock
xchg
xchg
into
rcr
jmp
gs
std
and
popa
lret
and
sub
push
hlt
es
call
dec
push
and
pop
and
xchg
add
dec
push
jb
clc
xor
mov
imul
fnstsw
adc
xlat
and
lea
pop
insl
add
std
adcl
sbb
pop
fldcw
mov
xchg
mov
dec
xchg
dec
push
popa
cmp
fldcw
pop
xchg
das
add
add
push
jmp
or
mov
sub
pop
xor
mov
mov
pushf
pop
push
fnsave
inc
movsl
xchg
movsl
hlt
imul
jmp
les
pop
addl
gs
and
js
xchg
mov
ret
test
mov
dec
inc
jp
or
pop
cs
and
jnp
or
jl
repnz
jge
imul
fs
pushf
and
sbb
cmp
shlb
out
xchg
loopne
fcomp
enter
lock
fisubrl
push
mov
fcoml
inc
dec
mov
push
lds
out
add
sbb
xchg
sbb
and
lock
push
pop
lret
in
mov
ret
es
mov
daa
imul
or
into
fcmovne
repz
xchg
mov
xchg
xor
je
test
ja
push
insl
ja
ja
xor
flds
and
or
shll
into
and
out
outsl
cli
mov
pop
mov
lcall
ja
mov
cmp
fsubr
out
pushf
push
imul
sbb
lret
push
dec
jo
cli
stos
mov
out
pop
dec
push
test
out
dec
xorl
push
lock
xor
mov
or
xchg
movsl
or
clc
add
cmpsl
insl
mov
repnz
call
cmp
xor
add
lcall
jp
icebp
and
sbb
fsubp
sub
ljmp
fnsave
inc
leave
outsl
xor
popf
push
out
and
dec
add
add
and
add
adc
js
dec
add
sub
icebp
shrb
scas
sbb
scas
ss
mov
mov
sbb
cmp
adc
xor
mov
xchg
adc
pop
in
cli
inc
mov
jp
loop
dec
inc
xchg
std
in
shll
adc
lahf
mov
or
mov
stos
mov
mov
andl
jecxz
jo
jge
pop
addr16
addb
call
into
out
movsl
jno
push
inc
push
jbe
bound
mov
daa
js
jb
adc
xlat
push
cwtl
and
and
cmpsb
xchg
and
or
orl
sar
add
or
sub
mov
add
sbb
pop
aam
cmp
sbbb
adc
push
int
push
lret
in
mov
dec
or
gs
dec
sub
or
cmp
pop
dec
popl
sub
imul
incb
push
addb
jns
push
cli
imul
mov
jecxz
cmp
popf
icebp
jo
cmp
scas
xor
ds
pop
add
pushf
sbb
pop
repnz
cltd
stos
jae
mov
arpl
idivl
fistpl
test
int3
sub
add
mov
cmp
cs
push
pop
dec
lds
or
loop
lods
scas
jnp
sub
inc
ret
fs
ret
push
stos
loope
sti
cwtl
inc
stc
rcrb
xchg
xor
sahf
in
dec
movsl
int
or
lret
push
sub
pop
and
mov
mov
push
xchg
jg
mov
test
insl
mov
push
push
or
sub
shrl
jbe
lods
pop
jecxz
mov
and
xor
ficoml
cmp
mov
inc
je
add
nop
int
mov
pop
test
jmp
mov
adc
repz
xchg
pop
push
jae
icebp
pop
or
rclb
xor
data16
cmp
mov
mov
fs
jns
fiadds
inc
mov
stos
mov
xchg
push
cwtl
push
arpl
out
and
mov
fwait
cmp
loope
leave
ret
mov
or
les
jnp
loope
xbegin
ds
adc
push
mov
xchg
push
inc
imul
sub
mov
pop
int3
xchg
das
jle
xor
jl
jne
movsl
mov
dec
xor
xchg
and
daa
insb
fwait
mov
xor
iret
arpl
jmp
roll
pusha
xlat
gs
cmpsl
rorl
loopne
cwtl
mov
dec
jne
fcmovb
fwait
sub
lcall
movsl
dec
sub
cmpsb
xlat
mov
xor
inc
adc
or
cmp
xor
add
inc
dec
sub
push
inc
sbb
adc
call
mov
sti
inc
jmp
mov
out
xor
jo
dec
lock
out
xchg
jbe
dec
sbb
fimuls
xor
pop
xchg
punpckldq
jno
rcrl
fld
mov
insb
xor
cli
sbb
mov
inc
stc
pusha
or
mov
popa
push
mov
iret
aad
jb
rcr
popa
jg
cltd
lea
mov
movsl
cltd
mov
call
jl
insl
and
or
shrl
adc
pusha
cmp
mov
stos
jb
into
pop
jmp
int3
push
insl
fisttpll
jbe
jno
repz
cmp
sub
in
pusha
cwtl
sarl
pop
in
and
dec
mov
inc
jns
sub
mov
mov
dec
push
aad
je
flds
pop
loopnew
inc
pop
mov
sub
pusha
ljmp
jne
rcr
jl
frstor
sti
mov
mov
ret
sub
repnz
pop
orb
insl
fsub
mov
imul
in
frstor
xchg
sub
outsb
xchg
sbb
xchg
daa
adc
stos
jecxz
out
jae
push
mov
lea
ret
jbe
scas
dec
imul
jo
pusha
sbb
dec
xor
inc
lods
repz
mov
adc
jmp
ja
dec
mov
adc
int3
nop
xor
dec
scas
sub
test
xor
repnz
divb
inc
pop
sub
jge
xor
int
cli
jns
push
push
mov
sub
pop
das
or
pusha
pushf
je
sbb
xchg
push
mov
call
jbe
adc
inc
sub
adc
pop
mov
call
mov
flds
cmp
add
loopne
sbb
lods
lods
mov
push
jns
mov
fs
mulb
outsl
push
or
shlb
cmc
xor
enter
cmpsl
ret
out
in
pop
lods
ret
cli
dec
or
mull
test
mov
lahf
dec
lcall
xchg
dec
inc
aam
ljmp
pusha
fsub
pusha
in
xor
and
in
repnz
int
cmpsl
andl
jbe
cmpsb
adc
or
sub
je
test
sarl
xor
sub
cmpsb
mov
cmpsb
and
push
into
popf
outsb
mov
add
movsb
fstl
add
imul
out
rolb
rcrb
out
dec
cli
imulb
xor
and
int
cmp
jno
aam
out
dec
aaa
mov
stos
fs
lods
jge
add
mov
mov
sti
dec
cli
adc
nop
mov
mov
je
ds
into
push
mov
jno
xchg
lret
sahf
jae
mov
insl
popa
ds
mov
into
add
mov
jecxz
pop
push
xor
sub
or
mov
adc
jne
repnz
or
outsl
push
sahf
xchg
loopne
insb
sahf
fcoml
mov
mov
icebp
js
and
push
sbb
mov
or
es
inc
into
aaa
mov
mov
mov
jecxz
adc
xlat
mull
or
dec
jmp
mulb
cmc
cwtl
fbld
stos
jb
jmp
roll
mulb
rcll
push
mov
xchg
stos
into
scas
ds
xlat
cld
pop
pop
push
sahf
fistpll
inc
adc
jmp
sbb
arpl
lahf
xor
add
std
mov
xor
mov
lret
ss
lret
popa
and
stos
ficoml
adc
inc
enter
cmpsl
push
mov
sub
push
jmp
mov
dec
cmp
mov
sub
or
in
cmp
xchg
xchg
fbstp
adc
xchg
push
js
pslld
orb
rorb
stc
pop
and
jl
repnz
orl
jae
call
xchg
test
push
lret
lods
popa
xor
setg
mov
in
aad
push
sub
push
bound
jp
sbbb
pand
dec
inc
dec
lret
fnstsw
pop
arpl
push
mov
xchg
cmp
fsts
test
pop
daa
fidivs
push
imul
xlat
cld
mov
test
xchg
std
pop
jle
and
arpl
add
dec
and
jle
jbe
fs
sub
mov
and
flds
mov
add
ret
sti
dec
and
or
inc
push
jge
sub
push
lea
mov
mov
or
movsb
ss
das
cmpsl
das
daa
mov
push
dec
cltd
dec
in
xor
mov
add
pushf
js
jmp
jo
insb
arpl
in
subl
lret
adc
dec
ret
mov
add
push
rcr
dec
arpl
je
stos
inc
out
xor
jmp
add
movsb
lods
mov
mov
cmp
mov
xchg
lea
add
mov
xor
popf
push
xor
imul
xchg
lcall
sbb
inc
or
sbb
mov
int3
xchg
push
faddl
out
jmp
rcrb
adc
sti
stc
lcall
into
mov
sbb
imul
imul
sbb
stos
js
bnd
cmc
pop
daa
or
out
subl
out
xor
add
cltd
dec
fs
call
mov
cmp
inc
mov
xchg
or
filds
pop
je
jmp
cmpsl
arpl
adc
push
add
lods
adc
mov
fildl
ret
movsb
ljmp
jecxz
pop
clc
cmpsl
loopne
nop
outsb
pop
pusha
xchg
push
loopne
mov
cld
lcall
addr16
cmpsb
sub
mov
out
cmpsb
stos
mov
imul
leave
ja
jno
cli
mov
jbe
dec
lds
mov
mov
mov
push
mov
es
decl
mov
rcrl
cmpb
push
std
lcall
out
jns
mov
adc
sub
lret
mov
and
mov
repnz
mov
lahf
mov
stc
dec
pop
jnp
mov
dec
mov
cld
xchg
sub
sbbl
scas
jnp
lods
pop
adc
xor
std
movsb
ret
test
out
xchg
mov
xchg
test
inc
jmp
inc
pop
mov
dec
jge
jmp
scas
std
lcall
mov
mov
js
mov
movsb
jnp
scas
in
xchg
ror
mov
xchg
lds
add
outsb
add
or
int3
inc
xchg
mov
bsr
insl
xor
jae
aam
scas
inc
clc
sarl
mov
inc
sub
scas
mov
dec
cmpsl
mov
sub
or
aad
popl
and
add
ljmp
adc
and
jns
iret
insb
subl
test
xor
and
pop
nop
push
cmc
dec
arpl
xchg
and
jge
jl
ret
cld
mov
ficompl
sbb
pop
scas
lret
sub
push
adc
sbb
out
cmp
cmp
test
sbb
adc
mov
cwtl
stos
js
or
jle
test
lcall
loopne
push
pop
pop
iret
xchg
shr
fcmovu
or
cmpsl
aas
sub
out
out
inc
bound
movsb
cmp
std
lock
lock
fs
inc
mov
pushf
cli
xchg
test
clc
xchg
int3
stos
mov
pop
jns
adc
mov
mov
inc
adc
fs
add
mov
cli
mov
cmp
pop
loopne
loopne
cmpsl
mov
mov
push
add
rol
sub
inc
dec
mov
cwtl
sub
push
cld
es
das
jg
and
add
xor
xor
sub
stos
sbb
mov
test
mov
jecxz
mov
jl
push
dec
cmp
adcb
in
imul
cltd
stos
sub
aas
jne
xor
outsl
mov
call
shll
lahf
out
sub
pop
repnz
xor
cmpsl
imul
int3
jae
mov
sbb
push
test
std
adc
inc
fildll
xchg
mov
lret
movsl
xchg
repz
test
jns
xor
inc
or
jecxz
add
cmp
aad
scas
jge
gs
sbbb
stos
aas
jmp
addr16
pop
js
mov
int
add
dec
sub
adc
add
cmp
lea
or
adcb
push
fisubrs
stos
loope
loopne
lods
orb
mov
cmp
out
imul
cmp
jmp
lret
lods
jecxz
cs
mov
jns
add
xlat
in
xor
mov
mov
dec
xchg
and
mov
in
ljmp
inc
ret
mov
mov
sbb
scas
stos
orl
hlt
and
cwtl
scas
and
mov
adc
loopne
repnz
ljmp
arpl
xor
mov
xlat
add
in
mov
mov
xor
jl
cs
cmpb
xchg
cltd
xchg
hlt
dec
loopne
jae
xchg
mov
inc
testl
out
mov
scas
ror
push
repz
dec
lock
adc
sbb
mov
outsl
push
cmpb
cmc
subb
inc
add
or
push
hlt
mov
inc
sbb
jmp
jo
in
cmpsl
lock
dec
rclb
lret
incl
sub
pop
sbb
popa
jnp
jp
pop
insl
pusha
push
shlb
adc
hlt
dec
xor
das
jns
adc
pop
insl
insb
call
in
lods
dec
xchg
or
jnp
int
out
leave
icebp
scas
scas
push
iret
pusha
data16
adc
mov
dec
dec
and
xchg
bound
push
add
jo
push
cmp
insl
push
inc
cld
fistps
push
ljmp
leave
cmp
lcall
xor
adc
add
fistpl
xchg
push
pop
out
add
xchg
mov
jp
aam
xchg
icebp
or
repz
cld
and
idivl
imul
les
xchg
mov
repnz
adc
mov
fiadds
popa
mov
xor
ficoml
dec
movsb
sbb
xlat
js
adc
das
mov
jmp
dec
sbb
pushf
shl
out
inc
idivl
cmp
int3
mov
imul
mov
outsb
test
loop
stos
std
cmpxchg
aad
mov
sarl
and
or
iret
pop
push
out
and
dec
inc
pop
xchg
aam
mov
stos
sub
pop
adc
sbb
inc
cmp
push
sti
xchg
fdivr
cmp
sub
push
cmp
push
mov
cli
fnstsw
stos
fdivl
sub
and
push
adc
aas
cmp
mov
mov
in
push
aam
xchg
push
mov
bound
in
loope
dec
and
pop
ljmp
cmpsl
adc
xlat
or
scas
rcll
push
dec
fidivl
dec
lcall
fldl
outsb
add
out
cs
jns
or
fs
outsb
mov
pop
sub
xlat
inc
pop
enter
jp
inc
lret
cmp
ret
sub
adc
mov
test
int
outsl
xchg
cmp
lock
jb
mov
shl
xor
push
in
rcl
loope
into
aam
scas
outsl
push
movl
xchg
ja
stos
xor
xchg
pushf
out
mov
negl
xchg
cmpsl
stc
insb
rclb
fstpl
ja
dec
sub
add
mov
lds
icebp
lods
push
rcl
ja
xor
add
jne
cwtl
push
cmpsl
mov
mov
std
dec
jo
test
lea
shl
movsl
or
into
push
add
or
sbb
fcoms
mov
cmp
xchg
xlat
scas
sbb
inc
incl
sbb
repnz
jo
out
fstl
xchg
stc
xor
lret
sub
fdivs
int3
enter
imul
cli
cmp
xlat
js
fidivl
movsb
fcomi
mov
call
hlt
and
pop
mov
sub
in
sub
int
xor
pop
mov
ss
icebp
inc
mov
cmpsl
inc
lock
cmp
jmp
xor
or
daa
lret
les
adc
cmp
int3
push
fsubs
or
aas
lods
popf
mov
lods
imul
jle
lahf
sub
ret
mov
push
je
jno
mov
cmc
nop
dec
aad
jge
sub
jo
negb
scas
in
add
mov
mov
cli
push
aas
jae
lahf
sbb
pop
sbb
dec
adcl
inc
fnstenv
ljmp
jns
lods
out
pop
jbe
aas
adc
jae
stc
ret
movsb
jae
scas
out
jmpw
pusha
dec
sbb
pop
out
in
xchg
aaa
cwtl
loope
and
sbb
outsl
fcomps
test
cmp
or
mov
inc
imul
cmp
movsb
mov
add
iret
icebp
mov
sub
imul
scas
sbb
popf
jns
cmp
jns
mov
jl
xchg
fxch
icebp
mov
jne
aas
stos
sbb
cld
repz
or
dec
xchg
mov
fistpll
xorb
push
jmp
mov
sbb
sbb
dec
add
cmp
cld
cmp
jg
mov
push
or
popf
inc
cmp
xchg
cmp
sarb
push
cmp
xchg
imul
inc
popf
jns
enter
adc
mov
shll
lea
push
js
inc
xchg
fsubr
sbb
das
clc
loope
xlat
dec
test
cld
ljmp
add
rcll
pusha
dec
xor
and
mov
xchg
jbe
rcll
mov
jle
mov
push
adc
dec
xor
mov
mov
out
mov
in
pop
data16
in
jp
les
jmp
jle
xchg
enter
jae
sbb
adc
inc
push
loopne
outsl
add
inc
mov
jo
fldt
lret
mov
push
fs
mov
imul
scas
add
push
ljmp
jg
mov
xchg
pusha
pop
or
xor
mov
sbb
xchg
clc
lcall
pop
xchg
and
stos
shrl
aaa
mov
mov
jae
bound
enter
add
in
pop
leave
sbb
dec
add
dec
mov
adc
sub
daa
stc
mov
sub
jb
stos
ja
outsb
xor
decl
sahf
test
mov
insb
push
jecxz
in
mov
push
cmp
test
lea
ss
cmp
jbe
jb
add
loopne
jecxz
push
call
loop
adc
cwtl
xchg
aaa
mov
rorl
mov
inc
ja
lea
movsb
jne
sub
call
test
rol
jbe
aaa
std
rorl
push
xchg
pop
or
js
mov
and
mov
mov
inc
cmc
cmpsl
mov
shrl
iret
and
pop
js
xchg
lea
xor
pop
pop
inc
fdivrs
cli
dec
cmp
fwait
xchg
cmp
in
push
sbb
pop
popa
pop
push
add
sub
ret
adc
cs
adc
pop
cltd
and
or
add
fs
call
pop
out
sti
mov
mov
das
push
inc
adc
or
dec
imul
js
xor
mov
sbb
and
sbb
push
jae
push
inc
fwait
call
clc
cmp
xor
js,pn
test
lock
inc
dec
cs
hlt
out
sbb
mov
movsb
xor
lcall
add
or
inc
add
inc
cwtl
movsb
data16
js
out
pop
stc
sub
fcmove
movsb
fcoms
test
clc
and
in
xor
push
loopne
lret
or
insl
pop
jnp
add
out
xchg
repnz
rcll
insb
adc
mov
stos
mov
shr
inc
pop
or
in
mov
or
out
call
xor
jbe
aad
push
sub
and
in
int3
leave
mov
xchg
inc
incl
xchg
xchg
test
cmp
pushf
popa
mov
jae
dec
xor
in
mov
dec
arpl
int3
andb
in
jno
pop
push
sub
filds
mov
push
fldenv
xor
pop
sub
cli
push
pop
cmp
sbb
jno
cld
xchg
pop
adc
sahf
inc
cmpsb
adc
mov
lods
xor
into
jg
sub
pop
jns
lds
stc
mov
jae
jmp
mov
out
jmp
sbb
mov
xchg
shlb
mov
xor
and
mov
cmp
jl
and
lret
out
pop
xor
push
in
inc
mov
dec
movsl
sub
fstl
fstps
test
pushf
push
sub
xchg
rclb
lretw
and
js
add
iret
leave
jo
dec
loopne
subb
arpl
xlat
dec
xlat
je
or
adc
pop
jnp
dec
xor
outsb
inc
mov
popf
imul
adc
call
bound
and
push
arpl
mov
xor
cmpsl
mov
fsub
jl
int
shl
ljmp
rorb
stos
andl
dec
dec
sbb
mov
rolb
cltd
addr16
call
push
and
ficompl
mov
xchg
jecxz
leave
into
xchg
xlat
nop
jmp
xlat
sbb
adc
lods
sbb
inc
push
mov
mov
sbb
xchg
fs
adc
bound
push
sti
push
xor
mov
pushl
cmp
je
fdiv
jg
rclb
scas
xchg
xchg
idivw
das
stc
movsb
sbb
mov
jbe
jl
cmp
call
jbe
stc
out
stc
stc
cmc
daa
mov
push
lcall
lds
jbe
testb
adc
cwtl
jle
adc
cmpsb
push
pop
bound
mov
mov
popf
push
jp
or
sbb
sub
cmp
mov
jb
iret
jg
dec
mov
mov
fwait
fwait
hlt
mov
sub
mov
das
and
inc
pop
or
pop
into
movsb
dec
adc
fs
mov
mov
mov
enter
cmpsb
imull
sbb
scas
xchg
outsb
mov
jbe
cmp
mov
in
xchg
xor
ja
cmpsb
xchg
insb
cwtl
mov
pop
xor
call
fs
in
fwait
notl
sar
aam
sbb
repz
clc
mov
loopne
inc
stc
adc
mov
scas
mov
call
adc
ljmp
xor
rcrl
arpl
cld
push
mov
inc
cltd
xor
mov
sub
fwait
push
sbb
fwait
push
adc
cltd
inc
repz
or
andl
jmpw
mov
icebp
insb
jne
xchg
cmp
adc
mov
outsl
fwait
in
outsl
mov
mov
into
pop
jge
lcall
xchg
rclb
xlat
inc
sbb
jle
inc
mov
das
add
xor
pop
ja
add
cmp
les
lea
and
mov
decb
dec
lods
inc
lods
in
or
imulb
cwtl
mul
sub
out
xchg
les
hlt
cld
ret
out
adc
adcb
in
mov
js
cmp
dec
int3
mov
leave
sbb
inc
mov
or
cmp
mov
or
mov
dec
jle
cmpsb
enter
jne
cs
daa
outsb
sub
mov
or
std
lods
and
push
loope
out
push
pop
or
fs
sbb
lods
dec
inc
adc
and
xchg
fldenv
int
sbb
xor
pop
lods
mov
cwtl
cmp
jmp
rorl
inc
ss
jnp
fisttpl
jg
or
adc
pop
jb
insb
les
mov
mov
movsb
jb
iret
xor
add
mov
push
int3
ficomps
mov
adcb
cmpsl
testb
popa
or
mov
mov
dec
lcall
push
push
rcll
dec
push
cmp
movsl
pop
xchg
roll
imul
stc
scas
xor
iret
aaa
add
loopne
gs
sub
or
pop
leave
or
call
les
jbe
test
and
mov
mov
or
jg
out
aam
or
push
nop
mov
jae
call
leave
or
or
pop
inc
mov
loop
jnp
scas
jecxz
jmp
add
sti
cmp
adc
pop
pop
iret
adc
adc
or
stos
inc
ret
mov
repnz
dec
testb
adc
cmp
hlt
insb
mov
hlt
jnp
daa
lcall
sbb
std
shlb
push
call
fisubrs
out
adc
dec
icebp
popf
shll
xchg
fwait
jecxz
jmp
rcrb
pop
subl
jae
push
or
dec
mov
pop
movsb
insl
insb
pop
mov
xchg
cmp
xor
mov
adc
cltd
xchg
nop
aaa
stos
pusha
imul
dec
rcrl
pop
mov
mov
and
xchg
adc
cmp
dec
cmp
aaa
add
xor
xor
jb
push
mov
mov
mov
jl
mov
xchg
lods
mov
ficoms
repnz
pop
jbe
lea
dec
push
xchg
dec
cltd
aaa
add
outsb
test
ljmp
cs
fstpt
mov
push
dec
inc
aaa
rcll
xor
outsb
xchg
jo
dec
cmp
or
sbb
add
call
ss
ss
sub
imull
mov
add
cmp
push
xchg
mov
pop
mov
std
cmp
ffree
add
push
andb
outsb
mov
test
dec
mov
addr16
rcrb
out
movsl
lahf
outsb
cmp
fs
lds
popa
add
adc
lods
sub
cltd
push
pop
iret
pop
aad
xchg
inc
sub
sub
sbb
mov
popa
out
xor
add
adc
adc
mov
xchg
cli
call
clc
rcrb
pop
imul
cmp
adc
orb
mov
inc
or
xchg
dec
xlat
sub
and
jle
jne
push
stc
fwait
mulb
pandn
out
shll
fcoml
pop
in
cmpl
call
xchg
xor
and
fnsave
aaa
mov
out
mov
ljmp
imul
pop
jle
shlb
jo
mov
shrb
fmull
lods
push
pop
idivb
lcall
rolb
test
pushf
mov
adc
imul
mov
cs
sbb
push
pushf
mov
sbbb
insl
ss
mov
lret
lret
and
dec
xorb
rcll
and
in
ljmp
inc
rcr
sub
push
int
sbb
aam
fldcw
lret
sti
push
andb
arpl
stos
pop
add
push
mov
mov
ret
push
pop
or
cmc
push
lds
add
jge
mov
inc
push
hlt
arpl
mov
dec
cwtl
leave
push
cmp
ret
out
adc
iret
cltd
pop
ja
mov
sbb
rol
stos
cmpsl
cmp
mov
cld
mov
sahf
mov
daa
jle
dec
sub
loope,pt
xchg
sub
jne
xorb
or
aaa
add
pop
fildl
call
je
addb
sarl
fdivl
jmp
test
imul
pop
aam
in
jae
adc
insl
repz
hlt
iret
adc
adc
inc
jae
fisubs
inc
jbe
inc
inc
sbb
sub
lods
shrl
pop
ret
cmpsl
dec
sbb
int
push
scas
data16
test
shll
icebp
out
aam
inc
xor
cmpsl
mov
aad
movsl
ret
sbb
cmc
xor
into
arpl
pop
inc
adc
cmp
rcrl
pop
daa
push
hlt
mov
xor
xchg
into
imul
mov
push
enter
ja
push
push
dec
and
jecxz
mov
test
xchg
xor
dec
out
jbe
and
enter
cltd
push
in
loop
test
xchg
xor
jne
inc
mov
sahf
stos
aam
ss
popf
mov
mov
xchg
ja
dec
and
or
ret
cmp
in
repnz
mov
test
add
std
pushf
daa
je
cld
cmp
icebp
ret
mov
enter
rep
test
std
pop
mov
push
adc
in
jg
adc
enter
nop
mov
mov
sahf
mov
mov
scas
into
xchg
mov
mov
test
jle
ficomps
or
fdivrs
jge
inc
jle
outsl
push
and
repz
jmp
mulb
jne
loopne
push
into
mulb
lret
pop
ljmp
test
outsl
sahf
loope
cli
or
xor
test
int3
mov
mov
shl
lcall
ds
outsb
pop
shlb
xchg
dec
aad
and
cmc
loop
mov
xchg
adc
push
leave
aam
sub
mov
cmc
add
int
fsubrl
push
pop
sub
pop
mov
fcoms
in
adcl
jbe
lea
cld
xorb
jo
pop
pop
inc
push
mov
ret
je
call
rolb
mov
orb
push
or
loopne
aas
pop
mov
xchg
jo
aad
xchg
loope
push
mov
lock
mov
sbbb
cli
jne
xchg
push
stc
mov
in
pop
pop
or
dec
cmp
and
add
enter
adc
mov
dec
and
adc
daa
sbb
idivb
orl
xor
jecxz
pop
out
stos
mov
jp
jecxz
push
fs
or
in
pop
inc
push
push
enter
sub
cmpsb
dec
pop
fnstenv
fidivl
je
pop
loop
xchg
push
push
cmp
jae
lahf
push
inc
loope
dec
jge
xor
movsl
xchg
in
mov
idiv
int
dec
test
xorb
add
cwtl
lock
xor
push
pop
mov
push
lret
push
xor
ljmp
notb
imul
fwait
in
in
xchg
in
imul
mov
pop
ja
sahf
lahf
mov
repnz
lcall
push
mov
aam
push
or
cmp
insb
mov
mov
add
sub
inc
mov
adc
testl
dec
push
mov
adc
rorl
xor
jae
or
std
fcmovb
stos
add
mov
inc
fwait
shll
sahf
mov
cmp
mov
jle
inc
aam
sub
cmp
push
inc
xor
sub
push
sbb
outsl
cmp
es
fadds
mov
enter
cmpsb
and
mov
int3
cs
jno
scas
cmp
loop
ja
leave
out
push
divl
add
shll
xor
adc
sti
pop
cltd
mov
ret
jns
jle
mov
cmc
xchg
hlt
sarb
add
cmpl
int3
cmp
cmp
scas
push
sub
insl
in
xchg
call
or
lods
pop
dec
in
call
aas
in
std
out
xchg
jb
cwtl
add
mov
push
das
pop
iret
ss
sbb
cltd
push
and
push
ss
xchg
aad
cmp
andl
cmp
adcb
sahf
xchg
cmp
rcrl
jb
jge
pop
fwait
or
cli
mov
ss
cmp
shrl
xor
xchg
pushf
fcomip
jb
push
loope
nop
push
inc
sub
mov
shr
fildll
clc
stos
repz
test
cld
or
dec
inc
hlt
inc
in
xor
pop
aam
repz
mov
pusha
nopl
in
mov
mov
jl
into
cli
adc
in
push
stos
inc
push
push
lcall
mov
ret
cmc
lods
shll
pusha
inc
cmpsl
stos
xlat
sub
ljmp
dec
jl
mov
sysenter
test
in
mov
pusha
loop
jecxz
lock
outsl
lods
pop
sbbb
dec
fsubl
les
mov
clc
xchg
mov
add
insb
mov
mov
push
std
mov
and
ds
gs
iret
jae
pop
jnp
xchg
test
iret
adc
xchg
shl
jb
dec
je
lret
mov
loopne
in
outsl
lods
movsl
jb
outsl
mov
or
jecxz
mov
push
cs
cmp
sbb
mov
bound
add
loop
in
loop
jbe
dec
sbb
cs
mov
and
fiaddl
into
mov
cmc
cmp
adc
aad
fisttps
adc
or
mov
and
add
aaa
sub
imul
cld
clc
rolb
mov
sbb
dec
sub
in
mov
inc
and
das
dec
scas
and
xchg
and
loop
and
imul
jge
and
imul
out
mov
xchg
sbb
pop
ja
mov
cmpsb
cmp
jae
leave
sbb
sbb
sub
ds
jmp
and
jno
ror
mov
aad
pop
and
push
lret
mov
ss
sarb
les
aam
in
sub
jmp
mov
push
mov
add
inc
sbb
fstps
outsb
mov
test
inc
lahf
or
aad
push
dec
sub
aaa
add
scas
dec
and
pop
push
fmull
jp
cwtl
xor
inc
and
out
popa
sbb
adc
repz
pop
andl
push
or
add
ljmp
sbb
xlat
sahf
out
fs
or
lea
add
lds
cs
and
stos
sub
push
jb
test
jge
push
xchg
icebp
adc
pushf
in
inc
dec
add
fdivrs
lea
shr
xchg
sbb
shl
push
push
loope
inc
jg
mov
push
dec
cli
ss
jnp
push
mov
loopne
jae
dec
jnp
adc
loop
inc
or
and
push
and
leave
movsl
ret
fiaddl
cs
xor
popa
in
push
movsb
push
xchg
jae
aad
xor
mov
xor
sarb
test
fisubs
xchg
mov
add
mov
lahf
pop
int
call
rorb
lret
mov
add
in
xchg
jbe
jmp
jae
and
sub
daa
pop
out
cmp
mov
fwait
jmp
mov
sub
sbb
jae
test
out
mov
jno
inc
mov
mov
sub
pop
stc
jg
pop
jl
in
xchg
pop
xchg
dec
mov
scas
je
push
loop
lret
pslld
cld
cltd
ret
in
add
aas
add
push
ds
cli
imul
pop
adc
cltd
mov
cmpsl
fimuls
jnp
sbb
add
pop
dec
loopne
mov
cltd
popf
adc
fistl
cmpsb
sbb
insb
fldcw
xor
mov
push
leave
arpl
pop
xchg
dec
lods
push
mov
mov
jp,pt
in
mov
push
test
test
mov
and
cmpsl
xor
push
mov
mov
dec
pusha
jns
or
jae
das
mov
les
inc
or
popf
out
test
mov
and
inc
stos
mov
cmpsl
cli
mov
ret
pop
mov
inc
fistl
insb
sub
jo
mov
pop
xchg
add
add
add
pop
add
idivl
lock
loopne
das
inc
xchg
ljmp
icebp
int3
mov
pop
xor
jge
je
je
sub
push
and
insb
mov
loopne,pt
xor
cltd
sbb
sbb
push
sub
outsl
sahf
sti
das
sub
aas
fisubrs
testb
push
add
mulb
sub
pop
inc
cmpsl
add
lret
or
jae
shll
add
std
dec
sub
idivl
shll
sti
dec
and
lock
jge
xor
mov
mov
or
xor
lret
cmpsb
popf
push
pop
sbb
dec
jl
pop
adc
mov
imul
jmp
add
out
sbb
icebp
xor
leave
mov
jb
dec
out
sbb
addr16
and
movsb
push
mov
xchg
xchg
inc
adc
sub
sbb
orl
sub
lcall
dec
rcll
pop
mulb
shrb
test
mov
cmp
sbb
scas
mov
xchg
fnstenv
fldcw
aad
and
lahf
xor
xchg
cmp
mov
inc
pop
loop
dec
mov
imul
stc
ljmp
and
and
jmp
mov
in
sub
ljmp
add
pusha
aaa
pop
pop
fucomi
and
divl
push
cwtl
jno
insb
bound
push
inc
push
test
int3
mov
sbb
or
movsl
push
or
xchg
arpl
insb
scas
jnp
xchg
enter
push
loop
cli
fidivl
sbb
subl
fisubl
xor
and
gs
mov
add
jae
push
movsb
xchg
and
sub
leave
pop
jnp
xor
pop
fwait
push
pop
stos
push
test
inc
sub
adc
jo
loope
in
pop
js
or
imulb
dec
push
jmp
sub
shl
cmovb
aad
mov
mov
je
dec
into
xchg
mov
pop
mov
add
imul
mov
faddl
mov
cmpsl
pop
mov
sbb
add
dec
lret
jmp
movsl
mov
lods
inc
ret
cmpb
cwtl
popf
xlat
lahf
pop
cld
fisttpll
movsl
lods
push
mov
ds
data16
in
jno
pop
or
outsb
add
cmp
and
andb
pop
cmp
rcrb
aas
or
adc
push
mov
aaa
sbb
pop
mov
sbb
shl
pop
mov
aas
cmp
push
adc
push
mov
cld
cmp
fcomps
lea
jns
mov
jl
adc
mov
mov
inc
or
mov
add
sti
pop
cmp
pop
divb
cmp
stos
shll
sub
dec
jno
jp
sub
arpl
push
pop
and
mov
inc
sub
and
and
pop
fldl
popa
repz
mov
dec
and
outsb
ss
stos
xor
mov
inc
popf
adc
cmc
jg
nop
xor
mov
fcomi
mov
push
enter
fs
and
mov
adc
pop
ljmp
fstpl
addr16
leave
movsb
pop
mov
in
mov
dec
cmc
xlat
jno
mov
cmp
jle
fwait
xchg
int
aam
aaa
rorl
pop
mov
jbe
xchg
leave
mov
aam
repz
mov
add
inc
pop
sub
and
insb
repnz
pop
xlat
ds
aaa
cmpsb
icebp
fistpll
sub
xlat
leave
mov
dec
push
jne
push
add
push
ljmp
scas
outsb
sahf
scas
in
loope
divl
nop
int3
insb
clc
shl
lcall
dec
dec
fwait
xor
ja
adc
ds
xor
cld
cmp
pop
mov
insb
fidivrl
fsubrs
add
pop
rcrl
sub
loop
dec
xchg
jg
leave
inc
xor
fmull
sub
mov
fwait
or
int
int
int
aam
dec
loopne
negl
xlat
into
sbb
pop
fadds
xchg
ret
pop
cmp
in
imul
ja
push
loop
arpl
and
lock
inc
iret
aaa
in
pop
gs
stc
fstpl
aam
out
and
shlb
arpl
or
fsubrl
jae
xor
cmp
arpl
fistl
test
mov
je
leave
xchg
add
xchg
push
lret
jb
cmp
cmp
sub
push
pushf
push
xor
cli
push
je
out
inc
xchg
shll
in
adcl
adc
ret
fsubp
mov
sbb
push
subb
lock
mov
aas
jmp
iret
arpl
mov
push
int3
jmp
dec
fisttps
xor
pusha
jg
insb
push
adc
or
dec
xlat
adc
insl
mov
test
inc
sbb
and
sub
aam
sbb
mov
pop
mov
lock
sti
imul
into
jnp
or
xchg
jae
fistps
fstp
xchg
fistps
dec
daa
fmull
leave
mov
lds
and
sbbb
adcb
cmpb
ja
sub
aaa
dec
push
adc
cmp
push
std
aad
pusha
ds
inc
sub
subl
xor
cmc
aam
stos
je
inc
push
push
fwait
out
in
push
jp
sub
aas
fsubl
fstpl
adc
ss
out
cmp
lods
sub
popa
repnz
sub
cmp
and
xchg
mov
pop
mov
test
mul
mov
xchg
mov
xor
cmpsl
aam
sbb
mov
lock
cmc
ja
aas
lahf
mov
rcl
scas
pop
pop
jle
jmp
aam
je
pop
pop
add
repz
lcall
mov
lods
jg
sub
fwait
pop
cmp
aaa
xlat
push
in
aaa
incb
add
mov
add
lahf
lret
xchg
add
jle
sub
xchg
dec
test
mov
cmp
xor
cmp
jl
mov
sbbl
inc
dec
enter
scas
je
mov
ror
out
rcl
movsl
mov
testb
jecxz
mov
xchg
mov
sub
mov
loope
xchg
test
jne
bound
jns
add
or
xchg
jmp
mov
test
in
jg
aas
adc
fldt
push
dec
int
pop
repz
mov
jne
mov
das
rcl
dec
iret
xchg
int
lods
pusha
out
arpl
mov
push
ss
mov
test
adc
icebp
mov
dec
mov
adc
ret
scas
inc
aas
ja
cltd
shl
add
ss
es
and
cld
test
nop
xor
push
in
mov
negb
stos
or
or
shrl
js
xchg
pusha
pop
into
add
xchg
andb
cmp
cld
xchg
cmp
sbb
testb
scas
and
sub
jns
mov
clc
cmp
jl
cmp
mov
or
pop
push
lea
inc
mov
test
sbb
mov
adc
cmpb
test
out
out
xchg
in
jns
pop
or
in
jg
adc
call
ljmp
push
push
add
or
adc
sbb
shlb
movb
cmc
xor
sub
loope
dec
sub
loope
push
fbld
jne
outsb
mov
push
cmp
push
imul
dec
and
daa
dec
divb
lcall
cmp
mov
dec
clc
or
xlat
arpl
shll
mov
movsl
bound
and
inc
fcoms
xlat
lahf
mov
or
push
test
nop
enter
sub
out
ja
and
jb
mov
push
fistps
mov
jle
xchg
add
pop
push
mov
jecxz
or
ret
mov
sbbl
sbb
test
sub
push
lods
sub
sub
pop
push
mov
jns
jl
jbe
test
inc
sti
push
or
loope
cmp
lret
pusha
cwtl
repz
scas
mov
sub
in
adc
sub
sbb
dec
inc
xchg
fwait
imull
subl
movsl
adc
pop
hlt
inc
add
xchg
push
push
cmp
pop
insl
add
adc
ficompl
and
daa
pusha
cli
in
jmp
adc
adc
sub
inc
inc
inc
or
or
cmp
mov
nop
cmpb
xor
dec
jo
dec
fdivrl
ja
fidivrl
pop
aaa
push
cmp
shrl
sbb
int3
into
test
sub
mov
mov
mov
test
testl
adc
xor
adcl
cmp
mov
insb
dec
imul
testl
dec
jne
add
adcl
jno
adcl
mov
sub
cmc
jmp
fldlg2
or
inc
mov
int3
fstpl
pop
add
inc
sub
std
push
xor
cmp
in
or
xchg
inc
gs
push
bound
add
cld
rol
add
aas
cmpsb
fadd
jmp
pop
add
sub
pusha
jge
mov
jg
leave
mov
popa
int3
and
cmp
pop
or
dec
gs
fildl
ret
cmp
outsl
jp
mov
mov
push
imul
pop
sbb
int
mov
cli
and
mov
push
lea
fstpt
xchg
loop
push
jno
out
sti
pop
sbb
cmp
arpl
xchg
mov
sbb
sarl
adc
cmp
cmp
lahf
mov
insl
mov
mov
cmpsl
cld
lods
lret
push
pop
loopnew
ret
pop
inc
and
pop
dec
mov
pop
ret
stos
pop
cwtl
ljmp
in
fistps
adc
out
and
out
inc
ja
push
xor
mov
popa
mov
pop
popf
in
and
xor
xor
pushf
pop
push
add
and
jg
cmpsb
int3
gs
enter
ror
stos
fmuls
arpl
mov
lret
mov
jmp
add
repnz
or
dec
int
pushf
pop
mov
push
pop
or
push
or
sarl
leave
cmp
sub
fidivrl
adc
mov
arpl
push
popf
xchg
jl
jo
mov
ret
fbld
xchg
sahf
jle
shr
insb
addr16
jb
add
mov
and
clc
add
inc
sub
addr16
rcrb
xchg
je
dec
push
sahf
mov
sbb
sahf
jnp
pop
into
and
mov
ss
in
sub
loop
push
cmp
xchg
mov
test
xlat
cmpb
lea
push
sub
mov
mov
pop
inc
fstps
mov
jg
mov
jmp
dec
fucomi
adc
jns
or
mov
sbb
jp
out
aas
sbb
pop
xor
and
cwtl
xchg
iret
shlb
js
jno
aaa
mov
jb
insb
sbb
adc
stos
int3
movsb
lret
lea
sti
outsb
aas
lea
dec
pop
stc
push
or
les
leave
aam
cmp
into
cmp
or
loope
push
lahf
popf
dec
or
rcrb
js
ljmp
stos
jp
clc
filds
popf
push
sub
movsb
mov
push
hlt
stc
sub
movsl
test
inc
shlb
ja
orb
xchg
adc
jbe
or
addr16
add
cmpsl
cmpsb
ficomps
mov
lahf
pop
jo
dec
xchg
mov
arpl
andl
sbb
popa
cmpb
cmp
fwait
mov
popf
stc
mov
std
pop
mov
cmpsb
cmc
push
popf
shrb
aad
adc
cmpsb
lods
mov
sub
fdivs
push
jl
add
add
in
adc
push
sbb
sub
push
push
scas
push
push
jg
dec
pop
testb
sbb
movsb
or
or
mov
push
inc
xchg
mov
or
je
pop
imul
daa
dec
jmp
mov
popa
or
stc
jge
ror
cmpb
aam
aas
jl
cmpsb
shl
pop
xor
test
xor
xchg
push
scas
outsl
mov
fucomi
fcomi
sub
push
in
xchg
sub
and
out
dec
xchg
loope
push
push
bound
cltd
cmp
mov
mov
inc
movsb
xchg
pusha
idiv
int3
in
jg
sarl
fldl
fistl
sbb
data16
xlat
pop
mov
mov
aas
insb
les
pusha
icebp
sbb
adc
lock
ss
repnz
and
daa
inc
sbb
add
mov
jle
dec
inc
push
pop
in
dec
mov
aas
rcrb
movsb
sub
add
imul
and
shll
inc
out
enter
insl
test
je
hlt
std
jnp
sahf
mov
mov
sub
push
cmpsl
dec
jl
mov
xchg
dec
testb
ljmp
xchg
adc
mov
cmc
mov
mov
push
insl
push
sbb
test
or
and
mov
pop
arpl
inc
fadds
cmc
enter
dec
jge
jge
xchg
outsl
decl
test
mov
jne
mov
adc
pop
mov
subb
pop
lahf
mull
xor
stos
sbb
ja
int3
adc
dec
pop
jp
fnstcw
movq
sbb
in
mov
clc
lret
xchg
movsl
movsb
ret
ret
adc
test
mov
ffreep
mov
jae
jns
add
jl
mov
push
insl
pop
fs
sarl
cmpsl
pop
scas
into
out
shrl
imul
nop
xlat
sbb
test
rcll
lock
je
pop
rolb
mov
or
dec
in
cli
lea
faddl
rcr
data16
push
lahf
imul
loope
and
iret
jmp
pop
mov
test
lods
sub
stos
pop
mov
and
and
pop
ret
fwait
cld
iret
mov
xchg
sub
cmp
ljmp
enter
inc
insb
popa
scas
cmp
sub
mov
push
xchg
sahf
dec
xlat
fwait
stos
add
lret
test
xchg
push
jecxz
call
push
sub
push
pop
rorb
cmc
sbb
repz
dec
jg
fs
or
lcall
popf
jecxz
dec
jl
mov
mov
mov
pop
sub
cmp
sub
or
xchg
dec
jle
mov
movsl
dec
negb
or
nop
cmpsb
pop
mov
add
pop
cwtl
pop
jae
xchg
xor
dec
pushl
mov
push
mov
xchg
dec
xor
clc
jle
ss
jb
xchg
push
cwtl
xchg
das
hlt
mov
fwait
aam
aas
icebp
sub
xchg
insb
sbb
mov
and
mov
cmp
lret
dec
dec
xchg
inc
shlb
sbb
shll
divb
jp
cmpsb
imul
test
in
and
pop
pop
outsb
aaa
notl
add
xor
lods
loopne
push
cmp
xlat
aaa
mov
dec
mov
out
sbb
and
mov
pop
jnp
data16
inc
imul
and
mov
dec
jne
jg
xor
idivb
out
aaa
pop
fsubs
xor
xor
push
fs
xchg
dec
mov
mov
sarb
movsl
adc
pusha
rolb
je
inc
popl
cmpsb
inc
xlat
fidivl
mov
call
jae
mov
in
mov
dec
ljmp
sbb
mov
mov
out
sbb
lret
or
sub
and
popf
push
jo
repz
jge
inc
cmp
lds
outsl
fisubrl
jmp
stos
pop
mov
negl
inc
lock
outsl
jne
inc
out
pop
xchg
cmp
aad
call
shll
or
lods
out
in
sub
inc
cmp
aam
and
xor
cmp
sub
ffree
cltd
iret
jge
test
sbb
adc
dec
add
ds
fs
dec
pop
mov
sti
jecxz
sbb
andl
pusha
call
push
stos
pop
adc
scas
lods
imul
cs
sub
cmp
cmpsb
and
orl
inc
cmp
mov
test
sbb
test
mov
sahf
dec
outsl
or
inc
mov
sti
cmp
mov
imul
or
mov
std
or
mov
xor
and
pushf
cmpsb
ljmp
jle
push
negb
gs
shll
filds
jl
pushf
cwtl
dec
hlt
out
imull
adc
xchg
inc
lods
push
mov
push
repnz
sbb
aas
ret
mov
push
orb
sub
sub
xchg
fimull
rcll
xchg
jmp
test
cli
and
ja
clc
mov
sarb
xchg
pusha
mov
mov
pusha
add
fnstenv
outsb
dec
push
int
push
or
dec
push
ljmp
loop
mov
mov
sahf
push
xlat
mov
cmpsb
scas
lahf
sub
cmpsb
insb
xchg
sub
add
in
int
test
das
clc
ja
mov
mov
sub
ljmp
mov
mov
lret
mov
xor
lretw
adc
fdivs
das
jg
mov
xor
addb
sub
rcrb
adc
ljmp
inc
pop
sbb
ss
mov
cld
cmc
repnz
daa
pop
fnstenv
mov
cmpl
xor
stos
cmp
scas
add
mulb
cli
das
jns
in
fimuls
mov
imul
xchg
jae
inc
or
shll
icebp
lock
sbb
je
into
mov
inc
ret
lahf
inc
add
pop
mov
jne
xor
test
mov
dec
pop
ficoml
jo
fxch
repz
or
pop
loope
mov
xchg
jno
rolb
mov
and
mov
fdiv
add
clc
aaa
pop
xchg
call
mov
push
xchg
mov
sub
mov
test
test
add
and
xor
test
cltd
popa
fildll
rcrb
push
or
sub
ss
out
nop
dec
int
pop
jmp
test
push
adc
lea
xor
cwtl
imulb
sub
inc
sub
xchg
inc
sub
sbb
cli
cmp
loop
cltd
add
cld
rcr
popa
outsb
nop
scas
or
aas
mov
cli
adc
adc
in
jnp
cmpsl
cltd
outsb
jb
jecxz
rol
or
je
in
pop
iret
cwtl
addb
aas
popa
mov
dec
andl
push
test
iret
ss
aas
cmp
test
jb
push
aaa
ret
or
mov
dec
fldcw
out
std
and
popl
xor
push
lods
xchg
jg
mov
or
adc
fcmovne
sbb
pop
mov
pop
in
rcl
cmp
cmp
scas
cmp
call
divb
ret
lahf
add
cmp
mov
mov
adc
and
inc
lea
adc
jbe
dec
lahf
pop
add
cmpsl
mov
sarb
ret
push
and
add
cmp
jae
faddl
aas
mov
and
sbb
mov
lcall
lock
sbb
call
dec
push
cmp
xor
aaa
pop
dec
shll
cmpsb
xor
xchg
cmpsl
loopne
sub
lret
lcall
int3
imul
inc
mov
sbb
gs
loope
inc
orb
mov
inc
ljmp
in
pop
jne
mov
inc
in
xchg
mov
and
xchg
das
push
outsb
jmp
sub
mov
add
lret
test
ds
xchg
cmc
push
add
xor
ljmp
dec
pop
pop
ljmp
inc
adc
mov
ljmp
cltd
insb
ss
pop
xchg
cmp
ljmp
jmp
xchg
insl
xlat
adc
mov
mov
pop
mov
adc
fisttps
mov
mov
fs
push
idivl
in
call
mov
cmp
in
nop
ret
into
dec
sbb
fmulp
daa
sub
xchg
add
add
out
mov
mov
movsb
in
lods
add
cmp
add
cmp
in
jne
stos
mov
jno
cmc
xchg
fsubr
dec
push
fists
fbld
out
movsb
jae
lods
mov
xchg
adc
fildll
mov
sub
sbb
mov
pop
or
adc
or
push
add
lea
mov
jmp
add
into
movsl
and
or
or
pop
test
outsb
mov
pop
and
add
popa
mov
loop
and
push
dec
jp,pn
stc
dec
push
movsb
mov
ds
pop
xor
and
in
pop
mov
push
pop
add
in
outsb
sub
jp
inc
addb
mov
pop
sub
ljmp
movsb
stos
pop
aad
rorl
push
jg
mov
lahf
sub
ret
mov
std
std
sub
leave
push
sub
jbe
mov
leave
inc
sub
pop
mov
or
mov
sub
ret
rorb
pusha
paddw
out
sbb
imul
mov
xchg
stos
jle
test
mov
into
jecxz
inc
mov
ficoml
inc
mov
xchg
fisubrl
lods
and
xor
xchg
sbb
mov
scas
aas
frstor
jp
lods
adc
test
popa
mov
fisubs
dec
cltd
in
push
aaa
mov
jl
out
and
push
inc
xor
sub
dec
push
cmp
push
cmp
stos
frstor
test
jo
dec
test
adcl
pop
fwait
rcrb
xchg
jge
push
sub
loope
mov
jmp
inc
sub
push
fsubp
faddl
add
cmp
push
adc
loop
mov
movsb
cwtl
xor
xchg
jnp
cmc
into
inc
cmpsl
xchg
push
pop
xchg
mov
mov
fbld
arpl
pop
jecxz
xlat
mov
xorl
hlt
or
inc
mov
adc
in
out
push
fcomps
test
mov
stc
stos
xor
aad
aaa
nop
popl
sbb
mov
cmp
cltd
loopne
xchg
test
mov
enter
xchg
fwait
pop
aaa
aas
inc
push
mov
mov
and
or
inc
xchg
mov
mov
jecxz
cltd
pop
inc
push
iret
in
pop
sub
imul
in
add
jg
push
dec
xor
mov
dec
xchg
loopne
mov
jle
pop
cmc
outsb
scas
inc
pop
inc
test
ds
shr
int3
sub
shlb
mov
xor
cmpsb
je
fldl
fisubrl
sbb
pop
adc
push
sbb
sbb
scas
ds
xor
cmp
cmp
adc
or
push
mov
in
dec
push
sbb
xchg
fistpl
and
xor
lret
mov
and
dec
aam
xchg
lock
adc
mov
push
fxch
mov
cmp
jbe
call
jb
xorb
sbb
popa
push
orb
mov
mov
or
lods
hlt
mov
cmpsb
or
adc
xchg
sbb
sub
mov
push
jnp,pn
mov
jle
push
cmp
dec
aam
jmp
roll
iret
dec
or
sti
mov
dec
push
xor
push
fwait
lods
jmp
jb
test
inc
inc
sbb
addr16
imulb
push
jo
sbb
xlat
xchg
sub
pop
pop
sbb
ljmp
dec
fiadds
sbb
lret
in
divl
test
scas
sub
sbb
in
ret
test
push
inc
dec
bound
fwait
xchg
add
lock
mov
jnp
test
push
sbb
fmull
cwtl
hlt
mov
out
fcoms
daa
popa
int
mov
imul
adc
and
fdivl
jecxz
imul
dec
add
sbb
fwait
movsb
shll
mov
jp
jns
or
sub
xor
mov
push
cmp
ss
adc
mov
inc
es
dec
xchg
lret
call
xor
scas
mov
dec
inc
jbe
xlat
cmpsb
clc
lcall
fimuls
mov
or
arpl
mov
loopne
pop
dec
pop
js
scas
pop
fbstp
push
sub
mov
dec
and
jns
cld
lcall
inc
sub
mov
sti
repz
movsb
or
enter
enter
dec
dec
std
sub
fidivs
jecxz
add
loop
xchg
popf
shll
out
lea
out
xchg
jmp
shll
xor
stc
cltd
fnsave
xor
fstpt
loopne
adc
mov
mov
mov
sbb
cmp
aas
adc
xchg
dec
dec
add
sar
mov
adc
xor
lods
addr16
lret
js
add
cs
adc
dec
xchg
lea
mov
sahf
aam
jp
mov
and
pop
aaa
pop
xor
stos
jnp
and
fsubl
jp
push
adcb
cmc
dec
dec
out
jp
jns
jbe
sbb
out
scas
inc
inc
dec
or
xlat
aad
jmp
jecxz
lret
insl
push
jo
xor
mov
mov
dec
jno
repz
inc
add
jge
icebp
ror
xor
mov
fsub
lahf
nopl
movzwl
push
leave
mov
xor
inc
sbb
ss
adc
pop
jnp
pushf
insl
scas
pusha
data16
pop
or
cmp
pop
jge
cmpsl
mov
lock
or
jg
gs
dec
jg
ja
add
inc
push
dec
mov
das
pmulhuw
mov
stos
out
lret
out
leave
fldt
cli
jno
scas
cmp
cmp
cmp
pop
testb
cld
pushf
pusha
icebp
bound
push
js
nop
arpl
xor
stc
int
popa
out
or
insb
ds
insb
jne
dec
aad
enter
pop
outsl
fxch
push
xor
stc
dec
js
mov
je
mov
cmp
jbe
xor
xor
jg
outsb
hlt
xor
and
xchg
jae
fbld
pop
rorb
sub
lock
gs
dec
ret
xchg
xchg
and
mul
fldcw
sbb
mov
imul
and
cltd
mov
sub
pop
sub
or
sub
fisubl
xor
add
arpl
or
or
outsb
jg
imul
je
inc
sbb
iret
jno
bound
test
roll
imul
test
std
add
cmp
es
out
scas
mov
hlt
pop
or
xchg
jb
add
scas
in
adc
scas
cmp
aaa
movsb
mov
hlt
loopew
aam
andl
inc
iret
rcl
adc
movsb
aam
xor
and
mov
dec
jbe
fsubl
arpl
aad
mov
sub
repz
outsl
inc
enter
or
repz
pusha
fsubl
ret
ret
dec
jp
jne
or
push
and
push
popf
push
or
mov
sbbb
cmpsl
lods
xor
mov
int3
scas
xchg
sub
sarl
cmp
ret
stos
ss
icebp
pop
mov
adc
pop
xchg
not
lea
mov
loopne
aas
xor
inc
arpl
adc
mov
cltd
push
mov
add
pusha
xor
xchg
jmp
jge
sbb
inc
scas
sbb
std
prefetcht1
inc
rcll
insb
xor
aam
or
push
mov
lods
cmpsb
test
mov
jb
lret
stos
lods
test
mov
add
sti
xlat
inc
popa
sahf
sbb
js
sbb
mov
sbb
cmp
pushf
data16
adc
insl
lods
and
inc
pop
in
and
pop
imul
sbb
ret
mov
into
mov
xchg
mov
pop
cltd
push
popf
lret
and
addr16
push
popf
add
add
std
sub
scas
fwait
ret
dec
les
sub
movsl
inc
push
jae
cmp
mov
imul
dec
mov
mov
addl
sahf
call
stos
adc
or
xorl
fisttpll
repz
xchg
test
mov
mov
or
aas
jo
adc
fs
aaa
or
sbb
adc
push
dec
mov
push
cltd
sub
sti
lret
push
cmpsb
mov
xchg
sbb
xchg
mov
decl
aaa
add
iret
lods
fdivl
push
lret
jp
sub
cmp
leave
xchg
mov
lret
xchg
lea
popf
cmpsl
dec
sbb
sarl
xor
shrl
jmp
test
pop
arpl
or
mov
xchg
fs
or
je
andb
inc
jno
mov
adc
pop
or
mov
mov
push
aas
jne
mov
sbbl
sub
std
inc
and
subl
int
push
out
xchg
and
out
mov
xchg
mov
rcrl
push
insl
fimull
shl
jp
push
loop
es
jnp
mov
dec
ds
std
push
mov
fdivr
mov
outsb
bound
xor
imul
rcrb
pop
push
jmp
mov
xor
jbe
scas
stc
mov
mov
xor
shll
addr16
sbb
cmp
test
xor
aad
adc
push
jl
xor
in
daa
rol
mov
pop
dec
sbb
or
scas
iret
jg
jp
lret
sub
hlt
mov
jo
jne
push
push
cmpsl
pop
dec
aaa
clc
lret
mov
cmp
testl
mov
lds
mov
add
pop
cmp
fidivrs
sbb
dec
out
dec
adc
cli
addr16
lea
mov
fwait
mov
xor
dec
and
cmc
call
lret
stc
cs
test
mov
sbb
and
call
stos
sub
fistpl
iret
mov
aas
mov
add
and
repz
aad
test
push
add
inc
ret
ret
andl
decl
lret
cmp
push
mov
movsl
cmc
sub
xor
sub
xchg
push
es
mov
lock
push
xor
scas
jbe
jmp
loop
pop
and
and
mov
cmpsb
xchg
mov
ljmp
lea
test
sbb
jns
cs
add
addl
call
mov
xor
imul
pusha
or
and
sar
jno
adc
pop
xor
int3
mov
jae
nop
jo
les
sbb
inc
mov
cmp
lock
jge
adc
jle
cmp
pop
fmul
sbb
pop
xor
mov
hlt
std
or
sub
fistpl
mov
xchg
out
mov
and
aad
aaa
mov
notl
aaa
roll
adc
mov
mov
divl
cltd
pop
xchg
xor
mov
bound
jnp
cld
in
hlt
nop
cmc
inc
inc
cltd
jne
or
sbb
mov
aaa
push
out
xor
mul
icebp
dec
adc
mov
xor
or
ja
push
adc
jbe
fs
leave
sbb
lret
fstl
andb
mov
mov
or
sub
lods
xchg
in
lcall
sub
sbb
in
push
aam
inc
out
fcomps
cmpsb
mov
in
xlat
or
xchg
pop
orl
xchg
dec
lcall
jecxz
xchg
pop
aaa
jmp
xchg
flds
stc
mov
dec
dec
mov
mov
xor
scas
fmull
jae
jo
adc
mov
mov
out
icebp
popa
mov
nop
add
lret
xor
xor
cmpb
repz
push
loop
outsl
js
xor
jno
cmpsb
jb
hlt
lock
fidivrl
push
sarl
sbb
imul
lret
mov
fstps
hlt
mov
lcall
outsb
jne
adc
adc
xchg
xchg
stos
inc
js
aaa
movb
cmp
test
stos
lds
fcmove
cmp
pop
xor
repnz
jl
mov
enter
pop
mov
mov
fdivs
jns
int3
js
or
sbb
jo
cmc
mov
andl
jne
roll
jle
outsl
lods
push
sbb
pushf
sub
lret
xchg
push
loopne
in
lock
bound
je
in
fadd
frstor
rol
sbb
cmp
sbb
xchg
mov
aam
cmp
cli
movsb
faddl
outsl
ficomps
xchg
add
rclb
pop
push
inc
cltd
or
sbb
cwtl
jbe
ret
push
pop
push
leave
out
mov
scas
loopne
jb
cs
mov
pop
sub
or
ret
push
lods
ret
sbb
inc
or
push
out
test
cltd
sbb
fstps
cmp
xchg
stos
add
mov
adc
sub
xor
sbb
adc
lea
fistpll
cmp
jo
pushf
filds
add
out
pop
sysexit
and
test
stc
jno
or
xor
js
repnz
pop
lcall
cwtl
test
lret
out
pop
mov
mov
lds
lret
aad
jle
cmp
pusha
call
jle
mov
mov
xchg
shll
imul
sbb
add
inc
jb
ja
mov
sbb
into
pop
daa
out
pop
andl
rcr
mov
adc
pop
sbb
adc
xchg
fwait
cmpsl
lea
push
cltd
stc
mov
jle
cltd
adc
andl
or
mulb
xor
ss
rorl
sub
fcmovb
cmc
sbb
pop
repnz
subb
jns
out
movsb
lods
imul
rolb
lret
fadd
mov
addr16
shlb
and
test
lahf
mov
rcrb
sbb
and
dec
mov
jmp
rolb
dec
test
mov
mov
dec
cmc
lret
aad
sbb
jge
imul
je
jecxz
test
sbb
push
insl
pop
loop
lahf
stc
and
test
incl
lods
xchg
ljmp
shll
and
and
andb
cmpsl
dec
sbb
inc
clc
pop
mov
sbb
mov
sub
xchg
dec
ljmp
rorb
fmull
xchg
popa
add
inc
inc
cmovs
sbb
aad
sub
jl
push
inc
ds
ja
mov
mov
test
loopne
mov
std
fcomps
mov
insb
idivb
mov
push
xchg
cmc
xor
xor
gs
push
dec
pop
jge
inc
dec
push
jbe
test
sub
dec
mov
dec
cmpsb
aad
adc
mov
loopne
dec
loop
fs
pop
push
pop
inc
and
mov
cli
inc
and
jbe
test
movsb
mov
xor
lods
jb
out
movsb
jns
daa
jmp
add
mov
rcll
insl
sti
sub
les
or
pop
sub
inc
ds
pop
rcrl
mov
adc
dec
pop
dec
xchg
cmp
push
adcl
push
enter
xor
outsb
mov
pop
sub
aam
pop
bound
movsb
sub
lcall
cmpsl
cmp
jmp
dec
jne
gs
test
adc
mov
sub
mov
movsl
in
lret
mov
jge
mov
dec
stos
pushf
add
aas
mov
js
pushf
loopne
enter
popa
ror
cmp
jbe
lret
mov
mov
mov
sub
imul
les
das
sub
ja
repnz
stos
cli
jg
mov
in
sete
sti
insl
xchg
out
pop
jle
dec
hlt
mov
mov
push
leave
dec
cmp
lahf
sub
jbe
or
aam
cld
loopne
fimull
sub
or
loop
add
leave
iret
jno
in
cmp
cmc
stc
std
sub
xchg
int3
push
xor
fstps
into
shl
xlat
movsb
mov
ret
js
or
loopne
lcall
leave
xor
cld
cmp
repz
jl
stc
hlt
mov
shrb
jne
adc
mov
jb
pop
mov
sbb
inc
stos
imul
test
aaa
pop
xchg
out
jns
outsl
in
dec
xchg
sbb
mov
jl
pop
cmpsl
jmp
dec
push
xchg
xchg
call
jl
pop
popf
loope
lcall
stc
jns
notl
xchg
decb
movsb
inc
in
add
mov
leave
fstl
push
fsts
adc
mov
fsubl
pusha
nop
mov
iret
inc
sub
pop
or
xor
rorl
sbb
cmpsb
xor
pop
mov
cltd
shrb
rolb
mov
pop
fidivl
mov
add
mov
pop
dec
scas
mov
je
notl
inc
sub
adc
aad
test
dec
fildll
cmpsb
mov
adc
or
test
aam
jae
sti
aas
push
pushf
push
xlat
test
push
loop
jge
jmp
int
sahf
mov
das
fs
dec
dec
lret
loope
jb
sbb
or
popa
dec
leave
imul
ss
fldl
cmp
lea
cmp
sar
cltd
lds
cmp
idivb
lock
push
or
pop
ljmp
mov
sarb
icebp
jle
clc
sbb
movsb
js
and
pushf
jno
and
imul
negl
mov
mov
cmp
cltd
add
sub
fucomip
add
add
add
test
ljmp
add
enter
jae
push
lahf
pop
push
push
add
and
inc
test
mov
inc
movzwl
jge
test
es
cmc
xor
movsb
xlat
lods
push
call
aaa
push
movsb
fmul
jae
push
xor
call
add
mov
mov
adc
in
out
pop
les
xchg
mov
add
outsb
imul
xchg
ffreep
cmp
ss
pop
jns
push
mov
dec
fmuls
fcoml
xchg
add
incl
sbb
lods
popf
mov
pop
stc
add
or
ds
push
fadds
lock
mov
xor
fs
fiaddl
mov
cmpsb
sarl
stc
pop
mov
xchg
push
cmpsb
negb
loope
add
push
jmp
das
lret
inc
pop
in
add
jne,pt
push
push
dec
add
rep
lds
scas
clc
into
loopne
mov
in
cmp
jnp
jb
cmp
fs
cmp
fcoms
bnd
sti
inc
and
loope
push
scas
cmc
cmp
cmp
data16
cmc
xchg
icebp
in
adc
xor
cwtl
sub
daa
mov
nop
dec
and
pusha
sub
insb
imul
ds
mov
mov
push
mov
push
stos
hlt
pop
mov
ds
add
test
pop
dec
fisubrl
add
add
cld
xchg
add
icebp
adc
test
mov
jbe
loope
pop
dec
push
lds
jmp
push
dec
sbb
jg
push
sbb
adc
add
mov
cld
dec
sub
pop
jmp
ret
insb
add
arpl
nop
jno
ror
or
rcl
push
cmc
mov
fimull
jbe
inc
pop
push
dec
or
shll
dec
mov
loopne
and
iret
roll
push
sbb
or
out
add
out
jmp
fsubr
out
jge
dec
clc
mov
aad
inc
add
pop
repz
stos
shlb
fwait
mov
xor
sbb
jae
movsb
aam
cmp
pop
dec
mov
cs
js
lret
and
mov
repnz
test
push
pop
add
push
xor
leave
mov
add
dec
orb
movzbl
dec
mov
and
jns
adc
call
imul
or
decb
shrl
ljmp
push
jmp
ljmp
fisubs
sub
and
popf
movsb
mov
ss
je
pop
mov
inc
mov
scas
sti
les
lret
xor
pop
xor
ret
scas
addr16
lock
fsts
stos
cmp
and
test
into
test
aam
dec
xchg
adc
inc
push
gs
popf
jmp
mov
jl
pop
hlt
jnp
jb
hlt
inc
push
jl
outsl
mov
pop
sbb
pop
mov
mov
sbb
rcrl
sub
inc
icebp
lods
stos
jmp
xchg
cs
dec
xor
rorb
je
sub
fimull
push
scas
mov
divb
cmp
aam
inc
call
dec
xor
sbb
push
adc
sbb
in
pop
js
and
mov
push
mov
xlat
cli
sbb
lea
into
pop
adc
je
xor
mov
scas
jp
pop
pop
aaa
fstl
in
popa
scas
xchg
sbb
jl
jo
add
push
fiadds
sti
cmpsb
mov
clc
out
bound
inc
dec
fbstp
and
imul
or
rcrb
addr16
jmp
rcrb
sub
enter
test
pushf
jge
notl
mov
xor
js
iret
sysexit
es
adc
mov
sub
negb
in
pop
xchg
addr16
popa
pop
je
outsb
gs
mov
icebp
or
push
xchg
mov
pop
cmp
ret
cs
inc
popf
ja
mov
push
jb
mov
xor
dec
stos
inc
inc
dec
cmp
inc
pop
mov
mov
xchg
fistps
aam
jmp
aaa
imul
or
std
les
inc
cmpl
cwtl
jbe
insb
addr16
mov
push
lret
aas
les
mov
orb
and
mov
insl
pushf
jmp
stos
xchg
outsl
adcb
inc
insl
mov
pop
lret
out
sub
add
dec
ds
nop
cltd
scas
mov
adc
mov
add
fisubl
pop
pop
push
fldenv
add
ret
shrl
inc
pop
mov
cmp
jae
movsl
jmp
add
stos
aad
push
mov
insb
ret
and
cld
mov
int
or
es
sbb
aas
dec
xlat
cmp
loop
bound
xchg
test
or
xor
les
inc
ret
mov
sbb
fld
fisubrs
movsb
jmp
nop
mov
ja
dec
sar
pop
mov
mov
sub
jl
sbb
or
mov
mov
repnz
mov
inc
andl
mov
scas
in
adc
xor
inc
cmc
scas
ret
xchg
es
xchg
dec
push
sbb
mov
add
mov
adc
adc
das
les
and
mov
sub
les
ret
stos
fwait
mov
lret
vxorps
test
cmp
je
jg
cmp
test
mov
bound
arpl
popa
sub
or
mov
fsub
mov
or
or
pop
xchg
pop
iret
push
lret
popf
push
rorl
lcall
icebp
adc
sub
dec
adc
jl
fildll
movsb
mov
outsb
or
scas
lret
add
mov
pusha
icebp
bswap
dec
stos
xor
inc
enter
adc
mov
inc
es
sub
imul
scas
mov
gs
mov
cmc
clc
or
cmp
mov
aam
mov
mov
adc
imul
lahf
push
jle
add
and
pop
cmp
movsl
mov
not
mov
fwait
loopne
sbb
dec
push
sub
add
inc
jg
cs
and
in
loop
aas
add
call
and
xchg
inc
out
or
int3
push
pop
xorl
cwtl
mov
jae
jns
push
xor
jp
loop
mov
out
sti
popa
ret
fistl
aas
insl
bound
fistpl
popf
leave
sub
sti
push
push
cmpsb
pop
lds
shl
ret
mov
push
inc
repz
mov
push
mov
js
rcrl
jbe
hlt
inc
test
cmp
xchg
jg
pop
stos
movsb
xchg
and
or
mov
fwait
xchg
pop
cmp
mov
sub
in
and
xor
jo
sub
inc
rcrl
cmp
mov
mov
jns
sbb
pop
or
nop
scas
mov
jno
cmp
lcall
cmc
rcrl
pop
cmpsb
fadd
xor
mov
adc
xlat
mov
add
aam
int
xor
push
sahf
cmp
test
nop
add
pop
fldcw
cmp
sarb
js
cltd
sahf
mov
mov
mov
aaa
ret
inc
cmp
xlat
aaa
clc
pusha
dec
or
xchg
test
movsl
repz
test
pcmpeqd
push
mov
add
ret
or
loope
pop
cmpsl
dec
lock
sub
gs
aaa
push
lgs
test
ds
inc
push
mov
lea
icebp
test
imul
fwait
rep
into
sbb
cwtl
adc
es
and
push
sub
test
push
dec
enter
hlt
or
adc
dec
push
and
mov
clc
into
shl
push
int3
pop
lcall
inc
pop
sub
divl
testb
dec
pop
push
lods
mov
in
lea
mov
dec
jecxz
pop
adc
in
pop
cmp
mov
fstpl
cmc
mov
in
and
imul
bound
add
push
mov
adc
and
dec
movsb
mov
xchg
push
jb
sub
mov
xchg
loopne
data16
addr16
dec
inc
fsubs
and
cmp
in
popf
mov
stos
xchg
dec
mov
sub
shr
mov
xchg
or
mov
jo
push
insb
pop
jmp
arpl
mov
lock
xchg
inc
sbb
add
pop
xchg
jecxz
push
sti
or
and
imul
add
or
xchg
sub
inc
loopne
pop
in
repz
jnp
mov
adc
mov
mov
popf
popaw
std
mov
psubq
cmpsl
popa
xchg
ja
push
xchg
pop
enter
push
lods
xchg
sub
pop
mov
sbb
in
xchg
call
call
push
subb
int3
dec
and
sub
cwtl
add
daa
inc
out
xor
repnz
dec
cs
sbb
imul
sbb
lret
in
movsb
cwtl
and
pop
mov
test
push
stos
xor
das
sbbl
repz
imulb
jp
xchg
adc
rcrb
mov
jno
pop
flds
cwtl
insl
test
rorl
xor
mov
and
rol
aam
es
out
pop
xchg
les
fidivrs
mov
pop
jl
testl
add
inc
pop
loop
jae
cwtl
sbb
sub
pop
sub
push
mov
ficoms
xor
adc
test
clc
loope
add
mov
push
add
cmpsl
loope
or
ds
iret
fwait
lea
outsl
mov
adc
sbb
xor
xchg
negb
fucomi
in
xchg
das
inc
mov
cmp
mov
dec
adc
dec
out
loope
pop
and
inc
xchg
cmc
sbb
push
out
test
stc
int3
insl
jecxz
iret
add
daa
add
daa
or
mov
xchg
insb
ret
mov
pop
sub
insl
cmp
pop
adc
ljmp
or
mov
push
xchg
data16
shll
ljmp
inc
in
jecxz
imul
loope
in
cmp
imul
dec
shlb
rcrb
inc
imul
push
xor
fsubrl
frstor
mov
or
mov
jmp
stc
scas
outsl
repz
sub
popa
inc
pusha
sarl
test
push
or
cmc
lods
rolb
jno
sub
fstpl
xor
dec
lret
and
in
cmpsb
pop
int3
les
fiaddl
lret
aas
xchg
je
mov
push
or
sarl
push
mov
das
adc
dec
subb
add
mov
add
cmpsl
adc
sub
ret
test
shlb
je
adc
pop
pop
push
jl
adcb
out
lods
xchg
or
mov
cmp
pop
and
outsb
stos
add
mov
adc
out
lock
out
popa
pop
ljmp
mov
adc
call
cmpsl
cs
or
test
nop
fsts
pop
decl
sub
in
mov
lret
adc
pop
inc
leave
dec
sbb
mov
out
mov
sub
fsubrs
cmp
push
shlb
xchg
adc
pop
popf
xchg
test
les
lret
jns
popl
pop
and
cs
ds
sub
leave
lea
or
xchg
daa
cmp
mov
test
cmp
ljmp
rcl
adc
pop
int
mov
sbb
jb
mov
inc
xchg
xlat
xchg
xchg
mov
pop
mov
popf
mov
mov
mov
add
cltd
ss
jnp
push
call
xlat
add
lock
flds
xor
and
add
ret
sbb
xlat
outsl
cmp
mov
imul
xor
loope
lock
push
enterw
in
adc
daa
aam
mov
leave
add
out
xor
pop
cmpsl
cmc
inc
sbb
rorl
jecxz
data16
loope
test
mov
adc
and
rol
loop
js
pop
icebp
icebp
mov
fstl
adc
or
push
int3
in
dec
push
cmp
push
mov
mov
inc
popf
pop
test
cltd
xor
adc
in
jnp
sbb
sti
jg
popa
pop
mov
mov
push
stc
jnp
repnz
xchg
jno
in
scas
cmpsb
and
lahf
pop
sbb
mov
leave
inc
sbb
adc
xor
outsb
pusha
ds
xlat
movsl
sbb
mov
pop
add
push
lcall
pusha
mov
lods
test
xor
or
repnz
aas
jle
mov
jnp
in
sti
pop
mov
ljmp
and
ljmp
cmc
xchg
adcb
sub
fildl
adc
sbb
mov
push
or
in
in
daa
gs
lret
inc
cld
pop
xchg
std
sub
and
in
add
test
jge
pop
loope
cmp
notl
adc
mov
or
or
fistl
mov
pushf
lret
push
adc
sub
out
sub
inc
inc
les
cmc
jg
sbb
stc
jmp
sbb
ja
daa
or
push
enter
gs
adc
mov
lods
add
pop
insb
ftst
leave
push
call
add
rcrb
add
xlat
jne
and
es
xchg
daa
pop
arpl
mov
bound
jb
or
jae
mov
movsb
mov
test
dec
sahf
jmp
push
cli
dec
repnz
jecxz
jb
push
pop
mov
ret
pop
ljmp
mov
daa
lock
lea
popa
ror
stos
ja
popa
or
std
shll
pop
mov
xorb
sub
push
jmp
sbb
imul
jp
or
and
dec
mov
add
add
test
icebp
int3
incl
dec
stos
out
sub
aaa
clc
mov
xchg
adc
arpl
sbb
ret
and
lret
dec
mov
ret
jg
imul
hlt
dec
cmp
loope
push
rcr
test
test
fistl
ret
jle
push
rcrb
sbb
xchg
push
mov
or
shl
mov
fmull
int
jl
or
cmp
xor
mov
xor
sub
mov
cltd
sub
cwtl
adc
xchg
mov
xor
inc
shlb
push
scas
sub
mov
or
fiadds
ret
in
lods
loopne
cmp
inc
pop
pop
call
add
cmpsl
push
xchg
xchg
rolb
xchg
mov
inc
data16
inc
cmp
bound
mov
call
pop
out
or
es
xchg
ja
pop
test
icebp
adc
add
mov
je
lods
jge
out
insb
pop
mov
xchg
aam
push
jl
mov
sub
cmp
xchg
inc
popa
rcrb
aad
pop
jns
fidivrl
inc
add
or
std
and
jne
aaa
mov
add
add
test
in
fcoms
clc
lcall
mov
sbb
push
or
test
popf
mov
lods
jae
and
ja
arpl
and
sbb
mov
cltd
add
aaa
cmpsl
nop
or
adc
adc
das
ds
ss
ds
and
insl
mov
add
mov
add
mov
mov
rcrb
lret
shr
add
scas
pop
stos
mov
sub
pushf
out
xor
enter
lods
fnsave
popa
xor
xor
fisubs
sub
mov
sarl
and
mov
ds
or
fwait
cltd
dec
loope
jmp
xchg
xchg
dec
add
pop
inc
ljmp
xor
dec
insb
stc
jmp
push
mov
daa
test
outsb
jb
pop
cmp
lods
cmp
ret
stos
cmp
or
mov
sub
testl
cli
pop
xchg
push
rorl
push
div
scas
xorl
scas
sub
dec
sub
dec
or
popf
inc
jmp
xor
out
sti
xchg
cmp
fisttps
cmp
xchg
mov
ret
aaa
adc
xchg
ja
mov
jmp
push
inc
mov
or
push
hlt
loopne
xor
test
inc
arpl
xchg
mov
cmp
mov
push
mov
pop
xor
aaa
test
xor
in
fwait
outsl
shrb
jmp
shlb
out
push
dec
jns
cmp
push
sub
jg
mov
cli
jae
mov
cmpsl
leave
test
pop
stc
insb
xor
dec
mov
lret
cmp
cmp
fsubl
mov
lock
mov
xchg
push
mov
dec
sarl
nop
stc
mov
xor
push
pop
sbbb
outsb
sbb
fwait
out
push
stos
lock
or
sahf
cld
fisubl
loop
mov
icebp
icebp
or
cmp
movsb
xchg
lret
addr16
jb
lods
pcmpgtb
fcomps
stos
pop
lods
push
lret
les
and
lods
std
or
cmp
movsl
fnstsw
jb
sub
push
and
jae
andb
in
inc
and
lods
mov
xor
paddusw
out
add
mov
popf
mov
push
push
fcmovb
fadd
into
shlb
aad
mul
les
jge
in
sarb
andb
mov
ss
mov
mov
lret
aaa
xchg
aas
mov
push
push
sahf
mov
mov
pop
aaa
filds
and
fs
xchg
std
rolb
lcall
push
sbb
mov
test
mov
fs
insb
orb
xor
ja
jp
jb
test
mov
repnz
inc
pop
dec
push
or
xchg
pop
sbb
inc
aam
push
xchg
clc
int3
icebp
dec
call
jbe
cmp
xchg
cmpsl
sbb
loop
sbb
jecxz
andl
sub
call
dec
daa
cmp
or
lahf
sbb
xor
or
aam
push
imul
faddl
notb
pop
and
outsl
gs
rcll
gs
repz
arpl
cltd
dec
add
push
icebp
insb
punpckhbw
push
scas
insl
addb
sub
in
mov
out
hlt
xchg
xlat
dec
in
push
pop
inc
pop
leave
push
lret
xchg
rcl
and
outsl
rorb
pop
or
mov
clc
lods
sahf
push
repnz
cmc
repz
mov
sub
sbb
cmp
sbb
pop
jg
in
das
jg
adc
ja
mov
sub
sbb
popa
outsl
xchg
outsb
fldt
mov
sub
inc
mov
dec
sbbb
xchg
and
add
es
fidivs
out
or
in
sub
ret
cmp
divw
pushf
pop
push
pop
push
dec
loop
and
testb
fcomps
jle
ret
leave
arpl
rcrl
in
xor
push
inc
nop
stos
inc
test
mov
jne
cld
shlb
sub
in
inc
sub
les
lds
int3
lret
ja
xor
cmp
and
push
fdivs
xor
cli
add
scas
out
addr16
cmp
xchg
push
hlt
repz
mov
inc
jmp
cli
stc
fistpl
lods
cmp
inc
dec
ljmp
orl
testb
xor
int3
push
daa
push
sub
fwait
and
insl
out
call
dec
sbb
sbb
push
xchg
fwait
mov
jbe
fdiv
pop
pop
ja
iret
test
sub
outsb
inc
and
stc
sti
testb
in
mov
inc
insb
les
cmpsl
cmpsb
stos
jecxz
cltd
pop
cmpl
lret
mov
or
adcb
mov
jl
mov
jne
repnz
dec
sub
pop
cld
mov
sti
jns
fdivrs
pop
pop
add
sbb
in
xchg
jecxz
and
push
loopne
and
jl
push
mov
add
or
sti
push
rclb
mov
adc
mov
pop
imul
push
push
outsl
mov
or
mov
add
adc
mov
push
ljmp
mov
cmpsl
and
aad
push
push
aad
lds
ficoms
clc
add
nop
sub
push
mov
sub
mov
in
xchg
sbb
test
hlt
rcr
fcomps
aas
jge
adc
jle
ljmp
push
inc
mov
addr16
and
ret
mov
mov
xchg
and
fidivrl
jge
sbb
cmp
aad
adc
add
mov
lahf
mov
mov
dec
in
xor
fs
adc
dec
xor
in
jmp
in
push
in
sub
sub
dec
arpl
sahf
fs
inc
dec
mov
adc
pop
jmp
adc
adc
clc
sahf
jno
sub
mov
sbb
sub
lods
loopne
ficomps
push
stos
adc
stos
sub
ret
mov
test
pushf
lods
into
int3
add
or
orb
les
xchg
popf
cmp
std
test
dec
insb
mov
push
push
pop
xchg
mov
xlat
aas
iret
ds
subl
jmp
and
xchg
cmpsb
in
jns
mov
hlt
add
fcmovnu
push
je
iret
xchg
mov
jle
arpl
pop
lock
mov
fisttps
dec
gs
popa
dec
inc
xlat
dec
in
pop
cmp
mov
sbb
sub
outsl
and
jmp
daa
dec
icebp
lret
fldl
adc
outsl
mov
fiaddl
pop
mov
negl
cwtl
mov
jb
push
cmp
mov
lahf
mov
or
ds
arpl
rcrl
xchg
push
sub
int3
dec
sub
xchg
scas
adcl
stos
mov
ljmp
sub
aad
fsubr
fmuls
adc
push
arpl
mov
mov
mov
dec
mov
mov
inc
test
sub
mov
lea
xchg
out
xchg
int3
ds
aaa
xchg
sub
inc
repnz
out
outsb
lcall
jo
or
decb
push
mov
xor
clc
push
push
fwait
pop
xchg
push
sbb
adc
sbb
push
xchg
inc
or
sbb
xchg
into
aad
xchg
repz
push
pop
inc
sbb
scas
jae
fstl
mov
repz
sahf
ja
xchg
xor
insl
les
je
lahf
in
in
xchg
insb
xor
arpl
pop
stos
sbb
sarb
adc
icebp
loop
sub
pop
lcall
in
sub
lods
inc
out
in
sub
aas
mov
add
cltd
clc
pop
mov
sbb
mov
out
sti
outsb
xor
add
into
inc
iret
orb
jmp
and
test
enter
push
test
insl
mov
jns
jle
mov
pushf
pop
cld
je
test
sahf
or
inc
inc
in
lock
inc
lock
rolb
loopne
sbb
loopne
push
pop
pusha
or
mov
insl
add
dec
mov
xor
int
aas
mov
cs
push
lcall
adc
mov
ret
ja
stos
cmpsl
lret
or
pushf
ds
mov
and
xor
int
enter
loop
push
js
lods
cmp
pop
adc
dec
jns
in
adc
aaa
mov
movsl
fdivl
fmulp
jmp
mov
cmpsl
push
mov
mov
xchg
mov
fisubl
push
cmp
popa
xorl
lods
mov
mov
dec
cmp
outsb
das
sub
into
adc
enter
jb
pop
mov
out
repz
out
adc
inc
add
lods
sahf
std
rolb
dec
push
std
cmpsb
pop
pop
int
push
ja
or
mov
out
fisubrs
inc
fdivs
ret
and
lods
inc
clc
int
sub
xchg
inc
inc
cmp
jp
test
or
les
add
dec
or
fstl
daa
repnz
sbb
add
lcall
les
and
jnp
mov
and
mov
lock
scas
outsl
ljmp
inc
pop
mov
daa
dec
mov
int
pop
rolb
ret
jne
lock
jno
mov
in
bound
xchg
clc
jmp
and
mov
jae
adc
aas
sbb
or
jno
lea
pusha
loop
inc
enter
fstp
mov
dec
cmpsl
inc
dec
sbb
std
loop
in
jle
jle
sbbl
int3
mov
into
dec
xlat
xchg
mov
dec
fldenv
sub
arpl
call
aas
fdivl
mov
lret
mov
frstor
and
mov
push
inc
fidivrl
test
inc
icebp
dec
call
add
aaa
mov
into
adc
rorb
std
fcoms
mov
push
movsl
pusha
loop
loope
mov
sub
mov
outsb
jae
xacquire
sbbb
lret
sub
cmpsl
in
test
add
push
stc
andb
imul
sbb
dec
imul
out
fnstcw
fsubrl
pop
push
dec
repz
cmp
ljmp
sbb
xchg
arpl
hlt
jbe
cld
test
lret
mov
mov
mov
nop
popf
mov
aaa
cs
dec
cmp
outsb
out
ds
jecxz
sub
xchg
rcll
adcb
adc
adc
cmpsl
stos
cwtl
xchg
dec
jp
lret
pop
lds
xchg
sbb
lcall
sub
push
sub
cmp
je
push
andl
pusha
ret
pop
in
mov
loopne
adc
pusha
adc
mov
in
inc
rclb
cwtl
inc
xchg
adc
clc
fcmovbe
popf
xlat
xlat
pusha
scas
inc
push
mov
mov
add
mov
movsl
sti
adc
or
or
es
jae
fwait
adc
cmp
inc
insl
pop
adc
and
lret
jmp
inc
add
push
adcb
loope
out
xor
and
xchg
mov
in
inc
sbb
movsb
xlat
nop
fistpll
dec
add
addr16
push
or
lret
cs
enter
add
notb
mov
mov
jno
cmp
orl
outsb
in
lods
xor
ljmp
in
cmpsb
movsl
push
shlb
inc
iret
inc
cmpsw
sbb
leave
sahf
testl
lea
pop
cmpsb
mov
push
lock
push
ja
adc
mov
xchg
aas
mov
je
xchg
xor
dec
mov
out
mov
arpl
or
lds
in
xchg
ror
test
fistl
pusha
sub
and
imul
les
bound
lock
out
cmp
jle
andb
push
daa
mov
movsb
loop
lea
mov
push
pop
sbb
popf
push
fwait
jb
insl
add
popl
popa
cmp
pop
cmp
loop
imul
push
gs
out
lcall
fnstenv
sar
cld
mov
fsubrs
cld
dec
inc
pop
jg
mov
dec
xchg
std
adc
pop
insl
mov
xchg
mov
push
push
insb
pop
je
adc
mov
xor
popf
push
dec
sbb
mov
mov
adc
popf
scas
or
ljmp
divb
push
mov
sahf
sbb
push
in
xchg
and
out
adc
jl
xor
or
hlt
je
ss
mov
adcl
fbld
fwait
cmp
pop
mov
cmpsb
or
sbb
rorl
cmp
and
xchg
das
jno
dec
and
mov
add
fisttpl
insl
add
cmp
push
adc
xor
popf
push
xor
pop
cmpsl
into
loop
dec
out
aad
ret
dec
xchg
pop
mov
lea
mov
lahf
daa
pop
xchg
call
push
mov
and
lock
mov
sarb
enter
test
rclb
ljmp
cmp
mov
cmp
es
xor
dec
lods
push
das
pop
loop
inc
cmpsb
jg
push
push
pop
cwtl
leave
cmpsb
fsubrl
adc
fstps
out
rcll
les
jmp
aad
and
mov
enter
xor
and
mov
aam
icebp
aaa
and
or
rclb
inc
xchg
add
inc
call
adc
lret
jge
and
mov
ficoml
popa
jns
jg
in
mov
neg
pop
push
xchg
mov
loope
push
pusha
inc
pop
cmp
cmp
imul
sbb
jb
pusha
add
jbe
data16
test
jecxz
mov
adc
mov
xor
xchg
ret
cmp
in
lahf
ss
add
insb
inc
inc
and
mov
addr16
and
pop
fsubrs
push
pop
mov
fwait
push
enter
inc
sti
pop
mov
sbbb
js
stos
sub
pop
adc
dec
ret
movsl
hlt
sub
mov
rcrb
fwait
inc
pop
mov
jnp
pop
xchg
notl
enter
scas
mov
shrl
jmp
scas
push
mov
mov
adcb
int3
sub
pushf
mov
movsl
sbb
sub
sub
cmp
test
nop
mov
push
inc
and
and
mov
pop
test
xorb
xchg
je
dec
sub
or
push
fwait
test
xchg
and
adc
ss
iret
push
sub
test
jno
sub
cld
shll
mov
mov
mov
mov
sub
and
sbb
mov
scas
aad
inc
adc
stc
loopne
dec
cmpsb
dec
scas
data16
cli
jns
inc
out
std
and
fstl
dec
add
xor
and
mov
or
xor
add
mov
lret
jl
aad
cmp
setnp
sti
js
imul
imul
jns
negl
add
dec
push
inc
cmp
loopne
cli
lods
xchg
push
inc
mov
sbb
pop
pusha
jle
push
sbb
sub
xchg
lds
pop
sbb
dec
push
out
jo
das
int3
add
xchg
ljmp
adc
cmpsl
push
or
mov
dec
pop
jmp
sub
jo
test
out
movsl
mov
xor
pop
mov
mov
add
mov
sbb
jne
mov
jp
lds
movsl
pop
jno
xchg
jns
jge
scas
in
mov
lea
jle
push
mov
out
xchg
outsb
dec
icebp
sbb
xor
and
ficoms
jle
stos
cmpsb
add
pop
sub
das
cmovge
and
insb
ret
les
test
inc
arpl
mov
scas
icebp
inc
lcall
xchg
stos
add
inc
scas
push
test
cwtl
scas
movsb
mov
jg
mov
int
insb
lcall
jmp
inc
clc
xor
outsb
or
sbb
arpl
cli
outsl
sahf
sub
mov
mov
push
dec
les
dec
add
ja
in
jle
dec
pusha
test
mov
mov
sahf
sahf
fdivrs
ret
cmp
popf
fcmovnbe
add
cld
emms
addr16
ljmp
repnz
sub
loop
ret
dec
in
leave
rcrb
cmp
dec
xchg
jge
adc
fsubs
jge
pusha
or
aas
jb
jl
push
push
dec
jbe
dec
shlb
xor
or
bound
mov
iret
mov
bt
sbb
fadd
mov
es
mov
mov
pop
mov
ljmp
lods
push
and
fwait
jo
iret
stos
jnp
outsb
push
or
mov
xor
mov
rcll
bnd
jg
stc
shl
stos
test
ljmp
inc
out
push
jb
dec
cmpb
addl
into
in
cmp
stc
hlt
add
shrl
fcoms
xor
ror
ficoml
bound
dec
ja
add
cltd
push
adc
sbb
in
or
xchg
movsl
jns
fcompl
mov
xor
push
inc
lock
sbb
clc
int3
inc
in
das
jp
adc
adc
addr16
imul
in
mov
pop
pop
and
xchg
dec
inc
mov
repz
xor
push
lods
mov
jmp
daa
je
xor
ss
cmp
in
push
sbb
jp
push
jne
dec
fwait
insw
and
jae
int
mov
lret
jle
pop
jg
into
mov
loop
xor
aad
add
adc
jg
pop
sbb
mov
mov
rorl
xchg
add
aam
scas
scas
psrld
bound
and
pop
push
xchg
or
and
or
xlat
in
mov
not
test
movsl
test
pop
add
inc
call
add
fnstenv
mov
jae
pop
jge
and
and
or
sbb
lcall
mov
sbb
sarb
imul
mov
xorl
add
push
sub
loopne
aam
xchg
test
sub
adc
add
or
enter
dec
xor
cltd
scas
inc
dec
jmp
sub
mov
pop
mul
pop
pop
xchg
adc
test
adc
xchg
test
sub
adc
push
or
test
push
and
dec
mov
mov
pushf
pop
mov
mov
std
ret
out
mov
push
rolb
mov
pop
adc
mov
loope
into
int3
xor
sbb
mov
dec
push
add
les
mov
sub
lods
mull
sti
add
adc
cmp
int
fnsave
inc
fwait
loopne
dec
stc
rorl
inc
aaa
fcmovne
pop
xchg
add
sub
inc
mov
fs
subb
cmp
lods
push
pop
cmpsb
jmp
shl
fmull
pop
int
pop
add
int3
add
arpl
sar
cltd
fnstsw
test
repz
sub
call
mov
gs
call
addr16
test
cmpsb
or
pop
mov
add
mov
and
imul
in
mov
adc
and
outsb
repz
jg
scas
into
mov
ss
xor
imulb
jmp
sub
in
cmova
xchg
xchg
push
pop
push
in
pop
adc
mov
mov
subb
fistl
enter
sub
pop
push
and
pop
int3
mov
mov
mulb
mov
xchg
mov
lahf
out
xchg
int3
cmpsb
cld
lcall
ljmp
push
lcall
jecxz
movsl
gs
loope
ja
iret
lock
inc
pop
cltd
insb
scas
xchg
inc
lret
je,pn
dec
xchg
fiadds
pop
loopne
mov
dec
sbbl
mull
daa
aas
std
test
test
push
push
xor
mov
outsb
in
int
adc
mov
mov
lods
pop
mov
movsb
push
sub
out
lret
mov
das
xor
das
movsb
push
lock
or
bound
vpsrad
frstor
es
movl
data16
lea
and
mov
push
aaa
loop
add
int3
cmp
push
stos
sti
mulb
or
jge
ret
push
pop
mov
loope
incb
jae
icebp
cwtl
leave
jae
jo
loope
or
stc
and
stc
pushf
cmp
roll
xor
mov
add
add
jo
xchg
jg
arpl
in
xor
sahf
sbb
or
inc
mov
out
dec
pusha
and
sub
xchg
cmp
js
icebp
stc
aaa
cwtl
xlat
rcrb
jnp
mov
dec
sti
pop
jae
dec
jle
xor
pushf
scas
out
mov
push
outsb
push
pop
push
sbb
push
mov
or
lods
push
ret
addr16
cmp
push
cmp
testl
adc
cwtl
cmp
cld
xor
and
adc
sarl
xor
adc
gs
mov
je
clc
mov
out
bound
pop
cs
add
or
mov
pop
fildl
adc
js
adc
gs
jmp
pop
push
sub
sbb
outsb
push
iret
or
inc
nop
cmp
push
mov
aas
pop
and
adc
pop
mov
shll
mov
xchg
in
es
adc
fbld
sub
dec
jge
aad
lods
mov
out
push
imulb
out
in
sub
jo
or
test
inc
or
out
jp
call
lods
adc
rorl
into
mov
repnz
lds
xor
bound
cmpsb
out
repnz
test
pop
notb
in
mov
inc
sbbl
cmpsl
push
lret
daa
aam
xchg
xlat
push
rorb
clc
cmc
dec
dec
push
ficomps
lea
pop
or
notb
adc
push
fistpl
lahf
sti
shll
pop
jae
or
cli
call
cld
mov
call
cli
fsubl
cmpsb
aaa
ljmp
maxps
scas
sbb
inc
xor
add
fadd
nop
mov
cmp
mov
push
js
dec
dec
dec
push
rcl
inc
jnp
aam
in
xchg
sub
adc
cmp
ret
mov
repnz
out
jp
cs
sub
adc
je
mov
ficomps
ret
clc
out
iret
push
lret
inc
mov
pop
pop
mov
loope
pop
data16
inc
mov
adcl
nop
mov
jnp
scas
cmp
pushl
jne
lock
dec
inc
lret
sub
jae
or
imul
dec
inc
push
sub
int
lret
sbb
sub
data16
rcpps
push
test
je
aad
inc
clc
and
mov
in
es
shlb
jle
push
hlt
dec
roll
lods
or
mov
cltd
or
jno
outsl
mov
jle
dec
stc
fdivrs
ja
xorl
xchg
fs
orl
xor
mov
jno
or
test
inc
mov
push
push
shl
lret
sbb
sbb
inc
or
shrl
pop
xor
std
lds
xlat
iret
lds
xchg
stos
aaa
xchg
xor
pop
dec
jmp
inc
cmpb
mov
jge
cld
test
or
into
pop
call
mov
xchg
addr16
aad
lods
lahf
pop
jmp
ss
das
xor
xchg
xor
pop
stos
stos
jbe
lret
and
jno
inc
cmp
lret
jb
cmp
adc
inc
bound
mov
and
lahf
xchg
adc
mov
hlt
dec
popa
jmp
jno
out
pop
ret
hlt
jge
adcb
and
inc
movsl
cmpsb
sub
mov
mov
xor
call
xchg
jnp
add
mov
jbe
add
or
rcl
lret
ret
stos
mov
mov
outsb
ljmp
aaa
rcr
add
dec
addr16
dec
ljmp
sbb
dec
dec
pop
sub
cld
movsl
pusha
fadd
lods
sub
cwtl
cmp
aas
in
push
pop
jae
fdivs
pop
xor
inc
dec
xor
rorl
xor
lods
and
fs
shrl
arpl
push
daa
push
jg
mov
and
in
loope
nop
test
loopne
addr16
daa
int3
test
mov
mov
mov
mov
push
mov
dec
inc
cltd
inc
xchg
and
and
add
out
rorb
jb
xchg
rorb
scas
and
sbb
pop
in
add
mov
push
jmp
lods
ja
dec
fsubs
push
pop
jae
jp
daa
aad
pop
test
rcrl
jo
xor
xor
cmp
and
ficoms
das
pop
mov
into
incl
and
pop
cmp
outsl
pop
lret
sbb
pushf
push
cmp
jb
xor
and
push
leave
leave
arpl
lret
mov
cmpsb
add
mov
ja
ret
test
cmp
adc
ds
test
or
outsb
mov
jp
cld
lds
fwait
insl
and
daa
xor
fisubrs
out
scas
aad
dec
push
mov
sub
and
sub
xchg
lods
and
sub
mov
ja
outsl
jl
into
and
test
ss
lcall
fs
ljmp
aas
mov
sub
and
pop
mov
cwtl
enter
sarl
push
lds
shll
jmp
push
daa
sub
aas
jmp
cmp
inc
jmp
mov
mov
ljmp
xchg
mov
lea
inc
orb
arpl
loopne
subl
mov
nop
xlat
inc
jmp
pop
mov
cmp
mov
pop
int
and
or
rclb
inc
xchg
lret
mov
cli
mov
pushf
lcall
test
cs
fistpll
adc
nop
ficompl
mov
mov
cmp
fbstp
mov
shr
push
popa
stos
fsubs
and
sar
add
push
xchg
push
jno
xor
xor
jae
jp
notb
inc
mov
repnz
push
adc
imul
std
pop
es
xchg
push
dec
jo
jmp
jno
push
sbb
jno
xchg
mov
gs
call
ret
mov
mov
mov
or
xor
xchg
xchg
stos
enter
call
inc
lret
arpl
push
insb
xor
mov
mov
dec
lods
xchg
xor
add
mov
in
sub
popa
mov
iret
fisubrs
and
jne
call
add
mov
insb
xor
out
jp
je
mov
ss
push
mov
fldl
pop
stos
addr16
mov
sbb
ja
mov
addr16
mov
jmp
clc
outsl
lcall
in
sbb
jne
dec
ficompl
xchg
loop
xchg
cmp
jmp
je
push
adc
push
dec
or
test
cmc
adc
pop
cmp
inc
and
xchg
data16
and
or
ljmp
dec
out
es
adc
rcr
add
pop
pop
stc
lods
addr16
fldenv
lret
jl
loop
sub
and
orl
icebp
or
mov
pushf
inc
push
sbb
push
inc
pop
jae
cs
dec
cmp
pop
mov
je
mov
fisttps
or
mov
mov
xor
lret
xchg
lods
pop
das
mov
and
xor
and
mov
fisubl
jle
lea
xor
sub
fptan
push
lds
sub
cs
dec
mov
movsl
push
mov
daa
xchg
cltd
adc
sub
xchg
lahf
sbb
fwait
push
ret
push
or
leave
inc
mov
sub
aam
gs
les
ljmp
and
out
nop
mov
inc
lret
mov
fucomi
insb
sbb
push
testl
pop
pop
daa
xchg
sub
add
xor
add
mov
shrb
dec
ret
mov
repz
and
sbb
pop
xchg
ret
in
imul
fsub
and
and
xchg
jmp
cmp
mov
and
dec
add
dec
mov
mov
daa
inc
jbe
shll
pushf
jp
inc
inc
jae
inc
mov
je
lock
pop
add
shrl
pop
pop
roll
into
jmp
inc
mov
mov
movsl
rcrl
dec
testl
adc
add
adc
xor
out
cmp
lds
mov
xchg
xchg
push
dec
xrelease
push
or
push
out
dec
cmp
sahf
pop
xchg
sbb
cmpsb
mov
ret
sbb
fnstsw
js
adc
adc
adc
leave
inc
rol
pop
mov
movl
mov
xchg
xor
out
fidivl
jge
mov
xchg
add
aaa
leave
jae
test
scas
adc
cmp
and
test
mov
push
add
cmpsb
fbstp
xor
adcb
jns
pusha
ss
mov
lods
or
jl
jns
fmull
xor
jo
sti
mov
loope
leave
stc
xor
sti
push
out
rcrl
arpl
xor
loopne
movsl
cmp
pop
mov
pop
int
cltd
xlat
xor
sub
pusha
test
cmpsb
sarl
aaa
add
pop
pop
adc
xchg
cld
sbb
lcall
xchg
ljmp
jae
enter
sbb
daa
nop
in
loop
dec
and
aas
pop
add
sbb
fninit
jbe
fstpl
stc
mov
xor
pop
stos
push
cmpl
lds
fistl
bound
push
pop
bound
fidivrs
pop
pop
lcall
into
lahf
dec
ljmp
pop
notb
cld
jecxz
jno
dec
mov
mov
into
cmpsl
inc
in
sub
hlt
mov
jp
mov
aaa
xchg
sbb
shrl
stos
cmpsb
adc
sar
pop
in
xor
jg
mov
ja
out
mov
sbb
enter
in
arpl
test
repnz
ret
imul
pop
lds
enter
loope
sti
fdivl
icebp
fmul
stos
sub
xor
jg
ret
dec
movsl
hlt
push
dec
dec
sbb
mov
and
and
push
mov
adc
int3
push
dec
adc
pop
add
enter
hlt
insl
outsl
js
into
xchg
or
inc
mov
push
lret
add
popf
lret
sub
mov
jp
rcll
or
rclb
incl
adc
arpl
lods
or
fnstsw
sbb
in
pop
dec
or
lret
pop
jae
mov
iret
in
repz
cmp
ret
pop
sbbb
fsubl
pop
sbb
xchg
xchg
adc
ret
xchg
nop
popa
sub
xchg
imul
addr16
enter
mov
nop
sbbb
xchg
pop
mov
push
jle
pop
es
mov
pop
ss
sbb
mov
idiv
das
fldz
rorl
xchg
inc
or
and
roll
roll
bound
pop
cli
add
inc
mov
scas
and
fists
inc
mov
int
push
mov
cwtl
ja
xchg
sub
cmc
movsl
es
bound
sub
lcall
fmull
fnstsw
incl
sbb
test
and
shl
je
dec
pop
nop
pop
pop
sbb
jne
xchg
outsl
mov
or
add
push
xor
xor
pop
xor
xor
pop
shll
lods
push
mov
insb
cmpsl
xchg
loope
fistpll
movsb
or
and
dec
jle
mov
mov
pop
sub
filds
push
push
lds
pop
mov
daa
subb
sbb
rolb
test
add
sub
out
jo
and
es
mov
pop
lcall
dec
jecxz
cmc
fwait
out
fwait
in
add
push
push
outsb
xchg
imul
add
leave
cmc
mov
inc
inc
imul
and
dec
xchg
xchg
int3
pop
and
addb
loopne
mov
and
xlat
imul
jo
in
test
dec
test
mov
fstps
xchg
sbb
aad
aam
mov
fsubs
cwtl
add
fdivrs
gs
mov
mov
pop
cld
jl
sbb
lods
es
cmp
iret
pop
insb
add
mov
cmpsl
outsb
xchg
add
pop
pop
lods
dec
aam
mov
mov
jno
repz
pop
and
add
shlb
gs
mov
xchg
or
jns
dec
xor
dec
dec
lds
jecxz
xchg
jnp
push
out
scas
pop
xchg
pop
fstl
add
aad
pusha
aas
fmul
lock
sbb
scas
xchg
lods
sub
xlat
dec
mov
pop
xchg
pop
mov
int3
pop
test
xchg
ja
adc
cld
inc
mov
xor
push
inc
inc
popa
pushf
jbe
inc
mov
mov
mov
outsl
fcoms
adc
mov
daa
push
outsl
in
push
insb
jmp
or
mov
mov
adc
js
mov
push
mov
icebp
inc
mov
cmp
data16
call
xchg
dec
inc
and
jg
add
or
ss
and
xor
test
push
inc
cld
push
xor
mov
arpl
mov
sub
xor
pop
es
xchg
fistps
sub
mov
fld
leave
das
add
or
cmp
ret
mov
add
push
pop
js
stos
mov
pop
push
xchg
cmp
push
or
movsb
inc
test
in
mov
iret
xchg
jge
push
cmp
out
inc
aas
jmp
dec
test
aas
sub
ja
dec
push
movsb
loop
pop
inc
xor
xor
push
cli
mov
lock
xor
and
push
xor
fiaddl
scas
andl
ss
pop
shlb
nop
jnp
mov
out
or
mov
ljmp
stos
pusha
mov
push
lret
pop
push
sahf
int
xchg
dec
in
shlb
pop
js
fidivs
add
dec
jge
add
ss
xor
or
jae
sahf
sub
cmp
movsb
jle
and
inc
gs
mov
jle
in
cltd
add
leave
jge
cmp
xor
mov
loop
icebp
and
orb
rcrb
clc
mov
vmovhpd
jmp
negb
cli
pushf
aam
pop
dec
dec
cmp
sub
mov
aaa
sahf
iret
mov
je
sbbl
dec
xchg
dec
ss
cmpsb
es
iret
sbb
add
jecxz
sbb
stos
fsubp
sbb
xchg
jne
mov
in
pusha
lods
xchg
rolb
cli
cmpb
sub
cltd
pusha
cld
lds
sbb
push
mov
out
int
pusha
les
pop
cmp
js
mov
mov
sbb
in
mov
fimuls
lds
and
push
cmp
jo
shlb
inc
mov
adc
ret
jg
xor
xchg
or
xorl
jb
fcmovne
out
push
gs
push
leave
roll
pop
or
jmp
rolb
rorl
bound
cltd
push
nop
sahf
pop
das
stos
repnz
push
bound
cmp
jns
repz
cmp
inc
and
std
adc
aam
xor
xchg
es
mov
mov
cmpsb
mov
insb
rorl
push
pop
pop
lea
cltd
arpl
dec
jo
push
pop
ror
fcmove
mov
test
sub
push
ljmp
mov
inc
out
sub
and
jae
sub
loop
imulb
add
in
dec
in
sub
test
inc
jle
xor
in
js,pt
mov
jmp
hlt
cmp
inc
test
roll
loopne
sbb
in
mov
fwait
repz
sbb
mov
dec
inc
add
jae
stc
and
jns
scas
push
xchg
xlat
pop
pop
fimuls
mov
cltd
in
cmpsl
jae
cmc
add
cmpsl
pop
xor
les
into
fmuls
test
fs
add
cmpsb
sbb
scas
pop
or
out
xchg
inc
icebp
xor
xor
paddd
fistpl
push
movsl
push
es
repz
inc
xchg
movsb
fsubrp
push
fists
into
mov
ret
cwtl
push
cmp
jmp
fmull
fisttps
jge
jns
mov
jno
mov
mov
adc
cmp
popf
inc
mov
sahf
sbb
cmp
mov
jge
push
jg
cmpsb
mov
cli
fdivrl
mov
mov
lret
jmp
pop
out
or
pop
cld
inc
inc
loop
aam
mov
sti
ljmp
cmp
popf
sub
fstpl
movsb
outsl
inc
push
aam
divb
ret
movsl
hlt
sub
inc
cmp
xlat
and
rolb
in
cmpsb
test
enter
pop
daa
inc
mov
sbb
or
inc
push
and
lods
and
and
pop
cs
aam
sbb
jo
jb
pop
popl
pushf
jbe
test
repnz
lahf
neg
mov
idivb
add
xchg
fisttps
cmpsl
int3
stos
test
and
popa
mov
mov
sub
lea
jle
das
xor
adc
mov
ret
decb
les
jg
leave
add
addr16
outsl
and
xor
dec
cmp
dec
sbb
mov
out
and
and
mov
ljmp
inc
clc
jecxz
lods
pop
fwait
add
mov
fldl
push
fbld
sbb
rclb
shlw
out
test
xor
xchg
subl
repnz
cmp
negl
cli
int
mov
rcl
enter
jmp
sbb
insb
mov
jge
in
pop
xchg
scas
mov
and
dec
jo
sub
es
addr16
nop
push
inc
and
je
cltd
aad
dec
inc
insl
jae
xchg
loope
push
sub
xchg
add
inc
pop
push
leave
mov
inc
pop
mov
lods
ljmp
in
cmpsl
cltd
push
ds
aam
dec
jp
add
subl
pusha
or
sub
xchg
mov
pop
pop
mov
sbb
or
inc
lds
sub
inc
mov
sarb
mov
adc
in
mov
popa
dec
fs
leave
rcr
mov
and
repnz
mov
test
jmp
fldcw
xchg
xor
iret
scas
loop
lods
popa
pop
mov
pop
mov
insb
mov
mov
mov
bound
mov
fdivl
imul
cltd
cltd
mov
rolb
insl
jno
jp
xor
fwait
mov
mov
dec
push
sti
loopne
jecxz
mulb
sahf
pop
out
fcomps
xchg
fsub
sub
xor
mov
mov
sarb
sahf
cmc
mov
lret
push
aad
adc
loopne
sbb
iret
lret
ljmp
mov
rolb
dec
ljmp
dec
lahf
mov
adc
clc
ret
or
jl
dec
cmpl
xchg
mov
xchg
pop
js
mov
ja
adc
or
mov
cmc
test
stos
mov
cmp
xor
popa
mov
lret
mov
push
ds
and
add
test
roll
insb
out
pop
fstpl
ret
sub
xor
mov
addr16
sar
subl
lret
mov
rcll
mov
je
cmp
inc
fmull
sub
fcomps
fildll
jecxz
jg
inc
mov
lahf
push
mul
fwait
testl
cmpsb
loopne
outsl
add
add
aaa
rclb
pop
add
idiv
xor
stc
roll
mov
and
pop
pop
repz
dec
into
dec
jns
cmpsb
mov
idivl
movb
sub
sbb
les
jne
ret
cltd
mov
xchg
xlat
das
or
scas
xchg
jmp
dec
fs
sbb
jge
xchg
ret
inc
adc
add
test
push
jg
dec
jae
es
popa
xchg
movsl
pop
adc
mov
ror
pushf
add
insl
in
dec
pop
pop
jecxz
inc
push
mov
loope
push
and
jae
dec
add
mov
mov
shl
pop
inc
clc
icebp
cmpsb
mov
lret
rcll
mov
xor
pushl
cli
aam
adc
into
scas
sub
fs
jbe
mov
das
and
out
inc
and
mov
sub
mov
fwait
inc
cmp
jg
cmpsl
push
popa
pop
fldl
dec
bound
mov
dec
stos
mov
fwait
out
outsl
and
cmp
cli
mov
scas
mov
movsb
mov
out
sbb
in
fidivl
xchg
cmp
test
or
lds
mov
jl
push
jmp
pusha
and
test
shrb
subb
cmp
into
ss
mov
shll
call
cmp
sbb
mov
adc
out
xchg
jb
jnp
int3
mov
push
mov
mov
and
pop
addl
cmpsb
sbb
shlb
out
sbb
cltd
pop
mov
popf
cmpsl
mov
add
push
dec
jbe
push
shl
sbb
cmp
xchg
lds
mov
and
test
push
test
jae
std
test
sbb
and
add
hlt
sbb
movsl
hlt
add
mov
ror
enter
or
cwtl
xor
sub
jg
push
imul
cld
inc
fldcw
leave
mov
xchg
enter
mov
into
jmp
pop
pop
dec
jmp
pop
jns
add
in
das
mov
clc
nop
jno
gs
mov
rorl
jne
pop
xchg
pop
jno
fwait
push
mov
sub
lock
repnz
xchg
xchg
sahf
adc
inc
ret
inc
test
jmp
setg
sub
xchg
cltd
addr16
dec
xor
add
scas
xor
mov
test
loop
xchg
neg
mov
mov
and
sbb
xchg
mov
and
xchg
imul
mov
hlt
pop
push
jns
mov
cmpsb
jns
sub
jae
inc
fadds
pop
dec
push
daa
xchg
addr16
loop
and
pop
mov
scas
jp
sbb
stos
mov
cmp
mov
lds
stc
jge
cwtl
push
ret
sar
icebp
shr
push
mov
shll
js
dec
js
dec
cmp
hlt
test
std
xlat
sub
add
fs
enter
arpl
lcall
jo
or
push
stc
sbb
mov
add
clc
mov
int
ljmp
mull
test
sub
aam
lret
mov
fiaddl
repz
jp
mov
sbb
loopne
and
loop
or
enter
ja
cltd
pop
add
add
pop
test
cmp
aaa
shrl
sub
cli
inc
lds
ret
sub
mov
add
nop
popa
les
pop
out
dec
jl
in
in
xchg
xor
dec
ret
or
cltd
mov
bound
fstps
pusha
sub
sti
sahf
jns
xchg
inc
push
xlat
mov
movsl
outsb
call
adc
test
pop
or
je
xchg
das
add
inc
inc
insl
lock
into
xchg
insb
js
les
xor
loopne
dec
aam
inc
jl
or
cmp
lods
shr
pop
push
sub
test
ficomps
jbe
push
cmp
in
xor
lds
sub
pop
mov
imul
sarb
mov
lods
aaa
cmp
daa
outsl
mov
loope
loopne
add
sub
test
inc
xor
jmp
imul
jle
test
inc
lds
pop
pop
repz
das
call
sbb
les
push
dec
xor
jl
dec
mov
mov
push
mov
inc
add
cmpsb
dec
test
sbb
cmp
and
push
iret
sbb
test
mov
push
fmuls
leave
add
pop
push
xor
ds
andl
cmp
inc
adc
jle
fbld
scas
imull
xchg
push
lock
leave
push
add
xor
jns
rolb
in
inc
xor
push
xchg
mov
inc
cmp
iret
jnp
data16
lods
insb
popf
adc
notb
cmp
xchg
and
cmp
mov
push
repz
dec
les
movsb
jle
test
or
stc
iret
sti
std
scas
mov
inc
scas
push
movsl
daa
pop
or
scas
ret
hlt
push
mov
jae
xchg
test
js
movsb
push
fnstenv
mov
adc
mov
jns
inc
dec
lods
outsb
out
inc
dec
das
xchg
in
mov
push
inc
fisubrs
cmp
mov
dec
insb
or
inc
jae
in
adc
pop
or
push
inc
ds
lahf
fdivs
xor
clc
push
xlat
rcrb
fldl
or
repz
std
or
cmp
outsb
shlb
addr16
insb
fisttpll
imul
cmpsl
sbb
test
or
aam
outsb
cmovns
pop
sub
sub
test
lds
xchg
xchg
push
mov
xor
jmp
cltd
in
fbstp
mov
test
adc
cmp
push
subb
jno
es
dec
fildll
stc
mov
pop
pushf
xor
push
std
push
lea
je
cmp
jno
mov
shr
mov
add
push
or
les
cmp
les
mov
daa
insl
xor
inc
stos
ret
mov
mov
int
std
jl
push
ret
or
fistl
pushf
mov
pop
and
pushf
into
into
pop
loope
in
jno
mov
xchg
xor
sbb
sbb
add
sub
jge
add
inc
adc
pop
iret
xchg
mov
scas
sbb
popf
icebp
shrl
dec
jnp
push
ja
inc
adc
mov
xchg
push
cmp
or
push
cltd
mov
add
mov
pop
push
or
loope
movlps
push
and
sbb
lret
movsl
sub
cmp
cmp
iret
jmp
push
inc
jecxz
cmp
loop
in
sbb
mov
gs
mov
jns
pop
mov
jle
mov
cmp
mov
pop
adc
mov
and
pushf
or
inc
jmp
or
repnz
scas
inc
ret
adc
imul
movsl
push
xor
popa
or
inc
cmpsl
push
rcll
test
mov
ja
shlb
xor
std
cmp
rcrl
and
sub
in
xchg
into
dec
test
aaa
jns
ljmp
fsubrl
pop
xor
xchg
jmp
mov
into
add
lea
lods
fdivs
stc
ret
cltd
movsl
adc
popf
push
fadds
push
inc
insl
cmpsl
fs
xor
xchg
inc
stc
inc
clc
jp
or
iret
pop
xor
or
je
stc
repnz
aaa
adc
jne
dec
or
sbb
es
pop
push
lods
out
mov
pop
or
aad
inc
mov
or
sbb
pop
outsb
pop
out
xor
lea
data16
xchg
testl
pop
jnp
inc
xchg
xor
pop
sbb
xchg
dec
jl
push
mov
out
je
jmp
les
movsb
add
mov
adc
dec
xchg
aaa
xchg
movsb
cld
sub
sarb
sub
jae
rorb
mov
xchg
lret
fidivrl
dec
test
pop
jecxz
out
push
fdivl
dec
jnp
sbb
lret
pushf
jbe
or
jmp
xchg
xchg
test
add
std
leave
inc
mov
std
and
cmp
aad
movsl
mov
incl
adc
mov
call
leave
cs
cltd
mov
lahf
mov
lds
ss
inc
xchg
stc
test
inc
mov
dec
jbe
out
or
and
xor
gs
cs
data16
xchg
add
adc
mov
cmp
push
or
sub
pop
adc
push
push
nop
in
mov
dec
imul
icebp
ss
mov
and
pop
sti
nop
ss
sub
mov
lods
jmp
mov
and
inc
and
and
lcall
pusha
mov
xlat
pop
mov
rcl
fs
jp
in
rorl
jg
in
cwtl
mov
fld
aas
hlt
mov
std
rcll
adc
fbld
cli
loope
mov
mov
jne
pop
cmp
ss
je
lea
scas
sbbb
mov
mov
jno
fsub
test
imul
stc
xor
pop
xorl
xor
push
push
cmpsl
jp
add
cmp
outsl
imul
mov
stos
fldenv
les
addr16
sub
sub
loopne
shr
sub
jae
add
mov
mov
pop
ret
adc
stos
xchg
and
cld
bndldx
pop
call
xor
movsb
fildll
mov
or
sub
inc
cmc
shll
push
push
mov
stos
jl
int
inc
cmp
out
sbb
pop
test
call
das
pop
sbb
mov
insl
dec
ja
sub
add
mov
out
ja
cvtps2pi
test
adc
inc
ljmp
and
mov
pop
add
lea
pop
scas
sahf
push
int3
lods
fcoml
aaa
addr16
cmp
add
xchg
mov
pusha
rol
xchg
push
mov
xchg
xchg
out
sub
push
push
roll
cwtl
scas
mov
mov
pop
jmp
and
scas
dec
pop
scas
jne
adc
leave
mov
or
jo
dec
gs
inc
inc
testl
out
rclb
dec
xchg
xor
loope
insl
xchg
je
lahf
insl
jo
shrb
pop
xlat
loopne
sub
jl
test
mov
iret
sub
fdivl
cmc
ficomps
sahf
add
xor
cwtl
sub
mov
dec
push
mov
jl
dec
ret
cmpsb
jmp
fbstp
js
xor
add
ljmp
sub
cwtl
and
mulb
dec
push
dec
enter
cmp
popl
push
dec
out
mov
rcll
cli
mov
lock
mov
jae
insl
js
out
test
test
pushf
mov
sysexit
test
movaps
lods
pop
inc
rolb
ror
cmpsl
dec
sbb
adc
add
cmpsb
outsb
ror
loope
xlat
mov
lock
inc
mov
fnstenv
iret
push
lods
or
sti
scas
test
scas
dec
js
repz
sbb
jo
or
xlat
inc
inc
ss
mov
cmpsl
aam
arpl
insl
out
xchg
pop
mov
jb
or
dec
xchg
and
adc
cs
hlt
sbb
mov
cmpsb
jo
add
out
loopne
scas
sub
inc
test
shll
loope,pn
popa
dec
sub
and
loope
mov
pusha
int3
pushf
and
mov
inc
shr
ljmp
pushf
pop
pmaxub
pop
sub
pop
cli
lods
push
repz
sub
outsl
sti
stos
pop
loope
sbb
jnp
or
sub
push
mov
add
mov
cltd
jns
sbb
sub
push
pusha
call
imul
jae
imulb
iret
dec
jo
add
dec
test
adc
push
les
mov
pop
cmp
mov
xchg
and
jns
mov
lret
fcompl
in
lret
insb
push
xchg
sbb
mov
scas
andb
dec
jb
mov
ljmp
cmp
imul
pop
adc
jecxz
adc
cwtl
add
call
xchg
insl
push
sub
or
xor
xor
cmc
loop
inc
rcrl
jne
out
xchg
les
cmp
xchg
int3
out
aaa
in
sub
push
out
out
adc
leave
std
jbe
movsl
cmp
xchg
pop
out
adc
inc
movsb
pop
jns
push
nop
or
dec
loopne
hlt
sbb
add
dec
shl
adc
es
dec
push
pop
lahf
loop
inc
mov
jne
and
pop
pop
push
sub
fwait
push
mov
sti
std
push
cmc
mov
test
ret
dec
sbb
inc
cmp
into
mov
test
mov
pop
adc
lahf
and
fisttps
les
and
subb
inc
push
mov
cmp
adc
js
bound
lds
jo
mov
dec
pop
test
or
loop
roll
or
push
inc
push
repz
arpl
jmp
jb
addps
cs
das
xchg
sbbb
movsb
sbb
mov
xorl
mov
je
mov
inc
cmp
and
or
mov
jmp
cltd
cltd
clc
sbb
sti
add
dec
int
out
imul
adc
xchg
xchg
jno
or
andl
add
xchg
ret
mov
mov
js
dec
lret
call
cli
sbb
cmp
jno
lcall
mov
orb
or
and
mov
lods
in
jae
out
imul
lret
fbld
xor
mov
inc
and
mov
popf
inc
mov
inc
ret
roll
sarl
pop
movsb
xor
dec
ret
mov
lret
mov
mov
xchg
mov
mov
cmpsb
lcall
sbb
setl
lock
bound
pop
lods
fsubrs
imul
add
test
lods
adc
pop
cmc
lods
lock
jae
and
add
sbb
cmc
std
ja
loopne
push
xlat
out
add
xor
lods
rclb
out
cmpsb
loop
jnp
sub
test
pop
add
push
cmp
lret
and
jno
cs
push
hlt
inc
sahf
dec
lea
das
mov
xchg
sub
jg
dec
insl
hlt
mov
fcmovb
or
repnz
pop
sbb
or
mov
dec
daa
fldt
jle
xchg
mov
mov
inc
xor
fldl
push
outsl
push
fildll
add
inc
pop
jb
sbb
and
sub
jle
adc
dec
mov
mov
mov
or
dec
lods
pop
dec
pusha
mov
pop
jle
pop
add
push
xchg
dec
subb
xor
shrl
loopne
jo
and
sub
out
fcoml
in
mov
add
inc
or
mov
out
mov
xchg
lcall
dec
mov
lahf
movsl
add
cmp
mov
out
sbb
imul
and
leave
decb
cmpsb
es
add
adc
sbb
pop
mov
lds
inc
imull
mov
mov
ss
sahf
or
std
push
mov
cmp
scas
cmpsl
fisttps
jb
xchg
mov
dec
arpl
adc
xchg
push
dec
push
mov
in
sbb
data16
push
in
mov
add
ret
in
shrl
addb
xchg
jns
mov
mov
bnd
mov
aam
pop
inc
das
sahf
pop
leave
mov
jg
rcll
mov
dec
pop
mov
sub
loope
inc
mov
inc
test
loope
nop
bound
pusha
dec
lea
mov
out
inc
and
push
int3
jl
pop
mov
adc
andb
stos
and
xchg
xchg
and
lahf
dec
sti
cltd
insl
stos
jae
jbe
lock
xchg
movsl
jne
jnp
scas
push
scas
rcrl
dec
daa
mov
adc
sbb
sbb
sbb
loopne
jne
jle
lods
popf
xchg
mov
xchg
gs
push
mov
dec
dec
test
push
rorl
or
push
or
xchg
nop
pop
cld
xchg
sbb
xorl
sbb
out
bound
or
push
mov
mov
pop
jecxz
jb
inc
icebp
jne
fmull
pop
fs
test
sbb
push
sub
push
inc
mov
insb
loopne
adc
sbb
mov
mov
inc
xor
nop
jae
dec
leave
adc
lods
shll
test
stos
repz
add
jmp
jnp
daa
add
jo
jns
ljmp
ret
enter
fmull
pusha
sub
lret
cmp
lods
rcrb
adc
sbb
scas
adc
orl
dec
pusha
cmc
fistl
ds
jae
cmp
mov
jae
lods
or
mov
xor
xchg
fptan
mov
test
xor
xor
enter
sarb
and
aam
xor
cmp
test
add
xchg
scas
adc
addb
and
push
into
dec
jo
fmul
push
pop
cwtl
inc
fwait
rclb
adc
mov
pop
xchg
in
sub
xchg
je
pop
mov
test
adcl
pop
dec
imul
pop
add
fidivrs
pop
push
mov
jmp
push
gs
pop
sub
push
jns
sbb
sahf
lds
push
sbb
pop
mov
sub
popf
mov
mov
jmp
popf
or
je
bswap
xchg
outsl
pop
mov
rolb
adc
and
xchg
mov
fistpll
mov
xor
or
ss
cwtl
test
jle
jle
mov
stos
sti
jle
gs
pop
fwait
mov
dec
dec
mov
mov
mov
mov
int3
jmp
dec
jp
mov
imul
xchg
dec
xchg
fcom
mov
pop
aam
mov
dec
xor
lock
mov
push
jg
jmp
fdivrl
jle
pop
jp
aam
mov
loop
cli
dec
pusha
test
outsb
inc
addr16
mov
lcall
cwtl
and
dec
in
popa
outsb
sti
xor
xor
hlt
jnp
pop
leave
lock
andl
ficompl
mov
add
xor
mov
js
out
ds
cmp
dec
out
std
data16
fs
xor
aas
xorl
push
clc
fisubs
mov
icebp
inc
out
cmp
in
lods
bound
clc
xor
ret
stos
cmpsl
pushf
or
sub
ljmp
aas
add
scas
sbbb
fstp
xchg
cmpsb
icebp
scas
inc
inc
xchg
mov
aaa
pop
push
imul
mov
ds
repnz
test
add
mov
cmp
xor
cmp
rclb
pop
mov
imul
test
xchg
xchg
cmp
pusha
mov
push
push
pushf
mov
scas
cltd
mov
pop
flds
or
lahf
or
adc
xchg
fcmove
or
nop
sbb
fdiv
dec
ja
es
or
or
dec
test
shrb
outsb
sbb
dec
and
cmp
add
cmp
xchg
mov
xchg
jne
test
adc
sbb
js
std
cmp
ror
adc
outsb
pop
push
xor
cmp
ret
ret
dec
das
mov
orl
xchg
int3
push
jns
mov
mov
mov
and
jno
pop
leave
daa
or
and
sti
in
dec
adc
subb
cmp
cmp
or
push
lahf
into
ljmp
shr
int
pop
stos
imul
lea
insb
mov
sbb
int3
jmp
call
mov
in
rcrl
icebp
ret
fdivrs
cmp
or
push
xchg
inc
inc
cmc
dec
xchg
mov
test
dec
mov
adc
jp
pop
data16
push
xchg
fisubrl
outsl
xchg
inc
scas
iret
outsb
iret
adc
jb
test
xlat
inc
sbb
cmp
insl
cltd
xor
and
jmp
dec
and
jo
icebp
mov
xchg
push
dec
dec
mov
jns
push
pop
out
push
std
sbb
mov
nop
adc
xor
imul
pop
inc
xchg
popf
xchg
in
ret
mov
or
and
pop
inc
xor
in
movsb
test
lock
and
sti
aam
sahf
ret
lcall
lods
pop
mov
les
popf
fcmovnbe
mov
call
mov
jae
not
cltd
fstpt
push
fisubl
aas
add
bound
ror
enter
jae
adc
mov
pop
mov
ret
inc
adc
test
cs
pop
sub
push
sbb
mov
addr16
xchg
je
xchg
mov
jg
and
mov
dec
pop
adc
xchg
bound
ret
repz
in
or
cltd
and
sub
mov
fucomp
movsl
xor
sub
xor
call
pop
nop
mov
int
pop
jo
xchg
js
mov
jbe
ljmp
pop
xlat
add
pop
jl
addr16
mov
sbb
hlt
icebp
lret
sarb
push
iret
and
out
inc
repnz
mov
test
dec
jmp
popa
outsb
sbb
mov
mov
cmp
dec
inc
addr16
push
cmpsl
inc
rcll
and
add
pop
sub
jbe
push
sbb
sbb
pop
add
or
fcompl
lock
test
insl
std
xchg
cmp
mov
mov
inc
lods
dec
add
out
mov
addl
pop
cmc
adc
dec
das
mov
ljmp
orb
xor
fistpl
stc
pushf
aam
dec
test
xchg
in
aaa
mov
fsubs
cmpsl
inc
push
lods
add
arpl
pop
shrb
add
sub
xlat
test
jge
hlt
dec
das
lds
push
and
sarl
shl
rcr
in
jo
xchg
xchg
mov
jge
rcl
adc
lea
push
pop
icebp
inc
leave
or
cmp
pop
sbb
xchg
push
jecxz
push
test
inc
ret
sbb
movsb
daa
stos
scas
movsl
outsb
in
sbb
xchg
jle
lret
gs
bound
push
push
pop
inc
mov
iret
pop
insl
fwait
pop
xchg
pop
into
mov
outsb
mov
fwait
adc
mov
mov
out
pop
push
das
mov
jge
loop
pop
rcll
cmpsl
sarl
insl
test
push
stc
fwait
inc
out
in
xor
cs
mov
and
shl
mov
xchg
and
inc
jg
lods
jg
test
sbb
aas
jo
pop
test
jnp
stc
mov
dec
sub
dec
mov
adc
sub
notb
inc
jle
mov
xor
push
shll
cmp
cmp
dec
or
lods
insb
sbb
and
das
out
mov
aad
adc
lahf
stos
cmp
clc
into
pusha
dec
pop
mov
hlt
xor
nop
cmp
inc
nop
or
and
jne
nop
cmp
and
cmpb
mov
mov
cli
sar
mov
dec
jnp
in
leave
add
hlt
cli
mov
inc
std
aad
fdivrp
out
mov
call
or
jle
pop
mov
jge
jmp
adc
lahf
enter
fsub
repz
int3
popa
std
mov
mov
gs
mov
std
jae
add
cwtl
fistps
ds
insb
and
mov
mov
inc
and
test
negb
or
mov
cwtl
dec
outsl
shl
or
fmuls
fdivl
adc
mov
cmp
jmp
into
jae
adc
add
cmp
mov
mov
out
or
mov
pop
push
push
dec
xchg
imul
pop
dec
out
mov
das
add
sbb
insl
push
sbb
pop
mov
test
inc
xchg
into
int
in
inc
je
adc
pop
or
out
mov
cltd
fsts
jle
adc
adc
xor
pop
in
mov
pop
inc
and
and
lods
clc
aas
jl
sub
adc
insb
jecxz
jno
loop
sti
fstpt
js
mov
test
in
xchg
mov
sbb
ret
aas
add
add
pop
mov
das
ljmp
ja
push
pop
iret
push
inc
insb
and
cmp
dec
pop
add
or
push
pop
jno
lret
lfs
xlat
inc
fbld
or
fs
pop
jnp
xor
mov
mov
jmp
andb
outsb
ret
enter
inc
nop
push
mov
mov
insl
sbb
push
popa
into
cli
xor
or
jns
push
sarb
les
mov
stos
out
les
jmp
mov
dec
lea
out
jecxz
mov
jle
repz
fwait
call
push
dec
repz
xlat
ljmp
push
xor
arpl
cld
and
pop
push
cmc
adc
dec
adc
jnp
ficoml
lcall
mov
out
mov
adc
test
mov
ds
jo
mov
fsts
push
adc
jo
mov
lock
cs
cmp
shl
int
push
popf
xor
jno
clc
mov
adc
pop
xor
daa
out
push
icebp
mov
test
ret
adc
cmp
repnz
shll
or
adc
fs
mov
sbb
jl
and
leave
add
fwait
dec
jecxz
jnp
mov
jl
cltd
mov
movsl
nop
sub
inc
adc
mov
sub
pop
dec
mov
fiaddl
push
dec
bnd
mov
cltd
add
fsincos
xchg
ss
sarl
imul
and
push
xchg
test
movsb
mov
jnp
lcall
pop
dec
mov
jbe
or
je
jae
ret
mov
fwait
push
jecxz
dec
mov
sti
cmp
xchg
adc
jecxz
xor
loopne
out
push
fnstcw
pop
mov
add
ret
into
mov
add
movsl
js
cmp
push
add
in
mov
leave
outsb
jnp
mov
add
les
pop
push
cwtl
xor
cmpsl
adc
and
sub
jae
push
sbb
xor
or
ljmp
out
inc
jo
push
mov
test
mov
mov
lods
push
ja
sub
push
loopne
in
imul
push
aas
je
iret
mov
mov
cmpl
adc
xchg
rcr
sub
sub
loop
pop
popf
dec
jl
ret
and
popf
rolb
mov
sar
push
shlb
dec
dec
dec
xor
sub
shrb
or
clc
shrb
fnstenv
xorl
cmp
mov
adc
mov
outsb
and
inc
mov
lods
mov
stc
push
fdivl
push
sti
test
out
xchg
in
mov
mov
mov
outsb
jmp
push
dec
popa
rclb
clc
dec
out
pop
adc
jnp
pop
xchg
cwtl
je
stos
xor
dec
scas
fisttps
sahf
xor
cmp
cmp
ds
pop
loopne
add
out
or
int
adc
sbb
sub
pop
int3
push
js
push
xchg
mov
xor
pop
lods
movsl
sbbb
or
loope
cmp
ret
cmp
dec
fstl
int
xchg
or
pusha
jno
pop
mov
inc
outsb
or
and
testl
repnz
push
out
mov
out
and
ror
or
add
dec
lea
jp
jp
addl
sub
lea
sbb
stos
pop
lret
shlb
fisubrl
xor
and
inc
ds
ljmp
adc
mov
inc
push
add
int
sbb
daa
pop
push
cmp
andl
inc
push
adc
jnp
inc
cmp
sbb
not
mov
pop
or
aaa
mov
mov
add
enter
xchg
push
popa
repz
fldl
push
pop
mov
xor
mov
cmp
mov
test
push
adc
mov
xor
xor
rcl
pop
cmp
xchg
push
xor
xor
push
xchg
dec
repz
sbb
xchg
call
movsl
test
push
movsl
xorb
call
mov
pop
xchg
fyl2xp1
xchg
adc
push
sub
xchg
push
lfs
pushf
jl
inc
cmp
jg
or
cli
jno
fwait
sti
adc
adc
fdivrl
pop
jno
test
fisttpll
mov
lds
lods
movsl
mov
and
shlb
ds
pushf
repnz
shrl
ja
or
roll
fdivr
popf
fsqrt
dec
cmp
jle
add
cmp
and
sub
jle
and
adc
and
and
out
fcoms
jno
rcll
data16
loop
push
xor
cld
and
adc
fs
push
and
jmp
aad
cmc
dec
mov
fnstcw
push
lods
andb
shrb
xchg
hlt
adc
mov
fisttpl
lods
mov
bound
jp
jno
sub
cmpsl
ret
add
sahf
arpl
sarb
lds
sub
enter
inc
ret
mov
sarl
jb
enter
enter
movsl
cltd
dec
rcrl
or
xor
mov
test
xor
xchg
lret
add
push
mov
aam
ss
push
repz
clc
lret
lds
mov
cmp
xchg
sbb
xchg
stos
cld
movsb
jne
in
dec
mov
pop
push
stos
addr16
pop
outsl
sbb
inc
sbb
rol
mov
xor
mov
out
jnp
pop
jns
in
mov
pop
xchg
pop
outsl
ret
push
mov
xchg
jecxz
mov
cld
js
daa
pop
inc
or
jl
add
jge
test
sbb
imul
lahf
sbb
cmp
xchg
sbb
push
addl
mov
lock
repnz
sarb
into
adc
stc
mov
arpl
push
and
shlb
jmp
xlat
sbb
testb
imul
and
je
sub
insb
cltd
dec
dec
xchg
movsb
lock
mov
rcl
sub
mov
dec
dec
push
sbb
xor
mov
fcoms
xor
and
and
adc
icebp
dec
or
jae
shll
mov
insb
cli
lds
sbb
jge
cmpsl
subl
xorb
sub
ret
push
cltd
push
pop
cmpsl
fs
loop
cwtl
xchg
xchg
xchg
pop
sub
mov
ret
jg
jb
mov
pop
hlt
gs
mov
sub
adc
push
aam
arpl
adc
loopne
jle
std
push
out
or
shll
fisubl
and
in
into
push
ljmp
mov
pop
xchg
sbbb
sub
cltd
add
add
ficoml
sub
pop
rcrb
mov
mov
and
inc
jno
clc
inc
mov
ds
icebp
xchg
outsl
repnz
arpl
inc
rcrb
fnstenv
jae
popa
sub
jae
inc
cltd
mov
data16
data16
mov
jmp
out
pusha
xor
xor
les
inc
or
mov
fwait
push
and
push
out
mov
mov
add
dec
dec
in
mov
fwait
mov
orb
daa
push
dec
push
je
popf
shrb
dec
add
sub
imul
jge
fcmovne
arpl
mov
hlt
sbb
pop
mov
ret
add
jle
push
xchg
ja
cmp
pop
inc
out
xchg
lock
test
sbb
and
sub
push
jns
jb
pop
dec
adc
test
jmp
and
das
mov
or
aam
and
shlb
addl
movsb
enter
jp
movsb
js
mov
divl
fwait
mov
cmp
push
pop
lds
stos
sub
dec
add
inc
pop
out
and
xchg
adc
mov
gs
sahf
pop
or
jo
sub
stos
popa
push
sarl
push
add
ljmp
out
mov
pop
xor
popa
jmp
scas
adc
adc
pop
roll
out
and
mov
sti
fadds
pusha
push
pop
mov
adc
dec
dec
pop
xor
push
or
lds
cmp
test
movsb
sahf
aas
je
mov
into
xchg
sub
xor
push
adc
aas
push
subb
test
inc
cs
dec
std
cmp
mov
pop
adc
jbe
xchg
fs
cli
std
or
dec
mov
imul
cmp
pop
cmpsb
cmp
data16
stos
pop
bound
adc
pop
inc
ficompl
sub
mov
loope
test
cmp
jae
movsb
mov
or
nop
pop
ret
pop
push
call
fidivl
cmpsl
mov
lods
cmp
out
push
mov
xlat
pusha
shlb
or
and
xchg
sub
mov
adc
fdivrl
shlb
addr16
pushf
pop
cmp
imul
popa
adc
testl
into
mov
scas
mov
pop
es
insl
jmp
hlt
cwtl
add
jo
pop
mov
cltd
jmp
aaa
ret
inc
add
daa
pop
push
in
rclb
push
cmp
pop
push
shlb
sahf
sbb
test
xchg
clc
dec
test
xor
pop
in
shl
mov
loope
std
mov
sbb
mov
push
stos
and
jne
adc
mov
insl
lods
fcmovu
shrb
inc
sbb
adc
add
sbb
addl
stc
jle
jmp
cli
adc
insl
xor
nop
or
hlt
sahf
sub
dec
inc
std
push
jo
xor
test
and
add
sub
mov
xchg
imul
les
lods
icebp
cld
jmp
mov
mov
cli
test
inc
sbb
cltd
inc
or
mov
mov
and
xor
loope
sub
shll
cs
lds
inc
xor
ja
add
xchg
nop
push
andb
xlat
pop
mov
push
pop
add
scas
push
mov
push
mov
and
enter
cmp
shll
sbbb
or
loop
adc
mov
sbb
cmp
les
clc
cmp
jne
pusha
push
push
pop
inc
test
cs
and
mov
dec
sub
cmpsb
arpl
xchg
add
push
daa
pop
data16
clc
imul
cmp
mov
jp
cmp
jp
jmp
das
pushf
add
test
mov
xchg
mov
push
dec
dec
stos
aaa
ljmp
pop
fstpl
adc
clc
rcrb
movsl
inc
sti
jg
jo
mov
pusha
dec
pop
in
push
mov
push
insb
push
pop
repnz
lods
sbb
ret
ret
sti
sub
arpl
loopw
xchg
call
insb
sub
sahf
sub
mov
iret
stc
mov
cmp
push
push
pop
sbb
js
xchg
insb
shlb
xchg
pop
xchg
call
jecxz
pushf
and
ss
stc
leave
out
dec
jns
in
leave
pusha
insb
xchg
jb
ret
push
jns
xor
int3
push
lea
xchg
lret
sbb
fsts
sti
jns
add
adc
mov
mov
sub
fisttpl
push
hlt
pop
mov
jnp
push
push
sbb
mov
les
inc
push
xchg
mov
faddl
insb
cli
xor
cmpsb
push
xchg
xor
lods
adc
cmpsl
push
lcall
sbb
lds
sub
shll
stos
dec
insb
pushf
pop
out
insb
mov
inc
js
repz
repz
sbb
daa
cwtl
or
mov
mov
subl
sub
pop
cmpsb
xor
push
and
add
mov
sub
inc
fisttpl
ret
jns
dec
lds
sahf
sbb
dec
popf
xchg
pop
sub
jno
sbb
mov
xor
sahf
mov
icebp
jb
movsl
scas
stc
jnp
cli
test
push
or
stc
cmpsb
xlat
rcrl
mov
dec
sbb
aad
mov
andb
adc
sarb
test
mov
stos
movsb
sbb
stos
sti
in
push
mov
enter
push
jmp
push
push
sub
inc
pop
inc
pop
jge
ret
inc
aaa
mov
ds
mov
or
out
xchg
je
xchg
push
pushl
hlt
rolb
cmpsb
repz
cmp
inc
sahf
stos
and
sbb
or
ja
out
loopne
mov
cmp
mov
xorl
jae
adc
push
or
add
roll
add
jp
js
adc
ljmp
test
xchg
repz
push
cwtl
int3
adc
int3
int
xlat
xchg
jns
repnz
roll
loope
mov
scas
aas
push
xchg
jecxz
push
aas
mov
mov
add
add
xchg
jle
dec
call
fs
mov
and
in
ljmp
data16
jo
add
push
aas
sub
mov
ds
out
out
fcoml
cmp
add
sbb
adc
es
cli
loopne
ljmp
sub
cltd
fildl
mov
repz
push
cwtl
sbb
pusha
lahf
movsb
or
mov
cmp
push
cmp
ljmp
mov
jne
mov
xchg
ret
sub
fdivl
pop
adc
out
movsl
cmp
sub
push
cld
mov
sub
mov
pop
ret
insb
inc
or
sub
ss
mov
sbb
test
dec
repz
pop
push
pop
mov
xlat
ljmp
movsl
lods
fbstp
inc
xor
cltd
inc
lret
in
ljmp
xchg
bound
push
pop
cld
pop
outsl
js
idivl
repz
insb
mov
pop
cs
xchg
ljmp
mov
ss
fbstp
mov
dec
mov
dec
das
jmp
push
cli
inc
and
icebp
lds
cmp
or
mov
mov
loopne
ret
lret
je
ss
aad
inc
cmpsl
mov
push
fildll
movsl
movsb
jb
dec
sub
ljmp
cmp
cmpsb
sbb
aam
ja
flds
sub
mov
xor
mov
push
lcall
sub
or
pusha
test
adc
ss
inc
and
or
sub
sbb
fisubl
jbe
mov
lods
fistpll
cld
lret
movsb
movsb
test
dec
mov
movsl
les
push
cs
adc
aaa
cmpsb
scas
and
and
lock
adc
jae
mov
dec
aad
jmp
stc
fstl
adc
lods
inc
jo
mov
shld
arpl
xor
mov
adc
ficoml
add
mov
pop
xchg
dec
stos
xchg
sarl
fwait
insl
mov
or
jmp
lock
xor
mov
push
mov
scas
js
pop
aad
pop
xor
test
nop
cmp
and
fisubl
stos
dec
ljmp
cmp
sbb
popa
sub
adc
stc
outsl
fisubl
xor
icebp
mov
jb
scas
pop
das
hlt
sbb
sub
push
stos
sahf
lret
fildll
sbb
adc
lods
add
out
test
mov
mov
fmulp
push
push
mov
sti
fwait
lahf
cmc
xchg
das
and
jb
js
ret
lret
dec
mov
mov
shll
inc
imul
js
cmp
andb
cltd
jnp
adc
dec
mov
xlat
insb
enter
add
inc
fiaddl
and
mov
jecxz
push
repz
or
mov
sbbl
push
enter
push
pushf
daa
add
popf
es
inc
pop
cltd
es
cmpsl
shl
xor
pop
mov
inc
xor
insl
jl
pop
sbb
ret
movsl
push
and
nop
int3
xchg
push
cmpsb
loop
movsb
and
fwait
ret
dec
mov
xchg
dec
pop
in
repnz
add
jne
adc
mov
jbe
adc
testb
loopne
mov
psubd
or
aas
cltd
loopne
cwtl
in
mov
mov
fcoml
pop
mov
pop
lret
xchg
fistl
lahf
lea
aam
scas
shlb
sbb
mov
ret
fisttpll
mov
scas
shlb
fsubrs
jge
mov
xchg
decb
mov
pop
sbbb
jp
hlt
out
loope
adc
loopne
ljmp
ja
inc
test
jl
fcmovb
sbb
sbb
mov
adc
sub
std
mull
mov
popf
lahf
push
sub
js
es
adc
cli
xor
rorl
enter
dec
mov
pause
les
jno
cmpsb
jge
mov
out
pop
mov
inc
sbb
or
xchg
daa
andb
vpcomuw
std
lock
popa
pop
pop
clc
pop
and
je
in
es
mov
dec
das
inc
mov
js
add
loopne
or
std
inc
or
xor
aaa
add
pop
mov
fidivl
sbb
test
pusha
call
jae
sbb
jae
pop
outsb
mov
or
bound
push
ss
dec
mov
jns
pop
jne
mov
or
fdivs
clc
pop
mov
fmul
mov
dec
mov
xor
xchg
pop
push
xchg
pusha
fmul
icebp
inc
mov
inc
jne
mov
int3
rorl
dec
push
push
idiv
ret
inc
and
adc
xlat
cmpsl
push
fcoms
popf
in
stc
leave
test
dec
fadds
lea
adc
or
dec
test
mov
jae
fildl
pop
xor
push
subb
lcall
mull
mov
imul
pop
out
or
xchg
jg
inc
pop
push
out
or
cmp
iret
push
mov
ret
xchg
movsl
in
dec
in
add
add
mov
lahf
inc
add
shll
xchg
enter
mov
cwtl
movsl
mov
out
out
pop
and
out
std
jb
testb
stos
adc
dec
xor
adc
stos
and
fs
test
jbe
imul
repz
mov
inc
jecxz
jge
push
aam
pop
push
daa
mov
lret
jg
inc
jb
xchg
sub
mov
je
mov
pop
jmp
ja
out
push
nop
inc
jns
mov
pop
int3
imul
inc
cmpsb
lea
and
int3
mov
int
dec
popf
pusha
mov
nop
bound
xchg
xchg
inc
xchg
and
jg
jb
jmp
aam
or
bound
jae
sbb
out
or
mov
in
incb
stos
jmp
sahf
fiaddl
mov
push
cmp
stos
inc
movsl
rcrb
into
das
add
loopne
insb
bnd
push
dec
repz
xor
gs
sahf
mov
sub
adc
mov
popf
mov
xchg
std
fucom
adc
pop
pop
adcb
jnp
add
push
cmp
idivl
into
sub
movl
ret
push
sbb
dec
xor
dec
ja
shl
scas
outsl
roll
rcll
jae
xchg
mov
out
pop
cmp
ret
cmp
push
adc
addr16
pop
adc
dec
adc
sub
mov
cmp
fwait
int3
out
cmpsl
dec
add
lods
lahf
and
loope
mov
jmp
repnz
push
push
cld
pop
int
lods
out
pop
adcl
push
popf
xchg
xchg
pop
sti
mov
mov
fldenv
aad
or
sub
mov
jl
adc
push
jno
sub
js
push
jg
lds
lcall
jno
inc
mulb
pop
lret
sbb
and
mov
mov
sbb
lcall
shl
push
mov
ror
xor
push
rcr
lea
lret
dec
inc
dec
push
pusha
mov
fbld
test
or
dec
decb
pop
and
push
hlt
sbb
cmp
jno
movsl
fwait
popf
push
cltd
mov
lds
push
mov
pop
inc
frstpm(287
or
pop
sbb
stos
add
iret
syscall
out
lret
sarl
xchg
jle
std
jecxz
test
inc
in
push
call
cmc
and
in
stc
pop
adc
push
stos
mov
dec
ja
cmp
lcall
mov
adcl
mov
les
lods
jns
adc
fs
shlb
push
or
dec
punpckhwd
call
rorb
inc
lods
mov
inc
jae
or
scas
xchg
or
mov
pop
popf
jge
mov
inc
cmp
xor
sub
in
cwtl
cmc
push
push
cmp
pop
shlb
rclb
int3
mov
movsl
mov
sbb
ss
mov
xor
pop
div
push
add
lcall
jge
push
shrl
fstl
mov
std
push
int
jae
jecxz
dec
outsl
mov
mov
nop
add
arpl
fmul
or
cmp
loopne
cmp
xor
mov
fdivrs
sub
sbb
fcomps
pop
pop
imul
pusha
jmp
icebp
aaa
ss
pop
icebp
pop
pop
call
sbb
sub
sarb
mov
je
clc
jmp
shl
ds
xor
jne
outsl
pop
rcrl
lret
mov
mulb
cmp
aas
mov
mov
lret
test
dec
push
xchg
rclb
cli
scas
scas
push
or
inc
pop
imull
pop
mov
stos
pop
sbb
mov
cwtl
and
ret
pop
aaa
call
xchg
or
jb
loopne
push
cmp
fs
enter
jmp
je
xchg
mov
test
mov
repnz
sbb
scas
xor
pop
xchg
loope
inc
xchg
mov
xchg
xchg
and
cwtl
add
ja
call
int
mov
pop
xchg
xchg
sub
adc
push
cmpsl
sbb
or
iret
mov
pop
sub
rcrb
loop
xor
fwait
outsl
cmpsb
dec
fnstenv
push
sub
mov
cltd
fisubl
pop
popf
sub
frstor
dec
lcall
mov
and
repnz
insb
mov
mov
into
int3
mov
arpl
push
rol
cltd
xchg
jecxz
push
add
movsb
cmpsl
mov
loop
pop
sub
jo
pop
pop
mov
cmc
dec
jno
ds
mov
pop
pushf
xor
pop
bound
sahf
cmp
inc
ljmp
xor
iret
push
cli
push
push
mov
push
jge
outsl
and
leave
xchg
push
pop
cltd
jmp
shr
fs
or
cltd
mov
movsl
lods
fsubs
enter
xor
add
mov
es
test
inc
das
int
push
mov
jmp
jns
scas
push
jne
popf
adc
mov
jmp
fidivl
fstl
test
test
leave
cmpsb
clc
or
sbb
imul
int
mov
push
xlat
fstpt
push
movsb
ljmp
and
jnp
mov
mov
ja
aaa
dec
repz
fcoms
call
cltd
aas
cltd
cwtl
jbe
and
sub
cmp
and
dec
push
adc
roll
cwtl
lret
mov
dec
sbb
loopne
loop
xor
push
mov
dec
push
pop
subb
add
dec
notb
rcr
mov
div
mov
cmp
js
lret
cwtl
jle
hlt
add
mov
test
and
or
fimuls
sti
pop
sti
in
test
scas
out
daa
pop
jo
mov
es
or
push
cmp
outsl
sbb
outsb
cltd
std
movsl
xorl
inc
push
sahf
mov
cmp
mov
xor
inc
adc
and
push
adc
add
jecxz
inc
adc
jle
and
xchg
lds
pop
sbb
xchg
cli
paddsw
icebp
mov
fisttpl
lods
test
or
xlat
mov
fcompl
outsl
xchg
js
inc
pusha
int
dec
lods
fisubs
nop
sti
push
scas
pop
lret
jl
sbb
scas
fnstcw
imul
fstps
inc
jns
inc
mov
or
test
cmc
out
stc
sub
lods
ljmp
fistps
add
mov
or
and
sub
jmp
lret
fwait
jno
cmp
sbb
rcll
dec
mov
jp
repz
mov
in
xchg
mov
aas
or
out
mov
imul
movsb
jno
or
outsb
insl
negb
lret
roll
cli
lcall
rcrl
out
popf
fcoml
sti
mov
nop
adc
pop
stos
cmp
cltd
add
cmp
aad
cmp
and
pop
xlat
xor
fdivrl
cmp
ret
pop
add
jg
sbb
lcall
movsb
pushf
mov
mov
pop
add
push
into
jnp
test
pusha
cwtl
andb
jbe
sti
and
repz
xchg
sarl
jne
mov
jmp
int
in
push
js
jbe
push
loop
pushf
les
and
aad
into
aad
les
jbe
in
cld
sub
xchg
iret
and
inc
mov
jns
movl
lret
jo
fnsave
adc
rolb
jp
adc
or
jb
mov
jnp
mov
scas
lahf
sub
pop
sti
not
stos
ds
lods
xorl
sbb
fisubrs
ja
cli
jo
adcl
pop
out
std
sub
sti
lcall
cmp
jl
sbb
pusha
inc
fs
leave
xor
int3
mov
xor
popa
cmp
xorl
pop
and
xchg
outsb
jb
sbb
xchg
lret
or
lahf
aas
idivl
dec
sub
xchg
ja
out
int
addb
add
int
int
fs
pushf
mov
das
jg
or
inc
inc
pop
mov
or
lds
add
les
outsb
out
inc
lcall
cwtl
sar
sub
push
test
mov
or
sbb
push
mov
outsl
filds
sub
mov
adc
pop
mov
mov
pop
and
xor
mov
cmpl
dec
xchg
lods
loop
or
or
sub
cwtl
jno
sub
int
sahf
push
out
movsl
les
pop
stos
jno
frstor
lea
in
mov
or
stos
fs
inc
in
mov
xlat
add
xor
pop
mull
inc
add
xchg
cmp
xor
cmp
mov
push
dec
pop
outsl
test
or
lods
fisubrl
mov
jno
test
push
rcrl
movsl
pushf
adc
scas
scas
lcall
dec
push
int
push
mul
xchg
fbld
xchg
jae
jg
mov
repnz
cmp
mov
sarb
mov
jp
adc
stos
pop
mov
sub
inc
lret
clc
shlb
insl
dec
jo
test
stos
push
mov
inc
sub
push
dec
dec
push
dec
adc
pop
mov
jns
imul
lret
lods
pop
pop
fs
and
add
lds
das
xor
xlat
mov
adc
sub
xchg
js
test
cmp
lret
xor
leave
and
pop
out
sub
push
out
sbb
jne
outsb
in
sbb
adcl
stos
jnp
ficompl
sbb
insb
leave
rcrl
pop
cmp
fistpll
and
add
hlt
pop
xchg
cmpb
pusha
pop
cmp
data16
push
xor
and
pop
push
or
mov
cltd
aaa
or
mov
push
and
inc
les
clc
inc
jecxz
loope
shl
and
cmc
les
jle
jecxz
xor
mov
icebp
loope
clc
mov
mov
popa
repnz
fcompl
sti
mov
inc
sub
push
fdivrs
mov
cltd
scas
cld
movsl
addr16
jmp
adc
cmp
jno
sbb
jle
cmp
fs
pop
jno
sti
fcmovbe
movsl
or
jnp
adc
aas
subl
ljmp
push
outsb
das
or
xchg
nop
or
jp
sub
dec
push
addb
adc
or
andl
cmp
lods
dec
scas
cmpsb
stos
addr16
leave
push
sub
mov
out
stos
xor
cmp
mov
int3
pop
gs
or
lgs
or
and
mov
cs
cmpb
cmp
adc
outsl
test
daa
push
push
in
mov
fistl
push
add
push
pop
mov
clc
adc
mov
out
mov
test
jmp
movsb
pop
fmulp
mov
push
movsb
in
jle
mov
xchg
add
add
div
dec
mov
pushf
dec
jg
mov
cmp
out
inc
fadds
inc
mov
jge
repz
out
xor
pop
clc
sub
jb
dec
cmp
cmp
outsb
pop
push
xchg
add
jne
or
or
push
cwtl
in
mov
mov
and
mov
bound
pusha
sar
inc
outsl
xchg
or
or
mov
cmp
mov
outsb
xor
dec
cmp
enter
cmp
popf
in
das
fs
sbbb
xchg
insl
stos
aad
mov
movsb
push
lods
test
rol
mov
cmp
and
pusha
jecxz
mov
fistl
xor
out
mov
mov
mov
fstpl
lock
pushf
pop
mov
lcall
shlb
das
inc
in
sub
push
lods
xor
push
cmc
rorb
enter
sbbb
cwtl
in
and
fsubrp
inc
mov
pushf
rorl
dec
mov
xor
arpl
test
mov
jl
mov
cwtl
and
xchg
fstl
jno
out
lods
dec
fs
ljmp
pop
call
out
popl
sub
es
es
rorb
int3
dec
test
gs
sub
test
rolb
in
dec
mov
in
adc
sub
xchg
dec
jnp
sbb
icebp
in
enter
gs
sbb
and
xor
lds
push
cmp
nop
loop
sbb
mov
and
inc
imull
mov
sbb
mov
shl
jne
xor
cmc
je
mov
adc
stc
out
add
jecxz
sbb
xchg
jns
add
lret
ret
repnz
movsb
stos
dec
inc
int
pop
mov
stos
jbe
cld
cmp
rorb
cld
je
mov
movsb
ljmp
and
jle
mov
mov
cmp
and
cmc
aas
sub
lahf
std
lahf
push
mov
ficomps
xor
push
mov
mov
push
popf
push
call
xchg
lds
pusha
pop
xorb
lea
shll
faddl
mov
ret
add
aad
stos
dec
shl
aas
xchg
repz
jle
mov
inc
sahf
jmp
repz
and
mov
in
push
xchg
movsb
adc
out
stc
imul
iret
mov
test
fidivrs
test
lods
cmpsb
xor
test
adc
dec
cltd
mov
cs
add
jmp
sbb
popf
es
mov
lock
and
imul
xchg
inc
daa
aam
mov
ljmp
int3
jnp
jmp
sub
pop
adc
cmp
mov
fcompl
push
sbbl
clc
mov
cmc
inc
xchg
in
call
out
int
and
inc
cmc
fdivp
cmp
ret
testl
and
cmp
frstor
mov
sti
cltd
jno
add
push
push
jnp
xlat
icebp
fwait
fldl
pop
jg
shll
scas
pop
lahf
ficoms
inc
push
xchg
popf
int
in
or
push
aam
or
enter
inc
movsb
orb
je
stos
push
inc
test
gs
test
ljmp
cltd
dec
or
fcmovnu
push
loopne
add
xchg
xor
pop
dec
dec
adc
test
mov
js
stos
xchg
les
mov
pop
scas
cmp
pushf
push
call
mov
adc
ret
mov
out
in
lock
lcall
nop
inc
out
cli
ds
adc
movsl
sub
mov
xchg
mov
pop
jg
jo
jmp
pop
lret
pop
and
jb
push
mov
movups
cmp
jmp
xchg
ja
popf
mov
jle
mov
lret
int
out
adc
cmc
mulb
in
push
push
popw
sub
in
std
or
imul
cmp
es
sbb
inc
imul
mov
das
push
cmp
pop
xchg
int
push
mov
xchg
sub
xor
scas
cmpsb
dec
add
jp
fstps
pop
sbb
sbb
ds
jp
pusha
mov
and
xor
jecxz
repz
adc
popa
sub
pop
xchg
std
inc
leave
in
fsubr
out
mov
xor
shrl
cmpb
ret
jmp
mov
mov
shlb
mov
inc
dec
adc
imul
push
pop
inc
xor
jle
arpl
lds
push
int3
mov
in
lahf
mov
insl
jne
shl
mov
or
mov
leave
dec
in
jo
dec
not
cmp
les
xchg
sub
jmp
hlt
cli
jb
xchg
lds
sub
fisubl
je
stos
lock
xchg
in
push
cmp
js
sti
xor
mov
inc
dec
scas
jo
incb
cmp
jmp
test
jae
ret
fldcw
shrl
popa
les
push
sub
xor
mov
xchg
jae
mov
pop
shrb
mov
hlt
adc
repnz
mov
mov
xor
popa
in
sub
mov
push
jnp
xor
lods
fwait
loope
mov
lods
addr16
push
shl
mov
dec
test
cmp
movsb
mov
insb
pop
dec
flds
mov
xor
jae
cltd
lcall
leave
adc
flds
xchg
cmpsl
gs
pop
add
int
scas
cmp
cld
in
add
adc
test
jl
mov
add
enter
dec
sub
stc
and
mov
xchg
aas
sbb
mov
cwtl
xorb
mov
out
pop
outsl
aad
outsb
arpl
mov
cmp
fidivs
cmp
idivb
pop
xor
pop
cmp
mov
sbb
leave
push
push
lret
imul
faddp
mov
or
xchg
jmp
es
jp
gs
mov
std
std
or
adc
sbbl
loopne
mov
mov
push
dec
stos
lock
inc
pop
idivl
inc
pop
push
lods
aas
sti
bound
icebp
cmpsb
cmpb
daa
je
imul
xlat
leave
fwait
dec
arpl
loopne
cmpsb
push
and
mov
push
repz
adc
xchg
hlt
jge
push
and
xor
pop
mov
sub
mov
push
scas
ret
mov
jl
loope
sub
rclb
jno
sbb
pop
push
js
push
push
push
es
or
je
and
jb
popl
mov
sbb
dec
scas
int
lar
mov
mov
repz
jmp
mov
in
loope
jge
mov
cmpsl
clc
sbb
cmpsb
jnp
mov
jmp
fildll
rcrl
lret
mov
sub
leave
fsubrl
hlt
xor
mov
mov
insb
and
jmp
push
nop
push
loopne
shrb
jb
jge
or
shrl
subb
lods
insl
jl
mov
dec
arpl
push
in
lcall
inc
adc
pop
sub
mov
call
fisttpll
repnz
mov
jne
lods
loopne
push
sbb
push
xchg
cld
xchg
push
outsl
outsb
bswap
mov
sub
int
into
loope
sti
or
mov
jg
cmp
test
rorl
push
lock
icebp
inc
mov
cmp
aaa
lea
repz
gs
jecxz
fiaddl
dec
and
fcoml
dec
and
ja
and
in
mov
ret
fsubl
dec
pop
or
cmpl
mov
out
jno
test
xchg
cmc
into
sub
pop
fcoms
mov
movsb
imul
outsl
into
add
adcl
and
cs
movsb
sub
inc
and
mov
pop
mov
and
dec
lcall
ret
sysexit
sbb
and
loope
movntq
xor
cmpsb
stc
cld
lea
bound
in
loopne
movsb
int3
mov
mov
mov
sub
mov
dec
adc
xchg
jo
and
cmpsb
cmp
rcrb
aas
jb
dec
outsb
push
and
cs
int3
mov
movsb
mov
cwtl
jl
pop
adc
push
inc
pushf
test
lds
into
xor
xor
insl
and
push
sbb
adc
cwtl
cltd
add
movsb
or
repnz
jp
and
inc
or
fisubrl
and
mov
mov
arpl
inc
fisubrl
aaa
mov
mov
es
mov
mov
leave
mov
out
shlb
cs
daa
test
inc
mov
es
xor
xchg
adc
push
mov
inc
adc
mov
jp
xchg
aad
jb
scas
test
fucom
pop
jle
and
xor
mov
inc
jmp
sbb
sbb
aad
mov
test
inc
cmpsb
add
push
es
push
outsb
jecxz
xchg
fildl
leave
add
mov
add
lret
lods
inc
or
outsb
imul
insb
inc
lods
mov
or
push
inc
arpl
pop
xor
sub
aas
jp
movsl
test
jle
fnstsw
daa
divl
imul
cmp
xchg
and
out
add
or
sub
sarl
sub
fdiv
popf
xchg
lods
add
and
aas
in
mov
adc
mov
dec
sbb
sub
sub
int3
scas
or
mov
mov
sub
jg
inc
pop
popa
into
sbb
push
fwait
dec
sti
push
mov
icebp
add
pop
scas
loopne
add
jns
jno
out
mov
jl
outsl
js
daa
inc
scas
loope
insb
sbb
out
insl
mov
cmp
fs
mov
and
insl
movsb
add
mov
cmp
adc
cld
sahf
sub
push
dec
and
loope
sub
fidivrl
sbb
add
and
loop
pop
sub
mov
notl
je,pt
push
out
xorl
lcall
loop
lock
and
or
int3
pop
jo
xchg
mov
and
cs
adc
rclb
aam
push
pusha
mov
push
xor
es
ret
and
test
dec
out
dec
add
jle
sbb
xchg
stos
lea
out
std
in
mov
test
rcrb
inc
sub
lea
in
loopne
dec
or
arpl
clc
loopne
jae
jbe
push
adc
int
mov
stc
inc
dec
movsb
incl
cmp
sub
push
inc
clc
jns
aas
out
fnstenv
rcr
cltd
inc
push
les
xor
xchg
adc
mov
mov
lcall
popf
call
ja
mov
imul
pop
or
push
pop
rcrb
cmp
imul
mov
sbb
push
push
mov
or
sbbl
push
push
sbb
jbe
mov
mov
add
bound
mov
mov
lds
add
imul
cmp
into
xchg
test
lds
iret
lahf
cmp
js
repnz
test
nop
mov
mov
and
adc
sbb
mov
insl
push
outsl
movsb
iret
add
jne
mov
mov
jecxz
test
in
or
ret
adc
lcall
ljmp
ljmp
and
sub
loope
xchg
inc
loope
jmp
dec
dec
dec
ljmp
mov
pop
mov
xor
jecxz
mov
out
mov
popf
cmp
fwait
sbb
sbb
insb
or
aas
cmp
popf
or
xor
lret
mov
aas
lahf
adc
repnz
imul
pusha
cmp
dec
pop
dec
ss
out
jo
out
mov
lahf
fs
push
loopne
mov
ret
outsb
add
das
or
or
pop
in
push
xchg
sub
cmp
lret
mov
das
stos
xorb
jb
push
mov
dec
in
xchg
shlb
aas
or
cmp
lcall
pop
sti
aam
and
fldcw
test
movsl
mov
dec
dec
or
and
test
psadbw
jge
xchg
xchg
mov
scas
shrb
dec
and
or
iret
sub
in
pusha
mov
jbe
std
int3
pop
xchg
ds
sbb
cld
or
sub
stos
xor
dec
stos
sub
fidivl
repnz
aad
pop
jmp
ja
sbb
inc
popf
std
push
push
ret
test
inc
jns
int3
or
rcrb
loopne
lods
rcrb
push
and
mov
and
pop
fmuls
jns
enter
and
push
roll
frstor
gs
insb
jno
cmpsb
aad
fs
shlb
idivb
in
fst
fwait
cmc
push
iret
jno
cld
cmp
push
aad
dec
insb
xor
adc
jle
mov
mov
push
or
xlat
or
orb
iret
and
add
gs
mov
xchg
mov
push
inc
mov
popa
pop
fistpl
arpl
fwait
push
popa
stos
pop
and
mov
and
mov
add
pop
dec
fisttpl
testl
push
xor
cmc
lret
sbb
mov
mov
inc
les
sbb
xchg
pop
mov
mov
lcall
mov
loope
imul
ficompl
sti
test
push
lret
jmp
das
push
pop
pushl
pop
fistpl
popf
pop
movsl
js
es
jecxz
test
xchg
sub
sub
xchg
out
les
xchg
mov
push
test
cvtdq2ps
push
popf
sub
cmp
cmp
xlat
mov
ficompl
cmp
push
jp
ret
mov
test
pop
nop
aad
sub
xor
cmp
or
jg
int
dec
add
pop
lahf
mov
js
add
or
in
mov
loope
fsubs
js
mov
cld
pushf
es
mov
jne
aad
aas
js
or
out
sbb
xchg
push
test
cmp
pop
jmp
inc
jbe
xchg
inc
cli
xchg
subb
push
aad
pop
inc
fidivrl
or
sub
or
adc
gs
stc
mov
mov
mov
inc
inc
shrb
sbb
addb
cs
pop
mov
jl
and
xor
xlat
mov
sub
adc
cmp
cmp
mov
mov
push
gs
rolb
dec
and
or
add
test
and
dec
loope
out
jae
aas
clc
not
fcoml
aas
scas
mov
mov
mov
loop
xchg
rclb
xchg
pushf
cmp
scas
ds
mov
out
push
add
add
sbb
pop
cmp
pop
jge
cmp
sub
pop
jl
push
ljmp
jp
dec
lcall
cmp
lods
xchg
and
imul
sub
push
and
mov
jge
push
repnz
mov
dec
adc
ja
or
jns
outsl
dec
adc
cmpsl
push
outsl
pop
pop
sahf
test
jl
jae
sbb
xchg
insl
xor
popa
push
xorl
je
popa
lea
rolb
pop
dec
xor
jno
clc
fnstenv
jb
gs
cmpb
ss
pop
popa
dec
sbb
mov
out
cmp
sub
cltd
sub
loopne
and
xchg
adc
int3
xor
jmp
cmp
mov
ljmp
jmp
jle
cmp
sub
and
dec
push
push
popf
adc
or
push
add
pop
shll
jl
je
push
cmp
into
out
test
jbe
arpl
inc
or
mov
nop
push
repnz
dec
out
in
jl
xchg
andb
lock
cmp
jl
pop
aad
mov
fs
andl
dec
pop
cmp
dec
add
lret
adc
aas
or
inc
sbb
faddl
jns
fmuls
lret
out
add
push
out
popf
and
and
nop
mov
fstl
push
or
xchg
mov
aam
fsubrl
call
sbb
bound
imul
or
cwtl
daa
push
stos
cwtl
xor
cmp
pop
loopne
fcmovnbe
fwait
push
push
cld
lret
fdivrs
add
hlt
adc
add
outsl
fiadds
in
es
xchg
lahf
cmp
ja
dec
js
mov
push
inc
stc
inc
int
add
das
xchg
cmp
gs
mov
pop
shrl
xlat
push
inc
add
push
add
test
xor
mov
int
sub
shll
and
sub
mov
jmp
add
sub
xor
xchg
jg
test
fisttps
test
cmpsl
sub
mov
mov
mov
aad
mov
xchg
rolb
lea
inc
lock
cmp
fiadds
ds
xlat
mov
xor
int
icebp
mov
add
lds
and
cmp
scas
cmc
lea
in
andb
add
push
adc
pop
loopne
out
arpl
dec
push
push
shll
aad
and
pop
xor
cmc
rep
lret
mov
jb
and
and
ficoml
mov
jnp
lcall
data16
mov
mov
jbe
nop
ret
into
sbb
pushf
xchg
sarb
xchg
push
loopne
cs
iret
scas
mov
call
and
dec
jle
inc
push
aam
jecxz
jnp
adc
cltd
test
cwtl
jecxz
dec
mov
jb
mov
shlb
iret
adc
mov
jl
fwait
pop
inc
adc
mov
inc
jnp
pop
dec
rolb
fnsave
xchg
mov
adc
mov
lock
add
clc
sbb
xor
dec
les
rcrl
sbb
mov
rclb
adc
cltd
add
std
jle
and
mov
imul
inc
lret
aaa
cmp
and
jp
subb
and
xchg
or
cmp
mov
ja
or
sbb
hlt
ds
add
les
dec
aas
inc
push
or
jp
or
xlat
push
daa
rcll
rcrl
pop
mov
add
jp
lret
shrl
popf
sub
lods
cmp
arpl
mov
jns
inc
adc
inc
ss
bound
add
cld
push
sar
add
inc
and
xor
jno
or
pop
sbb
sub
adc
imul
daa
repnz
mov
cmp
sub
imul
lcall
mov
mov
mov
pop
xor
jg
hlt
mov
xchg
cld
dec
outsb
push
push
xorl
push
add
imul
sub
idivl
rolb
imul
addr16
adc
insl
add
insl
out
fwait
aam
adc
setp
int3
mov
mov
jmp
ds
or
pop
xor
pushf
insl
push
cld
adc
out
aad
dec
mov
mov
add
test
sar
mov
stos
push
lcall
es
dec
xor
mov
outsl
cmpxchg
js
inc
ret
mov
pop
fxtract
push
jecxz
std
jae
adc
push
icebp
cmp
test
sbb
js
dec
scas
pop
hlt
test
stc
mov
push
xchg
add
dec
arpl
add
dec
in
sub
dec
or
pop
out
popa
xchg
xchg
pop
xorl
mov
sarl
sti
push
mov
cli
and
in
adc
int
aas
jne
push
mov
daa
aas
push
movsb
add
jmp
imul
dec
adc
daa
movsb
popa
mov
mov
nop
pop
es
ds
das
sub
flds
cltd
xchg
pop
sbb
ss
nop
adc
test
out
aam
cmp
cmpsb
scas
xlat
cld
mov
cmp
cltd
adc
inc
testl
mov
ret
sti
xchg
ror
push
cs
mov
ret
int
sti
cmc
jmp
xor
das
sbb
pusha
neg
dec
sbb
sbb
call
int
test
cmpsl
inc
sbb
pop
and
into
cltd
repz
test
cmp
mov
fwait
int
mov
sahf
jle
orl
in
inc
add
xchg
dec
test
adc
stc
push
cs
int3
mov
orl
xlat
adc
cmp
ret
iret
daa
in
or
shrl
jp
or
push
imulb
mov
xchg
xchg
es
push
sbb
lahf
inc
lods
cmpsb
push
and
mov
xchg
xor
movsl
fimull
and
cs
push
push
pop
mov
dec
test
push
dec
or
xchg
sub
pop
cmp
lcall
insl
adc
cmpsl
jb
cmp
sbb
mov
int
sbb
repnz
arpl
xor
mov
fsubrs
cld
div
pop
out
jo
push
bound
xchg
mov
bound
mov
adc
mov
add
pop
test
sbb
aaa
adc
lret
jl
and
shlb
das
mov
jg
mov
inc
repnz
inc
and
and
call
imul
xor
jg
sarl
xchg
aad
push
mov
jl
xchg
xor
xor
cmp
dec
mov
shl
dec
jb
movsb
faddl
mov
add
outsl
sub
sbb
push
adc
xchg
sbb
and
iret
push
cwtl
xor
inc
dec
mov
add
jbe
push
pop
mov
add
xchg
cld
xchg
mov
rorb
stos
push
lds
aad
jl
imul
jb
mov
aam
pop
pop
mov
mov
pop
fs
push
and
stos
cld
jno
pushf
gs
jo
pop
push
pop
aaa
outsl
sbb
test
in
jo
pop
sub
mov
inc
xchg
jne
das
mov
sub
shrb
movsb
negb
sub
mov
pop
vcvtsd2ss
adc
popl
pushl
test
ss
sbb
in
lret
js
and
jno
cwtl
int3
lea
stos
add
cs
push
or
mov
xchg
fldl
adc
les
inc
es
pop
out
movsl
sti
cmp
sbb
mov
cmpsb
push
add
mov
cmp
fnstcw
adc
mov
movsb
jg
or
sarl
mov
xlat
sub
ds
stc
dec
fwait
pop
or
mov
lea
imul
stos
pop
push
push
ja
fimuls
xchg
popa
js
push
mov
into
cmc
addr16
mov
xchg
test
and
jnp
sub
sbb
jmp
jecxz
cmp
je
mov
xchg
mov
dec
sub
cmpsl
mov
sbb
fsubrp
mov
ds
xor
divb
push
mov
enter
aad
lea
adc
push
in
jae
and
mov
inc
sub
add
mov
jae
test
test
mov
mov
sub
dec
lcall
popa
fdivrs
sbb
sbb
xor
and
hlt
cmp
mov
sbb
sbb
shl
push
in
mov
in
bound
push
inc
mov
mov
pop
bound
mov
mov
sbb
leave
lret
dec
xor
xchg
outsb
mov
lods
loope
or
ret
icebp
mov
mov
pop
popa
push
fnstsw
mov
jnp
mov
push
pop
cmp
jmp
adc
test
sahf
pop
fcoml
inc
vcvttpd2qq
pop
jle
jns
mov
mov
cmp
jo
jbe
and
js
imul
xlat
lods
xor
fdivrl
push
js
push
in
jb
xor
int3
shlb
dec
arpl
pop
shr
and
cmc
or
pop
mov
mov
popa
shr
adc
mov
sbb
sub
jnp
rcll
insl
sub
or
push
cmc
jl
pop
iret
loop
xchg
pusha
cmp
arpl
add
es
mov
cmp
cmp
mov
imul
outsb
sahf
imul
daa
sti
cs
xchg
div
cmpsl
test
mov
or
xlat
xchg
stc
clc
lret
add
sub
rorb
out
scas
leave
push
add
andl
push
movsl
mov
jo
jle
int
jp
jae
and
cmc
and
mov
mov
jno
mov
mov
scas
pop
jb
repz
fmulp
push
jge
scas
add
loope
cmpsl
scas
dec
lods
push
mov
stc
out
cmp
mov
pop
test
jecxz
outsb
push
sbb
int
and
inc
sbb
icebp
mov
xor
push
out
loope
hlt
inc
mov
js
std
xlat
xor
mov
fimull
rcll
push
loop
pushf
mov
pop
add
int3
call
pop
scas
fdivr
cwtl
mov
mov
jge
sub
push
jl
pop
mov
loope
xchg
popa
add
out
mov
and
jns
lods
lock
mov
dec
dec
lahf
pop
dec
das
or
lds
hlt
mov
jmp
cmp
and
push
and
xchg
mov
mov
add
inc
mov
mov
lea
cli
or
or
adc
daa
repz
pop
movsb
bound
mulb
imulb
ljmp
sub
out
movlps
in
push
cltd
or
jbe
xlat
int
jge
rolb
aad
or
dec
mov
cmp
and
xchg
push
cmc
sbb
jl
fwait
imul
pop
ss
mov
sbb
sbb
popf
rcll
sti
mov
pop
sub
adc
sub
lret
addr16
icebp
lods
ja
icebp
in
or
push
stc
insl
repnz
jae
nop
popf
clc
ret
out
or
cmpsb
dec
int
push
xchg
test
jbe
mov
pop
push
jo
pop
popf
cmpsb
int
ja
dec
pop
pushf
push
sbb
psubb
cmpb
adc
mov
repnz
mov
ja
jno
ret
jbe
push
cmpsb
adc
insb
and
mov
rolb
js
pop
pop
popa
cmpsb
insb
imul
push
adc
cmp
lds
xchg
sbb
cli
cmp
mov
jne
jns
inc
imul
inc
insl
inc
lds
jp
adc
gs
dec
push
sub
mov
mov
subl
jle
ljmp
popw
pop
sub
sub
repz
mov
or
je
mov
out
mull
out
outsl
cltd
aam
inc
loopne
dec
pushf
into
pushf
fmuls
mov
in
inc
mov
and
jl
fdivs
mov
pop
pop
jge
dec
dec
aas
gs
or
pop
adc
push
fs
adc
imul
lods
mov
add
xor
std
or
sbb
pop
push
add
or
es
xchg
aad
pop
jno
adc
js
pop
jnp
popa
call
lods
sub
out
sub
in
xchg
gs
inc
mov
pop
inc
mov
mov
and
clc
push
inc
sbb
xchg
inc
lds
pop
data16
or
rclb
inc
and
loope
xor
movsl
into
fucomip
mov
lea
ret
imul
outsb
push
push
jb
ret
std
mov
xchg
pop
inc
xchg
xchg
inc
ret
xor
les
imul
jbe
inc
ss
int
ret
and
stos
ljmp
repz
repnz
jl
sub
jne
pusha
jmp
in
mov
out
ret
imul
jbe
pusha
test
cmp
aaa
repnz
mov
lea
fcompl
push
mov
imul
repnz
push
inc
sbb
or
les
sub
push
decb
mov
icebp
jle
aaa
dec
in
dec
mov
or
cmp
jge
add
add
pop
sbb
loope
dec
test
mov
imul
mov
pushf
fnsave
hlt
pop
push
fldt
cli
adc
cmpsl
pop
in
aaa
popa
lea
add
aad
nop
cmp
es
mov
dec
loopne
inc
test
xchg
mov
pop
loopne
out
test
add
pop
mov
lock
stos
ds
lcall
jge
movsl
push
mov
cmp
xchg
test
popf
mov
xchg
test
cmpl
and
jns
cmp
or
inc
cld
test
dec
cmp
sbb
pop
shrb
loop
mov
pop
and
out
push
icebp
jbe
insb
negb
jns
and
mov
or
mov
pop
fbstp
rolb
jno
ljmp
test
in
popf
mov
jno
mov
neg
mov
sbb
ficoms
cmp
dec
push
bound
mov
adc
leave
xor
cld
ja,pt
and
jge
inc
sbb
aaa
jg
in
xchg
out
dec
movlps
aas
adc
dec
sub
fcompp
inc
sarl
sbb
push
dec
jno
cmp
or
pop
adc
stos
push
jns
push
xchg
test
and
cmpsl
adcb
lret
jmp
repnz
in
mov
js
fiaddl
stos
dec
mov
ret
repnz
adc
ss
sbb
pushf
in
out
andb
sbb
push
sbb
or
xchg
ljmp
jnp
and
inc
fsubs
cld
jg
push
sbb
mov
arpl
pop
imul
in
pop
into
leave
test
fists
sbb
mov
pop
adc
std
test
pop
das
pop
mov
cmp
sbb
in
jbe
test
push
and
insb
sbb
cli
adc
adc
push
mul
fwait
lcall
add
push
push
sbb
or
mov
jmp
lcall
shlb
pushf
or
sub
cwtl
dec
mov
sbb
mov
adc
inc
jns
jnp
cmp
in
cmp
adc
jmp
repz
aad
outsb
scas
rol
cmp
arpl
fcmovnu
push
xchg
lret
sub
arpl
out
idivb
cld
pushw
pop
push
cmp
int
loope
sub
push
jge
mov
ret
lret
xchg
imul
pop
jecxz
outsb
cmpsb
icebp
mul
sarb
xchg
rclb
jg
in
cld
sbb
adc
jecxz
sbb
ret
test
arpl
test
xchg
xchg
mov
jbe
stos
xor
jo
rep
loope
inc
fstl
jne
xor
mov
inc
into
test
sub
sarb
lea
pop
cmp
fiaddl
outsb
jne
mov
dec
sbb
in
inc
jne
jne
jge
jns
sti
jbe
test
xchg
jmp
leave
pop
dec
lea
outsb
test
ss
lea
jp
cld
cmp
cli
inc
adc
lcall
imul
and
sbb
insl
fistl
or
cmpb
jno
outsl
mov
pop
idivl
pop
in
scas
in
fnstenv
adc
sbb
mov
dec
data16
add
mov
mov
scas
jmp
add
sbb
movsl
lcall
mov
int
ss
add
inc
daa
and
xchg
mov
enter
test
test
or
rolb
bound
out
xchg
mov
test
mov
pop
lahf
dec
popf
mov
lea
sbb
test
ret
pop
or
dec
pop
leave
fcom
dec
mov
cwtl
mov
sbb
lret
push
pop
push
cmp
mov
adc
mov
xor
add
scas
popf
lea
jne
push
in
jo
add
jge
pop
lret
loope
hlt
inc
int
jnp
fsts
out
lods
sbb
sbb
xlat
jnp
adc
imul
dec
push
insb
ja
adc
lret
or
xlat
daa
loope
stos
ret
std
and
cld
rorl
pop
fnstsw
in
pop
adc
adc
pop
movsb
fldenv
arpl
mov
mov
pop
out
inc
mov
cli
loopne
adc
aad
pop
push
mov
loope
push
inc
and
call
sbb
sub
cmp
dec
push
dec
push
fnstenv
dec
push
adc
mov
jne
mov
rcrb
or
inc
xchg
jnp
add
loop
dec
mov
fisttps
leave
cmc
mov
adc
inc
lahf
add
mov
adc
pushf
ljmp
shll
stos
add
xchg
lock
cwtl
orl
lret
cli
xlat
ror
repz
fs
in
inc
imul
cwtl
test
loope
lods
shl
cmp
xchg
xchg
repz
test
jecxz
pop
pop
sbb
inc
pop
clc
rcrl
jnp
hlt
inc
mov
into
cli
fiaddl
mov
pop
ja
lods
cwtl
in
test
add
push
cmpsb
aaa
popa
cmovnp
sub
into
inc
aaa
imulb
mov
loop
and
call
std
std
jo
int
mov
mov
pop
outsb
pop
push
orb
shlb
dec
lds
out
fwait
xchg
jl
loop
lods
add
nop
cmpsl
out
cltd
cmp
or
mov
push
add
mov
js
aam
lret
mov
icebp
je
lea
hlt
lret
mov
mov
xchg
fs
lret
js
mov
xchg
jge
aas
rcrl
adc
sbb
out
mov
dec
test
fisubl
gs
push
dec
daa
xor
mov
xchg
mov
inc
movsb
lcall
pop
jg
pop
dec
inc
cmp
sbb
mov
xchg
les
insb
jecxz
mov
xchg
adc
mov
xor
mov
fimull
cmpsl
push
lods
sub
stos
int
sti
loopne
aam
mov
push
test
pop
lret
rcrb
or
test
fistl
adc
and
cmpb
adc
adc
adc
ja
dec
out
addr16
cmc
xlat
cmp
jp
mov
adc
loop
push
cld
and
adcl
mov
popl
daa
jge
out
or
xchg
mov
add
cmp
rep
sub
lods
cli
popa
push
pop
and
push
jo
shll
loop
leave
aad
popaw
mov
add
pop
leave
xchg
pop
dec
jb
stc
pop
xchg
push
int
not
pmulhw
xchg
leave
leave
mov
pop
adc
addr16
lahf
test
imul
jns
jno
mov
movsb
stos
cmp
loopne
and
mov
jno
or
dec
mov
insb
roll
ror
or
xlat
inc
inc
jb
xchg
cli
cmc
push
mov
adc
pushf
in
outsl
out
jns
inc
call
jmp
icebp
sub
jnp
pushf
sbb
sbb
mov
adc
mov
fadds
sahf
repnz
popf
out
es
mov
xchg
jle
mov
or
out
daa
ja
leave
repnz
das
aam
cmpsb
stos
lock
fimull
clc
mov
pop
lock
aad
push
inc
jbe
lods
lea
add
fwait
and
push
inc
in
jns
leave
mov
bound
cmpsb
sbb
mov
gs
xchg
pop
push
popa
out
and
sbb
pop
lret
jg
or
mov
cli
sbb
cmp
out
ficomps
inc
or
cmp
test
aam
push
lahf
jbe
pushf
pop
jmp
out
pop
mov
jae
das
pop
sub
aad
add
repz
loop
dec
in
pop
daa
jae
sub
loopne
gs
cmpsl
faddl
inc
inc
test
push
decl
sbbl
sub
or
xchg
lea
stos
stos
mov
pop
fidivrs
aad
jle
xchg
add
cld
jp
push
xor
sti
inc
mov
outsl
mov
mov
jmp
testl
xor
jmp
and
adc
lods
xor
and
outsl
in
div
scas
sub
lods
addr16
fwait
and
pop
mov
arpl
mov
in
mov
adc
jnp
xchg
out
int
data16
test
adc
call
mov
sub
and
std
push
xchg
xor
and
xlat
idiv
xlat
dec
mov
pop
pop
push
repz
leave
lock
aam
jno
mov
pop
inc
in
in
add
push
sub
jecxz
decb
cmpsl
in
or
inc
pop
adc
or
imul
mov
jl
add
inc
pop
sarl
mov
add
pushf
add
insl
mov
dec
ret
push
iret
or
jmp
negl
jb
mov
or
je
inc
ret
sub
push
xchg
cmpsl
int3
and
sub
cmp
sarb
cmp
jo
mov
jle
lods
or
xor
sbb
test
jae
out
mov
andl
mov
dec
aas
clc
push
gs
dec
push
aad
fnstcw
xor
sbb
je
cmp
add
sub
mov
jne
push
inc
and
xlat
xor
shrb
dec
or
insl
outsl
mov
mov
lods
mov
aas
in
add
jge
sbbl
lods
popa
adc
push
inc
xor
pop
lahf
sarb
test
xchg
dec
xlat
fidivs
das
stos
mov
loop
mov
sub
mov
aad
fdiv
adc
dec
push
popf
adc
xchg
or
loopne
push
xor
pop
mov
movl
mov
pop
mov
cmpsl
ret
push
add
fsubl
das
pop
inc
scas
add
nop
aaa
jg
out
mov
scas
mov
stos
cli
not
ret
mov
jne
cmpsl
roll
mov
jg
fstl
out
lds
lea
xlat
lret
sti
pop
pushf
cmp
pop
push
jl
into
ja
xchg
sbb
les
pop
aad
mov
lock
inc
push
push
into
adc
mov
mov
sbb
adc
sti
pusha
imul
mov
jns
mov
dec
scas
pop
adc
pushl
daa
leave
jmp
mov
lock
push
insl
add
cmpsb
popf
icebp
pop
fcoml
std
push
cmp
test
cld
pop
fbstp
stos
aaa
pop
cmp
mov
or
add
add
push
cmpsb
mov
mov
mov
movsb
sub
inc
lods
call
out
lock
cmp
loop
mov
sub
inc
hlt
je
mov
enter
xchg
fadd
cmpl
lcall
mov
sarb
int3
in
cmp
mov
mov
pop
adc
cs
lcall
add
cmpsb
adc
cli
xchg
mov
das
out
scas
ljmp
add
add
les
sbb
jae
mov
shlb
mov
lcall
mov
push
add
pop
pop
mov
inc
fwait
jge
add
leave
cmp
cmp
shll
aaa
scas
add
push
movsb
mov
lahf
mov
insb
fisubl
fldt
testl
ret
push
fcompl
adc
imul
jg
sahf
push
out
mov
lods
inc
sub
mov
add
xchg
or
pushf
hlt
out
sub
fnsave
jae
or
int3
sbb
stos
ljmp
sub
mov
ss
jb
xchg
and
dec
push
scas
push
in
mov
cs
jmp
push
pop
aad
ret
cmc
lea
fcoml
cmp
movsl
mov
popa
and
adc
out
mov
rolb
sar
dec
cld
je
cmp
aaa
mov
xor
or
or
add
les
add
ror
jmp
scas
insb
inc
dec
mov
hlt
icebp
int3
jcxz
shlb
imul
cmp
pop
mov
divb
lret
push
cmp
loopne
jle
aas
or
inc
adc
pop
jae
sbb
xor
shll
imul
adc
fwait
mov
jne
jecxz
adc
jbe
mov
dec
inc
jmp
push
mov
push
mov
xchg
cmpl
lods
push
imul
ss
dec
xor
sub
jecxz
dec
sti
push
xchg
mov
jmp
subl
mov
arpl
loop
or
orl
xchg
pop
xchg
aaa
sub
fildl
out
call
inc
hlt
ret
cmpl
stos
sbb
xchg
insb
aaa
jbe
movl
adcb
sub
cltd
stc
mov
fdivr
fcomps
clc
aad
into
es
pop
int3
adc
dec
iret
pop
sub
loope
sbb
rorl
cmpsl
and
icebp
in
xor
adc
loope
sbb
lods
or
pop
test
mov
stc
dec
jge
and
aaa
add
xor
sbb
and
mov
xchg
cmp
andb
sbb
pushf
mov
inc
stos
outsl
pop
push
clc
pop
dec
insb
mov
inc
dec
lods
lods
dec
and
cmp
in
push
mov
lret
imul
sbb
sbb
push
sbbb
mov
int
dec
xchg
xchg
std
mov
nop
sti
adc
mov
pop
test
adc
jno
subb
jge
test
jp
jnp
or
test
xor
fsubl
cmpsl
sub
outsb
adc
mov
cmc
addr16
sbb
popf
jb
push
pop
cmp
repnz
sbb
xchg
mov
setbe
data16
std
lret
xor
in
xchg
sbb
add
and
idivb
fs
sar
dec
addb
fisubs
lea
inc
jp
push
xchg
adc
cmp
xchg
mov
sbb
aas
pop
jno
fnsave
inc
add
scas
mov
mov
in
inc
add
out
std
mov
fisubs
scas
and
int3
jp
lret
mov
negl
repz
push
jmp
shll
stos
xlat
les
add
lcall
sub
out
and
mov
or
mov
lret
loopne
addl
sbb
inc
mov
dec
xor
push
xor
and
mov
pop
inc
sbb
cmp
add
mov
push
std
popa
mulb
popf
and
scas
mov
inc
pop
divl
push
push
ret
cwtl
ljmp
jge
ljmp
add
mov
adc
fbld
aas
or
dec
cmpsb
fcomps
xchg
lock
jae
lret
pop
mov
and
addl
out
sub
ljmp
fdivrl
scas
cmc
sub
or
insl
push
repnz
jns
jecxz
adc
sbb
push
lods
fnstsw
pop
bound
adc
push
jle
int3
gs
and
nop
bnd
imul
cli
xor
add
and
inc
stos
inc
mov
scas
mov
add
jnp
mov
sub
mov
sbb
xchg
sbb
dec
lods
clc
push
inc
xchg
mov
out
push
aaa
cmp
push
movsl
add
xchg
fstpl
and
lret
es
xchg
test
hlt
lret
in
das
sbb
iret
pushf
pop
xor
sub
lock
test
std
or
sub
fistpll
ret
xchg
xor
and
xchg
pop
nop
arpl
dec
or
sbbb
insl
jno
cmp
push
je
cmp
or
mov
scas
dec
pushf
mov
fsubl
cli
sub
inc
dec
lahf
pushf
repnz
dec
add
push
push
pop
mov
or
pushf
out
inc
in
pop
jbe
adc
pop
cmp
mov
lret
pop
push
push
push
mov
rep
xor
repnz
bound
mov
sti
xlat
in
jns
pop
xor
jge
lcall
enter
xor
adc
or
imul
bts
jo
popf
fdivl
push
cld
test
aad
jo
data16
movsb
addb
mov
inc
popa
call
pop
negb
cmp
push
enter
sbb
mov
or
sahf
sbb
shll
lcall
mov
cmpsl
lods
mov
subb
mov
mov
push
out
or
ss
and
stos
mov
dec
or
aad
cmc
sbb
cwtl
iret
sbb
xchg
ret
mov
pop
mov
inc
in
pop
out
gs
sbb
or
push
mov
ja
inc
xchg
fdivs
or
pop
jmp
cmpl
int
movsb
cwtl
mov
stos
sbb
push
and
push
cli
and
shll
lcall
adc
mov
sbb
ret
jg,pn
add
hlt
int
push
cmc
and
sub
pop
call
pop
sbb
pop
pop
jle
inc
pop
jne
iret
icebp
stos
loopne
in
ljmp
scas
add
xchg
movsl
add
mov
fs
mov
outsl
and
ljmp
fldenv
lea
lea
jmp
cmp
and
adc
cmpsb
lods
fnstenv
lods
test
sbbb
sub
mov
ret
pop
pop
or
adc
dec
push
inc
dec
test
mov
outsl
push
dec
scas
dec
les
dec
mov
call
out
push
push
adc
and
xchg
test
xor
and
outsl
inc
xchg
mulb
xor
mov
imul
mov
cmpsl
nop
xchg
icebp
or
inc
add
mov
fistl
imul
pop
jb
mov
in
sub
xor
cmp
popa
and
xor
fs
lret
adc
xchg
aam
xchg
pop
ss
inc
fistl
gs
or
xchg
inc
xchg
movsl
sbb
lea
popa
fcmovb
dec
adc
cs
dec
data16
jmp
rorl
aad
jbe
push
jmp
push
cld
leave
imul
ja
dec
cmp
loopne
hlt
movsl
pop
mov
mov
xor
fldenv
sarl
into
jne
mov
lret
ret
lret
mov
sti
leave
std
mov
and
int
pop
or
mov
movswl
das
sub
jp
dec
cld
sub
push
jmp
mov
lret
cmp
mov
dec
jns
int
sbb
mov
call
push
push
pop
sbb
cmp
cmp
shll
leave
mov
ret
sub
jne
shll
xchg
stos
push
mov
add
aam
cs
lock
xor
add
xchg
outsb
dec
mov
xor
test
jg
ss
dec
and
roll
imul
sbb
mov
pusha
arpl
pop
lcall
dec
scas
cwtl
push
loope
adc
sbb
or
test
xlat
cmpsl
mov
sub
push
scas
push
add
and
or
sub
test
add
ss
loop
xor
inc
jbe
call
mov
mov
mov
ret
outsb
mov
andl
enter
es
fwait
insb
inc
mov
mov
dec
popa
sbb
push
mov
clc
lods
pop
cmovs
clc
ja
pop
loop
sbb
cli
mov
loope
sbb
dec
sub
push
push
jle
lock
cmp
cmp
xor
popa
test
ljmp
xlat
push
sub
xchg
mov
mov
mov
scas
pushf
inc
dec
push
mov
sub
lds
sti
jo
fwait
add
sti
fcompl
shlb
jno
pavgb
in
jg
pop
lods
pop
mov
mov
leave
xchg
jl
cmp
icebp
repz
xchg
mov
movsl
daa
pop
imul
mov
xchg
sub
je
push
and
insb
or
push
sarl
mov
gs
fs
and
xchg
lahf
pop
and
out
push
sbb
out
mov
test
dec
inc
loope
cli
in
and
push
jno
mov
jmp
mov
insb
jno
ss
dec
xchg
mov
inc
divb
sub
lret
rorl
rclb
fs
daa
in
je
mov
push
inc
adc
shlb
cmp
ljmp
jp
loop
mov
cmp
jns
into
mov
faddl
xchg
lret
dec
es
ret
jecxz
icebp
add
movsb
ret
mov
std
sbb
out
sarb
dec
call
icebp
inc
leave
jno
adc
pop
pop
outsb
mov
adc
push
add
xlat
cmp
and
iret
jl
adc
dec
jmp
repnz
jg
cwtl
sti
jae
addr16
fsubr
push
lret
sbb
pop
jns
xchg
leave
out
mov
xor
adc
inc
repnz
and
jge
inc
jo
cmp
subb
sub
add
mov
pop
dec
and
test
dec
push
add
popf
xchg
jg
aam
sub
mov
lock
xchg
add
cmpsl
dec
xchg
xor
popa
mov
loopne
in
shl
jle
inc
inc
push
sub
push
lds
xchg
repnz
push
and
mov
int
ja
cwtl
inc
add
xchg
addl
or
pop
or
popf
cmc
xchg
jg
iret
daa
jg
dec
or
mov
iret
in
sbb
lock
cmp
jns
adc
movsl
inc
call
movsl
pop
mov
or
pop
cmp
pushf
in
out
xorl
add
bound
mov
fwait
std
lret
test
imul
mov
pop
xchg
js
rclb
movsb
xor
es
movsl
xor
icebp
dec
pusha
sub
push
pop
inc
in
add
pop
push
shrl
push
xchg
and
mov
lods
fs
pop
jmp
call
and
pushf
push
lcall
stos
push
sbb
les
xchg
std
jno
xor
dec
popf
mov
aad
aad
jbe
adc
lds
gs
pop
push
dec
dec
xor
jge
xor
pop
fildll
sbbb
dec
mov
int
dec
stc
icebp
sub
mov
and
popa
repnz
push
lods
sub
das
cmpsb
lret
hlt
or
cmpsl
int3
push
xor
inc
sbb
mov
push
jne
rep
inc
scas
lcall
das
and
jno
sbb
mov
dec
sbb
iret
icebp
in
sti
push
jb
mov
cmp
fsubs
jg
imul
or
mov
test
std
data16
outsb
ja
jbe
pushf
aam
dec
jns
icebp
sbb
and
jae
aaa
xchg
mov
aaa
outsl
enter
xchg
cmp
add
jp
clc
aaa
insb
adc
test
jbe
adc
cs
vfmadd231ss
js
aaa
rclb
mov
dec
mov
cltd
jg
sahf
rcll
and
mov
push
sbb
fidivrs
add
jae
sbb
cmp
fldt
ss
testb
mov
les
mov
std
mov
in
or
popf
subl
or
cltd
test
popa
and
or
inc
xor
cli
lahf
dec
loope
add
inc
jae
dec
fwait
push
dec
jns
lods
mov
inc
mov
daa
jl
in
adc
cmp
lea
jmp
inc
and
xlat
aaa
hlt
xlat
lahf
fisubrl
sarb
push
xchg
in
jno
mov
and
in
cmp
mov
jne
xchg
insl
jae
negl
scas
cmp
je
scas
push
or
sbb
cli
push
mov
stos
mov
xchg
pop
or
and
les
jg
mov
dec
mov
sahf
jge
je
mov
sbb
dec
xor
mov
cltd
and
mov
mov
aad
adc
dec
movsb
insl
push
mull
push
rcl
std
cwtl
mov
pop
cmc
lret
sbb
aad
sbb
pop
mov
jecxz
and
add
es
cli
mov
cmp
loop
jecxz
aam
cmpsl
fwait
pop
mov
imul
lret
cmc
adc
aam
popf
mov
push
jbe
out
jo
cltd
jl
xchg
mov
fcomp
scas
fdivrs
xchg
cmp
scas
sbb
fwait
mov
out
mov
test
xlat
jg
or
mov
xchg
dec
aas
pop
cld
lahf
ja
dec
scas
sbb
sub
jge
inc
or
inc
cmpl
cmp
insl
lret
dec
xchg
mov
mov
adc
clc
aad
insb
pop
push
sub
push
cmp
in
and
fsubrs
std
jg
dec
jae
push
mov
or
sub
pop
stos
push
in
adc
dec
outsb
aas
dec
mov
adcl
push
cwtl
into
xor
adc
dec
push
scas
pop
sub
repz
aam
sbb
nop
or
fstl
bound
test
pusha
subb
fcomps
test
bound
add
fdivrl
inc
mov
dec
jmp
cmp
sbb
aas
mulps
roll
jno
subl
mov
fisubl
inc
or
test
aad
push
ficoms
jae
es
in
pop
fstps
push
cs
leave
inc
fisubl
je
in
subb
mov
bound
ja,pt
mov
ret
iret
stos
out
mov
pop
pop
pop
mov
mov
mov
xor
popf
push
pop
aaa
and
mov
fnstcw
cmp
xchg
sub
or
add
daa
and
push
mov
pop
jmp
mov
adc
push
xchg
std
ds
dec
adc
out
call
sub
sbb
jb
push
xor
ja
xor
xchg
dec
xor
ss
ret
dec
stc
cmp
mov
jge
int
mov
aas
dec
fdivl
fiaddl
test
sbb
ret
in
out
pop
pop
das
and
mov
inc
mov
ret
lods
int3
or
imul
jmp
es
xchg
adcb
or
sub
mov
fucomip
sti
testl
in
inc
pop
loop
nop
pop
insb
fwait
inc
loopne
or
mov
std
jp
fs
jbe
and
popf
ret
jo
push
dec
jb
sub
ret
aaa
loope
lods
leave
sub
dec
mov
fisttps
test
in
cmpsb
pusha
loopne
inc
sub
test
inc
xor
fs
cwtl
or
xchg
fwait
or
dec
imul
hlt
or
popl
or
jmp
lods
add
push
sub
jp
int3
std
and
xchg
adc
loope
inc
enter
andl
pop
add
popf
and
jmp
mov
pop
mov
adc
imul
fucomp
xchg
imul
xchg
sub
clc
mov
subb
mov
mov
jl
mov
mov
pusha
inc
xchg
dec
ror
jmp
inc
mov
jp
gs
mov
xchg
out
dec
jno
int3
fcompl
out
mov
loop
test
lahf
in
enter
shrb
sub
test
xor
scas
add
int3
sub
sbb
aad
xor
fdivs
or
push
lahf
out
push
insl
fwait
cmpsl
fimull
cmp
fdivs
mov
mov
stos
pop
jg
push
adc
out
xchg
insb
lret
push
lods
mov
test
jb
and
add
sti
sbb
hlt
out
in
add
cmc
aaa
fisubrs
std
clc
lret
sub
xor
cmpsl
out
iret
rorb
test
pop
nop
mov
dec
inc
stos
jbe
pop
roll
and
mov
jbe
push
fcomip
pop
xor
std
iret
inc
mov
cmp
test
icebp
dec
lock
inc
loopne
and
enter
and
add
es
xchg
ds
xor
jns
add
clc
mov
rorl
or
jnp
testl
sarl
je
xchg
inc
dec
rcr
outsb
xchg
dec
vpaddsb
in
rcll
mov
sub
mov
sub
das
mov
fwait
cmp
inc
add
dec
insl
ret
add
clc
addr16
in
jge
sbb
or
lods
test
sub
cmp
jno
add
lods
shlb
jmp
clc
outsb
lahf
enter
sbb
bound
popa
repnz
inc
inc
scas
pop
cld
stos
xchg
push
pop
pop
pop
ja
push
cmpsl
cwtl
jl
fiadds
dec
xor
rol
mov
push
xchg
popf
mov
xor
lea
ljmp
dec
movsb
leave
daa
int
iret
push
inc
cwtl
jb
call
inc
xchg
xor
jnp
imul
jg
fsubrs
out
out
inc
push
cmpsb
push
into
in
movsb
adc
ja
icebp
mov
xorl
outsl
ss
mov
outsb
std
sarl
pusha
push
dec
ficomps
pop
lods
fwait
mov
lods
mov
mov
xchg
mov
jg
or
or
scas
mov
cmpsb
shlb
inc
shrl
dec
mov
ja
adc
icebp
xor
jne
int3
ret
insl
xorl
fistpl
lods
xlat
jle
push
adc
or
sub
jg
flds
fimull
xchg
divb
popa
xchg
fsts
cmp
lcall
xchg
fstpl
xor
fidivs
call
das
jg
xchg
cmpsl
mov
push
aaa
imul
mov
loopne
add
cli
inc
adc
mov
mov
xor
stc
push
clc
mov
psllw
sti
in
in
imul
pop
incb
pop
aam
aam
jo
jle
fistpl
mov
out
in
lea
pop
xor
mov
mov
aam
jo
idivb
add
mov
sahf
jge
repz
xchg
clc
mov
pusha
andb
and
jne
pusha
push
push
out
inc
mov
jae
int3
push
push
mov
cwtl
lcall
mov
and
xchg
aad
das
xchg
adc
lods
fidivrl
and
mov
sbb
dec
mov
xchg
add
push
pop
jmp
and
push
push
fcoms
hlt
push
push
xchg
adc
ja
or
test
push
xchg
cld
repnz
fmulp
in
scas
imul
out
jo
ss
fildl
test
rolb
mov
mov
pop
xor
jo
inc
cs
lret
and
add
movsb
lcall
adc
jle
xchg
pop
jbe
inc
loope
xchg
inc
ror
sahf
mov
out
call
test
lods
push
int3
lret
fwait
xor
add
jb
out
sub
jmp
gs
jmp
clc
inc
jge
pop
inc
sbb
sub
cmp
mov
out
shll
outsl
mov
pop
jmp
jle
mov
jg
insl
push
push
cmp
adc
cmpsb
push
out
jns
and
mov
push
or
jns
ljmp
arpl
mov
mov
gs
adc
stos
sar
je
mov
jle
push
scas
adc
adc
mov
sahf
clc
mov
dec
dec
pop
aam
or
lret
jo
test
adc
lods
andb
xor
add
push
mov
pusha
lret
add
sbb
inc
cmp
or
mov
cld
mov
jbe
addr16
mov
or
mov
xchg
and
mov
mov
rcl
push
sub
push
mov
decb
in
loopne
jnp
xor
pop
add
xor
xor
pop
rorb
jne
or
divl
dec
mov
mov
xchg
scas
push
in
push
xchg
mov
cmpsl
repz
stos
dec
pop
xchg
mov
sub
lret
scas
popf
clc
data16
fwait
push
shrb
push
fsts
and
cmc
loopne
pop
jl
es
mov
or
cmpsl
and
ret
in
xchg
imul
add
pop
pop
jmp
mov
js
and
setnp
adc
mov
test
xor
xchg
test
pusha
cmpsb
ljmp
push
jecxz
or
adc
inc
cmpsb
and
xchg
dec
test
jae
xchg
sbb
int
loopne
mov
jb
and
loopne
iret
insb
aas
arpl
mov
cmp
nop
fildl
insl
pop
std
test
dec
xor
popf
into
cmp
ss
imul
jae
sahf
sbbl
inc
cmpsl
adc
sti
test
cmp
icebp
or
push
mov
clc
pop
jne
fwait
xor
mov
les
xchg
xchg
push
mov
mov
push
inc
xor
mov
mov
mov
mov
cmp
and
dec
and
decl
pop
sbb
and
xchg
lods
adc
nop
jmp
sub
ss
push
out
adcb
cmp
push
or
pop
jmp
and
out
in
sub
adc
mov
out
insl
or
scas
ljmp
mov
aam
test
mov
pop
sub
sbbb
dec
push
push
lahf
outsb
adc
das
js
stc
test
push
lds
mov
sub
push
mov
jg
divl
inc
mov
or
mov
pop
shr
sub
or
pop
xor
xlat
out
inc
sbb
fwait
shr
in
inc
push
repnz
add
dec
aas
addr16
xlat
mov
loope
lods
data16
mov
mov
push
push
pop
es
mov
xlat
lock
sub
add
inc
sub
push
inc
adc
out
dec
imul
fst
scas
jns
mov
push
jo
xor
fcoml
stos
and
jp
movsl
mov
push
mov
movl
jmp
test
stos
inc
mov
jmp
cmp
and
cmp
add
lret
cmp
add
sub
andb
cmpsb
and
nop
adc
push
push
cmp
push
mov
cmp
rolb
add
shll
shll
cmp
mov
sub
mov
shlb
add
or
sahf
das
loope
cmp
adc
cmp
and
bound
push
xchg
jge
mov
fisttps
mov
cmp
test
popf
rcll
lods
shll
test
sub
clc
sub
add
add
fnstsw
ljmp
sti
nop
sub
mov
addr16
xor
out
xor
outsb
push
mov
and
mov
mov
mov
xchg
pop
mov
mov
addl
xchg
daa
or
clc
jmp
pop
sbb
icebp
jl
sti
fildl
pop
mov
xchg
roll
daa
mov
cmp
cmp
addr16
dec
inc
mov
call
fwait
mov
xor
shrd
in
mov
push
push
xchg
adc
jmp
aas
fnstenv
mov
bound
xor
push
pop
orb
mov
jge
cltd
lods
pop
mov
dec
jb
lcall
push
sti
and
cmp
and
call
sbb
cmp
pop
in
mov
enter
insl
inc
adc
ljmp
jne
mov
cmpsl
add
test
shrl
loop
inc
lret
sbb
and
scas
mov
and
mov
rcrb
pop
and
jnp
jno
pop
scas
les
scas
mov
cmpsb
mov
ljmp
fnstenv
jae
pop
outsb
mov
jo
mul
xchg
in
in
push
negb
sbb
and
xor
sbb
leave
inc
pushf
pop
lret
fst
mov
inc
jne
nop
jl
addr16
ja
ja
std
mov
add
sub
xor
dec
pop
mov
push
lods
pop
mov
faddl
inc
test
inc
xor
push
ror
push
mov
inc
or
jl
mov
rcll
aam
clc
xchg
mov
and
ret
cmp
es
lret
dec
bound
fstpl
jo
xorl
xchg
lret
pop
js
shlb
jmp
or
loope
hlt
fmull
nop
push
xor
mov
mov
push
adc
inc
push
addr16
sub
mov
sahf
add
cmc
mov
inc
jno
or
xorl
in
cwtl
sub
in
shlb
in
es
sbb
fsubs
inc
xchg
sub
lea
jae
sbb
test
leave
xchg
out
idivl
mov
lea
std
call
inc
push
mov
mov
int3
dec
pushf
fisttpl
icebp
sub
in
test
push
lret
lahf
jae
lods
xor
lods
mov
or
insb
dec
cmpsl
std
xchg
sbb
xchg
and
leave
push
iret
xor
int
aam
and
xchg
cli
pop
jl
pop
sbb
sti
lock
adc
cmp
jecxz
out
clc
xchg
jecxz
ds
arpl
nop
mov
adc
ficomps
mov
mov
inc
clc
ja
sahf
aaa
jecxz
lcall
xchg
cwtl
dec
arpl
dec
nop
push
test
dec
push
xchg
ret
xchg
jp
aam
insl
mov
cmp
jne
gs
clc
imul
out
jg
fnstenv
pop
repz
sub
push
inc
adc
shlb
or
in
cmp
mov
jnp
mov
jnp
pop
mov
ret
in
mov
js
cwtl
js
or
mov
dec
test
das
out
mov
xchg
in
fs
xchg
incb
mov
scas
es
xchg
lahf
in
push
cmp
aad
push
dec
dec
push
aad
cmc
dec
and
dec
lds
jmp
adc
pop
push
aad
pop
xor
jne
sub
pushf
lock
mov
rcrb
sub
ffreep
out
pop
call
mov
jecxz
call
bnd
imul
out
loop
dec
mov
mov
addr16
mov
mov
cmp
dec
stc
arpl
ss
cmpsb
andl
in
stos
js
gs
loop
xchg
jb
inc
aas
xor
adc
mov
cmpl
out
mov
cltd
les
xor
push
mov
loopne
mov
cmp
xchg
aam
pop
stos
pop
repz
sbb
movsl
out
xchg
hlt
xor
bound
stos
call
mov
out
lea
pop
push
pop
clc
outsl
xchg
lock
mov
les
sbb
sbb
imul
cmp
cmp
lret
cmp
lcall
xor
add
mov
pop
dec
adc
push
mov
test
mov
pop
push
leave
mov
aaa
lock
je
sbb
pop
mov
sarl
sub
jnp
adc
shlb
outsl
mov
rcl
stos
xor
clc
popf
adc
mov
mov
call
int
or
loop
out
xchg
jl
jne
bound
in
sbb
xchg
sahf
or
stc
sub
mov
pop
out
ss
mov
xchg
xor
imul
xchg
mov
daa
mov
fwait
pop
jmp
in
xor
cmpsl
lcall
andl
mov
inc
xor
push
pop
rol
pop
imul
arpl
or
aaa
sub
loop
push
ja
xbegin
ret
sub
pop
mov
cmp
push
in
stos
mov
mov
aas
or
lret
push
mov
stc
and
jo
aas
ss
mov
mov
jle
xor
jnp
js
sub
xor
lock
add
sbb
ljmp
sub
and
push
dec
repz
data16
cli
mov
scas
mov
jg
pop
and
inc
hlt
and
test
cmpsb
inc
clc
in
jb
fwait
xchg
pop
pushf
leave
add
jmp
sbb
push
jp
add
or
test
and
aaa
xchg
gs
clc
adc
pushf
push
sarl
mov
mov
and
fstps
arpl
insl
push
push
ss
lret
mov
mov
imul
xchg
pushf
jbe
movsl
clc
jo
test
xlat
pop
repz
lcall
jnp
ret
mov
mov
cmp
call
xchg
shll
lea
jns
and
push
mov
pop
mov
sub
shrb
cmp
lock
xchg
test
push
lods
fsubrp
subl
sub
in
aad
insl
mov
fisubrs
adc
pop
sbb
pop
lods
push
fsts
fucom
clc
es
pop
fwait
xchg
rorb
outsb
sub
mov
inc
data16
mov
jp
sub
and
sub
ret
into
aas
xor
shrb
sarb
mov
xor
scas
out
cmp
pop
inc
mov
xor
inc
std
movsl
faddl
jg
cmp
sbb
sbb
scas
jnp
sbb
lods
jmp
es
test
fs
daa
inc
mov
cmc
shl
jb
imul
enter
in
adc
addr16
mov
and
popf
xor
xchg
jge
sub
incb
mov
daa
xor
dec
int
or
loop
xlat
and
rolb
hlt
sub
notl
add
jb
push
pusha
xchg
jns
stc
stos
sbb
es
add
lds
lret
outsl
aaa
or
imul
ds
sub
dec
loope
push
lock
jge
jb
mov
sub
mov
incb
je
imul
push
lret
mov
mov
movsb
xchg
cwtl
xlat
jp
or
loopne
and
mov
adc
divb
mov
cs
js
sub
aam
enter
loop
lea
sub
sti
xchg
out
mov
movsb
dec
xchg
sarl
cmp
push
cmp
test
sti
and
inc
leave
scas
mov
das
mov
aad
jb
loope
sbb
lahf
mov
test
and
or
mov
ret
mov
dec
jo
adc
lret
pop
inc
or
movsl
xchg
mov
les
test
cmpsb
test
mov
iret
daa
fs
fmul
clc
adc
pop
mov
inc
mov
icebp
push
add
lret
movsl
dec
out
js
or
mov
ljmp
xchg
int3
mov
fdivrs
arpl
out
add
add
inc
push
cmpsl
sarl
mov
mull
jns
int
jae
movsb
mov
mov
ja
cld
daa
push
pop
mov
dec
repnz
es
push
push
pop
sbb
inc
adc
xor
loope
test
sbb
mov
sahf
mov
adc
push
outsb
loop
lods
std
and
mov
cs
jp
cli
pop
sbb
out
std
cmp
pop
dec
in
sub
out
pop
daa
pushf
testl
aas
test
cmp
loopne
dec
lahf
test
icebp
sbb
leave
cli
pop
mov
sbb
mov
push
mov
mov
cmp
fldt
push
or
xchg
imul
xor
adc
jae
and
jne
sub
sub
sbb
rclb
loope
jne
dec
pop
ss
scas
jge
adc
mov
adc
jbe
sub
outsl
nop
cmp
cmc
mov
xchg
lock
lret
in
and
pop
jb
cmc
push
cmp
sbb
das
cltd
sub
dec
lods
ret
mov
xor
testl
push
push
int3
cmp
sub
je
lock
les
clc
ds
jns
ja
mov
sub
dec
gs
lods
hlt
mov
and
push
test
ret
imul
push
bound
sbb
mov
cmp
xlat
sbb
xor
out
out
test
push
dec
out
loope
pushl
xchg
cmp
pop
sbb
dec
shlb
xor
pop
add
test
mov
stc
push
push
mov
push
add
test
insl
adc
push
xor
push
stos
stos
push
cmpsb
push
fildl
mov
cwtl
cmp
inc
or
loope
add
popa
cmc
add
jno
adc
sbb
pop
inc
or
or
leave
dec
mov
sbb
arpl
sbb
in
xor
add
mov
int3
std
push
mov
lahf
call
pop
andl
imul
fptan
xor
cld
shlb
push
cli
dec
scas
out
or
adc
lret
je
xchg
inc
ljmp
and
popa
lahf
push
sub
in
jns
imul
fistl
pop
sbbl
mov
in
dec
cmc
mov
push
push
das
aas
mov
fldenv
xchg
iret
les
jecxz
pop
xchg
lea
pop
lods
daa
ss
dec
stc
push
fcmove
lods
mov
add
jne
sbb
aaa
js
push
pop
popf
xchg
aaa
xchg
stos
adc
xor
push
inc
adc
mov
fists
inc
je
gs
push
xor
mov
lret
orl
rcl
xchg
repnz
push
adc
mov
add
inc
leave
xchg
std
in
shrl
call
nop
or
adc
repz
jb
xor
orb
cmp
sarl
les
cmc
push
and
arpl
push
ss
pop
pushl
inc
pop
dec
inc
cmpsl
xor
into
adc
mov
and
add
and
sub
xchg
jne
dec
stos
xchg
mov
mov
pushf
fcmovnbe
sbb
enter
adc
outsb
xchg
fsubs
cs
xor
push
stos
cmc
inc
nop
int
rcrl
loope
repnz
mov
pop
out
xchg
stc
xchg
aaa
xchg
sbb
dec
cli
loopne
push
sub
mov
sub
mov
jecxz
outsb
adc
cmp
dec
adc
or
mov
mov
xchg
test
pop
sti
and
add
int
sbb
push
inc
in
sti
aaa
nop
jo
jnp
cmp
cli
in
sahf
mov
mov
push
scas
pop
into
pop
cmp
les
outsb
sbb
mov
mov
fsub
call
mov
pushw
dec
ficompl
inc
jge
f2xm1
xchg
scas
pop
mov
loopne
outsb
loop
xchg
mov
cmp
ret
or
fisttpl
in
or
int3
cs
and
cmp
cld
cmp
movsl
lock
jge
gs
mov
jns
push
int3
jg
pop
pop
mov
mov
add
mov
in
cmp
gs
outsb
mov
add
div
sbb
outsb
pusha
add
roll
ljmp
mov
mov
pop
pop
mov
test
xor
or
xlat
push
loop
push
xor
enter
adc
adc
int3
outsl
out
xor
add
adc
divl
mov
sub
in
cmp
xchg
ljmp
mov
inc
push
push
repnz
movsb
aaa
push
and
leave
clc
sub
imul
test
repz
ja
xchg
push
pop
push
pop
daa
cmp
xor
jecxz
sti
iret
dec
das
jge
mov
fadds
inc
aas
ud0
icebp
jecxz
arpl
pop
in
nop
jbe
in
mov
shlb
into
pop
mov
or
mov
loop
xlat
dec
int
push
or
dec
push
xchg
scas
cmpsb
and
and
add
sti
insb
int3
mov
lret
mov
je
jne
jg
xchg
jle
movsb
pop
adc
dec
pop
xchg
cli
inc
or
xchg
ja
push
sub
sti
push
pop
mov
push
test
adc
out
inc
leave
cltd
daa
in
into
and
mov
adc
or
mov
mov
sbb
inc
sub
in
popf
outsl
and
out
std
lods
cmc
mov
adc
push
lds
jmp
imul
xchg
xor
in
mov
add
push
inc
mov
push
ds
iret
lods
icebp
xchg
xor
jge
mov
xchg
sbb
adc
dec
xor
sbb
inc
addr16
pop
stos
mov
cltd
shll
inc
cmp
pushf
andl
cmpsl
push
fildl
cmp
popf
rcrb
les
sub
dec
aam
mov
xor
lcall
inc
lret
sti
sub
sti
cmc
rep
ja
loopne
notb
aad
in
pop
xor
adcl
pusha
mov
dec
lret
dec
and
lods
dec
notb
inc
inc
loopne
lret
dec
jae
adc
dec
or
mov
pusha
sahf
and
cmp
jge
xchg
adc
and
mov
lret
daa
adc
xor
add
andl
call
inc
aaa
push
push
sub
xor
stos
sub
xchg
sbb
aas
enter
jecxz
jg
and
adc
sarl
aaa
pop
cld
xor
xchg
pop
test
mov
pop
sub
push
mov
mov
shrb
xorb
push
sub
sub
mov
daa
and
pop
push
cltd
mov
jecxz
ljmp
fiaddl
xchg
fistpll
add
hlt
iret
mov
inc
frstor
mov
cmp
adc
cmp
pop
dec
xchg
sub
imul
loop
div
js
cmp
xor
enter
push
test
mov
sbb
dec
dec
hlt
inc
nop
cltd
inc
pop
dec
je
lcall
cli
fprem1
cmp
ret
test
rep
into
cmp
sbb
cld
dec
pusha
dec
push
add
cmp
sub
or
adc
scas
pop
loopne
ljmp
out
pop
and
xchg
or
push
jne
lret
in
add
aas
add
sbb
flds
or
jp
jno
mov
cwtl
enter
push
lret
sub
out
cwtl
test
iret
rorl
outsl
pop
mov
shlb
push
xchg
pop
and
in
adc
jle
pop
cmp
jbe
push
pop
out
cmp
mov
rcr
fdivs
push
mov
test
mov
jae
sbb
fistpl
adc
or
shrl
jnp
push
ret
dec
mov
and
les
imul
pusha
movsl
push
mov
sbb
lea
xor
clc
inc
pop
mov
dec
or
xor
daa
and
push
xchg
xchg
aas
imul
sub
test
adc
nop
adc
mov
adc
inc
ss
repnz
cmp
xor
aad
cmp
jbe
mov
roll
inc
cmp
or
and
sub
outsl
sbb
mov
daa
mov
mov
xor
notb
cmc
nop
bound
out
inc
insl
push
inc
cmpsb
lcall
sbb
inc
inc
mov
cmp
pop
adc
movl
movsb
addr16
movsb
outsl
pop
fdivs
adc
xorb
repnz
lcall
push
arpl
jo
mov
sti
out
or
sub
mov
imul
add
pop
adc
fwait
jns
push
icebp
adc
and
bnd
out
rcll
icebp
sub
push
mov
inc
push
adc
push
jmp
cmp
scas
jno
mov
mov
mov
mov
popa
pop
or
out
push
pop
sbb
sbb
push
or
add
andl
movsb
jae
stos
bnd
repnz
js
push
jge
sub
fs
lret
lods
jae
or
sbb
pop
in
jp
sbb
lahf
imul
pop
lahf
enter
or
xor
and
pop
mov
pop
xor
js
inc
dec
push
inc
call
int
sub
mov
cmp
addb
or
add
inc
movsl
sub
mov
dec
cmpsl
push
push
das
sbb
push
xor
iret
outsl
lret
and
outsl
sbb
fnstcw
int
pop
outsl
repz
cmpsb
xlat
xchg
adcb
subb
xchg
mov
pop
xor
es
adc
incl
or
js
cwtl
mov
sti
lcall
lcall
stos
addr16
adc
fsub
popf
pop
and
div
sbb
psllw
movsl
pop
out
ja
or
hlt
pushf
fidivl
jns
je
xor
out
cmp
outsb
ret
sbb
pop
shll
cmpsb
ficoml
cmp
push
pop
add
fwait
int
xor
mov
pop
sub
sub
lods
shrl
cld
mov
es
jno
or
cld
outsl
jne
dec
inc
add
lcall
loop
pop
test
ficomps
xchg
fmulp
mov
cwtl
test
leave
int
lahf
cld
xchg
icebp
xchg
lods
imul
mov
shlb
xor
add
sub
adcl
cwtd
adc
jecxz
mov
test
loope
movsl
out
in
call
fiadds
into
or
sub
rclb
lret
push
add
in
jne
push
and
sbb
push
or
inc
pop
mov
xor
or
mov
mov
inc
jo
jle
sub
mov
repnz
les
into
and
insb
adc
mov
sti
xchg
or
rcrb
in
scas
sbb
jl
mov
insl
lret
test
in
jae
cmp
sub
xchg
dec
xor
inc
lds
xchg
xchg
pop
mov
mov
fsubl
push
mov
mov
out
js
ret
cmpsl
cmp
lcall
or
pop
cli
out
out
movsb
pop
test
push
js
pop
rcrb
cmp
sti
mov
mov
aaa
jle
in
ljmp
fcomps
in
sub
lods
stos
popf
and
pop
stos
xor
popa
dec
test
aam
jg
repnz
mov
in
sbb
add
xchg
jmp
test
dec
ljmp
fwait
pop
and
cli
or
clc
iret
mov
daa
rcll
decb
mov
rclb
jne
or
dec
fstl
xlat
jp
sbb
adc
stos
shrb
out
and
jmp
xor
and
jae
repz
push
ret
cmpsl
out
shr
hlt
dec
repnz
lods
insl
pop
xchg
arpl
fcomps
fldcw
push
imul
cmp
lcall
and
cmp
ficoml
jl
xor
xchg
scas
inc
cltd
nop
pop
subl
jb
arpl
dec
mov
xor
pop
mov
icebp
movsl
sub
xor
sbb
out
insb
das
inc
add
testb
mov
imul
jbe
xchg
mov
data16
dec
fldt
sti
cltd
in
jnp
ljmp
loope
xor
mov
mov
mov
xchg
mov
jg
jle
inc
int3
push
pushf
push
xchg
mov
aad
fcoms
stos
aas
push
lods
mov
adc
jecxz
gs
jmp
test
pop
jp
es
add
adc
dec
call
jg
jg
jmp
fwait
and
mov
sub
out
cmpsb
ret
xchg
imul
outsl
pop
jecxz
movsl
or
out
sbb
dec
jae
push
outsb
in
adc
mov
lret
mov
fcmovnbe
xchg
adc
add
pop
push
lahf
xchg
or
mov
pushf
and
pop
dec
imul
sahf
in
mov
pop
cmp
push
mov
jbe
xchg
fisubrs
xchg
repz
pusha
mov
inc
dec
push
pop
pop
movsl
push
sbb
cmp
inc
in
add
outsl
jns
push
mov
cmp
cmpsb
stc
xlat
dec
mov
lock
xor
add
xchg
jecxz
sbb
push
stos
jns
sbb
xor
enter
mov
in
lds
stos
stos
outsb
add
or
mov
pusha
pop
jle
je
pusha
xchg
xchg
pushf
adc
je
mov
outsl
mov
xor
xor
mov
push
int3
mov
iret
into
lret
and
cmp
adc
jp
lret
mov
sti
stos
mov
jae
popf
jno
push
stc
lds
add
js
pop
mov
outsb
hlt
jb
push
jl
mov
xchg
inc
mov
icebp
lahf
stc
dec
andb
mov
loope
pop
inc
insb
fnstcw
test
std
mov
and
out
imul
sub
xchg
adc
fiadds
push
ja
and
insb
inc
sbb
adc
call
scas
pushf
jne
cmp
bound
ja
xchg
cmp
out
cltd
bound
outsb
addr16
gs
pop
roll
mov
cwtl
ja
lods
mov
mov
jnp
mov
out
xor
ret
data16
mov
push
cmp
cmp
leave
cmp
int3
stc
fs
push
or
push
call
dec
cmpb
pop
cmpsb
repnz
int
xchg
clc
sub
roll
xchg
nop
popf
clc
mov
lods
inc
push
js
test
add
mov
pop
dec
daa
sub
lret
test
fucomip
mov
repz
mov
inc
xor
cli
ret
test
mov
or
mov
data16
outsl
loopne
push
cmp
pop
ljmp
mov
std
dec
out
pusha
dec
push
jmp
out
sbb
push
aaa
inc
sahf
sarb
int
pusha
xor
push
outsb
push
xorl
cmp
test
mov
or
ja
dec
or
pop
cmpsl
add
jecxz
adc
aas
or
mov
xor
add
jp
popl
cwtl
jge
rclb
xlat
cmp
jmpw
cld
es
and
and
add
movsb
mov
or
inc
or
in
cmc
jns
pop
or
in
in
jb
aam
jp
int3
fld1
inc
xchg
aaa
sub
xor
rorl
jmp
test
leave
repnz
xchg
xlat
xchg
push
and
lcall
es
sarb
aad
sbb
inc
sub
xor
and
repnz
popa
inc
shlb
cmpsb
imul
xorb
rolb
xor
test
or
out
loopne
pusha
imul
addr16
jae
mov
jge
cmp
cmp
dec
scas
xor
repnz
add
sti
fdivrl
jbe
jnp
lds
aas
xchg
mov
sti
dec
or
aam
movsb
jae
out
stc
cmpsl
in
mov
pusha
pop
add
add
repz
nop
jne
aam
push
outsb
repz
dec
call
mov
aas
rclb
push
add
inc
cmp
pop
xlat
jp
sbb
sbb
pop
insl
nop
sysret
scas
dec
cmp
ss
jnp
push
adc
jl
pop
sub
cmc
sub
add
jae
push
and
ret
idiv
daa
mov
shlb
push
cmp
outsl
add
adc
insb
adc
addr16
push
and
loopne
fisubrl
movsb
pop
insl
out
lahf
adc
sbb
lds
jo
jmp
pop
test
sub
out
jge
sub
inc
stc
imul
movl
pop
cmp
jnp
cmp
loope
addr16
dec
outsl
push
push
mov
mov
out
sti
jbe
or
out
out
mov
dec
cmp
mov
lcall
insb
xchg
sbb
push
pop
mov
cwtl
sbb
push
sbbl
inc
aaa
lea
jmp
adc
stos
rcl
sub
mov
pop
jb
stos
pop
inc
xor
push
mov
icebp
je
lds
ret
mov
add
dec
add
stos
inc
pop
or
loop
aaa
xor
fimuls
push
je
add
hlt
das
test
aad
mov
in
sub
cmp
jns
inc
movsl
push
int
mov
addr16
lods
inc
addr16
mov
pushf
cmpsb
xor
jl
inc
mov
sti
fmul
out
insb
add
pop
xchg
insb
scas
mov
add
adc
stos
insb
je
sbb
scas
jg
cmp
arpl
jo
push
jle
call
xchg
ss
sub
int
and
jnp
and
push
leave
loop
adc
jns
push
fimull
xor
fcompl
mov
rcrb
sub
xor
nop
mov
cmpb
inc
fistpll
insb
inc
inc
shll
rorb
sub
int3
sub
pop
fs
sahf
popf
adc
fnstenv
loope
mov
jge
bound
loope
clc
push
xor
mov
xchg
mov
std
xor
je
nop
xchg
je
jge
and
mov
or
cmpsb
das
sbb
aas
mov
pop
or
addb
clc
scas
outsl
or
cld
and
xchg
mov
mov
jnp
cmpsl
loop
mov
push
push
dec
add
add
loope
sbb
fstps
sub
dec
iret
add
inc
rolb
cmp
push
push
lock
push
aad
xchg
inc
lock
rep
jo
push
rorl
inc
cmp
ljmp
pop
inc
icebp
xlat
dec
mov
inc
push
mov
xor
xchg
repnz
fisttps
loope
and
push
cmpsl
lret
out
mov
aaa
push
mov
jge
adc
mov
xchg
in
ljmp
test
shll
sub
add
rcrb
mov
lret
push
adcl
test
in
push
lods
in
in
jl
fwait
in
push
sbb
sbb
outsb
push
imul
dec
jge
je
cld
push
insl
or
mov
cmp
lret
loopne
push
xchg
xor
xchg
jmp
pop
and
inc
test
lea
outsl
inc
xchg
fiaddl
sbb
scas
push
jns
enter
lods
dec
sub
mov
mov
out
notb
pop
pop
cmp
and
dec
aas
test
jp
or
pop
pop
stc
out
cmp
movl
inc
jmp
jp
shrb
or
inc
and
movsl
jl
cmp
adc
mov
cmpsl
mov
aas
jecxz
pop
sub
mov
aam
ljmp
gs
and
orl
and
jg
daa
shll
xor
cmp
mov
xor
addr16
mov
push
inc
test
leave
or
mov
adc
stos
daa
inc
sub
dec
xchg
std
stos
push
add
lods
pop
dec
jno
or
sbbl
or
add
jb
push
pusha
insl
mov
aaa
adc
sub
cmpl
mov
mov
outsl
cmp
adcl
fsts
imul
inc
xlat
sub
cs
xlat
adc
pop
push
pushf
cld
stos
fcmove
cmp
std
rclb
iret
xchg
ret
add
sti
adc
inc
cwtl
repz
in
scas
loop
popf
ss
adcl
cs
fsubs
repnz
hlt
mov
inc
jne
xor
dec
dec
bound
repz
cmp
inc
testl
cmp
mov
icebp
push
xor
sub
mov
mov
jb
sub
movsl
loop
mov
push
mov
lea
lea
mov
adc
in
cmpsb
add
test
pop
xor
leave
xor
mov
ja
out
movsl
cld
and
ret
dec
xor
xchg
shl
aas
mov
shr
in
aam
inc
aas
xor
in
xlat
dec
add
in
clc
inc
das
and
mov
scas
iret
adc
xor
and
jbe
pop
stos
fwait
das
jno
jns
xchg
in
lock
lret
testl
mov
adc
push
out
aaa
ss
mov
aas
or
pusha
mov
jle
cmp
or
push
popf
fildl
jb
aas
add
cmp
aad
sbb
mov
scas
bndldx
mov
xchg
pop
les
fidivrs
push
jne
mov
xorl
stos
add
nop
lds
sbb
cwtl
fcomp
lea
lods
ss
jne
call
and
mov
xlat
cmc
fisubrs
cmc
jle
pop
mov
pop
int3
shl
mov
xlat
jo
cltd
aam
int3
mov
jb
xchg
mov
idivb
out
cmp
or
push
leave
sbb
imul
inc
add
imul
add
dec
adc
cmp
jo
xchg
or
mov
outsb
rdmsr
sbb
pop
sub
add
mov
lretw
sub
sbb
mov
scas
pop
mov
mov
incb
fstpl
outsb
push
sbb
jg
mov
mov
and
cmp
fwait
adc
pop
mov
sbb
jne
inc
scas
cmp
in
add
or
adc
enter
hlt
in
mov
mov
clc
shrl
jp
xchg
pop
fs
lods
jne
lods
enter
or
pusha
mov
pop
xor
fsub
dec
cmp
fadds
scas
adc
lahf
cs
add
xchg
ss
sub
fucomi
aas
insb
mov
idivb
into
ss
outsb
sti
out
in
ss
mov
or
and
mov
push
cmp
or
adc
in
fisubrs
mov
icebp
push
out
sub
js
or
in
bound
setp
sub
sahf
cltd
je
jo
in
inc
jmp
movlps
inc
fs
add
mov
dec
add
dec
dec
aam
adcl
jns
jge
sti
jne
sub
fsubl
movsb
mov
xchg
into
bound
inc
cmp
bound
mov
cmp
sbb
in
test
ss
xor
cmp
jp
cld
das
loope
cmp
ds
inc
test
stc
je
test
mov
jo
jnp
outsb
lock
aaa
jnp
loope
sbb
lods
jge
test
je
int3
movsb
lods
insl
movsb
lea
add
mov
out
mov
push
mov
scas
xlat
pop
sub
xchg
pop
pop
mov
cmp
xchg
inc
add
xchg
dec
jnp
les
sbb
push
in
out
int3
sbb
or
enter
sbb
mov
jo
loop
flds
cld
pop
inc
sub
or
addr16
and
adc
xchg
fcmovnbe
leave
jb
sbb
push
mov
adc
sub
in
xchg
je
jecxz
pop
mov
mov
jne
fidivs
das
cmp
std
jp
out
cmp
aad
test
popa
cli
or
lret
cmpsl
imul
les
sarl
inc
daa
andl
push
mov
pop
adc
in
cmpsl
ss
adc
popf
mov
aas
ljmp
mov
xchg
and
aaa
int3
rol
popf
mov
lahf
out
xor
and
jo
incb
lock
out
inc
idivb
repz
xor
pusha
andb
push
in
dec
push
push
popa
outsl
mov
add
xor
leave
sbb
popf
fldt
jl
push
sub
in
jo
enter
adc
aaa
fdivl
arpl
es
xor
shrb
imul
adc
in
pop
test
test
jecxz
pop
adc
movsl
movsl
pop
pop
jmp
outsl
test
cmpsb
xor
dec
iret
aaa
adc
push
push
inc
push
dec
stos
scas
pop
rcll
fildll
sub
pop
cmpl
fsubrl
imul
pop
sbb
jo
aas
iret
and
repnz
dec
mov
stos
stc
daa
sub
aas
loope
adc
arpl
pop
mov
add
loopne
inc
mov
fwait
and
js
xor
mov
aas
mov
clc
pop
dec
shrb
mov
mov
xchg
add
dec
cmpsl
jecxz
jp
sar
adc
and
loop
push
dec
jo
fwait
std
jno
push
cli
mov
adc
xor
push
xor
sets
or
addr16
adc
and
loopne
mov
and
lods
lret
insl
jbe
imul
push
pop
cltd
jg
pop
pop
pop
pop
in
cmpsb
mov
or
push
aad
les
fnstenv
cmpsl
js
push
add
fldcw
dec
adc
jae
imul
xchg
add
mov
daa
or
out
mov
and
adc
shll
daa
mov
loop
dec
ret
data16
mov
mov
cmp
and
lods
out
inc
inc
xor
xchg
cwtl
je
sub
in
stos
scas
fisttpl
shr
or
test
inc
jmp
popf
inc
and
fsubl
jns
sbb
out
loop
popf
in
dec
sbb
mov
xchg
mov
push
shrl
lock
and
inc
sub
and
sub
out
or
shrb
jno
sub
mov
or
repz
and
pop
gs
sub
je
sub
nop
js
xchg
mov
out
xchg
jns
test
nop
rcrb
stos
dec
mov
push
mov
insl
cmp
pop
xor
xor
icebp
jnp
lods
jmp
stos
mov
int3
or
enter
js
push
outsl
xchg
cmp
gs
sub
push
imul
add
push
mov
ret
lret
into
inc
push
stos
mov
icebp
and
and
testb
mov
sbb
dec
mov
pop
out
test
add
mov
jmp
fidivl
test
jle
in
sbbl
ss
and
jae
mov
mov
lret
aaa
aas
cmp
mov
mov
pop
repz
and
rcrb
jle
mov
and
jne
lahf
jno
aad
xchg
mov
push
jecxz
sub
xor
cmpsb
std
xchg
cltd
push
dec
jae
mov
pop
lcall
inc
dec
jne
lea
sbb
sub
scas
mov
xchg
jecxz
lret
jne
sbb
cmc
xchg
pop
daa
test
mov
push
lds
sbb
cmp
addr16
and
and
in
dec
add
mov
push
sub
jl
mov
in
or
push
movl
sub
outsl
cmp
loopne
leave
call
mulb
mov
jne
mov
into
cmp
fstpl
add
lods
dec
xchg
pushf
mov
jb
aam
cmpsb
inc
je
insl
inc
popf
nop
xchg
mov
mov
and
nop
mov
imul
outsb
in
aad
lock
inc
push
xchg
lret
xor
cmc
adc
andl
ljmp
fcomip
inc
js
cmpsl
repz
sub
ja
aas
fwait
hlt
aam
nop
outsb
cld
hlt
iret
sahf
inc
in
fstp
adc
test
inc
shl
rcl
adc
lea
mov
lock
mov
jmp
pop
es
sub
cmp
aaa
int
jne
test
pop
sbb
pop
sub
jmp
lea
mov
cmpsl
adcb
cmp
inc
pop
dec
ds
test
fndisi(8087
or
adc
mov
fidivs
leave
push
mov
pop
pop
push
inc
ss
pop
lods
cs
jo
lock
out
mov
pop
jle
pop
ret
sahf
lahf
es
insl
mov
mov
mov
popa
add
mov
test
iret
ret
lea
test
subl
arpl
addr16
lcall
pop
inc
mov
add
inc
sbb
insl
mov
mov
add
push
out
js
inc
push
inc
rcrl
mov
out
pusha
gs
stos
push
popf
jle
je
bnd
fstps
or
fiadds
or
scas
in
mov
fstps
adc
mov
push
and
adc
nop
xchg
inc
mov
das
and
test
mov
bound
jnp
and
rcl
hlt
push
cltd
in
cmpl
iret
pop
repnz
mov
mov
jo
loopne
ss
adc
pop
pop
add
aaa
mov
imul
or
mov
test
in
mov
and
in
xor
pusha
push
adc
inc
cld
idiv
mov
in
dec
in
fldenv
imul
inc
jmp
ja
jae
imul
mov
into
jmp
cmp
pop
xor
jp
enter
dec
xchg
sti
aam
inc
ret
cmp
adc
pop
xor
je
movsl
popf
out
scas
push
jo
or
jo
iret
ja
aad
leave
popf
pusha
xchg
lahf
repz
mov
in
fnstenv
ja
scas
push
lock
in
pop
push
test
push
cmp
and
xor
ret
mov
sub
rolb
add
push
stos
push
cmp
dec
and
or
ljmp
and
jge
decb
rorl
inc
push
cli
and
aad
scas
in
sbb
pushf
sbb
out
dec
rcrl
insl
sbb
jmp
pop
lock
test
loop
push
mov
imul
imul
mov
outsb
daa
lcall
dec
out
lahf
xchg
movsb
or
mov
movsl
rcll
mov
insl
in
inc
dec
jnp
adc
mov
fsts
and
sub
sub
mov
sub
adc
fiaddl
adcl
fldenv
out
push
inc
push
inc
push
imul
fstps
add
repz
fmull
rcll
and
fdivr
in
mov
jl
inc
and
addr16
popf
pushf
jo
mov
pop
or
xchg
ret
jp
orb
sub
and
arpl
push
dec
inc
inc
popa
pop
push
inc
testl
test
mov
or
cmpl
dec
dec
dec
cmp
cmp
sarl
dec
jecxz
lods
ret
xchg
pop
sar
cmpsb
ret
jl
cwtl
sar
mov
sbb
int
movsb
sti
adc
shl
pop
pop
out
xchg
dec
rorb
pop
xchg
mov
into
xchg
inc
sbb
roll
gs
lock
or
xchg
fisttps
out
push
dec
pusha
mov
and
hlt
mov
ss
insl
repz
mov
sbb
shl
sbb
out
push
cmc
push
int
pop
cmpb
dec
fstpt
inc
jb
push
pop
push
xchg
in
sbb
or
cltd
iret
xchg
dec
js
js
sti
jl
stc
std
and
psllq
mov
push
imul
push
mov
in
pop
add
test
push
push
jle
popl
in
inc
add
mov
xor
jg
pop
cwtl
aas
xor
inc
mov
inc
push
hlt
pushf
cmpsb
xchg
ret
sahf
shl
inc
out
cmpsl
push
xor
cmp
popf
adc
imul
push
inc
cmc
cmp
arpl
rol
imul
cmpsb
lea
jne
xchg
sbb
pop
cmp
jno
adc
loope
push
std
sbb
push
outsb
xlat
ret
jb
test
mov
int3
popfw
xor
cli
mov
push
pop
mov
mov
push
cmp
fisttps
push
cli
mov
mov
push
mov
push
pop
ja
sub
push
imulb
imul
pop
mov
add
or
pop
pop
mov
cld
jmp
int
int3
gs
push
push
pop
cwtl
shlb
insb
and
inc
pop
xor
pop
xor
subl
sbb
notb
jo
scas
jne
filds
andl
insb
mov
lods
int
andl
call
xor
jmp
lds
sti
and
push
data16
mov
fwait
cld
pop
js
cmp
ret
cmp
jecxz
fisttpl
mov
jbe
push
inc
hlt
dec
jl
push
loope
jo
jns
movsl
std
xchg
aad
rcrl
jl
mov
sub
pop
ret
sbb
das
add
out
test
test
add
lds
lcall
js
jp
mov
cmc
ljmp
mov
cmp
dec
in
stc
jp
dec
jmp
aas
xchg
xlat
rclb
movsb
sbb
cwtl
mov
out
stc
pop
stos
xor
xchg
mov
scas
xchg
roll
xchg
xor
js
pop
in
enter
adc
add
mov
mul
es
cltd
mov
aam
out
push
imull
popa
fisttpll
jns
push
or
xor
cmp
push
loope
inc
ljmp
add
das
faddl
cmp
ljmp
push
outsl
xchg
aaa
cmp
scas
cwtl
test
imul
inc
ficompl
out
stos
pop
jno
test
bound
pop
cli
dec
mov
sahf
stc
sub
imul
jecxz
dec
and
decl
sar
enter
mov
ret
shlb
mov
and
lods
lret
mov
daa
rorb
loop
sub
push
push
jmp
add
shl
clc
push
jnp
lock
sub
mov
js
roll
push
mov
push
xchg
shl
sub
xchg
mov
push
mov
cwtl
push
clc
scas
xchg
push
je
loope
xor
push
adc
xor
andl
stc
fdiv
xchg
xchg
das
xor
sbb
data16
cmp
loope
pop
and
popf
push
add
ror
sub
cld
xor
add
adc
fmull
std
adc
sub
call
and
cmpsb
mov
or
mov
sbb
aaa
scas
ficompl
stos
pop
nop
lods
data16
scas
cli
aas
mov
pop
jmp
cmp
and
push
push
mov
mov
aaa
jnp
jno
sbb
mov
jnp
xor
cmp
enter
ret
adc
or
mov
mov
jle
pop
mov
ss
xor
push
dec
loopne
mov
cli
adc
cli
das
outsb
sub
std
mov
inc
fsubrl
sbb
pop
lea
pushf
push
movsl
cmp
fsubs
mov
mov
add
inc
inc
add
in
rorb
insb
ljmp
pop
clc
or
jmp
inc
orb
in
inc
int3
xchg
rcr
leave
imul
mov
enter
clc
std
aaa
inc
mov
jns
jecxz
mov
dec
and
and
pop
gs
mov
push
mov
add
and
out
mov
cmpsl
out
clc
cmp
cmp
and
mov
push
jne
mov
mov
xchg
out
xchg
sub
fwait
mov
lahf
lods
and
divb
or
cmc
lahf
outsb
pop
or
mov
addr16
or
push
add
int
xorl
adc
inc
jle
adc
fbld
push
sti
mov
int
enter
jg
dec
mov
or
push
adc
jg
lcall
mov
in
or
xchg
xchg
sbb
test
mov
sub
pusha
sahf
lock
lds
mov
jnp
call
adc
lods
cmpsl
dec
mov
mov
rolb
aad
jp
insb
in
popf
mov
sbb
push
sub
xor
imul
xchg
popa
lods
mov
add
loope
les
imulb
and
rcrl
rcrl
adc
xchg
push
xchg
loopne
mov
add
cmp
dec
imul
lret
add
push
and
and
lods
es
jae
xchg
fdivrs
nop
add
push
cmp
push
inc
pop
sbb
addr16
sbb
adcb
lahf
cld
add
lret
scas
popf
or
and
xchg
push
mov
mov
pop
out
ljmp
sbb
dec
cld
xor
lods
or
lds
sbb
shll
mov
rolb
lock
pop
fcompl
rol
cmpsl
add
push
adc
lea
sbb
arpl
filds
pop
sub
or
push
aaa
push
andl
pop
add
mov
inc
pop
test
lods
aam
ret
mov
mov
ret
xor
adc
popa
hlt
jge
fnstenv
std
in
cmp
add
sti
adc
jmp
jb
pop
pop
mov
fcmovb
xor
mov
aas
dec
add
dec
rorb
xor
daa
fisubl
xchg
frstor
mov
aas
inc
ss
mov
sub
sub
cld
xor
aas
jbe
mov
out
fldenv
shrl
jp
jl
dec
sub
adc
jbe
inc
inc
ss
in
inc
jg
xchg
fimuls
add
lea
pop
xchg
stc
bound
push
loopne
int3
mov
and
test
jge
outsl
dec
les
cltd
sbb
cli
adc
fists
stos
aad
jge
cld
iret
mov
jne
inc
lods
ficoml
mov
sti
sub
bswap
cmpsl
xchg
mov
mov
cli
sbb
xchg
loop
adc
xor
ss
sbb
cmp
arpl
test
push
inc
sbb
adc
shlb
out
nop
xor
into
fisttpll
repz
jle
xchg
pop
xchg
xchg
je
lahf
xlat
push
inc
out
rcr
lods
movb
imul
sub
fnstenv
test
and
jle
test
push
fs
test
and
insb
mov
cmpsl
pop
push
sub
and
or
fimuls
pop
jp
lea
lods
lret
mov
push
add
pop
testw
inc
fistpl
or
enter
mov
sarb
pop
lds
xchg
adc
pusha
pop
adc
out
jp
sti
xchg
push
cmp
add
xchg
cld
mov
fxch
out
clc
pop
outsl
mov
shl
mov
jecxz
scas
pop
stos
popf
and
shll
shlb
sub
push
les
pop
fisttpll
imul
mov
sti
or
push
lock
xchg
or
dec
in
bound
cmp
jae
and
lea
lcall
iret
imul
aam
ficomps
pusha
cmp
jge
sbb
jno
pushf
xchg
fmull
mov
movsb
pop
or
cmp
dec
sub
cmp
repnz
insb
push
test
ret
push
dec
repz
inc
scas
test
scas
mov
mov
push
scas
sbb
sub
aam
xor
sti
dec
sbb
in
stc
clc
fldl
lcall
sarl
popf
ret
sbb
mov
adc
adc
inc
scas
pop
movsl
aaa
or
mov
mov
cld
add
mov
push
push
ret
test
in
jg
into
loopne
xchg
mov
jae
loop
mov
mov
or
push
jb
lock
mov
arpl
add
clc
lods
inc
pop
mov
stos
in
and
leave
js
cmpsl
xchg
std
mov
cli
mov
inc
push
mov
push
mulb
aad
fs
jg
fldcw
mov
push
nop
pop
ljmp
xor
push
sub
sarb
adc
or
push
lock
jnp
mov
dec
dec
shr
jne
stos
adc
lods
cmc
pop
test
xchg
xchg
jl
mov
aad
sarb
sahf
jl
dec
push
adc
sub
insl
inc
mov
negl
nop
sub
mov
push
mov
adc
cmp
sbb
push
test
dec
inc
mov
and
push
inc
hlt
stc
push
stos
sbb
lea
dec
aaa
xchg
push
cmp
inc
inc
inc
popa
jecxz
ss
jecxz
jg
outsl
dec
xchg
pop
loope
lahf
jge
push
out
cmp
mov
in
outsl
cmp
dec
dec
ret
popa
popa
iret
xchg
mov
inc
mov
repnz
es
repnz
push
fimuls
ja
dec
stos
pop
fs
fsubr
fs
shrl
sub
lea
or
jge
add
xchg
insl
lahf
leave
sub
jne
test
jg
pop
cmpsl
and
dec
int3
sbb
cmp
pop
leave
push
xchg
xlat
imul
fildl
inc
inc
pop
clc
cmp
dec
loope
jg
mov
cmp
jmp
add
pop
and
decb
stc
jl
inc
jns
xchg
cmp
sub
push
adc
cmp
inc
pop
lds
xchg
aad
mov
ljmp
adc
movsl
cmpsl
shr
fldt
xchg
xchg
lods
push
ror
pop
push
jb
cmp
call
popa
movsb
decl
cltd
or
add
gs
data16
dec
into
sahf
xor
cmp
jae
mov
pop
jg
icebp
adc
inc
fwait
and
in
lahf
jp
ffree
popl
cmp
test
lcall
adc
int3
adc
cmp
inc
mov
push
push
sarl
das
and
adc
data16
ficomps
mov
push
push
lret
cmp
in
lods
push
or
clc
mov
pop
adcl
jns
sti
fsubs
popf
sti
js
and
test
add
xchg
dec
cmp
bound
inc
xlat
jbe
xchg
mov
outsb
bound
mov
add
icebp
sbb
mov
jg
lcall
sahf
gs
popf
add
xlat
leave
jge
adcb
mov
stos
xor
mov
out
xchg
addl
jbe
loopne
xor
sbb
xor
nop
repz
xchg
sbb
inc
testl
cmpb
pop
jns
mov
cmp
jge
sbb
mov
push
lcall
cmc
pop
stos
inc
mov
or
je
adc
pop
mov
push
jp
pusha
sbb
bound
jb
push
cmp
arpl
jae
mov
xchg
push
movsb
and
pop
jecxz
jnp
mull
je
jmp
sub
cmp
sbb
movsb
sbb
aad
imul
insl
xchg
dec
and
jle
fnstcw
fldt
mov
repz
lods
cli
mov
jo
movsl
aaa
sahf
outsl
outsl
push
or
sub
jge
add
movsb
push
leave
xchg
push
loope
cli
fwait
ret
movsb
pop
push
jnp
mov
mov
outsl
xchg
pop
push
jmp
dec
pop
mov
rclb
loope
outsb
jns
mov
mov
cmpsb
jge
std
cmp
mov
iret
cmp
sbb
fmul
mov
mov
mov
fldl
aas
popa
inc
mov
dec
aam
add
repz
cmp
loopne
push
cld
xchg
lods
cltd
jg
dec
lods
out
push
mov
inc
rorb
cs
aaa
rcrb
imul
sub
aaa
xor
inc
fiaddl
adc
dec
sbb
inc
and
cld
jno
ss
pop
xchg
fisubrs
sub
push
nop
scas
and
sbb
dec
bound
loopne
push
out
pusha
in
xor
pop
lock
nop
xchg
inc
sahf
lock
mov
adc
fidivrl
mov
das
lods
sub
cmp
sbb
add
data16
mov
ss
inc
sbb
jecxz
xor
push
loope
fiadds
push
fdivrl
dec
notb
or
std
testb
cmp
cmp
mov
lods
call
popf
outsl
add
js
push
inc
enter
push
inc
inc
testb
movsb
adc
ret
pop
lcall
dec
mov
clc
pop
lret
pop
pop
inc
mov
orl
jle
jecxz
test
or
test
test
push
fiaddl
and
dec
jb
xchg
adc
jnp
sbb
push
ret
mov
in
hlt
sbb
jns
ret
stc
std
mov
test
cmc
std
std
sbbl
fcmovnbe
and
dec
xchg
ljmp
iret
mov
cmp
fwait
inc
cmpl
xlat
test
pusha
cmp
mov
inc
pop
lock
push
out
add
sahf
xchg
xlat
push
aaa
addb
cmp
sub
xchg
and
add
orb
sub
pop
ss
cmp
sbb
mov
dec
shll
aaa
dec
into
xlat
push
push
mov
std
in
mov
clc
ja
inc
lcall
mov
mov
push
cmc
stc
xchg
mov
jnp
pop
lods
adcb
hlt
fisubrs
scas
xchg
cli
pop
adc
lret
add
fmull
sbb
inc
cld
loop
cmp
jp
sub
psrld
pusha
nop
xorb
pop
into
dec
pop
xchg
mov
sbb
cmp
sub
add
xchg
mov
jecxz
jg
clc
outsl
repnz
repz
jmp
xchg
jo
out
fsubrs
mov
adc
ret
push
pop
xor
rcll
push
cltd
adc
or
and
inc
push
fidivrl
cld
and
inc
lahf
cli
push
xlat
cmc
repnz
inc
call
out
add
jns
lret
loope
test
pushw
cld
imul
inc
xchg
add
sbb
stos
lret
mov
addr16
fstps
roll
pushf
xchg
and
mov
pusha
arpl
stc
jnp
mov
adc
xor
repz
cmpsl
push
fdivr
push
jmp
imul
pop
push
mov
addr16
data16
pop
movsl
ds
jp
aas
inc
inc
nop
imul
data16
loopne
mov
or
xchg
insb
sub
or
fnsave
loopne
jnp
sub
inc
dec
bound
mov
jge
out
mov
sbb
das
pop
push
lods
stc
ja
fldl2t
pop
ljmp
jb
mov
fdivrl
out
cmpb
sahf
sub
cli
outsl
repz
and
pop
mov
pop
pushf
cmp
mov
push
mov
enter
ljmp
and
ss
pop
mov
mov
outsb
fldcw
jnp
pop
cmp
push
push
cld
cmp
jg
ss
push
push
add
loopne
and
daa
mov
imul
adc
dec
fs
sbb
insl
mov
faddl
arpl
mov
jp
xchg
and
push
lock
inc
int3
sub
push
addr16
mov
stos
ret
add
mov
hlt
and
addr16
cmp
jo
lds
repnz
mov
ret
fwait
rcr
lods
pop
mov
cmp
outsb
dec
ja
sti
cmpsb
sbb
cltd
adc
aas
inc
sbb
mov
mov
imul
rcl
out
movsb
jae
push
inc
add
rorl
xor
iret
dec
xchg
rclb
jg
inc
insl
mov
cmc
add
xchg
fcoms
jae
mov
aas
sbb
adc
stos
sti
jle
push
push
in
push
idivb
mov
push
pop
pop
iret
xchg
push
hlt
nop
insl
pop
flds
mov
or
dec
xor
sub
pop
push
jecxz
shlb
mov
and
sbb
iret
sbb
push
mov
push
test
fwait
je
lock
sbb
xor
sub
sbb
outsl
lock
andl
sti
jo
xchg
mov
push
adc
xor
int3
push
dec
leave
fdivrl
sbb
pushf
call
cs
xor
add
stos
cmc
sbb
test
add
and
xchg
js
ret
mov
xor
ds
call
mov
push
mov
cmpsb
es
add
fcomp
jbe
pop
repz
lods
into
cmpsb
jbe
clc
in
call
mov
push
sbb
xchg
xchg
sub
mov
test
mov
shrl
sub
mov
adc
xor
in
lods
arpl
sub
add
sti
cs
inc
pop
jecxz
mov
xchg
int3
sbb
mov
cmp
out
std
sbb
subb
jns
aad
jo
mov
out
subb
das
popa
mov
nop
jb
cmp
inc
inc
push
or
inc
xchg
xchg
cmp
sarl
inc
mov
loope
lds
rep
pop
mov
loope
fildll
inc
cmpsb
aaa
jns
rorb
arpl
loope
dec
rcrl
enter
lret
ret
cs
bound
mov
in
repnz
pop
add
mov
xchg
shlb
in
sbb
and
outsb
inc
jp
jmp
jge
addr16
mov
add
or
inc
jne
aaa
repz
std
and
fisttps
lods
loop
mov
imul
sbb
fisubrs
or
orb
pop
dec
pop
hlt
lcall
push
xchg
stos
mov
arpl
icebp
outsl
xchg
dec
aam
ficoml
push
aad
adc
push
add
pop
lock
aad
and
or
lods
mov
test
mov
or
pop
inc
stc
test
cmovb
fidivl
dec
es
push
mov
push
push
popa
aas
sbb
shrl
jmp
fistpll
lret
sbb
fnsave
inc
imul
mov
pop
cmp
inc
sub
pushf
xchg
push
cltd
pop
and
stc
mov
pop
iret
cmp
negb
arpl
mov
jae
inc
fldl
xchg
test
adc
paddsb
add
sti
dec
lcall
push
test
fildl
stos
pusha
inc
mov
out
popf
les
movsl
int3
pop
cli
test
push
ret
iret
dec
cmc
mov
enter
xchg
sub
push
and
mov
popf
pop
xor
imul
adc
sbb
fisubrl
es
mov
leave
inc
sarl
jne
clc
xor
dec
mov
fbstp
jecxz
mov
hlt
cmp
adc
jmp
and
add
pusha
ds
or
and
fs
sbb
test
popf
jbe
xlat
push
or
in
mov
inc
nop
std
outsl
dec
dec
mov
daa
gs
mov
xchg
fildl
aam
or
add
cmpl
adc
jecxz
push
divl
mov
push
add
clc
pop
enter
xchg
sbb
cmp
mov
out
mov
gs
orl
sarb
mov
out
int
stc
pop
addr16
hlt
push
scas
jmp
lods
lock
into
js
cmp
lahf
xchg
sbb
fnstsw
dec
and
dec
jne
xor
lock
sbb
dec
jl
orb
sub
insb
jp
loope
bt
sub
push
jno
scas
jno
add
test
xchg
stc
xchg
aas
hlt
pop
mov
dec
andb
or
in
or
mov
mov
or
xchg
jae
or
cmp
lret
sbb
mov
test
and
cmp
pop
add
sbb
mov
int
xchg
test
data16
xor
or
pop
sbb
notb
aaa
jns
mov
lcall
push
xchg
push
push
xchg
aas
jge
leave
mov
cmp
inc
jp
or
pop
or
add
xchg
inc
mov
mov
cmc
dec
dec
leave
imul
loop
xchg
test
jnp
push
push
push
mov
push
les
stc
jae
gs
and
nop
dec
bound
fidivl
xchg
sbb
aas
inc
loope
das
gs
stc
push
adc
inc
dec
mov
cmp
inc
jnp
jg
roll
pushf
and
sub
or
outsl
or
enter
cmp
pop
mov
push
pusha
imul
jp
outsl
je
fcmovne
scas
adcb
cmc
shlb
lods
cmp
sub
cs
sub
pop
call
inc
ljmp
inc
into
in
sbb
xchg
jge
mov
inc
or
pop
iret
sbb
dec
mov
lea
cmp
add
sahf
mov
data16
lret
ds
cmpsb
jne
inc
sti
sarl
int
sbb
mov
push
fdivrs
jno
xor
xchg
cmp
bound
iret
dec
dec
ja
dec
push
int3
xchg
inc
subl
mov
pop
jb
push
adc
mov
nop
dec
aas
repz
or
pop
push
dec
push
addr16
fs
mov
inc
fs
add
or
fisttpl
pop
push
cmove
and
bound
out
popf
in
xchg
fistps
imul
xor
stos
xor
mov
xchg
inc
sbbb
jle
add
inc
divl
fisubrs
push
cmpl
shl
outsl
or
add
pop
or
push
fbld
xlat
lcall
mov
or
sub
les
jecxz
jge
jg
stos
adc
aad
mov
gs
in
out
sub
jmp
and
push
scas
xor
pop
jae
dec
mov
inc
jno
push
data16
data16
es
push
jg
jg
clc
mov
jnp
xor
push
mov
cli
lods
jbe
les
ds
jecxz
push
arpl
push
hlt
mov
mov
out
in
inc
js
pop
mov
inc
xor
xchg
jo
sbbl
js
and
cmc
sub
ja
call
movsl
out
or
or
push
pop
xchg
xchg
inc
fsubrl
andl
mov
test
incb
and
mov
mov
mov
xlat
mov
mov
xchg
shrl
lret
jg
xchg
loope
shlb
push
or
jnp
scas
inc
jae
inc
jle
fwait
push
lea
dec
mov
fidivrl
test
rorl
adc
and
leave
hlt
and
push
dec
mov
gs
in
out
and
adc
pop
in
das
icebp
sbb
adc
rcrb
test
or
scas
out
out
testb
xor
js
pop
fwait
mov
inc
insl
xor
add
push
xchg
std
popa
adc
jg
imul
adc
mull
popa
dec
in
jo
inc
fs
or
shrl
repz
mov
add
inc
mov
pop
out
outsb
sub
pop
mov
jne
subl
ret
or
sti
repnz
mov
inc
dec
pusha
add
push
out
notb
jecxz
pop
inc
adc
add
add
fiadds
add
sbb
or
jg
jg
inc
andb
ret
adc
pop
cli
add
dec
add
jmp
pop
or
xor
test
and
mov
psrld
addr16
nop
dec
push
gs
or
leave
mov
xor
xchg
mov
xchg
mov
cltd
fsub
xor
sbb
clc
dec
out
mov
in
leave
push
adc
movsb
fwait
call
inc
mov
xchg
jb
in
cld
xchg
xor
pop
jecxz
xchg
jecxz
pushf
sbb
lods
mov
add
stc
mov
mov
mov
cs
and
scas
dec
cmc
xor
dec
stos
add
hlt
notl
js,pt
sar
mov
clc
xchg
dec
mov
push
lcall
pop
out
and
frstor
fcomip
jmp
out
jmp
sub
ss
outsb
and
outsb
add
ds
cmpsl
xor
pop
push
and
fiaddl
mov
ror
les
aam
insb
adc
dec
xchg
mov
cmp
pop
sbb
pop
mov
xchg
adc
pop
mov
jp
in
lahf
es
mov
pop
ljmp
clc
sub
lret
lret
adc
or
scas
or
jae
push
imulb
fidivrs
mov
lods
sub
in
aas
xor
add
push
pushf
mov
push
enter
jl
stos
out
sbb
std
and
fildl
mov
add
mov
push
mov
push
test
jno
pop
sub
xchg
xor
pop
pop
push
ret
aas
int3
out
mov
pop
sbb
jb
xchg
fiadds
fadd
ret
push
test
cmp
faddl
jmp
lods
out
pop
mov
fwait
push
hlt
xchg
sub
dec
push
sub
in
mov
push
push
or
fisubl
scas
insl
dec
inc
jl
push
cmp
das
js
loopne
xchg
mov
pusha
test
shl
sub
xor
inc
shlb
popa
pop
jp
cmpsb
lret
dec
jne
clc
xor
kmovb
ljmp
movsl
fs
dec
mov
xchg
cwtl
pusha
push
filds
dec
inc
mov
or
sti
sbb
cmpsb
push
cld
mov
rcrl
mov
sbbl
shrd
popl
pop
mov
mov
sub
jl
and
pop
popl
dec
fnsave
imul
jle
loop
jg
push
sbb
sub
in
enter
sbb
and
pop
mov
dec
inc
mov
xchg
xor
out
mov
pop
pop
rol
xchg
push
push
add
cmc
aad
push
add
fimuls
lret
xchg
test
dec
fwait
sbb
adc
adc
leave
into
sub
mov
push
and
mov
pop
inc
add
mov
stos
movq
iret
mov
cmp
aas
mov
cs
xlat
jne
fdivs
pop
dec
xlat
add
push
sbb
clc
mov
mov
sahf
sub
aas
mov
pop
in
sub
lret
push
pop
mov
inc
iret
pop
fcmovbe
cmp
out
stos
sbb
push
aam
mov
fwait
add
push
mov
push
popf
hlt
test
pushf
sub
fiadds
mov
dec
daa
dec
data16
add
push
test
fistl
push
pop
test
pop
adc
ja
mov
hlt
pop
xor
scas
or
sbb
sti
stos
pop
in
and
mov
ljmp
imul
and
jnp
hlt
dec
rorl
std
lahf
inc
push
xor
or
dec
mov
add
ja
dec
repz
lock
movsl
int3
loope
loope
and
lret
aam
jge
inc
daa
addb
popf
fstl
or
lods
js
cmpsb
dec
fucom
xchg
jp
mov
cmpsb
outsl
mov
loop
sub
cmp
mov
inc
loope
pusha
stc
arpl
mov
or
das
pop
cmc
lds
mov
dec
out
aam
and
mov
int3
into
fisubl
push
lds
xor
ror
enter
cmc
imul
xchg
dec
inc
cmp
punpckhbw
aas
pop
mov
les
mov
fwait
mov
mov
sub
int
in
xor
and
or
dec
push
mov
rcll
jle
dec
fyl2x
inc
arpl
add
hlt
sbbb
subl
sti
pop
int
out
adc
decl
jmp
xchg
aad
add
push
xchg
mov
shrb
repnz
fmul
dec
mov
mov
push
sub
xor
jns
pop
pop
orl
pop
sti
test
addr16
insb
fcoms
dec
xchg
push
js
push
lea
gs
inc
sub
xchg
push
jge
in
insl
imul
fstl
xorb
pusha
mov
sahf
cltd
cmpsb
hlt
jbe
and
in
test
add
js
or
cwtl
or
pushf
shlb
xchg
mov
es
fs
fstp
add
je
ror
jmp
pop
add
addb
cmp
mov
fs
jb
mov
adc
sbb
jg
and
add
xchg
xchg
enter
int3
ljmp
adc
outsb
xchg
sub
es
cmp
repz
mov
out
lret
dec
mov
cli
cmp
xchg
cmp
std
dec
and
in
pop
arpl
add
xchg
imul
cmpsb
mov
and
add
test
mov
xchg
popa
sahf
xchg
es
jae
mov
gs
jns
pop
jmp
sub
sbb
aaa
leave
pop
mov
js
movsl
and
outsl
push
dec
js
pop
mov
bound
xchg
imul
scas
hlt
cmpsl
icebp
nopl
fnstcw
or
inc
outsb
mov
cltd
adc
orl
test
out
bound
mov
les
add
in
xor
shrb
xchg
sub
stos
aaa
mov
stc
sbb
push
std
pop
idivl
aam
scas
adcl
mov
lret
add
jno
mov
insl
shlb
rcrl
shll
inc
test
lahf
je
adc
in
cmp
aaa
dec
orb
icebp
shl
mov
gs
cmc
and
pop
mov
test
sbb
scas
jns
adc
lock
hlt
int
iret
pushf
xchg
in
xor
into
jo
pop
test
xor
or
push
leave
xchg
popf
inc
xlat
test
cwtl
sbb
dec
xor
lea
push
test
dec
xor
push
les
out
leave
bound
push
push
push
or
sbb
lods
ret
ja
stc
fidivrl
inc
fmul
sbbl
test
jle
xor
mov
mov
and
jle
and
sahf
imul
mov
sbbb
or
add
clc
pop
aad
push
mov
lret
sarl
leave
int3
add
xchg
shrl
mov
xchg
cmp
xchg
mov
rcrb
dec
fldt
repz
inc
add
xorl
mov
mov
sub
cld
push
mov
loop
pop
xchg
out
mov
xchg
notb
cmp
mov
mov
dec
pop
rcrl
adc
lea
push
test
dec
jle
mov
jne
arpl
lock
test
lcall
inc
jb
shl
and
ret
jp
inc
xchg
test
cltd
pushf
xor
jmp
les
fsubl
fcom
xchg
add
repz
shlb
fwait
sti
dec
cmpsb
add
adc
lahf
mov
fnsave
ljmp
loopne
xchg
popa
dec
in
and
loope
adc
sbb
and
scas
mov
adc
jnp
ss
xchg
out
in
repz
dec
xor
cltd
adc
mov
clc
xchg
rorl
push
lahf
nop
or
cmpsb
cmp
cmp
lods
mov
iret
xlat
cmpxchg
leave
adc
stos
movsb
in
das
inc
into
push
push
shll
cmp
mov
xchg
pop
push
pop
rcll
cs
mov
ja
mulb
mov
mov
int
cld
sbb
sbb
push
incb
in
fdivl
jne
or
call
sub
in
sbb
sub
push
fidivrs
shrl
test
or
insb
xor
inc
leave
pop
ret
xchg
cmp
and
jp
sbb
enter
loop
dec
test
jns
jne
inc
inc
stc
mov
pop
dec
cmc
dec
aas
add
les
fs
jae
insb
jnp
adc
addr16
inc
inc
pop
jge
push
dec
enter
xor
dec
test
pop
cmp
xchg
out
sub
xchg
mov
add
push
add
lret
and
fcompl
adc
test
cmp
cmc
fwait
dec
mov
outsb
cmp
mov
fidivrs
aad
mov
pop
pop
mov
mov
inc
lret
and
or
mov
imul
adc
push
mov
clc
sbb
in
add
pop
jge
fs
sbb
insl
fistps
iret
push
repz
and
call
add
lret
xor
dec
push
es
sub
add
sbb
cmp
xor
mov
dec
test
mov
jg
pop
and
aam
lcall
or
int3
pop
mull
mov
jo
stos
filds
cmp
mov
ss
mov
int
xor
out
aad
test
lock
xor
into
popa
mov
xor
call
jg
sub
xchg
sub
dec
inc
cmp
lret
push
lret
xchg
movsb
fdiv
lahf
fimull
push
into
or
sub
pop
in
and
imul
mov
or
cmpsb
in
push
hlt
jb,pt
movsl
bound
jns
fists
lret
sbb
rolb
jge
sbb
pushf
pusha
mov
adc
fidivl
jl
hlt
int3
inc
fs
and
ret
mov
cld
outsb
data16
out
jg
mov
dec
push
ljmp
pop
mov
ljmp
aaa
or
test
loopne
ja
adc
mov
andl
jb
incb
sbb
pop
test
repnz
mov
pop
cmp
ljmp
shl
mov
mov
rcl
loopne
popf
pop
xchg
imul
cmp
sbb
subb
mov
mov
outsb
fsubl
adc
dec
rorb
popa
jl
jl
mov
idivb
pop
push
jnp
cmp
int
test
or
lods
xsavec
mov
and
xchg
xor
add
out
jbe
sarl
lods
psubusb
add
sub
mov
pop
inc
out
aaa
ljmp
mov
pop
add
lds
repnz
enter
fistl
mov
ret
lea
mov
call
dec
sbb
inc
mov
sub
mov
mov
cmpsb
addr16
movsb
jmp
mov
xchg
jae
cmp
test
sub
cs
cmpsb
dec
stos
fisubrs
cmp
int
out
sbb
fidivs
loope
mov
or
mov
in
cltd
aad
test
outsb
push
sbb
mov
loope
push
ja
cmp
cltd
inc
sti
dec
scas
mov
cltd
ds
mov
and
in
mov
stos
shll
into
push
clc
cs
das
into
pop
mov
scas
xchg
mov
pop
outsb
and
push
in
jl
pop
inc
daa
mov
mov
pop
pop
lods
xchg
loope
mov
mov
addr16
sub
adc
ret
cmp
or
jbe
fmuls
dec
mov
pushf
out
int
xor
inc
jo
mov
adc
in
xor
jae
jbe
or
push
push
mov
push
inc
mov
jmp
push
xchg
pop
and
mov
std
pop
ja
sbb
push
xchg
or
shll
xchg
aam
imul
test
ret
or
xor
sarb
sbbl
push
sete
mov
jge
imul
inc
mull
in
jne
jnp
or
inc
loop
fmul
push
mov
lock
outsb
sub
aad
or
outsb
lock
cmp
sub
inc
iret
mov
and
xchg
cwtl
jmp
movsl
adc
cli
mov
imul
jge
cmp
sarl
add
scas
sub
xchg
inc
add
push
or
xor
mov
sbb
xchg
movsl
push
adc
xchg
mov
dec
inc
or
inc
cmc
sub
adc
aad
lret
cwtl
xor
xor
repz
call
fidivrl
mov
xor
adc
repz
jo
or
inc
out
test
and
and
push
cmp
mov
mov
cmp
dec
imul
movsl
and
xchg
pop
jle
cltd
out
sub
test
mov
pop
dec
pop
fnstcw
sbb
add
push
pop
lods
aam
xchg
mov
jbe
or
mov
or
roll
or
je
and
jmp
push
sbb
push
inc
sub
in
inc
inc
fsubl
addr16
push
jo
sti
test
loopne
loopne
insb
lock
ja
ss
loope
xor
xchg
mov
sbb
xlat
xchg
cmc
mov
fwait
dec
mov
pushw
stos
jmp
jg
aad
hlt
add
daa
je
clc
inc
mov
pop
mov
loopne
xchg
mov
insl
inc
cmp
mov
add
sub
shr
jb
stc
cmpl
xchg
pop
sub
movsb
test
fmuls
orl
mov
jns
and
cmc
mov
pop
xor
jge
push
xchg
or
lods
mov
xor
fisubrl
mov
movsb
ds
pop
cmp
jno
test
mov
or
fcomps
and
out
inc
xlat
xor
inc
and
nop
adc
mov
push
cmp
lods
imul
pop
pop
je
js
and
int
lret
jmp
into
je
inc
pushf
loop
fadd
jg
sub
rcrb
cmp
jl
cmp
loope
push
push
pop
out
repnz
xchg
scas
shlb
jecxz
add
std
fbstp
mov
nop
or
imul
ret
lods
and
mov
lcall
neg
sti
inc
pop
xchg
push
cmp
hlt
hlt
push
add
mov
test
jmp
add
call
add
jnp
dec
inc
jmp
jns
sub
push
hlt
cli
sub
outsb
sub
jae
aam
and
dec
cli
loopne
in
icebp
xor
das
lock
pop
rclb
pop
inc
gs
lods
mov
psubq
mov
rorb
add
in
mov
idivl
out
jge
dec
or
repz
inc
inc
popf
imul
xor
or
sub
mov
iret
dec
mov
sti
jo
inc
xchg
mov
in
es
mov
push
stos
fsubs
pop
and
adc
jne
lret
ds
cmp
cmp
jg
dec
cmp
ja
rorb
arpl
stos
push
cmpsb
or
push
lahf
cltd
or
repz
outsl
call
mov
test
stos
cmc
adc
scas
nop
xchg
repnz
add
pop
sarb
shrb
in
xchg
hlt
push
enter
pushf
outsb
fisubrs
testb
jae
jmp
mov
fmulp
test
cmp
push
call
push
mov
rorb
and
inc
repnz
dec
cmpsb
outsl
fimuls
arpl
daa
mov
icebp
push
jns
push
les
mov
mov
add
das
loop
mov
std
mov
and
cmp
push
aam
mov
inc
cwtl
cmc
dec
xchg
into
pusha
jb
adc
pop
repz
cltd
std
push
ss
lret
add
xor
fwait
adc
dec
out
dec
ds
incl
stc
in
mov
loop
scas
sub
and
subl
insl
scas
cmpb
movsb
out
int
and
adc
lret
rcr
sahf
jae
test
mov
inc
out
inc
sahf
les
movb
mov
call
push
ret
shr
and
test
xchg
int3
std
mov
jb
pop
cmp
mov
leave
fdivl
pop
addr16
enter
es
repz
ret
mov
push
loop
es
push
cwtl
out
insl
and
insb
inc
mov
dec
xchg
lods
lret
xchg
movsb
dec
addb
inc
stos
dec
hlt
movsl
in
push
sub
push
lcall
mov
mov
pop
iret
dec
dec
into
or
cmc
mov
pop
jmp
cltd
scas
jne
fsubs
jl
pop
xchg
in
fidivl
popa
out
gs
push
mov
xchg
cmpsb
pushf
cld
addb
adc
cs
xchg
pop
sub
dec
ret
loope
jnp
frstor
add
xchg
inc
cmp
pop
mov
cmp
or
fdivs
xchg
inc
jb
pop
out
rcrl
nop
cmpsb
lret
pop
arpl
add
or
paddd
in
sti
jge
pop
xor
xor
pop
js
add
mov
jnp
loope
jle
inc
push
lret
cmp
inc
ja
scas
andl
push
inc
and
data16
data16
cmp
out
sbb
adc
out
jle
xchg
push
lods
fwait
enter
and
addr16
pop
push
int
sbb
sbb
mov
mov
in
fists
mov
loop
test
inc
xor
mov
inc
xchg
test
jmp
sub
jg
cmp
or
add
incb
roll
fsubp
in
shrb
xor
mov
insl
add
cltd
add
in
out
cmp
inc
arpl
sub
cmp
mov
bound
dec
lods
pushf
mov
add
sbbl
cld
clc
cld
ljmp
lock
xchg
gs
mov
mov
dec
add
int3
lahf
mov
nop
lret
add
jae
inc
or
jbe
xchg
push
mov
out
cmc
popf
imul
sbb
test
add
rcl
dec
addr16
lods
incb
bound
dec
imulb
movsb
jae
popa
adc
scas
stos
xchg
popa
repnz
mov
jnp
fs
inc
push
mov
jne
jecxz
sub
pop
xlat
stc
mov
shlb
cmpsl
push
rcrb
orl
jmp
insb
push
or
pushf
xor
xlat
gs
decb
dec
adc
in
ds
aam
out
sbb
sub
enter
in
xor
mov
push
outsb
lea
daa
dec
clc
adc
movl
mov
add
aam
fcomps
ret
add
sahf
dec
push
fdivp
pop
fs
pusha
ffree
or
jge
or
loopne
mov
and
mov
dec
pop
into
dec
and
pop
sub
mov
or
cld
cmpsl
inc
icebp
into
dec
into
dec
into
mov
aad
inc
jbe
pop
sbb
sub
cmc
cs
sub
cmpsl
rcrl
lea
and
mov
mov
cmp
xchg
fdivl
stos
xlat
fstpt
mov
aas
fists
add
inc
xorl
pop
dec
xor
sete
cmc
popf
nop
push
lret
fs
sub
mov
fcmovbe
lcall
mov
lods
push
test
dec
sbb
adc
mov
sbb
aam
cld
out
in
pusha
dec
scas
hlt
sub
mov
fwait
cmp
mov
jae
int3
cs
add
xchg
call
mov
sbb
cmp
sbb
cli
pop
or
add
push
cmp
jnp
out
jae
das
add
sbb
mov
jo
es
out
sbb
inc
mov
in
pop
xchg
inc
js
test
js
data16
sti
out
jge
jo
fs
xor
sub
repz
dec
mov
out
test
into
sub
push
insl
cmpsl
es
add
stos
fdivrp
pop
stos
in
insb
dec
icebp
iret
std
movsb
in
dec
adc
iret
add
or
jl
cmp
test
mov
ds
out
jbe
arpl
test
test
or
jl
fcmove
push
mov
jne
shlb
inc
ficoml
test
xlat
repz
loopne
loop
mov
movhps
gs
add
push
hlt
add
decb
pop
fisubrl
xchg
repnz
adc
movsb
fimuls
leave
daa
inc
in
cmp
popf
inc
mov
or
push
push
add
sti
je
fidivrl
sub
fcoml
jne
dec
dec
dec
mov
nop
les
popa
movsb
cltd
xlat
or
jp
xchg
jno
test
adc
push
jne
shrl
xor
lcall
dec
es
mov
adcb
sub
cmc
shl
sub
inc
in
push
push
and
out
shlb
lods
icebp
aas
fimull
loope
in
cmp
and
outsl
dec
push
ret
mov
movsl
and
lret
xor
dec
cltd
lahf
and
lret
icebp
stc
ss
in
add
in
fwait
push
jmp
xor
test
and
clc
nop
cli
and
sbb
fs
test
add
lods
mov
icebp
mov
xor
ja
clc
or
and
aad
xchg
sub
dec
cwtl
lods
and
xlat
pop
shlb
mov
les
inc
orl
and
orb
lods
sub
call
and
mov
in
add
repz
mov
clc
cmp
sub
aas
scas
out
sahf
jp
sbb
dec
arpl
ljmp
sub
incb
cmpsb
jle
push
or
lods
sbb
inc
imul
jnp
xchg
jne
xchg
fmull
xchg
shlb
or
stc
das
and
dec
jnp
shlb
lret
inc
aaa
sbb
cmp
mov
jne
les
test
pop
dec
neg
push
adc
loopne
data16
inc
packuswb
adc
push
mov
idivb
push
pop
xchg
pushf
test
and
hlt
cli
adc
and
xlat
mov
pusha
fs
sti
out
dec
ret
lods
iret
popa
insb
mov
sahf
divb
fstps
aas
xchg
jg
push
iret
pop
call
std
ret
xchg
add
lock
jge
add
or
pop
mov
lods
scas
call
popf
nop
xchg
in
mov
dec
pop
pop
out
inc
arpl
push
ljmp
jb
jg
pop
push
inc
fiaddl
pop
divb
pushf
mov
call
adc
push
jg
ret
jb
dec
dec
loope
add
mov
aas
fs
lods
xor
adc
adc
jno
jnp
push
fwait
data16
cmp
xchg
lret
dec
ja
mov
call
iret
add
bound
fcomps
dec
mov
jb
jns
std
ret
fsubl
pop
xor
push
imul
orl
jmp
popa
call
jmp
push
jo
and
cmp
mov
xchg
dec
push
aad
addl
hlt
push
aaa
mov
in
inc
or
mov
imul
pop
jnp
in
lods
pop
or
daa
fs
loop
adc
enter
out
push
aas
imul
add
cli
xorb
lods
test
outsb
add
mov
jle
test
dec
xchg
cld
xchg
jle
lods
cwtl
mov
mov
mov
fdivrl
sub
stos
aas
lods
mov
out
mov
add
cmp
aas
mov
adc
add
in
scas
clc
dec
into
test
dec
pop
xchg
push
addr16
out
clc
rcrl
pop
arpl
inc
movd
mov
int
hlt
push
cmp
or
js
adc
imul
sub
out
hlt
mov
push
pusha
push
push
push
pop
sbb
adc
jne
lahf
mov
jnp
shr
dec
add
cmc
fildll
mov
cmpsl
mov
fnstsw
fmull
lret
decl
rorb
pusha
xor
jbe
arpl
pop
mov
addr16
in
dec
cmp
fs
fldcw
or
scas
popf
pop
lret
pop
xchg
pop
jle
or
adc
mov
push
ljmp
pop
aam
inc
jns
loop
pusha
shll
stos
mov
or
add
into
in
roll
add
jne
mov
inc
mov
cmp
scas
rcrl
push
iret
lcall
mov
pop
aam
dec
sti
sbb
les
pusha
pop
inc
in
loop
out
incb
ss
and
fstl
push
leave
jno
or
mov
cmp
out
inc
fisttps
pop
imul
repz
sbb
jns
push
add
and
xchg
inc
ljmp
push
jge
dec
xor
ficomps
rorl
iret
bound
es
pushf
mov
or
pop
js
sub
inc
add
and
mov
lret
cli
mov
iret
adc
mov
mov
mov
xor
scas
mov
daa
ret
or
or
repnz
inc
cmpl
cmp
pop
je
adc
aas
dec
dec
cld
dec
pop
mov
sbb
shrl
andl
lcall
pusha
loope
test
aas
sbb
or
in
test
jae
movsb
pop
push
mov
mov
sub
scas
add
pop
cmp
ja
xor
push
js
jbe
jg
jbe
jo
dec
mov
pop
lahf
adc
test
mov
xor
jns
daa
test
imul
cmp
loop
pop
pop
int
mov
xchg
add
sbb
scas
mull
adc
add
insl
xor
das
nop
mov
out
mov
stos
cs
fbld
mov
jle
cmp
jge
jo
push
sbb
popa
cmc
push
push
inc
mov
inc
insl
cmp
pop
movsl
cmp
ja
fimull
int3
pushf
ficompl
pop
sbb
xchg
mov
int3
je
les
mov
xchg
popa
dec
add
lea
divl
mov
insl
dec
jp
pop
inc
jo
icebp
clc
scas
fsubrs
add
mov
xchg
cmp
lock
mov
dec
sbb
test
jle
add
mov
sbb
lahf
cmp
xor
lods
imul
jmp
push
pop
stc
int
mov
and
mov
add
cmp
cli
int
or
inc
jmp
out
hlt
mov
jne
lock
mov
cmp
popa
test
mov
mov
pop
insb
je,pn
lea
insb
out
and
fcom
jecxz
cmc
mov
add
mov
pop
test
mov
pop
scas
push
push
mov
addr16
mov
mov
or
sar
pop
stc
mov
push
rolb
bound
and
xchg
mov
fdivr
imul
or
adc
sub
test
cmpsb
sbb
stos
jge
cltd
shll
sti
mov
mov
imul
shrl
sbb
hlt
fidivl
or
imul
mov
mov
or
mov
dec
insb
hlt
out
fwait
andw
lds
cmpsl
cmc
pop
adc
lock
and
imul
outsb
rol
adc
and
scas
fdivr
xchg
push
movsb
adc
insl
inc
lea
push
cmpsb
in
inc
xchg
dec
and
fnsave
mov
pop
xchg
xor
movsb
pop
ljmp
or
xorl
inc
subb
sub
jo
push
mov
xor
jg
xor
push
daa
xchg
dec
or
orb
cmc
loope
jecxz
popa
inc
lret
pop
xor
cwtl
pop
scas
add
pop
negb
xchg
jne
scas
push
mov
lods
cmp
aam
push
aaa
and
fildl
pop
test
int
sub
out
out
mov
test
hlt
aaa
adc
loope
loope
jl
adc
dec
add
jbe
test
inc
dec
rcrb
popa
inc
inc
ret
js
xor
mov
inc
push
inc
lahf
lods
sbb
jle
adc
add
or
fistpl
bound
push
or
mov
std
pop
push
xchg
lea
pop
pop
jbe
cwtl
cld
dec
add
mov
rcrl
mov
addr16
and
dec
dec
sub
jl
or
rolb
jb
jbe
lret
push
ret
sub
dec
addr16
je
add
insl
adcb
mov
shlb
adc
or
into
dec
cld
mov
mov
mov
mov
cli
iret
push
insl
cmp
jecxz
hlt
das
stos
push
int
leave
aad
mov
dec
sub
pop
enter
sbb
push
mov
mov
out
movsb
daa
ljmp
loop
adc
mov
jb
jge
jo
rcr
cmpsl
and
xor
or
mov
movsl
push
cmpsb
sbb
mov
jge
shll
and
xor
push
cmp
leave
xor
lret
and
and
arpl
mov
rorb
mov
mov
sub
jns
call
fsts
and
stos
jno
pop
out
cmp
lea
flds
inc
enter
outsb
xor
cli
cld
push
call
xchg
out
loope
and
insl
aad
xchg
test
mov
mov
sbb
dec
push
leave
push
sub
idivb
push
adc
inc
hlt
test
and
movb
ret
pop
mov
leave
push
mov
sahf
rcll
jbe
stc
dec
pop
out
dec
and
mov
mov
sub
cld
fidivs
call
rorb
scas
icebp
jns
int3
mov
mov
dec
or
jle
mov
mov
roll
aaa
add
or
sub
pusha
in
cmp
or
in
popf
aad
pop
push
push
xor
dec
dec
scas
les
fdivr
shlb
jg
adc
mov
push
test
shl
aas
sub
fs
loope
divps
or
lods
xor
icebp
je
mov
push
lods
insl
jl
mov
pop
dec
sub
or
shlb
lods
jb
dec
pop
les
sub
lret
inc
adc
int3
inc
gs
adc
and
adc
das
into
mov
repz
xchg
das
jp
shrb
push
mov
xor
loopne
add
cltd
nop
dec
lret
test
mov
mov
push
out
or
pop
mov
mul
repnz
cmp
pop
or
dec
aas
mov
or
shrl
mov
push
mov
aam
add
test
cmp
int3
loope
and
aad
rcrl
orb
insl
push
add
add
xchg
jmp
roll
jo
repnz
insb
or
sub
add
pop
sub
pop
outsb
pop
jp
mov
andb
daa
mov
dec
jne
das
mov
cltd
ss
adc
bnd
popa
fcompl
push
mov
push
in
pop
xchg
pop
xor
inc
cmp
js
or
jo
xor
out
fxch
loopnew
or
cwtl
pop
sbb
jnp
jge
in
xor
lcall
into
cli
xchg
call
mov
int3
int
xchg
sbb
ret
ja
aam
sbb
int
iret
jmp
lret
insl
jle
incb
sbb
mov
sti
testl
roll
jmp
adc
or
jmp
xchg
and
pusha
les
int3
mov
xchg
xcrypt-ecb
cmpsl
lret
or
sbb
test
mov
test
jecxz
mov
cmp
cmp
xorl
call
in
inc
int3
push
add
test
push
test
xchg
jno
push
pop
shl
cli
shrb
imul
iret
jbe
adc
inc
jg
cmpsl
addb
xchg
or
int3
push
pushf
add
mov
ret
cwtl
dec
xlat
or
pop
adc
inc
mov
imul
out
mov
imul
mov
into
outsl
push
inc
rorb
add
push
jo
mov
jne
out
addl
je
pop
aam
inc
scas
arpl
or
xor
movsl
add
cmpsl
repz
push
subb
out
adc
cmp
sub
jb
es
pop
jne
jl
imul
bound
mov
fbld
cmp
add
sti
addr16
cmpl
sahf
sub
sub
sub
cmc
mov
and
jns
insl
jo
jge
popf
jno
test
and
xor
das
cmp
mov
mov
xor
je
popf
dec
cmpsb
jmp
pop
sbbb
sar
aas
stos
lods
hlt
into
jmp
sbb
cmp
das
push
jno
dec
stc
xchg
icebp
dec
lea
and
xchg
cmpsb
xor
inc
fistl
call
xlat
ljmp
and
loope
lahf
and
out
sub
xor
jnp
outsl
mov
sti
push
aad
fisubl
jne
mov
mov
jo
mov
inc
jno
jl
in
insb
scas
pop
jnp
dec
cmpsb
popw
stos
lcall
cmc
xchg
mov
fs
movsl
dec
lea
repz
test
insb
movd
mov
jecxz
xchg
or
jb
rsqrtps
mov
sbb
cmp
sti
jmp
sbb
cmpsl
pop
fwait
lods
test
pop
js
leave
sti
inc
loopne
mov
xor
iret
cwtl
fisubrl
jl
sbb
cmp
cltd
xor
repz
out
rol
nop
lods
mov
and
je
insb
repnz
jle
in
lcall
sub
xchg
lcall
bnd
repz
push
jecxz
sarl
push
jae
push
sbb
loope
mov
mov
dec
mov
mov
loopne
movsl
mov
in
js
sub
iret
dec
dec
loopne
lds
inc
pop
sbb
push
mov
or
pop
mov
sub
stos
fimull
dec
jne
mov
in
enter
dec
sub
decl
xchg
inc
es
stos
push
push
std
xlat
pop
data16
imul
clc
sub
add
xchg
jno
pop
notl
fidivrs
js
adc
je
pop
lea
jle
sub
out
aam
mov
sarl
repnz
mov
inc
ret
push
les
dec
out
mov
cmc
adc
jns
inc
mov
shlb
ljmp
add
sub
sbb
decl
pop
movsb
addr16
mov
loop
ljmp
cmp
inc
idivl
pop
push
mov
adc
xchg
into
mov
sub
test
mov
inc
sar
in
and
fwait
leave
scas
icebp
jl
mov
pop
push
mov
cmp
inc
rorb
ljmp
mov
pop
sbb
and
cmp
test
call
pusha
rolb
and
arpl
and
jo
test
arpl
test
pop
pop
call
cmp
lahf
jl
mov
push
xorb
xchg
out
inc
mov
inc
test
aas
outsl
and
mov
loope
sbb
jge
out
das
mov
lret
mov
pop
int
lret
pusha
sbbb
jmp
std
adc
push
inc
push
aaa
or
clc
int3
mov
pop
jbe
repz
insl
fstps
gs
push
rolb
insl
sub
scas
xor
or
aam
movsl
push
fildl
jae
mov
jp
jns
adc
push
cmp
dec
je
out
int3
xlat
dec
mov
jne
cmp
mov
add
repnz
or
push
test
lods
xchg
cmp
xor
inc
mov
das
stos
cmp
adc
lea
cltd
jae
daa
mov
aam
je
dec
cs
cmpsb
lcall
leave
cld
sbb
and
inc
leave
push
ja
push
shll
pop
dec
mov
lea
push
pop
lret
sti
fistpll
xchg
outsl
add
shl
ficompl
push
dec
lret
mov
push
ja
sbb
sbb
lcall
out
fcoml
jl
cmpsl
or
in
ds
cwtl
clc
hlt
jo
inc
dec
jb
jecxz
cmp
and
inc
dec
and
je
ds
dec
xchg
inc
add
jnp
out
mov
int3
sbb
sub
movsl
xchg
outsl
mov
jp
dec
sub
mov
cli
cmpsb
xchg
mov
pushl
pop
mov
sbb
in
dec
in
out
pop
xchg
mov
push
ja
imul
or
shll
sub
cwtl
shrb
cmp
add
dec
adc
fs
lods
movsb
sub
dec
icebp
push
movsl
cmp
add
aad
movsl
mov
shl
into
push
jmp
and
cmp
out
pop
loope
cmp
mulb
loop
outsb
pop
lret
push
imul
sbb
mov
int3
fadds
imull
and
pop
jb
xchg
pop
push
cmp
add
xor
jecxz
pop
cmp
mov
or
cmp
lret
or
or
xchg
adc
push
mov
hlt
in
daa
and
pop
xchg
and
push
xlat
lea
adc
and
xor
mov
arpl
push
fdivrp
cmpsl
and
fsubs
xchg
jg
pusha
mov
mov
insl
xor
inc
mov
outsb
rolb
mov
push
je
dec
int3
jns
fnstsw
adc
push
and
cmp
repnz
loopne
push
popf
xorl
ss
shrb
pop
adc
cmp
jg
sub
add
dec
test
cmp
jns
sub
adc
and
into
into
sbb
mov
ret
xchg
push
add
lret
fimull
jp
ficoml
jge
or
fstpl
sub
add
les
out
mov
sbb
jns
mov
in
mov
jae
lock
cmp
loope
ret
rclb
sub
and
or
fsubs
mov
aas
fimuls
lods
mov
int3
loop
mov
sbb
xor
sub
js
sahf
data16
inc
imul
adc
dec
xor
test
and
outsl
fwait
imul
add
pop
mov
out
loope
cmp
in
adc
arpl
dec
hlt
cmpl
inc
inc
dec
xor
push
xor
in
dec
mov
jae
stos
int
lret
add
xchg
xchg
fdiv
inc
mov
out
adc
test
in
iret
das
sub
or
add
mov
add
add
push
jb
popa
sub
cs
pop
sbb
fists
loope
daa
cmp
bound
jb
hlt
mov
mov
sbbl
inc
pop
stos
jnp
or
mov
cli
sbb
mov
lods
dec
lock
jp
mov
pusha
dec
mov
jp
lock
lods
sarl
fmuls
sti
sbb
enter
dec
add
xchg
loop
fdivrl
mov
aad
xlat
mov
xor
jnp
xor
sub
inc
aam
gs
jle
or
mov
je
sub
add
mov
xor
divl
sub
fmul
inc
outsl
xchg
mov
adc
jns
push
inc
and
mov
inc
mov
popa
sbb
sub
adc
pop
sbb
push
jl
jo
and
hlt
stc
cmp
scas
clc
and
nop
lret
sbb
lock
dec
adc
lret
sbb
shl
pop
out
jmp
movsb
mov
fsts
jmp
push
fnsave
jmp
rorb
adc
cmpsl
test
xchg
leave
mov
jo
inc
dec
cmpsl
loop
adc
es
jmp
leave
inc
and
test
jae
mov
insb
xor
jae
pop
js
mov
sbb
imul
sbb
or
adc
in
push
jb
cwtl
xlat
je
hlt
mov
add
xor
arpl
or
fisubrl
sub
cs
push
mov
ds
or
cmp
out
cmp
ret
in
nop
sarb
jge
push
and
jns
stc
push
pop
fwait
pop
add
js
add
xlat
mov
push
and
and
loop
adc
mov
repz
sub
push
lods
xchg
into
lcall
and
ja
add
dec
add
addr16
sbb
push
adc
add
pop
mov
lds
dec
mov
sti
out
shl
mov
xchg
in
mov
pop
aam
push
xor
and
jmp
cld
xchg
push
js
sbb
and
push
mulb
iret
add
jmp
jl
jg
sub
inc
sub
fs
sbb
cmp
pusha
nop
jo
stos
pop
dec
out
das
add
jns
jne
mov
or
add
and
mov
inc
negl
out
or
decb
insl
aam
js
xlat
cmpl
push
cwtl
int
arpl
jge
fnstcw
add
hlt
sub
push
mov
jle
mov
xchg
push
sbb
adc
aaa
sarb
lcall
push
repnz
mov
repnz
push
add
mov
push
adc
jae
ret
and
mov
jo
add
je
loopne
and
xchg
pop
mov
test
int
cld
xor
lods
pop
mov
dec
mov
enter
inc
push
test
push
mov
aam
add
push
or
outsl
pop
leave
in
push
mov
mov
into
sbb
scas
ljmp
aam
cmpsl
inc
or
hlt
or
mov
movsb
cmpsl
xor
xor
into
jmp
lcall
repz
pop
jge
aaa
imul
mov
fs
fwait
add
in
je
sbb
mov
out
xor
cmp
mov
cmp
loop
pop
lret
mov
add
lahf
stc
cmpsl
daa
pop
std
xor
loop
bswap
and
pop
adc
or
mov
lcall
dec
pop
cwtl
insl
cmp
mov
cld
mov
mov
cmpsb
sbb
jl
pushf
ret
ljmp
mov
pop
mov
aad
xchg
and
inc
pop
cwtl
mov
jge
cmc
push
popf
fidivrl
inc
in
mov
cli
scas
pop
pop
pop
xor
clc
sub
ret
cmc
js
push
dec
mov
cwtl
add
mov
sarl
push
ss
mov
push
sub
add
cs
mov
scas
and
sub
pop
inc
cmp
push
mov
ss
fwait
dec
xchg
mov
sub
fmuls
pusha
or
loop
ret
out
and
enter
aam
xlat
pop
ds
fucom
push
jb
jg
add
pop
push
hlt
xchg
ja
mov
loopne
push
jo
imul
outsl
add
nop
scas
gs
jp
mov
cmp
pop
outsl
iret
adc
int
sub
in
lock
sbb
xchg
xchg
xor
cmovs
add
int3
dec
repz
pusha
cmpsl
dec
mov
mov
mov
jp
xchg
es
cmpsl
jmp
mov
push
or
outsl
movsl
stc
leave
sbb
jmp
mov
mov
jnp
out
aaa
pop
int3
inc
lods
sub
js
add
inc
outsb
jno
lret
cmp
addb
mov
add
mov
pushf
movsb
push
xor
daa
or
in
sub
adc
popa
es
gs
mov
notb
ja
mov
fstl
fidivrs
jle
cld
xchg
and
mov
or
fcmovnu
jecxz
ljmp
std
enter
xor
dec
pushf
mov
cmp
xor
jg
mov
mov
rcrl
cmp
pop
and
rcrl
xorl
or
rol
jle
jnp
test
or
mov
rorl
cmpsb
cmp
xchg
jbe
jmp
arpl
cmp
inc
outsb
jmp
stos
rcrb
pop
or
iret
pop
cltd
mov
cmp
and
imulb
iret
mov
cs
xor
xor
mov
adc
adc
mov
xchg
loope
jge
pop
sahf
sbb
pusha
push
mov
daa
fidivrs
dec
xchg
adc
cld
repz
jg
imul
xchg
cltd
mov
pop
les
insl
js
mov
cmp
or
mov
in
repz
fsubl
add
js
pop
negb
cs
xchg
sbb
and
subl
cwtl
scas
mov
orb
mov
insb
xchg
xchg
fadd
push
inc
test
jo
out
jno
les
dec
inc
sbb
sub
aad
fisubrs
pop
jo
pop
sub
outsl
dec
arpl
fsts
push
jp
clc
dec
inc
into
dec
add
dec
fwait
aam
xchg
mov
mov
inc
imulb
xchg
dec
inc
and
mov
pusha
mov
out
test
sbbl
push
jp
in
sbb
inc
mov
mov
popf
pop
sub
mov
rorb
pop
pop
lret
call
popa
icebp
cmp
dec
sub
hlt
in
inc
cmp
sub
outsl
nop
pop
fisubs
inc
adc
sub
jg
ret
add
movsb
cltd
inc
lret
addr16
mov
push
pop
stos
add
loop
dec
mov
pop
mov
arpl
enter
aad
ret
out
ja
jp
out
push
cmpsb
popa
int3
ds
and
rclb
test
fwait
and
mov
dec
ljmp
popa
inc
mov
jnp
mov
mov
push
xchg
scas
jmp
lods
sub
add
imul
out
sub
pop
lods
ret
in
fwait
lock
fists
scas
ret
fcmovbe
xchg
les
out
lea
fsubrs
lods
mov
sub
imul
fimull
pop
loope
aas
and
adc
mov
xor
xor
xchg
cmp
lret
jl
xchg
dec
addl
push
cmp
add
inc
or
in
xchg
sbb
add
mov
mov
inc
std
mov
je
movsb
pop
xor
or
movsl
cmp
jl
jp
rolb
mov
sbb
push
mov
adc
and
ja
pop
int3
aad
jb
jns
pop
movsl
repz
ror
xor
sbb
dec
mov
inc
mov
push
sbb
add
dec
int
pop
sti
jecxz
push
xlat
and
adc
leave
pop
das
lcall
repnz
iret
pushf
movsb
push
popa
stos
inc
cmpsl
shld
mov
push
les
les
ret
fistpl
inc
imul
push
dec
repz
and
mov
xor
divb
pop
xchg
ss
cwtl
arpl
vmread
ret
pop
inc
xchg
ljmp
std
fadds
cmovo
mov
addr16
lret
dec
jo
sbb
push
lods
mov
jecxz
cmp
sbb
cmp
add
lret
pop
aaa
test
rcrb
add
lods
call
and
scas
inc
cmc
fs
cmc
jns
xlat
adc
outsl
out
hlt
stos
lods
scas
xchg
or
mov
cwtl
inc
dec
mov
mov
lcall
ljmp
mov
lahf
mov
outsl
xor
push
mov
jbe
pop
das
push
stos
sbb
cli
scas
int
jge
in
pop
arpl
inc
push
mov
jecxz
lahf
lcall
push
and
pop
icebp
sbb
and
stc
pusha
xor
inc
mov
in
mov
sbb
mov
cltd
cmp
cli
push
mov
push
push
adc
lret
lahf
jecxz
stc
outsb
or
testb
cld
cmp
mov
fadds
jo
push
push
push
popa
popf
adc
jl
clc
pop
dec
sbb
stos
lcall
outsl
fdivl
fpatan
xlat
scas
dec
idivb
repnz
xchg
insl
je
mov
shll
add
jns
mov
or
test
outsb
xchg
xor
inc
fiadds
fmull
rcrl
js
sub
and
ljmp
or
jnp
sub
cmp
or
loopne
mov
jp
push
adc
inc
inc
xor
or
pop
sub
stos
add
pop
scas
repnz
test
mov
adc
icebp
test
add
xchg
fdivrs
lcall
lds
pushf
add
xchg
hlt
dec
mov
adc
test
lahf
pop
mov
sbb
add
aad
push
test
scas
bound
out
xor
lea
and
aas
inc
fwait
insl
add
imul
cli
std
out
xchg
pop
or
ss
xchg
push
sub
sbb
adc
lods
aam
sub
mov
push
pop
xchg
mov
das
push
xchg
les
aas
test
jecxz
aaa
xor
movsl
cmp
pop
mov
cmp
or
pop
xchg
xbegin
lods
int
jb
mov
xorb
xlat
pusha
pop
std
icebp
sbb
cltd
fsubrl
and
call
mov
mov
adc
xchg
shrb
lds
leave
lret
pop
cmp
dec
inc
mov
or
shll
xchg
mov
pop
pop
mov
jbe
cmp
sub
lods
sbb
cltd
test
push
jg
rcl
sub
icebp
xchg
repnz
xor
mov
jno
loope
fsubr
push
cs
sbb
nop
jle
push
arpl
mov
push
adc
lret
jne
jo
sub
pop
or
mov
cmpsb
je,pt
adc
sahf
aam
lret
jle
jns
sub
fsubl
inc
and
test
cmp
jnp
popa
jle
add
fcmovbe
roll
push
mov
push
sbbl
sbbb
repz
mov
std
or
and
push
dec
mov
orb
push
aas
lahf
into
xchg
inc
sub
js
or
push
xor
lock
xchg
dec
inc
das
xchg
add
xchg
loop
fisttpll
mov
movsb
or
pushf
addr16
or
mov
sbbb
sub
cld
inc
stos
je
jbe
das
lds
dec
divl
pop
xor
aas
cltd
pop
mov
inc
adc
mov
xchg
in
lock
cmpsb
add
push
jb
clc
jge
in
adcb
xor
cs
outsb
in
imul
enter
sbbl
mov
dec
popa
addr16
movsb
jmp
inc
and
arpl
outsb
outsb
jne
fidivrs
adc
and
lret
xchg
xor
stos
jnp
add
imulb
mov
cmp
and
jbe
aas
clc
push
inc
xor
lahf
and
inc
insl
repz
mov
int3
inc
jb
pop
leave
push
xorl
cmp
fldcw
dec
jecxz
ret
mov
stos
mov
mov
int3
sbb
repnz
jb
sub
push
test
mov
filds
mov
add
cmp
rol
inc
adc
jbe
inc
cli
and
mov
daa
xchg
mov
push
sbb
stc
mov
add
shlb
cmp
mov
scas
xor
jle
or
sub
cmpb
adc
dec
push
arpl
aas
scas
fucomp
dec
aam
pop
shrb
mov
test
xchg
in
test
test
sbb
cmp
out
cmp
scas
fmuls
mov
js
notl
sar
movsb
shr
add
push
push
shlb
sbb
inc
mov
or
es
adc
in
and
adc
imulb
push
out
andb
lods
sbb
cmpsl
stos
cmp
sub
ljmp
hlt
dec
movsb
incl
iret
mov
data16
lahf
enter
adc
in
insl
movsl
sub
pop
adc
mov
call
cmp
xor
shll
cmpsb
call
gs
and
arpl
sahf
insb
dec
add
mov
cltd
pop
adc
popf
insb
loop
inc
in
lcall
pushf
in
ror
jp
jl
fdivrs
mov
mov
cmp
xor
shll
mov
mov
hlt
ret
cmpsl
aaa
lock
mov
adc
inc
bound
arpl
shlb
iret
scas
mov
xor
cmpsl
xchg
clc
mov
pop
sub
das
xchg
push
cld
test
mov
insb
fwait
sub
pop
xchg
cmp
out
inc
into
xor
add
jbe
adc
loop
sbb
mov
ja
enter
pop
scas
int3
mov
sbb
pop
xchg
lods
or
mov
imul
mov
fbld
xchg
sti
imul
adc
mov
pop
pop
xchg
push
cmpsb
pusha
sub
fdivrs
sub
ljmp
add
xlat
lret
idivl
sub
inc
or
xor
ljmp
push
push
lea
adc
cs
adcl
xchg
insb
popa
cmp
popa
mov
sahf
mov
out
stos
scas
and
jl
add
aad
adc
dec
inc
js
icebp
push
xlat
out
addr16
int
pop
jb
lret
xchg
dec
cmpsl
cmp
outsl
rorb
xor
inc
les
test
jne
mov
pop
push
cmpsl
cmp
cli
cld
ret
insl
jae
mov
inc
push
and
cld
roll
aam
push
mov
out
dec
std
add
or
jge
ret
mov
xor
mov
outsb
adc
inc
inc
popa
xchg
mov
push
stc
ds
mov
sbb
push
clc
sub
int3
popa
clc
cwtl
cmc
out
int
adc
movsl
lea
das
rorb
push
test
or
jmp
sbb
subb
insl
es
arpl
adc
rcrl
and
dec
lods
or
jg
lods
test
push
mov
push
mov
in
clc
inc
or
push
fs
pop
call
lret
test
add
jns
dec
pop
arpl
mov
mov
clc
sti
mov
andb
popf
adc
adc
or
mov
out
sbb
lock
icebp
shl
dec
mov
mov
insl
jge
popa
xor
cmp
sti
gs
push
jmp
mov
xchg
aaa
outsb
mov
and
std
aam
dec
pop
nop
adc
test
xchg
jg
insl
mov
push
fdivrl
push
sti
inc
lret
in
sbb
jnp
jmp
popa
arpl
inc
push
xchg
movsb
pop
sub
dec
sub
add
int3
or
leave
outsl
rol
dec
repz
jmp
ret
mov
mov
cmpsb
mov
and
mov
pop
les
and
popa
mov
or
mov
push
lcall
dec
rcrb
cmp
in
add
ja
lret
fwait
jmp
mov
jl
sti
scas
jo
imul
and
loope
and
push
jne,pn
mov
adc
mov
jns
lods
jnp,pt
scas
mov
fnstcw
push
sbb
push
test
jb
fcmove
push
scas
pop
sub
in
repnz
sub
sahf
adc
pop
fs
mov
fcmovb
jo
insl
jne
outsb
testl
pushf
and
pop
test
adc
mov
lock
and
and
xchg
iret
jg
dec
lock
outsl
dec
and
add
xlat
fwait
sub
rcr
push
ja
push
cmpsb
movsl
jne
andl
imul
cmp
lret
and
cmp
adc
ja
popl
inc
fnstsw
inc
imul
nop
pop
adc
mov
sbb
pop
mov
repz
ja
pop
lock
jge
pop
xor
jecxz
and
lret
cmp
adc
ljmp
sbb
clc
add
call
mov
ljmp
and
int3
loop
cli
enter
push
jp
movsb
movsl
shlb
mov
insl
lahf
dec
test
adc
ss
iret
jmp
jmp
xchg
and
fistpll
cld
jmp
fildll
mov
xchg
mov
inc
test
aad
xchg
inc
push
adc
jno
push
jg
cmp
jnp
pop
subb
out
cmp
xchg
sub
out
test
mov
adc
push
mov
lahf
sub
add
sbb
adc
lds
xor
mov
push
lock
fwait
pop
aas
push
push
inc
int3
sbb
imul
mov
xor
sub
xchg
xchg
mov
mov
std
fidivrl
xchg
cli
mov
mov
mov
into
andb
sbb
and
in
in
fcomi
pop
ljmp
loope
and
aas
out
fidivrs
dec
or
fstpl
xchg
jmp
pop
out
mov
mov
inc
call
fdivl
fidivrs
ret
dec
or
test
xchg
gs
dec
add
add
push
jl
fistl
stos
into
insl
mov
shll
push
pop
sub
add
mov
cmp
les
pop
popf
inc
shr
jne
idivl
xor
add
shlb
sarl
sub
fldcw
inc
inc
xor
out
jge
push
imul
cwtl
js
mov
mov
movsb
add
outsl
or
mov
sub
dec
shl
aaa
adc
std
or
outsl
cltd
in
jne
cmpsl
repnz
sti
cld
push
stos
imul
lret
popl
ljmp
sub
jecxz
inc
xchg
lea
jecxz
or
inc
fs
inc
sub
pop
pop
aad
mov
or
jns
outsl
push
pop
fiadds
cld
imul
cmc
rcrl
mov
jge
sub
ds
sub
adc
mov
hlt
incl
scas
jns
aaa
ret
xlat
jge
mov
pop
insl
repz
add
sub
in
enter
daa
dec
sti
ss
lods
out
rol
lods
mov
and
cli
mov
in
into
mov
jmp
pop
dec
adc
dec
mov
into
ud1
jb
data16
ds
adc
or
inc
jo
mov
cmpb
ss
mov
xor
inc
ret
das
in
imul
test
push
mov
js
fldcw
out
aas
mov
lret
add
sbb
popa
cs
sub
or
adc
mov
insl
clc
sbb
add
jns
lea
jae
rcr
dec
mov
sahf
insb
call
sub
idivb
sti
mov
adcl
mov
cmp
mov
xchg
push
add
lock
jns
push
and
insl
rorl
jae
das
cli
cmpsl
sub
fwait
cld
mov
jb
pop
push
fs
test
int
in
and
shlb
push
outsb
popf
push
in
mov
loope
leave
push
sbb
test
das
add
lretw
sub
bound
mov
mov
iret
stos
adc
cmpsl
je
repz
cmc
lcall
lahf
mov
icebp
or
push
das
inc
cld
repnz
sbb
fidivrs
push
mov
mov
shrb
mov
popf
leave
xor
adc
mov
pop
jecxz
xlat
cs
out
in
test
adc
hlt
inc
cld
jmp
add
repz
xchg
or
out
inc
cmp
cli
xchg
scas
in
adc
mov
jg
sub
enter
pusha
test
dec
xchg
push
push
mov
scas
sub
xlat
call
in
out
arpl
movsl
jae
fisttps
xchg
jo
out
mov
nop
mov
aas
pop
dec
rcr
cmpsl
addl
jecxz
ds
out
mov
jg
cwtl
pop
mov
leave
mov
sub
in
jno
inc
dec
xchg
ficoml
sar
adc
into
ja
dec
in
mov
xchg
sbb
shr
lret
cmp
and
mov
adc
sub
xchg
loopne
push
std
xor
dec
dec
cmp
fnstcw
int3
mov
sub
jmp
inc
push
jp
cwtl
mov
das
or
and
dec
lds
outsb
xchg
cmpsl
and
lret
imul
xor
cltd
and
daa
call
mov
arpl
std
jmp
movsl
pop
pusha
jmp
pop
lret
loopne
and
out
je
inc
push
pop
in
ficompl
and
sbb
jg
sub
and
adc
dec
mov
mov
mov
inc
movsb
xchg
div
lock
sbb
testb
stc
lea
inc
test
das
scas
mov
popa
xchg
out
shl
jge
jmp
data16
sti
ds
icebp
andb
ret
sub
daa
mov
aam
xor
inc
imul
les
inc
jbe
in
repz
mov
stos
out
jne
and
adc
es
imul
mov
icebp
sbbb
xchg
pop
notl
or
fbstp
pop
dec
mov
into
dec
push
ret
fsubrs
popf
sbb
jle
nop
xchg
xlat
adcl
xor
stos
or
push
test
sub
and
insb
lea
imul
mov
push
iret
adcl
pop
cmp
cmpsl
rcrb
and
xchg
fisttpl
cs
or
fwait
subl
fs
pop
scas
adc
cmp
lret
xchg
mov
mov
mov
int
aam
out
cmp
cmp
lods
adc
jcxz
stc
and
inc
dec
insb
stos
cmp
imul
jle
cmp
dec
bswap
mov
sub
call
push
sub
mov
jns
addr16
bound
or
push
mov
popa
jae
push
ret
mov
jb
xchg
hlt
in
int3
add
inc
jo
and
stos
rcrb
xor
and
mov
pop
jb
adc
xchg
cmp
pusha
sub
xlat
lea
outsl
test
adc
dec
ret
xor
pop
mov
pop
adc
mov
out
and
fsubr
dec
dec
adc
xor
rcr
dec
rcrb
loop
dec
xor
movsb
orb
xchg
cmp
lcall
ljmp
andb
test
jb
xor
adc
jno
fstpt
jge
loope
lahf
movsl
mov
xchg
ret
cli
lret
jbe
sbb
xchg
mov
push
mov
jb
ret
xchg
mov
cmpsb
mov
bound
pop
fcmovnb
mov
aaa
std
push
lock
add
xchg
push
jbe
lahf
mov
jecxz
in
and
jl
or
pop
xchg
repz
and
mov
xchg
xchg
add
add
iret
jmp
dec
push
mov
add
mov
scas
outsl
or
jmp
xchg
xor
lods
mov
jno
dec
mov
rcrl
jecxz
js
add
mov
cli
call
xor
mov
daa
insl
ljmp
cli
xchg
and
adc
test
push
push
lret
mov
mov
cli
ljmp
jae
arpl
fsubs
stos
cld
mov
mov
cmp
cmp
add
iret
push
lods
pop
repnz
dec
jecxz
cmp
push
movsl
xor
and
mov
outsl
xor
sbb
sub
jo
in
in
or
sarb
je
dec
mov
mov
adc
mov
adc
mov
push
xchg
lahf
ss
lods
mov
lcall
aam
in
push
jb
jae
mov
andl
mov
das
push
add
sub
sub
in
xchg
sbb
in
jp
or
push
loopne
insb
jbe
cmpsb
mov
pop
dec
adc
ss
cmp
addr16
aad
mov
stc
push
xchg
xor
pop
mov
test
das
iret
ja
sbb
xchg
sbb
xchg
fists
jp
fisttpl
pop
jp
push
push
cmpsl
mov
les
insb
push
mov
xor
mov
mov
xor
call
xor
or
insb
mov
sbb
ljmp
fwait
push
mov
adc
addr16
int3
addr16
icebp
sbb
js
dec
mov
adc
pushf
xchg
push
lahf
mov
mov
mov
cli
cmp
lret
adc
mov
jg
xchg
pusha
fcmove
add
mov
rcll
mov
imul
movsb
in
int
xchg
arpl
cmp
adc
or
hlt
mov
outsb
popl
pop
sbbb
jmp
and
add
loop
pop
bound
add
jns
and
arpl
mov
into
mov
aam
mov
mov
adc
push
ret
push
add
sbb
out
movl
fwait
rcrl
xchg
sub
fsts
imul
xchg
inc
jae
adc
xlat
pushf
cmc
pusha
push
stos
mul
inc
inc
mov
adc
mov
mov
ret
jbe
sarb
xchg
iret
rol
cmpsb
xchg
jae
lea
outsl
and
push
iret
jo
stos
inc
adc
push
stos
xchg
jne
xchg
cmp
rol
ret
mov
xor
dec
dec
sbb
mov
add
iret
push
cwtl
push
imul
xchg
push
xor
or
mov
xchg
nop
std
pop
or
in
cmpsl
fiadds
lea
xlat
cmp
add
aas
sti
mov
jmp
sub
lcall
mov
movsb
mov
jnp
adc
out
addr16
and
aad
jno
sbb
jns
lods
cltd
bswap
mov
xchg
xchg
mov
repnz
push
scas
xor
mov
shl
movsl
mov
std
mov
outsb
xor
pop
mov
jae
pop
pop
mov
insb
pushf
mov
mov
cld
stos
add
sub
push
mov
ss
xor
and
sbb
mov
or
stos
or
mov
js
push
mov
dec
mov
sub
dec
lock
sub
fisubrs
repnz
xlat
sti
test
adc
sub
add
cli
jp
add
pop
cltd
fildll
loope
pop
lcall
mov
jb
dec
sbb
or
iret
jp
mov
cwtl
and
inc
mov
sbb
lea
lret
xchg
xchg
aam
addb
cltd
dec
ret
nop
lods
pop
mov
cmpb
adc
jno
into
pop
push
jne
pop
out
or
cmp
mov
lds
int3
ljmp
popa
shlb
adc
in
dec
popf
mov
fists
ja
mov
adc
pop
push
mov
push
jg
add
adc
add
xcrypt-ofb
cmpsl
ljmp
mov
lret
cmp
cwtl
sub
inc
sub
fsubrs
pop
dec
pop
and
loopne
outsb
imull
pushf
cmp
mov
pop
mov
xchg
push
mov
mov
aaa
adc
aas
aas
dec
xor
cmpsl
ja
test
xor
loop
xchg
add
inc
sti
popa
push
xor
jmp
imul
inc
std
ds
xchg
or
xor
and
repnz
inc
inc
aaa
jmp
add
sti
push
and
movsb
xchg
jecxz
in
jg
daa
ret
add
sahf
xor
inc
stc
lea
test
push
or
fildl
jns
inc
lods
out
xor
xchg
xlat
mov
sub
out
divb
mov
nop
mov
subb
dec
fmuls
test
jmp
mov
mov
stos
jecxz
jmp
add
mov
ficomps
out
std
push
in
test
insl
fnsave
aaa
sbb
aas
sbb
movsl
xor
movsb
aas
sub
pop
inc
fdivrs
jnp
fadds
push
jb
neg
mov
sub
jge
mov
lods
fwait
jne
or
shrb
xchg
sub
scas
test
mov
cmp
lods
sub
imul
add
shlb
insb
xchg
inc
pop
mov
add
dec
imull
mov
xor
movl
xlat
mov
fmulp
pushf
push
not
xor
xchg
mov
dec
cmp
sbb
cmpsb
and
jp
pop
push
jo
or
aaa
jecxz
negl
pop
aad
out
flds
push
pushf
pop
push
push
or
divl
scas
sub
aad
dec
mov
and
mov
shrb
push
jge
stos
xchg
add
push
shl
test
push
mov
lods
insl
sub
popf
sbb
dec
outsb
push
arpl
sahf
add
rol
lods
mov
lret
hlt
cmp
loopne
movsb
les
jnp
push
cli
push
fisubrl
push
call
hlt
jle
in
and
mov
fimuls
shl
ss
movsl
cmp
push
fsub
enter
sbb
ds
nop
mov
ljmp
std
mov
dec
cwtl
mov
mov
mov
int3
gs
imul
stos
hlt
popa
jle
cmp
fwait
addr16
imul
lcall
push
push
popa
xor
mov
sub
jmp
or
jl
test
cs
pop
and
dec
dec
clc
xchg
mov
jo
push
adc
mov
mov
sub
leave
sbb
mov
stos
sub
push
cmc
mov
mov
mov
mov
out
inc
sarl
mov
out
mov
pop
hlt
addr16
jb
jnp
sub
clc
or
mul
xchg
mov
sbb
es
jg
test
xchg
sbb
push
popf
adc
mov
cmp
loopne
cmpb
aad
and
dec
push
out
rorb
out
pop
ljmp
jle
cmp
aas
jbe
in
jl
jge
pop
stos
lods
xchg
ret
jmp
adc
pop
mov
cmpl
mov
lcall
inc
std
xchg
mov
sahf
jae
dec
repz
lock
jg
dec
dec
lcall
push
fs
push
out
inc
cltd
push
cmpsl
dec
jmp
loopne
bound
xor
loopne
lods
add
loop
out
scas
addr16
loope
sbb
push
pop
adc
cmp
ficompl
add
pop
inc
ja
mov
xchg
insl
mov
jecxz
cmp
clc
add
pop
sub
iret
adc
fisubrs
jmp
int3
in
or
fldenv
arpl
arpl
xchg
cli
pop
call
sbb
xchg
notb
nop
and
jp
adc
xchg
jl
pop
push
out
dec
scas
sub
popa
in
test
add
add
sub
popf
inc
sar
inc
scas
xchg
jbe
add
jne
jnp
mov
push
inc
mov
xor
mov
jae
out
sub
lea
inc
cli
in
fiaddl
out
push
push
inc
mov
cmpsb
dec
test
jns
repnz
cmp
pushl
out
fcoms
add
lret
testb
mov
mov
lahf
mov
sbb
fs
mov
jmp
sbbl
lock
lahf
test
lods
stos
xlat
ljmp
mov
inc
cmpsb
test
leave
sbb
xorb
xor
pop
insb
sub
push
in
push
shlb
cmpsl
cmpsb
jl
cmp
jp
les
push
imull
jle
dec
push
pop
add
popf
pop
cli
jge
notb
push
mov
and
sub
sbb
mov
outsl
xchg
and
pop
xor
mov
lret
and
fistpl
scas
cmp
cli
icebp
mov
xor
jl
shll
clc
pop
mov
adc
or
movsb
repnz
cli
push
xor
dec
mov
xor
lds
jns
adc
jecxz
adc
mov
lock
adc
les
arpl
pop
or
mov
push
mov
jmp
inc
mov
mov
mov
xor
insl
js
out
repnz
repz
xlat
mov
push
xlat
sahf
loope
in
and
sub
add
sbb
xchg
cmpl
pop
aad
pop
jnp
inc
xor
mov
jecxz
xor
fdivs
dec
imul
cmpsb
push
sub
rcrb
dec
jns
mov
push
or
mov
int3
es
inc
int3
out
push
sbbb
lea
mov
and
mov
and
pop
xchg
dec
ds
inc
push
pop
ja
int3
movsb
addr16
stc
cld
or
xchg
dec
xor
scas
dec
jg
xorb
jns
mov
stos
xlat
cmpsl
in
mov
js
cmp
mov
shrl
fwait
sbb
push
xchg
push
pop
fistps
sarl
aad
mov
stos
mov
sbb
cmpsl
and
iret
and
mov
fnstcw
out
mov
ret
push
xor
cmp
mov
insb
cmp
lods
insl
js
lahf
xor
ret
cmpsl
push
insl
loope
push
mov
mov
inc
sbb
mov
movsb
or
lea
data16
movsb
test
lods
mov
push
das
add
push
ss
add
mov
add
dec
add
mov
dec
fisubl
daa
cltd
lcall
iret
inc
repnz
loop
nop
push
sti
inc
fisubl
bound
sub
cmpsb
jnp
sub
les
cld
jnp
loope
pop
xchg
mov
sbb
mov
mov
pop
leave
and
sahf
arpl
in
sub
mov
sub
xor
mov
repnz
pop
jne
test
test
ret
roll
dec
out
mov
data16
out
scas
sbb
sub
ja
jnp
mov
mov
dec
pushf
jle
cmpsl
xchg
popa
xchg
jmp
call
fcomip
je
scas
xchg
fisubrl
pop
xchg
or
fisttpl
jns
pop
xor
mov
loop
mov
in
movsb
imul
inc
addr16
adc
adc
cmp
data16
hlt
xchg
xchg
test
inc
outsl
cmpsl
xchg
repnz
xchg
cli
inc
xor
fistps
cld
xchg
xchg
fstpt
into
pop
jbe
push
sti
scas
pop
cmp
jmp
lret
xchg
lea
cmpsb
aad
xchg
popa
arpl
push
ja
sbb
fldl
push
sbb
nop
cmc
pop
test
sti
in
cmc
and
cmp
cmpsb
fsubrp
out
fildl
pop
es
mov
push
rcrl
push
adcb
adc
pop
jo
into
jae
mov
mov
je
jae
cs
dec
shlb
clc
ret
xor
test
xchg
push
incl
pop
push
fldenv
mov
outsl
lods
mov
jno
add
leave
mov
inc
jo
pop
push
ds
lods
mov
cmp
dec
and
jae
cmpb
cmp
push
sbb
fsubrs
push
test
inc
pop
push
mov
jle
movsl
mov
or
shll
jge
mov
or
mov
pop
sbb
bound
scas
loopne
icebp
dec
iret
movq
mov
lods
jmp
daa
push
jl
and
inc
insl
lods
shll
add
cli
lods
lret
push
out
mov
test
mov
push
popf
jl
xchg
das
pop
adc
adc
or
jl
in
cmpsl
mov
movsl
cld
cmc
mov
nop
pusha
ret
and
sbb
pop
std
pop
shl
push
lret
and
mov
lods
cltd
dec
sbb
subb
jns
dec
ror
out
cli
sub
inc
hlt
mov
mov
and
je
sbb
adc
adc
xchg
lahf
enter
fs
mov
sbb
aad
sarl
jp
cmp
xchg
cmpsl
xchg
pop
adc
sub
shrd
push
mov
ret
push
inc
movsl
sti
cmpsl
mov
add
sub
mov
xchg
cmp
movsl
loope
jge
mov
mov
imul
inc
addr16
mov
inc
inc
xchg
mov
dec
scas
loopne
jae
hlt
adc
mov
mov
lahf
xor
mov
pushf
mov
outsl
adc
pushf
leave
ljmp
cmc
pop
icebp
and
mov
push
jbe
mov
jmp
lahf
mov
and
leave
lea
jge
add
out
pop
xchg
frstor
les
add
sbb
fiadds
lcall
mov
fucomip
and
fadds
into
sahf
or
stos
lret
in
lea
mov
ret
daa
out
sub
jle
mov
adc
jg
fstpt
sub
lcall
fnsave
lret
cmp
jecxz
mov
divb
jl
pop
ss
xor
sbb
jb
push
pop
iret
je
jge
pushf
inc
pop
and
xlat
sub
pusha
mov
add
add
in
ret
jge
adc
in
mov
lock
aam
rcll
pop
jp
xor
rolb
nop
dec
xor
stos
outsl
jecxz
sbb
ret
test
cmp
xlat
insb
push
cltd
or
or
mov
scas
clc
inc
mov
ljmp
jmp
test
or
or
or
mov
ja
mov
dec
gs
ret
ljmp
shll
adc
les
call
std
out
sbb
jmp
js
rolb
dec
mov
into
push
xchg
jmp
cmp
jae
xor
xchg
outsb
pop
jp
xor
dec
or
cwtl
or
les
shlb
popa
scas
push
loop
push
icebp
mov
jge
rorl
inc
mov
dec
imul
mov
xor
loope
or
jp,pn
or
jns
cmp
xchg
std
cmp
clc
filds
mov
xlat
jae
loop
sub
int
push
pop
inc
scas
and
sbb
mov
pop
rcrb
pop
popf
adc
or
dec
pushf
out
addl
mov
shrl
jbe
xchg
shll
cmp
inc
mov
jg
push
nop
pop
inc
imul
mov
pop
add
and
fsubrp
dec
cs
xchg
ja
andb
movsb
mov
pop
iret
inc
xchg
aam
pop
inc
sub
shrl
mov
push
enter
and
sahf
sbb
xor
add
and
decb
popf
lret
jb
inc
mov
mov
xchg
sbb
pop
out
adc
shrl
dec
pushf
cmp
repz
pop
push
cmpsl
je
inc
stos
jmp
mov
mov
rorb
mov
fwait
cltd
test
dec
jo
and
movsb
out
fldl
sti
test
gs
ljmp
ja
push
ss
hlt
cmp
mov
insl
xor
out
add
call
shlb
inc
mov
lods
lret
rorb
out
stos
adc
xor
shr
push
cltd
adc
adc
loop
int3
pop
add
shl
data16
inc
mov
stos
add
pop
call
cli
mov
cwtl
int3
xor
lock
push
cwtl
iret
outsl
aad
sbb
pushf
sbb
test
adc
sub
int
adc
aas
mov
cmpsl
mov
xor
cmc
sti
sbb
ret
es
loope
jno
jecxz
scas
mov
out
or
push
xor
dec
imul
sahf
mov
xor
icebp
je
lahf
in
fbstp
je
inc
pop
mov
nop
popa
aas
aam
mov
xor
aam
jbe
adc
pop
sub
sbb
shrl
roll
ja
cmp
aaa
pop
es
ja
stc
ljmp
or
jmp
pop
pop
lret
push
pop
out
pop
scas
jecxz
dec
imull
adc
ljmp
ror
pop
inc
fs
test
add
call
loopne
jmp
sbb
cmp
jl
daa
or
imul
sbbb
sti
inc
dec
orl
popf
in
aad
or
inc
jno
mov
sahf
jmp
jge
jg
pop
pop
add
mov
or
sub
mov
push
adc
xchg
hlt
inc
jg
dec
xchg
jg
scas
iret
ficomps
xchg
add
push
and
out
dec
add
dec
push
pop
repnz
cld
adcl
in
add
insb
cmpsl
je
jg
push
or
xchg
outsb
sub
inc
jmp
pop
ja
mov
aas
loope
scas
or
add
sub
cli
xchg
icebp
out
mov
xchg
add
lahf
pushf
and
jle
cmp
xchg
pop
mov
imul
dec
hlt
shlb
mov
or
xor
and
loope
cmpsl
add
xchg
mov
xchg
sbb
xchg
lcall
dec
iret
ret
fsubrs
sbb
movsb
sbb
scas
jle
push
dec
addl
jbe
enter
dec
loop
out
push
and
pop
pop
enter
mov
cmp
push
inc
insb
add
push
js
push
adc
mov
scas
mov
test
pop
inc
mov
pop
pop
dec
cs
lret
cltd
inc
inc
add
and
lea
jb
out
mov
scas
mov
xchg
gs
test
push
jecxz
rdpmc
jae
fdivrl
xchg
pop
xchg
push
jle
push
mov
das
cmp
out
test
imul
outsl
sarl
xor
int
cwtl
inc
cmc
jbe
and
cli
or
cwtl
fbstp
in
aaa
inc
cmpsb
mov
mov
push
aam
ljmp
cmp
mov
sub
and
outsb
in
mov
cmp
mov
loopne
jb
int3
dec
ret
push
jne
xor
cwtl
fistps
sti
out
xor
adc
pop
sbb
lea
out
xor
addr16
mov
xor
mov
test
lock
mov
mov
rcrb
aam
or
jb
lock
adc
aaa
mov
jle
fildl
clc
scas
fstps
mov
jnp
xchg
jl
jmp
push
pusha
push
push
xchg
and
mov
xchg
scas
dec
stos
out
lcall
call
icebp
pop
sub
push
mov
pop
dec
xchg
pop
imul
mov
mov
popa
jb
mov
or
outsl
dec
mov
cli
add
or
xchg
push
lods
mov
or
arpl
or
imul
fildl
rcr
ss
xlat
mov
jg
jae
dec
sub
je
idivb
lock
cmpsb
cmp
pop
inc
ret
sub
sbb
fwait
cld
mov
bound
cs
pop
lret
hlt
jae
pop
lret
mov
mov
xchg
mov
mov
mov
pop
or
stos
mov
pop
das
jno
dec
out
repz
push
xor
push
pop
outsb
roll
mov
or
xlat
push
les
stos
notb
ret
test
cmp
push
mov
xchg
mov
jne
clc
repz
add
xor
sbb
sbb
stc
mov
pop
out
mov
data16
xchg
fisttps
sub
into
testl
xor
into
push
pop
push
dec
in
aam
iret
stc
pop
mov
cmpb
sub
stc
stc
push
sbb
out
fldlg2
shr
sub
cltd
mov
pop
xor
xor
mov
jo
xor
sbb
ret
scas
pop
cmp
fistpll
scas
sub
insb
fstpt
xor
or
push
jp
jle
dec
sbb
aas
sbb
inc
fldenv
xchg
scas
dec
outsb
insl
es
xor
jbe
jne
mov
pop
fsub
mov
push
jns
js
mov
insb
inc
or
mov
and
popf
adc
arpl
stos
mov
in
gs
inc
sahf
xchg
out
imul
pusha
sub
sbb
or
sbb
xchg
add
jns
mov
dec
repnz
pop
add
decl
pop
ror
jecxz
xchg
pop
sub
jne
mov
sub
and
cmp
jp
push
rcll
out
stc
ret
rorl
xchg
add
xchg
in
dec
or
dec
xchg
pop
push
inc
shl
dec
jecxz
pop
repnz
adc
adc
jmp
fwait
lret
sbb
sbb
xor
mov
iret
scas
jno
data16
mov
sti
scas
push
mov
xchg
sub
mov
sub
push
sbb
test
dec
or
push
sahf
nop
rorb
test
inc
cmp
jle
or
sbb
mov
insl
xor
cmc
aad
in
mov
pop
mov
int3
push
inc
xchg
mov
adc
jle
xor
nop
mov
into
adc
pop
ja
loop
sarl
popa
add
push
data16
mov
rolb
xchg
push
popf
push
fidivl
cmpsl
xor
cmp
push
mov
insb
ljmp
mov
pusha
push
jbe
cli
xor
push
push
jge
scas
push
add
loopne
or
iret
fldl
or
mov
cli
cmp
jo
popf
sub
adc
test
inc
mov
add
and
pop
sub
insb
mov
cli
mov
pop
or
fstpl
dec
in
leave
popa
cmp
add
lea
mov
and
sub
or
and
adc
add
push
dec
out
repnz
cltd
popa
xchg
andb
xor
cltd
pop
inc
mov
and
sbb
ss
int
pop
insl
jae
out
mov
rcll
rolb
insl
out
out
xchg
cltd
insb
mov
jne
jecxz
ja
add
add
jae
cmp
dec
sub
enter
inc
cmpsb
adc
movb
fisttpl
push
and
lahf
xor
pusha
mov
addb
add
shrb
mov
cmp
add
pop
cmp
cmpsl
in
xor
loop
mov
cld
xor
aaa
mov
ret
xor
adc
pushl
or
jle
repz
and
cltd
ficompl
and
push
adc
sbb
xchg
or
bound
data16
rcl
sub
in
mov
pop
xor
cmp
inc
and
loopne
lods
pusha
jb
in
add
push
in
in
pop
lret
nop
push
cmpsl
and
in
jns
out
es
xchg
jbe
repz
movsb
jge
mov
xor
xchg
pop
mov
mov
jno
insb
ds
pop
imul
pop
inc
cmpsb
push
and
cld
mov
pushf
push
fsubr
pcmpgtd
xor
arpl
sbb
enter
xor
cli
xor
cwtl
nop
or
call
ret
pusha
addl
mov
sahf
dec
pop
jnp
xchg
inc
in
push
shr
fidivl
pop
fcoml
push
inc
fists
add
mov
pop
xlat
mov
daa
mov
popf
or
ja
sbb
arpl
ljmp
fs
mov
cmp
ljmp
pop
mov
xchg
call
shl
pop
push
add
lret
adc
mov
lods
jno
fimull
es
sub
jbe
push
push
cmp
sub
imul
adc
cmp
movsl
enter
lahf
xchg
cli
inc
daa
or
test
inc
sub
movsb
push
sbb
aaa
mov
popa
pop
cltd
and
mov
sub
std
out
idivl
movntps
sahf
mov
subb
popa
add
xchg
sub
stc
sub
xor
mov
pop
adc
mov
inc
adc
ss
pop
int3
mov
dec
cmp
test
push
ret
cmp
mov
adc
cmp
sahf
fwait
cmp
xor
cmp
div
mov
adc
push
or
subb
cmpsb
sub
imul
xchg
sub
pop
mov
inc
dec
ljmp
popa
adc
vpor
jmp
sub
fwait
or
jge
int
and
sub
ds
inc
repnz
mov
inc
movsl
pop
jne
repnz
pop
pop
inc
std
jns
pop
mov
xchg
sub
mov
pushf
and
dec
lods
ja
dec
add
or
mov
push
adc
and
sbbb
sbb
mov
out
pop
push
add
pop
sub
ror
add
dec
clc
sahf
push
xor
push
call
and
jmp
cmp
inc
addb
popa
sbb
pop
shr
xorl
test
js
test
ret
andb
mov
scas
adc
jns
cmp
mov
cmc
aas
adc
adc
fdivr
lret
jns
fldt
cmc
and
lds
lret
cld
aas
push
imul
and
jge
inc
scas
adc
mov
add
push
imul
lret
lret
pop
or
mov
mov
mov
dec
push
es
mov
mov
add
add
orb
xchg
push
cmp
fistpll
lahf
daa
add
mov
loope
repz
mov
xor
or
lods
fidivl
sub
dec
cld
mov
fucomi
pop
mov
xor
lods
pusha
pop
aam
inc
pop
cmp
and
dec
adc
fs
adc
fucom
sub
lock
or
addr16
and
and
dec
enter
stc
out
outsb
add
popf
lods
lret
mov
inc
xor
shr
add
cmp
pop
jecxz
adcb
and
addr16
test
mov
inc
test
in
dec
ja
test
loope
xchg
mov
sahf
dec
daa
xor
in
dec
inc
lea
cli
mov
and
and
ljmp
sub
subl
fmull
dec
rcrb
add
ljmp
lahf
mov
int
rolb
cmpsb
mov
xchg
jg
leave
test
lods
aad
mov
sub
mov
jo
sbb
xchg
cmc
cmp
push
loop
pop
out
scas
aaa
mov
fadds
mov
inc
pop
fcompl
shll
mov
xlat
test
bound
or
inc
stos
ret
and
ja
or
mov
jl
cmp
cmp
sub
pop
xchg
shll
mov
adc
push
ret
mov
push
dec
stc
xchg
ret
loop
or
and
bound
mov
das
push
sbb
lds
mov
mov
mov
push
xor
dec
mov
jecxz
xchg
jne
cmp
xor
psubsw
loopne
ja
jecxz
xchg
movsl
mov
mov
push
adc
shlb
jecxz
lcall
cli
mov
sub
cmp
dec
adc
push
dec
and
inc
lahf
mov
cmp
dec
ljmp
push
pop
movsb
repz
imul
push
xor
es
sti
mov
push
fidivs
pop
sub
xchg
fldt
std
popa
pop
dec
mov
push
fadds
sub
fisttps
inc
mov
cmpb
pop
mov
adc
pop
in
jno
out
mov
xchg
lcall
cmp
scas
psllq
andl
jle
dec
nopl
push
aam
shlb
sarl
push
repz
push
cmpsb
aaa
stos
cli
ror
sbb
cmc
fs
or
into
imul
outsl
jns
negb
callw
fildll
int3
stos
xorb
mov
test
std
ret
mov
loope
clc
inc
push
aam
mov
daa
ds
stos
pop
lcall
inc
inc
loop
sbb
ljmp
sub
cmpsb
dec
xchg
pop
xor
into
push
and
nop
nop
push
stos
or
jge
movsb
mov
jmp
repnz
ret
push
dec
xchg
shr
or
fbld
mov
filds
out
mov
cld
fcmovnu
and
rcr
scas
sbb
dec
push
insb
push
xchg
mov
pop
add
roll
inc
stos
xchg
mov
pushf
dec
dec
or
bnd
sahf
bound
mov
sub
cmp
loop
inc
or
and
lea
add
movsl
xlat
in
or
xchg
popa
popf
arpl
in
rorb
jg
jp
imul
dec
or
ficoml
mov
ret
xchg
dec
es
adc
xchg
xchg
test
cmp
mov
inc
cmp
sbbl
into
shr
pop
ret
enter
push
cmp
rcll
lods
subb
xchg
aad
loopne
in
ss
push
aas
dec
repz
xor
out
push
mov
loop
mov
loopne
pop
jns
arpl
add
fwait
pop
and
fs
adc
jecxz
aad
pop
mov
pop
jecxz
fprem
jp
lret
xchg
jb
sub
cmpsl
dec
xchg
jns
cmp
das
aaa
inc
nop
jo
add
inc
or
jle
xchg
inc
sub
xchg
xchg
push
insl
dec
inc
push
xor
je
inc
xchg
and
stos
ret
loop
mov
mov
fsub
aaa
loope
cld
lcall
mov
andl
inc
adc
imul
mov
sub
add
pop
enter
jle
ret
push
mov
gs
movsb
ret
adc
dec
adc
popf
inc
es
test
add
sbb
cltd
mov
adc
sarl
xlat
xor
push
movsb
mov
mov
into
aad
in
inc
adc
push
inc
loop
push
mov
mov
cmc
aad
outsl
movsb
fisubrs
xor
lds
dec
ret
fists
mov
scas
xor
aaa
aad
rclb
push
imul
xor
jmp
lret
or
xlat
mov
lods
mulb
call
cmp
sbb
or
cmp
mov
add
mov
rorl
xor
mov
adc
imul
movsb
arpl
clc
inc
jl
sbb
dec
mov
bnd
sub
out
fmulp
adc
insl
cli
mov
repnz
popf
push
and
popf
cmp
ds
ss
je
or
in
stos
pop
xor
inc
add
stc
xchg
lea
pop
mov
fldcw
loop
addr16
pop
cmp
mov
adc
insb
cmpsb
pop
xor
cwtl
ss
adc
cmp
and
ss
mov
jp
push
fsubp
xor
call
xchg
daa
rolb
dec
cld
iret
fmuls
rolb
jg
ss
std
jnp
jge
add
stos
insl
mov
daa
push
jbe
cmp
pop
adc
xchg
adc
push
xchg
in
cwtl
test
mov
xchg
ss
pop
inc
out
push
mov
ljmp
ja
incl
or
test
in
xor
movsb
leave
pop
pop
bnd
push
std
or
sub
jp
xor
in
adc
into
pop
jecxz
std
xchg
inc
mov
and
nop
mov
lret
out
mov
stc
fcoms
fsubrs
xchg
xchg
scas
lret
sbb
subl
ss
mov
idivl
cmc
je
inc
popa
xchg
dec
dec
fcmovnbe
aas
rcr
sub
lcall
jp
mov
and
pop
fildl
add
fldt
xchg
fwait
lret
shl
hlt
hlt
ror
push
jecxz
jl
imul
mov
and
or
xchg
and
in
adc
popa
hlt
int
repnz
dec
aaa
in
xor
mov
movsb
call
inc
call
inc
jb
popf
enter
jmp
repnz
rolb
cmc
cmp
int
pop
lods
inc
xor
push
mov
daa
movsb
enter
xchg
mov
mov
dec
mov
xchg
les
orb
shrl
test
mov
and
pop
mov
lods
add
xchg
bound
shll
jno
pop
cmp
into
lock
xor
pop
ljmp
ficoml
shlb
popa
inc
jle
jp
mov
add
push
out
repz
jmp
fs
mov
pop
pop
xchg
loop
cmp
aaa
push
inc
loope
adc
iret
shl
sub
mov
mov
mov
in
or
cli
jp
test
dec
fdivrl
into
mov
cmp
xchg
ret
int
jmp
ret
and
aad
and
mov
lret
push
subl
mov
adc
sub
xlat
in
lods
aam
ja
shll
fbld
bound
lahf
sub
dec
mov
mov
sbb
sub
dec
cs
aam
roll
popa
js
mov
mov
into
and
rcll
push
ljmp
movsl
mov
out
lret
sbb
cmpsb
add
out
inc
mov
mov
fs
hlt
cmp
iret
dec
test
xchg
negl
jmp
addb
std
sub
mov
int3
inc
lret
or
aam
or
dec
inc
ss
cltd
mov
insb
sub
test
popf
pushf
into
bound
push
repnz
jb
inc
imul
or
movsb
push
jp
andl
sub
or
popa
enter
mov
stos
fcomps
push
jne
cmp
loop
dec
fcomp
fdivr
hlt
popa
pop
subl
xorl
mov
mov
inc
xor
stc
jbe
jle
out
test
test
popf
jae
xchg
dec
add
push
popa
push
jb
jo
lock
ret
and
or
mov
and
icebp
adc
push
pop
cmp
inc
out
iret
dec
cmpsb
pop
or
sub
sahf
mov
dec
jbe
add
aad
imull
jp
test
mov
xchg
push
or
fidivrl
push
aaa
mov
add
sbb
pop
mov
mov
cld
xchg
xchg
ljmp
lods
dec
ds
and
js
mov
cmp
nop
icebp
pop
sub
test
incl
shl
push
adc
mov
or
fwait
inc
fildll
es
cwtl
cs
jo
mov
jmp
sub
popa
and
xchg
inc
cmp
pop
leave
shlb
call
jne
inc
fistl
add
mov
test
adc
push
je
add
xor
cmpsb
xchg
inc
call
cld
sbb
sarl
cmp
test
add
outsl
icebp
xor
dec
addb
nop
outsl
ja
mov
out
fs
loop
cmp
xor
cmp
ljmp
xchg
or
nop
xchg
mov
xchg
cli
xor
mov
sbbl
sbb
adc
rcl
fstpt
pop
jecxz
std
je
inc
pop
sbb
mov
stos
fdivr
ja
lret
data16
shl
lahf
clc
roll
in
sahf
xchg
stos
mov
push
int
pop
dec
sub
add
xchg
mov
out
fldenv
mov
int
outsl
mov
push
ds
jge
cltd
fsubs
test
mov
xor
ss
push
clc
mov
mov
mov
aam
sub
leave
push
jne
rorb
add
pop
and
int
inc
rep
mov
xchg
cmp
es
xchg
cmp
mov
jnp
setp
sub
dec
inc
xor
int
jnp
and
add
rorl
mov
jnp
add
sub
add
lret
loope
mov
mov
daa
ljmp
or
gs
pop
sbb
push
or
and
addl
pop
ss
jns
fcompl
mov
pop
push
pushf
xor
movb
stos
test
imul
lds
jns
push
sub
lds
mov
sbb
mov
stos
hlt
sub
fcomps
imul
sbb
out
jp
sub
ja
clc
sbb
clc
xor
out
in
clc
sub
test
xlat
xchg
fcmovne
cmp
push
or
jb
mov
adc
call
repnz
cmp
inc
xchg
gs
jae
std
movsb
add
in
sub
xchg
mov
in
icebp
in
pop
aam
cs
fsubrs
jno
pop
shl
mov
movsb
fcoml
shll
dec
lds
dec
cltd
cmp
ds
shll
fsubl
push
pop
inc
push
incb
push
or
mov
mov
repz
outsb
mov
lcall
jmp
enter
xlat
loope
aaa
in
pop
out
loopne
mov
mov
xor
dec
dec
pop
aas
cmp
jle
sbb
mov
stos
rcll
pop
jp
and
inc
push
lods
scas
lods
xchg
pusha
clc
pop
out
clc
pop
or
inc
jl
sbb
in
rorb
sub
jne
lea
pop
push
into
cmpsb
movsl
pop
push
in
test
cmp
andl
xchg
subb
add
adc
loop
inc
lea
or
xchg
out
adc
pusha
clc
cli
push
push
int
or
or
sahf
xchg
fisubrs
xorb
push
fisubrs
inc
in
loope
mov
out
leave
cmp
sarl
add
pop
inc
ret
in
rolb
adc
xchg
cmp
push
ja
pop
pop
std
jno
add
xor
and
stos
ret
sahf
mov
mov
sub
push
inc
fisttpll
jle
rcrl
sahf
fs
in
js
arpl
insl
sub
add
mov
out
pop
mov
shl
mov
pop
dec
stc
ss
clc
dec
mov
sub
scas
add
pop
daa
pushf
cs
pop
fsubl
test
pop
into
sarb
cwtl
cld
push
fldcw
fildll
add
push
xchg
pop
icebp
xchg
cli
mov
push
push
pusha
fbld
sarb
fldenv
and
jb
push
xor
push
sub
jmp
cwtl
fs
les
bnd
shlb
faddl
xor
mov
mov
pop
sbb
imul
xor
iret
add
int
in
je
neg
mov
sbb
sub
or
adc
psubw
test
fsubrl
xchg
mov
mov
rorb
and
ss
sarb
std
jp
or
fmuls
nop
pop
mov
xor
and
dec
cmpsl
xchg
xor
mov
iret
aam
pop
out
add
cmp
scas
pusha
jno
data16
xor
add
mov
iret
addr16
scas
dec
xchg
jbe
popf
stos
fucomi
movl
rcl
add
push
das
stc
rcrb
xor
add
lahf
adc
xchg
call
jmp
bound
jb
push
mov
cmp
jmp
aam
cmpsb
xchg
stc
adc
pop
jge
adcb
scas
test
cmp
inc
adc
addl
ljmp
cmp
push
cs
jp
mov
in
adc
stos
or
dec
jl
adc
mov
and
int3
cmp
sbb
adc
hlt
inc
cmp
std
sbb
jle
mov
test
sbb
rcr
inc
push
fistl
and
loopne
in
movsl
into
sbb
addr16
test
add
xchg
cmpl
and
stos
fisttpl
sub
gs
mov
xor
mov
fldt
ja
cwtl
xchg
pushf
js
xchg
inc
sub
mov
and
movsb
dec
pop
pop
fiadds
xor
and
mov
adc
in
xchg
xor
cwtl
sahf
and
iret
jge
cmp
sbb
xor
std
adc
je
scas
jge
cmp
sub
fidivrl
jbe
adc
sbbl
push
call
sbb
sub
dec
rol
in
adc
pop
mov
dec
lods
out
cmpsb
popa
imul
sbb
jae
push
rorb
stos
icebp
push
int
stc
sbb
xchg
into
or
das
addb
push
mov
mov
cmp
les
ds
movsl
cs
fisubrl
pop
stos
dec
pop
pop
fnstsw
or
inc
xchg
sub
push
jae
aad
out
mov
push
pop
sub
fs
xchg
pop
lds
jns
xor
cltd
les
mov
add
pop
or
inc
pop
add
add
xchg
out
dec
arpl
mov
or
add
js
xor
ret
in
xor
ljmp
mov
jne
inc
or
imul
cld
add
movsl
mov
jge
mov
jo
ret
sbb
mov
mov
repnz
cmp
dec
xchg
mov
das
mov
std
adc
xchg
lds
sbb
inc
repnz
leave
dec
in
js
ret
xor
push
or
cwtl
dec
sub
dec
xlat
jl
inc
xchg
sbb
and
inc
shlb
nop
push
inc
inc
imul
andb
rorl
das
xchg
incb
cmc
adc
jo
cmp
add
sarl
adc
ljmp
dec
pop
cmp
pop
jmp
sub
nop
push
imul
dec
stos
in
add
xor
repnz
cli
push
fsubr
movsb
repnz
das
icebp
lock
pop
sub
fisubl
sbb
loopne
pop
xor
dec
push
inc
call
add
xor
enter
xor
cmp
mov
and
add
xchg
shrl
add
scas
or
jp
arpl
cmc
xchg
shrb
dec
inc
pop
mov
rorb
push
jo
sbb
lock
sub
sub
pop
add
gs
pop
xchg
sahf
jo
inc
push
dec
jb
lea
in
ja
andb
add
hlt
shrb
xchg
jno
adc
scas
xlat
mov
xor
dec
ret
into
mov
fwait
pop
lock
jmp
sub
mov
sar
push
push
xor
ret
sub
std
dec
pop
das
cmovo
dec
xchg
adc
dec
inc
or
hlt
push
mov
rcr
dec
loop
ret
or
xlat
cwtl
fdivrs
orb
or
test
loopne
sub
inc
loop
xchg
test
notl
pusha
test
push
leave
sbb
jge
imul
xor
cmc
or
xchg
xor
sub
mov
xchg
mov
or
mull
and
mov
mov
inc
test
push
and
leave
fmull
push
popa
fst
jbe
push
push
fidivl
test
dec
popa
add
ds
repnz
bound
xchg
sub
imul
daa
imul
dec
cmp
or
lret
fs
lods
or
cli
ud2
push
push
mov
ja
stos
mov
cmpsl
mov
mov
jmp
aas
mov
or
repnz
test
outsl
add
mov
sarl
ja
sbb
daa
cmpsb
mov
les
mov
lods
aam
inc
mov
pop
out
imul
jmp
cli
pop
push
hlt
clc
pusha
mov
jecxz
jl
int3
jl
xchg
push
or
out
jge
push
inc
push
inc
xchg
push
sbb
adc
bound
xchg
add
cmp
or
test
movnti
dec
lds
test
push
sahf
rcr
loopne
mov
jno
prefetchwt1
or
shll
aaa
and
mov
xchg
ds
fcoml
mov
push
xchg
dec
mov
aaa
mov
push
leave
and
shl
addr16
fsin
xchg
jecxz
aaa
test
out
test
dec
notl
mov
lods
clc
iret
adc
in
cwtl
or
sbb
cltd
ljmp
mov
icebp
inc
or
mov
push
cld
addr16
loope
mov
shrl
xchg
mov
jne
imul
test
pop
mov
inc
stc
pushf
enter
cmpsl
mov
out
repnz
dec
fistpl
jg
sbb
loope
mov
dec
dec
mov
sbb
pop
sbb
add
cs
mov
dec
push
mov
dec
pop
mov
xchg
inc
mov
in
mov
loopne
mov
fsubl
iret
xlat
ss
dec
gs
popl
pop
mov
push
jns
mov
pmaddwd
adc
mov
push
lock
sub
add
lods
mov
jo
adc
pop
inc
out
test
xchg
xchg
int3
loop
adc
adc
xor
jbe
mov
push
ja
push
shlb
cmpsb
and
xor
loope
outsl
sbb
mov
mov
push
push
push
sub
out
fadds
test
int3
xchg
popf
jl
lcall
xchg
test
cmp
sub
mov
popa
popa
fwait
out
ret
aas
add
push
pop
mov
repnz
mov
dec
sub
cmp
call
fimull
test
jno
xlat
lahf
cmpsb
inc
cmp
repz
sahf
push
ljmp
inc
loopne
aad
lahf
sbb
jb
and
xor
xchg
in
pushf
fdivrs
sbb
movsl
fists
push
lahf
test
aam
out
xor
jbe
cmp
sbb
test
test
stos
ds
mov
mov
push
push
rcr
xor
push
fnstsw
and
adc
jp
pop
movsb
decb
pop
cltd
mov
and
int3
push
sbb
imul
movsl
xor
leave
gs
sbb
f2xm1
bound
pop
mov
mov
mov
xchg
cmpsb
mov
add
mov
jp
jge
insl
incb
xor
mov
jg
push
dec
jne
imul
cltd
data16
xchg
adc
fbld
aad
and
aas
cli
mov
in
sbb
mov
push
call
pop
push
sub
sbb
cmp
arpl
cwtl
cmp
pop
std
jp
lods
sub
shr
nop
lret
dec
pop
cmp
push
sub
mov
mov
fdivs
or
out
stos
pop
fs
dec
or
or
push
icebp
orl
repnz
xor
and
lret
pop
cmp
divb
aaa
movl
arpl
mov
pusha
jnp
sbbb
repz
cld
inc
push
fists
mov
cmp
ljmp
jno
addb
mov
xorl
or
xor
fnstcw
adc
and
std
dec
aam
mov
in
adc
mov
mov
mov
push
mov
or
mov
dec
inc
bnd
mov
ss
jbe
cmpsl
sub
scas
cmp
pop
cmp
adc
mov
inc
sbb
mov
lock
fisttpl
pushf
fists
pushf
lret
lock
inc
out
cmp
mov
fmul
fisttpll
test
aam
and
sub
mov
or
sub
mov
pop
lods
cmpb
adc
das
out
jecxz
rolb
sbb
scas
push
insl
ret
cmp
imull
push
jecxz
xchg
push
out
jne
inc
xor
and
mov
test
adc
faddl
xchg
loopne
sub
jb
push
mov
sbb
scas
lock
add
int3
pusha
filds
push
leave
scas
push
mov
and
mov
jbe
mov
in
ret
push
movsb
inc
mov
mov
in
insb
test
call
popa
cmpsb
xchg
loop
and
pop
dec
xchg
stos
sub
nop
lds
push
call
or
sbb
in
fwait
push
scas
dec
jge
rorb
cmpsl
ret
idivl
xor
adc
popa
mov
sahf
mov
add
data16
and
mov
jae
jns
imul
sahf
fmul
sar
outsl
and
sub
test
movsl
inc
mov
pop
lods
lcall
sti
or
test
push
hlt
lret
into
test
adc
and
xchg
and
mov
jl
ljmp
add
and
mov
fnsave
xchg
out
pop
dec
sub
ds
enter
mov
neg
lock
stc
or
mov
das
push
mov
aaa
and
add
sbb
gs
out
shll
xor
add
call
icebp
cwtl
lcall
rorb
push
cmpxchg
std
cmp
push
adc
or
cmp
jmp
inc
lahf
sbbb
popa
scas
sbb
or
lds
jae
mov
outsb
pop
bound
dec
add
jmp
aas
jg
fmull
jae
stc
mov
add
mov
les
pop
push
pop
xor
cmpl
pop
lcall
repnz
pop
mov
imul
mov
aaa
dec
or
je
cmp
loope
add
test
in
jne
rcrl
insb
cld
dec
mov
test
sub
push
cmpsb
adc
andl
and
fimuls
push
xor
pop
and
sbb
sub
std
pop
jg
cmp
stos
xchg
aam
dec
inc
int
lds
inc
push
mov
xor
add
cli
int3
into
xor
aas
mov
lret
mov
mov
repz
and
nop
adc
repz
out
fistl
shrl
cli
add
xor
jne
mov
inc
or
cmp
mov
mov
dec
clc
add
sbb
xchg
mov
push
fnsave
lods
cwtl
and
pop
dec
test
clc
pop
jg
int
dec
inc
sbb
jb
inc
hlt
mov
cmpsb
mov
aaa
inc
in
xchg
lods
sbb
jge
cmp
shll
stos
dec
xor
add
push
mov
push
sub
pop
fidivs
lds
mov
jo
aas
imul
mov
pop
jb
cmpb
in
addl
leave
jle
mov
mov
ret
popl
mov
cmp
xor
jecxz
into
sub
das
and
jbe
push
ds
and
lahf
mov
xor
jg
les
arpl
push
mov
aad
sbbl
hlt
adc
mov
mov
mov
retw
mov
fnstenv
scas
in
jnp
sbb
int3
lea
mov
stc
icebp
mov
sbb
cmp
testb
xchg
mov
and
xor
adc
inc
cs
pop
enter
mov
aam
jne
lahf
sbb
jnp
adc
incl
dec
and
sbb
loope
popf
inc
mov
fwait
sti
in
mov
lcall
fcmovne
lock
jne
dec
imul
cli
lret
je
ja
push
jnp
jecxz
and
sub
push
imul
sbb
push
pop
xor
jb
popf
sub
aaa
shll
sbb
add
arpl
jg
add
mov
rcrb
adcb
es
xchg
add
and
pushf
out
shr
movsl
sahf
test
add
mov
mov
xchg
mov
adc
test
das
mov
fdivs
insl
insb
in
lock
mov
jne
adc
pop
fs
repnz
jg
push
jg
push
mov
push
pop
aad
push
mov
xchg
cmp
int3
icebp
mov
hlt
xchg
inc
and
push
lea
popf
and
push
inc
cld
push
test
imulb
add
xchg
aad
jge
or
int
outsl
fdivl
into
adcl
inc
push
inc
mov
xor
test
les
mov
pushf
mov
daa
xlat
stc
push
or
test
pushf
or
mov
js
into
xor
clc
mov
insl
mov
or
dec
bound
push
adc
mov
xor
mov
sbb
rclb
xor
pop
xchg
stos
inc
cwtl
fisttps
imul
test
cmp
bound
jo
in
cs
outsl
dec
xchg
pop
xchg
add
add
pop
lods
cltd
call
sbb
push
jae
mov
mov
pop
cmp
pop
fisubrl
cs
fcomps
aam
comiss
mov
pop
xchg
aam
insl
push
push
icebp
pusha
jl
jle
jge
push
inc
cmc
shrb
mov
adc
xchg
rorl
imul
shr
push
or
outsl
inc
je
xor
and
xchg
stos
scas
fdivr
mov
inc
adc
pop
mov
xchg
pop
ret
xchg
pop
xor
sbb
xchg
adc
arpl
test
gs
mov
les
jnp
mov
add
dec
jbe
int
cmp
push
cmp
mov
repz
mov
inc
mov
outsl
pop
aaa
pop
and
sahf
push
dec
mov
or
jp
pop
jae
push
mov
orps
mov
sahf
in
sub
lods
test
in
or
sub
cli
lods
sub
outsl
call
mov
lods
fidivl
adc
sub
jp
flds
pop
gs
cmpsb
lock
gs
push
adc
je
xorb
hlt
rorl
jle,pt
push
or
mov
pop
lret
js
push
xchg
mov
push
out
push
imul
test
jg
leave
iret
movsb
adcl
inc
xor
fisttpl
call
mov
js
out
aaa
xor
sbb
cmp
push
shrl
daa
cmp
icebp
cmpsb
push
adc
mov
arpl
fisttpll
in
insl
cmp
data16
mov
fsubrl
lods
mov
pop
push
pop
sarl
sbb
add
call
dec
pop
ss
cmpl
cmp
dec
push
notl
mov
lea
aaa
fmull
std
dec
loopne
cwtl
lds
adc
push
fiaddl
and
dec
ss
dec
sbb
cmp
pop
xchg
loope
sbb
inc
xchg
shlb
cmp
fidivs
pusha
scas
cld
fists
jmp
imul
cmp
das
jle
mov
dec
notl
xchg
loop
xchg
mov
test
mull
aas
jl
mov
push
stos
sbb
in
dec
fnsave
mov
ss
pop
stc
jge
add
jae
push
cmpsl
loop
sarl
sti
mov
xchg
inc
pop
clc
pop
rorl
push
rol
stc
sbb
mov
jnp
bound
mov
jnp
mov
imul
pop
adc
dec
mov
cmp
mov
enter
or
inc
lret
mov
mov
dec
push
or
adc
gs
fisttpll
mov
pop
stc
xchg
lock
jg
jbe
leave
outsl
mov
insl
fwait
mov
push
mov
add
inc
jle
lret
lea
adc
mov
popa
push
and
sub
ds
add
lea
test
pop
cli
mov
sbb
in
dec
push
js
cmp
sub
pop
das
xor
ret
mov
mov
add
nop
lret
shl
fwait
push
mov
cwtl
mov
in
stos
loop
pop
dec
sbb
inc
icebp
mov
lods
fisubs
mov
adc
test
cwtl
sub
sub
or
xor
out
repz
andb
jno
xchg
fists
jno
add
mov
lahf
cltd
movsl
inc
scas
andb
out
out
test
or
mov
dec
clc
pusha
aam
adcb
lods
sbb
dec
sbb
loopne
sub
xor
mov
adc
jecxz
mov
fnstenv
mov
mov
push
xor
call
std
das
test
test
rorb
int
jbe
and
cmp
dec
imul
stos
push
adc
loope
andl
mov
mov
xchg
mov
xor
cwtl
ljmp
movups
or
adc
fwait
cmp
jecxz
inc
xor
push
aad
push
or
xchg
outsb
push
adc
sub
shrl
sub
jecxz
push
pop
sarb
cmp
rolb
cmpsb
mov
sub
add
xor
xor
jl
fbld
cld
mov
sbb
dec
ds
mov
push
sub
insb
addb
ljmp
cwtl
inc
sub
xchg
add
jge
mov
leave
in
pop
mov
ficoms
fcomps
arpl
inc
decb
hlt
inc
inc
xor
xor
pop
pop
mov
jb
lods
pop
jg
fimuls
lds
pushf
les
ret
push
cmp
mov
pop
ja
mov
push
fwait
cmc
fs
and
fists
xchg
pop
mov
jg
stc
aam
mov
xchg
in
push
scas
enter
lcall
shlb
push
push
imul
aad
inc
push
jecxz
xchg
or
jge
mov
push
lock
inc
adc
shlb
shl
and
inc
dec
sub
xor
jb
adc
loop
and
add
rcll
sbb
mov
in
lret
mov
push
mov
leave
push
loope
jae
cmp
xor
jo
lds
xchg
movsl
es
psubw
int3
push
push
fnstsw
pushf
scas
inc
sahf
das
pop
add
lock
ficompl
lds
dec
fiaddl
push
adc
jnp
sub
insb
xor
lahf
cltd
pop
mov
inc
call
je
repz
addr16
add
pop
cmp
adc
movsb
pop
shll
popf
cmc
mov
or
xor
inc
adc
mov
jbe
jmp
add
mov
add
pop
or
push
vfrczps
lods
mov
shlb
sti
xor
pushf
mov
clc
or
and
cmp
pop
mov
inc
mov
int
inc
scas
pandn
mov
fs
xchg
out
mov
ss
and
cmp
xchg
jg
sub
sub
push
stos
iret
iret
jb
fidivl
pop
sub
mov
shlb
push
adc
jg
pop
mov
mov
adc
loopne
ror
and
xchg
push
pop
add
dec
cli
call
imul
imul
mov
mov
xchg
cld
cld
sbb
mov
and
stos
sti
mov
sub
jecxz
int
sbb
rorl
lcall
int
inc
gs
popa
bound
rcrb
jl
dec
pop
mov
or
cmp
fnstcw
cli
in
dec
xor
xchg
test
loop
xchg
repz
dec
les
subl
sub
add
scas
shll
sbb
test
inc
icebp
les
rclb
add
adcl
dec
or
cld
out
xor
adc
lret
adcl
add
outsl
addr16
mov
mov
gs
call
movsl
mov
mov
inc
lods
sahf
push
movsl
inc
mov
mov
call
lea
mov
inc
jp
dec
dec
jbe
in
adc
nop
adc
sti
sub
lret
sbb
inc
cs
icebp
das
scas
jmp
int
jle
shll
lahf
push
jbe
jno
addb
cltd
and
loop
addr16
push
iret
cmp
push
mov
adc
fcomps
jge
stc
jb
icebp
cmp
xchg
lock
dec
insb
push
pop
or
out
xor
cmp
xor
xchg
cmpsb
xchg
mov
cltd
fwait
cmc
jp
jo
sbb
adc
mull
mov
fisttpll
mov
pop
jle
aas
add
jne
push
mov
mov
push
insb
mov
sub
push
setl
jmp
outsl
jp
push
out
and
mov
push
in
int3
adc
lahf
push
out
push
addl
adc
mov
jns
xor
stos
inc
pop
outsl
pop
sub
sub
movsl
test
mull
mov
jmp
outsb
outsb
pop
pop
sbb
push
roll
dec
push
int
cwtl
jmp
sahf
push
cmp
mov
in
cld
sbb
inc
sbb
dec
inc
leave
jno
nop
jge
inc
jp
in
xor
push
mov
mov
dec
sbb
lret
jno
movsl
jb
sbb
adc
scas
clc
loopne
ret
pop
std
pop
and
cmp
outsl
mov
in
iret
or
cmp
outsl
aas
jns
out
cli
push
adc
call
or
inc
mov
test
jge
ror
add
xlat
test
xchg
adc
cmp
sbb
xchg
out
inc
and
imul
and
mov
mov
xchg
xlat
inc
sub
mov
jb
icebp
sbb
mov
btc
aas
mov
roll
xor
lret
mov
push
iret
adc
outsb
incl
jno
loop
rcrb
xchg
aad
or
mov
pop
orl
ss
dec
mov
imul
and
aaa
jns
cwtl
xor
fildll
inc
adc
xor
and
daa
sti
jno
ror
icebp
nop
mov
push
or
sahf
cmp
and
push
or
imul
rclb
inc
popa
jmp
push
sub
popa
fistpl
cmp
jb
aad
mov
sbb
pop
jle
add
mov
push
test
das
xor
lds
cmp
xchg
lock
jecxz
mov
test
pusha
loopne
or
addr16
jno
lret
push
push
aam
sbb
js
pop
push
imul
mov
push
into
adc
cmp
xchg
xor
leave
push
fsubrs
pop
xchg
mov
jmp
mov
das
sub
test
pop
sti
in
inc
inc
fnstcw
pop
int3
push
into
xchg
lret
fidivrl
push
outsl
into
std
je
shl
sti
daa
and
or
bound
pop
nop
arpl
popf
push
xchg
inc
add
sahf
and
fstpl
or
inc
lock
enter
pop
jno
xchg
and
js
jnp
loop
mov
inc
or
mov
adc
pop
sub
adc
aas
inc
push
test
xor
xor
movsb
cmp
dec
sub
into
add
inc
dec
imul
xor
xchg
sub
bound
enter
daa
stos
mov
cld
ret
dec
lea
jp
inc
sarl
fadds
test
icebp
pop
xor
aad
add
and
mull
rorl
sbbb
push
xor
addl
xchg
xchg
mov
lods
pop
and
add
push
add
adc
xor
ficomps
inc
fwait
jmp
mov
movsb
inc
jmp
cmpsl
lods
xor
cmp
loopne
cs
inc
mov
jo
jbe
jnp
imul
push
dec
in
pushf
fisubrl
stc
int3
je
aam
inc
imul
pop
jns
movsb
cmp
rorb
push
push
add
mov
pop
inc
movsl
sbb
sub
jne
adc
outsb
test
xor
aam
scas
dec
adc
dec
cs
push
je
arpl
dec
sbb
icebp
xor
jns
mov
in
out
sahf
adcb
sbb
ljmp
sub
dec
subb
and
divb
ror
xchg
clc
xor
mov
and
xchg
dec
loop
ss
or
inc
pop
mov
lock
xor
jmp
nop
jno
in
mov
and
sti
fwait
scas
ljmp
sbb
mov
insl
dec
mov
test
sbb
or
stos
outsl
addr16
cmp
or
andl
ss
sbb
xor
and
or
jmp
adc
sbb
shll
mov
pop
push
mov
inc
inc
aam
mov
jg
sbb
cmp
adc
xchg
cli
xchg
push
xchg
pop
ss
jo
sbb
lahf
mov
jecxz
pusha
es
and
add
popf
dec
pop
push
inc
dec
cs
dec
in
dec
push
lock
push
sub
xchg
shl
leave
sbb
arpl
scas
jno
popf
add
mov
xchg
popa
mov
lds
lock
cld
push
and
inc
ret
in
jge
cmpsb
pop
xchg
xor
aas
hlt
xor
leave
sbb
pop
mov
jbe,pt
push
or
push
xchg
pop
mov
pushf
scas
and
sbb
data16
or
inc
xlat
bound
sbb
stos
rorb
inc
lods
cmpsb
insl
in
lahf
adc
xchg
rcll
xor
pop
xchg
cld
fcoms
lods
mov
lods
mov
test
lret
inc
cmp
fldenv
xor
pop
sub
pop
gs
or
into
mov
aam
pop
icebp
jmp
lods
inc
sub
rcrl
aam
cmpsl
addr16
nop
adc
pop
es
add
dec
mov
pop
dec
dec
daa
fldl
xor
nop
mov
sub
push
xchg
ja
xor
add
js
or
dec
imul
repz
sbbb
fidivs
mov
pop
and
ret
and
cltd
xlat
das
aas
rcll
inc
fmuls
lahf
test
lds
xchg
push
mov
adc
movsb
jns
mov
jge
mov
adc
iret
sub
and
addr16
mov
cmpsl
aas
fcmovnb
push
mov
push
and
inc
mov
xchg
dec
pop
dec
mov
add
andl
or
push
std
bound
dec
jge
mov
push
stos
in
fwait
xchg
ss
jo
xor
lds
incl
mov
mov
ret
inc
out
pop
jne
sbb
cmp
inc
sub
das
in
je
sbb
loope
mov
mov
cmpsl
mov
insl
inc
cltd
xchg
jecxz
andl
dec
addr16
cmp
addr16
dec
das
xchg
lret
lock
cli
dec
add
rcll
lret
insb
and
lock
int
lock
mov
adc
pop
test
repnz
lods
sub
enter
mov
inc
xchg
subl
out
enter
popa
or
das
inc
push
mov
jnp
and
cmpsb
test
mov
pop
sbb
and
jecxz
cltd
lret
adc
js
popf
push
ss
aaa
lock
pushf
xor
idivb
and
sarl
imul
hlt
jb
mov
leave
mov
sub
cmp
mov
push
in
stc
popa
sarl
add
das
jmp
mov
ret
aas
loope
or
pop
test
das
fistpll
push
fwait
scas
sub
adc
add
test
loop
mov
scas
lock
dec
mov
ss
imul
cmp
jg
iret
xchg
mov
out
mov
xor
cmc
fwait
shl
je
std
sub
addl
mov
cli
call
xchg
xlat
xor
adc
cli
sti
in
test
js
stc
adc
icebp
pop
adc
sub
lcall
fsubl
push
fsubs
mov
jne
lret
jmp
cld
xor
sbb
mov
dec
loopne
or
push
or
cmpsl
mov
dec
push
jmp
mov
cs
sbb
lods
adc
mov
lret
out
inc
pop
mov
fidivrs
xchg
loope
sbb
cwtl
fs
jg
adc
xor
ficoms
gs
lret
push
mov
sahf
sbb
test
mov
jo
mov
outsb
outsb
sahf
dec
mov
pop
popa
push
ja
sbb
mov
inc
dec
push
dec
outsb
push
movsl
add
add
test
add
adc
xchg
cmpsb
sub
pop
dec
pop
dec
and
or
xchg
jecxz
sub
mov
lock
or
int
popa
mov
es
xchg
add
add
xor
pop
inc
jge
push
or
add
out
and
push
imul
adc
pop
enter
inc
dec
leave
dec
xor
stos
mov
xchg
add
gs
mov
mov
shl
xor
out
sub
adc
sub
outsl
fcoml
sbb
iret
jmp
ret
pop
xchg
pop
ret
xchg
xchg
jmp
xor
repz
data16
mov
leave
push
xor
cli
push
xor
fbstp
sbb
test
and
fidivrs
adc
mov
test
push
ja
or
sbb
sub
jnp
or
leave
repz
mull
pop
pushl
xor
and
aad
les
mov
push
test
jmp
push
sbb
gs
lods
mov
cs
outsl
and
aam
or
ficompl
lods
shr
jmp
push
je
lret
and
and
and
inc
pop
into
mov
xor
push
xchg
push
loop
xorb
dec
dec
xchg
mov
stos
pop
je
shll
jmp
ret
cwtl
lock
xor
adc
sahf
push
test
and
test
sbb
push
dec
inc
pop
mov
or
adc
je
daa
popa
cmc
inc
ljmp
pop
test
cmpl
int3
xchg
notb
outsl
sub
mov
mov
xlat
std
nop
cli
cmp
in
fidivs
je
les
or
jmp
pop
xlat
cmp
adc
bound
or
addr16
movsl
ret
rclb
fistps
inc
jb
xor
flds
xlat
outsb
sub
mov
popf
outsl
or
xor
mov
repnz
xchg
popa
mov
subl
xor
scas
lahf
icebp
mov
push
ljmp
mov
out
mov
push
inc
mov
call
mov
out
add
aam
fisttpl
rcpps
push
dec
in
dec
rorb
and
sbb
pop
negl
sbb
test
outsb
mov
pop
dec
subl
cmpsb
xor
dec
cmpsb
stos
cmp
sbb
insb
add
in
mov
jo
adc
stc
pop
mov
sub
jp
rcl
cwtl
rcrl
cld
cmpsl
adc
mov
loope
cmp
ret
cmpsb
cli
in
es
ja
inc
pop
mov
xorb
cld
icebp
xchg
add
sub
adc
cmpsl
inc
jg
mov
mov
test
sbb
scas
mov
mov
imul
add
nop
dec
jne
testb
adc
loop
mov
fmul
aas
xchg
sti
movsb
inc
lods
loop,pn
rcll
lods
inc
mov
inc
adc
push
in
outsl
jae
fwait
sub
push
sbb
push
jns
std
dec
les
pop
adc
jl
in
dec
int
fcmovb
jle
jecxz
cwtl
sub
aaa
scas
imul
popf
xchg
push
push
test
mov
aam
mov
das
and
into
sub
xchg
testl
dec
mov
cli
jne
push
sub
pushf
sarl
in
mov
sbb
xchg
push
adc
fstp
push
mov
inc
lret
push
add
sub
aaa
inc
pop
pop
jne
push
in
push
std
sub
xor
aas
xor
test
fwait
sbb
scas
xor
pop
mov
add
lcall
clc
push
mov
cltd
popf
push
sub
sahf
jo
fidivrl
and
aam
pusha
jo
fs
mov
cmp
out
jecxz
mov
add
adc
mov
pop
mov
xor
cld
inc
mov
lahf
rcl
sub
outsb
inc
sbb
pop
mov
xchg
inc
mov
insl
daa
test
dec
popa
pop
dec
pop
xor
pop
or
sbb
dec
jle
add
xor
int
icebp
cmp
mov
in
arpl
mov
fbstp
mov
aad
jae
das
jle
out
or
hlt
jge
pop
pop
inc
inc
jb
xchg
push
outsl
lods
mov
push
shlb
mov
sbb
ja
cli
test
inc
loopne
jle
sub
jl,pt
dec
inc
mov
fs
and
inc
adc
mov
jp
lret
ds
add
adc
sbb
jg
cmpsb
sti
aad
mov
mov
cmpsl
jg
add
mov
ror
fs
push
or
xchg
enter
inc
insl
xor
sbb
add
iretw
and
test
orb
jb
movsl
push
subl
sub
xor
dec
fwait
sbb
shl
add
loop
adc
or
xor
mov
add
sub
or
mov
xor
iret
push
mov
data16
popf
mov
inc
out
in
fsubp
clc
or
xchg
mov
push
into
mov
enter
push
lods
add
or
mov
sbb
adc
or
adc
or
inc
push
adc
adc
scas
inc
xor
sahf
dec
or
aam
xor
js
inc
je
movl
pop
sti
and
mov
xchg
inc
xor
je
cmp
lahf
fstpt
gs
push
push
xchg
imul
fwait
insb
xchg
leave
jno
dec
fstpl
sub
test
addr16
mov
testl
mov
pop
in
lcall
imul
enter
mov
mov
out
shll
loop
pop
sbb
pop
mov
jecxz
clc
cmp
pushf
mov
xchg
cld
cmp
push
jecxz
nop
push
sbb
pop
sarb
in
push
addr16
or
rclb
cmp
pop
lds
iret
dec
imul
ret
mov
into
cld
xor
pop
daa
xchg
xchg
divl
lahf
jno
xor
cli
cmp
dec
fisubl
push
ja
lea
fldl
mov
inc
sbb
mov
mov
jmp
add
push
movsb
adc
mov
push
mov
cmp
imul
repz
lret
scas
fwait
jne
imulb
inc
dec
jle
add
push
mov
jl
test
cmp
stos
and
shll
or
jno
inc
pop
cltd
movsb
cmpsb
push
cmpsb
fs
cs
cmp
pop
push
jbe
jmp
shl
xor
bound
sub
adc
aaa
pop
xor
dec
leave
jo
icebp
std
add
sbb
adc
cs
mov
inc
das
sub
mov
std
push
mov
push
push
add
xchg
xor
dec
and
sbb
test
mov
sub
aas
mov
jmp
sbbl
fcoml
insb
lahf
loop,pt
add
cmc
cmpsl
cmpsl
in
pop
imul
and
aas
shlb
jg
cwtl
jg
ret
jmp
subl
fsubrs
or
in
popf
imul
cwtl
or
arpl
nop
mov
aad
sub
mov
fstp
inc
inc
jecxz
sub
push
pop
arpl
add
pop
fidivrl
fsubrl
add
xor
dec
cmp
aaa
shl
cmpsl
popa
in
fs
loop
rcrl
arpl
adc
je
inc
in
jnp
loopne
or
scas
cld
xor
fists
mov
or
xchg
in
mov
bound
push
loopne
adc
cmp
lods
cli
jp
in
dec
or
enter
sub
or
jnp
cmpsb
add
adc
lret
test
cmp
xchg
jnp
cmp
popa
int3
sub
jns
inc
cwtl
xor
and
or
inc
sti
ret
or
enter
fldenv
repz
imul
inc
movsl
pushf
jg
mov
xchg
adc
jb
mov
dec
addb
xchg
mov
cmpsl
test
and
pop
or
pushf
movsl
popl
sahf
stos
out
loopne
test
and
push
dec
rcrb
movsb
pop
push
sub
test
dec
pop
call
test
xlat
dec
sbb
add
adc
xchg
clc
out
mov
jne
inc
sti
or
cmp
ljmp
push
test
fwait
jae
in
stos
mov
fistpll
mov
test
fcmovu
adcl
gs
sub
xor
fwait
xchg
jno
pop
cmpsl
mov
rcl
inc
pusha
mov
push
jecxz
jne
add
outsb
xor
dec
or
and
in
movsb
pop
xor
sub
loop
into
mov
dec
mov
sbbb
enter
ret
jnp
pusha
fisubl
jo
ret
pop
push
call
test
mov
cli
xor
pop
testl
iret
fsubrs
push
xor
pushf
ds
gs
es
cli
stos
fld
sub
movsb
dec
dec
out
and
fsts
xor
xchg
jo
mov
jno
mov
push
jmp
mov
sbb
sub
sub
lods
bound
inc
push
mov
cmp
inc
mov
je
sub
inc
rclb
push
lret
inc
sub
test
out
test
add
ja
call
mov
fs
mov
lcall
mov
imul
push
mov
fiaddl
in
dec
dec
aaa
mov
pop
jae
or
xlat
sbb
jbe
mov
or
out
adc
and
shrb
enter
jle
aaa
pop
pop
push
jge
pop
push
push
fs
cli
scas
pop
inc
mov
mov
out
jb
lret
push
add
push
gs
adc
jecxz
cmpsb
int3
jno
pop
scas
adc
push
cs
stc
mov
fidivrl
push
cs
push
xchg
push
repz
inc
and
fistpl
xor
test
sbb
cwtl
mov
adc
sbb
push
into
orl
rorb
mov
jo
inc
push
movsl
mov
jp
insb
fsincos
es
push
xor
jb
mov
jo
jae
mov
mov
test
sbb
mov
add
xchg
mov
fs
push
lret
scas
push
into
outsl
inc
adc
xchg
jg
jge
shl
sar
jle
mov
inc
cltd
int3
pop
mov
mov
mov
out
mov
into
sbb
out
fcmovu
aas
aas
add
mov
xor
sub
pop
mov
add
insl
jecxz
cltd
js
aas
aas
int3
and
cltd
or
mov
out
jecxz
sar
ret
or
insb
xchg
cmp
rep
lea
mov
jnp
arpl
sbb
lret
cmpsl
inc
mov
sar
xor
stos
add
push
js
cli
in
mov
add
pop
jge
fildll
dec
popfw
mov
push
je
test
jecxz
pop
arpl
in
jmp
pushf
add
sub
dec
icebp
mov
bnd
ds
into
fisubl
adc
sbb
add
cmc
movsb
sti
push
movsb
rcrl
daa
cld
scas
divl
cltd
mov
xor
lds
and
add
cmp
iret
loope
push
xor
mov
test
push
daa
mov
aad
adc
icebp
js
shr
push
out
add
aad
mov
cmp
mov
jbe
lret
nop
sbb
add
jae
movsb
enter
xlat
jg
sub
pop
into
cltd
pop
xor
push
cmp
xor
mov
lret
or
dec
mov
push
xchg
pop
mov
mov
test
adc
mov
adc
or
sub
in
add
xlat
xor
arpl
or
sar
jnp
mov
out
divl
xor
jns
pop
daa
xor
xchg
in
loopne
sub
mov
inc
push
mov
xor
dec
mov
jne
movsl
daa
cmp
add
pop
icebp
dec
inc
fcoms
cmc
fildl
inc
adc
mov
stc
xchg
cmpsl
jb
xor
test
mov
lret
in
sbb
repnz
inc
and
clc
cs
imulb
xchg
sub
repz
insl
in
fwait
shrl
add
lahf
jp
mov
loope
inc
mov
cli
sbb
lret
push
sbb
adcl
sbb
jmp
movsl
inc
mov
lea
ja
dec
movsl
xor
mov
ja
jno
addr16
jmp
cmp
mov
lret
scas
xchg
adc
mov
aaa
outsb
cwtl
inc
xchg
mov
mov
xchg
in
rol
mov
dec
xchg
aas
int
scas
stc
inc
aaa
and
add
mov
mull
das
xor
xlat
xor
test
or
fmull
push
mov
adc
cli
and
stc
enter
xchg
pop
jl
pop
sub
push
in
sbb
enter
ret
loopne
mov
push
lods
int3
lock
jb
mov
repz
add
push
ret
pop
lahf
push
mov
sbb
mov
iret
push
push
mov
popa
int
fstl
leave
inc
ret
cmpsb
out
es
push
inc
mov
push
sub
popf
int
jne
and
int
inc
mov
ds
dec
jb
push
ret
xchg
subl
psrlw
jne
adc
data16
inc
out
in
mov
jnp
pop
add
stos
or
insb
jnp
ret
movsl
lret
movl
mov
xor
mov
les
and
fs
pop
loope
cmpl
daa
pop
pushf
cmp
popf
jmp
int3
and
rcrb
mov
movsb
sbb
mov
adc
insb
pop
movsl
pop
mov
subl
fistpl
andl
mov
cmpsb
gs
sub
xchg
push
lcall
xor
loope
shl
std
fcmovbe
aad
jp
cmp
ljmp
mov
int
roll
and
insl
jmp
dec
cmpsl
mov
pop
and
push
mov
data16
sbbl
out
popa
cli
mov
xor
jns
and
push
insb
loopne
cmpsl
outsl
in
jbe
int
movsl
and
cmp
test
dec
or
iret
inc
mov
push
inc
sarl
aas
int3
push
mov
jbe
dec
mov
fmull
ljmp
pop
cld
pop
cvtdq2ps
adc
cmp
cmp
jg
addr16
loopne
pop
sbb
xchg
ljmp
add
jbe
cltd
adc
adc
test
outsb
or
jns
rorl
iret
sti
icebp
xorl
jno
bound
adc
cmp
sbb
test
test
cmp
adc
cmpsl
fistps
xchg
xchg
inc
inc
in
sbb
xchg
push
aam
aad
mov
sti
fdivrl
mov
pop
cmpsb
fmuls
fcomps
icebp
in
out
cmpsl
sub
mov
fcoml
pop
jmp
sub
int
sbb
ja
and
adc
subb
enter
adc
xchg
sub
xchg
cmp
insl
lock
fsubrl
aas
pushf
call
xchg
or
dec
dec
andb
pop
or
rol
das
jle
mov
pop
popa
das
mov
mov
xor
repnz
ljmp
pop
lods
push
sub
cltd
add
in
mov
enter
outsl
mov
mov
call
pop
xchg
cmp
or
xchg
scas
mov
pop
mov
pop
fsubl
clc
out
sbb
pop
or
lds
test
roll
lods
jl
arpl
and
ja
movsb
sbb
movsl
fidivl
shr
imul
lret
pusha
push
orb
xor
add
jecxz
cmp
pushf
add
xor
mov
daa
hlt
mov
out
cmpsb
mov
mov
les
cmpsl
or
pusha
addl
pop
push
clc
sbb
cmp
adc
je
insb
add
xchg
call
mov
negb
scas
jl
cwtl
push
jbe
or
mov
push
jb
push
iret
shl
push
cmp
lea
and
sub
lods
into
test
pusha
ljmp
dec
add
shlb
std
mov
cltd
aam
in
test
dec
dec
jp
inc
test
shlb
dec
aaa
xchg
add
xor
mov
imul
in
mov
insb
xchg
jl
pop
inc
pop
xchg
bound
popf
movsb
fsubrs
sub
jmp
call
jp
or
fsubs
inc
mov
mov
and
addr16
iret
push
ficomps
data16
xor
pop
icebp
pop
sbb
and
or
jb
repz
jmp
sub
in
jmp
fildll
cmpsl
aaa
loop
jno
loopne
push
mov
sub
mov
adc
lahf
gs
push
mov
aad
out
mov
shl
jno
lcall
das
imul
stos
icebp
lods
push
mov
sub
gs
mov
fisubrl
sub
xor
jle
mov
jmp
bnd
dec
jmp
dec
xorb
mov
pop
shl
scas
mov
cmp
bound
ret
push
mov
xchg
imul
iret
xor
jbe
dec
insb
sbb
cmpsl
dec
jg
mov
pop
js
mov
dec
lret
mov
pop
mov
mov
out
je
ss
aaa
jp
and
fs
addps
xor
sbb
sub
movsl
std
xchg
aam
leave
int3
into
ret
stc
outsb
jp
pop
lret
dec
mov
aas
out
scas
add
add
imul
mov
mov
cmp
pop
dec
xor
pop
add
test
add
mov
xchg
jp
inc
outsb
pusha
fcmove
in
int
insb
loope
mov
rcl
and
ret
mov
mov
cs
add
rcll
mov
mov
mov
stos
insb
int
mov
or
fnstenv
nop
out
push
jecxz
mov
js
pop
mov
mov
add
inc
sbb
sub
into
jp
bound
push
pop
aad
pop
repnz
mov
decb
cmp
cmc
mov
orl
xchg
stos
cmc
or
push
into
inc
jnp
cli
arpl
inc
jae
push
mov
lods
push
mov
rorl
mov
sub
ror
loope
int
or
pop
mov
enter
cltd
dec
cltd
cmp
test
sub
aad
xchg
cmp
mov
mov
and
xchg
and
xor
dec
sub
xchg
inc
call
xor
mov
popa
mov
outsb
es
arpl
push
test
out
jecxz
push
jge
and
fnstsw
incl
test
dec
adc
sub
fwait
mov
inc
rolb
xorl
ja
pusha
jp
mov
mov
mov
out
sub
pop
jecxz
hlt
ds
popf
and
xlat
sahf
or
jbe
fdivrs
clc
adc
or
dec
mov
sti
xor
out
testl
push
jb
cmp
int3
jb
imul
sub
adc
adc
and
int
push
inc
je
fcoms
cmp
lock
test
push
movsl
pushf
repnz
cld
push
lret
aad
pop
push
jo
into
xchg
stos
out
aad
mov
mov
mov
inc
ret
mov
mov
loope
push
xor
movsl
sbb
jle
popa
xor
nop
mov
xchg
mov
insl
test
nop
pop
movl
mov
stos
mov
xchg
cwtl
jo
jmp
fdivrl
cmp
lret
cmpsl
cmp
stos
test
adc
mov
or
sti
pop
loope
add
sbbb
and
xorl
sbb
pushf
out
cli
jl
push
arpl
cli
test
in
lea
arpl
jg
xchg
enter
js
add
pop
adc
jmp
adc
xor
inc
setle
out
pop
fcoml
int
icebp
mov
dec
or
jle
daa
shrl
insl
sbb
out
sahf
aaa
adc
sbb
xchg
sbb
xor
push
xchg
in
stos
outsb
pop
rclb
and
nop
out
inc
xor
int3
int3
cli
and
call
in
inc
push
das
fldcw
push
or
in
or
jo
mov
fdivr
adc
aad
daa
jge
popa
or
movsl
cmp
sahf
xchg
xchg
mov
and
out
arpl
cwtl
pop
mov
jno
ss
add
mov
dec
xor
mov
dec
or
repnz
test
push
jg
subl
loopne
inc
pop
push
xchg
add
sbb
popa
enter
xor
pop
faddl
test
add
sahf
imul
inc
loopne
test
cld
ud0
xchg
jbe
or
into
add
sub
add
pop
jl
adc
loopne
cmp
ja
mov
in
lahf
shll
jmp
adc
mov
dec
cltd
leave
fnstenv
or
push
insb
lcall
mov
push
cmp
push
das
repnz
rcrl
cltd
in
je
xor
lods
add
fwait
ret
and
adc
mov
imul
imul
fists
fwait
mov
outsb
shrl
pop
push
aam
in
and
fnstenv
cs
and
sub
cmpsl
mov
push
xchg
std
dec
mov
mov
lock
stos
in
add
test
bound
sbb
fwait
loope,pn
out
sub
shlb
lock
push
sarl
popa
outsl
in
insb
icebp
jmp
mov
jmp
adc
cld
loope
out
aad
test
sub
in
enter
adc
xor
pop
inc
xor
xchg
loope
push
mov
stos
decl
dec
rorl
mov
cmpsb
xchg
mov
jo
push
inc
rcrb
xor
dec
push
cltd
mov
sub
pop
int3
sbb
mov
ja
leave
mov
sub
popa
xor
pushf
jmp
inc
les
or
insb
adc
mov
jmp
xor
sahf
shl
outsb
mov
sbb
enter
aam
loopne
and
add
popa
adc
cmp
dec
cmp
xlat
jb
mov
dec
pop
dec
cli
scas
test
into
xor
insl
xor
gs
insb
ja
bound
addr16
movsb
jno
subl
smsw
hlt
xor
js
decl
iret
xorl
push
jg
mov
loopne
imul
cwtl
inc
dec
sbb
sbb
loop
repnz
scas
lock
inc
jbe
sbb
push
sbb
pop
cs
sub
xchg
out
or
push
andb
inc
mov
mov
fistl
mov
and
outsb
push
fistl
dec
cmpsb
imul
pop
jne
std
add
incl
or
push
jle
add
jge
jnp
jp
pop
inc
sbb
adc
repz
fisttpl
mov
jae
mov
add
scas
jle
cmp
xchg
jbe
add
cmp
pop
inc
dec
jns
ret
push
fsubl
call
mov
cmpsb
test
popl
into
adc
jmp
loopne
xchg
or
mov
xchg
int
adcl
outsl
stos
dec
test
cmp
fcoml
stos
sub
mov
roll
mov
inc
in
dec
loop
pop
test
and
sahf
push
mov
add
adc
mov
lock
pop
adc
add
xor
mov
push
sbb
arpl
je
stc
push
lret
mov
or
mov
pop
inc
fldt
addr16
cmpsl
sbb
sub
pusha
fsubr
jl
aas
lret
insl
xchg
lds
and
nop
mov
push
xor
insl
push
sbb
test
aam
imul
inc
ss
in
fiadds
mov
mov
jae
testb
xchg
dec
push
loope
stos
jge
sub
jmp
rorl
repnz
mov
aas
add
cmp
jg
lahf
mov
jge
inc
mov
push
add
dec
jle
or
loopne
popf
pop
xchg
fistpll
fiadds
scas
aad
push
in
scas
outsb
repz
jnp
pop
pushl
hlt
add
mov
aas
pop
xor
scas
adc
lcall
dec
sub
out
jbe
mov
faddl
push
fisubl
std
jle
push
lds
repnz
pop
mov
sbb
test
jecxz
iret
xor
je
sbb
test
js
ja
push
sub
add
lods
jg
mov
mov
out
pop
jno
or
movsb
jmp
rorb
pop
dec
sub
movsl
insb
cld
sahf
pop
pop
cmp
popf
cmc
sub
jo
inc
and
push
cmp
aam
test
movsl
jg
add
jo
and
cmp
loopne
mov
cmpsb
mov
add
stos
out
out
pop
push
in
push
xor
mov
and
adc
mov
pop
jo
add
sub
shl
xchg
inc
outsb
repnz
pop
sti
xchg
in
inc
xlat
xor
inc
sub
mov
loope
stos
sbb
add
arpl
jno
inc
cmp
add
add
and
jp
jge
inc
pop
push
ljmp
add
add
and
insl
ficoms
in
outsb
mov
adc
inc
adc
push
das
bound
lret
rcrl
in
lahf
out
xor
rcll
xchg
fdivl
cmp
shl
pop
jp
repz
mov
in
rcrb
push
std
adc
add
mov
scas
mul
daa
or
mov
bound
sub
inc
xor
lret
mov
push
insb
xor
in
mov
fs
divb
leave
push
dec
pushf
and
test
shlb
xchg
testl
sub
mov
rorl
mov
pop
rorb
pop
xchg
cmp
std
data16
dec
adc
stos
and
mov
icebp
stos
inc
aas
xchg
add
mov
adc
cld
or
subb
add
jp
mov
mov
mov
cmp
mov
mov
inc
insb
jle
out
sbb
sub
inc
data16
mov
out
mov
sbb
fmull
cmp
push
adc
imul
iret
sbb
add
mov
mov
sti
popf
mov
mov
call
mov
cmp
ds
mov
adc
rol
ljmp
stc
leave
mov
jb
xor
test
insl
out
mov
aas
adc
mov
int3
es
nop
ret
sbb
push
push
mov
in
fs
lock
sub
and
pop
inc
fisubrl
mull
pop
stc
xchg
stc
sbb
adc
push
push
call
sbb
xor
ret
jne
pop
ret
adc
xor
popf
fistps
jae
inc
sbb
fsubl
cmc
jecxz
mov
sub
leave
add
mov
sti
xor
pusha
sbb
jbe
in
mov
cltd
je
mov
outsb
jno
mov
ss
orb
scas
pop
movsb
shlb
rcl
call
xchg
push
push
iret
cmpsl
jne
cmp
in
mov
mov
mov
pcmpeqw
push
jnp
rolb
push
sub
mov
inc
cmp
push
adc
cmc
cltd
sbb
mov
cmp
add
jne
scas
js
ret
sbb
lods
add
es
add
stos
and
call
lods
xchg
push
push
cmp
enter
dec
sbb
push
in
outsl
mov
cmp
sbb
ret
lods
mov
mov
fisubrs
pop
es
xchg
test
inc
shr
push
pop
inc
jle
push
imul
popa
mov
into
stos
xor
sub
push
jecxz
or
int
stos
sub
fwait
lret
dec
mov
xor
dec
adc
int3
mov
dec
and
stos
adc
pop
pop
xor
mov
pop
inc
cmp
mov
jge
cld
push
pusha
mov
repz
es
imul
pop
mov
arpl
jmp
jbe
in
scas
fiadds
dec
or
test
adc
jecxz
int3
fistps
lahf
jle
push
push
inc
cwtl
pushf
into
les
es
dec
fcmovu
bound
cmpsb
inc
jae
xor
repz
pop
sbb
pop
and
fiadds
jecxz
xchg
mov
mov
mov
xchg
hlt
adc
pop
sub
sbb
sub
out
sbb
xor
sbb
mov
push
xchg
mov
push
and
addr16
mov
lods
insb
jnp
mov
repz
xchg
cmp
push
outsl
jl
push
insb
xor
cmp
daa
inc
xchg
cld
inc
mov
xchg
mov
leave
in
cli
sbb
loop
and
xor
enter
lods
cmp
and
or
ljmp
mov
int3
adc
or
adcl
aam
jo
jbe
into
sbb
fs
sub
rcrl
jo
fscale
daa
sub
inc
ret
mov
aad
xchg
sub
inc
jecxz
popf
je
je
jo
scas
insl
sbb
dec
arpl
xor
pop
xor
mov
adc
pop
jge
enter
test
push
mov
mov
and
sub
dec
mov
fwait
das
mov
lock
cmp
xchg
dec
sbb
aas
mov
in
addb
sbb
aaa
ljmp
je
movsl
aas
dec
adc
pushf
dec
xor
rclb
pop
int
dec
std
test
lret
mov
repnz
adc
outsl
cmp
mov
push
push
cmc
push
stos
nop
jno
xchg
push
push
inc
cmc
aaa
iret
mov
cmc
ja
in
jmp
mov
es
xchg
xchg
dec
mov
push
ret
xchg
popa
add
push
sub
subb
nop
mov
jmp
aaa
push
int3
es
mov
lret
fdivp
cmp
cmp
jle
into
fdivs
xchg
add
ss
mov
shll
cli
xchg
rol
lahf
incl
push
into
add
aam
mov
xor
cmp
xchg
pop
in
add
adc
or
stc
sbb
aam
mov
adc
cmp
pop
cld
scas
xor
sub
adc
or
insl
xchg
fadds
add
jle
mov
pop
jo
and
fbld
repnz
les
push
sar
push
stos
je
stc
xor
sub
xchg
push
inc
in
cmp
je
mov
rep
xchg
fidivs
std
mov
lock
xchg
call
movsb
push
sub
mov
shl
aas
pop
sbb
pushf
mov
out
jle
rorb
mov
pshufw
ret
enter
out
jb
add
xlat
jp
xchg
stos
lcall
js
ljmp
movsb
xchg
cmp
subb
popa
pop
mov
test
mov
loope
mov
inc
inc
xchg
inc
sbb
dec
popf
gs
cmpsl
pop
adc
js
or
nop
jo
xchg
cmc
adc
mov
shrl
out
inc
lcall
and
loop
mov
das
pop
cltd
inc
scas
out
add
data16
inc
fwait
aam
ljmp
fsts
fadd
xchg
cmp
dec
jae
aaa
loopne
push
dec
lods
pop
add
jg
mov
add
aam
push
push
aas
mov
jl
fwait
and
aaa
and
mov
outsl
call
cs
ds
repnz
and
sub
aam
sub
pop
push
xor
mov
les
dec
jbe
in
dec
movsl
lahf
mov
xchg
jmp
lds
aas
pop
cmpsl
and
or
cmp
dec
loop
sti
inc
mov
sub
ja
cwtl
mov
test
lret
xchg
insb
xor
cltd
xchg
addr16
mov
sub
or
jge
stos
imul
and
jle
popf
in
cs
add
or
in
fdiv
xchg
fiaddl
popl
in
mov
fxch
and
addr16
xor
ret
in
and
inc
data16
inc
out
lds
lods
jp
push
jns
shlb
mov
pop
sbb
add
jns
sbb
xor
jp
in
lahf
mov
xchg
lock
mov
outsl
pop
add
insb
test
mov
dec
xor
pop
lock
aaa
in
nop
jnp
stc
bound
mov
mov
mov
ljmp
cmpsl
cmpb
pop
jb
mov
arpl
xchg
push
xchg
test
stos
and
xchg
pusha
test
loopne
push
stos
xchg
roll
xlat
xlat
jns
pop
scas
cmp
lds
mov
xor
ja
jg
les
cmp
fwait
stos
mov
rcrl
xlat
mov
dec
cs
and
loopne
ficoms
repnz
add
jno
or
rolb
add
mov
or
push
in
or
movsl
aaa
adc
or
test
push
insb
add
fprem1
cmp
jmp
stos
js
jmp
sahf
xchg
test
cmp
push
xor
add
add
sti
or
cli
sti
xchg
xchg
fcmovbe
popf
mov
jp
push
rcll
cltd
in
data16
mov
add
je
mov
mov
movsb
inc
sti
and
dec
outsb
cli
in
push
das
cmpsl
adc
inc
lods
lret
inc
shr
xchg
adc
lock
jmp
mov
roll
out
sbb
inc
fisttpl
sti
popa
xlat
adc
add
sub
mov
cmc
es
dec
cmp
push
adc
iret
cmpsl
pop
jns
shl
inc
adcb
mov
xchg
xchg
lods
push
mov
sbb
jo
in
out
cwtl
jbe
add
sub
push
mov
je
ss
jecxz
sbb
movsl
sahf
jne
inc
into
xor
ss
xor
push
mov
adc
or
cmpsb
hlt
xchg
lret
mov
sbb
sahf
dec
push
and
adc
gs
xchg
push
pop
dec
cld
pop
fcompl
mov
xor
xchg
jmp
pop
cmp
jl
add
or
mov
jno
int3
lret
or
inc
in
call
dec
jo
int
dec
and
call
shrl
adc
mov
sarl
pop
push
or
shlb
aad
xchg
popf
popa
les
daa
je
loope
shlb
dec
push
sub
sbb
les
inc
pushf
in
mov
stc
mov
jp
dec
fcoms
mov
incb
fwait
xchg
insb
scas
pusha
mov
ret
repz
jmp
rcrl
mov
lcall
das
popl
data16
popa
xor
fildll
int3
fsubr
inc
inc
in
movsl
lock
mov
add
les
pop
push
dec
jno
xor
sub
out
and
mov
fwait
mov
test
or
subl
mov
sbb
mov
and
pusha
add
dec
xor
out
or
and
ljmp
out
cmp
dec
rcr
test
xchg
int3
jns
popf
push
xchg
mov
movsb
fstpl
or
inc
inc
mov
into
pop
cmp
cmp
lds
jg
fstl
add
lods
mov
fimull
add
mov
push
sbb
ret
jne
dec
adc
out
xchg
mov
icebp
dec
fwait
mov
mov
push
test
cmc
or
xor
cwtl
pop
inc
enter
incb
pop
jge
push
xor
jne
pop
mov
sbb
ret
dec
rclb
lahf
arpl
in
mov
jns
add
jle
lcall
xor
mov
insb
xchg
das
cwtl
cltd
repnz
sbb
cltd
test
das
insl
and
gs
lods
jg
adcl
insl
jne
dec
stc
cmpsb
loope
dec
enter
pop
mov
or
lret
sti
ds
in
mov
cmp
aam
std
pop
cmp
hlt
or
mov
in
shlb
xlat
adc
jae
iret
in
arpl
push
das
mov
fildl
or
jae
adc
pop
sbb
jmp
test
mov
xor
insl
jmp
popa
jnp
addr16
add
cmc
cli
test
lea
xchg
dec
inc
or
loopne
insb
mov
push
jl
mov
inc
jns
cmp
dec
sbb
inc
adc
jecxz
sub
jns
xchg
and
sar
pop
dec
sbb
adc
dec
cmp
xor
ret
inc
sub
lods
push
test
adc
adc
inc
xor
sbb
fisttps
ret
mov
ja
jne
imul
push
mov
sbb
xor
or
cmp
inc
jns
xchg
jnp
test
in
cmp
test
xor
sbb
in
mov
int3
mov
sub
sub
repz
je
adc
fsubr
and
and
stos
aam
out
stc
mov
popf
xchg
sub
mov
daa
in
js
sti
sub
loop
xor
lcall
xchg
or
cmp
repnz
mov
out
inc
xor
rolb
jle
fisttps
cmp
sbb
out
scas
mov
outsl
sub
cli
pushf
in
mull
mov
insb
xor
push
mov
sahf
repnz
movsl
out
pusha
mov
das
cs
dec
pushf
lret
enter
in
pushf
pop
mov
xor
push
subw
xor
jbe
adc
sbb
mov
fldenv
inc
push
fisubs
scas
out
xor
mov
stc
ss
and
jmp
loop
mov
push
or
popa
fmulp
cmp
jg
cmp
mov
add
xchg
jno
das
outsb
push
pop
repnz
out
lods
inc
test
enter
xchg
or
dec
sbb
adc
cmc
adc
loopne
pop
cmc
movsb
xlat
push
jb
mov
pop
sbb
inc
jmp
ds
and
mov
aad
and
adc
or
stos
outsl
cltd
push
cmp
add
pop
xchg
inc
shll
cs
out
cmp
outsb
fdivr
or
inc
jns
ja
adc
jmp
jg
js
add
mov
insl
scas
and
push
cmpsb
hlt
out
xor
ret
pusha
and
mov
sub
xorb
lret
cmp
add
pop
loopne
adc
mov
adc
adc
mov
cmp
mov
dec
call
js
lods
jle
inc
mov
xor
test
out
daa
aas
mov
jl
xor
push
inc
xor
insb
subb
sub
inc
aas
adc
mov
pop
push
jp
cs
loopne
push
loope
xor
out
mov
sbb
and
xchg
cmpsl
in
inc
jg
int
stos
mov
sub
cmp
movsl
sbb
stos
cmp
dec
out
stos
roll
fdivl
add
sahf
mov
lret
jecxz
movsl
sbb
int3
imul
dec
out
pop
out
sub
pop
lods
das
dec
cmc
sub
in
sbb
mov
push
repnz
mov
lock
jl
popa
inc
adc
ret
popf
push
out
and
ficomps
mov
xor
mov
push
mov
mov
xchg
sbb
testb
iret
xchg
stos
out
dec
pop
shr
fldt
arpl
lock
xor
cmp
int3
dec
je
inc
out
fisttpll
jae
pop
pop
repnz
push
add
aam
cmp
dec
popf
das
sbb
sub
ret
inc
ja
pop
inc
test
in
xlat
add
sub
dec
push
and
and
sbb
push
push
nop
pop
xchg
ja
add
cmp
cmp
mov
cwtl
push
pop
push
add
dec
pop
mov
test
xchg
or
orb
test
aas
mov
inc
sahf
cli
mov
out
add
sbb
ret
and
les
mov
pushf
sbb
dec
dec
xchg
dec
mov
cli
xor
stc
call
and
cs
mov
cmp
dec
aam
ja
loope
bound
aam
jle
inc
inc
test
xor
dec
loope
mov
test
clc
sub
inc
fwait
ret
or
xchg
pop
xor
xor
wbinvd
shrd
lock
inc
push
add
adc
pop
gs
inc
jae
pop
mov
imul
or
cmovp
mov
into
mov
jmp
clc
inc
xchg
jae
pop
adc
sub
push
aas
xor
mov
testb
push
loope
lret
xchg
and
push
push
in
dec
or
test
sbb
in
lods
inc
decl
stc
push
push
dec
out
inc
pop
jbe
mov
nop
gs
dec
movsb
adc
fists
fidivl
mov
or
pop
dec
pop
cwtl
icebp
push
popa
fldl
cli
push
out
stos
cmc
dec
imul
arpl
mov
sbb
cwtl
dec
hlt
mov
js
rorb
cltd
dec
clc
in
mov
ljmp
je
or
sbb
push
dec
mov
inc
callw
pop
push
mov
sbb
gs
sti
mov
sub
push
leave
rcr
xchg
xor
scas
ja
pop
xor
out
rol
jl
pop
dec
pop
aas
dec
out
mov
inc
dec
xlat
pushf
adcl
pushf
mov
outsb
shrb
shll
sahf
jo
push
add
xor
sub
dec
sahf
jbe
pop
or
cs
std
xor
jge
gs
lds
ret
mov
mov
lock
xchg
sarb
inc
mov
das
push
jne
or
xchg
arpl
mov
mov
repnz
sbb
jp
enter
mov
seta
aaa
aad
inc
int3
cmpsl
add
jae
xor
sahf
inc
mov
push
dec
adc
cmpsb
sub
addl
aas
dec
enter
repz
cltd
jae
mov
inc
dec
push
shrb
pop
out
push
ljmp
pop
mov
sbbb
pusha
jmp
push
push
movsb
lock
sti
frstor
sbb
xor
cmpsb
mov
jns
negb
mov
sahf
xchg
and
js
loop
add
adcb
fs
loop
fld1
sub
cmp
mov
imul
loop
mov
push
cmc
in
push
jnp
or
jge
addr16
jae
int3
bound
push
and
mov
ljmp
or
jb
outsb
cmp
fidivs
xchg
mov
mov
imul
mov
xchg
addl
or
dec
roll
inc
aam
sbb
pop
cmp
stos
sbb
into
or
mov
or
push
or
mov
mov
sti
xchg
in
es
mov
out
ljmp
sub
dec
adc
cmpsl
jns
lret
fcmovbe
loopne
ror
mov
cmp
js
sahf
loopne
cmp
xor
stc
push
jmp
cmp
sub
sbb
dec
out
aad
icebp
jae
xor
mov
cmp
scas
inc
icebp
xchg
aas
ret
push
push
mov
lods
test
or
aas
add
shrl
xor
shll
mov
enter
adc
movsl
jp
cmpsl
xchg
mov
pusha
adc
jl
loop
shrb
sub
mov
mov
push
inc
inc
daa
das
outsb
mov
sbb
push
mov
ss
push
push
les
test
mov
push
push
movsb
xchg
sub
lret
mov
imul
jl
pusha
lods
cmc
sbb
mov
jecxz
test
push
das
mov
pop
fwait
sbb
sbb
jmp
pop
inc
or
int3
push
mov
ret
jmp
stc
js
imul
mov
dec
lods
pop
add
mov
lods
mov
mov
aaa
push
nop
mov
jp
mov
rcrl
aaa
int
push
sub
xor
mov
mov
jmp
push
mov
int3
pop
pop
jmp
ljmp
cwtl
loop
add
push
jb
sub
stc
or
shrb
dec
rclb
mov
cmpsl
jmp
aaa
arpl
and
xchg
lcall
sbb
pop
into
lret
add
stos
movsl
mov
mov
mov
dec
test
inc
nop
xor
push
test
pop
mov
jae
and
inc
mov
in
xor
mov
xorb
loop
cmp
and
jecxz,pt
jp
push
dec
addr16
shl
mov
mov
jge
xchg
and
insl
dec
mov
xchg
iret
inc
ljmp
sbb
mov
add
sub
sbb
fidivrs
push
jns
loopne
popf
mov
fsub
scas
dec
push
popf
fildll
cmp
pop
ret
sub
pushf
or
pop
test
das
rcr
insb
pop
cmp
xor
movsl
xor
pop
adc
and
sbbb
mov
sub
cmp
lret
js
push
xchg
repz
inc
call
aas
xor
ss
arpl
mov
sbb
std
stos
cmp
addr16
imul
int3
or
xchg
mov
xchg
mov
movsb
dec
mov
loopne
add
cwtl
cmp
stos
lcall
mov
int3
pop
inc
cmpsl
je
pop
mov
popf
cwtl
push
ds
pop
xor
xor
shll
fadds
js
aas
pop
pop
in
push
in
cmp
mov
stos
repnz
pop
ljmp
push
sbb
lea
pop
sub
rorb
call
pushf
call
xchg
push
cltd
rcll
lds
adc
push
or
pop
push
push
cld
lahf
sahf
sbb
orl
cmpb
and
dec
xorl
in
in
rcrb
or
dec
dec
into
aaa
and
inc
ss
adc
out
dec
je
stc
push
xor
jbe
mov
mov
adc
and
jp
movswl
mov
mov
std
pop
dec
or
test
xor
sub
aas
mov
dec
dec
jnp
dec
stos
das
lods
lret
mov
push
jmp
add
push
test
outsl
sbb
add
negb
ret
push
je
pop
or
stos
mov
cmp
add
pop
icebp
adc
pushf
xchg
dec
jae
dec
mov
adc
sarb
sbb
scas
mov
jecxz
out
test
jo
les
adc
push
push
enter
fdivp
icebp
mov
and
sbb
xchg
es
jne
cmp
mov
inc
loop
push
sbb
sbbl
cs
adc
mov
jno
inc
stc
lock
jno
or
notb
mov
sbb
call
shlb
loopne
sti
das
push
jmp
pusha
cli
scas
into
and
icebp
cmp
or
and
data16
dec
divl
jno
push
push
sbb
repz
pop
jo
popf
mov
adc
cmc
adc
sub
dec
pop
pop
lea
insb
xchg
sbb
clc
add
in
out
clc
clc
add
shll
cmp
bound
mov
dec
clc
std
pop
fsubs
ds
cmpsb
test
mov
mov
adc
shr
lahf
out
cltd
mov
shl
insl
ret
scas
push
push
pop
xor
fiadds
scas
sub
aam
pop
mov
bound
ds
es
dec
mov
daa
cmp
dec
fdivs
push
clc
fldt
sub
mov
sti
pusha
lret
call
mov
sub
icebp
mov
das
add
jl
cli
dec
es
pop
fnstenv
nop
or
dec
jge
lret
jne
inc
pop
jne
pop
sub
mov
mov
js
push
or
out
pop
mov
outsb
mov
sub
pop
rcl
pop
shl
shrb
xlat
aam
notl
stos
jge
jb
in
mov
xchg
popa
cmp
pop
and
fldenv
test
or
adcl
cwtl
add
lahf
lods
mov
ret
dec
cmp
das
test
pop
out
inc
push
aaa
sahf
imul
xchg
data16
shl
sbb
push
aas
fisttpll
xor
xor
inc
repz
mov
or
and
jno
mov
fidivrl
popa
iret
xchg
ljmp
out
mov
aam
push
xor
rcrl
cmp
pcmpeqd
jae
ljmp
push
shll
iret
js
pop
test
sub
scas
jl
stos
mov
clc
sub
popa
or
mov
mov
shrl
jns
popa
push
jo
bound
gs
and
jge
inc
rorl
je
ss
or
fwait
push
xor
js
inc
jno
or
or
or
stc
and
xorl
xor
push
mov
pop
cmp
xchg
mov
sub
sbb
mov
subb
das
enter
inc
jle
mov
cmp
scas
mov
test
cld
rolb
dec
stos
pop
clc
cmp
in
enter
pop
dec
fisubl
pop
stos
lea
jl
sahf
sahf
sub
sub
rol
pop
les
dec
test
pop
mul
or
pop
repnz
mov
hlt
and
sarb
adc
lea
hlt
test
mov
repnz
xor
adc
mov
loopne
sbbb
mov
jg
cld
or
mov
push
sub
ret
fwait
mov
xor
dec
sub
cmp
mov
pushf
je
pop
mov
xchg
pop
jl
or
mov
pop
and
dec
sbb
stos
sarb
cmp
icebp
lods
icebp
lcall
add
mov
rclb
inc
xchg
pop
cld
cltd
cmc
cmp
outsb
dec
outsb
addb
pusha
lret
sahf
fcomip
cmpsl
adc
adc
cltd
push
sub
adc
mov
scas
scas
add
adc
aaa
push
dec
scas
mov
inc
ds
adc
scas
lret
mov
fistl
pop
daa
shlb
les
or
cmp
frstor
mov
leave
pop
into
cmp
into
xchg
lds
mov
mov
arpl
inc
jb
mov
ret
xor
sub
dec
flds
test
jmp
dec
ljmp
adc
nop
ss
js
ja
push
cmp
loope
cmp
enter
sbb
sub
sbb
sub
pop
jmp
das
sahf
sbb
or
adc
or
adc
mov
pop
push
inc
test
cmp
cmp
fwait
scas
and
pusha
mull
xorb
adc
sbb
dec
add
sub
dec
loopne
jns
bound
pop
jb
cwtl
sub
pop
jle
hlt
ljmpw
ljmp
daa
sbb
pop
and
or
scas
hlt
add
faddp
fnstsw
inc
imul
push
jp
sbb
adc
or
clc
mov
xor
mov
add
movsl
cli
jmp
roll
mov
pop
jge
push
lea
and
mov
addr16
fldlg2
pop
adc
arpl
cmp
cmp
out
loopne
jne
shlb
xor
cld
sub
fprem
jno
inc
cwtl
decl
mov
lahf
jbe
sbb
or
imul
xchg
sahf
mov
scas
jae
push
fistl
adc
pushf
mov
fdivrp
dec
sbb
mov
aaa
enter
bound
sahf
jge
jmp
dec
or
stos
xchg
aad
sbb
or
ret
jb
fwait
cmc
scas
push
imul
dec
and
jmp
jno
imul
xor
js
pusha
fs
arpl
inc
arpl
sub
cmp
xor
sbb
mov
imul
popf
mov
inc
inc
jg
in
dec
loope
popa
push
mov
dec
enter
shrb
int3
es
jo
sub
popa
sti
mov
mov
std
inc
adc
nop
sbb
out
jmp
pop
inc
mov
and
stos
jns
scas
insl
push
xchg
push
mov
xchg
dec
cmp
loope
or
or
test
jo
scas
sub
test
daa
push
fyl2x
popa
mov
sub
mov
mov
sbb
add
pop
js
or
ljmp
cmp
or
enter
addr16
mov
jbe
sub
jp
sub
scas
in
pop
pop
adcb
cmp
movsl
xor
roll
lahf
movsb
test
sbb
es
sbb
xchg
push
cmp
sbb
mov
mov
jne
inc
mov
and
sub
daa
pop
push
push
push
pop
push
insl
xchg
andb
jne
push
dec
and
jb
mov
or
cmp
sbb
fs
mov
cli
mov
cmpsb
sub
movsl
sub
xchg
inc
mov
test
mov
mov
sub
inc
push
stos
xor
outsl
cmp
and
xchg
lcall
leave
int3
fbstp
mov
adc
daa
pop
cmp
or
out
in
aaa
fnstsw
mov
test
jge
out
cmp
jns
lock
div
or
cmp
push
mov
xchg
xchg
pop
cmc
xchg
mov
ja
add
jmp
push
test
movsl
mov
jb
les
icebp
jp
fidivrs
lret
pop
fildl
cmp
jno
ja
shrl
add
hlt
mov
push
dec
shll
push
mov
mov
pop
pop
int3
xor
js
dec
in
xorb
shrl
push
subb
es
loope
mov
xchg
pop
sbb
inc
push
push
std
xchg
mov
in
aas
mov
pmulhw
cmp
dec
push
push
xor
pop
sub
lea
les
push
xchg
call
dec
or
data16
mov
push
or
mov
stc
dec
sbbl
jmp
scas
xor
adc
xchg
add
fdivrs
repnz
leave
cmp
shld
data16
add
lds
out
cmp
cmp
jmp
pop
or
repz
sahf
mov
jecxz
jns
sub
or
jnp
dec
pop
xor
dec
pop
lock
out
or
and
inc
popf
out
aaa
jecxz
and
insl
xchg
int3
push
mov
xorl
testb
add
scas
push
in
lcall
xlat
lea
dec
push
jnp
std
jmp
mov
dec
jecxz
dec
mov
pop
test
sub
push
adc
lods
std
rcrb
movhps
mov
mov
pop
dec
or
negb
mov
fcmovnbe
and
pop
daa
sub
dec
push
or
cmp
pop
cld
dec
rcrb
mov
scas
mov
inc
jb
mov
jne
iret
inc
popf
and
pop
dec
jne
out
out
or
in
daa
xchg
push
outsb
cmp
out
inc
mov
push
pop
pop
sahf
jmp
sbb
xchg
insb
pop
subl
pop
pop
add
repnz
or
add
push
sbb
int3
into
xchg
fwait
test
jo
mov
jno
test
sahf
mov
jno
in
aas
fimuls
sahf
fistpll
mov
xorl
and
mov
mov
mov
not
jle
inc
push
mov
insl
sbb
add
cmpsb
divb
mov
fcoms
scas
xlat
mov
popf
inc
adc
xchg
aad
inc
cmp
call
loope
push
lods
mov
cmp
shll
nop
imul
ja
or
xchg
xlat
xor
pop
in
cwtl
negl
inc
std
icebp
std
fistps
popf
pop
mov
jo
mov
sarl
dec
mov
aad
push
pop
das
sbb
dec
add
push
jae
cmp
add
push
cltd
add
out
aas
stos
mov
stos
mov
fwait
pusha
in
out
adc
mov
mov
mov
leave
std
inc
inc
daa
push
scas
test
mov
adc
jo
and
or
lret
mov
xchg
or
lret
test
add
mov
aaa
nop
testl
je
push
insb
out
and
sub
loop
ret
pop
loope
mov
cs
jnp
test
fdivrp
jp
imul
into
jno
jge
jg
xor
cmp
jg
or
jle
loopne
testl
out
cmp
mov
push
lods
aas
inc
xlat
outsl
insb
cmc
jl
nop
fdivr
mov
sbb
arpl
mov
bswap
scas
sbb
mov
inc
jo
cmpsb
mov
or
int
ret
sub
sti
add
aas
jecxz
jmp
pusha
shll
mov
pushf
in
loopne
jecxz
cmp
ret
sbb
outsl
adc
xor
inc
push
hlt
idiv
dec
adc
jecxz
mov
jl
stc
sbb
jbe
pop
cmp
fwait
test
dec
push
adc
mov
cmp
mov
ljmp
cltd
mov
inc
inc
ret
adc
mov
adc
je
sbb
movl
dec
or
lods
aam
cltd
ret
cmp
and
insb
shl
fdivrl
imul
ret
adc
imull
inc
adc
stc
shl
repz
icebp
ss
mov
cmc
sbb
les
mov
sbb
insl
fsubr
pop
das
rolb
mov
mov
push
add
cmpsl
dec
lcall
mov
stos
and
jmp
leave
jo
xchg
ljmp
sbb
inc
dec
mov
lret
mov
jo
incb
adc
and
sbb
dec
fidivrl
add
pop
subb
ljmpw
pop
inc
cmp
shlb
cmp
jnp
and
or
shll
xchg
pushl
ret
out
push
cmp
push
rol
push
lods
mov
cmc
and
cmp
pop
pop
test
sub
xor
cmpsb
xor
sahf
cmp
aaa
dec
mov
sub
xchg
xchg
scas
fcmovnu
xchg
adc
pusha
adc
into
adc
and
mov
xor
out
ret
es
loope
mov
data16
push
adc
add
jl
jmp
mov
pusha
mov
dec
shlb
addr16
and
fsubrs
jno
xchg
lods
enter
sbb
adc
punpckldq
in
jl
lock
pop
pop
shll
fwait
xor
cmp
sub
mov
sbb
mov
ja
mov
sti
inc
or
pop
cmp
test
pop
out
mov
out
inc
shrl
and
or
adc
lret
stos
jns
in
add
dec
mov
xchg
adc
lods
fmull
ljmp
sahf
jae
daa
inc
mov
dec
add
mov
dec
lock
cmp
int3
dec
faddl
mov
lods
test
shl
pop
and
or
xchg
xchg
sub
pop
ljmp
out
jo
mov
mov
insb
ret
inc
mov
cwtl
mov
out
push
iret
sbb
mov
popf
jge
cmp
xor
or
in
jmp
dec
in
dec
loope
cmc
sti
gs
pop
addb
inc
and
cmp
outsb
push
mov
andb
js
mov
dec
cmc
jne
adc
lods
jg
mov
adc
sbb
push
or
aas
xor
les
roll
add
inc
lods
inc
out
arpl
or
aas
push
sbb
or
inc
mov
shufps
push
fdivrs
sbb
adc
mov
push
shll
mov
scas
jecxz
cs
rorl
jne
ret
jp
sub
je
test
and
cmp
orl
test
out
in
dec
in
mov
push
bound
dec
or
fisttpll
push
inc
xchg
or
mov
and
cmp
in
sbb
iret
cltd
jnp
test
sub
lcall
iret
cmp
xchg
out
sbb
ja
test
inc
mov
inc
fcoms
test
aad
mov
xchg
cmc
insb
leave
xchg
mov
rclb
cld
push
xchg
dec
inc
xor
jg
out
sub
mov
mov
cmp
aas
and
call
loopne
xchg
dec
pop
int
push
add
js
test
cmp
mov
or
inc
sbb
imul
ljmp
mov
test
lods
mov
cmpsl
xchg
rcll
lcall
inc
adc
addr16
pop
pop
rorb
cld
pop
cmpl
add
cmpsb
mov
pop
sub
test
and
add
mov
int
add
icebp
jo
insl
inc
aaa
insl
xor
dec
add
xlat
leave
mov
xor
out
mov
or
call
fisubl
js
jbe
nop
or
xor
push
and
or
cmc
inc
sbb
out
xchg
xchg
jns
inc
jo
push
jnp
aas
arpl
faddp
repz
enter
imul
xchg
jecxz
mov
orl
add
cmc
adc
les
cmp
push
jo
pop
ljmp
cmp
mov
dec
sbb
ss
inc
enter
cli
faddl
movsl
outsb
popa
ss
shrb
lcall
outsb
mov
jecxz
sub
orb
adc
adc
xor
inc
jne
cmpsl
add
mov
rcrl
pop
test
xor
mov
addr16
mov
cli
jbe
popa
adc
and
mov
sti
pop
shll
in
ds
xchg
imul
stos
inc
cmp
cltd
sub
push
push
inc
mov
in
pushf
ds
jle
pop
adc
lea
imul
push
push
xor
inc
adc
push
pop
sub
daa
shll
dec
jl
fidivl
and
lods
loop
cmpsb
mov
xchg
sbb
mov
sti
and
in
lea
xchg
mov
shll
mov
xor
pop
imul
xchg
popa
xchg
mov
ljmp
fcompl
in
out
int
dec
in
nop
xchg
lods
and
sub
vmptrld
scas
call
pop
imul
sbbl
rclb
ljmp
xor
ljmp
and
popf
mov
and
sbb
lock
cltd
testl
stc
cli
lock
sahf
fs
ficoms
fisttpl
mov
sub
pop
out
pusha
mov
xor
jb
and
inc
loope
repnz
outsl
inc
lods
loop
ljmp
xor
fisttps
test
cmp
add
nop
cs
ds
sahf
or
je
inc
inc
scas
add
data16
mov
fildl
stos
dec
add
dec
rcrl
push
xchg
xchg
loop
jecxz
pop
mov
xor
push
arpl
dec
in
loop
mov
fwait
jns
push
nop
mov
jecxz
iret
push
test
cmpb
ja
fsts
jae
jle
mov
add
pop
pop
out
mov
ja
in
ds
movsl
inc
jecxz
sub
scas
into
xor
or
out
xchg
insl
out
popf
repz
mov
outsb
or
popl
jbe
jnp
push
fsts
stc
lods
mov
dec
jo
insl
lret
jmp
jmp
xchg
jne
into
mov
inc
in
xor
push
nop
mov
faddl
call
stos
pop
mov
dec
loop
push
jbe
push
sbb
repz
adc
pusha
cltd
test
sbb
ret
popa
mov
and
ja
test
arpl
insb
rorl
mov
adc
ret
mov
jae
adc
jne
mov
cmp
xchg
cld
stos
out
ljmp
push
pop
lods
sbb
aaa
or
jge
dec
fadds
shrb
sub
imul
inc
mov
or
mov
repnz
xchg
ljmp
add
mov
sti
mov
nop
mov
add
icebp
sahf
out
and
xchg
xchg
pop
iret
loop
xchg
sub
inc
movsl
sub
xchg
leave
dec
mov
ret
xchg
xor
push
lea
bnd
and
cmp
aad
mov
push
es
test
mov
lds
in
pop
mov
stos
loopne
int
cmp
sbb
push
add
mov
inc
test
out
imul
mov
mov
or
ljmp
adc
sbb
fldl
and
pushf
xor
mov
pop
xchg
ja
xor
test
sub
je
cmpsb
lret
jle
orl
or
jg
lock
lahf
xor
jp
stos
mov
pop
popa
push
in
jecxz
adc
xchg
xchg
xchg
rorl
jno
push
xor
jecxz
test
push
xchg
lock
mov
je
shl
pop
or
or
mov
mov
adc
les
mov
cmpsl
xchg
or
pushf
cmp
bound
fmuls
nop
jbe
iret
mov
mov
jmp
bound
sub
dec
ret
call
rcr
decl
add
mov
mov
repnz
dec
cmpb
mov
imul
sbb
insl
jo
inc
arpl
inc
adc
fnstenv
push
ljmp
lods
std
push
mov
ljmp
movsb
sbb
cs
loop
mov
bnd
test
ret
fisubrs
and
xlat
sub
push
cmp
aaa
cld
mov
loopne
in
lods
add
dec
test
mov
push
lcall
jb
ret
sub
int
call
nop
testl
movb
scas
out
daa
jnp
dec
xlat
sub
in
das
sbb
orl
cltd
lret
icebp
mov
das
mov
pop
es
popa
mov
sub
or
sub
add
push
mov
outsl
data16
mov
mov
xor
or
sbb
in
jmp
lock
call
inc
mov
sub
mov
das
mov
sahf
lods
xor
int
mov
push
add
adc
sbb
inc
mov
movsl
aam
notb
add
test
lret
cltd
add
fstl
imul
cmp
xchg
lret
xchg
push
or
outsb
cmp
sti
dec
ja
incl
pusha
pop
fdivl
fsubrs
icebp
push
adc
and
push
xor
lock
sbb
xchg
jo
pop
dec
insb
xchg
mov
gs
jge
mov
popa
loope
jae
mov
adc
push
decb
dec
pop
fs
jmp
inc
ret
sub
jge
ss
push
daa
cmpsb
mov
in
out
sbb
ss
and
ret
stos
xchg
daa
ds
stos
push
imul
adc
loop
cld
fmulp
jecxz
xchg
or
push
mov
adc
imull
fnstcw
sbb
jle
pop
rorb
in
lods
or
stc
push
das
add
outsb
and
dec
jnp
gs
push
cli
idivl
rcll
add
inc
frstor
loop
out
pop
mov
push
add
ret
xor
lahf
clc
loopne
scas
mov
mov
shlb
inc
ja
cmp
leave
jl
out
cmp
xchg
lods
push
je
insl
imul
add
mov
out
jle
sbb
fildll
or
lods
dec
sub
push
xchg
add
scas
mov
pop
js
jne
xor
inc
int3
into
stos
stc
mov
xor
es
movsl
scas
in
ljmp
cmp
push
adc
and
adc
fsubr
in
xor
enter
or
in
ret
out
mov
push
add
sub
or
lret
mov
xor
add
movsl
jo
cld
out
dec
add
mov
adc
pop
jns
cmp
imul
inc
cmpsl
aam
int
pop
mov
je
lea
cmp
loopne,pt
stc
push
xor
rorl
pop
fldt
in
mov
push
xchg
cwtl
mov
push
mov
imul
pop
lods
xchg
pop
arpl
jbe
xor
jl
sub
mov
ror
pop
adc
out
out
cwtl
mov
or
int3
cmpb
out
cmp
xchg
es
das
mov
mov
fldenv
test
nop
mov
fwait
rol
adc
daa
or
popa
setb
jae
or
xor
xchg
in
pop
mov
and
add
stos
push
fists
cmp
test
xchg
aam
je
jle
out
icebp
inc
push
push
adc
xchg
in
in
pop
fwait
popf
or
adcb
xor
xor
dec
loop
movsl
cwtl
dec
icebp
mov
pusha
aam
mov
mov
mov
sbb
add
cmc
cmpsl
insl
test
popf
int3
bound
inc
pop
lea
in
push
jb
fs
xor
mov
mov
mov
add
cwtl
cmc
push
cmpsb
into
or
js
addb
xor
jmp
push
int
push
xor
lods
pushf
out
test
and
xchg
test
jecxz
jbe
add
jae
insb
xchg
xchg
or
dec
cwtl
stos
dec
mov
inc
stc
cs
repz
xor
bound
sbb
mov
and
fisubrs
xor
hlt
scas
push
repnz
xchg
js
cs
sbb
or
sbb
and
mov
cmp
cmp
sahf
mov
dec
jnp
nop
xchg
lcall
jmp
jbe
sbb
sbb
ss
add
cmp
arpl
lods
jl
cltd
fwait
xchg
mov
inc
lods
inc
test
test
xchg
adc
dec
or
inc
les
ret
adc
cli
adc
add
ss
adc
popa
xchg
imul
push
es
lods
in
cmp
inc
pop
lahf
shr
in
das
push
loop
dec
data16
and
push
adc
pop
add
ficoms
mov
push
inc
arpl
fsts
pop
mov
outsb
xor
cmp
push
cmpsl
xor
or
insl
ljmp
js
push
in
mov
fdivrl
dec
jecxz
ffree
ret
clflush
xorb
daa
loop
rcl
cli
sbb
lods
and
enter
enter
loop
call
pop
insl
inc
stos
fcoms
repz
add
push
pop
lods
push
les
mov
mov
pusha
out
jo
pusha
adc
mov
inc
push
mov
sub
mov
leave
push
mov
aaa
rcll
clc
mov
icebp
fstp
push
stos
je
imul
mov
jp
mov
sbb
mov
orb
unpcklps
and
bound
jo
dec
shlb
and
outsl
and
sbb
or
and
mov
fcoms
dec
push
inc
lods
xor
iret
out
mov
popa
in
fiadds
push
push
adc
sbb
pusha
xor
inc
mov
push
dec
lea
xlat
push
or
imul
mov
stos
dec
cwtl
fsubp
add
les
loope
jmp
and
rcll
orb
cmp
dec
or
mov
sahf
or
in
mov
insb
ficomps
dec
clc
jne
iret
mov
mov
lcall
into
xchg
mov
test
in
ljmp
shll
psubb
sbb
mov
fdivl
inc
stc
push
mov
xor
ja
jae
cwtl
ret
xchg
and
jne
outsb
inc
dec
or
inc
cmc
fstpl
stos
mov
ret
ss
cltd
and
es
sub
fsts
shr
dec
cmp
ds
dec
xor
mov
push
test
inc
xor
loope
dec
fcomp
push
lret
sub
sub
imul
xchg
call
jp
jns
mov
aam
stos
shl
push
aaa
push
fwait
mov
mov
add
cmp
add
mov
les
jno
aad
mulb
and
jmp
test
push
mov
orb
in
fiaddl
loope
outsb
inc
clc
jle
aaa
nop
std
mov
nop
fsubrs
dec
ljmp
inc
pop
sahf
add
arpl
pop
and
push
pop
cli
sbb
sub
jecxz
mov
ret
ljmp
loop
mov
jbe
add
scas
or
inc
scas
outsl
xor
pop
dec
add
cmp
xchg
aam
iret
mov
cmpsb
cmp
push
fs
xlat
mov
sahf
js
lods
dec
and
xor
adc
je
fstl
bnd
push
jp
rcrl
jne
dec
or
shll
inc
mov
out
sahf
into
xchg
cld
aas
inc
xchg
mov
jecxz
ljmp
push
dec
addb
das
das
mov
jmp
scas
addr16
hlt
lock
fwait
std
out
sbb
pop
jl
pop
mov
mov
xchg
div
aad
stos
jle
xor
dec
sbb
mov
adc
xchg
sub
xchg
mov
dec
jo
scas
fldt
pop
clc
xchg
add
js
or
pop
sbb
jb
stc
add
mov
in
inc
mov
sbb
fstpt
insb
mov
push
rorb
adc
xchg
data16
orb
aam
out
popa
mov
gs
push
into
sub
cmp
lret
outsb
cmp
hlt
fnstcw
mov
into
jle
ja
das
lods
fstpl
and
leave
cmp
sbb
push
cmpsl
mov
lock
in
adc
mov
lcall
sub
negb
inc
sbb
subb
icebp
mov
fs
xchg
pop
movsb
sbb
mov
insl
fwait
jo
cmp
push
out
sahf
fcoml
adcl
mov
inc
test
lcall
xchg
and
neg
mov
out
xchg
inc
incb
inc
sbb
lret
mov
fiadds
jmp
adc
pop
repz
and
jns
push
sarl
add
movsb
dec
ljmp
or
dec
lret
repz
insb
fdivrl
add
into
pop
or
mov
push
cmpsl
sub
pop
add
pop
arpl
call
les
pop
xor
out
aaa
dec
dec
ss
cmp
stos
je
cmp
das
add
lea
add
es
sbb
das
sti
popa
lds
push
push
add
outsb
sub
repz
addr16
or
add
lods
aad
aas
movsb
out
push
sbb
lods
movsl
orb
out
ss
mov
cmp
clc
and
mov
sub
in
sahf
push
sub
aad
dec
jb
scas
scas
test
arpl
rorl
jg
cltd
fcomps
inc
sbb
pop
lret
and
mov
icebp
movsl
movsb
sahf
das
xor
popa
sahf
hlt
push
inc
jno
and
xchg
loopne
cmp
nop
faddl
jl
and
mov
push
subl
and
imul
xchg
fsubs
ret
loope
jae
jbe
pop
inc
out
xchg
out
jno
sti
adc
movsl
sub
mov
or
jmp
adc
cs
jo
adc
sbb
xor
jle
sbbl
paddusw
mov
cwtl
adc
cmp
shlb
jae
lods
insb
mov
mov
dec
out
shll
push
imul
mov
imul
gs
jmp
jae
arpl
mov
pop
repz
mov
jae
ds
rcll
mov
and
data16
push
inc
cltd
pop
inc
into
cmpsl
mov
aas
xor
test
aas
enter
test
mov
fadds
cmpl
adc
sub
popf
in
mov
subb
adc
cmp
mov
mov
lods
lods
dec
mov
mov
mov
inc
outsb
stos
mov
sbb
fmuls
sub
popf
mov
jmp
mov
pop
mov
mov
bound
cli
cs
loop
sarb
jecxz
mov
add
xchg
push
pop
xor
push
mov
dec
popf
fs
rorl
or
addr16
push
mov
roll
dec
pop
jnp
cmp
scas
mov
mov
in
jle
xor
jae
rclb
mov
inc
mov
test
jle
dec
jbe
fcmove
pusha
jo
dec
ljmp
je
sub
vxorps
push
jns
mov
mov
sub
xchg
mov
enter
fs
pop
push
popa
xchg
addr16
mov
imul
lret
mov
cmp
inc
jp
push
add
in
hlt
xor
inc
js
aam
mov
test
mov
push
in
ja
xor
hlt
cltd
add
or
movsb
shrl
or
sbb
jmp
js
mov
jecxz
les
cld
out
sub
rcrl
or
lret
movsb
outsl
fidivl
mov
aaa
aam
daa
call
loopne
jl
mov
adc
jne
adc
imul
cmpsl
dec
and
sbb
jl
jg
icebp
or
xchg
in
aaa
inc
lret
rolb
popf
call
mov
push
fwait
insl
orl
ljmp
or
imull
imul
cmp
jge
in
cmp
popf
push
sub
sbbl
arpl
fdivrp
insb
sbb
add
lret
lahf
xor
out
andl
or
lcall
loop
jne
out
sbb
mov
rorb
fstpl
loopne
addb
and
adc
cmp
pop
push
shlb
or
cltd
jp
test
jo
mov
fildll
rol
les
iret
xor
mov
outsb
mov
cmp
pop
lret
dec
lds
jo
push
test
inc
xlat
mov
cmc
in
idivb
jne
push
pusha
mov
lea
xchg
mov
and
enter
int
repnz
into
inc
mov
mov
je
mov
cmpsb
mov
ret
pop
mov
xchg
add
xor
or
push
inc
in
jns
mov
icebp
add
push
mov
cld
ja
sbb
mov
xchg
dec
xchg
fsubs
push
push
fdivrs
cltd
mov
call
jb
pusha
cmpsl
cwtl
in
cmp
dec
sbb
jb
lahf
add
inc
aad
stc
test
push
sti
xchg
test
inc
sbb
xchg
cmp
sbb
cs
mov
xchg
outsl
pop
fsubrl
insb
mov
enter
pop
ret
fs
mov
lcall
jge
pop
popa
adc
xor
sbb
fwait
sbb
decl
or
pushl
pop
mov
mov
test
push
fimull
lock
and
sahf
int3
mov
aaa
sbb
pop
stos
xchg
sti
in
sbb
lret
lods
mov
cltd
rorb
fwait
mov
lods
and
xor
stos
pop
daa
pushf
lret
add
xchg
loopne
fs
mov
mulb
push
hlt
addb
insl
sbb
andb
scas
jg
xchg
pop
adc
cmpsl
outsl
out
xchg
adc
sbb
mov
in
cmpsl
sub
add
stos
and
pop
dec
pop
std
int3
rcrl
clc
aam
lods
push
je
rorl
or
fcmovnu
and
loope
sbb
pop
das
cli
lret
cmp
push
and
test
xchg
cmp
fnstenv
mov
lods
mov
popf
xchg
add
xor
mov
xchg
xchg
and
mov
mov
cmp
xlat
push
call
xor
sarb
or
mov
sbb
lahf
cli
dec
cmp
lods
mov
clc
out
mov
jb
or
inc
stos
iret
scas
aam
cvtpi2ps
shl
mov
jecxz
and
fdivrl
mov
pop
dec
and
loopne
fs
push
data16
xor
xchg
loopne
and
adc
popa
aam
cld
dec
jo
or
and
sub
daa
mov
sbbb
int
or
call
int3
call
or
arpl
xor
scas
int
dec
pop
inc
popf
aad
sub
and
js
push
push
aam
cmp
popf
adc
jnp
sbb
lahf
cwtl
or
ffree
adc
add
test
and
cmc
xchg
or
stos
inc
jle
sub
orb
pop
fistl
inc
cltd
lods
xor
xchg
popa
fsubs
dec
cmp
rclb
and
dec
std
xchg
loope
mov
mov
imul
lret
or
aaa
lret
pop
jo
test
or
pop
les
mov
jle
outsl
xchg
mov
pop
jnp
ds
lock
subb
lahf
pusha
bound
ja
jns
imul
inc
xchg
or
push
fdiv
xchg
clc
repz
notl
cmpsb
cmc
lahf
dec
mov
pop
cltd
imul
fdivrs
jae
mov
lea
or
testb
inc
int3
or
and
mov
sub
mov
aad
xor
vphsubw
pusha
insb
push
and
rclb
cmp
out
ret
and
mov
cmp
dec
aaa
xor
or
movsl
shl
mov
nop
sbb
xlat
in
scas
rcrb
call
lahf
jns
or
mov
jecxz
mov
insb
lret
mov
or
push
and
sbb
push
push
inc
sbb
mov
fsubrl
leave
adc
cmp
pop
data16
sbb
jp
addb
inc
sbb
cs
pop
mov
sbb
mov
out
je
sbb
out
test
int3
push
into
cmpsl
iret
sub
and
movb
fwait
sbb
movsb
dec
sub
or
mov
in
clc
sub
sbb
mov
sub
cwtl
movsl
in
push
push
sbb
cmp
testl
es
push
mov
adc
add
jbe
idivb
or
aam
cmpsb
or
stos
push
jp
cld
out
ss
jae
adc
mov
clc
dec
jl
ja
add
hlt
stos
xchg
jne
rcll
shlb
cwtl
filds
shl
mov
jnp
stos
sbb
pusha
stos
loop
mov
bound
push
xor
push
and
fimull
xor
mov
mov
lock
adc
mov
es
fdivr
loope
push
repz
daa
add
adc
pop
imul
repnz
pop
mov
cmp
pusha
pop
dec
cmpsl
lcall
test
ja
pusha
pop
inc
bound
in
mov
jl
sub
mov
or
add
bound
jge
addr16
fimull
icebp
jecxz
repnz
pop
push
mov
stos
leave
mov
pop
shll
mov
out
andb
or
std
push
and
mov
xchg
shr
lret
movsl
rorb
push
clc
scas
lcall
fs
jae
add
push
lods
nop
and
fistpl
cmp
out
rcrb
pop
adc
dec
and
xchg
cld
mov
lcall
ds
into
push
push
aad
xchg
sahf
add
rcrb
sub
xor
inc
inc
and
popf
pop
cmp
and
mov
pop
inc
pop
mov
jns
push
xor
xchg
test
xchg
adc
imul
out
xlat
imul
pop
shlb
and
xchg
mov
mov
jbe
inc
xor
xor
sbb
stos
ljmp
mov
xor
fdivs
sub
dec
mov
push
mov
daa
jno
ja
push
inc
or
lret
clc
lock
inc
inc
in
andl
mov
sahf
inc
punpcklwd
arpl
xor
shrl
mov
into
decb
loope
jl
cld
sub
jl
leave
data16
ljmp
outsb
jae
fdivrs
ljmp
leave
jl
mov
xchg
les
mov
mov
mov
mov
sub
xchg
dec
adc
insb
repz
lret
bound
cmp
lahf
arpl
xchg
pop
insl
in
ret
dec
fcmove
cmp
gs
adc
jae
mov
call
scas
xacquire
xor
adc
mov
add
sarl
xchg
inc
imul
stos
dec
leave
pop
mov
jge
and
jb
dec
jo
cwtl
cmp
jp
fldcw
pop
cmp
ljmp
sub
mov
dec
cmp
jp
aas
dec
es
push
test
pop
gs
push
sub
mov
insl
mov
das
cmp
mov
fisttps
mov
add
test
cmp
aam
and
cld
mov
push
inc
or
jle
mov
jo
je
xor
adc
add
dec
push
cmp
mov
mov
lahf
sarb
pop
or
sbb
dec
inc
jbe
sbb
in
cs
stos
into
insb
in
incb
or
dec
add
ret
xchg
movl
cmpsl
daa
mov
mov
aas
dec
cmpb
jnp
fs
movsb
fwait
add
mov
pusha
sahf
mov
punpckhbw
fcmovnu
call
xlat
push
and
pop
icebp
mov
xor
test
nop
fisttpl
dec
push
xor
jl
push
cld
test
repnz
in
lcall
jmp
or
outsb
jne
decb
push
shlb
push
jns
ds
in
dec
xor
andb
iret
mov
jb
into
stos
inc
or
cmpsl
jns
push
outsl
cmp
mov
in
shlb
clc
inc
mov
mov
arpl
dec
jbe
sahf
jp
jb
jle
int3
or
mov
bound
add
lds
jns
mov
jo
daa
cmp
fcoms
xor
js
mov
mov
aad
sub
andl
sbb
stos
mov
sub
cld
fsubrl
push
in
lds
mov
sbb
cwtl
int3
mov
mov
cmp
xor
insb
xor
mov
xor
or
mov
fstpt
cwtl
sbb
popf
stc
ret
pop
dec
les
sub
int
inc
addr16
es
cmp
popf
imull
sub
jne
fsts
mov
dec
cmp
call
or
dec
mov
or
lds
or
and
push
or
ja
jne
xchg
mov
mov
adc
inc
cltd
xchg
and
notl
adc
js
jne
dec
sbb
jae
stos
nop
fcompl
test
outsb
jo
bound
cltd
or
xchg
cli
fadd
cmc
mul
repz
push
mov
addb
and
daa
or
daa
add
and
cltd
dec
add
mov
mull
push
adc
loope
pop
aaa
mov
sbb
jmp
jmp
cs
lea
pop
inc
cmpsb
lahf
scas
xchg
xor
mov
and
stos
xor
mov
and
sub
mov
in
mov
jo
aaa
bound
in
cmp
dec
popf
xor
insl
adc
pushf
xchg
shrl
or
mov
daa
pushf
jl
jno
in
inc
adc
arpl
jo
push
cmp
cltd
ret
sahf
cli
mov
adc
cld
inc
push
lcall
test
mov
daa
mov
xor
sub
lock
xchg
mov
decl
std
loope
cs
daa
scas
lret
jmp
sbb
mov
dec
fcomi
jns
ljmp
and
jne
ja
cmp
pop
rorb
es
mov
lcall
mov
push
pusha
xchg
cld
push
add
dec
mov
and
cmp
and
mov
sar
enter
les
mov
cmpsb
lcall
enter
mov
fists
mov
fcmovu
inc
ds
shlb
iret
ret
adc
andl
dec
int
out
out
xchg
test
xchg
lcall
ror
jae
fistps
add
pop
cld
push
hlt
movsb
push
outsb
rolb
fcmovnb
cli
sub
in
adc
sbbl
jbe
daa
mov
loope
lods
sub
cmc
inc
and
pop
xchg
mov
lret
pop
cmc
dec
imul
aas
repnz
cmp
negb
cmp
jb
push
push
pop
leave
pop
add
sbb
icebp
dec
js
lds
out
inc
jle
sbb
int3
push
icebp
adc
xlat
mov
pop
mov
push
nop
loop
movsl
jno
inc
push
xor
mov
pop
dec
mov
sbb
shl
inc
xchg
shll
xchg
dec
jno
sub
negb
jns
cmc
insl
jl
rcrl
enter
dec
ret
cmp
or
nop
lods
xchg
push
xchg
lods
jp
xor
and
mov
mov
mov
xchg
mov
ss
mov
int3
cld
je
in
sbb
sub
or
jns
sbb
and
adc
adc
pushf
jle
fidivs
push
push
mov
xchg
movsb
sti
jl
inc
sub
pop
push
mov
push
sub
and
jb
sub
xor
notl
cli
push
lcall
sub
dec
cmp
aam
stc
shlb
loop
pop
movsb
or
les
movsl
fistps
int3
add
mov
incb
enter
lods
std
push
lret
jae
adc
inc
adc
sbb
imul
cld
shlb
mov
stos
ret
push
sbb
jbe
sub
fsubrp
adc
push
add
rorl
call
pushf
mov
inc
jae
jg
mov
movsl
and
sub
data16
ret
mov
lcall
pop
cld
addr16
mov
adc
sbb
adc
test
inc
ja
mov
cwtl
xchg
and
jne
aad
div
mov
pop
pusha
inc
inc
mov
jecxz
mulb
sub
push
cmpsl
mov
and
loop
sbb
lret
xchg
fs
scas
dec
push
xor
push
imul
fwait
movsl
das
shl
lds
sbb
jg
jns
cmpl
dec
pushf
cs
mov
mov
scas
jbe
roll
push
mov
push
mov
pop
daa
and
sbb
mov
int
cmpsb
add
mov
mov
adc
int
iret
xor
std
jo
rcrb
inc
pop
dec
push
cld
mov
inc
fs
movsb
sbb
aaa
xchg
lret
ja
dec
lret
push
mov
insb
push
xchg
sbb
jp
test
lcall
sub
push
fs
int3
add
sub
inc
sbb
adcl
add
cltd
ret
adc
les
das
lahf
jle
sub
decb
mov
shrb
push
adc
fwait
pop
sub
ss
jnp
data16
scas
or
xlat
dec
bound
stos
ja
stos
pop
cmp
mov
add
enter
and
xor
pushl
cs
dec
hlt
test
push
mov
xor
adc
cld
dec
sub
scas
add
sbb
jle
jne
push
mov
pop
inc
clc
in
pop
xchg
aad
arpl
fs
sbb
inc
fldenv
xchg
int
mov
dec
pop
mov
xchg
aad
jae
sub
mov
cmp
mov
dec
inc
mov
gs
imul
or
fldt
xchg
test
sbb
mov
xor
pop
add
sub
jbe,pt
cmp
jae
or
xchg
mov
pop
shll
jge
test
cmp
lods
cltd
dec
sbb
xchg
lret
jno
bound
and
sbb
rcll
jp
mov
add
push
outsb
and
mov
jmp
fisttpl
add
adc
fmul
out
add
imul
aaa
sti
jae
imul
bound
inc
xor
ljmp
xchg
test
das
sub
std
cmp
popa
cmp
jl
loope
xor
out
roll
outsb
mov
mov
cltd
xchg
rcrl
cmc
addr16
or
fcompl
mov
sub
mov
daa
cmp
cld
and
jbe
mov
int
lret
sub
xchg
mov
cld
jo
stos
fs
cwtl
dec
in
fildll
xchg
push
dec
je
test
sbb
in
lods
xchg
testl
inc
test
cmp
sub
mov
lds
out
and
std
pop
lret
movsl
sbb
jl
dec
add
notb
jne
dec
pop
test
mov
xor
fiaddl
adc
dec
xor
jbe,pn
pop
into
push
cld
test
adc
xlat
ss
aaa
push
and
out
jle
in
push
sti
lret
stos
inc
out
add
add
fwait
xchg
jg
loope
mov
jno
js
lahf
repnz
bound
fcmovne
mov
fstps
mov
sbb
fwait
xchg
mov
test
adc
movl
out
add
cmp
pop
pop
movsl
inc
or
cmp
xor
mov
fwait
std
outsl
fs
js
imul
and
nop
lds
xor
xchg
sbb
in
push
inc
jno
mov
imul
inc
hlt
mov
dec
in
cmovnp
xchg
int3
aad
fucomp
dec
jnp
scas
push
jns
cld
outsl
imul
mov
sarl
cli
mov
les
pusha
aam
pop
lock
mov
jge
jns
cmpsl
mov
xor
or
cmp
cmp
aam
fstl
fcmovne
stos
xchg
repnz
push
mov
jnp
xor
aaa
mov
mov
lods
repnz
inc
clc
or
arpl
xchg
xor
jge
pop
out
lods
push
jl
ret
pusha
xorb
xchg
mov
add
shr
pop
insl
mov
outsb
in
mov
mov
mov
inc
scas
jmp
repz
push
xor
xchg
call
pop
nop
call
scas
mov
cmp
shlb
push
xchg
cmp
cs
in
mov
dec
add
xor
adcb
xor
and
arpl
mov
xchg
test
push
das
mov
push
and
lds
stos
stos
or
les
jo
mov
cli
sarb
dec
sub
cmp
hlt
lea
leave
stos
sbb
mov
sahf
inc
add
sub
arpl
lods
rcl
push
push
addr16
sub
popf
sbbl
movsb
test
adc
addb
push
jmp
sbb
inc
dec
xchg
rcll
inc
xchg
lahf
cld
cmp
dec
faddp
or
push
cli
cli
push
push
cmpsb
mov
inc
mov
push
xor
fsubrs
push
mov
mov
pop
sbb
lock
or
scas
cmp
push
or
sbb
mov
add
cltd
out
pop
mov
jno
sub
fxam
adc
or
or
or
xchg
fistps
in
mov
test
xchg
or
cmp
ljmp
adc
shlb
mov
mov
repz
leave
je
pop
ffreep
xchg
jmp
cmc
clc
lahf
push
add
jno
or
sub
push
shl
push
cmp
cld
movsl
nop
mov
adc
rclb
pusha
scas
xor
test
push
dec
loope
sub
pop
jne
bound
add
jg
lahf
inc
cli
int
dec
dec
fidivl
in
pushf
ja
pop
cmp
cmp
sub
fcomp
ds
inc
into
mov
filds
test
fsubs
shl
test
idivb
push
cltd
aas
cwtl
cmpsl
jbe
adc
rcll
mov
mov
notl
mov
mov
mov
fs
dec
leave
addb
mov
dec
mov
lret
cmp
pushf
dec
add
ss
sub
lret
and
pop
dec
fstps
out
cld
push
sbb
je
mov
mov
jl
push
push
cs
outsl
dec
lods
outsl
pop
adc
cmp
push
xchg
test
stc
sbb
sub
pop
jp
xchg
jo,pt
xchg
inc
mov
xlat
addr16
jo
inc
in
inc
sub
mov
xchg
or
pushf
addb
scas
jl
cmp
pop
adc
movsl
int
hlt
and
jl
fsubrp
pop
repz
in
xchg
mov
and
movsl
aas
and
inc
xchg
mov
dec
cmp
andb
xor
xor
jmp
jns
cld
in
xorb
in
jmp
cltd
stos
stos
pop
mov
xchg
cld
inc
call
dec
adc
push
or
pop
cli
mov
push
popa
push
mov
popa
mov
cmp
rcrb
xor
jl
pop
out
jg
popf
loope
bound
inc
scas
enter
adc
mov
fbstp
lods
js
bnd
ja
jnp
push
or
fisttpll
add
std
sub
out
cwtl
pop
lea
les
push
in
fdivr
test
mov
xor
xchg
roll
cmpsl
add
movsb
push
ret
cmp
adc
lds
rcl
add
ss
mov
pusha
mov
loopne
mov
mov
in
jge
and
bound
repnz
cmp
xchg
lds
rcrb
inc
in
adc
jle
mov
add
mov
stos
dec
mov
rcrb
pop
outsl
aas
inc
and
int3
push
int
nop
pop
les
movsb
cld
pusha
arpl
mov
lahf
subl
adc
pop
lods
push
lods
mov
dec
dec
xor
clc
adc
sub
rolb
stos
xor
xor
or
mov
mov
and
mov
pop
add
cmc
add
fiaddl
sbb
pop
imul
sbb
add
hlt
std
xchg
or
in
pop
test
fsubl
sbb
pusha
nop
stc
mov
out
mov
inc
mov
addr16
sbbl
loope
subl
mov
dec
inc
inc
add
mov
out
lods
ljmp
cmp
sub
lods
int3
pop
mov
pop
xchg
jecxz
mov
push
mov
sub
pushf
mov
in
cmp
test
or
pop
sti
inc
xor
repz
ja
xor
dec
mov
loopne
lock
pusha
dec
xor
jmp
push
pxor
xor
sbb
jmp
dec
je
mov
rcrb
push
lods
jp
sub
dec
jl
xor
nop
ret
inc
mov
mov
rcrl
dec
loop
jnp
sub
leave
dec
xor
sarb
push
into
call
cmp
mov
ljmp
enter
xor
xor
ss
mov
roll
imul
in
add
sahf
divl
adc
aam
repnz
and
jmp
cmpl
jge
lds
aaa
mov
inc
popa
into
outsb
push
fistpll
pxor
dec
scas
xchg
dec
lret
mov
pop
scas
push
and
int
hlt
jb
sbb
pop
cli
dec
cmpsl
mov
out
pusha
cs
lcall
add
addr16
mov
ss
fldln2
insb
push
stos
imull
fsts
push
int
or
cmc
sbb
scas
les
sbb
push
aas
pusha
out
xchg
ja
add
jle
xchg
mov
xchg
lods
int
sub
mov
add
pop
and
cmpb
sbb
sbb
arpl
fs
mov
aaa
push
xor
xchg
add
adc
lea
or
aam
sahf
xchg
imull
mov
lods
cmp
insl
shrl
sub
cmpsb
insb
hlt
sbb
fistps
test
sbb
sub
decb
or
loopne
in
lods
movsb
data16
push
sub
mov
dec
push
or
push
ljmp
rol
xchg
sbb
into
in
sbb
hlt
dec
out
xchg
ss
jmp
aaa
push
loop
aam
mov
loope
jp
pop
or
movsl
das
jl
mov
inc
pop
sbb
and
jmp
lea
fcoms
jne
xor
jo
nop
xchg
rclb
pop
sti
push
mov
int
push
push
jg
inc
testl
cs
mov
imul
lea
mov
push
mov
fildl
out
fcomi
add
inc
mov
dec
in
inc
ror
stos
xor
stos
add
test
cmp
and
lahf
cmp
xchg
inc
sahf
nop
jne
cmp
mov
mov
mulb
je
mov
cmp
jo
cmp
xchg
add
or
insl
cwtl
xchg
lcall
mov
jae
std
aad
mov
into
gs
lea
push
inc
jb
arpl
loopne
popfw
out
add
inc
xchg
push
inc
sub
imul
or
jno
add
push
dec
repnz
cmp
je
or
lret
dec
lret
add
push
sub
mov
int3
dec
cwtl
mov
sbb
xchg
dec
addl
loope
or
mov
inc
mov
mov
mov
ret
adc
add
lock
push
lock
outsb
mov
pop
out
nop
ds
movsb
sub
pop
push
movsl
shlb
mov
xchg
xchg
adc
xchg
or
mov
sbb
xor
sti
aaa
inc
jno
pushaw
mov
fs
cltd
rorl
xchg
lock
add
pushf
or
call
push
stc
lds
push
dec
pop
mov
xor
sub
ljmp
inc
pop
xor
test
filds
sub
xchg
rcll
lahf
cli
das
mov
push
ja
lds
push
jmp
xor
sbb
ja
outsb
popa
test
pop
pusha
loop
inc
pop
mov
xor
ljmp
scas
sub
sbb
fwait
inc
lock
pop
xor
mov
ljmp
pop
dec
pushf
pop
das
fcomps
jae
imul
js
mov
out
popl
lret
xchg
cwtl
cmp
push
xlat
cmp
adc
xor
mov
pop
cs
clc
mov
cmp
jb
enter
lods
mov
and
outsl
mov
lods
clc
test
sbb
bound
push
inc
push
xor
sbb
shll
adc
inc
lea
je
dec
fadd
mov
add
clc
mov
xchg
outsb
xor
bound
sbb
push
add
add
add
jg
ret
xor
jo
xchg
cmpsb
shlb
movsb
jns
orl
sub
test
sub
outsl
jo
or
adc
repz
sarl
test
pop
cwtl
mov
dec
mov
loopne
push
movsl
sub
test
aam
ja
lret
jo
and
sti
mov
out
and
outsl
add
jmp
stc
sub
in
lahf
dec
and
add
mov
shrl
shll
mov
push
outsl
mov
xor
mov
iret
sbbb
or
push
not
xchg
sahf
rol
push
mov
sub
lods
pop
mov
imul
lods
int3
lods
push
inc
fincstp
shrb
sbb
mov
das
sub
int
mov
xlat
mov
inc
xchg
xchg
stc
addr16
dec
xor
jge
in
and
xchg
push
jbe
xor
shll
lahf
inc
sub
fidivrs
dec
jg
ror
into
and
inc
mov
xchg
popa
mov
mov
adcl
mov
or
mov
ds
or
int
xchg
cltd
add
stos
aam
fcoml
dec
jno
add
add
ja
inc
mov
jbe
xchg
dec
jle
jl
or
test
ljmp
dec
lea
sub
loope
sbb
cld
push
and
hlt
sub
jns
fiadds
sub
call
sbb
scas
imul
mov
pop
push
jae
mov
xor
and
dec
in
pop
leave
adc
cmpsb
or
insb
jmp
inc
cmp
xchg
xchg
aam
or
lea
pop
aad
cld
out
sub
and
andl
cmp
adc
push
lcall
jg
popf
jo
leave
mov
mov
mov
cwtl
inc
pop
xor
xchg
pop
mov
push
pop
mov
in
jle
mov
dec
jne
shll
mov
jl
repz
and
ret
sbb
loopne
xor
mov
icebp
aaa
sarb
adc
inc
sbb
dec
inc
out
sahf
jecxz
notb
push
inc
loop
out
inc
in
pop
xchg
sbb
or
mov
or
repz
jnp
mov
mov
in
push
inc
push
cmp
jp
lahf
inc
addr16
mov
arpl
movsb
mov
mov
pop
clc
adc
out
lahf
addl
xchg
out
pop
shll
push
add
mov
dec
dec
push
test
sbb
scas
push
cli
cmpsl
scas
sbb
sahf
cmpb
fwait
inc
mov
pusha
or
ljmp
mov
sub
lock
ljmp
xlat
xchg
adc
in
xchg
xchg
ss
xor
mov
pop
inc
mul
les
ret
in
test
pop
adc
push
xrelease
mov
jae
loopne
sbb
mov
mov
call
and
ret
add
aad
inc
fmul
xchg
lret
pop
dec
add
inc
adc
xchg
shlb
sub
fsubrl
mov
inc
mov
jne
dec
xchg
cmpsb
xor
xchg
bound
loopne
mov
or
mov
loopne
pop
test
sahf
mov
jecxz
sbb
jnp
jge
movsb
repnz
cmc
cli
scas
or
mov
in
mov
aad
addr16
les
js
dec
push
in
jl
and
xor
pusha
mov
pop
mov
stc
imul
clc
dec
into
pop
sub
add
mov
push
adcl
lds
aaa
icebp
mov
pop
jb
sub
and
aam
or
pop
in
lods
xchg
scas
or
imul
or
xchg
cs
xchg
call
mov
mov
out
pop
cmpsl
jle
out
shlb
orb
jl
pop
in
jle
fists
gs
sub
icebp
cmpb
adc
jl
dec
cld
xor
out
sub
push
inc
mov
not
sub
push
xor
add
add
popf
cltd
push
lret
ret
sbb
in
xor
and
insb
mov
test
or
sti
inc
mov
jmp
out
std
jnp
push
sbb
shlb
inc
ljmp
cli
xor
lahf
jne
dec
pop
and
imul
out
push
mov
sbbl
data16
movsb
xchg
ret
aas
xor
jne
mov
or
adcb
outsb
xor
mov
scas
sbb
mov
cmpsb
mov
cmp
jmp
jg
lcall
movsb
cmp
ret
ret
push
jne
cmc
inc
add
insl
ja
scas
rcr
pop
dec
cli
mov
lahf
data16
lret
add
gs
jo
imul
mov
fiadds
enter
lods
enter
test
adc
sub
add
and
in
imul
mov
or
cmp
pop
jns
xchg
scas
dec
mov
scas
mov
pushf
push
add
loope
inc
fwait
enter
fs
cmovne
repnz
pop
xor
fsub
push
in
push
subl
les
dec
stc
out
dec
adc
adc
dec
dec
ror
js,pn
jno
cmp
sbb
add
xchg
adc
nop
shll
lock
negb
je
lods
cli
push
icebp
testb
pop
mov
mov
mov
pusha
test
inc
scas
cmc
cli
stos
adc
push
mov
test
add
push
inc
cmp
xchg
mov
pop
dec
sub
xchg
or
lods
add
xor
adc
es
jne
testb
or
rcll
xchg
arpl
add
fisttps
mov
rolb
sti
xchg
arpl
mov
cmpb
sub
cmpsl
mov
cmpsl
es
test
orb
mov
pop
cmpsb
add
das
jb
mov
adc
in
sub
aad
or
xor
xchg
and
arpl
mov
rol
inc
pop
and
mov
imul
lods
sub
mov
aam
cmp
shlb
daa
xchg
imul
pop
decb
insb
jo
or
sub
aaa
es
lcall
sti
adc
or
insb
inc
add
push
cmp
aam
jge
jge
pop
mov
cmp
bound
ds
fidivl
lock
cmp
testb
popa
jmp
fistpll
push
movsl
adc
sar
xlat
je
mov
ljmp
les
mov
in
inc
jns
movsb
fldt
mov
adc
sub
ja
inc
and
pushf
and
js
and
fcmovnb
shrb
mov
mov
ret
sbb
fadds
pop
push
xchg
ffree
xlat
pop
arpl
sbb
daa
movsb
xor
test
add
frndint
pop
gs
in
jg
insl
daa
fisubrs
sbb
mov
xchg
push
dec
imul
adc
mov
inc
cmp
fldenv
add
push
pushl
pop
mov
cmpsb
movb
push
sahf
call
fdivr
mov
mov
and
insl
setl
or
fdiv
jnp
dec
cmp
hlt
out
pop
inc
imul
pusha
out
aaa
or
xchg
insb
push
mov
imul
cmc
push
xchg
out
lods
out
or
inc
dec
xchg
sbb
cwtl
inc
out
cmpsl
cltd
jb
or
ret
repz
sbb
cld
js
loope
pop
out
adc
mov
insb
cmp
xchg
pop
jp
inc
scas
jp
iret
xchg
notb
mov
and
mov
mov
pop
ret
inc
mov
je
xchg
xchg
cmp
mov
sub
jns
or
arpl
roll
add
xor
sbb
data16
ror
dec
xchg
jo
cli
inc
xchg
xchg
push
cmp
fidivrl
loop
shr
cmp
add
inc
xchg
rcrl
inc
sbb
fisttpl
outsb
push
imul
push
mov
shll
push
addl
cmp
aaa
loope
subb
pop
dec
pushf
rolb
test
jae
dec
addr16
ds
subl
insl
cli
testb
sub
mov
jle
mov
mov
into
je
xor
jno
das
es
movsl
insb
cmp
jl
push
mov
rol
loope
mov
fstpl
loop
fldt
lret
and
add
gs
pop
xor
pop
xor
sub
movl
sub
dec
aam
fdivr
mov
mov
cmpsl
cmp
test
out
mov
or
sub
cmp
or
mov
mov
cmp
push
ljmp
push
xchg
inc
mov
inc
dec
divl
cmp
scas
sub
push
aad
xor
loopne
jno,pn
loope
xor
cmc
dec
cmc
sbb
sahf
sbb
mov
test
je
stos
adc
jbe
sbb
cmp
or
adc
decl
cmp
inc
mov
mov
testl
adc
and
int
inc
out
jne
ficompl
int3
addr16
pushf
jmp
and
je
pushf
and
sahf
lret
loope
cmpsl
mov
sbb
cmpsb
aad
fsts
test
pushf
and
roll
xor
out
mov
int
jbe
mov
add
cmp
mov
out
ljmp
inc
pushl
mul
test
push
bound
sub
movsb
movsl
aam
loop
mov
xor
inc
xor
scas
sbb
jb
icebp
imull
es
bound
pop
mov
sahf
jne
adc
test
push
shrb
sbb
nop
clc
or
add
add
dec
lods
xchg
xchg
adc
xchg
mov
mov
ds
and
aam
rep
sbb
and
leave
xor
xor
add
add
dec
movsl
ret
add
pop
cmpsb
bswap
pop
cmp
int3
sbbl
push
lret
es
and
pop
fcoms
pop
xchg
fisubl
js
mov
dec
aaa
pop
xchg
add
jns
mov
dec
push
mov
icebp
push
cmp
mov
inc
mov
je
mov
stc
mov
inc
stos
loop
outsb
aad
cmpsb
icebp
adcl
dec
lret
jns
stos
mov
insb
xchg
sbb
cmp
mov
cmp
xor
pop
xchg
sarb
adc
out
adc
pop
inc
jo
je
fnstsw
jnp
xor
cmp
push
mov
je
aaa
cmpsb
es
mov
xchg
mov
jb
cli
mov
mov
inc
jecxz
fimull
sbb
imul
lds
xor
sbb
les
inc
ret
int
mov
enter
stos
into
push
stos
or
jbe
inc
jl
syscall
dec
nop
mov
repnz
jecxz
incw
into
adc
test
push
notl
xchg
test
aad
push
xor
dec
pop
dec
iret
filds
fstp
aaa
icebp
sbb
inc
and
stos
pop
ds
in
out
icebp
push
or
or
pop
mov
outsb
xchg
test
in
mov
popf
or
xchg
jl
aam
mov
mov
aas
lds
xchg
cmpsl
or
mov
ror
xor
sub
dec
mov
out
and
xor
mov
sub
inc
xor
outsl
rcll
cs
pop
and
mov
out
call
rcrl
xchg
pop
test
incb
sub
shlb
ficompl
or
lods
push
ret
test
mov
aas
dec
outsb
mul
frstor
frstor
jg
push
and
xchg
cmpsb
mov
pop
jl
mov
sbb
scas
xchg
push
scas
sahf
cwtl
mov
jbe
xchg
bound
movsb
mov
arpl
xchg
notb
cmp
or
int3
mov
mov
sub
aaa
xchg
adc
inc
sbb
lds
lock
jb
cmp
nop
push
push
out
pop
inc
jns
out
lahf
adc
add
std
adc
in
jecxz
push
cmc
and
lcall
sahf
leave
jae
arpl
repz
fs
pop
fwait
jmp
int
jbe
popf
xorl
dec
aad
clc
lahf
ror
add
call
stos
sbb
movsb
pop
cwtl
inc
cli
popa
push
pop
dec
adc
ja
fstps
fs
dec
mov
sarb
rorl
in
cli
sbb
cmc
loop
mov
incb
test
sub
gs
nop
pop
mov
jno
lods
jb
loop
mov
mov
mov
sub
stc
adc
mov
icebp
cbtw
or
ja
outsb
ljmp
add
rorb
pop
add
jne
sbb
stos
jg
fsts
sub
inc
popf
shlb
mov
lcall
ret
xor
or
sbb
cld
mov
dec
push
test
out
mov
mov
aad
pop
xor
stc
cmp
add
push
push
leave
or
sub
mov
stos
dec
add
jb
ja
or
bound
pop
aas
inc
arpl
in
sub
je
add
mov
and
leave
adc
out
add
mov
aas
fdiv
jns
xor
and
xchg
add
cmpsl
dec
call
sbb
cmpb
es
xor
test
sbb
shlb
pop
xchg
jo
scas
push
cmp
inc
mov
xchg
rorb
ds
mov
cmpsl
push
mov
scas
jmp
fsubs
xchg
movsb
pop
dec
test
jmp
fiadds
pushf
push
cmp
inc
inc
cmpsb
iret
lret
xchg
jle
push
add
inc
scas
insl
packssdw
mov
pop
mov
or
or
mov
pop
pop
inc
or
js
pop
sti
enter
lret
pushf
jb
xor
loopne
pop
xorb
sarb
and
mov
pop
std
push
and
ljmp
sub
cmp
push
outsl
popf
dec
adc
xlat
and
daa
pop
scas
mov
jmp
jp
jbe
ret
out
push
leave
jp
xchg
jle
fldl
adc
cmp
leave
pop
xchg
mov
xchg
jb
fsubl
ret
sti
pop
js
jne
or
es
add
addr16
dec
jmp
lock
mov
mov
mov
and
inc
or
fstpt
xchg
sub
ljmp
fisttps
test
enter
adc
cmpsl
lcall
jg
pop
out
cwtl
jmp
sti
adc
cmp
scas
daa
addb
mov
in
and
cmp
jns
mov
add
movsb
add
sub
sub
cltd
int
adc
pop
out
cmp
sahf
in
mov
or
inc
mov
xor
imul
leave
stos
call
sub
popa
scas
insb
insb
iret
inc
shl
aas
adc
jle
out
or
cwtl
jl
out
insl
negb
mov
jge
ja
push
cmp
inc
mull
add
in
dec
mov
subb
std
ljmp
jns
push
fwait
push
shl
sub
iret
mov
stos
lds
cmpsb
nop
cmp
inc
popa
pop
lcall
lods
xchg
pop
movsb
mov
test
jl
push
cmpsl
aad
pop
xor
mov
sti
mov
fcoml
arpl
inc
not
cmpsb
mov
fwait
lods
cmp
mov
sbb
or
mov
test
daa
xor
sbb
xchg
jg
xchg
lods
hlt
fsubp
mov
imul
push
push
flds
aad
dec
fldcw
mov
push
pop
xchg
and
mov
test
lret
outsl
out
and
jno
pop
pop
pop
rolb
lds
cmp
pop
shlb
xor
outsl
inc
push
in
int3
sbb
cmc
jl
call
xchg
imul
arpl
shl
leave
add
or
sub
and
cmp
decb
movsb
popa
cmpsl
int3
xchg
fmull
pop
cs
sahf
test
aad
test
fsubl
nop
repnz
andl
push
popf
dec
xchg
das
or
or
inc
imul
xor
test
cmc
and
mov
push
sbb
sub
mov
insb
je
sub
test
mov
nop
ret
movsb
idivb
jecxz
push
dec
xchg
js
loopne
shlb
and
pop
push
lahf
subl
sbb
mov
mov
push
shll
int
ljmp
pushf
inc
adc
adc
adc
lods
sub
repz
or
repz
loope
mov
dec
movl
adc
lret
fistpl
pop
inc
bound
outsl
hlt
out
adc
sbb
outsl
add
push
fstpl
add
in
shr
or
js
push
push
fs
insl
sbb
or
inc
sbb
xchg
lea
outsl
and
mov
dec
std
aam
cmp
fimuls
outsl
popa
jmp
test
icebp
dec
push
fdivp
call
out
push
fbld
test
mov
mov
ret
mov
fdivrs
xchg
inc
test
xchg
test
insl
ret
sbb
xor
dec
js
inc
fsubs
cmp
dec
add
repnz
rcr
ret
or
cmp
mov
jbe
repnz
and
outsb
lock
je
in
dec
cld
adc
sbbb
loope
mov
push
popf
and
jo
xor
sbb
xchg
mov
fs
loop
pop
mov
xor
inc
jmp
out
pushf
sti
test
call
adc
inc
jge
adc
cmp
sub
mov
or
mov
inc
icebp
out
mov
repnz
cmp
cmp
add
aaa
andl
dec
push
mov
stc
clc
cmp
dec
fldt
mov
fsubrs
mov
xor
cwtl
jne
fadds
outsl
adc
push
imul
andb
push
jmp
roll
lds
fnsave
sub
cmp
ljmp
mov
or
xchg
xchg
gs
push
pop
shrb
push
push
adc
mov
inc
add
out
int
mov
imul
mov
xchg
or
jl
mov
mov
jb
push
roll
movsb
and
std
cmc
mov
pop
into
mov
test
jg
mov
sub
cmp
pop
je
xchg
adc
cmp
mov
inc
sbb
jge
inc
cwtl
and
in
cmpsl
push
adcl
fistps
mov
jge
pop
xor
das
out
lods
add
lods
dec
pop
fs
dec
mov
sbb
int
icebp
enter
sarb
fbld
lahf
mov
inc
out
sub
ret
add
dec
lahf
add
cli
out
xor
or
call
push
fistl
pop
mov
mov
loopne
jb
dec
cmp
sbb
movsl
insb
add
pandn
mov
adc
pop
fnstenv
jl
out
sub
movsb
cmpsl
pop
divl
shrb
adc
sbb
cli
jbe
popa
filds
pushf
cli
push
xchg
ret
mov
lods
mov
add
xchg
loopne
mov
mov
inc
sub
je
std
jbe
add
stos
sub
out
fldl
or
stos
loop
popa
cli
pop
mov
pop
xchg
or
std
out
out
dec
in
dec
dec
and
add
push
and
inc
adc
push
jns
enter
sbb
mov
xchg
subl
outsl
nop
push
shlb
mov
lret
xorl
push
sub
dec
js
mov
jnp
add
adc
jb
jb
jb
mov
fst
mov
inc
or
movsb
add
pop
sub
call
lods
inc
xchg
push
mov
test
xchg
jbe
mov
mov
mov
mov
xorb
xchg
adc
adc
adc
cli
jb
mov
mov
sbb
repz
outsb
jl
push
dec
jmp
sbb
sub
das
adc
xchg
test
test
das
fnsave
enter
mov
inc
mov
das
push
mov
sbb
imul
neg
inc
xor
mov
mov
xchg
mov
xchg
add
inc
xchg
push
push
into
pusha
jo
aad
fwait
imul
cwtl
not
cmp
or
xchg
push
cmpsb
int3
call
lcall
push
xchg
adc
int
fmull
mov
pushfw
icebp
fimuls
fs
cmp
jns
sbbl
inc
bound
sub
dec
fldenv
add
shrb
xlat
inc
pop
mov
sbb
shl
out
fxch
std
mov
adc
dec
out
or
ret
dec
cli
ret
loop
sarb
cld
movsb
adc
loopne
addr16
adc
inc
and
roll
mov
cmp
adc
push
leave
pop
mov
outsl
popa
pop
add
inc
shll
xor
sub
in
xlat
xchg
scas
mov
mov
ljmp
sarb
pop
and
scas
pop
xchg
das
mov
pusha
ds
mov
sarl
imull
mov
jae
test
clc
fwait
dec
inc
loope
mov
mov
xlat
mov
cmp
jp
cwtl
adc
inc
add
movsl
popa
and
push
sbb
lea
or
cmp
adc
jnp
cwtl
enter
push
jmp
mov
or
push
cmp
fcmovnb
sub
insb
cltd
and
mov
lods
mov
aad
ljmp
sbb
adc
pop
aas
add
mov
lods
es
or
inc
imul
pop
dec
cmp
shl
push
aaa
stos
out
pop
fisubrl
rol
mov
lcall
inc
das
fdivs
fldcw
push
or
lods
xchg
inc
cmpb
out
xor
sbb
xchg
jns
int
repz
in
je
dec
and
inc
rcl
in
push
outsl
fnstcw
mov
push
out
fwait
loope
lret
cmc
ret
jmp
and
gs
adc
in
cmpsb
jns
adc
dec
es
aad
pop
cs
add
movsb
sub
push
mov
mov
fs
into
sahf
jmp
into
rcl
mov
push
jle
add
stc
sub
dec
xor
mov
ret
arpl
roll
div
ljmp
shl
sub
or
faddl
out
inc
js
lahf
jle
sbb
xor
mov
sub
sti
jns
jbe
mov
pop
jb
xor
cmp
xorl
cltd
push
lahf
cmp
cmp
pop
out
dec
xchg
dec
inc
dec
fdivp
sbbl
sbb
ret
jmp
jecxz
cmp
lea
inc
mov
xchg
pop
pop
je
mov
outsb
mov
pop
rcll
pushf
and
mov
adc
movsl
and
pop
testl
data16
fs
xchg
imul
leave
inc
fyl2xp1
sub
lcall
cltd
ljmp
shlb
dec
inc
jo
push
cmp
jmp
lahf
xchg
adc
loope
bound
adc
subl
scas
insb
popf
pop
insl
ret
lahf
dec
fldenv
add
adcl
out
pop
jle
arpl
and
repz
arpl
lcall
mov
push
sbb
mov
push
cmp
sahf
rcr
das
jg
inc
inc
mov
xchg
push
dec
clc
loopne
pop
test
sti
or
lock
popf
loopne
sbb
mov
or
mov
jns
xor
fs
xor
inc
fcmovu
adc
lcall
dec
aaa
mov
jp
sbb
mov
mov
pusha
lahf
jns
flds
and
mov
mov
faddl
pop
icebp
movsl
push
orl
or
add
sti
jle
sub
dec
pop
xchg
test
jg
xor
xchg
repz
mov
xchg
push
stos
jno
push
cmp
and
jp
cld
jo
fstpt
nop
pop
mov
cli
shrb
out
mov
sub
and
push
test
mov
or
mov
pop
push
push
ret
mov
mov
out
dec
mov
bound
aaa
out
pop
jecxz
shlb
push
mov
rcrb
inc
bnd
jae
loope
lret
adc
inc
xchg
mov
inc
xchg
jnp
filds
push
mov
or
call
pusha
js
jne,pt
aaa
xchg
loop
outsl
iret
push
mov
js
das
mov
pusha
and
stos
adc
dec
insl
lds
push
popa
int3
jle
pop
sbb
pop
cmp
xchg
push
cld
sbb
lock
ret
cmovb
adc
js
outsb
in
addb
jnp
add
into
add
andl
or
pop
pmovmskb
jne
xchg
nop
or
mov
or
out
cmp
mov
add
or
pop
dec
xchg
aas
add
dec
dec
ret
lock
adc
outsl
xor
jge
mov
fistpll
jecxz
push
popf
and
add
pop
mov
sahf
cmp
dec
xor
rcrb
popa
mov
sarl
fs
inc
xor
cltd
ficoml
repnz
les
insb
or
mov
aaa
testl
dec
push
inc
dec
or
adc
sbb
in
and
jns
and
jg
dec
xchg
pop
outsl
xchg
hlt
mov
lock
lcall
jge
lret
test
jg
js
xchg
movsl
mov
jbe
lds
imul
mov
cmp
lahf
aas
sbb
lock
jnp
mov
imul
and
test
repnz
dec
mov
xchg
xor
inc
add
mov
mov
push
into
mov
inc
arpl
xchg
mov
imul
push
fdivrs
mov
xor
lea
aam
pop
ret
push
inc
pop
xchg
mov
and
jmp
pop
test
mov
mov
dec
sarb
dec
ret
fldt
lock
jl
mov
mov
loope
inc
arpl
pop
add
pop
loopne
cmp
lds
add
arpl
inc
lret
mov
mov
icebp
and
add
sub
shlb
pop
std
pop
or
dec
ljmp
mov
and
mov
add
lods
pop
lea
ret
dec
mov
shlb
inc
movsb
cltd
xchg
jns
inc
les
hlt
out
mov
scas
or
mov
mov
bound
int3
out
ljmp
mov
xchg
cmpsb
psubb
hlt
push
add
lcall
pop
mov
mov
cmc
lock
jmp
scas
lea
mov
mov
clc
hlt
xchg
popa
mov
les
popf
push
jae
pop
and
jno
shlb
mov
fcmove
sub
dec
rcrb
adc
cld
mov
mov
lods
shll
insl
shll
call
xorb
push
sub
dec
test
add
and
loopne
mov
orb
jp
xchg
int
xlat
test
insl
mov
sub
inc
dec
lret
fucom
movsb
stos
loopne
imul
push
mov
mov
call
outsl
test
xchg
inc
cmp
inc
inc
xchg
xchg
push
and
xor
cmp
mov
decl
lods
xor
rolb
pop
fldl
add
jno
sub
outsb
xsha256
cmpsb
xchg
inc
call
pop
pop
pop
add
jg
add
jnp
xlat
xor
pop
push
jge
jg
call
dec
leave
js
jns
sbb
cmpsb
popl
jg
inc
out
jmp
push
int
mov
inc
fldl2t
clc
cltd
in
loop
push
mov
popf
mov
in
inc
icebp
mov
add
sub
pop
lds
xor
cli
cmc
shrl
dec
mov
and
js
jp
sub
mov
and
test
push
out
cmpsl
enter
jl
or
popf
enter
xor
mov
test
pop
outsl
loope
cmc
mov
xchg
outsl
and
jae
xchg
push
push
mulb
lahf
jg
xchg
push
jb
arpl
pop
inc
sbb
popa
arpl
jno
mov
dec
adc
push
add
or
lock
in
add
adc
mov
icebp
push
inc
and
or
icebp
xor
xchg
sar
sub
aad
adc
popa
mov
lods
push
add
ret
fdivr
xlat
stc
and
sbbb
sub
out
lea
mov
xchg
jle
sarl
loope
push
sub
inc
mov
leave
loope
and
outsl
pop
jmp
or
lahf
test
fistl
incl
or
lods
inc
push
push
xchg
mov
lcall
add
pop
ret
lods
repz
in
add
push
arpl
ret
jae
ficomps
sub
sub
aad
xchg
mov
add
inc
loopne
jl
push
inc
sbb
dec
jno
push
cmpsb
xor
ds
sbb
add
cmp
icebp
push
mov
mov
sahf
mov
stc
icebp
add
pop
xchg
aaa
pusha
mov
mov
xchg
add
je
xor
sbb
pop
add
vpmacsdd
adc
mov
or
mov
xor
push
pop
cmc
mov
leave
fimuls
ja
xor
cmp
cmpl
cmp
and
lock
pop
int
and
in
insl
xor
push
cld
cmp
pop
pop
lods
movsl
cli
aaa
popf
sbb
mov
aas
pop
jecxz
adc
rcrb
sti
loop
stc
mov
mov
sbb
sti
in
jnp
sub
dec
push
cmp
adc
imul
mov
fidivrl
dec
adcb
pop
push
mov
jnp
repz
push
mov
mov
int3
pop
sub
adc
jb
in
repz
inc
mov
aad
lret
cmpsl
mov
pop
enter
mov
add
sub
scas
mov
fs
dec
pop
mov
insb
addr16
iret
imul
mov
or
scas
outsb
test
shlb
leave
pop
adc
enter
popa
cmp
pop
iret
insl
lods
aaa
popa
hlt
mov
out
out
in
push
cli
rorb
xlat
lret
sub
out
xor
fildll
mov
rcr
in
loope
push
outsb
sbb
data16
sub
cmp
xchg
pop
push
into
pop
stos
cmp
cs
lds
mov
mov
lea
pop
lret
hlt
mov
cmp
dec
sbb
push
in
or
arpl
sbb
mov
xor
hlt
lods
in
inc
aaa
push
pop
mov
imull
repnz
addl
int3
mov
sbbl
dec
mov
mov
mov
mov
add
negl
push
mov
outsl
incl
subl
fstps
out
jecxz
adc
mov
repnz
stc
jmp
and
jl
idiv
fldt
into
mov
add
jbe
or
mov
outsb
xlat
test
stc
sar
inc
xchg
ja
loop
jo
sub
cmpsb
scas
add
iret
fmull
mov
insl
push
mov
mov
cmp
mov
or
adc
loope
sub
adc
sub
test
mov
pop
leave
push
cmpsb
orb
data16
jno
popa
push
icebp
cmp
mov
adc
mov
cmpsb
loope
shr
fcmovnbe
cwtl
iret
shll
lods
mov
pop
mov
scas
jne
int
xor
push
jne
lcall
cmp
jg
sbb
mov
push
add
jno
imulb
pusha
fldt
pop
sbb
fwait
mov
iret
loopne
jbe
test
repz
xchg
adc
cs
cmp
pop
mov
fbld
jno
dec
fptan
and
sbb
and
mov
and
out
add
xchg
sar
leave
out
push
dec
push
cld
mov
xorl
xchg
pop
enter
fdivs
es
and
sub
or
mov
outsb
mov
xor
or
mov
movsb
and
iret
jno
insl
fsubrs
mov
jecxz
sbb
clc
lods
stos
add
jo
or
inc
mov
cmp
outsb
rcl
cld
inc
sti
adc
call
and
push
bnd
imul
jns
fsubrl
and
pop
inc
pop
lret
adc
push
mov
cmp
das
repz
out
ss
xor
movsb
icebp
fdivr
rcl
dec
popa
lock
out
shld
imul
jno
pop
pop
adc
sub
add
add
push
xchg
ret
fdivrs
add
or
sahf
push
lods
push
psrld
jl
adc
push
mov
lods
xchg
sub
out
xor
popa
mov
cmp
pop
popf
xchg
pop
push
xlat
mov
xor
nop
out
cmp
cmpl
mov
in
out
loopne
xor
push
ret
sbb
shl
leave
mov
push
hlt
in
les
mov
cmc
call
movsb
pop
test
in
imull
arpl
sarb
rcrb
lahf
jmp
inc
jnp
push
inc
push
dec
flds
sub
xor
leave
outsb
aad
fld
pop
inc
sbb
cs
lret
cs
movsb
mov
out
jne
icebp
mov
sbb
push
jp
xchg
divl
sahf
lahf
cmp
and
jne
xchg
popa
dec
out
cmp
icebp
jg
das
fsubrs
cmp
test
bound
inc
scas
mov
adc
mov
pop
xor
sbb
push
cmp
or
ss
mov
pushf
mov
cmp
or
in
pop
rcll
inc
mov
sbb
cmovne
add
sub
nop
insl
out
mov
cmpsb
insb
stos
test
jno
add
stc
jnp
mov
loope
inc
int
rorb
mov
dec
dec
in
scas
into
and
dec
mov
mov
cmp
in
xor
xchg
movups
pop
jae
inc
xchg
aad
cmp
xlat
xor
xor
push
cmc
leave
nop
xor
and
lea
lcall
mov
or
mov
jb
scas
lea
enter
in
cmp
fldcw
call
stos
test
ret
ret
sarl
lahf
jmp
daa
jmp
rcll
clc
push
mov
jb
sub
mov
or
pop
xlat
fiaddl
ds
sarb
es
ljmp
jle
mov
psubw
pop
lret
push
les
loopne
cmp
loopne
dec
inc
cli
mov
es
mov
mov
scas
inc
dec
out
sub
pop
dec
mov
dec
stos
adcb
dec
jge
dec
dec
mov
shl
fs
sarb
arpl
je
jp
sahf
pop
cli
pop
divl
sub
cmpsl
hlt
sbb
popf
add
scas
sub
xchg
sub
cmp
fisttps
or
ficoms
push
lods
sub
dec
pop
cmp
inc
fcoml
outsb
std
insb
add
push
aad
test
xor
orb
add
and
jo
or
lods
ficompl
mov
lods
add
fistpll
or
aas
repz
subl
aam
lea
jae
jb
and
inc
lods
es
or
dec
les
aam
cld
sbb
cwtl
rolb
pop
lds
xchg
cmpsl
mov
je
inc
mov
sbb
jmp
stc
stc
jg
mov
scas
cmp
dec
shrl
testb
repnz
jns
stos
loop
fwait
add
fcmovbe
sbb
aam
imulb
jle
or
push
xor
faddl
pop
mov
sbb
pop
mov
aad
xchg
xchg
inc
mov
das
cmpsl
rorl
inc
fwait
cwtl
popf
scas
jns
in
pop
fxch
pop
adc
adc
cltd
lea
fbstp
stos
fwait
sbb
mov
lahf
sahf
jae
jnp
dec
and
lods
shl
vpmacssww
mov
or
mov
mov
push
out
xchg
cmp
dec
je
mov
mov
stos
adc
pop
cmp
mov
mov
nop
mov
lods
mov
mov
and
decb
xor
xchg
xor
imul
jb
jl
inc
dec
shll
loop
cld
mov
lods
mov
call
inc
popf
addr16
lcall
aam
mov
out
mov
in
mov
not
stos
negb
aam
add
cmpsl
addr16
xlat
add
lahf
jns
mov
orl
mov
ljmp
mov
sub
sbb
add
mov
aam
inc
dec
dec
mov
mov
jno
sbb
adc
ror
daa
repnz
out
inc
call
pushl
enter
addr16
jnp
sub
push
or
dec
push
dec
add
insb
jmp
xor
dec
repz
jne
mov
in
sub
shlb
dec
aam
shll
mov
mov
dec
cmpsl
lahf
xor
call
lret
xor
adc
js
pop
inc
dec
andb
mov
in
sbb
orb
ror
pop
mov
in
lea
cli
pop
shl
loope
ds
in
mov
mov
sbb
xorb
ljmp
inc
mov
push
cmp
hlt
pop
inc
iret
xchg
xor
call
int
or
inc
stc
mov
incl
pop
and
sub
jge
inc
int3
loop
leave
inc
sub
stc
push
pop
dec
imul
sub
minps
lock
pop
outsb
xor
movsl
pop
or
xchg
outsb
sbb
mov
jno
aam
clc
lahf
lret
divl
push
pushf
jg
sbb
imulb
xor
insb
loopne
pop
add
pop
andb
sbb
fisubrs
sbb
jb
dec
lea
jne
in
icebp
scas
adc
sbb
inc
out
jb
push
jle
mov
push
jmp
fisubl
cmp
push
call
or
dec
test
fwait
dec
outsl
or
arpl
popa
lock
out
xchg
data16
movsb
sarb
sbb
lock
sbb
sbb
jnp
movsl
repnz
lahf
add
loop
inc
sti
xchg
push
inc
jb
leave
xchg
dec
sub
addr16
rorb
sbb
add
dec
mov
mov
jg
leave
mov
jle
jbe
push
sub
xchg
mov
lcall
add
jmp
or
pop
nop
jno
std
jne
mov
mov
sub
daa
mov
sbb
mov
adc
out
mov
mov
imul
das
orl
data16
loope
aaa
add
cmpsl
stos
add
in
popa
fdivrl
push
lock
inc
jbe
adc
adc
and
loop
mov
ret
repz
loope
mov
or
pop
sbb
or
xchg
mov
mov
jecxz
addb
lret
sbb
hlt
pop
mov
xlat
and
sbb
jmp
pop
push
bts
mov
rorb
fistl
test
fstpl
xchg
push
mov
pop
and
mov
cli
jl
dec
imul
jnp
inc
cmp
aas
ljmp
dec
gs
or
pop
mov
in
adc
xchg
aad
mov
fists
dec
and
outsb
mov
xchg
mov
push
fimull
aaa
dec
sarl
sbb
xor
movsb
inc
xchg
call
loopne
mov
xor
mov
dec
sarb
mov
call
lahf
cmpsl
test
mov
addb
push
hlt
jnp
pop
pop
lahf
pushf
sub
arpl
into
cmpsl
pop
test
dec
mov
add
into
out
adc
lahf
adc
xor
fistpl
inc
out
das
or
fmuls
xchg
or
pop
lock
scas
std
push
shlb
jge
js
inc
inc
sbb
mov
mov
xchg
shr
xchg
arpl
lret
call
xor
xchg
insb
fidivrl
test
orb
jge
mov
roll
xchg
inc
cmp
sub
and
nop
push
mov
jmp
mov
fstpt
lcall
sub
sahf
insb
loope
cmp
dec
cmp
push
aas
and
sbbl
mov
push
cmp
scas
xchg
aas
mov
sbb
scas
xor
call
jecxz
dec
out
dec
jmp
inc
stos
pop
sbb
popa
mov
sub
xchg
lret
adc
repz
push
orb
rol
cwtl
add
mov
jne
add
ja
pop
jle
idivb
jno
mov
cmp
push
jb
mov
sub
loope
aam
jae
test
popa
movsb
xchg
mov
mov
call
lock
or
call
mov
fucomi
push
push
sub
inc
cltd
pop
andnps
in
nop
pushf
daa
aad
ret
movsl
es
aam
cwtl
dec
ret
loope
sub
xor
sahf
cmpsb
das
sarb
add
jae
or
cmp
daa
fdiv
mov
loop
aaa
pop
out
pusha
fwait
dec
mov
insw
adc
add
mov
popa
sbb
lret
outsl
stc
stc
adc
cmpb
push
inc
sbb
out
aas
pushf
mov
push
and
sub
aad
adc
pop
mov
cwtl
pushf
xchg
fcoms
push
mov
push
pop
pop
sbb
out
iret
xchg
dec
fcomi
pushf
pop
lods
push
icebp
jg
sub
or
addb
cmp
cld
aas
ret
cmpsl
mov
es
and
enter
push
mov
insl
inc
rcr
mov
push
cmpsb
xor
sub
mov
ret
je
mov
cmpb
addr16
or
mov
cmp
inc
ss
or
pop
jnp
lods
pop
dec
and
jo
out
dec
and
int
outsb
insb
aam
iret
push
movsb
or
mov
cmc
nop
jns
es
inc
insb
cld
cmp
push
xor
dec
or
xlat
and
inc
inc
rorb
loopne
mov
jp
insb
adc
das
fsubrp
je
cli
aam
mov
cmp
ds
mov
jns
sub
add
mov
mov
jo
cmovae
mov
rep
pushf
push
dec
pusha
jb
jns
adc
mov
pop
mov
fs
je
or
mov
fistpll
inc
leave
sub
lret
sbb
lldt
push
imul
cmp
sbb
lock
xchg
les
xlat
rorl
inc
jp
sbb
jns
inc
lock
jge
popa
sub
fcoms
lods
mov
sahf
out
ds
xchg
cltd
mov
jnp
out
mov
or
sub
dec
nop
rcrl
xchg
or
jno
rorb
cmp
fs
loop
or
or
js
fcoms
aad
mov
inc
imul
sub
xor
lds
data16
fldenv
mov
cmpsl
loop
roll
pop
fistps
gs
jnp
jns
icebp
mov
out
jne
filds
dec
mov
dec
jl
jbe
jmp
and
or
dec
or
rorb
xor
fisubl
jae
mov
sbb
pushf
repnz
lods
jae
stc
push
fstl
call
je
mov
dec
in
mov
and
adc
adc
jns
sub
daa
fs
pop
adc
mov
mov
test
addl
add
outsb
nop
ret
pop
pop
adc
jbe
sti
aaa
cmp
hlt
add
cmp
jne
inc
push
mov
les
pop
jno
shll
hlt
mov
cmp
stc
push
add
push
mov
lret
sbb
in
xchg
lods
popf
dec
or
movsl
sbb
pusha
pusha
test
xchg
push
aaa
loopne
sub
repz
add
shrl
xor
jae
cmp
ljmp
outsb
mov
pop
sbb
movsb
bound
cli
pop
ds
mov
jo
cld
mov
pop
xor
cmp
ss
xor
fsubs
mov
add
mov
sbb
stc
push
sahf
jo
push
mov
cwtl
xchg
ret
xor
lock
jae
push
and
push
pop
sbb
mov
mov
repz
pop
xor
jl
xchg
push
xchg
mov
push
or
hlt
xor
sub
mov
pusha
dec
mov
mov
es
outsb
cltd
ljmp
stos
jecxz
sbb
shll
imul
xlat
out
jbe
icebp
imul
mov
mov
int
sbb
leave
addr16
mov
adc
out
xor
mov
add
lock
in
test
outsb
aad
mov
xchg
xor
imull
push
testb
jp
pop
mov
pop
cmp
inc
jns
mov
xor
fmuls
or
out
in
lods
dec
test
js
mov
dec
xchg
lods
scas
fcmovbe
lahf
stos
lock
jge
in
inc
shll
pop
xchg
xlat
mov
cmp
je
mov
lret
add
sbb
stos
mov
int
sarl
sti
das
pop
adc
daa
test
pop
gs
sub
aam
mov
push
jb
mov
sahf
shrl
lcall
mov
push
shrl
out
loope
fnstcw
clc
data16
scas
rclb
push
nop
ret
cli
xchg
mov
sti
push
inc
add
loope
push
adcl
notl
ja
and
push
cs
xchg
push
sbb
aas
fstps
fisttpll
xchg
cmpsl
add
dec
mov
mov
test
fdivrl
adcb
sub
or
xchg
mov
test
clc
add
adcl
push
loope
mov
or
clc
mov
shll
dec
lds
lds
pop
cmp
adc
push
int3
arpl
cvttps2pi
test
xor
iret
imull
mov
cmp
scas
out
pop
or
sti
adcl
add
sub
mov
cs
dec
test
jl
aas
lea
js
mov
mov
xchg
sbbl
stc
jae
inc
dec
push
flds
scas
data16
lds
mov
sub
fisubrl
movsb
out
mov
and
xor
dec
test
popf
loopne
shl
imul
and
cltd
es
test
adc
mov
sbb
clc
dec
dec
xchg
mov
mov
add
orb
mov
repz
scas
pop
in
scas
xlat
mov
push
xor
xchg
in
test
sbb
mov
sub
push
icebp
cmp
test
and
pop
sbb
cmpsl
xchg
cmpsl
xor
scas
in
cmpsb
out
loopne
loopne
mov
insb
push
or
sbb
fwait
cmc
lahf
hlt
xchg
fdivl
subb
xlat
or
sub
mov
adc
and
jp
sbbl
gs
inc
add
outsl
sub
sti
not
aas
popa
push
mov
xlat
jno
data16
cmpsl
pop
push
mov
xchg
push
mov
test
xchg
or
xor
jne
fcompl
stos
sbb
xor
loope
fwait
cli
pop
mov
fbld
mov
xor
and
rcl
sub
int3
dec
inc
add
mov
iret
mov
cs
and
sub
sbb
hlt
sbb
nop
adc
pop
push
push
insb
xchg
cmp
lods
xor
data16
or
repnz
jae
xchg
scas
mov
shrl
mov
xchg
mov
pop
adc
jno
adc
xor
sub
xor
add
mov
add
inc
push
inc
fiaddl
aas
movsb
cmp
icebp
lock
sbb
jne
out
js
push
add
push
inc
jg
mulb
xlat
out
push
inc
mov
lock
and
pop
pop
mov
cmpl
dec
loope
adcb
sbb
or
dec
call
stc
daa
push
insb
mov
or
and
sahf
fstps
in
addr16
push
pop
popa
addb
push
sub
jne
jae
push
cmp
out
cmp
adc
push
lret
xchg
outsb
push
insb
cld
in
insl
pop
mov
sbb
cvtpi2ps
jmp
and
fs
xchg
jl
pop
movsb
outsb
xor
jno
imul
push
inc
mov
fdivr
in
je
inc
arpl
std
dec
push
cmp
repnz
divb
cmp
imull
jae
pop
stc
dec
movsl
push
dec
int
cmpsl
test
leave
pop
add
cmp
sbb
lods
mov
loopne
dec
in
aaa
cmp
shll
adc
mov
adc
cmp
adc
mov
add
or
jae
jnp
inc
mov
dec
dec
cmp
outsl
dec
xchg
and
cmc
sbb
adc
push
in
or
push
mov
jae
dec
test
out
pop
out
mov
xchg
cmpsb
shlb
mov
fsubl
push
jo
mov
or
fwait
aam
je
jbe
fisttpl
fimuls
xor
sbbl
rorb
movsl
outsb
mov
ja
cmp
notl
xlat
mov
jb
out
inc
negl
test
outsl
or
dec
out
cmp
sbb
sub
push
adc
jb
add
jb
lret
stos
in
jmp
mov
mov
negb
cmpsl
stc
gs
stos
shll
jne
push
adc
popa
fdivrl
les
mov
iret
iret
jl
inc
mov
sub
or
mov
hlt
pop
mov
movsl
jp
pop
push
fdivr
cmc
lock
jge
push
mov
xchg
nop
rorl
cmc
ja
jecxz
ret
add
loope
mov
inc
ljmp
gs
sbb
arpl
aad
mov
cs
mov
insl
ret
aad
test
adc
imul
add
or
mov
pop
sbb
jbe
in
leave
pop
pusha
pushf
pop
lods
testl
mov
pop
pop
loop
lahf
sub
ss
into
inc
inc
adc
fwait
setg
sub
jl
div
fiaddl
cmp
sub
adc
out
cmp
in
test
xchg
shlb
push
addr16
pop
mov
jmp
dec
stc
pop
insb
xchg
xchg
cmp
insb
ret
lds
lcall
dec
mov
xchg
and
pop
outsl
dec
lock
lods
dec
cmp
push
mov
inc
stos
scas
dec
fnstsw
mov
mov
add
fs
xor
jns
sbb
stos
jno
int3
mov
adc
in
jo
insl
shll
sub
nop
cmp
cmp
mov
jb
xor
sub
out
je
jp
or
sti
aaa
pop
xor
adc
sub
cmp
lahf
pop
fisubs
dec
cmp
rcrb
jmp
inc
xlat
adc
or
test
movsb
loopne
repz
push
or
inc
cmpsb
jnp
mov
lods
and
das
idivl
xchg
push
mov
jle
aad
xchg
jo
lea
xchg
cwtl
dec
push
sub
aaa
or
test
adc
mov
xchg
push
xchg
bound
movsb
lret
pop
out
int3
stos
popf
sti
test
sbb
mov
adc
sub
icebp
adc
idivb
loope
push
mov
ret
iret
lcall
addr16
mov
mov
mov
and
in
pop
inc
fbld
push
pop
es
fcom
mov
bound
ss
jmp
dec
xchg
leave
popf
and
push
push
pusha
pop
cld
jae
xor
pusha
ficomps
pop
and
cwtl
cmp
test
sbb
jb
jge
mov
repz
pop
add
mov
push
dec
sti
test
pop
mov
lock
icebp
loope
adc
xchg
fidivl
popf
pop
mov
outsb
pop
lea
mov
sbb
loop
push
push
and
inc
leave
push
test
sub
mov
pop
cmp
jmp
xor
xor
scas
mov
mov
loopne
lock
add
inc
mov
push
jp
sub
ljmp
imul
dec
repnz
dec
filds
jnp
adc
adc
xchg
cmp
jg
jmp
add
sbb
cmc
jo
in
sbb
mov
pop
adc
jecxz
fdivs
scas
jo
scas
push
frstor
das
outsb
jns
push
dec
push
outsb
adc
loopne
movsb
inc
pop
test
or
or
adc
mov
dec
addb
out
cmc
jecxz
add
andb
stc
push
dec
and
jmp
mov
fcom
adc
sti
push
pop
push
mov
mov
data16
mov
mov
out
adc
and
mov
or
push
lcall
shlb
out
in
inc
insb
outsb
out
sbb
daa
mov
shl
es
test
pop
jne
sub
mov
std
pusha
adcl
xchg
in
and
push
out
sub
jl
rorb
add
aam
and
jb
pop
pop
dec
mov
ja
and
js
bound
dec
push
sbb
and
je
adc
mov
iret
mov
fisttpl
fldcw
jmp
shl
cmpsl
mov
mov
sbb
cli
int
xchg
loopne
insb
imul
xor
sub
jl
loope
sub
mov
cmp
sti
add
outsl
jae
mov
push
ja
das
mov
mov
jge
push
xor
sbb
js
push
loop
mov
pushf
lods
sub
sbb
aad
out
ret
lret
jne
call
or
mov
cli
mov
fyl2x
adc
pop
pop
jbe
loop
dec
lcall
jecxz
sbb
mov
mov
add
adc
jo
add
mov
add
xchg
jp
addb
iret
popf
or
bound
xchg
mov
cmc
or
cmp
pop
sub
pop
jo
pop
push
es
jmp
xchg
cs
xchg
dec
insw
xchg
aas
fs
xchg
in
lahf
stos
add
inc
jb
loopne
inc
stc
xor
mov
jmp
in
shrb
cmpsb
jo
pop
popf
mov
xor
add
jg
scas
cmp
icebp
jo
xchg
int3
adc
mov
fwait
out
mov
jne
push
leave
jecxz
jnp
insl
dec
test
outsl
mov
movsb
lea
xchg
jmp
gs
bound
lods
arpl
dec
sbb
js
mov
mov
pushf
xor
inc
data16
xchg
outsb
outsl
jbe
pop
outsb
gs
or
hlt
sub
adc
leave
pop
sbb
out
and
mov
outsl
and
add
mov
jbe
pushf
mov
clc
cmp
xlat
frstor
sub
pop
cmp
jno
outsb
jo
mov
jmp
shll
rcll
mov
jo
mov
push
dec
pop
out
add
jmp
mov
insb
aas
int
punpcklwd
jae
xor
lcall
dec
sbb
inc
insl
pop
fs
arpl
adc
shl
or
mov
inc
lahf
jo
sbbl
mov
gs
pop
leave
mov
addb
lock
push
sub
rcr
out
imul
lret
ja
sub
outsl
mov
lahf
hlt
mov
icebp
ror
mov
movsl
add
cmp
test
out
mov
xchg
cltd
lret
sahf
mov
xor
stos
sti
mov
loopne
hlt
loop
lea
cmp
jns
ds
xchg
push
jmp
xor
xor
clc
loop
jnp
aad
shr
ret
dec
por
sbb
call
dec
push
lea
lock
jnp
push
hlt
push
aas
aam
cltd
push
cmp
jg
mov
nop
into
hlt
dec
lea
les
rep
jno
add
mov
sub
stos
add
cmp
cmp
pop
fadd
fprem
push
mov
pop
sbb
sti
call
xor
mov
pop
push
sbb
sub
lock
enter
popa
mov
push
lahf
add
sub
add
int3
mov
mov
mov
and
sbbl
leave
xchg
cmp
popf
bound
inc
pusha
js
ret
xchg
mov
dec
les
outsl
shlb
jnp
lock
adcl
cs
xchg
jmp
jno
mov
mov
shl
cmp
imul
divl
pop
push
ljmp
shl
outsl
pop
sets
outsl
fbstp
lretw
jmp
lea
xlat
fstp
cmp
test
cmc
add
xor
pop
sub
shrl
cmp
push
lret
add
rcrl
dec
jg
push
mov
iret
popa
xor
cli
jbe
hlt
pop
rcr
dec
into
mov
and
bound
mov
iret
push
sahf
mov
mov
sbb
iret
xor
jp
dec
dec
sti
outsb
and
jno
xchg
repz
bound
and
lret
xchg
adc
pop
js
mov
int
insb
cmovl
or
push
or
dec
pop
and
dec
push
daa
fdivl
ljmp
push
ljmp
lcall
add
add
push
clc
mov
add
add
xlat
aam
outsb
leave
sub
js
mov
pop
jne
push
fadd
or
jns
jb
mul
repz
imul
aam
stos
adc
cmp
push
arpl
sub
ja
jp
xor
push
mov
insl
xchg
add
dec
inc
jl
leave
add
or
ret
sarb
aaa
lcall
rcrl
push
mov
cld
sub
scas
fisttps
rcr
es
int
push
stos
jae
in
iret
lds
mov
shrl
add
xchg
test
pop
dec
test
dec
xorb
adc
pop
inc
push
loopne
movsb
push
xchg
test
mov
popf
into
icebp
sbb
add
mov
sar
icebp
mov
gs
cs
je
mov
or
dec
xchg
divb
mov
rcrb
movups
call
cmp
fwait
pop
pop
addl
mov
cmp
shl
dec
push
sub
jne
pop
xlat
push
adc
sbb
enter
sti
fs
inc
int3
adc
imul
xchg
in
inc
add
fdivs
xor
lahf
cmp
add
addb
pop
add
mov
cmpsb
repnz
adc
mov
and
ljmp
addb
leave
and
or
dec
fs
sbb
mov
mov
push
ret
in
sub
jb
imul
mov
loope
xor
or
mov
dec
adcb
inc
call
test
lods
out
mov
lcall
adc
jp
jge
xchg
inc
xor
dec
inc
jle
cwtl
stos
fadd
pop
or
adc
sahf
mov
out
cmpsb
enter
lret
xor
jns
mov
push
dec
and
push
and
xchg
xor
xor
and
add
xor
xchg
aad
into
in
push
pop
mov
xchg
cmp
inc
mov
jns
cltd
repz
rcll
mov
mov
and
stc
lcall
ja
fcomps
stos
cmpsb
push
dec
add
roll
test
int3
jp
lods
in
into
cmp
mov
pushf
xchg
adc
pusha
mov
in
cmp
mov
lods
adc
mov
push
mov
cwtl
das
out
cmp
sbb
in
fisttpl
mov
fsubs
in
sub
inc
push
pop
ficompl
into
adc
mov
rcrl
xchg
jbe
xchg
shl
adc
push
fdivr
das
mov
int
or
sbb
cld
jl
fdivrp
inc
insb
add
std
cmp
mov
ss
out
mov
pop
pop
loope
aas
cmp
imul
dec
push
icebp
xchg
cmp
push
inc
cld
leave
xchg
cmpsb
into
ljmp
pusha
xchg
jns
xor
fstl
xorb
xchg
pop
mov
sbb
pop
mov
xchg
mov
pop
mov
xchg
out
mov
rorb
inc
sub
mov
ret
pop
aam
rcll
std
insl
adc
iret
xchg
push
sub
cmpsb
jno
mov
add
inc
mov
sbb
jle
sarb
ja
pop
mov
ljmp
jo
xor
sahf
imul
add
xor
repz
inc
pusha
xor
or
subb
clc
lea
or
repz
pop
mov
aad
out
jbe
in
or
pop
iret
addr16
pushf
dec
lret
mov
push
lcall
daa
jle
xor
in
lret
lcall
mov
in
mov
rclb
dec
xlat
lahf
mov
push
and
and
adc
andl
push
xchg
fcoms
mov
cli
repnz
ja
addb
repz
xor
cmp
aaa
mov
dec
and
out
cmp
inc
or
xor
rolb
cmp
mov
cmpb
hlt
push
popa
mov
lods
push
pop
and
es
roll
loop
mov
out
mov
loopne
ss
xchg
aad
pop
scas
mov
in
hlt
repz
mov
mov
cmc
adc
es
inc
jmp
lock
test
jp
jl
pop
fs
rcll
cs
xor
shlb
add
mov
adc
dec
shrb
test
arpl
test
xor
insb
xchg
jge
shlb
push
push
ficoml
aad
cltd
push
daa
xor
gs
push
call
popa
f2xm1
dec
outsl
rol
sbb
daa
ljmp
mov
xor
fistpll
cli
dec
in
pop
or
loopne
sbb
pop
js
lret
lea
outsb
pop
rcrl
cmp
mov
mov
push
out
jp
test
push
and
leave
lahf
stos
xor
jns
mov
lods
popa
dec
movsl
cmp
mov
push
xor
addr16
adc
nop
xchg
fiaddl
or
lods
sub
pop
pushl
fcompl
shrb
icebp
js
cmp
popa
rcll
dec
pop
mov
loope
fnstcw
mul
jmp
jmp
sub
push
xor
jl
cmp
sbb
adc
push
pushf
cli
insl
or
pxor
cmp
cld
adc
mov
int
mov
fwait
or
sbb
fldcw
push
sbb
and
jbe
std
mov
cmp
mov
jmp
xchg
pop
popf
xchg
add
adc
pop
hlt
inc
adc
scas
paddd
adc
and
lods
mov
xchg
mov
out
add
aam
rorb
repnz
push
jge
pop
pop
pop
dec
mov
cmp
ret
lock
icebp
in
xorl
iret
sub
aad
xchg
mov
push
jnp
add
inc
addr16
jnp
bound
push
sahf
cltd
sbb
and
cmp
loopne
cmpsl
mov
sbb
jl
push
shl
and
inc
push
push
inc
push
out
jmp
mov
fisubrl
lahf
mov
jp
xchg
xchg
jmp
xorb
popa
lods
cmp
push
sbb
daa
xchg
mov
cli
jne
loop
mov
mov
pop
and
pop
int
outsb
sbb
in
mov
adc
mov
or
mov
ss
jg
mov
shrb
add
cwtl
jno
insl
cwtl
mov
cld
pop
scas
fucomi
sub
leave
fwait
pop
mov
jns
xor
cmpsl
add
or
adc
das
mov
mov
mov
or
lret
cmpsl
scas
shlb
shll
sub
pop
adc
mov
pop
dec
fcmovnbe
push
sbb
mov
lods
out
inc
or
shlb
push
inc
div
cmp
adc
arpl
or
ljmp
add
pop
add
add
mov
pop
mov
cld
fmull
inc
mov
adc
lret
lods
adc
imul
cmp
lcall
pop
insb
xchg
jmp
jbe
and
mov
push
in
jmp
adc
inc
je
mov
fs
push
jae
or
fs
mov
aam
mov
cmp
jecxz
icebp
pop
xorl
fwait
push
cs
mov
cmp
int3
div
aam
loope
sub
lahf
fwait
dec
xchg
adc
fld
mov
jnp
pop
xor
out
xchg
cmp
loopne
pop
aas
xchg
mov
or
lcall
push
mov
stc
mov
fs
mov
adc
ficomps
mov
mov
sub
mov
fcoms
out
je
cmpsb
das
pop
fs
jge
outsb
test
inc
push
mov
add
lcall
cmp
jns
push
jmp
rolb
aaa
jno
sbb
mov
cli
mov
mov
lahf
das
rcl
push
mov
sbb
fstl
jmp
inc
jle
jb
xchg
mov
in
addr16
pop
mov
sbb
mov
and
add
push
cld
shr
sub
lahf
cli
sbb
aaa
jno
in
dec
scas
inc
and
jg
test
xor
inc
aaa
mov
js
pop
mov
test
movsl
xchg
jb
sub
test
lods
push
imul
je
or
aas
push
mov
nop
mov
mov
sub
inc
pop
clc
jo
mov
icebp
xchg
js
hlt
ds
dec
pop
xchg
xchg
adc
jae
aaa
xchg
pop
sti
add
movsb
pop
int
aas
stos
cmp
leave
pop
xor
xor
in
out
adc
mov
shl
and
les
in
jecxz
lahf
rcll
in
stos
add
push
icebp
xchg
xchg
sub
aaa
fidivrs
mov
dec
es
push
das
lcall
aad
adc
jecxz
push
jg
adc
inc
cli
push
cmp
dec
or
leave
mov
add
dec
xchg
mov
lret
arpl
jne
loop
out
inc
repnz
and
push
ficoml
cmp
dec
sub
mov
cli
mov
jo
pop
arpl
mov
sbb
lds
push
or
negb
arpl
lcall
stc
ret
pop
inc
hlt
xchg
cmpsb
negl
and
pop
inc
repnz
xchg
sbb
add
or
stos
mov
jecxz
rcrl
add
pop
or
push
sbb
pusha
popf
call
xor
cmp
cmp
scas
push
mov
mov
call
rcrb
bound
in
adc
imul
jmp
and
clc
fldt
xchg
or
push
push
inc
and
cmp
mov
ja
jo
mov
mov
lods
add
int3
jmp
hlt
outsb
jns
shl
xor
xor
add
mov
test
mov
jle
dec
into
xchg
mull
push
mov
aaa
sbb
adc
stc
add
cmp
sti
and
lods
add
test
dec
inc
enter
jbe
sbb
add
lds
xchg
cmp
les
push
or
repnz
imul
or
inc
inc
cmp
cli
in
cmp
repnz
jne
fcompl
in
xchg
out
fidivrl
or
ja
cltd
push
les
test
dec
pop
ficomps
mov
xor
jno
xor
jno
popa
and
clc
popa
cmpsl
and
inc
push
inc
cli
test
jle
dec
stc
inc
mov
xor
sti
inc
pop
adc
inc
jecxz
add
mov
pusha
testl
sarb
mov
lds
xchg
movsl
sub
adcl
das
repnz
rorl
loop
cwtl
imul
imul
loop
cmp
adc
outsl
stc
xlat
xor
jne
pop
mov
and
dec
sub
das
and
sub
mov
push
ror
lods
jbe
jl
fs
jecxz
rol
sbb
call
test
cmp
sti
xchg
clc
cmp
jecxz
filds
dec
pop
imul
lcall
sub
add
shlb
mov
and
lock
push
sbb
iret
push
ds
mov
shll
movsl
mov
push
or
fwait
cmp
cmpsl
mov
mov
or
mov
inc
pop
xchg
and
sub
jg
popl
dec
mov
pusha
das
dec
mull
enter
std
jno
movsl
leave
jns
into
int3
lock
dec
insl
cmp
call
adc
pushf
mov
das
cmp
xchg
jne
imul
cmpsl
cmp
cmpsb
fucomi
sbb
std
scas
faddl
mov
push
ficompl
jmp
inc
jo
or
lcall
xor
aaa
aad
repz
add
pop
cmp
cltd
dec
pop
scas
lock
lcall
fdivr
jns
lock
aam
nop
out
in
loopne
addr16
and
rorl
andb
push
popf
lahf
stc
mov
lcall
add
mov
ret
mov
push
or
fs
enter
jno
popa
add
sqrtps
inc
movl
lock
ss
or
aaa
and
divl
inc
xor
mov
icebp
add
incb
cmc
int
mov
xorl
ret
dec
jmp
subl
xor
js
or
xchg
in
jbe
outsl
xor
hlt
xor
mov
adc
push
sbb
loop
and
cmp
leave
out
sbb
dec
rcl
addr16
repnz
pushf
add
inc
mov
aam
test
jbe
jmp
adc
mov
mov
cltd
inc
shlb
sarb
mov
insb
and
addb
fisubs
rorl
mov
ret
cld
dec
dec
cmc
aad
subl
in
aam
cmpsl
and
mov
xor
int3
push
imul
in
dec
in
sub
nop
dec
or
and
das
or
sbb
fisttpll
mov
xchg
aaa
in
cwtl
mov
jne
lods
inc
loopne
push
jmp
scas
dec
adc
nop
mov
xchg
dec
mov
lahf
jbe
mov
add
jge
lret
sub
fsubrl
fs
add
in
fdivs
cli
je
add
or
rclb
push
cmp
lods
pusha
xchg
imul
fidivrl
jns
xchg
stc
jg
dec
pop
jge
dec
push
stos
adc
mov
test
rcrb
push
mov
inc
sub
dec
iret
in
and
xor
loop
xchg
adc
or
int
lds
mov
out
test
mov
xchg
shrb
push
addr16
into
scas
cld
pop
outsb
xchg
cli
popf
adc
adc
test
adc
rcrl
int
popa
test
fs
pop
cld
dec
movsl
imul
pop
sub
daa
and
mov
iret
mov
dec
mov
inc
pop
adc
jns
or
mov
dec
outsl
fildll
movsb
and
jmp
xchg
out
pop
stos
xchg
or
inc
push
or
xor
mov
out
cltd
inc
fsubrl
inc
sbb
lcall
jnp,pn
dec
push
lea
inc
leave
flds
mov
movsb
inc
xor
ret
xchg
lahf
adc
jnp
xchg
dec
mov
or
lcall
push
je
cmc
or
pop
mov
push
sbb
lds
jg
bound
pop
dec
dec
mov
notb
ret
adc
ss
sbb
out
sub
es
cmp
loopne
ficoms
fiadds
test
outsb
loopnew
jne
fcos
in
lret
sbb
clc
out
and
push
icebp
ja
loope
pop
push
sub
cli
lea
mov
xor
pop
iret
push
push
xor
adc
mov
imul
jno
decb
int
hlt
test
adc
push
call
push
shrb
jl
mov
sub
mov
and
out
or
xchg
fcoml
jo
call
jg
push
fbstp
iret
or
pop
lret
incl
mov
push
testb
fildl
xlat
loope
push
push
dec
dec
pop
mov
mov
dec
fidivrs
cmp
xchg
movsl
dec
daa
pushf
jecxz
mov
mov
mov
and
das
and
aas
mov
mov
sub
scas
repnz
mov
scas
add
gs
daa
sahf
scas
pop
test
shrb
push
shlb
cmp
pop
test
mov
ret
push
aaa
push
stc
pushf
mov
jge
addr16
xchg
arpl
fimull
sbbl
ljmp
or
icebp
aaa
xchg
jo
xlat
fdivrl
data16
jl
hlt
inc
mov
clc
push
jle
insb
fwait
data16
fistpl
mov
adc
arpl
fimuls
and
shrl
jae
test
jecxz
scas
jle
pop
popa
cmp
fsubrs
sahf
adc
inc
add
pop
mov
jle
xchg
stos
cmp
test
xlat
cmp
mov
push
adc
or
jle,pt
dec
mov
clc
loop
push
popa
imul
sbb
xchg
dec
cmp
jecxz
xchg
push
in
filds
repnz
repz
fisubrs
add
sbb
mov
inc
stos
repnz
jmp
pop
jle
ret
into
lret
pop
jae
sub
pusha
ds
cmp
sbb
in
testl
or
stc
pop
push
push
loop
and
inc
test
mov
add
inc
sbbb
jl
leave
je
push
sub
push
shl
sbb
push
push
sbb
jb
or
inc
iret
cmpsb
xorl
mov
cmp
loop
pop
push
movsl
lock
leave
xchg
sub
inc
jmp
hlt
mov
cltd
jbe
out
ljmp
dec
sub
in
ljmp
cwtl
ja
inc
in
adc
rclb
sbb
cmp
push
adc
bound
lods
push
xlat
dec
pop
xlat
mov
loop
fisubl
adc
dec
addr16
movb
cmovs
xchg
repnz
out
rcl
flds
je
pop
sar
adc
mov
je
lret
cmp
add
jge
or
adc
ret
mov
test
sub
jno
lcall
test
add
mov
cmpsb
loope
xchg
pop
mov
movsl
mov
les
pop
aaa
daa
mov
in
call
add
and
movsb
jno
or
pop
push
inc
pop
cmp
idiv
push
xor
cmp
and
mov
pop
int
jp
and
outsl
adcl
mov
out
icebp
pop
lds
sbb
dec
or
popa
insl
fs
adc
pop
push
fsubs
jg
mov
push
sbb
rcll
or
rorb
pushf
movsb
sub
jnp
mov
adc
adc
fdivrp
sti
mov
push
pop
insb
mov
jb
ror
or
sti
ret
inc
mov
jnp
cld
mov
mov
lods
mov
sbbl
je
fwait
lods
popa
push
xchg
xchg
inc
mov
fs
mov
fdivs
adc
lcall
xchg
xor
push
ss
lock
add
lock
ds
mov
imul
add
and
jmp
mov
mov
scas
sub
rcll
aam
xor
in
mov
repnz
out
lods
mov
pavgb
adcl
mov
or
jnp
je
stc
andl
push
in
arpl
into
push
xchg
mov
test
repz
fsubrs
push
mov
jne
mov
loope
jne
fimull
push
push
mov
dec
xor
sub
add
sub
fld
dec
mov
mov
mov
aad
clc
popl
daa
aad
out
jp
inc
add
push
fs
sahf
add
add
xchg
fucomi
orb
xor
push
je
dec
mov
int3
aam
mov
ret
push
test
sub
notb
sub
sbb
add
outsb
inc
icebp
clc
and
adc
sub
push
aam
ss
imul
ja
fwait
bound
jns
cltd
rcrl
sbb
xor
aam
pop
pusha
scas
sti
pop
aas
ss
xchg
into
in
enter
lret
xchg
inc
mov
aaa
cmp
pop
imul
inc
lcall
scas
ret
inc
aas
stc
jg
in
fstp
xor
adc
sub
sti
call
dec
test
push
cmpsl
xlat
cmpsb
popa
mov
xor
sbb
cmpsl
cwtl
fwait
and
inc
cmp
mov
clc
push
scas
shl
addr16
dec
mov
je
jp
je
pop
pop
hlt
jle
xchg
vpshufd
popf
jne
es
or
cltd
jne
inc
mov
pop
push
stc
cmpsb
dec
and
fstpt
mov
ret
movsl
enter
mov
inc
lahf
sbb
or
mov
jae
cmpsl
int
loopne
and
cmp
xor
test
into
das
mov
pop
dec
and
in
pop
mov
sbb
or
insl
sub
xchg
daa
loop
mov
pop
adc
arpl
lds
mov
leave
jle
xchg
dec
or
add
pop
loope
mov
xor
stos
xchg
mov
add
and
mov
sbb
test
clc
pop
pop
add
mov
or
jl
xchg
rcl
sbb
push
loopne
mov
xchg
add
outsl
shll
ss
xchg
leave
fcmovnbe
dec
jg
mov
nop
and
jns
dec
or
push
les
mov
pop
inc
dec
aad
out
in
xor
sarl
cld
bound
push
out
testb
and
loopne
std
jmp
cmpsb
mov
cmpsb
and
ja
mov
movsl
aas
js
inc
idiv
jno
adc
testl
repnz
dec
mov
pusha
int
push
xchg
mov
adc
aad
leave
push
cmpl
mov
sub
jno
fistl
dec
mov
les
clc
inc
cmp
bound
mov
outsb
push
jbe
cltd
jecxz
sub
xor
rcrl
xchg
shrl
mov
jb
popf
std
mov
leave
int
shr
loope
mov
dec
hlt
jne
pop
lret
adc
inc
lcall
fisubrl
js
cmp
xabort
out
jno
jns
sub
inc
mov
cltd
dec
push
xor
jbe
xor
xchg
add
xchg
jb
sbb
nop
lock
cmp
outsb
push
and
or
lock
dec
lret
repnz
push
push
out
fisttpl
cmp
pop
cmp
adc
hlt
sub
mov
mov
adc
mov
enter
sbb
arpl
insb
sbb
std
dec
xchg
push
push
in
stos
or
pop
call
pop
sub
sub
xchg
xchg
mov
inc
xchg
cmp
push
cli
movsb
pop
mov
mov
movsb
sti
lds
notb
clc
leave
sti
ret
fcmovnbe
clc
sbb
xchg
test
xchg
lret
imul
fyl2xp1
inc
jb
insl
fdivrl
arpl
or
repz
push
and
ret
dec
xchg
repnz
leave
cmp
and
xchg
adc
fcompl
les
pop
cmpsl
pop
fbld
cli
mov
repnz
movsl
notl
movsb
cld
mov
sub
test
mov
lods
cmp
lret
mov
push
xlat
pop
sti
dec
pop
dec
and
repz
jge
mov
cli
or
push
or
inc
and
movsb
push
lds
dec
mov
jmp
sbb
mov
push
add
mov
xlat
sub
xchg
pushf
lea
cmp
fs
pushl
mov
cmc
mov
xor
mov
push
stos
ret
scas
fidivl
pop
ljmp
pop
push
sub
imul
and
and
lcall
dec
loope
mov
orb
in
sbb
add
jae
stos
add
das
inc
jnp
cmc
popa
xchg
fisubrl
pop
icebp
imul
cmp
lahf
push
movsb
adc
xor
pusha
dec
sbb
jb
jo
lcall
inc
mov
sbb
and
pop
inc
cmp
push
push
mov
shlb
pop
std
fsubr
in
cmp
arpl
pop
in
mov
sbb
int
cmp
je
shlb
ja
add
xor
roll
cli
jbe
inc
pop
xlat
ret
scas
add
insl
out
ret
jns
jl
inc
fbld
pop
das
add
test
mov
outsl
xchg
mul
add
add
jno
dec
outsl
inc
test
jg
insb
sarb
dec
andl
dec
jno
mov
mov
fiadds
add
inc
add
xchg
ss
insl
mov
lcall
and
mov
cmp
fs
sub
shll
pop
mov
pop
mov
outsb
lret
mov
cmp
imul
in
movbe
pop
int3
xor
out
scas
mov
clc
test
xchg
mov
in
mov
rorb
cmpsb
lock
lea
cltd
adc
and
pop
inc
movsl
adc
aad
jecxz
dec
sub
clc
sub
addr16
or
sub
into
popa
and
dec
jne
and
stos
inc
popf
xchg
addr16
sub
inc
ja
pusha
pop
sbb
sub
mov
imul
je
outsl
cmp
push
fsubrl
in
cmp
movsb
adc
jg
ja
outsb
lret
mov
mov
cltd
pop
push
or
repz
test
popf
lahf
jb
jne
mov
nop
dec
lret
scas
es
ljmp
pop
dec
xor
xchg
pop
pop
jg
adc
les
xchg
loopne
inc
push
push
or
xchg
inc
lahf
pop
sub
mov
sub
mov
and
outsl
jp
iret
test
mov
pop
xor
mov
xchg
push
and
adcl
sbb
cmp
ljmp
jecxz
cmpsb
mov
mov
xor
jl
dec
xor
jg
enter
dec
sub
lahf
dec
mov
subb
sbb
mov
imul
pushf
mov
or
pushf
inc
push
adc
negb
mov
cmc
clc
mov
pushf
pushf
sbbl
mov
dec
and
sahf
out
sub
push
ficomps
sti
mov
xchg
cpuid
loopne
cmp
ljmp
fmul
stc
pop
es
rol
fidivl
xchg
call
xor
roll
lds
and
icebp
leave
pop
push
dec
in
mov
pushf
js
dec
scas
mov
cmp
gs
fwait
bound
and
xchg
or
mov
sub
sbb
push
mov
sbb
arpl
add
push
out
add
sti
mov
ljmp
icebp
mov
ret
aas
add
adc
dec
jnp
push
scas
lcall
ja
dec
sbb
icebp
mov
xchg
stos
fadds
loop
mov
xor
shrb
xor
fldt
test
mov
jp
mov
cld
mov
jle
pop
dec
loopne
inc
dec
mov
mov
pop
adc
xor
inc
iret
pop
push
lods
sti
adc
jmp
cmpsl
push
outsl
jb
call
ds
mov
mov
cli
pop
stc
aas
test
jo
pop
mov
push
call
add
dec
mov
push
jnp
xchg
mov
pop
or
rolb
lock
fisubrl
mov
incb
in
pop
clc
out
sbb
or
and
imul
inc
call
dec
js
dec
fs
ret
pop
pusha
jg
cs
call
mov
inc
adc
jle
pushf
shrb
daa
fadd
jbe
xor
mov
sahf
mov
mov
cmc
in
je
shl
bound
push
jbe
roll
movzbl
imul
clc
jp
inc
ds
iret
insb
jg
shlb
fcom
push
adc
xchg
ja
ja
out
testl
out
push
subb
or
pop
jno
ljmp
mov
leave
cmpsb
inc
or
fisubs
add
mov
js
test
ljmp
mov
test
into
das
je
and
xlat
sti
lret
pop
mov
mov
iret
test
loopne
push
das
or
inc
out
cmpsl
pop
sti
icebp
pop
cmp
cmpsl
js
and
stc
fcmovbe
mov
xor
mov
sub
xor
add
adc
cli
mov
xor
scas
and
dec
dec
andb
pop
stos
or
cmpsl
out
or
dec
movsl
mov
dec
cs
imul
fnstsw
pusha
pusha
push
ret
addr16
push
dec
mov
xor
es
sub
lea
arpl
or
lret
pop
icebp
cld
rcrb
xor
lods
pop
cmp
inc
adc
insb
or
xchg
xor
xchg
mov
xchg
fldt
lea
js
add
xor
arpl
out
and
movsb
loop
dec
add
sub
aad
pop
dec
mov
cmp
into
jle
mov
sbb
mov
pushl
push
popa
ret
add
cmc
xor
outsb
test
pop
fdivrs
movsb
pop
jle
test
sub
lods
jg
cmpsl
pusha
out
jns
inc
mov
pop
sbb
adc
push
push
xchg
cltd
dec
sahf
nop
ret
sub
jo
pop
inc
testb
jno
inc
push
mov
cmp
jl
mov
pusha
or
add
sub
fwait
mov
lock
xchg
push
leave
pop
aam
push
jle
outsl
sub
lret
lea
inc
jne
lods
pop
aaa
sbb
mov
dec
stos
sbb
cwtl
out
sub
aam
fnsave
pop
sbb
fadds
push
test
and
icebp
in
stc
lret
dec
nop
les
pop
xchg
push
iret
or
sub
mov
xchg
jo
xchg
sbb
test
mov
je
push
pop
rolb
mov
add
sub
addb
std
dec
jl
and
push
mov
into
jp
int
nop
cli
dec
mov
scas
mov
popa
xchg
push
pop
call
and
mov
bnd
js
imul
imul
dec
dec
sub
push
popf
sbb
incb
pop
out
daa
outsl
pop
roll
pop
movsl
xor
jmp
lcall
sbb
imull
fstps
jb
lods
fdivs
push
cmp
pop
push
adc
aam
addr16
filds
and
mov
arpl
lcall
adc
ljmp
xor
push
das
jp
mov
pushf
lods
dec
sbb
xor
dec
xchg
sqrtps
pop
stos
push
cmc
stos
or
and
iret
movsl
daa
int
iret
dec
push
mov
faddl
inc
cmp
xchg
loopne
lea
icebp
into
mov
mov
jg
cwtl
mov
pop
inc
pop
mov
lods
sub
pop
jge
cwtl
out
fidivs
sub
movsl
jbe
push
arpl
idivl
sbb
jg
sbb
mov
es
popf
stos
mov
jo
adc
mov
pop
rcll
sbb
mov
ljmp
stc
in
dec
dec
adc
sbbb
sbb
pop
xchg
in
sti
fxch
lods
in
cmp
cmp
inc
xchg
aam
jg
in
add
out
inc
loope
dec
jmp
mov
add
push
lds
jne
push
inc
ja
in
ss
scas
xchg
popf
jge
adc
inc
add
jg
ret
add
sub
cmpsl
or
mov
outsl
fbstp
adc
pop
mov
ljmp
push
incb
push
xchg
clc
dec
dec
testl
cltd
mov
push
inc
sbb
out
imul
adc
fsubr
int3
ja
mov
cmp
inc
mov
popa
push
push
into
test
idivb
sbb
sub
loope
push
mov
sub
add
pop
inc
daa
inc
push
shll
std
shrb
cmc
pop
movsb
cmpsb
sbb
mov
ja
mov
loope
xlat
mov
imul
clc
lret
push
aam
loop
std
xorl
dec
dec
jae
jmp
xchg
imul
lcall
xor
cmp
cmp
fsubp
mull
xlat
sub
js
xchg
cli
mov
jecxz
lahf
jp
or
outsb
or
stos
jle
lret
pop
arpl
ljmp
jbe
addr16
mov
sahf
shl
popa
nop
xor
mov
xor
dec
sbb
popa
in
push
mulb
stos
dec
xor
lcall
add
mov
lcall
xor
aas
repnz
mov
nop
ljmp
xchg
shl
arpl
mov
mov
cmpsb
jle
rcll
call
add
inc
std
xchg
lods
hlt
adc
inc
aad
into
jecxz
lcall
or
sub
inc
lock
inc
mov
loope
adc
cltd
adc
in
aaa
cmp
insl
jmp
jle
add
icebp
and
insl
adc
add
pushf
push
pop
adc
popf
jb
push
pusha
outsl
mov
push
repz
lods
pop
test
mov
adc
jp
inc
popa
xchg
icebp
rclb
loopne
notl
inc
in
fwait
jb
aaa
mov
les
inc
sub
test
icebp
test
mov
xchg
or
movsl
dec
inc
in
and
je
or
scas
and
pop
stc
shl
lea
jae
outsb
and
jmp
insl
pop
inc
adc
lret
rol
pop
enter
das
dec
aas
dec
mov
aad
aad
out
mov
add
cld
fcompl
lret
xchg
and
les
mov
push
rorl
sbb
mov
and
add
movl
in
fcomi
cmpl
lret
lods
scas
xchg
andl
xor
add
idivl
sub
inc
out
fs
fst
lcall
add
cmp
notb
push
pushf
push
aad
dec
dec
cmp
cmp
mov
push
bound
inc
sub
sub
stc
and
hlt
mov
inc
sbb
jbe
aas
add
popa
loope
mov
mov
push
cmpsb
mov
dec
leave
add
push
mov
sub
lretw
xlat
dec
or
push
sti
loope
stc
scas
int
push
adc
mov
ja
or
cli
insb
jno
cmpsb
dec
sbb
fwait
dec
arpl
sbb
or
icebp
int3
outsl
outsb
adc
jns
sub
fs
call
shlb
push
aaa
in
arpl
nop
jbe
xor
loope
sub
cwtl
pop
xor
add
mov
out
inc
or
sbb
sbb
xor
js
and
lea
adc
cltd
mov
outsb
and
stos
mov
aas
les
and
sub
xchg
insl
cmp
push
jle
fistps
je
or
aam
les
mov
divb
cli
pop
pop
mov
out
aad
aaa
cs
push
add
push
data16
leave
inc
push
mov
xchg
iret
stos
sbb
insb
xor
popa
lret
scas
sub
arpl
insb
mov
cltd
dec
jp
fisubs
push
adc
scas
cmp
nop
fcmovbe
sbb
xor
lret
test
adcl
js
and
sbb
xchg
fyl2x
mov
adc
scas
add
lea
lds
dec
or
xchg
cmpsl
xchg
les
push
int3
inc
cs
scas
sub
ss
pop
pop
repz
test
jnp
dec
cmp
mov
push
sarl
das
sub
push
lea
cmp
mov
jae
das
nop
mov
je
ret
push
or
xchg
popf
mov
sbb
sbb
push
inc
pop
nop
add
pop
jnp
sbb
cmpl
roll
mov
jno
xor
nop
push
dec
cwtl
fidivs
cwtl
fbld
adc
and
test
movsl
sub
xchg
mov
cmp
test
xchg
test
and
jne
mov
sub
mov
cmp
test
cmc
xchg
or
pop
int
adc
subl
addb
stos
pop
dec
aad
mov
mov
push
aam
mov
pop
or
add
stos
inc
sahf
cmp
adc
loopne
mov
jnp
shll
stos
leave
push
xor
fwait
pop
push
imul
sbb
cld
pop
xor
push
add
in
or
popa
subb
ret
mov
jo
adc
stos
pop
push
jl
fdivrs
inc
xchg
add
jp
mov
mov
sub
sahf
push
repz
add
testl
in
in
xchg
ret
icebp
cmp
cmpsb
ret
or
subb
cmp
or
xchg
adc
adc
and
in
rolb
movb
es
cmp
cmpsb
stos
fwait
mov
in
mov
rolb
mov
jns
sbb
sbb
sti
and
push
or
es
jecxz
call
pop
adc
cwtl
jbe
or
imul
inc
adc
or
mov
iret
out
fs
pop
inc
cmp
jne
sysret
rolb
mov
les
leave
clc
or
dec
jl
push
mov
mov
adc
xor
xchg
in
xchg
push
movsl
outsl
mov
test
cmpsl
jge
mov
mov
pop
cmp
jo
jae
push
minps
and
shll
mov
mov
jp
cmpsl
into
test
push
dec
add
mov
in
sbb
jecxz
jp
and
mov
mov
lods
in
jae
lea
call
lcall
pop
push
jge
push
sub
pop
or
mov
sbb
adc
and
or
loope
push
jbe
fld1
fs
pop
ja
inc
sbb
bound
imul
jg
scas
dec
mov
sbb
pop
cli
faddl
or
rorl
xlat
dec
stos
dec
das
out
dec
or
xor
clc
pop
fldcw
in
stc
xchg
scas
test
pop
in
mov
daa
adc
push
sub
pop
xor
test
add
and
movsb
xlat
ds
es
ja
dec
hlt
push
jnp
or
and
sbb
mov
cmp
mov
lods
je
inc
pop
fcmovu
fnsave
sbb
pop
xchg
or
aas
orb
movb
xchg
sbb
push
push
sub
adc
add
push
jb
push
ljmp
jno
push
shll
sub
or
insl
and
ss
push
mov
clc
xchg
lods
sbb
je
mov
pop
xor
or
mov
xchg
or
mov
lods
adc
sbb
lret
nop
sub
and
ja
popa
call
and
iret
and
dec
cmp
lods
repz
insl
cli
ret
dec
jo
repz
pushl
pop
shl
jae
cmc
bound
xorl
aas
scas
fcomps
loop
inc
mov
fsubrl
imul
std
rorb
iret
push
arpl
dec
insb
mov
in
pop
xchg
cmp
rclb
jge
cmp
mov
sub
mov
aas
pop
adc
pop
arpl
mov
aam
pop
mov
mov
test
hlt
aam
sbb
dec
loopne
js
adc
popa
setno
jge
ss
pop
dec
mov
int
pop
data16
stc
jle
add
in
mov
adc
loop
fcomps
popa
xor
inc
sub
mov
loopne
insl
pop
inc
inc
mov
mov
movsl
xchg
adc
sub
in
shrl
cmc
xchg
shl
cmp
mov
mov
mov
lahf
subb
iret
in
cmpsl
shlb
add
adc
xchg
mov
insl
adc
xchg
inc
pop
mov
pop
dec
mov
popf
cmp
inc
jno
popa
lea
mov
lret
dec
adc
les
arpl
push
sbb
inc
mov
jmp
dec
lock
sbb
xchg
popa
popf
adc
sub
push
roll
pop
insl
aam
mov
lahf
fnsave
scas
pusha
push
lret
in
cmpb
or
adc
push
mov
std
pop
lcall
mov
int
andl
push
pop
and
or
sbb
jne
dec
mov
xlat
pop
cmpsl
cmp
and
jo
xor
je
mov
cmpb
inc
xor
sbb
shr
in
repnz
and
ss
xor
jmp
ss
or
lods
ret
leave
or
jns
addr16
adc
je
cmp
enter
dec
add
loopne
leave
jl
xchg
orl
ljmp
into
xchg
stc
jno
pop
int3
jae
lret
xchg
and
pop
push
mov
lea
pop
push
mov
ret
sub
push
jle
outsl
push
or
adc
sub
inc
iret
popf
dec
fwait
cmc
insl
pop
mov
imul
mov
hlt
mov
sahf
std
push
and
add
fld
push
test
insb
inc
xor
add
push
sbb
loop
shlb
rol
in
mov
repnz
fucomp
ja
jns
loopne
mov
pop
repz
adc
dec
cmp
cwtl
sbb
lock
add
mov
cmpsl
hlt
jmp
pop
xor
shl
mov
std
inc
movsl
decb
xchg
dec
sbbb
add
push
mov
mov
enter
xchg
fbstp
mov
je
mov
sahf
aam
mov
fucomi
cmpb
arpl
push
jo
adc
or
into
cwtl
sub
mov
adc
pop
cmp
mov
sub
lea
fistpl
push
fdivrs
or
jnp
cltd
mov
push
jo
pusha
leave
mov
inc
call
testl
xchg
and
mov
add
arpl
push
or
call
lret
movsb
sub
popa
mov
dec
xchg
aaa
mov
popa
scas
lret
adc
sbb
pop
out
lcall
cmp
and
jns
outsb
add
in
mov
push
xor
jbe
push
lock
xor
in
and
jae
or
insl
fiadds
inc
sbb
ljmp
adc
push
rorb
addr16
addr16
and
mov
ds
in
cmp
sub
clc
ret
clc
aad
roll
leave
dec
leave
pop
ja
clc
xor
idiv
test
pop
shl
pop
decb
gs
adc
mov
cmpsl
pop
je
xchg
inc
mov
stos
scas
dec
repz
les
out
gs
mov
sahf
loopne
xor
pop
cmpsb
clc
sbb
inc
pushf
push
push
scas
pop
mov
shrb
and
sub
sbb
lock
insl
ficoms
mov
adc
pusha
cs
sahf
mov
mov
or
fstl
mov
fadds
inc
fldl
les
jle
arpl
push
ja
dec
popa
std
dec
lahf
cli
xor
dec
clc
stos
loope
add
cs
dec
cmp
shl
andl
xor
dec
jle
pop
dec
dec
in
fcoml
add
dec
enter
add
jb
xor
push
cld
mov
lahf
push
fwait
adc
mov
add
xchg
rcrb
shlb
push
mov
mov
cmp
inc
pushf
mov
mov
ljmp
bound
jmp
add
push
pop
lcall
lcall
imul
shll
and
fdivrp
and
pop
push
adc
test
or
pop
sbb
test
jecxz
jnp
xor
xchg
cmpsb
hlt
dec
xchg
sbb
and
jne
bound
lret
sbb
movsl
jecxz
lds
jmp
mov
and
cmp
leave
cltd
sahf
not
roll
add
xchg
or
ljmp
xlat
jl
push
push
dec
inc
xchg
xor
cs
aas
les
mov
inc
mov
mov
test
out
sti
cmp
mov
jl
inc
repnz
rcr
xchg
inc
rol
mov
pop
mov
xchg
cwtl
scas
jne
sbb
cmp
imul
int3
enter
icebp
jmp
loopne
inc
inc
cmp
lret
movsb
icebp
mov
xchg
adc
push
add
mov
scas
shrb
les
add
mov
imul
loopne
or
add
addr16
xchg
mov
xor
push
inc
test
sub
cmp
jo
pop
stos
stc
stc
stc
cli
push
push
mov
inc
dec
pop
sbb
pop
divl
arpl
sbb
mov
data16
into
cmp
movsb
aaa
xor
push
mov
adc
pop
in
jae
insb
sub
out
push
mov
test
mov
popa
fadd
popf
cmpsl
pop
sub
fmuls
and
or
add
loopne
or
movsb
ds
and
rcrl
lea
test
pop
mov
in
lock
sub
xchg
das
xchg
pop
sub
xchg
inc
jno
cmp
xchg
mov
outsl
test
sub
sub
out
pop
xchg
jb
lods
push
imul
fdivr
fadd
mov
enter
in
adc
out
mov
roll
aad
jns
fcmovnb
sbb
pop
cld
out
outsb
test
cmp
or
idivb
and
dec
pop
pop
adc
push
sub
xorb
xchg
inc
testb
and
sti
inc
insb
int3
into
cmp
adc
out
fisttpll
pusha
and
jmp
nop
fildll
nop
mov
enter
stos
in
xor
hlt
fimuls
imul
mov
ds
mov
fadd
dec
inc
dec
movsb
cmpsl
cmp
fistl
cmc
jbe
into
lods
adc
test
popf
orl
jge
dec
and
loop
add
daa
push
mov
mov
stc
mov
loope
shrb
dec
aas
dec
cmp
sbb
es
xor
ja
aaa
xchg
add
orb
fwait
lock
cmp
pop
fwait
ja
movsb
sub
aas
jl
mov
lds
cs
je
xchg
push
inc
or
daa
cmp
mov
jg
subb
lds
stos
insl
loope
loop
adc
mov
xor
sbb
sub
mov
mov
adc
push
out
push
cs
xor
js
adc
add
xorb
pop
aas
shrb
sub
int
ficompl
mov
out
incb
adc
jns
mov
mov
aaa
addr16
add
fidivl
inc
daa
sbb
lret
andl
lret
in
push
dec
pop
mov
pushf
idivb
and
iret
rolb
pop
insb
pop
das
sub
cmpb
fdivl
pop
add
and
mov
jne
inc
js
mov
mov
add
xor
shlb
pop
push
pop
ret
ficoms
dec
add
add
jo
push
jbe
sbb
and
nop
mov
jle
mov
fldenv
test
ret
xor
jno
mov
mov
adc
hlt
cld
dec
sarl
dec
or
cmpsb
clc
adc
decb
pop
bound
adc
out
lds
sub
dec
into
xchg
unpcklps
xchg
sbb
xchg
lods
add
nop
and
loopne
and
jecxz
jmp
xor
sahf
lahf
aad
mov
arpl
adc
xor
adc
fcmovnu
or
imull
xor
inc
jae
mov
insl
jb
cli
ret
jbe
mov
dec
std
xor
mov
xor
orl
xorl
sub
out
jge
icebp
push
rorl
out
in
pop
and
mov
and
pop
or
jne
jg
lahf
push
je
pop
insb
rcll
lret
stos
jae
gs
xchg
test
pushl
jmp
fs
imul
cmpsb
push
bound
mov
call
add
lret
pop
xlat
lods
mov
cmpl
jb
popf
lret
outsb
pop
add
icebp
ds
fwait
bswap
loope
enter
addr16
repnz
je
adc
stc
and
lcall
dec
ds
ljmp
mov
inc
sub
cmp
neg
roll
lock
loopne
negb
sbb
push
push
mov
jecxz
inc
fstpl
idivl
cs
or
jns
loopne
or
ja
pushf
sub
into
push
or
sub
jmp
xor
or
out
test
add
std
lret
sub
xchg
pop
les
pop
stos
dec
daa
add
mov
sub
mov
pop
inc
mov
daa
je
jne
fidivrs
pop
lea
ret
arpl
jge
movsb
scas
jns
mov
mov
cltd
pop
aaa
insb
into
inc
cld
out
in
cmpsb
movsb
mov
mov
jge
mov
cmpsl
adc
daa
fdivs
pop
in
mov
xor
popa
push
ficoms
shll
std
mov
fidivl
sbb
mov
jle
mov
jae
nop
cmpsl
scas
pushl
lock
sbb
lcall
add
enter
add
arpl
add
mov
cltd
test
add
imul
dec
inc
idivb
fadds
shll
fidivrs
out
mov
dec
and
iret
push
mov
pop
repz
sbb
and
push
cmp
test
fistpl
dec
mov
mov
mov
fdivp
mov
lods
push
mov
fdivr
in
xor
mov
iret
jbe
shl
or
push
add
ret
pop
jae
out
lcall
inc
leave
sub
cmp
cltd
jge
mov
mov
mov
mov
lret
daa
jge
fs
test
add
xchg
mov
mov
js
pop
aad
dec
faddl
cs
inc
cltd
xlat
sbb
dec
imul
adc
loope
jo
in
mov
sub
out
hlt
inc
mov
andl
xchg
bound
ljmp
cmp
cmp
push
aad
add
sub
jnp
int
test
mov
nop
dec
add
lds
gs
aas
leave
gs
dec
test
sub
or
xor
jbe
fstl
jp
inc
sub
lcall
xchg
sub
es
cmc
sbb
fwait
pop
mov
sbb
or
sbb
mov
aam
dec
jmp
and
push
adcb
rcll
hlt
in
xor
pop
push
jmp
xchg
push
dec
cwtl
movsl
inc
xor
or
jl
sbb
dec
or
aam
arpl
pop
cli
jmp
jno
popa
int
xor
mov
xor
or
xor
push
pop
add
aad
scas
jle
aad
xchg
sub
imul
movsb
adc
jl
mul
xor
out
idivl
enter
lcall
dec
ret
sbb
inc
rcl
pop
fadds
inc
sbb
lock
sbb
jbe
adc
pop
add
aaa
lock
leave
and
cmp
push
jecxz
mov
and
lcall
and
les
mov
push
inc
mov
mov
xor
inc
sar
pop
mov
loopne
xchg
sub
inc
adc
repnz
and
pop
fdivrs
pop
sbb
ret
sub
add
test
jb
pusha
outsl
mov
pusha
push
xor
lea
aaa
cmc
sbb
adc
pslld
and
or
subl
cmp
and
sar
mov
push
sbb
push
xchg
push
fwait
xchg
aam
outsl
pop
int
popa
loopne
addr16
out
in
cwtl
push
lret
adcl
push
pop
adc
out
jl
out
xchg
loopne
lock
into
shr
sbb
sub
ja
xchg
stos
cmp
cld
or
jns
data16
cld
jecxz
ds
xorb
call
mov
push
bound
rcll
outsl
pop
lret
sti
inc
in
or
movsl
push
int3
aaa
lods
mov
sbb
ret
arpl
fsubrl
push
inc
cmp
rcr
or
sub
insl
insb
movsl
jne
inc
push
je
dec
sbb
das
add
je
jge
sbb
loope
test
jp
mov
jp
mov
push
mov
adc
inc
jnp
mov
xchg
dec
lcall
arpl
fldl
test
mov
mov
js
adc
xchg
pop
cs
xor
cs
xchg
cli
mov
shlb
jns
cld
fmuls
es
and
arpl
icebp
xchg
jle
sbb
jno
push
xor
decb
adc
test
je
cmc
aad
sti
sbb
rcr
push
lcall
pop
push
ret
jne
ja
jmp
mov
ja
cmpsl
jbe
sarl
jecxz
cmc
pop
sbb
mov
push
xchg
jno
adc
mov
mov
fistpl
insb
pusha
sahf
xchg
jae
cs
and
jb
mov
inc
test
push
jnp
repz
jnp
xor
push
insl
jb
and
inc
shrl
cmp
call
std
std
add
cmp
xchg
jecxz
sti
out
pop
aad
in
sub
mov
test
pusha
xchg
addl
and
test
cmp
pop
push
jae
sbb
jo
cmpsb
imul
jnp
push
pushf
dec
js
push
cld
ret
imul
lret
lahf
fs
rclb
loopne
cld
xchg
or
das
push
sub
mov
clc
or
jl
adc
fwait
inc
int
mov
dec
nop
sbb
jg
cmp
push
outsb
push
ret
dec
hlt
lahf
mov
sub
iret
pop
and
nopl
push
mov
jle
cwtl
mov
or
outsb
mov
pop
imul
imul
push
xlat
pop
bound
jns
or
push
push
popf
inc
addr16
sbb
jl
mov
mov
fstps
repnz
add
dec
cmp
sub
imul
iret
jo
push
xor
push
xchg
add
mov
insb
push
dec
cs
jns
push
loop
cmp
pop
mov
inc
xchg
mov
xor
pushf
cwtl
rcll
in
sub
xor
jmp
push
and
iret
imul
int
shlb
pop
das
push
rcl
je
out
ljmp
lahf
xchg
mov
mov
repz
pop
adc
fadd
sub
adc
adc
cmp
push
nop
sti
enter
int3
cmpb
cmp
ficompl
outsb
inc
in
push
negl
int
dec
dec
popl
outsb
jno
sub
jl
or
dec
movsl
cmp
divl
inc
test
bound
xor
movsb
clc
mov
adc
dec
push
andb
jp
pop
sub
xchg
andb
mov
cmp
stos
pusha
pop
dec
mov
popf
pop
inc
call
pop
daa
out
push
cmp
ljmp
xchg
enter
xchg
dec
out
xchg
sub
stc
mov
and
push
push
cli
sub
cwtl
dec
clc
dec
adc
sub
dec
out
js
sub
mov
and
or
mov
inc
arpl
ret
push
jb
hlt
test
dec
add
mov
xchg
push
addr16
imulb
add
jl
ret
or
inc
cmp
sub
add
mov
enter
enter
jns
icebp
mov
xchg
jbe
aam
jb
jne
push
arpl
xor
mov
cld
sub
inc
or
add
movl
dec
push
imul
sub
jecxz
adc
js
sub
mov
mov
rorl
mov
scas
adcb
std
ljmp
and
fidivl
std
mov
cld
or
fcom
push
mov
test
outsb
mov
out
xchg
in
inc
mov
in
cs
cli
lods
mov
mov
dec
mov
movsb
push
aaa
push
mov
int3
fcmovnb
jns
mov
ret
ljmp
dec
cwtl
insb
movsb
shrl
mov
loopne
aam
dec
in
push
xorb
lods
ficoms
push
pop
push
cld
mov
ficoms
mov
mov
clc
jg
pop
add
sub
dec
pop
pop
push
jg
adc
and
mov
sbb
test
arpl
mov
loopne
das
adc
push
lds
inc
mov
daa
dec
push
sbb
frstor
push
jnp
repnz
insb
xchg
cmp
pop
lahf
inc
inc
push
mov
sbb
out
sub
loopne
pop
dec
aaa
rcll
jecxz
arpl
int3
xor
mov
movsl
leave
and
cmp
imul
pop
shll
pop
ljmp
es
rorl
adc
dec
insb
sub
repz
push
jb
mov
call
adc
mov
leave
leave
js
scas
pop
paddd
movsb
out
notl
xchg
lahf
push
mov
pop
push
arpl
pop
sbb
hlt
ret
sub
bound
xchg
sti
push
cltd
and
sbb
push
loope
repz
fwait
mov
dec
pop
test
icebp
or
ja
add
xor
and
add
test
jbe
fmull
push
mov
das
cmp
mov
push
test
add
int
mov
inc
lods
add
rclb
rcrl
fwait
cmp
inc
mov
cli
sti
pushf
mov
ljmp
pop
out
mov
movsl
fistps
or
xchg
fwait
sub
mov
cmp
push
andb
jl
lds
add
dec
push
iret
shl
dec
jb
rolb
adcb
and
xchg
xchg
mov
jmp
data16
lret
xchg
pusha
sbb
cmp
idivl
rolb
je
insl
jmp
inc
in
jnp
test
out
sub
mov
push
cmp
dec
jns
sub
pop
sbb
jne
push
jecxz
push
sbb
js
pop
sub
movsl
lods
sahf
adc
and
and
cmp
push
inc
data16
mov
xor
mov
ljmp
sub
inc
or
outsb
adc
push
and
cmp
outsb
fidivs
pop
jge
dec
dec
enter
xor
xchg
mov
mov
sbb
sbb
inc
movsl
adc
dec
mov
jne
inc
clc
jg
cmpl
or
loopne
and
add
adc
sahf
lds
sarl
jno,pn
fcompl
dec
mov
xor
mov
mov
mov
sar
out
fdivs
leave
mov
out
inc
into
xlat
movsl
lret
mov
jl
push
call
js
adc
aam
xorb
popa
stos
mov
testb
ds
hlt
out
cltd
int3
adc
inc
push
int3
mov
testb
leave
jp
fists
dec
into
cmp
popf
mov
sbb
sbb
xchg
repnz
adc
std
push
outsl
lret
repz
xlat
sbbl
sub
int
or
and
or
mov
sahf
repz
push
aad
pop
xchg
mov
iret
lods
push
jmp
cld
cli
test
and
repz
ds
xor
pop
fwait
orb
adc
les
dec
xchg
xchg
bound
inc
mov
lea
xor
pop
sbb
hlt
and
push
mov
push
mov
or
jmp
push
sahf
movsb
or
adc
test
sbb
sti
xchg
xor
xor
lea
adc
sub
push
dec
dec
icebp
cmc
lds
dec
cs
push
stos
pop
pushf
cltd
adcl
cwtl
std
cmp
aam
dec
andb
push
jmp
or
cmpsb
jbe
pop
or
cltd
mul
mov
inc
or
sbb
sarl
test
dec
cmpsl
dec
or
adc
mov
xchg
mov
cmp
mull
jo
add
mov
xor
lea
adcb
sub
std
pop
dec
jg
popf
and
mov
xchg
out
jecxz
adc
xchg
lret
aad
cli
push
add
clc
sbb
icebp
jmp
test
in
xor
adc
cld
out
pop
test
test
rolb
pushf
cwtl
bound
push
aad
dec
sbb
repz
inc
out
xchg
mov
xor
enter
fisubrs
pop
pushf
push
dec
xchg
cltd
mov
lea
in
inc
push
push
xchg
sub
pop
cmc
test
add
pusha
out
xchg
mov
out
and
sbb
imul
dec
xlat
dec
xchg
mov
popf
xor
jp
dec
mov
cltd
loopne
pop
jg
nop
push
mov
aam
je
and
out
dec
and
cmc
sub
xorb
movsb
jns
jae
xor
call
inc
add
cmpsl
leave
jp
aaa
movsl
jns
jp
pop
sti
cltd
pushf
sbb
mov
or
jae
sub
rol
xchg
push
lods
dec
adc
aaa
push
xlat
add
lods
fisttpll
out
cmp
scas
mov
mov
fdivr
inc
and
std
loope
push
and
lods
mov
push
xor
bound
out
bswap
cli
lret
ftst
jecxz
sub
adc
or
mov
ja
mov
inc
push
dec
adc
sbb
push
mov
adc
lods
xor
and
in
repz
in
add
jl
data16
xor
xor
out
mov
loop
mov
xchg
mov
mov
cmp
sub
sub
mov
adc
ror
mov
adc
pop
in
mov
sub
call
sub
xchg
xor
int
ret
xor
adc
int3
mov
hlt
inc
enter
andb
jmp
daa
ret
pop
jnp
pop
pop
out
lock
dec
insb
int
xor
leave
pop
mov
push
or
shl
sub
push
pop
cmpsl
xor
lea
addr16
cmp
pop
inc
add
outsl
sbb
inc
xorl
sub
fxch
aad
in
jecxz
ljmp
mov
pop
test
loope
sub
rcll
fisubl
xor
pusha
mov
xchg
sbb
in
test
mov
loopne
pop
sbb
sub
mov
int3
mov
pop
pop
das
int3
insl
inc
inc
jge
decl
mov
rol
jmp
pop
pop
mov
dec
pop
ret
es
popf
push
lret
push
or
dec
sbb
icebp
xchg
mov
or
icebp
test
lcall
jo
imull
xor
mov
sub
mov
and
adc
shlb
popf
mov
dec
stos
mov
fs
adc
adc
inc
fsubl
inc
je
jae
cmp
inc
stc
push
xor
dec
add
add
pop
into
xor
push
mov
faddl
fucom
js
inc
rcll
int3
jle
out
adc
imul
push
es
push
add
or
loopne
insl
xchg
xor
pushf
pop
mov
push
xchg
inc
or
xor
pop
movsb
xor
add
int
inc
xchg
jg
xchg
in
push
jecxz
or
sbb
rclb
movsb
je
mov
fabs
jnp
dec
dec
mov
mov
push
dec
xchg
hlt
cmp
addr16
cmp
add
test
jnp
cs
icebp
xchg
add
xchg
cmp
xor
adc
ds
in
dec
std
adcb
mov
outsl
lcall
mov
stos
mov
mov
sahf
ja
push
push
xor
xor
xchg
in
xor
decl
daa
adc
das
sbb
repnz
xchg
mov
jae
sbb
orb
pushf
loope
cmp
pextrw
xor
int
push
hlt
jmp
insb
xchg
jmp
jle
mov
test
out
pop
fsubl
cltd
jae
in
movsl
ret
lock
out
jp
mov
and
mov
iret
lea
loope
push
cltd
iret
jo
in
push
xor
pusha
jp
xchg
sub
bnd
dec
mov
fs
mov
stc
lods
bound
je
push
xchg
or
enter
cmp
add
insb
in
adcl
imul
mov
mov
leave
je
daa
repnz
xchg
das
lock
out
nop
xchg
das
aad
lret
jno
push
lcall
pop
add
into
and
jbe
jge
mov
mov
lods
lods
inc
sub
call
mov
stc
enter
mov
mov
sahf
dec
arpl
push
jns
and
add
dec
js
jmp
popf
sub
jb
pop
mov
pop
pop
inc
in
sti
xchg
mov
jbe
imul
dec
loopne
aad
das
ret
mov
inc
jno
or
or
cli
cmc
adc
xchg
out
add
push
mov
inc
stc
js
xor
cmp
stos
into
xchg
loope
rclb
pop
arpl
sub
punpckhbw
pop
mov
aad
adc
sub
popf
es
pop
and
mov
iret
sbb
xor
dec
pop
fadds
lahf
inc
inc
add
stc
ljmp
push
mov
mov
or
jb
cmp
pop
xchg
xchg
aaa
cmpsl
pop
test
fidivl
xchg
inc
jmp
aaa
dec
je
out
pop
xchg
shlb
mov
aam
xchg
xor
pop
ret
cmp
lret
cmpsl
rol
cmp
ret
cmp
outsb
mov
aaa
inc
pop
call
out
int
das
cltd
movsb
stc
aam
adc
jae
les
lret
int3
fsubp
jmp
scas
test
cmp
movsb
imul
and
cld
js
ljmp
fucomp
jne
test
cmp
cmp
lahf
xchg
push
ret
mov
inc
xchg
fisubrs
rcrb
mov
xlat
xlat
jo
xchg
pop
sbb
out
test
lock
sub
jmp
outsb
std
push
xchg
imul
out
inc
cmp
push
decl
nop
lret
jno
loopne
lock
jbe
jno
push
outsl
adc
adc
fstpt
sub
loopne
data16
aaa
andl
add
stos
pop
and
ja
dec
les
adc
dec
xchg
fbstp
adc
outsl
and
push
int3
lcall
pop
aad
in
xor
addr16
sbb
xchg
addr16
popa
shll
das
cmpb
mov
ja
cmpb
repz
xchg
sub
add
out
fidivl
in
push
mov
mov
inc
outsb
xor
repz
lods
jae
xchg
nop
cmp
mov
into
adc
packuswb
stos
daa
scas
dec
mov
int3
test
stc
push
lock
sarl
rcrl
mov
roll
mov
stos
jnp
add
loopne
sub
lods
imul
cmp
fistpll
push
adc
fwait
pushf
je
popf
test
xor
or
fwait
jge
cmc
addr16
das
add
pop
mov
arpl
lret
imul
mov
inc
subl
add
enter
mov
push
push
in
inc
mov
outsl
and
rorb
fisubl
jl
popf
push
stos
sub
imul
mov
out
out
cltd
mov
int
push
push
stc
movsb
iret
ss
bound
push
add
rcll
inc
popf
rorb
imul
test
daa
mov
notb
adc
xchg
lods
icebp
stc
xchg
cmp
lret
ret
addb
xchg
fistpll
shrb
pop
inc
xchg
iret
adc
movsl
pop
imul
inc
mov
xor
mov
test
inc
and
cmp
push
and
shlb
pop
insl
push
adc
roll
mov
ljmp
inc
je
or
add
dec
mov
repz
cmpsb
cld
push
ret
push
push
pop
or
mov
js
push
mov
nop
pop
jge
xchg
fsubr
dec
xchg
cld
adc
les
outsb
ds
hlt
cld
and
and
fisubrl
outsb
jnp
jae
mov
mov
ljmp
inc
jbe
cmpsl
lahf
lcall
adc
daa
mov
xchg
push
xor
push
aad
jmp
cmp
adc
scas
jbe
sub
dec
or
scas
cmc
dec
mov
lret
sbb
xchg
repnz
loop
cld
cs
sub
in
ret
sbb
lret
push
jae
add
push
push
insb
pop
imulb
out
arpl
mov
enter
rcrl
sahf
inc
aam
jne
xchg
fcompl
pusha
mov
or
xor
test
pop
daa
adc
test
dec
insl
jae
cmpsl
mov
mov
mov
test
sub
cmpsl
cli
mov
pop
mov
arpl
push
xorb
int3
add
push
cmp
jg
rorb
in
and
inc
pop
shl
mov
push
or
push
mov
xchg
fs
xchg
popa
jecxz
jbe
rolb
sub
mov
dec
aad
dec
mov
pushf
xchg
outsb
dec
out
add
push
lds
daa
mov
jle
adc
gs
mov
and
mov
xlat
mov
stos
inc
mov
jne
adc
repz
ja
loope
je
push
sahf
out
addr16
sbb
inc
mov
test
sbb
mov
add
jb
jbe
aam
sub
popf
xchg
test
xorl
jo
dec
in
push
test
arpl
xor
in
test
fcmovbe
mov
inc
xor
into
mull
mov
or
push
jp
jae
insl
mov
ja
add
jp
fdivr
add
adc
dec
hlt
cld
jmp
aaa
cmp
leave
clc
dec
sbb
jmp
sub
jns
pop
leave
fsubl
xor
cmp
and
pop
les
lea
sbb
loope
sti
and
out
add
cmp
jno
dec
add
aas
inc
lds
push
movsl
push
leave
in
into
in
jae
movsl
stc
xchg
mov
mov
ret
adc
or
jne
jp
xor
adc
add
int3
sub
xchg
pop
xchg
popf
pop
xchg
push
mov
ss
test
test
test
sti
push
cwtl
jecxz
mov
or
pop
imul
fcmovne
test
sub
xlat
dec
xor
orl
fidivl
imul
or
mov
cmp
sarl
ja
pop
addr16
loop
inc
dec
mov
mov
scas
xchg
jg
rcl
mov
dec
lahf
or
jp
or
loopne
cs
mov
into
xchg
xchg
sub
stos
filds
scas
insl
cmp
leave
pop
mov
mov
mov
cmp
pop
mov
shlb
mov
fs
xchg
sbb
jno
inc
out
idivl
xor
out
jp
push
ljmp
arpl
pop
loope
idiv
mov
jne
js
inc
sub
push
xchg
or
testl
inc
mov
pop
in
sbb
mov
das
jnp
push
sbb
cwtl
mov
mov
sbb
es
mov
popa
fsubr
inc
cld
sub
adc
ds
and
ret
inc
pop
sbb
sbb
jg
inc
cmc
sub
or
out
mov
push
sbb
roll
cld
and
rcrl
sbb
push
int3
jnp
adc
lret
cmp
ficompl
aam
mov
and
pop
sar
fwait
xor
aad
rclb
inc
jecxz
mov
or
imul
add
test
ret
mov
aas
jge
xchg
lds
mov
jp
test
mov
or
push
xchg
int
pop
cmp
cltd
daa
jns
fcmovnbe
and
or
insl
mov
ljmp
repz
test
xlat
sahf
cmp
aaa
xchg
or
or
push
cmp
inc
clc
adc
xchg
cmp
fst
mov
jnp
es
inc
dec
rolb
sbb
push
sub
cmp
out
jp
out
out
roll
fimuls
aam
xchg
pop
inc
jne
inc
lcall
xchg
inc
iret
pushf
sub
testb
scas
cmp
xchg
std
imull
rolb
mov
sbb
mov
cmpsb
sub
cs
loop
into
xchg
xchg
push
out
lcall
dec
jmp
mov
jmp
cmpsb
push
mov
fyl2x
lock
es
lcall
scas
out
inc
mov
cli
iret
adc
mov
outsb
in
lret
shrl
shl
rorl
insb
adc
and
lret
int3
std
icebp
imul
sub
cmp
mov
icebp
movsb
pusha
mov
pop
lods
mov
inc
stos
xchg
or
test
es
and
xlat
je
shrl
shll
out
mov
cmp
cmp
ss
negl
jmp
mov
jb
cmpsl
ja
cmp
ds
mov
adcl
out
sub
push
ret
cmp
andl
sbb
lcall
scas
mov
ds
inc
or
push
addr16
sbb
mov
sarb
inc
pop
add
pop
in
cmp
loopne
popf
push
outsb
pop
testb
nop
lea
or
push
roll
sub
shll
roll
jne
scas
xchg
leave
xor
xchg
in
lds
mov
cltd
jl,pt
scas
cmpsb
aad
push
ffree
fcmovbe
mov
xorl
rcrb
jmp
mov
or
call
xlat
shll
mov
les
fcos
cmpsb
test
dec
push
in
rolb
mov
aad
push
addl
pop
popf
adc
repnz
and
nop
mov
inc
leave
or
mov
dec
lret
xor
imul
mov
mov
push
scas
pop
test
out
hlt
out
fistl
imul
fwait
rcrl
scas
xor
cmp
jb
lret
out
je
xor
loope
leave
and
add
jae
mov
or
mov
inc
es
cwtl
xor
cltd
dec
or
jae
pop
fdivl
iret
lret
or
inc
mov
fimuls
adc
repnz
mov
movb
jmp
rclb
push
and
mov
push
inc
adcl
sbb
insl
out
lret
faddl
xor
fcomp
xor
mov
xchg
xchg
insl
jle
mov
push
mov
dec
add
js
pop
push
adc
cli
outsl
lock
subl
adc
pop
xor
xchg
lcall
mov
pushf
aad
cmp
sbb
fwait
jne
mov
stos
add
cmc
mov
bound
sahf
popa
cs
xchg
pushf
bound
sub
shrb
pusha
pop
add
inc
addr16
lret
jle
and
int
mov
les
lock
push
mov
mov
push
jp
jecxz
daa
imul
test
and
popf
mov
jae
cmc
mov
jns
gs
add
fists
les
mov
loopne
pop
push
loope
inc
mov
enter
aaa
mov
jae
mov
es
out
add
mov
jo
xor
pop
push
sub
inc
sbb
mov
xlat
push
je
leave
dec
sub
roll
fisubl
xchg
xchg
pop
add
fisubrs
cmpb
dec
into
sub
icebp
repnz
out
pop
pop
pop
push
xchg
cld
repz
mov
repz
outsb
cmc
fists
loope
aaa
fisubl
imul
mov
pop
cmc
fwait
mov
jmp
aad
test
inc
xor
rol
cmc
push
or
nop
pop
or
arpl
insb
xor
cld
pop
xchg
and
mov
cmp
fucom
ficompl
sbb
push
cs
movsl
or
jno
fs
popa
repz
pop
ret
pop
mov
call
dec
bound
outsb
sahf
fsubrs
cwtl
xor
stc
fs
loop
inc
jnp
lea
adcb
mov
cld
rol
paddsw
mov
push
jae
jg
xor
push
test
mov
push
stos
cli
repz
adc
iret
dec
or
inc
stc
cmpsl
imul
xchg
cwtl
mov
ret
nop
ja
sub
aam
cmp
pop
mov
push
std
jge
frstor
mov
dec
sub
js
punpcklwd
call
and
jge
cmpsl
scas
shll
loope
add
sbb
enter
loope
pushf
lds
sub
fadd
push
aam
outsl
inc
add
data16
lret
stc
mov
mov
jno
mov
ljmp
push
add
insl
add
lret
add
lcall
mov
cmp
sbb
and
xor
push
push
push
or
jnp
pop
outsb
sub
cmpsl
imul
aas
movsl
xchg
push
dec
fwait
leave
stc
cmp
xor
jae
mov
fdivrs
inc
subl
sub
jg
lcall
andnps
fiaddl
mov
orb
jne
in
loopne
pop
mov
push
mov
daa
leave
arpl
into
jg
jg
cmp
enter
pop
add
and
xchg
and
outsl
cltd
sahf
mov
std
sub
or
outsl
das
in
rclb
dec
std
xor
xchg
jp
repz
inc
xchg
enter
pop
mov
or
scas
adc
into
imul
cmpsb
and
xchg
mov
cld
jecxz
in
scas
xchg
xor
pop
gs
fnstenv
jp
out
push
xchg
mov
push
mov
inc
and
push
xchg
daa
inc
or
sbb
stc
lret
xchg
sub
in
fdivs
cwtl
inc
lds
aaa
push
fbstp
mov
scas
loopne
sub
ja
sti
push
mov
sub
mov
and
lcall
aam
xchg
faddl
aad
roll
push
int
xchg
sub
js
inc
xchg
mov
and
sub
sti
mov
andl
scas
lods
cmp
add
cmp
mov
dec
into
sbb
stc
mov
dec
cmp
pushl
nop
aaa
dec
hlt
sub
ljmp
ret
jecxz
or
lds
mov
das
in
shlb
movsb
pop
daa
fildll
insl
jl
sbb
sahf
mov
jae
fcomps
sbb
sbb
aam
mov
add
test
leave
push
dec
jnp
stos
mov
and
test
jmp
push
sub
outsl
addl
imul
fs
jg
adc
mov
push
mov
mov
jns
and
in
adc
pop
adc
int3
rol
mov
mov
sbb
aas
nop
push
mov
jecxz
and
fs
in
lret
daa
insb
push
xor
mov
cmp
cmp
aas
stc
negb
xor
push
xchg
adc
or
adc
sti
inc
mov
shlb
in
mov
pop
push
xchg
inc
xchg
dec
dec
mov
dec
sar
adc
adc
insl
or
pusha
sub
outsb
ss
fcompl
sbb
dec
push
add
repz
fwait
mov
test
call
mov
dec
xor
data16
sti
mov
xor
and
js,pt
out
aad
push
xchg
ds
mov
xchg
mov
cmp
push
or
ret
cltd
dec
daa
in
pop
ja
mov
xor
xor
adc
idivb
insl
add
jns
je
add
mov
pop
xor
or
hlt
sub
xchg
scas
xor
fwait
popf
mov
stos
sub
dec
into
push
push
arpl
push
imul
jle
mov
xchg
sub
adc
hlt
mov
xor
int3
push
aaa
lret
sbb
xchg
adc
stos
in
inc
adc
xchg
nop
pop
xchg
inc
pop
aaa
push
adc
call
xchg
inc
ds
fldenv
insb
jle
sub
cwtl
jecxz
push
and
aam
shrl
xor
push
aas
mov
test
mov
push
aas
popa
jp
jg
add
outsb
subb
mov
dec
mov
sub
add
xor
adc
inc
jb
inc
xor
out
cmp
or
add
sub
push
aaa
inc
out
sub
jle
xor
mov
pop
subl
lea
mov
mov
and
mov
sahf
divl
and
or
inc
cmp
push
dec
cmp
out
fs
ds
xor
aad
dec
add
adc
sub
add
mov
mov
xor
mov
jnp
outsb
cmp
mov
lock
jnp
dec
cltd
mov
push
add
inc
in
jnp
das
lcall
xor
adc
loop
fxam
pop
mov
push
xchg
fwait
and
aaa
adc
int
sbb
sub
sub
lea
or
pop
or
lcall
mov
fs
jns
int
jl
and
in
inc
xchg
mov
xchg
add
inc
add
imul
arpl
inc
and
fwait
mov
mov
out
and
clc
jno
shl
xor
insl
sub
inc
inc
or
xlat
iret
lods
das
orb
jae
mov
negb
push
cmpsb
cltd
insl
cltd
aad
adc
data16
js
cmp
repz
aas
jnp
rol
mov
sbb
jge
stos
rcl
cld
cwtl
adc
and
pop
push
in
xchg
mov
xchg
int
push
mov
and
adc
sub
push
inc
push
fsubs
cmc
add
jno
mov
xor
xchg
add
in
cmp
fmuls
jg
loop
xor
mov
sarl
lret
adc
dec
push
push
lods
repnz
xchg
ds
mov
aam
test
xchg
decl
sbbb
fcomps
fmuls
push
push
stc
test
cmc
sete
shl
das
stos
dec
std
ficompl
enter
mov
mov
je
mov
imul
fidivs
mov
push
push
or
xor
iret
add
movsb
or
jo
dec
cmpsb
or
xchg
fmull
out
fisubrl
test
cs
adc
xchg
and
xchg
push
ret
and
lret
jl
sub
or
loopne
mov
mov
mov
mov
pusha
inc
roll
xchg
int
cmc
lea
shrl
movsl
mov
sub
out
push
mov
dec
cwtl
daa
sub
mov
sub
mov
mov
sbb
inc
and
jecxz
stc
sbb
xlat
jp
aam
lret
adc
pusha
out
add
fidivrs
into
mov
xor
push
cmc
js
cmpsb
jb
sbb
lods
lea
dec
xlat
dec
xor
inc
daa
iret
push
or
pop
mov
mov
inc
mov
ret
repz
jge
xchg
inc
fs
test
xchg
jmp
sbb
dec
leave
arpl
cmpb
pop
gs
and
lds
jno
adc
fistl
add
adc
gs
sbb
add
cld
pop
and
cmp
cmpsb
mov
add
pop
data16
in
sahf
or
push
mov
stos
bound
pop
fstp
jp
movsb
jmp
test
insl
fdivr
mov
ljmp
xchg
mov
jo
and
inc
xor
jge
or
js
xchg
sbb
div
leave
test
outsl
and
out
movsb
cmp
inc
push
int3
lock
jmp
jmp
mov
inc
in
sbb
das
pop
xchg
adc
repz
xchg
pop
lock
popf
mov
js
fmull
sub
lds
pop
sahf
and
cwtl
mov
mov
mov
push
stos
mov
xor
mov
loop
fs
test
mov
push
mov
adc
inc
idiv
add
loope
sbb
mov
lret
insl
add
cmp
xchg
push
lods
xchg
push
mov
xor
add
mov
in
leave
mulb
inc
mov
dec
inc
sbb
or
jno
inc
rolb
xchg
ljmp
inc
sbb
pop
add
rorb
cmpsb
lret
jecxz
fcomip
mov
push
jge
sub
push
fcompl
xor
jno
inc
push
and
aaa
or
cltd
call
xor
notb
cmp
jle
cltd
shll
fiadds
into
jge
test
inc
aas
cmpsb
or
cmp
xor
jb
lods
pop
repz
mov
xlat
xchg
jge
js
stos
sbb
js
inc
in
sbb
lock
push
mov
test
sub
lds
movsl
dec
adc
movb
inc
cli
out
mov
add
mov
sbb
dec
mov
xchg
out
or
je
lods
adc
add
push
in
lret
jp,pt
ja
xor
xchg
lods
jae
adcl
pop
adc
ficoms
dec
mov
and
lds
sbbl
inc
cmp
add
pop
push
das
push
dec
out
mov
loopne
dec
popa
fisubrs
xlat
loope
popf
sbb
out
mov
nop
xchg
fildl
pop
test
sub
aad
sub
or
jae
fisubs
pop
xchg
movsl
cwtl
mov
aam
out
inc
cld
mov
xchg
pop
mov
and
add
or
mov
in
jns
or
outsl
mov
imul
add
and
shll
adc
jmp
rcrl
dec
addr16
imul
faddl
add
adc
sub
xor
mov
ret
and
xor
in
jle
jl
pusha
insl
and
xorl
cmp
aaa
fimuls
inc
add
int
xchg
cmp
push
int
and
jmp
pushf
jbe
or
int
dec
js
push
enter
cld
mov
ss
or
add
fmuls
popa
sbb
aaa
inc
sub
sarb
cmp
jecxz
out
cmpsb
xchg
in
jns
stos
pop
jp
jecxz
push
int
dec
and
inc
lcall
cmpsl
mov
es
lret
loop
mov
imul
xchg
xchg
jp,pt
rcll
insl
lock
sub
and
int3
in
fimuls
push
and
push
loopne
jb
adc
jecxz
fucom
xchg
xchg
sub
rorb
mov
sarl
lahf
or
mov
rclb
jae
rolb
mov
pop
mov
mov
fldt
lcall
gs
dec
adc
dec
jle
mov
lock
or
mov
mov
xor
or
adc
pop
xchg
mov
lahf
sub
dec
in
sbb
inc
xchg
sbb
xor
mov
mov
jl
dec
iret
cmp
mov
push
mov
mov
or
inc
xchg
ficompl
repnz
sahf
jbe
add
test
push
test
mov
ljmp
and
clc
mov
adc
out
inc
lahf
or
fcomip
std
stos
mov
or
xor
cmp
repnz
jg
or
in
cmp
xchg
adc
movsl
sub
mov
sbb
xchg
inc
xchg
sub
adc
cmpsl
inc
ljmp
push
into
xchg
and
lcall
push
daa
xchg
or
push
incb
mov
cwtl
jns
inc
pop
sbb
or
stos
je
sbb
jb
push
shrb
cs
lahf
cmp
pcmpgtd
out
into
mov
xchg
popa
push
mov
stos
pusha
mov
scas
enter
loop
adc
mov
push
les
test
push
les
loop
clc
in
stos
inc
mov
fwait
jae
insl
xor
mov
inc
mov
pop
movsb
push
xor
dec
mov
out
jl
lret
sub
dec
mov
icebp
repnz
sub
adc
xchg
dec
jecxz
cmp
fisubs
out
popf
repnz
jp
dec
push
or
fs
xchg
sbb
and
mov
dec
inc
mov
ds
loopne
jge
cmp
dec
xor
dec
mov
dec
jbe
cmp
out
fildl
cli
sub
add
mov
popf
addr16
inc
or
loope
popa
or
mov
cmp
pop
in
add
add
xor
ret
test
cmp
push
ret
inc
cmp
movsl
xchg
push
jg
dec
imul
adcl
lods
in
xor
das
lahf
sub
cli
into
fsubl
and
scas
pushf
cmp
push
cmp
push
outsb
xchg
mov
frstor
in
fs
adc
adc
sahf
inc
push
push
lret
mov
xchg
sub
adc
cmp
add
xor
mov
xchg
outsb
call
xor
push
add
ror
dec
aam
loop
sbb
and
mov
push
clc
addb
jb
xor
jmp
into
sbb
jl
mov
dec
push
fs
jb
insl
loope
clc
jns
mov
add
outsb
sub
cmpsl
adc
xlat
dec
pop
repz
jb
mov
add
addr16
es
sub
sbb
pop
cmp
xchg
or
xor
lret
mov
mov
out
adc
xlat
xchg
cltd
sbb
xchg
add
push
sbb
inc
xor
and
inc
stc
ret
or
into
push
fwait
push
lcall
push
or
mov
js
addr16
xor
sbb
sbb
sbb
pusha
fsubrp
xchg
xor
cli
sub
lahf
iret
xor
dec
lahf
adc
lret
sbb
mov
adc
std
sub
scas
jecxz
repz
sub
adc
dec
cmp
adc
adc
es
xchg
dec
xor
sbb
sbb
cmpsb
testb
dec
sub
in
sub
inc
push
sbb
fidivrl
xchg
add
dec
int3
jae
push
jp
iret
add
fwait
mov
push
leave
xor
enter
inc
fisttpll
push
loope
cmp
push
orl
lcall
adcl
fadd
shlb
jno
test
pop
push
insl
out
scas
mov
jb
outsl
sarb
in
push
adc
int
test
cmp
pop
mull
jp
mov
sub
cmp
enter
sbb
orb
sbb
dec
rorb
pop
aad
mov
sub
or
push
mov
cltd
jae
push
mov
or
mov
addr16
sbb
sub
add
and
jno
lods
cwtl
xchg
scas
ss
sbb
addr16
aad
mov
andl
push
xlat
out
mov
mov
dec
out
xchg
pop
mov
cmp
cld
inc
jns
sub
cwtl
mov
jb
rcll
jmp
mov
cmpsb
cmpsb
jecxz
push
inc
and
sbb
sub
and
imul
insb
push
fidivl
mov
mov
aaa
xchg
shrl
adc
jmp
sarl
jecxz
push
mov
xchg
repnz
pop
adc
daa
add
imul
cltd
mov
les
adc
add
clc
mov
jnp
add
inc
into
fucomp
push
mov
mov
popa
mov
ja
xchg
xor
sbb
sbb
addr16
or
mov
fidivrl
cmp
cmpl
dec
and
andl
adc
xchg
jmp
xor
adc
int3
add
rol
sbb
ret
inc
xchg
pop
push
and
daa
and
fwait
ja
sbb
into
xchg
test
fidivl
push
fnstcw
lods
sar
and
dec
add
sub
leave
inc
popf
push
repnz
nop
dec
xor
cmp
adc
adc
std
add
popa
add
add
push
xor
int3
mov
test
icebp
call
xchg
push
cmc
mov
pop
cltd
call
xlat
dec
shlb
dec
pop
dec
mov
and
jo
cmp
sub
xchg
jnp
or
or
xchg
jle
pop
xor
push
jl
ja
das
in
pop
sbb
and
jl
jbe
xchg
ja
cltd
pop
mov
daa
cld
lcall
cmp
and
cmp
sti
xor
aad
mov
jl
fisttps
add
or
and
or
push
adcb
sahf
loopne
mov
cmp
xor
sub
jo
and
ds
call
int3
stos
es
mull
pop
adc
daa
fnstenv
jmp
repz
ljmp
sbb
pop
cltd
pop
inc
leave
aas
xor
push
mov
and
mov
out
das
imul
mov
les
mov
mov
shrb
jg
test
xlat
hlt
sbb
mov
icebp
dec
rcr
int
pop
popf
lods
int3
aaa
inc
out
insl
adc
repnz
and
in
mov
cmp
jp
add
xchg
fidivs
js
mov
imul
lea
popa
incl
add
dec
xor
sub
mov
pushf
cmp
adc
sub
sbb
inc
pminsw
xchg
icebp
sub
iret
jg
adc
or
xchg
xchg
adc
dec
adc
mov
rcll
mov
sahf
push
jmp
add
and
out
xchg
sbb
inc
sub
mov
push
push
mov
aaa
mov
mov
aaa
mov
and
call
fidivl
jo
xor
mov
push
int
fstp
xor
mov
add
inc
dec
lret
cmpsl
sbb
adc
push
shrl
cmpl
nop
cwtl
test
cmpsl
jg
mov
xor
popa
pop
in
cli
int3
jmp
sub
cmp
sbb
lods
pop
arpl
pusha
adc
repnz
gs
and
inc
ljmp
nop
xchg
std
and
push
jno
into
jecxz
ror
loopne
mov
inc
adc
xchg
lcall
inc
into
dec
sub
cltd
ljmp
adc
xor
push
imul
lcall
or
jmp
sub
and
aaa
rclb
add
push
lea
sub
arpl
sub
adc
fwait
push
pushf
stos
pop
pop
loopne
xor
pusha
out
or
clc
sbb
push
mov
add
outsb
xchg
lea
es
sbb
mov
lods
sub
mov
cmp
aaa
lcall
push
incl
sub
sbb
and
jbe
push
sub
movsl
fiaddl
js
lods
and
pop
int
pop
shrb
jns
inc
sub
mov
lods
cmp
inc
insl
jge
or
daa
or
lret
shll
insl
fistpll
push
into
lcall
lock
sbb
aam
cmp
xor
jae
mov
sbb
xchg
xlat
ja
negl
or
out
stos
and
adc
mov
and
lret
inc
fmul
ret
imul
dec
mov
inc
dec
jno
nop
add
mov
into
ljmp
push
ljmp
dec
pop
xchg
gs
test
movsl
iret
xor
lock
adcb
cmp
jl
mov
nopl
inc
and
pop
sub
or
xlat
sbb
mov
jns
addr16
and
pop
movsl
mov
shll
cmp
push
mov
cmpsb
out
xorb
loope
pop
insl
and
push
lret
and
adc
int3
push
cmp
mov
in
sbb
bound
das
jge
ljmp
sub
stc
in
and
je
push
cmp
lods
cmp
and
xor
out
aad
dec
and
mov
stos
dec
loope
adc
div
push
shrb
int3
test
pusha
push
push
sub
pop
mov
jmp
cltd
pusha
lret
xor
xor
pop
aad
jge
and
push
inc
sbb
ds
cmpsb
push
sbb
rolb
pop
mov
lea
das
dec
dec
or
inc
pop
nop
cmp
test
sbb
ret
repnz
mov
fwait
hlt
xchg
cmpsl
pusha
pushf
scas
ret
repz
sbb
cmp
or
push
or
repnz
in
push
aam
cmp
pop
orl
inc
push
notb
sbb
jecxz
cmp
repnz
in
add
or
xchg
arpl
shrl
fdivrs
ds
cltd
or
xchg
add
sti
mov
mov
enter
jnp
das
ss
mov
movsb
pop
cli
sti
enter
add
push
pop
cmpsl
jmp
movsl
cmp
jne
test
fadds
jl
mov
xchg
xchg
xlat
cmp
stos
jbe
scas
push
ja
xchg
sbb
sbb
jo,pt
cltd
jl
enter
lret
call
mov
inc
fwait
mov
dec
dec
push
pop
repz
inc
fdivrl
jbe
xchg
imul
in
aas
mov
andl
das
popf
xchg
xchg
lret
ret
xor
mov
out
ror
arpl
int
or
je
aad
jp
dec
mov
rol
addr16
mov
mov
stc
adc
dec
xchg
or
or
mov
push
lock
lock
leave
dec
insl
insl
lret
xchg
pusha
push
das
movl
mov
loop
and
xlat
mov
mov
int3
or
and
dec
jmp
lret
xor
or
inc
cmp
sbb
testb
imul
pop
cld
outsl
pop
inc
ret
mov
mov
cld
mov
sbb
xlat
jecxz
push
insl
pop
addr16
lods
cwtl
rcrl
insl
lahf
les
imul
loope
sub
out
add
leave
push
pop
cli
adcl
cli
adc
ficoml
xor
daa
in
enter
push
and
push
fwait
mov
test
push
fimuls
adc
xchg
pop
je
jmp
out
xor
xlat
lods
or
in
or
xorl
mov
lods
jmp
cmpsb
cmp
int3
jno
mov
dec
in
rcl
aam
or
out
adc
push
dec
pop
repnz
push
mov
scas
fcomps
mov
sub
ss
movsb
cmp
aas
shrb
cld
dec
pop
aad
lods
xchg
sbb
roll
test
das
sub
pushf
scas
rolb
cwtl
pop
sarb
pusha
jp
jge
movsb
mov
xor
jns
cmc
and
roll
out
je
push
daa
mov
enter
addb
push
add
aad
out
mov
lods
sub
and
outsl
mov
cmpsl
mov
sbb
sbb
xor
pop
dec
dec
inc
or
insb
cmp
adcb
pop
lds
std
jp
pop
in
jne
add
dec
mov
pop
jnp
sahf
popf
add
cmp
adc
daa
jnp
adc
ret
adc
js
int
lahf
hlt
lods
add
dec
stos
shll
sbb
shlb
lret
push
adc
fidivl
push
mov
in
mov
pushf
js
jge
pop
ret
mov
movsl
lods
dec
call
fimuls
insb
and
enter
js
mov
sub
cltd
fdivl
push
in
ss
fbld
cmp
jo
js
popa
sub
mov
cmp
jno
xor
fstps
add
data16
mov
adc
lods
or
loopne
imul
cli
imul
lods
test
in
int
js
stos
lret
add
sub
lcall
pushf
scas
leave
cmp
inc
add
in
xor
flds
fsubr
cmp
nop
jae
iret
inc
outsl
repnz
sub
mov
pop
pop
inc
mov
scas
push
mov
test
mov
in
mov
cltd
jns
inc
xor
mov
lret
inc
or
fnsave
push
jmp
pop
arpl
xor
rcrl
cltd
mov
loopne
out
je
jns
pop
mov
fcmovnb
movsb
lds
sub
mov
pop
mov
cmpsl
mov
popl
mov
push
mov
out
testl
fldl
lret
icebp
adc
shr
insl
repz
fldcw
sub
mov
aas
fnstcw
dec
pop
xor
insb
push
pop
sbb
ret
outsl
cmc
mov
orb
test
pop
out
inc
cwtl
jl
push
aad
pop
sahf
mov
pop
adc
mov
adc
cmp
push
mov
dec
imul
xor
sbb
mov
and
out
pop
stc
xor
in
fs
fldl
sbb
xor
mov
cld
clc
aam
sub
bound
jmp
mov
push
xlat
cltd
mov
jb
xor
adc
push
jo
fisubl
out
and
adc
lret
push
add
popa
push
or
frstor
int
xchg
faddl
inc
mov
jb
out
movsb
std
add
xlat
daa
cltd
pushf
dec
jg
jg
push
sbb
mov
shll
xchg
sub
mov
inc
bound
and
test
pop
xchg
fwait
jl
rcrb
xor
scas
mov
imul
jmp
aas
outsb
cwtl
fidivrl
xchg
negl
scas
mov
pop
mov
in
pop
movl
xor
out
mov
push
es
ss
andb
or
xlat
jle
mov
mov
nop
xchg
cmp
negl
sub
test
sbbl
inc
mov
pop
inc
out
fwait
xchg
incb
sahf
cmp
pushf
xor
xchg
fiadds
xlat
rorl
imul
jmp
cmp
out
and
or
in
scas
lds
daa
in
popf
inc
push
test
xor
push
fsubr
or
pop
enter
sub
fsubl
pop
ror
out
incb
test
cltd
pop
dec
test
mov
jns
and
jmp
fstpl
push
xchg
mov
push
adc
aaa
xchg
bound
popf
fwait
mov
dec
sub
and
aad
shrl
mov
insl
jns
push
mov
adcb
pop
in
mov
clc
pop
dec
test
or
insl
mov
sbb
dec
int3
push
jmp
and
inc
movsl
sub
frstor
add
mov
inc
outsl
sub
xor
ficomps
dec
mov
shl
repnz
jo
add
decb
in
stos
pop
movsb
jns
mov
pop
inc
mov
loop
test
clc
cwtl
cli
in
loop
jae
dec
iret
es
sub
jle
push
cs
jecxz
out
fdivrp
popf
xchg
andl
fsubp
push
pop
add
fisubrl
pop
stos
iret
test
mov
imul
adc
xchg
cmp
jecxz
inc
jl
mov
pop
popa
sarl
xchg
sahf
in
mov
cmc
push
xor
inc
and
adc
int
test
jo
rcpps
dec
dec
incb
adc
pop
scas
jl
sub
and
sbb
jg
je
clc
push
mov
lret
repnz
mov
bound
cmp
sti
mov
repz
xchg
lods
add
ret
jne
sub
mov
mov
sbb
or
arpl
movsb
jle
xor
clc
int
gs
jo
incb
repz
xchg
mov
mov
lea
pop
call
test
jl
test
movsb
sti
adc
and
pop
andl
push
rclb
pop
scas
lea
cli
inc
mov
adc
stos
test
sbb
dec
pop
std
ret
lds
push
aad
jnp
lock
dec
scas
xchg
lds
push
hlt
leave
push
in
mov
ss
sbb
call
outsb
mov
pop
pop
push
xor
pop
cmp
dec
sbb
mov
stc
cmp
sub
xchg
pop
sahf
dec
movzwl
mov
mov
cld
insb
dec
inc
lods
adc
movsb
shrb
cmp
push
mov
and
test
sarl
push
addr16
das
in
push
ficompl
imul
ficomps
lock
sub
ja
inc
icebp
test
iret
adc
adc
mov
xchg
dec
inc
movsl
mov
cltd
pop
cmp
stc
jp
pusha
scas
cmpb
push
cltd
sbb
mov
mov
jnp
out
and
or
mov
addr16
xchg
dec
fwait
sub
fdivl
das
arpl
in
cwtl
iret
push
icebp
adc
add
xor
inc
ds
and
fcomps
lods
and
sbb
add
js
les
loope
lds
inc
in
and
xor
push
xor
lahf
out
jle
mov
and
cmpsl
insl
repz
jb
jmp
sub
pop
mov
or
out
inc
cmpsl
loop
sahf
adc
sbb
in
stos
adc
add
mov
sti
xor
sbb
outsl
mov
in
icebp
outsl
jns
fcmovnb
add
xor
aaa
sti
mov
push
fbld
or
jae
xor
jb
enter
repnz
rorl
mov
push
xor
ret
lahf
dec
mov
xor
ret
in
mov
scas
pop
scas
sbb
int3
jp
sub
stc
push
rol
mov
cmpl
lods
call
adc
adc
daa
xor
inc
adc
std
lock
mov
xor
adc
add
int
inc
movsb
test
sub
xchg
xchg
xchg
jno
mov
dec
xor
xchg
ljmp
mov
ja
dec
sar
scas
imull
xchg
adc
lea
popf
aad
push
repnz
hlt
mov
lahf
or
jl
inc
mov
mov
cmp
cmp
mov
jb
mov
popf
rclb
out
sahf
hlt
lea
out
sub
inc
adc
lret
jns
iret
and
fimuls
cmpsb
orl
jae
dec
push
insb
sarl
adc
sub
nop
and
push
test
imul
pop
lea
imul
jns
mov
xchg
loope
inc
popa
test
fwait
and
push
arpl
in
and
jnp
pop
lods
cltd
inc
rcl
mov
lock
and
sub
cmpsl
xchg
add
push
int3
out
sbb
cwtl
inc
sarl
dec
scas
out
in
xor
push
arpl
pop
pop
mov
pushf
insb
ds
lret
lahf
lret
mov
popf
lret
mov
lret
mov
movsl
rolb
les
insb
pop
push
sbb
outsb
jmp
in
lret
jbe
mov
jae
dec
add
and
arpl
jnp
mov
je
int
inc
and
xor
xchg
xlat
jnp
insb
sti
xchg
popf
jo
rep
pop
mov
out
testb
add
xchg
lock
clc
cmp
enter
jae
push
pop
jmp
push
pop
jo
and
lcall
aaa
in
insb
sbbb
mov
fcmovnb
fwait
sarb
fcomps
mov
in
jbe
add
pop
adc
cmp
test
xor
mov
outsb
fisubrs
cmp
popa
sub
cmp
addb
dec
mov
xchg
fldl
lahf
lahf
dec
ljmp
sti
call
fnsave
out
jbe
mov
int3
int3
sbb
out
xor
lock
clc
cmp
sqrtps
xchg
sbb
pop
cltd
xor
mov
out
push
cmp
cmpsb
cltd
dec
inc
pop
sbb
push
in
ss
push
or
mov
insb
pop
adc
les
test
mov
out
fnstsw
xlat
cmpsl
call
popa
cltd
lods
mov
xchg
and
mov
dec
insl
or
and
and
push
cmp
leave
addr16
sub
imul
add
mov
push
mov
and
in
cltd
test
mov
mov
xchg
jne
jnp
enter
fldcw
jg
mov
jmp
pushf
popa
push
mov
cmpsb
add
out
mov
cmp
xor
sbb
negb
outsl
lock
push
pop
dec
mov
and
mov
lea
add
sub
test
inc
push
dec
pop
stc
hlt
pop
js
jg
out
idiv
outsb
sti
add
insl
adc
sarl
pop
lods
pop
jmp
leave
sub
lods
fmul
mov
shrb
ds
or
sahf
mov
adc
xor
call
in
lcall
add
and
out
xchg
fstpt
inc
inc
pushl
xor
jb
push
sti
xchg
inc
mov
nop
inc
jp
hlt
lds
push
sbb
mov
xor
test
xchg
add
ja
dec
push
mov
lahf
test
dec
cld
xchg
fdivrl
ljmp
ja
push
inc
pop
add
aaa
jp
in
xchg
and
cmp
insb
pushf
adc
hlt
cmp
in
jl
or
loopne
dec
add
movaps
dec
shrb
popf
shlb
ds
testb
inc
jae
arpl
jne
pushf
push
lock
fsubs
clc
mov
test
mov
mov
fldl
inc
pop
sbb
cld
test
adc
jns
pop
pop
jl
push
cmpsb
or
pop
sbb
add
in
ror
inc
cpuid
xor
inc
or
pop
jo
push
movsb
push
js
mov
pushl
iret
or
inc
enter
sti
dec
dec
aam
movsl
xor
fcomps
aas
xchg
js
jno
outsl
sbb
sbb
dec
jg
jbe
jmp
cmc
or
xchg
push
stos
out
nop
xchg
mov
in
sub
scas
decl
in
xchg
cmp
test
jns
add
add
sub
sbb
aas
xchg
dec
push
add
pop
addb
jnp
inc
sub
and
int
dec
hlt
pop
sub
xchg
fdiv
fsqrt
std
sbb
add
loop
fistpll
inc
mov
lods
pop
cs
cmp
mov
lcall
mov
dec
xor
xchg
cmp
ljmp
mov
push
push
and
xor
inc
add
out
dec
cmpsb
mov
inc
cld
mov
aas
mov
pop
mov
aas
adc
cmpsl
rcr
mov
xor
cmp
xchg
jne
xchg
cmp
filds
hlt
mov
pop
sahf
lods
cltd
dec
and
stos
pusha
fwait
into
inc
jmp
das
pop
xchg
testb
mov
dec
ret
lods
mov
inc
mov
push
inc
xchg
and
in
mov
scas
xchg
push
dec
sar
repnz
sub
or
pop
cmp
insl
jae
ret
or
jl
mov
xor
jg
lahf
push
pop
push
sets
das
dec
ja
sub
sahf
pop
xor
add
xchg
sub
sub
cld
mov
fcmovbe
jb
bound
clc
xsave
cli
jnp
outsb
mov
dec
jge
dec
test
sbb
scas
dec
inc
ficomps
rorb
add
lds
in
jge
push
dec
push
xchg
lcall
fstpt
loopne
xchg
es
push
popf
sbb
sahf
adc
mov
ja
pop
cmc
xor
cmpsb
inc
push
insl
dec
adc
cmp
shll
outsl
les
push
push
sbb
mov
test
mov
ret
xchg
push
mov
jb
sub
adc
mov
icebp
adc
inc
inc
repnz
sbb
ja
pop
dec
int
push
cmc
xor
or
subb
scas
inc
iret
add
imul
add
pop
stos
and
fmull
call
subb
fs
and
pop
push
sbb
sub
sub
cmpsl
outsb
or
mov
jmp
fcmovnu
pop
jge
push
xchg
mov
xchg
xchg
mov
cmc
mov
add
dec
testb
add
cld
outsb
cmpb
aas
sub
and
jno
add
push
push
pop
aaa
ficoms
jge
mov
popa
js
jae
iret
ret
xchg
mov
das
das
push
push
outsl
neg
cld
cmpsb
sub
testb
repnz
out
mov
xor
jne
mov
adc
or
jmp
or
mov
scas
mov
lcall
inc
sub
repz
je
pop
pop
sarb
out
repnz
lahf
sbb
jmp
xlat
mov
push
inc
aam
outsl
jp
push
pop
fcmovb
mov
dec
mov
and
mov
xchg
pop
push
cmpsl
pop
cmpsb
sub
xor
sub
jge
data16
push
pop
sti
and
mov
jecxz
stc
outsb
movsl
in
xor
lret
ss
pop
mov
jnp
sbb
mov
pop
sbb
repnz
sbb
xchg
dec
jg
or
sub
inc
mov
cmp
cwtl
out
clc
xchg
in
xor
ja
mov
push
pop
int
mov
aas
xor
lcall
mov
fidivrl
inc
mov
insl
inc
jg
jge
outsl
sbb
push
dec
mov
jnp
lods
fcomps
cmp
xchg
test
or
lcall
adc
imul
decb
push
mul
or
leave
imul
dec
push
int
mov
push
notl
das
loope
mov
adc
sub
into
push
inc
fisubrl
jnp
or
mov
stos
dec
dec
scas
cwtl
or
and
dec
inc
cmp
mov
adcl
fsubrs
stos
mov
mov
ret
imul
push
repz
mov
stos
sahf
leave
and
scas
leave
xor
push
mov
push
int
mov
lret
fldenv
mov
test
and
outsb
add
jb
push
iret
ja
aaa
ret
sbb
jmp
loop
jns
addl
popa
lret
pusha
arpl
jmp
hlt
lret
jl
in
out
ljmp
xchg
sbb
pop
fcmovnb
mov
out
shlb
adc
and
xor
adc
cmp
addr16
loopne
push
add
pop
loope
stos
xor
mov
aas
lock
and
cvttps2pi
mov
mov
adc
movsb
xor
popa
jae
repz
mull
cmp
fdivp
sti
movsl
cmc
aad
rcll
daa
or
clc
sti
mov
ret
mov
push
test
outsb
mov
hlt
jle
pop
push
ds
into
adc
inc
pop
gs
mov
xchg
pop
xor
cmp
cwtl
dec
bound
mov
dec
add
dec
repz
in
and
ret
dec
fstpt
push
stc
stos
rol
lcall
push
jmp
cmp
daa
xor
stc
insl
lea
insl
mov
hlt
aad
bound
push
add
or
inc
imul
scas
out
lock
mov
and
iret
out
dec
loop
xor
dec
add
sbbl
std
mov
mov
call
shll
aaa
fcomps
and
fstpl
mov
pop
leave
push
mov
push
adc
add
lret
inc
fisubl
stos
leave
enter
cmc
dec
sub
xor
arpl
ljmp
pop
test
lea
and
mov
add
dec
cmp
mov
push
imul
repz
cmpsb
addr16
je
mov
sbb
push
out
pop
xor
push
sub
add
int3
add
les
mov
call
lods
inc
in
mov
jg
rcrl
cmp
das
dec
push
rcrb
test
xorb
fildll
mov
adc
nop
lret
xchg
pop
iret
stc
pop
sbb
lock
mov
cs
sub
mov
push
pcmpgtd
out
jle
mov
imul
jb
dec
sbb
sbb
mov
rclb
pop
push
mov
mov
jle
aam
mov
stos
and
es
add
sbb
push
jmp
sub
xchg
daa
outsb
xchg
or
or
pushf
mov
leave
shrb
mov
push
push
in
inc
jle
gs
add
aam
popa
lock
movsb
stc
push
pushf
xchg
insl
cmp
mov
cmc
jae
cmp
scas
inc
or
mov
push
sbb
pop
cwtl
inc
in
outsl
loop
push
inc
lods
sub
jmp
mov
pop
stos
in
jecxz
loopne
or
pop
mov
das
mov
nop
in
lods
popf
sarl
hlt
xchg
push
inc
std
mov
jb
aad
mov
sub
jmp
shlb
cli
push
xchg
les
cmc
or
mov
and
mov
jns
inc
or
pusha
imul
mov
js
dec
pop
sbb
xchg
addr16
or
das
jmp
or
mov
ss
cmpsb
out
push
ss
inc
mov
adc
jmp
jb
jg
rcrl
adc
pop
pop
repnz
sbb
lcall
dec
jo
mov
mov
pop
adc
imul
mov
lods
popf
sbb
shrl
es
xchg
add
add
std
push
fistl
test
mov
and
jne
sbb
stos
mov
shrb
call
mov
mov
ret
adc
mov
in
adc
ror
mov
adc
mov
and
pushf
loop
arpl
push
dec
movsl
movsl
sbbb
mov
dec
inc
into
daa
adc
mov
cld
xor
inc
sbb
jae
ja
shlw
rorb
and
push
add
icebp
iret
push
lret
mov
fisttpl
dec
push
lock
orl
and
jle
push
psrad
mov
test
sub
lret
nop
je
fldl2e
hlt
push
mov
daa
cmp
pop
xor
sub
inc
repz
clc
insl
pop
push
cli
add
jle
mov
dec
fidivrs
test
mov
out
subl
inc
aad
stos
inc
call
sub
fnstenv
pop
decl
loope
mov
outsl
push
stos
mov
fld
roll
jmp
push
adc
pop
jb
pop
enter
out
leave
cmp
jl
xchg
add
mov
add
aad
inc
in
shrb
out
cmc
xor
xchg
ret
and
shrb
and
dec
imul
popf
sbb
ja
mov
inc
or
lods
adc
pop
incb
dec
rcrb
fucomip
fnstsw
sub
mov
loopne
mov
adc
ds
fadds
mov
clc
lcall
pop
cmp
pop
mov
pop
loopne
mov
sbbb
jecxz
add
pop
dec
cs
xchg
push
js
out
lods
aaa
or
pop
cmp
or
lret
arpl
lcall
or
loop
insb
gs
and
bound
movsl
dec
dec
pop
les
imul
rcll
bnd
sahf
ss
sub
insl
add
imul
push
jmp
and
pop
movsl
jno
cs
movsb
xchg
mov
fstpl
dec
ljmp
add
xchg
jle
test
enter
clc
mov
mov
xchg
pusha
mov
sub
ds
and
popa
add
loop
and
ljmp
sbb
jb
push
scas
stos
pop
sbb
pop
insl
jns
addb
loopne
adc
lahf
jle
loopne
jmp
aam
add
inc
mov
in
xchg
jo
je
shr
lods
mull
xchg
nop
sub
inc
sbb
ret
or
cmp
into
outsb
ljmp
sahf
mov
cltd
jmp
fwait
sahf
push
push
std
cli
pop
call
mov
xchg
mov
or
sarl
jno
ds
scas
iret
adc
stos
inc
mov
push
jb
sarl
arpl
mov
shrb
sub
mov
pop
fsubrl
mov
negb
mov
jb
je
insb
lea
mov
xchg
mov
mov
mov
adc
fwait
xchg
mov
outsb
jae
and
dec
ja
adc
sbb
pusha
in
dec
inc
add
inc
mov
je
mov
mov
daa
loope
mov
cmpsb
sub
or
sbb
test
mov
xchg
xchg
jne
hlt
lods
xor
cmp
aaa
pop
jno
jg
jmp
pop
sbb
dec
adc
cmp
enter
xchg
popa
add
fldcw
addb
sub
mov
adc
divl
je
gs
mov
mov
mov
leave
je
icebp
jle
dec
push
inc
movsb
pop
fiadds
push
sbb
sbb
filds
aad
xor
adc
scas
je
aas
inc
popl
int
lahf
push
push
xor
sbb
mov
xchg
je
dec
inc
popa
jnp
lahf
sahf
pop
push
sti
aas
push
pandn
inc
sbbl
scas
data16
inc
int3
push
addr16
mov
js
jge
inc
cld
or
mov
or
outsl
out
shrl
sub
data16
gs
xchg
in
cmp
xchg
aaa
dec
xor
ds
sahf
out
dec
add
int
cmp
lcall
into
push
cmpsl
pop
cmpb
testb
aaa
mov
mov
dec
inc
daa
mov
ret
mov
ljmp
and
jle
cmc
mov
leave
out
fnstenv
mov
mov
fdivrs
or
inc
out
jno
xor
inc
mov
int3
push
mov
loopne
enter
push
or
cli
ficomps
mov
or
shlb
je
fldt
ret
xor
pop
pop
xor
adc
push
js
dec
add
xorl
sub
andl
add
imul
rol
pop
outsb
in
rolb
shll
fwait
dec
fucomp
mov
repz
cmp
ret
pop
aas
jle
fwait
adc
cmp
add
inc
lahf
rol
jl
and
movsl
mov
loop
cmp
imul
stos
cs
jp
mov
mov
mov
adcl
xchg
inc
push
pop
mov
and
lds
mov
dec
dec
pop
and
sub
je
adc
lret
pusha
in
jecxz
dec
sbb
pop
xchg
and
shrl
xor
sbb
adc
outsl
sbb
mov
dec
adcl
ljmp
jecxz
movsl
inc
or
es
loope
jbe
push
mov
pop
in
mov
push
mov
xchg
sbb
jns
xor
jmp
jnp
push
mov
shr
jl
outsb
pop
js
insl
sbb
dec
arpl
mov
push
jns
movnti
cmp
mov
roll
add
jbe
sub
xor
inc
mov
pop
pusha
rclb
or
lds
mov
dec
ljmp
icebp
dec
jecxz
cmp
mov
iret
lock
inc
shll
jg
test
fsubs
lcall
int
in
xor
cmpsb
sbb
sub
dec
scas
fistpll
imul
movsb
dec
inc
mov
mov
cld
xchg
ret
sbb
sbb
mov
rolb
and
movswl
xchg
adc
jmp
jae
push
lcall
mov
dec
aad
or
dec
insl
ljmp
aam
iret
jmp
ret
pop
std
dec
push
fbstp
adc
sbb
jl
xchg
dec
in
sub
and
rcrl
loopne
jle,pt
add
sbb
push
lea
out
test
push
aad
fcmovu
sbb
push
dec
pop
xchg
xlat
xchg
fistps
out
outsl
push
cmp
ss
mov
into
repnz
and
lgs
jmp
movsl
push
pop
into
aam
out
stc
and
cs
clc
inc
dec
push
test
adc
movsb
loop
movsl
and
jg
or
mov
mov
inc
mov
sub
mov
mov
ficoml
fbstp
iret
add
mov
inc
and
mul
add
adc
sbb
cwtl
dec
dec
push
jno
cmpsl
push
bound
and
xor
xlat
subl
jnp
push
mov
fs
int
lahf
adc
dec
scas
and
pop
mov
sub
lock
stos
mov
cmp
jae
and
orb
mov
in
loope
imul
add
inc
icebp
decb
push
and
rol
add
or
inc
adc
movsl
push
icebp
or
dec
xchg
sub
inc
mov
dec
les
inc
ss
movsl
jecxz
in
or
xor
scas
imul
insb
and
iret
mov
test
mov
pop
pop
das
and
xor
mov
mov
and
push
dec
iret
cmp
push
xor
jo
enter
add
add
cmp
test
ds
add
mov
sub
pop
ret
cltd
fs
fcoml
mov
or
stos
xlat
pop
fs
das
movsb
aas
mov
out
iret
loop
mov
jp
mov
sahf
jle
cmpsl
cmp
or
std
xchg
iret
or
test
out
arpl
lcall
inc
out
out
sub
sbb
sbb
scas
xchg
jecxz
xchg
pop
aam
push
mov
mov
or
call
pop
mov
sbb
ja
xor
std
inc
subl
jb
sub
bound
push
inc
pop
or
or
sbb
imul
cld
jmp
mov
inc
pop
add
cmp
pop
jnp
push
mov
mov
mov
jmp
shrl
clc
lcall
sbb
pop
arpl
aaa
loopne
cld
clc
popw
jbe
xor
mov
es
xchg
pop
cmp
and
stos
subb
aaa
pop
mov
pop
les
jle
call
push
xchg
push
dec
rclb
imul
adc
xchg
xchg
dec
fdivl
mov
mov
jnp
nop
adc
rol
mov
insb
lahf
das
rorb
pop
and
push
fs
dec
mov
dec
push
cmp
add
inc
ret
mov
repnz
inc
sbb
push
rcll
inc
push
pop
into
push
jmp
sysenter
add
aaa
push
sub
pusha
shll
mov
jbe
jne
out
flds
int
into
adc
jae
out
scas
movsl
add
jl
adc
sti
xor
sbb
pop
ret
ret
hlt
jmp
dec
xchg
in
cmpsl
stos
outsb
push
and
out
imul
out
rcll
push
mov
jbe
je
push
out
es
sbb
pop
ja
xor
mov
cli
jbe
jmp
add
cmp
sub
mov
sbb
and
pop
stos
imul
mov
xor
or
inc
xlat
inc
mov
mov
test
in
out
loope
ss
ret
imul
out
aad
test
cli
data16
roll
sbb
aam
addl
rclb
push
test
nop
les
test
in
movl
sti
test
add
jb
xchg
lret
xor
sbb
sbb
push
jo
leave
paddw
mov
jne
test
fisubrs
mov
imul
sub
mov
cmp
and
out
xor
xlat
loopne
es
fidivrs
push
push
sti
ret
movb
adc
ficompl
dec
sub
insb
aas
xchg
mov
sub
pop
push
dec
icebp
mov
add
xchg
dec
stos
jl
mov
jp
or
push
or
cmp
negl
or
in
xchg
jg
mov
pusha
sub
inc
inc
push
aam
fsubrl
fstps
mov
mov
loop
lds
push
cmp
jmp
popf
bound
jmp
push
xchg
push
lods
test
sub
xor
mov
int3
rclb
imul
in
xor
inc
or
xor
sar
mov
lret
popa
imul
sahf
stos
mov
mov
sti
push
push
dec
sbb
sub
outsb
ret
arpl
xlat
sub
pop
mov
mov
divps
sub
mov
mov
insl
cmp
fucom
lret
ds
lods
ficomps
shlb
add
test
in
cmp
insb
adc
in
inc
inc
outsl
sbb
cmpsb
and
push
fldl
mov
xorl
dec
push
adc
push
mov
iret
test
pop
ds
cmp
dec
jmp
mov
leave
mov
addr16
repz
hlt
mov
movsl
jno
inc
stos
mov
enter
loope
out
pop
xchg
and
in
mov
pop
stos
cmp
dec
xchg
adc
jne
mov
push
cmp
add
orl
lret
xor
mov
mov
adc
fstps
cmc
sub
add
arpl
psubb
popf
das
xchg
xchg
pop
dec
xchg
jmp
jge
mov
out
das
mov
jecxz
jg
fsubrs
jbe
frstor
xor
lea
cmp
rorl
mov
jbe
mulb
cmpsl
loopne
mov
orl
add
shll
and
sbb
filds
pop
or
outsl
jp
and
test
imul
out
push
cmc
outsb
mov
mov
add
adc
adcl
test
dec
add
insb
xlat
xor
fdivrs
cmpsl
clc
xchg
aaa
dec
push
mov
mov
lds
cmp
pop
in
imul
jae
inc
sub
scas
xchg
pop
xor
mov
sbb
cmp
les
or
add
leave
jle
js
rcrb
inc
test
iret
add
ret
mov
mov
or
add
test
out
cmp
je
pop
mov
lods
in
daa
testb
rolb
mov
call
movsl
movaps
je
adc
data16
mov
xchg
dec
fadds
cmpsb
addr16
stc
xchg
cmpsl
insb
shll
sub
or
or
xor
add
pop
flds
push
jle
pop
jns
ja
push
mov
add
add
inc
rclb
push
fisubrl
mov
fdivl
dec
cld
imul
xor
push
and
ret
add
ss
shl
jge
rorl
push
addl
or
jle
popf
cli
js
add
cltd
add
mov
xor
std
fwait
xor
push
stc
outsb
lods
jmp
xchg
loopne
je
test
jp
or
ljmp
mov
xchg
es
mov
mov
shll
rcrl
add
and
mov
outsb
pushf
fisttps
bound
dec
jmp
fistl
xor
jmp
xlat
or
push
or
popf
int
aas
jne
sub
add
sbb
lcall
out
push
aad
sub
jbe
inc
and
insl
cmp
xchg
mov
cmp
lret
sbb
pop
call
out
add
aaa
dec
or
dec
hlt
xchg
jmp
mov
or
jl
dec
ss
lods
inc
movsl
add
scas
jne
and
lcall
add
clc
mov
inc
fists
call
bound
iret
cmp
stos
ja
jb
jne
int3
mov
insl
xchg
rcl
test
xor
sub
aas
popf
jbe
out
push
aaa
stos
fiadds
movb
fdivl
jmp
pop
pop
xor
push
enter
inc
push
fwait
mov
push
shrb
and
add
adc
mov
cmp
loopne
ret
loop
cmpsl
lods
xor
or
mov
jae
jns
rclb
call
mull
jle
andl
dec
mov
icebp
pusha
imul
mov
lods
pop
lock
leave
jg
push
jae
inc
mov
cmp
jns
cmp
cmp
jno
sti
push
pop
mov
movsb
int3
add
mov
xchg
pushf
pushw
movsb
aaa
int
xchg
or
sbb
mov
inc
aaa
jge
inc
paddsw
in
mov
mov
push
dec
ja
xor
add
xchg
push
mov
xchg
jbe
pop
sbb
mov
stos
mov
jns
dec
and
roll
jnp
dec
les
adc
sub
push
fs
mov
cmp
cltd
out
sti
jo
pop
pop
in
xor
cli
les
imul
data16
lock
call
dec
rcrl
jo
repnz
or
frstor
xchg
pop
add
jb
sbb
and
aam
out
clc
sub
xor
bound
pop
sbb
jne
cmc
jg
jnp
jecxz
jne
pop
sbb
dec
fs
ret
fnsave
cvtps2pi
and
mov
aad
in
or
jbe
std
addr16
cmp
pusha
orb
loop
rcl
push
jp
jnp,pt
or
xchg
fisubl
mov
fldenv
push
out
or
adc
faddl
sbbl
hlt
in
mov
mov
dec
mov
dec
loop
mov
adc
jecxz
add
aam
xor
fstpt
repz
jl
and
mov
inc
filds
pop
ljmp
sub
cwtl
jmp
inc
pop
and
aaa
adc
rcll
out
les
repz
jg
mov
lock
inc
lcall
lret
push
jbe
xchg
loope
cs
mov
js
out
cmp
jnp
sahf
shlb
je
jae
leave
fisttpll
mov
repnz
mov
mov
cmp
lret
adc
sti
adc
imul
mov
shlb
cmp
add
mov
fsubrs
push
dec
ljmp
movsl
daa
mov
dec
push
sbb
cmpl
cmp
stc
aaa
pop
insb
adcl
mov
mov
pslld
loope
loopne
and
push
dec
addl
loop
jbe
mov
test
mov
mov
push
mov
pushf
cmc
mov
dec
test
lret
outsl
mov
aad
push
mov
add
push
add
and
aaa
add
stc
cmpsb
popf
mov
xor
data16
pop
xor
jecxz
hlt
mov
pop
adc
pop
sub
push
inc
roll
loope
test
mov
cmc
lret
dec
push
mov
je
pop
mov
addr16
in
fcomi
popl
inc
imul
shll
outsl
test
lcall
outsl
dec
pop
cmpsl
inc
test
or
adc
and
shl
call
mov
lret
ds
adc
into
and
ljmp
cmpl
push
cld
les
add
test
daa
subb
imul
cmp
ret
aad
inc
popa
push
gs
loope
mov
stos
add
imul
insl
push
pushf
ja
dec
xchg
jns
add
push
loope
xchg
sub
pop
push
dec
std
dec
sub
mov
xchg
ret
or
mov
lahf
sbb
and
outsl
jbe
mov
aad
fadd
lock
add
inc
xchg
push
mov
vptestnmw
lcall
pminub
jb
inc
pop
jnp
dec
lret
xor
xor
pop
pop
inc
cli
ss
gs
and
xor
push
xor
cmp
popa
inc
cmpsb
stos
mov
cmp
ljmp
push
mov
pop
call
ffreep
xchg
pop
popf
pop
ss
pop
adc
das
push
ss
adc
add
aam
outsl
lret
rcl
ficomps
popa
add
les
mov
scas
enter
enter
jb,pn
push
bt
jecxz
movsb
shl
xchg
dec
mov
push
sbb
adc
in
shl
lcall
sub
xchg
jo
call
xor
fmuls
mov
jo
mov
sbb
mov
dec
or
into
jecxz
ss
inc
pop
add
add
xchg
dec
rorb
mov
pop
fcompl
adc
jno
mov
iret
cmp
xor
into
adc
or
sub
shll
mov
lcall
xor
je
add
mov
xlat
jle
fnstcw
or
jnp
mov
sbb
push
or
xchg
dec
push
test
repz
sub
lods
rcrb
popf
cli
xor
add
fcoml
lret
or
mov
mov
mov
pop
iret
add
stc
test
and
xlat
ss
flds
push
pop
jno
adc
ror
out
loope
xchg
xor
loope
push
mov
xor
push
jg
pop
lds
sarl
enter
ss
ret
movsl
jo
xor
into
add
pusha
jne
xchg
dec
pop
mov
movsl
cmp
test
rolb
pop
mov
movl
shl
sti
add
xor
sbb
dec
shll
mov
addl
xchg
push
in
pop
or
int3
ret
call
icebp
movsl
cmp
dec
pop
imul
mov
int3
sub
mov
xchg
dec
lds
sbb
pop
adc
fwait
sti
js
rcrb
add
rcr
sbb
sub
andb
mov
cld
sbb
cmp
stos
stos
sub
mov
adc
add
into
push
imul
cmp
xchg
sub
push
push
aaa
mov
mov
jle
push
sbb
hlt
gs
mov
mov
mov
mov
jmp
push
repnz
jnp
xchg
mov
mov
into
test
sub
mov
push
lcall
dec
iret
push
mov
or
cmp
mov
xchg
push
xchg
xchg
push
ljmp
leave
pop
cs
iret
or
push
in
mov
push
out
pop
mov
les
stos
cmp
out
clc
inc
adc
xor
les
pop
outsb
test
add
outsb
dec
inc
push
and
cmpsl
dec
in
sarb
fildl
imul
les
pop
int3
jae
push
movl
cmp
test
mov
rcll
mov
mov
xor
loop
pop
int3
cmp
cmp
pop
pop
out
test
adc
push
mov
fldcw
xchg
stc
jp
into
fnsave
cmp
pop
rcl
nop
popa
test
rcrb
inc
xor
or
xchg
jnp
leave
and
pop
adc
inc
inc
sahf
insb
iret
dec
shll
adc
or
fisttpl
outsb
jb
push
icebp
outsb
cmp
dec
and
nop
push
icebp
aad
push
and
inc
jecxz
fdivrl
jg
mov
lahf
cmc
cmp
sub
or
test
mov
cmpsb
test
sbb
pop
decb
test
xchg
mov
aaa
mov
out
movsb
mov
inc
arpl
mov
iret
ret
sbb
arpl
orl
lea
mov
bound
jbe
arpl
push
in
jmp
mov
sub
xor
mov
insb
jns
jb
xchg
das
pop
rorl
sbb
cmp
adc
jne
adc
idivl
in
mov
cmp
adc
cmp
fnsave
shrl
in
enter
sub
or
jmp
dec
insl
mov
out
inc
lock
daa
hlt
cmp
or
cmpb
add
push
sub
pushf
xchg
dec
imul
pop
and
xchg
jno
lcall
and
pop
andb
in
xor
lret
popf
or
adc
adc
cmc
lret
and
out
scas
push
lods
lods
and
clc
sarl
cld
movsb
mov
mov
pop
sbb
and
mov
neg
rcrl
mov
into
nop
xor
lret
lret
fmull
ss
jl
cmp
enter
sub
dec
cwtl
pop
mov
gs
push
shlb
or
arpl
mov
mov
in
clc
aad
ret
movsb
sbb
repnz
fisubrl
adc
pop
out
or
enter
popa
pop
aaa
sbb
ret
mov
push
cmpsb
push
push
push
cmp
gs
lods
cmp
sbb
out
xor
add
stc
jmp
pop
popf
arpl
xor
pop
loop
lods
cwtl
inc
adc
outsl
pop
adc
addl
adc
xor
in
sarl
jne
adc
sub
lcall
aam
jnp
xchg
bound
fildl
cltd
xlat
daa
sbb
mov
jbe
aam
cs
hlt
or
into
mov
adc
jo
call
cltd
fisttpll
mov
testl
and
push
hlt
adc
fstpl
sbb
cmp
xchg
std
add
movsb
dec
faddl
out
xchg
stos
fwait
lcall
sbb
pop
ret
fwait
cmp
out
mov
test
inc
push
lea
ss
loop
sbb
or
gs
mov
dec
div
sub
ja
mov
daa
pop
jbe
cmp
jo
rcrl
sbb
scas
ss
int3
ss
sub
out
fistpll
ficoms
lcallw
mov
xlat
cmpsb
int
lock
or
lods
jo
aad
adc
imul
mov
subl
and
mov
data16
icebp
std
rcrl
sbbl
dec
mov
mov
lret
and
inc
pop
ljmp
neg
jg
fprem1
movsl
fst
aaa
xor
xorb
cld
in
movsl
sbb
inc
insl
mov
mov
jbe
je
adc
jae
sub
lret
mov
daa
jecxz
out
xor
out
ds
stos
data16
out
adcb
out
shlb
cli
dec
sbb
adc
mov
xor
fwait
ret
push
cmp
inc
inc
or
loope
mov
inc
jl
jb
icebp
shr
pusha
xchg
loopne
and
xorl
dec
or
xchg
lea
mov
mov
and
jmp
or
push
data16
jle
push
dec
popa
fsubrl
mov
jmp
or
sbb
test
mov
sbb
mov
pop
sahf
lcall
and
mov
dec
mov
sbbl
mov
or
adc
sbb
xchg
and
cmp
mov
lds
iret
mov
cmp
lahf
xor
mov
sub
inc
cmpsl
decb
cs
cmp
xor
ja
xchg
stos
aas
cmpl
or
aad
inc
xchg
sti
xor
xchg
inc
aam
stc
push
cmp
dec
mov
call
imul
das
cld
push
cmp
mov
mov
mov
js
popf
cs
mov
adc
fdivrs
inc
mov
cmp
es
push
sbb
mov
jo
fldt
jnp
gs
xor
mov
adc
jnp
out
sarl
rorb
lahf
push
insl
lret
lock
or
jg
or
lahf
dec
lock
movsb
mov
sbb
cmp
ficompl
sbb
out
or
shll
jmp
xor
push
dec
or
jle
xchg
ficompl
lea
mov
sbb
push
or
dec
and
rclb
jae
outsb
sbb
pop
xchg
mov
inc
movsl
jg
sub
int3
test
into
loopne
pushf
nop
adc
ffreep
add
insb
xchg
shll
xor
call
push
fldcw
mov
mov
jg
rcrl
cmovge
outsb
bsr
cmp
adc
inc
xor
adc
mov
aaa
cld
lret
inc
pop
ds
jle
sarb
or
or
fsubrs
in
or
dec
mov
xchg
scas
add
cmpsl
xchg
pop
add
sub
cli
faddp
rcrl
loop
push
mov
sub
scas
fstpl
cmp
push
add
imul
lea
push
pop
into
out
ss
push
push
lcall
jbe
jns
nop
xchg
mov
popl
push
sar
sbb
out
pop
test
xchg
add
pusha
inc
outsl
fcmovu
push
cltd
and
dec
inc
jmp
sbb
rcr
int3
pop
shrb
dec
je
in
cmpsb
inc
push
push
add
aaa
pop
or
push
ret
mov
test
into
push
test
mov
dec
add
test
lret
bnd
adc
pop
mov
shll
mov
repnz
out
ucomiss
call
adc
xchg
jp
pushf
jg
push
ss
xor
jmp
and
scas
aam
aaa
jecxz
test
lods
mov
lahf
mov
adc
outsb
insl
mov
jl
mov
dec
mov
jmp
push
nop
jbe
in
cmpsl
mov
cmp
dec
cmp
popa
inc
xor
rolb
in
int3
jecxz
icebp
cmpsl
rolb
pop
loope
fdivl
sbb
int
test
leave
jnp
es
in
js
mov
push
hlt
scas
gs
mov
cmp
push
mov
insl
stos
test
push
and
in
jg
pop
jno
jp
adc
xlat
sti
xor
pop
adc
sbb
fsubrl
xor
adc
xchg
cmp
repz
mov
mov
es
test
push
mov
aaa
or
push
xor
sub
dec
mov
clc
cltd
outsb
xor
nop
push
lcall
push
pop
roll
sbb
adc
jle
imul
push
aad
pop
or
test
mov
lahf
sahf
sub
je
cmp
lods
inc
dec
xchg
lods
ret
pop
jae
dec
jnp
lds
dec
cmc
jo
add
mov
lret
dec
push
jp
xchg
xchg
pop
lcall
les
fcmovnu
rclb
dec
addr16
ljmp
out
cwtl
mov
xchg
mov
jne
movl
dec
inc
mov
push
sub
mov
cmp
out
mov
cmp
pop
mov
inc
push
and
dec
out
or
loopew
into
mov
jmp
jnp
ret
add
out
jne
sub
test
fidivl
test
out
out
mov
jg
imul
test
or
and
cltd
int
fistps
repnz
xchg
shl
loopne
aad
jmp
mov
scas
push
push
inc
mov
lahf
cltd
scas
scas
cli
adc
adc
mov
xlat
lea
dec
das
xor
and
js
out
cmp
add
mov
pop
xor
xlat
xchg
mov
shll
iret
test
push
mov
daa
add
sub
mov
leave
pop
movsl
xor
adc
lret
aaa
push
dec
lods
mov
add
in
sbb
adc
inc
push
mov
sub
ds
sbb
sub
push
adc
js
faddl
jno
imull
mov
test
jne
insb
or
gs
dec
mov
adc
mov
push
adc
lods
fldt
push
dec
mov
push
jb
sub
imul
xchg
notrack
call
scas
adc
jmp
call
std
sub
shlb
push
sub
dec
cs
add
xor
fldt
aas
loopne
mov
into
mov
cltd
jne
shlb
or
rsm
dec
andl
fstps
xchg
sub
test
cmp
push
test
cmp
adc
gs
dec
xor
addr16
add
sub
repz
xchg
unpckhps
mov
jecxz
dec
push
cld
or
mov
xor
mov
dec
cmp
loopne
in
mov
xchg
enter
or
insl
dec
loopne
mov
imul
arpl
jae
leave
pop
lcall
cltd
cmp
leave
sbb
js
xor
cld
out
adc
push
sbb
insl
popf
idivl
mov
fdivs
loop
sahf
imulb
lods
or
popa
xor
mov
cli
popf
lds
ljmp
adc
aas
js
xchg
push
sbb
aad
xlat
int3
test
dec
add
jo
out
dec
mov
faddp
mov
loopne
int
pop
xor
cmp
les
sub
mov
ret
enter
mov
idivb
aaa
push
mov
in
out
leave
push
mov
dec
xchg
cmp
xor
push
xor
aam
mov
lret
xchg
push
test
dec
or
mov
add
shr
mov
add
sub
mov
gs
push
push
push
js
cmpsl
cmp
lret
sbb
loope,pt
cmp
les
mov
mov
lret
mov
sub
cld
pop
adc
dec
adc
mov
jbe
add
cs
ret
scas
mov
out
cmpsb
mov
stos
push
jnp
push
cmpsb
sbb
pop
test
jle
cmp
pop
add
cmp
idiv
mov
mov
cmp
and
mov
jae
shll
lods
rorb
rcr
mov
mov
cmp
scas
xor
pushf
jae
fnsave
rorl
shll
mov
add
add
pop
pushl
xchg
into
add
rcrb
outsb
inc
shll
insb
inc
test
mov
mov
inc
es
sbb
popa
mov
repz
lret
add
ds
xchg
es
lds
loop
aaa
and
imul
shrl
inc
in
mov
sub
cmp
jns
push
jmp
dec
pop
and
rcr
mov
movsb
or
cltd
icebp
adc
xchg
adc
pushf
mov
stc
mov
inc
sbb
add
cmp
data16
jg
dec
outsb
arpl
icebp
ss
js
mov
mov
sub
cmp
dec
mov
or
shr
ret
insb
dec
or
sbb
mov
adc
jl
mov
xchg
jl
int
jmp
mov
int
hlt
insb
jmp
mov
mov
andb
mov
mov
push
and
iret
int
pop
mov
daa
xchg
sbb
mov
insl
cmp
cld
stos
pop
jl
cmpsb
ficomps
test
inc
push
in
sti
add
jns
add
hlt
int3
or
xor
in
xor
dec
das
push
push
test
mov
daa
out
dec
out
jmp
adc
push
ficoml
lret
dec
sbb
or
int
inc
shlb
xchg
jb
adc
outsl
popf
aaa
mov
fadd
mov
mov
and
inc
insb
stc
lret
cld
mov
out
mov
sub
imul
xchg
jnp
scas
and
roll
mov
das
inc
mov
cmp
imul
jl
repnz
insb
xchg
aas
sti
dec
mov
xor
add
inc
rcr
adc
dec
and
das
xchg
fs
push
mov
xor
push
je
push
dec
fs
cmp
lret
jge
pusha
mov
pop
xchg
aaa
addr16
dec
popa
adc
test
push
pop
ljmp
mov
movsb
mov
shlb
call
inc
push
sbb
dec
movsl
sahf
xor
sub
out
and
mov
mov
ds
mov
push
and
hlt
les
hlt
push
sbb
lea
sbb
inc
cmc
jae
test
aad
in
inc
call
fsub
adc
icebp
cmc
and
xor
mov
mov
cmp
imul
and
bound
sbb
adc
jmp
or
shll
add
push
cmp
pushf
sbb
sbb
dec
push
fcompl
inc
rorb
xchg
fstps
call
into
xor
hlt
dec
inc
adc
xchg
sbb
or
ret
pop
jo
mov
jp
shrb
movsb
mov
sub
notb
lahf
mov
stos
nop
fs
inc
sub
movsl
scas
mulb
lret
pop
lock
js
push
dec
mov
inc
mov
dec
loopne
jns
cli
dec
jl
xchg
cmp
push
ljmp
repz
sbb
cs
subl
mov
sbb
cmp
enter
inc
repz
xchg
sub
loope
add
shrb
adc
pop
add
xchg
ret
aam
cli
fistl
ljmp
inc
jae
lret
lcall
cli
inc
out
lcall
movsl
movsl
popf
popa
mov
push
dec
stos
pop
mov
or
mov
mov
mov
das
add
pushl
test
push
call
loope
es
sarb
dec
test
and
jbe
jge
loope
pop
add
mov
pusha
orl
daa
shlb
aas
push
cmpl
and
call
mov
sarl
mov
or
mov
sbb
push
scas
lahf
push
cmc
sbbl
inc
lds
mov
in
or
sbb
stc
lret
xchg
xor
pop
cmp
jbe
les
fidivrs
movsb
xor
les
push
xor
mov
ja
out
fsubs
pop
xchg
xchg
sti
lcall
cmp
jae
xor
rcrl
das
rorl
loopne
jp
xchg
add
int
ds
lods
jne
cs
int
cmpsl
xchg
mov
fcompl
pop
out
sbb
cs
adc
sbb
push
pop
lea
fs
adc
nop
and
mov
push
mov
sub
sbb
decl
push
mov
and
xchg
rorl
mov
sbb
push
xor
cmp
push
push
pop
sub
or
ret
sub
aaa
xor
popa
jp
fucomp
out
addr16
lret
mov
push
insl
pop
xor
fwait
imul
fsubr
xchg
cmp
stos
cmc
popa
data16
sbb
out
xchg
cmpsl
xor
adc
sahf
pusha
aaa
cmp
hlt
sub
or
sub
push
mov
cmp
xchg
loopne
add
fstpt
fwait
adc
imul
fidivrs
call
mov
insl
orb
or
clc
mov
and
ret
stos
movsl
loope
push
or
and
nop
fucomi
add
xor
add
mov
add
sbb
ja
push
scas
js
xor
adc
and
push
xchg
mov
adc
push
xchg
and
std
cltd
fldenv
sub
xchg
xor
inc
enter
pusha
ret
and
testl
mov
xor
adc
jae
jmp
mov
mov
hlt
arpl
lcall
int3
adc
ds
sbb
repz
mov
aaa
jb
add
dec
jne
add
push
div
push
addr16
xor
dec
cli
jecxz
mov
rcrl
or
out
mov
jle
call
push
adc
es
add
jno
rcrb
ss
int
out
pop
outsl
das
fstps
insl
jo
scas
xchg
out
lret
faddl
pop
mov
jmp
push
or
ss
loope
icebp
add
enter
out
mov
or
adc
sbb
je
out
outsb
sahf
pop
pop
sub
test
fstps
ljmp
mov
xchg
cwtl
lods
pop
pop
fistpll
repnz
mov
popa
clc
xchg
jns
cmc
movsb
lahf
inc
jbe
add
sti
nop
mov
push
xchg
fdivrl
ret
ss
loopne
rcrb
push
incb
sarl
je
jg
lret
inc
mov
sbb
adc
dec
or
mov
stos
popa
push
pusha
loope
pop
icebp
xorps
sbb
loopne
dec
xchg
mov
mov
mov
lods
dec
int3
fnstcw
imul
ret
jbe
pop
lock
add
mov
int3
jle
jg
jge
stc
inc
cli
out
xor
mov
sahf
inc
sti
sub
pop
or
scas
xchg
arpl
dec
out
cmpsb
sbb
push
and
wrmsr
push
mov
adc
and
sbb
add
lcall
dec
insb
sbb
mov
cmp
scas
pusha
xchg
push
xor
mov
cmpb
and
mov
in
outsl
mov
pop
jbe
in
shll
cmpsl
cwtl
insb
popa
or
and
add
repz
mov
xor
fisubl
fisubrs
out
cltd
push
or
sub
subb
inc
jmp
add
loopne
adc
inc
lcall
dec
test
jns
clc
adc
adc
sub
mov
push
pushf
lds
insb
cmpsb
lods
sarl
fidivrl
sbb
push
jo
cmp
adc
mov
aad
not
ljmp
mov
add
test
out
out
and
lods
mov
xchg
lods
fldenv
fdivrl
mov
enter
push
imul
cmc
adc
cmp
call
mov
sbb
xor
ljmp
out
insb
cmp
jp
mov
insb
push
scas
adc
subb
xor
pop
movsb
cmpsb
xchg
xchg
xchg
stc
stc
mov
mov
fsts
sbb
js
bound
mov
cmp
lods
xchg
loopne
out
out
adc
adc
shll
add
icebp
repz
mov
pop
aad
scas
pushf
lods
fcoml
cmp
stos
lcall
dec
movsl
fwait
jp
imul
std
lea
lock
movsl
cmp
into
dec
jo
mov
xor
test
arpl
push
fimuls
dec
mulb
or
and
fiaddl
movl
clc
mov
pusha
add
enter
dec
mov
repz
scas
xor
xlat
mov
lcall
mov
push
jp
add
repnz
lods
push
and
xchg
rcll
ss
cmp
cmp
jb
add
xor
or
xchg
daa
and
cld
call
hlt
aam
leave
inc
lock
mov
add
adc
out
call
sbb
add
cmp
jnp
aaa
in
cmp
sbb
pop
add
lods
inc
sbb
movsb
cmpl
loopne
iret
inc
pop
pop
aam
popf
jno
insl
dec
mov
pushf
sbb
push
dec
icebp
ret
lds
mov
in
jo
jle
outsl
vunpcklps
fdivl
dec
lods
fcomps
movsb
shll
jns
jb
cmpl
outsw
cmpsb
ja
inc
adc
enter
je
mov
sbbb
mov
mov
or
inc
loop
mov
xlat
jl
into
inc
sbb
jnp
cld
mov
shll
mov
push
addr16
icebp
stos
mov
cli
ret
into
scas
inc
out
movsb
fcom
pop
adc
jo
xchg
shr
rorb
hlt
mov
out
push
insb
sbb
sbb
and
adc
loope
dec
or
pop
pusha
lods
dec
fists
retw
out
into
jg
add
cmpsl
jnp
pop
mov
adc
xchg
or
inc
in
pop
mov
pusha
sti
leave
mov
ljmp
pop
fdivl
push
out
mov
test
add
scas
jne
jbe
mov
push
inc
sub
pop
pusha
add
nop
js
js
and
imul
cmp
subl
bound
push
loopne
jmp
sub
andb
imulb
pop
mov
out
mov
xchg
jo
sbb
aad
sbbl
xor
icebp
cld
mov
packssdw
sbb
lds
pop
out
data16
xlat
mov
xor
jl
jnp
mov
and
bound
leave
push
cwtl
mov
jnp
inc
hlt
inc
xchg
sarb
mov
stc
mov
xchg
or
and
add
stos
lods
rol
aaa
sub
daa
xchg
push
mov
sarb
mov
outsb
adc
movsb
fwait
sbb
fistpll
aas
idivl
or
mov
les
lds
xor
dec
out
fcomps
sbb
sarl
ds
xchg
push
ret
mov
das
in
mov
into
shr
adcb
mov
ret
xor
mov
nop
nop
add
push
inc
mov
fistps
sbb
jno
xor
mov
sti
mov
jl
pop
mov
loopne
xor
push
mov
and
jnp
sub
aad
mov
inc
dec
xor
jne
push
push
cmp
inc
mulb
push
imul
xor
pop
inc
ljmp
or
mov
lcall
xchg
nop
imul
fstpt
addr16
in
enter
adc
fldl
dec
repz
out
pop
xor
sti
stos
pusha
sub
mov
inc
lcall
rcrl
or
cmp
and
jmp
in
ficoms
xor
enter
call
push
pop
push
jns
popa
cmp
push
push
xchg
cmp
sbb
hlt
shll
xchg
pushf
sarl
shll
jns
sbb
in
sub
scas
sub
imul
hlt
push
mov
icebp
sbb
or
out
lret
or
jmp
out
pop
jg
mov
shll
push
test
imul
push
leave
xor
movsb
out
push
sbb
jle
js
int
roll
out
les
adc
daa
dec
mov
fcompl
sub
gs
push
leave
xchg
dec
aas
cmp
sub
push
push
sub
mov
jle
push
in
push
or
pop
jo
ret
jbe
sbb
cmp
nop
mov
dec
cmp
es
dec
cwtl
rolb
inc
xlat
leave
inc
adc
loope
add
mov
insb
mov
aad
inc
xchg
gs
push
push
fs
push
loope
mov
mov
lds
or
and
lret
cmp
adc
aaa
sbb
jne
repz
loop
xchg
mov
mov
or
in
icebp
mov
or
lahf
adc
fcmove
and
mov
jo
mov
sub
add
or
movsl
ljmp
ss
movsb
in
lock
out
nop
cmp
dec
jbe
aas
les
and
test
lret
mov
stc
insb
imull
rorl
rcll
cs
push
push
data16
je
add
cli
push
cmp
xchg
stc
out
repz
scas
sbb
xor
inc
and
push
dec
push
or
sub
psubsw
jge
lahf
pushf
mov
sarb
test
add
negb
xchg
adc
pop
sbb
and
hlt
adc
nop
inc
mov
xor
xchg
mov
clc
cmp
nop
roll
add
pop
addb
cmp
cmp
insb
fnstsw
jp
insl
sbb
loopne
jb
mov
mov
jecxz
mov
cli
ffree
cltd
xchg
mov
adc
fucomip
add
inc
dec
stos
je
lcall
lahf
daa
imul
mov
fdivrp
cwtl
fdivrs
sbb
loope
add
add
ret
pushf
rcrl
cmp
lret
js
out
push
push
push
mov
fiadds
mov
cmpsl
mov
ror
mov
leave
jg
cmp
sub
jmp
popa
mov
movsl
dec
gs
push
sub
mov
xor
xchg
cs
cmc
mov
jg
lcall
or
aam
xor
icebp
jbe
push
pop
add
popf
push
push
cmc
dec
mov
mov
test
mov
gs
sbb
dec
or
aam
sbb
cmp
aad
in
fnstcw
push
xor
jp
sti
jnp
je
adc
mov
mov
or
adc
add
fscale
outsb
stos
inc
in
inc
lock
cmc
rorl
or
pop
or
adcb
push
push
or
aad
jge
mov
xor
dec
cmpsb
leave
mov
int
popf
jns
xor
scas
sub
adc
nop
adc
pop
dec
jne
sbb
xchg
filds
pop
sbb
jg
pop
mov
lea
mov
jo
ss
pusha
push
imul
std
mov
jl
shlb
lahf
push
lods
ja
repnz
xchg
ss
ret
cltd
and
rcrl
scas
pop
or
add
aad
insb
cmpsb
mov
movsl
sub
pop
and
push
mov
es
cld
pop
pop
and
or
mov
imul
dec
pop
fstl
popa
es
aas
mov
push
sahf
xchg
pushf
js
xchg
fldl
addr16
push
loope
fcomps
arpl
add
lds
roll
inc
imul
arpl
xchg
or
pop
sub
jnp
mov
jno
in
loopne
fidivrl
repnz
xor
shrl
jns
or
out
add
jmp
out
clc
fmuls
or
clc
mov
or
mov
data16
xor
out
call
clc
out
andb
inc
sbb
ret
sbb
enter
lods
cmp
dec
loop
ss
pop
pop
add
shll
and
mov
jnp
lds
xchg
adc
cmp
inc
dec
call
mov
insb
aam
iret
test
aas
in
adc
add
pusha
fwait
div
xchg
das
leave
push
sbb
inc
cltd
xorb
sub
cmpsb
popf
adc
mov
icebp
sbb
cli
or
sub
pop
push
sbb
in
inc
jg
mov
add
adc
sbb
adc
test
mov
js
aaa
jl
and
xchg
xchg
mov
rcr
fcoms
cmpsl
sarl
xchg
lcall
inc
fdivrl
fcomps
cmp
and
test
aaa
insl
mov
lret
dec
push
jnp
imul
or
push
les
pop
mov
jmp
mov
adc
mov
pminub
adc
mov
inc
fdivl
mov
icebp
sbb
subb
adc
mov
or
inc
aaa
xor
leave
adc
lods
mov
dec
inc
fwait
popf
push
adc
pavgb
aad
lahf
sub
in
adc
dec
add
sti
adc
mov
xchg
dec
mov
xchg
out
leave
pop
mov
add
bound
jbe
popf
xor
xchg
out
sub
int
lods
popa
jle
test
mov
stc
push
pop
movsl
inc
pop
call
xchg
stc
push
pop
popf
cltd
scas
and
xor
dec
pushl
in
loope
xor
sbb
jnp
dec
xor
xchg
and
lods
sarl
lea
xor
pop
cmpb
dec
into
arpl
xor
adc
inc
aam
stc
divl
pop
push
pop
push
popa
push
adc
clc
ret
push
cld
jge
pusha
mov
repnz
pop
divb
sub
sbb
imul
push
enter
mov
add
aas
popa
and
jge
sub
enter
inc
jo
ror
cmp
dec
jne
dec
mov
fcoms
jmp
adc
inc
decl
fistps
les
inc
or
int
sub
mov
push
jne
hlt
cmpsl
mov
lahf
imul
push
fisubs
repz
out
aas
mov
jns
nop
leave
shll
jo
in
leave
bnd
out
repnz
sub
mov
imul
fsubp
pop
jo
addr16
int3
adc
mov
push
mov
addb
xor
add
push
lea
aad
imul
cmpsb
addr16
shll
loop
std
fcmovne
adc
lods
push
ja
push
jle
dec
ljmp
loope
push
xchg
mov
repz
xor
push
or
xchg
shl
pop
aam
fcoml
jge
lock
std
sahf
cwtl
ljmp
xor
jg
shrl
add
adc
jmp
cmp
cmpsl
dec
mov
es
dec
xchg
fsubp
sbb
arpl
sub
add
lret
loop
scas
mov
dec
and
xor
daa
lea
mov
into
imul
dec
ss
xor
lock
aas
cmp
sbb
sub
pushf
jbe
movsb
xchg
rorb
mov
xor
filds
mov
xchg
xor
and
pop
inc
lcall
pop
std
or
ret
sub
inc
mov
loopne
je
or
mov
out
mov
out
push
jle
sub
aad
stos
stos
pushf
in
mov
adc
mov
mov
or
stos
inc
cmp
sub
fdiv
stos
mov
loop
aaa
xor
ret
lea
enter
sbb
mov
sbb
fsubrl
or
mull
in
inc
pop
xor
shl
mov
aad
aam
push
pop
fimuls
in
jno
and
adc
movsl
in
adc
stc
sub
mov
data16
xor
test
subb
push
and
xchg
repz
out
fsts
xor
sub
push
xor
mov
pop
fwait
movl
in
add
fs
jmp
adc
aas
sub
push
adc
or
aaa
sbb
sbb
mov
lahf
es
pop
cmp
insb
fisttpll
mov
mov
sub
mov
mov
int3
gs
js
shlb
in
in
stos
ds
jmp
outsl
xor
insb
mov
mov
push
pop
mov
mov
sbb
loope
jns
push
loope
xlat
jno
jne
or
dec
leave
sbb
xor
jbe
xchg
shlb
push
loope
push
inc
js
dec
in
pop
out
lock
and
sbb
jg
faddp
scas
mov
or
stc
movsl
jb
xchg
pop
gs
aaa
sub
ss
jns
das
fbld
popf
dec
inc
or
cld
cmpsl
fcoml
sti
dec
movsb
and
insl
outsb
aam
popa
test
adc
das
jl
sub
mov
fcom
dec
test
push
pop
icebp
xchg
sahf
shr
sbb
cmp
fistpl
add
add
pushl
inc
leave
pop
mov
movsl
jge
pop
xchg
mov
inc
cmc
imul
or
mov
xlat
enter
int3
pop
mov
sub
fs
mov
dec
or
fwait
sbb
data16
cmp
ljmp
cmpsl
les
sub
fdivrl
dec
test
xchg
arpl
repnz
ret
leave
cmpsb
lds
pusha
or
in
cmpsl
sti
jbe
pop
mov
xor
notb
divl
pusha
les
or
int3
mov
xor
outsb
adc
loope
xchg
jo
cmp
push
jl
in
mov
add
les
rorb
test
add
inc
test
inc
cltd
ret
lods
cmp
dec
mov
dec
es
imul
jg
out
xor
lock
dec
cmc
jle
movb
sub
cmp
sbb
mov
and
adc
das
or
jmp
stos
fldt
push
mov
push
jns
mov
push
test
icebp
in
fmull
loopne
pop
jge
dec
movb
hlt
pop
sbb
popf
sbb
test
inc
xlat
icebp
sub
mov
mov
rclb
xor
rcrb
pop
fstp
movsb
push
and
andb
mov
dec
pop
jns
js
lcall
dec
out
adc
in
dec
or
das
sub
in
push
dec
iret
mov
or
roll
pop
xchg
sub
mov
sub
fisttps
jae
push
jle
shlb
popf
pusha
xchg
sahf
test
xchg
mov
mov
cmpsl
data16
pop
ja
xor
lods
pop
mov
and
into
jle
mov
out
lcall
push
rorb
pop
aas
repz
adc
ret
dec
sub
xor
mov
push
mov
insb
xchg
or
notb
jb
pusha
into
dec
xchg
cmp
lods
psrlw
insl
mov
lret
dec
lret
pusha
ror
pop
xchg
movzbl
mov
xor
test
sub
pop
loopne
push
in
stc
ss
jge
or
cmp
adc
out
popf
leave
xchg
fadd
out
fcmovbe
int3
mov
rorb
adc
jnp
jne
cmp
adc
adc
adc
or
insl
ljmp
sbb
shrb
daa
and
aad
push
mov
cwtl
movsb
scas
sub
and
and
pop
ror
xor
jno
jbe
rorb
in
inc
out
xchg
bound
mov
xor
jmp
or
xor
popa
aad
xchg
cmc
push
pop
cmc
daa
adc
int
mov
jmp
push
push
or
gs
loopne
cld
or
add
xchg
mov
mov
cmp
sub
fsubl
repnz
xchg
or
push
movsl
ret
mov
int
repnz
popf
cmpsb
cs
or
iret
enter
xor
fidivrs
mov
dec
mov
sbb
or
cmp
lcall
adc
int3
mov
mov
xchg
sub
sub
in
jno
imul
mov
jnp
aaa
mov
dec
push
aad
lods
dec
cltd
out
aam
jno
sub
test
lret
in
sarb
dec
clc
pop
and
lock
pop
xchg
adc
push
pop
or
stos
jge
push
adc
dec
andb
lock
in
mov
lcall
pop
xchg
ss
fucomi
adc
sbb
dec
dec
dec
subb
arpl
sbb
fstp
aad
out
int
xchg
aas
push
xor
frstor
out
dec
mov
pushf
movhlps
or
or
and
cmp
bound
movsb
mov
push
or
and
jecxz
mov
mov
xor
fldcw
aas
pop
and
jb
push
jmp
add
call
mov
jne,pn
cmp
int
cmp
clc
inc
arpl
pop
test
in
ret
sbb
pop
dec
notb
shrb
loopne
dec
popa
push
jp
fbstp
lea
pop
push
xor
pop
inc
mov
cmp
cmp
inc
addr16
or
imul
out
pop
push
xchg
xchg
jo
sub
mov
or
add
push
jb
pop
mov
dec
and
aam
fdivrl
cs
daa
sub
in
lds
test
mov
ror
test
fwait
push
jns
cmp
fs
or
sbb
dec
stos
mov
subl
inc
popf
pop
lcall
and
mov
mov
jno
mov
jnp
or
lods
push
cltd
mov
roll
sub
shrl
mov
stos
push
inc
aas
mov
jo
fistpll
mov
fnstenv
xchg
lock
cmp
add
pop
jp
sub
test
movsl
mov
dec
push
push
ret
test
mov
jns
push
rorl
mov
mov
push
adc
aaa
pop
cmp
insb
les
and
jle
jne
xchg
xor
push
adc
push
inc
pop
ljmp
inc
sbb
mov
or
fimuls
sahf
ret
dec
pushf
mov
jg
cmp
inc
or
std
add
hlt
outsb
pop
inc
jecxz
adc
lahf
sbb
push
xchg
sahf
mov
mov
push
mov
mov
jo
fidivs
dec
sbb
add
test
and
imul
inc
xchg
pop
notl
cmp
xor
fcompl
mov
mov
aam
insl
cwtl
in
daa
xor
sub
outsb
mov
dec
cltd
pop
loopne
in
aaa
jmp
in
test
pop
cld
mulb
insb
nop
mov
sub
push
imul
sarb
lods
adc
scas
daa
jae
adc
add
push
cs
mov
sbb
xor
or
jne
sbb
push
outsl
jg
jae
push
xchg
lcall
sarl
cmp
jge,pt
mov
test
insl
rcll
push
fsubs
lea
push
xchg
xor
in
pop
dec
movsb
adc
movsl
int
scas
or
or
addl
xchg
lods
cmp
dec
sarl
aaa
xchg
lods
mov
push
push
mov
outsb
inc
out
and
inc
sub
leave
pop
lahf
dec
push
insl
sub
bswap
sub
out
loop
mov
inc
leave
pminsw
xchg
mov
xchg
pop
pop
xchg
jl
daa
mov
int3
push
sub
or
add
xor
inc
xor
xor
push
cmp
out
lret
mov
lcall
or
les
mov
enter
fldenv
movsl
or
or
sbb
aaa
cmp
jmp
mov
ret
add
test
lds
xor
lock
ds
mov
insl
lods
add
sti
icebp
fsubr
jne
hlt
inc
xchg
sbb
mov
or
sub
cmpsb
sub
pushf
xchg
mov
push
fcoml
in
rcr
lods
push
jbe
data16
rol
cwtl
cld
mov
dec
aaa
lret
push
jno
pop
mov
mov
insl
icebp
xchg
mov
mov
sub
sub
cld
cmp
pop
push
sti
das
pop
ljmp
sub
movb
cmpsl
lret
mov
xor
xor
test
adc
push
jl
mov
nop
push
pop
pop
sbb
fwait
mov
int
shlb
inc
xchg
and
mov
out
insl
fldt
jp
cmp
addl
jl
sub
mov
xlat
push
push
stc
mov
pop
in
fs
push
out
push
mov
adc
bnd
adc
push
jp
push
aaa
insb
lahf
addr16
lods
xor
push
sbb
pop
callw
jmp
or
gs
adc
xor
and
mov
pop
aam
aam
aaa
push
xlat
xor
adc
add
iret
lret
mov
inc
repnz
dec
cli
push
cmp
and
mov
dec
mov
xor
insl
cmpsb
and
jg
mov
les
inc
lcall
aaa
jns
and
out
xor
jg
xchg
sub
rolb
inc
jl
sub
lods
inc
sbb
xchg
fldz
pop
lret
jne
fnstsw
rclb
cmp
cmp
cmp
fs
push
mov
lret
int
into
sub
repnz
std
repz
xor
roll
call
test
sbbb
popf
or
enter
jbe
fldenv
test
lds
jb
lret
lcall
sbb
jnp
and
mov
daa
cmp
in
daa
pop
inc
out
test
shrl
rcl
cmp
iret
movsb
mov
adc
ljmp
call
popa
out
push
stc
scas
xor
movsb
dec
pop
mov
scas
sub
inc
mov
jecxz
in
mov
cltd
adc
sbb
xchg
je
sub
test
sub
xor
adc
int3
leave
inc
dec
addr16
mov
xchg
lcall
dec
mov
data16
mov
mov
inc
shl
jns
dec
and
jge
ja
jbe
popa
mov
jle
mov
loope
stos
dec
pop
js
loop
cmp
xlat
and
add
mov
sarl
mov
mov
mov
sahf
xchg
adcb
jmp
dec
dec
xor
xchg
pusha
xlat
mov
sub
pop
mov
adc
or
bswap
cltd
xchg
push
xchg
xor
sbb
scas
repnz
jmp
int
mov
push
and
pusha
fsts
in
leave
pop
xor
jecxz
idiv
mov
inc
ja
mov
inc
aad
push
in
cltd
add
ds
mov
data16
fcom
dec
cmp
sahf
cmpsl
orb
cli
out
xchg
sbb
loope
popa
orb
sub
cmp
pop
data16
inc
pusha
xor
jge
jge
cli
xor
lods
arpl
ljmp
cmp
jno
cmp
pop
jg
ja
xor
lea
shl
cmp
mov
stc
xchg
mov
outsb
mov
stos
and
mov
cmpsb
cmp
xchg
inc
sub
sub
jmp
loopne
aam
pushf
jg
lods
gs
sub
je
or
stc
bound
add
ret
jae
dec
ja
sbb
inc
fs
hlt
les
in
cmpsb
ljmp
nop
les
aam
pop
sub
outsb
mov
dec
xchg
addb
jnp
lahf
clc
and
shll
inc
sub
rolb
mov
xor
mov
fcomi
cld
sub
mov
fcmovnbe
imulb
cmp
push
shlb
push
adc
pop
rclb
btr
rcrb
popa
cmovnp
aad
repz
mov
inc
imul
lret
cmp
ss
out
cmp
imul
pop
jecxz
js
ljmp
cmp
lret
adc
sbbl
out
push
data16
mov
fldenv
mov
mov
push
ret
jl
das
cmp
shll
sbb
add
lods
or
or
xchg
into
pop
sub
mov
inc
add
cwtl
dec
bound
dec
loope
scas
cmp
cmp
xor
xor
in
pop
add
test
mov
push
insb
test
inc
ds
icebp
out
iret
imul
fs
leave
mov
sub
sub
scas
imul
js
aam
inc
loope
stos
lods
lods
inc
rcll
out
ja
fistpl
xchg
lcall
inc
bound
fldl
jge
add
dec
mov
in
les
sub
gs
das
test
lahf
shrl
test
rclb
xchg
pusha
mov
pop
xor
in
mov
iret
mov
bound
dec
iret
push
push
scas
and
movsb
xchg
data16
lock
das
repz
and
leave
dec
mov
sub
lcall
inc
cwtl
add
lea
call
sbb
bound
clc
mov
pop
jecxz
inc
dec
dec
popa
fmull
sub
push
mov
jmp
mov
mov
repnz
shrl
xchg
jmp
stc
clc
adc
pop
add
ror
loope
sbb
and
ja
out
cmpsb
xchg
cmp
add
push
ficoml
sub
shr
mov
shlb
out
aaa
imul
or
aam
push
add
out
test
inc
push
loopne
js
xor
inc
cmc
sbb
xor
jo
adc
dec
xor
testl
jmp
or
dec
adcl
pop
sbb
gs
adc
ret
adc
jg
inc
mov
or
xor
cmpsl
xor
ss
xchg
pushf
loop
adc
mov
pop
pop
jb
loop
lods
je
pop
test
mov
or
mov
jb
stos
arpl
mov
xor
lahf
xchg
jmp
in
push
out
adc
xchg
push
out
inc
or
jl
sarl
xchg
pop
cmp
cwtl
aaa
outsb
out
mov
sbb
enter
add
mov
mov
fidivl
mov
lea
and
lods
jbe
lods
test
adc
test
shll
lahf
mov
sbb
andb
push
cmp
xor
loope
bound
jg
out
mov
mov
adc
and
aaa
cwtl
jne
fstps
xchg
dec
xor
test
mov
sub
adc
mov
mov
dec
mov
fstps
push
fiadds
pop
sti
rcrb
loope
iret
mov
mulb
shl
sbb
mov
scas
loop
cltd
push
inc
call
fdivrs
mov
pop
pop
cmpsl
fcomip
pop
pop
movsb
lahf
adc
inc
mov
bound
cmp
mov
inc
lret
and
pop
xlat
decb
inc
sbb
or
cmc
mov
lea
cmp
push
into
daa
and
mov
ljmp
and
mov
pop
call
pop
mov
mov
jp
add
leave
inc
shl
xchg
in
cmpsl
dec
repz
and
movlhps
mov
je
and
push
mov
cmpsb
cmp
aas
or
test
mov
sbb
aam
add
dec
clc
and
iret
and
pushf
push
cmc
jo
inc
rcrb
fstpl
push
outsl
lock
pop
popf
stos
xchg
test
pop
xor
sbb
and
leave
push
or
repnz
pop
scas
or
push
jmp
fstps
out
sub
repnz
in
imull
lods
hlt
push
xor
add
inc
loop
stc
sti
adc
fdivrs
push
add
mov
and
mov
pop
jp
sbb
pop
fildl
add
cmpsb
jmp
jecxz
gs
sub
xor
or
stos
jg
or
cltd
and
sbb
lret
rolw
push
cmp
mov
mov
pmaxub
sbb
das
or
nop
in
jo
in
clc
loope
andb
or
lahf
adc
mov
dec
clc
jnp
scas
push
xchg
push
pop
push
push
mov
xor
test
push
ljmp
nop
xor
test
mov
loope
test
or
jne
arpl
dec
in
push
pop
jbe
dec
mov
ret
cltd
lcall
and
std
repnz
pushf
repz
push
lea
adc
sub
jl
addr16
mov
mov
mov
test
mov
pop
cmpsb
lods
sbb
mov
inc
mov
rorb
push
pop
sbb
push
nop
mov
fldenv
in
pusha
les
loopne
xchg
mov
jno
imul
pop
fldcw
aam
pop
and
mov
iret
sub
inc
insl
es
mov
daa
jo
fstl
jle
sub
inc
das
cmp
push
movd
movsl
inc
aam
fsubr
dec
repz
test
pop
or
ds
sar
jl
ficoml
clc
push
mov
arpl
jp
sbb
neg
adc
dec
dec
lcall
addb
mov
mov
and
dec
xchg
add
pop
aam
xchg
cli
push
mov
push
jmp
jae
lds
inc
loop
lahf
pop
pop
test
mov
int
xlat
add
adc
xchg
adc
mov
cmp
icebp
jecxz
add
mov
adc
test
mov
nop
add
inc
es
sub
mov
xchg
mov
xchg
gs
sub
cmp
inc
cmp
out
cwtl
sbb
outsb
arpl
push
loope
mov
inc
inc
mov
mov
xchg
das
cmp
jnp
inc
mov
stc
lods
cmpsl
dec
jo
test
dec
out
outsb
add
ss
cmp
imul
iret
cmc
scas
cmp
cmp
adc
repnz
sub
xchg
dec
pop
lret
mov
dec
or
push
cmp
mov
fbld
sub
cmp
xor
sbb
cmpb
cmc
imul
imul
mov
or
sti
adc
or
xor
pop
or
repnz
roll
xor
push
aas
cmp
fwait
xchg
lea
push
jnp
xlat
sub
push
adc
push
mov
cmp
addr16
addr16
mov
add
push
dec
movsl
jecxz
xor
dec
or
das
lahf
sbb
jo
sar
mov
lods
shlb
pop
popf
and
insl
bound
mov
imulb
fiadds
std
fcos
pop
outsb
push
aad
int3
and
fcoml
mov
in
lfs
adc
adc
xchg
adc
add
sub
ljmp
int3
cmpsb
mov
and
mov
sahf
push
mov
iret
rcr
and
popa
mov
rolb
dec
cmp
jbe
pushf
pop
aas
jns
arpl
sar
scas
mov
mov
jo
aaa
aam
dec
int3
ja
in
insb
xchg
les
ffree
jb
test
nop
jo
pusha
insl
xchg
ja
insl
and
enter
repz
cmp
rcl
jbe
push
mov
inc
xorl
sbb
inc
mov
sub
nop
xlat
add
cli
xorb
jns
in
mov
movsb
inc
imul
or
leave
push
movsl
cmp
mov
push
insl
adc
push
sbb
dec
movsb
sub
fwait
add
jo
out
movsb
into
push
add
and
pop
or
repnz
out
xlat
fs
lcall
call
into
add
mov
sbb
mov
nop
or
mov
das
out
mov
arpl
sbb
insl
push
mov
aaa
push
xchg
rep
imul
pop
push
js
daa
or
adc
subb
outsb
inc
pushf
lods
and
mov
lods
jno
mov
xchg
stos
les
fs
stos
imul
or
cmp
pop
std
lock
pop
mov
stc
dec
inc
leave
pop
aad
out
adc
lcall
insb
xchg
nop
jge
and
repnz
sarl
push
jns
sub
lcall
std
scas
jno
and
cmp
inc
push
pusha
sarl
cmp
test
jno
sti
push
pop
fmull
hlt
adc
adc
pop
stos
into
pop
mov
cmp
jns
mov
and
or
out
and
push
mov
add
daa
inc
jl
push
mov
bound
sub
jns
mov
push
sub
sahf
jno
jne
out
sub
sbb
imull
movsb
lea
sub
test
popf
out
mov
jns
leave
pop
adc
sbb
pop
xchg
xchg
mov
cmp
negb
adc
frstor
js
lahf
pop
and
jb
ficompl
xchg
andl
je
pusha
aam
pop
push
negb
rcrl
pop
es
pop
movsb
insb
mov
push
insl
mov
cmp
xchg
in
ficoms
add
icebp
movsb
xor
ret
mov
dec
mov
cld
xchg
icebp
jmp
mov
fmuls
push
insl
xchg
mov
mov
jecxz
jno
stc
negb
pop
inc
sub
jge
cmp
adc
cmpsl
push
lods
sub
fucomip
jo
cmpsb
mov
pop
imul
int
xchg
dec
inc
sub
cltd
inc
push
cmpsl
inc
pop
sahf
mov
xorb
aas
cmp
xor
lock
movb
out
pop
js
ja
stos
xchg
xor
fldenv
mov
rorb
mov
mov
loop
or
inc
sbb
nop
or
cmp
adc
dec
stc
outsl
movsb
shlb
cwtl
or
scas
iret
sub
adcl
out
loopne
out
nop
adc
mov
push
adc
stc
pop
xor
jecxz
orb
xchg
std
pop
gs
stos
push
cwtl
mov
lock
fnstcw
es
mov
lods
push
fistpl
mov
fcompl
mov
inc
mov
inc
nop
and
insb
in
je
ja
sub
or
or
mov
arpl
arpl
xlat
call
lret
xchg
test
mov
icebp
sbb
ss
stos
push
loope
mov
or
mov
push
into
sbb
push
pop
adc
popf
inc
cmp
xor
rorb
into
dec
xchg
movsb
lds
test
pop
mov
sbb
sahf
or
fwait
add
and
insb
or
mov
ret
mov
shlb
lcall
sbbl
std
lods
inc
and
pop
jmp
out
icebp
fstpt
xchg
mov
adc
jnp
ljmp
loop
js
cmp
fnsave
mov
scas
jg
dec
stos
jo
mov
cltd
sub
lret
out
sub
xchg
xchg
and
mov
lods
enter
push
mov
mov
hlt
fcmovnbe
xor
int3
push
jo
leave
daa
incl
jecxz
cmp
add
aad
mov
sti
pop
mov
fcoml
ret
xchg
mov
scas
mov
cmpsw
fcmovnb
or
nop
add
mov
sub
inc
push
std
mov
sub
mov
lahf
iret
mov
cld
add
out
xorb
sbb
fdiv
mov
movsl
mov
ljmp
jl
repz
subb
inc
cmp
cs
andl
movsl
push
fmull
mov
or
repnz
scas
inc
sbb
lods
jae
inc
sub
adc
jae
push
mov
inc
and
jmp
mov
cmp
lret
xchg
jmp
push
xchg
ds
push
aam
repnz
jbe
pushf
popf
or
xchg
call
arpl
jmp
inc
in
cmp
nop
pusha
pop
xchg
test
adc
mov
nop
int3
subl
jns
aas
add
and
cmc
inc
jne
leave
mov
pop
dec
xor
pop
sahf
add
dec
inc
cmc
pop
adc
jae
pop
inc
mov
xor
jo
iret
push
sbb
and
xchg
das
add
loop,pt
rcll
cmp
xchg
fcoms
jbe
add
cmp
xchg
sarl
cmp
jnp
int3
cmpsl
test
aam
inc
sahf
call
in
pop
data16
fldl2t
cmp
addr16
ret
vphaddubd
sub
popa
mov
inc
fnstsw
sbb
dec
fsts
xor
push
insb
mov
xchg
mov
fcomps
rolb
mulb
mov
fldcw
enter
sbb
fldl
int
aam
sbb
push
ljmp
lock
cmp
loopne
jne
dec
test
inc
sahf
enter
scas
push
add
mov
xchg
mov
mov
push
mov
lret
and
push
jp
mov
and
mov
xchg
mov
cld
sbb
dec
dec
pop
or
in
mov
cmp
cmpsb
adc
adc
jb
dec
aas
add
pop
push
nop
sub
or
in
nop
add
xlat
out
das
sarl
xchg
jns
leave
jp
jg
adc
push
insl
sbb
test
xor
cmp
into
dec
js
mov
in
lock
daa
loope
cmc
sub
cwtl
insb
outsb
lds
movsb
add
lods
sbb
mov
dec
dec
popa
out
mov
pop
scas
cmp
orb
cmpsl
ljmp
xchg
mov
sbb
jecxz
out
jno
out
cmc
scas
pop
int3
sub
mov
push
cmp
mov
xchg
mov
xchg
dec
and
pop
stc
jmp
mov
mov
push
push
xchg
out
mov
mov
das
mov
push
adc
arpl
les
push
dec
setns
imul
pop
mov
in
sbb
rcl
jp
sub
mov
testb
mov
mov
mov
jb
mov
mov
fisttpll
out
lret
and
xchg
les
lret
into
inc
mov
fistl
fstpt
jp
xchg
mov
arpl
shll
mov
mov
cmpsl
addr16
and
popa
mov
push
mov
add
in
pop
sub
push
mov
pop
das
mov
loop
cmpsb
jns
shl
pop
stc
and
xor
mov
or
and
mov
sahf
push
or
popf
pop
jb
inc
inc
jg
cmp
jne
fdivs
inc
sub
mov
repz
lods
pop
jae
mov
or
inc
inc
mov
mov
cmp
inc
push
or
dec
xchg
or
cs
imul
and
push
pusha
add
pop
cmp
fs
push
int3
cmp
sub
add
adcb
mov
adcb
loope
jno
lock
ret
dec
or
test
xchg
cmp
cli
add
dec
in
lock
insb
mov
mov
bound
fadds
push
int
mov
dec
xchg
repnz
jbe
and
orb
cmp
pop
pop
adc
cmp
movsb
std
xor
mov
mov
jmp
pop
dec
pop
cld
xor
stc
add
sub
xor
loope
cmp
mov
aas
aas
dec
xchg
xchg
fsubrl
xchg
negl
ljmp
in
or
insl
ljmp
add
popf
aad
mov
out
pop
and
adc
iret
loopne
fisubrl
lods
jae
into
fcomp
xchg
and
pop
dec
xor
pop
pop
hlt
push
daa
cmp
add
sbb
adc
js
aam
icebp
jp
lret
jae
addr16
adc
xchg
jge
jne
adc
loopne
movl
add
jno
inc
cmp
add
pop
int3
bound
pop
cltd
mov
ljmp
or
cli
mov
rclb
jmp
sbb
mov
mov
jnp
cld
ds
fwait
ret
sbb
fstpt
sbb
push
lods
dec
repnz
sub
mov
popa
sti
cmp
push
fwait
out
sbb
cmp
mov
or
insl
cmp
mov
ja
mov
ficoml
mov
dec
jp
xor
xlat
push
inc
jb
dec
pop
pavgw
and
repnz
jnp
mov
mov
in
and
dec
jae
jecxz
hlt
sub
jl
pop
hlt
push
sub
xchg
mov
scas
mov
push
out
jecxz
mov
jle
mov
mov
mov
mov
lds
xchg
inc
loopne
int
arpl
enter
mov
sub
xchg
decl
in
xor
fdivr
mov
mov
mov
adc
inc
jbe
adc
imul
into
fimuls
cmc
push
insl
cmpsb
stos
pop
call
inc
and
and
iret
pop
dec
xchg
int3
sbb
inc
pop
cmpsl
add
jecxz
enter
lcall
jmp
mov
outsl
int3
test
adc
mov
dec
sahf
ret
loope
lahf
cmp
or
stc
scas
push
lea
aaa
fs
out
mov
idivb
pop
sbb
cltd
out
push
enter
outsb
sbb
and
push
mov
mov
das
xchg
aad
scas
stc
mov
sub
push
adc
inc
push
pop
adc
push
addr16
cmp
fsubr
xor
daa
sub
out
and
lods
pop
aas
xchg
int
and
aas
test
test
adc
jl
cmp
cmp
out
adc
add
and
or
or
test
cmpsl
dec
icebp
dec
sarl
dec
adc
xchg
rcr
add
int3
shll
pop
lock
test
pop
cld
pushf
jmp
xlat
lds
or
lock
sub
and
in
mov
inc
stos
add
sbb
push
push
pop
dec
std
dec
ret
push
jmp
enter
inc
lock
jbe
mov
out
push
mov
loopne
dec
lea
xor
jb
aaa
fisubrl
addr16
inc
gs
leave
call
jmp
into
xchg
stc
cs
mov
call
add
pop
mov
pop
aas
outsl
jb
pop
das
les
jl
push
dec
mov
push
xor
scas
shl
imul
inc
add
mov
xchg
and
push
iret
adc
jl
or
or
push
jl
mov
test
test
lret
inc
stos
jno
push
roll
fcom
cltd
sub
inc
repnz
push
js
push
xchg
add
dec
mov
ret
cmp
movsl
or
int3
cmp
cli
lret
cmp
mov
jmp
fsts
mov
jne
decl
xor
mov
dec
mov
cmc
mov
fwait
jb
dec
pushf
add
xor
shll
mov
inc
xor
sbb
add
jecxz
imul
jb
cltd
pusha
outsl
push
or
jle
mov
mov
lea
in
addl
add
aam
pop
sbb
inc
nop
cmpsb
push
add
mov
push
inc
add
pop
mov
sbb
lahf
movb
into
lret
add
orb
jo
fcmovu
mov
or
xchg
dec
push
pushf
xchg
rclb
dec
add
popa
test
sbb
lods
test
pop
mov
adc
loopne
rcrb
and
fnsave
mov
dec
xchg
cmp
sbbb
cmp
push
mov
jg
in
jge
aaa
jg
fnstcw
jb
mov
pop
fwait
lds
sahf
mov
mov
pop
dec
and
mov
mov
mov
cmpsl
inc
test
aaa
jle
sti
gs
in
xor
outsl
les
aad
movsb
cmp
fwait
bound
popf
mov
jp
enter
add
test
mov
jae
pop
sahf
insb
cmp
pop
ljmp
mov
clc
out
shrb
adc
or
mov
dec
gs
repz
popf
push
xlat
int3
push
sub
rol
shll
cmp
pop
fcmove
xchg
fwait
lret
mov
or
loopne
add
subl
cs
lods
loop
loopne
mov
jp
movsl
insb
stos
fisttpl
mov
stc
dec
push
bound
lret
ret
lea
mov
inc
je
popf
iret
call
and
icebp
lahf
ljmp
stos
dec
fwait
push
xorl
mov
push
in
lahf
dec
fwait
mov
rol
int3
pop
and
imul
fists
mov
cli
xchg
js
sbb
pop
pop
sahf
dec
aas
jae
clc
subb
shll
sbb
push
inc
das
std
adc
ss
jp
cmp
mov
push
cmp
outsl
shrb
jbe
inc
lock
cmp
fildl
popa
pop
mov
cs
dec
mov
mov
popf
push
cmp
jbe
adc
dec
int3
push
pop
movsl
stos
lea
outsl
push
scas
pop
outsb
xchg
clc
jnp
leave
mov
iret
bound
add
flds
or
adc
lea
cmp
xchg
imul
push
dec
xor
sahf
cmpl
arpl
pop
ffree
add
stos
mov
or
roll
loopne
add
je
add
lods
pop
lods
xor
push
iret
test
lahf
imul
pop
pop
inc
sar
pop
fisubl
je
or
adc
xchg
subb
adc
jo
xchg
repz
ret
lret
std
add
push
jmp
xchg
repz
push
xor
scas
leave
mov
jmp
dec
adc
je
fcoml
popl
inc
lahf
je
mov
pop
lods
rcll
cmp
jo
stos
ficoml
adc
fwait
adc
into
movb
divl
xchg
loope
jp
lods
mov
sti
adc
jmp
repnz
das
cs
psrld
fsubs
push
mov
xor
pop
negl
adc
ja
stc
xchg
shl
push
subb
outsl
adc
push
iret
mov
out
je
out
clc
or
jg
iret
cwtl
mov
cli
lret
enter
out
sub
adc
adc
add
sbb
nop
icebp
xor
push
sbb
ds
testb
xchg
test
jp
push
lods
and
xchg
leave
mov
add
cmp
and
mov
push
andb
mov
sub
iret
adc
lahf
jnp
pop
jle
add
pop
loopne
push
lea
adc
dec
and
mov
mov
sbbl
mov
mov
and
loop
nop
push
andl
push
js
jg
idivb
out
pop
sbb
in
sub
cltd
mov
mov
adc
dec
xchg
push
les
int
lahf
sti
mov
roll
bound
xchg
jg
pop
dec
movsb
inc
mov
cld
sbb
lahf
in
mov
xchg
arpl
or
leave
bound
fs
jmp
int
fdivrs
push
ret
mov
iret
lret
mov
aad
iret
popf
movsb
cmpb
stc
in
lds
std
int
adcb
rcl
out
in
mov
push
jl
and
pop
sahf
shl
pop
into
rolb
jle
mov
aaa
popf
mov
dec
leave
lods
bound
repz
scas
sbb
movsb
mov
in
loop
dec
cmp
fsub
aad
sti
loopne
out
gs
xchg
xor
stos
xor
pop
sub
fsts
dec
jp
adc
sub
jbe
aaa
pop
aas
push
repz
ret
push
inc
pop
xchg
das
mov
jmp
fistps
les
stos
sub
pop
lods
xchg
pop
out
dec
aaa
repnz
push
pop
pop
andb
int3
lcall
or
pop
fildll
jb
jb
dec
fistpl
lahf
sbb
jns
popl
aaa
shll
clc
sbb
jo
fdivrs
lods
testb
cmpsl
jae
incb
int3
cmpsl
arpl
fdivrs
fwait
sub
arpl
out
or
and
ret
flds
push
cld
add
sbb
jb
rcll
jo
out
mov
or
test
adc
je
fstpt
jno
orb
mov
xlat
push
les
sub
lcall
inc
cwtl
mov
add
cmp
sbb
rcrl
mov
add
pop
adc
xchg
cmp
jecxz
repz
fnsave
int
addl
jns
xchg
xchg
sbb
xchg
sbb
in
and
lock
mov
cmp
inc
into
push
lret
lods
mov
push
push
push
sbb
lods
push
nop
sti
sub
mov
pop
jmp
xor
int3
fcompl
flds
pusha
push
xor
push
inc
notl
fwait
inc
xchg
andb
adc
sub
push
cmp
aaa
in
out
mov
cmpl
xlat
jno
movb
jns
cmp
mov
mov
lods
sbb
sbb
add
shll
sbb
fs
mov
lock
imul
lcall
in
xchg
push
mov
push
or
jp
pushl
cmpsb
dec
pop
xor
jnp
push
stc
sub
or
loope
mov
stos
jb
jecxz
inc
ds
inc
xor
dec
stc
scas
sub
in
mov
xchg
stos
int3
cmp
jp
add
dec
loope
movq
add
int3
sub
movsl
mov
jb
mov
leave
adc
iret
jae
hlt
arpl
mov
iret
or
sbb
adc
jae
jmp
cmp
xchg
mov
inc
mov
jns
cmpsl
fst
fsubp
xchg
dec
out
movsb
fcoms
xchg
mov
inc
mov
sbb
sub
sbb
addl
dec
sub
and
or
ja
in
rclb
lock
imul
repz
lret
ret
jg
call
mov
repnz
fidivl
pop
push
cmc
test
sbb
sarb
test
push
cli
dec
shrl
sub
lods
ds
decb
cmpsl
xor
ljmp
in
sbbb
rcrl
int
pushw
dec
jnp
dec
into
sbb
mov
subb
pop
test
outsb
dec
inc
lahf
inc
inc
mov
int
sbb
idivb
inc
sub
ret
cmp
movsl
push
aam
jae
cmp
mov
push
xchg
out
push
imul
lea
aam
pushf
mov
adc
pop
jb
aas
sbb
ret
jle
fnsave
cmp
ljmp
movsb
cwtl
inc
push
sbbl
cmp
xchg
sbbl
jae
mov
movsl
xchg
mov
repz
scas
popa
push
stos
mov
in
iret
mov
mov
xchg
sbb
and
dec
mov
mov
or
loope
icebp
xor
jne
in
stc
xchg
adc
lahf
pop
hlt
xor
clc
notb
xor
mov
pop
cltd
jge
test
mov
ret
sbb
sbb
addr16
push
fwait
xchg
lds
push
inc
in
mov
cmp
rorb
rcl
cmp
in
pop
mov
dec
test
data16
sub
pushf
and
shlb
cli
xor
mov
push
test
and
cmpsl
adc
addr16
sub
bound
int
mov
out
cmp
ret
ret
lret
push
stos
jp
fnstsw
mov
sbb
add
call
mov
push
pop
xor
imulb
mov
cmp
jbe
lods
push
aaa
addl
movsl
test
mov
shl
enter
imul
ss
repnz
xchg
xor
jmp
ret
sbb
icebp
xchg
inc
mov
inc
aam
jb
ret
mov
pop
daa
mov
movsb
lret
sbb
pop
adc
out
cli
scas
rcll
stos
nop
mov
pop
loop
aaa
mov
mov
xchg
xor
out
jnp
sbb
push
cwtl
and
ficomps
ror
arpl
addr16
stos
cmpsl
in
push
fiadds
fdivs
loopne
jle
sbb
int
or
xchg
sbb
pop
mov
sti
cmpsl
jne
enter
mov
out
jne
lea
loope
int
outsl
pushf
pop
fs
lods
cmp
jne
pushf
sub
push
pop
in
pop
sahf
aaa
jg
das
pushf
cmc
pop
pop
and
outsb
je
out
nop
in
in
int
dec
ja
and
stos
lds
mov
adc
jl
mov
in
jg
adc
mov
mov
inc
sahf
addr16
jle
out
dec
xchg
out
fdivrl
mov
push
add
jge
inc
mov
and
cmp
mov
mov
adc
shll
push
sbb
int3
lahf
scas
aaa
push
cwtl
inc
pop
pop
inc
mov
data16
and
nop
fsubrl
mov
push
dec
mov
jg
mov
cs
adc
jo
mov
adc
dec
mov
jae
outsb
in
arpl
jnp
jle
pop
aas
out
pop
pop
mov
sub
cli
and
jge
movl
bound
mov
add
iret
movsl
sub
roll
cmpl
loope
js
stos
sarb
pop
xchg
repnz
les
arpl
dec
push
fwait
push
dec
push
mov
jne
push
mov
std
inc
and
aas
sub
or
xlat
push
mov
jb
loop
scas
insl
and
out
sub
pusha
sub
std
test
int3
mov
fcmovb
pop
xor
inc
pop
mov
jae
cmp
repz
sub
es
or
xchg
cmc
movsl
out
xor
jo
psubd
fstl
outsb
fsubr
cmp
in
insb
js
jecxz
jmp
mov
add
mov
jecxz
ss
lret
and
and
xchg
adc
add
add
addr16
inc
and
outsl
push
cmp
leave
and
add
jmp
xor
shrl
ror
xor
mov
addr16
push
ss
shr
push
jns
stc
jb
sub
sbb
mov
testl
pop
or
mov
sub
rcr
nop
pinsrw
mov
push
xor
mov
push
js
test
les
pop
jmp
cltd
xor
sub
mov
cltd
pop
cmp
lahf
xor
jl
xchg
mov
add
aam
lret
mov
xchg
jno
or
jb
leave
shlb
mov
cmpsb
bound
dec
or
or
add
and
stos
sbb
fimuls
xchg
ja
adc
jl
sahf
mov
cmp
icebp
mov
sbb
lcall
pop
dec
fldenv
inc
push
xor
mov
ret
cli
adc
ja
or
rcrb
push
sbb
and
dec
add
jne
inc
clc
es
decb
push
add
mov
xchg
sahf
sub
inc
loopne
push
lea
sub
mov
adc
xorb
push
roll
in
jmp
jo
xchg
push
aam
dec
les
and
arpl
fiaddl
ds
sbb
push
inc
sbb
movsb
mov
ljmp
in
xchg
cld
call
clc
adc
fildll
ret
aad
fsubrs
decb
or
decl
xlat
mov
jb
mov
dec
sbb
mov
jne
cmp
sbb
shl
inc
test
fptan
cmpsb
pop
xor
push
test
int3
imul
psubsw
int3
jns
leave
flds
ss
in
cs
dec
inc
push
adc
mov
or
repz
jp
lea
xchg
mov
bound
push
xor
gs
scas
int
clc
addb
cmp
je
mov
orb
lret
jbe
roll
std
xchg
mov
pop
jae
fcoml
and
mov
pushf
shll
rcll
loope
int
sbb
jmp
mov
mov
fwait
out
mov
and
incb
lods
sub
sbb
xor
mov
imul
pop
mov
hlt
je
cmp
sub
sahf
loop
imul
cmp
aad
jle
fs
jmp
clc
sti
hlt
shlb
adc
shlb
adc
mov
adc
and
ss
lcallw
mov
add
inc
cmc
insb
mov
xchg
xor
cmc
icebp
nop
fucomip
sbb
lds
lock
rcr
inc
jg
mov
por
pop
fwait
rcrl
shl
cmp
add
dec
xchg
adc
and
dec
addr16
lods
addr16
push
jg
mov
xchg
test
cmp
mov
push
stos
lea
stos
sub
sarl
sub
insl
push
clc
incb
fdivl
inc
jb
push
les
mov
jnp
rclb
xchg
push
imul
pop
test
add
ljmp
push
orb
lock
mov
out
mov
sub
loope
xchg
push
adc
add
das
pop
in
pushf
fisttps
out
mov
inc
inc
imul
bound
push
xchg
loop
adc
dec
add
lcall
mov
adc
inc
mov
sti
addb
clc
lahf
fcmovb
movsb
mov
ljmp
aas
aad
loop
pop
add
push
sarl
add
in
aaa
mov
push
jb
jns
int3
jg
test
loopne
jmp
sarl
or
jnp
jmp
test
jecxz
mov
pop
repz
jnp
and
fisubs
adc
pop
jge
mov
lcall
frstor
cmpsb
pop
sbb
jle
hlt
adc
arpl
mov
sub
sbb
gs
imul
stos
jno
or
ret
das
nop
dec
jecxz
clc
aas
push
int
ret
scas
stc
pop
push
inc
clc
loopne
jecxz
push
idiv
loop
adc
pop
add
and
mov
in
mov
int3
push
mov
sbb
test
stos
mov
and
cmp
test
fldcw
mov
cmpb
cmpxchg
idiv
xor
stos
cmpsl
push
jl
pop
add
mov
das
fildll
pop
dec
or
loopne
sahf
cmp
mov
xchg
decl
adc
sbb
sbb
mov
dec
int
mov
fcomip
push
cs
fs
pop
jae
mov
in
push
sbb
mov
ljmp
dec
mov
imul
cmp
cltd
mov
lahf
jle
adcl
xchg
xchg
jle
pop
je
ss
pop
stos
das
adc
rclb
xchg
enter
mov
xor
cmpsl
mov
push
popa
sbb
adc
mov
sar
test
push
mov
mov
mov
out
add
test
out
imul
pop
jmp
subl
scas
mov
pushf
cli
imul
test
push
mov
mov
mov
add
xchg
inc
mov
es
ror
js
jns
or
stos
push
leave
scas
shlb
or
inc
fwait
and
xlat
dec
cmp
inc
gs
lds
pop
scas
shlb
cwtl
push
mov
shl
pop
outsl
sbb
insl
or
ret
dec
repnz
mov
or
xchg
movsl
shrl
mov
dec
mov
add
in
fidivl
push
test
push
pop
jl
mov
sbb
bswap
xchg
sbb
jl
push
push
mov
jmp
dec
fidivs
notb
inc
push
sahf
mov
mov
pop
ja
repnz
outsl
inc
std
cmp
outsl
lahf
popa
add
fsubl
out
pop
xchg
push
mov
std
movsb
addb
stos
mov
push
xchg
jb
sub
xchg
lahf
loop
xchg
ret
out
pop
mov
es
xor
xorb
cmp
mov
test
inc
div
sbb
mov
out
outsl
out
add
inc
pushf
mov
jno
and
sarl
shlb
mov
ret
xor
jl
out
lret
xor
imul
js
add
dec
cs
shlb
shr
dec
rclb
and
sahf
adc
ja
iret
in
pop
jg
lcall
hlt
cmc
lahf
inc
pop
mov
push
and
add
cld
mov
out
ja
ds
out
aas
mov
xor
push
cs
push
je
repz
adc
mov
aam
push
push
mov
inc
sub
subb
cwtl
or
dec
or
mov
jno
pusha
dec
and
sti
mov
enter
lahf
push
add
or
or
imul
xor
xor
jbe
push
sbb
cmp
inc
outsb
cmp
dec
xor
fdivr
add
sbb
mov
shlb
cmpsl
jg
int
add
fisttps
scas
mov
repz
fxch
dec
sub
ljmp
imul
jp
testl
xlat
xchg
xchg
inc
lret
adc
or
imul
and
mov
pusha
adc
pop
sbb
fldcw
inc
lahf
xor
push
mov
mov
pop
xor
inc
nop
cld
xchg
jle
or
adc
jle
pop
jle
ss
andb
sub
outsl
fs
and
or
inc
jbe
dec
data16
inc
adcb
jno
xorl
xor
fmuls
test
adcl
aas
out
dec
clc
int
outsb
sub
sub
xchg
mov
push
jecxz
cmp
fldl2t
dec
jbe
imul
stos
sub
testb
mov
icebp
push
cmpsl
jo
ret
push
or
or
mov
shrl
push
fidivs
xor
leave
xor
dec
jmp
pop
or
js
enter
hlt
loop
mov
rcrb
negb
push
pop
mov
jno
mov
lahf
push
xchg
fwait
rol
loope
sarb
fildl
add
cmp
mov
jl
mov
in
pop
pusha
push
scas
inc
pop
pop
inc
sbbl
sub
imul
popf
jo
in
inc
xor
adc
jo
out
sarl
push
pop
pop
cmpsl
mov
jbe
inc
mov
mov
add
fwait
push
test
jno
lds
sbbl
sub
fimull
ljmp
decb
cmpsl
cmp
xor
nop
loopne
dec
cld
andb
fidivrs
cmc
fisubrs
insl
imul
ds
xorl
xlat
fldt
js
pushf
loope
jb
sub
push
aam
mov
cmc
pop
fdivl
and
in
in
sub
enter
jle
in
cwtl
mov
loop
dec
mov
jg
je
mov
mov
sub
into
mov
in
mov
push
mov
or
mov
imul
xchg
pop
es
cmpsb
push
sbb
loope
mov
test
pop
iret
cmp
stos
dec
xchg
arpl
shl
lods
out
mov
cmp
lock
fistpl
push
pop
stos
pop
scas
or
lahf
scas
or
leave
dec
mov
pop
scas
ljmp
arpl
adc
daa
add
repnz
lods
aad
pop
mov
xchg
dec
pop
or
fisttps
pop
in
xchg
dec
xchg
mov
aas
ret
sahf
fs
lods
fdiv
mov
ds
jbe
mov
mov
or
jno
movsb
loopne
pop
jne
sub
xor
or
mov
dec
pusha
sub
lea
out
pop
notl
es
aaa
lock
or
and
sbbl
mov
scas
aas
dec
fnstenv
add
aas
sbb
pop
insb
and
aad
mov
test
je
and
fwait
clc
jae
es
mov
mov
add
fildl
xlat
cmc
mov
lods
pop
adc
xor
outsl
pop
pop
rorb
inc
test
out
mov
sub
xor
dec
movsb
pusha
inc
ss
test
adc
mov
dec
into
and
movsb
mov
add
mov
cld
scas
lea
test
dec
loop
enter
movsl
xor
cld
jo
divb
push
mov
int3
imul
mov
cmp
fistpll
in
es
dec
pop
push
cmp
addr16
dec
rcrl
testb
jbe
popa
dec
clc
add
stos
or
in
xchg
or
xchg
out
mov
cmp
mov
mov
dec
inc
mov
push
inc
xor
mov
test
lcall
cmp
ljmp
and
xchg
jne
out
shrb
in
fldl
data16
add
scas
in
in
cmp
test
das
fdivl
lret
pop
or
inc
iret
jecxz
jbe
movsl
leave
jecxz
jge
inc
mov
mov
das
sbb
stos
cli
mov
ret
out
and
jae
rcl
and
lock
lret
in
xlat
shlb
gs
and
push
mov
and
and
js
lea
in
dec
jno
and
mov
push
sub
dec
jns
adc
add
rorb
stc
mov
scas
lock
add
nop
xchg
enter
mov
fwait
les
add
shl
jne
cmpsb
sbb
popa
int
insb
xchg
mov
jmp
xchg
les
rcll
jne
mov
adc
fwait
test
dec
sub
dec
mov
add
ret
stc
pop
sbb
ss
aam
shl
lods
pop
push
ret
xchg
cwtl
pushf
inc
sbb
imul
pop
xor
repnz
or
jle
fwait
mov
pusha
testl
cld
mov
jge
sbb
mov
and
adc
push
push
int
or
shrb
jne
lret
cld
fiaddl
inc
push
pop
sbb
fdivl
mov
xchg
mov
xchg
test
cld
test
imull
xor
mov
cmp
movsb
xor
add
sbb
add
aam
push
dec
movsb
jecxz
or
jo
push
adc
cwtl
cld
and
shrl
imul
dec
movsb
repnz
or
movsb
arpl
outsb
roll
out
imul
dec
arpl
cmp
out
adc
cmp
or
push
sti
mov
dec
shrl
push
xchg
gs
mov
jns
negb
sti
ror
fldl
push
out
push
rorb
lcall
jo
nop
outsb
push
ljmp
in
mov
or
mov
dec
adc
push
pushf
jg
mov
aaa
decl
inc
fstps
push
repz
ljmp
iret
out
test
push
jne
and
lds
push
repz
inc
push
xchg
push
leave
mov
ret
mov
arpl
jno
push
push
push
data16
pop
mov
xchg
decl
pop
jnp
push
or
mov
dec
mov
mov
cld
push
test
mov
leave
mov
add
jo
cmc
xor
mov
dec
add
inc
stc
mov
xor
adc
mov
push
imul
fwait
cmpsb
adc
call
sub
cs
scas
out
xchg
and
cmp
repnz
test
jns
jne
pop
gs
pop
sbb
jns
adc
fidivs
ljmp
ljmp
bndstx
add
iret
or
mov
xor
dec
cs
and
xor
sub
mov
and
inc
jb
movb
jle
xchg
sub
lods
mov
mov
loop
sti
repz
push
aaa
mov
mov
add
shlb
cmp
jmp
test
and
test
ret
push
mov
pop
jb
fsts
stos
xor
mov
cwtl
push
out
loopne
mov
cld
je
or
pop
ja
aaa
xor
pop
lret
cmp
and
fcmovu
xchg
sbbb
rcll
popf
imul
rorb
cmp
leave
jne
fdivs
push
mov
push
clc
xadd
into
xchg
sbb
nop
adc
jp
sub
mov
inc
mov
xchg
sub
lea
sbb
push
and
loope
adcl
xor
push
fucomi
lds
jle
cmpsb
mov
jmp
lcall
pop
int3
cli
adc
jge
and
dec
mov
cmc
mov
lahf
movsl
in
inc
jnp
pop
in
dec
subl
sbb
push
adc
lahf
clc
sbb
push
imul
push
cmp
or
ret
jae
push
aas
add
mov
int3
into
sahf
out
cltd
cmp
in
aaa
lea
test
inc
add
mov
out
notl
adc
shlb
roll
inc
push
js
clc
dec
testl
or
cmpsb
arpl
mov
dec
xlat
sbb
pop
daa
idivb
hlt
xor
inc
mov
mov
pop
ljmp
or
jno
sub
std
lods
jne
push
int
mov
into
fadd
mov
in
xor
mov
insl
das
in
mov
inc
jo
sub
mov
adc
mov
test
insb
sbb
cld
and
aas
xchg
push
pop
cmpsl
sub
sahf
nop
or
mov
xchg
lret
jnp
sub
cmp
pop
push
inc
arpl
inc
aam
jecxz
cli
roll
mov
lret
mov
add
leave
dec
inc
frstor
fbstp
movsb
mov
mov
fdivrs
jbe
test
jbe
cmp
mov
lea
test
ret
xchg
int3
pop
dec
imul
lret
decb
mov
push
xchg
jns
mov
pop
ret
xor
push
inc
inc
rcr
push
std
test
fimull
mov
add
sbb
jmp
daa
mov
shlb
and
and
and
ret
loop
sbb
fiadds
outsb
or
push
int
sub
stos
repnz
adc
int
out
jbe
jp
fwait
or
add
cmc
cmp
sub
imul
push
adcb
jb
ret
fidivs
jg
mov
sbb
mov
insb
cmp
add
jbe
cmpsl
jp
xlat
or
sbb
into
cmp
push
mov
scas
xor
add
ds
out
pop
sbbl
pop
jnp
xor
incb
std
mov
jbe
std
xlat
xchg
cmp
test
insl
sub
dec
ret
xchg
lock
push
add
xchg
loope
mov
pop
sbb
rcrb
scas
test
push
stos
jbe
jle
lahf
adc
scas
cli
rol
aam
aaa
push
xor
mov
aad
jl
mov
pop
add
lock
pop
dec
and
gs
sub
mov
inc
mov
cs
aam
push
sub
mov
repnz
dec
icebp
xlat
mov
dec
das
es
add
sub
jge
ja
mov
add
mov
push
jg
cmp
mov
add
in
leave
ljmp
arpl
out
xchg
mov
ljmp
xchg
shlb
lcall
pop
push
ds
xchg
repnz
sbb
les
cmpsl
inc
jg
jne
mov
inc
cli
sti
jg
xchg
aam
jp
and
inc
rcrl
jae
push
cmp
mov
adc
dec
lcall
push
pop
pop
aaa
stc
lds
mov
int
out
add
imul
push
mov
and
dec
pop
or
pop
xor
jl
jl
repz
or
lcall
inc
decl
pop
jge
rcl
mov
scas
xchg
enter
cltd
pop
add
cli
sbb
add
outsb
push
xor
loope
test
psubw
jecxz
jbe
sbb
sbb
iret
sub
inc
xorb
push
sub
mov
pop
out
fbld
ja
rclb
sub
add
sbb
out
fimuls
sub
xor
mov
add
sub
xchg
test
sub
add
add
push
stos
adc
arpl
test
jo
stos
add
lahf
or
sub
addl
adc
inc
adc
ret
test
scas
ds
push
inc
vzeroall
or
dec
out
jmp
movsb
shll
dec
data16
sbb
mov
cld
push
in
data16
cmp
cmpsb
scas
pop
insl
mov
sbb
xchg
rcr
adc
outsb
xorb
xchg
and
out
fisubs
lods
adc
xlat
test
arpl
adc
or
mov
inc
shlb
rclb
insb
pop
push
adc
mov
cmpsb
sub
and
or
add
sahf
gs
adcb
pop
pop
lahf
push
sub
mov
clc
out
out
data16
mov
sub
lea
lahf
xor
or
out
insb
xor
out
dec
push
xchg
nop
es
jmp
adc
daa
ljmp
dec
jmp
inc
ficompl
out
int3
fidivrl
mov
pop
push
push
xor
jp
scas
lods
xchg
ss
pop
adc
pushf
daa
xor
cltd
mov
xchg
flds
outsl
mov
cmp
data16
test
push
fmul
xchg
adc
imul
mov
lods
and
inc
ljmp
mov
andl
add
lods
xchg
adc
xchg
adc
lret
xchg
cmp
xchg
lea
and
stc
xchg
std
das
mov
lahf
lret
mov
fdivrl
fisubrs
jecxz
insb
outsl
push
mov
push
sub
imulb
sahf
mov
xchg
fistps
pop
xchg
cmp
iret
jle
movsb
loopne
mov
into
or
lret
or
shrl
mov
and
lea
jg
out
fistl
cwtl
mov
test
add
mov
pop
pop
test
inc
mov
in
push
mov
mov
in
test
mov
cmp
push
cmpsl
mov
cvttps2pi
pop
cld
add
ficoml
shlb
xor
imull
jp
mov
push
rcrb
into
xchg
imul
sbb
int3
jb,pn
cmpb
lret
jle
xchg
jno
inc
inc
inc
repz
push
jle
push
mov
rcrl
xor
add
jne
mov
xor
fsub
adc
push
lahf
lret
in
andl
call
fisubrs
hlt
lret
adcb
sub
lea
add
mov
ret
sbb
dec
test
jo
jb
add
loop
out
jecxz
add
inc
sbb
pop
loop
fwait
les
insl
adc
inc
xor
xchg
mov
pop
into
pop
lods
and
xor
and
leave
and
test
test
jae
and
cmc
movsb
loop
js
jmp
dec
adc
xchg
js
and
xchg
int
cwtl
ljmp
fwait
sarl
shll
mov
lahf
sbb
mov
push
mov
subl
cmp
scas
js
cmp
fdivs
xchg
jecxz
and
jno
lahf
mov
xchg
and
setl
pusha
cmpsb
lea
push
mov
scas
inc
imul
filds
call
xchg
sbb
hlt
fisubrs
ret
jge
fnstcw
rolb
mov
in
mov
fidivrs
push
push
inc
lock
mov
outsl
scas
rcrb
xchg
and
xchg
cwtl
addr16
xchg
mov
pop
push
dec
inc
add
and
sti
cmp
dec
movl
jg
inc
dec
mov
mov
mov
repz
imulb
push
ret
xor
fwait
rcrl
mov
cmp
loope
lea
test
enter
jge
add
push
lea
add
scas
cmp
shlb
data16
jl
jge
dec
push
fmul
lret
cmp
inc
push
push
push
push
adc
outsb
adc
cwtl
std
in
pop
sub
or
push
adc
loopne
neg
jle
xor
in
fadd
cmpl
jge
xor
jmp
sub
dec
and
xchg
or
fstpl
mov
movsb
jg
fbstp
cmp
xor
or
pop
add
sahf
cmp
push
xor
xchg
push
xor
leave
loop
jns
xchg
or
rolb
gs
scas
gs
add
mov
rorl
push
ret
xorb
sar
adc
add
outsb
mov
ss
sub
mov
fistpl
adc
dec
test
ret
enter
push
sbb
cmc
cmp
dec
add
adc
outsb
fistpl
xchg
cld
lods
add
or
push
aas
inc
or
in
lds
pop
and
mov
bound
insl
sbb
jns
dec
lcall
loopne
sahf
jae
or
ja
xchg
and
bnd
mov
xchg
push
add
xor
push
pop
shll
and
push
xor
pop
mov
cmp
add
mov
xchg
outsl
dec
inc
jae
aad
cltd
xlat
jmp
mov
movl
mov
nop
shrl
mov
cmp
add
lahf
xor
stos
pop
mov
sub
cld
pop
mov
cmp
cmpsb
js
loope
xor
arpl
fiadds
lahf
mov
pop
push
shr
sbb
mov
mov
sub
lock
jnp
mov
xchg
and
sbb
jo
sbb
xor
call
int3
push
and
xlat
push
or
in
or
mov
mov
lods
and
or
dec
lock
aas
fldcw
or
div
test
push
cld
shll
cmpsb
cltd
std
jmp
jns
pop
sub
je
flds
or
or
xor
js
scas
mov
stos
lcall
ror
or
orb
lods
pushf
mov
stos
jnp
mov
aam
inc
cmp
out
push
scas
dec
sub
mov
sub
add
push
push
push
ret
imull
adc
clc
and
call
mov
jae
mov
cmp
push
adc
test
mov
jg
dec
pop
test
adc
mov
aaa
pushf
jl
cmpsl
clc
sub
loope
dec
lcall
out
pop
xor
lock
lds
sub
in
orb
rclb
ljmp
mov
or
ds
cld
lret
sub
sub
rolb
push
mov
adc
xchg
mov
fdivs
and
xor
pushf
in
xchg
in
daa
sbb
sub
sahf
dec
test
dec
adc
rcl
stc
movsb
aam
cmc
bound
mov
adc
jg
leave
gs
push
iret
mov
adc
jno
mov
aad
jae
add
pushf
data16
add
js
xchg
lret
and
pop
xchg
pop
lds
push
test
xor
aaa
xor
dec
movsl
ljmp
and
dec
out
cmpsb
or
jge
xchg
mov
cli
shl
pop
mov
and
mov
movsb
pushf
mov
int
in
pop
mov
loope
xchg
xchg
loopne
xchg
or
pop
sub
sub
shll
xor
mov
xlat
xchg
mov
bswap
mov
mov
addr16
pop
xchg
mov
xchg
xor
es
lods
mov
popf
stos
or
shrb
in
lds
sub
push
je
bound
rorl
mov
mov
sub
cli
mov
shll
xor
jo
sahf
fsubrl
fildll
jnp
lcall
fisttpl
jmp
mov
pop
sbb
repnz
bswap
sbb
jmp
in
mov
mov
aaa
push
lret
push
mov
fbstp
test
inc
popa
arpl
sar
gs
out
jns
jns
lds
insl
pop
xchg
xchg
inc
push
push
adc
or
sub
add
inc
dec
xchg
enter
mov
int
mov
test
xchg
mov
mov
std
fidivl
pop
pop
fldcw
xchg
out
xchg
dec
cld
loopne
xlat
push
and
push
daa
xchg
test
push
jecxz
jge
sbb
std
and
repnz
fdivrs
daa
push
push
insl
jmp
scas
sub
mov
xor
inc
push
jbe
pusha
mov
or
lock
test
jle
mov
inc
fldcw
arpl
scas
mov
bound
icebp
ljmp
sub
mov
in
das
xchg
adc
or
mov
repnz
nop
nop
xor
or
les
or
popl
aam
fiadds
mov
dec
enter
aaa
xchg
enter
mov
decb
add
inc
inc
stos
cli
add
cmp
xchg
repz
pop
fs
daa
ficoms
loopne
pushf
lret
push
imul
ja
jno
or
nop
leave
outsb
and
xor
repnz
in
add
pop
cwtl
das
insl
or
add
enter
mov
popa
xor
lret
movsl
in
imul
inc
stc
cli
adc
icebp
orb
jns
fimull
std
movsb
adc
test
std
jbe
imul
mov
pop
mov
ret
push
sbb
mov
int
cmpsl
sti
or
std
sahf
xor
cs
lods
fs
push
push
sahf
out
mov
add
push
dec
cmpsb
inc
push
push
mov
ja
lcall
jp
xor
rcrl
jo
ret
fdivrp
mov
movb
outsb
push
scas
push
xchg
inc
or
shlb
cmp
push
cltd
loop
push
sbb
imul
xor
out
sbb
pop
idiv
test
pop
push
out
mov
jo
jge
popf
mov
inc
or
ja
cwtl
popa
notb
mov
push
xor
fwait
loopne
pop
mov
push
and
sar
cmpsb
int
xor
and
ja
xchg
fmuls
test
int
insb
push
and
fwait
and
sbb
or
sbbl
jecxz
inc
leave
arpl
out
dec
enter
loop
int3
pushf
stos
jecxz
push
fmull
pushf
inc
jo
jmp
xchg
push
pusha
movsl
sbb
dec
in
rclb
and
in
loop
test
pushf
popa
xor
jae
es
mov
jecxz
push
in
mov
inc
ret
mov
leave
repnz
jg
inc
jmp
lods
sbb
push
dec
lds
cmp
ret
movsl
pop
cmpl
push
push
pop
jns
sub
pop
jmp
loope
subb
scas
es
xor
daa
push
cld
icebp
scas
outsb
ret
incb
iret
jp
mov
mov
and
out
mulb
dec
mov
out
jno
imul
fwait
in
and
int
xchg
stos
jae
or
add
das
lods
mov
in
xchg
enter
mov
test
sbb
inc
mov
in
sbbl
add
stos
fnstsw
insl
sahf
cs
sbb
daa
push
stos
xor
jl
and
sub
cltd
jecxz
cmpsb
add
xor
pop
mov
adc
ficompl
popa
scas
mov
jno
mov
cmp
add
dec
sbbb
pop
adc
sarb
sbb
inc
nop
mov
fldcw
sub
push
jge
icebp
stc
into
out
ret
mov
mov
dec
adc
jb
pop
mov
test
call
push
xor
test
das
not
or
add
cs
data16
insb
push
ficoms
push
mov
gs
or
ss
xchg
cs
fsubr
es
fwait
daa
gs
adc
fadds
xchg
and
cwtl
sub
mov
shll
pop
cmp
push
sahf
sbb
rorb
je
xor
sti
rol
xor
push
mov
cs
push
cmp
cltd
pop
mov
mov
call
sbb
jle
stos
adc
mov
test
in
shlw
jne
sub
mov
add
mov
mov
jbe
repz
mov
out
das
jns
lret
adc
xchg
outsb
dec
xor
jle
lcall
pop
or
daa
jno
pop
dec
das
cli
scas
loop
iret
cmp
and
pop
ret
push
test
adc
repz
dec
jne
arpl
dec
cmp
inc
mov
loope
fimull
dec
push
jo
xor
lods
shll
stc
mov
repz
push
sbb
dec
jno
mov
into
insl
mov
imul
mov
pop
mull
lds
sbb
jp
cltd
into
dec
in
jo
sbb
sbb
insl
or
add
mov
xor
xchg
popf
nop
std
pushf
adc
push
mov
add
mov
add
stos
addl
jnp
cld
mov
std
pop
dec
cmp
mov
push
lods
mov
mov
cmp
jle
sbb
push
movsl
ja
add
pop
mull
cmpsl
mov
xor
jmp
or
sbb
lret
sti
xchg
mov
sbb
pop
xor
fldl
imul
xchg
xor
fbld
and
movsb
enter
mov
popa
push
fs
add
ja
scas
mov
lds
push
inc
pop
pop
into
or
mov
sahf
cli
add
add
repnz
sarl
mull
gs
mov
push
inc
movsl
xor
ret
repz
mov
mov
mov
scas
cmpsb
xor
xor
sti
push
adc
sbb
loope
sbb
adc
mov
jo
icebp
push
arpl
pop
mov
test
mov
test
orl
xchg
and
mov
loope
sbb
fiadds
adc
xlat
int
mov
sub
mov
xchg
and
out
jp
mov
movsl
jae
jnp
xor
push
je
cmp
pop
cli
aad
xor
cmpsb
shl
movsb
push
ret
push
scas
pop
add
add
add
fs
cmpsb
add
popa
xor
cwtl
inc
cli
es
mov
xchg
mov
mov
xchg
xor
or
les
sbb
dec
sbb
jbe
jbe
add
cmpsb
mov
mov
loop
dec
pop
ret
rolb
ss
lcall
push
or
in
pop
add
lds
nop
pop
ret
rcll
mov
mov
push
dec
sti
mov
jnp
push
je
xorl
and
cmp
jns
mov
push
adc
jl
sub
lock
jbe,pt
test
flds
xchg
dec
shrl
dec
and
dec
push
stos
xor
xchg
pop
dec
insb
adc
xchg
sbb
pop
cmpsb
mov
push
mov
add
daa
add
scas
jno
rolb
out
pop
or
push
sbb
dec
mov
loopne
test
xor
scas
ret
mov
lahf
repnz
aaa
xor
inc
call
aad
or
sbbl
fimull
int3
rclb
mov
push
mov
icebp
jle
aam
mov
pop
cmp
adc
add
adc
sbb
inc
mov
or
add
fsts
or
flds
mov
int3
jmp
repnz
mov
push
ret
je
aad
and
fistps
mov
xchg
sahf
mov
leave
add
mov
and
mov
push
push
fisttpll
insl
jp
dec
rorb
sub
push
js
pop
lcall
and
lahf
test
int
negb
jp
mov
jb
sbb
cmp
jge
je
js
jno
sbb
xchg
xchg
xchg
add
pop
mov
test
push
cmpsb
in
gs
aas
movsl
add
addr16
jle
imul
pop
js
loop
in
push
xor
inc
pop
pop
jne
divl
jo
sbb
and
das
mov
inc
out
xor
xor
sbb
int3
outsb
in
mov
enter
fs
mov
xchg
inc
dec
rorl
jg
dec
jle
sub
jo
jae
je
push
fildll
call
xchg
nop
ja
jb
xchg
in
pop
xchg
in
outsl
shlb
orl
jmp
mov
stos
imul
push
mov
cmp
dec
insl
inc
lahf
addr16
jnp
out
aam
sbb
mov
fs
pusha
mov
loope
and
cli
sbbb
push
dec
mov
dec
inc
xor
fucomip
cmp
fwait
lods
ret
aas
addr16
bound
xchg
mov
push
hlt
mov
push
pop
imul
pop
add
mov
cs
sti
xchg
int3
and
xchg
push
ret
in
push
test
add
and
stc
xchg
sahf
mov
lock
mov
mov
in
jmp
mov
xchg
fmull
orb
call
sub
shll
out
loope
rcll
dec
jno
and
out
xchg
pop
dec
jo
mov
es
pop
lahf
andl
dec
mov
mov
lcall
imul
xchg
jecxz
int
inc
xchg
lahf
jmp
xchg
imul
xchg
ljmp
lods
mov
xchg
add
stos
aas
cmp
adc
lods
xor
fwait
push
enter
out
sub
cwtl
pop
cmc
mov
outsl
in
pop
inc
xor
sub
dec
mov
jno
cmp
xlat
adc
push
ret
jg
jmp
xchg
loopne
dec
pushw
ret
loope
outsl
or
test
sub
inc
lods
fisttpl
adc
push
mov
cmc
xor
dec
js
adc
sbb
adc
dec
mov
cmpsb
inc
push
and
inc
push
add
push
aam
mov
lret
mov
cmp
ja
sbbl
out
daa
fsubl
jnp
mov
fnsave
cmp
roll
roll
mov
filds
xor
sub
jo
cld
or
out
push
sbb
mov
clc
ljmp
dec
xlat
sub
clc
adc
insb
sbb
iret
push
jmp
int
lcall
sub
sbb
out
ror
push
mov
and
mov
mov
dec
aam
jbe
std
pusha
inc
cmp
jns
xor
lods
xchg
lret
pop
push
pop
xor
push
sbb
popa
rolb
pop
pop
rorl
stc
repz
sbb
addr16
roll
and
insl
dec
gs
rolb
jno
std
jmp
mov
pop
push
fst
xor
inc
adc
pop
pop
test
jl
sarl
xchg
dec
arpl
xchg
dec
adc
scas
mov
adc
add
adc
fnstcw
and
sahf
dec
pop
orl
pop
rorl
mov
xor
lods
sbb
repz
dec
imul
mov
dec
inc
test
rclb
lcall
add
movl
sbb
inc
test
and
cmp
cmpsb
loopne
js
xor
adc
in
jns
mov
insb
cmpb
mov
mov
inc
sbb
popa
adc
leave
ss
jae
lods
cli
in
xchg
inc
popl
lds
in
sub
in
sarl
add
insb
iret
push
sub
pop
das
in
loopne
or
mov
xor
ja
enter
push
jo
and
pop
sbb
inc
ljmp
mov
jne
sti
pop
stos
pop
inc
fdivl
pop
xchg
mov
pop
sub
mov
movsb
add
stos
in
fisubl
imul
aam
jae
test
movsb
clc
lock
inc
jg
fcoml
pushf
jp
nop
call
cmp
mov
bound
inc
jmp
add
shll
data16
cmpsb
add
lahf
pop
faddl
mov
sbb
mov
or
or
test
jns
repz
xlat
mov
data16
in
push
lock
sub
pop
jo
stos
push
das
in
rcll
mov
jnp
mov
push
pop
test
cs
cmc
jns
cltd
adc
cmp
mov
aas
cmp
or
mov
xchg
ljmp
adc
sbb
jno
out
int3
xor
push
pop
std
call
cwtl
dec
cmp
pop
mov
inc
xlat
jae
add
cltd
pop
mov
ret
jne
cmpsb
fistpll
popf
dec
pop
adc
xor
push
inc
mov
ss
movsb
das
pop
fisubs
jp
dec
icebp
and
loopne
and
fwait
xorl
jp
mov
out
cmp
lds
xchg
adc
fsts
or
cmp
out
pop
jbe
mov
ret
cs
lods
inc
sbb
mov
out
add
jne
push
faddp
inc
pusha
mov
mov
push
pop
xchg
in
push
mov
rorl
in
push
and
int
das
pop
push
mov
add
pop
bnd
sbb
shlb
int3
insl
js
rolb
sub
adc
rorb
stc
inc
xchg
sbb
xchg
arpl
insl
fwait
shrl
in
sbb
mov
sub
add
into
shl
in
out
mov
imul
mov
aam
out
or
lock
jp
mov
push
out
in
lcall
cltd
pushf
pusha
inc
stc
inc
push
mov
push
adc
pop
std
mov
mov
dec
dec
pop
inc
sub
pop
xchg
add
pop
push
fs
inc
sbbb
pop
js
test
je
mov
sub
inc
jmp
out
add
inc
jno
mov
cmpsb
pop
mov
iret
push
push
or
cld
add
test
arpl
out
mov
std
sub
inc
outsl
lock
mov
mov
inc
mov
inc
pop
filds
push
mov
push
sub
sbb
add
add
push
dec
sbb
aas
test
jp
fdivl
adc
push
or
mov
popf
stc
lods
sbb
daa
push
hlt
push
call
movb
or
mov
mov
jmp
add
adc
cwtl
cmp
xchg
mov
cmpsb
js
lock
mov
mov
mov
ss
mov
and
lahf
ljmp
outsb
xchg
mov
push
pushf
aaa
lds
adc
dec
jp
add
sub
add
in
sbb
pop
je
and
and
pop
adc
push
mov
cmp
aaa
push
iret
scas
cmp
xchg
xchg
or
mov
std
push
popf
or
stc
push
repnz
imul
jns
sbb
out
pop
mov
mov
test
cmpsl
and
arpl
dec
dec
and
pop
lock
decl
pop
push
mov
pop
addr16
or
jae
stc
or
push
sbb
in
xor
sub
cmc
push
adcl
orb
aaa
dec
add
xchg
in
dec
and
leave
cmp
lcall
push
jmp
cmpsl
imul
ret
inc
jno
and
pop
push
pusha
xor
add
ljmp
cs
call
bound
aas
loop
jno
add
shll
repnz
xor
fwait
imulb
mov
cmp
in
out
or
ror
xchg
cli
mov
adc
and
push
data16
adc
push
push
iret
sbb
jmp
dec
cmpb
sahf
mov
lods
lods
push
fsubrl
inc
div
or
bnd
lret
add
mov
call
int
dec
add
ret
rcl
pop
adc
dec
or
call
sub
push
fcompl
fwait
call
or
leave
loop
filds
cs
jne
mov
mov
push
sbb
enter
cmc
sbb
fsub
aaa
jns
or
divl
mov
inc
push
retw
lahf
pop
xchg
or
mov
popa
mov
and
idivb
out
push
lea
jecxz
dec
dec
dec
add
jns
das
imul
dec
inc
dec
jno
and
mov
xchg
or
mov
jge
adc
dec
lret
add
pop
divb
pop
ucomiss
outsb
stos
repz
sub
and
cmp
sbb
mov
sbbb
adc
sbb
das
xchg
pop
int3
mov
lcall
cli
clc
and
jns
daa
push
std
loop
jae
bound
jo
and
mov
mov
adc
pop
lret
aas
jecxz
loop
dec
cmpsb
ljmp
xchg
jmp
addr16
ljmp
mov
xchg
gs
or
dec
clc
xchg
imul
and
jecxz
addr16
js
sub
push
push
je
loope
cmp
inc
jns
imul
push
mov
jno
pusha
mov
bswap
test
aas
js
fstpl
fimull
xchg
mov
movsl
xorl
and
test
sub
or
sbb
pop
lock
jo
in
add
outsb
in
pop
jno
sub
fs
dec
loope
test
xchg
sub
lods
inc
ficoml
lods
mov
sbb
add
pop
or
mov
jl
hlt
shlb
push
xchg
push
aaa
rcrb
xor
enter
cmpl
imul
loope
xor
dec
fsts
jmp
jne
pop
xchg
and
aad
addb
in
push
lret
in
stc
cmpb
push
test
in
push
add
das
imul
dec
dec
and
ret
leave
adc
or
test
mov
xor
movsb
fwait
or
push
movsl
xor
hlt
xchg
pop
pop
add
mov
insl
mov
push
and
fwait
cmp
lock
adc
mov
setp
test
ljmp
jne
jg
push
jmp
icebp
icebp
negl
xchg
xlat
mov
mov
jmp
lahf
jl
adc
or
mov
jle
and
into
or
test
fbstp
xchg
mov
int3
sub
pusha
fs
add
add
mov
mov
mov
lods
mov
loop
lea
ret
pop
mov
andb
lods
and
rclb
dec
pop
xchg
push
xor
jg
and
cltd
and
notb
mov
loope
add
cmc
inc
sub
aas
idivl
mov
dec
jns
loop
into
push
sub
adc
mov
sbb
dec
call
xchg
iret
das
test
add
inc
clc
mov
pop
dec
push
repz
jg
sub
jmp
mov
js
cmp
dec
aaa
inc
sbb
out
ret
mov
add
dec
mov
arpl
hlt
mov
push
sub
xchg
push
push
pusha
or
push
shlb
mov
scas
out
xlat
and
mov
cmc
inc
mov
sbb
lret
ss
enter
sti
dec
into
adc
mov
imul
sbb
xor
test
loopne
imul
mov
daa
clc
jae
shrl
xchg
add
xorb
daa
adcl
mov
jecxz
xor
addl
sub
and
stos
dec
call
cld
stc
aas
jmp
sub
lods
sub
xlat
or
dec
aaa
out
pop
push
sbb
inc
pop
dec
push
push
test
xchg
and
cmp
loop
adc
loop
mov
push
xchg
ds
stos
fs
movsl
incb
mov
sahf
leave
sub
insw
xor
push
cmp
test
cmp
pop
aas
fbld
sub
xchg
psubb
testl
dec
sti
xchg
adc
pop
mov
mov
jp
insl
js
push
stos
mov
push
inc
inc
push
mov
fadd
xchg
cmp
inc
xor
xchg
je
or
sahf
xor
test
inc
ljmp
xchg
mov
sahf
pop
lret
push
jne
xor
lret
ret
fisubrl
xchg
cmc
lea
hlt
mov
pop
ret
adc
mov
mov
pop
int3
loop
insl
jge
cmpsl
adcb
in
mov
xor
push
and
pusha
pusha
mov
shl
adc
imul
sub
mov
rcrl
es
in
mov
cmp
dec
mov
mov
adc
lret
int3
add
aaa
pop
cli
mov
mov
mov
sbb
lahf
inc
mov
jae
xor
les
inc
push
inc
sahf
dec
dec
aas
jecxz
pop
or
aaa
inc
leave
and
push
out
push
jp
inc
in
jno
cmp
into
mov
xchg
insb
testl
shl
in
dec
mov
inc
adc
adc
cwtl
push
sbb
mov
std
outsb
popa
int
out
test
mov
rorb
in
pop
jae
fsubrp
sbb
push
cli
out
ja
sbb
push
pop
shlb
clc
inc
dec
jno
shrb
sbb
out
jne
iret
loopne
pop
xor
adc
mov
jge
fstpl
mov
pusha
inc
in
lahf
scas
sets
inc
arpl
or
bound
sbb
or
jle
mov
lock
mov
xor
into
jl
push
xchg
push
aas
popa
popa
mov
adcb
inc
addb
or
mov
inc
shlb
jo
in
movsl
adc
sbb
adc
ds
xchg
cmp
cmp
or
cmp
pop
push
mov
repz
dec
dec
jg
xchg
sub
inc
push
push
mov
push
int
cmp
jns
adc
fwait
lret
and
dec
mov
and
lahf
cltd
pop
jns
pushl
add
aad
in
inc
sub
dec
shlb
mov
mov
push
or
or
pop
movb
test
test
sbb
mov
ss
bound
dec
fistpll
mov
data16
ds
add
repnz
jno
shr
push
iret
leave
push
ja
aas
xchg
cld
imul
hlt
in
mov
push
movsl
test
in
and
mov
out
inc
mov
das
or
sub
sub
add
xchg
sub
dec
mov
imul
std
sbb
ja
sbb
rorl
cwtl
popa
lea
dec
jae
je
imul
test
dec
pop
sarb
cli
push
dec
mov
iret
inc
div
popa
jno
fidivl
cwtl
sbb
or
add
pop
jecxz
fidivl
xchg
daa
or
pop
jmp
popa
sub
arpl
addr16
fdivrs
lea
add
fyl2x
adc
shl
push
loop
mov
mov
mov
jg
or
xorl
stc
jae
out
cmc
andb
dec
cld
cmp
xchg
mov
push
xor
icebp
shll
hlt
bound
ret
cld
jno
ss
push
mov
mov
imul
into
xor
jo
push
and
mov
test
lods
dec
popa
fcompl
adc
add
inc
mov
dec
jg
jmp
push
mov
or
pop
std
idivl
filds
fwait
sub
ja
pop
sbb
cmpsb
xchg
xchg
jb
xchg
stos
aaa
sub
lcall
and
xchg
hlt
daa
push
xor
push
lds
mov
lock
js
pop
push
sbb
pop
mov
iret
push
push
ret
cmc
xchg
cs
cmc
pushf
cmpsl
pusha
je
bound
inc
pop
sbb
jnp
je
ss
pusha
inc
dec
dec
or
mov
fwait
push
test
sub
call
fstpl
ficompl
lods
cmpsb
jb
sti
fidivs
jg
cmp
or
bound
arpl
int
jmp
out
pop
mov
out
xor
in
je
std
dec
xchg
jno
add
adc
filds
jno
xchg
cmpw
jae
and
xchg
adc
ds
popf
pop
lahf
sub
lods
push
repnz
mov
enter
test
push
aaa
in
sub
push
out
imul
rclb
test
xchg
cmc
cmp
mov
push
idivb
push
lods
pop
sbb
cmp
or
adc
inc
popa
sub
leave
call
xor
sahf
or
outsb
cld
repz
push
sub
sbb
or
or
mov
sbbb
mov
test
test
js
jecxz
or
push
pop
pop
frstor
xchg
cmp
add
popl
loope
add
xchg
out
inc
es
jb
cmpsb
cld
mov
ss
push
lret
lahf
sub
pusha
shll
sub
test
mov
push
mov
or
es
inc
fistl
jo
lahf
js
mov
popa
ljmp
mov
pop
imul
movsb
imull
arpl
xor
loop
test
std
or
clc
mov
lods
pop
inc
xchg
add
mov
icebp
test
add
ret
call
push
outsl
cmp
adc
inc
and
push
push
and
roll
mov
popf
andl
movsl
popa
imul
dec
inc
pop
loopne
push
out
inc
rorb
ds
iret
pop
dec
rolb
xchg
or
xchg
sbb
xchg
imul
mov
imul
sar
jno
ss
mov
jb
and
int
pop
loope
stos
in
mov
sbb
test
insl
lahf
in
mov
push
jb
add
push
cmpsl
lock
push
mov
xor
sti
inc
xchg
jecxz
jns
inc
pop
sub
push
inc
movsb
xchg
test
test
add
pop
and
mov
sub
adc
dec
daa
pop
fists
dec
lret
and
pop
push
ror
add
cmpsl
xorb
aad
lods
sbbl
inc
push
adc
cmp
dec
mov
cwtl
dec
cwtl
mov
out
mov
xchg
cmc
cmp
repz
xchg
test
vcomiss
mov
out
mov
mov
mov
mov
adc
and
in
aas
xchg
leave
mov
popa
call
jle
add
sub
popa
mov
hlt
cs
lods
loope
leave
jge
jne
mov
das
cmpsl
adcb
lods
lods
jg
add
push
stc
pop
mov
pop
xlat
jnp
lret
outsl
jo
cmpl
jb
inc
inc
pop
mov
push
fsub
push
fmulp
loopne
test
mov
insb
js
add
sbb
xchg
les
push
add
aaa
inc
je
inc
adc
fcmovb
std
xor
mov
pop
in
xor
fdecstp
stc
mov
in
mov
data16
dec
mov
cmp
in
fs
mov
test
fs
jns
int
push
cmc
sbb
outsb
add
shlb
inc
es
add
mov
or
xlat
push
aas
adc
or
out
xlat
inc
mov
push
inc
test
aas
pop
push
das
sbb
or
push
xlat
xchg
mov
or
and
pop
das
std
test
adc
fisttpll
pop
inc
xor
or
xchg
rorl
out
ret
cmp
lea
ljmp
loope
test
xchg
mov
addl
xchg
push
movsl
pop
mov
mov
and
lds
pop
mov
cmp
jno
push
pop
jno
leave
loopne
popf
dec
testl
cmp
daa
push
push
mul
jle
dec
jl
xor
std
push
scas
sbb
lcall
lods
cmp
test
aas
mov
stc
mov
sub
pushf
clc
mov
ljmp
outsl
repnz
push
leave
cmpsl
pop
or
xabort
fldenv
dec
dec
and
pop
or
divb
sub
sahf
cmp
and
hlt
inc
sub
dec
add
cmc
ret
mov
jmp
int3
js
push
cmp
scas
dec
ds
cmp
out
sbb
and
adc
sahf
in
add
add
fimuls
xor
jns
push
test
xchg
subl
rcrb
sub
jg
jmp
sarb
and
push
sbb
pop
mov
daa
inc
loopne
movsl
push
xor
in
cwtl
imul
or
mov
adc
lods
push
enter
inc
jbe
test
in
pop
and
ret
mov
xor
hlt
adc
mov
imul
lret
imul
mov
dec
inc
fbld
push
imul
mov
pushf
and
les
ret
jno
inc
test
or
push
gs
addr16
or
test
push
and
movsb
subb
repz
push
jne
lcall
mov
push
cltd
ds
shl
xor
mov
mov
jns
sub
pop
arpl
jl
scas
mov
pusha
test
out
cmp
push
repz
rcll
out
lods
sbb
sbb
sub
sahf
mov
push
fimull
out
outsb
fstps
add
ja
cmp
outsb
sti
cmp
sti
mov
stos
imul
dec
cmp
subb
jmp
and
jae
mov
jo
subb
jle
cli
jl
mov
out
xor
out
scas
xor
mov
vmovups
clc
adc
arpl
cmp
bound
inc
sub
mov
push
mov
jb
fwait
out
sarl
push
jno
test
daa
imul
mov
jecxz
lret
daa
sti
sbb
lods
mov
jle
sub
sub
fists
into
stos
sbb
lret
arpl
dec
cld
sub
mov
cltd
sbb
push
push
aaa
cli
out
ret
inc
pusha
and
clc
mov
outsl
sub
int3
mov
in
mov
xchg
jmp
cs
mov
mov
fstl
ja
pusha
mov
or
sub
mov
xchg
adc
adc
xchg
push
mov
adc
mov
sub
sti
pop
mov
ret
adc
aam
adc
ucomiss
mov
lods
aas
mov
jmp
out
iret
and
ret
pusha
mov
repnz
and
fcmovnb
jb
pop
jge
lds
pop
mov
das
xchg
pop
std
inc
push
movsb
stc
xor
dec
in
add
inc
push
adc
or
test
xchg
dec
popf
jb
cmp
in
xor
add
push
clc
pop
push
add
bound
dec
xor
mov
enter
lret
mov
pop
jnp
nop
push
testl
pop
or
jne
xor
push
loope
and
je
xchg
dec
jo
jae
or
mov
xor
test
mov
es
mov
inc
sbb
das
xchg
inc
mov
ja
push
lods
inc
mov
xchg
filds
xchg
shrb
loopne
cmpsb
in
fdivl
clc
adc
das
push
pop
pop
or
mov
das
pop
push
popa
ss
mov
leave
lods
pop
enter
lods
xor
or
jle
ds
adc
repnz
dec
enter
sbb
cmc
cmpsb
lds
loop
and
pusha
imul
add
xchg
ljmp
mov
push
sbb
cmp
pavgw
xchg
cld
cmp
dec
jg
mov
inc
subl
enter
shll
mov
cmp
ljmp
cltd
test
cmp
pop
xchg
add
or
int3
outsb
cltd
inc
in
jnp
data16
repz
jns
mov
push
pop
mov
mov
roll
and
cltd
pop
push
repz
jbe
pop
pop
loop
push
cmp
sub
adc
mov
mov
or
ja
mov
push
shrl
fsubrl
ss
std
cmp
cmp
push
das
xlat
xchg
ret
cmp
stc
or
mov
arpl
adc
jge
dec
pop
rcrb
addr16
je
adc
mov
pushf
mov
loop
pushf
inc
mov
dec
pop
sbb
pop
or
mov
out
mov
ret
ss
daa
addb
testb
mul
rclb
repz
sar
dec
pop
gs
stos
jecxz
clc
subl
loope
fsubs
mov
fistpll
loop
sbb
and
loope
xor
jl
and
std
stos
out
cmp
xchg
adc
mov
inc
sbb
daa
jne
dec
out
cmp
stos
leave
das
fmull
xor
push
jne
fs
mov
push
sbb
and
add
inc
push
repz
sbb
enter
mov
mov
outsl
sahf
pop
dec
call
dec
add
pop
pop
cmc
lcall
fcoms
bound
add
xor
icebp
mov
mov
mov
add
insl
arpl
lds
adc
xchg
cltd
stos
frstor
push
and
sbb
lret
mov
sub
ja
daa
jl
cmp
scas
dec
pushw
dec
xchg
jmp
fcoml
scas
in
mov
mov
sets
mov
jge
inc
into
xchg
adc
jb
cltd
orb
add
nop
rcrl
and
cmc
stos
mov
xlat
mov
shrb
xlat
subb
pop
stc
fdiv
mov
sub
mov
fistl
notl
jb
cmp
lods
mov
cli
imul
cmpsl
fbld
ror
int3
les
test
insb
mov
push
adc
cltd
mov
in
fs
pusha
fidivs
in
lea
enter
push
out
imul
ljmp
mov
movsb
int
and
gs
inc
into
pop
mov
scas
cwtl
sarb
scas
push
jbe
xchg
inc
sbb
daa
push
xchg
out
sahf
repz
jbe
pop
fldl
js
popa
mov
scas
imul
xchg
pushf
add
inc
shll
or
movsl
xchg
cmp
and
xchg
add
mov
imul
repz
in
mov
adc
inc
leave
sub
mov
cltd
xchg
mov
test
dec
test
div
and
stc
lret
stc
cmovp
xchg
adc
pop
lahf
and
in
push
mov
arpl
clc
dec
inc
lret
push
ljmp
add
adc
fnstsw
or
sbb
ds
mov
cmp
jle
mov
push
cmp
push
mov
dec
push
mov
jecxz
pop
mov
mov
ds
mov
insb
dec
in
inc
dec
mov
sahf
sub
jne
lds
cmpb
pop
popf
cmpsb
mov
dec
fsts
sub
lock
rolb
jg
mov
cs
push
push
mov
test
adc
xchg
sub
movsb
ficompl
mov
xchg
popf
push
sub
sbbl
pop
les
adc
lods
jnp
adc
inc
repnz
mov
pop
in
subl
fldenv
mov
gs
cmp
xchg
dec
shrl
adc
pop
sub
in
clc
sbb
or
daa
test
test
adc
and
mov
cli
test
test
cmpsl
arpl
pop
push
lds
js
add
mov
sbb
dec
jp
push
xor
mov
mov
lds
mov
adc
dec
inc
mov
lcall
out
and
mov
mov
sbb
or
data16
mov
insl
or
pop
cwtl
test
cltd
pop
xlat
mov
fldt
inc
push
adc
mov
fldt
ret
pop
les
jne
adc
fs
cmp
loopnew
lds
mov
dec
lds
pop
loope
sbb
dec
and
dec
int
out
cmpsb
dec
fwait
xchg
pop
out
das
push
cmp
push
xchg
jecxz
ljmp
sti
les
inc
pop
adc
mov
addr16
arpl
xchg
out
movsb
adc
ret
push
orb
push
or
fisubrl
xchg
stc
mov
push
les
sub
mov
mull
adc
inc
jmp
mov
fdivrs
scas
and
dec
dec
push
mov
pusha
popf
gs
scas
inc
clc
adc
outsl
je
adc
les
sub
and
cmpb
jl
imul
cmp
jge
mov
add
or
call
jmp
lret
insl
outsb
pop
nop
in
mov
das
bound
sub
scas
xchg
nop
ds
inc
les
xcrypt-ofb
cmpsl
cs
aaa
es
fadds
clc
mov
pop
rorb
xchg
cwtl
mov
add
push
push
push
ret
pop
aaa
mov
ficoms
test
lret
out
and
dec
test
es
xor
mov
sbb
cld
enter
shll
xchg
push
sbb
push
lea
push
cmp
jge
bound
bound
inc
sub
pop
icebp
fsubs
jl
cwtl
and
mov
loop
mov
inc
es
sub
sub
in
pushf
xchg
pop
xchg
mov
adc
rcrl
xor
inc
pop
pop
addr16
das
test
inc
lock
push
cld
outsl
int
pop
pop
xchg
jbe
xor
sub
add
xchg
loop
dec
in
pop
pop
jnp
fwait
jo
and
ljmp
pop
cmp
mov
mov
push
cmc
inc
pusha
sbb
push
pop
sahf
test
test
lods
mov
inc
cmc
scas
cmpsl
dec
inc
jne
cmp
push
lea
cmp
and
xor
jge
ljmp
push
lcall
jb
jge
mov
insl
cpuid
test
add
cmp
mov
outsb
mov
xchg
js
ja
dec
sbb
pop
mov
lods
es
rcrl
ds
xchg
dec
sbb
aad
and
movsl
xchg
popa
cltd
incl
xor
cmp
adc
imul
xchg
lret
aaa
movsb
mov
shll
test
je
lods
push
mul
and
pop
add
ja
pop
repnz
mov
ljmp
cld
lret
inc
sbb
popa
fwait
sub
pop
cmp
mov
mov
add
les
aad
mov
xlat
cld
adc
jo
lcall
fnstenv
out
and
std
shrl
aas
dec
dec
inc
inc
mov
adc
push
jns
pop
stos
mov
mov
icebp
cmpsb
mov
in
sbb
fs
pop
mov
push
insb
stos
push
in
push
gs
fdiv
repz
or
add
lret
inc
popf
imul
dec
mov
fisubrs
int
adc
stos
pushf
and
in
ret
sbb
in
sbb
bnd
loopne
icebp
xchg
test
ljmp
cld
daa
int
pusha
pop
hlt
cmpsb
dec
inc
fcmovu
aas
sub
xchg
adc
xchg
daa
push
pushf
inc
dec
arpl
daa
fxch
outsb
add
mov
cmpsl
push
hlt
pop
and
inc
or
scas
pop
push
jg
test
nop
mov
aas
mov
add
or
cmc
dec
std
adc
mov
or
mov
loope
popf
inc
xchg
add
pop
daa
jg
lods
scas
aaa
shll
pop
cltd
mov
cmpsl
movl
popf
jle
sub
inc
mov
leave
pop
xlat
loope
or
scas
or
sub
mov
cmp
aam
cmpsb
fwait
push
push
vpsrld
scas
ss
mov
movsb
fadd
daa
cld
stc
andb
dec
cmp
cmp
pop
mov
mov
mov
icebp
movsl
xchg
jmp
and
fucom
inc
sbb
test
rcrb
adc
push
mov
push
les
cmp
xchg
push
xchg
andl
dec
loope
fidivrl
in
fidivrs
jo
daa
sbbl
mov
ret
sub
lret
xchg
es
jno
jmp
inc
lds
mov
mov
scas
mov
pop
lock
adc
cmp
in
pusha
pop
mov
add
fcoml
mov
pop
addr16
pusha
sbb
mov
xchg
jae
das
test
mov
lret
jae
push
push
cmpsb
pop
fld
and
movsb
jae
cs
int
in
sub
icebp
pop
out
xor
mov
xor
add
aaa
insl
in
jmp
mov
push
add
stos
outsb
fimull
in
fwait
add
xor
pop
lcall
add
adc
sub
pop
cmp
xlat
xchg
nop
fstps
jo
outsb
pop
and
loope
sub
cmp
pusha
cmpsw
dec
loop
nop
pop
mov
arpl
pop
push
dec
mov
or
fwait
or
mov
jg
aad
xor
adc
mov
test
xor
imul
sbb
test
iret
ja
into
sbb
sbb
adc
push
adc
adc
shrl
pop
fildl
dec
jecxz
inc
das
mov
enter
pop
sbb
cs
cmpsb
adc
jno
jno
push
mov
and
pop
rcrl
aam
mov
mov
xor
les
inc
pushf
add
pop
in
cs
xorl
stc
push
mov
sbb
xor
jecxz
daa
insl
or
jmp
jp
gs
add
jae
negb
cwtl
loop
nop
iret
mov
or
pushf
adc
xor
push
ficoms
pushf
fdivp
lret
cwtl
shl
dec
loopne
sti
cmp
sti
insb
loope
enter
cltd
mov
and
aad
arpl
div
push
and
scas
daa
outsb
data16
add
fsubp
or
pop
call
loope
mov
sub
dec
dec
sti
in
insb
mov
and
cmp
scas
mov
xchg
stos
dec
mov
bound
cld
adc
add
aaa
adc
dec
adc
mov
sub
mov
popf
jge
xchg
ss
das
test
test
inc
iret
js
fwait
mov
imulb
dec
call
lods
insl
repnz
hlt
mov
lret
xchg
ficoml
in
cwtl
sub
pop
mov
push
mov
cmp
cmpsl
push
rcl
cwtl
sub
das
cmp
mov
jae
mov
adc
lods
adc
push
sbb
inc
or
jb
xchg
outsb
jp
push
cmp
jecxz
add
jns
ss
jae
mov
xor
dec
inc
icebp
lea
dec
fs
leave
and
addr16
pop
cld
sub
popa
jo
rcl
push
xchg
roll
mov
inc
push
mov
leave
pop
cld
add
scas
xlat
pop
sbb
jg
jnp
fwait
insb
test
and
mov
pop
fidivl
ja
and
jge
int3
xchg
jge
mov
adcl
fwait
adc
add
mov
lret
aas
and
aam
adcb
insl
js
notb
xlat
sbb
push
add
data16
xor
dec
sbb
rolb
dec
dec
outsl
and
flds
jnp
add
inc
pop
insb
or
leave
xchg
mov
and
mov
std
mov
xchg
sub
mov
xchg
and
out
fwait
shrl
fiaddl
insl
or
test
call
pop
in
jne
adc
mov
xchg
pop
popa
push
xchg
cmc
xchg
fsubr
mov
xor
fmull
out
push
sub
clc
aaa
in
jecxz
notb
inc
sbb
hlt
js
aas
sbb
jb
sti
fcmovbe
movsb
push
outsb
cs
mov
pushf
xor
es
xor
in
pushf
xor
lret
adc
mov
sub
outsb
xor
mov
bound
repnz
pop
mov
arpl
xchg
cmp
push
dec
fs
jmp
int3
xchg
pop
sub
or
insl
loope
fildll
inc
popl
stc
mov
jecxz
imul
pushf
mov
add
xchg
mov
mov
rcrl
int
push
sahf
xchg
jno
pop
push
lods
cmp
jg
dec
push
aam
or
es
cmp
adc
clc
push
xorb
imul
mov
mov
pop
icebp
iret
sbb
xchg
sub
stos
rcll
mov
mov
outsb
pop
push
xor
sarb
outsb
test
adcb
gs
jmp
and
call
add
ficompl
aam
push
xlat
stos
fwait
dec
mov
lret
pop
in
push
and
xor
adc
add
jne
mov
scas
sub
or
or
mov
lcall
lcall
dec
dec
shlb
fsubl
scas
cs
mov
stos
aam
fstpt
pushf
mov
fptan
xchg
xor
fdiv
xchg
dec
orl
push
sub
xor
or
fsubrl
popa
into
push
cli
fs
and
cmp
jle
mov
loope
fadd
aam
mov
inc
imul
testb
fidivs
in
add
lahf
add
mov
insl
jb
loope
mov
cmp
data16
adc
fidivrs
test
in
add
js
mov
or
jle
aas
outsl
dec
inc
test
dec
sub
mov
or
xor
in
leave
push
mov
add
outsb
dec
pop
dec
dec
and
add
xor
or
mov
ret
pop
loop
jae
mov
fimuls
out
popf
roll
push
lds
test
into
aam
js
out
sub
sbb
push
cmpsb
xchg
add
fcmovnb
insb
xchg
xchg
or
jne
sbb
jg
cmpsl
filds
cmc
push
movsl
in
add
lret
and
mov
and
mov
aas
mov
inc
jns
imul
push
mov
call
imul
cmp
bound
xchg
je
mov
mov
pop
loope
scas
jbe
mov
xchg
fwait
outsb
sbb
cmp
mov
xchg
and
iret
inc
notb
stos
insl
out
sub
adc
lcall
int
pop
or
mov
rorb
rcrl
loop
sti
negl
lcall
dec
popa
sub
sahf
sub
mov
inc
ss
pop
inc
cs
mov
jmp
in
scas
lea
sub
aad
nop
xlat
bound
lds
lods
mov
xor
int
pop
xlat
enter
xlat
mov
insb
fs
pop
lods
dec
sbb
cmpsb
pop
je
mov
fcmovbe
pusha
mov
xchg
and
mov
jl
adc
cs
mov
and
cmpsb
adc
dec
in
roll
insl
sub
jno
loope
lods
ss
std
icebp
or
imul
adc
call
clc
pop
mov
mov
xor
cmp
mov
or
cmp
ljmp
iret
adc
mov
iret
pop
mov
imul
mov
xchg
lds
stc
fidivl
adc
cmova
pusha
pop
outsl
nop
xchg
add
sub
adc
gs
rolb
push
aaa
mov
lea
dec
sub
and
add
cmp
pop
jae
push
popf
xorl
mulb
jo
mov
stc
test
insb
jb
lock
loop
insb
cli
fwait
and
push
mov
fidivrl
mov
mov
data16
mov
mov
dec
fimuls
xor
stos
popa
pop
xchg
movsl
outsl
fs
xchg
lcall
idivb
mov
mov
scas
ds
data16
repnz
push
mov
shlb
pop
and
pop
jecxz
fcoms
adc
mov
subb
xchg
ljmp
test
jp
add
loope
xor
add
jg
repz
push
popa
mov
xor
dec
les
faddl
push
or
xchg
aaa
or
mov
sar
test
lcall
mov
sbb
and
int3
xchg
pop
mov
ss
xor
mov
int
fs
sub
sarl
rolb
add
mov
inc
jmp
jl
scas
subl
es
cs
jns
movb
push
xchg
daa
push
std
rorb
lods
das
repz
xor
mov
jo
or
cmp
movb
lock
and
hlt
sahf
ret
imul
pop
mov
add
dec
add
cmp
outsb
or
rorb
push
maskmovq
imull
or
rclb
xor
test
addl
pop
aas
cmp
outsb
imul
fwait
repnz
out
out
mov
and
xor
or
pusha
js
add
aas
dec
push
xor
cmc
push
jne
loop
pop
jns
sbb
xlat
or
mov
mov
fstps
push
push
pop
cld
jo
push
pop
push
and
ffree
shrb
fs
std
lods
clc
cmc
addr16
mov
adc
out
or
call
mov
push
cmc
push
xchg
cmpsl
lret
rolb
pusha
cmc
and
lock
mov
rol
ds
mov
add
pop
cmp
jno
cmp
in
je
pop
insb
mov
dec
mov
pop
lahf
mov
in
fidivrs
je
xchg
lods
ret
aas
imul
xchg
adc
jbe
ss
lahf
icebp
imul
popl
imul
out
out
sbb
pushf
arpl
test
jecxz
enter
sti
cwtl
push
fadd
jle
pop
call
rclb
loop
cld
adcb
mov
push
rcrb
je
pop
adc
frstor
push
in
aaa
dec
cmp
jg
push
adcl
dec
push
fisttpll
fimull
ds
push
jne
push
scas
or
ja
outsl
or
ret
mov
shlb
mov
ss
add
xchg
add
xchg
dec
aam
or
loopne
clc
repz
sub
cmpsl
inc
adc
xor
sbb
sbb
push
mov
dec
das
and
cwtl
mov
stc
or
cs
ss
cld
loopne
and
test
imull
mov
sbb
mov
lahf
stc
xchg
pop
icebp
adc
movb
jle
fdivr
push
xor
cmp
mov
jle
xchg
xor
mov
ret
xchg
sub
xchg
mov
xlat
jecxz
das
andb
inc
sbb
adc
mov
push
enter
outsl
fstps
cmp
inc
sub
xor
aam
imul
add
mov
adc
mov
mov
xchg
lds
mov
sar
je
add
stos
bound
scas
mov
shrl
dec
add
fsubrs
out
cltd
xchg
and
hlt
test
std
and
inc
add
push
xchg
sti
cmp
push
adc
fs
std
mov
sbbb
jnp
outsl
std
std
push
mov
mov
pop
mov
icebp
in
and
and
out
mov
int
gs
in
adc
mov
popa
lret
adc
jmp
jne
pop
fistpl
aaa
mov
movsl
add
and
xchg
ja
push
sbb
lds
fistpll
test
sti
mov
out
adc
push
xor
cmp
jle
adc
xchg
sbb
int3
nop
jne
xlat
pop
das
mov
dec
push
adc
test
into
cmp
add
negl
inc
js
and
imul
aas
dec
movsl
jne
dec
insl
icebp
push
nop
je
ror
pop
push
xchg
rcrb
cmp
dec
mov
enter
je
and
push
xor
jmp
sarl
inc
and
mov
jbe
jge
jecxz
cmpsl
mov
adc
jns
jl
sarb
divl
mov
inc
xchg
push
cmp
xor
cmpsl
push
lods
xchg
pushf
cmc
repz
mov
jb
jmp
jno
push
sbb
cmp
rorl
add
hlt
push
push
push
xchg
lock
sub
cltd
ss
push
sub
sub
stos
shll
xchg
pop
push
cmc
dec
jecxz
mov
daa
or
in
jae
add
push
dec
add
sbb
pushf
jb
pop
inc
popf
rcrb
push
and
or
rcrb
sbb
scas
lret
jl
inc
sub
inc
ds
scas
adc
ret
adc
mov
dec
mov
dec
data16
xor
outsb
shl
adc
jl
test
mov
and
pop
aad
loop
fadds
sar
sub
cwtl
psllq
loopne
mov
pop
pop
mov
mov
cmp
cmp
xchg
mov
mov
arpl
inc
cmp
outsl
aad
xchg
or
dec
lcall
dec
fdivl
mov
insl
mov
cwtl
ljmp
outsb
test
in
out
push
or
lods
movsl
js
or
jle
mov
mov
push
mov
and
mov
mov
add
nop
std
and
jmp
sub
mov
inc
push
dec
aaa
jnp
adc
cld
pop
andb
lcall
push
cmp
nop
rclb
cmc
aaa
push
dec
inc
nop
jns
jno
pop
sbb
cwtl
xor
jno
insl
dec
push
out
mov
sti
cmp
mov
mov
dec
popf
test
arpl
adc
mov
movb
cltd
mov
lock
imul
pusha
add
daa
xor
ud0
iret
xchg
aaa
dec
stc
lods
mov
lock
mov
js
lods
adc
sahf
loopne
sbb
jae
cmp
or
jle
sub
mov
in
jge
and
notb
pop
jns
mov
cmp
mov
mov
out
cmpb
xchg
xor
jb
call
dec
or
mov
dec
dec
sti
xchg
repz
les
stos
cmp
sub
jecxz
iret
rolb
add
shll
mov
jl
and
adc
inc
mov
pop
loope
mov
mov
jp
sub
insl
fwait
sbb
mov
jle
jbe
inc
aas
rorb
test
hlt
sbb
pop
mull
into
xchg
and
fldenv
popa
addl
subl
sbb
orl
loop
lock
rcl
inc
mov
insb
xchg
jmp
divb
push
js
sub
ret
sbb
test
cmp
imul
push
dec
ss
xor
sbb
not
pushf
adc
loope
mov
xor
int
pop
cmpsl
in
adc
popl
mov
lock
pop
mov
dec
adc
repz
push
je
xor
int
jl
push
rcrl
sbb
dec
cmpb
insl
int3
mov
outsl
jge
cmpsl
imul
int
xchg
std
dec
pop
loope
jle
jnp
popf
sbb
sbb
pop
mov
cmpsb
aaa
setl
xlat
mov
add
mov
cli
aad
inc
daa
sub
lcall
dec
out
pop
int
outsb
jp
and
insl
mov
sub
push
inc
subb
xchg
and
or
inc
and
xchg
fdiv
mov
xchg
mov
or
inc
out
mov
cmpsb
icebp
mov
pushf
jbe
pop
testb
xchg
bound
inc
fcompl
mov
jbe
popf
shlb
stos
dec
addr16
les
push
cmp
cmp
clc
je
sarl
insl
fdivp
pop
lahf
pop
inc
adcl
and
in
clc
icebp
lret
mov
call
in
or
jae
ja
ljmp
les
mov
adc
out
lahf
mov
xchg
lcall
or
jno
mov
call
add
int
outsl
cmpb
cmpsb
cmp
mov
ret
sbb
and
insl
aaa
mov
daa
sbb
ret
test
add
dec
xchg
ret
pop
fcomi
push
inc
pop
dec
push
or
xchg
add
sub
imul
stc
cmpsl
inc
mov
test
aam
xor
stc
push
int
mov
jo
loopne
je
out
mov
push
loop
pop
cmp
cmp
fld1
adc
lret
test
stc
pop
jb
sarb
popa
sbb
push
cmp
shrb
mov
nop
mov
and
mov
sub
mov
xor
test
lock
add
sarl
pop
or
xchg
mov
stc
mov
shrb
insl
int
jle
aam
pop
rorl
xchg
cld
pop
cmp
add
xor
imul
mov
or
ljmp
out
or
insl
test
pop
mov
movsb
dec
gs
pop
aaa
mov
inc
dec
sbb
insl
mov
xchg
inc
pop
pop
push
cltd
xor
loope
outsl
cmpsl
cld
jge
pushl
xchg
sub
inc
jnp
push
push
inc
sbb
lds
inc
sub
pop
jl
ljmp
xchg
inc
cmpsl
fisubrl
adc
cmp
xchg
fwait
aam
insb
mov
rcr
inc
movsl
jecxz
cmp
arpl
in
aad
mov
fsts
cmp
lret
aad
sahf
test
mov
decl
cli
leave
ljmp
movsb
in
addr16
shlb
add
fsubl
xor
push
add
mov
out
xorb
xor
push
lcall
loopne
sub
xorb
add
loop
sbb
pop
nop
adc
stc
xchg
pusha
call
push
lcall
les
outsl
xchg
cmp
sub
push
push
ret
ror
enter
add
inc
sub
mov
scas
out
jbe
cmpsb
icebp
jne
dec
jmp
mov
lds
jno
jmp
lahf
mov
xchg
sub
jl
jp
mov
jle
jecxz
addr16
test
fsts
insl
add
jae
dec
mov
adc
add
adc
rcpps
incl
dec
out
xor
fcmovnu
imulb
sub
addr16
mov
test
sub
adc
add
or
in
xor
push
notb
out
mov
cmpl
and
test
sbb
ds
in
stc
sbb
or
push
iret
mov
jle
add
je
or
dec
shrd
inc
rol
je
mov
into
mov
mov
sbb
fildl
scas
in
pushf
shl
ret
mov
outsb
add
dec
aaa
mov
out
push
scas
clc
sbb
xchg
push
xor
in
dec
repz
cmp
sbb
sbb
and
pop
pusha
lcall
xor
lcall
mov
mov
and
fdivrs
std
or
mov
xor
hlt
cmp
rorb
pushl
cmp
adc
mov
jbe
and
dec
les
iret
sbb
mov
add
es
xchg
call
nop
push
cmp
pop
add
roll
cmp
inc
stos
pop
or
mov
in
int
sbb
mov
lcall
ljmp
sahf
nop
repz
inc
mov
push
or
or
push
mov
pop
imul
stos
into
mov
bound
dec
stc
jns
das
jg
jmp
or
add
fisttpll
pop
mov
icebp
xchg
aas
fstl
jp
bound
bound
test
mov
fs
sub
mov
jne
cwtl
add
add
jp
cld
inc
push
jnp
adc
cs
and
orl
aas
mov
mov
sub
jns
out
js
jl
adc
scas
add
mov
js
jns
inc
xlat
fwait
lea
lods
sub
inc
mov
cmc
repnz
push
xchg
mov
mov
inc
adc
xchg
clc
fimuls
push
pop
lds
mov
push
fwait
outsb
mov
cmpsl
jmp
popa
lret
xchg
nop
rolb
xlat
rorl
sub
xchg
cmp
or
cmpsb
sub
mov
xchg
push
stos
arpl
add
test
arpl
add
mov
inc
push
and
ret
mov
outsl
push
in
addr16
mov
out
rorl
test
mov
inc
adc
sbb
jnp
push
fstpt
cmc
sahf
pop
shll
adc
mov
pop
push
xchg
cmpsl
cmp
cmp
add
aaa
push
dec
repnz
dec
clc
adc
jl
outsb
cld
lea
test
cmpsl
cmpsl
inc
jg
ss
cld
cmp
repnz
insb
sbb
or
pushf
jp
mov
pop
sbb
inc
mov
call
call
js
psubd
mov
dec
cmpsb
inc
push
cmp
test
sub
xchg
outsl
mov
outsl
sub
fnstenv
std
je
fs
in
inc
add
sbb
and
push
jnp
fstl
cld
lcall
call
ret
mov
fistpll
test
out
movsl
lock
loope
jo
adc
cmp
sub
xchg
hlt
lret
or
lods
xor
pop
in
push
dec
cmpsb
out
lcall
adc
pop
idivb
aam
dec
inc
push
int3
mov
int3
scas
lret
ficoms
mov
idivb
and
mov
and
sbb
push
adc
ret
rcr
insl
push
icebp
leave
pop
inc
stos
xor
insl
or
lods
xor
fucomp
adc
stos
ja
in
shll
jmp
lcall
cmc
mov
mov
movsl
lcall
icebp
sub
clc
pushf
je
mov
mov
or
jl
popa
adc
notl
xor
test
leave
stos
xchg
push
or
cs
pop
pop
fidivrl
cmp
jbe
add
in
xor
and
xchg
inc
xor
imull
test
popf
jbe
xor
das
test
orb
push
sarl
and
cmpsb
pushf
pop
add
xor
mov
or
pop
adc
adc
daa
sahf
mov
cmp
xchg
scas
leave
add
and
and
inc
data16
aaa
mov
cmc
or
add
lea
bound
jmp
repz
or
fcoml
les
cmp
inc
sti
fnsave
fisttpll
jnp
sbb
sub
add
pop
icebp
repnz
jg
push
jbe
stos
enter
push
inc
das
pusha
add
xchg
or
jge
out
push
and
mov
addl
mov
shll
clc
aad
mov
scas
jae
imul
cli
out
dec
dec
pop
xor
insb
cmp
shll
xor
scas
mov
cmp
pop
scas
push
push
adc
mov
adc
push
lds
pop
aam
loope
test
je
pop
stos
inc
std
or
push
hlt
pop
xor
imul
addr16
mov
shlb
nop
xchg
pushf
in
std
bound
add
and
jo
add
shlb
cmp
clc
mov
mov
shrb
push
outsl
mov
std
or
mov
pop
xor
das
adc
pop
out
pop
icebp
pushf
test
push
lods
sub
ret
or
jns
xchg
push
and
testb
call
or
xchg
mov
mov
xor
ret
or
adc
push
lods
daa
mov
aas
pop
and
test
cmp
jnp
cmp
push
insl
mov
pop
aam
dec
jl
sub
stos
daa
iret
sub
or
scas
xchg
inc
mov
aas
out
mov
jbe
testb
rcrb
sbb
jno
rorl
jae
lea
int
rcrl
aaa
nop
cwtl
pop
or
add
push
shll
rolb
pop
cwtl
jecxz
in
jb
add
pusha
fidivrs
std
into
fildll
mov
or
inc
stos
pusha
sub
out
push
cmc
mov
and
popl
mov
jl
mov
imul
into
mov
add
cld
in
movsl
and
mov
sbb
adc
sbb
popf
aad
enter
aam
sub
lea
or
adc
sbb
mov
fwait
and
mov
daa
inc
das
pushf
or
cmp
sub
add
mov
add
test
inc
shl
pop
xchg
stc
add
push
dec
out
sbb
jns
rcr
push
adc
pop
xchg
jecxz
daa
outsb
ficoml
pushf
xor
lret
movsl
lods
lds
cmp
xchg
adc
in
xor
lds
xor
cmp
cmp
andl
mov
aas
adc
sbb
sti
adc
jne
mov
cli
sub
jmp
add
jne
fidivs
test
test
lahf
das
out
sbb
pop
pop
mov
push
xchg
xchg
push
mov
lods
xor
push
lds
and
add
push
sahf
pop
cmp
cld
push
inc
leave
mov
aad
inc
sahf
inc
nop
shlb
dec
hlt
repnz
add
cmc
mov
movsl
int
jno
mov
je
into
scas
push
mov
xchg
mov
int
cmc
fs
div
shll
int
add
xchg
std
push
xchg
addr16
inc
sti
mov
pop
push
fiadds
jmp
imul
xor
pop
jb
xor
outsb
int3
aas
ret
push
insb
push
mov
cmp
scas
xchg
cmp
add
lahf
shll
out
mov
adc
fists
push
movsb
xor
mov
or
jg
pop
cwtl
cltd
jnp
jp
out
pushf
leave
add
enter
cld
inc
and
aaa
push
xchg
cwtl
leave
shlb
gs
lret
cmp
std
movsb
dec
ss
adc
mov
mov
xchg
bound
sbb
call
rolb
int
sbbl
aam
lahf
mov
enter
adc
aad
pop
cmpsb
mov
fstps
adcl
pushf
jmp
bound
jp
xlat
pop
leave
mov
and
sbb
sbb
or
cmp
xor
sarl
popf
mov
sarl
js
testb
lods
jnp
out
adc
neg
sub
mov
jp
push
or
mov
mov
lcall
aad
scas
jmp
sbb
arpl
mov
cmp
lahf
push
push
pusha
into
adc
pop
or
mov
jbe
jp
xlat
iret
pop
inc
lret
test
mull
iret
add
pushf
push
xchg
mov
outsl
jecxz
mov
cmpsb
call
sbb
les
jo
test
mov
inc
rcrl
pushf
sbb
dec
fs
ret
sbb
pop
cmpsl
aaa
imul
push
xlat
arpl
jge
sbb
or
adc
sbbb
push
cmpsb
pushf
jp
pop
pusha
or
mov
mov
dec
aas
aad
mov
and
cld
popa
je
call
xor
ja
cmc
inc
pop
mov
insl
nop
add
sub
jbe
cmp
pop
imul
inc
cmpsb
mov
outsb
inc
xor
outsl
xlat
pop
mov
add
test
hlt
test
aaa
inc
pop
rcll
inc
dec
inc
fwait
pop
repz
rcrl
and
push
jg
inc
cli
stc
pop
hlt
mov
inc
jne
jecxz
or
in
inc
sahf
aas
sub
push
xchg
sahf
sbb
dec
and
mov
pop
ja
test
inc
cmc
fdivrl
xchg
push
mov
mov
sbb
lret
dec
ret
or
sti
mov
lods
push
push
imul
leave
mov
xchg
pushf
and
dec
mov
arpl
icebp
mov
or
xor
pushf
sbb
push
fnsave
imul
lods
mov
jecxz
and
jp
mov
inc
lock
shll
bound
add
vphadduwq
movsl
fwait
pop
test
rolb
fwait
add
jecxz
dec
adc
sub
sbb
push
sub
jae
jmp
add
outsl
fsqrt
ret
inc
cmp
push
mov
jl
fsubr
jp
ret
cs
pop
lret
mov
stos
mov
pop
arpl
jbe
cltd
mov
push
lea
scas
add
ror
bound
jmp
pop
mov
or
cli
in
lahf
imul
mov
pop
aam
rol
mov
inc
ret
hlt
nop
dec
cwtl
js
dec
ror
shr
gs
push
cltd
or
push
leave
xchg
pop
lret
rcrl
inc
insb
sub
adc
fs
fstps
movsb
fcomp
pop
xlat
inc
xor
sub
mov
inc
xchg
jl
push
mov
mov
push
jae
int
orl
gs
pushf
mov
pop
jmp
out
inc
ror
cmc
xlat
shlb
fsubl
mov
in
cmp
or
mov
outsb
mov
sarb
push
pop
and
es
jl
loopne
and
cmc
push
dec
mov
fs
sar
mov
push
sub
repz
jae
pop
shl
cli
push
pop
mul
sbb
vdivsd
cmp
cld
in
mov
icebp
sub
inc
mov
scas
mov
ret
sub
popf
sar
xchg
sub
aad
mov
mov
movl
jg
xor
xor
pop
jp
shl
stos
js
xchg
push
out
jns
mov
pop
push
and
cmpsb
rol
fs
aas
inc
rcl
xor
adc
dec
and
pop
ret
mull
nop
push
lds
mov
lds
roll
mov
test
inc
mov
or
daa
cmp
or
jbe
imull
test
jmp
insb
ds
inc
fstpl
rsqrtps
pop
push
adc
xor
and
jb
test
and
jge
imul
xor
in
pop
je
cmp
in
in
adc
xlat
insl
add
mov
shl
insb
inc
pop
xchg
xor
sbb
pop
insb
mov
lret
les
cmp
sbb
aam
cmpsb
sti
cs
xor
cmp
adc
outsb
pop
xorb
out
or
xchg
cmp
jge
es
scas
pop
repnz
pop
dec
aaa
dec
in
fdivrp
and
mov
loope
lret
sub
movsl
or
out
xor
add
stos
lods
ja
test
clc
dec
xlat
sub
nop
sub
out
shll
je
adc
adc
fnstcw
mov
mov
sub
sub
dec
or
in
jb
ret
mov
mov
push
jb
push
mov
push
xor
add
scas
pusha
push
imul
inc
xchg
sbb
and
pushf
arpl
sti
sbb
jmp
in
rep
stos
clc
popf
lea
xchg
jl
adc
dec
sub
sbb
lods
add
dec
dec
xchg
outsl
xchg
pop
lret
mov
dec
xor
cwtl
push
push
adc
notb
sub
sub
cli
mov
fsubrs
and
fcoms
cli
sub
inc
xchg
cmpsb
cmpsl
ss
xchg
xchg
aam
lcall
push
jne
sbb
jb
js
scas
sub
stos
and
mov
push
or
bound
imul
push
mov
push
mov
mov
les
sub
ljmp
sub
std
push
sub
loop
dec
lcall
lahf
hlt
popf
fwait
xor
sub
out
push
sub
cltd
cmc
pop
adc
mov
sub
test
ret
cltd
fisttpl
mov
jl
push
inc
aad
repnz
dec
inc
pop
cli
inc
shrb
outsb
mov
lcall
dec
add
push
inc
dec
lahf
push
jecxz
add
incb
sbb
mov
sbb
inc
mov
sub
sub
jbe
add
sbb
dec
iret
rclb
sbbl
pop
lods
test
mov
add
jo
and
iret
cwtl
xor
add
ret
mov
or
std
ljmp
push
in
fistl
xchg
push
ds
testl
addl
or
jae
rol
add
sub
push
inc
mov
repnz
dec
cmp
jnp
pop
lcall
push
adc
stc
sub
mov
lret
insl
xor
mov
dec
inc
out
loope
or
inc
js
inc
mov
xchg
add
stos
pop
cli
push
cmp
lds
cmpl
loope
fwait
out
data16
sbb
test
imul
cld
rolb
sbb
rclb
insb
rcrb
js
fwait
sti
stos
inc
sahf
lods
fwait
dec
push
and
mov
cmp
pop
icebp
shlb
add
enter
xor
xlat
clc
or
frstor
jle
idivl
xchg
gs
push
cmp
rcrl
sbbl
imulb
fstp
push
cmp
xchg
lahf
hlt
add
lret
xchg
fsubl
rclb
mov
cwtl
into
stos
mov
inc
sub
imul
pop
int
movsb
prefetchw
pop
test
pop
bnd
rcl
and
push
push
fiaddl
lret
pop
push
mov
push
out
sbb
pop
adc
test
xor
jno
in
pop
repnz
jp
cmc
les
xchg
mov
xchg
add
lret
ljmp
dec
mov
pop
mov
in
dec
xor
pop
and
jae
sbb
adc
mov
shlb
adc
fsubl
sbbb
jne
sbb
push
mov
aam
movsb
push
xchg
sbb
dec
btsl
pop
add
cwtl
mov
mov
adc
mov
stc
and
call
int3
xchg
sbb
sbb
mov
mov
adc
test
fstps
addr16
shr
sbb
adc
mov
jg
and
adc
xchg
arpl
add
sbb
sbb
mov
adc
mov
loope
sbb
lret
dec
mov
nop
pop
pop
pusha
pop
jnp
lret
adc
dec
dec
or
cmpsb
xlat
or
sub
addr16
push
icebp
daa
loope
pminsw
out
xor
jg
sub
in
push
scas
into
inc
xor
jg
pop
in
test
sub
jne
popf
or
add
int3
loopne
xor
imul
sarl
test
addr16
lods
aas
out
mov
cmpsb
sub
sahf
mov
js
lea
inc
xor
lea
mov
shlb
mov
xchg
test
pop
xor
out
rolb
sbb
mov
pusha
sbb
jge
les
loope
dec
dec
jo
push
or
shlb
shl
mov
pop
dec
mov
adc
mov
add
add
lea
les
mov
mov
inc
fstpl
or
aas
and
repz
movsl
push
or
cmpsb
and
inc
outsb
jne
bound
mov
xchg
fidivl
cmp
xchg
lahf
mov
inc
cmp
cs
fisubrs
rol
popa
mov
shl
mov
ss
xchg
ss
mov
rorb
mov
or
xchg
cwtl
dec
sub
push
addl
insl
in
xchg
fdiv
xor
push
imul
pop
mov
pop
fidivl
popf
scas
inc
loope
mov
adc
std
push
xchg
pop
cwtl
dec
adcb
adc
test
jg
pop
push
push
sub
cmp
sbb
arpl
jecxz
imul
jle
inc
and
inc
call
pop
in
jl
jb
sbb
adc
or
repz
jnp
xchg
repz
daa
xacquire
repnz
sbb
outsl
push
pop
decl
sub
jmp
mov
xchg
add
sub
lea
fsubrl
xor
pop
cld
push
mov
and
sti
test
and
fstl
ss
mov
sub
pushf
xor
in
addl
sbbl
or
cmp
mov
mov
or
mov
pop
xchg
or
loop
out
ficomps
es
mov
aam
jmp
dec
and
mov
pop
mov
mov
pop
mov
imul
adc
mov
in
mov
sahf
xchg
idivl
aad
xchg
pop
insl
test
imul
pop
leave
mov
and
cmc
inc
lcall
mov
xchg
mov
pusha
mov
jg
mov
xchg
push
jmp
xor
mov
pop
pop
or
icebp
dec
push
andb
cwtl
call
or
pushf
lea
addr16
or
lock
adc
mov
in
dec
ss
out
mov
sbb
bound
adc
xchg
iret
aaa
out
mov
jg
or
cwtl
mov
nop
popf
popf
push
iret
bound
sti
fldl
mov
or
or
sub
shlb
into
pop
mov
lds
fidivl
std
outsl
test
jo
aad
mov
jae
outsl
neg
cmp
dec
jno
mov
es
mov
fucomip
testl
mov
cmpsb
out
cmp
cmp
shld
push
rcrl
cmp
fmuls
sahf
inc
daa
arpl
daa
push
sub
mov
xchg
adcb
push
daa
push
jno
dec
xor
lods
mulb
dec
popa
pop
sahf
mov
fimuls
cmpsl
je
testl
movsb
loop
movsl
mov
das
cltd
and
inc
shl
adc
lret
lds
out
pop
out
cmp
xchg
clc
out
push
scas
mov
es
lahf
aaa
into
jg
testl
push
cmc
pop
sbb
xor
mov
mov
iret
cltd
inc
xor
int3
inc
outsb
mov
jecxz
sub
idivl
popl
les
xor
pop
ljmp
push
aaa
das
cmp
sarl
sbb
test
lods
lcall
adc
xor
cmp
loopne
divb
cmpsb
in
xlat
and
add
mov
sbb
sub
push
xchg
outsl
rclb
push
push
push
fucomip
jne
icebp
arpl
fcomps
fwait
cmpsl
jno
push
jne
lret
loope
xor
in
sub
inc
cmc
sbb
add
pop
fwait
or
std
and
cltd
mov
jmp
jne
shl
cltd
mov
dec
pop
jne
cmp
test
sbb
mul
mov
fcoms
test
outsb
fst
cmp
js
lcall
pop
jnp
inc
inc
ja
aad
pop
shll
pop
insb
cmpsl
cmp
xchg
adc
jnp
pop
lods
push
mov
aam
xchg
dec
lcall
mov
rcl
push
jb
fwait
adc
ljmp
cld
call
jle
xorb
adc
in
dec
ret
fistpll
xchg
jge
pop
and
mov
cmp
sub
mov
movsl
orb
mov
inc
pop
sub
push
inc
add
mov
jae
jmp
orl
mov
cwtl
mov
add
sbbl
inc
in
fidivs
inc
mov
pop
dec
sbb
xchg
mov
dec
xlat
xchg
test
inc
add
mov
xor
adc
enter
or
popf
cli
leave
in
mov
fcmovb
popa
sub
xchg
loope
pop
push
pop
enter
cmpsb
dec
cwtl
dec
adc
sbb
add
mov
lea
add
sbb
cld
cmc
test
mov
scas
xchg
xchg
pop
cwtl
sbb
cmpsb
test
mov
mov
mov
andb
pop
xchg
popf
scas
sbb
inc
cmp
adc
int3
fcmove
jecxz
cltd
ljmp
std
outsb
cmpsl
test
sub
mov
jno
fs
xchg
out
and
push
cmpsl
mov
ja
inc
dec
and
push
mov
mull
in
push
enter
push
push
iret
stos
add
jne
out
aaa
xor
aad
mov
jo
in
xchg
mov
pop
int3
addl
push
fistl
cltd
adc
adc
test
pop
jns
jmp
decb
out
cmpsl
cmpsl
mov
rcrb
stc
inc
dec
push
and
stos
and
xor
mov
adc
or
lret
pop
incb
sub
fisttpll
or
add
mov
jbe
jp
leave
or
and
xlat
enter
icebp
sbb
in
push
out
faddl
jge
int3
icebp
push
lock
mov
jo
mov
lret
lock
fiadds
int3
mov
lea
or
inc
inc
cmpb
sbbl
add
mov
popa
mov
inc
cmp
rcll
cmpb
test
inc
ja
scas
dec
adc
jo
inc
imul
pop
push
ds
push
insb
adc
lret
lods
imull
xlat
int3
add
push
push
inc
and
fadds
fucom
aas
xchg
out
jae
bound
ret
mov
sub
aad
iret
popf
testl
cltd
arpl
jb
mov
shll
sub
lea
cmp
xor
jp
xchg
rolb
fucomi
cmp
les
test
sub
in
mov
leave
mov
sub
je
mov
pop
and
jg
popf
fwait
jge
sbb
loope
jge
les
loope
std
jno
jle
xchg
lds
fisubrs
xor
test
sbb
dec
call
in
inc
loopne
std
loopne
sub
out
shrl
das
jle
sub
mov
xor
push
adc
pop
xlat
es
mov
dec
jnp
push
dec
adc
add
inc
sbbl
outsb
cmp
jl
and
add
xchg
sub
imul
jb
popa
mov
xchg
xchg
int3
sahf
or
aam
imul
jl
adc
jae
int3
add
dec
hlt
fsubrs
push
sbb
mov
push
jnp
ret
inc
rcr
repnz
jp
sarl
mov
dec
imul
jg
mov
cmp
mov
test
push
mov
shl
lods
pop
jecxz
hlt
xlat
pop
xor
cmovbe
mov
arpl
xchg
mov
test
mov
lea
loop
mov
sub
out
scas
andl
push
lcall
mov
testl
cld
addr16
cmp
in
out
jb
movsl
insl
jns
sbb
mov
pavgb
fnstenv
scas
int3
push
leave
adc
movsl
mov
mov
dec
dec
and
hlt
jge
fdivrp
sub
cmpsl
jmp
xchg
nop
das
jle
call
and
aam
xor
mov
nop
in
in
repnz
xorl
cmp
leave
lods
and
mov
lock
cmpsb
mov
pop
popa
test
sti
xor
xor
push
scas
test
arpl
xchg
jnp
xor
repnz
popf
sub
movsb
lods
jp
outsl
and
add
sarb
andb
mov
cld
and
or
sbb
ficoms
xchg
jno
ss
dec
fsubp
fs
push
gs
mov
ret
jecxz
sbb
push
sbb
adc
sub
bound
adc
mov
inc
arpl
repz
ret
mov
jl
mov
ds
loopne
adc
cmpsb
add
fwait
mov
xor
js
jmp
sbbb
ret
into
iret
pop
fisttps
cld
adc
push
and
jle
dec
pop
adc
or
add
arpl
rcll
ljmp
lret
rorl
pop
in
addr16
les
je
into
lcall
xor
jmp
repz
or
cld
add
jb
inc
cmpsl
pop
push
xlat
xchg
dec
out
mov
mov
pop
xor
sti
outsl
in
xchg
imull
stos
push
popf
cmc
sbb
jne
xorl
or
push
dec
bound
sbbb
aaa
xchg
pop
cmp
aaa
pop
mov
shrb
cld
leave
xor
or
jbe
pop
stc
lea
pop
ja
dec
ja
xor
sbbl
sub
inc
push
push
xchg
enter
sahf
or
jmp
rclb
inc
and
ds
shl
stos
mov
call
jnp
fs
dec
mov
scas
push
loop
popf
sarl
and
adc
sub
cmc
pushf
or
xchg
inc
enter
inc
leave
aas
pop
movsl
jbe
nop
int
pushf
cwtl
push
pop
call
sub
call
enter
add
idivb
adc
rcrl
xlat
sti
icebp
mov
mov
ds
inc
push
adc
inc
leave
push
sbb
jnp
movsb
in
daa
scas
mov
and
xorb
xchg
pop
lods
fistl
inc
out
shlb
int
aam
push
push
movsb
loopne
push
pop
cmp
jns
dec
add
movsl
out
call
loopne
lock
mov
arpl
sti
nop
push
idivl
add
mov
pop
data16
movsb
mov
mov
cmp
ljmp
pop
or
lahf
pop
inc
ret
cmp
fucomi
iret
das
adc
mov
int3
aas
pop
xchg
sbb
xchg
mov
popf
sbb
pop
lock
cwtl
add
subb
pop
push
mov
test
dec
sub
inc
push
leave
movsl
mov
add
xor
ret
or
jae
pop
test
jle
cwtl
or
push
loop
ss
scas
test
jg
repz
testb
popf
mov
int3
je
dec
sbb
add
jo
mov
mov
cmp
outsl
jp
pop
xchg
icebp
rorl
jle
in
inc
cmp
xor
fstpt
insl
adc
cmp
adc
pop
fnstcw
sub
sbb
icebp
lds
sub
sti
xchg
popa
clc
mov
ret
fsubp
xor
cmpsb
sbb
mov
cltd
xlat
popf
xor
and
lahf
jle
sbbl
jg
cmpsl
lods
clc
adc
mov
cmp
jb
lods
call
rcl
in
push
pop
shll
xor
inc
inc
dec
out
pop
jp
inc
adc
push
pop
mov
je
sbb
pop
pop
or
push
mov
lea
xchg
in
cmp
shr
ror
mov
hlt
xchg
jb
mov
mov
add
rorl
lods
xor
movsl
sbb
sub
jge
dec
xor
cli
add
add
xor
cmp
jno
fisubl
or
or
sbb
xor
mov
jb
xor
mov
xlat
add
fldt
and
test
mov
ds
cmp
cli
enter
mov
enter
add
or
leave
mov
mov
pop
sbb
inc
add
push
add
cmp
adc
xchg
push
ret
mov
xlat
insb
adc
pop
rorb
jae
xor
xlat
sbb
aad
add
es
jle
stos
adc
and
adc
clc
rcr
test
inc
xchg
and
push
sub
pop
lods
shlb
in
jge
cmp
jecxz
in
cmp
xchg
push
les
ds
cwtl
cltd
dec
test
gs
lahf
dec
cld
and
jge
mov
xchg
push
push
cmp
das
lret
lods
nop
pusha
sub
jl
sub
and
cmp
outsl
sub
inc
adc
inc
mov
fsubrs
push
loope
adc
pushf
gs
out
dec
imul
dec
fwait
icebp
push
insl
add
fildll
lds
imul
jp
adc
jnp
cltd
mov
xor
es
xor
fisubrl
fidivl
pop
loopne
rcrb
ret
inc
jle
out
in
jno
ss
and
das
fs
fidivs
xchg
xchg
push
scas
add
in
sub
or
ja
mov
inc
scas
inc
adc
loope
stos
movsl
sbb
jns
pop
in
mov
add
mov
fninit
dec
and
xchg
lea
call
stos
popf
sub
rclb
lret
xchg
mov
cld
test
lea
mov
xchg
loope
inc
fmul
xor
and
loopne
mov
movsb
and
mov
mov
sub
int3
fbld
cmpsb
xchg
popf
ljmp
jecxz
push
lock
addr16
shlb
dec
mov
iret
mov
pushf
in
mov
movsl
rcr
mov
negb
push
and
sub
xor
cmp
pusha
pop
lret
mov
and
inc
jb
push
call
gs
movsl
dec
aam
in
inc
lds
or
dec
lcall
pop
insb
movsl
push
test
sbb
mov
int
pop
nop
arpl
imul
insl
xor
bound
cmp
fcomps
daa
jo
adc
fdivs
rcl
mov
mov
mov
cmpsl
mov
ficomps
mov
mov
jp
nop
mov
and
fcomps
add
jecxz
sub
das
dec
adc
cmp
add
dec
lea
addr16
testl
or
cmp
jmp
xchg
and
dec
and
or
roll
nop
mov
test
iret
mov
sbb
shrl
fcomi
fildl
sbb
adcl
ret
fldt
repz
scas
lods
adc
cld
fistpll
and
xor
dec
bound
outsb
xchg
insl
nop
sahf
add
sub
xchg
sub
xchg
cmp
cmc
mov
adc
frstor
bound
lcall
lds
bnd
int3
stos
js
ret
xchg
fiaddl
repz
js
dec
jecxz
les
sub
arpl
fbstp
pop
insb
adcl
xor
stos
sbb
lods
scas
add
les
bound
insb
orb
inc
and
je
pusha
sti
int3
mov
mov
mov
mov
movsb
fsubrs
jae
xchg
mov
xor
or
jp
xchg
sbb
cmpsl
in
and
sbb
mov
jnp
loop
sub
dec
adc
sbb
push
cmp
mov
mov
nop
or
cmp
jno
sbb
outsb
pop
pop
inc
inc
imul
hlt
fwait
sub
or
inc
leave
dec
mov
push
shll
push
in
lcall
adc
mov
call
add
lds
lcall
cs
xchg
mov
dec
jmp
ljmp
lods
xor
mov
push
dec
push
leave
ljmp
mov
cmp
or
nop
push
popa
mov
imul
ror
xchg
cmp
mov
fs
sbb
pop
aad
sbb
stc
sbb
sub
mov
mov
xor
xchg
xor
ds
inc
shr
fcompl
sub
jle
pop
cmp
cmp
in
ret
loope
push
add
jno
xchg
out
or
fs
add
sub
loope
les
repz
pop
pop
inc
lea
mov
dec
xchg
xchg
jnp
mov
in
push
push
cmpsb
pop
movsb
wrmsr
cmp
out
loope
into
inc
inc
insl
push
lret
inc
add
scas
jo
cmpsb
addr16
loop
pop
insb
mov
add
mov
xor
jae
mov
xor
lahf
push
cmp
mov
cmp
adc
stos
test
inc
cmp
mov
shrl
xchg
movsb
js
mov
call
push
mov
push
imulb
bnd
cmp
rol
loopne
inc
sbb
jne
mov
ss
daa
mov
js
iret
clc
aaa
jl
arpl
jmp
sti
fwait
bnd
xchg
xchg
and
mov
xchg
jnp
fst
add
in
and
xchg
dec
pusha
push
mov
mov
aaa
jno
xor
sub
cmp
js
inc
setp
xchg
stc
mov
cwtl
or
cwtl
push
cmp
inc
ljmp
xchg
inc
lds
sbb
xchg
pop
rcrb
and
cmpsb
adc
out
xor
mov
pop
loope
loope
xchg
mov
xchg
fnstsw
push
test
xor
dec
push
xor
and
push
shll
dec
xor
lods
cmp
movsb
mov
bound
mov
lods
shrl
adc
sbb
jmp
test
int
pop
jmp
pop
test
push
mov
jbe
cmc
push
lret
lret
movsl
aas
cmpsl
cli
add
fwait
xchg
push
jl
xor
aaa
sub
or
mov
fisubl
mov
lods
pop
mov
and
add
pop
xor
icebp
rclb
ljmp
faddl
std
imul
or
out
int3
jo
fmull
dec
xchg
push
rcll
lock
jbe
dec
cs
leave
stos
or
xor
stos
and
fnstcw
push
fsub
sub
push
jb
inc
mov
push
hlt
add
shll
outsl
mov
std
scas
repnz
lret
inc
pop
add
xrelease
adc
inc
sbb
std
call
xor
mov
fwait
pop
add
nop
testb
add
and
xchg
scas
cltd
push
xor
std
add
jbe
add
cmp
xchg
outsb
stc
mov
aad
je
loop
shll
push
orl
shll
repz
ss
add
mov
cmc
mov
je
mov
sarb
push
ret
mov
cmp
mov
inc
cld
ret
ljmp
popa
mov
jge
pop
xchg
pop
jne
jbe
lcall
jl
ret
addb
mov
adc
lret
xchg
add
lods
push
sbb
mov
aam
push
mov
loope
cltd
sbb
jmp
jno
repnz
cmp
xchg
gs
out
or
stos
xorl
or
stos
mov
incl
push
test
jbe
ljmp
sbb
sbb
inc
outsl
or
movsb
sub
test
movl
std
mov
and
sbb
or
or
jecxz
jno
leave
sub
leave
xor
or
mov
divl
sbb
xor
xchg
cli
arpl
and
mov
les
mov
outsb
push
mov
std
jge
cs
push
ss
add
lret
sub
mov
ja
and
daa
call
andb
add
jno
mov
jbe
cltd
in
outsb
es
ret
mov
mov
inc
push
add
sbb
cmpsb
xchg
lret
jmp
push
in
fstpt
das
add
jmp
outsl
lahf
out
or
xor
repz
sbb
mov
dec
test
mov
std
cmp
aas
push
sar
adc
or
cltd
addr16
loop
add
push
and
pop
icebp
out
ss
or
cmp
dec
pop
push
inc
pop
out
ds
xor
pop
sub
xor
es
dec
jns
lahf
imul
dec
cmpsl
out
dec
jl
int3
mov
or
and
fidivs
xor
icebp
or
mov
mov
sahf
push
iret
and
mov
mov
sahf
adc
pop
push
xor
fdivr
fs
daa
pop
push
cmp
dec
mull
outsb
sub
dec
xlat
mov
es
call
mov
sub
dec
inc
popf
push
and
sub
xor
adcb
je
and
mov
std
xchg
inc
loopne
add
mov
sbb
inc
neg
lods
arpl
pop
dec
dec
cmp
scas
jge
xchg
lds
jb
es
mulb
pop
lock
and
repz
mov
fs
mov
and
xlat
adc
or
aam
inc
xor
mov
rorb
mov
addl
sbb
cmp
pop
sbb
cmpl
xlat
dec
aaa
icebp
call
dec
sub
mov
mov
cmp
jnp
jge
push
pop
call
in
pop
or
out
mov
je
adc
mov
push
mov
shll
shl
adc
repz
test
shll
push
insl
inc
xor
enter
sahf
fxch
loopne
adc
mov
sbb
imul
push
aad
jbe
addl
arpl
enter
add
aas
sbb
enter
inc
les
sub
sub
stos
js
adc
popf
outsl
mov
int3
sti
daa
pop
stos
or
mov
idivb
push
inc
test
push
pop
lods
mov
inc
scas
sbb
cmc
in
in
lcall
dec
shlb
js
jo
xor
jo
mov
cmp
inc
int3
pop
leave
in
movhps
ss
outsl
xor
popf
js
xchg
imul
daa
push
and
push
arpl
adc
adc
clc
xchg
push
push
fmul
ja
jae
cmp
jbe
add
lods
scas
sbb
push
sbb
and
icebp
mov
xlat
add
push
push
in
push
enter
call
cmp
cmp
pop
cld
aas
xchg
jo
or
aad
pop
xor
les
push
xor
xor
push
pushf
mov
outsb
subb
lock
dec
push
adc
pop
xchg
cwtl
pushf
jg
subb
mov
lea
xor
jbe
lcall
mov
jecxz
add
push
xor
xchg
call
mov
mov
imul
in
lahf
ljmp
jno
xchg
mov
ss
dec
aaa
out
pand
mov
sbb
and
sbb
cwtl
ljmp
scas
popa
add
repnz
dec
push
jecxz
ficomps
jg
daa
test
cwtl
cmp
out
das
das
mov
cli
test
or
add
mov
dec
push
repz
pop
enter
mov
dec
mov
dec
iret
mov
leave
inc
loop
loopne
loop
leave
inc
insb
out
xchg
and
jg
in
in
or
insl
sbbl
clc
add
fprem1
mov
mov
cmp
mov
cmpsb
pop
test
cltd
jae
push
jg
repnz
fs
loope
mov
js
idiv
jne
mov
cs
test
faddl
cmp
add
jae
sub
and
movsb
jbe
movsl
jbe
xchg
mov
push
ficoml
in
xchg
or
cmc
jl
data16
xor
dec
in
clc
mov
and
mov
mov
inc
insl
fdivrs
pushf
mov
push
hlt
xchg
mov
clc
push
push
or
subl
adc
rclb
je
mov
mov
push
js
dec
and
lods
mov
ss
sbb
sub
stos
loopne
test
ja
xchg
rorl
cmp
dec
push
pop
mov
adc
push
xor
or
push
jge
sti
imul
push
jmp
dec
and
and
fmull
jg
mov
or
mov
stos
push
sub
mov
insl
inc
xor
hlt
aas
xor
in
addr16
sbb
and
and
out
push
icebp
je
pop
push
rolb
in
or
ljmp
adcl
stos
or
and
xchg
int
clc
dec
add
icebp
pop
push
jbe
pop
out
cmp
pop
xor
push
mov
jg
sub
xchg
sbb
xchg
outsl
mov
add
ss
lods
test
and
or
adc
mov
nop
stos
and
mov
jb
cli
xchg
jp
loop
imul
mov
jns
jl
neg
mov
movsl
push
push
out
into
mov
lahf
pop
xlat
bound
inc
imul
insb
call
int
aam
sub
sub
enter
mov
outsl
scas
fsubrs
mov
out
dec
imul
loopne
mov
stos
test
xchg
push
push
lock
or
or
adc
insb
enter
mov
insb
fbld
out
sbb
loop
add
aas
push
in
mov
mov
inc
xor
xor
arpl
idivb
ret
xor
jbe
adc
cmpsb
sub
movsl
in
add
rcr
fwait
and
fcompl
mov
inc
push
int
sbb
pop
fs
shlb
add
jns
lock
fnstsw
and
addr16
lds
and
cmp
sbb
inc
push
js,pt
rclb
add
dec
repz
imul
cmc
jecxz
or
ret
xlat
pop
stc
or
jne
outsb
sub
fwait
and
or
mov
out
cmpsb
cmp
adc
popl
es
aad
push
and
scas
lret
or
cmp
sub
dec
popf
iret
cmp
xor
cmpsl
adc
inc
mov
push
adc
mov
scas
enter
test
inc
call
movntps
lret
test
rolb
pop
int
sub
inc
out
xchg
test
lahf
in
xor
cwtl
lret
and
xchg
push
movsl
mov
adc
jge
lret
in
rorb
int
push
cmp
repz
jae
sub
and
lods
addb
fsubs
jle,pn
mov
rcrl
out
mov
jle
push
mov
into
push
aaa
sbb
xlat
ds
dec
xchg
cld
adc
andl
push
xor
shlb
dec
jnp
enter
push
addr16
jne
pop
pop
xlat
sbb
jl
mov
pop
arpl
xchg
push
mov
pushf
jo
jo
adc
mul
pop
jns
cmpsb
aad
sbb
ss
push
xchg
jle
xchg
pop
or
sub
sub
repz
pop
testb
jge
jb
inc
or
jle
movsb
xor
push
cmp
add
lds
dec
dec
inc
sub
mov
push
cmpsl
mov
xchg
xor
insb
and
loop
xor
repz
dec
xchg
mov
mov
push
int3
jne
add
adc
dec
jge
cmp
dec
add
cli
out
mov
add
hlt
inc
mov
cs
in
and
in
decl
or
pop
lea
adc
stc
inc
push
push
loope
pop
ret
iret
pop
in
pop
jecxz
jg
sbbb
lcall
pop
or
loop
jo
gs
mov
adc
leave
into
pop
sub
push
mov
mov
pushf
adc
and
and
add
insl
mov
sub
dec
int
xor
inc
es
or
rorl
push
sbb
mov
inc
nop
mov
jbe
xchg
imul
lods
pop
je
inc
icebp
int3
push
das
and
add
pop
ret
lds
xor
cmp
ss
pop
insb
pop
cltd
cmp
int3
bound
xchg
stc
icebp
and
jne
fidivl
rcl
in
pusha
xor
bound
pop
add
pop
fcoml
clc
aaa
sbbl
stc
loopne
mov
out
ljmp
sbb
fdivl
insl
int
pop
popa
mov
icebp
gs
cli
mov
adc
cmpsb
dec
sub
jg
jg
adc
push
movsl
outsb
mov
test
push
xlat
sbb
fcmovb
les
leave
lds
mov
std
mov
pop
mov
mov
jmp
dec
sarb
inc
or
sbb
pop
pop
je
adc
je
sbb
fwait
adc
mov
adc
rorb
lods
stos
or
mov
clc
push
push
inc
jbe
cmp
mov
pop
cmp
jbe
xlat
aad
push
xor
jno
test
dec
test
lret
push
sti
jecxz
sub
cmp
xchg
imul
and
shll
not
jns
aas
xor
ficomps
mov
xchg
sbb
insb
shl
jmp
push
mov
add
adc
push
cmpsb
stc
pop
mov
leave
pusha
and
mov
jp
jp
mov
cmp
cmc
pop
mov
imul
sub
and
popa
in
xor
and
jb
jge
iret
fabs
mov
sahf
in
sub
fwait
lods
cmpsl
shrl
lret
enter
iret
mov
pop
cmpb
jg
mov
int3
cmpsb
aaa
pop
pop
imul
jmp
dec
cld
lret
pop
pop
enterw
pop
andb
push
mov
push
leave
scas
fldenv
inc
sbb
sub
mov
or
adc
and
adc
mov
adc
dec
movsl
pop
mov
out
sub
lods
ret
inc
mov
push
push
decl
push
shlb
pop
aam
dec
dec
sbb
shll
sub
pop
ficomps
in
inc
rclb
ds
leave
pop
cltd
xor
jno
jmp
and
jle
pop
pushf
fwait
movsb
mov
push
cli
iret
push
daa
das
iret
cmc
ficompl
push
lahf
push
out
sbb
lret
mov
inc
or
movsb
dec
xchg
sub
sub
push
dec
pop
xor
shrl
cmp
jle
mov
popa
adc
insb
pop
in
fisttpll
loop
dec
fdivrs
add
sbb
inc
icebp
jle
aam
aaa
jmp
imul
cwtl
inc
jp
push
insb
lahf
pop
aaa
mov
in
movsl
sbb
in
sub
mov
sahf
outsb
int3
mov
mov
mov
loop
xchg
adc
movsb
dec
scas
pop
mov
lahf
lret
repz
nop
icebp
jecxz
sub
mov
cwtl
jns
mov
pop
std
out
push
adc
jne
sbb
add
mov
gs
xor
jmp
nop
or
xor
pop
mov
ja
adc
in
inc
fildl
hlt
ljmp
dec
mov
les
callw
rol
clc
mov
adc
xor
jnp
pop
xor
adc
inc
insb
jns
xchg
gs
mov
add
sub
jb
adc
aaa
rol
das
in
xchg
mov
rcrb
testl
sahf
ja
std
clc
fwait
in
mov
mov
mov
jne
cmp
lock
cs
fisubrs
testl
dec
mov
lret
adc
cld
out
pop
and
mov
daa
xor
andb
jo
test
fldt
xor
adc
cwtl
pop
scas
lret
cmpb
xchg
cmp
xor
cmp
mov
popf
cwtl
mov
pop
outsb
sub
imul
xchg
repz
dec
test
into
sti
ja
dec
inc
push
pop
jnp
fst
repz
xchg
add
lods
mov
cmpsb
aaa
mull
lea
inc
in
mov
push
inc
push
idiv
leave
mov
or
test
lds
test
dec
bound
push
test
dec
imul
mov
cmc
and
bnd
mov
push
or
inc
movsb
in
repz
popf
ss
add
mov
xorl
inc
jmp
add
or
fucomi
mov
and
fdiv
inc
xchg
add
mov
sub
lds
sub
cmp
sub
test
scas
sub
pop
out
out
pop
hlt
mov
mov
lret
out
ljmp
add
jmp
or
adc
add
loope
mov
xor
nop
mov
sub
or
cmp
popa
fdivl
js
jnp
jle
push
ljmp
mov
loope
push
xchg
cmp
lcall
lock
dec
add
push
repz
cmp
lods
cs
enter
pop
scas
stc
test
and
lds
ror
lods
rcl
out
ret
sbbb
pop
repz
xlat
sahf
cmp
push
scas
sub
jae
sub
sub
movsl
sub
call
fbld
mov
jge
inc
push
je
out
roll
cmp
sbb
fnsave
data16
fcmovnbe
add
daa
xchg
nop
dec
push
dec
sbb
cmpsl
loope
fidivrs
mov
sti
cs
jp
movsb
push
inc
push
std
in
inc
popa
cld
add
sub
movsl
xchg
mov
mov
out
sti
sub
cld
insl
fisttps
xchg
lahf
testl
sbb
cwtl
jo
xor
outsl
sbb
std
xchg
and
jns
jp
sarb
mov
and
lcall
xor
out
or
dec
add
pop
jecxz
inc
es
jae
data16
sub
bound
scas
rcrb
lret
and
das
sbb
std
dec
jno
call
test
pop
lahf
cmp
popf
mov
xchg
fsubrl
inc
jb
cld
je,pt
xor
insb
leave
mov
sub
cmpsb
shlb
hlt
testl
xor
mov
dec
dec
repnz
inc
lcall
pop
in
test
and
cmp
or
jmp
and
jns
add
add
inc
pop
pop
daa
xchg
movsb
arpl
frstor
push
test
xchg
pop
and
xchg
xchg
inc
test
loope
mov
call
call
jmp
mov
cmp
scas
dec
inc
insb
jp
clc
pushf
imul
in
sbb
jns
pop
add
rcll
push
add
fs
std
es
inc
out
in
xchg
mov
fidivl
out
xchg
mov
xchg
outsb
mov
jne
cld
ret
push
mov
rorb
and
mov
fs
je
enter
loope
pop
mov
imul
scas
cmpsl
repz
dec
int3
mov
xchg
mov
push
insl
outsb
mov
cmp
push
pushf
fnstsw
stos
test
add
lcall
je
pop
cs
xchg
pop
mov
jmp
call
xchg
dec
sbb
pop
jp
pusha
mov
push
mov
xor
subl
insb
aam
mov
cmc
mov
cmp
in
xor
aaa
test
push
into
filds
inc
mov
test
ret
fwait
xchg
addb
call
mov
dec
jmp
adc
imul
push
loope
add
cwtl
add
bound
sbb
sub
mov
fcoms
adc
cltd
ja
jo
es
sahf
mov
pop
jg
cmpsb
lret
sbb
aaa
mov
mov
sahf
loopne
and
insb
notl
aad
lds
fimuls
xchg
and
cwtl
cmp
dec
outsl
jmp
orb
sbb
dec
adc
imul
cmp
xor
lret
sbb
push
sbb
mov
cmp
inc
scas
js
fwait
xchg
push
loop
outsl
jg
xor
pop
mov
sub
or
gs
lcall
sarb
pop
sub
mov
jb
ja
xchg
out
jecxz
mov
jle
jno
mov
cmp
out
push
adc
fwait
and
cwtl
addr16
lret
enter
or
inc
xor
jmp
sbb
inc
int
mov
fucom
addr16
jo
insb
xchg
psubusb
pop
sbb
pop
and
mov
mov
aad
ja
jle
aam
ja
cmovle
push
test
lea
pop
stos
cmp
and
lahf
cld
sbb
fsubr
push
xor
sub
lahf
push
xchg
lea
cmp
je
pop
fldenv
xlat
dec
addl
nop
jecxz
sbb
aad
cmpsb
pop
in
xchg
je
in
push
sbb
pop
clc
push
ficoms
cwtl
push
pop
xchg
mov
lds
dec
daa
add
dec
pop
outsl
mov
movsb
lds
xchg
push
cmp
add
xchg
aaa
pushf
pusha
cmp
push
push
pushf
pop
mov
and
sub
into
pop
mov
mov
pop
add
pop
sub
mov
in
std
mov
adcl
in
dec
xchg
ror
sahf
xchg
insl
mov
push
inc
push
adc
inc
push
ja
add
ljmp
cwtl
pop
cmpsb
dec
aas
lcall
adc
dec
push
pop
int
fcomip
decw
sub
jbe
into
jecxz
mov
aaa
push
push
push
ror
sar
or
lock
xor
or
addr16
int
xchg
xor
out
jbe
outsl
stos
pop
mov
sbb
pop
pusha
or
repnz
pop
js
or
call
test
icebp
inc
loop
divb
xlat
jbe
sub
pop
jne
mov
addr16
mov
into
ror
and
or
fcmovbe
lock
mov
movsb
shr
loope
shll
and
ss
sbb
pop
negb
jno
fdivl
xchg
fildl
cmp
adc
mov
sarl
push
jae
outsl
hlt
dec
inc
aad
ss
xchg
fimuls
pop
test
or
xor
ja
lret
stc
adc
sbb
in
inc
push
sub
cmpl
fwait
out
jns
int
mov
xor
sub
jns
leave
add
out
mov
xor
sbb
add
xchg
call
jb
cmp
cmc
mov
push
lahf
cwtl
dec
cli
sub
fisttps
dec
dec
shlb
test
sub
mov
and
jo
pop
lret
and
sbb
js
push
cmp
or
dec
lods
dec
addr16
bound
aas
scas
sbb
mov
jns
dec
mov
xor
cmp
add
adc
cmpsl
cmp
add
dec
lea
scas
test
mov
lret
fmull
mov
xchg
and
mov
jbe
scas
movsb
daa
pusha
add
xor
mov
push
scas
push
sub
sarl
xor
dec
sub
jbe
clc
dec
jge
rcl
cmpl
add
cli
push
imul
gs
repnz
sbb
pop
rcrb
pop
mov
notb
cmpsb
popa
iret
xchg
cmc
or
insb
sub
cmp
int
mov
pop
iret
inc
mov
pop
adc
gs
jno
repnz
xchg
pushf
cli
ja
sub
inc
sbb
mov
ja
xlat
dec
je
adc
xlat
jno
xor
aam
inc
xor
mov
mov
icebp
icebp
fistpl
in
mov
mov
test
fidivl
dec
addb
mov
and
xchg
out
pop
push
jg
and
cmp
cmp
xorb
outsl
loop
and
add
pop
pop
mov
pop
dec
jp
lds
xchg
scas
call
lea
or
idivb
jo
fstpt
and
lcall
push
fstpl
aas
add
rclb
fists
xor
mov
pop
jg
sbb
bound
mov
and
lea
imul
arpl
stc
arpl
sub
sti
and
xchg
and
insb
in
cmp
pushf
lret
add
mov
cmp
or
cmp
and
shlb
gs
dec
ficoml
cmp
xchg
xor
adc
xchg
adc
mov
xor
inc
pop
out
mov
ljmp
cltd
xchg
xchg
jo
insl
lret
mov
aad
mov
adc
rcll
subb
sbb
inc
sbbl
fwait
add
out
aas
adc
fadd
mov
push
push
rorl
subb
je
in
out
or
call
sub
cmpl
aas
push
pusha
ja
out
xchg
xchg
mov
jo
inc
sub
adc
lods
jl
sub
cmpb
cmp
outsl
stos
inc
rolb
leave
inc
mov
js
insl
push
lods
repz
scas
dec
cpuid
and
mov
lcall
mov
es
adc
jb
jecxz
aam
jl
or
stos
and
lahf
push
mov
jo
jne
adc
hlt
dec
popa
imul
sub
loopne
xchg
stos
not
arpl
jge
gs
mov
or
cmc
xchg
test
cmp
iret
std
inc
push
fwait
xor
or
mov
push
jp
ficoml
std
and
xchg
inc
adc
out
dec
aaa
fisubrl
pop
pop
sub
and
cmp
and
int
ja
jl
mov
lcall
sarl
mov
stos
sub
pop
mov
cmp
xor
pop
jae
push
insb
fnstcw
sbb
and
arpl
testb
daa
cmpsl
and
std
and
insl
pop
dec
out
sbb
outsl
mov
sub
lret
dec
jne
sub
push
icebp
push
jle
mov
test
dec
mov
test
lcall
js
push
outsb
cmp
pop
lret
dec
cmp
inc
sub
pop
cmp
fnstenv
pop
js
cmc
dec
movsb
popf
push
push
dec
ret
imul
lcall
aaa
es
outsl
add
test
data16
jbe
and
outsb
out
addl
jmp
sarl
inc
fistpll
xchg
mov
jmp
cmp
out
cld
mov
imul
xchg
movsl
adc
test
shl
movsl
je
sbb
jmp
sub
push
fbstp
jmp
hlt
jle
aas
sarl
not
pop
sub
lcall
sbb
mov
mov
xchg
or
nop
push
xchg
or
sbb
ja
lret
aad
mov
mov
fisubrs
arpl
dec
add
adc
pop
push
icebp
icebp
arpl
pop
cmc
cli
loop
fs
push
or
push
add
stos
leave
stc
iret
out
cmp
pop
negl
ret
fs
jp
imul
sbb
mov
out
mov
lods
aas
pop
stos
test
or
mov
inc
sti
xchg
xchg
pop
lcall
imul
in
sbb
xor
pop
stc
movsl
loop
cmp
arpl
sarb
movsl
push
mov
mov
mov
xor
xor
sub
movsb
sbb
es
pcmpgtw
pusha
xchg
orl
dec
pop
imul
sub
cmpsl
mov
rorb
and
mov
movsb
adc
push
or
pop
insb
mov
popf
push
push
ret
inc
dec
cmc
add
js
pop
jecxz
mov
cmp
fdivp
push
ljmp
mov
rcrl
adc
insl
loope
out
lret
adc
fistl
gs
mov
xor
adc
dec
sub
js
dec
inc
ss
rclb
mov
out
aam
out
or
inc
mov
in
cmpsl
fsubl
sub
scas
xor
test
xchg
mov
push
data16
roll
mov
cmp
sahf
sub
nopl
lds
jg
inc
xchg
mov
dec
inc
mov
dec
cmp
jno
aad
sbb
ret
int3
arpl
xor
popf
inc
lret
add
scas
ret
xlat
data16
ljmp
sbb
testl
cli
outsl
fsubrp
jecxz
xlat
cmp
xchg
lret
movsb
addr16
incb
sub
pop
mov
sub
sti
add
push
fnstenv
js
ss
addl
sub
pop
mov
sahf
mov
lret
faddp
jle
push
jmp
stos
insl
jns
or
push
mov
aad
lds
add
mov
jge
mov
ds
mov
and
repnz
jge
test
loop
pop
push
imul
ficoml
cmc
xchg
add
ss
call
pushf
loopne
adc
push
or
aam
lods
inc
adc
push
cmpsb
or
sbb
dec
xchg
repnz
lret
mov
out
pop
outsl
mov
mov
cmc
ja
xor
xor
movsb
inc
mov
icebp
pop
mov
jnp
mov
aas
shll
daa
test
movb
iret
xor
mov
cld
outsb
loopne
adc
ret
sub
sub
jge
jnp
inc
das
fwait
out
sbb
jle
insb
mov
cld
cmp
jo
imul
jl
xchg
les
push
lret
xchg
in
outsb
mov
roll
mov
loope
push
xchg
dec
push
loop
pushf
aaa
fs
movsl
adc
fnsave
mov
je
xlat
add
sbb
sarb
add
and
xchg
mov
aas
mov
sbb
inc
gs
and
movsb
sub
add
sub
jge
push
loopne
icebp
lea
loopne
fidivrs
shlb
jb
pop
jb
aaa
jg
cmpsl
or
fsubrl
xor
push
push
pusha
out
rol
sti
sub
mov
push
fimuls
mov
data16
xlat
mov
push
push
adc
dec
hlt
sahf
adc
inc
bound
pop
out
xlat
outsb
mov
leave
icebp
out
das
adc
push
add
inc
mov
dec
jne
popf
inc
hlt
mov
test
jae
mov
iret
xchg
push
hlt
and
mov
rcr
xchg
rolb
pop
sbb
pop
and
inc
repnz
and
flds
icebp
pop
mov
arpl
sbbb
xchg
inc
ret
lea
fcoml
pop
fistpl
das
xchg
mov
xchg
js
sahf
xchg
loope
xchg
pop
add
aam
mov
push
sbb
mov
fildl
stos
xchg
push
stos
and
cmpsb
leave
lods
xchg
cld
lahf
andl
rol
mov
sbb
out
pop
lods
aas
add
dec
push
dec
sub
inc
lods
fsubrl
mov
in
out
ds
incb
nop
scas
mov
lods
sahf
iret
jb
push
fs
pop
and
pop
pop
std
out
int3
pop
and
lods
cmpsl
dec
mov
jo
fisubl
in
addl
lcall
pop
aad
loop
xor
mov
ja
add
cli
inc
xchg
int3
ds
xchg
aam
or
imull
add
push
lret
adc
adc
jns
fwait
insl
movsl
test
adc
insl
fwait
xor
pop
shlb
cmp
push
mov
btr
arpl
test
pop
arpl
subb
mov
in
lret
mov
popa
xchg
xor
and
lcall
or
aaa
addr16
fs
aam
aam
xor
jg
mov
inc
and
jae
movsl
mov
popa
test
cwtl
scas
adc
cwtl
mov
out
call
mov
fsubs
jge
gs
lahf
nop
xor
test
ljmp
mov
iret
test
fbstp
in
jle
mov
mov
and
sahf
pop
sbb
and
mov
imul
pop
mov
or
mov
popf
test
sbb
mov
inc
and
aaa
jle
mov
arpl
xchg
movsl
inc
fsubrs
ret
inc
mov
jo,pn
inc
or
adc
sahf
fs
pop
push
loop
test
sahf
jb
add
mov
mov
push
sub
mov
inc
push
pop
mov
adc
ret
mov
inc
rcll
or
rcrb
and
xlat
ja
jno
scas
sti
in
and
inc
jmp
daa
push
rclb
mov
cmpsl
ret
int
mov
dec
into
mov
and
fs
adc
fsubrs
push
pop
lock
fnstsw
adc
stc
lds
fs
xchg
cmp
pop
jo
or
hlt
cmp
cltd
lock
xor
loopne
cmc
adcl
dec
aam
inc
xchg
addr16
fcoms
or
ret
cltd
fnsave
xchg
js
cmpsl
mov
les
fldl
lcall
jmp
sbb
movsl
arpl
stc
pop
gs
imul
xchg
lods
xor
es
push
and
sub
xor
out
popf
or
cmpl
lock
loopne
cwtl
pop
or
out
fstpl
cltd
mov
sbb
pop
pop
sbb
xchg
xorl
pop
or
push
fnstsw
sbb
jge
push
gs
ret
xor
push
pop
jecxz
push
mov
ljmp
dec
dec
jge
in
das
lods
cmpsl
outsl
cmc
jno
xchg
xchg
sub
mov
outsb
cmp
mov
les
pop
inc
jb
movsl
add
mov
mov
dec
xor
mov
pop
mov
dec
adc
mov
lcall
testb
aaa
sbb
scas
aad
xchg
leave
pop
mov
inc
loopne
testb
outsl
fwait
movb
adc
rorb
or
iret
mov
xchg
sub
lret
repnz
and
xchg
jge
sete
adc
dec
outsl
mov
dec
loop
pop
dec
insb
lock
fwait
sub
dec
shl
xchg
popf
add
pop
mov
pop
jge
sub
mov
jo
add
jl
aam
popf
adc
push
lret
pop
cwtl
lret
mov
decl
and
adc
mov
out
gs
sbb
popa
je
out
test
dec
push
or
fnstsw
add
pop
dec
adc
jb
bound
gs
inc
aas
cmc
aas
mov
aaa
test
sahf
int3
sub
jae
jmp
xchg
pushf
inc
jg
rclb
inc
cs
and
push
mov
jmp
and
cvtps2pd
sub
lret
sub
mov
negb
or
mov
push
push
jg
cmp
mov
sbb
jg
inc
clc
in
cli
push
mov
jmp
leave
into
andb
jmp
pop
cmp
mov
in
in
or
sbb
mov
lods
movsb
js
inc
mov
dec
and
dec
mov
mov
aaa
repz
mov
jge
and
push
loopne
clc
push
enter
repz
in
and
int
arpl
mov
jmp
adc
and
ja
cltd
arpl
cmpsl
aas
scas
xchg
sbb
out
hlt
leave
call
fsubp
add
jmp
push
dec
push
es
mov
xor
dec
scas
push
test
and
cwtl
pop
ret
imul
out
adc
inc
and
enter
hlt
and
pushl
mov
pop
scas
mov
ss
xchg
dec
xchg
nop
cli
lcall
rcr
mov
pop
addb
popw
or
fidivrl
lahf
push
les
xchg
dec
scas
mov
xor
inc
lret
iret
push
sub
sarb
inc
xchg
inc
out
jae
cwtl
adc
das
bound
jns
pushf
mov
loope
cli
xlat
inc
mov
adc
push
jo
int
std
mov
std
add
fsub
cmp
push
xchg
lret
mov
and
xchg
dec
in
je
add
popa
ds
lcall
fimuls
shll
loope
pop
xchg
les
out
sbb
jp
lea
and
je
xchg
cmpsl
ss
aad
mov
addr16
sub
dec
aad
push
jmp
mov
rcr
es
cmp
dec
int
shrl
addr16
call
cmp
cmp
lods
jge
idivl
mov
inc
outsb
xor
test
repz
cmp
pop
rorl
shlb
repz
fwait
icebp
lahf
lods
and
cmp
daa
dec
mov
cmpsb
mov
in
call
mov
inc
in
ret
cmp
mov
lahf
in
sahf
movsb
jecxz
test
inc
loopne
push
push
rclb
push
xor
ljmp
mov
or
mov
jnp
lea
pop
fisubs
jmp
xchg
aad
sbb
sbb
orl
or
xchg
std
dec
cmp
nop
mov
dec
into
jbe
in
insb
dec
outsl
scas
mov
leave
mov
rcr
push
lock
shlb
fdivs
pushf
and
test
loop
imulb
add
out
mov
dec
pop
or
out
or
and
movsl
inc
mov
and
xor
subl
shll
in
pusha
xchg
cli
xchg
fisubrl
add
push
and
into
dec
or
xorl
stc
in
jecxz
lds
fs
push
pushf
scas
add
jns
pop
jle
cwtl
sbb
outsb
push
xor
addr16
pushf
push
gs
sbb
sub
loop
out
dec
or
fs
mov
daa
insl
negl
cmp
mov
or
xorb
mov
repz
das
jne
mov
xor
push
jl
xchg
xchg
xchg
cwtl
loopne
xchg
dec
sub
push
ret
cmp
mov
add
incl
pop
in
jge
mov
dec
push
xchg
sub
repnz
mov
cld
cli
and
sub
adc
xor
cmp
out
sbb
loop
cmp
nop
jmp
imul
stos
and
mov
sbb
xorl
pop
lods
add
adc
cmp
and
ss
repz
xlat
xchg
ret
sbb
sbb
in
cmp
pusha
hlt
out
push
aaa
sbb
xchg
std
push
mov
arpl
jmp
pop
notl
cmpsb
cli
dec
sbb
dec
jb
loop,pn
je
mov
mov
inc
pop
push
jmp
xchg
cmp
add
stos
mov
xchg
and
sbb
mov
mov
hlt
lds
int3
lret
fadds
jne
or
ret
pop
fistpll
push
fldt
dec
sarb
adc
lret
std
xchg
imul
pop
addl
out
rclb
and
push
inc
mov
insb
jmp
cwtl
fwait
push
hlt
jmp
push
add
inc
mov
xchg
push
push
pop
xor
mov
add
xlat
decb
add
cmp
inc
pop
inc
pusha
iret
jle
icebp
sub
adc
push
mov
sub
xlat
clc
xchg
push
out
pop
or
sub
shll
movsb
arpl
jne
ja
stos
test
push
mov
test
sub
cmp
add
sbb
sti
adc
gs
lods
mov
imulb
js
sbb
mov
icebp
stc
cmpsl
sbbl
cmp
mov
insb
mov
push
pushf
cmp
sarb
int3
sbb
sub
test
jo
shrl
fs
jo
mov
sbb
add
or
mov
lret
mov
mov
push
jbe
clc
xorl
insb
lods
ds
jge
pop
ret
dec
mov
scas
je
pop
out
aam
sub
jo
ds
push
das
add
cs
pop
idivl
lods
sbb
call
mov
cmpsb
fstpl
cli
jl
mov
jmp
xor
loop
adc
test
rol
mov
add
dec
pop
xchg
sub
out
xchg
push
mov
or
pop
jbe
incl
jno
mov
jbe
stos
popf
rol
mov
lret
es
and
js
popf
or
icebp
lcall
sub
or
and
jae
mov
dec
xor
jmp
jecxz
daa
rcrb
or
mov
out
xchg
pop
cli
arpl
push
push
dec
cld
fwait
push
mov
mov
mov
adc
dec
hlt
mov
dec
push
jl
mov
outsb
dec
mov
and
pop
fdivrs
pusha
mov
fdiv
shrb
and
test
sub
imul
test
mov
jge
adcl
pop
shl
dec
int3
jp
adc
or
ret
sbb
int3
pop
inc
in
jp
dec
pop
lds
mov
push
mov
int
or
mov
adc
sub
stc
rcr
int
sub
jmp
pop
jnp
addr16
cmp
out
pop
or
int3
imul
aam
cmp
sub
push
and
into
dec
xchg
xor
mov
mov
inc
mov
pop
leave
pop
imul
push
dec
cmpsl
pop
pop
jbe
pop
enter
ljmp
xchg
out
ss
call
cmp
out
and
imul
shlb
push
popf
jae
fadd
mov
decb
and
dec
add
sub
fidivs
ja
popf
dec
jle
or
pop
jmp
jns
sbb
xlat
rcll
jno
xchg
mov
fmuls
into
pop
sub
int3
sub
pushf
sti
imul
js
inc
mov
pop
or
cmp
jmp
dec
aas
adc
and
jnp
xlat
jns
mov
xchg
adc
rolb
or
mov
sbb
push
cmpsl
flds
test
pop
fbstp
cmp
mov
popf
jne
jb
sbb
jno
xchg
insb
inc
into
jae
enter
pop
sub
arpl
adc
add
jae
outsl
movsl
incb
daa
sti
iret
jge
movsl
mov
mov
xchg
xchg
sub
dec
rcrb
mov
mov
lea
mov
mov
jl
inc
in
repz
stos
bound
pop
jl
in
add
rorb
mov
loop
adc
test
andb
test
mov
or
jae
loope
aad
jle
out
sub
and
orl
xor
std
xchg
sbb
pop
sbb
or
enter
sub
adc
mov
ffreep
imul
cmp
inc
push
pop
push
movsb
dec
pop
and
out
and
inc
pop
stc
xchg
add
addr16
sbb
push
dec
xchg
in
data16
ljmp
pop
orl
adcl
idivl
stc
int
aam
fisttpll
mov
jecxz
mov
xchg
test
dec
sub
mov
pop
jns
jmp
fsubl
loope
push
out
jl
pusha
mov
mov
mov
push
adc
addl
lods
lods
mov
adc
int3
inc
mov
pop
imul
mov
mov
push
and
and
push
repnz
cmp
mov
fcmovnbe
dec
dec
sub
popf
push
or
mov
mov
lret
dec
xlat
ret
pop
adc
cmp
hlt
inc
dec
mov
leave
in
adc
pushf
jbe
push
insb
inc
cmp
jge
int
jns
mov
fsubs
xchg
arpl
inc
mov
mov
push
xor
insb
stc
sub
jne
push
aas
mov
das
inc
ljmp
das
sbb
mov
pop
fbstp
xor
push
outsl
add
mov
gs
xchg
or
and
pop
or
out
xchg
mov
mov
cltd
inc
mov
out
xchg
lret
xchg
lret
daa
mov
pop
xor
icebp
gs
push
xchg
or
mov
dec
out
mov
lods
xchg
xor
test
add
push
gs
xor
pop
not
jge
fisttpll
movsl
mov
lret
mov
je
sar
adc
and
int
xchg
push
mov
and
inc
sbb
mov
pop
aad
aas
daa
iret
cwtl
sbb
ret
sub
inc
sub
icebp
je
loopne
into
stc
jnp
out
movd
lret
sbb
sbb
aas
cmpsl
sbb
fs
xchg
sti
stos
jmp
cmp
in
mov
ljmp
in
mov
aad
mov
cwtl
and
xchg
add
aaa
or
decl
dec
xor
pusha
cmp
dec
js
stos
idivl
cmpsb
test
dec
cltd
movsb
sbbb
shll
rcl
mov
mov
xor
in
jecxz
or
call
ljmp
ret
test
mul
ljmp
adc
xchg
leave
dec
jle,pn
test
lret
and
mov
add
pop
add
aas
add
lcall
mov
add
cmpb
rcrl
nop
in
test
lcall
pop
mov
push
sub
test
std
or
mov
roll
inc
cmpsl
add
mov
mov
pop
cwtl
cli
inc
adc
add
or
repz
cmpb
mov
lret
pop
xor
rcrb
imul
loopne
jg
daa
jbe
daa
push
idivb
pop
icebp
cmp
cld
adc
sub
call
mov
iret
inc
inc
jbe
aam
push
inc
shlb
mov
stc
movsb
nop
jne
cmp
dec
scas
mov
inc
lahf
jmp
out
and
sbb
nop
outsb
arpl
xor
out
pop
or
jo
cwtl
popf
ljmp
fsubrs
adc
inc
lea
push
loopne
xor
imul
imul
mov
cmpsl
popa
stc
pop
bound
shrl
mov
pop
adc
cmp
push
scas
inc
out
mov
adc
gs
or
fimull
cmp
jg
jne
mov
and
xor
ss
rolb
incl
int3
rorb
xchg
fxch
push
xor
inc
iret
xchg
jbe
fwait
xor
movsb
je
scas
dec
inc
push
shrl
push
test
mov
adcb
and
mov
mov
pop
mov
dec
push
sbb
cli
jge
jb
or
mov
outsb
clc
cmpsb
mov
lret
mov
nop
popa
aam
lods
push
jl
jno
pop
imul
adc
push
into
sbb
movsl
sahf
inc
lods
inc
int3
rorb
insb
into
dec
jge
data16
rcrb
lcall
dec
ljmp
call
mov
dec
scas
push
dec
sub
cld
outsl
sbb
mov
lea
sbb
jmp
or
jne
rcrb
cmp
mov
cmp
jl
mov
xor
lret
xchg
cmpsb
sub
sbb
jb
outsb
test
and
and
xchg
ss
or
dec
lahf
cltd
ret
cmp
clc
mov
les
push
lock
xchg
push
inc
jb
pushf
mov
push
ret
mov
adc
xlat
sub
icebp
push
rorl
xor
insl
xor
das
sarb
out
in
in
sbb
repnz
mov
es
fcmovnu
and
loopne
mov
sub
xor
pop
or
leave
les
je
xchg
arpl
sub
call
lcall
push
je
xlat
cmp
pop
dec
mov
ds
and
dec
imul
aas
clc
arpl
out
sbb
inc
fnstcw
repnz
ss
movsl
pushf
lahf
ret
scas
xchg
inc
jl
cmp
mov
mov
test
aad
pusha
and
sub
mov
or
ret
cwtl
call
sbb
add
in
cmp
outsb
push
dec
inc
hlt
psubsw
pop
popf
mov
fisttps
mov
dec
xor
fldl
and
ficoms
mov
and
stos
or
out
push
int
sbb
cmp
ficoml
das
pop
cmc
loope
mov
iret
jns
push
es
mov
mov
cmpsb
jecxz
jle
jno
jnp
test
pop
daa
push
cltd
pop
stos
cmp
repnz
movsl
test
ljmp
sub
or
movsl
mov
pop
jecxz
add
imul
cli
adc
nop
mov
shrb
pop
fwait
popf
popl
or
int3
adc
mov
dec
xchg
and
adc
testl
and
repz
data16
xor
inc
pop
mov
dec
lods
push
sbb
les
or
aas
cli
data16
xlat
xchg
mov
ja
mov
scas
add
jecxz
inc
cs
mov
repnz
push
jmp
fsubr
push
pop
ds
addr16
out
add
std
jge
cwtl
insl
mov
add
lahf
out
sub
adc
mov
push
scas
mov
cmp
maxps
lcall
rcll
sbb
mov
aas
xor
dec
push
mov
sarl
ja
push
push
cmc
mov
mov
dec
sbb
out
xchg
fbstp
add
pushl
dec
push
dec
insb
push
lret
test
mov
mov
ja
adc
movsb
mov
cmp
int3
mov
ret
pop
orl
xchg
mov
pop
mov
lcall
loopne
adc
lods
cmp
push
cmpsl
movb
jle
push
push
xchg
out
add
jb
pop
andb
dec
pop
push
sub
and
xchg
ficoms
ret
xchg
push
outsb
lret
out
lcall
mov
and
or
add
dec
repz
jmp
xchg
cmp
xchg
inc
sti
arpl
pop
mov
loope
mov
icebp
cmp
ss
inc
sub
add
clc
imul
cmpsl
imul
push
mov
xor
stc
out
cmc
dec
not
repnz
insb
lret
pop
out
lcall
fsubl
leave
sti
dec
or
and
add
pushl
lods
pop
sub
imul
cmpsl
es
and
jp
or
xchg
push
sbb
mov
in
in
pop
incl
cmpsb
ljmp
orb
stc
lds
lds
out
mov
mov
pop
ficoms
fs
sub
mov
cmpsb
ljmp
lock
ret
jecxz
pop
pop
xchg
add
cmp
adc
or
lods
or
cli
out
cmp
push
push
out
scas
pop
nop
in
push
sbb
mov
gs
adcl
push
cltd
xor
enter
inc
stc
mov
push
and
jecxz
pop
pop
daa
jne
or
pop
sub
sbb
loope
mov
mov
push
fadds
pop
ds
std
popa
test
jno
push
rep
es
or
lcall
adc
and
shlb
scas
sti
adc
push
sub
add
push
stos
push
loope
or
shl
stc
or
xchg
andb
mov
fmull
out
out
jno
pop
add
add
add
xchg
push
mov
int3
cli
insb
lods
in
clc
jo
lret
leave
push
out
leave
outsl
cmpb
xchg
in
std
mov
dec
cmp
roll
adc
adc
dec
xchg
std
sbb
and
push
xchg
mov
cmpl
rolb
fs
aas
push
mov
add
sbb
adc
push
xchg
or
mov
lods
push
out
xchg
or
icebp
int3
mov
push
xchg
aas
fs
push
jle
lcall
hlt
out
push
pusha
inc
jg
sub
mov
mull
out
lods
enter
imul
imul
and
add
sbb
sbb
sbb
adc
pop
mov
in
lods
das
insb
insb
jo
out
push
or
and
cmp
sti
adc
notl
divb
flds
xchg
dec
mov
xchg
inc
ljmp
pop
popf
roll
lahf
fcoms
jns
lds
mov
loop
arpl
fs
and
cld
xchg
mov
sahf
cs
bound
sahf
mov
add
sbb
or
loope,pn
jp
test
cmp
or
jle
mov
pop
add
xchg
fiaddl
dec
xchg
iret
sub
dec
jge
xchg
imul
cli
mov
imul
imul
out
mov
cmpb
cmp
dec
adc
push
mov
loop
out
jns
or
cmc
sar
mov
dec
test
xchg
inc
daa
inc
loope
lods
jbe
jmp
xchg
jnp
mov
stc
xor
jns
xor
repz
and
mov
pop
repz
jl
adc
sarb
push
mov
pop
mov
lock
shrl
jge
or
mov
push
or
mov
test
das
mov
dec
jb
ljmp
dec
pop
imul
hlt
orl
or
lcall
jns
lds
push
cli
sahf
in
loope
sbb
xor
add
and
out
test
xchg
outsl
cs
scas
fcmovu
test
int
rolb
in
cmp
adc
lret
xchg
jp
lea
cltd
icebp
das
je
xchg
cli
shlb
movb
mov
dec
sub
minps
push
fistps
cltd
push
aas
jno
lods
cmp
pop
jp
sbb
int
int
push
aad
cmp
mov
lds
mov
enter
push
sbb
popf
fisubrl
mov
dec
add
xor
fidivrs
int
leave
int3
popw
setl
out
xchg
dec
jmp
xor
mov
add
insb
insb
scas
enter
adc
push
xchg
mov
mov
repz
pop
push
xchg
sbb
lret
sub
mov
jns
sub
repz
push
call
sub
inc
aam
adc
mov
lds
orl
dec
mov
jecxz
ja
lcall
push
mov
scas
xor
jp
and
int3
adc
sub
sbb
outsb
inc
test
dec
mov
nop
aaa
int
push
daa
lods
cmpsb
cmpl
xchg
adc
mov
fistpll
loopne
pop
jecxz
push
and
sbb
test
lahf
enter
xor
inc
lret
inc
cmp
stos
sbb
xchg
adc
fs
lods
mov
mov
push
mov
mov
mov
jo
sub
negl
sbb
push
fs
test
xor
cmp
movsb
pop
adc
pop
rolb
in
testb
pusha
lcall
in
testb
push
pop
cli
loope
repnz
pop
ret
rcll
pop
out
push
in
clc
pushf
push
sbb
cmpsl
cmpsl
cmc
mov
std
fs
jle
xchg
jle
jg
xchg
daa
dec
pop
lret
inc
jmp
jno
lods
inc
sub
dec
inc
ror
shrl
bound
sbb
sti
pop
into
dec
cmp
mov
fisubrl
in
fadd
leave
sub
push
pop
xor
movsb
idivl
sbb
adc
movb
dec
inc
mov
loop
jne
xor
aam
sbbl
xchg
adc
push
lret
mov
pop
in
lcall
lret
in
mov
push
mov
xchg
or
scas
rcrb
cmp
add
dec
es
push
inc
popf
inc
sbb
nop
test
sub
loope
outsb
nop
sti
cmp
cmpsl
jo
xchg
das
incb
mov
inc
adcl
lcall
xchg
cwtl
pusha
mov
add
scas
stos
ret
repnz
scas
push
pop
push
ja
ficompl
xlat
fs
lods
cmp
in
and
scas
dec
xchg
xlat
adcb
adc
push
cmp
and
dec
lock
jne
lret
mov
sarb
xchg
int
sarl
sahf
dec
adc
mov
jns
push
and
sbb
fwait
imul
sbb
loopne
movsl
fnsave
gs
xchg
pop
adc
roll
outsb
out
adc
dec
pop
dec
xchg
pop
aam
push
sub
and
sub
cmp
aam
push
dec
and
xor
and
mov
and
pop
mov
sbb
iret
sbbb
fisttpl
lods
fisubrs
es
adc
jns
cmpsb
adc
std
adc
ret
or
mov
fisubrl
jg
mov
fisubrl
pop
mov
jmp
scas
je
rol
call
and
js
mov
adc
bnd
repnz
movsl
xor
pop
or
push
aaa
enter
test
pop
and
lock
dec
popf
dec
inc
test
call
lahf
movsb
mov
sbb
jl
and
clc
loopne
lea
lcall
add
xlat
stos
mov
aad
pop
shrl
ficoml
mov
cltd
test
xchg
and
push
pop
and
pop
and
xchg
inc
xor
ret
leave
mov
ret
xchg
pop
mov
nop
rorl
sub
ljmp
cld
dec
fs
fstpt
pop
mov
cmp
inc
pop
ljmp
jbe
xor
pushl
lea
jbe
outsb
xchg
pop
inc
push
lahf
subl
adc
in
cwtl
cmpsl
cmp
dec
sbbl
in
adc
rol
int3
cmc
movl
fcmovnb
pop
mov
scas
sbb
sarl
push
es
jl
decb
cmp
mov
mov
in
in
pop
add
pop
stos
add
adc
sub
jae
mov
insb
adc
and
sbb
xor
in
xchg
push
dec
mov
test
in
cmp
insb
aas
fnstcw
pop
outsb
xchg
or
stos
push
push
cmc
mov
mov
addr16
adc
xchg
add
gs
dec
sub
gs
lahf
das
sub
adc
cmc
mov
pop
loop
sub
pop
fs
adc
mov
xor
inc
lds
lahf
imul
repnz
iret
jbe
cltd
pusha
sahf
ds
mov
mov
insl
out
lock
lea
arpl
push
and
jae
movsl
rorb
rolb
lahf
pop
movsl
arpl
std
push
jge
pop
andl
sahf
mov
inc
and
sbb
das
fldcw
rolb
push
pop
xchg
xchg
outsl
lret
popa
data16
outsb
jnp
js
xor
mov
scas
jg
add
lock
pushf
xlat
popa
jb
dec
mov
cmp
repz
movsl
popf
das
inc
aam
cmpsl
outsb
mov
stos
xchg
jo
lret
sbb
js
add
test
mov
insl
jnp
rorl
mov
sub
cmp
lea
cmp
or
je
jmp
sbb
ficompl
inc
sbbb
push
xor
dec
fcoms
pop
lock
xchg
lret
and
and
movsl
sub
pop
pushf
sub
adc
mov
mov
dec
jno
mov
orb
xchg
jmp
fcmovne
lahf
inc
pop
mov
dec
mov
jmp
popf
ja
int3
es
test
fdivrs
lahf
jg
adc
push
xchg
sti
inc
fsubrl
jnp
aad
out
in
cmp
test
lcall
loop
movaps
mov
or
add
out
jb
mov
jecxz
pop
gs
sbb
cmp
addr16
ja
adc
lcall
cmp
or
das
into
cli
xor
hlt
xchg
das
lcall
sbb
adc
cli
into
pop
xchg
push
push
sub
and
xchg
jge
add
scas
push
enter
lea
les
inc
lcall
cmpb
mov
push
orl
ret
mov
test
xor
loopne
stc
testl
xchg
nop
lret
pusha
push
sbb
sub
outsl
sub
es
mov
pop
jo
adc
mov
insl
call
data16
mov
call
loop
mov
add
dec
jne
cmpl
mov
sti
cmc
dec
ja
rcll
push
ja
fistl
iret
cmc
aam
xlat
push
and
loop
into
das
add
mov
test
jae
mov
mov
pushl
mov
mov
sub
ss
cld
xchg
decl
sbb
xchg
sub
es
pushf
je
xor
loope
in
jne
addb
or
add
jge
inc
fwait
or
cwtl
jb
mov
jae
push
fs
inc
in
cli
hlt
sti
adc
pop
cmp
popf
outsl
mov
or
dec
push
lea
or
cmpsb
mov
sub
mov
jo
js
int
adc
cld
xchg
hlt
lret
jbe
xchg
adc
or
and
inc
mov
sti
sbb
mov
mov
mov
cltd
sti
in
and
push
mov
pop
cmpsb
or
xchg
les
mov
sub
sbb
clc
lcall
stc
les
push
jge
loop
jecxz
imul
das
inc
or
into
push
divb
xor
dec
in
mov
dec
jns
jno
cs
movsb
xor
aas
pop
shll
scas
inc
adc
fsubs
shrl
jecxz
add
pop
add
cmpl
or
adc
loope
pop
sti
push
and
xchg
lcall
pop
push
pop
inc
jge
add
add
aad
push
xchg
xor
int
aam
add
jmp
xor
in
mov
pusha
cmp
data16
jnp
test
mov
scas
mov
mov
lahf
dec
sti
sub
not
ret
dec
gs
aas
xchg
imul
imul
inc
ds
call
ds
xor
cmpsb
pop
add
lahf
pushf
aaa
hlt
into
push
inc
popf
addr16
cmp
ss
adc
xor
dec
mov
iret
fcmovnu
push
in
cmp
mov
xor
push
adc
adc
and
outsl
xor
js
bound
xchg
dec
repnz
loope
mov
adc
or
enter
ss
pop
xchg
xchg
adc
jno
mov
nop
sarb
mov
test
push
cmp
pop
sbb
int
add
add
and
das
dec
repz
dec
mov
push
aam
nop
and
sbb
cltd
cmp
mov
jp
adc
inc
push
mov
in
push
es
stos
in
lcall
arpl
sub
mov
jno
push
dec
pop
daa
lods
xchg
subb
lea
subb
out
pop
lcall
adc
shlb
call
outsb
insb
and
xchg
push
addr16
daa
mov
push
lods
xor
push
negl
loopne
jno
jo
loopne
mov
mov
gs
stc
xchg
fists
cmp
shrl
cld
xor
sarl
inc
push
inc
lods
movb
negb
pop
arpl
icebp
sarb
les
jbe
inc
sub
pushf
pop
sahf
je
adc
pop
repnz
jo
jne
mul
fwait
outsb
lret
std
fildll
adc
shll
call
mov
lock
inc
inc
mov
adc
insb
into
lea
cmp
or
ret
push
daa
cmpsb
shlb
int
faddl
jno
jecxz
fldl
outsb
lds
xchg
cld
push
mov
inc
lods
add
mov
shrb
sti
repnz
fidivrs
and
repnz
dec
fists
bound
jp
lods
movsb
test
inc
mov
inc
push
cld
push
xchg
mov
add
cmpl
popa
outsl
je
and
add
rcrl
inc
add
fimuls
pop
push
jnp
push
pop
aad
or
or
cmp
les
mov
mov
repnz
and
fstl
xchg
mov
push
mov
lds
rclb
jmp
push
adc
sub
sub
jl
shll
add
pop
mov
rorl
xchg
sub
dec
pushf
jmp
push
test
push
sahf
jge
xchg
add
insb
imul
sbb
mov
test
xorl
mov
push
push
outsb
js
ja
rorb
jno
je
ja
sub
adcl
xchg
insb
scas
cmpb
mov
popf
jns
or
int3
out
std
and
imul
jle
inc
xor
sub
inc
cld
cli
mov
push
lret
adc
xchg
and
adc
push
pusha
sub
popf
push
cli
lods
movsl
rorl
cmp
jp
int3
mull
sub
xor
and
push
sbb
daa
pop
pop
orl
idivl
and
mov
mov
sub
mov
push
movsl
clc
or
push
ljmp
xor
xlat
push
adc
outsb
and
jmp
push
jb
push
mov
add
call
addl
test
fstl
mov
sbb
arpl
test
test
icebp
and
rclb
loope
and
sub
mov
mov
pop
dec
testl
xchg
je
mov
fwait
mov
sbb
jno
enter
cmp
mov
stc
sbb
jge
inc
xchg
test
subb
xchg
loope
gs
fsub
std
repnz
and
stc
mov
xor
bound
out
in
and
push
mov
mov
std
mov
jns
push
pushf
mov
mov
lcall
sub
sub
jg
je
xchg
cmp
or
sbb
pop
inc
pop
test
stos
sahf
push
push
mov
insb
jle
jp
sub
add
mov
outsl
xor
push
lcall
pop
scas
jg
ret
movsl
iret
mov
aad
inc
sub
mov
add
movsl
cmp
sub
lcall
in
xor
sbb
dec
push
adc
cmp
popf
fdivrs
cmp
lods
in
xor
mov
rcrl
mov
dec
sub
pop
sbb
cmp
jge
lret
mov
int3
test
mov
xlat
in
rcl
aas
ss
test
dec
push
dec
jno
mov
or
sbb
fstps
and
test
inc
jl
xor
mov
sub
xor
hlt
cmpsb
sub
jo
insl
setne
nop
into
jo
dec
pop
fucomip
or
fimuls
xchg
popa
fnsave
addl
dec
xor
add
fwait
lods
adc
fisubrl
loope
push
mov
jae
xor
mov
jbe
arpl
jno
aad
mov
jns
dec
pop
int
inc
adc
shrb
xchg
sahf
insl
add
inc
or
push
les
sbb
addl
clc
or
aas
and
out
in
pop
gs
repnz
xchg
push
sub
push
pushf
into
jnp
into
dec
pop
scas
adc
xor
insb
mov
sbb
jae
shlb
mov
fbstp
aas
mov
test
test
icebp
jge
adc
mov
dec
push
jnp
imull
xchg
cmp
addr16
pop
inc
sbb
sub
shlb
ss
nop
addr16
sub
adc
out
xchg
mov
aas
dec
mov
shlb
outsb
pop
iret
dec
cwtl
pop
jnp
xchg
cmp
xor
lock
and
aas
sub
push
nop
mov
xor
mov
loop
outsb
push
pop
xor
mov
sub
testl
lock
in
nop
insb
pop
xlat
sub
push
adc
les
xor
in
icebp
ret
imul
sub
sub
inc
dec
jb
xor
pop
mov
cmp
xor
notl
xchg
xor
add
dec
add
fisubl
arpl
mov
mov
inc
push
mov
int3
pop
mov
inc
xchg
gs
aad
pop
lahf
jmp
in
ds
add
dec
xchg
xchg
cmp
std
aad
inc
ret
jo
outsb
push
xor
ret
lcall
mov
andb
lahf
xchg
sahf
mov
stos
push
sti
mov
out
or
aas
fucom
jno
mov
lods
outsb
inc
jno
push
mov
sbb
std
out
inc
mov
push
fcomi
pop
mov
mov
jae
cmc
ss
push
rcll
cmpb
mov
call
pop
and
test
dec
out
fdivl
lock
adc
rcll
push
dec
push
adc
outsb
mov
inc
mov
jo
pop
jp
test
out
mov
sti
jnp
rcr
add
pop
out
push
mov
call
inc
add
imul
js
jecxz
roll
xchg
push
push
sbb
shll
addr16
scas
mov
cmp
and
jle
sti
xchg
add
lcall
and
mov
xor
inc
dec
daa
out
inc
ret
in
mov
subb
in
mov
aaa
mov
popf
jle
dec
pop
push
xchg
and
notl
push
paddw
pop
xchg
xchg
inc
ljmp
mov
and
sub
adc
pop
mov
pop
sahf
dec
sub
dec
xor
push
and
pop
xchg
inc
xchg
cmpl
adc
add
jnp
add
add
push
inc
test
xchg
out
lods
xor
movsb
int3
pand
lods
aad
nop
mov
push
fsub
mov
and
dec
sub
je
xchg
int3
sbbl
sbb
lods
add
mov
fnsave
test
jge
in
lcall
les
fsub
xchg
inc
aas
push
jmp
add
xchg
in
nop
push
orl
test
push
nop
jbe
xor
test
repnz
sarl
ficoml
mov
mov
pushf
repnz
mov
jmp
aad
adc
xor
mov
mov
inc
dec
pop
repnz
insl
xor
inc
add
sub
inc
stos
sbb
sbb
hlt
repz
xchg
in
adc
push
leave
and
popa
mov
jmp
mov
push
fiadds
dec
and
out
aaa
sub
out
push
dec
mov
cmp
popf
push
cmp
sub
cwtl
fwait
nop
test
aas
or
flds
or
mov
add
sub
xor
movsl
push
xchg
xchg
adcb
inc
sub
push
mov
cmp
fildl
adc
and
popa
jne
movsl
into
inc
sub
push
sub
jge
pusha
stc
pop
ja
jle
pop
add
aas
test
bound
iret
xacquire
jae
mov
ret
push
inc
adcb
loop
mov
jb
andl
sub
scas
pop
stos
rcl
stos
jp
push
ss
mov
jnp
push
inc
cmp
sbbb
push
testb
and
cmpsb
mov
push
fimull
loope
xchg
movsb
xchg
shll
les
out
test
aad
or
icebp
jge
pop
jno
lahf
stos
xorl
lret
sub
imul
pop
mov
ret
in
lret
inc
popa
push
adc
jecxz
jb
fisubs
cmpsb
je
into
pushf
out
xlat
inc
mov
repnz
int
cmp
mov
lds
aas
and
rcll
loopne
sub
push
add
loopne
pop
loope
in
sub
xor
add
js
in
fmuls
jo
push
gs
xor
out
js
mov
pop
fcomip
leave
enter
inc
xchg
add
xor
in
add
sbb
loope
xchg
fcmovnu
pop
sarl
mov
fs
or
insl
jns
or
inc
mov
cmp
into
scas
cmp
int3
in
ss
mov
add
cmpsl
and
gs
movsl
repnz
sub
push
cmp
pop
mov
dec
mov
insb
movsl
dec
lcall
orl
jl
xchg
imul
adc
sub
cmpsb
push
sub
lret
mov
pop
shl
mov
push
daa
stos
lods
in
insl
jmp
out
sarb
adc
sbb
adc
push
fisttps
add
sub
mov
xchg
ds
fsub
call
pop
fs
in
inc
movsb
push
shrb
mov
insb
movsl
repnz
loopne
dec
popa
xchg
push
sbb
rclb
stos
sbb
sahf
or
mov
adc
es
ljmp
cmp
add
aas
push
mov
out
fwait
mov
mov
xchg
test
push
xor
dec
push
rorl
movsb
scas
mov
out
fcoms
ret
xchg
ret
sub
jg
cs
mov
inc
adc
repnz
iret
jns
stos
jmp
jno
lods
rol
adc
out
jecxz
shl
mov
leave
inc
inc
addr16
mov
stc
jg
fildll
pop
add
les
push
mulb
jns
mov
push
cmp
dec
and
xorl
and
mov
sub
xchg
adc
addl
sbb
hlt
test
insl
punpckhwd
mov
fwait
ljmp
mov
inc
push
push
jo
xchg
imul
dec
xchg
jnp
out
pusha
adc
fcmovnb
out
jecxz
xchg
xor
xchg
cld
push
pop
and
js
ss
sahf
jbe
mov
mov
mov
js
movsl
enter
and
jecxz
cmp
ret
adc
popa
sbb
fs
cmp
jb
sub
hlt
xchg
sbb
jl
jo
mov
dec
data16
outsb
pop
mov
sbb
out
mov
jo
fildll
imul
mov
sahf
xor
vmovss
cld
jp
mov
and
xlat
xchg
xchg
rcrb
hlt
inc
sub
lds
arpl
inc
stos
popf
cmpl
add
or
dec
and
fmuls
xchg
dec
add
sub
sbb
pop
rorb
sub
cwtl
or
sbb
mov
popf
aam
jle
repz
jne
mov
pop
add
les
test
in
mov
jge
dec
sahf
and
repz
sub
lcall
icebp
lret
jmp
push
roll
aad
pop
fstl
xor
test
imul
andl
es
xor
lods
ret
cmp
push
pushf
inc
fisubs
imul
xor
xchg
mov
insb
fsubs
inc
rorb
xchg
jnp
in
push
jns
sbb
subl
test
push
fnclex
shrl
dec
or
cmp
or
cmp
xchg
xor
jnp
shl
jns
ret
cld
cltd
mov
add
test
rol
xor
int3
cld
adc
jg
push
cmp
or
lahf
pop
sub
iret
xtest
cmp
sub
mov
push
sbb
dec
fadds
mov
xchg
sbb
lods
push
lock
arpl
rclb
int
mov
iret
aas
mov
mov
shll
mov
push
push
jl
jne
push
pop
roll
pop
push
rcrb
shl
arpl
and
divb
xorl
xchg
mov
jecxz
shll
bound
pop
push
mov
outsb
sahf
push
lahf
loopne
dec
fcoml
mov
dec
pop
sub
xchg
xor
or
dec
mov
mov
test
sub
das
jnp
sub
cmp
xchg
push
adc
or
nop
mov
lods
push
gs
ret
xchg
xchg
push
xchg
pop
push
cmp
xor
stc
push
aaa
jnp
fldl
or
sbb
add
jo
adc
sbb
stos
push
xor
lret
aam
test
pop
sbb
xchg
mov
or
xchg
jno
push
sub
dec
push
aaa
adc
cmp
sub
fs
iret
movsb
cmpsb
inc
bound
xor
out
jne
fistps
call
xor
subb
es
add
ljmp
ret
sub
scas
dec
stos
stos
add
mov
xchg
stc
xchg
mov
jae
cmp
lahf
sub
enter
or
add
subb
sbb
popa
dec
dec
xor
leave
sub
leave
lcall
daa
pop
les
mov
ljmp
pusha
add
or
popf
and
outsl
xor
enter
jb
rcll
push
xchg
fmull
xor
push
insl
mov
mov
push
pop
cmc
mov
jecxz
fwait
or
mov
ror
push
or
inc
push
loope
out
int
mov
cld
adc
out
push
add
int
adc
push
mov
add
mov
fdivl
adc
dec
std
push
and
insl
aas
in
cmp
mov
repz
stos
mov
inc
insb
cli
mov
setb
jns
les
fidivrs
add
ret
and
xchg
xchg
and
out
mov
lahf
mov
dec
pop
pushf
test
and
cli
call
cmp
xchg
and
pop
jo
cli
les
ljmp
jno
lock
scas
scas
mov
inc
dec
and
repz
mov
sbb
pop
movsl
jl
in
je
push
mov
add
mov
aam
and
inc
xchg
dec
stos
lret
rcll
cld
push
icebp
enter
xorl
pop
insb
cmpsl
adc
inc
rol
or
lock
nopl
test
cld
pusha
les
mov
popf
fwait
jmp
aam
lods
xchg
loope
fwait
ss
add
lock
pop
in
ljmp
xor
aas
pop
push
lock
mov
jmp
dec
clc
sbb
das
js
adc
loope
dec
mov
jg
enter
cmpps
into
icebp
inc
add
and
push
dec
push
cli
push
push
push
lock
and
ffreep
andl
sarl
dec
ret
cli
add
rcll
inc
and
fs
outsl
sbbl
cmpsb
leave
mov
dec
std
adc
in
cmp
data16
dec
xchg
ja
pusha
xor
jg
fdecstp
mov
pop
shrb
mov
shll
lcall
sahf
aam
or
pop
cmp
pop
mov
test
push
cmp
sbb
lret
adc
adc
shl
int3
push
pop
mov
sub
movsb
push
pop
ror
fldt
inc
test
xor
xorl
shll
xchg
and
punpckhwd
jae
popa
rcr
insb
jns
mov
inc
dec
dec
push
or
divl
std
adc
pop
xor
in
sarb
lret
cmpl
fnsave
out
xor
scas
mov
mov
xor
imul
addr16
jns
and
gs
movsbl
jg
xlat
cmpb
and
fisttpl
cmp
cs
mov
inc
fisttps
sahf
imul
and
jbe
pop
adc
inc
test
inc
nop
outsl
fdivrp
mov
xchg
push
lcall
scas
mov
ja
jns
push
mov
daa
test
nop
pop
les
ss
xor
cmc
xchg
mov
xchg
xlat
daa
add
ljmp
cmp
add
out
lods
xor
les
xchg
fnstcw
insb
and
push
popf
sub
jb
mov
xlat
idivb
pop
shrb
mov
movsb
sbb
rcl
mov
and
push
testb
jge
jecxz
push
xchg
and
je
fisttpl
jne
xchg
mov
cli
out
cmp
sub
and
pop
xor
xchg
add
lret
cli
mov
repz
cltd
shll
sbb
mov
cli
pop
mov
xchg
psubw
cld
xor
cmp
test
dec
adc
mov
aas
ss
xor
push
test
inc
push
out
adc
js
dec
pop
adc
out
call
jae
movsl
daa
outsb
movsb
repnz
and
ja
cmp
jnp
stos
xchg
xchg
push
jae
sti
cmpsb
mov
xchg
sbb
sar
mov
in
les
pusha
mov
clc
loope
lds
loop
mov
cmp
add
and
hlt
pop
mov
xorl
cld
or
jg
fsubrl
xor
roll
loopne
shlb
pop
mov
mov
mov
cmp
push
mov
or
pop
popf
loopne
xchg
jno
test
cwtl
sti
daa
ss
pushf
and
mov
add
jno
mov
jge
lret
jge
jno
loope
ljmp
sub
pop
mov
fwait
fs
xor
sbb
adc
add
sub
popa
movsl
pop
inc
out
incb
dec
adc
jns
push
xchg
add
repz
push
sub
push
leave
popf
sbb
or
fs
and
pop
divl
xor
add
and
push
sbb
sub
or
stc
ret
pop
lods
xlat
sbb
add
mov
xlat
push
xchg
lods
icebp
mov
test
arpl
lret
sbb
lock
mov
insb
in
pusha
xchg
pop
fadds
cmpsb
xchg
or
add
mov
fwait
mov
mov
lock
xchg
mov
shrb
orb
lret
jecxz
test
sbb
or
dec
hlt
mov
adc
fcoms
icebp
mov
das
jmp
jnp
xor
adc
mov
fsubp
jge
add
push
jp
mov
pop
movl
cmpl
mov
outsl
or
xchg
cmp
pop
lds
fstl
push
mov
pop
fsubr
fwait
in
inc
xchg
cs
frstor
nop
inc
mov
in
mov
adc
mov
dec
fists
and
mov
push
sbb
cmp
xor
cmp
fildl
bswap
jge
ss
aas
inc
sub
mov
outsl
arpl
xor
stos
sbb
int3
test
pop
scas
pop
mov
insl
cmp
das
sbb
test
test
repnz
in
clc
dec
mov
inc
pop
mov
idivb
mov
std
sbb
mov
shrb
xchg
xor
jb
pusha
fisttps
aaa
fs
cmc
ret
aaa
mov
les
ja
mov
int
inc
shr
ret
mov
mov
test
ljmp
int3
ret
movsb
repnz
ret
aaa
push
into
fisttpll
or
cmpsl
sbb
mov
cmp
je
aas
mov
dec
pop
xor
in
xchg
or
or
inc
out
jmp
cwtl
fidivrl
mov
xchg
lret
sub
xlat
test
fists
lret
stc
mov
in
jle
adc
or
push
fpatan
jl
into
out
or
or
sbb
pop
test
pop
out
or
sarl
inc
sub
add
sub
fcoms
loope
add
push
out
inc
rcr
jmp
loopne
inc
jge
sbb
cwtl
mov
add
cmc
imul
orb
hlt
lock
imul
mov
mov
pop
loope
cli
fwait
movsb
cwtl
push
pop
repnz
insb
fsubs
adc
mov
inc
addr16
sahf
dec
cltd
dec
nop
sub
ljmp
mov
xor
stc
scas
sub
stos
loope
enter
dec
push
stos
movsb
mov
xor
sti
inc
imul
dec
xor
dec
xchg
pop
pusha
jnp
inc
aas
in
pop
out
out
inc
add
imul
pop
push
mov
mov
jo
xchg
pop
cmp
je
cmpsb
loop
in
lea
pop
xchg
mov
lret
lods
lea
popf
or
add
cmp
loopne
test
mov
aas
or
scas
push
pop
loope
icebp
mov
and
mov
es
test
or
jg
cmp
pop
shll
jne
adc
mov
test
outsb
aam
fwait
mov
dec
mov
xchg
test
add
pop
dec
cld
push
fcmovnb
dec
jl
dec
shll
cltd
xchg
push
or
fdivrs
mov
hlt
mov
jp
adc
cmp
data16
in
xorl
inc
jne
mov
sub
inc
mov
cmp
out
repz
sbb
pop
mov
or
or
test
mov
jnp
mov
nop
cmp
lahf
or
adc
add
jo
xor
stos
cld
das
dec
fmuls
lcall
pop
lods
add
push
add
std
pop
stos
sub
iret
in
into
and
das
mov
inc
cmpb
add
mov
cmc
jae
arpl
mov
popf
dec
and
mov
mov
mov
push
sub
and
data16
xlat
xor
cs
cld
mov
fst
add
or
ret
shlb
aas
repnz
es
clc
fdivr
popa
add
cmp
ds
cmp
cmp
mov
in
add
push
push
fs
xor
js
adc
sbb
in
push
cmp
roll
decb
lock
add
popf
push
dec
jl
xchg
loop
xchg
orb
unpcklps
insl
stos
movsb
sbb
movl
inc
pop
jecxz
mov
xchg
lea
jne
scas
inc
popa
push
test
or
dec
jbe
int
jbe
mov
leave
stos
mov
sbb
pop
adc
std
arpl
stos
test
aaa
mov
popa
dec
and
adc
pop
sub
and
andb
dec
push
fistl
lcall
ds
sub
push
dec
scas
pop
mov
inc
es
mov
fs
incb
or
sbb
popf
pop
mov
lock
ja
add
or
cli
repz
xchg
arpl
jp
cmp
loopne
jnp
lea
cmpsl
fists
addb
inc
sbb
or
pop
push
mov
and
mov
cmp
mov
std
or
pop
imul
sbb
nop
xchg
fistpl
mov
nop
scas
fcompl
cwtl
xchg
and
push
xlat
or
rclb
test
cmp
out
ja
sbb
mov
pop
ljmp
int3
or
pusha
mov
adc
inc
sub
mov
in
imul
mov
pop
pop
or
cmovns
aad
add
mov
iret
xchg
push
loop
test
jmp
in
mov
mov
das
cmp
jae
mov
cs
in
cmp
imul
loope
sub
sub
push
push
xchg
and
mov
pop
fdivp
fs
mov
sbb
inc
lock
cld
xchg
push
mov
fcmovbe
les
lret
out
add
mov
shrl
pop
jl
push
push
xchg
lret
outsb
push
push
cmpsl
inc
mov
roll
add
cmpsb
int
fs
sahf
test
lret
dec
xor
or
cmpb
repz
push
sti
flds
lea
and
andb
ja
call
sbb
movsb
popa
pusha
lea
mov
pop
and
mov
movsl
cs
xlat
fwait
in
je
lret
or
lcall
dec
ds
push
sbb
lret
movl
cmp
add
cli
lret
fimuls
xor
inc
sub
jecxz
rcll
dec
es
jmp
pop
test
in
mov
dec
loopne
out
push
lock
test
jnp
mov
daa
fadds
xlat
or
pop
cmpsb
xor
xchg
pushaw
jge
fisttpl
ret
in
dec
int
iret
int3
dec
popf
mov
gs
dec
je
add
and
pusha
dec
cmp
adc
sbb
adc
clc
or
leave
mov
ret
bound
jbe
lds
outsl
lods
mov
test
pop
mov
pop
cld
dec
gs
dec
mov
push
addr16
jbe
or
jb
iret
add
into
aaa
enter
lea
out
dec
stc
push
in
stos
mov
test
push
bound
add
fcoms
ljmp
ja
mov
in
rclb
xor
cmp
hlt
add
fdiv
dec
lods
add
je
insb
fldt
arpl
or
sub
in
add
mov
scas
stos
inc
les
cmpsl
xlat
pop
cmovg
push
xor
aam
pushf
sbb
leave
sub
jmp
or
add
or
sbb
sbb
push
imul
mov
faddl
push
jl
add
mov
fstpt
jns
and
test
sub
pop
xor
call
cmp
mov
in
jp
lods
enter
adc
cli
cmpsl
cwtl
xchg
jbe
lods
add
aas
shrb
xor
orb
jp
lods
shr
stc
add
adcb
adc
outsl
xchg
mov
divps
pop
jb
adc
stos
push
enter
fldcw
fcomps
push
cmp
jnp
add
add
add
jmp
dec
cwtl
lods
jb
cmpsl
mov
loope
loopne
lock
sbb
mov
cmpsl
lea
jp
frndint
and
gs
stos
sbb
and
sbb
icebp
pop
jmp
fprem
mov
cmc
xor
int
js
sub
pop
xchg
inc
adc
fsubp
pop
mov
xchg
iret
repz
dec
cld
es
adc
sahf
xchg
outsb
push
jge
cmp
pushf
fstpl
arpl
das
sbb
rorb
xor
iret
les
push
ss
xchg
scas
mov
ljmp
mov
lahf
repz
jle
popf
int3
jg
or
xchg
mov
jmp
and
imull
incl
pushf
xchg
loope
cmp
pop
and
jnp
stos
push
inc
xchg
ss
push
mov
mov
pop
push
cmc
aad
js
jmp
mov
notl
pusha
dec
sbb
inc
pop
mov
sahf
lods
or
pop
and
mov
out
sbb
sahf
jge
fbld
int
sub
add
sub
loope
dec
loope
jg
sub
sti
pop
xor
pop
out
sbb
mov
cmc
pop
push
gs
sar
and
xchg
mov
and
aaa
xchg
jle
les
test
adc
push
inc
push
or
jnp
cmpsb
test
arpl
and
leave
pop
cmp
pop
push
outsl
sub
push
test
arpl
xchg
mov
xchg
sub
mov
push
mov
xchg
mov
cs
xchg
sub
jnp
movsl
push
aam
scas
mov
shll
mov
dec
xchg
rcl
addr16
insb
jns
in
les
inc
mov
xor
rcrb
add
js
dec
test
lret
scas
test
inc
lret
mov
dec
arpl
sbb
inc
jnp
daa
inc
sub
mov
and
pushf
arpl
mov
xchg
or
push
pop
popf
fcmove
dec
sub
ret
insb
pop
jbe
daa
jno
fs
nop
hlt
adc
or
and
pop
adc
nop
das
rcrl
aas
je
or
mov
cmp
pusha
jge
rcr
sahf
movsl
pop
add
aaa
jp
mov
ja
stos
cmp
hlt
fsubrs
popa
int3
int3
cld
jno
fbld
ds
ds
and
sahf
and
xchg
add
sahf
mov
pop
push
ss
or
mov
mov
mov
xor
push
pop
mov
xor
or
xchg
adc
xor
notl
les
inc
outsb
repnz
xchg
or
pushf
dec
notl
mov
mov
lcall
mov
aas
aaa
cmpsl
dec
mov
insl
sbb
dec
xchg
dec
ja
insl
mov
stos
and
mov
adc
mov
nop
pop
test
cli
mov
bound
adc
dec
or
mov
cwtl
mov
pop
sub
push
cvtps2pd
sbb
nop
push
and
push
aad
lods
mov
mov
movsb
sbbb
and
add
cmc
cmp
adc
lahf
orb
cmpsb
pop
scas
cmp
cmpsl
xchg
cmp
in
pop
mov
or
in
pushf
outsl
sbbl
imul
xor
push
jecxz
adc
nop
adc
adc
ljmp
jmp
push
into
adc
hlt
icebp
ds
jne
daa
xor
movsl
fnstcw
and
push
sti
xor
xchg
mov
sahf
inc
xor
mov
jne
xlat
dec
out
clc
ret
xor
out
xchg
add
mov
cmp
jmp
mov
and
dec
mov
push
jae
pop
add
push
jmp
xchg
outsl
and
mov
test
std
nop
fstpl
adc
push
adcl
and
inc
jge
ja
sub
into
mov
cltd
sbbl
pop
push
push
or
jb
sahf
das
push
loop
hlt
mov
mov
mov
out
ficoms
jl
shrb
arpl
or
lock
cmp
aam
mov
or
pop
sbb
mov
pop
xor
push
dec
je
xchg
shr
movsb
mov
ds
cmpsl
pop
popfw
cmpsl
xchg
pushf
loop
pop
pop
pop
inc
adc
jl
test
testl
fistps
fdivrp
cld
frstor
add
pop
out
cmp
call
fsubr
shrb
sahf
mov
loopne
mov
sub
pop
mov
push
lock
push
and
push
cmp
and
mov
orb
in
sbb
fdivs
jno
xor
pop
stos
sub
aam
xor
pop
push
lods
cmc
mov
jle
xor
xchg
leave
lods
sbb
cld
mov
pop
pop
rcr
icebp
insl
xor
add
movsb
cmc
xlat
sbb
clc
pop
pop
jbe
cmc
je
in
adc
adcl
lods
xchg
add
rolb
fwait
dec
sub
mov
mov
dec
dec
in
psubq
adc
pop
push
aad
pop
lock
mov
adc
xchg
test
fnstcw
call
mov
mov
ficoms
addps
pop
insl
pop
jmp
cmp
xchg
repz
xchg
sub
icebp
out
fsubrl
push
mov
and
dec
fbld
adc
je
push
jbe
or
add
movsb
lret
inc
jno
lret
mov
or
mov
lods
arpl
mov
sbb
dec
movsl
xchg
add
push
sbb
movl
into
sub
sub
mov
rcrl
pop
in
mov
dec
inc
mov
or
cli
sbb
cmc
xorl
xchg
push
push
cmc
aaa
pop
stos
push
mov
scas
cmp
xchg
xlat
or
les
lea
daa
push
inc
mov
mov
pop
push
rcrb
xor
mov
lea
arpl
jp
pusha
dec
mov
addl
bound
out
ret
daa
je
ret
xor
loopne
push
stos
inc
rcrb
push
mov
int3
lods
mov
sti
xor
cs
data16
out
jge
adc
aad
pushf
cs
jne
pusha
sbbb
and
aas
or
lods
and
adc
xchg
sahf
nop
lods
or
cmc
test
insb
adc
cwtl
xchg
fsubs
lcall
xor
ret
andl
add
call
dec
push
into
push
xchg
adc
mov
xchg
sub
sub
mov
rorl
fwait
xchg
pop
aaa
sarl
push
jo
sbb
aas
out
xchg
dec
pushf
ret
xchg
push
fimuls
push
mov
pop
xor
stos
push
xchg
push
xchg
xlat
or
push
outsl
les
xchg
add
xor
push
daa
lret
iret
aam
das
fldl
outsb
aaa
out
aam
lods
xchg
inc
inc
jo
inc
add
scas
xor
out
fisubl
xchg
or
mov
out
xor
mov
sbb
outsl
add
dec
sbb
sbb
jge
mov
pusha
mov
fmull
mov
mov
lret
add
testl
mov
mov
mov
sub
cmp
sub
mov
jo
shrb
mov
pop
mov
jbe
lcall
dec
mov
dec
sbb
jno
and
cmp
sbb
mov
ljmp
in
shll
inc
test
aam
inc
xor
test
fld
pop
xchg
icebp
repnz
add
sbb
sub
sti
sbb
repz
repnz
stc
nop
les
push
mov
sbb
or
inc
push
test
sbbb
shl
hlt
xchg
add
ret
push
add
jmp
mov
xchg
cmc
pusha
lret
mov
ljmp
cmpsl
not
popa
cmp
fsub
inc
sbb
jl
pop
in
icebp
lahf
sbb
add
shlb
iret
and
iret
sub
adc
push
push
xor
or
dec
dec
imul
pushf
addr16
xchg
nop
mov
vpsrlw
adc
lock
outsl
outsb
call
fsubs
lret
arpl
lret
ret
lcall
cmc
fwait
movsl
mov
movsl
or
fildl
mov
xor
add
inc
sub
out
movsl
xor
aad
icebp
mov
lcall
mov
cmovns
or
jle
mov
inc
pop
mov
movsb
cmp
pop
inc
test
cli
imul
int3
or
imul
pop
jb
add
hlt
or
mov
fdivrl
in
and
popf
add
sub
nop
cmp
push
repnz
sbb
push
hlt
inc
mov
loop
mov
ds
insb
imul
xchg
and
aaa
xchg
mov
jg
pop
mov
inc
cmpsb
xchg
pop
mov
dec
mov
hlt
mov
mov
sar
rcr
cmc
cmp
inc
pop
cltd
mov
cmp
mov
daa
lds
fldt
inc
mov
lcall
ss
push
mov
in
adc
push
jnp
in
sub
cwtl
pop
jo
adc
sub
pusha
data16
jecxz
repz
mov
push
mov
mov
out
aas
sub
jl
lods
push
popa
sbb
stc
sbb
adc
dec
std
js
jne
ds
cmp
cmp
sbb
ret
xchg
icebp
pop
mov
cmpsb
inc
jecxz
adc
mov
repnz
jge
adc
dec
mov
and
mov
sub
push
jbe
lods
popa
jle
addb
add
push
cmp
daa
adc
repnz
dec
sti
push
std
push
push
xchg
subb
shrl
dec
sbb
popa
inc
xor
insl
fistps
dec
mov
sub
mov
mov
pop
mov
in
es
inc
push
jo
cmp
into
gs
lods
push
into
rol
dec
rcll
outsb
rcl
pop
mov
xchg
aaa
fwait
inc
push
into
fnstsw
or
and
ja
dec
mov
jae
or
adc
adc
call
into
in
fsub
fisttps
test
fidivrl
mov
push
dec
sahf
and
in
push
dec
leave
js
push
dec
mov
stos
sbb
ret
dec
or
rolb
sbbb
in
pop
or
push
mov
ret
andl
clc
movsl
sub
rcr
mov
aaa
xchg
insl
xor
std
mov
insb
lock
cmp
repz
and
dec
mov
adc
repnz
stc
addr16
jl
push
add
adc
push
popf
or
int3
sub
sbb
inc
pop
mov
mov
mov
mov
dec
mov
rcrl
sar
data16
inc
xchg
pusha
cltd
xor
sti
cli
dec
cwtl
cmp
mov
cmp
cmp
lcall
mulb
inc
mov
and
stos
mov
push
negl
js
xor
jo
fists
cltd
insb
mov
inc
inc
das
or
pop
psrlq
test
dec
andl
or
mov
imul
cmp
xchg
fsubl
push
pop
add
push
in
dec
movsb
jne
adc
xor
ds
cmp
dec
inc
mov
adc
inc
mov
pop
push
rcll
mov
fsubrl
aad
js
das
mov
pop
xor
add
add
xchg
rcr
xchg
push
pusha
pop
jns
push
mov
jge
jg
ja
loop
and
pop
in
jp
dec
xlat
jle
lea
xchg
mov
lds
lods
mov
xor
mov
ret
jg
xor
ljmp
pop
dec
pop
sub
dec
imul
rol
sub
lahf
jmp
jecxz
popf
mov
adcl
jmp
in
jns
movsb
cmpsb
cli
adc
ljmp
imul
adc
in
xchg
xchg
cmp
jg
call
stos
aad
cs
adc
push
daa
outsl
hlt
mov
in
pop
adc
test
stos
push
mov
inc
out
or
dec
sbb
in
js
dec
cmp
add
call
mov
xchg
and
cli
test
inc
lcall
xchg
imul
adc
push
sbb
insb
aas
dec
inc
fcoms
lods
mov
push
push
addr16
rcll
sbb
fsubs
mov
push
loope
xchg
fiadds
push
lahf
lahf
outsb
cltd
lahf
xor
xor
mov
inc
call
cmp
sbb
lock
dec
push
pop
push
push
sahf
push
adc
fsubs
cwtl
push
push
fildll
cmpb
mov
push
fisubs
xchg
fdivrs
inc
jo
xor
or
movsl
cmp
mov
mov
in
cmpsl
pushf
ror
in
mov
xchg
sub
cmpsl
incb
int3
fsubrl
orb
dec
push
and
push
aaa
pusha
sbb
push
cltd
push
sbb
push
outsl
inc
lahf
dec
push
mov
or
addr16
xchg
fldt
lahf
leave
or
add
movsl
ds
pop
add
mov
test
wbinvd
in
cmp
movsl
push
hlt
cld
push
ret
movsb
push
push
inc
mov
mov
push
aas
jecxz
jecxz
mov
andps
xor
cmp
enter
inc
jp
xchg
or
add
jbe
dec
inc
scas
push
inc
adc
xchg
inc
in
lahf
dec
repnz
pop
mov
imul
clc
out
mov
scas
out
push
jbe
pop
cmp
sti
sub
lds
lods
jbe
adc
add
adc
push
pop
testb
pushf
or
dec
xchg
bnd
dec
imul
inc
repz
lret
andl
dec
ljmp
mov
xchg
std
adc
out
sub
mov
cmpsl
push
cld
andl
repnz
test
and
mov
push
pop
adc
adc
or
in
loopne
cli
test
wbinvd
cmp
test
andb
lahf
jmp
and
xor
adc
fisubs
leave
mov
fdivrs
mov
add
xchg
adc
andl
je
inc
add
mov
sub
sbb
data16
mov
repnz
sub
andb
cmp
pop
icebp
fsubs
pop
sub
orb
fistpl
mov
out
int3
out
inc
scas
ljmp
pop
inc
pop
nop
adc
xor
rcr
icebp
and
in
pop
mov
popf
out
rcll
mov
bound
xor
or
mov
adc
jle
push
jge
cld
divl
insl
ret
jg
ds
clc
adc
inc
cmp
dec
cmp
dec
cmpsl
xchg
data16
inc
add
sbb
inc
mov
testl
enter
stos
pop
push
movsb
jns
lock
ret
mov
add
hlt
mov
xadd
xor
movsl
dec
xchg
add
mov
pusha
xor
loope
lods
scas
sbb
rorl
jp
dec
or
les
push
fwait
mov
inc
sub
xchg
mov
cmc
int3
add
xor
divl
popf
mov
sbb
fcoms
xchg
inc
jle
sbb
gs
je
out
adc
add
nop
int3
gs
outsl
cld
xor
out
xlat
xchg
loopne
xor
into
push
jnp
leave
cmp
imul
xchg
mov
std
xchg
addl
fildl
jbe
mov
jle
mov
scas
imul
int
dec
and
push
sub
shr
cmp
add
cwtl
xchg
mov
or
rcl
mov
mov
int3
mov
mov
dec
pop
pusha
iret
cmp
fdivrl
mov
lahf
int
ds
dec
and
std
sub
lahf
fisubl
or
fstps
xchg
inc
rcrl
cli
rcr
adc
pop
or
test
inc
mov
jo
repnz
dec
roll
mov
jnp
scas
xor
dec
cmp
sti
mov
sahf
imul
clc
lret
adc
sbb
pop
dec
mov
in
aas
dec
imulb
xchg
push
lock
out
or
and
and
xor
jno
mov
mov
js
cwtl
sub
je
jge
push
xor
into
dec
adc
or
test
loope
seto
popf
cmp
loopne
pop
fidivs
lcall
mov
adc
lret
xlat
call
inc
repz
and
aaa
in
cmp
push
shl
jecxz
or
cltd
mov
push
fbstp
sbb
cmp
hlt
sbb
sti
adc
sub
cmp
xchg
and
add
cmp
in
lods
ss
add
pop
fwait
lcall
mov
jg
lret
xchg
roll
cwtl
push
arpl
lds
inc
dec
cmp
out
adc
lds
inc
cwtl
lahf
push
mov
xor
sub
mov
cli
add
and
fiaddl
sbb
mov
add
push
enter
mov
push
inc
in
jle
stos
and
jb
adcl
adc
orl
mov
rolb
dec
mov
movl
lahf
lea
scas
mov
push
push
repz
cmpsb
leave
mov
jbe
aas
ret
dec
push
sbb
shrb
lock
and
lret
push
stos
push
sar
mov
pop
pop
push
xchg
out
lret
mov
push
mov
mov
das
inc
stos
cmp
cmp
or
jmp
pop
int
subl
gs
or
dec
xor
push
shrb
outsl
lods
idivb
xchg
orl
xchg
push
sub
aam
add
mov
xchg
je
imul
into
inc
in
xorb
or
jl
in
outsl
aam
mov
in
mov
push
add
daa
es
dec
mov
dec
push
mov
xor
mov
inc
shrb
fisttps
int
sbb
js
arpl
push
add
inc
inc
jbe
fcomps
mov
xorb
xchg
inc
test
pop
lcall
jo
xor
jbe
xor
ja
outsl
jge
jecxz
enter
ss
push
in
shrb
sub
push
xchg
xor
loop
cwtl
or
neg
cmp
push
sbbb
jg
int
or
je
leave
cli
push
jmp
stos
pop
cltd
jg
rolb
out
adc
add
xor
pusha
aas
in
lds
dec
cld
pop
cmpsb
mov
cmp
sbb
or
inc
sub
stos
push
push
or
lods
lahf
mov
and
sti
jne
cmpsb
in
adc
pop
inc
jle
mov
ljmp
int3
mov
movsb
scas
push
clc
mov
sbb
cmp
xor
xchg
mov
add
rcll
in
scas
insl
rorl
decb
lea
and
dec
xlat
mov
and
mul
xchg
insb
aas
jle
jne
push
scas
xchg
sub
ffreep
negb
sbb
daa
lcall
enter
adc
inc
sbb
cmp
loope
orl
and
and
nop
push
loop
iret
test
insb
lods
jne
out
mov
loope
rcrl
loop
scas
data16
sub
stc
shlb
dec
dec
sti
push
shll
or
lds
mov
imul
xchg
fidivl
rclb
rol
add
iret
insl
lahf
xchg
pop
adc
into
inc
push
test
fldcw
psadbw
mov
mov
lds
call
ret
ss
cmpl
push
mov
lods
xchg
dec
loopne
xchg
stos
pop
lea
fxch
ljmp
and
mov
mov
rcrl
lea
aad
andb
imul
insb
sahf
xchg
pusha
jbe
gs
scas
movsb
mov
cld
pop
jle
mov
out
xor
fs
cld
add
das
pop
cmpsl
jecxz
dec
in
jmp
xchg
testl
js
xor
push
cld
pop
repz
xchg
scas
xor
outsl
int3
sbb
xchg
xor
sub
popa
mov
mov
popa
inc
fimuls
mov
jno
insl
lods
sub
mov
inc
xchg
xchg
and
jecxz
jb
outsl
ret
or
repnz
mov
imul
push
sbb
lcall
sbb
jo
inc
push
pop
jo,pn
or
je
cmpsl
insl
test
sti
es
sub
sub
scas
insb
adc
addr16
and
les
dec
mov
xlat
dec
loopne
cmovg
fwait
repnz
cs
sbb
add
cmpsl
sub
mov
subl
dec
cmpsb
es
sub
mov
dec
arpl
negb
sahf
cmpsl
dec
sub
jae
fwait
cld
adc
fwait
xchg
test
stc
mov
daa
push
mov
xlat
sbb
or
and
je
loopne
cld
into
out
add
daa
dec
jg
scas
and
filds
mov
pusha
or
pop
push
enter
aas
jmp
sbb
repz
out
addr16
loope
popf
lret
xchg
lret
sub
sbb
js
add
sarb
int
mov
inc
adc
imul
push
gs
pop
fs
sub
cli
pop
cmp
cmpsl
movsb
mov
cmpsb
fdivl
dec
pop
les
push
fwait
es
cmpsl
and
mov
fwait
dec
sub
movsb
mov
xchg
add
lods
jg
xor
orb
in
mov
stc
push
lods
repz
push
xchg
ss
int3
lock
nop
dec
xor
pop
cmpsb
ja
repnz
mov
sub
ret
adc
pushf
sahf
out
data16
fldl
insl
mov
adc
ds
stc
xor
sbb
std
xchg
movsb
xor
push
loope
lret
loope
dec
push
mov
fstpl
ljmp
iret
movsl
cmp
mov
icebp
pop
and
mov
int3
pop
dec
leave
push
inc
out
rcrl
push
cmp
xchg
inc
in
les
aad
push
lcall
adc
testl
xchg
adc
inc
jne
cmp
aas
sub
lret
pop
inc
imul
xchg
cwtl
adc
push
std
movsl
iret
daa
lcall
orl
jle
notl
or
mov
xor
cmpsb
cmp
loope
mov
mov
adc
add
inc
cmp
std
pop
xor
pop
xchg
stc
ss
ljmp
pop
mov
fmuls
jp
sub
popf
lock
mov
fsubs
adc
sti
add
cmpsb
pop
addr16
sbbl
pop
cmp
pop
push
xor
gs
inc
and
leave
sbb
add
int
xchg
outsl
test
sub
movsl
sti
cmp
pop
xchg
aad
xor
adc
or
fdivs
outsl
call
pop
sbb
adc
ljmp
push
xchg
clc
enter
nop
pusha
daa
sbb
pop
lret
fwait
jle
or
loopne
fdivs
in
sbbb
sar
add
cli
dec
fwait
sbb
mov
sub
cwtl
aam
cltd
in
jge
loope
and
cmp
inc
orb
mov
adc
mov
or
je
out
xor
mov
mov
jmp
push
test
mov
leave
xchg
sarb
push
cld
adc
andb
mov
aam
cmp
sbb
lcall
repnz
xchg
notb
push
lea
cmp
cmp
push
push
sbb
shlb
jle
mov
fstps
sbb
mov
sbb
pop
jp
dec
add
add
jnp
fscale
xchg
push
fmuls
adc
arpl
shl
push
mov
shl
add
xchg
sub
xor
inc
or
or
popa
xchg
pop
xchg
xor
xor
mov
cmp
fldenv
movsl
ds
inc
jp
push
lret
sahf
add
insb
imul
ret
sub
xchg
mov
xchg
cmp
mov
jl
leave
int3
sbbb
cmp
pop
sbb
adc
imul
ret
cmp
xchg
lods
filds
std
sarb
lret
out
shrb
out
cmp
test
add
cmp
mov
fsts
jg
bound
lahf
iret
jge
and
cmpb
jmp
daa
xor
mov
pop
stos
divl
xor
ret
sub
pop
jmp
jnp
jl
mov
stc
je
cmpsb
fldt
or
mov
out
jecxz
leave
xchg
or
insb
imul
cld
fdivr
mov
out
aaa
lret
push
cmc
nop
sahf
out
push
movsl
jbe
out
jbe
dec
xchg
lods
adc
ret
and
jo
lret
mov
pop
adcl
and
lds
jle
hlt
adc
lea
int
stos
xchg
xor
xchg
mov
jns
add
int
push
add
pop
adcb
sub
xchg
jle
xor
ret
cmp
lret
or
xor
push
lgs
pop
in
cmp
jmp
and
push
pop
jne
lret
shll
fiadds
mov
lock
push
pop
inc
pop
mov
test
and
cld
pushf
add
sbb
dec
sub
sub
nop
rorl
clc
test
pop
xlat
sahf
ds
in
cmp
dec
push
inc
pushf
out
pop
leave
stos
cmpsb
and
xabort
pop
lret
mov
fcomi
xor
int3
pop
xor
lret
pop
bound
cmp
hlt
dec
sarl
mov
das
sub
pop
cs
dec
orb
sbb
testl
lret
sbb
fcomp
xchg
aam
mov
or
mov
loopne
loope
mov
inc
pop
push
xchg
sub
or
pop
jbe
sbb
pop
fidivl
out
jns
mov
loop
xchg
dec
mov
mov
insb
push
loop
rorl
aam
pop
pop
mov
add
scas
xchg
ret
and
cwtl
jo
and
popa
test
mov
scas
ret
xor
sub
mov
xchg
repz
imul
mov
fisubs
fwait
std
dec
sub
sahf
bound
rolb
or
xchg
push
fisubrl
dec
add
pop
dec
aad
push
insb
lahf
sub
int3
push
popf
ficomps
frstor
mov
loop
lea
out
inc
pop
xor
mov
add
les
mov
sub
and
xorb
lcall
fldenv
stc
jbe
lods
sbb
sbb
daa
out
and
cmp
and
pop
aad
mov
cmpb
ja
pop
fildll
sti
pusha
mov
pop
mov
repnz
adc
rcr
pop
out
enter
xor
fisubrl
add
inc
and
out
in
adc
in
mov
popf
test
loop
and
nop
mov
mov
pop
in
sbb
push
jl
clc
jp
jge
jmp
shlb
outsb
ficoml
add
mov
mov
test
loopne
dec
insb
pop
xor
add
mov
rcl
lahf
in
inc
lods
inc
mov
adc
sub
push
aas
mov
cmc
xlat
test
cmp
repnz
pop
cwtl
mov
inc
pop
fcmovnb
in
jne
push
pop
stc
mov
js
leave
into
add
mov
push
loope
js
aad
lock
xchg
mov
cmp
jg
and
ja
jo
push
xor
imul
into
stos
sub
dec
xchg
test
add
cmc
push
stc
sti
add
or
or
enter
jl
sbb
mul
rorl
loop
or
test
jp
rolb
in
je
lds
push
add
test
mov
inc
push
or
mov
gs
in
testb
add
push
cmpsb
sub
dec
jp
mov
lock
hlt
outsb
stc
cwtl
pop
inc
cld
fstpt
push
mov
xchg
movsb
and
jb
pusha
icebp
clc
repz
test
popa
push
xor
fisubrs
lret
mov
mov
add
sbb
sub
mov
rorl
pusha
jl
and
adc
xor
test
push
fmull
es
jl
pop
mov
jnp
pop
dec
enter
and
sti
push
movsb
sahf
xorl
out
adc
cltd
sub
jno
addr16
or
xor
out
in
rcl
mov
pop
movsb
sub
fistpll
in
fidivl
testb
mov
inc
dec
aas
mov
inc
sbb
jl
cmp
pusha
sbb
jmp
lret
les
xchg
iret
sbbl
mov
and
and
mov
cmc
mov
mov
testl
testl
dec
cmpb
cmpsl
scas
mov
and
pop
out
arpl
into
mov
sub
fadds
enter
cwtl
dec
push
jecxz
lock
mov
dec
out
add
mov
icebp
xor
stos
lods
call
jmp
adc
mov
sbbb
insl
fwait
and
add
xor
and
inc
push
clc
call
cmp
xchg
mov
or
lret
push
pushl
cs
xchg
add
cmc
and
repnz
std
xchg
sbb
pop
fists
daa
dec
push
pop
or
clc
push
in
push
sbb
in
lods
add
repnz
add
cmp
sub
mov
orl
xor
popf
fs
popf
fimull
jmp
inc
xchg
pop
add
mov
cltd
pop
lea
in
jg,pt
in
jne
xchg
rcll
adc
arpl
push
rclb
xchg
mov
pop
xor
adc
or
sbbl
jbe
sub
push
lahf
pop
jne
fwait
stc
push
push
ja
mov
mov
jmp
xchg
shlb
shlb
pop
lahf
mov
mov
not
adc
outsl
push
imul
jecxz
mov
dec
movsl
fs
add
push
lods
jns
pop
loop
sti
fstpt
out
or
push
lea
mov
sub
in
dec
mov
push
sbb
and
and
outsb
cmp
mov
cmpsb
jg
stc
lds
loop
xchg
or
jle
scas
sub
jno
inc
dec
lea
mov
ss
out
sub
je
xchg
ret
adc
pop
add
leave
lods
adc
pop
dec
stc
fdivs
push
and
jle
lods
shll
int3
sysret
cmpsl
add
cmpsb
xchg
sbb
mov
loopne
out
add
mov
push
dec
out
jl
mov
cmp
sbb
mov
push
sbb
push
xor
mov
jae
mov
push
push
clc
mov
cmp
cmp
into
lock
mov
mov
mov
sub
push
in
cmp
adc
mov
adcb
stc
push
sbb
sbb
cltd
aas
ficomps
adc
mov
mov
outsl
sub
in
pop
cld
lahf
out
pop
int
fimull
mov
test
iret
jbe
loope
jnp
pop
data16
sbb
push
lret
dec
and
dec
into
xlat
adc
scas
sbb
test
push
hlt
mov
sbb
test
mov
dec
mov
fidivl
dec
clc
jno
and
je
into
xchg
and
das
loope
sub
sub
mov
mov
dec
addr16
das
mov
insb
cmp
pop
inc
out
outsl
les
icebp
ds
sbb
jge
ljmp
dec
cmc
cli
repz
or
stos
addb
es
pop
add
dec
leave
imul
dec
mov
fs
push
mov
rcr
jbe
incb
jns
mov
xor
in
add
or
inc
jmp
fidivs
movsb
cltd
sbb
nop
mov
je
pop
cmp
push
das
bound
frstor
push
or
push
adc
sub
and
test
in
jle
daa
mov
adcl
jle
lods
xor
sub
call
xchg
loopne
andb
lds
testl
adc
sbb
jp
cmp
add
inc
xchg
insl
jecxz
add
jns
in
inc
adc
mov
add
decb
mov
repnz
mov
pop
dec
jns
mov
cmpsb
dec
arpl
xor
ljmp
into
mov
xor
in
fisubrl
and
or
pop
cmp
cmp
nop
mov
fs
jns
nop
je
lahf
lods
inc
sbb
in
jmp
mov
dec
dec
and
mov
push
xor
dec
adc
gs
inc
and
shrb
xchg
sbb
mov
add
mov
inc
fimull
or
out
dec
mov
mov
cwtl
scas
fisubrs
push
adc
inc
paddd
jmp
bnd
mov
mov
mov
xchg
rclb
dec
gs
mov
inc
and
pop
adc
push
loopne
scas
mov
fucom
xor
aas
addl
pop
data16
cmpsb
pop
xor
add
pop
jmp
insb
outsl
pop
mov
cpuid
inc
mov
push
dec
pop
mov
xchg
mov
xchg
and
jp
jecxz
fwait
cmp
sbb
jle
icebp
pcmpgtd
add
add
jmp
add
dec
inc
stos
mov
fiadds
xchg
and
pop
addr16
decb
lds
xlat
push
es
ds
cmpsb
mov
popa
int
fucom
arpl
sub
push
popa
mov
inc
and
sbb
subl
loopew
clc
sar
sbb
xor
and
arpl
mov
loope
enter
pop
xchg
sbbb
jmp
adc
sub
sub
pop
rorl
icebp
movb
clc
pop
test
icebp
cltd
jecxz
dec
jbe
iret
jg
rcr
lock
cmpsl
jecxz
test
sub
sbb
sub
lret
lods
orl
push
in
insb
xor
popf
or
lods
mov
loop
mov
in
mov
scas
add
fdivs
inc
sbb
push
mov
ret
fidivs
popf
inc
jg
dec
aad
je
cltd
test
mov
andl
xchg
mov
jge
mov
cwtl
ljmp
add
jbe
dec
aam
inc
les
fld
loope
ss
stc
pop
sub
popf
cmp
je
xor
jmp
fwait
mov
jb
pusha
jnp
jbe
pop
aad
in
mov
mov
sbb
mov
leave
pop
int
fimuls
push
ret
test
push
adc
out
scas
sbb
fstps
pushf
in
mov
insl
mov
cmp
push
jp
dec
or
out
fld
dec
aas
inc
js
mov
fs
enter
popa
sub
cwtl
rclb
cs
andb
fwait
call
fsubrs
loop
jne
fwait
lret
jmp
mov
dec
xlat
ret
mov
pop
fs
add
mov
inc
popf
push
movsl
gs
cmpsl
lret
xor
std
sbbl
xchg
cmove
js
sbb
pop
dec
pop
aas
mov
mov
sbb
push
xor
sbbl
loope
inc
jnp
daa
mov
stc
add
add
and
jnp
cmp
add
add
mov
inc
jmp
mov
in
push
xchg
shlb
sbb
out
add
divl
icebp
push
adc
ljmp
aad
in
andb
inc
jbe,pt
scas
in
inc
mov
mov
pusha
mov
cmpl
andb
js
jns
add
fcmove
sahf
sub
xchg
loop
push
inc
cmp
xlat
adc
inc
shl
mov
roll
rcrl
insl
js
xor
xchg
outsl
mov
adc
cmp
mov
sbb
test
xlat
adc
push
inc
adc
in
push
push
sub
bound
dec
xchg
shrl
repz
outsl
xchg
nop
mov
inc
xchg
in
cld
inc
cmpsb
clc
push
adc
int3
lcall
add
ret
cmp
dec
bound
mov
jmp
sbb
push
cmp
sbb
xchg
push
in
jle
test
xchg
cmpsb
sbb
lods
pop
leave
dec
pop
dec
int3
out
ficompl
xor
push
movsw
add
inc
mov
bound
lods
sub
int
adc
adc
and
ret
fisubrl
outsl
and
xlat
cli
xor
cli
push
xlat
pop
dec
ss
arpl
add
sbb
inc
mov
les
in
pop
mov
dec
jno
stc
adc
mov
in
and
mov
pop
fisubrs
mov
inc
imul
sub
mov
test
ljmp
lods
loope
mov
mov
push
inc
je
call
mov
imul
dec
outsb
icebp
lods
push
push
popa
pop
xchg
mov
je
sub
arpl
dec
test
ficompl
arpl
and
cmc
or
icebp
orl
and
cwtl
xchg
mov
push
call
test
push
sbb
ret
lahf
cmp
inc
out
repnz
mov
jecxz
mov
popf
testl
out
inc
aad
lds
sbb
pop
data16
lret
ret
xchg
cmp
pusha
ljmp
cli
aaa
dec
test
xchg
mov
mov
push
xorl
loop
es
std
aam
sbb
push
jae
or
into
sbb
cmp
mov
out
inc
dec
ja
scas
imulb
and
push
andb
mov
loop
fisubs
in
mov
call
jns
mov
jmp
test
jp
outsl
fcomps
xacquire
cmpb
sbb
icebp
ljmp
repnz
push
dec
cmpsb
repnz
stos
pop
stos
cmpsl
push
xor
addr16
fwait
add
mov
enter
jl
jmp
or
fcompl
jo
push
cs
mov
std
mov
dec
cltd
ja
adcl
test
ffree
jb
lds
jmp
movsb
int3
rclb
push
setbe
rcrb
lea
fidivl
pushl
cmp
pop
pavgw
xchg
lret
rorb
ret
pusha
insl
out
icebp
mov
sub
mov
jp
pop
pop
xchg
test
fdivrs
and
fimuls
shr
jae
ficomps
mov
lcall
mov
les
sbb
sub
cmp
test
adc
shrl
push
pusha
jmp
fcmovnu
out
push
hlt
push
push
mov
xor
or
push
movsl
lahf
and
fldenv
nop
pop
push
push
call
rolb
pop
jmp
cmp
js
xchg
inc
dec
ficompl
sti
cli
dec
xor
dec
lret
je
test
and
ret
movsb
lods
popf
iret
imul
hlt
xor
rcl
lcall
fdivr
or
imull
and
call
cmp
mov
push
mov
inc
add
add
pop
pop
sbb
or
pop
test
pop
mov
push
mov
in
lods
notb
arpl
ljmp
mov
into
push
cmp
dec
ja
jmp
inc
int3
push
arpl
negl
xchg
cmp
and
add
negl
in
lods
dec
loop
sbbb
mov
les
xor
mov
pushf
aad
shl
adc
jl
and
test
and
dec
shll
xlat
pushf
loopne
inc
add
aaa
jp
sahf
aas
aaa
jbe
xor
scas
cmp
ja
xchg
mov
sbb
arpl
imul
push
lahf
add
mov
mov
test
sbb
sbb
sbb
dec
adc
icebp
adcl
or
test
add
fsubl
add
lods
dec
fstpt
out
stos
inc
lock
imulb
in
or
clc
mov
dec
dec
xlat
fistps
data16
ret
inc
es
sti
push
addr16
cmp
add
ja
adc
gs
sbb
xor
rolb
mov
shrb
pop
xchg
ror
in
xor
adc
cli
clc
lods
cltd
aas
es
scas
aas
ss
fs
movsl
xchg
mov
pop
jnp
cld
adc
pusha
jbe
inc
mov
movsb
push
pop
cmp
cmp
sbb
movsb
and
adc
arpl
shlb
inc
scas
mov
das
lret
inc
xor
jnp
stos
adc
scas
decl
push
scas
loopne
or
scas
add
aad
add
lock
clc
out
test
lahf
cmc
call
testl
lods
scas
push
stos
fisubs
cmpl
xor
aad
sbb
mov
mov
subl
je
out
into
mov
inc
mov
ss
add
aaa
mov
insl
lods
mov
xchg
mov
dec
dec
ljmp
test
jae
jmp
dec
sub
mov
jne
cli
push
adc
aam
xor
jae
cs
popf
mov
fists
mull
ficomps
or
nop
aas
lcall
enter
mov
xchg
pop
fld1
add
rcl
mov
adc
loop
push
clc
or
in
das
out
sub
cmp
rcrb
dec
test
sbb
sub
leave
add
xchg
fwait
or
lds
loope
jbe
lret
arpl
aas
mov
movsl
and
xor
insb
movsb
push
adc
mov
dec
ja
xchg
arpl
sbb
ret
mov
stos
notl
fstpl
mov
mov
xchg
frstor
mov
or
push
pushf
in
out
fcomps
add
pop
jmp
push
and
xchg
mov
pop
aad
mov
mov
loope
iret
mov
jmp
add
cmp
lahf
pop
inc
rclb
add
push
dec
int3
in
or
movsl
je
adc
dec
xchg
scas
pop
popa
cmpsl
dec
aad
dec
gs
out
jne
mov
lea
adc
leave
cmp
mov
or
push
dec
xchg
pop
cmp
jmp
repnz
std
jp
imul
mov
mov
inc
pop
jne
sub
mov
repz
clc
lcall
sub
in
ss
or
or
test
std
pop
loope
aad
dec
je
push
lcall
inc
mov
nop
inc
or
xchg
inc
jae
lods
add
push
cmc
inc
push
test
repnz
jno
or
add
dec
and
mov
clc
or
scas
cmpsl
xchg
mov
cmpsl
in
sbb
in
inc
jno
push
xor
or
mov
jo
adc
xchg
sbb
mov
bts
inc
jecxz
scas
jg
mov
inc
lock
ds
fldcw
push
xor
hlt
shr
leave
dec
xchg
push
or
or
mov
into
dec
cli
ds
add
push
mov
dec
cmp
movsl
or
sub
sub
or
inc
push
fwait
ds
xor
jecxz
cmp
mov
adc
movsb
andl
dec
mov
cli
or
sub
lods
mov
dec
cmp
subl
xor
insl
cs
jnp
mov
xor
cmp
jmp
inc
sub
fldenv
and
fistl
aad
xor
jp
aas
leave
push
mov
std
decb
bound
popa
inc
out
bound
mov
or
notl
lcall
adc
out
push
sbb
dec
leave
pop
add
jae
stos
jb
sub
imulb
sarb
in
xchg
andl
sbb
lret
xchg
clc
imul
out
or
shlb
mov
gs
sti
mov
push
xor
cwtl
pop
pop
xlat
loop
xchg
or
pop
lcall
rcll
cwtl
mov
add
lahf
mov
or
sub
mov
xlat
das
arpl
and
cwtl
stc
inc
fdivrs
and
ret
adc
sbb
sub
shlb
cmp
push
fisubrs
pop
xor
pop
iret
or
mov
inc
lods
jbe
cmp
pop
mov
mov
cs
fidivrs
jb
cs
sub
outsb
xor
sbb
cwtl
adc
dec
push
movsb
xor
es
int3
lds
shrb
push
inc
inc
daa
js
mov
lret
pop
rcll
cli
push
push
mov
fcomi
pop
repnz
iret
out
xchg
idivl
mov
and
jbe
xchg
dec
pop
mov
inc
cmp
sub
mov
or
adc
inc
mov
sarl
out
jbe
adc
or
jo
dec
cwtl
lock
incl
xor
ss
jno
and
ja
and
cmp
sbb
mov
mov
jne
test
fwait
push
scas
scas
rcll
mov
les
hlt
int
hlt
fwait
rol
jae
mov
xor
lods
sub
sub
loopne
and
mov
jl
cltd
mov
in
cld
insl
add
add
popa
mov
push
cmp
into
mov
sti
arpl
xchg
push
in
shrb
jle
addr16
call
jno
lea
pop
lock
scas
inc
pop
popw
push
mov
dec
pop
mov
aaa
fldt
out
jmp
int3
and
sub
mov
or
adc
add
inc
insb
mov
inc
xchg
insl
push
loope
jmp
pop
cwtl
xchg
or
pop
sub
mov
popf
imul
push
mov
pusha
sarl
out
lahf
mov
incl
jge
and
pop
inc
cli
or
sarl
adc
ud2
push
in
mov
pop
sub
ret
inc
sbb
cmp
dec
push
mov
call
bound
pusha
ret
outsl
add
leave
cwtl
add
fnstcw
inc
shlb
adcl
jl
std
push
loop
pop
in
mov
cmpl
lods
inc
push
fs
mov
stos
aas
mov
cmp
mov
stc
insb
pop
clc
jnp
sub
mov
xor
repnz
jno
sub
lock
repz
or
ss
adc
pop
inc
jne
imul
cmp
out
dec
out
xchg
adc
adc
icebp
inc
cmc
jmp
in
jno
aaa
popa
adc
sbbb
in
pop
inc
out
and
flds
clc
leave
push
push
mov
dec
push
ljmp
jb
in
or
stos
add
mov
and
hlt
push
daa
mov
mov
push
js
and
adc
cmc
fmuls
jne
xor
xchg
aas
sbb
inc
sub
ret
shlb
jle
shlb
push
or
lret
or
lret
push
adc
int
arpl
xchg
jno
mov
mov
pushf
daa
pop
add
jecxz
andb
ret
mov
dec
pop
or
sub
enter
mov
lahf
xor
ss
adc
adcl
mov
ss
xchg
sbb
stos
ds
rorl
cmp
dec
pop
popa
cld
pop
jmp
push
and
sahf
and
jbe
dec
xchg
push
add
test
repz
out
jl
fistl
notl
test
add
or
mov
loop
sbb
lock
cmp
jmp
loopne
jcxz
xor
into
cmp
cmc
outsb
jne
enter
addr16
ret
ss
imull
out
adc
add
sub
xchg
push
xchg
cmp
push
xchg
xor
mov
iret
or
dec
xor
fisubrs
in
pop
data16
enter
into
xor
xor
inc
jno
outsl
jbe
xor
fs
or
cmpsl
leave
int
adc
int3
xor
test
adc
lods
or
mov
xchg
and
lahf
push
pusha
cltd
xor
loope
ss
mov
xlat
or
in
pop
inc
mov
aam
mov
ret
sbb
std
mov
push
push
repnz
fwait
cmpsb
repz
push
gs
in
jnp
xchg
mov
and
xchg
jno
mov
pop
lock
mov
or
nop
mov
mov
ficomps
adc
divl
pusha
mov
cwtl
lods
adc
cmp
pusha
and
mov
mov
pop
cwtl
es
push
inc
jmp
mov
sbb
out
hlt
or
je
dec
in
jns
daa
mov
mov
stc
or
gs
mov
or
jne
dec
test
out
xor
out
xorb
xchg
sbb
pop
adc
in
ror
movsl
shlb
lods
jecxz
in
fildll
ret
lods
pop
mov
fstps
sub
sbb
out
ret
jle
lds
push
jo
test
and
jg
aaa
popa
pop
add
mov
out
sub
stos
jnp
dec
cmp
iret
add
xchg
pop
cmp
push
mov
xchg
mov
ljmp
mov
sbb
sbb
mov
mov
or
mov
in
ds
mov
mov
fistl
repnz
push
popa
pusha
pushf
lret
xlat
xor
mov
aas
in
iret
lock
ja
mov
jl
mov
sub
pushf
pushf
iret
scas
sahf
jno
adc
fwait
cs
mov
jle
popa
cli
mov
xchg
incb
pop
jge
push
push
fsubrp
sub
sub
sbb
add
movsb
mov
adcb
cmp
cli
push
int3
insb
rolb
icebp
cmp
insb
sbb
loop
sbb
ja
orl
js
fidivrs
stc
add
mov
imull
cmpsl
dec
sub
sub
mov
inc
mov
repnz
add
push
rcrb
je
repnz
xor
inc
cmpb
adc
and
inc
jmp
dec
pop
out
mov
xorb
aam
pop
push
test
iret
repnz
aaa
push
loop
xchg
pop
mov
mov
daa
sub
test
jle
inc
xchg
jo
daa
cltd
jne
fildll
int
sti
mov
mov
xor
or
push
mov
xchg
inc
xchg
aad
adc
push
pop
mov
xchg
or
repnz
sub
outsb
fs
push
icebp
jl
mov
push
je
jae
push
mov
leave
mov
sti
jno
jne
and
pop
push
dec
out
cmc
xchg
idivb
aaa
icebp
stos
xchg
adc
cmp
add
sbb
add
sub
insb
xchg
popf
push
iret
in
dec
sbb
or
mov
sbb
mov
cmpsl
dec
inc
cwtl
add
leave
flds
mov
jl
push
lahf
push
call
push
ss
fidivl
add
mov
mov
or
out
jg
and
pop
push
inc
aam
imul
fmul
push
mov
insl
jns
or
rclb
hlt
jns
sub
and
cld
lea
jnp
dec
push
mov
sti
cltd
jbe
mov
fmuls
mov
andl
aaa
call
adc
pop
dec
sbbl
pop
mov
out
cli
add
loope
mov
push
gs
mov
enter
mov
std
fnsave
inc
lret
out
popa
xchg
mov
shrb
fdivrl
fwait
push
cltd
inc
cmp
das
xchg
xor
xor
cmp
xchg
pop
push
testl
dec
xchg
jnp
iret
cwtl
adc
fcoml
jp
sub
pushf
insb
sbb
dec
incb
push
in
xchg
lahf
pop
sub
decl
out
adc
cmp
cmc
mov
rolb
repnz
fsubr
push
xor
cmp
pop
or
mov
and
adc
jns
lds
shr
call
imul
loope
add
ss
mov
js
jl
movsl
call
in
jbe
test
fidivl
or
rolb
push
jle
sbb
cmp
iret
test
xlat
adc
inc
test
lea
push
pop
cmp
mov
dec
fistpll
icebp
sub
push
arpl
xchg
mov
pushl
andb
xchg
mov
in
stos
adc
aad
insb
inc
add
inc
dec
push
fadds
out
test
cwtl
fmuls
push
jae
lds
push
xlat
lock
adc
sahf
jle
adc
nop
popl
jmp
or
pop
mov
mov
aaa
insl
pop
lea
out
test
jmp
xchg
push
or
mov
cmp
nop
sbb
xchg
dec
xor
ret
out
mov
cwtl
xor
add
mov
hlt
in
push
adc
sub
mov
fstpl
int3
cmpsl
sbb
insb
jle
sar
jbe
pop
push
outsb
mov
xlat
imul
ds
js
mov
fisubs
xor
sub
popf
jg
xchg
fcmovnu
jmp
lea
inc
push
repz
add
and
rorb
cmp
ljmp
into
cmpsb
orl
cltd
dec
push
js
pop
jb
dec
popf
push
sub
test
mov
mov
jecxz
sub
push
ljmp
in
cmp
xor
fimuls
je
or
pusha
sub
mov
popf
std
cmp
jmp
scas
mov
cmp
sub
and
shll
cmp
adc
stc
jo
add
jge
adc
fsub
ret
mov
push
sub
push
into
adc
imul
or
xchg
xchg
sti
add
mov
mov
pop
mov
sbb
insb
sbb
nop
and
and
les
sti
leave
fnstcw
roll
dec
jg
cltd
mov
daa
dec
mov
shl
add
dec
repz
ret
sahf
sbb
cmpsl
stos
repz
movsb
xor
inc
dec
xor
add
fcmovne
jb
cmp
das
lock
lahf
call
mov
int3
hlt
jno
loope
or
sub
aaa
lcall
xlat
push
adc
addl
cmp
fisttpl
inc
sbb
imul
fmull
pop
add
imul
jb
aam
or
repnz
jo
cwtl
push
stc
scas
mov
aam
jb
mov
movsl
xchg
sarl
leave
aam
in
pop
xchg
in
iret
push
mov
lcall
data16
dec
jnp
mov
xchg
outsb
les
movsl
lods
cmpl
loop
mul
mov
mov
in
ss
cmc
aas
dec
push
jne
int3
mov
int3
js
lock
shrb
ss
andb
xchg
cmp
inc
scas
inc
cwtl
in
inc
out
in
jnp
inc
je
neg
jp
fdivl
arpl
imul
mov
idivl
shll
dec
pop
mov
xorb
pop
dec
xlat
xchg
mov
xchg
xor
dec
test
out
aaa
imul
dec
mov
sbb
pop
out
loope
cmp
add
mov
or
pop
inc
daa
les
cld
leave
jmp
in
jle
es
jmp
jmp
and
scas
cld
fsubl
je
movsb
xchg
add
icebp
push
mov
add
xlat
adc
repz
cwtl
xchg
mov
pop
adc
lock
cli
mov
sbbl
and
fdivrl
mov
mov
cld
push
aas
insl
xchg
push
pop
ret
inc
pop
std
sub
test
dec
stos
mov
xor
jl
imul
js
ret
mov
sbb
pop
add
or
in
push
scas
rcl
jns
cmc
dec
jmp
sar
jmp
popa
into
and
lods
inc
adc
mov
adc
loope
dec
sbb
fsubr
les
imul
test
push
movsb
std
push
and
gs
sahf
in
test
mov
mov
add
cltd
jg
call
push
or
iret
sub
mov
addb
mov
aad
pavgw
inc
popa
inc
inc
push
orl
push
add
push
pushf
cld
cli
push
mov
jecxz
push
or
mov
and
shrb
xchg
pop
clc
or
fld
mov
push
push
xor
fcoms
push
mov
mov
mov
inc
cmpsb
pop
daa
mov
jmp
ds
mov
mov
nop
mov
or
icebp
or
mov
xchg
push
in
lret
pop
fs
mov
xor
dec
pop
cwtl
mov
jmp
into
daa
jecxz
test
dec
xlat
lods
stos
sbb
add
testb
xor
imul
pop
jb
adc
cli
test
mov
pop
lock
int
xor
xor
xchg
cs
and
repz
mov
inc
sbb
adc
pop
test
pop
pop
lret
adc
das
jg
fsubrs
std
lock
in
les
in
dec
jb
mov
int3
xchg
lds
mov
repnz
std
push
mov
add
aaa
mov
adc
sti
jo
mov
mov
xor
fnstcw
out
rcrl
and
dec
pop
mov
inc
push
cmpsl
lods
loope
mov
loope
shll
sub
jns
jae
and
push
dec
pop
sbb
dec
gs
test
jp
pop
cli
mov
imul
aam
cmpsl
aad
adc
outsl
pop
sub
sub
xchg
add
adc
jne
outsb
push
pop
cld
xchg
mov
sbb
or
adc
jo
in
mov
das
stos
sbb
scas
pop
das
popa
inc
lods
test
jns
data16
shrl
mov
scas
and
pusha
ret
add
pop
pusha
mov
js
shlb
dec
decl
lcall
push
mov
xchg
xor
mov
mov
lea
pop
mov
push
int3
add
mov
gs
cmpb
lret
mov
subl
jae
add
js
or
jmp
add
lcall
xchg
test
cltd
gs
insl
pop
mov
subb
fistpl
mov
dec
xchg
bound
mov
leave
mov
pop
mov
addb
imul
cltd
mov
xorb
pop
mov
fnstsw
popa
cmpsl
inc
mov
pop
dec
inc
push
sbb
call
outsb
jp
out
mov
nop
inc
into
jnp
cs
test
orb
popa
inc
fadds
test
adcb
ret
jecxz
loope
stos
cmp
mov
iret
mov
cmpsb
mov
mov
int3
or
dec
int3
and
push
cld
ja
popf
xchg
sub
pop
mov
xchg
out
divps
push
push
sub
and
mov
lock
mov
push
scas
into
adc
test
dec
inc
and
dec
fisubrs
lock
loope
and
pushf
mov
cmp
mov
lods
mov
pusha
or
loop
add
mov
out
out
aad
gs
sbb
xor
data16
and
sub
lcall
not
push
sarl
or
sub
repnz
cmp
sub
pop
test
repnz
inc
hlt
andl
test
xchg
addr16
jl
push
lahf
dec
es
enter
cmp
adc
stc
arpl
jb
and
sub
jecxz
test
push
mov
inc
sub
test
sbb
jo
and
mov
fwait
mov
mov
data16
inc
popf
scas
mov
xchg
repz
adc
dec
xor
cli
js
and
push
fstpt
je
or
pop
rol
inc
out
into
add
inc
lock
enter
dec
incb
lds
sarb
cli
insl
in
rol
incl
sbb
xor
dec
sbb
dec
fcoml
loop
xchg
shll
out
std
add
mov
and
fidivs
out
inc
adc
jmp
and
aam
daa
jno
in
dec
pop
shll
cmp
mov
nop
aaa
cmovno
subb
cmp
call
dec
sarl
dec
pop
push
cmp
pop
ret
fidivl
fs
jge
add
dec
xchg
rclb
push
stc
xlat
jg
mov
mov
push
cmp
jb
mov
dec
dec
adcb
test
adc
test
push
in
and
in
or
and
sub
fstl
psubd
mov
xchg
ficomps
ficoml
sub
adc
cli
pop
hlt
adc
dec
adc
add
call
mov
jl
hlt
pop
fnsave
ret
mov
push
rcrb
mov
inc
pcmpgtb
mov
mov
push
in
inc
test
adc
pop
dec
mov
xchg
or
sbb
or
pop
add
outsl
cli
dec
inc
mov
cmp
xor
or
cmpsl
xor
jecxz
pusha
cmp
out
xchg
and
mov
clc
dec
inc
cmp
insb
pop
mov
fdivrs
repz
mov
mov
ja
add
inc
inc
mov
movsb
shrb
mov
lods
mov
cmpsb
scas
pop
mov
mov
scas
jae
ljmp
js
push
push
sbb
dec
in
shll
rorb
fsub
pop
clc
dec
mov
incb
in
cmp
imull
rcrb
or
sub
in
inc
mov
ss
push
call
xor
adc
mov
jbe
movsl
popa
cmp
repnz
test
xchg
pop
push
pop
sbb
call
ret
in
mov
push
leave
rclb
cmpsl
pop
adc
and
or
add
sti
ret
ja
mov
cli
enter
bound
loop
xlat
sub
dec
rorl
push
push
movsb
pop
push
xchg
fcomi
mov
push
rorb
movsb
clc
movsb
sub
loopne
subl
or
pop
outsl
lods
sub
sbb
es
mov
pushf
out
insl
jle
pop
clc
jns
add
sbb
rol
mov
stc
xor
nop
mov
push
dec
lock
cmc
inc
add
dec
out
ret
pop
push
insl
sti
pop
loopne
adc
in
xchg
cmc
lldt
pop
aam
arpl
int3
xchg
lock
adc
and
push
adc
imul
lret
arpl
jbe
cmp
scas
and
fnstenv
mov
mov
jns
popf
fldenv
jnp
jmp
mov
fildll
fdivrl
iret
mulb
fstpl
jo
data16
int
std
jbe
loope
int
stc
ficoml
cmpsl
aaa
pop
mov
fstl
test
jbe
bound
into
imul
add
or
dec
sbb
fwait
inc
loope
or
mov
xlat
jle
jg
movsl
and
or
fidivl
aad
pop
repz
add
test
mov
xor
out
push
xor
inc
in
jl
sbb
pop
mov
add
dec
das
mov
and
and
and
jge
mov
in
jg
div
sub
pop
add
fwait
push
push
popf
mov
pop
add
js
lret
icebp
or
push
lret
lods
ss
lahf
xchg
nop
xchg
dec
mov
sub
in
arpl
add
addr16
adc
push
and
insb
loope
ret
pop
and
add
fildl
cmp
cmp
ljmp
inc
push
push
ss
jb
mov
les
popf
sub
outsb
fiaddl
push
pop
ret
loopne
pop
xor
pushf
enter
cmp
pusha
or
fucomip
sbb
pop
in
adc
subl
push
jg
shr
lret
or
sahf
mov
aas
mov
dec
mov
jmp
ja
movsb
mov
pop
inc
mov
pushf
cmp
movsl
hlt
sub
mov
xchg
sbb
das
push
pop
sti
lods
jp
aaa
inc
xchg
xchg
nop
int
fsubp
jle
jnp
lods
test
xchg
mov
in
and
pop
cwtl
sbb
mov
hlt
mov
sub
mov
xor
fcmovnu
mov
cmp
fs
sbb
adc
inc
jnp
movsl
sbb
cmp
mov
mov
inc
push
sub
inc
xchg
mov
sbb
pop
test
arpl
add
bound
rcrb
dec
aam
ljmp
test
out
shrb
test
lcall
in
pop
pop
sbb
push
push
add
dec
sbb
sub
lahf
jb
sarb
add
sub
xchg
fcomps
jle,pt
clc
inc
xlat
jno
decb
xchg
test
inc
pop
adc
jbe
push
lcall
sbb
xchg
aam
dec
push
add
push
imul
lret
arpl
popf
sub
pop
lahf
leave
adc
std
mov
sub
sub
insb
jl
jo
push
xor
and
cltd
adc
inc
jge
test
add
call
mov
xor
sahf
mov
cmp
xchg
and
adc
cmp
pop
bound
in
jbe
stos
shll
sbb
mov
or
fisubrs
and
stc
push
adc
adc
pop
ja
test
filds
and
fstpt
push
xchg
xchg
jp
mov
shll
popa
jl
pushl
push
inc
dec
mov
jae
adc
and
sar
jae
lods
sub
xor
sub
sbbl
push
or
icebp
je
stc
xchg
xor
lods
sub
bound
std
in
jle
sbb
je
or
inc
in
out
les
lahf
or
cwtl
fwait
pop
xor
fidivl
repz
cmp
lock
repz
loopne
in
adc
mov
sti
mov
xor
push
xchg
out
push
lret
shll
inc
scas
pop
iret
repz
mov
andb
ja
cmp
and
sub
scas
loop
test
add
mov
jnp
repz
add
outsb
es
mov
add
mov
je
push
clc
xchg
mov
mov
mov
jmp
mov
cmp
pop
fcompl
mov
push
scas
mov
mov
dec
mov
jo
dec
addr16
sub
sub
fs
xor
out
mov
pop
cld
lock
addr16
adc
push
arpl
notb
add
sbb
xor
fcoml
jle
fwait
daa
mov
or
mov
mov
pop
cmpsb
xor
mov
mov
lds
xor
insl
xchg
jae
mov
dec
inc
or
out
or
jl
xlat
lcall
xchg
dec
inc
imull
cmp
cltd
stos
push
das
pop
loopne
lcall
lea
lcall
mov
jecxz
adc
adcl
stos
xchg
push
mov
aad
xorl
and
aad
cld
fwait
repz
adc
xchg
es
adc
lods
cmp
pop
push
repz
add
adc
into
cmpsb
lods
in
je
es
mov
cmpsl
in
mov
into
xchg
movsl
jge
cmpsl
inc
inc
mov
cmp
call
mov
mov
stos
mov
scas
lds
jbe
in
int
mov
in
mov
das
adc
mov
xor
push
pop
add
pop
shrb
enter
jecxz
mov
mov
in
mov
aad
outsl
sbb
mov
dec
outsb
pop
push
divl
push
mov
fcoms
mov
mov
cmpsb
xchg
push
notl
lret
cs
repz
pop
push
jge
cli
push
mov
jbe
repz
xchg
decl
outsl
jl
mov
inc
je
fidivrl
sbb
in
adc
out
sub
out
dec
jns
mov
hlt
inc
out
les
dec
fstps
and
das
inc
xor
cmpsl
xor
mov
push
sbb
sbb
push
sub
xor
lcall
lahf
outsb
out
and
or
jbe
sahf
adcl
dec
push
xchg
roll
jno
jecxz
outsb
lret
nop
pop
shl
adc
push
cmp
adc
push
shlb
pop
lock
mov
jne
xor
xor
arpl
shlb
jmp
mov
dec
add
pop
mov
pop
dec
insb
nop
or
ds
js
inc
dec
aad
pop
sub
cld
fsts
jne
insb
mov
xor
jp
std
popf
push
daa
les
push
jp
sub
cmpsb
jge
divl
sub
test
mov
dec
and
and
ret
sub
jge
out
shl
mov
faddp
jno
dec
hlt
cmp
jg
push
jnp
mov
xchg
jge
in
enter
cmp
scas
sbb
arpl
in
xlat
inc
mov
int
inc
lret
inc
test
movsl
jns
dec
cli
xchg
or
and
dec
cltd
andl
in
jbe
cmp
inc
xchg
daa
mov
leave
xchg
mov
adc
dec
mov
or
mov
into
lds
inc
jbe
stos
cmp
xor
cwtl
rorl
and
nop
leave
push
lods
cmp
adc
or
add
pop
add
pop
jmp
gs
push
aas
sub
mov
jp
outsb
popf
into
and
test
sub
cmpsl
xchg
out
bound
jg
cli
scas
leave
sbb
push
fnstenv
lods
mov
cmp
inc
jno
pop
pusha
jno
sti
iret
and
push
or
mov
xchg
add
mov
movsb
test
addr16
add
lret
subl
icebp
jbe
stc
mov
sub
stos
mov
add
jbe
das
push
mov
lret
mov
mov
dec
mov
cmp
lret
stos
lods
ljmp
dec
mov
xor
add
dec
shrl
subb
xchg
jne
inc
sbb
lods
push
mov
or
cwtl
into
push
in
mov
mov
mov
add
out
stos
cmp
not
sub
sub
aad
lods
into
lock
xor
imul
dec
in
ret
cmp
mov
xchg
rorb
xchg
cmp
xorb
nop
or
jns
inc
mov
adc
mov
add
push
insl
loopne
hlt
out
add
dec
pushf
jb
mov
jne
pop
add
fidivs
mov
test
add
cmp
leave
jle
mov
je
sub
mov
xchg
push
js
add
pop
repnz
fwait
insl
mov
xor
push
int3
test
outsl
xchg
xor
dec
mov
dec
cwtl
in
sub
adc
nop
inc
popa
sub
mov
cmp
inc
adc
test
xchg
ficomps
das
bound
nop
jmp
je
rol
push
inc
inc
div
lahf
jb
push
cs
and
ret
cmp
inc
jbe
fidivl
test
sbb
adc
cmp
jmp
adc
shll
dec
jp
mov
loop
sub
enter
pop
shrb
ret
scas
cs
fsubrs
sbb
lahf
in
test
lcallw
or
mov
loope
jp
pop
cwtl
ds
push
fs
adc
sub
dec
push
add
adc
and
mulb
ja
cli
fisubrs
aam
fistpll
mov
cmp
add
cmpsb
lcall
or
xor
stos
mov
sub
push
xchg
add
loopne
mov
iret
sub
popa
subl
pop
jno
jo
pop
pushf
clc
jl
sahf
mov
mov
hlt
inc
sar
pop
fs
cmp
or
push
call
xchg
es
loopne
in
cmp
and
sub
or
faddl
stos
mov
push
mov
mov
int
pusha
xchg
sub
jg
ja
inc
push
sbb
add
mov
sbb
dec
add
icebp
lret
rcrl
and
xchg
iret
xchg
add
clc
stc
fbstp
lret
push
or
lcall
xchg
outsb
or
sbb
mov
push
test
mov
push
dec
ret
scas
inc
shrl
mov
push
bound
sbb
pop
cmp
aad
pop
mov
mov
xor
vmovaps
iret
mov
push
mov
xchg
jbe
jnp
mov
repz
je
mov
sbb
js
adc
or
fisttpl
pop
in
jl
lods
xchg
sti
inc
jl
xchg
sub
fwait
negl
cmpsl
imul
imul
xchg
insb
lods
sti
lret
out
pop
aad
fidivrl
fwait
dec
mov
mov
insb
int3
enter
add
pop
push
ficomps
imulb
je
out
dec
mov
cmpsl
daa
popf
cs
jecxz
in
mov
inc
loopne
shl
cmp
das
mov
test
sub
cmp
mov
push
sub
push
cmp
lcall
aam
xor
ljmp
jo
mov
inc
mov
imul
mov
popa
cmpsl
add
mov
negb
test
dec
or
nop
ss
nop
cmpb
jmp
pop
push
lret
faddl
jle
or
mov
mov
lahf
adc
push
fnsave
jl
mov
cld
leave
into
aad
xchg
adc
dec
push
rcrb
dec
xchg
xor
sete
sbb
mov
dec
loope
cmp
stc
je
stc
inc
sbbl
pop
sub
push
rorb
jl
inc
add
ja
fadd
leave
adc
pop
sub
aam
cmp
lea
xchg
aam
mov
adc
sbb
push
mov
call
inc
aas
mov
push
sahf
jb
outsb
enter
push
dec
mov
mov
jns
xchg
sub
dec
xchg
lret
pop
in
pop
mov
fcmovnb
mov
push
xchg
setp
jmp
lahf
scas
pushf
sbb
sahf
add
push
or
sub
inc
sbb
pusha
cmp
mov
movsl
shrb
add
mov
fiadds
fisttpll
stos
je
icebp
jecxz
push
insl
js
xchg
gs
jns
jae
or
and
push
push
pop
mov
fimull
and
adc
dec
imul
push
cmp
cmpsb
in
aaa
rorb
xchg
xlat
or
mov
pop
adc
ret
in
cmp
mov
stos
adc
icebp
pop
popf
scas
repnz
scas
mov
ffree
pop
outsb
lahf
cmp
call
jp
ds
inc
outsb
clc
adc
inc
jbe
jg
sbbb
scas
pop
xor
pushf
test
leave
mov
imul
outsl
mov
xchg
xchg
mov
cmp
pop
test
dec
jmp
sbb
xchg
and
pusha
push
lcall
jge
inc
punpckldq
clc
sbb
mov
sbb
ds
pop
roll
stc
cmpsb
sub
out
xchg
aas
fwait
adc
pop
pop
subl
enter
adc
movsb
out
xchg
notb
mov
push
add
fistpl
and
imul
xor
xlat
xor
cwtl
int3
sub
inc
fldcw
mov
es
scas
jns
pusha
mov
fwait
pop
loope
or
aad
repnz
orb
cltd
ret
lock
imul
mov
sahf
loopne
push
bound
adc
in
les
aaa
cmpsb
adcb
in
xor
xor
in
out
test
add
jno
imul
negb
das
stos
jmp
jne
and
mov
push
mov
inc
cs
jne
adc
pusha
jb
bound
and
test
dec
fsubrs
mov
int3
sahf
inc
jbe
push
hlt
adc
cmpsb
push
ja
cmp
dec
popf
add
add
add
push
mov
jmp
xor
sbb
xchg
add
imul
in
dec
inc
fwait
mov
add
icebp
mov
dec
iret
lods
sahf
movsb
or
xchg
adc
add
shrb
jbe
test
lcall
mov
jmp
or
and
call
jp
testl
mov
and
and
push
pop
js
aad
shrl
jne
push
shl
inc
insb
flds
adc
xchg
xor
sbb
and
push
test
lret
mov
syscall
adc
mov
jb
imul
jl
cwtl
fiaddl
xor
adc
ficoml
mov
add
or
jp
cltd
pop
cld
in
stc
or
cmp
adc
and
jns
mov
scas
jno
nop
cs
pop
jae
mov
add
divl
outsl
push
pop
scas
pushf
loopne
jo
push
ja
mov
outsb
xchg
sub
pop
xchg
pop
xor
imul
xor
mov
cmp
lods
pop
xchg
stos
popf
js
ret
xor
std
in
add
js
rcl
lcall
pushf
fcoml
arpl
ss
js
lods
fwait
dec
scas
popf
aad
addr16
repz
inc
rcrl
add
aaa
fmul
push
fstpl
dec
push
inc
adc
push
test
jmp
mov
enter
xlat
fwait
notl
insl
je
xchg
jne
pop
xor
sub
pop
nop
and
movsb
loope
xor
rcrl
sbb
jne
push
xchg
dec
mov
pop
inc
or
pop
inc
sti
mov
imul
cmp
push
fldl
lret
mov
push
es
xchg
adc
pushw
test
imul
mov
ljmp
dec
in
mov
dec
jno
sub
clc
fildll
repz
mov
icebp
inc
lcall
adc
repz
das
and
fistl
cmp
xor
or
xor
push
jmp
aam
jae
lock
xchg
pop
mov
js
xor
xchg
rorl
shlb
sbb
ret
popa
popf
pop
xchg
cmp
adc
mov
sbb
das
pop
or
push
inc
lahf
cmp
mov
ret
mov
mull
aas
pop
insl
callw
mov
not
std
jl
add
mov
cmp
aad
hlt
dec
fwait
inc
inc
push
popa
xchg
pop
loop
stos
lods
pushf
shl
adc
jnp
inc
pop
bound
jns
sbb
dec
mov
push
mov
add
jo
cmp
push
sub
popf
xchg
sub
jecxz
jbe
loope
arpl
mov
xor
dec
dec
push
sbb
cmp
call
jnp
mov
mov
shll
loopne
jle
jne
orb
sub
int
jo
sbb
repz
call
jg
insb
push
mov
bnd
sub
sti
cld
jns
xor
adc
sub
dec
push
xor
shrb
jmp
sahf
lret
mov
into
xchg
and
mov
outsb
jno
es
mov
or
ret
mov
mull
or
out
adc
mov
xchg
add
mov
inc
int
xor
addr16
sub
mov
sar
mov
bound
xor
mov
fsubrl
cs
inc
push
iret
into
enter
add
pop
mov
pop
std
fisubl
lods
sub
fcmovnb
call
lret
jb
aad
sub
adc
push
sub
mov
jae
leave
cwtl
xor
mov
pop
stc
xor
pop
or
test
out
mov
iret
imul
or
xchg
incl
adc
pop
dec
add
sti
movsl
jne
push
mov
shrl
pop
cmpsb
jbe
pop
xor
or
insb
xchg
lea
fdivrl
cmpsb
mov
stos
stos
push
mov
or
mov
cmp
test
inc
sarb
ficomps
cmp
push
sbb
imul
pusha
scas
push
sub
xor
outsb
test
inc
add
sub
dec
pop
push
mov
das
ss
xchg
jns
xchg
sbb
roll
aas
aas
hlt
mov
xorb
jb
dec
shrb
adc
outsl
jae,pn
cmp
xor
mov
xchg
cmp
jb
mov
aas
fstp
out
ss
aaa
lcall
or
vpsllw
fistl
in
imul
cmp
sti
jl
cld
test
pop
mov
mov
mov
or
pusha
xor
ret
dec
cmp
notb
inc
xchg
cmc
jo
je
std
js
mov
pop
rcr
jge
xchg
outsb
gs
data16
push
push
sub
adc
push
mov
ret
in
push
ret
sub
mov
divb
mov
insl
cmpb
push
or
cmpsl
pop
das
xchg
stos
push
pop
jne
xchg
sbb
mov
sub
scas
mov
pop
repz
pop
cmp
xor
scas
xchg
scas
in
popa
and
in
xchg
ret
xor
rorl
repz
xchg
sub
or
or
shrl
jmp
add
mov
js
add
sbb
int
add
aam
dec
es
inc
icebp
cmpsb
and
lret
pop
add
xor
ljmp
in
rorb
pop
scas
in
or
pusha
mov
daa
data16
rcrl
jae
sub
scas
xor
test
cmp
pop
icebp
lods
lahf
mov
xor
cmp
into
mov
sbb
in
loop
mov
xor
imul
imul
xchg
cmc
inc
xchg
out
mov
sbb
jno
pop
dec
jno
test
mov
or
call
xlat
jl
fs
push
stos
jnp
fstps
cli
sarb
aad
adc
std
cmp
sub
and
xlat
scas
dec
cmp
add
lret
aas
pop
xor
or
sahf
into
sbb
xor
push
or
jbe
jp
ss
cmp
pop
repz
cmp
mov
test
mov
cltd
in
insl
xchg
mov
or
pop
mov
daa
adc
mov
jnp
lret
dec
fs
mov
adc
jns
add
jecxz
mov
cld
mov
ss
push
or
dec
inc
and
int
je
xchg
and
in
in
ret
or
or
push
out
dec
insb
or
cmp
jmp
push
cwtl
cmp
jnp
inc
dec
mov
and
add
sub
add
xor
mov
mov
dec
ds
jae
mov
jecxz
push
adc
inc
dec
push
imul
div
into
xchg
mov
pop
lods
push
xchg
cwtl
jbe
mov
xchg
movl
addr16
mov
mov
xor
rcl
adc
fiadds
in
in
inc
mov
mov
adcb
insb
fistpl
pop
mov
lahf
jno
inc
sbb
fmuls
cmc
push
mov
jb
push
inc
fwait
dec
inc
int
lea
sbbl
iret
dec
cmc
icebp
or
test
movsb
call
adc
push
dec
jp
mov
jns
ja
ss
and
xchg
mov
es
test
imul
fidivrl
pushf
dec
pusha
sbb
and
dec
insl
retw
xchg
nop
cmp
jne
in
and
xlat
popf
push
inc
mov
jmp
jmp
cltd
mov
popf
gs
xchg
xor
add
in
xor
xor
sub
mov
xchg
pop
push
sbb
mov
cmp
enter
sub
out
xchg
mov
in
lock
adc
cs
xlat
sbb
loop
insb
xor
cmc
inc
mov
and
test
movsb
or
and
jl
pop
int3
dec
popa
out
sbb
es
cmp
shl
sti
addb
addr16
mov
pop
pop
js
add
xchg
xor
out
pop
movl
bnd
out
les
jl
xchg
sahf
sub
mov
mov
in
inc
movsl
xor
sahf
mov
sbb
push
mov
mov
xchg
jnp
lods
out
insl
data16
push
in
sbb
push
mov
xor
ja
cmp
inc
jecxz
lret
clc
sbb
scas
js
pop
sub
mov
sub
divl
sub
adc
or
fisubs
add
pop
mov
sbb
test
jge
xor
test
aas
aaa
push
jl
mov
mov
mov
add
fsubl
das
sbb
rolb
jl
add
mov
sub
nop
sub
lahf
cmp
and
push
fnstcw
je
scas
xor
sti
adc
push
outsl
fs
push
divl
ss
nop
sub
fdivrs
rcl
leave
jne
jmp
cwtl
sub
sbb
mov
nop
or
adc
imul
ljmp
insb
jmp
daa
jns
imul
inc
xor
sub
in
sbb
dec
adc
pop
mov
lea
popf
iret
pop
rcll
pop
sub
push
xor
fldcw
or
cmp
push
mov
jb
imul
push
inc
lock
jle
xchg
or
lock
cmpsl
aad
movsb
sbb
push
cmp
jns
jg
into
stos
test
dec
jp
pop
push
lods
test
addl
inc
xor
push
fiadds
lock
adc
stc
pop
mov
mov
shlb
stc
sti
in
icebp
daa
add
pcmpeqw
mov
cmpsl
sar
out
loopne
jp
xchg
jno
mov
movsb
lahf
loope
dec
fdivr
stos
idivl
outsb
jno
mov
mov
ficompl
push
cmp
aam
and
and
add
inc
lds
popf
rolb
mov
in
lock
and
inc
xchg
mov
int3
push
xor
mov
insl
inc
pop
xor
or
in
cltd
inc
xchg
addr16
mov
lock
xor
xchg
mov
out
xor
imul
call
sbb
out
and
or
or
cli
stc
test
fcmove
mov
rcrl
jno
pop
in
dec
mov
lods
mov
loop
pop
hlt
dec
jae
cltd
jb
cvtpi2ps
dec
dec
cmp
add
invlpg
dec
adc
push
lahf
xchg
gs
mov
leave
pop
mov
jp
pop
push
mov
inc
pop
mov
jle
dec
push
outsb
mov
cmp
or
inc
mov
inc
push
mov
cmp
scas
idiv
rcl
andl
data16
ja
ss
add
mov
mov
mov
in
movsb
jle
cs
cwtl
fcmovnb
andl
dec
jne
mov
dec
push
mov
mov
cmp
leave
lss
inc
sarl
mov
or
pop
cs
pushf
push
rcrb
xor
push
push
dec
xor
bound
and
sbb
sahf
mov
lahf
mov
test
jp
and
jnp
push
sbb
mov
lods
sbb
xchg
repz
push
lds
in
xchg
mov
dec
cltd
or
mov
sti
dec
jmp
imul
daa
xchg
insl
and
fmull
scas
loope
in
stc
fsqrt
inc
vrangepd
mov
jb
xor
sahf
push
nop
iret
xchg
cmp
fisubrl
pop
into
add
iret
sarb
pop
testb
daa
pop
imul
xchg
or
insl
ljmp
lea
pop
in
pop
sbb
dec
and
repz
pop
pop
jge
jb
push
pop
push
leave
xchg
sbb
ljmp
mov
adc
aad
es
and
std
out
pop
jno
out
pushf
sahf
mov
sahf
sub
jge
xchg
inc
add
jg
inc
jbe
roll
push
jg
ret
jnp
addr16
and
rcl
mov
std
mov
sub
call
inc
ror
push
push
repnz
pushf
push
jno
call
xor
enter
popa
lds
mov
mov
pmaddwd
nop
ds
mov
stc
jae
fs
mov
mov
sbb
sub
mov
sub
in
add
out
xchg
jmp
sbb
adc
lock
repnz
mov
js
jo
fildll
stos
mov
flds
xchg
pop
xor
outsl
inc
xor
jns
stos
mov
in
xor
ret
xor
lods
xchg
xchg
imul
shlb
mov
ds
jecxz
in
call
push
addr16
add
xchg
mov
mov
sub
fstpl
jecxz
lahf
mov
fs
dec
daa
sahf
data16
cmpsb
sbb
jo
xor
loopne
iret
mov
sti
loope
xchg
movl
fistl
cltd
out
addr16
pop
mov
dec
insb
into
cmp
add
pop
neg
jns
pop
in
sub
pusha
mov
push
sahf
test
jo
loope
push
push
in
cmpsb
mov
loope
jge
cmp
out
sbb
mov
lahf
cmpsl
jp
popa
or
into
clc
jg
inc
jo
xchg
or
incb
push
xchg
sub
cmp
mov
xlat
push
sub
cmpsb
insb
mov
dec
inc
rcr
xor
mov
sbb
je
and
out
jne
mov
push
cwtl
inc
test
in
gs
lds
je
and
inc
or
xchg
xor
mov
push
or
sbb
or
fbstp
movsl
sbb
scas
cmp
mov
scas
xor
dec
sbb
cmp
cmp
lea
icebp
das
pop
push
and
sbb
jecxz
shll
imul
push
jb
push
cltd
int3
test
lock
movb
jo
aam
and
xchg
and
in
lock
xchg
shl
mov
out
movb
add
add
adcb
and
clc
es
and
or
rcrb
inc
sbb
mov
test
icebp
dec
push
push
push
cmc
repz
imul
fdiv
push
inc
pop
or
mov
xchg
xchg
fcmovnb
and
push
in
out
arpl
out
sahf
test
cmp
cmp
sbb
or
sub
mov
js
ja
jb
in
mov
repnz
jge
sub
xchg
std
les
cwtl
xor
das
cs
popa
sarl
xchg
or
inc
mov
cld
imul
cld
inc
adc
mov
or
ret
rclb
leave
xor
in
pop
pushf
dec
mov
and
aas
jo
leave
add
sub
int
cld
clc
mov
add
inc
mov
fwait
mov
jmp
inc
cli
dec
sub
xlat
lds
in
adc
dec
orb
dec
fimull
mov
aas
test
js
addr16
jae
insb
mov
mov
mov
sbbb
dec
lret
test
cmp
sub
ret
push
daa
fcmovb
pop
stos
arpl
push
adcb
fwait
mov
fimuls
pushf
mov
ror
mov
nop
mov
in
mov
hlt
jnp
fsubrl
adc
sub
pop
outsb
mov
jmp
mov
push
push
pop
stc
or
inc
in
jmp
or
loop
xchg
jns
jne
std
scas
push
sahf
inc
mov
adc
repz
jecxz
push
push
mov
pusha
andl
push
xchg
into
push
ja
ds
cli
mov
jo
inc
pop
jb
scas
ret
aad
lods
add
addr16
lock
xor
inc
cmc
movb
popa
add
jmp
adc
mov
jns
add
js
imul
aam
loopne
push
or
pop
jl
outsb
mov
movsl
lcall
mov
xchg
pop
sub
in
push
ret
lock
push
imul
cs
out
sbb
jl
jl
in
movsb
rcrl
adc
cmp
sbb
xor
jno
or
loope
lock
insb
repnz
fucomi
cmpsl
mov
add
imul
pop
ret
fadds
inc
cmpl
xchg
push
test
or
test
pop
stos
mov
fdivr
fs
repnz
mov
jbe
dec
pop
jmp
and
jo
out
sbb
pop
movsl
jae
mov
inc
xchg
outsb
sub
popf
lret
mov
ds
cmc
es
adc
aaa
scas
ss
xchg
sbbl
push
loopne
mov
adc
add
mov
aad
iret
cmp
jmp
jbe
and
dec
cwtl
xchg
cmc
movsl
inc
push
pop
xor
mov
mov
mov
lock
ds
aam
cld
pop
fdivrl
dec
rep
xchg
addb
xchg
adc
mov
add
loope
dec
mov
push
mov
jnp
pop
nop
ss
in
mov
pop
push
js
jo
xor
mov
dec
mov
mov
lods
mov
in
mov
sub
jle
repz
je
movsb
pop
dec
scas
jl
adc
and
fdivr
rorb
cmp
lahf
mov
adc
sub
or
enter
scas
scas
lahf
repz
xchg
clc
negl
aaa
ja
lods
test
loopne
or
mov
arpl
push
push
xchg
fwait
inc
rolb
ret
pop
pop
adc
mov
mov
mov
and
inc
lods
xor
imul
int
shrl
gs
out
loopne
cltd
cmp
xchg
mov
pop
pop
pop
in
xchg
testl
inc
dec
mov
and
mov
cmp
pop
jno
dec
jecxz
sub
or
in
xor
dec
adc
test
push
jmp
iret
xchg
fwait
sbb
push
andb
lods
lds
mov
and
and
int
clc
dec
shlb
inc
or
push
pop
arpl
xchg
dec
xor
and
fldl
lds
fsubrl
inc
jae
cli
adc
or
mov
dec
push
xchg
add
inc
pop
push
imul
clc
rcrl
sub
sti
lock
clc
pop
imul
iret
jno
sub
stos
scas
dec
loope
and
pop
push
idivl
sbb
loop
out
lods
js
mov
xorl
push
or
popa
lds
les
xchg
jg
lods
mov
cmp
add
jmp
or
and
loop
test
push
cmp
loope
or
mov
xchg
rcrb
ljmp
stos
mov
mov
into
dec
stos
cmpsb
sbb
fsts
popf
sub
mov
lret
xor
pop
jle
xchg
into
add
imul
jmp
rorb
fnsave
fisubl
and
outsb
out
fsts
and
cli
mov
lret
iret
lods
hlt
fs
cmp
ja
xchg
jnp
and
mov
cmp
adc
or
ret
cmpsb
cmpsb
add
mov
loop
jp
das
lahf
xchg
daa
cltd
test
sub
ljmp
fdivs
xchg
movsb
mov
enter
fildll
in
int
mov
push
xchg
push
xchg
and
push
mov
out
adc
or
xchg
jo
leave
in
sub
nop
pop
lock
jnp
and
mov
or
sbb
cmp
push
cmpsl
sub
loop
cmp
adc
pop
pusha
mov
jns
xor
je
mov
mov
icebp
dec
lea
lret
incb
xchg
and
adc
mov
mov
test
mov
jb
ss
subb
xchg
mov
mov
add
inc
mov
hlt
and
scas
cltd
push
push
and
xchg
mov
inc
popf
mov
lea
push
and
xchg
pop
decl
push
and
call
push
mov
sub
faddp
inc
pop
adc
lret
xchg
adc
les
xchg
leave
in
adc
cmp
pop
rorl
xchg
inc
push
or
repz
sub
jp
clc
and
push
push
addr16
cmpsl
mov
push
inc
sti
imul
bswap
sahf
aad
push
mov
mov
pop
aas
pusha
stos
inc
or
ret
shll
xor
out
mov
jbe
inc
outsl
mov
push
ret
pop
test
stos
ror
scas
or
loopne
test
add
das
jmp
loope
sub
int3
fadd
jns
fcmovnbe
jmp
int3
sub
fwait
and
in
aaa
push
sub
sbb
cmpsb
dec
lods
cmp
popa
jge
rolb
cmc
rclb
jno
sub
arpl
sub
jecxz
stc
cmpsl
mov
and
cmp
pop
jbe
xchg
ret
jge
call
pop
add
jb
mov
inc
cmp
push
xor
pop
sub
xchg
sarb
pop
jge
inc
push
incl
cs
nop
les
adc
dec
lods
repz
loop
dec
adc
mov
es
cli
inc
xor
loopne
and
xor
xor
mov
popf
pop
push
ds
mov
add
mov
stos
repnz
and
test
das
cmp
aaa
lahf
shlb
push
lea
push
sbb
addr16
int3
stc
jb
loopne
add
popa
xor
xchg
lods
inc
fcmove
ds
add
fwait
scas
push
shr
adc
pop
movsl
bswap
data16
push
mov
mov
mov
inc
daa
aas
inc
and
and
lods
sbb
add
xchg
and
mov
psubusb
js
popa
fdivl
pushf
xor
mov
andb
sar
xchg
adc
ljmp
leave
pop
sbb
and
pop
hlt
in
sub
repz
out
mov
nop
adc
mov
cmpsl
dec
jae
into
and
pop
not
push
ret
inc
mov
dec
cmpsl
sbb
push
popl
out
xor
orb
js
ret
push
lock
cmp
test
sti
mov
xor
cmc
enter
scas
sbb
movups
ret
pop
fstl
in
add
xchg
dec
je
or
add
jmp
pop
cmp
ljmp
icebp
ljmp
xor
mov
lea
inc
mov
adc
pop
adc
cwtl
dec
les
pop
fiaddl
mov
add
push
pop
mov
sbb
movsb
gs
pop
mov
jne
fdivl
rcrb
jb
mov
out
adc
outsb
lret
jmp
sbb
mov
mov
int3
ret
idivl
jns
mov
arpl
hlt
add
std
sbb
in
fidivl
or
mov
jle
dec
lcall
sub
repnz
xor
pop
sahf
xchg
sbb
loopne
imul
aam
cmp
jns
xor
mov
mov
jge
mov
jb
jnp,pt
lahf
das
inc
aas
jo
lcall
adc
mov
popf
jp
outsl
arpl
add
and
sub
cmpsb
inc
call
and
cli
push
in
aam
daa
out
shll
xchg
out
inc
in
jmp
dec
or
ret
scas
and
add
jl
jg
xor
and
push
or
sub
mov
in
sub
int
lods
jg
push
cli
push
inc
ret
scas
xchg
xchg
jge
dec
stc
or
cmp
jb
sahf
aam
dec
mov
xor
clc
fistl
adc
mov
aam
mov
movsl
mov
lods
or
jge
ljmp
mov
arpl
loop
push
jmp
pop
sbb
nop
xlat
lret
xchg
inc
sbb
jb
dec
sbb
and
jecxz
aad
nop
mov
sub
das
mov
or
cs
bswap
cmp
push
mov
mov
push
pop
mov
inc
push
mov
inc
cld
popa
and
sub
mov
and
cmp
mov
inc
cmp
jp
or
out
test
test
cmpsb
notl
inc
mov
in
pop
inc
and
cmp
jle
fdivr
sbbl
push
and
cmp
xor
xor
cltd
stos
movsl
or
test
push
add
orl
repz
gs
and
mov
jb
sti
clc
sub
andl
jg
push
pop
inc
sbb
lods
repnz
pop
push
mov
je
mov
xor
jmp
adc
and
dec
mov
mov
inc
push
ret
cli
pop
les
notb
pop
jne
adc
icebp
lock
orl
adc
sub
aaa
loop
insb
xchg
stos
mov
repz
aad
or
loop
or
ror
sub
inc
xorl
ret
push
lods
stos
jecxz
xchg
pop
and
fnstenv
mov
mov
cmp
rorl
jae
jne
and
test
jecxz
sbb
insb
andb
pop
ss
insl
pushf
mov
mov
dec
lods
mov
aad
adc
test
mov
cmp
mov
shrb
pop
test
nop
ret
xor
xchg
scas
stos
insl
aad
dec
and
cmp
cmp
cmp
in
mov
push
fmulp
cmp
add
mov
xor
lods
fcompl
sub
ror
xchg
xor
test
pop
es
ret
pop
mov
dec
js
xor
mov
mov
dec
clc
lods
dec
addr16
mov
loop
jae
fidivrs
jge
add
pusha
out
jb
sub
pushf
push
push
or
mov
pop
mov
xchg
adc
pop
pop
stos
sub
adc
stos
push
loopne
mov
cltd
cmc
xchg
push
add
inc
rolb
cmpsl
jbe
jle
andl
mov
call
xchg
scas
rclb
or
push
mov
jg
pop
add
loopne
pushf
cmp
cmp
lods
dec
loopne
add
mov
or
add
xor
movsl
addl
dec
inc
hlt
and
inc
stos
inc
mov
mov
loop
xchg
push
mov
and
inc
xor
icebp
and
sbb
lods
jmp
arpl
xchg
mulb
adc
and
push
xorl
xchg
push
movsb
dec
xchg
hlt
out
sti
mov
repnz
rolb
mov
xlat
cmp
push
adc
push
fcomip
mov
cwtl
pop
and
fistpl
mov
or
inc
int3
dec
test
repz
js
inc
mov
repz
jmp
nop
and
clc
push
pop
pop
mov
fbld
pop
sub
outsl
sbb
and
mov
pop
pop
in
js
shlb
or
popa
cmpsl
cmp
sahf
push
dec
iret
add
insl
lea
inc
mov
mov
adc
stc
xrelease
insb
movsl
pop
adc
fmull
inc
leave
aad
push
adc
test
xorl
xor
mov
sbb
push
or
test
lods
in
inc
ja
lret
hlt
and
mov
xchg
sbb
add
inc
fidivrs
xlat
push
mov
and
sarl
xchg
insl
or
mov
aad
sbbb
fmuls
push
std
lret
xchg
test
inc
push
call
ds
mov
xor
pop
jno
jmp
out
mov
movsl
mov
ret
ss
stos
mov
or
mov
jne
or
inc
bound
out
adc
pop
xchg
xchg
in
mov
push
or
push
sbb
jns
jbe
and
std
add
rorb
inc
cmc
xor
lret
mov
js
add
dec
xchg
bound
fmull
mov
sub
aaa
cmp
fisttps
fs
dec
insb
inc
pushl
dec
out
mov
lods
push
push
fdivrl
les
loopne
cmp
and
shlb
cmp
xlat
push
mov
mov
pop
loope
mov
icebp
cmp
push
push
cmc
adc
fs
adc
notl
push
dec
ret
in
je
sub
sti
fsts
cli
cmp
or
fwait
loope
fldt
and
push
cmp
jo
sub
add
fnsave
jo
inc
cltd
inc
xor
arpl
in
adc
push
and
push
jmp
daa
hlt
push
ss
mov
add
xlat
sbb
xor
add
outsb
sub
dec
sub
stos
popf
imul
cmpsl
imul
lcall
pop
rorb
cltd
push
xchg
cmp
sbb
in
or
sbb
in
rorb
cld
pop
xchg
aaa
pop
outsl
sbb
or
mov
movsl
ljmp
arpl
cmp
cmp
daa
mulb
cmp
inc
notl
aad
mov
xor
dec
pop
into
jmp
xchg
ret
lea
push
jne
and
xchg
stos
into
cld
xlat
xchg
mov
out
lret
or
loope
adc
mov
in
aad
ss
pop
inc
dec
icebp
inc
aad
int3
iret
es
mov
jecxz
inc
fdiv
jmp
push
push
and
shlb
xchg
and
mov
insl
insb
notb
call
repnz
add
aam
inc
stos
test
xchg
pop
insb
es
cmp
inc
lret
sub
std
or
outsl
adc
add
fisubrl
adc
mov
ret
js
gs
mov
cld
inc
enter
insb
pop
cltd
jae
shlb
addr16
and
ljmp
dec
lea
adc
lock
icebp
int
std
cld
test
outsb
je
arpl
clc
fstp
jge
mov
cmp
push
ret
cld
je
sub
mov
es
xchg
arpl
sbb
mov
xchg
imul
aas
sub
adc
loop
push
mov
pushf
mov
int
roll
repz
fidivs
inc
insl
mov
bnd
dec
popf
bound
xchg
pop
gs
aam
pop
pop
mov
push
cwtl
in
pop
call
movl
jb
push
mov
das
ret
int3
loopne
mov
in
xchg
mov
and
xor
pop
or
adc
and
mov
dec
inc
sub
xchg
inc
pop
loop
lcall
adc
mov
pop
xor
inc
sub
inc
ficomps
enter
mov
mov
xor
jg
and
insl
dec
cmp
push
cmp
and
sub
out
inc
push
test
inc
or
push
int
inc
sbb
mov
inc
cltd
add
mov
mov
push
shl
xor
xchg
adc
int3
adc
data16
push
sbb
pop
jle
shll
mov
add
push
cmp
popa
xchg
xor
inc
and
mov
or
iret
sbbl
sahf
mov
push
popf
jle
cltd
inc
jge
rcl
xchg
cmpsl
add
xlat
and
or
lds
mov
push
pop
mov
aaa
jl
scas
shrl
in
pop
scas
xor
sbb
sarb
pop
sti
and
loope
adc
cwtl
xor
add
sub
push
loop
push
adc
inc
and
mov
or
outsb
and
add
jno
shlb
push
scas
xchg
aam
daa
cld
mov
cmc
push
loopne
cltd
dec
cmp
scas
mov
mov
inc
daa
repnz
and
sti
sbb
rorl
push
aam
pop
fnstsw
jl
dec
inc
push
mov
mov
sahf
mov
and
sbb
add
and
rorb
stos
or
stos
imul
jecxz
cmp
lret
sub
out
pop
sti
sbbl
cmp
icebp
je
xchg
fldcw
inc
mov
adc
dec
fsubs
mov
pop
leave
mov
pop
sbb
in
pop
inc
nop
dec
fdivs
pop
add
cmpsb
pop
and
neg
mov
ret
cmp
push
arpl
sbb
loop
fiadds
mov
outsl
xchg
mov
mov
test
in
mov
dec
mov
orl
mov
xchg
out
or
test
mov
push
sub
sub
lcall
xor
cwtl
push
dec
lods
ret
int
inc
int
cmc
and
imul
ljmp
jns
jmp
movsl
out
jae
stc
xchg
and
es
xchg
lea
and
inc
in
adc
fisubrs
imul
andl
pop
push
pop
ss
push
pop
rorl
cmp
aad
or
imul
mov
inc
leave
cmp
test
pusha
mov
out
js
repnz
mov
sub
cltd
inc
sbb
jmp
call
stos
inc
dec
cmpsl
scas
mov
loop
xor
mov
inc
rcl
pop
cwtl
icebp
imul
or
cmp
dec
in
andb
push
mov
ljmp
int3
fsubl
dec
mov
sub
test
sbb
dec
jbe
push
mov
gs
pop
push
lea
jbe
fisttps
mov
mov
aas
out
xor
mov
inc
and
xchg
pop
sti
insl
sbb
mov
mov
ficoml
mov
iret
inc
ss
or
jp
and
sub
fiadds
inc
adc
adc
call
xchg
push
push
cmpsb
pushf
xchg
test
push
cmp
mov
adc
push
dec
mov
mov
clc
and
sbb
cltd
test
jae
xor
sbb
popf
pop
in
dec
jg
fs
jne
data16
out
pop
mov
pop
and
mov
dec
es
sbb
inc
jo
rcll
jp
aaa
in
sahf
cld
mov
jne,pt
ja
xchg
inc
jb
inc
popa
cmp
sbb
add
gs
add
mov
push
dec
lods
xchg
pop
ljmp
scas
pop
imul
sbb
push
lret
scas
mov
jns
mov
cmc
ret
lret
repnz
outsl
cmc
outsl
jg
shlb
pop
push
dec
int3
push
rcrb
movsl
push
pop
cmp
mov
popl
pop
lret
lret
repnz
mov
pop
jecxz
fsubs
and
mov
xchg
nop
dec
push
mov
sbb
push
dec
xchg
es
mov
xchg
mull
mov
lret
shll
insl
and
fsubrp
dec
mov
mov
jae
pop
push
imul
and
xchg
movsl
loopne
pop
in
add
or
cli
clc
loope
jp
jecxz
mov
mov
arpl
scas
insb
jno
adcb
loop
fildll
testb
lock
sar
mov
sbb
cmpsb
push
stos
sti
gs
fnstcw
mov
popa
sahf
xor
cmp
or
mov
pop
push
dec
mov
mov
cld
nop
rorl
jo
dec
sub
add
mov
es
inc
leave
je
pop
in
frstor
jno
aas
lret
push
jo
out
jno
sbb
movsb
inc
out
and
jl
or
sub
inc
add
rorl
adc
notb
leave
cmp
mov
mov
js
stos
fstl
in
push
insl
mov
repnz
lock
xor
lcall
ljmp
fcom
mov
mov
fisttpl
mov
and
jecxz
pop
mov
iret
dec
outsb
push
cmp
adc
orl
pushf
cmp
scas
scas
scas
add
call
lret
inc
xchg
pop
fists
jae
inc
mov
pop
in
mov
js
adc
sub
and
inc
stos
mov
lods
imul
cmpsb
in
dec
rcrb
sub
outsb
cmpl
repnz
fldcw
mov
jns
hlt
add
lret
daa
lods
rorb
shl
xor
ss
cmp
loope
push
rcrb
jo
fiaddl
in
mov
mov
inc
rol
mov
lods
mul
xor
push
sub
xor
xor
mov
loop
jl
jmp
stos
jae
fildl
xchg
popf
and
or
mov
je
mov
sbb
popf
cmp
inc
pop
xchg
mov
xchg
shl
cmp
push
in
sbb
dec
dec
mov
in
ss
inc
roll
test
pop
sub
icebp
in
mov
mov
add
int
adc
xchg
lods
cwtl
sub
sbb
rcrb
mov
repz
sahf
jae
shlb
fcompl
repnz
fisubrs
cli
add
mov
out
shrd
cmovae
shlb
jecxz
push
test
sub
adc
int
pop
push
or
xchg
xor
rcrb
cmp
imul
and
mov
test
insl
jmp
lock
sbbl
mov
push
push
insl
aam
pop
or
push
jle
aaa
and
fsub
jge
loope
sbb
or
sbb
aad
push
jne
sti
push
push
popa
lock
lods
push
cwtl
fistpl
sub
cmp
pop
in
test
sbb
sub
rcl
dec
cmp
mov
out
sub
dec
inc
stos
mov
lods
cli
pop
fs
ja
push
jp
arpl
xlat
notl
ss
mov
movsl
icebp
inc
aad
and
jge
mov
enter
xchg
movsb
sti
add
mov
xchg
mov
xlat
dec
mov
or
jle
add
add
xlat
stc
movsb
push
pop
push
push
adc
dec
lret
xchg
es
shlb
jno
jae
outsl
ret
leave
popa
movsl
and
rcll
jp
std
mov
xchg
loop
xchg
shlb
dec
inc
mov
imulb
sbb
fstpl
cs
or
push
push
or
mov
aam
lods
outsb
mul
and
adc
inc
movsl
call
mov
inc
or
fldt
rorl
outsb
pop
lret
idiv
xchg
stc
mov
cltd
clc
push
jmp
or
add
mov
xchg
enter
jmp
and
add
jae
jg
dec
add
mov
adc
add
jge
das
inc
cmpsb
cmp
inc
mov
mov
jge
cmc
aaa
cmp
popa
push
xor
iret
mov
sarl
shll
idivl
jnp
push
xor
ficoms
test
in
or
mov
or
hlt
ljmp
inc
je
in
inc
push
xchg
cwtl
out
scas
pop
scas
adcl
scas
push
and
mov
sbb
rol
insb
dec
int
outsl
dec
pop
xor
xchg
int
scas
jb
pmuludq
ljmp
mov
fstl
add
pop
mov
scas
sbb
adc
push
pop
mov
push
xchg
add
push
push
testb
mov
imul
negb
bound
lock
pop
ret
cli
add
aam
je
dec
push
xchg
mov
pushf
sub
xlat
sub
sbb
dec
mov
jmp
xchg
test
icebp
dec
and
or
push
jae
cmp
mov
add
xchg
dec
cmp
gs
mov
cmc
fbld
clc
mov
mov
ja
xor
dec
push
je
add
lcall
lcall
add
or
pop
adcb
and
fidivrs
addr16
test
mov
cltd
loope
sub
sub
mov
xor
into
pop
stc
or
jo
sbb
pop
xchg
es
pop
in
push
lds
nop
dec
inc
outsl
add
dec
aad
jno
inc
outsb
fildll
dec
lock
lods
add
mov
jae
cli
mov
je
fucomip
sub
jl
jne
xlat
inc
test
sub
loope
ss
aam
sbb
dec
adc
sbb
dec
xchg
mov
and
das
cmc
fists
pop
fsubl
jl
pusha
ja
int3
mov
std
je
push
or
push
lods
mov
lods
cwtl
fsts
mov
std
mov
icebp
mov
test
clc
jno
push
cwtl
push
add
arpl
in
mov
out
out
mov
inc
or
xchg
mov
lock
shll
inc
or
push
cmc
pop
inc
shlb
adc
inc
es
loopne
mov
push
push
sub
sbbl
or
notl
cmpsl
mov
decb
test
cmp
aaa
sub
cmpl
pop
js
mov
inc
imulb
inc
int3
add
xchg
and
sub
dec
enter
jge
sbb
push
add
arpl
cltd
icebp
adc
ljmp
jbe
divb
and
cmp
pop
push
mov
mov
popa
mov
adc
repnz
xchg
js
rcrl
fucompp
add
fs
mov
in
and
mov
stos
sbb
inc
out
fstpl
bound
adc
sub
push
popf
call
and
push
stos
jbe
imul
icebp
jle
pusha
mov
xchg
adc
iret
jae
xchg
lea
outsl
dec
adc
bswap
jbe
ret
pushf
sub
xor
daa
or
mov
movups
mov
out
imulb
mov
inc
mov
add
push
in
pop
pop
mov
jnp
push
sub
popa
repnz
jp
pop
xor
test
push
movsl
pop
aam
mov
ret
or
sti
cmc
out
shll
inc
mov
jmp
and
call
lahf
xor
mov
stos
cmp
or
out
stc
mov
mov
cs
jmp
mov
sub
add
test
mov
or
mov
je
pushf
xor
aaa
dec
xchg
icebp
out
mov
pop
mov
cltd
jne
ret
dec
xchg
push
and
mov
les
fcmovbe
mov
das
aam
add
xchg
ret
inc
mov
adc
mov
mov
mov
xlat
aas
roll
mov
in
and
or
mov
or
jle
into
ret
and
dec
scas
aas
arpl
adc
dec
cld
mov
xchg
inc
or
mov
mov
jns
pop
adc
loope
add
lahf
adc
scas
out
inc
push
mov
inc
adc
nopl
fsubl
shll
push
roll
ljmp
pop
sub
inc
jg
inc
adc
sbb
push
push
or
pop
push
iret
adc
in
push
in
fbstp
gs
test
mov
je
sbb
rolb
jmp
movb
mov
jmp
push
ds
insl
icebp
mov
ljmp
fbstp
xcrypt-cfb
cmpsl
daa
pop
inc
call
adc
ja
int3
cld
into
daa
popf
ljmp
cmp
lahf
xor
movsb
popa
pop
arpl
xor
iret
jb
and
fwait
inc
pop
imul
ljmp
sbbl
xchg
xchg
inc
dec
jne
adc
dec
ljmp
dec
mov
sbb
lcall
xor
inc
into
shll
rorl
movsb
inc
jbe,pn
mov
es
jo
add
shlb
arpl
mov
mov
sub
js
xchg
test
inc
cs
andb
push
divl
xor
out
adc
xor
mov
sahf
cltd
sbb
test
arpl
fists
dec
xchg
dec
inc
push
jns
insb
fldl
lods
sub
mov
push
xchg
sbb
test
mov
leave
gs
jmp
fsubr
mov
push
or
inc
fstp
lea
movsl
lahf
test
movsl
push
mov
sbb
dec
mov
loopne
outsb
leave
mov
daa
push
mov
out
nop
out
xor
adc
mov
sub
xchg
test
xchg
push
out
in
lahf
lock
and
xor
cmc
jo
mov
push
push
pop
mov
mov
aas
icebp
sub
test
sbb
outsb
test
push
mov
stos
rcrb
xchg
cmpsb
enter
xchg
pop
jp
fiadds
or
and
pop
and
cmpl
sahf
or
mov
and
das
int3
insb
push
dec
addb
jne
push
int
arpl
cld
add
inc
adc
xchg
pushf
pop
out
inc
pop
pop
jmp
or
out
adc
sub
add
inc
mov
sbb
mov
aas
vpaddw
mov
push
inc
pop
jae
xor
shlb
cmpsb
mov
nop
data16
hlt
sub
dec
stos
mov
push
pop
loopne,pn
sub
cwtl
negl
add
stc
xchg
nop
and
mov
mov
lcall
push
in
out
adc
sub
out
je
sbb
and
aaa
fs
fcompl
in
int3
call
jns
and
adc
mov
call
lea
in
xor
sbb
adc
sbbl
repz
cld
inc
inc
sub
lahf
call
gs
aas
scas
mov
and
lods
push
movsb
add
rcrb
xchg
dec
and
cs
push
repnz
mov
inc
lret
xchg
repnz
jg
xlat
mov
nop
mul
xor
clc
aas
jno
xchg
outsb
lret
xor
mov
insb
popa
shr
aas
fisttpl
mov
js
inc
sbb
dec
xchg
mov
hlt
rcrb
fwait
lahf
fwait
into
and
scas
loopne
out
and
push
imul
sbb
ret
ret
icebp
push
jp
out
add
xchg
repnz
mov
cli
cmp
daa
pop
std
pop
cmp
jmp
fists
aad
xchg
jecxz
into
in
mov
test
jb
repz
repnz
adc
insb
add
cmp
rorb
xchg
daa
adc
jne
push
dec
sub
push
test
fidivl
repz
int3
rclb
sub
xor
ljmp
cmp
inc
dec
push
call
cmp
mov
fcom
mov
je
aam
xor
jae
push
sub
js
mov
ret
dec
mov
mov
pop
push
dec
push
cs
adc
xor
arpl
adcb
push
lcall
mov
add
sarl
rcrb
add
cmpsb
inc
add
mov
daa
pop
lock
mov
neg
out
mov
jecxz
dec
movl
adc
pop
aam
in
lea
nop
push
push
cwtl
ss
insl
push
test
sub
imul
imul
mov
bound
rcrb
mov
mov
imul
movsl
fwait
shlb
adc
pop
iret
xor
xchg
popf
dec
lahf
repnz
cs
mov
sub
mov
jge
addr16
cmpsl
test
sbb
daa
mov
cmp
mov
sarl
jle
iret
das
clc
outsb
movl
sbb
inc
xchg
add
add
mov
pop
sub
imul
fdivp
stc
xlat
ss
cmpsb
sbb
movsb
aad
sub
ja
fwait
mov
js
jmp
add
add
imul
pop
lods
jp
ja
mov
ss
xchg
imul
lret
sub
xchg
aaa
push
add
adc
xchg
stos
ret
ljmp
mov
shrb
push
adc
and
addr16
xlat
cmc
lock
dec
scas
pop
mov
std
cmpl
js
add
imul
xchg
inc
mov
push
pop
shll
cld
addr16
pop
push
nop
inc
jo
rorl
mov
cmpsb
ds
in
jb
mov
shr
mov
cld
or
leave
ret
stc
jae
adc
lcall
ret
loopne
push
test
cmpsl
pushf
jge
cmpsl
mov
sub
mov
dec
add
cmp
ds
or
sub
sarb
sbbb
mov
mov
pop
cmpsb
xchg
aaa
xchg
sbb
lds
xchg
jp
mov
add
mov
pop
push
das
or
dec
inc
lods
into
pop
xchg
jmp
xor
sbb
pop
cmp
das
imul
inc
add
jo
cmpsb
test
cmp
outsl
in
stc
add
sub
movsb
jb
mov
or
aaa
hlt
test
cmp
pop
sarl
push
fcmovu
add
pop
xor
mov
adc
repz
jo
sbb
xor
jmp
in
xor
jae
dec
mov
sub
push
jno
iret
shrl
cmovb
mov
es
in
jne
imul
inc
inc
pop
mov
cwtl
xor
push
jbe
stos
pop
rcrb
mov
clc
cmc
clc
jno
addl
shrb
xchg
or
add
in
imul
adc
popf
sub
xchg
xchg
jno
sub
mov
and
cmp
mov
jge
dec
ror
xor
dec
mov
repz
das
mov
push
mov
rorb
or
pop
test
push
or
fsubl
xchg
adc
add
ss
jne
jb
fwait
adc
jmp
push
fldcw
in
inc
fcoms
inc
mov
insb
or
push
push
pop
mov
pop
xlat
scas
or
mov
movsb
aad
fwait
xchg
adc
je
xor
mov
imulb
xor
mov
shl
ljmp
ffree
out
std
adc
fld1
pop
cmp
divb
and
arpl
push
or
cmpsl
sub
loope
ss
mov
sti
popf
pop
push
adc
lea
jmp
nop
sbb
add
jbe
mov
dec
mov
nop
and
jmp
jae
fistps
xchg
pushf
xor
ret
cltd
scas
push
adc
ljmp
lea
lcall
fmuls
pop
push
push
and
int3
dec
jle,pt
push
mov
in
cmp
sbb
je
loopne
mov
fwait
add
loop,pt
jmp
es
lret
add
pop
sub
push
outsl
sbb
and
mov
cld
rcll
mov
lods
inc
je
out
jne
clc
pop
cs
push
and
cli
cmp
pop
dec
sarl
shll
cmp
xchg
jnp
popa
jg
test
clc
dec
aaa
mov
scas
lods
rorb
pop
cmpsb
dec
pop
adc
inc
scas
and
lods
xchg
gs
lock
cmpsb
adc
cmp
push
jle
cmp
adc
js
fiadds
les
ja
push
stos
testb
cmp
sub
add
dec
aas
imul
xor
push
sbb
pop
jo
inc
out
mov
setp
aas
inc
jge
dec
outsb
jne
or
nop
jmp
fnsave
addl
xchg
sub
adc
jg
jno,pt
frstor
adc
mov
aas
insl
or
mov
sbb
incl
icebp
add
fdivs
shl
sbb
nop
sahf
mov
loope
dec
addr16
sub
iret
push
xor
and
aas
mov
pop
sbb
imul
shlb
cmpsl
repnz
push
sahf
hlt
scas
rorb
jbe
lahf
out
lds
fmuls
adc
push
fidivrl
mov
pushf
add
stos
jnp
pop
pop
cld
mov
xor
mov
in
pop
bound
push
xchg
out
movsb
in
notl
push
testl
loopne
adc
or
call
addr16
aam
pop
push
icebp
int3
fbstp
pop
mov
pop
push
sub
lds
sbb
arpl
jo
mov
pop
hlt
js
lahf
pusha
dec
test
pop
inc
aam
lret
pop
orb
cmp
mov
dec
pop
xchg
or
pop
les
jge
push
pop
insb
inc
mov
test
hlt
cmp
imul
xchg
xor
je
mov
clc
push
inc
xor
in
lds
jo
fwait
cmp
test
fwait
xchg
adc
adc
rcll
jne
les
mov
or
js
add
jns
push
out
sub
sub
or
add
fistpll
pop
loop
addr16
pushf
out
sbb
xchg
dec
xchg
pop
or
test
pop
mov
xchg
or
fistl
fisttps
and
mov
mov
dec
jge
add
adc
mov
das
pop
testb
dec
outsb
insl
inc
pop
cli
loop
dec
out
les
loopne
cwtl
pop
sbb
jmp
or
cmpl
xchg
jne
dec
das
cmp
xchg
pop
and
jecxz
cld
jmp
jge
mov
xor
xchg
jne
mov
jne
inc
cmpsl
shll
jmp
adc
push
test
test
xorl
clc
mov
sub
pushf
adc
cmp
cmp
push
dec
xchg
outsl
sub
roll
mov
dec
mov
negb
decb
jge
add
sub
jnp
mov
sub
cs
cmp
ret
sub
daa
push
mov
sub
fistpl
repnz
push
mov
mov
lcall
jg
aad
std
loopne
scas
add
inc
pop
fidivs
mov
mov
sub
cmp
or
stos
xorb
add
in
xchg
adc
out
lret
and
xchg
paddusb
jno
sbb
ljmp
testb
mov
cli
out
scas
aad
lcall
insl
mov
add
lock
sbb
xor
fprem1
dec
mov
jo
pop
xor
fimull
repnz
sbb
lock
pop
or
loope
lea
dec
es
ja
cwtl
daa
or
add
and
sbb
ret
sub
out
or
cltd
xchg
jecxz
lock
mov
insb
lods
pushf
mov
jg
loope
sbb
daa
repz
nop
mov
cmp
adc
push
sbb
xchg
push
je
sub
pop
sbb
daa
cmpsl
fstps
add
testb
daa
inc
push
mov
add
pop
jno
je
fists
and
mov
popf
ss
inc
js
jnp
push
mov
aaa
pop
cs
pop
sub
daa
jo
out
push
mov
in
pop
mov
xor
jl
in
dec
jle
cmpsl
movsb
pop
add
shr
push
pop
push
out
cmp
mov
xchg
cmc
aad
jbe
mov
pop
pop
insl
cmp
add
add
xlat
fidivl
sub
es
xor
lcall
js
sub
mov
mov
mov
or
adc
adc
mov
xchg
jmp
ret
dec
sti
in
adc
mov
insl
push
sbb
adc
sarb
outsb
xchg
scas
jns
cmp
jns
sub
push
cmpb
sbb
mov
jle
mov
push
call
outsl
lea
int3
pop
rcr
sub
push
push
daa
out
dec
div
jae
rorl
int
mov
out
mov
xchg
dec
pop
push
add
test
xchg
mov
pop
sbb
mul
loopne
arpl
into
jb
ds
lods
rep
xchg
test
out
lret
or
negb
mov
test
cwtl
sub
xchg
or
mov
mov
movb
fcomps
stos
ljmp
fiadds
stos
pop
in
fildl
jb
psubq
inc
iret
mov
sub
les
jmp
lret
add
xlat
xlat
nop
ljmp
mov
xor
push
fsubrs
mov
ficoml
cs
imul
test
add
daa
outsb
in
mov
mov
dec
aas
pop
or
pop
stos
dec
lret
rcr
ss
mov
pop
loope
lea
dec
pop
xchg
mov
pop
movsb
pop
cmpsb
subb
pop
dec
and
adc
dec
dec
dec
cmp
aad
push
pop
lahf
or
enter
arpl
mov
loop
xor
jecxz
bound
mov
adc
sahf
out
shrb
push
and
fs
dec
xlat
imul
pop
mov
pop
out
inc
dec
insl
cmpsb
mov
jl
mov
call
pop
lods
ss
adc
filds
fistpl
push
xor
xchg
stos
out
xchg
lods
inc
insl
sub
pop
pop
mov
movsl
dec
push
inc
notl
pop
sbbb
sub
notl
pop
lea
adc
ljmp
xor
in
fimuls
in
cmp
fsubl
mov
mov
in
lods
dec
leave
lods
cwtl
stc
xlat
xor
sarb
pop
dec
dec
lcall
aad
testl
and
movsl
adc
inc
sub
push
inc
cmp
mov
xor
dec
sub
cmp
repz
aas
jae
inc
sbb
jae
insl
mov
outsb
lds
or
inc
loope
aad
xlat
jp
or
cltd
or
mov
mov
mov
in
je
cmp
mov
jge
inc
sbb
jb
out
ficompl
pop
jnp
stc
cli
dec
lret
fstpt
pop
push
jno
mov
push
es
sahf
cmpb
push
fcomp
aad
jno
mov
pop
xchg
call
fmull
aas
push
shlb
mov
lcall
and
hlt
and
cmp
roll
les
cld
adc
aaa
mov
lahf
gs
stos
jecxz
gs
and
daa
lret
push
jg
fildll
pop
outsb
inc
loopne
into
adc
lock
push
subl
xchg
loop
xor
lahf
aas
dec
frstor
cmpsb
sub
lea
ds
add
sbb
insb
mov
and
shlb
inc
aad
in
xchg
cmp
pop
repz
cmpsl
dec
jbe
push
ss
std
lea
roll
mov
inc
mov
stos
cmp
cmp
jbe
and
pushl
jp
inc
jae
in
or
movsb
inc
xor
or
jecxz
mov
push
xor
cmp
pop
push
jbe,pn
call
xor
add
adc
mov
or
jmp
or
jecxz
test
mov
pushl
or
scas
daa
mov
dec
dec
rorl
int
test
xor
mov
adcl
adc
jp
jae
inc
jle
mov
mov
cmp
ficoms
sbb
sbb
std
xlat
dec
push
lds
mov
xchg
aam
cltd
dec
loop
sbb
call
or
mov
mov
insl
int
fmul
xchg
inc
fisubrs
insb
je
mov
or
fstpt
sbb
mov
add
cmpsl
add
pop
mov
popa
dec
mov
cs
ljmp
std
adc
jb
add
ret
mov
jecxz
jnp
fwait
or
xchg
xchg
dec
and
cwtl
imul
push
bound
pop
xchg
nop
fcmovne
pop
sarl
xor
cmp
xchg
mov
cwtl
aad
aaa
push
popa
mov
ss
into
outsb
aas
jmp
xor
sub
ret
or
mov
mov
pop
xchg
push
in
sub
bound
jp
sbb
mov
fs
jge
sub
fisttps
nop
hlt
pop
gs
mov
inc
jb
clc
pop
lods
and
push
pop
inc
jnp
dec
mov
adc
test
inc
cld
sbb
pop
ljmp
mov
mov
dec
leave
icebp
es
xor
loopne
add
out
fcmovu
movsb
les
stc
cmp
stos
xchg
inc
test
sbb
jl
add
das
and
mov
push
loope
jecxz
xor
mov
push
das
inc
or
mov
ret
cs
movsl
pop
or
jb
jmp
sbbb
xor
divl
cmpsb
cmp
iret
mov
xchg
jmp
mov
mov
stos
and
bound
jl
call
mov
push
scas
add
loop
into
int
arpl
test
mov
lock
aam
xor
mov
shlb
cmp
cmp
movsl
cmp
or
cmp
repz
xor
fildll
xchg
dec
shll
repz
dec
cmpsb
iret
xlat
aaa
jns
cmp
cmp
cwtl
in
sbb
sub
adc
cmp
test
std
add
sub
jp
sbb
sbb
jae
enter
pop
add
sub
call
fwait
addb
xchg
mov
mov
cmpsl
and
add
loopne
lretw
lds
or
sub
pop
inc
push
add
hlt
sahf
daa
adc
jbe
adc
push
xor
btsl
sti
xchg
cmp
mov
mov
jl
repz
in
jne
cld
cmp
push
or
lcall
dec
popf
stc
xlat
shlb
popa
mov
and
std
and
push
xchg
lea
xchg
dec
push
stos
fiadds
shlb
gs
add
jge
push
lods
rcll
out
cs
cli
xchg
or
push
sbb
jge
int3
xchg
mov
icebp
mov
add
push
jo
stos
ficoml
test
enter
test
xchg
sub
mov
insl
sbb
pop
shrl
lea
push
aam
push
inc
cmp
js
loopne
xor
xchg
dec
loope
rorl
lea
pop
ficompl
loopne
or
std
sbb
mov
clc
ljmp
mov
test
push
fwait
pop
or
test
lret
xlat
mov
jl
pop
push
cld
adc
jns
ret
inc
jle
xchg
add
mov
cmp
jl
or
ds
sbb
cmpl
dec
outsb
mov
ds
mov
add
divb
cmp
loope
loopne
rorb
clc
mov
repnz
jbe
icebp
push
loopne
pop
repz
aaa
xor
cmpsl
sarl
add
inc
jmp
mov
pop
test
mov
jno
push
push
dec
or
jmp
xchg
sbb
xchg
xchg
push
or
jb
int3
mov
add
fcmovne
repnz
push
fwait
popf
xor
into
mov
sub
push
popf
push
pop
adc
push
xor
inc
push
arpl
fstl
loop
cmp
out
push
icebp
enter
sbb
loop
lcall
test
pop
sbb
xlat
aaa
hlt
inc
xchg
add
fcmovu
xor
insb
sub
sbb
xorl
int3
cmpsb
dec
into
into
ret
popf
xchg
enter
dec
jo
lret
adc
imul
pushf
pop
inc
xchg
loopne
clc
jo
movl
loopne
icebp
xchg
loop
mov
ficomps
sub
adc
mov
mov
repnz
aad
xchg
cmp
imul
mov
xor
mov
fcmovnb
outsl
push
mov
aas
push
adc
sub
outsl
cmpsl
adc
pushf
adcl
inc
or
movsl
call
stos
push
fcomps
repnz
adc
and
daa
push
cmp
dec
push
mov
push
lods
and
ret
lret
aas
push
inc
inc
xchg
pop
and
xor
arpl
loopne
jnp
fstp
sub
xor
add
cmp
pop
dec
imul
add
fmuls
jbe
lcall
frstor
jp
pop
fistl
jo
fsub
pop
pop
fdivrs
ret
fistpll
pop
imul
pop
ds
es
insl
sub
adc
testb
mov
ljmp
xchg
xor
sbbl
sbb
xchg
sub
loop
cmp
sti
mov
aam
mov
adc
and
push
pop
jl
mov
out
bound
adc
enter
sti
sub
ss
pop
aam
xchg
test
je
negl
xchg
cmp
pop
sub
aas
pusha
sub
aam
jecxz
cmp
push
out
pop
or
adc
adc
insb
clc
scas
mov
jno
jne
cli
rorb
subl
icebp
addr16
hlt
lret
fldcw
and
add
out
ds
jg
jno,pt
scas
xchg
jb
shl
xchg
ret
pop
xchg
mov
xlat
test
or
ljmp
push
js
adc
jmp
or
incb
inc
and
aad
cmpsl
test
xchg
pop
or
mov
xchg
push
aaa
icebp
push
cmp
xchg
loope
xor
int
fs
inc
add
mov
xchg
jnp
lret
dec
cmpsb
sbb
sbb
jb
dec
sahf
test
mov
inc
pop
mov
repz
in
push
jg
pushf
xchg
xlat
sti
mov
sbb
mov
cltd
rcll
push
jbe
pop
mov
and
jmp
fdivs
dec
ffree
mov
jl
sbb
sbb
push
movsb
popf
pop
shll
adc
imulb
in
cld
lock
loop
test
jmp
adc
cltd
and
fwait
test
mov
dec
lahf
add
xchg
pop
js
cld
push
call
push
in
cmp
cmp
mov
out
enter
sbb
stos
add
sti
addb
ret
data16
ret
jp
push
aas
testb
repnz
sbbb
mov
or
test
push
std
test
imul
loope
test
adc
loop
lret
sahf
in
adc
sahf
xlat
xchg
movsl
addl
mov
ret
sub
pop
mov
pop
inc
loopne
lods
fs
adc
add
out
mov
sub
lods
out
std
dec
test
stos
or
push
inc
sbb
out
aam
lcall
das
inc
test
ret
xor
mov
jnp
or
pusha
jnp
insb
jg
out
add
orb
out
mov
fiaddl
mov
mov
dec
push
in
shll
adc
js
mov
jmp
aad
mov
mov
dec
subb
mov
jb
xor
dec
sbb
in
in
jbe
pop
pushf
sbb
flds
cli
pop
aad
adc
cmp
push
xor
pop
es
sahf
out
aam
xchg
loopne
ljmp
ret
mov
mov
jne
xchg
pop
sub
ss
fs
push
pop
jg
aam
lods
in
lea
out
mov
jmp
lea
sub
sbb
adc
rol
xor
enter
in
push
pop
inc
in
and
testb
dec
int3
push
cltd
sub
nop
loope
repz
adc
int
dec
inc
xor
js
aam
idivb
xor
push
mov
clc
rcrb
mov
push
jl
movsl
loope
push
mov
xchg
lcall
fldt
scas
sbb
xor
adc
das
andl
xchg
repnz
mov
xor
repz
mov
sub
push
pop
jns
jle
fadds
sti
fistps
xchg
aas
mov
nop
inc
out
jne
xor
shlb
mov
data16
pushf
or
repz
les
jbe
sbb
mul
stc
cltd
test
ss
jge
pop
mov
icebp
int
scas
xchg
jge
mov
dec
adc
fists
jno
movsb
and
jp
pop
and
test
lret
mov
hlt
cmp
pop
gs
divb
jns
cli
insb
or
xchg
jne
sbb
cmp
xor
and
push
push
lods
sbb
insb
gs
xchg
xchg
jg
ret
sbb
jle
insb
xchg
jecxz
push
add
jnp
outsb
in
add
xor
or
dec
push
lds
mov
ret
out
pop
push
lahf
fs
cmpsl
dec
and
aaa
lret
add
in
mov
das
mov
mov
mov
arpl
outsl
ficompl
bound
pop
cmp
out
adc
mov
loope
mov
add
adc
cmp
lods
pop
sbb
aas
or
dec
loopne
ret
add
mov
inc
test
js
xchg
jnp
add
jl
jmp
jnp
pusha
int
in
inc
rclb
and
imul
aad
pop
mov
cmp
or
cmp
call
repz
and
pop
popa
rcrb
push
jge
test
cmp
rorb
xchg
inc
call
dec
loopne
sub
in
idivb
cmp
push
gs
stc
cmpsl
push
lds
mov
lods
in
mov
adc
loopne
jg
lods
pop
cmp
fbld
dec
xor
xchg
or
xor
xchg
pop
xor
decb
repnz
jecxz
shrb
popa
add
call
adc
dec
cmc
sbb
outsb
mov
inc
ret
pop
jmp
shrb
jecxz
ret
and
pop
xchg
mov
sbb
sti
in
inc
adc
ljmp
xor
mov
insl
push
test
mov
lret
lret
repnz
mov
adc
movsl
mov
lock
sub
and
call
pop
or
jmp
loopne
push
mov
fucom
gs
in
mov
scas
jae
sbb
jnp
test
sbb
fstpl
stc
push
sti
rorl
mov
xchg
mov
or
push
or
in
xchg
jb
cmpl
addl
movl
sbb
cltd
popa
movsl
cmc
push
lock
rorb
fnstcw
mov
fiaddl
stos
mov
sbbl
enter
cltd
filds
dec
dec
sbb
xor
insl
in
lock
cmp
mov
stos
rorl
mov
pop
push
jmp
out
mov
shrl
popf
push
add
adc
imul
shlb
push
bound
add
mov
cmpsb
xor
pop
xor
pushf
add
and
dec
mov
les
xor
stc
iret
fimull
inc
cld
pop
sbb
outsl
dec
add
mov
scas
push
pop
pop
add
lods
das
mov
lods
arpl
jb
into
jge
in
inc
pushf
pop
test
lret
lret
xchg
pop
sti
mov
xor
movsl
push
int
es
add
adc
shlb
jne
icebp
dec
stos
fs
cmpb
mov
pop
into
and
sbb
pop
xlat
push
xchg
jmp
sub
pop
xor
imul
idivb
cwtl
adc
mov
testb
push
mov
mov
xchg
mov
pop
test
mov
and
sub
je
cmp
xor
sub
rcr
push
loopne
cmp
or
inc
ss
cmc
pop
loop,pt
add
add
jnp
out
mov
inc
das
mov
movl
stc
fisttpll
scas
adc
fisubrs
push
mov
mov
cmp
hlt
fcoms
push
push
adc
test
int3
lods
jmp
fs
daa
repnz
imul
fs
out
cmp
repnz
push
cltd
jo
xchg
js
and
jl
adc
push
imul
ja
nop
sarb
xor
movsb
inc
mov
ret
mov
hlt
dec
roll
sub
mov
cwtl
es
add
push
nop
test
outsb
cmc
or
adc
or
mov
out
xor
frstor
loop
mov
xor
mov
cmpsb
sub
jp
ds
in
pop
data16
fcom
addr16
jp
or
sub
sub
into
rcrl
icebp
jp
jle
jl
fldl
pop
sub
addr16
icebp
or
test
adc
sub
jp
nop
sbb
cld
dec
mov
jg
pop
jns
and
jns
test
push
test
push
jb
mov
xchg
in
xchg
sub
je
in
jne
adc
xlat
outsb
pop
jge
repnz
lods
imul
leave
jbe
scas
shlb
add
jl
push
leave
outsl
ss
pop
mov
inc
xchg
adc
int
xlat
popf
hlt
jne
fstl
mov
cmp
jne
push
jmp
inc
sbb
xchg
aaa
jne
testb
cmp
fwait
outsl
rorb
jge
idivb
lret
add
adc
arpl
add
sbb
jo
cs
out
flds
insl
sub
fwait
sbb
in
or
mov
and
and
pusha
pushf
add
loopne
subb
mov
scas
fldl
ljmp
and
cmp
aam
mov
push
push
aam
xchg
jno
cmc
dec
cwtl
das
in
mov
and
test
imul
dec
out
adc
scas
cmp
movsb
xchg
jg
sahf
jo
sbb
push
iret
push
cltd
lret
add
xor
sub
jno
shl
pop
push
movups
fyl2xp1
sbbb
jl
fcmove
push
cli
adc
jo
stos
into
dec
ljmp
cmpsl
push
push
dec
mov
inc
push
and
pop
mov
mov
shrb
sbb
mov
and
cld
iret
xor
inc
jge
jmp
in
mov
jae
jge
scas
das
imul
inc
es
loope
mov
lea
test
test
xor
out
scas
cmp
cmp
scas
loopne
pop
or
test
sbb
push
lds
out
push
dec
add
outsb
push
lahf
xchg
jp
pop
lahf
inc
iret
addr16
out
and
sub
mov
dec
inc
mov
xchg
push
jno
aas
xor
mov
pop
add
fwait
out
adc
xchg
movsl
push
fisubl
mov
rcrb
jns
fildl
jge
inc
insl
mov
popa
add
sub
ficoml
adc
lret
pop
xor
xor
push
je
sbb
push
shr
adc
ljmp
xchg
sub
out
fucomi
and
push
push
int3
jbe
push
or
flds
aad
cltd
xchg
push
inc
lahf
xor
repnz
xchg
imul
pop
adc
push
and
cltd
data16
mov
lock
push
sti
imul
cmp
adc
pop
mov
cli
sahf
dec
mov
cmp
ljmp
add
inc
fs
xor
dec
mov
jp
xchg
cmp
mov
fstpl
jecxz
mov
pop
mov
push
inc
in
aam
dec
xchg
loope
cmp
mov
add
mov
cmpsl
jnp
mov
inc
push
movsl
jno
push
dec
jge
mov
mov
mov
jbe
sbb
inc
mov
lret
lret
mov
jl
negb
jno
push
out
push
cmp
sub
rorb
cld
aas
or
xchg
andl
enter
ljmp
mov
cli
jo
mov
xor
xchg
call
jns
dec
pop
push
mov
sti
push
in
fwait
jne
xchg
mov
and
inc
mov
rol
mov
push
sub
cmpl
cltd
or
jecxz
and
cmp
push
aaa
jae
dec
popa
or
out
mov
sub
dec
inc
dec
add
stos
gs
movsl
push
movsl
push
imul
cld
jg
arpl
out
sub
push
push
fnstenvs
xor
push
dec
pop
mov
xor
dec
xchg
add
xchg
icebp
xchg
mov
ss
and
cs
push
mov
mov
cmpsb
cmp
sbb
dec
sbb
loope
sub
sahf
adcb
inc
out
xchg
inc
fwait
pop
fs
jle
movsl
jecxz
dec
sbb
lcall
imul
into
or
add
nop
cmpsb
lcall
mov
dec
pop
in
hlt
rorb
mov
mov
jl
loopne
fcom
push
xor
cld
int
xchg
sahf
addr16
sub
inc
cltd
push
sbb
fnstsw
popa
rcll
lret
cmp
out
mov
incl
mov
dec
clc
pop
enter
sbb
cmpsb
and
add
movsl
inc
and
dec
push
sarl
loopne
sub
ds
aam
fisubrs
adc
mov
mov
addl
call
hlt
sub
mov
pop
cmp
cmp
pextrw
and
imulb
aam
cmp
out
mov
pop
push
sbb
in
addl
lret
sbb
fsub
outsl
pop
out
cmc
fdivrp
fs
pop
jp
ds
sbb
hlt
inc
dec
or
mov
and
lods
and
mov
gs
fldt
mov
imul
dec
aaa
je
repnz
sub
enter
sbb
jmp
pop
sbb
stos
cmp
divl
hlt
aaa
sbb
je
stc
in
movb
lds
push
and
xor
aas
inc
mov
ljmp
ja
les
push
out
in
fmulp
imul
mov
adc
pushf
add
or
int
xchg
mov
and
dec
out
jecxz
popf
sarb
mov
mov
pop
or
and
imulb
inc
cld
mov
jbe
add
sti
hlt
sbb
clc
xchg
sub
fmull
jne
add
cwtl
mov
mov
and
popa
push
sti
scas
xor
pop
xchg
fsubl
xlat
pop
movsl
popf
mov
orb
movsl
jmp
dec
jmp
adc
fs
sarb
inc
mov
jns
or
or
out
pop
sbbl
pop
test
add
cwtl
dec
stos
push
mov
inc
or
aad
outsl
jo
pop
shrb
inc
xor
call
stc
mov
jb
sti
adc
andps
mov
xchg
push
icebp
xor
in
mov
push
stos
lea
insl
pop
popa
dec
in
adc
xor
in
pop
fnstenv
fucomi
mov
push
das
pusha
js
insb
mov
sbb
orb
in
idivb
dec
movsl
mov
mov
push
cmpsb
sub
fsubr
adc
pop
mov
shll
out
push
cld
mov
stos
movb
pop
pop
pop
bound
xor
dec
pusha
add
dec
sbb
movsl
and
or
jbe
adc
outsl
rcl
fldenv
mov
sbb
cmp
mov
pop
fcmovu
push
jl
push
pop
ret
nop
mov
rcll
enter
mov
mov
lds
fcoms
jge
cmp
xor
add
mov
jns
xor
cld
add
fwait
fwait
lahf
add
mov
pop
cmp
addr16
xchg
push
inc
cli
fdivrs
xchg
bound
xor
sbb
adc
imul
leave
divb
xor
movsb
cwtl
bound
test
xor
popf
xlat
add
cmp
lods
cmpb
repz
inc
push
out
jg
stc
sbb
add
aaa
lea
pusha
movsb
and
lahf
ss
dec
jb
cmp
lock
call
mov
fidivrl
sbb
pushf
jecxz
repz
push
inc
je
mov
push
rcrb
in
out
mov
out
fsts
dec
call
mov
add
mov
sub
je
pusha
mov
mov
mov
fs
outsb
mov
inc
icebp
dec
nop
stos
sub
jnp
xchg
jne
cmp
movsl
dec
xorl
inc
sub
push
adc
adc
mov
add
icebp
es
jb
add
dec
imul
adc
mov
push
sbb
jno
dec
adc
lds
dec
imul
push
data16
xchg
adc
movsl
xchg
lret
rol
clc
into
ret
or
mov
adc
push
stos
xchg
push
mov
fdivl
addr16
jge
xchg
daa
xor
xchg
clc
jle
cmpsb
or
mov
fistl
ss
jmp
add
push
aad
xor
cmp
dec
fs
test
icebp
maxps
das
add
loop
scas
insl
test
sub
in
in
mov
adc
mov
sti
outsl
xchg
xchg
mov
push
in
lds
inc
mov
sbb
cltd
and
sti
popa
dec
inc
sbb
jne
sbb
std
and
pop
lret
xchg
jp
les
inc
fisttps
fs
dec
adc
mov
mov
sbb
aam
pavgw
jnp
sbb
cld
rcll
out
insl
add
inc
cltd
dec
and
pusha
fnsave
addl
fcmove
aad
mov
and
mov
cwtl
xor
sub
mov
mov
test
push
lret
mov
mov
lret
orb
inc
mov
ret
mov
sbb
in
cmp
mov
cmc
stc
jmp
mov
jne
jb
lret
rcl
mov
cwtl
dec
test
ds
mov
sahf
movsl
imul
ffreep
lret
mov
push
ljmp
pop
dec
mov
lahf
dec
mov
cmc
jne
sub
xor
sub
sarl
jp
cli
mov
shll
jb
xor
mov
add
fidivl
testb
jge
lea
add
cld
mov
adc
mov
mov
lcall
loope
clc
call
push
mov
pusha
dec
sarb
jbe
push
mov
lock
mull
paddq
es
pop
jne
xor
in
pop
fcoml
cmpsl
mul
or
fsubrl
out
xchg
mov
iret
fildll
push
fsubrl
jl
push
jl
mov
mov
pop
jp
pop
pop
inc
pop
data16
xor
xor
or
jbe
or
jae
call
mov
xor
ficoml
xor
cltd
xor
lds
and
xor
push
stos
nop
jecxz
and
imul
iret
and
out
adc
pushf
add
push
fwait
shrb
inc
xor
fwait
add
int3
loope
gs
imul
lea
popa
or
pop
pop
imul
mov
or
pop
mov
push
iret
jbe
dec
dec
cwtl
repnz
mov
mov
pop
pushf
adc
int3
les
adc
dec
shlb
test
lcall
lods
rcrb
imul
or
and
pop
mov
ret
pop
mov
mov
push
int3
movsl
adc
sti
mov
lods
add
cmp
scas
ds
int3
pop
sbb
lods
hlt
addr16
push
mov
mov
jae
sti
mov
mov
adc
and
dec
orb
sub
divl
mov
xchg
sub
leave
imul
int
jb
in
data16
pop
lock
xchg
jl
and
dec
ss
push
loopne
pushf
push
fs
cmpsb
mov
rcrb
xchg
pop
pop
sbb
in
shll
hlt
sbb
in
inc
add
xchg
in
inc
or
fcompl
xchg
inc
out
lods
pop
daa
sbb
hlt
sub
adc
mov
dec
xor
loop
fstl
test
bound
fstp
ficoms
ret
js
push
xlat
and
push
in
dec
fstps
jg
cltd
or
push
popl
mov
mov
lret
and
pop
or
jb
rsm
fnstenv
mov
mov
aas
mov
ljmp
mov
mov
xor
jne
repnz
add
add
sub
mov
mov
pop
jb
pop
imul
rorl
movsb
fisubrs
dec
mov
add
mov
mov
sbb
push
lret
pop
dec
xchg
sbb
cwtl
mov
inc
pop
rorb
dec
xchg
push
mov
push
and
enter
push
int3
adc
ret
pusha
sahf
movsl
xor
cs
jp
lds
mov
cli
xchg
out
js
mov
ret
mov
loop
jmp
cs
hlt
inc
sub
out
xchg
cli
push
jae
rclb
movsl
sub
push
xchg
push
and
or
mov
ljmp
and
outsb
dec
inc
jnp
push
cmpl
push
xchg
dec
push
sarl
xor
scas
lret
ret
dec
adcb
cmc
jecxz
mov
mov
imulb
andl
cmp
gs
sarb
sbb
jno
push
mov
scas
dec
xchg
mov
outsb
fistpll
cmp
push
cmp
decl
mov
or
outsb
or
dec
ja
insb
cld
int3
jge
nop
sub
aam
push
mov
sbb
or
adc
fwait
int3
pop
push
aaa
xchg
std
fdivrl
or
rcrl
pop
pop
scas
cmp
jno
fwait
mov
in
sub
dec
popa
xchg
jmp
sub
testl
jnp
insl
aad
out
pop
mov
js
sub
movsb
popa
dec
push
pop
movsl
ss
cmp
dec
inc
les
test
push
in
sti
and
add
aam
loopne
pop
cmp
fwait
sub
int3
dec
dec
scas
or
pushf
rorl
pop
aam
pop
lds
mov
ljmp
push
insb
mov
test
arpl
dec
sahf
mov
stos
add
cmc
xchg
cmp
sub
or
jbe
adc
sbb
cmp
lret
inc
repnz
out
test
mov
mov
or
pop
push
adc
rclb
sbb
xchg
dec
and
or
sbbb
and
jle
dec
incb
lds
dec
cmp
mov
in
lea
pop
aam
and
std
adc
pop
xor
jno
imul
sbb
rcll
ret
dec
cmp
push
add
or
iret
pop
and
nop
ja
dec
cwtl
mov
loopne
push
popa
loop
bound
inc
loop
cmp
add
movsl
ds
movlps
pop
push
imul
xchg
pushf
xchg
xlat
push
ja
xchg
mov
aaa
cmp
repz
xor
pop
lcall
aas
push
pop
mov
mov
inc
cmc
jle
sub
in
test
pop
fildl
jmp
push
outsb
mov
imul
mov
std
mov
and
in
fwait
push
rorb
movsl
xorl
mov
out
scas
scas
icebp
repnz
or
sbb
bound
adc
out
sbb
adc
jmp
mov
xor
jns
dec
cmp
out
or
sahf
inc
and
into
enter
cmp
mov
pop
push
inc
xlat
mov
sti
loop
and
mov
stos
addr16
xor
push
cmpl
fstpl
int3
leave
mull
mov
clc
add
mov
add
adc
testb
loop
repnz
sub
push
outsl
sbb
imull
sarb
shr
iret
add
aad
jns
mov
mov
and
aas
out
loop
pop
mov
test
fwait
inc
xor
mov
adc
in
sub
inc
inc
jne
jae
icebp
push
push
imul
filds
add
int3
jmp
dec
cmp
push
xor
or
aad
rcl
xchg
mov
or
pop
lds
out
sbb
push
icebp
add
push
test
fwait
mov
cltd
bound
sub
addr16
pop
les
mov
mov
xlat
mov
adc
or
pop
mov
hlt
mov
daa
mov
test
das
adc
iret
fisubl
int
repz
dec
cmpsl
fldcw
mov
cmp
scas
mov
or
jge
dec
push
cmp
mov
mov
mov
pusha
addr16
sub
negl
push
cltd
imul
xchg
ds
sub
popa
inc
insb
inc
repnz
jg
inc
push
xor
ret
outsb
in
or
push
icebp
cmpsl
sub
push
mov
mov
mov
push
loopne
xchg
dec
inc
sub
mov
pop
xchg
push
dec
push
and
sub
mov
adc
sub
or
sub
jno
xchg
mov
aad
and
std
sbb
in
fistpl
xchg
enter
mov
mov
sbb
sahf
dec
dec
pop
xchg
push
push
push
and
push
add
je
xchg
cmp
dec
inc
or
ja
and
cmpsb
xchg
push
inc
shrd
sub
push
addb
jae
out
es
xchg
loope
pop
cmp
mov
pop
jae
xchg
mov
dec
push
xlat
out
cmp
mov
pushf
test
popl
push
mov
shr
repnz
es
roll
fmull
stc
test
push
imul
add
cmp
sbb
hlt
xor
stc
push
leave
inc
pop
mov
call
inc
add
cmp
sar
sbb
movsl
outsb
inc
cli
xor
and
je
ja
fld
sbb
pop
in
mov
xchg
inc
mov
repz
cmp
inc
leave
les
call
or
in
outsb
and
ret
jle
push
ficomps
fs
and
out
outsb
das
popf
div
add
shll
xchg
out
stos
insb
push
fnstcw
out
movsl
les
pop
xchg
mov
sub
adc
adc
pop
insl
add
and
xchg
aam
pop
mov
mov
jbe
jmp
jb
setno
cmp
push
sub
xchg
stos
adc
push
enter
cmp
test
sub
and
aaa
sahf
mov
cmpsb
push
js
outsb
lds
lock
movb
push
add
sahf
pop
jecxz
mov
dec
mov
xchg
in
lods
ret
inc
das
fisubs
imul
sub
cmp
ret
xchg
test
dec
das
out
xchg
jp
or
inc
cmp
cmp
and
inc
jns
sti
cmp
lahf
cmp
int3
dec
jmp
cmp
mov
jmp
adc
mov
push
inc
dec
and
loopne
jae
insb
std
xchg
clc
sarl
das
lods
ja
jnp
sti
xor
sub
ror
imul
and
mov
cmp
out
cmp
dec
out
jmp
ljmp
sbb
fwait
mov
dec
mov
fisttps
repz
sbb
lret
dec
jbe
adc
hlt
repnz
stos
mov
sbb
inc
pop
push
mov
mov
lds
xor
clc
lahf
push
gs
loopne
mov
insl
movsl
filds
pop
into
inc
xchg
cmpsl
xor
cmp
js
jle
adcl
cmp
movsl
movsl
push
mov
add
push
out
pop
push
out
pusha
dec
adc
push
add
mov
xchg
popf
xlat
xor
push
in
aas
xchg
fsubrl
and
add
in
push
stos
push
pop
xacquire
pop
mov
in
mov
mov
andb
stos
data16
hlt
xchg
test
add
inc
pop
and
jne
repnz
les
push
cwtl
mov
push
push
shll
testl
add
mov
inc
mov
mov
incl
sti
pop
push
sbb
mov
icebp
out
js
mov
pop
outsb
cmpsl
jge
push
inc
popf
xlat
shl
jae
cltd
or
xor
mov
jb
lods
push
xchg
mov
int
scas
pushf
mov
sar
adc
lcall
add
adc
mulb
jl
jae
inc
mov
dec
ja
lahf
fildl
and
sub
jmp
xor
int
pop
in
adc
aas
jle
loopne
in
icebp
leave
pop
shll
or
pusha
mov
mov
and
in
push
in
outsb
pop
movl
out
addl
out
xor
sub
adc
sbb
jns
test
in
fidivl
not
lcall
lret
pop
pop
add
inc
push
lcall
ficompl
rorb
mov
cmp
pop
jno
sub
pop
sbb
jnp
shll
xor
std
xlat
xchg
icebp
sbb
pusha
xchg
lret
mov
fsubs
mov
cmpsl
sub
int
mov
lods
or
mov
mov
pop
mov
sahf
pop
ljmp
xor
pop
sub
ficompl
xor
adc
daa
push
cmc
lret
push
sahf
push
mov
pusha
adc
cmp
dec
aam
in
mov
notb
das
jnp
cmp
sbb
mov
aad
inc
stos
xchg
lods
into
adc
sbb
test
mov
push
cmp
jne
scas
cli
call
mov
jb
nop
outsb
gs
rclb
leave
les
sahf
sti
push
pop
xchg
aad
mov
ja
dec
and
push
repz
fldl
outsl
lret
adc
pop
ror
xor
xchg
das
pop
movsl
mov
cmpsb
mov
pop
movsb
movsb
xor
rol
popf
orb
jle
aad
sub
jae
dec
adc
sbb
dec
lret
inc
pop
pop
daa
pop
cli
cmp
stos
les
add
ja
pop
cmp
adc
jns
sub
or
iret
mov
loop
add
movsb
mov
cmp
add
xchg
xor
cmpsb
push
jnp
add
incb
arpl
add
aaa
sub
ljmp
dec
sub
sub
ljmp
lret
xor
cmp
out
lret
xor
pop
or
or
inc
stos
andb
cmc
xchg
or
cmpsb
inc
adc
pop
dec
mov
pop
lahf
fwait
mov
dec
popa
sub
pushf
xchg
fbstp
xchg
add
outsl
dec
mov
mov
or
sbb
mov
mov
cmp
insl
xorb
aaa
in
sub
mov
mov
in
cmpl
ficoml
stc
dec
and
repnz
pop
cmp
pop
gs
push
jg
xchg
clc
ljmp
rcll
pusha
call
fldt
sbb
dec
popl
std
fwait
jg
xor
add
testl
xor
daa
rolb
sbb
cltd
and
xchg
fcompl
inc
cmc
fstpt
jnp
inc
and
into
pop
mov
dec
in
popf
int3
lret
icebp
jmp
dec
cmp
mov
add
sub
mov
xchg
ds
pop
rol
lea
std
pop
adc
inc
das
xchg
or
jmp
ds
cmc
jnp
leave
aad
adc
sbb
cmp
pop
mov
mov
jmp
mov
stos
popa
push
pop
sbb
aad
arpl
ficoml
rorb
pushl
dec
in
pop
inc
sti
es
mov
adc
jp
adc
fnstsw
inc
fisubrs
pushf
jle
imul
clc
sarl
lahf
pop
jnp
pusha
mov
int
icebp
loopne
xchg
outsb
sub
andb
and
mov
aam
cmp
daa
push
popa
xchg
push
inc
xchg
and
or
mov
push
lcall
ret
rcrl
mov
lcall
xor
sahf
or
mov
ljmp
add
ljmp
cmp
stos
jg
cs
lret
dec
incb
inc
cld
out
cmc
mov
pop
sbb
stos
aaa
out
xchg
lods
add
hlt
sub
xchg
pop
pop
lcall
test
pushf
jge
shl
sub
ds
imul
loop
enter
imul
call
or
inc
clc
add
mov
jmp
popf
and
lcall
jns
sti
inc
repnz
movsb
dec
lods
fists
adc
mov
popf
jp
in
dec
dec
mov
jle
and
mov
sbb
js
cmpsl
sbb
mov
fimuls
add
xor
loope
scas
cmpsl
popa
pop
mov
push
loopne
stc
xchg
pop
loopne
pop
mov
or
popl
loope,pt
cwtl
sub
ror
lcall
mov
or
pusha
mov
cltd
aas
jge
jmp
mov
sbb
xchg
mov
lods
push
push
or
mov
insl
jmp
repnz
mov
cwtl
movsb
adc
scas
push
or
sbb
out
xchg
pop
negb
clc
sub
mov
cs
sub
scas
daa
and
fwait
jp
aam
adc
push
imul
adc
mov
ficoml
pop
pop
js
mov
andb
adcb
ljmp
cltd
inc
enter
in
decl
cs
add
xchg
shlb
add
mov
les
push
adc
jno
aad
cli
movsl
mov
dec
scas
insb
pusha
out
loop
fsubs
mov
xor
lods
cmp
scas
stos
fs
push
repz
aaa
pop
jmp
push
adc
loope
sti
sub
stos
pushf
pop
lret
bound
cli
cwtl
mov
fstps
aad
jns
dec
lahf
xchg
fwait
out
adc
jbe
cmp
and
popf
adc
adc
cwtl
sbb
jnp
aaa
pop
fs
test
icebp
jno
data16
xchg
fwait
mov
dec
xlat
jne
adc
or
insb
xor
rcl
aaa
out
movsl
aad
test
lret
nop
sbb
mov
push
pop
xchg
sub
and
mov
int3
lods
inc
bound
imul
xor
fstpl
aam
ror
testb
and
push
dec
pop
pushf
sub
mov
int
popl
jns
rcr
aad
inc
sbb
jp
mov
xor
addr16
cmp
cwtl
mov
xor
jp
mov
aad
cmp
adc
mov
and
sbb
icebp
add
jmp
cltd
pop
loope
jne
jne
sbbl
pop
jp
pop
add
icebp
mov
jo
fldcw
sub
mov
inc
sar
into
insl
push
and
dec
jmp
jae
inc
sub
xchg
aas
rclb
dec
jl
fistps
pop
std
cmpsb
out
adc
out
loopne
cmp
ss
in
clc
pop
xchg
lcall
xor
jne
xchg
dec
test
mov
cmc
mov
aaa
cli
jp
jnp
jbe
jle
ret
mov
movsb
je
mov
sub
mov
fidivl
test
into
cmp
fmuls
xchg
fcompl
fdivrs
pop
enter
aam
popf
repz
movsl
xchg
or
pop
mov
lret
cmpsl
xchg
and
mov
lds
test
fnstcw
pushf
adc
stc
addl
mov
push
cmp
pop
in
dec
leave
push
mov
mov
cwtl
cmp
mov
pop
mov
sahf
jne
jmp
pop
xchg
jno
sbb
jp
movsl
xchg
cmpsb
and
rcrb
push
sti
scas
sub
in
push
add
repnz
jle
mov
cmpsb
mov
icebp
push
outsb
out
dec
in
adc
mov
pop
and
andb
mov
adc
pop
mov
inc
push
js
stc
jns
ffree
imul
movsl
pushf
inc
outsl
cmp
add
test
ds
push
jno
or
push
jo
ljmp
push
rcl
mov
sub
xchg
pusha
or
mov
ret
mov
or
jb
push
cwtl
dec
add
mov
dec
ss
negl
loope
aad
sbbl
cmp
add
or
lods
push
add
cmc
and
sbb
add
push
out
sti
jg
push
into
xchg
cmpsb
inc
jne
lock
push
inc
sub
jbe
and
leave
mov
jmp
pop
xchg
out
cmp
fldt
mov
in
imul
scas
mov
jg
outsb
mov
jle
adc
cwtl
cmp
rclb
notb
adc
xor
insl
popf
inc
cmpsb
jmp
xlat
xlat
inc
mov
mov
jae
inc
inc
sti
loop
insb
imul
shll
cmp
pop
or
xchg
insl
out
addr16
dec
sub
dec
into
ja
xchg
lods
lahf
outsb
lret
inc
dec
lods
cmp
xor
test
movsl
adc
dec
push
pushf
jns
pop
lea
cmpsl
fs
inc
pusha
repnz
popa
incb
jno
cmp
jg
sub
inc
fistps
mov
in
rclb
xor
pushl
jb
cs
fiaddl
mulb
in
adcb
mov
cmp
jg
idivl
test
rorl
sub
call
mov
mov
inc
fiaddl
cwtl
mov
jmp
adc
mov
icebp
sbb
icebp
sub
pusha
call
into
subb
movhps
shl
mov
cs
popa
inc
pusha
adcl
push
pop
cmp
data16
push
sbb
push
andb
lea
xchg
sub
jmp
iret
xchg
sbb
xor
cmc
shlb
jle
stos
dec
sbb
jmp
imul
rcrb
das
out
ret
cmp
xor
test
xor
loope
ss
out
and
xor
rcrl
xor
pop
xchg
das
stos
mov
out
or
sahf
stc
arpl
lret
xor
pop
loopne
call
mov
sarl
or
or
ss
int
and
xor
int
push
pop
sub
shl
lret
mov
or
adc
cmp
lods
aaa
cmp
sub
push
sbb
push
out
js
xor
popa
out
aam
adc
or
stos
push
xchg
pusha
loop
dec
xor
pop
xchg
jnp
sbb
add
pushl
cmp
adc
mov
adc
dec
adc
adc
jecxz
mov
add
test
outsb
dec
push
fdecstp
dec
mov
push
jge
insb
push
aaa
js
pop
fs
cli
jne
outsb
cld
ljmp
pop
leave
movsb
iret
mov
cs
sbb
or
jle
sarb
jge
inc
pop
jp
jge
mov
adcb
mov
jnp
cmp
pop
push
inc
jge
sub
push
imul
jg
or
xchg
out
and
lret
inc
adc
pushl
clc
bound
push
rcll
fidivrl
adc
fs
mov
stos
dec
movsb
loope
pop
cli
cmpsb
add
mov
sbbb
cmp
xchg
mov
imul
scas
xchg
gs
mov
hlt
outsl
inc
je
jl
lea
fidivrs
cld
lahf
clc
imul
lods
daa
add
dec
test
cs
loop
push
sarb
inc
jge
fsubrs
stos
pop
test
push
imul
xchg
enter
push
out
test
cmp
stos
or
bound
iret
mov
lock
adc
scas
jp
push
inc
xchg
sbb
inc
cmp
adc
and
lock
outsb
jnp
mov
push
jo
test
add
lsl
aad
push
mov
sti
push
xchg
sbb
sub
jbe
call
scas
outsb
int
call
sbb
cmpps
adc
pop
xor
loop
mov
mov
leave
pop
icebp
sbbb
sbb
cmp
pop
mov
inc
bound
iret
push
test
and
xor
dec
in
dec
ljmp
test
insb
stc
out
repnz
stos
xorl
stos
sysret
shrb
sub
sub
out
xor
and
int
ret
jae
movb
cmp
js
int
add
jbe
daa
pop
shrb
repnz
out
add
lock
shrb
pusha
data16
mov
cwtl
imul
xchg
imul
mov
mov
pop
sbb
mov
enter
xor
ss
cmpsl
repnz
inc
xlat
pop
adc
movsl
leave
push
mov
lea
jns
mov
push
cmpsl
iret
pop
lret
rcrl
mov
aam
scas
jmp
insl
lret
inc
or
xchg
jecxz
sahf
enter
xchg
leave
mov
xor
out
xchg
mov
sub
fstpl
nop
mov
jl
pop
cmp
mov
mov
in
fcompl
and
sub
cs
mov
ss
adc
push
bound
hlt
sahf
or
lea
sbb
cmp
scas
mov
jg
cmp
imul
jno
push
jle
adc
in
xchg
out
aas
add
jge
jmp
mov
mov
add
inc
jg
inc
hlt
scas
sub
mov
dec
lds
icebp
lds
lods
ljmp
imul
jp
out
sarb
idivb
jnp
pop
pop
jne
clc
scas
lods
incb
into
xchg
mov
out
jb
mov
pop
adc
adc
aad
xor
mov
loope
jns
lods
or
insl
dec
iret
jmp
jmp
mov
orl
add
pop
xchg
push
push
arpl
inc
xor
fcompl
adc
sub
mov
xor
sbb
xlat
lods
stc
les
mov
sbb
lds
lahf
leave
shl
negl
nop
lcall
jb
xor
enter
bound
jle
ja
push
pop
push
jmp
push
pop
repnz
or
cmp
data16
insl
ret
sbb
addr16
mov
mov
adc
jl
lret
fsubrs
add
cmp
les
in
test
negl
sbb
mov
sti
jl
adc
adc
or
jge
add
sbb
cli
mov
push
dec
or
push
mov
mov
es
or
in
mov
mov
mov
stc
insb
or
imul
inc
inc
push
jle
mov
shrb
xchg
dec
mov
and
lods
dec
lock
das
or
notb
es
imul
jo
bound
fcomp
rol
movsb
scas
cmp
adc
and
lret
mov
xor
mov
mov
mov
sbb
mov
cld
mov
cs
mov
jmp
jecxz
mov
jo
jg
loop
sbb
push
scas
sbb
inc
fsubrl
push
pusha
fbstp
jl
push
xor
dec
fneni(8087
push
daa
pop
push
fstpl
fwait
std
outsl
push
and
aas
lcall
cmpsl
fs
inc
ljmp
cs
aas
insb
xor
mov
out
adc
aaa
pop
data16
push
jbe
mov
jae
jb
sub
mov
pop
mov
divl
pop
lods
mov
fdivrl
push
and
into
xor
inc
rcrl
adc
rcll
push
pushf
cmpb
push
push
lcall
mov
loop
push
push
sbb
mov
jl
xchg
loop
add
scas
cmp
cmpsl
je
mov
add
mov
in
push
fwait
ja
stos
inc
sub
sbb
rcr
xchg
cmp
cltd
cmc
decb
leave
and
repnz
cmpsl
and
inc
fwait
lods
sbb
cmp
push
or
dec
lods
test
and
movsl
pmaxub
mov
push
pop
int3
jmp
mov
movsb
sarl
mov
aas
add
dec
dec
jge
ljmp
sahf
mov
aam
pop
jmp
xchg
mov
outsl
fs
sbb
ds
inc
dec
outsb
dec
mov
sbb
xchg
sbb
into
sbb
aaa
and
inc
scas
jno
adc
inc
addb
fs
lock
and
push
and
fsubs
and
fiaddl
in
push
lcall
pushf
lds
fmull
std
add
into
mov
xchg
cmc
outsb
ja
pop
push
ljmp
inc
je
lods
push
fcmovne
mov
xchg
test
jg
in
shll
sub
in
jbe
inc
insl
fwait
loope
out
cmc
jmp
inc
mov
stos
rolb
stos
push
jae
adc
xlat
xor
mov
jno
lock
rol
jo
xchg
out
shl
mov
lahf
add
xchg
pop
push
cltd
inc
mov
xchg
out
pop
inc
cli
dec
mov
mov
jmp
scas
sub
aad
dec
int3
in
clc
add
and
aam
inc
std
inc
push
push
movb
out
dec
mov
ss
ss
mov
add
mov
pop
idiv
or
std
ljmp
out
cmpsl
movsb
and
xadd
jg
int
pop
out
loop
add
pop
data16
mov
and
sub
cmp
imul
loope
lea
bound
or
in
xchg
int3
jo
test
fs
ret
or
push
inc
out
cmp
add
jnp
aaa
hlt
adc
decb
outsl
outsl
lret
inc
into
insb
and
push
insl
sub
pop
jno
pop
and
icebp
jnp
mov
push
xchg
insb
inc
and
mov
xor
pop
dec
addl
imul
cmp
lods
pop
jo
cmp
shl
clc
add
in
and
mov
fistl
shlb
or
dec
add
xor
mov
ds
js
xlat
xor
xchg
adc
pusha
out
sbb
int3
or
and
movsl
fwait
fs
mov
clc
mov
dec
mov
hlt
test
scas
outsb
push
mov
push
sub
xchg
les
psllq
xchg
adc
sub
mov
cwtl
push
mov
outsb
mull
pop
loope
dec
push
mov
xor
mov
aas
mov
add
mov
sbb
insb
and
movsb
je
mov
push
add
outsl
in
mov
xchg
jmp
mov
adc
mov
cmc
dec
or
mov
mov
lods
stos
dec
mov
mov
lock
je
sub
rcr
insl
and
inc
xchg
push
and
addr16
fsubs
inc
int
push
cmp
fisubrs
mov
in
fcmove
jns
popf
jl
sub
scas
iret
push
outsl
lea
ds
sbb
pop
rcrb
xor
frstor
dec
adc
ret
xor
nop
dec
js
mov
push
inc
jae
outsl
cwtl
jne
ljmp
movsb
inc
into
inc
jns
fsubrs
xchg
cmp
fsubrl
push
not
or
mov
jno
mov
xchg
int
or
or
sub
pop
push
dec
pop
xor
mov
and
ds
nop
cltd
or
xor
sbb
call
mov
sbb
mov
test
pop
pop
inc
test
and
mov
js
sahf
pop
das
cmp
xor
repz
push
sub
or
fnstcw
xchg
push
fwait
cmpsb
lret
or
jge
jb
sbb
out
and
xor
xchg
push
sub
mov
aam
adc
mov
push
inc
dec
xor
loop
cmp
movsl
sbb
mov
jp
push
jo
jae
js
loop
ds
jb
cmpsl
dec
call
out
inc
and
adc
out
popf
mov
fnstenv
xchg
push
in
aam
out
sahf
inc
push
aad
mull
lcall
out
decl
jl
dec
sub
cmp
rorl
add
cmp
inc
rcl
pop
mov
mov
test
dec
mov
out
inc
push
add
pop
pop
xor
dec
cmp
xor
fldcw
ljmp
add
imul
and
lea
cmc
dec
rcrl
out
push
movsb
push
sbb
iret
dec
repnz
mov
aam
xchg
imulb
sub
test
jle
aam
sbb
mov
cmp
mov
dec
icebp
jg
andl
mov
cld
jae
shlb
mov
test
pop
lcall
sub
jle
add
pop
outsb
testl
sub
mov
add
mov
pop
mov
cmp
test
dec
push
scas
out
push
fidivs
mov
fmuls
mov
push
test
adcl
das
in
sahf
or
orb
mov
sub
popf
clc
into
outsb
xchg
addb
jp
xor
sti
gs
jg
cwtl
shrb
push
push
call
and
and
push
pop
in
pushf
addb
sub
mul
xchg
xchg
or
jle
sbb
pop
std
dec
adc
jg
mov
sbb
shlb
pusha
push
sub
sbb
out
mov
sub
pop
dec
je
jg
mov
pop
mov
adc
and
jns
inc
test
fistpl
repz
insl
ficompl
sub
mov
int3
or
into
jle
inc
inc
sbb
sbb
in
shlb
cmp
inc
sub
add
flds
out
inc
out
jo
mov
jmp
test
mov
cmpl
out
jle
data16
lods
call
push
ret
dec
xorb
dec
or
mov
imul
in
ds
dec
jl
scas
pop
rolb
jne
add
and
or
mov
xchg
rcr
movsb
pop
test
int
pop
mov
es
mov
jno
lock
adc
inc
inc
int
in
xor
jle
repz
fcmovnb
mov
dec
pop
xchg
adc
scas
and
jae
cli
shlb
add
roll
mov
xchg
dec
pop
and
ss
aaa
testb
decb
das
es
jp
pushf
pop
insl
jmp
in
jb
mov
shrl
sbb
lcall
stos
out
lea
arpl
dec
ss
ret
jnp
mov
jnp
enter
push
and
mov
dec
mov
push
pop
push
or
or
pop
or
mov
xor
ret
push
pushf
insl
cmpsl
aaa
jge
lods
push
aas
mov
add
adc
dec
add
fsubs
int3
repnz
cld
aam
push
dec
add
aaa
xchg
cmc
cmp
je
cmp
cld
fdivr
cmp
mov
test
mov
mov
rorl
ds
data16
mov
ja
test
sub
push
dec
loop
or
aaa
inc
cs
loopne
mov
clc
dec
mov
loopne
xor
popa
dec
pop
xchg
fs
stos
lods
mov
jnp
shll
or
jecxz
inc
bound
sbb
mov
movsl
pushf
mov
gs
adc
adc
mov
xchg
jns
pop
sub
fmuls
insb
adc
bound
outsb
add
and
inc
cmc
iret
and
xchg
out
or
cmp
rorl
cmpsb
cmp
int3
ss
in
or
pop
or
dec
add
into
sbb
scas
fwait
movsb
ds
cmpsl
and
insl
inc
cmp
pop
ds
mov
adc
sbbb
dec
stos
shll
in
xor
rcrb
cmp
dec
push
cmp
scas
lcall
cmp
icebp
mov
das
test
adc
jbe
xchg
dec
out
stos
adc
mov
xlat
sub
xor
mov
jg
imul
xor
shlb
popa
fs
and
pop
jo
sbb
push
dec
adc
jbe
mov
jg
data16
push
lahf
pop
daa
pushl
imul
lods
pop
addb
push
sbb
or
ja
pushf
fldl
enter
divb
lcall
mov
pop
push
test
lea
jp
xchg
sbb
or
cmpb
mov
std
mov
push
fisubrl
dec
jecxz
scas
mov
cwtl
jp
sub
xor
pop
iret
pop
or
sbb
jl
mov
or
mov
out
push
cmp
or
outsl
sub
jne
movsb
mov
add
jmp
lods
jmp
mov
mov
je
push
enter
or
sub
pop
jnp
add
fsubl
dec
mov
rorl
and
push
imulb
movsl
sub
pushf
jl
pop
mov
mov
cwtl
fisttpll
push
inc
mov
aad
adc
scas
decb
mov
cs
test
sub
pop
sbb
jg
push
test
inc
pop
and
loop
sti
add
subb
inc
adc
sub
subb
mov
pop
adc
mov
cmp
mov
or
mov
mov
jge
inc
mov
jae
adc
and
in
lods
add
pop
jp
mov
cli
shlb
outsb
lret
cli
mov
rorb
dec
sub
fwait
clc
pop
fmull
xchg
jmp
pop
adc
or
push
daa
in
cld
loope
and
and
in
mov
rorb
sub
sbb
dec
pushf
ljmp
cmpb
aam
cmp
subb
call
add
inc
pop
inc
cltd
bound
push
popl
pop
loopne
insl
lock
dec
out
gs
testl
fimull
add
pop
sbb
jb
or
rep
subl
pop
dec
mov
or
xor
stos
jle
inc
scas
mov
js
ss
xchg
cld
mov
icebp
stos
pop
and
pop
sub
outsl
and
xor
xor
cwtl
mov
xlat
cmpl
leave
fwait
ss
and
sub
stos
mov
sbb
sub
aaa
inc
and
inc
mov
jl
push
mov
xchg
push
sbb
dec
fwait
popf
cmc
std
int3
dec
pop
jp
subb
or
sbb
into
mov
iret
push
or
stc
bound
out
xchg
pusha
lahf
leave
mov
scas
mulb
inc
mov
lcall
xchg
xchg
jb
inc
aad
ss
call
decb
je
jnp
jl
stos
jo
mov
das
in
lods
pop
xchg
push
sub
add
cmp
scas
xchg
das
inc
loope
xchg
sbb
push
jecxz
xor
add
push
push
mov
mov
jmp
sub
jg
push
jo
add
or
cwtl
rol
out
jmp
xchg
mov
push
iret
adc
xor
lea
push
fistpl
popa
and
mov
addr16
mov
and
push
loopne
fstp
or
xor
sub
mov
dec
dec
pop
add
jle
xchg
mov
jne
add
imul
sub
nop
cld
test
adc
in
or
jl
lret
nop
add
lods
push
es
jb
enter
push
push
sbbb
adc
mov
cmp
clc
and
iret
or
lret
adc
clc
js
jg
popf
sbb
mov
dec
cmp
sub
and
mov
inc
jg
cmp
ret
xchg
push
in
testb
out
in
lcall
repz
xchg
mov
inc
test
lret
push
sbb
and
in
loope
int
inc
fisttpl
arpl
fsincos
inc
stos
out
popf
xchg
mov
in
or
rcrb
jp
mov
mov
push
or
jle
lock
xchg
xorb
mov
or
in
add
stos
xchg
xor
cmpsl
push
mov
in
iret
or
xchg
adc
add
dec
outsl
mov
mov
sbb
add
xchg
and
mov
arpl
je
je
scas
or
lahf
xchg
icebp
sahf
ljmp
lods
loopne
xor
sub
and
addl
or
add
scas
sbb
inc
lea
lahf
and
or
mov
fistps
add
inc
cmpsl
pushf
xor
das
sti
add
mov
push
cmp
adc
cltd
push
pusha
out
mov
jle
hlt
rcl
mov
js
fwait
add
jge
jg
jb
int3
cmpsl
sbb
dec
ja
and
in
lcall
mov
cwtl
pop
dec
jg
ds
pop
rcr
sbb
cltd
xor
sahf
loop
mov
inc
push
cmp
repz
xor
mov
xchg
les
add
gs
mov
sub
jle
stos
cmp
mov
adc
add
xlat
jno
mov
popa
jnp
pop
cwtl
cmp
sahf
lods
cmp
or
cmpsb
or
scas
xor
stos
xchg
shr
adc
outsl
inc
mov
insb
fidivrl
sbb
movsb
cmp
fldt
jle
arpl
ljmp
fists
push
add
xchg
cmc
call
cmp
dec
sbb
mov
xor
les
xor
mov
adc
scas
xchg
sbb
ret
push
cwtl
addl
lds
dec
mov
mov
aam
mov
push
xchg
arpl
jl
das
arpl
into
push
add
push
lcall
cmpb
cli
movsb
sub
lcall
cmc
sub
icebp
out
pop
push
enter
in
jmp
push
fcmove
push
iret
andl
repz
call
inc
cmc
xor
jmp
das
mov
enter
pushf
dec
sub
daa
arpl
dec
gs
mov
adc
push
ds
dec
scas
fbld
sub
insl
aas
or
inc
fwait
arpl
jb
iret
jb
jno
into
je
mov
dec
repnz
sarl
mov
rcrl
sbb
mov
rclb
pop
in
dec
xor
out
mov
push
and
and
mov
mov
dec
out
mov
shlb
lods
lock
xchg
gs
daa
mov
aad
add
and
xor
ja
pop
mov
shll
stc
iret
mov
sti
insl
imul
add
dec
cli
dec
push
cmpsb
lcall
iret
adc
mov
mov
test
loopne
push
cmp
or
pusha
arpl
and
pop
loopne
or
mov
xchg
inc
mov
ficoms
outsl
push
jge
pop
mov
ss
sub
mov
jo
and
psllw
jo
aaa
mov
xchg
inc
inc
call
lods
testl
mov
lods
ljmp
sbbl
sbb
pop
mov
dec
cltd
in
inc
mov
add
inc
jle
callw
jns
cmp
ja
sbb
je
push
sbb
jae
pop
add
cli
or
or
mov
data16
loope
dec
sub
aas
dec
add
outsl
cmp
push
or
jb
jb
aad
cmp
test
icebp
push
lock
lods
shrl
stos
mov
jecxz
push
mov
cmp
je
jo
pop
pusha
test
out
jl
jnp
sub
mov
lods
sbb
jg
in
das
push
inc
ds
xor
lret
out
adc
in
cmpsl
lahf
lea
adc
mov
int
jecxz
negl
inc
push
rol
es
jge
fcmovnb
mov
pop
addr16
movsb
and
lahf
insb
popa
cmpsb
pop
push
aam
sbb
mov
testl
cltd
fsubs
sbb
sbb
scas
xchg
adc
js
aad
lret
stos
int3
pop
push
jno
mov
cmp
outsb
fildl
adc
repnz
sub
xchg
out
testl
and
ljmp
mov
add
xchg
daa
pop
in
mov
js
sub
insl
pop
xchg
and
cli
dec
sbb
dec
push
ss
sub
jae
jns
clc
push
mov
or
hlt
inc
test
mov
sbb
sub
sub
cmc
pop
int
adc
rolb
nop
hlt
xor
not
pop
jae
int
mov
xor
push
jmp
mov
mov
push
and
sbb
sbb
nop
dec
cltd
adc
pop
inc
mov
mov
shll
rclb
cld
inc
outsl
ja
popa
dec
repnz
cs
mull
sbb
add
jg
cli
outsb
mov
out
nop
or
or
cld
sti
inc
repz
cmp
adc
mov
push
xor
cmp
insb
jb
loopne
sub
bound
cmp
test
or
inc
adc
sbb
mov
xchg
stos
jecxz
push
popa
push
mov
xor
call
mov
imul
fstpl
fwait
jae
cltd
movsb
cmp
pop
scas
jno
sub
stos
movsb
lcall
mov
lahf
out
fs
xor
xchg
fistpll
repnz
arpl
and
out
push
lret
xor
cmp
sub
mov
mov
jb
jns
mov
aad
xor
pushf
jns
pushf
aaa
add
mov
inc
hlt
iret
cmc
test
xchg
push
scas
or
push
add
add
add
imul
negb
xor
cmc
inc
sahf
xchg
daa
pop
psadbw
shrl
push
leave
icebp
jmp
and
dec
xchg
ret
sbb
mov
or
cmp
jo
or
mov
jnp
adc
xor
or
mov
push
jb
xchg
iret
pop
subb
mov
out
dec
imul
inc
test
arpl
sarl
call
inc
movsl
mov
xchg
sub
pusha
dec
scas
adc
call
jo
das
cmp
test
jecxz
pop
subb
mov
mov
outsb
mov
push
jne
test
pop
mov
cltd
in
mov
xlat
sbb
int3
roll
mov
pop
jecxz
imul
popa
mov
jae
mov
inc
jl
loop
push
fistl
jno
stos
jns
mov
hlt
dec
nop
inc
push
mov
jg
inc
xchg
jp
sub
push
xchg
cli
pop
and
int
shrl
into
xchg
fsubrs
lahf
mov
push
xor
mov
pop
testb
pop
adc
or
insb
pop
repz
and
lret
rclb
lock
fwait
loope
jns
inc
pushf
xchg
jle
jmp
cmc
xor
test
das
add
sub
std
cmp
rcrl
fists
cmc
dec
sbb
clc
testb
adc
push
out
push
push
popa
mov
pop
nop
sahf
call
jge
test
stos
rcrb
imul
jo
loop
stc
adc
add
jb
fistpll
adc
cwtl
int3
and
xchg
or
aaa
fldl
mov
push
movsb
or
push
dec
fidivl
sti
push
pop
push
and
pop
add
mov
inc
sahf
call
sbbl
imulb
sub
xchg
jecxz
and
inc
jno
dec
mov
nop
xchg
and
adc
in
into
and
or
popa
cmc
inc
fldenv
ja
xor
jbe
cltd
das
cmpsb
loopne
setle
lods
inc
mov
das
pop
jbe
xchg
cmp
out
pop
int3
sbb
add
test
jl
fwait
dec
cmc
mov
jnp
pop
loop
arpl
mov
icebp
xchg
pop
mov
in
xchg
in
stos
shl
test
mov
push
jmp
lods
sbb
xchg
pop
add
andn
aaa
dec
fnstenv
jmp
fstl
push
ficoml
dec
dec
pop
mov
ds
aas
stc
imul
shrl
xlat
pop
sti
in
xchg
add
xchg
and
xchg
jbe
and
mov
test
ficoms
movsl
out
imull
sahf
jb
in
dec
lods
int
cmp
sbb
js
repnz
out
out
mov
ds
shr
sti
sti
insl
in
adc
jae
add
push
and
push
mov
ret
mov
daa
imul
jge
sbb
pminsw
mov
adc
inc
adc
lock
hlt
inc
insb
and
cmpsb
frstor
jns
xchg
cmp
lds
rcr
ret
push
shlb
popaw
ss
jbe
and
es
call
loopne
push
ret
jmp
test
inc
movsl
sbb
pop
and
lret
into
out
push
pop
repnz
mov
popa
xchg
sub
orb
int3
xlat
pop
loopne
insb
sahf
movsl
dec
jp
repnz
xchg
cmpsl
jo
inc
test
mov
and
lea
sub
shlb
sarl
rolb
fnop
xchg
int3
jl
lods
or
jnp
mov
outsb
out
gs
sub
enter
inc
adc
mov
nop
mov
mov
nop
lret
gs
cmc
sti
pop
adc
cmp
call
in
jnp
scas
mov
arpl
int
cmp
sub
jecxz
shlb
shrl
test
cld
jl
adc
mov
cmp
dec
pop
or
mov
sub
int3
scas
mov
cld
xchg
push
dec
stos
push
cld
sub
jo
aam
iret
nop
dec
mov
repnz
movsb
mov
mov
aad
std
push
dec
repz
arpl
sbb
sti
xchg
ds
and
mov
push
dec
mov
rclb
jns
mov
adc
les
loopne
inc
pushf
pop
or
mov
andb
push
lcall
iret
jp
pop
pop
gs
adc
jge
addr16
stos
rorb
mov
stos
mov
adc
outsl
and
pop
add
out
jecxz
push
fwait
test
gs
adc
pop
nop
xchg
pushf
adc
outsl
fstps
cli
cmpsb
pop
loopne
int3
rcrb
mov
mov
ljmp
inc
mov
outsb
cmp
pop
inc
mov
dec
int
in
imul
inc
leave
adc
and
pop
xchg
ret
jecxz
loope
and
leave
int
jge
sahf
dec
xor
lods
sbb
loop
popf
mov
add
scas
adc
pop
into
cmp
in
in
scas
sub
dec
push
adcl
add
mov
inc
fwait
xor
and
sbb
sub
test
and
imul
push
rol
push
pop
xchg
insb
xor
add
push
out
cmc
insb
ret
dec
not
cmpb
das
and
bound
or
sub
rolb
test
pop
jae
icebp
pop
push
rol
jae
aas
daa
enter
pop
sbb
fisubrs
rorb
mov
daa
outsb
inc
xchg
pop
add
xor
adc
jae
lock
fsubrl
das
loopne
outsb
repnz
inc
add
cmp
inc
inc
jmpw
add
int3
stos
adc
pusha
mov
into
test
inc
scas
adc
lret
jo
sti
aad
repnz
mov
aas
mov
imul
sub
test
sub
xchg
dec
scas
mov
dec
jns
sbb
mov
mov
or
mov
js
stos
fistpl
leave
pop
test
sub
jmp
loop
add
addb
pop
cwtl
mov
push
inc
xor
arpl
cs
cmp
sbb
rcll
out
ljmp
and
aam
dec
leave
sub
mov
lock
or
lds
jecxz
cld
cwtl
push
or
mov
cltd
nop
test
mov
sbb
xor
mov
ljmp
add
out
xchg
push
into
lea
adc
sbb
cmpsl
faddl
sbb
cmpsb
add
ffree
xor
das
shl
inc
icebp
scas
outsb
rcll
dec
mov
cli
push
gs
mov
xchg
loope
mov
or
sub
clc
push
xchg
ds
dec
pop
adc
push
xor
lock
push
bound
and
mov
pop
pop
mov
daa
and
cmp
ds
and
icebp
inc
lods
mov
add
mov
stos
test
add
or
or
sbb
mov
cmpsb
sub
pop
fildl
mov
repz
pop
frstor
cmpsl
insl
fwait
js
test
dec
jne
xor
fstpl
sub
popa
mov
dec
jb
cmp
cmp
lea
mov
or
add
jno
imul
xchg
adc
in
push
mov
xchg
xor
or
adc
call
inc
or
mov
sub
popf
mov
lcall
mov
inc
sbb
jo
lret
stos
sub
andl
lock
jecxz
adc
cs
add
inc
mov
add
add
daa
cmpsl
int3
pop
xchg
dec
lcall
mov
mov
ja
sbbl
test
jbe
xor
mov
shrb
stc
cmpsb
nop
in
cmpsb
lcall
rorb
mov
mov
mov
push
mov
cmp
dec
lret
xor
inc
push
outsl
push
scas
aas
and
imul
lods
imul
jle
lahf
jno
inc
call
out
pop
inc
sbb
je
inc
into
mov
imul
jnp
nop
in
jae
dec
or
push
popf
mov
mov
int3
sarl
incb
lods
inc
xchg
loop
sbbb
and
jno
xor
inc
xorl
fiaddl
push
xchg
sub
in
push
loop
sbb
sub
pop
xchg
arpl
dec
mov
in
dec
and
push
out
adc
inc
fistl
adc
xor
nop
rorl
cmc
mov
cwtl
mov
jmp
mov
cmp
out
hlt
es
pop
movsb
cmpsb
dec
mov
inc
outsb
sbb
and
jno
dec
sub
dec
mov
lods
push
push
aaa
mov
mov
stos
ds
icebp
xor
fildl
mov
sub
inc
pop
bound
gs
mov
sub
cmp
add
daa
dec
addr16
jbe
icebp
dec
adc
xlat
or
iret
data16
ds
popa
pxor
xor
cmp
jae
aam
or
sub
leave
dec
lahf
jne
repnz
sub
insb
scas
mov
fcoml
lret
fs
or
mov
lods
insl
inc
mov
lods
and
jp
movsl
xchg
stos
out
dec
rclb
into
es
pop
push
adcl
ja
sbb
pop
stos
scas
jecxz
inc
arpl
mov
out
xchg
into
mov
cmp
out
xchg
jle
or
loop
mov
popf
orb
lret
pop
scas
outsb
pop
andb
hlt
icebp
cld
in
movsl
aaa
imul
and
aaa
gs
pop
aam
imul
fwait
jns
xchg
push
xor
mov
in
fstps
orb
push
mov
ljmp
dec
cmpsl
mov
aad
mov
jg
lds
mov
cwtl
inc
in
in
test
test
cmp
insl
insl
inc
sub
dec
cmc
xor
inc
or
jge
push
xlat
leave
imul
cmp
xchg
push
xchg
or
dec
xchg
pop
cmp
je
and
sub
repnz
fidivs
in
or
adc
xor
or
xchg
jl
cltd
dec
pusha
cmp
fcompl
xor
fucom
inc
bound
mov
shl
das
inc
test
scas
pop
dec
loopne
ret
adc
sbb
call
loop
push
stc
stos
sbb
sub
jne
fmuls
or
andb
lock
das
inc
add
push
add
mov
fstp
ds
dec
push
sub
inc
ja
jo
aaa
add
out
in
dec
stos
pop
jne
sub
aad
inc
imul
syscall
sar
jnp
mov
or
jns
cwtl
cltd
sahf
and
ret
mov
loop
jmp
pop
sbb
adc
cwtl
xchg
and
jne
pop
cmpsb
adc
das
xlat
adc
lret
lods
inc
or
arpl
lea
pop
outsb
pop
fcomip
pop
add
mov
sbb
mov
adc
inc
and
jns
and
inc
mov
orl
jle
xor
push
add
xchg
cwtl
jg
test
push
push
sub
xorl
push
sbb
inc
mov
cmpsb
lcall
and
and
shrb
inc
je
jmp
lods
decl
loopne
and
nop
icebp
mov
adc
sub
imul
ret
mov
mov
aaa
push
cmp
jae
mov
pop
push
into
es
ret
cmp
inc
fnop
mov
clc
jecxz
inc
ret
inc
add
stc
inc
lahf
call
mov
pop
and
iret
jns
xor
bnd
addr16
jge
xchg
es
in
adc
sbb
mov
and
out
xor
imul
mov
inc
popa
sbb
test
rcrb
mov
push
mov
loope
xchg
inc
cltd
das
movsb
ret
scas
add
and
daa
pop
jmp
cmp
dec
mov
push
das
int
cmp
fisubrl
daa
and
push
xchg
jae
dec
mov
ret
outsb
mov
mov
inc
push
pop
lea
insl
mov
inc
mov
push
out
es
js
xchg
adc
xchg
cs
and
movsl
xchg
xor
or
cltd
inc
stos
fstps
push
cmp
orl
movsb
add
xor
lret
xchg
in
push
push
xor
shr
test
cmp
push
adc
xor
test
negl
into
push
out
sub
and
iret
mov
jb
imul
loope
dec
cld
lock
mov
test
adc
in
sarl
dec
loop
cmp
xor
repz
imul
xor
adc
push
xor
test
pop
lcall
sbb
in
lods
or
mov
cmc
icebp
out
cld
fisttpll
aad
dec
fistps
sub
leave
movsl
lret
in
std
xchg
pop
push
movaps
and
mov
repnz
call
sete
outsb
pop
jno
jae
sub
mov
pop
cs
in
xchg
mov
pop
push
xchg
pushf
add
xchg
rcr
mov
in
cmp
repz
mov
adc
clc
jp
push
adc
xor
mov
and
mov
mov
cmp
xor
xchg
scas
add
int3
in
sub
dec
out
push
inc
popf
or
inc
out
cmp
push
sbb
cs
dec
aaa
outsl
test
cmp
xchg
xor
pop
pop
frstor
popf
mov
or
cmp
jne
pop
and
movsb
cmp
jmp
fidivl
out
js
dec
and
jl
sarl
std
daa
or
popf
adc
lret
test
and
in
sbb
mov
jge
test
and
mov
dec
mov
jne
into
fcompl
repz
cmp
insl
pop
repnz
sub
adc
outsl
ja
adc
sbb
mov
dec
pop
push
dec
fdivs
lret
fimull
icebp
or
frndint
lcall
shl
out
std
jns
inc
test
icebp
xor
push
sub
lahf
jp
pop
pop
out
push
mov
or
les
inc
pop
or
jae
shrb
inc
sbb
xchg
lods
daa
jb
cmpsl
sahf
enter
xor
or
pop
fwait
rclb
xchg
dec
dec
jmp
pop
mov
loope
push
ficompl
jmp
cltd
mov
inc
ds
sub
int
pop
adc
icebp
sbb
dec
fwait
inc
push
icebp
or
and
or
mov
rcrl
mov
adc
movsb
inc
jnp
and
cmpsb
fldenv
mov
cmp
je
add
sbb
lock
cmp
cltd
repnz
insb
test
cwtl
jle
rorl
pop
aam
mov
xchg
add
dec
out
rcl
popa
mov
pop
sbb
pop
xchg
pop
in
ljmp
pop
lock
into
or
sti
aad
cmpsb
sub
lahf
mov
std
test
jp
in
shr
push
mov
xchg
lods
inc
in
sub
dec
mov
mov
sahf
jge
mov
lret
idivb
jno
sub
fdivr
add
xor
call
stos
cmp
in
adc
cld
adc
jle
cmpsl
mov
lret
das
jge
sub
xor
cmpl
sub
ret
dec
sbb
mov
nop
cmp
jne
imul
ja
aam
dec
and
mov
mov
push
rorb
int3
mov
and
adc
aad
les
call
jo
into
rcrb
popa
loope
and
aam
push
xchg
push
dec
out
add
shll
add
jns
sub
mov
push
repnz
add
insb
test
lock
nop
std
jmp
and
dec
sarb
xchg
js
xor
xchg
movb
xor
ja
inc
lds
inc
paddb
add
iret
fs
xchg
outsl
inc
mov
mov
test
lods
fidivs
cmp
mov
adc
clc
leave
push
scas
stc
iret
mov
mov
ret
inc
cmp
shrb
out
or
loope
xor
xchg
lea
iret
jne
jo
xchg
mov
es
das
pop
dec
in
int
mov
insl
aas
push
and
std
jnp
je
aas
fst
cmp
pop
push
pop
sub
inc
xor
jae
and
ljmp
sub
cmp
jno
mov
rcr
cmp
ret
pop
sbb
sbb
inc
xor
jmp
fdivr
lret
pop
ljmp
movsb
shrb
mov
clc
mov
les
shll
jns
sbb
test
pop
into
cld
add
das
clc
push
mov
cmpsl
inc
pop
mov
sbb
xchg
mov
jo
pop
icebp
call
xchg
jmp
stc
jno
shl
pop
lods
adc
ljmp
push
cld
xlat
and
rcrb
add
enter
add
hlt
cs
push
cmpsl
add
lcall
test
loope
mov
cs
test
imul
cmp
sub
sbb
dec
std
pop
aas
push
inc
sahf
and
into
je
out
add
mov
leave
jae
and
int3
stc
add
roll
enter
imul
mov
je
adc
dec
daa
xor
or
repnz
sbb
inc
and
add
mov
push
pop
lret
inc
mov
mov
mov
cmpsl
inc
push
mov
jecxz
push
or
daa
imul
and
repnz
outsb
cmpsb
out
je
clc
xchg
push
ret
dec
cmp
pop
lds
inc
xlat
jmp
ja
or
mov
xchg
jns
sub
int3
repnz
pop
sti
sub
mov
nop
daa
insl
inc
lods
fcmovbe
int3
inc
dec
aad
cmpl
repz
out
cmc
xchg
and
pop
movsb
sahf
inc
or
pop
je
pushf
pop
lret
mov
call
call
out
adc
mov
lahf
fildl
sbb
adc
cmp
push
and
out
pop
mov
push
imul
fstp
mov
sbb
aad
mov
mov
test
mov
xor
outsl
hlt
fnstcw
push
rcrb
adc
lret
inc
adc
lcall
frstor
cmp
dec
sarb
rcll
mov
sub
mov
mov
jns
outsb
imul
adc
adc
loopne
fcompl
and
and
fsubp
jns
stos
test
rclb
in
imul
ja
mov
cmpsb
leave
test
pop
xor
icebp
mov
pop
xor
mov
xlat
out
xor
jl
inc
dec
push
or
xor
fsts
int3
pusha
dec
pop
dec
inc
flds
insb
inc
mov
daa
mov
and
xor
addb
cmpb
xor
cmc
imul
repz
or
loope
aad
out
cmpsl
cmp
mov
push
fsubr
cmp
and
xchg
jp
inc
test
jne
push
divl
iret
aad
ja
sub
add
push
popf
cmc
jecxz
data16
hlt
andb
xchg
add
movsl
add
push
fs
ljmp
enter
scas
into
mov
fcomp
adc
xor
xor
out
push
fdivs
repz
lods
repnz
outsb
adc
rcrb
les
mov
xchg
jl
lret
jmp
repnz
pop
inc
add
incb
daa
dec
jge
xor
stos
mov
jb
xchg
js
inc
dec
xchg
adc
add
lock
cmp
fwait
sbb
pop
aaa
mov
psllq
into
mov
dec
out
mov
js
mov
lods
mov
loop
lcall
cli
fstpt
jp
dec
loop
add
mov
js
push
inc
in
icebp
imul
jge
ja
push
pop
outsb
adc
sti
pop
pop
jl
or
sub
mov
fnstenv
inc
fiaddl
into
push
lods
mov
inc
rol
xchg
das
xor
push
xor
cmp
jb
shrl
add
pop
cli
imul
push
jo
inc
adc
in
outsb
pop
sub
insb
idivl
adc
sbb
fwait
jns
iret
push
add
sbb
aaa
lods
sub
jmp
push
sbb
push
mov
out
cld
in
and
jo
mov
rolb
stos
xor
mov
mov
dec
push
and
test
stos
negl
pop
aam
jo
cli
xchg
xor
fisubrl
mov
mov
outsl
sbb
stos
and
pushf
call
shll
call
das
and
addr16
push
outsl
lds
in
into
ret
mov
dec
jnp
sbb
jnp
mov
data16
mov
mov
sahf
les
sti
xchg
jb
cli
mov
jbe
dec
loope
xlat
xor
rcr
mov
fiadds
mov
cmp
scas
sti
xlat
dec
rcll
stc
fs
cmpsb
add
daa
cmp
sub
xor
fildl
js
daa
fmull
mov
movsl
inc
xor
mov
add
stos
fwait
jge
jne
imul
xchg
dec
popa
xorl
call
outsl
and
std
scas
inc
push
loope
test
leave
mov
push
inc
repz
pop
in
out
neg
pop
xor
out
pop
xlat
aas
mov
cli
mov
mov
add
es
clc
aam
mov
lea
and
pop
dec
push
enter
lods
xchg
push
cs
jo
pop
outsl
rcrl
fidivrl
adcl
push
xor
sub
pop
push
inc
sub
jne
xor
and
push
xchg
aad
sbb
ss
cwtl
mov
ds
mov
aas
popa
icebp
icebp
push
insl
ja
xchg
mov
pushf
mov
adc
xor
push
or
lds
jecxz
mov
inc
or
push
mov
inc
bound
mov
add
inc
pop
stos
cmp
mov
push
arpl
inc
dec
leave
fstpt
ljmp
pop
fsts
leave
xchg
pop
mov
xchg
inc
mov
mov
cmp
dec
icebp
inc
inc
sub
jne
sbb
cld
or
pop
mov
cmpsl
enter
fsts
ret
fidivs
dec
and
mov
aad
push
sbb
jb
outsl
clc
add
sarb
arpl
inc
outsb
pop
mov
dec
cmp
push
stos
cmc
mov
jne
ss
hlt
push
or
in
xlat
adc
scas
ljmp
add
lcall
pop
inc
pusha
pop
dec
xlat
jnp
xor
xor
movsl
add
inc
cmp
and
hlt
andb
mov
dec
repnz
inc
jbe
ss
inc
jmp
cmc
xadd
in
or
test
aas
mov
movsb
rcr
sti
sbb
cmp
xchg
and
mov
mov
aaa
out
out
test
stc
mov
jp
fmull
jb
xchg
mov
xor
outsl
dec
lock
lods
jbe
push
mov
movl
out
dec
and
mov
dec
inc
pop
loopne
pop
ljmp
dec
mov
xor
sbb
decl
inc
inc
jp
mov
stos
mov
pop
push
pop
mov
movsb
scas
adc
arpl
xor
inc
cmpsb
pop
ds
mov
in
jns
mov
fimuls
mov
sub
nop
fisubrl
xor
lods
insb
mov
sub
imulb
cwtl
inc
lcall
inc
aaa
pop
pop
inc
in
lret
inc
les
adc
faddl
or
bound
cltd
pop
out
push
mull
dec
jbe
fldl
pushf
push
dec
out
rorl
inc
lret
xor
scas
and
cmp
rorb
insb
mov
add
lods
jnp
add
pop
repz
testb
lea
and
int3
loopne
mov
mov
pop
das
xor
in
mov
jo
mov
xchg
daa
sbb
pusha
add
fisubrs
cli
cld
daa
push
insb
ret
dec
es
pusha
repz
fiaddl
dec
xorl
stos
mov
sub
dec
cmpsb
cmp
sti
pusha
cmp
xor
in
ljmp
fsubl
aaa
xor
ret
movsb
jp
in
push
daa
sub
stc
bound
fwait
cmc
inc
or
inc
lret
push
icebp
jbe
jmp
or
iret
inc
mov
inc
xor
jmp
fcmovu
cmpsl
mov
push
scas
addb
jecxz
repz
pcmpgtw
jo
push
or
popf
add
stc
adc
mov
imull
jp
insl
dec
push
movsl
fldt
dec
sub
and
in
dec
aad
pop
into
or
fistpl
jg
mov
jp
aas
push
cmp
adc
popf
push
inc
inc
mov
and
mov
stos
jne
sbb
sub
or
movsb
xor
mov
cmc
gs
lret
scas
cmp
cmp
pop
xor
cmp
sbb
lock
inc
sub
stos
rorl
cmpsb
in
or
pop
outsb
divl
nop
mov
and
cmp
mov
cmpsb
addl
or
sub
cli
jp
iret
out
aas
mov
mov
inc
push
pause
push
mov
outsb
inc
je
mov
pop
mov
lods
mov
mov
add
std
xchg
jb
pop
lret
lea
adc
movsl
scas
cltd
sbb
xorb
cmp
cmp
popl
fldcw
push
mov
xchg
add
sbb
int3
dec
lods
daa
ja
or
rol
test
jne
pop
shr
adcb
mov
lds
mov
cmp
stos
jo
pusha
xor
rorl
pop
arpl
adc
test
in
mov
fisubl
test
mov
xchg
dec
sub
adc
push
push
or
mov
scas
push
fs
shll
icebp
sarl
or
adc
xchg
pop
cwtl
subb
pop
xor
insl
mov
imul
cli
inc
arpl
ret
orb
add
xlat
dec
aam
dec
jb
insl
fcmovnbe
repnz
jnp
mov
insl
jno
aaa
repz
mov
inc
imul
mov
mov
jmp
lahf
cmpsl
mov
mov
mov
sbb
fwait
mov
push
mov
mov
dec
pop
addl
les
icebp
ficoms
loope
inc
lock
push
clc
mov
mov
cmpsl
cld
xchg
add
adc
jne
jae
enter
into
xchg
test
jae
xor
push
call
inc
push
lahf
inc
iret
inc
outsb
pop
negl
ficompl
rcrl
sbb
neg
aas
push
mov
mov
popf
mov
out
sbb
mov
dec
mov
in
push
fucomp
xor
jnp
fwait
adc
repnz
aam
sub
add
sbb
mulb
pop
adc
cmp
lret
mov
gs
inc
sub
cli
cmp
cwtl
sbb
add
sub
jae
testl
lea
mov
in
popa
pop
jb
insb
mov
mov
bound
sub
add
and
jmp
push
push
push
pop
mov
stos
call
lret
mov
sbb
and
dec
jmp
mov
xchg
popa
icebp
sub
into
add
sbb
cmpsb
rolb
fnstsw
cmpsb
decb
mov
ds
rcrb
mov
out
mov
fimuls
std
or
xor
je
add
aaa
mov
data16
shrb
cli
jge
dec
jbe
es
ret
stos
jmp
adcb
dec
loope
push
or
insb
roll
push
pushf
icebp
push
cmpsl
iret
es
pop
movsb
lret
lods
inc
or
xchg
mov
outsl
pop
cld
mov
in
mov
mov
adc
fs
mov
repnz
call
mov
sahf
push
pop
mov
lret
insl
xor
lods
sub
mov
dec
dec
orb
lcall
jp
fs
xor
stos
aas
inc
xor
adc
mov
out
mov
ret
mov
cmp
scas
jmp
call
mov
jae
dec
xor
cmpsb
lods
xchg
movsl
repnz
lcall
sar
cmp
insl
nop
cmp
test
xor
xor
inc
mov
dec
out
push
push
dec
les
push
pop
jp
push
jge
lods
in
hlt
lahf
adc
and
cmp
lds
leave
sbb
sti
test
and
add
mov
push
popa
out
negb
dec
and
xchg
aas
stos
dec
push
icebp
cltd
fs
mov
je
push
mov
jns
dec
mov
xchg
xchg
cmpsb
scas
or
ss
push
mov
sbb
jmp
pop
imul
sub
pop
xchg
dec
mov
call
insl
xor
mov
sbb
bound
loop
jecxz
push
dec
mov
dec
aas
xchg
inc
push
mov
mov
pushf
mov
jecxz
mov
jl
gs
inc
in
push
lcall
or
or
mov
xchg
aaa
in
jns
fnstcw
je
jae
mov
mov
cmp
mov
mov
or
xchg
xchg
lahf
loope
xchg
lret
pop
sahf
je
repz
or
test
push
cltd
push
add
aas
popf
pusha
loopne
mov
gs
mov
jb
sbb
xor
cmpsb
pop
iret
popa
jb
pop
pusha
in
mov
jno
add
cltd
push
loopne
pushf
sub
scas
out
mov
cwtl
push
fnstsw
fistps
ljmp
or
xchg
xchg
setne
push
out
std
out
jo
movsb
push
mov
push
ficomps
insb
call
loope
pop
inc
xchg
lcall
orb
push
jnp
divl
push
lahf
pop
repnz
and
scas
pop
cmpsl
jns
fistpll
fsts
jg
cli
adc
les
mov
adc
and
mov
imul
out
fiaddl
cs
or
or
mov
pop
inc
lahf
jecxz
or
push
pop
movsb
fsubl
mov
loop
dec
stos
and
adcb
pop
mov
xchg
insb
pop
pop
popa
jns
iret
imul
fmull
pop
xchg
scas
and
mov
leave
daa
pusha
or
pop
fs
xor
iret
adcb
pop
int3
test
pop
xor
bound
out
arpl
adc
inc
sub
ficoms
push
ss
in
xorb
iret
push
loop
aas
cs
arpl
stos
daa
aam
cmpsb
loop
dec
imul
push
addb
lds
and
mov
pop
jg
push
fstpl
and
fcoms
push
adc
lea
imul
or
nop
inc
add
in
outsb
inc
and
std
fistl
rcrl
insl
add
or
lahf
shrl
fists
inc
repz
int3
adc
inc
loopnew
ret
jae
cld
mov
out
bound
loope
and
mov
notl
sbb
in
adc
cmp
mov
fsubrl
repnz
or
shlb
test
xchg
xchg
sti
movsb
dec
mov
mov
in
mov
push
cmpsb
pop
inc
or
xchg
lcall
ss
inc
push
hlt
adc
pop
dec
xor
fwait
pop
pop
sbb
je
jle
or
xchg
imul
daa
insl
cmp
push
sbb
and
cltd
test
cmp
jae
cmpsb
ss
or
fmull
popa
in
lret
in
out
pop
mov
fiadds
popf
das
mov
into
cmp
mov
xchg
aaa
jge
push
mov
lods
dec
mov
or
xchg
rclb
mov
sub
fnstcw
xor
mov
icebp
orb
jecxz
mov
loopne
es
scas
add
ja
cltd
pop
fmull
jl
lret
mov
ss
outsl
jl
xchg
mov
push
cli
pop
pop
scas
cmp
lret
rcl
inc
cmp
inc
mov
cmp
cld
test
add
fs
fidivrl
sbb
xchg
cmc
stc
xchg
mov
xchg
mov
adc
jmp
cli
mov
subb
or
dec
sub
jg
sbb
call
in
lret
stc
jmp
and
pop
dec
ror
mov
xor
je
adc
cmp
pop
lret
movsl
inc
dec
mov
pop
iret
mov
js
mov
jmp
cmp
add
ret
js
xor
add
adc
mov
shrl
fwait
outsb
ja
das
sarb
inc
or
inc
sbb
cmc
sub
xlat
push
push
push
or
ret
and
pusha
and
stos
and
push
push
mov
or
pop
pop
lahf
loop
popf
cmp
inc
arpl
mov
imul
mov
inc
xchg
sti
mov
jns
pop
movsb
sub
push
mov
sub
nop
adc
lea
jl
fnstcw
mov
icebp
mov
push
and
push
scas
jle
jmp
mov
andl
mov
and
xchg
mov
cmp
xchg
aas
outsb
adc
lret
push
loopne
dec
xchg
sbb
jecxz
mov
pop
loope
idivb
jo
xlat
sub
push
pop
mov
lcall
dec
cmpsb
out
out
jg
les
push
pop
fnstsw
mov
mov
sbb
mov
cmp
lods
push
adc
push
hlt
orb
ret
divb
sahf
fists
and
cmp
ss
cmpsb
mov
mov
sbb
pusha
cmpl
cltd
fs
in
les
call
int3
enter
mov
xchg
jle
xchg
add
adc
cmc
addr16
dec
push
cmp
loopne
mov
js
xchg
cmp
jl
sbb
test
pop
mov
imul
aad
loop
cltd
push
into
das
mov
repz
xor
stc
mov
sub
cld
cwtl
fistpll
cwtl
cmpsb
sbb
lods
cmp
cltd
iret
nop
js
pop
gs
adc
add
imul
popa
sbb
pop
mov
fildll
daa
aas
mov
push
push
cmc
dec
and
loope
xor
lcall
cmpsb
repnz
rcll
add
fdivs
pushf
mov
jg
mov
inc
ret
cmp
pop
mov
mov
add
stos
jg
scas
fpatan
fldl
mov
add
pop
cmp
addr16
fldenv
cmpsb
pop
mov
dec
pushf
enter
mov
adcl
cvttps2pi
inc
cmp
mov
lods
xlat
enter
lahf
xor
dec
dec
mov
pop
mov
push
ret
xchg
pop
push
xchg
mov
adc
in
or
jg
mov
jle
ljmp
sahf
loop
fiaddl
jns
add
sbbb
ret
arpl
xor
mov
cmp
jmp
rorb
push
test
out
xchg
cmp
test
lcall
adc
jmp
aaa
aad
and
xchg
divb
xor
fwait
enter
pusha
push
test
and
and
jo
xlat
aad
clc
mov
cld
inc
sbb
in
scas
repnz
pop
adc
lcall
pop
dec
sub
mov
add
loop
adc
jg
mov
cwtl
inc
mov
fcompl
mov
repnz
xchg
daa
jno
lea
mov
and
stos
test
cltd
fst
pop
cs
das
mov
mulb
mov
dec
bound
dec
in
xchg
pop
test
mov
imul
sbb
out
lret
sbb
jbe
in
push
jne
xor
hlt
aad
leave
jnp
jae
jae
xlat
in
dec
repz
in
jnp
add
jp
mov
jle
idivl
mov
mov
movsl
rcrb
jmp
jge
adc
lods
mov
cld
lock
cmp
shr
xchg
int
cli
out
add
int
es
inc
dec
pop
jecxz
test
jbe
mov
push
fs
cmp
gs
test
popa
faddl
jp
aaa
imul
xor
push
enter
mov
jbe
push
out
addr16
xor
pop
jo
sarb
imul
or
cmp
xchg
push
jno
outsb
imul
aad
aad
faddp
insl
das
sub
adc
stos
xchg
aas
ja
inc
dec
daa
mulb
je
adc
or
inc
movsl
push
ljmp
mov
fnstcw
lods
xor
lret
xor
pop
cltd
loopne
iret
adc
or
push
push
cmp
adc
mov
pop
add
sub
dec
sbb
bound
inc
pop
rcrl
dec
and
adc
push
scas
shlb
xor
mov
js
mov
cli
add
repnz
mov
adc
clc
push
push
in
hlt
sub
add
jmp
fs
sbb
lahf
nop
jge
test
iret
int
add
push
adc
xor
or
dec
sbb
sahf
mov
dec
out
enter
or
push
rsqrtps
xor
sti
pop
inc
adc
jns
push
sub
stc
sub
inc
subl
out
shrl
mov
push
dec
mov
dec
push
jae
inc
xchg
sub
and
xchg
push
stos
lret
inc
or
lock
in
lods
loope
adc
dec
dec
inc
sub
shl
rclb
in
sti
call
ljmp
pushf
add
mov
or
push
push
xchg
shld
add
addb
and
pop
mov
pop
mov
mov
popf
loop
push
xchg
movsl
jae
add
pusha
sbb
cltd
loop
xchg
das
loopne
imul
adc
repnz
xchg
mov
push
imul
push
lea
cs
mov
dec
pop
fistl
mov
ja
repz
mov
push
mov
scas
mov
sbb
push
and
daa
cltd
aam
mov
xchg
insl
mov
inc
sahf
test
cltd
fisubs
dec
xor
push
mov
jp
cmp
mov
fildl
out
ret
dec
stos
cmpl
xlat
mov
xchg
sub
cmp
pop
aaa
and
jecxz
xor
gs
sbb
jecxz
sahf
mov
popa
mov
or
xchg
ret
push
fwait
lods
jg
mov
push
pop
ja
ficoml
xlat
xchg
and
xchg
mov
aad
and
xlat
out
lret
pop
push
in
into
add
sub
in
movsl
call
inc
sbb
test
sbb
ljmp
cltd
jno
lahf
out
movsb
cmp
xor
xchg
cmpl
test
aam
dec
enter
lahf
out
xchg
pop
or
jg
mov
stc
out
scas
mov
xchg
fsubrl
xlat
lret
or
xchg
dec
sahf
cltd
movsl
sub
inc
xor
cltd
lds
scas
xor
push
push
xorl
inc
and
inc
mov
scas
mov
cmp
outsb
js
stos
add
stc
loope
les
pop
aam
inc
dec
inc
xchg
inc
jno
arpl
jl
xor
push
sbb
aam
or
push
cltd
sbb
aas
jne
push
mov
pop
adc
xchg
inc
jl
cmc
in
call
cmp
lock
mov
jmp
jge
inc
sbb
or
lret
xchg
cmp
inc
pusha
lret
mov
add
push
adc
adc
pop
ret
gs
je,pn
push
dec
xor
scas
hlt
add
xor
lret
ss
jmp
scas
movl
imul
sub
stos
testb
aad
adc
dec
cmpsl
out
shlb
dec
aaa
cmp
aad
or
xor
das
push
mov
jg
or
push
adc
out
inc
ret
in
or
nop
xchg
jecxz
insb
xor
mov
inc
cmp
adc
loop
cld
cmc
mov
jmp
xor
jbe
mov
stos
outsl
mul
in
out
xor
out
test
movsb
and
mov
or
sahf
push
incl
out
mov
fwait
dec
mov
ds
sub
cmpsb
xor
popa
mov
cmp
or
mov
popf
and
and
ds
daa
mov
adc
iret
jno
mov
sub
jmp
jp
push
lea
jne
fisubrl
inc
pushf
adc
call
inc
pop
or
mov
or
clc
add
lods
mov
adc
pusha
mov
lahf
in
mov
jnp
mov
add
jo
sbb
testl
in
mov
mov
dec
test
push
add
out
cmp
pop
repz
jp
mov
jne
in
insl
cmpsb
scas
add
loopne,pn
int
dec
add
in
je
xchg
inc
gs
and
fldenv
loop
lods
lods
adc
add
ljmp
andb
mov
xor
mov
adc
out
and
push
mov
or
es
inc
add
and
and
repnz
jns
and
push
loop
insb
hlt
iret
and
cwtl
out
in
dec
inc
mov
xor
inc
divl
jb
test
and
add
sub
mov
mov
out
fsubl
mov
pop
cld
aad
loope
clc
push
ljmp
mov
fwait
rorb
nop
mov
push
lods
aad
scas
in
mov
fdivs
push
mov
mov
lods
leave
push
movsb
test
jg
sti
nop
in
sub
loopne
in
cmp
ja
inc
mov
dec
das
jp
cmp
pusha
mov
les
into
mov
hlt
sub
fldcw
out
pop
lcall
or
scas
ror
jle
cmpsb
jecxz
push
mov
icebp
jge
outsl
gs
enter
or
loop,pn
or
adc
xchg
lahf
das
add
mov
loop
sbb
in
cmp
mov
stos
lods
adc
xchg
adc
pop
scas
scas
inc
insl
push
pop
movsl
clc
pop
hlt
arpl
push
adc
call
xchg
adc
rcll
sbb
rcll
std
cli
jne
mov
sahf
cmpsb
adcl
ficompl
jmp
sbb
insb
mov
in
into
cmp
cmp
pop
fidivs
rorb
loopne
test
push
lret
sbb
push
pop
stos
push
cmpsl
push
mulb
out
dec
jp
pop
sub
aad
jle
cmpsb
scas
cmp
jmp
fldcw
inc
sub
call
mov
das
sub
sub
jae
mov
adcb
lcall
inc
sub
out
stos
mov
lods
jmp
mov
lcall
enter
mov
cmp
mov
stos
dec
ljmp
xor
mov
add
mov
test
fwait
cmp
mov
add
sub
sub
movsb
add
xchg
jmp
dec
shll
out
cli
iret
pushf
pop
mov
mov
push
int3
das
push
pop
mov
das
cmp
jp
stos
ljmp
icebp
lret
mov
add
cmp
cmp
cmc
mov
jae
add
jle
scas
dec
mov
das
out
cmpsb
mov
jp
lret
or
sbb
movsb
mov
xorl
add
testl
push
lcall
sbb
mov
int3
out
push
push
dec
pop
and
bound
enter
lds
xchg
sub
insl
cltd
jno
sarb
dec
sti
imul
bound
xor
mov
add
adc
mov
les
jnp
inc
outsl
sub
jg
dec
mov
into
loopne
es
imul
xor
loop
jns
ds
fs
fdivrs
mov
mov
xor
jge
fcmovne
stc
mov
pop
or
in
mov
aad
aad
mov
out
jmp
dec
pusha
ja
mov
pusha
clc
inc
mov
jl
pop
or
sar
mov
mov
jl
shll
or
and
pop
and
push
jno
cmp
movsl
mov
xor
push
nop
inc
je
mov
icebp
xchg
rcrl
xchg
repnz
sbbl
xchg
dec
in
negb
pushf
pop
jb
out
pop
test
mov
add
adc
lea
in
pusha
jge
inc
int
adc
test
aaa
or
test
aaa
stos
jle
jmp
nop
cwtl
mov
inc
sbb
sbb
inc
push
imul
xor
jg
std
iret
sbb
outsb
mov
push
push
repnz
mov
xchg
je
std
lock
sahf
in
pop
sub
sar
les
into
scas
addb
lret
or
aaa
ret
cmp
sti
movsb
and
push
add
jmp
jbe
outsb
cmp
inc
push
cmpsl
add
fdivrs
pushf
fnstenv
mov
lods
cli
adc
cmp
mov
and
push
lret
mov
dec
aaa
jb
in
mov
fmuls
pop
jecxz
pop
inc
sub
arpl
or
popf
loope
or
jl
xor
xor
enter
ficoms
mov
pop
jbe
mov
cltd
out
xchg
pop
xor
les
inc
aad
sub
mov
push
inc
fnstenv
pushf
nop
sbb
push
and
inc
std
dec
test
push
clc
loope
pop
scas
inc
daa
outsb
aas
mov
dec
xchg
sbb
stos
or
test
icebp
pop
mov
add
pusha
scas
repz
inc
jns
inc
in
xchg
es
std
test
outsl
imul
mov
outsl
inc
call
ret
sub
dec
jmp
add
sahf
adc
mov
mov
cwtl
rcrl
cmpsl
xchg
sbb
cmp
and
ror
ljmp
gs
shlb
stc
jae
sub
shll
mov
mov
fidivrl
js
xor
mov
adc
cld
loopne
in
mov
jb
xor
inc
jmp
jne
stos
stos
inc
enter
dec
mov
cmpsl
rclb
adc
aaa
jb
rcrb
dec
je
xchg
inc
sbb
dec
cmc
mov
je
xor
or
mov
xchg
sbb
pop
out
divb
faddp
mov
mov
inc
xor
ds
loopne
mov
gs
popa
jns
mov
mov
jp
mov
ret
scas
jmp
adc
gs
dec
lea
ret
mov
fcoms
aam
pusha
mov
jp
mov
fsubs
cmp
dec
stos
mov
mov
push
aaa
dec
scas
in
mov
jne
ret
mov
shrb
mov
cmpsl
xor
ja
outsb
pusha
xor
fdivrl
cmp
dec
imul
movsl
push
dec
mov
je
pop
sahf
fwait
lret
and
pop
xor
pop
ss
inc
dec
add
push
push
sahf
push
divb
into
popa
xchg
and
leave
scas
arpl
scas
push
xchg
repz
aas
pop
ljmp
ficomps
ljmp
xor
sbb
dec
sbb
in
nop
ret
pop
and
rorb
mov
inc
test
mov
jecxz
mov
or
enter
xchg
fwait
sbb
pop
mov
mov
imul
je
lock
nop
shrd
jge
add
lods
lods
rorl
mov
imul
popa
xchg
push
push
test
inc
push
fbstp
mov
ret
adc
aas
outsl
jp
pop
inc
mov
jecxz
aam
fmull
insb
mov
pop
push
dec
xchg
add
ficompl
mov
popa
out
negb
pop
push
loopne
sub
je
in
jmp
sub
adc
iret
adc
fs
mov
xor
mov
xor
scas
ret
mov
pop
loopne
imulb
cmp
lahf
push
mov
mov
fsubl
inc
xlat
shrl
xor
test
xlat
jp
jo
mov
mov
imul
cmc
test
dec
pop
data16
push
mov
lcall
jo
sub
pop
adc
dec
pop
sub
imul
sti
mov
loop
mov
fldenv
adc
inc
add
aad
imul
mov
sub
pop
mov
push
popa
test
call
in
jbe
pop
arpl
xchg
jb
add
jle
repnz
arpl
push
clc
mov
aaa
mov
xor
jmp
gs
aas
push
xchg
xor
test
aad
add
jns
aaa
dec
aas
fcoml
pop
bound
ds
imul
in
mov
loope
pusha
and
jb
xchg
clc
xlat
add
push
cmp
pop
movsl
mov
cmp
mov
and
cs
push
js
imul
xchg
pop
jae
sub
cmp
mov
inc
in
sub
mov
lret
out
jns
leave
add
test
pushl
mov
out
nop
or
sub
push
push
mov
test
into
imull
mov
iret
inc
xor
stos
and
or
mov
sbb
je
test
lock
lret
mov
jnp
aas
jg
jp
push
inc
xchg
popa
pop
and
or
aas
xor
popa
sub
adc
push
xlat
sub
xlat
cwtl
shll
imul
cli
scas
cvtps2pi
js
and
sub
cli
cmc
in
lcall
inc
add
xchg
testl
mov
xor
sbb
cmp
xor
in
push
ret
addr16
dec
outsb
mov
mov
dec
sarb
fsubp
mov
inc
pushf
in
sub
cltd
adc
push
sbb
popa
jmp
jae
mov
push
sti
mov
mov
xor
pop
scas
fbstp
xchg
xchg
leave
or
roll
fimull
mov
add
pusha
nop
in
lahf
fisubs
stos
shll
jnp
xor
add
ds
add
nop
jmp
bound
jecxz
mov
negb
sbb
inc
std
movsl
inc
mov
dec
loope
push
sbb
push
aas
cmp
xchg
xchg
dec
mov
popa
fs
je
ret
cmp
jnp
dec
aam
pop
leave
into
push
notl
fisubl
mov
xchg
push
jmp
push
mov
dec
dec
popa
mov
shrb
mov
movsb
pop
ja
dec
mov
and
out
or
call
push
sti
push
test
add
nop
outsl
das
sub
inc
jae
xor
mov
mov
leave
jle
mov
outsb
mov
out
sbb
xlat
adc
push
push
in
ret
add
and
push
fwait
xor
mov
sbb
xor
mov
sub
mov
xor
inc
cmp
in
pop
scas
scas
lods
xchg
popa
xchg
in
or
jl
push
mov
jmp
fidivrs
or
icebp
dec
mov
test
xor
aad
data16
repnz
xchg
xlat
into
inc
sub
mull
test
mov
push
sub
mov
mov
lods
shll
push
shll
push
loopne
je
sbb
fisttps
imul
and
or
dec
fistps
adc
cmc
sub
sbb
jb
push
or
add
lahf
lret
ds
jbe
ficompl
addr16
mov
es
cmpl
test
leave
outsl
call
icebp
and
ja
inc
insb
mov
aaa
or
inc
dec
popf
adc
lcall
loop
mov
sub
cmp
inc
cmpsl
cwtl
sub
mov
imul
pop
popf
aaa
int
cmp
mov
mov
push
pop
sub
adc
mov
push
sbb
xchg
push
sub
push
addr16
inc
jg
dec
jb
iret
inc
mov
and
loope
imul
das
outsb
daa
pop
jno
jns
stc
mov
push
fmuls
mov
idivl
jp
cmp
push
std
nop
lcall
push
arpl
add
push
xlat
or
mov
loopne
into
push
xchg
ss
pop
push
out
cmp
dec
mov
jno
and
negb
inc
push
pop
movsl
sub
inc
or
push
sub
mov
mov
inc
mov
test
xchg
popf
or
loop
push
sub
mov
inc
mov
push
stos
pop
mov
test
mov
rdtsc
adc
je
cli
pop
xor
mov
in
stos
out
and
jl
dec
int3
fcom
jge
lods
iret
adc
xchg
loop
cmc
jnp
xlat
mov
xor
data16
fnstsw
lea
dec
subl
into
mov
pop
mov
test
cltd
pop
stc
daa
push
jo
scas
bound
repnz
gs
ja
lods
dec
cmp
test
cli
mov
xchg
in
cwtl
mov
and
xchg
xchg
testb
es
push
sbb
cmp
fidivs
dec
cmp
sbb
lcall
cmp
imul
adc
std
mov
in
dec
repnz
rorl
in
lret
ret
lret
loope
sbb
push
xor
flds
sub
jl
and
pop
mov
mov
cmpsb
xor
das
into
insb
sub
ljmp
xor
mov
inc
les
out
sub
fwait
add
lcall
lret
test
fwait
adc
aas
xchg
and
pop
pop
out
insb
push
sub
sbb
in
stos
sbb
and
imulb
mov
xchg
push
add
call
shlb
pop
ds
cmp
fwait
repnz
stos
je
cmp
pusha
lock
or
test
sahf
sysret
es
loopne
mov
pop
jnp
and
idiv
bound
inc
mov
enter
scas
les
stos
pop
dec
dec
mov
push
out
hlt
sub
fldl
mov
sti
rcrb
jno
mov
out
mov
adcb
xor
push
inc
xchg
mov
test
enter
rcl
mov
mov
or
mov
das
ja
jge
mov
mov
stos
add
mov
xorb
pushf
rcll
xchg
in
loop
xchg
popa
ret
pushf
aaa
add
sahf
les
lods
fidivrs
stos
mov
outsb
jb
and
push
scas
xor
dec
lock
repnz
xor
adc
add
mov
popa
push
int3
nopl
dec
aaa
mov
push
xchg
fsubrl
iret
xchg
out
pop
adc
pop
loop
or
pushf
add
test
clc
rclb
int
call
sub
push
in
fsubr
cpuid
push
inc
into
aas
sbb
xlat
les
or
mov
loopne
js
pop
pushf
push
test
rcrl
enter
adc
xchg
repnz
cld
sub
adc
cwtl
inc
push
in
pusha
movsb
stos
mov
sub
lods
int3
xor
popl
imul
xchg
int3
mov
test
sub
xchg
inc
fdivs
rolb
sbb
inc
das
sub
xor
popf
std
jne
mov
mov
cmpsb
out
insl
aad
jnp
jge
or
pop
mov
push
in
mov
mov
cli
jno
add
push
mov
pop
xor
lcall
mov
xorb
cli
mov
outsb
ficomps
mov
inc
jle
in
xlat
inc
enter
mov
inc
jmp
pushf
and
pop
lods
icebp
ret
adc
or
mov
adc
adc
adc
jbe
dec
int3
push
mov
nop
stc
sbb
fs
or
testb
clc
pop
cmp
sbb
rorl
out
fsub
addl
fdivrp
mov
xlat
divb
push
add
repz
jmp
pop
aad
hlt
outsb
clc
push
sub
js
mov
add
cmpsl
sar
push
jle
sub
outsb
dec
ja
fcmovu
adc
mov
lahf
mov
nop
aam
and
out
out
pop
sub
push
pop
cmp
inc
ret
and
inc
inc
lds
cmp
xorl
fnstenv
inc
fwait
insl
cli
orl
mov
repz
jne
push
ret
push
mov
ffree
into
cltd
jg
pop
in
daa
add
shrl
lahf
fiaddl
in
and
orb
push
sbb
inc
mov
add
das
mov
push
lret
push
call
xor
shrl
mov
sbb
inc
frstor
fcoms
mov
pop
gs
data16
mov
push
mov
aam
fidivs
adc
std
mov
enter
mov
jbe
or
push
leave
jecxz
mov
push
in
jbe
dec
outsl
mov
adc
out
mov
ret
mov
cmc
js
cmp
add
shll
ljmp
inc
and
es
test
popa
pop
lcall
inc
clc
jnp
sbb
es
xor
adc
push
cs
lea
inc
and
dec
jnp
stc
mov
and
cmpsb
out
mov
lret
mov
popf
les
or
stc
mov
or
rcll
ljmp
ds
rcrl
jecxz
sbb
clc
push
push
insl
bound
adc
sbb
fstpt
jae
pop
les
ret
aam
jnp
es
jns
pop
push
out
loopne
mov
jb
mov
xor
sub
add
xchg
aaa
or
jge
push
sub
sub
imul
movsb
in
jmp
jb
adc
mov
add
aad
sub
popf
push
push
into
mov
cmpsb
lahf
push
fimuls
jge
enter
icebp
decl
sbb
fisttpll
mov
popf
icebp
push
mov
iret
sub
sub
mov
xor
lods
lret
push
dec
subb
add
movlhps
add
push
into
data16
scas
lods
and
sbb
jl
aas
or
cwtl
std
push
cld
push
sbb
add
jecxz
adc
or
inc
xchg
cmpb
hlt
in
mov
enter
loope
dec
lds
mov
stos
pop
lea
loopne
in
pop
out
sar
mov
lods
xchg
jle
sbb
mov
das
mov
pop
pop
lods
cmpsb
jge,pn
xchg
mov
scas
mov
shl
jge
outsl
sbb
jbe
xlat
sti
das
vaddsubps
push
or
in
mov
mov
ljmp
pop
iret
push
jmp
cmc
andl
jno
add
push
icebp
cmp
mov
cmp
inc
push
scas
inc
ss
jae
add
xchg
sbb
jmp
in
mov
xor
lret
sbb
mov
mov
mov
push
xchg
out
inc
xor
fistps
jge
mov
fdivrl
jb
cmp
jmp
sub
movsb
js
adc
lahf
fs
push
fwait
cmp
ret
dec
jnp
rcrl
sbb
mov
aas
sbb
imul
push
gs
ret
and
lret
ss
xchg
push
stos
or
push
ss
mov
fidivs
xchg
mov
dec
ret
fwait
add
mov
push
push
mov
adc
cli
stos
adc
aas
add
push
push
ret
movsb
jne
int3
jo
xchg
and
mov
arpl
je
inc
ret
xlat
jae
xchg
dec
inc
jp
test
int3
mov
lcall
imul
hlt
aam
rclb
out
push
sub
fnstcw
lret
cmpl
cmp
xor
lods
xor
sti
xor
cmp
adc
test
mov
sbb
mov
pushf
dec
adc
add
xchg
push
into
sub
xchg
cmp
add
pusha
mov
stc
daa
outsb
xor
popa
lret
loop
or
ljmp
jp
shlb
icebp
test
pop
sub
rcrl
int
cmp
mov
leave
les
je
movsb
mov
inc
test
and
push
cli
sahf
sub
pmaddwd
loopne
xchg
repnz
pop
sub
lods
ret
mov
adc
repnz
jno
cmp
mov
stos
sbb
jb
mov
icebp
xchg
xor
xor
cs
inc
aam
push
stc
mov
mov
jle
add
inc
outsl
push
inc
adc
jl
jmp
orl
or
push
jmp
lret
lods
jae
jl
fistl
out
inc
popa
fidivrs
cmc
daa
cmp
inc
add
mov
in
xor
mov
sub
jne
cmpsl
xor
mov
int
hlt
cmp
nop
imul
and
shr
xchg
cmp
outsb
xchg
js
lds
out
outsl
lea
adc
in
sub
das
add
adc
rcr
mov
sub
push
add
incl
xchg
xchg
mov
loop
xor
sbb
cmp
psubusb
aas
xchg
ljmp
scas
arpl
mov
aad
xchg
sbb
fs
mov
and
or
add
lcall
mov
arpl
ds
stc
adc
call
stos
mov
push
or
in
inc
imul
jnp
add
sahf
xchg
aad
aas
cmp
mov
xor
shlb
mov
xchg
cmpsl
outsl
mov
das
lock
test
add
mov
je
js
pop
lret
pushf
out
dec
sub
xchg
xor
nop
popf
fsts
into
cli
mov
daa
adc
loopne
push
cld
pop
iret
cmp
jge
mov
push
fs
js
sbb
xor
xor
jecxz
jp
aaa
imul
xor
ds
mov
jg
push
add
xchg
loopne
jno
xchg
lods
cmp
in
inc
push
xchg
push
adc
stc
inc
xchg
into
data16
push
dec
add
inc
sbb
lods
cmp
leave
lods
dec
add
dec
gs
in
arpl
jnp
adc
pop
into
lock
fdivp
pop
int
pop
pushl
insb
fcomps
mov
out
fisttps
es
inc
mov
jmp
out
add
jns
sub
ds
add
add
sub
adc
outsl
test
xor
les
jmp
jb
sahf
ljmp
pop
fstpt
fucomp
push
and
pushf
push
movsl
cs
adc
xor
sbbl
xchg
and
jae
xor
loope
add
ud0
push
push
loopne
ja
push
imul
xor
adc
inc
test
shrb
std
xchg
sar
fs
sub
and
ja
ja
jae
add
or
arpl
shrb
inc
xchg
add
je
mov
push
dec
das
dec
cli
mov
js
fisubs
xor
xchg
movsb
inc
cmpsb
iret
outsl
push
jp
data16
sub
mov
inc
ret
cmpsb
push
and
rcl
loope
ret
flds
ss
rclb
sub
jbe
xchg
fsubrl
jge
jb
xchg
add
fs
dec
lods
jecxz
cs
imul
add
nop
sub
push
xchg
push
add
jmp
sbb
jne
xchg
outsb
aam
popa
jns
lods
xor
arpl
inc
mov
or
inc
daa
jmp
xor
xchg
mov
aas
cld
data16
mov
mov
lahf
xchg
lods
mov
mov
mov
pop
mov
sub
fsubl
adc
sbb
icebp
js
xchg
xchg
sub
pop
and
fnsave
or
xchg
add
mov
inc
sub
pusha
and
and
pop
push
or
fwait
push
lea
mov
add
sbb
push
gs
mov
addb
test
mov
xchg
addr16
sub
ds
outsl
xor
mov
lret
jmp
pop
push
cltd
xchg
mov
cld
inc
pop
aam
or
call
cmp
and
xorl
sub
rcrb
rcl
insb
and
sub
jmp
dec
push
or
push
mov
scas
xor
jne
xor
inc
mov
pop
xlat
outsl
inc
sub
popa
scas
rcll
out
xchg
pusha
xor
pop
jb
mov
pop
xchg
xor
mov
cmp
inc
ret
pop
push
fcompl
popl
fidivl
lock
lods
jne
ss
test
loop
jle
add
mov
cmp
push
mov
jmp
andb
dec
hlt
imul
add
bndldx
rorl
push
add
push
pop
jmp
mov
inc
mov
or
cld
push
or
fwait
loope
mov
xchg
lret
insl
rcr
repnz
pop
mov
popf
cmpsb
mov
subb
add
insl
mov
fwait
xchg
or
jl
movsl
push
cmp
xchg
mov
pushf
inc
lds
insl
jmp
pop
clc
sbb
movsl
int
rcrl
test
push
int
and
popf
cmc
mov
inc
clc
js
mov
dec
xorl
xchg
push
xchg
inc
test
hlt
jg
ja
shlb
pop
mov
push
jmp
outsb
mov
xor
aad
dec
rorl
stos
out
test
sbb
pop
sub
pushf
lcall
lea
lea
les
sub
or
jno
ret
lahf
adc
dec
lea
pop
mov
pop
xchg
adc
dec
mov
jne
pop
and
sahf
and
lret
idivb
mov
imul
add
and
fwait
testl
and
mov
jp
sub
mov
jge
mov
jo
ljmp
addr16
test
push
loop
mov
icebp
sti
lds
je
rclb
xchg
clc
add
lret
cmpsb
xchg
mov
inc
fmuls
aad
je
mov
mov
jge
adc
das
cmp
mov
lret
and
jb
xchg
int3
add
repz
add
mov
ffree
cvtdq2ps
test
fs
dec
adc
add
and
dec
cmpsb
idivl
pop
imul
popf
ficoml
push
mov
jle
adc
adc
clc
adc
mov
add
leave
mov
or
pop
and
sahf
cmpsb
out
inc
mov
jmp
pop
or
nop
mov
popf
rol
cmp
bound
stos
rorb
pop
addr16
inc
pop
mov
idivl
outsl
mov
icebp
daa
add
iret
push
sbb
clc
jae
mov
arpl
mov
fs
and
cmpsb
dec
ffree
push
xchg
stc
sub
cmp
pop
mov
test
xor
sti
fsubs
xor
inc
mov
jle
xor
pop
mov
bound
jne
int
cmp
mov
imul
lret
in
mov
shlb
andb
aam
sbb
sbb
mov
lcall
fimull
sbb
and
jae
mov
out
shll
ss
jbe
inc
mov
incl
out
dec
add
repnz
pushf
adc
scas
ret
arpl
and
mov
nop
dec
int3
push
cmpsl
pop
test
add
pushl
and
aad
add
pop
loop
loope
sbb
dec
push
push
and
mov
out
out
add
sti
sub
pop
fdivrl
repnz
cmp
cmp
sub
jb
popa
shrl
mov
cmp
jmp
dec
lods
sub
sbb
outsl
in
xor
xchg
dec
sub
push
push
out
aad
stos
nop
test
xchg
bound
stos
nop
addr16
stc
fstpl
ds
out
lret
jle
cmpsl
mov
iret
inc
dec
xchg
aad
leave
cmp
insl
add
mov
cmpsl
pop
fsub
mov
or
xor
sub
stos
inc
mov
fistps
pop
jae
pop
sahf
enter
mov
cmp
push
scas
gs
and
outsb
mov
clc
aaa
jge
gs
stos
das
fabs
sbb
gs
inc
sarb
dec
out
lods
mov
jg
sub
lea
dec
dec
adc
adc
repnz
jmp
sub
and
rolb
hlt
orl
pcmpeqw
test
and
adc
mov
jb
cmp
les
pop
push
jecxz
pop
dec
sti
cmpsl
jle
lods
cld
insb
push
xchg
fldenv
or
in
out
mov
shl
rcll
out
jge
pop
dec
xchg
arpl
stos
fists
nop
xchg
repnz
cmc
jg
or
push
cmp
xchg
mov
add
js
cmp
ljmp
popf
push
out
jns
addr16
lret
sub
sbb
xchg
ljmp
inc
or
cwtl
icebp
std
or
pop
repz
jns
jecxz
cmpsb
inc
add
call
cmp
pop
int
out
leave
mov
arpl
iret
cmp
fs
dec
out
test
inc
ds
bnd
inc
push
lret
div
and
inc
sarl
mov
xchg
mov
outsb
xor
sbb
mov
fsubrs
xor
mov
fisubrs
loope
addb
mov
es
imul
bt
bound
setge
ljmp
push
xchg
loopne
push
jns
cmp
icebp
shll
or
ret
push
sub
sub
nop
sbb
push
xor
sub
xor
jmp
popl
adc
loope
cwtl
ds
aad
push
pop
enter
mov
and
push
mov
clc
xchg
test
xchg
mov
sar
cmp
in
in
lock
fcoml
push
loop
fistl
and
and
les
jmp
mov
inc
loope
cmpsl
jbe
adc
loop
and
push
int
and
pop
int3
iret
sti
jmp
rcrb
in
cmc
shrb
stc
aad
push
kmovw
lods
add
sub
cs
scas
jnp
loopne
gs
push
sub
xchg
xchg
or
fistps
in
xchg
loop
inc
xor
cmp
orl
jp
jnp
pusha
out
pop
sub
inc
lods
fnstcw
leavew
and
cmp
mov
adc
add
cmp
inc
outsl
scas
out
das
lret
lock
mov
ret
sbb
lods
aad
clc
loop
pop
loop
outsl
mov
fwait
cmp
loop
inc
rcll
cmp
loopne
inc
mov
fldenv
sbb
test
int3
adc
mov
lods
imul
xchg
repz
dec
jae
arpl
dec
ffreep
es
xchg
push
cli
inc
rol
inc
push
cwtl
arpl
pop
in
sbb
jno
mov
orb
xorb
iretw
es
sbb
nop
nop
pop
out
out
xor
mov
dec
mov
iret
fstl
imul
cwtl
icebp
shll
ret
repnz
cmp
int3
dec
test
mov
add
add
cli
and
pushf
es
push
int
cmp
test
adc
pop
popf
lods
in
pop
and
sbb
dec
fsubl
xchg
inc
leave
mov
lock
xchg
jae
bswap
rclb
jns
mov
lods
and
fadds
jp
xor
pop
add
mov
repz
imul
add
in
sub
outsb
cmp
rorl
jns
jno
in
sbb
lret
cs
xchg
mov
jb
pop
xchg
sub
aam
and
addr16
or
cmp
outsl
sbb
push
xchg
inc
js
pop
push
adc
fwait
xchg
add
cmc
jg
jne
xor
les
aaa
ds
in
cld
mov
and
sbb
leave
fstl
ret
add
fidivrs
fisttpll
ret
push
pop
add
adc
fcomps
dec
scas
ret
fwait
cmp
js
xchg
jnp
pop
pusha
rcr
jmp
dec
dec
cmpsb
xchg
insb
push
ja
sahf
into
scas
outsl
jno
sahf
testl
push
dec
add
enter
ljmp
mov
jbe
xchg
cmp
test
aam
test
cmp
dec
loopne
xchg
aas
popa
pop
lahf
aaa
xlat
imul
out
addr16
mov
inc
inc
les
int
mov
pop
xchg
add
inc
mov
ffree
dec
mov
pop
mov
pop
sub
mov
aam
mov
inc
das
jo
lods
mov
cmpl
out
int3
mov
xchg
push
cmp
shll
andb
xchg
jge
xor
pop
fnstcw
dec
jge,pn
syscall
sbb
adc
daa
jle
cmp
mov
cli
pop
jge
sbb
jb
mov
dec
mov
sub
stc
test
push
je
inc
add
iret
out
xor
iret
sub
add
into
icebp
pop
pop
pop
mov
lcall
aaa
in
movsl
xor
xchg
mov
es
inc
outsb
mov
xchg
push
jmp
idivb
inc
shrb
negl
xchg
pop
aas
mov
outsb
movsb
lea
adc
cltd
sub
mov
bound
in
mov
mov
jmp
adc
push
inc
add
iret
lea
pushf
mov
inc
inc
ljmp
enter
push
add
xchg
xor
lods
sti
mov
jg
inc
cld
out
or
mov
xchg
out
push
mov
xchg
in
inc
cmp
push
mov
test
gs
xchg
or
adc
cltd
pop
pop
outsl
test
movsb
ret
aas
sbbl
mov
and
out
rorl
xchg
adc
mov
jns
push
mov
pop
jbe
lcall
stos
test
xchg
or
ds
adc
ficoms
das
sbb
call
push
jge
sar
mov
mov
test
dec
dec
rol
test
mov
adc
sbb
and
nop
mov
xchg
push
repz
icebp
mov
add
add
mov
mov
mov
xchg
xchg
bound
fldl
xchg
or
scas
mov
rorb
lcall
pop
adc
and
adc
jp
cmpsl
fsubrl
add
pop
cmpsb
add
roll
cmovo
movsl
adc
inc
lret
lock
ljmp
lret
mov
xor
adc
jne
pminub
lahf
loope
icebp
nop
push
sbb
sti
or
shrd
mov
pop
fdivs
jo
inc
mov
test
out
mov
outsb
test
sbb
jmp
std
inc
imul
mov
aas
and
push
loop
aad
mov
dec
pop
pop
and
adc
ficomps
jns
out
dec
mov
or
ljmp
sahf
dec
pusha
push
mov
ja
adc
sahf
insb
adc
and
mov
pop
inc
push
fbld
in
pop
loopne
adc
iret
adc
rclb
popa
adc
pushf
add
pop
leave
jge
jo
mov
dec
mov
lods
adcl
js
push
jge
in
inc
outsb
mov
jge
pop
test
and
inc
inc
pop
lret
push
pop
pop
mov
insl
popf
jnp
jb
xor
subb
sub
push
pusha
aad
insl
scas
jge
cli
into
cmp
outsb
push
mov
cmp
and
add
out
xor
xchg
push
rclb
pop
sbb
adc
js
jbe
and
lods
jl
aad
and
dec
nop
divb
icebp
adc
cmpsl
test
test
mov
lods
ds
mov
js
sub
push
xchg
cmp
add
xor
repnz
jae
data16
fcomps
and
push
jmp
scas
sbbl
fsqrt
nop
add
sbb
cmc
sub
dec
lods
leave
je
lods
and
xchg
jns
and
xor
mov
xchg
mov
pop
outsl
mov
jp
jo
pusha
cmp
push
pop
lock
ja
subb
mov
push
scas
push
lods
arpl
rcrb
jo
and
jnp
mov
in
fldt
pop
mov
outsl
arpl
mov
pushf
insl
xchg
jmp
jg
mov
dec
jecxz
flds
in
lods
push
sub
push
and
dec
pop
mov
xor
ljmp
mov
cltd
std
jl
adc
sub
cli
inc
imul
mov
push
aam
imul
xchg
xor
mov
stos
or
rclb
xchg
jge
lret
shlb
stos
fistps
mov
xchg
dec
orb
gs
jge
nop
mov
stos
adc
aam
ja
ret
xchg
in
mov
jg
add
cli
push
lahf
or
lcall
stos
pusha
adc
test
loop
sbbl
movsl
insl
cltd
test
or
ss
sub
jl
in
xchg
dec
jl
not
mov
push
jl
pop
push
fwait
out
cmp
and
enter
shl
inc
cmp
or
sbb
cld
out
jae
mov
mov
cmc
cmp
dec
jnp
in
adc
push
cs
push
mov
xchg
sbb
dec
mov
imul
fildll
js
mov
scas
add
mov
adc
lret
fdivrl
mov
xchg
jmp
mov
negb
xor
icebp
inc
cli
push
mov
rorl
mov
xlat
test
jnp
dec
fincstp
cmp
gs
fwait
addl
inc
mov
sbb
dec
mov
fmull
scas
data16
subb
and
divb
sti
in
cmpl
and
mov
popf
mov
xlat
push
and
adc
dec
mov
adc
loopne
pop
or
pop
out
cli
fldenv
push
dec
ror
pop
scas
lods
in
and
xchg
inc
xlat
dec
mov
aaa
ds
cli
sbb
idivl
sbb
jae
jle
out
pushf
mov
test
pop
rcrl
inc
shll
push
jmp
into
sbb
je
mov
mov
addl
loop
add
lea
mov
cwtl
ret
fwait
arpl
es
xlat
dec
mov
test
outsb
ja
pop
icebp
push
hlt
pop
xchg
or
mov
sahf
pop
imul
adc
and
mov
mov
jns
pop
test
dec
mov
and
hlt
adc
lret
repz
cltd
push
push
lcall
mov
popf
hlt
inc
cmpsb
sbb
lds
xor
jge
xchg
inc
sbb
in
mov
lahf
mov
pop
jmp
dec
ljmp
lret
pop
sbb
loopne
sarl
cld
hlt
je
sub
movsb
stc
bound
xchg
or
aas
js
test
mov
mov
sbb
hlt
add
add
push
scas
dec
pop
stc
inc
inc
aad
shll
rorl
cmc
outsb
push
ret
lods
jle
ss
arpl
add
mov
scas
mov
in
fldt
mov
stc
mov
les
addb
sub
xor
xchg
lahf
xchg
into
pop
lahf
dec
push
hlt
pop
jl
lret
push
mov
xor
adc
mov
maxps
jle
daa
les
addr16
mov
inc
shl
outsb
call
add
or
bound
dec
inc
mov
mov
push
into
scas
xor
and
cltd
outsl
push
mov
out
pop
inc
mov
mov
addr16
jmp
lcall
mov
cmpsl
adc
dec
add
ljmp
pop
mulb
ret
cmp
xchg
cld
add
aaa
dec
dec
nop
and
fisttps
xchg
rorl
cmp
or
jb
loopne
pop
stos
cmc
dec
ret
pop
in
cli
fistl
cmp
xor
mov
lahf
jnp
jae
and
incb
push
xchg
mov
inc
add
jae
cmp
cmp
loop
pushf
cld
cmp
jns
jo
inc
inc
mov
cmpsb
mov
aam
push
xchg
je
pop
cmp
popf
jmp
bound
test
shrb
add
je
stos
repnz
daa
test
fmuls
fdivs
mov
data16
js
fstl
arpl
fidivs
add
ljmp
cmp
xor
adc
clc
fidivrl
ljmp
or
push
es
add
inc
mov
rcl
cmp
mov
test
data16
cmp
loop
std
loope
faddl
aad
aad
dec
jnp
aas
and
push
mov
inc
push
cwtl
fidivrs
mov
push
adcl
lret
jl
jge
pop
and
mov
push
nop
pushf
out
bound
mov
cmp
jl
test
dec
scas
xor
inc
dec
dec
stos
cmp
adc
and
jmp
cmc
add
arpl
mov
and
cmp
pusha
push
xorl
stos
imul
push
mov
xorb
pop
and
lock
pop
jl
lahf
lods
aas
or
jmp
js
rcrb
fadd
and
inc
je
cmpsb
das
and
sbb
fisubrs
jno
je
pusha
in
sbb
scas
xor
push
xor
push
in
and
or
and
and
push
dec
out
push
cmp
mov
notl
push
xchg
stos
leave
mov
jmp
jo
sbb
cmpb
mov
insb
add
lcall
or
mov
dec
mov
xchg
testl
xlat
add
ret
out
ljmp
push
cwtl
lcall
jae
sahf
out
xchg
jl
cli
xor
shrb
pop
jge
subl
nop
push
and
pop
fisttpl
or
jmp
mov
push
mov
jg
inc
fimull
repz
xor
dec
pop
cs
sbb
loop
test
and
sub
push
lcall
inc
addr16
adc
add
pop
xor
pop
cli
dec
xchg
pushf
dec
loope
repz
andl
mov
cmp
outsb
jge
mov
ds
jo
shl
loop
add
dec
inc
call
shrl
inc
mov
xchg
inc
arpl
push
cmp
xor
in
xchg
push
into
mov
rclb
and
fstl
repnz
xor
inc
pop
cwtl
movsb
ja
xor
subl
xchg
das
popa
jb
mov
cld
xlat
jge
hlt
jp
push
add
cli
js
in
sub
mov
aaa
mov
dec
mov
cmp
loope
sub
xchg
enter
in
out
lods
dec
out
or
lods
cmp
cld
inc
xchg
fmull
xor
lds
sbb
mov
mov
shlb
jmp
adc
mul
mov
cltd
adc
adc
push
aam
clc
das
dec
mov
or
mov
inc
and
fidivrs
int
jg
mov
sbb
mov
loopne
cmp
jmp
push
cwtl
push
pop
stc
push
sub
lock
mov
dec
mov
pop
jmp
sahf
push
jbe
pusha
push
xor
push
push
push
sbb
sahf
test
mov
sbb
bound
jecxz
enter
mov
jmp
lock
cli
test
xchg
insl
mov
fwait
pop
xlat
mov
icebp
pop
push
in
or
inc
pop
jne
dec
rcll
testl
loopne
xchg
xchg
mov
outsl
push
push
movsb
add
dec
push
js
pop
mov
lods
in
shll
aad
sub
jnp
cmpsb
lods
daa
adc
outsl
and
mov
clc
mov
inc
push
fsts
mov
mov
sub
int
pop
adc
or
mov
aam
popf
pop
das
mov
sub
dec
lcall
pusha
nop
inc
sub
int
pop
push
out
gs
daa
pop
pop
mov
sub
xchg
mov
pop
push
sahf
fidivrs
mov
pop
cs
fnstenv
outsb
aaa
je
mov
adc
and
push
push
push
or
cmp
mov
inc
jl
cmp
inc
xor
mov
fsts
or
mov
mov
shll
adc
ficompl
hlt
push
test
lds
int3
xchg
stc
jne
jo
arpl
pop
stos
out
xchg
sbb
cmp
fwait
rcrb
cwtl
inc
mov
inc
xchg
cmp
in
add
dec
push
mov
inc
and
insb
or
mov
inc
adc
cmp
cmp
bound
jne
push
pop
dec
pop
ret
dec
dec
xor
mov
das
lret
or
pop
cli
adc
mov
lret
gs
je
add
in
pop
mov
inc
dec
repz
scas
in
inc
sub
cmp
pop
jp
and
sbb
xchg
out
push
outsl
adc
inc
lods
jb
scas
rol
xorb
stos
lret
xor
int3
test
pushf
cmp
mov
test
aaa
jle
mov
fs
pushf
cmp
sti
ljmp
daa
xor
add
dec
fisubrl
lods
xchg
lea
pop
cli
mov
lock
sbb
mov
jle
ret
in
int
mov
scas
sub
mov
daa
into
push
cmpsb
js
in
insb
popw
inc
cs
pop
dec
cmc
iret
add
jo
popa
divl
pop
out
sbb
loop
orl
dec
and
pop
lods
push
enter
test
inc
push
aaa
arpl
sbb
lahf
divl
jae
xchg
lahf
clc
out
jmp
sub
cld
ja
sub
inc
pop
insl
mov
xchg
mov
rcl
lods
roll
jno
add
fidivrl
call
sti
jp
ds
ss
sbb
aam
push
sub
sbb
xor
mov
gs
pushf
ds
pushf
jae
xchg
test
sahf
xor
pop
ret
in
hlt
pop
lods
imul
mov
faddp
dec
inc
adc
sbbl
push
js
sub
hlt
iret
jmp
bound
scas
and
mov
push
test
shl
sub
xor
cmp
lret
cmp
inc
xchg
bound
out
insb
cmp
inc
dec
dec
push
repnz
mov
cmovle
mov
inc
pop
cmpsb
movsb
dec
stos
in
gs
sti
jno
inc
adc
mov
aad
nop
and
adc
push
addr16
arpl
push
xor
mov
inc
aad
js
popf
lods
sarb
aas
fwait
repnz
xchg
ret
xchg
xchg
vcomisd
popa
in
hlt
hlt
jne
mov
add
pop
pop
rcll
ss
dec
cmp
mov
and
mov
fsts
gs
xchg
mov
leave
mov
popf
aam
pop
or
and
adc
data16
cli
mov
insl
icebp
mov
mov
mov
inc
sahf
lahf
ja
movsl
inc
push
jle
es
mov
push
shlb
cmp
mov
pop
rcrb
and
dec
xchg
mov
push
xor
rcl
insl
fildl
mov
not
out
repz
out
test
xlat
pop
or
dec
es
jecxz
mov
or
fdivrs
rcr
xchg
stc
mov
mov
es
rorl
lret
fbld
sbb
and
insb
dec
insl
xor
loop
cmc
push
in
in
sub
mov
xlat
je
and
xchg
inc
pushf
dec
mov
call
mov
xchg
push
add
arpl
sbbb
dec
shr
shlb
dec
mov
adc
xchg
mov
push
mov
test
je
mov
or
sbb
in
inc
sub
fldl
lock
pop
dec
jmp
push
or
les
in
test
mov
aaa
mov
lods
and
cmp
aas
jmp
lcall
mov
xorb
xor
mov
lcall
and
mov
or
jle
dec
pop
xchg
out
jmp
jg
loop
pop
fldt
roll
jno
add
loopne
orl
pop
xchg
jmp
stos
or
in
cmp
aad
cwtl
push
jle
mov
xor
xchg
arpl
loope
push
or
inc
arpl
pop
add
push
mov
inc
rolb
pop
adc
imul
sti
outsl
in
outsw
xor
repz
sub
int
sub
js
cwtl
sub
out
add
ja
dec
das
inc
and
jge
jmp
lock
adcb
shll
repz
xor
out
jge
push
mov
in
repnz
cltd
push
in
stos
out
jne
xlat
or
adc
dec
das
or
ljmp
ret
cmpsl
and
push
xor
and
int3
and
pop
ret
and
pop
pop
out
mov
stos
leave
xor
adc
push
orb
loopne
outsl
and
push
test
mov
dec
mov
add
sbb
cmc
pop
inc
test
xchg
stos
sub
xor
adc
pop
insl
scas
out
xchg
pop
pop
mov
jnp
fldt
and
and
adc
cmc
shll
test
dec
dec
pop
inc
std
mov
scas
fdivrp
mov
pop
push
push
jb
or
sbbl
add
pushf
cld
enter
in
cli
adc
popa
push
je
inc
rcll
cmp
mov
cli
imul
mov
mov
sub
mov
jge
pop
test
fldt
mov
add
imul
push
pop
sti
jecxz
xor
push
jno
rcrl
mov
sarb
test
fisttps
add
sbb
push
andl
jno
sbbb
mov
cmp
adc
lea
jns
mov
imul
sti
inc
test
sub
mov
cmp
orb
sbb
popa
sbbl
adc
movsb
aam
sbb
sub
cmc
pop
dec
lods
inc
mov
inc
xor
cmp
enter
mov
mov
mov
enter
xor
aaa
ret
xchg
mov
and
cwtl
xlat
dec
pop
test
xchg
vmread
out
sub
mov
gs
xor
scas
push
jle
ret
mov
dec
mov
lret
adc
mov
fsub
test
dec
or
jb
outsl
int3
insl
iret
ja
mov
pop
sub
sbb
vcomiss
fwait
xlat
jne
pop
arpl
or
das
cmpsl
push
test
je
pop
and
sub
inc
dec
out
ljmp
popf
jbe
inc
orb
lea
data16
aaa
mov
jo
sub
ss
pop
xchg
lcall
adc
jmp
and
fidivl
rolb
inc
imulb
pop
test
cmpsb
or
xor
mov
mov
cmc
push
mov
jb
and
or
jmp
xchg
call
jmp
jecxz
adc
roll
mov
sbb
adc
mov
jbe
ret
rcl
aam
int
jo
jb
cmp
pop
nop
inc
xor
sbb
out
aam
mov
cmp
or
leave
fcoms
insl
cmpsb
icebp
xorl
xlat
fucomip
push
xchg
inc
mov
add
lock
bound
inc
test
fsubl
fwait
pop
std
je
add
and
push
insl
jge
fs
mov
aaa
adc
sti
mov
push
loope
mov
in
lret
pop
sbb
fsubs
stc
adc
mov
mov
cmp
pop
in
lock
xor
rorb
or
xor
fimull
inc
add
xchg
dec
cmp
pop
xchg
lock
mov
or
ret
in
in
xor
std
scas
jns
icebp
adc
outsl
pop
push
repnz
imul
dec
push
outsb
pop
cmp
cltd
pop
jb
aas
je
scas
adc
loop
cmp
in
sbb
or
rcrl
or
xchg
pop
lea
or
pop
jecxz
inc
sarl
push
lret
lods
dec
fcoml
cmp
push
jecxz
push
pushf
in
fsubr
mov
divb
pop
pushf
or
push
xor
into
inc
mov
jmp
int3
sahf
lcall
lret
lret
aad
pop
sbb
jge
xchg
mov
and
cs
push
xorb
dec
inc
mov
rclb
lods
cltd
lcall
mov
mov
mov
push
push
test
pop
inc
ds
inc
rcrb
xchg
mov
ret
leave
nop
data16
dec
and
sub
je
lea
jnp
adc
test
clc
push
pop
stos
inc
mov
mov
push
test
bound
aad
pop
fwait
mov
dec
lods
out
mov
xchg
movsb
shll
jnp
lods
not
mov
sub
inc
addl
push
test
dec
sub
mov
xor
xor
cltd
push
mov
insl
pushf
push
fadd
pop
add
in
mov
mov
jl
jo
cmp
mov
in
cwtl
sar
pop
mov
sarb
cmp
clc
push
adc
cmp
aam
pop
fwait
aas
xchg
adc
push
mov
sbb
lea
push
adc
push
jecxz
mov
fimull
adc
push
outsb
xchg
fwait
mov
sbb
sub
jns
mov
loope
in
fbld
fwait
push
lds
testl
lds
loop
sbb
leave
push
lret
mov
lret
les
push
mov
jnp
stos
sbb
dec
scas
push
mov
jb
mov
jmp
sbb
divb
lods
xchg
ret
rclb
and
xor
imul
pop
je
lret
gs
mov
lock
hlt
dec
inc
repnz
inc
nop
out
mov
xchg
sub
movsb
fsubrs
adc
mov
out
add
xchg
lods
data16
insb
cli
mov
js
xchg
data16
les
in
aad
push
in
sbb
mov
jge
xchg
push
lret
sbb
jbe
add
rcl
popf
add
pop
xor
out
mulb
mov
jo
lock
jge
jp
hlt
xchg
push
out
or
lret
xor
dec
inc
pop
or
pop
out
leave
das
and
je
clc
ss
push
pop
cmp
pop
popa
mov
fcmovnu
push
out
mov
cmp
lock
in
rolb
sbb
push
cmp
cmp
sbb
es
adc
sbb
or
or
and
fistps
pop
es
fsubp
sbb
xor
test
loop
inc
xchg
dec
repz
minps
xor
pop
arpl
jmp
jb
hlt
add
js
jmp
iret
jmp
pop
dec
fwait
loope
std
mov
cmp
leave
mov
pop
cmp
enter
sahf
repz
mov
add
mov
pop
inc
loope
imul
int
mov
std
sbb
push
sbb
inc
push
pop
xor
dec
sbb
aas
loopne
sub
ljmp
cmp
divb
aam
je
bound
mov
es
and
add
bound
fimull
icebp
xor
push
and
adc
sbb
sbb
adc
call
cmp
jnp
cmp
jl
xchg
and
pop
and
push
das
fsqrt
sbb
or
stos
ret
xchg
nop
xor
lods
test
mov
and
dec
cmp
test
jl
dec
mov
stos
and
dec
rorb
push
xchg
push
inc
repz
dec
dec
test
hlt
mov
push
in
sti
jmp
dec
rcll
sbb
pop
xchg
jno
add
sub
xchg
loope
mov
add
mov
and
aad
inc
in
rolb
addr16
fdivs
cmp
mov
inc
stos
mov
out
inc
adc
incl
dec
addl
mov
popf
lcall
jge
insb
xlat
mov
fdivrs
nop
dec
movsb
add
mov
scas
pop
cltd
outsb
sbb
jg
mov
push
mov
out
xchg
and
pusha
lods
xor
jne
mov
stos
clc
or
fisubrl
ds
cmp
fcompl
fs
add
mov
xchg
and
std
lcall
lock
out
sub
rcrl
cmp
loopne
repnz
mov
and
je
lret
jno
xchg
mov
enter
sbbl
in
pop
jo
jecxz
in
test
pop
jg
pop
cmp
mov
push
push
mov
call
dec
cmp
cmp
cmp
pop
jnp
or
call
mov
xchg
sub
leave
or
ja
jp
mov
int
pop
cmp
cltd
fs
mov
pop
xchg
pushl
sahf
test
xor
cltd
xchg
sub
movsl
cli
enter
pop
mov
lahf
inc
ret
sbb
jo
cs
and
dec
sub
lahf
cs
cmp
push
mov
clc
pop
mov
cmc
lret
push
xor
jo
andb
fsts
mov
popf
sub
out
jae
mov
insb
or
jle
fcomip
pop
sbb
jmp
sahf
dec
and
add
pop
popf
pop
adc
inc
add
hlt
movsl
pop
pop
jb
and
xchg
push
jo
sti
fs
repz
add
adc
push
sub
rcll
xchg
mov
pop
and
mov
int
xlat
in
fwait
mov
dec
adc
ljmp
stos
popa
mov
loop
xor
enter
dec
jecxz
fs
jae
add
jno
push
add
in
cmpl
int
mov
in
mov
and
add
cmp
dec
loope
jbe
pop
or
dec
or
cmp
fimull
dec
lods
cwtl
push
or
das
mov
adc
leave
ds
adcl
sub
mov
or
js,pn
or
repnz
jnp
mov
movsl
cs
ret
xor
jae
insl
mov
inc
sbb
fcomp
adc
push
shll
jne
sahf
xor
cmpsb
imul
add
push
scas
hlt
sub
movsb
or
push
jmp
movsb
pop
and
xchg
cli
insb
push
outsb
add
jmp
cltd
mov
sub
sub
xor
movsb
adc
push
pop
or
loop
fnstenv
cmpl
sbb
push
scas
scas
imul
dec
out
aas
xor
imul
aaa
imul
pusha
add
adc
cmp
sti
fcmovnb
mov
adc
mov
mov
xor
test
mov
pop
ffree
je
sub
cmp
loopne
or
test
out
es
insb
xchg
adc
and
imul
cs
cmp
stos
jge
cmp
loope
lcall
jno
pop
fimull
cltd
not
sbb
mov
push
out
add
add
pop
pop
or
fnsave
mov
pop
cmp
mov
xor
lret
or
or
push
cwtl
out
shlb
or
and
inc
ljmp
cmpsl
sub
andb
inc
push
jp
xor
dec
cs
shrl
fsubr
xchg
cmp
jmp
inc
or
pop
push
push
push
lds
jmp
xchg
xor
in
pop
dec
push
pop
push
xor
test
and
or
out
rcrl
cmp
xchg
lods
mov
adc
mov
in
loope
and
cmpsb
inc
cmp
jge,pt
adc
fldl
addr16
push
pop
lret
orb
sub
notl
push
push
xor
and
lret
push
lds
loope
adc
jo
scas
xor
mov
dec
dec
xor
out
scas
jnp
jmp
jbe
clc
addr16
mov
pop
mov
inc
sbb
insb
add
mov
fisttpl
cmp
xchg
jnp
push
adc
dec
daa
scas
into
sbb
aaa
xor
lods
arpl
int3
cmp
add
sahf
inc
cmc
fcomps
push
add
adc
loopne
xor
adc
pop
outsb
inc
sbbb
mov
jl
push
sub
test
fildll
lcall
add
fldt
pop
xor
xchg
mov
add
jg
mov
out
pusha
insb
pop
das
fidivl
jns
dec
cmp
sub
sahf
mov
hlt
outsb
mov
push
fcoml
ror
ss
or
inc
sbbl
call
pop
sbbl
pop
cmp
pushf
dec
mov
or
pusha
push
mov
cmc
xlat
filds
jae
xchg
mov
in
mov
inc
cmp
jns
mov
mov
lret
push
ss
adc
sub
adc
gs
cmp
mov
xlat
sub
jae
push
mov
inc
out
in
jle
and
mov
lods
movsb
cmp
mov
gs
mov
xchg
jle
adc
pop
jbe
lcall
mov
in
xchg
lock
push
les
lods
mov
jg
or
aam
int3
adc
stc
je
testb
insl
bound
aam
ds
inc
mov
add
add
mov
pop
cwtl
mov
roll
cmp
jb
pop
jg
ljmp
insl
pop
into
lret
gs
fstl
jp
icebp
adc
jnp
jne
adcl
add
psraw
scas
addb
jmp
mov
or
mov
sahf
pop
jae
loop
scas
jp
ss
aas
dec
clc
cwtl
outsb
push
jbe
popf
mov
xchg
dec
push
push
mov
shlb
movsl
lds
xchg
mov
adc
xor
dec
repnz
mov
lea
add
or
sbb
movsb
imul
mov
stc
pop
adc
fimuls
jmp
bound
out
mov
das
push
or
stos
xchg
out
mov
jg
push
repnz
add
pop
push
rorl
ja
out
mov
leave
cmp
nop
pop
pop
dec
mov
gs
jle
loopne
or
int
dec
aam
lock
xchg
cmp
push
movsl
pop
aam
push
into
icebp
cmc
sti
lret
dec
lret
jge
sbb
shl
jmp
cmp
inc
addb
xor
sub
insl
and
nop
jae
fimuls
dec
cli
sbb
cmp
sbb
sub
adc
lret
shr
sahf
pusha
push
mov
gs
call
adc
cmp
hlt
push
cmp
movsl
add
lea
psubsb
ss
jle
lahf
insb
sub
jmp
test
lock
shr
mov
shlb
fidivs
aaa
pop
dec
cmp
mov
push
inc
gs
pop
mov
push
cli
or
out
fsubrs
bnd
cs
mov
inc
jns
and
jb
push
mov
adc
and
loopne
xchg
call
cmp
aad
pop
dec
and
ss
sbb
lods
movsb
jbe
sub
mov
pop
shrl
daa
pop
test
jne
fcompl
das
ljmp
xchg
jbe
fbld
push
out
out
out
sbb
stc
mov
push
mov
addr16
pusha
fistpl
fadds
jg
adc
or
in
mov
clc
jb
lods
inc
subb
outsb
mov
mov
lods
mov
movsl
mov
push
cmp
adc
sbb
ss
inc
cmpsl
cmp
cmp
fwait
mov
mov
stos
cmc
mov
scas
xchg
cmp
nop
loopne
hlt
pop
imul
rcrb
data16
leave
xchg
pop
lret
mov
pop
aas
xor
cmp
sub
mov
out
or
out
into
sbb
roll
and
cs
mov
clc
cs
imul
add
mov
push
push
sbb
in
inc
in
cmp
cld
dec
ljmp
xchg
pop
in
imul
pop
lods
popf
xchg
or
scas
shrl
and
xor
jae
pop
mov
jp
fidivrs
hlt
inc
xchg
roll
adc
rcrb
xchg
add
cmp
sti
gs
std
cmp
push
xor
jnp
xchg
sbbb
rclb
push
xchg
and
cld
add
jge
dec
iret
fldt
shr
mov
stc
cmpsl
int
push
pop
and
jno
ljmp
mulb
daa
jmp
pop
sub
sub
cmp
cmpl
sub
cwtl
popf
shl
jp
fisubrs
int3
icebp
mov
arpl
add
mov
push
insb
and
dec
cltd
xor
test
ja
pop
add
test
enter
add
inc
test
xor
push
adc
scas
xor
push
les
adc
jo
mov
stos
incb
popa
ss
add
pop
xchg
fmull
imul
sti
mov
inc
lods
add
ret
adcb
push
xchg
mov
and
and
fs
dec
into
xchg
inc
mov
outsb
leave
loopne
repz
jle
shl
in
dec
bound
push
fnstenv
shr
rorl
stos
int
enter
popf
sbb
xor
cmpsl
mov
dec
add
push
xchg
cli
sti
sbb
aad
jns
in
lods
out
loopne
clc
push
xlat
fisubrl
je
mov
push
jae
test
and
nop
xor
in
mov
leave
add
popa
inc
mov
mov
sub
out
inc
mov
push
jl
jns
les
pop
stos
inc
dec
andb
in
mov
loopne
pop
pop
shr
out
push
les
nop
aam
xchg
je
sub
dec
inc
xchg
push
fldt
cld
enter
hlt
jle
dec
push
push
add
sub
jbe
aad
mov
fdivl
cmp
adc
jge
inc
fs
pop
ss
mov
and
jmp
mov
dec
and
shrb
sub
sub
fsubl
sti
hlt
sahf
push
dec
sub
bound
or
mov
inc
inc
xchg
sub
adc
or
sti
fidivrl
add
mov
aaa
mov
into
xor
push
js
pop
arpl
shl
lods
dec
sti
roll
adc
loopne
sub
or
adc
scas
inc
jnp,pt
shrl
pop
lods
pusha
xor
xchg
xchg
xor
subl
push
mov
es
sub
jle
pop
xlat
xchg
cmp
pop
orb
out
pop
and
and
cmp
mov
icebp
push
arpl
push
cltd
pop
loop
mov
push
into
jp
inc
xor
outsb
aam
pop
in
mov
aam
xlat
dec
bound
push
pop
sub
xor
push
push
pop
rol
imul
mov
push
push
push
test
inc
rol
andl
add
clc
lea
mov
pop
hlt
inc
xchg
shl
jl
mov
in
inc
outsl
stc
mov
call
jp
pop
ret
adc
cmpsl
adc
mov
fdivrl
mov
xchg
push
ds
adc
mov
xor
stos
aas
push
imull
jle
cwtl
inc
insb
aad
mov
inc
pop
arpl
push
repz
loop
in
aad
sub
jae
dec
adc
adc
cli
mov
rolb
sbb
nop
pop
mov
mov
or
xor
jecxz
pop
push
push
lret
push
arpl
pop
mov
or
test
sar
adc
pop
xchg
or
mov
leave
pop
add
dec
call
xchg
movsl
xchg
in
out
in
push
mov
mov
lods
or
inc
lahf
and
cmpsl
mov
mov
xchg
movsb
push
push
nop
sub
xor
mov
add
mov
push
adc
out
or
mov
adc
jg
outsb
sub
sub
cmp
sub
scas
lea
sbb
cmp
push
xor
hlt
es
fs
cmp
sbbl
lods
adcl
push
shlb
das
push
cwtl
dec
jno
outsl
inc
push
pop
inc
lret
mov
jne
push
pop
xchg
mov
pop
mov
pop
jle
stos
test
lret
loop
and
mov
out
xchg
xor
mov
sub
mov
pop
into
insb
cmp
fldenv
pshufw
or
test
add
repnz
int
cmpb
movsl
imul
ret
cwtl
ds
out
cmpsl
mov
in
sbb
sti
add
sub
rcll
mov
push
mov
not
mov
lods
pop
lods
jb
sub
pop
push
in
pop
xchg
xor
scas
pop
sub
das
cmpsl
in
cmp
movsb
xor
xor
jno
call
inc
fidivs
das
mov
jle
push
dec
movsb
movsb
sti
and
bound
inc
dec
pop
add
jne
out
out
sbb
xchg
enter
mov
dec
je
cmp
xor
cmp
or
pop
adc
pop
pop
sub
movsl
pop
xchg
and
xchg
imul
movsb
mov
clc
lds
stos
daa
add
cmp
jp
and
ret
and
shr
adc
push
xorb
pop
dec
fimull
outsl
pop
cmp
test
dec
or
imul
and
outsb
and
cltd
ja
xchg
jge
addb
popf
dec
mov
sbb
sbb
mov
adc
pop
xor
out
adc
jle
gs
movsl
push
xchg
lods
hlt
xchg
pop
mov
adc
fsubrs
cmc
cmc
jnp
daa
fimuls
fimuls
dec
daa
hlt
test
loopne
test
outsb
pop
xor
jo
lahf
jmp
loopne
xchg
mov
push
xor
adc
stc
fcomip
push
mov
or
mov
cmpsb
cld
rcrb
adc
xorb
imul
loop
fwait
adcb
push
test
inc
lock
add
repz
cld
in
dec
mov
lea
out
sahf
and
xor
pushf
int
fdivl
and
addl
mov
lods
lcall
fidivl
cs
lahf
daa
cld
repz
outsl
jnp
leave
das
jmp
push
mov
jo
ja
push
dec
cmp
jno
jo
movl
push
add
stos
idivb
jmp
or
adc
lea
sbb
mov
test
sarl
mov
stc
outsl
push
bound
shrb
mov
loope
and
test
inc
dec
aas
jnp
hlt
add
aad
test
xchg
addb
hlt
lahf
add
xchg
push
dec
push
mov
jl
adcb
popa
xchg
xchg
repnz
or
fidivs
inc
xchg
or
sbb
add
or
push
or
cmp
push
outsb
in
imul
adc
imul
mov
int
lods
cltd
fistl
cld
and
pop
ds
mov
sbb
dec
dec
lcall
lock
pop
push
ds
fcmovu
mov
loopne
push
je
jnp
cmc
scas
lea
xchg
jbe
mov
mov
in
nop
aad
adc
movsb
cld
int3
sahf
rclb
mov
movsb
xchg
pmullw
push
xchg
imul
push
add
jo
mov
test
add
mov
jne
jle
xchg
dec
mov
out
cltd
sub
jo
imul
cmp
aam
adcl
cs
pop
sahf
loop
loop
and
addr16
iret
into
xchg
and
imulb
add
xadd
test
je
adc
inc
sub
mov
ss
cld
in
push
nop
std
fstpl
cmpl
subb
es
cmpl
jns
jae
notb
ret
movsl
arpl
test
inc
push
xchg
push
cmp
leave
mov
sbb
push
mov
and
leave
jb
bound
sbb
jmp
inc
add
test
mov
jmp
mov
cwtl
inc
jno
mov
out
cmp
dec
add
shrb
pop
cmp
pop
scas
dec
xchg
lods
mov
inc
mov
enter
shr
lahf
mov
mov
add
sbb
mov
and
ljmp
fstpl
cmpsb
sbb
lock
pop
ljmp
mov
or
mov
jbe
jp
mov
dec
ret
lahf
adc
ja
jns
push
mov
xor
mov
sti
test
mov
cmp
inc
stos
arpl
push
lcall
add
mov
mov
hlt
insb
cmpsl
mov
push
cmp
mov
aaa
mov
cltd
mov
sub
lea
sub
mulb
lret
xchg
dec
imul
ss
into
pusha
inc
xor
fadds
mov
mov
mov
dec
sbb
or
add
jmp
stos
sarb
out
inc
cld
add
mov
inc
mov
mov
into
dec
ficoml
fists
pop
jbe
pop
shll
lcall
aaa
cmp
ljmp
sbb
sub
cmpsb
mov
mulb
adc
mov
push
push
test
movsb
or
cmpsl
or
fidivs
sbbb
lock
fildl
sub
add
movsl
adc
sbb
add
add
lods
outsl
mov
testb
in
movsl
xchg
rcrb
mov
idivl
aaa
leave
cld
bound
mov
xchg
sbb
out
lods
int
sti
ficomps
adc
add
insl
incl
sub
in
shl
in
movsl
mov
imul
jbe
add
inc
sti
popa
test
and
call
sbb
lods
jl
cmp
jge
aad
push
mov
insl
mov
lea
pop
mov
adc
icebp
loopne
stos
mov
mov
cmp
out
loopne
cmp
in
cmp
cld
orb
subb
in
notl
xlat
cmp
les
push
sarb
in
xor
pop
int3
push
loopne
pop
cmp
add
rcr
adc
aad
ret
imul
jle
jge
mov
jb
sti
dec
cli
fmuls
xchg
mov
orl
fnstenv
std
xchg
cli
ljmp
or
movsb
popf
cmp
bound
mov
ret
adc
fucomi
jne
and
jmp
xchg
popf
clc
push
stos
aas
into
or
jbe
in
sbb
ds
cmp
inc
idivb
mov
jb
cmp
arpl
test
lods
in
mov
jae
jecxz
jno
test
aam
xlat
jecxz
popf
pop
test
xor
push
sub
inc
ss
xchg
roll
dec
clc
sbb
sub
jp
les
sub
mov
adcb
pop
add
js,pn
cmp
and
push
imulb
insl
lcall
mov
out
xor
push
sub
jno
call
dec
mov
push
jo
mulb
xor
ficomps
mov
fsubrs
roll
jecxz
push
into
mov
mov
les
inc
or
inc
sub
mov
dec
add
repz
sahf
push
adc
int3
ror
fdivrs
test
push
movsl
push
cs
push
divb
xor
lahf
cmp
jmp
jmp
dec
pop
inc
inc
xor
xchg
clc
mov
mov
jb
lea
adc
mov
dec
cmc
jmp
sub
aam
lds
mov
or
loopne
dec
mov
sbb
cmp
rcll
push
inc
es
mov
and
inc
outsb
add
dec
and
jno
aas
icebp
and
lahf
mov
lods
cvtpi2ps
sub
pop
pop
jo
roll
jecxz
fmull
mov
xchg
out
jg
enter
pop
call
mov
adc
inc
jo
sub
cmp
test
mov
loope
sub
sysenter
pop
xor
popa
out
jle
adc
rol
or
or
shll
pop
push
push
repz
fisttpll
cld
sub
or
lods
dec
out
shl
xchg
pop
mov
test
xor
pop
ror
ds
mov
imul
inc
dec
xchg
jbe
daa
je
mov
cwtl
jne
fnstcw
pop
jbe
aaa
xchg
test
into
test
aas
xchg
and
sub
jmp
inc
xor
mov
aam
add
push
or
jae
and
push
push
sub
pop
mov
mov
cmp
jp
push
pusha
rcrb
add
in
mov
or
cmp
cmp
mov
cmpsl
je
outsl
inc
mov
ljmp
pop
ljmp
cwtl
imul
cmc
je
pushf
pop
mov
push
xor
mov
fidivs
flds
xor
popa
dec
push
and
adc
xor
leave
push
push
fldenv
mov
adc
or
stc
jecxz
cmp
lea
cli
cwtl
movsl
fidivs
cltd
jg
out
scas
xchg
pop
ret
je
aad
xor
sar
cmpsb
mov
aam
mov
mov
je
mov
and
aas
add
dec
push
push
test
insb
jnp
fwait
dec
sbb
push
and
inc
xor
add
in
add
mov
add
push
fnsave
movsl
arpl
lea
imul
pop
push
loopne
imul
loop
mov
mov
pop
adcb
dec
pop
mov
fstl
aaa
rcrl
movsb
icebp
aad
and
mov
pusha
jmp
xor
lea
dec
xorb
pop
pushf
inc
inc
pop
jl
out
lahf
jns
sbb
adc
pop
xchg
mov
lret
dec
push
mov
adc
jne
pop
aas
dec
clc
lods
ds
sbb
pop
ret
in
jg
arpl
insb
test
pop
iret
and
sub
inc
out
or
je
mov
pusha
mov
ss
out
outsb
jbe
dec
rcll
adc
inc
xor
ljmp
out
and
xchg
fldcw
scas
and
sub
push
xchg
sbb
fcoms
outsb
ljmp
js
xor
mov
add
add
push
mov
aam
mov
int
pminub
and
ret
add
inc
xor
mov
adc
or
nop
and
mov
cld
pusha
pusha
ret
sbb
and
int3
cwtl
mov
mov
jae
jne
je
cmpsb
leave
imul
add
pop
mov
or
adc
xchg
sbb
adc
movsb
jecxz
faddl
push
out
lret
dec
jnp
inc
and
cmp
and
xchg
shrb
pop
push
addr16
fadd
push
or
imul
out
std
cltd
orl
mov
pop
mov
insb
jmp
add
dec
ret
iret
lock
testl
cmpsl
mov
cld
test
aas
pop
in
jmp
xchg
xlat
xor
cmpsb
sti
nop
add
jl
inc
mov
movsl
xor
inc
ret
mov
add
and
mov
movsl
sbb
push
xor
sub
add
xor
or
dec
mov
lret
mov
pop
fwait
jb
sbb
pop
jne
push
or
push
adc
adc
xor
in
mov
js
out
cmp
sbb
rolb
loop
inc
sahf
jno
pushf
dec
mov
dec
mov
pop
aam
dec
lods
stos
test
jo
pop
cmpsl
mov
jno
lods
mov
sub
and
jbe
test
mov
lods
xor
bound
mov
in
mov
repz
mov
loope
stos
dec
fwait
cltd
ds
test
add
push
add
dec
push
inc
mov
loopne
pop
movsb
jo
mov
ljmp
aaa
imul
sahf
pop
jg
mov
in
xor
push
push
push
ret
xchg
movsb
sahf
add
fucomp
pop
bound
iret
mov
cld
fcompl
stos
inc
pop
fs
jl
pop
mov
push
imul
push
repz
or
jecxz
cltd
add
and
sbb
in
inc
and
mov
iret
into
loop
lock
push
sti
cmp
aaa
pop
fs
pop
or
sub
leave
dec
mov
aam
pop
xor
in
outsb
sbb
pop
jb
pop
loop
mov
cli
lret
pop
out
ret
mov
adc
mov
rcll
mov
arpl
movsl
jg
iret
cmc
das
push
cmp
shrl
lcall
ret
jae
mov
cmp
jns
sub
rclb
jecxz
clc
xchg
jae
pop
xchg
push
shl
ja
loope
inc
jb
push
outsb
push
lahf
jp
fisubs
add
out
xchg
das
fdivl
popa
les
fcmovb
imul
xchg
and
push
ss
or
jno,pn
ret
jno
add
cltd
in
iret
int3
clc
and
and
xchg
sub
arpl
movl
push
inc
mov
mov
call
test
mov
in
pop
push
lret
sahf
push
fxch
push
outsb
and
xchg
jno
add
jae
cld
sub
xchg
push
test
sbbl
pusha
je
cld
mov
loopne
inc
inc
push
jns
fdecstp
mov
jle
shl
inc
sti
loop
test
xchg
mov
lahf
mov
mov
outsb
jno
cli
sarl
nop
inc
mov
arpl
jb
inc
and
and
in
lahf
dec
sub
or
jecxz
movsl
std
lret
dec
sub
nop
addb
or
popf
aaa
jp
jmp
jne
scas
xchg
repz
xchg
mov
cmp
fnsave
mov
or
cld
sti
mov
stos
sbb
test
push
fdivl
mov
add
lods
mov
adc
leave
adc
cmc
out
lcall
push
aas
imul
in
add
stos
leave
jg
inc
cmp
lds
adc
ret
cmp
hlt
rorl
pushf
or
jne
ret
dec
mov
sub
inc
popf
adc
dec
cmp
adc
xchg
imul
push
cmpsb
dec
pop
scas
jno
cmpsb
jne
lret
mulb
xchg
aad
cmpsl
shr
mov
lock
lahf
nop
and
xchg
push
les
fstpt
push
sti
or
jmp
xor
and
push
jo
push
pusha
mov
je
iret
push
pushf
scas
dec
stc
jae
xchg
aaa
xor
out
iret
insl
cmp
jg
repnz
inc
fst
cmp
lods
stos
das
stos
mov
mov
and
sbb
sti
outsl
icebp
imull
iret
and
shl
shrl
or
push
bound
push
dec
jb
pop
or
jmp
dec
movsl
inc
das
dec
sub
inc
push
mov
sbb
cld
jno
mov
out
shrb
test
into
xlat
add
inc
pushf
ljmp
pop
sub
sbb
pop
xchg
lret
jl
test
inc
or
addr16
push
push
sar
ljmp
jecxz
jne
mov
pop
push
push
sarl
lods
mov
rorl
sbb
in
jge
outsb
sub
fcoml
call
sahf
scas
sbb
jno
dec
jg
mov
ds
cmpsb
push
pop
je
loope
mov
sbbb
or
inc
adc
test
adc
daa
shl
psrlq
ret
push
loopne
insb
fisttps
xchg
xlat
iret
clc
add
into
or
or
and
xchg
loope
add
mov
push
rclb
rcrb
and
mov
cmp
scas
mov
stc
out
lods
inc
or
dec
call
mov
lcall
out
xchg
push
aas
xchg
cmp
andl
lods
sbb
mov
jg
pusha
pop
mov
in
pop
inc
lods
xchg
mov
daa
and
adc
or
gs
rcrl
out
jmp
push
repz
jnp
dec
adc
fs
fwait
ds
mov
jno
test
bound
inc
sbb
dec
bnd
loopne
dec
mov
lahf
mov
inc
and
mov
mov
repnz
adc
lods
cmp
fadds
add
pop
mov
inc
mov
pop
push
iret
push
sti
lret
shr
repz
pop
les
inc
mov
dec
jg
loopne
test
pop
popf
cmc
push
in
cltd
dec
scas
pop
xor
inc
push
in
popa
and
or
push
adc
cmp
mov
pop
test
push
fs
fmulp
push
dec
mov
ja
xchg
cmp
lods
daa
in
inc
test
jp
jle
mov
imul
rcll
cmp
fwait
push
sbb
repnz
mov
sarl
jo
mov
outsl
sbb
rcrb
mov
shll
iret
notl
mov
rorb
and
cmp
js
cltd
mov
xor
sbb
repz
ja
jmp
jno
fists
jnp
movl
cmp
fucomi
inc
mov
ficoms
mov
dec
test
subb
cld
movsb
fiadds
int
cld
xor
xchg
mov
fsubrs
xchg
mov
mov
insl
aas
test
jp
daa
fsubrl
lahf
cmpsb
xchg
and
std
sub
push
mov
addr16
ret
xchg
fnstenv
and
movsb
sbb
xchg
xor
push
shlb
repz
xchg
jge
shrb
clc
lret
fisubs
or
cmp
cmp
mov
movsl
rcr
add
sub
je
jns
jae
add
push
cmpsl
dec
sub
das
and
ret
mov
dec
adc
xor
inc
lret
add
frstor
test
or
mov
jmp
pusha
adc
xor
mov
stos
jmp
mov
insl
dec
fwait
xor
aaa
add
add
inc
leave
mov
mov
sub
jl
lahf
jg
inc
xchg
test
faddl
fstpt
or
in
ret
popa
jo
mov
inc
mov
ja
cmp
push
orb
mov
pop
adc
icebp
sub
mov
lods
mov
lret
cmp
add
mov
jno
test
test
lcall
gs
mov
scas
push
imul
fst
and
fs
ret
mov
inc
clc
mov
mov
xor
hlt
pop
stos
arpl
push
dec
test
imul
testb
push
mov
lock
push
sti
mov
pop
add
inc
shrl
in
and
sub
xchg
fwait
inc
test
cmp
xchg
mov
loope
repnz
insb
pop
cmp
pop
xchg
pop
std
pop
repnz
mov
test
xchg
jecxz
inc
mov
xor
int
xor
out
add
sub
out
shll
lods
movsl
jne
das
scas
xchg
fisubl
popa
popf
adc
call
and
scas
adc
push
and
jl
rcrl
inc
jg
idiv
test
inc
sbb
faddl
int3
mov
and
movsb
repz
ss
rcl
pusha
mov
sub
nop
sub
icebp
xor
xor
std
mul
pop
push
and
imul
and
fwait
or
icebp
dec
in
adc
imul
inc
adc
sub
push
mov
push
mov
mov
enter
mov
in
pop
enter
mov
ja
mov
imul
aam
cli
mov
insb
les
lods
aaa
pop
mov
cld
ret
in
pop
lods
popa
push
int3
mov
in
pop
dec
in
out
mov
push
sahf
or
xlat
stos
sbb
or
dec
adc
in
mov
jnp
jecxz
pop
rcrb
cli
dec
mov
jl
cs
lahf
cwtl
or
bound
adc
and
dec
push
ljmp
mov
test
jp
cli
call
mov
sub
movsw
xor
add
or
gs
movsl
lods
test
xchg
mov
repnz
mov
or
pop
int
aam
stc
in
fsubrs
and
out
lret
jbe
sub
push
add
popf
mov
push
stc
mov
out
xor
mov
or
andb
cwtl
and
mov
xchg
xchg
xchg
shl
ret
filds
sub
push
test
imul
jle
or
lock
pop
xchg
xchg
or
jne
movsl
aam
flds
repz
mov
mov
mov
jns
add
aaa
lods
shl
inc
or
aas
lock
aaa
test
pop
int3
ret
ss
xor
cmc
fidivrl
jmp
mov
mov
sub
popf
pusha
andl
sahf
arpl
mov
pop
insb
ret
xchg
out
add
mov
sub
pushf
pop
pop
aas
out
test
mov
xor
shrl
mov
outsl
add
aaa
nop
mov
push
cmpsb
xchg
inc
mov
pop
ja
shrb
outsb
cmp
ror
and
imul
adc
add
es
leave
sub
dec
sbb
js
mov
mov
jnp
cmp
or
or
cmp
int
xor
testl
sbb
ss
xchg
dec
xor
dec
pop
pop
xor
aad
jns
sbb
fisubl
cmp
dec
mov
pop
jl
mov
adc
decl
cmp
jg
or
divl
imul
dec
data16
dec
in
pushf
sbb
into
sahf
inc
outsl
movb
xor
cmp
pop
pop
dec
mov
out
sahf
iret
mov
sbb
fnstsw
mov
jl
loop
fnstenv
aas
mov
cwtl
int3
or
sbb
iret
and
repnz
sbb
push
mov
mov
insl
cmp
xchg
sbb
arpl
rol
fdivp
inc
add
pop
pop
iret
jne
rorb
sub
push
sbb
push
mov
into
and
fstl
das
xlat
popa
pop
mov
add
mov
xchg
pop
pop
movsb
cmpsl
into
repz
stc
or
adc
xor
ret
mov
sbb
in
push
cmc
pop
mov
into
int
push
scas
pop
std
jnp,pt
iret
or
mov
push
test
mov
fwait
sub
jge
pop
ds
stos
sub
sti
add
sbb
ret
push
xchg
or
sbb
jo
push
push
lds
iret
addr16
xor
mov
dec
jp
jns
jle
push
icebp
data16
scas
pop
cmp
lds
xchg
pop
inc
xor
or
push
popa
cld
mov
mov
rorb
push
sarb
pusha
dec
in
ror
bound
sbb
and
mov
xchg
cmc
test
cmp
jne
cli
es
xchg
dec
jno
jnp
test
pushf
jl
icebp
or
pop
rorb
add
fildl
push
lods
dec
pop
xchg
je
inc
push
aam
xchg
push
jle
lds
je
or
mov
mov
lret
rclb
mov
push
lret
mov
repz
inc
cmpsb
dec
cmp
jl
subl
xchg
adc
es
xchg
xchg
mov
jno
lea
leave
aad
sahf
rorl
jg
adc
mov
dec
icebp
jns
dec
shl
in
adc
jns
push
jl
sahf
mov
xchg
in
pop
xchg
cmp
loop
jp
push
rolb
dec
pop
jge
mov
mul
dec
ret
jne
ds
mov
push
cmp
loope
rorl
shlb
mov
bound
sub
mov
sarb
int
lret
sub
dec
and
cld
inc
or
cmp
mov
adc
das
and
cmpsb
mov
mull
je
ret
mov
orb
in
sbb
roll
push
dec
pop
adc
sub
and
jno
sbb
test
inc
nop
stc
push
sbb
call
ret
out
lock
sub
jge
mov
lock
fs
mov
mov
dec
sbb
stos
loopne
or
test
sub
in
mov
punpckhwd
fdivrs
sbb
jge
mov
lret
mov
jg
and
add
mov
leave
cmp
test
push
sahf
jp
ljmp
push
test
push
jp
push
xor
pop
cmc
lods
mov
pop
inc
sub
cmp
sbb
xor
insl
mov
loop
out
add
icebp
adc
xlat
stos
jle
movl
sbb
inc
pop
or
xchg
adc
xchg
mov
push
xchg
mov
xor
fs
jmp
push
sbb
test
jno
sbb
jge
leave
out
pop
lods
arpl
das
pop
pop
imul
xchg
stc
insl
jge
data16
pushf
gs
fistps
fstpl
xor
test
test
mov
data16
lods
jb
add
rorl
and
int
int
dec
sbb
data16
pop
sbb
mov
pop
ss
and
mov
mov
insb
dec
or
cmc
mov
movsl
inc
or
lahf
add
and
insb
mov
jge
or
outsb
aaa
cli
push
xchg
sbb
mov
xchg
jb
mov
fs
mov
dec
cmp
or
js
js
xchg
xchg
xor
mov
pop
inc
pop
mov
outsb
push
pop
xor
add
jns
stos
xchg
xchg
repz
cmp
sub
pop
dec
pop
cmp
cmp
out
dec
sbbl
xchg
testl
nop
sbb
imull
fistl
es
cmp
mov
inc
and
jne
test
jmp
sub
bound
adc
jp
mov
clc
bound
rorb
std
shrl
push
arpl
sbb
ss
adc
insl
sbb
or
push
jnp
xchg
or
pop
push
shl
insl
sub
std
mov
pop
add
jg
movsl
mov
dec
xchg
int
pop
mov
mov
sub
add
inc
sub
or
jb
loope
adc
jg
pop
nop
mov
adc
clc
mov
repz
fisttpl
call
pop
mov
and
popf
cs
stc
sbbb
jno
in
push
mov
xchg
fidivrs
inc
lcall
push
ljmp
movsb
xor
leave
ret
ds
lods
aaa
fmuls
std
popa
xchg
pop
jae
jo
fld
and
or
mov
cmp
cmovs
pop
push
mov
mov
aas
mov
movsb
lea
sub
mov
xchg
in
push
in
sysenter
in
pop
imul
test
push
xor
jno
or
cmp
mov
jno
loop
aad
mov
sbb
sahf
aad
sbb
aas
lcall
push
sub
dec
adc
sub
pop
repz
jle
adc
push
test
or
mov
jnp
dec
in
movsb
cmp
stos
inc
xchg
sahf
das
test
js
fsts
js
jmp
jle
xchg
scas
out
inc
or
cld
lret
aad
bndldx
push
xor
push
add
andl
rclb
movsl
mov
add
test
invd
pop
adc
mov
inc
lcall
jne
sub
mov
jo
mov
mov
jne
sbb
sub
mov
roll
adc
push
clc
jbe
scas
cltd
testl
push
decb
repz
dec
rcrb
scas
inc
rol
insb
lds
and
mov
lods
es
leave
sub
inc
cmc
es
imul
pop
jmp
into
hlt
xor
jecxz
xor
push
xor
ljmp
std
mov
mov
sbb
mov
pop
clc
cli
std
pop
out
push
pop
pusha
mov
xor
cs
mov
jle
jae
sbbb
rorb
cli
inc
and
idivl
cmp
push
pop
pusha
add
inc
int
loop
popa
in
mov
orl
test
imul
or
pop
push
test
push
jmp
popl
repnz
jnp
push
inc
cmpsl
push
add
jge
pop
popf
popa
mov
data16
add
push
out
xlat
ds
xorl
aaa
mov
call
imul
mov
and
xchg
pop
mov
fmull
out
hlt
cwtl
adc
insl
aaa
lods
fcomp
scas
pop
mov
repnz
pusha
push
dec
repz
jmp
jecxz
fisubs
pop
arpl
or
das
stos
scas
dec
adc
aam
xor
imul
or
mov
jne
js
iret
ljmp
imul
ss
sti
add
out
pop
sbbl
sbbl
add
scas
inc
push
xor
adcb
xchg
cltd
pop
dec
stos
nop
sub
and
nop
ss
lret
icebp
out
es
ffreep
rcll
bound
flds
cmp
jp
stos
mov
bound
insl
dec
dec
sub
push
aad
xor
in
movsl
pmaxsw
jnp
arpl
ja
adc
or
inc
bound
sbb
or
ficompl
out
sub
adc
int3
mov
sbb
push
aam
sub
lock
sti
test
fidivl
cld
adc
adc
sub
push
movsb
jb
adc
or
push
pushf
inc
sti
inc
mov
inc
mov
lret
ja
cmp
jmp
mov
pop
mov
les
cmpsb
and
mov
ds
pop
push
add
mov
cmp
arpl
ficoml
int3
scas
or
cli
adc
mov
cwtl
xchg
es
idivb
mov
and
movsl
fnstenv
push
outsb
cmp
xchg
adc
gs
test
or
cmp
cmp
jge
mov
in
mov
test
ss
ja
lahf
test
pop
xchg
filds
cmp
and
jg
in
dec
mov
mov
and
and
cmp
lods
scas
and
xchg
fistpl
xchg
mov
lds
in
lea
inc
push
out
mov
sbbl
xchg
sbb
sub
xchg
sahf
dec
mov
clc
popf
jno
mov
rol
jne
jnp
outsb
leave
push
cmp
repz
xor
stc
mov
int3
cmc
sub
and
test
cli
es
in
lret
ret
mov
inc
inc
xchg
fdivs
lea
gs
xchg
cmp
stos
sub
out
cmc
shrb
js
mov
inc
add
repz
shl
mov
loopne
or
mov
jmp
sub
mov
pop
xor
lods
push
xchg
xchg
sub
lods
push
cmp
sbb
pop
xlat
pop
and
push
shl
or
push
adc
shrb
ljmp
add
insb
lds
daa
lds
inc
push
sub
mov
cwtl
lcall
cli
rclb
aam
mov
faddl
cli
add
jp
dec
jg
arpl
ss
cmpsl
aam
ror
xor
js
or
xlat
into
xchg
pop
in
adc
mov
add
fsubrl
popa
dec
xor
push
jb
inc
stos
arpl
stos
cmp
sbb
xchg
cmp
push
add
orl
or
aas
xor
mov
cli
inc
jns
cmp
dec
xchg
sar
pop
sarb
insl
fwait
jno
ficoml
or
sarl
pop
jae
and
cltd
aas
and
xor
shlb
sbb
popa
cmp
cmp
pop
pop
dec
xchg
or
jns
ret
push
cmp
add
cmp
gs
pop
jle
mov
mov
mov
xor
dec
pop
lods
push
idiv
in
mov
not
push
insl
xchg
push
xlat
add
scas
xchg
les
pop
in
mov
push
mov
mul
pop
in
repz
add
inc
popf
mov
pop
pop
mov
or
mov
js
movsb
add
or
add
dec
sti
jecxz
gs
cmpsb
xor
fstl
aaa
adc
dec
cmp
push
hlt
sub
aad
sbbb
out
xor
scas
cld
test
xor
xor
cli
and
test
lcall
sahf
lret
jmp
jnp
loope
lret
out
mov
jo
mov
push
or
mov
insl
fidivl
fildl
xor
dec
xchg
xor
or
inc
loop
push
mov
mov
sbbl
xchg
adc
xor
js
sub
aas
bound
dec
lods
push
scas
adc
mov
and
negl
loop
test
in
ss
inc
pushf
and
lcall
lds
faddl
imul
cli
mov
sahf
loope
jecxz
pop
pop
sub
jae
push
and
mov
jle
sbb
pop
dec
lret
das
or
cmp
aaa
sbb
xchg
in
dec
movsl
repnz
dec
fwait
push
jae
addr16
xchg
lcall
sbb
jae
jg
jne
adc
rorl
pop
xor
ret
popa
xchg
loopne
xor
push
sbb
mov
adc
jnp
nop
mov
or
jmp
mov
insl
movsl
xlat
hlt
fwait
sub
jbe
int
add
mov
ret
jb
sub
mov
cmp
or
stc
stc
ret
jne
xchg
les
jg
adc
push
int3
cmp
mov
flds
iret
scas
add
cli
mul
scas
cmp
fadds
xorl
stc
aaa
cwtl
bound
aas
out
xchg
lock
cmp
or
shll
sub
int3
push
bound
mov
adc
mov
ss
test
lret
mov
jmp
ret
pop
jle
and
pop
mov
insb
inc
jle
push
inc
push
mov
mov
or
pmuludq
push
into
fisttps
jg
mov
fs
sbb
ds
ret
inc
lock
inc
rorl
xchg
xchg
xchg
bound
pop
cld
cmp
mov
addl
jb
dec
push
pop
sbb
aam
mov
out
pop
push
ljmp
and
mov
add
xchg
aaa
jns
xor
mov
test
sub
shl
adc
jle
xchg
std
fildl
or
xor
sub
adc
mov
push
lret
cmp
or
push
mov
shrb
mov
add
sarl
clc
mov
in
cmpsl
femms
push
push
dec
dec
repnz
pop
adc
lret
push
xchg
or
jno
mov
add
push
mov
test
int
or
into
push
enter
or
inc
pop
imul
negb
out
push
inc
or
into
push
and
pusha
push
scas
aas
xchg
inc
andb
dec
dec
fwait
dec
xor
sub
cmc
mov
pop
rolb
xor
nop
sbb
fdivr
mov
insb
insl
pop
mov
cmp
and
adc
push
enter
orb
mov
adcl
mov
xchg
ret
loope
ja
loop
lahf
push
mov
ret
add
enter
popa
lods
call
mov
push
lods
mov
xor
scas
jmp
and
mov
clc
xchg
lret
sarb
inc
inc
ljmp
jmp
cmp
leave
and
adc
xor
add
out
daa
fstpl
push
adc
int
mov
imul
testl
idiv
fdivr
insb
nop
shrl
aaa
fs
bound
shr
lock
mov
sbb
mov
out
mov
fwait
movsb
pop
into
pop
lds
std
cld
jl
loop
dec
hlt
cltd
std
pop
inc
xchg
add
or
sub
adc
outsl
sub
push
dec
les
movsb
in
loopne
test
adc
adcb
adc
ljmp
fidivrs
clc
insl
jmp
jne
test
and
jb
push
fistpl
jo
jae
adc
icebp
add
mov
mov
pop
lcall
sbb
mov
leave
mov
push
repnz
andl
push
or
mov
dec
add
iret
mov
leave
xchg
cs
fsqrt
cmp
xor
fisttpll
jns
cli
dec
and
cmp
int3
pop
mov
daa
mov
popf
lret
mov
mov
mov
lock
loop
jns
aaa
jg
mov
icebp
and
push
pop
cmp
jle
pusha
add
sbb
data16
dec
das
cld
ljmp
imul
rolb
pop
cmp
mov
mov
mov
jl
repz
ja
push
icebp
mov
ss
ret
jae
jg
mov
pop
addr16
push
push
out
mov
ficomps
scas
sub
scas
xchg
dec
adc
movsl
sahf
inc
jg
mov
ror
inc
fs
push
dec
adc
dec
mov
loopne
xorl
ja
sbb
fsubp
mov
cmp
jmp
dec
cmpsl
jmp
sbb
jmp
aas
jae
aad
sbb
dec
roll
dec
imul
fistps
adc
xlat
add
fwait
push
xorl
jno
hlt
ret
jnp
mov
repnz
repz
ror
outsb
pop
pushf
fnstsw
fwait
pop
fcomps
movsb
pop
dec
xor
aaa
lret
push
xchg
lret
mov
sahf
pop
mov
das
inc
xchg
out
mov
pop
lret
dec
leave
aas
and
test
mov
and
xchg
aad
int
dec
out
popf
repz
push
cld
loope
pop
incb
inc
mov
fs
leave
push
or
sbb
jp
out
jp
jns
add
and
fistpl
push
nop
idivl
out
and
push
fisubrs
test
fsub
pop
mov
lret
int
add
es
test
sub
pop
mov
scas
stos
mov
sbb
adc
mov
mov
mov
fwait
cmp
jnp
push
stos
cmp
push
adc
loope
lahf
inc
or
test
out
das
call
pusha
insb
dec
test
data16
mov
shrb
pop
jg
sbb
imul
subl
into
dec
sbb
mov
push
std
adc
les
lods
jmp
movsb
icebp
add
mov
daa
mov
jae
push
mov
and
sub
jecxz
nop
sbb
hlt
enter
popf
xor
aaa
popw
pushf
adc
fisttpl
mov
lahf
inc
jge
dec
sub
movsl
pop
cmp
scas
lock
js
pop
adc
cli
sti
xchg
aam
cmc
mov
or
jo
adc
test
and
jb
loope
mov
in
nop
sbb
lret
cmp
mov
jns
icebp
jae
into
push
sub
or
movsl
fucomp
push
mov
jp
push
inc
jns
out
fstpl
jecxz
add
int
insl
incl
movsb
jb
or
out
mov
pop
movsb
lods
mov
pusha
scas
sub
test
mov
enter
imul
imul
sti
das
or
mov
out
pushl
mov
inc
mov
adc
jnp
add
mov
jne
xlat
add
movsl
ret
lcall
mov
mov
lods
outsb
cli
cmp
loope
jl
adc
cmpsl
pop
and
mov
ss
js
jae
shll
ss
inc
lods
fisubs
and
sbb
in
push
xlat
ds
out
stos
push
mov
xchg
ds
clc
sub
mov
mov
and
add
xchg
pushf
inc
xor
or
mov
dec
and
inc
insl
pop
add
jge
cmp
jecxz
jae
shll
sar
je
ret
dec
dec
push
and
lret
sbb
loop
in
adc
add
push
imul
push
jae
ret
adc
and
icebp
jo
inc
sub
push
notb
xor
or
mov
andb
cmc
clc
fstpl
cltd
mov
imul
stc
inc
sbb
jno
or
data16
add
ret
push
inc
pop
or
into
jecxz
cmovl
and
repz
pop
sub
in
xchg
cmp
sub
aaa
xor
adc
jno
out
cmp
lods
movsb
in
add
mul
clc
sub
jecxz
fiaddl
cmpsl
pop
cmp
bound
sarb
push
clc
movsl
ja
pop
rcrb
sub
pop
std
int
nop
push
fsubrp
fwait
push
jno
adc
decl
push
xchg
out
cmpsl
jne
mov
in
cmc
fsubrs
movq
jb
cmp
xor
jle
lret
pop
std
rcll
or
mov
mov
adc
mov
sarl
mov
xchg
loop
jnp
jb
push
jae
out
call
loop
cmp
je
push
jae
in
adcl
shll
pop
cmp
notl
test
out
ljmp
jae
add
inc
mov
std
dec
adc
add
test
xor
shll
shll
xchg
shrl
push
inc
push
inc
lea
lock
fidivrl
movsl
xor
xchg
xorl
frstor
add
xor
sbb
push
imul
cmp
imul
movsb
pop
lea
mov
jne
ficoms
jo
sbb
sub
out
lds
mov
repnz
xchg
orb
outsl
cmp
jne
jns
pop
jecxz
pop
shl
jnp
cwtl
in
fisttps
dec
sbb
fstps
pop
aas
scas
or
in
cmc
hlt
mov
shll
inc
shll
das
out
es
cmp
jge
outsb
fwait
xchg
hlt
ds
fstpt
in
aam
in
getsec
jecxz
jb
movsl
and
jnp
in
test
mov
sbb
xchg
outsl
mov
ljmp
fs
mov
xchg
sti
dec
mov
mov
cli
push
dec
mov
cltd
push
jp
out
mov
test
mov
jl
inc
adcl
ds
jmp
icebp
mov
les
push
or
popf
sar
test
insl
and
in
or
jg
loope
fidivl
add
xor
adc
mov
es
shrl
setbe
or
loop
fisubrl
cs
jge
enter
mov
pushf
mov
cmp
fidivrs
imul
xchg
jge
ss
xchg
sub
bound
cwtl
mov
add
inc
mov
push
mov
jmp
ljmp
aaa
mov
xor
jg
xchg
inc
jecxz
repz
inc
pusha
mov
fwait
pusha
pop
add
arpl
xorl
and
mov
aad
iret
add
push
insl
add
ror
ds
cmp
shrb
sub
stc
jae
aam
cmp
and
int3
adcb
test
cltd
out
addl
int
push
stos
inc
mov
mov
xor
cmpsb
cmpsl
outsl
dec
loop
ljmp
jmp
mov
add
push
or
fnstsw
rolb
popa
adc
inc
shlb
mov
inc
mov
fmull
mov
imul
sahf
outsl
lds
movsb
mov
mulb
xchg
mov
or
or
inc
mov
stos
mov
pop
jl
mov
fs
push
xor
jo
xchg
subb
insb
js
sbb
clc
clc
repz
and
cmpsb
lods
pop
test
mov
cmp
in
push
xchg
cmp
adc
sub
ljmp
imul
daa
xor
loop
popa
cmpsl
lcall
cld
lcall
push
dec
roll
sbb
cmp
inc
dec
jle
mov
addr16
dec
sbb
sti
mov
jp
pop
mov
jo
lea
lea
pop
jnp
cwtl
pushf
mov
scas
push
pop
fwait
sub
pop
test
scas
pop
add
mov
push
jne
popl
das
negl
out
hlt
mov
mov
ret
repz
inc
ds
jne
aas
bound
jl
inc
out
jo
in
lds
adc
dec
xchg
sbb
pushf
jns
inc
mov
sahf
or
xchg
repz
pop
or
std
cmp
mov
mov
dec
adc
test
xlat
mov
rcrb
fistpl
mov
mov
mov
movsl
xchg
out
movsl
mov
add
cmp
fbld
adc
les
xor
lods
clc
cmp
fimuls
push
nop
ss
sbb
mov
mov
inc
ljmp
cli
adcb
cld
xlat
push
stc
hlt
popa
xchg
adcl
or
mov
popa
mov
cld
mov
fsubs
fidivrl
out
mov
xchg
add
aas
sub
mov
aas
jl
scas
enter
mov
dec
sarb
and
outsb
jmp
xor
xor
fnstsw
push
cmp
mov
pop
and
ss
xor
ss
int3
mov
mov
adc
inc
mov
sbb
test
orb
adc
dec
lods
test
cmp
mulb
pop
rcl
sbb
dec
push
es
pusha
jne
in
cmp
mov
ffree
push
push
pop
mov
decb
test
mov
dec
ds
push
enter
sub
sub
pop
add
cmc
xchg
insl
aad
es
push
jo
push
dec
sub
dec
loope
adc
push
aas
stc
mov
inc
sub
movsb
stc
mov
fadds
inc
or
ret
dec
sub
adcb
push
jmp
fsubl
ret
test
sbb
jle
sub
lahf
sub
sbb
outsb
mov
std
jecxz
push
mov
ret
enter
cmp
mov
in
imul
dec
pop
adc
inc
mov
loopne
in
xor
jns
jge
mov
adc
dec
xorl
rcl
insb
sbb
shlb
or
xor
mov
pusha
adc
pusha
mov
mov
sbb
jecxz
fmull
loop
fistl
js
stos
push
dec
jne
mov
movsl
mov
pop
adc
or
fcoml
jb
aas
cmpl
mov
mov
cwtl
or
vsqrtps
rorb
outsb
inc
hlt
lret
add
nop
fidivs
cli
xlat
dec
cmp
rcl
not
out
sbb
and
cmc
push
insl
xor
in
loop
pop
outsl
add
scas
mov
push
pop
ret
popf
loopne
outsb
in
and
imul
sub
xchg
scas
add
icebp
xchg
push
sub
and
lods
fbstp
mov
push
adc
ljmp
push
mov
inc
je
sbb
inc
cs
pop
cmp
or
jmp
call
jge
outsb
adc
scas
loope
movsb
std
out
cmpb
add
adc
icebp
pop
jns
xchg
loopne
pushf
sub
mov
cltd
in
cmp
mov
xchg
js
inc
push
mov
sbb
es
hlt
cmp
sub
cltd
push
loop
test
inc
sub
insl
dec
adc
inc
push
xchg
adcb
lahf
jb
test
push
mov
adc
or
jmp
pop
fiadds
mov
jmp
cwtl
loopne
fsubl
lret
popa
test
fdivrl
xchg
out
mov
subb
idivb
sub
in
xor
clc
xchg
lds
jl
mov
sbb
push
mov
fsts
dec
sti
fdivrl
and
repz
xor
cmp
sahf
fildll
imul
pop
in
test
rorb
dec
rorl
inc
rcll
dec
idivb
clc
cmp
push
gs
rcrb
lds
or
lcall
jge
inc
cmpsl
lock
xchg
in
rolb
mov
adc
js
mov
cmpb
adc
cwtl
stc
stos
mov
stos
inc
pop
sarb
sbb
nop
repnz
mov
cmpsb
push
jne
lock
cmpsb
inc
or
fidivrs
mov
mov
xor
push
mov
fcomp
mov
imul
jl
add
stc
in
mov
shlb
js
cwtl
mov
mov
loopne
mov
jp
fs
mov
push
jae
dec
paddsw
mov
mov
mov
in
or
or
xchg
mov
mov
xchg
jbe
repnz
arpl
fldcw
fiadds
mov
sub
dec
inc
ficoml
stos
mov
xor
cmc
push
sbb
cld
cmp
int
pop
pop
jmp
test
dec
pop
fsubs
jb
push
bound
lods
pop
push
mov
arpl
and
addr16
xchg
cld
popa
insl
sbb
flds
movsb
bound
aas
push
push
jl
cmp
lret
ja
ja
das
gs
fdivl
cli
and
or
adc
or
sub
and
enter
das
or
mov
cmc
add
mov
mov
sarb
mov
cmp
stos
add
icebp
mov
data16
dec
fnstcw
pop
fdiv
fsubl
shrb
jo
cli
sahf
shrb
jmp
mov
lret
dec
xchg
sbbl
xor
lret
jl
jl
xor
push
test
add
xchg
test
dec
or
jnp
inc
adc
mov
cwtl
dec
fiaddl
cmpsl
pop
dec
lret
imul
in
push
jnp
aad
mov
fildll
sub
adc
xchg
or
dec
or
pop
insb
sbb
ret
jbe
push
mov
rorb
nop
inc
out
jl
jo
sbbb
add
cmp
rcrl
mov
movsl
lret
mov
int3
out
cmpsl
cmp
and
fimuls
push
ret
bound
dec
adc
push
push
fcmovnbe
xor
imul
cs
sbb
ret
cmp
add
pop
cmp
jecxz
out
adc
mov
sbb
or
rcll
leave
push
mov
lods
xor
test
sub
push
dec
fdivrl
jl
xor
xchg
in
enter
cmp
cmp
test
cltd
cmp
add
out
mov
inc
mov
in
mov
pop
inc
add
loop
or
dec
pop
jo
or
inc
stc
aad
popf
jmp
in
pusha
clc
mov
push
cmp
mov
mov
xchg
adc
pop
dec
adc
xchg
adc
repz
cmp
mov
das
jl
imul
scas
fisubrl
adc
xor
loope
or
jne
sarb
pop
inc
cs
ret
xchg
sbb
cmpsl
pop
fisubl
out
lea
into
or
out
or
mov
lcall
add
imul
and
cmp
sti
imul
pop
mov
js
push
sbb
and
adc
mov
into
jae,pn
jne
icebp
mov
mov
sti
or
mov
mov
test
mov
sub
adc
dec
mov
cs
out
loop
divl
test
aaa
push
aad
inc
pop
or
loop
inc
adc
and
cmp
scas
or
mov
hlt
mov
push
sbb
pop
jg
inc
fdivl
inc
cmpsb
xor
cli
xor
jb
fwait
cmp
xchg
jae
add
leave
add
cmpsl
ljmp
mov
xchg
pop
lock
nop
loope
sti
adc
push
sbb
std
test
lods
call
inc
pop
lods
mov
add
js
inc
std
in
aad
push
mov
mov
iret
clc
shlb
aam
into
adc
mov
shl
xor
insb
adc
cmpsl
outsb
inc
dec
testl
mov
add
inc
xor
lods
or
xchg
sahf
dec
mov
pushf
xchg
subl
add
aad
iret
and
mov
addr16
or
aam
orl
fnsave
mov
mov
cmp
insl
imul
jp
mov
jno
lret
mov
pusha
stos
std
stc
sub
cmp
and
or
add
ret
inc
xor
in
rolb
mov
icebp
cmpsl
stc
outsl
data16
pop
test
or
fisubs
inc
xchg
inc
lods
pop
pop
xor
xor
xchg
jnp
sbb
aas
mov
cli
test
jmp
lret
xor
scas
ja
fwait
sub
push
std
ss
mov
push
data16
pop
inc
inc
lcall
dec
add
jns
sub
fisubrs
movsl
and
movsb
sub
in
mov
iret
and
sbb
inc
xchg
js
fidivrs
adc
int
mov
roll
js
add
jmp
push
cld
repnz
and
addr16
mov
add
push
add
inc
jge
jmp
flds
inc
and
fldcw
push
mov
jns
push
in
jbe
sti
or
xchg
test
dec
fidivrs
fstpt
push
test
dec
pop
test
vmwrite
movsb
rcrb
pop
jne
test
adc
inc
in
sbb
shll
mov
daa
loope
or
push
test
pusha
pop
mov
dec
and
jg
push
push
and
push
cmpsl
in
addr16
jb
dec
or
jge
mov
push
xchg
dec
cmc
mov
fxch
jge
imul
cmp
xchg
push
cmp
jns
dec
sarl
inc
pop
dec
les
es
decl
xor
std
mov
push
jnp
inc
mov
cld
mov
mov
rorb
iret
inc
xchg
cmpsb
mov
push
xor
lret
aas
loopne
cmpsl
sti
movsb
rorb
mov
sbb
pushf
and
into
mov
jne
fs
pop
insb
mov
dec
jle
cmc
mov
pop
mov
clc
aaa
outsb
sahf
lcall
jecxz
inc
lret
fs
jle
cmp
mov
test
scas
shl
push
repz
push
jmp
mov
shlb
mov
stos
les
rcrb
or
jmp
insl
xchg
sbb
popa
mov
pushf
sbb
stos
movsl
and
cmc
jl,pn
sub
and
pop
out
sub
inc
sbb
mov
paddw
mov
popf
test
push
sarb
jecxz
and
jge
or
outsb
shll
jmp
stos
daa
lds
lahf
cmp
xchg
push
push
or
mov
dec
jne
aad
push
adc
adc
mov
or
shlb
push
shrl
mov
test
mov
mov
sti
pop
icebp
sub
sbb
jno
fistps
nop
jp
add
fidivl
in
cmp
xor
mov
rolb
inc
pushf
fwait
xor
data16
cmp
jbe
notb
push
jns
mov
test
enter
xchg
fistps
jno
sub
mov
ljmp
movsb
leave
pop
int3
test
lcall
in
mov
jae
insb
mov
push
pcmpgtd
insb
fadds
mov
rcrb
outsl
fstpl
and
int3
dec
xor
jge
mov
popa
pop
or
fmull
xchg
dec
out
mov
xor
xor
mov
xor
std
push
nop
sbb
lcall
jb
fcomps
xchg
push
sbb
mov
out
cltd
sbb
test
inc
pop
mov
int
jae
loope
dec
pop
xor
arpl
je
dec
push
jl
xor
jns
add
and
mov
outsl
fmul
test
mov
xor
in
cmp
fisttpll
loopne
sarl
pop
outsb
movsl
sbb
xor
pop
fsubp
stos
daa
insl
fnstsw
andb
fdivrl
mov
push
pop
aad
xchg
cmp
xor
inc
loop
mov
xchg
xor
test
sti
cmpsl
xchg
sbb
mov
insl
push
inc
loope
add
leave
fsts
nop
addr16
cwtl
divb
mov
push
xchg
pop
dec
cmp
mov
cmp
pop
pop
insb
bound
fsub
fwait
pavgb
sbb
orl
dec
cli
mov
jo
ret
sbb
ret
les
inc
add
and
mov
push
push
mov
ror
push
mov
inc
and
xor
jmp
xchg
or
into
test
jl
rolb
pusha
xor
cwtl
jp
pop
lods
je
mov
or
ljmp
inc
into
xchg
jnp
cmp
nop
je
mov
aad
data16
cli
call
xorb
jbe
pop
add
loopne
xor
adc
fadd
fcmovb
adc
sbb
lsl
adc
inc
les
sbb
fimull
push
mov
lret
jmp
lret
pushf
cli
insl
shrb
xchg
test
imull
mov
lods
cld
lock
subl
push
sub
sbb
xchg
push
imul
sbb
pop
mov
jmp
ja
jns
pop
sbb
insb
jns
outsb
xor
ss
hlt
lret
adc
push
xor
mov
jl
adc
jnp
shl
mov
stc
pop
push
dec
filds
fisubs
push
daa
repnz
fadd
shl
push
add
sarb
add
jo
mov
adc
adc
inc
jge
push
in
mov
ja
dec
cld
cmp
cmpb
int3
dec
movups
push
push
adc
sbb
int3
fdivs
jns
xchg
mov
mov
push
xor
es
and
daa
pop
mov
imul
jo
dec
dec
xor
mov
and
push
into
mov
jnp
mull
push
das
popa
jle
push
xor
insb
pop
into
daa
bound
lods
dec
aad
in
fwait
stos
call
add
push
lods
xor
mov
mov
push
sub
hlt
aaa
and
jo
push
scas
call
ja
aad
sahf
pop
mov
add
fsts
xor
imul
cmpsb
add
lods
rorb
arpl
stc
loope
cltd
jge
addr16
test
test
xchg
jle
pop
cmpsb
xchg
xchg
fiaddl
cmp
pop
inc
mov
xchg
lods
data16
leave
mov
and
sar
stos
jmp
push
add
hlt
inc
sub
pop
lret
adc
das
cwtl
sub
sti
jb
shll
jl
jge
cmc
loopne
ret
sbb
inc
mov
sub
push
je
fiadds
pushf
aam
push
sub
dec
dec
and
sarb
mov
pop
jle
loope
push
fmul
pop
insb
mov
xchg
inc
mov
filds
outsl
jp
mov
adc
insl
ret
arpl
sbb
test
cmc
sub
and
xchg
lret
sbb
sbb
imul
sub
dec
cmp
in
cmp
fimuls
test
mov
test
fsubrl
icebp
movsb
inc
stc
call
popa
jp
in
pop
lods
sahf
mov
cli
or
pop
sti
mov
das
jns
mov
loop
fmulp
jae
repnz
call
push
inc
xchg
pop
push
mov
add
xor
sbb
pop
sbb
jmp
imul
push
sahf
or
ds
cld
cs
sub
inc
mov
arpl
out
stc
xor
lds
lea
in
xchg
xor
dec
std
ja
add
or
jg
lock
aas
mov
in
fistps
cmpsb
movsl
pop
pop
fiaddl
jmp
inc
cmp
ficoml
jae
dec
sbb
pusha
adc
and
int
pop
mov
dec
das
xchg
loop
mov
push
xchg
jbe
and
iret
js
cmp
clc
mov
sub
cmp
sqrtps
in
jne
das
pop
dec
sbb
imul
inc
lds
jns
cs
lods
iret
mov
jmp
jp
jbe
mov
pinsrw
jbe
out
scas
mov
mov
fstpt
and
insl
pushf
in
dec
pop
push
adc
addr16
filds
cmpsl
les
fwait
mov
mov
add
dec
dec
imul
jmp
mov
test
xlat
clc
push
push
stos
cmpsb
dec
mov
push
mov
jne
pop
mov
adc
gs
in
inc
sub
inc
push
xchg
mov
lock
in
loop
aas
push
fwait
cmp
roll
rcll
cmp
add
imul
mov
sbb
aam
fisttpl
mov
and
pushf
push
mov
sub
cli
adc
pop
ja
rclb
sub
je
inc
mov
ret
in
stos
test
iret
sbbb
jne
inc
push
xchg
rolb
lds
icebp
dec
cmpsb
imul
not
mov
mov
lret
cld
lods
call
push
mov
jo
fcompl
iret
and
sub
xor
push
push
fs
cwtl
jmp
aad
jne
push
hlt
jae
cmp
pop
xchg
jo
cmpsb
jno
xor
push
movsl
sbb
sahf
dec
in
xor
jle
adc
xor
add
outsl
cwtl
hlt
loope
or
push
jp
scas
cmp
jg
data16
and
aam
in
insb
pop
mov
adc
je
cwtl
shrb
subb
sub
cs
sub
or
adc
scas
or
lret
outsl
dec
push
pop
sub
out
xor
testb
in
mov
fimull
fldln2
jmp
lods
jae
or
insb
pushf
sub
dec
nop
repz
dec
and
test
jl
push
hlt
cmp
int3
add
xor
lea
cmp
inc
push
jp
cmp
xorl
mov
es
insb
lahf
imulb
mov
popf
cmpsb
xor
iret
xchg
in
inc
jnp
fbld
in
fwait
iret
out
xchg
push
mov
and
stc
mov
out
in
pop
lock
test
xor
mov
mov
jl
adc
sbb
inc
cwtl
in
hlt
jb
jecxz
dec
lea
add
inc
jp
jge
addl
test
lret
das
call
cmc
in
jnp
sti
shr
xchg
or
aas
cwtl
mov
inc
xchg
dec
aas
insl
in
push
mov
xor
out
mov
inc
and
push
ss
dec
jl
aad
sbb
sarl
and
hlt
lret
xchg
out
jo
pop
and
add
das
xor
out
js
clts
mov
dec
outsb
inc
lea
aas
mov
in
mov
lcall
sub
outsb
lods
xor
scas
cmp
cmc
xor
clc
shll
fsubrp
mov
lods
pop
insb
out
lea
imul
jp
or
je
pop
mov
lahf
scas
data16
pop
jae
jbe
mov
test
and
or
xchg
push
cmc
pop
mov
inc
bound
jnp
mov
jnp
fidivrs
jecxz
jmp
jne
pusha
sbb
stos
lcall
cmp
jmp
in
push
into
or
mov
and
xor
popl
mov
push
add
loope
jo
dec
push
imul
mov
frstor
or
outsl
les
mov
setg
adc
pop
cmp
inc
push
cmp
lea
or
add
cmp
nop
cmc
pop
xchg
stos
pop
icebp
icebp
mov
std
mov
pop
in
lahf
xchg
xchg
add
packsswb
dec
repnz
arpl
inc
or
outsl
or
mov
push
out
stos
pop
mov
mov
or
repnz
xor
loop
adc
movsl
mov
mov
cwtl
xorl
daa
enter
lods
cmp
adc
xchg
lret
sbb
or
lea
jp
ja
mov
cmp
mov
cmc
insl
mov
lret
jnp
fimuls
xchg
jae
jge
sbb
adc
mov
popf
ret
xor
add
adc
lea
and
out
das
pop
xor
popa
mov
mov
addr16
jno
add
fidivs
mov
imul
lds
pop
ret
mov
xchg
scas
addr16
push
xchg
or
adc
ret
sub
sbb
aam
cmpsb
inc
scas
sti
lea
mov
or
cmc
fnstenv
mov
jmp
outsb
je
xchg
pop
mov
fwait
cmp
aaa
popa
xchg
add
mov
xchg
xchg
xchg
cli
out
mov
dec
imul
imull
leave
mov
and
cli
adc
ds
sarb
xor
cmp
aam
xchg
inc
mov
dec
js
popf
call
int3
xlat
cmpsl
xchg
jnp
push
or
aam
into
sbb
adc
vprotq
xor
ja
test
mov
jmpw
cmp
in
int3
lock
or
aad
test
xchg
cmp
loope
shl
imul
std
loop
mov
mov
xchg
std
sbb
fs
jmp
pop
nop
sarb
addl
xchg
scas
pop
cmp
mov
sti
xor
xor
test
push
sbb
add
rcll
out
dec
cmp
jbe
jb
and
jmp
stos
scas
fstl
enter
mov
xchg
shll
frstor
xchg
mov
xchg
stos
dec
add
push
or
mov
cmp
ds
repz
jno
out
cwtl
inc
mov
out
jno
cli
add
push
scas
or
add
scas
push
sub
xchg
orl
leave
sub
jle
pop
and
call
mov
sub
fwait
mov
mov
int
push
xchg
cmp
push
in
iret
jle
xor
es
lahf
push
int3
and
xor
xchg
mov
in
jne
into
sbb
data16
sbb
xor
pop
xor
lahf
xchg
scas
sub
pop
or
add
push
mov
in
sub
add
lea
lret
xchg
lods
push
cs
and
xor
lret
orl
jg
dec
adc
xchg
xor
ss
sub
sti
mov
cli
mov
push
cmp
inc
int3
shr
unpcklps
popa
mov
mov
pop
mov
mov
pop
mov
push
cwtl
mov
jle
fldcw
cmp
xchg
mov
pop
int3
xchg
cmp
or
push
testl
xor
sti
mov
sbb
push
aad
pop
jge
leave
out
inc
je
ret
add
inc
insb
mov
fsts
lea
out
rcl
addr16
mov
mov
loopne
in
jns
nop
xchg
fsubs
mov
sbb
lods
pop
inc
pop
bnd
dec
push
and
jno
and
jne
or
je
into
mov
inc
sar
lcall
jb
mov
xchg
cmp
lcall
xchg
push
dec
and
sub
push
sahf
cld
out
mov
dec
pop
adc
and
mov
add
test
or
out
jae
rolb
or
xchg
lret
sub
xor
cmp
jnp
mov
cmp
out
arpl
xchg
jp
lods
fsub
lahf
pop
add
decl
out
movsl
aas
inc
adcl
mov
ds
orb
sahf
lahf
mov
cmpsl
inc
loopne
xchg
xchg
mov
push
adc
cwtl
cld
popa
cmp
pop
daa
pop
data16
jl
daa
push
xchg
jae
sarl
push
and
pop
cltd
adc
xor
std
in
cmp
xor
push
and
popa
lods
pop
repnz
popa
les
adc
adc
arpl
lahf
lds
int
cmpl
int
cmpb
mov
mov
repz
push
xor
jmp
adc
dec
mov
inc
hlt
jno
xchg
and
mov
sbb
hlt
sbb
dec
out
popf
sbb
test
or
aad
sub
inc
outsl
dec
xor
loopne
sub
adc
mov
dec
pop
call
cmp
push
pusha
xor
jnp
ret
ss
and
and
mov
iret
lret
ds
movsb
sti
clc
outsl
cmp
lds
pop
ljmp
push
shl
dec
dec
dec
inc
daa
lahf
int3
mov
lds
adc
inc
jns
iret
pushf
scas
cmp
lock
out
lods
push
addr16
xchg
movsb
lret
xorb
test
outsl
jo
adc
shlb
test
call
ljmp
gs
ret
add
push
loope,pn
pop
sbb
cmpsl
and
xor
scas
push
xor
dec
stos
push
and
mov
insb
shll
jb
mov
sub
cwtl
je
xchg
jecxz
outsl
lret
int3
sub
cltd
fdivs
call
add
xor
and
mov
mov
sbb
dec
adc
jb
pop
rdpmc
dec
add
jmp
scas
fcoms
bound
faddp
shlb
imul
sbb
and
lods
ret
stos
sbb
push
cmp
jle
rcrl
imul
dec
or
or
daa
mov
and
jmp
lcall
movsb
ret
add
push
mov
jbe
aas
adc
mov
sub
les
ss
and
adc
xor
std
test
mov
dec
test
rorb
mov
dec
cmp
in
arpl
lds
or
inc
subb
fs
sbb
lods
cli
in
cmp
cwtl
enter
loope
hlt
movsb
bound
add
jbe
dec
sahf
cmp
add
push
out
shll
mov
add
mov
push
shll
adc
daa
sub
adc
mov
push
mov
add
mov
dec
add
inc
jge
jg
cmp
jg
mov
lcall
int
hlt
je
dec
out
fs
call
mov
mov
xchg
int
and
jge
cmpb
or
ror
add
xchg
std
mov
push
test
pop
outsl
loopne
mov
sub
sbb
popf
notb
aam
std
cli
inc
lods
dec
mov
cmp
push
mov
lock
sbb
push
or
push
idiv
sbb
xchg
into
mov
sbb
jg
leave
add
cmpl
adc
sahf
lcall
sub
sbb
cli
sbb
jnp
sbb
jle
shlb
and
adc
adc
sub
in
push
leave
sarb
lock
push
mov
mov
pop
cmp
adc
int
mov
mov
incl
test
xchg
xchg
inc
aas
insb
xlat
pop
es
lods
xchg
inc
movsb
in
lods
shl
xor
jmp
cmp
xor
fcoms
cmp
adc
mov
cltd
cmc
popa
lret
mov
or
xor
push
mov
mov
cld
icebp
sub
outsl
icebp
cltd
fildll
repnz
xchg
push
or
ss
sbb
cmp
add
sub
xor
mov
shrb
add
adc
jnp
push
sub
lods
dec
icebp
xchg
ja
mov
xchg
jg
ds
xchg
push
ret
mov
jecxz
cmp
jl
xor
mov
mov
xor
sub
mov
lret
inc
mov
push
jp
mov
push
mov
cmp
aaa
jbe
mov
daa
push
pop
aaa
adc
or
jne
jnp
rcl
cwtl
hlt
loope
xchg
mov
aaa
cmp
xor
pushf
imul
fwait
pop
add
push
mov
xor
repz
in
jp
xchg
add
jbe
cld
addr16
cli
mov
mov
out
mov
fstl
push
xchg
sti
push
fs
adc
lret
push
icebp
in
inc
sar
fistps
cltd
mov
cmpxchg
les
cmp
lcall
cmpsb
mov
filds
out
push
daa
js
daa
sbb
push
iret
rcrl
rcrl
cmp
lea
jl
adc
shr
in
and
daa
jg
cmp
xor
insb
sbb
test
fcmove
mov
add
xsavec
ss
push
cmp
sbb
in
xor
push
imul
js
sub
mov
mov
xchg
mov
cmp
push
jmp
mov
and
lret
int
aaa
shll
sub
jbe
xchg
sub
rolb
pop
jae
outsl
mov
jnp
out
mov
ds
or
stos
scas
and
jae
add
push
icebp
xchg
mov
adc
js
push
mov
mov
ja
icebp
push
cltd
mov
mov
mov
shrb
or
lcall
int
test
test
pop
inc
adc
xchg
cmp
push
jle
inc
adc
imul
adc
pop
jle
in
idivl
push
sub
test
adc
clc
jmp
pop
push
mov
jmp
mov
mov
pop
jne
fldl
sub
xchg
or
cmp
cmp
xor
fsubrp
ret
stos
aaa
cmpsb
and
jge
rolb
pop
int3
sbb
mov
dec
cmpsb
mov
jne
mov
dec
jge
mov
mov
or
cs
cmp
pop
cmpsl
and
in
cmovb
xor
out
aas
dec
pop
aad
arpl
xchg
fsubs
fwait
mov
and
or
xor
mov
insb
jb
adc
push
cs
inc
xor
ljmp
call
adcl
pushf
mov
adc
pop
or
mov
stos
cmc
sahf
pop
fsubl
aas
mov
jle
push
mov
fdivrp
movsb
push
xchg
je
out
cmp
xorb
ja,pn
in
lret
mov
xor
inc
push
pushf
adc
mov
mov
test
test
sahf
and
in
out
cmp
rorl
ret
jmp
push
pusha
test
add
cmp
imul
rol
call
shlb
imul
loopne
and
inc
xor
fdivrl
jae
cs
shl
jecxz
inc
divl
loope
cmp
lcall
shrb
cwtl
or
xchg
jne
jno
dec
les
mov
jg
mov
loopne
fsubr
sub
lahf
xor
outsl
shr
sbb
cld
inc
repnz
inc
xor
adcb
dec
std
push
xchg
mov
jl
xor
shufps
inc
popa
mov
or
not
xor
sub
cmp
lock
cltd
xor
mov
push
gs
insl
push
mov
ret
xchg
sub
mov
stc
or
sbb
xor
push
or
cmp
test
pop
std
sbb
push
add
mov
nop
xchg
lods
int3
jns
loop
test
xchg
gs
mov
mov
das
dec
xchg
pop
xor
aaa
and
int
pop
test
stos
ret
ffreep
add
or
cmp
test
mov
add
dec
mov
pusha
das
mov
loop
or
mov
adc
andb
lds
push
push
sbb
xchg
xor
sub
cmp
shlb
dec
dec
icebp
xor
mov
jno
add
inc
lods
xchg
shr
push
push
outsb
jb
and
cld
inc
imulb
push
lret
outsl
sub
mov
hlt
push
xor
push
lods
jmp
inc
rcrl
cmp
pop
pop
dec
add
jmp
sub
dec
stos
jae
jne
pop
mov
mov
sbb
fidivl
aad
mov
pushf
aas
pushf
adc
inc
cs
xor
mov
jecxz
xor
mov
cmp
hlt
pop
and
sbb
imul
push
push
add
and
in
xor
bound
or
adc
or
lret
push
mov
iret
pop
mov
sub
rcr
leave
lock
outsl
dec
int
jbe
mov
loopne
insl
bound
sub
jge
xchg
mov
mov
inc
jecxz
add
pop
std
mov
add
dec
jmp
dec
xor
pop
add
jge
add
neg
shll
mov
adc
popa
in
sub
icebp
xchg
hlt
lods
movnti
push
pushw
inc
jb
lock
mov
and
push
push
pop
mov
sub
xchg
imul
inc
mov
in
jg
jae
adc
sub
or
call
xor
test
stos
mov
mov
sbb
xor
outsl
dec
xlat
pushf
xchg
fwait
lret
mov
xchg
inc
mov
cmp
jo
hlt
imul
dec
jne
fbstp
adc
cmp
jge
sqrtps
out
xor
or
or
out
jb
pop
xor
enter
cmpsl
sub
mov
popf
xchg
add
in
cmpsb
push
mov
xchg
and
into
and
mov
xor
adc
xor
pop
xchg
xor
rorl
dec
xor
mov
pop
jbe
xchg
andl
dec
mov
rcrl
mov
movsl
fsubrs
std
loope,pt
aaa
adc
cwtl
lods
or
or
rolb
add
jmp
jb
mov
xor
mov
pop
or
sub
jo
es
outsb
mov
push
fistps
cmp
pop
shll
je
pop
cs
mov
sbb
mov
rclb
or
repz
sbb
jge
adc
xchg
jmp
sahf
repz
addb
and
pushf
loope
and
push
push
cmp
pushf
sbb
hlt
cmc
and
push
mov
arpl
fcmovnb
push
push
jge
and
lcall
mov
push
inc
fwait
insb
xchg
rclb
loopne
xor
mov
enter
rcl
call
jne
test
inc
xlat
and
fisttpll
leave
fdivl
sbb
push
nop
daa
jo
lcall
mov
rcll
jecxz
push
imul
sbb
xor
hlt
sub
dec
jge
add
ret
mov
les
xchg
js
rcrb
and
clc
outsl
fidivrl
lret
jno
data16
pop
fs
insb
jmp
adcb
push
mov
out
cmpsb
jno
scas
leave
sbb
es
ljmp
mov
les
xchg
outsb
xchg
lret
jmp
je
sbb
cwtl
push
out
dec
sbb
imul
inc
dec
push
pop
lods
in
sub
cld
mov
xchg
sub
lods
push
shrl
dec
push
pop
cmpsb
jle
jns
xchg
add
push
shl
outsl
push
icebp
cmp
jns
sbb
push
jnp
jl
push
sbb
lcall
outsb
and
push
repnz
pusha
pop
push
and
and
enter
test
pop
jne
hlt
cmp
adcb
fildl
fbld
fistl
mov
pop
lock
mov
add
out
lods
loop
mov
lods
mov
lret
push
mov
imul
or
cwtl
clc
lret
ret
add
mov
mov
fsub
mov
imul
xchg
je
imul
add
daa
loop
dec
xor
mov
cltd
mov
mov
cmp
scas
mov
mov
imul
jo
rcrl
push
xchg
and
sub
sbb
cld
rol
xchg
adcl
cld
sbb
lea
sub
imul
loop
push
pop
push
push
dec
dec
mov
les
movsl
mov
ret
mov
jb
and
pop
add
mov
xor
lahf
frstor
cmpsl
mov
pop
and
mov
cmc
outsl
sub
jnp
mov
mov
sbb
pop
mov
sub
pop
mov
cmp
push
sub
sub
mov
lds
sbb
ret
loope
sub
data16
or
aam
push
inc
mov
sbb
lretw
jge
adc
out
jge
lock
outsb
ret
sbb
mov
mov
jb
push
aas
int
adc
leave
ficoml
rcrl
push
fcoml
aas
jae
fnstsw
stos
cmp
sub
inc
arpl
pop
aam
cmp
addl
das
push
cli
or
sbb
imul
jle
inc
jbe
call
or
insb
xchg
lods
push
dec
lock
add
cmp
movsl
dec
jl
xor
jnp
jg
call
dec
or
push
in
mov
test
in
sti
js
lahf
and
inc
dec
sbb
inc
dec
in
sarl
outsb
adc
arpl
sub
adc
mov
add
add
and
out
lret
dec
mov
xchg
pop
cmpsl
in
icebp
cmp
in
dec
movb
inc
sub
rorb
bound
inc
fsts
call
or
xlat
or
and
les
lret
in
inc
lahf
mov
adc
add
jno
cld
aas
cmp
push
sahf
mov
cmp
xchg
repnz
daa
jnp
out
ljmp
int
ret
inc
sbb
push
or
dec
push
fdivs
mov
fwait
and
mov
or
add
ljmp
mov
push
push
in
jle
sub
aaa
jp
sbb
mov
cs
in
sub
dec
test
jp
dec
dec
lock
scas
and
adc
imul
shrb
cmp
xchg
stc
stos
sbb
cmovb
out
cmp
and
pop
push
outsb
cmp
scas
jle
jp
stos
sbb
cmp
addr16
aad
mov
mov
adc
xchg
ja
ja
fldenv
inc
repz
xlat
mov
add
push
sahf
ljmp
outsb
sbb
flds
xchg
xchg
test
inc
mov
or
pusha
insl
test
test
arpl
sbb
shlb
lret
daa
fs
jmp
aaa
int3
mov
int
call
add
repnz
and
das
jnp
addl
out
and
mov
mov
repz
mov
pushf
jns
sub
adc
enter
or
push
or
loop
jne
fs
repnz
in
mov
xchg
sarl
xor
pop
pop
and
fxch
out
or
push
push
in
push
outsl
lea
insb
mov
xor
add
cs
aas
out
push
push
test
aam
lret
pop
jo
mov
cwtl
add
movsl
or
or
and
push
arpl
mov
movsb
mov
mov
fldl
outsb
mov
pop
cs
popf
or
push
mov
out
icebp
add
jp
out
pop
ds
inc
dec
add
in
and
stc
push
cmp
dec
inc
and
pop
lea
dec
sbb
xchg
push
push
push
aam
mov
loopne
testb
data16
xchg
push
jnp
lret
dec
mov
pop
and
push
or
xchg
adc
pop
mov
cmp
dec
cs
sub
fbstp
dec
popa
dec
sbb
pop
cwtl
enter
jge
roll
cmc
popf
jmp
add
mov
or
lret
lahf
stos
dec
jno
mov
dec
jp
rorl
xchg
daa
or
sbb
movsb
aas
aas
gs
mov
lea
fcoml
pushf
push
lret
enter
inc
repz
adc
dec
in
aad
xor
sub
pop
clc
insb
cmpsb
popf
sub
sarl
add
mov
pop
cltd
sbb
int3
das
and
out
sbb
xor
push
popa
mov
adc
arpl
pushf
testb
stos
xor
jecxz
push
mov
dec
es
xor
jno
and
adc
cwtl
dec
mov
scas
daa
popa
cwtl
sar
jno
xchg
sub
jl
adc
mov
adc
andl
add
mov
sbb
mov
ss
jns
pop
out
lcall
and
xlat
out
jae
in
jl
test
les
clc
insl
jp
rorl
je
or
cmpsb
scas
push
mul
or
cld
adc
roll
jnp
jo
lcall
fsubl
mov
ds
out
test
adc
insb
movsb
arpl
out
inc
jbe
sub
sbb
int
xchg
xchg
arpl
js
inc
ret
jae
adc
out
dec
adc
ret
daa
and
clc
mov
test
idivl
popf
cltd
lcall
dec
stos
cmpsl
outsl
xchg
in
call
xchg
outsl
loope
std
or
ja
mov
dec
mov
sbbl
loopne
in
xlat
pop
sarl
xor
ss
out
pop
push
scas
outsl
icebp
jno
and
mov
adc
loopne
sub
cmp
std
inc
fcoml
sbb
aam
jbe
push
nop
ss
sarb
mov
sbb
in
mov
push
movsl
push
inc
shlb
add
push
es
add
mov
imul
cwtl
in
std
prefetch
adc
stos
pop
ja
inc
add
lret
push
sub
in
out
sub
std
xlat
dec
mov
xor
fists
jl
sub
sub
mov
lret
inc
or
dec
fnstsw
cmpsb
lret
jnp
std
out
inc
and
cmpsb
stos
xchg
mov
pusha
stos
fsubl
adc
fnstcw
mov
cmp
loope
loope
push
push
imul
stos
shlb
das
dec
in
loop
push
loope
imul
jge
pushf
xchg
lds
cmc
push
and
test
sbb
xchg
add
rol
cmp
mov
rolb
iret
out
xlat
fsub
push
fmull
adc
jb
ljmp
pop
mov
mov
mov
js
dec
sbb
sbb
orl
sarb
movsb
lock
push
fwait
push
push
sub
add
and
add
pop
pop
sahf
mov
xor
popf
popf
inc
test
sbb
enter
lods
inc
in
xor
imul
push
xor
nop
aad
xor
sbb
sbb
js
add
repz
xchg
stos
adc
dec
insl
stos
cli
imul
xchg
roll
inc
stos
xor
mov
jmp
inc
shl
test
les
test
ds
xor
and
js
and
jnp
int3
nop
adc
mov
pop
sub
orl
fisubrs
arpl
imul
ret
mov
insl
add
xor
push
fwait
push
or
fcomp
adc
push
push
inc
pop
sbb
push
aas
xor
cmpb
dec
add
lods
clc
sbb
adc
insl
mull
leave
movl
cwtl
adc
jg
stos
fldt
mov
out
int3
shl
mov
sub
push
mov
dec
rorl
and
xlat
insl
orl
dec
lret
fldenv
mov
jge
mov
mov
jmp
and
stc
out
adc
and
xor
add
and
mov
push
dec
sub
cld
frstor
sbb
push
dec
mov
fnstenv
rcll
cli
idivl
test
or
pop
mov
in
dec
leave
add
movsb
movsl
cmpsb
mov
and
repz
leave
lea
sbb
test
fnstenv
aad
loop
int
sarb
push
ficoml
jbe
and
dec
pop
fs
jge
push
in
sbb
add
int3
or
fisttpl
dec
lods
jo
add
sti
push
jne
push
jmp
out
orb
or
mov
out
shlb
sahf
lcall
outsl
lock
sbbb
mov
sub
iret
jns
lea
ja,pn
enter
push
adc
aas
mov
mov
mov
sbb
sbb
push
mov
lcall
inc
cmc
or
mov
cld
adc
mov
call
inc
data16
and
dec
mov
shlb
pop
frstor
jbe
clc
ret
dec
jg
lret
mov
xchg
xor
push
popf
rcr
cwtl
movsl
xor
iret
add
popa
ficoms
arpl
jnp
dec
in
insl
mov
lea
mov
push
push
push
in
arpl
dec
popa
and
pop
sbb
pusha
jo
ja
lahf
roll
mov
inc
popf
xchg
js
xor
loopne
inc
sbb
mov
jae
push
int3
sub
mov
mov
pop
andb
lea
or
inc
sub
mov
iret
jl
push
int
push
or
mov
push
inc
pop
sbb
in
cld
sub
jns
xchg
subl
jns
mov
mov
dec
add
jne
adc
data16
leave
dec
ret
xor
jecxz
push
dec
mov
into
cmp
cwtl
push
aad
ja
stos
adc
jmp
pop
xchg
cmp
mov
sbb
das
jg
sbb
subl
stc
pushf
and
pop
pusha
add
adc
inc
lcall
pusha
out
jle
push
hlt
pop
pop
jecxz
dec
je
call
daa
data16
pop
adc
pushf
adcl
xchg
lods
jae
call
test
cmpsl
add
cld
pop
mov
adc
jp
and
jno
movsl
xorb
jl
imul
xchg
lcall
pusha
sub
xor
sbb
lahf
int3
push
lret
push
mov
or
out
iret
xchg
sub
adc
and
cmpsb
xchg
or
clc
cltd
dec
sbb
or
fcoml
jno
incb
loopne
sbb
push
xor
lods
mov
adc
mov
adc
aas
movsl
imul
in
inc
ljmp
jo
lds
jnp
pop
jne
mov
leave
mov
jmp
xchg
cmpsb
sub
mov
sub
lds
lods
or
insl
push
push
mov
cmp
std
imul
and
mov
jns
inc
decl
push
add
sub
add
xor
filds
sbb
add
fwait
or
mov
dec
scas
imul
sbb
rcrb
js
and
adc
jno
imul
xor
call
jns
in
nop
cli
cmp
imul
or
ss
rol
enter
daa
xlat
insb
in
or
shll
push
xchg
add
gs
in
adc
mov
std
mov
add
aam
movsb
inc
xchg
enter
dec
ret
mov
mov
mov
sbb
lods
mov
xchg
dec
cmp
push
ss
je
test
push
movsb
fucom
sub
mov
ss
jl
and
jne
mov
sbb
repnz
adc
mov
movsb
mov
or
and
or
popa
nop
mov
into
test
and
mov
dec
pop
cmp
lcall
testl
jge
fisubl
pop
aaa
mov
and
mov
aas
xchg
xchg
adc
cmp
aad
std
icebp
pusha
push
les
push
pop
in
jmp
addr16
and
sub
lahf
cltd
andl
xchg
fldpi
pop
or
mov
mov
fwait
cmpsb
dec
std
mov
inc
and
adc
pushl
dec
ja
cmpsb
xor
adc
xor
inc
push
cmp
aaa
cmp
mov
das
test
xchg
pusha
cld
pusha
ret
pusha
xchg
pop
leave
xchg
jge
sbb
out
stos
dec
fwait
std
aaa
mov
ljmp
shlb
je
nop
push
jae
push
xor
pushf
mov
add
jmp
cmpsb
gs
jbe
mov
inc
jae
push
call
rclb
adc
repz
push
movsb
inc
test
fs
mov
test
popf
pop
sbb
nop
push
jne
inc
std
test
sbbl
ret
inc
sbb
sbb
lods
lcall
sub
roll
mov
stos
sub
mov
cwtl
and
add
add
nop
pop
push
orb
dec
mov
imul
rolb
sbb
adc
les
push
pop
or
clc
sub
or
mov
pop
sarl
sbb
js
insl
sarb
sub
fucomip
out
cwtl
inc
xor
sbb
outsl
pop
xor
nop
test
mov
dec
and
ret
cmp
xor
xchg
inc
lods
sbbl
stos
movsb
lods
ret
fdivl
addr16
out
mov
inc
xlat
jns
jbe
cmp
xor
lods
lods
fs
shlb
pop
int
sub
pop
daa
sub
or
or
outsl
mov
pop
push
pusha
or
mov
push
mov
cld
data16
loope
pop
lock
sbb
sub
imul
bound
shl
fs
xchg
mov
dec
add
mov
shlb
test
inc
iret
inc
cli
add
adc
inc
lods
mov
dec
pop
jno
pop
push
fisttpll
out
sbb
push
es
push
inc
clc
cmpsb
cltd
push
andl
add
add
lods
int3
out
sub
mov
add
pop
ds
and
movsb
mov
dec
jb
pop
push
js
lret
int3
dec
mov
mov
imulb
xor
jmp
leave
adc
pop
imul
fldenv
sub
movhps
pop
loope
arpl
insl
inc
adc
dec
xchg
call
inc
mov
clc
push
pop
cld
fwait
mov
jbe
adc
fcmovne
xor
aam
xchg
adcb
insb
mov
insb
mov
sbb
das
nop
add
xchg
adc
gs
or
or
fstl
punpckhdq
das
nop
out
adc
jecxz
fnstenv
pop
mov
and
add
outsl
xchg
inc
jnp
fistpl
jmp
pop
dec
rorl
in
test
pusha
fsubrs
mov
es
daa
push
mov
jge
add
push
mov
test
daa
add
out
add
hlt
les
imul
mov
lret
mov
pop
xchg
sbb
jg
fiaddl
dec
push
push
idivl
fwait
in
push
push
aas
insb
xor
mov
adcb
cwtl
dec
shll
mov
dec
shl
add
push
in
push
pop
sbb
adc
adc
cmpl
adc
xor
pop
cli
enter
fcmovne
mov
and
or
jns
xchg
xor
and
push
insl
pop
out
pop
jp
or
ljmp
sub
push
push
cmp
ret
iret
ret
or
add
add
in
movsb
mov
cmp
test
xlat
push
adc
testb
les
or
pop
std
aad
add
das
rolb
sbb
and
lods
jecxz
push
jle
xchg
fwait
push
add
mov
or
cmpsb
inc
aam
and
cwtl
das
jmp
cmp
sub
inc
mov
je
data16
sbbb
xor
stos
sub
iret
mov
out
cmp
mov
out
jp
loope
inc
js
sub
cwtl
pop
jnp
sub
mov
pop
inc
push
jne
mov
das
jp
push
sub
mov
jo
xchg
aam
jne
cwtl
mov
mov
xchg
pop
fstpl
xlat
inc
subl
jae
mov
push
or
mov
xor
pop
data16
divb
and
mov
aad
jle
jmp
mov
add
push
mov
inc
jp
popa
in
mov
jp
xchg
lock
mull
arpl
cli
out
lahf
mov
add
inc
cld
adc
adc
sub
lahf
inc
add
popf
add
hlt
leave
cmp
pop
push
ret
imul
in
adc
mov
cmp
mov
cltd
lret
push
xchg
inc
les
xor
in
fs
lret
pop
out
push
aad
movsb
fwait
stc
fistpll
jo
push
or
push
lret
mov
inc
lods
sti
cltd
add
or
xchg
aas
cmc
mov
xchg
mov
push
inc
mov
lret
out
mov
dec
pushf
jg
clc
dec
in
mov
xchg
popf
xorl
and
xor
js
sub
pop
mov
push
pop
and
sbb
rolb
loopne
js
gs
loope
or
cmp
stos
mov
lea
inc
test
sahf
cmp
mov
jmp
outsl
xor
nop
ret
loope
or
jnp
out
jns
cmp
lods
test
mov
shll
roll
mov
fnstcw
iret
jb
clc
and
xchg
icebp
push
das
dec
push
out
icebp
or
das
xchg
sub
fstpl
hlt
mov
je
jl
fstpt
jae
mov
loope
sbb
sub
push
sub
std
test
dec
xor
shll
les
and
xor
insl
sti
mov
dec
fdivrl
aad
cmc
in
fistps
fimull
and
outsb
dec
xor
xchg
or
clc
adc
jne
shrl
fsubrl
shll
imul
inc
xor
mov
and
mov
adc
es
mov
pushf
test
mov
lea
jg
stos
push
xlat
inc
mov
cmp
pusha
rorl
pop
push
mov
in
imul
push
cli
pop
push
sub
mov
bnd
mov
loopne
xor
fsts
fistps
pop
mov
ss
mov
push
adc
shll
nop
jle
in
arpl
and
test
jp
or
cltd
jmp
and
fdivs
in
cltd
roll
fwait
sahf
sbb
cmp
pop
inc
dec
std
arpl
cmp
xor
mull
pushf
fwait
and
lret
ja
xchg
gs
shlb
push
dec
ds
cld
mov
jae
gs
movsl
out
mov
or
out
insl
ds
scas
add
es
ret
stc
pusha
repz
mov
int
jle
adc
out
adc
jmp
in
mulb
fwait
cld
mov
je
jg
scas
add
pop
mov
loope
jle
popf
pushf
out
pop
rorl
sbb
bound
popa
mov
mov
mov
test
push
out
lods
cmpb
loopne
sbb
sbb
mov
repz
push
adc
jp
sbb
sti
movsl
mov
add
adc
loopne
je
sar
sub
in
xlat
cmp
rcl
hlt
lahf
gs
mov
adc
add
sti
push
enter
stos
sbb
mov
jp
aaa
or
loop
lock
out
icebp
nop
sbb
mov
sub
and
add
fwait
push
xchg
popf
testl
jnp
add
sbb
popa
ss
std
hlt
es
pop
mov
sbb
mov
clc
pop
push
fwait
movsl
filds
inc
lock
push
push
inc
cmp
push
push
cmp
push
repnz
sbbl
test
xchg
int3
test
xchg
add
sub
repnz
mov
outsb
test
shll
pushf
jmp
mov
iret
sub
adc
adc
mov
xchg
cmp
mov
int3
cmpsb
ret
fists
mov
cmpsb
inc
arpl
fwait
rolb
ljmp
sub
pushf
mov
enter
in
pop
sub
jge
jecxz
cmp
push
js
pop
jae
hlt
sub
mov
sti
sub
and
jmp
mov
lret
les
aam
jge
out
jo
stos
pusha
les
pop
and
jmp
pop
ljmp
scas
fisubs
pop
stos
iret
cmpsl
adc
mov
hlt
inc
fidivrs
popa
out
jl
mov
shlb
adc
add
and
sbb
int
pushw
repnz
pop
xchg
inc
test
ret
shlb
mov
popa
aad
mov
jbe
dec
xchg
in
adc
sbb
mov
mov
ds
pop
or
add
icebp
jno
loop
or
loope
mov
repz
push
jg
mov
fcmovnbe
push
and
inc
data16
icebp
dec
je
dec
mov
addl
movsb
iret
mov
repnz
push
loop
xor
pop
mov
je
bswap
sub
xchg
movaps
jmp
data16
lcall
sub
daa
sub
jl
in
fs
stos
and
loopne
mov
outsl
sub
inc
insb
mov
enter
daa
lahf
jg
out
xor
lea
push
mov
andl
jno
xchg
out
nop
sub
int
in
xor
and
outsl
push
push
push
push
mov
int3
loopne
push
jmp
jns
mov
add
ja
adc
sub
xchg
shrb
mul
sub
xlat
xchg
scas
jg
mov
icebp
out
xchg
arpl
aam
std
dec
addr16
push
addr16
sub
mov
subb
aam
cltd
push
mov
sbb
dec
push
mov
pop
xlat
mov
pop
mov
in
mov
cmp
inc
add
sub
lock
cmp
icebp
cld
cmc
push
cltd
adc
mov
nop
jg
pop
in
jb
mov
mov
mov
rcl
ja
xor
sub
mov
mov
add
mov
mov
add
cbtw
lock
mov
jnp
or
xchg
loop
out
mov
ds
mov
xlat
dec
mov
sub
sbb
pop
flds
and
js
add
int3
sbb
xor
jb
mov
and
pop
pop
not
repnz
fidivrs
lret
push
repnz
jns
sbb
imul
std
outsl
xchg
cltd
popf
and
mov
fcompl
fmulp
inc
jl
push
mov
cmp
mov
jbe
jbe
cli
nop
ljmp
aaa
jno
faddp
dec
je
push
push
sub
sub
ss
mov
pop
dec
lret
subl
mov
test
sub
inc
lret
lods
xchg
sbb
add
add
cmp
in
or
inc
daa
mov
inc
jmp
pop
pop
pop
loope
out
pop
jne
pop
js
xor
adc
sub
mov
dec
inc
sbb
jl
aaa
jbe
xor
nop
std
lock
gs
push
and
pop
pop
mov
pop
fbstp
pop
jno
sub
test
das
or
sub
inc
lock
lods
rcrb
sub
in
sub
shll
mov
xor
test
xchg
int3
lds
ja
pop
fs
int
cwtl
std
pop
test
push
ret
movsl
add
mov
sbb
inc
fsubs
add
jmp
scas
dec
mov
mov
xlat
xchg
ja
jo
push
pusha
out
jmp
mov
loop
xchg
dec
stos
dec
insl
fstps
inc
test
out
out
xchg
cwtl
jmp
xor
jg
leave
cmpsb
sub
fsubl
out
mov
loopne
fs
xchg
andl
pusha
adc
jge
or
xchg
xchg
sub
push
lea
sub
xlat
and
dec
movsl
les
xorl
push
out
mov
fdivs
lea
inc
arpl
sub
pop
out
pusha
pop
inc
cmp
fdivs
pop
mov
data16
mov
inc
xchg
xchg
mov
fnsave
xchg
callw
and
icebp
inc
mov
aam
adc
mov
cmp
or
push
loopne
fsqrt
fildll
loop
pushf
jnp
push
push
xlat
test
xchg
dec
ficomps
jae
fs
dec
in
pop
jl
dec
sbb
lods
jo,pn
hlt
cld
pop
popa
push
inc
pop
mov
adc
dec
pop
loopw
inc
test
pop
mov
pushf
cltd
or
xchg
pop
sbb
adc
loop
aas
sub
pop
mov
imul
mov
inc
addb
push
lock
scas
cmpsl
xor
sub
inc
xor
push
arpl
outsl
or
mov
imul
push
or
cltd
adc
jl
xor
ds
cmp
popa
test
js
popa
inc
xchg
push
or
int
sarb
data16
push
dec
xor
pop
or
addr16
sbb
leave
incb
sbb
or
popa
cs
stc
adc
sbb
xorl
add
fisttps
xchg
mov
cwtl
dec
in
ret
mov
pop
jmp
or
xchg
push
xchg
ljmp
cmc
or
xchg
out
mov
fisttps
cltd
cwtl
fsts
sbb
andl
sahf
jge
jg
enter
lcall
lret
pushf
stos
cmp
aas
add
add
or
out
mov
sub
in
scas
or
push
lds
add
mov
mov
inc
inc
push
fsubp
pop
adc
ja
mov
fstl
sbb
jp
mov
fisubrs
stos
test
push
pop
mov
stc
fadds
pop
test
dec
dec
roll
add
mov
pop
clc
xor
or
cmp
movnti
lock
dec
pop
lods
xchg
and
jno
mov
shl
xor
pushf
lret
stc
sbb
and
mov
or
insl
fildll
mov
xchg
es
arpl
movsb
or
std
adc
call
subb
sbb
sahf
xor
call
ret
ds
ds
inc
xor
adc
mov
push
xchg
mov
notb
stos
fbld
xor
lods
fwait
call
imul
add
rcrb
aaa
push
dec
jns
lret
loopne
xlat
and
add
push
bound
sbb
shl
mov
jns
xor
jp
xor
test
inc
in
xchg
aad
push
push
adc
jb
dec
mov
sbb
mov
mov
jge
pushf
outsl
dec
adcb
frstor
les
and
lret
inc
cmp
add
ja
sub
outsb
add
sbb
outsl
jp
ss
repnz
aam
sbb
lret
jge
adc
aaa
lods
cld
sbb
sub
sub
out
pop
ret
fs
xor
les
shlb
fwait
les
pop
pop
mov
mov
outsl
add
mov
mov
xchg
in
es
cltd
mov
mov
stos
inc
out
in
and
test
fcomps
sub
push
or
enter
fsubrl
xchg
mov
ja
pushf
dec
popa
dec
xchg
cwtl
cmpsl
pop
jl
xlat
push
repz
incl
dec
mov
add
repz
ljmp
jmp
push
pop
sbb
adc
out
sarl
cltd
arpl
jl
cltd
sbb
adc
pop
aaa
and
hlt
cmp
pop
mov
and
cli
or
cmp
data16
ret
and
mov
mov
cmp
stc
mov
pop
aaa
xor
rcl
mov
out
mov
jmp
imul
sbb
idivb
divps
sbb
lret
mov
lahf
and
test
rorb
mov
mov
enter
mov
jno
inc
xor
xchg
pop
push
das
cmp
mov
int
xor
test
shrb
cmp
popa
xor
xchg
sub
adc
mov
cmp
push
mov
mov
lahf
fldcw
out
jge
fstpt
sub
cmp
inc
xor
and
int3
in
pop
sub
sub
and
pop
inc
mov
sahf
scas
xchg
add
rclb
adc
lea
jo
test
jmp
loope,pn
fiaddl
xchg
inc
loopne
daa
sub
and
stos
jecxz
dec
mov
mov
xor
push
outsb
dec
mov
sbb
xchg
iret
out
int
lea
stos
dec
stos
inc
aam
lcall
add
rolb
xchg
outsl
movsl
pop
inc
sbb
push
out
cmpsl
fldt
mov
lret
dec
xchg
mov
push
adcb
rol
test
jmp
jae
adc
shrb
xchg
jl
dec
insl
add
fidivs
and
mov
and
gs
fs
sbb
ret
jg
loopne
jp
xchg
inc
cmp
jb
push
shrb
adc
adc
dec
mov
pop
inc
or
fidivrl
rcll
adc
cmp
iret
sbb
xor
adc
mov
push
mov
sahf
insl
icebp
add
mov
push
mov
stos
mov
pop
mov
lcall
mov
jnp
mov
std
scas
mov
loope
jg
jge
cmp
test
test
loope
cld
or
mov
out
scas
cmpsl
pop
lcall
inc
outsl
and
jp
nop
pop
aad
insl
lds
or
pop
popa
fucomi
pop
dec
cmp
and
inc
or
pop
adc
push
pop
addr16
add
cmp
fstl
jg
mov
aaa
insb
bswap
aaa
jno
daa
push
xlat
dec
leave
or
popf
data16
fs
jae
arpl
xorl
andl
ffree
lcall
mov
add
xchg
mov
adc
mov
inc
arpl
mov
jno
out
stc
mov
xor
les
add
dec
insb
ja
sbb
mov
inc
rcrl
push
add
hlt
inc
pop
sub
lods
imull
xor
lods
lods
pop
xchg
mov
stos
mov
shrl
xor
xor
mov
daa
sahf
mov
shll
hlt
sti
out
dec
push
pop
in
incb
rcl
stc
xor
out
adc
call
fwait
pop
mov
inc
sbb
notb
adc
sbb
arpl
add
icebp
test
mov
fstps
scas
mov
pusha
sbb
outsl
mov
into
lret
xor
js,pn
cmp
add
push
clc
lcall
ljmp
nop
push
xorb
jae
imul
push
scas
jno
lcall
cmpb
xor
int3
notl
in
jne
mov
pop
inc
mov
test
test
jo
sub
push
je
xchg
ss
adc
je
gs
cs
cld
dec
fs
test
push
cmpsl
xor
stos
cld
mov
iret
in
cs
aaa
outsl
shll
fstps
jnp
ret
es
test
jmp
int
sbb
out
push
xchg
lret
int3
pop
imul
icebp
faddl
jmp
lret
mov
and
sub
shl
shrb
xchg
fldl
lds
pop
test
das
out
pop
or
xlat
inc
inc
adc
cmp
jp
repnz
ficoms
inc
cltd
js
xchg
mov
sbbl
sbb
clc
inc
les
mov
shlb
fmull
int
pop
jmp
pop
and
imul
mov
push
cld
pop
outsl
imul
std
mov
adc
xor
adc
mov
in
and
je
cmp
sub
xlat
mov
pop
lret
and
inc
scas
inc
nop
inc
repnz
rcl
add
fs
mov
push
jmp
mov
xor
ret
fldl
adc
test
movsb
cmpsl
imul
sbb
mov
adc
push
push
xlat
push
or
insb
mov
sbbl
mov
adc
sub
cmp
lcall
xchg
xchg
jge
dec
int
push
movsl
neg
jae
push
push
aaa
pop
mov
idiv
jae
mov
loope
mov
fmuls
in
out
jg
subb
movsb
mov
fcomps
divl
xor
pop
test
xchg
push
adc
out
mov
out
shl
add
push
imul
imul
std
lods
jnp
push
add
mov
fnstsw
test
inc
pop
int3
ss
loop
xor
add
cmp
pop
pop
pop
lods
lds
push
lcall
inc
in
sub
dec
xchg
push
dec
lods
sub
cld
out
sbb
rolb
int3
jae
ss
push
fildll
mov
mov
lock
fimuls
jae
pushf
mov
dec
xor
outsb
adc
or
and
push
sbb
aaa
sbb
inc
popa
testb
sub
lock
les
mov
or
nop
mov
cmp
lcall
pop
mov
pop
cmpsb
xor
into
pop
xchg
and
pop
shr
daa
pop
mov
andb
lods
inc
xchg
stos
pop
or
sbb
aam
test
dec
aam
mov
aaa
fisubrs
popf
cmp
jno
rorl
popf
dec
pusha
sub
mov
inc
popf
xor
xchg
ds
imulb
lock
jb
in
das
dec
mov
push
add
dec
inc
fldcw
pop
dec
inc
jne
push
insl
inc
mov
sbb
xlat
xchg
aad
sbb
dec
jbe
mov
xchg
sub
js
mov
cmp
sub
cmpsl
jnp
clc
inc
sub
cld
mov
sti
sub
mov
dec
subb
sbb
scas
sub
int3
loope
or
loop
add
sarl
lods
add
or
cs
add
stos
add
fsts
xor
gs
insb
pop
cld
lret
push
in
leave
pop
or
cmpsl
cmpsb
fidivs
xor
outsl
push
inc
test
xchg
mov
xchg
jle
and
jbe
xor
test
jno
shll
xor
fists
movsb
pop
mov
fistpll
rcrl
sub
dec
add
and
push
push
aad
pop
push
stc
fcoml
out
fdivs
nop
jge
dec
xor
nop
sbb
pop
int3
js
test
aas
xor
or
ljmp
fnstsw
fldcw
ror
movsb
inc
test
dec
mov
pop
jge
dec
stc
push
jbe
push
rolb
repnz
outsl
pop
lods
je
push
adc
cmpsb
jge
push
bnd
or
imul
cmc
jns
and
mov
popa
jl
push
ds
xcrypt-cfb
cmpsl
and
cmp
pushf
push
pop
outsb
aam
or
adc
mov
int
cmp
sbb
cwtl
test
pop
jl
jmp
xor
dec
cwtl
jl
sub
shl
fwait
cltd
sahf
and
pop
pop
rclb
xchg
push
xchg
cwtl
push
jb
fbld
popa
jno
jge
lret
add
push
mov
and
mov
test
jp
out
jecxz
repz
adc
mov
loop
das
leave
jge
fimull
cmp
add
dec
popf
fidivrs
mov
mov
mov
mov
in
out
lock
mov
mov
inc
and
loop
inc
lret
mov
adc
push
jb
test
jp
mov
les
and
inc
pop
fld
pop
jl
js
aaa
imul
out
sbb
sbb
sub
lahf
sub
fidivrs
lods
cwtl
call
daa
daa
fistl
pop
dec
imul
lods
add
or
add
das
fcoml
xlat
add
shlb
test
add
xor
ljmp
popf
push
add
dec
cwtl
fdivrl
cltd
aaa
cmp
push
cwtl
dec
cli
clc
mov
cmpsb
mov
in
sbb
scas
imul
sti
call
out
out
in
test
outsl
mov
pop
fisubs
mov
mov
jns
test
jno
scas
jl
xor
icebp
std
and
and
add
rcrb
scas
and
xor
jle
jae
sbb
movb
hlt
xchg
mov
pop
mov
into
fstl
enter
push
movsw
test
mov
mov
sbb
xlat
lret
mov
lds
mov
cmp
pop
pop
loop,pt
cmpsb
sub
inc
mov
lret
rcrb
ds
fdivrs
mov
pusha
and
push
lahf
out
std
dec
jp
jge
and
mov
mov
aas
sub
jge
adc
into
fildl
mov
std
cmpsb
mov
add
cwtl
lahf
inc
lds
enter
and
or
mov
cmpsb
jne
iret
push
jp
inc
adc
out
fdivp
fdivrs
sbb
fildl
loopne
dec
xor
xchg
push
jne
add
das
and
add
iret
popl
out
sbb
inc
fimuls
repz
out
enter
inc
dec
mov
add
dec
stos
cmp
adc
scas
test
bnd
xor
inc
rorb
xor
data16
std
hlt
or
into
shl
rcll
jbe
aas
fstl
outsl
js
dec
mov
add
mov
je
sbb
lods
mov
loopne
addb
dec
out
mov
or
sbbl
das
mov
repnz
sub
mov
sub
mov
fsubr
sahf
in
or
clc
adcb
insb
push
mov
dec
push
pop
xchg
mov
pop
xor
mov
int
pop
jl
and
orl
aaa
test
fiadds
sarl
jmp
loopne
mov
sub
test
stc
lahf
mov
pop
loope
dec
pop
push
in
jae
es
je
dec
out
ss
or
clc
pop
inc
repz
sub
stc
dec
es
pop
sub
cmp
mov
add
ja
les
xor
mov
sbb
jae
fadds
cmpsl
sub
dec
pop
mov
add
adc
fidivrl
rorl
popf
cltd
ss
sub
push
fisttps
decl
fistpl
push
cli
add
inc
aad
insl
xchg
mov
test
or
das
out
mov
ja
outsl
mov
pop
mulb
and
xchg
jnp
or
fsubl
inc
stos
clc
repz
xorl
and
push
jns
insl
cmp
xchg
add
lods
jge
scas
mov
dec
and
das
imul
ja
hlt
cmp
jns
lds
mov
mov
mov
loop
xor
gs
jae
xor
or
sub
or
lods
fbstp
arpl
or
icebp
dec
clc
int3
jb
insl
mov
fistpll
lret
into
xchg
int3
shrb
and
sub
mov
stos
mov
in
dec
jmp
cmp
adc
pop
xor
or
and
inc
hlt
dec
fsubs
push
cwtl
in
dec
out
push
and
xchg
sbb
and
adc
mov
arpl
mov
lds
xlat
mov
stos
pop
jae
outsl
mov
scas
add
iret
mov
andl
and
pop
fcoml
push
xlat
in
jb
iret
pop
inc
fdivs
mov
push
mov
lret
imul
mov
jp
mov
enter
in
xor
repz
test
and
dec
fistpll
or
vmovups
nop
xchg
loop
fidivl
das
jo
js
xchg
lods
repz
incl
push
jae
mov
adc
cmovns
cld
loop
mov
andb
daa
stc
mov
mov
cltd
dec
add
rorb
and
xchg
cwtl
shlb
stos
je
loope
bound
jl
mov
call
cwtl
lock
mov
stos
lds
loope
jl
cmc
xchg
push
int
test
lods
ja
fsubrp
push
add
and
dec
mov
pop
mov
mov
jg
inc
cmp
rcll
nop
lahf
cmp
movsl
sbb
daa
push
and
movsl
faddl
mov
int
ljmp
push
push
mov
and
mov
and
pop
adc
sbb
add
out
sub
jno
sbb
and
mov
push
xor
pop
loope
lret
jg
les
ja
loopne
lahf
xchg
push
ret
jnp
in
lea
or
dec
push
mov
mov
inc
or
arpl
lods
sahf
and
pop
je
movsl
pop
imul
scas
sub
es
mov
mov
inc
xchg
mov
fsubr
cld
adc
push
shl
fimull
repz
pop
cmp
jbe
mov
xchg
adc
mov
xor
push
lods
push
pop
xchg
insl
scas
insl
jge
ret
push
addb
scas
cmpsl
jg
mov
hlt
push
jl
in
mov
ljmp
sub
in
out
mov
push
or
cmp
or
mov
sahf
xor
jecxz
rorb
push
fbld
mov
lds
sahf
sbb
sahf
lea
out
pop
loop
lock
shrl
aam
roll
push
in
jne
push
add
mov
test
movsl
jb
sbb
xchg
fs
inc
cmp
mov
dec
lods
dec
movsl
outsl
pop
xor
push
inc
and
push
dec
xchg
mov
ljmp
mov
dec
outsl
pop
lods
mov
int
inc
push
sub
mov
js
fnstenv
lods
lock
enter
in
jbe
xor
imulb
jbe
sbb
xor
jge
pop
decb
mov
cmp
and
dec
mov
clc
pusha
rclb
dec
sbb
imul
sub
in
pop
gs
pop
insb
push
jno
dec
add
inc
fidivrs
lock
sbb
jo
cwtl
sbb
cwtl
xchg
loopne
repnz
sub
test
mov
lods
jno
xor
int3
sbb
std
mov
daa
ja
scas
add
mov
xchg
mov
das
push
bound
mov
outsl
mov
jnp
xchg
sub
test
cmp
aaa
stc
add
and
dec
addb
icebp
jnp
mov
lret
ret
cltd
dec
mov
fistl
push
pop
pop
inc
sbb
xchg
faddl
xchg
dec
insb
sbb
xchg
push
lea
mov
in
aaa
fnstcw
lods
xor
outsb
sub
inc
fs
push
insl
aam
push
adc
nop
outsb
js
add
push
shll
or
neg
ja
xor
or
stos
outsl
inc
mov
idivb
mov
sub
xchg
and
sahf
popa
pop
and
adc
loop
mov
xchg
in
dec
xchg
adc
int3
jne
repnz
push
orl
and
outsl
fdiv
inc
loope
lea
loop
out
cwtl
xchg
int
leave
jg
inc
cli
stc
scas
enter
lret
and
fcoms
dec
in
repz
push
fistpll
pop
jbe
mov
pop
frstor
pop
mov
mov
cmp
or
popf
and
adc
loope
inc
cmp
fisttpll
leave
mov
popl
mov
ljmp
les
inc
int
push
lds
out
mov
shlb
lds
scas
scas
sbb
and
fnsave
lcall
ret
fsubrp
cmp
or
cmp
loopne
in
fdivrl
and
les
mov
sub
or
jg
and
mov
sbb
int
mov
jl
fidivs
mov
add
daa
jae
ljmp
add
mov
lret
push
and
mov
sbb
andl
pop
lods
insb
popa
sub
popa
adc
rcrl
jp
pushf
shrl
pusha
mov
and
loope
cmp
ret
mov
cwtl
fdiv
in
fisttpll
push
jp
sbb
imul
cmp
mov
fistpl
ss
adc
dec
in
pop
repz
mov
pop
cmp
fiadds
lahf
leave
stc
fbstp
hlt
arpl
into
fistpll
dec
cmpl
jl
orl
pop
sub
pusha
repz
lods
mov
add
inc
push
jbe
fucom
sub
stos
xchg
xchg
add
dec
mov
cld
pop
hlt
jmp
into
in
cmpsb
jnp
inc
xchg
ret
ret
in
nop
leave
test
and
mov
shrb
stc
inc
je
fidivrs
sbb
xor
inc
icebp
inc
icebp
cli
push
ss
cmp
push
clc
jecxz
addr16
adc
inc
ds
xor
mov
add
in
aas
add
pop
loope
aas
push
and
sub
fisubrl
sbb
xor
adc
aaa
mov
add
stos
push
add
sbb
in
pop
in
cmp
cli
and
je
mov
out
movsb
lahf
dec
stc
push
mov
sbb
loop
stos
sub
jb
cli
and
cmc
ljmp
mov
lcall
jb
push
lret
or
mov
dec
jmp
nop
scas
icebp
dec
jns
cmp
jecxz
pop
movsl
sbb
mov
sbb
out
lcall
pushf
sbb
xchg
iret
jecxz
jo
test
cmp
push
je
jle
pop
enter
mov
add
data16
subl
sti
adc
mov
xchg
imull
dec
loop
fisttpll
lret
fstps
ljmp
in
xlat
loopne
jno
outsl
movsb
icebp
loope
lock
add
jnp
add
push
inc
test
or
mov
jge
sahf
adc
push
test
cltd
repnz
push
xor
stc
mov
cld
add
lods
push
adc
mov
shll
repnz
add
hlt
dec
bound
int
adc
xor
fs
std
les
pop
mov
push
push
jae
shlb
test
pop
mov
in
rorb
and
pop
stc
mov
inc
nop
shlb
inc
jne
outsb
xor
test
aad
push
inc
subb
dec
sub
pop
cs
inc
adc
into
outsb
in
add
pop
test
stos
icebp
sub
jae
sub
and
shrb
hlt
out
stc
fnsave
lods
mov
test
add
ds
xchg
ficompl
push
mov
popa
push
std
cmp
jecxz
int3
lods
xlat
sbb
cmp
inc
pushf
pop
nop
into
mov
das
and
and
jecxz
rep
sub
outsb
and
outsb
cwtl
mov
insl
mov
cmpsl
and
test
lret
jb
add
adc
cmp
daa
scas
push
fsubl
xor
mov
pop
fadd
sub
xchg
les
pop
xchg
jmp
pop
fdivs
movsb
and
push
xor
jge
ret
push
and
fs
std
repz
iret
ret
fwait
std
pop
push
sub
mov
adc
outsb
jmp
bound
and
and
sub
mov
fwait
fs
aaa
xchg
sbb
sbb
push
sti
adc
addb
jno
lock
xor
and
adc
adc
adc
dec
push
xchg
mov
sahf
popf
xchg
mov
fmull
nop
adc
jb
pop
out
adc
cmc
adc
repz
imul
xchg
shll
jge
add
stos
cmp
xchg
cmc
sti
add
dec
and
mov
outsb
push
and
movsb
loop
push
cmp
sub
mov
je
enter
pop
cwtl
movsb
sbbl
mov
in
push
add
lret
jp
pop
mov
mov
hlt
not
sub
mov
fwait
cmp
inc
fcmovnbe
stos
hlt
and
aaa
imul
xor
cmpsb
shrl
xor
push
or
mov
in
mov
or
mov
push
je
stos
sahf
jle
adc
pusha
mov
and
or
mov
mov
lods
test
jns
pop
jg
jg
cmpsl
sub
xor
adc
cmp
clc
push
jmp
xor
xchg
fbstp
orb
sub
push
mov
into
fsubrl
cmpsb
dec
repnz
jb
push
mov
movl
loop
lcall
clc
dec
arpl
sti
and
cli
push
fcom
aas
mov
mov
pusha
jle
rcr
js
mov
rclb
ds
add
in
in
cmp
push
repz
xor
in
test
rclb
jns
popl
rsqrtps
imull
xlat
imul
cmpsb
xchg
sub
test
fldl
lods
test
sub
cmp
add
xchg
or
shrl
xor
add
sub
filds
jle
add
cmpsl
jns
cmpsb
int3
jae
xchg
cmp
jo
jns
movntq
out
int3
xchg
int3
dec
leave
aam
dec
dec
and
push
pop
out
out
mov
pushf
in
mov
sub
les
hlt
mov
pop
or
inc
aam
xchg
pop
rorl
inc
jbe
mov
xor
adc
inc
roll
inc
jae
insl
inc
add
sbb
jecxz
int
aaa
mov
mov
dec
rolb
lcall
movsl
es
inc
iret
jmp
fadds
xchg
jg
jae,pn
push
cmpsl
movsl
mov
aaa
cmp
lock
out
adc
xor
arpl
add
stc
add
in
int
or
lods
mov
and
push
stos
jmp
ss
pop
repz
mov
push
cli
int3
lock
xlat
jp
mov
cmpsb
in
jno
xchg
sbbl
outsb
jg
mov
sub
xchg
sub
test
or
sub
pop
jnp
lahf
add
jmp
stos
insb
loop
das
je
mov
sub
test
bound
push
addr16
dec
lea
hlt
into
iret
out
lods
inc
xor
cmp
lahf
adc
mov
dec
bound
insl
xlat
jb
and
or
jl
dec
sbb
in
adc
mov
test
ficompl
xchg
xor
insb
inc
decb
mov
aad
push
xor
fwait
dec
or
jmp
sbb
orb
fwait
lret
jb
pop
cltd
lea
loope
scas
outsb
dec
or
xchg
addr16
push
push
pop
mov
mov
adc
mov
push
push
pop
adc
xchg
cmp
scas
mov
popa
jecxz,pt
add
xchg
aas
jbe
imul
inc
iret
xor
and
mov
push
popf
arpl
mov
xchg
push
push
or
sahf
sbb
mov
jmp
fs
sbb
cmpsb
and
mov
adc
ljmp
fstpt
jmp
push
ja
mov
out
mov
jl
push
inc
ljmp
adc
sbb
and
pop
sarl
push
pushf
hlt
dec
push
stc
call
jo
jl
add
cmp
xlat
btc
pop
imul
or
inc
sbb
lcall
sarb
push
sbb
out
mov
adc
testb
sti
imull
in
fnstenv
pop
mov
push
stos
mov
xor
pop
cmp
jbe
sar
pop
mov
daa
je
or
dec
lret
movsl
pop
orb
sub
icebp
dec
stos
in
sti
push
out
xchg
add
lds
cld
lds
inc
repz
inc
xchg
sti
pop
cmp
push
or
push
and
mov
stc
mov
out
xchg
xor
loopne
lcall
dec
rorl
test
sub
mov
stos
stos
out
repnz
scas
mov
dec
mov
or
in
sar
sti
xor
sbb
and
mov
adc
sti
inc
adc
aam
nop
loope
xchg
mov
ficoml
xchg
mov
fwait
mov
pop
jbe
jecxz
and
mov
and
sti
mov
out
add
das
sbb
dec
cmp
mov
into
imul
dec
mov
iret
test
push
add
fwait
aad
pusha
mov
jge
test
in
jae
std
insl
push
inc
in
cmp
jle
push
ss
testl
pop
sub
ja
push
adc
pop
pop
push
sub
or
push
dec
mov
in
fs
inc
jmp
inc
xor
fadds
mov
dec
cltd
leave
dec
lcall
mov
cmp
fstp
lahf
add
fimuls
loopne
in
xchg
jo
clc
sub
add
mov
iret
movq
mov
bound
xchg
adc
and
rol
aad
mov
imul
inc
dec
testb
iret
inc
sti
mov
mov
leave
pop
cwtl
mov
in
bound
lods
inc
push
and
xor
jmp
add
push
xor
movsl
lret
mov
or
stos
outsb
out
inc
ret
sbb
mov
imulb
xchg
xchg
push
jbe
in
or
cli
xchg
insb
aam
stos
mov
loop
nop
add
test
int
jle
xchg
inc
sbb
jp
repnz
lods
das
cmp
insl
jge
add
push
sbbl
daa
js
jbe
pop
jecxz
test
push
xor
sbb
imul
push
pop
mov
jns
jae
and
jne
mov
xor
aad
negb
rol
pop
fstpl
pop
adc
and
mov
sbb
push
jmp
pushf
repnz
xor
inc
jbe
adc
mov
push
fstp
mov
add
ffreep
lahf
mov
push
push
mov
inc
imul
insb
adc
push
les
loop
popf
inc
xor
pop
imul
cmpsb
cmp
jp
xor
bound
mov
cmpsb
movsb
subb
leave
cmp
and
add
sub
mov
nop
shr
in
cmp
inc
xor
pop
pop
mov
lret
mov
lahf
cmp
cmp
jnp
cmp
xchg
jg
js
out
lahf
pop
xlat
icebp
push
sahf
and
cmp
jecxz
or
test
ret
movsb
mov
call
inc
in
dec
add
popf
mov
or
out
in
loopne
pop
push
mov
lcall
inc
loope
jb
mov
arpl
xchg
cli
mov
cmp
iret
imul
lcall
icebp
clc
fldt
lods
leave
stc
jae
scas
mov
lahf
div
push
xchg
mov
adc
loopne
jmp
in
adc
mov
arpl
cld
sbb
xor
test
jb
sarl
push
imul
mov
call
orb
leave
aaa
cmp
mov
xchg
addr16
clc
cli
pop
dec
xlat
cltd
sti
lods
inc
jnp
imulb
mov
dec
and
jns
sbb
clc
sbb
or
xlat
cli
call
mov
mov
sub
cmpsb
adc
sub
xchg
fisttps
dec
jle
aas
jg
sub
inc
fcmovu
mov
dec
adc
or
movsb
fnstsw
hlt
xchg
mov
rcll
xor
sub
add
and
dec
mov
cmp
sbb
mov
mov
pop
fcmovnu
cli
lret
insl
jp
ficompl
push
fimull
jo
das
and
repz
arpl
jmp
lahf
mov
jge
dec
popa
rcll
pop
push
pop
hlt
adc
rcll
int
ss
sbb
pop
or
push
jmp
sbb
ljmp
int
popa
sub
je
xchg
jns
lret
xor
or
stos
jb
pop
adc
ret
pop
push
and
test
imul
aas
int3
les
pop
scas
outsl
lret
imul
sub
mov
push
addl
add
ss
push
or
lods
scas
jnp
or
lods
dec
pop
sub
test
popf
jecxz
add
shlb
fs
mov
add
call
pusha
jb
fdivrs
imul
cmp
adc
push
inc
mov
pop
jmp
mov
sbb
and
push
pushf
xchg
dec
jg
push
and
mov
xor
loope
stos
cmp
xchg
pop
stos
jle
gs
fcom
ja
push
xchg
movsb
or
xchg
enter
dec
es
lods
pop
xchg
dec
in
stc
out
arpl
imul
cmp
lea
and
mov
and
div
dec
lea
jl
inc
add
rcrl
in
ret
adc
mov
test
and
hlt
sbb
xchg
push
jbe
idiv
cmp
push
sbb
jae
mov
cmp
inc
jne
pop
sbb
mov
outsl
sub
jmp
push
aam
les
mov
adc
rclb
mov
sbb
jae
jle
pop
jb
push
iret
and
lods
scas
fdivl
loop
adc
mov
jmp
cli
and
sahf
fnstcw
test
inc
test
mov
insl
mov
std
iret
add
bnd
xchg
pop
sarb
loope
jo
leave
inc
or
adc
push
jle
pusha
mov
loop
outsb
repnz
das
pop
scas
ss
fisubs
dec
sub
and
cmpl
push
out
add
fiaddl
dec
out
xor
shrb
insl
fisubl
or
popf
sub
mov
jbe
or
pop
scas
or
mov
pushf
cmp
pop
and
fisubl
ss
mov
or
loopne
mov
fstps
and
mov
push
and
mov
pop
xor
push
daa
xchg
adc
mov
mov
or
loopne
sbb
xor
popf
jp
mov
jb
jns
mov
pop
ss
hlt
test
mov
cltd
insb
movsb
and
outsb
adc
adc
into
fsts
mov
pop
xchg
popf
cmp
sub
add
inc
xchg
cltd
push
js
jp
cwtl
push
mov
xor
jge
xor
push
iret
jle
pop
fldcw
fbstp
inc
loope
fwait
in
sbb
mov
push
dec
sarb
je
mov
jge
jo
stc
pop
xchg
add
idivb
repz
dec
mov
jae
xor
pop
inc
enter
enter
push
jae
pop
cmp
adc
out
sub
sarl
int
jno
jle
int3
pop
dec
cmp
sbb
lods
jmp
add
xor
es
lret
cmp
jg
push
fstps
fisttpll
xchg
push
in
shll
push
xlat
in
jnp
mov
jp
sub
icebp
mov
adc
scas
and
sub
ret
fimull
jb
data16
or
xchg
mov
test
jge
imul
xor
in
rcll
lret
inc
cltd
cmp
cltd
or
jb
es
aas
popf
or
arpl
sbb
cld
lcall
repnz
add
not
imul
mov
mov
jnp
lahf
sub
sbb
out
add
xchg
jns
imul
outsl
mov
imul
int
push
add
push
sbb
xchg
and
idivb
inc
jl
mov
clc
add
jmp
rcl
imul
mov
mov
mov
mov
push
test
insl
jge
push
enter
pusha
leave
imul
call
imul
into
hlt
mov
ljmp
mov
mov
sub
shll
imul
fisttpl
cmc
sbb
lcall
les
fists
loopne
cmp
lahf
or
push
xor
mov
push
addr16
movsb
sti
mov
xor
bound
shl
or
pop
push
inc
stos
xchg
inc
enter
orb
lock
mov
sbb
int3
cltd
mov
xor
sbb
ret
push
jno
lods
mov
shlw
jge
adc
push
jg
push
into
outsb
loope
mov
inc
shlb
mov
push
sbbl
lcall
inc
ds
jl
js
mov
rcl
bswap
mov
imul
in
ljmp
cmp
notb
dec
inc
test
push
and
pop
sbb
add
inc
xor
and
pop
sbb
mov
xchg
dec
mov
fnstsw
xchg
push
or
jle
sub
or
call
adc
sti
cmc
out
xor
xchg
sub
xor
jne
push
or
sarb
shlb
cmp
jns
xlat
mov
push
fistps
bound
pop
inc
add
pop
call
jns
jl
cld
adc
push
mov
mov
or
mov
ja
pop
dec
inc
dec
inc
mov
xchg
loope
movsl
sub
ret
jp
cltd
fldcw
mov
xchg
aad
lcall
enter
call
jns
cmp
dec
gs
fcoml
aaa
popa
or
add
jle
cmp
shrl
pop
ss
into
dec
pop
jl
dec
mov
push
dec
adc
adc
jo
or
and
mov
or
mov
xor
and
lret
jmp
test
rcl
lret
and
xor
loope
sub
out
pop
pop
add
data16
sbb
mov
ret
pop
dec
lcall
loopne
clc
pop
aam
xorl
fimull
ds
lcall
push
loop
inc
add
and
repnz
push
jmp
xchg
cmp
dec
sub
int
aam
enter
inc
in
cmp
hlt
push
shlb
ret
xchg
out
dec
lods
ret
mov
xchg
mov
cwtl
sbb
cmp
cmp
lcall
add
mov
pushf
xor
cld
adc
jbe,pt
xchg
mov
stos
sbb
inc
scas
jno
jl
push
decb
xor
lret
outsb
jb
adc
fistpl
in
aam
mov
jbe
inc
dec
mov
ljmp
insb
pop
add
lcall
test
cld
and
jle
sbb
aad
push
ficomps
outsl
clc
push
in
fimuls
xchg
adc
push
push
push
mov
mov
push
or
pop
stc
inc
hlt
sbb
sbb
aaa
std
lock
insb
aam
mov
nop
pusha
mov
mov
std
mov
sub
adc
fadds
pop
imul
xlat
adc
insb
inc
nop
mov
jge
and
cs
jo
pushf
xor
fisttpll
add
xlat
loope
xor
or
pop
stos
mov
push
mov
stos
out
xor
xchg
mov
pop
pop
mov
es
mov
roll
jecxz
mov
push
arpl
divb
insb
push
in
ja
push
mov
push
mov
adc
stos
or
adc
arpl
je
sub
ja
out
sbb
int
xor
cmp
push
and
mov
lea
outsl
adc
or
xor
les
xor
fisubl
jns
or
pop
int3
xor
pop
and
movsb
sub
lock
lret
cld
test
incb
or
add
sbb
jmp
loopne
jge
outsl
push
xchg
and
int
jne
sub
mov
sbb
and
pop
push
and
addl
mov
xor
ljmp
cmpsb
shrl
and
std
aaa
popf
sbbb
add
loop
jbe
xor
mov
mov
jnp
and
add
sbb
addps
repz
shrl
pop
mov
inc
adc
sub
pop
inc
and
arpl
mov
test
in
xor
cmp
flds
cltd
cmpsl
ficoml
inc
or
std
and
js
stos
pop
dec
rcrb
pop
jmp
sbb
cmp
or
and
or
mov
or
mov
mov
dec
insb
mov
stos
inc
inc
mov
shrl
mov
call
cmp
push
sahf
out
xchg
outsl
sbbb
push
mov
sti
xor
add
inc
fldl
je,pn
stc
adc
fstps
outsl
push
dec
inc
push
mov
lea
jge
and
inc
jmp
shrl
push
adc
shll
push
xchg
mov
rorl
lea
inc
lahf
mov
jno
test
dec
hlt
pop
push
sbb
lock
mov
and
sbb
dec
xchg
adc
rcl
sub
adc
mov
mov
aam
inc
gs
in
mov
std
xchg
dec
mov
mov
or
into
in
push
mov
xor
es
cwtl
inc
push
cmc
int
mov
lea
xchg
mov
and
inc
mov
ret
fs
jmp
inc
pop
or
adc
adc
sub
inc
pop
push
scas
mov
cmpsl
movsl
out
mov
int
in
inc
sti
sbb
add
add
push
add
inc
test
lahf
test
jo
lods
adcl
lcall
pop
push
call
repnz
repnz
pop
imul
dec
test
push
mov
dec
ret
add
into
xor
lock
and
push
int
or
add
and
push
pop
dec
fisttpll
call
leave
outsl
ret
hlt
add
repnz
jnp
pushl
test
push
fucomp
cmc
fisubrl
inc
lcall
jg
mov
sub
fadd
aaa
sbb
push
jo
jb
lret
scas
mov
movsl
add
xor
or
push
inc
cld
lcall
std
rorl
xchg
mov
cli
imul
pop
and
sub
dec
loop
sub
mov
jl
cmpl
and
jbe
sub
inc
imull
jg
push
dec
sbb
inc
test
enter
div
gs
addr16
insl
repz
sbb
push
stos
sbb
andl
pop
or
jle
mov
push
lea
mov
daa
movsb
jae
test
jl
movsl
scas
mov
enter
jl
mov
jno
add
xor
cmp
jnp
cmp
imul
xor
cmp
cmp
jo
mov
inc
inc
sbb
mov
mov
and
lret
pop
dec
or
clc
sub
repz
dec
xchg
and
rclb
mov
pop
inc
lret
dec
das
stc
xchg
or
lahf
xchg
ljmp
push
xor
test
lcall
pop
sti
pop
shlb
rclb
jb
lods
xchg
mov
xor
fldl
fcomps
scas
sbb
outsl
das
in
inc
xchg
add
sbb
lods
paddsb
arpl
mov
inc
pop
jp
nop
jbe
xor
or
mov
add
je
dec
sbb
mov
iret
pop
jo
jne
push
dec
and
inc
stc
adc
mov
ffreep
sbb
add
jp
or
sbb
and
or
xchg
or
out
inc
xor
mov
push
mov
jnp
or
xchg
mov
xchg
out
sub
add
loope
mov
cmp
popf
pop
ja
sub
lret
addr16
outsb
mov
fstp
inc
add
push
lock
or
insl
or
sub
cmc
pop
mov
shlb
subl
xchg
xor
leave
mov
scas
xchg
mov
mov
pop
mov
and
std
xor
push
out
mov
dec
push
xor
jecxz
out
outsb
xchg
adc
call
ja
inc
leave
out
ret
movsl
jecxz
and
aam
or
or
cmp
pop
pop
mulb
pushl
xchg
imulb
inc
or
enter
inc
or
adc
je
mov
testb
dec
in
or
jge
aad
je
push
push
sub
mov
xchg
cs
cmc
mov
and
xchg
lret
cmpsb
dec
into
in
scas
push
fcomps
repz
pop
call
mov
mov
rorb
push
pop
pop
dec
dec
fcompl
cmpl
push
rcrb
clc
xchg
mov
andl
fidivl
test
push
push
addb
mov
mov
xchg
pop
fbstp
in
in
pextrw
movsb
lods
cmpsb
aam
xor
jbe
mov
lds
push
inc
add
stos
sub
xchg
jecxz
xor
inc
mov
dec
psubusb
addr16
arpl
cwtl
data16
test
popa
pop
cmp
push
into
shr
jbe
and
in
jno
mov
cmpsl
sbb
pop
fnstenv
pop
pop
xor
test
jecxz
sub
sbb
ljmp
mov
iret
and
test
xchg
push
les
jbe
into
ret
jmp
xor
inc
pop
mov
pop
mov
dec
sbb
push
inc
pushf
call
hlt
xchg
and
xchg
mov
fs
jb
rorb
ss
adc
mov
push
jp
scas
sahf
and
sbb
stc
leave
adc
mov
mov
mov
pop
das
lcall
jb
cld
mov
aaa
xorb
in
pop
xor
jns
lea
jno
jo
xor
movsl
and
mov
mov
rolb
lock
insb
pop
fbld
or
call
je
xorl
aad
xor
cmpsl
and
ds
es
ss
or
std
ja
mov
pop
out
inc
sbbl
adc
cmpl
pop
popf
outsb
lods
gs
dec
mov
out
push
cmp
in
insl
and
jp
xchg
fldl
cwtl
or
int
adcb
push
adc
mov
push
imul
pop
cld
cmp
lds
sub
sub
mov
in
ss
out
ss
mov
cs
aas
mov
int
call
mov
add
or
clc
sbb
pop
push
pop
mov
adc
xchg
loopne
xchg
mov
sub
aas
arpl
in
jbe
push
add
jne
xchg
sbb
icebp
popa
mov
test
lods
sub
out
or
add
pop
negl
jecxz
clc
shr
mov
xchg
cmpsb
mov
das
xchg
aas
cld
xor
scas
shrb
fcmovnu
test
xchg
sbb
gs
mov
and
fxch
and
arpl
push
add
mov
or
mov
in
sahf
int3
into
inc
ds
movsl
adc
in
mov
push
aad
jo
mov
jmp
adc
sub
fwait
adc
loop
mov
mov
insb
insl
in
mov
add
dec
adc
pop
push
cmp
imulb
movsl
rolb
lcall
imulb
push
repnz
add
stc
sti
cmc
lds
js
test
xchg
or
cltd
add
inc
adc
sub
xor
inc
gs
fsts
xchg
mov
push
pop
insl
xchg
sub
cld
cmpsl
and
test
pmaxub
xor
pop
adc
arpl
mov
cltd
inc
push
adc
aas
dec
ja
lods
popf
nop
test
aad
mov
sahf
cmp
aad
push
je
mov
pop
mov
lret
vpunpckhqdq
jle
sbbb
enter
mov
sti
shl
shl
lret
pop
iret
out
outsb
mov
cmp
dec
sahf
stc
xchg
insl
test
xchg
and
out
pop
movsl
jl
lock
out
paddw
mov
xchg
dec
jl
sbb
prefetch
dec
mov
notl
nop
imul
aas
sub
jl
push
sub
movsl
jp
push
rcr
mov
and
std
add
jl
adc
xchg
xabort
fwait
inc
dec
shlb
jp
lods
mov
ja
push
xchg
jae,pn
std
sbb
imul
or
add
cmp
xchg
les
cmp
ror
pop
das
mov
cmp
cmp
sti
push
clc
xchg
in
pop
fdivrs
adc
fmulp
pop
fs
push
lds
aad
pop
sbb
sub
jp
push
inc
jmp
pop
xchg
nop
jbe
mov
in
inc
mov
ror
js
jmp
test
int
loopne
mov
inc
push
fsub
fimuls
xchg
adc
jle
cmp
jg
fnstenv
xchg
bound
jg
mov
ss
movsb
jge
ljmp
fwait
xor
pushf
mov
leave
cmp
fistl
mov
movsb
push
adc
jns
lahf
lret
jmp
lods
std
mov
xor
int
inc
inc
mov
scas
repnz
das
jl
mov
jecxz
out
test
or
ret
arpl
je
mov
inc
xchg
mov
xor
mov
cmp
pop
stc
or
sbb
in
jge
push
ds
pop
xchg
mov
mov
dec
pop
popf
cmp
and
push
jbe
pop
or
pusha
mov
xchg
cltd
sbb
lds
pop
push
push
mov
icebp
cmp
imul
addb
mov
and
jle
fwait
pop
jbe
inc
ficomps
out
inc
stos
xchg
cmp
lcall
add
pop
push
dec
scas
ret
lcall
aad
scas
es
cmp
xchg
xlat
mov
outsl
jmp
sub
std
mov
xchg
insl
insb
aam
lods
push
repz
mov
mov
imul
push
pop
or
movsl
adc
sub
orl
jge
gs
or
shlb
inc
icebp
and
dec
mov
and
iret
push
shr
mov
dec
loope
jno
stos
out
jg
dec
mov
push
mov
adc
jp
jo
test
xor
sahf
xchg
aam
arpl
push
in
push
dec
pop
fcomps
gs
les
inc
push
mov
js
and
xlat
xor
ret
jns
aas
addb
nop
popa
loop
fwait
push
fdiv
in
inc
xor
mov
jecxz
fbstp
mov
or
cmpsl
push
ret
sti
mov
mov
push
and
jge
mov
adc
out
mov
jecxz
mov
icebp
cmp
sub
mov
sbb
mov
mov
jle
xchg
test
push
ljmp
sbb
shll
jne
jbe
sub
mov
and
pop
lcall
ja
pop
mov
jns
ret
push
dec
or
imul
or
hlt
cmovne
pushf
sub
inc
in
mov
mov
cmpsb
jge
jl
jae
icebp
sti
fisttps
mov
inc
pshufw
jg
test
sarl
cmpsb
sarb
pop
dec
sbb
or
repz
pop
mov
mulb
cmc
push
push
or
ffree
cmp
cmc
jnp
stos
inc
inc
in
jle
or
and
iret
jp
hlt
out
cli
cmp
push
sbb
test
cs
ja
fnstcw
daa
stc
ds
mov
aad
fidivs
in
cltd
add
aas
scas
inc
out
js
jmp
sar
mov
or
scas
int3
add
cmp
add
lahf
mov
sbb
mov
adc
repnz
jo
shlb
cmp
loopne
adc
loopne
rcrb
insl
sbb
cmpsl
jb
or
lahf
mov
insl
popf
in
push
jno
mov
xchg
or
rcr
insl
push
movl
jnp
int3
call
dec
test
adc
push
sub
pop
orl
int
loop
mov
xchg
xlat
sub
lock
leave
mov
rcl
out
jo
xor
xorb
adc
xchg
inc
sarb
mov
out
or
sbb
movsb
add
fsts
mov
mov
repnz
fcompl
pop
icebp
int3
inc
xchg
jb
mov
inc
sti
inc
js
insb
push
add
aam
xor
push
inc
fcmovbe
lock
inc
pushf
push
ficompl
mov
leave
rorl
adc
lret
clc
lods
sbb
cli
or
les
lret
sub
lock
push
jo
pushf
or
xor
pop
pushf
or
add
lret
lahf
inc
push
pop
iret
lods
and
or
and
xor
jl
inc
dec
sahf
int3
das
movsb
cmc
ja
inc
jne
push
jp
push
loope
sti
pop
push
and
pop
sti
push
cmp
in
pusha
outsb
xchg
sub
add
ficoml
jbe
pop
das
pusha
jne
push
jmp
cltd
lcall
ljmp
sbb
push
dec
pop
dec
adc
push
cld
jp
push
push
xchg
rol
lret
rcr
mov
in
std
cmp
std
add
lahf
pop
negb
rcrl
xor
mov
test
inc
xor
jnp
fistpll
pop
into
rorl
cld
jbe
loope
jne
nop
push
xlat
xor
dec
ja
test
arpl
mov
lods
inc
fsubl
push
leave
mul
stos
xchg
cmc
ficoms
int3
cmpsb
lods
nop
movsl
fnstcw
dec
fwait
gs
push
stc
sbb
sub
stc
ja
cli
adc
cmp
or
pushl
mov
scas
pop
or
cli
mov
sbb
push
inc
out
fwait
cltd
jne
inc
fcmovu
sub
daa
sub
mov
dec
push
les
lods
das
sti
repnz
jl
mov
cmpsl
dec
sub
fistpll
jnp
test
andb
lahf
sahf
xchg
push
loop
xor
mov
enter
inc
decl
leave
dec
cs
in
stos
cmp
cld
movsb
out
nop
aad
call
shrb
fisubrl
mov
loop
adc
jp
out
jecxz
lds
mov
sub
sub
xchg
test
ds
shll
ss
cmc
adc
in
aas
jg
xor
in
and
mov
outsl
mov
push
cli
pop
ja
dec
ss
leave
dec
pop
lock
std
pop
pop
shlb
testl
enter
cmp
xor
rcl
inc
outsl
test
bswap
add
pop
and
dec
syscall
xor
out
lods
fsubr
bound
out
cs
mov
or
sbb
inc
icebp
je
int3
in
inc
daa
ret
or
daa
pop
or
jae
dec
sbb
mov
pop
and
scas
enter
xor
ret
pop
int
mov
xchg
dec
sbb
mov
sbb
cmp
add
sbb
dec
mov
jbe
pop
add
inc
xor
inc
dec
fdivl
pop
pop
movsb
out
add
jo
pop
pop
sub
test
pop
xor
pop
iret
sub
in
and
sub
add
add
or
sbb
xchg
adcl
push
test
xchg
xor
negb
mov
rcrl
mov
mul
jbe
dec
xchg
mov
mov
push
pushf
call
adc
sti
mov
icebp
lods
int
mov
xor
and
dec
jle
dec
pusha
mov
or
jge
mov
xlat
loop
das
test
xorl
or
int3
inc
jne
addr16
xlat
cmp
cmp
loopne
inc
in
cltd
jle
cmp
pop
push
fiaddl
jecxz
adc
add
push
mov
je
movsb
loop
decb
nop
mov
sbb
and
cmpl
cmpl
je
and
stos
xor
mov
xchg
sub
jl
jne
add
rorl
push
xor
in
cwtl
mov
adc
sub
mov
pop
xchg
lcall
js
mov
sbb
cmp
insb
cmpsl
or
pusha
dec
das
add
out
inc
enter
jle
ljmp
addr16
clc
xchg
fmuls
jns
add
add
rclb
ror
popa
shl
pop
js
popa
xor
fcmovne
mov
dec
outsb
mov
movsl
and
pop
pushf
stos
psrad
xchg
jl
add
and
cwtl
hlt
and
mov
out
dec
xchg
dec
daa
add
xchg
sbb
and
and
aam
and
mov
rcrl
mov
or
inc
mov
cli
push
sub
pop
sub
dec
fchs
pop
stos
pop
inc
mov
js
xor
inc
test
pop
push
cmpsl
cltd
push
jmp
mov
rcll
push
mov
shll
sbb
idivl
inc
leave
inc
adc
and
out
fiaddl
lea
ss
jne
inc
lods
jnp
enter
shl
out
into
addb
pop
repnz
mov
lahf
dec
fstps
or
js
insb
int3
xor
imul
ret
dec
cmpsl
inc
movsl
mov
sbb
sbb
jp
mov
jne
push
rol
push
adc
arpl
fimuls
jl
mov
inc
arpl
mov
add
das
add
rcr
dec
or
sbb
adc
jnp
and
lret
sbb
in
addr16
jl
add
pushf
in
adc
icebp
jne
cli
int3
xor
push
mov
imul
sbb
mov
loopne
or
mov
andl
and
jp,pt
ljmp
std
xor
and
mov
jecxz
stc
xchg
sbb
call
aad
clc
xor
loopne
repnz
jmp
loope
jmp
add
adc
xchg
inc
insl
xchg
sbb
jecxz
jbe
jns
fildl
cli
repnz
xor
cld
addr16
mov
pop
cmc
or
push
mov
mov
mov
in
dec
mov
sub
jb
hlt
mov
add
fildll
sub
loopne
or
arpl
mov
iret
sub
outsb
out
iret
call
in
sbb
mov
call
jmp
stos
out
popa
jne
pop
xchg
invd
push
xchg
adc
into
inc
fistps
scas
outsl
jl
adc
inc
xchg
lods
shrb
bound
test
push
lock
test
inc
sarb
or
jo
xchg
and
mov
ret
daa
stc
jp
outsl
daa
repnz
in
pop
and
jae
cli
push
and
sti
shll
lds
cmpsl
repz
or
pop
adc
mov
repz
setae
fsubs
inc
repnz
fwait
inc
adc
jno
js
pop
mov
cs
movl
pop
fnstsw
sub
mov
jnp
lret
sti
xor
sub
test
lret
xor
pop
jo
mov
lret
adc
aad
mov
mov
xchg
push
push
mov
push
pop
jg
xchg
add
xor
jecxz
scas
subl
movsb
cmpsb
ret
mov
push
mov
mov
stos
mov
fdivrs
sub
cmpsb
imul
sbb
xchg
jge
add
cmp
ss
inc
cwtl
mov
dec
push
scas
mov
xchg
or
cmp
rorl
repz
mov
rcr
arpl
sub
xchg
in
lahf
jmp
outsl
pop
push
fimuls
dec
lahf
lds
pop
stc
xchg
add
jle
and
mov
cmp
pusha
pusha
dec
inc
push
adc
mov
stos
clc
push
adc
mov
push
ss
lcall
adc
ret
ljmp
inc
lret
std
cmp
cld
mov
ret
call
mov
cltd
inc
decl
andl
dec
ja
add
mov
sbb
mov
popa
and
pop
sub
nop
jo
pop
mov
fsubl
mov
push
loopne
sub
xchg
clc
mov
or
hlt
shll
js
inc
out
cwtl
mov
cmp
and
test
jb
idivb
orb
dec
add
cld
out
fnstenv
cmp
ss
aad
sub
rol
arpl
popa
mov
fcompl
scas
inc
jno
mov
pop
jge
stc
mov
jg
pop
inc
or
cmp
and
inc
aad
adc
lcall
in
das
stc
sti
sbb
sub
push
xor
mov
xor
sarb
mov
andl
ja
push
sub
add
cmpsl
dec
int
loopne
call
lret
or
rcrl
stos
fwait
mov
loopne
repnz
outsb
mov
aas
lcall
sbb
push
int3
rdtsc
pop
sub
cli
push
imulb
xchg
inc
push
xor
movsl
adc
push
lock
jmp
fdivs
in
xor
add
jne
mov
mov
test
fwait
mov
test
push
jbe
jb
jne
pop
loope
sbb
mov
icebp
jg
push
cmpl
xor
push
popf
aas
xor
mov
cld
loope
movsl
mov
clc
fwait
sbb
jo
cmpsb
xchg
mov
add
adc
mov
bound
cmpb
scas
into
mov
pop
lret
adcl
andb
das
aaa
sub
popf
mull
or
xlat
push
xchg
jb
adc
push
test
xlat
xchg
mov
fisttpll
xchg
cmp
in
add
adc
xchg
adc
cltd
mov
std
sti
ret
sbb
jno
sub
jne
mov
pop
pop
mov
mov
dec
sti
cmc
and
inc
stc
sub
jne
xchg
push
in
daa
cmpsl
in
pop
daa
jmp
shlb
pop
cmpsb
mov
mov
mov
lahf
push
sti
add
out
jecxz
and
fistps
push
mov
jp
mov
aas
rorl
lea
cmp
leave
xchg
outsl
call
lcall
mov
sub
mov
aad
xor
pop
pop
xchg
cmp
or
pop
mov
sbb
pushf
xor
pusha
clc
fstpl
and
dec
fdivrp
dec
enter
loope
lds
orl
lods
lahf
int3
lret
inc
pushf
and
adc
pop
icebp
ret
test
fldenv
jecxz
fucomp
clc
outsb
insl
sbb
cmp
lods
sahf
imul
loope
mov
rol
call
mov
call
sti
divb
sbb
or
cmpsb
sub
orl
scas
cmp
push
cltd
es
jo
mov
dec
jmp
repz
nop
out
sbb
std
ljmp
jle
pushf
mov
dec
push
call
idivb
mov
xchg
aad
sbb
std
das
jnp
pushf
loope
imul
push
test
outsb
js
jge
aaa
cli
sbb
fsubs
test
sti
dec
lods
lods
and
std
test
stos
pop
mov
lds
ja
aam
adc
jmp
andl
jg
push
mov
sub
aad
and
negl
cmovp
daa
aam
push
sar
and
pusha
ljmp
sub
imulb
mov
mov
cmp
and
mov
je
sub
xcrypt-ofb
cmpsl
push
outsl
mov
xchg
pop
inc
cmc
mov
push
dec
addb
pusha
in
cltd
clc
pop
pop
repnz
lret
rclb
jecxz
and
aaa
imull
adc
int3
dec
push
xor
mov
mov
sbb
sbb
sub
push
mov
aas
cld
and
push
pusha
insb
sub
aaa
rclb
lret
movsb
test
movsl
lret
xor
mov
dec
fldcw
xor
mov
sahf
sub
pop
xor
mov
cmpsb
jp
shrl
movsb
push
test
dec
push
sub
test
orb
add
ja
rolb
outsb
shlb
inc
shrb
jns
mov
fsubl
dec
rcll
mov
mov
test
adc
test
inc
mov
fidivrl
outsb
addb
cmpsb
aaa
rclb
or
enter
fsubrl
dec
aad
xor
mov
sbb
jge
adcb
sub
add
jno
into
inc
cwtl
iret
aas
je
cld
pop
add
ljmp
xor
lcall
sub
adc
inc
mov
mov
cmp
fidivl
pop
mov
aad
mov
adc
mov
inc
cmp
or
cld
mov
loopne
adc
mov
mov
out
push
aad
jno
add
cmp
jbe
movsb
cli
ss
icebp
pop
out
pop
sahf
cli
cli
sbb
dec
or
xor
cmp
mov
pop
pop
enter
out
cltd
roll
mov
aaa
cld
push
das
subl
outsl
mov
xchg
ret
and
cli
imul
mov
push
or
std
notb
add
repz
test
ds
xchg
jae
cmp
inc
arpl
imul
fiaddl
out
ljmp
mov
hlt
out
adc
mov
pop
dec
mov
and
inc
push
sysret
sbb
test
aaa
cmp
in
or
insb
enter
xchg
xor
out
or
jo
jge
or
adc
mov
notl
loop
cmp
pop
addr16
ss
push
sbb
icebp
jbe
roll
mov
psrld
dec
into
scas
pop
xor
push
imul
insb
mov
subb
sub
pop
ljmp
mov
cmpsb
xchg
shll
lods
add
fsubrl
xchg
mov
sub
cli
xchg
ror
notl
movsl
dec
sub
and
mov
inc
ds
imul
shlb
movsl
pop
mov
imul
xlat
jne
outsl
pop
inc
movsb
movsb
aaa
ds
lods
or
insb
fucomip
je
mov
add
xchg
inc
add
push
ss
dec
mov
shrl
lret
jnp
push
lds
push
fbstp
mov
mov
jns
xor
sub
inc
in
jb
fs
mov
mov
cmc
in
outsl
sbb
int
ret
pop
mov
aas
jbe
fwait
or
insb
cs
hlt
insl
adc
xor
or
sub
mov
cli
add
cmp
insb
rol
cmp
fdivl
or
out
insb
iret
mov
cmp
xchg
adc
cmpsl
jnp
pop
jbe
mov
push
inc
push
aad
cmpl
mov
arpl
and
add
test
pop
push
mov
inc
sub
or
cmpsl
pop
lret
push
inc
movsl
rorl
fcompl
addb
insl
or
lock
and
stos
cmp
push
ret
pop
mov
int3
push
call
xchg
repz
cli
lock
and
cmp
lret
jge
inc
jbe
pop
out
mov
xchg
adc
mov
mov
add
sub
insb
cmp
lret
daa
stos
mov
lods
push
les
lcall
mov
popf
data16
aam
das
lock
mov
ds
loope
nop
fs
in
xor
push
mov
lret
pop
jno
dec
int3
pop
lock
mov
out
add
lcall
lea
rol
lods
ljmp
mov
push
push
xor
push
push
push
pop
push
arpl
mov
inc
pusha
xchg
adc
addr16
sub
mov
inc
and
sti
iret
pop
cli
inc
outsb
and
and
movsb
jg
fnsave
xchg
jmp
out
popf
adc
pop
pop
jbe
fistl
mov
mov
inc
arpl
in
dec
xor
daa
inc
ss
int3
movsl
insl
sbb
mov
xor
jle
and
cmp
pop
shr
les
addr16
dec
stos
dec
sbb
test
cli
pusha
cmc
or
add
push
push
aam
mov
and
dec
and
xor
insl
pusha
mov
scas
jmp
jl
mull
jmp
jbe
mov
repz
jo
sbb
loopne
jne
fnstsw
inc
cmp
xor
pop
mov
lret
push
add
outsb
jge
push
xor
jle
sub
dec
push
jl
outsb
lret
sbb
lods
mulb
cmp
pop
call
and
jbe
ret
or
pcmpgtd
and
imul
arpl
pop
pshufw
insl
sbb
test
repnz
test
xor
push
shll
pop
push
dec
cmpb
pop
sahf
into
cmc
dec
lods
imul
sub
mov
roll
fnstsw
add
sbb
orb
cs
pop
ss
push
mulb
cmpsl
orb
push
xor
gs
mov
and
outsl
sub
push
pop
lret
xchg
inc
pop
inc
sbb
sub
xor
sar
sbb
fldcw
push
and
sub
je
and
jecxz
mov
ficoms
or
and
dec
mov
outsl
jmp
bound
stc
loope
arpl
sbbl
mov
je
lcall
jo
dec
pop
dec
movsl
cmp
mov
dec
adc
add
push
dec
cltd
mov
cmc
scas
mov
pop
mov
insl
pop
mov
jns
test
popl
and
fldt
repz
cmp
push
and
scas
fimuls
push
xchg
sbb
iret
or
adc
sbb
mov
addb
sub
xchg
fstps
pop
cmp
fs
out
ret
dec
mov
shlb
out
sbb
daa
lds
push
gs
and
push
add
mov
mov
loop
repz
xchg
pop
loope
mov
sbb
nop
imulb
jmp
clc
lock
jmp
enter
dec
jle
in
pop
mov
fidivl
cmp
mov
cs
js
out
faddl
nop
ljmp
insb
or
rcrl
sub
bound
and
iret
sahf
std
pop
aad
scas
ret
push
pop
dec
in
jbe
mov
aam
scas
dec
arpl
inc
ffreep
clc
imul
cli
or
inc
mov
test
jl
divl
dec
jo
and
inc
mov
and
cmp
jmp
or
lcall
divl
inc
in
adc
jae
das
mov
iret
xor
sub
bound
inc
icebp
and
lock
jge
push
lods
clc
loop
adc
in
in
jne
rcrl
shll
stos
cmpsb
cmp
adc
sbb
jnp
mov
cmp
cld
fs
je
std
mov
sub
movsl
push
mov
mov
and
leave
adc
ja
sbb
inc
push
push
pop
add
leave
daa
rclb
addr16
cmp
movsb
clc
cmpsl
and
or
xor
cmp
mov
clc
not
insl
and
sub
push
mov
stos
inc
fst
pop
jbe
xor
or
arpl
cmpl
push
jne
mov
add
mov
xor
dec
dec
pop
pop
inc
cli
rcrb
mov
call
aaa
pop
inc
ret
enter
pop
popa
dec
dec
das
sub
outsb
repnz
jecxz
mov
mov
movl
and
pop
push
xor
xchg
pushf
fbld
or
shl
dec
out
adc
les
jecxz
leave
mov
dec
scas
mov
mov
xor
adc
and
add
add
sarl
inc
pushl
mov
test
out
pushf
push
sub
mov
pop
cld
mov
aam
loop
push
lds
loop
repnz
stc
sar
mov
mov
xchg
arpl
push
xor
fldpi
xor
call
push
sbb
in
das
mov
xchg
push
fs
push
dec
mov
outsb
ja
xchg
lods
or
test
mov
mull
in
jmp
lods
pop
cld
sbb
arpl
aas
jmp
lds
xor
inc
cmp
add
push
test
cmp
les
cwtl
inc
xchg
push
pop
xchg
test
adc
je
sub
add
dec
cmp
lods
mov
and
dec
add
movsl
pop
popf
outsb
in
int
subb
insb
mov
pop
les
fs
sahf
or
imul
inc
aad
pop
inc
loop
ret
loop
mov
xchg
in
int
repz
les
nop
mov
adc
mov
popa
lcall
in
test
lods
mov
lret
addr16
lds
dec
pop
inc
cld
xchg
xor
xlat
mov
cmp
fcomps
sub
sarl
ss
sub
lcall
push
rcl
js
or
dec
sub
adc
hlt
psubusw
ret
mov
mov
xchg
repz
add
mov
pop
and
sbb
rclb
sub
jae
fnsave
movsl
adc
daa
xchg
stc
mov
negl
pop
pop
out
push
and
addr16
push
mov
in
out
in
lods
mov
push
jo
movsl
mov
std
scas
cmp
iret
or
lods
mov
aam
int
fildl
mov
mov
subb
out
ja
leave
scas
sub
cmc
scas
hlt
aam
jle
fildl
inc
out
fistl
out
aam
test
pop
movsb
gs
imul
jns
scas
jbe,pt
insl
shl
cmp
movsb
adc
lods
mov
dec
pop
and
and
push
into
popa
sub
fwait
add
rorb
nop
js
mov
mov
lret
cs
sub
push
into
dec
dec
imull
sbb
cwtl
pop
enter
inc
fsubrl
stos
movsb
jge
test
sub
xor
push
or
push
push
outsb
jne
mov
fistpl
aas
adc
sub
pushf
jle
xor
jnp
push
sub
sbb
fistl
mov
aam
pminub
mov
ret
and
call
push
lea
mov
jbe
insb
jecxz
repz
push
push
xlat
pop
or
ret
sbb
xchg
fcoml
repz
inc
mov
out
mov
movsl
dec
loope
and
lea
push
add
pop
mov
lea
sti
ja
cmp
rcll
dec
fwait
cmp
in
jp
cmc
pop
fdivrs
repz
cmp
mov
dec
popf
imul
inc
mov
stos
daa
push
add
jl
idivl
xchg
inc
cmc
xor
pop
ja
mov
sbb
sarb
push
jo
pushf
push
insl
notb
mov
push
adcl
stos
sub
das
sbb
jp
int3
cs
mov
mov
cltd
xchg
push
push
pop
xor
dec
jge
insl
xor
fisttpl
sub
push
pushf
pushl
cmp
jns
shl
push
out
call
scas
popf
sbb
shrl
jnp
repnz
fldl
inc
cmp
out
int
xor
gs
fsubs
xchg
in
inc
xchg
mov
mov
or
enter
gs
dec
mov
dec
shl
mov
sbb
mov
pop
insl
aas
call
jge
sub
add
int
pop
int
lret
hlt
and
jne
sbb
lret
lahf
cmp
push
cs
outsl
xchg
ret
mov
mov
js
and
mov
xor
lock
dec
xchg
jo
mov
in
test
mov
aas
fs
xchg
lds
imul
mov
fisttpll
loopne
cmpsb
fcmovnb
fdivrs
xchg
mov
inc
inc
adc
lret
int
bound
aas
sbb
sub
adc
ret
fimull
sbb
xor
and
push
push
in
add
push
add
and
and
sti
dec
fstpl
xchg
jo
sbb
push
xchg
add
or
stc
lret
inc
jae
cmc
push
sbb
insl
sub
aaa
lret
outsl
push
xlat
sub
dec
adc
pop
cmpsl
sbb
jmp
xor
and
pop
jl
lret
mov
mov
dec
mov
pop
push
or
fstpt
in
push
fwait
orb
sti
add
test
lahf
add
inc
mov
ror
scas
jg
pop
xchg
out
mov
imulb
mov
loopne
pop
adc
insl
scas
mov
std
add
pop
xor
mov
xor
inc
out
cmpsl
outsl
inc
jno
aas
sub
flds
fadds
dec
adc
test
imul
popa
insb
jecxz
mov
jns
in
out
adc
mov
push
push
jp
in
xor
scas
movsl
enter
cmc
xlat
add
cld
mov
xchg
data16
push
mov
or
inc
xor
dec
imul
mov
rorb
jnp
fiaddl
push
movsl
pop
jae
aas
mov
inc
pop
push
mov
adc
ret
out
in
test
fmul
fldenv
or
cmp
jo
push
ret
pop
fmuls
lds
push
cmp
out
push
lret
test
rcl
push
stos
lds
andl
xchg
jbe
jne
mov
gs
sub
mov
nop
iret
jne
mov
mov
faddp
sbb
inc
and
sub
push
adc
add
sbb
sbb
jno
sbb
movsl
push
inc
std
popa
mov
and
push
mull
xchg
scas
lds
sub
sub
push
ljmp
imul
or
inc
sub
cld
dec
addr16
adc
fsts
pop
xchg
sbb
or
cmp
push
sbb
popf
sbb
sub
popf
jb
inc
jo
adc
or
mov
daa
aas
xchg
bound
sbbb
and
mov
cmp
xchg
rolb
xlat
inc
ret
dec
mov
inc
out
sub
arpl
mov
jo
xor
adc
pop
imul
loopne
push
stos
xlat
xchg
lds
push
ret
dec
add
mov
adc
xor
rcll
mov
cmp
int3
cmp
xchg
xor
jg
adc
mov
lods
dec
movsl
push
inc
in
cmp
push
add
pop
mov
je
sahf
js
lea
xor
or
adc
aas
push
insl
mov
movsb
fnstcw
xor
dec
repnz
adc
push
repnz
dec
insb
enter
xor
ljmp
push
mov
add
fidivl
mov
insl
inc
xchg
insb
jg
inc
mov
mov
and
inc
cld
fildll
mulb
xor
mov
jb
jl
jge
mov
test
adc
cmc
scas
xchg
test
clc
cmp
je
or
adc
cmp
shrb
das
pushf
lahf
mov
inc
shll
lods
mov
in
pop
ljmp
out
or
push
fcomp
jl
repz
mov
fwait
mov
push
push
lcall
sub
inc
sub
mov
loope
adc
ljmp
fidivrl
xchg
stos
imul
mov
test
shld
push
inc
pop
adc
outsb
mov
cli
jp
cltd
popa
inc
aad
notb
and
jmp
pushf
mov
jecxz
pop
loope
mov
jmp
and
cmp
aas
lods
and
adc
sti
or
jb,pt
mov
cmp
sbb
sbb
ficompl
pop
std
and
jecxz
xchg
scas
inc
dec
dec
hlt
aas
lcall
fstpl
jbe
jl
repnz
mov
je
loop
daa
and
mov
add
cmc
sub
cmpsl
mov
jno
jp
mov
push
loopne
cli
mov
and
repz
pushf
imul
xchg
leave
adc
loopne
cmpsb
in
jns
push
pop
call
sbb
adc
scas
sbb
add
icebp
xorl
out
mov
movsl
outsl
orb
pushf
inc
stos
fwait
ds
out
nop
fcomps
lods
xor
aad
xchg
test
xchg
in
lds
mov
lret
pushf
mov
stc
xchg
or
sbb
ret
test
mov
push
pop
dec
push
xorl
fs
repz
fst
jns
jmp
dec
xchg
or
fwait
in
xor
outsl
aam
cmp
push
sub
pop
insb
ret
shlb
pop
mov
repnz
mov
fsubs
test
xor
push
sub
jns
jb
pushf
xchg
mov
push
push
mov
add
lods
fnstcw
std
jp
add
aam
xchg
sub
inc
dec
faddl
fcmove
mov
sub
sbb
adc
add
mov
or
dec
jns
lahf
addr16
sub
cmp
fdivrs
fidivl
int3
stos
push
insb
jnp
sub
lock
and
stos
and
out
sub
stos
xor
rcl
test
jp
in
jnp
adc
iret
std
add
mulb
sbb
dec
sbb
out
scas
and
sti
mov
push
clc
movb
jl
out
jl
fcmovu
pop
test
mov
rcrl
or
decl
sbb
bound
lahf
in
test
imul
and
jne
sbb
sbb
pop
loop
xorl
push
mov
scas
pop
test
clc
inc
push
pop
xlat
aam
adc
adc
inc
cs
sbb
mov
ds
mov
std
pop
inc
stc
scas
sub
jmp
daa
and
cmp
push
ljmp
sub
enter
and
dec
cmp
push
cmp
push
lock
jge
mov
lods
sub
leave
in
or
mov
scas
adc
jb
js
ret
jns
shll
lahf
xchg
cmp
jnp
je
xor
cmpsl
sub
mov
pushl
xchg
sub
nop
and
fldenv
mov
adc
in
xchg
daa
fiadds
xor
jbe
enter
imul
jno
xor
lret
scas
add
cmp
add
hlt
inc
les
cmpsl
insb
adc
fs
jmp
mov
insl
xlat
mov
sub
rorb
push
xchg
fbld
dec
or
mov
jl
cmc
sbb
inc
es
int3
mov
push
pop
ret
dec
push
out
stc
repz
pop
xchg
sbb
shlb
cmp
xorl
fldt
jl
xlat
and
dec
and
fmul
loop
mov
mov
xchg
inc
xchg
pop
pop
popf
add
outsb
dec
inc
lahf
icebp
fistpl
mov
pop
adc
lods
movsb
mov
and
and
pop
inc
cmp
mov
and
movsl
movl
lods
pop
xchg
cmpsb
orl
mov
xor
dec
js
pop
mov
ret
pop
pop
sbb
cmova
das
clc
xchg
dec
jl
into
enter
lahf
imul
in
sbb
test
mov
fs
jg
xchg
sbb
in
aas
cs
cmpsb
pslld
popa
add
sub
pop
sbb
inc
ret
ss
inc
inc
fstpt
inc
jg
int3
or
sbb
xchg
pushf
cmp
ret
outsl
jns
clc
lret
jmp
inc
mov
insb
sub
imul
es
dec
push
outsl
pop
int
sub
xor
sahf
and
lds
xchg
je
dec
ret
cmpb
and
das
pop
stc
lds
xchg
cmp
mov
div
ljmp
sub
jl
fists
aas
adc
pop
push
mov
int
loope
daa
imul
cmpsl
jae
cmpsl
fldcw
push
sub
cmpsl
inc
adc
add
dec
sbb
jmp
xchg
repnz
mov
pop
or
ja
pop
dec
cs
push
cmp
lock
mov
mov
inc
stos
leave
lret
sub
jns
dec
into
mov
ret
aas
jno
scas
test
cs
clc
lcall
push
xchg
insl
std
sub
adc
sbb
syscall
cmc
mov
shlb
push
push
xchg
out
jl
cmp
cld
add
mov
loop
push
jmp
push
int
popa
lret
sarb
inc
repnz
mov
movsl
loop
sub
lea
add
aam
test
push
mov
dec
arpl
mov
sub
loope
jnp
ret
sbb
scas
fsubr
sub
and
ret
nop
jae
test
cmc
mov
and
ss
cmpsl
sub
xor
inc
mov
jne
inc
jge
mov
dec
scas
lret
push
mov
inc
loop
sub
push
jbe
mov
popa
stos
xlat
loope
push
jp
int
scas
jae
fcmovnb
or
pushf
repnz
aam
in
imul
xchg
inc
lret
push
pop
js
inc
xlat
stc
cmp
jle
out
lock
dec
in
push
lods
fidivl
cwtl
divl
mov
mov
add
mov
pop
mov
notb
push
out
lcall
dec
adc
inc
test
push
mov
imul
sbb
loopne
xor
sub
gs
clc
cmp
add
mov
pop
comiss
jae
fistpl
sub
leave
sub
addr16
sbb
push
pop
inc
pop
jne
push
aam
sbb
addl
push
iret
mov
sbb
es
push
xor
pop
stos
fwait
mov
jns
enter
in
pop
jo
pop
ret
xchg
arpl
and
jl
mov
xchg
sub
xchg
dec
sbb
js
stos
adc
sahf
dec
jo
fisubs
sbb
inc
mov
inc
mov
mov
pop
idiv
add
fst
fcompl
xor
sbb
stos
jnp
insl
ret
movsb
pop
nop
sub
test
and
sbb
orl
jp
inc
cmp
popf
inc
jge
fnstcw
xchg
dec
loopne
jecxz
mov
or
mov
fdivr
stos
xor
dec
jg
outsb
xor
repnz
jno
test
mov
jo
adc
inc
cmp
pop
dec
sub
pop
xchg
sub
push
mov
cmp
sbb
aas
cli
fs
mov
into
mov
add
popa
loopne
fs
das
stc
push
adc
xor
inc
cmp
out
lock
mov
cmp
inc
test
in
rorl
idiv
dec
sti
lods
sub
fsubrl
mov
leave
jecxz
adc
xchg
xchg
cmp
out
negl
iret
call
es
insl
fldt
inc
es
jne
and
ss
movl
mov
in
test
pop
inc
shrl
fimuls
arpl
fldenv
jle
loopne
jmp
cld
es
cmp
int
out
into
in
lds
das
mov
scas
adc
adc
or
fldenv
ficoms
push
and
xchg
mov
mov
test
jnp
mov
push
sbb
dec
push
das
push
push
mov
aaa
iret
lods
xor
enter
jno
pusha
sub
push
xchg
mov
outsl
in
add
jno
gs
fildl
or
loopne
pusha
mov
push
push
or
pop
jmp
push
fldl
cmp
inc
jnp
pusha
lret
push
jmp
add
mov
in
lahf
int3
fldenv
sub
mov
fcompl
aad
shll
movsb
push
lret
out
lock
push
push
jg
cmp
push
setp
in
jl
mov
or
xchg
cmp
inc
xchg
in
clc
test
adc
sbb
dec
andnps
jno
cmp
inc
lcall
test
jge
mov
leave
xor
jge
lods
adc
stos
push
mov
lock
outsl
adc
addr16
pop
xor
and
fdivp
sbb
jmp
jge
mov
sbb
lock
jp
scas
push
rcrb
push
ss
icebp
xor
mov
dec
and
xchg
mov
and
jecxz
movsl
mov
sub
push
cmp
in
sub
mov
mov
xor
in
push
fs
mov
or
rorl
imul
jmp
call
pop
jl
mov
and
jl
push
mov
hlt
ss
pop
daa
and
ljmp
and
adc
push
in
pop
js
repz
add
jne
push
push
faddl
cmp
stc
lods
xchg
addr16
push
lret
cmpsb
lock
inc
loop
mov
mov
sbb
push
scas
imul
mov
insl
sub
xchg
mov
lods
mov
cmp
mov
xchg
outsl
mov
dec
shlb
and
in
mov
pop
cmp
pop
pushaw
aam
xchg
cmp
subl
push
push
add
cmpsl
cli
dec
xchg
push
mov
pop
lahf
loope
pusha
ret
aas
sbb
jnp
mov
or
mov
jg
les
es
xchg
sub
cmp
insl
push
jp
les
jbe
mov
cltd
mov
das
or
enter
sahf
push
jae
outsl
mov
pop
imul
aaa
sub
popa
mov
push
adc
int3
sub
movsl
mov
jmp
xchg
das
sub
dec
addl
mov
ds
lea
mov
outsb
sbb
mov
mov
push
icebp
push
scas
inc
mov
pop
push
dec
cmpb
jb
sub
enter
clc
aas
shrb
and
mov
xor
jno
sub
mov
loop
xor
sarb
hlt
mov
repnz
jnp
fs
adcb
mov
mov
ja
test
sub
cmpsl
std
out
aam
pop
jb
les
mov
mov
lea
cs
xchg
cwtl
adc
inc
add
xor
test
les
mov
lods
pop
es
sti
cmp
jg
push
inc
or
daa
cmp
in
leave
stos
mov
mov
inc
xor
jg
and
and
pop
rorl
cmp
sti
mov
inc
push
int3
mov
push
or
scas
mov
and
test
dec
dec
pop
nop
xor
lahf
adc
mov
icebp
dec
jl
aas
aam
xor
cmpb
and
dec
jb
inc
sub
hlt
fdecstp
stos
rorl
cltd
jle
imul
pop
or
sbbb
sub
pop
inc
sahf
out
xchg
push
pop
sbb
rcl
mov
lret
orb
and
loopne
inc
repnz
lds
jno
sahf
iret
pop
sbb
gs
outsl
jbe
push
xor
inc
dec
and
pop
and
push
or
and
sahf
and
jge
jmp
mov
stc
shlb
loop
adc
fiadds
clc
dec
test
cltd
pushf
gs
sub
cmp
or
roll
stos
cmpsb
adc
dec
shlb
xor
push
sahf
dec
stos
and
or
movsl
push
push
cwtl
ja
sub
mov
sbb
mov
inc
pop
mov
adc
push
jg
xor
out
mov
bound
mov
adc
or
repnz
cwtl
movsb
mov
fcomi
push
andb
vunpcklps
pop
mov
outsl
jno
movsb
xchg
push
mov
repz
sti
and
xor
xchg
pop
inc
adc
repz
int
insb
sbb
loope
or
test
imul
movsl
test
stos
sbb
mov
adc
add
adc
loop
cli
and
fsts
addr16
inc
ret
pop
cmp
stos
jb
add
lahf
cwtl
neg
jns
jl
mov
daa
sub
pop
aam
adc
sbb
mov
mov
mov
cli
nop
push
addr16
hlt
mov
call
cmp
movsl
js
jecxz
mov
test
cs
repz
push
popa
xchg
outsl
adc
daa
addl
daa
mov
inc
outsl
lods
push
popa
cmp
cmp
pushf
mov
lea
shrb
mov
pop
decl
adc
fldcw
enter
mov
loop
enter
popf
ja
dec
stos
stos
imul
xor
jns
shll
jbe
ret
xchg
clc
hlt
xor
adc
js
cmpsl
xorb
pusha
ficoml
pop
push
xor
push
push
int
jl
out
rorl
mov
jo
inc
ficoms
fwait
mov
loopne
cmpsl
add
stc
and
mov
push
sbb
pop
mov
orb
into
repnz
mov
pop
fmulp
pop
daa
mov
int3
xchg
iret
fs
jne
pop
sub
sub
pop
adc
mov
cld
loopne
sbb
cs
aam
lea
inc
fsubrs
scas
jo
dec
test
mov
cli
ror
aas
leave
sbb
inc
mov
sub
mov
mov
mov
fwait
mov
popf
int
cs
add
mov
dec
inc
push
movsb
mov
mov
push
loop
mov
shll
xchg
sub
jecxz
and
inc
insl
add
xchg
fidivrl
ds
das
insb
xor
jno
mov
dec
lock
mov
mov
ds
rclb
fisubs
insl
dec
in
pusha
inc
lret
test
shl
sub
and
sub
movl
xor
pop
aaa
push
shll
cmc
mov
out
loopne
fwait
cs
jne
mov
sub
mov
js
outsb
sub
arpl
in
inc
in
xor
lret
mov
cmpsb
mov
vmwrite
data16
andb
mov
les
and
stc
add
sub
int
sub
pop
pop
add
inc
or
test
jecxz
push
mov
mov
mov
fscale
dec
rorb
cmp
jle
subl
mov
in
imul
pusha
xlat
test
xor
out
icebp
inc
in
mov
or
jle
push
jge
jge
mov
sub
sub
cmp
ljmp
into
xchg
xchg
movsl
fwait
pusha
and
adc
mov
imul
int
lret
mov
imul
jbe
push
sub
or
inc
scas
add
adc
and
xchg
fldl
adc
jb
stos
in
push
into
out
lret
add
fcomi
mov
daa
xor
arpl
mov
or
and
xchg
adc
lods
xlat
daa
jl
mov
cli
push
jnp
loopne
outsl
dec
in
adc
sub
fidivs
push
mov
std
pop
sbb
pushf
mov
lock
out
bound
pop
xchg
das
push
push
lods
pop
inc
mov
and
lods
filds
sub
or
stc
or
cmp
xsavec
popf
out
and
icebp
fdivrl
jnp
daa
cwtl
cli
mov
pop
shlb
sub
add
push
or
rcr
mov
cmp
lahf
cmpsl
adc
enter
stc
add
test
addb
mov
add
jb
popf
push
cmpsl
push
fadds
sbb
sub
mov
xchg
jl
incb
xor
nop
pushf
in
aad
push
dec
mov
fwait
call
add
call
sti
xchg
dec
out
popf
das
arpl
or
push
dec
fcom
mov
aas
jmp
dec
jge
std
loopne
pop
mov
and
out
pcmpgtb
imul
stos
cmpsl
ss
stos
jecxz
cmp
adc
loop
mov
mov
pusha
imul
cmp
jnp
daa
fwait
out
push
jl
lahf
xchg
es
test
push
ja
add
mov
dec
sarb
repnz
dec
pop
xchg
outsl
in
adc
dec
pop
mov
pop
mov
rcrl
sbb
cmp
bound
lods
ds
push
seta
mov
mov
movsl
pop
icebp
xchg
rcrl
mov
sbb
lods
push
aas
mov
inc
sub
mov
ja
xor
test
or
and
dec
cltd
orl
sbb
mov
dec
icebp
mov
test
popf
cmp
mov
jae
ret
test
and
inc
icebp
and
and
mov
jmp
cmp
lret
pop
jg
xor
outsl
mov
in
inc
icebp
cmp
mov
jb
add
push
cmp
cmp
and
icebp
cltd
dec
imul
outsb
mov
mov
fcmovnbe
outsb
sbb
stc
fistl
ret
lret
xchg
rcll
pop
xchg
shlb
dec
cwtl
arpl
add
outsl
inc
lahf
ljmp
cs
gs
push
xchg
xchg
or
lret
lret
push
out
rcrb
test
jns
clc
fstpt
mov
aad
sub
push
add
imul
fadd
adc
dec
adc
pop
ds
and
push
jecxz
xchg
jp
sbb
push
add
push
outsb
stos
shrb
push
addl
das
movl
add
jne
nop
fildl
or
iret
pop
jo
xchg
jae
cmp
repnz
adcb
std
and
sti
jmp
cmp
mov
sbb
aad
jl
out
xor
fisubl
jne
lret
and
mov
sub
mov
mov
dec
push
mov
cltd
push
sti
repnz
ret
mov
push
movsl
xchg
xor
dec
add
insl
sti
shrl
cmpsb
dec
mov
or
ror
in
scas
xor
and
mov
sub
pop
mov
pop
int3
mov
pusha
and
lcall
int3
xchg
mov
xor
add
repnz
sub
xchg
loopnew
adc
jmp
push
sub
mov
scas
ss
js
inc
mov
jbe
jns
ja
cwtl
mov
adc
rorl
mov
mov
and
pop
dec
push
repnz
or
cltd
sub
leave
jmp
aaa
testb
dec
or
mov
or
inc
leave
dec
fisubrs
bound
cmp
rcll
addl
xchg
movsb
fwait
not
inc
mov
inc
mov
jo
inc
jl
sar
aad
pop
xor
roll
dec
std
out
fldt
ret
ret
dec
sub
fcomps
dec
out
or
mov
je
lods
rcll
lahf
pop
movsb
lods
mov
es
dec
outsb
cmp
les
dec
or
add
insb
pop
xlat
shlb
xchg
cltd
int
out
lea
push
dec
sahf
xchg
xchg
testl
pop
shrl
mov
xchg
cwtl
mov
inc
shrb
lds
push
or
shr
fs
mov
dec
fsubs
roll
daa
cmpsb
stos
leave
mov
mov
mov
or
shlb
lahf
sbb
mov
fsts
cmp
popf
xchg
or
jg
and
clc
mov
icebp
lods
xor
push
pop
insl
inc
or
mov
sub
jo
stc
cmpl
cmp
loope
test
rcll
inc
jl
pop
jae
aad
and
mov
movsb
jecxz
mov
adc
bound
mov
cld
add
lea
test
sbb
ret
jge
ret
call
repnz
inc
call
dec
sti
xor
and
inc
jle
in
xchg
les
dec
jo
xchg
and
leave
pop
cmp
lock
pop
inc
outsl
dec
cmpl
pop
jp
dec
sar
mov
xor
adc
mov
sbb
ljmp
mov
nop
add
fildl
push
pop
xor
jb
jg
push
xlat
jge
xlat
pop
inc
inc
rcrb
dec
fistpl
jns
sarl
ja
mov
fiaddl
dec
outsb
ffreep
xor
jb
xor
sbb
mov
cmp
mov
ret
mov
mov
mov
or
inc
rol
sub
inc
push
test
test
rorb
xor
lahf
rorb
add
xorl
xor
ja
aam
jno
ret
xchg
push
repz
int
add
and
inc
ret
sarb
jge
inc
hlt
loopne
fs
mov
inc
jp
clc
sbb
inc
stos
pop
loop
mov
or
mov
test
jmp
dec
int3
cmpsb
add
add
inc
add
sub
imul
push
sbb
addr16
aaa
xchg
mov
or
jnp
clc
sub
add
xchg
orb
pop
xchg
and
filds
push
and
jo
enter
jecxz
inc
std
inc
test
mov
lcall
mov
adc
sbb
push
sbb
adc
test
cmp
pushf
out
push
push
xlat
popa
and
mov
cmpsb
adc
mov
repz
repz
or
and
adc
sub
inc
movsl
leave
xchg
in
pusha
sarb
add
xor
adc
inc
int
mov
xchg
jmp
xchg
push
das
test
xchg
xchg
mov
mov
dec
pop
in
fmul
push
add
popf
addl
cltd
sub
add
add
aad
xor
mov
cmp
lcall
xchg
cmp
scas
pop
call
inc
in
xchg
mov
dec
xor
ss
idivb
rclb
fcoms
and
mov
in
jecxz
scas
imul
cltd
icebp
pop
ret
insl
mov
xchg
mov
mov
push
cmp
sub
push
lss
mov
lds
jp
jmp
xor
add
std
and
mov
pop
out
adc
push
xlat
jl
leave
xorb
push
mov
push
ss
pop
xlat
adc
fs
rcll
mov
fs
cld
push
aad
or
stos
lret
ss
cmp
mov
jbe
lcall
or
push
sbb
jp
and
inc
das
fldcw
loop
jecxz
js
pop
mov
pop
out
lock
lret
dec
xlat
in
mov
xchg
cmp
div
hlt
or
arpl
js
xchg
call
add
mov
mov
cld
lods
xchg
sarb
inc
lahf
js
mov
xchg
mov
hlt
push
dec
xor
xor
sub
cmp
ljmp
sbb
les
insl
scas
mov
sti
es
mov
jg
push
push
stos
mov
adc
dec
jb
mov
pop
scas
lds
adc
push
nop
std
andb
enter
iret
divb
or
add
es
cmp
mov
and
mov
sbb
inc
lahf
lods
xchg
aad
sub
and
movsb
add
xorl
inc
out
out
mov
outsb
clc
sbb
inc
push
mov
adc
or
out
adc
xchg
stc
sbb
xor
mov
inc
insb
xor
mov
pop
enter
mov
test
lds
mov
inc
adc
and
mov
mov
sbb
int3
xchg
test
mov
xchg
and
imul
outsb
addb
dec
stos
inc
divb
repnz
in
out
and
xor
pusha
pop
jg
jle
cwtl
aad
das
xor
jp
inc
sbb
push
pop
mov
pop
add
loopne
inc
add
mul
shlb
mov
scas
push
popf
xchg
mov
inc
cltd
pusha
insl
std
lock
adc
clc
mov
jge
ret
or
add
aam
xchg
pusha
mov
cmp
imul
sub
xor
lret
roll
in
sub
mov
push
mov
add
out
push
xchg
divl
fcmovnb
xchg
sbb
mov
mov
rcll
sti
les
mov
push
loopne
dec
movsb
adc
dec
mov
scas
mov
fstl
add
lods
push
dec
lods
sahf
stc
cmpsl
sbbl
mov
aas
imul
sub
inc
pushf
push
in
cli
inc
xchg
sbb
add
loop
xchg
pop
lahf
in
xchg
add
lds
ss
ljmp
std
push
adc
adc
and
fdivr
mov
daa
clc
jge
or
jle
push
les
xor
adc
fisttpll
xchg
outsb
jns
imul
push
adc
cmp
js
xchg
add
lock
fdivrs
mov
das
add
jnp
fs
mov
in
cmpsl
pusha
sub
pop
adc
push
shll
or
loope
stos
push
or
int
xchg
mov
icebp
mov
ficomps
cmc
jecxz
sbb
test
loop
in
sbb
jb
movsb
mov
jae
mov
je
jl
sub
subl
dec
mov
shrb
faddp
dec
inc
mov
sbb
and
outsl
mov
test
int
popf
bound
popf
push
test
in
jecxz
ss
imul
sbb
les
mov
out
xor
sti
inc
and
and
in
sbb
inc
shrb
cmp
and
xchg
aam
adc
xchg
jae
dec
adc
push
mov
out
add
sarl
mov
in
sarl
push
push
out
mov
cmp
inc
push
pop
cmp
addr16
cmp
pusha
ja
in
mov
test
pop
data16
jnp
inc
sahf
hlt
mov
push
scas
or
repz
pushf
sarl
pop
jmp
mov
aaa
insl
insb
sarl
cmp
sbb
push
sahf
dec
cmp
pusha
xchg
subl
insl
out
fisttps
fistps
fabs
jns
pop
jge
pop
jae
pop
dec
inc
es
outsl
push
dec
out
jnp
popf
pushf
cltd
insl
jp
jno
cmpsb
or
and
and
mov
push
jecxz
adc
mov
pop
cltd
es
jge
gs
push
xchg
js
sbb
insb
sub
cmp
cmp
leave
movsl
aas
nop
shlb
out
movsl
mov
fsubs
test
packsswb
sahf
insb
lcall
ja
mov
cmp
mov
inc
rorb
gs
jmp
push
jae
repz
xchg
cwtl
add
js
decl
mov
arpl
cmp
mov
mov
or
jp
bnd
in
push
jns
sbbb
fidivl
fmuls
sub
fldt
mov
xor
movsb
ljmp
test
popf
add
mov
mov
mov
lds
mov
in
and
push
lea
in
icebp
dec
jno
lock
push
xchg
fisttpl
dec
xchg
add
lcall
jle
jbe
pop
add
dec
ljmp
ret
or
pop
inc
stos
aas
adc
cmc
popa
addb
dec
mov
cmp
inc
mov
sub
ja
pop
ret
sbb
sub
in
daa
inc
stos
xchg
sub
xchg
nop
pop
movl
add
std
test
stos
in
cmpsl
cltd
pxor
test
mul
sar
mov
jo
ds
jl
xchg
jo
sub
mov
shlb
mov
push
ret
mov
movsl
dec
aas
addr16
in
cs
push
sbb
adc
call
xor
xchg
fsubl
icebp
pop
jnp
jp
js
hlt
insb
mov
aam
pop
xchg
divl
int
xor
decl
test
jg
icebp
inc
push
gs
lahf
mov
nop
sub
cld
inc
xchg
push
push
nop
mov
icebp
xchg
out
and
pop
push
repz
inc
lret
sbb
scas
out
pop
cmp
fidivs
outsb
es
repnz
lret
fcomps
jmp
and
addr16
cmp
stos
aas
jns
adc
sub
std
fcomi
mov
pop
mov
sub
or
mov
add
mov
jle
pop
scas
add
inc
repz
js
shlb
pop
popf
mov
andb
xchg
jmp
or
out
pop
movb
adc
clc
dec
cmpsl
sub
decb
jne
aas
and
sbb
cmc
xor
cmc
and
sbb
scas
jg
jno
push
lods
push
in
outsl
cmpsl
push
mov
dec
xlat
add
lahf
daa
sti
addr16
sub
sahf
jg
xchg
xor
cmp
lock
test
mov
cmp
mov
icebp
jmp
out
dec
mov
js
mov
test
aas
jp
mov
cmpsb
mov
daa
adc
sbb
subb
push
insl
pop
popf
mov
popf
xchg
inc
xor
fisttpll
push
in
add
jge
mov
inc
fsubrs
out
cltd
fnstenv
mov
xchg
push
sbb
sub
daa
cmp
sbb
or
loope
stos
popf
rorl
ret
aaa
sahf
pushf
std
mov
mov
xchg
inc
je
or
pushl
les
or
fdivp
sub
ffreep
mov
and
adc
fisttps
add
popa
test
add
lock
loop
pop
es
bnd
cwtl
daa
aas
bound
dec
or
xchg
das
std
xor
xor
mov
xchg
into
push
popl
shrb
dec
jecxz
mov
nop
movsb
cmc
outsl
mov
jb
pop
popa
fwait
nop
mov
imul
out
sub
add
incb
stos
xchg
jecxz
int3
fwait
add
cmp
movsl
aaa
or
test
mov
fwait
test
cmp
iret
movsl
loopne
cmpsl
jo
mov
sbb
mov
add
stos
add
xchg
fistpll
cmp
in
jmp
xor
mov
cmpb
js
push
mov
jns
push
xor
stos
scas
jae
leave
adc
pop
mov
int
rorb
adc
in
iret
xchg
inc
and
pushf
push
sub
inc
arpl
lret
aas
in
push
xor
xchg
or
icebp
mov
dec
outsl
pop
scas
and
ret
enter
inc
push
test
pop
inc
or
mov
push
call
out
xchg
push
sahf
push
dec
scas
lock
adc
sbb
sar
roll
scas
mov
cmpl
adc
push
mov
add
sbb
and
jl
cs
xchg
gs
sbb
sti
push
movsl
dec
sti
out
fstl
stos
mov
mov
lcall
pop
mov
ljmp
lret
cld
mov
aam
sub
test
int3
outsl
ret
xchg
popa
test
sub
xor
xchg
sub
pusha
and
add
lds
mov
rolb
mov
jl
jle
stos
cmpl
aas
adc
iret
int
or
fists
inc
fcompl
push
mov
adc
mov
lea
push
jnp
repz
out
inc
shrl
pop
enter
ficompl
aas
aas
xchg
cld
bound
cmpl
into
shlb
jns
jnp
stos
lds
imul
add
cs
pop
shr
push
inc
arpl
das
xor
jge
mov
popf
xchg
bound
pop
aam
lods
xchg
xor
mov
lret
sbb
inc
cs
insb
int
ret
iret
ljmp
push
mov
cld
or
les
or
enter
pop
fnstenv
sub
pop
popf
jnp
cmpsl
test
into
inc
xchg
ljmp
clc
dec
add
inc
pusha
mov
xchg
out
pop
jae
bound
and
ficompl
mov
mov
mov
or
inc
gs
dec
dec
insb
mov
pop
sbb
and
pop
push
out
inc
imul
jp
aaa
adc
andb
sub
cli
lahf
mov
outsl
inc
in
gs
xor
mov
outsb
mov
das
test
xchg
inc
ret
xchg
cmc
mov
pop
adc
dec
aam
jnp
mov
jbe
outsb
dec
or
test
jecxz
sbb
mov
sub
ljmp
jge
fimull
outsb
fimull
cli
inc
cltd
shll
pushf
das
push
jl
inc
mov
push
nop
je
add
dec
jno
add
xchg
gs
add
jmp
dec
pop
or
movsb
imul
xchg
fdivrs
mov
loope
mov
ret
mov
mov
jno
loopne
mov
pop
pop
xor
mov
aaa
cld
in
inc
or
faddl
in
mov
imul
jne
inc
cmp
cmp
sbb
pop
ss
push
lds
adc
lds
dec
sub
jae
ss
and
rcll
dec
fs
mov
add
sbb
std
xchg
fldt
push
mov
mov
push
call
mov
dec
cwtl
mov
rcrb
cmp
fsubrs
cld
inc
outsb
xchg
cli
sti
pop
mov
adc
fcoms
push
lcallw
in
lds
js
lret
or
mov
sbb
outsl
cmp
mov
add
mov
xchg
mov
sarl
mov
fldenv
push
and
pushf
cmp
cmp
mov
mov
inc
iret
mov
addr16
push
sbb
jecxz
xor
outsl
xchg
ljmp
mov
roll
adc
orb
or
jo
mov
cmp
enter
add
imul
movsl
adcl
pop
sub
insl
or
js
and
jp
fldcw
or
inc
fldt
adc
xchg
out
push
cmp
xchg
or
jo
pop
sub
xchg
and
out
cmpsb
sub
or
ljmpw
sub
std
mov
sahf
pop
mov
lret
xchg
cltd
fistps
pusha
je
cmp
icebp
adc
mov
pop
ret
popf
or
jp
popa
nop
movsb
lods
adc
xchg
mov
mov
cmp
repz
cmpsb
sahf
jge
or
add
mov
dec
negb
dec
sub
insb
mov
push
lret
dec
icebp
sub
push
xchg
stos
pusha
adc
sbb
and
pop
mov
lds
sub
push
aaa
stc
lret
jb
iret
sub
lods
addr16
incl
add
xchg
repz
xchg
adcl
das
repnz
ficompl
mov
xorl
inc
lds
adcl
mov
pop
inc
cmc
xlat
add
into
xor
add
aam
es
lock
mov
popf
mov
cltd
jnp
stos
sti
fcomp
and
cmc
sub
into
enter
add
mov
dec
cmp
sbb
mov
hlt
push
cs
hlt
adc
js
scas
adc
rol
loop
iret
mov
je
ja
in
ret
loope
loope
loope
xor
out
push
pop
pop
pop
add
sbb
and
cmp
nop
inc
mov
jnp
push
es
jns
mov
adc
aaa
mov
lret
cld
adc
stc
adc
sub
or
mov
adc
std
cmc
gs
adc
sub
xchg
ret
out
mov
dec
sbb
ret
sbb
xchg
mov
cmp
mov
rcrl
mov
das
ljmp
dec
add
push
cmc
out
jmp
jno
ss
mov
into
jno
lods
std
adc
pushf
mov
test
pop
fisubrl
xchg
pop
out
add
push
and
fwait
out
lods
push
addl
fcoml
and
and
aam
push
das
and
in
ror
dec
xorl
add
inc
hlt
jmp
sub
into
jae
xchg
scas
xchg
cmp
and
inc
and
jae
cmp
or
mov
pushf
sti
adc
xor
dec
sbb
iret
mov
pop
xlat
pop
movsb
mov
adc
data16
adc
sbb
lock
push
dec
loopne
iret
jle
cmp
test
aaa
arpl
mov
ss
pop
stos
sti
imul
inc
sub
fistps
dec
inc
mov
cmp
rclb
push
sub
and
push
cmp
ret
push
inc
iret
inc
dec
mov
dec
and
sbb
nop
lahf
pop
cmp
std
cmp
pushf
jns
sarb
xchg
cld
push
jne
mov
push
sarb
mov
cmovno
push
xor
hlt
fsubrs
sub
loope
lret
je
mov
inc
push
cmp
xchg
in
mov
es
push
stc
xchg
fimull
lahf
cli
aam
and
scas
xor
sub
rclb
ror
aam
fwait
js
mov
test
leave
enter
lock
or
lahf
inc
mov
scas
clc
mov
xchg
stc
inc
dec
xchg
sbb
sbb
or
sub
aad
jl
pop
sub
rorb
xor
or
stos
inc
sbb
add
sbb
ret
pop
adc
sub
stos
fadds
jno
movsl
daa
lds
sti
pushf
pop
mov
enter
adc
xchg
insl
jp
mov
pop
adc
add
movsl
cltd
pop
xchg
jns
outsb
std
lea
dec
pushf
mov
loop
mov
daa
pop
jns,pn
mov
insl
sarl
add
test
pop
cmp
push
jge
mov
inc
aas
inc
or
fbld
lcall
jle
push
mov
inc
lds
mov
jnp
je
cmc
and
loope
adc
xor
xlat
mov
scas
lods
mov
mov
xor
jnp
pop
mov
push
ss
xor
fstp
mov
mov
inc
stos
jmp
in
repz
jg
push
pop
sahf
movsb
loopne
adc
aas
lahf
sbb
addl
or
aam
jle
orl
jg
push
aam
jle
nop
aad
shrb
shl
push
popa
std
mov
stos
pusha
adc
movsl
mov
xor
lret
ror
sahf
std
xor
lahf
ss
into
mov
repz
aaa
aam
pusha
and
adc
int
push
dec
cli
stos
sbbl
loop
sub
cmp
cmp
add
ja
ljmp
mov
arpl
outsl
fwait
mov
es
lahf
int
pop
push
test
jg
lret
push
fldl
xchg
aam
insl
nop
test
push
stos
and
push
enter
out
xchg
ret
jbe
ja
mov
xchg
jp
pop
bound
ret
enter
cmp
jnp
dec
dec
sahf
fs
daa
dec
adc
ja
lock
je
mov
mov
push
std
jbe
push
pop
mov
adc
cmp
adc
test
or
imul
push
and
fcoms
jb
add
mov
or
jge
in
insb
outsl
bound
lret
int
pop
loope
out
sbb
stos
out
sub
mov
cmp
addl
xor
lds
push
sbb
clc
fbld
pop
test
sbb
into
flds
inc
int3
lods
cmpsl
insl
ljmp
push
sarb
adc
cmp
sub
sti
test
aaa
jns
sbb
and
stc
cltd
ret
xchg
pop
add
cmp
adc
pop
cld
mov
pop
push
gs
push
sbb
or
aam
dec
sarl
mov
cmpl
xlat
mov
incb
cmp
sbb
jns
in
xchg
jb
adc
mov
jmp
insb
test
lods
hlt
push
sarb
add
aam
and
daa
pop
jle
aaa
movsb
stos
fs
jp
xchg
repnz
xchg
mov
iret
inc
test
push
mov
xorb
pop
or
lds
mov
out
pusha
inc
xor
pop
mov
pop
sti
js
mov
stos
out
shlb
cld
lods
icebp
std
cltd
jecxz
ret
dec
std
mov
inc
mov
sub
sti
jge
ret
add
into
sbb
and
mov
cld
dec
cmp
cmpsl
outsl
mov
imul
mov
cmp
aaa
call
aam
repz
push
mov
decl
fs
jecxz
out
inc
xor
xlat
bound
dec
sbb
mov
in
xor
adc
jno
mov
stc
inc
loopne
add
or
ret
mov
sbb
mov
pop
jb
popf
adc
ret
call
cmc
sub
add
and
adc
sub
mov
mov
mul
xchg
nop
int3
push
ret
ds
jmp
push
insl
jae
int
test
int
sbb
sbb
movsb
sbb
jae
add
push
mov
add
je
cmp
or
jo
pop
sbb
cmp
hlt
jo
lods
or
imul
mov
leave
sub
jo
jge
inc
push
xchg
imul
imul
out
aaa
dec
insl
mov
and
pop
out
mov
das
push
add
repnz
mov
rclb
pusha
test
cli
push
mov
fcomi
cmpsl
mov
xchg
xchg
sarb
outsl
cmp
pop
mov
push
jecxz
jge
fwait
lahf
mov
inc
out
sahf
adc
mov
loopne
sub
mov
cltd
inc
sbb
cld
jecxz
fcmovu
repnz
ljmp
mov
jg
cmp
das
lret
fdivrl
jb
test
mov
frstor
sub
mov
xchg
movsl
test
xchg
lret
cmp
pop
sub
ja
inc
aaa
shl
dec
jp,pt
es
cmp
sbb
jno
jbe
stos
iret
ret
push
loopne
pop
jb
push
pop
mov
inc
mov
lods
xor
nop
lods
lea
rorb
inc
movsb
pop
adc
out
mov
mov
push
adc
fiadds
mov
mov
test
in
cmp
fsubs
mov
jae
adc
cmp
imul
inc
sti
xor
push
mov
jmp
clc
jp
fwait
scas
gs
sub
inc
cmp
sbbb
jl
xor
cmp
sbb
jae
cmp
mov
mov
notb
sub
sbb
xchg
int
adc
dec
push
or
sub
movq
add
std
mov
ljmp
jb
cmp
cmp
xor
mov
outsl
push
push
jecxz
jecxz
push
push
pusha
fcoms
scas
stos
sahf
push
and
sub
mov
fadds
outsl
push
jo
jg
jne
dec
push
outsl
fcompl
into
adc
mov
ret
xchg
push
in
add
call
mov
add
lret
cmpsl
push
std
mov
cwtl
inc
and
lods
xlat
iret
fdivrs
mov
xchg
jl
xchg
andl
sbb
ss
xchg
or
mov
push
scas
sub
call
fs
out
push
push
push
cmovle
jb
movl
xchg
cmp
sub
fdivrs
push
stos
shll
fwait
jg
cwtl
shrl
pushf
cmp
push
adc
jecxz
jecxz
mov
or
jmp
repnz
in
rolb
pop
jge
and
hlt
test
add
adc
mov
mov
xor
xor
loope
jae
or
out
pusha
pop
pop
mov
popa
dec
mov
clc
in
lret
in
cmc
std
jne
lret
jl
adc
popf
insl
lcall
mov
push
mov
sahf
add
pop
push
inc
inc
push
in
mov
cmp
mov
shrl
sbb
xor
xor
jp
mov
out
inc
and
shll
mov
and
fsubl
xor
pusha
dec
jb
dec
inc
lea
mov
bound
rcrl
loope
inc
dec
fmul
daa
rcr
jmp
push
dec
jnp
cmp
jnp
pop
sbb
cltd
lea
idivb
aaa
es
and
ja
adcl
dec
test
std
int3
sbb
mov
cwtl
pop
into
movsb
pop
sbb
sar
jae
shll
jle
or
popf
pop
and
popf
int3
lds
call
xchg
bt
addr16
std
xchg
pushf
testl
jbe
mov
daa
imul
cs
icebp
out
lods
jecxz
fsubrl
lret
jge
mov
add
mov
dec
sbb
xchg
pop
cwtl
mov
imul
push
xor
xchg
push
lahf
in
in
iret
scas
xorl
imulb
xor
add
xchg
dec
mov
inc
add
cs
fisubs
in
imul
ljmp
sbb
push
inc
add
test
shl
add
sbbl
or
dec
inc
clc
inc
or
sti
pop
jae
push
and
imul
incl
int
inc
fwait
nop
ret
stc
dec
fdivs
pusha
mov
fisubrs
and
add
test
arpl
add
jne
repz
femms
inc
mov
fdivr
mov
xchg
adc
andb
cmp
fildl
sbb
jb
pop
int
out
xchg
insb
ds
cmp
pop
data16
push
inc
mov
or
pusha
mov
mov
jb
ss
sub
and
std
cmp
pop
xorb
popf
inc
cmp
mov
cltd
dec
bound
roll
std
xchg
test
jns
mov
dec
mov
push
inc
out
fstpl
aaa
mov
sbb
xor
jmp
dec
sbb
std
mov
int3
push
loop
repnz
pop
or
xor
es
movsl
push
testl
dec
in
add
pop
fdivl
push
cmp
in
imul
incl
mov
jno
ficomps
add
rclb
mov
mov
or
cwtl
push
sbb
stos
dec
sbb
shrl
xlat
lcall
mov
mov
inc
cmp
out
loope
mov
cmpsb
and
sub
lahf
push
insb
mull
jmp
jp
mov
sub
into
mov
push
jge
aam
pop
inc
sub
cmp
jno
jge
pop
lea
int3
ret
inc
filds
pop
sarl
jae
clc
xchg
icebp
inc
jno
xchg
xchg
sbb
mov
push
ds
push
pop
cmpsl
icebp
ljmp
mov
lret
sub
mov
or
cs
sbb
inc
mov
shl
mov
jp
fsubrl
jae
data16
jg
xchg
jae
loope
push
imul
or
push
lahf
inc
in
into
jbe
outsb
jne
int
dec
fs
mov
mov
mov
adc
mov
jecxz
test
jo
push
out
mov
sarl
cli
inc
ds
jl
xchg
sub
push
shrl
xchg
and
or
cmpsb
jle
cmp
dec
cli
push
aam
sarl
mov
scas
push
fistl
das
xor
jg
or
cmpsb
insl
ss
sbb
pop
inc
sar
imul
push
mov
leave
adc
lods
sub
sbb
rdmsr
out
xchg
pop
leave
pusha
sarl
leave
adc
add
stos
push
mov
out
mov
dec
xor
mov
fwait
in
dec
cmpl
lcall
out
sub
cmp
add
xchg
iret
lods
fbstp
inc
pushf
push
or
sub
cmpsb
xchg
sbb
lock
cld
movsb
aaa
lahf
fidivs
adc
fisubrs
test
leave
dec
xlat
mov
or
jno
pop
ja
pop
inc
xchg
xchg
sub
rorb
and
loop
mov
cs
in
nop
dec
dec
push
sbb
push
push
pop
dec
xchg
xchg
jp
jg
lods
and
test
sbb
ja
popa
adc
cmp
pop
mov
jge
sbb
mov
aad
jmp
and
inc
or
in
aam
cmp
test
cmp
xchg
pop
leave
ret
or
dec
rcll
imul
cmc
pop
out
jecxz
test
xchg
arpl
aam
sub
or
mov
sbb
test
test
pop
mov
inc
sahf
ret
push
mov
dec
mov
push
push
and
sahf
ja
push
and
rorb
shrb
in
push
arpl
fistl
dec
sub
jmp
dec
aam
add
xadd
mov
mov
adc
pop
adc
xchg
inc
dec
jne
cli
dec
xor
bound
add
inc
fistpll
rorb
sub
fstps
jp
mov
notl
mov
push
sbbb
ret
mov
repz
xchg
les
sbb
data16
sbb
test
cmpsb
data16
or
push
mov
mov
fs
addb
imul
bound
cmp
push
out
jg
into
lds
sti
dec
out
popf
sbb
sahf
sti
andl
cmp
pop
jmp
ja
lds
xchg
xlat
dec
mov
xchg
fisubs
adc
inc
add
mov
lahf
jae
jbe
mov
push
jbe
dec
jbe
rcr
loop
or
jmp
mov
dec
or
or
cmpsb
idivb
sub
test
cmc
ss
jp
out
call
sbb
scas
cld
in
cmpsl
movsb
cli
icebp
inc
rorl
mov
psrlw
repz
mov
and
push
std
insl
arpl
ret
sbb
movsb
mov
mov
nop
les
push
mov
pop
sbb
jne
sub
fdivrs
in
mov
pusha
jae
nop
imul
cs
outsl
xlat
es
mov
mov
sbb
fmuls
xchg
or
cli
fcoml
iret
imul
mov
cmp
cltd
fnstenv
cmp
das
xlat
adc
sbb
jmp
pop
das
hlt
xchg
push
lods
fs
data16
mov
movsl
dec
ficoml
push
iret
add
adc
or
sbb
mov
xor
jae
mov
shl
aad
ret
sub
lds
jl
pop
loope
inc
fisttpl
lret
bound
fldl
ret
ja
addr16
imul
push
jb
jae
mov
aaa
adc
add
pop
es
pop
sbb
rcrb
jp
cmpsl
adc
mov
sbb
xor
lds
xchg
shrb
ds
cmp
icebp
jo
and
push
aad
je
popf
mov
dec
adc
cld
pop
fcomps
jno
call
scas
push
cmp
add
sti
xchg
int3
sbb
test
and
pusha
xchg
jmp
insl
addr16
sbb
ficomps
leave
int
loope
out
and
outsl
dec
dec
leave
cmp
mov
mov
ds
adc
mov
test
ds
xor
dec
jmp
lock
inc
dec
aas
mov
xlat
std
into
cmp
push
sbb
inc
dec
lock
sbb
dec
xor
push
lahf
daa
jp
add
imul
adc
stos
std
add
mov
cmpb
push
adc
push
lock
popa
stos
mov
scas
ret
aas
bound
and
inc
and
xor
outsb
bound
jle
mov
stc
ret
sub
xlat
mov
call
pop
iret
jl
dec
cmp
or
inc
inc
jo
mov
inc
adc
loopne
adc
sbb
jno
pusha
fisttps
push
ficompl
add
xorb
addr16
aas
lret
aad
call
dec
adc
fwait
insb
jns
bound
jo
testl
or
into
fidivrl
cld
outsb
xor
and
inc
xchg
dec
mov
pushf
bound
push
sbb
adc
mov
mov
sbb
add
faddp
fcoml
lahf
dec
inc
xor
icebp
pop
dec
xchg
aad
subb
test
pop
movsl
dec
outsl
dec
push
fisttps
call
movsl
sub
dec
jle
loope
scas
les
in
xorl
inc
push
inc
and
jg
xor
fsub
cmc
inc
lea
pusha
or
lret
repz
repnz
jle
mov
es
iret
mov
in
pop
icebp
shlb
sbb
jno
mov
repz
push
pop
iret
jl
in
in
mov
in
cmp
adc
sub
mov
mull
cmpsb
insl
jp
mov
mov
sub
lds
push
pushf
fwait
insl
das
sarb
and
fcomps
pop
sbb
inc
mov
jg
fmull
cmp
mov
mov
push
xchg
inc
aas
std
lahf
adc
pop
outsl
jg
les
mov
or
add
shlb
test
gs
ss
subl
lods
pop
and
push
sub
je,pt
rcr
and
insl
out
movntq
out
sti
scas
cmpsb
lods
and
xchg
or
fcompl
sub
xchg
insl
lods
stc
out
mov
mov
sti
movsb
pusha
push
sahf
out
clc
xchg
mov
xchg
fcompl
push
jp
addr16
inc
dec
mov
sahf
imul
stos
gs
leave
cmpsb
xchg
dec
cmp
mov
insl
aaa
jg
or
cs
adcl
call
fbld
cli
fimull
or
rcll
in
and
sbb
loopne
add
push
loope
jecxz
rorl
fdivl
cli
outsl
movsl
pop
daa
or
dec
outsl
sahf
xchg
and
pop
es
icebp
test
sub
pop
cltd
xchg
jecxz
pop
sahf
inc
push
xlat
inc
sti
cwtl
inc
pop
or
cmp
ja
xchg
mov
nop
cli
lcall
lock
lock
loope
sbb
decb
jmp
pop
push
mov
sbb
test
ret
rcrl
mov
cmp
cmpsl
and
push
pop
pop
fldt
push
lret
mov
popf
lahf
xor
jecxz
std
insb
shl
jb
adc
mov
movl
les
mov
loopne
adc
push
dec
loop
arpl
in
adc
and
test
push
arpl
pcmpgtb
repz
pop
lock
push
cmp
decb
cmpsb
shrl
dec
mov
jae
and
or
out
add
mov
sub
mov
adc
cld
sub
imul
ja
mov
call
inc
aam
and
hlt
pop
sahf
mov
add
icebp
mov
cmpsb
outsl
cmp
dec
insb
jle
dec
aam
fdivrp
cli
jle
jb
sbb
dec
ljmp
xor
lods
fisubs
mov
or
jae
mov
mov
jp
mov
cmp
scas
notl
test
push
xor
sub
sbb
cmpsl
push
sub
or
jns
daa
jg
call
inc
repnz
or
call
in
cmp
adc
hlt
shll
xchg
in
lds
jae
pusha
xor
adc
loop
lahf
pop
lahf
loop
or
or
xchg
and
call
jmp
xor
xorb
mov
jnp
dec
inc
sbb
mov
pusha
inc
in
or
nop
subb
sub
fadd
add
sub
cmp
jecxz
fwait
vmovhps
das
pop
pop
lahf
int
xchg
pop
icebp
dec
cmp
mov
and
cmpsl
fcompl
or
pop
out
add
lea
jne
mov
xor
js
andl
jnp
jbe
or
cli
cmp
sbb
add
fnstsw
adc
cmp
sub
and
inc
mov
or
out
push
jb
aaa
fs
orb
cmpb
fadds
mov
lret
sti
lock
into
cmp
add
mov
es
mov
mov
add
mov
cwtl
lods
dec
add
mov
adc
adcl
ffree
sahf
cmp
les
and
gs
cmp
mov
arpl
jnp
icebp
int3
ja
out
inc
push
xchg
add
imul
in
jae
lods
or
js
loopne
imul
sti
cmp
mov
bound
and
mov
xor
and
sbbb
or
xor
dec
loope
xchg
jecxz
in
pop
test
push
dec
cmp
in
jg
fldenv
dec
mov
mov
add
push
inc
mov
repz
repz
daa
cli
mov
pop
lods
fcoml
or
add
lahf
gs
leave
subb
daa
jo
pop
or
jb
imul
out
pop
sbb
int3
push
or
pusha
popa
xor
sbb
aas
mov
inc
cmp
shll
test
clc
inc
mov
sub
lds
lds
sub
into
mov
popf
push
mov
adc
fdivrp
pop
mov
lods
inc
cwtl
movb
sub
aad
mov
push
jnp
imul
mov
scas
push
jmp
add
orl
mov
sbb
or
add
dec
adc
mov
dec
hlt
mov
repnz
and
mov
inc
or
std
inc
sub
lcall
test
movsl
mov
loope
dec
inc
adc
sbb
or
ljmp
test
push
pop
stos
push
in
push
lock
sbb
aad
das
mov
xor
adc
iret
imul
rclb
xor
fisttps
in
cmp
pop
mov
cwtl
pop
test
mov
sub
jno
popf
or
int3
jl
mov
daa
sbb
dec
inc
jmp
test
pop
sti
pop
mov
arpl
arpl
cmpsb
adc
pushl
sbb
jnp
inc
hlt
mov
dec
js
jp
pop
xor
mov
or
andb
dec
icebp
and
hlt
add
aaa
jg
orb
push
rcl
jnp
mov
fstps
sub
inc
sti
sub
inc
movsb
or
out
or
mov
dec
pop
testb
in
or
inc
add
lea
push
aas
push
cmp
adc
cmpsb
jmp
orb
mov
insb
fwait
xchg
shlb
dec
ljmp
test
loopne
sahf
ja
insb
sbb
jp
popa
sbb
cmp
inc
dec
stc
insb
mov
sub
and
lods
push
sbb
mov
lcall
popl
stos
pusha
hlt
nop
cli
inc
sti
inc
dec
cmp
pop
mov
jbe
xchg
mov
fisttps
hlt
cmc
inc
inc
push
or
push
aad
ret
addb
mov
xor
aaa
add
pop
mov
sbb
jns
mov
ds
xchg
cmp
ss
ss
sub
imul
fimull
iret
sbb
cltd
aaa
pop
push
push
sbb
test
rcrl
sbb
mov
out
es
mov
ret
enter
and
insb
sahf
aam
sub
outsb
test
cld
out
push
xchg
mov
push
mov
cmp
lds
push
inc
and
in
mov
cmp
arpl
and
pop
bound
fldenv
cmpb
jns
push
sbb
sbb
movsl
pop
mov
jecxz
stos
fabs
in
les
fwait
sahf
stos
cmp
sarl
xchg
loop
lcall
enter
cmp
fucomip
mov
xchg
sbb
stc
rorb
or
xchg
loope
dec
cmp
notl
and
jno
lret
aaa
stos
sbb
or
inc
jns
iret
push
subl
cmpsl
inc
mov
sbb
imul
int3
sub
addps
push
insb
rcrl
or
xchg
sbb
pop
mov
popf
js
roll
fbld
mov
addr16
stos
xchg
cmp
push
cmp
scas
mov
jecxz
xor
es
pop
out
mov
or
jns
into
xchg
in
rcrl
in
mov
mov
cmp
in
sbb
and
pop
cmp
negb
mov
mov
call
jae
sub
cli
scas
pop
cmp
rcll
dec
in
data16
test
pop
pushf
hlt
push
out
pop
sbb
lods
mov
sub
sbb
cmp
fs
inc
xchg
jmp
pop
jecxz
aas
mov
mov
std
jnp
mov
push
dec
mov
jne
and
jge
mov
ss
adcl
cmp
leave
stc
es
dec
nopl
ja
sub
add
cmpsl
hlt
xor
mov
dec
adc
aam
popa
in
out
jmp
clc
jno
add
insl
push
jge
fdivl
pop
and
addb
or
xor
xchg
sub
jge
hlt
sbb
sbb
icebp
xchg
jbe
icebp
xchg
fmulp
shrb
and
mov
pop
or
lea
ret
sub
or
lahf
ret
enter
cli
cmp
add
xor
repz
sbb
push
js
mov
inc
clc
xor
movsl
int3
jbe
testb
mov
mov
mov
mov
mov
les
xchg
cmp
jnp
das
add
mov
cmp
ret
xchg
cmpsb
addr16
movsb
mov
push
movsb
int
nop
cmpsl
bound
mov
sbb
aas
xchg
jle
fldl
dec
outsl
nop
fadds
sbb
lea
or
jl
bound
cmp
das
pop
xor
pop
lahf
jb
jmp
xor
add
cmpsl
insl
ds
inc
sbb
cmp
aas
xchg
imul
mov
xor
out
shrb
test
and
inc
cli
jmp
jl
jl
jl
push
daa
sbb
iret
pop
pop
inc
xlat
popa
mov
sbb
outsb
aam
add
inc
sbb
cmpsb
adc
dec
push
aaa
cmp
js
popa
jg
nop
mov
ret
mov
xchg
inc
push
aas
daa
ficoml
aaa
jae
enter
fildl
repnz
and
es
je
mov
popa
mov
jns
or
adc
mov
xchg
jmp
mov
xor
cmpsb
sahf
sahf
mov
mov
and
sahf
xor
cwtl
mov
repnz
or
scas
imul
loopne
mov
mov
orl
daa
xchg
pop
xchg
xchg
jmp
add
push
push
ljmp
clc
aad
xor
mov
ljmp
push
xchg
pop
mov
dec
push
mov
adc
jne
sbb
flds
data16
nop
cmp
imul
and
dec
mov
testb
inc
xchg
jbe
sub
jecxz
xor
add
ljmp
and
lcall
mov
sub
inc
stos
inc
jns
jge
push
and
inc
ss
add
hlt
pop
cld
fsub
or
xor
inc
add
xor
scas
cmp
add
xchg
and
fstpt
push
out
loopne
jle
pop
sbb
call
lahf
lods
out
xchg
or
pop
int3
cmp
sbb
jo
and
in
jge
sub
adc
lods
outsb
in
jne
mov
inc
cmp
sarb
in
lds
xchg
loope
mov
icebp
cmpsb
hlt
push
push
insb
arpl
pop
pop
jb
pop
lea
push
call
cmp
mov
pushw
pop
ljmp
daa
mov
xchg
test
dec
pop
daa
inc
add
test
je
popa
out
mov
and
test
stos
jmp
jp
ror
hlt
test
mov
dec
scas
lods
outsb
and
mov
xchg
pop
daa
ljmp
pop
cmp
sbb
jecxz
aam
imul
lock
rcrb
sub
scas
jmp
ja
xchg
pop
mov
cmp
dec
dec
xor
outsb
aam
pop
mov
inc
fnstsw
mov
shrl
aaa
fisubs
adc
inc
sbb
mov
addr16
sub
cli
adc
sub
jnp
jbe
jp
xchg
xchg
outsb
and
in
xchg
sbbl
cmp
xor
xchg
xor
push
pop
push
cmp
imul
lds
cli
shr
shll
sti
fcomip
out
adc
pop
push
inc
cmp
fadds
outsl
lret
jge
sbb
scas
sub
js
insl
add
fadd
push
mov
or
or
mov
mov
add
fadd
insl
pop
mov
xchg
dec
sub
pop
in
cld
xchg
mov
push
add
push
hlt
insl
scas
out
inc
lds
jne
negl
cli
js
mov
cli
adc
jo
je
gs
dec
sahf
scas
dec
add
xchg
sahf
xchg
or
push
loopne
sbb
xchg
push
xchg
mov
dec
rcrl
xchg
iret
sub
or
insl
scas
pop
cltd
testl
rcrl
jbe
das
or
xchg
fsin
aas
lcall
aas
cs
stos
xor
or
mov
data16
jne
inc
sbb
pop
enter
aad
hlt
xchg
jmp
inc
out
sub
mov
movsl
lods
flds
cli
fwait
insb
fs
pushf
adc
int
lcall
xchg
je
nop
mov
lret
mov
sub
add
cmp
sub
push
std
repnz
mov
mov
gs
fisttps
sahf
imul
cld
push
mov
mov
dec
jmp
sti
dec
enter
mov
mov
mov
adc
in
imul
lock
pop
ss
and
std
aaa
xchg
sbb
xchg
sub
imul
popl
sbb
ja
test
lcall
jnp
adc
cld
mov
fldenv
frstor
fwait
and
enter
lock
subl
imul
insl
xchg
mov
and
or
push
scas
push
mov
in
lea
adc
movsb
mov
out
add
icebp
scas
jbe
and
insl
pop
in
mov
cmc
and
fstps
clc
dec
scas
jbe
mov
xor
mov
test
jmp
pushf
addl
mov
sub
xlat
cmp
filds
cwtl
xor
in
sub
or
jg
xor
cmpsb
mov
xlat
mov
repz
int3
mov
adc
mov
ds
or
jne
mov
popa
and
fs
arpl
add
sub
dec
inc
orb
std
mov
sub
out
push
mov
push
aaa
mov
adc
dec
adc
inc
xchg
loop
sub
sbb
lcall
mov
bound
push
out
sbb
push
lahf
mov
inc
sbb
aas
cmp
popaw
addr16
pop
pop
mov
movsl
sub
jns
jp
icebp
mov
push
pop
repz
out
sbb
sbb
call
xor
fcompl
sub
das
cmpsl
ds
add
pop
pop
into
bnd
movsb
dec
fmull
dec
subl
jno
mov
xchg
dec
or
pop
and
adc
push
in
cmp
xor
fcom
jo
jno
aad
std
cltd
das
adc
add
xor
xchg
push
les
outsl
sub
insb
fs
or
cmpsl
out
cmpl
daa
sbb
out
js
xor
ljmp
add
sub
cmp
imul
lock
pop
jmp
sbb
mov
ss
push
push
push
hlt
mov
loop
out
leave
cli
xchg
sbb
sbb
sti
pop
iret
mov
pop
je
pop
bnd
scas
pop
in
std
psllw
jle
inc
cmp
xor
pop
pop
cld
cmp
sub
inc
or
pusha
fsubrl
and
or
mov
xchg
xchg
xorb
mov
std
xchg
inc
jb
fdivs
js
cmp
cwtl
sub
outsb
cs
pushf
loopne
mov
or
pop
dec
scas
lods
jno
push
out
pusha
insb
pop
fs
cmpsb
mov
jb
pop
push
xor
or
jbe
in
xchg
adcl
test
adc
xlat
in
fs
mov
cmp
cmp
sti
or
nop
cs
aas
sbb
mov
cltd
dec
test
push
out
mov
mov
cmp
cmp
sahf
addr16
or
movsl
cwtl
pmaxsw
repz
dec
mov
push
or
jl
push
add
aaa
movsl
jmp
fisttps
push
jns
pop
out
btr
addb
testl
sub
sti
add
add
fcmovbe
cmp
ja
imul
popl
leave
cmp
mov
out
in
mov
lea
add
cmp
lea
add
test
test
add
sub
iret
addl
push
dec
cltd
fadds
js
arpl
pop
sar
lock
jge
ret
insb
jne
repz
and
lods
mov
push
xor
push
sub
and
fcmovb
or
mov
and
xor
inc
xchg
dec
out
cmpl
in
jb
add
lret
jp
pop
sahf
sti
das
dec
arpl
insb
xor
test
add
xchg
into
in
xchg
stos
cs
sbb
popa
fsubl
loopne
inc
adc
dec
js
xchg
sub
mov
stos
outsl
imul
adc
sub
out
loope
sub
mov
sub
adc
cvtps2pd
xchg
mov
xchg
sahf
push
clc
aas
jno
mov
data16
mov
inc
scas
out
mov
in
out
test
push
push
cmp
test
in
in
fs
add
adc
mov
int3
push
or
adc
addr16
xchg
bound
sahf
aas
enter
cwtl
loope
sbb
mov
adc
mov
aas
mov
pop
je
test
push
nop
roll
or
out
cmp
adc
lret
gs
mov
lcall
xchg
test
rcr
xor
mov
hlt
jmp
xchg
lahf
mov
std
lea
test
push
ror
ljmp
rcl
les
and
jecxz
jo
nop
jg
jge
xchg
pop
sti
arpl
mov
leave
mov
xchg
mov
jns
sub
lcall
rep
cmp
push
dec
aas
dec
sarb
mov
jae
sub
lds
popa
iret
insb
and
jo
ljmp
xchg
insl
loop
ja
xchg
daa
stos
jg
ja
dec
js
cmp
pop
jge
adc
stos
sbb
xor
stc
adc
nop
bound
jne
lcall
incb
lret
adcb
movsl
pusha
mov
and
popf
in
pop
jb
push
push
adc
std
daa
clc
mov
dec
les
inc
subl
mov
fildll
pusha
cwtl
and
fstps
push
pop
std
mov
cld
jp
push
jae
fidivl
addb
mov
lahf
push
or
sbb
pop
stc
out
or
sbb
add
sub
loop
sbb
jmp
push
loopne
das
fldz
xchg
pop
inc
sub
std
loop
in
pop
push
xchg
scas
sub
adc
fistpll
jp
cmc
add
lock
fnstsw
sub
pop
inc
idivb
iret
mov
popa
adc
and
jbe
mov
out
mov
int
jg
jp
adc
out
inc
xor
mov
stos
sbb
daa
mov
lods
ja
lods
movl
add
hlt
clc
mov
xchg
int3
xor
test
fwait
scas
dec
jmp
data16
xchg
inc
dec
dec
icebp
mov
fsubl
sub
lds
mov
jmp
mov
andl
scas
fs
hlt
jne
cmpsl
leave
mov
or
jl
dec
add
repz
repz
push
shlb
fimuls
les
mov
and
sub
shlb
outsb
push
xchg
jbe
fisttpl
mov
and
sti
cltd
or
adc
push
adc
cmc
call
pusha
loope
les
pop
psrlw
sar
mov
arpl
add
cld
push
dec
popa
js
stos
adc
jb
add
hlt
xchg
icebp
out
or
popf
out
mov
iret
jle
outsw
out
push
iret
ja
and
shld
jbe
jl
adc
jnp
ja
outsl
test
aas
orb
lock
or
int
fdivs
xor
insb
inc
shrl
mov
mov
xchg
insl
ja
sbb
push
jp
jae
imul
or
jns
pop
icebp
pop
jge
and
outsb
sahf
divb
ss
out
arpl
popa
jl
les
dec
daa
cli
repnz
mov
outsl
inc
lea
out
les
andl
lret
xchg
sbb
les
out
jb
jne
mov
loopne
mov
push
int3
adc
data16
pop
jb
adc
mov
push
cli
cmc
inc
test
mov
xchg
loopne
sbb
cltd
sub
pop
fstps
sbb
in
xchg
dec
jae
xchg
inc
aad
sbb
imull
sti
shufps
mov
fdiv
ret
and
js
adc
sub
push
ss
js
andb
xor
into
mov
sub
push
test
inc
loopne
sub
push
in
ret
movsb
sbb
cmp
xlat
xor
add
xor
sub
lods
cmp
sub
push
iret
js
out
inc
roll
aas
xchg
mov
lock
and
mov
enter
adc
nop
scas
imul
fldcw
mov
insb
xchg
lahf
push
push
mov
clc
fwait
lcall
adc
lahf
add
aaa
push
rorb
cwtl
xchg
xchg
lea
sarl
push
sub
xchg
add
shrl
jle
insb
and
cli
repz
push
icebp
xchg
mov
and
out
or
pop
mov
mov
loop
popf
pop
push
xor
cs
sbb
mov
pop
push
or
xor
or
gs
xchg
adc
and
pusha
adc
sbbl
bound
lds
jmp
fidivl
les
std
loop
lds
or
and
sbb
adc
jp
fadd
mov
inc
sub
cmpsl
xchg
fisubrs
fs
push
addr16
iret
jns
jmp
shlb
cmpsl
or
mov
test
xchg
ret
sub
sarl
out
in
mov
pop
mov
mov
adc
out
je
insb
xchg
test
pop
mov
push
sbb
xlat
xor
add
push
fiaddl
pop
ret
dec
or
out
mov
call
mov
int3
push
jb
test
cs
shr
and
imul
sub
xchg
jb
inc
mov
out
push
pop
in
sub
or
jmp
and
mov
repz
aaa
mov
dec
push
xor
stc
mov
jecxz
fwait
mov
jg
fdivrl
cltd
cwtl
popf
cmp
rolb
aas
mov
sarl
or
fwait
das
mov
or
shrl
jle
dec
insl
cmp
mov
sub
push
lret
stos
cmpb
jo
enter
movsb
ss
or
in
xor
cld
or
clc
sbb
aad
repz
sbbl
cmp
lret
ss
pop
inc
pop
aad
scas
icebp
jns
ret
loope
idivb
into
into
sub
fwait
leave
mov
mov
outsb
add
arpl
or
jae
sahf
jp
insb
test
mov
pop
lcall
jg
adc
xchg
cld
push
hlt
subw
sbb
lahf
lea
pcmpeqd
cltd
and
pop
out
addr16
sbb
mov
jne
inc
mov
pop
push
cltd
mov
push
or
movl
fists
cmp
sbb
dec
ret
dec
mov
push
outsl
addl
push
xor
dec
int
mov
ja
or
lret
pop
add
ljmp
imul
je
xchg
stos
mov
fistpll
movsl
in
lret
mov
xlat
flds
outsl
or
shll
pop
loope
out
orl
lcall
into
and
mov
pop
add
rol
ja
mov
scas
mov
sbb
sbb
mov
icebp
push
dec
imul
outsl
push
int3
adc
xchg
je
shl
lods
fisubl
ret
dec
pop
inc
outsl
cltd
cli
xchg
jno
imul
leave
add
mov
dec
ds
sub
aas
test
fildl
frstor
imul
cli
cmp
outsb
push
and
lods
push
out
mov
sarl
xlat
xlat
add
mov
fnstsw
sti
push
mov
or
pop
cld
adc
push
or
loopne
xchg
lret
xchg
mov
inc
add
bound
ss
inc
add
mov
repnz
adc
outsl
or
enter
pop
sahf
lock
and
or
dec
mov
ror
data16
cld
pop
arpl
push
ds
sti
popf
pop
xchg
loope
mov
scas
xchg
hlt
pop
shrl
fistps
push
adc
jmp
in
push
lret
cmp
stc
mov
jns
in
mov
jg
out
gs
dec
dec
dec
sbb
test
repz
rcrb
popa
neg
aam
and
xchg
inc
xor
and
xor
or
and
aam
iret
add
sub
mov
mov
xchg
daa
in
mov
je
sub
push
hlt
mov
push
dec
cmp
pop
sbb
jp
dec
adc
push
addr16
lret
into
add
and
cmp
xor
add
jb
bound
and
das
mov
in
mov
pop
test
add
jmp
out
or
pop
mov
cmp
test
pop
dec
or
jns
ror
shlb
insl
xor
mov
hlt
sbb
outsb
lea
dec
cmp
inc
ja
inc
test
adc
inc
je
dec
divb
sub
dec
addr16
sbb
addr16
aam
jl
arpl
adc
sti
xchg
testb
sti
cmp
mov
js
dec
jnp
mov
mov
loope
ret
icebp
dec
xchg
and
or
add
or
mov
adc
xor
jl
xchg
repz
add
outsl
jecxz
cmp
aaa
cs
and
hlt
scas
adc
inc
adc
and
shlb
cmp
out
aam
les
cmp
scas
stc
xchg
loope
xchg
testl
adc
adc
and
and
repnz
inc
cld
in
push
mov
cld
je
or
pushw
sbb
inc
movsl
adcb
add
daa
mov
mov
dec
les
ret
cmpsb
pop
fstl
inc
push
sub
xlat
cli
push
cmp
popf
pop
das
frstor
arpl
xchg
mov
loop
dec
xor
scas
pop
xorb
out
mov
aas
sbb
add
std
fisttpll
gs
sbb
imul
sub
jle
and
arpl
fstpl
and
aas
dec
jo
cmp
pusha
xchg
sub
add
push
inc
mov
cmc
pop
cli
data16
dec
cmp
js
jg
xchg
dec
not
add
loope
xchg
cmc
xor
inc
push
jl
scas
mov
lds
jl
adc
test
shlb
xchg
inc
sbbl
adc
or
pop
out
cmp
and
popf
jae
dec
sub
mov
inc
sbb
cmp
movsl
arpl
aad
sbbb
add
push
lret
pop
into
push
cmp
or
pop
sbb
ja
roll
std
adc
ror
cmpsb
in
adc
and
xchg
enter
outsl
leave
mov
mov
mov
dec
jle
lret
ret
jb
lock
jo
xlat
jno
mov
lock
cmp
je
call
lock
js
mov
nop
leave
outsb
xchg
int3
mov
add
lcall
cmp
shlb
out
adc
mov
fsubrp
mov
add
jns
ret
push
jecxz
cmp
gs
hlt
xchg
jne
mov
push
sbb
xchg
mov
andb
push
jbe
gs
in
aas
xchg
push
sub
push
enter
pop
mov
xacquire
fists
inc
pushf
jmp
loope
push
xor
push
fdivs
push
mov
xchg
sub
ficoml
sbb
pop
jnp
lret
ret
fwait
inc
cmp
mov
inc
inc
jae
dec
adc
xchg
rcrb
mov
xor
push
cltd
cld
xor
fidivl
xor
test
and
mov
in
mov
nop
xchg
mov
es
iret
aas
lea
insl
xchg
cld
or
jno
imull
and
lea
or
pop
mov
outsb
in
sbb
mov
xchg
cmp
cwtl
das
repz
sbb
scas
cmpsb
jmp
cmp
test
adc
adc
jno
out
hlt
movsl
mov
movsl
rcl
push
loope
iret
jno
fisubs
pop
insl
and
cmp
ja
movsl
jo
icebp
into
insl
cmpsb
jg
ret
out
rcr
incb
aas
setb
cvtpi2ps
pop
ror
or
aam
sti
xor
rcl
or
nop
xchg
loop
sbb
xchg
repnz
out
pop
pop
insl
call
loop
ja
xlat
jns
roll
and
cld
bound
mov
dec
jb
loop
or
jecxz
push
adc
arpl
icebp
sub
and
into
mov
inc
mov
sbb
pop
mov
xchg
stos
pop
std
fwait
adc
loop
xchg
and
cmp
mov
inc
aad
pop
xor
lods
sar
and
out
sub
fcoml
aam
icebp
and
repz
push
mov
jmp
enter
jnp
add
inc
dec
push
mov
lds
or
movsb
repnz
mov
sti
das
xchg
inc
sub
lret
fcmove
in
idiv
sub
psadbw
mov
adc
push
jnp
cmpl
jl
or
idivb
sbb
push
cmpsb
and
xor
sti
js
inc
mov
pop
mov
xor
inc
fwait
scas
lea
outsl
test
fsub
or
jbe
shlb
sarl
sub
iret
dec
mov
pop
fsubrl
add
mov
or
mov
loopne
jno
data16
pusha
call
mov
imull
shrl
adc
adc
or
in
cmp
fs
ds
mov
jecxz
lods
sbb
in
loope
insb
dec
xchg
pop
int
bound
xor
repnz
outsb
mov
push
bound
and
pop
jae
inc
js
je
daa
or
gs
out
mov
stos
jg
sbb
cmp
fcoms
xsaveopt
sub
and
pop
add
jge
cmp
push
repz
notb
pop
out
and
out
push
xor
jmp
jg
push
pop
cmp
data16
cmp
xchg
inc
bsr
and
call
pusha
and
and
subb
jmp
sbb
orl
ret
pop
pop
jne
scas
adc
mov
js
outsb
out
out
insl
mov
mov
mov
mov
pop
cmpsb
mov
repz
imul
shl
sbb
inc
cmp
pop
fs
inc
inc
dec
mov
andb
outsb
js
fbstp
scas
into
or
daa
sbbl
test
lret
sbb
repz
nop/reserved
mov
hlt
ret
and
add
es
xor
cmp
adc
or
cld
add
cld
in
aas
adc
stos
divl
stos
or
mov
fidivs
insb
in
iret
cmp
jnp
lock
sbb
push
xchg
lds
std
sbbl
push
sti
jmp
cmp
out
lock
lods
sub
idivb
incb
xchg
scas
imul
outsb
dec
jmp
jno
call
sub
sbbb
test
push
sbb
xchg
pop
aam
loopne
cmc
dec
push
sbb
or
incl
lahf
fldenv
xchg
aad
lret
mov
loopne
je
adc
adcl
add
cwtl
sub
cmp
mov
lcall
xorb
inc
loop
je
push
sti
jp
js
dec
lods
bound
mov
outsl
enter
inc
pusha
shl
fisttps
dec
cmp
push
and
or
jnp
mov
ret
data16
mov
insl
mov
je
add
sahf
cmp
sub
dec
outsb
mov
rcrl
loope
mov
pop
notl
out
iret
aad
pop
iret
fdivr
cwtl
add
andb
mov
inc
cmp
sbb
jne
into
out
loop
xlat
in
push
test
jnp
outsb
pop
mov
shr
mov
mov
pop
stos
test
mov
sahf
ds
pop
fnstcw
mov
lret
pop
add
sarl
pop
lahf
sub
push
out
sbb
add
sbb
mov
popf
movsl
xchg
push
lea
movb
mov
ss
imul
adc
fidivl
adc
iret
jl
sbb
imul
adc
add
test
adc
jns
nop
cmp
sar
into
pop
lds
add
sbb
inc
imul
or
inc
jo
sbb
sbb
das
mov
stc
mull
int
stc
mov
aad
fwait
dec
and
sahf
aas
adc
lods
subl
inc
je
cmpsl
push
jle
and
push
dec
mov
cld
incl
outsb
shrl
les
fsts
push
ja
aas
inc
push
iret
push
pop
stos
pop
sub
mov
xor
pop
cld
and
jecxz
test
fs
roll
sub
mov
xor
dec
mov
addb
adc
test
aas
dec
jbe
or
scas
int3
popf
pusha
add
push
fldcw
iret
dec
fidivl
pusha
mov
enter
fsubl
jo
addr16
negl
mov
sbb
pop
lea
icebp
xchg
cmp
or
fstl
inc
in
and
lock
pushf
ret
mov
adc
mov
pop
cmpsl
aas
cmp
pop
mov
mov
xor
sub
enter
push
mov
icebp
inc
pop
scas
sbb
push
dec
scas
xor
or
xor
fs
or
inc
or
and
outsb
dec
mov
dec
fmull
outsb
cmp
xchg
cld
jb
or
xchg
xor
enter
jp
cmp
pushf
xor
jne
sahf
sahf
sbb
ret
jne
add
add
inc
test
cwtl
cmc
jae
dec
in
push
or
cmovnp
mov
add
adc
inc
xor
cmp
adc
loopne
in
ret
ffreep
lods
mov
rorb
fistps
dec
out
add
in
loop
cmp
mov
int
sti
lahf
pusha
jecxz
mov
fildl
insl
jns
repz
inc
or
pop
ljmp
roll
call
popa
repnz
or
nop
lcall
jbe
push
fiaddl
xchg
dec
mov
lods
mov
push
pop
push
inc
imul
ss
xchg
in
das
addb
add
leave
inc
lret
scas
outsl
pop
outsb
mov
fsubs
push
sahf
push
imul
xchg
and
rcrb
repz
in
and
repz
out
and
jnp
xchg
add
xchg
dec
cmp
xchg
push
scas
adcl
mov
xchg
dec
lods
mov
xchg
scas
cmp
lret
push
rep
sbb
inc
and
out
test
inc
insb
lret
sti
incl
push
xor
leave
pop
pop
cmp
iret
xor
xlat
mov
ret
es
iret
or
mov
sahf
out
sbb
jp
pop
aaa
pushf
jl
rcrl
jmp
mov
sarb
test
dec
sub
mov
insl
dec
mov
adc
or
mov
movsb
lods
iret
ftst
lahf
ss
mov
cmpsb
aaa
shr
std
iret
xor
push
pushf
mov
arpl
insb
adc
jle
cmp
xlat
out
xchg
jbe
push
dec
test
jae
xchg
adc
add
sbb
xor
xor
jl
ret
push
hlt
inc
xor
inc
and
push
xor
stos
nop
cmc
jg
daa
loop
jne
xchg
std
imul
jmp
mov
sbb
mov
scas
ljmp
and
xchg
or
jns
add
xlat
push
jp
pop
mov
imul
les
adc
sbb
sbb
push
ja
lret
push
or
int
loop
xor
push
jnp
stos
out
std
fldcw
mov
nop
fldenv
mov
pop
push
push
push
mov
testl
popa
nop
and
cmpsb
test
scas
push
pushw
and
sbb
sbb
rcrb
icebp
add
xor
pop
inc
and
or
inc
push
aas
imul
dec
icebp
cli
das
mov
lret
rclb
inc
aad
add
xor
iret
mov
mov
in
push
sub
cmp
fists
imul
jge
xchg
xchg
xchg
lcall
mov
inc
cmp
or
fs
jg
push
addb
or
in
ds
xor
cmp
pop
out
clc
mov
fdivl
ljmp
inc
or
outsb
inc
test
add
ss
call
xlat
testl
std
adc
adc
jnp
enter
daa
das
ficomps
mov
add
lahf
lcall
cli
ljmp
cmc
sbb
pop
cltd
mov
mov
pop
fwait
xor
sbb
sub
shlb
mov
cmpl
ficoms
push
insl
jmp
test
out
push
pop
test
outsb
mov
les
repnz
test
sbb
inc
pop
fnstsw
xor
jge
subl
pop
push
stos
mov
into
out
mov
add
adc
mov
arpl
pop
sahf
out
mov
pop
shlb
ss
inc
lcall
push
jae
std
jae
mov
insb
sub
fs
mov
jo
jbe
inc
lret
popa
out
scas
inc
lret
mov
das
loope
xchg
stos
jae
xchg
popa
out
std
sti
jno
xchg
ror
out
addr16
pop
imul
mov
cmp
fldenv
mov
pop
adc
fiaddl
sbb
and
call
jb
xchg
adc
jle
sbb
popa
jge
pop
add
cli
orl
loope
or
fwait
shl
sub
adcb
mov
dec
or
push
sbb
into
fsubl
adc
and
rcr
mov
xlat
popa
mov
das
xchg
lea
pop
cmp
cwtl
in
mov
stos
ja
pop
push
add
call
jl
cmpsl
je
lock
repz
repnz
add
mov
and
pop
dec
shrb
lods
sub
dec
push
mov
push
push
xchg
lods
into
add
push
mov
xlat
ja
aad
hlt
std
repnz
inc
jp
push
cmp
jns
insl
pop
mov
scas
and
in
stos
or
shrl
xchg
inc
add
cmp
and
lds
xor
jno
rcll
je
inc
out
scas
pop
test
ljmp
imul
loopne
xor
cwtl
jb
stc
sub
icebp
out
in
dec
lcall
fistpll
mov
sub
mov
or
outsb
sub
jg
inc
lods
faddl
pushf
sub
mov
xchg
sahf
pop
bound
fimull
cltd
mov
cli
cmp
sbb
mov
lret
es
mov
sub
adc
xchg
in
mov
inc
pop
bound
out
cltd
push
shll
jecxz
test
jecxz
mov
cmp
nop
nop
mov
dec
cmp
sbb
fdivl
outsl
int
insl
mov
inc
or
xchg
in
mov
lock
sub
adc
scas
test
rcl
test
dec
leave
out
pop
inc
adcl
mov
inc
loope
sbb
icebp
or
mov
rorb
adc
push
cmp
out
push
mov
mov
jge
sbb
test
push
add
iret
cmp
test
scas
pop
xchg
jmp
out
xor
jb
sub
idiv
getsec
fnsave
data16
pop
stos
xorl
and
test
add
pop
mov
push
ja
jge
je
cmc
xchg
jp
jno
lea
shll
stos
xchg
mov
adc
hlt
loope
nop
mov
insb
in
pop
mov
sbb
mov
into
loop
test
xchg
sub
sti
xor
push
dec
sbb
jne
mov
mov
inc
cli
and
stc
jns
mov
js
or
decl
sahf
fistps
xor
std
hlt
push
sbb
inc
mov
lea
and
ss
repz
cmc
out
out
hlt
adc
lds
sbb
test
cs
movsl
loopne
insb
xchg
popa
std
lods
pop
test
adc
jno
lret
testl
stos
arpl
imul
pop
jo
in
xor
or
or
das
mov
ret
cmp
jb
in
xor
int3
sub
insb
aaa
jne
cmpb
inc
pop
cmp
imul
mov
popa
sbb
jecxz
dec
mov
pop
adc
inc
push
scas
shlb
xchg
mov
fistpll
mov
jle
push
into
int
das
dec
push
loopne
mov
jb
lcall
inc
mov
sahf
sbb
or
pushf
xor
jle
sub
pop
pop
loop
jbe
lods
jno
push
divl
dec
imul
push
push
pop
pop
test
sbb
pop
push
es
bound
leave
jmp
lods
fldcw
outsb
or
mov
cmp
pop
cmp
pop
mov
int
cmp
dec
adc
insb
pop
mov
sub
cmp
fcoml
lds
push
mov
xchg
subl
dec
sti
xchg
cmc
jns
cmp
jg
repz
bound
sbb
mov
sbb
and
int
or
mov
call
and
and
sbb
xchg
aaa
xchg
lods
cmp
lea
ret
or
into
push
in
dec
idivb
ret
sub
push
std
cmpl
fldenv
je
test
test
dec
jae
mov
fwait
lock
mov
pop
push
sbb
push
cmp
les
test
loope
jbe
xchg
adc
cld
ds
test
xor
sbb
aam
movsb
cld
into
mov
cmpsb
in
jmp
xchg
and
pop
cmp
push
mov
xchg
xchg
out
cmp
ja
aam
les
pop
mov
add
daa
iret
pop
dec
add
adcb
mov
lods
and
iret
push
inc
jl
faddl
sbbb
jns
xorb
pop
pop
fs
pop
jae
push
push
sub
jle
stc
loopne
pushf
xchg
mov
repnz
xchg
nop
sbb
jnp
push
cld
ja
push
int3
cmp
pop
popf
iret
xchg
inc
jbe
or
lods
fwait
push
leave
sub
and
cwtl
sub
pop
mov
mov
test
rol
rclb
jl
mov
cmp
imul
sbb
fsubrs
or
jl
sbb
hlt
out
cmp
xor
test
es
lods
mov
adc
test
movl
add
movsb
xchg
jge
pop
and
cltd
mov
cmp
jae
xchg
insb
jmp
inc
imul
pop
sub
nop
dec
loopne
movsl
adc
push
inc
fcomp
xlat
xor
cs
xchg
inc
sbb
mov
cltd
mov
push
mov
repnz
subb
out
fisubrs
inc
punpckhwd
fbld
jae
ljmp
mov
xchg
and
das
mov
aas
xchg
fcoms
imul
test
pop
into
add
inc
ja
dec
daa
adc
and
or
xchg
mov
or
sub
xchg
mov
or
mov
mov
pop
pop
rcr
jbe
addr16
add
scas
cs
cmp
pop
jo
dec
push
je
mov
js
loop
xchg
insb
aad
xor
jle
inc
cmp
inc
jge
add
pop
cmp
aad
dec
js
mov
pop
shld
ss
test
loopne
mov
out
cvtps2pi
sbbl
les
pop
xchg
xor
xor
push
mov
adc
or
dec
lock
mov
cmp
movsl
inc
aad
aas
clc
movsb
lock
stc
insl
fadds
mov
jno
sub
icebp
lds
mov
dec
mov
leave
into
sub
push
loopne
sub
imul
xor
das
xor
int3
jecxz
mov
cmp
mov
js
das
xchg
sarb
stos
xor
push
or
in
in
jp
cmpsb
add
xchg
mov
ffree
in
out
leave
lret
negl
std
repnz
es
xchg
sub
jle
xor
or
roll
dec
xchg
mov
popf
rorl
rcll
xchg
mov
stos
mov
xchg
in
push
sub
jno
daa
jb
loopne
push
inc
jae
sti
and
shrl
and
push
sti
lods
aam
filds
sub
xchg
pop
mov
jle
mov
in
mov
xchg
gs
push
push
lret
cmpsb
and
mov
xchg
xor
in
pop
add
mov
aas
int3
orb
in
jmp
or
bound
clc
dec
ss
ret
adc
call
add
icebp
xchg
mov
test
lods
icebp
js
movsb
scas
xor
popf
test
sahf
dec
adc
mov
je
in
shll
clc
pusha
dec
dec
jno
mov
sub
mov
setp
testl
pushf
lock
jle
push
stos
ret
mov
add
cmp
push
cmpsl
jo
mov
push
fcmove
fmuls
lahf
popf
rcr
push
jge
loopne
jecxz
sub
adc
test
mov
aaa
mov
addr16
insb
add
arpl
and
adc
mov
sub
xlat
push
sbb
negb
stos
add
mov
rcrl
sub
add
mov
mov
jmp
cmpsb
stc
iret
mov
mov
inc
sbbb
mov
mov
jnp
add
mov
or
push
testb
ret
pop
ss
add
jmp
and
xchg
shll
stos
inc
loopne
xlat
jbe
arpl
out
stos
mov
sub
mov
stc
aaa
push
adc
adc
in
pop
jl
stc
xor
xor
or
jbe
loope
test
fiaddl
and
add
inc
lcall
scas
push
lock
pop
scas
sbb
ja
into
sbb
xor
cmp
xor
adc
jmp
xor
ffreep
adcl
iret
push
jnp
rolb
sub
movsl
adc
sub
mov
mov
rclb
jnp
push
add
insb
clc
ror
test
inc
inc
adc
jnp
jmp
mov
mov
iret
or
scas
scas
add
jp
and
or
clc
sub
xor
or
les
loop
nop
cltd
and
lods
add
sbb
fwait
cmp
mov
sub
ficoml
pop
pusha
cli
jno
add
jae
fsubl
int
lods
mov
repnz
incb
xchg
jg
pop
mov
and
or
mov
add
mov
push
scas
imull
scas
dec
dec
fnstcw
outsb
xchg
cmp
repnz
insl
out
xchg
pop
xor
addr16
jle
mov
jp
mov
jecxz
cmp
dec
mov
or
and
test
imulb
xchg
rorb
dec
das
xchg
out
test
adc
pop
inc
cmp
pop
lds
lret
sub
test
lds
jp
xor
and
int
pop
add
fisubs
call
mov
jmp
push
test
flds
lock
ds
sahf
sbb
jecxz
aas
mov
push
mov
popf
and
pop
mov
or
mov
adc
push
scas
sub
fucomp
movsl
sbb
cmp
push
popa
dec
mov
adcb
mov
mov
and
jbe
push
sbb
inc
imul
test
cld
xor
mov
mov
insb
test
scas
mov
add
out
pop
int
mov
push
pop
xchg
cmp
and
or
je
push
mov
popa
bound
add
out
mov
daa
pop
xchg
xchg
mov
inc
jecxz
outsl
cmp
aad
and
int3
mov
scas
xchg
lcall
xchg
imul
mov
xor
jl
adc
sub
mov
inc
fiaddl
inc
xchg
icebp
repnz
data16
ljmp
mov
or
and
daa
sbb
mov
jne
jo
gs
rorb
fcoml
mov
fldcw
test
fwait
xor
jbe
mov
add
inc
inc
ljmp
mov
cmp
div
inc
mov
lods
sub
lock
sti
fistpll
scas
movsl
cmp
pop
sbb
inc
mov
aas
rorl
push
int
pop
cmc
jecxz
mov
jle
pusha
xchg
ret
push
js
or
push
sub
xchg
inc
xchg
xchg
mov
repz
iret
xchg
cmp
inc
sbb
insb
or
pop
mov
ds
int
mov
adc
mov
xlat
in
push
mov
sbb
xor
or
jb
jp
dec
sub
sbb
adc
repz
adc
out
xchg
cmp
push
orl
mov
test
xlat
mov
lock
sub
mov
jl
out
iret
xlat
stc
inc
adc
lret
cwtl
jmp
aad
repz
lock
mov
dec
mov
fists
mov
pop
pop
js
loopne
jae
fwait
out
mulb
cmp
xchg
lods
arpl
jecxz
gs
pop
push
jle
pop
mov
xchg
push
adc
andb
repnz
mov
push
xor
test
jle
add
js
fistpl
cld
sub
dec
inc
js
inc
mov
insb
out
mov
cld
hlt
subl
push
add
out
lock
mov
mov
aaa
icebp
xorb
cwtl
inc
and
cmpb
adc
mov
or
xchg
shll
fdivs
adc
sub
pop
in
int3
testl
xor
arpl
std
outsl
inc
inc
pop
sbb
and
fstp
or
lods
dec
jb
push
insb
mov
adc
arpl
scas
xchg
add
inc
outsb
dec
dec
ds
negb
fisubs
repnz
out
scas
les
push
jne
sub
xchg
jle
inc
jmp
push
outsl
pop
insl
and
pop
pop
and
lret
bound
dec
out
shl
mov
xchg
adc
fwait
cmpsl
adc
sub
cmp
pusha
pop
outsl
cmc
in
cmp
repz
xor
rorl
pop
add
rsqrtps
in
cli
enter
ds
mov
add
xor
je
mov
add
jo
or
arpl
fs
rolb
cmp
movsl
test
add
sub
inc
xor
popf
xchg
dec
jp
and
adc
mov
fnstcw
mov
xorb
mov
std
fisttpll
int
loop
adc
and
xor
mov
dec
adc
jnp
jb
test
leave
and
jno
fildll
outsb
push
mov
inc
mov
test
xchg
mov
cmc
movsl
inc
popa
cmp
stc
and
jae
aas
shlb
es
popa
aas
inc
and
iret
es
xchg
shll
out
push
mov
divl
out
decl
cmc
add
xor
rorb
jns
stos
mov
sahf
push
add
cmp
js
pop
fwait
xor
cltd
sub
adc
repz
pop
dec
and
jne
xor
sbb
in
out
xchg
call
sbb
mov
add
pop
pop
jmp
xchg
jb
test
in
cmpsb
adc
into
mov
sub
lods
dec
lahf
xchg
into
cmpsb
mov
imul
popa
xor
loop
inc
push
out
xchg
pop
aas
jns
inc
imul
aas
cs
xchg
out
sub
fisubrs
cmp
sahf
sub
cmc
aaa
std
mov
loop
clc
shlb
mov
insb
cmp
std
repnz
sub
aaa
push
mov
xchg
fsubrs
xor
or
outsl
outsl
xchg
int3
mov
cmp
push
and
mov
inc
mov
add
push
xchg
rcll
xchg
in
scas
xchg
jns
inc
into
add
sub
sub
std
sub
adc
mov
fwait
imul
add
mov
mov
loope
dec
call
in
shl
sbb
sub
inc
or
push
mov
popf
or
add
pop
dec
in
sub
out
sahf
ret
adc
mov
gs
jno
pop
fs
mov
fiadds
ffree
arpl
jecxz
sub
ror
shlb
aas
insl
jb
pop
lock
sbb
cmpsb
mov
ss
data16
fsubrl
xchg
pop
xor
push
add
test
in
in
inc
pop
xchg
data16
test
lods
fbld
xor
jp
popa
fs
iret
loop
stos
mov
mov
inc
js
push
xchg
pop
enter
roll
xchg
cmp
out
dec
jmp
sub
fistps
bound
mov
jmp
jg
stos
pop
and
subb
outsb
cli
jmp
pop
leave
xor
addr16
push
je
xor
sbb
inc
or
stos
imul
in
push
test
push
repz
hlt
dec
mov
shlb
xor
rcr
lret
push
stos
mov
pop
cmpsl
adcl
call
cwtl
mov
and
cmpsl
stc
mov
mov
enter
imul
xchg
cmp
lret
lods
mov
test
imul
icebp
dec
push
out
sbb
push
xor
scas
scas
sbb
arpl
adc
popa
insb
xor
push
xchg
lock
lock
test
or
aaa
jg
sbb
and
subb
push
push
cmp
cmp
int3
or
xor
out
pop
sti
sbb
xchg
int
dec
xlat
insb
mov
mov
mov
cltd
nop
jno
add
jne
jns
subb
dec
movsb
hlt
and
and
and
test
push
loopne
inc
cld
jecxz
xor
jbe
lahf
mov
mov
push
push
jg
mov
jo
push
jbe
mov
jecxz
loop
mov
pop
imulb
icebp
iret
fs
call
pop
mov
mov
cmp
movsl
adc
loop
push
sbb
data16
out
and
sbb
mov
subl
and
jne
jbe
lret
dec
and
add
xchg
xor
aas
pop
inc
cli
stos
in
sub
or
pop
bound
dec
push
sbb
xor
mov
lods
add
or
push
xchg
hlt
aaa
loopne
loop
jge
imul
jnp
out
inc
outsb
hlt
mov
dec
dec
xchg
add
push
cmpsl
mov
addr16
xchg
int
mov
pusha
sahf
bound
cmp
dec
das
add
jl
bound
movsl
int
je
push
inc
mov
mov
jbe
testb
pop
xchg
ret
out
out
call
push
cs
bnd
mov
sub
cmp
js
inc
and
loopne
adc
int3
xor
test
add
add
popf
cmp
jge
xor
cltd
fsubl
icebp
in
aad
push
push
mov
mov
mov
xchg
int3
sub
out
pushf
scas
imul
addl
and
scas
ficoms
sub
out
xchg
daa
mov
mov
cmp
ljmp
push
pop
pushf
loope
addr16
js
sbb
xchg
rorl
sub
push
pushf
jp
jns
and
lock
fdivs
out
cmpsl
push
jb
jl
rorb
popf
scas
sti
adc
out
lea
xchg
aad
adc
jne
mov
mov
add
mov
jp
mov
lgs
nop
dec
jg
fisubrl
sbb
push
aam
push
fisubrl
enter
cmc
les
and
adc
je
and
sbb
push
mov
ss
insl
dec
jle
sbb
push
xchg
fidivrs
int3
mov
out
sbb
dec
xchg
je
cmp
sahf
cpuid
lea
and
push
lret
inc
lock
jne
sub
movsl
jae
sbb
les
inc
add
push
mov
je
or
or
xor
push
sbb
in
in
in
cmpsl
cli
lret
icebp
and
jno
mov
sahf
push
pop
arpl
adc
inc
xor
repnz
pop
test
or
arpl
lret
and
int
mov
mov
push
cmp
ffreep
jp
pop
cmpsb
add
pop
xor
or
xchg
std
xor
imul
xchg
xchg
in
push
xor
dec
sbb
in
push
push
xor
arpl
sti
mov
faddp
push
jge
mov
xor
xor
jmp
fdivl
popa
sti
jnp
mov
add
xchg
fnstcw
dec
push
pop
jecxz
inc
pop
loop
push
xchg
andl
lea
mov
push
push
addr16
xor
cmp
aas
dec
jle
loopne
inc
enter
mov
mov
sbb
mov
xchg
pop
ret
adc
in
in
sbb
mov
nop
and
adc
jg
cli
dec
lret
adc
jge
xchg
in
pop
ds
push
sub
xchg
sbb
bound
mov
cmp
push
adc
adc
fmull
inc
adc
insb
icebp
sbb
sbb
jae
fnsave
lahf
sbb
dec
jl
gs
sub
mov
pop
cwtl
xchg
sarb
int
gs
mov
cmp
mov
adcb
testl
sbb
add
jg
pop
pop
xor
lds
addr16
cmpl
mov
jnp
in
and
jg
dec
pop
add
scas
xor
jle
outsb
mov
insl
sub
ret
push
popa
dec
shlb
dec
mov
mov
mov
dec
popa
out
jno
ret
std
stc
dec
xor
pop
inc
dec
in
pop
sbb
or
adc
cmp
xchg
mov
aas
mov
and
outsl
xchg
nop
popf
ljmp
mov
testb
test
dec
or
out
push
sub
sahf
das
dec
lahf
loop
mov
dec
out
lds
inc
fwait
testl
mov
rol
adc
in
and
pop
cmp
pop
mov
cmp
out
repnz
add
mov
push
inc
test
dec
lods
cli
sbb
cmpl
mov
popl
xor
xor
pop
loop
hlt
daa
dec
mov
jl
jge
mov
fbstp
jae
jg
mov
sbb
or
stos
jno
add
jo
stc
sub
cltd
je
shrb
test
sbb
add
push
in
out
xor
dec
and
pop
adc
mov
sub
and
loop
sti
sub
bound
adc
mull
loop
sahf
add
adc
out
icebp
in
leave
and
xor
adc
and
jb
jbe,pt
push
test
pop
inc
ljmp
js
popl
xchg
lcall
in
xchg
sub
subl
loop
fwait
pop
mov
and
dec
roll
scas
pop
lcall
jb
pop
xor
loope
dec
test
xor
jg
push
ljmp
pushf
sub
addr16
push
fstl
xchg
loopne
ds
push
test
data16
stos
je
popf
jp
mov
mov
repnz
orl
or
inc
popf
stc
mov
jg
pop
dec
fs
cmp
xor
lret
mov
jb
push
cmp
pcmpgtb
loop
mov
aad
outsb
sarl
push
int
andl
subb
fucom
daa
dec
mov
fabs
fisubl
and
add
sahf
imul
sbb
add
cli
cmc
push
mov
call
inc
sarb
xchg
fldenv
test
aas
dec
lock
pop
dec
xor
mov
or
cmp
xchg
mov
inc
inc
imul
stos
jp
icebp
sbb
sub
add
pop
push
cmp
mov
in
xor
in
mov
sub
leave
inc
inc
jbe
repnz
xor
push
gs
push
mov
xlat
jno
ljmp
int
jg
fisttpll
aaa
mov
sti
jge
pop
test
inc
leave
mov
stc
and
push
ficomps
add
in
jno
outsl
inc
inc
xchg
or
adcl
and
jle
roll
lcall
cmpsl
inc
in
mov
adcl
add
inc
lods
cmpsl
sahf
icebp
xchg
lret
shrl
cli
cmpl
sub
fsubp
xchg
add
jo
das
mov
jge
pusha
or
fdivrs
dec
lods
push
cmp
adcl
stc
sti
xor
jmp
loope
and
cmc
sbb
mov
fisubs
pop
std
cmp
xor
lock
add
dec
movb
adc
inc
ror
mov
shrb
mov
test
jle
cmp
in
inc
fwait
mov
add
dec
mov
movsb
shl
xor
jp
mov
mov
aas
and
sbbl
inc
in
sbb
into
xchg
and
not
pop
sahf
push
mov
ret
jb
xchg
fst
jecxz
int
push
pop
pop
jmp
popf
inc
xchg
rorb
rcrl
jg
lahf
jo
or
pushl
repnz
xchg
movsl
lds
xorl
dec
loopne
pop
fadds
mov
push
mov
int
xlat
adc
dec
roll
pavgw
or
jns
mov
test
arpl
cli
push
xchg
cmp
fiadds
lret
iret
std
jo
repz
stos
cmp
js
test
and
add
sbb
xchg
imul
out
cmpsb
fldl
or
out
rorl
jle
and
into
adc
adc
sub
repnz
rep
inc
fcompl
stos
pop
sbb
mov
inc
mov
and
test
or
inc
and
jp
mov
call
scas
rol
stos
jbe
jge
add
pop
clc
jo
inc
test
pop
pop
pop
ret
or
filds
test
pop
mov
jne
dec
loop
xor
mov
or
std
testb
loope
cmp
pop
cmp
push
push
inc
push
inc
cmpsl
dec
sub
pop
push
jno
insb
xadd
sub
loopne
sbb
or
mov
test
or
psrlq
mov
fiaddl
cmp
aad
pop
mov
mov
popl
adc
cld
inc
inc
adc
or
clc
dec
mov
dec
sbb
xor
xchg
ret
cmp
add
adc
jp
mov
push
pop
cld
fisubrl
mov
cmp
add
or
mov
shll
xorl
xchg
leave
jbe
cmpsl
pop
sub
or
lret
mov
sbb
nop
pop
or
daa
es
adc
adc
pop
mov
jno
enter
pop
data16
mov
fldenv
jmp
mov
aad
and
or
add
mov
fwait
imul
sub
aam
call
in
push
pop
into
mov
pop
inc
icebp
icebp
rorb
pop
adc
aam
decl
inc
inc
adc
xor
in
mov
clc
arpl
or
andb
nop
add
frstpm(287
scas
lcall
das
imul
cmpl
xchg
sub
insl
lods
adc
pop
jno
aad
jnp
fsubs
mov
idivl
daa
aam
xchg
outsl
stos
cmp
rorl
test
fs
push
sahf
scas
sub
idivb
mov
ja
imulb
es
push
jmp
mov
orl
push
or
push
mov
popf
xor
fwait
out
leave
stc
clc
or
fstpl
repnz
push
daa
xchg
and
lods
jecxz
jg
mov
pushf
leave
adc
fs
addr16
dec
outsl
dec
lret
loope
subl
sub
fcoms
fisttpll
lea
int
adc
into
push
imul
ja
je
data16
mul
test
rcrb
outsl
rcl
push
jns
xlat
cli
xchg
mov
and
scas
push
jg
or
pop
sbb
xor
pusha
cmpl
or
test
rcrl
stos
inc
data16
pop
cmp
pop
orl
fs
gs
cwtl
in
out
xchg
pop
outsl
mov
into
add
loope
arpl
icebp
movsb
inc
or
mov
jg
and
adc
insl
cmc
add
jae
push
adc
pop
jo
es
lcall
and
push
push
leave
or
jl
jbe
push
lret
fidivl
lahf
mulb
aad
xor
lret
xor
testw
mov
adc
adc
mov
or
mov
mov
cmp
in
pop
pop
into
sti
pop
scas
xchg
ror
jo
ret
repz
and
std
movsl
lret
push
xor
or
out
pop
stos
cmp
adc
xchg
test
pop
mov
rorl
xchg
push
or
in
sarb
xor
scas
lds
xchg
inc
out
pop
outsl
aaa
jae
xor
leave
lods
cltd
int3
xchg
jb
sub
scas
sub
outsb
xchg
mov
cmp
insb
push
adc
cmpsb
shll
out
push
and
aaa
cmc
push
out
jle
stos
mov
fdivrl
mov
xor
or
pusha
push
cmpl
fsubrl
adc
popa
ret
mov
jbe
idiv
shlb
jo
sbb
faddl
out
push
decb
pop
fmuls
enter
cmp
add
bound
jge
loop
mov
cmp
push
dec
pop
jl
mov
call
jo
shlb
lock
pop
pop
outsb
test
pop
adc
adc
sarl
jl
push
xchg
out
cld
push
ja
push
mov
call
loop
pushf
xchg
imul
push
adc
jno
cmp
sbb
outsl
mov
inc
aad
sbb
popf
inc
pop
push
cmp
scas
aaa
mov
mov
push
mov
push
jno
dec
rcll
and
cmp
jecxz
or
xor
xchg
cmpsb
xlat
cs
adc
adc
cmp
addr16
nop
push
pop
fucomip
jge
mov
xchg
and
sbb
loop
testb
pop
nop
repnz
inc
aam
cwtl
cs
adc
dec
jp
fimull
sbb
xchg
cwtl
movsb
scas
push
cld
mov
sbb
inc
mov
orl
push
roll
icebp
cmp
out
daa
dec
sbb
lods
inc
sbb
or
mov
cmc
pop
rcpps
xor
xchg
addb
je
dec
push
mov
mov
xchg
iret
push
jbe
ds
xor
add
xor
dec
aam
movsb
scas
gs
lahf
sti
and
lea
jae
xor
aaa
int
call
adc
jle
sbb
roll
push
add
popa
repz
jo
aaa
clc
xor
jg
les
jb
or
xor
add
ret
pop
lret
test
or
lret
xor
or
mov
aaa
shrl
push
mov
imul
pop
cmpsl
sbb
nop
and
out
or
ret
imul
ja
mov
and
mov
push
addr16
lds
mov
enter
adcb
test
aam
push
adc
popa
aad
fdivs
xchg
mov
push
nop
filds
sti
or
mov
out
xor
xchg
push
dec
movsb
popf
adc
adc
repz
lds
cmp
add
inc
popa
add
js
pushf
loop
in
incb
arpl
in
cltd
mov
push
sbb
lods
and
icebp
fdivr
mov
and
fs
lds
mov
shlb
fidivrs
dec
fs
inc
jbe
rcrl
icebp
sbb
leave
xor
cmp
xor
sub
inc
adc
scas
xor
mov
mov
lods
or
inc
icebp
mov
dec
add
xchg
bound
xor
add
dec
lods
repnz
xor
xchg
inc
js
mov
adc
lret
xor
xchg
mov
les
push
add
sbb
lret
pop
adc
or
test
mov
pushf
insl
push
and
leave
sarb
pusha
or
mov
lret
adc
push
xchg
jmp
adc
cmp
hlt
jmp
and
mov
jo
sti
aaa
lods
addl
test
xchg
sub
jae
cmp
fadds
push
ffreep
jbe
movsl
shrb
rcl
sbb
out
sarb
sub
xlat
jecxz
add
int3
and
jnp,pt
push
sub
stos
xor
rcrl
mov
fdivrl
pushfw
jne
sti
or
dec
dec
mov
mov
mov
mov
imul
xchg
xchg
cmp
iret
lods
out
loopne
iret
jp
push
ds
out
enter
adc
push
lea
push
adc
mov
jle
sti
sbb
and
scas
lods
xor
filds
xlat
ljmp
cmp
xor
push
and
loop
nop
cli
pop
pop
inc
mov
sbb
lea
inc
mov
test
jp
xor
jns
pop
and
in
iret
dec
addr16
in
repnz
jg
jbe
loope
lds
ror
push
repz
sub
mov
les
ficoms
ljmp
repz
sbb
fcom
jnp
push
inc
jg
popa
sbb
daa
jns
inc
xor
lret
jnp
test
mov
mov
insb
adc
enter
mov
aam
pop
das
inc
rorb
or
lahf
mov
xor
and
leave
adc
fwait
ljmp
addr16
pusha
aam
mov
stos
cmp
loopne
mov
mov
push
cmpsb
jnp
xchg
adc
lock
orps
dec
scas
jmp
dec
imul
or
adc
adc
movsb
ds
scas
inc
add
push
mov
or
push
adc
scas
push
jb
adc
and
lock
in
loope
cmp
jle
sbb
stc
mov
dec
mov
mov
rorl
push
add
add
lahf
fwait
push
out
mov
mov
outsl
jno
adc
inc
inc
add
xchg
call
mov
lret
pop
jp
shlb
lahf
lock
cmp
outsb
iret
fsubrs
inc
jns
mov
repz
mov
lahf
movsb
mov
insl
and
dec
fimuls
sub
push
test
cmpsb
jge
inc
jg
xchg
mov
scas
and
mov
mov
scas
hlt
daa
call
cmpsb
in
mov
lods
sbb
in
test
cld
mov
adc
mov
mov
cmpsl
loope
add
mov
cmp
mov
push
into
dec
in
xchg
and
es
iretw
jns
dec
testl
mov
inc
andb
sbb
aas
jne
inc
xchg
inc
in
pushf
jle
adcl
jp
sub
and
insb
hlt
cmp
lret
lret
sub
pop
push
inc
sbb
stc
mov
in
dec
mov
dec
imul
jns
sbb
inc
jb
lods
dec
xor
shlb
movsl
andb
sub
mov
sti
jl
shlb
jb
cwtl
cmp
mov
clc
xchg
xchg
insb
mov
test
or
adc
mov
cli
lds
rorb
jo
imul
cmc
xor
shl
divb
loope
sbb
dec
mov
test
lock
les
or
movsb
sub
daa
sbb
or
scas
daa
xchg
cltd
mov
fists
js
jge
stos
jo
test
lock
sub
cmp
xchg
aad
mov
int3
out
mov
pop
adc
jecxz
xchg
test
or
popf
bound
shlb
xor
dec
xchg
int
jg
enter
fiadds
addr16
xor
andb
bound
dec
mov
or
sahf
stc
jno
jbe
xchg
les
pop
pop
dec
fmuls
mov
sbb
jg
sarl
fnsave
adc
popa
push
fdivrs
xchg
vandnps
adc
mov
mov
adc
addr16
adc
sub
orl
fidivrl
mov
jl
lods
and
mov
js
xchg
lcall
push
push
enter
pop
mov
idivb
xlat
pop
hlt
and
inc
fwait
inc
das
popa
jbe
arpl
mov
jmp
popf
outsl
enter
stos
imul
cmp
or
jmp
xchg
dec
pop
inc
orl
mov
adc
imul
shl
xor
cmp
clc
sub
push
ja
xor
pop
mov
inc
iret
cmp
xchg
jns
jb
push
or
pusha
cmp
insb
mov
ret
stos
push
dec
push
pop
cmp
cltd
int
mov
scas
and
std
testl
sti
gs
cmp
movb
andb
das
scas
push
sbb
pushf
fsts
roll
rcr
shll
sbb
jb
xchg
inc
clc
stos
cld
inc
mov
mov
dec
and
add
call
push
mov
jns
fwait
test
out
mov
dec
jmp
clc
test
out
jmp
mov
pop
mov
mov
lret
inc
jns,pn
push
jecxz
push
inc
xchg
mov
adc
inc
sbb
stos
sar
jge
sbb
in
mov
jle
mov
push
jl
imull
call
xor
in
in
mov
dec
mulb
xchg
cmp
sarb
add
cld
push
sbb
sbb
gs
push
inc
push
into
enter
xor
inc
les
daa
jnp
mov
xor
arpl
mov
push
outsl
mov
inc
push
jl
ret
or
stc
fidivrl
sub
sahf
daa
imul
cmp
int3
sub
mov
mov
mov
clc
insb
jbe
sahf
repz
stc
out
or
fldl
das
pop
dec
push
aaa
lea
cmp
popa
in
mov
enter
xor
or
out
imul
ret
cmpsl
mov
ret
roll
sbb
or
pusha
jg
sub
stos
mov
pop
dec
rcll
push
frstor
cld
or
mov
xorb
cmp
shl
adc
clc
jle
xor
roll
and
push
push
loop
sbb
fcoml
xor
xchg
or
and
dec
add
pop
mov
push
xchg
imull
pop
ljmp
je
mov
jp
je
mov
mov
cmp
sub
insl
sbb
add
iret
out
inc
push
push
int
es
and
sub
fidivs
push
mov
subps
or
push
mov
xor
and
movsb
cld
xor
inc
push
adc
call
daa
bswap
jno
mov
inc
xor
shrl
stos
adc
ret
pop
inc
xchg
fmuls
test
mov
in
cmp
fs
out
outsb
push
int3
ret
sub
imul
stos
xchg
jbe
ror
push
mov
into
mov
adc
fiaddl
shr
xchg
sbb
subl
ret
or
or
fcoml
outsl
push
in
sub
xchg
loop
cmpsb
and
push
sub
xchg
mov
pop
lods
pushf
outsl
shll
xchg
sub
mov
inc
push
pcmpgtd
mov
xor
lahf
dec
inc
shlb
repz
jnp
in
dec
mov
xor
mov
cs
cmc
jbe
xchg
inc
push
int3
lret
mov
cmp
mov
jno
sbb
sub
outsb
push
jo
loopne
lret
xlat
cmpsl
aaa
rolb
add
es
pushf
rol
std
fcomi
icebp
adc
bound
popa
enter
mov
add
or
adcl
fidivrs
xchg
inc
inc
cmp
sbb
sub
cmp
popf
jo
nop
bswap
stc
icebp
cmp
mov
and
cmp
xchg
leave
imul
daa
imul
pop
and
sub
in
int3
add
pop
mov
sub
and
pop
jns
xor
dec
je
scas
cmp
lcall
pop
ficoms
loopne
loope
fs
pop
repz
or
cld
fdivr
aad
fcom
lahf
mov
and
lds
cld
stos
sub
sbb
dec
or
pop
dec
int
sub
push
icebp
lahf
xor
mov
push
mov
pop
sub
jns
jae
mov
jno
pop
mov
mov
enter
loop
add
fnsave
push
cmp
imul
into
jbe
imul
push
aam
decb
lea
jle
out
mov
dec
dec
lret
and
xchg
jns
push
imul
jno
pushf
pop
loope
dec
inc
stos
cmp
das
into
pop
mov
in
pop
outsl
inc
clc
add
ds
add
xchg
push
xor
sti
out
dec
movsl
aad
jae
mov
mov
aas
inc
cltd
dec
and
adcl
int
jle
adc
or
sub
insb
inc
lret
add
dec
xor
pop
push
adc
daa
mov
xor
mov
fidivs
mov
sbb
and
lea
pop
and
fnstsw
add
arpl
popf
jp
inc
int
sti
fisubs
jnp
xor
aam
and
mov
xchg
scas
fistpll
bound
fwait
jno
push
or
rolb
mov
test
movsl
mov
xor
std
lock
sbb
pop
lahf
das
jo
push
fidivrs
push
add
out
icebp
call
push
adc
push
fs
hlt
cmovne
mov
out
jo
xchg
pop
dec
jo
mov
int
mov
sbb
add
dec
std
pop
xchg
cld
cs
xor
inc
adc
ja
fcomps
je
xor
std
mov
dec
dec
imul
fldt
mov
push
and
aad
adc
push
xor
mov
nop
cmpsb
mov
mov
jbe
adc
dec
stos
mov
lods
xor
mov
jl
in
ljmp
scas
aam
cmp
mov
sub
es
mulb
aam
sub
dec
out
and
out
imulb
fdivr
mov
push
test
and
fwait
xchg
les
daa
mov
loope
push
sti
int3
pusha
rcll
clc
cmp
xchg
sbb
sbb
push
mov
imull
cmpsb
and
push
and
stc
out
sub
mov
xorb
lods
fcomip
xchg
dec
pop
cmp
nop
pop
pop
daa
loope
lret
fmull
mov
pop
iret
inc
dec
and
aas
pop
ljmp
jg
popl
cltd
or
insb
loop
push
fisttpl
and
fisubl
inc
mov
inc
jns
lret
jmp
sbb
jmp
mov
and
jle
or
xor
xchg
sbb
or
mov
push
imul
xchg
fisubrl
in
mov
dec
and
push
jae
inc
or
outsb
mov
xchg
adc
xchg
inc
shlb
out
cmp
out
lea
mov
call
lahf
mov
adc
mov
cmp
sbb
add
mov
jecxz
std
scas
xlat
aad
push
push
push
sti
addl
cmp
mull
outsl
push
imul
sahf
pop
pop
aam
cmp
mov
ds
xchg
ret
ja
inc
push
int
mov
aaa
xchg
repz
gs
stc
and
dec
push
pop
mov
stos
gs
jbe
xadd
shll
jecxz
jae
das
jno
pop
or
adcl
xor
es
sbb
ficompl
push
ret
in
aas
test
adc
push
leave
std
mov
mov
add
cmp
or
cli
and
ss
leave
and
push
push
xlat
fs
sub
daa
dec
rcrb
mov
idivl
call
cmp
inc
imul
popa
cmpb
std
or
scas
daa
mov
and
fs
dec
mov
lock
ja
movsl
dec
pushf
mov
mov
cmpb
test
stos
xlat
or
loope
cwtl
pop
fnstsw
call
push
sbb
loope
inc
fidivrs
icebp
mov
cmp
mov
and
or
xor
adc
add
in
sub
shlb
into
push
incb
cmp
inc
test
inc
in
or
iret
cld
add
or
push
in
push
movsb
insl
bound
sub
lods
mov
xchg
stc
push
pushf
and
int
mov
adc
cmpsl
repnz
and
push
or
mov
mov
xchg
ficomps
aaa
cwtl
lock
mov
xor
mov
cld
movntps
rclb
pop
sbb
outsb
ret
out
mov
mov
sub
repnz
jp
dec
push
jnp
pop
sbbl
xor
fisubrl
adc
mov
cltd
adc
test
test
push
lds
dec
inc
aad
mov
xor
jnp
enter
add
loopne
xchg
inc
xor
jp
loopne
cvtdq2ps
daa
aam
xor
jmp
mov
test
insb
daa
in
outsb
ja
notl
and
mov
jecxz
jae
sub
pop
aas
outsb
pusha
shl
dec
adc
adc
and
std
jnp
pop
cmovae
pop
daa
inc
mov
add
shrb
adc
enter
xor
ret
movsl
cs
loop
leave
jecxz
test
mov
loope
inc
adc
sbb
push
std
cld
and
hlt
add
popf
iret
test
in
rolb
xchg
cld
stos
mov
push
mov
push
push
lock
shlb
cli
push
add
jae
sti
ret
cli
mov
mov
add
out
add
lea
jg
movsl
xchg
aas
daa
mov
ret
inc
xchg
fdivrl
rorb
jl
inc
inc
jne
adc
popa
inc
jecxz
jno
stos
mov
sti
sub
adc
pop
stos
and
loope
sub
mov
adc
daa
push
mov
in
or
xor
jbe
ljmp
mov
insl
flds
cmpsb
cmp
jecxz
dec
sbb
dec
push
enter
inc
scas
sbb
shl
rcl
dec
jo
es
mov
cmc
fcompl
cmpsl
push
icebp
sar
jge
int3
xor
push
gs
sbb
pusha
popf
out
dec
jnp
sub
addb
enter
hlt
push
mov
lds
push
ret
jl
fcmovne
imull
and
sbb
js
fsubl
mov
ds
cmp
aam
outsb
sti
adc
push
xor
adcb
mov
test
clc
xor
mov
std
mov
jbe
add
sbb
dec
lock
cmc
and
std
and
add
push
jl
shlb
mov
imull
out
cmp
lods
icebp
inc
sub
mov
push
jo
sbb
rorb
sub
and
jo
cmpsb
jle
out
rcl
movsl
and
mov
jg
push
dec
mov
gs
mov
lret
mov
sahf
fcmovb
xor
in
sub
cmp
in
out
mov
xor
mov
aad
add
insl
mov
xchg
adc
push
hlt
sti
mov
mov
inc
out
inc
inc
test
inc
mov
fcmovb
mov
loopne
adc
stos
adc
shrl
push
pop
aam
xchg
pop
xchg
cmc
rcrb
decb
xchg
js
jge
cmc
mov
es
clc
sti
insb
sbb
push
dec
or
jmp
jno
addr16
push
mov
mov
add
enter
jbe
mov
push
dec
push
pop
xchg
jae
pop
inc
add
enter
dec
leave
mov
mov
pop
outsl
jne
pop
fstpl
and
xor
mov
sarl
push
sbb
jmp
shr
mov
icebp
test
out
lcall
dec
fnsave
in
lods
shrb
jae
cmp
cmp
sbb
xlat
sbb
mov
shrl
push
jl
out
out
daa
lahf
jmp
dec
pop
data16
mov
push
enter
imul
in
pop
nop
sub
dec
fistl
push
imulb
sbb
pusha
jne
js
mov
gs
xor
push
call
or
loope
iret
adcb
sub
orl
cwtl
repnz
adc
in
mov
jg
stc
fcmovnbe
mov
ret
sahf
and
xor
and
jp
int
imul
icebp
jbe
or
and
sub
sub
ret
js
xlat
jle
ret
stc
lods
lods
popa
fs
cltd
jno
test
out
xor
push
sub
stos
int3
lret
pop
xchg
in
cs
and
dec
xlat
popa
xor
xchg
xor
dec
test
and
mov
test
clc
sti
cmp
sbb
ljmp
lods
int
dec
mov
xchg
stc
hlt
mov
cmovo
jle
xchg
in
sbb
fdivrl
aaa
lea
adc
cmp
push
mov
insb
xor
sub
cli
inc
filds
sub
push
fwait
mov
sub
mov
mov
pop
jecxz
es
mov
bound
mov
jnp
test
adc
xchg
in
pop
jecxz
push
pop
and
fdivrs
std
mov
imul
mov
cmp
push
gs
pop
pop
stos
xor
xor
data16
pop
cmp
jo
in
jg
mov
pop
jle
or
cmpsl
jns
pop
cmc
cmp
dec
push
lea
ret
add
jg
mov
jl
in
orb
addl
jns
sbb
push
jp
mov
add
insb
inc
pushf
push
rorb
sti
jo
inc
push
fs
jbe
and
cmp
sub
sarb
fucomip
sbb
test
push
cmp
subw
test
or
pop
lret
jge
hlt
inc
sub
hlt
lds
lret
scas
mov
outsb
push
lret
and
pop
loop
cmp
push
insl
push
xchg
ficoms
test
pop
mov
mov
mov
jp
gs
push
cltd
mov
inc
cwtl
mov
xor
lret
sahf
jge
mov
insl
sub
mov
cmp
mov
dec
push
icebp
out
lods
js
ljmp
das
dec
cmp
jl
aam
xchg
cltd
dec
dec
xchg
lds
lock
or
xchg
xchg
sahf
fs
cltd
xor
popa
sbb
out
add
fbld
pop
sbb
push
mov
xchg
ja
dec
js
divl
sub
push
imul
popa
jnp
or
pop
cli
jmp
xor
xor
push
bound
in
xchg
test
out
cs
inc
scas
xor
cmpsb
dec
bound
jg
or
mov
scas
dec
dec
mov
mov
out
jnp
nop
outsl
call
mov
loopne
xorl
mov
mov
xchg
inc
mov
out
lret
cwtl
repnz
mov
lret
sbb
mov
sbb
pop
negl
in
insl
mov
xchg
jle
icebp
xor
cltd
xlat
xchg
imul
add
or
and
dec
les
aas
xchg
iret
fwait
lock
mov
shrb
cmp
arpl
sub
scas
leave
das
sbb
out
jae
add
pop
mov
mov
stos
out
scas
push
mov
cs
cmp
sar
es
pop
mov
out
test
mov
xchg
pusha
les
mov
adc
xchg
mov
rcrl
mov
pop
xchg
jge
adc
je
push
dec
or
cmp
jno
add
int3
push
push
cld
mov
sbb
testl
add
call
lds
in
jb
ret
lcall
mov
movb
push
jne
jg
cmp
daa
push
sahf
jae
test
xor
jecxz
data16
lret
stos
daa
jbe
testl
inc
loop
push
pop
mov
fcomps
sbb
test
and
clc
mov
cli
mov
jmp
cmp
xchg
aad
or
sub
cmp
filds
inc
rcrl
mov
cld
mov
push
lcall
enter
and
fldcw
fdivs
sti
push
mov
pop
ss
ret
push
cmc
add
or
fwait
and
jae
je
insl
pop
scas
mov
hlt
test
cs
in
pop
xchg
mov
jns
decl
insb
inc
fs
push
lcall
dec
movsl
out
je
mov
mov
loop
sbb
push
mov
jle
mov
mov
xor
imul
add
mov
test
stos
loopne
mov
call
push
or
xchg
pop
jbe
scas
pusha
fisubl
dec
lods
add
sub
rcrb
mov
aad
out
mov
pop
add
sbb
dec
jle
dec
push
xor
loop
lods
aam
repz
add
xchg
add
out
xor
subb
pop
add
lods
cmc
int3
push
inc
dec
sbb
outsb
mov
nop
lock
jb
add
je
test
addr16
cmc
loop
dec
xlat
test
arpl
popa
and
in
xchg
ret
push
and
push
sbb
out
mov
mov
sarl
into
cmp
jg
sarl
push
push
je
clc
nop
cld
test
stos
push
lods
jl
lret
xchg
mov
mulb
fisubl
out
and
loopne
je
xchg
dec
dec
push
pop
into
scas
mov
dec
dec
or
push
jne
or
mov
or
enter
in
dec
call
pop
std
xchg
sub
mov
sub
add
mov
jl
add
in
ja
jmp
popf
insl
or
rclb
cmp
push
cmp
sbb
mov
pop
push
mov
add
lea
add
mov
aaa
aas
xor
stos
fildl
incl
lods
add
jle
push
out
pop
lahf
popf
std
jne
add
mov
mov
ds
hlt
cld
insb
leave
cmp
mov
es
aas
pop
add
ret
and
insb
imul
pop
sbb
popf
mov
mov
shlb
enter
mov
push
mov
push
inc
add
xchg
mov
or
cmp
push
jp
adc
inc
dec
pushf
dec
push
cmp
add
icebp
sarb
enter
gs
movsb
in
dec
sbb
ds
ret
add
dec
fnsave
and
mov
sbb
xor
mov
rorl
dec
cmc
cmpsl
mov
ss
adc
rcr
lret
cs
fistpl
dec
ljmp
push
push
lds
cmp
incl
aaa
jbe
cmp
das
in
les
aad
mov
mov
mov
lret
or
mov
or
push
mov
push
in
adc
push
je
shr
fnstenv
mov
mov
ret
sbb
jmp
stos
lock
icebp
in
xchg
mov
pop
orl
subb
cmpsl
mov
sub
dec
sbb
add
mov
sbb
or
fnstcw
int
cmp
adc
xchg
iret
pop
xchg
jecxz
mov
sbb
gs
jbe
mov
xor
sub
jl
push
loopne
push
inc
fnstsw
dec
inc
loopne
insl
cmp
xchg
inc
sub
sbb
testb
or
add
xchg
int3
lock
or
sbb
lds
jns
repnz
stos
add
mov
and
cmpsl
fptan
adc
movsb
xchg
mov
inc
mov
lods
pop
dec
jno
mov
insl
lods
pop
mov
int
lds
mov
cmpsl
mov
adc
mov
xchg
sub
lahf
ret
std
mov
or
mov
push
inc
xchg
sub
addr16
push
add
jae
outsb
fcmovne
mov
xor
pop
out
in
nop
std
push
lods
mov
leave
pop
aam
pop
or
sub
ror
adc
dec
out
sbb
cmpsb
sbb
cmp
aad
push
mov
out
out
push
nop
jge
jbe
aad
xchg
lret
in
fimuls
imul
les
mov
xor
xor
xchg
ror
inc
add
insl
jns
mov
movsb
cmp
lock
xor
jl
sbb
enter
xor
fimull
leave
and
push
dec
enter
mov
jecxz
insl
push
in
and
dec
sar
mov
jmp
pop
and
and
xor
and
mov
aam
je
cltd
testb
pusha
xchg
push
shlb
jmp
mov
addb
out
pop
pop
mov
fadd
or
aas
and
mov
jns
mov
inc
xchg
into
nop
push
add
in
push
lock
xchg
test
jno
je
push
in
lock
loope
fnstsw
popa
mov
scas
dec
or
push
mov
jl
les
xchg
stc
pop
cmp
xchg
or
imull
test
lds
mov
into
lahf
stc
fidivl
xor
mov
pop
adc
sub
jge
int3
mov
mov
je
jnp
lcall
ret
sub
sbb
std
in
repz
sub
mov
xchg
pop
xchg
popw
pop
icebp
jns
loop
add
mov
push
fbstp
or
jne
dec
out
push
mov
jp
push
pop
or
jo
pop
inc
loope
mov
inc
jp
pop
sub
push
adc
push
sbb
xchg
stos
sbb
subl
ss
pop
mov
popa
pinsrw
xchg
mov
pop
push
stos
repnz
rclb
and
sbb
aaa
enter
cmp
aam
outsl
in
imul
jnp
mov
int
add
and
pop
xor
sub
ja
mov
lret
mov
mov
insb
xchg
push
das
jge
push
das
mov
fdivrl
push
stos
and
pop
xchg
adc
dec
jns
insb
jb
jne
sub
adc
mov
movsl
sbb
jns
iret
cmp
sbb
pop
mov
push
add
in
xchg
add
test
sbb
mov
iret
adc
hlt
sarl
mov
and
and
js
sarb
popa
data16
repnz
cmpsl
mov
fs
dec
and
adc
test
add
insl
or
into
jae
fbld
mov
jne
push
sahf
fdivr
pusha
jnp
ja
in
in
loop
inc
clc
push
adc
rcrb
mov
xchg
out
addb
data16
cmp
ds
pop
push
mov
xor
mov
add
bound
mov
pushl
insb
fwait
cs
and
repnz
jp
test
push
daa
jb
pusha
into
test
dec
inc
sub
dec
mov
stos
nop
pop
jo
push
adc
loope
adc
and
js
popf
bound
cmp
cmp
es
cld
xchg
jmp
push
inc
push
sbb
daa
sbb
and
shlb
pop
mov
pop
sahf
push
out
dec
sbb
ljmp
lret
loopne
jns
dec
cmp
movsl
dec
push
pop
fdivs
imul
pop
dec
adc
push
jb
or
andb
pop
orb
inc
mov
pop
lret
lds
cltd
dec
psubusb
push
ror
add
cwtl
sub
mov
popf
sahf
cmp
push
push
imull
add
fisttpll
lahf
rol
ficomps
push
mov
and
inc
lahf
loop
jns
pop
dec
xor
mov
mov
shl
xchg
xor
mov
or
movb
push
add
idivb
xor
call
mov
or
dec
mov
nop
iret
xchg
bound
xor
cmp
mov
adc
in
or
push
stos
or
sub
and
stos
sbb
ds
cmp
push
and
je
mov
adc
xchg
cmc
cmc
sbb
adc
lahf
and
popa
sti
sub
lods
jne
ret
pop
cs
cmp
aam
cli
data16
and
std
in
mov
push
adc
sbb
aas
xor
cmc
cmpsb
lcall
cmpsb
lret
arpl
sub
insb
jne
dec
cmp
push
inc
push
xchg
add
clc
dec
xor
stos
aam
xchg
xor
aam
jg
icebp
xchg
jp
loopne
xchg
sbbl
pop
mov
xchg
out
xchg
outsl
sahf
xlat
mov
inc
lahf
sbb
mov
jno
rclb
addr16
lock
dec
jbe
push
imul
mov
xor
cmp
outsl
insl
or
or
fdivrl
add
clc
ljmp
in
pop
aas
cmpsl
mov
push
fisubl
cmp
pop
mov
lods
xchg
push
fs
arpl
mov
cmp
int3
dec
push
rclb
mov
sub
lds
arpl
lock
in
out
pop
xchg
mov
pushf
xlat
adc
fsubr
mov
inc
lret
aad
movsl
jp
add
adc
outsl
insb
mov
dec
jmp
sbb
inc
stos
int3
das
mov
mov
sarl
out
and
pop
aam
pop
adc
lds
ja
or
jb
cltd
push
call
push
push
fstp
cmp
sub
mov
jmp
xchg
push
mov
inc
shll
pop
loope
or
xor
adc
lock
pop
xchg
cwtl
je
mov
push
push
loop
je
repz
arpl
roll
insl
in
scas
mov
loope
mov
shl
popf
repnz
push
add
pop
xchg
imul
and
cmp
and
loop
xor
xchg
jo
sbb
ja
gs
xor
cmp
test
cmpsb
das
das
cmp
imul
nop
rorl
jl
inc
add
leave
push
scas
sahf
xor
arpl
movsl
mov
mov
outsl
lods
lahf
adc
or
push
jecxz
cmc
cmp
mov
cs
sbb
pop
add
mov
jg
repnz
ds
cmp
lods
push
or
push
mov
mov
testl
jae
icebp
xor
mov
movl
cwtl
xchg
jmp
add
jbe
es
adc
push
loop
ljmp
sahf
cmp
xor
jg
ss
lods
stos
xor
inc
lahf
js
ret
fwait
test
pop
movswl
cmp
cmp
sbb
cli
xchg
dec
push
xchg
scas
and
unpckhps
push
adc
jae
pop
mov
divb
cmp
and
imull
add
dec
adc
nop
adcl
xor
xor
xchg
push
cs
xchg
push
inc
mov
push
dec
inc
sbb
hlt
aam
dec
push
loop
fdivrs
pop
push
arpl
jnp
push
enter
or
js
xor
jmp
lret
fs
or
fsubrs
rcl
mov
cli
adc
movsl
xor
push
into
test
mov
xor
push
and
into
rcl
ficoml
aas
jo
jp
mov
push
bound
stos
inc
ret
dec
xor
pop
push
push
test
push
ret
mov
jp
mov
cmpl
mov
mov
xchg
fstl
popf
sub
jg
lock
or
xchg
pop
dec
jle
int
add
fistpll
int3
lret
inc
lods
test
sbb
inc
pop
mov
mov
mov
mov
mov
dec
test
mov
into
jg
stc
mov
outsl
test
cwtl
stos
scas
aad
and
push
mov
fwait
lods
out
mov
pop
dec
mov
ja
pop
sub
loop
xchg
dec
mov
mov
popf
dec
ret
inc
bswap
iret
sub
cmp
add
push
jo
push
lahf
out
insb
mov
int3
psubb
cli
test
xor
daa
or
inc
sbb
insl
movsb
adc
int3
popf
mov
pop
inc
mov
cmc
pop
addr16
jg
retw
jge
sbbb
sub
or
addr16
mov
addb
and
or
cld
rol
adc
movsb
test
or
testl
lods
test
mov
mov
jns
adc
dec
das
frstor
jp
fldl
dec
cli
or
mov
test
jmp
push
mov
ljmp
pushf
push
pop
int3
popf
std
lret
push
cmpb
aaa
lcall
subl
mov
scas
mov
fdivrl
mov
cmp
xchg
inc
das
sbb
mov
jb
mov
cmp
repz
jecxz
nop
mov
jmp
pop
pushf
inc
pop
or
cltd
scas
imul
leave
outsb
jno
adc
scas
inc
aam
cli
push
pop
push
fdivrl
aam
add
shrl
movsb
mov
pusha
mov
in
pop
lds
mov
ljmp
jno
dec
xor
loopne
jle
aas
inc
aas
xor
fmuls
dec
movq
pop
lea
jbe
je
and
fs
pusha
in
faddl
jmp
insb
lahf
xchg
dec
or
insl
add
decl
test
out
loope
cwtl
hlt
cmpsl
and
cmp
in
leave
sub
or
mov
xchg
lahf
adc
cmpsb
mov
popa
lret
add
adc
xchg
adc
out
stos
mov
and
leave
stos
mov
or
jmp
push
add
pop
fcomi
xlat
cmp
lods
sbb
scas
push
cmpsl
jle
outsl
mov
pop
aam
imul
test
push
mov
mov
mov
pop
pop
xchg
mov
scas
insb
leave
adc
hlt
shlb
out
dec
mov
leave
cmp
aaa
push
jo,pt
in
mov
sub
push
orb
fisubrs
into
mov
pop
shl
jo
dec
test
movsb
or
shrl
test
and
int
or
add
mov
into
orb
pop
ds
sahf
int3
add
push
ss
jmp
fidivs
std
stc
push
mov
cmp
xchg
lret
aas
lcall
ljmp
andl
pop
lret
arpl
cmp
insb
adc
ret
sub
mov
dec
xor
das
push
or
data16
cli
jge
pop
and
aas
cmpsb
mov
inc
pop
and
clc
daa
pop
jo
cltd
jae
xor
ljmp
addl
push
xchg
popf
mov
jl
js
adc
adc
out
les
adc
movsl
pop
push
xchg
jge
es
je
mov
test
jnp
mov
aaa
add
and
jge
push
inc
mov
jg
dec
js
insb
popf
pop
adc
pop
mov
out
cmp
out
das
stos
pop
xchg
push
push
pop
stc
fimuls
inc
xor
imul
add
mov
jecxz
idivb
ret
ljmp
mov
cli
shrl
pop
out
inc
jecxz
mov
mov
out
jecxz
dec
data16
push
fdivrs
scas
popf
jbe
stc
and
pop
jns
jmp
dec
addl
nop
daa
cmp
repz
ljmp
sub
fdivrs
js
adc
hlt
jno
roll
icebp
cld
pop
xchg
ret
fs
out
fstpl
fcomi
or
sub
in
lea
cmp
std
fimull
adc
push
or
mov
sbb
xchg
sub
icebp
cmpsb
cmpb
int3
cmp
pop
mov
lahf
sub
scas
movsl
push
jns,pn
or
test
jbe
jle
pop
dec
jnp
ja
fistps
stc
cmp
ds
rep
enter
adc
out
call
nop
lret
imul
sbb
ds
mov
pop
mov
ja
popf
clc
push
aad
test
je
outsl
mov
andl
rorl
add
jbe
popf
adc
mov
inc
jmp
pop
mov
call
das
cmpsl
adc
sbb
pop
jecxz
or
sub
or
insb
icebp
mov
fwait
shlb
inc
and
stc
mov
inc
lods
repnz
pop
icebp
jnp
dec
data16
mov
cmp
mov
xor
ffree
dec
xlat
loop
mov
test
into
in
mov
mov
insb
jmp
fists
push
stc
dec
int3
stc
push
movl
pop
and
addb
inc
jb
dec
pop
stos
jg
add
xor
sbb
sti
fs
into
call
pop
sarl
enter
cmpsl
mov
pop
xchg
dec
dec
jge
sti
dec
jbe
fmuls
jne
adcb
mov
scas
push
sbb
lcall
mov
and
test
mov
pop
sbb
sbb
arpl
adc
mov
mov
and
int
notb
xchg
mov
inc
in
or
dec
mov
add
ljmp
int
fists
mov
lcall
ljmp
in
xor
test
pop
stc
hlt
push
push
and
addb
mov
ret
cmp
in
pop
pop
mov
addr16
pop
andb
sub
loope
add
cmp
mov
das
daa
pop
mov
cmp
lahf
lret
cmp
xchg
lea
and
add
test
pop
pop
xlat
jnp
inc
pop
add
add
jl
sub
lcall
adc
scas
add
test
and
aas
push
jl
lcall
pushf
movsl
ret
adc
jo
inc
mov
or
mov
daa
pop
cmp
cmpb
insb
sti
and
fsubr
pop
pop
push
imul
sbb
shll
xor
push
fcomps
adc
out
das
sbb
cmp
inc
fs
insl
xchg
add
jb
adc
fsub
pusha
int
rol
loope
add
or
mov
and
mov
adc
aam
jo
jbe
xchg
xchg
das
sub
in
cmp
inc
or
outsb
pop
ss
jmp
mov
jno
or
inc
xchg
insb
adc
dec
in
fstpl
pusha
pop
pop
sub
lods
push
mov
sub
test
mov
out
jp
xchg
mov
xchg
ljmp
outsl
and
bound
fsts
push
aas
push
loop
dec
je
sbb
adc
adc
out
add
cmp
push
cmp
inc
fisttpll
outsb
bound
sub
neg
or
xlat
pop
mov
mov
inc
cmp
addb
sub
mov
jne
imul
cmp
sub
ds
mov
mov
mov
std
jno
inc
push
aaa
popl
xchg
loopne
pop
sub
sbb
lds
scas
gs
push
pushf
mov
xchg
push
mull
push
xchg
xchg
push
ret
fisttps
cmp
icebp
in
into
inc
repnz
dec
aad
or
push
jae
pushf
cwtl
push
push
xchg
bound
repz
mov
or
lods
pop
gs
mov
push
mov
mov
test
push
stos
cwtl
sbb
sub
pop
test
les
jp
popf
dec
mov
repz
inc
and
dec
mov
push
sbb
push
mov
xchg
inc
push
xchg
mov
lods
gs
sub
rol
pop
insl
scas
adc
sbb
outsb
adc
sub
jmp
xor
xor
fdivl
xchg
stc
push
xlat
mov
popa
mov
shll
pop
push
sbb
xchg
fnstenv
out
fldl
cs
add
loopne
cmp
loopne
push
shrl
pop
js
cmc
push
xor
leave
adc
fildl
insl
mov
ljmp
xchg
inc
mov
nop
push
jbe
push
cmp
sarb
les
sbb
sub
pusha
daa
add
adc
adc
xor
pop
mov
pop
lret
add
addr16
cmp
xorl
repnz
mov
push
jmp
stos
or
jnp
movsb
jns
add
cld
dec
xor
xchg
mov
into
sbb
sub
roll
es
leave
lret
mov
jmp
daa
sarb
cmp
pop
pushf
push
adc
pop
jge
call
lods
xor
push
or
push
outsl
addr16
sub
push
inc
sti
loopne
outsl
dec
xchg
outsb
ja
clc
dec
mov
arpl
insb
mov
jg
push
cmp
xor
or
into
in
jp
dec
push
inc
pop
loope
mov
lea
or
das
mov
nop
out
cmp
or
pusha
jno
mov
cmc
xor
xchg
addr16
stos
inc
fucomp
shlb
xchg
fidivrs
cltd
mov
lods
sbb
shlb
dec
shrb
bound
mov
pop
jno
pop
mov
repz
std
aad
out
mov
bound
jb
in
jns
ja
movsl
mov
movsl
add
out
jge
out
pop
dec
dec
mov
ljmp
or
stos
mov
mov
out
dec
sti
add
rcr
or
lods
dec
lds
push
out
in
adc
add
mov
push
outsl
cmp
cmp
and
in
jo
lods
push
stos
aaa
ficomps
xor
in
or
sbb
xchg
ja
jno
inc
mov
nop
and
jno
push
in
inc
push
les
inc
sti
loope
test
jmp
xchg
scas
dec
pop
push
pop
aad
add
cltd
mov
mov
ret
or
out
movsl
cmpsl
idiv
mov
xor
inc
mov
jnp
mov
mov
fildl
divb
jno
shl
les
jp
lock
mov
jmp
mov
and
divl
inc
cmpsl
jmp
sub
and
test
popf
adc
xchg
pop
mov
mov
push
ja
inc
dec
xchg
cmp
out
xlat
movsl
and
hlt
sti
imul
repnz
pop
sub
pop
jns
xlat
cmp
mov
je
in
sub
add
mov
out
out
scas
test
pop
out
je
and
add
push
movsl
mov
das
pop
sub
repz
jb
jmp
add
in
xchg
mov
pop
cwtl
pusha
lods
and
xchg
fnstenv
adc
fsubrs
mov
xchg
inc
inc
jl
call
mov
fbld
adc
add
imulb
orl
adc
ret
shll
adc
push
out
data16
fcoml
inc
dec
movsl
dec
loope
pop
push
das
inc
adc
stc
outsb
dec
mov
adc
mov
dec
mov
cmpsl
mov
nop
fidivrs
mov
push
mov
repz
jecxz
fildll
test
xor
and
jge
out
jge
enter
mov
xor
ds
pop
stc
imul
fstps
mov
popf
mov
stc
iret
je
mov
or
subb
out
inc
mov
out
cmpsb
jle
es
test
loope
inc
fs
in
jno
enter
adc
notl
ja
call
les
pushf
and
movsb
xor
inc
add
dec
jle
pop
xorb
iret
gs
in
mov
push
sub
icebp
pop
inc
or
stc
jl
shlb
xchg
into
xor
pushl
lods
cmpsb
rclb
int
adc
sbb
jp
out
inc
shrb
aaa
je
pop
out
push
movsl
dec
iret
popf
mov
loope
ja
sub
mov
or
dec
cmpsl
scas
mov
pop
lret
shll
bound
cmp
cmp
mov
mov
jnp
jp
pop
lahf
pop
xchg
sub
pop
sbbl
pop
and
icebp
popf
dec
xor
dec
mov
movsl
or
pop
in
ss
cmp
and
fucomp
loop
jecxz
jne
test
test
jbe
jecxz
cmp
xchg
inc
mov
icebp
sahf
add
jge
insb
pop
call
insl
mov
frstor
adc
sahf
iret
push
sbb
xchg
jb
js
jl
or
sub
pop
cli
rorb
xor
rclb
sbb
mov
xchg
rcl
push
push
ret
lahf
test
fmuls
jp
imul
fcomi
aad
mov
movsl
fisttps
mov
fwait
xor
cltd
lods
mov
jecxz
xlat
inc
test
pop
mov
fsubs
fcoms
or
stc
sub
les
sahf
mov
pop
int3
aam
adc
test
loopne
loopne
mov
add
es
inc
jmp
cld
mov
push
jno
mov
cmp
xorl
mov
aaa
aam
mov
add
add
or
lods
out
cmpsl
mov
out
push
mov
xchg
xchg
mov
sbb
out
xlat
test
in
pop
aam
xor
je
inc
push
cmpsb
and
pop
inc
jle
shll
clc
fidivs
mov
int3
xchg
or
jg
repz
xor
jne
mov
je
inc
ds
scas
jge
push
mov
fisubrs
mov
dec
jge
or
imul
ret
adc
jecxz
inc
js
popa
stos
shlb
call
test
aas
inc
xchg
xchg
repz
jo
js
daa
fucomip
in
enter
test
add
push
mov
into
addr16
test
test
sbb
aas
mov
loope
add
in
jbe
je
in
xchg
outsl
out
pop
mov
into
or
cmp
mov
into
repz
aam
inc
je
pushf
mov
icebp
data16
push
add
into
sti
popf
fcomi
mov
out
stc
sbb
dec
dec
rorb
aad
mov
mov
adc
xchg
sbb
sub
fnstenv
stos
xchg
pop
cltd
insl
rcrl
cs
arpl
push
jnp
subb
cmc
jnp
xchg
jecxz
mov
dec
ja
inc
xor
insl
mov
repz
scas
adc
scas
ljmp
add
sbb
scas
sbb
nop
movsl
xchg
add
aas
sbb
hlt
xchg
jmp
mov
xchg
jb
push
pop
jo
lcall
popa
popf
add
in
loopne
mov
push
mov
cmp
incb
repz
arpl
aad
leave
ss
imul
push
xchg
adc
cmp
push
retw
push
dec
lock
pop
fwait
pop
fildll
sbb
jae
add
dec
mov
out
and
jmp
fdivrp
je
or
mov
xor
or
aas
sbb
cmpsl
cmpsb
bound
cmp
lret
add
cmc
or
repnz
xor
in
shrb
enter
jo,pn
test
jae
dec
xor
xor
mov
jmp
movsl
mov
je
imul
push
out
and
stc
mov
adc
xchg
mov
mov
es
push
inc
push
xor
lods
push
int3
enter
arpl
add
movsl
mov
pop
xchg
or
pop
flds
jp
xchg
and
lahf
mov
dec
sub
xor
inc
xchg
in
jge
pop
add
mov
insb
insb
and
jne
dec
mov
out
push
stos
ret
clc
or
imul
inc
dec
dec
cmp
lock
pop
push
dec
dec
mov
jne
outsl
fcom
sbb
ja
lds
enter
dec
sbb
push
fists
dec
ds
jns
sbb
sub
daa
mov
or
andb
and
and
xor
inc
fsubrl
enter
jb
orl
mov
shll
pop
push
or
stc
testb
sahf
das
idivl
hlt
call
hlt
inc
mov
js
jle
add
jecxz
jmp
push
flds
out
and
int
daa
cmp
popf
inc
mov
popf
movsl
inc
and
mov
push
cwtl
fildll
in
mov
jmp
out
sbb
in
pushf
xor
or
push
test
inc
add
cwtl
inc
data16
sbb
add
int
insl
jmp
bnd
mov
daa
insl
clc
and
imul
shll
or
adc
test
xor
mov
insl
xor
xor
or
mov
xor
popa
jnp
aad
push
sub
pop
adc
cld
add
movsl
ret
and
inc
cld
stos
push
push
out
ficoml
sbb
call
xor
dec
addr16
test
lods
aam
repnz
scas
or
sub
movsb
fiadds
push
inc
adc
lret
mov
sbb
dec
lock
outsl
push
test
mov
push
ds
or
shll
xchg
iret
dec
je
mov
jb
shrb
xchg
and
push
push
out
sbb
cwtl
pop
xor
cmp
mov
leave
nop
xor
popa
or
call
jnp
clc
sahf
dec
enter
pop
aad
jnp
jnp
out
and
cmpsl
shl
add
fxch
jb
inc
sub
call
repnz
lcall
push
sub
lock
lock
inc
jp
cld
push
insb
outsb
pop
sub
leave
xchg
nop
js
stos
gs
jle
and
test
lcall
out
mov
and
sbb
out
addb
test
cltd
cld
sbb
das
xchg
sbb
fucomi
xchg
lcall
mov
mov
push
cs
xchg
fs
fbld
pop
mov
adc
inc
sub
add
cli
aam
and
xor
ds
inc
mov
pushf
outsl
lret
lea
mov
test
popf
lret
add
adc
fistps
pop
mov
jns
into
fidivrl
daa
cmp
pop
adc
push
aam
jbe
add
sub
test
dec
in
sti
sub
or
cmp
jl
movsb
pop
aas
fsubp
fnstenv
mov
cli
adc
sahf
mov
jnp
pop
icebp
mov
or
inc
xchg
xchg
ret
arpl
imul
push
mov
jg
or
and
xchg
loopne
call
inc
into
popf
jne
fsubrs
js
adc
xor
xchg
mov
mov
nop
pop
and
fsubrs
orb
push
pop
jae
jae
mov
dec
jecxz
add
jmp
push
jge
mulb
sub
xchg
fcmovbe
pusha
inc
mov
push
xor
inc
in
jnp
adc
adc
orl
in
push
cli
sbb
dec
fcomi
mov
je
fwait
xchg
rcrb
mov
ret
push
call
ss
inc
stos
push
inc
aad
imul
xor
xchg
outsl
std
add
and
outsl
aaa
xlat
jg
mov
mov
and
in
leave
int3
push
and
or
or
mov
out
ret
xadd
fisttpl
fdivr
negb
pop
pop
push
in
push
aas
push
js
ds
sbb
pop
push
and
mov
sbb
lea
inc
and
daa
jecxz
popf
mov
fnstcw
mov
ffreep
xchg
arpl
out
movsb
or
ljmp
pop
mov
aaa
sbb
lret
cltd
xchg
bound
xchg
int3
lahf
addr16
cmp
mov
fdivrl
rclb
mov
fbld
sarb
out
adc
mov
cs
aam
cmc
dec
add
push
xlat
pop
aas
mov
xchg
mov
leave
push
xor
pop
mov
push
mov
in
pcmpeqw
shrb
popa
mov
mov
es
pop
sarb
hlt
stos
pop
mov
sub
js
je
xchg
adc
into
aas
cmp
roll
jecxz
aad
inc
pop
sub
mov
pop
scas
in
dec
ljmp
std
cmp
neg
cmp
fdiv
and
fs
dec
stos
inc
mov
inc
aad
push
mov
lret
mov
jb,pt
mov
out
mov
mov
cmp
mov
sub
push
cltd
cmp
mov
add
repnz
mov
movsb
inc
sub
cmpsb
push
mov
xor
mov
sub
cmp
repnz
or
lock
cmpsl
mov
mov
mov
jb
xor
xor
ljmp
out
inc
ja
pop
cmc
jmp
or
cmpl
inc
mov
adc
movsb
add
sbb
cs
push
xchg
imul
fistpll
xor
sub
loop
iret
enter
mov
into
adc
xor
cld
adcb
into
aaa
call
repz
xchg
and
sub
stos
inc
sbb
xor
cld
sub
fwait
into
and
xchg
cmp
push
sbb
push
adc
pop
sub
dec
iret
cmp
cmpsb
add
mulb
stos
push
or
test
and
add
aaa
maskmovq
idivl
scas
insb
xchg
and
mov
mov
cmp
lea
dec
mov
add
pop
pop
dec
and
lods
sbb
push
rcr
jmp
dec
scas
and
dec
sbb
gs
inc
dec
cmp
ss
push
js
leave
inc
fidivs
in
hlt
push
mov
push
inc
mov
jns
mov
fcmovu
out
aaa
ja
cmpsl
je
cmp
stos
or
xor
pop
push
subb
les
sub
popf
test
xchg
gs
inc
bound
loope
xchg
jne
in
sub
ja
mov
leave
std
mov
push
xlat
outsl
push
push
sarb
or
or
cwtl
dec
or
insb
xchg
pop
test
mov
pusha
sub
pop
aad
lea
inc
jl
inc
add
lret
or
sarl
lods
mov
push
jb
jecxz
push
test
rolb
mov
das
fcomps
lret
jo
sar
rol
adc
or
enter
push
addb
xchg
std
push
cmpsb
lahf
sub
imul
or
test
lock
lret
pop
xchg
lods
or
imul
add
jmp
cld
dec
sarb
push
dec
push
xchg
mov
xchg
stos
mul
js
jb
inc
sbb
jg
aam
cmp
in
inc
fsubrs
lea
inc
jg
cld
pop
loope
jge
in
push
sbb
xchg
adc
inc
insl
mov
loop
out
lds
mov
mov
mov
shlb
negb
add
dec
sbb
inc
mov
push
int3
aaa
and
dec
gs
ret
push
jb
mov
inc
and
sahf
push
or
loop
stc
cmc
sub
xor
cwtl
mull
adc
int
shl
pop
xchg
sub
fimull
jmp
stos
ja
test
cmp
inc
out
cmp
mov
lock
cwtl
sarb
mov
fistps
push
pop
dec
add
push
aaa
xchg
mov
int3
icebp
je
sbb
cmp
jp
dec
dec
inc
or
mov
ret
fisttpll
ss
and
dec
sbb
sbbb
xor
sub
dec
das
rcrl
sbb
push
in
pop
cmp
xchg
mov
jle
imul
adc
dec
loop
push
in
mov
push
das
xor
or
imul
cli
sbb
mov
inc
fstpt
outsb
xor
mov
ja
add
fldcw
dec
jbe
test
js
pop
iret
and
lcall
cmpsb
icebp
pop
push
inc
imul
xor
adc
push
sti
insb
mov
inc
ret
mov
xchg
mov
push
ljmp
addr16
int
mov
push
inc
jecxz
xlat
dec
outsl
insl
sub
ss
or
in
int3
adc
mov
in
mov
pusha
mov
incb
jbe
push
es
inc
and
cmp
cmp
sub
adc
mov
or
mov
push
adc
iret
fs
pop
sbbl
data16
insl
push
popf
sub
aam
ret
loop
pop
punpckhdq
sub
mov
sarb
mov
add
cmp
xor
data16
mov
sub
in
lret
push
sub
inc
aam
pusha
mov
push
and
inc
dec
cmpsb
ret
mov
sub
pop
fdivrs
sbb
int3
outsb
in
leave
push
ret
dec
out
cld
push
adc
out
mov
cmp
dec
out
push
lcall
adc
in
pop
in
xorl
cmp
icebp
and
test
inc
imull
mov
imul
and
lret
mov
jae
enter
fsubrp
or
cltd
and
and
stc
inc
stc
mov
mov
sbbb
fcompl
outsl
inc
or
fs
or
and
xor
rcr
aaa
loope
out
loope
jle
fisttpl
or
inc
cli
xorl
push
into
stc
jl
push
incl
add
dec
ja
mov
lea
push
lahf
cmp
mov
mov
bound
adc
or
movsl
xlat
rol
add
add
popf
icebp
int
inc
xchg
insb
les
jg
push
lds
or
fmuls
nop
sub
push
jp
enter
inc
test
andb
or
mov
sub
sub
xchg
xchg
mov
push
test
fstpt
mov
cmc
xchg
out
jle
jge
fwait
jmp
arpl
int
dec
sbb
flds
mov
addr16
icebp
pop
xchg
cmpsb
cmpsb
xor
mov
pop
lods
mov
movsl
dec
data16
inc
hlt
ss
push
jle
push
shrl
fnstcw
inc
adc
adc
cmp
or
inc
enter
cltd
and
cs
ficoms
and
sub
push
jbe
inc
push
xor
xor
xchg
mov
or
jecxz
cmpsl
incb
jp,pt
aam
dec
mov
and
mov
sbb
aas
lods
jnp
mov
inc
inc
aad
sub
and
and
dec
mov
pop
in
and
xor
fnsave
clc
loopne
jb
rcrl
or
ljmp
scas
loope
xor
ljmp
jns
inc
cltd
push
lret
dec
sbb
jecxz
sub
decb
and
pop
and
pop
and
loopne
xchg
sub
rcrl
pop
jecxz
cmp
lock
add
jbe
cmp
jae
and
adc
dec
cmp
xchg
rcl
cmp
pop
mov
xlat
push
rorb
dec
rorb
push
mov
dec
mov
sbb
shll
push
in
insl
sbb
mov
add
push
inc
sbb
call
push
fnsave
mov
das
mov
mov
and
cmpsb
test
jnp
adc
inc
push
jno
xor
mov
pop
in
pop
imul
inc
out
mov
jmp
xchg
or
dec
cmp
push
arpl
rorb
sbbb
lods
fistps
xor
or
cmp
dec
daa
int
mov
xor
enter
add
sbb
xor
dec
xchg
push
jp
mov
js
repz
lahf
mov
sbb
or
push
int3
shlb
mov
inc
fxch
nop
inc
scas
bound
dec
jecxz
push
xlat
test
int3
sahf
pushf
mov
lds
xchg
cmp
out
sbb
ljmp
lea
or
push
or
dec
out
sbb
push
dec
lahf
xchg
int3
add
sbb
sbbb
das
int
pop
mov
movsb
jne
jno
sbbw
mov
daa
pop
iret
jle
mov
xor
loop
out
add
sbb
hlt
inc
inc
icebp
sahf
cli
jp
mov
ffreep
imul
mov
pop
sarl
sbb
repz
xchg
mov
cmpsb
dec
fcoms
leave
out
lock
outsb
loopne
aad
xlat
inc
inc
insl
push
dec
pop
push
repnz
mov
pop
or
int3
xchg
movsl
jns
cld
pop
cwtl
test
mov
mov
ficoms
sub
pop
jmp
pushf
pop
mov
add
mov
mov
dec
bound
xor
clc
jmp
add
adc
nop
sbb
xor
fsubl
push
and
mov
xor
jecxz
ss
icebp
subl
roll
jnp
idivl
dec
xchg
jne
mov
sub
jmp
dec
adc
adc
movsl
loop
xchg
push
test
sbb
imul
add
cs
lret
xchg
or
pop
pop
cld
sub
cmp
lahf
mov
call
adc
pop
iret
pop
roll
ljmp
pop
cwtl
les
jle
cmp
aam
mov
mov
out
add
cs
xchg
rolb
scas
int3
shrb
mov
xchg
out
cmp
std
addl
xor
mov
mov
dec
fwait
jp
mov
jns
js
cmpsl
or
negb
cmc
jmp
lds
test
into
mov
icebp
sub
cmp
push
mov
daa
or
cmp
dec
cmp
or
jecxz
or
jle
jo
mov
and
jp
xchg
imulb
xchg
or
das
repnz
aas
es
jg
jo
pop
xchg
stc
jg
sahf
inc
test
lret
mov
inc
gs
cmpb
push
mov
not
stos
out
xor
cmp
and
lods
jge
sarw
pusha
sarb
lea
pop
dec
xchg
sub
and
mov
inc
ljmp
lret
stos
jne
faddl
in
or
stc
imul
repz
dec
popf
adc
sti
xor
push
movsb
stos
add
pop
out
pop
test
insb
jne
jns
inc
mov
cs
mov
fwait
cmp
sbbb
sbb
xor
xchg
mov
test
push
mov
aaa
mov
arpl
imul
pop
cltd
ret
leave
movsl
lret
cmpsl
mov
dec
cmp
sub
or
add
js
ds
rcrl
cmpsl
stos
mov
or
rcr
sti
cmpsl
lea
xchg
xchg
stc
add
inc
and
inc
fs
cwtl
jnp
sub
jbe
insl
jbe
ja
adc
jp
jle
and
aaa
sub
cmp
dec
nop
repnz
mov
lahf
push
lahf
or
dec
push
jp
roll
and
mov
sti
daa
pop
xchg
outsl
notb
jl
es
movsl
pop
pushf
jl
xor
adc
and
mov
and
jae
cmpsb
adc
or
clc
add
dec
inc
push
inc
push
xchg
aas
cli
jae
stos
mov
xor
leave
add
stc
das
mov
fadd
xor
arpl
pop
dec
mov
lds
fucomp
add
addl
adc
insl
out
loope
push
shrl
popa
mov
adc
jl
mov
fsts
cltd
outsb
mov
fwait
pop
mov
adc
gs
xchg
mov
mov
jae
adc
int
xchg
mov
push
add
jbe
pop
stc
mov
add
mov
sbb
fistpll
cs
push
dec
cmpsl
dec
pop
sbb
in
mov
pop
nop
cmp
cmp
notl
pop
sahf
inc
push
lahf
lods
mov
pop
idivl
addr16
imul
inc
xor
xchg
pop
out
xchg
nop
xchg
fldenv
orb
xchg
mov
jo
mov
test
ficompl
fwait
mov
ret
shrl
xchg
xor
repnz
cmp
mov
mov
add
out
jecxz
das
mov
fcmovu
dec
cli
mov
pop
adc
sbb
rorl
inc
aam
sahf
xchg
mov
aam
sbb
dec
inc
xchg
rorl
stos
mov
int
push
pop
mov
insl
lcall
mov
fisubrs
xlat
push
xor
add
xor
mov
in
add
pop
dec
jecxz
in
cmpsl
cld
push
pop
ret
jge
leave
and
fnstsw
ljmp
xchg
jmp
mov
push
mov
mov
inc
cltd
xchg
or
mov
mov
imul
xor
imul
leave
push
push
or
xor
ficoml
mov
pop
xchg
push
lret
into
popf
test
out
push
dec
inc
pop
stos
adc
fwait
sbb
test
lods
cli
mov
lock
sub
and
test
xchg
push
or
lahf
hlt
negb
lods
push
fcmovne
xchg
mov
or
lds
or
mov
mov
sub
mov
push
fs
sub
rorl
and
jge
fists
sub
inc
sub
jno
cmp
pop
and
das
and
pop
rcrb
pop
jne
dec
push
fimuls
xor
lahf
mov
inc
out
sub
cmc
mov
andl
adc
xchg
fnstsw
jo
mov
xor
xorl
std
fs
lcall
or
push
decl
imulb
inc
les
sbb
pop
dec
loope
jg
and
xor
jo
loopne
pop
mov
lds
sub
cltd
popa
js
cmp
das
clc
mov
adc
addb
cmp
add
xchg
pusha
es
cmp
push
lret
int3
gs
pop
jbe
aaa
mov
inc
push
jne
stc
int3
orb
mov
pop
outsl
lcall
lahf
pop
mov
cmp
push
jmp
or
inc
or
mov
imul
rorl
or
lret
or
loop
mov
push
xlat
jb
loope
mov
push
inc
fs
jno
mov
push
lret
andl
adc
push
xchg
fucom
out
cld
icebp
mov
sub
mov
xor
stc
push
xor
icebp
bound
popf
xlat
int
or
sub
push
lods
sahf
cld
jmp
pop
sti
add
or
jge
jmp
movsb
adc
sbb
mov
das
stc
xor
sub
nop
lods
sti
mov
dec
sti
xchg
scas
inc
scas
adc
lcall
push
xor
mov
jecxz
fwait
jg
xchg
aam
sbb
inc
mov
nop
dec
push
std
test
push
int3
sub
sub
or
aad
jecxz
pop
jbe
xor
pop
xlat
out
ret
ss
pop
dec
mov
mov
push
adc
adc
mov
or
lods
repnz
pop
sub
dec
cwtl
arpl
jp
mov
int3
cltd
and
pop
adc
lods
das
or
mov
xlat
aad
bound
mov
je
loope
dec
fmul
adcb
lds
lret
decl
jae
mov
rcr
cmp
xchg
push
aad
shl
adc
adc
hlt
jecxz
jno
lahf
mov
fldt
scas
xchg
in
mov
fdivl
ficompl
pushf
push
ds
jbe
in
imul
loopne
shlb
jno
sub
mov
pusha
mov
xchg
ret
clc
daa
or
daa
jle
and
mov
movsl
ljmp
fidivs
inc
das
fwait
or
cmp
rcrb
xchg
loope
pop
negl
jae
ljmp
or
push
mov
test
dec
lret
fidivl
mov
pop
test
sbb
jl
lock
mov
leave
push
push
fsubs
test
daa
mov
popf
inc
and
dec
roll
idivb
cmp
fstp
dec
sbb
imul
jns
adc
mov
xor
adc
cmpsb
pop
fmuls
loop
stos
addb
mov
loope
jecxz
add
shl
mov
push
inc
inc
xchg
xor
fcomip
popa
or
or
test
cmp
fistpll
cmpsb
inc
shrb
movsl
adc
ds
out
mov
dec
jmp
push
subb
dec
into
add
ss
and
push
add
push
imul
push
nop
fidivrl
xor
andl
push
cmpsb
bound
mov
clc
push
or
and
mov
jnp
jns
lahf
inc
push
test
into
shl
push
mov
mov
cwtl
cmp
daa
pop
bound
xor
push
cmp
inc
sbb
pop
xchg
sti
xlat
jbe
ficoml
fs
xlat
pop
icebp
inc
repz
mov
or
adc
pusha
jge
out
sbb
ja
bound
cwtl
push
dec
mov
icebp
mov
stc
scas
mov
cwtl
das
insb
out
inc
div
xlat
or
dec
jle
imul
pop
xor
pop
fwait
dec
sbb
out
pushf
or
mov
nop
ja
push
mov
int
neg
paddsb
ret
mov
jae
push
cmp
push
inc
jp
repz
fldl
dec
mov
dec
inc
xor
loop
push
xor
imul
push
arpl
xchg
jle
in
mov
xor
shl
imul
dec
dec
jg
popa
fisttpll
leave
add
std
xlat
inc
xchg
mov
dec
rolb
add
testb
cmp
xor
cmp
out
cmp
push
mov
icebp
sbb
hlt
ffree
pop
dec
push
iret
or
leave
xchg
add
adc
imul
enter
inc
loope
enter
xchg
adc
lahf
jl
mov
ret
jbe
xor
jns
in
ror
insb
mov
cmp
and
cmp
and
pop
call
jnp
inc
inc
dec
fnsave
mov
jl
stos
xor
sbb
leave
mov
repnz
push
addr16
lds
adc
sub
fistpll
into
repnz
push
in
or
mov
sbb
ja
enter
or
ret
sub
mov
arpl
or
mov
lahf
cmp
mov
popa
nop
mov
les
jge
push
add
sub
scas
xor
push
add
int
jo
inc
pop
call
scas
and
popa
xchg
dec
mov
cld
add
mov
mov
rcrb
shlb
mov
rolb
int
testl
call
icebp
add
xor
in
mov
mov
add
cmp
ret
inc
lods
jbe
in
sar
in
ret
test
shrl
cmp
fsubs
enter
ror
stc
aad
rol
fldt
or
cwtl
repz
sbb
test
push
inc
and
ds
mov
adc
iret
mov
push
add
push
inc
inc
add
loop
mov
sbb
add
pop
xlat
popa
fldl
ja
cmp
ret
repnz
lods
xor
pop
ret
in
xchg
pop
out
inc
xor
sbb
ds
daa
push
ds
or
dec
leave
jge
push
jb
fsts
adcb
out
add
jo
into
pop
fisttps
movsl
rcrb
pop
sub
xor
cmp
int
inc
xor
inc
dec
sub
les
jno
cli
jecxz
movsl
fisttpl
push
shl
mov
cwtl
jne
mov
inc
imul
mov
mov
add
cmp
flds
sbb
in
xchg
push
cmp
dec
rol
hlt
cmp
ds
loopne
shlb
push
pop
in
pop
pop
call
fcmovu
and
movsb
int
mov
dec
jae
cli
push
adc
hlt
push
fbstp
mov
daa
rol
sub
test
inc
mov
ljmp
jbe
sarb
ficoml
fwait
test
bound
cli
mov
pop
fldl
sub
inc
je
lahf
dec
mov
sub
std
imul
pop
loop
mov
add
mov
pusha
fdivrl
nop
mov
xor
outsl
inc
mov
and
repnz
scas
fcoml
and
mov
add
jbe
mov
push
pop
gs
test
test
cmovo
gs
inc
lahf
aad
sbb
add
sub
enter
push
sbb
xchg
icebp
fadds
insl
rcl
xlat
jecxz
lods
sbb
nop
orb
fnstenv
fidivl
xor
or
nop
adc
mov
gs
icebp
xchg
mov
out
xchg
dec
dec
shll
cmc
fdivl
jbe
jb
push
jg
add
adc
repnz
es
jg
xchg
lret
sarl
ret
popf
add
xchg
mov
jno
dec
aas
adc
jmp
andl
mov
add
movsl
sbb
cmp
cmpsb
repnz
dec
aaa
xchg
and
not
jl
jmp
sbb
shrb
xchg
out
push
inc
scas
and
sahf
pop
mov
pop
push
imul
dec
mov
popf
sti
push
xchg
add
and
movsb
or
xchg
xor
mov
nop
mov
loop
shll
rcll
mov
and
add
scas
jge
testl
int3
mov
dec
ret
popf
add
ret
pop
mov
les
insb
cwtl
push
arpl
cs
mov
std
lahf
pop
fwait
push
out
cs
mov
aad
mov
adc
pop
ss
mov
pop
scas
sbb
adc
arpl
cmp
cltd
fisttps
test
pop
add
loope
and
add
and
mov
stc
hlt
movsb
pminub
fbld
mov
lret
pop
or
xor
les
xor
jns
inc
sti
into
test
fwait
pop
pop
fcoml
cmp
adc
push
aaa
repnz
cmp
or
jo
mov
mov
pop
cmpsl
call
sub
inc
outsl
cmp
inc
push
or
adc
in
jnp
pop
add
cmp
repz
aam
jecxz
dec
sti
jp
dec
loopne
mov
aad
lods
mov
sbb
xchg
mov
bnd
xor
inc
adc
add
cmp
clc
stc
cmp
and
fwait
loop
and
xor
inc
or
push
fld
xchg
ja
xor
fxch
sbb
iret
lret
dec
cmp
repz
or
fcomps
xor
and
adc
xchg
js
cmp
repz
leave
pop
add
dec
pop
out
cmp
add
mov
and
push
imul
fildll
xchg
neg
out
and
sub
fucomp
repnz
in
rorl
pop
mov
cmp
ds
mov
adc
push
loopne
lods
addb
adc
lahf
aaa
dec
mov
hlt
xchg
loopne
or
dec
jp
dec
inc
sub
rcrb
dec
scas
mov
push
sahf
or
sub
dec
dec
and
lock
xchg
xchg
out
lahf
mov
les
or
xor
xchg
mov
and
add
clc
pusha
xor
fs
leave
ja
mov
adc
jae
mov
lcall
mov
lahf
ret
test
popa
mov
inc
mov
inc
fisttps
jecxz
jge
lret
int
add
sbb
inc
test
rcrb
dec
push
gs
ret
sarl
mov
fdivs
pusha
lret
or
pop
push
inc
outsb
sbb
dec
sbb
pop
pushf
je
add
cwtl
fsubrl
daa
in
sar
or
idivl
adc
and
test
mov
lret
push
cmp
xlat
jno
decl
xchg
and
dec
es
jp
adc
stos
push
jmp
adc
test
mov
aam
push
xchg
cmp
dec
mov
in
or
inc
hlt
cmp
inc
int3
loope
test
inc
fucomi
jnp
sub
fstps
lcall
mov
ret
adc
mov
sbb
es
xor
sbb
fistpll
sarb
aaa
pop
je
cmp
adc
out
xchg
adc
dec
lods
inc
xlat
out
jbe
push
and
in
popa
dec
imul
lcall
mov
dec
cltd
lcall
push
cmp
jne
cmp
test
inc
int
popa
pop
dec
sbb
imulb
cmc
sub
adc
mov
in
fildll
jns
outsl
mul
dec
push
xor
daa
xchg
repz
stos
cmp
or
cmp
cwtl
jb
push
sbb
lcall
ljmp
ret
lock
shlb
outsl
push
cmpsb
sbb
movsb
roll
dec
jmp
pop
test
push
jp
shrb
dec
fwait
shlb
int
pop
push
xor
push
xchg
out
mov
imul
inc
cld
push
enter
push
mov
cld
cmp
mov
push
cld
repz
test
jle
fwait
mov
sahf
mov
pop
jge
cmpsb
mov
lods
movsb
or
push
dec
mov
push
push
sbbb
add
or
fldenv
jg
push
jns
push
jg
jl
push
push
out
or
and
sbb
push
out
lret
imul
push
pop
mov
xchg
repz
sbb
pop
sub
in
xor
lahf
push
cli
and
inc
pushf
adc
into
pop
stos
mov
mov
fstpt
add
fwait
adc
add
aaa
cli
cltd
push
and
sub
out
imul
cmp
fists
mov
xchg
cld
lret
add
sub
aaa
addl
dec
and
cmp
or
add
out
sub
or
pop
fsubr
lods
movsl
shrb
test
arpl
rcll
outsb
out
nop
rorb
imul
jmp
scas
inc
pop
inc
gs
xchg
mov
fdivp
fcoml
sub
or
xchg
arpl
lret
jge
das
nop
jg
mov
mov
mov
les
mov
mov
icebp
push
lret
cmpsb
add
popf
addr16
mov
les
pop
jmp
jg
inc
push
inc
gs
or
and
pop
sbb
mov
int3
cld
mov
pushf
inc
cltd
nop
ss
ror
xor
pop
scas
hlt
xlat
outsb
adc
pop
jecxz
mov
xor
push
pop
call
hlt
sub
xor
xor
or
imul
sub
adc
movsl
cmp
pusha
das
mov
orb
xor
int
cmp
imul
xor
or
aas
jmp
imul
stc
cli
popa
mov
orl
xchg
push
in
mov
cltd
add
addr16
jmp
add
aam
jmp
daa
leave
dec
sbb
pop
mov
and
enter
add
cmp
je
sti
sbbl
test
test
fs
add
xorb
lahf
add
fiaddl
outsb
and
lods
jbe
fldcw
into
cmp
push
jp
aam
mov
pop
jbe
inc
mov
or
push
je
mov
pop
cmpsb
imul
add
mov
in
add
inc
in
push
inc
sbb
pop
pop
std
jbe
jae
test
enter
adc
fldl
mov
lahf
add
or
pushf
lods
jae
sub
movsl
xacquire
mov
lret
or
dec
push
lock
fmulp
sbb
and
cltd
push
fistpll
dec
mov
xor
addr16
and
mov
je
clc
pop
movsl
pop
in
adc
mov
lds
stos
ficoms
push
mov
adcb
cmp
popa
mov
sub
ds
clc
in
popa
mov
ffreep
stc
ljmp
pop
sbb
push
xchg
arpl
sbb
stos
stc
shll
xchg
jmp
mov
sbb
test
icebp
pop
add
mov
lods
negb
mov
out
adc
push
or
jge
or
or
mov
xor
scas
push
pop
call
push
push
movsb
adcb
add
mov
push
pop
jecxz
sub
mov
cltd
lret
mov
and
es
mov
out
aas
adc
rclb
outsb
ds
cs
mov
push
cltd
nop
adc
jg
xor
jb
out
jmp
jge
out
mov
fpatan
mov
or
jge
xchg
dec
xchg
and
jmp
rcll
jmp
dec
push
rorb
inc
xchg
inc
dec
and
jl
or
fadd
rcrb
mov
pop
cmpsb
cmp
test
mov
paddsw
dec
fcomps
cltd
fadds
lods
xor
ja
add
pop
in
cli
sub
sbb
lahf
adc
and
jo
imul
push
and
aad
jmp
jp
dec
mov
cmc
cmp
nop
stos
sub
iret
push
sub
inc
arpl
pop
sarb
inc
jmp
or
das
movl
out
mov
lret
jle,pn
dec
pop
add
and
insl
nop
fisttpll
add
mov
idiv
or
imul
and
inc
add
cmpsb
scas
dec
sub
push
push
cmc
test
lock
cmc
jo
xchg
mov
jp
or
lret
push
jmp
cmp
add
xchg
dec
xor
adc
mov
lods
xor
ret
xchg
xor
sub
adcl
out
mov
add
mov
pop
inc
lret
int
gs
sbbb
dec
clc
jbe
add
in
fldln2
sbb
dec
mov
fst
mov
cmpsb
jg
xchg
shll
rclb
dec
cmp
jle
adc
fnstsw
mov
mov
jbe
and
sahf
add
bound
cli
jno
lods
xchg
ja
ret
push
mov
jl
test
imul
mov
int
repnz
or
pop
sub
and
je
in
imul
sub
cmp
inc
dec
aas
push
insb
add
mov
inc
pop
sub
sub
iret
fists
fisttps
mov
mov
lret
jo
cmpsb
pop
pusha
xor
mov
add
lods
rclb
dec
xor
incl
add
pushf
test
and
outsl
fidivrs
fisubrl
xlat
push
pushf
xchg
adc
pop
jne
xchg
lahf
hlt
bound
out
sub
add
test
mov
sub
mov
sub
and
xchg
push
mov
lods
jne
in
scas
and
cmc
jg
adc
lret
les
dec
adc
fidivs
outsb
mov
imul
hlt
or
dec
leave
scas
idivb
sbb
xchg
jmp
int
xor
int3
push
jp
xlat
or
outsl
xchg
dec
xchg
sub
movsb
fistpll
mov
pusha
add
rcr
sub
sub
adc
inc
shlb
mov
inc
sbb
loopne
cmpsb
mov
mov
out
xor
sub
in
leave
push
mov
xor
sbb
je
jge
xchg
loop
xlat
sbb
sti
lret
and
xor
mov
adc
pop
fdivl
push
lret
xchg
push
fldcw
ljmp
insb
and
shll
mov
cmp
pop
pop
mov
cmp
sbb
test
pop
lds
cmpsb
je
jns
mov
scas
repz
test
cmpsb
sub
or
sbb
jmp
rcl
xor
in
scas
out
mov
xchg
mov
fsubrp
sti
cmp
and
shll
jbe
fwait
arpl
push
or
cltd
ffreep
pop
xchg
fcoms
xor
loopne
stos
popf
push
insb
jnp
xchg
dec
xor
mov
icebp
or
fistps
push
jmp
sbb
jp
fcom
adc
mov
mov
sub
es
push
ds
rclb
movsl
jno
push
inc
add
int
sbb
aad
ds
gs
xchg
in
scas
fdivrl
cmp
sbb
roll
dec
retw
fistpl
int3
ret
pop
mov
cmp
mov
data16
rolb
cmpsl
adc
push
xchg
test
mov
loop
ror
xchg
stos
push
mov
test
mov
dec
sub
xchg
ljmp
and
dec
jge
jo
stc
test
in
sbb
clc
jo
psubsb
lea
xor
js
jae
jnp
in
js
push
cltd
inc
sbb
int3
das
sti
pop
imul
jle
sbb
and
push
lods
dec
or
inc
push
and
sbb
xor
mov
icebp
push
outsb
xorb
cmp
out
xchg
xchg
in
sbb
lret
daa
dec
sbb
xor
clc
and
dec
cmp
push
sahf
je
ret
lcall
pop
xchg
mov
mov
fildll
cli
xchg
cmp
out
inc
inc
fsubl
pop
ljmp
leave
or
pop
addr16
and
xor
lds
testl
pop
dec
xchg
mov
lds
cmpsb
repnz
and
cmc
inc
scas
addb
call
cs
fs
pop
pop
iret
stos
out
dec
imul
dec
mov
push
cmp
inc
sbb
popa
cmpsb
xchg
shrb
out
iret
repz
mov
push
mov
aas
sub
sti
jno
nop
jbe
fs
aad
jmp
mov
stc
mov
imul
or
adc
fwait
xor
push
je
rcrl
lahf
insl
stc
shll
pop
add
push
push
iret
sar
fsub
mov
sbb
mov
mov
mov
sti
push
xor
push
fisubrl
in
mov
popa
ss
dec
inc
movhps
repz
das
jmp
cmpsl
sbb
ds
inc
cld
out
xchg
pop
and
mov
gs
mov
ds
jo
mov
push
push
inc
mov
pop
adc
inc
pop
push
hlt
out
sbb
cli
cmp
cmp
push
mov
sahf
ds
or
sti
mov
out
arpl
cld
enter
cwtl
mov
stos
decl
xlat
jo,pn
or
mov
cmpsb
pop
mov
fadds
inc
or
out
lea
cltd
ss
je
std
aas
aas
mov
loope
stos
push
add
push
mov
mov
ljmp
and
adc
cmp
mov
in
adc
push
ljmp
adc
ficomps
push
rcrl
cmp
dec
jecxz
adcl
sbb
in
xchg
push
pop
mov
and
push
jbe
mov
int3
loopne
inc
lea
sbb
pop
sub
jo
mov
insb
dec
xchg
mov
xor
andb
mov
fsubrs
xor
fstps
push
mov
cld
insl
inc
repz
pusha
lods
xor
sub
and
loope
pushl
dec
fsubrs
test
popa
sti
jbe
jae
loop
out
jmp
inc
push
cltd
ljmp
mov
ret
add
mov
mov
mov
mov
jnp
jl
xor
repz
jb
pushf
mov
mov
dec
push
xchg
je
pushf
mov
sbb
cmp
clc
nop
or
add
cmp
out
test
cmpsb
js
stos
nopl
and
aaa
inc
or
into
out
mov
push
outsl
iret
push
scas
std
cli
cmpsl
imul
addr16
mov
lods
push
push
inc
ds
xchg
xor
out
popf
xor
bound
stos
jge
sub
push
fstl
adc
sub
imul
inc
inc
add
pop
gs
mov
sub
and
mov
fldt
test
dec
mov
push
jnp
or
xchg
inc
cmp
mov
adc
loop
test
bound
sbb
xor
loope
int
adc
mov
cs
shrb
push
sub
popa
orb
int3
cmp
rorb
xchg
jp
adc
inc
and
dec
dec
mov
inc
jnp
jg
arpl
mov
push
aas
adc
push
push
pop
xor
lahf
push
xchg
push
pop
jnp
mov
mov
out
lock
and
fdivs
cmp
dec
mov
xchg
sbb
movsl
mov
jmp
hlt
ds
loopne
cmp
mov
push
inc
adc
add
je
inc
les
imul
aaa
lea
xchg
pop
in
inc
push
movsb
stc
jne
sub
cmp
gs
mov
setge
jmp
leave
outsb
and
xchg
add
xchg
jns
cmp
mov
jg
outsb
popa
loope
lea
xchg
frstor
jbe
xchg
js
xchg
sub
xchg
inc
cmp
xchg
adc
mov
ficoms
mov
in
mov
lcall
je
push
subl
push
popf
and
rorl
aaa
iret
add
push
pop
loopnew
push
cmpsl
sti
andb
jne
and
add
add
pop
push
aas
push
aas
cmpsl
and
inc
lret
ljmp
and
pop
out
into
in
movsb
sub
xchg
cmp
std
je
push
shrb
sub
fmuls
sbb
sti
fadd
pop
mov
jae
aam
shrb
cmp
and
aad
ret
xorl
or
insl
adc
xor
les
mov
adc
mov
nop
mov
test
ds
leave
int3
in
or
lods
mov
inc
adc
mov
xchg
shrb
popf
into
mov
into
inc
stos
or
cltd
out
pop
and
call
rcrl
cmpsb
xchg
dec
lods
ficoml
movsl
jbe
adc
jge
aaa
sub
cli
into
cltd
repnz
ds
test
enter
mov
clc
pusha
loopne
fstl
xchg
or
or
dec
cmp
lods
movsl
fmuls
popf
xchg
sub
stc
inc
jg
loopne
outsl
les
add
cmp
xchg
enter
stc
orb
mov
lock
cmc
push
insl
and
lahf
push
ffree
lods
or
shl
cmp
pop
jp
xor
mov
das
mov
sarl
pop
orb
adc
cmp
rcl
scas
fnsave
mov
xchg
dec
test
je
jnp
aam
xchg
lds
or
mov
adc
push
icebp
push
lock
aad
ds
adc
in
sbb
fcoms
or
jge
sub
and
imul
ret
cmpxchg
add
bound
into
xor
and
sub
int
inc
mov
lods
or
movsl
cmpsl
int
ret
fdivrl
mov
pushl
leave
xor
dec
adcb
sub
popf
xchg
sbb
xchg
cmp
xlat
xchg
fsubl
pop
lock
mov
pop
insb
xor
add
bound
jbe
ja
jmp
mov
dec
icebp
xor
stc
in
popf
mov
mov
or
mov
ljmp
icebp
out
cmp
sub
push
pop
add
inc
int3
fnstsw
insb
cmp
cmp
sub
test
push
jno
sub
inc
pusha
inc
cmp
pusha
ss
loope
dec
xor
cmpsb
cli
xor
mov
push
pop
and
inc
inc
adc
lock
inc
sub
pusha
arpl
cmpsl
out
loopne
ret
je
inc
sub
sahf
jg
pop
test
repz
inc
xor
dec
ss
call
mov
nop
inc
xor
inc
xchg
leave
push
mov
inc
pop
cld
ret
enter
mov
aas
xchg
cmpsl
out
test
and
xchg
cmpsb
sub
mov
mov
add
or
enter
mov
and
dec
test
gs
shlb
or
pop
rcrb
lcall
loopne
cmc
xchg
sbb
mov
xchg
cmpb
inc
xor
jge
fcmovne
fs
test
pop
fwait
pusha
jg
sarl
iret
jnp
pushl
or
and
pop
cmp
cmp
in
sub
pop
loopne
jecxz
aaa
test
dec
pop
popf
std
mov
outsl
push
fidivl
push
sub
mov
xchg
xor
push
xchg
pop
ja
clts
test
icebp
push
xchg
insb
and
fwait
js
in
mov
dec
nop
mov
push
lret
dec
std
addr16
mov
sbb
adc
dec
lcall
insl
add
lcall
push
pop
movsb
into
hlt
jne
lret
and
xchg
mov
insb
mov
mov
repnz
adc
mov
dec
jge
mov
rorb
cmp
push
int
push
fs
cmp
xor
push
stos
mov
xor
jnp
jle
fiaddl
xchg
pop
mov
loope
movups
inc
lds
xor
loope
fadd
mov
sar
and
popa
lret
and
and
mov
enter
rclb
jmp
add
imul
and
push
and
adc
test
inc
mov
pop
push
and
and
ret
icebp
adc
cmp
mov
aaa
out
popa
mov
iret
push
xor
xchg
jl
lods
cmp
inc
adc
and
imul
mov
lcall
lods
out
or
in
sbb
jnp
addl
and
stos
ss
loop
cmpsb
mov
in
pop
iret
mov
stos
xchg
sub
push
and
xor
sub
inc
adc
push
or
faddp
xchg
adc
jb
sbb
push
mov
int3
jmp
cwtl
in
mov
stos
push
mov
mov
or
cmp
js
cmp
scas
popa
icebp
cltd
in
dec
call
rolb
test
dec
in
gs
test
push
jmp
lds
repz
jp
aam
push
pop
ja
lea
std
mov
lea
xchg
ja
mov
sub
inc
dec
dec
in
push
or
int3
mov
and
fisttpl
das
mov
cmp
pextrw
push
adc
sub
imul
mov
sahf
ss
mov
rcll
test
add
add
and
add
add
test
lea
mov
outsl
inc
out
cwtl
sbb
and
scas
mov
cmovle
mov
pop
add
cwtl
xchg
loope
jb
lret
push
inc
rdpmc
addr16
cmp
mov
mov
xchg
repnz
ffree
test
cmpsb
push
mov
loop
push
std
mov
test
or
inc
mov
stc
mov
push
rorl
cmpsl
fisttpl
lcall
aam
cmp
sbb
adc
hlt
push
xlat
cmp
test
lock
js
repnz
xchg
addr16
xlat
and
fisttpll
or
loop
lcall
divl
inc
pop
test
rolb
out
xor
push
jg
insb
add
mov
testb
push
xor
inc
js
out
loope
in
pop
mov
out
lret
jecxz
les
ljmp
shll
mov
cmpsl
clc
cmc
push
xor
adc
fcomps
rcrl
pusha
sti
inc
pop
jb
ficompl
cmp
dec
ret
cmp
mov
sub
call
stc
loope
jbe
mov
pop
daa
pop
jp
or
jno
jo
sub
pop
jl
ds
and
mov
jae
pop
push
ljmp
pop
mov
jmp
cmp
movsl
mov
in
scas
sbb
mov
mov
inc
lock
and
ljmp
xchg
call
pop
jmp
adc
ljmp
loope
inc
mov
roll
lcall
clc
stc
stc
or
and
dec
stos
push
movsb
aam
loope
loope
das
mov
add
rcll
xchg
xlat
and
mov
mov
mov
jno
xor
or
cmp
pushl
pop
cld
xor
and
ljmp
ss
mov
sahf
sub
cmp
dec
enter
cmp
mov
loope
inc
dec
push
dec
lahf
add
fmull
mov
andb
cli
cmp
or
bound
sbb
pop
adc
or
add
outsl
xchg
push
push
and
jbe
or
xor
dec
lods
sub
mov
mul
mov
pop
push
lods
add
mov
add
add
xchg
fbld
orl
pop
arpl
xchg
pop
inc
push
add
stos
in
ljmp
mov
sbb
inc
dec
mov
push
lods
je
dec
out
sbb
sarb
inc
jne
xor
sahf
inc
lahf
inc
push
xor
jl
dec
out
mov
dec
push
pop
pop
stc
nop
aaa
insl
lret
imul
adc
sbb
fldcw
sahf
cmp
leave
jecxz
pusha
int3
adc
xor
inc
outsb
aas
ret
ljmp
dec
loop
jne
cmpsb
xlat
adc
mov
cmp
cwtl
adc
push
repz
add
dec
xchg
pop
pop
push
mov
push
fs
cmp
cmp
out
das
cmp
mov
jo
push
push
js
cmp
lds
movsb
inc
mov
fimuls
cmp
push
push
insb
out
and
pop
lcall
ror
adc
mov
lods
pushf
sub
dec
jge
mov
fsubrl
push
call
sub
call
xor
gs
dec
roll
xchg
popa
inc
pop
jae
cmp
mov
rcrl
ror
and
arpl
ret
pop
pushf
inc
mov
mov
xchg
dec
xor
mov
push
cwtl
mov
out
lods
int
cs
out
stos
out
add
jne
pop
push
ret
das
imul
mov
mov
ja
popa
and
test
xchg
mov
mov
ds
scas
int
das
dec
js
in
dec
in
fwait
popa
mov
fs
mov
test
popa
push
add
mov
enter
repz
enter
xor
nop
bndldx
push
out
cmc
push
test
into
cmpsl
iret
sbb
xchg
cmp
fs
cmp
adc
cs
and
sbb
sahf
es
lcall
mov
imul
adc
add
notb
test
fsubrs
and
addr16
xchg
mov
int
aam
push
out
ret
and
fldt
imul
mov
pop
inc
inc
push
jbe
jg
push
out
pop
pop
pop
fcmovb
xchg
stos
or
addr16
sub
push
cmp
cmpl
aam
out
sub
enter
inc
mov
adc
dec
mov
in
push
inc
pop
xchg
mov
adc
pop
pop
xor
xor
jecxz
out
dec
iret
nop
lods
inc
sbb
test
pop
mov
sarb
or
shll
sar
lea
or
fisubrs
arpl
cmpsb
testl
xor
cmpsl
cmp
out
mov
cld
das
or
in
pop
outsb
add
mov
outsb
mov
xor
ss
mov
cmp
sub
fs
mov
ja
cmpsb
fistps
and
hlt
jb
cld
dec
cmp
ficomps
test
clc
inc
scas
in
add
daa
jo
cmp
or
adc
out
jmp
add
movsb
pop
fiaddl
movl
lock
pop
test
jecxz
inc
pop
pop
enter
stos
adc
dec
and
mov
dec
inc
int3
mov
jle
or
sahf
xchg
jecxz
repz
inc
fdivp
fstpt
pusha
mov
data16
lcall
jecxz
mov
xor
outsb
add
pop
dec
ljmp
jbe
dec
dec
mov
mov
out
or
cltd
jnp
stc
scas
add
mov
inc
mov
fbld
and
mov
and
pushl
clc
push
fs
mov
sub
xlat
call
cmpsb
inc
jp
jnp
and
or
rorl
and
js
fwait
in
or
xchg
ss
and
adc
xchg
xor
xor
pop
ljmp
jecxz
lret
mov
ror
fimull
adc
daa
nop
mov
mov
and
call
jmp
shll
dec
pop
lret
in
mov
ror
cmp
mov
or
je
js
ficomps
xor
jns
jmp
mov
aaa
test
and
lret
pop
push
popa
jno
inc
imul
mov
xor
add
and
lock
out
sbb
pop
rcll
jecxz
xor
push
test
xor
dec
adc
bnd
fcmovu
inc
xor
inc
sub
fsubrl
jle
imul
pop
out
insb
push
scas
jecxz
jae
mov
jg
ret
icebp
gs
and
pop
shll
sub
int3
test
jns
popa
inc
xor
inc
mov
and
push
jle
xchg
pop
sub
add
stc
sahf
push
test
fdivl
jbe
hlt
sbb
out
push
and
xchg
mov
sub
popf
aaa
cmp
int
and
or
cmp
pop
mov
lods
adc
mov
aam
cmp
xor
push
mov
rcl
xchg
mov
ds
dec
jmp
dec
sbb
pop
shrb
xor
call
xchg
faddl
sbb
fwait
xlat
sbb
xchg
add
dec
pop
imul
and
or
in
mov
cltd
shlb
jb
adc
pop
jo
jp
xor
in
imul
enter
push
cmc
add
xorb
cmpsb
pop
hlt
push
insl
mov
lods
cs
fildl
add
xchg
cld
les
movsb
stos
daa
push
dec
ss
adc
jge
loop
inc
das
popa
icebp
pop
stc
data16
bound
popa
xchg
jo
cmp
inc
pop
in
fs
xor
lock
psubb
and
ds
fidivrl
ds
ficoms
in
inc
cmp
pop
cld
mov
stos
push
cmc
enter
scas
xor
xor
es
enter
lock
jmp
jb
cmp
addr16
cmp
push
ret
adc
mov
fsubrs
adc
push
xchg
notb
jle
inc
adc
mov
sbb
std
and
jge
mov
ja
jnp
cmp
add
cmpb
push
adc
adc
bound
sbb
dec
dec
jp
pop
popf
test
xor
leave
pop
pop
inc
mov
sbb
or
inc
dec
cmp
xchg
xor
repz
lcall
lods
aam
mov
xchg
jp
mov
pop
mov
and
into
iret
jg
push
jp
orb
or
adc
in
push
push
repz
mov
sar
add
mov
jno
pop
fisubl
xchg
push
dec
lret
mov
enter
fbstp
gs
adc
mov
call
xlat
mov
stc
push
add
jnp
inc
mov
cmp
mov
movsb
push
out
push
sbb
rcr
imul
fcmovnb
mov
ss
lock
aaa
lds
iret
and
es
lea
push
push
or
hlt
or
jnp
int
jmp
in
sbb
jne
mov
outsb
mov
out
daa
lea
mov
scas
or
outsb
cmp
popa
int
or
icebp
xchg
lock
pop
cmc
mov
inc
jno
negb
pop
mov
lods
jecxz
ret
dec
test
mov
stos
xchg
or
pop
lret
sub
shlb
fwait
in
cltd
jbe
les
mov
adc
jle
test
dec
or
push
adc
xchg
inc
pop
dec
dec
test
imul
xchg
xor
push
inc
pop
popf
hlt
adc
xor
mov
dec
jne
add
movsl
add
add
jo
mov
jmp
inc
push
ficoml
xchg
es
sbb
cmpsb
or
add
or
clc
jle
popa
jecxz
inc
ret
testl
adc
aas
shl
pop
dec
shlb
fsubrs
ja
cli
movsl
xor
lods
push
mov
sbb
inc
aad
enter
cs
shl
pushf
adc
out
scas
sub
jmp
fistpll
mov
lea
sbb
aam
push
cli
icebp
push
scas
mov
xchg
leave
push
mov
push
sub
adc
lahf
push
xor
lahf
outsb
xor
in
mov
jnp
std
in
jnp
xchg
mov
sti
mov
and
adc
rclb
add
sub
xor
pop
cli
cmp
mov
cmp
or
mov
movsl
adc
ja
jnp
mov
xchg
inc
mov
clc
jne
in
cltd
stos
aam
dec
loopne
out
call
pop
andl
mov
cmc
outsl
out
outsl
flds
pop
pop
push
mov
xor
adc
mov
loope
dec
repnz
and
dec
jg
fcmovnbe
mov
xchg
lds
mov
sti
jae
aas
je
in
scas
incl
test
adc
add
addl
sarb
push
ds
into
pop
push
orl
mov
mov
mov
push
adc
cmc
jns
aad
into
negl
add
cmp
or
pop
faddp
jmp
popf
inc
mov
jl
jge
sti
mov
mov
mov
enter
cmpsl
xchg
adc
push
scas
js
imul
stos
mov
in
xor
arpl
mov
lahf
or
inc
imul
iret
pop
jge
jecxz
lret
and
lods
ret
arpl
movsl
insb
test
fsts
lods
inc
adc
sub
pop
ja
cwtl
cmp
fs
mov
ret
jge
mov
mov
shrb
cmpsl
paddw
adc
dec
push
inc
jmp
mov
test
push
std
pop
addr16
xchg
cltd
cmp
das
jne
jg
xchg
out
loop
les
mov
add
not
cs
and
xchg
cmp
xchg
xchg
das
leave
jg
xchg
andb
ja
fwait
xchg
xchg
push
rcrb
inc
shrb
sbb
inc
test
push
in
pop
repnz
or
into
mov
movsb
out
sub
add
mov
leave
jp
shl
push
cmp
pop
fwait
add
inc
jl
inc
fucomi
push
push
daa
inc
test
pop
arpl
add
int3
mov
rcrl
call
insb
add
test
cmpsb
push
cli
push
xchg
or
pop
loopne
addr16
inc
adc
nop
push
dec
jnp
fdivs
ss
sahf
sub
sbb
cmp
push
lret
sbbb
push
outsb
aaa
cmc
push
ljmp
filds
jno
mov
xchg
xor
pop
lods
cmp
push
xchg
sub
cmp
xchg
repnz
sahf
cmp
pop
adc
shl
mov
in
push
ret
cltd
cmc
jmp
or
xchg
adc
aad
pop
les
pop
or
adc
sbb
lahf
add
mov
add
mov
cmp
mov
inc
sti
mov
and
loop
test
sub
cltd
pop
clc
stc
lds
hlt
aad
in
xor
lcall
bound
or
movsb
pop
xchg
sbb
inc
or
push
aam
sub
iret
pop
movb
xchg
jns
xlat
jg
outsl
inc
push
push
jle
inc
lret
xlat
mov
leave
add
testb
les
jle
les
nop
ret
loopne
pop
lret
ror
mov
andl
push
addr16
fisubrs
dec
push
mov
mov
subl
in
repz
mov
push
lods
inc
in
push
jnp
lods
int3
dec
loopne
repnz
in
sbb
cwtl
bound
sbb
lcall
mov
xchg
into
rolb
call
popf
popa
ljmp
div
ret
jge
lods
rcl
mov
call
gs
sub
mov
in
pusha
ss
push
or
and
sahf
dec
pop
inc
cmp
lds
adc
insl
inc
sbb
or
insl
xchg
push
clc
xchg
sbb
pop
cmp
add
mov
xor
aad
sub
push
ja
jmp
mov
mov
leave
div
sub
sbb
dec
lds
push
inc
enter
insl
lahf
dec
je
cs
mov
xor
push
and
das
add
inc
pop
cld
pop
rcrb
mov
test
insl
stos
aaa
movsl
push
and
xchg
rcl
cli
sbb
adc
movsl
sub
test
sbb
in
iret
dec
and
pop
lods
pop
movsl
cmc
out
mov
imul
xchg
out
mov
clc
mov
push
sub
lahf
mov
lahf
jp
test
mov
cmpsl
and
adc
mov
in
or
mov
bound
push
aad
push
outsl
add
push
test
adc
pop
test
mov
xchg
fdiv
movsb
adc
pop
adc
aam
cs
xchg
dec
ss
cltd
pop
push
pop
and
repz
icebp
jge
cli
mov
lea
mov
pop
ret
jg
sbb
sub
jno
jle
aaa
loopne
push
pop
je
cmpsb
sbb
mov
cmp
push
aam
jo
and
mov
pop
and
js
div
sti
imul
dec
and
mov
rclb
fisubrs
shrb
inc
or
dec
pop
jnp
cwtl
ds
mov
les
gs
lret
cmpsl
rclb
fcoms
fcoml
dec
sub
int3
out
roll
lret
mov
gs
inc
addb
or
jecxz
xor
adc
xor
inc
xchg
aas
or
sti
mov
subl
mov
imul
push
fbstp
mov
lcall
mov
ds
insl
fbstp
insl
mov
pop
insb
lret
clc
lods
push
jno
xchg
daa
jp
sub
dec
lods
movsl
sbb
add
sub
xor
shr
dec
fnstenv
outsb
xor
and
mov
dec
add
sub
xlat
stos
xor
jge
test
mov
loopne
cmc
mov
fs
xchg
sbb
xchg
lds
or
lret
cmc
in
add
les
fisttpll
loop
movsb
mov
sbb
stos
ss
imul
addr16
pop
sub
mov
xchg
jmp
outsb
bound
arpl
and
jno
stos
in
pop
and
jb
pop
popf
sub
stos
fucom
mov
popa
xor
in
fcomp
imul
cld
xor
je
xlat
xchg
pop
push
pusha
addr16
inc
vpmulhuw
xchg
lock
iret
cli
push
and
inc
push
jo
adc
cmp
xchg
cli
mov
inc
andb
or
inc
fprem1
test
negb
inc
popa
jns
inc
lahf
xchg
popf
lcall
divl
sbb
mov
ljmp
add
faddp
and
mov
lcall
push
sbb
mov
lcall
out
and
xchg
subb
mov
mov
lock
cmp
sbb
js
sub
dec
jmp
pop
xlat
pop
pop
push
ss
mov
pop
inc
pop
xchg
and
mov
mov
mulb
push
out
cmp
push
push
dec
adc
or
aas
or
push
cwtl
rcrl
pop
repz
jge
jae
das
cwtl
fmuls
mov
scas
test
cmp
pop
out
push
loopne
sbb
insb
add
inc
xchg
cmp
cmpsl
aam
pop
nop
daa
add
in
adc
or
call
xchg
dec
lock
mov
jo
das
divl
mov
and
cs
jo
mov
jge
test
lret
sahf
int
adc
dec
test
sbb
cmp
push
mov
add
pushf
outsl
fistpll
fadds
cltd
mov
sub
scas
loope
dec
push
mov
fists
mov
pop
std
and
dec
push
repnz
lods
adc
hlt
aam
cmp
call
hlt
adc
jecxz
cmp
push
inc
push
loop
add
imul
add
in
mov
sti
sub
lret
scas
stos
push
or
add
push
jge
mov
mov
daa
cmc
inc
mov
xlat
and
jb
or
popf
stos
pusha
and
insl
cld
iret
lods
loopne
pop
test
jnp
push
and
test
mov
jae
lods
divl
adc
test
push
sbb
or
add
push
aas
mov
xlat
adc
jb
sub
leave
and
ss
mov
push
insl
cmpsl
test
loop
jo
pop
shrb
adc
sti
stos
or
into
dec
data16
shll
sti
mov
or
aam
daa
sbb
push
push
adc
ds
jmp
adc
pop
push
jae
sub
xor
jp
sbb
jns
mov
xor
mov
aas
pop
pop
orl
mov
push
lock
aam
enter
xlat
xchg
xor
sbb
dec
icebp
adc
bound
enter
mov
push
push
xchg
inc
xor
mov
out
enter
imul
push
sti
das
mov
lds
or
inc
pop
mov
outsl
pop
lods
add
jl
lods
mov
xor
sbb
xor
lods
rcrl
sub
mov
mov
mov
cmp
lret
xor
adc
xor
aad
andl
mov
jg
fs
xor
add
push
ret
jbe
push
scas
outsb
sbb
mov
lahf
aas
scas
dec
orl
or
xorb
je
mov
jns
inc
adc
and
ds
cmp
lea
imul
add
jg
jbe
inc
stc
enter
xchg
or
scas
loop
mul
fisttps
pop
push
push
inc
in
lock
mov
inc
mov
push
mov
push
int3
ret
pop
aam
data16
out
inc
aaa
orb
mov
int3
idivl
mov
push
or
adc
pusha
xor
lods
test
popa
and
insl
jnp
das
add
imul
push
movsl
and
mov
add
fnstsw
clc
daa
xchg
mov
push
xchg
loop
dec
idivb
or
add
cmc
in
pusha
mov
aas
aaa
jmp
pxor
adc
and
jae
ja
cmpsl
test
cltd
inc
js
xchg
or
int3
in
sbb
mov
sub
or
iret
cmpsl
pop
aas
mov
or
dec
gs
enter
lock
shll
pushf
cmc
mov
gs
add
test
out
repnz
adc
jge
sbb
stos
mov
and
sarl
loope
add
cld
mov
mov
fisttps
adc
sbb
mov
mov
hlt
pusha
mov
xlat
jg
and
cld
xchg
repnz
mov
cmp
aas
clc
add
shll
nop
xor
arpl
dec
aam
adc
dec
add
pop
or
out
sub
inc
fldenv
movsb
fcomp
int3
lods
cmp
or
mov
xor
mov
js
mov
gs
int3
int
mov
cmp
mov
or
mov
jnp
and
dec
sti
cmpsb
jecxz
out
xchg
pop
aas
rolb
mov
int3
ss
icebp
jne
bound
inc
sbb
mov
repnz
jno
lock
lods
add
adc
pop
or
insb
lods
hlt
hlt
xor
xlat
xchg
clc
popf
cli
xor
lahf
outsl
lds
mov
repz
lret
lea
test
jp
sbb
jno
mov
sub
add
ljmp
sub
jecxz
xor
and
movsl
push
push
dec
ljmp
jmp
dec
lods
test
jmp
fdivl
or
nop
int
sbb
fldt
nop
cmp
xor
or
aaa
inc
or
cmp
add
pop
in
pop
and
lahf
and
pop
xor
push
xchg
adc
repz
rorl
mov
cmpsl
scas
jnp
inc
push
dec
add
push
cmp
sarl
mov
xchg
mov
push
out
xchg
cmp
jp
dec
sbbb
iret
fdivrl
mov
out
mov
movsl
les
mov
jle
xor
cmp
jae
rolb
leave
cmp
movsl
insl
cmp
mov
mov
cmp
dec
lahf
int
and
and
sbb
pop
cs
imul
dec
adc
xchg
cmp
mov
xchg
xchg
lods
pop
decb
fisttpl
gs
add
push
and
mov
pop
push
dec
add
lcall
xchg
xchg
clc
mov
fiadds
int
jge
arpl
outsl
outsl
divb
mov
cmp
adc
mov
pop
sbb
cmp
xchg
loope
lds
jno
insb
cmp
ja
xchg
add
sbb
dec
sub
pop
inc
fs
aad
repz
into
inc
jno,pn
and
and
stc
repnz
scas
test
loop
mov
mov
mov
mov
push
insb
gs
pop
jecxz
jge
cmc
sub
in
mov
in
push
adc
xchg
dec
xor
cmp
js
inc
fidivrl
xlat
clc
push
leave
jmp
dec
xor
xor
in
jno
insb
jle
outsb
sub
das
xchg
push
add
lds
adc
es
xor
popa
enter
out
adc
clc
pop
and
inc
ljmp
out
xchg
jecxz
sbb
sub
mov
inc
mov
dec
fldl
movsl
cmp
sbb
icebp
xlat
jecxz
stos
push
ret
inc
call
cli
cmpsl
inc
outsb
pop
scas
ret
xor
dec
aas
movsb
jae
sbb
jp
cld
mull
out
xchg
rorl
outsb
lods
fcompl
and
in
and
daa
popa
mov
fildl
cmpsl
imul
in
dec
jo
dec
dec
push
stos
pop
pop
xor
cmp
ror
stos
or
out
xchg
pop
and
add
xor
mov
out
bnd
inc
inc
mov
pushf
mov
pop
cs
sub
mov
sbb
leave
add
push
or
leave
sbb
cmp
enter
add
xchg
popa
adc
jbe
in
xor
inc
nop
icebp
sti
adc
fdivrs
and
cmp
mov
call
add
mov
pop
sbb
int
lods
repnz
sub
sub
cmp
push
cmp
mov
out
cld
xor
sub
test
rcrl
and
enter
in
xchg
fists
into
xor
pop
in
dec
insl
scas
loopne
add
and
cmpsl
or
rcrl
cmc
inc
mov
hlt
xchg
loopne
addb
dec
pop
lods
dec
orl
push
out
pop
int3
fs
add
push
cwtl
xchg
add
mov
cs
jmp
inc
adcb
data16
inc
popa
pop
xchg
jne
bound
add
cmpsb
add
imul
xor
repz
xor
ficoml
or
out
inc
jo
add
enter
outsl
sub
cs
adc
out
mov
clc
or
pminsw
and
pop
leave
pushf
sub
pop
sarl
push
je
sub
sub
sub
clc
xorl
aas
jae
iret
jge
sbbl
ja
pop
push
loopne
jmp
sub
jae
jmp
ljmp
jle,pn
mov
dec
pop
lods
or
and
and
mov
andl
push
popf
je
cmp
push
sbb
lahf
cmp
pop
adc
jae
jle
loope
and
lock
jb
ljmp
pop
add
xchg
dec
cld
dec
out
hlt
ret
aas
cwtl
push
xchg
lret
adc
lret
jbe
call
pop
arpl
insb
dec
setp
jecxz
aam
lock
cs
sahf
push
aad
or
pop
xchg
and
enter
pop
add
syscall
cmc
lcall
test
and
xor
dec
sbb
lahf
outsb
mov
xor
mov
nop
push
das
aas
fisttps
enter
mov
out
mov
mov
pop
inc
int3
fldcw
stc
or
add
adc
insl
sbbl
ljmp
scas
or
addr16
fistl
push
jno
testl
aas
push
mov
lds
xchg
aas
sahf
insb
sbb
or
dec
push
sub
enter
inc
js
sub
out
xsha256
cmpsb
aam
mov
mov
stos
dec
fiaddl
push
push
sbb
jnp
jmp
and
xor
loop
pop
movsl
jmp
inc
push
clc
pop
cmpsb
inc
mov
hlt
pop
cltd
in
arpl
bndstx
cmp
mov
and
sbbb
sub
repnz
in
pushf
push
sub
jae
fldl2t
aam
lahf
repnz
jmp
mov
inc
enter
add
jle
and
in
and
pusha
inc
cmpsb
arpl
xchg
mov
jno
ljmp
xchg
lods
jbe
jbe
pop
mov
insb
cmpsl
mov
or
sbb
sub
sbb
jecxz
push
xor
xlat
sahf
shll
insb
stos
cli
jp
test
adc
sbb
popf
sub
sbb
icebp
int3
sub
das
out
push
insb
hlt
dec
mov
sub
outsb
cmp
aad
adc
mov
leave
ret
adc
scas
stos
adc
or
push
pop
test
into
sub
inc
pushf
setge
aam
pop
cli
add
outsb
mov
mov
insl
mov
imul
dec
adc
mov
sbb
sbb
xlat
test
pusha
pop
lds
imul
dec
movsb
add
inc
bndldx
xor
sub
negl
ljmp
mov
sarl
lock
call
sbb
xchg
inc
lret
sbb
xorb
push
outsl
int
into
fistps
in
es
in
jae
push
sbb
pop
movsb
xor
cmpsl
xorl
inc
out
xlat
mov
or
push
mov
aad
cmpb
adc
outsb
cmc
cwtl
aas
cmp
fwait
add
adc
pop
cs
xchg
xchg
subl
push
daa
jb
pop
mov
jmp
xchg
loopne
push
outsb
cmp
rorl
lock
nop
or
sbb
or
std
xchg
cmp
cmp
roll
dec
adc
popa
cmpsl
add
mov
push
out
fisttps
dec
arpl
sbb
add
inc
test
out
in
aaa
gs
addr16
sub
inc
push
fbld
mov
js
dec
sbb
pop
rcr
cmp
andb
icebp
jmp
les
push
push
std
sbb
test
movsb
sub
mov
mov
mov
cmp
add
xchg
adc
push
jp
bswap
sbb
push
sub
jmp
repnz
fld
cmc
out
inc
or
mov
mov
push
ficomps
inc
pop
inc
lods
cmp
popf
in
adc
sbb
dec
ljmp
cmp
inc
pop
pop
out
lret
sub
cmp
loopne
daa
cmp
or
pop
iret
dec
adc
mov
insl
lods
dec
mov
cmp
add
mov
cmc
jecxz
popf
arpl
bound
incb
ljmp
push
cli
aas
mov
push
mov
shrb
ret
push
movsb
aad
out
cld
add
lahf
dec
outsb
fisubrs
xchg
inc
fists
in
insb
and
popa
in
sarl
jne
push
inc
test
and
push
xchg
sbb
in
addb
adc
sub
adc
inc
pop
fwait
xor
jge
dec
and
mov
or
add
cmp
cltd
shrl
cmp
shll
movsb
leave
adc
xor
fwait
xchg
xchg
push
pop
outsl
ja
mov
mov
sahf
dec
lods
or
push
xchg
pop
mov
adc
in
jmp
scas
into
sub
dec
sbb
or
lret
fmuls
bound
dec
and
fidivs
add
push
sbb
insl
inc
xchg
dec
xorl
sbb
in
lea
pop
test
divb
pop
jno
xchg
and
mov
ffree
add
lods
mov
imul
xor
push
cmp
or
leave
jge
inc
cmpsl
xchg
mov
push
andnps
flds
sbb
insl
add
mov
pop
cmp
out
in
or
or
ds
jl
adc
stc
int3
xor
int
or
cmp
sub
cmp
leave
ja
lcall
jp
ds
icebp
xchg
test
in
xchg
je
pop
mov
push
xchg
lret
xor
sub
ja
movsl
jmp
dec
test
cmpsl
xor
inc
out
pop
bound
lea
ja
fbld
rcrb
aam
test
push
add
fs
xor
scas
sbb
dec
lods
sub
ss
add
or
ja
dec
push
xor
nop
roll
dec
cwtl
inc
pop
addr16
dec
mov
or
xchg
adc
push
mov
pop
pop
adc
push
mov
pop
sarb
popf
insb
ljmp
rcrb
jg
lahf
add
ja
jmp
or
adc
xchg
cwtl
out
sbb
push
push
inc
xor
or
lds
cmpl
sti
gs
lcall
and
jo
pop
mov
push
fisubl
push
out
lds
mov
daa
mov
mov
mov
movsl
jo
stos
sub
adc
test
inc
mov
fimuls
sub
xor
cltd
jns
jo
pop
sub
and
out
adc
gs
popa
dec
xchg
imul
inc
out
setge
fistpll
movsb
push
outsl
add
ret
in
mov
std
ja
mov
push
scas
clc
pop
push
mov
ret
xchg
imul
sub
cwtl
jbe
push
xchg
push
jns
hlt
sub
mov
dec
jmp
popa
lods
dec
sbb
mov
mov
jbe
test
pop
mov
es
cmp
cmpsb
stc
cmp
fwait
mov
xorb
jno
sub
test
xchg
movsb
imul
cmc
sub
js
shl
add
jne
cmp
cmpsb
pop
inc
or
pop
mov
daa
jno
or
stos
loop
mov
push
imul
lret
adc
daa
imul
fidivrs
into
insb
push
icebp
repnz
sbb
xor
es
pop
sub
inc
cmp
inc
sbb
xor
mov
add
inc
cmp
dec
and
rcrl
add
outsl
add
jge
inc
lds
imul
mov
pop
cmpsl
push
pop
pop
push
push
and
jae
pop
mov
lahf
mov
sahf
gs
repz
lret
mov
arpl
les
test
ret
jnp
cwtl
pop
or
das
pminsw
cmc
in
adc
sti
into
mov
int
mov
ss
imul
out
out
add
cmp
xor
imul
inc
or
add
andl
pop
orl
nop
pop
inc
mov
clc
pop
out
mov
lods
lods
xor
adc
addr16
aaa
cli
into
mov
fdivrs
ds
or
jle
push
jb
xchg
hlt
cmc
insl
int3
jb
mov
imul
mov
je
rorl
cmp
pop
int
test
bound
jg
sub
adc
or
xor
sbb
inc
cmp
popa
movsl
stos
movups
daa
add
aaa
sbb
lahf
mov
xchg
push
pop
into
dec
sbb
mov
out
add
fldl
xor
shrb
enter
xchg
xchg
and
push
mov
pop
adc
insl
loop
mov
sbb
inc
pop
mov
xchg
mov
call
popf
jl,pn
stc
lahf
cwtl
mov
jno
inc
ja
cmp
lret
push
xor
push
or
rcll
mov
add
jo
xchg
insb
and
jne
or
flds
mov
jecxz
sub
cmp
sbb
xor
or
pop
nop
add
mov
fistl
or
jmp
adc
popa
popa
or
mov
lods
add
push
shll
pop
dec
mov
out
out
inc
lods
push
iret
jmp
jmp
int
or
pop
clc
popf
cmp
cmpsb
std
bound
dec
lods
ljmp
inc
stos
lret
cltd
and
bound
mov
xorb
lret
and
sti
cmp
mov
icebp
dec
push
xchg
rorb
sbb
mov
das
mov
sbb
dec
pmulhuw
je
push
lcall
inc
mov
add
dec
pusha
cs
jl
or
cmp
sbb
call
mov
leave
inc
mov
ss
test
dec
inc
aad
push
push
repz
pop
lods
jae
push
cld
sarl
out
aam
repnz
aam
pop
xlat
aam
call
repz
cmp
push
decb
ret
mov
or
or
xor
jns
or
adc
or
inc
fisttpll
adc
je
int3
outsl
cmp
adc
int3
jl
and
dec
sbbb
pushf
addr16
pop
mov
sbb
jbe
stc
das
mov
icebp
cmc
test
loope
cmp
dec
mov
ds
dec
pop
mov
cmp
xchg
xchg
subb
dec
sub
mov
in
mov
or
add
inc
cs
dec
sti
call
pop
test
je
mov
push
fimuls
aad
xor
ficoms
loop
and
int
addb
xor
dec
aaa
jle
inc
je
mov
cld
mov
add
arpl
stos
adc
jo
lock
adc
int
mov
cli
fninit
sbb
int3
je
adcl
int3
or
push
sarb
jnp
and
and
test
pop
in
sarb
mov
in
or
inc
or
mov
scas
pop
xchg
nop
mov
adc
push
jnp
decl
xlat
jns
cmp
push
push
mov
jae
aam
das
cmp
add
sub
push
sub
lods
xchg
outsb
dec
xchg
clc
xchg
and
xor
mov
pop
cmp
ljmp
dec
mov
pop
push
aam
mov
push
scas
cli
add
ss
xchg
xor
push
nop
pushf
mov
aad
mov
in
jl
inc
dec
leave
cltd
sti
stos
sub
lret
mov
loopne
jecxz
iret
jge
popa
jg
cwtl
ss
insb
xchg
and
add
scas
mov
movb
xor
dec
adc
je
in
loop
and
dec
add
sub
jmp
mov
insb
fwait
xor
mov
shrl
movsl
or
jle
xor
pop
sti
cli
xchg
js
les
js
out
out
pop
sub
shl
mulb
push
out
hlt
sub
jns
mov
movsb
in
mov
mov
jae
je
pop
in
add
dec
push
mov
adc
ja
cmc
adc
loope
add
test
pop
push
and
fidivs
pop
xchg
and
mov
sub
push
cvtdq2ps
push
lret
clc
pop
xor
or
pop
push
jl
mov
mov
or
adc
popa
aad
jnp
dec
mov
xchg
push
add
push
adc
cmp
push
mov
add
xor
in
lock
les
ret
lods
add
xor
dec
mov
pop
scas
and
pop
and
lock
sbb
imul
xor
inc
sarb
jo
add
test
xchg
faddl
filds
enter
push
movsb
mov
cmp
cld
jg
inc
mov
ja
sub
popf
pop
xchg
leave
imul
push
sahf
pop
call
rcll
ss
dec
cmp
or
jnp
xor
pusha
jge
push
repnz
pop
outsl
in
add
fimull
pop
and
les
cmc
mov
jmp
scas
adc
loope,pn
scas
mov
xor
insl
inc
cmp
imul
popa
test
repz
mov
dec
movsl
mov
mov
inc
jmp
pushf
cmp
mov
scas
mov
imul
jge
rolb
addr16
clc
clc
dec
das
cld
lods
dec
xor
pop
mov
pop
and
icebp
addl
adc
jmp
dec
inc
icebp
push
mov
mov
out
or
les
sbb
incb
mov
cmp
call
test
mov
adcb
test
or
mov
std
test
test
xchg
shll
dec
iret
scas
or
pop
mov
sub
dec
mov
push
and
ds
popa
or
negl
js
adc
inc
or
xor
pop
sar
rcrl
sub
xchg
or
pop
arpl
adc
jmp
push
insl
mov
xchg
fs
cmc
mov
xchg
cmp
cwtl
scas
aas
outsl
dec
enter
sub
add
iret
inc
out
sbb
sti
scas
dec
jb
mov
scas
addb
jns
shrb
hlt
mov
push
inc
ljmp
test
lahf
mov
mov
imul
test
pushf
sub
jl
cmp
sbbl
dec
dec
or
xor
movsl
hlt
popa
in
push
push
mov
add
fdiv
test
into
testb
sub
mov
arpl
inc
cmp
cli
add
jo
int3
sub
repz
inc
popf
pop
dec
xchg
and
mov
cwtl
mov
add
pop
dec
sub
sti
jo
leave
int3
ficompl
js
mov
loope
or
jge
mov
int
dec
mov
sbb
push
fmull
jecxz
hlt
fucomip
pop
stos
lret
jno
or
testb
addr16
add
cmp
aaa
pop
ret
sub
mov
loop
rcl
lahf
pop
push
shl
loop
fldt
stc
mov
inc
les
sarl
in
sub
and
fwait
mov
xchg
xchg
sarb
test
jo
fists
jmp
xchg
stc
scas
outsb
cmpb
sbbl
mov
xchg
imul
adc
pusha
imul
jle
in
popa
lret
cmp
gs
xor
ret
cvttps2pi
pop
int3
into
cld
or
lcall
xor
adc
pushf
sbb
cmpsl
outsl
icebp
dec
push
fwait
and
test
jge
mov
inc
inc
fwait
jge
and
pop
lahf
adc
pop
inc
sbb
mov
arpl
inc
arpl
lea
mov
and
dec
rcl
stos
lock
leave
es
and
fld
xor
fdivs
sub
data16
cmp
inc
sbb
jmp
ss
clc
xor
out
sbb
stos
mov
mov
inc
jne
or
jmp
pop
les
adc
sub
mov
mov
cwtl
lcall
mov
and
daa
xchg
int3
and
cmpsl
xchg
mov
mov
arpl
inc
mull
and
popa
mov
inc
lds
fwait
push
test
sub
leave
mov
adc
inc
jge
push
xchg
inc
sub
push
mov
stos
lret
adc
or
outsl
inc
inc
cmpsl
bound
repz
inc
pusha
cmc
aas
pop
call
movsl
or
jl
loopne
lcall
loop
sub
fsubrs
rcr
pushf
jae
orb
shlb
inc
cmpsl
and
xchg
ret
jge
xchg
mov
jecxz
adc
xor
xchg
pop
push
mov
mov
cmp
sub
aas
or
daa
imul
push
insl
int
out
ret
addr16
int
std
sahf
dec
inc
jge
mov
loop
scas
sub
sbb
lds
movsb
mov
mov
and
ss
push
ljmp
push
jnp
mov
nop
add
sub
pop
mov
push
pushf
lahf
sbb
push
in
test
cmp
mov
orb
lret
sub
into
push
rcrb
mov
in
cmp
dec
int3
std
insb
into
adc
jmp
enter
push
or
xchg
pop
aam
xchg
bound
repnz
pop
movsl
out
js
add
and
pop
mov
mov
mov
lea
aas
xor
sub
sub
lahf
out
push
inc
out
push
addr16
fdivr
adc
lcall
mov
sbb
push
push
pop
lds
inc
sub
cmp
pop
push
pop
cmp
jp
sbb
adcb
in
jecxz
sarb
add
in
and
test
add
mov
int
or
clc
mov
jp
dec
pop
in
shll
stos
idiv
inc
mov
or
xor
pop
ljmp
rcll
inc
nop
cmpb
dec
mov
inc
adc
pop
push
jmp
adc
jmp
lea
dec
adc
xchg
out
fcom
or
movsl
lret
mov
dec
filds
loopne
cltd
and
pop
in
dec
mov
push
add
aas
fs
sub
inc
sbb
sbb
mov
lret
jecxz
jbe
fcomp
scas
cmp
xchg
je
jbe
inc
cmp
xor
or
mov
call
mov
mov
subl
xchg
sarb
inc
mov
into
pop
ds
rcrb
addr16
outsb
adc
dec
stos
xor
movsb
mov
fnstcw
rcr
sub
jb
cmp
movsl
das
hlt
lret
popf
loop
xchg
sub
out
insl
add
and
rol
ss
in
subl
xor
repnz
pop
or
ja
cmpsl
enter
xchg
lret
xchg
mov
cmc
das
insl
aad
ss
test
xor
int
mov
pop
add
mov
xor
or
push
pusha
aam
aad
aam
mov
mov
push
cli
and
cmp
or
adc
gs
gs
dec
insb
jle
sbb
mulpd
adc
xor
inc
jns
loopne
jbe
inc
pop
add
repz
push
sbb
jne
mov
movsb
inc
or
adc
cmp
rclb
inc
fsubrl
push
fisubs
sahf
movsl
incl
shlb
lds
std
hlt
and
and
shll
adc
adc
mov
fdivp
mov
test
lret
pushf
jge
sti
rcrl
mov
dec
adc
mov
mov
xor
sarb
outsl
add
mov
inc
es
inc
xchg
popf
call
int
jb
in
inc
dec
or
ljmp
in
stc
test
mov
jl
and
add
mov
push
addr16
or
xor
xor
lds
push
sbb
in
sub
mov
cmp
pop
jbe
adc
std
lahf
pop
or
cltd
mov
out
mov
adc
sti
bound
add
mov
cmp
iret
ret
popa
aaa
test
shrb
push
jbe
mov
or
pop
insl
inc
and
out
jp
push
das
scas
push
nop
jnp
inc
add
sbb
cs
sub
enter
pop
dec
je
loopne
outsl
adc
js
ljmp
data16
or
dec
lcall
jnp
into
dec
xchg
rclb
and
mov
or
js
outsb
push
stos
sbbb
inc
je
jo
loopne
dec
and
jecxz
xchg
jns
aam
pop
rclb
mov
add
out
repnz
popl
xchg
sub
fdivs
mov
insl
inc
and
loopne
popf
sti
jae
sbb
in
jl
xchg
mov
cmpxchg
mov
push
cmp
mov
adc
ret
mov
adc
filds
in
adc
add
lock
and
push
cmp
xorl
push
bound
sub
jge
inc
in
js
dec
mov
xor
or
out
add
add
scas
sub
enter
adc
cmp
jmp
pop
js
xor
ds
hlt
imul
pop
adc
inc
hlt
push
inc
mov
scas
pushaw
jp
loope
sbbl
sbbl
ds
adc
shll
mov
mov
mov
adcl
aam
push
pusha
jge
add
pop
jne
pushf
stc
dec
mov
sub
hlt
sub
xchg
call
lea
inc
mov
adc
popf
cmpsl
sub
jecxz
inc
rcll
mov
in
rorl
push
lods
xor
daa
roll
cmc
jne
cmpsl
xor
mov
aaa
fsubrs
mov
and
mov
push
inc
subb
stc
inc
repnz
jae
jmp
pop
gs
out
popa
add
scas
inc
stos
push
xlat
pop
outsb
and
in
push
sbb
outsl
lcall
push
pop
test
nop
fsubl
in
jl
xor
adc
arpl
sti
dec
pop
inc
insl
popf
mov
mov
push
nop
idiv
cmp
adc
sub
shlb
hlt
leave
adc
int
imul
cmp
in
pusha
cmp
mov
sbb
subb
mov
dec
inc
in
unpckhps
out
push
adc
adc
jo
lcall
xchg
fsubrl
mov
mov
cmp
dec
roll
out
xchg
daa
aad
jge
add
out
push
jno
push
jl
jmp
sub
mov
sbb
sbb
cmpsb
add
daa
movb
iret
jbe
and
mov
outsl
mov
rolb
fbstp
sub
repz
jns
mov
fnsave
jmp
xlat
pop
loop
data16
repnz
dec
adc
lds
pop
xchg
mov
ljmp
or
push
je
out
popa
js
sbb
fwait
test
int3
test
test
sbb
stos
mov
lahf
inc
psubw
shrl
jns
and
adc
ds
adc
fs
lds
in
sub
add
cmp
scas
aas
lea
mov
mov
cmpl
bound
mov
clc
int
sbb
dec
aaa
fbld
bound
testb
filds
or
and
sub
add
sbb
jne
sbb
sub
shr
test
cli
cmpb
mull
push
addr16
mov
mov
xchg
push
adc
xor
sahf
xchg
xlat
xor
inc
sbb
gs
and
dec
xlat
mov
jne
inc
movsb
jmp
mov
insl
and
out
scas
jae
sbb
add
lea
jg
mov
cld
fsubrl
clc
xchg
xor
or
addr16
test
inc
loopne
jb
mov
enter
push
out
push
aaa
fucomi
andb
cmp
inc
enter
ret
cmc
sub
xor
int3
addr16
jge
aaa
add
popf
push
push
addb
addr16
lods
lss
fs
inc
push
mov
or
or
mov
sub
insl
pop
mov
xchg
iret
inc
scas
jmp
cmp
xchg
loope
cmp
loopne
sti
pop
jns
jae
aas
nop
mov
ret
jne
mov
mov
dec
testb
nop
aas
jle
and
mov
movsb
sub
push
repz
js
lods
and
out
test
jne
or
xor
stos
push
loop
scas
push
mov
and
outsl
add
lea
inc
xchg
inc
movsl
sbb
mov
imul
idiv
sbb
pop
in
push
pop
dec
iret
cmpsb
pop
jmp
icebp
inc
imul
movsl
add
mov
mov
sub
push
sbbb
inc
jo
push
pusha
ja
fiadds
or
out
push
test
rcrl
cmpsl
icebp
test
mov
hlt
jmp
mov
enter
inc
jo
xor
cmp
push
mov
xchg
repnz
pusha
ljmp
add
add
push
bound
jo
mov
sub
cs
mov
mov
aad
fnstsw
or
xchg
nop
pop
pop
push
loopne
and
push
jnp
pop
in
mov
std
neg
in
inc
aas
pop
cmp
xor
add
loop
out
mov
les
dec
or
dec
std
test
into
pop
mull
repnz
std
dec
add
mov
js
jbe
aam
cwtl
into
dec
icebp
or
repz
inc
cwtl
pop
icebp
jns
out
jnp
mov
pop
leave
cwtl
dec
jmp
sti
test
call
cmpsl
loope
xchg
movsl
in
subb
pop
movsl
jp
loope
adc
ret
aad
fnstcw
clc
mov
xor
je
fisubrl
pop
cmp
push
dec
xor
xorl
das
hlt
loope
xchg
call
xorl
loope
mov
push
adc
cmpsb
or
call
sbb
mov
les
mov
out
inc
std
gs
popa
addb
pop
sbb
pop
dec
cmp
push
xor
loop
add
mov
dec
cwtl
dec
ret
cltd
repnz
or
cltd
and
imul
repz
lea
aas
jbe
jnp
jnp
fstl
in
ret
orl
push
rolb
add
or
sbb
dec
add
into
inc
xchg
adc
jecxz
adc
test
mov
ja
mov
mov
out
jp
fidivrl
cli
test
hlt
sbb
push
push
jmp
push
stos
aad
and
xchg
jae
aas
outsb
nop
pusha
xchg
pop
jno
enter
jl
ret
adc
pop
inc
pop
js
aaa
sub
jb
add
cltd
sbb
mov
xchg
cmp
or
stc
and
mov
xchg
shrb
inc
fcompl
push
push
lahf
ds
xor
pop
rclb
outsl
mov
add
sti
adc
xchg
cmp
les
ss
dec
in
xor
push
inc
addr16
sub
in
inc
stos
fcoml
add
mov
pop
idiv
stc
hlt
jle
mov
push
ss
xchg
imul
push
adc
lock
pop
aad
sbb
fmulp
imul
push
mov
pop
jge
into
pop
push
push
xchg
mov
sbb
pop
mov
or
in
in
dec
or
popf
or
push
jmp
push
lods
add
jg
subl
cmp
xchg
cmp
push
or
andl
push
pop
pop
sub
push
cmpsb
mov
adcl
fsubrs
mov
sbb
imul
mov
icebp
movsb
xor
mov
into
mov
mov
inc
cmp
aaa
roll
or
xor
sbb
or
shl
in
adc
mov
cmp
and
jge
andb
loop
cs
insb
lods
ret
fdivr
sub
jb
mov
in
in
pusha
lods
add
jecxz
sub
jnp
gs
mov
cltd
imul
scas
enter
hlt
fsubl
mov
pop
stos
xchg
mov
shrb
jns
scas
bound
push
add
lcall
sbb
leave
xchg
jecxz
dec
and
jl
lret
inc
inc
in
aam
mov
test
js
aaa
aam
adcb
inc
mov
add
adc
jnp
jle
pop
xor
jne
push
xor
cmpsl
hlt
add
bound
cmp
xchg
xorb
dec
out
fists
and
add
inc
imul
mov
test
jg
mov
mov
mov
loop
cmp
pop
pop
pop
cmp
pop
mov
xchg
add
cltd
pop
adc
cmp
add
fs
adc
cmp
adc
lret
jne
push
jl
mov
and
cs
adc
adcb
mov
sbb
xchg
repnz
jne
cmp
pop
stos
fs
bnd
scas
jo
mov
outsb
adc
sti
insb
in
inc
sub
lahf
adc
push
das
sysenter
xchg
pop
adc
stc
fldenv
adc
rep
adc
fcomip
jecxz
dec
cmp
lods
cmp
testl
xor
aaa
cld
daa
xchg
mov
pop
sub
test
jbe
sbb
push
shll
inc
dec
mov
adc
shrl
pushf
test
or
loope
jl,pt
inc
lds
cmpsb
data16
repnz
sub
pop
sbb
out
sbb
mov
daa
xchg
mov
int3
push
push
adc
xchg
pusha
stos
shrb
cmp
imul
adc
int3
ljmp
cli
jp
mov
jno
pop
test
out
in
mov
xchg
ret
cmp
fwait
movsl
jno
pushf
xchg
lret
cmp
cmc
cs
mov
mov
roll
jmp
push
shl
xorl
leave
in
cltd
xor
movsb
jne
aad
jge
and
rol
cmp
push
push
fwait
lcall
cmc
stc
dec
push
in
lods
loopne
mov
vpand
aam
add
push
lret
iret
ret
ds
xor
inc
aam
and
hlt
fistl
mov
jo
and
fs
les
lods
sub
adc
test
and
repz
mov
xor
rorl
lea
push
xchg
cmpsb
xor
jp
pop
cmc
les
in
and
aaa
cmp
adc
push
test
in
dec
sub
loopne
fadds
or
roll
mov
xchg
add
sahf
xlat
cs
imul
testb
call
push
pop
and
mov
sti
stos
das
mov
ffreep
mov
adc
outsb
push
cmp
in
add
stos
adc
xchg
and
dec
ror
xchg
fimuls
jecxz
out
dec
xchg
sbb
lea
nop
pushf
xchg
inc
cmp
stos
fsubrs
int
loop
push
fisttpl
sbb
addr16
mov
or
sbb
js
aas
repnz
je
xor
rcl
jg
xor
mov
outsl
xor
clc
adc
add
scas
mov
in
imul
dec
push
bound
jno
fstpt
scas
pop
push
jbe
xorl
outsl
sbb
adc
in
popf
fbld
or
jnp
fldenv
bound
insl
and
nop
scas
cmpsl
ja
mov
cmpsl
icebp
orl
lahf
pop
dec
dec
jl
adcb
inc
js
hlt
xor
lret
mov
repnz
lret
jge
fimull
mov
jl
add
movsb
pushf
sub
pop
js
idivb
and
gs
sub
and
push
sahf
mov
mov
xchg
sub
scas
jo
mov
lods
mov
pushl
xchg
bound
das
clc
sbbl
sbb
ja
out
mov
mov
loopne
jb
cmpsb
popa
popf
cld
arpl
inc
lret
shlb
outsl
mov
jg
and
out
out
sti
pop
repz
ss
sbb
pop
adc
sub
movsl
movsl
enter
or
popa
shl
or
aam
nop
es
mov
fistpll
or
in
bound
sar
xchg
sbb
scas
ja
or
and
ret
movsl
xor
es
popf
fnsave
leave
mov
dec
pop
lods
dec
fsts
std
fs
inc
adc
sbb
jp
outsl
push
pop
andl
enter
fmul
out
lcall
mov
ja
add
test
sub
xor
inc
repz
xor
cmp
leave
cmpsl
fists
and
popa
dec
jmp
cmp
pushf
inc
cs
ret
movsb
sbb
lds
sub
sub
loope
and
lea
push
sub
sbb
loop
pop
or
xor
sub
enter
xchg
icebp
sbb
je
aaa
bound
call
insl
outsb
dec
add
fwait
xchg
push
std
stos
xorl
sbb
adc
mov
insl
or
ljmp
movsb
push
dec
cmp
or
inc
push
push
push
xchg
xor
addr16
xchg
inc
sub
mov
xchg
sub
stc
testb
push
and
shll
mov
and
int3
fldcw
cmpsl
addr16
ja
cmp
pop
jbe
mov
sub
fistpll
aad
in
mov
stos
das
mov
inc
xchg
sbb
fwait
xor
push
cmpsl
mov
fsts
mov
fdivr
cmp
pop
stos
in
ja
cmp
pop
rorl
jle
pop
leave
jcxz
mov
aas
xchg
out
lahf
fidivl
std
xchg
adc
sti
insb
mov
pusha
inc
sub
fists
sbb
jmp
dec
popf
daa
dec
jmp
repnz
xchg
mov
pusha
leave
pop
fistps
mov
cmp
icebp
cmpsl
ret
hlt
dec
loope
and
cwtl
lretw
pop
xor
mov
test
es
push
mov
and
mov
lret
push
out
andb
cli
stos
inc
jns
aaa
inc
das
xchg
mov
popa
ror
jl
pop
add
xchg
ret
mov
data16
loopne
mov
mov
mov
lret
loop
or
popl
cmp
jne
popf
repnz
or
xor
notb
mov
movsl
and
imul
adc
push
arpl
pop
adc
cmp
mov
popf
xchg
adc
lea
add
xor
pop
cmp
ret
lret
daa
loope
dec
jb
jle
hlt
lcall
xor
cwtl
sbb
ljmp
sub
je
xor
jle
daa
cwtl
mov
dec
and
jmp
ret
int
sbb
cld
fistl
shl
mov
push
std
imulb
mov
lds
or
pushf
xchg
imul
sbb
test
jb
and
jae
orl
in
jecxz
inc
dec
xor
stos
stos
sub
movsb
mov
popfw
jge
icebp
inc
mov
dec
inc
mov
nop
sub
out
mov
outsb
shlb
dec
xor
ja
add
outsl
rolb
int3
into
stc
adc
cmp
int3
or
sbb
xor
or
sub
sub
es
add
dec
add
out
mov
xor
lea
fwait
rorb
test
adc
arpl
mov
mov
and
pop
jae
mov
cmp
xchg
pop
gs
daa
dec
push
sahf
loopne
movsl
inc
movsb
imul
xorb
jge
inc
sub
clc
add
pop
std
into
outsb
in
mov
stos
lret
or
cwtl
mov
test
loope
xor
test
fimull
mov
lds
push
out
adc
push
andps
test
xchg
jp
cwtl
inc
addr16
xlat
pop
rol
testb
adc
mov
xlat
fs
sbb
dec
inc
rolb
cltd
and
xlat
fs
cld
int3
sub
js
cmp
mov
sub
cmp
xchg
jecxz
out
cmp
enter
fistpl
mov
jbe
stos
mov
movb
and
lock
xor
pop
ret
adc
sub
out
cs
cmp
hlt
daa
aam
add
xchg
mov
adc
int
pop
std
and
mov
into
pop
scas
aaa
outsl
fs
or
shll
mov
mov
cmp
cld
into
cwtl
mov
insb
jl
clc
mov
stc
fnstsw
mov
jle
shrb
adc
jno
push
ret
jle
xor
mov
std
std
inc
nop
sbb
xorl
pop
lahf
neg
xchg
cmp
js
push
and
hlt
add
rcrl
add
leave
inc
sbb
fwait
and
icebp
and
dec
adc
mov
push
int3
push
flds
rcrb
dec
jbe
or
aad
iret
cmp
add
pop
mov
and
inc
fisttps
cmp
jmp
pop
mov
inc
loop
mov
pop
cltd
hlt
lock
push
xor
and
mov
enter
jno
sarb
cmp
sub
push
mov
sysret
mov
jns
sbb
and
clc
iret
cltd
add
out
lret
lock
leave
popf
fidivrl
scas
cmpsb
lea
jb
pop
and
add
lret
lsl
push
adc
cld
sbb
xchg
mov
out
dec
inc
dec
in
out
or
pop
xor
mov
sub
sub
daa
mov
mov
jecxz
icebp
lcall
lods
out
cmpsl
sti
add
mov
outsl
inc
xor
loopne
push
mov
lock
lea
fsubrl
stc
xor
add
mov
pop
inc
sub
sub
dec
sub
push
imul
pop
enter
ds
js
or
scas
in
iret
lods
pop
ss
adc
adc
fsubl
inc
mov
adc
pop
mov
lcall
ss
cltd
cmp
test
outsb
popa
and
cmp
sub
inc
fmul
xlat
adcb
sbb
pop
scas
icebp
xchg
es
push
cmpb
xchg
cmc
mov
fiaddl
mov
cmp
xor
push
js
adc
fldenv
cmpsb
mov
dec
loopne
cmpsb
jmp
jnp
mov
fists
mov
cld
daa
xlat
enter
cmp
in
xlat
jp
pusha
out
lods
pop
arpl
mov
push
fcompp
fstps
push
cltd
mov
mov
sbb
xchg
add
mov
fidivl
cmp
jo
test
idivb
push
popa
xchg
das
cmp
xchg
mov
push
adc
push
dec
push
mov
add
jb
dec
push
cmp
test
or
push
fmull
leave
or
loop
add
scas
pop
popf
lods
cwtl
fisubrs
sahf
push
shll
mov
sbb
daa
imulb
into
in
or
jbe
mov
leave
out
mov
inc
je
insb
push
scas
imul
inc
and
cmp
rcrb
sbb
fiadds
sub
pop
pop
pop
jb
fwait
ljmp
nop
pushf
mov
imulb
mov
mov
mov
lock
xor
js
add
insl
mov
sti
jg
sahf
sbb
mov
cld
ret
imul
fucom
imul
gs
xchg
cwtl
test
mov
mov
out
pop
enter
fwait
cli
sub
arpl
repz
push
cs
mov
stos
sub
push
dec
xor
arpl
iret
and
xchg
pop
dec
mov
dec
cmp
xchg
inc
push
shl
jle
int3
stos
mov
mov
clc
xchg
les
je
adc
jle
jg
xchg
dec
and
fwait
scas
into
jbe
lahf
push
jg
push
iret
mov
adc
das
fwait
or
leave
adc
or
rcll
sub
mov
mov
dec
enter
push
mov
cltd
adc
sub
push
ret
sbb
out
cli
inc
fimull
andl
in
cmp
adc
sbb
inc
loopne
cmp
rcl
dec
in
pop
sbbl
jbe
mov
cmp
dec
sarl
fldl
mov
cmc
jae
inc
xchg
or
dec
sub
jns
and
call
sub
jge
sub
xor
mov
push
dec
xor
mov
xchg
sub
dec
xor
cmp
fildl
cmpsl
and
push
push
aam
test
out
push
or
jmp
jbe
pop
outsb
pop
jmp
push
pop
repz
sub
ss
in
adc
dec
out
mov
pop
xlat
fsubl
outsb
inc
jl
jmp
dec
sti
and
stos
or
and
jno
scas
in
and
fs
mov
sub
and
mov
jge
pop
out
xor
jge
stc
popf
lea
push
popa
push
push
xchg
pop
cld
push
mov
test
pop
sbb
int3
cmp
xor
add
inc
orb
in
or
or
adc
xor
iret
daa
daa
pop
and
and
lods
insl
jae
daa
icebp
mov
test
push
adc
or
xchg
sub
adc
push
or
stos
cmp
xor
add
push
movl
push
lds
mov
arpl
mov
inc
test
or
pop
fiaddl
fdivs
sti
jle
nop
pop
mov
xchg
jns
add
mov
push
mov
fwait
cvtpi2ps
imul
vmovmskps
insb
mov
dec
and
repz
addr16
jge
pop
xlat
jae
je,pn
int
sarb
std
insb
dec
push
mov
dec
fwait
loope
inc
adc
out
dec
and
gs
clc
rclb
dec
rcrl
out
ret
nop
fisttpll
sbb
call
push
cmpsb
ds
fwait
mov
cmp
in
push
mov
mov
xor
push
adc
in
outsb
push
sub
dec
jmp
loop
cmp
insl
js
adc
gs
in
xchg
popf
sub
loop
clc
sbb
gs
inc
popa
inc
sahf
addr16
cwtl
xorl
cltd
insb
ds
nop
popa
inc
xchg
push
mov
or
mov
fldenv
add
pusha
ret
cs
ret
repnz
jns
jae
adcb
dec
pop
cld
sbb
jnp
test
push
inc
into
inc
shr
sbb
movsb
dec
stc
mov
xchg
mov
xchg
cmp
ret
int3
jl
add
lock
pop
pop
cmp
insb
mov
mov
xchg
mov
xchg
add
mov
les
das
add
sarb
push
loopne
adc
and
mov
sub
pop
sbb
xor
out
inc
and
sub
ret
xor
push
inc
out
xchg
out
fnstenv
push
pop
fnstenv
push
movsb
mov
pop
lock
cmp
int3
dec
mov
fiadds
fbstp
mov
pop
js
lret
xchg
jmp
pop
jg
lahf
add
scas
sbb
add
pop
addl
shll
mov
ja
lods
jmp
decl
mov
repnz
ja
sbb
jmp
xlat
pop
and
adc
pusha
gs
jle
adc
stc
aaa
daa
mov
or
cwtl
shrb
in
cmp
mov
mov
xchg
and
fnsave
xchg
or
loope
pop
xchg
pushl
mov
mov
jb
xor
repz
nop
shl
fimull
inc
sarl
push
test
fiadds
push
xchg
add
mov
fildll
dec
dec
mov
add
mov
inc
or
xchg
and
dec
test
cmp
outsb
aas
or
out
ss
cmp
aam
mov
add
pop
or
int
das
stc
in
stos
or
outsb
and
data16
movsb
mov
adc
pop
add
xlat
or
cmp
pop
dec
rorl
sub
inc
scas
iret
mov
stos
fdivr
cmpsl
sbb
mov
sub
xchg
fs
outsb
pop
mov
adc
jle
out
cli
aas
cmc
cmp
push
sub
mov
dec
in
fsubs
and
push
insb
cltd
pop
add
dec
scas
sub
push
sbb
push
mov
addr16
scas
filds
pop
pop
xor
fistpll
insb
xchg
hlt
inc
pop
add
adc
daa
fbld
incl
js
xor
js
push
notb
xor
stc
mov
leave
pop
bound
push
imul
sbb
lret
arpl
dec
push
ja
add
xchg
sub
or
repnz
and
lods
cs
bnd
das
xchg
in
dec
ss
cltd
ljmp
movsl
adc
push
out
mov
pop
mov
sub
cwtl
mov
jg
and
cli
sbb
hlt
jl
cmp
mov
nop
ret
add
loop
arpl
je
sbb
jbe
arpl
sub
ljmp
push
and
cmpsb
lods
xor
mov
mov
pusha
jno
std
push
jle
mov
jns
scas
and
lahf
cs
lods
imul
jg
jae
test
inc
ret
ja
in
ljmp
sub
mov
outsb
cmc
xchg
inc
ret
shrb
icebp
popa
repnz
mov
popf
int
out
pop
push
fdivp
pop
scas
xchg
xchg
movsb
xchg
shlb
test
pop
mov
stc
mov
add
cmp
fs
int
pop
sub
fstp
loop
push
adc
fs
adc
dec
call
hlt
add
add
cli
mov
jo
inc
daa
or
aas
push
repnz
lea
int
sub
lcall
jmp
mov
cmpsl
push
in
aad
pop
mov
xor
mov
divl
sti
inc
inc
pop
cld
iret
fistps
inc
test
push
and
xchg
mov
cmp
out
in
movsb
test
push
pop
xor
cmp
rolb
ficompl
push
out
mov
xchg
outsb
dec
xor
xchg
dec
push
inc
fistl
push
popf
push
xchg
push
jns
movsl
mov
xchg
push
dec
std
loopne
out
xchg
jae
mov
ret
subl
mov
shlb
test
es
and
cmp
lcall
fistpll
sti
lods
mov
or
inc
sbb
jno
mov
mov
cld
mov
adc
lds
push
cwtl
sub
or
roll
push
popf
test
pushf
andl
sbb
mov
int3
shlb
or
xchg
pop
add
loop
shr
and
mov
inc
cli
xor
push
out
xchg
pop
fistl
cwtl
addr16
and
shr
jae
add
pop
imul
gs
jo
leave
adc
nop
cwtl
sub
sbbb
mov
sbb
pushf
cwtl
dec
cmc
xchg
call
inc
xor
dec
movsl
push
pop
or
push
add
ljmp
mov
arpl
mov
rclb
jge
fistl
dec
add
pushf
enter
inc
daa
sbb
test
movsb
sub
test
pop
mov
lods
fsubrp
enter
das
mov
shrb
in
inc
call
jnp
jo
neg
add
mov
xor
popf
cmpb
bound
test
sbb
jne
or
and
jbe
ss
lea
jnp
cmpsb
ds
pushf
mov
xchg
sub
incl
mov
jmp
jle
mov
push
outsb
pop
in
sub
jg
push
lahf
scas
pop
pop
lret
repnz
cltd
pop
mov
ficomps
das
lret
rcrl
mov
aam
pop
mov
jns
xorb
int
push
mov
int
aaa
dec
adc
inc
bound
and
int
push
jb
mov
stc
push
stos
ljmp
mov
mov
xor
out
xor
sbb
rcr
pushf
add
mov
cmp
dec
mov
les
in
cmp
rcrl
std
adc
and
popa
sbb
fnsave
sar
testb
fwait
sub
push
enter
or
cmp
loop
sbb
xchg
movl
lock
jae
fld
jns
inc
pop
test
fldenv
js
outsl
data16
call
jns
push
pop
imul
jno
dec
mov
cli
push
mov
xorl
inc
mov
dec
rclb
xchg
or
or
data16
hlt
fimuls
imul
ret
int
push
push
adc
cmp
aad
push
mov
pop
jae
cmpsb
jmp
xchg
ror
jnp
ds
mov
xchg
sti
or
adc
test
std
stos
lret
mov
or
insb
xchg
imul
aam
add
ljmp
rolb
ror
mov
pop
das
cmp
aas
xchg
pop
pop
iret
pop
test
mov
in
pop
fcoms
cmpsb
and
inc
call
pop
pop
adc
and
jo
push
cmp
aaa
xor
jnp
in
mov
or
int
lcall
jmp
inc
or
xor
lods
je
dec
jb
or
and
addr16
mulb
jecxz
pop
shr
pop
movsb
test
push
adc
push
sub
cli
lcall
scas
and
lods
fwait
jno
std
in
cmpsb
lock
pop
scas
fldcw
mov
rcll
lock
test
mov
and
fldcw
in
or
lcall
inc
sub
or
es
jmp
clc
inc
lret
mov
scas
lods
es
shrl
pop
lds
lods
fisubrl
rcrb
pop
or
aad
sbb
fs
das
loopne
pop
repz
add
push
add
mov
scas
cmp
ret
dec
mov
in
ret
jmp
dec
xchg
cmp
dec
ret
mov
add
jmp
out
aas
sub
nop
inc
pop
je
xor
leave
jmp
clc
lock
jge
jae
loope
lret
cmpsb
mov
xchg
push
movsb
popa
push
int
sub
cmpsb
push
push
sub
jge
cmp
cmp
and
insb
cltd
mov
pushf
adc
shlb
icebp
mov
lret
inc
lret
adc
jnp
test
cwtl
into
push
dec
aad
loope
int
pop
xchg
jno
push
enter
jmp
popf
fnstsw
inc
or
xor
and
or
orb
nop
dec
push
mov
mov
sub
pop
out
dec
sub
pop
divb
sti
mov
push
mov
push
dec
lea
adc
ficoml
mov
or
mov
std
cmp
push
je
roll
sbb
xor
cltd
inc
jae
jp
rclb
inc
mov
mov
inc
cmp
xchg
fnstcw
push
cld
mov
xchg
in
pop
ja
fcoml
xor
mov
or
leave
or
xor
mov
lods
inc
mov
push
jge
int
adc
aam
sub
in
scas
out
fildll
ja
jns
add
dec
adcb
dec
jge
fdivrp
data16
mov
xchg
dec
jmp
sahf
lret
and
cmp
sarl
mov
rolb
outsb
enter
jne
pushf
les
int
fwait
loopne
incl
sahf
test
shll
inc
sub
inc
sbb
dec
jg
push
ret
mov
movsb
xchg
lods
adc
lods
lahf
lock
mov
test
sbb
dec
es
jmp
call
mov
sbb
xchg
fisttps
jne
sahf
lds
je
inc
xor
mov
dec
jne
push
inc
pop
fidivs
es
leave
and
notl
sub
aam
push
jns
dec
out
pop
ds
adc
or
pop
sahf
ds
mov
lret
outsl
ret
fists
or
lret
repnz
js
test
xor
jmp
das
dec
or
sbb
cwtl
icebp
or
bound
cmpsb
adc
mov
mov
adc
inc
cmpsl
push
popf
xor
fimuls
add
bswap
xchg
es
test
icebp
addr16
inc
das
stos
mov
xor
mov
insb
imul
shrl
test
pop
dec
outsl
jle
xchg
insl
cld
call
pop
int
call
repz
pusha
jne
pop
inc
mov
xchg
or
dec
fnstcw
adc
mov
adc
sbb
repnz
scas
nop
mov
sub
or
jge
mov
shl
dec
sub
sub
dec
jo
cmpsl
push
mov
loop
rol
das
js
inc
xor
sbb
repz
stos
stos
out
jmp
insb
loopne
sbb
sbb
mov
pushf
pop
xchg
cmp
push
aad
js
xlat
or
jecxz
fwait
mov
push
pop
inc
push
mov
cvtpi2ps
fsubs
fwait
push
ljmp
push
inc
cmp
xchg
cmp
imul
lret
and
enter
mov
cmp
mov
cmp
push
into
pop
add
test
fnstenv
addr16
inc
mov
fwait
imul
sbb
popa
call
popa
movl
xchg
mov
inc
mov
lahf
push
add
jbe
pop
adc
cmp
ds
shl
popf
push
lret
jge
xor
loope
subb
push
iret
jmp
inc
cmp
jle
repz
rorl
or
lcall
push
insb
xlat
cmp
dec
inc
out
ret
aam
and
adc
aas
rclb
sbb
mov
xor
out
arpl
ss
push
mov
or
hlt
cmp
shlb
test
mov
int
and
gs
lods
mov
add
repz
xor
cmpsb
test
ret
int3
xchg
pop
imull
jmp
dec
mov
out
nop
out
jne
mov
into
je
int
jno
xchg
cmc
pop
xchg
xor
pop
lcall
pop
stos
push
push
mov
jb
push
sub
fxch
inc
shrb
mov
sbb
dec
inc
or
mov
jl,pt
lea
pop
test
mov
jecxz
ljmp
push
xchg
loopew
push
pop
and
les
jle
lahf
adc
mov
shlb
add
mov
sti
dec
pop
movsb
stos
and
jl
gs
lds
in
and
das
pop
jecxz
add
or
pop
shll
out
cmp
and
pop
or
das
les
sbb
fs
pop
mov
dec
aam
adc
pop
ret
idivb
sub
rcl
mov
cmpsl
imul
push
mov
scas
sbb
call
cld
insl
adc
jmp
mov
adc
xor
xor
hlt
movsl
inc
out
xlat
inc
push
jl
adc
in
aaa
cmp
adc
lock
add
mov
or
seta
imul
test
es
jmp
jo
jmp
inc
std
inc
jp
test
xchg
push
aad
xor
test
out
and
enter
ret
mov
std
add
ljmp
aas
fwait
sbb
mov
inc
movsl
mov
sbb
jnp
dec
out
dec
out
daa
xchg
jnp
pop
int3
dec
sahf
dec
call
arpl
fdiv
sbb
and
push
hlt
xchg
mov
movsb
sub
pop
inc
xchg
xchg
test
mov
adc
mov
or
sub
inc
cwtl
push
lea
movb
outsb
mov
cmp
pushf
je
mov
imul
xchg
adc
mov
jle
imul
pop
test
mov
mov
nop
xchg
push
stc
mov
ror
jne
test
add
int
enter
jmp
mov
sbb
push
or
xchg
in
pop
add
dec
add
ss
jb
sbb
pop
into
imul
xchg
add
mov
inc
insb
subb
fdiv
and
push
push
lret
cmpsl
lret
sbb
nop
add
push
xchg
push
adc
fcoms
loopne
push
std
jl
aad
shlb
pop
out
in
xchg
xchg
testl
js
xchg
repz
jno
mov
in
xchg
xchg
iret
sbb
aaa
xor
in
dec
cmp
push
fcompl
and
sbb
bound
ss
lods
dec
cmpsb
adc
and
arpl
jle
das
icebp
nop
movsb
mov
or
mov
inc
pop
push
dec
rcrb
mov
and
adc
stc
popa
cs
pushf
inc
cmp
mov
and
jg
leave
and
xchg
arpl
sbb
les
test
popa
cltd
mov
or
loopne
xor
push
pop
lock
dec
xchg
mov
push
rorb
les
adc
clc
mov
sbb
push
mov
push
or
lcall
xor
test
pop
stos
adc
in
arpl
lret
mov
pop
push
or
adc
outsb
out
push
and
pop
xor
notb
jb
add
sar
sbb
sti
jge
adc
cmp
cmpsb
xchg
rcr
adcl
push
lea
jp
adc
sub
and
test
add
and
xor
adcl
cmp
xor
shl
cmp
mov
out
mov
jp
fcomp
enter
ret
cmp
push
and
add
jl
mov
in
jmp
xor
stos
into
fwait
inc
cmpsl
push
pop
cwtl
cmc
insb
arpl
cmp
add
sbb
lock
push
addr16
jg
mov
mov
mov
testb
imul
std
adc
and
pop
xchg
push
xor
enter
scas
mov
mov
ss
es
ss
out
test
sarl
dec
leave
jg
mov
lock
cltd
pop
cmpl
outsb
xor
lret
icebp
dec
mov
fldenv
mov
jo
aaa
dec
call
jae
or
repz
adc
xor
lock
mov
dec
inc
repnz
or
cli
aas
stos
repz
sti
inc
pushf
and
ret
and
mov
sbb
push
sbb
sbb
pop
sahf
imul
in
outsl
inc
sarl
xchg
pushf
or
iret
clc
idivl
adc
mov
add
stc
push
push
lods
xor
fwait
push
sub
pop
jle
inc
adc
clc
aas
xchg
outsl
xchg
movsb
out
movsl
mov
inc
push
fsubp
cwtl
pop
push
movsb
in
xchg
outsl
dec
sub
xchg
in
cmp
stos
cld
mov
loop
xchg
popa
mov
loopne
int
test
enter
add
sbb
dec
leave
push
sub
sub
inc
ret
jmp
das
jge
ret
fsubrs
iret
cld
mov
and
arpl
jns
test
loopne
out
jno
sbb
hlt
and
dec
rolb
and
mov
test
lret
jbe
add
or
cmp
mov
aad
add
and
rcrl
push
mov
xlat
pop
je
iret
and
xchg
cmp
xchg
push
repz
push
jb
jmp
daa
jl
loop
movsb
mov
movsb
scas
movb
inc
sub
or
push
imul
cmp
nop
cwtl
pop
repz
jae
les
push
sub
popf
dec
sub
adc
call
xchg
mov
pusha
stos
jo
out
sbb
push
add
jbe
rorb
xchg
ds
push
pop
movsb
xchg
push
test
loopne
lret
xchg
push
repnz
arpl
sub
lea
adc
inc
mov
push
ret
pop
push
push
and
loopne
not
sub
mov
in
push
push
dec
nop
mov
sbb
push
mov
flds
scas
cli
push
and
xchg
dec
jne
pop
aas
ljmp
fs
cmp
aas
pop
sahf
mov
cmc
sub
xchg
pop
in
outsb
test
sahf
cwtl
pop
lahf
adc
nop
xchg
fistpl
popf
cmp
mov
bound
repnz
dec
leave
lret
sbb
filds
cmc
jno
adc
leave
negl
aad
add
mov
test
mov
add
aas
outsl
rclb
and
xor
into
pop
inc
xchg
scas
pop
jecxz
sub
mov
mov
and
cmp
push
pop
xchg
push
fdivp
inc
xor
sahf
add
sub
outsb
and
iret
add
icebp
shll
out
mov
inc
adc
mov
or
testl
lret
fwait
mov
imul
addr16
hlt
add
adc
inc
jmp
cmpsb
scas
mov
in
jne
fstpl
fs
mov
cwtl
pop
or
dec
lods
and
test
dec
sbb
aam
jbe
push
dec
jl
int
lcall
xchg
jnp
or
push
push
test
mov
aam
lock
sbb
negb
sbb
pop
push
mov
cli
fdivp
push
movsb
movsb
mov
repz
jmp
out
or
in
inc
push
scas
call
and
enter
jbe
add
lea
pop
imull
cmp
scas
mov
mov
jge
fwait
adc
cmp
xor
mov
pop
fidivs
and
adc
fwait
and
scas
adc
mov
nop
dec
cmp
push
mov
in
inc
stos
icebp
aas
pop
dec
cvtps2pi
mov
mov
leave
mulb
sbb
dec
ficompl
aad
in
or
outsl
call
mov
jns
dec
shlb
jl
movsb
pop
push
mov
xor
mov
sarl
or
push
mov
cmp
sub
mov
mov
mov
ja
test
out
aas
int3
mov
enter
loope
mov
dec
jmp
mov
pushf
ror
pop
hlt
out
repnz
nop
xchg
punpckhwd
cltd
in
mov
ljmp
gs
push
hlt
es
adc
dec
loope
pusha
adc
mov
lds
cli
adc
dec
xchg
or
jmp
mov
mov
shlb
in
xchg
xor
cmp
push
outsb
cmp
aam
out
xchg
xchg
and
fnstcw
push
dec
jge
std
jmp
sti
shrb
test
xor
fdivr
mov
test
enter
xchg
roll
jae
xchg
loope
cvtps2pd
sahf
cli
lea
mov
in
bsr
cld
mov
pop
sbb
or
aam
push
pop
mov
cli
mov
push
xlat
loope
sbb
add
out
test
out
inc
pop
mov
call
fldl
jmp
jo
rolb
mov
inc
xchg
jmp
cli
je
push
lds
stos
xchg
mov
in
push
sub
jecxz
ja
xor
and
jmp
dec
cmp
jae
cli
sbb
adc
loope
mov
fwait
shl
sahf
rolb
sbb
cwtl
imul
push
xor
sub
and
cmp
cld
xorw
xor
movsb
adc
xchg
and
mov
inc
xchg
int
imul
lsl
inc
jl
xlat
divl
test
sub
mov
pusha
xchg
mov
jo
clc
test
bnd
repz
cmpsl
aam
dec
outsb
mov
and
aad
inc
cmp
stc
arpl
inc
xor
insl
mov
jmp
jg
jmp
lea
hlt
xor
shld
add
adc
jmp
adc
fiaddl
lea
faddp
adc
dec
nop
sahf
push
flds
push
addl
xor
pop
sbb
daa
movsl
lods
xchg
out
jns
adc
dec
nop
gs
xor
jmp
pushf
jno
outsb
pop
jne
imul
pop
inc
scas
sub
fisubs
push
push
cmc
stos
mov
out
pop
mov
push
cld
decl
add
push
xor
xchg
lods
pop
push
sub
xchg
aam
ret
mov
in
cmp
popa
jnp
lcall
push
inc
mov
popa
sub
jl
ljmp
adc
cmc
fs
pop
ret
popa
xor
xor
int3
xchg
inc
movsb
jecxz
jnp
out
rorl
aam
xchg
mov
push
xchg
xchg
sub
cwtl
mov
test
cmpsb
cmc
pop
les
incl
xchg
add
call
cmp
mov
xor
add
inc
xchg
xlat
cmp
add
mov
jb
xchg
inc
rcl
lods
mov
xchg
leave
shll
dec
insb
pop
outsb
popl
mov
and
in
adc
push
adcb
movsl
sub
and
mov
jle
rcrl
fcoml
mov
pop
cmpsb
cmp
cmp
xchg
addr16
in
pop
popf
xchg
jl
shrb
int
adc
add
xor
adc
add
enter
mov
add
cmp
lcall
jbe
out
sbb
xlat
gs
lock
sahf
out
scas
dec
cmpsl
sbb
mull
sbbl
cltd
pop
loop
xor
movsb
mov
ret
lcall
aaa
jb
and
pop
rclb
sbb
xchg
mov
push
clc
test
mov
insl
mov
aad
mull
xor
inc
push
push
jmp
xor
sub
jae
jg
inc
sbb
outsl
enter
push
data16
das
lret
fnstsw
jmp
andb
shrl
std
enter
shrb
jbe
testl
push
adc
out
xchg
xor
inc
cmc
jl
pushf
inc
pusha
stc
loope
xchg
push
xlat
ljmp
xchg
lods
aad
or
push
or
lea
sbb
jbe
cmpsl
sbb
mov
cmpsl
push
push
pop
push
cltd
adc
xchg
in
fld
ds
xor
inc
mov
add
dec
fwait
loopne
outsl
push
sbb
test
lods
stos
push
sahf
cs
xorl
scas
test
inc
jl
out
add
inc
xor
fildll
pop
xchg
aam
push
arpl
xchg
add
bound
mov
jno
outsl
mov
add
mov
adc
es
jb
aaa
out
and
fldcw
xchg
das
aam
inc
popa
lahf
test
cmp
xlat
sbb
addr16
icebp
fsubl
aam
cmpsb
mov
pop
decl
divb
pop
jnp
shlb
jbe
outsb
orl
shr
adc
pop
ret
mov
test
gs
inc
mov
out
loope
xchg
cmp
popf
negb
ss
shll
aas
in
nop
in
sbb
mov
pop
rorl
roll
out
inc
jecxz
hlt
out
sbb
in
pop
cld
inc
pop
insb
dec
xchg
push
aas
scas
mov
xchg
cs
nop
xchg
xor
sub
add
jle
push
frstor
push
xchg
aaa
lds
int
stos
lea
mov
cli
push
mov
xor
and
or
push
scas
cmp
xchg
std
mov
jge
dec
jge
jnp
shlb
ljmp
pop
inc
sarb
adc
call
psubusw
lahf
jecxz
jae
outsl
and
idivl
push
iret
sarb
jno
jge
hlt
jne
lret
jns
rcrb
cmpsl
pop
ret
xchg
add
cmp
jmp
pminub
fists
sbb
dec
xor
insl
mov
mov
xadd
or
lods
mov
rcll
scas
or
inc
mov
and
mov
add
leave
fdivrp
es
fnstenv
ds
xor
movsl
dec
addr16
in
sub
mov
aad
sbb
fwait
xchg
xchg
aad
push
pop
shlb
cld
xor
jge
test
jne
js
outsl
sbb
or
in
xchg
jbe
xchg
sub
fstpl
leave
stc
in
pop
add
js
mov
inc
bound
repz
add
pop
andl
dec
fisttpll
adc
fcompl
xchg
loopne
sbb
or
push
out
arpl
call
pop
loop
xchg
jg
iret
out
daa
mov
jne
mov
imul
das
cmpsb
cwtl
int3
loopne
mov
dec
push
adc
ss
mov
aaa
cmp
ljmp
add
jo
inc
fwait
aas
test
pop
aas
lret
push
cmp
adcb
mov
lds
jl
js
cltd
out
fiadds
js
or
push
pop
daa
test
xchg
hlt
sub
sbbl
dec
xchg
or
inc
lds
xchg
pop
mov
push
fdivrl
sbb
inc
daa
loopne
add
faddl
jns
das
icebp
mov
jmp
mov
mov
mov
inc
fwait
mov
jmp
jecxz
in
mov
mov
test
popf
inc
sub
shlb
shll
out
mov
dec
int
std
dec
fcomps
test
in
mov
fmulp
es
adc
mov
mov
mov
out
dec
add
mov
cli
in
jns
mov
call
jmp
mov
or
outsb
pop
cli
sti
test
imul
or
pop
je
cmpb
jg
inc
mov
xor
xchg
or
sub
and
lods
jmp
jnp
push
inc
pop
cli
mov
es
cmpsb
insb
cmp
testb
int
mov
je
pop
sbb
lret
push
mov
pop
xor
lds
addr16
inc
cwtl
xchg
in
jl
loope
mov
sti
adc
inc
lret
imul
fsts
mov
jmp
sbb
in
clc
sbb
xor
dec
fwait
call
in
scas
push
movb
scas
jb
push
leave
pop
ss
sarl
in
cmpsl
cmpsl
inc
cs
incb
inc
call
push
pop
xchg
lret
pop
in
or
sub
mov
jbe
je
jl
in
sub
out
call
sub
xchg
sbb
mov
aaa
int
xchg
clc
lds
jnp
testb
mov
test
fcmovnbe
dec
xchg
out
mov
sbb
insl
iret
int
mov
pop
into
cltd
pop
mov
int
xchg
jbe
data16
loopne
ret
pusha
sub
jp
cmp
jg
js
fcoms
scas
xchg
inc
rclb
incb
gs
and
adc
mov
push
cmp
cwtl
pop
sbb
cmp
popf
mov
dec
sarl
push
lods
mov
dec
es
loop
and
pop
pop
test
xorb
in
jg
loopne
sbb
dec
mov
or
repz
out
mov
pop
mov
jp
pop
jbe
rcll
dec
mov
test
pop
sbb
mov
mov
leave
fcomp
lods
leave
loopne
pop
lahf
sahf
xchg
sarb
add
imul
dec
int
sbb
xchg
xor
and
jbe
or
xchg
movsb
popf
mov
addr16
xor
fsubrs
in
ret
test
test
or
cmp
pop
fidivrs
test
outsl
sub
mov
adc
or
pop
mov
addr16
push
test
xor
lods
ficoml
push
sbb
stos
cmp
out
ljmp
cmp
inc
cmp
daa
loope
clc
insl
pop
or
stc
fdivs
xchg
aas
shr
xor
loop
iret
xor
push
fsubs
xchg
sbb
in
inc
enter
lret
das
jle
and
ja
insb
fwait
push
adc
mov
ljmp
testl
push
aas
cmpsl
pop
add
mov
sarl
iret
jle
push
xlat
cmp
jge
mov
pusha
sbb
mov
sbb
mov
call
dec
sti
in
repz
pusha
or
sub
inc
cltd
sub
ljmp
mov
add
stos
out
push
addr16
incb
mov
xor
cmovge
stos
scas
cltd
es
or
sub
daa
insl
pop
aaa
sub
mov
or
jns
xchg
push
in
sub
push
xchg
dec
add
popf
sbb
and
cmp
sub
sbb
jbe
push
rorb
adc
test
or
sbb
lea
ds
clc
fidivrs
pusha
inc
sbb
cmp
rcr
js
xchg
ds
ja
push
jne
xor
ja
mov
testl
mov
ds
iret
stc
pop
sub
pop
mov
mul
push
js
dec
dec
fsubs
aad
call
shlb
push
or
mov
push
push
dec
sub
clc
mov
cltd
xor
pop
inc
or
inc
lahf
mov
or
sub
add
fbstp
push
addl
mov
push
rcrb
lcall
xchg
jecxz
fwait
popf
aas
test
xlat
dec
push
mov
adc
jg
xor
mov
dec
lret
sbb
push
rorl
arpl
jle
shrb
mov
push
mov
inc
mov
int
jae
popf
push
jne
fbstp
in
sub
jo
jbe
fs
sbb
das
es
stc
mov
inc
mov
pop
jl
sbb
pop
add
fnsave
cmp
push
mov
xor
imul
jbe
pusha
cli
pop
dec
imul
push
sti
out
mov
iret
enter
and
xor
testb
xor
hlt
pop
lods
jns
adc
scas
or
mov
inc
mov
lods
mov
dec
cmp
mov
pushf
fwait
jle
test
jp
jg
scas
mov
push
add
mov
sbbl
movsb
nop
xorb
stos
imul
aam
in
enter
fisubs
ficoml
nop
sbb
push
sub
push
stc
imulb
mov
ret
or
mov
cmp
loopne
andl
enter
rclb
inc
fmull
mov
dec
and
inc
xor
xorb
into
insb
gs
or
loopne
divb
mov
add
stos
dec
add
mov
mov
dec
xor
dec
pop
cmp
jnp
xchg
rcl
sub
push
mov
dec
push
xor
dec
lds
aad
pusha
filds
mov
iret
push
xlat
mov
mov
inc
out
out
sub
inc
orb
xor
mov
out
das
push
inc
sbb
or
inc
or
mov
sub
outsb
mov
cli
and
or
or
fisttps
call
jo
jns
and
lea
xchg
ret
es
sub
xor
sub
add
lret
xchg
rol
pop
daa
sti
mov
xor
pop
xchg
mov
cli
xor
addb
pushf
stc
or
enter
sbb
cli
and
and
das
mov
cmp
mov
xor
in
out
mov
pusha
rcrl
cli
hlt
cmp
bound
cmp
push
mov
mov
sahf
mov
dec
mov
inc
jp
mov
and
lret
movsb
insl
pop
int3
pop
jno
push
mov
lock
pop
adc
jp
data16
mov
push
pop
aad
andl
xchg
int
push
imul
xchg
popa
mov
int3
in
mov
popa
mov
mov
mov
clc
push
adcb
sti
icebp
out
pop
pop
pop
cmpb
mov
xor
xor
inc
push
push
xor
mov
push
stc
fs
pop
popa
mov
xor
fimuls
arpl
fiaddl
sahf
mov
pop
jp
jb
je
repz
xor
add
push
xchg
movsl
mov
loope
sbb
addb
shlb
sbb
xchg
fnstcw
pusha
std
nop
jl
xor
and
sbb
pop
push
inc
ja
cmpsl
mov
xor
gs
adc
dec
ds
cs
sub
mov
insb
mov
jp
mov
pop
daa
leave
andl
mov
sub
sub
pop
adc
inc
sar
push
mov
stos
aad
xchg
push
imull
lcall
mov
sti
bound
fcompl
lods
mov
inc
fdivrl
xchg
xchg
inc
and
loop
sub
and
mov
ja
add
xlat
les
fnstsw
mov
sar
push
mov
cwtl
mov
jnp
int3
dec
cltd
adc
gs
cmpsl
dec
test
call
push
clc
inc
add
test
push
lods
test
xchg
pop
call
adc
push
push
sahf
mov
fmuls
jbe
dec
into
push
mov
cwtl
mov
imul
pushf
push
insb
cli
icebp
sub
sub
imul
and
les
pop
fcomi
and
fsubs
loope
les
rorb
shll
int
arpl
push
xchg
pop
ja
in
cltd
sbb
hlt
mov
pop
movsl
lea
cwtl
and
cmc
or
sbb
or
mov
pop
or
stos
push
mov
jo
popa
outsb
mov
or
mov
pushf
mov
sbb
test
in
aas
ficoml
sbb
dec
std
leave
cli
mov
shrb
jge
sub
push
mov
cmp
sbb
mov
movsl
stos
xchg
pop
iret
aaa
xchg
fst
cmp
shrl
and
pusha
lahf
das
adc
fwait
pop
lds
mov
push
stc
or
pop
xchg
pop
push
arpl
xor
jmp
mov
int
int
pop
pop
mov
testb
shlb
inc
out
cmpsl
push
cmp
jo
jne
out
stc
in
outsl
aas
xor
aad
divb
dec
inc
aad
mov
mov
test
nop
lcall
andl
sub
fstpl
iret
fwait
cmp
xor
add
adc
sub
and
push
cmp
cld
nop
std
testb
scas
mov
dec
fstps
int3
in
gs
cmpsl
mov
jge
cltd
das
pop
sarl
push
bound
and
sti
sbb
sub
jp
imull
push
iret
jns
dec
add
loope
imul
mov
in
shrl
iret
sbb
inc
lret
enter
xchg
sub
xchg
jb
das
incl
test
fsubp
ficomps
mov
enter
mov
ds
fnstsw
jle
cmp
or
dec
jp
xchg
and
test
mov
xor
jmp
out
frstor
xor
daa
stos
mov
dec
das
dec
push
inc
jl
loop
fdivrl
lret
ficoms
idivb
cs
scas
adc
daa
divb
or
mov
cmp
cwtl
sub
jo
mov
into
or
xchg
cwtl
aam
mov
test
inc
in
loope
in
int
pushf
pushf
mov
add
xchg
lea
add
push
lret
inc
inc
cltd
push
mov
push
mov
fwait
or
lahf
decl
or
aad
stc
imul
mov
aam
nop
xorb
adc
fistps
push
adc
dec
push
cmp
mov
nop
or
jl
add
aam
cld
mov
cmp
dec
js
or
fwait
pop
dec
repnz
es
inc
jp
out
dec
mov
test
push
adc
mov
mov
and
add
in
push
and
lret
lret
push
dec
mov
adc
ficoml
rorb
dec
or
test
shrb
mov
rcll
push
lock
into
fdivs
jno
ret
adc
and
test
sub
xchg
pop
push
fdivl
cmp
out
int
push
sbb
lret
adc
pop
and
ret
mov
mov
fstl
pop
bound
mov
mov
lods
cmp
pop
jmp
push
lret
or
mov
adc
pop
xchg
popa
mov
movsl
xchg
mov
xchg
je
cmpsb
xchg
cld
sub
add
fwait
and
int3
pop
notb
mov
adc
pop
shl
fldenv
lds
jmp
adc
inc
loope
mov
pop
call
outsl
mov
inc
push
sbb
out
mov
lcall
mov
jecxz
icebp
inc
out
add
cltd
in
outsl
aam
fadd
add
xor
xchg
cmpl
int3
sub
call
mov
or
pmaddwd
jmp
orl
cli
lods
add
mov
sub
jb
pop
loopne
dec
add
sarb
outsl
ds
xchg
cltd
or
sub
imul
movsl
stos
or
lret
xor
adc
out
push
cmp
and
ljmp
sbb
xchg
jg
add
inc
mov
or
or
mov
push
pop
adc
lea
sub
dec
fs
jb
xchg
sbbl
cmpsl
ds
dec
daa
sub
push
lock
popa
pop
jno
loopne
dec
insl
lea
in
and
subl
fs
pop
ret
sar
pop
outsl
or
gs
sub
cmp
movsl
xchg
push
sbb
and
das
imul
adc
sbb
cmp
aad
clc
imul
add
into
sar
sbb
mov
xchg
int
jl
pop
cli
shll
in
fwait
mov
bound
out
clc
frstor
arpl
dec
aas
xchg
cs
pop
cltd
mov
jecxz,pt
rolb
jne
mov
fnstenv
sbb
sbb
out
std
or
inc
and
ret
dec
mov
mov
mov
and
cmp
fmul
add
sbb
sbb
add
cmpsl
jl
mov
testl
arpl
xchg
push
xor
and
dec
repz
adc
mov
inc
mov
subl
mov
call
ds
insl
mov
fldenv
adc
dec
sub
lcall
push
adc
jbe
in
pop
test
xor
out
cmp
scas
sbb
dec
sbb
adc
mov
test
insl
dec
das
dec
stos
ja
jnp
or
rcr
divb
stc
dec
push
cmpsl
rorl
fistpll
xchg
rorl
and
fwait
dec
adc
xchg
pushf
and
fstpt
leave
jge
out
add
std
adc
inc
and
js
lods
jbe
bound
sub
outsb
in
fisttps
out
mulb
cwtl
rcrb
mov
ret
icebp
push
sahf
insb
int
inc
push
ret
insl
push
ret
enter
mov
xchg
jle
mov
test
cmp
in
or
jne
xchg
xchg
gs
fs
push
out
lock
mov
xor
adc
jnp
adc
pop
xor
movsl
inc
vmwrite
add
rcll
fnstsw
dec
les
jae
add
pop
pop
or
popa
movsl
mov
push
pusha
fisttpll
rcll
fcmovbe
addr16
jg
js
out
add
jno
rcrb
movsl
xlat
loopne
loope
lcall
sbb
jae
ljmp
lods
js
setbe
ret
push
mov
stc
je
inc
enter
cld
sub
test
in
xchg
fdecstp
cmpsl
into
inc
jno
mov
and
mov
push
mov
mov
adc
and
xchg
sti
insb
add
mov
sbb
fistpl
or
ret
cltd
lcall
scas
sub
xchg
dec
adc
ret
push
negl
sbb
adcb
js
fdivs
pop
test
push
pop
test
lfs
test
inc
push
aad
push
fbstp
ror
push
cmpsb
or
loopne
and
add
mov
std
mov
sti
jbe
dec
fsubs
mov
fisubrl
push
sbb
mov
clc
sbb
pusha
clc
mov
and
loop
xchg
sub
and
adc
pusha
subl
xchg
mov
xor
test
sbb
pop
jbe
jno
lret
mov
shll
outsb
test
xchg
mov
insl
dec
adc
filds
out
pop
mov
mov
push
mov
jp
push
andl
sub
xchg
outsb
mov
dec
rcll
test
andl
adc
inc
mov
sub
push
mov
popa
repz
pop
outsb
jge
lret
sub
je
mov
pop
mov
das
jb
dec
clc
lds
int3
out
fwait
jb
or
mov
cmc
movsb
fstl
mov
iret
not
xchg
jbe
ret
imul
fwait
xor
inc
push
pop
fstpl
jmp
add
jmp
ds
cmp
lret
xor
in
ret
int3
lods
scas
dec
mov
sbb
lahf
push
cmp
mov
and
adc
clc
xor
popa
cwtl
clc
nop
sbb
mov
cmpsb
jecxz
call
leave
pop
push
mov
inc
into
add
xchg
mov
cmpb
push
mov
mov
xor
pop
int3
imul
into
dec
aad
mov
cltd
fwait
jo
xorb
jge
ja
orl
xchg
les
iret
adc
dec
pop
std
fcoms
repz
test
ret
ret
mov
jnp
jge
xchg
imul
movsl
xor
mov
mov
dec
sub
and
or
and
stos
repnz
movsb
lock
sbb
xchg
and
jle
jp
lds
mov
aaa
and
repz
mov
mov
cs
vmread
movsl
xchg
cmpl
pop
cld
sbb
iret
inc
daa
mov
mov
jno
lcall
out
xlat
mov
push
cmp
sub
fdivr
movsb
pop
jnp
inc
xor
ret
arpl
repnz
addr16
pop
pop
std
push
repnz
xlat
mov
and
add
push
imul
iret
push
addr16
xchg
test
cmp
mov
add
in
sbb
pop
pop
iret
aas
fs
in
cld
inc
ret
stc
and
add
sbb
pop
sub
mov
jb
add
jb
mov
and
push
push
mov
ss
cmpsb
mulb
jg
xchg
das
imul
stc
mov
mov
add
and
outsb
xchg
test
es
jge
xchg
mov
inc
pop
lods
lcall
in
cmpsb
inc
add
dec
pop
test
mov
rcl
jl
ffree
lods
xchg
cmp
sahf
pop
sub
cli
aad
inc
outsb
loopne
jecxz
push
sub
scas
dec
rcrb
lea
lahf
ror
leave
scas
ret
scas
jb
daa
jle
loop
rol
ret
push
test
rcrb
mov
imul
cmp
cmp
fsubrs
sbb
fcompl
loope
jle
pop
jg
mov
push
test
jnp
cld
sarb
inc
stos
daa
pusha
loope
or
outsl
xchg
jl
mov
out
orb
pop
loop
sbb
out
out
mov
arpl
pop
test
dec
fldt
jne,pn
xor
aaa
dec
sbb
jne
or
push
sbb
dec
fwait
lcall
push
out
fistpl
stc
movsl
push
nop
repnz
or
fisubs
dec
cltd
mov
test
nop
sbb
jmp
jle
insl
push
js
pop
lahf
push
outsl
call
mull
je
sub
inc
fmulp
cli
add
cmpxchg
sub
adc
lods
add
lods
cmp
shll
faddl
nop
lock
jmp
jae
hlt
push
sub
jge
shlb
push
adc
push
int3
aas
sub
sbb
sti
xchg
inc
inc
gs
adc
pop
dec
lds
loope
xchg
mov
push
leave
dec
das
inc
jmp
cltd
stos
jle
push
rorl
jno
mov
push
pop
out
dec
jg
cld
stc
ss
add
ja
aaa
in
nop
sub
dec
push
sbb
call
shlb
nop
in
cmp
pusha
mov
adc
push
xor
inc
jbe
cli
sti
pop
lcall
push
push
cmp
push
loopne
mov
pop
cmp
push
and
lds
or
out
mov
cmp
sub
jbe
insb
xorb
cltd
ds
sbb
orb
imul
mov
jle
aas
xchg
or
fwait
out
mov
lret
adc
in
ret
cwtl
js
fs
mov
or
sbb
fmulp
sub
add
test
jns
push
icebp
lret
iret
fisttps
outsl
cmpsl
out
cvtps2pd
adc
mov
dec
frstor
or
daa
sub
xor
in
mov
divl
pop
cld
aas
xchg
push
popf
mov
xor
mov
mov
iret
push
lret
mov
inc
jg
arpl
fucompp
int
add
fcmovu
dec
cmp
push
lahf
shll
lock
inc
scas
mov
cltd
xchg
inc
cmp
fldt
mov
jmp
or
or
mov
mov
jecxz
loope
nop
ficoms
cmp
ror
loop
fwait
outsl
fisttps
jae
mov
es
xlat
aam
imul
or
jg
iret
mov
jo
movsb
mov
mov
stos
adc
pop
sbb
cmpsl
mov
es
clc
shl
mov
jg
mov
pop
mov
mov
cmp
sbb
ljmp
jnp
lods
sbbb
adc
repz
into
stc
and
ds
xchg
sarb
lret
dec
into
in
push
push
jns
out
cltd
cmpsb
push
cmp
lock
jg
xor
je
mov
adc
int3
pop
ljmp
sarb
sbb
xor
lock
aaa
mov
scas
and
js
jbe
pop
sti
jl
jb
push
xchg
adc
dec
out
pop
nop
pusha
loop
scas
sub
int
fdivs
int3
pop
clc
jmp
arpl
loope
mov
dec
lcall
repz
inc
adc
cli
pop
cs
lret
mov
test
lods
movsl
jl
test
lahf
add
sub
stc
inc
push
pop
mov
test
push
fistps
push
and
pop
stc
jbe
mov
sub
adc
or
fdivl
cmp
xchg
xchg
lret
iret
sub
imul
loope
imul
andl
scas
nop
orl
xchg
xor
jge
out
sbb
int
sub
pusha
test
loop
xchg
in
imulb
cmp
push
int3
je
call
pop
push
jle
mov
loopne
iret
cmp
adc
push
cmc
mov
and
hlt
xor
insb
mov
lock
push
sbb
lods
or
daa
andl
enter
stos
mov
into
test
lea
push
sar
stos
and
fs
out
mov
pop
jp
stos
dec
push
and
ljmp
out
pusha
jbe
inc
xchg
mov
mov
xor
mov
xchg
js
or
sub
pushf
adc
inc
lods
add
add
pmovmskb
scas
ret
js
pop
fs
lds
ss
push
pop
call
icebp
sahf
lahf
nop
jne
aas
push
xorb
xor
stos
sbb
push
test
les
xchg
add
in
mov
fists
mov
rcrl
jae
mov
jnp
jne
faddl
fsubrp
add
and
pop
hlt
jno
imul
mov
add
xor
gs
daa
sahf
push
inc
mov
imul
repnz
dec
fisubrs
push
pop
sub
addr16
pushf
mov
frstor
popf
xor
jp
sbb
push
push
popf
adcb
scas
jae
add
inc
rcll
adc
ret
inc
xchg
mov
jnp
repz
or
clc
jno
mov
out
jne
enter
push
xor
dec
cmp
cmc
add
clc
sub
mov
negl
add
loope
aaa
dec
push
test
pop
outsl
push
out
orl
xor
js
js
pop
xchg
mov
cmp
repnz
dec
repnz
xchg
lock
flds
ffreep
jp
push
push
xchg
sub
add
testb
in
sahf
das
scas
ja
movsl
cltd
inc
lods
bound
cmp
and
fs
push
repnz
xor
sbb
scas
jo
rcrl
mov
ss
xor
jbe
mov
jns
cld
sub
out
clts
sahf
cltd
push
or
xchg
or
pop
repnz
dec
int3
mov
test
popf
xchg
icebp
mov
aas
or
pusha
rolb
test
lods
jno
xor
or
add
loopne
lret
les
out
or
test
inc
movsb
popa
addr16
mov
out
jp
xchg
sbb
fsubl
iret
pop
rolb
fisubrs
lods
mov
ficompl
jnp
xchg
sbb
frstor
cmp
cmp
mov
lea
push
ja
cmpsb
add
push
and
xchg
and
or
outsb
xchg
cmp
pop
xchg
mov
pusha
inc
jecxz
mov
add
and
sub
jmp
push
test
fmuls
xchg
nop
enter
dec
call
test
ret
fldpi
aas
sub
xlat
cmp
add
pop
imulb
filds
ljmp
mov
lahf
sub
or
cmp
inc
adc
jbe
cmpsl
out
clc
out
or
xchg
std
dec
mov
cmpsb
mov
or
jns
inc
loope
rorl
mov
aad
and
sbb
popf
cmp
push
sub
addr16
mov
xchg
mov
lods
push
sbb
mov
insl
in
inc
data16
rclb
mov
push
aas
imul
xorb
push
ja
loope
lret
and
aaa
sarl
movsb
cmpsl
les
outsl
mov
lea
xor
fcoms
outsb
loope
icebp
int3
xchg
cmp
js
push
pop
mov
mov
inc
ds
sub
aas
mov
dec
xchg
lahf
sti
insl
insl
add
rcl
or
pop
hlt
and
sahf
sbb
fnstenv
inc
icebp
pop
inc
mov
inc
adc
mov
pop
pop
into
negl
sub
jp
dec
push
sti
icebp
dec
sbb
mov
ja
pop
test
jecxz
jne
pop
sbbl
push
loope
leave
js
pusha
lcall
sbb
sub
dec
and
inc
xor
iret
mov
sbb
mov
in
sub
gs
and
in
cmova
inc
ss
cmpsl
xchg
push
lcall
test
mov
sub
in
movl
scas
xor
cmpsl
cwtl
mov
jg
dec
int3
cmp
into
push
call
lret
std
sarl
or
mov
pop
lods
add
and
dec
jle
jp
xchg
sub
ret
jg
rorl
adc
xlat
mov
dec
push
and
pop
loopne
jle
dec
add
push
lods
repz
ret
xor
or
mulb
adc
jmp
stc
ljmp
fmull
int3
adc
mov
outsb
aas
push
or
sahf
mov
addb
repz
imul
mov
mov
mov
popa
mov
popa
das
pop
cmp
enter
mov
into
mov
scas
fwait
addr16
lea
cld
inc
adc
insb
jns
in
jmp
push
data16
rclb
in
lret
sub
cmp
pop
lock
jns
mov
std
dec
adc
xchg
ja
jbe
or
fwait
test
pop
mov
mov
jno
mov
stc
jle
repnz
or
push
inc
jnp
addr16
pop
fs
inc
std
push
and
mov
and
push
xor
mov
mov
pop
in
cltd
adc
repz
mov
fwait
es
das
add
mov
test
mov
addb
dec
push
cwtl
and
int
sbb
push
mov
jmp
nop
adc
jbe
insb
xchg
pop
les
in
adc
adc
pop
lock
out
push
and
in
aaa
stos
xchg
xor
negl
add
push
les
dec
push
mov
dec
bound
cmp
aas
adc
es
ss
mov
pop
dec
dec
ja
sub
and
decb
fsubl
repz
inc
pop
in
call
fwait
adc
inc
xor
xchg
aad
cwtl
btr
push
xor
mov
lods
jae
ja
pop
cs
pop
rorl
lcall
fwait
jg
lock
jle
dec
aam
adc
and
sbb
mov
xchg
loopne
es
jmp
fdiv
mov
add
xor
xor
lahf
xchg
jecxz
mov
movhlps
insb
jmp
mov
pop
and
mov
mov
jo
loopne
adc
out
pop
pop
notb
fnstcw
pushf
dec
add
mov
or
outsb
adc
pop
mov
sub
test
cmpsl
movb
and
in
loope
mov
movsb
cld
sub
cs
das
push
pop
lahf
in
push
stos
mov
xor
stc
sbb
out
lret
iret
ret
mov
push
mov
iret
push
fnstenv
leave
push
adc
xchg
shrl
stc
add
leave
ljmp
rolb
lret
shl
movsb
mov
lret
lcall
insl
and
and
insl
add
stc
inc
push
sub
mov
sahf
ds
pop
movsl
xchg
test
cli
jae
sub
cmp
imul
xorb
push
xchg
cmc
imul
mov
mov
dec
jb
lods
nop
cmp
push
in
imul
xchg
ror
mov
ret
ja
lea
cmp
sbb
cwtl
iret
pop
xlat
ret
ss
push
jmp
leave
js
lea
aaa
ljmp
jle
movaps
fcomi
aam
arpl
dec
and
insl
into
stc
adc
and
pushf
popf
mov
fsts
imul
inc
aad
aad
jbe
push
dec
and
insb
test
xchg
adc
sbb
test
jg
sbb
or
out
lret
jns
popf
xor
out
and
push
push
ds
dec
insb
out
lret
jmp
in
xchg
jo
std
mov
add
lds
or
jg
dec
scas
sbb
jb
ret
lcall
fidivrs
mov
in
out
or
push
aaa
mov
push
jno
js
scas
or
cli
sti
xor
es
mov
pop
das
mov
in
testl
push
ljmp
test
jb
insl
dec
dec
xor
addr16
mov
jecxz
jno
dec
adc
icebp
mov
add
iret
adc
inc
sbb
push
xorb
lods
or
mov
dec
insl
stc
shrl
dec
cltd
jbe
xchg
dec
jmp
mov
jo
sub
call
stc
in
aaa
pop
fldt
mov
into
mov
or
mov
push
aad
fnstsw
dec
pop
add
xchg
dec
mov
inc
mov
jnp
adc
inc
add
adc
jbe
jae
add
and
push
mov
cs
arpl
adc
pushf
aam
fnstenv
scas
add
aad
mov
cmp
sahf
jno
xchg
xor
lahf
enter
xchg
sbb
or
add
pop
stos
xorb
cs
push
mov
xchg
xor
cmp
xchg
cli
enter
test
movsl
push
cld
push
add
mov
and
cmp
jns
imul
in
inc
test
xchg
scas
cmp
dec
aaa
add
cmpsb
not
mov
pop
push
cmp
xchg
sub
sahf
ja
pop
pop
mov
adc
ja
or
cmp
shll
push
mov
jns
std
stc
es
mov
and
jle
sbb
mov
ret
inc
and
ret
bound
dec
shl
jmp
xor
jnp
cmc
mov
sahf
insb
or
push
sub
fwait
cwtl
pushf
loope
ficoml
add
cmp
ds
jmp
and
movl
cmpsb
test
cmp
and
mov
cli
sub
pop
and
faddp
jl
out
outsb
in
lds
enter
cmc
and
jnp
xchg
and
sbb
mov
popf
addl
dec
xchg
sarl
stc
xchg
scas
xor
outsb
mov
mov
and
pop
pusha
sub
push
ret
outsb
xchg
stos
and
je
or
insl
jge
mov
test
pop
push
xchg
inc
jle
sub
mov
fidivrs
mov
pop
aas
cli
pop
sub
scas
pop
dec
mov
jns
fcmovb
inc
cld
xchg
xor
and
into
fdivs
jl
data16
adc
cld
iret
jne
outsl
adc
dec
int
and
cwtl
dec
mov
fs
cmp
lahf
dec
clc
and
xchg
fwait
movsb
gs
cmp
test
call
aad
in
dec
adc
pop
dec
ret
inc
dec
or
or
popf
add
add
inc
imul
xor
dec
std
lcall
cmp
pushf
loope
jecxz
mov
pop
aam
push
sbb
and
xchg
std
or
fdiv
pop
or
sti
jno
fs
icebp
sbb
inc
sub
imul
adc
sbb
adc
dec
xchg
fwait
dec
add
jo
js
shrl
jo
shrb
test
jb
jp
ljmp
add
popf
dec
movsl
cmp
sbb
cmc
cmp
aaa
mull
orl
andb
hlt
out
cmp
es
lret
mov
imul
mov
jo
pop
dec
scas
clc
jne,pn
pop
popa
fcoml
stos
testl
sub
pop
inc
mov
jg
je
incl
inc
mov
pop
adc
xor
sub
inc
sti
fsubrl
adc
mov
xchg
cmpsl
mov
mov
sti
flds
push
icebp
into
lret
sbb
mov
cmp
leave
clc
push
int3
mov
sub
clc
cmp
mov
aas
or
push
sahf
in
adc
ljmp
ret
repz
jo
xor
lods
bound
dec
mov
std
inc
xchg
xchg
mov
mov
xchg
mov
outsb
adc
imul
jo
add
dec
inc
movsl
mov
cmp
jge
cmp
push
pop
mov
pushf
mov
mov
or
inc
adc
dec
mov
loopne
stos
lcall
mov
mov
imul
stc
xchg
cmp
in
xor
push
pop
inc
push
das
in
mov
fiadds
in
mov
cmp
mov
hlt
ja
push
aam
adc
repnz
idivl
lret
xor
outsb
int3
imul
adc
enter
jmp
add
dec
push
mov
jge
adc
mov
dec
mov
jae
push
inc
loope
dec
pop
enter
mov
scas
jo
adc
sbb
xor
sbb
insb
addr16
or
xchg
cltd
mov
push
cmp
or
repnz
aaa
enter
ret
sti
push
jno
lock
jp
lea
mov
insl
shll
pop
and
sbb
push
shll
cmp
mov
rorl
scas
jl
jno
movsb
or
ficompl
iret
addb
mov
ljmp
lret
lcall
xchg
and
and
mov
pop
xchg
mov
cmc
push
and
mov
lret
push
outsl
lods
out
mov
jo
imul
or
test
je
adc
xlat
lahf
pusha
ss
andb
jmp
and
popf
inc
jg
push
lahf
fldl
and
mov
add
enter
pop
sub
mov
cmp
sbb
cmp
inc
cli
dec
mov
add
jl
push
sbbb
imul
and
cwtl
cmp
test
idivl
pop
and
clc
dec
ja
clc
lds
pop
push
xor
in
icebp
jge
cmpsl
pusha
dec
test
sub
jo
jmp
leave
lock
mov
call
push
cmpsl
cmp
xlat
mov
pop
ds
adc
faddl
movsl
jne
xchg
testl
fmul
xor
adc
sbb
push
cmpsb
clts
shll
fwait
cmpsb
push
cwtl
mov
pop
fwait
insl
or
push
aad
insl
dec
or
out
adc
int
sub
mov
xchg
mov
outsl
fwait
aas
dec
repnz
add
stc
xor
bound
cmp
leave
mov
cli
and
stos
aaa
jae
xor
xor
pop
loopne
aad
imul
fidivrs
lods
sbb
ljmp
dec
lahf
out
les
gs
aam
cmp
push
int
jnp
loopne
ja
push
push
dec
or
dec
iret
andl
dec
inc
addl
xchg
jb
or
lahf
sbb
xor
mov
dec
dec
test
cs
outsb
mov
mov
fstpl
xchg
pop
sub
data16
fidivrs
cmc
imul
in
sbb
xor
add
push
sub
sub
sti
shll
inc
xor
mov
sahf
mov
mov
jae
cmpsl
xchg
enter
pop
or
incl
out
sub
adc
shlb
fists
movsl
jb
inc
pushw
in
or
aad
sbb
xchg
sbb
sti
ret
jno
out
shll
push
mov
shlb
sub
add
push
xchg
push
adc
enter
jl
push
mov
je
addr16
jg
outsb
popf
imul
jno
test
lea
sbb
loop
jne
nopl
xor
test
lret
test
imul
fs
cli
mov
negb
xlat
cmp
mov
inc
std
xor
xor
pop
inc
loopne
xchg
cld
aaa
push
insb
mov
jge
adc
inc
push
cmp
mov
lods
mov
pop
mov
xlat
stos
xchg
xlat
daa
lcall
js
mull
divb
lods
filds
ljmp
insb
inc
addr16
fnstcw
and
leave
iret
cwtl
add
cmp
orb
mov
pop
shlb
push
pop
mov
sbb
fs
fisttpll
in
lret
nop
adc
int3
jae
and
int
cmp
iret
xchg
cmpsb
std
scas
push
test
hlt
sub
fwait
lahf
data16
fs
cli
imul
loopne
ds
mov
add
std
pmuludq
outsb
ja
and
cmp
adcl
mov
lock
pop
and
sub
fcomp
adc
pop
fadd
cmpsl
test
sarl
ret
stos
or
and
mov
jmp
jmp
fwait
inc
add
push
or
adc
popf
das
add
mov
ds
jne
jnp
dec
mov
xchg
ljmp
pop
jl
cli
cmpsb
cli
add
push
adc
rolb
out
push
cmp
add
std
pop
iret
repnz
bnd
sbb
xchg
push
arpl
cmp
pop
mov
clc
mov
jno
stos
fimuls
xchg
test
fdivl
pop
or
cwtl
jl
or
lret
mov
mov
cltd
shl
and
sbb
jb
int3
movsl
sub
lods
sbb
mov
mov
scas
hlt
js
stos
stos
adc
add
aam
cwtl
inc
ja
and
push
rcr
imul
dec
cli
pop
adc
jl
popf
cmc
leave
hlt
test
iret
subb
xor
rcll
adc
pop
mov
push
cld
sbb
lcall
fisttpl
xchg
mov
stos
push
push
mov
or
push
sti
stc
pushf
pop
mov
xor
int
ret
or
inc
in
subb
mov
movsb
dec
ds
jg
and
mov
and
sub
test
add
sahf
mov
sti
mov
mov
sub
add
aaa
add
fiaddl
fisttpll
pop
bound
fiaddl
mov
scas
int
hlt
and
sub
int3
sarl
add
shlb
sbb
jbe
push
shrl
adcb
push
jmp
mov
xor
push
sbb
loop
aas
loopne
dec
popa
test
xor
dec
pop
add
push
mov
jg
inc
in
or
clc
pop
pop
out
in
das
xor
pop
mov
or
xlat
or
js
aam
rorl
mov
add
mov
inc
push
xchg
xor
jb
xchg
dec
pop
stos
inc
jnp
cli
adc
push
lret
in
cmp
cmpsl
ja
stos
pop
jne
mov
pushl
sahf
push
repnz
fimull
inc
pop
push
inc
lods
add
cmc
xor
lret
adc
inc
movsl
std
push
mov
out
dec
mov
jne
sub
xchg
mov
sbb
sbb
cld
ds
push
xor
ds
fs
cmp
fbld
pand
orl
hlt
jo
push
sbb
loopne
sub
js
mov
ja
sub
pop
ja
orb
jb
enter
xor
test
mov
adc
or
pop
mov
xchg
movl
and
push
rorl
jecxz
shll
movsb
stc
sub
mov
repnz
nop
or
push
aaa
xchg
rcll
rcrb
add
mov
out
xchg
dec
jecxz
adc
mov
cwtl
loop
mov
inc
das
xchg
pop
jecxz
mov
les
mov
lds
inc
movsl
out
mov
sbb
sbb
inc
push
mov
rsm
repz
or
sbb
dec
dec
push
in
and
mov
pop
adc
lods
arpl
adc
push
lret
aaa
cld
mov
stos
push
in
pop
push
push
inc
pop
clc
ds
loope
jmp
hlt
jb
in
sbb
je
inc
push
aad
rolb
repnz
inc
push
or
pop
icebp
test
rcrl
pop
mov
cmp
imul
movsb
rcr
fimull
jle
xor
mov
jns
ret
out
loopne
hlt
inc
sbb
test
out
mov
xor
hlt
in
popf
dec
insl
pop
popa
lret
andb
popf
ficompl
arpl
and
sbbb
sbbl
in
jbe
mov
xor
push
sahf
inc
jp
jle
adc
fcmovnb
xor
push
loope
fs
adc
ret
jp
mov
jns
jb,pn
jecxz
or
cs
jecxz
cmpsb
cmp
es
jb
xor
xchg
xor
adc
imulb
or
dec
loope
aas
adcl
adc
pushf
pop
sub
aam
mov
xchg
insb
outsl
xor
popa
push
cmpsl
inc
and
arpl
and
gs
and
nop
movsb
cmc
clc
addr16
repz
hlt
sub
pop
mov
pop
clc
movsb
xchg
je
push
fmull
push
xor
lock
push
stos
sub
mov
out
push
in
shrb
fdiv
loopne
insl
cmp
nop
cmp
pop
cli
dec
out
rolb
mov
sub
inc
adc
inc
aaa
add
add
inc
sub
aaa
out
mov
cmpsl
push
or
push
ljmp
xchg
jge
frstor
mov
push
sbb
sbb
cmc
das
cld
mov
xchg
pop
rcrb
dec
mov
inc
fimuls
mov
xor
xchg
adcl
jecxz
add
adc
mov
jmp
popa
scas
push
movsb
sub
rolb
adc
movsl
movl
lock
xor
mov
mov
ljmp
repz
stos
stc
dec
sti
es
mov
sub
fstpl
mov
sbb
xor
pop
mov
sbb
fstps
xor
push
mov
int3
dec
fadd
dec
sbb
movsl
or
jl
pop
mov
dec
rolb
daa
int3
imul
mov
xor
int
or
mov
int3
in
xor
add
loop
test
push
test
bound
jo
lods
mov
jbe
shr
mov
inc
push
xchg
in
ret
push
cld
pop
fmull
sbb
rcrl
cs
adc
jnp
cmpsl
mov
xor
jmp
mov
pop
mov
jne
je
jae
or
sub
mov
or
xlat
xor
fidivrs
xlat
fdivrs
test
xor
bound
test
dec
push
inc
jne
add
inc
cmp
pop
add
mov
sbb
xor
dec
sbb
movsl
mov
les
and
jle
mov
sbb
int
test
cli
jp
addr16
mov
das
lock
ds
pop
rcr
and
mov
lods
add
pop
jb
inc
push
aam
push
dec
stos
cld
xor
dec
pop
sarl
xor
loope
test
filds
lret
imul
inc
pop
hlt
mov
mov
sub
push
cmp
adc
lea
outsl
out
idivb
out
rolb
sub
pop
es
push
pop
sbb
les
in
notb
jge
cltd
cmp
loope
mov
hlt
je
xchg
and
mov
cld
pop
xor
inc
push
mov
clc
jae
adc
orl
push
lret
shlb
mov
jnp
cmp
xor
test
pop
rcl
mov
test
or
jmp
scas
nop
or
push
push
dec
fucom
shlb
mov
fnstcw
orb
jnp
cmp
mov
add
cmpsb
daa
cmp
or
add
fimuls
or
sbb
pusha
push
add
scas
ja
mov
lret
xchg
push
push
sbb
aas
cmp
adc
rolb
mov
ss
cmp
bound
mov
xor
pop
jg
jne
add
xchg
int
std
xor
push
sbb
rol
aaa
lahf
pop
mov
out
jbe
arpl
mov
pop
dec
lahf
mov
jge
sbb
in
movsl
imul
sub
jg
sti
cs
push
shll
sbbl
push
cmpsb
pop
subb
pushf
mov
js
addb
addl
cmpl
mov
subb
or
xchg
xchg
loope
popa
dec
or
xlat
repz
push
jle
mov
mov
call
gs
ret
mov
popf
mov
loop
ss
cwtl
cmpsl
pop
stos
dec
pusha
cmpsb
sbb
pushf
cmp
nop
sub
xchg
movsb
push
imul
and
test
jns
lret
imul
mov
push
repz
repz
push
mov
pop
mov
test
inc
aas
sbb
inc
stos
cmp
jbe
add
sbb
inc
xchg
add
jae
mov
adc
stos
jg
cwtl
and
das
je
fdivs
lahf
pushf
or
dec
and
lods
jns
lock
js
mov
aam
mov
inc
jecxz
dec
mov
inc
xor
inc
mov
mov
add
cmp
pop
cmpl
xchg
add
aas
icebp
and
push
cmp
xor
mov
clc
int3
push
mov
jns
jl
push
cmpsl
clc
loopne
icebp
push
adc
cmp
js
test
cmc
test
mov
pusha
jae
pop
test
mov
push
inc
inc
adc
push
xchg
int3
fists
das
stc
jb
fnsave
mov
dec
scas
and
gs
out
inc
xchg
enter
and
in
and
push
cmp
fwait
jecxz
jmp
and
stos
dec
add
adc
or
js
xchg
pusha
movsl
or
xlat
fnstsw
inc
jb
add
pusha
jmp
daa
test
mov
mov
sbb
sbb
ljmp
cmp
jb
jo
fcoml
push
jb
insl
xchg
push
mov
pop
pushf
sbb
inc
xor
pop
out
mov
or
xor
test
cmc
les
sbb
lcall
or
imul
pop
jmp
popf
inc
test
jb
adc
xlat
insl
shrb
xlat
add
adc
xor
cmc
sub
mov
inc
jp
and
mov
jg
sbb
xchg
mov
icebp
repnz
mov
lcall
adcl
in
mov
mov
bound
pop
and
sbb
outsl
jge
pop
xor
sub
int
mov
push
daa
mov
push
int3
cs
xlat
dec
arpl
aaa
mov
lahf
push
cli
add
sbb
loope
push
sbbb
jmp
mov
stos
scas
xlat
icebp
xor
mov
icebp
movsb
jnp
and
bound
xor
rolb
lods
mov
gs
out
adc
pop
div
xlat
cltd
icebp
jg
call
test
int
and
std
xchg
scas
xlat
inc
fs
bound
lods
das
mov
pop
mov
mov
xchg
mov
mov
ficoms
in
mov
out
mov
aas
dec
divb
and
je
sub
in
adc
mov
mov
int
iret
mov
in
movsl
cmp
loope
dec
ljmp
push
xchg
or
and
jmp
lahf
lods
jbe
xchg
aas
jne
lret
mov
xchg
stos
xor
in
push
mov
into
cld
aad
jle
or
incl
xchg
sbb
nop
inc
test
gs
jnp
jo
int3
cs
and
sbb
out
jl
cmpsb
andl
jns
mov
imul
and
inc
mov
sbb
xchg
sub
lret
in
inc
call
cli
lret
fadd
add
xchg
sbb
mov
mov
dec
cmp
sub
and
inc
push
daa
and
lahf
into
inc
mov
sbb
aaa
sub
in
data16
and
mov
pop
sub
shl
gs
outsb
or
dec
xor
and
cmpsb
shl
cmpsl
test
repnz
loop
add
dec
mov
mov
or
test
aad
mov
repz
lcall
adc
cmp
dec
pop
cmpb
adc
stos
or
or
sub
and
xor
cmpsb
bound
adc
insb
ror
ljmp
mov
mov
and
mov
repz
mov
sbb
movsl
lods
idivl
hlt
hlt
repz
jle
stc
inc
dec
push
daa
xor
out
std
adc
inc
lret
inc
stos
mov
in
jnp
mov
test
push
xchg
iret
cmp
cmpsl
cmp
popf
sub
mov
test
mov
sub
es
xor
jns
and
ror
mov
or
pop
jp
jmp
into
xchg
xor
jns
pop
sub
andl
gs
adc
in
int3
and
sahf
jnp
pop
clc
in
fsubrs
addr16
out
andl
scas
xchg
fmull
cmp
mov
cmpl
push
mov
mov
sub
imul
mov
adc
and
idivb
add
pop
inc
xlat
test
movsb
pop
out
call
in
adc
adc
outsl
je
or
cwtl
je
imul
jmp
mov
mov
in
test
jo
fs
andl
pop
test
sub
jnp
jl
cmp
xchg
imul
mov
jo
jno
xchg
push
out
aaa
push
lock
in
push
jns
je
xchg
xchg
stos
out
mov
lcall
and
adc
pop
dec
xchg
pop
mov
adc
dec
ret
cmp
ret
cs
insl
push
test
orl
xchg
gs
or
test
test
push
imul
pop
sahf
js
into
cmp
insb
xchg
aaa
leave
cwtl
jmp
lret
loop
inc
stc
out
mov
jnp
or
sbb
and
xchg
ret
sub
mov
jbe
jl
or
pop
jp
test
daa
pop
call
pusha
scas
rclb
into
add
icebp
addr16
bnd
js
xor
shll
sbb
or
popf
and
pop
mov
mov
outsl
outsb
leave
mov
stc
sti
sbb
fnstenv
jae
push
stos
pop
sar
or
inc
lahf
out
lock
mov
jnp
dec
movsl
sub
std
fstl
hlt
daa
fnstenv
lods
mov
jmp
xchg
mov
jmp
dec
xor
dec
lahf
andb
cwtl
and
push
jg
scas
andl
js
jnp
pop
jo
xor
jp
sahf
mov
sbb
inc
jle
or
dec
adc
cltd
mov
popf
aas
push
shlb
inc
popf
std
loopne
aam
dec
push
dec
mov
testl
mov
inc
lret
lds
outsl
jnp
adc
clc
mov
sbb
in
xchg
test
inc
sbb
pushf
mov
xchg
mov
push
lods
les
fisttpl
ja
inc
pop
push
jp
xchg
aad
dec
dec
jb
sbb
insl
pop
xchg
add
xchg
scas
xor
fwait
mov
adc
push
enter
add
cs
push
inc
test
adc
mov
mov
lds
loopne
and
es
mov
popf
data16
xchg
pop
jle
mov
cmp
repz
out
out
xchg
cmp
sbb
cmp
xor
mov
dec
gs
mov
mov
push
xlat
out
and
sub
xor
lret
add
aam
push
data16
jp
add
xchg
adcl
out
stos
frstor
dec
std
mov
push
fs
mov
xchg
shlb
scas
jp
clc
add
push
pop
xchg
push
pop
cwtl
jmp
dec
xlat
cmp
repnz
adc
mov
sbb
adc
jno,pt
or
js
push
jecxz
out
loope
xchg
mov
popf
mov
jns
jg
xchg
fs
je
stc
std
push
into
sahf
sbb
xor
das
test
add
addr16
xchg
and
sahf
push
sub
pop
addl
mov
loopne
loop
pop
pusha
jnp
ss
adc
hlt
mov
adc
push
inc
pop
adc
pop
enter
pop
mov
cmp
rolb
arpl
xchg
xor
daa
cli
addr16
ret
faddl
inc
jo
incb
add
and
push
outsb
cwtl
lods
mov
int3
insl
subb
jo
pop
das
jecxz
and
mul
sbb
loope
xchg
dec
scas
pop
add
stos
push
imul
ja
pop
cmp
neg
cwtl
imul
mov
stc
or
pop
es
sub
xchg
daa
or
mov
sub
and
inc
cltd
pop
mov
push
push
cmp
int
mov
push
int3
std
inc
xchg
out
test
or
jbe
aaa
xor
inc
cli
fnstcw
shrb
push
loope
rol
xor
fadds
mov
in
xor
sbb
ja
xor
mov
sub
dec
in
and
cmpsl
dec
jb
cs
fwait
aaa
mov
mov
pusha
and
xchg
add
lods
fcmovbe
pop
push
add
push
fadd
cld
fucomi
outsb
imul
rcr
std
test
xchg
mov
inc
add
popa
dec
nop
test
loopne
pop
ja
mov
pusha
rclb
dec
pop
sbb
imul
pop
mov
jmp
test
sub
jp
cld
dec
xchg
add
nop
or
mov
sub
xchg
test
mov
push
clc
push
mov
dec
stos
sbb
jl
mov
jg
gs
aas
add
sub
pop
mov
nop
imul
or
mov
push
data16
pop
loope
cwtl
jno
stos
dec
adc
into
or
xchg
xchg
sbb
mov
push
jp
mov
pop
adc
int3
push
jns
jae
cltd
daa
pop
shll
jmp
mov
test
jne
fdivs
pushf
cld
test
lret
or
mov
add
roll
mov
std
inc
mov
loopne
test
sub
rorb
sub
mov
cmpsl
fiadds
sbb
mov
fiaddl
scas
lret
es
test
push
adc
mov
aaa
push
popl
pop
lea
mov
inc
out
mov
or
dec
mov
jbe
sub
fisttpl
int3
and
pop
add
pop
test
push
xchg
pop
mov
cmp
loopne
xchg
stc
mov
gs
arpl
inc
out
mov
int
fstpt
ja
xor
adc
js
pop
mov
mov
jb
clc
dec
aas
movsb
outsb
imul
xchg
loop
mov
pop
mov
ret
xor
iret
inc
and
test
fwait
mov
pop
push
pusha
lods
imul
out
dec
imul
scas
jae
jp
push
lds
test
sahf
xor
cs
dec
insl
adc
inc
mov
sub
dec
addr16
stc
sub
jae
stos
movsb
mov
sub
add
add
mov
adc
jo
add
into
xchg
sahf
pop
push
cmp
cmp
mov
sahf
fmulp
dec
movsl
dec
xchg
loopne
lods
cmp
pop
push
xchg
jmp
add
mov
jae
push
nop
jle
test
push
push
loop
aad
movsb
cmp
mov
loop
imul
ret
inc
jno
add
cmp
or
jno
inc
aaa
lret
and
pop
adc
jns
xchg
mov
dec
adc
loope
jne
fwait
mov
jb
clc
ja
jle
mov
pop
stos
dec
jmp
dec
adc
adc
xor
orl
sti
jns
unpckhps
xchg
xchg
test
mov
flds
cmp
dec
and
shrl
lds
out
jae
insl
cmp
mov
adc
cwtl
sub
dec
popf
adc
add
ret
out
mov
incl
push
adc
pushf
add
ret
dec
and
int3
sbbb
fidivrs
loope
js
jle
ss
test
fisubrl
push
jns
mov
sub
and
fdiv
sbb
cmp
mov
push
add
sub
daa
popf
mov
inc
inc
in
cmp
jl
and
enter
out
mov
mov
and
repz
pop
lahf
jb
mov
loopne
inc
xor
js
shlb
je
sub
inc
insl
inc
test
dec
ljmp
es
mov
fcomps
xchg
loop
cmp
cmp
xchg
push
dec
xor
lods
xchg
inc
fbld
cs
in
not
mov
fsubs
xchg
subb
insb
loopne
mov
mov
hlt
lds
push
fwait
xchg
out
popa
adcb
jge
test
pusha
mov
cmp
jl
xchg
out
xor
mov
stos
jne
pop
cmp
sub
ja
mov
pop
ja
ret
mov
jne
cmp
loopne
sbb
jl
mov
addb
rcrb
in
sahf
mulb
and
jecxz
push
mov
mov
xchg
sbb
jg
ss
adc
inc
stos
aaa
pop
adc
dec
cltd
pop
mov
inc
push
lret
push
outsb
xchg
sbb
addr16
into
cmp
cmp
mov
fwait
or
xchg
pop
cmp
insl
pop
sarb
hlt
xor
mov
out
iret
fldcw
into
pushf
bound
fisttpl
add
mov
pop
stc
mov
dec
cltd
add
lods
push
xor
xchg
add
int
push
enter
sub
cmpsl
pop
xor
leave
pop
cmp
stos
insb
in
in
dec
rol
roll
lods
shrl
push
js
fidivrs
dec
or
sbb
cmp
cmp
das
mov
lret
loop
out
sub
data16
gs
icebp
xchg
mov
adc
in
xor
and
in
push
jb
xchg
fistps
in
outsb
imul
sub
and
mov
jae
mov
test
mov
jmp
repz
outsb
movsl
iret
jge
lock
cmp
cmp
ret
inc
ljmp
jo
sub
dec
add
cli
loope
ja
add
mov
loop
rcr
or
and
xchg
adc
dec
mov
rcrl
dec
pop
push
pushf
push
jnp
push
push
jp
outsl
popf
jnp
dec
lcall
sbb
addr16
int
xlat
adc
test
das
jge
sbb
sti
test
scas
jg
clc
adc
jg
subb
repnz
mov
pop
pop
icebp
loop
jecxz
xlat
xor
cmc
mov
sbb
movsb
mov
aaa
or
add
dec
pop
mov
sbb
fs
js
sub
pop
and
mov
add
sahf
and
mov
cmp
leave
cs
negl
sub
outsb
and
mov
jno
xor
mov
ljmp
and
dec
fsub
jbe
insl
add
or
xorb
arpl
xor
mov
pusha
sahf
mov
jno
pop
dec
ficompl
nop
dec
mov
rcl
mov
lock
push
jb
adc
or
ret
push
xchg
es
sarb
loop
std
test
mov
cltd
pop
sbb
fisttps
mov
das
jne
dec
jno
setb
fists
insl
hlt
push
dec
hlt
dec
adc
lahf
repz
jp
in
lods
adc
inc
mov
sbbl
xchg
testl
test
int3
jge
push
jnp
sub
cmp
sbbb
iret
lret
cmp
out
push
outsb
sarb
in
jge
mov
loop
xor
movsb
push
pop
mulb
xchg
mov
mov
das
inc
xchg
push
pop
xchg
and
mov
mov
xor
cltd
sbb
loope
push
imul
pusha
in
dec
adc
shll
dec
out
shll
out
insl
mov
add
or
mov
scas
je
lds
subb
test
mov
inc
pop
mov
push
clc
adc
sbb
lret
jge
sbb
adc
std
jle
pop
les
jb
sarb
stc
mov
js
pop
inc
popa
sbb
sbb
cmp
sahf
pop
add
int3
clc
out
js
mov
rep
sub
repz
nop
add
pop
inc
clc
or
jl
add
in
or
std
sub
xchg
aas
insb
inc
imulb
xchg
mov
es
movsb
std
sub
jp
xchg
test
jmp
sub
dec
std
cltd
call
and
cmp
push
fidivs
lcall
sbb
imul
daa
jns
cmc
mov
mov
pop
inc
out
cmc
sub
aam
in
decl
stos
add
mov
filds
mov
push
adc
xchg
inc
das
or
push
or
pop
xor
jb
scas
mov
icebp
aam
bnd
pushf
and
jne
xor
sahf
xor
inc
jmp
or
sbb
pop
xchg
pop
sbb
xchg
mov
mov
or
sub
pop
aad
or
sbb
and
inc
pop
jge
and
fdivr
inc
loopne
jl
jmp
sbb
push
push
repnz
inc
pop
push
sbb
mov
sub
pop
pushl
test
xchg
dec
pusha
fsubr
xor
cs
cmp
insl
es
scas
xorl
jge
test
push
iret
rcrb
mov
insl
testb
mov
sub
cmp
rorb
xor
mov
add
ret
inc
mov
dec
sbb
dec
or
sbb
mov
push
push
sbb
psubusb
fistl
fwait
out
int3
addr16
cli
jns
in
out
loopne
sub
repnz
movsl
adc
dec
pop
ret
jb
mov
xlat
add
adc
jle
pop
adcb
pop
jge
xchg
les
inc
pop
out
and
xor
mov
and
jp
inc
xchg
mov
retw
adc
aad
push
push
push
mov
adc
data16
or
push
and
jb
stc
cmc
push
hlt
in
push
pop
cmp
pop
aas
rolb
adc
push
jge
cld
sub
cmpsl
adc
and
mov
das
jnp
push
imul
mov
cld
cltd
shlb
insb
lods
lret
jge
mov
shll
imul
cltd
or
out
cmp
push
notb
in
in
movsb
std
cmp
push
imull
ds
andb
popa
mov
cwtd
add
cwtl
pop
ja
movsb
cmp
xchg
jno
push
and
or
mov
cli
and
insl
popl
pusha
test
sub
sbb
cltd
shll
sub
mov
dec
adcl
dec
jl
sbb
or
cmp
jae
jnp
sahf
in
mov
push
pop
push
pop
push
xor
cs
inc
rclb
xlat
jg
jo
dec
pop
test
arpl
in
and
ja
outsb
push
xchg
out
inc
add
push
aaa
cmp
adc
cmp
sbb
adc
xchg
aas
pop
mov
sbb
dec
xor
and
out
inc
mov
sub
push
jnp
cmpsl
out
ljmp
orl
sub
sub
pusha
scas
xor
jae
sub
imul
fldt
sbb
push
jns
xor
adc
bound
pop
sub
add
scas
sub
jg
fs
mov
cmpsb
movsl
xor
add
or
xor
rclb
cmpsl
ljmp
inc
xchg
or
jle
xor
test
jl
pop
fimull
ss
jns
loop
repnz
sbb
movd
xor
daa
fstpl
cmp
xchg
mov
mov
push
jp
sub
xchg
data16
pop
sahf
mov
inc
dec
mov
adc
in
in
cld
sub
out
fcomps
adc
cwtl
pop
mov
loope
sti
dec
sbb
pop
or
push
lahf
popa
or
pop
mov
push
pop
iret
sbb
imul
lods
sbb
xchg
cli
inc
jecxz
push
pop
sbb
mov
notl
inc
jnp
or
loope
daa
add
sub
and
and
pop
pop
xlat
mov
in
clc
pop
daa
out
push
pop
cmpsl
repnz
lods
inc
jle
loop
mov
adc
inc
loope
pop
jp
sahf
xor
dec
xchg
mov
andb
push
xor
adc
cmp
add
dec
sbb
lods
xorb
inc
xchg
cmpsb
sbb
cmovp
inc
mov
jle
push
mov
lds
mov
jb
inc
push
push
scas
ret
aaa
cmc
adc
pop
addr16
sbb
and
xchg
lds
adc
lret
jae
and
in
adc
lods
sti
je
adc
or
and
sub
sub
jg
test
shlb
cmpsl
dec
cmp
jo
xchg
cmpsl
fstpt
ja
pusha
cli
aad
pop
adc
cmp
mov
sti
mov
dec
xor
das
xor
nop
sub
out
int3
stos
push
sbb
dec
fs
out
cmc
push
jmp
adc
sbb
hlt
xchg
sub
jle
sbb
ds
mov
cld
adc
mov
test
push
enter
stc
add
adc
cmpsb
es
mov
sarl
jb
push
daa
push
push
pop
filds
or
hlt
pusha
sub
adc
mov
inc
cmp
or
pop
ret
call
push
out
es
ja
andl
ja
lea
push
and
sbb
dec
xor
push
adc
push
or
icebp
lods
je
lahf
jne
xchg
mov
mov
jns
test
orb
push
leave
lret
push
bound
cmpsl
xor
adc
adc
ja
pop
aad
inc
scas
mov
xchg
lods
mov
adc
repz
out
test
addb
rol
sbb
test
push
xor
ja
ret
xor
rcrl
pop
jb
cwtl
cli
cmp
add
repz
jbe
sbb
cltd
lahf
js
dec
sbb
imul
inc
ret
mov
stc
push
sbb
push
jne
lock
insl
ret
mov
dec
lret
ljmp
stos
std
xchg
jne
lcall
inc
sbb
in
xor
cmp
adc
xor
sub
mov
lods
xchg
push
in
stos
dec
fwait
ja
inc
pop
fstpl
cltd
cmp
push
lock
jns
arpl
scas
push
into
xchg
mov
scas
mov
jg
mov
mov
daa
movsb
orb
dec
ret
xchg
inc
mov
sbb
rcrb
ds
inc
sub
jb
mov
inc
adc
xchg
mov
inc
lods
outsl
test
mov
js
fiaddl
icebp
fwait
mov
xchg
sub
roll
adc
in
adc
adc
adc
test
sub
mov
push
mov
test
sti
hlt
cs
xchg
push
sub
xchg
mov
pusha
cs
pop
pop
jbe
in
cmp
pop
lahf
ret
mov
loope
fstps
arpl
iret
aad
imul
je
xor
test
cmp
push
sbb
repz
cs
xchg
jge
movsb
lret
mov
jmp
fstpl
movlps
outsb
xchg
xor
fwait
pop
inc
cli
clc
mov
mov
cmc
cmp
push
jo
pop
push
test
movsb
insb
and
es
jmp
xor
pop
dec
inc
cmpsl
into
clc
aam
fisttpl
jo
inc
or
out
or
adc
xor
lods
shlb
fildl
xchg
fcmovu
cmp
stc
sub
adc
out
sarl
mov
push
dec
loopne
adc
mov
test
js
ss
addb
lcall
sbbl
enter
push
iret
or
aam
mov
mov
jne
pop
mov
pop
es
jnp
iret
aad
push
jne
jb
das
adc
sbb
jbe
shll
add
stos
sbb
fistps
mov
add
stos
adc
push
outsb
arpl
outsb
aaa
ficomps
mov
pop
add
stc
jecxz
out
cmp
cmp
ret
mov
mov
sbb
pusha
mov
add
mov
adc
cmp
fdivrs
cmpsb
cmp
push
call
pop
dec
addr16
lds
das
xlat
jo
les
xchg
stos
mov
mov
xor
imul
shll
lock
in
ret
lcall
mov
pop
add
in
push
fldl
mov
andl
mov
jbe
js
lods
jb
push
push
xchg
mov
mov
mov
push
mov
out
and
ret
imul
fists
cmc
loopne
icebp
shl
jns
stos
in
loop
sub
mov
testl
jmp
jae
mov
pop
das
ret
push
loopne
std
jae
in
sbb
inc
push
pop
cmp
dec
jmp
hlt
mov
aas
sub
mov
imul
into
jmp
aam
push
pop
dec
push
inc
hlt
jae
icebp
lret
cmp
pop
jae
imul
adc
ljmp
pop
mov
xchg
add
sahf
es
mov
leave
inc
sub
in
lods
or
mov
xchg
out
pop
pushf
test
sahf
xlat
enter
xchg
fs
mov
pop
xchg
jecxz
sbb
add
push
addr16
pop
inc
push
aaa
fidivl
pop
inc
sbb
or
mov
push
mov
out
loopne
movsl
pop
mov
mulb
es
xchg
in
js
es
test
int
subb
cs
mov
cld
mov
cmp
xchg
and
and
sbb
adc
and
cmp
mov
and
cmp
jmp
syscall
add
je
movsl
rol
fists
out
push
cwtl
int
loop
test
shrl
and
cmp
nop
push
ds
dec
mov
cmpl
xor
pop
dec
loop
or
int
sti
pop
xor
in
fidivrl
jmp
pop
cwtl
jnp
test
mov
stos
adc
dec
enter
pop
ljmp
push
lods
cmc
cmp
add
jb
mov
jmp
ss
incl
cmp
aaa
xchg
test
loope
push
push
es
dec
mov
daa
push
lret
jns
mov
pop
daa
push
gs
xor
aad
aaa
popf
add
lcall
mov
mov
cmp
les
mov
jle
jp
sbb
outsl
int3
mov
pop
push
movsb
mov
je
mov
adc
je
mov
push
dec
aas
out
out
sbb
scas
sub
xor
stc
xchg
push
ljmp
outsb
pop
push
mov
push
jecxz
sbb
dec
mov
les
sub
xchg
cmpsl
xor
push
rolb
adc
cmp
out
imull
in
movsb
push
cwtl
faddp
jmp
subb
add
cltd
or
dec
xchg
into
inc
test
cmp
jmp
inc
adc
jge
push
xchg
ret
xlat
psrlq
dec
adc
cmp
dec
add
or
pushf
fiaddl
pusha
inc
mov
addl
mov
add
fmull
mov
push
mov
popa
das
cmpsl
mov
xor
bound
fcoms
mov
orl
adc
push
inc
push
stc
pop
lods
mov
fcoml
fadds
mov
pop
pusha
in
pop
imul
inc
sub
xlat
jmp
inc
pop
mov
mov
imul
pop
dec
popf
jle
or
scas
inc
push
neg
js
ret
lods
sbb
loope
imul
bound
insl
dec
add
aaa
dec
push
add
pop
dec
mov
mov
mov
add
sub
sbb
icebp
les
mov
dec
sub
sbbl
in
in
repz
jae
and
loop
mov
push
sbb
fiaddl
dec
sub
adc
out
mov
dec
aas
pop
shl
push
cli
mov
adc
mov
cs
imul
push
shrb
inc
adc
and
push
test
jge
adcb
xchg
cmp
pop
insb
pop
dec
test
out
scas
stos
test
inc
xchg
xchg
subl
popa
aas
or
into
pop
and
jg
fidivl
mov
fsubs
and
arpl
icebp
inc
pop
into
dec
xchg
and
movsl
push
ds
cmp
in
adc
or
xchg
sub
cmp
xor
sahf
or
bound
insl
pop
inc
jecxz
arpl
cltd
fnstsw
xor
pop
sub
and
sti
fsubl
outsl
sbb
nop
xchg
mov
fidivl
sbb
imul
adc
pop
cld
jns
mov
cmp
js
jge
test
cmp
insl
inc
scas
movsb
push
sub
adc
shr
adc
out
scas
ret
fidivrl
push
add
imul
in
adc
or
ficoml
pop
inc
pusha
addr16
enter
or
sub
inc
pop
arpl
dec
arpl
aam
out
fnstenv
ljmp
mov
push
ljmp
sti
das
inc
xor
rorl
jns
popf
insb
ja
shlb
xchg
test
or
loop
and
jge
fwait
jge
jmp
lret
daa
sets
lret
inc
add
xchg
fwait
sbb
lcall
adc
add
sar
out
daa
lcall
cmp
push
and
je
mov
lahf
jne
mov
mov
test
jno
lahf
cltd
gs
dec
iret
or
es
push
loop
cld
lea
ror
xchg
mov
mov
stc
stos
rorb
call
lods
aad
cmp
dec
mov
dec
and
pop
pop
xor
mov
lods
xchg
aas
cli
pop
into
add
cwtl
mov
es
or
imul
mov
jbe
int3
je
pop
mov
call
data16
and
cmp
xchg
fdivr
add
mov
push
idivb
in
mov
adc
jp
imul
dec
pop
xlat
cs
pop
sub
xor
cmp
arpl
cwtl
mov
sub
rcrb
xchg
pop
rol
and
pop
cli
or
in
pop
enter
rorb
mov
enter
mov
inc
mov
jl
pop
nop
jno
out
pop
xor
js
push
or
dec
daa
cmp
je
inc
mov
push
jbe
and
fisttps
xchg
out
shll
push
and
fsts
sbb
jne
ret
or
add
pusha
movsb
addr16
add
gs
shrl
icebp
dec
mov
mov
cmp
mov
test
sbb
jmp
cmc
fdivs
pop
add
push
xor
stos
jmp
xchg
js
xchg
mov
sub
test
out
or
stos
lods
or
inc
dec
adc
aam
je
add
inc
js
sub
or
hlt
push
mov
call
lret
and
in
cld
pop
xchg
push
in
test
jmp
sub
movsb
cmp
sti
sbb
dec
std
or
push
sarl
xchg
mov
jb
fists
pusha
outsb
adc
fdivs
cmc
or
sbb
sub
or
pop
movsl
cmovns
inc
jno
mov
dec
xor
dec
cmp
std
xor
repnz
add
loopne
mov
shrb
lcall
xlat
xchg
je
mov
sarl
xchg
sbb
add
mov
dec
loope
adc
jbe
fsts
and
mov
aad
aad
mov
lds
sbbl
decb
aam
stc
and
shr
mov
aad
mov
mov
gs
lret
pop
xor
mov
push
xor
or
inc
jle
mov
push
lret
leave
cmp
jecxz
push
jnp
push
inc
and
dec
mov
loop
sbb
jo
or
xor
pop
jp
shll
jmp
ja
jmp
mov
rcr
pop
loopne
push
shl
test
inc
loop
xlat
inc
mov
ljmp
notb
cmpsb
inc
adc
and
push
pop
faddl
mov
add
and
push
out
arpl
push
mov
ficoms
jae
pusha
fld
xor
std
ljmp
call
scas
popf
jmp
out
imul
jg
sub
xlat
aad
push
into
push
stc
int
pop
and
jno
icebp
ja
jb
inc
and
outsb
push
cmc
cmpsb
int
adc
mov
loopne
cmpb
mov
lock
or
aad
clc
mov
adcb
push
xor
in
push
inc
cmp
jo
movsl
cmpsb
stos
test
mov
jle
add
sub
data16
mov
into
lods
xor
push
prefetch
cli
jmp
divl
push
dec
push
je
out
bound
xor
std
jae
ss
xchg
push
stc
inc
cmp
outsb
and
inc
and
push
jge
dec
ljmp
outsb
cmpl
decl
shll
pop
mov
aam
fidivrs
push
pop
xchg
cmp
add
dec
orb
push
inc
dec
pusha
and
fisubrl
xchg
xor
dec
xor
scas
les
inc
cwtl
push
nop
cli
outsb
sbb
jecxz
movsb
sub
xchg
mov
xor
add
sbb
adcl
mov
add
shll
pop
stc
rcrl
flds
insl
js
and
xchg
jl
sub
xlat
adcb
stos
in
iret
icebp
add
cwtl
loope
fidivrs
fcom
or
out
leave
xchg
sahf
cltd
in
jo
lret
out
sub
push
adc
jns
hlt
rolb
xchg
dec
repz
and
or
enter
inc
xlat
popf
xor
aad
pusha
pop
cmovb
mov
mov
rcrb
inc
stc
les
xchg
and
leave
sbb
add
xor
pop
xor
and
or
das
fistpll
outsl
pusha
push
sahf
mov
xor
lret
call
xor
out
mov
sti
repnz
fwait
and
dec
ffree
mov
ds
js
push
push
pop
fmuls
enter
jge
hlt
int3
ljmp
sub
inc
mov
mov
jnp
ficoms
jmp
inc
in
scas
iret
negb
push
lcall
push
test
mov
push
out
jl
sbb
xchg
rorb
mov
arpl
mov
lret
push
xor
adc
dec
sub
andb
lods
incl
adc
stos
pop
sbb
mov
imul
stc
ja
xor
sub
xor
inc
jl,pt
inc
mov
mov
fmul
aas
shl
mov
mov
or
ret
fs
repnz
lret
pop
push
inc
and
push
jno
jmp
inc
cmp
imul
push
repz
je
out
jns
mov
jbe
lds
das
pop
pusha
cmp
jne
mov
lcall
jp
push
popf
dec
sbb
leave
pop
jmp
in
adc
push
addr16
out
jmp
pop
mov
or
mov
xchg
lahf
cld
jge
jg
pop
mov
or
push
sbb
loope
push
xchg
inc
mov
cmpsl
push
pushf
in
xor
mov
sbb
sbb
test
jl
lods
pop
jae
sbb
popa
leave
jno
add
sub
outsl
mov
or
js
jl
or
xorb
add
leave
insl
push
cs
bound
ja
mov
clc
mov
mov
add
pop
pop
ja
xchg
push
cmp
call
call
sub
dec
dec
push
enter
cmpsl
rol
sbb
fs
neg
into
sti
pushf
dec
test
in
in
loopne
pop
mov
mov
dec
and
rcrl
stos
dec
loop
xchg
jne
jp
cld
std
sub
or
js
xchg
jge
cmpsb
mov
inc
test
mov
adc
mov
pushf
data16
push
adc
adc
in
or
jp
iret
out
pop
xlat
out
mov
aas
add
cmp
aad
enter
lret
sub
mov
neg
loop
push
push
mov
push
xchg
cmpl
movsl
jecxz
pop
scas
rcrb
dec
adc
rcll
pop
mov
cmp
mov
js
sbb
shl
jns
shll
mov
mov
pusha
stos
std
cwtl
sub
mov
in
leave
mov
jmp
call
mov
push
fdivrs
dec
pop
sub
int3
les
enter
xor
mov
and
and
jmp
jno
shrl
jmp
xchg
jl
push
push
jle
xor
leave
das
test
pushf
cltd
mov
lret
fcmovnb
pop
pop
sbb
add
sahf
fwait
insl
out
fcomi
jnp
sub
nop
mov
xor
inc
stos
popa
mov
xor
mov
or
dec
mov
add
dec
jl
je
pop
xor
or
or
jle
or
stos
rcrl
pop
addl
jo
cmp
mov
daa
mov
arpl
pop
dec
cmp
xor
cmp
int
mov
test
imul
loopne
pop
push
dec
dec
outsb
adc
in
lcall
ds
icebp
in
bnd
mov
push
iret
aad
imul
xchg
gs
mov
jnp
pushf
push
push
and
pop
mov
hlt
mov
mov
outsl
adc
mov
stos
and
int3
cmc
pop
sub
sub
sbb
adc
test
fcomi
ret
xchg
add
and
push
cmp
sahf
or
pop
sysexit
fimuls
or
xchg
xchg
aam
sti
mov
adc
add
dec
insl
and
icebp
dec
out
popf
xor
add
cld
hlt
das
dec
icebp
cld
faddp
sub
sahf
jmp
jnp
loope
insl
or
inc
in
es
cmp
scas
movsb
in
test
xchg
push
pusha
fistps
mov
icebp
or
leave
or
xchg
xor
int
ret
movsb
lods
add
loop
xchg
xor
imul
mov
stc
shll
xor
pop
jl
cmp
pushf
lds
inc
repz
out
loopne
cmp
aad
jb
inc
jnp
ret
mov
daa
int3
mov
or
or
daa
mov
mov
imul
dec
ja
leave
pop
clc
adc
sub
inc
adc
fs
push
mov
mov
movsb
ds
lods
adc
cmp
adc
icebp
and
push
jmp
sbb
mov
xchg
cmp
push
dec
ret
mov
fisttps
imul
pop
lea
inc
lret
out
sub
adcl
lods
push
push
cmp
int
aas
dec
xor
mov
dec
mov
add
inc
jg
into
aam
mov
or
or
inc
dec
or
sub
mov
xor
cmp
push
xchg
adc
int
leave
push
sbb
xchg
insl
lods
xor
lcall
in
xchg
sub
testb
pop
repz
jmp
xchg
and
pop
fisttpll
jb
xchg
dec
fidivrl
mov
nop
adc
subl
dec
dec
shlb
mov
and
jno
mov
pop
adc
push
or
or
imul
xor
or
shrb
mov
mov
cld
into
mov
fdivl
fwait
or
and
mov
aas
or
aaa
imul
mov
sbb
test
sub
roll
in
pushf
sti
inc
mov
lcall
pop
mov
outsl
cmp
jnp
aaa
lcall
mov
pop
mov
in
add
call
fs
dec
xchg
inc
out
mov
out
xchg
sarb
xor
sbb
dec
xor
inc
cmp
adc
inc
mov
scas
les
stos
xchg
mov
add
negb
sahf
mov
xchg
push
jle
hlt
test
xor
test
inc
cmpsb
sti
ds
jl
fwait
insb
sbb
pop
mov
inc
xchg
ljmp
xor
mov
cmpsb
inc
jbe
mov
push
sub
test
adc
push
lods
and
dec
sbb
clc
call
lahf
xchg
xor
mull
lods
repz
pop
in
test
or
fmull
lock
in
xor
adc
push
imul
clc
out
jae
and
shll
jnp
sub
enter
and
jo
sbb
dec
outsl
popf
bound
cmp
mov
xchg
adc
inc
frstor
mov
cmp
dec
xchg
and
cltd
loope
test
or
jbe
mov
loopne
or
dec
lds
xor
mov
xchg
andl
dec
cmp
jge
mov
imul
test
pushf
pop
call
sub
jmp
neg
pop
enter
gs
jge
les
mov
mov
rorb
inc
adc
bound
xchg
in
gs
out
sub
sar
mov
fisubs
adc
cmp
xor
xorb
jecxz
aaa
dec
mov
cwtl
or
or
in
loopne
ds
fwait
arpl
hlt
imull
movsl
jbe
adc
add
leave
mov
fwait
je,pt
jno
dec
pop
jae
les
push
stos
sbb
sub
mov
sbb
fs
sbb
out
xchg
or
fisubl
sti
scas
das
fdivp
repz
inc
into
repnz
sti
pop
div
scas
stos
add
push
stc
jmp
sbb
dec
pop
jo
mov
inc
sbb
bound
mov
shll
jae
into
mov
inc
mov
xchg
fisttpll
push
mov
fwait
sbb
test
dec
loope
mov
mov
mov
sub
gs
gs
iret
sub
add
and
aaa
sbb
mov
aam
push
mulb
divl
jbe
mov
adc
out
std
mov
insb
repnz
adc
loopne
rorb
sarl
pusha
decb
cmp
in
xchg
sbb
test
incl
push
pop
sub
add
movb
repnz
add
mov
fwait
cmpsb
rclb
inc
cmpsl
lret
and
lea
xlat
jg
movsb
bound
pop
repz
aad
mov
push
movsb
ss
adc
or
sarb
movsb
mov
mov
lods
mov
jno
movsb
mov
sbb
xchg
test
cmp
je
xchg
pop
ret
decl
mov
sbb
xchg
mov
cmp
js
push
outsl
xor
cmp
movb
ror
mov
dec
in
pop
mov
cmpsb
icebp
out
pop
incl
sbb
test
mov
adc
mov
adc
pop
cmp
xchg
flds
fistpl
in
ss
cmp
nop
in
xchg
mov
inc
aam
sub
xor
jmp
adc
cmp
sub
add
pop
outsb
lods
decl
ljmp
int
push
mov
and
daa
cmp
mov
imul
xchg
and
mov
and
cwtl
pop
test
lock
fcmovnb
popa
sub
xlat
mov
bound
in
aad
mov
test
movsb
popf
xchg
mov
pop
jecxz
inc
aaa
push
add
cli
and
scas
lock
stos
iret
loope
jae
adc
pop
outsb
inc
sub
test
mov
jl
mov
jle
dec
lods
lcall
sbb
insb
xchg
pop
sbb
stos
lea
idivb
mov
cmpsl
add
xor
inc
dec
es
mov
xor
mov
js
out
dec
add
int3
cmc
xor
incb
lock
cmp
into
into
call
xchg
jnp
loopne
add
add
dec
jg
cmpsb
dec
rcrl
push
int
mov
sub
or
les
push
xchg
push
je
mov
add
mov
mov
mov
pop
movsb
inc
cmpsb
pop
pop
bnd
pop
ds
pop
inc
out
fistl
sub
outsb
dec
or
movsb
xor
mov
xchg
mov
pop
inc
jg
dec
inc
bound
push
fs
sbb
sbb
add
dec
lea
cmpl
push
popa
je
pop
scas
lods
cmpsb
test
stc
xor
in
lods
sub
shll
repnz
setno
mov
popa
loop
cli
aaa
pop
lcall
mov
cwtl
add
push
cmpsl
xor
push
sbb
sub
je
cltd
and
jbe
out
daa
inc
cmp
in
fnstenv
mov
dec
xchg
push
mov
push
cmpsl
mov
pushf
xor
xor
insl
vandpd
aaa
cmp
push
mov
pop
test
lods
in
jg
mov
sub
out
aas
inc
or
dec
outsb
xchg
aas
jo
push
or
add
leave
inc
lret
push
sub
or
or
cld
pusha
pop
out
jnp
mov
shrb
inc
jns
sbb
nop
inc
push
adc
pop
loope
mov
push
push
and
dec
test
addr16
pushf
pushf
push
movsb
lret
into
or
lods
sahf
aad
pop
hlt
and
mov
das
ljmp
mov
aad
dec
push
or
test
push
sar
int
push
das
or
adc
outsl
ret
fcmovnu
int
jne
sahf
or
push
mov
push
mov
cld
cmpsl
loopne
mov
out
add
jae
sub
aaa
dec
loopne
orl
sub
repnz
sub
dec
and
pushf
mov
pop
mov
dec
sti
mov
ljmp
sub
push
push
pop
daa
lods
and
push
pushf
shll
mov
stos
sbb
and
das
call
shl
ja
add
sbb
inc
and
pop
add
arpl
in
pop
divb
jp
inc
adc
cld
mov
jecxz
aas
mov
and
test
xor
inc
das
ja
mov
mov
stos
cltd
mov
cmp
adc
lock
aaa
push
sub
and
add
ss
lea
adc
xlat
lret
stos
je
test
pop
cli
pop
push
out
xor
divb
sub
out
inc
nop
mov
dec
xchg
xchg
cmp
dec
mov
lahf
mov
out
fsubl
sbb
jle
and
push
scas
dec
lret
mov
out
ds
jns
out
xchg
xchg
mov
dec
push
jge
mov
sarb
data16
jmp
repz
lods
scas
cmp
dec
sub
add
cmp
out
pop
mov
out
mov
sub
cmp
sub
and
test
js
dec
push
sub
faddl
mov
loop
cs
push
fnstcw
insb
ret
jbe
mov
xor
mov
arpl
int
into
in
out
loope
mov
out
push
mov
popf
je
push
xchg
rclb
cmpsb
popl
bound
movsb
andl
daa
adc
dec
popa
mov
out
mov
or
aas
inc
sti
insb
mov
mov
aam
sbb
fildll
scas
mov
sbb
jnp
rcr
int3
test
mov
pop
push
aam
cmp
lods
loope
mov
mov
sub
dec
mov
call
inc
sbb
insl
adc
and
mov
or
in
std
aaa
fistl
cli
mov
sub
pop
ja
jmp
sarb
in
hlt
dec
pop
add
dec
aaa
mov
sbb
jp
mov
arpl
rclb
xchg
add
roll
cmpsl
add
mov
or
push
sub
mov
push
in
push
pushf
xor
or
scas
stc
lret
jl
adc
xchg
jns
sbb
and
jg
cwtl
add
jnp
jb
lcall
add
test
into
cli
cmpsb
sti
push
xchg
lock
repz
stos
push
ljmp
mov
nop
or
je
xchg
fisubs
adc
imul
xor
mov
dec
pop
cmp
pop
xchg
mov
test
mov
repz
arpl
lahf
sub
je
jle
dec
imul
aad
mov
xor
flds
push
mov
cltd
sub
sub
out
dec
mov
les
xor
jmp
sub
mov
inc
mov
aam
xor
inc
sub
mov
test
mov
pop
add
in
lret
mov
movsl
sbb
out
inc
or
and
sar
and
call
or
or
push
lcall
scas
sub
ret
in
pop
shlb
fwait
xchg
pop
push
inc
push
mov
dec
cmp
sub
cwtl
xchg
or
ljmp
sbb
cli
stos
xchg
scas
pop
adc
add
dec
push
inc
mov
mov
cmp
xchg
push
push
sub
negl
xor
cmc
cli
lock
add
stos
cs
inc
fs
mov
mov
jg
xchg
fbstp
call
movsl
add
das
sbb
mov
shlb
in
fs
or
jae
cmpsb
nop
mov
inc
fmulp
jb
shll
lds
clc
dec
and
shl
or
adc
subl
test
sub
stos
sbb
ret
push
jbe
inc
or
mov
in
test
add
push
mov
add
or
and
xor
movsl
fwait
cld
push
cmc
xor
push
jmp
pushf
ret
push
daa
cmpsb
sub
mov
inc
cltd
lds
ror
shrb
push
das
fistl
pop
mov
add
lea
fstpl
mov
pushf
or
jl
faddl
fidivl
mov
std
lahf
dec
movsb
sub
xchg
loop
or
fnstenv
cmp
adc
push
or
push
lock
inc
mull
lock
std
sub
addr16
adc
xor
adc
repnz
mov
sub
lret
cmp
clc
or
lret
jle
fcompl
adc
out
out
mov
stos
pop
push
lret
sub
sub
mov
push
jne
mov
cmp
xchg
roll
and
movsb
repz
push
fidivl
cmovs
les
fucomip
adc
xor
and
lcall
add
push
arpl
push
sahf
enter
aas
fisttps
sub
mov
mov
arpl
mov
xlat
pop
mov
jae
test
daa
and
sub
xor
out
insl
popa
into
cmp
cmp
jge
pop
loope
scas
xchg
aas
cmpb
ljmp
jl
ror
clc
leave
pop
mov
icebp
dec
sub
dec
movsb
mov
fsubrp
jno
out
daa
int3
push
mov
out
push
jle
and
mov
mov
test
mov
adc
ss
add
gs
cmp
cltd
push
pushf
mov
js
movsb
and
cmp
scas
aaa
jecxz
xchg
ret
cli
aam
js
in
xor
popa
idivl
dec
aam
scas
movsb
cltd
pop
inc
in
jmp
push
bound
inc
cmp
scas
addb
cmc
ss
pop
outsb
xchg
xchg
lds
dec
lret
outsl
sbb
jp
mov
shrb
xchg
mov
mov
sub
lahf
dec
in
pop
adc
inc
cld
ja
sbb
inc
push
dec
sbb
or
pop
imul
jmp
dec
out
repz
push
push
hlt
xchg
cs
bound
cmp
cmp
or
ss
xor
sbb
cmp
das
lods
stos
mov
or
outsb
and
mov
sub
dec
sbb
sbb
std
push
cmp
mov
sub
lahf
lahf
adc
jo
or
push
out
imul
jg
cltd
outsb
xchg
adc
sub
in
dec
fs
les
repnz
xor
sbb
mov
fsubr
and
or
pusha
sub
sarb
es
or
cli
pop
push
cwtl
pop
jp
add
xorb
icebp
xchg
adc
mov
jne
mov
rol
inc
fiaddl
popf
into
mov
js
faddl
mov
push
fistl
lods
insl
add
stos
jl
add
into
inc
sub
int3
ljmp
fdiv
mov
jne
sub
orl
pop
cmp
outsl
sbb
push
fnstcw
mov
jne
mov
shlb
sub
inc
roll
shlb
adc
jecxz
or
inc
mov
or
not
add
std
xor
scas
fsubrs
call
xor
inc
push
inc
jb
fisttps
pusha
sub
and
push
jp
sbb
xchg
insl
test
data16
adc
out
adc
rcrl
mov
inc
cmp
test
in
lahf
add
push
les
cltd
adc
mov
dec
xor
mov
sbbl
sub
rcr
and
mov
mov
pop
pop
das
push
cmp
pop
in
and
hlt
repnz
scas
ret
xor
dec
into
aad
fisttpll
xlat
jg
sbb
pop
or
xor
xchg
pop
pop
push
scas
pop
fs
jne
sbb
movsl
movsb
ljmp
xor
cmp
dec
rol
pop
dec
stos
push
imul
xor
inc
xor
push
lret
xchg
das
and
xchg
dec
inc
test
jl
pop
incl
rcrb
mov
movsl
sub
and
jge
rcrb
neg
into
in
xchg
xchg
pop
movsb
mov
out
fistps
push
movsl
push
dec
rcl
inc
mov
mov
xor
adc
cs
mov
pushf
enter
leave
mov
stos
outsb
and
ljmp
add
xchg
aad
xor
in
jp
jge
pop
cmpsb
lods
decl
cmpl
add
add
mov
sub
sti
fstpl
xorb
aad
mov
fdivrs
jg
insl
test
decb
lods
xchg
pop
jb
movsl
xor
fdivl
dec
xor
stos
scas
shrl
mov
ret
fs
adc
out
mov
pop
dec
icebp
lods
loope
lret
jne
adc
and
orps
inc
test
in
pop
cmp
popa
cmpl
in
xchg
into
mov
js
push
inc
mov
imul
das
cltd
imul
rcrl
cmp
dec
negl
adc
add
jecxz
add
jno
add
mov
pop
sbb
in
jae
adc
mov
in
xchg
dec
mov
add
push
xor
ja
cmpsl
xor
add
mov
add
out
xchg
mov
xor
imul
pushf
inc
push
jmp
rcll
popa
xor
ret
mov
mov
xchg
fsubs
ljmp
mov
out
aas
push
call
aas
mov
sbb
jp
dec
pop
mov
call
in
or
scas
cmp
xchg
push
cli
lret
adc
push
sbb
pop
sbb
lods
ret
aaa
repz
sbb
lahf
cmp
jg
or
dec
rorb
lock
or
cmp
cltd
aam
mov
push
and
divb
subl
lahf
mov
jae
ret
lahf
sub
icebp
leave
add
jo
add
pop
inc
and
cmp
sub
jbe
stos
mov
movsb
dec
jo
out
jmp
insl
jbe
inc
test
push
jg
dec
lahf
andb
call
cmp
mov
add
cmp
std
pushf
mov
push
cmp
dec
bound
cmp
jne
and
leave
mov
sub
cmp
je
mov
out
sbb
cmpsl
adc
movsl
inc
sub
mov
aas
scas
add
push
enter
jp
jp
mov
popf
sub
mov
add
jne
test
cltd
mov
into
mov
cmp
mov
mov
je
insl
xchg
into
pop
arpl
decl
mov
addr16
iret
in
fs
pop
mov
cltd
push
mov
mov
popa
stos
sarb
push
mov
push
aad
in
scas
outsb
dec
xor
fdivr
in
leave
or
add
gs
adc
pop
jl
sub
les
push
cmc
sarb
sub
mov
adc
sti
push
enter
loopne
insb
cmc
jae
lea
cmpsb
ret
xchg
push
jg
jns
add
shll
clc
xchg
sub
cmpsl
fs
mov
jnp
dec
push
sbb
xor
sbb
js
add
pop
mov
test
jl
jne
mov
ret
mov
or
push
pop
loop
sbb
lcall
sub
addr16
cmp
fdivp
pop
pop
shr
inc
imulb
into
cld
enter
movl
pop
je
inc
push
jmp
sub
loopne
mov
xchg
aas
insb
ror
cmp
xlat
xor
cs
adc
cmp
fwait
ret
movsb
cmp
pushf
push
adc
sub
pop
push
mov
jbe
sub
lcall
out
adc
xlat
or
mov
leave
rorl
idiv
cmpl
in
std
test
xchg
add
dec
add
sti
mov
xchg
xchg
mov
jl
mov
sbb
push
aaa
and
negl
std
fsts
cli
xlat
push
aas
jmp
sub
jecxz
enter
sub
fcoml
inc
inc
sbb
leave
add
shlb
mov
dec
mov
push
aas
adc
sbb
out
hlt
add
shr
xor
ret
mov
ljmp
das
aas
fs
cmpsb
sbb
jge
push
lret
mov
pop
repz
add
xchg
inc
jns
mov
mov
inc
push
sub
pop
sbb
xor
inc
inc
or
outsb
and
inc
push
sbb
inc
dec
pop
mov
mov
fsubl
mov
cltd
in
fsubrp
lock
mov
inc
cli
inc
mov
jmp
shl
xlat
push
gs
ret
xchg
in
add
test
rcl
popf
add
icebp
pop
mov
js
sbb
lea
lret
ljmp
cltd
xchg
mov
mov
push
insb
aaa
adc
add
fidivrl
fstp
out
jb
xchg
mov
cs
mov
adc
and
sahf
in
call
inc
ljmp
cli
movsb
roll
daa
mov
test
push
int
sar
dec
jbe
lretw
loope
insb
frstor
dec
xchg
push
test
xchg
das
push
andb
sar
repz
rep
sbb
mov
add
xor
hlt
or
xor
dec
mov
cmp
clc
jecxz
fisttps
adc
cmc
jbe
fsubrs
xchg
call
leave
cmp
test
add
pinsrw
xor
jno
push
and
add
and
push
dec
int3
ds
stos
inc
dec
mov
sti
lock
bnd
pusha
sbb
int3
fdivrl
ffreep
sti
or
cli
dec
or
stos
mov
dec
push
sti
or
lods
mov
divl
sahf
sti
aaa
jbe
inc
fsubs
jns
xor
pop
fs
sti
or
add
outsl
pop
mov
mov
test
sub
addr16
mov
sub
repz
mov
adcl
fists
sub
inc
ret
sbb
add
in
xchg
in
or
stos
jl
xchg
nop
mov
shlb
mov
enter
out
cmp
aaa
dec
movsl
fucomp
mov
out
outsl
aas
sub
lock
out
push
fisttps
cmp
add
jg
out
clc
lcall
fsubs
ret
mov
xor
bound
sbb
mov
jecxz
and
arpl
sbb
push
inc
lea
pop
jae
xor
lcall
out
mov
cli
pop
cld
je
push
inc
outsl
fidivs
testl
push
mov
lret
adc
stos
push
mov
and
fildl
push
lea
mov
mov
inc
push
rclb
jnp
or
push
mov
lret
or
cwtl
stos
xor
xor
and
ja
js
or
pop
or
xchg
xchg
add
call
clc
lret
push
push
std
les
lods
sbb
lds
dec
outsl
mov
pop
call
popf
jmp
scas
ret
xchg
stc
fists
stc
pop
adc
int
adc
jl
add
popa
fsubrl
push
aas
outsb
push
aad
scas
or
scas
pop
jo
iret
hlt
add
dec
pop
cmp
cwtl
sub
dec
jns
cli
or
push
add
pop
out
jnp
pop
push
adc
sub
mov
adc
test
dec
inc
adc
jmp
add
mov
pusha
sbb
push
scas
or
xchg
test
stos
dec
push
idivl
dec
dec
arpl
fsubrp
xchg
jmp
cs
ret
push
out
nop
push
pushf
jmp
xor
xchg
mov
push
sub
lret
sub
mov
xchg
jbe
sbb
nop
xor
lcall
dec
cmp
mov
cmpsb
dec
in
mov
rcrl
inc
mov
mov
mov
adc
shr
dec
orb
pop
mov
add
lret
dec
jns
fsub
jne
faddl
adc
mov
mov
cmp
shll
fsub
iret
pop
adc
or
xchg
inc
clc
sbb
sbb
out
dec
fwait
jle
add
jb
dec
mov
ljmp
cmp
outsl
fst
inc
or
xlat
inc
jo
loopne
inc
sbb
xchg
adc
or
outsb
cs
jmp
and
lea
cmpl
dec
jle
out
jge
popf
xchg
add
jmp
insb
jp
cmp
lods
mov
outsl
das
jbe
les
out
xor
pop
cmp
dec
adc
jge
mov
push
mov
pop
xlat
xchg
sbb
mov
xor
pop
mov
jno
shrl
sbbb
jecxz
jl
pop
xchg
popf
ljmp
mov
cltd
shll
xor
rcr
sbb
int
cmp
xor
dec
sbb
data16
mov
orl
test
popa
repnz
insl
or
sub
cmp
out
mov
jae
repnz
push
xchg
addr16
test
and
push
push
iret
and
dec
daa
jl
test
lcall
sarb
push
inc
xor
pop
fs
adc
cmp
pushf
and
or
pop
pop
inc
sub
jg
movsb
mov
cld
test
cwtl
int3
xchg
xchg
imul
enter
pop
push
or
les
xor
jbe
and
fiadds
popa
ds
add
inc
jb
xchg
les
jb
jb
test
jmp
dec
test
push
jne
sub
loope
sbb
inc
inc
and
mov
pop
vshufps
fcomip
pop
or
jns
imull
hlt
xchg
addr16
pop
add
dec
ret
adc
mov
push
incl
das
dec
adcl
jle
push
mov
and
jle
cmpsb
xor
ret
xchg
imul
aaa
in
dec
imulb
je
xchg
cmp
pop
fs
mov
gs
cmp
stc
pop
pop
or
add
push
add
sbb
add
aas
cmpsb
xor
cltd
inc
and
mov
xchg
lds
test
push
cs
scas
add
mov
xchg
mov
pop
jo
xorb
dec
xor
clc
push
imul
mov
xor
and
iret
test
fcoms
js
lock
add
aas
daa
cli
sub
xchg
adc
or
clc
cmp
inc
jge
mov
int
outsl
lret
into
scas
jo
add
in
push
iret
or
shlb
int
pop
movb
jb
push
imul
ss
and
scas
adc
xlat
subl
int3
dec
pop
inc
pop
call
lcall
ror
cmc
sbb
add
push
icebp
mov
rol
aad
mov
dec
ret
cmp
jb
lea
sbbb
fwait
and
mov
out
push
int
adc
ss
clc
add
loopne
sbb
enter
lods
add
call
daa
pop
xor
jne
sar
jmp
jo
aam
jno
or
mov
imul
xchg
xchg
data16
ffree
test
fbld
data16
hlt
inc
nop
pop
pusha
iret
lret
dec
push
scas
and
test
pushf
aam
fidivrl
cmpsb
dec
cmp
mov
imul
cld
aas
lea
or
cmp
lahf
mov
imul
mov
and
adc
test
inc
pop
clc
cmpsb
mov
sbb
push
std
add
dec
cmp
pop
mull
bound
jo
add
mov
mov
shl
popf
movsb
mov
lds
lods
or
adc
inc
pop
xor
pusha
mov
ds
ficoml
ret
sbb
xchg
je
xchg
repnz
jne
mov
add
leave
adc
fwait
sub
sbb
dec
test
fbld
das
insl
inc
cli
push
pop
mov
jbe
add
xor
adc
adc
cmp
rcrb
or
or
dec
movsl
repnz
cmpsl
outsl
xchg
push
dec
pop
xchg
shll
pop
jmp
cld
shrb
outsb
lods
mov
cmp
mov
sub
mov
mov
mov
mov
test
test
scas
fsincos
movsb
andl
push
fidivl
and
scas
sub
iret
jo
jg
pop
jbe
popf
mov
test
mov
adc
insl
leave
add
sbb
and
sbb
jmp
in
xchg
iret
sbb
les
lock
xlat
dec
sahf
lods
hlt
mov
fs
inc
addb
push
movsl
sbb
inc
int
cmp
stos
push
shl
aad
mov
into
jbe
call
cmc
dec
jnp
push
aaa
push
xchg
mov
sub
psubw
loop
outsl
mov
sub
sub
fisttpll
js
and
pop
push
sub
shrb
mov
hlt
pop
ds
sub
sub
out
stos
adc
stos
jno
jge
mov
js
mov
mov
mov
sbb
add
rorl
les
pop
and
cld
mov
xlat
cmp
idivl
mov
imul
sub
mov
pop
lahf
imul
orl
dec
mov
or
sbb
and
scas
imul
jl
xchg
xchg
xchg
shlb
test
add
pop
and
stc
mov
fldcw
notb
xor
popf
sub
sti
cltd
leave
push
push
xchg
mov
enter
cmp
and
inc
std
addb
in
stos
mov
ds
push
dec
sbb
pusha
sarl
inc
clc
mov
add
scas
int3
lds
addr16
shl
rolb
cwtl
sti
loope
xor
das
and
call
icebp
daa
dec
fisubl
cmp
cli
jb
mov
pop
mov
repnz
adcb
dec
lea
xchg
lods
cli
lods
pop
in
xchg
imul
cmp
mull
push
adc
mov
mov
pop
in
sbb
mov
mov
in
into
cld
jl
sbb
sub
xchg
sbb
lret
mov
in
jb
push
notl
stos
lods
ret
je
jge
cltd
jns
xchg
mov
scas
jl
pop
sbb
imul
add
fistl
pop
js
xor
fsubr
jmp
xor
xorl
add
xor
test
push
sbbl
jmp
out
push
icebp
stos
ret
testb
push
rcr
jle
aas
or
inc
mov
std
decb
cltd
nop
repz
movsl
jp
add
sbb
inc
add
cmp
or
mov
jmp
xchg
lock
and
addl
sub
repz
dec
add
fs
arpl
fnsave
jg
lret
add
dec
imul
adc
rcrb
mov
mov
jno
push
std
inc
out
lods
fidivrl
notb
jge
jmp
push
insb
dec
or
pop
cmp
and
in
mov
pop
daa
sbb
jmp
sub
ds
sub
mov
cld
sbb
sub
scas
in
cmp
sbb
lea
push
sbb
repnz
ret
mov
fmul
cmpsl
filds
pop
lcall
adc
jmp
push
dec
scas
lahf
das
dec
rorl
shll
add
in
jne
fimuls
scas
out
jp
fsubrs
fs
xchg
ret
in
cld
push
jns
adc
int
add
aas
push
and
sub
dec
imul
int3
rclb
xchg
scas
bound
cmp
sti
movsl
xchg
aas
sub
jne
push
ffree
mov
cld
stos
lods
mov
pusha
adc
push
clc
lea
arpl
scas
pop
inc
jae
shr
push
std
mov
dec
pop
jmp
dec
sbb
push
xor
mov
sub
aad
aas
xchg
psrlq
mov
imul
cmpl
or
push
or
xchg
mov
daa
dec
nop
std
mov
lock
sbb
in
shr
repnz
mov
xor
jp
push
xchg
insl
sub
xorb
in
cmp
ret
xchg
in
mov
cmp
mov
sub
comiss
ss
loopne
outsb
insl
clc
stos
cwtl
add
mov
in
mov
jo
push
jno
fwait
sbb
fidivrl
xchg
loopne
xchg
xor
ret
pop
add
dec
dec
cmpsl
imul
mov
jmp
xchg
cmp
sbb
cwtl
mov
lea
add
cmp
fistps
push
adc
lods
dec
mov
mov
add
aas
xor
push
pop
aas
jae
mov
movsb
shll
jle
fwait
sub
ljmp
pop
rol
pop
adc
cwtl
pop
mov
out
sti
mov
in
jb
arpl
dec
sbb
test
mov
mov
out
push
sti
icebp
jge
jl
test
push
xchg
push
mov
out
inc
cmp
icebp
mov
sbb
mov
jmp
jnp
cmp
sbb
out
add
sub
ja
push
aaa
xor
in
xchg
jp
pop
and
js
mov
roll
xchg
sbb
mov
nop
xor
sahf
xor
movsl
in
jno
cli
xchg
push
inc
cmpsl
cmp
lock
cs
pop
mov
add
faddl
dec
cmpsl
adc
ds
inc
inc
push
aad
push
mov
jns
jbe
int
movsl
int3
addr16
pop
push
sbb
data16
mov
insl
push
xchg
jle
insl
push
fsubrl
aam
movsb
sbb
roll
aad
push
fs
int3
imul
jmp
fdivrs
push
shrl
add
jl
iret
add
pop
outsl
sahf
adc
mov
test
dec
test
xchg
imul
lock
cmpb
add
test
add
or
or
sub
xchg
push
repnz
scas
test
cltd
mov
inc
cs
xor
iret
push
jns
mov
shr
dec
into
ds
or
nop
movl
sub
add
push
xchg
jmp
cltd
popf
in
insl
mov
leave
add
sbb
call
pop
jbe
xorb
icebp
lret
mov
jnp
scas
jns
daa
lock
cld
sar
cmpsl
popf
jae
jbe
mov
push
orb
cmp
adc
push
push
lret
fmul
test
add
fnstsw
mov
xor
sub
cmp
stos
pop
out
and
cmpsb
lods
and
cmp
sbb
out
mov
stos
jbe
inc
mov
scas
idiv
add
rorb
insb
jne
xor
dec
jae
cmc
out
add
push
push
scas
cs
sub
in
rorb
jp
fidivs
pop
negl
aam
out
push
jge
lock
jns
or
pusha
gs
enter
fisttpl
inc
sub
push
pop
iret
dec
add
lds
out
cld
xor
inc
mov
enter
mov
movsb
jmp
fcoml
xchg
pop
jo
out
imul
lods
ja
and
out
lcall
das
andb
jle
adc
outsl
sti
jg
cmp
mov
movsl
mov
stc
fidivs
push
push
sub
add
xchg
ret
and
sbb
les
and
push
adc
cmpsb
or
scas
and
fisttpll
add
mov
adc
in
jnp
cmc
sarb
inc
in
xchg
jne
shrl
popa
mov
imul
jmp
add
popf
jnp
or
or
mov
xchg
popa
jne
ret
rclb
mov
add
push
xchg
push
jne
loopne
test
stos
and
or
and
sub
xchg
int3
mov
imul
and
fcoml
dec
or
push
in
add
mov
sbb
mov
addl
stc
sbb
fdivrs
jmp
mov
mov
movsl
add
movsl
in
test
data16
add
inc
sti
sub
pop
jle
int
fldenv
inc
fadd
in
movsl
adc
mov
xchg
or
lret
scas
jecxz
enter
pop
xchg
arpl
clc
xchg
dec
sbb
jmp
int
dec
movsl
mov
push
out
fsubs
mov
aam
xchg
mov
movsb
pop
mov
add
xchg
fs
repz
add
outsb
outsb
insb
ja
nop
xor
sti
int3
push
mov
inc
gs
push
jae
sub
push
popf
xchg
andb
mov
cmpsb
pusha
fisubrl
incb
cs
jle
push
call
jmp
mov
sahf
negl
push
sbb
aam
icebp
push
popf
in
push
sub
or
scas
bound
mov
xchg
fidivrs
jg
ret
pop
idivl
jnp
lods
mov
sub
or
ss
or
mov
xchg
jae
sbb
or
in
fbld
add
inc
mov
or
ljmp
std
sub
mov
mov
inc
push
sub
mov
sbb
les
sub
mov
or
in
sub
into
sbb
loopne
dec
push
and
pop
enter
sub
stos
cmc
jmp
stos
dec
jnp
jo
fdivl
dec
je
fisubs
xor
pop
sbb
sbb
out
stos
icebp
call
xchg
jno
mov
xchg
hlt
sub
sbb
repnz
loopne
hlt
adc
mov
sbb
dec
mov
mov
test
test
lcall
gs
les
dec
std
cmc
out
jnp
xchg
sub
mov
repz
jne
xchg
and
aam
add
or
cmp
dec
push
push
shl
jne
call
push
pop
movsb
ret
push
mov
nop
mov
push
push
xor
or
or
xchg
popa
lret
nop
cmpsl
push
sti
mov
mov
dec
imul
pop
fdivs
sub
dec
test
xor
ljmp
imul
adc
call
pop
arpl
fld
cwtl
adc
sbb
enter
or
jle
xlat
call
sub
fisubs
sub
lcall
scas
sbb
dec
cmp
push
pushf
mov
push
dec
or
fildl
xchg
jl
and
jbe
and
sarl
jne
leave
ss
rep
cld
xor
lds
addb
xchg
cmp
mov
or
movsb
rclb
aas
shl
es
shl
or
push
push
pop
dec
repnz
mov
add
and
mov
dec
mov
jmp
cmp
fdivrp
mov
scas
jmp
shl
jbe
cmp
add
or
push
sbb
sahf
ret
shlb
mov
mov
scas
fs
iret
inc
mov
aad
mov
pop
outsl
fcompl
call
movb
push
add
mov
add
add
dec
fldenv
mov
ss
fildl
push
pop
cmp
imul
jae
addr16
fcomps
scas
push
xor
mov
adc
jo
jecxz
pop
xor
xor
ret
ds
ret
or
cmp
cltd
mov
xchg
cld
testb
sbb
popa
roll
and
rcrb
rcr
dec
repz
popf
add
movsb
outsl
aas
mov
and
adc
icebp
mov
inc
mov
rclb
sbb
xor
gs
jne
mov
loopne
mov
mov
jne
idiv
pushf
adc
push
aaa
into
xchg
and
adc
inc
mov
hlt
xorb
insb
fnstcw
cmpsb
int3
mov
or
dec
movsb
and
int3
lods
adc
orl
cmp
and
aad
mov
shl
ljmp
in
jg
jo
cmpsl
cmp
pop
iret
shrb
mov
inc
add
pop
sub
adc
inc
in
in
xor
aaa
dec
jnp,pt
mov
cmp
sub
neg
cmp
add
sub
fmull
jle
adc
aam
xchg
pop
sbb
mov
imul
iret
push
inc
xchg
iret
inc
mov
mov
hlt
mov
pusha
xor
inc
xchg
add
inc
pop
ret
push
xchg
mov
lahf
shrl
shrb
inc
sbb
ja
les
sbb
pop
add
adc
jne
sub
jg
flds
xchg
cmc
dec
lds
xor
jno
add
out
or
lods
and
popf
movsb
mov
inc
lret
push
in
flds
jle
ret
and
or
jae
or
adc
jo
das
cmc
mov
and
mov
cmp
or
repnz
dec
insl
cmc
cli
dec
ss
mov
gs
or
dec
cmp
sub
xchg
jne
sbb
les
adc
pushl
mov
sbb
pop
inc
stos
mov
jle
adc
insb
add
adc
push
mov
movsb
call
andb
fs
loope
cmp
das
adc
mov
fisubrl
das
jp
and
pop
pop
jle
popf
ja
mov
test
inc
aam
bswap
adc
int3
scas
jo
popf
push
test
sbb
or
das
add
adc
xor
cmp
cmp
jg
xchg
push
sbb
shlb
into
sbb
roll
push
das
inc
cmp
repnz
ret
filds
pop
sub
sbb
xor
dec
inc
int
dec
sbb
mov
pop
jmp
test
mov
scas
xor
inc
idivb
xor
dec
shlb
pushf
enter
xor
add
stc
mov
loope
cmp
rcrl
loope
repnz
xchg
adc
ret
lods
push
aad
cmp
fucomi
pusha
xlat
stos
cmp
mov
sbb
cmc
mov
cmp
popa
dec
mov
or
or
aad
call
sahf
aaa
ret
test
les
push
cltd
adc
sub
insb
mov
adc
mov
cmp
cmp
jle
dec
inc
xchg
xor
xchg
js
push
cmpb
mov
std
or
enter
lcall
sbb
lods
jle
pop
rorl
mov
jg
jg
js
adc
dec
fstl
icebp
jo
std
stc
mov
out
pop
stos
mov
push
popa
int3
sub
add
xor
mov
jo
movsl
mov
push
in
fnsetpm(287
xor
pop
xchg
pop
lods
push
sti
outsb
cmp
add
fbstp
jno
sub
inc
mov
lret
sbb
enter
lds
jmp
mov
jp
sbb
cld
imul
sbb
and
jo
scas
pop
jbe
cmp
sub
rorl
int
inc
mov
sbb
lods
add
test
jnp
hlt
inc
fadds
adc
jb
inc
subl
xchg
jge
add
addl
ljmp
cmp
popa
cmp
add
mov
and
lds
push
pop
stc
rol
jns
out
mov
mov
push
push
push
fwait
or
iret
test
xor
addl
mov
rcr
fisubrl
fidivl
scas
fimuls
clc
push
mov
adc
mov
das
and
test
vpshufhw
ficoms
out
xchg
lea
movsb
lds
imul
setge
aam
test
or
sub
jns
jecxz
inc
arpl
int
and
push
jne
andl
push
sbb
lods
xor
rorb
aaa
pop
lods
jl
call
sub
jb
xchg
leave
int
jo
add
pop
int
xchg
stos
fisttpl
push
dec
push
stos
cli
shlb
jae
jmp
mov
loopne
sti
push
xor
jl
test
jp
xchg
jecxz
xchg
jle
addr16
xchg
inc
fwait
lods
mov
ficoml
movsb
and
imul
daa
popa
ret
imul
jge
sub
push
lea
cmpsb
add
in
data16
add
mov
dec
imul
pop
xor
stos
test
dec
push
push
dec
test
cmp
xchg
mov
in
fisttpll
xlat
adc
dec
stos
aas
ljmp
xchg
inc
cwtl
mov
dec
cld
xor
xchg
cs
lock
insb
jmp
in
sub
cltd
movsb
mov
jecxz
pop
andb
dec
inc
sbb
fmul
stos
mov
sub
rclb
pop
sub
cmp
xchg
jg
or
sarb
jle
je
es
aaa
dec
xchg
fisttps
pop
sub
jo
loopne
dec
add
mov
push
or
xchg
lret
cmp
lods
jnp
testl
push
dec
and
icebp
add
decl
fdivs
mov
push
jge
lea
jbe
sbb
xor
fdivrp
les
mov
xor
pop
adc
hlt
and
sbbl
fisttps
repnz
cmpsl
cmp
stos
xor
andl
loop
es
mov
add
jb
xchg
sbbl
and
pop
pop
add
stos
mov
aas
clc
aad
repz
stc
or
sub
or
push
aad
sbb
fwait
in
xchg
adc
ljmp
push
inc
gs
push
inc
rcll
xchg
inc
adcb
push
jmp
sbb
cmp
add
adc
sbb
fdivs
or
ja
addb
push
mov
data16
inc
dec
in
out
scas
mov
xchg
and
hlt
scas
cmp
dec
popa
jmp
test
mov
pop
inc
push
es
or
jl
sbb
pop
pop
xor
xchg
xchg
push
mov
fcmove
js
cmp
sahf
test
adc
jmp
pop
call
repz
inc
es
xchg
jp
mov
outsl
gs
push
cmp
mov
fwait
pop
sbb
lock
sahf
test
mov
daa
mov
sbb
inc
dec
mov
sbb
and
imul
inc
mov
push
mov
sub
test
stc
in
dec
mov
xchg
pop
cmpsl
dec
pusha
pop
fildl
xchg
out
jle
mov
sete
push
fucomp
pop
mov
pop
es
int3
mov
rcrl
push
mov
xchg
xchg
jnp
push
push
sub
add
daa
stc
pop
orb
movsl
fdiv
int
dec
adcb
cli
imul
pop
sbb
clc
pop
and
xchg
pop
jg
stc
inc
and
cs
into
scas
sbb
int
push
inc
loopne
mov
outsb
add
shrb
mov
pop
out
cmpb
and
and
rol
and
or
jae
xchg
jmp
call
jecxz
and
in
and
or
js
dec
stos
mov
fs
jmp
loop
xchg
or
add
push
pusha
mov
hlt
imul
dec
cmp
fiadds
push
iret
aad
pushf
rol
sub
jno
mov
mov
mov
dec
pop
ja
lret
cmp
clc
pop
mov
aad
sub
movsb
cs
imul
out
push
xchg
inc
xchg
sub
sub
je
hlt
lcall
je
ja
nop
lret
add
enter
js
outsl
mov
mov
jbe
sbb
ficoms
ret
lea
lds
std
dec
push
inc
adcb
xor
insb
into
hlt
jecxz
out
popw
sbb
ret
int
jmp
jne
pop
lock
out
je
pop
ss
and
pushf
or
and
clc
fs
xchg
lea
pushf
testb
loop
ja
xlat
imul
test
adc
aam
dec
shll
lock
fs
sbb
jb
xor
negw
rcrl
inc
and
lods
mov
pop
xor
push
dec
pop
loop
pop
sub
loop
in
into
pop
and
minps
mov
pusha
dec
adc
push
imul
inc
mov
loope
pop
inc
imull
inc
pop
xchg
mov
jmp
outsl
shll
sti
insl
imul
sbb
out
and
add
sub
aam
aaa
in
cmp
inc
sbb
push
sub
xchg
push
mov
jo
xchg
xchg
leave
test
jne
sub
pop
loopne
lret
jmpw
leave
les
nop
loopne
add
out
andl
rolb
cmpsb
pop
cmpsl
or
out
mov
dec
nop
gs
mov
outsl
inc
test
jg
fmull
mov
fnsave
out
rcl
leave
inc
test
bound
or
in
sub
mov
lock
mov
pop
into
xor
daa
out
cltd
push
mov
cmpsb
test
pop
push
sbb
xchg
hlt
out
rorb
cld
or
adc
sarl
sub
jg
jge
push
xchg
inc
or
clc
decl
movl
cld
imul
pop
stos
fstp
add
jle
out
outsl
lock
aad
adc
mov
mov
mov
mov
mov
ss
add
ud1
dec
mov
xchg
mov
dec
js
push
test
stc
adc
in
and
nop
rolb
std
ffree
mov
xchg
cwtl
pushf
or
loop
jle
imulb
jp
cltd
lods
cmp
or
mov
shufps
push
or
push
xchg
cmc
out
rolb
mov
test
cmpsb
jle
cmp
dec
sti
jl
jmp
mov
cmp
and
mov
xor
hlt
in
sub
mov
push
pushf
data16
mov
decl
lods
in
out
xchg
outsb
bound
and
dec
pushf
cmp
call
in
pop
dec
cmc
cltd
dec
aad
add
dec
cltd
insb
roll
add
mov
mov
push
pop
mov
loopne
add
cmp
out
fwait
jne
sub
fnstenv
bound
push
cmpsl
add
sbb
sbb
mov
leave
sub
test
fbstp
pop
fcomps
xchg
cmp
fwait
outsb
and
xchg
inc
lret
call
push
add
jge
lock
dec
inc
sbb
add
scas
push
dec
and
addl
add
in
into
sbb
ret
xor
into
sub
xor
cmc
into
sbb
mov
into
add
sbb
pop
cmp
xchg
jns
xor
cli
jmp
std
pushf
call
add
push
inc
push
xchg
pop
mov
fcompl
pop
lds
and
jmp
dec
in
repnz
dec
hlt
aam
bound
mov
push
cmp
add
cmp
or
or
shll
ljmp
neg
inc
push
cmp
pop
pop
addr16
shll
xlat
out
or
mov
lahf
dec
xor
cmc
mov
mov
or
icebp
dec
rcll
pop
loopne
mov
das
jbe
push
cmp
push
scas
jae
xchg
jmp
or
in
ljmp
imul
gs
adc
fadds
std
pushf
cmp
push
push
and
data16
aam
push
ljmp
push
sbb
push
jne
mov
pop
into
ret
out
aaa
repz
leave
iret
add
dec
pop
cltd
out
and
adc
iret
xchg
fsubr
sbb
jge
clc
jge
mov
sub
lcall
push
cwtl
dec
cmp
lret
xor
enter
sbb
fs
std
and
fwait
inc
mov
ss
in
idivb
push
cmp
add
test
lea
mov
or
cmp
in
bnd
sbb
pop
cmc
movsl
xchg
add
push
jmp
addr16
daa
add
sarl
sub
add
sbb
rcll
js
xor
repnz
push
movsb
jb
les
xor
cwtl
cmp
sbb
cmp
mov
adc
xchg
xchg
pop
pop
mov
stos
cld
sub
test
dec
andb
ja
and
push
imull
xchg
sti
xchg
lcall
or
mov
and
stos
jge
inc
pop
xor
cmp
out
jmp
ja
imul
call
and
adc
subl
data16
sbb
inc
and
mov
adc
das
cli
cli
inc
xchg
xchg
sub
jmp
mov
or
fsub
mov
sub
test
aas
inc
repz
test
scas
add
fadds
in
sbb
mov
fdivrs
fdivr
jge
into
in
fbld
inc
mov
int3
sbb
add
mov
pop
rcrb
or
xor
lods
pop
push
sub
dec
ja
repz
pop
push
mov
test
jp
pop
insb
jns
cmpsl
and
or
loope
gs
xchg
jmp
xchg
push
jnp
xchg
jno
xorl
cmc
repnz
jo
cli
adc
or
cmp
jge
mov
clc
add
jl
sar
or
ja
std
cmp
cmpsb
jne
lcall
or
cmp
cmp
or
decl
xor
push
inc
and
adc
and
add
inc
sub
push
das
xchg
into
push
stos
fdivr
and
dec
push
imul
cmp
dec
clc
outsb
cmp
mov
test
xor
orl
hlt
pop
jae
ljmp
mov
jne
lahf
out
es
dec
cli
rcl
xchg
das
mov
ljmp
jmp
push
test
lock
and
jno
mov
aad
out
xchg
clc
mov
xchg
add
dec
pushl
stos
test
scas
pop
pop
push
pop
jle
popf
aad
adc
jecxz
stc
sub
and
cmp
mov
inc
mov
pop
stos
sbb
sbb
lds
xor
and
push
dec
mov
mov
sub
dec
fs
js
push
lods
push
stos
repnz
aad
jmp
in
sbb
lds
xchg
nop
fs
lock
insb
jbe
cmc
xor
sahf
mov
mov
repz
and
mov
add
mov
dec
sub
idivl
daa
ret
sbb
pop
pushl
add
cmpsl
imul
fwait
or
repz
cmp
addr16
adc
or
push
dec
cs
mov
and
nop
xchg
lock
mov
loope
call
subb
add
dec
push
push
dec
lods
cmp
mov
daa
std
push
iret
js
adc
sarl
loopne
jno
add
lcall
in
into
jae
aad
xchg
test
repnz
out
out
push
movsl
leave
lds
pop
mov
cmp
mov
jns
int
push
lds
fisubl
movsb
add
dec
push
js
arpl
push
dec
adc
and
popa
loope
jle
inc
inc
pop
or
mov
mov
pop
lods
sub
scas
es
mov
cmp
int3
movsl
outsb
push
xchg
insb
adc
imulb
adc
xlat
in
ret
rcl
sub
add
pop
sub
shr
cmp
cmc
insb
mov
scas
jb
mov
fs
leave
cli
or
jne
sub
cmp
xor
dec
fidivs
xor
cmp
cli
xor
popf
repnz
pop
xor
fcoms
gs
jmp
icebp
sub
in
jle,pn
xor
jp
jns
shl
lods
in
insl
cmp
insb
mov
out
fbld
xchg
add
pop
xor
ret
pusha
inc
cltd
and
jl
std
scas
fcmovb
lahf
call
jbe
outsl
adc
decl
pop
xor
mov
xchg
pop
loopne
mov
hlt
mov
scas
add
add
sub
mov
jge
push
mov
push
and
cld
pop
sub
lahf
adc
ret
in
scas
mov
mov
add
mov
lret
pop
push
cmpsb
imul
data16
sbb
and
js
pushf
aas
push
in
cmp
cmpsb
jl
lds
dec
arpl
fldl2e
cmpsl
or
push
insb
jne
pop
jnp
and
in
negb
mov
mov
pop
inc
or
jmp
add
addr16
aaa
fdiv
rorb
push
mov
mov
repz
mov
pop
enter
or
psubusw
aas
adc
mov
dec
repnz
movsb
fwait
cmpsl
push
loop
mov
into
ret
and
xor
sub
dec
clc
dec
xchg
sub
rcll
aaa
push
fnsave
lods
or
rcr
sbb
jne
inc
jae
or
or
inc
push
inc
and
xchg
ljmp
sub
nop
push
sub
popa
cwtl
movsl
xchg
je
test
push
insb
mov
aaa
cmc
lods
cmpsb
lods
sti
xchg
pop
stos
fwait
jne
out
pusha
xor
jbe
int
aaa
sti
xchg
iret
mov
xchg
mov
pop
push
sti
pop
push
xchg
in
push
push
xchg
jge
xor
dec
lds
cmp
imul
fcoms
stos
xchg
lahf
cltd
cld
inc
push
popf
lret
jge
inc
adc
mov
and
ficoml
decb
sub
mov
loope
jge
fwait
add
sub
mov
ljmp
dec
sub
rolb
jb
mov
and
fwait
mov
popa
lds
sub
mov
lods
jb
loopne
fildll
push
mov
gs
wrmsr
das
inc
push
leave
cmc
pop
addr16
dec
leave
and
xor
push
cld
imull
inc
sbb
popf
test
xor
pop
fisubs
popa
pop
sarb
cld
sbb
push
or
inc
xchg
incl
jg
sbb
and
fldenv
adc
inc
sti
popf
bound
ret
xchg
lds
fsts
inc
jmp
xchg
inc
mov
lock
and
inc
push
je
cmpsb
addr16
push
lahf
loope
add
stos
xor
sbb
sbb
popa
cmp
imul
jbe
sbb
leave
in
dec
mov
inc
push
dec
clc
push
je
iret
sbb
push
sub
cmp
fistps
popa
in
pop
jne
inc
sub
sbb
repz
mov
mov
cmpsl
lea
xor
jp
mov
filds
pop
movsl
je
mov
sti
add
fmuls
inc
negb
test
leave
adc
jle
mov
and
loope
push
inc
adc
xor
ss
popa
adc
jne
push
dec
push
xchg
dec
xchg
sbb
fistpl
add
mov
jp
insl
xor
mov
add
pop
sbb
mov
in
inc
call
jge
mov
mov
push
repz
mov
daa
jnp
int3
push
enter
jle
or
push
test
cs
cmp
clc
test
xchg
std
roll
jl
test
icebp
lods
repz
push
mov
cmp
nop
lcall
cwtl
xor
out
fld
xor
push
lcall
aaa
std
mov
cmpsb
cmp
jb
cmp
jns
jmp
sub
loope
notl
xor
xchg
jns
sbb
in
aam
mov
sub
xchg
push
jo
mov
inc
sub
ficomps
aas
inc
leave
push
lcall
mov
shll
push
sub
dec
pop
inc
adc
xchg
pop
cs
stc
es
jp
loop
leave
sub
int3
mov
pop
hlt
inc
mov
movsb
cld
mov
pop
aam
sbb
scas
movsl
xchg
adc
mov
fildl
dec
out
lret
fwait
cmp
repz
mov
inc
cmp
fbld
xor
jge
mov
or
mov
sub
popa
js
lahf
cmp
ja
push
dec
insb
data16
subb
cmp
add
int
popa
xchg
mov
aaa
adc
and
mov
call
dec
push
sbb
lret
adc
js
into
fadds
repz
sub
inc
mov
push
lods
das
das
enter
jno
faddl
xor
and
out
mov
in
mov
jne
pop
lahf
mov
out
and
and
jne
mov
leave
mov
mov
jb
int
jle
bound
push
ficoms
dec
push
xor
push
mov
fwait
repz
mov
inc
dec
cltd
aam
and
cmp
ja
js
xor
ljmp
pop
dec
jl
cltd
dec
into
mov
punpckldq
mov
and
xor
in
jmp
out
push
nop
mov
mov
jecxz
sarb
nop
mov
addr16
addb
sub
mov
mov
sahf
pop
pop
dec
fistl
push
push
inc
mov
adc
and
out
out
mov
lock
repnz
pop
dec
test
cwtl
lock
sbb
aam
jno
cmc
fnstcw
cli
fwait
mov
jb
prefetch
dec
test
inc
out
popf
mov
push
call
xor
inc
xor
rolb
ret
lods
aaa
sub
and
adc
lds
sub
repz
pusha
adc
mov
rorl
lods
ror
mov
mov
pop
xor
mov
lea
xchg
aaa
inc
sbb
add
xor
clc
cli
stos
add
mov
dec
imul
fbstp
jb
lahf
pop
shrb
into
xor
mov
push
cmpsb
dec
sub
sbb
xchg
ljmp
xor
fsubl
dec
daa
lods
dec
jmp
fstpt
popa
in
decl
je
adc
dec
je
cwtl
stc
cmpsl
sub
jmp
push
scas
pop
push
adc
sub
stos
jo
add
rorb
out
data16
movsb
test
test
push
add
roll
push
mov
cwtl
ja
pushl
jbe
hlt
clc
sub
xor
roll
cmc
jns
inc
mov
mov
mov
ds
and
push
sbb
icebp
aas
mov
negb
xchg
fs
lea
sub
test
sub
mov
jp
dec
out
jbe
push
or
loopne
adc
pop
call
mov
loopne
data16
mov
xor
imul
mov
fimull
mov
outsl
cmp
adc
mov
imul
lds
stos
mov
pushf
bound
or
fimuls
mov
orl
out
mov
sub
or
push
xchg
xor
sbb
xchg
outsl
push
push
jne
push
pusha
xchg
test
inc
or
pop
rorl
ret
jle
les
test
or
popf
sub
jbe
xchg
xchg
or
push
cld
push
fstps
mov
bound
int3
and
lods
std
push
sub
fimuls
xor
mov
ret
subl
sbb
mov
pop
sbb
push
divl
shl
fcomps
cmp
inc
mov
add
adcb
int3
out
jno
jbe
and
push
and
lcall
ds
rol
hlt
ja
adc
cld
fldl
test
ficomps
xor
mov
rol
inc
mov
ss
mov
pop
aaa
mov
test
mov
fmul
pop
pop
mov
lcall
out
adc
xchg
pop
sbb
mov
fnsave
aam
gs
inc
cmp
adcb
sub
enter
in
jg
ljmp
out
cmp
pushf
popa
sub
mov
js
pop
pop
hlt
decl
cld
or
mov
adc
push
fistl
mov
jbe
aad
push
iret
xchg
mov
lret
and
push
in
push
stos
mov
fbld
adc
mov
lret
cmpsl
aam
into
std
scas
test
fisubrl
es
ja
sarl
lret
add
lods
adc
clc
vmread
adc
sub
push
lds
int3
adc
mov
mov
dec
ds
repz
leave
and
imul
xor
outsb
js
mov
inc
jbe
inc
xor
push
sub
ret
jo
mov
inc
cmp
orb
orl
scas
rcrl
movsl
mov
push
push
into
gs
cmc
cmp
push
in
lock
mov
jnp
mov
orl
pop
lods
cs
pop
cmp
mov
and
or
pop
or
sbb
lcall
push
dec
nop
inc
adc
insb
rcrl
inc
dec
je
dec
xchg
mov
push
push
into
jecxz
pop
adc
imul
adc
into
insl
fdivp
cmp
sbb
lcall
inc
repz
push
loope
xor
jl
sbb
dec
test
loop
imul
jp
mov
xchg
out
fwait
and
and
int
sbb
mov
insb
push
adc
sub
repz
incl
pushf
filds
pop
inc
std
popa
inc
insl
cld
out
mov
and
and
sub
sti
inc
xchg
push
cmp
mov
pop
inc
popa
adc
pop
mov
insb
mov
sti
in
pop
mov
cwtl
add
aad
stos
int
jecxz
lock
cmp
mov
pop
nop
sub
movsl
ret
int3
cmpsb
loop
jl
jl
es
stos
fwait
mov
icebp
add
push
add
cli
push
adc
int
jbe
cmp
andb
push
jb
cmp
push
adc
jbe
mov
daa
and
cmpsl
xor
pushf
cltd
mov
xchg
jg
jno
mov
testl
nop
call
ss
data16
jg
clc
rol
mov
outsl
mov
push
movsb
aam
sub
pop
push
repnz
ds
pop
insb
pop
and
mov
push
mov
push
ja
cmp
mov
fcomps
cld
mov
sbb
outsl
xchg
das
arpl
mov
cmp
or
sub
pop
loope
std
add
push
popa
aas
push
sub
loopne,pt
repz
add
adc
mull
cld
push
mov
mov
fstps
cs
js
sub
subl
xchg
push
xchg
inc
jno
testb
cmp
aaa
pop
ficoml
mov
inc
fs
sub
jns
xchg
xchg
or
jo
mov
sti
jle
adcb
jecxz
mov
das
push
adc
or
sbb
test
xor
scas
test
jne
add
orb
cmp
pop
cli
int
movsl
add
mov
add
jmp
or
iret
testl
inc
cmovl
int
cmp
test
or
clc
mov
mov
add
xchg
sahf
sbb
push
mov
inc
xchg
pusha
je
jne
outsb
int
outsb
out
aaa
dec
femms
dec
and
dec
dec
dec
dec
dec
add
jne
fwait
pushf
ret
cmp
mov
ficoms
cmpsl
int3
mov
sbb
stc
mov
xchg
xor
adc
in
cs
sub
lret
shlb
push
movsb
mov
mov
test
mov
adc
and
sub
or
sbb
push
fnsave
fcomps
push
out
xor
mov
pushf
in
xor
add
aas
shlb
into
or
mov
pop
inc
mov
movsb
jge
mov
and
lahf
dec
push
scas
out
xchg
xchg
pop
jnp
pop
mov
inc
aad
enter
in
mov
mov
lods
jge
xorl
xchg
cs
daa
pop
push
mov
data16
jno
cmp
rcrb
es
dec
xchg
inc
push
sub
mov
icebp
xchg
xor
xor
jb
sbb
lods
or
lret
andl
mov
scas
icebp
push
pop
pop
sub
adc
loope
xor
lods
in
mov
mov
dec
sbb
stc
mov
push
mov
roll
push
mov
cmc
pmaxub
and
mov
insl
scas
sbb
ljmp
inc
loope
jns
out
inc
sub
enter
cmp
adc
addb
repz
lret
sbb
insb
mov
mov
sahf
fwait
or
xor
add
sbb
std
sub
lahf
clc
mov
inc
and
and
mov
push
push
pop
jns
loopne
dec
xor
mov
jns
push
call
cmp
xchg
mov
adc
test
xchg
inc
xchg
mov
mov
pop
jle
push
pop
pop
mov
mov
xchg
jmp
pop
das
in
scas
repz
push
nop
push
scas
fimull
mov
sbb
leave
fstpl
jbe
mov
sbb
int3
and
push
pop
pop
sub
iret
call
dec
dec
cltd
inc
xorb
adc
add
outsl
mov
push
scas
xchg
xor
lock
jbe
inc
xchg
popa
ret
fistpl
jmp
and
xor
mov
inc
aas
test
test
sub
hlt
xchg
xor
sub
mov
cmp
xchg
adc
dec
mov
cltd
jno
sub
adc
aaa
adc
push
dec
das
scas
xchg
and
ficompl
xor
xor
rolb
rclb
or
addr16
pop
icebp
roll
inc
test
jecxz
pop
clc
mov
leave
pop
xchg
xor
cmp
lahf
inc
orb
jns
cmpsb
adc
mov
jne
pop
xlat
out
xchg
mov
sbb
pop
add
iret
out
lds
adc
or
dec
jb
add
mov
sub
adc
test
add
and
xchg
scas
sbb
inc
or
fistpl
pop
cmp
mov
sahf
mov
sti
ret
mov
mov
scas
and
mov
mov
inc
and
arpl
lds
xor
repz
mov
pop
or
int
movd
inc
je
sbb
insb
mov
or
xchg
push
ja
add
dec
push
bnd
adc
cmp
dec
adc
aam
inc
pop
pusha
imul
push
xchg
cmp
ja
jmp
pushf
xor
mov
mov
jecxz
and
pop
jp
stc
adc
inc
pop
aam
mov
jne
shlb
cli
fwait
push
repnz
and
inc
pushf
jnp
stc
sbb
clc
gs
data16
lcall
inc
popf
mov
inc
xchg
mov
pop
ret
in
ljmp
mov
pushf
and
arpl
je
pop
mov
int3
dec
xor
push
cltd
mov
andl
cmpsb
xchg
testl
mov
mov
mov
or
cmpsb
cmp
je
and
add
sbb
sub
xchg
movsb
add
sahf
mov
inc
jnp
push
ds
stos
fldcw
aas
add
xchg
fdivrl
push
imul
push
sbb
jb
mov
push
jge
aaa
dec
pop
in
sbbl
ret
push
xor
sti
mov
pusha
inc
push
add
lea
nop
mov
jb
adcl
push
cmp
jg
mov
pusha
cld
roll
popa
shl
adc
int
push
std
sbb
cltd
and
mov
mov
jp
and
stos
dec
inc
pushf
mov
adc
pop
out
stc
scas
stc
jno
cmpsl
sarb
jg
call
aaa
push
and
lret
adc
dec
lret
dec
std
lret
call
jnp
push
ja
pop
repnz
ret
mov
arpl
inc
or
inc
fucomp
subb
mov
push
jge
jb
aam
mov
rcrb
lahf
jno
push
fistpll
mov
lret
mov
mov
int
addb
push
add
sti
mov
sbb
inc
xor
into
adc
pushf
add
xor
jge
push
sbb
push
add
mov
adc
push
xchg
mov
jg
test
jne
imul
sub
test
jle
cmp
mov
push
divb
pop
fdivr
xchg
test
ret
push
iret
and
or
std
or
ret
sbb
xor
fisttps
ret
scas
enter
mov
sub
mov
in
inc
icebp
jmp
rcr
lcall
scas
adc
lods
cwtl
leave
sub
or
clc
sar
jno
pop
jbe
xchg
pop
jb
dec
push
xchg
outsl
scas
loop
push
inc
jb
js
sahf
mov
mov
jne
jmp
jne
add
mov
xor
mov
adc
arpl
jecxz
enter
and
std
xchg
xchg
in
jl
imul
pushw
sbb
inc
aas
push
mov
dec
mov
pop
cli
or
std
arpl
jae
scas
int
push
out
push
bound
lock
popf
out
cltd
mov
pop
sahf
clc
stos
push
cli
inc
sbb
inc
sub
dec
mov
mov
and
xor
cmp
push
push
pop
dec
icebp
xor
enter
lret
out
dec
xlat
xorl
cmpsl
add
ljmp
and
jge
cmp
scas
adc
mov
sbb
pop
jno
sti
cltd
dec
xorb
test
pop
in
push
rcrl
mov
loope
lds
xor
scas
dec
mov
ds
fbld
jecxz
popf
pop
lret
pop
movl
mov
add
sarl
add
push
or
icebp
xor
stos
aad
pushf
or
xchg
or
cmc
mov
xchg
mov
cmpsl
test
hlt
clc
sbb
jle
and
xchg
xchg
daa
stos
mov
mov
dec
outsb
movsl
pop
push
jge
pop
ljmp
dec
sub
je
or
mov
rorl
ja
jns
and
jecxz
jnp
mov
mov
cltd
adc
inc
or
in
dec
hlt
rol
dec
xor
inc
jb
movsb
dec
loopne
mov
xchg
movsl
pop
add
fsubs
scas
xor
notb
jge
and
sub
xchg
pop
sti
sub
adc
popf
cmc
jmp
push
imul
cmp
push
xor
xor
filds
daa
sub
in
fnsave
daa
mov
pminub
xor
testl
ret
in
rcrb
and
inc
cmp
into
push
rcr
sbb
jecxz
stos
leave
ja
push
xchg
sti
xchg
dec
fmul
mov
or
rorl
inc
xor
xorl
shl
adc
jbe
mov
and
xor
xchg
pop
pop
popa
ret
xchg
out
pop
aad
loopne
fcomps
lods
ljmp
jg
repnz
cmc
xor
mov
nop
and
test
movsl
cltd
mov
sbb
test
ja
sbb
inc
sub
mov
pop
cli
loope
jmp
jge
add
lea
push
loopne
pop
xchg
enter
imul
push
ds
ljmp
fs
fstpl
mov
mov
fdivr
pop
stos
inc
jno
push
dec
lahf
mov
ret
adc
or
xor
jns
xchg
xchg
add
sbb
js
stc
add
or
jge
ss
mov
xor
test
call
loop
cmp
and
mov
rcl
rolb
out
and
xchg
ja
dec
ja
inc
daa
or
mov
adc
cmp
pop
push
cli
fldt
cmpsb
fcoml
sub
movsl
mov
xor
je
xor
ljmp
ficoms
and
rolb
movsb
adc
mov
mov
fimuls
rcr
push
mov
pop
in
int3
and
mov
in
js
adc
shl
cmp
scas
lahf
xor
jb
push
test
push
jecxz
cmp
jb
xor
adc
mov
arpl
mov
out
or
mov
ja
lahf
sub
mov
add
es
shrl
pop
cmp
adc
inc
loope
or
add
in
mov
movsl
out
ret
imul
sbb
and
add
in
pop
data16
jbe
and
lods
divb
ret
pusha
add
inc
repz
jg
enter
push
and
mov
popa
sub
insb
aas
addr16
lahf
loopne
mov
ss
inc
cmp
pop
mov
scas
and
outsb
test
xlat
push
jecxz
and
mov
mov
mov
test
jne
cwtl
daa
mov
dec
inc
cmp
loope
mov
insb
rolb
add
test
data16
jl
or
shr
xor
pop
dec
mov
or
loop
or
mov
jo
jle
jnp
ret
cmp
and
ljmp
mov
rclb
mov
push
in
push
push
test
subl
jns
adc
iret
hlt
cli
push
sub
or
fld
mov
mov
mov
push
push
mov
jne
hlt
cmp
mov
sahf
pop
cwtl
inc
xchg
and
cmp
mov
jb
cmc
jecxz
pop
lock
add
in
pusha
clc
ret
xchg
je
xor
popa
xchg
dec
shl
jmp
rolb
pop
xchg
mov
fstpl
in
mov
xchg
scas
inc
outsb
in
cltd
cmp
mov
inc
push
adc
dec
jmp
xor
movsb
mulb
orl
pop
push
js
dec
dec
mov
or
lea
jl
lods
push
imul
dec
sbb
sbb
mov
pop
fldenv
ret
outsb
or
add
add
and
cmp
push
insb
lcall
or
adc
pop
adc
mov
pusha
leave
sbb
aas
jae
mov
fldenv
pop
cmp
outsl
jne
adc
cmpsl
sbb
xchg
cmp
je
jb
testb
or
out
mov
in
adc
and
int
icebp
adc
rcll
jne
inc
insl
jae
mov
leave
repz
inc
cmp
stc
call
into
xor
jmp
shlb
hlt
ja
dec
mov
mov
int
pop
aad
sahf
mov
jb
ja
faddp
and
mov
push
cs
sub
dec
cld
pop
mov
rorl
imul
dec
repnz
sbb
jg
mov
loop
repnz
rolb
imul
aam
mov
int
mov
sub
push
push
pop
insb
inc
rcr
repnz
cmpsb
sti
mov
int3
aaa
repnz
mov
lds
stos
icebp
mov
outsb
and
repz
jbe
pop
jp
inc
sti
ljmp
add
stos
leave
push
dec
je
mov
dec
pop
inc
shrl
add
inc
lret
test
mov
fucomp
cld
dec
mov
mov
pop
ficompl
rorb
sub
jae
xchg
jns
movsb
jne
inc
mov
xchg
je
add
nop
pop
mov
jne
mov
push
pop
cmp
fists
cmp
pminsw
push
pushf
pop
enter
and
int3
insb
cmc
mov
sbb
mov
sbb
push
pop
and
rcrl
jle
cmpsb
mov
in
ficoms
mov
pusha
mov
outsb
add
je
scas
mov
fldl
bound
jno
xor
pop
dec
mov
inc
cmpsw
push
scas
xchg
cwtl
or
shlb
cmpsb
cmp
orb
xor
lea
test
mov
mov
cmpl
nopl
xor
cltd
cmp
lods
imul
aad
shll
pop
loope
jl
xchg
sub
push
aaa
mov
leave
int
pop
nop
xchg
add
stos
mov
addl
sbbl
cmp
push
and
pop
enter
shrl
push
mov
imul
rcrb
and
push
shlb
lret
adc
pusha
xchg
ja
push
pop
xlat
std
xor
imul
push
pop
and
push
cmp
sbb
aas
shl
in
add
es
or
lret
mov
ret
add
repnz
jecxz
and
xor
jmp
ljmp
int3
sub
and
in
jns
pop
scas
arpl
iret
lcall
daa
sub
inc
sub
mov
xchg
pusha
jmp
incb
push
xchg
out
mov
aam
mov
movsb
in
test
sahf
out
mov
incl
mov
addl
arpl
and
aad
test
fisttpll
enter
push
mov
sbb
cs
jle
rcr
lcall
mov
mov
icebp
fisttpll
sbb
mov
xor
test
mov
pop
sbb
lcall
inc
push
sbb
push
inc
adc
je
sbb
cltd
mov
cs
jmp
cli
push
sub
je
xor
test
dec
pop
inc
dec
sbb
notl
mov
dec
clc
push
add
shll
lods
sysexit
cmc
nop
mov
sub
and
dec
push
mov
shll
xchg
rcrb
add
inc
nop
ss
cmpsb
mov
and
pushw
iret
test
scas
rcrb
hlt
cmp
popf
cmp
cs
popf
pop
and
stos
call
outsl
roll
cmc
mov
inc
int
rclb
es
pop
scas
push
sbb
xor
das
pusha
jle
out
insl
cmc
xor
xchg
mov
test
shrl
sti
mov
out
hlt
cmc
fistpl
pop
clc
fimuls
int
cmp
push
jp
jno
adc
xlat
gs
cmp
inc
xchg
xchg
dec
nop
jle
push
xchg
sbb
sub
adc
and
addr16
cmp
bound
xor
cmc
jne
pop
rorl
rolb
add
adc
stos
xchg
lcall
fsubrs
les
cmp
xor
insb
pop
sbb
or
cmpsb
aam
jns
loop
roll
movsl
adc
jmp
std
loope
and
mov
ds
xchg
test
mov
cltd
push
leave
imul
xchg
mov
pop
test
fs
pop
jge
pusha
adc
pusha
cmpsl
fstpl
or
dec
inc
ja
in
or
sub
mov
ret
test
jnp
mov
and
out
jge
or
arpl
pop
mov
xchg
xchg
cmpsb
sbb
out
sub
dec
dec
jno
lret
mov
sbb
sub
adc
adc
xchg
cmp
jbe
dec
adc
stc
mov
mov
mov
xchg
test
xchg
add
xchg
shrl
clc
sahf
adc
shll
stos
pop
xlat
sbb
xchg
inc
dec
cmp
xchg
jo
xor
push
sti
xchg
stc
enter
jns
xor
mov
shll
add
pop
dec
js
push
mov
dec
jg
dec
ds
lods
in
lds
mov
adc
mov
jmp
test
pop
push
mov
lds
push
mov
aam
adc
xor
dec
adc
call
mov
int3
int3
fistpl
mov
mov
pop
sbb
jno
out
jns
adc
jnp
call
ret
lods
push
in
jp
adc
pop
mov
nop
std
push
cltd
jns
or
es
dec
inc
sbb
fcmovu
jmp
mov
inc
sti
fisubrs
mov
pop
mov
lcall
or
fwait
pop
loop
adc
or
insb
pop
and
insb
test
mov
stos
rcll
test
pop
inc
or
and
jo
repnz
movsl
push
popa
fstl
mov
or
mov
cmp
mov
add
mov
shl
popf
mov
dec
shlb
cwtl
dec
int3
cmp
dec
ret
enter
adc
mov
cmp
std
jmp
cmpsb
ljmp
mov
push
cmpsl
pushl
call
sub
add
jnp
cmp
ss
orl
sub
inc
jmp
scas
add
fadds
je
xor
hlt
jl
stos
push
adc
cmp
jb
jg
pusha
mov
cmpsl
cmp
and
cmp
shll
pop
mov
inc
out
jp
xchg
imulb
enter
adc
mov
bound
push
xchg
imul
push
rcr
xlat
icebp
cmpsb
insl
adc
fwait
push
aas
adc
sahf
hlt
mov
clc
jbe
je
lea
pop
pop
mov
negl
xor
lret
add
js
add
or
sbb
xchg
shll
fnstsw
jle
mov
push
inc
add
test
dec
out
sub
cmpsl
push
mov
movsl
mov
cmp
mov
enter
push
adc
in
ret
add
int
push
popf
aad
lods
cmp
outsb
jmp
add
add
pushf
jmp
hlt
mov
es
movups
jp
xor
inc
rcl
mov
cmp
imul
in
ficoml
push
cmpsl
cmpsb
andl
and
adc
sub
cmp
inc
fidivrs
stos
cmp
sub
jne
inc
or
jb
or
frstor
mov
cmp
cmp
jno
mov
inc
xchg
mov
fucom
add
push
cld
jne
lods
out
lret
mov
lret
cltd
je,pt
mov
dec
iret
jo
add
pop
mov
mov
ds
daa
ds
repnz
inc
adc
daa
xchg
push
daa
mov
xchg
cmpsl
popf
std
dec
or
hlt
in
push
shll
add
add
jb
mov
jmp
jno
dec
and
lods
outsb
leave
es
jne
mov
das
xchg
dec
dec
jo
adc
cld
cltd
and
mov
ret
fcompl
leave
movsl
imul
rorl
xchg
mov
sarl
jae
popf
mov
cs
pop
xlat
out
cmovge
icebp
xor
lret
loope
ret
mov
shll
sbb
jge
fnstenv
dec
xchg
les
clc
shrl
scas
ja
imulb
mov
mov
rcrl
dec
or
jo
sub
mov
push
cld
pop
sahf
movsl
mov
movsb
xor
sbb
sub
adc
jg
pushf
sahf
xchg
popa
mov
add
push
icebp
xor
pop
dec
leave
js
mov
loope
std
jmp
adc
sbb
mov
xor
lds
dec
adc
cwtl
and
outsl
mov
and
xchg
cmp
outsl
movsb
xchg
sub
rcrl
imul
cmpsl
outsb
or
leave
sub
xchg
or
rcrl
push
es
xchg
les
ds
aaa
faddl
ror
mov
mov
test
out
movsb
leave
cmp
inc
int3
mov
sbb
inc
outsb
test
decl
fcomps
xor
cmpsl
shlb
sub
mov
cmp
xor
dec
add
inc
dec
stos
xor
adc
fwait
loopne
cmp
xchg
cs
insl
stos
mov
xor
sbb
xchg
int
gs
push
inc
adc
or
insb
mov
ja
sub
lods
loop
adc
inc
mov
out
push
xchg
aad
adc
in
scas
pop
fdivrl
pop
inc
mov
jne
ja
bound
fcmovnbe
fisubrl
inc
loop
mov
lods
push
arpl
negl
scas
imul
inc
mov
jne
mov
ret
imul
adc
jno
ja
loope
sti
incl
pop
mov
sbb
xchg
add
fistpll
cmp
push
jns
cmpsb
sbb
push
rclb
and
add
icebp
jb
pop
push
fldl
pusha
and
popf
fwait
out
popf
js
mov
xor
xor
mov
mov
adc
add
jle
mov
fcmove
mov
inc
call
lock
subl
stos
pop
push
xchg
into
incb
sbb
xor
daa
test
xorb
inc
cmp
pop
fcomip
cmp
dec
pop
outsb
mov
test
inc
movsb
mov
popa
pop
imul
repz
in
pushf
insb
inc
clc
aas
mov
add
les
cmp
rcrl
orl
add
loope
lcall
shrl
sbb
outsl
xor
les
loope
into
inc
pop
cmp
loopne
sahf
xchg
out
nop
cwtl
cmovs
out
inc
mov
mov
rol
js
or
pop
hlt
lret
xchg
leave
mov
xchg
imul
in
in
clc
int
jb
mov
scas
mov
lods
das
sarb
push
pop
rcl
add
dec
movsw
fwait
scas
pushf
adc
scas
imul
movsb
mov
test
test
inc
mov
mov
xchg
es
mov
xchg
ljmp
push
pop
notb
sbb
shr
ret
std
add
sbb
xchg
sbb
add
mov
cwtl
sbb
icebp
pop
loope
xor
mov
xor
enter
and
cmp
pop
sti
aas
arpl
fs
pop
push
jnp
popa
bound
dec
movsl
cmpsb
xor
xchg
loope
out
xchg
xor
adc
notb
das
or
inc
mov
test
cmp
out
mov
mov
cld
pop
cwtl
in
divl
adc
inc
mov
pop
xchg
insb
pop
insl
scas
mov
outsb
or
lods
sbb
mov
ds
jo
out
rcll
stos
sahf
or
je
leave
aaa
push
repnz
pushf
push
push
pop
mov
sub
pop
adc
mov
enter
icebp
fcmovne
xor
pcmpgtb
inc
inc
mov
lock
test
mov
ret
pop
outsb
int3
scas
xchg
out
rclb
pinsrw
lret
in
pop
dec
jp
pop
icebp
rsm
shlb
add
shlb
jae,pn
jns
dec
push
and
out
cmpsb
sbb
lcall
bound
out
test
and
xchg
xchg
fmul
lods
mov
cmp
and
push
mov
sbb
mov
imul
inc
mov
add
xor
sbb
sbb
sub
rcll
idivl
stos
fs
ss
lods
pop
xor
sub
sti
xchg
ret
lahf
sbb
push
scas
or
inc
mov
in
repnz
push
aad
xchg
sub
out
call
fwait
or
icebp
stos
mov
cmp
push
push
mov
xchg
fstpt
fcoml
scas
inc
mov
orb
adc
inc
mov
dec
clc
add
jecxz
cs
pop
sbb
xor
push
jb
cmp
sbb
inc
sub
jns
leave
sub
scas
lock
jp
pop
inc
pop
in
or
out
pop
sahf
xchg
push
call
call
dec
jnp
icebp
jle
je
mov
sub
pusha
bound
xlat
mov
repz
pop
out
add
les
nop
sbb
jo
pop
lock
aas
inc
jmp
lock
add
xorl
xchg
aad
jl
dec
subb
add
pop
orl
sub
jno
push
or
xchg
xchg
enter
add
lods
sbb
jp
push
lea
cld
push
ret
pusha
dec
cmp
test
popf
mov
mov
xchg
xchg
and
loopne
cmp
mov
fs
xchg
in
fwait
js
ret
xlat
mov
fs
int3
adc
seto
xchg
movsb
push
inc
add
clc
test
ret
cmp
mov
fisttpll
rcll
loopne
sarl
sub
mov
sub
repz
push
and
ror
mov
pop
aas
xor
iret
outsl
inc
arpl
sub
xor
iret
scas
mov
iret
pop
add
in
push
pusha
dec
clc
cmpb
ds
push
mov
ret
rol
xchg
in
sub
push
pop
pop
mov
sbb
jns
in
outsb
mov
lret
shld
pop
shr
or
ds
cli
in
sub
xor
pop
addr16
out
sub
xor
in
sbb
test
inc
fs
inc
jb
mov
stc
sbb
fdivl
mov
stos
iret
sub
or
pop
cmp
jo
push
lahf
jp
test
cmpsb
dec
lahf
xchg
sub
cmp
aaa
daa
pop
in
dec
enter
add
lods
sub
cmovae
jns
aaa
jp
sub
ss
cmpsl
and
sub
pop
lahf
pop
inc
jl
cs
pmuludq
dec
cmp
add
ret
stos
jnp
out
insb
out
fidivrl
test
lods
dec
pop
jo
ss
push
ret
mov
and
sub
xchg
fmul
sub
iret
xor
mov
fidivl
jl
call
aad
shr
fst
cwtl
jmp
pop
add
cmp
mov
movsl
cmp
mov
js
adc
fs
pop
insb
enter
adcb
cmp
or
movsl
icebp
sub
lods
cltd
repnz
lds
cmp
sbb
jmp
add
xor
adc
scas
stos
mov
scas
aam
lret
add
and
nop
shll
leave
push
pop
stos
xchg
mov
sub
lcall
in
je
mov
ret
aam
pop
cmp
sbb
in
and
mov
out
aam
jae
dec
gs
jmp
shrb
idivb
add
imulb
aas
mov
mov
repnz
stos
xor
cmp
insb
scas
inc
mov
scas
sahf
test
cs
mov
fstps
std
mov
ss
pushl
dec
cwtl
sub
call
dec
sbbl
and
pop
popa
testb
fildll
cltd
and
je
and
mov
mov
mov
pushf
mov
sbb
mov
xor
movsb
inc
xchg
addb
and
mov
loope
sub
mov
stc
xchg
pop
sub
adc
mov
push
or
mov
mov
mov
popa
loopne
int3
cli
jns
inc
adc
aam
and
sbb
xor
mov
cmp
xor
push
ret
xchg
push
mov
test
and
repz
imul
imul
clc
mov
loopne
inc
and
gs
loope
mov
dec
fs
push
fimuls
in
cmpsl
jns
mov
mov
fcompl
sub
xor
cmp
mov
push
sbb
leave
mov
out
cld
mov
incb
nopl
cmp
mov
mov
shrb
push
data16
sub
dec
xor
mov
xor
or
pop
sti
jne
filds
popf
nop
and
cli
pop
out
pushf
jp
sub
push
imul
roll
cld
xchg
mov
jp
shlb
jmp
xchg
pushf
test
mov
dec
mov
and
push
adc
loopne,pt
cld
mulb
sub
mov
xor
jae
iret
jge
cld
push
push
jp
cmp
ja
adc
cmp
mov
inc
mov
jge
aam
push
in
movsl
lock
lds
fists
das
pop
mov
add
add
adc
adc
lods
mov
or
mov
jp
and
stos
cmp
in
push
sti
push
in
inc
or
out
push
mov
aad
nop
jbe
aas
fmul
sub
xor
and
fldenv
and
adc
push
pop
cmpl
fisubs
stos
movsb
daa
inc
pop
bound
lds
mov
cmp
mov
scas
addr16
lock
cs
roll
test
jle
ds
cs
inc
jecxz
aaa
mov
loopne
lea
cltd
call
inc
push
ljmp
xchg
jne
push
ljmp
lcall
bswap
dec
icebp
imul
je
pop
scas
bound
aas
cmp
cld
mov
sub
into
push
clc
mov
sub
pop
addr16
mov
filds
cmp
into
push
stc
jne
jmp
leave
or
cwtl
in
clc
lret
mov
out
mov
ret
test
add
inc
and
xchg
ret
fcom
jecxz
cmpsb
inc
pushf
jle
pop
loop
in
fldl
lds
cmpsl
dec
mov
std
adc
or
sub
out
or
adc
or
lahf
insb
mov
cs
hlt
jne
and
gs
mov
je
fnsave
pop
bound
fstps
mov
cmp
jnp
test
dec
xchg
lea
add
lret
mov
add
call
stc
cwtl
sub
js
xor
push
xchg
lret
cmp
sub
push
adc
loope
fadds
out
cltd
in
pop
xor
jae
cmp
sub
jo
fcmovu
push
xchg
or
idiv
fsts
push
dec
repz
adc
jecxz
xor
sub
fs
mov
call
mov
mov
imul
dec
xchg
mov
inc
std
fiaddl
fsubs
hlt
mov
and
and
inc
inc
icebp
lcall
sub
mov
and
je
test
or
xlat
add
in
je
inc
xchg
cltd
clc
mov
add
data16
out
lds
mov
outsb
sub
mov
call
lret
xor
sub
pop
popf
mov
into
lea
movsb
mov
stos
dec
jge
mov
mov
enter
xchg
or
iret
aad
mov
xchg
mov
adc
inc
pop
xor
push
push
mov
fiadds
sbb
scas
aad
stc
sbbb
jp
xchg
fst
or
insb
xor
adc
jne
xchg
popa
clc
cmp
cmp
sqrtps
sub
xchg
mov
js
vmovsldup
ss
js
arpl
pop
repnz
xchg
lcall
clc
xchg
mov
sbb
pop
movsb
ds
or
xor
aas
test
xchg
jns
push
pop
jns
and
lret
push
sahf
jae
mov
aad
push
push
cmc
out
pop
je
sbb
xchg
adcl
mov
popf
pop
out
inc
push
aad
mov
ds
orb
push
mul
into
lcall
add
js
jne
leave
lods
lahf
mov
xlat
fisttpl
loope
cmp
xor
xor
mov
pop
dec
add
jp
mov
or
and
pop
fcomip
les
fisubrs
mov
or
inc
mov
cmc
fs
pop
loop
pop
das
push
movsb
sarl
in
lcall
pop
and
mov
shl
insb
stc
dec
adc
pushf
fwait
int3
cwtl
push
xchg
pop
inc
mov
cmp
shrb
lahf
cmpl
sub
imul
pcmpgtb
sbb
adc
mov
mov
mov
mov
or
fidivrl
add
push
inc
data16
scas
aam
cmp
jb
test
add
jp
aad
sub
mov
pop
xchg
cli
xchg
pop
das
in
pushf
test
cmpsl
subb
mov
mov
cmp
out
repz
mov
cmp
into
stc
inc
ja
into
rcrb
cs
xchg
and
mov
adc
fwait
jecxz
cmc
cmp
mov
lds
fwait
nop
jns
add
icebp
out
dec
pop
cmpsb
jae
out
inc
push
cli
xchg
ret
add
es
cltd
lea
mov
in
add
dec
push
lahf
push
jle
cmpsl
call
repnz
push
xchg
ja
push
mov
pop
dec
and
enter
pop
pop
cmp
cli
pusha
mov
add
inc
mov
jno
mov
outsb
aad
sub
sbb
sub
mov
insl
lcall
and
sbb
mov
inc
push
stc
gs
pop
jecxz
xchg
fxam
into
fisttpl
in
repz
cmp
fisubl
mov
jne
push
and
xor
dec
stos
vpunpcklqdq
mov
sahf
andb
rorb
xor
test
gs
inc
loop
cmp
imul
mov
out
jge
pop
jl
jl
les
int
jl
dec
push
insb
hlt
and
sub
and
rclb
cltd
pop
cmc
js
pop
xchg
popa
xor
lds
mov
repnz
pop
stos
test
leave
in
cs
icebp
push
int
scas
lods
pop
pushf
jl
push
lret
push
lcall
mov
popa
mov
cmp
dec
dec
sub
dec
int
fcmovnbe
mov
icebp
xchg
mov
add
push
push
dec
test
shlb
lret
cmp
sub
std
mov
pushf
lds
cltd
cwtl
out
push
dec
sub
xor
push
pop
sub
cmp
pop
cmp
lock
xchg
push
xor
pushf
add
daa
mov
fucomp
or
lods
out
aas
sub
xchg
xchg
xor
and
xchg
mov
iret
push
daa
ss
or
dec
les
push
xor
int3
push
adc
mov
inc
mov
push
sub
sbb
xor
fmul
cld
movsl
mov
incb
add
loop
in
jge
cld
cmp
test
sub
orb
and
jp
jnp
repz
cmc
xor
dec
mov
out
imul
popf
orb
stos
add
cwtl
mov
xor
aas
or
sbb
jnp
addl
cltd
aaa
adc
inc
pusha
lahf
out
or
add
inc
dec
insl
mov
scas
mov
cmp
shlb
inc
sbb
push
mov
push
hlt
out
sub
aad
add
in
add
xor
mov
dec
imul
scas
mov
shr
adc
sub
xchg
jp
pop
cmp
inc
mov
cmpsb
sbb
cmp
aas
arpl
push
pop
sub
xor
inc
je
out
jo
xchg
lret
fsubp
loopne
mov
inc
mov
test
pop
push
fdivl
dec
into
sub
pop
mov
xchg
lret
out
mov
push
add
push
inc
sbb
mov
lcall
or
loope
mov
insl
sub
fwait
iret
cmp
in
icebp
pop
dec
dec
push
sahf
nop
mov
aam
jno
inc
pop
or
xor
add
adcb
adc
or
jg
pop
cmp
and
setg
outsw
imull
mov
gs
cmp
hlt
mov
inc
jl
repz
add
movsb
xchg
in
rcll
iret
and
jbe
call
mov
sbb
scas
loop
pop
test
stc
loopne
shl
push
xchg
xor
loop
jl
mov
jle
xor
int3
adc
loopne
test
pop
rolb
scas
out
out
mov
ja
in
push
push
inc
xchg
rclb
xchg
aad
push
mov
pop
popa
test
sbb
mov
aas
push
lods
add
pop
or
jae
fisttpl
jge
fsubp
sbb
jecxz
mov
int3
aam
call
sbb
ret
enter
cs
sbb
cmp
jg
fs
std
xchg
cmp
int3
sbb
push
or
andb
cmp
xor
out
inc
cwtl
jno
sub
jp
and
ficoms
popa
aam
dec
mov
and
push
or
in
loopne
inc
stos
fisttpl
jle
mov
notb
lods
imul
inc
mov
adc
push
jl
iret
call
or
mov
pop
and
rcll
mov
dec
dec
repnz
fwait
movsl
push
popa
das
jl
mov
or
jbe
push
outsl
sub
sbb
test
testb
test
jbe
add
or
inc
push
push
push
pop
aam
fwait
sbb
jl
mov
mov
enter
leave
stc
daa
mov
mov
lea
mov
aam
notl
cwtl
xor
cld
or
aad
lods
ja
cmpsb
inc
add
mov
int3
lock
pop
push
xchg
imul
into
popf
or
add
arpl
mov
test
mov
mov
negl
jne
add
xor
fisubrl
and
xchg
ja
dec
sub
fs
dec
cmc
fdecstp
push
cmpsl
mov
dec
cmp
daa
call
dec
mov
inc
pushf
mov
mov
push
incl
data16
adc
cld
dec
or
cwtl
pop
ffreep
inc
jle
test
jne
xchg
fcmovnbe
mov
and
mov
sti
decb
mov
ret
cld
addr16
inc
sub
xchg
clc
les
lret
pop
xchg
xchg
mov
into
arpl
ds
and
xchg
sar
mov
jl
xchg
pushf
movsb
adc
jecxz
rcr
repnz
push
sti
mov
and
xchg
btl
data16
pop
rcrl
or
ljmp
add
xor
in
test
jbe
xor
jne
ljmp
inc
xchg
scas
bound
dec
fisubrl
ds
popf
andb
xchg
andb
inc
pop
xchg
xchg
sub
loope
push
imul
out
push
add
or
cs
xor
mov
push
cmpl
pushf
fcoms
xchg
mov
push
cmp
into
rorb
xchg
or
ljmp
data16
xchg
pop
lods
mov
fisttpll
int3
add
hlt
test
mov
sub
arpl
stc
ret
jne
jp
add
aad
push
shl
jg
jmp
xor
stos
insb
test
gs
das
cltd
negl
dec
and
lock
sbb
in
pop
xor
dec
mov
mov
clc
jecxz
ret
repnz
adc
push
imul
insl
mov
imul
ds
adc
cmp
mov
ret
jo
in
xchg
xchg
mov
adc
repnz
pop
insl
add
cwtl
outsb
lods
push
stc
insb
loopne
lock
adc
and
cmpsb
mov
mov
shlb
push
sahf
mov
sub
lock
xor
pusha
mov
dec
cs
pusha
mov
jecxz
sbb
jbe,pn
mov
icebp
mov
sbb
and
cmp
fistps
xor
jbe
sbb
pop
jno
jae
jb
js
call
subl
xor
xchg
popa
push
push
test
lods
cmp
pop
push
lock
mov
push
icebp
je
inc
add
and
jbe
xor
daa
les
xlat
insl
aad
shrb
jb
pop
mov
aam
sub
xchg
cmp
enter
dec
sub
cld
mov
loopne
stos
fsubrp
adcl
hlt
xchg
mov
repnz
fstl
cltd
adc
std
mov
daa
jae
add
fisubrl
out
pop
dec
inc
adc
sbb
incl
fldcw
loope
add
push
pop
inc
arpl
aad
push
arpl
jmp
test
sti
mov
dec
mov
cltd
mov
or
mov
cmpsl
movsb
push
ljmp
inc
les
sub
cmp
sbb
mov
mov
cltd
loopne
inc
out
mov
fcoms
push
push
inc
jg
dec
or
pop
or
loopne
sahf
scas
jecxz
pop
rcll
mov
add
push
pop
pop
mov
xchg
dec
dec
mov
popa
enter
mov
jge
in
push
stos
repnz
jo
cmp
jo
push
inc
dec
sahf
dec
mov
insl
push
mov
lahf
mov
lahf
jo
movsb
and
push
mov
cmp
shrl
inc
lret
ja
lods
sbb
ds
repz
inc
push
out
and
push
push
mov
cwtl
or
sub
in
int
mov
jne
xor
cmp
dec
aaa
clc
inc
bound
aaa
pop
xchg
push
add
add
or
clc
inc
push
test
mov
clc
loopne
or
xor
rclb
repz
pop
xor
stc
or
push
test
xlat
stos
jp
fisubl
inc
imul
gs
sahf
mov
pop
jmp
test
xchg
xchg
stos
fs
inc
mov
test
stos
mull
xchg
lods
sti
mov
out
repz
xlat
negl
fisubl
hlt
dec
jle
inc
pop
push
nop
sbb
cli
jmp
ret
inc
decl
dec
lea
mov
mov
orb
push
push
lea
dec
lcall
mov
lahf
rcrl
mov
ret
insl
sarl
push
pop
mov
add
hlt
cmp
lods
dec
fcomps
mov
sub
pop
or
pop
pop
jl
ljmp
mov
push
mov
cmpl
or
cmpxchg
mov
jnp
aad
or
push
pop
jp
mov
dec
inc
insb
daa
xchg
je
sub
ja
sub
and
push
fucomi
sbbl
mov
jae
sub
out
dec
imul
pop
add
in
dec
cli
jne
dec
jo
test
push
lahf
mov
mov
adc
mov
inc
mov
or
jl
mov
xchg
mov
ja
mov
aas
jno
adc
lret
xchg
xor
jp
pop
mov
lds
aad
add
xor
inc
pop
mov
mov
jo
lahf
roll
mov
mov
xchg
movsb
xchg
popf
sbb
mov
dec
or
mov
insl
xor
shrb
call
ret
fwait
hlt
add
ret
sbb
mov
mov
sub
lret
jns
out
js
sbb
adc
shufps
xor
mov
out
stc
stc
insb
pushf
dec
push
bnd
ljmp
call
out
aaa
lcall
dec
int
mov
imul
icebp
data16
jg
aas
iret
xor
push
pavgw
push
int3
mov
stos
lods
fimuls
mov
ss
jae
inc
stos
ds
in
pushf
inc
je
js
jns
push
and
in
icebp
outsl
push
and
or
into
jb
jbe
sub
xor
mov
sbb
jl
mov
iret
sahf
xchg
shrb
pop
rcr
push
jecxz
dec
ja
add
hlt
xchg
xchg
ficoml
inc
fadd
push
sub
and
stos
add
and
pusha
and
adc
ret
sahf
loop
imul
pop
shlb
pop
sub
xor
sbbb
xlat
ljmp
inc
sub
clc
sahf
xchg
jle
dec
add
sbb
cli
add
sbb
leave
jns
mov
clc
ret
mov
inc
fisubrl
test
mov
jg
push
jno
xchg
sub
pop
adc
push
mov
lcall
insl
sub
outsb
mov
pop
sbb
mov
jns
xchg
mov
cmpsl
add
or
mov
rorl
movsb
sahf
hlt
adcb
pop
sarb
and
ret
add
mov
mov
inc
mov
in
andb
lcallw
xchg
stos
lcall
push
sbb
dec
lahf
mov
mov
lcall
xchg
and
pushf
pop
and
jmp
lea
daa
mov
inc
idivl
test
daa
inc
mov
dec
ret
push
sbb
addr16
xchg
sbb
jge
jp
or
mov
or
mov
mov
push
into
pop
inc
xchg
xchg
mov
dec
lock
movsl
cmpsl
jbe
stc
leave
sub
xor
and
orl
lret
iret
ret
cwtl
xchg
or
imul
rorl
sbb
push
je
cld
lret
pop
push
testl
mov
rolb
loope
inc
sbb
inc
clc
jle
pusha
xorl
icebp
jae
jnp
sub
pop
dec
int3
pop
in
jno
cmp
or
and
xlat
stos
out
and
mov
ds
fimull
stc
fs
jb
mov
push
mov
sbb
pushf
sub
cmp
das
scas
fldenv
out
jns
iret
mov
pushf
in
add
mov
sub
popf
dec
cmp
cmp
inc
or
pop
add
fwait
daa
aad
clc
cltd
scas
jnp
and
mov
and
fwait
and
push
sarb
sbbb
pop
or
sti
cmp
lret
push
mov
or
dec
mov
iret
pop
push
enter
stc
inc
push
cmpsb
test
xchg
push
fs
pusha
test
scas
jmp
pop
pop
cmc
adc
xchg
sub
stos
add
inc
mov
lea
pushf
adc
and
sbb
stc
pop
scas
rorl
in
ja
aaa
lea
or
arpl
jg
movsb
mov
out
imul
call
mov
fs
outsb
sub
lret
jb
mov
aas
adc
or
mov
loope
push
adc
ss
ret
xchg
inc
sbb
dec
mov
mov
cli
push
mov
mov
pop
mov
in
frstor
aam
gs
add
cwtl
rcrb
mov
mov
or
sub
xchg
popa
cld
mov
lods
dec
aad
cmp
addr16
push
roll
sub
clc
jbe
ret
stos
out
mov
inc
out
out
aas
imul
xchg
and
imul
jo
xchg
in
mov
test
nop
outsl
adc
mov
mov
in
sbb
fdivrl
jb
imul
push
outsb
mov
lds
mov
mov
push
lea
xor
jb
pushf
adc
test
lahf
dec
out
mov
popa
cmp
call
insb
cmp
push
aaa
dec
fbstp
icebp
sbb
pushf
scas
pop
jb
outsl
mov
push
gs
mov
jno
inc
fbld
mov
not
cmc
xor
outsl
sub
mov
jb
cmp
out
loop
xchg
pop
pushf
stos
inc
adc
pmuludq
pop
push
in
xchg
movsl
cmp
gs
gs
aam
dec
ret
or
sub
xlat
mov
xor
sbb
sbb
push
or
dec
push
out
or
popf
mov
mov
shrb
outsl
cmpsl
pop
mov
enter
add
sbb
insl
xor
rcrl
sarl
sub
repz
cltd
lea
leave
mov
aad
call
dec
jp
cmpsb
inc
sti
xlat
fdivrl
clc
rorl
sbb
push
gs
inc
cltd
outsb
sub
jg
xchg
mov
sbb
test
aam
cmpl
repnz
data16
jo
pop
xchg
mov
xor
xorl
call
outsl
cltd
stc
insb
fldenv
mov
push
adc
dec
add
sub
adc
int
sub
adc
dec
add
adc
mov
xor
inc
xchg
imul
ret
jb
pop
test
pop
cld
push
sbb
pop
add
out
mov
jo
daa
mov
lret
adcb
rcrb
jg
pop
scas
cli
add
out
xor
scas
rcr
addr16
leave
inc
sbb
mov
mov
neg
sbb
icebp
mov
xor
int
in
sbb
mov
sbb
inc
leave
test
lea
dec
sub
pop
dec
call
push
mov
scas
adc
out
js
nop
and
enter
or
sbb
imul
fistpll
push
scas
pop
sbb
adc
mov
enter
xor
jae
dec
xchg
pop
fs
lret
into
ret
sbb
sub
pop
dec
les
and
imul
dec
pop
subb
data16
xor
addr16
sub
addr16
icebp
addr16
push
mov
fisttpll
and
hlt
leave
add
out
pop
mov
fs
enter
pop
insl
out
mov
fsubrl
outsl
add
je
cmpl
mov
xor
test
jge
les
mov
dec
push
loope
mov
xchg
lock
push
jg
push
lds
and
dec
cmp
imul
pop
pop
pop
mov
fnstenv
movsl
sub
sbb
fs
lahf
int
pop
outsb
sub
and
popa
imul
dec
stc
fdivs
add
cltd
jae
ret
push
int3
xor
ficompl
mov
int
push
mov
dec
int3
mov
out
sbb
push
aam
movsb
dec
cld
dec
add
jl
mov
in
stos
adc
jl
xor
push
mov
xor
or
in
mov
push
jae
mov
push
lods
pop
mov
mov
fwait
das
out
mov
jne
dec
out
jbe
jns
or
rorl
stos
pop
sbb
jecxz
mov
pushf
out
pusha
inc
pop
and
pop
scas
loopne
insb
call
xchg
fcmovu
cld
mov
cmp
add
test
cltd
stc
cli
push
hlt
cmp
gs
jg
in
call
mov
mov
cmp
scas
lret
rcll
mov
movl
in
and
push
out
xor
sbb
mov
add
mov
pop
fiadds
mov
sub
pushf
xor
push
fdivs
add
mov
mov
cli
mul
outsb
incb
das
push
dec
xchg
mov
hlt
cmp
scas
ficompl
inc
jp
call
mov
dec
adc
mov
sbb
adc
sub
xor
push
mov
in
into
lea
inc
mov
movsl
imul
or
cmp
incb
cmp
sbb
sub
sbb
out
cmc
loop
lahf
push
inc
negl
clc
push
or
movsb
jecxz
jb
in
outsl
inc
aaa
test
imul
adc
jae
or
adc
lea
mov
push
sub
pop
pop
cmc
sbb
jg
cmp
add
and
lahf
loopne
mov
and
ret
fisubrl
mov
dec
enter
mov
and
notl
fmuls
arpl
xor
xchg
sub
divl
mov
cltd
lock
cld
iret
jmp
lcall
movsb
shlb
sahf
ja
xchg
insb
sub
xor
jge
sub
in
lods
or
sub
sbb
and
outsb
push
xchg
jge
push
cltd
sbbl
or
stos
and
outsb
popf
mov
into
std
icebp
jl
sbb
mov
push
and
dec
mov
in
ficoms
mov
rorl
lcall
rcrl
cmc
cmc
jp
std
std
inc
cmp
mov
fsubp
jmp
das
mov
daa
aam
sub
aad
push
inc
xchg
xor
jmp
in
xor
and
xor
jl
cmp
outsb
push
add
fnstcw
lcall
push
xor
inc
jge
cmp
clc
inc
jg
iret
mov
and
imul
ljmp
sarl
inc
xor
js
push
cwtl
cmpsl
xlat
push
stos
inc
gs
insb
push
adc
mov
xchg
test
flds
jne
cmpb
subb
jbe
xchg
outsl
adc
lret
dec
pop
cmc
cltd
test
int
sarl
in
mov
frstor
pop
imul
daa
jns
mov
fwait
lahf
outsb
pusha
lcall
sub
clc
xchg
cltd
fcompl
mov
test
mov
push
dec
jns
cmpsl
add
jecxz
cltd
shll
inc
into
jae
aad
mov
insl
iret
test
popl
cli
rolb
fbld
test
movsl
outsb
jle
inc
xor
ljmp
in
fdivs
loope
inc
push
sub
xchg
adc
push
jp
scas
idiv
insl
mov
ja
dec
xlat
lea
addr16
fdivr
mov
inc
cs
pop
or
in
je
sbb
mov
xor
cmp
add
int
sbb
sub
loope
aad
ret
pop
call
rol
push
pop
xor
and
xor
and
lods
push
lods
xor
outsl
cmp
dec
sub
mov
lcall
cmpsl
test
outsb
cmp
in
outsl
les
and
test
popa
mov
stos
in
loop
lock
sbb
xchg
inc
dec
dec
sub
adc
daa
pop
dec
daa
sbb
mov
adc
ret
jne
aaa
mov
push
inc
jne
negb
test
jno
xchg
sbb
pusha
es
pop
jecxz
sub
jl
jecxz
add
imul
or
ds
sbb
nop
mov
inc
insl
je
inc
add
mov
cwtl
out
loop
xor
adc
std
pop
xor
fldenv
stc
out
push
call
jo
or
test
cmp
xchg
xchg
lret
stc
pop
mov
mov
lret
daa
cmp
cmp
ret
mov
cvtps2pd
xchg
add
fdivr
mov
cmpsb
mov
mov
mov
xchg
or
insb
int
jnp
mov
mov
fldl
xchg
out
faddl
lods
sahf
jg
sbb
add
push
test
xchg
jle
loop
fs
fwait
sti
sbb
xorl
or
mov
cmp
movsb
rclb
sbb
xchg
xchg
inc
rorl
pushw
or
ds
jo
add
iret
xor
fs
jne
out
inc
jg
shl
lds
add
sbb
and
push
mov
test
ss
sbb
mov
movsb
pop
lods
imul
out
lahf
mov
in
mov
jns
cmp
and
xchg
fdivr
mov
in
imul
or
pop
push
ficoms
or
or
pop
mov
adc
scas
cmp
cmp
cmp
lods
fiadds
pop
mov
test
mov
pop
mov
stos
lea
cmp
outsl
ja
or
aaa
sbb
jmp
pop
int3
dec
fsubl
fsubrs
aam
movl
add
cmp
push
mov
sub
mov
jne
test
mov
cwtl
popa
jae
fldt
xchg
cwtl
stc
mov
ds
push
fs
les
push
lret
mov
loope
cltd
icebp
nop
inc
mov
stos
sbb
mov
mov
push
push
or
popa
mov
push
jmp
cld
push
and
push
pop
xor
xor
gs
or
add
test
sbb
sbb
jp
cmp
sahf
xchg
orl
cmp
sahf
mov
sub
adc
xor
cmp
sub
push
xor
mov
in
lcall
cmpsl
sbb
pop
push
mov
ret
call
fildl
loopne
mov
das
test
pop
add
jp
aad
dec
stos
scas
lret
imul
hlt
push
test
movsl
scas
ljmp
in
sub
add
bound
mov
jge
jl
int3
movsl
push
xchg
lods
not
pop
pop
xchg
dec
cmp
ficoml
cmp
add
mov
fstl
jno
notl
gs
xor
outsb
pop
push
dec
and
inc
xor
aaa
xchg
loop
push
out
in
or
sti
jb
push
mov
inc
sti
sub
fcmovnbe
or
jmp
lds
lods
pop
jg
push
adc
push
cmp
js
or
in
ret
dec
mov
and
std
mov
xor
fisubl
cmp
or
mov
xor
pop
int
pushf
ja
das
mov
jl
mov
dec
das
hlt
mov
inc
sbb
dec
ficoms
mov
jnp
je
iret
lods
mov
in
mov
rcll
mov
out
fwait
or
mov
mov
fmull
call
mov
stos
es
adc
mull
out
out
jne
jge
sbb
lahf
xlat
insb
pop
sarl
in
and
clc
aam
jmp
push
or
arpl
mov
sub
movl
mov
push
je
push
jo
adcl
test
cmp
fcompl
movsb
xchg
stos
cmp
inc
sub
jno
jns
ret
dec
movsl
or
bound
sar
xchg
jl
mov
mov
stos
xor
xchg
xchg
mov
dec
jg
adc
or
adc
sub
cld
cs
lock
lret
int3
ret
popa
popa
call
mov
les
adc
jno
mov
movsb
mov
jge
jae
mov
notb
sub
push
cld
pop
std
dec
push
scas
push
dec
in
addl
xchg
xor
adc
scas
std
jb,pn
push
fisubl
dec
jb
adc
sbb
pop
jg
in
shrd
stc
and
sahf
inc
add
push
inc
js
insl
insl
jne
imul
mov
pand
cmc
mov
gs
clc
out
jle
push
adc
ds
inc
xchg
fsubrs
cmpsb
mov
rorl
cmp
leave
out
lcall
fidivrs
xchg
jb
mov
sahf
and
in
jg
bound
or
leave
xchg
ret
dec
hlt
push
xor
lret
sbb
xchg
inc
loop
push
jne
into
jg
push
test
adc
andb
sti
cwtl
dec
stos
jns
inc
imul
sbb
push
dec
push
pop
stos
or
and
dec
imul
mov
pop
xchg
xlat
call
int
pop
xchg
les
mov
jmp
mov
cli
sahf
xchg
sub
jno
push
fs
push
jge
mov
sbb
push
mov
pop
push
inc
inc
cmp
xor
ljmp
push
incb
sub
ret
cwtl
enter
dec
pmulhuw
or
cs
lcall
in
faddl
mov
xchg
cli
rcrb
rcrb
les
sbb
sahf
addl
pushf
add
mov
push
sbb
aam
jp
test
inc
mov
aad
pop
pop
mov
push
call
or
cmp
jg
sahf
sub
jecxz,pn
push
rclb
int
xor
ret
test
xchg
rcr
loope
jbe
or
cwtl
jl
in
scas
or
and
adc
mov
pushf
jecxz
rol
stc
push
cmp
ss
sti
popa
dec
mov
jno
sbb
ljmp
jbe
gs
loope
jmp
mov
repz
in
insb
lret
mov
push
leave
xchg
ret
ss
iret
jb
sbb
pop
cmpsl
out
mov
and
out
cwtl
add
or
gs
inc
sbb
mov
aaa
test
sbb
ret
ret
add
inc
lods
mov
jo
jb
in
mov
or
adc
jnp
inc
and
dec
mov
jecxz
push
add
imul
ja
mov
mov
rorl
pop
sbb
xchg
jg
lcall
repnz
push
scas
and
pop
push
scas
mov
arpl
add
push
push
or
mov
test
popf
xlat
or
push
and
shrb
into
dec
es
cmp
sbb
jmp
icebp
ret
mov
xlat
rorl
mov
lods
ja
mov
lock
les
cmpsl
jns
jge
and
push
popl
test
jne
stos
pop
rcr
jp
insb
ljmp
sub
sti
idivb
add
test
inc
xchg
dec
or
iret
lea
mov
or
sbb
jno
loope
push
mov
jo
xchg
imull
pop
fistpl
push
cmpsb
inc
add
push
xor
xchg
cli
aas
or
or
neg
xor
ss
sub
div
cmp
outsl
insl
incb
xlat
dec
xchg
clc
xchg
repz
cltd
push
pop
pop
jge
clc
dec
pop
pop
xchg
inc
sub
xor
inc
mov
mov
pop
in
dec
mov
cltd
ss
inc
or
lahf
test
adc
out
xor
add
push
inc
xor
lret
jle
stos
jp
out
enter
jne
jl
ja
shlb
xchg
out
dec
push
or
rolb
negl
insb
push
lret
adc
jecxz
cld
jmp
loope
repnz
call
lret
pushf
or
inc
mov
icebp
test
push
adc
loopne
add
fstps
sti
xchg
and
pop
jl
mov
mov
sbb
popf
loop
in
pop
pop
jle
xor
cmovae
clc
je
push
enter
mov
jecxz
jbe
outsb
add
mulb
add
rolb
mov
dec
mov
push
cld
std
mov
mov
mov
sbb
push
sbb
mov
pop
nop
fs
leave
outsl
mov
outsb
movsl
subb
outsl
add
jp
and
fnstsw
in
dec
sbb
into
repz
or
fucomp
pop
mov
mov
xchg
push
push
pop
pusha
addr16
sbb
sbb
or
xchg
mov
xor
negb
filds
andl
loopne
lock
sub
popf
subl
and
popf
cmp
fldl
pop
jae
sub
lahf
push
jecxz
pusha
out
sbb
pop
fstl
dec
mov
pusha
or
pop
cs
add
std
jne
aas
repz
mov
adc
ljmp
stos
mov
lcall
xor
out
and
test
mov
mov
sbb
rcrl
add
outsl
cmc
mov
fwait
xchg
dec
xor
ret
sub
pop
test
xor
mov
mov
jnp
mov
push
test
and
daa
cmp
fildll
lods
imul
add
xchg
ds
stos
pop
popa
sub
and
ficompl
fwait
push
and
clc
cmpsb
test
push
xchg
pop
xchg
adc
xchg
xchg
lret
jnp
sub
movsb
stos
repnz
ljmp
push
sbb
or
sub
stos
pop
mov
add
or
jle
mov
cmp
test
cmp
xchg
push
pop
sahf
std
lahf
lret
add
xor
out
sahf
sbb
sahf
loope
dec
lods
hlt
adc
je
mov
in
lods
mov
mov
loop
sti
aas
dec
pop
mov
inc
or
out
enter
stos
stos
inc
and
sub
or
mov
jns
jb
psubq
pop
sub
cmp
mov
mov
aas
mov
dec
test
call
pop
jo
cli
ss
jmp
push
subl
lock
inc
fsubrl
mov
shrl
sahf
mov
fadds
jmp
shrl
lods
lahf
stos
stos
inc
or
xchg
cs
mov
lds
cltd
pop
xor
pop
sub
pop
arpl
adc
in
adc
push
addb
out
les
push
in
sub
and
int
pop
pop
ja
adc
push
into
xlat
cmc
inc
fwait
inc
aas
sbb
lods
add
add
pop
aas
sti
mov
pop
mov
adc
out
lahf
inc
jno
and
push
xchg
rclb
xchg
pop
jecxz
or
je
sti
ljmp
out
jbe
nop
mov
xor
or
fldt
clc
xchg
or
imul
clc
out
lds
lods
jmp
jno
mov
jecxz
in
fimuls
ret
out
pop
push
push
daa
jecxz
cmp
in
cltd
outsl
imul
mov
xor
leave
imul
inc
pop
test
scas
jp
dec
cltd
inc
xor
xor
inc
push
jbe
test
xor
dec
mov
dec
in
jae
mov
xchg
sbb
stos
loope
sub
movsl
pop
adc
pop
and
push
fnsave
xor
dec
xor
push
sub
stc
cmpsb
cltd
fsts
inc
data16
lds
push
repnz
sub
in
mov
es
push
fdivp
fdivp
insl
push
std
sbb
jns
inc
pop
pop
in
jmp
aaa
mov
cltd
push
jp
in
add
pop
mov
dec
or
xor
inc
jns
add
inc
sbb
outsl
pop
push
jl
sbb
mov
mov
jle
insl
xor
push
push
enter
cwtl
cmp
push
pop
sbb
jle
aaa
mov
jne
mov
sub
repz
mov
push
and
shr
lahf
into
loop
xlat
clc
inc
int
insl
xchg
sbbb
sub
testb
xlat
scas
and
fsubs
mov
mov
imul
pop
or
lahf
inc
xchg
nop
cmp
dec
jmp
fs
mov
ss
xchg
mov
lcall
sahf
fucomi
jg
sbbl
out
and
ja
jge
adc
enter
cmp
in
sub
lock
cld
fldt
mov
ret
mov
test
push
adc
sub
iret
dec
mov
in
add
xchg
scas
jne
lock
or
and
bound
lods
mov
xor
in
dec
stos
pop
cmp
addr16
push
sub
dec
stos
aam
and
inc
sbb
dec
aam
xor
and
sbb
xchg
daa
xor
notb
sbb
test
movsl
jno
rcrl
push
cld
aaa
test
scas
nop
ret
movsl
lods
sub
gs
jnp
loopne
pusha
jmp
jb
cmp
pop
jbe
jecxz
das
mov
cmp
inc
ret
scas
or
xlat
insb
cmp
sbb
in
lret
test
das
adc
ficompl
cwtl
adcb
stos
mov
mov
or
sub
cmp
cmp
cmpb
sub
imul
ret
out
int3
fisttpl
sbb
icebp
into
adc
or
pop
inc
lea
jbe
lret
test
pop
jmp
inc
add
mov
cmp
sbb
add
inc
lods
mov
cmp
push
dec
ret
jnp
pop
movsb
lods
into
jp
fsubr
mov
movb
mov
ret
cmpsl
lcall
jl
and
or
xor
aas
ja
mov
sub
repnz
loop
xor
push
jp
out
sarl
mov
inc
addr16
cmp
and
gs
or
sbb
cmp
and
subl
cmp
cmp
clc
push
or
jecxz
lahf
arpl
pop
filds
arpl
sub
sbb
sub
arpl
das
in
sbb
mov
dec
xadd
mov
bound
and
inc
js
and
xchg
jns
sbb
cmp
shr
inc
lret
xchg
in
int3
into
adc
pop
jp
into
lret
mov
jg
repz
dec
inc
icebp
testb
jl
add
mov
cmpsb
lods
jmp
ret
repz
jne
fcmovbe
loopne
lret
inc
mov
shrl
fildl
cs
xchg
clc
roll
daa
jg
cmpsl
and
sub
sub
cmp
aam
sbbl
nop
and
push
and
lcall
outsb
sub
in
inc
lcall
lock
add
adc
lahf
addr16
inc
das
jle
push
push
mov
movl
sti
jne
xor
xor
jg
jns
jecxz
cmc
out
adc
inc
jge
jno
btr
pop
out
push
fbstp
dec
dec
ja
mov
mov
stc
enter
xchg
cmp
mov
cwtl
cli
rcr
jmp
and
mov
dec
mov
mov
jnp
push
mov
outsl
mov
je
pop
or
or
jp
mov
xchg
cmp
movsb
sbb
sub
fmuls
fstl
or
jns
mov
lret
mov
mov
cli
jae
xor
add
mov
pop
pop
incb
pop
shll
rorl
div
gs
mov
cltd
adc
dec
push
dec
inc
imul
xchg
dec
test
js
push
mov
or
inc
cmpsl
scas
push
aam
inc
pusha
jmp
and
addl
push
cmpsl
lods
add
adc
push
jg
mov
cmpsl
or
xchg
adc
adc
clc
pop
stc
push
mov
cmp
xchg
pushf
jmp
add
jne
dec
xor
aaa
testb
es
adc
aad
int
scas
out
inc
push
jmp
pop
sub
aad
enter
test
in
jb
mov
pop
push
arpl
aad
sbb
shlb
push
nop
sub
push
mov
out
mov
test
cmpsl
out
sub
mov
jmp
sub
dec
test
push
jecxz
fdiv
pusha
and
repnz
clc
jns
out
inc
pop
push
cmp
je
mov
mov
inc
lods
mov
mov
clc
cli
leave
mov
iret
repnz
ja
negl
mov
ret
mov
sahf
mov
lods
xor
xor
fstpt
push
sbbb
pusha
mov
jnp
mulb
push
fcomp
cmp
clc
in
mov
lods
inc
sti
add
pop
jae
rcll
int3
mov
rcrb
rorl
aas
push
adc
hlt
dec
out
jge
xor
jo
xor
cli
repz
pop
bnd
xchg
and
cmc
add
lret
dec
sbb
add
pop
aam
lahf
push
fcoms
int3
lock
cmc
cmp
mov
dec
mov
or
test
dec
aad
mov
xchg
adc
outsb
mov
nop
dec
bound
inc
mov
les
cmp
add
mov
idivl
std
cld
stos
cld
std
jae
xor
push
sbb
cwtl
int
jecxz
loopne
jle
into
mov
lcall
mull
or
pop
cmp
icebp
sub
cli
mov
aas
xor
outsl
push
sub
jp
notl
sbb
dec
cli
adc
dec
dec
lret
or
fldl
sub
lcall
dec
mov
cmc
ss
int3
insl
and
xchg
inc
and
lret
int3
mov
xchg
dec
cmpsb
jmp
std
or
xchg
jo
xchg
sti
lock
loopne
aas
inc
shl
pop
push
pop
int3
enter
inc
jmp
xchg
lds
mov
sbb
pop
ja
insl
lods
stc
test
mov
outsl
std
jl
xchg
mov
pop
paddusb
in
notl
sar
sub
orl
sbb
sub
and
je
test
rcrl
inc
movsb
lcall
push
cs
jno
xchg
xchg
sub
daa
inc
mov
cs
xor
push
xchg
clc
imulb
xlat
lds
and
or
imulb
sbbl
cmp
ja
loope
movsb
test
pop
xor
ljmp
or
movsl
xor
pusha
pop
cmp
sbb
sbb
xchg
mov
lret
xchg
scas
aas
ret
insl
loop
sub
mov
jae
inc
testl
xchg
sbb
or
testb
test
ss
int3
jnp
pop
int
in
into
inc
adcl
fimull
arpl
fcomi
jb
inc
pop
adc
hlt
out
mov
mov
xchg
loope
dec
push
mov
sub
cmpsl
mov
lcall
push
xor
repnz
lock
ljmp
adc
xchg
jl
jmp
gs
cmpb
shrl
jmp
es
mov
pop
xor
mov
lcall
repnz
ds
popf
or
mov
inc
xchg
jno
cmc
inc
inc
loop
cmpsb
pop
adc
scas
dec
test
daa
cmp
push
cltd
add
daa
daa
out
sahf
ja
dec
jbe
scas
out
push
divb
addr16
xor
and
jg
mov
shrb
ret
lss
lcall
daa
mov
mov
in
sti
outsb
cli
sti
push
subb
mov
pushf
or
or
jns
and
fidivl
rcrb
push
inc
jmp
push
out
test
xor
fisubrl
adc
out
popf
dec
adc
call
mov
pop
movsb
arpl
insb
xor
inc
divb
fwait
push
lods
nop
jle
push
push
lock
cwtl
xor
jmp
xor
in
and
pop
in
inc
es
das
fwait
inc
test
stos
push
dec
sahf
nop
or
lret
or
leave
rolb
lahf
and
idiv
lds
scas
int3
mov
lods
js
addr16
lods
add
stc
mov
dec
xchg
xchg
icebp
adc
mov
xor
mov
fildll
mov
add
inc
sbb
adc
lea
sub
sub
cmpl
pop
call
jb
inc
clc
cld
add
notl
divl
jno
rclb
pop
aas
or
pop
cltd
and
incl
hlt
mov
arpl
stos
faddl
aad
xchg
in
jmp
mov
mov
add
jne
pop
mov
fdivp
leave
xor
jl
mov
mov
xor
inc
pushf
in
add
icebp
mov
or
or
test
xchg
scas
shl
pop
xorb
xor
adc
mov
loopne
cmc
popf
dec
inc
dec
shrb
cli
pop
or
sbb
adc
outsl
mov
js
xor
sbb
or
or
jp
loop
orl
ret
mov
ss
pop
je
insb
push
iret
movsb
mov
rcll
add
xchg
or
ficoml
cmp
mov
cmp
jae
rcl
lods
test
int
pop
out
ljmp
sbbl
mov
clc
xor
and
cmp
xorb
jge
ss
lret
pop
mov
push
cmpsb
mov
adc
inc
push
or
daa
jb
cwtl
inc
pop
cmp
push
int
dec
jo
xchg
bound
filds
push
ffree
xchg
cmp
dec
ss
mov
adc
pushf
outsl
xor
stos
push
bound
adc
jge
out
in
jl
insl
push
std
stos
push
pop
je
mov
rcll
mov
add
ret
lock
out
dec
add
sub
mull
fsubrs
mov
clc
jle
add
jg
add
adc
decb
jle
imul
add
mov
jns
cmpsb
xorl
pop
loope
and
data16
es
mov
test
push
in
pop
sbb
addr16
pop
jo
xor
bt
cwtl
push
test
outsb
dec
jbe
aad
push
xchg
loope
fidivrl
ret
or
dec
pushf
cmp
hlt
cmp
push
pop
lds
push
leave
mov
xor
test
xchg
push
xchg
mov
inc
call
push
ss
not
shrb
imul
sub
xchg
cmp
or
mov
icebp
mov
ret
push
out
jg
stos
add
test
cli
movsl
sub
rcrb
push
mov
test
mov
movsl
xor
or
rcr
jmp
xchg
pop
ljmp
fs
pop
ja
or
jae
jmp
imul
and
jb
mov
test
das
ds
ja
sar
cmp
mov
or
ljmp
and
xlat
scas
sbb
cmp
push
mov
aad
cmp
xor
sbb
cs
iret
mov
push
or
insl
movsl
dec
xor
popa
fwait
cmp
lock
jo
sbb
xchg
pushf
xchg
mov
icebp
add
cmpl
push
in
or
jp
push
or
mov
xor
jg
jmp
fildll
or
enter
cld
punpcklbw
test
nop
pop
dec
inc
clc
repz
hlt
fbld
pop
cmp
movl
cmp
popa
rol
out
ljmp
xchg
mov
pushf
jp
icebp
sbb
cwtl
push
out
pusha
jmp
jg
cmp
outsb
cmp
jecxz
inc
popf
or
sti
or
daa
jg
and
pop
and
pop
int3
in
rcr
insb
jmp
push
mov
xchg
jb
jle
mov
inc
pushf
jge
mov
jo
movsl
inc
cmc
jns
inc
inc
iret
fnstenv
decb
pushf
push
add
out
sbb
orl
insl
insb
push
and
xchg
iret
pop
fwait
daa
xchg
mov
mov
and
sub
cli
aaa
in
hlt
out
lds
mov
xchg
adc
pop
xor
pop
cwtl
inc
inc
repnz
sbb
jbe
xor
addr16
mov
lret
outsl
in
cmp
jmp
add
sarl
and
lcall
dec
cmpsl
daa
fisubl
fsubrp
push
mov
mov
push
or
out
cld
mov
lahf
mov
cmp
mov
jne
push
sti
enter
mov
push
icebp
repz
pushf
mov
lea
push
pop
gs
iret
daa
fdivr
or
loopne
push
inc
shll
outsb
and
std
xchg
sti
stc
push
aas
fnstenv
push
fcoms
aaa
movsb
icebp
es
loope
dec
loop
insb
adc
and
mov
sub
dec
lds
pop
inc
add
lds
mov
push
cmpsl
inc
lea
cmc
lret
fstpt
pop
add
icebp
or
loope
sbb
aam
sbb
dec
pop
in
pop
jge
loop
sbb
dec
push
in
out
pop
inc
push
repnz
adc
mov
add
lods
test
xchg
pop
or
add
ffree
push
es
sarb
xor
cmp
loope
in
scas
fs
repz
or
mov
pop
aad
js
and
jne
test
rolb
pop
outsl
inc
lods
aad
mov
stos
daa
and
xorb
or
in
cwtl
cltd
dec
cmpl
rolb
xchg
pop
je
adc
call
or
sbb
mov
mov
icebp
aaa
push
jl
dec
mov
or
adcb
jnp
cmpsl
jae
push
in
sbb
adc
rcll
adc
sub
loopne
jp
outsl
mov
sub
sbb
adc
inc
ds
pop
lcall
loopne
cwtl
jns
jns
std
aad
mov
and
mov
hlt
outsb
enter
cmp
popf
pushf
xchg
xchg
pusha
in
cmpsb
ret
dec
sub
les
push
adc
inc
pop
test
xor
sbb
sub
mov
inc
xchg
or
sub
in
clc
int3
enter
insb
loopne
nop
mov
mov
scas
int3
sub
repnz
pop
insl
mov
mulb
xor
insl
sbb
jno
sarb
ss
shr
inc
jp
scas
in
push
push
mov
mov
sbb
fiaddl
cmp
lret
ja
and
mov
adc
in
mov
popa
add
lahf
cld
inc
maxps
push
mov
jp
cmp
lcall
add
sbb
imul
scas
dec
dec
sbbb
ret
stc
mov
and
sub
mov
cmp
xor
dec
sbb
movsb
stc
addr16
aam
cld
test
jb
inc
jecxz
lret
std
fnstenv
aam
xchg
lods
push
adc
fwait
les
jp
dec
repz
cmp
pusha
js
arpl
mov
lret
shlb
push
sarb
pusha
xchg
es
mov
leave
daa
imul
dec
mov
inc
jge
mov
pop
pop
cmpsb
fdiv
cwtl
loopne
jbe
lods
adc
cmp
dec
icebp
inc
jg
inc
xlat
std
jno
jge
loop
pop
mov
mov
test
ficomps
mov
int
sbb
push
jb
scas
mov
lods
lret
pop
xlat
sbb
and
cmp
lret
adc
popf
xor
mov
out
and
or
and
jnp
sbb
jg
insw
mov
cmc
mov
dec
fnstenv
fbld
jae
inc
in
enter
lea
and
jge
push
mov
andnps
xlat
out
fists
xchg
mov
or
out
add
xchg
xor
pop
and
jmp
nop
fdiv
repnz
pop
pop
repnz
or
call
pop
or
cmp
popa
test
das
lcall
dec
xor
das
lret
in
mov
xor
leave
push
xlat
stos
insl
jnp
pushf
out
adc
xchg
leave
xor
aas
mov
lods
sti
rcrl
int
test
xchg
push
dec
dec
dec
xchg
outsb
cmpsb
adc
mov
xlat
adc
mov
inc
aam
inc
push
add
inc
dec
pop
in
pop
scas
inc
mov
or
int3
lcall
jg
pushl
mov
sahf
add
outsb
sbb
dec
sbb
mov
pop
sub
mov
mov
pop
scas
arpl
push
inc
mulb
xor
push
scas
add
cli
pop
xor
imul
mov
icebp
add
out
hlt
mov
xchg
cmp
popa
shll
jge
repnz
push
shrl
das
jge
fs
aas
cmp
mov
xor
sub
and
and
decb
inc
dec
xchg
imul
pop
pop
in
lods
inc
sub
mov
testb
sbb
lret
mov
lods
xor
fsts
inc
inc
push
mov
push
test
push
scas
push
and
ja
addb
out
adc
loop
xchg
movsl
cmc
push
mov
leave
lret
jae
sub
dec
lock
push
sbb
fdiv
mov
mov
adc
dec
hlt
out
out
movsl
xor
mov
inc
sbb
ret
bound
and
push
mov
into
or
jbe
nop
cld
ja
sahf
push
js
daa
and
xor
push
subl
outsl
loop
pop
test
pop
stos
aad
push
cmp
xchg
dec
lahf
in
push
dec
out
popa
adc
cmp
xchg
sub
aad
push
inc
data16
jmp
push
xchg
pusha
jp
popf
pop
movsl
popf
fstpl
adc
repnz
mov
jbe
negb
pop
test
stos
aad
clc
fadds
and
sub
adc
push
dec
scas
lcall
or
adc
rep
jmp
xchg
pop
mov
fisubs
mov
push
stos
jo
mov
jecxz
jecxz
mov
lahf
in
inc
xlat
cwtl
dec
jl
push
inc
icebp
inc
and
sub
xor
cmp
cmpsl
or
or
jp
sahf
test
dec
fwait
ljmp
pop
push
mov
cmp
iret
sub
mov
in
movb
push
loope
fimuls
sub
inc
mov
ret
icebp
xchg
aam
lret
lcall
pusha
or
aam
jo
fstp
inc
push
aad
loop
movsb
mov
test
mov
and
daa
mov
xchg
mov
icebp
int3
cmp
mov
jle
mov
ja
ret
inc
das
mov
pop
lret
call
outsl
lds
dec
and
std
mov
inc
andb
shrb
negb
add
and
sub
push
addl
sbb
loop
ficompl
dec
pop
push
das
inc
add
add
ljmp
lahf
or
popf
enter
out
repnz
push
in
jo
ljmp
lods
call
mov
sbb
mov
xchg
pop
push
adc
mov
jno
add
mov
inc
daa
adc
xchg
mov
jp
pop
jp
es
stos
and
jb
mov
leave
xchg
push
cli
sbb
mov
dec
and
mov
mov
sbb
out
loopne
adc
sub
cmc
cmp
jmp
mov
gs
xlat
ljmp
jae
repz
lret
mov
and
sbb
mov
ss
mov
cmp
iret
cmp
and
mov
xor
lcall
mov
mov
loop
in
aad
test
dec
sarb
fbstp
jmp
lods
sti
pop
mov
lock
aad
sub
mov
jne
fstl
inc
mov
dec
pop
hlt
inc
into
daa
mov
mov
jae
cli
lds
xchg
xchg
aam
lret
sbb
push
lods
leave
pushf
rcl
adc
jge
or
lods
cmp
fnstenv
mov
aaa
aas
or
fisubrs
inc
pop
mov
lret
sarl
movsb
ds
lea
and
push
popl
pusha
xor
and
sbb
jb
mov
addr16
inc
adc
in
cmp
rcrb
mov
sbbl
cs
cmc
mov
push
sub
mov
cmp
es
mov
dec
es
shl
lods
xchg
sbb
sbb
nop
add
xchg
mov
arpl
lret
push
pop
fwait
cmc
dec
add
gs
pop
or
mov
outsl
jmp
imul
sbb
test
jns
repz
mov
shl
adc
push
adc
icebp
aaa
mov
jae
xchg
das
xchg
and
jno
mov
lea
in
cmpb
fdivrs
xchg
mov
fnclex
sub
addr16
mov
mov
aaa
inc
aad
mov
or
mov
hlt
mov
xor
aam
inc
dec
pop
xchg
mov
popa
push
dec
push
and
adc
out
dec
das
mov
inc
mov
popa
add
cltd
cmp
push
out
insl
cmp
xor
or
xlat
lahf
scas
imul
ss
mov
lds
sub
adc
jb
out
pop
push
jl
fidivl
shrb
mov
and
leave
lret
loope
pop
pushw
bound
stos
into
clc
fdivrl
cmp
pop
push
sub
cmc
xchg
xchg
xor
xlat
xor
cs
ja
movsl
cltd
movsb
lods
adc
pop
sbb
mov
mov
rorl
jmp
dec
and
imul
aas
cmp
sahf
orl
das
pushf
inc
inc
jp
sbb
cmp
mov
iret
pop
and
or
mov
xor
cmp
mov
xor
jo
add
stc
jl
xchg
pop
mov
out
arpl
sahf
pop
sub
pop
add
cmp
xchg
stos
xlat
hlt
dec
int3
cmp
ss
dec
or
inc
mov
fmuls
into
sub
jmp
or
insb
cli
cltd
cmp
xor
and
adc
lahf
stos
test
das
sbb
mov
sti
xorb
add
mov
jge
fs
cs
andb
mov
int3
sti
test
dec
insb
cmp
xchg
adc
pop
pop
sbb
pop
rcrb
dec
aaa
stc
out
iret
ss
jne
sbb
leave
sbb
out
mov
xchg
mov
sbb
lock
out
lahf
clc
test
sub
jns
pusha
dec
lcall
pop
or
loop
mov
xchg
in
daa
pop
mov
inc
jl
xor
enter
imul
jns
sbb
mov
imul
inc
ja
xchg
loope
add
push
or
lret
ja
pop
repnz
pop
lods
int3
dec
and
jae
in
mov
movsl
call
lock
fstpl
add
sbb
lock
cmp
fst
andl
popa
and
test
push
int3
fsts
inc
sub
cld
xchg
shl
and
lds
inc
lods
aaa
jbe
and
lods
ret
dec
push
and
add
iret
bound
mov
xor
xor
aam
fucomip
lret
out
dec
adc
mov
or
imul
push
insb
test
jl
enter
inc
sbb
mov
jle
sarb
pop
ret
adc
fs
fldt
inc
dec
lcall
cmpsb
push
ret
repz
fs
stos
inc
pop
sbb
mov
mov
xor
push
imul
cs
xor
in
push
je
and
stos
adc
pop
xor
push
lods
repnz
jb
pop
cmp
lahf
or
jp
xchg
push
dec
xchg
sahf
lret
repnz
jge
or
rcrl
sahf
mov
sahf
in
and
jnp
ljmp
daa
sbb
mov
lahf
cltd
push
adc
xor
aas
cwtl
push
sbb
sti
mov
mov
es
add
addr16
out
jnp
jns
dec
ficompl
out
jo
jmp
nop
pop
aas
lods
loopne
call
sub
outsl
into
xor
mov
mov
cltd
ljmp
fildll
lock
loop
psubd
sbb
fists
jge
and
xchg
pop
fdivs
inc
adc
push
lret
mov
adc
xor
filds
js
jl
sbb
push
imul
jecxz
inc
sub
cmc
sahf
dec
jle
pop
xchg
je
into
cli
sub
jp
inc
outsl
add
dec
clc
push
aam
loopne
out
ret
inc
pop
popa
mov
and
pusha
add
mov
test
divl
add
xchg
xchg
xor
jecxz
cmp
scas
imul
in
xor
scas
inc
daa
test
mov
shll
and
xchg
loop
pop
out
push
sub
les
aas
cmp
xor
in
xchg
jl
movswl
sbb
outsl
sub
out
and
and
fmull
mov
and
xchg
add
xor
mov
std
aas
push
test
add
int
ror
test
shll
iret
bnd
inc
cwtl
push
push
shll
xchg
imul
shll
test
icebp
nop
lods
loopne
imul
lods
lret
int3
push
pop
int3
or
adc
jns
fdivrl
ljmp
shl
push
mov
sub
cmp
pushf
mov
jmp
lock
mov
or
mov
xor
mov
mov
mov
fists
scas
pop
fsubs
cmp
adc
mov
push
sarb
jle
imul
insb
mov
popa
imul
lret
push
cmc
dec
fstpl
add
fadds
xor
cs
gs
popf
repz
sbbl
es
lods
aaa
push
test
mov
or
popa
sbb
ret
movsl
mov
pop
inc
mov
and
lea
lds
dec
insl
inc
push
sti
mov
xor
fdivrl
cmp
push
or
in
jae
into
xchg
mov
insl
inc
stos
loopne
js
test
test
xchg
pushf
sub
pop
xor
cmp
js
jg
or
dec
pusha
insl
aam
pushf
lds
push
cmp
sub
xchg
test
pop
dec
arpl
testb
lods
gs
xchg
into
ss
xorl
imul
leave
cs
add
lds
jp
adc
cmpsb
icebp
out
inc
dec
in
sub
fs
shl
je
insl
test
fisttpl
pop
xor
adc
mov
mov
lods
xlat
add
adc
xor
cmp
pop
push
outsb
int
fldl
push
pop
cmc
cmp
dec
call
jl
ljmpw
jecxz
adc
in
fldenv
ret
jmp
mov
sub
push
cmp
ds
push
mov
add
insl
push
jmp
ficomps
mov
xchg
lret
xor
nop
push
loope
aas
loope
lcall
enter
and
jecxz
dec
out
dec
iret
push
jne
sub
sub
mov
dec
imul
and
and
leave
or
imul
daa
adc
aad
and
data16
jne
fsubrs
or
mov
mov
push
mov
mov
icebp
mov
fisttpl
je
test
cmp
and
cmp
cli
push
push
adcl
inc
sti
xchg
js
xchg
test
stos
shlb
jo
jnp
add
pop
sbb
call
outsl
cmpsb
in
mov
shl
mov
cli
js
rolb
or
lret
xor
rcrl
sbbl
ja
aas
push
lods
sbb
and
jae
mov
add
ficomps
mov
jp
dec
jg
pop
enter
dec
enter
movsb
xchg
mov
xchg
sbb
sahf
je
or
movsl
pushf
dec
sub
fs
pushf
jns
les
xchg
popa
push
xchg
inc
out
mov
stos
loopne
rorb
test
or
sbb
sbb
dec
cld
shl
sbb
into
jle
mov
cmp
pusha
fs
push
pop
pop
clc
pop
in
xlat
inc
mov
adc
pusha
xchg
test
push
cld
inc
lods
mov
sub
mov
xor
add
repnz
ret
iret
movsl
jp
push
xchg
in
scas
pushf
test
cmc
je
pushf
jmp
nop
pop
jb
xor
adc
inc
cmpl
sub
jecxz
leave
cltd
mov
ljmp
jnp
dec
lret
push
lcall
mov
xor
cld
lahf
daa
xchg
push
mov
push
pop
sbb
outsb
lds
test
cwtl
sbb
mov
jo
xor
movsb
xlat
push
sbb
call
xchg
in
mov
xchg
data16
mov
cvttps2pi
xchg
dec
inc
fidivrl
mov
jae
out
cwtl
les
mov
jecxz
jne
inc
mov
fildll
mov
in
jp
xlat
mov
add
outsb
xchg
imul
dec
ret
mov
adc
adc
dec
aam
stc
mov
inc
adc
fldenv
subb
adc
or
int
sub
dec
popf
vsubps
jns
ret
sub
inc
add
loopne
out
jmp
insb
mov
mov
or
cwtl
and
sub
movsb
bound
pop
jo
cmp
ds
xchg
pop
jno
popl
mov
loop
add
stos
test
xchg
add
and
jae
jbe
mov
push
insl
or
pop
adc
nop
pushf
jmp
mov
shlb
mov
sti
dec
mov
nop
test
ret
test
lods
add
and
lock
mov
mov
outsl
mov
mov
push
cwtl
in
das
pop
sub
lea
pop
outsl
add
rcrb
sbb
jns
mov
mov
imul
xlat
insb
int3
dec
and
lods
insb
xchg
in
aas
outsl
jmp
jbe
stc
push
outsb
popa
lds
xor
push
orl
jb
fnsave
insl
xchg
mov
push
les
push
cmp
or
call
pop
xchg
jne
aad
call
pop
pusha
mov
adc
push
sbb
test
mov
or
outsb
dec
int3
lret
and
stos
xchg
sbb
lret
dec
je
jne
mov
push
sbb
sbb
sbb
xor
jle
fs
sahf
sub
mov
cld
and
cmp
pusha
xor
and
imul
jne
loope
inc
pop
dec
fsubl
dec
fistpll
xchg
mov
mov
mov
push
cmp
dec
imul
out
push
and
jns
adc
nop
pop
inc
dec
xchg
lahf
jb
jp
jle
xor
outsl
pop
xor
sub
sbbl
dec
and
xchg
pop
and
add
mov
push
dec
xchg
jecxz
jg
scas
xchg
push
scas
mov
clc
insb
cld
loope
dec
add
insl
scas
andl
cmp
ljmp
dec
add
aas
and
inc
xchg
cmpsl
cld
stos
add
jae
xchg
clc
pop
outsl
push
pushf
cmp
aaa
mov
ret
jb
mov
inc
sbb
add
mov
and
pop
cmp
and
fstpt
add
mov
inc
inc
or
cltd
xrelease
ss
xlat
stc
scas
cmp
fists
mov
testb
in
sbb
xchg
imul
scas
pushf
addr16
roll
imul
sub
rcl
std
pop
out
in
xor
movsl
test
inc
lock
sub
sarl
xor
mov
jl
xor
cmp
les
and
lcall
cmp
lcall
jbe
xor
imul
nop
std
insb
push
and
jge
sub
sbb
pop
jb
mov
insl
aad
out
lcall
bnd
and
mov
jle
bound
mov
ss
sbb
in
mov
jno
pusha
out
pop
jno
and
fs
mov
adc
insl
push
jmp
add
pop
xchg
sbb
cmp
ljmp
and
and
mov
repz
or
lret
jae
or
enter
push
pop
jae
fwait
out
dec
rorb
sbb
imul
repnz
data16
and
cmpsl
push
and
dec
popa
rcll
mov
adc
and
push
and
inc
xor
mov
xchg
mov
ljmp
or
lods
xchg
xchg
cmpsb
repz
data16
mov
imul
adc
nop
inc
mov
dec
jns
in
dec
xchg
jno
pop
inc
dec
cmp
sahf
mov
enter
scas
decl
xchg
inc
mov
int
addb
sub
add
jp
shr
jge
add
and
fs
scas
outsl
adc
sbb
sub
mov
xchg
pop
mov
inc
inc
mov
stos
mov
xchg
mov
ss
pop
cmp
pop
sahf
imul
xor
nop
or
add
jno
xchg
sub
sti
insl
jbe
mov
push
les
sbb
sbb
jecxz
lock
mov
add
jl
arpl
aam
pop
int3
or
fistpll
js
mov
js
lcall
sbb
mov
pop
nop
or
mov
scas
mov
or
push
push
push
mov
aaa
repz
hlt
cmp
mov
push
pop
xchg
jo
leave
lods
sbb
sbb
mov
sarl
arpl
inc
and
xchg
cwtl
jnp
clc
sbb
lcall
xlat
mov
dec
dec
dec
std
in
xchg
in
test
push
or
push
mov
mov
mov
ljmp
xchg
mov
pop
movsl
inc
cmp
jne
jne
repz
pop
xor
jmp
insb
aam
ljmp
pop
fisttps
mov
scas
mov
scas
ja
iret
fildll
mov
xchg
int
insb
test
add
cmp
mov
jo
outsb
ret
addr16
shlb
imul
into
jno
or
mov
cmp
bound
fnstcw
sub
xchg
and
out
aas
lret
ja
cmp
pushw
push
jp
push
push
sub
xchg
sti
fnstenv
xchg
movsl
nop
pop
mov
push
push
test
xor
pop
cmp
dec
adc
dec
or
rcrb
xchg
not
fcmovb
in
xlat
dec
stos
jo
sbb
xor
pop
daa
add
push
cmpsb
lock
cmp
push
adc
cwtl
movsb
lds
sarb
cltd
mov
inc
mov
testb
or
fstpl
add
jne
in
or
cmp
and
add
jne
fwait
push
add
fwait
and
iret
shll
adc
stos
or
stos
mov
les
mov
mov
scas
push
adc
repz
movsl
iret
push
xchg
inc
int3
sbb
mov
jge
inc
xchg
mov
out
fmuls
jg
xor
push
and
or
inc
ret
push
cmp
xchg
inc
rcl
push
outsb
push
mov
addl
pusha
orl
cmp
test
shrl
cs
jp
jge
push
test
ss
sub
or
adc
dec
fcomps
sbb
lds
sti
movsb
push
iret
lret
sbbl
add
stc
add
mov
sbb
push
in
je
inc
sub
decl
iret
xchg
andl
ret
ffreep
ret
mov
mov
fidivl
pop
sub
test
aas
int3
cwtl
and
pushf
loope
lods
xchg
ljmp
mov
adc
popa
clc
repz
aam
mov
push
dec
cmp
les
leave
call
pop
ljmp
add
cmp
cmp
orl
and
jecxz
and
mov
jae
lods
push
adc
dec
add
test
sub
out
lret
jge
outsl
insl
xlat
or
lods
aaa
call
rcrl
stos
push
ret
xor
inc
cmp
leave
scas
test
cmpb
mov
mov
push
pop
addr16
aam
sarl
stos
cmp
iret
stos
push
or
enter
inc
out
enter
repz
dec
mov
loop
cmpsl
notb
dec
orl
cmpsb
xlat
mov
jg
cmp
imul
ret
add
sub
fadds
imull
adc
inc
pop
out
cmc
push
ret
sub
repnz
ret
scas
ljmp
lahf
addr16
lds
lahf
pop
pusha
dec
pushf
mov
or
repnz
cmp
movsl
jge
adc
into
jmp
jle
cmp
scas
mov
outsb
and
cmp
daa
jmp
inc
out
push
sub
add
ja
mov
idivl
mov
fdivs
dec
test
aas
or
out
aaa
arpl
xor
pop
ss
or
cmp
inc
lret
pop
std
and
in
ror
sub
push
and
aaa
pop
dec
fwait
dec
inc
dec
add
or
jno
ds
adc
adc
std
jp
and
jnp
push
lcall
lret
sub
scas
mov
loop
fs
pop
sbb
imul
insl
xchg
aas
scas
push
mov
dec
psadbw
adc
outsl
mov
int3
dec
push
cmp
xchg
test
ret
movsb
push
lods
fidivrs
cli
pop
push
call
pop
outsb
fisubrl
pop
test
inc
ljmp
sbbb
mov
push
inc
pushf
pop
test
addr16
fucomip
push
rorb
mov
bts
test
dec
ljmp
jmp
rcll
adc
test
adc
es
and
imul
adc
fwait
jnp
pop
enter
fstpl
cmp
inc
push
into
xor
push
push
js
in
iret
stos
cld
adc
cwtl
sbb
movsb
test
popa
jl
lcall
sub
loope
test
jge
js
daa
add
cs
sbb
adc
xlat
xor
inc
in
test
fiaddl
sbb
xlat
pop
loopne
cmp
pushf
sbb
jb
popf
add
jnp
jle
imul
sbb
lret
outsb
xchg
pushf
xor
and
stc
incl
scas
or
lcall
sahf
xlat
ss
movsl
adc
add
pop
sbb
jecxz
daa
arpl
jle
or
in
loop
mov
pop
daa
jns
imul
push
cmp
fmuls
pop
or
mov
daa
shr
nop
outsl
sti
test
popf
dec
testl
add
cs
xlat
testb
sbb
xlat
dec
stc
cwtl
and
mov
push
cwtl
pop
movsb
popf
and
loop
das
out
push
loopne
adc
push
out
adc
xor
pop
in
out
leave
loope
sbbl
je
xchg
cld
frstor
add
push
jb
setp
xchg
jb
dec
notb
jno
sbb
xlat
clc
outsb
xor
mov
sbb
mov
pushf
fcoms
mov
pop
xchg
mov
pusha
ljmp
aad
ficoml
mov
or
mov
push
aad
mov
pop
mov
mov
fnsave
cmp
sub
push
or
mov
mov
cmp
roll
das
jne
rolb
jge
stos
pop
jmp
dec
out
call
mov
dec
pop
and
insb
mov
jmp
shrb
repnz
adc
das
pop
bound
les
pop
push
xchg
adc
cmp
int
xchg
mov
xchg
insl
xchg
push
push
iret
gs
push
sbb
push
dec
inc
and
int3
mov
jmp
xor
cmp
sub
adc
out
das
aas
inc
xchg
lods
mov
dec
fstps
adc
xchg
fadds
in
dec
popf
jmp
pop
pop
and
mov
bound
ret
cmc
insl
div
loope
outsb
cmp
xor
push
repnz
out
xchg
loope
jne
dec
jmp
mov
outsb
nop
jnp
xchg
sub
or
mov
or
jp
stos
hlt
inc
mov
js
leave
loopne
mov
mov
inc
dec
dec
movsl
jmp
sbb
aam
add
and
dec
sahf
mov
aam
arpl
lods
rorl
mov
jg
call
subl
adc
fidivrs
stc
sbb
call
sub
in
stos
pop
xor
xor
das
mov
xchg
or
fdiv
in
adc
out
push
xor
cmp
xchg
and
jmp
lods
or
xor
mov
fistl
or
mov
mov
xchg
inc
fstps
push
out
mov
add
aad
xchg
lock
or
pop
xor
aaa
jmp
cmpsl
cs
fistl
mov
loop
mov
outsl
lcall
jecxz
adc
and
push
jo
fistps
aam
mov
fstsw
nop
js
subl
xor
hlt
add
gs
adc
xor
push
xchg
shr
or
fists
pop
mov
inc
add
ds
in
or
add
std
aad
mov
popa
pop
push
push
mov
sub
lea
shl
cmp
fmuls
daa
jle
pop
loope
sub
cmpsb
fldt
fldl
mov
pop
ret
in
adc
and
jmp
in
xlat
popa
xchg
test
xchg
sbb
or
mov
fs
push
jno,pn
xchg
cld
mov
ret
jge
push
dec
xchg
fmull
lcall
push
xchg
and
pushf
xchg
dec
adc
dec
data16
cld
mov
cli
daa
and
test
out
push
mov
out
inc
sub
jge
inc
repz
fwait
mov
dec
scas
xor
xorb
ljmp
lds
xchg
inc
inc
stos
imul
jns
ret
sub
xor
mov
addr16
and
cmp
dec
dec
jae
add
or
push
fisubrs
fildl
outsb
ljmp
loope
es
pop
mov
popf
lcall
lds
cli
and
push
imul
adc
adc
leave
xor
inc
sbb
mov
jnp
stos
jmp
stc
sbbb
sub
xor
xchg
adc
popl
cli
cli
adc
lret
movsl
repnz
iret
jb
sbb
loop
lret
sbb
enter
daa
outsl
enter
jns
pop
push
pop
inc
and
iret
cld
out
scas
mov
jo
sub
cs
pop
lcall
jne
fwait
mov
stos
test
cmpsb
mov
pop
daa
adc
loop
jo
push
js
jge
adc
ds
aam
mov
popa
das
jg
dec
mov
sahf
push
xor
xor
mov
scas
cmp
add
movaps
enter
add
stos
mov
ss
call
lock
lods
jge
ljmp
mov
xchg
in
mov
out
inc
js
or
fsubrs
insb
and
mov
dec
lret
push
sbb
in
sbb
mov
stc
int3
mov
loope
das
xchg
xor
jno
pcmpgtd
xchg
movsb
ss
loope
div
cltd
ret
fidivs
cwtl
mov
jmp
sub
pushf
sti
lcall
jmp
fcmovnbe
cltd
jl
cmc
je
dec
push
inc
mov
stos
data16
popa
aas
outsl
hlt
jns
sarb
add
loop
pop
sbb
out
lods
add
enter
out
adc
cmpsb
xchg
xchg
adc
cmpsl
mov
movsb
pop
cmpsb
pushf
push
lret
fcoms
mov
jae
or
mov
push
in
pop
adc
repnz
cwtl
fld
push
pop
ds
lods
mov
arpl
lret
repz
in
das
add
mov
insb
and
testb
inc
push
sub
fistpl
sti
push
add
repnz
lahf
dec
call
push
or
xor
xor
lods
scas
jae
enter
sti
mov
sbb
mov
shl
test
prefetcht0
mov
push
into
movsb
repnz
jo
push
subb
inc
jle
add
cmp
popa
sbb
negb
loop
cmp
mov
mov
push
xchg
jbe
loopne
roll
js
push
lcall
xchg
popa
push
sbbl
xchg
push
pushf
jne
and
repnz
rcrl
in
jp
sub
pop
aam
int
xchg
mov
and
es
in
outsl
jecxz
std
and
fdivrs
fcompl
and
mov
adc
ds
test
std
shrl
roll
jge
pop
sub
aaa
js
gs
scas
insb
imull
sbb
jne
fldcw
mov
adc
mov
dec
push
mov
stc
popf
lret
push
out
mov
roll
push
out
sbbb
lock
movsl
int3
add
les
pop
xor
lea
pop
jl
pop
mov
js
jns
mov
jle
xor
push
bound
repnz
decb
xor
loope
loope
sbb
xor
and
sbb
ss
push
fstl
scas
out
loopne,pt
jle
push
pop
xchg
adc
dec
inc
xor
mov
inc
add
fwait
in
arpl
pop
fwait
push
mov
inc
repnz
rcl
add
push
mov
icebp
divl
xor
push
stos
stos
jns
adc
icebp
in
and
fld
bound
push
push
enter
mov
sub
iret
xor
push
dec
add
xchg
pop
sub
sbb
cmpsb
push
rol
sahf
das
inc
divl
enter
sub
xchg
xor
popa
push
inc
aas
push
and
or
jmp
aad
scas
or
test
dec
cmp
add
imul
stos
ret
lock
int3
cmp
jmp
imul
dec
fstl
rolb
xlat
mov
sub
out
lahf
fimull
roll
inc
dec
inc
test
sbbl
dec
scas
pop
adc
cmp
jle
dec
xor
mov
push
add
mov
mov
sbb
je
movsb
mov
sti
data16
dec
lds
mov
pop
mov
and
loopne
jbe
mov
sub
xchg
mov
jns
insb
outsl
cmp
stos
mov
push
stc
mov
push
dec
and
push
cmpl
aam
mov
jge
ss
and
fwait
jo
mov
pop
adc
mov
add
stos
rol
idiv
shl
stos
pop
jb
pop
jo
jo
push
mov
cmp
fs
xor
movsb
sub
aam
cmpsl
lods
jl
in
daa
test
loopne
rclb
sub
stos
aaa
mov
mov
popa
push
test
xor
in
dec
mov
test
xor
mov
stos
push
cmp
mov
mov
xchg
je
jmp
jp
push
out
dec
js
jl
mov
xor
dec
iret
popa
pop
mov
ret
and
jge
sarl
pop
adc
xchg
pop
das
sahf
mov
or
mov
xorb
mov
jl
ret
mov
cmp
xchg
hlt
add
adc
fs
lods
push
lock
xor
or
dec
ret
jge
ret
out
rolb
push
loopne
es
lahf
lock
lock
xorl
pop
and
push
push
sbb
pusha
fdivs
cmp
adc
mov
mov
pop
sahf
add
andl
cmp
xchg
pop
es
into
mov
lea
pop
mov
xor
and
mov
nopl
es
std
imul
mov
fmulp
clc
bound
imul
pop
cmp
cmc
push
fidivrs
outsb
test
test
jbe
jne
fs
repz
adc
out
push
ss
rol
test
fs
shlb
and
adc
pushf
jae
inc
jl
pop
push
rcll
adc
lods
les
mov
pop
dec
dec
mov
imul
pop
lahf
push
lods
jnp
shrb
dec
ds
sti
jg
add
push
or
pop
xor
pop
ss
jb
push
mov
mov
rcr
fbld
das
into
mov
mov
scas
add
mov
scas
mov
icebp
and
test
mov
stos
push
dec
inc
jo
inc
mov
mov
xlat
and
push
ret
rol
xchg
or
xor
leave
aad
test
pop
jne
pop
dec
lahf
fs
push
mov
push
push
add
cmc
dec
pop
mov
xorb
adc
pop
adc
push
lcall
cltd
dec
pop
fsubs
mov
xchg
outsb
and
leave
xlat
lds
push
add
dec
loopne
pushf
push
lcall
inc
sbb
imul
add
icebp
out
repnz
dec
cmpsb
or
mov
fistl
jno
mov
sbb
adc
push
inc
rolb
push
aad
sahf
stc
push
in
push
cmpsb
das
mov
into
inc
push
push
inc
movlps
jae
dec
xor
fldt
lock
dec
xchg
daa
in
nop
mov
push
or
orb
mov
fsubrl
jno
inc
mov
hlt
ljmp
pushf
bound
push
rcrl
pop
arpl
xlat
jae
sarb
ret
cmp
lret
mov
add
addr16
xchg
and
sub
push
sub
push
in
fisubl
idiv
sbb
push
push
push
sbb
lahf
in
sub
aas
int
pop
cltd
es
xchg
insb
jg
cltd
pop
mull
mov
dec
adc
jno
mov
xchg
adc
roll
test
rcll
arpl
stc
xchg
int
xor
les
dec
scas
leave
mov
add
push
stos
and
lret
push
or
jnp
and
insb
add
out
fmuls
push
lds
pop
arpl
mov
es
cld
or
es
xchg
mov
popa
das
adc
cmp
inc
xor
xor
cmpsl
mov
sub
add
push
jge
lret
xchg
loop
mov
inc
mov
mov
push
mov
adc
mov
out
fadds
scas
mov
add
jno
int3
fsubs
int
div
mov
dec
les
insb
test
sub
push
dec
fldl
imul
cmp
leave
dec
and
mov
loopne,pt
jle
imul
mov
sbb
test
cmp
pop
addr16
lds
pop
pop
out
sub
cmpsl
jno
add
add
out
stos
xor
int
ficompl
sti
jae
les
pmulhw
int3
fsts
das
xchg
xchg
and
mov
cmpb
rcl
adc
sbb
rorl
pop
xor
loopne
stc
cmp
lods
push
inc
add
jns
pushf
nop
add
arpl
adc
popa
leave
arpl
les
out
idivl
or
pop
mov
adc
cli
roll
pop
movsl
ror
sbb
das
xchg
stos
movsl
dec
test
mov
adc
addr16
sub
add
mov
enter
mov
and
div
push
jecxz
mov
sbbl
sbb
push
xchg
imul
pop
jg
add
inc
popf
cs
mov
jb
sub
call
testl
mov
inc
and
stc
inc
add
call
pusha
or
std
adc
jle
xor
mov
fisubl
push
ja
push
lea
sub
aas
divl
pusha
lret
dec
fstpt
enter
cld
pop
loope
and
push
sbbl
fistl
inc
mov
ret
nop
test
jbe
mov
xchg
jbe
fwait
xorb
gs
invd
fldcw
mov
lahf
je
repz
lock
stos
lret
pop
inc
imul
ret
cld
sbb
and
shlb
dec
addl
mov
add
push
xchg
scas
fcmovnbe
mov
testb
add
fmull
js
sahf
sbb
fldcw
sbb
pop
loop
es
out
lds
mov
ret
je
sti
adc
sub
sub
sbb
sub
xchg
rcr
mov
punpckldq
out
jp
repnz
jb
fdivs
addr16
and
pop
mov
push
or
cwtl
stos
notl
adc
dec
test
fs
jmp
shlb
pop
mov
adc
dec
sub
add
ficoml
xor
inc
xor
xor
dec
int3
inc
leave
sbb
test
sub
push
roll
sti
aad
push
and
mov
test
fldl
fisubrs
or
push
jo
mov
adc
das
repz
call
sbb
xchg
sbb
mov
sub
push
lock
jmp
popa
sbb
mov
jp
pop
xchg
int
push
jle
frstor
aaa
cmp
stos
mov
mov
adc
xchg
adc
int3
insb
out
repz
ret
xor
xorb
mov
dec
pop
dec
adc
js
outsb
test
ljmp
push
and
dec
mov
push
shrb
xchg
and
out
adc
imul
xchg
dec
es
ljmp
lods
jmp
mov
cs
or
xor
mov
in
and
mov
in
dec
sbb
orl
lock
inc
cmpsl
loope
ret
mov
add
dec
gs
add
sti
ficomps
cmp
sub
jge
or
or
scas
or
inc
sar
dec
sti
add
mov
cmc
mov
or
mov
insl
sbb
sahf
xchg
dec
mov
cmp
pop
mov
stos
lods
jnp
jns
xorl
out
iret
sarl
es
ljmp
cwtl
rcrb
sti
sub
inc
cli
ja
jbe
ja
scas
mov
in
imul
mov
mov
mov
das
and
or
imul
je
mov
pop
popf
daa
xchg
out
cwtl
je
fsts
mov
cmpsl
enter
xchg
repnz
dec
mov
and
movsl
inc
xchg
add
lret
jecxz
add
jle
xor
pop
add
je
or
mov
add
xor
adc
enter
loop
or
and
rcrl
loope
out
scas
cmp
sub
sub
icebp
in
stc
push
in
hlt
gs
add
xchg
jecxz
xlat
xchg
cmp
in
icebp
sbb
pop
lods
lcall
leave
test
jmp
scas
gs
mov
out
inc
mov
xchg
adc
mov
xchg
lods
xor
push
sub
icebp
inc
cmc
aas
out
sbb
sub
sbb
stc
adc
loopne
in
dec
add
arpl
add
mov
xor
dec
add
inc
clc
cmp
dec
jmp
xchg
lret
xchg
sbb
adc
inc
cmc
xchg
mov
iret
mov
push
out
xor
lods
test
jle
pop
lret
mov
je
sarl
stos
mov
cmpl
push
rcrb
pop
scas
jmp
xsha256
cmpsb
push
xor
inc
and
and
je
pop
xchg
adc
cld
sbb
ret
push
sub
mov
and
repz
and
fs
and
mov
into
pop
xchg
aaa
add
push
les
lods
jnp
add
call
mov
inc
xchg
mov
leave
add
jb
fistps
lock
sub
gs
pop
addb
xor
scas
mov
fsubrs
int
call
mov
xlat
jg
push
pop
lcall
inc
pop
adc
push
loopne
daa
adc
mov
pusha
mov
add
adc
adc
in
fsubrl
pop
xchg
adc
mov
push
aaa
xchg
imul
aam
jne
mov
pop
jne
add
sbb
push
xchg
les
jnp
std
adc
fldcw
int3
push
xorl
xchg
sub
push
jae
mov
push
xor
dec
mov
ret
sub
bound
icebp
ret
adc
sub
stc
fs
pcmpeqb
je
mov
xor
cmp
aaa
cmc
jmp
enter
dec
or
push
push
lcall
or
push
lods
rcll
xor
scas
inc
xchg
mov
jl
push
mov
aas
sbb
sub
mov
cmpsl
lock
pop
push
pop
xor
imul
pop
cmp
and
xorb
lods
pop
inc
inc
add
jmp
ret
in
aas
pusha
outsl
adc
adc
add
jl
ret
fwait
ror
testb
inc
idivb
mov
or
popf
stc
outsl
dec
adc
or
or
xor
mov
cltd
xchg
hlt
popa
xchg
pop
popf
cs
fs
call
mov
sbb
xchg
lea
insb
pop
and
push
nop
call
sub
dec
or
shll
cld
mov
stos
ss
sbb
pop
adc
call
push
shlb
mov
shl
repnz
scas
push
or
scas
fdivl
outsb
fs
and
cmp
lret
pop
test
push
shll
jg
fcmovu
pop
mov
inc
inc
ja
jp
inc
outsb
dec
or
ds
std
push
shll
push
jle
rcrb
sbb
fwait
outsb
loop
dec
mov
mov
pop
fsubrl
fdiv
cwtl
or
addl
add
roll
adc
pushf
sub
jae
add
push
dec
mov
push
ret
and
es
sahf
testb
dec
ds
fadds
mov
stos
cmc
outsb
mov
iret
mov
jmp
mov
mov
sub
cld
insl
rcl
inc
mov
fdivrl
aas
lret
jo
mov
cmp
and
mov
and
in
sbb
add
and
lds
push
out
xor
add
sysret
in
pop
sbb
adc
adc
or
adcl
hlt
or
sub
mov
pop
daa
repz
lea
dec
ds
data16
in
add
pop
stc
add
lods
mov
xchg
aaa
fistpll
or
repnz
gs
jb
lcall
sti
mov
and
mov
mov
push
and
fs
jnp
sub
js
sbb
and
das
xor
sbb
pop
pusha
loopne
fwait
sbb
mov
ror
lds
push
loop
cli
out
fcmovb
push
gs
cmp
jp
sub
xchg
or
flds
loope
ss
out
mov
cs
inc
mov
or
dec
in
sbb
insb
add
fs
cmp
dec
pop
lds
xor
mov
lock
fwait
mov
cmp
fwait
arpl
jnp
lock
mov
sbb
lahf
xor
cld
sahf
mov
xor
fists
push
out
push
inc
mov
inc
clc
loop
rclb
rcrb
inc
scas
xchg
jo
setp
insl
push
movsb
imul
enter
outsb
icebp
cltd
xor
dec
jecxz
cmp
add
mov
sbb
lea
add
sti
xchg
jo
rcrb
and
repnz
loope
aam
aam
ljmp
add
fldt
das
leave
dec
sbb
loop
cmpsl
push
dec
inc
mov
push
imul
inc
mov
mov
mov
sub
add
push
imul
sub
xchg
xchg
data16
adc
mov
pushf
cmova
dec
je
arpl
jmp
push
pop
adc
iret
es
push
fidivrl
add
ljmp
cmp
and
sub
jl
loopne
aad
les
lods
push
add
cmp
je
rorl
fnsave
fdivrl
inc
or
adc
lods
sbb
sub
fstps
cwtl
scas
mov
mov
idiv
test
ss
pushf
cmc
xchg
ficoml
cwtl
jmp
ficomps
out
pop
mov
aaa
cmp
pop
or
insl
mov
jno
das
mov
pop
dec
repz
cmp
push
jmp
jbe
repnz
enter
repnz
out
call
iret
sbb
xorl
vsubps
cs
in
dec
inc
jmp
inc
fldcw
clc
xchg
imul
lret
rorb
out
andl
mov
jmp
and
lret
mov
lods
cmp
xchg
and
ljmp
mov
arpl
mov
adc
fadds
push
lods
jl
out
mov
and
mov
std
jge
stc
jo
or
sub
sbb
add
cmp
in
sub
test
negl
adc
mov
and
les
hlt
push
dec
fs
jo
pop
aam
sarb
jbe
sub
xchg
andl
adc
pop
es
xchg
adc
data16
push
jmp
xor
lret
fdivrl
push
dec
inc
pop
cmpsb
and
mov
inc
mov
cli
mov
jle
xor
xchg
cld
jmp
cmp
push
cltd
xchg
sub
bnd
push
test
sub
cmp
dec
xchg
push
add
dec
jae
out
andl
ds
shrb
int
lea
jle
nop
jl
adc
popf
jl
pop
push
aas
adc
jnp
pop
jle
inc
pop
mov
pop
div
push
ljmp
push
lret
mov
and
call
movsl
and
les
dec
adc
bound
push
aaa
scas
cmpb
cmpsl
data16
fisubrs
sub
jle
rcrl
fidivs
das
xlat
loopnew
jl
xchg
aad
push
out
hlt
cmp
loope
add
sbb
mov
pop
repz
sub
mov
fwait
sti
fisttps
push
adc
fcomps
notb
imul
cmp
stos
and
in
adc
dec
dec
jne
and
aad
mov
cmp
mov
dec
push
loope
in
or
push
ljmp
pop
pushf
mov
jmp
sahf
mov
in
mov
add
jp
or
in
and
jnp
insl
movsb
outsb
mov
int
inc
inc
aas
nop
jbe
pop
cmc
xor
adc
std
add
inc
xchg
fisttps
lock
js
aaa
mov
push
ror
stc
mov
sub
cmpsl
dec
fs
fdivr
gs
push
xor
mov
es
test
test
mov
push
cwtd
mov
mov
jl
faddl
mov
jne
cmp
mov
add
inc
pop
sbb
aas
stc
cwtl
sbb
das
fcomps
xchg
push
lret
mov
cmp
setae
hlt
dec
add
cmpl
out
aad
jb
scas
daa
or
dec
xlat
xchg
out
rcrl
jle
mov
stos
loop
sbb
xchg
mov
push
jl
cwtl
sarl
xchg
mov
inc
cmp
inc
data16
je
test
lret
mov
call
jle
push
cwtl
je
rcrl
pop
mov
xor
cld
test
shll
or
lock
lcall
fldenv
frstor
add
xor
inc
xor
xchg
leave
pop
and
or
push
sub
and
mov
add
add
adc
or
shll
ret
out
test
adc
roll
push
pop
loop
fadd
xchg
dec
cmp
push
xlat
jle
dec
scas
mov
js
sarl
rolb
adc
cltd
pop
sbb
pusha
jne
movsl
mov
f2xm1
xor
jns
xchg
cmc
add
fisttps
shl
mov
cltd
jbe
mov
pop
icebp
pushf
xor
xchg
sub
add
lcall
inc
stc
jge
xchg
push
popf
pop
jmp
sbb
lock
mov
stos
pop
ds
pop
out
add
lea
popf
imul
out
jmp
data16
sub
mov
outsl
xchg
shrb
cmp
jecxz
gs
push
cmpsl
push
sub
and
clc
pop
jg
aas
imulb
and
mov
inc
fdivl
test
cmp
xchg
mov
add
sbb
push
pop
aaa
stos
mov
sbb
jb
dec
mov
pop
fwait
fwait
or
pop
lcall
push
cld
mov
cmpsl
push
loop
sbb
jp
data16
loope
lods
pop
in
dec
mov
cmp
fldl
scas
fildll
imul
lret
int3
les
fs
fucom
mov
enter
mov
mov
xchg
lret
jno
push
stos
popa
sub
sbb
ljmp
xchg
pop
iret
aas
icebp
xchg
into
out
jne
jns
mov
mov
xlat
imul
sub
movsl
jp
notl
sbb
and
lods
loop
pushl
adc
sub
subl
push
pushf
cwtl
es
xor
cmc
inc
jne
lea
add
mov
cs
add
mov
or
add
insb
or
fisttpl
cmp
int
mov
cmp
sub
in
test
dec
sub
roll
sub
adc
ret
add
sti
stos
and
inc
cmp
test
dec
adc
xchg
xor
cmp
sahf
fcoms
sbb
jo
sub
bound
andb
inc
and
add
scas
imul
push
fs
sbb
add
xchg
je
pusha
mov
loopne
aaa
inc
test
dec
jecxz
sbb
enter
fdivr
lods
stc
and
fmuls
mov
rorb
mov
fdivrl
mov
or
pop
das
add
dec
adc
xchg
icebp
inc
js
outsl
repz
stos
incl
lahf
mov
add
cli
roll
gs
cmc
pop
xchg
leave
inc
jb
daa
mov
outsb
cmp
aaa
lahf
ljmp
cs
mov
sahf
stos
int
jge
add
add
pop
inc
cmpsl
and
xchg
or
ret
jbe
xlat
js
mov
xor
inc
leave
mov
pop
cwtl
scas
adc
lods
jbe
xorb
mov
pop
jp
jmp
in
cmpsb
sbb
stc
es
pop
push
pushl
lds
fucomi
ja
or
mov
push
inc
jle
lcall
rorb
rcll
cmp
push
pop
mov
pop
push
enter
ret
dec
cwtl
test
dec
scas
out
jl
ja
cmp
sti
add
jmp
mov
adc
cmp
gs
lock
push
xorb
xor
xchg
jecxz
push
in
in
push
or
add
add
addb
jmp
xchg
leave
decl
push
scas
in
scas
mov
or
je
sbb
nop
dec
pop
rolb
mov
cltd
rcl
xchg
mov
or
test
mov
hlt
inc
mov
push
adc
dec
movsb
inc
ret
push
les
insl
js
out
out
pop
lcall
dec
add
adc
out
jmp
fstpl
aas
mov
fiadds
mov
xchg
pop
push
mov
in
add
cmp
add
mov
hlt
imul
push
addr16
test
int
jne
in
sbb
sbb
int
xchg
jecxz
cmp
xchg
int
jle
xchg
jp
dec
adc
sti
aam
xchg
inc
sbb
addl
sub
sub
jg
js
mov
lods
jmp
xchg
push
arpl
push
icebp
jbe
mov
mov
mov
adc
das
insb
fstpl
add
addr16
movsl
mov
push
ja
hlt
add
xchg
xor
xor
jmp
fiadds
push
mov
inc
pop
xor
cmp
mov
push
mov
sbb
ja
ficoms
mov
cmp
push
insb
das
jge
pusha
xor
shl
enter
cmp
pop
outsb
rorb
jnp
ss
out
enter
rcrb
nop
push
mov
stos
leave
pop
and
mov
xchg
test
test
xchg
mov
push
mov
xor
rcl
push
in
mov
imul
into
in
cmp
int3
pop
push
pop
data16
repnz
ds
sbb
push
mov
pop
xchg
sbb
das
lea
lret
pushf
idivb
sbb
dec
ljmp
bound
imul
into
das
dec
jnp
mov
rcll
mov
clc
repnz
jae
sbb
mov
dec
xor
xchg
mov
insl
fisttpl
sub
push
inc
xor
fdivl
stos
jp,pt
pusha
cmp
test
pop
in
popf
mov
ljmp
push
adc
testb
negb
xor
inc
cmp
aas
or
imul
sbbb
push
mov
in
or
lcall
jp
mov
fnstsw
imul
pusha
hlt
jp
ficoml
pop
sub
push
pop
pusha
add
jp
subb
test
iret
add
shl
test
sub
jo
mov
clc
ret
pop
mov
mov
jg
daa
aas
xor
fcoml
cmp
pusha
mov
icebp
push
pop
pop
ljmp
fcmovbe
lret
push
xor
clc
in
and
daa
ficomps
repz
inc
push
dec
xor
lcall
sbb
sub
ja
cwtl
xchg
stos
inc
ja
int3
fs
std
pusha
mov
push
dec
pop
mov
and
xorl
das
in
jecxz
insl
pushf
dec
add
pop
add
mov
push
test
fmul
scas
imul
push
mov
mov
push
sub
pop
out
xor
outsl
test
rorb
les
hlt
jbe
dec
mov
jbe
sub
sbb
icebp
push
insl
iret
daa
lahf
xor
jle
and
fsts
or
mov
shl
cmpsb
movsl
sbb
addl
hlt
push
sbb
cmp
or
xor
loop
popa
cmc
pop
cmpb
inc
movsl
lcall
outsl
clc
inc
out
xchg
inc
add
mov
push
inc
cmc
int3
push
jae
test
adc
aad
sub
sub
cltd
out
fdivs
sub
sbb
inc
imul
arpl
sbb
cmp
xor
pop
push
pop
jbe
jne
notl
mov
call
lea
in
push
push
shl
mov
cmp
cmpsb
mov
mov
into
push
adc
inc
sbb
push
in
push
out
jne
push
mov
pop
lcall
adcb
add
push
push
push
ja
jno
inc
and
imul
inc
xchg
xor
push
xchg
int
das
and
scas
mov
subb
jns
data16
fs
add
push
jns
xor
push
jge
loope
cmp
lds
icebp
xchg
decl
sub
int
cltd
sub
jo
ljmp
fldt
fisubl
into
jg
dec
mov
push
mov
ret
xchg
xor
repnz
cmpsl
in
negb
mov
pop
test
cmc
pop
testl
mov
push
sti
mov
adc
in
and
jae
aaa
and
add
cmp
rcrb
iret
sub
jne
iret
mov
adc
in
pop
cmp
and
dec
dec
pushf
out
mov
push
arpl
es
out
and
jbe
fisttps
jecxz
lahf
dec
xor
xor
or
aam
mov
add
push
pop
push
std
movsb
xchg
cmp
or
movsb
lods
dec
push
insb
xchg
sbbl
out
xor
jge
dec
pop
xor
cwtl
dec
xor
pusha
jbe
cwtl
call
jle
lcallw
mov
pop
jb
or
insl
jb
sbb
fdivrp
jle
xor
lea
lock
mov
pushf
mov
pop
lea
mov
movnti
leave
xor
fidivl
sbb
rcll
filds
pusha
scas
pop
xor
xlat
xchg
cmpsl
in
leave
or
mov
xor
inc
mov
shll
ljmp
jo
adc
xor
sub
movsl
sbb
or
jge
out
dec
mov
arpl
imul
cld
frstor
wbinvd
pop
adcb
sbb
and
loope
inc
mov
or
stc
jp
inc
mov
push
mov
sbb
cwtl
aaa
push
hlt
jae
lea
lcall
cmpsl
fsubl
sbb
jno
ror
orl
push
mov
lods
cmp
push
enter
icebp
mov
leave
out
jg
push
sarl
sub
insb
sbb
lods
and
mov
push
rorb
inc
std
leave
jmp
push
cmp
mov
adc
test
mov
inc
push
movsl
pop
aaa
and
rcrb
xor
cmp
fldcw
dec
or
jecxz
jg
dec
shlb
sub
in
cmpsl
jp
mov
jne
xlat
add
add
inc
js
pop
mov
icebp
scas
push
test
mov
pop
mov
mov
xchg
jmp
jmp
push
xchg
or
rolb
sub
pop
aaa
pop
mov
mov
sbb
push
clc
dec
andb
repz
add
pop
cmc
hlt
test
and
add
mov
inc
rcrl
imul
mov
inc
or
pop
das
sub
clc
inc
mov
mov
mov
dec
sbb
dec
pop
mov
pop
loope
pop
and
mov
je
adc
in
add
ds
mov
adc
out
lock
or
es
in
popa
pop
mov
xchg
inc
rcll
mov
rcrb
xchg
in
dec
dec
jo
popa
push
jo
jno
imul
and
pushf
mov
stos
cwtl
dec
add
in
mov
push
decb
push
push
mov
in
jl
sbb
mov
jno
push
sbb
scas
in
insl
lahf
mov
pop
hlt
mov
orl
dec
lods
mov
pop
addr16
inc
push
push
jecxz
lcall
adc
add
test
pop
rorb
popf
mov
shl
shrb
test
and
fdivs
popa
out
or
pop
sbb
fildll
out
or
sub
mov
test
insb
sub
dec
mov
jbe
or
push
lret
loop
xchg
inc
or
in
stos
lcall
mov
jle
adcl
mov
das
iret
sti
or
push
std
pop
and
jp
int
push
jns
scas
cltd
sub
xor
shll
cld
mov
ror
push
mov
neg
add
scas
adc
js
xchg
test
inc
stc
adc
leave
out
sbb
pop
gs
lahf
divl
sbb
cmp
pop
stos
inc
cmp
cmp
lods
aad
shrb
pop
daa
jns
cmp
lret
iret
test
sbb
iret
xchg
stos
sub
jns
jne
out
ret
lds
sub
adc
sub
push
sub
dec
pushf
lods
pusha
xor
imul
sbb
sub
xchg
adc
hlt
ljmp
mov
lcall
icebp
lds
nop
out
popf
int3
adc
in
pop
into
sub
int
call
push
jecxz
sub
gs
dec
and
test
out
add
cwtl
push
mov
and
ret
jg
movsl
add
mov
cmp
adc
xchg
popl
push
pop
xor
mov
pop
mov
cltd
imul
cld
test
add
sahf
fildll
out
pop
mov
mov
imul
iret
insl
xor
movsb
adc
add
in
add
push
sbb
imul
orl
nop
call
sbb
repz
pushf
sbb
stos
and
je
fldl
mov
popa
sbb
cltd
mov
cmp
push
mov
xchg
dec
push
jp
mov
outsl
dec
enter
inc
and
lahf
mov
js
pop
shlb
and
sbb
xor
movsb
rcrb
jl
ret
push
loopne
in
jg
mov
push
mov
sbb
adc
shrl
jae
xchg
ret
mov
sbb
or
xor
shll
push
cmc
push
mov
push
sbb
push
out
xor
xor
fldl
mov
inc
shll
idiv
jge
fxtract
mov
dec
xor
hlt
imul
dec
jge
mov
push
cwtl
sbb
fadd
out
je
roll
jo
pop
jo
xchg
and
call
xor
pop
in
or
push
mov
fsub
add
int
jl
pop
sbb
rcrl
out
filds
jns
mov
mov
inc
das
out
imull
stc
setns
lret
or
xor
aad
fidivs
or
clc
push
sbb
dec
imul
out
lcall
leave
push
mov
xchg
lea
loopne
pop
stc
mov
mov
push
out
cmc
cmp
add
lret
shlb
add
bound
xor
addl
out
pop
les
jge
push
fstpt
popa
jle
inc
sub
test
adc
lds
mov
adc
add
mov
mov
sahf
mov
fcoml
fidivl
aad
test
imul
daa
and
lods
shrl
xchg
outsb
cmp
jb
push
test
and
lods
daa
push
jecxz
push
stc
mov
stos
notl
jnp
mov
aas
mov
bound
sbb
adcb
pop
jo
mov
jb
mov
scas
ja
enter
enter
mov
imul
or
adc
mov
dec
push
stos
sub
cmc
mov
and
push
mov
shr
push
mov
cmc
xchg
mov
nop
pop
rol
clc
mov
inc
rorb
inc
sub
icebp
fldt
and
outsb
cld
popa
stos
xchg
lods
push
xchg
sbb
scas
stos
test
add
xchg
sbb
imul
jae
popf
add
mov
nop/reserved
outsl
add
and
pop
ss
popa
clc
push
daa
clc
pop
pop
mov
jp
push
dec
adc
mov
mov
jecxz
push
adc
pop
push
mov
test
mov
and
and
inc
jb
loope
and
push
pop
pop
movsb
gs
les
outsl
mov
xor
scas
popa
push
and
push
testl
gs
push
cmp
mov
test
inc
test
mov
shlb
into
sbb
stc
or
addr16
or
mov
add
aaa
mov
jmp
outsb
inc
stos
negl
jmp
sub
bound
add
ret
fwait
push
fisttpl
gs
icebp
lods
repnz
or
push
cmp
ja
dec
mov
test
gs
cmp
push
jne
sbb
jl
jne
or
adc
addr16
int
into
push
pop
cmp
mov
adc
aad
in
aas
jno
cmp
nop
xor
loope
aas
xor
lret
xchg
hlt
cmp
ljmp
cmp
outsl
dec
pop
mov
adc
adc
jge
lahf
mov
test
in
test
jg
mov
xlat
lods
cmpsl
ljmp
mov
push
push
pop
mov
out
xchg
mov
mov
das
fsubrs
mov
gs
rorl
call
cli
ja
xor
mov
fwait
dec
push
xchg
fstpt
jl
fstpl
int3
add
jle
pusha
add
push
xlat
fsubrl
xchg
jno
dec
adc
dec
shl
pop
sbb
pop
mul
dec
cmp
jo
pusha
push
test
stos
sbbb
scas
dec
mov
pop
mov
movsl
inc
cmovl
xchg
or
sub
test
lret
inc
mov
repz
xor
inc
das
push
mov
cmpb
ljmp
push
lahf
xchg
jne
jo
or
jecxz
out
in
cld
fnsave
xchg
dec
pop
pop
xorl
shlb
mov
cmc
int3
mov
sbb
lcall
push
mov
repz
leave
push
pop
or
mov
dec
inc
or
inc
mov
sub
insl
xchg
inc
mov
in
mov
enter
jb
fdivp
fwait
mov
std
push
pop
stos
divl
add
mov
sub
ds
movsl
pushf
cmp
add
pushf
dec
jp
loope
and
or
jnp
dec
cvttps2pi
pop
mov
in
lahf
mov
fwait
jno
repnz
jl
xor
add
repz
mov
push
push
jne
lock
xchg
sub
lret
sub
cmp
hlt
xor
outsb
pop
iret
xor
icebp
cmc
pop
pushf
cmp
ficompl
mov
jmp
cmp
inc
xchg
xchg
adc
je
lahf
je
andb
cld
mov
xlat
jp
js,pt
dec
std
sbb
cmp
loopne
jecxz
rcr
aas
or
dec
and
stos
pop
mov
scas
push
fldt
mov
xor
cs
mov
call
cmpsb
add
lret
test
jge
mov
adc
mov
sbb
mov
or
pop
cmp
mov
mov
push
iret
or
and
jnp
dec
je
ljmp
aaa
xchg
inc
and
imul
inc
push
lret
dec
loopne
movsb
ja
xor
or
mov
mov
gs
or
jl
dec
mov
cld
jns
fsts
dec
pop
enter
aam
movsl
sub
mov
ljmp
data16
adc
lret
fldenv
mov
xchg
inc
pop
test
rcr
xchg
and
pop
scas
jbe
mov
jg
xor
pop
mov
fcmovbe
push
adc
ror
xchg
js
pop
jae
daa
scas
gs
xchg
xchg
xor
mov
lret
jecxz
out
bound
cltd
imul
inc
adc
js
add
cli
pop
xchg
push
xchg
jle
aam
out
sbb
lods
rolb
aam
pop
sub
mov
arpl
pop
jl
pop
push
mov
xchg
orl
mov
es
flds
or
pop
leave
scas
mov
mov
pop
cmp
fwait
insl
inc
sbb
push
push
testl
cmp
xchg
cli
jge
loope
mov
mov
mov
xchg
out
iret
add
je
and
aas
adc
jecxz
addr16
lret
out
cmp
push
xlat
mov
sbb
pop
scas
call
je
call
subl
rorb
shll
das
push
sti
out
sti
push
or
and
and
mov
add
fisubs
xchg
outsl
mov
test
or
push
in
push
jmp
push
daa
and
push
imul
add
pop
jge
jne
sbb
and
xor
mov
pop
or
sbb
testl
test
cwtl
cltd
mov
jmp
outsl
ror
mov
mov
mov
inc
lahf
xlat
inc
iret
pop
sahf
lods
adcb
popa
xchg
push
jecxz
adc
mov
into
sub
pop
mov
cltd
pushf
in
and
test
xor
dec
pop
lds
mov
or
dec
pop
fidivs
push
insb
clc
dec
in
xchg
or
fcomps
cmp
mov
mov
lahf
jle
jns
ret
sbb
pop
das
push
fnstsw
push
push
add
pop
or
sub
fucom
test
lret
fisttps
int3
cli
nop
xchg
jle
in
out
sub
std
push
out
jg
ss
or
scas
jp
test
mov
or
mov
xor
out
pop
data16
movsb
xlat
repz
repz
ljmp
jp
into
enter
and
test
cmp
sub
fwait
cltd
pop
out
pop
ljmp
inc
fldt
mov
mov
pop
add
clc
cli
inc
cmp
cmpb
and
aad
sub
dec
mov
xchg
cmp
out
sbb
or
xchg
lds
in
mov
sbb
pop
mov
mov
mov
mov
mov
sub
mov
andl
or
pop
clc
int
out
mov
mov
add
or
add
mov
sub
lock
adc
adc
jle
mov
cmpsb
mov
mov
inc
mov
fs
cmpsb
pop
xor
imul
pusha
xor
cmp
stos
or
rcl
xchg
xor
adcl
push
out
fnsave
xchg
jno
call
icebp
xchg
inc
lahf
sahf
sub
sbb
mov
lock
mov
adc
xchg
out
orb
les
lret
xor
stos
push
stos
outsl
sub
xchg
lcall
jecxz
mov
xchg
mov
adc
call
gs
pop
and
xorb
fdivs
push
xchg
mov
orb
push
inc
scas
mov
faddl
les
insb
rorl
dec
test
mov
das
int
movsbl
int3
dec
ret
imul
inc
mov
and
rorl
cmp
xor
sbb
ja
sarl
adcb
mov
or
and
data16
cmp
lods
inc
fstpt
mov
push
add
cltd
mov
push
mov
inc
lea
sbb
mov
nop
sub
lock
fisubrl
or
mov
pop
adc
enter
into
and
xchg
pop
fidivrl
out
inc
out
xor
jmp
mov
mov
xchg
es
std
mov
cmp
cmp
fsubrl
xchg
push
jmp
pop
push
ljmp
mov
jle
sbb
mov
cmpsb
andl
xchg
add
jo
shll
pop
loopne
pop
jmp
cmp
dec
inc
mov
mov
in
pop
and
nop
inc
movsl
mov
lahf
ret
inc
in
xchg
ds
leave
cmp
incb
pop
stos
leave
repnz
or
cmp
stos
in
sbb
scas
mov
sbb
ret
xor
jb
in
inc
cmpsb
scas
mov
mov
cwtl
xchg
shr
mov
and
gs
sub
add
mov
jne
shl
lds
sub
jmp
adc
fstpt
test
pop
adc
std
inc
aaa
add
fs
fwait
mov
nop
cli
adc
repz
jo
jnp
out
cmp
push
sub
lea
xchg
ljmp
jmp
hlt
mov
fldl
jecxz
lcall
jbe
sbb
xchg
inc
out
inc
cmpl
divb
imul
aad
les
lds
les
adc
jo
lea
sarb
out
js
xchg
clc
or
push
push
bound
mov
xchg
sbb
dec
subb
dec
adc
xlat
cltd
push
xlat
das
cmpsb
jno
xchg
mov
testb
mov
jo
pop
xchg
and
popa
mov
add
pop
test
test
ret
mov
in
xchg
rcll
push
or
aaa
fdivr
repz
jne
pop
iret
idivb
push
and
loopne
aad
cmp
loopne
pop
fst
shr
inc
daa
ss
lea
hlt
mov
push
pop
sub
loope
psubsw
mov
inc
ret
aad
mov
gs
push
clc
int
pop
sti
dec
loopne
inc
ds
sbb
pop
lods
movsb
testl
jo
inc
cld
loope
or
sub
out
popf
sub
push
mov
mov
outsb
mov
and
mov
xor
xorl
lods
and
dec
xchg
mov
inc
inc
jb
fwait
lods
xchg
std
mov
add
leave
out
sbb
hlt
daa
mov
ret
sbbb
cmp
pop
pop
and
xlat
pop
sub
or
in
push
das
insb
lahf
int3
pop
dec
mov
rcr
or
adc
and
aad
mov
call
sbb
pushf
movsb
add
add
mov
into
inc
mov
shr
xchg
and
arpl
jbe
xor
rorb
jl
fsubrs
adc
mov
jns
loopne
push
jb
xchg
or
xchg
shll
scas
enter
xchg
or
roll
fmull
jg
ljmp
lea
out
loopne
pop
or
xchg
dec
fstp
ret
scas
and
cmp
xchg
pop
jns
out
ljmp
mov
xchg
xchg
mov
add
dec
cmpsb
mov
int
out
test
mov
out
sub
jmp
xchg
xchg
jo
stos
ja
mov
push
add
cmpsb
lods
push
ja
enter
les
dec
sbb
cmp
fucomp
xchg
out
jl
jecxz
out
cmp
sub
mov
cmp
sbb
js
subl
sbb
sbb
xor
in
push
xchg
fs
sbb
sar
aaa
lret
dec
or
ljmp
movsl
rolb
andb
adc
out
and
sub
mov
cmc
xchg
adc
bound
shrl
xor
xchg
insl
outsb
orl
test
mov
sbb
sbb
mov
lods
mov
test
mov
loope
xchg
es
add
je
fcom
push
lods
xor
sbb
jb
daa
ljmp
adc
fdivs
ficoms
jmp
mov
push
push
pop
dec
aas
and
aad
ja
xor
sbbl
cwtl
imul
mov
sahf
test
test
mov
cmp
movsb
mov
adc
arpl
lea
mov
mov
insb
xor
scas
xor
xchg
jg
mov
test
aam
or
dec
pusha
mov
add
pop
addb
shlb
mov
outsb
and
lods
adc
int
cmp
sbb
pop
loop
xor
pop
out
push
pop
pop
movsl
lock
out
push
or
shl
dec
enter
loope,pt
mov
push
in
sub
shrl
sbb
pusha
sbb
mov
inc
in
xor
mov
test
mov
daa
dec
arpl
jne
mov
jecxz
cmp
pop
cmpsl
out
xchg
push
lret
sub
loope
int
jmp
fstpl
xor
call
sbbb
shlw
ljmp
mov
adc
jmp
or
insb
mov
cli
repnz
das
movsb
aaa
icebp
loope
cmp
jl
or
pop
daa
int3
ljmp
stos
pop
insl
movhps
popa
outsb
adc
mov
push
fildll
jg
fs
repz
pop
mov
movsb
adc
push
mov
sbb
mov
inc
inc
and
sbb
outsl
addb
pusha
push
mov
cmpsb
sahf
sbb
imul
fs
mov
mov
stos
or
sub
sbb
dec
push
roll
dec
xor
das
sbb
push
mov
popf
cmp
dec
bound
movsl
cmc
mov
dec
xchg
push
out
rorb
adc
jno
adc
jbe
cmp
xchg
cmp
mov
xchg
dec
cmp
cs
and
fsubl
xchg
mov
gs
test
jmp
cmpb
in
cmpsl
movsb
mov
push
or
scas
sarb
sub
imul
ds
jl
xor
mov
rsm
das
test
in
mov
or
sti
in
mov
sub
rorl
xchg
rclb
les
mov
xorb
ja
scas
inc
jne
and
out
push
mov
fcmovbe
inc
sbb
push
xor
shll
dec
insl
lods
into
inc
or
jnp
inc
int
mov
xchg
lret
in
mov
sbb
mov
lcall
ss
insb
xchg
and
jge
dec
lahf
cmp
xchg
hlt
in
push
cli
mov
addb
fistl
jg
sub
aas
arpl
or
jbe
clc
roll
mov
cwtl
fs
mov
mov
cmc
popf
push
jp
xorb
pop
xchg
out
add
test
add
mov
gs
mov
add
mov
in
push
hlt
mov
add
xchg
cli
dec
in
out
cmp
lea
cmc
enter
lea
jns
loopne
cld
sub
sub
sbb
sub
sub
aad
movsb
rorb
adc
cmp
ret
or
sub
xor
inc
jbe
addr16
shl
loopne
and
ret
xchg
movsl
lock
cmc
stos
aad
divl
sub
sub
hlt
lret
loope
pushf
mov
jae
mov
mov
imul
movsb
sbb
js
outsl
int
mov
lock
inc
inc
lret
cwtl
in
pop
int3
movsb
add
push
xchg
fldl
stc
sar
fldenv
loopne
and
js
mov
and
xchg
sbb
xor
icebp
cwtl
jnp
enter
cmc
jns
jg
add
ss
cmpsb
and
js
inc
loop
les
test
xchg
cmp
add
adc
shrl
leave
out
cwtl
pop
mov
push
out
dec
repnz
loop
idivl
int3
es
arpl
test
dec
jmp
pop
test
xchg
xorb
pop
mov
sbb
sub
and
inc
enter
filds
push
push
xor
loope
sbb
ds
pop
mov
ds
sub
fs
cmp
testb
nop
cmp
iret
cmp
stos
sub
adc
jle
ret
push
sbb
daa
pushf
rdtsc
sahf
mov
and
mov
mov
mov
pop
in
cmp
test
movsl
mov
ficoms
imul
xchg
arpl
ljmp
jg
push
push
cltd
dec
cmpb
inc
adc
cmc
or
int3
cs
ret
dec
outsl
push
fcompl
les
repnz
fldl
cli
js
mov
mov
icebp
mov
popf
sub
mov
pushf
xchg
loope
bound
out
jle
mov
inc
xor
and
jne
inc
shlb
subl
xlat
dec
xchg
js
out
pop
adc
pop
lahf
out
ficompl
jmp
fadd
adcb
mov
insb
sbb
and
ljmp
pop
push
dec
leave
sbb
lcall
jae
xchg
leave
mov
inc
test
xor
cmp
fsts
xor
and
jns
stc
lahf
repz
mov
es
aam
pop
in
pop
in
xlat
lds
cmpsl
daa
jge
cmpsl
sbb
loope
cmp
in
sub
cmpsb
fcmovb
jns
xchg
xor
sti
enter
xor
mov
and
add
test
mov
xor
jae
popf
or
incb
out
int
dec
push
in
xlat
into
into
push
outsb
loopne
popf
pop
jno
sbb
lcall
mov
ljmp
in
lods
or
pop
sbb
clc
dec
mov
imul
adc
int
lcall
lds
add
dec
jae
or
cmc
pop
gs
add
xchg
dec
ficoml
loopne
cmp
jle
or
sahf
loopne
stos
dec
and
xchg
adc
mov
cmp
sbb
fstpt
test
jo
sbb
mov
ror
fisttps
mov
int
sti
cmp
xchg
imul
popf
and
cli
in
and
dec
mov
mov
or
xchg
xchg
cmp
jmp
gs
xchg
arpl
xor
push
xorl
call
push
jmp
pop
jnp
stos
push
in
lret
repz
sbb
fcoml
pop
enter
mov
lea
lret
jg
pop
mov
movsb
xchg
aas
pop
shrl
pop
lea
jns
sub
sbb
stos
call
test
ja
lret
out
push
sbb
jbe
xchg
stos
xchg
dec
std
add
push
push
dec
or
cwtl
cs
xchg
rorl
xor
test
andl
fsts
and
xor
divb
rcll
inc
sbb
push
lods
ss
sbb
unpcklps
jns,pt
jge
push
daa
push
das
jo
mov
mov
push
pop
pop
push
dec
cmp
dec
out
movsl
fbstp
aas
into
mov
mov
jle
or
mov
out
fldenv
orl
movsb
repnz
mov
and
pushf
cmc
fs
pop
sbb
insl
add
jecxz
dec
inc
pop
pop
adc
test
out
rcll
lods
cmp
movsl
push
cmp
fnstcw
pop
or
cmp
add
pop
lret
push
mov
mov
arpl
cltd
pop
xor
xchg
jnp
icebp
xor
popf
cmpsl
jmp
pop
andb
cmp
sub
daa
dec
pop
mov
mov
mov
out
inc
jge
sub
inc
int
enter
clc
aad
movsb
cmpsl
fdivrl
push
rcl
pop
adc
aas
int3
adc
jp
stos
outsb
mov
jns
push
add
push
cmpsl
shlb
arpl
roll
pop
xchg
fistpll
jbe
movsb
add
imul
mov
sti
adc
jge
ja
popf
jbe
mov
imul
imul
test
leave
adc
outsb
sbb
push
push
lock
shll
sub
push
cmc
icebp
lahf
cwtl
clc
lods
mov
bound
cltd
mov
xchg
clc
sub
pop
andl
mov
inc
cmpsb
mov
stos
mov
or
pop
data16
ljmp
shl
outsb
ret
ror
push
setp
aam
xchg
fdivl
push
xor
or
dec
push
mov
pop
sbb
clc
in
adc
inc
adc
jp
orl
push
fistps
sbb
mov
out
cmc
inc
scas
ss
adc
xchg
or
mov
ss
mov
jmp
mov
test
fcmovnbe
xor
sub
mov
push
mov
shl
ss
sbb
push
add
jae
xor
lea
pop
xor
imul
adc
imul
dec
jl
lret
lahf
push
or
xchg
pop
cmp
or
imul
mov
fs
mov
fmull
data16
or
dec
jecxz
loop
dec
jmp
cltd
test
popa
mov
adc
cmp
cli
ljmp
add
data16
push
test
int
sub
outsb
imul
stc
pushl
dec
adc
lds
jl
cmp
mov
or
inc
loop
das
fldt
inc
cmp
mov
sahf
bnd
je
inc
out
adc
inc
movsl
mov
sbb
inc
ds
cmp
repnz
inc
xchg
cltd
and
add
push
and
jbe
mov
cmpl
js
ret
sub
clc
idivb
cmpl
mov
icebp
push
cmpsl
jnp
dec
cmp
icebp
pushf
nop
xor
xchg
scas
cmp
mov
fbstp
cmp
mov
xor
loope
sti
int3
and
das
lcall
pop
jge
xchg
inc
outsl
jecxz
insb
mov
ret
xchg
dec
subb
int
xchg
lods
cmpb
sar
and
xchg
lahf
lcall
xor
imul
add
jp
cmp
rol
mov
sbb
hlt
sub
push
adc
fcomip
adc
or
addr16
in
add
push
mov
xor
push
lea
ret
repnz
out
mov
repnz
push
stos
jo
les
xlat
jmp
in
ljmp
pusha
push
das
inc
gs
sub
test
jo
sbb
mov
enter
lret
psadbw
ljmp
inc
nop
hlt
mov
sbb
dec
inc
int
fwait
mov
push
inc
shlb
xor
daa
push
jp
ret
packsswb
xor
mov
pop
shrb
sbb
dec
in
sbb
sub
xor
adcb
mov
ficompl
jle
pop
sahf
or
sub
icebp
rorb
les
lods
dec
push
scas
lock
add
sbb
lcall
inc
push
push
mov
dec
ret
xor
pop
xor
mov
pmaxsw
jb
sti
cli
mov
or
lret
xchg
movsb
sub
mov
jo
shl
lcall
out
cmc
sub
test
int3
xor
dec
push
js
xchg
outsb
jg
ja
pop
mov
pop
loope
jb
scas
cli
icebp
xor
add
lcall
xor
jnp
scas
and
cmc
xor
and
mov
stos
cmp
mov
xor
mov
and
arpl
iret
sub
cmp
pop
adcb
addr16
adc
pop
push
or
push
dec
in
dec
das
lea
outsl
out
int3
adc
pop
pop
inc
push
inc
loope
rcl
fwait
cmp
fs
inc
and
pop
je
mov
test
adc
push
std
sub
orl
lds
and
std
in
add
mov
sub
or
xchg
jmp
scas
cmp
sbb
rorb
mov
int
test
mov
add
int3
jno
daa
mov
loop
and
push
cmpsb
mov
push
fisubrs
jmp
mov
test
ds
sbb
add
jnp
pop
mov
inc
xchg
cmp
mov
adc
notb
sarl
setno
dec
addr16
jne
cli
out
arpl
cmp
movmskps
push
adc
fldl
push
sub
xchg
lcall
aaa
ret
out
loope
std
push
aad
les
pop
movsb
jge
lcall
dec
int3
pop
mov
and
cli
jb
js
adc
fmul
and
imul
sti
stos
call
mov
mov
bound
divl
add
dec
sbb
cmpsb
xchg
fiaddl
iret
addr16
inc
fsubrs
xchg
loop
add
sub
fstl
pushf
push
jg
fcmove
into
int
je
aas
add
mov
inc
jmp
sbb
sbb
test
sub
testl
mov
cmc
cld
mov
into
mov
jle
int3
aas
hlt
push
fistl
jae
loope
clc
movsl
pop
xor
mov
lcall
cmpl
add
push
mov
arpl
loopne
add
push
dec
and
ret
sbb
cltd
and
pop
xchg
mov
pop
pop
mov
or
pop
sub
loop
pop
mov
adc
ljmp
jbe
lods
adc
lret
or
mov
sbb
hlt
pushf
fisubs
or
cmp
arpl
xor
and
mov
fs
mov
pushf
outsb
rorl
mov
js
or
mov
sar
and
sarl
xchg
and
dec
out
pop
mov
das
movl
iret
push
lods
hlt
mov
popf
popw
gs
dec
scas
xchg
lods
mov
in
sub
lock
mov
add
mov
into
fnstcw
cld
movl
or
andb
stos
inc
pop
jecxz
fnstcw
push
push
aad
pusha
dec
dec
pop
mov
in
push
sbb
inc
sbb
iret
dec
je
and
mov
mov
or
in
loope
push
rcrl
test
pop
mov
pop
mov
mov
and
rcll
inc
fnstsw
js
in
rclb
cld
int3
and
test
pop
add
repnz
hlt
je
test
call
loop
mov
jns
flds
jb
dec
mov
stos
dec
pop
lock
and
ja
dec
aaa
std
add
fs
inc
push
xchg
lds
push
dec
or
sahf
jg
es
sbb
mov
je
stc
sub
xor
ja
mov
pop
in
sbb
gs
adc
ret
call
sub
add
enter
or
push
mov
sub
loop
add
dec
aam
cmp
adcb
les
fcoms
scas
imul
lret
sti
int
fs
and
or
sbb
icebp
sbb
inc
test
pusha
pop
loope
test
cmp
sbb
sub
lret
lods
pop
stc
bound
out
push
cwtl
adc
in
cmp
sahf
cmp
push
push
insb
mov
mov
les
mov
pop
mov
mov
sub
imul
cmpsw
pop
ljmp
aam
jg
mov
add
ljmp
rcrb
mov
movb
sbb
inc
mov
xchg
fstpl
dec
movsl
inc
dec
xchg
sbb
adc
xchg
ret
inc
adc
mov
mov
and
out
ffreep
popa
push
and
loopne
aas
fld
cmp
cs
lret
mov
jae
subb
fidivrl
dec
test
mov
int3
sub
add
rep
fsubl
loop
scas
into
xchg
aad
filds
pushf
cltd
shrl
dec
lcall
sub
mov
ffree
ss
aad
lods
in
test
jb
adc
mov
idiv
aad
push
fmuls
or
ficomps
fdivs
loope
daa
dec
mov
rcrb
and
lret
sub
je
push
xchg
cwtl
arpl
pop
sub
in
xchg
mov
enter
out
pop
add
mov
jnp
js
scas
push
mov
xor
adc
addl
enter
cmp
xor
mov
stos
popf
mov
cld
js
scas
out
xor
lret
mov
adc
mov
in
sub
jmp
cmp
xchg
pop
or
and
push
inc
sub
jbe
mov
cmp
push
sub
mov
fisttps
pop
outsl
fstpt
in
sarl
out
fs
or
mov
enter
mov
adc
sarl
xchg
sbb
inc
scas
xchg
xchg
fcoml
xlat
lods
scas
rclb
pop
or
shll
out
aam
rol
push
cmpsl
mov
xor
dec
in
cmp
pop
add
outsb
je
cmp
inc
mov
outsl
inc
or
mov
mov
push
mov
cmp
test
das
mov
xor
aad
inc
arpl
fidivrs
add
movsl
mov
xor
and
repz
aad
pop
inc
into
mov
je
jno
icebp
jns
sbb
call
into
iret
lret
and
or
lahf
bound
add
adc
dec
in
gs
sarl
xor
xor
loop
fsub
test
jae,pt
cwtl
clc
push
cmp
lret
test
adc
sbb
inc
jae
lock
lods
lds
xchg
jno
jmp
or
jnp
jb
sbb
into
scas
push
cmp
nop
xchg
mov
test
das
aad
shll
cli
or
cmp
push
cmpsb
dec
dec
pop
mov
mov
jns
rclb
adc
inc
lret
pop
bnd
push
mov
push
data16
add
arpl
dec
out
mov
lock
lock
fmulp
mov
hlt
mov
xchg
int3
xor
out
loop
lods
shlb
jo
rcl
dec
xchg
stc
push
cmp
xor
mov
sub
push
cmp
and
insl
ficoms
adc
sti
dec
mov
xchg
dec
push
cli
shl
call
sahf
mov
push
sbb
jnp
cld
sub
imul
cmp
enter
das
mov
xor
push
jecxz
insb
xor
mov
lret
sbbl
or
sbb
in
push
pop
add
shrb
cmp
sbb
loope
outsb
mov
into
mov
lock
mov
pop
sti
movsb
mov
mov
out
bound
xchg
mov
add
outsb
fists
mov
dec
dec
les
mov
dec
jmp
mov
sub
cs
lods
mov
jb
push
not
jo
jnp
addl
xchg
fs
movsb
mov
in
mov
xchg
iret
adcb
shll
inc
jbe
xlat
aad
sbb
es
iret
dec
mov
sti
negl
mov
out
pop
shll
scas
xchg
sbb
add
add
push
lods
xchg
pop
mov
jnp
cmpl
sub
push
cmc
outsb
mov
xchg
cmp
rcrb
adc
xlat
fwait
push
in
in
dec
addr16
bound
xabort
addr16
xchg
mov
sbb
inc
sbbl
sub
mov
cmc
ret
pop
bound
inc
ret
jg
lods
xchg
in
push
pop
std
add
negl
cmp
cmp
push
std
cmc
dec
and
xchg
mov
cmp
mov
aaa
jle
loop
ret
es
push
stos
ljmp
sti
mov
imul
icebp
negb
dec
mov
test
jo
stc
push
mov
xor
jb
dec
cmp
cld
std
mov
sub
push
fwait
mov
mov
push
and
aaa
sar
xchg
mov
xor
cmc
sub
inc
lods
ja
push
stos
popf
popf
and
je
flds
fistpl
and
xchg
mov
mov
loopne
int
xchg
mov
popa
idivb
ds
xchg
jmp
mov
scas
movsl
aaa
dec
mov
xor
in
xor
test
mov
push
push
jae
fidivrs
lods
icebp
xchg
mov
stos
int3
fistps
push
into
mov
mov
mov
jg
in
incl
push
pop
dec
push
mov
out
dec
mov
jo
or
mov
out
jae
icebp
and
sub
data16
add
outsl
pop
jo
int3
lret
out
cmp
inc
pop
mov
xor
adcl
jns
inc
aas
dec
ljmp
push
add
aas
dec
push
call
push
pushf
mov
inc
fcmove
mov
rorb
xor
mov
and
out
pop
sub
mov
mov
jo
adc
sbb
test
xchg
mov
adc
popa
adc
inc
or
or
jno
fwait
push
add
add
push
orl
sbb
cmp
xor
pop
fs
loope
cltd
stos
data16
jno
in
arpl
andl
cmp
ss
inc
jae
stc
sbb
xor
cmp
sahf
sti
rol
loop
ljmp
ja
pop
aas
mov
je
imul
enter
jo
mov
sbb
gs
enter
pushf
mov
jno
cmp
xor
xor
stos
mov
rorb
xchg
enter
sbbl
xchg
cs
add
sbb
addr16
fdivrs
aas
sahf
push
mov
fwait
add
dec
mov
call
inc
test
push
sbb
leave
cmp
xchg
push
sub
imul
mov
add
pop
and
dec
leave
mov
int3
ljmp
fisttpl
xchg
add
out
aaa
in
into
es
enter
ret
out
xchg
les
xor
jecxz
adc
xchg
sbb
popa
out
push
jb
push
push
dec
pop
pop
dec
or
popf
cmp
cmp
iret
pusha
adc
out
cltd
lds
dec
push
mov
jp
mov
sbbl
and
add
jbe
out
sub
push
insl
jl
data16
jp
jecxz
lar
fcomi
rcll
mov
xor
outsb
cmp
enter
xchg
xorb
and
and
or
aas
test
enter
xchg
outsb
aam
mov
outsb
loop
mov
xchg
push
bound
inc
mov
lret
leave
hlt
ja
aaa
sbb
pop
negb
ds
sarb
lahf
push
mov
out
pop
je
je
lds
and
inc
mov
loop
adc
loop
mov
pop
cwtl
xchg
add
mov
cli
outsb
ror
test
cwtl
sahf
rcpps
aaa
faddp
out
pop
popa
out
xor
js
jecxz
mov
add
pop
mov
mov
dec
cld
leave
dec
fwait
bound
xor
jo
mov
scas
mov
jl
sub
and
aas
mov
mov
push
rcrl
lods
pushl
daa
dec
xor
loope
xchg
and
dec
push
xchg
arpl
xchg
mov
sbb
jbe
push
dec
xchg
into
sbb
jae
cmpsl
movsl
enter
dec
cli
sarl
adc
xor
mov
pop
cmc
mov
mov
pop
sahf
popf
xchg
movsl
bnd
outsb
je
xchg
push
dec
xchg
rorl
sbb
fstps
int
jnp
je
repnz
jle
xchg
add
sahf
cld
mov
in
xor
fiaddl
adc
inc
inc
xor
mov
push
stc
repnz
jg
mov
repz
fmull
lret
pmaxsw
call
stos
mov
xchg
inc
nop
out
lcall
movsl
fwait
decb
test
mov
mov
push
hlt
aas
clc
add
push
cmp
mov
adc
push
pop
mov
scas
cli
std
ret
nop
fnstenv
sbb
sub
mov
jnp
lret
or
cli
jo
shrb
pop
sbbl
cmpsl
sub
push
mov
stos
add
inc
das
mov
scas
ret
xchg
shl
jbe
jns
xor
hlt
imul
lret
xchg
add
mov
dec
scas
movsl
popf
loope
jae
ljmp
repnz
sub
mov
ficoms
sub
lea
fistps
fwait
jmp
push
stos
mov
es
xchg
inc
ret
stc
dec
mov
cmp
dec
mov
jecxz
mov
call
cmp
test
icebp
pop
fnsave
arpl
mov
aas
mov
shl
es
pop
and
or
and
sahf
das
or
mov
pusha
xchg
js
aad
mov
xlat
call
mov
out
adc
push
ror
rolb
add
add
ja
adc
and
jno
faddl
test
cmpsl
sbb
inc
lods
movsb
mov
icebp
in
and
loope
and
mov
jo
jne
lcall
cltd
mov
xor
jecxz
ds
data16
sbb
addr16
sub
jp
lret
es
aas
cmp
mov
jmp
adc
or
repz
xchg
aaa
enter
pop
call
into
xchg
cltd
sbb
lret
leave
xchg
sub
push
pop
ds
rcl
add
mov
fstps
push
les
sub
xor
lods
fwait
out
cmp
aaa
aam
jne
pushf
call
test
mov
xchg
mov
inc
clc
xor
push
sbb
xchg
mov
rcl
mov
fbstp
jg
push
gs
push
xlat
xor
add
pushf
xor
mov
cld
xor
cmp
out
adc
xchg
dec
push
sub
repz
add
mov
sub
push
stos
lcall
pop
cmp
das
jmp
push
out
test
xor
adc
or
shll
pushf
adc
movsb
mov
pusha
push
and
or
mov
lods
add
or
das
fcompl
sbb
dec
or
sbb
into
sub
in
xor
shrl
shll
out
insl
push
sub
dec
push
fldl
into
out
xor
call
adc
jne
mov
mov
dec
jp
and
jecxz
divb
aad
jnp
sbb
or
sub
xor
addr16
jnp
mov
inc
sti
cmp
or
sbb
rorb
add
push
sub
addr16
ljmp
cwtl
push
and
push
ror
add
adc
mov
lahf
leave
mov
xor
pop
xor
call
push
in
inc
lods
loop
sub
lcall
incb
sbb
lea
xor
fucomip
or
pop
aam
sub
adc
xchg
notb
jl
xor
cmc
sbb
lahf
fimull
popf
iret
test
mov
push
cmc
xor
test
ret
lcall
pop
repz
mov
shlb
in
inc
sub
negb
and
cmpsl
test
dec
call
or
loopne
push
jbe
scas
movsb
sub
das
lret
je
push
ds
push
xchg
jp
pop
jne
daa
jge
push
data16
jmp
popa
test
aas
out
lock
aas
imul
fildl
sub
inc
xor
insl
push
and
jmp
pop
xor
mov
mov
rolb
icebp
int3
jle
xor
or
jge
call
sub
test
loopne
stmxcsr
out
pop
in
push
xchg
popf
adc
lods
daa
jbe
mov
xchg
in
adc
cs
push
sbb
xchg
lcall
test
ficoml
sbb
loope
cmp
je
fsubs
mulb
and
push
inc
push
mov
sbb
ret
jp
sbb
mov
xor
ds
or
mov
sbb
lods
loopne
lods
mov
ret
mov
push
cmp
fiaddl
rcll
sti
adc
sub
ljmp
pop
out
lock
jl
popa
les
lcall
notb
mov
popf
in
and
nop
jae
jne
repz
ds
pop
jbe
or
mov
adc
cld
adc
push
push
ret
dec
push
or
xchg
cmp
adc
aam
nop
lds
xlat
mov
push
lock
daa
imul
imul
mov
or
mov
test
pop
aam
or
or
mov
push
push
std
stos
hlt
xor
arpl
loope
in
mov
or
jns
in
inc
inc
fwait
lret
pop
mov
xor
mov
cmpsl
fidivrs
sbb
call
rcl
sti
popa
fdiv
mov
and
lods
or
outsb
xor
mov
inc
cmp
or
jb
push
mov
cmp
sbbl
or
and
scas
xchg
xchg
pop
cltd
xchg
std
fdivl
insb
mov
test
out
lods
leave
or
ljmp
inc
sub
test
sub
loope
out
je
fwait
lret
xor
xlat
sar
or
jl
or
xlat
out
iret
nop
dec
cmpsl
or
test
sbb
daa
sti
or
push
dec
pop
add
jnp
jbe
mov
mov
and
pop
sbb
inc
cwtl
mov
test
loope
dec
jb
add
imul
mov
aaa
lock
out
inc
ret
mov
out
mov
xchg
in
jg
les
mov
xor
out
pop
lods
cmp
or
lock
dec
inc
push
xchg
inc
cmp
aam
pushf
or
dec
clc
adc
fwait
imul
testb
idivb
out
push
sbb
add
outsl
fwait
orl
add
repnz
or
fistpl
cmp
lock
les
xchg
insl
dec
stc
gs
adc
insl
enter
fld1
sahf
pop
out
or
jmp
in
sub
push
pop
jno,pn
iret
fdivrl
inc
dec
sbb
adc
xor
xchg
addr16
in
pop
pop
popf
push
mov
scas
iret
pop
cs
push
in
scas
mov
shrb
xchg
lock
xor
inc
mov
notb
mov
sub
sbb
rcrl
mov
and
xlat
into
je
imul
xchg
jns
push
inc
repnz
stos
orl
idiv
fiaddl
pop
jns
pushf
loop
mov
xlat
xchg
adc
iret
mov
pop
mov
jecxz
pop
jg
aaa
cltd
outsl
inc
cltd
idivl
fcoml
adc
nop
mov
cmpsl
repz
xchg
sub
daa
and
sbb
xchg
pushf
pop
jne
inc
jge
or
jle
ss
inc
jge
jae
xlat
filds
cld
mov
inc
shlb
jecxz
xchg
lret
addr16
mov
sbb
jg
bound
fdivl
out
notb
sti
addr16
xchg
sbb
stos
lods
inc
cld
andl
xchg
outsb
imul
sub
cs
mov
adc
test
repnz
lahf
xchg
mov
jp
dec
pusha
int
clc
in
push
fwait
and
jns
and
daa
pop
rolb
cltd
pushf
lods
fdivp
add
mov
push
loop
mov
pop
xchg
ficoml
icebp
mull
loope
into
lock
mov
mov
lds
stos
or
or
sti
mov
pop
lock
subl
mov
mov
inc
cld
sar
in
push
imul
ficomps
inc
mov
in
ret
bts
das
add
sbb
inc
lock
pop
xchg
sbb
mov
pop
sub
pop
add
mov
adc
jb
push
pop
inc
ds
out
imul
outsb
sahf
and
repz
mov
daa
jmp
sarb
mov
imul
mov
push
dec
insb
ljmp
or
imul
adc
call
mov
scas
add
pushl
inc
push
popa
cmc
push
das
test
push
pop
mov
push
or
jae
inc
inc
shrl
xchg
inc
out
and
cli
jae
out
mov
pop
call
sbb
inc
mov
movsb
and
xchg
icebp
leave
mov
jno
mov
sbb
cmpsb
sub
popa
dec
loop
pop
cli
add
lret
xorb
std
fistpll
stc
and
cmp
push
pop
shll
leave
rolb
scas
mov
or
cmpsb
mull
lret
xor
mov
dec
es
jno
jnp
lods
jae
and
cli
adc
xor
pusha
into
divb
pop
outsl
push
jns
jl
mov
insb
and
cmp
pop
clc
aam
dec
loop
add
cmpsl
xlat
inc
shll
cmp
cmp
jp
sub
cmp
dec
fs
jecxz
mov
push
or
jmp
inc
ss
test
pop
push
push
out
divb
jnp
sub
scas
and
xchg
enter
js
scas
jg
cmp
setnp
mov
adc
pusha
sbb
inc
lret
xlat
cli
loop
imul
jecxz
std
or
fildll
imul
mov
sahf
cmp
pop
inc
inc
test
stos
cmp
andl
add
pop
insl
inc
adc
mov
shrl
pop
xor
pop
jmp
repnz
xchg
inc
xor
das
jge
les
pop
pop
cmp
cltd
out
lea
loop
les
idivl
fsts
xlat
dec
xchg
inc
xor
inc
loopne
xchg
lret
mov
mov
fildll
adc
stos
lods
imul
push
movl
out
pop
dec
add
out
sub
loope
out
mov
mov
outsl
loopne
push
fstl
jns
pushf
mov
inc
add
test
adc
arpl
pop
popa
xor
sub
jle
or
icebp
pop
subl
add
out
fstps
call
cld
fwait
iret
dec
out
movsl
rorb
popf
js
loop
inc
out
pop
xchg
xchg
xor
add
es
mulb
in
sub
ja
pusha
jnp
add
lock
cli
out
scas
test
and
pop
mov
sub
mov
hlt
pop
daa
pop
jle
mov
test
or
les
jmp
push
gs
mov
int3
fsubl
push
fisubs
arpl
adc
inc
shlb
test
xchg
and
sahf
add
fstl
test
inc
rolb
inc
or
shlb
hlt
mov
cmp
je
jl
js
lret
mov
pusha
mov
lea
pop
in
je
fimull
xchg
scas
stos
loope
adc
jnp
dec
xchg
fnstsw
aam
test
sub
stos
in
or
lock
repz
and
andl
cmp
neg
sbb
dec
rol
into
cmp
mov
xchg
xlat
jno
mov
dec
cld
add
inc
aam
out
in
enter
mov
in
loopne
cmp
adc
sub
data16
cmp
cmp
lahf
sub
jb
ret
or
add
cmp
dec
mov
or
loopne
test
repz
mov
lahf
pop
xlat
popf
iret
mov
and
jbe
adc
and
or
gs
mov
out
in
add
std
mov
pusha
mov
mov
lds
ja
addr16
out
pusha
cltd
aas
add
inc
and
jmp
pop
test
ret
testb
mov
in
sub
mov
ret
inc
out
adc
cmpsl
mov
sub
out
lods
mov
or
mov
loope
mov
add
rclb
clc
jne
mov
push
dec
iret
in
lahf
int
jl
addb
pushf
adc
inc
ss
mov
or
pop
cs
insb
xor
mov
adc
insb
pop
xor
divb
xor
je
mov
cmpsb
xlat
les
add
and
movsb
pop
mov
dec
mov
rol
lret
out
std
mov
xchg
stc
ja
sahf
int3
inc
jecxz
inc
sub
xchg
idivl
push
and
cmpsl
sbb
dec
into
cmp
or
stos
push
sti
mov
or
and
inc
jg
xchg
jb
adc
jno
shlb
dec
adc
sbb
ja
add
mov
jns
push
jle
stos
loopne
hlt
xchg
pop
fwait
lods
inc
das
inc
test
or
pushl
sbb
loopne
popl
dec
in
sbb
xchg
orb
jb
loopne
test
adc
out
mov
jb
ret
mov
addr16
ficompl
sub
jo
mov
and
push
ljmp
and
mov
mov
jo
fwait
js
lahf
push
insl
push
and
out
stos
ja
mov
cmp
cmp
leave
push
loopne
pop
clc
cli
jl
adc
dec
push
jae
adc
add
ret
ljmp
sbb
and
and
icebp
push
outsb
add
in
cli
sub
inc
add
pop
or
jnp
dec
lcall
inc
addr16
mov
pop
mov
inc
outsl
add
xor
mov
test
push
data16
or
je
xchg
aad
and
xor
lret
lds
and
insl
mov
mov
pop
aaa
mov
sbb
lea
aas
jmp
cmc
xchg
call
pop
mov
cmp
movsl
popa
sub
mov
jmp
test
call
jge
fstpt
mov
jmp
sahf
pop
int
jo
cmpsb
inc
inc
add
shr
dec
pop
mov
sahf
int
out
jmp
int
aas
mov
std
shl
xor
int
mov
xor
cmpsl
cld
sub
lea
jae
not
mov
push
cmp
int3
sbb
cmc
les
outsl
mov
pop
push
mov
pop
mov
popf
bound
mov
adcb
dec
jae
sar
xadd
mov
lret
std
lahf
sub
mov
and
push
adc
pop
into
jmp
mov
and
jno
cmp
dec
pop
mov
gs
adc
mov
mov
xchg
jns
pop
icebp
sub
sub
test
sbb
push
mov
push
jne
mov
fdivp
push
xchg
xchg
outsb
sbb
push
jge
add
sarl
mov
cmp
lds
push
cmpsb
jns
mov
rorb
mov
inc
insl
jg
out
inc
notl
adc
inc
cmpsl
ja
adc
faddl
dec
inc
sub
sub
and
jo
and
jnp
xchg
imull
mov
mov
fcmovb
inc
push
aad
rcr
add
inc
push
mov
bound
shlb
sarl
shlb
sarb
mov
mov
addb
dec
fs
jle
fstps
notl
daa
sbb
movsl
and
mov
push
mov
pop
popf
fmuls
xor
adc
popf
test
add
fsubrs
shll
scas
or
adc
inc
inc
inc
int
push
jbe
mov
sub
push
fcoml
sti
scas
cmpl
mov
pop
fs
testl
push
insl
out
leave
cltd
ficoms
ds
clc
ss
movsb
mov
repz
sbb
or
pop
out
and
out
pusha
push
bound
sahf
cmp
jno
out
sbb
inc
hlt
fwait
adc
or
push
dec
aad
xchg
rcrl
sbb
cmp
fadd
mov
mov
jbe
mov
pop
cmp
lcall
pop
pushf
pop
pop
pop
sub
cmp
dec
mov
sub
ret
adcb
repnz
xchg
or
movsl
mov
inc
pop
adc
es
loope
popa
xchg
inc
bound
add
xchg
mov
cmp
cld
jl
jae
jg
dec
ficomps
mov
jp
sbb
test
test
rcr
rcrl
jno
test
fwait
xor
inc
xchg
in
movsl
mov
rcrb
cmp
lcall
pop
add
and
mov
mov
std
inc
fcmovb
aaa
sahf
jmp
pop
lahf
mov
mov
and
popf
cmp
cs
mov
inc
in
notl
mov
cmp
sbb
xchg
cmp
std
fistl
rcrl
ret
push
adc
addr16
je
imul
fdivl
push
js
fistl
jle
in
int3
je
mov
addr16
mov
pop
ret
adc
pop
rorl
rcrb
pop
sbb
push
mov
sub
push
cmp
test
or
gs
mov
jne
and
inc
jp,pn
fdivr
lock
mov
shr
addl
gs
inc
int3
xor
int
mov
mov
fistpl
mov
cwtl
pop
stc
cmp
cmp
iret
jae
push
inc
and
in
mov
stc
inc
test
scas
jnp
jbe
adc
fdivrl
cmpsb
sbb
subb
int
cmc
scas
xchg
cmp
std
lods
xlat
outsl
pushl
int
ss
adc
rclb
jl
pop
pop
ja
cs
iret
cmp
icebp
imulb
mov
dec
fsubrp
mov
sbb
fildll
pop
inc
aaa
lods
out
cltd
sub
dec
aam
mov
aam
inc
sub
push
out
mov
mov
es
pop
pushf
mov
push
out
je
jo
aam
fnsave
addr16
xchg
pop
push
rorb
rorb
adc
mov
pop
shlb
cmp
or
pop
add
shr
mov
xchg
subb
cmc
rol
jp
push
sbbb
lcall
dec
icebp
sub
es
subb
mov
dec
pop
xchg
lock
push
xor
mov
jl
adcl
pop
xchg
fildl
or
xor
out
mov
iret
mov
jp
fbstp
mov
test
push
icebp
lods
iret
aaa
mov
jnp
and
or
into
push
les
mov
mov
jnp
out
dec
adc
insl
push
icebp
pusha
or
mov
imul
cmp
mov
sbb
fwait
mov
test
loopne
and
aam
mov
fstpl
mov
mov
mov
aas
out
movsl
out
or
add
and
popl
jne
cmp
hlt
insl
mov
jge
in
mov
or
adc
fimuls
mov
cmp
shrl
popa
jle
cmp
inc
jg
stos
inc
push
adc
add
out
test
mov
shlb
shlb
loopne
pop
dec
stos
xlat
insb
cmc
cmpsb
andl
adc
mov
rcr
or
push
adc
arpl
bound
shl
loop
fs
add
sbb
lds
push
inc
xor
dec
push
scas
pushf
or
bound
fucomi
cmp
push
popf
pop
lds
ficoms
jp
and
sub
loopne
movsb
repz
lahf
pop
cmp
xchg
cmpl
pusha
cld
or
xlat
repnz
mov
call
xor
rcrl
call
dec
cmp
push
dec
int
enter
fcmove
loope
inc
fisttpl
sub
mov
dec
notb
sub
push
inc
mov
gs
fstpl
adc
pop
xor
mov
lahf
mov
adc
xlat
lods
mov
sbb
pop
mov
lea
jnp
mov
pushf
cmp
scas
push
lahf
mov
sbb
and
stc
inc
mov
add
jae
fs
shll
aas
mov
dec
mov
aam
and
sahf
movsb
mov
jo
xchg
lret
fisttpl
dec
rcrb
out
sub
xchg
ret
frstor
lahf
pop
jo
mov
fucomi
ss
mov
xor
mov
mov
test
push
cmp
jo
cwtl
cmp
cmp
xchg
pop
push
pop
stc
pop
cli
pop
je
mov
inc
add
popa
dec
repz
mov
inc
js
movntq
out
mov
cmc
fld
jmp
imul
std
xchg
push
call
in
add
jp
pop
jno
xchg
or
xchg
adc
subb
xchg
out
mov
lods
je
pop
cmp
lea
gs
or
js
cmc
sub
adc
adc
push
pop
gs
mov
icebp
daa
les
xor
xor
mov
push
in
and
insl
lret
cs
loope
adc
repnz
jno
push
test
popa
ud0
sarl
pop
sub
jbe
movsl
xor
les
out
test
ret
int3
inc
pushf
int3
or
add
repz
mov
mov
or
xor
shlb
mov
cld
xor
cmp
aam
scas
push
xchg
subl
cs
xchg
jne
dec
xchg
pop
mov
xchg
mov
mulb
adc
dec
hlt
adc
xchg
mov
xlat
lods
ja
call
out
inc
lahf
pop
dec
push
xchg
and
push
test
add
mov
cltd
dec
adc
out
or
fnstcw
xchg
int3
mov
leave
pop
sub
not
add
push
in
repnz
ret
xchg
lods
outsb
into
iret
push
adc
repz
and
mov
outsb
aaa
ficoms
cwtl
adc
pop
cmp
pop
in
cli
push
and
push
test
jne
out
js
je
dec
cmp
adc
mov
push
push
mov
xlat
insl
rorb
xor
sub
sbb
xchg
imul
clc
incl
nop
dec
aas
mul
mov
leave
clc
in
add
rcl
sahf
cs
inc
mov
or
pop
jp
jmp
in
push
dec
repnz
aad
mov
pushf
or
pop
ds
inc
or
xor
sub
mov
popf
ror
ret
subl
out
or
andb
push
push
add
int
stos
loop
xchg
xchg
push
push
pushf
popa
cmpl
push
enter
or
imul
dec
jo
gs
adcl
rolb
popa
jns
or
inc
in
xor
cltd
jle
rorb
fisttpll
mov
pop
je
xchg
outsb
mov
push
mov
popa
xabort
cmp
push
into
std
push
pop
mov
sbb
aad
loope
mov
loop
nop
mov
lds
push
out
cmpsl
sbb
fistpll
xor
sbb
mov
adc
int3
rolb
xchg
add
leave
fimuls
leave
loopne
and
jns
mov
sarl
xchg
mov
xorb
xchg
mov
xor
cs
push
inc
dec
adc
xchg
lods
push
xchg
in
dec
jl
daa
scas
adc
cmpsl
clc
xchg
xchg
push
xchg
outsl
mov
scas
shll
inc
push
jecxz
adc
sub
fnop
icebp
cmp
in
movsl
call
sahf
xchg
mov
movsl
xchg
shll
dec
js
fdivl
test
bound
mov
int
sbb
clc
cs
or
out
mov
ljmp
sub
test
pop
mov
dec
or
inc
pusha
jno
scas
mov
scas
nop
mov
leave
sub
fisubl
push
push
sub
loope
pop
push
ret
push
inc
push
xchg
jno
and
push
imul
in
stos
cli
jo
ja
and
leave
bsr
jb
push
cmp
add
rol
js
callw
adc
popf
les
and
or
fistpll
and
pop
xchg
stos
add
mov
lds
cmp
jns
xor
in
dec
subl
pop
or
sbb
or
add
add
ljmp
jle
pop
imul
mov
mov
cmp
cmp
bound
jecxz
or
cs
outsb
xor
cwtl
dec
sub
mov
dec
ret
pop
nop
lret
sbb
push
mov
adc
aaa
mov
divb
push
jl
stc
mov
pop
sti
rorl
aas
xor
inc
fdivs
jbe
mov
inc
ret
push
jbe
mov
rorb
xor
mov
cmp
lea
out
pop
movups
jae
and
cmp
push
mov
flds
pushf
ret
push
ret
mov
jnp
cwtl
out
cmp
sub
add
mov
test
in
and
aaa
bound
sbb
mov
inc
test
fwait
jle
fwait
jne
shlb
push
pop
or
or
pop
add
loopne
cli
jmp
push
addr16
jo
push
popa
xchg
xor
aas
in
add
jge
and
add
sti
andb
cmp
shr
and
xchg
or
add
aaa
mov
in
pop
mov
mov
add
orb
test
insl
cmpsl
fwait
jbe
xor
ret
push
xor
popa
aam
ficoms
lds
fimull
dec
call
or
xor
cwtl
adc
aad
jbe
mov
in
add
gs
fnstsw
mov
xor
adc
rorb
or
xor
push
inc
adc
xor
lea
mov
and
xchg
rep
inc
and
pop
add
or
js
repz
add
in
mov
xor
mov
cmp
and
adc
aam
add
imul
clc
les
pop
fwait
call
cltd
ljmp
pushf
push
cmpsl
jnp
cmp
lock
xchg
into
dec
in
mov
psllw
nop
inc
push
shl
or
sub
iret
mov
stos
iret
popf
jne
subb
pop
pop
push
data16
cltd
sbb
cld
inc
cmp
rcrl
mov
sbb
dec
push
rep
pop
ljmp
inc
popf
arpl
fcmovb
push
xor
jnp
mov
data16
inc
adc
push
jno
mov
sarl
test
fucomp
push
ja
inc
xor
stc
js
mov
mulb
rcl
scas
fwait
in
popa
test
dec
js
int3
jp
mov
int3
int3
push
lret
inc
ss
insb
inc
pop
test
pop
mov
pushf
adc
in
add
repz
jl
sbb
or
dec
jmp
pop
int3
daa
into
pop
insb
push
aas
insl
cs
push
cwtl
in
mov
jge
out
push
lahf
pop
and
push
ljmp
addl
ret
mov
je
inc
stc
sub
sub
rcl
mov
push
cld
imul
mov
enter
outsb
or
fucomi
loop
mov
xchg
push
xchg
ds
fs
add
cli
std
test
jnp
jno
jo
repnz
fstpl
mov
dec
push
pop
sub
xchg
inc
loop
ss
xlat
dec
or
inc
aam
mov
mov
adc
int3
leave
xor
inc
adc
sub
jb
sbb
in
imul
test
or
add
push
scas
sahf
inc
jmp
lret
pop
ss
xchg
lea
outsb
xchg
mov
ds
xlat
or
mov
sub
fld
xchg
pop
push
sub
xlat
clc
out
push
js
and
pop
fwait
add
fs
data16
jo
pop
pop
inc
xor
jg
rclb
push
mov
cmp
inc
rorb
sahf
adc
sub
jg
test
fnsave
popa
scas
fdivrp
fbld
pop
mov
jns
xchg
cmpb
push
out
xor
lods
fs
mov
shlb
shlb
jo
decb
fdivrl
cs
sub
sbb
aam
mov
lock
cmp
mov
pop
push
push
cld
clc
push
xorl
sub
test
push
pop
add
arpl
rolb
aas
movsl
je
pop
sbb
dec
push
fistl
aaa
or
inc
and
les
mov
icebp
sbb
jle
xor
jge
in
jns
push
or
rcl
pop
mov
add
rorl
nop
jmp
sbbl
pop
into
dec
dec
pop
sub
xchg
dec
iret
cmp
es
ret
jle
inc
stc
lea
inc
fldcw
nop
push
outsb
test
push
repz
jl
add
push
dec
sbb
test
mov
fs
xchg
mov
mov
inc
jne
in
jp
lcall
push
mov
cmp
xchg
data16
std
mov
es
and
sarb
sub
mov
sub
mov
int
pop
push
stos
pusha
pop
call
outsl
roll
or
mov
dec
or
aad
and
sub
popf
sahf
in
cmpl
sub
orb
dec
jl
cmp
dec
incl
daa
cmp
mov
push
jo
push
adc
adc
lods
cwtl
ljmp
jne
arpl
adc
pop
push
mov
scas
and
stos
and
pop
testl
jecxz
aam
insb
mov
icebp
imul
mov
jmp
imulb
in
pop
lock
jbe
aas
pop
jne
ds
inc
push
or
inc
jnp
repnz
leave
ja
jecxz
inc
in
mov
mov
out
jae
dec
stc
push
std
scas
scas
cmp
nop
sbb
mov
orl
cmp
mul
test
adc
mov
push
mov
ss
shrb
push
xchg
pop
lods
incl
dec
xor
das
rcr
sarb
jecxz
lret
mov
pop
test
in
andl
mov
mov
jo
xchg
sub
inc
mov
cmpsb
nop
cmp
pop
mov
in
das
stos
inc
jo
aad
jne
xchg
adc
repnz
icebp
inc
mov
xchg
stc
out
dec
into
push
cli
pop
dec
je
pop
pop
icebp
jle
aad
pop
mov
push
lret
hlt
cmc
cwtl
pop
mov
test
loop
test
dec
adc
cmp
popf
mov
dec
dec
data16
mov
sahf
sub
cld
pop
jae
repz
movsl
sbbb
and
bound
cmpsb
in
sub
sbb
clc
ds
pop
fstl
addr16
inc
mov
fwait
outsl
mov
mov
fwait
shl
or
in
jl
enter
jno
cmp
in
adc
sub
sub
mov
mov
pop
mov
sarb
cld
in
mov
inc
sbbb
push
es
xlat
and
and
imul
movsb
loop
ljmp
je
jmp
js
mov
int3
loopne
lock
and
cwtl
imul
mov
jp
mov
xchg
hlt
push
inc
test
cmp
mov
xchg
mov
js
xor
rclb
push
mov
or
cmp
loop
fcmovu
mov
shl
out
xlat
or
mov
mov
mov
mov
inc
pop
out
cs
les
test
adc
ss
jg
fldenv
cld
mov
mov
sbb
xchg
leave
sbb
fwait
jns
aaa
cmp
mov
int
jbe
pop
loop
or
sahf
sub
outsb
and
pop
hlt
add
mov
pop
js
repnz
arpl
xchg
clc
lahf
mov
push
add
shll
inc
sti
test
out
out
sti
mov
xlat
fmuls
pop
cmp
pop
fistps
cli
cmp
add
subb
adc
xlat
pop
in
pushl
sub
lods
xor
sub
mov
mov
cmp
dec
insl
mov
and
loopne
aam
leave
in
mov
lds
roll
or
mov
adc
inc
or
repnz
push
push
cmc
mov
fstpt
pushf
or
jne
push
das
add
nop
jne
icebp
push
int
add
cmp
mov
ficoms
bound
orl
dec
cmpsb
rolb
fldenv
push
pop
pop
mov
add
mov
cwtl
inc
mov
mov
clc
addr16
cwtl
push
mov
mov
fcomps
and
fists
es
outsb
jno
xor
xor
lret
sub
insl
mov
jns
and
sbb
jl
xor
dec
adc
shll
pop
les
jb
xor
lods
xor
or
mov
xor
mov
and
cmp
leave
xlat
ljmp
pusha
push
mov
repnz
sub
pushf
shl
adc
mov
cmpsb
jmp
push
xchg
sub
push
xor
dec
sahf
mov
jg
adc
adc
into
jecxz
mov
jmp
scas
into
int3
adc
cmp
xchg
rclb
push
dec
push
xchg
jns
inc
cmc
pop
sbb
aaa
mov
jne
add
xchg
out
outsl
add
lahf
jle
and
data16
lret
scas
sbb
add
lock
aaa
in
adc
je
cmove
inc
xor
xlat
rcll
sahf
jecxz
push
gs
sbb
push
pop
rcrb
mov
lret
fucomi
std
in
outsb
xchg
inc
jp
fcmovnbe
xchg
cmp
jmp
test
mov
fiadds
daa
push
arpl
pusha
xor
dec
test
cmp
pop
dec
jae
jge
push
rorb
js
ret
xchg
lods
pop
scas
std
push
arpl
sub
les
adc
insl
mov
sarl
call
push
int3
mov
xchg
out
cmp
addr16
mov
into
mov
mov
jnp
cmp
mov
and
xchg
pop
push
mulb
aam
xchg
int
popa
mov
lds
sub
repz
test
movsl
and
sahf
movsl
push
push
pop
cmc
fs
ja
movsl
dec
inc
mov
mov
out
outsl
lahf
int3
out
and
negl
ffree
repnz
loope
inc
insl
je
outsb
cmpl
shr
stc
clc
int
insb
pop
fistpl
test
push
fmuls
cmp
jg
mov
fcmovnu
into
and
hlt
jno
and
lret
jl
fcoms
stos
imul
pop
dec
jmp
xchg
pop
push
pop
out
xchg
mov
je
sahf
inc
sarb
inc
pusha
pop
test
cmpsb
jle
call
cltd
or
inc
je
test
lds
insl
les
cs
sbb
inc
xchg
xor
insl
in
jg
add
aaa
in
push
pop
mov
sbb
inc
lret
sub
out
jle
stos
dec
lret
fdivr
jnp
inc
dec
or
cmp
addb
push
mov
or
outsl
add
mov
lea
mov
cmpsl
inc
pop
test
sub
rcll
test
stc
out
adc
mov
xchg
mov
jb
add
stc
arpl
push
lods
rorb
and
fstpl
sub
outsl
in
hlt
add
into
add
cmpsb
sub
aam
cwtl
jae
pop
lret
jg
xchg
mov
xchg
sub
std
mov
insb
decb
mov
add
ljmp
ds
pop
out
mov
mov
cli
pop
xchg
add
push
aam
mov
stos
fwait
xchg
or
cmp
leave
sbbl
dec
in
daa
imul
jnp
movsl
idivl
fcomip
inc
cmc
jecxz
cmc
push
dec
jp
jle
leave
mov
dec
es
and
sahf
icebp
adc
in
cmp
sbb
jg
adc
in
lods
vpcomuq
lea
sbb
ds
or
xor
or
or
mov
jle
in
jecxz
jge
movsl
icebp
incb
pop
mov
movb
inc
lret
sahf
popf
jnp
fs
xor
leave
jg
aas
dec
and
xor
xlat
mov
inc
lcall
test
cmpsb
mov
jo
cmp
add
cltd
in
inc
add
xlat
ds
lcall
cwtl
shll
sub
push
add
sbb
jmp
dec
xchg
cmp
cmp
cmc
fmull
cmp
mov
iret
sbb
lods
popa
hlt
lret
imul
sets
sub
fwait
mov
push
cmc
dec
mov
push
jle
jge
mov
insb
mov
pop
pop
inc
roll
and
add
iret
in
pop
cltd
inc
fwait
shrl
xchg
push
lret
std
imul
and
sbb
sub
insb
int
sub
lods
push
xor
or
or
nop
and
cmc
or
sarl
inc
iret
jnp
test
hlt
lret
dec
mov
dec
daa
ljmp
fildl
popa
adc
cmpsl
xchg
pop
and
inc
add
mov
sub
add
sub
adc
lock
mov
and
mov
sbb
dec
hlt
leave
pop
inc
xchg
mov
push
cmp
mov
lret
aam
mov
mov
aas
push
shll
jmp
or
adc
les
rcl
sbb
lret
dec
popf
in
sbb
cld
lock
inc
pop
not
mov
adc
call
aas
out
lret
xchg
add
lods
ds
dec
ljmp
aaa
mov
arpl
mov
pop
ret
into
gs
mov
call
mov
insb
add
ljmp
add
fstl
aad
and
push
ss
fldenv
dec
push
add
push
sarb
inc
scas
test
mov
pop
int3
cltd
sub
fwait
xchg
jg
fwait
jg
loopne
xchg
shlb
jno
gs
leave
mov
mov
clc
xor
loope
push
pop
lret
scas
cmp
sbb
jbe
repnz
ds
sbb
sbb
mov
push
and
push
daa
lods
inc
mov
repnz
test
lahf
fcompl
jnp
sub
in
push
add
jg
add
aas
pop
jae
mov
add
dec
loope
lret
mov
std
add
insl
pop
sbb
das
mov
lcall
jb
shlb
pop
jecxz
mov
inc
aad
dec
dec
xor
jmp
xchg
or
sub
fistps
cmpsb
cwtl
adc
lahf
test
inc
fsubrs
test
fwait
jle
xchg
repnz
mov
into
add
pop
das
fstpl
mov
das
ret
and
cmp
and
xorb
test
xchg
mov
or
jg
lods
les
pop
int
sub
sub
les
jp
pop
ficoml
enter
jmp
jae
jne
in
dec
test
ja
jo
xchg
pop
cli
jmp
addl
outsl
sub
rcll
sbb
jecxz
xor
fnstcw
add
sbb
jno
mov
mov
pushl
mov
or
pop
das
in
sbb
inc
enter
xor
mov
pop
repnz
out
dec
adc
cld
arpl
add
in
std
or
pop
pop
dec
pop
hlt
out
ljmp
pop
sbb
sub
cwtl
sbb
fcompl
rclb
and
mov
les
push
push
outsl
and
shlb
adc
xchg
daa
sti
adcl
clc
inc
push
xchg
subb
jle
xchg
dec
jmp
arpl
out
push
mov
inc
xchg
loope
movsl
loop
mull
rolb
hlt
test
inc
mov
dec
and
pop
or
or
jmp
pop
testl
adc
pop
out
insb
and
cmp
or
add
inc
push
mov
push
or
in
cmp
jae
pop
dec
movsl
mov
mov
outsb
test
fsubr
lret
cmp
data16
lahf
dec
ja
mov
scas
test
push
xor
push
out
or
insb
mov
mov
mov
xor
ja
dec
push
cmpsl
xor
jl
add
les
mov
dec
sahf
mov
clc
mov
push
pop
add
or
and
inc
add
jbe
mov
adc
aad
adc
fs
int3
inc
pop
pop
test
lcall
jns
ja
cmp
jnp
mov
sub
push
test
repz
or
xchg
mov
ret
or
jbe
lods
inc
push
addr16
inc
mov
aas
jne
mov
clc
lret
in
test
clc
sbb
adc
movsb
xchg
test
outsb
push
pop
movsl
std
cmpsl
jns
inc
movsb
scas
add
stos
mov
into
mov
sub
mov
push
in
push
xchg
mov
adc
aad
mov
dec
jl
jns
mov
test
push
sbb
and
and
fisttps
pop
enter
test
sbb
jnp
sbb
jmp
mov
aad
js
xorb
mov
mov
shll
adc
mov
cmp
lods
mov
cmp
cmc
leave
lret
dec
ret
and
adc
je
add
fnstcw
xchg
ud0
xor
inc
pop
pop
in
aam
ljmp
stos
fimuls
mov
mov
lds
fbstp
in
stos
loopne
cmpb
adc
dec
hlt
push
lcall
pop
int3
push
cltd
testl
add
pop
inc
xchg
mov
ds
mov
scas
inc
cld
sub
sbbl
mov
lcall
lahf
mov
jmp
cld
ds
and
das
in
xor
je
iret
lods
xor
das
and
push
push
call
mov
sbb
rcl
adc
sbb
mov
fs
jecxz
cmp
std
int3
insb
scas
adc
jge
mov
mov
and
ljmp
es
mov
or
imul
jmp
dec
mov
dec
xor
sbb
stos
fidivrs
mov
or
pop
jp
fwait
adc
jecxz
mov
xchg
mov
mov
adcb
aas
ret
pop
mov
and
int
xchg
sbbb
roll
push
pop
adc
mov
shll
es
cli
add
rcrl
add
test
xchg
shrl
pop
mov
adc
clc
in
mov
arpl
in
data16
popa
mov
mov
inc
mov
push
xchg
push
popa
adc
push
xor
repnz
jmp
les
cmc
aas
sub
push
rcl
xor
shll
push
xchg
outsl
imul
mov
push
stos
outsl
jns
dec
mov
popf
enter
movb
aam
mov
cs
repnz
les
mov
mov
xor
dec
movsb
arpl
lea
imull
std
xor
mov
enter
push
imul
scas
test
pushf
jg
cld
mov
fisubs
cltd
ficomps
xor
mov
clc
das
xchg
wbinvd
std
pop
insl
stos
hlt
in
fs
pop
adc
lds
repnz
mov
iret
outsl
das
adc
stc
stc
scas
pop
mov
ret
xlat
fisubrl
and
fstl
dec
xor
lods
inc
fsubrp
lahf
outsl
inc
ss
adc
jb
jecxz
inc
xlat
loopne
stos
xlat
scas
pop
sbb
les
cmpsb
xor
test
or
or
mov
jecxz
daa
hlt
dec
lods
inc
data16
stos
arpl
adc
dec
inc
pusha
or
push
mov
lds
sahf
dec
pusha
push
cmp
into
je
cmp
sbbl
pop
or
adc
lods
shlb
push
es
cmp
iret
xor
imul
push
bound
data16
pop
push
cmp
cltd
mov
dec
push
xchg
jp
das
mov
mov
nop
aad
test
jo
push
inc
and
vsqrtss
and
mov
xor
ljmp
and
mov
sbb
incb
insl
push
lods
jp
xor
movsl
lcall
sub
adc
jge
shll
sbb
cmpsb
fs
lret
xchg
push
cwtl
adc
and
cwtl
xlat
cmp
jne
testl
fcmovnb
in
in
popa
fnstenv
adc
push
jecxz
pop
mov
push
mov
adc
mov
test
stc
stc
mov
adc
enter
pop
jp
sbb
xchg
repnz
sbb
dec
sahf
je
dec
and
in
aam
lock
out
dec
fdivl
mov
add
lods
lret
test
cmp
add
adc
pop
roll
out
mov
outsb
out
adc
mov
mov
insb
out
imul
test
lock
fiaddl
addr16
loop
cli
sbb
loope
rolb
cmp
push
and
or
scas
cwtl
aaa
adc
mov
rcl
sbb
enter
jns
into
inc
mov
xor
rcll
ljmp
das
enter
data16
ret
mov
movsl
aas
jns
mov
pop
mov
fstpt
adcl
lret
sub
inc
in
mov
in
addb
mov
xor
insb
rorb
sub
cld
fsubr
and
jmp
addr16
jo
xor
js
mov
jge
lods
inc
xlat
lret
mov
and
mov
in
ljmp
dec
mov
lock
inc
rolb
pop
shrd
imul
sbb
jnp
fwait
mov
cmp
cmp
xor
mov
sbb
pop
inc
enter
xorl
mov
fs
adc
inc
fisubs
adc
jl
lds
popa
xchg
sub
mov
mull
ja
push
lock
icebp
adc
lahf
js
leave
pop
mov
repz
enter
and
xchg
sub
sub
and
add
aas
test
mov
push
ret
jle
ja
xchg
lds
and
push
repnz
adc
cmp
fildl
or
movl
cli
dec
je
add
adc
les
mov
in
or
adc
jle
pop
add
addr16
xor
mov
sbb
test
sub
imul
jb
xchg
in
jl
iret
repz
lds
out
inc
gs
push
or
adc
subb
fucom
jle
shrl
push
rorl
gs
movsb
cmc
or
jbe
insl
int
ss
movsb
and
scas
mov
jge
mov
lret
inc
call
jnp
xor
mov
or
test
cltd
xor
cs
mov
rolb
hlt
jle
push
sub
fistpll
nop
push
jge
aaa
inc
add
fildll
test
add
mov
pop
aaa
sub
xchg
scas
in
int3
ds
xor
cmc
sarl
xchg
adc
cmp
xlat
addr16
sbb
aas
and
outsl
mov
pop
ffree
mov
mov
fimuls
cmpl
xchg
or
cmp
cli
and
mov
xchg
adc
xchg
cmc
aaa
pushf
sub
popa
outsb
add
push
sub
mov
or
dec
mov
mov
or
ficoml
xor
lods
test
mov
into
lock
lret
fcoms
xor
mov
xor
lock
pop
cld
ss
pop
fstp
dec
arpl
ljmp
ljmp
inc
cs
add
sub
ret
jne
cmp
add
mov
push
fwait
xchg
xor
outsb
jle
into
or
add
push
call
mov
aas
adc
fsubrs
cli
adc
sub
das
mov
jae
inc
xchg
iret
bound
mov
das
ret
and
jmp
hlt
and
gs
jns
xor
mov
into
mov
pop
mov
cmc
xchg
out
movsb
dec
dec
pop
mov
stc
fcmovne
mov
sbb
pop
pop
mov
aaa
outsb
push
inc
lret
push
cmpsb
cmp
rclb
mov
pop
stos
scas
add
jl
inc
repz
mov
incb
xor
pop
test
xlat
lret
scas
inc
xchg
pop
insl
aaa
add
and
inc
push
push
mov
nop
jb
push
out
dec
out
push
cmpsb
mov
add
xor
or
dec
fmull
adc
mov
pop
fnsave
fstl
je
insl
imul
repnz
pop
ret
or
jmp
push
jp
sub
outsl
push
inc
push
mov
add
mov
pusha
mov
cmpsb
mov
lods
sub
push
notl
xor
push
xchg
pop
inc
sub
inc
add
xchg
jno
lret
adc
lea
pop
insb
jl
jp
adc
cmp
in
xchg
jmp
xlat
cmp
and
and
sbb
shll
sub
hlt
comiss
scas
or
adc
mov
ret
xor
mov
mov
mov
mov
mov
into
aaa
lcall
adc
pusha
mov
sbb
sub
ljmp
mov
hlt
int3
and
ds
test
ret
xchg
sub
jge
test
pop
pop
cmpl
cmp
mov
xor
cmc
jo
jnp
loopne
leave
arpl
or
mov
push
rcll
xchg
sbbb
xchg
cwtl
pushf
jno
xchg
dec
fimuls
mov
lock
fsubrs
xchg
into
dec
sub
clc
stc
loop
lea
js
dec
pop
inc
mov
dec
sub
sub
mov
xlat
das
filds
pop
cmpsb
sub
subl
in
cltd
pop
jb
xlat
xor
dec
mov
lods
aas
jbe
mov
xor
in
stos
pop
lea
jg
sbb
cltd
and
ret
sub
les
mov
cmp
pop
or
outsl
sbb
or
push
push
imul
push
jnp
test
push
negl
mov
add
mov
scas
in
je
push
xchg
loope
jecxz
dec
rcll
push
movsb
cld
add
subb
cmp
stos
ljmp
cwtl
sub
dec
lock
leave
adc
jo
mov
call
decb
add
dec
sarb
sbb
xor
in
mov
jmp
in
pop
mov
dec
rcll
pop
or
xchg
xchg
xchg
outsb
inc
jge
loope
adc
push
mov
idivl
cmp
dec
push
aad
iret
lds
shlb
dec
dec
dec
in
xor
jno
mov
mov
and
hlt
mov
shrl
pushf
mov
and
xchg
push
push
dec
test
push
aas
ret
mov
mov
push
xchg
fildl
out
inc
sub
add
movsb
mov
in
xchg
mov
int
mov
inc
rclb
loope
outsl
cli
pusha
xchg
cli
pop
pop
add
stc
ret
adc
iret
in
xchg
je
or
pop
mov
movsb
pshufw
push
xor
fwait
insb
in
or
sbb
dec
daa
push
pop
aam
mov
and
cmp
xor
pop
dec
xchg
mov
xor
mov
or
mov
sub
sub
xor
fnstsw
hlt
std
cmpsb
addl
sub
mov
dec
mov
out
leave
aad
jno
ds
rolb
add
fxtract
xor
cwtl
sbb
dec
adc
add
jl
xor
or
cmp
sub
inc
sub
sub
xor
fistl
movsb
inc
lods
mov
stos
pop
idivb
push
cmp
add
movsl
stos
xchg
pop
call
jno
jae
aad
mov
mov
mov
mov
cmp
cmovl
push
cmc
stos
lods
jbe
jge
mov
xchg
jmp
fisttpl
sbb
lret
pop
cmp
lock
out
clc
loop
stos
int3
ja
sub
rcr
sub
cmp
mov
inc
aas
inc
lock
cmpsl
sub
push
inc
adc
outsb
xchg
fxch
leave
or
repnz
and
popw
inc
jnp
mov
jmp
inc
mov
xchg
xor
lret
jne
out
and
and
mov
repnz
data16
mov
hlt
std
jg
pusha
aam
mov
lods
into
jnp
xchg
lahf
adc
lds
push
repz
adc
or
stos
sbb
push
push
ret
mov
cld
jle
mov
clc
mov
roll
mov
lahf
popf
mov
cmpsb
out
dec
pop
sub
fisubrl
ret
jmp
jl
cltd
and
loopne
push
stos
and
roll
leave
dec
mov
or
test
test
ljmp
rorb
pusha
or
mov
mov
pop
fnstsw
test
pop
pop
adc
je
gs
inc
cmpl
lea
push
sub
aam
scas
dec
mov
jnp
adc
fidivrs
adc
dec
mov
cmp
xor
mov
loope
xchg
push
mov
jle
jbe
adc
jg
add
sar
adc
xchg
nop
mov
xor
movsb
xor
cmc
test
lret
iret
push
mov
scas
das
out
leave
jbe
mov
push
jmp
mov
pop
and
inc
dec
mov
mov
dec
popa
test
dec
mov
int
mov
jle
sub
movsb
mov
or
popa
aas
mov
adc
or
aam
xchg
aam
insb
popa
push
mov
pop
outsb
fadd
inc
mov
pop
xchg
stc
test
fists
sar
inc
mov
adc
fadd
push
hlt
push
xlat
adc
mov
rcrl
jmp
fcom
pop
inc
jae
push
jg
dec
insb
adc
and
stos
scas
adc
dec
sub
pop
adc
cli
push
mov
pusha
iret
scas
lret
les
mov
or
sarl
je
fsubrl
in
scas
mov
fstpt
cmp
add
enter
ficoms
and
add
lcall
pop
pop
cld
inc
mov
rcrl
or
shl
mov
mov
mov
and
pop
in
fildll
jo
and
fisubrl
jo
sub
leave
add
in
je
pop
xchg
scas
xchg
jle
push
ds
das
sti
push
cmp
mov
cmpxchg
pusha
xchg
lcall
sahf
pop
mov
add
cmp
xor
push
jnp
mov
sub
inc
data16
data16
dec
jo
fs
inc
adc
test
xchg
pop
gs
lods
mov
mov
jo
aam
mov
lret
cmp
mov
ljmp
mov
mov
fistpll
dec
push
jg
popa
cmp
push
adc
in
mov
popa
push
xor
xor
or
add
dec
add
or
repz
das
mov
dec
mov
aaa
sub
call
fildl
outsb
popa
ss
testb
cmp
xchg
dec
jb
mov
daa
rcrl
xchg
cld
and
push
add
imul
repz
jmp
xchg
mov
xor
jmp
adc
rorl
xor
jns
xchg
jecxz
insl
sub
sub
jge
ja
inc
adc
loop
xor
pop
mov
dec
xchg
repz
mov
icebp
shrl
mov
xchg
loop
xlat
add
adc
cld
fs
inc
or
xchg
rolb
testl
fdivs
icebp
sbb
aad
dec
popa
call
lret
fnsave
mov
xchg
insb
xor
sbb
pop
and
and
int
cmp
or
and
pushf
add
roll
xchg
or
or
xlat
push
inc
das
js
mov
push
and
seta
xlat
cmp
clc
out
mov
or
sbb
mov
inc
mov
adc
dec
int
dec
je
jns
in
cmp
fisubrs
xorl
scas
mov
cmp
lret
imul
fidivs
add
mov
mov
lods
mov
mov
pop
stos
enter
lcall
jmp
ljmp
pop
subb
and
mov
fwait
adc
mov
pop
icebp
cmp
mov
and
jl
dec
andb
jb
scas
fs
mov
test
push
loopne
aaa
das
jns
jp
xchg
mov
sbb
or
in
sbb
mov
mov
lea
pop
mov
dec
es
cmp
mov
or
pop
dec
cld
popa
pop
dec
lret
cmp
bound
cld
mov
aam
outsb
testl
xchg
loope
and
das
bound
xchg
add
cwtl
subb
xchg
pop
clc
ret
mov
inc
popa
into
xchg
fs
pop
push
fisubrs
sub
sbb
int
xor
jmp
add
movsb
mov
mov
cmpsl
into
jg
popa
das
sbb
lea
jle
test
arpl
test
sub
inc
jle
je
lret
xlat
fnsave
pop
pop
push
negb
nop
lds
subb
dec
hlt
movsl
or
and
iret
mov
in
cmp
test
outsb
icebp
adc
enter
repz
imul
jp
cmc
inc
fildll
cmp
sti
dec
ss
dec
push
sbb
aaa
mov
mov
pop
or
adc
cmpsb
mov
jmp
addr16
xchg
lret
dec
ljmp
imul
lock
enter
clc
xchg
outsb
xchg
out
lea
out
addr16
or
jno
cld
fs
inc
lahf
and
push
loope
std
pop
add
push
jmp
mov
mov
xchg
testl
sahf
jb
push
or
gs
mov
lret
and
mov
mov
or
cmpsl
inc
test
push
fs
in
fisttpl
add
sarb
push
outsl
push
mov
ret
lret
mov
mov
jp
cs
js
jae
sub
dec
add
popa
in
jl
sub
push
fsub
lret
inc
lcall
loope
lcall
xlat
xor
xchg
xchg
push
pop
iret
and
out
pop
and
lcall
xor
and
inc
imul
xchg
jno
or
jno
jnp
mov
repz
pop
cld
pushf
dec
jbe
je
mov
push
mov
adcl
xchg
jle
shlb
inc
cs
adc
into
fiaddl
lds
fiaddl
adc
push
movb
outsl
out
xor
lret
pusha
pop
incb
jmp
cmp
out
xlat
xchg
pop
sbb
pop
sub
xor
jb
scas
insl
jo
jmp
and
adc
insl
mov
mov
sbb
push
nop
inc
sub
inc
sub
bswap
push
mov
loop
divb
xor
mov
sub
in
add
test
and
dec
imul
xchg
mov
inc
mov
sbb
lret
shll
lret
fdivl
mov
scas
je
inc
iret
xor
icebp
sub
cmpsl
mov
mov
inc
push
push
pop
cmp
das
and
outsb
cmp
push
nop
loope
sbb
imul
gs
cmp
xor
or
out
outsb
jo
int
cmpsb
lahf
inc
push
dec
mov
test
or
xchg
jge
mov
mov
outsb
push
sub
bnd
cld
cwtl
in
lahf
cmpb
sahf
cmp
inc
pushl
js
in
pop
cwtl
dec
repnz
addr16
xor
insb
stc
inc
clc
pop
cmpsl
xchg
fsts
call
jbe
std
std
test
mov
add
in
into
add
xchg
cs
outsl
xchg
in
in
fcoms
push
out
add
inc
mov
sbb
sub
or
sbb
jne
mov
push
sub
or
lahf
xor
push
and
mov
and
movsl
lahf
inc
pusha
lea
mov
mov
sbb
xor
scas
cmp
mov
dec
lahf
out
push
pop
loope
lcall
push
orl
fildl
fldl
dec
jne
js
out
ss
es
jge
inc
and
inc
cmc
push
mov
nop
outsb
fs
mov
jp
subl
xchg
cld
mov
cmp
mov
in
sbb
mov
mov
push
push
aaa
cmc
push
mov
loope
lret
inc
pop
ret
sub
mulb
stos
mov
sbb
mov
push
xchg
sub
lcall
outsl
lods
push
mov
jle
out
xor
dec
and
stos
xchg
mov
adc
jl
inc
or
mov
pop
out
adc
movsb
push
test
js
adc
lcall
dec
mov
push
scas
and
xchg
cmp
pop
mov
push
ljmp
jge
and
fidivl
out
jae
mov
dec
xchg
adc
or
loopne
inc
push
cmp
or
sbb
aaa
not
imul
stos
jg
cmp
mov
in
or
in
and
push
mov
dec
pop
je
jo
add
mov
imul
inc
aam
in
es
insl
inc
sbb
xchg
int3
xor
pop
push
cmpsl
cs
push
mov
add
popa
push
pop
testl
fildll
idivl
loop
enter
dec
bnd
out
push
mov
inc
icebp
xlat
fwait
fs
push
fs
inc
loopne
sbb
xlat
pusha
repnz
insl
mov
and
and
test
sbb
xlat
push
ds
divb
movsl
ret
cld
xlat
sub
xor
xor
je
fisubrs
jb
popa
decl
cmp
pop
loope
and
fiadds
dec
inc
js
leave
ljmp
jg
add
mov
shrl
leave
push
repz
jp
pushf
jno
sub
lahf
mov
jge
cwtl
cmpsb
mov
pushf
mov
or
dec
push
sub
imul
pushf
mov
bound
jns
cmp
sbbl
loope
mov
dec
jno
mov
addr16
out
test
adc
daa
mov
push
adc
nop
dec
lret
mov
call
add
cltd
push
negl
out
inc
sub
jmp
inc
in
dec
test
jns
cmpsb
sub
mov
mov
pusha
mov
sub
sar
call
or
sbb
fwait
lea
jmp
add
sub
mov
repnz
mov
and
je
cli
icebp
and
pushf
cmpsl
insb
leave
mov
mov
fwait
cli
add
out
or
cmpb
out
pop
push
mov
repnz
into
xor
or
mov
inc
mov
push
jo
call
push
dec
adc
lock
dec
pop
dec
xchg
jle
push
cmpsb
int
sbb
rorl
dec
jp
xor
jno
pop
int3
pop
popf
mov
cmp
or
out
repz
or
mov
popl
mov
sbb
sub
stc
xor
rorl
fildl
mov
test
ret
xchg
push
in
into
push
push
daa
int
mov
popa
out
int
in
push
or
imul
xchg
adc
pop
int
dec
xchg
jnp
in
les
lcall
icebp
cmp
ret
xchg
mov
pop
xor
mov
jp
jns
ja
mov
push
push
and
and
dec
push
lcall
add
aaa
xchg
xchg
mov
lods
scas
test
push
scas
push
lods
in
call
pop
and
push
outsl
pop
test
and
inc
jo
adc
xchg
subl
icebp
xchg
jl
pop
adc
test
push
pop
fldenv
test
mov
test
aaa
jae
sti
std
mov
std
das
fstpl
idivl
shrl
cmp
in
sub
nop
mov
sbb
repnz
mov
fistpll
pop
dec
ret
cmp
sub
fwait
xchg
or
mov
mov
test
loop
in
inc
xor
bound
pop
add
js
fidivrs
xchg
popf
lret
das
lock
jg
je
sbb
mov
sub
hlt
inc
or
push
in
jecxz
push
sbbl
ljmp
mov
scas
or
call
jge
mov
add
cmc
mov
cmp
enter
cwtl
insl
inc
std
arpl
cmp
mov
notl
movsl
mov
adc
fcmovu
dec
and
mov
mov
mov
jge
fisttps
cs
inc
iret
pop
dec
fldcw
sub
outsl
loop
ss
scas
jg
mov
test
cld
ucomiss
js
jne
pusha
dec
roll
cmp
and
inc
ljmp
mov
inc
test
popf
loop
mov
cwtl
aam
pop
sbb
jmp
dec
xor
push
jno
nop
and
fs
sub
sub
inc
movsb
data16
dec
int
lods
xchg
jl
mov
push
popf
push
cmpsb
fcmovnb
add
inc
sub
ret
lea
dec
ss
push
lret
or
and
imul
sub
cmp
leave
popf
call
ds
adc
xlat
mov
adc
xor
aad
add
cmp
pushf
push
aam
sub
jecxz
xchg
rolb
pop
pop
xor
mov
std
popf
ja
fsubrl
or
push
adc
dec
sahf
dec
out
subb
dec
add
mov
cs
xchg
jmp
clc
aas
dec
jns
insl
sbb
jnp
aas
inc
inc
sub
in
mov
jmp
push
inc
rcrb
je
xchg
adc
inc
push
movsb
dec
dec
test
subb
rcll
xor
jg
dec
sbb
jmp
push
push
enter
push
ds
sbb
insl
mov
mov
push
and
or
mov
inc
xlat
icebp
fdivs
xor
daa
int3
addr16
xor
mov
mov
lock
out
push
dec
or
or
movsl
and
dec
lock
xor
int
jnp
sbb
decl
and
mov
add
inc
mov
fcomps
adc
data16
outsb
scas
sti
dec
das
pop
ljmp
cmp
jb
inc
popa
mov
fs
shll
cmp
xor
adc
insb
sub
jmp
mov
push
out
sarb
push
xor
in
or
sbb
out
ret
push
les
sahf
movd
loop
sbb
adc
int
lock
jmp
dec
dec
mov
jge
mov
jbe
pop
sti
jmp
data16
subb
inc
fisubrl
sahf
test
push
cwtl
sahf
cltd
dec
adc
push
fimull
push
test
and
shlb
addl
add
and
push
hlt
ljmp
pop
imul
pop
scas
adc
int
mov
setae
sbb
repz
es
pop
mov
mov
arpl
addb
mov
fldcw
sub
jmp
or
add
out
das
mov
ss
icebp
test
and
sbb
popf
pop
in
fisttps
lcall
push
push
sbb
dec
pop
out
and
push
movsl
dec
stc
push
jp
sub
ja
jno
dec
movsl
test
sub
push
popa
add
xchg
and
or
push
pushf
pop
sbb
dec
add
out
pop
sub
fdivrs
jno
dec
stos
out
add
pop
shlb
cmp
call
repz
pusha
and
ja
jbe
mov
and
popl
aad
sarb
out
xchg
gs
outsl
lret
outsb
jns
adc
inc
jecxz
fidivs
push
clc
clc
mov
xchg
cmp
fsubs
in
sub
fcomps
add
ret
das
and
sub
inc
das
sahf
add
mov
mov
dec
mul
cmp
push
xor
insb
imul
ja
cmpl
xchg
test
cmc
lahf
rorl
into
sub
or
in
xchg
test
sbb
jg
imulb
dec
mov
movsb
xchg
push
lcall
push
ljmp
sti
ljmp
sti
jb
and
pop
ror
pop
push
aad
pop
loop
js
test
mov
pop
ljmp
je
add
mov
out
sbb
das
inc
fcomip
stc
sub
push
xchg
lock
jne
inc
inc
xor
add
sti
lds
cmpsb
inc
cmc
daa
sbb
ss
cmp
xor
pop
lcall
fs
gs
push
push
pusha
movsb
lea
ret
adc
push
push
int3
or
and
shr
movsl
add
xor
mov
movsb
sbb
mov
ret
xchg
lock
hlt
jns
in
dec
and
jmp
push
in
rsqrtps
adc
lret
mov
dec
mov
repz
sti
insb
add
or
int
sub
ret
gs
imul
loope
jns
test
and
out
pop
cmp
outsb
mov
lods
je
ss
inc
ds
ret
push
push
push
inc
es
sub
mulb
gs
push
mov
ss
add
mov
inc
enter
dec
ja
xchg
dec
and
add
dec
pop
mov
imul
inc
add
push
xor
aaa
fs
shr
addr16
imul
outsb
mov
shrl
int3
bound
aaa
ja
jb
and
jl
push
sub
pop
mov
add
into
xor
das
fsts
or
cld
cmc
int
xchg
push
arpl
cmp
cld
cmp
scas
sbb
push
std
inc
sbb
sub
sbb
push
mov
aaa
dec
pop
cld
push
cli
imul
repz
aad
add
dec
jo
leave
xor
sbb
imul
push
aad
push
mov
fcoml
movsb
aad
and
pop
sahf
add
loope
cmp
xor
sbb
push
stc
out
stos
lds
adc
das
mov
loop
in
lods
cmp
mov
push
cmp
stc
xor
jecxz
jnp
lds
lcall
lahf
push
subl
sti
mov
leave
fxch
sahf
iret
sbb
repz
jnp
xchg
mov
xor
fistps
popa
mov
xor
ss
sbb
arpl
cmp
mov
mov
pop
in
pop
and
es
add
xorb
or
adc
stos
sub
idivb
mov
aam
mov
xchg
imul
jp
popa
jno
lds
stc
jl
adc
idivl
push
mov
xor
cld
fprem1
std
mov
xchg
and
call
sbb
movsb
imul
push
sbb
dec
adc
cmp
fwait
push
sub
test
lea
imul
imul
mov
sub
pop
and
mul
into
pop
and
ja
jmp
sub
shll
mov
fstpl
push
sbb
sbb
sbb
scas
stos
xorb
adc
push
nop
pushw
stos
lret
fwait
sbb
or
enter
cltd
test
jb
movsb
and
aam
inc
jno
int3
inc
icebp
jae
rclb
mov
divl
jle
mov
jp,pn
lahf
fs
and
mov
push
sar
mov
xor
inc
test
enter
lods
test
sub
sbbl
mov
adc
cltd
divb
pop
or
loopne
mov
rcrb
jne
xchg
inc
mov
mov
mov
cltd
sub
fwait
lods
push
xor
fcmovnbe
ja
jo
pushf
sbb
push
enter
rcll
popa
adc
into
pop
cmp
loop
pop
sub
add
add
adc
mov
cmp
test
sbb
negl
aaa
test
adc
add
xchg
cmovo
jo
pop
pop
fcmovnu
add
fs
or
push
into
inc
dec
jb
addr16
mov
jno
frstor
dec
les
leave
add
int
or
out
std
rcll
adc
ja
cltd
shl
pop
cmpsb
popa
mov
xor
push
mov
mov
ret
lea
hlt
int3
mov
push
lds
test
fs
inc
popa
xchg
ret
jbe
inc
in
mov
xchg
and
daa
push
add
negb
jnp
into
sub
ja
cld
test
idivb
shrb
aam
in
les
das
or
xchg
dec
jg
js
jbe
sbb
scas
sub
imul
movsl
in
mov
popf
sbb
fs
mov
aad
lahf
inc
xchg
push
add
lods
sti
mov
loope
mov
js
call
fsts
xor
popf
pop
jmp
je
daa
add
add
iret
add
dec
sub
cmp
data16
sub
pusha
mov
rcrl
xchg
inc
mov
xor
sub
sub
cmc
xchg
xor
sbb
int
imul
add
sub
insl
ficompl
arpl
call
repz
rcll
into
orb
mov
sbb
push
push
cld
je
pushf
jmp
mov
popf
push
test
push
pop
add
mov
out
xchg
cmp
incl
and
or
lret
xchg
jo
sub
xchg
mov
sbb
aad
cmp
mov
cmp
xor
popa
int3
adc
dec
jae
mov
jns
mov
aaa
cli
add
or
int3
scas
mov
dec
aad
pop
cli
das
adc
adc
mov
or
out
pop
xchg
xor
iret
jnp
js
fdivrl
lea
jecxz
das
adc
int3
cld
shlb
pop
pusha
movsl
sar
dec
iret
mov
adc
xor
sbb
pop
inc
sub
jb
in
lea
stos
and
mov
sbb
repnz
adc
ljmp
scas
fists
mov
mov
push
mov
subb
add
or
sbbl
pop
ljmp
repz
imul
movsl
and
adc
out
shlb
fcompl
loopne
in
ljmp
mov
mov
pop
xlat
in
mov
out
ret
xor
sbbl
jae
cmp
psubsb
das
sbb
adc
out
loope
popf
mov
test
dec
or
or
add
sbb
pop
iret
cmc
mov
or
scas
dec
popa
jne
sbb
aas
or
mov
add
fidivrl
fstpt
pop
fs
lahf
test
or
fst
js
fildll
mov
jmp
dec
testb
mov
push
add
xchg
addr16
mov
fstpl
inc
xchg
inc
sub
ljmp
shrl
test
and
jecxz
in
mov
sbb
dec
mov
movsl
lcall
shlb
aas
xchg
out
insl
fcmovu
pop
push
jae
and
dec
mov
mov
sbb
cs
mov
push
in
cli
cltd
loopne
lock
js
mov
mov
or
jb
clc
std
and
pop
lcall
fprem
sub
dec
push
fcoml
int
lcall
aad
movsl
push
pop
and
cs
cmp
int3
pop
inc
xor
in
inc
iret
pop
or
jns
jne
bnd
push
sbb
jno,pt
out
mov
je
push
and
xor
in
test
pop
enter
cwtl
std
mov
inc
xchg
adc
lret
jo
pushf
fsubs
or
inc
sbb
ficoml
xchg
mov
movsl
xor
sbb
scas
xchg
xchg
pop
mov
insb
and
dec
mov
xor
movsl
pop
into
loop
outsb
jmpw
lds
or
lock
or
pop
stos
sbbb
mov
js
lds
cltd
mov
stos
cmpsb
add
movb
lods
push
out
sti
cld
jae
xchg
jne
dec
stos
testb
sar
xor
int
ret
filds
pushf
sub
int
repnz
xor
adc
adc
aaa
sti
mov
test
dec
sbb
xchg
bound
imul
rclb
mov
repnz
fcoms
rorl
pop
mov
cmp
jecxz
rclb
adc
xchg
enter
push
or
in
dec
sbb
out
pop
jae
shl
in
mov
sub
scas
inc
mov
cmp
cmp
jb
and
inc
int
mov
mov
xor
push
jno
out
repnz
dec
sbb
add
jmp
xor
pop
imul
lds
neg
add
push
ret
js
hlt
sbb
mov
repz
pushf
popa
inc
out
adc
cmp
xor
or
rcll
imul
mov
and
jbe
xor
out
in
adc
insb
adc
je
mov
icebp
pushf
fdivl
sbb
inc
fsubrs
leave
test
adc
insl
pop
push
inc
inc
dec
and
int3
xor
repnz
je
lock
das
adc
adc
lret
add
clc
fsts
xor
mov
push
xchg
mov
xchg
jp
insb
dec
jns
mov
adc
xor
dec
fstpl
imul
mulb
mov
sbb
sbb
sub
mov
push
sahf
push
std
cld
fwait
daa
jl
js
imul
data16
and
push
adc
scas
xchg
and
cmp
js
lcall
cmpsb
jg
lret
test
mov
push
push
inc
mov
sub
mov
jmp
dec
and
push
sbb
mov
lea
mov
inc
dec
icebp
fs
jg
ss
in
jbe
sbb
movsb
lea
loopne
mov
repnz
mov
mov
fnsave
mov
mov
pop
cmpl
ja
sub
aas
push
adc
jmp
jae
push
stos
jno
add
pop
mov
cmpsl
adc
outsl
and
in
sub
leave
mov
sub
repnz
push
mov
test
mov
mov
fldl
call
mov
xor
stos
xchg
clc
or
pop
fidivrs
push
mov
and
add
xchg
lock
push
sbb
or
shlb
xchg
xor
push
mov
xor
icebp
popa
cwtl
and
mov
repnz
xchg
and
pop
jbe
cmp
orl
xchg
mov
or
in
lahf
xor
mov
lea
push
ret
test
ret
mov
mov
int3
dec
ret
movsl
int
mov
xchg
lret
mov
dec
ljmp
pushf
or
sub
fistl
js
sbb
push
clc
fxam
lret
pop
mov
add
clc
dec
jecxz
jnp
pop
dec
jl
push
pusha
je
cmc
and
push
dec
or
test
lods
lea
das
sub
test
push
jno
dec
and
movsl
pop
stc
stc
lcall
lds
imul
jmp
gs
bound
jecxz
xlat
dec
cwtl
sbb
sarb
rorb
sbb
test
test
out
pushf
scas
rol
fstpt
xchg
or
pop
loope
mov
sti
or
in
test
fimuls
push
add
lahf
mov
push
and
push
mov
repnz
das
lods
push
jnp
pop
and
mov
clc
inc
insl
movsb
push
lea
hlt
les
std
enter
cmp
pop
fnstsw
sbb
mov
adc
jle
mulb
icebp
add
fiadds
movsb
jae
jno
icebp
push
popf
sarl
adc
cmpl
cli
loope
out
sbb
int3
std
mov
or
jo
sbb
repnz
cwtl
fsubrl
jne
addr16
adc
sub
inc
mov
cli
scas
popa
aam
inc
mov
mov
and
push
data16
jnp
sahf
orb
fcmovu
add
shll
nop
cmp
pushf
add
shrb
xchg
push
sbb
lcall
fs
test
popa
jnp
fs
out
loop
test
mov
mov
cmp
pop
inc
pop
cmp
sub
xor
mov
add
pop
sbb
aad
add
das
ror
xchg
sub
fldt
xchg
das
popf
cmc
xor
or
outsb
lcall
lcall
fistpll
fcmovb
jmp
icebp
push
push
lea
cmp
mov
test
in
xor
xor
push
pop
aad
cmp
inc
add
cmp
jle
pop
add
sub
add
push
or
movsl
imul
cltd
cmp
xchg
push
xchg
lea
xchg
rcl
fwait
mov
mov
lahf
cltd
rcrb
mov
subb
xchg
lea
call
push
pop
push
ja
push
mov
into
and
pop
jp
xchg
out
in
mov
pop
pop
inc
adc
mov
xchg
cmpsb
jmp
sub
xlat
adc
rclb
jne
sbb
les
cmp
xchg
cltd
push
decl
addr16
aas
inc
or
cmp
mov
test
push
mov
sbb
in
and
push
into
mov
dec
dec
movsb
divl
dec
inc
pop
ret
xlat
sbb
xor
iret
mov
stc
gs
dec
iret
cmp
or
sbb
in
das
pop
sub
mov
jp
sarb
arpl
push
xor
mov
push
xor
push
fnop
cmpsb
sub
call
je
out
jle
stc
jb
jbe
mov
sub
xor
addr16
mov
sub
pop
fwait
sbbb
mov
inc
dec
scas
shll
sub
mov
pop
lret
or
iret
push
mov
sub
lea
add
adc
lret
dec
or
sbb
je
int3
mov
xchg
mov
jns
and
cwtl
adc
push
xlat
xchg
dec
push
xor
pop
test
dec
mul
repz
mov
mov
push
sbb
jle
mov
stos
add
cmp
xor
xlat
fisubrs
adc
pop
ja
mov
addr16
scas
icebp
sub
mov
mov
mov
cmp
in
icebp
outsb
or
mov
pop
push
arpl
mov
jle
xchg
hlt
dec
into
es
lock
mov
out
fs
lret
movsb
lock
dec
fcmovne
mov
xor
loop
mov
aad
stc
inc
nop
pop
add
es
in
repnz
mov
ss
cmp
imul
ficomps
inc
out
push
daa
repnz
cmp
pop
pop
fwait
jb
sbb
in
call
pop
pop
ret
push
divl
je
lods
ja
mov
mov
sub
lods
cmpsl
lahf
enter
jb
imul
or
aam
adc
sti
cmp
jmp
in
xor
aas
and
pop
daa
xchg
mov
js
inc
sahf
in
inc
sbb
std
dec
shl
sbb
scas
out
mov
in
loopne
ljmp
mov
push
scas
mov
outsb
dec
into
xor
jns
scas
mov
mov
movsl
ficoms
mov
aam
sub
ret
test
sar
jb
les
je
jecxz
les
in
jnp
out
mov
testb
stos
jg
mov
sbbl
adc
add
pop
xchg
jmp
imull
jmp
and
mov
sti
lods
push
pop
jns
aaa
lods
inc
jecxz
lret
rcll
dec
mov
sub
mov
pop
jb
repz
pushf
sbb
testl
mov
call
scas
adc
insl
dec
dec
stc
andl
cmp
xor
loope
stos
in
lcall
testl
int3
mov
cmp
pop
rdpmc
mov
sbb
ds
imul
scas
mov
xchg
test
lods
test
cmp
out
and
xor
mov
ror
jns
flds
sbb
cmp
and
std
sbb
lret
bound
out
dec
fnsave
jmp
stos
popf
xchg
in
and
out
ljmp
inc
popf
xchg
cmp
pop
dec
xchg
mov
xchg
iret
lods
in
mov
das
xlat
pop
mov
rclb
inc
sub
imul
aam
pop
inc
shll
push
sub
jbe
inc
movsb
or
cltd
movsb
das
cmp
ds
popa
add
fs
repnz
lods
and
xchg
push
inc
jo
cmpsb
xchg
imul
nop
test
xchg
cmpsl
iret
out
mov
and
int3
enter
in
sbb
push
mov
lods
mov
and
or
push
js
fcom
add
lods
mov
xchg
int
scas
and
and
xlat
lods
pop
imulb
or
das
jns
dec
cmpsl
ss
add
lret
lret
jp
repz
popf
sub
stos
leave
fdivs
jge
mov
sbbl
inc
sbb
jb
push
pop
scas
out
pop
sbb
or
push
push
xchg
jmp
jecxz
cmp
push
cmpsb
lock
enter
insl
pop
jge
xor
ret
jns
test
dec
lret
dec
push
cs
mov
cs
insl
mov
xor
adc
or
push
cmp
add
repnz
int
arpl
mov
mov
data16
and
movsb
jno
add
xchg
inc
lcall
push
xlat
lahf
scas
aas
int3
in
pop
dec
and
insb
je
outsl
xor
shr
aaa
jg
push
test
push
lret
inc
pop
sbb
leave
adc
js
mov
mov
mov
jmp
inc
sub
xor
fs
sub
sub
imul
xchg
test
ja
rolb
arpl
testl
test
xor
and
push
jl
mov
lret
and
lock
loopne
shll
mov
data16
and
loope
aaa
cmp
xchg
sbb
or
adc
adc
repz
and
int
mov
in
cmp
cmp
mov
repnz
and
fnstsw
hlt
sahf
push
mov
pop
popa
cmp
popf
xchg
mov
push
xchg
xchg
dec
jge
sub
in
jecxz
insl
in
scas
inc
fwait
jl
out
xor
movsl
fucom
sub
rcl
dec
imul
push
shlb
je
jae
mov
arpl
sbb
cmpsl
jmp
test
ljmp
mov
cmp
test
iret
in
mov
lahf
mov
jnp
dec
loope
negb
inc
fs
scas
sub
sbb
push
sbb
dec
jnp
adc
add
and
cmpsl
pop
icebp
push
dec
push
addb
notl
inc
sbb
or
or
sub
insl
jg
fmull
cmpsb
cmp
mov
lret
aam
aaa
and
sub
adc
cmp
xchg
clc
pop
mov
sbb
xchg
int
mov
pop
out
pop
stos
sbb
mov
iret
dec
mov
icebp
and
or
xor
mov
sub
ficoml
addl
cmc
adc
sahf
lds
mov
mov
test
iret
test
shlb
movsl
add
inc
xchg
mov
mov
or
jp
and
cmp
push
in
lea
sbb
test
and
in
adc
adc
mov
jmp
fidivl
popf
lret
mov
adcl
loopne
shlb
or
fwait
jb
arpl
out
jnp
lret
std
psubb
ljmp
les
or
xlat
outsl
popf
adc
cli
lahf
xor
jge
in
sbb
lret
sbb
adc
fsubrl
dec
inc
cltd
adc
test
pop
fmuls
stc
sbb
mov
push
push
and
dec
mov
ret
jp
pextrw
cmp
inc
dec
call
sahf
push
lret
mov
in
out
js
jae
daa
jmp
popa
ss
cmpsl
push
insl
or
inc
dec
or
hlt
adcb
ss
mov
jo
outsb
cmpsl
sub
cltd
xor
jle
sbb
mov
mov
ret
sub
and
mov
inc
outsl
add
sub
stos
sahf
cmp
sbb
sbb
or
mov
cmp
mov
push
outsb
xchg
aaa
inc
pop
dec
stc
por
aam
fistpl
mov
out
es
pop
mov
xor
and
fistps
push
pop
js
pop
cld
mov
mov
mov
cmc
mov
ret
stos
ljmp
dec
lcall
ds
aad
xchg
cmpsb
enter
int
std
mov
cmp
js
ficoms
loopne
pop
mov
inc
sbb
dec
into
hlt
mov
js
movsb
jnp
sarl
dec
aas
out
in
cmp
mov
stos
add
mov
xchg
pop
pushf
jne
mov
loope
mov
lods
sub
jne
mov
ret
xchg
sbb
aad
push
mov
test
xchg
sbb
adc
ds
push
xchg
rcr
out
or
aas
cs
jmp
and
loop
aad
fwait
imulb
ljmp
pop
enter
fmull
or
cltd
pop
test
mov
mov
scas
adc
flds
dec
mov
ljmp
push
inc
xor
sbb
xor
sbb
daa
inc
jp
mov
call
std
ret
mov
mov
mov
xchg
into
scas
pop
fisubl
aam
daa
repnz
shr
xchg
push
jmp
and
push
add
cmpsl
push
in
pushf
rcl
dec
cmp
or
out
dec
push
adc
adc
jl
lods
in
lock
inc
aad
xchg
inc
int3
jl
mov
pop
xchg
lea
dec
add
ja
adc
jbe
arpl
adc
add
mov
inc
dec
leave
or
mov
aam
cmp
nop
lds
mov
xacquire
inc
imul
notl
ss
xchg
cld
jae
dec
maxps
mov
test
rcll
pusha
out
testb
lcall
ss
add
stos
aaa
or
or
out
pop
int3
adc
and
or
xchg
lret
cli
jl
idiv
add
ja
leave
mov
xor
repz
jne
inc
sbb
mov
jle
push
je
das
push
out
push
mov
ret
fxtract
inc
fs
mov
aas
jns
sti
xchg
push
int
mov
jbe
aam
mov
lea
push
clc
xchg
xchg
adc
scas
imul
or
lcall
jae
fisubs
ja
ds
mov
xor
ret
fdivrl
jo,pn
mov
mov
sti
js
nop
and
fwait
sbb
mov
fistl
repz
fcomip
jecxz
jno
pushf
pop
push
dec
inc
mov
scas
test
pop
mov
jg
adc
test
sbb
arpl
inc
fucomi
fs
jne
mov
sbb
push
xchg
in
psubd
in
push
jnp
push
xchg
push
pushf
inc
popa
pop
pusha
push
mov
add
adc
sub
js
lock
cli
sub
cmp
icebp
jmp
movsb
xchg
nop
cmpsl
push
adc
xchg
sub
mov
jae
inc
fldcw
xchg
scas
fwait
mov
sti
xchg
add
xor
out
fs
mov
push
cmp
sub
inc
out
imull
cld
jae
xor
pop
lods
daa
pop
ss
flds
sbbb
xor
je
cwtl
sahf
mov
ret
and
or
push
fnstenv
shrb
rclb
je
ljmp
lods
sahf
pop
or
adc
ds
pop
mov
movsl
mov
aaa
pop
jno
popf
int3
sbb
cmp
add
pop
pop
ret
les
jae
or
xor
pop
cmpsb
mov
dec
mov
cli
cmpl
lahf
ljmp
es
xchg
ret
xchg
mov
push
les
aam
inc
or
icebp
xchg
sub
js
jne
sub
out
lods
sub
leave
xchg
inc
rcrb
div
cmp
in
repz
jl
adc
addl
add
fisubs
jle,pt
xchg
fsubrs
jg
movsl
push
and
mov
lahf
call
les
jnp
sub
leave
pop
or
dec
les
push
arpl
cli
nop
xchg
cli
lahf
cmp
cld
sub
loop
mov
sub
xor
out
push
rep
ja
xlat
jb
xor
sbb
adc
push
cmpsb
pusha
dec
cs
xchg
aaa
push
pushf
outsl
mov
push
or
dec
inc
fcoml
or
int3
or
mov
xchg
pop
fsubrs
jbe
sbb
mov
call
cli
mov
pop
pop
int
xor
test
push
sti
mov
loop
xchg
shlb
sbb
movsb
test
ja
xor
inc
inc
lea
add
in
jl
icebp
and
xor
int
xchg
mov
sbbb
and
roll
gs
jns
rorb
ret
fdiv
scas
and
jmp
aam
shrl
aad
jae
xor
aaa
pop
hlt
movsb
dec
add
arpl
arpl
jmp
bound
and
sub
jl
push
adc
sbbb
in
cmp
mov
ss
xor
lods
xchg
and
mov
push
add
into
sbb
jmp
push
jg
cli
out
loopne
out
icebp
lcall
mov
dec
int
fimull
dec
or
jne
sbb
andb
sub
or
mov
mov
fidivs
sub
lret
bound
scas
insl
divb
data16
add
sub
add
mov
lods
or
hlt
inc
jle
dec
ja
jno
pop
lcall
sbb
cmp
fucomp
cli
pop
pop
sbb
push
and
frstor
scas
psubusw
pusha
test
pop
ss
ss
sbbb
pop
cli
pop
pop
stc
mov
and
stos
sbb
mov
mov
in
add
or
mov
cwtl
ret
inc
imulb
xor
ds
xor
push
xchg
jnp
lret
popa
xchg
xchg
out
xchg
mov
rcrb
jb
or
push
icebp
xchg
fisttpl
mov
pusha
insl
pop
mov
sub
sahf
adc
sub
scas
aam
jl
jg
adc
and
pmaxub
sbb
cmc
adc
into
das
je
jmp
jecxz
pop
fwait
cmp
int
xor
mov
lods
mov
push
call
loopne
push
fdivrl
jecxz
push
fs
pop
mov
cs
jo
aas
xchg
or
std
lock
jl
out
pop
out
stos
xor
add
sbbb
mov
push
pop
jbe
out
dec
and
out
les
cmp
nop
sbbb
xor
push
xor
loope
cmp
sub
pushf
jp
add
out
repz
xchg
stc
cmp
data16
fwait
inc
push
sbb
jecxz
fwait
or
fwait
daa
and
insl
and
or
imul
jmp
in
mov
es
mov
mov
mov
xchg
push
inc
call
inc
popa
sub
push
inc
js
push
ljmp
psllq
fisubl
fdivr
pop
jo
ljmp
inc
bound
pop
or
cmpsl
sbb
cmp
gs
mov
shrb
ja
fildl
cmovne
movsl
cmpsb
inc
sbb
xor
test
test
outsl
add
popa
in
cmp
enter
in
mov
adc
add
add
or
hlt
mov
adcb
clc
idiv
loope
sub
aaa
sbb
ja
into
ljmp
xor
pop
and
pop
pusha
fdivrs
xchg
sbb
test
pop
daa
pusha
movsl
icebp
addr16
xchg
mov
dec
test
cld
js
adc
push
aad
fisubrs
push
and
jne
xchg
aam
in
loopne
inc
sbb
mov
inc
pushf
mov
out
sti
push
mov
push
subl
testl
jge
mov
push
push
fcomp
inc
ret
sub
adc
jg
push
sbb
ret
insb
dec
adc
jecxz
clc
cmpsl
fucom
int3
jbe
push
mov
xor
mov
out
cmp
add
inc
sbb
dec
sti
popl
fmul
ret
sub
pop
add
push
or
daa
xlat
ljmp
mov
adc
inc
xor
mov
sarb
and
arpl
scas
push
leave
call
xlat
in
mov
adc
gs
insb
call
loope
scas
mov
pop
mov
pop
inc
cmp
jae
scas
pop
repnz
das
pusha
sahf
and
pop
push
add
or
cmp
ss
adc
out
mov
cwtl
ds
xor
sub
xchg
lock
hlt
cmp
jnp
cwtl
adc
mov
loop
or
push
ucomiss
jb
dec
or
int3
cmp
shrb
adc
repnz
push
lea
cmc
mov
pop
mov
adc
lret
stos
mov
test
aam
pop
addr16
mov
and
popa
cld
lret
out
mov
pushf
iret
or
mov
lahf
aad
mov
xor
pop
sub
adc
les
outsb
lahf
pop
iret
mov
xchg
movsb
mov
adc
dec
cmp
jno
push
in
inc
bswap
add
nop
mov
dec
cmp
mov
xor
mov
add
cmp
hlt
bound
ds
adcb
xlat
push
jae
je
mov
pushl
xchg
adc
mov
cmpsl
lock
es
sub
out
lods
mov
outsl
fisubs
push
mov
sarl
clc
xor
or
xchg
sub
xor
in
sub
cwtl
repz
dec
inc
sbb
mov
dec
popf
cmpsb
lods
out
dec
dec
cmp
adc
sbb
push
pusha
jg
out
cmpsl
sbb
add
adc
out
in
inc
fsubl
xor
enter
insl
sbb
and
inc
adc
push
divl
adc
imul
mov
into
push
shll
test
xchg
jnp
outsl
mov
pop
mov
or
push
fwait
sub
icebp
lock
pop
pushf
xchg
push
xchg
movsl
repnz
rcrb
jg
or
in
lret
shrb
pop
lds
add
sti
jno
stos
ss
jo
and
or
sub
jne
cli
pop
bound
sbb
ret
cltd
xorb
fsubs
dec
rolb
push
data16
or
cmp
push
xchg
in
cmpsl
xchg
sub
pop
neg
and
ljmp
out
push
push
mov
lcall
aad
cmc
scas
ficoms
insb
dec
and
mov
insl
jae
call
mov
or
arpl
popf
pop
popa
pop
sub
mov
mov
xor
jnp
add
lret
bnd
inc
movsb
subl
scas
pop
mov
cwtl
and
sbb
lds
xor
scas
psubusw
ljmp
das
lock
mov
inc
cld
mov
sahf
lds
pop
outsb
imul
js
push
mov
shrb
push
lods
lahf
inc
xlat
js
clc
fadd
mov
cmp
ss
aad
add
push
adc
adc
add
nop
push
loop
mov
out
arpl
pop
cmp
cwtl
leave
xlat
xlat
jno
jnp
movsl
push
sti
xchg
call
xlat
adc
repz
mov
clc
pop
orb
aas
sub
std
sub
mov
lcall
frstor
pop
sbb
loop
adc
mov
mov
jmp
sbb
fs
or
es
fwait
pop
jge
scas
mov
pop
inc
jbe
sub
subb
loope
jae
dec
cmc
mov
mov
fdivrl
sahf
in
imul
out
daa
pop
inc
and
and
push
ret
add
dec
xor
stos
or
fcmovu
cwtl
xchg
int3
sub
mov
dec
jo
stc
popf
sbb
mov
cmp
out
mov
mov
xchg
stc
or
jae
inc
mov
mov
jmp
cmc
cmp
pop
shlb
push
cmp
pop
lret
and
outsl
xchg
aam
push
lock
enter
lock
out
and
push
shll
pop
fsub
add
movsb
mov
mov
js
hlt
add
inc
cmp
sarl
add
dec
sbbb
xor
cmpb
xor
mov
aas
add
dec
psrad
fwait
out
dec
pop
jecxz
fimull
repz
mov
lret
xor
pop
clc
xor
rcr
add
lods
adc
shlb
and
add
outsb
mov
mov
mov
pop
and
xchg
dec
adc
push
jmp
pop
loope
mov
movsb
es
addl
and
std
loop
icebp
mov
dec
imul
aad
jle
fcomip
push
mov
and
outsb
xor
xchg
scas
push
je
movsl
lock
les
fists
test
mov
in
leave
xor
mov
xor
mov
aaa
xchg
addl
jg
loop
loopne
frstor
sub
add
add
fistps
cmc
fidivrl
mov
or
loopne
adc
bound
push
xlat
and
dec
in
add
test
push
push
sbb
sti
por
xchg
ficoml
bound
test
cmp
sbb
xchg
sbb
pop
mov
cld
inc
adc
icebp
js
sahf
mov
scas
cmpsl
inc
xchg
xor
fwait
cmc
pushf
sbb
sti
mov
sbb
xchg
ret
imul
outsb
and
fiadds
pop
stc
sbb
sbb
ret
not
and
sti
mov
movsl
fmull
sti
insl
adc
mov
ficoms
js
sbb
adc
push
test
rcl
xor
aas
out
push
push
xchg
sbb
mov
cmpsb
xchg
add
out
outsl
add
jae
popa
icebp
jbe
cltd
push
mov
mov
lds
and
or
jbe
inc
mov
lock
jb
add
dec
mov
push
add
pop
sub
lret
aam
jo
fbstp
cmp
cmp
loopne
xor
sbb
inc
daa
das
xchg
bound
push
mov
insb
and
aas
aam
aam
and
adc
stc
mov
push
mov
xchg
int3
lock
fs
pop
mulb
sahf
outsl
pop
out
push
pop
push
or
mov
sahf
xchg
fisubl
pushf
shlb
jae
sbb
mov
jnp
jp
test
mov
xchg
imul
inc
arpl
movsb
sub
adc
jae
push
push
dec
icebp
xor
hlt
sbb
shlb
lret
or
push
add
sbb
jmp
push
push
out
mov
cmp
outsb
fs
aas
int
outsl
js
cmpsl
mov
add
inc
cmc
and
jo
pushf
push
mov
dec
cmp
add
ja
adc
lcall
mov
cltd
and
test
in
decb
test
mov
movb
inc
xchg
push
gs
nop
cmp
icebp
or
cltd
adc
adc
push
push
fnsave
xchg
scas
mov
and
and
cmp
push
fimuls
jno
jp
push
jp
xchg
sahf
dec
push
mov
jne
das
lret
mov
sub
jnp
rcrl
scas
mov
push
mov
xor
jo
sub
and
push
inc
mov
dec
or
outsb
arpl
sub
stos
xchg
loope
and
and
add
fwait
ret
js
out
fisubs
nop
pop
mov
outsb
fstps
mov
test
cltd
adc
push
jnp
push
movsb
cld
das
imul
mov
jg
mov
test
add
dec
scas
lods
jae
aam
dec
mov
adc
std
adc
and
movsb
fsubp
or
stc
jne
adc
xor
mov
push
aaa
jne
sub
imul
insb
jmp
popa
dec
scas
dec
sahf
rol
push
icebp
pop
sub
adc
add
call
cli
fstpl
mov
or
push
leave
or
jae
mov
push
add
es
fidivl
add
inc
inc
leave
push
cmpsb
and
xor
loopne
loopne
popf
shlb
sbb
xor
ds
cmpsl
sub
adc
gs
pop
sarl
jg
push
mov
lret
std
loop
pop
jp
mov
inc
ljmp
scas
xor
bound
aad
stc
psraw
pushf
pop
out
imul
cmp
cwtl
adc
jnp
popa
repnz
jnp
sbb
bound
or
std
gs
cmp
pop
pusha
fbld
mov
loope
ss
test
add
adc
ret
stos
mov
inc
outsb
das
arpl
push
scas
sub
push
xchg
ljmp
adc
aam
mov
test
testl
cmpsl
xor
ret
adc
mov
divl
mov
jg
es
mov
and
dec
loop
pop
mov
xor
xchg
sbb
push
lahf
cmp
xor
repnz
fists
cmp
add
sbb
mov
adcl
test
scas
aam
jb
out
dec
sub
faddl
and
and
and
rolb
addl
das
cltd
inc
in
movsb
xchg
jmp
add
push
lret
pop
je
lret
movb
sbb
and
sti
and
cmp
scas
and
sahf
push
mov
movsl
mov
or
repnz
mov
aas
ret
cmpsb
lock
dec
bound
mov
mov
sbb
inc
fimull
addb
xlat
sti
adc
mov
jmp
inc
dec
lret
lds
jl
dec
jne
hlt
std
jmp
adc
cmp
lea
mov
sahf
sbb
push
push
fistl
sbb
adcl
addr16
cmp
fs
clc
mov
dec
pop
sub
or
scas
js,pn
adc
xor
aas
movnti
xchg
xchg
movsl
and
out
jo
test
ja
xlat
loop
jbe
fstp
aas
or
jecxz
adc
pop
mov
adc
test
outsb
push
sub
adc
pop
xor
popa
mov
jno
movsl
add
jmp
cmpsb
mov
adc
sbb
mov
rcll
xchg
mov
loop
inc
clc
sbb
sub
mov
unpckhps
addr16
cmp
in
aad
xchg
jns
test
ret
imul
outsl
pop
jge
add
fisttpll
andl
dec
std
lret
sbb
adc
fdiv
and
jb
mov
ret
inc
cmp
mov
push
scas
dec
inc
pop
repnz
data16
scas
mov
mov
pushf
inc
outsb
add
cmc
repnz
xlat
push
int
push
mov
push
cli
jl
add
adc
repz
jge
sbb
xor
movsb
popa
or
cwtl
adc
hlt
mov
pop
mov
mov
call
faddp
pop
fs
cmp
cmc
jae
inc
lock
mov
and
push
rorb
test
push
test
cmp
jne
mov
mov
dec
sub
mov
jle
pusha
test
repz
popa
or
aam
scas
in
xor
enter
inc
inc
adc
jmp
test
mov
mov
mov
btc
ret
xchg
xlat
jbe
orb
push
dec
fnstenv
mov
adc
inc
lods
sahf
loope
test
cmp
mov
xchg
sahf
inc
jmp
shlb
gs
insb
lcall
push
cld
xchg
outsb
jbe
insl
lret
inc
adc
mov
sbb
sub
sub
cld
test
stc
xchg
rcrb
pop
lret
outsl
cmp
jno
inc
mov
mov
jne
sti
or
test
sar
loop
sbb
jecxz
icebp
iret
push
sahf
jnp
xchg
repnz
leave
add
xchg
fldt
shll
fsubl
cmpsl
sub
sbb
jns
cld
cmpb
mov
lcall
ljmp
icebp
es
add
out
fsubr
jecxz
fistpl
dec
repz
or
mov
mov
test
les
andl
mov
xor
into
mov
call
or
inc
mov
sub
push
movsl
jns
mov
jg
sbb
pushf
movsl
rorb
fidivrs
ret
popa
mov
xchg
add
inc
push
mov
inc
stc
cmp
cmp
dec
cwtl
hlt
or
xor
mov
rorb
inc
aas
add
loope
lahf
inc
sub
adc
fiaddl
sbb
xor
jo
xchg
pop
loop
pop
dec
sarl
cmp
daa
insl
add
xchg
jne
mov
adc
dec
hlt
insb
inc
push
mov
push
xchg
push
add
addl
jae
xor
int
adc
pop
cmpsb
adc
pop
ret
mov
out
sbb
sub
sub
sub
repz
movsl
lods
jl
xchg
cmp
pop
icebp
inc
jnp
pop
mull
dec
xchg
js
loop
stos
aaa
push
adc
lods
in
push
jb
pusha
ror
jecxz
push
xchg
iret
loop
cmc
xchg
test
arpl
in
or
rcrb
loop
and
xor
or
sub
sub
jmp
jne
pop
sub
mov
sarl
mov
pop
inc
dec
scas
mov
adc
bswap
into
sub
mov
ds
insl
adc
stos
inc
add
in
adc
sub
dec
sub
jle
jns
movsl
cmp
mov
lea
mov
adc
or
inc
mov
loopne
xor
or
rorb
cmp
pushf
sub
adc
ret
or
mov
xchg
outsb
insb
or
inc
and
popa
nop
mov
cmp
mov
xor
shrb
ljmp
xor
js
popa
mov
mov
jge
lds
cmp
imul
mov
lea
pushf
outsl
movsb
in
fiaddl
push
adc
pop
lods
jns
test
cwtl
out
test
mov
enter
xchg
xor
mov
out
mov
jb
jnp,pt
jne
mov
pop
ss
scas
fdivr
lcall
xchg
addr16
aas
out
jg
lea
das
pop
add
mov
push
sbb
add
jno
xchg
adc
hlt
cld
mov
mov
ja
lcall
aas
roll
nop
lret
or
outsb
loop
push
mov
cmpsl
testl
sub
pop
ja
mov
inc
lock
addr16
mov
pop
sub
repz
inc
psadbw
imulb
xor
dec
sub
pop
cmp
lds
daa
push
ja
pushf
iret
inc
sub
es
push
lods
jae
std
clc
pop
out
and
jp
orb
or
andl
add
repz
call
cld
cmpsb
cmp
xchg
subb
mov
mov
xor
and
les
sbb
addw
and
mov
sub
sti
out
push
pushf
les
mov
mov
xchg
jae
movl
xchg
fwait
dec
pop
jmp
in
jno
ds
cmp
dec
cld
sbb
lret
aam
test
jbe
push
sub
jnp
popa
and
dec
enter
in
mov
andb
lea
cmpsl
loope
jae
in
mov
int3
lahf
mov
dec
push
nop
mov
stc
xchg
and
cmp
lea
mov
mov
mov
insb
add
rcll
mov
pcmpeqd
dec
xor
sqrtps
mov
fists
hlt
pop
shrb
cmp
lahf
or
sti
dec
adc
insb
mov
imul
lds
inc
push
mov
add
mov
pop
xor
pop
jecxz
movsl
pop
and
repnz
xlat
mov
icebp
fidivrs
stos
push
addb
xlat
ret
mov
jmp
stos
pusha
call
sub
sbb
nop
mov
sbb
inc
ja
insl
push
sbb
out
xchg
sub
pop
ds
loopne
mov
xor
inc
arpl
test
fs
js
add
shll
dec
repz
push
lods
mov
cmc
lea
dec
xor
ret
pop
sbb
outsb
xchg
mov
xchg
jmp
or
pusha
push
adc
pop
pop
jl
pushf
shrl
or
dec
repz
mov
arpl
xor
mov
mov
ja
aaa
mov
xor
mov
ficoms
test
lods
pop
pop
push
and
push
cmp
jnp
jnp
jns
inc
dec
fs
mov
popf
mov
in
jmp
push
test
fbstp
push
mov
xlat
jmp
lret
es
mov
push
lahf
addr16
pop
into
lret
push
mov
add
mov
lods
xchg
sbb
pop
cmp
mov
inc
or
xchg
push
mov
popfw
sbb
int3
out
fs
nop
pop
and
leave
pop
int
fs
jns
lock
sbb
push
in
lods
test
daa
push
fldcw
das
or
cmp
add
or
pop
or
sub
lahf
into
inc
sti
mov
pop
inc
in
in
aam
call
hlt
add
pop
pop
or
or
aad
mov
cli
pop
pop
mov
cmpsb
scas
xchg
mov
gs
orl
and
sbb
aam
dec
andl
jne
mov
dec
leave
clc
sbb
mov
add
clc
fsubl
dec
xchg
fsubrl
add
les
in
and
mov
add
xchg
roll
sbb
push
cmp
cli
idivb
out
or
sbb
cmp
xlat
inc
xlat
lret
cmp
push
sbb
add
jno
cmpsb
fildll
mov
adcl
push
les
adc
inc
dec
jecxz
jo
in
ret
mov
data16
mov
bound
clc
int
lods
jmp
test
aas
push
xorl
and
sbb
repnz
test
ret
movsb
jbe
lahf
sbb
imul
inc
sub
or
sub
fwait
push
cli
pop
jne
testb
ret
mov
sbb
or
shlb
push
dec
imul
repz
dec
movsb
in
push
mov
mov
inc
inc
lret
xor
lods
jo
xchg
push
les
add
or
sahf
xor
or
dec
push
movsl
cbtw
lds
std
push
jge
jmp
aaa
adc
inc
into
in
sub
add
arpl
stos
or
mov
adc
inc
ljmp
stos
jbe
sar
sbb
aaa
pop
xchg
dec
mov
enter
and
add
push
cmp
out
cmpsb
xor
mov
lahf
jne
dec
push
rolb
cmp
outsl
rol
mov
mov
inc
rcll
or
cmp
push
adc
in
push
mov
cwtl
push
add
decb
xor
inc
sub
sti
es
cld
xchg
in
insl
in
imul
js
mov
fs
mov
stc
jnp
jns
pusha
mov
into
stos
mov
push
popa
addr16
scas
sbb
and
cmpsl
and
jg
pop
iret
inc
cmpsl
push
push
ficompl
out
xor
das
aaa
mov
jmp
subl
adc
inc
adc
mov
test
pop
dec
inc
dec
xchg
mov
int
mov
and
cmpsl
add
jle
subb
xchg
cmc
and
std
incl
in
aas
jg
insb
mov
add
arpl
and
push
les
out
adc
inc
fnsave
fidivl
cmpl
mov
cmp
jg
inc
loop
jl
je
aas
xor
outsl
add
cltd
mov
pusha
inc
sbb
adc
call
adc
mull
cmp
lods
mov
lea
rorb
je
insb
xor
or
ficoms
out
fst
xchg
enter
and
dec
ret
mov
les
enter
add
cli
lods
push
cmc
mov
loop
sub
xlat
and
mov
jns
inc
pop
push
add
ja
test
enter
or
das
mov
das
sub
int
inc
jnp
or
ds
cmove
push
aas
out
push
jb
xchg
cltd
sarb
xor
pop
jbe
xlat
fstp
orb
cltd
daa
loopne
sbb
pop
xchg
jg
mov
mov
test
jg
cmp
adc
lahf
push
fbld
push
jge
scas
push
xchg
mov
dec
pop
pusha
sbb
imul
mov
or
adc
jae
insl
call
cwtl
loope
dec
cmpsl
jp
sbb
addr16
push
lcall
adc
mov
mov
pop
jp
mov
out
add
push
ret
mov
aas
lret
dec
scas
shlb
cli
lret
pop
lret
pusha
pop
mov
test
sbb
lret
ficoml
and
xchg
xor
adc
inc
movsb
lcall
sub
test
xor
js
mov
popf
pop
xchg
cld
jns
push
pusha
test
xlat
push
fstl
mov
sahf
inc
pop
dec
stc
js
jp
leave
mov
lods
stc
iret
jp
mov
stos
jge
fstl
fcmovb
mov
and
jmp
cmpb
lea
arpl
add
adc
jge
xor
sbb
cmpsl
jp
xor
jecxz
mov
repnz
rclb
test
fwait
jno
shlb
jno
jns
inc
mov
iret
jb
nop
xor
fwait
gs
pop
inc
push
mov
cmc
pop
mov
mov
xchg
in
fimuls
in
jne
xchg
mov
inc
daa
cmp
push
into
outsl
lods
adc
iret
push
lea
jae
or
push
mov
frstor
aad
xorb
xchg
in
cld
rorl
mov
sbb
shl
add
mov
mov
sub
in
cmp
enter
ss
add
fwait
sub
inc
dec
mov
mov
ret
mov
dec
cld
iret
sub
add
aad
xchg
push
xor
cltd
inc
in
inc
xor
adc
dec
jmp
lret
andl
ficompl
jns
xchg
lahf
add
sbb
mov
mov
out
xchg
pushf
lahf
jb
dec
inc
mov
movsl
pop
loopne
jae
or
jl
push
push
pop
or
inc
jge
xchg
lock
xchg
mov
pop
mov
lea
or
data16
xor
jae
ljmp
jp
mov
mov
sub
imul
xlat
mov
test
mov
add
sbb
mov
divps
and
js
incl
clc
mov
cmc
pop
into
jno
aad
fisubrl
xchg
lret
adc
xor
popa
shll
pop
inc
daa
xchg
loope
je
mov
mov
mov
cs
pop
xchg
pusha
ret
imul
leave
adc
insl
add
into
pushl
cmp
sub
inc
rcrl
cs
pop
add
inc
push
pushw
dec
iret
andnps
fidivrl
addr16
in
cs
mov
add
jge
jbe
sbb
loopne
clc
pop
test
in
mov
or
dec
int
xchg
insl
jle
fs
xchg
xor
adc
ja
popl
push
test
mov
xchg
xor
imul
cmc
inc
or
rorl
pop
andb
or
cmpsb
roll
dec
mov
hlt
mov
mov
fs
mov
jnp
sbb
adc
xchg
incb
push
or
outsl
dec
popf
jnp
nop
outsb
xchg
adc
sub
outsb
add
sbb
ret
sarb
xchg
add
mov
icebp
cmc
bound
les
sbb
and
lds
xor
cmp
add
int3
adc
mov
lods
or
je
push
adc
mov
daa
in
and
cmp
xchg
jle
cmc
stos
mov
insl
mov
movb
push
jp
adc
mov
mov
out
and
sbb
aaa
and
jmp
in
xchg
xchg
dec
test
sub
cmp
add
xchg
mov
jae
stos
ds
adc
js
cwtl
outsl
jle
or
loope
aad
pop
aad
mov
shl
imul
aas
mov
stos
mov
pop
test
lock
out
mov
mov
sub
xor
sbb
push
das
lds
es
loop
testl
loope
arpl
push
lds
cmp
jbe
idivb
xchg
lods
arpl
test
in
stos
or
mov
add
in
inc
jle
fidivl
cmp
jbe
pop
leave
pop
inc
repnz
push
push
xlat
jnp
scas
mov
insl
xchg
repz
pop
pop
jl
js
mov
pop
imul
and
pop
fcompl
lock
and
lea
jge
push
mov
loope
aas
insb
in
push
push
jge
xor
stos
pop
sbb
mov
leave
aas
and
ja
aas
ret
pop
sub
inc
dec
hlt
jmp
mov
call
lret
adc
cmp
jb
and
push
mov
ficomps
mov
jg
sbb
jb
xor
enter
mov
mov
rclb
push
or
mov
cmp
xor
scas
cmp
pop
pop
jle
out
jns
mov
and
add
jne
mov
jmp
cld
xor
divl
mov
adc
scas
fisubl
daa
dec
add
movsb
push
xchg
cmpb
call
inc
push
nop
xlat
imul
jno
out
mov
sub
xor
lret
repnz
or
insb
lea
cli
addr16
repnz
mov
xchg
call
popa
sahf
push
xlat
mov
fwait
lcall
jp
nop
add
call
or
addl
cmp
jl
rcrl
mov
mov
lret
sub
js
mov
addr16
xchg
out
jne
iret
imul
faddl
insl
xchg
arpl
popa
sub
std
sbb
jg
rorb
mov
adc
sub
push
jle
adc
loop
or
and
bound
rorl
mov
and
pop
push
test
shrl
jecxz
ret
subl
int
push
mov
addr16
push
test
dec
imul
or
faddp
mov
add
mov
std
icebp
movsl
frstor
outsb
mov
test
sti
pop
test
sarl
test
adc
push
or
call
push
popa
std
sub
or
jne
test
sub
xchg
cli
pop
out
inc
dec
lods
mov
fcoml
cmp
push
pop
xchg
inc
shlb
xchg
sub
das
test
aaa
idivl
sbb
jbe
movups
rorl
fstps
add
shl
push
cltd
push
jmp
mov
in
mov
xchg
mov
fdecstp
movsb
jno
fcomps
or
pop
pop
push
outsb
daa
rolb
sub
dec
mov
test
adc
je
addr16
cld
sbb
pop
pop
jnp
ss
insb
enter
cltd
and
mov
jb
sbb
das
aas
jb
inc
es
test
test
jns
in
pop
pop
loop
mov
mov
fst
xor
es
cmp
jle
cmpsl
jmp
jb
aas
jge
and
enter
jmp
loopne
inc
nop
pop
loopne
jns
les
lret
add
push
pop
dec
lcall
xor
xor
shl
inc
inc
mov
jno
or
pushf
das
fisubrs
mov
dec
sarb
mov
lcall
sbb
cmp
rorl
and
es
inc
adc
cmp
mov
cltd
inc
sub
inc
ret
jb
mov
cmc
dec
xor
fcomi
int
push
cli
pand
xor
cmp
pop
cltd
fcmovu
and
mov
in
insl
fs
scas
adc
orl
cld
aad
fnstenv
dec
test
pusha
inc
inc
bound
cmp
or
mov
fstpt
in
incl
mov
sub
mov
cmc
jge
inc
repz
fisubrs
jp
mov
std
scas
or
cltd
or
cmpsl
imul
cmpsb
lods
pop
push
xchg
sub
sub
sahf
aaa
sarb
bound
xchg
mov
clc
es
inc
orb
out
mov
arpl
sarl
push
xchg
shll
mov
inc
mov
lock
add
jne
fdivl
repz
and
mov
rolb
xchg
cmp
cmp
stos
and
popa
shll
sbb
cmpb
and
insb
sub
lds
push
and
mov
add
sbb
cmp
ss
inc
mov
insl
sub
mov
add
push
popa
aam
fstpt
cmpsl
xor
and
lahf
xchg
mov
mov
sbb
mov
scas
jmp
add
inc
sub
dec
fwait
jmp
cmp
fxtract
xchg
jp
iret
jno
or
divl
cld
inc
aad
imul
xchg
pop
lahf
lret
lods
jo
or
pop
cmp
mov
sets
aaa
inc
mov
cmpsl
and
sub
mov
js
jno
jecxz
mov
out
inc
les
pusha
lock
test
add
fcoms
push
mov
jb
mov
xchg
lock
fwait
add
lcall
dec
mov
mov
dec
stos
js
inc
movsb
adc
scas
rcl
fnstenv
mov
push
sbbl
pushf
icebp
scas
jbe
pop
jge
push
es
cli
xor
insb
pop
inc
outsl
out
pop
mov
call
arpl
mov
and
add
insl
cmp
repnz
ljmp
enter
aam
cli
xlat
jge
dec
xorl
mov
pop
mov
add
icebp
mov
into
and
inc
pop
in
mov
cmp
sub
in
lods
xor
add
jnp
or
xchg
jno
pushf
popa
mov
inc
inc
loop
daa
in
dec
or
push
xor
icebp
mov
xchg
ucomiss
cli
jl
dec
mov
cmp
and
push
addl
repz
scas
addb
cmpsl
mov
fwait
jge
enter
jns
popf
or
mov
cmp
test
pop
xchg
jg
inc
pop
fidivrs
add
dec
adc
lret
std
cld
push
imul
pop
imul
repnz
cs
jae
pop
adc
jbe
arpl
out
es
add
mov
ljmp
jae
xchg
dec
mov
insb
cltd
dec
cmpsb
and
ja
imul
sbb
dec
mov
test
jae
dec
rcr
xor
iret
lcall
xor
shll
push
adc
dec
jno
or
cmp
or
outsb
mov
insb
mov
mov
xchg
push
cmpsl
ret
or
cltd
jb
scas
sbb
jle
into
fcompl
outsl
popa
repnz
push
pop
xor
lods
ljmp
je
add
xor
jecxz
adcb
dec
in
cmp
sahf
adc
ret
cmpsl
pushf
stos
xlat
out
mov
loope
sbb
mov
jnp
xchg
sub
cmp
ret
xchg
int3
scas
test
addr16
repnz
loopne
mov
lret
and
cwtl
sbb
mov
push
cmp
das
push
pop
out
mov
pop
inc
dec
mov
and
adc
lahf
es
sbb
mov
cmp
nop
cmp
shll
gs
shrl
icebp
bnd
sti
inc
test
lcall
add
pop
shrl
dec
lret
cs
xchg
xor
jae
les
push
cmp
sub
scas
xchg
push
daa
inc
divl
out
sti
ret
xchg
xor
or
adc
rcrb
and
outsb
jge
sbb
push
mov
scas
inc
sahf
add
sahf
or
ljmp
jg
insl
push
popf
jecxz
jb
jecxz
sub
negb
test
sub
mov
mov
lods
adc
sbb
add
sub
cmpsl
mov
ljmp
mov
jecxz
adc
push
clc
xor
into
testb
fnstcw
push
push
dec
jo
add
adc
pop
and
pop
daa
rorl
sub
mov
outsb
incl
rclb
sub
dec
jb
dec
aaa
int
cmp
ja
fadd
mov
jmp
scas
scas
mov
adc
mov
or
inc
inc
test
cmp
cmpsb
call
mov
insw
xor
jne
sub
xchg
popa
or
mov
xchg
jae
clc
dec
addr16
sbb
in
enter
mov
cli
inc
mov
pushf
stos
fmuls
jne
jge
xchg
xor
das
mov
inc
dec
or
outsb
mov
mov
or
insb
fwait
int3
aam
adc
rcrb
mov
pop
inc
sub
and
sub
sahf
add
xor
icebp
mov
sub
inc
enter
fidivrs
push
bound
cwtl
lock
push
test
dec
rolb
mov
pop
cld
mov
addr16
add
mov
add
pusha
js
jg
dec
es
jne
jl
dec
jle
xchg
mov
mov
xor
nop
lcall
or
out
insl
ss
ss
cmp
lahf
mov
enter
mov
imul
and
sub
iret
jnp
pop
push
pop
pop
xchg
test
pop
or
cwtl
es
adc
insb
or
aam
fstpl
and
dec
scas
dec
stos
mov
dec
adc
jae
inc
mov
sbb
push
pop
clc
aad
das
mov
lea
mov
mov
andl
inc
jge
or
mov
stc
and
cmp
sub
fnsave
xor
mov
push
dec
fstpt
mov
clc
out
or
out
lcall
dec
mov
enter
jo
dec
rcrl
mov
mov
xchg
jecxz
cmpsb
adc
xchg
sahf
sbbl
or
pop
out
jmp
mov
and
sbb
mov
inc
push
add
dec
fwait
add
scas
push
cmp
outsl
inc
lds
jg
cmc
hlt
inc
sub
and
jb
enter
mov
pusha
or
sbb
fwait
testb
jl
outsb
out
mov
pop
cmpsl
and
incl
xchg
inc
lds
cmp
aas
push
mov
sub
sub
mov
pop
cmpsl
pop
jne
das
sub
push
sbb
pop
inc
mov
pop
xchg
mov
cmp
dec
fnsave
fcmove
arpl
test
cmp
nop
lret
inc
leave
mov
rclb
mov
lret
fistl
popa
push
dec
data16
cmp
out
jp
lods
lahf
jb
cmpsl
mov
sar
out
fwait
xchg
jle
jbe
add
mov
push
insl
xlat
ss
jae
outsl
cmp
in
jmp
out
jb
or
bound
add
das
outsl
sub
lret
mov
add
push
add
lods
cwtl
iret
inc
xchg
dec
leave
subb
test
xchg
test
cmpsl
pushf
mov
sbb
das
sarb
push
xchg
jbe
push
cmp
jle
mov
adc
inc
and
sbb
cmp
movsb
or
aaa
insl
add
push
loopne
jg
jnp
notb
aas
push
cmp
sub
xor
xchg
or
pop
imul
or
pop
mov
adc
inc
dec
nop
dec
xchg
or
out
addr16
adc
xchg
hlt
mov
cmp
inc
movsb
in
das
mov
add
in
sbb
add
call
lock
insl
mov
imul
scas
dec
cmp
sbb
push
outsb
aam
int
jge
fistl
add
push
sbb
loopne
repnz
cmp
enter
out
fsubrs
daa
mov
arpl
aaa
pop
outsb
mov
mov
lcall
xor
outsl
lods
mov
rorb
pop
daa
sub
xchg
jmp
clc
arpl
sub
cld
pop
mov
iret
fwait
push
push
adc
add
adc
nop
cmp
pop
dec
add
xor
add
lahf
adc
xor
fistl
dec
or
push
addr16
cmc
jns
inc
mov
aam
inc
push
jnp
and
rolb
pop
outsb
ret
xor
fucomip
jg
sub
mov
sbbl
cmp
out
scas
mov
call
pusha
stc
xchg
and
dec
sub
notb
ja
jmp
rclb
arpl
sub
popf
sub
fistl
shrb
cltd
sbb
push
jo
cmp
adcl
mov
mov
ljmp
fwait
add
xchg
cmpsl
outsb
sub
pop
and
pop
bnd
dec
cmpsb
xor
mov
cli
insl
inc
and
pushf
mov
dec
mov
sbb
out
sub
arpl
and
mov
movsb
cli
mov
out
cli
leave
push
in
cmp
test
in
mov
adc
pop
cmpsb
add
test
sbb
fiaddl
mov
dec
mov
pop
push
inc
cmp
inc
inc
xchg
pop
jge
mov
adc
mov
mov
or
inc
mov
clc
dec
ficoms
or
fldt
jb
xor
outsl
xchg
push
push
imul
push
sub
inc
sbb
in
loop
lods
pop
xor
in
insb
xchg
sub
mov
xchg
nop
mov
sbb
push
mov
mov
mov
ds
cmp
rcll
cli
mov
cwtl
frstor
lods
xor
mov
rorl
sub
push
daa
or
add
or
lcall
bound
jnp
aas
leave
pop
jo
sti
dec
cmp
popf
push
in
pop
leave
mov
mov
push
or
xchg
mov
push
sub
inc
pushl
mov
cmp
sub
push
dec
filds
push
fistpl
dec
xchg
mov
loop
pop
aad
xor
cmp
and
dec
adc
jno
in
sbbb
dec
pop
cmpsl
sti
in
dec
mov
mov
jg
mov
arpl
in
mov
es
int3
rep
push
or
mov
insl
xor
xchg
cmp
loop
je
adc
adc
int3
jnp
sub
xor
sbb
push
rcl
push
pushf
jo
push
mov
dec
cmp
movsb
iretw
sub
pop
xor
or
je
push
fs
adc
jb
dec
stc
push
lods
add
int3
stc
xchg
movsl
and
sbb
jae
or
mov
adc
push
push
add
mov
cmpsl
cli
jl
addl
xchg
or
push
push
fmull
xor
push
adc
stos
movq
push
jl
std
mov
mov
and
cmc
mov
inc
sub
jp
cmp
clc
imul
xchg
mov
xchg
imull
mov
mov
xchg
lahf
in
leave
daa
jecxz
lahf
ret
das
pushf
loopne
lods
out
popa
sub
das
cmp
add
jo
push
pop
arpl
and
pushl
std
mov
push
ss
sbbl
lods
and
shlb
or
stos
cltd
ret
xor
mov
mov
cmpsl
lds
testb
push
lea
xchg
cmp
xor
stos
scas
mov
mov
fcmovnb
pop
test
dec
lea
ds
es
inc
and
mov
insb
movsl
outsb
ljmp
mov
sub
and
bound
mov
pop
lcall
dec
sti
adc
in
xor
flds
mov
inc
ret
xchg
and
add
cmp
jl
xchg
xchg
ret
sub
fimuls
inc
rcll
enter
in
pop
push
ljmp
iret
or
ret
jmp
out
jb
inc
or
pop
dec
iret
jmp
jns
sbb
mov
mov
sbb
movsb
jg
inc
and
call
sub
pop
sub
fidivs
cli
mov
int3
jmp
ret
and
repz
lock
xchg
sbb
repnz
sub
sub
shrl
dec
rclb
orb
push
cmpsl
mov
jns
cmpsl
mov
int3
mov
push
cs
outsb
cmp
or
hlt
push
xchg
fwait
data16
mov
add
lods
push
call
jae
scas
jmp
xor
rorl
adcb
mov
xchg
lock
mov
inc
aad
mov
popf
sub
add
add
popa
sbbl
xlat
pusha
in
push
jl
jle
mov
push
sub
stc
aaa
dec
popa
mov
and
mov
out
jge
lret
andb
adc
fstpl
cmc
xchg
pop
inc
stos
xchg
push
cvtdq2ps
push
imul
pop
call
sbb
imul
mov
ja
movsl
sbb
sub
aam
adc
and
je
adc
fwait
rcll
mov
mov
pop
mov
cmpsl
xor
add
es
xor
int
int3
popf
mov
icebp
int
mulb
jmp
xor
in
js
cwtl
inc
subb
pop
push
pop
jne
mov
jae
push
push
jp
mov
in
add
in
mov
insb
mov
mov
lret
imul
jb
sub
or
stos
incb
push
push
stos
es
mov
cld
push
cli
psubw
fisttps
mov
outsl
call
cmp
js
pushf
outsl
test
repz
mov
pop
fmulp
inc
rcrl
xchg
cltd
addl
nop
out
out
ss
cmp
ffreep
test
add
pop
dec
int3
pusha
mov
sub
xchg
popa
push
pop
cmpsl
movsb
or
xchg
sub
cmp
out
push
jmp
xor
inc
iret
ds
jl
in
stos
rcl
aad
js
stos
movb
mov
inc
jno
xchg
lret
mov
adc
sub
aas
into
mov
cmp
outsl
out
fs
mov
pop
testb
push
mov
push
jno
nop
orl
inc
cli
lods
mov
les
adc
inc
mov
or
sub
fwait
xchg
scas
push
data16
addb
xchg
int
cwtl
dec
push
inc
push
fldenv
cli
mov
dec
push
mov
inc
outsl
push
fisttps
xchg
icebp
or
mov
push
cmp
sbb
pop
adc
test
ja
mov
cmp
cli
js
or
jle
mov
mov
pop
add
sub
in
xor
pop
shl
push
out
shlb
popa
pop
inc
pop
or
push
sahf
pop
adcb
test
rcll
movb
aad
jp
dec
pop
add
push
xchg
or
popa
addr16
mov
int3
ret
repz
cmp
les
fnstcw
lock
mov
popf
cmp
pop
out
pop
pop
add
nop
xlat
sub
lahf
test
xlat
sub
imul
addps
arpl
xchg
jmp
push
or
ffreep
jb
mov
mov
adc
insb
aaa
subl
sbbb
xchg
fs
push
fucomp
xor
sub
push
dec
cmc
and
mov
es
and
loop
lods
pop
mov
fisubl
sbb
push
sti
nop
dec
fimuls
loope
scas
sbb
sbb
popf
test
cmp
or
repz
clc
and
notl
cmp
stos
fisttpll
sub
cli
jns
movsl
fsubl
pusha
int
inc
cmpsb
aad
pop
cwtl
add
add
pop
jb
push
sub
iret
cmp
or
pop
pop
push
in
jecxz
push
in
cmpsl
push
dec
cmp
adc
dec
mov
push
je
push
loope
mov
cmp
mov
add
inc
add
adc
jno
into
push
popf
insb
shr
pushf
fmull
pop
push
outsb
fnstsw
adc
mov
inc
mov
outsl
test
mov
mov
outsb
inc
fstl
aaa
and
cli
jl
test
pop
loope
shlb
inc
push
pop
lcall
std
int3
fnsave
aaa
mov
and
mov
mov
adc
scas
dec
scas
sbb
cmpsl
jnp
fdiv
xchg
dec
loopne
jnp
fwait
adc
jne
mov
xchg
jne
add
inc
test
fadds
pop
xor
push
mov
and
xchg
jecxz
dec
lea
in
sub
xor
jp
mov
push
mov
lret
pop
fiadds
repz
jb
and
jbe
es
mov
je
pop
sbb
push
lods
stc
subps
stos
mov
mov
mov
jmp
mov
outsb
add
jno
add
jnp
je
cltd
jg
cmp
cmp
sbb
in
jmp
out
jle
sbb
mov
adc
ret
sarb
inc
or
mov
push
setne
pop
mov
pop
cs
repz
sbb
addr16
cmp
mov
int
pop
test
adc
faddp
shrl
xor
mov
rclb
inc
repnz
jns
pop
fsubrs
fwait
dec
mov
jae
pop
js
hlt
inc
cs
jns
arpl
adc
mov
scas
dec
adc
shrl
pop
test
adc
mov
sub
xchg
inc
mov
xchg
arpl
push
push
and
in
mov
repz
roll
ja
in
and
adc
fstl
mov
int3
xchg
adc
pop
mov
lock
and
jns
mov
scas
mov
pusha
cmp
shl
adc
push
dec
int
ret
les
fdivrl
pop
mov
roll
lds
mov
out
repnz
push
push
int3
js
stos
inc
inc
adc
adc
jno
sub
or
sti
mov
icebp
xchg
ret
pop
inc
shl
cmp
pop
lods
mov
adc
rolb
hlt
pop
imul
jge
add
pop
ret
jmp
xchg
loopne
arpl
imul
das
movsb
dec
ljmp
sub
lods
and
cmp
xchg
xchg
test
and
adc
jns
adc
and
ficoml
mov
cmpsb
push
adc
stc
jp
cmp
add
add
inc
sbb
dec
sbb
loope
inc
dec
out
or
cmpsb
out
fistpl
inc
clc
das
sbb
aam
fucomip
adc
fildll
jae
push
jb
outsb
pop
jnp
push
inc
xchg
and
test
stc
dec
push
adcb
mov
jns
andl
fisubrs
scas
pop
fsubrl
dec
mov
pop
xchg
or
sarl
inc
into
shrl
pop
add
enter
jl
push
adc
fstps
inc
jb
or
je
xor
adc
testb
inc
sub
aam
or
inc
ss
loope
fs
out
rorb
jg
cmpsl
xchg
inc
iret
jg
jnp
or
jg
sbb
rcrl
push
pop
testl
addr16
mov
in
into
movsl
es
jecxz
mov
cmp
push
mov
lock
lahf
xor
pop
sti
out
lret
imul
adcl
in
sbb
pop
fcmovnbe
cmpsl
mov
fimull
xchg
negl
and
xchg
xchg
or
mov
adc
data16
cmc
sti
les
cmp
xchg
push
inc
inc
into
adc
mov
mov
push
decl
and
cmc
nop
in
xchg
rolb
mov
pop
or
outsl
into
mov
xor
xchg
jnp
xor
lahf
icebp
jb
aam
or
rorb
loope
cmc
aaa
in
pop
in
neg
ret
mov
std
inc
leave
nop
outsl
ds
push
mov
divl
xchg
xchg
lahf
fmull
mov
and
xchg
iret
stos
sbb
and
push
mov
xchg
mov
dec
xchg
sbb
adc
aad
sahf
xchg
mov
out
sub
stc
mov
push
add
sub
mov
iret
sbb
enter
jb
repz
pop
je
fnstcw
push
push
cltd
test
addl
cld
xchg
push
dec
outsl
inc
adc
adc
mov
vmread
pusha
bound
or
psllq
cli
xor
mov
mov
fstps
mov
mov
repnz
loopne
test
mov
fs
cld
add
jg
pop
iret
imul
pop
push
or
cmpl
mov
sub
sbb
xlat
das
sbb
call
icebp
xchg
xchg
ret
fsts
jnp
pop
lea
mov
test
cmpsb
fidivs
or
mov
jnp
mov
pslld
jge
insb
mov
cmp
addl
pop
mov
xchg
adc
out
or
js
fnsave
sub
icebp
imul
mov
imul
aam
stc
pushf
mov
divl
push
xchg
xor
pop
stc
inc
sahf
sahf
fcompl
xchg
and
ret
or
inc
cmp
jns
out
dec
mov
mov
lock
popf
jns
loopne
sbb
mov
out
jb
mov
ljmp
cmpsb
nop
adc
in
jo
notl
cltd
xchg
push
jns
xchg
xor
dec
add
dec
sbb
jb
cmpsl
adc
adc
sti
jmp
adc
imul
add
jno
and
das
fidivrl
repz
jl
rcr
ret
mov
or
hlt
cltd
sub
mov
imul
add
pop
dec
xor
mov
jne
test
sti
lret
mov
lcall
lds
mov
or
mov
xchg
loope
jl
mov
add
lea
lcall
or
bswap
sti
sbb
jne
cmc
ljmp
fs
cmp
mov
mov
enter
aad
dec
pusha
sub
dec
dec
push
mov
gs
notl
lock
xchg
adc
mov
fbld
push
lds
sarl
outsl
pop
les
add
orb
and
cmp
aad
icebp
fnsave
pop
push
xchg
mov
out
aas
ja
stc
mov
dec
leave
lret
xor
lods
xchg
sbb
scas
cld
adc
movsl
sbb
shl
dec
ret
dec
cmc
push
les
xchg
push
sub
sti
xor
into
xorb
call
ljmp
cmp
fwait
sarb
add
cmp
pop
popl
fdivrs
fildll
sbb
push
mov
pop
sbb
daa
dec
out
push
inc
xchg
loope
daa
pop
pop
jne
adc
xlat
adc
and
pop
xlat
icebp
inc
cmp
xor
sub
out
xor
std
shll
sub
call
add
or
fs
shr
add
dec
cmp
addr16
sub
ret
dec
aam
jno
in
scas
loop
mov
cmc
aaa
inc
or
pop
mov
adc
push
xchg
adc
repnz
mov
mov
or
movl
ret
addr16
imul
ss
test
or
lahf
ror
push
push
pop
test
mov
shll
or
sahf
pop
jp
or
fistpl
ret
dec
ds
jnp
es
jae
bound
pop
xchg
movsb
sbb
mov
orl
ss
jae
sbb
add
popf
inc
inc
in
out
imul
sbb
mov
dec
popf
ds
add
add
push
cltd
or
movsb
cmpb
sub
out
mov
in
cmp
lea
daa
mov
xchg
mov
stc
iret
imul
fstpt
pop
mov
hlt
aas
sbb
cwtl
mov
add
cmp
mov
rorb
pop
repz
scas
add
shrb
fsubrp
cmpsb
jp
lock
mov
pop
repz
xor
add
inc
loope
dec
pop
ljmp
sti
inc
lcall
adc
push
mov
aam
adc
jmp
lret
sub
dec
inc
push
fldt
mov
in
xchg
stc
fcmovne
dec
mov
movsl
inc
jle
and
aad
add
inc
loope
mov
ror
test
xchg
fcmovu
sahf
sub
lret
cmpsl
rcrb
into
lock
call
mov
mov
add
int3
shlb
lcall
ss
shlb
pop
clc
stos
push
dec
aaa
leave
jno
jno
loop
mov
jmp
mov
mov
push
fwait
outsb
mov
mov
out
pusha
jle
add
stos
xor
fists
ljmp
pop
and
lret
gs
test
inc
andb
dec
cli
inc
dec
sub
add
push
push
dec
test
add
pushf
lahf
cmp
sbb
push
or
add
xor
or
hlt
cs
jg
xchg
out
ret
lret
movsl
cmp
leave
les
mov
push
mov
test
mov
iret
push
mov
in
and
pushf
sbbl
dec
ficomps
sbb
insb
sbb
divps
je
outsb
stos
dec
clc
sahf
xchg
aas
sub
jbe
in
lds
push
and
push
add
ljmp
sub
sbb
jl
inc
jg,pt
push
mov
mov
jmp
lods
inc
fisubrl
jmp
psadbw
mov
movsb
and
dec
cmpsl
rcl
and
data16
sbb
inc
adc
mov
pop
mov
inc
jge
jno
imul
pop
scas
movsb
add
aad
push
dec
inc
or
test
dec
adc
scas
mov
mov
sbb
jmp
mov
cwtl
push
mov
jecxz
xor
inc
hlt
arpl
xchg
push
fiaddl
dec
leave
jecxz
xor
leave
jno
lahf
sahf
mov
adc
or
hlt
ja
jge
sbb
dec
and
pop
outsl
inc
insb
dec
mov
cmp
or
dec
ds
ss
rolb
xor
fidivl
jae
rorb
cmc
fisttpl
cwtl
idiv
ret
mul
push
fmuls
adc
cltd
sub
sbb
insb
lods
popf
aaa
xchg
iret
stos
add
insb
xor
ret
arpl
cli
loope
adc
aas
call
jg
ja
icebp
xchg
rcl
or
add
sahf
jp
nop
je
out
in
jg
ss
lods
mov
sahf
je
stos
lret
mov
pushf
repz
repnz
xor
lret
in
cli
cmpsb
lea
sub
insl
roll
pop
cmp
or
mov
lea
fisttpl
jecxz
xchg
lret
adc
ret
mov
les
adc
sbb
push
dec
insb
jl
out
scas
inc
cmp
clc
in
scas
repz
sub
ljmp
outsb
mov
pop
mov
inc
ja
popa
xor
cltd
jp
sbb
cmp
and
and
fidivs
inc
push
cmpsb
hlt
push
mov
pop
add
jle
sahf
out
sahf
fisubs
aaa
mov
adc
das
lea
les
imul
or
je
inc
cmpsb
int3
pusha
add
mov
xchg
xchg
pop
add
pop
pop
jp
clc
pop
inc
jle
stos
jecxz
cmpsb
fcmovb
shlb
pusha
xor
cmp
imul
pop
into
and
cmpsb
ja
adc
inc
push
xchg
push
lock
pop
in
jle
sub
inc
call
xchg
lods
jge
call
popf
cltd
loope
jmp
adc
imulb
loop
or
push
mov
push
sahf
les
push
jl
in
ds
stos
push
xor
dec
cmp
nop
js
add
je
pop
push
rclb
mov
scas
popa
nop
lret
cltd
arpl
cli
add
mov
xchg
add
arpl
inc
mov
and
aad
push
adc
xchg
dec
movsl
aam
jns
faddl
ret
pushf
incb
mov
push
jbe
loope
cltd
out
push
scas
lret
fisttps
fcompl
stc
das
push
loopne
mov
jae
std
lcall
pop
cmpsl
push
nop
mov
lret
std
rcrl
mov
aas
mov
inc
pushf
call
stc
ljmp
repnz
jge
or
sub
jge
pop
xchg
and
inc
mov
ja
cmp
out
jp
push
mov
repz
sub
push
mov
mov
jg
cwtl
and
ret
scas
jb
mov
mov
inc
push
xchg
mov
leave
add
sbb
add
out
repnz
movsl
jle
mov
mov
jmp
les
and
sar
mov
sub
cmp
lods
ds
repz
stos
add
into
and
dec
mov
sar
sub
pop
aam
sub
clc
loopne
fistps
clc
mov
roll
pop
sbb
cmp
add
roll
xchg
cmp
inc
pop
adc
adc
lds
xorl
mov
jnp
adc
icebp
jecxz
mov
in
loope
call
int3
mov
gs
xor
and
ficompl
shl
aas
dec
inc
or
xchg
movsl
cmc
dec
push
dec
fldenv
out
scas
inc
sub
adc
and
stc
arpl
xchg
jp
push
mov
lock
les
inc
repnz
inc
stos
outsb
sbb
in
pop
ja
mov
sti
sub
ret
call
inc
sub
cwtl
movsb
xchg
repz
loope
mov
stos
fsubr
pop
dec
cmp
out
imul
and
cltd
push
or
dec
dec
inc
bound
mov
popa
inc
ret
gs
les
sbb
xchg
dec
lds
ljmp
xor
sbbb
adc
pop
rorb
shll
pop
or
testl
jge
lret
test
das
and
add
aad
pop
cs
clc
or
cmp
lods
push
jp
sbb
jg
ss
dec
cltd
fsub
mov
mov
inc
pop
jne
and
popa
jo
gs
inc
or
ret
mov
push
dec
xchg
orl
mov
leave
sbb
fstl
sahf
or
or
cmp
lods
sti
and
jne
mov
sub
incl
dec
mov
or
movsl
jnp
out
lock
cltd
shll
scas
xbegin
push
stc
pop
test
fsub
cli
jge
jae
pop
xor
ret
add
imul
out
jns
int
adc
icebp
lea
rolb
or
loopne
ret
pushf
mov
shrb
or
outsb
out
mov
daa
pop
push
dec
hlt
das
ja
jb
add
mov
imul
and
outsl
divl
mov
repz
dec
testl
rorb
ret
add
inc
gs
sub
pop
xchg
mov
jb
dec
cmp
das
pop
insb
stc
and
push
adcl
pop
push
or
inc
inc
imul
scas
or
enter
xchg
cmc
loopne
mov
cmp
mov
orb
push
rclb
bound
notb
adc
mov
inc
shll
mov
mov
push
data16
sbb
jne
jle
sub
sub
or
outsb
ja
out
add
dec
sbb
sbbl
dec
popa
mov
and
je
stc
push
fisubrs
imul
test
jno
push
fs
push
xchg
out
lods
jo
pusha
jg
lods
adc
sub
popa
jbe
xor
sub
and
int
add
fiadds
and
mov
jle
cmpsl
jmp
sbb
xchg
xor
mov
xchg
cmp
mov
rcrb
into
mov
nop
jmp
in
shrb
sbb
push
iret
dec
mov
add
ss
in
mov
insl
and
sub
int3
mov
cltd
rcl
loope
popa
jnp
inc
mov
push
add
push
mov
inc
clc
or
scas
inc
sbb
filds
xchg
inc
lret
into
xor
xchg
cmp
push
int3
shlb
or
inc
cmc
cmpsb
push
fisttps
sub
add
movsb
iret
dec
cwtl
and
adc
mov
sub
jae
ljmp
adcl
repz
std
mov
mov
pop
push
rcrb
cmp
test
adcb
jne
push
incl
mov
xor
cmp
aas
jae
test
in
push
outsb
or
lcall
jne
add
dec
adc
push
mov
pop
test
dec
nop
adc
jne
aaa
xchg
or
daa
xor
loope
jl
data16
daa
xor
sahf
or
sbb
xorl
js
into
mov
daa
icebp
xor
mov
cmp
or
sbb
cmp
sub
outsb
repnz
add
jo
ss
ret
xor
add
daa
sub
and
xchg
mov
fdivrp
test
in
adc
sti
xchg
fucom
sub
ja
jecxz
ret
stc
add
add
stc
outsl
push
jne
xor
sub
mov
rolb
push
in
inc
jns
sbb
inc
fdivrl
xchg
jmp
jb
mov
mov
add
movsl
jecxz
lret
pop
lea
jmp
mov
xor
imul
rcrl
mov
jl
scas
xchg
mov
out
adcb
enter
fdivrp
or
imul
mov
test
bound
mov
loopne
mov
xor
or
lds
movsl
lods
adc
fldt
mov
or
xlat
push
add
xchg
sbb
sub
daa
in
fstpl
dec
jg
mov
sahf
jl
std
mov
inc
push
adc
movsb
fwait
bnd
les
mulb
and
or
test
xor
js
cmp
push
jnp
test
test
cmp
push
ljmp
xchg
mov
dec
mov
mov
or
insb
adc
cmp
in
cmpsb
bound
aaa
stos
add
stos
jae
pop
xchg
outsb
push
jbe
pop
pushf
adc
mov
cmp
jecxz
pushf
aaa
jb
sub
cmp
push
inc
subb
out
sbb
shll
maxps
js
fstl
in
loopne
mov
pop
imul
jg
js
mov
xchg
jp
mov
mov
cmp
or
cmpb
xchg
mov
cmp
or
xlat
and
in
dec
pop
adc
push
aam
mul
movsl
dec
pop
xrelease
add
andl
sbb
mov
adc
dec
cmp
mov
imul
xchg
or
xchg
push
sbb
cmp
push
mov
data16
adc
mov
outsl
mov
jmp
adc
pop
fwait
add
cwtl
push
aas
or
sub
xor
arpl
mov
and
dec
iret
fldln2
adc
xchg
adc
mov
cmovle
outsb
fimuls
bound
cmp
inc
jbe
inc
scas
sub
mov
repz
in
mov
cmp
outsl
mov
sub
test
or
adc
push
inc
fdivr
add
jle
xor
sbb
push
dec
dec
sub
push
fadds
dec
and
fcomps
adc
push
jnp
inc
das
into
xchg
ja
cmc
mov
cmpsl
cmp
repz
jno
adc
loop
test
mov
cwtl
das
jmp
xlat
dec
adc
stos
shll
xchg
test
pop
mov
test
arpl
sub
fistps
or
add
jae
clc
es
fstpt
jle
and
jne
cmpl
divl
cmp
andl
adc
roll
mov
das
fisttpl
fs
add
cmp
mov
add
xchg
dec
dec
pushf
out
ja
pop
and
or
push
adc
rcr
inc
aad
sub
push
pop
xor
pop
and
test
aaa
imul
outsl
mov
jecxz
cld
mov
movsl
push
es
incb
mov
leavew
pop
inc
and
fcompl
xchg
or
adc
sub
mov
hlt
ret
jne
adc
loopne
pop
ds
inc
sbb
aas
ret
jmp
cmp
or
call
aaa
pusha
push
sbb
addr16
aad
add
push
jg
in
cs
stc
in
repz
packssdw
pop
out
enter
and
mov
mov
cmp
les
sbb
in
pop
inc
sbb
sbb
cld
cmpb
or
insb
pop
icebp
push
iret
out
jno
jno
or
ret
xchg
les
mov
in
inc
gs
xlat
adc
std
push
add
scas
push
jmp
cli
out
push
pop
jns,pt
and
popa
jle
push
sahf
push
push
jle
ret
or
fcompl
xorl
pop
or
jbe
push
mov
pop
sub
or
jl
mov
and
xchg
cwtl
cmp
cmp
mov
sub
mov
xor
push
popf
xchg
sub
notb
push
mov
inc
faddl
push
inc
xor
cltd
xor
cwtl
mov
in
aaa
out
dec
scas
lods
or
dec
mov
sbb
and
cmp
testl
les
les
push
cmpsl
dec
ds
rorb
xchg
ret
push
stc
pop
jge
adc
xorps
repz
scas
inc
push
aam
lcall
mov
pop
and
pop
pusha
cmp
mov
xor
subb
cmpsl
xor
testl
stos
xchg
nop
pop
outsl
out
dec
iret
sub
testb
and
cld
sbb
jle
scas
test
and
xor
sbb
pop
pop
sbb
sub
adc
cmp
fildll
jne
rclb
lcall
mov
insb
iret
sub
xchg
dec
cmp
mull
sub
jno
std
and
mov
ror
push
push
xor
adc
xor
aas
popf
cs
mov
mov
sub
and
shlb
fisttpll
jl
lea
into
sahf
jns
pop
shlb
inc
push
xorb
xchg
push
cmpsb
xor
lock
movsb
cmpsb
xchg
pop
xchg
xorl
outsl
lock
fisttpll
cmp
pop
ret
in
rclb
push
add
sti
pop
popa
es
pop
push
xchg
xchg
jns
mov
xchg
jne
fistl
in
add
dec
repnz
cmc
mov
negb
lods
divl
push
sahf
clc
divl
test
call
insl
arpl
or
mov
jns
push
insl
fsts
pop
testb
xor
xchg
test
dec
mov
and
out
pop
mov
fdivs
or
lock
inc
test
push
dec
fsubrs
pusha
sbb
fidivl
xor
stc
je
pop
mov
shrb
pop
pop
out
mov
cmc
mov
out
push
pusha
arpl
mov
clc
cwtl
outsb
inc
decl
dec
das
out
sbb
push
imul
push
sbb
and
filds
or
pop
xchg
cmp
stos
cmp
cmp
push
bound
or
dec
inc
les
aam
add
bound
sbb
imul
pop
lods
cmp
xor
pop
mov
dec
xor
insl
lock
mov
out
adcb
cmc
or
or
dec
push
shr
push
sahf
into
adc
mov
adc
and
jmp
out
lods
aad
jg
inc
xchg
repnz
lcall
xchg
ja
cmp
ja
cld
test
lea
push
bound
in
jg
scas
push
ss
mov
pop
cmc
popf
sub
enter
popa
push
lock
push
adc
pop
insl
xchg
pop
and
popf
aas
in
cmp
mov
adc
push
dec
mov
or
xchg
cmp
in
je
pop
ja
stos
jo
decb
dec
scas
push
insb
or
lods
xchg
pop
sti
push
push
xor
aaa
lods
push
push
fwait
mov
sahf
xchg
test
mov
dec
xchg
mov
inc
test
xchg
jmp
rolb
xchg
xor
jmp
xlat
push
and
push
repnz
xor
sub
jno
jbe
or
xor
and
dec
sahf
or
jbe
aad
cmp
adc
cmp
test
sbb
sbb
les
fimull
or
gs
xor
ljmp
movsl
xchg
fwait
or
and
mov
sbb
out
mov
es
add
frstor
fnstenv
add
lahf
dec
adc
adc
daa
or
in
pop
dec
mov
fs
lods
scas
sahf
push
jmp
xor
sbb
test
pop
sub
lods
lds
iret
aad
iret
scas
ficompl
pop
push
cmpsl
adc
mov
pop
and
inc
lds
leave
xchg
and
mov
sub
roll
push
call
repnz
mov
adcb
sbb
push
movsb
mov
inc
jne
cltd
add
mov
dec
mov
xchg
pop
jbe
xchg
mov
or
dec
mov
or
mov
xlat
repz
sbb
cmc
and
fsubrl
xor
cli
sub
or
mov
fisttps
js
pop
xchg
adc
dec
jbe
mov
add
ja
mov
pop
xor
mov
inc
add
mov
jb
adc
cld
and
popa
pop
dec
pop
lods
sub
lahf
jg
add
jp
mov
out
mov
dec
mov
mov
jmp
sbb
cmp
or
jbe
and
mov
repz
or
cltd
mov
into
jmp
sbb
cwtl
sub
and
ficoms
jge
outsb
fwait
inc
mov
mov
test
fmull
test
fcomps
add
mov
sbb
mov
imul
out
jle
shll
adc
movsb
in
les
out
push
mov
outsb
dec
stos
inc
dec
mov
mov
lods
or
or
dec
shll
dec
jae
or
daa
insb
stc
rorl
iret
push
rorl
sbb
xor
jmp
int
adc
insl
or
enter
xor
pop
ret
popf
movsl
sub
inc
dec
mov
sub
rcrb
dec
add
in
mov
fadd
cmpsb
lcall
jb
ja
push
ds
je
mov
xchg
inc
xlat
ret
jno
test
testl
pop
ret
fucomi
sub
inc
fs
add
jo
adc
xchg
sbb
and
push
inc
cmp
add
jns
arpl
push
aas
xchg
enter
add
cld
rcll
shlb
rolb
dec
dec
test
cld
cmp
js
pop
cli
and
push
lret
cmp
inc
pop
sbbb
fwait
jge
pop
jnp
divb
incb
cltd
jle
jbe
adc
ja
outsl
inc
sti
mov
frstor
scas
mov
inc
pop
inc
dec
jp
jge
jo
insb
push
jnp
push
aad
lods
in
jg
shr
pop
mov
sbb
add
test
xchg
clc
ljmp
scas
fwait
in
jo
dec
bound
jns
mov
lds
insl
sahf
rolb
push
lahf
insl
cld
mov
das
push
fwait
call
pop
push
shl
aam
sub
pop
sarl
cld
sbb
xchg
out
bound
push
dec
add
jnp
popf
rorb
jecxz
mov
or
sub
ljmp
cwtl
dec
leave
inc
and
and
mov
stos
inc
push
cwtl
adcl
sub
jae
mov
les
mov
cmp
daa
pop
xor
sbb
xchg
lahf
mov
inc
push
mov
jp
rcll
xchg
sub
xchg
mov
adc
popa
lock
pop
int
add
out
or
divb
pop
xor
adc
sub
daa
inc
insb
mov
mov
dec
jle
xchg
imul
pushf
jl
jae
jmp
dec
out
sti
adc
lcall
push
or
xchg
je
scas
inc
subb
scas
mov
lods
int
fucom
dec
cmp
xchg
inc
and
add
adc
test
xchg
dec
icebp
push
idiv
pusha
aam
rolb
pop
insl
mov
pop
mov
or
sbb
or
loope
pop
cltd
jns
lret
out
inc
push
sbb
insb
ds
shlb
pop
test
push
or
mov
pop
inc
nopl
xchg
jge
fsubrs
sub
pop
jbe
mov
mov
xor
imul
xchg
js
lahf
fwait
shlb
add
pop
dec
adc
mov
jmp
jge
nop
mov
cmp
adc
sub
and
pop
pop
xchg
push
jmp
fdivs
jmp
mov
es
cmp
lea
jb
pop
gs
iret
stos
ret
cltd
mul
cmc
and
out
data16
inc
mov
leave
xchg
dec
ds
push
int
aad
push
mov
out
push
lcall
push
sub
es
and
pop
push
loope
push
sbb
lret
fidivrs
push
cmp
jnp
pop
out
ret
out
inc
push
cmp
sub
pop
sbb
ret
mov
shll
lods
push
or
loope
mov
pop
in
addr16
push
icebp
stos
xchg
mov
pop
or
mov
push
fwait
xchg
xchg
xor
mov
push
aam
fst
mov
jno
adc
enter
loopne
jo
inc
pop
mov
sub
mov
add
scas
movsl
and
mov
lea
xchg
and
xor
cmc
sbb
repnz
mov
dec
jo
cmp
jle
test
jl
sahf
sub
mov
cmc
and
aaa
jmp
lcall
mov
test
adc
lock
stos
push
sbb
cmpsl
pusha
mov
cli
cmp
xlat
in
mov
in
mov
pop
daa
dec
push
and
inc
sub
hlt
cmp
or
jecxz
loope
subl
arpl
fisubrl
xchg
jl
scas
lock
out
stos
ror
div
push
xor
add
add
fnstcw
add
repnz
fisubrl
les
ja
sahf
push
addr16
dec
push
lret
sub
jecxz
push
pushf
sbb
aaa
xor
mov
xchg
pusha
xor
test
cmp
and
xor
rcll
ja
cs
mov
adc
xor
or
cmp
fbld
and
insl
cli
xchg
jl
stc
test
lahf
xor
pop
dec
dec
in
insb
dec
rcrl
sub
and
dec
jge
repz
cmp
mov
ljmp
lahf
mov
mov
insb
and
mov
lea
pop
pop
in
sub
cmp
push
jb
adc
out
js
adc
mov
adc
adcl
insb
out
xchg
jmp
insb
mov
ja
lret
inc
mov
insb
sbb
sbb
sbb
test
pop
xchg
cmp
ss
dec
push
cmpsb
jg
sub
sub
js
mov
cmp
lret
mov
xor
pop
sbb
cmpsb
outsl
mov
stc
je
jns
or
outsl
loopne
xchg
lock
adc
pusha
daa
jmp
in
add
nop
mov
jecxz
in
not
movsb
xchg
push
cwtl
scas
push
and
and
pop
push
loope
sub
lock
mov
idiv
scas
stos
sub
hlt
mov
jp
fidivrl
xchg
mov
sbb
jnp
les
bound
out
pop
popf
sahf
and
adc
sbb
lret
adc
push
mov
cwtl
push
mov
push
jge
fmull
and
push
add
push
jmp
xlat
fisttpll
pop
aad
inc
daa
sar
pop
mov
shlb
or
lret
push
call
or
loope
and
pop
pop
rorl
sbb
popf
jns
hlt
and
ljmp
pop
cmp
out
xchg
das
mov
mov
sbb
jb
or
mov
aam
lcall
inc
push
dec
jns
push
add
mov
mov
sub
and
push
std
mov
sub
xchg
mov
xchg
sbb
sahf
lcall
pushf
xchg
repz
inc
addr16
shll
test
jne
test
pop
andl
xor
sub
mov
xor
and
fcompl
dec
mov
jns
push
arpl
sub
lds
xchg
lret
rclb
pop
mov
xchg
sub
hlt
repnz
jb
pushf
pop
addr16
enter
mov
je
and
mov
cmc
notl
mov
fabs
adc
push
push
push
imul
dec
mov
sub
fwait
or
xchg
std
out
push
dec
jp
push
inc
jg
xchg
lds
int
decb
call
iret
mov
mov
adc
sub
fdivr
int
jne
xchg
dec
adc
imul
outsb
inc
pop
push
lock
sbb
test
jnp
add
cmp
scas
stos
mov
xchg
test
lret
ljmp
push
test
in
ficompl
insl
shlb
loope
int3
xor
repnz
jnp
inc
sub
mov
xor
jmp
mov
fldl
push
pop
mov
lds
test
and
cmc
shll
sub
cld
fsubp
imul
scas
pop
aad
cmp
adc
cmpsl
aaa
out
popf
mov
repnz
push
xor
mov
ss
xor
fwait
add
das
inc
pop
xor
mov
mov
icebp
inc
xor
dec
xchg
in
jne
sbbl
xor
push
mov
inc
scas
bound
dec
lods
add
arpl
cld
imul
dec
in
lret
aad
mov
dec
cmp
cmp
test
jnp
push
stc
inc
jnp
inc
daa
les
inc
insl
daa
pushf
pop
shll
add
shr
andb
pushf
addb
hlt
pop
hlt
lods
roll
loope
push
sahf
inc
and
aam
gs
xchg
lahf
push
and
xchg
mov
lods
int
cmc
ja
pop
outsb
stos
sub
inc
inc
add
out
movsl
inc
adc
dec
pop
xchg
aas
call
dec
sti
jge
and
dec
dec
ss
ret
sub
pop
das
int
pop
pop
rcll
scas
xchg
sub
sbb
lods
sbb
fdivrs
mov
jmp
jg,pn
jge
or
loopne
push
cld
lret
aam
imul
pushf
mov
mov
fwait
insb
aad
pop
repnz
push
mov
or
and
icebp
xchg
and
fisubl
add
mov
repz
addr16
push
jl
mov
ret
pop
loope
mov
in
and
lods
sbb
out
movsl
mov
pop
sbb
movsl
imul
sbb
cmp
cs
imul
shrl
jns
clc
cmpsb
stos
push
test
mov
pop
arpl
leave
fcmovbe
in
pushf
sar
mov
leave
lret
sbb
lret
int
outsb
mov
dec
adc
out
into
sbb
add
pushf
mov
sbb
xchg
nop
inc
jl
int3
sbb
into
sbb
jnp
or
in
jl
push
jns
xchg
jns
inc
fidivrs
je
dec
ss
cmp
push
dec
ja
lret
mov
mov
cli
and
xchg
shlb
out
xchg
subb
bound
and
in
adcl
add
mov
add
pop
aad
imul
pushf
ja
jns
mov
call
adcl
int
push
mov
pushf
mov
je
sub
mov
sarb
scas
xchg
push
fimull
sub
lock
and
or
aam
icebp
cld
jp
call
pop
push
sti
in
das
test
cwtl
sbb
jo
imul
sub
inc
pop
xlat
mov
and
movsb
inc
daa
lods
arpl
and
aas
pusha
in
xor
push
pop
sbb
jns
push
imull
jne
testl
cltd
jge
dec
popf
xor
test
aaa
jne
mov
pushf
push
vmovdqu
push
xchg
and
add
xchg
lret
mov
in
or
dec
cmp
dec
adc
dec
lcall
sub
or
cltd
icebp
into
stc
push
cmpb
movsb
ret
sbb
in
lcall
clc
push
add
xchg
lds
aas
int
stos
jbe
push
sarl
stos
mov
test
mov
xor
addr16
pusha
mov
sbb
imul
test
mov
xor
shl
inc
movsl
testl
mov
jns
cs
pop
add
cmp
jb
pop
shrb
sub
cmc
adc
inc
pop
jmp
jns
cmc
mov
dec
xchg
mov
shll
pushf
dec
sub
or
jl
xchg
stc
sub
pop
loopne
inc
adc
jne
out
psubb
int3
das
and
mov
enter
cmp
pushf
aad
stos
xchg
jnp
sbb
pop
loope
jnp
pop
rcr
hlt
sbb
insb
pop
cmp
fstl
add
idivl
nop
add
cwtl
stos
xor
add
adc
inc
int3
pop
add
in
lret
dec
iret
fwait
in
sub
pop
std
mov
jb
xor
das
push
sub
cmpsl
leave
js
and
cmpb
lock
sub
call
push
and
inc
mov
fldt
ja
pop
sarb
and
cmp
jno
sub
adc
or
mov
mov
icebp
push
sbb
out
lods
mov
xor
test
xchg
cmc
cli
loope
jecxz
leave
dec
decl
mov
mov
push
cltd
iret
enter
into
cwtl
xchg
mov
movsl
shll
stos
cmpsb
cmp
repz
adc
imul
xchg
aas
sbb
jns
stc
mov
mov
sub
dec
or
out
movsl
inc
test
popf
sbb
xor
sahf
lcall
or
pusha
iret
xchg
icebp
xchg
mov
xchg
jbe
je
xchg
pusha
mov
mov
sub
adc
js
xor
imul
sahf
shl
sbb
push
sub
cmp
call
jbe
pop
aam
ja
and
push
loope
push
out
rorl
pop
push
inc
xchg
push
outsb
sbb
pop
call
sahf
push
lock
fmull
mov
hlt
movzwl
and
jae
pop
sbb
lock
stos
mov
inc
push
push
fsubrs
ret
aas
xchg
add
and
fdivr
xchg
push
push
loop
pop
repnz
lahf
push
and
sbb
ficomps
jns
add
into
mov
adc
fwait
mov
pop
aad
shrb
jp
sub
xor
push
stc
int
or
or
jbe
sub
xor
mov
or
cli
jmp
cmc
dec
xchg
popf
in
sahf
daa
lea
sub
iret
push
jecxz
dec
and
mov
rorl
sbb
push
enter
hlt
cmp
cmpsl
jae
xor
in
pop
movsb
fdivs
fs
ret
adc
lret
sbb
and
inc
ficompl
fdiv
leave
push
push
cmpsl
addr16
pop
dec
and
loope
iret
addr16
dec
push
sarl
pushf
jns
cmpb
clc
fadd
ret
xor
js
pushf
in
xchg
into
cld
enter
push
mov
in
xor
or
mov
and
mov
pop
loope
imul
or
stos
fidivrs
lahf
ds
aam
mov
or
jbe
popa
movsb
cmp
lods
fadd
loope
jle
fnsave
adc
push
jg
xor
and
rcrl
sbb
call
stos
pushf
ja
lahf
and
mov
jecxz
inc
pop
in
mov
cmp
inc
pop
ja
int
push
mov
pop
aam
pop
sbb
pop
dec
mov
lock
nop
stos
pop
xor
jno
stos
aaa
pop
std
mov
inc
fisubs
push
sub
sbb
dec
stos
in
cwtl
add
xor
insl
xchg
jl
inc
pop
mov
mov
dec
popf
das
stos
jle
jo
pop
inc
hlt
lret
push
dec
out
shll
sbb
cmp
xchg
sahf
dec
int3
pop
ljmp
cltd
das
popw
addr16
sbb
aad
xor
sahf
enter
mov
jae
call
rorb
imul
popa
loope
xchg
pop
dec
pop
lods
pop
out
lret
popf
jb
xchg
mov
xor
jnp
aad
fdivrs
jns
jmp
cmp
cmp
call
leave
mov
not
push
leave
xor
push
mov
into
cli
xorl
mov
mov
xchg
or
xor
scas
repz
addr16
cmpb
rcl
pushf
nop
push
mov
adc
push
dec
xor
sub
push
cmp
push
jge
jp
in
mov
mov
scas
mov
in
fnstcw
mov
lods
jp
jnp,pt
in
and
in
das
fldl
sbb
mov
xchg
pop
andb
ret
js
in
or
aad
sub
sub
in
int3
mov
subb
sti
bound
lret
daa
adcl
idiv
and
jno
mov
out
or
notb
insb
cmp
and
or
push
cwtl
sbb
jnp
out
and
pop
pop
rcll
jle
xchg
xor
popa
lcall
jo
aad
les
ret
lock
xor
inc
sbb
sbb
mov
ffree
stc
push
dec
js
adc
xchg
pusha
jecxz
mov
rcll
add
je
jge
pop
cmpsb
mov
or
test
js
fstpt
insb
fsubs
test
push
or
xor
cltd
or
movsl
xchg
mov
enter
lds
cs
inc
dec
cmp
pop
cmp
adc
je
xchg
add
js
mov
fisubs
ficoms
inc
mov
xchg
iret
mov
mov
inc
sbb
dec
pop
cld
xor
fisubrs
cmpsl
mov
mov
ljmp
sti
aad
or
aaa
aam
sub
dec
jmp
pusha
sarb
loope
pop
xor
push
nop
fwait
popa
rclb
inc
mov
leave
and
imul
insb
xor
in
jns
sub
insl
mov
pusha
sahf
mov
xchg
cmp
andl
rcll
push
sbb
cs
mov
xchg
pop
clc
andb
pop
addr16
jmp
jbe
icebp
cs
or
ret
das
test
imul
mov
repnz
dec
inc
aad
pop
dec
jl
sub
test
bound
cli
sahf
int
add
mov
inc
and
cmpsb
scas
bswap
aad
popa
push
lret
sbb
test
mov
xor
jno
push
outsl
xchg
add
mov
popa
aaa
push
shrb
std
cmp
sub
inc
push
in
sbb
xor
incl
and
fldenv
addr16
mov
pop
pop
addr16
or
sti
aam
push
jle
and
push
mov
lds
das
inc
cmp
cli
push
ret
shr
je
inc
fnstsw
jecxz
jb
loope
sub
gs
rolb
sti
sbb
icebp
movsb
imul
stos
sub
insb
popf
fidivl
imul
fst
out
movswl
fdivrs
jge
push
add
into
mov
jmp
fdivl
movsb
sarl
push
xchg
shr
loopne
les
insl
push
imul
mov
pop
pop
push
imul
mov
out
sti
fidivl
sti
and
imul
dec
rorl
mov
sub
xchg
mov
int
js
xchg
or
repz
lock
jns
js
sub
jo
ds
cmpsl
jl
inc
cmp
into
dec
sub
call
sbb
pop
push
xor
lds
sbb
cmpl
mov
lea
rorl
mov
dec
mov
ror
ss
xor
aad
push
xor
xlat
cli
mov
fldcw
pop
movsl
mov
inc
jmp
shll
rcll
push
sub
ss
stos
insb
ljmp
sahf
mov
pop
xchg
push
dec
rol
out
pushf
add
add
push
loopne
mov
js
inc
je
fidivrs
and
jo
lret
bnd
ljmp
add
dec
dec
push
or
gs
aaa
sti
leave
mov
test
pop
lret
pop
dec
xchg
lods
icebp
loope
pop
scas
cmp
and
mov
out
cmp
lods
push
dec
scas
int3
stos
adc
lea
cmpsb
stos
xchg
rcrl
leave
mov
sub
mov
inc
xor
je
imul
scas
fsubl
lret
movsb
sub
out
inc
xlat
xchg
imul
dec
loopne
cmp
push
iret
adc
mov
sub
push
ljmp
dec
lea
lock
mov
div
and
mov
sub
leave
add
test
pop
and
cwtl
jb
fwait
push
int3
outsl
sub
mov
scas
push
push
inc
mov
mov
and
xchg
or
mov
add
cwtl
or
sahf
and
fs
add
and
mov
stos
mov
pop
sbb
mov
mov
loope
nop
test
rorl
fcoml
pop
jge
inc
loop
mov
jle
in
sarb
inc
cld
mov
adc
mov
sbb
paddusb
xchg
push
repz
mov
jmp
pop
je
repnz
movsl
cli
adcl
mov
or
jl
sub
dec
push
push
xor
mov
mov
and
repz
or
mov
sub
bound
add
das
cltd
lock
pop
jl
sbb
popf
arpl
sbb
mov
mov
out
daa
mov
test
notl
dec
js
dec
sub
add
fimull
mov
loopne
or
and
jno
sub
andb
insb
fs
jge
mov
jae
scas
add
pop
popa
add
stc
xor
aad
add
xlat
pop
mov
aad
cmp
call
pop
mov
hlt
push
xchg
shll
pop
cmp
int
mov
in
mov
xchg
imul
psubd
adc
daa
mov
or
mov
cmc
lea
mov
sub
dec
mov
mov
add
cmp
scas
call
mov
ja
fwait
repnz
jne
cld
jp
jmp
and
subb
pop
shrl
loop
inc
sub
shl
mov
lods
fs
imul
cld
push
mov
lods
mov
jp
fcomps
pop
arpl
xchg
out
pop
jb
jae
mov
shlb
add
mov
xchg
adc
call
pop
pop
add
xor
inc
and
fucomp
push
pop
lock
adc
mov
push
xchg
pop
mov
push
shrb
xchg
mov
scas
mov
aas
out
adc
xchg
pop
imul
jmp
adcb
pop
inc
aam
lock
mov
sti
push
aam
loop
dec
or
loopne,pn
push
pop
mov
bnd
arpl
leave
imul
rorb
inc
mov
sti
mov
loope
sub
in
add
lcall
pop
cmpb
bnd
addr16
mov
xchg
mov
mov
loop
push
stos
xchg
mov
push
push
lret
mov
pop
xchg
popa
mov
decl
jne
sub
push
scas
adc
mov
cmc
and
cmc
fistps
mov
adc
or
imul
fisubs
xchg
loop
add
cmpsl
lret
ja
pop
mov
out
aad
pushf
fadd
mov
add
imul
cltd
jnp
dec
adc
addb
push
cs
sbb
lods
inc
dec
lret
testb
push
dec
lea
out
orb
repz
or
and
pop
and
rcr
hlt
dec
scas
pop
xchg
inc
mov
cmp
and
movsb
dec
in
mov
xchg
mov
xchg
int3
pop
add
les
stos
popl
inc
mov
repz
fs
jne
sbb
inc
sub
gs
mov
jecxz
insl
cmovb
ja
pushf
repnz
shlb
xor
add
fucomi
ljmp
sbb
add
push
mov
mov
sub
mov
cmp
in
push
sub
stc
outsb
or
inc
cltd
sub
push
jmp
xlat
mov
cmpsb
xor
push
dec
imul
js
in
insl
add
inc
xchg
out
loop
dec
loope
das
imul
jne
adc
out
inc
rolb
sub
xchg
in
out
xor
mov
add
and
fdivrl
aam
cltd
fs
sbb
pshufw
xor
clc
sbb
push
mov
mov
lods
sub
pop
jns
mov
sarl
xchg
add
in
pop
aad
mov
pop
pop
clc
dec
dec
mov
xor
arpl
scas
mov
inc
jp
repz
mov
inc
jmp
dec
scas
aas
sub
dec
stc
cmpsl
jecxz
iret
pop
lods
jmp
mov
pusha
xor
aam
mov
and
and
lcall
dec
aam
inc
adc
shl
xchg
jle
into
xchg
xlat
je
mov
sbb
stos
es
mov
loop
push
pusha
push
xrelease
dec
mov
mov
xchg
sti
mov
and
popf
mov
hlt
stos
arpl
sbbl
inc
push
loopne
shlb
and
push
int3
sbb
clc
xor
ja
mov
add
cltd
mov
xchg
fstps
and
mov
stc
test
lock
push
leave
sub
cmc
divb
stos
jmp
mov
xchg
sbb
int3
jmp
cmp
add
pusha
jp
fcompl
jp
or
std
fadd
outsl
std
sbb
aad
pop
in
daa
inc
xchg
int
mov
or
rorb
test
outsb
push
pop
or
cmpb
mov
xchg
add
jp
xchg
testl
jmp
xlat
mov
aam
ja
or
mov
and
or
stos
in
pop
out
or
daa
or
jmp
shl
in
mov
idiv
cs
pop
ret
inc
loop
push
cmp
jno
test
scas
lods
fisttps
sbb
mov
push
outsb
bound
inc
loopne
mov
or
test
push
in
test
push
push
shrl
stc
paddsw
je
or
popf
push
cmpb
lcall
out
dec
rolb
xor
mov
das
xlat
adc
push
dec
mov
rcll
cs
mov
push
mov
loope
sbb
inc
xor
adc
sbb
xchg
mov
or
movsb
mov
xchg
loop
mov
push
popa
cli
repz
adc
dec
mov
cmpsb
jne
lock
divb
and
pop
dec
and
cmp
and
pop
lret
pop
fdivrl
out
push
jg
fists
rolb
inc
pop
fcoms
aaa
jp
rorb
nop
jge
loope
mov
sbb
pushf
pop
dec
jne
jae
outsb
dec
sbb
xor
add
jge
sub
js
movsl
cmp
ret
xchg
outsb
lret
jne
call
sub
je
mov
or
jo
sbb
pop
cmpsb
sub
incb
mov
aas
pop
xor
imul
ja
pop
gs
mov
test
addr16
mov
sbb
mov
out
mov
lods
and
cmp
or
xor
inc
xchg
daa
in
push
bound
shlb
push
loopne
movsl
mov
ljmp
lret
mov
pop
jge
je
lret
je
jns
mov
icebp
xor
ja
and
insb
std
xchg
push
add
mov
jne
or
cwtl
cmpsl
or
rorb
add
das
xchg
enter
stc
test
and
sub
icebp
fimuls
jno
repnz
jmp
mov
mov
into
je
xchg
movsl
sahf
xchg
inc
fld
add
into
out
out
sub
test
aaa
add
cmc
pusha
mov
xor
js
fidivs
pop
and
jmp
add
or
cmp
mov
fwait
mov
dec
stos
push
or
xchg
aam
mov
pop
mov
xchg
rol
jo
jp
or
mov
scas
cmpsb
hlt
or
clc
inc
inc
pop
jo
scas
sahf
xor
pop
adc
popf
dec
js
mov
or
pop
movsl
jae
mov
mov
shlb
int
es
outsb
mov
add
addr16
inc
imul
dec
fcmove
dec
dec
mov
mov
adc
nop
push
hlt
pop
and
xchg
push
mull
fidivs
mov
mov
or
iret
into
addb
add
or
cmp
mov
arpl
pop
movsb
mov
mov
push
xor
cmp
jl,pn
fndisi(8087
fdivr
scas
ljmp
in
inc
enter
in
xchg
dec
shll
jo
ficoml
sub
jg
clc
adc
subb
arpl
dec
and
scas
sar
sub
ljmp
push
imul
idivl
inc
jae
fsubl
jmp
mov
xchg
push
nop
fcompl
push
lahf
push
mov
test
les
scas
fldt
inc
inc
lret
adc
cmp
imul
mov
add
mov
movsl
xchg
mov
add
mov
insl
pop
push
mov
lock
dec
scas
adc
shrl
ss
dec
movsb
inc
cmc
mov
inc
mov
push
xchg
daa
nop
lret
xchg
test
sub
loop
andl
les
mov
movntq
sbb
fs
mov
shl
or
sbb
mov
sub
incb
das
xchg
adc
jae
fwait
mov
or
lret
orb
int3
mov
jns
leave
outsl
std
out
aaa
loope
sets
call
and
aam
jp
arpl
fiaddl
cmp
push
aas
insl
mov
mov
xchg
adc
mov
fsubrl
mov
dec
xor
std
jmp
pop
mov
mov
sarb
fwait
or
inc
imul
or
sbb
inc
out
xchg
jle
lcall
les
xor
cmc
and
repz
je
jle
mov
sbbb
ret
sbb
and
add
inc
xchg
dec
jg
pop
dec
in
mov
xchg
jge
adc
mov
jne
aad
fdivl
push
push
push
pop
pop
cltd
push
aaa
aam
jmp
fldcw
iret
xchg
shll
enter
popl
pop
sub
and
movsb
data16
je
mov
out
inc
das
sub
in
jl
push
adc
jne
hlt
cwtl
dec
mov
aaa
ss
iret
sub
adcl
cmp
pop
xlat
shl
and
fucomip
sbb
insb
outsl
or
xor
pop
stos
lock
or
jmp
or
jl
mov
lahf
faddl
rcl
iret
xor
or
ljmp
cmp
nop
inc
push
in
int
cs
and
xor
jg,pt
and
adc
cmpsb
lods
into
jge
or
mov
imul
mov
int3
mov
fadds
imul
notl
or
dec
les
pop
mov
xchg
pushf
dec
out
ret
enter
cmpsb
lods
pop
daa
std
hlt
imul
jae
jge
lods
cmp
push
mov
inc
js
orb
mov
push
or
mov
or
mov
insb
mov
fcomps
jmp
mov
add
sbb
pop
fnsave
scas
cmp
adcl
dec
je
mov
fdivl
or
dec
movl
jecxz
cmovge
mov
add
mov
insl
mov
xor
repnz
fsubrp
ja
dec
xor
push
aas
jge
mov
jp
aas
orl
and
fisttpl
jle
fistpl
jmp
cld
add
mov
jle
dec
jmp
push
push
xchg
popa
dec
jno
xor
mov
push
gs
xor
xchg
push
cli
adc
push
and
sbb
stos
fnstsw
jne
ret
sub
xor
repnz
xchg
fimull
fisubl
inc
in
sub
ficomps
mov
out
xchg
and
dec
pop
push
add
in
das
rclb
jmp
out
and
in
adc
ss
pop
in
mov
stos
dec
loopne
enter
xchg
push
nop
pop
jae
movsl
int3
push
add
cs
push
loop
repz
lahf
add
pop
ret
cmpsl
sub
jge
xchg
shlb
sub
sarl
repnz
add
sahf
or
mov
shll
sbb
jp
cli
loopne
popa
imul
movsb
rcrb
cs
mov
testl
cmp
or
jno
inc
cltd
inc
test
sbb
sbb
aam
jbe
jp
or
imul
and
mov
rcrl
cs
out
pusha
mov
add
mov
fwait
inc
scas
sarl
lods
push
dec
out
mov
loope
mov
xor
inc
fadds
and
test
inc
insl
int3
out
stos
aam
aaa
jp
xchg
rolb
lea
cmpsb
push
xor
adc
fs
push
cld
jb
mov
jo
rcll
push
lahf
ds
push
repnz
dec
gs
xor
imul
push
mov
push
aas
xchg
inc
dec
inc
mov
dec
and
divb
adc
idivl
aas
inc
mov
aaa
outsb
adc
shll
fs
xor
inc
adc
movsb
inc
stc
cmp
and
shll
outsb
mov
lods
std
idivl
test
cltd
lret
jnp
pop
inc
xorb
adc
pushf
mov
adc
lcall
rcr
lahf
outsb
ds
xor
in
push
mov
lcall
lea
testl
or
test
shrl
pop
aad
gs
pop
mov
jg
xchg
out
mov
outsl
jp
push
jg
xchg
push
push
or
adc
in
sbb
je
in
pop
sahf
jae
ss
das
lret
inc
movsl
sbb
ror
jl
xchg
inc
cmp
bound
dec
dec
es
repnz
pop
dec
test
andl
mov
add
sub
adc
mov
pop
mov
daa
outsl
out
sbb
sub
xchg
in
mov
shll
mov
sbb
push
dec
fnstcw
gs
mov
stc
inc
xchg
daa
stos
pop
lahf
and
cltd
mov
jmp
inc
gs
xchg
xor
or
jmp
inc
adc
xor
cmpl
cmp
xor
sub
xor
pop
jecxz
mov
lret
mov
repnz
xor
mov
jnp
cltd
pop
into
mov
bound
cmp
push
mov
push
lea
xchg
xor
adcb
test
sbb
xchg
mov
adc
push
xchg
and
dec
js
mov
lahf
cmpxchg
out
sub
pop
and
xor
icebp
roll
push
les
and
sbb
loope
out
sti
cmp
sub
gs
lods
jne
lock
sub
pop
push
and
scas
pop
cmp
in
mov
dec
dec
adc
jno
int
and
popf
mov
out
and
dec
jl
les
lods
cs
push
jae
or
lock
bound
lea
cmp
push
or
xchg
jl
pop
push
add
mov
pop
push
inc
push
inc
mov
jnp
cmp
and
enter
and
fs
and
xor
fldcw
xlat
push
mov
in
es
popf
lcall
add
mov
cmp
enter
inc
loopne
test
jnp
pop
add
adc
jbe
push
aaa
mov
pop
push
dec
mov
jmp
ret
insb
xchg
xlat
add
jne
or
sub
dec
push
cmp
loop
in
adcl
rol
and
push
adc
fsub
vucomisd
xlat
in
shrb
and
gs
int3
stos
int3
lret
mov
cltd
mov
popf
or
inc
cmpsb
adc
lret
orb
clc
mov
aaa
sub
push
les
add
lea
mov
leave
sbb
aaa
cmp
rol
stos
mov
fbstp
push
jne
jmp
jns
pushf
push
ja
pop
push
notb
jecxz
hlt
xchg
sbb
xor
sub
sbb
imul
xlat
mov
pushl
xchg
xchg
cmp
dec
lods
sub
sarl
fwait
cwtl
fmuls
pop
or
fcmovu
xchg
cmp
fs
lret
and
xor
shrb
out
cwtl
push
stc
in
jo
jne
adc
int3
xchg
ss
sahf
test
sub
pop
push
xchg
pop
push
push
addl
iret
or
insl
xchg
xorb
xchg
mov
repnz
sti
cmp
and
int
dec
movsb
xlat
sarb
shrb
xor
fstps
push
sbb
lret
sbb
xchg
in
jmp
cmp
sbb
mov
sub
sti
ds
cmc
and
adc
push
icebp
push
sub
fwait
mov
adc
cmp
int
and
mov
and
sub
sub
movsbl
xchg
nop
xor
js,pn
push
inc
xchg
or
and
cld
ret
xchg
repz
jo
leave
jg
das
mov
mov
jmp
xchg
sarb
cmp
dec
repnz
popf
in
jp
stc
pop
fnsave
imul
sahf
les
xor
test
push
lods
xchg
fs
scas
mov
jnp
loopne
push
inc
mov
sbbb
mov
xchg
adc
inc
les
mov
dec
call
push
lcall
mov
test
ja
add
dec
ficomps
cmpsb
cld
loop
adc
adc
xchg
sbb
les
sub
xchg
xchg
pop
hlt
subl
sahf
and
cwtl
loop
int3
je
clc
in
sbb
or
add
daa
dec
or
adc
xchg
sub
sbb
ss
mov
imul
mov
sub
mov
sub
adc
cmp
jge
xor
shl
aaa
mov
mov
fadd
ss
cld
pusha
pop
adc
lret
testl
test
inc
pop
roll
and
dec
fcomps
pop
and
call
mov
stc
xchg
hlt
cmp
xchg
and
leave
ss
int
subb
hlt
imul
add
ljmp
cmp
int3
mov
adc
rcll
push
mov
cmp
pand
outsl
pop
ss
popf
icebp
and
push
les
iret
sbbl
fildll
adc
sub
mov
rorl
iret
sub
sub
outsb
data16
xchg
lcall
aaa
lods
push
jecxz
stc
pop
mov
flds
jg
clc
pop
xchg
sbb
mov
jmp
cltd
outsb
imul
lret
inc
dec
in
sub
repnz
dec
dec
lahf
mov
push
fneni(8087
sub
sub
insb
aas
es
rclb
rcl
leave
jb
loope
sbb
xor
ja
nop
js
shrl
call
test
cmp
and
and
enter
cltd
add
mov
lods
cmpsb
adc
dec
jp
inc
jmp
inc
mov
push
jge
and
sbb
rclb
les
popf
stc
sarl
aaa
mov
cld
mov
sub
std
mov
loop
push
mov
hlt
ja
insb
mov
movsl
add
or
pushf
jecxz
outsb
pushf
jae
test
jl
and
dec
pop
mov
fisttpl
lcall
add
inc
add
vmread
mov
push
orl
fs
les
push
inc
in
fldt
sbb
xor
sub
lret
push
test
loop
pop
stos
js
or
mov
clc
add
insl
int3
test
fcoml
fs
xchg
jae
lock
add
push
adc
cmp
cmp
addb
pop
cmp
jg
insl
add
or
xchg
dec
sub
and
and
testl
mov
daa
fwait
sbb
pop
push
mov
xchg
xor
out
pop
xchg
mov
std
divl
cmpsl
sbb
adc
fcom
stos
adc
iret
or
je
adc
inc
sbb
rcrl
es
rorl
push
popa
inc
mov
clc
inc
outsb
pop
mov
dec
fisttpl
gs
dec
adc
adc
jo
lea
ja
xchg
add
mov
and
push
pop
pop
arpl
stos
in
ret
fcoms
adc
dec
sbb
lcall
xor
shrl
mov
cmp
pop
add
add
fldcw
or
dec
pop
std
pop
mov
jmp
cmp
movsl
xchg
es
fildll
xor
imul
subl
cmp
ret
cltd
es
daa
or
fnstenv
dec
scas
xchg
je
incl
rorb
ret
ja
mov
xor
add
jo
bound
add
or
out
aad
jne
xor
in
mov
jmp
out
jnp
into
or
and
cmpsb
or
inc
xor
lods
ja
lret
lcall
jns
sarl
pop
out
in
imul
or
mov
sub
inc
mov
stos
xor
xlat
inc
cmp
pop
inc
mov
imul
mov
bound
sub
mov
push
jno
out
xchg
xchg
rcl
add
enter
sbb
dec
and
sub
fisttpl
mov
mov
xchg
mov
jmp
out
sub
sarl
aad
popf
push
add
pushf
in
stc
out
push
push
dec
ret
mov
fsubl
push
jbe
andl
std
xchg
mov
sbb
sar
test
fnstsw
cmp
jg
or
xorl
xlat
sub
fidivl
outsb
pop
lods
xor
jb
sub
ja
or
cmp
out
cmp
sti
or
sub
mov
mov
bound
mov
dec
or
les
imul
mov
sbb
scas
addb
ret
js
pop
cmp
or
sbb
scas
cmp
add
test
mov
push
or
sbb
adc
dec
jle
iret
clc
aam
incb
out
int
in
push
gs
lret
push
pop
dec
hlt
lock
xor
jl
pop
mov
int3
out
or
push
mov
ljmp
jns
in
subl
xchg
dec
loope
sub
or
lahf
out
adcl
xor
pop
cmc
andl
into
das
stos
add
movsb
dec
sbb
dec
adc
cli
or
call
ja
out
sbb
dec
inc
xchg
mov
mov
mulb
xor
cmp
pop
push
stos
mov
mov
movl
and
push
push
popa
xchg
and
pop
das
arpl
jle
frstor
xchg
xor
xchg
std
loop
mull
adc
mov
and
add
adc
mov
out
test
orb
jno
out
push
add
sub
adc
jmp
icebp
sbbb
sub
mov
adc
or
cmp
push
test
push
jmp
movsb
mov
leave
ljmp
or
xchg
jecxz
push
cmp
mov
movsb
loopne
filds
lods
rclb
stos
adc
mov
jns
scas
xlat
jg
pop
mulb
std
aad
popa
outsb
movsl
pop
sahf
dec
test
mov
rclb
sbb
and
out
orl
stc
cli
lcall
jb
in
insl
sahf
fisttpl
sarb
ror
cmp
imul
fimuls
les
push
imul
xchg
push
mov
rcl
sahf
cmp
pop
sub
std
jmp
leave
pop
insb
push
sub
push
fcomip
push
js
loopne
xchg
and
xchg
sub
sbb
test
lds
ffree
out
mov
pop
lcall
jmp
scas
es
adc
inc
stos
sbb
xchg
ljmp
pop
add
ficompl
xor
xchg
inc
jb
sbb
fisubs
gs
dec
cmp
sub
sub
pushf
cmpsb
in
les
in
pop
stos
dec
es
lods
les
ret
lds
enter
pushl
sbb
jns
enter
xorl
jg
cli
je
out
mov
gs
adc
sub
and
mov
mov
pop
mov
mov
add
jne
loop
xor
movsl
dec
inc
dec
iret
in
jg
inc
lds
int3
dec
or
ja
or
push
or
dec
mov
cmpsl
mov
add
push
sbb
mov
ljmp
aas
mov
popa
mov
add
lea
into
jb
ret
aam
xchg
movsl
push
push
xor
xchg
push
daa
cmp
insl
mov
cmp
jmp
mov
xor
popa
dec
test
sub
cltd
cli
jno
hlt
cmp
outsb
inc
jne
stos
es
dec
mov
test
adc
bound
add
or
jge
fldcw
dec
jno
fisubrl
sub
push
inc
push
add
into
mov
mov
push
cmpsb
insl
in
enter
or
scas
incb
out
ds
or
ret
mov
testb
sub
pop
out
rcll
in
jg
movsb
movsb
mov
pop
cmp
js
stc
jmp
push
jl
jbe
adc
call
sub
fidivs
cs
mov
in
mov
and
mul
push
mov
adc
ret
adc
popf
jno
dec
in
inc
cmpsl
fidivs
ficoms
mov
idivl
aam
mov
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
adc
int3
mov
or
rorl
aas
sub
push
mov
add
pusha
and
mov
and
pop
xlat
pop
mov
lods
cmpsb
dec
sbb
jle
cltd
loopne
hlt
mov
jmp
pop
mov
add
lret
mov
sbb
sub
pop
cs
in
pushf
push
shll
xchg
mov
aas
test
mov
ja
cs
sbb
and
pop
in
dec
inc
mov
cld
outsb
mov
stos
sbb
jae
and
loopne
shll
daa
daa
pop
jmp
cmp
sbb
cmpsl
sti
aam
pop
cmp
sar
insl
push
xorl
xor
add
mov
push
std
or
cs
lods
hlt
mov
xchg
mov
lea
popf
or
out
movzwl
cmp
jg
push
les
mov
jmp
dec
add
mov
bound
sub
movsb
fcoml
pop
sbb
mov
leave
das
pop
lock
jns
adc
sahf
push
sarl
inc
or
loop
outsl
je
jg
jno
stos
jne
inc
adc
fistpll
popf
lock
push
addr16
xor
mov
add
jnp
stos
je
xchg
mov
outsl
xor
push
shl
ljmp
add
mov
cmp
jbe
stc
inc
dec
imulb
stc
mov
les
adc
or
xchg
xchg
lret
mov
inc
or
sub
adc
cmpsl
xchg
in
aam
jmp
loope
lahf
sub
inc
rorl
sahf
xchg
jge
push
mov
int
mov
imul
out
imul
xor
bound
clc
enter
pop
xchg
dec
inc
push
int
sbb
aas
jmp
insl
add
xor
daa
subb
push
mov
jnp
or
mov
loope
inc
mov
cli
dec
mov
mov
cwtl
roll
lea
adc
xor
jno
mov
or
add
imul
xor
cld
rcl
mov
and
push
aas
adc
add
aad
xor
mov
adc
in
mov
lods
xchg
fimull
cld
mov
dec
arpl
and
xchg
xchg
fildll
xor
sahf
mov
mov
push
call
xor
push
mov
ss
mov
xchg
test
in
pop
test
mov
cmp
add
cmp
insb
loopne
pop
lahf
stos
lods
xchg
out
dec
in
divps
fimuls
sbb
cli
push
pop
mov
in
fsubp
add
les
pushf
mov
or
sub
sub
addl
mov
or
mov
scas
push
stos
jne
xchg
enter
add
into
pop
lods
fwait
adcl
fistpll
pop
ss
or
insl
mov
cmp
sbb
popf
jns
aad
sbb
push
nop
or
shl
iret
pop
sub
adc
dec
int
popa
add
stos
daa
cmpsb
scas
sahf
push
out
jb
cmp
sub
test
test
andl
push
add
in
adc
repz
add
push
rolb
fwait
add
aaa
jl
mov
xchg
enter
ficoml
and
xor
sbb
inc
pop
insl
jbe
or
mov
xchg
push
mov
movsb
fdivrp
xor
leave
lcall
inc
xchg
leave
xchg
outsb
xchg
mov
test
mov
adc
movsb
stc
or
stos
fsubrs
adc
jge
in
je
mov
or
cmc
mov
dec
fstps
pop
loop
pop
jge
mov
jbe
in
sahf
fnstsw
fdivs
in
xor
sahf
sbb
adc
sbb
les
enter
adc
nop
xchg
dec
in
adcl
fisubrl
mov
inc
insb
adc
movsb
push
sub
dec
repnz
xchg
ljmp
sbb
jb
cwtl
add
mov
xchg
in
push
addb
adc
dec
dec
imul
dec
dec
loope
loopne
icebp
cld
xor
out
mov
bound
lcall
ret
push
mov
rcl
inc
aas
pop
push
pop
cmp
xchg
push
xor
mov
sub
adc
xchg
jmp
add
std
mov
out
data16
xchg
pop
fstp
xor
mov
mov
dec
inc
pop
lcall
sub
adc
repnz
xchg
sbb
lret
adc
inc
negl
ljmp
and
sbbb
ret
ret
call
orl
inc
ret
dec
fwait
inc
pop
ret
hlt
pop
lret
shrb
mov
inc
push
pop
scas
mov
xchg
dec
sbbb
adc
push
movsb
mov
push
jecxz
shlb
fsubrs
jae
sti
adc
mov
fistps
mov
push
pop
jbe
sbb
out
fdivs
xchg
call
add
xlat
pop
mov
dec
out
push
outsl
mov
cmpsl
sub
fcmovb
scas
add
sbb
lcall
sbb
add
cmp
icebp
cmc
pop
mov
dec
adc
jae
cs
push
add
jno
enter
popa
imul
ror
xor
inc
rol
mov
loop
jns
jp
jecxz
outsb
push
xchg
mov
fidivs
mov
cmp
js
addr16
jns
xchg
jle
or
rcrl
pushf
cmp
daa
ljmp
push
lea
test
xchg
sarb
jp
mov
rol
in
rcl
inc
adc
icebp
cmp
call
pop
dec
mov
adc
jmp
daa
cwtl
clc
mov
jnp
icebp
sbb
fisubrs
or
jns
xchg
lock
add
fdivs
pop
dec
xor
fidivl
sub
sub
out
movsb
mov
mov
push
sub
idiv
or
pushf
push
push
cmp
out
xlat
repnz
nop
inc
mov
nop
daa
in
rorl
mov
gs
filds
xlat
pop
pop
or
iret
push
sbb
rcr
dec
pusha
pop
jmp
xchg
xlat
stos
push
dec
out
outsl
sub
pop
xor
push
cmpl
push
or
xchg
insb
popa
mov
add
mov
dec
lds
aam
shrl
icebp
outsb
sti
xor
xorb
pop
xchg
cs
mov
or
sbb
shll
or
mov
decl
stos
stos
pop
lcall
push
mov
sbb
and
xor
dec
mov
loop
or
sti
inc
cmp
bound
push
mov
addr16
adc
mov
inc
mov
fistps
jl
inc
mov
test
pop
push
les
xor
lcall
xor
or
dec
cld
sub
add
sbb
sahf
test
sti
inc
push
in
inc
lods
shrl
rolb
mov
lea
out
pop
jbe
xor
inc
or
out
xchg
test
imul
mov
xchg
sbb
addb
push
lods
jmp
cli
pop
fdivl
int3
leave
xchg
pop
or
mov
cmpsb
into
cmp
cwtl
add
fisubs
ja
lcall
mov
imul
aad
pop
in
adc
shrl
stos
insb
loope
imul
lea
jge
jns
sub
mov
push
lcall
sub
or
and
out
or
stc
and
nop
xor
loope
inc
xchg
or
mov
out
aas
scas
xchg
in
mov
cmpsl
push
push
pop
and
fwait
cmpsl
push
popf
into
addl
inc
jl
sbb
and
into
mov
mov
xchg
sbb
lds
ds
test
daa
cld
or
movsl
iret
push
mov
cmp
popa
mov
push
fsubr
xor
sbb
jne
fisttpll
scas
xchg
loopne
cmpsl
jecxz
mov
push
loop
or
push
popa
sbb
nop
push
out
stos
rclb
dec
mov
int
ror
xchg
jb
or
mov
mov
dec
fnstenv
adc
iret
sbb
mov
movsb
sub
pop
lock
inc
enter
xchg
dec
dec
inc
aam
jp
stc
imul
cmpl
xorl
sub
andl
ds
pop
and
push
cmp
cmc
test
out
cwtl
pop
stos
fwait
fwait
sub
lods
cmp
scas
hlt
lea
dec
pop
pusha
pop
jae
dec
call
mov
cwtl
fwait
pop
pop
cmpsl
push
mov
xchg
lahf
andl
jg
imull
vsqrtsd
xchg
scas
sbb
test
pop
jmp
jbe
and
sbb
cltd
jge
orb
or
or
or
or
nop
dec
mov
jbe
mov
add
test
jg
test
adc
add
lods
addr16
cmp
cmpsl
fistpl
and
xchg
imul
cld
out
aas
sti
inc
dec
inc
cmpsl
sbb
xchg
push
sub
icebp
les
ret
das
pop
adc
dec
sub
sub
faddl
clc
stos
and
xchg
sub
scas
pop
jno
mov
push
or
sub
or
push
inc
andl
jno
inc
out
pop
dec
les
inc
pop
and
cmpsl
test
aas
clc
out
cmpsb
mov
test
pop
ds
push
scas
stos
ret
scas
sti
pop
sub
lods
pushw
repnz
clc
imul
popa
xlat
pop
mov
sbb
add
push
fdivrp
rorb
int3
shrl
mov
cwtl
sub
into
mov
out
xor
dec
lahf
pop
sub
jns
rorb
fistpll
mov
js
mov
jbe
pop
mov
or
dec
sbb
xor
mul
mov
andb
addr16
test
daa
pop
or
inc
mov
test
in
dec
test
mov
lcall
rcl
xor
aas
xchg
dec
cmc
lods
jno
fs
imul
push
fadd
xchg
out
in
jp
xchg
mov
inc
repz
icebp
dec
push
arpl
dec
test
mov
jno
mov
cwtl
mov
cli
ja
sbb
lods
jae
fnstcw
out
add
push
mov
ds
ljmp
outsl
out
mov
fldcw
int
add
dec
and
push
mov
out
test
pop
imulb
ss
pop
clc
movsl
adc
and
les
movsb
movsl
aam
xchg
cmpsl
inc
outsl
in
push
test
push
xor
pop
cltd
loop
sub
and
mov
test
push
xchg
orl
inc
jge
fidivs
dec
fidivs
data16
sbb
mov
cmp
pop
jns
mov
sub
daa
ss
pop
inc
mov
test
aad
push
lahf
ret
scas
jns
mov
ss
adc
lret
xchg
sub
mov
icebp
jo
pop
inc
nop
ljmp
hlt
insb
push
mov
in
push
shlb
dec
dec
repnz
push
mov
int
xbegin
int3
add
jg
adc
outsb
fildl
repnz
shll
mov
call
test
xchg
imul
enter
mov
add
and
dec
adc
pop
int
es
push
stos
inc
dec
lret
outsb
xchg
shlb
xchg
into
dec
sub
imul
repz
pop
pop
pushf
or
movl
mov
pop
xchg
add
xchg
sbbb
loope
imul
or
add
sbb
pop
inc
xchg
mov
sub
or
in
push
in
jbe
cmc
scas
or
push
xchg
jmp
xorb
scas
fwait
mov
and
cltd
rcrb
mov
adc
add
add
add
add
add
inc
xchg
add
shlb
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lahf
