pop
clc
call
push
push
call
push
push
call
lea
push
lea
push
lea
mov
push
mov
movl
mov
mov
mov
mov
call
push
push
call
push
push
call
andl
add
movl
mov
push
lea
call
mov
mov
call
test
js
mov
push
call
test
je
andl
mov
mov
lea
push
push
pushl
movl
call
pushl
pushl
call
add
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
xor
push
push
mov
mov
mov
mov
movl
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
push
lea
mov
mov
movl
movl
mov
call
push
call
add
push
mov
call
lea
push
call
add
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
xor
mov
call
add
ret
mov
ret
int3
int3
int3
int3
int3
sub
push
push
mov
xor
cmp
push
je
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
mov
je
mov
lea
push
push
mov
call
mov
cmp
jg
cmpl
je
mov
push
lea
call
mov
mov
mov
lea
push
push
push
call
test
js
mov
mov
mov
mov
push
push
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
test
js
cmp
je
mov
mov
lea
push
push
mov
call
cmp
jne
lea
call
lea
call
lea
call
mov
pop
pop
pop
add
ret
push
lea
mov
call
mov
mov
lea
push
push
mov
call
mov
test
js
mov
cmp
je
mov
mov
add
push
mov
push
push
mov
call
lea
call
jmp
push
mov
and
mov
mov
sub
push
mov
test
push
push
movl
jne
push
mov
call
add
push
mov
call
mov
add
lea
push
mov
mov
push
push
push
mov
movl
call
mov
mov
mov
add
test
je
mov
test
je
jmp
lea
mov
test
je
mov
xor
nop
cmpw
je
xor
test
jne
add
add
jmp
cmp
je
mov
test
jne
xor
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
jmp
test
je
mov
mov
mov
mov
cmp
je
movzwl
movzwl
sub
jne
jmp
sub
add
add
test
jne
jmp
mov
mov
push
push
call
add
test
je
mov
not
test
jne
mov
push
push
xor
call
add
push
mov
lea
mov
call
mov
cmp
je
mov
push
mov
lea
mov
call
mov
cmp
je
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
mov
mov
mov
call
cmp
mov
je
mov
mov
push
call
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
call
test
js
cmp
je
mov
mov
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
lea
call
lea
call
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
mov
jmp
mov
call
test
jne
mov
mov
mov
mov
push
push
call
add
add
jmp
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
cmpl
je
call
mov
cmp
jne
mov
test
je
mov
pushl
mov
push
call
ret
push
xor
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
mov
mov
cmpl
je
xor
pop
pop
pop
pop
add
ret
mov
push
call
add
test
je
call
mov
test
mov
je
mov
mov
push
call
test
movl
je
push
call
test
js
push
call
add
test
je
mov
mov
call
mov
lea
call
cmpl
je
call
test
mov
je
mov
mov
mov
push
call
mov
test
je
mov
test
je
push
push
call
add
test
mov
je
mov
push
call
mov
lea
push
lea
push
push
push
push
call
add
test
js
mov
test
je
mov
push
push
call
mov
push
mov
mov
push
push
movl
call
add
test
je
mov
mov
mov
push
push
push
call
test
js
push
call
add
mov
test
je
test
je
mov
mov
lea
call
lea
call
lea
call
jmp
xor
jmp
int3
sub
mov
xor
mov
push
push
mov
push
push
xor
push
lea
lea
push
push
movb
call
push
push
push
call
add
lea
push
movb
call
mov
cmp
lea
je
mov
shr
lea
cmp
jl
mov
cmp
je
mov
and
lea
mov
mov
mov
push
push
call
push
push
call
sub
jns
lea
xor
mov
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
test
jne
mov
test
jne
lea
lea
push
lea
mov
mov
mov
movl
call
call
push
push
push
call
mov
cmp
je
testl
jne
mov
cmp
jne
push
mov
push
add
push
call
add
lea
call
mov
pop
pop
pop
pop
xor
xor
call
add
ret
push
push
mov
call
mov
cmp
je
cmp
je
push
call
add
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
sub
and
mov
and
sub
sub
sar
sar
add
add
mov
shr
shl
add
mov
and
lea
and
mov
shl
sub
push
not
and
call
test
je
mov
add
lea
push
push
mov
call
test
js
mov
test
je
mov
push
lea
push
push
mov
movl
movl
movl
movl
call
add
pop
add
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
push
push
je
test
je
sar
mov
mov
mov
push
push
push
push
push
call
xor
lea
jmp
lea
mov
test
jne
cmp
jl
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
mov
xor
mov
mov
and
or
push
push
jne
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
call
push
lea
call
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
or
movl
jne
movl
mov
mov
mov
mov
push
push
push
push
mov
push
lea
mov
lea
mov
call
testb
jne
mov
mov
mov
call
cmpb
je
mov
push
push
mov
push
push
push
lea
push
lea
push
mov
push
push
mov
mov
call
mov
push
push
push
lea
push
lea
push
push
mov
call
mov
add
testl
jne
cmpl
jne
mov
mov
cmp
mov
mov
mov
mov
mov
mov
jne
cmp
jne
mov
mov
mov
mov
lea
mov
push
lea
mov
mov
push
push
call
mov
mov
mov
mov
mov
cmp
je
mov
mov
xor
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
lea
call
mov
add
mov
add
add
add
mov
lea
sub
mov
movl
jmp
mov
add
lea
push
mov
call
subl
jne
mov
lea
call
test
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmpl
mov
jne
push
mov
call
mov
mov
cmp
jne
andl
xor
pop
pop
pop
mov
pop
ret
mov
and
or
je
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
movl
movl
mov
push
call
jmp
mov
cmp
jne
movl
mov
cmp
jne
xor
push
push
mov
push
mov
push
push
mov
push
mov
push
push
push
push
lea
push
call
jmp
xor
cmp
sete
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
push
je
cmp
je
mov
mov
test
jne
cmp
je
test
jne
cmp
je
cmp
je
cmp
je
xor
mov
pop
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
add
jmp
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
pushl
mov
pushl
add
push
call
movsbl
add
and
ret
mov
test
je
push
mov
push
lea
movsl
movsl
movsl
movsl
pop
pop
xor
inc
ret
int3
push
mov
mov
test
push
jne
mov
test
je
mov
test
je
push
mov
test
jne
mov
mov
mov
call
lea
mov
mov
test
jne
test
movl
mov
jne
mov
mov
pop
pop
mov
xor
pop
ret
mov
pop
mov
xor
pop
ret
call
lea
call
mov
test
je
mov
pop
pop
mov
xor
pop
ret
push
mov
sub
andl
push
push
push
push
mov
push
lea
push
mov
call
test
jne
lea
call
mov
jmp
call
test
jne
push
call
test
pop
je
andl
andl
mov
push
push
mov
push
mov
call
test
jne
jmp
mov
lea
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
xor
mov
and
inc
shl
shr
lea
or
cmpl
je
lea
call
xor
inc
pop
pop
pop
leave
ret
int3
int3
int3
sub
mov
xor
mov
mov
push
push
push
lea
push
push
lea
push
push
call
mov
add
cmp
je
mov
mov
mov
lea
lea
cmp
jae
lea
cmp
ja
cmp
jb
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
and
mov
movb
mov
test
jbe
mov
push
lea
push
add
push
call
add
pop
pop
pop
mov
xor
call
add
ret
cmpl
jg
mov
sub
jmp
test
jne
push
push
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
movl
movl
movl
mov
test
movl
je
andl
andl
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
push
call
push
mov
call
add
lea
push
mov
mov
mov
lea
push
push
mov
movl
call
mov
mov
mov
movl
cmpl
je
mov
test
jne
test
jne
pop
pop
xor
pop
add
ret
mov
mov
cmpl
je
mov
lea
push
call
xor
ret
mov
pushl
mov
push
call
decl
push
je
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
mov
xor
add
cmp
je
cmp
mov
mov
movl
mov
mov
mov
mov
mov
jne
mov
mov
push
call
mov
call
mov
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
cmp
push
jne
test
je
mov
mov
lea
mov
cmp
jne
sub
add
add
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
xor
cmp
push
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
lea
mov
push
lea
lea
movl
mov
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
cmp
mov
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
push
lea
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
js
mov
cmp
lea
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
push
mov
call
mov
test
js
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
mov
lea
js
mov
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
pop
pop
add
ret
push
mov
push
push
mov
call
test
je
mov
mov
imul
add
push
call
mov
test
pop
je
push
pushl
push
call
mov
mov
xor
add
and
xor
mov
xor
inc
pop
pop
pop
ret
push
push
mov
lea
push
mov
call
test
je
pop
pop
ret
andl
push
call
pop
xor
jmp
push
mov
push
push
andl
push
push
push
lea
mov
call
mov
lea
push
push
call
mov
test
js
andl
push
pushl
mov
mov
lea
call
cmpl
jne
mov
mov
mov
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
pushl
add
mov
push
call
ret
mov
pushl
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
xor
push
lea
mov
call
mov
cmp
je
mov
mov
mov
push
call
test
js
mov
mov
mov
push
mov
push
push
mov
call
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jae
push
push
lea
mov
mov
call
mov
cmpw
je
xor
pop
pop
pop
add
ret
push
push
call
add
pop
xor
pop
add
ret
push
mov
and
mov
sub
push
push
mov
andl
andl
push
mov
movl
call
test
jne
pushl
mov
call
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
movl
movl
cmpl
push
je
lea
push
call
add
push
push
lea
movl
movl
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
mov
je
testl
jne
mov
test
jne
testb
pop
pop
je
push
call
add
mov
pop
mov
pop
xor
call
add
ret
mov
call
test
je
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
cmpl
jne
mov
push
push
mov
mov
push
mov
mov
call
mov
mov
mov
push
mov
call
cmp
jne
mov
add
cmp
jne
mov
mov
mov
add
cmp
ja
pop
pop
pop
pop
ret
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
push
mov
mov
mov
mov
push
lea
jne
mov
mov
mov
push
push
push
push
push
push
call
cmp
pop
pop
jne
mov
mov
ret
cmp
je
lea
cmp
ja
movzbl
jmp
movl
jmp
add
mov
mov
ret
push
movsb
or
pop
movsb
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
test
je
mov
mov
cmp
push
jne
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
sub
test
push
push
push
je
lea
mov
push
call
mov
add
test
jne
test
mov
jne
mov
cmp
jb
mov
push
push
push
call
add
cmp
je
mov
push
push
call
mov
add
cmpb
je
cmpb
je
cmpb
je
cmpb
je
cmpb
je
mov
cmp
je
push
call
add
xor
pop
pop
pop
mov
pop
ret
mov
cmpl
je
push
push
lea
push
mov
call
mov
test
je
mov
push
call
mov
lea
mov
movsl
movsl
movsl
movsl
pop
pop
movw
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
push
mov
mov
push
xor
mov
push
mov
mov
mov
call
mov
add
lea
lea
push
mov
mov
mov
push
mov
movl
movl
movb
call
mov
test
js
push
push
lea
push
lea
mov
call
mov
mov
mov
lea
lea
push
movl
mov
mov
mov
call
test
je
mov
mov
mov
push
call
movl
cmpl
mov
mov
movl
je
mov
test
movl
je
mov
add
push
call
add
test
jne
push
call
add
mov
push
call
add
lea
call
mov
pop
pop
mov
pop
pop
xor
call
add
ret
push
call
add
test
je
mov
call
test
je
mov
mov
mov
push
call
mov
mov
push
push
mov
call
mov
test
js
mov
lea
push
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
call
test
jne
lea
cmpl
je
mov
movzbl
and
cmp
jne
cmpl
jne
test
jne
mov
mov
shr
cmp
jne
mov
pop
pop
ret
sub
cmp
ja
movzbl
jmp
cmpl
je
lea
jmp
xor
pop
pop
ret
cmc
cmpsl
or
inc
test
adc
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
sub
cmpb
je
cmpb
je
push
mov
push
xor
cmp
push
mov
je
push
mov
cmp
je
mov
mov
mov
lea
push
push
push
call
mov
lea
push
mov
push
mov
mov
mov
push
push
call
test
mov
js
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
lea
call
testl
jne
mov
mov
mov
push
push
mov
call
test
js
mov
mov
mov
push
push
push
push
mov
call
test
mov
js
cmp
mov
mov
mov
je
mov
cmp
je
mov
push
call
add
lea
call
mov
push
push
lea
call
test
je
mov
mov
add
test
mov
mov
movl
movl
mov
je
mov
mov
mov
mov
mov
push
lea
push
mov
push
mov
push
push
push
mov
push
push
push
call
mov
add
test
mov
jne
test
jne
addl
test
je
lea
call
mov
push
call
add
xor
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
je
cmp
je
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
mov
mov
push
push
call
test
js
mov
mov
push
mov
call
mov
cmp
mov
jne
lea
call
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
sub
lea
cmp
movl
movl
movl
je
mov
test
mov
je
testb
mov
je
mov
mov
sub
push
mov
movl
call
add
mov
add
push
call
add
test
jne
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
push
mov
push
push
xor
mov
mov
mov
mov
cmp
jne
mov
mov
lea
mov
mov
mov
cmpl
jne
push
lea
mov
mov
call
push
lea
call
mov
mov
sub
sar
push
lea
push
mov
mov
lea
push
lea
push
mov
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
push
call
add
cmp
je
mov
mov
mov
xor
cmp
sete
movl
mov
mov
add
test
mov
jne
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
cmp
je
xor
mov
cmp
mov
jne
lea
call
lea
call
cmp
je
push
call
add
cmp
je
mov
movl
movl
mov
mov
mov
cmp
mov
je
mov
push
lea
mov
push
mov
call
add
test
js
mov
test
mov
mov
jne
xor
pop
pop
pop
pop
add
ret
sub
je
sub
je
sub
je
mov
jmp
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jle
mov
mov
mov
cmpb
je
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
xor
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
push
mov
mov
call
mov
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
test
js
mov
mov
push
push
mov
push
call
mov
lea
lea
push
mov
mov
mov
mov
push
mov
mov
movl
mov
call
push
lea
call
test
je
cmp
je
mov
push
push
push
or
mov
call
mov
mov
mov
push
push
push
call
mov
lea
lea
push
mov
mov
mov
push
mov
mov
movl
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
push
push
push
or
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
lea
call
cmp
jne
jmp
mov
push
mov
test
jne
xor
test
jne
pop
ret
mov
cmpb
je
mov
mov
mov
xor
ret
test
je
push
push
push
mov
call
mov
push
push
call
lea
push
mov
call
mov
push
push
call
mov
lea
push
push
call
mov
add
push
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpl
jne
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
mov
call
cmp
jg
xor
movzbl
mov
shr
and
cmp
jne
xor
mov
cmp
jg
xor
shr
and
cmp
jne
xor
test
jne
test
jne
pop
pop
pop
mov
pop
ret
push
call
add
test
je
movl
mov
movl
mov
mov
push
mov
call
push
call
test
js
mov
call
test
je
mov
mov
push
call
pop
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
call
mov
xor
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
lea
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
lea
push
call
mov
cmp
je
cmp
je
testb
jne
testb
jne
mov
lea
push
push
mov
call
mov
xor
cmpb
mov
je
mov
mov
mov
mov
mov
mov
lea
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
cmpb
je
mov
mov
mov
mov
mov
lea
mov
call
lea
push
lea
push
push
mov
call
mov
cmp
jg
testb
jne
mov
mov
xor
cmp
mov
mov
jne
mov
xor
cmp
mov
jne
testb
jne
testb
jne
test
jne
testb
jne
mov
lea
push
lea
push
push
mov
call
testb
je
mov
and
xor
or
jne
orb
mov
call
pop
pop
xor
pop
mov
pop
ret
testb
je
jmp
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
sub
mov
mov
sub
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
mov
mov
push
lea
push
call
mov
cmp
jg
mov
cmp
jg
movl
mov
lea
call
test
je
mov
mov
mov
push
lea
push
push
call
mov
push
call
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
mov
jl
cmp
jl
mov
mov
mov
mov
mov
mov
mov
xor
lea
mov
call
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
lea
call
test
je
mov
mov
pop
pop
pop
add
ret
mov
mov
lea
push
mov
lea
mov
mov
push
push
lea
call
mov
lea
push
lea
push
push
call
mov
pop
pop
mov
pop
add
ret
mov
jmp
push
mov
push
push
andl
test
push
je
mov
lea
push
push
push
call
mov
push
mov
and
jne
pushl
lea
call
test
pop
jne
pushl
mov
pushl
mov
call
pop
pop
mov
lea
call
mov
pop
leave
ret
movswl
cmp
jg
je
dec
jne
xor
ret
dec
je
dec
dec
jne
mov
ret
sub
je
sub
je
sub
jne
mov
ret
mov
ret
sub
jne
mov
ret
mov
ret
mov
ret
mov
ret
or
ret
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
test
js
mov
cmp
mov
mov
mov
mov
mov
mov
movl
je
mov
lea
push
push
push
mov
call
mov
cmp
jne
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
cmpl
jne
jmp
mov
test
je
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
test
je
sar
add
lea
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
push
movb
call
test
je
movl
mov
mov
mov
lea
cmp
je
movzwl
movzwl
add
sub
sar
je
cmpw
je
sub
add
test
jne
cmp
jne
push
lea
push
call
mov
mov
cmpw
je
xor
pop
pop
pop
ret
pop
pop
mov
pop
ret
mov
sub
push
call
test
je
mov
pop
pop
xor
pop
ret
push
mov
mov
mov
mov
push
push
call
andl
push
mov
lea
call
mov
test
je
pushl
mov
pushl
push
call
mov
lea
call
mov
pop
pop
ret
int3
int3
push
mov
push
push
lea
mov
nop
mov
test
movl
je
mov
mov
push
call
add
sub
jne
lea
xor
call
lea
xor
mov
movb
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
jle
cmpl
jle
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
jne
mov
pop
ret
xor
pop
ret
cmpl
jle
cmpl
jg
mov
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
xor
call
mov
test
movl
pop
jne
ret
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
mov
mov
mov
lea
call
test
je
mov
xor
cmp
mov
mov
mov
je
push
call
add
movl
lea
push
lea
mov
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
lea
mov
movl
movl
movb
call
mov
mov
push
push
mov
or
call
add
cmp
lea
je
add
push
mov
call
test
je
mov
mov
mov
push
push
lea
push
or
call
mov
lea
mov
mov
lea
movl
movl
movl
movb
mov
push
push
mov
call
mov
push
push
push
lea
call
mov
mov
push
push
mov
push
call
lea
push
mov
call
cmpl
jne
push
call
add
test
je
mov
test
mov
movl
mov
je
mov
mov
push
call
lea
push
lea
movl
movl
movl
call
movl
movb
movb
push
lea
lea
call
test
je
mov
test
mov
jne
mov
test
je
mov
add
push
call
add
test
je
mov
test
jne
test
jne
mov
mov
lea
cmp
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
cmp
ja
mov
test
je
xor
mov
mov
mov
mov
mov
push
mov
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
push
lea
call
cmp
je
mov
mov
cmp
je
cmp
je
push
call
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
test
jne
jmp
push
call
add
jmp
lea
push
push
call
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmp
push
mov
push
mov
je
mov
mov
lea
cmp
jb
mov
cmp
jb
mov
cmp
lea
jne
mov
test
je
cmpl
jg
mov
sub
cmp
jbe
and
mov
movb
mov
test
jbe
mov
add
push
push
push
call
add
pop
pop
pop
mov
xor
call
add
ret
test
je
mov
jmp
push
mov
push
push
push
mov
call
test
jne
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
test
jbe
push
push
push
mov
xor
mov
lea
cmpl
mov
lea
jne
mov
mov
push
push
push
or
call
mov
push
push
push
call
mov
mov
push
push
mov
push
call
mov
push
push
push
call
add
subl
jne
pop
pop
pop
pop
ret
mov
lea
xor
inc
lock
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
test
mov
push
mov
mov
mov
je
test
jne
mov
mov
and
push
jne
test
jne
test
je
mov
lea
push
push
push
mov
call
test
je
mov
movw
testb
movb
movl
pop
jne
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpb
je
andl
xor
pop
ret
orl
xor
pop
ret
int3
int3
int3
int3
int3
mov
sub
push
push
push
call
test
je
cmpl
mov
mov
movl
je
mov
mov
test
jne
mov
test
jne
mov
mov
lea
push
push
call
movzwl
cmp
jne
mov
mov
mov
push
push
mov
push
push
push
mov
call
lea
call
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
cmpl
push
mov
jne
test
jl
test
je
mov
lea
push
xor
mov
mov
mov
mov
movl
movl
mov
call
cmp
je
mov
cmp
mov
jne
mov
shr
sub
cmp
jle
testb
mov
push
mov
jne
add
push
lea
je
mov
mov
mov
call
test
je
mov
lea
push
lea
call
add
mov
test
mov
mov
jle
push
push
mov
push
call
add
cmp
jne
testl
jne
cmp
jge
test
jne
push
push
lea
xor
call
mov
mov
test
movl
pop
jne
test
jne
mov
pop
mov
pop
pop
xor
call
add
ret
int3
int3
push
xor
cmp
je
push
mov
push
mov
mov
cmp
push
lea
jne
cmp
je
mov
mov
mov
cmp
jne
sub
add
add
cmp
jne
mov
xor
cmp
mov
movl
mov
mov
mov
mov
mov
mov
jne
mov
lea
call
push
push
call
mov
pop
mov
mov
pop
pop
xor
pop
ret
push
mov
push
push
xor
cmp
je
pushl
mov
lea
mov
call
cmp
je
pushl
mov
pushl
mov
pushl
push
call
mov
lea
call
mov
pop
leave
ret
mov
test
je
pushl
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
mov
push
lea
push
mov
mov
call
cmpl
je
mov
sub
mov
mov
jne
push
call
xor
test
jne
testb
jne
testb
jne
mov
pop
pop
pop
pop
ret
mov
mov
push
call
test
js
pop
pop
pop
pop
ret
mov
mov
push
call
mov
jmp
push
call
test
je
mov
jmp
push
mov
mov
call
test
je
push
lea
mov
cmp
je
mov
call
test
jne
pop
pop
ret
xor
pop
ret
xor
inc
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
push
push
and
or
push
push
jne
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
mov
test
jne
mov
test
je
mov
mov
lea
call
test
jne
lea
call
test
jne
mov
call
mov
mov
mov
test
je
mov
test
jne
mov
push
push
call
mov
mov
call
test
jne
lea
cmpl
jne
mov
call
test
jne
add
cmpl
jne
movzbl
lea
push
lea
call
call
test
je
movzbl
add
push
lea
call
call
test
je
mov
and
jne
xor
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
call
test
jne
pop
xor
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
mov
push
push
push
call
mov
add
cmp
jne
mov
mov
call
test
jne
lea
mov
call
test
jne
lea
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
testb
jne
push
mov
mov
sub
lea
lea
sub
mov
mov
cmp
jne
mov
cmp
jne
add
lea
add
cmp
jle
mov
mov
call
test
je
cmpl
jne
mov
cmpl
jne
mov
cmp
jne
mov
test
jne
mov
test
jne
mov
test
jne
mov
pop
pop
pop
pop
pop
ret
mov
xor
mov
sub
mov
mov
cmp
je
test
je
test
je
mov
cmp
jne
mov
test
mov
jne
test
jne
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
cmpl
je
lea
jmp
cmpl
je
lea
jmp
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
lea
call
test
jne
pop
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
jne
ret
push
mov
lea
push
push
mov
call
test
js
mov
test
je
test
jne
mov
pop
ret
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fsts
push
fstps
push
xor
mov
mov
mov
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
test
je
mov
test
je
nop
mov
test
jne
mov
cmp
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
mov
test
je
mov
test
jne
mov
mov
test
je
mov
test
je
lea
mov
test
jne
mov
test
je
mov
mov
movzbl
lea
push
lea
call
mov
call
cmp
jne
mov
call
add
movzbl
add
push
lea
call
mov
call
cmp
jne
mov
call
add
mov
mov
call
mov
call
test
jne
lea
mov
add
mov
call
test
jne
lea
mov
add
mov
call
push
mov
push
push
call
test
jne
mov
pop
pop
pop
mov
pop
ret
mov
test
je
mov
test
jne
mov
call
test
jne
jmp
mov
cmp
jne
mov
call
cmp
jne
jmp
mov
cmp
je
jmp
mov
mov
mov
call
mov
lea
push
movzbl
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
imul
mov
call
mov
mov
lea
push
movzbl
push
mov
push
mov
push
mov
call
test
je
mov
fldz
mov
mov
add
imul
fstps
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
mov
test
jg
ret
push
push
mov
push
xor
mov
test
jl
cmp
jge
mov
lea
test
jl
cltd
idivl
mov
mov
test
je
mov
call
test
jne
mov
mov
push
push
push
call
mov
add
cmp
jl
pop
pop
pop
ret
mov
cmp
mov
je
sub
neg
sbb
not
and
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
push
xor
push
mov
mov
call
test
je
mov
mov
add
cmp
je
mov
and
cmp
jne
cmp
je
lea
mov
mov
mov
movl
movl
mov
mov
mov
sub
je
sub
je
push
mov
call
cmp
je
push
lea
mov
call
test
je
mov
lea
push
push
call
add
or
lea
call
mov
test
je
mov
mov
lea
mov
or
mov
lea
not
add
and
mov
test
jne
mov
lea
cmp
jae
movsbw
movzwl
mov
movzwl
mov
and
test
je
add
cmp
jb
mov
push
push
push
lea
push
mov
call
mov
mov
push
call
add
lea
push
push
mov
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
xor
call
add
ret
mov
mov
cmp
je
movsbw
add
movzwl
test
jne
jmp
sub
sar
cmp
je
movw
add
sub
lea
jne
jmp
mov
mov
lea
push
mov
push
push
mov
call
jmp
mov
add
push
call
add
test
jne
jmp
mov
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
jne
add
xor
call
pop
xor
pop
ret
mov
shr
je
mov
test
je
mov
and
lea
mov
mov
test
je
test
jne
sub
jne
add
xor
call
pop
xor
pop
ret
add
mov
call
pop
mov
pop
ret
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
movl
movl
movl
je
cmp
jne
mov
cmp
je
decl
je
cmp
push
jne
call
lea
call
mov
cmp
mov
je
mov
push
lea
push
push
call
lea
call
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
mov
cmp
pop
jne
xor
cmp
jne
lea
mov
mov
call
lea
mov
cmp
jne
xor
cmp
jne
lea
mov
mov
call
lea
mov
cmp
jne
xor
cmp
jne
mov
mov
mov
cmp
movl
jne
pop
pop
leave
ret
mov
jmp
call
mov
cmp
je
mov
push
push
call
mov
mov
push
call
mov
mov
cmp
je
jmp
int3
int3
mov
mov
test
mov
je
push
lea
push
call
add
test
jne
push
call
add
pop
ret
test
je
jmp
mov
andl
mov
andl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
cmp
push
mov
mov
je
push
call
add
movl
lea
xor
call
mov
cmp
mov
je
mov
mov
test
je
push
lea
call
push
call
add
test
je
mov
movl
movl
xor
lea
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
xor
test
js
mov
mov
mov
testl
jne
cmpl
jne
mov
lea
call
mov
insb
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
sbb
push
mov
lea
add
mov
call
mov
cmp
jne
mov
mov
mov
push
call
mov
cmp
mov
jne
mov
mov
call
push
mov
call
test
je
mov
mov
mov
mov
push
lea
lea
movl
mov
push
call
mov
add
mov
fldl
fwait
rolb
in
outsl
les
xchg
std
mov
out
lods
enter
add
int3
int3
sub
push
mov
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
popl
fstps
test
mov
mov
add
outsl
xchg
add
add
add
stc
mov
mov
add
add
add
shrl
rcrb
loopne
popl
push
push
push
push
push
push
call
int3
leave
add
in
hlt
mov
add
out
add
jae
flds
loopne
add
int
insb
fcompl
mov
add
add
in
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
add
lahf
jns
shlb
out
add
add
cltd
roll
std
jb
lock
addr16
mov
int3
mov
movsb
add
out
add
push
sub
pop
push
push
push
call
lods
out
call
insb
mov
push
add
push
jae
in
int
push
mov
rolb
add
nop
add
add
in
add
scas
out
movsl
insb
add
lds
pop
add
push
push
call
mov
loopne
add
je
add
add
loop
pop
arpl
test
out
add
add
xchg
pop
faddl
flds
pop
add
mov
add
add
aad
add
add
lret
fsubrs
mov
push
mov
push
in
lahf
mov
out
add
addb
add
lcall
ret
add
add
lea
push
lea
push
call
pop
lret
add
pusha
push
lods
add
add
add
add
add
mov
add
mov
sub
pop
push
call
push
push
push
push
push
push
call
add
add
sbb
mov
testl
loope
add
add
popa
ror
test
add
lcall
add
imul
push
in
add
push
add
add
popa
add
add
xchg
mov
add
add
mov
lcall
aas
add
add
push
push
push
push
push
call
shrl
lret
cltd
xchg
add
in
mov
stos
pop
in
in
lods
fwait
add
add
add
pushf
sub
pop
mov
mov
push
push
lea
push
call
mov
jmp
add
mov
fiaddl
stos
add
cltd
cltd
add
push
add
cmpsl
add
add
pop
add
push
lea
push
push
push
lea
push
call
pop
xchg
fdivl
add
fldenv
xchg
xorb
popf
clc
lahf
cld
enter
add
mov
add
in
add
add
mov
add
push
jns
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
ja
xchg
jo
cltd
add
add
popf
push
pop
in
add
data16
mov
mov
add
add
orl
add
lret
xchg
imul
mov
xchg
add
add
xchg
add
call
mov
pop
push
add
add
sub
pop
add
mov
push
push
push
push
push
push
push
push
call
fcomi
add
ljmp
cli
add
je
je
xchg
xchg
mov
add
add
add
sbb
push
lea
push
call
shl
pop
jle
roll
push
cmc
add
mov
add
mov
fwait
mov
jne
mov
jne
add
add
push
add
in
popa
addl
test
add
mov
aam
pop
add
add
cli
cwtl
add
lea
add
jnp
in
clc
lcall
les
add
push
push
shl
shr
push
xor
add
lea
sub
sub
inc
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
std
icebp
add
stos
add
add
mov
ret
fiaddl
loopne
jo
add
mov
fiaddl
add
add
jmp
bound
jl
negb
mov
rolb
sub
pop
pushl
call
push
lea
push
call
fucomi
loop
add
lcall
add
add
add
ret
mov
add
fwait
jl
faddl
stos
out
add
stos
push
jmp
add
xlat
add
add
add
int3
add
jle
rol
push
addb
pop
mov
push
push
push
push
push
push
push
push
call
add
mov
push
lea
push
add
enter
add
jnp
fidivrl
repnz
nop
add
cli
add
add
add
in
add
add
int3
mov
loopne
movl
lea
push
push
call
xchg
fidivrs
add
add
bound
add
add
rolb
pop
lds
scas
rolb
mov
push
lds
mov
lcall
pushl
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
xchg
pop
ljmp
lods
add
add
add
add
add
lret
int3
push
add
add
add
divl
add
pop
out
push
fiaddl
insb
mov
add
add
hlt
hlt
add
fwait
hlt
movsb
incb
sub
pop
pushl
push
push
lea
push
push
push
call
add
mov
fbstp
add
mov
lcall
add
add
add
fldl
scas
jno
mov
fcom
push
add
jbe
add
jo
addb
enter
sub
pop
call
pushl
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
repnz
mov
roll
xchg
push
add
push
loopne
add
add
cltd
mov
mov
insb
add
mov
add
rcrl
pop
add
fldcw
xchg
mov
mov
in
fcomps
jne
push
push
call
add
add
jbe
mov
add
ja
ja
lea
add
add
in
addr16
cmpsb
add
lcall
lods
icebp
add
cmc
stos
add
add
add
popa
add
ret
lahf
popf
sub
pop
call
push
push
shr
lea
push
xor
add
ror
sub
dec
sub
xor
inc
pop
shl
pop
push
lea
push
lea
push
push
push
push
push
push
push
push
call
xchg
arpl
add
ficoms
mov
popa
mov
jb
ret
lret
mov
add
add
hlt
leave
sub
pop
pushl
call
push
push
push
push
push
push
lea
push
push
call
jo
negb
out
out
add
add
mov
mov
add
mov
add
movsl
je
add
pop
add
mov
add
jae
rol
xchg
fisubs
add
leave
add
mul
clc
movsl
add
push
shll
nop
aam
pop
out
add
ret
in
loopne
lcall
inc
push
push
shl
shr
inc
add
push
or
inc
add
rol
sub
sub
xor
pop
sub
sub
pop
push
lea
push
lea
push
lea
push
lea
push
call
loop
add
add
insb
data16
add
add
add
mov
push
add
lret
mov
add
loop
add
add
add
push
jbe
add
push
add
in
xchg
push
movsb
add
add
pop
xchg
mov
cmpsl
movb
in
in
pop
push
push
push
call
cmpsl
add
add
mov
jle
add
std
bound
add
rorb
cmpb
xlat
add
add
jp
loope
cwtl
in
add
add
mov
mov
loop
dec
add
rol
iret
sub
pop
push
push
lea
push
push
call
mov
add
pop
pop
jo
pop
mov
add
cli
int
add
jmp
mov
cwtl
cmpb
call
push
lea
push
call
scas
add
divl
add
into
add
add
fimuls
fcmovbe
add
add
add
add
add
loope
add
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
call
iret
aad
data16
testl
lahf
add
mov
test
add
add
in
mov
push
cld
add
int3
in
pusha
stc
out
mov
lret
fwait
mov
xlat
hlt
mov
add
sti
add
add
lahf
add
imul
push
add
into
mov
stc
add
in
loopne
lcall
push
push
push
push
push
push
push
call
push
mov
jo
jb
add
loopne
roll
add
scas
pop
mov
add
push
add
rolb
pop
jne
fildl
add
add
faddl
mov
out
pop
cmpsl
data16
add
ljmp
add
mov
push
nop
sahf
add
jo
sub
pop
mov
push
push
push
call
add
add
jecxz
add
out
out
add
andl
aam
add
add
jne
jle
cmpsl
add
test
imul
jne
mov
pop
add
push
push
lea
push
push
push
lea
push
call
int3
jno
adc
xchg
add
add
mov
add
add
add
add
fstpl
lcall
ret
add
add
push
lea
push
lea
push
call
add
add
lds
popl
add
add
pop
loopne
nop
stc
movsb
add
enter
pop
icebp
shl
pop
xchg
lahf
in
hlt
fnstcw
add
pop
add
push
push
call
xchg
fldl
lods
add
add
mov
add
pop
call
push
add
insb
add
mov
mov
add
mov
add
fistps
nop
mov
add
mov
add
in
jne
add
push
add
sub
pop
mov
xor
push
push
push
push
push
push
push
lea
push
push
push
call
pop
imul
test
xchg
push
out
imul
mov
cltd
loope
add
nop
ficoml
add
jge
outsl
add
rolb
mov
add
cmpsl
add
pusha
lock
flds
jae
add
push
sub
pop
add
push
push
push
lea
push
push
push
call
mov
mov
add
mov
incb
stc
out
sarb
add
add
pop
add
add
add
repnz
fldl
add
lods
outsl
fldl
xchg
shlb
add
outsl
add
add
jmp
add
mov
mov
mov
in
call
push
mov
xor
push
lea
push
push
push
call
mov
lahf
xchg
cmpsb
les
test
add
movl
push
je
pop
in
mov
jp
xchg
xchg
lret
add
add
mov
into
lahf
aad
mov
or
clc
add
call
cmc
jbe
pop
add
add
add
mov
add
pop
sub
pop
add
push
lea
push
push
call
jge
add
add
popa
add
cld
add
scas
loop
add
std
xlat
add
add
mov
xchg
mov
je
cmpsb
add
sub
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
sti
test
mov
fisubl
filds
add
add
cld
loope
add
add
mov
mov
js
add
mov
add
add
jp
jle
in
fcomps
dec
add
icebp
xor
adc
push
lea
push
push
push
lea
push
push
call
pop
mov
mov
mulb
add
enter
push
shlb
add
add
add
test
mov
xchg
ljmp
mov
mov
iret
stos
push
jge
add
out
push
lret
scas
cltd
popf
add
in
loopne
lcall
mov
xor
push
push
push
push
push
call
jnp
pop
lea
jno
add
add
xchg
lds
add
enter
add
jecxz
add
add
lcall
enter
popa
push
push
push
push
lea
push
call
lret
fimuls
int
add
jl
cmc
mov
mov
mov
pop
add
pop
add
add
add
add
ja
mov
rolb
test
add
in
in
rep
push
push
lea
push
push
call
add
mov
call
lods
add
add
add
scas
lods
rcrl
add
lock
pop
mov
push
lea
push
call
fs
add
add
in
add
pop
add
add
add
into
xchg
add
pop
out
mov
scas
add
arpl
cmpsb
mov
add
xchg
xchg
lcall
iret
add
xchg
bound
clc
sub
pop
add
push
push
call
cmpl
add
addl
push
add
roll
in
push
icebp
add
aad
mov
push
out
add
jle
lahf
mov
aad
add
add
popf
bound
in
clc
lcall
ret
add
add
add
push
lea
push
push
push
push
push
call
add
add
int
xchg
push
add
xchg
std
test
popf
add
mov
ret
jno
add
lahf
pop
add
out
addb
jbe
cltd
enter
mov
add
gs
add
pop
push
xchg
int3
sub
pop
mov
xor
push
push
push
push
lea
push
call
add
add
add
add
lahf
shl
xchg
add
add
scas
jnp
clc
add
add
imul
test
loop
add
add
push
mov
add
add
sti
xchg
xchg
lds
add
pop
add
pop
arpl
lret
add
jne
pop
fwait
sub
pop
mov
push
push
push
push
lea
push
call
add
add
stos
add
jns
jecxz
cwtl
jmp
add
pop
popa
bound
add
add
out
mov
roll
xchg
loop
movsw
jmp
xchg
jnp
in
in
add
mov
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
pop
jne
add
movsb
sti
add
add
test
roll
popa
in
insb
add
lcall
add
fnsave
scas
add
incb
mov
add
lcall
les
push
lea
push
lea
push
push
lea
push
push
call
add
in
jmp
add
add
add
movsb
add
jle
xchg
pop
add
stc
adcl
mov
push
lcall
mov
xchg
sti
mov
lock
aam
add
in
in
mov
xor
push
push
push
push
push
lea
push
push
push
push
call
rolb
pusha
add
lret
add
int
push
add
mov
gs
add
add
mov
clc
outsl
add
add
add
out
add
arpl
in
add
lock
add
lea
ret
btrl
add
pop
lahf
cmpsl
int3
add
test
out
fsubrp
mov
add
add
stos
add
popa
mov
add
mov
lods
test
add
pop
add
sub
pop
add
mov
push
push
inc
push
xor
add
shr
sub
ror
pop
sub
pop
push
lea
push
lea
push
push
lea
push
push
call
je
add
jp
add
popl
add
gs
enter
add
stos
pop
add
mov
mov
pop
mov
add
mov
xchg
pushf
add
rcr
mov
aam
rolb
add
fwait
movsl
xchg
add
jne
push
push
push
lea
push
push
push
call
mov
add
enter
xchg
repnz
push
ljmp
add
cli
push
add
jp
add
ret
xchg
roll
add
fsubrl
add
addb
rcl
add
jl
fstl
sub
pop
call
push
push
lea
push
call
into
jp
loope
call
add
jo
add
js
fiadds
bound
scas
add
std
xchg
neg
add
loop
jae
add
mov
pop
in
imul
add
fst
mov
add
pop
add
mov
jge
out
mov
sub
pop
push
push
push
sub
not
push
push
pop
add
sub
lea
sub
inc
sub
pop
inc
rol
pop
push
push
push
call
call
in
push
je
add
push
loopne
cld
mov
add
out
fiaddl
in
lcall
std
push
add
add
add
jb
mov
lea
add
andb
popf
sub
lcall
push
push
push
lea
push
push
push
call
add
push
pop
add
cld
mov
shlb
add
cli
mov
xchg
ljmp
mov
call
push
push
push
push
call
add
add
int3
add
lock
push
add
jb
add
add
cli
lods
pop
add
cld
jnp
mov
call
push
push
push
push
push
push
call
add
pop
stc
loopne
add
add
add
test
add
jae
lock
add
mov
add
stos
sti
loop
out
sub
pop
mov
push
push
lea
push
push
push
push
push
call
push
add
cwtl
bound
add
add
mov
mov
add
pop
push
xchg
add
add
add
lahf
pop
lahf
pop
roll
add
jne
pop
fsubrl
add
add
aad
into
mov
scas
enter
loopne
add
sub
pop
push
push
rol
pop
push
push
push
call
hlt
add
jbe
add
sti
add
jmp
lods
add
fs
add
push
mov
mov
add
push
roll
add
add
bound
jnp
cmpsb
pop
push
add
pop
fiaddl
loopne
jo
popa
add
add
mov
jmp
std
push
add
addl
testl
clc
lcall
pop
hlt
push
lea
add
pop
add
push
push
push
push
lea
push
push
push
push
push
call
cmpsb
in
out
add
cmc
push
jne
cltd
addb
add
imul
stos
push
add
add
iret
add
mov
mov
lcall
ret
add
add
add
push
push
lea
push
lea
push
lea
push
lea
push
push
call
jmp
ljmp
pop
add
add
jo
jbe
push
test
jp
add
xor
cmpsl
iret
mov
add
add
add
add
pop
jo
add
jmp
in
in
lcall
jae
push
push
push
call
add
xchg
add
lret
mul
mov
leave
std
add
out
add
ljmp
jno
fldl
add
add
add
add
les
push
fs
jecxz
xchg
mov
pop
xor
push
push
push
push
push
push
push
call
outsl
jnp
stc
add
push
icebp
add
xchg
add
mov
mov
cld
ja
add
add
pushf
add
mov
in
push
filds
xchg
add
mov
mov
jb
shlb
mov
stc
add
xchg
xchg
mov
jns
test
imul
add
add
pop
pusha
sub
pop
add
push
push
call
add
add
add
add
jecxz
test
imul
in
arpl
add
mov
mov
add
test
cld
add
test
add
add
mov
cwtl
add
leave
push
enter
addr16
add
mov
add
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jle
add
add
lock
add
add
jl
add
add
outsl
jmp
add
rolb
enter
xchg
jo
mov
add
int
sub
pop
push
mov
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
add
movb
mov
in
popf
scas
add
push
add
mov
scas
cmpsb
mov
mov
add
add
lret
add
add
icebp
insb
cmpsb
add
pop
aam
add
add
add
mov
shl
sub
pop
xor
push
push
call
movsl
leave
add
sahf
mov
jp
add
add
add
add
push
popf
ljmp
les
rol
pop
add
push
inc
sub
pop
pop
push
dec
inc
pop
mov
xor
push
shr
lea
pop
rep
push
push
lea
push
lea
push
call
popa
lods
push
mov
add
scas
add
add
mov
testb
std
stc
add
push
out
mov
lahf
add
imul
mov
add
clc
test
xchg
add
jecxz
add
hlt
xchg
cwtl
in
add
add
add
add
add
sti
lds
loopne
cld
add
add
rolb
xchg
pop
sub
pop
mov
push
push
push
push
push
lea
push
call
test
fiaddl
mov
add
add
js
mov
ljmp
jbe
add
add
add
int3
add
jp
push
fldl
faddl
lods
out
shlb
lds
lret
mov
add
pop
fisttpll
add
mov
mov
xchg
scas
add
lcall
or
push
push
push
push
push
lea
push
lea
push
push
push
call
out
add
add
add
mov
cli
add
lcall
add
lods
pop
add
add
add
call
add
add
add
testb
add
mov
add
movb
add
out
add
loope
notl
cmpsb
sub
pop
add
push
not
pop
or
je
push
push
call
stos
outsl
mov
add
add
xlat
add
pop
leave
data16
mov
add
add
jns
loopne
cwtl
mov
in
add
mov
test
clc
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
loopne
fiadds
imul
fiaddl
mov
add
add
add
mov
lods
pushf
scas
addb
add
mov
add
add
add
arpl
leave
flds
lds
rolb
test
lds
imul
add
popf
imul
out
push
flds
xor
push
push
push
lea
push
call
arpl
jbe
lods
add
xchg
cltd
nop
add
pop
add
jecxz
add
mov
popf
in
je
add
add
ficompl
push
mov
jecxz
add
mov
add
xchg
mov
negl
jge
add
add
add
cli
mov
add
lock
lcall
les
lea
push
lea
push
push
lea
push
push
push
call
call
rolb
lods
add
mov
mov
add
scas
add
add
add
loop
mov
movsb
cld
leave
divb
cld
in
pop
xchg
add
add
jnp
cwtl
fldl
jno
ret
in
in
lcall
push
sbb
jno
adc
jnp
jle
jno
lea
push
push
lea
push
call
lock
mov
pop
add
stos
mov
aad
add
jbe
add
movb
add
pushf
jmp
ja
mov
fnstsw
add
mov
mov
in
call
xor
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
repnz
add
add
push
movsb
add
mov
add
negl
xchg
lea
in
mov
cltd
test
fiaddl
lcall
les
lea
pop
add
push
sub
pop
add
push
push
shr
sub
pop
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
ljmp
lods
std
add
cmpsl
lods
fisubl
mov
add
addl
in
add
roll
outsl
test
add
add
lret
pop
insb
jnp
cli
loope
add
push
mov
jno
add
add
push
add
xchg
mov
lcall
add
push
push
call
xorb
add
add
add
popl
mov
fwait
add
push
addb
add
add
add
jbe
jp
imul
loop
pop
ficomps
in
clc
pop
add
push
inc
shr
pop
add
push
add
pop
pop
push
pop
rep
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
in
add
add
add
rolb
add
lods
xchg
fldl
rcll
add
add
fdivrp
mov
add
mov
in
fcompl
dec
sub
jno
adc
sbb
and
call
pop
test
fistps
add
cli
add
lahf
add
pop
pop
push
jmp
std
add
mov
add
loopne
xchg
in
add
add
fadd
add
mov
add
add
add
add
jne
add
add
sub
pop
xor
push
lea
push
call
add
add
js
scas
mov
fiaddl
push
incb
jno
fiadds
jnp
sahf
add
add
add
cwtl
addb
notb
add
mov
shlb
pop
mov
add
iret
jo
add
sub
pop
add
push
not
pop
or
je
mov
push
inc
rol
shr
pop
add
add
push
push
push
push
push
push
push
call
mov
add
mov
pop
add
xlat
test
mov
jmp
out
add
addl
mov
scas
add
add
movsb
push
inc
pop
pop
push
push
lea
push
and
add
sub
sub
add
add
sub
pop
add
ror
inc
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
popf
test
test
add
add
add
add
sbbl
add
data16
sahf
xchg
add
add
roll
sub
pop
pop
push
not
pop
mov
push
not
add
sub
pop
mov
push
lea
push
push
push
push
push
call
jmp
mov
sarl
out
add
add
mov
call
add
add
add
add
add
fldl
mov
add
sub
pop
mov
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
mov
add
popa
add
iret
add
mov
jle
pushf
pop
popa
add
add
add
xchg
push
aam
addb
stos
add
mov
add
mov
shlb
jae
adcl
xchg
add
add
sahf
add
add
roll
push
lea
push
lea
push
push
push
push
call
add
add
add
add
add
add
add
add
shll
mov
xchg
add
in
xor
add
add
add
add
add
pop
add
add
add
leave
add
xchg
leave
sub
pop
mov
push
pop
add
push
push
lea
push
call
mov
add
add
jns
mov
add
push
loope
rolb
mov
je
jmp
add
mov
add
add
add
push
push
push
lea
push
push
push
push
push
push
call
fiadds
add
mov
cmpsl
imulb
lahf
stc
add
jge
pop
add
mov
movsb
mov
mov
in
jbe
adcl
push
mov
add
add
ja
movl
int3
mov
mov
mov
add
js
sub
pop
push
push
ror
add
pop
push
push
push
push
push
push
push
lea
push
call
into
sar
push
add
add
push
add
iret
add
add
add
out
add
add
mov
cmc
call
call
push
lea
pop
pop
pop
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
add
ljmp
add
add
enter
test
pop
leave
jae
lods
popf
add
shll
add
push
fadds
mov
addb
add
add
add
add
xchg
loope
add
gs
mov
cmc
loopne
rol
pop
add
add
jle
in
fcomps
push
push
push
push
push
push
push
lea
push
push
call
leave
loopne
mov
fwait
mov
pushf
into
cltd
add
enter
popa
mov
add
lcall
cli
add
popf
add
lcall
add
ret
push
shll
sub
pop
pop
push
push
push
push
call
add
in
add
fidivrs
pop
jae
jge
enter
ja
data16
add
cltd
add
mov
xchg
ja
add
loope
add
add
lret
mov
add
add
faddl
add
add
xchg
add
addb
pop
leave
push
push
call
mov
cwtl
add
add
add
mov
push
add
mov
leave
pop
jecxz
add
add
push
add
add
sahf
add
xchg
add
jl
add
add
add
add
add
test
lods
add
addl
pop
add
pusha
jle
sub
pop
ret
push
push
lea
push
call
add
sbbb
add
add
mov
jl
add
mov
add
arpl
enter
aad
pop
ljmp
push
push
push
push
push
push
push
push
lea
push
push
call
add
lods
add
add
lcall
mov
mov
add
testb
add
int
lret
in
add
add
mov
add
add
xchg
mov
pop
add
in
mov
pusha
pop
add
fldl
add
jl
fbld
lcall
in
push
push
lea
push
lea
push
lea
push
push
call
mov
ret
add
rcl
repnz
add
add
add
imul
mov
in
add
mov
call
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
xchg
add
push
add
push
xlat
stos
icebp
cli
int3
add
popl
add
jle
add
push
jle
cltd
sbb
sti
add
xchg
idivl
add
roll
pop
push
push
push
lea
xor
pop
push
push
push
push
push
call
add
push
xchg
add
mov
add
cli
add
shll
pop
cwtl
jge
sahf
cli
insb
add
jbe
loopne
lahf
sub
pop
movl
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
xchg
add
fldenv
add
mov
int3
divb
fildl
push
pushaw
add
add
into
mov
cmc
add
add
mov
insb
movsb
add
mov
int3
cmpsl
add
pusha
mov
jp
fildl
fs
mov
inc
clc
call
xorb
js
push
lea
push
lea
push
call
mov
push
cmpsl
add
fwait
in
popl
mov
fcoml
jno
add
mov
xlat
jge
add
push
fiadds
add
ror
bound
add
mov
fidivs
hlt
scas
add
jge
repnz
add
add
movsl
sub
pop
test
je
mov
push
push
lea
push
push
lea
push
lea
push
call
outsl
fwait
les
fwait
ja
popf
test
mov
jge
mov
xlat
add
out
jne
add
ja
movl
pop
add
add
icebp
test
add
add
add
call
mov
je
jecxz
pop
pop
push
push
push
push
call
mov
jne
clc
add
rcrl
not
cmp
add
push
add
cmc
mov
out
jmp
add
ja
xchg
popl
out
cmc
popf
cld
add
fs
lret
rcr
nop
add
add
flds
in
popf
jne
xchg
lock
lcall
push
push
call
add
add
xchg
push
mov
add
lea
push
push
ja
mov
sti
pop
leave
mov
add
add
test
loop
sahf
add
add
fldl
int3
add
mov
lds
test
out
mov
push
out
add
xchg
add
leave
arpl
pop
imul
pop
iret
add
lcall
ret
push
push
push
call
outsl
arpl
call
outsl
add
add
bound
add
stos
jge
les
mov
mov
add
shl
add
add
push
stos
add
push
pop
add
add
gs
fs
add
loopne
add
mov
enter
pop
jae
in
hlt
lcall
push
push
push
push
push
call
add
add
shrl
mov
add
popa
out
add
sti
add
add
roll
add
lds
add
enter
pop
rcr
lds
add
in
lcall
in
add
push
push
push
push
lea
push
push
push
push
call
add
stc
pop
push
add
add
add
add
add
insb
stos
mov
add
out
add
add
lret
lds
mov
add
add
pop
add
lods
fs
ljmp
add
mov
push
pop
fsubp
add
add
lcall
push
push
call
jae
out
movl
add
repnz
clc
add
testb
popf
add
add
add
in
fsubp
in
clc
add
mov
out
add
scas
aad
add
xlat
add
xchg
lcall
push
push
push
push
push
push
lea
push
call
add
mov
add
jle
add
pop
add
add
in
mov
mov
add
push
push
add
jb
mov
ficoml
xchg
pop
out
test
int
arpl
add
add
mov
push
jmp
test
add
imul
push
fsubrs
add
add
push
xor
xor
pop
push
push
sub
dec
xor
pop
testl
addl
push
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
mov
xchg
popf
sti
add
mov
mov
add
add
mov
add
cwtl
add
aam
add
jno
add
add
cmpsl
stc
call
ficomps
inc
cld
pushl
push
push
lea
push
push
push
call
add
int
clc
mov
mov
stos
add
popa
lock
add
xchg
push
fldl
jnp
aad
add
arpl
nop
orb
pop
mul
cmc
mov
add
lock
add
push
add
icebp
ret
add
sub
pop
push
push
shr
sub
pop
push
push
rol
xor
rol
pop
call
push
rol
lea
pop
cmpl
jne
push
not
shr
pop
pop
push
inc
pop
pop
push
ror
pop
pop
push
pop
pop
leave
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
cmpsl
addl
subb
movsl
add
cmpsl
fildl
pop
push
add
add
nop
clc
scas
add
movb
add
ljmp
add
jmp
jge
add
xorl
js
loope
jl
add
add
add
add
mov
jp
push
add
sahf
add
push
test
add
add
pushf
add
add
int
push
out
add
add
add
jne
shl
mov
loopne
pop
out
sub
pop
push
push
lea
push
push
call
jnp
jbe
add
add
add
add
add
adcl
xchg
into
bound
loop
cmpsb
add
add
add
roll
jo
mov
int
jne
add
add
push
add
lcall
aam
movb
add
push
rol
ror
add
pop
push
push
lea
push
push
push
call
push
stos
pop
fdivl
add
jae
clc
mov
jle
mov
pop
add
int3
js
movsl
add
jne
fadds
test
shll
jb
cmpsl
xchg
mov
data16
mov
les
pusha
rolb
add
lcall
push
rol
shr
inc
add
pop
push
push
push
shr
add
pop
movl
push
push
sub
xor
add
shl
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
sti
add
out
push
cli
add
clc
pop
test
add
add
loopne
lret
mov
test
pop
add
incb
rolb
add
loopne
lods
ljmp
rolb
repnz
enter
out
jbe
jns
je
pop
add
in
out
add
loope
add
add
sub
pop
call
subl
push
push
push
push
push
lea
push
call
add
testb
cltd
stos
mov
arpl
add
add
jge
data16
lock
pushf
push
xchg
testb
enter
lea
fcompl
add
add
add
add
add
lods
add
mov
lahf
imul
sub
pop
cmpl
jne
pop
push
push
call
add
int
push
add
add
roll
push
mov
xlat
insb
add
icebp
add
subl
xchg
lahf
nop
add
mov
std
add
in
clc
pop
pop
pop
push
not
add
pop
pop
push
push
call
lods
add
pop
filds
add
mov
pop
faddl
add
add
mov
add
fcmovne
into
push
add
add
add
add
mov
add
pop
add
out
test
loope
add
push
xor
lea
sub
dec
pop
ret
push
inc
pop
push
push
push
push
push
call
add
add
lock
add
repnz
imul
add
add
add
add
ficompl
jmp
cmc
mov
mov
push
shl
pop
add
push
push
push
push
push
push
push
call
mov
les
lods
add
add
add
test
arpl
mov
test
testl
add
in
rcrl
add
add
xchg
add
add
xchg
add
mov
clc
lcall
xchg
test
rorl
lcall
push
push
add
pop
push
push
push
push
push
lea
push
push
call
scas
cmc
test
in
int
add
add
fcoms
push
mov
add
lock
add
stos
add
je
mov
mov
push
add
add
mov
lods
mov
add
jle
lea
adcl
out
add
rclb
sub
pop
push
mov
push
push
lea
push
push
call
fs
data16
push
add
add
adcb
bound
aam
push
add
pop
add
cmc
add
add
jmp
add
add
inc
cmp
push
call
push
les
aad
xchg
pop
ljmp
push
add
add
add
add
mov
add
les
jno
jle
add
add
add
lahf
call
sahf
add
add
int
add
lods
int
add
ja
add
mov
int3
mov
add
lods
sub
pop
sub
push
push
lea
push
push
call
add
jb
and
add
fadds
fiadds
out
add
jbe
stc
add
add
add
add
sbbl
int3
add
push
repnz
jae
add
loop
les
rcr
jno
add
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
out
add
add
add
fldl
movsl
test
fdivrs
ret
out
fwait
repnz
shlb
jge
ret
add
stos
cld
add
add
add
add
addr16
in
fdivr
lcall
call
push
shr
shr
pop
mov
push
push
push
push
call
jmp
jmp
mov
add
add
add
add
add
mov
je
sahf
add
xchg
popf
mov
push
jmp
add
add
add
mov
pop
pop
add
andb
jl
jb
call
std
imul
sar
jo
jnp
xchg
add
je
add
add
xchg
nop
xchg
add
mov
testb
mov
add
out
test
inc
or
shlb
push
push
push
lea
push
push
lea
push
call
pop
imul
jns
add
push
add
fcmovnbe
cwtl
lds
pop
add
jae
mov
add
mov
add
mov
add
push
mov
in
mov
push
lea
push
push
push
call
add
add
xchg
mov
out
add
mov
lahf
div
lea
leave
mov
fldl
xchg
out
loopne
add
jno
roll
iret
rcrb
add
add
negb
cmp
sahf
fnstenv
add
add
fxtract
add
lcall
nop
nop
nop
nop
cmp
jne
push
shr
not
ror
pop
cmp
jne
push
lea
push
push
call
add
add
add
add
cld
gs
add
cmpsb
mov
add
mov
add
in
add
stos
add
add
sub
pop
mov
push
push
push
call
iret
lret
pop
add
mov
mov
test
nop
sti
stc
add
add
shl
jmp
mov
add
loopne
rolb
add
add
jecxz
clc
mov
rolb
fucomp
add
lcall
add
add
add
out
push
popa
push
lea
push
push
push
push
lea
push
push
push
call
add
add
aam
add
add
popa
xchg
sahf
mov
clc
insb
int3
jle
jb
add
pop
add
int3
cltd
cwtl
mov
rolb
shrl
xlat
add
lcall
jp
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
pop
mov
add
jb
xchg
fcmovbe
add
xchg
shr
add
add
add
add
mov
xchg
add
add
test
in
gs
add
pop
add
notb
fwait
stc
add
addl
mov
mov
loop
add
imul
mov
push
not
pop
mov
push
lea
push
push
push
push
push
call
mov
add
jo
add
jne
add
pop
stos
mov
add
add
mov
pop
mov
lret
imul
lahf
mov
ljmp
sahf
cmc
flds
popa
add
mov
test
in
call
sub
jne
mov
push
push
push
push
push
call
add
push
mov
add
push
add
flds
jnp
addb
movsl
add
add
sar
add
add
nop
add
push
add
js
sti
shlb
add
popa
jo
in
add
pusha
lock
add
sbb
mov
into
add
sub
pop
movl
jmp
push
push
lea
push
call
divl
cmpsl
add
cmpsb
in
add
data16
add
std
push
fistpll
add
add
mov
add
jp
add
push
lahf
xchg
add
add
mov
add
mov
push
add
add
je
jae
jnp
mov
mov
mov
jno
add
add
in
hlt
pop
mov
push
sub
dec
pop
mov
cmp
jne
push
push
push
lea
push
lea
push
push
push
push
call
lds
add
xchg
leave
add
jnp
add
imul
add
lcall
add
pushf
add
mov
jo
loopne
hlt
add
lret
mov
loopne
mov
push
push
push
call
add
add
add
push
add
add
lds
push
stos
mov
add
mov
xchg
test
movsl
bound
mov
mov
jae
stos
add
add
add
add
add
das
push
call
movsl
add
add
add
mov
push
pop
lods
add
add
ljmp
add
jl
std
add
mov
in
fs
jbe
add
orb
mov
add
sarb
xchg
xchg
dec
or
add
ret
pop
cmpw
jne
push
add
pop
mov
push
sub
lea
xor
pop
movl
push
pop
jmp
push
push
lea
push
call
jb
add
imul
out
add
movl
add
mov
mov
add
out
add
add
sti
add
add
into
add
in
hlt
lcall
pushl
push
inc
pop
pop
push
push
call
mov
popa
cmpsb
addb
gs
xchg
mov
aad
add
add
test
add
cli
enter
add
push
sub
pop
mov
push
dec
not
pop
mov
push
ror
pop
mov
push
push
dec
push
sub
add
sub
shr
rol
not
sub
xor
sub
ror
pop
shr
pop
push
xor
pop
push
call
push
push
lea
push
push
push
call
add
cltd
add
add
movsb
enter
rolb
rcrb
enter
add
mov
in
add
mov
add
movl
xchg
add
sahf
add
add
add
add
add
mov
add
mov
cmpl
je
push
push
sub
push
sub
add
rol
sub
add
sub
lea
xor
pop
rol
add
pop
push
inc
add
sub
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
call
gs
gs
jp
popf
outsl
mov
jmp
icebp
mov
pop
filds
add
push
add
jp
pop
add
filds
scas
fiadds
mov
xchg
mov
add
out
in
mov
add
jle
mov
arpl
add
add
cltd
mov
test
mov
in
fdivr
lcall
add
add
push
lea
push
push
push
push
call
add
add
add
nop
loope
add
add
jne
mov
add
push
add
jne
mov
add
imul
scas
add
add
jle
stos
mov
add
mov
add
add
faddl
xchg
add
out
sub
pop
cmpl
je
push
push
shr
push
xor
add
inc
sub
xor
not
pop
xor
xor
xor
pop
push
sub
not
lea
pop
push
push
sub
shl
pop
call
cmpl
je
push
push
sub
add
add
push
or
not
add
sub
ror
rol
pop
dec
ror
pop
push
pop
push
call
push
xor
not
xor
pop
cmpl
je
push
push
dec
dec
ror
add
push
push
pop
add
sub
not
not
dec
sub
ror
pop
xor
not
sub
pop
push
push
push
push
lea
push
push
call
mov
xchg
lahf
add
fcmove
mov
cwtl
add
loopne
shl
stos
add
mov
enter
add
add
add
je
leave
add
add
lds
add
fiaddl
in
movsb
push
pushf
add
call
negl
dec
das
add
cmpl
je
push
push
push
xor
add
rol
rol
sub
sub
pop
shr
not
pop
push
push
push
push
push
push
push
call
xchg
mov
test
aad
mov
test
add
cwtl
int3
lock
icebp
add
xchg
mov
cld
pusha
sub
pop
push
call
push
add
ror
add
pop
cmpl
je
push
push
shr
push
sub
add
sub
shl
sub
ror
shr
pop
lea
lea
pop
push
not
pop
push
push
push
push
push
push
call
add
xchg
pop
jge
xchg
cld
xchg
xor
les
add
gs
cltd
icebp
aad
out
add
mov
popf
mov
leave
push
add
les
call
push
push
push
push
call
loope
add
mov
add
add
add
ljmp
div
jae
jno
add
jb
mov
add
jno
add
pop
cld
add
add
xchg
add
je
data16
cmpsl
add
add
jb
add
nop
jmp
add
push
cwtl
add
lock
cmpl
je
push
push
add
add
add
push
and
add
add
add
ror
sub
sub
dec
pop
sub
sub
rol
pop
push
lea
push
push
lea
push
push
call
lods
cmpsb
add
fdivp
push
aam
pop
insb
add
add
outsl
add
aad
mov
leave
scas
fadds
stc
call
movsl
fs
fsubs
addl
add
in
pop
push
push
push
push
call
mov
add
jle
callw
add
push
mov
push
popf
push
shrl
jmp
lods
addl
add
mov
add
pusha
jmp
popf
add
xchg
int
add
push
add
pop
in
xchg
add
add
add
hlt
lcall
into
sub
add
xchg
push
call
add
add
cld
xchg
push
jle
shll
add
xchg
add
movsl
add
ljmp
jnp
jge
lods
add
add
jae
xchg
jp
mov
cltd
add
out
ljmp
sub
pop
cmpl
je
push
push
add
sub
push
push
pop
add
sub
ror
sub
pop
ror
pop
push
push
push
push
push
push
call
fwait
push
add
push
test
xchg
icebp
add
ljmp
push
cmc
push
fidivs
out
add
pop
cld
mov
cld
mov
add
pusha
lds
call
push
push
add
not
shr
shr
pop
call
push
shl
pop
cmpl
je
push
push
sub
rol
push
or
not
add
xor
not
sub
lea
ror
pop
shl
pop
push
pop
push
push
push
push
push
lea
push
push
push
push
push
call
fdiv
shr
push
add
add
add
cmpsb
fndisi(8087
fisubl
ja
fdivr
add
icebp
nop
push
outsl
jns
add
mov
add
push
incb
add
imul
int
test
imul
add
lcall
and
cmp
test
add
add
push
or
not
add
rol
sub
not
pop
not
pop
push
add
pop
push
push
lea
push
call
out
add
test
shlb
loope
add
xchg
add
ja
in
in
mov
cli
push
loopne
push
add
rcrl
add
jb
add
mov
fistpll
xchg
xchg
mov
add
push
add
int3
mov
aam
add
add
add
subb
add
ret
test
mov
stc
ja
xor
push
or
not
add
shr
not
lea
sub
xor
add
pop
ror
pop
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
add
jmp
cltd
add
add
add
push
cmpsl
add
add
fbld
add
mov
arpl
xchg
add
add
sahf
add
sahf
add
out
add
xlat
lahf
pop
sar
call
add
xor
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
add
jnp
mov
add
fldl
fiaddl
iret
add
add
sti
mov
ja
add
add
add
add
push
imul
into
test
xchg
pop
stc
add
add
mov
add
in
call
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
movl
out
add
add
jae
add
lds
add
add
mov
mov
mov
js
mov
std
mov
test
fwait
jecxz
add
cmpl
je
push
push
shr
add
push
or
inc
add
inc
sub
sub
not
lea
pop
rol
add
inc
pop
push
push
call
les
push
std
add
add
add
cltd
xorl
rolb
mov
clc
jecxz
add
add
add
mov
in
add
push
out
add
out
jbe
icebp
test
clc
add
jl
jo
sub
pop
push
call
push
push
lea
push
call
add
incb
add
arpl
idiv
pop
arpl
add
push
mov
jge
add
add
in
add
add
push
stos
add
add
hlt
add
mov
add
add
mov
lds
add
add
add
fstps
test
lcall
js
xor
pop
ret
mov
inc
adc
out
ror
xor
pop
movl
push
push
push
push
lea
push
push
call
cld
rolb
mov
xchg
je
mov
add
test
fiaddl
mov
mov
cmc
add
loop
out
add
add
add
add
add
pop
push
add
js
add
push
cmc
loopne
sub
pop
jmp
push
push
push
push
call
add
jb
add
movb
aad
clc
arpl
add
add
add
sti
fadd
add
add
mov
add
in
fadds
sahf
add
add
push
pop
add
pop
xor
push
sub
pop
pop
pop
push
push
push
push
push
push
push
call
add
xchg
enter
mov
out
xchg
leave
add
loope
xchg
add
xchg
xchg
imul
add
mov
add
add
xchg
mov
mov
add
add
mov
xchg
add
pop
rcrl
push
add
lock
jp
mov
pop
mov
sub
pop
pop
pop
push
push
lea
push
call
lahf
add
add
test
scas
mov
add
add
add
add
movsl
cmpsl
ror
add
xchg
cmpsb
add
imul
add
add
mov
cltd
add
jmp
loopne
add
sub
pop
leave
push
push
push
push
push
push
push
call
in
scas
ljmp
arpl
jo
mov
fistps
lret
js
add
add
cld
xchg
lahf
ja
shl
lock
in
mov
sub
pop
ret
push
not
xor
add
pop
push
push
lea
push
call
clc
sti
fwait
lods
stos
xchg
jns
add
fs
add
add
push
shll
jb
add
add
pop
mov
pop
add
sahf
sub
pop
mov
push
xor
lea
rol
pop
add
push
add
rol
pop
cmpl
jne
push
push
inc
push
and
add
ror
add
sub
pop
sub
shl
not
dec
pop
push
lea
push
push
push
call
add
push
jecxz
in
pusha
cwtl
add
leave
add
ret
add
add
add
jecxz
add
add
add
add
add
call
add
lcall
jne
call
push
add
pop
push
push
dec
pop
call
push
ror
rol
dec
inc
pop
jmp
push
lea
push
call
jnp
iret
addb
add
fistl
andl
add
add
cld
clc
mov
out
add
add
add
test
push
cli
add
add
shl
test
add
in
clc
pop
cmpl
je
cmpl
jne
push
push
push
push
push
lea
push
push
call
mov
out
mov
add
out
les
leave
stos
lcall
xchg
fldl
into
iret
mov
add
test
add
add
scas
mov
add
mov
add
lods
test
xchg
add
fldl
jmp
add
cltd
add
std
add
test
rcr
push
bound
lcall
inc
or
ja
add
push
shl
xor
pop
ret
push
add
pop
jmp
push
rol
lea
pop
cmpl
jne
push
push
shr
sub
shr
dec
push
sub
add
shr
sub
xor
dec
pop
rol
shl
pop
push
lea
push
push
push
push
push
push
push
push
call
add
roll
mov
call
cli
add
add
in
mov
cld
add
add
jecxz
lcall
add
fiadds
add
scas
jbe
rcl
sarb
add
cli
bound
add
rcl
flds
cwtl
faddl
add
in
pop
out
arpl
les
into
mov
fdivr
lcall
jne
push
push
push
push
call
mov
add
add
ret
jle
je
add
add
mov
add
add
jnp
mov
jae
xchg
insb
addl
sti
mov
in
push
pop
call
push
shl
ror
pop
push
call
push
rol
shr
pop
jmp
cmpl
jne
push
rol
shl
pop
mov
push
add
sub
pop
mov
push
push
push
dec
push
sub
add
ror
sub
rol
pop
not
inc
pop
push
push
lea
push
push
lea
push
push
lea
push
push
call
rcr
fadds
add
mov
stc
add
mov
sahf
add
add
add
add
out
lcall
flds
pop
out
test
outsl
add
sub
pop
pushl
call
push
rol
dec
sub
shr
pop
call
push
push
shl
lea
push
and
add
inc
sub
sub
pop
pop
push
push
push
call
movsl
add
sahf
movsb
lds
cltd
add
add
add
cmc
add
add
add
add
test
add
pop
fs
pop
pushl
push
lea
push
lea
push
lea
push
push
call
add
mov
add
mov
in
add
add
add
js
mov
push
sub
pop
call
push
push
lea
push
lea
push
call
lahf
stos
mov
add
jl
movb
mov
lods
pop
add
push
xlat
add
mov
in
aad
hlt
jmp
add
mov
popa
mov
pop
mov
add
mov
add
push
sub
pop
call
push
push
inc
sub
ror
push
or
not
add
shl
rol
sub
dec
not
sub
pop
add
inc
pop
push
pop
pushl
push
lea
push
call
add
jmp
lods
add
leave
add
add
sti
push
lods
add
add
jno
push
jbe
insb
add
mov
add
sub
pop
call
push
push
call
scas
add
leave
mov
pop
add
mov
add
add
sub
movl
jns
sub
pop
call
push
push
ror
add
push
push
pop
add
rol
sub
sub
dec
pop
sub
sub
ror
pop
push
lea
push
lea
push
push
lea
push
lea
push
call
lods
in
add
add
add
add
in
jnp
jl
mov
mov
loope
movsl
push
mov
add
push
add
add
add
add
jge
popa
pop
xchg
add
sub
pop
pushl
push
shr
dec
pop
call
push
shr
ror
pop
call
push
push
shr
shr
push
or
inc
add
lea
sub
ror
pop
lea
pop
push
not
rol
dec
add
pop
pushl
push
lea
add
inc
rol
pop
call
call
push
push
sub
sub
ror
push
xor
add
add
rol
rol
sub
pop
dec
lea
xor
ror
pop
push
lea
push
call
std
jae
add
xchg
nop
add
cmpl
lods
add
cltd
push
xchg
add
jge
pop
add
imul
sti
add
push
add
jp
add
pop
add
xchg
add
xchg
movsl
add
fsts
add
stc
add
je
mov
pop
mov
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
aam
stos
call
add
repnz
add
add
add
lds
add
add
mov
lret
lock
push
int3
jne
cwtl
out
jmp
hlt
add
push
hlt
fiaddl
mov
cmpsl
add
add
add
add
add
add
jno
in
fcomps
shrb
xorl
sub
lea
push
push
pop
add
sub
sub
not
pop
ror
sub
sub
shr
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
fdivp
addb
xchg
stos
add
push
mov
mov
add
ret
mov
xlat
stos
pop
fwait
add
add
add
in
fisubs
add
add
push
mov
add
add
push
aam
add
ljmp
add
add
add
lcall
jne
call
push
add
dec
pop
call
push
push
ror
dec
push
push
pop
add
inc
ror
shr
sub
sub
not
shr
pop
sub
rol
pop
push
inc
add
pop
pushl
push
xor
rol
pop
call
push
inc
pop
call
push
push
add
add
push
push
pop
add
not
lea
ror
inc
sub
xor
pop
not
shl
sub
pop
push
shr
lea
inc
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
imul
fnstcw
add
xchg
imul
cld
cld
add
xchg
in
jo
add
aad
add
mov
fwait
xchg
popf
idivl
lods
add
mov
call
add
cmpsl
add
lods
adc
add
add
add
add
addb
add
fcomps
xor
add
shlb
lds
shrb
fisubl
mov
not
add
shr
push
push
pop
add
ror
lea
inc
sub
shr
pop
ror
rol
pop
push
lea
push
push
push
lea
push
push
call
add
lret
ja
add
mov
jae
sti
add
add
add
add
mov
add
cmpsb
fst
add
xlat
cli
add
add
je
push
add
orl
stc
mov
outsl
add
nop
stc
add
ljmp
pop
pushl
push
sub
pop
call
push
add
pop
lea
push
lea
push
push
call
add
clc
movsl
add
push
add
in
add
pop
stos
ljmp
add
add
jbe
pop
out
pop
add
mov
lods
leave
fisttpll
add
add
add
add
jle
out
jecxz
repnz
jns
mov
fadds
push
add
add
xchg
sub
pop
push
push
lea
pop
call
push
push
add
push
or
not
add
sub
sub
shl
rol
pop
sub
sub
rol
pop
push
lea
sub
dec
pop
pushl
push
push
push
push
push
push
push
push
call
out
pusha
xlat
cmc
jl
add
add
jmp
jle
add
add
les
add
cwtl
mov
add
xorl
and
add
fiaddl
ja
xchg
add
in
loopne
lcall
dec
sbb
add
aas
push
push
lea
push
lea
push
push
push
call
add
adcb
add
test
push
stc
cltd
jmp
xchg
add
add
popl
int3
lret
int3
leave
add
add
js
mov
lods
add
mov
mov
add
push
mov
jbe
jge
sahf
fiaddl
add
add
add
mov
lcall
shrb
pop
lcall
fildl
add
lret
push
push
into
sub
inc
pop
inc
pop
push
shl
not
xor
pop
pushl
push
push
push
call
add
jb
mov
xchg
ror
add
jmp
shl
fadds
add
add
mov
outsl
test
ret
repnz
add
out
fiaddl
out
add
clc
add
lcall
inc
sbb
add
rorb
shrb
jmp
push
xor
push
or
inc
add
add
inc
sub
sub
lea
not
inc
pop
inc
sub
pop
push
lea
push
lea
push
push
push
push
push
call
add
outsl
idivl
add
mov
lret
add
fldl
lds
subb
add
cmpsb
mov
hlt
mov
icebp
not
mov
mov
add
add
pop
fs
rolb
rcl
pusha
int3
add
add
popf
add
pop
xlat
sub
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
call
cwtl
push
pusha
shl
cli
add
mov
add
ficomps
add
pop
lods
mov
mov
push
pusha
mov
in
loopne
lcall
push
sbb
add
shrb
jge
pop
push
ror
dec
not
push
or
not
add
sub
sub
sub
sub
pop
add
xor
shr
shl
pop
push
ror
ror
not
sub
pop
pushl
call
push
push
xor
shr
push
xor
add
dec
xor
shr
shl
sub
add
pop
pop
push
push
shr
push
sub
add
ror
sub
sub
ror
pop
add
dec
pop
push
lea
push
lea
push
push
push
lea
push
push
call
add
pusha
addb
lret
add
ljmp
add
jns
add
add
add
add
xchg
lods
std
add
add
leave
mov
pop
pop
add
out
mov
in
in
call
push
add
pop
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
mov
add
add
sahf
xchg
add
cmpsb
faddl
jne
pop
add
add
out
enter
push
shrb
ljmp
movsb
fildl
cmpsb
roll
mov
jle
sub
pop
dec
jne
call
push
push
rol
push
or
not
add
dec
sub
add
not
pop
shl
pop
push
push
push
push
push
push
call
rolb
add
int
xchg
nop
mov
add
test
mov
add
add
add
add
add
add
add
repnz
xchg
leave
add
lods
je
fsubrs
add
stos
leave
add
sti
add
add
add
cltd
vpor
sub
pop
pushl
push
push
push
push
push
call
scas
add
iret
xchg
rolb
imul
jge
jne
hlt
add
lret
stos
enter
sar
mov
add
fstpl
sub
pop
call
push
push
shr
pop
call
push
shr
shl
shl
inc
pop
mov
push
push
ror
push
sub
add
sub
lea
sub
rol
pop
dec
pop
push
sub
ror
shr
sub
pop
pushl
push
sub
xor
sub
pop
call
lea
push
push
push
push
push
call
mov
lcall
lret
add
not
notb
add
faddl
add
in
std
shrb
add
nop
jb
jae
aad
add
sti
data16
mov
in
in
lcall
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
sbbl
loop
ljmp
jecxz
je
aam
add
add
js
std
loopne
jp
add
add
add
movsl
mov
push
add
cmpsb
add
divb
mov
add
add
lea
stc
fdivrl
xchg
add
cwtl
add
sub
pop
push
push
not
pop
push
push
lea
push
push
lea
push
call
incb
add
fildl
push
add
add
add
aam
sbbb
add
mov
add
popa
sti
mov
fcmovnb
add
add
add
lret
add
mov
hlt
fcmovnu
add
mov
add
add
lcall
rclb
shl
shr
pop
lea
push
push
xor
add
not
push
sub
add
sub
not
sub
sub
shr
pop
xor
sub
pop
push
inc
not
add
shr
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
push
call
add
lcall
add
add
add
add
add
cltd
add
mov
xchg
add
lret
lock
ljmp
shrb
cs
push
push
rol
push
push
pop
add
dec
sub
not
sub
ror
lea
pop
sub
pop
push
xor
pop
pushl
push
add
pop
call
call
push
lea
push
lea
push
push
call
add
add
jno
arpl
jmp
push
add
push
add
add
add
jnp
mov
add
add
in
add
lds
gs
in
pop
mov
je
jge
pushf
stos
add
jp
rolb
pop
lods
add
movsb
add
add
inc
cld
push
lea
push
push
call
outsl
add
mov
add
mov
imul
stc
push
in
pop
jne
aad
mov
mov
les
aam
xchg
xchg
ljmp
test
add
imul
add
push
add
add
popf
push
loopne
add
lds
cmpsl
sub
pop
lea
push
push
shr
push
or
not
add
add
shl
sub
add
shr
shl
pop
rol
inc
sub
pop
push
push
push
lea
push
push
lea
push
push
call
add
mov
mov
flds
loopne
jb
mov
cwtl
add
int
add
add
jmp
add
shll
mov
xchg
add
push
cmpsl
add
cmpsb
add
fcmovb
gs
add
in
in
lcall
jne
call
push
ror
sub
pop
lea
push
lea
push
push
push
push
call
gs
add
mov
sti
mov
shr
flds
test
cmpsl
popa
insb
jmp
jp
movsl
shll
push
popf
xchg
add
popa
leave
fdivrs
movl
sar
mov
add
std
mov
lods
push
mov
scas
out
cld
add
popl
add
add
lcall
push
push
add
pop
push
push
ror
sub
ror
pop
pushl
push
push
sub
not
push
xor
add
not
inc
sub
xor
pop
sub
lea
shl
lea
pop
push
rol
lea
pop
push
push
rol
lea
add
rol
pop
call
push
push
not
rol
push
or
not
add
sub
add
pop
not
shl
shr
ror
pop
push
add
pop
pushl
call
push
push
call
sti
mov
stos
mov
add
add
add
mov
je
add
jnp
add
add
in
mov
add
add
iret
add
stos
jnp
scas
add
add
in
jne
add
add
sub
pop
push
call
push
push
add
xor
lea
push
and
add
add
sub
not
pop
lea
inc
xor
pop
push
inc
shl
shr
shr
pop
pushl
call
push
add
sub
not
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
add
add
push
jp
push
cmpl
mov
pushf
mov
scas
add
add
add
push
add
aam
in
loopne
jmp
pushl
push
push
lea
push
call
mov
add
sti
sahf
jl
mov
fdivs
nop
add
outsl
add
push
movb
test
add
hlt
add
xchg
add
add
cli
jae
add
pop
pop
sub
pop
mov
jmp
push
push
sub
push
or
not
add
add
shr
dec
sub
sub
add
pop
inc
shr
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
add
mov
xchg
add
add
rol
add
add
add
pop
in
jp
lret
jl
pop
iret
scas
loope
add
lcall
add
dec
mov
add
add
pop
sub
pop
pushl
call
push
xor
pop
push
push
sub
pop
call
push
push
xor
push
or
not
add
shr
sub
add
sub
xor
pop
add
shr
pop
push
sub
inc
pop
pushl
push
push
push
push
push
push
push
call
aad
jno
push
add
nop
add
sahf
fsubrs
shrb
add
fs
add
jo
imul
mov
arpl
mov
add
add
mov
in
lcall
push
push
add
push
lea
pop
push
call
push
push
push
lea
push
push
lea
push
push
push
push
push
call
out
add
rcrb
enter
xlat
mov
add
les
fs
add
in
out
mov
rclb
push
jno
add
add
arpl
pop
faddl
test
mov
pop
test
notb
add
add
sub
pop
leave
add
push
lea
push
push
lea
push
lea
push
push
push
call
loope
stc
aam
pop
loopne
fcomps
pop
xchg
mov
out
stos
add
add
add
add
les
push
cld
add
std
data16
add
fistpll
imul
add
add
add
test
add
into
add
jb
xorb
add
shr
sub
pop
pop
pop
push
not
rol
pop
pop
push
inc
rol
not
inc
pop
xor
push
inc
shr
pop
inc
push
not
inc
pop
ret
push
rol
inc
shl
pop
leave
push
push
call
out
add
mov
icebp
add
add
js
push
fiaddl
add
jmp
jle
add
testl
shl
jno
pop
mov
lret
jl
push
add
mov
lret
pop
popa
mov
add
clc
pop
ret
push
push
xor
pop
mov
cmpl
jne
push
lea
add
sub
pop
mov
push
lea
push
push
push
push
push
push
call
push
add
jo
jmp
lock
jecxz
add
in
in
add
loop
jmp
lods
in
add
les
lods
movsl
add
add
jmp
bound
mov
add
outsl
xchg
add
add
scas
sub
pop
jmp
push
not
ror
ror
pop
mov
and
push
push
lea
push
lea
push
call
add
add
ja
add
add
sti
scas
add
add
jb
pop
fsubrl
outsl
mov
add
sub
pop
xor
xor
push
add
rol
sub
pop
add
push
add
shr
pop
xor
push
lea
push
lea
push
push
push
call
xchg
roll
shr
add
leavew
lahf
lods
mov
jmp
add
movsb
add
add
bound
int3
mov
add
clc
xchg
mov
in
lcall
sub
push
lea
sub
sub
inc
pop
jmp
push
push
call
fwait
add
movsb
int3
std
add
fsubrl
popf
add
sti
add
aad
jno
jnp
testb
xchg
mov
cmpsb
add
pop
add
add
push
pop
add
jno
test
add
mov
push
fidivrs
add
sub
pop
sub
push
dec
sub
shl
sub
pop
pushl
push
shr
inc
pop
pop
push
inc
rol
pop
sub
push
shr
pop
cmp
jne
push
lea
push
lea
push
push
push
lea
push
push
call
add
std
add
aad
add
add
add
add
out
in
jp
loopne
add
add
fwait
mov
add
ljmp
shrl
leave
add
add
add
add
add
loop
add
add
add
lcall
enter
jae
call
pop
lea
sub
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
addl
add
cmc
rcrl
sti
out
fistpl
jnp
aam
iret
xchg
jae
add
loope
add
mov
jmp
mov
rcr
mov
add
add
jge
in
loopne
mov
push
shr
pop
shr
push
inc
shl
pop
add
push
shl
pop
sub
push
push
push
lea
push
push
push
push
push
call
add
add
rcll
add
add
xchg
enter
push
add
add
add
jp
add
mov
add
int3
mov
add
sub
pop
pushl
push
add
inc
shr
pop
pop
push
push
push
push
push
push
push
push
push
call
test
mov
add
add
add
fadds
pop
jno
add
add
add
push
mov
add
add
mov
add
mov
stos
add
mov
add
out
mov
pop
shr
push
inc
pop
and
push
sub
pop
sub
cmp
jne
push
not
pop
leave
ret
push
dec
add
shl
pop
push
push
lea
push
push
push
push
push
push
call
add
add
jmp
pushf
stos
bound
cltd
add
add
mov
mov
in
cmpsl
addb
test
mov
xchg
int
lods
fisubrl
mulb
in
mov
add
push
push
lea
push
call
movsl
add
add
add
jae
add
mov
add
xchg
in
jecxz
test
cld
rcll
add
jnp
add
js
mov
mov
add
aad
lods
pop
data16
add
push
push
push
push
push
push
lea
push
call
add
add
add
loop
add
add
pop
push
cltd
add
add
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
add
popa
popa
add
fiadds
add
add
cli
mov
les
add
int3
lret
out
pushf
test
add
add
leave
cmpl
out
loope
add
lcall
push
push
inc
add
pop
mov
push
push
push
lea
push
push
call
fcmovnb
stos
clc
int3
cmpsl
ret
add
mov
jb
add
stos
mov
xchg
fcom
in
jno
fnstcw
push
mov
mov
push
mov
shr
add
popa
ljmp
add
add
pop
loope
add
add
xchg
in
add
sub
pop
lea
sub
push
ror
pop
mov
push
pop
shr
add
push
shr
pop
mov
push
rol
sub
pop
add
push
push
call
push
add
add
add
add
add
cmc
add
add
add
mov
add
mov
aam
add
mov
popa
jb
sub
pop
mov
push
xor
xor
sub
add
pop
add
xor
push
shr
lea
ror
sub
pop
mov
and
push
ror
pop
rol
push
push
push
push
call
ljmp
add
mov
faddl
std
jge
cmpsl
add
add
loopne
enter
add
lret
add
push
add
add
xchg
add
mov
test
aad
out
add
add
pop
rol
xor
push
add
add
inc
sub
pop
inc
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
add
add
add
add
fs
mov
add
out
add
jmp
mov
in
fdivr
lcall
cmp
jne
push
push
call
je
out
add
data16
fcmovbe
add
jno
ja
int
ja
roll
jne
in
fdivs
add
bound
add
add
add
mov
mov
imul
lods
mov
mov
out
add
add
push
fs
pop
add
cmp
je
push
lea
push
push
push
lea
push
push
lea
push
call
add
jge
add
mov
fimuls
add
mov
add
rorb
cltd
pop
mov
add
add
ret
adc
shl
pop
cmpl
jne
push
add
pop
xor
push
push
push
push
push
push
push
push
push
call
jno
in
mov
mov
mov
add
xchg
scas
add
add
mov
jns
add
loope
mov
in
flds
add
add
push
les
cltd
fwait
add
lcall
pop
push
push
call
mov
stc
add
push
loopne
enter
add
add
add
add
ja
add
shlb
sub
pop
pop
push
not
xor
add
pop
pop
push
add
pop
pop
push
sub
pop
leave
push
ror
ror
inc
pop
ret
push
push
lea
push
push
push
push
call
jne
push
popf
jge
mov
icebp
pushf
add
divl
add
add
ljmp
lret
pop
scas
add
fldl
xchg
lcall
add
out
lret
mov
sub
pop
mov
push
inc
dec
sub
pop
add
push
inc
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
gs
jb
add
add
popf
add
add
nop
add
add
xchg
add
pop
add
push
add
add
lods
push
mov
fstpl
add
fwait
lds
lcall
mulb
push
push
push
push
push
push
push
call
push
jo
fs
testb
jns
int
jne
add
jo
add
ja
add
add
popf
repnz
fiaddl
jae
aam
nop
xchg
add
int
fidivrs
mov
add
add
in
in
pop
call
push
push
lea
push
call
mov
add
ror
cli
les
in
out
popa
jae
pop
out
pushf
mov
popa
add
xchg
test
pop
leave
add
add
mov
add
jne
sbb
pop
add
icebp
add
mov
push
insb
out
mov
add
pusha
popa
add
sub
pop
push
push
push
call
add
jnp
add
add
in
add
add
les
pop
add
add
mov
add
test
jbe
xchg
fildl
rolb
lcall
pop
cmc
call
add
pop
xor
push
sub
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
push
add
jne
add
add
xlat
mov
add
add
add
add
testl
add
iret
out
mov
cmpsl
add
loope
je
loopne
mov
in
fdivr
lcall
pop
push
push
lea
push
call
xchg
add
add
add
imul
repnz
jae
mov
add
add
aam
loop
cld
fsubl
lret
mov
fldl
fcomip
mov
insb
jge
add
incb
push
notb
into
add
xchg
add
add
jne
add
outsl
add
add
jne
scas
incb
add
sub
pop
pop
leave
push
push
push
push
push
push
push
lea
push
push
call
scas
je
int
test
add
testl
loopne
add
loopne
push
jno
movsb
addl
push
add
add
add
add
insb
add
jbe
jl
pop
movsb
popf
test
sahf
cld
add
scas
icebp
popl
add
int3
test
nop
add
add
rcrb
ret
push
push
push
push
push
call
push
mov
sar
add
add
mov
data16
addr16
add
add
add
add
add
mov
add
jno
add
lahf
shlb
mov
in
in
lcall
push
push
push
push
push
push
push
call
add
test
xchg
addr16
icebp
pop
andl
jno
add
ljmp
add
std
add
lcall
in
push
dec
lea
shr
pop
add
push
push
xor
pop
push
push
push
push
call
add
pop
popa
fstpt
add
add
add
jb
mulb
add
add
mov
add
data16
call
in
clc
pop
push
push
lea
push
call
jae
add
flds
jno
rcl
add
cmc
test
add
cmpsl
xchg
push
addl
lret
jmp
lahf
les
mov
add
int
add
insb
adcb
add
testl
mov
push
push
lea
push
push
lea
push
push
call
mov
push
sahf
mov
add
add
gs
pop
bound
add
jae
jo
add
mov
aad
add
sahf
scas
add
in
call
rcrb
lea
push
ror
pop
sub
push
push
push
push
push
push
lea
push
push
push
call
imul
add
add
add
fildl
je
add
roll
jle
stos
stos
lahf
add
add
mov
popf
xchg
scas
xchg
add
add
add
roll
add
enter
mov
in
fcompl
adc
lea
push
push
call
rcl
add
xchg
add
jge
mov
add
stc
lea
imul
xchg
jl
add
add
cld
in
lret
add
test
add
mov
add
sbbb
call
add
push
repnz
push
xchg
stos
outsl
xchg
add
sub
pop
shr
push
lea
xor
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
fcmovne
mov
jns
jp
mov
add
add
mov
ficoml
add
out
mov
add
add
mov
push
add
pop
cmpsb
outsl
add
push
incb
add
push
add
hlt
add
add
add
pop
js
fsts
rol
not
pop
pushl
push
push
push
push
lea
push
push
call
add
add
out
add
add
add
out
insb
movsb
lea
cli
add
add
add
pop
scas
add
xchg
add
add
add
push
pop
add
andl
rolb
mov
stc
cmpsl
loopne
add
pop
sub
pop
popl
push
inc
inc
ror
ror
pop
mov
push
sub
lea
not
add
pop
add
push
push
push
push
call
subb
fcmove
ljmp
add
fldl
leave
add
lahf
xchg
add
add
lods
fnsetpm(287
icebp
mov
add
cmpsb
ljmp
fstl
stos
mov
push
incb
mov
pop
xor
push
push
lea
push
push
push
call
pushf
mov
add
add
add
roll
pop
popa
mov
add
cmc
add
ret
push
fidivrs
add
stos
pop
jno
add
flds
add
rcr
lahf
aam
roll
adc
push
shr
add
add
pop
mov
push
sub
add
pop
add
push
push
push
lea
push
push
lea
push
call
add
imul
cmpsb
push
pop
mov
fs
addr16
cltd
add
cltd
fs
popl
cwtl
movsb
xchg
mov
cli
add
add
sub
add
fsubrl
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
add
add
fcomps
icebp
add
add
add
notb
rclb
sahf
mov
iret
fisubl
roll
add
test
lahf
gs
pop
test
lcall
rolb
push
lea
push
push
call
scas
jbe
pop
scas
aam
jae
out
add
rolb
add
cld
add
add
add
xchg
add
add
aad
fmull
add
mov
add
mov
in
lock
lcall
push
ror
add
shr
shr
pop
nop
push
push
call
add
add
lods
add
add
add
movsb
add
xchg
add
add
jo
test
cmpb
nop
pusha
xchg
addl
ret
add
fcmovbe
add
add
out
sub
pop
xor
nop
push
push
lea
push
lea
push
call
loope
roll
lcall
cmc
add
mov
add
out
mov
fscale
js
mov
pushf
xchg
loope
movsb
enter
insb
in
in
lock
nop
push
ror
shl
rol
pop
inc
nop
push
sub
sub
shr
pop
nop
push
xor
pop
cmpb
jne
add
push
shl
shr
pop
nop
nop
push
push
push
push
push
lea
push
push
push
call
addl
add
add
add
pop
mov
add
mov
std
add
add
add
cmc
scas
icebp
xorl
add
add
mov
pop
iret
test
add
add
test
mov
js
addr16
add
imul
jge
add
sub
pop
cmp
je
push
not
rol
add
shl
pop
nop
push
push
push
lea
push
push
push
call
add
jge
add
xchg
xchg
add
add
rcll
push
arpl
jnp
out
push
aad
pop
add
add
lret
iret
xorb
jbe
pop
add
add
jne
add
push
dec
pop
inc
push
not
pop
nop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
flds
in
rcrb
jno
insb
mov
scas
add
sti
out
outsl
cltd
add
xchg
mov
loopne
mov
add
testb
test
add
mov
mov
pop
add
mov
add
popa
add
filds
add
in
add
mov
fdivr
lcall
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
call
je
xchg
lea
add
mov
jbe
in
scas
mov
push
add
gs
mov
add
in
jo
add
push
stos
out
add
mov
mov
mov
popf
add
jns
iret
mov
addr16
mov
loop
add
mov
add
rolb
jbe
add
cmc
pop
hlt
add
jecxz
sub
pop
cmp
jb
push
push
lea
push
lea
push
push
push
push
push
push
call
js
jmp
xchg
add
add
loopne
add
push
add
cld
jbe
add
pop
jae
add
add
mov
add
stos
ljmp
mov
jecxz
pop
mov
imul
add
jp
add
mov
jno
jb
mov
xor
jmp
push
sub
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
scas
jle
add
add
mov
add
xchg
jns
add
jmp
je
add
je
add
lods
add
xorl
mov
jb
sub
pop
add
push
rol
add
pop
movzwl
push
lea
push
push
push
push
push
push
call
mov
ljmp
add
push
add
xchg
icebp
enter
jmp
test
add
add
lcall
add
inc
sbb
sub
pop
add
push
not
sub
add
pop
mov
push
rol
shr
pop
xor
xor
push
xor
dec
pop
shl
push
lea
pop
xor
push
add
add
sub
pop
shl
push
push
lea
push
lea
push
push
push
push
push
push
push
call
jl
add
enter
fld
pop
leave
test
mov
pop
lcall
popf
mov
fistpl
jl
add
add
mov
add
add
add
int
add
push
in
test
lods
mov
add
pop
add
lahf
add
add
jge
icebp
ja
xchg
test
mov
sub
pop
xor
push
push
push
lea
push
call
add
sahf
add
add
push
mov
pop
add
shlb
add
addl
clc
add
out
add
and
add
test
add
or
add
add
test
add
iret
aam
add
add
sub
pop
shl
xor
push
dec
shl
ror
pop
mov
push
lea
push
push
call
mov
add
add
add
add
movb
add
add
add
out
incb
mov
popa
add
mov
call
mov
popf
push
add
add
add
add
lods
mov
add
mov
add
loope
std
mov
lcall
inc
hlt
push
push
push
push
push
push
lea
push
call
jne
add
mov
fdiv
jmp
lcall
add
les
imul
xchg
mov
mov
add
add
add
push
xchg
repnz
push
add
add
add
pop
push
lea
push
push
push
push
lea
push
push
call
jnp
add
add
add
scas
loope
xchg
add
int3
cwtl
popa
pop
mov
aam
rcl
add
int
out
add
xchg
lcall
push
shr
shr
pop
leave
push
sub
add
pop
ret
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
pop
add
add
mov
mov
lret
add
add
lea
add
subb
add
in
add
add
lcall
rcll
fcomp
add
add
add
sar
add
mov
push
dec
sub
pop
push
push
not
not
pop
push
push
push
push
push
push
push
call
faddl
add
add
add
repnz
jbe
add
add
in
add
cld
push
popa
add
cmpsl
add
add
add
add
add
mov
mov
clc
add
add
nop
cld
add
lcall
push
push
push
push
push
push
push
push
push
call
add
add
jmp
jle
in
test
leave
add
scas
add
out
pusha
icebp
out
aad
out
mov
add
lock
add
add
jbe
roll
bound
add
repnz
add
add
lret
mov
add
in
fcompl
mov
push
lea
xor
rol
pop
mov
mov
push
lea
push
push
push
call
data16
add
jecxz
add
add
out
add
xchg
add
out
pushf
add
push
fisubrl
pop
addb
int
add
lock
int3
add
ljmp
scas
add
nop
jae
add
lock
lcall
rorb
test
push
add
mov
push
push
push
lea
push
push
call
pusha
xlat
add
flds
loopne
add
leave
jl
arpl
add
pop
mov
add
repnz
jno
jbe
add
out
jnp
arpl
jge
add
jge
add
ljmp
je
lcall
aam
mov
lret
iret
fildl
add
add
add
rcrb
jecxz
in
in
lcall
testb
call
notl
std
shr
pop
mov
push
push
call
mov
mov
lock
xchg
add
mov
add
mov
scas
add
icebp
add
lahf
add
mov
mov
movsb
mov
mov
push
push
push
push
push
push
push
push
call
add
add
jb
add
gs
lods
mov
xchg
add
mov
lcall
push
neg
add
add
cmpl
loopne
inc
push
sub
rol
shl
pop
cmp
je
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
jmp
add
rorb
add
push
lods
pusha
mov
add
mov
sahf
sti
add
add
mov
nop
jl
mov
add
fiaddl
add
ret
mov
data16
addl
add
add
pushf
nop
pop
add
movsl
xchg
loopne
lcall
rorb
add
add
xchg
push
call
fadds
push
pop
add
add
add
rol
add
add
jo
mov
lcall
push
cli
push
loopne
testb
stos
add
mov
rcl
mov
xchg
mov
nop
outsl
add
xchg
mov
add
add
xchg
sub
pop
inc
cmp
je
push
push
push
push
call
jecxz
jb
fiaddl
jnp
add
data16
jmp
add
add
add
int3
jnp
add
fldl
jle
fiadds
vpavgb
out
pushf
fldl
add
push
add
jno
loopne
add
lock
lcall
rorb
es
call
pop
cwtl
lds
add
mov
pushf
inc
pop
cli
push
push
lea
push
lea
push
call
xchg
je
add
mov
sti
xchg
lret
mov
pop
popf
bound
icebp
add
cli
sub
add
add
add
push
add
rolb
lcall
add
add
add
cltd
jns
add
add
lahf
add
xchg
call
add
scas
add
add
rolb
lcall
rcrb
loop
not
pop
pop
push
push
push
lea
push
lea
push
lea
push
call
xchg
rolb
mov
mov
cmpsb
mov
add
jle
add
add
add
lods
add
rolb
add
lret
push
add
add
xchg
mov
xlat
sub
pop
pop
pop
push
ror
pop
leave
push
not
pop
ret
mov
push
shl
sub
pop
inc
push
shr
pop
cmp
jne
lea
push
push
push
push
push
lea
push
lea
push
push
push
push
call
loop
in
add
mov
push
mov
add
add
xchg
add
popl
xchg
loop
xchg
add
imul
add
pop
scas
lcall
sub
pop
mov
push
push
push
call
add
xchg
mov
xchg
add
add
xchg
jnp
cltd
je
in
add
add
call
add
mov
xchg
stc
add
add
mov
pop
pop
add
lcall
in
test
sub
pop
mov
add
push
ror
shr
shr
pop
cmp
jne
mov
push
shl
pop
test
je
mov
push
lea
pop
add
push
lea
push
call
xchg
cmpsl
idivb
movl
add
mov
repnz
add
stc
mov
jae
pop
add
add
add
lods
jne
andb
loop
pop
add
add
mov
lcall
loopne
test
jmp
push
push
push
lea
push
call
add
movsl
add
sahf
les
xchg
add
popa
icebp
cli
add
nop
jecxz
cltd
xchg
hlt
xchg
add
outsl
add
mov
add
int
xchg
loope
pusha
add
add
pop
addb
add
sahf
mov
js
add
frstor
mov
fs
pop
xor
pop
push
shr
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jle
push
jmp
xchg
mov
pop
xchg
add
jb
push
mov
add
lds
add
test
out
add
add
fdivr
lcall
push
not
shl
not
pop
leave
ret
push
push
call
add
push
rolb
cli
mov
fs
rcll
add
push
test
add
mov
in
clc
lcall
inc
call
out
pop
pop
push
push
lea
push
call
test
cli
out
add
imul
push
popf
scas
mov
jmp
mov
lock
iret
stos
sub
pop
pop
pop
push
add
sub
shl
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
call
jmp
add
add
add
add
add
pop
add
add
into
add
push
add
mov
mov
scas
jo
fs
cmpl
add
lret
imul
bound
add
in
mov
push
shr
jne
pop
test
lcall
push
shr
pop
ret
push
inc
sub
pop
mov
pop
push
add
pop
pop
push
add
pop
pop
push
push
push
call
rolb
mov
add
stc
mov
add
add
popl
add
into
xlat
add
jle
mov
add
add
push
push
lea
push
call
add
mov
sti
add
out
sahf
lods
sahf
cmpsb
in
mov
add
add
add
add
add
add
add
imulb
testb
xchg
push
add
mov
xchg
cwtl
std
add
jae
add
xorb
jle
add
hlt
pop
leave
push
add
add
pop
ret
xor
cmp
xor
adc
add
adc
and
adc
cmp
mov
cmp
xor
adc
jb
adc
mov
add
cmp
add
mov
in
or
sbb
rolb
or
call
ficoml
das
xor
sbb
std
mov
mov
sub
sti
xorb
mov
pop
lds
test
in
xchg
sahf
arpl
mov
stc
push
gs
aam
adc
mov
pop
inc
ret
mov
mov
mov
daa
and
pushf
push
nop
je
in
lds
or
ds
add
stc
and
inc
dec
or
mov
mov
jns
out
pop
shll
mov
incl
pop
lds
add
out
sahf
enter
xchg
cli
pop
jne
das
outsb
cmp
xchg
jp,pn
add
mov
jmp
shl
call
jp
jecxz
insb
mov
push
loop
and
inc
pop
sbb
stc
mov
pop
sarl
sti
jmp
out
data16
ret
je
insb
imul
xor
ss
js
shlb
adc
leave
scas
mov
aas
and
mov
jge
dec
fwait
inc
mov
testl
dec
js
inc
sub
jge
fsubl
fstpt
xlat
popf
aad
loopne
test
add
inc
push
inc
int
mov
inc
add
jp
mov
sar
fwait
loop
fidivl
hlt
xor
mov
fidivrs
adc
push
mov
or
outsb
rorl
das
inc
pop
test
bound
and
fucom
pop
mov
lds
inc
mov
icebp
jmp
pop
sub
sbbl
and
xchg
jno
or
xchg
into
rolb
test
out
inc
mov
xor
add
or
pop
jnp
mov
mov
arpl
das
sbb
push
dec
push
mov
mov
inc
aas
jl
cmc
rorl
dec
pop
lcall
jb
outsl
xor
imulb
jns
and
mov
scas
test
sub
clc
andb
mov
rol
icebp
xchg
mov
and
xorb
popa
call
adc
loop
sti
sub
cmp
int
sbbb
inc
cs
sub
ljmp
hlt
sub
lret
add
xor
xor
cmp
mov
xchg
inc
pop
jns
fbstp
mov
aam
ds
push
xchg
leave
lods
mov
dec
imul
loop
sahf
addl
xor
dec
lea
outsb
add
ja
add
lods
jge
movb
ret
pop
sbb
sub
cld
pop
lods
and
xchg
sbb
sbb
pop
pop
subl
jbe
xchg
idivb
shll
mov
mov
dec
xchg
popf
mov
cmc
or
sub
jge
icebp
push
cmpb
in
fidivrl
and
imul
pop
pop
cli
xchg
stc
xlat
adc
popa
andb
lret
xor
sbb
call
add
ss
clc
andb
ss
and
xor
test
fidivl
stos
sbb
inc
jo
movsl
mov
sbb
int3
dec
dec
inc
add
sbbb
fdivr
sahf
mov
dec
add
ret
cmpsl
mov
aaa
mov
sub
inc
jp
mov
aad
rclb
sub
sbb
cmp
jge
ljmp
fisttps
mov
cwtl
mov
out
iret
xorb
mov
pop
cmp
call
add
push
es
rcrl
xchg
popf
notb
clc
pop
or
xor
loope
es
add
dec
pop
cmp
mov
jmp
add
sarb
jae
lods
in
int
leave
rol
jno
and
sbb
pop
adc
push
mov
das
lods
lds
and
push
mov
xchg
or
and
addr16
inc
xor
lret
addr16
inc
push
iret
repz
shl
xchg
and
flds
or
ljmp
pop
and
push
dec
inc
lods
ljmp
cmp
push
cmp
lea
and
pop
aam
xor
mov
xor
jae
mov
test
addr16
je
cmpsl
dec
jg
mov
dec
stc
jg
jo
sbb
iret
jle
dec
adc
mov
insb
sub
mov
ja
sbb
mov
inc
jp
mov
imul
int3
imul
jbe
cmpsb
adc
cmp
out
subb
push
push
imul
mov
int
fnstsw
sbb
mov
push
mov
insb
sbb
in
ljmp
fldenv
jo
insb
fdivrl
cmp
xlat
data16
int
lds
adc
fiadds
hlt
in
fstpl
cs
adc
or
cld
adcl
or
push
sbbl
daa
pop
add
loope
mov
sbb
jle
mov
jge
lods
sbb
jg
int
out
push
sub
adc
lods
xor
mov
lret
in
sbb
or
imul
hlt
xor
or
jo
mov
jne
sbb
push
sub
sbb
jne
ss
push
icebp
mov
stos
ret
cltd
outsb
lods
test
int
cmpsl
mov
sti
adc
push
jecxz
stc
jno
mov
aam
dec
mov
pop
dec
sahf
insb
xchg
loopne
arpl
out
inc
fptan
hlt
sub
popa
inc
cmp
inc
push
inc
sti
ljmp
mov
js
xchg
mov
pop
xchg
xchg
movsl
push
pusha
push
outsb
std
loope
jo
sarl
mov
inc
stc
xchg
xchg
cld
add
ret
fistpl
add
gs
addl
fwait
or
adc
sub
mov
sbbb
jg
xchg
mov
cli
and
call
mov
or
cwtl
jno
xor
inc
out
sbb
sbb
cmpsb
adc
int
out
dec
mov
ja
adc
loop
mov
push
movsb
enter
fwait
pop
pushf
push
test
bound
push
add
jecxz
mov
aad
iret
stos
push
mov
cmp
sub
pop
sub
imulb
lods
dec
sbb
mov
outsb
std
inc
and
je
outsl
xor
mov
mov
leave
mov
imul
xchg
cmp
loop
mov
mov
mov
rclb
iret
jno
cwtl
dec
into
je
inc
icebp
test
in
insl
pop
xchg
pop
adcb
dec
mov
pushf
pop
and
sub
sbb
mov
push
fs
inc
jge
cmpb
jecxz
jg
inc
subl
das
sub
fsubl
rolb
xchg
cld
jb
arpl
cmp
inc
sub
popa
xchg
pop
mov
nop
lods
cli
push
xchg
repnz
xor
cmp
cmc
pushf
sub
push
sahf
loop
aaa
loop
cmp
jne
stos
into
inc
or
adc
mov
mov
cmp
xchg
add
fsubp
push
and
popa
leave
cmpsl
mov
aas
fistpll
cmp
ds
out
xchg
sbb
jae
std
dec
shl
rorl
js
rol
sti
pop
push
inc
fsub
or
and
xchg
pop
mov
add
mov
fsubrs
movsb
arpl
out
mov
pop
les
mov
stos
or
mov
fs
scas
and
clc
or
hlt
gs
cmpsl
addb
movsb
mov
mov
inc
add
or
add
sbb
pop
stc
mov
out
ja
pop
jbe
shrl
xor
push
cs
std
cmpsl
into
push
mov
bound
in
mov
fldenv
test
test
mov
mov
loopne
clc
aad
sbb
push
lods
dec
mov
incb
pop
sbb
jle
mov
xchg
sbb
push
mov
daa
and
sbb
mov
lret
shll
pop
aad
fdivl
adc
add
mov
and
pop
repnz
loope
mov
push
mov
mov
inc
xor
mov
sbb
xchg
sahf
mov
inc
sbb
cmpsl
adc
mov
insl
popf
add
sbb
fimull
ret
cs
sub
jl
mov
fstl
or
insb
cmpsb
fstl
cmp
sti
mov
lea
movsl
cmp
pop
mov
js
adc
addl
and
add
inc
add
pop
xchg
mov
push
mov
stc
scas
jge
roll
sahf
ljmp
xchg
mov
imul
or
call
and
lahf
jl
std
add
roll
sbb
sub
loopne
adc
notb
rol
mov
stos
ret
dec
push
gs
and
popa
sti
pop
test
cwtl
cltd
jbe
fistpll
and
jo
shl
je
mov
pop
sub
xchg
rcrb
mov
mov
cmp
pusha
mov
sub
pop
and
jge
cmp
dec
cmp
mov
add
adc
repz
pop
or
cmc
sub
js
pop
int3
push
dec
scas
cltd
push
mov
mov
sbb
push
fistpl
outsl
call
mov
adc
pop
cmp
divl
pop
out
pop
loopne
push
lock
rclb
stos
cmp
xor
ficoml
lds
xchg
adc
fisubs
xchg
mov
fidivrs
pop
sub
pop
out
mov
fldt
xor
inc
repz
addl
mull
and
push
mov
ja
jbe
bound
sti
inc
dec
inc
imul
out
or
repnz
push
xchg
and
mov
movl
fwait
adc
mov
je
jmp
nop
fwait
out
mov
sahf
jmp
out
jnp
lahf
movsl
test
popf
lret
adc
daa
aas
push
sbb
daa
xchg
sub
cli
negb
out
and
xor
mov
scas
into
outsl
mov
stos
dec
aaa
popf
inc
inc
popf
jmp
outsl
jg
loope
sbb
ret
jb
outsl
pop
dec
jmp
lret
outsl
gs
xor
or
outsl
out
xor
and
in
xchg
divb
scas
sub
sbb
jbe
pop
cmpl
lret
and
jno
popf
sbb
scas
out
mov
cmpsl
fs
xchg
pop
pop
fwait
push
fcomps
repz
xchg
and
xor
push
imul
insl
hlt
aam
cs
push
jp
mov
negb
push
xchg
gs
cmp
or
mov
out
mov
int3
add
repnz
dec
sbb
sbb
enter
jl
mov
cmp
mov
mov
dec
js
xor
je
jbe
shrl
fdivrs
adc
shrb
sbb
lret
push
movsl
pop
fiadds
add
mov
pop
sbb
adc
je
adc
inc
or
aas
ljmp
lea
jle
bound
jb
pop
jp
movsl
cmp
aaa
push
loope
jg
outsb
inc
cs
inc
loop
mov
mov
pop
or
inc
push
or
cltd
negb
jbe
push
movsl
mov
sub
lock
leave
sub
push
cmpsl
mov
fwait
out
insb
pop
out
add
xchg
cmpsl
into
std
out
adc
sub
je
lahf
iret
cmpsb
mov
popf
lea
jns
addr16
gs
sahf
xchg
mov
enter
cmp
push
cltd
stos
repz
mov
push
ja
insb
dec
pop
ja
aad
lret
sub
xchg
loopne
icebp
loopne
aaa
mov
out
jb
aas
sbb
shll
call
and
into
jbe
add
push
xchg
sbb
inc
lods
in
pop
inc
popa
clc
testb
xchg
xor
push
pushf
cs
mov
loop
inc
ja
dec
adc
jo
inc
cld
cmc
das
mov
pop
jmp
adc
sbb
loope
mov
sahf
or
mov
dec
out
push
leave
mov
xor
pushf
test
jno
jg
mov
fldcw
das
jb
inc
or
out
int
ljmp
pop
push
mov
loop
mov
pop
scas
cmpl
sbb
sbb
jb
ret
and
jo
shl
clc
mov
push
insl
insl
idivb
mov
mov
in
xor
or
test
cltd
or
mov
xor
cmp
pop
mov
push
imul
aad
out
icebp
popa
or
inc
loope
outsl
sahf
ja
shll
in
repz
out
leave
scas
jmp
cmp
adc
cmp
sbb
mov
lea
dec
and
mov
push
mov
dec
jmp
test
inc
sbb
insl
pop
fdivrp
inc
sub
inc
mov
in
sub
lahf
adc
inc
add
dec
mov
dec
shlb
mov
clc
and
aad
sub
inc
mulb
adc
test
ficoms
sub
adc
push
out
mov
std
pop
imul
fidivs
int
mov
fwait
add
jl
jl
stos
and
enter
decb
or
cmpsl
mov
icebp
jl
data16
xorb
jb
test
shlb
mov
mov
icebp
in
sbb
mov
sti
mov
mov
cmpsl
test
lods
inc
in
or
mov
add
movsb
xchg
xor
adc
or
add
fnstenv
pop
insb
pop
fisttpll
fstpt
outsb
gs
les
or
cli
inc
loopne
xchg
stos
outsb
dec
cmpsl
add
test
jge
call
push
xchg
daa
andb
push
or
jmp
cli
cld
in
aad
jl
inc
ret
aas
cwtl
clc
test
mov
inc
xchg
stc
fldl
mov
stos
cmp
push
inc
push
sarb
out
addr16
dec
and
jmp
lret
fiaddl
and
jae
xchg
ret
pop
scas
xchg
pop
sub
call
lahf
js
daa
jge
lock
add
pop
xor
cmp
scas
cmpb
popf
out
ljmp
data16
lcall
push
cltd
pop
mov
adc
pop
or
aam
and
jae
push
cmpsl
aad
add
mov
ret
int3
jp
cmpsb
or
push
dec
sub
adc
enter
add
js
popa
xor
in
xchg
lea
sub
sti
or
iret
sub
popa
and
lods
push
pop
jl
inc
aad
push
jp
sbb
or
ss
test
inc
loope
or
mov
jl
mov
sbb
sarl
ret
pop
inc
lea
push
movsb
pop
int
jl
dec
fstpt
addr16
loop
cmpsl
dec
mov
pop
call
call
mov
mov
pop
add
jmp
enter
fldl
mov
mov
cmp
fs
aad
orl
ja
stc
fdiv
inc
ficomps
push
sti
dec
mov
lock
popa
lcall
jecxz
subl
sbb
xlat
adc
add
push
cmp
jle
sbb
adc
pop
loope
test
mov
inc
loop
adc
add
hlt
test
mov
rclb
mov
mov
xchg
mov
sahf
xchg
sbb
mov
dec
lea
xrelease
adc
arpl
xchg
dec
cmp
pop
adc
fldt
sbb
mov
push
pop
or
mov
movsl
insb
cmp
outsb
fs
xor
cs
push
mov
stos
mov
test
jno
stos
push
push
add
xor
and
bound
push
mov
addr16
add
jp
and
dec
inc
aad
fxch
sbb
outsb
insl
mov
stc
in
outsl
out
je
cmp
sbb
push
sbb
aas
mov
in
add
fidivl
cmp
pop
stos
jl
jnp
xor
aad
cmp
cmp
insb
cmp
sbb
das
ss
pop
cmp
pop
cmpsl
jno
ljmp
inc
mov
cmc
out
mov
add
mov
add
fists
xlat
sbb
lret
inc
dec
push
mov
sub
cltd
mov
xor
push
sub
sub
jns
loopne
push
push
out
fwait
lahf
push
mov
ret
push
add
jmp
clc
mov
arpl
and
mov
mov
test
jns
call
mov
ret
or
and
jae
insl
mov
and
daa
inc
je
push
push
bound
lcall
or
and
mov
nop
pushf
and
inc
mov
lret
add
fcmovbe
aam
fld
std
add
jne
or
pusha
mulb
arpl
fldcw
in
fistl
jle
adc
adc
pop
outsb
jns
sbb
fstl
sarb
cmp
sub
in
fiadds
loope
jmp
mov
mov
scas
adc
pop
or
and
idivb
aad
es
lods
jp
sti
mov
lods
add
bound
pop
je
sti
xchg
lret
add
push
cltd
xchg
xor
sbb
lret
push
mov
lock
add
cli
push
cli
sbb
into
push
pop
xchg
arpl
adc
nop
loop
iret
xor
fwait
pop
push
xor
push
mov
push
xor
movsb
adc
mov
aaa
add
jp
shlb
push
mov
cmpsb
in
dec
loop
in
fs
orw
cltd
mov
lcall
fdivs
mov
lock
add
sti
incl
and
xchg
hlt
xchg
push
psllw
lock
int
push
fdivs
call
sbb
mov
and
dec
inc
std
sub
sub
out
mov
mov
sbb
mov
mov
lds
and
stos
jg
mov
xor
and
mov
stos
aas
int3
repnz
adc
adc
sub
adc
testb
jl
pop
xor
mov
stc
pop
and
inc
out
adc
aad
mov
cmpsb
in
inc
mov
popf
jb,pt
adc
and
ljmp
jae
fistl
jge
sbb
and
mov
add
cmp
lea
xchg
stos
imul
push
lahf
or
fcmovb
xchg
mov
sahf
pop
mov
cltd
hlt
cwtl
sub
sub
push
adc
rcrl
mov
pushf
or
mov
imul
dec
pop
add
bsr
std
xchg
movsb
inc
push
mov
and
scas
ljmp
test
pop
lods
insl
add
adc
bound
gs
cmc
sbb
ljmp
add
test
fs
sahf
in
push
sub
pop
fsub
insl
outsb
push
inc
ficoml
jb
push
int
je
cmp
push
xor
xor
es
pop
flds
out
out
add
dec
test
sahf
enter
mov
lcall
push
or
pop
in
pop
or
out
add
pop
mov
mov
repz
ret
xchg
add
js
mov
xor
pop
push
mov
test
adc
imul
scas
jmp
pop
hlt
lcall
xchg
and
shl
pop
cmpsl
cmp
sbbb
add
div
adc
pop
nop
jl
or
or
fisubrs
adc
mov
mov
mov
loop
mov
rdmsr
adcl
loopne
inc
mov
push
xlat
adc
xor
cmp
fldcw
pop
jnp
ja
lea
cwtl
push
popf
xor
sub
add
xchg
leave
jnp
in
fcmovbe
jbe
test
mov
repnz
and
pushf
stos
add
cmp
or
lock
push
mov
mov
pusha
jecxz
cwtl
jno
mov
lods
mov
mov
sbb
scas
in
enter
jbe
inc
aas
jl
jns
xor
xchg
repz
daa
ret
add
imul
sahf
pop
pop
rclb
xchg
loope
fcom
cmp
pop
pop
test
imul
arpl
add
pop
xor
shlb
sahf
ljmp
insl
push
pop
int
enter
mov
fildll
sub
fimuls
mov
pushf
adc
test
and
cld
mov
mov
stc
pop
cmp
out
imul
loope
push
rcll
iret
mov
dec
aaa
stos
jmp
sahf
mov
leave
outsb
and
insl
fsubs
mov
dec
mov
outsb
jl
imull
mov
add
pop
popf
sbb
daa
in
mov
loope
cmp
cmp
add
jb
test
daa
sbb
xchg
add
pop
outsl
int3
jo
fs
cmp
fs
stos
inc
xor
mov
repz
mov
push
test
ljmp
cmpsb
shll
mov
xor
fstl
scas
inc
mov
mov
mov
ljmp
pop
mov
jbe
add
mov
insb
pop
sub
sbb
bound
aad
into
sbb
lea
mov
ljmp
fldt
sbb
inc
jl
pop
mov
xor
push
repnz
push
sbb
rorb
mov
mov
xchg
xor
iret
inc
inc
dec
xchg
dec
int3
and
iret
repnz
ret
and
sbb
mov
ret
fdivr
xchg
repz
dec
cltd
xchg
cwtl
dec
inc
iret
mov
sbb
adc
into
cmp
jmp
stos
outsb
cmc
cwtl
dec
mov
add
lcall
test
push
push
popl
xchg
push
and
outsb
icebp
fs
push
cmp
ja
clc
and
ss
sub
shlb
push
push
and
mov
xor
jmp
adc
lahf
nop
mov
and
stos
dec
cmpsb
sbb
jns
and
xchg
add
sub
jo
sub
xor
daa
std
jne
out
inc
mulb
cwtl
gs
fsubrs
jo
mov
outsl
adc
cmp
mov
test
adc
push
xor
cli
fildll
inc
push
ror
scas
fstpl
mov
insb
jmp
clc
mov
iret
and
in
jne
mov
mov
lret
push
loope
or
in
mov
sarb
loopne
mov
and
mov
popl
jnp
mov
aaa
cli
xlat
xchg
dec
loope
or
notb
add
inc
data16
jge
mov
push
add
pop
dec
loope
das
inc
in
mov
dec
fnstsw
mov
iret
cwtl
ljmp
dec
not
lahf
sbb
jp
imul
xchg
sbb
add
jne
adc
aad
outsl
and
jo
pop
jle
jge
mov
mov
sub
cmp
xchg
cmp
cmpsb
in
mov
mov
push
ss
mov
push
leave
jmp
ret
shll
or
adc
xor
add
mov
xchg
mov
in
lret
test
sbb
in
mov
xchg
sbbb
mov
cli
sahf
mov
push
add
add
imul
jb
push
xlat
sbb
mov
insl
fwait
lea
push
fsubrp
push
xchg
ds
ljmp
sbb
jg
dec
cmc
out
sub
pop
cmp
pushf
add
jo
lret
fisubrl
aad
cltd
addr16
bound
bnd
in
sbb
jecxz
xor
je
jle
mov
mov
add
lret
jl
fcom
jns
sub
cld
lcall
and
orb
mov
rolb
sbb
imul
ret
jo
push
pop
fisubs
cmp
ret
cwtl
js
dec
mov
adc
test
lods
adc
lds
jae
or
outsb
jge
aas
loopne
add
sbb
in
ja
in
into
xor
and
xor
fisttpl
ret
push
es
push
sub
mov
xor
add
or
and
or
out
sub
inc
mov
cmp
xor
repz
ljmp
rcl
adc
lds
pop
js
mov
adc
pushf
rolb
xchg
das
jecxz
sub
lock
popf
lods
aad
cld
or
ss
ja
cmp
jbe
adc
cmpsb
das
mov
imul
mov
dec
ffree
mov
cmp
repnz
fxch
pop
loope
imul
push
cmpsl
ss
loope
mov
dec
fisttps
or
ljmp
pop
lret
in
repnz
sub
scas
es
iret
ret
fcoml
add
mov
rcrb
mov
mov
lret
mov
dec
sub
in
das
movsl
aaa
lcall
shr
mov
ja
xchg
xchg
cltd
cltd
bound
repnz
xchg
adc
adc
sti
add
add
movsl
ret
jecxz
cltd
in
loopne
jns
es
add
push
cmpl
lcall
cmpsl
xlat
loope
xchg
jne
cmp
and
mov
repz
movsb
add
pop
sti
pop
add
xor
xor
cmp
mov
test
ret
push
inc
pop
add
pop
movsb
mov
inc
aad
xchg
pop
lcall
sub
mov
push
mov
xchg
js
jmp
inc
push
cmpsb
in
pop
add
or
xor
lea
into
and
xchg
std
into
sub
pop
and
sti
jne
mov
lcall
cmpl
rcrl
out
adc
cmp
xor
cmp
shll
pop
mov
or
dec
mov
inc
mov
lds
and
mov
jae
stc
movsb
rcrb
and
mov
jecxz
add
mov
fcompl
xor
jno
popf
loope
push
push
imul
out
test
call
ret
ljmp
adc
jge
andl
je
inc
or
mov
sbb
jnp
les
jnp
jmp
inc
sub
pop
jno
enter
call
nop
pop
cmpsb
sbb
stos
dec
pushl
into
ret
sti
outsb
mov
ret
push
sub
cmp
mov
iret
fistpll
dec
movsb
arpl
add
pop
je
in
and
shrb
and
fldcw
fs
fcmovbe
out
cmp
frstor
xor
orb
test
push
add
ljmp
cmp
jnp
js
xlat
mov
test
pushf
and
sub
dec
daa
pop
xchg
loop
sub
xor
pushf
lods
xchg
push
cltd
and
fwait
push
fsubs
push
push
iret
inc
adcb
cmc
cmp
xchg
shrl
jo
lods
sub
pop
rcrl
and
ja
or
push
mov
xorl
dec
xchg
add
cwtl
fsub
jl
bound
xchg
fisubrs
and
and
pop
int
jne
inc
ljmp
lcall
pop
dec
lcallw
and
jb
test
sub
into
fdivl
adc
iret
jne
and
xor
push
shl
pop
loope
sti
aad
fistpll
shlb
mov
lret
test
pushf
bound
fildl
xlat
or
add
pop
dec
pusha
push
psubsb
sti
xorb
sti
imul
inc
sbb
in
in
cli
into
xchg
jge
iret
imull
mov
data16
sarb
fwait
bound
pushf
or
pop
push
and
mov
sbb
dec
jle
leave
cmpsl
push
mov
movl
add
add
cwtl
clc
mov
test
mov
scas
or
decb
and
faddl
fxtract
addr16
out
xchg
lret
mov
dec
movsl
mov
les
jb
jnp
popf
dec
test
jg
sub
negb
es
clc
push
cmp
or
insb
imul
mov
mov
xor
in
ds
cmp
mov
mov
aas
scas
outsl
jnp
mov
sti
push
pmulhw
mov
xchg
mov
push
lods
mov
mov
shrl
mov
pop
cmp
icebp
out
cmpsl
in
andl
scas
sbb
sbb
fstl
and
sbb
test
xchg
sub
pop
jecxz
repz
jne
adc
in
push
jg
mov
sbb
dec
push
adc
leave
adc
mov
xchg
popa
push
mulb
out
roll
adc
adc
pop
out
cmp
pop
fdivp
addr16
fs
or
mov
sbb
or
sub
loopne
inc
sub
aad
adc
test
xchg
xor
jge
iret
leave
adc
cmc
out
fidivl
adc
push
loop
push
or
xor
cmp
ss
pop
test
push
sahf
fisubs
iret
fisttpl
dec
loopne
cltd
adc
and
ds
sub
mov
push
push
mov
push
fsubs
add
hlt
out
les
inc
lock
sub
push
dec
bound
aam
arpl
xchg
jns
xchg
imul
or
push
repz
adc
frstor
je
scas
pop
mov
stos
mov
push
cwtl
popa
push
sar
mov
xor
inc
and
xor
enter
mov
imul
adc
pop
push
loope
mov
adc
adc
fldl
aad
dec
cmp
out
pop
sbb
outsb
pop
jb
int
gs
xchg
xchg
into
jbe
test
ret
notb
imul
mov
orb
jecxz
pusha
push
pop
adc
mov
lods
mov
jl
call
or
dec
or
in
imul
gs
scas
je,pn
adc
mov
pushf
xchg
lret
jb
xchg
movsb
xchg
jg
mov
mov
cmp
xor
push
pop
idivb
cmp
fwait
stos
jp
and
mov
and
mov
es
xchg
arpl
adc
into
cli
mov
inc
mov
enter
mov
push
popf
pop
mov
lahf
and
adc
mov
clc
test
aas
pop
iret
pop
fidivrs
subb
outsb
lods
cmp
popa
xor
out
jae
sarb
mov
inc
sub
shl
jp
dec
insl
mov
loopne
imul
jo
sub
movsb
jo
testl
ret
dec
or
push
sub
shlb
lahf
sbb
hlt
adc
xchg
jo
cmp
dec
mov
push
mov
cmp
mov
and
cld
hlt
cmp
imul
cld
int
mov
add
jl
ljmp
add
lahf
mov
push
sti
lea
sub
mov
sub
lret
pushl
xor
pop
lods
mov
loop
in
mov
fs
mov
cmp
adc
ja
push
test
xor
jecxz
stc
jne,pt
arpl
jo
adc
add
jns
pusha
inc
imul
daa
or
mov
data16
mov
pop
push
dec
call
add
mov
cltd
outsb
mov
mov
xchg
mov
jns
shlb
fsubr
test
out
cmp
inc
dec
shrl
lea
xchg
gs
gs
mov
or
mov
aad
adc
ret
out
dec
or
add
movsl
pushf
jecxz
mov
mov
mov
dec
imul
and
inc
cmpxchg
int
aad
stos
incb
test
mov
mov
xchg
inc
ret
iret
pop
in
or
ret
cmp
jp
sbbb
pusha
mov
jno
addb
and
adc
jb
add
adc
sarl
idivl
or
ja
pop
insb
or
xchg
add
dec
repnz
adc
cmp
jo
es
int
mov
fstpl
cmp
cmc
hlt
shrl
inc
imul
jae
sarl
pop
pop
adc
cmp
arpl
js
call
pusha
aam
and
xchg
gs
test
mov
dec
xchg
mov
sub
mov
repz
imul
imul
dec
adc
movl
fsub
pop
scas
popw
or
cli
ss
push
in
cs
pop
imul
lods
mov
mov
rcr
inc
xchg
mov
leave
scas
push
fdivrs
loop
in
mov
loope
daa
lcall
push
lods
fstl
insl
pop
dec
adc
arpl
xchg
stc
add
loopne
fmulp
push
push
pop
or
out
clts
test
xor
pop
sti
or
jbe
xor
imul
sbb
outsb
sub
shlb
int3
rcll
jl
add
roll
cmpsb
inc
lcall
lea
mov
popa
inc
movq
inc
jae
fwait
mov
dec
data16
sbb
jecxz
std
repnz
or
pop
std
jecxz
adc
and
fwait
cmc
hlt
dec
mov
fnstcw
mov
inc
pop
or
sbbb
cmp
cmpsl
inc
xchg
inc
mov
push
rol
aad
sahf
ljmp
mov
call
and
xchg
pop
fiadds
pop
jo
cltd
scas
fwait
pop
xor
lock
lds
imul
cltd
mov
push
add
and
push
std
xor
fistpl
pop
xorl
sar
outsb
arpl
cmp
jmp
es
imul
xchg
inc
inc
push
es
repz
lods
jo
inc
sbb
jmp
aam
enter
sbbb
inc
mov
mov
cmp
icebp
fnstenv
mov
mov
das
data16
outsb
push
cmp
incl
mov
adc
sub
es
rol
subb
jecxz
push
cli
jl
and
call
mov
loopne
stos
push
test
xor
adc
arpl
sub
and
cltd
inc
clc
dec
ljmp
rol
ljmp
mov
cld
loop
jp
fistpll
add
adc
mov
mov
pop
cli
je
cmc
mov
push
fistpl
mov
aas
adc
bound
push
dec
insl
pop
cmp
ds
sub
mov
pop
mov
sub
and
insb
cs
dec
shlb
add
cmp
loop
mov
mov
jecxz
icebp
add
or
push
push
push
outsl
lea
dec
or
add
add
sub
sti
xchg
cmpsl
call
push
push
out
ljmp
test
mov
ret
andl
sbb
pusha
sarb
sbb
outsb
dec
sub
push
pop
loop
ret
push
into
mov
in
test
ja
dec
xchg
xchg
jge
adc
fisubrl
sub
dec
aas
in
sub
adc
cmp
in
hlt
or
dec
sbb
mov
adc
test
aad
sub
xor
pop
mov
dec
in
cs
ss
xor
popl
mov
dec
xchg
rcl
mov
fsincos
lea
enter
out
ljmp
pop
lcall
jg
or
mov
cmp
sbb
int3
fcom
push
jo
popf
mov
or
sbb
inc
fdivr
xchg
xchg
daa
aas
adc
push
dec
xchg
mov
test
inc
aad
ss
test
cmp
inc
pusha
in
adc
int
loop
mov
enter
push
and
std
push
pop
lret
es
pop
mov
sbb
out
inc
loope
add
xchg
push
rsm
or
cmp
push
mov
xchg
sbb
pop
out
mov
adc
into
xchg
movsl
sbb
outsb
lods
xchg
clc
mov
addr16
insb
jae
nop
clc
push
out
pop
popa
inc
inc
roll
movl
adc
fcmovne
mov
push
push
mov
dec
lea
imul
mov
popf
mov
lods
adc
mov
cmp
fldcw
xor
mov
xchg
cld
imul
add
cwtl
shlb
popf
repnz
xor
insb
gs
ja
insb
pop
out
push
and
fwait
mov
je
mov
lret
test
cltd
jl,pt
cmc
push
nop
fcomps
daa
scas
push
pop
pop
out
leave
data16
vmovd
and
mov
cmp
dec
int
hlt
fldenv
mov
push
mov
add
dec
jmp
scas
loop
insl
pop
push
cmpsl
jbe
mov
pop
arpl
cld
call
mov
jae
lea
and
je
push
mov
mov
mov
sub
outsl
repnz
shll
stos
mov
fs
nop
push
int
das
popf
xor
out
jno
mov
cs
cwtl
xor
in
fisubrl
lds
inc
mov
push
cmpsl
mov
ret
cwtl
bound
adc
je
arpl
or
cwtl
push
or
add
outsb
popa
cmp
push
xor
dec
cmp
xchg
mov
loope
movsb
icebp
std
in
jno
stos
rcl
inc
push
hlt
es
or
pop
in
and
push
addl
pop
xchg
or
sub
mov
shll
jbe
in
ret
mov
repnz
lahf
xor
into
or
ds
mov
jl
in
push
adc
and
xchg
pushf
inc
fisubrl
popa
mov
jae
insb
xchg
xchg
imul
dec
cwtl
daa
xchg
push
cmp
inc
scas
dec
cmpsl
xor
ret
cmc
pusha
sbb
lret
xor
cmp
mov
and
and
and
cwtl
loope
data16
xchg
out
int3
push
sbbb
jg
mov
std
sbb
push
adc
js
dec
jecxz
imul
pmulhuw
sub
ret
jnp
adc
das
push
xchg
mov
inc
sti
fstps
jecxz
cmp
ja
out
xchg
inc
into
subb
cmp
sub
clc
test
rcrl
in
inc
pop
enter
inc
fidivrl
int3
pop
sbb
and
push
push
lock
or
into
les
into
pop
je
and
sbb
aam
inc
xchg
push
and
xlat
inc
mov
addr16
push
int3
push
lds
loop
fs
shl
mov
lahf
jge
dec
adc
sub
lahf
sbb
jp
mov
and
adcl
aam
pushf
jae
icebp
sub
dec
adc
lcall
imul
and
pop
adc
ret
int
nop
jmp
adc
push
xchg
loopne
dec
sbb
outsl
dec
nop
test
dec
xchg
push
lret
in
pusha
cmp
mov
cltd
adc
dec
cmp
dec
hlt
cmpb
push
pop
adc
dec
add
cmpsl
and
add
notl
inc
inc
das
jg
gs
adc
dec
cwtl
pusha
pop
push
mov
rorl
insb
ja
xorb
cltd
mov
lret
mov
dec
xor
add
push
popf
rolb
xchg
xchg
sahf
push
xchg
jne
mov
stc
je
jecxz
adc
sub
lock
pop
fsubs
call
mov
xchg
mov
mov
mov
jne
in
and
into
inc
adc
jecxz
enter
push
or
lret
rcll
or
test
mov
mov
push
in
imul
jb
ds
fcmovbe
dec
jnp
insb
or
pushf
xor
inc
mov
dec
cmp
xchg
lcall
jne
sub
movsl
dec
jmp
idiv
popa
mov
test
mov
idivb
sbb
and
adc
in
fbstp
in
add
arpl
sub
ja
test
xchg
xchg
cmp
and
mov
lea
pop
xlat
or
in
dec
rcl
add
jp
fs
push
nop
push
mov
sbb
out
and
fdivrl
gs
ja
and
xor
dec
jecxz
jo
shl
mov
jp
lcall
inc
out
arpl
sbb
fimull
mov
sbb
adc
lods
cmp
inc
sub
cltd
xchg
mov
mov
sub
adc
fs
or
push
mov
mov
pop
xor
out
adc
addr16
sub
dec
pop
push
clc
aas
daa
lcall
daa
sub
jecxz
hlt
lea
std
ss
mov
xchg
mov
lret
mov
sub
fiaddl
cltd
jecxz
xchg
daa
add
repz
jge
push
fisubl
popa
mov
xchg
pop
in
scas
push
sbb
mov
add
subb
dec
clc
mov
pop
leave
pop
es
xchg
or
xorl
fwait
inc
mov
sbb
test
arpl
mov
shlb
sbb
fs
addl
jns
inc
popf
repnz
inc
pushf
out
loopne
pop
or
mov
lret
gs
fidivl
jmp
xchg
sbb
mov
adc
mov
or
dec
mov
push
mov
xchg
loopne
push
orb
pushf
into
cwtl
xor
inc
xchg
push
lock
fs
sbb
adcb
xchg
iret
repnz
or
or
loop
repz
add
outsl
xchg
pop
loop
sub
pop
sbb
push
into
and
jmp
inc
xchg
das
add
mov
cmc
shrb
push
mov
sbb
inc
call
cmc
mov
in
mov
or
pop
xor
push
out
scas
clc
lahf
mov
mov
out
out
test
arpl
mov
xlat
outsb
cmpsl
daa
adc
adc
mov
cli
dec
push
mov
mov
push
les
push
pushf
push
addr16
pop
adc
jno
lds
dec
xor
inc
mov
sub
movsb
dec
aaa
sarl
movsl
pop
clc
and
xchg
mov
pop
pop
mov
sub
test
adc
lock
ds
mov
gs
and
in
mov
aad
outsl
push
mov
inc
mov
lcall
add
pop
xor
push
sbbl
push
ss
adc
pop
fs
adcl
neg
and
xchg
cmpsb
test
mov
aam
add
int
insl
pop
dec
mov
adc
push
xchg
and
enter
jl
ljmp
movsb
outsb
stc
lcall
test
jae
push
sbb
mov
scas
pop
nop
out
push
xchg
int3
bound
jbe
cltd
insb
aaa
test
adc
popa
mov
jl
cs
or
stos
dec
cwtl
add
xchg
mov
lret
inc
fisubrs
mov
lret
sbb
jnp
out
pop
mov
sbb
test
loopne
dec
jmp
loopne
scas
mov
ret
jb
mov
scas
xor
jo
mov
xor
lahf
or
push
je
sub
mov
test
adc
loopne
jns
jl
bound
aam
lret
mov
mov
fs
jbe
lret
xchg
inc
mov
data16
dec
dec
dec
ds
xor
mov
pop
inc
add
sbb
mov
xchg
js
sub
loopne
in
xchg
lods
mov
js
addl
jno
push
xchg
pop
pop
lods
mov
nop
loop
cmpsb
fstpt
lret
add
add
jno
push
push
sub
js
out
mov
lret
call
adc
loopne,pn
mov
popl
push
decb
inc
jl
mov
and
lods
sahf
inc
mov
stos
jae
dec
pushf
adc
add
ret
insb
jnp
inc
xor
int
inc
cwtl
push
js
cwtl
ror
xor
cltd
push
or
mov
insb
sbb
fbstp
xor
mov
xor
ss
inc
xor
jnp
push
jp
pushf
sub
fadds
in
cmpsl
lcall
loop
sti
lea
fistpll
rclb
mov
ja
inc
outsl
mov
jae
xor
mov
ret
push
test
or
enter
mov
xor
adc
lods
sahf
iret
jbe
loop
jle
jae
nop
pop
mov
mov
mov
pop
pop
cltd
and
mov
arpl
xor
aas
add
mov
sub
das
ja
fmull
pop
sahf
repnz
jg
loop
jecxz
or
push
mov
cs
push
jbe
leave
jl
das
push
jge
cli
xchg
inc
enter
sub
push
dec
mov
test
jno
pusha
mov
pop
outsl
and
pop
mov
push
push
or
pop
jno
add
cli
xchg
cmpl
gs
mov
js
xchg
lahf
dec
dec
cld
data16
sbb
fistl
or
orl
pushf
shrl
inc
push
mov
adc
push
fiaddl
and
jg
cs
ljmp
out
movsl
cmpb
xchg
call
test
cmpl
dec
in
aas
jo
pop
test
jbe
popf
ret
lods
mov
icebp
inc
jg
xor
and
ficompl
fsts
mov
inc
or
in
pop
stos
insl
lahf
xor
xchg
cli
sub
mov
mov
mov
fldenv
test
adc
out
leave
and
push
icebp
jle
xor
adcl
aad
sbb
mov
sub
mov
dec
add
push
adc
fs
jge
sahf
add
cmp
jg
sbb
pop
jns
push
mov
cltd
mov
xor
cmp
inc
mov
jbe
cltd
rorl
imul
mov
ds
mov
or
filds
loopne
add
dec
nop
dec
es
mov
out
inc
shlb
xor
pop
stos
mov
push
mov
popf
movsl
icebp
dec
jns
sub
dec
sbb
rep
and
fadds
add
in
clc
push
add
xor
push
mov
add
mov
sub
test
mov
cltd
push
or
out
lea
xor
out
je
test
leave
push
shrl
inc
or
fwait
imul
nop
pop
call
xchg
sbb
mov
jns
outsb
adc
add
fidivs
stos
cmp
sbb
mov
jnp
jle
mov
popf
jl
lods
and
test
dec
push
cmpb
add
or
sub
cld
out
outsl
push
fwait
sbb
loopne
adc
mov
test
adc
and
fldl
push
sbb
jg
lods
jo
mov
test
cld
aaa
cld
and
sub
gs
idivb
cmp
rorb
mov
les
sub
sbb
xor
int
loope
mov
xchg
pop
imul
test
out
jp
movsb
pop
out
iret
or
movsb
pop
cmp
das
lods
in
mov
pop
cmp
stos
in
lret
and
aas
jecxz
mov
or
mov
add
mov
mov
test
mov
xchg
test
addr16
pushf
cltd
jl
gs
fildll
nop
xchg
sbb
xchg
and
mov
push
fwait
popf
test
js
popf
dec
inc
pop
mov
push
pop
rcll
scas
or
cltd
movsl
outsb
mov
push
movsl
shll
fcomps
mov
inc
sahf
mov
loop
mov
int3
xchg
int3
mov
jb
test
add
jle
hlt
jmp
pop
fsub
repnz
dec
loopne
and
xorl
and
sbb
test
jmp
mov
scas
inc
cmpsl
mov
insl
push
xchg
push
xchg
or
out
pop
out
aad
push
sub
dec
je
cmp
xor
arpl
fidivrl
mov
jno
lret
loop
add
das
sub
pop
fidivs
adc
add
js
stos
mov
adc
fistl
cmpsl
mov
mov
or
add
lret
mov
or
xchg
push
ljmp
xchg
int
pop
sbb
je
cmp
stos
outsl
divb
push
sbb
dec
pop
and
cli
nop
cmpsl
sub
jns
jb
fnstsw
ds
dec
in
inc
test
insb
cmp
cmpb
nop
cli
and
ret
pop
jg
sarb
add
push
cmpsb
inc
push
or
scas
pop
imul
test
jb
in
fimuls
nop
and
sub
outsb
jne
pop
out
add
mov
sbb
and
push
lret
cmp
jnp
dec
stos
add
xor
pop
xor
addb
in
inc
fcomi
xor
jno
loope
loop
outsb
in
fcompl
cmp
jp
cmp
imul
fwait
mov
adc
je
add
mov
sbb
lret
dec
push
ja
rclb
dec
and
add
jbe
inc
sahf
add
mov
jmp
and
int3
dec
dec
xchg
xchg
insl
push
rorl
push
sbb
cwtl
add
aaa
add
and
fnstsw
pop
mov
mov
add
notb
mov
fwait
mov
and
jp
test
outsl
mov
mov
cmp
add
mov
cmp
nop
push
mov
and
cld
xchg
les
scas
pop
sub
lret
sbb
sti
pop
rep
les
inc
inc
push
int3
push
test
sti
mov
loop
ljmp
inc
sub
jnp
lret
xchg
arpl
aaa
mov
jb
fstp
pop
enter
and
mov
fisttpll
or
xchg
cmp
repz
ja
adc
es
pop
shl
mov
sbb
push
ljmp
adc
add
lock
ss
les
call
out
xor
mov
xchg
sub
adc
inc
or
out
cmp
push
leave
jp
gs
in
mov
mov
mov
or
js
dec
fucomip
jb
mov
lds
xchg
sbb
pop
ret
call
and
add
outsb
icebp
adc
fadds
pop
mov
dec
lcall
xor
sbb
aaa
lahf
sub
inc
les
insb
sub
pushf
stc
pop
cmpsb
dec
out
xlat
jo
dec
test
xor
out
mov
xchg
incb
rcll
push
daa
inc
call
lahf
cmp
lods
in
sub
clc
iret
lods
shll
mov
int3
lcall
cmp
push
pusha
mov
sub
xchg
icebp
cmp
popf
fstp
mov
bound
jp
push
mov
sbb
push
mov
in
mov
dec
pop
cli
repz
lods
inc
adcl
aam
or
jg
sub
fdivr
pusha
lret
imul
push
lock
mov
or
ret
lret
push
repnz
cltd
jg
icebp
orl
cmpsl
xchg
les
ds
test
inc
mov
incb
mov
push
dec
xchg
mov
mov
in
loopne
and
cmp
aad
or
fsubrl
xchg
outsb
out
inc
mov
xor
daa
mov
or
stc
xorb
add
jnp
fisubrs
mov
leave
nop
cmc
shrl
loopne
lret
fs
call
or
mov
test
cmpsl
insl
nop
popf
pop
xchg
sahf
xchg
cmpsb
jbe
test
loopne
mov
decb
add
daa
rclb
shl
mov
sub
addr16
jp
cld
push
test
inc
and
xchg
sbb
jge
daa
mov
pop
sub
stc
inc
mov
inc
push
in
mov
jnp
dec
dec
add
adc
loopne
inc
push
cmp
xchg
cmpsb
push
dec
scas
cmp
test
out
cmpsb
push
push
fistl
jmp
xor
addb
add
in
shl
je
ret
jge
cmp
mov
adc
sti
xor
sbb
pop
dec
jecxz
mov
jg
push
inc
lret
adc
inc
aas
mov
pop
cmp
hlt
in
push
fmuls
sub
sahf
xor
loopne
pop
cmpsl
popf
sarl
jl
inc
sahf
imul
mov
aam
cltd
fs
xor
mov
or
add
jmp
cmp
mov
inc
gs
mov
dec
stos
sbb
jae
jo
push
dec
sahf
repnz
test
stos
lahf
loopne
and
push
stos
les
xor
outsb
xchg
cmp
adc
pop
mov
jmp
hlt
sub
push
and
mov
mov
leave
inc
inc
mov
pop
jb
pop
pop
aaa
pop
push
sar
adc
repnz
push
sbb
gs
fdivs
ret
sub
ljmp
xchg
stc
xchg
aam
sub
loope
dec
aad
jae
std
xor
test
mov
das
mov
jnp
sub
sub
das
mov
mov
push
arpl
mov
lods
ljmp
push
dec
add
dec
mov
inc
mov
shrl
and
jae
xchg
ljmp
xor
xor
cltd
or
fdivrl
inc
rcll
ds
pop
push
hlt
add
sarl
jmp
aas
out
out
xor
imul
int3
push
mov
stos
xchg
loope
test
inc
cltd
mov
sbb
pop
in
sbb
lret
mov
bnd
cli
mov
in
xchg
or
dec
jne
les
cmpsl
fwait
repz
ret
stos
fidivrl
mov
push
clc
fdiv
nop
sbb
xchg
loope
or
aad
cwtl
das
mov
xchg
push
inc
mov
or
aad
sarb
jbe
test
or
or
cmp
cmp
scas
or
dec
pop
filds
imul
cmp
xchg
test
arpl
fs
or
adc
add
adcb
in
mov
and
das
or
daa
gs
lods
int
lock
popf
sub
scas
cmp
shl
push
xlat
sub
idivl
imul
stos
lcall
cmp
jb
into
jns
clc
insb
les
std
dec
cmpsl
jle
pop
das
and
xchg
out
in
mov
cltd
jae
lds
scas
sbb
jb
loopne
jno
mov
jne
rcll
or
xlat
and
ficomps
jne
stos
adc
and
mov
cli
outsl
cmp
dec
mov
gs
dec
js
mov
dec
iret
push
mov
movsb
and
xor
push
les
mov
mov
movsb
daa
or
int3
jnp
ret
mov
adc
in
mov
lcall
mov
lods
gs
loopne
shr
mov
pop
mov
and
insb
mov
push
mov
lahf
movsb
push
jae
pop
pusha
je
xor
or
jl
xchg
imul
mov
mov
jle
cmpsb
fistpll
push
mov
inc
lret
nop
sub
and
pushf
xchg
xorb
ja
lcall
movsl
jb
scas
pushf
pop
pop
ja
repnz
pop
inc
adc
and
lods
sbb
xor
lahf
xchg
pusha
adc
fadd
or
scas
jae
adc
call
jecxz
add
pop
xor
jo
fadds
xchg
mov
outsb
jae
sbb
rolb
push
mov
test
xor
lea
or
pop
stos
stos
jl
sub
mov
repnz
pop
in
ret
mov
mov
sbb
stos
push
cmp
xlat
arpl
call
dec
pop
inc
test
rcr
dec
fldenv
xor
adc
rclb
dec
sub
mov
and
mov
insl
lcall
jae
or
jb
dec
cmp
pop
insl
in
xchg
gs
cmp
mov
dec
std
loope
push
jno
xchg
sbb
xchg
push
popa
ret
nop
xchg
fildll
dec
out
mov
push
or
bound
xlat
jle
mov
shr
lcall
repnz
pop
jge
fldt
aas
imulb
inc
mov
cld
adc
mov
mov
push
daa
ret
xor
mov
xchg
sti
cmp
pop
inc
fdivl
stc
ret
adc
pop
int3
sub
bound
mov
jmp
jbe
int3
arpl
inc
jp
pushf
mov
fstpl
sub
scas
test
adc
fidivrl
xlat
mov
jns
stos
out
into
lcall
lea
daa
popf
inc
mov
fs
popf
pop
xchg
add
jmp
mov
mov
lods
sbb
sub
dec
mov
jo
xchg
addb
mov
xor
jae
insb
repnz
gs
dec
cwtl
cmp
mov
xchg
addl
pop
sti
fdivrl
popf
cmp
cmp
imul
lret
xor
scas
mov
and
insb
popf
pop
pop
gs
lcall
icebp
ret
daa
loope
enter
in
lods
pop
in
data16
jnp
jae
lock
out
test
test
xor
fdivs
push
or
push
mov
data16
mov
xchg
xchg
sbb
hlt
je
je
jl
and
in
adcb
sbb
loopne
and
insb
into
sub
ret
or
add
mov
mov
xor
pop
outsl
mov
sti
gs
popa
addr16
fwait
add
xchg
and
pop
test
icebp
cli
jno
xchg
jbe
xorl
adc
sahf
dec
push
mov
push
and
xor
pop
sti
outsb
shrb
cvtps2pi
aas
mov
and
stos
xor
mov
and
xchg
xor
xlat
hlt
xor
jbe
daa
pop
into
mov
lds
jge
cmp
cli
inc
jnp
insl
pop
test
sti
into
xchg
mov
mov
mov
add
aad
or
xchg
js
shrl
pusha
mov
add
scas
and
push
popa
in
sbb
xor
test
adc
mov
cltd
pop
ljmp
idivb
push
je
mov
mov
lahf
xchg
cmp
pop
in
sub
imul
jmp
mov
gs
sbb
loopne
cmpsb
out
outsb
fwait
pop
mov
test
insl
pop
mov
sub
sub
inc
cmp
mov
fsubrl
shr
test
inc
aam
mov
jecxz
sbb
mov
sbb
fisubrs
je
je
scas
out
inc
jb
and
sub
movsl
lds
std
ret
dec
push
pop
mov
fistl
sahf
jg
aad
aad
cmpb
push
add
ljmp
data16
fwait
mov
dec
pop
or
ljmp
xor
in
lods
imul
push
negb
out
lods
scas
mov
push
notb
ja
outsb
push
cs
push
pusha
inc
ret
mov
pushf
push
mov
movsl
xor
inc
pop
ds
es
lcall
gs
scas
push
ljmp
repz
adc
shrb
jmp
int3
mov
test
jmp
icebp
scas
dec
lea
mov
icebp
arpl
cs
sub
js
pop
test
add
add
in
pushw
pusha
mov
push
aas
in
sub
ret
lods
xlat
and
out
nop
bound
stc
lret
jo
in
pop
pop
mov
mov
sbb
cli
inc
jl
adc
sbb
mov
jo
mov
xchg
fcmovnbe
push
push
jecxz
xor
inc
les
ffreep
out
jae
fbstp
dec
ret
hlt
or
aas
daa
push
jmp
das
or
xchg
dec
inc
cmp
and
xchg
cmp
dec
aam
into
stos
popf
pop
lcall
xchg
cs
call
js
xchg
test
inc
cmp
jmp
ror
loop
push
shl
inc
sbb
jge
into
in
jecxz
xlat
mov
xchg
push
mov
dec
in
or
sub
mov
cmp
jl
push
add
and
ror
push
xchg
dec
loope
push
push
cmp
mov
push
add
mov
dec
pusha
push
mov
lock
add
xor
push
out
pop
jnp
std
lock
ja
cwtl
xchg
fsubs
jmp
pop
sub
mov
mov
and
in
push
mov
sub
cmp
insb
xchg
jbe
pop
ffreep
add
xchg
push
pop
hlt
mov
mov
addr16
mov
cmc
or
push
push
adc
sahf
fs
cmp
enter
mov
mov
fadds
add
lret
repz
cs
hlt
sbb
pop
pusha
add
xchg
mov
in
or
sub
or
sar
insl
ds
mov
push
test
hlt
dec
fcmove
sbbb
pop
scas
adc
mov
and
pop
xor
cmp
cmc
test
sbb
gs
xchg
int
in
xchg
adc
call
das
out
mov
stc
xor
jnp
repnz
pusha
orl
rclb
mov
push
mov
shrb
fbld
repnz
cli
mov
push
jle
cmp
sub
andl
dec
jbe
and
lret
cmc
shll
bound
xlat
pop
movsb
xor
xchg
push
push
dec
and
insl
lret
mov
addr16
dec
push
loope
sub
mov
xchg
cmp
into
out
jge
rol
out
cmp
test
pushf
fstl
inc
push
push
sub
fs
cld
or
movb
add
enter
xor
enter
imul
pop
xlat
ljmp
xchg
movsb
ds
cmp
fwait
mov
mov
shl
lret
ret
scas
mov
test
out
pop
push
lcall
icebp
pop
fwait
push
popf
and
movsb
sbb
mov
int3
pop
data16
arpl
add
adc
mov
xor
pushl
push
mov
fsubrl
std
cmp
cmp
cli
sarl
jmp
sub
mov
push
and
je
mov
xor
mov
loopne
add
lock
lret
jmp
inc
add
int3
lcall
add
je
in
lods
pop
xor
ljmp
pop
scas
sub
fs
loopne
jle
add
mov
movsb
outsb
xchg
mov
mov
jne
jo
paddusb
test
cmpsb
jecxz
out
xor
and
jae
jecxz
ss
push
dec
test
cmp
mov
jae
cmp
mov
sbb
int
repnz
mov
rol
fisubrl
nop
sbb
std
mov
into
xor
adc
push
adc
or
shrb
lret
je
gs
iret
jae
out
cld
sahf
push
dec
mov
sarb
dec
fnstcw
and
jno
enter
adc
fmuls
and
mov
mov
jnp
sbb
mov
and
push
xchg
fwait
clc
adc
dec
mov
pusha
mov
mov
adc
mov
enter
cltd
cmp
cmp
mov
and
stos
cltd
add
xor
dec
leave
into
dec
shrb
xchg
jns
xchg
mov
rcpps
fwait
or
lret
fnstsw
ljmp
enter
xor
divb
in
sbb
cmpsb
in
ja
loop
pop
stc
mov
mov
xchg
mov
shr
mov
test
shlb
out
out
mov
pop
mov
dec
jmp
add
jb
pushf
lds
aaa
pop
cmp
and
test
mov
mul
aas
std
mov
fisttpll
jns
mov
in
pop
stc
lds
rorl
or
testl
xchg
xor
pop
jg
inc
mov
lods
jo
clc
push
xchg
or
movsb
adc
jle
mov
inc
test
loop
sbb
and
xchg
xchg
mov
aas
ja
ds
xor
shlb
aaa
outsl
push
prefetcht2
lods
call
dec
sub
pop
jg
pop
aaa
or
scas
cwtl
inc
sbb
cmpl
inc
xchg
fsubl
outsl
fdivs
iret
and
jns
ret
ret
jbe
or
lea
movsb
mov
clc
rolb
pushf
pop
mov
inc
je,pt
cmpsl
outsl
add
push
aam
inc
fs
xor
and
inc
cmp
jge
cmpsl
adc
and
or
sbb
outsl
bound
push
mov
push
loop
insb
repnz
gs
out
dec
jp
fcompl
jno
jle
scas
jl
and
push
mov
mov
or
push
cmc
and
and
and
xchg
scas
adc
cs
and
pop
xchg
and
outsl
mov
cmp
arpl
add
lcall
pop
xchg
lds
push
xchg
mov
sbb
ds
and
cmp
fwait
mov
push
dec
sub
in
jb
idivb
aam
sti
mov
sti
in
jle
xor
aam
into
pop
dec
imul
mov
shlb
outsl
sub
adc
push
test
dec
mov
mov
pop
sub
sub
sub
data16
lcall
fwait
outsb
lret
std
sbb
cmpsb
push
and
pop
loopne
mov
jbe
shrb
mov
out
mov
movsb
inc
imul
ss
or
adc
mov
ja
inc
xchg
movsl
jle
sub
adc
and
add
xlat
or
sbb
movsl
fsubrs
inc
mov
xor
inc
jmp
sub
fcoms
imul
out
sbb
test
rol
adc
fcoms
dec
test
adc
xchg
add
mov
add
call
fisttpl
push
sbb
add
add
mov
fldl
or
pop
cwtl
mov
xchg
test
dec
repz
cli
jp
sbb
mov
loopne
mov
rolb
jmp
cmp
jg
dec
scas
cmp
setno
fdivrl
adcb
repnz
aam
sub
jns
sub
mov
xchg
mov
mov
rorl
pushf
mov
pushf
ds
jp
enter
jo
mov
mov
cmpsl
negl
jle
push
out
fucomip
and
cmp
mov
jno
inc
jmp
or
jno
cmp
test
movsb
or
add
out
cld
mov
sti
das
inc
sub
jl
jecxz
ja
mov
nop
je
pop
or
inc
sbb
imul
inc
mov
pop
push
aam
inc
mov
cmp
mov
lret
out
loope
add
pop
rcrl
jg
aas
cli
cmp
gs
sub
out
lcall
adc
fisubrl
test
enter
mov
fsts
in
stc
jae
dec
mov
stc
dec
movsl
pop
jns
shlb
add
arpl
scas
outsb
and
pusha
pop
and
inc
aaa
aam
ds
and
into
push
mov
stos
js
loope
js
mov
in
addl
mov
sahf
outsl
sahf
dec
add
inc
std
lcall
stc
push
sub
aaa
dec
mov
push
inc
add
and
lret
dec
jo
mov
rorl
inc
inc
adc
fidivs
scas
cld
dec
pop
inc
adc
divl
negl
mov
or
loope
sti
and
ljmp
xchg
idivb
cmpsb
xchg
loop
bound
fwait
cmp
cmp
adc
push
jb
loopw
pop
out
pushf
pushf
lret
ljmp
sbb
repnz
outsl
cmp
movsl
pop
cmp
fldcw
in
sub
insl
jg
cmp
cmp
push
dec
or
loopne
shlb
inc
adcl
sub
push
je
test
nop
mov
mov
dec
jecxz
gs
fsubl
pop
ja
push
sbb
adc
jbe
push
pop
push
add
leave
sbb
inc
jb
fildll
in
xlat
aam
mov
mov
scas
subl
mov
movsb
jns
add
cmc
mov
ss
sbb
stos
frndint
pop
mov
ret
in
cmp
add
aas
sbb
push
loopne
scas
outsb
sub
lret
orl
cmpsb
mov
in
dec
adc
cmpsb
mov
into
notl
aas
cmpsl
dec
mov
jmp
test
shl
jecxz
xor
fsub
dec
and
and
jb
std
or
fildl
adc
xchg
ja
fwait
loopne
cmp
mov
dec
repz
mov
dec
xchg
femms
inc
or
loope
in
imul
and
jp
scas
neg
lods
cli
inc
lea
pop
jb
hlt
add
jl
adc
and
pop
mov
and
jg
add
push
sub
and
test
ds
or
ret
xor
or
sub
fmuls
imul
andl
and
xchg
dec
jno
add
xchg
pusha
push
push
and
cli
inc
fistl
enter
daa
adc
push
js
mov
notl
das
pop
xchg
ds
cmp
lods
or
in
xchg
sti
and
cwtl
repz
inc
lods
int3
mov
pop
std
fbld
popf
add
add
int
mov
sub
ficompl
in
inc
jbe
jo
xchg
js
repnz
jge
mov
mov
xchg
iret
add
dec
sarb
out
aaa
sbb
add
mov
adc
fsts
fcmovu
xchg
or
enter
negb
ljmp
movsb
testl
pop
jne
ds
adc
cmp
sbb
outsb
andb
pop
jmp
das
mov
shll
fstps
and
mov
and
push
subb
repnz
cmpsl
arpl
pop
xchg
cmp
fstps
mov
mov
push
add
and
lahf
jae
cmp
and
into
stos
lahf
aas
orb
scas
dec
cmpb
pop
cmc
sbb
dec
sbb
mov
or
rcr
push
mov
inc
mov
cs
fs
xchg
insb
dec
pop
xor
cmpsb
mov
pusha
xchg
lahf
test
data16
sbb
inc
out
dec
int3
addl
add
ljmp
jmp
mov
sub
inc
push
sti
xchg
lahf
stos
out
rcl
cs
mov
xchg
jg
adc
and
pop
jbe
mov
push
pop
fildl
test
mov
sbb
subl
movsb
or
aas
iret
into
insl
cwtl
int
xchg
cmp
cmp
or
dec
test
mov
inc
bound
clc
negb
inc
inc
dec
ss
push
nop
adc
stc
cmp
fcomp
test
test
rolb
in
cmpsb
and
push
sub
jns
in
cmp
test
fldl
pop
orps
adc
fldenv
inc
pop
loop
xlat
dec
loop
adc
mov
xchg
jns
pushf
stc
subb
loope
adc
loop
ljmp
in
pop
icebp
scas
dec
jp
dec
inc
xchg
scas
repnz
mov
fstpt
out
popf
aas
out
fidivs
std
mov
test
cltd
jnp
push
xor
imul
hlt
adcb
sbb
jecxz
push
hlt
in
mov
cli
out
xchg
fwait
cmp
sahf
pop
inc
outsl
fcmovb
ds
mov
and
mov
push
jmp
mov
dec
mov
cltd
add
fs
sahf
adcl
jge
sar
sar
mov
lret
iret
ds
mulb
out
fnsave
mov
mov
pop
dec
dec
cld
mov
cmpsb
push
cmp
dec
adc
xlat
add
mov
mov
xor
aad
xor
stc
push
outsb
ljmp
cmp
loope
aaa
cld
jae
stos
lahf
add
sub
lcall
mov
xor
xlat
clc
xor
scas
sbb
adc
inc
inc
cmp
sarl
aam
push
sti
movsl
push
jbe
loope
xchg
dec
popa
push
mov
jge
add
pop
pop
stos
cwtd
subl
int3
sbbl
jae
rclb
sub
pushf
jbe
ljmp
mov
cwtl
sub
mov
jge
lds
rorl
inc
aaa
xchg
insb
mov
add
jge
or
adc
ret
idiv
push
jo
std
pop
movsl
jp
cltd
stos
mov
push
xchg
lock
movsl
loopne
mov
outsl
cmp
mov
adc
jns
shlb
aas
mov
nop
inc
pop
pop
inc
ljmp
jge
jg
shll
inc
mov
pop
add
mov
mov
subl
out
push
inc
aam
imul
adc
cli
jge,pn
loop
je
sub
sbb
popf
adc
stos
std
push
jno
xor
sti
push
jns
rcrl
gs
push
out
xor
in
stos
jge
popa
inc
orb
cli
pusha
testb
pop
inc
xchg
fwait
xlat
shll
or
mov
cmpsb
pop
mov
inc
fldenv
fdivrp
xchg
push
int
xlat
popa
pop
pop
fwait
xchg
outsl
outsb
pop
stos
sbb
mov
cmpsb
adc
push
cmc
into
dec
push
pop
mov
ja
repz
jmp
out
nop
icebp
loope
lahf
mov
mov
ds
mov
adcb
mov
pusha
test
rolb
jb
frstor
dec
sar
inc
or
sub
in
movb
mov
sub
mov
dec
sbb
mov
sbb
inc
adc
loop
xor
mov
cld
pusha
add
or
dec
stc
cmp
mov
shll
fwait
jg
out
adc
xor
xchg
rcr
lock
hlt
pop
or
xchg
addb
movsb
cwtl
popa
pusha
add
fstps
imul
arpl
testb
add
test
lods
mov
dec
inc
lcall
xchg
fprem
scas
mov
sub
adc
jnp
out
or
push
dec
popa
adc
fistps
imul
int3
call
adc
push
movsb
test
lcall
add
mov
and
imul
mov
fbstp
lock
das
movsb
loopne
popa
int
lods
mov
sahf
std
shlb
lret
fisttps
int
imul
lcall
mov
mov
fdivl
cmp
mov
gs
jnp
or
mov
jnp
or
data16
repz
dec
add
jg
call
rclb
jnp
lods
shrb
data16
sub
popa
out
icebp
xchg
nop
jle
mov
scas
mov
orb
dec
mov
call
rol
es
data16
fildll
ret
sti
aaa
inc
cmp
in
gs
sub
in
xchg
dec
cs
push
jle
cld
adc
pop
aas
ljmp
add
pop
mov
xchg
sub
test
add
insb
pop
mov
push
loope
jg
pop
sti
incl
inc
cld
cs
insb
cli
mov
aam
test
rcl
or
sbb
jnp
mov
imul
or
out
lods
mov
imul
push
xchg
gs
outsl
dec
repnz
out
inc
mov
cmp
outsl
in
cmp
dec
fs
cmc
and
or
sbb
sahf
and
sbb
mov
mov
lods
popa
sahf
xor
mov
jb
aaa
pop
adc
mov
mov
sar
pop
cmpsl
pop
stos
adc
sub
inc
sar
cltd
hlt
leave
or
add
popf
pop
into
cli
es
rcrb
iret
cmpsb
notl
dec
insl
push
bound
cli
call
les
adc
mov
push
xchg
xchg
pop
loop
dec
hlt
les
xor
dec
aam
movsb
popa
or
hlt
xor
shl
cmp
adc
dec
pop
adc
jno
jno
jnp
repz
in
pop
xchg
ja
cmp
jg
clc
mov
addr16
test
xor
insl
ror
leave
mov
daa
adc
rclb
dec
outsb
aas
out
insb
sub
add
mov
sbb
sbb
popf
xchg
or
mov
dec
and
cmp
xchg
xchg
into
mov
pop
test
shrl
dec
xor
xchg
mov
out
jno
cli
sti
imul
mov
add
fwait
pop
inc
in
xor
mov
dec
gs
imul
adcb
jbe
sti
outsb
call
in
gs
ret
outsl
loop
out
lods
lret
loopne
adc
out
into
sti
pushf
enter
mov
addr16
xor
shrb
adc
adc
sub
es
pop
mov
lret
jnp
xchg
inc
mov
xchg
js
mov
call
xchg
out
mov
lret
call
push
or
add
lods
cmp
ret
shll
push
pop
sub
insl
loope
imul
lret
adc
mov
cmpsl
xlat
clc
cmp
arpl
mov
push
jae
xor
inc
loope
add
ja
adc
and
adc
push
xchg
je
add
lahf
je
push
jnp
sbbb
or
cld
dec
ss
push
pusha
fildll
mov
mulb
sbb
shlb
out
je
inc
iret
jge
insl
fs
xchg
stc
push
mov
pop
sbb
sbb
fnstcw
out
inc
dec
ror
sub
sub
mov
cs
orb
fstpt
aam
dec
pop
test
dec
fdiv
mov
inc
mov
and
lret
sub
xchg
pop
call
pop
arpl
jecxz
or
call
ss
mov
or
mov
adc
pop
popf
inc
insl
inc
sti
dec
push
aas
cs
in
popf
pop
jb
lahf
adc
std
mov
loopne
xchg
and
testl
xlat
jl
sub
mov
mov
jmp
sti
in
je
xchg
pop
pop
pop
jne
jne
xchg
cli
test
add
add
mov
cmp
addr16
lcall
pop
and
cs
movb
mov
jbe
fwait
push
jnp
aaa
sub
imul
les
xchg
xchg
pop
xchg
mov
lret
clc
lds
mov
jne
sub
aam
mov
lret
scas
dec
rcrb
cmp
jbe
sub
std
inc
jle
or
das
fdivrp
shlb
outsl
shll
push
pop
imul
pushf
in
xchg
and
mov
adc
pushf
jae
out
int3
cmpsb
aaa
cld
sub
ret
add
push
pushl
or
mov
mov
mov
cmc
and
push
jne
out
dec
sbb
loop
cmp
cld
fcoms
xlat
add
out
outsl
stos
mov
ss
in
jnp
dec
js
sub
inc
mov
xor
pushl
loop
dec
xlat
jb
mov
mov
insl
test
push
xchg
xlat
sbb
iret
and
test
pop
lock
loop
iret
fistpll
nop
dec
push
jnp
jns
xchg
push
daa
xchg
iret
add
sub
xor
mov
push
outsb
add
test
fstl
mov
repz
push
inc
stc
fisttpll
jmp
sbb
mov
popa
fisubrl
enter
add
add
add
lcall
ja
add
xor
daa
sbb
arpl
mov
mov
addr16
inc
ljmp
xchg
lea
mov
std
ret
jns
out
in
jp
add
push
xchg
xor
flds
push
and
xor
jl
divl
cs
mov
testb
scas
aam
pop
mov
in
dec
push
scas
sbb
scas
fcoml
mov
mov
jno
rorb
movsl
add
pop
inc
fistps
mov
lock
push
inc
jns
lea
cmp
sti
dec
mov
mov
push
js
lcall
notl
xchg
sbb
mov
lds
mov
jg
adc
call
or
ja
and
mov
and
inc
sub
test
fidivrs
push
repnz
fistpl
loopne
popa
xchg
cld
fincstp
push
xor
xor
jns
ljmp
cli
lret
arpl
sar
lret
scas
lds
mov
imul
xchg
ds
and
out
arpl
pushf
inc
add
fidivrs
test
rol
mov
repnz
movsl
fcoml
iretw
ds
add
pusha
mov
cmp
push
enter
loope
das
testw
addb
clc
xchg
outsb
sbb
popw
lret
inc
ja
pop
pop
mov
jne
mov
popa
dec
mov
arpl
push
into
jne
mov
jbe
cmp
xchg
cmp
dec
mov
aam
jbe
stos
pop
stc
fwait
or
inc
dec
stos
adc
sbb
push
insl
cmp
jl
mov
mov
mov
insb
and
mov
les
mov
popf
stos
jecxz
repnz
push
movsb
mov
and
inc
and
jle
adc
loop
cmp
push
scas
pop
notrack
inc
adc
xor
xchg
mov
sub
cmp
cmc
dec
sub
mov
leave
mov
popa
sahf
mov
mov
popa
xor
lods
mov
cmp
xor
or
xor
inc
mov
mov
xor
or
ret
lds
dec
adc
movsl
pop
inc
shll
jle
lea
xlat
jb
imul
lret
push
mov
dec
lea
mov
ds
pop
call
lahf
out
cmp
add
or
in
xor
sti
vpunpcklwd
jnp
in
aaa
outsb
je
lcall
imul
frstor
into
pop
cmovnp
or
test
aas
push
loopne
mov
sti
bound
lret
rcrb
mov
xor
xor
sbb
insl
cmpsl
dec
xor
testl
ss
mov
xor
add
in
rcrb
push
pcmpeqd
repz
dec
hlt
and
not
incl
fwait
outsb
pushf
js
insl
jno
in
repz
sbbb
outsb
dec
les
sbb
xchg
movsb
lcall
push
mov
shrb
dec
bound
xchg
psllw
add
repnz
xchg
dec
cmp
adc
jns
outsb
adc
icebp
cmp
xchg
cwtl
test
and
clc
aam
inc
cmp
xor
sbb
pushf
imul
rsm
pushf
test
sarb
es
lahf
push
inc
mov
jp
movsl
in
pop
test
test
mov
arpl
xchg
pop
adc
sub
and
sti
pop
cwtl
cmp
add
arpl
dec
insl
dec
jno
xchg
jno
sub
cs
fistpll
cmp
push
dec
stos
hlt
leave
adc
dec
lea
clc
mov
adc
data16
pop
inc
sbb
xchg
jge
cli
data16
adc
jmp
and
in
push
inc
jp
inc
jnp
aad
pop
adc
jmp
lods
mov
push
cmp
test
jecxz
aas
jbe
lcall
repnz
push
push
test
sbb
out
arpl
inc
or
ss
sbb
mov
cmp
mul
lock
dec
in
test
push
sub
sub
and
push
aaa
jmp
loop
xor
sbb
sbb
cmpsb
xchg
mov
adc
xorl
int3
lea
test
jl
repnz
stos
mov
int
or
push
cli
clc
js
and
repz
jbe
jle
xchg
inc
sub
testl
arpl
int
outsl
repnz
fmull
fdiv
sub
cmc
and
sub
add
xchg
test
mov
dec
or
dec
jnp
sub
and
and
push
sarb
cmp
push
lcall
insb
movsl
cmp
fcomps
push
pop
pop
js
mov
test
push
cmc
and
xor
jno
orb
sbb
add
adc
xchg
pop
fcomi
cmp
out
mov
subb
imul
pop
sub
outsl
add
pop
mov
sbb
xchg
fcmovnb
stos
mov
cmp
arpl
jecxz
addr16
cmp
repnz
inc
enter
subl
cmpsl
push
inc
sbb
dec
fldenv
jg
imul
lock
dec
fnstenv
push
cmp
inc
push
call
jae
mov
adc
mov
xchg
popf
jmp
daa
push
sarl
or
mov
jmp
cltd
dec
ss
adc
mov
addl
pusha
add
mov
jmp
add
outsl
cmpsb
fadds
mov
pop
mov
lds
jp
aaa
jp
cmp
aad
mov
push
insb
mov
pop
push
es
add
testl
sahf
shl
popa
and
xor
outsl
pop
movsb
pop
push
mov
repnz
cmp
int3
add
add
sbb
arpl
cmp
mov
fsubl
sub
pop
les
mov
push
dec
mov
push
int
xor
popa
movzwl
jno
jae
xchg
xor
fmulp
sti
les
jbe
insl
sbb
inc
loop
imul
stos
outsb
test
push
lret
jmp
lret
jne
int
and
lret
lret
fwait
in
les
add
out
fsub
sbb
sbb
sub
lret
jg
imul
icebp
and
leave
cmp
pop
push
xchg
int
xchg
xor
sub
mov
and
pop
and
jecxz
daa
pop
mov
int
mov
mov
or
jne
idivb
dec
sbb
xchg
call
out
cmpsb
stos
cmp
out
and
std
add
lea
movsl
dec
ret
in
xrelease
and
sbb
xor
xchg
xchg
fwait
call
test
out
inc
sub
or
mov
mov
jae
orb
xor
or
mov
lcall
sub
jl
rep
xor
xor
lock
adc
xor
dec
sub
mov
jb
lock
sub
pop
stos
mov
notl
sub
dec
pop
cmp
or
in
into
and
mov
or
jbe
push
and
ss
dec
mov
dec
sub
loope
xchg
sti
pop
push
std
push
jp
test
xor
outsl
mov
and
cmp
cltd
xor
mov
ljmp
stos
xor
in
out
inc
jns
jp
or
add
mov
lcall
enter
fnstsw
mov
popa
mov
add
int3
scas
mov
loopne
aas
ja
adc
dec
jae
dec
mov
mov
sub
xchg
test
dec
push
hlt
nop
aad
xchg
pop
mov
fs
in
in
stos
aam
xor
enter
pusha
mov
push
jbe
fldenv
or
std
mov
sbb
lret
adc
int3
in
sub
movsb
or
jl
leave
scas
mov
pop
sbb
inc
sbb
into
outsb
cmp
push
push
jnp
mov
mov
incl
ljmp
or
xchg
pop
in
aam
push
xor
shll
flds
cwtl
xchg
test
ss
insb
test
push
fbstp
push
or
sub
add
inc
insb
cmpsl
stc
and
sbb
into
sub
adc
call
pop
movb
nop
xor
mov
jne
notl
push
cmp
xchg
out
decl
aaa
mov
dec
fnstsw
push
arpl
in
push
push
dec
mov
jb
jbe
jmp
sbb
push
inc
fwait
mov
mov
and
mov
addl
dec
or
sub
adc
shl
mov
sbbl
lret
movsl
insb
scas
push
xor
inc
test
pcmpeqw
dec
push
cmpb
lds
leave
andl
xorl
mov
scas
inc
xchg
sbb
and
jge
or
lea
cli
pop
iret
testb
xchg
cmp
jg
shll
les
dec
mov
add
ret
ja
stos
sub
ficoms
jae
dec
and
dec
insb
cmc
jp
imul
rorb
int
mov
lods
ficoml
stc
xchg
das
mov
ret
adc
dec
fwait
xor
push
lahf
pop
adc
ffree
fwait
mov
sbb
insb
jmp
mov
rorb
xor
es
mov
andl
shll
fimull
rcrb
adc
jl
addr16
or
push
icebp
fidivrs
hlt
mov
imul
adc
xlat
mov
mov
push
lret
loope
xor
and
pop
add
push
cli
xorl
les
inc
inc
popa
icebp
lahf
or
sub
jb
xlat
scas
movl
jge
gs
rorb
fistl
xorps
push
jae
jo
inc
pop
enter
inc
adc
jb
sub
lret
lret
and
push
pop
sbb
imul
adc
fsubs
mov
shll
mov
fldt
imul
imull
test
pushf
loop
mov
push
loop
cmp
mov
xorb
cmp
test
pushf
sbb
jp
out
mov
inc
mov
pop
je
lods
lea
cmc
or
in
sub
xchg
fs
dec
or
push
sbb
push
arpl
add
xor
fwait
mov
push
mov
xchg
dec
loopne
pop
adc
repz
add
jecxz
xchg
iret
fstp
pop
cmp
insb
jp
dec
dec
rcl
ljmp
lret
inc
arpl
xchg
push
push
fwait
test
rcr
sahf
fnstsw
or
std
rcr
mov
mov
insl
repz
inc
mov
add
push
xorb
int
sar
xchg
call
dec
mov
mov
sti
mov
scas
push
sbb
iret
nop
mov
das
mov
es
in
imul
xorb
jge
int3
inc
std
les
mov
inc
jnp
lret
std
scas
or
inc
or
repnz
inc
stos
lcall
mov
and
sarl
hlt
or
sbb
xchg
mov
dec
movsb
sbbl
jge
cmp
mov
lcall
test
sbb
stos
fistpl
clc
jno
negl
cwtl
xor
lock
pop
ja
adc
xchg
mov
lret
call
icebp
xchg
inc
inc
out
jae
inc
push
add
in
or
sbb
fstpl
repnz
jmp
subb
push
inc
xchg
push
mov
inc
rcrb
lea
adcl
push
jo
push
mov
cmc
push
mov
loopne
or
into
add
lea
jno
int3
xor
ret
sarl
js
jo
test
dec
popa
sub
out
jne
xor
sub
mov
les
std
int
mov
sub
mov
add
mov
pop
add
cmp
xlat
mov
dec
cmp
enter
cmp
ret
leave
mov
imul
stos
adc
pop
sbb
mov
cltd
clc
retw
and
push
enter
aas
push
xlat
sbb
sbb
movsb
or
adc
jmp
pop
sub
mov
xor
outsl
mov
mov
rclb
pop
push
push
and
adc
jae
negl
jno
xlat
out
ja
jp
cmp
mov
jbe
sbb
mov
adc
mov
inc
xor
xlat
mov
xor
out
ja
mov
push
insb
push
outsl
mov
or
pop
mov
xchg
add
cltd
int3
mov
cmc
sbb
inc
dec
shl
inc
cmp
cmp
mov
dec
xchg
push
xor
rclb
push
shll
daa
les
pop
fnstenv
cld
in
add
dec
sub
pushf
pop
fldl
iret
push
push
lret
mov
fstl
addl
push
jle
xor
into
mov
scas
aaa
lcall
and
testl
lret
and
add
push
add
mov
data16
imul
xorb
leave
and
mov
bound
push
fnsave
fwait
in
ret
mov
insl
addb
rorl
in
or
fwait
pushw
jecxz
out
cmp
mov
jl
ss
push
stc
sti
movsb
loopne
mov
pop
gs
cmp
jno
push
xchg
push
punpcklbw
les
jle
jecxz
hlt
sub
add
stc
clc
mov
add
shll
xor
fildll
inc
mov
enter
jno
fidivs
add
aas
mull
addr16
repz
sbb
test
add
leave
add
inc
and
ds
add
xor
pop
repz
cmp
fstpt
icebp
or
repnz
cmp
ret
je
outsl
pop
addl
xor
and
insb
xchg
mov
mov
push
rcll
ror
mov
cli
cmc
cmp
push
cmp
jle
lahf
xchg
push
jns
jmp
addr16
mov
sbb
cmpsl
inc
out
adc
mov
sub
loop
insl
ds
das
das
jmp
cmpsb
jae
lea
ds
jg
test
sub
mov
push
push
sbb
xchg
orl
sbb
jb
jge
fsubl
stos
add
push
inc
push
mov
shrl
jge
inc
adcl
fisubs
jg
and
test
push
lret
pop
dec
push
jns
lret
pop
mov
sbb
push
orb
daa
push
push
shll
mov
sub
pop
dec
xor
clc
das
loopne
shl
ret
clc
pop
push
js
imul
mov
repz
mov
and
jae
cmp
xor
mov
xchg
cmp
mov
stos
ss
test
test
mov
leave
pop
pushf
mov
scas
cmp
mov
inc
cmpsb
out
hlt
int
jno
mov
ljmp
repz
mov
addb
pop
xchg
stos
js
push
test
inc
nop
fs
or
sub
push
cmp
sahf
mov
pop
inc
cld
push
outsb
jo
lret
outsl
das
ret
notb
pushf
cmp
xor
pushf
dec
adcl
fsubl
push
or
add
mov
fists
pop
into
jno
jmp
shlb
sub
test
mov
jg
pop
shrb
test
repnz
jae
sbb
cmp
lock
jne
lcall
jo
mov
incb
fldt
adc
loope,pt
mov
pusha
in
ja
cmp
and
data16
cltd
mov
fwait
xor
rclb
xchg
mov
dec
nopl
cmp
dec
xorb
sahf
jbe
inc
stos
imul
dec
mov
aad
sub
fidivs
jl
arpl
outsl
mov
pop
pop
int3
mov
test
mov
cwtl
mov
test
dec
mov
mov
mov
mov
sbb
mov
ds
adc
adc
adc
xor
inc
loop
popa
xchg
xchg
mov
sbbb
aas
push
vcvtss2usi
inc
repnz
fwait
out
shll
mov
repnz
rorl
cs
jmp
ljmp
xchg
or
jmp
adc
jp
lahf
pop
mov
cmp
frstor
mov
xor
inc
adc
lret
dec
cmp
daa
xchg
int3
push
or
movsb
pop
outsl
mov
out
push
xchg
xchg
push
inc
iret
dec
cmp
iret
stos
sbb
inc
pop
cmp
mov
mov
adc
add
in
lds
repz
xor
mov
aaa
sub
jno
orb
add
xchg
test
sbb
rcl
sbb
add
xchg
fisubl
mov
ret
jne
hlt
rolb
dec
orl
jns
jmp
in
jecxz
stos
xor
aad
push
cmp
xchg
adcl
jmp
lahf
push
rcr
mov
xor
sub
popa
xchg
mov
and
fwait
xchg
frstor
ds
daa
push
insb
nop
and
out
xchg
mov
mov
or
sbb
cmp
xchg
push
jle
nop
cwtl
out
hlt
xchg
in
push
icebp
add
je
push
cmp
cmp
xor
mov
ficoms
out
jmp
jle
xor
repnz
jmp
pushf
repz
push
inc
loopne
daa
mov
mov
dec
stc
xchg
add
mov
jg
mov
jnp
std
inc
jo
arpl
pop
add
mov
sti
mov
lods
jge
arpl
inc
adc
lock
mov
pop
sub
movsl
ss
pop
shlb
sahf
jno
and
mov
ret
cmpsl
inc
xor
adc
jns
push
mov
int3
cmpsl
mov
mov
insl
imul
les
ds
sub
faddl
inc
loop
mov
xchg
testl
lods
movsl
lods
dec
mov
or
sti
outsl
shrb
es
dec
pop
jge
pop
inc
js
inc
mov
jnp
lret
inc
pop
pop
mov
add
in
cmp
pop
loopne
test
test
xchg
imul
xlat
data16
add
imull
xchg
cmp
xor
xor
movsb
outsl
dec
popa
push
popf
inc
ret
into
jl
cld
aas
push
dec
mov
test
adc
arpl
jnp
jb
pop
negb
repnz
popa
insb
in
dec
dec
mov
pusha
rcll
mov
and
pop
xchg
dec
mov
popa
out
icebp
and
sub
mov
and
cli
imul
or
push
adc
in
nop
sbb
popf
jl
cmpsb
xchg
mov
lea
jecxz
jns
aaa
adc
ss
pop
sub
push
xchg
mov
scas
stos
jl
mov
sbb
mov
fisubrl
jae
mov
loop
pop
movsb
mov
aaa
sub
bound
xchg
pushf
sbb
movsb
xchg
or
sbb
and
inc
in
adc
nop
push
push
push
jae
roll
dec
es
rorb
xchg
clc
xor
mov
dec
inc
and
nop
rcl
xor
fnstenv
sbb
adc
pop
mov
stos
mov
or
lret
les
adc
mov
dec
test
negb
iret
dec
insb
rol
mov
mov
out
push
cld
sbb
or
arpl
inc
or
push
popf
aad
pop
jecxz
push
push
sub
xor
adc
adc
mov
addr16
out
inc
int
icebp
aam
or
pop
bound
shlb
adc
rorb
aad
xchg
inc
shlb
mov
adc
inc
gs
cmp
and
test
inc
or
mov
shr
test
pop
js
cmp
push
add
jnp
in
jo
nop
leave
xchg
jge
cs
pop
mov
lret
inc
loop
jae
sub
add
fstps
stos
pop
je
das
xchg
notb
xor
cli
outsl
pop
scas
mov
inc
add
mov
ss
jo
mov
cmp
dec
jne
dec
push
aam
lcall
dec
mov
in
popa
mov
sti
add
icebp
cmp
add
je
mov
inc
sub
adc
movsb
mov
cmc
push
pop
aam
aas
jl
idivl
mov
xor
xchg
aaa
dec
cmpb
repz
arpl
mov
dec
adc
nop
testb
mov
movsl
pop
test
clc
cmp
addr16
out
bound
scas
fistl
leave
in
in
mov
inc
subl
lods
int
add
dec
and
in
imul
aam
pop
sbb
shlb
loopne
push
stos
pop
dec
ret
bound
push
adc
fldl2t
add
dec
jno
or
or
mov
movsl
push
nop
and
shr
xchg
mov
pop
jecxz
jle
mov
inc
call
aad
fstpt
xlat
ret
popf
repz
cmc
jne
clc
pop
aam
ss
and
adc
cmc
jae
movsb
imul
movb
xorl
push
ja
mov
jmp
sti
ffree
int3
ss
loop
dec
and
xchg
xchg
mov
stos
pop
aas
es
test
xor
pop
push
dec
pushf
mov
and
sub
test
sbb
mov
jge
xchg
mov
mov
push
adc
lcall
adc
dec
xchg
cs
pop
ljmp
std
sahf
mov
mov
scas
mov
test
push
shll
cwtl
xor
outsb
or
cmc
jg
jmp
push
shl
aas
test
cmp
fisttpl
jl
sbbb
xchg
aas
add
data16
in
dec
pop
adc
inc
lea
out
dec
sbb
mov
mov
or
aad
adc
jno
scas
insb
mov
jecxz
add
into
dec
movsb
cwtl
popa
sti
push
data16
jo
inc
push
add
out
mov
push
pop
pusha
sbb
xchg
mov
lods
xchg
xchg
or
xor
xor
out
adc
cmc
imul
mov
mov
test
cmp
sbb
adc
push
and
pop
xchg
mov
xchg
pop
add
inc
jb
sbb
andl
repnz
loope
repz
lds
mov
pop
cld
pop
xchg
xchg
add
jae
cwtl
add
mov
or
faddp
addr16
inc
enter
sbb
arpl
repnz
jle
or
push
js
lock
and
inc
mov
add
xlat
jecxz
int
fcmovb
push
ja
push
fs
in
cmp
add
sarb
xchg
data16
rcrb
and
or
inc
push
lcall
out
mov
and
push
pop
repnz
es
mov
lock
mov
shlb
xor
adc
pop
in
out
push
loop
fcomps
xor
push
adc
xchg
iret
or
push
stos
xchg
xchg
push
in
stc
mov
out
sub
int
dec
nop
mov
sbb
xor
inc
aad
xor
lret
testl
dec
ret
rorb
and
push
popa
leave
xchg
xor
and
cmp
xchg
sbb
xchg
stc
sti
dec
imull
xor
cltd
leave
mov
cmp
cmpsl
and
pop
ja
mov
mov
adc
popa
cltd
or
or
xchg
loope
arpl
je
popf
xchg
flds
mov
insb
jne
adc
lea
push
and
cltd
daa
jbe
xor
dec
imul
xchg
sbb
cmpsl
pop
push
xlat
and
loope
cmp
aad
addr16
into
incl
push
imul
lods
lahf
mov
xchg
push
xor
mov
mov
ud0
daa
rol
pushf
cs
dec
loop
out
loop
push
loopne
insb
cmp
push
fwait
insl
outsb
dec
clc
sbb
fmull
mov
into
sbb
push
adc
dec
sub
stos
rclb
jecxz
arpl
xchg
dec
cmp
shll
xor
add
jmp
push
arpl
dec
xchg
das
mov
inc
loope
movsb
mov
xchg
test
in
fbld
xchg
xchg
inc
adc
pushf
sub
jg
ret
cltd
cld
cmpsb
lahf
je
xor
int
xchg
jb
fdivl
add
std
pushf
xchg
jecxz
jge
popa
or
gs
and
scas
mov
sub
iret
xchg
sbb
mov
movsl
inc
or
mov
pop
inc
xchg
cltd
enter
int
adc
insb
or
dec
repnz
movsl
add
js
test
daa
push
pop
popa
mov
pop
mov
aas
jge
mov
mov
or
movsl
sbb
cmp
loopne
dec
pop
nop
arpl
imul
test
into
cs
sub
xchg
outsl
mov
gs
dec
shrb
stos
push
out
sbb
pop
cs
ljmp
fisttps
cmp
xor
popf
scas
fidivs
insl
scas
push
cli
aaa
add
outsl
in
in
mov
sbb
inc
shrl
leave
fidivl
or
pushf
cmp
adc
fbstp
and
push
clc
bnd
stos
pop
mov
dec
enter
lods
psubb
sbb
xor
popa
and
mov
sub
rol
jg
xchg
push
insl
repnz
frstor
add
jo
daa
int
rcll
push
pusha
and
mov
xchg
ljmp
mov
cs
sub
inc
insb
pop
lea
mov
ret
mov
jp
ljmp
shl
pop
push
into
mov
xchg
xchg
xchg
mov
test
aam
addr16
push
popa
push
int3
repnz
fwait
les
lock
div
imulb
es
mov
sbb
or
add
test
nop
push
adc
iret
in
mov
int3
push
cltd
rorb
mov
xchg
mov
mov
loopne
cwtl
pop
inc
arpl
xor
insl
adc
sub
rorb
xchg
xor
ljmp
xchg
and
and
popf
sub
mov
lahf
xor
cmp
fldl
xchg
jmp
fs
jb
inc
push
je
xchg
jecxz
pusha
stos
sub
sbb
inc
jle
hlt
and
add
fcmovu
push
inc
push
shl
sbb
rclb
lods
inc
push
cli
mov
pop
adc
lret
clc
lock
cmp
test
aas
aaa
je
ja
jmpw
pop
sub
data16
cmp
and
rol
roll
xchg
dec
mov
bound
add
les
loopne
fs
adc
jge
ss
jne
xchg
push
rolb
sti
push
das
mov
or
jl
popa
repnz
sarl
mov
inc
daa
jns
inc
repnz
out
loopne
rorb
pop
jmp
mov
je
jnp
mov
shrl
imull
les
out
xchg
movsb
orl
jns
cmp
push
repnz
mov
sub
add
cltd
dec
nop
sub
and
adc
push
outsb
push
inc
popf
out
ret
xor
insb
dec
jo
lahf
add
lcall
leave
iret
and
and
cltd
repnz
gs
daa
add
add
or
test
loop
in
fwait
movsl
icebp
adc
fistpl
out
popf
dec
push
mov
jbe
mov
mov
mov
jno
lods
and
fwait
xchg
sbb
into
mov
imul
xlat
add
sti
stc
int3
aam
xor
and
pop
xchg
bnd
jne
xchg
dec
adc
gs
scas
orl
sbb
jns
pop
and
push
gs
jp
gs
mov
mov
xchg
mov
mov
fldt
jno
dec
xor
mov
jl
pop
push
lods
dec
mov
stos
inc
test
mov
aas
jb
mov
sarb
adc
xchg
inc
push
and
dec
mov
les
mov
scas
ret
dec
cmpsb
cmpsl
xor
test
aad
sti
cld
dec
sbbl
pushf
push
mov
mov
jae
mov
rcrl
push
sub
add
lret
bound
push
insl
xor
imul
mov
sarl
les
fidivrl
pop
sarb
mull
push
pop
inc
data16
pop
sbb
xchg
dec
jo
pop
mov
sub
cmp
adc
jae
dec
lds
jle
ss
jo
xor
lods
cld
push
xor
jne
fs
inc
mov
test
push
inc
or
push
scas
and
aam
push
sub
test
mov
mov
or
cmpsl
fistl
dec
jne
subl
or
adc
sti
stc
fucom
mov
fwait
inc
test
ljmp
mov
pop
je
sbb
pop
aad
jle
jl
lods
cmp
mov
add
mov
into
mov
cmp
daa
nop
push
jbe
lcall
aaa
jns
dec
into
adc
cmpl
insb
int
inc
es
jmp
out
div
fs
fcomps
cld
xor
int
cli
adc
jb
mov
cmp
movsl
nop
jmp
mov
scas
jg
enter
out
cld
in
shll
jl
jmp
rcll
ficoml
jne
in
dec
inc
sub
ret
movq
pusha
mov
scas
loop
or
in
lods
fcmovb
sub
mov
cltd
insb
dec
inc
outsb
sahf
dec
movq
pop
sbb
push
fiaddl
out
xchg
sub
into
repz
adcl
sahf
dec
sarl
xchg
jg
xchg
sti
ljmp
cmpsl
daa
mov
cli
jmp
jl
ljmp
mov
fisubrl
mov
jmp
xchg
push
or
out
cmpsl
jbe
xor
cmp
add
insl
in
sbb
bound
scas
jmp
inc
jbe
mov
inc
pop
out
cmp
mov
xor
xchg
xchg
push
pop
dec
adc
ficomps
addr16
in
mov
jbe
jecxz
push
push
ljmp
push
sbb
das
jae
mov
loopne
andl
adc
add
fldenv
jbe
sub
pop
int3
xor
repnz
pop
sbb
cmp
ss
xor
adc
pop
sub
iret
mov
gs
dec
inc
in
mov
shlb
xchg
push
jns
push
xchg
jp
mov
lcall
adc
ret
iret
jg
scas
mov
cld
xchg
sbb
push
xcrypt-cbc
push
mov
into
mov
xchg
into
mov
addb
imul
ret
in
mov
cmpsl
and
cmp
mov
subl
mov
leave
push
gs
jne
jecxz
out
ffree
jne
push
dec
fldenv
xor
shr
jb
mov
cltd
fwait
rorl
xor
cmp
fldt
rorl
sti
mov
sbb
pop
jb
inc
out
js
pop
inc
pop
cli
add
push
jo
lcall
das
mov
es
adc
scas
shlb
mov
mov
jns
add
xor
cmp
pop
lret
orl
push
insl
add
push
xchg
inc
ret
cmpsb
push
add
inc
sbb
pop
mov
inc
push
outsb
popf
enter
pop
jg
sub
pop
sub
iret
inc
jle
shll
cld
or
test
pop
dec
ja
inc
cld
mov
adc
and
xchg
jmp
in
outsl
movsl
xchg
pop
and
fnstenv
xor
std
repnz
adc
adc
ss
ja
mov
ss
xor
addb
fwait
or
push
out
out
negb
lds
dec
shlb
in
bound
scas
cli
cmp
dec
and
mov
xor
int3
add
stos
add
int3
xchg
orl
int3
lahf
xor
leave
pop
push
addr16
into
push
cmp
testb
sbb
or
xchg
mov
movsl
mov
sbb
pop
inc
js
sbb
push
jle
scas
aas
aaa
jae
dec
or
add
cmpsl
fwait
loopne
test
xchg
mov
jmp
adc
inc
pop
dec
rcr
test
adc
inc
inc
js
cli
cltd
and
js
cmp
lea
arpl
lea
pushf
mov
in
adc
xor
out
sarb
in
cltd
xchg
sub
xchg
xor
movsb
movsb
subl
mov
iret
not
scas
setnp
push
in
inc
jle
lds
mov
jno
xchg
in
subb
xchg
addr16
lock
pop
popf
jg
fmull
mov
pop
es
sub
ja
mov
adc
jmp
enter
hlt
stc
and
cli
sbb
jbe
xchg
sub
mov
dec
jb
mov
data16
mov
cltd
xchg
lods
push
pop
leave
jnp
mov
rcl
outsb
add
jl
mov
inc
jae
sbb
sbb
sub
andb
jno
or
cmp
in
test
push
inc
jo
out
and
fimuls
mov
sub
loope
fsubl
adc
cmpsb
loopne
ret
popf
enter
inc
ret
fsin
mov
mov
push
enter
loop
lods
dec
aad
inc
shll
adc
push
inc
push
jmp
mov
dec
xchg
clc
popf
mov
inc
push
sbbb
sbb
mov
add
sbb
and
mov
jns
mov
es
bnd
push
push
inc
mov
rolb
iret
rorb
xor
inc
rolb
shlb
std
adc
in
push
jae
lds
std
jno
or
push
dec
aas
data16
mov
out
outsb
cld
sahf
movsl
adcb
lods
pop
pop
add
or
push
mov
pop
stos
pop
dec
sbb
cltd
repz
popf
push
xchg
test
dec
into
adc
push
jge
fwait
aam
or
cmpsl
dec
inc
lahf
inc
jmp
stc
bound
fs
imul
xchg
insl
mov
repz
and
fnstcw
mov
push
popl
mov
imul
adc
es
hlt
mov
mov
pop
pop
bound
or
inc
sub
mov
icebp
les
leave
and
outsl
dec
fidivrs
jmp
in
and
std
repz
inc
adc
ja
and
or
frstor
or
addr16
cmc
xor
cs
xchg
mov
repnz
test
inc
popa
inc
lods
in
shrb
jecxz
cmp
adc
pusha
ud0
pop
cwtl
enter
aad
or
cmp
cwtl
shll
incl
cld
mov
push
testb
es
bound
out
pop
fisttpl
adc
mov
dec
sbb
sub
mov
cmp
fs
sbb
sub
dec
jecxz
cld
outsb
jns
test
sbb
and
clc
or
cmp
mov
sub
pop
cli
xchg
int3
in
ret
adc
wrmsr
stos
push
sub
mov
xchg
sbb
dec
fs
sub
adc
cmp
xchg
std
sbb
arpl
fistps
jno
mov
data16
ret
xor
push
add
fistps
aaa
or
insb
pushf
outsl
fld
out
xchg
mov
xor
cmp
movsl
inc
inc
inc
movsl
lret
add
insl
adc
cmp
adc
xchg
mov
negl
mov
out
addr16
xor
adc
testb
sbb
hlt
and
cmpsb
jnp
add
pop
sub
sarb
mov
pop
add
shlb
adc
pushf
push
and
popa
inc
enter
in
push
cmp
out
and
aad
jbe
xor
xchg
pusha
xlat
int
orl
pop
and
inc
or
dec
add
nop
xchg
cmp
pop
pop
pop
mov
aas
or
dec
add
outsb
lods
and
jne
xor
stos
hlt
cwtl
push
add
in
cmpsl
adc
jns
mov
inc
cmpsb
aaa
andb
ficompl
cmp
arpl
adc
adc
gs
cmp
cmp
mov
mov
rolb
mov
jge
mov
add
push
test
insw
mov
xor
jno
jo
and
in
ficoml
fs
sbb
clc
je
xchg
in
cmp
add
sbb
leave
or
xchg
shll
sbb
xchg
sbb
mov
xchg
lret
lds
lret
fwait
out
cmp
lcall
jle
add
in
mov
mov
and
add
enter
mov
aas
and
dec
cmovbe
inc
xor
mov
std
nop/reserved
xchg
jecxz
or
mov
cmp
xchg
jo
pop
stos
push
daa
inc
outsl
pop
jp
and
mov
add
mov
push
pop
push
mov
xchg
stos
xor
sub
and
aas
cld
add
flds
icebp
inc
scas
aaa
dec
pusha
jecxz
outsl
or
add
sub
xchg
cmc
lret
hlt
fmul
inc
mov
xchg
mov
pop
sbb
fwait
pop
repz
xor
mov
mov
addl
dec
stos
cmp
shlb
leave
pop
lods
inc
push
and
pop
mov
pop
and
sub
int
fiaddl
lcall
lcall
sub
xor
adc
cmp
and
xor
aaa
sub
roll
add
hlt
adc
sbb
cpuid
mov
fs
es
dec
push
dec
scas
ret
xor
fcmovnb
imulb
xor
stc
jnp
insb
pop
cltd
cmc
test
pop
mov
pop
mov
add
stos
cld
out
adc
ret
adc
sub
in
xor
into
mov
sub
jno
jp
call
lods
jne
lcall
or
lahf
je
inc
fucomp
popf
jne
cli
xchg
rolb
sahf
mov
lcall
xor
sub
mov
into
mov
ljmp
out
inc
cli
out
or
inc
cmove
cmp
out
pop
mov
fidivrl
mov
adc
out
fisubrl
or
pop
imul
insb
xor
cmp
test
pop
pop
pop
jmp
jle
fnstenv
add
dec
jmp
cmp
and
adc
push
adc
arpl
cld
mov
fmul
cmpsb
pop
aam
inc
sbb
sub
rcl
xchg
pop
mov
lock
dec
scas
addl
cmp
imul
imulb
es
push
stos
daa
adc
ret
ret
ret
and
cmp
fmuls
mov
jae
pop
iret
sub
cwtl
mov
pusha
xchg
cmp
cmp
pop
dec
sub
adc
sarl
insb
adc
data16
pop
test
sub
mov
xchg
scas
ja
inc
jae
inc
cli
xor
pop
addr16
add
dec
cmp
sub
out
shlb
bound
push
jmp
xor
mov
imul
scas
mov
cwtl
adc
cmp
out
mov
mov
sahf
lcall
jno
popf
pop
mov
pop
and
repnz
lea
or
daa
inc
test
xchg
mov
mov
cmp
and
xchg
mov
mov
push
dec
out
push
enter
add
aam
xor
insb
icebp
or
push
in
lret
pop
daa
adc
in
push
aad
lea
add
jo
popa
mov
lods
sub
mov
out
mov
pop
sarl
xchg
mov
add
std
sti
mov
test
adc
pushf
mov
out
add
lahf
gs
out
dec
loopne
or
in
sahf
clc
orl
mov
dec
rol
jp
lock
scas
mov
fs
aas
lret
jmp
or
repz
dec
cmpsl
mov
ret
push
test
nop
cmpsb
cmp
dec
loope
cmc
push
jg
mov
loope
test
cmp
vcvtps2dq
mov
pop
cmpsl
call
add
rcl
or
mov
jns
es
jns
mov
clc
sahf
sub
ss
jbe
mov
aaa
hlt
push
jle
adc
popf
jecxz
filds
sbb
int
cwtl
add
and
jge
jno
test
pusha
fs
adc
jae
out
mov
inc
lods
or
lds
and
pusha
stos
cmp
add
pop
adc
filds
adc
sbb
mov
jecxz
dec
idivb
pop
add
sub
int
adc
out
mov
jno
cmpsl
inc
lds
adc
fs
mov
addl
push
mov
push
frstor
idivb
jg
daa
sbbb
mov
or
jo
cmp
loop
or
pop
cld
iret
popf
push
jmp
popf
inc
fistps
mov
sarl
les
mov
jns
push
cmpl
insb
aad
pop
test
xlat
mov
stos
inc
and
inc
aaa
adc
sub
jecxz
push
add
test
stc
push
mov
notb
rclb
dec
call
xor
mov
sub
push
outsl
pop
push
dec
mov
sbb
xor
insb
cmp
mov
jecxz
jp
adc
gs
stos
push
add
int3
rcll
movsb
dec
inc
push
add
inc
pop
mov
cmp
mov
adc
pop
or
lds
or
sbbb
or
xchg
cmp
push
cmpsl
data16
scas
into
jbe
mov
mov
inc
imulb
mov
adc
lods
pop
shrl
in
les
repnz
and
or
mov
push
sub
scas
jmp
sub
push
push
and
cltd
dec
shl
sbb
cmp
jle
pop
popa
pop
shr
les
stos
mov
lret
stos
push
movsb
cs
lods
mov
sbb
mov
fimull
mov
xorb
ljmpw
imull
mov
jbe
sbb
movsb
inc
mov
cmp
repz
and
js
or
cmp
inc
call
xor
aam
xchg
mov
mov
int3
lock
xor
es
test
hlt
ljmp
stc
loope
jbe
xchg
cmpsl
sahf
jg
and
sub
jmp
es
neg
sbb
aaa
pop
or
icebp
lahf
push
outsl
jb
lret
stos
inc
xchg
in
call
add
cmp
popf
stos
movsb
mov
pusha
add
ja
dec
lock
out
pop
jmp
in
jp
adc
gs
push
cmp
mov
fwait
inc
or
das
popf
pop
inc
push
xlat
repnz
out
stc
lds
mov
mov
fcomi
or
repz
repnz
dec
mov
or
mov
jns
push
inc
shll
int3
stos
dec
cmpsb
popa
ja
and
adc
sbb
loope
and
cmc
ljmp
xor
inc
loop
dec
lret
add
adc
mov
sub
push
xor
push
sbbl
pop
mov
push
push
jne
sbb
and
in
push
and
aad
push
cmp
jne
mov
pop
mov
sti
mov
loope
into
and
leave
cmp
shlb
imul
lock
mov
and
sub
outsb
add
hlt
push
neg
and
imul
push
ds
shll
popa
icebp
pop
adc
pop
jge
mov
push
hlt
cmp
shrl
fcoml
stc
push
add
pop
aaa
dec
inc
sbb
ret
mov
xchg
mov
push
add
mov
aam
lret
pop
add
push
adc
lock
test
ficoms
mov
adc
dec
pop
mov
xor
mov
cld
xor
sbb
mov
movsl
and
cmc
pusha
sbb
aaa
and
jo
pushf
sarb
xor
add
mov
and
pushf
push
outsb
mov
dec
push
add
jmp
sub
rcrl
cwtl
and
or
adc
shlb
xchg
scas
xchg
push
sti
dec
insb
imul
fs
push
cltd
lcall
scas
pop
push
popa
xor
xchg
mov
test
push
cmp
push
sbb
in
ret
das
cmpsb
inc
addr16
push
out
cmp
and
xor
jnp
pusha
mov
pop
daa
mov
out
out
pop
outsb
cmp
aam
pop
shrb
out
loop
jmp
repz
div
push
xchg
mov
loopne,pn
in
xlat
in
sub
and
xchg
idivb
or
adc
mov
icebp
es
or
inc
lret
mov
icebp
cmp
mov
gs
sub
cmpsl
sbb
negl
in
push
outsl
das
jle
mov
sbb
daa
push
int3
movsl
push
cmp
xor
sbb
lcall
dec
lock
mov
push
push
mov
test
or
push
sbb
dec
mov
sbb
and
mov
mov
or
cmp
or
cmp
jp
sbb
adc
adc
lods
in
iret
push
loope
out
icebp
mov
dec
mov
nop
in
mov
lds
int3
aaa
std
push
or
sahf
fcmovbe
in
jg
mov
sbb
pop
ror
sub
cmp
lahf
mov
iret
inc
pushf
jp
adc
pusha
push
fimull
imul
jns
scas
call
mov
sbb
ret
xor
das
test
enter
imul
or
sti
inc
jg
xor
adc
mov
jge
test
addr16
lods
shl
or
cmp
lock
out
jp
enter
test
or
sbb
jbe
sub
mov
aad
cmp
fiadds
xor
xor
and
ds
or
pop
mov
jge
mov
arpl
scas
pop
loope
xchg
lods
mov
clc
lods
imul
jp
dec
push
adc
int3
out
cmp
push
arpl
les
std
in
fmuls
pop
mov
pop
enter
cmpsl
sti
and
pop
jle
mov
xchg
sbb
mov
aaa
and
pushf
adc
inc
mov
in
leave
jb
es
je
gs
adc
cmp
cmp
lret
cmpb
in
mov
sub
sbb
dec
scas
ret
add
ljmp
and
stos
int3
pop
xor
shrb
das
xchg
repz
stos
lcall
sbb
dec
aas
je
add
add
ja
sub
push
aam
outsb
scas
decb
shll
mov
xchg
cs
data16
jecxz
or
push
sti
jecxz
leave
repnz
sbb
mov
arpl
pop
inc
jae
lret
loop
cmpsl
mov
js
add
faddl
push
push
xchg
scas
sub
dec
aad
les
push
push
sub
jnp
fistpll
aas
dec
in
push
add
dec
xchg
dec
and
sbb
shlb
das
lds
adc
mov
rcrl
jmp
dec
clc
or
add
sub
add
sbb
imul
cmpsl
mov
inc
jge
mov
xchg
adc
gs
iret
cmp
mov
xchg
cmp
aam
loope
ret
sub
pop
push
andb
adc
mov
jmp
mov
xorl
stc
sbb
sub
adc
call
xor
push
lods
enter
mov
pop
adc
and
xor
movsl
fdivp
add
dec
jp
call
and
jno
mov
add
fcomps
mov
lock
xor
dec
mov
rorb
rolb
test
nop
sbb
insl
leave
insl
shlb
cs
or
imul
push
lds
cmp
xchg
adc
sub
leave
jae
repnz
dec
adc
adc
pop
add
or
cmpsb
bound
and
add
pusha
les
push
jmp
add
test
arpl
mov
hlt
sub
out
xchg
popf
add
scas
fdivp
imul
inc
cmc
fwait
daa
inc
mov
js
popf
dec
inc
imul
dec
xchg
shrb
cld
icebp
inc
loope
fcompl
and
test
lock
adc
jmp
into
jae
cmp
loope
movsl
and
dec
push
add
rclb
pop
jno
pop
pop
ja
rep
lret
push
sbb
push
push
pop
dec
adc
or
sbb
mov
xor
mov
test
ret
pushf
inc
xchg
push
shrl
stc
aam
xor
dec
xor
adcb
in
mov
xchg
icebp
adc
xchg
mov
test
pop
fwait
xor
das
fdivs
test
aas
shl
pop
cmp
fwait
or
fwait
add
fbstp
cmc
jle
test
xchg
je
adc
es
and
lret
aaa
push
mov
jb
fdivrs
adc
xchg
adc
dec
xchg
xchg
mov
int3
jmp
arpl
xchg
jmp
jg
bound
xlat
inc
icebp
adc
mov
pop
stos
adc
pop
int
mov
mov
test
shrl
fidivs
cmp
inc
in
mov
mov
loop
xchg
adc
and
cmp
pop
push
test
jg
mov
gs
pop
push
outsl
pushf
data16
out
addl
sti
sub
push
and
std
aam
adc
or
push
xchg
cmp
or
jae
andl
enter
pop
or
fs
dec
int
and
cmp
adc
call
aas
aam
andb
ljmp
jno
imul
mov
xchg
pushf
and
in
jne
cli
test
push
fwait
cmpsb
push
gs
adc
aad
cmp
lret
jmp
push
hlt
mov
movsl
push
push
in
sbb
test
inc
adc
fwait
lret
mov
adc
add
je
pop
or
sub
cli
push
aas
cmp
fsub
pop
nop
mov
das
dec
sub
stc
loope
cmp
cwtl
lea
push
dec
sbb
push
xchg
mov
dec
std
sti
icebp
push
cld
lret
jbe
mov
push
out
jecxz
push
mov
mov
pop
mov
addr16
mov
ljmp
sarl
test
push
cmp
cmp
jg
mov
jns
jge
add
xor
or
mov
icebp
fstl
xchg
hlt
pushf
push
rorb
xorl
mov
pop
xchg
and
out
mov
dec
add
xchg
stos
lock
dec
xchg
mov
mov
sbb
mov
mov
out
ret
xor
das
jecxz
test
push
test
push
out
mov
stos
push
lods
gs
adc
pop
imul
mov
inc
push
jne
stos
and
ss
cmp
push
xchg
pop
daa
inc
shlb
int
outsb
adc
cli
fiaddl
testl
xchg
pop
sub
shl
dec
push
stos
add
jle
hlt
push
pusha
es
or
and
xchg
repnz
xchg
movsl
mov
or
leave
cmp
jge
outsl
dec
push
clc
xchg
lahf
fadd
fbstp
mov
cmp
aas
das
xor
jge
sbb
pusha
and
sbb
adc
gs
ljmp
dec
fdivs
push
testb
test
rol
das
aad
push
mov
aas
jbe
mov
mov
rol
sub
dec
rorl
jg
addr16
pop
push
loopne
mov
lds
jp
and
fs
push
add
mov
test
js
lock
in
outsb
test
mov
adcb
subl
ja
rolb
add
cmp
lret
jns
cli
test
dec
decb
rcrb
cmpsb
jg
scas
xlat
imul
sub
mov
inc
aaa
mov
cmp
or
daa
repz
inc
js
sti
cmp
invd
lods
mov
cld
dec
repz
mov
xor
cmp
xchg
sbb
sub
sub
stos
sbb
add
hlt
stos
dec
push
dec
add
cld
lods
lods
aam
xlat
inc
fldl2e
xchg
andl
push
movb
cmp
pop
push
pop
and
xchg
dec
push
insl
imul
jnp
jmp
cmp
outsl
xchg
mov
iret
sarl
rorb
call
or
lods
mov
mov
imul
cmp
push
push
nop
popa
movsl
aad
in
fnstsw
push
inc
jne
bound
lcall
shr
push
adc
xchg
fdivrs
icebp
jl
fucomi
xorb
jnp
lret
adc
shr
cmp
xor
xor
xchg
ret
cltd
std
dec
in
inc
mov
cmc
in
stc
cmp
loop
subb
aad
stos
mov
out
std
sahf
xlat
insb
sahf
test
repnz
popa
mov
imul
inc
test
sub
daa
push
mov
testl
add
add
fists
jbe
xor
cwtl
ret
push
out
clc
call
aad
mov
jmp
loop
notb
ret
ja
push
mov
ficomps
add
jmp
iret
fmul
sbb
sbb
push
shlb
or
push
outsb
adc
xlat
pop
lcall
and
fistpll
add
mov
xchg
sub
xchg
cltd
inc
xchg
jle
mov
sub
bound
je
xchg
into
jne
stos
insl
inc
cli
sbb
in
cltd
mov
out
mov
mov
inc
xchg
ss
jno
xchg
mov
or
lret
int
movsl
add
add
adc
sbb
cmpsb
sbb
rclb
jnp
in
inc
or
into
add
idivl
sbb
sbb
mov
into
push
push
mov
sub
and
push
sub
dec
insb
or
push
aam
iret
sbb
mov
cmp
or
lock
mov
in
andb
and
in
outsb
add
adc
xchg
xor
xchg
xor
shrb
mov
aam
je
mov
pop
dec
jno
sbbb
push
push
fdivl
jo
cli
add
mov
push
jecxz
call
pop
test
hlt
or
mov
mov
sbb
and
icebp
jnp
pop
fucomi
push
cmp
or
mov
and
inc
aas
fidivrl
xor
pop
and
pop
ja
xlat
inc
out
cmp
movsb
pusha
mov
repz
adcb
and
pop
xor
insb
pop
call
addl
mov
ljmp
inc
jno
aad
cmpsl
push
es
mov
xchg
lock
pop
adc
mov
out
push
pop
shl
pop
cs
cmp
mov
nop
xchg
jl
jo
push
push
mov
mov
stos
mov
movsb
xchg
aaa
fldl
div
dec
fistpll
test
cli
cmp
push
inc
push
hlt
cmpsb
mov
xor
mov
ds
jnp
call
push
repnz
mov
aam
mov
cmp
sbb
push
int3
fwait
stos
aaa
pop
inc
jmp
cmp
jle
inc
test
mov
subb
dec
clc
sbb
scas
mov
icebp
aad
cmpsb
mov
mov
out
dec
repnz
xchg
push
fstps
out
aam
out
into
inc
xor
loopne
into
mov
xchg
pop
orl
sub
or
lods
fsubr
inc
adc
sbb
das
mov
std
pop
mov
jnp
ja
and
pop
cli
subl
insl
stc
aas
aam
dec
sbb
ja
mov
loopne
insl
sub
or
stos
cld
inc
or
pop
je
mov
push
stos
rorl
cltd
inc
mov
sbb
push
dec
jl
push
xchg
sub
dec
pop
jecxz
fidivl
mov
pushf
cmp
outsb
faddl
pop
push
roll
sahf
adc
in
jle
sbbl
popa
stc
dec
push
fsubrp
xchg
adc
inc
lret
test
jl
fs
inc
mov
mov
fistl
and
in
insb
shrb
cmpl
jecxz
into
mov
dec
movsl
call
ror
mov
fstl
cli
popa
and
adc
jo
repz
in
jp
mov
movsb
or
loopne
mov
xchg
inc
push
sbb
mov
lret
push
faddl
jge
mov
jg
fcmove
or
test
mov
mov
fsubrp
push
fisubrs
outsb
jp
push
ljmp
mov
push
jmp
jecxz
xchg
push
add
or
mov
sbb
stc
cs
add
stc
mov
shrb
or
adc
int3
daa
push
sbb
std
jnp
cmp
inc
les
std
sub
inc
sbbl
add
pop
inc
mov
and
sub
or
adc
lock
sub
mov
xor
ljmp
mov
mov
scas
dec
pop
push
jno
andb
jp
call
mov
outsb
lea
jecxz
in
addr16
jb
mov
lcall
rcrb
out
std
xor
xchg
call
push
js
fst
insl
or
mov
xchg
test
or
fcompl
or
jle
xor
pop
fmul
andb
fdivrs
outsb
cmp
shlb
sbb
data16
jg
jp
subl
xchg
scas
aam
jne
mov
enter
push
insl
xor
mov
lcall
not
aas
xchg
mov
in
cmpsl
lock
negl
cmc
mov
jg
test
addl
jo
lcall
pop
fwait
lret
mov
and
in
jae
mov
xchg
xor
jmp
inc
push
ret
push
mov
std
pop
pusha
cmp
mov
cmpsb
repnz
add
cli
or
xor
push
lods
ret
dec
mov
int
ds
cmp
sti
in
das
scas
test
fwait
insl
popf
jo
dec
pop
out
jnp
xor
shrb
mov
cli
test
pop
scas
ffreep
jae
bound
jecxz
movsl
mov
pop
das
mov
icebp
repz
push
cmpsl
sahf
call
add
out
mov
jno
stos
stos
inc
add
or
imul
aas
xchg
mov
gs
sarl
loop
xchg
push
int3
imul
pop
mov
mov
cli
sbb
dec
addr16
pop
es
addr16
push
fldl
xchg
lods
pop
jl
lock
nop
leave
jg
in
sub
xchg
adc
outsb
pop
mov
addr16
sbb
sti
add
imul
pop
pusha
jp
lock
sub
xchg
adc
ss
xor
gs
outsl
test
xor
andb
push
mov
nopl
out
repz
insb
mov
imull
fstps
push
aam
push
cmp
inc
loopne
mov
pop
movsb
fimuls
aam
rcrb
testb
add
adc
lods
es
jo
scas
insb
aad
fcmovnb
das
jp
cmc
in
lcall
push
xor
insb
loope
mov
add
add
fxam
pop
test
mov
mov
jg
inc
and
stos
sbb
cmp
enter
psrld
push
inc
mov
xchg
leave
in
cmp
jb
fmulp
js
jae
or
xchg
jle
aam
ja
jg
xchg
or
pop
jns
addb
sub
mov
cld
addb
xor
sti
fcoml
xor
lds
fcoml
xchg
jle
push
push
out
std
sub
dec
jmp
cmp
aam
adc
outsl
inc
aas
adc
fisttpl
mov
pop
or
nop
in
mov
push
xor
pushf
lret
and
inc
faddl
and
add
adc
dec
jmp
aaa
jo
enter
popa
pop
xor
cmp
inc
out
xchg
cli
pop
xlat
dec
test
in
cmc
cwtl
dec
cli
das
pop
shlb
xchg
aaa
jb
lcall
push
mov
mov
filds
popf
loop
mov
push
jmp
xchg
es
icebp
jmp
clc
xchg
inc
or
or
add
div
mov
cmp
pop
push
in
add
fadds
mov
cmpsb
fidivs
and
pop
xchg
cmp
mov
xor
pop
sub
and
add
stos
icebp
sahf
lret
xor
cld
xchg
and
xor
rcrb
jp
stos
push
jmp
dec
ja
add
push
je
jg
sar
adc
out
xchg
dec
push
pushl
repz
pop
out
mov
mov
out
xchg
enter
or
mov
sbb
fcmovu
nop
dec
xchg
xorb
xlat
inc
jl
inc
fistpll
lods
iret
jne
push
in
aad
dec
push
push
pushf
pop
mov
or
iret
sub
in
arpl
and
or
lret
pop
add
and
cmpl
addr16
les
or
pop
sub
add
xchg
test
xor
xor
cmp
xchg
dec
inc
shlb
jge
mov
and
fcompl
pop
pop
lahf
out
ficoms
jecxz
xchg
mov
std
sbb
jmp
jbe
pop
imul
jmp
mov
pop
shlb
loope
dec
xlat
lods
gs
cs
push
cwtl
push
leave
pop
mov
sahf
add
addb
ss
adc
hlt
adc
and
aam
unpckhps
push
lods
jl
enter
cltd
mov
or
int
out
mov
lods
scas
enter
xchg
scas
sbb
inc
push
ljmp
adc
push
imul
ja
fs
bound
and
lea
icebp
inc
lods
jbe
aam
fcomip
sub
enter
jne
mov
ljmp
clc
push
jnp
cmpsl
pop
and
cmp
dec
xor
and
mov
jbe
arpl
sti
loopne
mov
cmp
lea
xor
dec
lds
push
xlat
iret
cwtl
mov
subb
push
xchg
sbb
in
pushf
xor
cli
push
adc
fdivrs
addr16
add
and
bound
mov
insl
add
dec
jne
mov
outsb
pcmpgtb
lret
rcrb
gs
sbb
lahf
test
adc
or
sub
mov
in
add
sub
and
int3
jbe
mov
cmp
push
aad
stc
or
and
mov
sbb
sti
cmp
jle
fnop
cs
andl
popf
cmc
lods
pop
enter
int
pushf
pop
mov
int3
cmp
test
push
stos
inc
add
inc
push
mov
loop
jle
scas
sbb
xchg
pushl
cmpsb
shll
repnz
outsl
jbe
js
je
xchg
pusha
jge
ss
test
inc
out
mov
and
cmp
mov
fmuls
xchg
dec
mov
inc
adc
sbb
movsb
outsb
xchg
xchg
xor
sbb
cwtl
mov
inc
lods
das
xchg
std
sbb
cs
cld
insl
mov
out
imul
dec
ficomps
stc
pop
lahf
cltd
sbbl
adc
jmp
mov
scas
adcl
pop
dec
sbb
xlat
ja
cmp
xchg
jns
loope
xor
call
lahf
hlt
xchg
xchg
adc
adc
test
enter
fwait
jge
dec
fidivrs
add
pop
ret
and
jmp
sahf
inc
dec
or
mov
aam
aam
inc
popa
in
test
lahf
sbb
dec
push
cmp
cmp
mov
es
mov
dec
lret
mov
dec
adc
call
aaa
push
mov
lahf
sbb
jmp
xchg
int
inc
ljmp
xor
push
in
adcl
iret
fisubrl
inc
pusha
mov
and
or
out
daa
mov
cmc
mov
mov
ss
cmp
rolb
dec
pop
dec
repnz
hlt
jle
pop
and
ss
dec
popf
sbb
xchg
sar
decb
jmp
movsb
js
pop
in
push
cmp
in
lret
push
insb
sahf
or
stos
iret
add
mov
lock
leave
pop
addr16
sbb
cmp
icebp
test
arpl
dec
pushl
sub
fimull
sbb
xlat
sahf
mov
mov
and
ss
bound
mov
push
jbe
pop
jns
and
ret
je
aad
xchg
inc
repnz
push
stos
ss
add
or
arpl
fldl
andb
push
xor
aad
sbb
jle
push
ds
sub
sti
push
mov
dec
das
mov
jno
ja
jb
cltd
sub
shlb
sti
inc
push
data16
test
movsl
aaa
jge
into
rolb
cmpb
inc
or
or
lods
xor
xchg
xchg
insb
cld
std
push
loop
sub
pop
sbb
fiadds
cli
inc
jne
xor
mov
lret
sub
xchg
adc
or
pop
jno
pop
rol
shlb
in
cwtl
inc
add
stos
pop
push
mov
pop
fiadds
es
lcall
rolb
mov
inc
and
insl
scas
aam
inc
clc
push
fcmovne
or
xlat
orb
aam
fwait
xor
push
popf
jno
fmul
pop
in
mov
xchg
mov
mov
cld
fists
mov
sub
jns
les
dec
push
pop
cmc
jne
insl
outsb
hlt
mov
xor
dec
push
cmpsl
xor
dec
sub
fnsave
sti
cmc
int3
inc
ret
push
dec
xlat
inc
dec
aaa
ss
inc
leave
movsb
xchg
in
push
xlat
pop
xchg
dec
jl
pop
cli
xlat
xor
sbb
mov
dec
jge
mov
adc
xor
cmp
aam
add
mov
out
lret
scas
mov
stos
adc
xchg
mov
fwait
cmp
in
pushf
and
mov
insl
fsubs
lret
mov
adc
xabort
pop
add
fiaddl
push
add
inc
call
ds
pusha
popf
adc
fsubrs
push
dec
roll
mov
out
jnp
addb
int3
cmp
cltd
or
xchg
push
addl
fs
pop
jo
inc
popa
repz
stos
mov
data16
push
jae
popa
in
xor
sub
inc
clc
loopne
inc
mov
or
add
mov
dec
sub
mov
pop
cltd
or
mov
xchg
mov
and
psrld
es
sbb
sub
and
iret
enter
push
pushf
jge
push
push
pop
sbb
lods
test
call
xchg
jl
mov
das
flds
adc
jns
xor
ret
lret
lods
in
negl
mov
shlb
mov
push
negb
lret
push
dec
mov
cs
push
ss
std
xchg
cmpsb
push
xchg
test
hlt
pop
push
call
or
ret
jl
pushf
int
push
pop
enter
cmpsb
into
push
mov
jmp
cmp
cltd
hlt
in
lahf
cmp
sub
fcompl
int3
rorb
rcrb
mov
in
jmp
in
inc
repnz
add
enter
nop
xchg
xchg
movsb
jo
mov
or
mov
scas
dec
mov
xchg
mov
mov
mov
mov
mov
scas
stc
popa
mov
loopne
xchg
stos
lret
pusha
mov
cmpsl
cmp
sbb
jne
sbb
fimuls
cmp
add
sub
mov
jmp
imul
and
push
pop
ret
inc
adc
sarb
stos
mov
mov
inc
in
clc
cmp
push
xchg
jmp
mov
mov
and
pushf
rolb
mov
lock
add
das
add
xchg
push
sbb
sub
pop
or
std
xlat
and
sbb
roll
pop
pushf
xchg
mov
mov
ds
sti
in
insb
jne
cmp
int
test
nop
sbb
mov
xchg
arpl
outsb
adcb
fdiv
mov
or
lods
cmpsl
sub
pop
push
dec
in
aas
mov
sub
incb
enter
cltd
cmc
loopne
mov
std
sarb
out
bound
rclb
ret
push
mov
mov
mov
mov
enter
loop
mov
xchg
popf
ja
imul
icebp
ss
outsb
iret
lea
fisubs
push
test
in
dec
jbe
int
inc
fdivs
push
dec
mov
inc
call
add
xor
mov
cmp
sbb
jmp
les
xchg
cmpsl
std
daa
mov
cmp
sub
pusha
push
std
sti
decb
stos
push
adc
scas
mov
test
mov
mov
int3
jae
cli
shl
sahf
scas
mov
or
xor
jno
or
icebp
jns
sti
sahf
loopne
jge
pop
pop
cmc
dec
int3
cmp
ljmp
adc
mov
fistl
sbb
inc
stos
add
mov
sub
cmp
aad
and
aam
test
xor
or
inc
test
decl
es
xlat
cli
jg
out
mov
pop
push
sti
fs
shrb
adc
call
outsl
cmc
cmpb
icebp
lahf
shll
push
div
dec
or
popf
xchg
xor
mov
cmp
jge
ror
jg
lods
xor
mov
loop
lea
push
xorl
sahf
push
dec
adc
inc
insb
mov
cltd
mov
mov
jge
sbb
dec
xor
test
dec
jmp
stos
js
jp
stc
dec
lock
push
push
int
jb
xlat
fwait
jbe
gs
xchg
out
pushf
jae
jb
sarl
push
xchg
and
dec
adc
pusha
mov
pop
test
jne
jp
push
sub
or
aaa
or
lods
outsb
clc
test
cmc
xchg
or
adc
pop
xchg
cmpsb
inc
mov
jne
cwtl
daa
popa
jle
add
sar
pusha
inc
inc
insl
add
or
inc
imul
inc
bswap
xor
in
xor
repz
int3
mov
ss
mov
loope
fs
sbbb
sub
or
dec
out
jmp
lods
call
test
popa
pop
jp
mov
lods
mov
movsl
xchg
fldt
cmp
cmc
cmp
mov
push
fiaddl
xchg
jb
xchg
out
xchg
jbe
xor
daa
popa
mov
bound
xchg
shll
mov
mov
es
or
ret
std
mov
and
cli
fsubl
push
cmp
test
add
je
inc
add
cmc
jne
mov
adc
mov
adcl
int
stc
imul
dec
push
add
lret
int3
orl
jecxz
mov
add
aam
pop
pop
js
mov
and
lds
push
mov
in
and
fcmove
mov
xlat
xchg
adc
xor
es
out
sarb
xchg
sbb
popf
movsb
lods
orb
sbb
mov
pop
ss
add
add
and
mov
sbb
xchg
in
pop
mov
imul
pop
cmp
cli
inc
call
xor
mov
and
scas
insb
jae
fs
sahf
adc
add
and
shrl
push
enter
bound
lcall
subl
inc
xchg
mov
add
jle
inc
inc
divb
nop
or
loop
int
pop
shr
push
lahf
outsb
shl
in
jle
insl
pop
bound
and
fs
jno
jbe
scas
out
adc
les
scas
mov
in
insb
sahf
or
xchg
aad
mov
mov
jne
or
mov
ret
mov
sbb
sub
and
aas
sbb
pop
and
mov
and
xor
cwtl
scas
enter
jp
lods
jge
jmp
adc
cmpsl
js
inc
jmp
cmpsb
jge
insb
dec
inc
call
cmc
test
push
mov
fnstsw
insb
push
adc
pop
call
outsb
xor
pop
add
mov
cmpsl
jbe
incb
ja
daa
jae
inc
rcrb
mov
icebp
es
stos
mov
int3
divb
rol
inc
ret
ja
je
out
repnz
stc
mov
push
cmpsb
iret
xor
mov
xchg
xlat
push
insl
push
int
shlb
mov
fwait
aas
imul
sub
inc
loope
adc
cmpsl
pusha
mov
sbb
mov
sbb
push
xor
subb
mov
daa
mov
faddl
scas
lea
into
sti
movsb
fldcw
lock
xchg
repz
and
sub
push
out
outsl
iret
xchg
aas
add
icebp
cwtl
and
pop
mov
or
push
shll
cwtl
inc
sub
fldl
fstpt
out
ret
iret
cmp
add
jno
mov
xor
sub
jecxz
cmpsb
xlat
inc
jbe
sub
dec
lret
mov
and
xchg
lahf
xchg
and
test
dec
ds
or
xchg
pop
out
fidivl
cld
mov
mov
addr16
adc
imul
sti
xor
cmp
call
push
lcall
fsubp
fstl
in
push
out
sbb
inc
or
mov
mov
jno
outsl
pop
fnstsw
int
or
cmc
pop
int
inc
cltd
push
leave
add
jae
pop
jecxz
insb
cmp
cmp
aad
xchg
mov
mov
mov
add
les
jne
daa
push
mov
cmp
lds
mov
xchg
test
mov
mov
mov
fisttps
sbb
test
inc
lods
cli
hlt
outsl
movsb
stos
in
rclb
inc
jo
repz
mov
add
mov
mov
imul
dec
pop
add
int3
xchg
popa
or
xchg
gs
rorl
adc
jb
push
rcll
cmp
and
cmp
imul
push
cmc
sub
test
das
sbb
sub
and
fnstenv
and
daa
push
jl
aaa
lret
shr
std
mov
pop
gs
push
loop
mov
push
xor
jo
jbe
xor
mov
or
lods
pop
pop
leave
and
and
mov
movsl
push
inc
add
mov
cmp
lcall
lods
xchg
mov
mov
xchg
clc
adc
sub
xchg
aad
fsubrl
and
mov
xchg
mov
dec
pop
cmp
out
in
cmc
add
pop
xchg
out
jge
in
call
pop
ret
xchg
add
xor
sub
dec
dec
test
imul
into
adc
mov
push
inc
dec
repz
mull
ss
test
cmp
sahf
pop
sbb
fwait
pop
xchg
mov
cmp
dec
inc
jnp
movsb
mov
push
push
push
sbb
pop
fcmovnb
in
xchg
fisubl
mov
sub
loopne
enter
jnp
add
cmp
pop
pop
sub
xor
sbb
inc
sbb
xchg
cld
inc
insb
dec
push
mov
jo
cmpsl
aam
mov
xor
gs
mov
lahf
pop
jl
xor
stos
dec
mov
mov
jno
and
fmull
xchg
mov
push
loop
sbb
in
insl
xor
stc
scas
fstpl
enter
pushf
mov
roll
and
in
push
popa
push
cli
cmp
negl
cmp
unpckhps
pop
mov
mov
cli
lds
clc
test
mov
mov
pop
jbe
inc
imul
ds
sub
cld
lret
popa
push
add
fists
jle
sub
daa
lret
mov
inc
lods
inc
sub
cmpsl
sahf
jg
in
or
lahf
andb
jg
sbb
in
or
mov
mov
mov
jge
lods
or
stc
scas
out
icebp
push
lods
lahf
es
mov
mov
inc
sub
add
repnz
or
add
je
in
leave
scas
dec
push
adc
pop
mov
sub
push
xor
cmp
and
fwait
sarb
repnz
ficoms
pusha
and
mov
mov
ja
push
sbb
sbb
das
inc
push
fsubrp
and
cmp
jge
fcomi
xor
mov
xchg
test
sarb
pop
and
mov
sahf
bound
js
int
stos
outsb
pushf
repz
ret
jae
jecxz
pop
out
outsl
enter
jmp
cmpsb
lods
pusha
push
xlat
mov
test
xor
jge
out
fnstcw
sbb
icebp
js
ret
ss
mov
inc
sbb
clc
shll
dec
xchg
inc
pop
xchg
jl
and
jmp
je
lods
xlat
in
cmpsl
rclb
xor
pop
sbb
lcall
pushf
pop
ret
mov
push
cwtl
pop
pop
call
pushf
call
mov
mov
dec
imul
mov
lods
jnp,pt
scas
sbb
xor
jo
rorl
push
rcrb
dec
lea
mov
xchg
orb
xor
mov
pop
mov
jge
ret
stos
out
mov
add
or
aam
push
cmpsl
push
leave
imul
jbe
xchg
lret
ret
test
bnd
leave
push
mov
add
sbb
stc
movb
xor
cmp
lahf
mov
int
and
xlat
jb
insb
jns
xchg
inc
call
ljmp
imul
dec
hlt
xor
lcall
mov
inc
sub
xchg
jg
cmp
out
addb
jno
lock
dec
jg
test
push
mov
rorb
fldl
mov
inc
dec
sub
negb
into
aaa
pop
into
pop
sti
dec
gs
sbb
sub
xor
ljmp
sub
jl
lcall
add
into
push
outsl
imul
popf
test
sahf
jl
fistps
mov
fidivrs
insl
sub
xor
fcmovne
sub
mov
xchg
mov
rcrl
mov
in
pop
lods
sbb
mov
jecxz
and
mov
mov
jmp
push
lods
lock
imul
and
jo
push
and
sub
jge
add
stc
in
adc
sub
cmp
mov
mov
mov
mov
mov
stos
pusha
faddl
std
add
adc
jns
ret
nop
lds
adc
mov
fiadds
aad
je
imul
xchg
js
test
in
outsb
fisttpll
je
out
data16
jge
pop
cmc
xor
or
xchg
push
mov
jno
outsl
pop
js
pop
mov
fprem1
aas
int
mov
stos
shrb
xor
or
adc
jg
xchg
jne
pop
inc
sub
mov
and
inc
dec
bound
gs
aaa
int
jecxz
jnp
cmp
add
mov
outsb
call
sbb
repz
daa
dec
fcompl
outsb
scas
loop
xchg
xchg
js
test
jge
in
loopne
xor
push
lock
mov
sbb
aam
add
call
mov
mov
inc
inc
out
test
add
rcll
negl
dec
sub
fld
mov
or
dec
in
lret
jbe
or
xchg
in
mov
pop
lods
ja
pop
ret
sub
xor
push
push
jns
iret
mov
jns
dec
mov
scas
les
lods
jmp
test
fsubrs
push
add
xchg
test
movb
ds
mov
fbld
movsl
dec
add
mov
lods
lock
sub
inc
subb
test
cmp
in
sbb
lds
pop
gs
push
mov
mov
or
push
push
das
sub
call
sbb
arpl
push
add
xor
in
and
jmp
mov
in
or
dec
jge
repz
addb
popf
push
loope
aas
inc
lcall
shl
ficoml
ret
cmp
and
pop
loope
loopne
fidivrs
pop
cmpsl
add
or
sub
int
das
movd
lret
adc
push
lods
jae
mov
xchg
inc
repnz
cmp
popa
sub
push
pop
loop
ljmp
lret
je
sbb
push
cmp
add
xor
mov
rcl
daa
or
jo
cs
fnstsw
pop
xor
pop
mov
push
dec
and
lds
pusha
sbb
decl
sbb
scas
mov
in
pop
cmc
mov
push
je
add
out
sub
push
out
adc
mov
adc
xchg
xchg
sbb
mov
inc
push
mov
rorl
xchg
adc
repnz
or
mov
test
pop
popf
pop
and
imul
pop
mov
ja
mov
decl
xor
mov
add
lcall
mov
and
ja
and
xor
aam
jnp
lahf
jge
test
add
mov
movups
pop
in
xchg
scas
pop
sub
inc
or
notl
cmp
and
mov
addr16
lcall
je
jnp
mov
in
mov
xchg
sbb
movsl
cld
shrb
fidivl
sbb
mov
movsl
sub
andl
push
mov
pop
push
loop
popf
cld
mov
mov
ds
cmp
dec
jp
push
pop
clc
sarb
mov
or
sub
dec
adc
arpl
sbb
mov
lock
scas
sbb
mov
inc
sbb
sub
fisubrs
push
rolb
mov
test
add
roll
loop
mov
and
sarb
and
jne
mov
jg
cmp
or
in
mov
scas
mov
ss
imul
rcrb
nop
jb
mov
loop
push
and
or
ja
xchg
mov
mov
popf
push
xor
sbb
movsl
loop
sti
stc
adc
or
jae
adc
mov
in
je
dec
sbb
jns
mov
add
xor
int3
loopne
xchg
jns
pop
mov
mov
fwait
xor
clc
cmpsl
pop
cmp
lret
pop
fidivl
and
dec
cmovg
dec
push
mov
pop
mov
xchg
and
loop
adc
in
repz
pusha
or
mov
xchg
xorb
es
sbb
sbb
stos
out
in
jne,pt
in
sub
mov
adc
cli
sbb
and
jg
test
nop
pop
push
adcl
jne
add
in
cmc
cmpsl
adc
adc
mov
or
sbb
or
dec
sbb
jb
sarb
ss
aad
dec
test
aaa
fildl
cmp
mov
xchg
test
hlt
jge
add
insl
jns
push
fidivs
gs
push
add
push
pushf
push
loope
pop
int
fcoml
pop
cmc
add
shlb
mov
push
push
ljmp
shlb
les
lea
fimull
inc
sub
pop
cmp
jo,pt
es
fwait
rclb
loop
mov
and
mov
pop
push
arpl
scas
jl
cmpsl
mov
arpl
scas
loopne
adc
insb
fcomip
or
clc
jmp
mov
cmp
cld
lock
push
mov
xchg
int
xor
rclb
jnp
lods
aam
into
sbb
push
cmc
adc
mulb
stc
stos
xor
xchg
mov
ret
or
mov
push
mov
cltd
mov
adc
xchg
jmp
fwait
jl
jmp
mov
cs
mov
dec
jmp
inc
out
cmp
dec
mov
push
mov
and
icebp
inc
mov
jae
mov
inc
mov
inc
pop
xchg
cmp
test
lock
lods
add
loope
addb
inc
insl
jae
fsin
aam
les
and
fs
out
fwait
gs
iret
divl
std
jmp
inc
cmp
shll
repnz
cmp
cld
loope
loopne
fdivr
fadd
cmp
enter
ljmp
xor
jno
mov
cli
sbb
sub
jb,pt
lea
pop
push
data16
stc
cltd
sub
or
adc
loop
push
mov
xor
das
bound
xlat
xchg
jle
pop
dec
push
and
cmpl
and
adc
sbb
je
pop
imul
mov
lea
dec
lcall
das
leave
jle
shlb
hlt
mov
mov
fisttpl
nop
cli
jmp
in
andl
cmp
icebp
push
jecxz
pop
jg
cwtl
dec
cli
pop
push
ret
ret
ss
and
push
loope
sbb
xor
ljmp
xchg
lret
xor
enter
add
rol
pusha
aas
jno
stc
test
mov
imul
jnp
stos
popa
xor
push
add
int3
sbb
sbb
lds
cmp
aad
aas
fbld
mov
add
dec
or
mov
or
mov
outsl
xchg
jb
pop
addr16
mov
dec
iret
addr16
add
fildl
mov
xchg
add
pusha
pop
out
dec
rcr
loopne
push
add
or
mov
xor
jo
fmuls
jge
mov
xor
add
dec
sbb
push
insl
out
inc
pop
popf
fdivs
das
cmp
test
sub
das
mov
fnstenv
dec
cmp
cmp
push
mov
mov
mov
leave
pop
fmull
movb
inc
cmp
fbld
outsl
sbb
sbb
cmp
add
xchg
in
sub
insb
imul
lahf
testb
lea
push
lea
fiaddl
sti
sbb
ficompl
xchg
xchg
fs
xchg
or
mov
mov
pop
inc
jge
pop
mov
sbb
cmpsb
in
mov
aam
xchg
xlat
outsb
xchg
mov
push
sub
mov
popf
insb
pop
inc
fldenv
lcall
mov
mov
cmpl
decb
lea
cs
ja
cmp
push
xor
mov
cmp
ret
mov
mov
xlat
pop
out
jo
enter
xor
mov
loopne
fmull
or
pop
xchg
divl
sub
fidivl
imul
inc
flds
jbe
ljmp
pop
mov
cmp
dec
in
mov
les
loopne
int3
sahf
mov
insl
push
mov
jmp
jbe
aas
sbb
bswap
repnz
pop
stos
sbb
mov
int
jmp
and
aam
stos
cltd
ss
test
pop
ss
pop
scas
mov
sbb
mov
dec
ss
pop
jl
cmp
cmpsb
inc
les
cmpsb
push
in
mov
imul
sbb
push
subl
cmpsb
jl
xchg
pop
sbb
mov
aaa
mov
push
push
adcl
mov
jmp
mov
js
out
mov
inc
add
sbbl
loope
push
clc
mov
adc
sub
adc
jbe
fldcw
adc
jnp
or
shlb
rcll
aam
xchg
cli
sahf
ss
push
imul
sub
or
sub
cmp
dec
dec
push
lds
out
ljmp
fcompp
cmp
rcrb
push
cli
adc
cltd
jno
or
shlb
sbb
dec
cmp
rcrl
out
pop
inc
inc
int3
les
xlat
mov
arpl
ret
push
xchg
jge
jae
pop
lock
sbb
or
push
push
and
es
lcall
bound
movsl
movsl
enter
xchg
fldenv
add
pushf
sbb
jnp
imul
dec
out
xchg
mov
and
dec
in
pushf
jmp
into
mov
sub
sub
jge
loope
lea
into
pop
xchg
stc
mov
es
xchg
cld
mov
fsubrs
das
and
inc
dec
and
pop
mov
into
addl
pusha
xchg
call
stc
outsl
ja
or
mov
outsb
in
arpl
mov
push
cmp
or
sbb
jge
pushf
cli
pop
pusha
popa
adc
xchg
leave
inc
sub
adcb
movsb
sbb
adc
imul
test
jp
fsubl
jg
xchg
movsb
pop
dec
inc
loop
jge
adc
push
mov
nop
mov
icebp
cli
aas
leave
cmp
fisubl
pop
sub
mov
mov
xchg
cmp
out
loopne
popa
mov
ss
push
fsubs
jae
int
xchg
movsl
ljmp
pop
dec
and
out
out
das
fs
cld
cwtl
cli
adc
jmp
dec
or
mov
lret
mov
sub
xchg
or
xorl
ret
mov
mov
imul
jge
adc
outsb
enter
sbbl
and
xor
repnz
pop
outsb
jb
or
cmpsl
sbb
fildl
jne
repz
int3
std
lds
mov
fs
dec
jne
mov
adc
andl
adc
ja
sub
out
incb
sbb
pop
movsl
std
add
push
int3
clc
mov
jmp
pop
sub
xor
xchg
jg
dec
xchg
xor
int3
pop
push
or
out
mov
dec
cltd
cmp
out
stos
push
filds
rcr
dec
pop
xor
adc
out
push
fildll
mov
std
push
xchg
mov
add
sbb
pop
sub
adc
sbb
adc
test
cltd
ret
mov
or
push
mov
jb
xchg
lods
stc
lds
sub
or
movsb
fcmovnbe
xor
mov
xor
inc
mov
int
inc
jmp
cld
mov
adc
ficoml
mov
adc
fprem
arpl
jl
je
loopne
into
adc
aas
repnz
jge
xor
lock
bound
cwtl
xchg
cmp
subl
sub
sbb
and
add
mov
and
fstps
aaa
cmp
nop
or
and
inc
adc
rclb
add
mov
add
inc
jl
jns
cmp
ficomps
sarb
out
sbb
sarb
pop
mov
adcb
divl
pop
loop
pop
sbb
std
pushf
cld
lock
xchg
mov
push
sahf
dec
ror
push
in
cmp
mov
xlat
test
test
xor
rclb
mov
fidivl
test
inc
xchg
mov
xchg
fisttpl
mov
sbb
add
xor
or
fildl
mov
and
add
push
jge
adc
push
les
test
jo
adc
seta
loope
cltd
outsl
enter
test
outsl
pop
out
xor
out
mov
and
stc
shl
adc
test
and
sbb
call
leave
inc
sub
arpl
mov
imul
add
ret
mov
out
xlat
inc
push
jl
arpl
outsb
pop
adc
sub
cmpsb
mov
add
dec
lock
cltd
jbe
jnp
int3
sahf
push
xchg
and
pushf
cmp
inc
sbb
adc
push
push
push
xor
pop
fiadds
mov
jbe
dec
insl
shll
add
and
push
dec
sbb
nop
jp
xchg
mov
sbb
mov
fldt
xchg
add
mov
jecxz
and
ja
mov
sub
add
sub
mov
roll
ds
mov
inc
mov
loop
call
sub
jno
jge
lcall
pop
stos
mulps
stos
std
sub
sbb
sbb
in
imul
ja
or
loope
mov
fmull
push
arpl
ret
outsl
xorl
sub
ret
in
inc
mov
mov
out
mov
dec
je
adc
adc
adc
jg
mov
insl
adc
inc
cmp
testb
adc
imul
inc
add
push
xor
add
mov
out
push
cmp
adc
push
mov
jbe
sub
xor
pop
jg
cmp
xor
mov
push
dec
das
sub
je
and
addr16
mov
pop
shll
arpl
loopne
int
enter
mov
lods
sbb
mov
adc
mov
mov
imul
xchg
sub
lret
inc
leave
cmp
inc
or
xchg
push
loope
loopne
inc
dec
jbe
adc
mov
mov
fiadds
out
pusha
mov
imul
leave
jnp
lods
in
jge
adcl
pop
pop
sub
xor
add
xchg
xor
jnp
in
mov
pop
xchg
pop
pop
pop
test
je
add
mov
rcrl
add
mov
sub
idivb
mov
xchg
stc
fidivrs
scas
out
lret
not
std
ret
xchg
std
andb
dec
or
bound
jae
cmp
mov
adc
je
jns
ss
push
outsb
dec
fadds
neg
and
sbb
fistpl
cmp
test
out
aas
imul
mov
ljmp
out
add
out
mov
push
lret
fwait
clc
and
lcall
loope
xchg
and
enter
dec
inc
pop
jl
subl
fsubrp
in
pop
push
dec
add
push
shlb
in
cmp
pop
cld
and
jmp
daa
in
lahf
and
ss
enter
jae
mov
jge
sbb
sub
mov
inc
addr16
clc
xlat
jge
sbb
pushf
mov
rclb
mov
fs
push
out
mov
inc
outsb
shrb
out
pop
cli
push
mov
std
stc
add
addr16
aad
mov
insb
add
jno
sub
test
jno
sbb
les
jns
daa
push
mov
lahf
std
lds
dec
lea
leave
outsl
dec
mov
jnp
loop
out
and
adc
cmp
add
out
imul
sub
icebp
xor
xor
nop
xor
inc
mov
outsb
or
push
mov
in
or
mov
call
arpl
jp
insl
fidivl
mov
mov
cld
aam
fldenv
sub
sbb
cmp
clc
mov
loop
jecxz,pt
out
push
enter
mov
test
outsl
in
xchg
loopne
fisttps
sahf
lahf
xor
inc
cmp
push
stos
push
push
mov
cwtl
cmp
push
subl
sarl
jg
ss
mov
movsl
fyl2xp1
jbe
sbb
add
mov
outsl
xchg
mov
add
mov
iret
pop
lods
dec
outsl
cmp
sub
and
jae
sarl
imulb
pop
out
ss
sbb
sub
repz
movsl
push
mov
movl
popa
clc
sbb
sbb
fmull
cmp
mov
jns
add
mov
lea
jmp
mov
std
inc
sahf
imul
pop
ret
cs
add
out
mov
mov
stos
fs
cmc
repnz
xlat
or
fwait
xor
or
nop
addr16
js
dec
jmp
stc
add
ljmp
pushf
cmpsl
sub
jbe
sub
add
pusha
mov
xchg
mov
daa
test
mov
dec
ss
xor
inc
jle
inc
push
rclb
dec
pop
int3
add
test
aam
es
movsb
sub
iret
xor
cmpl
loopne
pop
adc
mov
imul
inc
sti
aad
icebp
movsb
xchg
data16
leave
mov
scas
lret
cld
push
sti
mov
mov
outsl
push
test
fucomi
inc
mov
adc
adc
sbb
and
es
adc
je
aaa
in
out
push
ret
inc
ficomps
push
adc
cmpsl
dec
lods
mov
test
add
nop
adc
push
mov
push
rcll
out
int3
sarl
xchg
leave
out
lret
jnp
lcall
aaa
fsubp
cmp
push
xchg
in
xor
cmp
nop
rclb
adc
push
nop
pusha
rep
rclb
sahf
test
fcoml
hlt
xchg
pusha
gs
pop
dec
adc
sbb
mov
or
mov
cmp
mov
push
pusha
jp
xor
jp
test
cmp
inc
inc
sbb
adc
inc
push
xchg
popf
faddl
mov
sbb
dec
sub
push
inc
adc
enter
je
mov
movl
fisubl
out
in
xchg
pop
and
loope
inc
rorl
cwtl
fidivrl
clc
popl
inc
bound
insb
mov
fcoms
mov
sbb
adc
lock
insb
orl
mov
fs
inc
lock
stos
jo
and
push
jnp
ret
sahf
repnz
lea
shr
mov
or
out
xchg
ss
in
in
repnz
xchg
mov
in
mov
lea
jmp
pop
pop
jnp
push
fnstenv
or
lcall
add
cli
xor
adc
rcrl
ret
shrl
int
inc
mov
frstor
mov
loopne
cmp
fdivrs
mov
cmpsb
shll
mov
jne
adc
test
adc
fildll
lods
pop
decl
arpl
xchg
mov
aas
pop
cld
sub
fdivrp
imul
mov
stos
rol
jne
fnstsw
or
add
pop
dec
sub
icebp
fadds
js
push
fisubrl
in
sbb
xchg
test
or
lods
orb
dec
ss
xor
in
popa
cmp
pop
shl
fcom
lahf
ret
aaa
lret
sub
dec
cwtl
sub
push
cmp
cs
aas
add
mov
lock
sub
fldenv
in
test
mov
sbb
scas
stos
sub
lock
imul
fidivs
das
in
repnz
into
push
lret
into
call
in
and
insl
ja
orl
fwait
arpl
pushf
cmp
movsl
ret
in
addr16
mov
jecxz
out
loope
test
scas
das
rcll
pop
inc
sbb
xchg
jne
enter
xor
jg
shrb
fiadds
add
into
aam
mov
mov
enter
add
pushf
or
xchg
push
or
es
push
mov
and
sbb
stc
pop
xor
ret
mov
mov
jae
mov
sub
pop
filds
fdivrs
sbb
jg
aam
test
insb
aaa
fcompl
xchg
cmp
cltd
sub
sbb
les
and
cltd
push
mov
pop
shlb
push
or
cltd
fwait
add
out
jo
repnz
dec
xor
xchg
push
js
aas
mov
cmp
andb
jo
xchg
and
adc
scas
inc
cmp
loop
lods
push
cmpsb
add
aam
divb
sbbb
lock
sarb
mov
inc
daa
dec
fsub
imull
lahf
cld
push
clc
push
rcrb
fstpt
jo
cmpsl
mov
out
cltd
aaa
sub
and
xor
aas
movsb
mov
dec
pushf
sub
out
dec
mov
decb
cld
lcall
jp
shlb
push
mov
mov
sub
xor
lea
xor
add
mov
lock
fstpt
sub
imul
out
enter
mov
adc
inc
add
imull
test
lret
fwait
shll
rorl
and
stos
mov
fidivl
or
mov
sbb
test
push
outsb
scas
xchg
dec
ljmp
test
nopl
leave
fisubl
or
int3
sub
mov
dec
jp
sbb
sub
jle
scas
xor
sbb
out
or
push
sbb
aas
jb
ljmp
adc
scas
cli
lcall
sti
inc
into
pop
int3
push
orl
and
xor
xchg
pusha
pushf
sti
outsl
addb
fisubrl
mov
jg
ret
rcrl
mov
xchg
xlat
je
pop
insb
aam
enter
xchg
iret
pop
in
cmc
test
cwtl
and
loope
mov
cmpsb
shll
jecxz
sub
into
inc
outsl
lock
fistl
xchg
loope
roll
dec
push
cltd
adc
int3
out
mov
movsl
mov
aam
sub
jnp
scas
popf
fisubl
dec
jnp
or
cld
mov
es
iret
xlat
mov
push
xchg
adc
and
data16
jae
xchg
jo
pop
or
ror
push
pop
or
cmpsb
cltd
mov
lret
jbe
sub
in
or
xor
xor
movsb
nop
inc
cmpsb
cmp
mov
shl
aaa
loope
cmpb
cmp
mov
xor
lods
sub
orb
xor
ljmp
dec
push
dec
inc
test
jb
mov
jecxz
data16
inc
jmp
inc
in
push
jae
or
cmp
xchg
adc
mov
jb
ficoms
lea
push
fcompl
jb
leave
icebp
lahf
lods
jb
cmp
cli
fsub
xchg
dec
lret
jo
in
test
push
addb
sub
or
out
addr16
sub
xchg
cmp
xor
stos
and
leave
pop
in
repz
in
sbb
sbb
aaa
sub
mov
rclb
push
adc
in
push
mull
xor
popf
subb
ja
jp
inc
and
iret
dec
add
mov
test
shrl
cmp
inc
pop
dec
jbe
out
testl
adc
sahf
xor
sub
inc
inc
dec
or
push
addr16
or
arpl
mov
addb
shr
movsl
mov
dec
repz
inc
ja
stos
pop
sbb
cmp
cmp
daa
pusha
addr16
mov
and
adc
mov
jp
cwtl
stos
rorb
add
je
pop
ret
cmp
arpl
out
icebp
or
pop
push
sbb
push
repnz
jg
repz
outsl
iret
test
aas
ret
test
sbb
sub
scas
mov
cmp
push
jp
push
sub
in
mov
jmp
lods
sub
leave
mov
add
out
scas
sub
jp
cltd
sub
or
mov
test
xchg
jg
push
cltd
leave
cmp
fdivrl
bound
or
ja
cli
or
es
cmpb
and
out
shll
inc
inc
mov
cli
mull
xchg
mov
pusha
xorb
pop
or
push
jae
cmp
xchg
xor
sbb
lret
dec
xor
xor
push
iret
and
mov
outsb
push
insl
lock
imul
out
or
xchg
pop
test
ret
test
sub
jecxz
sbb
fwait
das
jb
inc
xor
push
lds
ret
pop
shll
outsl
stos
in
jo
rclb
dec
xor
out
and
bound
push
faddl
popf
sbb
cld
int3
pop
xlat
sbbb
push
lds
push
notb
test
mov
add
pop
cmp
pushf
and
cmpsb
dec
xchg
mov
rolb
ds
popf
repnz
jbe
lods
repz
jbe
cmp
mov
xchg
sub
mov
or
fdivs
std
and
add
in
and
pop
xchg
lods
stc
data16
mov
fs
movsl
push
push
xchg
cltd
popa
das
repnz
cmp
adc
scas
adc
test
add
or
jecxz
je
pop
sbb
push
pop
cmp
in
es
xor
and
jge
dec
push
cmp
xor
or
repnz
pop
pop
dec
pusha
mov
leave
shrl
das
and
mov
mov
lods
xor
mov
in
iret
test
andb
lcall
sub
xlat
push
mov
mov
jmp
lock
push
fdivrl
out
pop
inc
mov
mov
int3
and
inc
sub
sti
jecxz
fsubs
addr16
ljmp
push
cmc
cs
in
shl
inc
fs
mov
sbb
divl
cmp
or
jge
pop
shl
jg
and
lcall
adc
adc
cmpsl
xorb
jne
push
movsl
lahf
das
dec
xor
fisttpll
mov
pop
leave
mov
push
fidivs
fstpl
rcr
fimuls
movsl
xor
test
icebp
call
jl
adc
mov
inc
push
cmp
cmp
cmp
aad
arpl
sub
popf
leave
cld
negb
push
adc
cld
dec
and
push
enter
cli
or
repnz
xchg
pop
push
ds
fildl
mulb
push
sbb
mov
cmp
inc
cmp
xor
and
es
in
popl
mov
xchg
std
and
lcall
lea
fsubrs
out
mov
mov
pushl
lret
subl
outsb
negl
push
add
aam
inc
push
push
and
xor
push
or
test
dec
out
mov
jnp
lahf
mov
xor
pop
scas
daa
push
sbb
and
repz
aas
sub
std
push
jae
enter
stc
and
lds
add
stc
xchg
add
fs
pop
lahf
loop
jle
cmpsl
mov
outsb
pop
test
loope
xlat
jmp
mov
outsb
scas
std
xchg
leave
jp
bound
int
or
in
adcb
jb
fcmovnu
sbb
or
mov
in
sbb
ret
dec
int
mov
mov
and
dec
pop
and
lea
scas
jo
aaa
aam
mov
ljmp
arpl
fadds
leave
fnstcw
loope
mov
xor
push
fwait
daa
dec
lds
icebp
lds
sub
cmp
pushl
imul
sahf
mov
std
outsb
add
cwtl
jae
inc
jne
lcall
mov
lods
mov
cmp
testb
sub
cmp
shlb
or
nop
sahf
jecxz
and
mov
imul
dec
out
loop
imul
cmp
dec
xor
aad
push
dec
test
mov
sti
jge
movsb
rorl
sub
push
rcll
flds
cmovns
add
and
ds
pop
push
push
cld
dec
dec
stos
mov
mov
int
add
fimuls
repz
jo
leave
arpl
sub
push
cld
leave
outsl
sbb
jge
push
in
in
push
popa
testl
addr16
pushf
insb
mov
subl
and
mov
mov
inc
dec
inc
shr
popf
into
sbb
in
lea
aad
cs
add
cmc
in
fstps
mov
mov
ret
xchg
push
mov
ss
in
pusha
push
mov
sub
ds
cmp
xchg
and
push
ja
sbb
imul
mov
imul
push
jmp
push
mov
negb
jmp
mov
mov
push
fistps
pop
imul
icebp
jmp
jns
enter
adc
lcall
lock
out
cmp
sahf
xchg
jb
mov
pop
cs
cmp
sbb
ffree
add
cmp
mov
add
or
loope
aam
int3
mov
xadd
rolb
sbb
popf
mov
test
jne,pn
xchg
movsb
pop
mov
mov
add
xor
xchg
inc
das
add
mov
outsb
mov
push
jbe
pusha
call
lcall
js
or
outsb
dec
jp
daa
stos
or
outsl
add
mov
sti
sti
lcall
jmp
ljmp
sub
sub
inc
mov
mov
xor
dec
mov
or
xor
je
mov
leave
cmp
shll
add
pushl
sub
pop
outsl
stos
in
pop
xchg
sbb
clc
lahf
insl
iret
and
mov
popf
dec
or
mov
daa
xchg
dec
xor
jmp
add
or
cmpsl
stos
add
pop
ror
push
das
xor
lock
hlt
movaps
add
sbb
inc
pop
xchg
mull
mov
pop
push
push
mov
sub
cmp
outsl
imull
and
mov
dec
push
push
jns
bound
out
cmp
sbb
add
pop
and
out
sub
fdivrs
and
sub
adc
jmp
cs
or
fisubl
mov
or
mov
repz
jnp
ficoms
out
and
push
cmc
leave
scas
push
and
xchg
ja
aam
push
sub
and
lods
inc
xchg
lds
add
mov
ljmp
push
and
lock
stos
adc
push
cmc
jnp
push
mov
jge
sbb
mov
or
repnz
push
int3
sub
cwtl
sbb
stos
xchg
call
dec
loope
mov
add
jbe
jl
mov
std
dec
cld
pop
loope
movsb
dec
mulb
stos
dec
ja
sbb
enter
xor
lret
pop
xchg
mov
stc
dec
std
shl
gs
dec
outsb
mov
imul
add
js
stos
push
adc
and
dec
out
jbe
jb
lcall
push
out
and
push
jg
adc
sub
cmpsb
sub
mov
push
dec
leave
loop
cld
mov
add
push
fists
xor
add
push
xchg
pop
into
dec
add
mov
pusha
sbb
in
bound
vphsubsw
lret
loop
mov
xchg
mov
jmp
adc
fsubrs
mov
mov
inc
mov
jg
jecxz
fs
sub
aas
pop
xchg
int
stos
xor
inc
hlt
xchg
test
fnstsw
or
repnz
fiadds
cwtl
in
ljmp
mov
enter
or
mov
aaa
and
push
pop
adc
cmp
adc
pop
xor
in
cltd
pop
fld
sub
aad
fisttps
push
cmp
lcall
imul
and
mov
nop
cmpsl
xchg
subb
mov
pop
cmc
out
xor
fnstenv
pop
cmpsl
mov
adc
mov
hlt
mov
dec
scas
xchg
imulb
popf
or
cmc
cwtl
pusha
mov
push
sub
add
and
xorb
or
jo
inc
xchg
dec
scas
push
jge
popf
sub
orl
sub
or
adc
fidivl
xlat
or
push
loop
mov
scas
push
daa
int3
sub
inc
movsl
or
push
aad
mov
sbb
sbb
enter
cmp
mov
sti
imul
mov
jns
call
push
pop
data16
mov
add
js
add
sbb
xchg
sub
jnp
fs
sbbb
and
fimuls
loop
stos
iret
mov
mov
jecxz
cld
arpl
jl
shll
jle
xor
fnstsw
cmp
inc
test
and
outsb
mov
les
out
arpl
jae
add
adc
lds
push
test
jg
in
xor
sub
cmc
ds
mov
imul
add
xchg
popf
mov
cmpsl
mov
push
push
jle
push
hlt
psrld
fwait
jnp
frstpm(287
pusha
mov
lcall
rcrb
pop
or
ficoml
aaa
mov
ret
xor
push
mov
jg
imull
mov
xchg
ret
mov
sbb
lea
mov
in
es
push
sbb
push
repnz
dec
iret
loope
jb
push
aad
cmpsl
stos
and
movsl
push
sub
jle
sub
fwait
fs
popw
shl
lods
add
out
icebp
xor
popa
outsl
movb
scas
mul
or
xchg
xlat
popa
and
push
dec
jno
addr16
mov
push
xchg
dec
cli
dec
push
pop
rsm
outsb
inc
dec
pop
cmc
out
sarl
xor
cmp
mov
jmp
stos
in
cmp
aam
ret
clc
neg
and
push
xchg
aaa
ror
adc
cli
cmp
lahf
imul
loope
pop
cmp
xchg
adc
mov
addr16
int
inc
popf
outsb
cmpsl
cli
les
mov
mov
fistps
push
pop
sbb
aam
sbb
test
ljmp
sub
or
xor
push
inc
lods
mov
je
sub
fmul
or
mov
mov
jl
xchg
sub
cmpsl
pushf
xchg
cmpsl
fcompl
dec
dec
ret
mov
shl
inc
ss
jmp
adc
and
into
lahf
mov
stos
lods
orl
add
mov
jecxz
and
das
mov
add
cld
dec
lret
mov
sub
fldcw
add
adc
addr16
dec
mov
sub
bound
iret
sub
repz
jmp
cwtl
les
jnp
scas
jg
pushf
clc
push
push
mov
nop
fs
cltd
lods
fidivrl
push
out
bnd
sbb
cmp
orl
and
jbe
xor
adc
addb
in
inc
push
inc
cmc
xor
cld
into
pop
mov
vxorps
push
inc
ja
into
jns
push
movsb
lock
flds
push
es
add
sub
sbb
adc
jb
adc
mov
mov
mov
or
mov
std
lds
pop
pop
push
dec
repnz
push
pop
mov
sub
loope
mov
call
adc
xchg
pop
mov
pop
and
inc
mov
adc
push
loop
push
push
dec
adc
or
fiadds
dec
subl
movsl
xor
gs
push
jne
out
or
call
mov
jge
fiadds
dec
cmp
sahf
dec
aam
sti
jge
sub
sbb
xchg
inc
in
pop
ret
xchg
xor
adc
in
add
mov
pusha
cld
cmpsl
pusha
cwtl
pop
mov
mov
lods
mov
inc
mov
push
pop
cmp
inc
xchg
daa
mov
push
int3
je
mov
mov
sbb
jnp
int
jge
adc
inc
sbbl
in
mov
adc
xor
xchg
push
sub
das
mov
cmpsl
dec
dec
xor
and
ret
pop
xchg
push
pushf
les
mov
push
test
push
mov
push
xchg
add
xchg
inc
jmp
xor
and
fisttps
cmc
stos
jle
and
push
icebp
jno
test
fistl
lret
cmp
fcomps
add
sub
jae
mov
sub
popl
jb
add
js
xor
sub
mov
aad
xor
mov
push
cmp
jbe
jae
in
pop
leave
mov
mov
outsb
adc
stc
aas
xor
xor
hlt
daa
xchg
movsb
cmp
ds
jp
pop
cltd
roll
mov
jns
stos
push
lods
cmp
adc
outsb
mov
imul
lret
sti
loope
pushl
mov
psubusw
test
int
xor
pop
push
pop
mov
jbe
repnz
cmp
stc
inc
xchg
push
inc
add
jno
push
dec
xor
fsubr
cmp
fisttpl
adc
mov
push
inc
aam
push
mov
xchg
push
sbb
add
mov
mov
test
lea
push
cmp
icebp
jmp
in
scas
ds
int3
sbb
test
mov
cmp
sbbb
or
mov
adc
cmc
sub
mov
push
das
xor
and
out
lret
push
pop
leave
cmp
repnz
js
mov
mov
sub
call
adc
and
js
das
push
pusha
data16
pop
dec
loope
inc
add
bound
jb
je
out
adc
test
mov
push
pusha
mov
aaa
cs
jne
add
aas
inc
pop
out
fimull
shrd
fistpll
mov
iret
cmp
pop
loope
aad
rclb
push
daa
cmpsb
pop
mov
push
xchg
inc
inc
xor
jge
mov
push
iret
sbb
jecxz
jnp
add
jg
adc
gs
push
bound
das
fists
push
or
popa
adc
int
in
inc
sarl
push
popf
sub
sahf
and
js
mov
scas
sarl
cli
in
mov
stc
cltd
cwtl
dec
imul
lods
data16
mov
fdivrp
imul
pop
imull
clc
lds
rolb
jle
movsb
mov
xchg
push
adc
push
arpl
out
inc
mov
pop
arpl
adcl
mov
jp
mov
adcb
into
dec
aas
add
mov
mov
cmpsl
ja
sahf
add
jl
sub
in
lea
aas
adc
sbb
stc
mov
sbb
scas
clc
mov
mov
daa
testb
jmp
pusha
daa
mov
lods
sub
mov
cmp
daa
pop
in
push
sub
mov
lahf
jp
repz
loope
fst
sub
jno
subb
inc
sub
fxch
pop
aad
out
mov
sbb
inc
pop
gs
xlat
xchg
iret
out
iret
mov
xchg
lret
imul
sti
js
xchg
mov
or
dec
and
inc
testb
mov
aas
bound
lcall
xor
popa
imul
or
sbb
bound
jb
jl
xchg
insl
cmp
lret
xlat
xlat
push
sbb
xchg
cwtl
dec
arpl
mov
lea
lods
mov
je
jb
popa
leave
sub
incl
inc
xchg
mov
fs
out
bound
les
or
gs
sbb
and
or
pushf
aam
cs
push
repnz
jecxz
leave
dec
cwtl
ror
iret
mov
xchg
mov
repz
ret
adc
inc
insb
aad
sub
add
and
ret
js
jl,pt
hlt
loopne
jo
pushf
aad
sbb
shr
sbb
dec
cltd
pop
jno
pop
mov
add
push
jmp
lret
jecxz
movsl
xchg
adc
or
lock
push
pop
push
jecxz
lea
mov
pop
mov
setg
inc
xor
mov
xor
cmp
mov
outsb
test
inc
pop
je
addr16
lock
test
sbb
mov
inc
sarb
dec
shlb
hlt
bound
sub
dec
pop
rcrb
or
add
inc
icebp
fisubs
inc
cltd
push
icebp
push
pop
fs
lods
cmp
ja
cmp
mulb
outsl
repnz
popf
sbb
lea
pop
push
mov
outsb
rolb
push
outsl
mov
fwait
add
jns
out
pop
push
cli
cmp
push
mov
mov
je
jae
pusha
pusha
dec
xchg
cmp
ret
fildl
mov
xchg
jno
cmp
add
cmp
dec
mov
cli
in
fimull
and
inc
sbb
mov
sub
addr16
sbb
pushf
stos
xchg
mov
add
daa
push
insb
add
loopne
or
push
addb
push
addb
mov
sbb
loope
notl
cltd
xchg
sbb
nop
pusha
fs
add
cmp
repz
pop
fists
sti
sbb
cs
mov
fstpt
jo
insl
je
fldcw
jae
mov
pop
pushf
jb
test
adc
cwtl
dec
or
lret
cmovo
mov
enter
cli
mov
sti
js
pop
xor
decl
test
pop
ds
pop
cmp
pop
cs
clc
xchg
mov
jmp
sbb
push
mov
sbb
loop
inc
mov
cmpl
sbb
rcl
ffreep
imul
aad
mov
mov
into
dec
lea
les
nop
xchg
xor
push
test
ret
fsubrl
sbb
sub
cmp
mov
inc
in
mov
in
xchg
arpl
clc
addb
jmp
push
ss
stos
cli
sub
push
test
jg
fists
loopne
and
pop
lret
jle
cwtl
xor
outsl
lods
inc
cltd
leave
push
sub
mov
add
push
inc
dec
xor
pop
mov
int3
add
lret
data16
rol
test
daa
lcall
fwait
push
jns
in
fiaddl
jmp
imul
push
aaa
mov
inc
in
xchg
or
mov
dec
xor
enter
or
cmp
jp
mov
sub
mov
mov
pop
mov
lds
shlb
jno
jg
out
jg
and
push
add
dec
pop
pop
or
int
inc
dec
pushf
jo
movsb
loope
xchg
insb
pop
pushf
fstp
loopne
stos
adc
sub
ja
adc
or
cmp
jge
dec
push
out
test
inc
jl
mov
xchg
mov
add
push
xlat
sbbb
fsubrl
cmp
xor
xchg
xor
xor
pop
sub
mov
negl
dec
imul
addr16
xchg
insb
and
aas
jmp
adc
dec
sub
mov
dec
stos
lret
xchg
pop
imul
shrb
dec
mov
das
aaa
cmc
cmpsl
mov
inc
xor
popa
in
arpl
stos
arpl
adc
imul
mov
loop
pop
cmp
fnstcw
xor
adc
test
dec
mov
in
stos
leave
sub
pop
sbb
popf
repz
jg
push
mov
pop
leave
dec
pop
mov
mov
cmp
clc
push
mov
cmp
push
xchg
repz
fdivrs
cmp
or
and
adc
fcoms
push
gs
sub
pop
mov
jp
sbb
inc
jno
jne
inc
sbb
in
adc
mov
stc
out
out
mov
push
xor
mov
subl
ret
jg
sub
push
ret
jmp
add
idivl
mov
mov
sbb
loope
add
xchg
mov
pop
mov
icebp
jmp
add
int3
add
jle
fs
push
in
jle
mov
stos
rcl
jmp
in
jp
jo
test
cmp
dec
in
insb
fisttpll
aas
dec
cmp
into
orl
leave
mov
data16
xor
es
or
cmp
sub
out
leave
xchg
mov
dec
aas
int
ja
popf
dec
inc
mull
ret
xor
add
leave
fisubrs
add
les
roll
lea
cld
inc
iret
iret
nop
inc
out
cmp
ljmp
push
jg
lds
add
mov
xorl
insl
inc
pushf
sbb
stc
pop
add
dec
lret
dec
rorb
or
aad
xor
repnz
inc
repz
into
out
adc
addr16
pop
pop
mov
jge
adcb
rorb
mov
sub
inc
sbb
sbb
add
push
and
push
ljmp
inc
mov
pop
adc
in
fcompl
dec
data16
lahf
inc
nop
aaa
int3
lds
sub
adcl
pop
and
or
mov
mov
xor
fwait
mov
gs
shlb
jmp
jns
ret
push
ret
push
xchg
pop
and
mov
xchg
push
add
inc
adc
dec
lods
push
sub
jnp
mov
into
nop
in
movsb
lret
sti
shlb
imul
es
lods
pop
dec
add
cmp
push
xchg
dec
into
daa
jl
repz
push
and
pop
mov
lret
pop
adc
sahf
dec
nop
adc
call
inc
fisubrs
push
repz
dec
push
imul
das
xor
ja
mov
test
or
jp
add
adc
sahf
pop
jmp
jmp
sbb
pop
mov
outsl
ljmp
int3
fwait
repz
xchg
mov
lret
cmpsb
jbe
adc
mov
mov
mov
repz
sti
test
int
cli
jg
or
and
cmp
mov
or
mov
xor
ror
pop
mov
ljmp
or
jp
test
data16
daa
aaa
or
mov
les
sbb
cld
lods
rcrl
mov
mov
or
pop
push
pushf
mov
movsb
es
add
je
das
in
jbe
push
popa
icebp
xchg
iret
or
test
xchg
cld
inc
dec
push
mov
ds
pop
sbb
testl
ljmp
lock
mov
xor
and
jge
mov
mov
jle
xor
pushf
test
es
pop
and
mov
cmpsb
add
dec
add
pop
stos
adc
mov
outsb
hlt
mov
mov
xor
pop
pusha
addr16
icebp
outsb
decl
xor
mov
cli
out
or
sbb
xchg
and
into
inc
cmp
cld
pop
sub
mov
lret
aam
fcmovu
icebp
call
aad
insb
and
lods
cld
add
xchg
add
inc
sub
jecxz
shlb
jl
arpl
fiaddl
or
test
xor
je
jmp
and
inc
ja
test
pop
adc
mov
loop
pushf
mov
mov
push
sub
push
aam
fisttpl
cwtl
cmc
lds
rcll
outsb
add
ljmp
pop
mov
cmpsb
fnstcw
nop
adc
ficomps
mov
lds
in
add
push
and
mov
mov
pop
mov
adc
cmp
mull
mov
inc
mov
scas
idivl
bound
lds
sub
jo
in
cwtl
test
hlt
shl
dec
stos
cmp
jl
pop
outsl
push
movsb
adc
pop
or
jle
xorl
jae
jle
leave
ja
fadd
cmp
dec
add
das
mov
jge
pop
mov
adc
ljmp
xchg
mov
pop
cmc
nop
cmp
fwait
or
jnp
mov
out
ss
ds
cmpsb
scas
jl
shlb
mov
pop
sbb
int3
call
adc
adc
and
mov
rorl
imull
sub
jno
into
push
repz
rorb
addr16
sub
divb
sub
push
in
jg,pt
aaa
fistps
jae
mov
pop
cmp
ret
lret
fisttpl
sbb
ret
inc
mov
pop
xor
insl
repnz
int
xlat
pop
inc
push
or
pop
push
les
xchg
and
and
sbb
push
cli
sub
adc
enter
lock
fcompl
fbld
int3
in
jns
lea
mov
xchg
fisttpl
out
inc
pop
add
mov
pop
xchg
xor
fdivrl
test
out
xor
fcmovb
mov
cmc
cltd
pop
sbb
insl
mov
mov
sbb
das
adc
idivl
loopne
add
xor
stos
sbb
push
push
test
fldcw
fistps
outsl
out
push
loop
in
idivb
push
xchg
repz
scas
je
fstpl
xor
inc
dec
cmp
or
fst
test
out
enter
aad
push
std
ljmp
cld
cld
cmp
pop
aas
push
mov
fdivs
je
mov
mov
jo
lea
mov
je
dec
sub
std
xchg
mov
insb
or
fdivrp
call
pop
push
sub
int3
enter
stos
mov
jns
mov
mov
movsl
lret
movsb
push
loope
stc
dec
inc
xorb
mov
dec
inc
dec
shrb
sbbb
shrl
mov
cltd
push
xor
xlat
mov
push
inc
add
mov
xor
sbb
fpatan
inc
out
xlat
or
add
call
ret
jno
test
dec
loopne
inc
ds
aam
or
dec
insb
pop
leave
test
test
clc
pop
adc
ret
sarl
mov
scas
ret
mov
cmp
dec
sahf
vmovdqa
add
repz
test
aas
or
cmp
push
jno
lods
bound
gs
adc
bnd
lods
sbb
aad
cmc
testb
aas
rorb
mov
cmp
jg
ljmp
or
clc
cmpsb
int
insb
andb
aaa
ljmp
cltd
and
dec
xchg
dec
shrb
dec
mov
ficoml
cmpl
andl
dec
and
mov
mov
mov
push
adc
push
cmp
cvtpi2ps
jecxz
pop
test
test
scas
adc
push
adc
mov
jmp
xor
rcr
shrb
loop
jnp
push
jl
pop
fwait
dec
or
inc
mov
mov
mov
fldl
mov
push
fs
cmpsb
jae
lcall
sbb
std
sub
shll
into
xchg
pop
rclb
addl
test
nop
sub
add
mov
fdivs
int
fistpll
xor
jle
pop
ljmp
jb
arpl
lahf
lcall
insl
inc
mov
or
sub
in
pop
aas
mov
movsl
pop
push
es
imul
aad
pop
seta
sbb
adc
dec
imul
dec
cmpsl
pop
push
inc
paddsb
mov
jne
jnp
xor
andb
pop
xlat
mov
mov
in
mov
and
sbb
lods
push
mov
inc
inc
cli
jns
inc
mov
rcll
mov
not
hlt
data16
repz
jmp
int3
mov
jns
loopne
push
inc
jl
pop
pop
in
lahf
je
arpl
lock
cmp
sub
inc
xchg
mov
add
xorl
dec
cli
test
aaa
fdivrs
jns
xchg
mov
out
xchg
jo
fwait
out
loopne
xor
lock
adc
pusha
mov
repz
dec
pushf
cmc
enter
inc
cmp
or
push
mov
inc
ret
cltd
aaa
pop
cmp
imulb
in
rolb
xor
outsb
mov
mov
inc
adc
cmp
mov
pop
fs
inc
cwtl
dec
cmp
sarl
arpl
sbb
jmp
xor
push
dec
or
int
outsb
insl
jbe
mov
insl
mov
mov
add
rcrb
mov
sbb
xor
into
push
pushf
xchg
repnz
lret
push
nop
stc
dec
mov
add
lods
stos
inc
lret
fisubl
mov
cs
ss
test
std
inc
cmp
es
dec
roll
push
or
test
es
sbb
rcr
pusha
sbb
aaa
adc
xor
jno
sbb
mov
test
adc
lea
jg
sbb
dec
mov
mov
lock
or
and
sbb
push
cli
daa
pop
inc
popa
cltd
andb
in
jg
outsl
xchg
sbb
inc
or
sbb
movsl
out
jl
jmp
mov
jle
push
mov
into
add
mov
fstpl
cmp
or
leave
jbe
setg
add
movl
cld
or
stc
mov
mov
test
dec
fldt
mov
jle
repnz
or
cmpsl
dec
stos
xor
and
push
fsubs
dec
inc
push
and
add
roll
fld
nop
cwtl
lret
sbb
or
xor
stos
cmpsl
or
outsb
sbbb
ljmp
lods
test
xor
push
bound
sti
int3
ljmp
add
and
movsl
clc
fmul
in
cmpsb
add
lods
pop
jae
pop
in
fisttps
shlb
mov
outsb
aad
mov
jno
add
mov
mov
sbb
sub
dec
push
xchg
loope
pop
jp
movsb
insl
or
dec
ret
mov
push
cmpsl
push
ja
sbb
aaa
popa
mov
inc
and
add
incb
cmp
pop
mov
dec
mov
dec
dec
lock
out
pop
movsl
push
xchg
mov
pop
mov
jmp
out
movsb
in
lret
mov
push
leave
and
mov
mov
cmp
aaa
xor
daa
push
decb
lods
lret
add
out
sahf
dec
lcall
mov
aam
insb
in
lods
into
jae
loope
mov
dec
pop
enter
repz
in
inc
xor
cwtl
jbe
arpl
cmp
pushf
add
stos
scas
imul
cmpsb
cs
out
aam
bound
shlb
ss
imul
mov
cmp
jnp
add
mov
xchg
inc
stos
mov
stc
or
shrd
lcall
cmp
and
fsubl
imul
dec
cmc
or
notl
out
in
xchg
xor
ja
adc
fidivrs
jbe
lods
and
out
or
mov
jle
pop
outsb
popf
xor
pop
inc
sbb
nop
and
push
popf
push
lahf
test
or
dec
sbb
movb
les
clc
pop
adc
movsb
add
test
test
fcoms
dec
int3
xchg
aas
or
mov
fadds
jge
test
push
mov
lret
outsb
mov
jle
in
pop
outsl
test
adc
jnp
mov
movd
lret
fdivl
jnp
adc
jno
sub
mov
stos
xchg
xor
push
lahf
pop
push
lcall
aam
mov
adc
jns
sbb
mov
scas
cmp
add
dec
loopne
rorl
lds
test
sub
movsl
xchg
xor
jge
lock
or
adc
scas
je
and
sbb
jmp
and
shrl
or
adc
gs
push
mov
xor
data16
ret
pop
xchg
sbb
inc
rol
or
and
mov
xchg
adc
fwait
aas
sbb
pop
add
jl
pushf
jo
xor
xchg
xorl
dec
sbbl
dec
inc
sbb
xchg
insb
ds
xor
pop
stc
scas
in
leave
fcompl
sbb
ds
mov
js
sbb
aad
sbb
jecxz
xchg
ss
pop
push
sub
or
or
and
mov
loope
sbb
mov
and
repz
adc
add
loop
adc
pop
stos
mov
out
ljmp
popf
xor
dec
ss
std
nop
adc
xchg
sub
js
cmp
repnz
sbb
jne
es
xor
adc
scas
sbb
and
js
add
xor
icebp
push
insb
leave
push
add
mov
mov
daa
aam
sbb
stos
popa
aad
imul
jp
aad
fnstenv
vxorpd
push
dec
and
dec
fidivs
hlt
in
add
jmp
call
lds
aad
test
mov
xor
cs
pop
mov
mov
cli
aaa
scas
xor
push
inc
movsb
fbld
or
or
xchg
mov
mov
push
mov
aaa
add
shrl
inc
inc
jp
fistpl
dec
rcrb
xchg
xorl
sti
insb
daa
sbb
dec
adc
cmc
mov
gs
fistpl
ss
gs
mov
pop
and
mov
or
xchg
lds
rcrb
ret
jns
jae
fsubrs
and
data16
in
add
pop
ja
cmp
mov
xchg
fisubrs
iret
sub
inc
xchg
xor
mov
ret
imul
hlt
aam
in
xor
inc
gs
test
xor
lock
push
jns
pop
add
dec
int
xor
inc
or
test
sub
shlb
pushf
xor
inc
jle
mov
sbb
mov
insl
pop
push
out
adc
dec
and
sbb
int
or
mov
push
lret
xchg
int
cmpsb
xchg
ss
std
mov
fsubrs
test
or
sbb
insb
hlt
mov
icebp
jo
fucomip
dec
jg
cmpsl
inc
movsl
ja
out
out
iret
xor
dec
nop
nop
mov
iret
jp
insl
lcall
enter
leave
inc
xor
pop
lahf
loope
push
rcl
xor
imul
push
and
ficoms
into
inc
mov
and
out
shll
nop
outsb
leave
fnstsw
xor
mov
mov
leave
hlt
push
aam
xor
xchg
inc
inc
aaa
sbb
out
xchg
insl
xchg
or
push
jl
mov
icebp
outsl
test
xchg
dec
scas
push
sub
stc
or
inc
dec
addr16
mov
fildll
out
mov
fidivrs
push
push
xor
or
sarl
cld
iret
and
push
add
pop
je
jno
jns
in
mov
test
xlat
cmp
les
cmp
lret
pop
inc
jo
nop
xor
ja
inc
shrb
loopne
push
fs
lahf
push
loope
jbe
jecxz
lods
fcomps
cmp
out
ja
aam
inc
fimull
mov
inc
mov
push
xchg
mov
push
bound
xor
push
stos
in
pop
push
inc
sub
push
and
jge
cltd
pop
jo
mov
leave
data16
lea
dec
out
divl
fsubl
adc
inc
lea
insb
sub
rcrb
mov
leave
push
add
dec
lods
xor
and
mov
cltd
enter
icebp
mov
nop
mov
adc
pop
and
fsts
sub
sub
push
inc
xchg
xchg
or
xchg
xchg
jnp
pop
popa
push
push
jbe
fadd
jle
outsl
inc
or
ss
and
cmp
inc
daa
dec
cli
fisubrl
lods
dec
push
xor
bound
inc
inc
adc
in
aam
fistps
inc
aas
pop
push
mov
and
lret
cli
sarb
and
adc
dec
xor
sbb
sbb
cmpl
test
js
mov
cmc
xor
testl
popa
xchg
divl
mov
push
test
xchg
les
sub
jl
add
sbbw
jo
fwait
ds
sub
dec
ds
loop
hlt
mov
lret
cmp
pop
inc
mov
push
mov
dec
clc
mov
mov
push
roll
pop
xor
mov
cs
aas
jl
dec
incb
pop
mov
stos
sarl
movsl
mov
mov
loop
mov
jo
xor
imul
jne
jne
adc
ds
ja
cmpsb
add
test
adc
pop
fwait
iret
into
mov
mov
sub
data16
xor
xor
dec
pushf
jle
cmp
rcll
cmp
mov
loop
or
insb
divb
in
mov
sbb
push
inc
mov
pop
fs
xchg
inc
aad
lahf
push
cmp
std
adc
sub
cld
movl
push
lods
out
mov
outsl
xchg
and
inc
aam
xchg
fildll
pop
jns
push
fcoms
enter
adc
inc
dec
nop
inc
aam
in
jle
push
mov
and
shlb
andb
insb
jns
hlt
je
fistpll
lock
mov
jp
mov
test
ja
mov
fistpll
test
mov
lock
icebp
dec
ret
jno
sub
call
sahf
bound
sub
in
adc
insl
cmp
imul
jbe
or
sub
mov
int
push
insl
dec
mov
sar
cmp
mov
cli
or
jmp
push
dec
lea
addl
adc
jge
push
sbb
scas
sahf
lods
mov
add
jge
ja
sub
aas
mov
rcl
outsb
or
data16
fldenv
inc
add
cmpsl
push
xor
jo
shr
xchg
int
mov
xchg
jmp
push
loopne
xor
arpl
inc
pop
test
xchg
sub
mov
mov
test
mov
sbb
cmp
add
dec
sub
fcomps
xor
loopne
ror
mov
pop
sub
xchg
push
xchg
jg
int
negb
call
push
lret
imul
jmp
add
jo
sub
stos
dec
add
pop
add
adc
in
add
out
inc
stc
jnp
subl
gs
subb
fwait
lea
jnp
xchg
dec
and
mov
cltd
jmp
xchg
xchg
sub
sub
std
push
dec
or
sub
jmp
shll
lahf
rcll
clc
lds
mov
shrb
push
in
jg
sti
sbb
cmp
sub
pxor
pop
sub
mov
out
xchg
add
loopne
push
sub
fdivp
rorw
jb
push
bound
or
pop
jns
pop
fbstp
or
outsb
std
int3
jl
movsb
fidivl
sbb
das
sub
ja
imul
and
sub
or
pusha
xchg
inc
mov
inc
es
in
adc
cmp
shlb
pop
data16
out
mov
jae
mov
or
mov
adc
or
mov
xchg
hlt
cmp
mov
fbld
dec
jmp
lea
rcrl
push
and
mov
xor
fcmovne
mov
jl
sbb
outsb
inc
mov
fs
test
cmpsb
es
sub
aas
sbb
outsb
cmp
pusha
cli
outsl
enter
jp
mov
in
and
inc
pop
mov
aam
cli
ret
lcall
xor
push
jge
cmp
xor
je
lret
mov
push
imul
movl
mov
fsqrt
test
dec
jne
aaa
mov
ja
test
inc
mov
push
pop
xor
adc
lods
jge
jp
das
or
add
xchg
adc
lcall
mov
les
fldl
sahf
jg
sbb
das
ficompl
push
arpl
sub
loop
push
das
mov
ds
adc
jmp
scas
mov
sbb
pop
lcall
hlt
or
cmp
into
sbb
aaa
or
mov
pop
adc
rcrb
loop
ret
test
in
testb
cli
jle
pop
pop
into
sbb
insb
aam
sarb
lret
ror
fdivp
lahf
pop
mov
je
jmp
fcoms
ret
pop
loopne
or
fbstp
call
insl
orb
pop
mov
bound
jl
pop
mov
bound
xor
lahf
es
jge
mov
mov
pop
xor
lock
fstpt
jl
aas
mov
lahf
xchg
push
xor
mov
mov
xchg
cs
arpl
and
movsl
xor
dec
push
ljmp
icebp
pop
add
gs
cmp
dec
mov
adc
das
pop
inc
push
dec
and
push
adc
cwtl
mov
jae
sbb
pop
popa
fst
arpl
dec
fdivs
mov
movsb
xchg
shr
push
rorb
add
int3
pop
loopne
test
fmul
xchg
pusha
xor
rclb
out
out
ja
add
push
in
push
xlat
inc
cmp
out
sahf
outsb
lock
or
mov
mov
mov
pop
js
out
cmpsl
add
fdivrs
pop
sub
and
or
js
sub
pop
or
outsb
push
addr16
out
push
pop
cmp
sbb
xlat
xchg
cli
rol
in
lahf
inc
popf
adc
push
lock
testb
adc
jecxz
inc
movsl
out
dec
push
into
xchg
adc
stos
jl
xor
cmp
adc
sbb
aad
push
mov
nop
dec
out
xchg
mov
movsb
imul
and
lds
popa
push
add
adc
pop
inc
sbb
out
imulb
add
and
inc
pop
mov
jnp
pop
mov
push
mov
test
pop
shll
loop
fisttpll
adc
sbb
dec
pop
sub
stos
lcall
stos
jnp
inc
jl
push
pop
mov
call
mov
gs
lret
rcrb
jae
jnp
jle
adc
pop
sub
andb
pop
dec
jbe
imul
das
pop
out
es
mov
movsb
lea
rcll
xchg
jne
or
push
and
cwtl
jbe
sbb
ja
pop
push
xor
and
mov
fidivrl
mov
dec
pop
mov
push
insl
mov
dec
mov
loop
dec
es
xor
mov
into
loop
arpl
pop
sbb
sbb
inc
loope
fdivs
int3
dec
sahf
in
mov
sub
daa
ljmp
pop
add
les
push
jle
jle
arpl
fucomip
dec
fisttpl
push
int3
insl
rcl
repnz
ret
xor
lods
push
lret
aam
mov
stos
inc
add
xchg
jecxz
inc
dec
aaa
xor
adc
insb
pop
aad
jbe
mov
fistpl
push
clc
cmp
jge
pop
xor
ja
cmp
xor
push
sahf
xorb
dec
lret
or
rolb
xor
jb
push
cmp
icebp
aas
mov
xor
add
test
jl
std
in
xor
pushf
mov
mov
cmp
inc
nop
sbb
out
in
mov
fldcw
cmp
aam
inc
pop
rep
fimuls
or
mov
repz
xchg
in
rcrb
inc
push
sahf
cmp
rorb
inc
mov
mov
mov
adc
jge
jge
jp
dec
movsl
or
outsb
pop
cli
dec
fsubrs
fisttps
loopne,pt
in
std
push
stc
add
adc
mov
dec
jecxz
mov
cmpsb
mov
dec
jno
jae
inc
mov
lods
lods
xchg
xchg
pop
xor
cmp
sub
cwtl
jns
jge
lods
ret
ror
lahf
dec
pop
mov
out
pusha
stos
and
ds
xchg
ss
pop
aad
jb
fidivs
fucomp
pop
xchg
jne
out
add
jge
pop
mov
xchg
fs
repz
inc
fldt
xor
mov
adc
daa
mov
fsubl
push
int3
adc
rcr
lods
push
jno
loop
test
jbe
push
clc
mov
mov
xor
ljmp
or
jp
xchg
push
adc
jns
add
cwtl
icebp
cltd
test
data16
fldcw
aas
popw
andl
scas
movsb
jb
or
mov
aad
push
es
es
xor
outsb
pop
xchg
fisttpl
std
loope
inc
push
mov
dec
aad
xchg
mov
repz
or
mov
xchg
or
sbb
cmp
mov
in
mov
jecxz
dec
inc
repnz
scas
pop
mov
mov
lahf
cmpsl
es
syscall
mov
sub
jle
xchg
mov
add
dec
cmp
stos
cltd
xchg
in
sbb
mov
les
outsb
pop
and
int
adc
sbb
jmp
push
cmpsl
pushf
stos
in
fcoml
int3
out
dec
scas
pop
xor
jge
and
dec
jle
and
adc
fwait
inc
add
dec
and
outsl
sbb
mov
add
jmp
ss
repnz
mov
lds
into
cmp
sbb
or
hlt
fcoms
mov
sbb
mov
imul
es
mov
push
in
les
mov
lods
dec
mov
inc
faddl
pop
cmp
bound
cmp
push
repz
movsl
cmp
aad
cmp
xchg
lods
jmp
out
adc
push
out
adc
fbstp
int3
lods
mov
inc
dec
mov
sbb
or
popa
xchg
jmp
push
data16
jle
jl
adc
mov
insb
mov
out
scas
or
fsubl
sub
fistps
int3
push
dec
inc
push
xchg
inc
jl
addr16
in
popf
les
out
xor
fxch
push
push
add
pop
xlat
mulb
icebp
pop
or
adc
out
jg
xchg
inc
sbb
pusha
mov
adc
in
adc
add
inc
inc
mov
mov
push
loop
sub
inc
call
xor
and
push
adc
pop
ljmp
rorb
mov
rcrb
pusha
shl
pop
icebp
lahf
repnz
mov
push
lret
add
xor
loop
sar
push
xor
xor
repz
sub
call
mov
mov
cmpsl
xor
adc
sbb
stc
rclb
adc
or
mov
repz
cmp
stos
push
jbe
sub
fwait
or
sub
sbb
ss
addr16
push
or
push
lds
jae
adc
dec
dec
mov
stos
cmp
int3
mov
lea
sbb
test
mov
movsb
jmp
or
mov
aas
test
mov
pop
mov
jne
mov
jae
jns
mov
repz
imul
inc
push
sub
xor
adc
cld
cmp
or
incb
mov
mov
rolb
cwtl
subl
std
imul
lds
xchg
lock
rorl
insl
cmpsb
test
xor
filds
adc
jo
xchg
addr16
sbb
outsb
sbb
sahf
jno
add
jno
sbb
decl
and
add
jbe
negb
insb
dec
pop
jl
push
push
mov
js
hlt
test
or
ljmp
adc
outsb
aaa
xchg
and
cmp
rcl
stos
jbe
xchg
aad
daa
fbld
push
adc
sbb
push
cwtl
or
add
pop
dec
fbstp
into
and
dec
push
pusha
ret
pusha
push
lock
jbe
adcl
imul
mov
cli
imul
jle
icebp
lds
pop
mov
jnp
sub
ds
pop
add
xchg
test
jecxz
andb
mov
out
cld
dec
push
push
inc
cmpsb
add
jns
dec
cmp
dec
or
shrb
xlat
xchg
inc
arpl
das
dec
sbb
or
mov
jbe
adc
mov
outsl
sarl
xchg
pop
and
xchg
lods
test
in
aam
cwtl
pop
sbb
lcall
jle
cs
call
add
mov
mulb
aaa
push
xchg
push
out
loopne
xor
add
popf
mov
cltd
into
add
mov
sbb
mov
loopne
sahf
ljmp
xor
jmp
test
aaa
sbb
cmpsl
shr
and
push
xlat
cld
add
fst
push
das
sbb
cmpsl
inc
stos
mov
and
xchg
jl
stos
jl
fwait
in
add
push
out
pop
inc
pop
or
sti
or
lcall
in
testl
sbb
lods
push
cmpsl
out
xor
outsl
sub
repnz
adc
int
cmp
xorl
adc
cli
orb
push
jl
xchg
out
lds
mov
jecxz
movhps
cmp
xor
inc
xchg
sbb
pop
sarl
xor
dec
scas
cs
push
mov
inc
xor
adc
mov
insb
jmp
mov
jecxz
mov
or
sarl
fisttpll
int
mov
inc
decl
in
rolb
clc
mov
pmaddwd
pop
sbb
push
fcmovu
dec
sbb
inc
dec
ss
loopne
push
cmpb
or
addr16
mov
aam
or
jp
jbe
scas
xor
mov
fucomi
xchg
and
adc
cs
lret
push
faddl
pop
cmpsl
mov
jnp
popf
lahf
fildl
pusha
jmp
les
shl
scas
addb
mov
pop
adc
jl
pop
loopne
xlat
cmp
mov
and
cmpsl
shrl
xor
push
mov
int
xor
popf
int3
mov
sbb
pop
lcall
pop
sahf
stc
leave
fisubl
loop
rclb
mov
mov
xchg
pop
xorl
int
ret
push
sarb
jle
push
mov
mov
dec
and
lds
jbe
mov
jle
xchg
pop
and
mov
add
sub
or
or
jecxz
loopne
imul
or
call
aad
in
fldl
jg
pop
sub
roll
pop
lds
test
stos
test
push
ret
int3
cli
jae
aad
lods
fwait
int3
mov
loop
dec
outsl
fcomi
repz
ret
das
lret
lret
push
mov
leave
cmpsb
movsl
dec
imul
xchg
mov
scas
je
mov
dec
mov
ja
mov
pop
js
push
testl
inc
push
push
movsb
cmpsb
push
subb
add
cmp
fstps
jb
xor
jae
cld
sbb
outsl
xchg
stos
nop
repnz
push
in
mov
enter
fs
pmaddwd
add
lods
jae
pop
int
sub
cs
sti
in
cmp
xchg
add
shr
sbb
es
xchg
cmp
push
xor
rcll
movq
lret
imul
out
push
xor
inc
dec
dec
jne
test
into
je
pop
movsl
fsubrp
lea
cmp
ja
movsb
push
or
aad
in
xor
imul
pop
jle
cmp
mov
fcoml
mov
mov
inc
lds
add
mov
add
mov
cmp
shr
jb
add
out
sahf
ss
pop
idivl
xor
and
inc
nop
popa
pop
dec
gs
jae
jnp
push
cmp
pop
mov
aad
out
pop
cmp
in
xor
xchg
ss
xchg
xchg
and
push
xor
or
xor
test
lock
push
inc
loope
sub
icebp
lret
out
imul
xor
lret
and
cmp
sbb
and
std
lock
add
outsl
in
xor
mov
inc
data16
inc
push
mov
xchg
xor
cltd
mov
xor
rcl
iret
adc
bound
ds
adc
icebp
mov
mov
lods
mov
cmpsl
pop
incl
push
pop
out
sub
fmuls
pusha
cmp
xchg
mov
daa
or
and
pop
xchg
jp
mov
push
nop
jmp
xchg
cmp
pop
movsb
pop
add
mov
aad
lods
icebp
mov
ret
cvtps2pi
or
push
loopne
cs
pusha
insl
in
out
data16
pusha
inc
call
shl
add
mov
imul
out
in
aad
js
add
gs
xchg
lret
sahf
push
xchg
xor
fnstsw
jno
xor
cmp
in
insb
add
test
add
push
pop
push
jle
add
in
popa
dec
ret
mov
adc
push
test
jg
sub
sbb
inc
push
arpl
jge
lret
mov
ljmp
call
cli
cmp
jmp
and
push
js
call
idivb
sbb
push
sbb
pop
hlt
pop
and
jns
addl
negl
cmpsl
xor
ja
aam
imul
cmp
into
mov
dec
add
dec
mov
inc
push
bound
sbb
outsb
cmp
rolb
dec
fildll
xchg
or
dec
sbb
repz
cmp
push
adc
mov
pusha
sbbl
inc
mov
ja
and
stos
fwait
loopne
shl
push
xchg
cmp
lock
pop
inc
loop
ret
loope
mov
sub
insl
movups
sbb
dec
mov
outsb
nop
or
in
pop
ss
mov
inc
cwtl
into
xor
sbb
cmp
daa
fsubs
or
jno
sahf
jge
mov
fnsave
fnstenv
sub
sub
fs
addr16
into
in
rcr
xchg
mov
cmp
int3
cltd
cmp
cmc
jp
jmp
push
push
jge
mov
or
adc
into
sub
pusha
and
test
out
and
xorl
bound
adc
and
cmp
or
or
test
lods
lret
movsl
das
int3
add
mov
mov
sub
jmp
das
mov
cltd
mov
jp
mov
ja
in
out
mov
push
in
mov
fsubrs
xchg
xchg
cmc
or
call
push
ljmp
xchg
xchg
or
add
std
lock
push
cli
andb
jne
dec
xchg
notl
jp
jp
xor
es
mov
inc
mov
mov
out
mov
cmpsl
xor
push
fdivr
mov
push
stos
adc
or
cwtl
mov
or
fmuls
add
andb
out
mov
inc
cmp
xor
popf
arpl
and
popa
test
mov
dec
or
push
cmp
clc
insb
cmp
into
repz
or
add
bound
cmc
push
jle
mov
fcmovbe
mov
xlat
jno
cmp
add
js
rcll
aaa
ret
mov
fmuls
fucomip
add
mov
sub
xchg
mov
pop
dec
xchg
lods
gs
les
mov
cmpsb
mov
notl
gs
aad
cwtl
cwtl
in
jecxz
inc
dec
outsb
aaa
pusha
dec
xor
in
jl
inc
cwtl
test
push
fdivs
fidivl
ret
cli
dec
add
into
xchg
adcb
iret
sub
jbe
bound
ljmp
lods
decb
daa
shrb
adc
fstpt
adc
xlat
jns
data16
addr16
mov
mov
sub
add
int3
jge
xchg
mov
push
mov
inc
jns
xor
lock
cmp
aaa
cmp
and
lcall
jne
enter
add
mov
lahf
or
fidivrl
scas
dec
push
and
call
gs
gs
test
loope
arpl
aad
aam
aam
or
jns
push
or
mov
mov
insb
loopne
adc
repz
int
ret
aad
xor
and
pop
rcl
pop
push
mov
sub
inc
cmp
xor
mov
cld
das
out
add
and
std
call
mov
les
xchg
and
jle
mov
sbb
jno
imul
ja
in
insb
int3
or
pop
cli
push
lods
jo
cli
push
addr16
dec
or
aam
mov
sub
iret
test
in
push
fdivs
or
outsl
cmp
enter
aas
scas
sidtl
pop
les
sarb
cmp
push
and
xchg
aad
leave
or
dec
push
mov
mov
mov
mov
addb
out
xchg
adc
ljmp
push
sub
mov
adc
outsl
xor
cmpsl
xchg
jge
push
xchg
mov
es
mov
insl
stos
mov
pop
outsl
hlt
sbb
test
or
out
push
iret
js
and
dec
pop
push
cli
sbb
inc
out
lret
xor
push
ljmp
add
push
ja
and
push
rorl
push
xchg
stos
jno
push
mov
mov
test
xor
jp
test
arpl
mul
jp
repnz
jae
fistps
inc
adc
and
pop
mov
rcl
push
or
mov
imul
in
mov
repnz
pop
fwait
jp
or
cmp
jae
pop
lret
and
outsb
insl
sbb
les
repnz
testb
dec
xor
in
jns
and
pushf
inc
mov
jg
xchg
fisttps
dec
sahf
push
js
jl
test
add
cld
aam
add
jnp
mov
xor
cmpsl
scas
sub
aas
sub
xor
in
aam
into
adc
sub
add
sbb
popf
mov
mov
inc
jno
sub
inc
outsb
dec
call
inc
xchg
push
jmp
push
repz
xchg
fwait
in
and
insl
lahf
dec
or
mov
ja
das
jle
and
inc
add
icebp
push
xor
add
les
cmp
or
stos
and
ret
and
movsb
push
xor
cmp
roll
sub
stos
lahf
int
sub
in
repz
dec
fdivrp
popa
stos
sbb
cmp
pop
scas
push
aaa
mov
aaa
aam
scas
xor
std
and
sub
call
dec
inc
pusha
gs
add
ret
push
movsb
mov
fucomi
mov
dec
clts
xchg
dec
imul
mov
mov
add
adc
stc
sbb
dec
mov
xor
lret
lret
clc
dec
nop
push
or
cmpsl
popa
add
mov
imul
cmp
pop
addr16
push
daa
and
xchg
xchg
fldenv
sub
pop
cmpsb
popf
cli
scas
adc
push
inc
scas
pop
mov
jl
mov
movsb
movsl
push
stc
lret
fwait
and
push
scas
xor
sub
push
xor
adc
jno,pn
push
dec
add
test
in
xchg
adc
popa
fcomps
subl
sbb
lock
add
fcoms
add
stos
jnp
and
mov
push
fdivr
jp
ret
sub
mov
jno
repz
push
in
xor
cmp
lods
fadd
and
add
fcmovnu
iret
and
imulb
flds
and
div
jmp
je
mov
jl
fwait
or
adc
and
rorl
jp
shll
jmp
inc
movsb
dec
loopne
push
out
mov
fsubl
jnp
test
lahf
call
fwait
adc
adc
xchg
stc
pop
mov
dec
fnstenv
fbld
es
ror
jo
sub
test
push
sub
roll
les
dec
cmp
repnz
test
addr16
enter
cltd
adc
out
dec
adc
lcall
mov
repz
pop
pop
pop
orb
loop
pushf
and
jl
in
jecxz
xchg
mov
lods
adc
or
jnp
lcall
add
add
rcrl
test
enter
lds
mov
pop
lods
jbe
out
mov
inc
jge
pop
mov
fsts
mov
mov
mov
clc
xchg
cwtl
les
out
push
movsb
dec
shl
sub
push
push
or
pop
sbb
inc
int3
popa
jbe
call
in
push
jns
jmp
inc
popf
sbb
inc
les
call
adc
subl
push
popf
xlat
mov
mov
in
pop
movsl
dec
adc
xor
mov
and
mov
push
and
and
inc
pushf
jge
dec
inc
inc
xchg
dec
sahf
jecxz
dec
sbb
inc
cmpsl
pop
pop
jne
stc
out
add
mov
push
outsb
mov
dec
add
sub
fdivrl
pop
shll
push
sarb
push
leave
inc
xor
mov
pop
in
hlt
or
popa
sbb
ret
mov
fdivrs
xchg
daa
push
loopne
imul
ret
fiadds
xor
sub
rolb
cld
mov
fistps
inc
xor
cs
mov
aad
add
aas
lahf
mulb
addl
test
fcoml
mov
push
daa
mov
icebp
jne
fnstsw
xchg
and
xchg
push
arpl
mov
jmp
hlt
sti
dec
xchg
inc
sub
in
mov
test
rcll
add
in
mov
movsb
ret
test
scas
mov
and
push
aad
jecxz
sbbb
fwait
aas
ret
pop
arpl
dec
imull
outsl
jle
push
jg
repnz
mov
lahf
pop
sbb
inc
add
xchg
addl
arpl
in
and
outsl
lock
addr16
call
nop
aad
daa
jl
rcrb
lods
pushf
cmp
pop
mov
sbb
cmp
or
gs
inc
loop
mov
pop
mov
jo
cmpsl
bound
mov
leave
xlat
rcll
imul
adc
pop
dec
push
rorl
adc
rorb
mov
or
jg
ja
movsl
jg
mov
mov
pop
fildl
outsl
cmp
movsl
aas
jp
or
adc
jne
pop
jae
mov
push
jne
push
arpl
cmpsl
js
lret
add
cmc
push
movsl
ret
daa
mov
out
jmp
ss
and
or
cmp
jb
push
inc
push
pop
pop
in
fs
icebp
xchg
in
inc
sub
jge
dec
inc
push
inc
ljmp
and
push
test
mov
xor
loop
rcl
ret
test
pop
adc
mov
aad
sbb
mov
jnp
or
fstps
jne
sbb
stc
hlt
or
jg
mov
sbb
ret
pusha
subl
loopne
popl
mov
xchg
fnstsw
call
imul
mov
mov
add
pop
push
rorb
cwtl
fdivp
fbstp
sub
shlb
lcall
fdivl
push
mov
mov
imul
jmp
mov
and
pop
int
nop
mov
inc
aaa
fldenv
mov
sub
or
adcl
add
sub
jmp
jae
icebp
xor
test
bound
iret
gs
rcll
pop
sub
andl
fnstenv
mov
stc
dec
rcrb
movsl
vcvtps2dq
push
jo
icebp
icebp
fimuls
pop
adc
jae
mov
data16
imul
or
daa
stos
xchg
xorl
repz
std
imul
mov
mov
xor
mov
jae
dec
insl
outsb
jg
mov
mov
jl
cli
cmc
in
sub
mov
inc
filds
pop
xchg
shlb
cmp
xlat
sar
push
sub
lock
mov
sub
push
outsl
mov
int
in
mov
aaa
pop
sbb
xchg
sbb
push
insb
mov
sbb
adc
popa
pushf
cli
pop
xchg
lret
jbe
sub
or
mov
dec
dec
adc
and
jb
icebp
cmpsb
rorb
adc
loopne
jbe
icebp
adc
jnp
shlb
sti
inc
push
add
lock
mov
add
jno
data16
xbegin
in
add
jmp
sbb
lret
insb
mov
push
in
imul
dec
fistps
and
jmp
orl
inc
jo
popf
inc
cmpsl
dec
jp
add
xor
shr
imul
mov
inc
fisubrl
aam
jle
sbb
xor
sbb
divl
fimuls
mov
out
pop
or
js
mov
sub
jno
add
addr16
rcl
sub
nop
add
imul
insl
xor
sbb
or
mov
jg
lret
push
pop
daa
sti
sub
cmpsl
mov
test
pop
cmp
call
xor
nop
lcall
push
pop
scas
push
push
sti
jno
jo
sbb
mov
pop
outsb
sbb
mov
rol
sar
push
jne
flds
repz
mov
and
pop
pusha
mov
in
sbb
adc
push
loope
scas
aaa
imul
jmp
hlt
xchg
pushf
dec
fidivl
les
push
insb
or
mov
loope
nop
test
xchg
pusha
and
je
fistpl
and
pop
inc
mov
insb
add
and
xor
sub
mov
mov
dec
nop
int3
and
and
push
aas
out
pop
rolb
push
adc
push
jmp
movsb
fwait
xor
imul
dec
sbb
jmp
or
push
sarb
rorl
and
lret
push
and
sbb
repz
jns
loopne,pt
sbb
xor
in
test
xchg
xchg
gs
xchg
mov
imul
dec
rcr
in
inc
loop
sub
push
mov
and
test
push
fbstp
cmp
out
and
jne
roll
push
or
add
adc
cmpsl
js
hlt
pop
sbb
repz
adc
sbb
nop
jmp
test
push
cmp
sbb
int
cmp
fdivrs
pop
cmpxchg
mov
jmp
cmpsl
and
ljmp
data16
scas
cmpsl
lods
sbbl
jecxz
sub
rclb
loopne
movsl
fidivl
lcall
dec
pop
and
add
xchg
sbb
fnstenv
ja
mov
mov
add
sbb
sub
or
pop
es
inc
ret
xor
idiv
roll
stos
xchg
int
sub
adc
sub
mov
jns
sub
roll
xor
rolb
repz
xchg
shl
jl
loop
mov
dec
or
lcall
xchg
popf
add
call
sub
stos
not
xor
sbb
leave
shlb
add
out
lds
out
sub
mov
sahf
mov
stc
mov
mov
mull
push
repz
pop
jmp
xor
std
cs
aas
push
and
push
lret
sbb
out
pop
mov
dec
subb
out
sbb
mov
call
shl
jp
daa
jl
fucomip
repnz
xor
dec
in
into
aas
out
aaa
xchg
cmc
pop
icebp
mov
sub
mov
sub
leave
jae
stos
and
test
outsl
loope
lods
out
xchg
or
mov
jle
xchg
xor
sub
pop
sbb
or
out
insb
idivb
sub
cwtl
inc
mov
ds
cltd
or
arpl
ss
mov
hlt
cmpsb
mov
aad
inc
pop
lret
and
adc
mov
mov
and
jb
in
cmc
adc
inc
out
aaa
inc
call
and
mov
cmp
enter
int3
rol
or
push
scas
scas
mov
xor
inc
dec
pop
or
mov
xorb
es
dec
mov
xchg
inc
in
lcall
sbb
sbb
inc
std
data16
loopne
push
scas
mov
cld
jle
hlt
ret
imul
out
mov
add
jb
fwait
into
mov
aam
mov
sarb
sahf
push
jge
push
fstp
or
jb
mul
inc
push
shr
fprem
pop
add
xlat
orl
mov
ja
inc
pop
movsl
mov
xor
ficoml
fwait
mov
push
repnz
mov
fisttpl
sub
pop
sahf
stos
mov
fs
pop
jne
repz
mov
test
cmpsb
inc
xchg
lret
out
sahf
nop
int
sbb
cmp
lds
cmp
cmp
inc
call
loopne
stos
dec
das
idivl
enter
fcmovu
rolb
ljmp
mov
xchg
push
xchg
cmp
mov
sbb
cmp
movsb
inc
arpl
stos
xorl
fs
cmp
cs
push
jle
xchg
and
cmc
movsl
mov
jge
bound
sbb
push
sbb
xor
rorb
hlt
sub
xchg
mov
push
push
mov
mov
mov
lods
je
daa
loope
inc
mov
adc
in
js
ret
loop
xchg
scas
pop
sarb
into
nop
aaa
pop
int3
negl
add
lret
pushf
dec
sub
gs
xchg
push
stos
orb
rcl
pop
inc
or
mov
jecxz
sti
test
mov
stc
ljmp
cmc
mov
pop
cli
cmpsb
loopne
pop
xor
lods
sub
daa
popa
jae
pushf
jns
push
bound
rclb
ficomps
test
xchg
data16
nop
mov
sti
and
inc
add
inc
add
stc
push
pop
cwtl
popa
add
adc
adc
and
xor
cmc
rcrb
mov
mov
pop
mov
jnp
add
mov
les
cwtl
xchg
sub
fld
xchg
pop
in
or
xchg
cmpsb
aaa
std
outsl
mov
out
mov
in
sub
cs
lock
cmpsl
jno
adc
data16
cltd
mov
dec
aad
fdiv
xchg
fisttpl
jg
in
imul
lret
test
mov
stos
lea
adc
cmpb
daa
or
divb
xor
cs
in
in
fstl
dec
in
xor
insl
push
cmp
sahf
movsl
cmp
and
rorb
pop
sub
mov
dec
jae
out
mov
ficomps
mov
jmp
fsubrp
push
jnp
in
stc
test
cmp
fs
cmp
inc
push
nop
or
xchg
insb
xchg
push
xor
insb
fbld
cld
push
in
subl
imulb
xlat
dec
gs
sub
inc
lret
mov
std
andb
aaa
add
shlb
mov
lods
add
stc
push
popa
lods
mov
movsb
mov
insb
cmp
clc
xchg
cwtl
dec
test
dec
adc
adc
sub
jns
or
fimuls
jo
mov
mov
add
std
adc
dec
inc
fdivrl
ljmp
dec
or
adc
and
cwtl
pop
mov
mov
xor
shr
mov
dec
add
mov
lods
sbb
inc
gs
inc
mov
leave
pop
and
loopne
xor
xlat
imul
mov
push
mov
pop
enter
cmp
sub
insl
adc
aas
jl
pop
xchg
bound
test
arpl
jmp
inc
call
lret
rorl
dec
fldt
and
subb
inc
pop
stos
mov
add
pop
mov
pushf
sahf
pop
xor
aam
ss
arpl
fstp
in
daa
movsl
enter
and
xor
out
call
inc
sarb
pop
imul
out
repnz
jge
cmp
xchg
dec
push
repnz
movsl
outsb
jo
mov
push
loopne
enter
and
xor
inc
or
or
push
testb
sbb
in
mov
cltd
scas
data16
mov
mov
int3
jg
pop
pop
sbb
mov
subb
ret
outsl
add
xchg
aam
jle
xchg
sbb
movsl
xchg
hlt
int
mov
jg
in
sbb
mov
and
dec
mov
in
movsb
lahf
cmp
cld
lcall
xchg
or
jb
adc
je
jns
lea
fldenv
mov
jo
scas
orl
push
push
outsb
leave
jno
ds
clc
rcll
pop
lret
inc
lds
data16
sbb
insb
rorl
add
xor
fcomps
pop
adc
aad
loopne
in
cmpsb
jns
dec
jns
das
fisubl
xchg
stos
and
fstl
cmpsb
popa
mov
fsts
daa
fstpl
sub
repnz
or
mov
lret
adc
ret
push
jge
lods
cmovo
inc
and
and
fwait
jns
sub
or
cmpsb
pop
pop
shr
mov
mov
aam
shll
or
pop
enter
push
ret
dec
gs
cmp
addr16
outsl
cld
pusha
cmp
lea
jmp
cwtl
out
addr16
mov
test
test
jno
js
mov
cld
leave
mov
jns
aad
test
scas
inc
add
lahf
push
pop
mov
sbb
out
out
pusha
outsl
push
mov
ja
les
dec
in
frstor
es
mov
push
pushl
pop
ss
and
icebp
xor
outsb
arpl
add
and
push
xchg
icebp
pop
lret
xchg
sbb
lahf
sub
inc
pop
pushf
das
jecxz
lods
push
add
cmp
xchg
sbbl
jno
jg
minps
cmpsb
lret
add
inc
jno
sub
cmpsb
lea
repz
push
and
jnp
je
cmc
faddp
aad
test
jae
cmp
push
outsl
sub
sbb
cmc
rorl
cld
xor
mov
add
rorl
gs
jecxz
dec
pop
lods
cmp
lods
cmp
jge
dec
push
lock
push
iret
jmp
mov
into
mov
and
outsl
stos
movsb
mov
sti
hlt
jb
pop
leave
ss
or
mov
lock
mov
stc
ss
lock
iret
pusha
push
into
std
jno
push
sarb
aam
xor
aas
imul
adcl
fwait
or
dec
ret
push
outsb
mov
adc
inc
incb
push
cmp
xor
push
rcll
rorl
pop
xor
ds
imul
add
and
daa
xor
pop
pop
mov
inc
xchg
inc
sub
stos
xchg
es
sbb
pop
test
ljmp
cmc
dec
aaa
jns
clc
mov
jbe
adc
int
daa
push
icebp
dec
mov
loopne
sbbb
ret
push
sub
shl
rcll
push
movsb
popa
leave
jle
or
jge
rolb
xchg
sarb
popf
xor
jns
mov
mov
push
rolb
cmp
sub
mov
gs
jns
jbe
lock
outsl
mov
repnz
mov
jge
cld
mov
cs
lods
fwait
shll
pop
cmp
iret
jecxz
dec
and
out
or
mov
imul
mov
add
push
out
or
cmpsl
jecxz,pn
hlt
jns
adc
cmp
imul
repnz
lahf
mov
push
jmp
sti
mov
frstor
loope
dec
sbb
jne
or
out
push
addr16
mov
cmp
or
clc
pop
fldenv
aad
push
xorl
jns
imul
cmp
outsl
dec
in
jl
and
cmp
jb
lret
adc
and
sbbl
mov
push
stos
xor
inc
xchg
or
xchg
ja
loopne
pop
movsl
or
mov
mov
inc
loopne
pushf
fisttpll
push
cmp
adc
dec
mov
jg
scas
in
cmp
mov
rol
lea
xchg
mov
int3
inc
rcll
jl
int3
cltd
dec
fnsave
add
inc
lcall
daa
scas
add
loope
scas
popa
ljmp
mov
mov
xchg
ret
sub
in
dec
sbb
xchg
and
jno
pop
mov
hlt
mov
mov
lods
mov
xor
inc
stos
in
inc
cmp
sub
mov
mov
cmp
sbb
cmp
pushf
stos
add
movb
jmp
lret
push
in
sbb
fnstenv
pop
mov
loope
push
sub
mov
sub
jge
xchg
gs
pop
pop
pop
push
xchg
in
pop
stc
call
call
call
out
imulb
movsb
sub
dec
dec
push
clc
pop
jae
aaa
cld
pop
cmp
popf
cli
cltd
clc
cmp
leave
enter
lea
and
negl
pop
filds
ljmp
add
lret
push
sbb
push
push
pop
jp
mov
xchg
push
and
lahf
push
mov
lods
jo
jo
aas
cmp
pop
xchg
mov
pusha
push
cmp
daa
xor
js
mov
sbb
data16
xlat
dec
in
adc
xor
ret
or
lea
and
lea
adc
call
push
scas
push
mov
gs
mov
pop
mov
mov
iret
mov
mov
add
dec
bound
xchg
or
jb
mov
pop
and
push
ja
push
sub
insl
inc
xor
add
mov
xlat
test
addr16
lock
loopne
inc
and
pop
ds
clc
enter
push
ljmp
rdmsr
push
aam
jp
push
insl
jne
std
xor
popf
cmp
inc
loop
cmc
lds
push
inc
sahf
xchg
pop
into
mov
ret
rcrb
mov
push
cli
aad
pop
or
sub
imul
and
out
or
xchg
icebp
pop
leave
xor
push
into
xor
popa
xor
xor
lods
mov
xor
addr16
loope
jb
jg
jno
jle
mov
in
and
push
stc
das
add
outsb
jp
push
inc
xchg
shll
sub
mov
add
xchg
lods
mov
pop
fwait
inc
and
jns
adc
mov
dec
xchg
sbb
and
fidivrs
lds
xchg
call
xchg
adc
out
push
sbb
push
mov
dec
fwait
gs
in
outsb
pop
push
sti
stos
test
jno
pop
cmp
add
inc
or
inc
jecxz
pop
or
mov
pop
test
mov
jp
jbe
orb
xor
stc
insl
or
push
cltd
or
jl
data16
sbb
ret
dec
pop
and
pop
pop
jne
sub
jl
notb
push
inc
xchg
nop
ds
sub
lahf
dec
pop
mov
cld
ja
fnstenv
rcrb
dec
scas
jae
enter
push
adc
enter
lods
ljmp
cmp
sub
dec
add
dec
or
in
pop
mov
aad
ror
mov
aad
pop
loope
sbb
sbb
lods
insl
xchg
and
rolb
movsl
mov
mov
xor
cltd
mov
loopne
pop
jbe
lahf
cs
xchg
mov
test
adc
aas
in
cltd
add
jg
xchg
fwait
and
lret
dec
lret
loop
daa
fs
or
into
in
cmp
lods
fsts
cmc
outsb
fwait
xchg
push
jg
xchg
lock
out
ja
push
fsub
fcoms
or
clc
imul
push
or
mov
jno
cmp
out
pop
leave
push
jns
pop
push
sub
shrb
pop
mov
incb
xor
sub
repz
xchg
xchg
xchg
pop
jg
cmp
hlt
cmp
sub
ret
add
xor
cmpsb
pop
mov
or
jl
js
loopne
mov
push
xchg
xchg
mov
jmp
aaa
inc
test
hlt
jae
popf
fnstcw
lods
or
sub
adc
imul
pusha
hlt
inc
outsb
cmp
aaa
or
or
outsl
cwtl
lods
push
sbbl
je
add
mov
ss
dec
loopne
jbe
inc
lahf
das
sbb
int
ja
nop
and
push
loop
jg
mov
or
push
mov
push
jmp
mov
imul
test
cmp
jmp
lcall
inc
out
mov
sub
fs
mov
jno
stc
sub
xor
loope
lock
fcmove
add
adc
xor
ret
shll
mov
in
dec
sbb
mov
inc
jne
xchg
cwtl
stos
push
mov
pextrw
cmp
shl
cmp
adc
daa
int
pushf
addl
jl
sub
cltd
ljmp
ret
fisubrl
lea
stc
loope
test
mov
inc
repz
mov
adc
lret
aas
inc
aad
test
and
xchg
ja
mov
aam
ja
repnz
addl
pop
mov
out
cmp
jmp
nop
inc
fbld
jge
cmpl
mov
adc
adc
cs
sub
and
jno
mov
test
dec
nop
pop
or
jecxz
data16
inc
lea
pop
loope
and
adc
pusha
cmp
inc
enter
or
sbb
or
dec
insb
mov
jnp
and
mov
push
js
sub
lcall
shr
mov
pushf
cmp
sub
and
or
or
sub
adc
mov
outsl
push
xor
popf
icebp
mov
lcall
fs
xchg
xor
aas
pushf
and
aas
cwtl
popa
push
sti
sub
mov
pop
data16
sbb
cli
push
int3
and
mov
sarl
mov
int
lea
imul
lock
push
repnz
insl
xchg
divl
mov
in
lret
mov
pop
mov
bound
inc
in
mov
arpl
clc
ljmp
ljmp
test
add
inc
ret
cs
imul
push
sub
pop
mov
icebp
or
or
mov
ficompl
add
int3
dec
mov
popf
lea
std
push
ret
cld
ret
push
icebp
jecxz
mov
xor
subb
cmpsb
or
xor
jp,pn
aaa
mov
ljmp
xor
test
loopne
inc
cmpsl
add
fnstsw
and
in
outsb
ja
js
pop
cs
pop
lahf
mov
mov
adc
mov
mov
inc
jae
icebp
icebp
push
jae
mov
or
adc
xchg
aaa
xchg
jne
arpl
repnz
cmpsl
xor
xchg
cmpsb
pop
dec
cmp
cmp
mov
ret
mov
xchg
out
vmwrite
adc
imul
ja
mov
bound
add
mull
fistl
and
addr16
lcall
sub
hlt
in
lahf
and
cld
add
jo
leave
and
in
mov
aas
xlat
jge
jo
push
cwtl
movsb
cs
icebp
xor
mov
xchg
mov
adc
mov
jl
aas
add
loope
sub
pop
and
xchg
dec
lods
aas
add
subl
dec
mov
mov
filds
sbb
stos
and
pop
aaa
testl
movsl
sub
adc
sub
mov
addr16
mov
rcll
call
jne
or
xchg
gs
gs
les
call
insb
mov
mov
cltd
ficoml
lret
call
mov
inc
stc
bound
sub
sbb
cmp
jno
jge
cmp
mov
insl
sub
fs
cmc
popa
cwtl
nop
inc
jbe
int3
cmp
fisubs
stos
push
xor
lock
jp
out
jge
sar
jecxz
fbld
mov
lock
les
sub
fwait
pop
mov
fldl
cs
mov
jp
ret
je
inc
jmp
sub
pop
addr16
hlt
and
mov
call
ljmp
mov
outsl
fiaddl
or
sbb
insb
test
push
push
jmp
cmp
fidivrs
cmp
push
es
push
jecxz
fs
mov
lcall
test
cwtl
inc
pushf
xor
cmp
pop
aas
adc
sarl
stos
xor
roll
sub
lods
inc
lret
xchg
jecxz
inc
add
and
push
jmp
mov
adc
or
push
mov
das
cld
out
inc
push
adc
and
cmc
int
test
out
std
fsubrp
xchg
inc
pusha
and
lahf
es
jnp
pop
inc
dec
nop
jmp
cwtl
xchg
jnp
lods
xor
gs
mov
cltd
mov
cmpsl
sub
mov
jge
popa
and
rorl
inc
cltd
pop
fidivs
lret
mov
xor
jl
push
aad
cld
loope
mov
add
ficoml
movsb
adc
ja
mov
dec
divl
inc
xchg
mov
lea
jle
dec
les
adc
push
movsl
jb
fistpll
cld
sub
cmp
test
test
in
push
mov
scas
out
jmp
loop
jbe
mov
adc
popa
xorb
push
mov
sbb
or
mov
pop
loope
jle
shlb
fs
jns
arpl
lods
push
dec
mov
fcompl
pop
mov
mull
jae
add
and
cli
push
pop
aas
ss
mov
xor
gs
fistl
pop
pushf
xor
leave
push
imul
adc
cmc
mov
and
jge
repz
pop
imul
xchg
and
popf
mov
dec
divb
pop
stc
mov
mov
push
lea
xchg
std
test
add
jge
leave
cmpsl
sub
iret
inc
scas
push
jne
mov
popf
and
pop
pop
sub
and
popa
add
fsubrl
mov
ja
cmc
ss
mov
inc
lea
lds
shlb
hlt
or
sar
mov
mov
mov
push
sbb
inc
fdivrp
bound
in
cmp
repz
daa
add
xchg
in
or
mov
inc
lods
xor
lret
pop
inc
fsubrl
and
pop
adc
sbb
pop
sahf
fistl
pop
xor
dec
push
jge
outsl
cmc
mov
mov
cmp
sbb
aaa
iret
loopne
pusha
jbe
lock
add
push
xchg
loopne
es
mov
mov
dec
push
rcll
or
cmp
jle
ret
int3
movb
add
lods
fs
nop
dec
sarl
ljmp
add
push
fs
mov
orb
ret
ja
in
cmp
cmp
fisttpl
fsts
bound
sub
dec
outsb
mov
xchg
adc
sbb
cmpsl
testb
jp
rcr
addb
cmp
add
sbb
or
scas
add
out
scas
lret
mov
outsb
fs
scas
push
and
mov
insb
rcr
jp
mov
pop
pusha
xchg
xchg
inc
push
xchg
mulb
test
adc
mov
cmp
je
xor
std
jl
das
std
dec
pushaw
popf
stos
pusha
and
xchg
and
ja
repnz
inc
cs
xor
add
pop
test
fstps
hlt
scas
aad
dec
cmp
inc
inc
ret
sub
jp
xor
jb
pop
test
and
xchg
sub
or
je
jmp
lret
jg
xor
xchg
inc
xchg
lret
xchg
fcoml
inc
aas
ss
mov
jge
dec
inc
stc
cmc
cmp
repnz
cmc
cmc
inc
lods
mov
pop
push
push
pop
cmp
imul
cs
test
bound
and
jae
jns
jmp
lods
pop
inc
jb
sbb
jmp
adc
push
xchg
adc
sub
loopne
rol
or
cmc
les
std
adc
pop
sub
lods
jle
ret
ljmp
test
out
mov
js
inc
lahf
adc
pop
dec
and
mov
fdivrl
xor
jae
imul
test
jge
and
add
add
imul
sub
and
jnp
cmp
mov
jmp
ds
push
push
sbb
xor
aam
push
jo
jns
jg
adc
mov
fdivrp
punpcklwd
dec
add
ja
lock
jmp
cmpsl
xchg
and
and
dec
sti
xlat
sahf
daa
or
mov
xchg
push
pop
icebp
loop
sbb
loope
add
rcrb
inc
sub
aad
stc
enter
imul
shrl
repnz
sbb
scas
lods
arpl
cmpsl
sbb
loop
insl
xor
bnd
int3
sbb
sbb
lock
push
out
inc
fists
loope
or
mov
popa
add
js
or
xor
push
arpl
pusha
mov
aad
xchg
mov
xor
aam
mov
into
and
or
xor
imul
and
cmp
sbb
sub
je
mov
lds
inc
inc
and
and
xchg
lret
das
xchg
pushf
cmpb
ret
insl
push
outsl
pop
pop
lock
arpl
inc
and
jecxz
and
aas
ja
mov
ss
sub
orb
out
dec
xchg
adc
fisubrl
mov
xor
mov
scas
dec
orl
jp
mov
iret
and
adcl
mov
inc
bound
nop
mov
subl
fstp
repnz
xor
pop
out
loope
adc
les
mov
icebp
fdiv
ret
jg
ret
sbb
movsl
inc
sbb
es
int3
sahf
jg
out
add
and
jle
and
call
subl
stc
jp
pop
xchg
pop
sti
xchg
mov
imul
xchg
sbb
xor
test
add
dec
and
mov
mov
sub
dec
leave
sub
add
pop
push
push
dec
mov
sar
test
cmpb
insl
popa
adc
popf
nop
pop
or
ret
mov
cld
mov
cld
or
mov
push
inc
mov
pop
out
sbb
fcmovne
dec
add
dec
or
or
mov
adcb
pop
stos
loope
pop
cwtl
sbb
inc
push
enter
mov
mov
cwtl
jecxz
or
dec
pop
loope
stos
push
jns
rol
or
adc
insl
pop
add
in
adc
xchg
mov
add
fdivrl
cltd
out
ficoml
xchg
sbb
sub
jecxz
dec
cltd
sub
inc
mov
mov
xlat
mov
mov
sti
add
out
cwtl
mov
xor
or
jb
out
inc
movsb
push
lods
imul
daa
clc
pop
stc
add
sub
cmc
adc
or
rolb
xor
mov
repnz
sti
mov
jecxz
xor
int
xchg
sub
jbe
pop
xchg
mov
lret
rorb
fsts
pop
pusha
test
das
outsb
cmp
pusha
add
xor
out
enter
into
push
jne
adc
add
es
mov
arpl
aam
lock
jp
xlat
repnz
xor
pop
nop
repz
xor
ret
sub
add
dec
cli
rcll
mov
or
mov
notb
pop
ja
sahf
xorl
pop
js
mov
pop
movsl
or
rcl
mov
inc
fmulp
popf
rolb
pusha
jle
roll
add
pushf
je
cmp
cs
sub
inc
pop
in
lods
mov
movsl
aam
mov
mov
mov
in
pop
jmp
xor
insb
aas
sarb
lea
xchg
adc
add
es
adc
out
mov
ret
in
ror
inc
outsb
pop
scas
pushf
mov
js
fcoml
mov
mul
or
push
scas
dec
repnz
sub
ss
ret
or
ffree
adc
mov
pop
fcomps
fiadds
adc
test
mov
movsb
push
push
mov
lret
adc
arpl
dec
ds
pusha
iret
loopne
add
fwait
popf
clc
mov
rorb
add
and
push
dec
or
insb
add
daa
push
fsubrs
push
jge
ds
lods
hlt
aas
dec
cmp
testb
inc
or
fdivrs
mov
xchg
pop
jno
ficoml
cli
dec
mov
mov
pop
outsl
sbb
outsb
pop
jg
cmpsl
shrb
pop
lea
rcl
xchg
or
rorb
add
mov
loopw
cmpsb
mov
mov
in
push
sub
dec
jmp
std
loop
ja
nop
xchg
xchg
dec
sbb
or
cmpsl
incb
daa
sub
enter
roll
gs
shl
dec
jnp
push
in
sbb
or
lret
mov
pop
and
lahf
jle
iret
adc
fs
scas
in
arpl
into
sub
mov
outsl
hlt
arpl
sahf
lock
fiaddl
shl
sbb
test
int3
out
push
ret
or
cmpb
shl
je
add
mov
repnz
negb
pop
jno
mov
lret
incl
jb
sub
adc
lcall
ljmp
add
add
adc
xor
or
test
mov
mov
and
or
push
imul
in
mov
adc
jno
cmp
jno
xchg
iret
ds
out
mov
push
mov
pusha
daa
pusha
xchg
push
outsl
fidivs
sub
dec
fbstp
fwait
ja
xchg
sahf
mov
dec
and
or
mov
cmp
push
aam
ljmp
dec
outsb
sahf
jmp
mov
pusha
jae
ds
push
ds
mov
adc
push
fstpt
push
icebp
inc
rcl
int
cmc
mov
push
ja
es
mov
in
out
mov
scas
popf
add
int3
cwtl
aaa
fmul
daa
dec
call
pop
cmp
adc
movsl
sti
iret
xchg
dec
pop
dec
cmpsb
cmp
sbb
shl
ret
jno
shl
jb
jb
xchg
push
mov
and
xchg
push
dec
stos
xor
filds
ret
inc
fcmovb
jbe
jno
loope
mov
sbb
jp
popf
into
idivl
adc
jae
xor
loope
loope
sbb
out
arpl
data16
and
jns
adc
adc
push
movsl
fsub
inc
and
rcr
outsl
dec
fdiv
sbb
hlt
push
push
mov
and
test
mov
ss
ja
xchg
ret
inc
out
pop
les
dec
aas
loopne
push
cs
fstpt
nop
rolb
lret
add
xchg
push
push
repnz
test
xchg
cmpsl
xchg
sarb
stc
mov
out
pushf
push
movsl
lret
jne
or
xorb
aam
cmp
jg
sti
fsubrp
lret
jle
xchg
cltd
fmull
jle
insb
icebp
je
sub
shrl
test
popf
adc
lds
or
push
dec
and
das
adcl
jp
push
jbe
mov
fcmovnu
iret
data16
scas
mov
xlat
adc
stos
push
icebp
pop
inc
mov
push
sbb
jae
inc
xchg
insb
sub
pop
push
or
mov
inc
lret
xor
cmpsw
dec
jb
and
sbb
popf
insb
adc
repz
scas
mov
inc
or
and
stc
movsb
sub
sti
dec
xchg
push
and
jle
jb
xlat
xor
push
dec
ror
adc
ljmp
dec
dec
push
or
ja
push
loope
ficompl
add
xor
adc
addr16
bound
jbe
jl
jb
jmp
test
dec
mov
dec
call
test
movsl
fists
imul
daa
ds
xor
mov
push
and
movsb
xchg
js
adc
or
jl
dec
add
aam
push
or
shl
lea
aam
inc
lret
cmpsl
jge
ret
rcll
daa
fildll
xorl
mov
vmovntps
js
mov
cmp
mov
stos
test
dec
push
jns
in
xchg
jbe
das
xchg
sbb
adc
test
xor
cmp
pop
clc
xchg
cmc
test
push
mov
ss
fcomp
cmc
hlt
mov
push
test
sub
mov
sbb
std
or
dec
xchg
mov
cmc
in
sbb
js
cmp
dec
lahf
outsb
jp
iret
cmp
or
loope
push
xchg
fcmovu
das
scas
inc
and
lahf
lcall
push
jmp
stos
mov
lea
dec
inc
jecxz
jo
add
mov
insl
fwait
in
xor
adc
loop
cltd
xchg
inc
in
xor
inc
das
test
pushf
and
aam
js
sbb
rcll
cmp
out
xchg
cmpsb
pushf
jg
sub
and
push
inc
popa
xchg
dec
test
mov
aad
out
lods
sbb
lret
into
out
leave
frstor
xlat
or
mov
lds
mov
mov
add
xchg
shr
push
xor
or
pop
mov
sbb
jns
leave
cmp
fidivl
stos
data16
sub
es
arpl
test
adc
sub
inc
jo
cmp
add
in
sub
cmp
xchg
add
mov
mov
jne
int3
push
fs
jg
movsb
stc
shlb
daa
mov
push
add
mov
outsl
add
pop
sub
pop
jp
adc
in
leave
jmp
sbb
push
stc
popa
xor
lret
and
pop
cmp
jecxz
or
test
xchg
mov
push
or
xchg
xchg
subl
sub
or
mov
insl
cmpsl
inc
sbb
fcomps
lret
or
pop
loopne
jg
nop
inc
fldcw
aaa
je
or
push
jecxz
add
cmp
sbb
cwtl
loop
rcrb
insl
lods
pop
pop
fisubl
adc
movsl
sub
jp
js
xor
adc
mov
push
aas
jbe
jno
jno
dec
inc
jg
mov
add
int
scas
out
pop
or
in
xlat
mov
jge
jno
scas
jmp
fsubrs
pusha
lret
inc
inc
unpckhps
popf
or
or
cmpsl
or
sub
cmp
flds
add
jecxz
lret
rolb
movsb
xor
dec
or
lahf
mov
sub
xor
iret
or
aam
mov
jmp
nop
icebp
or
test
xchg
mov
pop
inc
inc
mov
pop
inc
sub
jmp
out
mov
gs
outsl
and
repz
or
pop
push
cmp
sbb
xor
adc
aaa
push
xorb
in
jp
daa
pop
lods
icebp
mov
rolb
mov
add
push
lret
mov
addb
inc
push
popa
jb
jne
xor
cs
pop
cli
out
pop
adc
insl
xor
loop
xchg
jno
xor
movsl
jmp
imul
ljmp
ret
pop
inc
sti
roll
fsub
inc
shrl
pop
je
into
pop
ss
cmp
mov
cmp
fwait
roll
mov
push
jbe
adc
xchg
int
mov
and
idivb
rolb
add
rcll
push
inc
fiadds
adc
jnp
lret
mov
aad
xchg
mov
fildll
and
add
hlt
out
push
fiaddl
scas
ret
in
lahf
jbe
fbld
sub
jle
popf
out
sahf
add
mov
inc
sub
inc
fildll
aas
push
fwait
cmc
jg
pop
nop
inc
call
sub
add
ret
popa
adc
sub
daa
pop
loop
daa
sub
adc
sbb
mov
andb
jo
sti
das
cmp
mov
ret
nop
out
xorl
adcb
js
mov
cmpsl
cmpsb
das
lret
mov
pop
movsl
into
push
add
ror
bnd
pop
insl
aad
daa
sbb
notl
gs
mov
les
mov
jb
daa
adc
inc
test
jp
jge
push
test
push
sub
addr16
scas
inc
push
xlat
adc
scas
cli
hlt
push
push
test
sbb
ret
cmc
cwtl
sbb
pop
nop
mov
movsl
push
push
mov
cmc
cmpsl
je
movsb
inc
test
mov
dec
mov
stos
movsl
push
mov
das
data16
les
fiadds
imul
jp
pop
push
add
cmp
xor
mov
xchg
push
imulb
mov
out
enter
cmpl
pop
sub
test
enter
xor
andb
popl
dec
inc
mov
imul
adcb
lods
xor
pop
xchg
int3
nop
repz
and
ret
ja
mov
dec
jae
push
testl
js
orl
fisubl
adc
jnp
hlt
add
data16
mov
or
push
ret
xor
lock
and
orb
scas
push
cld
ds
mov
in
xchg
leave
mov
aad
mov
pushf
filds
jno
push
sbb
adc
lds
mov
and
xchg
jg
adc
daa
xor
fldt
jne
add
mov
gs
or
ljmp
push
out
popa
cmp
sub
sub
pop
jg
jne
jo
out
fdivl
cmp
jle
stos
shll
sbb
clc
add
enter
xchg
ljmp
imul
repnz
daa
fs
jmp
mov
in
insl
mov
push
mov
sub
test
push
and
xchg
sbb
lods
dec
daa
lock
lret
inc
mov
addr16
pop
popa
aas
sbb
fisttpll
dec
ljmp
or
jge
in
inc
push
sub
cli
test
push
xor
xor
and
and
sbb
test
nop
sahf
outsb
xchg
or
push
add
call
adc
add
notl
sub
inc
dec
ds
lods
or
pop
mov
add
mov
sub
mov
and
das
add
jle
dec
jp
pushf
cmpsb
fiaddl
push
and
and
mov
je
test
lock
mov
xor
mov
or
enter
aad
add
les
cmovns
vpandn
call
sahf
in
sbb
push
push
add
xchg
addr16
push
pop
jge
gs
jmp
mov
and
stc
adc
lcall
push
add
cli
or
or
negl
in
and
bound
sbb
or
sbb
cltd
clc
push
fs
and
add
je
mov
jnp
mov
push
add
outsl
jecxz
in
xor
loop
test
xchg
sbb
xlat
mov
xchg
std
sbb
add
das
jne
pop
loop
hlt
mov
outsl
push
push
push
sub
hlt
xor
outsb
mov
test
inc
add
inc
call
sub
insl
es
fldcw
add
jl
sbb
dec
fidivl
fnstenv
mov
xchg
in
in
int
xchg
rol
inc
test
popf
or
aas
test
and
call
outsb
mov
scas
mov
and
enter
inc
test
and
mov
xor
pop
jmp
call
pop
add
loop
cmc
sub
jle
xor
or
repnz
aas
adc
dec
outsb
xchg
push
dec
xchg
ret
stos
sub
xchg
push
xor
int
outsl
cmp
daa
ficoml
push
dec
int
outsl
repz
dec
call
and
adc
sbb
loop
lds
loopne
add
cmp
andl
shlb
and
and
fstps
xchg
jns
xchg
inc
mov
jp
push
jmp
cwtl
fsubr
inc
movl
jo
mov
or
bound
pop
in
fists
loopne
and
push
rol
mov
cs
mov
nop
ficomps
insl
and
in
roll
jmp
xor
cmp
pop
mov
mov
cmpsl
cmpsl
loop
push
or
inc
repz
sub
pop
out
cmp
pop
ljmp
popa
pushf
dec
neg
das
jmp
push
insb
cs
push
sbb
pop
pop
inc
push
xchg
push
insl
inc
xchg
fs
xchg
cmc
pop
loope
xor
push
sbb
insl
in
dec
jnp
mov
dec
dec
iret
sbb
icebp
inc
xchg
mov
aaa
pop
lcall
insl
pop
popl
imull
lcall
repz
push
cwtl
jg
dec
dec
xor
lea
gs
out
push
in
jg
xchg
mov
sub
add
int
cld
js
lea
movsl
outsb
std
or
insl
addl
insl
xchg
sub
stc
test
aam
mov
and
mov
pusha
popf
add
xchg
xor
hlt
lock
lds
add
test
fs
xchg
out
add
fnstenv
ss
xor
int
or
outsl
inc
iret
xor
dec
jge
jecxz
aam
pusha
loope
movsb
aas
jl
cmc
add
lock
adc
shll
jp
ja
push
into
out
popf
aaa
pcmpgtd
jo
jns
pop
out
cli
in
mov
les
shll
add
ljmp
mov
mov
cmc
push
or
test
icebp
pop
leave
mov
daa
movsb
mov
add
dec
fdivrs
es
sub
es
lcall
int
rorl
mov
aas
aaa
lods
push
jns
xor
xchg
jb
aaa
mov
pop
push
out
cmc
scas
into
es
das
out
lds
jle
rclb
es
rol
sbb
sti
xlat
and
push
jg
loop
xchg
mov
cli
dec
dec
icebp
inc
aas
cmp
js
out
cmp
pop
mov
and
sub
mov
jo
pop
push
or
cmpl
add
mov
mov
stos
adc
lahf
mov
loope
scas
vorps
adc
ds
xor
mov
and
popf
xor
in
mov
je
mov
cmp
pop
inc
mov
or
xor
and
sbbb
ss
aaa
fwait
xor
mov
xlat
sbbl
ret
mov
or
sub
enter
or
xchg
cmpsb
inc
push
fbstp
adc
fdivl
or
cmp
sub
cs
ljmp
jg
pop
sub
in
cmp
shll
dec
fnsave
and
xchg
mov
jae
mov
inc
ret
cltd
mov
jo
fs
scas
mov
shrl
js
lahf
repz
sub
movsb
or
loope
popa
dec
call
pushl
icebp
cmp
sub
fs
fsubrl
dec
sbb
adc
mov
add
and
inc
data16
fucomp
push
fnclex
sub
xor
sbb
dec
loopne
rcll
stc
mov
cmp
popa
jno
and
push
xchg
imul
cmp
es
jnp
pop
mov
and
pop
cmpsl
and
movl
mov
out
or
shlb
push
mov
dec
mov
pop
stc
jmp
mov
fisubl
cmp
mov
andl
cmc
data16
pop
loope
cltd
lret
inc
sub
add
mov
dec
lock
and
mov
or
xchg
or
cmpsb
mov
cmp
mov
xchg
rcrb
add
inc
mov
scas
add
lock
cmp
fnstsw
mov
or
iret
push
pop
test
push
xor
add
fwait
js
push
add
xor
sub
xchg
sub
fsubrl
sub
jecxz
loope
scas
pop
pop
mov
xor
stos
mov
or
ret
sbb
fucomp
ret
sbbl
out
adc
test
dec
mov
call
fcmovne
or
mov
insl
add
std
jle
sub
xchg
lret
add
pop
xchg
icebp
jns
je
mov
xchg
push
push
int
push
push
stc
aas
lcall
push
push
xor
push
nop
loope
push
into
repnz
cmc
ja
sub
and
fwait
nop
pop
nop
call
or
jo
mov
into
out
outsb
sbb
mov
jno
stos
xchg
mov
arpl
dec
sqrtps
cmp
mov
mov
and
pop
xor
cmp
mov
mov
jno
insl
movsl
cmpl
sbb
add
out
push
cmp
test
mov
add
in
in
adc
pop
jmp
xchg
in
or
xchg
cmpsl
orl
mov
adc
xor
adc
and
ret
pop
xchg
pop
lcall
push
sub
xor
inc
jo
cwtl
shrb
pop
in
lret
adc
and
das
xchg
sbb
push
sub
push
scas
mov
hlt
mov
and
cmp
push
nop
xchg
sub
adc
mov
or
int
int3
pop
sub
mov
sub
and
aas
push
aam
clc
mull
xchg
xchg
mov
js
xchg
push
mov
jge
bound
xchg
les
push
lret
icebp
adc
mov
and
mov
inc
scas
mov
popa
ss
or
ret
pop
pop
daa
xchg
mov
jmp
xor
mov
in
pop
sub
ja
stos
sub
cmp
sahf
flds
pop
add
es
inc
mov
inc
int3
sub
daa
fsubl
jns
xchg
stc
push
scas
xchg
pop
loopne
cmpsb
movsl
movsl
mov
fwait
mov
cmp
pop
shl
adc
pop
cmpsl
shll
test
in
enter
push
in
test
fptan
lcall
pop
gs
jno
add
mov
inc
pop
adc
mov
cmpsb
mov
jmp
scas
xchg
pusha
lret
cld
dec
xor
and
das
outsl
sub
or
stos
xor
pusha
icebp
dec
inc
jno
rcrl
jno
xlat
xlat
icebp
repz
push
cmp
mov
inc
mov
cmp
lds
and
movsl
shrl
bound
mov
repnz
sbb
mov
mov
daa
xor
add
cmp
xrelease
pop
fwait
pop
mov
divl
leave
aaa
daa
mov
cmpl
or
push
push
or
sbb
icebp
push
jmp
test
call
jmp
or
cmpl
or
movsl
push
popa
push
xor
inc
pop
push
cltd
out
fbstp
aaa
pusha
cwtl
cmc
out
pop
lds
jl
jge
or
mov
in
pop
push
jecxz
fsubrl
jb
adc
xor
sbb
cmp
sbb
leave
loopne
dec
cld
and
push
mov
test
adc
pop
xlat
out
push
dec
out
mov
fmul
scas
lahf
xchg
mov
decl
fstpl
add
lock
dec
jne
sub
xchg
sub
cmp
gs
daa
sbb
adc
out
mov
xor
in
sbb
push
ret
sub
cltd
fwait
repz
jmp
cld
xchg
or
pop
xchg
test
mov
ret
jno
mov
xchg
ret
adc
into
sub
fisubs
das
pop
adc
frstor
lods
aaa
xchg
pop
cwtl
cltd
or
aad
cltd
scas
cli
jo
loop
cmpsb
sahf
add
fsubr
les
test
mov
cwtl
mov
es
jl
pop
loopne
xchg
sub
push
lds
into
or
jae
mov
js
repz
add
mov
cmp
cmp
nop
dec
jne
in
imul
aas
lret
ss
inc
add
repnz
inc
rorl
dec
sahf
jbe
or
push
mov
sub
jmp
pop
add
lds
and
ds
add
sbb
pop
int3
push
lea
test
cmp
cmpsb
lds
mov
jbe
inc
popa
out
dec
sub
iret
sub
dec
mov
dec
std
ljmp
mov
inc
jb
or
je
sub
ss
inc
xchg
lahf
cmp
xor
inc
push
fisttpl
cmp
lret
call
mov
xor
mov
ds
add
push
lock
shlb
clc
xchg
and
lds
pop
mov
push
hlt
and
mov
or
sbb
mov
shlb
xor
and
sahf
inc
xchg
arpl
int
lcall
cmpsb
or
mov
inc
pop
or
ds
inc
gs
pusha
loop
xor
cs
fistps
add
cmp
inc
imul
pop
popa
bound
into
lock
and
repz
adc
aad
bndldx
lahf
rcrl
sbb
mov
jp
ficoml
adc
cli
or
test
mov
imul
addr16
jg
inc
insb
adc
inc
jbe
outsb
or
adc
ds
or
pop
jne
add
imul
jb
cs
jne
xor
mov
and
out
lds
jae
cld
mov
push
mov
xchg
pop
popf
sti
popf
in
or
jge
fmuls
mov
pop
pop
adc
xor
push
mov
cmp
pop
nop
in
xchg
mov
or
addr16
push
test
leave
js
mov
std
lea
les
pusha
mov
int3
or
sub
fwait
lods
jcxz
adc
jp
scas
popa
xor
bswap
jge
pop
push
cld
xor
jne
cwtl
lods
mov
mov
sub
dec
cmpsb
jmp
in
pusha
pushf
bound
fsubr
adc
int
xchg
adc
or
jnp
imul
cmp
and
aad
ss
dec
sub
inc
loopne
inc
lret
xlat
push
mov
xor
dec
imul
out
pop
out
mov
andl
out
inc
orb
es
divl
sub
shr
fcompl
out
lret
push
pop
je
lods
into
xor
jo
test
inc
xchg
cwtl
adc
inc
push
pop
cmpsl
or
mov
cli
push
push
mov
jp
xor
cmp
es
mov
mov
fstps
insl
push
mov
mov
icebp
xor
inc
fmul
sbb
arpl
cmp
imul
or
mov
or
xor
ss
jmp
test
addl
popf
mov
xor
and
in
stos
or
inc
cli
sbb
dec
push
cmovs
jns
adc
aas
testl
sbb
and
pop
mov
and
imul
sub
lret
test
jl
sbb
into
xor
push
stos
enter
push
xor
in
das
out
cli
cmp
xor
jmp
arpl
bound
out
aad
test
and
ja
insb
add
inc
xchg
outsl
jle
mov
shrl
pop
adc
enter
in
outsb
cmpsl
or
cmpsl
push
dec
inc
sub
hlt
mov
sub
sub
es
dec
pop
cmp
scas
lock
mov
sbb
push
cli
jne
insb
push
xchg
and
xchg
mov
cli
mov
cmpl
inc
sub
popf
mov
sbb
repz
jae
ret
xor
in
and
lea
jno
scas
adc
or
mov
stos
psubw
inc
into
aas
and
fisubl
ss
aaa
test
pop
jg
sbb
jne
mov
lds
or
test
lahf
cmp
cmp
xchg
push
repnz
xor
bound
outsl
rcrl
in
bsr
push
mov
push
arpl
jge
mov
das
ret
sarl
fidivs
lea
cld
inc
lea
scas
pop
ljmp
sub
adc
cmp
inc
in
adc
movsb
or
aad
mov
xchg
xchg
data16
dec
inc
fmull
pop
into
and
sti
and
mov
push
or
leave
jns
push
scas
mov
frstor
sbbb
in
jmp
fs
ret
jl
jle
xor
mov
jno
dec
push
jge
out
fisubrl
cmp
jmp
jl
fsubrl
jnp
loope
or
push
pop
xor
pop
movsl
in
sbb
pandn
loope
ljmp
out
mov
or
or
add
mov
pusha
pop
fwait
mov
loop
lcall
push
insb
mov
cmp
icebp
push
or
mov
hlt
mov
addl
mov
je
mov
push
andb
rcrb
add
aad
insb
decb
jecxz
out
popa
les
ss
loop
je
rclb
testb
and
push
sub
xchg
dec
clc
fisubrs
push
in
sub
or
xchg
jg
call
xor
aam
out
sti
pushf
adc
mov
push
dec
or
jo
xor
test
xor
cmpsb
out
repz
mov
stos
push
mov
pop
fisubrs
stos
pop
xchg
clc
pop
mov
cwtl
lock
xchg
xchg
mov
addr16
std
or
sub
lds
mov
out
aam
lret
pop
sub
sub
sti
outsl
jbe
dec
icebp
dec
insb
popa
ljmp
cmp
jo
sub
ss
jg
in
sahf
pop
jns
dec
inc
mov
pusha
mov
je
pop
insl
sub
outsb
sub
andl
mov
js
push
fwait
in
and
std
shrl
inc
inc
jecxz
mov
movl
jbe
inc
xor
mov
fucomip
pusha
popf
mov
inc
sub
push
xlat
hlt
mov
sbb
and
sub
popa
cli
movsb
sub
mov
xchg
stc
adc
ret
mov
cmp
cmp
mov
jo
jle
loope
mov
xlat
sbb
mov
ss
xchg
adc
outsl
xchg
pop
lret
lods
fadds
jo
divl
dec
mov
sub
sbbl
mov
sub
inc
jl
leave
dec
mov
mov
fsubrl
arpl
pop
data16
stos
fstl
sbbl
sti
loope
jl
stc
es
fwait
mov
pop
ds
clc
push
xlat
enter
and
or
icebp
mov
movsb
and
or
mov
mov
lret
pop
rcr
sti
das
push
mov
movsb
aam
ret
call
and
test
mov
and
mov
iret
les
inc
mov
xor
xchg
jnp
jo
add
cmc
mov
movsb
fs
jle
test
sbb
fsubr
loope
nop
scas
pushf
into
inc
push
inc
inc
push
inc
cmpl
les
dec
daa
inc
daa
dec
sbb
outsb
pop
dec
mov
dec
dec
icebp
les
loop
popf
call
xchg
add
xorl
pusha
imul
outsl
and
xor
loop
and
movsl
shrb
push
mov
lods
bts
inc
popf
jbe
orl
ret
cli
js
xor
mov
jbe
lock
and
fld
imul
notb
movsl
les
pop
add
lret
popa
push
ja
mov
jle
int
clc
or
or
mov
jne
mov
adc
jae
inc
popf
dec
fsub
push
or
insb
adc
loope
out
pusha
lea
sbbb
and
push
enter
cltd
jmp
imul
int3
notb
inc
push
xchg
and
rclb
add
ret
scas
mov
cmp
push
cmp
jns
add
stos
into
shrb
add
iret
xor
arpl
push
pop
shll
aam
test
rcrl
inc
outsb
popf
dec
or
sbb
out
sbb
imul
adc
lret
loope
xor
and
ficompl
test
sqrtps
mov
ficompl
aam
sbb
popf
mov
pusha
jb
or
or
pop
shl
sahf
mov
nop
jmp
iret
scas
scas
into
repnz
shl
jns
ret
popa
fnsave
aam
mov
sub
in
and
testb
scas
enter
fisubl
mov
inc
jp
jmp
test
cmp
lea
push
icebp
mov
cld
cmp
shl
adc
cmc
jb
xchg
inc
inc
setb
enter
loope
dec
ret
stos
out
rcrl
xchg
inc
inc
mov
rcr
push
xor
pop
les
xchg
fmul
mov
insb
xchg
repnz
stos
jae
pop
or
cmpxchg
ret
sahf
push
inc
imul
or
mov
xor
add
xchg
mov
dec
mov
popa
add
sbb
mov
mov
jae
mov
add
jl
pop
xor
loope
dec
inc
dec
into
popa
mov
dec
dec
ss
xchg
jl
mov
orb
jg
in
shufps
push
dec
xchg
gs
in
jne
fwait
sub
ret
mov
xchg
loope
fs
int3
add
pop
sbb
mov
in
sub
int
push
test
xchg
pushf
and
sbb
and
push
and
pop
fcmovnb
stos
xchg
sub
xchg
inc
xor
fisttpl
cli
xor
test
cli
xchg
mov
mov
dec
incl
out
bnd
pop
fnstsw
sub
sbb
xchg
or
push
hlt
xchg
shrl
pop
push
aam
es
cmp
xchg
mov
and
dec
jecxz,pn
or
mov
and
lcall
xor
push
xchg
jae
adc
mov
add
mov
int
adc
mov
xchg
addr16
movsb
lods
pop
cmpsb
fcoml
in
leave
imul
jns
push
sub
cmpsb
lods
jecxz
lods
xchg
push
push
sbb
inc
stc
or
inc
adc
xor
fcomip
les
jnp
and
cmp
sbb
cli
xchg
cli
imul
aaa
lods
cld
insb
dec
pop
xor
stos
clc
add
pop
ret
inc
call
dec
scas
mov
faddp
loopne
push
add
mov
popl
jns
xchg
lea
ds
cmc
mov
push
or
ds
dec
xchg
lds
inc
leave
dec
subl
scas
sub
out
lods
or
xor
jb
add
pop
and
and
adc
scas
popf
leave
jmp
xor
or
add
push
push
repz
and
ja
dec
jp
xchg
mov
push
ficomps
mov
outsl
cmp
outsb
int3
loope
jg
lret
arpl
inc
js
int3
mov
inc
call
int3
pop
dec
adc
push
dec
ss
or
jge
pop
ret
hlt
vmovaps
gs
lock
arpl
jl
clc
dec
lahf
imul
call
push
mov
ret
xchg
push
mov
loope
andl
mov
lret
sub
inc
gs
call
or
cmp
cli
aas
pop
add
and
cmp
or
ficomps
push
push
xchg
icebp
and
inc
mov
add
pop
jo
loope
and
movsb
repz
lods
in
pushf
or
jg
scas
or
cmp
and
dec
push
xchg
movsl
data16
and
cwtl
movsb
inc
aaa
add
mov
daa
pop
add
sbb
inc
pop
inc
sbb
and
mov
xchg
or
push
fsub
lahf
sahf
les
andb
xchg
testb
jle
inc
push
loop
enter
shrb
cld
out
jmp
hlt
dec
lahf
xor
pop
or
stos
jmp
sbb
pushf
popa
into
add
fwait
je
rep
pushl
push
shll
xchg
and
mov
adc
mov
mov
out
mov
in
adc
nop
hlt
xchg
inc
incl
mov
cmpsl
xchg
push
movl
jmp
addl
bound
and
dec
adc
and
lret
sbb
ss
cmp
adc
mov
leave
dec
ret
call
dec
aam
mov
out
mov
dec
imul
xchg
sub
dec
push
out
out
out
mov
push
mov
mov
and
xchg
bound
xchg
mov
gs
dec
movl
mov
ljmp
xchg
pop
dec
jg
cltd
inc
les
mov
push
lea
fstpl
xor
mov
adc
mov
pop
bound
push
xadd
fdivs
xchg
cmp
insb
pop
cmc
rolb
mov
popf
ljmp
jne
mov
jno
pop
xchg
sbb
in
push
in
fimull
enter
pop
inc
pop
sbb
or
add
into
inc
add
push
adc
aaa
jle
or
lret
push
cmp
xor
fprem1
sub
bswap
and
xorl
daa
das
adc
fwait
loop
jl
jl
fisubrl
rol
dec
aad
add
fidivrl
inc
adc
mov
sbb
repz
aad
push
mov
sub
in
lcall
in
movsl
sub
into
dec
stc
mov
inc
mov
cs
dec
int
popa
mov
dec
mov
icebp
test
dec
mov
aad
ficompl
sub
push
lret
mov
sub
nop
call
or
std
cmc
pop
and
pushl
rorl
addr16
xchg
insl
rcl
arpl
movsb
outsl
in
sub
jo
aaa
popf
xchg
sysenter
push
and
jne
test
rorl
cmp
inc
pop
jo
adc
mov
cmp
lock
enter
lea
xlat
lea
scas
add
add
push
cmc
pop
movsl
sahf
add
mov
mov
xchg
cmpsb
aad
push
test
rcl
sahf
pop
outsl
and
and
mov
mov
insl
mov
in
xchg
fwait
or
into
or
divl
cmc
cmp
ds
popf
vmwrite
out
inc
and
ds
dec
ret
rorb
mov
insl
or
std
pop
movsb
loopne
sahf
das
movb
add
xchg
aas
stos
loopne
jmp
dec
xchg
or
fidivrs
popf
dec
mov
sbb
inc
in
xor
fcmovnbe
fdivrs
pop
loope
mov
mov
test
or
mov
popf
pushl
out
xor
out
xchg
mov
dec
imul
add
imulb
out
push
inc
mov
pop
lea
scas
js
add
addb
mov
push
and
jne
sbb
ret
pop
dec
jno
loope
mov
push
ret
data16
push
or
mov
mov
bound
inc
adc
or
lret
xchg
lods
in
and
sbb
xchg
xor
in
sar
rcr
xchg
inc
lcall
les
cmpsl
cli
mov
dec
dec
push
pop
push
cltd
ficomps
mov
mov
push
mov
jns
stos
cmc
or
subb
adc
int
xor
mov
es
mov
insb
adcb
icebp
jbe
and
fnstcw
inc
test
push
ret
push
cltd
lods
jbe,pn
dec
jb
inc
mov
push
mov
mov
enter
imul
push
inc
sti
fists
adc
dec
notb
or
sbb
bound
popa
movsl
xchg
push
inc
pop
adcb
mov
xchg
jo
aam
and
lock
lcall
int3
mov
roll
jle
sub
add
fwait
push
xor
sbb
dec
in
test
mov
shl
dec
inc
jnp
cmp
add
mov
and
mov
add
mov
jno
mov
call
int3
in
push
out
cld
lea
std
repz
cmpsb
cmc
mov
or
sbb
inc
pop
cs
pop
mov
lds
inc
call
popa
jle
sar
mov
xchg
mov
mov
in
cmp
cmpb
mov
jg
or
jno
and
dec
jne
in
mov
jne
jne
test
scas
int3
outsl
neg
adc
cmp
inc
and
rcll
mov
imul
mulps
test
dec
mov
dec
aas
mov
fisttpll
in
scas
dec
jb
roll
mov
icebp
dec
scas
mov
fs
adc
les
loope
mov
xchg
sub
je
cld
jg
pop
andb
mov
cltd
out
xor
iret
pop
dec
mov
mov
sub
jns
lds
push
insl
pop
out
lods
cmc
aad
test
mov
es
fs
lret
fdivs
sbb
popf
rorb
imul
aad
xlat
jnp
mov
mov
stos
cmp
adc
add
push
cltd
call
dec
sbb
pop
xorb
dec
repz
insl
jmp
shrl
jnp
cmp
push
push
cmp
sub
pop
mov
loop
xchg
lahf
test
fiaddl
pop
movsl
mov
das
cltd
xchg
stc
movb
in
cld
enter
inc
push
sub
push
push
imul
fistpll
nop
sbb
shlb
cmp
movsb
loopne,pn
or
arpl
push
push
xchg
push
jp
popf
loop
repz
cmpsb
pop
lock
pop
sti
ret
jno
test
mov
into
jbe
movsb
mov
jnp
add
xchg
mov
movb
push
in
jg
aaa
jl
jb
and
inc
mov
into
sub
pinsrw
test
and
xor
or
pop
adc
adc
pop
add
rcrl
sbb
jne
push
addr16
and
pop
pop
push
dec
inc
mov
xchg
bound
jno
cltd
ds
push
fcompl
and
shlb
es
ret
subl
mov
mov
sahf
jle
movsb
ret
push
mov
in
rcll
movsl
mov
pop
lret
fisubrl
sbb
sbb
inc
cld
dec
testl
dec
push
inc
aaa
xchg
dec
jbe
fs
jae
jno
pop
jb
adc
stos
mov
adcl
and
ret
daa
jmp
inc
mov
decl
stos
xor
xchg
xor
push
or
mov
mov
test
xchg
dec
add
mov
in
mov
lret
mov
daa
ss
lods
int
mov
out
push
scas
movsl
popf
inc
push
shll
les
mov
and
xor
jecxz
pop
push
lret
mov
arpl
mov
mov
movsb
sbb
sub
jns
testl
and
mov
mov
imul
fimuls
stos
dec
out
xchg
mov
push
inc
and
and
lea
ficomps
push
push
jle
fldz
jns
leave
stos
mov
test
fcmovnbe
jle
inc
xchg
scas
lods
popf
adc
inc
orl
ds
insb
negb
inc
icebp
mov
mov
test
push
jno
mov
cmc
mov
push
shlb
jecxz
pop
pop
mov
lock
js
out
ror
popa
inc
sahf
mov
sbb
std
pop
add
outsb
pop
das
mov
push
decl
xor
jmp
int
ds
fcomip
cmp
jno
xor
insl
pop
scas
cmpsb
lods
mov
cmp
lcall
std
arpl
pop
js
repz
mov
or
test
shrl
mov
jl
or
adc
push
xor
inc
shl
jle
sub
push
adc
in
jnp
call
mov
sbb
outsb
xor
aaa
adc
cmp
in
push
out
push
jbe
mov
xor
mov
mov
test
jl
aam
or
pusha
ja
push
cmp
dec
or
xchg
xchg
cmc
dec
adc
adc
ss
xchg
ljmp
addb
shl
xor
ja
shlb
das
xlat
adc
data16
test
scas
popa
scas
cmc
dec
jp
jle
das
sub
pop
je
jae
pop
xor
adc
pop
xor
and
shrl
xchg
or
int
cmp
sub
lcall
popf
std
pop
xor
pop
mov
js
jp
adc
mov
push
fwait
pop
add
sub
pop
sub
pop
push
stc
bound
mov
cmp
sbb
fidivs
pushf
int
push
mov
aas
cli
dec
add
js
nop
icebp
mov
es
xlat
jb
out
pop
or
bound
sub
fistpll
push
fcmove
fnsave
js
push
leave
stos
and
mov
xchg
aad
fistpl
xor
jp
movsb
xlat
outsb
shl
sbb
jle
pop
mov
lret
jmp
test
mov
xchg
int3
and
jecxz
out
push
test
dec
mov
cmp
gs
shrb
inc
pop
popf
inc
fs
addr16
shlb
dec
fwait
out
fs
jne
iret
ljmp
add
inc
push
push
adc
push
das
lods
rorb
fcmovbe
inc
sub
fdivl
inc
not
movb
int3
sarl
mov
lret
mov
inc
fwait
dec
enter
stos
mov
mov
fcoml
dec
pop
icebp
pop
inc
nop
incb
pop
mov
push
pop
pop
sahf
xor
cmpsb
hlt
imul
push
jg
das
or
movsb
sbb
xchg
ss
les
xchg
scas
adc
lds
inc
sbb
xchg
inc
inc
xchg
add
ss
leave
repnz
mov
jne
sbb
shlb
jle
push
inc
mulps
mov
sahf
enter
xchg
jnp
cwtl
pushf
data16
inc
inc
mov
xor
aaa
data16
inc
pop
stc
leave
pop
mov
add
xchg
adc
cmc
sub
int
add
xchg
xor
sti
dec
lret
push
xchg
mov
fsubs
gs
sbb
pop
aaa
lcall
cmpsl
push
xchg
test
jns
mov
lods
push
lcall
cmc
xor
mov
shlb
xchg
mov
pop
xchg
adc
fs
inc
mov
xchg
mov
push
and
packsswb
cmpps
in
xor
arpl
ljmp
in
ret
lods
adc
and
jp
mov
mov
mov
cmp
test
repz
or
outsl
mov
movsb
adc
bound
aam
dec
xchg
mov
mov
xchg
inc
aad
repnz
int
xor
out
add
sub
dec
pusha
push
sub
pop
repnz
mov
xchg
fcmovnb
loope
mov
mov
mov
sbb
sbb
stc
mov
outsb
xchg
pusha
xchg
and
mov
test
jae
test
push
xchg
mov
and
cmpsb
popa
gs
cmp
shl
fildll
fistps
pop
adc
push
fbld
add
mov
stos
or
ljmp
pop
inc
sub
xchg
dec
inc
push
movsl
mov
scas
jb
das
movsl
mov
add
adc
adc
fwait
cmp
rorb
dec
push
pop
and
aad
addr16
fcmovnbe
test
shll
or
aad
clc
and
push
test
pop
pop
stos
call
mov
xor
aam
xor
adcl
fisubrs
rol
lahf
dec
nop
test
or
addr16
adc
dec
icebp
push
cwtl
xor
pop
mov
or
mov
movsl
inc
add
out
cmpsl
rcrb
sbb
cmp
fs
mov
movsl
popl
movsl
xor
add
rcl
das
and
adc
add
add
jl
cmp
adc
cmc
out
inc
lea
xchg
pop
xlat
in
jae
sbb
popa
jns
fwait
mov
mov
in
dec
outsb
ds
sti
jg
std
adc
and
push
sub
xchg
mov
test
and
movsl
xor
cmp
in
or
xchg
sub
lret
loope
jge
shl
fsubrl
mov
add
ljmp
cmc
sbb
movaps
iret
dec
cli
and
fsubl
xchg
fwait
inc
add
push
mov
movsb
or
test
scas
mov
divps
mov
adc
stos
test
push
push
rorb
pop
sarl
inc
jne
lock
and
pop
xchg
data16
or
adc
and
and
int3
xchg
pop
mov
test
lret
movl
sarl
addl
mov
test
sbb
lsl
idivl
inc
idivl
cmpsl
sti
aaa
aam
addb
mov
push
cld
jno
inc
inc
ss
dec
xor
add
push
xor
subl
es
inc
mov
int3
mov
push
mov
add
ret
dec
push
cmp
mov
mov
sbb
push
dec
push
fsubrs
cmpsb
int3
out
inc
test
push
xor
in
xchg
adc
cld
ret
or
pop
shlb
inc
cmp
lret
and
mov
sub
cmpb
fidivrs
icebp
mov
and
mov
mov
jno
mov
std
in
mov
and
dec
imul
adcl
pop
xor
test
lcall
adc
adc
pop
jnp
je
out
aas
push
xlat
sarb
divl
push
push
sbb
in
test
popf
jb
sti
notb
xchg
dec
pop
mov
sbb
das
popf
dec
ljmp
ret
test
cmp
push
jg
out
mov
pop
jns
inc
mov
jg
data16
sbb
rolb
out
push
sub
xchg
xchg
xor
fcomps
cmpsb
daa
cmp
in
xor
xchg
rcl
sub
cmpsl
mov
lea
ret
or
lea
lcall
mov
clc
data16
inc
cmp
sub
pop
fldt
dec
inc
pusha
loopne
notl
arpl
addr16
or
lidtl
adc
lcall
push
cmpsl
movsb
imul
pop
mov
jae
push
inc
pop
xor
xchg
sbb
rclb
pop
cmc
lock
ds
jno
inc
lea
addr16
in
test
mov
in
popf
call
arpl
movsb
imul
dec
pop
pop
mov
iret
into
lds
push
cmp
mov
xchg
inc
ss
loope
jae
or
inc
in
ds
movsl
lcall
push
movsb
lods
outsb
std
aam
mov
lea
xor
push
stc
mov
je
cld
mov
or
sub
repnz
in
and
cmc
ja
push
fmul
jecxz
xor
xchg
sub
jns
je
push
dec
push
pop
xchg
cmp
out
jle
xchg
mov
dec
out
jb
cli
pop
fs
cmpsl
sub
and
push
push
loope
ljmp
sub
xchg
test
dec
inc
in
div
xor
inc
popf
loope
mov
push
popa
jl
xlat
xor
subl
add
adc
fwait
nop
sbb
jmp
movsb
mov
roll
les
adc
and
inc
xchg
or
pushf
jg
sbb
add
xchg
mov
jbe
shrb
andl
je
orb
fbstp
cmp
sbb
ljmpw
js
push
push
jge
fisttpl
sti
dec
jnp
ds
xchg
sub
fcompl
mov
mov
jne
xor
jmp
or
mov
xchg
mov
inc
cmp
xchg
xor
xlat
jnp
inc
pop
sbb
or
jp
mov
fisubs
daa
cwtl
mov
xor
ret
mov
mov
out
add
cmpsl
and
mov
pusha
jo
clc
mov
imul
outsl
xor
lcall
dec
daa
dec
sahf
cld
xlat
xchg
push
lods
sbb
stos
aad
pusha
cmp
mov
aad
cmp
xchg
hlt
mov
cmpsb
clc
lods
lea
int3
call
jle
popf
xchg
jecxz
push
in
enter
mov
call
jl
mov
pop
push
leave
cmpsb
cli
sbb
ja
subl
ja
call
lea
fadds
pop
pop
int
jge
mov
popf
das
cmp
jo
icebp
xchg
mov
dec
imul
fs
mov
fs
out
jmp
outsl
sbb
pop
cmp
inc
pop
jnp
mov
mov
cmp
push
adcb
jmp
mov
clc
jno
mov
test
jmp
je
pusha
adc
xchg
je
rcrb
stos
stos
sub
lcall
push
pushf
bound
or
mov
lret
pop
pop
cmp
in
add
cmc
ds
xchg
or
jbe
cmp
sbb
pop
cmp
mov
je
or
popf
enter
sbb
dec
jno
sub
cmp
lods
jle
jge
out
pop
sub
cmpsb
pop
pop
pop
sub
and
sbb
nop
ds
cmp
mov
fwait
out
les
insb
sub
and
int3
arpl
adc
das
pop
and
aaa
lds
or
sub
cmpsl
pop
bound
out
popf
data16
into
push
push
sti
ss
icebp
push
ljmp
mov
leave
aam
or
mov
mov
sarl
xor
dec
xchg
popa
xor
or
ret
jle
cltd
add
fldcw
stc
shrl
cwtl
xchg
xor
bound
and
or
out
inc
jp
gs
stc
aam
xlat
and
in
xor
data16
cmp
repz
and
dec
sbb
gs
je
popa
sti
jp
push
out
sub
or
and
shl
ret
ret
rolb
shrl
outsb
cwtl
mov
neg
loope
inc
in
test
pop
insb
inc
push
icebp
dec
cmpsl
lock
xchg
ret
dec
insl
or
in
mov
jmp
pop
cmp
jp
xor
je
sbb
scas
dec
iret
pusha
fisubrs
jbe
rorb
or
es
or
xor
inc
pop
adc
pop
cmpb
jbe
mov
sub
push
mov
sub
pop
xchg
fcompp
sbb
test
or
out
mov
xchg
cmpsb
daa
in
push
popa
push
cmpl
pop
add
movq
jns
aaa
jns
stos
xchg
add
pop
lret
fdivl
adc
outsl
mov
adc
or
adc
fimuls
lock
bound
lret
ss
clc
or
ja
iret
adc
mov
aaa
xor
cmp
or
xchg
jne
inc
hlt
mov
and
inc
and
mov
jp
test
test
fisubrs
push
add
mov
iret
fiaddl
push
outsl
out
lods
pop
jnp
or
orb
push
lcall
push
aam
jg
clc
out
cmpsl
outsl
jmp
daa
in
sbb
loop
sti
hlt
mov
xchg
mull
adc
pop
inc
add
test
std
stc
ss
lods
ljmp
repz
stc
mov
in
int
test
sub
in
mov
aas
and
subl
ss
cs
js
push
mov
jg
push
mov
cwtl
xchg
das
push
out
mov
std
repz
or
enter
sub
imull
outsb
cmpsb
dec
repz
or
inc
hlt
pop
adcl
gs
je
insb
int3
jg
dec
in
inc
int3
xor
xchg
mov
bound
push
lcall
push
xchg
inc
jp
imul
lods
add
sub
jecxz
aaa
mov
insb
push
cmpsl
adc
jo
imul
imul
jmp
insl
cwtl
inc
aad
cltd
jg
sbb
loop
mov
mov
push
fwait
hlt
movsl
add
push
jno
inc
sahf
lret
xchg
mov
shl
outsb
xor
jmp
sbb
adc
imul
push
xor
test
add
pop
mov
mov
sti
jns
insb
xor
leave
leave
jne
push
sub
aam
jae
sub
jge
pop
jle
dec
push
pop
jle
xor
sbb
sub
popf
aaa
cwtl
call
hlt
dec
outsb
push
jnp
lea
insl
push
lcall
scas
cmpsl
ja
sub
lcall
incl
push
or
test
sbbl
test
mov
dec
cmc
sub
nop
pop
fiaddl
push
inc
dec
dec
or
pop
dec
mov
out
sub
rcl
ds
jge
mov
dec
std
fxch
adc
js
fisubrs
mov
sbb
pop
xchg
aas
inc
jns
xchg
pop
adc
push
inc
inc
lods
xor
inc
mov
jbe
inc
dec
scas
jb
dec
leave
cmp
lret
dec
rcll
mov
mov
loopne
cmp
out
fldt
push
ds
loope
dec
les
push
lods
xchg
mov
lahf
xchg
cmp
sub
test
dec
out
cmp
xchg
push
xchg
push
mov
push
xor
inc
jbe
sub
mov
popf
or
pop
mov
outsb
sti
mov
jnp
add
mov
cmpsl
fdivl
add
insl
dec
sbb
fidivrs
arpl
inc
dec
outsl
mov
imul
loop
add
insb
cmpsb
mov
and
jl
inc
arpl
push
inc
xchg
outsl
idivb
enter
data16
addr16
pop
and
pop
xchg
ror
scas
stos
clc
and
dec
xchg
adc
shr
push
aam
aaa
mul
ljmp
daa
lods
jp
mov
pop
out
ja
je
ja
jns
or
outsb
scas
adc
in
sub
jge
cmp
arpl
add
adc
pop
dec
imul
dec
inc
push
test
repz
and
or
or
adc
repnz
rclb
jo
mov
xor
inc
enter
pop
adc
push
in
push
mov
push
and
xchg
fadd
sbbl
jp
scas
loopne
je
sub
dec
mov
dec
jae
std
add
dec
popf
inc
fcomp
daa
adc
or
insl
sbb
push
pop
xor
xlat
jle
icebp
lods
ret
ds
add
mov
cmp
or
mov
xchg
jg
call
outsb
xor
loopne
sub
add
push
xor
pop
sahf
jbe
shlb
xor
inc
fimuls
ja
push
cmp
inc
jo
push
push
and
sub
fnstcw
ret
ret
scas
mov
mov
inc
shl
inc
aad
push
add
arpl
sbb
adc
pop
fs
push
pop
imul
push
sti
and
push
cmpsb
cmp
xor
pushf
subb
or
cmpsb
leave
dec
jp
or
iret
and
mov
push
cli
pop
push
xchg
jae
push
icebp
inc
lret
add
out
out
dec
mov
jl
xlat
jge
xchg
or
jo
insl
ds
mov
xlat
ja
jmp
push
sbb
xor
cmpsl
shrl
or
loope
push
pop
clc
outsl
ss
mov
mov
in
dec
jl
scas
sub
mov
js
inc
lods
in
xlat
lret
rcll
cwtl
test
mov
dec
dec
pop
je
cmp
out
and
or
lret
and
inc
sbb
jno
js
mov
mov
jo
adc
dec
sbb
std
push
or
fwait
pop
sub
cmpsb
push
sbbb
sahf
sub
movsb
cld
pushf
mov
and
or
dec
xchg
fistps
fistps
data16
mov
scas
sub
scas
mov
aaa
mov
and
xlat
nop
cs
ret
lods
icebp
lret
sbbl
xlat
fcomp
sti
or
mov
add
adc
jge
testb
js
lods
xor
or
daa
pop
ficoms
cmpl
aaa
clc
push
jb
push
pop
jae
js
jnp
adc
mov
loopne
je
sub
cmp
pop
push
test
pop
mov
shlb
repz
adc
in
sahf
add
or
lds
out
dec
dec
loop
pop
pusha
pushf
or
sub
mov
js
dec
movsb
pop
push
mov
xchg
notb
push
and
mov
shll
test
and
mov
ljmp
movswl
stos
test
das
popa
mov
jns
add
adc
gs
sbb
dec
mov
out
mov
dec
push
or
sti
dec
aas
imul
jl
int
mov
arpl
fbstp
pop
in
add
sbb
notl
dec
jl
outsl
sub
js
pop
dec
push
repz
inc
push
inc
xchg
in
add
in
sbb
shlb
repz
in
aam
cs
sbb
and
cmpsl
iret
sub
cltd
and
and
fmull
add
incl
cs
xor
dec
sbb
inc
ret
fcmovnb
push
and
rol
in
stc
push
jecxz
xchg
jg
mov
in
sbb
cmp
mov
dec
xchg
mov
gs
inc
jecxz
das
xor
test
out
in
hlt
inc
pop
mov
pop
push
sbb
inc
push
sub
jl
rcrb
jl
shrb
cmp
add
xchg
cmpl
idiv
gs
ds
lods
push
cmc
rolb
jg
out
stc
or
jmp
sub
mov
mov
cmpsb
mov
mov
mov
mov
popf
stos
mov
add
imul
icebp
in
xchg
fs
lret
movsl
push
arpl
orl
js
mov
inc
test
dec
cmp
insb
mov
shll
inc
push
adc
jae
and
mov
and
out
std
or
jge
jae
mov
cwtl
leave
mov
jecxz
sti
outsb
hlt
push
aam
rorl
and
add
and
hlt
gs
pop
push
mov
rcrb
mov
pop
rcl
iret
xor
mov
lcall
pop
or
xchg
out
js
or
cmp
jge
mov
push
pop
popf
out
mov
int
xchg
sbb
aad
inc
ret
scas
mov
or
xchg
mov
enter
gs
bound
setae
pushf
pop
xor
sub
dec
xor
dec
lahf
jmp
test
or
sub
xchg
or
inc
lahf
xor
lahf
loop
fcomps
xchg
jno,pn
mov
mov
xchg
incl
scas
add
inc
sub
dec
sub
adcl
orb
pop
addl
negb
xor
jle
xor
jae
or
sbb
mov
les
adc
scas
pusha
dec
shl
cmpl
dec
push
xor
fsubs
xor
bound
inc
subl
sbb
cmp
movsb
movsb
jne
std
das
lret
add
and
xchg
jmp
xchg
insl
or
mov
mov
xorb
ja
mov
jnp
jne
cbtw
mov
rorb
insb
ret
inc
stc
movsb
adc
mov
cmp
xor
adc
or
mov
sub
mov
sub
sbb
cmpsb
add
lds
sbb
xchg
push
lods
add
dec
dec
adc
pop
pop
jnp
pop
daa
cwtl
dec
rorb
xchg
and
xchg
jo
das
add
adc
cmp
mov
shl
testl
not
or
fsubp
les
movsb
and
mov
and
and
jno
cltd
xor
loopne
faddl
cwtl
xor
pop
addps
mov
and
xor
popf
addb
mov
iret
xor
adc
fcompl
push
pop
mov
shr
or
mov
inc
xlat
sbb
push
insl
and
mov
out
jno
jge
stos
aaa
negb
or
and
loop
stos
insl
push
andl
ret
enter
das
mov
cmpsl
popa
fimull
fwait
cmpb
pushf
fisttpll
pop
loop
aad
fs
lds
pushf
aad
aam
mov
in
jae
cltd
loop
and
mov
in
cmp
lock
inc
xor
ret
sbb
test
sub
xor
mov
fisubrl
push
xchg
dec
inc
filds
inc
movb
dec
jb
loopne
test
inc
outsb
xor
inc
push
jmp
sub
sub
pop
jb
iret
mov
mov
ja
bound
subb
repz
jnp
push
jg
push
sbb
add
pop
mov
jmp
and
fcoms
mov
or
inc
test
mov
scas
leave
push
insl
test
cmc
xlat
xchg
sub
fiadds
add
pop
xor
pop
lcall
mov
shlb
cltd
inc
push
push
mov
loop
xchg
filds
testl
ret
and
sub
push
into
out
das
jmp
insl
mov
sbb
mov
shl
rol
fisttpll
mov
pmulhuw
arpl
rclb
cli
mov
and
pop
in
xor
sahf
das
jl
and
out
adc
jns
imul
les
mov
cmp
jno
adcl
lret
dec
sbb
jbe
inc
sub
fidivrs
std
mov
rorl
aas
or
adc
repnz
mov
add
push
je
push
insl
or
imul
add
aad
dec
push
test
popa
fistpll
mov
mov
pushf
sar
mov
orb
movsl
adc
mov
arpl
mov
add
dec
cmovb
lahf
jmp
fs
jno
mov
rorl
add
mov
pop
arpl
adc
cmp
xor
jmp
mov
mov
sbb
into
xchg
push
dec
push
stos
gs
push
lret
dec
and
push
imul
nop
jge
fisubrs
jne
jb
aas
sub
in
lods
jb
push
pop
push
aad
cmpsb
and
jmp
push
add
pushf
xlat
mov
test
push
xor
cmpsb
dec
pusha
in
add
mov
out
enter
rclb
mov
add
icebp
call
mov
orl
adcl
xor
aaa
sar
ss
xchg
jnp
dec
data16
cmpsl
stos
dec
decl
sti
pop
shll
loopne
sub
imul
aam
dec
lock
dec
jg
shlb
rcll
inc
xchg
mov
pop
scas
push
test
mov
jno
scas
inc
pop
fistl
jbe
prefetch
or
push
lds
jmp
cmp
dec
daa
sub
sbb
addr16
fwait
inc
jo
xchg
dec
fcomip
ljmp
cs
and
xchg
add
jns
sbb
ja
inc
xchg
mov
pop
pop
addb
jg
mov
inc
xchg
dec
iret
repnz
xchg
sarl
adc
jb
mov
pop
dec
mov
stc
cmc
inc
inc
xchg
sti
or
shufps
add
add
dec
shll
shlb
ds
loop
cmp
mov
inc
js
pop
int3
int
inc
andl
jb
out
xor
shlb
xor
mov
dec
jmp
mov
mov
shlb
movlps
inc
mov
cmp
fwait
push
mov
int3
sbb
adc
jnp
lea
idivb
fldl
and
mov
out
dec
push
scas
loopne
loope
stos
cltd
and
dec
cwtl
scas
cmp
sbb
mov
push
jne
les
xchg
sub
mov
lcall
inc
dec
mov
jmp
add
dec
repnz
pop
mov
das
push
push
movsl
cwtl
push
les
decl
sub
add
cmpsb
gs
fdivl
push
scas
push
mov
xor
jo
js
imul
stc
xor
cld
jg
adc
out
clc
mov
cmp
inc
stos
movsl
enter
xor
popa
cmpsl
movsb
popf
sti
fcom
sarl
add
mov
xchg
pop
pop
push
push
aaa
cmc
xchg
enter
int3
push
push
scas
inc
and
sbb
mov
sarl
dec
or
sbb
addl
stos
adc
xchg
pop
mov
or
ja
adc
dec
mov
ficoms
ret
cld
cmp
xchg
out
mov
add
add
adc
adc
xchg
out
inc
testl
add
fisubrs
int3
mov
mov
mov
test
pop
fists
add
out
pop
imul
cs
ror
sbb
sbb
scas
sub
loope
andb
out
inc
xchg
cli
cmp
jecxz
fcomip
lret
add
popa
dec
inc
lock
pop
sub
es
jp
jg
lods
outsl
lcall
mov
pop
insb
loopne
cmpsb
sti
cwtl
enter
cs
mov
or
in
jbe
xchg
adc
call
das
test
cli
repnz
fwait
and
sbb
arpl
stc
pop
inc
into
into
mov
sub
imul
push
popa
gs
xchg
jne
or
jo
out
xchg
jmp
xlat
mov
pop
mov
mov
nop
cmp
js
pop
cmpl
xor
int3
incl
push
pop
jbe
push
and
xor
lds
mov
shll
ret
pop
out
and
pushf
and
xor
inc
call
pushf
jnp
lock
xor
xchg
xchg
pop
in
mov
inc
adc
xchg
cmp
pop
inc
adc
mov
loope
shll
xlat
enter
sub
insb
aam
popa
inc
lcall
insl
outsb
dec
leave
sub
movsb
add
call
hlt
xchg
mov
aam
jb
lods
addl
loop
mov
or
dec
mov
adc
imul
cmp
inc
sahf
push
xchg
push
pop
cmp
mov
lock
push
fdivrs
inc
in
push
stos
jp
xor
ss
out
lret
mov
repz
jmp
imul
out
mov
adc
mov
std
cmp
enter
outsl
xchg
testl
sti
lock
sub
shll
adc
out
xor
hlt
in
push
repnz
mov
jg
ror
cmpsb
cmpl
adc
cmp
aaa
fdivrs
push
xchg
adc
sbb
cmp
xchg
test
loop
inc
ljmp
in
gs
popa
out
dec
or
cmp
stos
dec
jg
push
mov
ss
js
add
push
ss
sub
notb
lds
cmp
fstpt
jns
cmpl
arpl
sbb
cmp
fs
push
cmc
inc
sbb
or
jns
imul
aas
clc
aad
fst
loop
xor
enter
shll
scas
and
aam
test
xor
xor
test
sub
inc
scas
fs
cmp
pop
push
push
in
out
fs
mov
pop
lock
test
push
cmpsb
inc
or
push
outsl
cmp
arpl
cs
lods
and
inc
xor
xchg
pop
push
call
mov
in
test
jne
repz
notl
or
push
fcompl
insl
adc
add
pop
in
cs
jnp
cmp
dec
push
xor
sbb
mov
mov
shll
mov
cmpsb
into
sahf
xchg
mov
mov
pop
aas
inc
mov
outsl
inc
je
lds
and
aam
jae
aam
addl
out
lds
mov
out
in
andl
scas
pop
xlat
jnp
mov
jne
shll
pop
inc
lea
stc
out
sub
sub
sbb
imul
adc
popa
rcrb
dec
addr16
rcr
aas
mov
scas
ja
outsb
in
inc
icebp
xchg
shl
mov
inc
shlb
test
push
push
into
cmp
pop
pop
pushf
inc
push
xor
push
decb
and
stos
push
sti
loop
lods
add
fidivrs
sbb
negb
test
xchg
test
xchg
jge
movsl
inc
out
push
nop
clc
insb
mov
les
cltd
test
sbb
pop
aad
push
push
lods
ljmp
loope
lods
pop
lea
jno
jmp
add
or
xchg
cmpsb
push
or
jae
fmul
cmc
adc
adc
push
push
filds
or
sbb
mov
mov
aas
gs
mov
lea
xchg
mov
mov
inc
fdivs
push
fwait
test
inc
pop
outsl
das
cwtl
arpl
sbb
xchg
cmpsl
and
lea
dec
xor
js
shl
fistpll
enter
push
xchg
cltd
ret
test
mov
jge
add
call
pop
rol
sbb
lock
iret
jno
jp
cwtl
jp
sar
cmp
fsts
and
std
xchg
or
ljmp
fimuls
loopne
scas
sbbb
ss
push
ljmp
sub
fmul
fs
cwtl
loop
insb
out
jne
push
rorl
sub
dec
out
sbb
nop
insl
inc
mov
mov
insb
push
popl
jmp
in
and
xchg
inc
dec
leave
inc
fmulp
add
inc
or
shlb
push
pop
xor
xchg
pop
rcll
stos
nop
pop
pop
test
push
mov
clc
push
jae
arpl
jp
xchg
int3
andl
shll
sahf
ja
lahf
xlat
or
push
push
scas
les
push
add
inc
aaa
xchg
pop
mov
xor
cwtl
dec
imul
jle
js
mov
cli
outsl
mov
stos
push
scas
bound
cld
or
cli
out
pop
inc
inc
test
adc
into
daa
mov
push
pusha
sbb
inc
and
movsl
lock
xor
paddusb
mov
add
xchg
scas
pop
mov
jmp
mov
sub
lcall
xchg
add
pop
mov
insb
xor
out
cld
xor
jbe
orl
cmc
inc
movsb
fmul
and
in
dec
icebp
pop
adc
call
shr
or
out
sub
inc
jb
push
xchg
cmp
pusha
iret
add
andl
push
fcompl
int3
jp
in
cmp
ret
dec
mov
sbb
scas
inc
add
ret
pminsw
jmp
mov
ljmp
orb
xor
and
enter
bound
xlat
hlt
jecxz
add
ja
lds
add
aaa
inc
stc
test
xor
loopne
lea
out
sbb
cmpsl
in
dec
fdivl
dec
sub
or
jle
clc
cmp
xchg
pop
or
sub
es
hlt
insb
repnz
cmpsl
aas
lcall
repnz
lods
sub
out
shrb
or
inc
adc
andb
adc
pop
cmp
jne
clc
fstl
jb
cmp
xchg
repnz
and
inc
and
jp
xchg
xchg
mov
pop
inc
out
popf
stc
push
xchg
fisubl
adc
push
cmp
bound
sbbl
jno
jle
repz
outsb
addl
stc
stos
xchg
hlt
and
jl
lds
iret
shll
inc
xor
sbb
lahf
add
bound
xchg
push
add
cmp
pop
jp
adc
mov
xor
xor
mov
loop
lods
add
std
test
mov
idivl
call
loop
cmp
mov
add
adc
jmp
or
js
mov
lods
js
inc
iret
aad
fnsave
add
fmuls
push
out
mov
in
bnd
mov
cmp
pop
jns
pop
sbb
push
sti
sbb
lods
cld
mov
push
imul
jb
loop
pop
sahf
or
ret
cmpl
dec
addr16
pusha
jmp
imul
cltd
xorb
ss
out
loope
popa
int3
lcall
jl
jb
mov
lock
or
popf
imul
stc
pop
mov
dec
mov
pop
jnp
push
mov
sarl
or
aam
rcrb
mov
cmp
es
mov
mov
call
les
out
mov
iret
scas
insl
inc
loopne
popw
ja
into
mov
lds
adcb
test
inc
cwtl
loop
popf
push
mov
les
add
jae
lret
and
and
pop
dec
js
lods
in
aaa
out
xchg
pop
mov
ret
fistl
stos
lcall
xor
push
adc
popa
cwtl
xchg
cltd
xor
ds
loopne
ljmp
xor
je
mov
adc
pop
jne
jne
lcall
add
xor
cmc
out
mov
fisttpl
call
repnz
mov
pop
sub
sub
popa
jl
clc
imul
push
test
fidivrs
psubw
stos
dec
mov
and
outsl
xchg
sahf
cs
cltd
cmp
push
or
mov
shll
xor
cmp
or
push
jae
insb
or
sbb
sbb
bound
shl
ds
cli
in
mov
in
out
jnp
clc
add
xchg
and
pop
dec
out
sub
std
mov
jo
mov
jb
out
push
mov
mov
fadd
dec
push
pop
in
sub
dec
adc
adc
sbb
shr
outsb
mov
daa
sub
dec
xchg
lods
ret
loop
jno
popf
push
or
mov
or
outsl
orb
xchg
std
pop
jl
pop
adc
hlt
fstl
inc
aaa
xchg
icebp
sahf
fstpt
lea
pushf
sub
push
orb
pop
repnz
cmc
mov
add
das
jne
pushf
out
xchg
jle
lret
lcall
ja
fists
inc
das
sahf
in
stc
cld
ficomps
sbb
movsl
mov
outsl
inc
out
ret
je
fwait
cli
xor
xchg
push
xor
dec
jbe
js
les
xchg
dec
sub
outsb
mov
bound
dec
outsl
jecxz
adc
inc
sbb
fdivr
pop
mov
push
push
add
cmp
jnp
xchg
or
loope
out
xor
push
cwtl
imul
ja
jle
repnz
pop
clc
dec
int
add
cli
add
dec
aaa
inc
mov
mov
add
jg
mov
and
insb
adc
cld
xchg
mov
jb
int
mov
enter
loopne
mov
jnp
out
andl
movsl
test
dec
rcrl
loope
sub
mov
inc
jg
cmc
adc
addr16
jmp
inc
fcomp
push
dec
pop
shr
sbb
stos
movsb
push
shll
pop
jl
and
jno
jb
es
xchg
xchg
mov
jno
mov
mov
ds
push
xor
sub
dec
cmp
mov
inc
bound
mov
sub
stos
in
mov
pop
call
je
xchg
iret
mov
or
bound
xchg
jl
adc
mov
test
sub
cmc
pop
add
pushf
push
data16
xor
push
addr16
hlt
push
mull
aas
pop
mov
clc
popf
fmul
jecxz
pop
mov
mov
or
in
jno
mov
fs
xlat
adc
fimuls
scas
inc
adc
in
jbe
adc
shlb
test
push
rcrb
add
add
xchg
out
ret
outsb
movsb
xchg
inc
ss
call
mov
aaa
mov
sub
fiaddl
mov
icebp
pop
pop
inc
add
cmp
js
dec
repz
lods
or
cmp
icebp
jne
incb
outsl
sahf
les
xchg
add
pop
xor
push
bound
or
movsl
sub
jo
inc
mov
lahf
sub
xchg
bound
fisubrl
testl
ficomps
jp
mov
jmp
addr16
jecxz
test
stos
mov
pop
sbb
insb
imul
push
cwtl
inc
cld
sbb
pop
nop
das
or
into
movsb
sub
jecxz
push
loop
repnz
stos
mov
out
xor
sti
xor
out
jnp
and
sbb
xor
xchg
sbb
mov
pop
lods
pop
movsb
mov
cmp
mov
sbb
daa
lds
inc
adc
xchg
stos
or
popf
notl
push
jl
ret
jge
fisttpll
cmp
sbb
add
pop
mov
adc
adc
inc
ret
jmp
lcall
mov
sub
push
lea
mov
push
or
jg
lret
inc
mov
push
and
mov
xchg
ror
fstps
xchg
sbb
test
jge
add
ja
lock
les
xchg
pop
data16
or
mov
add
stos
push
sbb
dec
imulb
hlt
adc
idiv
xor
daa
lret
cmp
mov
mov
popf
insb
vpor
adc
iret
xchg
cmp
arpl
jp
push
arpl
stc
cmpsb
inc
xlat
dec
std
push
dec
jne
mov
inc
cltd
nop
rclb
stos
in
dec
popa
cmp
popa
inc
push
outsl
xchg
adc
adc
sbb
mov
scas
mov
mov
scas
mov
ret
pop
xor
sahf
mov
loope
rolb
mov
cmp
je
jp
js
mov
int3
and
xchg
mov
shrl
xchg
push
movsb
cmp
enter
inc
dec
or
sub
sbb
inc
or
add
cmp
adc
int3
mov
rorl
sbb
aaa
sbb
fcomip
cmp
imul
push
cmp
push
iret
stos
mov
jnp
ljmp
xchg
or
and
mov
mov
xor
fs
stos
loop
lea
ja
mov
clc
pop
xchg
push
sbbl
outsl
mov
adc
sbb
rclb
jbe
gs
scas
in
lret
dec
sbb
lea
inc
scas
cmpsl
lahf
add
jae
jno
cmp
movups
inc
sub
xchg
ffreep
jl
fiaddl
or
aam
push
push
shll
les
movsb
xchg
and
loop
or
mov
mov
cmc
pop
mov
ljmp
ja
int
xor
jge
jbe
repz
call
rolb
mov
enter
and
add
inc
icebp
in
popa
sahf
jle
addl
mov
jnp
lods
lret
fdivs
filds
push
sbb
pusha
vmread
lret
inc
jmp
mov
insl
cli
lock
lcall
in
outsb
xchg
mov
push
push
ljmp
xor
mov
jno
dec
adc
add
xlat
jo
mov
mov
pop
pop
xchg
negb
repz
mov
pmuludq
jg
inc
mov
push
pop
subb
mov
cltd
adc
pop
cld
cld
cmc
les
clc
inc
xchg
jmp
inc
addr16
lods
stos
fstl
cmp
pop
and
daa
adc
pop
addr16
and
sub
aad
jbe
mov
mov
cmp
iret
jnp
push
stos
cltd
or
sbb
push
in
xor
int3
int
add
pop
mov
mov
mov
sarl
mull
fmul
stos
ret
addr16
cs
aam
adc
arpl
mov
mov
dec
std
and
divl
cmp
loope
loope
jmp
sbb
out
in
mov
lods
aam
dec
sub
mov
push
iret
jno
cmpsl
test
dec
xor
jge
test
mov
cmp
andl
in
movsb
ror
cmpsl
jnp
insl
into
add
enter
cwtl
xchg
stos
fcoml
stos
mov
ljmp
cmc
mov
inc
stc
out
fsubrs
test
xchg
mov
xchg
cmp
and
xor
dec
fs
aad
mov
xor
loopne
add
push
fisubl
mov
aas
jge
in
xchg
fwait
add
cmp
mov
shl
cmp
cmpsb
mov
sub
mov
pop
xchg
jl
sbb
xor
or
ret
fidivl
jo
jb
aaa
inc
xor
test
jne
xor
and
out
push
pop
addb
movb
not
stc
jo
jb
lahf
push
arpl
lcall
iret
outsl
adc
xchg
add
scas
pusha
sahf
pop
push
jno
add
fstps
in
push
xchg
fbstp
or
cld
jge
jge
mov
call
outsl
ja
xor
pop
jne
ret
movsb
je
xor
push
add
call
loopne
inc
jecxz
sub
mov
jae
nop
out
mov
dec
jp
pop
pushf
pop
addr16
cs
in
std
lods
xchg
xor
jmp
mov
pusha
leave
and
out
addr16
xchg
jno
loope
push
adc
mov
ds
mov
loop
rcll
in
adc
sub
stos
dec
int
xchg
push
add
nop
lods
mov
dec
ja
int
repz
mov
sbb
call
push
mov
andb
xor
push
dec
negl
lods
sub
cmp
mov
insb
and
inc
xchg
aam
dec
sti
mov
scas
mov
dec
pop
add
int3
leave
out
fwait
push
add
cld
mov
sbb
pop
and
sbb
addr16
test
sbb
decl
jne
sub
mov
mov
or
stos
fsts
movsb
sub
sahf
das
adc
push
pop
sbb
mov
ror
adc
sub
mov
stos
faddl
cld
mov
add
and
hlt
pop
dec
int3
cmc
in
test
mov
les
add
mov
jbe
cs
dec
mov
data16
mov
loope
inc
cmpsb
sub
pop
add
lock
inc
pop
jmp
int3
push
sbb
jmp
pop
or
cmovae
mov
cmpsb
clc
xor
divb
test
andb
loope
ljmp
movsl
mov
testl
fiaddl
jo
fisttpl
sar
test
outsl
lahf
mov
dec
push
std
push
xor
add
int
push
fwait
push
scas
insb
lcall
nop
mov
movsb
push
mov
ljmp
pop
dec
jg
jnp
div
fs
in
lret
out
push
inc
les
sarb
imull
rcrl
xorb
push
pop
cmpsl
jle
mov
sub
mov
xor
cmpsl
stos
lds
adc
testl
cmp
add
inc
xchg
movsb
pop
pop
add
mov
adc
push
cmp
xor
adc
lea
jp
das
outsl
sbb
sub
in
xor
repnz
pop
mov
into
adc
test
xchg
fs
out
add
subl
int
sub
adcl
mov
mov
shrb
xchg
or
dec
cmp
out
nop
mov
jmp
mov
sbb
dec
sbb
dec
inc
mov
js
repnz
mov
mov
push
dec
xor
lret
pop
dec
lds
xor
fadds
xchg
push
xor
outsb
pop
icebp
ss
mov
aas
mov
jne
insl
out
push
xlat
push
imul
sub
insb
movsb
dec
xor
aaa
sub
jmp
mov
mov
cmp
leave
popf
aaa
sub
adc
fdivs
arpl
andb
test
out
lret
pushfw
push
popa
add
cmp
pop
mov
xchg
xor
or
pop
inc
push
push
or
lea
lret
mov
xor
pop
fists
call
jecxz
aas
inc
xor
rcl
sbb
pop
jecxz
push
mov
dec
sub
pop
imul
mov
and
mov
push
js
sbb
fld
sbbl
jae
in
sbb
mov
outsl
loop
push
cwtl
or
out
sbb
mov
xor
or
lret
cwtl
dec
pop
in
pop
sahf
daa
lcall
es
jge
fidivrl
sahf
aas
in
fistpl
mov
cwtl
add
pop
outsl
aad
or
add
sbbl
cmpb
adc
lret
js
fbld
sub
pop
pop
jo
xchg
and
in
aaa
push
xor
les
push
lods
xchg
mov
or
fcoml
mov
dec
inc
sub
rcrb
xor
sarb
inc
add
sbb
xchg
push
adc
jae
dec
or
nop
subb
pop
jle,pn
shll
dec
gs
hlt
xbegin
mov
sbb
and
imul
jno
test
fdivrl
add
push
bound
out
mov
dec
lods
scas
mov
les
pop
imul
cmpsl
and
ss
inc
loopne
mov
xchg
mov
and
out
pop
mov
xchg
mov
mov
or
cld
xor
push
aam
daa
jl
mov
sbb
test
in
jecxz
ss
jns
imul
fwait
pop
push
dec
push
sub
sub
ss
into
xlat
dec
sub
jnp
ja
push
adc
fistpl
cmc
movsb
jo
fs
push
std
mov
dec
imul
inc
or
arpl
ss
insl
sub
or
sahf
sub
popa
scas
mov
or
mov
jp
mov
mov
or
insl
add
push
xor
cmpsb
cmp
fs
loopne
or
push
mov
mull
lods
inc
pusha
mov
fisubrs
inc
dec
iret
jnp
js
movsl
xchg
push
loopne
outsb
aad
sub
cmp
pop
jns
je
lock
inc
sbb
pop
mov
arpl
cmp
aas
stc
or
dec
ret
cs
cmp
test
enter
dec
or
mov
push
xor
pop
cmp
in
sub
lret
mov
orb
pop
mov
sbb
pop
cs
jl
jb
jnp
mov
xchg
mov
pop
into
jnp
insb
push
add
sbb
scas
xor
inc
lea
test
and
test
push
repnz
repnz
lahf
sbb
adc
push
xchg
mov
jg
fs
daa
adc
inc
insb
inc
jno
arpl
nop
fists
push
xor
jle
loop
mov
mov
sub
and
in
dec
push
insl
inc
xor
mov
pop
mov
cld
xlat
outsl
pop
jne
scas
movsl
mov
sti
or
das
push
lods
sbb
aas
inc
aaa
xchg
popa
xchg
pop
xlat
sbb
movaps
cltd
mov
or
xor
cld
fwait
notl
cmp
jmp
push
mov
insb
cmp
fs
xchg
and
cmp
inc
test
sbb
sti
push
loopne
icebp
aam
mov
out
movsl
fdivs
fistps
xor
dec
sti
cmp
dec
repnz
leave
sbbl
lcall
add
pop
aaa
xchg
and
cld
push
pop
mov
mov
push
andl
shll
negb
sbb
dec
adc
sbb
cld
jecxz
dec
pop
shll
ret
xchg
dec
add
fstps
push
outsb
push
sbb
int
push
loope
hlt
jecxz
jmp
add
scas
repz
movsb
adc
inc
and
lea
dec
jnp
movsl
xlat
fnstsw
cli
push
mov
sub
popf
out
je
add
mov
mov
add
mov
jnp
xchg
add
xlat
adc
gs
pop
inc
xor
jl
popa
jnp,pn
cmp
dec
imul
mov
repnz
mov
inc
in
sub
lock
dec
mov
mov
mov
mov
sbb
clc
cmp
jo
das
xchg
imul
jns
out
and
pop
daa
mov
inc
cltd
xchg
fs
dec
repnz
sub
popa
hlt
bound
sbb
mov
fsub
loop
lret
adc
shlb
pushf
xorb
sub
jge
dec
mov
nop
push
jmp
jno
in
mov
fwait
mov
mov
lock
xchg
test
movsb
sub
dec
xchg
sbb
pop
subb
imul
push
mov
ret
pop
pushf
lock
push
pushf
xchg
cmp
mov
es
insb
hlt
adc
ret
movsl
inc
aas
out
mov
nop
loop
imul
jb
or
xchg
push
js
ja
push
jne
add
in
out
lds
xchg
daa
jno
mov
js
sahf
cmp
call
push
xor
mov
xchg
add
lret
pushf
jcxz
inc
dec
std
or
xor
insl
scas
adc
sub
inc
mov
cmpsl
in
fsubl
aam
xchg
push
mov
jns
dec
sahf
repz
wrmsr
jae
sbb
ja
mov
and
mov
xchg
fcomp
mov
lods
mov
imul
icebp
lcall
imul
sbb
pop
popf
cwtl
sub
and
xlat
arpl
repz
xchg
nop
dec
jbe
bound
and
enter
out
jg
bt
repnz
dec
cltd
ja
adc
rcll
mov
jbe
or
push
push
sub
ds
ja
mov
jns
push
mov
or
stos
sbb
inc
adcb
mov
adc
pop
pop
pop
mov
and
mov
movsb
jmp
sar
enter
int
xchg
cmc
movsb
jb
fmulp
ds
push
out
fwait
inc
enter
arpl
mov
jbe
test
jb
push
dec
insb
lea
pop
fisubrl
sbb
dec
rorl
xor
pop
ja
sbb
js
xchg
scas
lcall
adc
and
push
divb
enter
scas
cmpsl
mov
mov
out
adc
in
add
adc
mov
mov
cmc
push
push
out
sahf
or
lds
add
pop
enter
jne
cmpsl
int
lea
sti
xlat
add
mov
enter
mov
mov
xor
pop
popa
sub
xor
push
hlt
pop
and
inc
push
mov
std
decl
inc
mov
cmp
inc
and
fidivl
ret
mov
and
mov
xor
xor
jmp
push
inc
call
sti
lahf
mov
xchg
dec
std
loopne
fistpl
xor
fstps
sbb
mov
psrld
cmp
pushf
cld
cmp
xor
inc
sub
in
das
or
lock
or
xor
mov
dec
cmp
pop
insl
push
jle
and
shl
andl
adc
lahf
repnz
hlt
lahf
mov
sbb
jge
sti
pop
add
test
out
leave
int3
rorl
mov
xor
pop
jnp
subl
ja
out
dec
pop
push
mov
insb
mov
push
fisubrl
jb
out
stos
and
ret
xor
sti
repz
mov
icebp
js
inc
enter
mov
sbb
cmp
fiadds
fadd
cmp
pop
pop
mov
dec
inc
frstor
lods
lret
jg
cld
lcall
pop
test
lcall
xor
cltd
iret
push
pop
loopne
rorl
clc
outsl
enter
lods
stc
cltd
mov
aam
bound
xor
xor
fdivrs
dec
cltd
cmpsl
or
cmpsl
pop
cmpsb
push
fs
pop
cwtl
divl
jg
cs
or
test
sbb
pop
negb
mov
iret
pushf
in
dec
mov
jp
or
cmc
mov
lea
das
xchg
jo
repz
cwtl
mov
mov
test
lcall
mov
sbb
and
sbb
lret
cmp
cli
sbb
mov
jno
mov
and
sahf
push
dec
subb
into
pop
mov
ret
mov
adc
rolb
jnp
fcoms
jnp
xor
mov
push
mov
insb
dec
xor
pop
add
in
addr16
cwtl
jl
sub
xchg
jae
jb
in
and
pop
faddl
inc
adc
ret
or
aad
subl
mov
jo
xor
mov
mov
and
xlat
or
inc
add
scas
jno
xchg
fmulp
ret
xchg
daa
pop
cmc
xor
rcr
cmp
pop
scas
add
enter
mov
inc
sub
mov
pushl
adc
cmp
stc
sbbb
mov
and
fwait
rcll
fdiv
xchg
into
clc
in
pop
insl
adc
mov
mov
push
dec
in
cmpsl
push
shrl
inc
aaa
and
aam
call
push
push
adc
and
fs
cli
mov
mov
lock
mov
xchg
ja
aaa
sbb
insb
xlat
sub
mov
push
fsubs
and
std
sbb
ds
icebp
sti
sub
push
pop
jbe
das
rcl
mov
cli
je
jae
stos
xchg
inc
xchg
shrb
cwtl
pop
out
fcom
enter
dec
add
sbb
es
dec
mov
shr
sub
sarb
loop
jl
xchg
push
xchg
fcmovnbe
gs
jle
ret
xchg
xchg
cmpsl
cmc
dec
mov
and
xchg
mov
fadds
imul
jle
mov
adc
and
sub
mov
test
fdivrl
add
fcom
mov
cld
lret
push
cli
push
cmpb
sbb
pop
and
push
push
movsb
daa
outsb
imulb
adcl
mov
dec
xchg
dec
mov
out
xchg
push
mov
pop
out
add
rcr
inc
fsts
popf
imul
jo
mov
xor
jg
cmp
call
mov
icebp
xor
mov
xlat
rcl
leave
jmp
popf
jae
gs
lcall
xor
rol
pop
repz
shrl
cmp
daa
out
cltd
or
add
lock
pop
fs
lahf
incb
mov
inc
mov
inc
shll
ror
in
sbb
ret
cld
jp
fstps
xor
mov
sub
scas
cmp
out
mov
sahf
adc
pop
ret
xchg
xchg
setl
dec
fisttps
and
iret
jnp
inc
mov
inc
cmp
pop
jp
enter
cmpsl
xchg
pusha
sbb
bound
dec
out
scas
add
inc
gs
incl
xor
add
aas
inc
push
mov
std
push
insl
bound
inc
jbe
int
es
cs
adc
xchg
dec
and
hlt
cli
daa
cld
lods
mov
and
aam
jne
lds
pop
fstpl
mov
mov
inc
sar
cmp
outsb
sti
js
xchg
mov
or
inc
divb
pop
ja
xor
call
les
je
cmp
call
enter
and
sbbl
in
stos
cmp
addl
lds
jne
inc
push
lret
in
fs
int3
lods
loope
and
pop
inc
js
cmp
inc
lods
in
jnp
xchg
xor
mov
inc
ror
push
pop
fdivrp
call
decb
adc
fimuls
xchg
aas
into
lea
sbb
test
lods
aam
jmp
sub
stos
cmc
mov
xor
cli
lahf
pop
xor
aam
sbb
bound
out
xor
push
inc
inc
jno
cmc
pop
mov
ret
aad
and
add
cld
sti
pusha
push
cmp
jmp
mov
jmp
out
and
inc
popa
mov
dec
jb
jae
xchg
mov
lahf
and
sbb
inc
jp
dec
int3
je
sub
arpl
jnp
mov
adc
jb
addr16
mov
or
mov
ljmp
out
add
shlb
dec
cmp
stos
mov
hlt
sbb
push
mov
jno
dec
fstps
push
push
and
mov
imul
pop
jl
push
fwait
ljmp
imul
xlat
adc
test
and
xor
jb
ljmp
adc
test
jle
mov
add
xchg
jl
lods
add
jo
out
push
dec
jp
scas
dec
add
push
add
call
mov
or
push
mov
pop
and
or
pop
xor
jmp
fldt
scas
movsl
es
int3
and
sbb
aas
insl
daa
scas
adc
sub
pop
sbb
mov
stc
rcrl
scas
clc
and
cli
fsubl
jb
repz
pop
pop
cwtl
std
les
pop
add
jl
and
shlb
jle
jmp
xchg
scas
in
aad
ret
ja
dec
inc
and
fwait
xor
call
adc
fimuls
test
lea
adc
cmp
pop
or
js
cmp
dec
inc
xchg
ja
sbb
fs
in
in
xor
mov
aam
out
addr16
jnp
pop
xor
outsl
push
test
addb
inc
sub
jne
mov
divl
aam
mov
pushl
mov
xchg
jbe
add
pop
mov
ljmp
pop
mov
pop
fdivp
mov
mov
sahf
clc
lock
sub
mulb
dec
scas
rorl
test
mov
mov
fucomi
punpckhwd
pop
sti
cld
sti
mov
daa
xchg
fdiv
cli
stos
jmp
mov
push
adc
jne
imul
daa
stos
movsb
push
inc
jp
dec
out
cmpsl
lret
aam
sub
call
pop
push
xor
sbb
ja
add
xor
cmc
inc
mov
loop
xchg
les
data16
nop
xlat
and
out
dec
add
mov
adc
aad
jmp
or
mov
lock
push
cmpl
rorb
jge
push
rcrb
aas
and
outsl
out
cwtl
negb
std
fstpl
scas
fldcw
std
cmpsb
jb
inc
xchg
cmp
xor
xorl
dec
xchg
stc
stos
subl
fwait
pop
jg
mov
pop
adc
mov
repnz
gs
mov
shll
push
jne
xchg
dec
ljmp
addr16
lret
adc
cli
pop
inc
mov
pop
pop
cltd
xchg
in
ja
aam
out
lcall
sub
je
jnp
add
aam
ret
insb
lahf
repnz
cmp
faddp
les
out
xchg
outsb
sbb
add
cld
fistpl
mov
mov
lods
push
into
xor
cli
sub
bound
sub
lret
jecxz
sbb
ds
fsubl
push
adc
int
sub
imul
iret
iret
data16
xor
cld
cmc
shl
test
lahf
cmp
sbb
cmp
out
or
out
mov
ret
sub
jg
push
jge
lea
sysret
sub
fsubrl
enter
sub
add
std
call
push
dec
cld
or
test
out
mov
mov
or
jns
sbb
sbb
out
hlt
in
dec
pop
mov
int
addr16
sahf
pushf
push
jnp
xchg
ss
add
mov
lahf
push
cwtl
addr16
pop
push
inc
adc
xchg
ret
push
xchg
mov
adc
pop
mov
or
jb
leave
lods
fmuls
jno
push
idivb
into
and
pop
addb
inc
jo
jmp
sub
inc
clc
cld
andl
jno
and
inc
rolb
mov
push
fs
les
sbb
xor
push
mov
popa
aad
xchg
lea
cmpsb
pop
ret
xchg
sahf
dec
stos
adcl
jno
adc
dec
lods
outsb
sub
mov
je
imul
sbb
lcall
int
lea
in
mov
or
dec
push
sti
rclb
mov
mov
cltd
icebp
imul
push
mov
jge
cmc
sbb
mov
adc
or
jecxz
lods
push
xchg
xchg
xorb
pop
fisttps
cmp
ss
adc
mov
lcall
aas
popf
mov
pop
scas
mov
cmpl
pop
aad
jns
sub
sbb
repnz
pop
jb
push
hlt
cmpb
lock
dec
and
push
ljmp
pop
add
fsts
iret
mov
bound
out
jecxz
imul
and
lock
movsb
and
xchg
dec
xor
dec
mov
cmc
jae
nop
fimull
cld
mov
mov
out
xlat
xor
inc
sbbb
stc
inc
shl
xor
and
call
mov
fstps
add
cs
mov
mov
pop
out
jl
sar
push
bound
popa
push
inc
push
dec
negl
ss
push
xor
fildll
adc
xchg
out
cmp
and
insb
stc
cltd
pop
xchg
enter
or
imul
lds
mov
scas
or
testl
xor
jae
and
mov
lcall
in
xor
in
imul
hlt
sub
jne
das
xorl
cmp
mov
push
fmull
aaa
xor
in
mov
mov
mov
rcrl
xor
fldcw
mov
adc
push
insl
xchg
push
movsb
pop
into
xchg
ret
cmpsb
clc
xor
or
in
stos
js
lcall
movsl
mov
sbb
pop
jae
filds
mov
mov
mov
dec
cli
mov
loopne
fbstp
mov
icebp
sbb
inc
rorl
in
mov
mov
xlat
pop
cwtl
jp
mov
dec
inc
mov
iret
xchg
notb
fisubs
test
fcom
subb
push
pop
adc
jbe
test
orb
shl
fwait
pop
cltd
mov
sub
les
xorb
push
out
mov
pop
addr16
fucomi
rcl
inc
mov
repz
pop
xchg
sahf
outsl
popf
iret
inc
inc
lea
lahf
lds
jle
mov
out
cmpsb
add
mov
or
inc
js
sub
nop
and
xor
js
dec
test
outsl
popf
and
sub
mov
sahf
nop
pop
pusha
cli
xchg
adc
sub
les
xchg
jecxz
loope
dec
push
or
lock
lret
gs
adc
pop
in
lea
pusha
cmpb
xor
lods
push
pop
ficompl
lea
movsl
xor
fdivrp
outsl
pop
insl
mov
and
mov
sub
in
mov
add
or
cmp
mov
out
lods
cmp
iret
das
jae
sub
push
add
inc
shlb
shr
jecxz
outsb
mov
sti
cltd
mov
int
imul
lcall
out
push
mov
in
cmpsb
push
ret
jecxz
xchg
cmp
fwait
sub
dec
cli
mov
icebp
mov
das
xchg
push
test
xor
jmp
jne
pop
push
test
bound
mov
mov
push
or
inc
mov
jo
xor
daa
or
xor
leave
int3
int3
cmp
push
je
pop
cwtl
jge
mov
mov
fs
shll
into
adc
into
xor
and
sarb
and
test
mov
shrb
loope
sub
push
lahf
sbb
mov
push
iret
aam
xor
aas
adc
sbb
or
repz
icebp
cld
xchg
sbb
fnstenv
aaa
nop
out
jb
sub
xchg
jbe
movsb
push
mov
movsl
test
cltd
test
shlb
pop
push
pop
outsb
movsl
push
xchg
lock
pop
dec
stos
shlb
xchg
inc
xor
inc
xor
clc
xchg
inc
mov
out
inc
cwtl
fucomi
int3
es
adc
cltd
and
and
inc
shlb
dec
jle
imul
push
and
adc
hlt
rcrb
mov
mov
mov
jae
cmp
insb
mov
daa
stos
fdivl
xchg
btr
movsb
aas
inc
scas
sbb
repnz
lret
adc
sbb
cmp
mov
fsubr
pop
movsb
ror
lcall
xchg
pop
ja
cs
out
push
cmp
push
inc
arpl
test
ljmp
fidivs
out
inc
xchg
pushl
out
mov
imul
loope
push
pop
fldenv
cmp
test
pop
ret
or
rclb
test
mov
xchg
push
outsw
sub
hlt
mov
lahf
nop
test
inc
cltd
arpl
outsb
jnp
mov
xchg
aad
pop
daa
arpl
dec
adc
in
xchg
adc
dec
popa
scas
in
lds
fcmovnbe
jmp
mov
sbb
loope
fimuls
lods
add
insl
cmpsl
test
lcall
out
mov
fs
lods
cmc
out
std
test
test
bound
xor
sbb
je
out
xor
jo
mov
les
or
mov
inc
ficomps
shll
jge
mov
inc
adc
sbb
movsl
arpl
test
bound
lcall
sbb
pop
and
jae
inc
pop
push
push
cmpsb
push
cwtl
icebp
hlt
sarl
imul
imul
push
aaa
lahf
out
enter
fucom
push
stos
loope
incb
adc
or
sub
xchg
repnz
into
adc
fcmovbe
insb
or
sbb
sub
ret
adc
adc
push
leave
add
xchg
adc
icebp
rcll
jno
rorb
data16
mov
lcall
sbb
pop
mov
lods
test
aam
dec
dec
and
cli
push
mov
icebp
and
shrb
in
je
xor
cmp
jae
lret
mov
jnp
mov
xchg
out
or
mov
imul
movsl
sbbb
icebp
loop
jo
dec
fistl
test
push
mov
xor
das
dec
arpl
repnz
lods
aaa
aad
mov
push
jp
loopne
inc
popa
push
inc
vaddps
cmpsl
sahf
sahf
cmp
clc
test
jae
cmpsb
les
out
bound
and
xchg
daa
xchg
das
inc
std
cmpsb
jl
and
into
out
dec
insl
xor
xchg
sbb
in
xor
pusha
loop
loop
add
mov
xchg
stos
shll
xor
adc
mov
idivb
or
ss
call
and
sub
or
sbb
xchg
push
xchg
stc
mov
mov
ss
dec
mov
shll
sbb
ja
fistl
iret
sahf
imul
out
push
test
sbb
pop
cmp
cmp
push
nop
int3
xchg
cmp
jmp
sarl
mov
mov
and
mov
cmpsl
aas
push
xchg
loopne
inc
int3
inc
mov
dec
loopne
stos
icebp
add
xchg
xor
mov
push
rcrl
das
dec
mov
lahf
dec
fisubrl
inc
push
in
cmc
test
pop
ds
ljmp
imul
mov
xchg
bound
inc
je
push
cmp
mov
js
add
aam
sarl
loopne
cmc
jge
test
in
outsl
call
xchg
aam
bound
xchg
repz
jle
mov
push
icebp
clc
adc
adcb
into
sub
cmc
rorl
xor
out
addl
cld
pop
add
jo
out
es
jmp
sbb
pop
iret
or
mov
gs
stc
shlb
popl
adc
xchg
sub
and
nop
mov
ds
and
push
adc
enter
ret
cmpsb
in
sub
sub
dec
and
ds
mov
arpl
dec
add
mov
xor
xchg
pop
mov
xchg
jns
in
xor
call
fxch
jg
scas
int3
cmp
cmp
pop
fsub
mov
clc
cmc
fs
je
mov
mov
nop
mov
and
add
fmuls
pop
adc
jne
ss
push
int3
xchg
lods
cmp
lret
lahf
sarl
ljmp
sahf
inc
pop
jecxz
pop
mov
xor
push
jg
xchg
fmul
rorl
dec
scas
pusha
add
lock
jp
ss
jmp
xchg
cld
mov
jl
pop
adc
fldl
push
pusha
pop
xchg
and
xchg
loop
cltd
ss
xor
mov
in
cmp
xor
pop
sti
and
loop
lret
aaa
fwait
aaa
test
loopne
xchg
int
cld
gs
xchg
fldcw
cmp
adc
bound
cmc
dec
jp
mov
movaps
ds
xor
rcr
adc
rolb
dec
mov
stos
pushf
jbe
and
sbb
dec
stc
sub
mov
fidivrl
fsts
rep
and
shll
pop
inc
mov
movsl
je
add
mov
jns
fisubrl
int3
pop
xchg
js
add
mov
mov
into
push
sub
je
mov
push
in
fwait
xchg
dec
lods
sub
stc
movq
movsl
add
inc
cli
imul
xlat
cmp
dec
leave
test
jmp
adc
xchg
insb
mov
ficompl
popf
add
jbe
iret
sub
ds
ret
or
sbb
inc
aam
mov
test
lock
iret
cmc
add
fdivs
mov
sub
js
mov
pop
xchg
pusha
dec
mov
dec
inc
dec
xchg
push
xchg
sarb
shrb
pushf
push
lods
mov
cld
aad
cli
jno
pop
sbb
sub
rorl
imul
xor
jp
pop
sbb
inc
test
fimull
sub
das
mov
mov
dec
fwait
icebp
mov
and
mov
push
xor
add
adc
aas
push
scas
fsubrl
dec
xchg
xor
mov
jg
jg
pop
cmp
add
sub
push
push
mov
pop
jbe
or
test
pop
push
add
add
xor
cs
out
movsb
mov
and
dec
adc
insb
xchg
add
or
push
jnp
scas
jl
xchg
repz
js
and
shl
sbb
loope
aam
dec
icebp
or
sbb
sti
pop
adc
addr16
ffree
xor
call
cmp
adcl
inc
fidivrl
sahf
mov
adc
mov
pop
push
inc
icebp
popf
push
mov
xor
push
pop
dec
fwait
jl
jle
into
inc
test
or
pop
dec
shll
jno
dec
push
pusha
pop
xchg
lds
or
dec
or
fdiv
mov
cmp
pop
or
push
push
push
cmp
xorl
push
repz
mulb
ds
je
outsb
lods
aad
inc
jae
fs
call
daa
jecxz
jbe
and
ret
push
imul
imul
mov
jecxz
xor
loope
adc
mov
dec
fstl
mov
clc
push
mov
lret
cmpsb
cmp
iret
mov
and
push
hlt
in
sarb
jg
or
cs
pop
iret
xchg
push
inc
nop
in
push
mov
mov
pop
dec
divl
shlb
jecxz
in
jge
rcrl
pop
insl
mov
sub
repnz
cmp
or
xor
lcall
add
push
test
jmp
adc
xchg
push
cli
imul
repnz
xchg
sbb
fmul
pop
xor
insb
pusha
test
cmp
dec
xor
incb
mov
test
scas
outsb
std
inc
jmp
and
sarb
cli
fs
or
cmp
aaa
inc
add
dec
into
dec
test
xchg
mov
ret
mov
sbb
ds
mov
cmp
inc
dec
insl
popa
lret
xchg
shrb
cltd
mov
adc
inc
jge
sub
std
jae
adc
mov
cmp
add
iret
jae
dec
mov
fs
pop
xchg
dec
lea
lds
enter
dec
and
push
outsb
dec
scas
into
enter
dec
xchg
call
or
movsl
dec
sti
xor
inc
sub
dec
icebp
ds
add
jmp
xchg
xchg
inc
sub
popa
mov
or
add
nop
xor
ds
mov
sub
sbb
das
mov
pop
aam
popa
sahf
pop
stos
int
dec
mov
pushf
push
jns
sbb
jmp
arpl
xor
rolb
and
pop
inc
and
push
lds
xchg
mov
adc
cmpxchg
inc
lahf
push
mov
rcll
test
cmp
mov
adcb
push
les
add
push
cltd
sarb
jns
loopne
xchg
add
or
push
cmp
aam
xor
push
dec
cld
sbb
imul
mov
rorb
and
stos
fld
inc
mov
jb
ret
jne
push
std
cmp
test
and
and
and
mov
dec
jle
or
insl
in
lret
cmp
or
or
xchg
push
mov
and
ss
int3
shr
clc
sbb
mov
push
xor
pop
mov
sbb
int3
repz
mov
add
mov
xchg
sbb
loope
jo
test
lods
dec
jb
adc
and
jmp
inc
jg
adc
cmp
pop
mov
pop
movsl
dec
push
mov
mov
divl
adc
cmp
xor
cmpsl
push
xor
leave
dec
push
js
inc
or
dec
jb
fsubrl
es
lcall
idivl
shl
push
and
xchg
fsub
mov
cltd
jbe
ret
addl
je
aam
out
add
imul
enter
out
xor
enter
subb
jne
sbb
fildl
mov
fistpl
sbb
out
jne
dec
jo
cmc
rorl
push
push
hlt
cwtl
imul
sbb
je
insl
out
lret
cmp
add
pop
xchg
push
hlt
or
jne
fld
push
jo
sub
xchg
repnz
dec
add
mov
fisubrs
pop
pop
mov
pavgb
mov
insb
ret
push
cmp
pop
ss
outsl
sbb
xchg
aas
push
popf
dec
dec
lock
inc
loop
out
jno
dec
jbe
les
push
mov
lcall
cmpsb
fstpt
mov
insl
push
cmc
adcb
xor
push
out
stos
adc
xor
out
fildll
pop
cmp
in
xchg
mov
mov
outsl
rorb
xchg
xchg
pop
ss
gs
push
pop
adc
push
in
popa
cmp
imul
outsb
aam
rcrl
xchg
mov
in
sub
jecxz
call
mov
jo
xlat
fnop
and
imul
jle
sub
dec
jmp
negb
cli
int
push
loope,pn
pop
push
cmp
inc
jg
mov
jne
ss
fdivrp
mov
movsl
daa
aad
fists
lods
movl
xchg
popa
and
jmp
xor
push
lods
or
fwait
push
mov
push
mov
xchg
jl
in
pop
cmp
add
scas
adc
xchg
mov
xor
sub
gs
mov
out
sub
fisttpl
popa
adc
xchg
mulb
repz
lret
mul
and
js
jle
mov
neg
mov
fnstenv
xchg
negb
push
mov
lret
add
lahf
shlb
cmpsl
sub
pusha
iret
imul
nop
pop
add
out
out
popa
ja
cmp
sbb
rolb
fdivrl
aad
adc
xchg
out
jl
test
lods
pop
add
sub
add
int
mov
jo
sbb
fldl
jp
push
fisttpll
cmp
jnp
dec
jmp
inc
rolb
shl
fsts
add
dec
mov
ljmp
insb
ror
mov
in
inc
test
and
cmpsl
jmp
loop
pop
pop
add
adc
clc
adc
dec
xchg
ljmp
pop
sahf
bound
push
leave
ret
push
push
dec
jmp
add
add
pusha
pop
and
jle
or
mov
sub
addr16
mov
sub
in
out
std
pop
dec
movsl
jns
cli
mov
stos
pusha
or
pop
je
and
pushl
repz
call
scas
icebp
push
imul
or
jns
push
mov
add
adc
insl
push
pop
lret
jl
ljmp
daa
or
ljmp
ljmp
lcall
scas
mov
jmp
adc
out
orl
ljmp
jmp
lret
loop
mov
push
ss
js
mov
push
inc
inc
es
sbb
adc
and
es
push
fcmovu
xchg
decb
jle
dec
lret
dec
cmp
push
pop
cltd
cmc
xchg
jmp
mov
test
sub
push
sti
pop
addr16
jae
aas
jmp
and
pop
lods
dec
inc
and
int3
les
hlt
fdivrl
mov
mov
dec
clc
inc
jae
add
sar
mov
out
sbb
sbb
cmp
jne
jae
mov
jno
mov
inc
inc
xchg
push
lea
movsl
fsubl
arpl
je
sti
cltd
rcrb
out
jle
add
out
mov
fisubrl
addb
decl
negl
and
jo
out
add
lock
dec
jns
aas
and
out
xchg
jns
xor
test
negl
dec
dec
fnsave
jae
cmc
dec
std
repnz
and
push
add
cmp
jne
fsubl
inc
cmp
xchg
add
xor
idiv
int
and
and
sti
inc
push
inc
xor
xchg
scas
stos
mov
stos
push
xchg
mov
xor
fidivrs
jbe
ljmp
xor
popf
jne
inc
sub
lret
orl
pusha
test
ret
xor
sub
stc
pusha
and
insb
cmp
add
aas
out
mov
adc
pop
cmpb
arpl
mov
into
push
xor
jle
insb
stos
cs
mov
jg
rorl
aas
jp
mov
out
adc
dec
or
sbb
mov
or
aas
cmp
fwait
xchg
fisubl
add
fisubl
dec
dec
or
dec
and
in
sub
push
xchg
hlt
sbb
mov
cmc
stc
mov
mov
lcall
mov
inc
mov
cld
and
lret
out
push
sbb
dec
mov
or
fs
mov
decl
in
cmpsb
mov
out
jo
lds
jmp
dec
jmp
movsb
test
addr16
pop
aaa
push
sbb
sets
inc
arpl
jno
push
cmpsl
or
cmp
push
pop
xchg
aas
jle
jbe
iret
fcmovnu
xchg
jl
test
clc
pop
adc
subl
mov
daa
and
mov
push
xchg
and
add
pop
cs
dec
xchg
sub
pop
jns
int
loop
ret
fdivr
pop
cmp
fwait
ds
cmp
leave
lods
imul
add
mov
add
sub
push
pop
push
add
das
add
fs
xchg
outsb
lock
xchg
mov
mov
xchg
les
add
jbe
sub
dec
and
mov
inc
mov
sub
jp
leave
repz
les
jbe
test
cmp
pop
fcomi
push
jo
aaa
leave
cmp
or
adc
cld
sbb
or
adc
add
movsb
lods
and
mov
es
ss
and
xchg
leave
insb
dec
jno
and
outsb
ja
add
add
and
stc
and
stc
jae
sub
dec
jns
sbb
out
lret
std
or
shufps
or
testb
fmul
push
jb
or
fiadds
std
mov
xchg
pop
and
pop
adcl
sub
dec
lret
push
mov
imul
pop
jp
push
leave
in
dec
xchg
cmpsl
xchg
pusha
dec
in
daa
jle
adc
loope
mov
mov
icebp
push
lods
nop
push
stos
jbe
movsl
outsb
scas
mov
xor
into
or
dec
test
mov
movsl
mov
loopne
sbb
add
out
add
andb
dec
xchg
xchg
sti
jecxz
xchg
cmp
jb
sub
inc
adc
mov
fisubrs
ret
dec
push
cmpsb
add
int
sbb
cmp
out
jne
jle
mov
insl
sub
jmp
mov
clc
sti
sti
fistps
scas
jb
out
lret
insb
pop
xor
cld
dec
push
xchg
int3
andb
cs
mov
jmp
dec
int
sub
fidivl
daa
inc
mov
pop
bound
xchg
inc
mov
lret
and
outsl
outsl
clc
movsl
jg
pop
mov
pusha
dec
aaa
cmpsb
lods
aad
sub
ficoms
ss
fwait
push
repnz
fmuls
aas
adc
pusha
cmp
in
mov
outsb
scas
inc
cwtl
fwait
inc
and
or
dec
insl
loope
bound
xlat
adc
jne
loope
xchg
mov
add
or
mov
arpl
jbe
sub
testl
xchg
inc
test
movsb
hlt
fldcw
mov
and
sub
lret
adc
scas
or
jo
into
fadds
into
imul
push
sbb
dec
das
fwait
and
mov
je
loope
cmpsb
loop
andb
push
enter
xlat
xchg
and
aad
or
push
iret
cmp
or
sbb
sub
idivb
repnz
adc
lea
jmp
enter
xor
lcall
cmp
hlt
in
pusha
pop
and
stc
pop
mov
mov
test
xchg
jnp
xchg
scas
insb
xchg
popa
and
bnd
es
popf
mov
mov
mov
ret
outsl
mov
push
int
mov
mov
jecxz
sub
js,pt
jne
sub
ljmp
xor
test
lods
ret
inc
insb
push
mov
and
and
dec
aas
cmp
into
inc
movsl
adc
mov
lods
pop
xchg
sbb
mov
test
mov
loope
and
movsl
push
in
ret
nop
mov
xor
xchg
push
sbb
dec
cmc
and
push
rcrb
xchg
test
iret
sbb
jae
dec
outsb
sub
xchg
je
fnsave
es
mov
insl
add
xor
aaa
neg
loopne
jle
pop
mov
sbb
clc
mov
out
or
jae
js
rorb
fdivs
fwait
adc
aad
push
sub
cmpsl
jno
mov
aaa
clc
mov
cs
mov
add
jno
lea
pop
insl
inc
mov
dec
mov
sub
pop
ja
out
sub
push
push
cmp
pop
add
loop
outsb
inc
lret
xor
aaa
dec
mov
lock
lods
xor
fildll
mov
add
outsl
pop
scas
or
sbb
loopne
pop
sarl
aas
pop
sbb
jne
sub
shlb
jb
xchg
cmp
pop
movl
repnz
mov
inc
add
and
iret
stos
sub
mov
shlb
mov
aad
xor
xchg
add
push
in
mov
out
fnstenv
movl
fld
mov
adc
inc
cmp
bound
stos
cmp
inc
push
fildll
aas
mov
cmp
xchg
pop
or
and
ret
pop
cmp
clc
or
lods
sbb
insl
jns
ret
mov
fadd
clc
sbb
sub
jns
aaa
aaa
aam
loope
mov
icebp
lret
je
and
jae
cmpsl
popf
movsl
outsb
xor
pusha
xorb
popl
jle
int3
dec
mov
or
pop
jnp
mov
cmc
lods
ss
hlt
aaa
xchg
icebp
xor
mov
cmpsl
mov
mov
rorb
lret
cmp
jnp
inc
lods
jb
xchg
out
xchg
sbb
jbe
cmp
ljmp
in
mov
stc
xchg
xchg
add
std
add
lock
or
or
fldenv
mov
bound
inc
and
mov
xor
jecxz
lds
or
xchg
lcall
sahf
mov
imul
cltd
jle
fistpll
repnz
inc
scas
scas
pusha
lods
or
aas
les
adc
nop
mov
xchg
xchg
xor
cmp
mov
aas
pop
subb
pop
sbb
xchg
sub
and
shlb
cmp
adc
mov
daa
je
jno
mov
cmp
cmp
inc
dec
xor
cli
and
mov
mov
xor
loopne
sti
lods
roll
push
lahf
or
call
lret
jb
lock
pop
add
es
pop
fwait
pop
scas
sub
ja
daa
mov
repz
sbb
int
jmp
gs
sbb
imul
das
pop
mov
fidivl
aas
enter
mov
xchg
sub
cmp
xor
mov
fildll
in
ror
pusha
ljmp
inc
test
push
mov
dec
and
sbb
push
stc
pop
and
pop
push
gs
mov
imul
pop
push
adc
stos
nop
jmp
pop
xchg
sub
ja
stc
adc
flds
iret
push
je
or
sbb
shlb
aad
fs
mov
sub
jg
mov
pop
arpl
xor
test
testl
pop
pop
fs
push
xchg
loop
shl
je
sbb
test
in
pop
jae
adc
mov
jae
divl
into
or
filds
jne
cli
push
orl
pop
lods
jnp
ret
fsts
iret
jne
mov
mov
pextrw
add
inc
sub
or
arpl
int
mov
xchg
push
xchg
mov
ficomps
in
rorl
call
add
sbb
pop
inc
sub
sbbl
jmp
cmp
outsl
and
test
cmp
repnz
xrelease
dec
xor
sbb
or
aas
icebp
mov
daa
aas
loop
xor
sarl
or
dec
popf
enter
leave
pusha
jge
jle
inc
shlb
ds
divl
cmp
xchg
lret
push
out
fdivrl
sbb
pop
and
mov
stc
cwtl
mov
lock
repnz
inc
pop
inc
jg
inc
add
jle
repnz
xlat
inc
out
pop
data16
stos
es
outsb
fistps
push
push
sub
xor
adc
adcl
insl
jge
fidivrl
mov
dec
jne
std
outsl
fwait
xor
adc
fcmove
mov
pop
sub
jg
mov
jnp
xor
fldenv
enter
push
in
xchg
mov
dec
or
adc
xchg
inc
bound
mov
rclb
loope
insl
lods
pop
movsb
inc
cmpsl
fwait
pop
jns
mov
pinsrw
fcmovnbe
std
push
xor
xchg
shlb
addr16
std
mov
sbb
jns
jge
int3
repz
jp
mov
xor
fwait
ja
fs
inc
sub
icebp
push
andl
jge
mov
sbb
mov
cmp
jae
pop
sbb
dec
jns
sbb
push
lods
les
push
nop
xchg
aas
jnp
adc
fistl
jbe
xor
adc
sub
dec
ljmp
xchg
cmpsl
adc
fisttpl
loopne
xchg
push
mov
test
jb
lods
xchg
xor
add
mov
mov
popa
std
mov
sub
mov
cmovnp
cwtl
imul
jg
xchg
and
scas
jmp
and
nop
cmpsl
icebp
stos
ljmp
out
mov
push
mov
sbb
int
xlat
leave
xor
out
push
jl
mov
mov
pushf
and
pop
shll
mov
xor
sbb
mov
jp
push
aad
pop
int
mov
lea
int3
mov
sub
sti
daa
pop
leave
das
rorb
adc
inc
loope
adc
adc
sub
sbb
mov
push
lcall
sbb
cltd
xor
inc
and
pop
add
in
adcb
aad
inc
pop
fnstcw
or
flds
jp
int
sub
mov
lret
lods
movsb
shl
repz
adc
push
mov
mov
mov
add
inc
and
loope
je
adc
mov
shlb
pop
popf
push
mov
adc
inc
push
loop
dec
scas
into
adc
insb
xlat
xorl
shlb
xchg
data16
push
sbb
mov
es
scas
xchg
xchg
fwait
jae
ficoms
dec
lret
and
adc
push
data16
add
add
mov
mov
push
into
fiaddl
push
push
cld
aam
in
std
or
ret
outsb
sbb
ffree
sub
jnp
dec
mov
mov
push
stos
pop
shl
push
aam
stc
cmpsb
pop
ret
sbb
mov
hlt
std
shrb
call
sbb
cmovl
fs
xor
lods
ret
dec
mov
lods
xchg
inc
sub
sbb
inc
dec
mov
inc
dec
pop
in
jae
jbe
mov
ret
pop
imul
inc
jg
or
xor
adc
repnz
lods
icebp
ret
jb
push
sar
xchg
mov
outsb
dec
lcall
jb
inc
mov
sti
cs
cmp
jnp
lods
adc
inc
pop
mov
pop
xchg
icebp
or
test
lods
or
xchg
mov
dec
aam
fnsave
mov
roll
push
lock
ljmp
dec
pushf
sti
cmpsb
and
dec
js
int
mov
mov
or
mov
call
xlat
xchg
dec
xchg
push
jp
push
xchg
add
and
repnz
pop
dec
push
xchg
ret
das
hlt
add
std
dec
inc
mov
aas
mov
loope
push
fistpl
jg
rcrb
je
pop
mov
mov
leave
test
mov
mov
incb
cwtl
popa
jle
ss
imul
xor
rcrb
movsl
mov
adc
sbb
sbb
rcrb
imul
movsb
popf
ret
mov
iret
outsl
xchg
push
out
pop
xchg
mov
sbb
pop
fucomp
imul
aad
in
out
leave
push
push
jecxz
push
push
pusha
icebp
pop
cltd
inc
and
push
and
sub
push
sbb
shll
push
cwtl
stos
mov
lods
xchg
jge
fisttps
cmp
outsb
std
enter
xor
nop
mov
adc
ret
push
mov
es
push
mov
mov
stos
gs
lea
int
stos
cs
sbb
dec
add
out
packuswb
xchg
hlt
jo
sbbl
jnp
xchg
fiadds
cmpsb
sbb
fimull
jle
insl
add
test
mov
cmp
pop
pop
xchg
test
and
push
jmp
mov
mov
mov
mov
mov
icebp
inc
jne
loopne
push
mov
or
xchg
insl
mov
jecxz
xlat
adc
jge
sbb
lea
mov
outsb
rorb
test
ficomps
daa
loop
xor
xor
add
or
inc
and
xchg
arpl
dec
ror
and
fxch
jl
cmp
rcl
neg
xchg
ss
jl
adc
add
xor
pop
sahf
test
ss
mov
inc
inc
jle
and
sbb
fcmovnb
inc
jmp
dec
mov
xor
nop
and
stc
dec
adc
mov
or
outsl
adc
imul
add
lcall
lods
out
pop
iret
mov
loop
outsb
ss
lcall
mov
shr
mov
xchg
pushf
les
mov
dec
sbb
shlb
dec
out
in
cmp
flds
push
ja
xorl
xor
mov
aam
subl
shl
arpl
jg
mov
jg
out
or
cmpsl
inc
inc
dec
cmp
push
inc
and
iret
lods
mov
mov
or
hlt
cmp
sbb
pop
repz
adc
fucomi
cltd
inc
daa
cli
call
and
mov
xor
aaa
mov
sbb
loope
cwtl
mov
inc
daa
sub
cwtl
mov
fsubrl
inc
cwtl
out
jge
lds
movsl
mov
scas
loopne
jg
xchg
inc
and
sub
jle
lock
dec
jle
xor
push
shl
and
vmwrite
daa
jne
aam
addr16
jge
sbb
xchg
stos
int3
hlt
or
scas
sub
xlat
notl
aas
pop
push
mov
cwtl
fwait
xchg
dec
je
mov
mov
or
xor
mov
arpl
mov
or
cmp
je
cltd
mov
and
pop
imul
add
fcoml
inc
jno
cld
sbb
sarb
into
loop
jbe
mov
cvtps2pd
in
adc
out
rolb
mov
popa
cmp
add
shll
pop
aad
fimull
rcll
and
sbb
add
pop
enter
mov
xor
xchg
mov
dec
sub
mov
je
xchg
inc
or
jle
xor
sarb
mov
aas
dec
mov
push
mov
pop
cld
mov
loop
sbb
lods
mov
addr16
mov
xor
imul
mov
test
xchg
in
dec
add
sar
pop
fsubl
fldenv
pop
mov
repnz
add
dec
pop
and
sti
mov
xor
rorl
incb
sbb
adc
xchg
mov
mov
ret
mov
push
add
and
and
adc
jne
and
adcl
sbb
in
add
push
in
call
adc
pop
xor
in
movsl
fidivs
sub
cli
jmp
jb
popa
lods
adcl
pop
push
in
xor
scas
and
mov
sbbb
sub
mov
dec
push
scas
pop
daa
imul
clc
aam
ss
dec
js
adc
enter
and
inc
push
shlb
xchg
scas
inc
xchg
rol
jno
imul
mov
movsl
inc
hlt
mov
jbe
sbb
mov
mov
orl
outsl
in
shlb
outsb
clc
xor
xor
outsl
mov
xchg
xor
movsb
addr16
xchg
test
pop
cmp
add
int3
jg
xchg
mov
scas
lock
jecxz
movsb
mov
add
add
lret
insb
imul
add
and
pop
sbb
outsl
jle
stc
mov
icebp
pop
jge
xor
loopne
mov
imulb
inc
stos
cli
lods
add
or
mov
inc
je
enter
loope
xchg
loopne
mov
dec
mov
jecxz
adc
enter
loopne
push
fmul
insl
fstp
push
mov
bound
loope
or
icebp
cmp
addr16
cmp
inc
cld
and
aam
xor
hlt
out
jmp
fisttpl
adc
in
inc
mov
or
imul
cmp
push
push
das
cmp
xchg
aad
pop
adc
scas
loop
imul
adc
or
cmp
lret
sub
dec
cmpsb
ret
cwtl
mov
pop
insl
inc
arpl
out
jns
lock
push
outsl
inc
inc
push
das
and
xchg
or
mov
xorl
mov
mov
cmpsl
fst
movsb
sbb
mov
jp
lds
sub
cmp
les
inc
mov
call
notb
lahf
dec
je
pop
sub
pusha
sub
add
pop
adc
xchg
xchg
cmpsl
push
inc
cmp
adc
in
sub
cli
mov
add
in
sbb
inc
enter
mov
add
aaa
in
out
hlt
cmc
mov
push
lret
sbb
scas
mov
lods
adc
push
push
out
insb
insb
mov
inc
inc
js
test
pop
pusha
mov
aad
mov
fbstp
mov
mov
pop
notb
sub
lcall
xchg
arpl
mov
inc
int3
ss
xor
inc
roll
jne
pop
add
pop
bound
test
rorl
clc
mov
testb
jg
dec
jno
cli
push
sti
cmp
xor
call
inc
sahf
aas
inc
dec
push
popa
lea
imul
in
push
xchg
or
pop
sbb
in
pop
scas
faddp
pop
inc
mov
or
jne
push
add
test
cmp
xchg
fcmovnb
mov
sub
mov
cmp
sbb
pop
pop
cmp
and
loop
cs
shlb
enter
popaw
arpl
decl
jae
fimull
adcl
sbb
jo
orl
test
adc
adc
stos
sub
dec
scas
cmp
adc
push
jns
ficoms
icebp
dec
out
adc
je
xor
pop
lret
dec
bound
insb
data16
jg
jl
push
repz
cld
and
loopne
inc
popf
or
fsubp
sbb
jb
cltd
xchg
dec
pusha
dec
mov
push
outsl
xor
pop
mov
dec
idivb
sbb
dec
sbbb
jno
addr16
faddl
dec
scas
shl
push
sub
pop
jno
js
iret
into
dec
and
inc
out
mov
inc
stos
xchg
fisubs
jno
loopne
mov
popa
mov
hlt
movsb
ss
rorl
adc
sub
xchg
fcomps
dec
vmovups
int3
or
outsl
xor
add
dec
mov
push
jge
add
arpl
dec
insb
adc
setno
cmp
cmpsb
or
stos
push
js
inc
cmp
test
push
xchg
aad
cmp
pusha
cmp
loop
shrl
mov
mov
popa
or
out
and
add
cmc
inc
jg
xchg
fstp
pop
mov
sub
faddl
pusha
mov
push
int
pop
mov
pop
and
jne
dec
loopne
lret
gs
mov
cmp
dec
xchg
push
and
stos
adc
and
sub
mov
fidivs
and
andl
out
hlt
sbb
and
mov
stos
icebp
jae
and
dec
mov
call
cmpsb
in
adc
mov
push
into
pop
ret
leave
sarb
addr16
sub
fwait
dec
pop
mov
inc
xor
mov
dec
mov
sahf
jl
into
insb
sub
enter
pop
push
mov
cmpsl
stos
add
aad
lret
lahf
push
adc
test
sub
adc
mov
push
mov
outsb
xlat
movsl
xchg
lahf
ds
aas
xor
inc
addr16
or
dec
or
ret
adc
rcll
pop
stc
jae
xchg
popa
mov
inc
fdivrs
add
ds
xor
push
mov
xchg
lahf
inc
andb
lock
sahf
out
sub
das
mov
mov
imul
xor
jp
inc
into
daa
sbb
push
push
jnp
mov
scas
adc
fidivs
into
mov
test
xlat
hlt
fbstp
ficomps
mov
mov
xchg
cmp
dec
xchg
fsubs
dec
mov
nop
insb
sbbb
and
mov
inc
mov
adc
pushf
jb
stc
xor
push
out
jmp
lock
movsb
test
push
sti
sub
cmpsl
jl
mov
sti
add
int
xor
jbe
adc
rol
xor
xchg
jae
insb
sbb
popf
dec
addb
xchg
adc
dec
jl
sbb
mov
cmpsb
loope
inc
lods
mov
cwtl
xlat
insb
shll
jns
pop
push
jmp
push
leave
cmp
jecxz
fs
aaa
scas
jo
jecxz
mov
imul
push
pop
stc
fildl
or
pop
test
repnz
dec
and
and
jo
lahf
in
addl
push
ret
dec
dec
fidivrl
mov
adc
lahf
cmp
jbe
xor
fildl
lret
mov
scas
sub
loope
cwtl
push
mov
mov
adc
mov
jo
push
lret
sub
stos
sub
jmp
movl
xchg
pushf
cmc
mov
pushf
xchg
jg
mov
pop
loope
ds
into
mov
cmpsl
mov
imul
push
aas
add
cmpsl
bndstx
fisubs
mov
mov
decl
push
in
addr16
add
mov
aas
data16
nop
orb
andb
iret
sbb
or
aas
pop
in
cmp
aas
pop
ljmp
sbb
stc
jnp
idivl
movsl
jnp
xchg
into
fildl
push
int
xorb
add
aam
and
pop
scas
pcmpeqb
leave
dec
pop
sbb
outsl
push
xor
out
jne
adc
int3
mov
add
adc
ds
pop
pop
cmp
into
or
xchg
movsb
mov
sti
fldt
xchg
es
mov
xor
lahf
push
in
loopne
pop
lods
imul
enter
push
cmp
mov
inc
sarl
xchg
mov
and
aaa
mov
mov
test
movsl
sbbb
mov
call
fwait
pop
stc
bound
cmp
adc
mov
dec
bound
and
pop
xor
gs
push
dec
xchg
movsb
int
push
push
mov
push
xchg
into
ljmp
push
xor
jecxz
jmp
xlat
pop
xchg
outsb
mov
xor
adc
mov
repnz
mov
or
cs
sub
add
outsb
decb
hlt
lods
cs
into
push
outsb
pop
gs
push
add
mov
mov
jmp
divl
pop
xchg
lock
call
lfs
pushf
scas
addr16
or
or
mov
cmp
pop
shrl
cmp
rorb
cs
adc
fadds
xchg
iret
sarl
sub
xchg
and
stos
fsubrs
lahf
mov
aad
push
lea
popa
movsl
mov
in
lds
aas
rcrl
xlat
stc
movl
aaa
inc
mov
cmp
arpl
rcl
jne
inc
shlb
xchg
dec
scas
lret
jecxz
mov
mov
and
cmpsb
in
sbb
xlat
push
or
subb
clc
push
push
test
push
push
xchg
cli
sub
andb
dec
adc
xorb
dec
dec
or
scas
insb
push
cld
and
jle
repnz
xor
mov
iret
cs
das
mov
roll
xchg
ret
and
add
pop
cmp
pop
int
push
je
inc
repz
or
sub
sbb
lock
in
push
addr16
sbb
add
mov
addr16
add
ret
divl
scas
dec
icebp
cmp
mov
fldt
imul
jmp
mov
stos
fcmovu
xchg
mov
int
cmpsl
cmpsb
jecxz
mov
ret
gs
ds
cmp
mov
cmc
sbb
dec
pop
jnp
fnstsw
cmp
xor
scas
std
call
lods
mov
maxps
push
rorl
dec
insb
nop
imulb
fisttps
loop
cmp
xor
push
outsb
sbb
jmp
xchg
jb
aam
outsb
and
clc
test
inc
jg
test
mov
mov
pusha
xchg
repnz
aas
scas
loopne
mov
ds
fisubl
jno
mov
sbbl
xor
insl
popf
scas
cmp
xchg
bound
add
cmp
push
fimuls
das
cmp
jbe
sbb
out
xchg
into
push
push
test
ret
jmp
inc
imul
inc
inc
lret
add
imul
pop
sub
xlat
mov
lods
int3
stos
or
out
or
sbb
add
mov
bound
lods
inc
sub
test
xor
adc
xchg
out
adc
and
pushf
hlt
repnz
sub
pop
mov
loope
cmp
shrl
or
jmp
scas
inc
in
popf
iret
std
mov
in
outsl
cmpsl
xor
pop
les
jo
sub
push
cwtl
aaa
jae
sti
ds
inc
ljmp
push
push
incb
les
loope
mov
out
sub
insl
mov
add
movsb
inc
cmpsl
jp
push
mov
or
push
ret
rcrb
add
in
clc
dec
cmp
xchg
popf
mov
cwtl
sbb
xlat
push
mov
mov
cltd
jmp
ficompl
rorb
scas
cmc
es
addr16
inc
dec
cmp
mov
adc
iret
insl
jle
mov
jno
push
shll
loop
iret
into
cwtl
test
add
lock
dec
and
xchg
loope
stos
jge
lret
cwtl
adc
in
fmull
je
test
cmp
pop
lea
inc
pop
rorb
xor
and
xchg
hlt
push
adc
fsubrs
jo
in
mov
stos
jo
add
xor
push
arpl
mov
insb
rorl
jne
mov
dec
mov
or
or
ret
sbb
scas
push
movsl
rcrb
xor
jno
fldenv
push
fcoms
loop
int3
daa
cwtl
jle
cmp
inc
and
sahf
fmulp
jne
rorl
lcall
in
loope
pushw
test
push
pop
jle
inc
ljmp
mov
pushf
jae
add
xchg
xor
sub
sub
cwtl
adc
pop
push
in
out
jns
filds
rcr
push
mov
sti
lods
pop
mov
mov
les
mov
pop
rorb
sbb
push
mov
mov
jo
dec
mov
xor
aaa
sbb
addr16
mov
iret
jle
mov
cld
and
sub
lahf
sbb
push
mov
sub
mov
cmp
cltd
shl
xor
sub
je
mov
xchg
fdivrl
jl
pushf
and
ds
pop
xchg
inc
fisttpl
push
fs
cmp
cli
jge
mov
stos
iret
fcoml
dec
or
test
pushf
stc
popf
mov
mov
jnp
ret
mov
fs
test
lret
test
jl
and
fwait
xlat
movsl
jle
cld
hlt
popa
test
xchg
sbb
jb
cmpsl
ret
lea
jl
js
xor
inc
xchg
add
mov
mov
xchg
push
loopne
test
inc
and
mov
jp
inc
sbb
jp
out
insb
out
shll
arpl
mov
scas
mov
add
ret
mov
pop
mov
cmc
adc
pop
fstps
out
bound
add
sahf
xor
repz
into
cli
mov
and
inc
inc
test
loope
push
imul
cld
push
push
loopne
lret
scas
push
ret
or
int3
pop
out
mov
jne
xchg
mov
int
shlb
jle
mov
mov
sbb
aas
dec
gs
push
dec
xchg
add
ja
push
dec
lcall
push
repz
jmp
rcll
shll
loopne
push
in
mov
push
jp
mov
divl
push
inc
jbe
fadd
xchg
je
popa
mov
cltd
and
sub
repnz
rorb
push
adc
test
popa
push
pop
mov
mov
fistps
mov
push
ret
fisubl
test
cld
xchg
mov
repz
sub
ja
mov
and
fs
push
lea
mov
mov
pushf
data16
lds
lret
testb
sahf
out
mov
push
pop
add
mov
sbb
lret
lcall
ret
cli
pop
cli
lahf
jns
jmp
shlb
test
inc
xchg
adc
es
mov
jmp
mov
cwtl
ja
adc
ret
xor
js
mov
scas
pop
shlb
in
pop
cmp
out
jle
push
lds
pop
jg
jno
sbb
mov
cld
daa
iret
lret
sbb
mov
inc
enter
loope
ret
pushf
sbb
push
movsl
popa
dec
lods
xor
mov
mov
lret
aam
jle
inc
insl
mov
loop
xchg
lds
cmp
pop
outsb
add
dec
or
push
ret
icebp
xor
pop
xchg
inc
insl
imul
add
pushf
add
dec
dec
sub
jmp
sbb
cmp
sti
loope
and
cmpsl
push
gs
scas
das
cld
nopl
mov
dec
pusha
mov
mov
scas
xor
pop
jbe
cmp
and
fwait
std
cmpsl
test
sbb
test
cmpsb
ljmp
jle
hlt
mov
in
mov
push
or
mov
xchg
out
adc
jne
sub
icebp
xchg
hlt
gs
fdivrs
mov
mov
add
sub
sub
cs
arpl
xorl
cmp
shrb
mov
push
jo
insl
sub
clc
stos
shlb
dec
add
dec
rclb
pop
ja
icebp
add
mov
jb
jg
insb
in
mov
filds
add
cmpsl
mov
and
insl
int
lcall
jnp
lahf
in
idivb
inc
faddp
imul
or
xchg
push
ret
adc
movsb
pusha
mov
daa
inc
out
sub
mov
jle
cmp
add
pop
hlt
inc
in
and
in
add
pop
out
pop
mov
inc
cmc
in
sub
add
lods
imul
nop
pop
mov
aad
mov
adc
add
mov
add
or
jmp
pop
out
cld
ljmp
xor
enter
push
xlat
and
inc
inc
aaa
pop
dec
jmp
sahf
cmp
xor
orb
rcr
mov
pop
and
sub
ljmp
and
pop
pop
inc
mov
push
fucomip
cmc
xchg
sub
aaa
fwait
jo
call
sbb
push
test
sub
or
lea
hlt
inc
inc
xchg
lock
pop
xor
out
flds
sbb
or
nop
icebp
movsl
sbb
inc
jb
jle
jp
xlat
jnp
jmp
int3
shll
dec
sbb
xlat
xor
sub
scas
cmp
pop
out
mov
inc
cmp
xchg
insb
scas
sarl
icebp
push
cmp
pop
sbb
aaa
adc
inc
outsb
jnp
test
jge
mov
and
lcall
out
and
out
test
sub
out
in
push
pop
fdivrp
test
shrb
das
jmp
or
sbb
push
push
adc
aaa
cli
cmc
mov
inc
jno
jge
pop
orl
xchg
adc
cmpsb
xchg
cmp
cltd
aad
push
gs
mov
jno
xchg
add
jle
dec
dec
jno
xor
scas
scas
add
dec
test
pop
dec
xchg
add
lret
add
bound
jmp
pop
ret
sbb
subb
push
jo
mov
ja
sub
test
test
sub
push
js
inc
xlat
mov
push
xor
fidivl
inc
lods
mov
mov
outsb
pop
xchg
shrl
sti
pusha
or
cli
jno
or
out
xchg
dec
test
pop
add
stos
mov
shll
daa
ret
xchg
shl
pop
mov
test
inc
cmp
aaa
adc
pop
popf
pop
mov
xor
and
jl
mov
adc
sub
and
sbb
ja
rcr
mov
push
repnz
fs
nop
hlt
insl
inc
fistpl
out
cs
fstpt
repnz
scas
cmpb
mov
xor
cli
out
fisttps
dec
pop
dec
xor
loop
push
sbb
dec
dec
pop
pop
in
push
lret
adc
outsl
cli
loope
adc
flds
add
inc
movsb
nop
shl
sub
xor
clc
mov
adc
lret
rcr
cmc
mov
push
jne
pop
outsb
or
jmp
mov
std
dec
xor
aam
div
loopne
lods
inc
add
xor
xchg
adc
je
movsb
sub
xlat
test
adc
addb
dec
je
rorb
jge
cmp
ror
push
lret
push
outsl
sub
xor
jmp
xlat
xchg
test
mov
jmp
movsb
std
out
jge
arpl
push
ret
daa
les
jle
push
jp
gs
xor
nop
pop
aam
xchg
les
mov
inc
mov
lock
sbb
in
xor
mov
cmp
cs
rcrl
ficoml
in
adc
loope
sti
add
lcall
dec
dec
xchg
call
push
sub
lods
mov
pusha
sahf
pop
in
adc
lret
xchg
cs
cmp
in
hlt
mov
lods
enter
movsl
push
inc
call
clc
repnz
popa
push
cmp
mov
add
jns
pop
ret
lgs
cmp
push
into
fisubrs
cmp
insl
jp
sbb
das
jae
jge
sarl
test
subb
and
and
insb
lahf
mov
int3
jb
jmp
jb
call
outsl
repz
filds
clc
mov
lcall
dec
insl
or
pop
jl
or
add
in
leave
dec
mov
mov
xchg
adc
push
fs
mov
mov
xchg
mov
sar
xor
pop
inc
or
dec
dec
mov
dec
push
insb
mov
or
push
add
ret
movsb
test
mov
jo
jno
mov
addr16
or
dec
into
mov
dec
sbb
aaa
andl
and
loop
and
jmp
outsb
fs
pop
lock
dec
mov
ficomps
mov
int3
xchg
out
xor
fs
shll
in
push
in
cld
lods
dec
jmp
ds
pop
jl
loop
std
faddl
aaa
add
insl
mov
or
sbb
in
rol
cld
xchg
add
push
and
mov
push
scas
in
jb
xor
push
mov
xchg
stos
dec
ja
leave
lret
ret
sub
lock
xor
lods
push
adc
pop
fmuls
stos
mov
jno
push
popl
je
jmp
std
mov
into
pop
dec
es
cli
dec
dec
sbb
pxor
out
in
xchg
jl
mov
push
xorl
sbb
jmp
in
push
adc
movsb
lds
jae
jno
xor
or
test
mov
sub
cmp
daa
adc
lods
sbb
out
push
inc
sahf
push
in
test
jl
sbb
inc
arpl
mov
mov
or
xor
int
dec
inc
push
fisttpll
addr16
dec
xor
mov
repz
cmp
in
imul
pop
inc
les
push
jge
pushf
jne
adc
lret
mov
add
push
lret
rcr
adc
jo
lods
jecxz
das
lret
in
outsb
movsl
sbb
pop
imul
adc
sbb
sub
daa
incl
bound
pop
mov
pop
das
push
push
push
test
dec
aad
lret
mov
push
xlat
out
repz
ret
pop
push
jb
inc
mov
jne
sbb
pop
jmp
push
lret
push
aad
stos
fbld
adc
aaa
xchg
ret
into
addl
adc
shll
pop
ret
sub
jne
test
push
xor
xchg
leave
push
or
mov
jge
add
loope
jle
mov
pop
dec
imulb
jmp
sarb
stos
movsb
jno
xchg
movsb
imul
inc
pop
js
and
popa
mov
jno
in
mov
pop
jnp
push
sbb
int
add
out
sbb
movsl
add
mov
loope
inc
dec
in
push
mov
pushf
or
cmp
into
add
rorb
and
add
dec
loopne
dec
lock
fists
loopne
ds
add
int
pop
ret
nop
pop
loopne
sub
scas
int3
inc
aam
push
inc
xchg
lock
fsubrl
aad
daa
notb
orl
sbb
jnp
insb
dec
loope
lcall
sbb
je
jmp
sahf
arpl
pslld
adc
inc
inc
mov
push
jl
mov
stc
jp
cwtl
xchg
push
or
mov
fisubrl
mov
call
lods
negl
fisubl
lods
ja
call
imul
outsl
in
fiaddl
sbb
adc
dec
pcmpgtd
jg
sahf
xchg
jge
int
fwait
mov
bound
test
and
or
mov
lcall
out
aam
xor
andl
add
pop
inc
dec
out
mov
fs
and
cltd
fnstsw
xchg
test
hlt
lea
fwait
gs
call
rolb
xchg
shlb
test
jae
sub
mov
lods
cmp
dec
sub
jo
adc
call
lock
and
mov
mov
ja
and
or
arpl
scas
add
hlt
rcrb
cmp
mov
scas
inc
xchg
add
pop
jo
stos
dec
mov
sbb
loope
movsb
mov
dec
ret
jae
movsb
xchg
sbbl
pop
fisttpll
sbb
hlt
inc
lea
jo
scas
inc
sbb
mov
ret
xor
lret
int
dec
fimull
addr16
stos
lock
call
cld
aad
jae
daa
data16
mov
xlat
push
mov
fcomip
fsub
pop
xchg
sub
into
jb
mov
pusha
cwtl
sbb
shl
push
dec
push
pop
sub
and
out
cmc
dec
push
mov
xor
daa
adcl
lock
cli
negl
xor
cmc
cs
test
push
outsl
mov
mov
xchg
push
rcrb
adc
daa
push
sub
fistl
out
sarb
repnz
out
imull
push
shrb
xchg
adc
cmp
icebp
add
movaps
unpckhps
jne
stos
push
js
push
fs
imul
jbe
scas
xor
lcall
rorb
loope
add
in
into
pop
stos
outsb
mov
inc
fldt
inc
cmp
mov
in
adc
loop
andl
adc
in
hlt
gs
jnp
loope
and
sub
iret
inc
sbb
stos
jge
jle
mov
cmp
subb
lods
adc
adc
xor
mov
inc
push
sbb
mov
xchg
enter
or
adcl
add
inc
inc
ss
adc
add
and
mov
out
pop
mov
hlt
test
test
pop
enter
clc
jl
out
jp
mov
jns
rorl
cmpsl
jge
sbb
rcrl
adc
dec
repnz
and
pop
lods
lods
in
outsl
push
scas
insl
inc
xchg
or
cltd
cmp
lods
dec
cld
push
cmp
xchg
xor
cmc
out
xchg
stos
jle
sbb
ret
js
lcall
imul
mov
outsl
movsl
movsb
popa
aam
xor
or
stos
sbb
sti
imul
imul
adc
xchg
movsl
cmp
ja
cmpsb
and
test
xchg
jl
clc
fstl
add
or
or
fwait
xor
movsl
fsubs
jl
loope
out
mov
loopne
xor
xorl
xchg
xchg
cmp
pop
inc
in
adc
iret
or
scas
jnp,pn
test
testb
imul
fwait
jb
outsl
jecxz
inc
in
mov
jmp
mov
sbb
pop
adc
out
mov
or
dec
int3
shrl
pop
push
pusha
xor
nop
movsb
xchg
out
lret
bound
fistl
pop
or
or
in
push
push
cmpb
std
pop
inc
rcr
punpckhwd
push
cmpb
xchg
xor
inc
mov
hlt
pushf
and
inc
pop
mov
xor
inc
xchg
std
roll
or
xchg
sub
dec
inc
insl
sti
call
push
pop
pmulhw
ss
mov
mov
sbb
fisttpl
pusha
icebp
inc
das
clc
xor
in
add
jb
mov
icebp
sub
shl
jnp
adc
mov
sub
pop
negl
jecxz
cmp
loop
sub
and
test
ljmp
add
call
adc
pop
xor
stos
sub
rcl
insl
fsubr
and
xor
push
add
outsl
jne
jg
push
pop
das
sbb
xor
mov
inc
movb
dec
xchg
lock
dec
cmp
jmp
stos
out
lods
aas
push
add
popf
jl
imul
dec
scas
repnz
repnz
pop
test
mov
push
js
push
sub
in
cmpsb
and
stos
pop
or
dec
sub
adc
pop
ss
imul
mov
mov
push
xchg
jg
int3
outsb
imul
bound
inc
cmp
ds
add
push
xor
cmp
cmpsl
out
adc
mov
ret
jbe
fstps
ss
inc
cmpsb
xchg
mov
and
aaa
fisubl
ds
mov
jo
mov
push
dec
int3
ret
jp
inc
or
scas
in
and
test
mov
inc
add
stc
bound
mov
and
sub
inc
stos
imul
sub
xlat
cwtl
push
stos
jo
test
push
in
or
push
mov
fsubl
cwtl
xor
imul
hlt
and
lcall
jns
fwait
popa
jl
jp
mov
xchg
imul
xlat
pop
lcall
sub
fsubl
icebp
pop
pusha
and
sub
cltd
xlat
sub
fsub
pop
or
cmp
enter
pop
mov
adc
fmull
push
enter
or
mov
xor
cmp
jno
xor
les
stos
xor
xchg
bound
cmp
push
mov
jge
adc
je
mov
hlt
push
inc
outsl
lret
or
dec
jl
and
xchg
ret
push
lahf
and
stos
add
xor
into
popa
push
sub
mov
inc
clc
aas
leave
ss
testl
and
and
and
mov
or
mov
inc
sti
mov
add
inc
in
das
and
stos
cmp
test
inc
stc
cli
lods
mov
daa
and
mov
insb
int
mov
sub
add
lret
test
xor
cmp
add
pop
dec
cmpsl
sbb
ljmp
sub
inc
and
pop
xor
out
sbb
mov
inc
cmp
pop
pop
aaa
push
add
fstpt
fstpl
hlt
cmc
cmpsl
mov
adc
mov
stos
hlt
aad
fnstsw
mov
in
repnz
inc
mov
loop
in
sbb
push
sbb
movsb
dec
dec
test
or
roll
inc
mov
sub
push
jb
push
and
jle
test
in
push
cmpsl
lds
or
xor
out
or
push
dec
xor
ljmp
outsl
cmpb
rcll
rcrb
xlat
add
lods
xor
daa
fstl
insl
sub
cmp
js
cmpsl
enter
out
push
pop
ret
mov
mov
in
fcom
cmp
xlat
fucomp
std
mov
lcall
shl
fnstcw
or
mov
mov
cmp
adc
and
xor
insb
icebp
mov
and
and
sub
or
loop
testb
lods
fs
and
jp
lcall
pop
mov
aam
mov
ljmp
cld
jbe
sahf
pop
test
add
mov
les
sarb
shll
push
jo
pop
mov
aad
int
xchg
scas
shll
add
pop
fs
jb
push
ret
and
arpl
xchg
ret
pushf
out
dec
mov
out
fbstp
insl
push
xlat
and
push
and
xchg
and
mov
push
push
imul
popf
mov
stos
jno
pop
aaa
push
scas
mov
aas
sbb
cmp
dec
mov
sbb
pop
jae
cmp
add
jl
sub
or
gs
rcl
jmp
insb
fs
dec
shl
lcall
repz
cmpsl
test
iret
push
out
mov
rcrl
adc
add
mov
xchg
add
cld
sbb
ja
add
adc
mov
xor
xor
cmc
sbb
gs
int
mov
divb
sti
js
push
sub
add
and
fwait
jp
cmp
test
icebp
int3
fcompl
dec
mov
or
cmp
lods
lret
pop
lods
mov
lret
and
ficomps
xchg
hlt
push
push
icebp
in
jno
pop
mov
xor
div
ljmp
xchg
jge
mov
popa
xor
data16
dec
enter
dec
stos
mov
jg
xchg
add
add
and
dec
jb
adc
adc
push
sbb
scas
mov
int3
pop
call
cmpsl
push
or
push
pop
mov
add
xchg
fs
movsb
into
inc
push
ret
test
mov
stc
mull
jl
std
popf
adc
push
mov
scas
sub
mov
scas
fsubrl
mov
popl
stos
or
jecxz
in
pushf
pop
mov
test
push
cmpsl
jno
sbb
in
cmpsl
xchg
adc
fbstp
xor
fiadds
out
and
jecxz
xlat
adc
pushf
sub
push
and
data16
xchg
cwtl
loop
inc
inc
mov
jae
mov
xchg
push
adc
out
out
dec
mull
jge
bound
cmp
imul
movsb
leave
pop
and
mov
insb
sub
stc
pushf
jg
cwtl
cwtl
xchg
outsl
pop
jo
in
insb
shlb
xchg
or
fcmovb
inc
and
xchg
push
cmc
sbb
cltd
fs
cmp
dec
test
dec
xchg
cmp
clc
cmp
cwtl
and
test
mov
ficoms
lods
sbb
cmp
hlt
lds
inc
mov
pop
negl
ret
add
pop
inc
cmp
push
dec
es
inc
jecxz
push
mov
sti
jb
push
sub
loopne
inc
and
xchg
arpl
orl
inc
jo
jp
mulb
iret
pop
push
inc
or
and
fsubp
dec
jae
push
int
sub
sbb
ljmp
aam
mov
out
mov
aaa
ds
mov
aam
or
pop
lods
jge
lods
out
fistps
or
sar
xchg
aas
aaa
mov
xchg
lret
pop
fwait
outsb
pop
xor
outsl
stc
inc
negb
pop
aad
xchg
aas
fdivl
jbe
inc
xchg
bswap
nop
lods
pop
test
loopne
add
sbb
subb
in
mov
ds
lcall
sub
cmp
mov
pop
je
cmp
push
outsl
push
sbb
int3
rcl
xor
es
data16
std
subb
imul
hlt
push
cmp
xchg
dec
adc
inc
pop
push
mov
inc
je
testl
lds
jle
insb
fdivl
push
dec
dec
fstpt
out
jne
or
mov
leave
in
jg
es
adc
push
in
push
cli
cmp
sbb
mov
test
lahf
cmc
inc
cmc
inc
push
xlat
test
addr16
es
enter
add
mov
jge
sub
and
push
fiaddl
pop
cli
sub
cmc
aaa
mov
inc
inc
or
add
inc
cmp
jmp
sti
and
xor
pushf
leave
fs
cli
mov
xorb
repnz
sti
xor
mov
push
push
push
dec
xchg
les
rcrb
scas
dec
int
in
dec
mov
inc
dec
mov
enter
jae
incb
push
add
std
mov
fucomp
xorl
adc
into
mov
inc
fcomip
or
mul
lock
and
ds
ljmp
mov
clc
insb
pop
fdivrp
pmaxub
daa
adc
mov
xchg
cwtl
movsl
bound
and
and
ljmp
testl
and
imul
jp
lea
add
add
add
and
xchg
cltd
cmp
rorb
addb
test
dec
data16
int
ja
sub
inc
add
mov
lods
test
aad
cmc
imul
mov
out
xor
je
sbb
mov
cmpsl
in
shll
xor
fwait
add
push
out
fistpll
cmpsb
outsl
mov
das
mov
sub
mov
jmp
mov
test
inc
pop
jmp
outsl
sub
jle
enter
rorl
fidivrl
dec
and
sbb
cmp
call
xchg
push
or
xorps
or
loope
mov
pop
xchg
pop
repz
dec
sbb
test
push
pop
pop
loope
xchg
dec
pop
adc
dec
xchg
lahf
mov
mov
adc
cmp
mov
cwtl
mov
xchg
mov
incb
sub
pop
pushf
std
jp
push
lods
std
fs
or
fnstsw
xor
sbb
mov
mov
sub
sarl
gs
xchg
pop
add
dec
imul
xchg
cmp
out
push
movsb
mov
xor
lret
into
sub
adc
xchg
test
mov
push
std
cwtl
dec
sbb
pop
xor
inc
xchg
or
int3
ret
mov
lods
dec
inc
jg
fmul
lret
cmp
and
and
stos
pop
mov
ret
movsl
es
jns
dec
fldl
repnz
cmp
pop
cwtl
mov
add
dec
or
push
mov
dec
jno
dec
fldt
enter
mov
mov
xchg
mov
fnstcw
sbb
sbb
addr16
and
dec
mov
jnp
pop
es
xor
outsl
stc
or
jbe
aad
call
jne
pop
ja
xchg
dec
ss
daa
adcl
dec
pop
xchg
mov
mov
arpl
add
mov
pop
mov
gs
icebp
pmulhuw
orb
outsb
pop
jmp
cmpl
sahf
imul
out
pop
daa
inc
nop
xor
rclb
ja
push
aam
push
jns
sbb
scas
jecxz
inc
adc
cmp
cmpsl
sub
inc
aaa
iret
dec
repnz
jns
inc
xor
je
test
ss
lds
aas
inc
popf
push
stos
sbb
or
fildll
sbb
lret
jbe
sahf
mov
mov
mov
enter
test
and
pop
sbb
insb
push
sbb
xorb
inc
ljmp
fisubl
sbb
and
clc
xor
test
mov
sub
and
mov
sub
lea
pop
mov
lods
xchg
aas
loope
mov
inc
mov
lret
aaa
pop
scas
fmull
push
ficomps
jnp,pt
and
shl
movsb
mov
mov
jns
xor
rcr
mov
inc
repnz
sahf
xor
js
outsl
pop
rclb
and
cmp
cwtl
xchg
mov
sub
mov
sahf
sub
icebp
sbb
insl
cmp
into
stos
xchg
cmpsl
cld
aas
mov
dec
push
cwtl
sarl
dec
loop
pop
sbb
pop
add
mov
out
addr16
add
cltd
jne
fistpll
xorb
xor
sbb
rcrl
jmp
movsl
mov
lcall
push
in
in
xchg
push
pop
sbb
xchg
push
insl
mov
sahf
cmp
push
push
ret
cmpsb
stos
dec
sub
xor
dec
sahf
adc
cmp
sbb
mov
push
or
int3
pop
rcrb
jae
mov
shl
xor
sub
jecxz
popf
scas
stos
int
inc
test
mov
adc
pop
or
ds
mov
into
push
mov
outsb
dec
fdivr
cli
iret
ja
push
pop
loopne
xlat
mov
or
cmpsl
pop
xchg
pop
xchg
dec
lret
add
pop
mov
fists
jno
lock
push
incl
insb
out
clc
add
and
dec
fdivr
bound
arpl
int
jecxz
dec
xchg
aam
sbb
daa
pushf
fistl
stc
sbb
cld
inc
lret
decb
aaa
mov
or
cmp
jge
or
xorl
mov
mov
jge
push
icebp
xor
ret
mov
flds
addr16
dec
iret
repnz
or
mov
and
imul
jecxz
in
pop
ja
cmp
lods
dec
jnp
mov
sub
cmpsb
pop
jnp
dec
out
adc
sbb
push
mov
insl
pop
xchg
inc
and
or
mov
cltd
mov
or
outsl
scas
lods
inc
or
lret
addr16
nop
addl
ja
scas
mov
insb
cmp
dec
inc
sti
dec
mov
push
cltd
shll
lret
in
push
das
ljmp
sub
stc
or
dec
outsl
fistpl
testb
jne,pn
lcall
cwtl
insb
mov
pop
std
jmp
shlb
jb
dec
push
popf
jp
sbb
jecxz
cltd
fdivr
loop
push
mov
xlat
pop
pop
aas
lock
add
movsb
or
dec
sarl
or
pusha
sahf
cld
jmp
mov
pop
mov
sub
sbb
in
call
fcmovu
mov
out
repnz
sub
jmp
jne
and
jno
iret
icebp
test
or
and
out
cmpsl
mov
test
mov
push
and
or
add
inc
ret
rcll
xor
cmp
mov
adc
cmovnp
jne
sbb
rcrb
loopne
jp
fisubs
jbe
jecxz
shlb
push
insl
inc
sbb
lcall
icebp
dec
xor
movsl
in
loop
xchg
dec
jns
push
clc
mov
jo
add
xchg
andps
jno
inc
sbb
scas
enter
add
popa
outsb
mov
mov
mov
xchg
mov
fwait
sbb
pop
lods
dec
stos
fdivs
adc
cmc
xchg
cmp
ds
loope
scas
fcos
lods
sbb
icebp
push
lods
pop
ret
jp
adc
xor
fimuls
pop
and
dec
jae
shrl
add
or
inc
jo
lcall
jns
add
pop
push
mov
loope
xor
jns
andb
or
test
xor
movsb
cmp
inc
aam
lret
cwtl
jno
and
jecxz
sub
in
xchg
sub
out
outsl
pushf
ret
mov
jp
adc
dec
inc
push
xor
icebp
sahf
out
jge
loopne
out
lret
sahf
stc
and
hlt
jbe
or
movsl
adc
dec
mov
fdiv
inc
sub
pop
out
push
sub
lret
push
iret
add
push
lret
mov
sbb
mov
mov
fcomip
ret
cmp
push
jl
cmpsb
push
mov
rcl
mov
shlb
sub
ja
or
inc
pop
pop
inc
and
in
les
stc
sub
imul
in
or
push
fadds
ret
sbb
test
out
mov
rorl
jmp
mov
mov
and
cwtl
jl
dec
out
repz
mov
cld
fiadds
mov
shr
xchg
cwtl
dec
mov
into
jnp
imul
pop
into
xchg
dec
jbe
ret
ljmp
xchg
or
lds
data16
and
notl
xchg
push
sahf
push
jmp
mov
mov
push
ds
push
cmp
mov
insl
in
sbb
add
mov
cmp
inc
gs
mov
mov
fisttps
xor
xchg
inc
jnp
dec
mov
in
shrl
mov
mov
scas
ds
jnp
es
mov
mov
xchg
dec
pop
mov
or
mov
arpl
in
les
pop
pop
jecxz
imul
fdivs
inc
jp
push
pop
bound
inc
push
dec
out
sbb
mov
xor
push
inc
inc
jle
mov
xlat
and
cmpsb
jns
shrl
je
int
cs
faddp
xlat
out
push
mov
jne
faddl
adc
mov
lods
cmp
dec
xchg
sbb
je
and
push
and
pop
jbe
mov
not
sbb
and
push
inc
lahf
mov
lods
andb
dec
dec
fidivrs
dec
jo
inc
mov
inc
push
jge
xor
fcom
out
repz
fdivs
dec
pusha
pop
dec
xchg
pop
jl
xchg
test
xchg
outsl
sub
pop
jl
es
loopne
mov
jnp
repnz
push
adc
ror
pop
out
jne
popf
xchg
mov
ror
push
shrb
ret
or
mov
pop
outsl
lahf
lods
push
idivb
negb
sahf
js
mov
sbb
movsl
je
xor
fwait
inc
sbb
mov
sub
xor
out
or
cmova
adc
lea
sbb
push
jne
xor
mov
not
cld
sub
movsl
mov
aas
insl
pushf
or
out
int
cltd
ss
jp
dec
bound
cwtl
sub
inc
sub
test
adc
adc
xor
inc
inc
mov
jge
xlat
pop
lcall
in
f2xm1
cmpsl
out
xor
sbb
shlb
lcall
jecxz
sub
cmpsb
aam
inc
addl
decl
sub
cmp
xor
sub
pop
xchg
call
dec
sarl
pop
push
pop
std
mov
push
jno
shrb
or
fldl
dec
xor
add
dec
push
ds
xor
ja
test
and
mov
ret
or
xor
and
int3
scas
mov
cltd
insl
xlat
ret
xor
out
pop
enter
sbb
cmpsb
fsubrl
mov
fstl
add
push
and
daa
sbb
pop
enter
jge
sbb
dec
enter
daa
adc
fmuls
out
outsb
sub
add
fisubs
fs
lcall
sub
lods
adc
lods
jmp
data16
jge
mov
cmp
ret
das
add
push
add
xchg
dec
test
and
sbb
pop
cmpsl
pop
cmp
in
dec
add
inc
arpl
loop
je
or
and
push
mov
xor
rol
sbb
dec
push
push
adc
xor
xchg
sub
fmul
xlat
cmp
cmpsb
jecxz
and
xchg
push
sub
test
push
cld
pop
mov
mov
sub
adc
les
jne
xchg
xor
pop
xor
dec
das
nop
gs
add
push
inc
fstps
lcall
add
sub
pop
and
and
sub
jbe
loop
lret
xchg
lea
adc
jo
adc
xchg
es
cmp
rorl
xor
sahf
and
mov
rol
cmpsb
ss
das
or
stc
in
dec
iret
xorl
std
lcall
adc
lahf
fimull
ret
lods
ja
fwait
imul
lcall
inc
fsts
xor
jecxz
jae
xchg
stos
je
shlb
mov
push
push
or
xchg
cli
test
popa
test
or
idivl
iret
stos
rcrb
out
cwtl
adc
and
sahf
lret
mov
stos
mov
xor
leave
or
rorb
in
adc
in
lods
jno
xchg
cld
push
pop
mov
rorl
or
ljmp
dec
xchg
and
xchg
add
cli
rorb
call
jns
shll
in
xchg
rdtsc
stos
decl
loopne
popf
pop
add
subl
mov
mov
movl
xor
jmp
mov
adc
push
test
loop
push
push
adc
mov
roll
sbb
cmp
lods
pop
repnz
pop
out
add
mov
xor
mov
sbb
mov
aad
popa
popa
clc
or
stc
push
cmp
scas
or
aam
aaa
push
sbb
out
xchg
fsts
cwtl
jo
ja
cmp
je
lock
mov
ss
push
ret
push
push
int
pop
pop
aaa
cmp
cmpsb
outsl
or
add
or
push
les
pusha
testb
test
jle
mov
arpl
xchg
andb
xchg
sbb
cmpsb
bound
mov
jmp
enter
or
leave
lcall
push
pop
mov
push
sbb
sbb
sub
rclb
pop
das
repnz
nopl
xor
daa
mov
aad
mov
cld
insl
xchg
xor
mov
insl
sbb
jne
aaa
into
jg
movsl
push
sbb
pop
dec
mov
mov
into
jns
cld
mov
xchg
lcall
mov
je
call
filds
add
fldenv
dec
pop
add
sub
cltd
dec
scas
fists
cltd
xlat
loope
test
push
push
mov
stos
jb
out
jl
cmp
pop
sub
aaa
shl
cmp
dec
insl
scas
stc
xor
inc
jno
mov
cs
push
xlat
lock
jg
insb
stos
pop
negb
hlt
jae
repz
insb
pop
les
out
cmp
int3
pop
mov
jg
pop
sub
dec
fldl
or
in
sti
cmp
addl
jb
shll
pop
popa
push
inc
mov
pop
pop
jnp
mov
or
jl
nop
jo
jns
inc
bound
sti
shll
int3
leave
cld
push
pop
insl
mov
mov
hlt
mov
jbe
ljmp
mov
inc
ds
pop
rorl
pop
lret
enter
pop
adc
lahf
insl
jno
sbb
xor
cmpsl
push
icebp
dec
into
insb
push
mov
in
aas
les
jle
push
jp
pop
sub
dec
je
pushf
mov
push
pop
xchg
ja
push
cmp
lea
mulb
jbe
add
push
sbb
jle
test
push
xor
shl
push
sbb
adc
ficoms
mul
ss
in
into
mov
or
jo
jnp
addr16
fsub
and
mov
enter
mov
movsb
pop
aas
pop
cmp
cmpsb
cmp
les
pop
pop
or
mov
fnstsw
jge
lock
mov
mov
out
sti
pop
jg
push
or
push
pop
sarl
push
mov
mov
jno
xor
out
imul
sbb
mov
jbe
cmp
mov
xlat
or
xchg
ficompl
repnz
out
xor
and
cmpsl
lods
adc
cmp
dec
cmp
cmc
sahf
inc
dec
bound
mov
mov
test
scas
xlat
jae
push
and
fisttpl
pop
fwait
movsl
mov
pusha
sub
xor
addr16
inc
aam
cld
cmc
das
mov
int
pop
es
mov
andb
sub
andb
aam
sub
bound
xorl
orb
shrb
inc
xchg
stos
mov
popa
and
aam
xchg
iret
jp
xor
lret
movsl
pusha
mov
arpl
ds
in
lock
sub
popa
pop
sbb
add
cld
gs
mov
sbb
dec
xor
sub
out
les
in
xor
and
movsl
mov
movsl
in
mov
movsb
adc
push
mov
cli
out
lods
in
hlt
mov
sub
pop
push
cmp
cmp
push
fsub
imul
jns
or
and
aad
inc
lahf
xor
in
xchg
sub
ja
jnp
inc
scas
xchg
bound
aas
xchg
lock
into
add
xchg
push
dec
stos
add
jns
pop
mov
cli
push
ljmp
call
test
sub
and
mov
clc
push
push
mov
push
jp
mov
hlt
inc
in
add
mov
pop
movb
and
in
outsl
lods
adc
inc
xchg
jl
jbe
or
andb
fidivrl
fstpl
add
mov
leave
fisubrs
data16
aaa
orl
mov
imul
out
mov
invd
xorb
push
xchg
shlb
or
popf
xchg
je
mov
sbb
mov
sahf
decb
cld
stc
push
lods
xchg
sti
jno
push
xchg
inc
push
mov
out
or
xor
xor
mov
jmp
loop
sbb
sub
jbe
leave
test
in
cmp
or
shll
sub
inc
out
add
out
push
mov
pop
imul
aaa
sbb
fsubrs
lahf
aam
testl
iret
fxch
inc
mov
mov
xchg
push
enter
jne
cmp
fs
cld
jnp
sbb
clc
int3
inc
pusha
push
outsb
mov
icebp
add
inc
int
mov
add
ret
test
out
xor
sti
arpl
lods
call
loope
cmpsl
imul
call
push
adc
mov
and
in
pushf
data16
call
loop
aas
fadds
hlt
lock
les
mov
out
or
sahf
jp
imul
pusha
inc
mov
add
aam
leave
jb
sahf
aas
repnz
in
dec
leave
push
lret
add
scas
mov
sbb
cwtl
adc
test
add
daa
int
outsb
pop
xor
outsb
test
iret
jbe
mov
loop
or
ss
fisttps
in
loop
lods
out
clc
or
cmpsl
std
lods
iret
adc
dec
addr16
cmpsb
lret
jnp
jmp
movsl
cmpsb
push
pop
leave
ljmp
scas
out
imul
jmp
sbb
xchg
lret
int
mov
pop
lret
cmpsb
sbb
ljmp
pop
dec
xor
pushf
mov
pop
jae
fwait
adc
or
cmp
dec
xor
or
inc
sbb
es
pop
test
dec
lahf
push
jo
jnp
inc
xchg
icebp
dec
jmp
or
call
loope
out
movsb
jmp
movb
mov
mov
cmc
repz
mul
fldenv
jae
mov
sub
movsb
fucomp
lods
sub
and
pop
sbb
ror
or
jno
sub
mov
xchg
mov
push
lret
ret
jge
xor
mov
fistpll
fldenv
pop
aas
shlb
loopne
sub
inc
mov
rcl
sbb
push
imul
xchg
loop
adc
mov
imul
out
sahf
or
fcomps
add
icebp
sbb
inc
aas
push
loope
jae
js
sbb
inc
out
fidivs
xor
sarl
aaa
cmp
sub
gs
jne
xor
data16
incb
sbb
xchg
mov
mov
in
ret
sub
mov
stos
cmpsl
cwtl
jo
mov
pusha
jne
pop
xor
mov
cwtl
push
add
fidivrl
adc
mov
push
mov
mov
popf
mov
pop
or
cmp
test
insl
jecxz
loop
popf
aad
sbb
mov
aad
and
and
mov
push
or
jecxz
insl
daa
and
cltd
xor
cmp
inc
ret
imul
cmc
add
xor
sub
cltd
dec
sti
jbe
cwtl
add
push
cli
mov
inc
fiaddl
pop
mov
lcall
fisttps
add
inc
stos
movsb
insb
fwait
arpl
push
into
push
adc
xchg
xchg
aaa
sarb
mov
xchg
lods
mov
ds
jp
ljmp
arpl
jns
stos
push
fcmovb
in
ret
lahf
pop
rep
les
dec
push
lret
lds
out
sbb
or
hlt
ja
mov
jecxz
subb
push
fcmovb
jne
mov
notl
rcr
adc
mov
xorb
popa
rcr
sti
pop
push
sub
jmp
mov
jg
fstps
cld
jns
add
sub
mov
das
adc
push
movsb
pusha
inc
dec
cmp
std
push
sub
leave
fnstcw
mov
mov
jmp
sahf
push
pop
lret
lret
add
jecxz
rep
jne
and
dec
and
sub
outsb
icebp
dec
cmp
sub
push
cmpb
or
inc
aas
cmpsl
lahf
lret
jp
iret
outsl
loop
lret
push
and
outsl
xchg
or
pop
cwtl
and
imul
mov
push
sahf
cmc
lahf
push
push
divl
mov
or
mov
sbb
xchg
mov
inc
and
dec
xlat
mov
cmp
clc
sbb
kxnorb
adc
bound
mov
or
mov
sub
insb
add
jmp
sub
icebp
mov
out
or
inc
mov
scas
jmp
mov
push
push
mov
inc
pusha
fistl
mov
iret
and
xchg
mov
loop
in
xor
mov
jl
mov
pop
mov
jge
and
hlt
arpl
notb
iret
insb
daa
jmp
fwait
inc
fistpll
popf
icebp
pop
cmpsl
sbb
and
dec
jb
and
aaa
test
bound
jmp
inc
flds
scas
add
clc
cld
js
xchg
mov
inc
sbb
arpl
leave
lahf
jmp
fmuls
xor
test
and
loop
out
xchg
lock
jp
mov
mov
mov
mov
nop
xor
repz
mov
ds
mov
mov
cmp
cmc
mov
mov
adc
out
jmp
fwait
mov
mov
push
xchg
mov
sbb
push
lds
test
or
fistps
test
lods
xorl
dec
dec
gs
or
mov
xchg
jecxz
mov
xlat
mov
popa
add
add
sbb
inc
add
out
cld
xchg
es
push
mov
jno
inc
iret
jmp
push
sbb
mov
fsubl
addr16
inc
inc
popa
into
shll
ret
mov
lahf
adc
insb
push
ljmp
xchg
fs
dec
test
loopne
stc
add
out
nop
out
push
clc
jge
ret
inc
fwait
jbe
xor
fisubl
dec
or
push
hlt
adc
push
sbb
sbb
test
pop
sti
jp
add
xor
hlt
lret
ss
cmc
xchg
dec
lock
jle
sub
sti
movsl
pop
divb
xchg
cmp
ja
in
lds
dec
leave
into
fcompl
int
rcll
dec
test
mov
jmp
ja
and
mov
xchg
decl
push
jecxz
mov
stos
jo
sub
loopne
xchg
sub
push
or
mov
mov
xorb
mov
popf
sub
and
lcall
mov
or
inc
cmp
mov
add
adc
inc
adc
lret
fdivl
add
xor
and
loope
mov
xor
insb
fstpl
loope
mov
std
cli
xlat
fsubrl
enter
and
or
pop
sub
filds
add
test
pop
repnz
jmp
pop
pop
push
push
sti
js
xlat
cmp
dec
aad
imul
sbb
rcrb
jne
dec
mov
fwait
push
daa
loop
aas
ja
cmpsl
add
push
xor
cmpsl
int3
insb
mov
mov
fwait
daa
or
pop
mov
shlb
jne
cmp
test
mov
xor
xchg
xchg
loope
fldenv
test
push
add
sbb
lock
push
jmp
div
pop
cmp
sarb
or
pusha
xor
es
nop
repnz
addb
sub
das
lret
mov
xchg
mov
and
pop
ror
inc
daa
cli
lds
inc
arpl
stc
aaa
or
add
cmp
imul
insl
icebp
dec
mov
dec
sbb
xlat
mov
fs
inc
ret
inc
lods
cmpsb
ficoms
mov
insl
les
outsb
ficoml
push
inc
addb
imul
scas
mov
in
es
mov
cmp
jnp
rcr
nop
or
push
dec
pop
les
push
dec
sbb
xchg
scas
outsb
mov
push
xchg
loope
jge
lahf
jle
xor
sarl
push
xchg
pop
cs
insl
sbb
jmp
mov
cmp
pop
xchg
ja
dec
lcall
mov
push
sti
pop
ret
lret
dec
test
test
pop
test
das
cmp
add
xor
aas
sbb
ds
push
xorb
repnz
or
cs
sub
jmp
mov
das
ffreep
jns
mov
or
xlat
stos
repz
loopne
pop
stc
pop
push
adc
adc
loopne
xor
jecxz
sbb
orb
xchg
pop
add
js
repnz
add
lods
lret
arpl
xor
rorb
jg
or
mov
inc
imul
aaa
xchg
sbb
mov
xor
out
scas
mov
in
cmp
loopne
xchg
cld
lock
loop
push
cld
test
jge
nop
fldlg2
push
mov
jle
dec
jg
jae
popf
dec
aas
pop
aad
stc
cmp
sub
ds
pop
mov
adc
pop
stos
popa
fisttps
shlb
int3
mov
sahf
lods
push
pop
js
xchg
inc
imul
in
ja
pusha
fildl
adc
das
mov
dec
cmp
icebp
fists
xchg
and
mov
mov
xchg
in
inc
sti
lret
xchg
xchg
in
inc
les
mov
mov
repnz
std
xor
in
popl
das
inc
inc
jp
and
cmpsb
testl
mov
popa
or
push
xor
je
mov
mov
or
pop
sub
fstps
les
roll
xor
jecxz
mov
mov
int
fidivs
lcall
insl
ljmp
and
push
jmp
fdivrp
ds
ficomps
xchg
movsl
dec
inc
sbb
cmp
jb
pop
clc
cmp
in
mov
into
mov
pop
out
adc
mov
in
dec
add
sub
dec
sarl
into
or
dec
add
mov
out
mov
mov
pop
mov
adc
ja
lcall
sub
arpl
ret
pushf
dec
sahf
xchg
mov
fldenv
test
aad
jo
dec
lods
dec
rclb
repnz
jne
push
add
aam
pop
mov
nop
aam
mov
push
inc
aam
cmp
in
stc
bound
jae
or
mov
cwtl
fbstp
in
jge
dec
adc
xor
or
sub
push
mov
fs
pusha
and
stc
sub
pop
mov
fsubs
or
ds
rorb
jb
pop
or
pop
test
xchg
adc
popf
movsb
mov
pop
push
out
loope
sub
xor
push
gs
fstp
aaa
pop
mov
adc
pop
xchg
mov
jmp
mov
lcall
mov
fisttpl
push
mov
shl
iret
xchg
ret
or
aas
push
fistl
push
aaa
dec
sarb
out
test
test
in
lea
and
or
repz
gs
pop
pop
cmp
data16
aas
sub
adc
mov
icebp
push
dec
hlt
pushf
mov
ss
mov
fnsave
mov
adc
push
js
aaa
push
inc
mov
div
hlt
je
clc
and
sub
stc
xchg
pop
push
pop
mov
stc
lea
out
add
adc
sbb
data16
insb
sub
and
in
add
sbb
fstl
shl
out
in
inc
fst
das
cmp
out
xlat
les
and
inc
inc
imul
sub
cld
and
add
jns
or
mov
xor
lods
lret
aam
cmp
stc
fldl
fst
test
xchg
mov
lods
stos
popf
or
pop
daa
push
sbb
icebp
add
popf
jl
test
sbb
xchg
rcrl
add
xchg
pop
sar
inc
jno
inc
fsubr
cmp
movsl
or
adc
insl
movsb
lret
cmp
dec
sub
mov
cwtl
mov
mov
or
nop
mov
sbb
pop
cli
andb
lds
in
mov
lock
out
push
imul
fistps
push
sbb
mov
and
insl
and
adc
add
out
pop
xchg
std
in
paddq
mov
call
add
mov
test
pop
xchg
lods
test
mov
movsl
push
sbb
mov
loopne
cmc
push
cmp
cmp
mov
cmpsl
mov
dec
pop
vpacksswb
jb
mov
pop
push
arpl
xchg
ja
sub
and
xor
pushf
mov
mov
mov
lret
inc
dec
jg
mov
mov
fdivrs
in
mov
pop
mov
push
hlt
sub
xchg
push
ret
dec
cwtl
push
clc
and
jecxz
sti
inc
call
in
movsl
rcrb
mov
mov
stc
in
sbb
sub
jp
pop
or
movsb
add
sub
mov
lods
shlb
popf
into
in
push
adc
out
pop
lds
cmp
out
xor
add
es
scas
push
out
ficompl
sub
test
and
bound
inc
mov
or
cmp
hlt
pop
fstl
aas
xchg
inc
cli
test
lods
cs
fsub
aad
sysenter
pop
and
xchg
clc
push
xchg
shlb
mov
push
aaa
idivb
adc
inc
cltd
xor
adc
andb
adc
dec
push
push
push
stos
cmp
test
mov
add
push
xchg
push
add
scas
and
out
sub
jmp
and
jb
popl
cmc
test
scas
outsb
mov
lds
jp
sldt
sbb
out
xchg
cmpsb
fsubs
loope
or
sub
data16
js
lock
mov
fdivl
and
test
mov
pop
jle
pop
push
add
daa
js
int3
popa
in
ss
or
ret
repz
aad
xorl
cmpsb
icebp
jb
popf
lea
inc
cmp
inc
in
pop
dec
mov
and
and
push
or
push
xor
mov
mov
stc
fistps
les
xchg
sbb
or
xchg
ficoml
dec
jne
jmp
sbb
in
cmp
mov
pop
cli
xchg
cmp
incl
dec
dec
in
push
addr16
mov
test
push
mov
and
in
mov
adc
jecxz
lret
repnz
jo
fucomi
or
mov
scas
jmp
or
push
fcompl
push
call
cld
add
jnp
jp
jb
pop
cmovge
scas
mov
insl
or
cmp
aam
and
dec
mov
scas
inc
jae
adc
or
int
js
test
add
nop
xchg
jns
lahf
loop
mov
outsb
sbb
add
lret
or
stc
in
push
push
sahf
pop
mov
mov
add
leave
lret
sarb
mov
mov
les
dec
jg
cmp
std
mov
push
jae
adc
sarb
ja
test
pop
pushf
std
adc
xchg
bound
sub
cmp
cltd
push
xchg
popf
xor
movsb
scas
or
sub
mov
iret
xchg
out
fsubrl
ss
jmp
push
int3
jle
pop
enter
xchg
pop
ss
jl
test
mov
inc
int
cs
int3
imul
cmp
aad
insb
loopne,pn
push
cmp
out
mov
sti
clc
je
mov
divl
jg
jecxz
pop
mov
xor
sub
scas
insl
pop
or
ret
sub
out
cmpsl
mov
mov
pop
fld
add
gs
mov
or
cltd
push
pop
dec
outsb
in
insl
pop
cmp
push
addl
push
repz
clc
fldt
pop
and
mov
popf
sbb
xchg
push
jnp
inc
cwtl
push
or
arpl
popl
or
and
or
pop
fiaddl
divl
jle
add
mov
mov
jmp
test
scas
xchg
lahf
divps
pop
stos
pop
mov
test
mov
fxch
xor
fwait
mov
rcrb
jno
mov
sub
outsb
sbbb
xchg
xor
data16
xchg
inc
rorb
push
out
lret
sbb
push
cmp
loope
or
xor
ret
into
xchg
and
pop
xor
sbb
mov
arpl
lahf
jns
cltd
sbb
cmp
jl
mov
std
xor
mov
sbb
lods
out
gs
loope
pop
les
push
push
out
ds
xchg
dec
xchg
adc
pop
imull
js
xor
es
mov
mov
xor
inc
popf
push
popf
jmp
int
call
or
fidivrl
icebp
scas
int
in
int3
xor
mov
mov
pop
dec
insl
insb
lods
in
add
idivl
mov
call
filds
mov
sbb
push
push
adc
int
inc
aaa
or
adc
pop
and
pop
in
jecxz
sbb
dec
sti
mov
sti
dec
loopne
insl
mov
repnz
sti
mov
and
movsb
lcall
outsb
repz
pmaxub
fstpl
fdivs
xchg
mov
es
xor
dec
inc
inc
add
outsb
iret
loop
cli
test
mov
ds
popf
xor
adc
repnz
push
mov
jge
or
xchg
arpl
cmp
rol
sbb
stos
cmp
xchg
fistl
pop
cs
loop
or
ss
es
jbe
enter
icebp
and
adc
out
ds
test
out
push
loopne
cmpsl
lret
push
scas
jbe
shl
ljmp
fwait
into
xchg
push
and
add
cmp
push
cld
fadd
ds
out
int
jge
or
out
add
adc
outsl
dec
pop
add
sarb
ja
xlat
in
aas
jge
lea
sub
mov
es
addr16
test
call
pop
mov
jmp
out
arpl
das
jb
in
or
adc
daa
aam
movsb
je
fisubl
inc
push
sub
xchg
les
xor
push
mov
stos
outsb
mov
fwait
into
out
ljmp
repnz
iret
xor
dec
addl
je
or
push
xchg
insl
cmc
jns
dec
das
sbb
cwtl
jmp
dec
jbe
cmc
sbb
sbb
pop
and
stos
lods
in
inc
inc
arpl
push
mov
mov
pusha
orl
pop
pop
fnstenv
stos
outsl
loop
jge
xchg
ja
dec
mov
sub
sbb
daa
pop
repnz
push
fs
gs
dec
shll
lea
push
jne
push
in
faddl
stc
pop
pushf
enter
pop
jmp
fdivs
xchg
ret
fs
arpl
shll
pusha
fnstenv
lret
test
sub
xchg
pop
mov
push
jg
inc
loopne
jle
dec
pop
pop
mov
push
or
clc
mov
xorl
adc
cltd
cmp
sub
test
sub
pop
push
shlb
aaa
nop
mov
outsb
pusha
shll
push
nop
stos
shll
mov
mov
shlb
push
and
lret
lods
das
mov
add
add
in
xor
cli
cmpsl
mov
in
sub
int3
mov
loop
ret
iret
imul
cmpsl
pop
push
and
push
mov
popf
aaa
out
test
adc
std
xchg
loopne
inc
mov
mov
arpl
jl
pop
sti
mov
out
shrb
sub
and
std
xchg
orb
sbbb
movsl
shr
xchg
bnd
cmc
xchg
adc
mov
dec
movsb
xor
push
ds
mov
cmp
scas
inc
arpl
mov
mov
jne
popf
lods
add
pusha
ficoml
fwait
cmp
mov
jp
or
pushf
imul
push
dec
notl
xor
fsub
mov
dec
inc
mov
std
aad
push
cmp
outsl
iret
dec
jbe
sub
push
jb
in
jle
mov
mov
pop
push
adc
in
add
leave
iret
pop
cltd
fwait
jmp
ficomps
stc
xchg
pushf
pop
decb
xor
dec
pushf
dec
loopne
and
xchg
clc
call
or
jecxz
stc
lret
fidivrs
push
fnstcw
mov
mov
pop
and
or
in
adc
mov
movsl
and
cmp
xchg
jg
jns
outsl
sbb
outsl
orw
ficompl
test
cmp
sub
push
or
out
push
jnp
pop
into
dec
xor
mov
add
repz
lret
mov
loopne
les
mov
dec
or
mov
loop
dec
jnp
mov
sub
fiaddl
aas
cmp
cli
ja
sahf
lahf
addr16
jmp
sbb
push
or
femms
mov
pushf
shrl
xchg
xor
cwtl
mov
jge
outsb
mov
jle
mov
adc
mov
push
xchg
xchg
and
inc
lods
inc
fiadds
xor
lahf
and
mov
std
ljmp
in
fucomp
mov
xor
fdivrs
mov
push
jbe
xchg
in
add
pushl
push
push
pushf
push
mov
jmp
lock
adc
les
sbb
push
and
inc
sub
jae
test
xor
and
pop
dec
pushf
test
xchg
pop
pop
repnz
in
pop
int3
into
std
xlat
sahf
ljmp
repnz
add
icebp
cmpsb
jne
mov
cld
bound
push
or
call
pop
jmp
mov
fldenv
cltd
mov
rcrb
ljmp
out
xchg
jmp
std
adc
push
and
add
cwtl
xchg
js
std
cld
pop
sbb
mov
mov
notl
xchg
mov
insl
jno
enter
in
icebp
shrl
daa
call
scas
movb
inc
mulb
inc
push
xchg
and
sbb
xchg
xor
add
sbbb
jns
xchg
test
inc
inc
mov
lods
add
xchg
punpckhbw
jle
scas
sbb
repz
mov
fcomps
cwtl
xchg
mov
cmpb
dec
and
mov
ss
or
popf
jmp
xor
mov
fiaddl
adc
mov
int3
leave
psrlq
nop
adc
pop
aad
sbb
mov
push
add
cmp
shlb
das
movsb
imul
repnz
xor
dec
sbb
inc
notl
inc
dec
daa
sub
mov
daa
mov
mov
incb
mov
std
mov
mov
cmp
dec
sbb
pmaddwd
mov
cwtl
stos
fnsave
jns
mov
add
fbstp
aam
dec
inc
ljmp
sub
fcmovnb
outsl
dec
aad
fadds
pop
dec
xorl
mov
xchg
popf
test
enter
fbstp
push
pushl
out
dec
scas
mov
daa
loope
int3
clc
in
ror
sub
das
cwtl
mov
xor
stos
dec
cs
daa
push
rcl
dec
jle
mov
fucomp
push
hlt
testb
fucomip
bound
scas
int
mov
fadds
cmp
in
divl
and
insl
cltd
dec
ja
or
test
add
lds
xor
dec
inc
dec
adc
aas
lds
xor
inc
mov
xchg
adcl
sahf
std
out
test
xor
rcl
test
leave
int3
sbb
jne
pop
rclb
movsb
xor
insl
add
cwtl
js
addr16
je
push
lea
cmp
fisubs
mov
xchg
cmp
lahf
jb
sbb
ja
fidivrs
shll
orl
mov
cmp
jno
dec
insl
inc
inc
push
vmread
test
mov
jle
test
inc
sub
adc
inc
sbb
cmpsb
rorb
lods
iret
frstor
lods
lret
pop
stos
inc
jmp
mov
ss
dec
xchg
cmp
ret
adc
xor
loopne
lods
add
insb
pop
mov
cmc
adc
popa
jbe
pop
pusha
pop
cmpsl
push
add
loope
push
ss
pop
test
fdivrs
adc
and
test
cmp
jecxz
subl
adc
add
dec
and
fwait
adc
ja
jb
pushaw
sub
xchg
inc
mov
ja
popa
ljmp
fmul
iret
xor
sar
pop
xchg
cmc
or
jl
jp
dec
insl
push
ss
mov
or
hlt
xor
cwtl
jns
clc
jns
lret
shlb
inc
enterw
xchg
inc
fwait
mov
loop
mov
sub
mov
ja
mov
cmc
shrl
jg
out
mov
into
call
sub
adc
jecxz
xor
adc
jecxz
mov
sub
pop
in
test
push
mov
negl
cld
push
cmpsb
sbb
pop
test
jne
sbb
push
cmpl
nop
xor
add
jecxz
js
push
xor
rcr
adc
jp
mov
push
mov
xlat
pop
lock
inc
dec
lods
mov
clc
sub
mov
mov
stc
hlt
hlt
push
inc
pop
data16
jb
dec
xor
sbb
loop
cmp
sbb
cwtl
ljmp
jns
cltd
lret
add
loope
aaa
cltd
xchg
icebp
add
jns
jmp
inc
mov
mov
xor
jno
mov
cli
mov
loopne
xchg
clc
sub
xchg
add
cmp
rcl
inc
ss
lea
inc
cltd
fisttps
xchg
push
mov
jbe
inc
je
inc
lds
add
mov
or
push
jge
jle
inc
push
xor
cmpl
cmp
dec
scas
pop
fldenv
cwtl
pop
adc
je
and
scas
in
sbbl
daa
psubq
bound
je
outsl
sub
push
pop
fsqrt
pushf
movsb
dec
pop
fmul
ja
fdivr
mov
jg
jo
fcompl
icebp
push
in
ret
adc
adc
push
or
or
adc
call
push
and
mov
push
dec
sbb
in
pop
mov
jge
or
and
es
stos
and
xchg
fdivs
cmp
subb
call
mov
cmc
lea
push
sbb
std
xor
add
push
stos
mov
cmc
and
and
test
dec
sub
test
sub
into
or
enter
mov
push
mov
sbb
mov
loope
aad
cli
or
je
je
mov
scas
pop
jecxz
xchg
fldcw
rolb
mov
xchg
sarl
jcxz
adc
pop
sub
mov
pop
sub
fistl
push
out
leave
xchg
ror
xor
shl
sbb
mov
xchg
mov
inc
mov
pop
sbb
mov
xchg
cmp
mov
mov
outsb
les
pushf
and
sahf
cmp
and
mov
dec
es
jle
cmpl
lock
stos
or
dec
cmc
les
adc
adc
movsl
push
sub
xor
or
jp
mov
push
popa
in
popa
cmp
out
mov
cmpl
hlt
shll
pop
jbe
inc
ret
pop
cmpl
sti
pushf
decl
xchg
movsl
adc
or
js
xlat
push
jbe
or
test
xchg
mov
daa
outsl
or
jp
pop
lds
mov
test
add
inc
cmp
scas
mov
and
das
and
inc
aaa
lahf
cmc
sbb
jno
xchg
cmpsl
je
and
push
adc
daa
pop
les
sbb
divb
cmp
add
cltd
pop
ljmp
out
clc
xor
jle
xor
into
cmc
or
add
mov
push
dec
xchg
test
leave
orb
pop
outsb
incl
repz
xor
cmp
sti
jbe
sarb
push
push
cmp
cmp
orl
lret
movsb
iret
icebp
dec
xchg
subl
sub
or
shll
xlat
sbb
int
push
push
xchg
mov
xor
test
jmp
dec
push
fstl
insl
xor
add
repnz
sti
adc
jnp
mov
rclb
sarl
xor
in
dec
cwtl
mov
push
cmpsl
arpl
adc
adc
jnp
js
test
dec
cmpsl
sub
xor
faddl
push
mov
dec
in
rcll
xchg
mov
shl
add
adc
rcrb
mov
mov
int3
divb
dec
pop
rorb
leave
sahf
xor
btl
int3
xchg
or
dec
jno
sti
out
sahf
icebp
mov
sbb
inc
mov
jb
ja,pt
adc
sub
stos
lods
dec
xor
sub
mov
jp
push
jo
ss
bound
push
and
and
jne
call
mov
mov
test
es
outsb
or
sub
mov
xchg
inc
aas
mov
xor
dec
insb
mov
sub
in
and
mov
add
inc
rorb
jl
mov
mov
shl
incl
inc
je
dec
aad
mov
mov
jb
dec
dec
popf
sbb
test
int3
imul
ss
xor
icebp
push
ja
sub
mov
and
sbb
sbb
inc
push
inc
jle
iret
mov
cmp
mov
inc
mov
xlat
inc
pop
adc
push
dec
push
add
rcrl
xchg
cltd
lods
int
ficoms
stos
stos
repz
inc
loop
test
mov
scas
add
or
decl
cmp
jl
jmp
nopl
shll
xor
mov
stos
mov
inc
cmp
and
loop
mov
jmp
into
sub
mov
les
lcall
or
movsl
imul
fldt
mov
or
rorb
addl
xchg
stos
sbb
rcrl
pusha
or
jne
cs
js
scas
xchg
fisubs
mov
rol
pop
pop
test
mov
inc
call
loopne
mov
cmpb
mov
push
and
inc
les
jno
cltd
mov
inc
cmp
xchg
mov
lods
inc
jl
push
push
popf
xchg
adcl
mov
jle
shll
mov
sbb
xor
outsl
popa
lods
pop
mov
pop
cmp
dec
xchg
testb
femms
add
pop
stc
pop
sbb
in
sbb
pop
cmp
nop
xor
xor
aam
push
sbb
mov
add
aad
jo
push
mov
repz
hlt
je
xor
xor
push
and
inc
nop
xor
cmp
pusha
in
negl
mov
aad
fldt
sbbl
mov
add
aaa
sbb
pop
repnz
mov
jmp
push
std
or
cmp
xlat
fsts
ficoms
lock
adc
push
add
jne
add
pop
test
test
jnp
repnz
out
js
imul
fstl
test
xor
in
int3
xchg
int3
pop
imul
paddsw
push
dec
pop
enter
and
jae
cmp
in
stc
adc
dec
cmp
sub
stc
bound
out
jne
aad
movsb
lret
dec
aad
xor
insb
cld
ds
cmp
push
push
pop
mov
xchg
mov
jbe
push
mov
cmp
push
mov
and
loope
scas
imul
mov
adcl
mov
dec
push
flds
lahf
sub
hlt
inc
sysexit
jnp
fistl
push
je
adc
sub
mov
loop
mov
and
out
jno
xchg
and
loop
popf
inc
dec
push
pushf
popa
jl
xchg
ficomps
int3
xor
jae
mov
push
xchg
call
and
cmpsl
mov
add
push
sub
fildl
fsts
sbb
test
pushf
arpl
dec
adc
jecxz
mov
popa
rclb
push
loop
mov
in
iret
js
sub
jnp
jns
icebp
xor
mov
ret
iret
pop
adc
int3
lock
pop
fbld
roll
pop
paddsb
push
das
xlat
out
ljmp
lcall
hlt
and
mov
mov
push
mov
vsqrtss
cmpsb
dec
std
adc
jecxz
jle
lods
jmp
outsb
mull
jbe
shrb
push
mov
push
test
data16
mov
dec
adc
fdivrp
lret
push
scas
data16
je
mov
sbb
jo
mov
sbb
sarb
add
es
cs
add
std
jbe
outsb
add
sbb
inc
fstpt
pop
cmpsb
je
flds
sarb
sbb
sub
cli
sbb
cmp
int
adc
push
jnp
cli
xchg
add
outsl
addl
jmp
cmpsl
sbb
test
fiaddl
lods
je
sub
daa
iret
mov
push
add
dec
xchg
clc
icebp
mov
or
mov
jle
push
ret
test
mov
jns
pushf
xchg
dec
add
inc
mov
push
push
mov
sub
and
dec
dec
pop
add
cmp
xchg
jecxz
mov
cmp
aam
pushf
sub
and
inc
jp
subb
pop
call
rcll
je
lods
pop
add
shr
xchg
xor
out
cmp
rcrl
mov
enter
shll
cmc
std
sub
mov
fcoml
scas
cmp
xor
popf
cmpsb
adc
mov
or
aad
and
add
mov
loope
hlt
inc
xchg
dec
in
mov
cmp
gs
decb
jge
sbb
outsb
cmpb
int
sbb
out
add
and
push
mov
and
jno
xchg
ljmp
xchg
jge
push
addr16
jle
xorb
aas
fnstcw
stc
push
pop
fisttps
jns
nop
ja
aas
mov
pop
addr16
int
jmp
jg
adc
loop
jecxz
rclb
movsl
neg
push
pop
and
stc
pop
mov
sarl
into
es
imul
inc
jno
pop
dec
call
rclb
push
pop
std
scas
rorl
mov
jbe
clc
fbstp
pop
movsl
repz
or
insb
pop
add
inc
pushf
scas
rorb
loopne
pop
or
rcl
out
mov
divb
mov
or
fldcw
mov
mov
movsl
dec
mov
mov
add
rolb
push
fstpl
or
nop
inc
dec
cli
xlat
addl
push
ljmp
loope
cmpl
pop
jge
ds
out
push
daa
mov
mov
sbb
popa
pop
dec
mov
mov
jbe
cmc
lea
lods
cli
push
dec
call
cmp
ja
fisubrs
data16
rep
repnz
mov
and
into
stos
adc
jp
sbb
xor
mov
in
adc
inc
leave
add
vpavgb
adc
push
in
xchg
mov
aad
xchg
sarb
sub
imul
mov
push
das
int
and
adc
adc
mov
mov
or
dec
sub
lods
cltd
out
xchg
dec
mov
js
pushf
repz
mov
lds
repz
jle
push
adc
inc
and
pop
nop
cmp
std
nop
inc
in
jecxz
ror
cltd
hlt
pop
dec
mov
fidivs
sbb
in
shll
sub
test
push
in
cmpsl
das
sub
mov
lret
add
sub
dec
jno
pop
arpl
pusha
iret
rcrl
data16
xchg
jnp
mov
add
pusha
movsl
das
sub
ja
stos
and
dec
test
mov
add
push
push
aam
mov
roll
lea
cwtl
sub
insl
mov
mov
jns
aam
sahf
loopne
add
rcrb
mov
sbb
adcb
dec
sahf
outsb
dec
sub
mov
jmp
cmp
jb
ret
dec
leave
xor
inc
test
int
fcoms
jge
cwtl
cmpsl
repnz
pusha
ret
repz
mov
and
dec
cmpsb
out
inc
adc
push
dec
xchg
pop
test
jne
and
movsl
inc
adc
and
cld
flds
stos
or
sub
jle
ret
lahf
ja
cld
dec
insb
xor
jmp
clc
loope
pop
mov
jbe
push
jbe
xlat
popa
adc
arpl
subb
mov
mov
rclb
orb
dec
xchg
push
hlt
in
das
in
xor
out
mov
mov
add
cmp
hlt
call
jb
out
jb
sub
rcrl
repz
dec
mov
outsb
cli
inc
shll
mov
aas
dec
cmp
xor
sahf
xor
and
xor
adc
in
fildll
lds
xchg
mov
hlt
iret
xor
sti
xchg
mov
pusha
aaa
es
mov
sub
mov
outsb
jmp
mov
out
lock
dec
repz
pop
mov
das
aas
or
mov
push
out
sarb
fimuls
divl
loop
ja
sbb
into
imul
test
aad
cmp
mov
inc
outsl
cmp
or
dec
popa
and
jno
and
nopl
loopw
adc
nop
dec
cmp
xchg
pop
and
stc
mov
sbb
bound
and
test
jp
fisubs
lods
and
push
xorl
in
dec
cwtl
outsl
pop
movsl
int
push
iret
in
fidivrs
mov
out
out
mov
push
ljmp
in
dec
cmc
pop
jecxz
cmp
pop
fistpl
add
imul
mov
push
repz
inc
andl
aas
xor
call
in
lds
sbb
and
inc
outsl
repz
jne
mov
lret
sub
mov
xlat
and
mov
scas
cmp
mov
lret
call
inc
das
pushl
cmpsb
imul
ja
rcll
subb
add
sbb
fsts
fmull
aas
int3
and
outsb
outsl
dec
xchg
and
cli
mov
addl
xchg
shlb
xor
jae
js
jo
test
ret
pop
cwtl
mov
pop
iret
or
test
adc
or
xchg
sbb
loopne
or
adc
cld
mov
test
lret
dec
mov
adc
sbb
pop
inc
cmpsb
mov
ret
sbb
repz
sub
push
pop
cmc
sub
adc
roll
push
nop
int3
sbb
fldenv
sub
lock
or
jbe
or
pop
or
xchg
out
dec
js
ret
sbb
adc
fimull
mov
dec
mov
sbb
in
aad
popf
xor
pop
das
inc
aas
stc
or
and
aam
jns
popa
adc
lcall
subb
insb
icebp
and
lods
dec
dec
mov
mov
jmp
xchg
add
fildl
jmp
nop
pop
mov
mov
movl
jmp
add
jnp
jnp
sbb
push
mov
mov
mov
xor
dec
mov
jmp
ret
andl
cmp
mov
negb
fucomip
mov
or
adc
xchg
enter
into
scas
test
mov
es
xchg
movzbl
aad
or
add
stos
sub
stc
in
lods
sbb
dec
xor
loopne
ds
lods
aas
adc
adc
add
or
pop
cli
adc
adcl
cmp
pop
xor
jp
adc
imul
cld
add
testb
mov
jo
ret
inc
add
xchg
jnp
push
in
sti
ss
imul
mov
ljmp
enter
lret
call
in
pop
or
gs
mov
arpl
dec
shlb
divb
pop
sbb
pop
out
jnp
adc
push
iret
dec
pop
inc
and
negl
test
mov
push
aam
outsl
pop
and
pop
push
xchg
frstor
loope
or
in
or
pop
in
jo
adc
lock
rclb
arpl
xchg
dec
movsl
into
xor
arpl
push
xchg
loopne
sbb
push
lds
ud1
rolb
repnz
imul
and
dec
pop
push
push
and
loope
addl
sahf
mov
nop
xchg
jb
pop
outsl
jne
push
jbe
cmp
xlat
in
into
push
repnz
mov
jp
push
mov
clc
cmpsb
stc
ds
sti
aad
nop
dec
jl
add
test
nop
imul
push
jmp
cmp
in
cmp
jge
lock
std
jmp
xor
mov
outsl
add
adcb
dec
adcl
ljmp
jnp
nop
popf
mov
add
out
add
sti
xlat
das
push
popa
mov
inc
cmp
out
pop
lcall
xor
push
ficoml
xchg
insb
repz
insl
mov
lock
add
cmp
cmpsl
movsb
sub
int
pop
cmp
pop
mov
rcll
nop
lret
push
xchg
sub
xlat
pushf
xlat
and
push
insl
mov
mov
add
lret
mov
inc
mov
jb
push
ror
sub
mov
pop
movsl
aam
push
aaa
data16
cwtl
cld
rcr
inc
mov
ljmp
cld
imul
insl
push
push
and
popl
lods
pop
in
sub
mov
jmp
mov
push
sbb
mov
mov
pop
mov
push
fisubs
insl
jno
adc
jg
mov
add
clc
xor
pop
push
cmp
mov
adc
mov
popa
outsl
adc
popa
outsb
daa
push
shrb
sub
sarb
mov
fs
push
fnstenv
lds
scas
mov
add
ds
into
xor
and
push
jno
jae
and
fwait
pop
push
add
aas
iret
aaa
sbb
cmp
fnstsw
mov
bound
bound
cli
or
repz
inc
add
out
fmull
sub
jno
push
jb
xchg
cwtl
push
ja
pop
sbb
aam
xor
pop
mov
out
jp
jnp
jbe
cmp
in
add
sbbb
inc
fstl
fstps
and
sarl
push
inc
dec
orl
outsb
pop
add
add
xchg
jg
inc
mov
cmp
or
pop
shll
out
adcb
mov
or
outsb
sbb
jne
cmp
xlat
adc
ds
orb
popw
xor
fcompl
pop
jo
or
lahf
mov
adc
test
popf
popl
lret
mov
and
inc
out
lret
xchg
push
add
jmp
int
cmpl
mov
xor
loope
fwait
inc
adcb
icebp
mov
icebp
daa
bound
jo
orl
sub
clc
test
pusha
pusha
inc
sti
hlt
xchg
adc
pop
jno
pusha
inc
clc
aam
loop
xchg
jmp
xchg
push
inc
dec
mov
outsb
xchg
or
sbb
mov
inc
hlt
div
inc
ret
cs
mov
addr16
mov
scas
mov
dec
adc
cwtl
out
add
incb
dec
mov
imul
in
fisubl
lcall
scas
sbb
aam
sbb
ljmp
inc
sbb
hlt
jno
pop
jecxz
loopne
xchg
mov
pop
dec
lcall
push
out
test
std
mov
or
cmp
xor
xchg
dec
ljmp
cmp
incb
and
inc
stc
adc
xchg
movsb
js
mov
pcmpeqd
out
pop
nop
stc
xchg
cmp
push
test
pop
outsl
imul
inc
sbb
pop
scas
ret
and
pop
fidivrl
enter
jnp
sti
push
in
mov
scas
sub
inc
push
mov
adc
sub
jb
mov
mov
jb
dec
xor
jno
roll
sbb
andb
or
addb
adc
inc
test
mov
pop
or
stos
jp
adc
loopne
aaa
and
adc
push
push
loopne
pop
addr16
stos
fs
dec
enter
jmp
sub
adc
mov
mov
pop
rcl
or
loop
jl
les
mov
addb
popa
insl
cmp
lret
enter
xchg
dec
call
mov
xchg
xchg
inc
popf
mov
ret
adc
lret
inc
adc
xchg
sarb
iret
gs
shll
imul
cmp
push
mov
repz
and
push
pop
cltd
shrb
repnz
jecxz
int
pop
mov
sar
cmpsb
fildll
in
int3
in
xor
je
into
sti
clc
into
imul
mulb
push
sub
mov
xchg
xor
or
test
fs
arpl
jne
xchg
int3
jmp
cld
xorl
jmp
lds
imul
pop
mov
popl
and
nop
jle
mov
ss
xlat
ret
mov
inc
sbb
or
and
roll
nop
jbe
test
or
es
ret
inc
and
xchg
or
and
iret
insl
das
inc
lea
cld
and
mov
pusha
stos
std
out
xchg
xor
xor
pop
lret
jbe
int3
test
mov
test
pop
mov
jg
adc
cli
cli
cmc
or
push
mov
test
push
rcrb
mov
cld
xor
ja
aaa
and
xchg
scas
mov
xor
add
sub
sti
cli
sbb
lahf
lock
in
fcomps
inc
pop
dec
adc
sti
push
mov
inc
push
div
sbb
bound
sbb
lret
cmp
stc
pushf
adc
sahf
lret
push
and
shlb
inc
sahf
std
jl
cmp
or
arpl
jae
or
dec
jl
dec
js
mov
cmp
inc
call
mov
pop
in
lock
adc
out
and
in
lock
pop
push
xchg
stos
xchg
aam
les
xchg
mov
iret
in
scas
int3
in
mov
cmpsb
rcl
add
mov
hlt
icebp
outsl
mov
adc
movsb
push
enter
repz
jg
mov
jbe
mov
xchg
flds
int
pop
pop
aad
int
enter
pop
xor
daa
movsl
gs
test
cmp
in
sub
leave
pop
shr
push
fisttpl
fstpl
xchg
testb
divb
mov
push
inc
dec
mov
adc
push
or
xchg
in
aas
pusha
loope
cmp
aas
pop
adc
cmpb
daa
cld
loope
push
jb
loopne
inc
outsb
inc
push
cmp
mov
mov
jl
jg
out
mov
jne
inc
mov
pop
js
movsl
out
outsb
test
sub
mov
or
repnz
adc
pop
cmpsb
imul
sar
push
ja
arpl
lock
sahf
or
aas
jle
mov
loope
mov
mov
xchg
push
imul
in
out
xchg
cmp
mov
call
je
sbb
xchg
pop
movsl
xor
xor
ret
outsl
dec
aad
add
pop
push
std
cli
inc
dec
push
pop
movsl
outsb
je
fnstenv
sbb
dec
sahf
dec
inc
dec
xor
and
mov
jb
inc
aas
sub
in
sarb
movsb
push
pop
imul
mov
sub
pop
jg
cmp
jg
xchg
daa
dec
mov
adc
jl
inc
les
mov
jmp
pop
push
aad
roll
test
ficoms
gs
adc
arpl
test
jne
and
mov
shlb
mov
pop
mov
jle
mov
cmpb
xor
cmpl
dec
dec
push
push
cmp
dec
shrl
mov
add
xchg
push
sbb
popf
xor
or
loope
aad
jnp
movsb
popf
dec
movsl
popa
dec
dec
cmp
int
jg
inc
jmp
xor
push
push
outsb
scas
and
mov
and
leave
mov
ror
adc
nop
in
pop
cld
add
notb
xchg
mov
ljmp
or
cmp
push
cwtl
add
sbb
test
and
mov
cmpsl
and
imull
std
out
and
ljmp
or
fcompl
adc
jae
mov
inc
xchg
insb
insb
xchg
ds
cld
inc
jg
inc
into
or
pop
jne
mov
aad
shll
inc
cwtl
xchg
mov
lea
popa
leave
test
push
adc
std
cmp
push
push
pop
arpl
jecxz
and
adc
in
outsb
mov
push
dec
mov
shl
movsl
push
dec
push
rcl
mov
movsb
in
sbb
aas
pop
daa
or
ss
popf
dec
pushl
sbb
sub
cltd
xor
jmp
aam
jbe
jnp
fs
or
jbe
shrb
adc
arpl
cmp
xor
fiadds
dec
jge
and
repz
dec
push
push
aam
or
lret
stc
inc
test
cli
test
sbb
in
sbb
mov
js
inc
push
push
xchg
add
clc
and
xchg
rcr
sub
pop
insl
or
jb
cmc
jl
filds
xchg
cmp
fidivs
adc
mov
cmp
test
jo
jno
jne
fisttpll
adcb
push
push
cld
inc
cli
ficoms
in
cmp
lahf
das
fwait
test
or
mov
dec
jmp
dec
aad
or
int3
jns
jb
hlt
cmp
rclb
add
rclb
gs
jge
or
add
pusha
cmpsl
pop
rorl
movsb
xorb
insl
fiaddl
mov
fistl
push
in
fisubrl
push
insl
mov
sub
push
cmp
psrlw
fdivrs
sbbl
jo
sbb
sbb
data16
cmp
push
cmp
pusha
imul
inc
xchg
add
pop
inc
mov
cld
cwtl
pop
adc
dec
jge
js
out
test
jmp
pop
bound
mov
mov
push
mov
pushf
cmp
mov
mov
push
nop
stc
test
sbb
adc
jb
repz
pop
cmpsl
inc
xor
pushf
add
mov
insb
popf
push
adc
andl
cmp
inc
xchg
sub
adc
or
in
push
jmp
aad
or
scas
adc
dec
dec
popf
mov
sti
dec
xchg
pop
js
push
dec
movsb
pop
je
xor
mov
and
mov
jmp
bound
xor
mov
lahf
int
cwtl
mov
mov
jno
fisubrs
les
cs
inc
push
repnz
stc
cld
fldenv
ret
lcall
mov
stc
daa
testb
loop
hlt
sarl
rorb
pop
push
mov
mov
repnz
or
mov
cmp
decl
fbstp
cli
cwtl
mov
fnsave
test
pop
outsb
xchg
ljmp
cltd
loope
test
pop
adc
jp
es
arpl
nop
mov
adc
mov
pushf
inc
push
cmp
mov
je
jno
jae
add
adc
lds
cmp
addr16
mov
pusha
cmp
cld
add
mov
rcrl
pop
hlt
dec
pop
mov
enter
adc
in
and
mov
imul
call
push
lret
pop
xor
popf
sbb
lds
inc
jp
sti
and
hlt
jecxz
outsl
add
mov
pavgw
jne
xor
movsl
mov
lret
das
jbe
sbb
add
mov
adc
mov
cltd
fdivs
and
or
hlt
aas
add
scas
bound
out
scas
scas
testl
jge
mov
lods
int
lcall
into
and
xor
cmp
arpl
xor
idivl
cwtl
or
add
add
cmpsl
sub
xchg
adc
mov
loopne
sbb
mov
and
es
or
mov
lds
xchg
lahf
ja
adc
jb
test
push
rolb
ja
sbb
iret
shlb
imul
mov
mov
bound
sub
mov
inc
xchg
sub
test
pop
cmp
popa
pop
mov
inc
add
fwait
inc
lret
cmpsb
stc
shrl
mov
mov
in
dec
aad
xchg
ja
int3
mov
stc
dec
ds
sti
jg
mov
jno
ja
mov
hlt
xor
jl
xchg
nop
insb
jmp
mov
lock
dec
mulb
iret
rol
xor
pop
scas
sbb
hlt
cmpsl
stos
movsb
out
jmp
or
jge
add
mov
inc
add
sub
movsl
bound
mov
dec
inc
cmpsl
loop
and
gs
jge
sub
push
into
hlt
lfs
testb
pop
add
push
mov
cli
cmp
out
sar
jecxz
jge
push
roll
jnp
mov
xor
ds
into
inc
dec
je
adc
in
mov
cmp
add
dec
xor
inc
ljmp
push
push
insb
cmp
inc
or
mov
xorb
sub
insb
push
fsts
cwtl
xchg
pop
rcll
dec
lret
dec
test
mov
add
xchg
dec
out
and
xor
mov
cmpsl
push
pop
cli
add
sbb
into
mov
ret
and
add
push
and
rolb
or
icebp
arpl
push
into
cwtl
enter
add
push
fists
out
sub
or
ss
into
jl
xlat
imul
hlt
mov
enter
push
sbb
cmpsl
popa
jecxz
xchg
popa
add
adc
jo
mov
lcall
adc
jecxz
pop
orb
stos
daa
push
xor
mov
ret
xchg
push
cmp
fnstenv
sbb
out
lret
rcll
addr16
stc
movsl
push
sbb
ret
dec
lods
and
pop
ret
pop
pop
addr16
or
jge
dec
mov
push
aaa
popf
sub
ret
or
lret
divl
push
mov
scas
in
mov
pop
ds
cmp
lea
popl
test
jg
dec
and
cltd
bound
hlt
ret
pop
xchg
enter
sti
xchg
mov
in
or
out
insl
sub
mov
cltd
xor
push
mov
in
dec
gs
inc
jmp
dec
fmuls
mov
sub
mov
sbbb
andl
mov
idivl
shlb
arpl
xor
mov
movsb
and
inc
inc
jae
adc
push
jmp
rcrl
mov
adc
jmp
insb
popa
adc
stos
mov
mov
jecxz
push
in
cmp
xchg
stos
in
fdivl
mov
inc
mov
mov
sar
push
mov
mov
fs
ret
das
gs
dec
add
adc
xchg
dec
call
mov
addb
push
sub
xchg
jmp
sub
sub
daa
shrl
mov
mov
and
mov
inc
jl
dec
xchg
stos
mov
xorl
in
scas
inc
rcl
cs
jg
jge
adc
repnz
insl
cmp
lods
pop
cmp
outsb
dec
shrb
mov
rclb
stc
lock
mov
shlb
xor
mov
aam
xor
add
mov
icebp
cmp
dec
mov
idivb
xor
inc
push
xorl
and
pop
mov
xchg
jne
loope
xchg
mov
call
enter
pop
adc
cltd
and
out
cli
clc
sbb
loope
cli
lds
pop
rcr
xorl
cs
xchg
stos
dec
pop
sbb
test
or
and
cmp
push
inc
rorb
pop
cmp
lahf
push
mov
xor
insb
and
inc
sbb
dec
outsb
or
xchg
rcr
ds
mov
add
xlat
mov
leave
fnstsw
sbbb
sbb
fwait
add
pop
mov
icebp
scas
xor
xor
dec
mov
push
mov
jmp
bound
xchg
xorl
cmp
pushf
sbb
adc
mov
or
mov
push
pushf
cmp
sbb
jl
arpl
jmp
rol
sub
test
lret
inc
push
adc
addr16
lcall
inc
sbb
ja
jnp
cld
jae
mov
or
daa
jmp
inc
cmp
inc
push
xor
add
mov
or
test
out
pop
ljmp
ret
inc
jmp
sub
cmp
xlat
jle
lahf
ljmp
sub
in
xchg
mov
xor
push
ret
jle
stos
jge
mov
fs
sub
js
out
mov
xchg
popf
cmc
fsubr
pushf
ret
out
mulb
loopne
fists
lock
xor
cmp
scas
adc
xor
adc
addb
sbb
ret
jb
pop
or
aaa
das
popf
adc
dec
mov
push
cmpsb
mov
jecxz
idivl
and
mov
es
and
fisubs
xchg
pop
add
enter
add
in
push
insb
inc
sub
sub
js
adc
pop
sti
mov
pop
push
fsub
repz
cs
outsb
movb
enter
push
imul
mov
push
clc
repnz
or
sbb
lods
shlb
outsb
out
sbb
inc
xchg
xor
adc
cli
sbb
loop
push
leave
pop
sbb
ss
sub
lea
loopne
pop
cltd
and
xchg
sbbb
inc
outsl
mov
les
daa
mov
add
rorl
cld
in
iret
lea
add
add
adc
fstpt
xchg
out
lock
call
pushf
stos
mov
data16
rorb
sbb
inc
das
and
lea
and
jne
jl
aas
push
fcmovne
mov
push
inc
pop
xchg
lock
lea
xor
das
loope
and
jo
cld
mov
push
int
dec
inc
mulb
cmp
iret
mov
or
mov
inc
dec
pop
fiaddl
sbb
cltd
adc
push
fsubr
lea
mov
adc
push
sahf
imul
push
mov
mov
sti
lcall
jne
mulb
cmp
enter
mov
movsl
ds
cmp
psraw
stc
fdiv
pusha
mov
sub
sub
adc
mov
shll
adc
les
add
icebp
fcoml
lods
xchg
in
xchg
incl
jb
dec
adc
add
jnp
xlat
pop
loopne
sbb
sbb
out
shlb
int
cmp
cmp
jae
sub
cmp
add
aam
push
dec
bswap
sahf
jle
cmp
jle
std
push
xchg
mov
enter
cmp
rorl
loop
aaa
inc
cmp
mov
jg
loopne
and
fldl
pop
fiaddl
xchg
fcmovnbe
cltd
inc
int3
pop
mov
or
adc
cmpsl
push
pop
das
jns
mov
aaa
inc
divl
sub
pop
add
leave
stos
xor
push
stc
push
mov
sub
insb
adc
inc
and
mov
cmp
adc
mov
mov
xchg
aas
sahf
popa
xor
clc
mov
frstor
lods
stos
mov
imul
cwtl
sbb
sarl
jp
lahf
in
shl
scas
add
in
idivl
lock
sbb
roll
push
mov
cmp
aas
mov
add
sbb
dec
xor
push
or
je
sbb
lods
repnz
add
sbb
shll
dec
mov
stos
sbb
push
into
sbbl
push
xorl
xchg
cltd
repz
or
mov
std
cmpsl
sbb
pop
adc
and
outsb
or
mov
in
mov
cld
mov
lcall
pop
push
adc
mov
jae
lahf
lds
pushf
xchg
push
lods
aaa
int3
fists
loop
stos
mov
and
or
mulps
jae
xchg
gs
lret
lock
xchg
mov
popf
stc
sahf
push
and
daa
pushf
aaa
or
mov
and
dec
jmp
lock
shlb
cmp
dec
fs
add
cmp
inc
enter
or
cwtl
cmp
mov
push
in
adc
dec
movsb
shlb
retw
mov
xor
xchg
push
sbb
adc
inc
das
fsubp
add
popa
arpl
inc
dec
jle
fsubr
aam
icebp
sub
ljmp
adc
lret
test
mov
xor
xchg
mov
push
fcoml
test
sbb
fisttpll
push
pop
fldt
insl
movsl
popa
sbb
mov
mov
into
enter
sub
lock
xchg
sbb
fwait
xchg
sbb
into
jg
mov
jae
xor
aas
jmp
push
repnz
xchg
dec
ds
push
cli
cli
push
in
xor
in
pop
xchg
or
push
rolb
cmp
xor
movsl
xor
xor
add
xchg
cmc
lods
test
out
xchg
sahf
mov
ds
lock
push
xor
pop
cmp
adc
stos
fldenv
rorl
popa
dec
inc
fcmovnu
and
cmpl
jmp
fwait
sbb
pushf
jl
in
sbb
mov
add
fisubrs
push
or
bound
and
stos
xchg
daa
movsl
dec
or
mov
xor
xchg
insl
xor
mov
push
stos
cmpsl
jnp
daa
cmpsl
cmc
ret
out
add
and
mov
dec
push
lret
push
jle
test
push
cltd
mov
imul
push
xchg
dec
inc
and
xchg
and
and
das
sub
sbbl
das
fcmovne
imulb
jle
fdivp
rorl
or
out
scas
jg
leave
es
aad
decl
cwtl
aam
push
pop
nop
mov
test
icebp
out
cmpsb
mov
adc
movsl
pop
rol
test
idivl
sbbb
sbb
roll
push
add
aas
pop
push
xor
push
sbb
mov
pop
lret
jns
repz
jmp
mov
stc
push
test
aas
mov
aad
dec
cmp
add
outsl
mov
cmpsl
sbb
xor
icebp
in
mov
mov
jo
icebp
push
jne
fsubrl
pop
jno
aas
sub
icebp
mov
fstl
cld
enter
inc
hlt
push
dec
subb
lahf
pop
mov
pushf
sbb
fsubs
pop
je
cmc
inc
into
xchg
mov
dec
les
ja
mov
xlat
outsb
int
movsb
mov
arpl
add
scas
xor
aad
lret
pop
push
mov
aad
iret
shll
sbbl
pop
fs
pop
outsl
push
out
loopne
testb
lods
jb
repnz
pop
enter
sub
fbstp
jae
rolb
idivl
subl
pushf
adc
push
pause
scas
adc
and
in
sahf
mov
dec
fldcw
xchg
repz
std
xchg
mov
enter
push
sbb
pop
lret
icebp
or
out
and
test
leave
ret
lods
enter
loop
push
sbb
shl
addr16
mov
stos
xor
shrl
lret
sub
ret
hlt
push
clc
pop
inc
loop
nop
sub
fld
cmp
loope
mov
adc
mov
cmpsb
pop
push
xchg
xchg
or
sub
pop
and
add
or
or
jle
jge
pop
and
enter
xchg
xchg
dec
lret
sub
ret
orb
sbb
neg
inc
movb
push
fs
fs
or
std
rcr
ret
fsubs
lahf
jmp
rolb
mov
popa
xor
call
mulb
jmp
ret
movsb
sub
xor
push
loope
and
jno
sti
int3
imul
out
testb
mov
insl
ret
cmc
stos
jg
dec
sbb
es
lret
cmc
les
dec
out
xor
leave
add
jo
lods
loope
jo
pop
lds
mov
andl
adc
pop
pushf
and
pop
test
and
das
push
imul
loop
into
mov
and
cmp
cmpsb
cld
imul
mov
dec
iret
cld
jns
pop
dec
dec
mov
cmc
sub
pusha
mov
mov
push
pop
xchg
pusha
fwait
imul
popa
cmp
movsb
dec
and
ja
fisttpl
add
adc
cli
ret
pop
scas
cmp
es
dec
push
add
out
inc
pop
cmp
and
movsb
leave
sub
cmp
or
test
cmp
mov
outsb
fldenv
inc
sbb
pusha
inc
cmp
ret
cmpsl
test
mov
mov
mov
jg
leave
jle
pop
aam
or
js
jg
test
jns
add
leave
inc
dec
sti
xor
stc
jle
sub
std
fistpll
cmpsb
loop
pop
xlat
lret
mov
jae
femms
push
aam
add
jbe
gs
clc
jae
pop
stos
pop
mov
in
jbe
stos
push
sub
cli
cmpsl
test
xchg
mov
push
shlb
pop
aas
dec
adc
lret
push
xchg
rcr
mov
xor
jb
mov
pop
sbb
in
sub
jb
pop
int
aam
rcrb
sbb
and
mov
test
mov
jp
jp
into
pop
pop
loopne
push
xor
and
and
xchg
adcb
loop
xlat
dec
cwtl
jnp
xchg
loop
mov
out
and
jmp
insb
pop
dec
aam
fsubrp
jbe
jae
fmull
rorl
out
mov
inc
loop
ror
add
mov
fiadds
mov
enter
xor
fwait
in
dec
stos
mov
mov
xchg
pop
orb
xor
mov
xor
dec
or
outsl
mov
jnp
sub
negl
add
cmpsl
sti
dec
dec
in
fisubrs
out
push
dec
sbbl
insb
aad
fisttpl
pop
cmpsl
sbb
stos
cmp
pusha
cli
rcrl
nop
hlt
cmpsl
aas
xor
mov
jne
add
mov
das
or
sbb
out
mov
jge
sub
jle
cmp
addr16
movsb
ljmp
inc
in
inc
push
bound
push
mov
aam
xorb
jmp
int
shr
mov
fs
xchg
xrelease
mov
sub
mov
jns
int
mov
pushf
push
jne
imul
sbb
add
push
adc
iret
aas
test
jnp
aad
jo
push
jbe
dec
cmp
push
cltd
dec
add
inc
inc
cmp
cmpsl
xchg
lret
leave
adc
mov
call
shll
cmpsl
sbb
add
and
fisubrl
out
xchg
gs
adc
jns
stos
add
pop
jae
adc
imul
arpl
test
mov
mov
lret
xchg
cmp
fwait
std
ror
fisubs
stos
imul
test
inc
sub
in
sub
ret
movsl
into
arpl
jp
mov
test
adc
adc
scas
data16
data16
xchg
mov
mov
roll
adc
sahf
or
fsubrl
int3
xlat
pop
aas
fstps
icebp
sahf
or
and
inc
repz
test
dec
in
aam
inc
mov
pushf
test
and
and
xor
pop
scas
bound
aad
sub
pop
into
xorb
scas
inc
test
xchg
and
aas
cltd
in
jmp
js
stc
and
mov
cli
shlb
pop
mov
out
fisttps
jp
dec
or
xchg
mull
mov
pop
icebp
adc
dec
sub
pop
xchg
add
and
bnd
xlat
mov
loop
mov
pop
jno
mov
repz
xor
popf
int3
outsl
and
xchg
push
cmpsb
prefetch
inc
push
imull
sbb
test
sbb
lret
ss
lods
stc
int
and
fwait
pop
lock
adc
or
adc
test
sub
fsub
les
pop
iret
push
test
aad
movsb
int3
push
lods
outsl
sarb
inc
in
pop
mov
jmp
fxch
xchg
sub
xchg
pop
jle
negl
inc
jg
fwait
mov
movsl
mov
mov
imul
add
clc
movsl
add
add
mov
cmc
lcall
cmc
jle
fstpt
sbb
loope
xchg
cltd
inc
push
xchg
stc
das
in
mov
sbbl
cld
outsb
iretw
cld
cmp
mov
xchg
int3
es
pop
inc
xlat
push
pop
cmp
add
mov
mov
dec
xor
adc
xchg
sbb
jne
xchg
insb
pop
test
jns
iret
lret
push
xchg
ss
rol
std
push
mov
std
test
lahf
adc
iret
mov
jae
popf
test
fs
push
push
push
lds
add
out
add
bound
xchg
mov
in
lods
xorl
decl
adc
dec
jno
xchg
pop
mov
sbb
xchg
dec
mov
test
push
xchg
mov
dec
fildll
xchg
cld
dec
iret
sarb
orb
in
popa
sub
int
adc
xchg
adc
out
fists
add
es
sar
fdivr
mov
xchg
nop
and
or
cli
call
jb
lahf
mov
enter
out
incb
fcmovu
scas
xor
sbb
xchg
pop
loopne
fcomps
je
loopne
popa
aas
daa
insl
ja
pop
lods
adc
xor
sarl
andl
mov
xor
shr
cmpsl
adc
xchg
or
cmpsl
jl
push
or
scas
bswap
fadds
and
sub
fs
loopne
shll
mov
stos
mov
imul
in
stos
fnstenv
or
cmp
mov
shll
shr
lock
insb
fcoml
pop
ds
push
pop
out
mov
xor
in
mov
fdivrl
inc
mov
fsubl
xchg
out
lock
aad
cwtl
mov
jns
popa
cltd
xor
dec
jl
enter
cmp
in
jl
out
mov
and
sarb
rcrb
adc
push
or
gs
stc
mov
inc
enter
dec
mov
iret
in
in
mov
mov
cmpsb
das
xchg
int
stos
push
sub
test
xchg
add
sbb
lds
out
cld
add
pop
adc
xchg
fwait
subb
add
sub
out
ficoml
mov
add
pop
testb
mov
popf
sub
divb
outsb
aas
inc
adc
jmp
movsl
popa
das
in
cmp
xchg
jle
cmc
movsl
cmc
stc
jg
and
out
cmp
sbb
push
int3
daa
add
out
stc
jne
mov
lods
movsb
push
enterw
stc
es
fstpt
cmpsl
mov
and
mov
orl
xor
xchg
inc
sub
xchg
mov
pop
lea
dec
xchg
sbb
repnz
rolb
push
mov
insb
arpl
xor
pop
pop
shrb
outsl
cwtl
fmul
dec
mov
adc
test
movsl
dec
mov
push
lock
add
outsb
cmp
or
fwait
cld
pop
adc
xor
add
es
jmp
pop
add
dec
cmp
out
push
cmp
jmp
cmpb
inc
das
pop
sbb
je
adc
sub
xor
mov
cmpb
fpatan
jecxz
andb
imul
cmpsl
frstor
lahf
rol
movsl
jns
xrelease
out
jg
daa
pop
leave
dec
scas
inc
sbb
add
insb
jp
adc
xor
fmull
adc
xor
test
xchg
cmp
pushf
rorl
scas
or
jo
mov
dec
xchg
mov
sti
push
xchg
pop
mov
fsubrl
dec
rorl
jp
lock
pop
push
ror
aad
das
jno
mov
add
adc
sub
adc
mov
testb
loopne
cwtl
mov
xor
push
pusha
sub
jle
in
scas
imul
loopne
aad
popf
loopne
inc
out
pop
pop
mov
jb
push
mov
cmpsl
pushf
popa
pushf
adc
xchg
ret
dec
adc
orl
xorl
xchg
or
movsl
icebp
lods
hlt
rcr
inc
in
jle
outsb
movsb
adc
jae
icebp
pop
sub
sbb
mov
cld
aam
jecxz
das
mov
cmp
and
mov
ret
xor
adc
push
push
add
or
cmpsl
dec
call
push
fsubl
fmulp
enter
aam
pop
mov
sub
fwait
sub
and
mov
nop
push
cld
mov
xchg
mov
dec
imul
into
add
fistpl
mov
je
mov
mov
jns
cmp
mov
dec
inc
subb
push
dec
cmp
leave
ljmp
add
inc
lret
add
push
mov
cmp
lret
insl
mov
fisttpll
fs
cltd
jl
push
pop
cmp
pop
cmpsb
in
pushf
shlb
or
int
push
push
insb
arpl
les
adc
repz
cmp
inc
cmpsb
stos
jecxz
push
xchg
cwtl
and
mov
leave
dec
adc
shr
lock
fnstcw
dec
out
jmp
cli
push
mov
sti
lret
sbb
jle
jno
add
xor
repnz
in
aam
test
jmp
ja
fcomip
add
lret
jnp
stos
cmp
notl
fadds
sahf
add
sbb
jnp
mov
idivb
mov
sub
dec
mov
jl
xlat
inc
fstpt
adc
stc
or
clc
ss
mov
xlat
and
leave
add
mov
dec
imul
inc
imul
sbb
pop
dec
jae
fucomip
pop
inc
insl
xor
movsb
popa
push
ljmp
inc
fisubs
daa
bswap
push
pop
sti
out
and
sbb
in
push
or
push
je
mov
jp
jne,pn
loopne
and
loope
and
push
add
or
inc
dec
jge
and
aam
outsb
push
adc
into
pusha
sbb
pushf
xor
je
mov
aas
jge
or
sub
ljmp
jae
mov
fildl
in
sub
jne
xorl
inc
pop
or
dec
push
ds
xchg
ret
xlat
or
repnz
dec
jne
mov
ja
fsubr
push
repz
inc
repz
dec
sbb
into
mov
pop
or
pop
pop
call
sbb
arpl
es
xor
and
mov
sub
fiaddl
pop
jbe
cltd
hlt
pop
or
adc
xor
sbb
cltd
fistpll
or
sbb
xchg
mov
sbb
mov
pop
outsb
aaa
push
and
test
xchg
fisubl
mov
pop
or
sub
sbb
test
sti
fs
mov
add
and
pop
scas
movsl
xchg
or
jb
sti
cmovns
push
push
push
shrb
insb
push
xor
leave
push
xchg
sub
cmp
jno
cmpsl
add
cmp
scas
data16
push
frstor
push
testl
sbb
adc
xchg
add
test
sbb
sahf
mov
in
lds
mov
adc
dec
cmc
clc
dec
cs
push
ljmp
pop
add
dec
lock
pop
imul
add
fdivrl
sbb
cmp
xchg
mov
sbb
cltd
ret
and
push
cltd
push
pop
xlat
notb
xorb
mov
pushf
cmp
push
rcrb
push
ja
dec
sbb
mov
mov
subb
jg
imul
sub
xlat
xor
fldt
jns
lea
es
movsl
cld
xor
jmp
sbb
popa
aam
loop
xor
cmp
ret
test
pop
or
jnp
sub
mov
movsl
mov
mov
push
mov
pop
xor
jno
cmp
mov
rolb
js
sub
out
pop
test
jbe
les
mov
in
inc
inc
push
addl
cmpsb
subb
pop
pushf
sbb
mov
addr16
sub
sbb
fadd
fucomp
xchg
loop
mov
js
mov
dec
jmp
hlt
dec
sub
arpl
ret
jp
cli
ljmp
push
mov
sahf
push
rorl
jecxz
sbb
and
xchg
sahf
dec
test
fldenv
subb
stos
lret
cmc
jo
iret
cli
jl
test
sbb
lods
and
mov
mov
test
in
leave
dec
sti
adc
or
or
cltd
dec
mov
fldenv
ss
fsubrp
imul
call
jns
mov
scas
les
lock
lcall
out
in
lret
mov
mov
fwait
ja
cmpsl
jb
inc
ret
les
cmp
aad
jp
push
daa
dec
fcoml
mov
mov
sarb
or
movsl
push
mull
mov
sub
mov
dec
js
inc
int
push
mov
das
aad
loop
jno
add
inc
pop
aaa
add
jmp
test
test
outsl
lret
cmp
sbb
dec
enter
mov
movsb
ss
cmp
xorl
nop
mov
loop
loop
mov
and
popa
repz
cmp
mov
ret
movsb
das
fcom
repnz
xlat
or
pusha
fwait
sti
xor
sbb
xor
gs
cli
imul
push
jle
mov
sahf
call
xchg
lds
sti
adc
jp
or
movsb
sub
add
mov
in
hlt
or
aaa
push
mov
xchg
xor
or
imul
loop
jne
push
fwait
jne
aad
test
pop
lods
sub
movsb
subl
loopne
dec
or
loopne
lahf
mov
out
or
in
roll
popf
outsb
jg
mov
test
jbe
call
push
loope,pt
mov
add
adc
sti
das
xchg
loopne
mov
jmp
xlat
dec
jecxz
fdivrl
sar
loopne,pn
pushf
subb
xor
rcrb
lret
add
adc
pushf
movsl
cmc
mov
push
add
shlb
popa
adc
mov
xor
cmpsb
push
pop
pop
inc
sbb
mov
sub
add
fstps
in
xor
push
fldt
xor
sub
dec
stos
adcl
ret
out
mov
sub
ds
movsl
fcomps
sbb
loope
mov
jmp
mov
lock
xor
jge
mov
dec
cmp
mov
jno
inc
dec
jle
bound
push
neg
jo
or
in
lock
mov
std
loop
inc
mov
cmp
cli
roll
lods
stos
pop
ficomps
outsl
cmc
lahf
sub
fdiv
enter
cmpsb
adc
or
iret
xor
insb
cli
lods
jns,pn
rcl
outsl
loopne
test
cmpsb
andb
mov
dec
xor
jb
sahf
sub
fisubs
jp
and
cmp
in
inc
push
ljmp
pop
lods
mov
mov
jmp
push
sbb
add
popf
repz
sub
mov
or
cltd
and
jmp
mov
insl
lods
enter
push
dec
jns
xchg
mov
cmp
ljmp
mov
sub
test
repnz
nop
dec
push
inc
jo
stos
jp
mov
sub
in
xchg
rcr
and
or
add
stc
sahf
out
popf
dec
stos
aaa
xchg
int
xchg
ret
mov
add
push
push
mov
add
jp
inc
inc
iret
sub
mov
ficoms
xchg
int
ss
dec
lret
cli
in
jg
nop
push
push
dec
repz
out
lea
jmp
and
imul
out
lret
testb
jg
inc
pop
andl
adc
add
mov
jnp
les
mov
fs
mov
stos
scas
lds
inc
std
mov
in
push
mov
mov
mov
jge
xlat
fsubrl
lahf
push
ffreep
inc
pop
mov
xchg
in
je
das
push
mov
mov
ret
push
xchg
cmp
jl
insb
mov
jmp
lret
pmaxsw
stos
shrl
cmp
push
add
stos
por
xchg
in
jge
insl
inc
pop
sbb
ret
shrl
mov
loopne
and
mov
hlt
imul
dec
push
jbe
cmp
into
xchg
lds
lea
shld
hlt
cs
mov
addl
outsb
mov
cmpsl
aaa
test
arpl
aas
xchg
push
aas
sub
scas
mov
cltd
das
enter
jle
xor
mov
test
stc
add
jno
mov
aas
mov
pusha
xchg
push
lret
fadds
bound
test
cmp
pushf
dec
jmp
sti
xchg
mov
loope
cs
mov
mov
dec
push
mov
lods
xchg
loopne
shlb
hlt
jbe
insl
inc
inc
cltd
fcoml
fsubrs
mov
xor
mov
in
mov
mov
sbbb
out
mov
inc
out
mov
icebp
or
xlat
add
imul
bnd
lock
jb
cmp
std
jne
repz
icebp
insl
sbb
enter
mov
ret
cli
call
pusha
sti
pop
lcall
mov
and
scas
jmp
jle
jb
add
inc
fwait
sub
aad
cmp
shlb
xor
ret
fsts
jl
dec
xor
mov
push
mov
mov
add
lcall
pop
test
mov
pop
mov
pop
scas
sti
cltd
xchg
popa
hlt
sub
sbbb
pop
ret
push
mov
xchg
adc
and
jle
ss
cmpsl
aad
push
lea
js
insl
daa
mov
inc
fisttpl
cld
test
stc
inc
jne
loop
cwtl
mov
and
cld
dec
adc
mov
sub
ret
test
fiaddl
mov
cmpb
js
mov
xor
dec
jno
pop
loope
inc
imul
shll
sbb
jmp
push
jmp
adc
pop
fcompl
insl
sbb
jnp
data16
jne
push
and
clc
js
adc
in
hlt
push
inc
push
test
sub
lahf
push
fildll
mov
fimull
icebp
data16
or
jns
bound
push
aas
jg
stos
ljmp
dec
lcall
adc
cmp
cmp
mov
addl
loopne
popf
popl
pop
in
in
enter
pop
jne
js
out
inc
es
mov
xor
cld
jbe
gs
and
cmpsl
les
fldl
out
lock
clc
fistps
fldt
lods
push
add
test
cli
xchg
adc
or
notl
jb
fldt
lods
fsubrp
pushf
xchg
popf
arpl
testl
cltd
lret
cmp
cmc
decl
dec
mov
and
popl
mov
aad
cltd
icebp
pop
dec
mov
add
jmp
xchg
mov
dec
adc
add
scas
cmp
xchg
push
push
fs
filds
dec
cmpsl
lret
and
fisubl
fisubrl
sub
push
pop
ljmp
out
pop
fnsave
or
lods
mov
js
push
das
mov
int3
xor
sbb
mov
into
inc
cmp
mov
loop
pop
mul
mov
jmp
into
scas
lods
mov
pop
cmpsb
mov
aam
movsb
adc
lock
sarl
lcall
pop
pop
dec
sbb
pop
sbb
ret
adc
push
in
xor
in
dec
aaa
dec
js
pand
xchg
xor
sbb
rcrl
or
mov
mov
lock
mov
dec
inc
je
add
lock
insl
push
sub
xorl
out
xor
call
adc
mov
movsl
or
mov
pop
cmpsb
xor
mov
cmp
lds
lods
sbb
mov
int3
jg
mov
lods
mov
daa
pop
je
inc
pushf
or
fisubl
mov
and
xor
mov
sbb
addl
das
mov
loop
bound
mov
ss
loop
cmp
call
sbb
cmp
hlt
adc
inc
sub
xchg
xchg
fcmovnu
adc
ret
out
jns
mov
shll
xchg
sarb
hlt
ss
movsb
add
test
ja
add
lahf
cmp
adc
or
xlat
mov
dec
inc
aas
loopne
arpl
push
xchg
addr16
mov
mov
fwait
dec
cli
sub
cltd
mov
xchg
rcrl
andl
outsb
pushf
pop
sub
inc
mov
out
add
in
add
sbbl
aas
push
aas
inc
mov
out
mov
jmp
std
or
adc
loop
jne
inc
test
add
lahf
mov
adc
pop
mov
fnstcw
jno
add
out
pop
imul
pop
add
mov
lahf
cmp
sbb
into
cmpsb
cmpsb
xchg
fwait
stc
test
cmc
enter
jmp
mov
xchg
sarl
dec
sub
decl
and
sub
pusha
jge
sbb
pushf
sbb
ret
in
fneni(8087
cmc
adc
dec
sub
hlt
dec
xchg
stc
jne
dec
shll
aam
repz
jp
bound
push
pop
and
std
iret
imull
inc
leave
int3
ja
sub
mov
push
push
movsb
and
mov
nop
fsubrl
aad
cltd
lret
push
mov
imul
imul
jb
add
push
in
loope
rorb
jno
into
in
jbe
xchg
mov
jo
push
cmp
les
popa
mov
mov
ja
jne
mov
mov
ret
dec
cld
insb
dec
cmpsl
xlat
mov
or
lock
cmp
je
lret
jnp
outsl
aas
or
sbbl
loop
sub
xchg
stos
ss
adc
add
inc
or
mov
int
gs
and
and
inc
jmp
jg
jb
loop
jge
lahf
xor
outsl
decl
call
jbe
sub
mov
fcoms
in
inc
xor
xchg
je
inc
lret
ds
dec
lcall
cli
lock
xor
xchg
mov
jnp
loop
movsl
xchg
sub
loopne
pushf
iret
orb
adc
ret
lods
mov
fstpl
xlat
sub
jl
bound
movsl
cmp
add
push
sbb
xchg
mov
outsb
nop
cwtl
or
mov
iret
test
push
xor
shll
js
addr16
scas
stos
mov
movsb
add
repz
dec
sbb
jns
and
pop
or
ret
dec
or
rorl
ljmp
arpl
push
mov
iret
dec
mov
push
inc
adc
inc
push
shrl
sbb
jb
pusha
mov
mov
std
test
bound
and
sub
push
pop
xor
sarb
dec
inc
lcall
jae
add
mov
aad
loop
stc
lock
and
push
ds
dec
loop
sub
faddp
iret
jle
ja
adc
sbb
and
sub
out
jle
fiaddl
lret
out
out
or
lods
sbb
repnz
and
enter
jne
sub
dec
mov
pop
xchg
std
repnz
out
ja
movsb
loopne
test
inc
aaa
fdiv
in
aam
inc
lds
movsl
stc
pop
adc
nop
int3
rorl
adc
ja
nop
fwait
ds
adc
pop
lret
arpl
push
xor
mov
push
out
xchg
dec
pop
jo
dec
mul
es
adc
sti
and
arpl
adc
mov
mov
and
imul
test
mov
pop
fildl
js
orl
andb
mov
pop
sbb
push
dec
xchg
fistps
movsl
je
sub
mov
and
outsb
ja
loopne
pop
dec
fidivl
jge
add
adc
mov
fiadds
int
fidivl
mov
sbb
into
int
sbb
pop
testb
push
pop
jns
mov
cmp
testl
sbb
test
pushf
push
pop
das
jl
mov
mov
mov
xor
hlt
cmpsl
xchg
pop
test
sub
jg
push
and
adc
bound
movsb
mov
aas
mov
cmp
sarb
leave
sbb
in
sbb
imul
les
shl
xor
leave
push
and
test
jnp
sbb
clc
push
scas
insb
and
sub
push
in
or
mov
mov
push
xor
and
data16
sahf
cmpsl
jb
clc
dec
sub
in
adc
int
int3
sub
dec
ret
ret
js
cmovs
jns
loopne
mov
insl
js
into
shlb
scas
add
push
out
push
xlat
mov
fcom
imul
jg
xchg
inc
insl
mov
nop
push
fs
iret
jmp
inc
fnsave
pop
cmc
sbb
inc
mov
in
lods
inc
mov
sahf
ja
xchg
dec
int3
aad
scas
loope
or
fwait
das
pop
and
adc
js
test
mov
xorb
int3
out
xchg
lret
sub
js
adc
xchg
pop
cmpsl
mov
jno
pop
aad
sbb
xchg
xor
push
push
lods
push
push
dec
or
lea
sub
shrb
sub
push
mov
outsb
testb
clc
add
std
ret
out
mov
jmp
xchg
xor
cmpsl
jl
add
or
lods
lds
adc
adc
pop
icebp
movsl
sub
mov
flds
xchg
xor
mov
loope
or
cmp
xchg
jecxz
xor
fistpll
rorb
movsl
leave
mov
jecxz
int
mov
shll
std
ret
rcrl
inc
sbb
popf
adcb
in
mov
push
cmpsb
xor
push
stos
addb
mov
mov
mov
int3
pop
je
pop
adc
lahf
sub
lock
mov
sbbl
fsubrl
push
jp
mov
dec
fildl
dec
bound
nop
negb
lcall
add
xchg
mov
ret
pop
imul
mov
rorb
lret
push
ljmp
mov
mov
cmp
stos
xor
mov
pop
or
leave
push
jl
add
fiaddl
andb
pushf
pop
cld
icebp
scas
inc
push
dec
and
xor
jle
inc
test
push
xor
arpl
pop
jecxz
or
jmp
mov
mov
out
push
rcrl
inc
inc
jle
add
xor
lret
arpl
inc
dec
jne
or
mull
adc
iret
testb
mov
sbb
mov
repnz
xchg
out
inc
andb
cmpsb
mov
add
inc
add
mov
mov
sbb
mov
mov
add
pusha
adc
rol
sub
mov
and
loop
push
cmp
ret
daa
jge
jne
jmp
aas
or
shrb
jmp
mov
mov
pop
ds
jle
sahf
sub
pop
out
or
sub
jl
in
xor
out
loope
leave
mov
cmp
dec
push
in
dec
test
or
jo
std
sbb
std
mov
sbb
and
popf
mov
or
int
push
dec
push
lds
pop
test
xchg
jmp
incb
mov
int
or
lret
add
ja
mov
cmp
sub
imul
lahf
push
adc
mov
mov
scas
push
fs
pop
aad
leave
cmpb
or
and
pushf
sti
pop
cmp
mov
das
lock
push
cmpsb
or
adc
outsb
adc
insl
add
add
or
cmpsb
cwtl
push
add
ss
scas
cwtl
push
sub
into
cmp
lret
aad
pop
mov
mov
push
fists
in
out
loop
sahf
pcmpgtd
push
test
push
mov
inc
mov
mov
out
inc
and
ret
and
cmp
cmp
adc
dec
rcl
adc
cmp
out
cwtl
shlb
faddp
sbb
iret
in
mov
mov
jl
in
mov
mov
pop
fwait
ljmp
cmp
pop
cwtl
shlb
sub
test
inc
or
cmp
test
sbb
cmp
repnz
int
mov
cld
pop
in
adc
mov
cmp
mov
rcl
test
mov
pop
jae
and
dec
loope
adc
xchg
pushf
xchg
push
dec
js
in
pop
arpl
jbe
les
icebp
jbe
jbe
fbld
testl
mov
repnz
cli
xor
mov
repz
sbb
dec
push
sbb
inc
cmc
dec
pop
aaa
movsl
mov
sbb
push
pop
xchg
push
mov
dec
push
pop
inc
loopne,pn
lcall
jmp
out
mov
in
lea
dec
mov
rcrb
pop
adc
pop
pop
jle
cs
sti
pop
data16
sub
shlb
js
jmp
mov
ja
push
sbb
xorl
mov
sub
ss
and
arpl
leave
mov
xlat
pop
add
inc
ljmp
sbb
cmp
push
or
mov
jno
jmp
mov
xchg
loope
push
inc
or
das
imul
repz
lea
js
hlt
push
or
mov
movsl
add
dec
xchg
adc
fwait
stos
cli
sbb
nop
inc
push
ret
enter
and
sub
jnp
inc
outsb
in
cmp
xlat
lret
adc
adc
adc
jle
insl
dec
add
data16
sub
inc
lods
jle
push
loop
jns
enter
cs
lcall
enter
dec
add
bound
icebp
lds
and
inc
sti
xchg
add
cwtl
mov
jo
mov
or
mov
rol
mov
sahf
lods
rorb
xchg
inc
pop
popf
sbb
ret
inc
pop
adc
sbb
cs
push
jae
or
scas
nop
push
jle
jb
inc
into
ds
lock
xor
add
jmp
xor
and
adc
mov
aas
push
cld
dec
mov
and
xor
inc
mov
jl
adc
leave
stos
mov
mov
je
inc
xlat
xor
imul
insb
movsb
xlat
push
decb
and
sbb
push
cmp
lcall
mov
xchg
dec
icebp
dec
lret
xchg
dec
stos
stc
cwtl
in
mov
insl
ja
jne
sub
cmp
jle
int3
out
aas
stc
inc
sbb
inc
pop
jle
or
cmp
xchg
cli
scas
mov
xchg
jae
xor
or
xchg
rcrb
stos
push
rorl
fisttps
sbb
arpl
xor
push
jmp
adc
out
dec
sub
xchg
in
and
mov
or
push
in
hlt
push
xchg
or
xor
leave
mov
dec
jae
fadd
dec
lret
xchg
mov
cwtl
dec
mov
jmp
ret
inc
cmp
outsl
lods
fldlg2
fsubr
push
pop
fldenv
es
xor
xorl
scas
sarl
inc
xor
xor
mov
add
mov
mov
xchg
push
add
orb
nop
scas
test
lret
lret
xchg
jnp
cmp
shrb
jmp
mov
inc
insl
cmp
add
fnsave
incl
data16
in
rcr
cli
cmpsb
daa
jge
in
jbe
andl
and
aam
mov
push
fwait
xchg
mov
into
mov
div
cs
lret
imul
dec
leave
aad
stos
xchg
push
fdiv
popa
je
lcall
xchg
inc
lret
lcall
imul
outsb
push
adc
orb
js
les
xorl
push
adc
test
scas
ss
or
inc
xor
or
imul
shrl
jnp
jle
jo
xlat
and
cwtl
cltd
mov
jmp
push
leave
pop
mov
lods
jbe
push
adc
jns
clc
and
or
cmp
pop
clc
jmp
fisttps
adc
cmpsl
sbb
cltd
imul
imul
iret
mov
jbe
clc
idivb
and
ret
scas
ljmp
sbb
inc
xchg
sbb
mov
hlt
lea
sub
adc
mov
jle
imul
push
pop
ficoml
push
and
fld
dec
sar
jge
insl
lahf
add
jbe
mov
fstp
shrb
cmp
jb
ficompl
mov
gs
mov
cmp
pop
or
sub
mov
gs
cld
sbb
xchg
bound
clc
or
out
fcmovbe
repnz
sub
filds
sarl
fldenv
loope
adc
xchg
dec
mov
mov
push
push
jmp
add
lret
mov
leave
outsb
jmp
dec
mov
pop
dec
test
mov
out
mov
movsl
xchg
bound
pop
dec
push
sti
push
dec
mov
rep
icebp
xchg
or
fwait
rorb
fcomp
ret
popf
jb
sti
js
fistpll
or
cs
pop
mov
mov
mov
sub
jmp
jle
add
mov
and
jl
bnd
mov
xchg
and
fldl
jmp
lods
jg
adc
mov
mov
push
sub
ljmp
icebp
stc
xor
push
mov
fbstp
inc
adc
or
adc
and
dec
lret
sub
fstl
xor
ret
rcll
xor
ja
pop
arpl
cmp
cmp
or
pop
pop
mov
ds
ret
lcall
inc
nop
cld
int3
sub
cs
mov
cwtl
adc
push
cmp
jnp
pop
cld
push
mov
xchg
push
sbb
int
pop
pop
daa
addr16
sub
xchg
jmp
jg
repz
int
iret
test
xchg
jmp
cwtl
cmp
rcrl
sar
pop
adc
addr16
rcl
std
repz
or
rorl
outsb
cmp
xchg
mov
xor
push
dec
mov
inc
jo
xchg
lret
imul
je
fwait
sbbl
les
js
xor
xchg
jne
inc
xchg
out
fs
cmp
and
jge
mov
mov
cmp
xchg
sub
sbb
and
and
std
mov
in
sub
xor
sbb
adc
test
xchg
cmc
shr
outsb
call
iret
cmpsb
xor
push
xor
mov
sbb
fidivl
jg
xchg
test
xlat
or
sbb
mov
fstpt
jno
inc
mov
mov
out
aam
push
or
sti
divl
inc
ss
mov
iret
shll
into
lret
imul
dec
mov
jbe
cmc
xchg
xchg
mov
aas
jne
cmp
stos
or
mov
sub
es
xor
jnp
lock
pop
xchg
cmpsb
daa
cli
das
subb
pop
xchg
and
sti
xor
xchg
mov
fcoms
aas
out
sahf
dec
lods
icebp
scas
test
iret
mov
lock
popf
std
aam
lcall
sarb
push
repnz
subl
cmpsl
cmp
jbe
mov
mov
xchg
or
jb
cltd
cltd
loopne,pt
frstor
push
sbbb
imul
pop
movsl
push
mov
xchg
and
mov
sub
adc
adc
repnz
lds
fstpt
pop
xchg
dec
rolb
jl
fildl
scas
inc
rolb
fsubrs
cmp
or
mov
xchg
je
or
in
sar
pop
addl
out
xor
mov
jb
ds
test
jb
popf
outsl
enter
cmp
mov
push
in
adc
inc
xlat
add
sbb
std
insb
or
dec
push
mov
fcomps
inc
push
jle
sbb
aas
lds
sbb
sbb
cmpsb
aaa
aaa
cmp
adc
push
negl
push
xchg
add
int
cs
cmp
addl
pop
scas
aad
call
inc
test
aam
lahf
shll
jbe
xchg
popa
daa
mov
mov
pop
mov
inc
aas
fxch
jg
or
insl
fnstenv
loopne
xchg
jmp
ds
sub
pop
lahf
imul
push
lds
rclw
cli
fcomps
orb
pop
ret
cmc
pop
dec
sbb
mov
insl
and
dec
lahf
inc
and
ljmp
jo
mov
call
popf
mov
pop
and
jno
cld
dec
outsl
cli
mov
fs
xchg
insl
fidivl
shll
dec
andl
sbb
push
sbb
jecxz
pop
xchg
pop
mov
jmp
mov
or
shr
mov
sub
push
subl
daa
out
jno
fistps
clc
test
push
ret
mov
test
adc
fcos
mulb
pop
cmpsl
pop
mov
xchg
lar
xorl
or
add
and
stos
cli
test
pop
fs
es
and
jecxz
cli
cmpl
jge
xor
sahf
mov
sub
jp
jmp
je
imul
jb
push
orl
or
pop
jbe
into
jge
xor
fwait
test
pop
push
mov
xor
les
inc
cmpsl
pop
jb
add
shrb
pop
rcrb
je
sbb
and
or
add
dec
aaa
stc
cmp
mov
mov
add
es
jmp
in
movl
xor
mov
sbbb
and
dec
push
clc
lcall
in
xchg
inc
call
inc
adc
push
iret
mov
sti
ficoml
lcall
es
xchg
fld
or
jmp
jnp
divb
pop
mov
shlb
mov
mov
sbb
adc
test
sub
sub
in
fwait
test
pop
jno
lea
jmp
cmpsb
mov
fcoml
sar
mov
mov
dec
gs
adc
insb
lahf
xchg
mov
mov
inc
call
cs
ja
gs
jmp
jae
cmp
ret
pop
dec
std
jo
add
dec
shr
icebp
xchg
aam
mov
mov
movsl
popa
mov
ret
pop
add
int
mov
fistpl
popf
add
icebp
ljmp
sbb
cld
popa
mov
jo
cld
icebp
lcall
out
pushf
sub
cli
mov
lret
daa
cmpsl
push
xor
push
mov
sar
inc
pop
xor
sub
xchg
scas
jecxz
or
jno
filds
jle
mov
mov
fabs
icebp
out
mov
inc
mov
cmp
push
leave
es
dec
sub
clc
out
xchg
sahf
fucomp
push
dec
sbb
sub
jno
hlt
aad
push
sub
or
jns
sbb
insl
adc
fcmovne
repz
imul
xor
test
insb
mov
fstps
mov
imul
xchg
xor
inc
fwait
or
mov
insb
mov
fmull
xchg
cmp
cmpsb
sub
ds
ffree
fs
lods
negb
test
enter
aam
testl
out
cmp
fwait
mov
aam
adc
jae
ds
cmp
push
data16
shll
adc
sub
push
rolb
mov
cld
cmc
fisubl
dec
cs
cmp
js
or
dec
xchg
jne
and
test
les
movsb
xchg
push
xor
push
popa
xor
daa
jb
jno
fdiv
clc
imul
xor
pop
mov
xor
mov
outsb
call
movsb
dec
pop
ss
pop
test
push
iret
push
sub
lock
mov
fwait
test
sbb
jge
mov
sbb
mov
je
les
int
xchg
jae
pop
movsb
lock
pop
add
stos
gs
sub
xor
hlt
outsb
repnz
data16
stc
mov
call
jo
mov
mov
cmp
decb
imul
mov
daa
fldenv
js
pop
movb
and
imul
ds
xor
ret
sbb
inc
into
add
pop
data16
sub
sub
test
orl
jl
mov
and
fcoms
fstpt
jb
dec
es
mov
sub
repz
int
in
pop
insl
lds
sub
ss
jns
pop
in
or
add
mov
pop
out
sbb
xchg
popf
mov
adc
jle
sub
and
repnz
jbe
popf
cwtl
lcall
push
cmc
mov
pop
sbb
adc
aad
dec
js,pn
test
ss
rcrb
popf
test
jns
add
mov
enter
mov
lahf
jb
dec
sbb
pmullw
fimull
and
shrw
jno
add
xchg
hlt
jl
dec
lods
adc
inc
fwait
adc
daa
pushf
aas
xchg
test
cwtl
int
xchg
clc
fstp
add
mov
push
xchg
mov
loope
pop
inc
in
lahf
sub
mov
mov
push
js
push
lret
aas
adc
push
adc
cld
das
dec
inc
arpl
and
daa
rorl
pop
insl
out
cmc
fidivs
call
xchg
cmpsb
cmp
mov
push
imul
add
adc
js
stc
pop
xor
pop
and
or
adc
xchg
sar
add
scas
inc
out
imul
sti
adc
test
cwtl
loopne
mov
fstp
and
dec
je
stos
rol
sub
repz
js
dec
loopw
mov
stos
mov
pop
insb
daa
popf
adc
push
mov
and
pusha
jae
xor
mov
mov
add
jmp
hlt
cs
sub
pop
push
das
dec
inc
js
ror
xor
inc
je
and
sti
push
jo
test
pop
xchg
jecxz
std
nop
mov
add
ds
mov
cwtl
scas
leave
pop
shr
add
jecxz
fldcw
cs
mov
lret
dec
push
inc
subb
scas
loop
scas
outsb
xor
cmp
push
gs
addr16
popf
mov
and
daa
or
xchg
popa
loopne
or
sub
cmc
mov
mov
data16
jne
or
dec
pop
sub
into
add
std
inc
or
or
nop
cmp
adc
xchg
movsb
ret
jbe
js
std
add
push
movsl
xor
or
dec
xchg
out
int3
fidivs
pushf
fisubrs
pop
enter
das
lcall
outsb
xor
jns
lcall
pop
sahf
push
enter
xor
pop
cmp
push
jo
mov
rclb
adc
arpl
frstor
rclb
lea
mov
add
sub
outsb
fiadds
mov
cmp
lock
or
pop
cmpsb
pop
mov
xchg
enterw
mov
jbe
mov
gs
sbb
inc
mov
xchg
jle
nop
ja
inc
dec
sbb
shl
pushf
cmp
add
cmpsb
pop
mov
push
daa
and
jnp
in
mov
and
pop
lods
adc
or
sarl
call
mov
aaa
cmp
jns
fimuls
sbb
sub
lea
stos
out
arpl
jae
sbb
cli
into
stc
es
or
pop
ja
or
aam
xor
mov
inc
sub
dec
push
cmpsb
mov
jbe
mov
sbb
stos
lock
fisubl
push
push
pop
jae
inc
xchg
pop
out
jne
int
push
int
fsts
mov
int3
stos
xchg
inc
cli
gs
jno
adc
out
xor
cli
cmp
cmp
and
sti
xchg
int
fdivl
jae
shll
push
jnp
es
inc
es
mov
sub
imul
push
mov
popa
in
das
and
loopne
test
add
ja
cmp
imul
push
xlat
ds
arpl
or
sub
testb
in
aaa
xor
mov
jle
add
jmp
hlt
pop
sbb
dec
negl
add
add
je
dec
out
sub
jmp
movsb
mov
or
movsl
jge
fisubrl
xor
mov
ret
sub
ds
mov
mov
addr16
stos
sbbb
mov
or
das
add
xor
subl
rolb
out
inc
bound
cmpsb
mov
inc
mov
inc
ret
leave
jo
adc
imul
xchg
cmp
mov
mov
fstps
and
xchg
mov
fisttpl
cld
cld
cwtl
out
inc
jmp
test
bound
iret
mov
jbe
aad
movsb
lcall
das
dec
int3
leave
fnstsw
arpl
shr
in
add
mov
cld
mov
jno
cmpb
sbb
cmp
fs
inc
js
lret
popf
cs
divb
push
shll
sbb
jbe
cmp
cld
sub
dec
jne
int
mov
add
inc
mov
ret
out
arpl
repz
std
lret
mov
xchg
mov
adc
shll
mov
movsb
imul
je
aaa
add
jne
jo
dec
lea
ds
ljmp
stos
lret
xchg
cli
sbb
mov
and
dec
lret
nop
pop
or
repz
fs
mov
xchg
pop
ja
in
cmp
add
push
mov
or
out
inc
dec
push
ds
frstor
insb
in
cwtl
mov
jno
out
mov
cmp
adcl
mov
fisttps
pop
pop
cltd
fldl
cli
es
stc
fwait
mov
ss
out
clc
and
pop
add
mov
lahf
sbb
insl
and
mov
sarb
jo
inc
adc
jae
push
les
jbe
and
pop
jmp
fdivrl
adc
push
mov
jge
lret
into
jle
push
sbb
push
mov
fnsave
jb
dec
mov
jns
cmp
dec
aaa
add
add
in
cli
repnz
pusha
popl
clc
adc
stos
lea
scas
pop
lock
div
adc
pusha
pop
fidivs
in
leave
mov
jns
add
mov
sub
in
jns
rclb
loop
imul
in
sub
clc
sbb
lock
and
in
cmp
sbb
mov
sub
inc
popa
shll
shrl
dec
mov
loop
mov
xchg
xor
xchg
test
inc
rclb
ret
push
mov
cwtl
or
or
out
jno
les
mov
scas
adc
andnps
in
mov
sub
leave
cmpsl
mov
jo
ret
scas
mov
adcl
xchg
jg
sbb
pushf
pop
into
ja
adc
out
imul
push
cmp
jno
inc
ds
dec
loop
arpl
lods
popa
int3
cmp
sbb
in
scas
movsl
mov
pop
stos
pop
xchg
cmp
xor
je
sti
mov
fs
add
mov
cmp
push
or
xor
sahf
inc
inc
or
pop
gs
clc
and
ficoms
ret
test
sub
adc
repz
jl
adc
clc
nop
hlt
inc
xor
cmc
in
scas
and
outsb
jb
rol
aaa
imul
sarb
movsl
inc
orl
add
inc
dec
jnp
mov
fwait
mov
mov
imul
scas
shll
test
into
xchg
pop
add
arpl
mov
sub
pusha
jp
arpl
and
jb
mov
imulb
and
scas
push
push
sbb
sub
fwait
jmp
lock
push
mov
xor
mov
and
stos
dec
mov
xchg
push
add
lret
aad
mov
call
fwait
push
fiaddl
fisttpll
pushfw
cltd
xchg
add
ljmp
push
pop
or
push
outsb
fcomps
sahf
push
adc
push
mov
push
mov
test
sbb
sbb
ret
lret
push
std
popf
xchg
imull
mov
mov
cltd
mov
inc
jecxz
call
mov
fdivrl
jle
push
or
and
mov
in
jae
push
sbb
addr16
sbb
lcall
ss
rcl
sbb
lods
dec
jecxz
outsb
loop,pt
jae
sub
xor
sbb
sbb
push
cmpsb
push
daa
int
dec
sub
lahf
dec
sub
js
mov
dec
inc
add
cmpsl
push
rclb
jbe
mov
jge
ja
sarb
sbb
outsb
xor
xchg
cs
repz
mov
cltd
test
ljmp
fwait
movsl
out
aam
aad
ret
mov
mov
sub
fldcw
sub
sbb
xor
xchg
dec
push
aad
or
push
mov
xor
stc
out
mov
int3
dec
lock
test
outsb
xchg
mov
xlat
movsb
push
xchg
je
push
dec
cmpsb
aad
loopne
pop
and
imul
push
adc
xorb
les
cmc
stc
data16
cmpsl
ja
stos
filds
sahf
mov
loop
mov
ja
jecxz
xchg
push
jno
out
mov
jbe
jp
lds
push
loopne
int3
mov
cli
incl
push
sahf
jbe
cwtl
lcall
mov
insb
push
and
xor
inc
cld
pop
inc
aaa
push
fistps
pop
add
rcrl
add
mov
lock
shrl
inc
mov
shlb
push
sub
scas
add
iret
outsl
and
cmp
fstps
sub
js
out
xchg
mov
mov
pop
add
cmp
popa
xchg
mov
push
mov
sbb
imul
sbbl
xchg
sbb
fiadds
test
nop
jb
insl
mov
lods
inc
cmpsb
and
sti
ds
loopne
pop
sar
dec
aaa
push
test
mov
dec
pop
sbb
cmp
scas
sub
push
lret
lds
mov
ret
xchg
adcl
lods
movsb
xchg
lret
mov
hlt
dec
and
push
arpl
push
push
loopne
and
xchg
bound
arpl
hlt
sbb
pop
fs
cmp
add
add
lcall
xor
jmp
cltd
movsb
lret
sti
cmc
jno
push
repnz
push
fnstsw
gs
imull
push
dec
lret
xchg
imul
das
iret
cs
retw
movsl
lahf
in
adc
test
adc
neg
jp
mov
adc
and
sbb
loope
dec
hlt
lret
in
fidivrs
cltd
jmp
pop
lret
pop
data16
test
or
and
fstpt
mov
ljmp
xchg
cmpsb
jae
movsb
add
jmp
lds
xor
stos
sbb
cltd
fiaddl
adc
mov
sub
jle
xor
jg
mov
xor
fdivl
mov
in
das
imulb
jge
xchg
mov
push
and
jo
rolb
mov
cmp
jge
dec
and
int
cmp
aaa
dec
int3
mov
sub
imul
and
das
fs
ret
and
mov
pop
addr16
add
mov
mov
cmpsb
jl
sub
pop
loop
shll
loopne
add
imul
test
cwtl
jmp
jno
pop
cli
dec
data16
xchg
or
cmp
sti
or
dec
aam
popf
inc
sub
in
sbbb
xor
fstps
hlt
fucom
ss
ljmp
aam
out
push
pop
mov
fisubs
aas
enter
in
stos
or
xchg
stos
and
jns
fmul
xchg
xchg
adcb
mul
adc
stc
xor
imul
cwtl
decl
push
stos
jecxz
cmp
mull
inc
imul
repnz
pop
outsl
cmp
out
aas
lds
mov
out
fcmovu
dec
rcrb
mov
fsubrs
push
mov
push
mov
pop
adc
xor
sbb
ljmp
pop
jmp
scas
fs
cmpsb
lret
push
fldt
push
pop
shll
loop
arpl
xchg
mov
fsubrl
cmc
jecxz
mov
inc
sbb
cmp
xchg
nop
or
dec
push
mov
dec
cmp
cmpl
scas
push
stos
mov
add
inc
pop
int
mov
or
stos
push
lahf
filds
call
mov
push
pop
dec
movsl
mov
rorl
aaa
das
cmpb
cmp
movsb
popf
push
roll
pushl
inc
scas
sbb
and
fprem
adc
enter
sahf
add
loopne,pn
js
inc
es
iret
push
jp
xchg
push
push
mov
xor
mov
push
lahf
sub
dec
into
sbb
mov
push
or
inc
sub
cmp
clc
mov
mov
and
and
icebp
call
pop
test
push
mov
mov
int
fwait
jne
aad
dec
aas
or
test
leave
repz
clc
adc
into
jno
dec
cld
push
pop
roll
push
mov
xchg
jge
pop
pop
sahf
inc
mov
sub
out
subl
xor
or
nop
mov
cs
xchg
scas
adc
sub
loop
push
imulb
nop
adc
pop
add
icebp
inc
stc
xchg
data16
and
jb
fistpll
jle
testl
adc
xchg
jae
and
ljmp
ret
adc
mov
mov
into
fmuls
ficoms
enter
bnd
adc
dec
xor
inc
aas
mov
mov
mov
mov
cli
add
das
dec
adc
jmp
stos
pop
xchg
dec
jge
and
aam
or
inc
arpl
mov
pop
js
jcxz
hlt
test
cmpxchg
mov
inc
inc
clc
out
mov
push
std
push
add
outsb
cmp
aam
mov
sbb
add
imull
repz
pop
jo
jmp
int
cmp
push
loopne
int3
or
push
stc
mov
pusha
or
push
pop
sbbb
dec
mov
test
cmpsl
sbb
pusha
ss
in
mov
xchg
shll
mov
lahf
cmpsb
arpl
dec
sarl
jbe
adc
cltd
repz
sub
xor
iret
push
xor
jo
gs
repnz
mov
in
pop
in
xchg
lds
je
and
js
aaa
lret
or
in
sbb
or
push
pop
clc
shlb
pop
sub
and
push
mov
inc
fnsave
mov
mov
xchg
loopne
jmp
adc
icebp
fs
into
subl
add
sbb
push
test
fiaddl
and
jne
pushf
cmp
rcrb
sbb
jae
xchg
dec
out
imul
fwait
out
push
cmp
test
cmp
loopne
popw
jecxz
mov
cltd
std
push
xor
xchg
push
pop
xor
push
pop
pop
ret
xor
fisubl
ljmp
les
scas
stc
jnp
jge
popa
movsb
mov
add
jmp
mov
into
scas
lods
cmp
mov
int3
loop
xchg
sbb
ss
inc
addb
insl
loop
test
add
lock
adc
xor
inc
ljmp
scas
xchg
adcl
dec
xchg
and
pop
push
cmpsl
out
ja
jg
jge
or
pop
inc
shrl
mov
aad
or
and
mov
inc
fnstcw
inc
jmp
pop
fucomip
jns
jmp
inc
ret
mov
jb
loop
enter
or
mov
pop
push
gs
push
sahf
mov
pop
cmp
and
out
cmp
and
nop
add
out
insl
dec
push
mov
stc
xor
xchg
nop
rol
cmpsb
cld
mov
nop
call
in
pushf
ret
push
test
jae
sbb
out
in
ret
xchg
dec
ficoml
test
or
dec
pop
mov
sbb
mov
insb
cld
addr16
jae
iret
fsts
testl
jecxz
jnp
xchg
mov
sub
fsubl
int3
add
or
sbb
mov
jbe
jbe
pop
mov
iret
push
int
ficompl
dec
cli
insb
int
ret
dec
or
enter
mov
mov
scas
sbb
mov
lods
ja
push
push
fnstsw
mov
call
dec
add
cmc
cmc
jne
mov
inc
pop
mov
loop
add
sbb
das
movsb
aad
mov
cmp
push
dec
inc
cmp
push
push
inc
add
or
das
jns
pop
cmpsb
mov
in
jecxz
cmp
fwait
divb
es
clc
repnz
out
sahf
aam
sbb
push
mov
arpl
cli
or
or
orl
pop
or
xlat
js
popf
ja
mov
pop
jg
pop
xchg
test
push
pushf
cmp
pop
jae
lock
inc
leave
test
adc
mov
mov
cmp
mov
add
dec
dec
mov
mov
cmp
adcb
stc
mov
arpl
mov
cmpsb
mov
dec
ljmp
push
jne
inc
fs
xor
mov
jmp
jp
sbb
xor
sbb
adc
and
out
dec
adc
inc
decl
and
mov
sub
hlt
sub
adcb
imul
adc
jecxz
add
push
mov
cmp
jmp
xor
cmp
fwait
ja
and
adc
xor
cmpsb
xor
cltd
mov
add
dec
test
in
dec
das
js
pop
jle
lea
in
add
sahf
xchg
in
or
test
lods
fists
jne
mov
mov
dec
mov
and
xchg
add
or
mov
jbe
stos
and
cld
aas
lods
leave
and
jno
mov
outsl
push
jnp
xlat
shl
add
push
rcl
int3
mov
and
jns
imul
pop
gs
or
lea
push
pop
xor
ret
and
into
cwtl
xor
loopne
sbb
fstpl
arpl
xchg
or
jecxz
cmpsl
push
pop
push
movsl
mov
out
rcrl
xchg
xor
ficoml
push
pop
int3
xadd
incb
es
test
es
sbb
mov
fisttpll
push
lds
stos
sbb
scas
lea
cmp
mov
decl
inc
dec
aaa
pop
add
mov
repz
bound
sahf
inc
sbb
jnp
xlat
fs
outsb
test
out
pop
lods
xchg
sbb
inc
rorb
test
dec
adc
les
xor
fstl
outsl
stos
cmpb
loop
dec
adc
scas
rorb
pop
mov
jge
sbb
xor
fwait
mov
and
lcall
jg
push
inc
fwait
call
lea
pop
mov
add
push
jae
loopne
adc
pop
pop
aaa
cmpsb
sub
addr16
out
push
xchg
and
imul
xor
in
mov
mov
addr16
push
inc
pop
loope
sti
xchg
fucomp
dec
mov
loopne
scas
insb
stos
ret
daa
std
push
out
stc
insl
xor
mov
data16
xor
jbe
test
into
in
inc
cmp
push
push
xor
pop
jb
outsl
inc
xchg
sahf
notb
ret
mov
pushl
leave
xchg
xchg
inc
mov
loopne
stc
xchg
repz
test
imull
dec
cltd
push
popa
or
mov
fnsave
jmp
addr16
or
mov
jbe
out
adc
shll
adc
add
cmp
mov
pop
test
adc
dec
mov
cmpsl
mov
mov
jns
cwtl
outsl
repnz
sahf
sub
out
jge
and
xchg
cmc
pushl
push
jno
lret
jne
ss
out
movsl
fs
call
cltd
mov
xchg
cmp
lods
mov
aaa
cs
repz
mov
ss
out
mov
pop
inc
pop
cmpsl
xchg
loope
mov
je
add
pop
loopne
xlat
std
shlb
xchg
loope
and
and
dec
mov
push
dec
sar
test
sarl
add
jne
mov
shll
lcall
leave
out
and
dec
jge
sbb
je
adc
cli
fsubp
int3
aas
stos
mov
mov
mov
sub
cmpsb
jge
ret
adc
mov
fisubl
jmp
xlat
push
mull
sub
fsubp
jnp
inc
in
push
push
movsb
sub
push
imul
imul
negb
ret
test
in
cmpsl
mov
add
mov
and
jno
mov
ja
jnp
cmpsb
fcoml
ret
cmpb
mov
xchg
repnz
in
sub
cmc
aas
jns
stos
cltd
ja
dec
push
pop
sub
clc
jecxz
jp
aaa
mov
sarl
ds
movsl
and
sbb
lock
sbb
ds
dec
enter
mov
sbb
stos
jae
xchg
stc
shrl
or
in
mov
and
repnz
lahf
les
out
jmp
sbb
nop
dec
repz
push
jb
jmp
xor
std
xorb
les
out
scas
push
ss
sbb
cmp
adc
push
cmp
mov
je
pop
add
mov
test
jbe
std
iret
mov
xchg
mov
lret
inc
push
stos
jecxz
dec
adc
and
xchg
xchg
jmp
jno
neg
inc
sub
mov
push
push
push
cmpsl
out
test
inc
mov
push
add
push
stos
jns
add
or
in
lret
arpl
jp
movsl
jo
hlt
xchg
negl
inc
lret
xchg
out
enter
cwtl
unpcklps
insl
mov
pop
push
or
jbe
sbb
push
insb
jbe
inc
cmpsl
stos
xchg
shl
adc
mov
cmpsb
inc
call
cmp
pop
pop
data16
insl
js
rcr
jg
repnz
inc
cmp
xchg
cmpsl
xorb
ficomps
aad
arpl
xchg
sbb
add
dec
icebp
mov
cmpsb
jmp
add
pop
out
inc
lds
jne
out
iret
dec
inc
adc
mov
aaa
leave
inc
add
jbe
mov
movsl
mov
das
fisubrs
lods
push
arpl
pop
repz
cld
fsubs
or
pop
out
sbb
fxch
push
jg
sub
shll
cltd
pop
repnz
icebp
mov
pop
sub
movsl
sbb
mov
rcll
daa
jbe
xchg
aam
push
lret
cvtpi2ps
mov
rcll
adc
sti
push
lret
and
shlb
add
fldcw
popl
mov
loopne
or
inc
dec
push
addr16
push
inc
xor
mov
jge
repnz
pushf
aas
mov
xchg
mov
pop
out
and
clc
outsb
aad
inc
sbb
push
fwait
in
or
pop
push
pop
xor
lock
mov
nop
mov
adcb
push
arpl
out
sub
mov
jge
jp
out
lods
cmp
fwait
dec
outsl
xor
ja
call
push
mov
jbe
mov
mov
test
cmp
xlat
dec
ret
scas
xchg
jnp
stc
jns
xor
mov
pop
sbb
mov
mov
fmuls
arpl
ror
les
je
mov
fcmovnu
mov
pop
stos
xchg
fcmovbe
push
fisttpll
pop
ret
mov
ror
sbb
inc
lret
pushf
scas
xor
ja
inc
filds
adc
lea
sbb
addr16
pop
pop
fildll
into
push
xor
cmp
cmp
push
add
mov
cmpsl
lret
add
out
inc
cmpsb
inc
arpl
mov
xchg
addr16
mov
popa
cmpsl
ss
push
insb
sbb
in
xor
sub
ficomps
xchg
xor
and
sahf
movsl
pop
gs
inc
cmp
nop
movsl
xorl
sub
push
cmc
rcrl
xchg
adc
fistpll
add
test
orb
bound
mov
call
js
mov
inc
xor
pop
pop
outsl
shll
jg
in
pop
sub
enter
roll
lret
xchg
fmull
out
rcll
inc
mov
cmp
mov
add
popf
lcall
mov
jmp
or
cmc
add
pop
pop
sub
stos
outsl
jmp
sub
mov
jnp
roll
or
dec
xor
or
jns
in
hlt
inc
data16
insb
mov
movsb
cltd
pop
bound
js
cmp
sbb
popa
pop
push
xor
mov
xor
stos
or
jecxz
pushf
dec
fcmove
adc
sbb
ljmp
mov
adc
jmp
test
cmc
or
mov
stc
sar
jne
adc
int
and
push
fidivs
fdivrl
mov
jno
je
push
xor
jmp
je
push
and
mov
adc
dec
xor
out
jge
mov
hlt
lods
loope
cmp
std
sahf
fs
int3
aam
jne
xor
mov
pop
or
mov
fs
mov
ja
adc
fcmovnb
das
pop
jmp
test
cmc
and
lcall
scas
je
jmp
inc
bound
cmp
insb
outsb
test
jae
std
jbe
stc
push
cmp
xchg
jge
clc
and
push
js
adc
loope
or
test
sbb
aam
sub
jne
sbb
add
mov
lea
icebp
lock
sahf
je
jmp
and
inc
ja
push
sub
mov
daa
push
cmp
dec
or
out
mov
mov
test
or
pop
cli
cld
xorb
mov
roll
mov
cmc
lods
push
testl
or
ds
pop
int3
jb
mov
sbb
pop
ljmp
jecxz
cli
mov
lret
mov
mov
int3
leave
add
leave
int3
outsl
xchg
stos
in
pusha
dec
adc
inc
in
nop
fldcw
pop
rcl
pop
mov
out
jle
bound
rcll
inc
mov
loope
dec
das
addr16
add
fs
mov
leave
nop
cltd
sbb
push
mov
rcrl
out
out
mov
pop
test
in
jg
stos
in
int
or
cmc
push
scas
and
jns
and
mov
or
mov
mov
push
sahf
dec
xchg
call
rol
pop
jecxz
js
insb
jbe
push
inc
enter
jecxz
pushf
push
xor
inc
push
sub
dec
sbbb
ret
js
jle
push
lcall
pop
imul
xchg
cwtl
pop
mov
cmpsb
or
mov
and
lahf
testl
mov
in
sbb
ret
or
jl
jmp
xchg
icebp
ret
cmp
iret
ljmp
adcl
add
aad
mov
xchg
in
test
popf
xchg
fiaddl
jl
in
mov
xor
popf
adc
mov
fs
call
sub
push
pushf
shll
ja
lahf
aas
sbb
stc
inc
push
scas
mov
leave
stc
mov
fdivs
cmp
mov
and
lret
mov
ret
test
xchg
cmp
cli
mov
insl
dec
orl
fiaddl
xchg
dec
mov
ja
jb
xchg
inc
pop
sub
and
das
mov
xchg
jmp
cmp
mov
xchg
lods
test
bound
or
inc
sbb
test
addl
data16
inc
add
lret
fwait
pop
lret
into
dec
jbe
mov
pop
xor
rcrb
adc
in
outsb
dec
push
loope
sbb
lods
jp
cli
inc
xor
sbb
cmp
js
push
adc
test
jg
loope
mov
pop
push
scas
or
shrl
inc
shrb
orl
dec
push
push
daa
jl
inc
movsb
std
sub
jno,pn
lcall
push
push
das
push
add
out
cwtl
test
cltd
into
gs
push
jp
iret
dec
jg
pop
dec
fsubl
fidivl
scas
or
gs
hlt
xor
sub
cmpsl
push
cmpsl
dec
insl
je
mov
inc
push
add
in
cmp
arpl
fs
inc
rclb
xor
cltd
add
sbb
mov
or
fiaddl
js
inc
sub
scas
add
dec
insb
adcb
cmp
insb
in
xchg
and
push
jno
add
mov
add
push
lock
mov
loope
mov
lds
das
mov
out
fnstenv
jl
enter
mov
jp
jg
xchg
iret
out
mov
and
jg
cwtl
nop
push
outsb
mov
mov
cmc
lahf
je
pushw
push
lahf
xor
or
pminub
ja
addr16
mov
dec
jl
cli
cld
jmp
arpl
xor
inc
cmp
pop
sub
ret
inc
imul
fwait
jp
mov
ja
xchg
inc
dec
std
push
adc
ffree
mov
mov
or
loop
jmp
push
xchg
xchg
leave
mov
lods
add
aas
cs
xchg
rcl
addb
fcmovne
sub
popf
xor
jp
insl
out
inc
push
dec
mov
mov
cltd
repnz
imul
mov
adcl
mov
rol
icebp
adc
dec
add
push
sub
xor
pushf
push
rclb
mov
outsl
and
jns
hlt
insb
xlat
jle
test
mov
or
jnp
inc
inc
lahf
inc
or
xor
call
sbb
sub
rorb
or
cmp
jns
mov
mov
mov
cmp
cld
sub
push
leave
or
popf
mov
inc
mov
arpl
xlat
insb
pop
sbb
out
ds
fwait
shlb
sbb
jne
popf
mov
mov
inc
cmpsb
fs
mov
hlt
jnp
outsl
push
sbb
stc
jmp
xchg
mov
mov
testl
dec
aaa
int3
adc
jg
inc
sub
push
dec
jns
dec
test
or
dec
push
sbb
push
sbb
xchg
cmpsl
and
in
or
add
jl
add
pop
cmpsb
ja
arpl
cmp
jb
adc
data16
cmpsb
xchg
dec
and
mov
into
popa
mov
adc
push
pop
cmpsl
movsb
fistps
add
push
rcll
popf
aaa
rcll
mov
xor
iret
aaa
inc
lret
lods
add
out
xchg
add
cld
ljmp
lahf
in
mov
popf
mov
sbb
mov
xchg
loop
insb
and
pop
dec
or
clc
dec
daa
inc
dec
sti
jae
mov
ljmp
pop
push
in
xor
cmpsl
aad
sub
out
in
jmp
cltd
sbbb
mov
mov
push
cwtl
xchg
and
fucom
es
pop
imul
pop
push
cs
sahf
in
sub
pop
std
adc
imul
sbb
or
mov
lock
add
divl
lds
jle
fs
popf
mov
dec
leave
jns
int3
mov
push
mov
and
pop
pushf
cwtl
push
incl
add
push
pop
cltd
nop
stos
addr16
mov
mov
inc
jno
sbb
fsubp
sbb
out
fst
jle
pop
jle
push
popa
lock
jae
push
lret
lock
xor
in
mov
xor
fidivrl
ret
xchg
into
bound
mov
gs
mov
jmp
mov
push
adc
je
gs
gs
xlat
clc
sbb
inc
ds
mov
add
pop
addb
jae
dec
xlat
adc
popa
inc
lods
xor
pop
lock
test
scas
ja
add
xlat
test
pushf
dec
dec
sbb
shlb
push
push
sar
into
add
cld
mov
test
push
addr16
fstpl
in
mov
jp
fimuls
xor
lret
pop
dec
or
push
mov
cld
jle
cli
mov
mov
mov
push
nop
ljmp
add
jbe
rcll
fwait
jge
and
push
fstpl
sub
movsl
iret
cmp
push
scas
roll
add
sub
jns
mov
xor
pop
test
cmc
std
lret
adc
mov
mov
mov
in
add
shr
jb
cmp
mov
and
loope
sbb
jp
pusha
cmpsb
push
inc
loop
push
rcrb
fdivs
adc
jmp
inc
inc
pop
jle
cwtl
inc
mov
repz
sarb
mov
out
cmp
inc
push
dec
mov
cs
mov
adc
stos
mov
icebp
mov
repnz
adc
pop
cmc
xchg
inc
outsb
and
lds
sbb
das
cli
lret
imul
imul
push
push
xor
jmp
xchg
ret
jne
sub
outsl
outsb
ret
icebp
lods
xchg
or
cmpb
pop
cmp
mov
cmp
jle
pop
mov
hlt
js
test
sahf
cmp
xchg
push
xchg
pop
cmp
mov
push
sub
pcmpgtd
push
push
sub
push
test
sbb
push
int3
jno
aas
jle
inc
jb
mov
js
sbb
dec
or
xchg
inc
outsb
inc
pop
inc
ret
adc
mov
mov
jg
sbb
jmp
dec
dec
mov
popa
in
in
lods
cs
loope
sti
out
inc
xor
sahf
and
pop
jp
inc
out
ja
push
fs
in
add
dec
cmc
rorb
incl
add
cmp
push
imul
addr16
push
out
xchg
jmp
pop
adc
sbb
out
or
mov
cmp
xchg
cmpsl
jecxz
push
test
mov
fs
sbb
mov
jp
jb,pn
or
cmp
scas
sbb
inc
cli
dec
fstpl
leave
out
pop
or
aas
dec
inc
push
mov
cli
add
fstps
mov
out
loopne
or
inc
andl
cmp
lods
nop
int
pop
andb
mov
jne
sbb
rorb
push
push
hlt
fbstp
push
ficoms
xchg
jno
or
and
and
mov
stos
shll
xor
data16
pop
lahf
pop
ja
add
mov
stos
pusha
aas
jecxz
pop
aam
cmp
push
and
sub
std
mov
repz
mov
fildll
lret
into
or
mov
hlt
std
xchg
jns
pop
pop
divb
xlat
mov
jge
xchg
dec
add
std
pushw
popl
rcl
sbb
cmp
idivb
or
enter
push
sub
sbb
and
push
lcall
add
fwait
mov
out
stos
push
test
sub
xchg
popf
leave
mov
and
in
fdivrp
cmc
out
lds
pop
mov
sub
cwtl
xchg
std
cmpsl
int3
lock
adc
mov
cmp
jns
push
adc
aas
outsl
inc
pop
stos
out
mov
mov
sbb
int3
dec
mov
ret
sarb
jge
rcrl
nop
jnp
dec
lcall
rorl
jmp
aas
cs
mov
sub
stos
das
lock
push
sub
lock
mov
adc
cmp
mull
lods
ds
addr16
or
shll
mov
je
sub
leave
adc
ss
sub
mov
shlb
xchg
clc
ja
mov
xchg
xchg
popf
pop
mov
and
aas
adc
orb
xchg
in
mov
mov
in
cmp
adc
fnsave
dec
mov
add
rol
and
cli
mov
push
pop
outsb
jmp
dec
sbb
sub
add
rcrb
outsb
mov
mov
adc
pop
ficompl
mov
jmp
add
mov
jno
lret
mov
je
hlt
test
ss
and
jnp
mov
loopne
bound
inc
dec
jge
sahf
test
dec
fsubr
lods
outsb
insl
push
push
insb
mov
add
xchg
jns
std
sarb
daa
popaw
int3
mov
xchg
fiaddl
icebp
ficomps
jne
in
lock
aaa
iret
sahf
cmp
cmp
addl
stos
std
dec
xchg
movsb
push
stc
inc
into
push
sub
jecxz
pop
aam
loopne
sub
inc
cmp
inc
rorb
cmc
iret
pushf
add
sub
cmp
roll
std
and
push
es
push
add
into
stos
into
mov
ficoml
out
mov
andl
sub
mov
or
out
sbb
jnp
iret
movsb
out
in
hlt
out
sbb
sbb
aam
adc
xor
or
mov
ja
stos
mov
loopne
xchg
push
and
arpl
lock
mov
lcall
adc
inc
movsb
cmp
loope
das
cmp
cwtl
jecxz
xor
cmpsb
repnz
iret
ja
loope
aam
xor
mov
xchg
cmpsb
jbe
cli
pop
xchg
xor
sub
outsb
mov
jp
leave
jo
sub
xchg
push
movsl
mov
int3
sahf
push
testl
dec
pushl
pop
out
aam
mov
pop
pop
nop
loopne
sub
imul
pop
dec
sbb
pop
insb
mov
pop
xor
jmp
ds
jge
pop
mov
pop
leave
mov
aas
push
jge
adc
or
ljmp
pop
int3
dec
int
enter
jle
dec
test
xlat
adcb
xchg
cli
inc
push
mov
ljmp
aas
std
rorb
dec
mov
jmp
push
or
lcall
jns
inc
add
jl
jnp
aam
xlat
jno
push
push
mov
call
xchg
repz
in
sub
cld
mov
adc
test
or
xor
iret
cmp
lahf
or
adc
add
stc
xchg
std
leave
fimull
mov
fists
movsb
mov
jecxz
dec
xor
xchg
dec
lret
lret
add
dec
arpl
push
mov
jo
xchg
repz
pop
rolb
adc
aam
fisttpll
inc
lods
jno
or
or
xchg
jp
subl
repnz
add
movsl
adc
ja
push
and
adc
sbb
cld
into
pop
lcall
int3
xor
xor
push
jae
and
xchg
das
jp
adc
idivl
cltd
cmpsl
loopne
push
pop
pop
xor
add
fsubr
mov
icebp
push
xor
mov
cmpsl
pop
mov
int3
cltd
call
cmp
push
xor
push
xchg
sbb
test
movsl
adc
cwtl
testb
xor
push
mov
mov
add
fdivrl
stos
and
mov
leave
mov
rol
pusha
cltd
fs
lcall
sbb
iret
pop
xchg
jb
inc
dec
xchg
repnz
and
aam
fnstcw
shll
stc
inc
lods
out
aad
aam
mov
les
pop
adc
test
and
inc
out
sub
fnstsw
sub
jmp
lea
fs
rcll
push
das
push
fmull
mov
inc
xor
add
mov
arpl
mov
jecxz
cmp
test
pop
inc
frstor
sahf
lock
or
push
fbld
js
pop
cmc
lahf
cmp
loope
inc
dec
cmp
xchg
add
inc
int
jp
xchg
mov
cmp
push
jo
lods
or
and
and
mov
push
sbb
mov
xor
jle
les
sub
out
mov
xchg
loopne
jle
sbb
add
arpl
out
xchg
dec
jae
fwait
adc
notb
adc
jae
xchg
jo
pop
and
adc
pop
data16
mov
out
je
adc
xor
dec
je
add
fistps
in
outsl
mov
inc
pop
enter
mov
cmpsb
lret
stos
negl
ficoms
add
push
pop
adc
jmp
lret
cld
push
call
adc
scas
int3
cmc
fs
ret
xchg
ror
fs
shll
xor
lret
inc
lods
loope
pop
stc
lock
push
mov
or
aas
sbb
push
enter
ja
jo
push
jno
and
iret
mov
mov
pop
lds
clc
aam
cwtl
pop
mov
out
push
aas
xor
popf
cmc
cmp
inc
pop
hlt
push
fisubl
add
stos
and
xlat
das
jle
sub
decb
or
pop
hlt
popa
xor
inc
push
test
test
push
jg
mull
cwtl
stos
test
xchg
outsl
inc
push
sub
inc
dec
rcrl
cltd
hlt
fcmovne
ljmp
outsb
outsl
pop
push
mov
jbe
sbb
ret
pop
sbb
fldenv
fwait
lcall
or
or
test
and
inc
jle
inc
inc
xchg
adc
je
jae
xchg
pop
popa
std
les
outsl
lock
data16
cmp
adc
pop
loopne
into
pop
cmp
sbb
repnz
je
es
mov
push
enter
pop
or
xor
repz
and
fisttpl
cmp
call
jle
cmp
push
xchg
fdivrs
in
xorb
and
xor
push
mov
ds
adc
test
lea
and
lods
sbb
clc
and
jmp
inc
jmp
pop
xchg
out
cs
cmp
cmp
and
push
sbb
adc
out
lds
fadds
dec
sbb
mov
ds
shrl
lret
aad
sbb
xchg
sarb
cmp
xchg
sbb
mov
mov
stos
rolb
mov
aaa
loopne
sbb
add
enter
push
add
pop
rcl
cmp
arpl
icebp
or
ret
in
mov
jnp
inc
pop
sub
loope
mov
mov
scas
fdivr
orl
cwtl
out
mov
sbb
jp
pop
mov
repnz
out
or
dec
dec
pop
inc
loop,pt
fidivs
imul
pop
and
inc
jle
xor
cs
mov
pusha
pushf
es
push
aam
pop
push
rclb
lock
scas
cmp
dec
or
into
sub
xchg
and
cwtl
cli
test
xchg
test
sbb
push
sub
int
subb
adc
popa
pop
popa
push
inc
mov
into
push
xchg
push
lret
neg
sbb
mov
sahf
loope
cmp
cmp
push
aaa
and
in
int
cmc
mov
enter
adc
fiadds
jns
rcr
jmp
jno
divb
stos
add
dec
xor
lcall
push
dec
subb
push
es
mov
test
mov
aaa
test
mov
xchg
leave
or
lcall
xor
inc
rol
jle
add
lods
leave
lea
mov
lods
popa
in
out
mov
mov
shll
xor
scas
mov
jno
mov
jo
leave
and
movb
push
pop
icebp
rclb
sub
in
repnz
out
sub
jne
lods
into
clc
add
out
hlt
lcall
aad
cmpsb
rcrl
pop
es
push
push
pop
movsb
push
mov
or
leave
mov
mov
adc
clc
mov
dec
xor
jae
xor
es
pop
scas
and
loopne
fcomp
shrl
cli
inc
push
cmp
lcall
cmp
or
add
add
or
adc
fs
pusha
or
lock
repnz
loope
lods
mov
popa
int3
int
push
mov
mov
mov
dec
mov
sahf
sub
inc
gs
push
inc
iret
add
ret
mov
xlat
cmp
testl
mov
cmpb
nop
and
or
in
and
inc
dec
add
jecxz
adc
mov
aaa
or
ss
pushf
sbb
stc
jb
fwait
or
inc
stc
shr
neg
les
repnz
mov
loopne
seto
mov
mov
mov
hlt
inc
adc
jb
xor
aad
dec
ja
lcall
xor
jno
xor
xor
pop
mov
sub
adc
push
std
push
inc
movsl
roll
xor
stc
mov
or
call
aam
pop
ljmp
mov
jnp
mov
sub
mov
inc
scas
loopne
jb
int
dec
cmp
mov
jecxz
insb
stc
cmpsl
inc
mov
mov
adc
inc
mov
dec
push
nop/reserved
or
add
push
or
jns
fsts
mov
pushf
adc
and
cmp
sub
cmp
mov
shrb
sbbl
xchg
adcl
adc
jns
aam
lret
mov
cmp
ljmp
dec
push
pop
ds
test
push
xchg
mov
pop
nop
add
jl
shrl
inc
imul
dec
mov
loope
mov
lods
adc
cmp
orl
jge
mov
cmpb
mov
stos
sbb
mov
cs
mulb
mov
shll
outsl
pop
gs
mov
xor
mov
pop
outsl
std
aaa
vprotw
sub
int
xchg
into
int3
sub
adc
arpl
gs
add
jle
jns
xchg
fs
xchg
xchg
push
mov
enter
or
sar
inc
jle
inc
cmp
ret
dec
sahf
jbe
inc
push
push
or
or
jecxz
xor
mov
leave
ja
sub
orl
push
xchg
negb
mov
or
push
insl
mov
mov
ficoms
repz
push
nop
fs
lea
push
inc
pusha
pop
arpl
push
sbb
push
xchg
and
movsb
dec
sahf
jecxz
or
lcall
push
pusha
pop
mov
sbb
sbb
icebp
xlat
jb
mov
mov
cs
cmpsl
mov
in
ljmp
inc
iret
aad
fistpll
pusha
es
mul
nopl
push
mov
lds
xchg
lods
or
dec
adc
icebp
jbe
arpl
push
lret
dec
ljmp
xchg
xchg
ret
jae
mov
fnsetpm(287
jo
push
xchg
push
sbb
dec
jno
int
ljmp
dec
sub
xchg
daa
pop
sahf
cmp
sub
or
sub
or
inc
xchg
sbbl
or
mov
adc
mov
add
inc
out
add
fstl
addr16
or
mov
mov
fistpl
inc
test
sti
jmp
jle
loopne
mov
ret
sbb
mov
lcall
xchg
xchg
cli
mov
stos
and
push
out
mov
repz
lods
aam
inc
jne
subl
jb
test
adc
mov
test
shrl
inc
cmp
sbb
mov
dec
adc
in
dec
pop
sub
sbb
dec
cmc
inc
pop
inc
or
in
mov
mov
adc
xor
call
xor
cld
call
mov
je
push
movsl
mov
sbb
add
pop
xchg
inc
dec
mov
xchg
negb
pushf
inc
sbb
or
nop
cli
jbe
add
shlb
xchg
and
sarb
mulb
push
push
pop
testb
push
loop
popf
sbb
arpl
fsubl
icebp
pop
cwtl
shrb
jae
or
jl
push
jp
lods
lahf
fisubs
ja
dec
xor
int
sti
xchg
iret
fsubr
jle
cwtl
cmp
mov
icebp
cmpb
adc
add
ljmp
ret
mov
out
test
push
je
repnz
xor
addr16
nop
test
cmpb
clc
mov
cmpsb
ret
push
je
in
sbb
mov
dec
jnp
pop
leave
ljmp
lock
and
or
inc
lret
add
sub
lcall
dec
xchg
and
push
je
push
add
outsl
dec
inc
movsl
mov
lret
mov
daa
mov
xchg
lods
fcomps
insb
mov
lahf
dec
mov
push
push
xchg
inc
mov
ljmp
scas
pop
int3
mov
in
scas
dec
aaa
cmp
inc
imul
sbb
out
fdivp
pcmpeqb
test
pop
xchg
fidivl
lea
xchg
inc
pop
inc
loop
jecxz
or
icebp
shrl
dec
or
pop
add
mov
shlb
out
outsl
cmp
mov
mov
ja
xchg
pop
xor
mov
cmp
mov
outsb
jns
out
and
ret
gs
cmc
cmp
into
push
add
in
imul
mov
icebp
ss
add
xor
sbb
loopne
sbb
and
push
loopne
jmp
movsl
xlat
loope
mov
sub
push
data16
pop
or
inc
inc
inc
pop
enter
sub
mov
mov
in
jae
jo
mov
sti
pusha
or
and
dec
jnp
mov
aas
cmp
int3
loopne
pop
sub
jle
imul
lods
sbb
cli
enter
js
mov
dec
mov
leave
mov
inc
inc
push
pop
stc
in
in
mov
lret
je
add
pop
out
pop
imul
shll
insl
mov
push
lods
loop
add
mov
nop
sbb
lea
adc
cld
mov
jl
popa
pop
adc
or
mov
cmp
add
mov
lea
mov
rorb
ret
adc
xor
and
js
filds
xor
das
mov
fwait
mov
xchg
jl
add
stc
scas
mov
rcr
cmp
mov
dec
xchg
dec
clc
insl
add
jae
mov
mov
mov
fists
popf
popa
insl
and
imul
pop
shrl
cli
cmc
addb
pushf
in
pop
or
xchg
xchg
adc
mov
mov
fcmovne
leave
pop
fucomp
pop
jmp
es
iret
sub
push
and
xor
out
out
outsl
or
mov
pop
add
fwait
repnz
dec
aad
sbb
imul
rorl
or
dec
add
mov
jg
ja
xor
shr
fnsave
mov
repnz
mov
aas
mov
xchg
xchg
pusha
leave
mov
bound
xchg
arpl
xor
fiaddl
or
push
fcmovnu
jnp
lret
mov
pop
jne
stos
sub
mov
in
mov
push
jge
fstpl
dec
out
and
imul
inc
dec
mov
scas
cld
fidivrs
sub
jns
scas
mov
loope
int
leave
pusha
mov
inc
data16
cmp
push
mov
pop
mov
aaa
push
inc
test
repnz
mov
mov
xor
gs
lea
dec
mov
jns
in
popa
repz
outsl
mov
pop
pushf
sbb
and
adc
jbe
xchg
or
jo
sahf
xchg
mov
inc
scas
roll
mov
push
xchg
jp
pop
dec
test
cmc
push
push
movsl
loope
ss
mov
into
dec
adc
arpl
repz
sub
jge
cli
dec
ja
mov
int3
xorl
dec
lret
int
adcl
outsl
xchg
lock
fists
fstps
pop
stos
shl
out
andb
in
fwait
jbe
push
pop
jge
add
xor
daa
cmp
filds
aaa
sbb
popf
ljmp
in
jns
mov
cmpsb
xor
mov
adc
stc
adc
rcrl
loop
xor
out
mov
cmp
push
pop
in
pop
cs
cld
pushl
lods
dec
adc
mov
mov
scas
clc
in
addl
ds
push
loope
add
dec
mov
mov
cmp
ss
mov
out
mov
ror
mov
insl
dec
pop
xchg
cmp
mov
mov
sbb
cmp
sub
leave
inc
push
dec
aaa
in
roll
daa
adc
int3
fildll
sarb
mov
pop
sub
out
decb
adc
leave
inc
push
imul
dec
lahf
xor
jno
ret
sbb
cs
mov
into
dec
dec
mov
insl
fs
xor
pop
or
add
xchg
xchg
fwait
push
sub
or
sbb
adc
scas
add
pop
adc
out
push
mov
inc
out
not
dec
pop
jle
and
shrb
in
inc
push
sbb
iret
arpl
adc
xchg
mov
xchg
insb
fcomi
sar
cmpsl
mov
imul
clc
mov
or
cli
xchg
adc
pop
ds
lock
fs
push
add
pop
sub
pop
es
imul
adc
push
fcomp
xor
rcrb
jb
pop
lds
fimull
int
test
imul
push
inc
jge
imul
movsl
push
xchg
lods
lcall
fdivr
fwait
jne
cmp
aam
jno
mov
xchg
cmp
adc
ret
xor
les
in
lea
dec
mov
das
push
call
int3
popf
jle
adcl
pop
pop
jge
in
xor
ror
fidivrl
jbe
cmpsb
test
pop
xchg
jns
cmc
inc
adc
xchg
or
mov
sbb
lods
mov
into
gs
fwait
push
clc
add
inc
push
outsl
jae
inc
out
sbb
imul
push
or
pop
cmpsl
sub
loop
enter
mov
into
sti
hlt
jbe
inc
cld
cltd
add
repnz
daa
adc
cmpsl
icebp
std
outsl
or
jecxz
push
push
pop
inc
loopne
popf
js
sub
test
or
mov
push
fs
add
stos
daa
and
es
inc
cltd
test
xchg
shl
imul
xchg
xchg
or
gs
add
push
jnp
inc
add
insl
imul
addr16
pop
jg
push
int3
add
std
xor
cmp
mov
cwtl
fimuls
xchg
loope
in
and
fs
sti
sar
mov
fldcw
jecxz
daa
jae
xchg
js
xor
insl
or
sarl
lock
jns
fisttpll
fisubrl
popa
add
int
jo
stos
fucomip
sti
sbb
adc
and
sub
iret
inc
loopne
je
cmp
test
adc
lods
xor
nop
in
outsl
xor
mov
fcomp
push
in
imul
sbb
mov
gs
jb
dec
sti
jno
mov
lss
inc
cmpsb
je
sub
xor
dec
jp
stc
fs
mov
dec
dec
lods
inc
xor
mov
jl
test
insl
jl
lahf
leave
popf
orps
add
in
or
aaa
pop
xor
hlt
xor
jae
addb
adc
ret
dec
addr16
adc
add
icebp
hlt
out
xchg
pop
mov
sbb
cmpsl
insb
mov
nop
in
mov
jg
xor
aam
push
push
cmp
mov
jo
out
into
jle
pop
mov
lock
int3
mov
jl
mov
fnop
add
add
fbstp
pop
lahf
cmp
sbb
adc
push
push
cmp
or
fs
cmp
xor
or
xor
loopne
loop
into
push
jo
je
int
test
dec
lock
test
xchg
mov
movsb
sahf
mov
daa
sub
fcompl
in
in
rorl
ror
insb
test
push
iret
mov
mov
dec
addr16
nop
outsl
lea
push
push
xchg
push
and
sub
mov
mov
rcr
test
add
scas
out
sub
movsl
popl
mov
inc
stc
dec
testb
pop
push
call
jns
clc
pop
stc
jnp
fidivl
clc
das
outsl
fildl
inc
dec
cmc
cmpsb
inc
cmp
test
out
cmp
iret
inc
fnsave
push
ds
jmp
daa
jge
ret
mov
lret
jecxz
jmp
xchg
cmp
call
pop
out
mov
cwtl
in
jbe
dec
nop
sub
jns
aaa
xchg
jae
test
daa
push
pop
push
mov
loope
enter
