sbb
add
mov
sbb
insb
shlb
xor
pushf
fldcw
sarb
loop
movsb
scas
push
iret
or
pop
xor
pop
aas
shll
xor
in
out
cmpsb
out
mov
negl
fiaddl
cmovp
aam
xchg
adc
lea
dec
or
dec
js
cmp
push
inc
test
mov
cmp
jmp
stc
ja
pop
ss
test
dec
roll
jne
sub
dec
aaa
cwtl
and
jae
popf
fwait
push
mov
loop
adcl
ja
nop
ret
or
nop
das
cmp
push
xchg
pushf
add
sub
je
lret
push
fidivrl
add
push
sub
mov
dec
mov
pop
and
clc
mov
mov
xchg
pop
fimuls
inc
sub
sub
les
in
sub
add
jp
mov
xor
in
popa
mov
nop
xchg
movsb
jg
mov
in
push
sub
rcr
add
add
mov
mov
loop
lea
cltd
pop
das
dec
pop
pop
int3
movsb
lret
inc
and
or
cmp
rcr
jnp
jae
imul
pop
pushf
mov
jmp
movsb
leave
fstl
jno
mov
jp
inc
push
add
lods
call
sub
je
rcrl
loopne
adc
sub
rcrb
push
cmp
clc
stc
enter
jle
dec
jb
push
das
push
in
cmc
test
xor
jae
pop
sub
mov
and
xlat
les
mov
in
xor
add
movsl
xor
sub
mov
or
rcrb
aad
lods
sub
pop
pop
insb
ss
mov
push
xor
mov
je
xor
fsubrs
xor
pop
push
or
inc
test
in
jmp
sbb
mov
pusha
xor
rclb
add
lcall
and
sub
pop
and
cs
or
pop
loop
loop
adc
push
rcrb
sbb
mov
mov
pop
ficoml
test
xor
push
orl
aad
jmp
lods
add
xor
in
movsl
out
mov
xchg
iret
dec
sub
mov
mov
and
push
data16
stos
xchg
adc
arpl
pusha
loope
jg
js
sbb
xor
lahf
add
sub
cltd
das
and
mov
adc
mov
call
jae
sbb
sub
pop
out
arpl
sub
sbb
gs
jmp
and
cs
movsl
addr16
jbe
test
or
adc
cs
fwait
push
sbb
sbb
cmp
test
add
cmp
xchg
outsl
scas
cmp
cmp
push
lds
sahf
shl
push
pushf
mov
and
outsl
xor
sbb
rorl
sub
ret
into
adc
mov
mov
jle
mov
push
lods
bound
pop
inc
enter
sbb
rol
push
mov
cld
fistps
gs
cs
stos
pop
jns
test
or
imul
dec
mov
imul
clc
cmp
aas
sbb
in
repnz
rolb
insl
punpcklwd
aas
pop
adcl
inc
mov
mov
fwait
push
push
les
data16
test
sbb
jmp
test
or
lahf
imul
repz
pop
push
daa
jbe
jnp
mov
inc
xchg
mov
ret
sbbl
repnz
insl
jo
nop
arpl
mov
aad
repnz
outsb
sti
cmp
ljmp
arpl
sub
out
loop
pop
mov
mov
add
fwait
je
jl
inc
imul
or
xor
cmp
mov
pop
pop
ror
inc
es
adc
mov
cld
jmp
js
inc
add
dec
lock
mov
ret
out
fstpl
jmp
lods
pop
stos
stc
xchg
sbbl
insl
in
pushf
push
jg
mov
in
mov
sbb
out
or
mov
hlt
std
in
pushf
add
push
int3
cmc
jmp
jo
insl
mov
push
adc
std
push
out
cmp
into
sub
pop
dec
cltd
cld
xchg
sbb
ljmp
jne
mov
and
sbb
xor
jnp
test
push
insl
imul
push
mov
fnsave
js
fisttps
repnz
jb
lods
cltd
aaa
push
ja
int3
and
rep
nop
cwtl
sbb
je
jnp
movsb
cmpsl
cmc
pop
cmp
sarl
stc
faddl
and
icebp
in
jo
dec
sub
sub
jb
enter
scas
pop
fnstsw
call
sub
jo
pop
es
mov
gs
js
imul
into
sub
xchg
dec
mov
addr16
int3
out
roll
fdivrl
sbb
ss
inc
inc
fildll
shrb
enter
stc
mov
xchg
adc
xchg
cli
movsl
int
mov
cmc
aad
sub
and
stos
pop
or
insl
xchg
jbe
test
dec
stos
movsl
mov
out
inc
out
pusha
mov
int
and
sub
add
in
mov
cmc
fdivrl
shll
mov
add
mov
call
add
mov
sub
outsl
pop
das
inc
push
push
inc
xchg
jnp
xor
jg
push
cmp
nop
icebp
loope
or
or
mov
shll
out
mov
sbb
cmp
popa
inc
xchg
mov
imul
div
jne
cli
aam
xor
stos
lahf
cltd
add
call
dec
and
lods
sbb
cld
movsl
cmp
lret
mov
les
xchg
mov
jl
cs
adc
sub
stos
or
jne
fcomps
dec
push
outsl
ret
lock
test
les
je
clc
pop
push
xchg
add
and
popaw
xchg
jmp
fidivrl
das
and
mov
andb
adc
clc
sbb
push
aaa
iret
test
outsb
shll
scas
icebp
test
clc
cmpsb
mull
sub
sarb
sub
hlt
bound
fmul
data16
addl
sub
lea
jno,pt
inc
mov
and
stc
mov
mov
lcall
jnp
adc
sbbb
movsb
fbld
sub
movsl
xchg
or
fucom
out
fs
int3
ja
jae
jne
into
je
mov
decb
and
fisttps
mov
mov
push
adc
incl
fcmovne
sub
cmp
pop
adc
in
dec
decl
aas
repnz
fwait
cld
int3
out
fs
cmp
sbb
dec
in
mov
test
inc
sbb
call
push
cmpsl
iret
xchg
repz
inc
aas
ja
insl
subl
mov
cmp
sub
xor
call
call
or
and
imul
xchg
outsb
mov
imul
xor
xchg
cmpsl
xchg
or
push
inc
mov
fiaddl
cmp
popf
stos
adc
sub
iret
add
imul
rorl
shll
or
dec
fldt
pop
sbb
mov
int
into
dec
mov
aas
sbb
mov
out
pusha
sub
dec
jecxz
jmp
loop
pop
jmp
push
mov
jp
lret
mov
inc
outsb
clc
add
push
mov
cmpsb
std
cmp
ljmp
repz
and
fldcw
jae
or
jb
cmp
fwait
loopne
jge
lcall
loopne
adc
push
push
nop
fs
ljmp
test
das
inc
push
xlat
jns
hlt
test
lahf
cmpsl
sarb
dec
imul
mov
js
adc
inc
cld
mov
mov
cmp
add
outsl
sbb
cwtl
add
cld
bound
adc
fs
mov
aas
ja
push
pop
push
cmpsl
jl
outsl
rcrb
les
jl
ret
cmp
mov
sbb
xlat
mov
jns
pop
out
or
shll
fsub
or
jmp
jae
stc
xchg
and
jae
fnstcw
inc
std
mov
lods
sbb
add
or
imul
stos
sarb
sbb
outsl
jmp
dec
daa
xchg
in
jg
jecxz
imul
adc
push
aaa
ret
imul
mov
leave
sub
call
int3
mov
sbb
bound
cmp
jg
lcall
movsb
dec
dec
scas
nop
sub
repnz
and
ss
sar
or
fdivr
and
lock
and
mov
lahf
mov
add
push
les
xchg
lock
test
movsl
pop
add
sti
jl
fs
and
jmp
pop
stos
jmp
push
das
adc
fists
fdivrs
inc
push
mov
jge
sub
add
pop
loope
in
mov
cmp
out
test
and
push
mov
je
ja
mov
add
and
stos
daa
cmp
inc
sub
cmp
enter
insl
stos
and
sar
add
jb
mov
pop
adc
inc
outsl
jae
sahf
cmpl
jge
mov
sub
pop
pop
mov
shr
pop
fsubr
loope
adc
sbb
aam
or
ror
sub
xchg
mov
dec
ljmp
lea
pop
mov
xchg
shll
mov
fbld
xor
das
gs
into
or
cmpl
and
push
and
shll
pop
mov
shll
lea
jbe
ljmp
jne
pushf
xchg
add
mov
jmp
xor
jle
jl
push
insl
adc
mov
mov
push
ljmp
pop
test
or
outsb
rcrl
ret
mov
aaa
inc
or
ljmp
jle
int3
in
xor
cmp
mov
jle
inc
mov
les
cmp
rorb
jge
sbb
add
cltd
cmp
jmp
call
xor
in
testl
sbb
add
cmp
pop
outsl
movsb
or
mov
push
int3
xchg
mov
jp
inc
adc
sub
ljmp
lds
add
jbe
cltd
cmp
mov
jecxz
ffree
mov
xor
add
mov
jae
mov
mov
jbe
jne
fldt
ret
and
outsl
ds
mov
add
push
push
js
adc
es
adc
jp
jmp
pop
cli
pop
sar
into
dec
xor
push
cwtl
jecxz
mov
push
lret
ljmp
add
lret
adc
stos
cld
inc
jle
sbb
sbb
sbb
pop
mov
sbb
out
xor
xchg
repnz
push
mov
add
test
nop
fists
push
xor
stc
sbb
xchg
cmp
mov
cmp
cmp
or
imul
popa
sbb
jbe
fcompl
cmp
jmp
lea
xor
lret
repz
pushf
adc
mov
mov
std
sub
std
dec
rclb
xchg
adc
repz
cmp
pop
aam
adc
cmp
dec
enter
and
mov
in
jge
imul
xlat
adc
ret
and
and
add
cwtl
push
ljmp
test
mov
adc
push
in
sbbl
pop
cmp
pop
in
movsl
pop
xchg
jmp
jae
lods
nop
jnp
push
adc
mov
xor
testl
outsb
imul
cwtl
test
xchg
pushf
sti
nop
jns
jecxz
loop
jecxz
mov
xchg
sbb
push
mov
cwtl
xor
std
push
or
ja
cmc
adc
or
xor
push
push
insl
inc
adc
mov
mov
rorl
jb
mov
ss
dec
leave
scas
sbb
shrd
mov
mov
fcmovnbe
pop
fistl
enter
shl
pop
pop
out
xor
adc
movsl
mov
cli
mov
rorl
jl
fdivrp
icebp
push
data16
ficomps
ret
sub
dec
mov
mov
into
xor
clc
scas
mov
in
outsl
dec
test
lret
push
add
jge
xor
cmovs
shll
sbb
push
dec
pop
xchg
sbb
dec
call
ss
test
jae
mov
orb
fmull
push
loopne
sti
xchg
add
mov
mov
imul
into
xchg
into
test
and
sbb
add
je
mov
inc
hlt
movsb
out
fcoml
in
pop
aaa
mov
fstpt
mov
cmovg
pop
outsl
push
int3
pop
andl
jp
daa
les
xor
fcomps
repnz
adc
push
adc
in
sbb
inc
mov
loope
jo
cmp
add
xor
dec
test
add
lock
xchg
mov
popf
and
xchg
fcoml
jo
sbb
jg
bound
test
in
lret
mov
cli
lahf
pop
mov
mov
inc
repz
mov
and
mov
inc
mov
cmp
fwait
clc
inc
loope
mov
push
push
divl
insl
adc
push
or
cmpsb
int3
out
ljmp
pop
gs
dec
and
fldt
in
rorb
jae
pop
jae
add
or
mov
rclb
insb
inc
fwait
mov
xor
and
xchg
cmpb
fisttpll
mov
es
mov
xchg
cmp
imul
fld1
mov
cltd
loope
add
sbb
inc
enter
ds
cli
sub
sub
dec
in
pop
pop
sub
and
push
mov
xchg
or
test
mov
lcall
and
stos
xor
movsb
inc
sbb
xchg
arpl
cmpsl
aam
cmpsl
add
ret
push
mov
sti
aaa
imul
or
mov
test
jmp
or
cli
cld
xor
adc
mov
ja
mov
les
mov
mov
push
xchg
xor
xor
or
sub
sbb
sbb
movsb
fistps
inc
jbe
jg
aam
in
test
add
std
daa
icebp
aas
insb
das
pop
dec
jbe
push
lods
and
jbe
cmp
fsubrl
inc
std
and
add
imul
jnp
andb
in
cwtl
pop
imul
iret
xor
pop
add
test
xor
inc
adc
adc
ret
icebp
mov
lds
shrl
push
in
push
pop
lock
push
dec
pop
in
in
add
push
sarb
dec
and
mov
adc
xchg
cwtl
inc
pop
pop
xor
sarb
xor
repnz
je
mov
jne
fwait
fwait
in
pop
mov
pop
test
dec
mov
jl
icebp
pop
jp
push
xor
jno
push
test
leave
lds
inc
push
mov
fnstenv
push
jmp
or
sar
or
adc
and
push
mov
xor
addr16
push
cmp
add
pop
add
ds
inc
out
add
mov
push
shrb
outsl
jge
mov
dec
ror
sbbb
add
sbb
repnz
pop
pusha
cltd
push
ja
adc
cmp
movsb
rorl
lahf
and
xchg
mov
sub
sub
pop
cmpsl
mov
add
xlat
add
or
cmpsb
jo
aad
std
out
mov
or
into
xlat
push
sbb
dec
lods
js
cmp
sbb
pop
loop
inc
pop
movsb
mov
pop
fwait
mov
sbb
out
xor
or
cmp
dec
scas
out
nop
mov
and
jo
les
scas
add
mov
xor
arpl
js
mov
js
jne
adc
adc
push
xor
outsl
push
push
bound
incb
int
mov
faddl
jmp
cmp
push
incl
push
and
bound
loopne
jl
or
sbb
mov
dec
add
sub
pushf
xchg
arpl
addr16
dec
push
fadd
cmp
push
xorl
cmp
xchg
in
js
outsb
fs
out
inc
and
and
mov
andb
enter
scas
mov
pop
adc
les
dec
mov
aaa
inc
cld
imul
sbb
insl
add
idivl
add
or
push
pop
stc
paddusw
sbb
jne
push
test
xchg
add
rclb
add
pop
test
mov
ret
push
sub
xor
imul
inc
stc
and
loop
push
cli
jnp
insb
xlat
sti
and
sbb
rorl
dec
mov
xchg
or
xor
or
dec
in
scas
cmp
jle
mov
lret
lcall
bnd
lret
adc
clc
imulb
xchg
pop
dec
fcmovu
xor
dec
or
cmpsb
scas
jl
test
adc
cmp
xlat
cmpsl
je
ss
dec
addb
mov
imulb
push
jecxz
repz
ja
add
xchg
push
push
add
hlt
mov
test
add
jnp
stos
push
enter
xchg
add
add
mov
xchg
push
mov
mov
dec
fistpll
enter
stos
movsb
pop
icebp
pop
jne
inc
sbb
fdivl
cmp
mov
aas
mov
popa
loope
rclb
testb
std
mov
sub
push
mov
sbb
jbe
mov
shrb
es
sbb
xlat
mov
cli
bound
xor
cmp
lahf
js
int
nop
rolb
sarl
jnp
aaa
pop
mov
pusha
out
leave
enter
xor
adc
and
or
mov
xchg
fnstenv
xor
mov
sbb
aam
xchg
pop
lahf
mov
aaa
je
sbb
ret
aaa
and
xor
js
push
xchg
hlt
inc
adc
xor
xor
mul
dec
jl
cmpsl
sub
mov
sub
in
mov
dec
and
add
mov
out
mov
sub
outsb
pop
out
adc
cmp
inc
and
xlat
xchg
stc
call
xchg
jno
imul
push
cld
dec
cmp
dec
push
dec
clc
jnp
push
in
mov
jne
fdivr
xchg
fnstenv
pop
fwait
arpl
cs
xlat
sbb
ljmp
rolb
stos
insb
inc
outsb
jmp
fs
enter
cmc
cmp
stos
imul
sub
jl
jg
sbb
cmc
out
imul
enter
mov
xlat
pop
dec
mov
test
inc
test
add
and
in
pop
clc
adc
insb
in
vmread
test
add
and
les
jbe
sub
orb
popf
in
insl
aad
fidivl
sbb
pop
jb
std
pop
pushf
mov
xor
push
es
ds
stc
mov
adc
jecxz
enter
sbb
aas
mov
call
xchg
loopne,pn
sub
lds
ljmp
mov
in
addr16
mov
pop
lret
aam
inc
das
mull
xor
iret
pop
scas
shll
dec
jae
adc
mov
adc
data16
stos
push
inc
mov
push
imul
mov
in
lret
xor
sbb
incl
ror
aaa
push
rorb
fs
xor
shll
and
mov
ret
jecxz
push
push
sbb
jne
shl
push
call
xchg
mov
jno
arpl
frstor
inc
jecxz
cmc
mov
xor
ja
mov
adc
push
fisubrs
push
or
aas
push
or
jne
cmc
inc
movsb
popa
into
repz
ljmp
stos
fistps
jb
bound
dec
mov
mov
outsl
pop
shrl
jl
sub
movsb
xorb
fistpll
mov
fs
fs
jp
mov
push
or
loop
sbb
arpl
dec
mov
inc
jb
sbb
lret
clc
add
or
test
dec
xchg
or
xor
icebp
adc
es
mov
dec
xor
jecxz
cmp
bound
lahf
and
xchg
jg
sub
and
test
aaa
xor
inc
mov
ljmp
mov
inc
in
jp
jecxz
pop
inc
push
cmp
fwait
mov
movsb
gs
in
enter
hlt
int3
enter
inc
sub
sub
ja
dec
addr16
cmc
int
jnp
push
or
inc
jmp
nop/reserved
push
je
or
sbb
mov
mov
dec
sbb
mov
imul
dec
xchg
mov
rcrb
enter
daa
xor
cmp
push
lods
cwtl
xchg
loopne
and
in
ret
and
imul
stos
insb
jle
add
cmc
mov
sbb
insb
dec
jmp
push
test
push
cmp
lods
jbe
xor
stos
aam
adc
mov
je
sbb
push
fildl
pop
jbe
pop
or
sbb
popf
mov
mov
inc
mov
mov
xchg
push
imul
lcall
mov
sarb
cmp
loop
aam
mov
jns
mov
lods
dec
sbb
mov
push
fcomp
push
mov
mov
pop
enter
jno
sbb
sbb
and
imul
mov
jle
icebp
adc
push
mov
fwait
in
pop
rcl
loop
out
pop
mov
dec
or
sub
daa
ljmp
or
data16
xor
int
and
pushf
pop
and
push
mov
not
sbb
test
inc
mov
dec
cld
push
pop
scas
xor
sub
mov
mov
dec
ret
jbe
xchg
or
and
in
mov
dec
pop
adcb
jnp
or
test
push
push
out
jno
mov
movsl
inc
adc
jp
es
arpl
sahf
das
sbb
bound
outsl
dec
adc
subb
test
adc
mov
jo
hlt
sub
pop
movsb
addl
xchg
add
sbb
scas
sub
xchg
orb
push
cmp
out
icebp
aaa
stc
call
sar
mov
movsb
scas
add
cmp
push
xchg
sub
push
sub
sub
popa
movsl
xor
into
cwtl
inc
and
push
sbb
int
mov
jo
test
cli
icebp
fdivp
jge
add
push
imul
iret
sbb
xchg
inc
mov
cltd
ret
cmc
movsl
out
dec
lret
sbb
xchg
lcall
adc
data16
cvtdq2ps
clc
pop
shll
outsb
pop
xor
jecxz
movsl
mov
lret
cli
adc
pop
mov
mov
pop
ljmp
adc
mov
and
mov
xor
shll
adcb
jle
call
iret
sbb
inc
loopne
imul
push
out
fwait
jp
mov
dec
hlt
xor
mov
sub
andb
pop
dec
fwait
adc
in
inc
xchg
jge
mov
movl
clc
add
pop
out
sbb
sub
jmp
lcall
stc
pop
jae
and
cltd
pop
es
jmp
xchg
lcall
scas
mov
movsb
andb
mov
stos
leave
div
xor
movsb
cmp
push
daa
insb
xor
cmp
cmpsb
xor
aaa
leave
mov
mov
fs
xchg
xor
sub
sub
fidivrs
dec
movsl
out
and
sub
dec
jo
or
mov
xor
jle
out
inc
shlb
inc
cs
aaa
icebp
xor
lahf
cwtl
adc
pop
cmpsl
inc
mov
push
push
mov
mov
icebp
fists
enter
adc
cmp
inc
nop
mov
mov
mov
lcall
xchg
daa
xchg
bound
notl
cmp
rorb
fucom
cltd
pop
clc
inc
leave
shl
dec
jne
repnz
aad
jecxz
out
pop
stos
sbb
push
inc
push
subl
mov
lock
or
xor
sub
int
scas
inc
add
std
pop
xchg
xchg
xchg
push
repnz
xor
repnz
jecxz
cmc
and
fildl
inc
in
mov
xor
and
fs
imul
dec
dec
inc
sbb
or
jo
call
jbe
popf
mov
fldcw
pop
sub
lods
into
mov
pop
jns
pop
sbb
test
mov
jno
sbb
pop
rcrl
aam
or
mov
lar
inc
sub
pop
dec
rcr
pop
or
rcrb
add
mov
cmp
mov
mov
pop
pop
pop
lods
lret
fwait
inc
and
inc
mov
add
dec
add
lret
ja
cs
aaa
cmp
inc
mov
mov
daa
lock
add
cmp
scas
mov
std
test
xchg
fisttpl
shrb
fildl
xor
cld
loop
mov
mov
pop
push
int
sub
mov
jmp
rol
add
lret
roll
xchg
mov
pop
dec
arpl
push
jmp
jne
mov
and
sbb
pop
mov
cmpsl
cmp
cmp
inc
in
mov
fnstenv
dec
lret
scas
xor
and
adc
sub
jns
mov
jl
push
sub
jne
sbb
test
sbb
sbb
pushf
and
mov
or
mov
xor
addr16
pop
mov
cmp
les
add
inc
mov
or
sbb
scas
mov
sub
adc
dec
inc
jbe
popa
stos
lahf
aam
pushf
addr16
bound
mov
ljmp
and
orl
xlat
sub
pop
jns
inc
and
mov
or
adc
in
out
cli
and
or
jo
adc
inc
mov
adc
mov
out
jg
push
cmp
ljmp
adc
push
add
jae
clc
rorl
mov
pop
pop
in
jg
int3
sub
adc
cmp
mov
das
xchg
mov
notb
out
lods
bndstx
out
int3
in
jb
xor
push
xor
push
mov
fisubl
inc
call
fst
incb
mov
mov
ret
dec
pop
aad
ret
dec
dec
mov
add
rolb
add
dec
les
push
add
std
add
mov
and
iret
push
pop
test
or
xor
cmc
add
mov
jl
popa
jo
mov
into
cmp
loop
pop
stos
ds
mov
jnp
leave
jmp
push
mov
adc
add
mov
sbb
push
add
adc
lds
mov
dec
in
outsl
repz
jle
jne
ljmp
stos
test
adcb
dec
jne
cmpsl
pop
push
mov
pop
cmpsl
in
and
lods
fxch
aaa
mov
inc
out
jnp
mov
push
rcr
out
lret
xor
leave
pop
incl
inc
imul
pop
xor
lret
rclb
xchg
jae
and
add
gs
mov
push
std
ss
dec
cs
or
pusha
outsb
data16
jge
mov
jbe
jmp
push
dec
das
pop
daa
ja,pt
cld
add
cmpsb
test
faddl
sub
fst
dec
pop
faddl
scas
or
inc
neg
push
push
inc
xchg
add
jmp
dec
mov
mov
inc
fistl
stc
loopne
mov
or
imull
inc
stc
popa
and
jp
in
xbegin
adc
inc
mov
adc
mov
pop
lds
out
add
or
out
jecxz
adc
sub
pusha
sbb
cmpsl
ret
push
push
daa
cmpsl
lods
cs
in
into
aam
inc
push
mov
je
push
cmp
addr16
adc
fldl
mov
mov
andl
mov
mov
mov
mov
sub
fildll
pop
xor
mov
int
sbb
repz
mov
iret
inc
mov
mov
cmp
and
sbb
inc
mov
aas
mov
and
rcl
push
clc
shll
loop
push
fimuls
jb
stos
clc
xchg
cmpsl
xchg
pop
scas
push
add
popf
fprem1
mov
dec
and
loop
mov
fadd
sbbl
and
cwtl
arpl
in
pop
mov
gs
mov
push
dec
mov
and
lret
popa
adc
xchg
xchg
cli
icebp
mov
and
xchg
mov
fmull
outsl
pop
lea
fsubp
jecxz
xchg
adc
lods
out
inc
jnp
es
leave
adc
inc
inc
push
and
xor
daa
push
pop
mov
cmp
sti
je
call
enter
cmp
cwtl
sub
leave
hlt
lret
push
mov
and
or
inc
adc
sahf
sub
jb
cmc
rol
push
xor
imul
adc
push
test
mov
es
bound
sbb
lret
xor
mov
jns
scas
hlt
lods
adc
lret
xchg
or
inc
adc
mov
popf
and
mov
movsl
fwait
movb
mov
mov
sub
xchg
inc
pop
js
sbb
cwtl
push
into
pop
stc
rcr
inc
mov
fld
out
das
fistpll
or
cs
mov
mov
inc
push
jl
out
xor
dec
outsb
jg
aad
jmp
insl
push
pop
mov
cld
scas
roll
stos
testb
inc
fwait
movsl
mov
orl
adc
dec
jns
sbb
clc
pop
sbbl
pop
fwait
test
xor
fdivl
and
jl
arpl
push
scas
jp
or
cltd
aaa
out
add
in
push
pop
dec
pop
add
das
out
iret
aas
sbb
add
push
vpavgb
sahf
jae
enter
cmp
push
push
inc
push
mov
push
add
adc
les
pop
pushf
jae
dec
inc
stos
lods
mov
inc
mov
mov
aas
adc
inc
jecxz
sbb
int3
mov
sub
jbe
out
and
test
jle
notl
mov
fstl
or
pop
adc
xor
mov
dec
push
fimull
dec
daa
push
iret
add
push
bound
inc
cmpsl
xor
pop
dec
dec
mov
xchg
jns
jne
adc
fmull
ficoms
jne
lock
add
loopne
xor
xchg
cmp
mov
rcr
adc
fiaddl
data16
rcr
sti
cmp
adc
add
mov
push
pop
cmp
xchg
int
mull
mov
out
push
test
repz
stc
addr16
in
shrb
jne
xor
sub
push
xor
fcoml
push
fs
popa
and
push
mull
cmp
movsl
fiaddl
pop
push
loop
push
adc
add
lret
ja
push
pop
or
arpl
push
sarl
pop
jge
test
sub
mov
push
cmp
lahf
cs
mov
int3
loope
int3
mov
jno
fidivrs
mov
je
mov
js
dec
mov
andl
outsl
sar
out
je
inc
lods
add
push
fwait
xor
out
jb
daa
aam
mov
pop
rol
cmp
dec
and
lock
sub
ret
sahf
repz
jge
jnp
mulb
sbb
pop
add
pop
cmp
xchg
inc
jbe
inc
cmp
jmp
push
jns
jno
or
and
aaa
inc
lahf
stos
jmp
dec
mov
outsb
iret
xchg
cmpb
mov
pushf
xor
mov
hlt
loopne
inc
in
jmp
test
rorb
divl
cmp
jbe
push
sbb
or
fwait
popf
ss
rcrb
out
sahf
jmp
aad
std
jns
hlt
cmp
inc
xor
mov
pop
mov
dec
xchg
xor
ficomps
dec
movl
daa
icebp
sbb
push
icebp
push
cld
repz
cmc
mov
push
ja
add
stos
mov
jl
jne
jo
orl
or
and
add
cmc
jnp
repz
cltd
fiaddl
push
jg
cmp
cmpsb
cli
push
in
adc
rcr
aaa
dec
dec
imul
stos
cmp
push
enter
clc
mov
add
mull
mov
push
push
xor
sbb
inc
cmp
stos
adc
js
test
sar
xlat
push
mov
inc
and
mov
mov
js
aas
jg
sbb
sbb
push
jle
and
sbb
dec
in
mov
repz
lret
sub
jne
inc
cli
xor
and
jno
jb
imul
mov
or
xor
repz
mov
add
sbb
mov
dec
sub
shrl
xchg
and
out
aam
loopne
notl
cmp
lahf
fistpll
jo
or
in
movsb
and
mov
test
loopne
idivl
imul
xlat
inc
dec
roll
fists
int3
jno
push
ljmp
push
std
xchg
or
fdivrl
fs
lahf
jne
shr
das
push
and
adc
aad
cmp
pop
sbb
pop
lret
insb
ficompl
inc
movsb
sarb
add
mov
push
add
xchg
pop
sbb
push
test
data16
or
leave
shlb
jmp
sti
xlat
xchg
out
push
fisttps
mov
sar
out
adc
test
scas
and
and
sub
xchg
adc
in
adc
xchg
push
es
insb
popa
sbb
cs
mov
inc
mov
nop
ret
pop
into
mov
sbb
out
mov
fwait
cmpsl
xchg
xchg
xor
nop
push
sub
dec
pop
ret
push
and
aam
popa
testb
inc
scas
mov
pop
js
push
les
cmpl
in
leave
test
cwtl
je
outsb
ds
jb
jnp
jae
xlat
cmp
in
into
cmc
fucom
notl
xchg
loopne
mov
ror
cmp
cmpsb
lcall
dec
xor
jns
mov
scas
fsubrl
adc
dec
mov
xlat
pusha
lcall
lea
packuswb
out
xchg
adc
shll
pop
aam
jmp
push
mov
out
out
inc
xchg
cmovge
test
outsb
sub
push
adc
xor
or
movsb
test
push
sti
aad
mov
mov
lods
add
sarl
out
lock
cmp
push
aad
mov
jecxz
mov
or
ficoms
jns
outsl
int3
pop
or
in
cmp
xlat
sahf
push
fs
mov
push
negl
mov
adc
add
fldcw
jbe
mov
addr16
jmp
out
int
iret
xchg
pop
fbstp
dec
or
gs
aad
sub
pop
int3
scas
pop
mov
mov
push
test
sub
sbb
mov
or
repnz
in
shlb
rcr
and
rcrb
aad
or
ja
mov
stc
inc
and
or
xchg
andb
in
jnp
imul
cli
je
sbb
dec
jno
data16
dec
push
or
jnp
pop
fidivl
and
or
es
mov
jle
add
bound
cmpsl
inc
dec
pushf
add
push
iret
sub
daa
mov
fsts
adc
fisttps
pop
mov
mov
xor
aas
dec
or
push
idivb
cmpsl
stos
mov
dec
xor
js
into
pop
shl
out
and
cltd
adc
testb
sub
iret
jbe
daa
add
push
lea
stc
push
add
popa
mov
push
pop
daa
mov
pop
aam
lret
mov
fldenv
rcl
xchg
stos
and
test
data16
and
nop
push
mov
mov
jmp
sub
or
stc
inc
xchg
ret
xor
xchg
out
sub
fsubrl
pop
pop
inc
stos
pop
icebp
scas
jmp
popf
nop
aas
push
lock
inc
push
xlat
xorl
inc
mov
mov
dec
movsb
gs
sbb
jnp
mov
mov
cmpsl
or
mov
call
jl
movsb
mov
int
mov
out
sub
inc
std
cmp
push
push
loopne
sbb
mov
mov
aas
imul
arpl
int
xchg
sahf
imul
pop
divb
hlt
mov
xor
mov
sahf
fs
cmp
cmp
std
adc
sahf
sub
shrl
jg
es
gs
xchg
hlt
scas
and
dec
scas
xchg
fcomps
into
loopne
and
xchg
xor
jg
clc
push
jge
ljmp
push
xor
cmpsl
jo
mov
mov
lret
sbb
gs
arpl
stc
sub
jge
mov
sub
fisttpll
imul
push
jno
call
loopne
add
cli
icebp
mov
adc
outsb
sar
clc
repz
push
pop
out
test
sti
inc
pop
push
mov
and
clc
add
inc
sarb
inc
int3
out
scas
xchg
bound
movd
mov
mov
mov
aam
outsl
jge
xchg
add
hlt
int
imul
lds
add
or
jnp
push
sub
testl
xorl
stos
mov
lret
jg
insb
jp
or
fs
mov
jb
add
repz
mov
sub
das
and
jg
and
inc
inc
stos
mov
pop
aad
std
pop
adc
daa
pop
rol
push
rclb
inc
ret
and
sub
sub
outsb
hlt
pop
orb
mov
dec
aas
mov
fs
mov
pop
cld
dec
push
orb
aaa
inc
leave
in
je
jmp
mov
mov
jb
mov
out
push
mov
xor
test
lret
mov
and
push
lds
push
jne
pop
in
inc
jecxz
jg
adc
pop
sub
data16
push
xor
pop
popf
sub
mov
insl
xor
push
nop
pop
and
push
stc
pop
lcall
push
inc
xor
in
cld
rcrl
pop
or
mov
push
adc
xchg
out
cmp
js
mov
in
loop
and
jo
ficomps
xchg
rol
add
out
fldl
in
in
mov
call
insb
jecxz
adc
push
out
sub
testl
dec
je
and
das
inc
cmp
jmp
popf
cmp
fsubs
sbb
and
int
cmp
inc
jo
mov
pop
call
inc
ficoms
in
xor
push
sbb
or
mov
outsb
or
add
pop
rorl
decl
mov
in
xchg
sub
shr
subl
mov
adc
mov
lahf
test
fcomip
adc
adc
sbbl
sub
mov
push
jmp
fidivs
ret
inc
cs
push
jnp
adc
arpl
pop
lret
lcall
cmp
push
sti
iret
int3
xlat
xchg
mov
mov
mov
adc
sahf
pop
xor
ret
cmpsb
or
in
shl
js
jg
mov
lret
std
loopne
mov
xchg
inc
test
adc
jecxz
out
int
xchg
cmpsb
jno
or
flds
fcomps
les
stc
pop
cmp
sti
sub
sub
cmc
ficoml
imul
sub
push
int
xor
sbb
or
mov
movsb
pop
mov
fidivrs
je
push
mov
pop
inc
jge
mov
inc
mov
xor
xchg
cwtl
ljmp
cmp
ffreep
pop
test
aas
ret
push
jbe
xor
jne
cli
jecxz
mov
add
out
adc
out
stos
pushf
mov
jo
pop
mov
xchg
stc
and
xor
push
push
and
xchg
push
sbb
jecxz
jg
inc
sub
mov
mov
popf
inc
mov
jl
mov
cwtl
loop
mov
rorb
clc
or
mov
in
push
mov
pop
lret
xchg
rep
jge
pop
ja
adc
adc
cmpsb
jne
inc
popf
arpl
je
xlat
shlb
push
push
inc
cmp
mov
insb
fsubr
jo
clc
adcl
fists
imul
dec
xor
adc
push
pop
aaa
pop
xchg
addl
adc
xchg
dec
data16
jge
jno
push
push
pop
lret
dec
fadd
push
sub
adc
mov
and
jge
in
pop
jmp
push
lcall
enter
sahf
or
cmp
loop
lods
fmul
iret
sbb
out
jnp
xchg
push
subl
or
js
popf
and
adc
xchg
rorb
inc
cmp
imul
rol
push
ss
lds
or
leave
cmp
out
push
inc
sub
push
xchg
rcrb
sbb
cltd
adc
mov
call
jmp
pop
jne
int
fwait
into
or
in
stos
add
aaa
xor
jle
inc
jne
dec
pop
xchg
and
shl
sub
decb
call
mov
jb
lea
inc
jecxz
pushf
and
daa
add
xchg
push
cli
push
decl
xchg
pop
add
mov
pop
xchg
mov
or
sub
sbb
pop
daa
ljmp
cmc
pop
jl
dec
pop
sbb
fnstsw
cltd
out
inc
cmp
xor
xor
int
mov
add
sub
popf
add
pop
push
mov
addl
pop
stos
xor
or
dec
jnp
jnp
mov
call
and
in
out
shll
xor
jmp
dec
push
adc
and
add
mov
cmp
repz
aam
pop
sub
in
xor
lea
out
in
in
mov
pop
jmp
out
in
aaa
insl
mov
iret
sti
std
hlt
pop
int
movl
or
fistl
inc
jg
shr
mov
inc
lea
ljmp
leave
out
testb
rcrb
lcall
data16
ret
sub
mov
xor
out
cmp
mov
out
xor
adcb
dec
in
lret
test
mov
add
pop
gs
push
loope
and
xor
inc
and
jns
inc
dec
push
sbb
ljmp
shlb
inc
lahf
lock
push
sarb
cs
and
mov
or
leave
mov
xor
pop
in
das
pop
enter
push
test
mov
xchg
xchg
fucomip
add
loopne
movsb
or
rcr
inc
lahf
enter
pop
dec
cltd
cmpsb
pop
cmc
and
add
adc
mov
mov
cmp
pop
out
xlat
jae
cmp
pop
mov
cwtl
pop
mov
in
xchg
push
sbb
out
orl
xor
sbb
sub
inc
test
shr
insb
push
insl
mov
test
jg
cmp
xchg
dec
push
fldcw
cwtl
sub
mov
aaa
pushf
cld
dec
xor
xchg
dec
pop
or
sub
or
rorl
inc
sub
jb
and
adc
sub
je
bnd
pop
inc
ljmp
cmp
add
mov
add
lods
and
mov
sub
out
aaa
sbb
pusha
cmp
shll
pop
idiv
cld
cs
jb
es
pop
cli
add
push
movsb
or
adc
scas
add
insl
lret
lds
inc
cld
dec
push
jb
cmpb
pop
addl
xchg
jbe
sbb
mov
sbb
pop
fadds
arpl
leave
fs
icebp
pop
adc
sti
repnz
pop
jb
pop
shrb
push
mov
test
sti
insb
pop
jnp
jecxz
jg
jmp
movsb
mov
out
xchg
cs
push
pushf
aad
fistpll
dec
inc
xor
xchg
in
imul
flds
jbe
lret
insb
dec
pop
mov
iret
jmp
sbb
jmp
pop
clc
jno
daa
insb
iret
sub
add
push
mov
dec
shll
push
aaa
jp
adc
and
jae
pop
cwtl
lahf
push
loopne
add
fwait
jns
test
outsb
push
pushl
sbb
fmuls
ficompl
adc
pop
lahf
sahf
iret
sbb
sub
adc
pop
mov
sub
mov
ficoml
scas
mov
mov
ret
lods
cld
push
test
jle
cltd
jg
jmp
jmp
pop
add
hlt
fists
je
add
in
xor
jo
clc
push
mov
les
mov
cltd
ds
and
testl
faddp
xchg
cmc
sub
mov
pop
dec
push
insb
push
mov
ljmp
int3
in
les
mov
aad
cmpsl
out
jns
iret
clc
jl
xor
test
outsb
call
fwait
movl
jb
xor
jne
jb
dec
aam
add
xchg
icebp
shrb
cld
push
fsubl
stos
pop
pushf
jbe
popa
mov
shl
mov
jns
xchg
out
pop
movb
push
scas
das
mov
dec
jne
add
addr16
orl
std
std
inc
flds
cmp
pop
movsb
jge
lahf
ret
pop
sub
pop
or
movsl
aad
in
xor
cmp
in
adc
xor
or
xchg
pop
adc
cmp
mov
sub
and
and
mov
out
fsts
iret
popf
cmp
cmc
add
dec
shl
fldt
dec
shrb
insb
mov
out
mov
sub
stc
sbb
imul
or
or
out
cwtl
shlb
rcrb
inc
data16
lcall
lahf
jb
push
mov
xchg
push
sub
in
sub
je
mulb
push
push
xchg
mov
adc
cmp
pop
loopne
xchg
pop
mov
add
cmpsl
lret
loop
xchg
iret
cmp
shl
push
lret
dec
orb
stc
int
stc
pop
outsl
imul
pop
sbb
cmpsb
dec
or
pushf
mov
mov
sbb
jl
mov
xchg
mov
lret
mov
hlt
insb
xor
repnz
inc
xchg
jg
pop
ret
inc
fsub
ja
jecxz
cwtl
pop
ret
mov
jl
pop
jecxz
hlt
jb
dec
jbe
push
les
pop
ret
xor
jb
or
mov
lret
cmp
mov
loope
pop
xchg
add
fistpll
add
inc
sub
jne
adc
clc
xor
jne
push
or
fldenv
and
jne
jecxz
add
imul
jo
adc
pop
popf
push
shl
leave
les
lret
push
adc
outsb
loope
das
pop
add
insl
jnp
dec
inc
in
add
mov
test
inc
insb
mov
xchg
push
pop
push
push
xor
rcll
and
je
cmp
divb
cmpsb
adc
lea
push
int
pop
cmp
pop
cmc
rcl
sbb
mov
cmp
mov
imul
or
push
pop
aas
repnz
cmp
ss
insb
test
rcr
cmc
jg
dec
mov
mov
dec
add
leave
mov
test
sub
mov
cli
pusha
jae
sub
icebp
mov
inc
imul
fwait
fwait
push
dec
or
imul
in
es
push
pop
adc
bound
cmp
fcompl
mov
fs
xor
xchg
add
lods
adc
movsb
mov
adc
jmp
jmp
scas
mov
rclb
sub
mov
push
test
xchg
pop
or
ljmp
xor
imul
mov
sti
stc
aad
or
xlat
push
pop
sub
mov
adc
mov
sub
cmp
ror
cld
dec
sub
xchg
sub
and
testl
add
adc
sbb
adc
outsb
push
das
stos
add
dec
mov
mov
je
xchg
rolb
ds
lahf
aaa
jg
mov
mov
cmc
xchg
inc
ret
pop
jp
ficomps
or
sub
outsl
dec
mov
leave
ss
std
lahf
bsr
fsubrp
inc
sbbb
out
sarl
cmp
lods
push
sbb
or
and
dec
push
pop
jb
cmpsl
push
and
add
cmc
dec
hlt
loope
std
das
movsb
mov
jmp
shrb
jmp
repz
out
cmpsb
cwtl
push
mov
les
cltd
loopne
pop
sbb
pop
sti
mov
aaa
adc
cvtps2pi
sbb
in
aad
fadds
xorl
jb
xchg
stos
mov
mov
or
out
loop
bound
mov
pop
mov
repz
testl
out
adc
arpl
je
xor
shll
jo
inc
pop
pop
or
xor
jmp
pop
sbb
xchg
and
test
lods
idivb
inc
push
dec
icebp
ljmp
cli
fld
or
in
pop
mov
aas
and
cmpsl
xor
test
mov
pop
mov
outsb
jno
adc
movsl
arpl
mov
jo
sub
imul
xchg
cwtl
push
and
sub
outsb
mov
fists
adc
adc
dec
out
lods
insb
imul
add
jb
and
fmul
dec
pop
add
pusha
stos
cwtl
int
dec
fisttps
dec
fsubs
sbb
js
fldl
cmp
sub
cmpsl
inc
call
mov
push
pop
xor
add
sub
or
hlt
xchg
fmull
adc
or
clc
cmp
jg
lahf
jle
cwtl
pushf
cmp
pop
pusha
mov
jmp
call
jb
dec
mov
xchg
pop
mov
or
filds
stos
mov
and
out
dec
repz
in
pop
mov
cli
test
lods
gs
icebp
in
addl
lahf
sub
xchg
rclb
addb
inc
dec
adc
rcl
sti
mov
xchg
loop
inc
mov
mov
gs
mov
sahf
inc
sarl
lret
mov
repnz
in
cmp
pop
xchg
mov
inc
xchg
or
in
jge
scas
pop
movsl
clc
mov
shl
xchg
or
sarl
add
bnd
dec
jl
es
sti
call
lods
mov
mov
mov
gs
cmpl
sbb
outsl
adc
xchg
push
rorb
ret
negl
mov
ret
and
call
in
push
aaa
xlat
mov
gs
jo
arpl
sahf
fdivr
dec
inc
pop
das
xor
add
fcmovb
in
sbb
adc
jg
jge
pop
xor
stos
rcr
or
jle
adc
icebp
dec
xchg
mov
loopne
movsb
test
and
das
push
inc
mov
dec
lret
fs
or
lods
sub
shlb
into
inc
aaa
adcb
and
jecxz
adc
xor
xchg
cmp
test
cs
imul
jo
and
mov
push
xchg
ja
xchg
loop
rclb
mov
lods
out
out
stos
inc
fwait
mov
inc
and
leave
jmp
mov
push
push
sbbl
mov
cmc
adc
sbb
sahf
aas
lahf
or
jp
jbe
adc
mov
loope
add
push
sbb
pop
and
mov
mov
lahf
frstor
or
mov
mov
mov
xchg
das
fiadds
mov
rol
shl
mov
sbb
daa
int3
lret
cmp
bound
mov
enter
fimull
xor
out
aad
arpl
clc
scas
push
or
iret
inc
movsb
push
pop
lods
xorb
pusha
xchg
mov
lret
jmp
mov
in
lds
dec
cmp
push
jb
ljmp
mov
nop
iret
and
popf
aad
and
bnd
loop
sbb
sbb
pusha
jnp
mov
jno
adc
shll
mov
rcpps
stc
cmp
mov
push
sub
mov
mov
xor
sbb
add
pop
push
or
int
mov
xchg
jbe
jae
pushf
inc
or
insb
insb
adc
mov
in
data16
add
jnp
repnz
stos
pushf
push
fs
xchg
cmp
and
shll
testb
into
pop
inc
fistl
pop
lret
sbb
mov
sahf
xor
jge
mov
mov
cmpsl
push
addr16
cld
clc
js
cmp
into
push
insb
xchg
or
jno
fistpll
xlat
mov
dec
xchg
shrb
cwtl
cmpsb
sarl
stos
add
je
je
movsl
sbb
or
daa
xor
call
dec
addr16
scas
enter
in
xchg
rorb
out
adc
xchg
or
lods
int3
imul
xor
mov
and
mov
pop
shll
fisttps
stc
imul
dec
inc
or
add
jne
rol
push
pop
js
enter
dec
fcoms
outsb
cmp
push
jne
xchg
push
addr16
cli
mov
fildl
lret
mov
push
adc
adc
fdivrl
push
mov
std
dec
xchg
cmp
xor
ret
sti
sub
push
out
loop
enter
ja
lods
fidivs
rorb
pop
hlt
push
fs
jmp
jnp
in
jnp
out
sti
ret
sub
in
add
stos
popa
fbstp
and
dec
sub
xchg
mov
sahf
inc
adc
jp
int3
inc
jl
iret
push
loope
divl
cmp
mov
pop
or
sbb
adc
stos
addr16
aaa
loop
adc
pop
imul
and
xchg
sub
or
lahf
jle
or
add
movsl
pop
cmpsl
pushf
pop
addr16
add
cmc
lahf
mov
push
and
nop
mov
adc
lea
dec
lahf
jnp
mov
sbb
push
into
push
cmpsb
xchg
dec
dec
pop
and
xor
loop
xor
shlb
xor
sbb
pop
lea
sahf
inc
and
push
inc
es
push
xchg
shlb
bts
xchg
in
mov
push
jne
lods
jmp
cmp
inc
scas
mov
fbld
xor
lods
pop
adc
xor
aam
pop
push
xlat
mov
jnp
jmp
and
jg
das
gs
dec
out
sub
xor
pop
push
inc
das
sahf
inc
and
mov
sub
lcall
loop
mov
mov
popa
or
jns
rorl
stos
jb
lahf
loopne
es
bound
sub
pop
loop
adc
cmp
pusha
xchg
mov
and
xchg
push
mov
movsb
add
into
dec
push
lea
stc
sahf
cmp
test
int3
jae
mov
xlat
pop
pusha
std
out
push
or
or
push
and
bnd
pop
and
or
jbe
mov
fisubrl
mov
mov
arpl
cltd
hlt
cmp
lods
rcrl
pop
call
xor
xchg
jmp
adc
test
adc
movsl
push
mov
dec
mov
mov
adc
lahf
lods
and
shlb
push
mov
and
in
inc
mov
rcll
ss
outsl
cmp
xor
or
jmp
and
sbb
mov
ljmp
ret
dec
xorb
sub
push
push
push
add
add
mov
leave
mov
push
rorl
icebp
add
lea
pop
pop
ficoml
clc
push
mov
push
insb
clc
cmp
lock
mov
mov
add
cmp
in
add
jp
pop
lods
xor
and
int
xchg
popa
jae
jo
popf
push
test
mov
les
aas
outsl
and
icebp
insl
push
insl
mov
adcl
lahf
popa
loope
nop
pop
jge
in
imul
pop
pop
sbb
ss
imulb
je
cld
mov
cmp
arpl
xchg
test
daa
pusha
adc
and
mov
lock
js
in
je
sbb
xchg
cmp
ljmp
xlat
sti
xchg
sbb
sub
out
push
fsub
cmp
and
cmp
mov
mov
test
and
call
pop
fmuls
inc
aas
or
dec
jae
ds
cltd
mov
lods
in
pop
xor
cwtl
aad
sbb
push
mov
pop
inc
rolb
pop
cmpsb
mov
scas
call
cmp
or
sti
push
mov
jmp
das
outsl
decl
jl
movsl
lds
aas
iret
pusha
jb
cltd
out
jae
and
popf
xlat
inc
adc
cltd
pop
dec
scas
lock
rcrl
stos
inc
cmpsl
inc
fstl
jmp
pop
mov
xchg
mov
or
jnp
push
in
pusha
jno
mov
xchg
ss
fwait
mov
mov
jge
in
push
repz
movl
out
repnz
and
addr16
sbb
adc
mov
push
mov
negb
sub
mov
jnp
fnstsw
pop
int
imul
sarl
lods
adc
jp
lods
jbe
mov
pop
fs
adc
fs
adc
arpl
shlb
cmp
stos
pop
sbb
movsl
xchg
es
outsl
cmc
push
stos
rol
sub
ret
xor
mull
out
push
inc
cltd
or
mov
mov
test
popf
adc
arpl
mov
fwait
cvtps2pd
mov
mov
sbb
sbb
push
sub
lret
push
ficoms
fs
jbe
cwtl
add
dec
adc
rcrl
xor
add
xor
jle
scas
add
subl
outsl
pop
loopne
push
cs
cmpsb
mov
sub
inc
cmpsl
push
push
jne
arpl
mov
add
dec
xor
clc
xchg
jg
or
pop
scas
fwait
pop
jnp
pop
shll
xorb
jmp
push
stc
testb
pop
xor
rcrl
dec
int3
lahf
push
or
es
cmp
pop
testb
mov
lock
mov
aam
dec
sub
dec
insl
out
mov
movsl
pslld
les
add
shl
int
push
fs
adc
mov
movsb
mov
cmpsl
repnz
sbbb
movsb
xchg
cmpsb
insl
arpl
and
adc
leave
jmp
mov
ja
outsl
push
push
ret
lea
out
pop
sbb
mov
and
sahf
sub
cli
fstps
test
pop
sbb
mov
add
inc
inc
xor
mov
cli
lock
mov
inc
repz
mov
inc
mov
inc
xorb
jle
push
insb
jno
or
int
pop
fidivrl
xorl
lahf
push
test
repnz
sbb
sti
inc
add
sub
outsb
aaa
sub
ss
mov
out
js
ja
xor
inc
movl
jno
bound
xchg
arpl
orb
scas
stos
xchg
push
add
lods
mov
pop
dec
pop
fadd
add
pop
xor
and
out
jmp
cmpsb
jge
or
fucomi
inc
mov
jno
dec
cli
pop
jb
push
push
js
xchg
popf
mov
xor
cmp
aas
push
les
inc
imul
mov
int
fwait
jns
mov
cld
jmp
sub
and
pop
aad
pop
dec
mov
stos
pop
in
popf
data16
or
and
mov
out
jne
push
jg
sti
push
inc
pop
dec
dec
sbb
adc
cmp
mov
pusha
jae
out
shll
cli
xchg
gs
xchg
lods
ja
add
loopne
cmp
mov
loop
or
cmpsb
outsl
add
cmp
mov
stos
in
xchg
repz
adc
mov
scas
inc
gs
jge
dec
scas
inc
push
inc
call
aad
stc
mov
push
fstl
ret
mov
loope
mov
fsubrs
enter
pop
nop
call
sbb
roll
lea
lea
dec
sbbb
jb
stc
and
adc
or
sub
clc
jns
fs
mov
popa
push
jg
mov
add
jp
mov
aaa
repnz
sub
mov
jb
sahf
mov
sbb
jbe
push
leave
pop
iret
xor
out
dec
lcall
xor
test
loope
pop
ljmp
cld
in
imul
insb
push
mov
jnp
imul
sub
inc
mov
stc
fmuls
jb
out
jno
arpl
sbb
jle
fs
testl
lods
je
sbb
loop
leave
rcrl
xor
addl
cmp
sub
sarl
repnz
cld
test
fidivrs
xor
lods
xchg
scas
lret
xchg
sub
or
and
int3
shll
je
mov
into
dec
xor
inc
mov
or
xor
lock
mov
jp
sub
xlat
mov
xchg
fbld
hlt
xor
mov
mov
pop
add
push
imul
scas
hlt
push
es
sub
push
aaa
cmp
xor
cmp
fistpl
shlb
mov
mov
mov
mov
push
sub
mov
rolb
and
pop
je
xchg
and
into
addb
add
das
xlat
xor
xchg
adc
and
adc
sti
gs
pop
in
xor
mov
repz
inc
and
sbb
sbb
fdivl
bound
mov
mov
add
and
in
sub
bound
rol
dec
sub
jmp
or
sbb
lds
xchg
das
ljmp
mov
inc
push
jecxz
sbb
adc
adc
imul
fdiv
or
sub
in
pop
dec
jp
xor
jg
sti
mov
je
std
push
repz
daa
and
sbb
jns
stos
repnz
pop
inc
or
fdivr
add
in
or
lea
inc
ljmp
jnp
cmpsl
rclb
jno
dec
add
inc
cmp
add
sbb
fnstenv
sbb
dec
add
jb
cwtl
mov
sub
xchg
xor
movsb
sbb
cmp
or
lahf
add
or
hlt
cli
sub
xor
inc
hlt
fnsave
add
sub
fisttpll
imul
push
flds
jmp
inc
es
jl
add
out
lds
inc
js
lea
addl
push
cwtl
adc
addr16
xchg
dec
cmp
cltd
jmp
push
rcll
ss
insb
mov
xor
loope
pop
lock
lock
sbb
sub
outsb
into
jo
mov
cwtl
push
std
push
or
mull
aas
sahf
jle
cli
inc
jo
push
dec
xchg
push
push
xor
mov
icebp
int
jp
mov
xor
aam
pop
call
jmp
ret
and
rcrl
leave
mov
adc
in
aam
and
cmc
stc
out
fnstsw
dec
or
shll
xchg
adc
jnp
pop
push
xchg
dec
aaa
dec
outsl
lock
pop
mov
sub
pop
add
std
stc
pushf
dec
pusha
clc
cmp
mov
addr16
jnp
cmp
cmpsl
dec
jmp
jg
dec
cmp
add
add
cmpl
mov
inc
xchg
imul
ss
lea
divb
mov
dec
adc
dec
inc
and
in
aam
xchg
dec
pop
call
stos
xor
pop
sbbl
mov
xlat
outsl
in
fwait
push
add
xor
lock
aam
pushf
mov
and
ja
xor
dec
enter
sbb
js
jg
aam
es
jns
cmp
sbb
pusha
scas
jb
jmp
mov
lds
frstor
popf
jl
jmp
es
push
pop
in
or
jb
jle
sub
push
inc
sbb
ss
and
fdivl
clc
aas
addr16
aad
xchg
add
dec
int
mov
test
adc
js
cld
xor
xor
adc
ja
xor
adc
cmp
mov
ret
in
sbb
push
pop
push
mov
push
sbb
insb
pop
ficompl
jno
cmpsb
rcrl
push
jns
dec
pop
idivl
mov
push
nop
mov
inc
mov
jb
ret
or
pop
ds
gs
lds
sbb
sub
faddl
lcall
fiadds
ljmp
mov
popa
push
xor
push
movb
cli
fiadds
cli
inc
mov
add
pop
mov
scas
rcrl
rcrb
cld
sbb
push
pop
and
loope
sarl
xor
inc
fadds
arpl
movsl
lods
dec
faddl
adc
imul
movsl
or
push
movsb
push
roll
mov
dec
dec
movsl
push
and
mov
lea
int
lock
stc
insl
or
sarl
repnz
cmp
dec
push
and
inc
fs
sbbb
mov
mov
lret
or
jns
cmpl
sbb
movsl
cltd
mov
es
or
push
add
jnp
imul
lods
sub
addr16
jge
mov
mov
jae
and
and
cmpb
mov
mov
mov
adc
int
mov
jae
xchg
pusha
mov
ret
icebp
pop
add
js
int
flds
pushf
scas
aaa
cmpsl
mov
lret
mov
arpl
jle
sbb
sub
and
mov
jmp
fsubr
insb
cmp
sub
jns
jp
push
test
cld
mov
jae
xchg
mov
rcrb
inc
fstpt
inc
jo
orl
mov
jle
lods
pop
push
xor
addl
push
add
sub
dec
scas
fs
test
sub
pusha
jo
xor
pop
mov
mov
cltd
mov
mov
xchg
mov
ja
push
mov
dec
ja
lcall
push
add
inc
in
adc
ljmp
mulb
adc
mov
movl
dec
pushf
mov
jge
das
dec
outsl
cmp
mov
mulb
jge
push
cmp
scas
push
mov
xor
mov
aad
ds
sarl
push
xchg
dec
mov
jecxz
mov
bswap
or
in
jnp
roll
cwtl
mov
fnsave
mov
and
call
arpl
inc
adc
pop
cmp
xor
insl
xchg
ret
cmpsl
cmpsb
out
fiaddl
xor
lahf
js
adc
outsl
or
loop
cwtl
xchg
mov
mov
int
xor
ja
dec
clc
adc
stos
or
push
ds
adc
mov
push
xchg
inc
imul
lock
or
popf
mov
cmp
in
jae
ror
jecxz
int3
popf
mov
mov
mov
mov
mov
idiv
add
jno
mov
mov
sti
mov
jb
sahf
mulb
mov
icebp
aas
js
mov
ficoms
push
cmpb
jl
pop
inc
int3
add
pop
xor
lock
popf
or
fldl2e
pop
mov
testl
add
cld
or
adc
pop
sahf
shrb
jns
sub
push
add
push
mov
xchg
fdivrs
in
xchg
and
push
mov
mov
leave
out
add
mov
and
addr16
jns
sbb
cmp
cmp
or
negb
out
jns
adc
fistps
mov
pop
loop
push
rol
cmp
pop
outsl
pop
pop
imul
orb
push
xchg
lret
mov
popa
pop
cmpsb
enter
aam
cwtl
dec
test
imul
ret
cmp
push
xchg
fdivrl
jmp
pop
adc
inc
mov
icebp
jecxz
cmpsl
lods
push
aam
pop
outsl
rcll
sbb
sbb
adc
int3
and
call
es
xchg
test
notb
jg
sbb
mov
jbe
mov
in
xor
or
sub
outsb
xchg
mov
js
ret
add
adcl
addr16
inc
in
pop
dec
cmpsl
clc
xlat
inc
push
add
out
jae
cwtl
sub
mov
pop
mov
push
push
out
jns
stc
in
popf
xor
arpl
ds
jp
xchg
lea
sbb
lods
jge
and
call
sub
insb
sub
mov
inc
das
fwait
lahf
sub
loope
int
stos
dec
sarb
pop
lret
data16
pushf
cwtl
loope
cmpsl
jge
inc
cmp
pop
add
and
sub
adc
xor
sarl
pusha
push
xor
add
sub
push
push
inc
inc
mov
push
iret
call
scas
push
push
cmp
mov
add
rcll
jl
shll
dec
lcall
pop
inc
jnp
inc
adc
pop
repz
mov
mov
sub
fstps
pop
pop
jae
xchg
hlt
jmp
filds
dec
adc
jg
test
aaa
dec
dec
enter
cwtl
mov
jmp
pusha
out
sub
fs
and
mov
add
lds
test
add
mov
cmp
int
addr16
inc
and
mov
mov
and
jo
rorb
push
jbe
mov
push
pop
mov
stc
cmpl
mov
adc
adc
mov
mov
and
cmc
ja
scas
imul
mov
dec
inc
aad
out
add
ret
add
arpl
xchg
cmc
add
add
sbb
and
into
jnp
test
jnp
rolb
sti
jg
push
mov
test
dec
xchg
into
negl
mov
jge
cmp
mov
mov
sub
cs
hlt
xchg
add
clc
popf
add
pop
jb
jg
ret
mov
outsl
cmc
and
pop
mov
sub
add
or
mov
iret
idivl
mov
paddusb
incb
jecxz
jnp
jno
adc
popf
mov
mov
repz
std
lds
bound
mov
cmp
lret
mov
test
pop
out
add
cwtl
push
cmp
jg
pushf
rclb
test
jp
inc
shll
pusha
and
push
mov
jle
xor
xchg
rol
ret
pop
sbb
pop
mov
sub
cwtl
push
add
sbbb
jl
mov
subl
sub
push
dec
jmp
sbb
sbb
xor
loopne
pop
negb
outsb
rcll
inc
sub
fucomp
loope
rorb
mov
xor
jmp
mov
inc
call
xor
and
mov
jbe
jle
sar
push
in
pop
sbb
out
mov
add
addr16
sub
jns
mov
in
mov
and
lock
dec
xchg
aam
adc
cmp
and
dec
hlt
mov
stc
ret
pop
pop
in
jecxz
fisubs
jnp
leavew
xchg
mov
bound
and
xchg
push
mov
add
xor
xchg
pop
test
mov
ficomps
movsb
rolb
idivl
mov
in
mov
and
cltd
ret
repz
icebp
inc
ja
les
and
jo
test
push
or
or
dec
aam
dec
test
into
xchg
sub
cmc
adc
xchg
pushf
rcl
imul
pushl
xor
and
mov
pop
nop
aas
push
push
sbb
daa
xchg
adc
dec
mov
insb
insb
das
test
and
aaa
rcr
mov
push
lods
dec
and
sub
sti
push
sahf
outsb
jg
push
loop
sub
out
inc
outsb
dec
jmp
test
les
push
and
inc
mov
inc
jge
loop
lock
mov
pop
jae
lret
sbbl
sar
daa
call
mov
aas
rcr
lds
jg
loope
test
loop
lret
in
test
jnp,pt
ret
and
mov
mov
and
sub
imul
testb
das
or
and
aaa
ficomps
and
or
ror
jle
mov
add
mov
push
fsubs
and
lahf
push
or
lret
jecxz
or
shll
push
jmp
rcrb
ja
jl
nop
int3
cmc
mov
pop
inc
or
test
aad
add
add
pop
push
and
mov
sbb
es
xor
or
iret
aad
int
aam
jg
pop
adc
inc
pop
clc
and
jns
adc
stos
aad
daa
cltd
in
pop
out
leave
mov
ret
pop
jae
movsb
pop
dec
push
add
out
mov
jge
cmp
adc
inc
ret
aaa
int3
jae
adc
lret
xor
ret
cwtl
bound
inc
aaa
mov
cld
add
and
sub
incb
lock
pop
insl
dec
push
dec
fildll
in
fs
mov
or
sbbl
mov
test
notb
cld
ffreep
pop
jge
mov
xchg
xor
push
push
data16
jo
mov
mov
inc
in
xlat
aam
test
jns
jge
jbe
jl
dec
mov
add
js
in
push
in
js
jle
push
popa
xor
xchg
loope
jo
xchg
mov
ss
pushf
lock
mov
dec
push
std
out
add
and
sahf
rclb
cmp
mov
mov
out
ret
push
mov
flds
mov
cmpsb
out
cli
lock
push
xor
movswl
mov
shlb
adc
sbb
sbb
pusha
mov
cmp
inc
movsl
xchg
lods
mov
nop
adc
mov
inc
addr16
pushf
es
sti
dec
dec
das
addr16
imul
dec
jp
or
inc
cmp
js
xchg
loopne
sbb
adc
mull
cmp
daa
fnstenv
mov
pop
push
fisubrs
repnz
inc
push
add
jno
push
push
or
ds
ret
loopne
mov
lock
cmp
inc
sbb
lods
in
int3
push
std
lret
aas
addb
xlat
sti
dec
lea
pmulhw
pop
xchg
das
enter
inc
cmp
icebp
jge
fs
out
push
xchg
sti
jl
insl
push
cli
sti
mov
sub
cs
outsb
in
cmpsb
jg
sarb
shlb
cmp
dec
mov
cmp
cwtl
xor
cmpsl
mov
pop
pop
mov
in
call
push
loopne
fists
scas
inc
divb
xor
dec
mov
jne
cmp
sub
lods
sub
push
or
sub
push
imul
sub
loope
je
repnz
mov
mov
mov
mov
ret
mov
inc
test
fdiv
call
sub
mov
add
or
cwtl
inc
sarb
dec
or
or
stos
add
push
mov
loop
or
jnp
jg
ljmp
pop
push
fnstsw
out
outsl
in
aaa
fstpt
mov
shr
or
js
imul
inc
gs
sbb
or
adc
cwtl
sbb
test
sbb
popf
push
push
xor
mov
cld
dec
dec
loope
ja
jbe
call
mov
push
aaa
mov
enter
orl
cmp
test
test
gs
ret
mov
lock
scas
xor
mov
das
inc
lds
test
sarl
cmpsl
cmpsb
xchg
xchg
fimull
dec
cld
sar
shll
fdivs
fldt
push
adc
push
insl
mov
push
jbe
pop
jle
insb
jg
fucomi
dec
and
addr16
loope
pcmpgtb
scas
test
fwait
mov
xchg
xchg
iret
inc
add
cltd
pushf
fimull
jae
rcl
jl
mov
push
xchg
sbb
sbb
js
sub
jne
aad
and
xchg
and
lahf
aam
push
lahf
test
arpl
imul
inc
addl
scas
and
xor
icebp
add
pop
sub
ret
repz
inc
xlat
xchg
pop
out
mov
cmpsl
daa
sti
push
fwait
mov
mov
or
pop
stos
mov
jno
fsubrl
inc
sbb
movsl
mov
std
adc
test
lods
pushf
push
or
lea
test
std
and
js
clc
mov
xchg
jae
gs
ds
cli
fnstsw
jge
idivb
sbb
xor
xor
cmp
pop
test
or
mov
mov
jae
into
inc
adc
pusha
fnstenv
mov
sbb
pop
push
xchg
cmp
in
in
xor
mov
pop
scas
sti
and
mov
movsb
lret
mov
or
out
inc
pop
jbe
out
and
ss
pop
sti
add
xlat
les
iret
pop
aaa
cmpsb
jbe
push
add
inc
sbbb
jo
jae
lcall
pop
mov
aas
adc
aam
lret
xor
dec
mov
test
aas
std
jae
cli
inc
xchg
and
iret
lds
fisubrl
popf
xlat
mov
pop
fucom
mov
push
jo
mov
ljmp
lret
xor
gs
subl
lret
pop
mov
fldenv
adc
lahf
mov
ljmp
xchg
jno
lret
jbe
cwtl
and
bound
mov
pop
outsb
mov
out
test
jbe
test
inc
mov
mov
add
lret
ret
jge
in
mov
iret
outsl
cmp
loope
jg
and
test
into
ret
mov
push
mov
cs
sbb
jnp
movsl
and
pusha
in
cmp
mov
cld
out
jb
inc
popf
mov
inc
mov
mull
pop
jecxz
pop
test
inc
pop
ss
rol
repz
inc
push
jl
ja
or
out
js
clc
jl
push
xlat
lret
mov
andl
push
in
lock
mov
mov
addb
pop
xchg
pop
mov
dec
fldl
or
add
mov
mov
sti
sub
xchg
fldl
pop
inc
ds
test
movsb
inc
jbe
aaa
into
sbb
into
dec
pusha
lds
adc
jmp
inc
repz
test
fisttps
cltd
xorb
popf
fs
jns
insl
aas
mov
add
lds
inc
dec
sbb
loopne
in
hlt
je
mov
push
pop
mov
or
mov
mov
jns
push
leave
nop
inc
add
ljmp
sbbb
xor
cwtl
loope
add
gs
sbb
mov
sbbl
jecxz
out
mov
popf
rcll
mov
lcall
cmp
xor
aas
iret
dec
inc
dec
adc
sub
inc
inc
adc
sti
hlt
lds
mov
lcall
gs
dec
roll
mov
jbe
dec
rol
cmpsb
sub
cmp
inc
sub
push
mov
pusha
mov
test
mov
sbb
das
push
xchg
pop
ret
fldenv
loop
int
pop
xchg
adc
mov
clc
je
sbb
sbbb
stos
jmp
popa
mov
cld
jnp
mov
faddl
cmpsl
jg
loopne
and
or
sbb
mov
data16
xchg
xor
xor
mov
xchg
dec
inc
push
mov
xchg
mov
mov
in
and
ret
pop
movsl
dec
aaa
jb
leave
pop
xor
ret
out
adcl
mov
pop
mov
sbb
mov
adc
pavgb
mov
jmp
ja
negl
cmpsb
adc
scas
push
test
aam
or
sbb
lahf
cmp
ja
arpl
mov
dec
dec
sti
lcall
cltd
outsl
sub
xor
jl
or
cmp
adc
mov
fcom
cmova
sbb
pop
dec
mov
lods
fwait
in
cmp
andl
test
or
or
pusha
dec
jns
inc
mov
mov
fisubl
fists
test
sub
dec
xor
popa
aaa
mov
xor
add
pop
pop
sbb
in
mov
mov
les
and
in
int
push
xor
clc
sarl
stos
sbb
adc
mov
imul
in
cmp
cltd
rdtsc
ret
fnsave
lds
cwtl
imul
jge
fpatan
mov
cltd
cmpl
out
cld
movsb
in
cmp
jecxz
insl
mov
dec
mov
scas
sbb
xchg
cli
popa
lret
mov
inc
lret
mov
add
insb
imul
mov
inc
movsl
mov
xor
add
push
mov
push
jae
add
cmpsl
decb
push
loopne
mov
iret
jle
inc
push
add
mov
jmp
call
iret
stos
and
mov
and
stos
mov
popf
inc
out
das
loopne
js
lods
scas
loop
cli
test
push
inc
and
dec
pop
stc
xchg
sbb
iret
adc
nop
mov
loop
mov
mov
mov
fisubrs
test
fisubl
mov
lret
scas
setg
push
icebp
mov
cs
jmp
inc
and
mov
push
jecxz
adc
sbb
xor
les
mov
cltd
shlb
idivb
mov
les
lods
inc
inc
and
loop
xchg
test
xor
sub
mov
stc
fistpll
push
cmp
xor
stc
cmc
repnz
mov
gs
mov
xorl
loop
shrl
pushf
aas
adcl
out
leave
xchg
rorl
sbb
mov
cmp
mov
dec
popa
jno
cmp
repz
sub
out
or
push
pop
xor
and
xchg
mov
lea
mov
scas
std
rclb
jmp
repz
or
xlat
pop
and
mov
xor
mov
inc
push
pop
and
es
rcrb
mov
ss
mov
loopne
push
cmp
dec
sar
mov
adc
fs
adc
push
pop
cmp
mov
aam
and
bound
push
jb
pop
popa
xchg
adc
loop
lret
xor
shrb
shll
hlt
push
lahf
mov
jno
aas
dec
cmp
fistpl
and
jb
mov
sahf
sarb
adc
xchg
push
in
mov
push
jo
push
inc
lods
movsb
repz
sub
pop
mov
sbb
aad
fsubrp
out
mov
loope
hlt
mov
fsub
popf
jge
xchg
imul
mov
lahf
xchg
push
outsl
out
call
mov
push
dec
aam
aam
lock
int3
out
ret
fildl
hlt
xchg
pop
aad
nop
icebp
xchg
aaa
psllq
iret
sbb
cmp
loope
loop
or
stos
push
jnp
xchg
js
add
divl
lcall
mov
add
jb
pusha
add
mov
cmp
xor
test
or
gs
mov
dec
pop
xchg
aas
cmp
dec
or
insb
sub
out
cmc
in
sub
addl
jno
or
es
dec
jmp
jge
flds
aam
sahf
pop
movsb
adc
lea
mov
cld
jb
pop
outsl
dec
dec
fsubrs
push
addb
movsl
sub
out
mov
xchg
test
fsubrp
std
xchg
xor
jbe
mov
jmp
or
sub
test
sub
xchg
dec
push
mov
das
fisubrl
bnd
jbe
dec
into
hlt
lret
fcompl
dec
mov
sub
loope
inc
in
arpl
xor
sub
cmp
mov
cmc
adc
xor
scas
inc
mov
or
add
cmp
fbstp
loopne
inc
sti
push
cmpsl
lea
jo
iret
sarl
in
add
cli
xor
sahf
mov
push
add
jp
sahf
jmp
clc
aad
push
sbb
sub
sub
scas
dec
lret
mov
dec
sbb
or
sbb
nop
pop
sbb
scas
push
es
or
mov
dec
outsb
dec
xchg
jb,pt
pusha
mov
push
xor
in
outsl
lea
dec
daa
bound
adc
sbb
push
mov
sub
loop
in
mov
mov
push
mov
cmp
sbbl
sti
inc
adc
xchg
lods
stos
cwtl
pusha
stc
movsb
popa
sbb
fcoml
mov
or
and
xchg
fstpt
stc
fucom
push
lret
fs
pushf
mov
clc
test
fists
cwtl
leave
ret
push
sub
adc
jno
sbb
mov
cmc
rclb
fsub
jae
mov
mov
ja
sub
sgdtl
jg
sti
jae
xchg
lds
and
and
fldenv
sub
xchg
sbb
sbb
mov
sti
sub
push
dec
repz
dec
dec
xor
int
mov
sahf
jp
arpl
dec
fsts
push
pop
jl
push
mov
xor
jle
in
or
mov
adc
scas
jo
push
inc
fwait
mov
xchg
xor
or
lcall
data16
adc
and
and
lcall
lea
outsb
pop
cli
xor
dec
mov
jne
jns
clc
xchg
repz
xor
dec
insl
test
call
dec
add
jle
je
daa
add
jns
mov
daa
lea
lahf
sub
sub
popa
mov
cmp
nop
cld
mov
mov
jnp
fisubrl
cmp
lahf
fs
dec
jae,pn
int
shll
lods
sbb
lret
mov
and
or
popf
sub
ljmp
je
punpcklbw
pop
dec
push
inc
cmpsb
cwtl
adc
pop
mov
cmp
mov
out
ss
rcrb
cs
mov
push
mov
rcll
insb
mov
add
sbbl
mulb
pop
aas
mov
push
fwait
ret
fsubrp
mov
or
js
sbb
out
clc
ljmp
cmp
or
xchg
cmp
add
das
fidivs
cmp
xor
shlb
xchg
imulb
push
mov
lret
ret
bound
pop
and
mov
pop
je
pop
jae
aad
jmp
cltd
dec
call
jecxz
iret
xchg
sbb
rclb
ror
sbb
mov
sbbl
xchg
aam
shll
ficomps
push
and
cmp
adc
scas
jg
aaa
jge
pop
mov
jae
xchg
mov
test
dec
pusha
mov
sub
loopne
fdivr
xor
sar
and
or
xor
in
or
xchg
jmp
out
sbb
frstor
in
push
jle
into
dec
lret
ds
loopne
xor
adc
sbb
xchg
jae
repnz
fiaddl
das
push
bound
call
sbb
push
jl
lea
test
and
push
or
outsb
sahf
icebp
add
pop
imul
lahf
jecxz
jno
daa
add
xchg
add
pop
scas
xchg
shlb
cmp
popa
leave
repz
popf
aad
sbb
xchg
mov
loop
dec
cli
sbb
cmp
pop
aaa
xchg
frstor
in
sti
jo
test
lahf
out
dec
lret
inc
inc
jae
or
loop
movsb
adc
xchg
lcall
and
mov
mov
cmp
mov
repnz
or
andl
jge
adc
adc
pop
fsts
jg
cld
repz
dec
jno
orl
jl
shll
mov
pop
push
das
sub
sbb
js
push
int
sbb
xchg
add
mov
shlb
out
rol
adc
mov
adc
xorl
mulb
jge
xor
std
mov
inc
dec
nop
push
les
enter
aaa
outsl
fwait
popf
subb
mov
mov
xchg
sbb
mov
aam
cmp
imul
outsb
inc
add
inc
dec
in
sbb
adc
sbb
add
fucompp
mov
sbb
bndldx
dec
sarl
sarb
pop
pop
nop
fucomip
jecxz
je
pop
ficoml
call
cmp
or
xor
lods
int3
fsubs
pinsrw
into
xor
sbb
jae
pop
push
cs
fisttps
pop
adc
sbb
ljmp
jns
xacquire
add
fdivrs
mov
jg
sbb
mov
mov
jmp
daa
cs
adc
lcall
cmpsl
mov
mov
inc
sub
out
fwait
add
mov
or
call
xor
lods
in
inc
enter
adcb
dec
inc
cmpsl
addb
xor
sub
shrb
adc
adc
out
gs
cmpsl
mov
xchg
cmpsb
pop
adc
js
mov
movsb
or
mov
add
inc
push
in
icebp
out
lods
rol
int3
or
mov
and
jo
hlt
pop
and
fwait
pop
pushf
lcall
icebp
in
jge
cmp
test
stc
outsb
pop
jp,pt
data16
jno
xchg
push
ljmp
add
fdivrs
sbb
sub
jne
mov
cmpsb
adc
inc
outsb
pop
mov
popa
mov
or
fistpl
pop
mov
adc
pop
and
ljmp
insl
fsts
xchg
sbb
inc
push
mov
stos
rclb
out
les
fistl
outsb
outsl
fcomi
add
movups
cmc
sub
sbb
stos
fisubs
xchg
xor
lcall
insb
adc
pop
lcall
mov
mov
pushf
xchg
dec
pop
aam
push
lods
sub
addl
or
pop
mov
insb
dec
jecxz
jg
leave
enter
hlt
shrb
mov
es
xchg
pop
loop
fsubrl
add
push
add
repz
inc
adc
dec
inc
mov
push
dec
out
push
leave
mov
sub
sahf
lods
clc
xor
stc
push
repz
scas
mov
lods
mov
aam
pop
pop
hlt
imul
jge
je
add
stos
dec
divb
cmpsb
xchg
dec
nop
inc
scas
ja
daa
test
ret
sub
jmp
icebp
das
das
std
push
cmpsb
mov
push
movsb
mov
jae
insb
sbb
xor
into
cmp
push
cmpsl
push
adc
pop
xchg
lahf
jg
loope
fcoml
ret
xchg
cmpsb
jbe
call
shlb
or
popf
xchg
bound
cmp
and
test
push
out
cmp
outsb
repnz
nop
xchg
sbbb
cmp
bound
mov
sbb
fdivl
or
sti
call
cmc
shl
inc
mov
cmpsb
push
leave
out
stos
jne
rolb
cmp
cmp
daa
lret
cmp
stos
lahf
inc
xchg
nop
cs
aaa
mov
int3
cli
leave
push
jecxz
nop
cmp
popa
adc
movsb
dec
pop
into
pop
popa
imul
sub
in
outsl
push
mov
lds
lret
xchg
jmp
ja
les
xchg
cmp
inc
xor
pop
xchg
jmp
mov
jg
pusha
test
stc
pop
jl
jno
cs
jne
loope
or
ss
sbb
and
dec
aaa
inc
popf
and
test
and
mov
js
adc
cmp
movsb
mov
dec
inc
icebp
dec
stc
mov
cmp
xchg
pop
xor
or
lcall
roll
push
or
and
pop
lds
xor
enter
mov
fnop
fadd
inc
out
test
push
xchg
pop
js
lahf
xchg
pop
call
sbb
cwtl
push
dec
repnz
sbb
adc
mov
mov
jno
or
push
std
int
insl
sarb
hlt
mov
pop
cltd
push
hlt
out
js
repz
in
push
fnsave
int
repz
or
sbb
add
fnstenv
inc
stos
inc
movsl
pop
icebp
repz
xchg
adc
mov
addr16
jecxz
sar
sub
lret
mov
and
mov
iret
ss
dec
addr16
jecxz
push
push
sub
mov
push
rcrl
jnp
mov
cmp
inc
movsb
adc
push
call
nop
xor
hlt
adc
fnsave
mov
loopne
in
loope
add
mov
fwait
cli
mov
mov
mov
pop
aam
fmul
icebp
out
jp
pusha
cmpsl
mov
mov
jb
push
lods
fnsave
mov
insl
dec
imul
dec
inc
mov
and
or
loope
movsb
mov
lods
sbb
imull
sbb
lcall
push
fildll
out
lds
lret
pop
jb
dec
jnp
iret
mov
dec
xchg
push
sub
push
cwtl
xchg
push
sub
or
adc
adc
popf
sub
mov
xor
out
rep
and
not
scas
jl
push
cmp
mov
loope
inc
enter
mov
jge
scas
test
push
fcmovb
lods
sub
pop
fwait
mov
or
add
iret
stc
dec
add
mov
mov
aas
mov
push
shl
bound
test
aas
stos
xor
mov
mov
imul
stc
popf
hlt
jo
and
xchg
dec
jb
test
ljmp
out
fucomi
data16
sbb
push
jns
pushf
ret
daa
mov
xor
inc
jns
sbb
sbb
cmpsl
sbb
and
into
sub
divb
sbb
xchg
or
ss
pop
sub
jl
pop
mov
dec
jo
jle
dec
mov
idivb
daa
test
fisttpl
cmpsb
popf
mov
insb
mov
add
repnz
jp
pop
jbe
scas
and
fldenv
sbb
mov
jl
sub
rorb
pop
arpl
std
xchg
imul
imul
jg
lret
ficomps
push
dec
sbb
fs
lahf
in
jb
fimuls
outsl
out
imul
mov
mov
int
andl
imul
ss
push
pop
lea
inc
hlt
mov
sub
and
mov
jnp
jp
shr
insb
sub
orb
xor
lret
inc
mov
or
je
xor
imul
loopne
inc
dec
lret
ficoms
push
xchg
insb
xchg
or
ret
xor
fbstp
xor
out
loopne
fs
adc
sub
ret
dec
lret
dec
push
ret
nop
leave
or
xor
adc
xor
fldenv
or
dec
enter
add
pop
in
jg
xchg
cli
outsb
pop
adc
dec
std
cli
or
stc
ljmp
aam
out
in
ret
and
or
jae
lods
or
push
cmp
mov
xor
lea
push
mov
loopne
pop
xchg
repnz
movsl
xor
mov
subl
push
leave
push
sub
repnz
aaa
mov
subb
sub
mov
movsl
call
or
mov
nop
push
lret
imul
mov
lcall
sub
jmp
inc
sub
xchg
pop
fs
xor
dec
icebp
push
repz
pop
or
cmp
pop
cs
jg
icebp
testl
and
cmp
loop
repz
add
cmp
mov
imul
inc
in
lods
sub
pushf
enter
ret
mov
test
adc
adc
push
jae
arpl
push
inc
out
inc
xlat
lods
xor
lea
add
aas
push
js
out
dec
cld
push
das
fisubrl
jno
cmp
add
push
xchg
shlb
lret
xchg
loopne
call
in
ret
jmp
xor
imul
nop
fistl
int3
sub
or
push
fists
xor
pushf
pop
inc
aam
das
nop
jge
stc
popa
lcall
clc
insb
and
out
cmpsb
dec
jmp
cmc
cmc
jg
mov
mov
arpl
xchg
lahf
in
sub
movnti
loop
test
add
mov
lods
xlat
iret
xorb
or
movsl
adc
or
sbbb
push
sub
das
je
cmp
mov
pushf
inc
sub
fsub
pop
push
ja
jb
fucomip
sti
mov
sbb
push
inc
notl
movsl
imul
jp
inc
adc
mov
and
iret
cmp
cmp
push
mov
mov
cmp
inc
xchg
and
fstl
jl
hlt
clc
push
xchg
cmpsb
xchg
scas
mov
mov
shr
into
test
outsb
js
xor
cld
add
sub
mov
sub
mov
pushw
push
leave
out
imul
cmpsb
fildll
jg
hlt
push
ss
fwait
jne
pop
push
mov
xchg
or
jno
out
loope
mov
xchg
push
gs
movsb
xor
add
subb
sub
fxch
adc
mov
and
pop
in
jmp
popa
stos
std
out
push
push
test
xor
xor
daa
xchg
and
pushf
xchg
cmc
push
add
cmp
pop
in
cmp
cmpsl
push
aad
xchg
dec
lahf
and
mov
mov
xchg
adc
mov
insb
and
hlt
mov
stc
xchg
add
fiaddl
rorb
sub
stos
cs
dec
push
mov
sbb
xor
inc
outsl
std
add
inc
adc
arpl
or
test
ja
pop
inc
push
pushf
inc
shrl
fdivs
clc
cli
pop
mov
aas
roll
ret
mov
fnsave
cmpsb
push
dec
in
mov
adc
loopne
jmp
push
cld
insb
and
mov
push
hlt
out
js
test
int3
push
in
in
mov
mov
mov
imull
cltd
psraw
mov
fistps
sbb
adc
sub
imul
push
sbb
lcall
int
mov
subb
dec
cmp
sub
mov
pop
cmpsb
lcall
fistl
cmc
js
sbb
test
inc
repz
add
dec
jp
scas
sbb
jne
xchg
pop
inc
mov
sbb
jb
cmp
jp
xchg
adc
daa
xor
lea
adc
add
out
jp
shr
fcomip
clc
dec
fbld
push
or
and
andl
daa
cmp
inc
mov
std
fisttpll
bnd
mov
adc
cmpl
sbb
lret
pop
fildl
lea
mov
les
mov
ds
loope
jp
jge
stos
lahf
mov
and
pop
into
jge
xchg
pop
xchg
lds
jge
in
sbb
inc
xor
lock
mov
and
loopne
xchg
pushl
fisttps
pop
adc
lret
popf
cli
test
das
mov
mov
je
outsb
inc
clc
je
dec
mov
mov
xchg
cltd
addl
shlb
jnp
add
dec
je
cli
xchg
and
mov
fwait
mov
dec
jne
pushf
xchg
aas
sub
sub
push
cmp
inc
mov
xor
jb
test
stos
adc
cli
pop
pop
les
cmpsb
mov
xchg
xchg
repz
push
pusha
inc
mov
jp
mov
bound
cmp
inc
xor
mov
mov
shlb
scas
fsub
loop
fistpl
nop
pop
sbb
push
dec
jl
cmp
roll
jo
add
jb
push
pop
xor
fwait
jp
in
jmp
cmpl
popf
mov
pop
repz
aam
shl
rorb
sarb
xchg
sub
negl
xchg
cld
push
pop
push
sbb
lea
mov
pop
dec
loopne
fs
or
or
ret
add
adc
xchg
dec
push
fwait
inc
std
inc
inc
lods
mov
jno
outsl
mov
pop
and
sbb
out
into
mov
loopne
add
adc
jno
movsl
arpl
mov
sub
mov
push
loopne
or
and
addl
cmc
sti
mov
bound
cmp
testl
lock
push
lahf
daa
adc
add
ret
ja
inc
call
sbb
xchg
xchg
inc
in
add
cmp
adc
rorb
add
aaa
pop
daa
mov
inc
ret
sti
mov
add
dec
xchg
test
popa
jnp
xchg
xor
push
push
lds
shl
add
arpl
jecxz
jnp
jg
movsb
adc
fsubrl
scas
jno
sbb
call
xchg
ret
ror
ds
jbe
inc
incb
mov
cmp
add
sub
sub
mov
ds
cwtl
inc
push
addr16
mov
jle
or
scas
and
std
ljmp
lret
push
add
xlat
mov
leavew
mov
popf
mov
arpl
ret
adc
cmc
jle
pop
pop
inc
jge
xchg
or
or
mov
mull
into
mov
jg
roll
xor
xchg
movntq
mov
and
mov
test
jne
jge
jae
loope
leave
cmpb
mov
adc
or
stc
mov
enter
rol
push
pop
sbb
subl
xor
sub
or
test
pop
and
lock
insl
sahf
ja
inc
test
push
or
imul
and
out
add
lret
xor
fldcw
xchg
fstl
js
mov
or
dec
sub
push
xchg
mov
sarl
shll
or
fists
sub
es
sahf
fdiv
inc
daa
mov
ret
mov
and
mov
and
shlb
rclb
mov
mov
mov
xor
shrb
pop
out
mov
ret
push
nop
cmc
xchg
in
or
ret
enter
movsb
mov
popa
test
mov
mov
arpl
mov
std
es
out
dec
loop
push
into
cmp
clc
imull
xor
push
adc
adcb
mov
cwtl
push
inc
push
mov
and
aas
pop
mov
inc
ds
cmp
sub
inc
push
mov
cmp
iret
pusha
loop
push
adc
inc
jo
psrld
mov
jmp
cmp
pop
inc
xchg
xchg
es
adc
jmp
mov
gs
push
scas
fists
mov
ljmp
jp
iret
rclb
cwtl
stos
cwtl
fs
mov
daa
addr16
dec
test
rcrb
jno
movsl
addr16
ss
bound
push
mov
push
pop
sbb
pushl
test
adc
pop
push
adc
xor
or
outsl
roll
stc
stos
mov
xchg
fsubr
cs
mov
fistpl
es
xorl
lcall
idivb
out
test
pop
xorl
mov
pop
and
gs
push
push
xor
dec
pop
add
shlb
xor
loopne
jo
rcr
cs
pop
out
and
lds
cmp
loope
push
sti
ret
jbe
add
sbb
push
ja
in
xchg
xchg
sbb
sbb
sub
cmp
mov
mov
shlb
iret
cwtl
sub
xchg
jb
push
sub
fwait
mov
ret
mov
push
adcb
xor
icebp
or
sub
jbe
adc
arpl
loope
mov
into
fisttpll
mov
jo
testl
mov
fcomp
sub
xor
mov
push
xor
push
rcr
dec
in
and
roll
icebp
fucompp
dec
cs
mov
clc
adc
pop
sub
js
subl
cmp
mov
stc
mov
ret
pop
xchg
dec
ret
adcb
loop
mov
cmp
enter
fstpl
in
xchg
out
jp
std
mov
pop
ffreep
sub
lahf
cmp
inc
and
push
and
enter
fwait
inc
mov
cs
adc
arpl
enter
dec
scas
scas
pop
clc
ja
jl
in
mov
inc
xchg
xor
inc
mov
add
mov
gs
adc
sbb
pushf
push
subps
sarb
shlb
ds
add
insl
sub
hlt
push
adc
lret
test
jge
mov
ds
jp
fcoms
aas
dec
popf
mov
aaa
cmc
mov
jecxz
in
and
mov
sub
xchg
in
sub
inc
inc
xor
stos
fldenv
adc
in
cmp
inc
int
mov
inc
mov
pop
je
pushf
push
sbb
jo
bound
aaa
push
xchg
xor
ja
pop
jbe
cs
push
adc
test
adc
fdivrs
cmp
pop
xor
loope
push
pop
xchg
hlt
push
repz
add
mov
cmp
ja
push
mov
insl
jp
mov
push
xor
sbb
push
lcall
ds
cmpsl
mov
imul
sub
mov
in
sahf
jbe
push
icebp
adc
sub
lods
xchg
mov
out
scas
lret
ljmp
push
sarl
dec
and
pusha
jno
test
push
inc
push
jp
lods
in
xlat
les
adc
cltd
fiadds
pop
cmp
jno
inc
and
addl
adc
outsb
adc
repz
fs
mov
leave
pusha
lds
add
pop
cld
xchg
jecxz
out
lret
xchg
insb
repz
inc
mov
sahf
shrb
sbb
jb
in
mov
add
ds
xchg
dec
add
pop
jb
std
dec
mov
cltd
mov
jnp
and
insb
add
fdivrs
fbstp
sbb
das
lea
cmp
fsubl
dec
mov
inc
lret
pop
xor
jns
aam
jne
mov
std
mov
loop
aam
fcmovnb
pop
les
mov
adcl
sub
push
pop
push
cmp
xchg
fwait
ret
sub
fs
xchg
xor
aam
lret
fwait
mov
jg
test
test
das
lods
sub
pop
sub
cli
mov
in
xlat
cmpsl
jecxz
sti
dec
adc
cmpl
daa
jo
ret
inc
aas
dec
mov
cmp
dec
jne
fisttpll
xor
push
or
test
fcmovbe
mov
mov
sbb
js
inc
cmpsl
push
or
lods
mov
ljmp
insl
push
scas
addr16
jbe
ret
mov
sarl
imul
gs
es
cmp
mov
lods
mov
add
sbb
push
or
xor
xlat
pop
inc
rclb
fcomps
roll
mov
dec
shl
imul
aas
nop
jae
xchg
sub
adc
sbb
jae
outsl
sub
ljmp
sub
mov
sub
mov
je
or
cmp
xor
add
adc
stos
pop
jo
dec
mov
fdiv
insl
mov
push
add
stos
jmp
addl
test
sub
imul
cld
xchg
addb
arpl
scas
mov
iret
aas
mov
and
popf
mov
cltd
push
shlb
and
sbb
ficoml
adc
push
lret
into
mov
imul
xor
call
mov
js
out
sbb
fdiv
mov
les
outsb
ljmp
pop
push
mov
shll
aad
dec
ja
sub
nop
mov
xor
and
jae
push
lahf
mov
aad
test
xchg
subl
jae
jecxz
xchg
test
or
dec
adc
jbe
push
cmp
out
out
cmc
push
fbld
mov
dec
push
ds
mov
packuswb
mov
arpl
mov
mov
mov
adc
loop
pushf
mov
mov
out
jb
jle
outsb
ss
and
mov
xchg
fs
les
addb
test
jl
outsb
jp
pop
and
push
pop
popf
adc
jno
push
mov
outsl
sub
or
adc
data16
mov
cmpsl
int
cmp
mov
inc
jmp
shrb
dec
data16
inc
cmp
xor
cli
adc
lds
mov
std
decl
jbe
out
sti
cltd
je
shlb
pusha
push
sbb
mov
aam
dec
movsb
cmp
mov
jg
in
test
ret
nop
popa
xchg
push
js
lret
pop
shlb
mov
adc
cmp
lea
mul
leave
jl
popf
adc
xor
sbbb
inc
jecxz
or
fistl
push
scas
cmp
loopne
mov
movsl
aam
sbb
fldenv
jge
addr16
test
jne
icebp
inc
loop
dec
xacquire
xorl
cmp
addr16
mov
mov
sub
sub
pop
gs
mov
sbb
or
jmp
add
cmpsl
pop
jne
or
pop
sbb
sbb
subb
and
outsb
movsl
out
xchg
rorb
mov
nop
inc
nop
jle
out
and
xchg
iret
push
stos
jle
lar
xchg
imul
stos
jge
lea
test
xor
jge
sub
dec
test
cmp
mov
pop
out
in
sub
jae
decb
dec
call
out
orl
mov
sub
pop
test
sub
mov
loop
iret
add
and
mov
imul
xor
mov
adc
pop
into
sub
clc
xlat
loope
adc
loope
mov
mov
jmp
loopne
out
bound
enter
sbb
sub
adc
mov
int3
xor
add
fimull
lret
and
leave
jle
adc
cwtl
je
and
in
and
mov
movsl
enter
fcmovne
cmp
push
adc
bound
push
xchg
lods
outsb
jmp
leave
push
push
push
scas
or
and
mov
mov
dec
mov
cmp
adc
and
jge
fs
mov
sbb
in
test
or
sbb
jns
ds
in
xchg
fldenv
scas
sub
imul
imul
push
ja
jle
fisttps
xchg
xor
mov
outsb
adc
cs
in
pushf
dec
push
enter
mov
insb
jne
aad
and
xor
mov
cmpsb
add
jae
inc
jne
mov
pop
popa
sbb
adc
pop
push
sub
mov
mov
adc
pop
push
insb
repz
icebp
mov
pusha
inc
push
or
repnz
and
mov
lods
xor
lret
cltd
aas
push
gs
into
scas
mov
sub
mov
jle
stos
xchg
jge
enter
movl
dec
loopne
loopne
mov
addl
je
dec
push
sub
aad
add
pop
hlt
sbb
in
dec
mov
and
addl
sub
mov
js
insb
icebp
cmpsl
mov
inc
and
pop
arpl
mov
call
out
rcl
addr16
loop
mov
hlt
add
ret
out
std
push
flds
push
mov
inc
sti
sub
lock
adc
lods
fstpl
xchg
xor
fnstenv
jl
outsb
mov
mov
out
dec
shlb
ja
dec
cmp
sub
aam
push
sub
jecxz
scas
add
sahf
push
or
leave
xor
xor
ret
inc
cmp
les
jns
es
jp
stc
jecxz
pop
sub
jg
in
push
adc
inc
push
loopne
insl
mov
adc
jmp
movsb
aad
filds
test
jb
movsb
cmp
sbb
inc
daa
xchg
mov
and
fisubl
jecxz
ja
pop
jne
call
ret
mov
adcl
push
add
mov
aaa
jp
xor
imul
cld
fstps
mov
xor
add
mov
movsl
ret
jo
les
pusha
enter
and
aam
xchg
sti
xchg
ss
rorl
inc
add
xor
push
xor
fmul
pushf
shrb
lds
jecxz
dec
shl
mov
pop
lret
sub
cmp
ret
xor
inc
push
xchg
mov
adc
cmp
aas
or
aaa
xchg
dec
fildl
nop
into
xchg
inc
push
and
sbb
aam
adc
push
inc
repz
stos
push
pop
mov
pusha
in
jne
jbe
andl
or
fs
jns
add
or
cmpb
and
jg
dec
xchg
cmc
iret
mov
sub
mov
out
and
push
data16
mov
mov
outsl
popl
cmpsl
clc
sti
leave
jbe
mov
cli
fs
ss
sbb
adc
lock
mov
outsb
ja
xor
lahf
fidivrs
shlb
int3
pop
fbld
sbb
daa
push
mov
test
mov
in
sub
sub
clc
enter
scas
inc
mov
pop
push
ja
sbb
cmpsl
out
sub
adc
sub
ljmp
pop
inc
shlb
fwait
push
imul
inc
call
jp
js
cli
addr16
or
ja
insb
xchg
es
mov
subl
addr16
dec
jne
xor
jne
cmp
xchg
inc
jns
add
leave
and
and
sub
mov
mulb
loope
sub
mov
xchg
adc
and
push
sbb
in
xchg
xchg
jmp
dec
push
insb
cmp
and
pop
adc
pusha
es
add
pop
fmuls
sbb
cmp
std
dec
addl
or
subb
mov
inc
call
pop
repnz
mov
shr
sar
mov
or
andb
xchg
cmp
in
lds
xor
cmp
mov
dec
inc
in
mov
cmp
mov
add
add
test
sbb
fnstcw
enter
adc
mov
jecxz
and
nop
aaa
pop
pop
sub
pop
stos
pop
lret
out
xor
mov
scas
cmpl
and
iret
out
mov
dec
lret
sti
ja
aad
rcrb
dec
mov
cld
dec
and
add
dec
rolb
mov
push
ja
mov
out
or
push
add
cwtl
sub
mov
or
lock
and
ljmp
sti
jmp
pop
push
mov
test
bound
sub
pop
push
leave
pop
cmp
jnp
push
sub
jl
and
jbe
fistl
bound
in
ret
out
xchg
xor
pop
rcll
mov
mov
and
loop
in
aaa
jl
sbb
mov
lret
jb
adc
bound
std
xchg
iret
mov
push
imulb
popa
pop
in
sbb
fimuls
icebp
jg
mov
cld
cmc
dec
inc
cmp
mov
cwtl
iret
imul
jae
push
pop
fistl
filds
dec
push
lcall
xor
pop
xor
xor
push
dec
push
push
mov
mov
dec
mov
dec
sti
jno
inc
les
or
dec
movsl
sbb
scas
jp
mov
xchg
fnstsw
aaa
ret
inc
rcrb
push
in
sahf
add
jecxz
inc
fstp
inc
or
stc
ds
cmpl
adc
cmp
clc
jg
imul
add
jbe
pop
xor
test
and
pop
jno
test
xor
inc
sub
lods
cwtl
and
inc
sbb
fwait
test
js
cs
sahf
call
test
cwtl
les
xlat
mov
lahf
lret
lea
mov
outsb
imulb
push
cmp
xchg
sbb
ja
test
leave
pop
call
sub
shlb
or
or
cs
test
dec
adc
in
pop
cmovp
or
shll
pop
dec
ret
add
adc
leave
repz
xchg
ljmp
outsb
sbb
mov
mov
xor
xor
test
cmp
test
loopne
add
push
ftst
mov
cmp
inc
inc
jg
pop
rorb
and
in
mov
jno
addr16
arpl
xor
mov
jmp
push
cli
mov
add
jo
imul
mov
aas
ss
sbb
das
out
test
push
cmp
rol
das
sbb
ja
mov
cld
xchg
imul
sbb
push
rcrl
roll
xlat
iret
jp
jne
cwtl
es
roll
push
cmp
scas
icebp
push
out
xor
or
push
sarl
mov
push
push
inc
sahf
mov
cmp
jle
iret
enter
ffreep
push
rcrb
aam
mov
push
cmp
cs
mov
int3
or
outsb
sub
dec
xchg
ja
stc
sub
cmp
leave
clc
lret
inc
push
jmp
pop
add
fiadds
movsb
out
test
lahf
push
and
pop
mov
push
addr16
xor
lods
outsl
mov
mov
add
push
ret
aad
and
icebp
icebp
aad
icebp
jne
pop
jae
cwtl
sbb
jno
shl
cs
push
jne
lret
dec
cmp
push
pop
push
mov
xor
push
xchg
inc
jmp
xchg
gs
lcall
iret
xchg
jp
cmp
sub
cld
ret
xchg
mov
les
sti
push
push
lods
adc
divb
push
aas
scas
pop
pop
mov
cmp
push
nop
push
mov
mov
inc
cwtl
scas
jns
mov
jb
bound
xor
clc
loope
mov
cmp
stos
xchg
out
shrl
arpl
daa
ret
rorl
std
cmp
outsl
scas
adc
sbb
call
cmp
pop
inc
mov
das
xchg
pop
sub
lahf
lock
push
dec
xchg
add
loope
jo
mov
sbb
jno
mov
cli
shll
adc
pop
iret
lea
in
jge
dec
sahf
pop
je
subl
js
add
call
lret
decb
mov
push
in
imul
loop
sbb
rorl
add
sub
jns
je
lods
je
bnd
mov
test
pop
jne
sub
fucomi
mov
cmc
repz
pop
ficomps
sbb
int3
dec
sub
xor
jle
lea
icebp
adc
mov
addr16
inc
dec
in
int
adc
lea
xor
rcl
push
mov
jno
inc
or
xchg
xor
sbb
mov
das
dec
jmp
mov
movsl
and
and
mov
test
loopne
shll
adc
bound
jle
push
dec
aaa
push
jmp
push
jp
jo
fwait
xor
xor
add
push
fbld
nop
mov
xor
js
dec
sub
rcl
mov
sbb
pop
cmpsl
pushf
repnz
bound
test
pop
sbb
es
push
or
pop
cmp
pop
aaa
fcmovne
into
push
daa
mov
mov
xchg
aad
xor
orl
psrlq
mov
in
dec
popa
xor
mov
and
sub
dec
mov
fcoml
mov
jbe
sub
cmp
pop
lcall
lock
lret
pop
and
mov
push
pop
jns
test
xor
xor
pushf
dec
test
jle
lock
adc
repnz
lods
xchg
mov
fisubrl
xorb
into
rol
shl
insl
pop
xchg
scas
xlat
mov
pop
push
inc
mov
das
std
sti
inc
daa
pop
xchg
loope
lods
fildll
cmp
decb
mov
jae
pop
je
call
jg
push
sub
gs
adc
ja
dec
in
nop
adc
mov
mov
lret
pop
icebp
jge
xchg
mov
fimuls
pop
xor
movsl
and
add
lret
aas
mov
test
xchg
mov
cltd
out
mov
sub
js
gs
push
mov
mov
ret
inc
pushf
add
push
rcrl
xchg
out
popa
jge
outsl
mov
xor
dec
mov
or
div
addr16
sbb
cmp
xlat
popf
es
not
js
rcrl
inc
pop
sub
aas
jecxz
ss
mov
adc
or
mov
leave
sbb
aas
das
cmp
mov
push
ret
adc
outsl
cmc
dec
testb
mov
mov
lret
icebp
sbb
cmp
gs
dec
pop
mov
cli
les
out
sti
outsl
jecxz
rcr
cli
jge
fmull
pop
lea
in
mov
movsl
not
imul
inc
xchg
lret
xor
js
xor
xor
sarb
imul
push
jmp
mov
or
xchg
mov
adc
outsb
push
std
sbb
xor
lahf
cld
divb
or
add
cld
jl
pusha
in
test
jmp
imul
xchg
inc
clc
paddw
ret
push
inc
and
in
and
insb
rcrl
xor
pop
add
sub
stos
mov
shrb
lret
test
pop
lods
push
mov
icebp
dec
xchg
lret
sahf
or
xchg
xor
jb
mov
int
cmp
xor
sbb
dec
and
xor
aam
sahf
jg
pusha
fs
sti
jns
dec
fwait
jne
das
adc
xor
imul
addl
sahf
push
add
daa
imul
leave
push
loop
dec
jle
mov
push
xchg
mov
jb
dec
adc
inc
out
sub
cs
add
inc
mov
es
mov
mov
mov
arpl
mov
les
gs
fnsave
mov
mov
frstor
outsl
pushf
dec
sub
jne
pop
dec
mov
xchg
ret
lret
pop
adc
jmp
push
xchg
jecxz
out
stc
sub
sbb
jmp
cmp
mov
mov
xor
adc
mov
xchg
cmp
cli
jecxz
fcoms
jecxz
xchg
loopne
inc
cwtl
mov
sub
mov
pop
sbb
dec
inc
add
adc
sarl
insb
pusha
cltd
imul
addr16
ret
add
xchg
xchg
lret
push
or
dec
pop
and
mov
mov
pop
pop
xor
mov
pop
push
and
add
dec
les
test
cmp
pusha
addr16
insl
loopne
pushf
xor
int3
adc
mov
adc
jg
lds
out
mov
dec
push
int3
inc
xor
add
frstor
gs
inc
mov
loope
mov
ret
mov
std
dec
mov
mov
daa
or
adc
sub
adc
repz
jl
lods
test
pop
js
sub
mov
dec
push
mov
std
enter
pop
jne
lret
out
ss
ds
cmp
lods
dec
in
xor
es
mov
add
shl
aad
addr16
iret
or
int
inc
pop
scas
int3
stos
xor
inc
inc
adc
cwtl
orl
repnz
cmpsb
mov
mov
xchg
iret
ficompl
stc
cld
cli
inc
inc
jp
cmp
mov
je
inc
xchg
mov
xlat
push
xor
mov
cs
adc
sub
inc
xor
mov
adc
das
cmp
adc
fdivs
out
ja
and
dec
mov
daa
loope
mov
push
mov
mov
inc
sahf
jecxz
mov
repnz
in
ja
lcall
jmp
pop
cmpsl
pop
rcl
sub
jbe
mov
and
scas
and
and
sbb
mov
jp
call
xchg
daa
sbb
shlb
js
inc
out
lret
xor
jle
add
hlt
sti
mov
adc
fsubs
sub
sahf
lret
adc
stc
cwtl
popf
out
cltd
dec
adc
in
ret
sub
ja
lcall
popa
adc
add
aaa
aaa
push
inc
lods
test
repz
or
mov
add
pop
loope
fneni(8087
push
sahf
mov
jmp
lods
outsb
stos
jne
scas
js
mov
pop
mov
dec
mov
ret
imul
loop
or
out
jae
inc
add
cmp
ja
push
or
sbb
pop
mov
inc
cwtl
sbb
mov
mov
jl
jbe
nop
popf
in
dec
pop
pusha
sahf
jb
mov
in
mov
dec
or
xchg
popa
movsl
in
cmp
xor
cmp
xchg
dec
je
sub
rcrb
mov
mov
loope
xchg
inc
sbb
fwait
push
mov
addl
add
mov
imul
addr16
inc
mov
imul
orb
add
jae
pop
inc
sub
or
mov
cmp
add
loope
bound
or
insl
or
push
sbb
aam
ret
jecxz
js
sub
or
dec
mov
fstpt
mov
sbb
movb
data16
push
in
jg
cmp
pop
cmp
pop
mov
push
dec
push
in
mov
mov
mov
repnz
negl
sub
inc
icebp
std
xchg
ja
lods
xchg
mov
lods
les
movsb
pop
out
or
xchg
jmp
out
inc
push
test
sub
sbb
ds
mov
xchg
dec
gs
lods
mov
xor
cmp
and
ds
scas
xchg
cmpsl
sub
or
add
bound
adcb
xor
out
cld
inc
cmp
xchg
adcb
xor
mov
fimuls
loope
nop
cmp
xor
mov
shrb
mov
add
test
inc
xchg
inc
pop
push
in
sarl
subl
or
push
or
out
pop
lcall
sarl
lret
insb
mov
fisubl
stos
fs
add
mov
xchg
inc
cmp
cli
lods
xlat
daa
dec
clc
dec
push
loop
inc
inc
add
ror
or
leave
loop
pop
loop
mull
push
cwtl
jmp
out
lcall
push
lods
mov
inc
mov
sub
dec
loopne
lcall
aas
adc
aaa
insb
je
fildll
outsl
xor
push
enter
jne
scas
sbb
dec
adc
lret
and
inc
sub
adc
test
cld
xchg
jle
test
inc
xor
xchg
mov
xor
xlat
es
add
cmp
sbb
gs
ss
stos
add
pop
lods
sti
mov
lock
test
mov
je
mov
fcomip
mov
or
int3
dec
ljmp
out
mov
test
sbb
mov
cs
or
mov
and
fwait
ds
repnz
sarl
test
jp
jle
or
xchg
pop
cmpsl
xchg
je
xchg
enter
xor
insb
clc
lahf
in
jge
sbb
cmpsl
and
lahf
cmp
sbb
pop
xchg
sub
cmp
pop
and
ret
dec
mov
xchg
in
sbb
lods
jns
repnz
sub
addr16
or
jmp
inc
nop
xchg
enter
repnz
jge
fdivrs
movsl
inc
loopne
add
std
jg
jp
cmp
stc
aaa
sub
outsb
sar
dec
cs
cmp
loop
jle
or
out
xor
out
faddl
and
pop
xlat
push
and
mov
into
cmc
out
adc
inc
sub
mov
mov
pop
xlat
ljmp
insb
jne
jae
mov
in
mov
inc
push
imul
and
subl
ficomps
lea
mov
push
iret
sub
cmovp
mov
adc
popa
std
push
dec
or
in
ja
mov
jl
lret
and
shlb
jle
add
mov
push
xor
adc
lret
pop
push
int
clc
jecxz
sbb
aam
mov
fsubrp
jl
or
mov
icebp
mov
cs
add
jnp
mov
lret
mov
popf
aam
mov
add
dec
shlb
xchg
div
test
sarl
sub
outsb
hlt
aaa
or
sbb
sub
mov
cmp
mov
in
inc
xchg
sub
xchg
es
jne
repz
inc
lds
adcb
xchg
les
cwtl
outsb
ret
cli
sbbb
add
sbb
fmull
cmp
sar
cmc
fwait
lahf
dec
int
cwtl
mov
cli
xor
mov
test
mov
xchg
or
addb
jp
jecxz
dec
cs
cmc
jo
in
xchg
scas
adc
fstpl
shrb
or
or
ljmp
and
outsl
call
mov
sbb
push
mov
pop
rolb
sbb
bound
fidivl
int
popf
cmpsl
jle
jl
jge
inc
loopne
xchg
test
mov
mov
dec
push
mov
lods
inc
cmc
data16
addr16
popa
pop
ss
mov
cltd
pop
lea
cs
or
push
xchg
lahf
mov
outsl
sahf
pushf
scas
jge
fucomip
fstp
or
sbb
xor
icebp
jb
cmp
aam
xor
lret
push
pop
je
divb
lahf
cmpsb
nop
les
ret
sub
pop
push
sbb
cmp
xor
popa
fisttps
out
ret
push
int3
les
cmpsl
fwait
adc
sti
push
xchg
adc
jbe
scas
outsb
mov
or
shll
sbb
mov
std
sbb
gs
popl
dec
dec
and
fwait
pop
in
xchg
int
test
sbb
cli
pop
cmp
dec
push
or
pusha
movsb
jmp
divps
jp
cmpb
sahf
fst
cmp
inc
sub
das
dec
push
add
xchg
cltd
mov
mov
ds
ss
aam
jne
rol
jecxz
dec
adc
pop
bswap
pushf
nop
fwait
out
xchg
mov
loope
mov
dec
aam
popa
push
fwait
inc
out
and
aam
data16
inc
mov
cld
dec
aaa
loop
repnz
out
mov
aas
cld
adc
ret
enter
call
dec
fisubl
fwait
mov
cmp
adc
mov
mov
outsb
divl
and
pop
dec
or
movsb
daa
or
jg
fcomp
fcoml
loop
sbb
mov
inc
inc
call
inc
mov
adc
popa
adc
outsl
push
xchg
test
enter
push
mov
repz
bnd
popa
int
xchg
fidivs
inc
mov
pop
loope
mov
xor
testb
jge
test
call
clc
sub
scas
fldt
xor
scas
enter
push
imul
and
and
push
ret
dec
loope
add
in
push
mov
mov
jle
push
sbb
test
or
imul
shl
sub
orb
into
ret
mov
mov
cmp
outsl
fst
stos
pop
enter
movsl
adc
or
inc
ss
sbb
or
lods
clc
dec
out
inc
cwtl
lods
sbb
popa
insb
xor
and
cmpsb
sbb
jecxz
rolb
xchg
xchg
fcmovnbe
sub
in
popa
and
jo
and
pop
mov
mov
and
push
mov
clc
sbb
and
out
mov
mov
movb
xchg
push
movsl
jmpw
xchg
push
cmp
push
dec
mov
cmp
addr16
pop
dec
xor
scas
adc
xchg
pop
fimull
cmp
fcmovbe
call
adc
enter
or
nop
aaa
mov
or
inc
lds
arpl
cmpsb
addr16
fs
por
hlt
jb
mov
push
push
jo
mov
push
call
push
daa
insl
mov
rclb
ror
xchg
xchg
jp
push
dec
sub
and
sti
fcomps
add
adc
neg
xchg
dec
sbb
or
mov
sbb
pushf
idiv
mov
dec
mov
je
mov
xchg
xchg
xorb
faddl
cli
mov
xchg
test
pop
int3
and
and
in
stos
sbb
push
je
push
popa
mov
jnp
shlb
sub
push
lods
stos
lea
call
in
mov
jl
xor
jl
out
insl
loopne
mov
pop
jb
cmpsl
cmc
jmp
les
cmpb
in
fcmovu
ljmp
fcmovnu
sub
mov
sub
mov
mov
push
mov
std
into
les
xchg
popa
loopne
lds
test
pop
push
inc
mov
push
lds
dec
add
sub
pop
sub
jle
scas
int
pop
pop
dec
arpl
and
jle
jle
mov
test
movb
inc
add
sbbb
sbb
cmpsl
pushf
add
add
xor
cmp
cmp
leave
or
imul
sbb
cmpb
clc
aas
ja
cs
mov
pop
mov
lock
push
enter
les
cmp
aad
dec
pop
sub
lcall
push
adc
in
rorb
pusha
lea
sub
pop
out
mov
push
jmp
and
cmpb
xlat
or
mov
aaa
fists
cwtl
adc
cwtl
or
and
js
add
aam
das
shrl
scas
outsl
inc
adc
subb
sub
jae
test
adc
ret
mov
mov
stc
sub
ljmp
insl
sbb
cwtl
inc
shlb
jb
cmp
jne
lock
pop
in
fs
xchg
in
xor
in
int3
notl
lret
cwtl
js
push
fcomps
shlb
sbbb
mov
and
lock
sbb
xchg
xchg
jmp
imul
mov
das
cmpsb
push
xchg
push
pop
pop
ja
mov
daa
push
push
mov
loopne
outsl
pop
inc
gs
sarb
insb
call
stos
sbb
pop
out
repz
sbb
sbb
sbb
rcll
sbb
dec
in
imul
pushf
inc
mov
adc
in
jp
cltd
add
lret
inc
cmp
push
std
mov
mov
push
push
add
cmpsb
out
repz
xchg
in
mov
dec
mov
dec
jle
pop
loopne
ffree
in
aam
out
add
add
ds
cwtl
ja
inc
insb
les
jno
lock
mov
imul
js
push
lods
fists
xchg
stos
pop
mov
push
mov
imul
lock
mov
lods
shl
std
sub
repz
cwtl
xor
decw
inc
mov
or
insb
jecxz
orb
adc
test
in
mov
add
jb
test
or
loop
shrl
add
insb
in
aad
xor
xchg
dec
pusha
nop
popa
ds
or
test
dec
in
cmp
adc
or
fmull
mov
aad
test
xchg
fadd
andb
jg
push
inc
std
sbb
or
mov
movsb
sub
add
scas
mov
sbb
int3
inc
dec
gs
fdivrs
dec
pushf
out
cs
fldl
push
jge
dec
jbe
xorb
inc
jge
push
sub
cmpb
into
repnz
jne
mov
sarl
mov
adc
hlt
mov
and
push
imull
imul
sbb
mov
add
ja
lahf
out
or
dec
pop
add
adc
ret
pop
pop
and
jne
inc
adc
xchg
sbb
into
clc
pop
je
adc
jns
clc
sti
stos
jb
dec
fsub
into
ret
sub
lahf
xlat
dec
bndldx
or
inc
lcall
popa
sbb
scas
jge
pop
aad
test
pop
or
outsb
add
mov
push
and
das
mov
cmp
addr16
xor
cltd
cmp
inc
mov
push
sub
xor
or
popa
lock
icebp
jge
sub
adc
rorb
cmpsb
mov
push
lds
cmc
and
adc
fldt
push
fs
clc
shrl
fwait
jmp
test
flds
out
cmp
test
inc
int
xchg
inc
idivb
push
mov
mov
in
mov
aam
vmread
sbb
jo
xchg
jbe
xchg
icebp
sub
or
dec
push
pop
shlb
fs
dec
movsl
fnstenv
mov
pop
push
orps
push
test
mov
and
dec
push
pop
mov
mov
aaa
add
cltd
dec
pop
fistpl
sarl
jle
sub
test
outsb
test
in
jo
push
sub
inc
aam
and
ss
loop
pop
sbb
pop
loopne
out
sarl
notb
and
or
mov
or
jno
sti
fildll
fcoms
imul
jo
fstps
nop
icebp
push
dec
sbb
out
mov
push
adc
inc
or
push
mov
dec
in
neg
mov
mov
mov
in
jnp
leave
movsl
fcmovnb
mov
out
sub
adc
decb
jmp
insl
mov
data16
jl
xor
and
into
add
mov
test
sbb
aad
lock
fcoml
xor
or
stos
add
cltd
adc
int3
mov
enter
mov
jge
xchg
adc
iret
inc
dec
jl
xchg
add
jno
test
xchg
jge
fnstsw
mov
xchg
sbb
inc
pop
pop
dec
aam
into
lds
leave
pop
cmpsb
insl
cmp
xor
rorl
neg
js
or
xchg
dec
xchg
lcall
jnp
rorl
xchg
roll
sbb
mov
cmp
push
dec
hlt
push
in
dec
insb
add
shrb
mov
gs
cmp
jo
or
push
into
cmc
jno
mov
out
stos
std
cltd
test
sbb
sbb
adc
xchg
int
jecxz
in
cmp
xor
pushf
mov
roll
aam
adc
and
xor
push
push
aam
pop
stos
cmp
ds
inc
xor
adc
mov
mov
fwait
push
test
mov
es
and
mov
call
insl
jnp
sbb
sub
scas
or
xor
mov
inc
jb
mov
cs
mulb
inc
js
pushl
popa
xor
dec
int
add
sub
fdiv
fwait
rcrb
stc
mov
dec
and
and
mov
lahf
pop
imul
push
pop
icebp
pop
arpl
xchg
pop
pop
arpl
sbb
mov
test
loope
inc
mov
insl
mov
sbb
addr16
adc
add
mov
les
les
jns
add
sub
push
push
mov
data16
and
sarb
dec
adc
pop
or
add
xchg
sub
fcmovu
push
imul
xchg
int
sub
nop
ror
mov
mov
hlt
pop
jl
lods
xchg
xor
aam
jne
sbb
rol
adc
in
jns
push
inc
and
iret
jge
mov
popf
cmc
sub
addr16
out
sub
and
and
les
and
mov
adc
mov
or
sarb
mov
ret
aas
mov
cmc
mov
sbb
jbe
popf
arpl
adc
cmpsb
inc
pushf
scas
lock
xor
imul
pop
cmp
mov
push
mov
imul
adc
cli
or
mov
arpl
fmuls
mov
aam
pop
aas
icebp
adc
sub
ss
icebp
push
arpl
imul
push
popf
xchg
push
sub
push
jo
enter
aaa
push
repnz
xchg
pop
fsub
jp
fldcw
out
fisttps
dec
arpl
stos
cmpsl
mov
mov
inc
clc
inc
cmp
pop
rorl
inc
repz
adc
inc
mov
sbb
adc
or
mov
insl
into
or
in
aam
xlat
add
lahf
arpl
rcrl
jnp
iret
mov
sub
mov
enter
inc
imul
roll
adc
adc
mov
adc
pop
int
aas
call
daa
sahf
nop
jmp
lds
into
mov
dec
into
jge
or
or
and
pop
or
mov
add
dec
xor
sti
in
inc
rolb
push
adc
test
lods
fs
fadds
mov
sub
je,pt
rorb
call
cmpsb
mov
fcoml
inc
or
xchg
xorl
and
xor
and
inc
push
adc
mov
mov
pop
mov
test
lahf
popf
into
dec
fwait
ss
push
push
mov
fs
fs
or
xchg
xor
xor
mov
es
stos
mov
lods
push
inc
scas
dec
cmp
clc
fcomp
or
adc
das
rolb
arpl
call
adc
adcl
fcoml
loope
in
es
popa
inc
sub
out
shl
loope
mov
fildl
xchg
mov
jmp
ljmp
dec
shrl
push
jae
ficompl
fstpl
out
js
dec
fnsave
fcmovne
leave
xorl
cmp
or
mov
out
xchg
xor
in
outsl
jmp
in
push
pop
jne
mov
xor
xor
pushf
sahf
jecxz
out
xchg
es
cmp
xor
push
call
or
frstor
cli
data16
xchg
inc
sub
lods
inc
arpl
xchg
lds
pop
out
adc
push
cmp
mov
idivb
aas
add
dec
or
ficompl
js
jp
pop
jmp
mov
fsubl
mov
jnp
pop
fnstcw
popa
clc
cmp
xchg
pop
push
negl
dec
mov
lods
dec
arpl
mov
fisttpll
xchg
shr
push
aas
outsb
adc
or
fwait
sub
les
or
divb
pop
mov
mov
jmp
gs
mov
jge
div
jno
add
ret
imul
cmp
popa
out
in
pop
xor
cmp
jns
dec
cmp
std
pop
dec
jmp
adc
and
sub
arpl
or
sahf
adc
mov
sbb
enter
sub
or
hlt
mov
xlat
movsb
xchg
shrl
inc
adcl
and
loope
ficomps
dec
imul
cmp
mov
push
mov
js
pop
sub
sbb
nop
stc
stos
andl
ja
test
rorb
xor
mov
sahf
push
pop
loope
popf
xchg
das
jnp
mov
scas
ret
sbb
adc
nop
lds
jecxz
in
dec
mov
hlt
cwtl
dec
sub
sbb
sub
lcall
mov
adc
ljmp
cmpsl
test
push
cmp
andb
or
xor
into
cmp
leave
iret
test
dec
push
dec
adc
mov
inc
fs
or
add
dec
pop
push
and
lret
add
loopne
dec
insb
mov
inc
xor
ficomps
out
and
mov
push
icebp
sub
and
xchg
es
mov
test
stos
sti
mov
in
test
cmp
push
out
popf
ds
mov
repnz
aad
add
in
xchg
inc
sub
dec
out
mov
js
fisubrl
in
loope
pop
xor
add
fcmove
adc
jle
add
icebp
call
icebp
out
lds
fcomps
js
mov
fwait
outsb
inc
xchg
dec
lods
repnz
daa
xor
je
mov
pop
in
pop
fwait
jmp
scas
popf
push
inc
sbb
dec
inc
aad
daa
aad
fucomp
subb
mov
xchg
call
inc
add
cmp
pop
jne
mov
inc
imul
pop
jne
mov
mov
jnp
adc
inc
sti
aad
push
and
ret
stos
lods
pop
ret
mov
and
push
fimuls
lods
jp
jae
pop
gs
inc
mov
xor
int
nop
cmp
mov
cmp
xchg
int3
jle
movsb
jnp
adc
add
xchg
insb
decl
fisubl
mov
xchg
sub
mov
mov
or
adc
dec
xchg
sbb
push
jno
arpl
mov
inc
mov
pop
cltd
cmp
sub
push
pop
test
movsl
jmp
lret
mov
popf
sbb
fwait
pop
ss
in
pop
ja
imul
or
and
adc
out
sbb
mov
or
test
test
outsl
test
jecxz
test
pop
call
int
ret
in
aam
cmp
cwtl
lods
ds
mov
nop
fldenv
aas
arpl
cmp
loop
setbe
test
loope
loop
popf
mov
push
cmc
and
sbb
fwait
enter
pop
cmp
add
cmp
jmp
mov
daa
imul
sub
sub
lea
imul
imul
jae
sub
mov
loopne
ss
int
jbe
adcb
mov
ret
sarl
mov
lret
rclb
icebp
js
and
or
arpl
jnp
sub
pop
and
push
ja
pop
pop
movsb
int3
addl
xor
dec
test
repz
sbb
dec
js
mov
adc
mov
xchg
mov
add
stc
dec
cwtl
xchg
mov
pop
sub
mov
ja
pop
insb
push
or
xor
dec
icebp
or
xchg
sbb
cmp
lods
xor
dec
mov
jmp
sub
decb
jbe
sbb
popa
push
mov
cmp
mov
sub
mov
xchg
rcrl
mov
sti
loope
mov
les
imul
pop
std
ret
sbb
push
pop
mov
jne
sub
xor
jb
iret
pop
mov
pushf
aaa
jae
ficoml
jg
cltd
insl
ja
cmpsl
in
adc
nop
test
add
test
jb
xchg
add
mov
scas
pop
push
or
pushf
xchg
jl
dec
stos
push
adc
mov
xchg
in
pop
std
mov
jne
adc
mov
cmpsl
ss
pop
jbe
jae
xchg
jg
aas
xor
call
dec
gs
push
xor
jne
call
pop
mov
popl
fnsave
xchg
dec
jp
mov
xlat
push
or
scas
test
mov
jae
movsl
pop
cmpsl
pop
insb
movsl
pusha
adc
xor
dec
xchg
pop
int3
and
cmp
add
test
sbb
jae
gs
fs
sub
cmpb
ret
gs
mov
and
mov
fdiv
addr16
xchg
addr16
xchg
push
add
or
stc
test
push
mov
cld
imul
mov
rcrl
std
or
ret
loop
jle
xor
push
ret
repnz
push
add
mov
bound
out
mov
leave
sub
pusha
into
xor
jno
cli
xchg
and
mov
rcrb
test
lods
lods
pusha
jno
out
or
sbb
add
je
movsl
jb
fmull
cmpsl
loop
inc
lds
pop
insl
push
mov
and
sbbl
pop
and
arpl
divb
fistpll
leave
gs
xor
loope
xchg
mov
push
fildll
mov
and
or
cli
addr16
shll
sub
inc
mov
inc
leave
mov
jge
cmp
xchg
jb
xchg
clc
mov
je
cmpsb
sbb
mov
fnstcw
test
lods
scas
out
adc
daa
int
xlat
cmp
sub
nop
or
mov
pop
mov
in
in
add
out
lea
sbb
cmpsb
popa
adc
lret
dec
popa
fwait
or
jmp
xorb
cmp
mov
je
jge
cmpsb
xchg
call
movsb
add
inc
or
cmp
push
pop
cmp
push
or
mov
mov
adc
out
vmovups
xor
test
rolb
arpl
xor
and
call
clc
aam
leave
jge
sbb
mov
mov
cmp
xor
lret
lret
adc
sarb
cld
cmp
cmpsl
ljmp
push
ss
push
xchg
mov
cwtl
pushl
pop
mov
dec
sbb
xlat
mov
mulb
stos
insl
iret
rcrb
push
leave
sti
push
adc
nop
dec
jbe
rol
jl
std
aad
mov
bt
and
sub
std
add
aad
xchg
adc
sbb
and
out
les
scas
iret
into
les
lods
cld
outsl
lds
jmp
stos
popf
or
mov
aas
imul
xchg
push
outsb
inc
sbb
popa
adc
jle
xchg
and
in
inc
jo
stc
ja
js
orl
fdivrs
clc
les
imul
mov
cmc
fdivrs
fnstcw
dec
scas
ror
xor
movsl
cmp
dec
ja
pushf
pop
xor
pushf
cmp
xchg
loop
or
cmp
pop
mov
adc
and
shrb
sub
ja
mov
scas
push
outsl
pop
or
pop
and
ret
xor
test
hlt
mov
cmpsb
cmp
xchg
mov
aam
dec
add
lock
mov
jbe
xchg
push
hlt
mov
fdivs
push
mov
jg
push
add
push
inc
cli
mov
pushf
sbb
mov
or
push
mov
iret
sbb
push
aam
out
mov
sbb
stos
testl
jno
fld
popf
push
adc
popf
ljmp
add
js
add
push
jmp
fwait
shll
jl
inc
jo
mov
rolb
out
mov
dec
cmpsl
push
sbb
cmpsl
mov
push
std
divb
adc
in
or
aad
sbb
ljmp
cwtl
jg
sbb
or
gs
jge
dec
movsb
fisubrs
jo
sub
outsl
add
loope
lock
jnp
dec
mulb
pop
dec
aaa
add
fiadds
stos
dec
mov
xchg
pop
out
pop
fs
mov
std
loopne
test
insb
jae
shrl
in
pop
cld
mov
sub
xorl
pop
adc
xchg
dec
xchg
sbb
out
dec
cmc
mov
dec
decb
dec
sbb
sub
xchg
cli
push
mov
jbe
lock
shll
or
ljmp
dec
push
push
int
dec
shlb
sbb
mov
xor
aam
and
test
pop
test
sti
les
aas
dec
jp
jne
jns
fstps
jmp
stc
pop
hlt
mov
std
pusha
fists
aam
jmp
add
les
sahf
add
js
out
and
aas
repnz
jmp
xchg
xor
arpl
and
jo
mov
stos
dec
ret
cmp
cli
add
stos
mov
pop
or
push
or
cmp
jne
sub
pop
mov
movsb
sbb
sahf
jnp
icebp
mov
pop
pop
jle
data16
rcrl
mov
add
icebp
jge
movsb
add
pop
pop
push
neg
jae
add
out
mov
popf
addb
das
dec
imul
popa
lds
pop
add
mov
xchg
enter
lea
push
ljmp
addr16
adc
setno
mov
sti
sub
and
fwait
addr16
adc
mov
cmp
fdivs
out
das
in
mov
sti
cli
and
cmp
mov
mov
ja
cmp
cwtl
bndldx
adc
xor
clc
bsr
pusha
pop
xchg
xchg
inc
lcall
imul
sub
sub
scas
add
mov
sub
mov
clc
pusha
push
xor
aas
movsb
mov
xlat
ret
push
ffreep
add
push
and
rolb
mov
pop
bound
mov
adc
jb
or
or
in
lds
std
mov
push
jbe
sub
mov
je
push
out
inc
ret
addr16
gs
xor
jle
in
jae
mov
push
push
inc
out
dec
ja
repnz
je
inc
mov
sti
jnp
fwait
and
out
cli
je
dec
add
mov
dec
sti
les
push
sbb
push
ret
test
push
movsb
mov
sub
js
mov
ljmp
jge
daa
and
inc
and
push
mov
adc
mov
sbb
pop
inc
lock
fisubl
cmp
addr16
sbb
pop
in
sub
sub
popa
push
adc
or
add
cmp
jge
xlat
xchg
inc
lcall
fwait
xchg
jmp
testb
xor
adc
mov
insb
jne
jo
jno
push
pop
incl
jge
sub
xchg
sarb
jno
out
jecxz
dec
add
cmp
jbe
stos
adc
mov
outsl
pop
pop
cmp
stos
pop
mov
cmpsl
jb
fcoml
dec
mov
jle
or
sub
rsm
lods
xchg
mov
test
pop
outsl
cmp
scas
jns
popa
lahf
call
inc
mov
pop
cmc
lret
push
pop
inc
inc
jmp
jmp
dec
cwtl
and
lahf
add
ljmp
push
pop
sbb
jb
fwait
outsl
rcrl
fstl
xor
gs
enter
pop
pop
dec
into
mov
jbe
cltd
loope
xor
fwait
or
call
xchg
xchg
sti
pop
push
mov
mov
jno
xor
in
cmpl
mov
jno
cmc
les
ds
mov
gs
sbb
aad
xchg
pop
xchg
mov
mov
push
push
push
out
cmp
jo
xchg
mov
and
jno
loope
and
adc
inc
jae
rorb
mov
imul
sub
mov
mov
in
mov
inc
aam
out
dec
lret
mov
cmp
ja
sub
and
aas
adc
push
xchg
dec
jo
sbb
pop
inc
ds
out
orl
xchg
xor
aam
sbb
stos
scas
mov
dec
jne
imul
sbb
fdivrl
push
ljmp
pop
scas
mov
cld
mov
fcomps
or
sbb
iret
lret
pop
lock
pop
sub
sahf
bound
aas
mov
jne
xlat
cmp
dec
dec
adc
fdivrs
lods
nop
mov
push
inc
fisttpl
jl
fistl
fisubl
mov
pop
std
int3
cmc
pusha
ja
jae
lock
inc
ja
ret
mov
lret
lea
fists
and
int
rcrb
rclb
sbb
adc
mov
inc
jo
xor
rcl
dec
lods
sbb
jmp
add
inc
dec
aas
mov
dec
out
mov
rsqrtps
inc
es
inc
je
iret
ficomps
and
mov
je
out
ljmp
fstl
sub
ss
fdivrp
fwait
add
and
aad
enter
sti
mov
je
mov
loope
insl
das
test
aaa
pop
std
cmpsb
ja
lods
mov
mov
lock
sbb
gs
dec
repnz
sbb
cwtl
dec
push
into
in
mov
shll
cmp
jle
lea
add
je
ss
aad
fst
mov
dec
in
push
adc
sub
adc
int3
pusha
sbb
call
sbb
sbb
daa
adc
fsubrs
fnstsw
and
cmp
push
push
and
add
mov
pop
mov
scas
mov
test
cmp
and
mov
mov
push
pop
lahf
cltd
jg
sbb
pop
cmpsb
into
adc
aaa
popf
and
lds
mov
enter
mov
push
mov
test
pop
aam
and
lahf
pushf
icebp
fwait
xor
add
jmp
or
mov
xchg
ja
fwait
inc
push
xor
sub
xchg
jno
fdivp
roll
mov
fisttpl
xor
inc
shr
shl
mov
rcrb
fcmovu
sbb
loop
in
xchg
cwtl
inc
popa
jge
out
js
sbb
jge
jge
ss
sub
jge
xor
nop
ficoms
jb
loopne
mov
insl
push
lahf
pusha
lcall
push
out
outsb
mov
aaa
jnp
cmp
mov
call
out
jmp
or
and
ss
lods
or
nop
pop
nop
add
xchg
push
sub
imul
and
or
add
cli
sbb
mov
pop
sub
mov
hlt
imul
or
push
stc
sub
push
sbb
insl
mov
icebp
sub
decl
dec
fdiv
adc
neg
subl
and
test
pop
ss
insl
addb
aas
enter
push
ret
stos
in
das
xchg
sbb
data16
leave
fwait
je
adc
mov
inc
xchg
sub
xor
in
sbb
add
xchg
xchg
pop
inc
iret
roll
dec
cmp
push
sbb
leave
outsb
mov
sbb
test
out
cltd
addr16
mov
inc
or
out
mov
lcall
dec
sub
xor
lds
sub
clc
cld
pusha
dec
cmc
jns
jbe
cmp
jb
push
test
jne
ffree
cmp
int
mov
jae
add
lcall
lret
adc
mov
adc
sub
xchg
ret
notl
push
xor
xor
sbb
fists
outsb
push
iret
or
testb
xchg
xchg
and
adc
leave
add
pop
aam
xor
scas
call
repnz
pop
test
jecxz
push
xor
or
lods
mov
push
js
xchg
sbbb
sti
call
in
or
xor
data16
popf
cmc
mov
adc
cs
negl
cmp
fdivl
mov
loop
xchg
cltd
sbb
inc
dec
std
add
or
ror
sbb
sbb
push
xchg
mov
dec
xor
loop
push
jecxz
pop
adc
loopne
add
cmc
ret
lock
cmp
mov
popf
lock
fwait
ds
sti
loop
aas
push
data16
popf
lret
sub
js
stc
js
xor
cmp
inc
inc
pop
jmpw
cmp
jmp
hlt
idiv
push
push
push
and
pop
pop
or
kandnw
fsubrs
pop
mov
ljmp
xor
xor
test
or
pop
in
jae
adc
push
xchg
enter
add
call
lods
sbb
fdivl
xchg
mov
add
jge
cs
and
js
clc
pop
pop
das
jp
mov
xchg
fs
xorb
adc
into
adc
fsubl
mov
mov
outsl
jecxz
testb
fcomp
jbe
lret
adc
repnz
sub
xchg
xchg
aam
push
mov
sbb
popa
dec
xchg
mov
cs
sbb
push
xlat
or
stos
lock
rorb
enter
jne
cmpl
inc
add
add
add
rcrl
pop
cmpsl
or
lcall
mov
jg
sbb
jne
and
aas
and
lret
shl
movsb
pop
add
repz
shll
dec
dec
enter
jecxz
fstpl
stos
fistps
enter
stos
sbb
aas
xchg
in
imul
outsb
cmc
insl
dec
dec
jecxz
mov
xor
add
inc
data16
int3
addr16
cmp
or
jae
cmp
jne
xchg
push
sub
ret
ret
ret
xor
mov
dec
sub
jmp
fcomi
test
lret
jg
mov
mov
fsubr
mov
sbb
xor
mov
test
gs
data16
ss
in
fwait
xor
lock
cmc
aam
dec
push
add
mov
or
pop
mov
xchg
pop
repz
adc
pop
icebp
xchg
sub
mov
sbb
mov
scas
pop
sub
les
add
fisubrl
mov
imul
sub
cmpsl
push
into
std
xlat
xor
shlb
stos
stos
cmp
jl
xor
push
cltd
aas
xor
xor
pop
jmp
mov
xchg
clc
std
jmp
inc
adc
mov
cmpl
in
movsl
cmp
stos
xchg
mov
pop
repnz
dec
fsubrs
cmpsl
fadd
mov
popa
es
ret
insl
scas
out
loopne
inc
push
stos
shrb
stos
cli
enter
popf
pop
xor
add
cmpsl
sub
in
mov
sbb
mov
test
loop
icebp
ljmp
jecxz
ficomps
push
push
xchg
cmp
sub
mov
popf
dec
or
mov
loop
repnz
clc
mov
call
adc
xchg
sahf
mov
inc
lcall
jg
bound
out
mov
fisttpl
mov
fcmovbe
push
sbb
jg
stc
stos
fsubr
aas
sub
pop
cli
mov
jp
mov
or
and
aas
inc
inc
jbe
adc
mov
rolb
cltd
pop
scas
mov
mov
xchg
pop
xchg
into
xor
jno
sahf
div
adc
sub
dec
pop
fidivs
push
into
hlt
jnp
push
xor
cmp
je
sub
push
aaa
mov
aad
fstl
pusha
outsb
testb
pop
cld
ds
hlt
mov
ja
adc
into
fisubs
cmp
mulb
aam
and
jle
cmpsb
inc
xor
pop
xor
jns
mov
jae
pop
movsl
xlat
jmp
shrl
mov
ljmp
imul
ficoml
or
xchg
cmp
pop
xchg
adc
fisttpl
mov
push
push
outsb
fsubrl
scas
scas
lret
dec
sahf
out
xor
ss
jb
and
and
mov
add
call
fs
mov
or
fstps
mov
divb
stos
dec
xor
jb
push
adcl
pop
push
xor
mov
jecxz
sbb
bound
xlat
mov
xor
adc
dec
xlat
and
and
es
push
xchg
outsb
dec
mov
ret
cs
lock
xchg
push
xchg
pushf
int3
mov
mov
jge
int3
imul
test
adc
inc
repz
pop
sub
cmp
or
outsb
int3
mov
sbb
addb
inc
inc
nop
insb
mov
ljmp
or
sub
mov
sub
ljmp
xorl
adc
push
jnp
add
lock
or
mov
push
shlb
cmp
cmpb
int3
decb
and
xchg
push
test
out
negl
mov
les
aas
sub
push
inc
push
out
ret
pop
and
leave
xor
sti
push
into
test
jl
jo
and
mov
ljmp
pop
jmp
mov
lea
pop
and
xchg
lds
andb
cmp
dec
repnz
dec
out
int3
mov
sub
add
sti
xchg
inc
jge
xchg
inc
mov
pop
lods
xor
scas
clc
or
adc
mov
dec
orb
inc
xchg
pop
imul
inc
rorl
fldenv
pop
push
pop
pop
ret
push
pop
rcrl
pop
mov
dec
push
mov
inc
daa
ljmp
fs
insb
cld
sti
mov
cwtl
jmp
outsb
jnp
push
lret
fsqrt
pop
jne
loop
int
std
pop
fcoms
or
adc
jle
mov
cmc
mov
xchg
add
push
or
mov
scas
cmp
mov
dec
mov
rcll
hlt
movsl
push
iret
jae
cmp
xor
outsl
add
cmp
inc
push
mov
add
clc
cld
xchg
add
daa
sbb
je
jns
xchg
jb
mov
xlat
stc
insl
or
pop
lcall
mov
sub
xchg
addr16
xor
rcll
movsl
inc
mov
sub
cmp
cmp
inc
movsb
fdivrl
in
out
jle
fmull
sub
sub
dec
mov
out
data16
or
stos
mov
jno
xor
mov
mov
xor
dec
testb
dec
cltd
jne
mov
or
repz
cli
cmpsb
pop
mov
pop
sbb
dec
inc
scas
outsb
out
jge
popf
out
jae
test
sbb
adc
mov
repnz
addr16
or
clc
xor
mov
xlat
daa
repnz
leave
xor
mov
and
scas
call
fwait
jl
sub
adc
cmpl
les
ds
out
push
jae
push
sub
dec
push
add
das
outsl
jmp
aad
out
mov
sbb
call
jno
jl
lds
arpl
fsubs
mov
sahf
dec
fwait
jbe
or
loop
stos
aaa
xor
jno
mov
pop
pop
jo
xchg
sub
scas
add
and
mov
mov
sysret
loop
ret
lods
inc
inc
mov
mov
pop
sbb
push
int3
adc
push
cmp
lea
fyl2xp1
lcall
pop
pop
dec
cmp
lods
push
cwtl
cmovge
jl
mov
and
cs
xchg
mov
aas
pop
aaa
inc
scas
or
mov
add
mov
jmp
idivl
xchg
lcall
xor
mov
add
addl
dec
popa
shlb
ds
pop
adcb
lods
inc
shlb
mov
dec
xchg
jle
jae
mov
mov
add
xor
add
rorl
push
notb
sub
jmp
test
or
dec
stos
xor
xchg
push
mov
dec
jge,pn
subb
emms
fildll
push
push
add
push
out
pop
test
dec
inc
pushf
add
ss
and
js
repz
pop
je
dec
daa
repz
cmp
mov
cmc
inc
adc
xchg
dec
and
int3
cli
pusha
mov
stc
iret
fmull
cltd
xlat
xor
pop
pop
and
mov
or
test
clc
push
cwtl
sub
xchg
push
add
mov
jb
gs
push
leave
lds
xchg
inc
bnd
lcall
push
or
add
icebp
xchg
arpl
jge
jb
cmpsb
call
jecxz
lds
or
pop
push
jbe
add
les
mov
push
aaa
sbb
aad
movl
or
imul
mov
xor
inc
xor
mov
mov
push
test
adc
sarl
xchg
inc
scas
adc
cmp
fwait
push
pop
cld
mov
data16
sbb
cmp
inc
push
jae
pop
pop
and
clc
enter
lret
cmp
lods
fsubrp
test
mov
stos
pop
jecxz
mov
jmp
xor
mov
leave
les
sub
outsl
mov
xlat
in
loope
nop
inc
outsb
cmp
inc
loop
or
push
dec
cltd
cmp
sarb
cmc
iret
jno
mov
inc
out
jl
dec
or
mov
js
rcl
mov
fs
sub
mov
inc
cmp
icebp
sub
ret
test
int3
xlat
xchg
loope
mov
add
jp
mov
mov
loopne
jo
and
sub
and
stos
mov
mov
and
mov
cld
push
loope
add
dec
mov
ret
and
ret
daa
pop
pop
inc
loopne
daa
imul
cs
mov
dec
mov
cmp
pop
xlat
cmpsb
mov
xor
cmpsl
adc
adc
out
ds
cmp
mov
add
adc
adc
lods
outsb
pusha
jno
pop
xor
jnp
xorb
mov
scas
mov
jl
xor
dec
daa
decl
jo
xor
loopne
ljmp
push
pop
jmp
jbe
push
cmp
add
hlt
pop
mov
add
push
into
mul
cmp
out
out
and
pusha
mov
std
ss
inc
dec
cwtl
push
in
xchg
jae
mov
loope
mov
dec
mov
jno
xor
mov
jle
sahf
pop
lret
outsl
ret
daa
in
xchg
xor
push
mov
cltd
adc
and
movsb
push
imul
sarb
push
int3
mov
xchg
mov
xlat
sub
out
scas
call
scas
add
mov
stos
sti
call
cmp
dec
xchg
mov
negl
push
and
idivb
out
add
in
jecxz
call
lock
test
mov
jne
mov
test
jecxz
sub
mov
mov
inc
mov
insl
inc
sbb
xor
dec
popa
mov
lea
mov
mov
jg
sbb
sub
inc
cmp
mov
and
addr16
ljmp
pop
dec
adc
cmp
clc
add
mov
cltd
lahf
push
lods
iret
das
jnp
subl
sbb
in
out
or
mov
int3
notb
shlb
andb
stos
jmp
mov
in
xor
shl
lahf
xchg
sbb
mov
dec
mov
notl
mov
xchg
push
repnz
lret
pop
jno
cmc
push
and
pusha
outsb
adc
fs
movsb
push
enter
sub
mov
test
jg
fcmovb
dec
cmp
loop
cltd
sub
add
cmp
aad
cwtl
orl
jns
mull
sarb
int3
add
xor
mov
shlb
dec
push
jg
mov
inc
mov
and
push
cli
in
clc
mov
data16
sub
pop
fiadds
cmp
mov
and
or
scas
movsb
loope
iret
fisttps
cmc
rclb
or
insb
or
out
rorb
mov
popf
movsl
in
jne
out
std
sub
sub
and
xor
sti
or
cmp
push
pop
call
lret
insl
inc
xor
adc
out
mov
xor
fcmovnu
cltd
int
push
adcl
xor
xor
mov
xor
lea
aas
jecxz
test
movsl
in
mov
dec
xchg
test
or
ljmp
insb
out
inc
mov
pop
mov
mov
sbb
xor
fs
mov
pop
add
mov
movsl
and
dec
xchg
mov
cmp
cmp
xor
push
and
jle
rcll
xchg
sarl
jmp
nop
xor
and
shll
fisubs
mov
sbb
mov
imul
aas
insl
out
sbb
in
sub
or
or
dec
push
fimull
cmp
test
insl
fdivrs
lahf
mov
shll
cli
mov
cmp
test
or
mov
sub
dec
cli
xchg
icebp
in
and
repnz
ret
out
push
loopne
scas
push
dec
int
add
jle
ljmp
adc
aad
xchg
mov
mov
and
cmp
and
inc
pop
mov
jb
sti
ja
inc
push
leave
push
lea
xor
fmuls
mov
xchg
inc
xor
mov
inc
aad
add
test
shrl
hlt
sub
pop
sbb
add
mov
dec
jp,pn
std
and
fcompl
cmpsb
scas
andb
add
mov
popf
xor
cmc
iret
mov
fcmovne
cmpsb
inc
test
fdivrl
addr16
imul
mov
fstl
jbe
and
cld
sbb
mov
call
mov
ret
mov
xchg
pop
movsl
out
inc
mov
into
addr16
repnz
pop
scas
outsl
cld
repz
jb
sbb
dec
adc
inc
lahf
mov
lahf
mov
push
jmp
gs
fisttps
xlat
mov
lods
xchg
test
sub
xor
xchg
inc
ret
mov
and
and
movsb
addr16
int
inc
adc
pop
dec
mov
out
nop
sti
and
jo
aaa
pusha
aas
xor
rcrl
mov
js
mov
scas
imul
into
lcall
fistpl
ss
iret
lret
das
mov
cmp
push
jae
adc
inc
leave
xor
mov
loopne
aas
adc
jnp
sub
xchg
push
jnp
call
pop
sub
mov
lret
adc
sub
and
insb
add
fildl
test
mov
in
inc
xchg
xchg
mov
sbb
pop
mov
pop
out
add
test
and
mov
cs
mov
into
enter
das
shrb
jg
cs
pop
add
shll
in
stos
mov
test
xor
push
daa
data16
mov
push
sbbb
mov
popa
mov
xor
jns
lea
lret
fisttpll
xor
jl
inc
insl
lea
and
fs
std
mov
ret
mov
or
jmp
sahf
inc
adc
in
mov
jnp
xor
jns
es
adc
inc
jp
xor
pop
sub
jecxz
jp
je
lods
jne
jmp
sbb
xor
or
pushf
sbb
cld
inc
repnz
ss
loop
mov
ja
jmp
xchg
testb
lods
loopne
mov
xchg
xor
jbe
xchg
dec
aam
push
clc
mov
lcall
fs
xor
ret
xchg
jmp
shll
je
adc
out
je
push
leave
sbb
and
out
inc
leave
cs
cmp
ret
inc
mov
lret
mov
lods
leave
notb
add
mov
dec
cmp
addr16
jne
lahf
jle
mov
add
cmp
jmp
mov
popa
in
and
push
loope
push
lods
insb
loop
jnp
pop
mov
xlat
mov
scas
es
jnp
push
xor
lahf
jae
pop
sbb
pushf
inc
xchg
dec
hlt
mov
cmp
les
adc
dec
add
lds
adc
aas
cwtl
pop
jle
push
in
out
psubusb
sub
xor
in
add
es
sbb
test
lret
leave
mov
lret
inc
cmpsl
and
mov
arpl
push
jnp
jecxz
pop
mov
mov
dec
push
mov
fidivrs
dec
arpl
scas
and
cmc
lods
mov
or
in
pushf
cmp
loop
in
jae
jns
push
lcall
inc
and
xor
mov
enter
cmp
cmpsb
mov
sub
aaa
mov
xor
repnz
jge
sbb
repnz
push
jl
mov
imulb
roll
adc
aad
fidivl
cmpsb
iret
jp
gs
mov
sub
adc
leave
div
jle
sahf
pop
mov
mov
shll
jno
jnp
xchg
pop
stos
sub
xchg
ret
mov
dec
in
and
stos
outsb
arpl
int3
enter
cwtl
je
xor
pop
insl
or
mov
cli
test
call
sub
xor
fldenv
xchg
mov
repnz
or
stos
sub
push
and
fwait
dec
mov
jecxz
fidivrs
inc
sbb
cmp
pushf
push
leave
outsl
jb
arpl
fdivl
mov
into
mov
jl
fdivr
cmp
pop
and
jns
or
dec
sub
push
pop
inc
push
sbb
xor
aam
test
scas
out
fdivrl
imulb
test
loope
jo
and
clc
dec
add
inc
cmp
clc
dec
sub
jp
jne
adcb
or
test
dec
popa
andl
xor
pop
pop
test
jae
mov
mov
mov
in
xor
orb
decb
mov
scas
dec
push
lock
fimuls
or
and
push
lds
mov
push
fdivrl
into
in
mov
and
test
sbbb
mov
inc
dec
dec
imull
lret
lahf
add
scas
aam
sub
lods
movsl
sub
js,pn
fwait
stos
sbb
xchg
movsb
fists
push
je
ss
das
cmp
cmp
test
ja
inc
ret
aad
sbb
xchg
inc
jb
push
test
adc
out
xchg
daa
int
fsub
push
sbb
xor
test
dec
ret
xchg
sbb
scas
push
daa
lds
das
rcll
cmp
sub
dec
leave
sbb
mov
and
test
notl
sbb
xchg
add
js
ljmp
pop
cwtl
mov
sahf
mov
jecxz
sbb
push
int
pop
xor
pop
xchg
mov
cmp
cs
inc
jno
repnz
cmc
data16
or
popa
lock
cmp
mov
cs
and
inc
fcomps
les
adc
mov
inc
sbb
and
cld
mov
pop
jp
jge
xor
adc
sbb
into
outsl
aaa
mov
mov
pop
sbb
out
push
mov
pop
dec
hlt
dec
xor
inc
arpl
dec
xchg
adc
out
xor
mov
mov
test
nop
mov
popa
ljmp
std
jno
stos
dec
clc
push
ficoms
jge
jge
inc
xorb
neg
jecxz
cmp
sub
test
xor
stos
pop
pop
or
movsb
adc
sbb
mov
inc
sub
inc
sub
sub
push
ret
test
es
add
lcall
lods
outsl
xor
dec
cwtl
cmpsl
jo
aam
aad
mov
fistl
and
fdivp
dec
out
pmuludq
pusha
xor
data16
mov
cmpsl
add
cld
iret
xor
push
data16
cmp
mov
fists
mov
jecxz
jb
add
cwtl
lods
dec
imul
cmp
repz
stos
jnp
jle
xor
data16
scas
popa
lods
bound
in
xlat
xchg
mov
out
arpl
aam
push
cmp
in
cmp
cmp
imul
loopne
mov
xchg
test
in
pop
hlt
jns
sbb
jo,pt
and
xor
inc
lea
mov
lret
jns
adcb
inc
pop
js
xchg
loop
pop
daa
cmp
and
sti
movsl
test
or
mov
test
cmp
daa
std
in
jb
and
outsb
js
inc
jo
inc
outsl
ja
sarl
fwait
mov
pop
and
test
xchg
xchg
jbe
jecxz
aaa
stc
sub
lods
push
leave
insb
add
repnz
shlb
pop
mov
mov
sahf
cmp
jmp
xchg
mov
int3
iret
pop
cmpsb
add
adc
rcl
mov
sub
ljmp
mov
outsb
or
xor
rcl
sub
add
subl
add
pop
jno
push
roll
xor
fcomps
lret
jmp
fwait
cld
and
lock
inc
lret
test
and
inc
jecxz
js
in
xor
das
daa
es
dec
mov
mov
fsubrs
jne
xchg
ret
dec
push
jne
dec
loopne
adc
cmp
out
in
cmp
inc
mov
test
fistl
outsl
xchg
cmpsb
push
jb
xchg
sub
fpatan
cmc
mov
cli
xchg
jns
ljmp
adcl
xchg
cltd
clc
call
movsb
mov
xchg
xlat
aam
push
push
imul
or
mov
xor
mov
popa
push
stos
adc
xchg
popa
inc
aad
stc
jge
push
xchg
mov
mov
xor
add
or
fcoms
add
std
mov
rclb
mov
lret
xchg
in
cmpsl
sub
into
inc
popf
int3
mov
push
cltd
ljmp
adc
mov
mov
popf
jb
dec
and
xchg
cld
xchg
jb
addr16
cmp
add
mov
fcoms
std
sbb
mov
mov
or
movsl
jae
je
int
stos
lahf
fistps
iret
imul
jle
mov
xor
pop
gs
cmp
addr16
fldt
sub
cmp
outsb
ljmp
fldenv
fistps
rclb
cmp
test
xor
mov
js
test
roll
arpl
jecxz
inc
sbb
imul
jns
insl
lret
das
ja
cltd
ja
jmp
jge
lods
mov
push
mov
repz
ret
cmpsl
and
loopne
dec
xchg
hlt
data16
hlt
push
cmpsl
mov
inc
jmp
sbb
imul
loop
add
or
mov
or
hlt
mov
es
das
adc
iret
jmp
lret
lock
scas
ja
lods
jg
or
sbb
pushf
and
cmp
mov
sub
into
sahf
aam
cmp
push
outsl
mov
inc
dec
xchg
js
push
popf
sti
jns
call
pop
mov
dec
in
add
idivl
pop
cmp
pop
outsl
les
sub
jbe
fwait
xchg
ja
rol
cwtl
in
xchg
mov
cmp
xor
leave
lea
push
cmpsb
xchg
push
cmpsb
add
out
pop
and
sub
xchg
daa
dec
mov
in
xchg
aaa
cmpsb
jle
dec
mov
adc
stc
push
imul
adc
ss
fs
push
mov
or
pop
xchg
stos
rorl
movsb
lret
sub
stc
leave
outsb
sahf
mov
sti
fldcw
sbb
jbe
loope
ljmp
out
sub
inc
cmp
std
insl
and
shl
cmp
std
and
mov
lods
cli
pop
in
mov
leave
int
xchg
int3
mov
arpl
enter
or
jae
fcompl
das
xchg
sbb
cli
mov
adcl
push
int3
fwait
icebp
dec
fmull
xchg
fstl
xchg
imul
xchg
in
lds
stos
mov
cmp
adc
stos
inc
cmp
movsl
daa
sbb
aaa
pop
dec
in
ret
and
xchg
mov
lret
inc
aaa
inc
das
lahf
xchg
lds
sahf
adc
clc
faddp
adc
stos
sti
xlat
adc
clc
fstpt
pusha
push
pop
in
push
xchg
xchg
pop
adc
mov
mov
sbb
inc
rorb
inc
sub
and
ljmp
movups
xchg
cltd
fistpl
mov
cmpsl
pop
ret
cltd
mov
lods
mov
add
push
dec
orl
sbb
sahf
cmpsl
lock
mov
and
mov
add
imul
mov
and
sub
pop
dec
dec
bound
mov
jbe
adc
aas
movsb
sub
and
adc
movsb
lods
sub
cld
js
fdivrs
repnz
ret
jo
dec
adcl
mov
stos
shr
cmp
mov
ret
outsl
js
jno
mov
mov
scas
mov
cmp
notl
jno
pop
push
jp
repnz
pop
pop
xchg
cli
push
xchg
mov
into
add
adc
in
leave
repnz
jle
push
sub
test
cld
xchg
aam
aas
mov
add
cmp
inc
std
mov
push
std
in
lret
cmp
fstl
jnp
dec
out
daa
jno
scas
insb
cli
clc
mulb
and
mov
icebp
fnstsw
pop
loop
rol
pushl
in
std
and
ret
ss
xor
fmuls
sub
movsb
repz
cltd
dec
pop
lcall
lahf
loopne
sub
jecxz
adc
mov
xchg
mov
pop
and
push
sub
nop
xor
lret
es
push
leave
sub
test
xor
out
add
loope
lock
mov
das
scas
mov
shrb
loope
sub
xor
pop
adc
inc
lahf
sbb
xchg
sbb
jecxz
push
int3
mov
cld
popa
test
push
fidivrl
xor
inc
test
mov
cmp
jns
push
pop
sub
jge
fisttpll
lds
mov
and
lea
and
sbb
int3
add
mov
xor
mov
notl
push
sbb
pop
lea
and
rcr
fistpl
xor
mov
adc
add
testl
pushf
sub
ds
sub
xchg
or
lret
cmpsl
int
mov
or
lods
xchg
xchg
subb
or
mov
in
ret
jg
adc
mov
movsl
in
mov
mov
cli
xchg
stos
pop
cmpsl
jb
ficompl
ss
and
adc
mov
mov
test
jo
pop
filds
pop
shll
xor
mov
mov
rcll
fs
popa
popa
imul
pop
test
ffreep
stc
jnp
cmp
jp
lahf
sbb
push
stos
jbe
inc
loopne
stos
jb
jb
fiadds
push
nop
test
and
lret
lock
pop
je
add
jg
push
arpl
rorb
push
push
imul
scas
jb
pop
pop
mov
cld
adc
fs
or
cs
pop
jecxz
cmp
loop
cwtl
jnp
jo
hlt
fistpl
or
nop
mov
mov
dec
mov
xchg
iret
inc
pusha
cmp
scas
xor
movsl
int3
sub
jnp
subl
es
adc
out
pop
xor
ljmp
icebp
test
cli
xor
xchg
pop
mov
pop
stc
in
pushf
mov
xchg
pop
je
mov
pop
adc
je,pt
xchg
loope
xor
jp
jne
rolb
jno
push
addr16
cwtl
cmpsl
mov
cmp
sarl
movsb
inc
imul
add
loop
cmpsl
mov
cs
adcb
repz
mov
lahf
inc
icebp
jbe
clc
jmp
call
and
or
roll
aaa
adc
nop
or
mov
mov
xlat
mov
jb
addr16
cmp
std
insl
aaa
jecxz
sub
mov
dec
enter
fists
sub
outsb
pop
add
insb
jge
xchg
or
cmpsl
je
popa
push
rorb
cmp
mov
pop
xor
das
xor
xor
push
in
popa
adc
mov
bound
clc
mov
cmp
sub
fildll
dec
inc
les
cmp
int3
mov
dec
or
mov
pop
stc
rcl
xor
jecxz
subb
cwtl
xor
das
adc
and
jae
sub
dec
and
idiv
xchg
pop
add
scas
push
cmp
jmp
xor
ret
and
mov
loope
lcall
inc
negl
mov
push
xchg
cmp
inc
xchg
aaa
pop
sbb
das
adc
inc
scas
aad
cmpsl
lds
pop
jns
push
es
das
push
mov
add
sub
aam
or
xchg
and
xor
add
test
push
pop
cwtl
rolb
in
cmc
add
push
call
adc
jp
outsl
jns
aam
jle
adc
mov
in
int3
xchg
dec
rclb
mov
xchg
push
rolb
push
jmp
adc
add
mov
shl
cmp
sarb
mov
fcomp
jo
loop
mov
out
adc
stc
ss
pop
in
inc
and
das
pop
dec
mov
cwtl
rcr
mov
scas
or
cmp
imul
adc
movsb
fisubl
xor
adc
lock
dec
dec
or
push
cmp
lret
pop
mov
ja
sbb
mov
enter
dec
or
std
aas
cmp
movsb
loopne
pop
cmpsb
fwait
insl
stos
mov
lahf
jecxz
pop
test
das
faddp
mov
adc
cmp
add
add
mov
pop
mov
push
push
sbb
cmp
gs
push
inc
add
fs
je
repz
lock
inc
cmp
jno
leave
shll
sbb
loopne
dec
xor
icebp
mov
sbb
sub
shlb
mov
out
xchg
shl
inc
mov
stc
adc
push
insb
sbb
add
popa
cmpsl
aaa
cwtl
cld
pop
loop
inc
pop
pop
fidivs
lods
push
push
dec
push
test
bound
loop
arpl
stos
sub
dec
negl
scas
fildll
es
idivb
push
inc
or
dec
outsl
frstor
dec
mov
cmpsl
adc
mov
jnp
dec
xor
xchg
test
lods
xchg
mov
call
jle
les
push
orl
sub
lret
xchg
imul
movsl
xchg
sarl
enter
jl
jns
push
fisubrl
jo
in
mov
adc
lret
push
dec
jmp
mov
fwait
les
xor
xchg
movsb
int
das
ficompl
mov
clc
rcl
mov
jnp
xor
xor
loope
adc
or
or
adcb
mov
sarb
lret
into
call
rclb
call
pushf
aaa
mov
pop
sbb
addl
push
imul
lea
pushf
and
adc
pop
or
and
lds
out
and
sar
test
in
ss
pushfw
hlt
int
pop
sti
xchg
push
mov
inc
mov
xor
or
adc
pop
pop
mov
lods
pop
jle
sub
aad
push
out
cltd
sub
add
test
adc
inc
sbb
out
je
test
arpl
and
popa
sbb
mov
add
clc
stc
imull
cli
movsl
dec
dec
xchg
push
out
adc
in
bound
mov
scas
sub
ljmp
xor
fdivs
hlt
shlb
enter
fists
out
jmp
sub
adc
scas
sub
sub
sbbb
ljmp
sahf
dec
xorb
lcall
add
pop
ficomps
mov
or
sub
mov
xchg
inc
pusha
gs
sub
inc
add
xlat
mov
xchg
cmp
ret
sub
sub
adc
xchg
lds
jnp
pop
xchg
pushf
lock
mov
add
lret
jbe
lret
jp
and
out
xchg
sahf
sbb
inc
inc
fidivrl
movsl
mov
pop
cmc
mov
dec
xlat
sub
mov
cmp
push
je
add
mov
cmp
push
ret
ljmp
inc
jbe
outsb
hlt
pop
xchg
xor
xor
sbb
mov
or
sub
fistps
fdivrs
enter
mov
and
popa
je
test
mul
lret
fs
sbb
xchg
icebp
push
out
movsl
stos
push
out
and
sbb
xor
mov
xchg
dec
out
shrb
enter
push
subb
int
inc
dec
or
popa
jns
faddl
cmp
sub
push
gs
mov
loopne
in
imul
xor
es
ds
push
loope
sti
outsb
pop
stos
cmc
jecxz
data16
xor
mov
push
adc
adc
imul
test
dec
or
fcomps
dec
das
lcall
jmp
bound
pop
ret
push
cli
xor
fwait
movsb
fimull
push
jle
fs
and
jmp
xchg
dec
xchg
faddl
xchg
fiaddl
daa
cmp
cmp
mov
xor
jmp
mov
mov
push
adc
xchg
sahf
insl
inc
mov
sbb
jmp
cmp
fisubs
push
lret
lods
pop
push
flds
outsl
mov
movsb
data16
scas
call
aad
sub
aam
test
or
sbb
mov
lods
push
dec
mov
ja
sbb
loop
test
mov
loopne
lret
ss
push
loope
or
movsl
out
iret
jno
int
ja
jne
push
out
and
inc
aas
fadd
cwtl
dec
pop
or
mov
stc
jne
sti
cmp
inc
mov
leave
xor
pushf
nop
dec
sub
lret
or
mov
outsb
sub
stc
cwtl
nop
test
mov
jbe
mov
outsl
jle
repz
adc
aas
fsubl
push
test
orb
and
out
cwtl
pop
cmp
daa
dec
push
fidivl
shrl
sbb
das
mov
loop
lret
and
or
cmpsl
sub
inc
rcrl
out
and
stos
sub
mov
sbb
sbb
sbb
jl
and
stc
cli
adc
lds
pusha
stos
mov
dec
mov
call
cmp
adc
pushf
rclb
out
stos
xor
test
xchg
jnp
and
sahf
dec
ficoml
sbb
sahf
pop
cmp
sub
mov
mov
stc
cmp
movsl
jnp
mov
xchg
mov
ret
add
and
ss
scas
xchg
cmpsl
ret
mov
into
mov
fidivl
lock
mov
shl
inc
pop
cmp
mov
shrb
in
ds
mov
dec
or
hlt
lods
mov
adc
cmpsb
imul
mov
test
lahf
dec
idiv
cmp
arpl
into
mov
add
push
inc
and
mov
sub
jmp
adc
or
leave
pop
cltd
vfrczps
mov
pop
sbb
and
out
dec
or
jmp
sub
lcall
dec
dec
les
mov
lret
stos
hlt
push
mov
sub
dec
and
outsl
addr16
sub
rol
dec
xchg
pushf
fcmovnb
ret
popf
jns
shlb
or
mov
aam
cld
xchg
hlt
cld
add
pop
aas
dec
jp
mov
leave
sbb
daa
cmp
insb
jbe
mov
daa
stos
or
std
pop
push
push
pop
mov
push
mov
nop
xlat
and
pop
jno
mov
fstpt
inc
mov
mov
and
sbb
xor
nop
cld
and
popf
es
test
test
sarl
rcrb
pop
cmp
xor
mov
stc
adc
push
xchg
or
adc
int
mov
cmp
shlb
push
push
pop
scas
in
cwtl
lods
and
pop
bound
mov
int3
mov
popa
push
repnz
adcb
mov
pop
std
int3
and
subl
cmp
cmp
push
and
test
mov
cwtl
mov
mov
sbb
and
popf
add
lods
mov
popa
cmc
shll
or
dec
stc
and
sub
das
mov
mov
enter
xor
cmp
scas
jbe
adc
sub
sub
mov
jg
sbb
pop
sub
arpl
fidivrl
mov
lds
mov
jl
xor
cmp
or
sbb
adc
mov
outsl
iret
sub
fs
push
push
mov
sub
pop
mov
cmpsl
test
mov
fistpl
push
xchg
movsl
mov
sub
lea
push
rorb
popf
mov
adc
mov
rcl
imul
xchg
sub
das
js
or
inc
and
push
push
daa
mov
popf
push
outsb
sbb
pop
xor
push
outsb
xor
jbe
ss
or
sbb
xor
jnp
das
ret
push
xor
fisubs
aam
test
push
aas
mov
sbb
je
mov
jecxz
and
cmp
divb
mov
cmp
div
cltd
pop
shl
xchg
fiaddl
dec
mov
fisttps
out
jmp
cltd
push
iret
into
lret
mov
add
call
rcr
push
stos
mov
pop
pop
cltd
movsl
fsubrl
dec
fbld
fnclex
je
rcrl
jnp
movsb
loop
mov
mov
or
push
pop
into
cmpb
daa
and
lds
rorb
inc
mov
stos
push
pop
jge
lods
fsubs
jb
and
or
fadds
jmp
cmpsl
dec
jne
mov
ss
in
pop
mov
mov
cltd
pop
mov
adc
sbb
insb
mov
je
pop
inc
cmpsb
sbb
mov
jecxz
mov
mov
pop
push
xlat
mov
dec
sub
xchg
cwtl
lcall
rolb
xor
xchg
adc
dec
insl
sbb
adc
push
lret
in
fimull
data16
adc
loopne
push
arpl
test
sbb
jge
adc
imul
xchg
std
cmpsb
jg
ret
fidivs
dec
popf
sbb
fmul
dec
push
add
mov
jecxz
push
dec
mov
dec
imul
mov
xor
mov
cli
addr16
or
fisubl
negl
cmp
jmp
in
mov
inc
pop
push
mov
into
dec
insl
inc
inc
xor
in
cwtl
inc
bound
loopne
sbb
scas
pop
sub
imul
out
test
inc
cmp
mov
xchg
mov
xor
push
inc
cmpl
mov
push
das
into
pop
pop
mov
je
sub
das
stos
stos
or
add
pop
addr16
jns
loope
ficompl
ds
xor
loop
sbb
lcall
adc
jne
mov
pusha
rolb
xchg
mov
xchg
sub
ret
ljmp
adc
sub
cmp
add
fsubs
mov
jno
ret
xchg
push
shll
push
push
sub
test
std
mov
sub
inc
push
out
xor
sbb
jle
test
mov
not
dec
outsl
lds
hlt
js
rol
jl
inc
incb
adc
cltd
clc
into
mov
pop
fisttpll
fcomps
jle
test
aad
add
xchg
sbbl
jmp
mov
sub
push
ficoms
jle
sub
jb
addb
jge
inc
jg
sbb
enter
orb
out
xchg
xchg
push
rclb
sub
loopne
iret
arpl
setae
cmc
call
adc
jae
jnp
push
insb
cld
jb
scas
sub
mov
xchg
bound
test
xchg
test
jne
iret
in
inc
xchg
jmp
out
lret
mov
repz
mov
lea
nop
into
dec
in
jno
fdivs
mov
jmp
pop
and
fsubrs
mov
dec
xor
aaa
sub
stos
test
iret
xor
jmp
or
sub
pop
sbb
xchg
xor
call
dec
inc
ljmp
mov
lock
push
jns
ror
pop
clc
rcrl
add
pop
in
mov
lahf
cmp
rol
cld
mov
gs
mov
fnsave
scas
jnp
sub
movsl
pop
push
lcall
popf
ret
outsl
jl
mov
out
aaa
or
dec
aaa
ret
add
fst
addr16
lret
cmp
add
rolb
sub
jnp
movsl
insl
out
aam
aad
mov
mov
pop
std
mov
xchg
sbbl
lahf
aad
gs
mov
sahf
mov
mov
mul
dec
gs
mov
push
out
arpl
pusha
push
or
ret
sahf
dec
cmpsb
repz
aad
pop
pop
sbb
in
ret
cmp
popf
cmp
jno
mov
and
cs
mov
call
fs
iret
aad
push
dec
imul
add
add
imul
or
mov
test
cs
jbe
repz
xchg
mov
push
test
popa
adc
push
cli
dec
inc
cmp
lock
mov
dec
stos
inc
dec
pop
sbb
push
sub
gs
cwtl
sbb
and
push
dec
dec
ss
pop
fmul
jne
imul
or
loop
sbb
sub
fs
xor
scas
lret
pop
pop
xchg
inc
imul
imulb
mov
cli
inc
sti
insl
test
xchg
dec
stos
scas
lds
sti
pop
loop
mov
push
sti
stc
mov
loopne
pop
shl
cld
sub
mov
sets
mov
shlb
xchg
insl
add
mov
mov
mov
mulb
mov
enter
test
pop
inc
pushf
add
icebp
aas
mov
add
cmc
stos
lea
lahf
mov
sarl
xor
mov
dec
bound
sahf
sub
mov
movsb
mov
mov
and
jle
iret
cmp
cmpsl
jbe
xchg
add
jp
add
jle
cs
dec
and
xchg
xchg
fsubrl
jnp
mov
cmp
or
and
andl
mov
cmp
ljmp
shlb
xorb
cld
jge
sbb
test
push
std
mov
inc
addw
shr
sti
sbbb
xor
push
ja
mov
stos
jge
ficoms
xor
add
add
xor
push
xchg
mov
add
movsb
les
adc
call
sub
mov
popa
inc
dec
sub
outsl
iret
out
and
push
pop
andb
xor
jb
call
mov
xor
jne
mov
lods
push
aaa
movsl
cmp
sub
push
sub
je
jae
sub
jmp
jg
sub
cld
out
test
add
jmp
or
xchg
push
inc
cs
xor
xor
inc
lock
or
call
push
stos
mov
pushf
rcrl
stos
repnz
ljmp
dec
xor
pop
add
lret
rclb
notb
xlat
cltd
inc
dec
test
repnz
lock
or
dec
movsl
push
call
or
jb
sbb
std
repnz
xor
rcrb
lcall
rorl
outsb
pop
push
mov
push
push
xchg
and
mov
scas
stc
jle
inc
xlat
int
aaa
dec
mov
outsl
cltd
stos
negb
jecxz
adc
add
jge
hlt
sti
fistps
mov
cld
push
push
adc
pause
out
xchg
movsl
sbb
and
jg
movsb
sub
inc
shl
jne
icebp
sbb
add
mov
insl
add
imul
fisubl
xor
mov
or
adc
sub
iret
popl
std
xchg
xchg
dec
and
push
cwtl
inc
ficomps
cmc
fisubs
ljmp
bound
movsb
out
repnz
lahf
mov
jge
ret
in
outsb
adc
pop
out
repnz
cmp
lret
pop
daa
sbb
dec
mov
pop
inc
cs
lea
dec
testb
insb
into
shrb
pop
push
xor
sbb
scas
shrb
popf
and
inc
ret
rcrb
mov
addb
mov
faddl
mov
fstpl
loop
enter
cs
or
or
rolb
pop
lods
xchg
mov
xor
sbb
leave
sahf
cmpsl
aad
in
dec
xchg
add
dec
out
cmpsb
mov
mov
lret
mov
add
xor
dec
popf
call
dec
jno
fcomp
sti
addr16
sub
xchg
rorb
jl
sbb
xchg
jne
cs
popa
mov
xchg
xchg
cmc
fmulp
popl
push
and
and
gs
add
out
stos
xchg
xor
ja
push
sbb
mov
mov
cltd
hlt
fnsave
cwtl
mov
pushf
ffree
cltd
push
pop
or
idivb
dec
ret
in
mov
mov
adc
inc
out
aas
int3
cmc
jb
mov
ja
out
mov
or
jb
icebp
inc
jae
repz
std
inc
pop
das
popf
push
lret
fldenv
xlat
or
mov
shlb
sub
jnp
nop
adc
daa
inc
inc
adc
add
leave
adc
xchg
xchg
push
pop
adc
imul
mov
sarl
dec
sub
or
aad
jo
sarb
jb
mov
aas
dec
sub
lods
xchg
add
imul
jge
into
sbb
and
arpl
inc
rorb
adc
pop
test
mov
xchg
sub
fbstp
push
jp
jnp
xchg
int3
loop
xchg
bound
pop
cs
js
out
lea
lock
es
iret
adc
cmpsl
in
push
pop
sub
je
adc
or
pop
jnp
mov
sbb
or
pop
push
mov
dec
jmp
and
dec
dec
in
leave
mov
and
and
inc
popf
push
add
fdivs
dec
mov
fwait
mov
jge
shl
add
xlat
pop
popa
int
and
ret
add
hlt
dec
pop
push
ja
add
mov
mov
scas
or
js
roll
jbe,pt
inc
lock
negl
inc
dec
insl
inc
mov
push
inc
lret
and
daa
xor
push
test
jne
ret
and
or
jmp
int3
aad
ja
add
mov
mov
cs
insl
fwait
lret
mov
pop
pop
jno
or
fstpl
cmp
adc
lea
arpl
jl
cmc
sbb
mov
aas
sbb
adc
filds
sub
mov
sbb
xor
jmp
mov
push
fmull
test
dec
inc
pop
inc
xchg
aad
mov
cmp
cwtl
xor
loope
xchg
push
jns
cmc
imul
cli
xchg
aam
cmp
sub
iret
gs
cmp
mov
jno
xlat
jecxz
dec
inc
bound
stc
pop
icebp
out
sbb
or
icebp
adc
or
mov
addb
bound
jb
mov
mov
data16
adc
inc
jno
mov
ret
in
add
xorb
pop
and
prefetch
decl
push
out
sti
ficompl
cmpsb
mov
mov
mov
jno
repnz
clc
shll
sbb
and
mov
xchg
mov
jle
push
sbb
push
in
stc
cmp
in
add
push
in
xlat
repnz
imulb
mov
jb
js
adc
mov
js
adc
pushf
pop
rcrb
mov
das
adc
mov
adc
shlb
mov
mov
popf
xlat
sti
sbb
popa
test
int
popf
pop
stc
aad
addr16
in
adcl
cmp
loopne
add
mov
out
xchg
inc
mov
outsb
dec
cs
adc
mov
std
adc
loopne
cmp
push
jb
cmp
cmpsl
jb
xchg
add
cmp
push
inc
dec
and
std
push
rcrb
addl
cmp
daa
out
fistl
rcr
cmp
push
in
aam
test
xor
mov
movsb
mov
jae
jno
dec
add
dec
sub
and
fcmovnu
xchg
sub
popl
add
stos
in
xor
jno
cltd
mov
fidivrl
dec
mov
jb
mov
sar
jbe
fisttpll
sti
aaa
aas
push
dec
add
pop
out
gs
inc
xchg
push
push
push
pop
jl
ljmp
in
pop
adc
aad
xchg
sub
xchg
push
mov
pop
cmp
adc
ret
lahf
aad
mov
enter
lea
out
cli
rclb
push
mov
pop
xchg
pop
mov
adc
xor
ja
inc
and
push
push
jb
push
adc
icebp
nop
scas
dec
add
lods
add
sbb
pop
clc
dec
fbld
xor
add
mov
push
adc
fsubs
repz
ss
cmp
aaa
xchg
ja
mov
adc
out
fwait
mov
inc
into
lahf
sbb
jns
insb
sbb
sahf
mov
push
xchg
mov
mov
mov
lret
outsl
rcrl
repz
jp
sbb
cs
jns
cltd
das
insb
ds
push
movsb
mov
into
pop
mov
shll
push
aaa
pop
inc
aaa
mov
ret
dec
mov
test
pop
mov
jg
ljmp
pop
imul
nop
test
mov
push
push
cs
inc
fisttpll
mov
movsb
mov
add
out
push
in
xchg
out
push
dec
cmp
enter
pop
leave
ficompl
sbb
xchg
jno
xor
out
in
testb
das
sub
push
js
jge
test
push
ja
mov
and
leave
cmpsb
mov
mov
lock
push
dec
and
andl
fdivrl
xchg
xlat
dec
leave
sbb
test
das
enter
add
push
mov
fldt
test
aad
fmull
add
in
aam
mov
pop
push
out
repz
sbb
xchg
xchg
add
mov
pop
jg
sub
and
imul
inc
pop
in
loopne
fisubl
pop
cmpsb
stos
cld
and
mov
sbb
cltd
mov
adc
mov
jno
mov
pop
outsb
int3
fistps
aas
push
inc
adc
push
add
xchg
cmp
mov
je
ljmp
arpl
dec
inc
jno
ficomps
in
popf
adc
movsb
push
movsl
or
mov
stc
xchg
icebp
sarl
mov
pop
jg
adc
iret
inc
scas
adc
and
fwait
stc
or
mov
mov
inc
int
sbb
push
icebp
sub
jo
cmpsl
daa
and
rcr
xchg
xchg
jge
xchg
jg
std
sub
jnp,pt
mov
xchg
andb
in
push
loopne
cmpsl
push
ficompl
mov
mov
mov
xor
psrlq
xor
jb
rcrl
xchg
iret
out
cmpl
pop
in
add
jl
icebp
scas
pusha
sbb
push
mov
repnz
fmuls
mov
rcl
inc
hlt
ja
cmp
inc
fisubrl
push
mov
mov
aad
nop
fstpt
mov
xchg
add
cmpsb
loopne
and
mov
imul
jl
mov
adc
sarl
adc
dec
mov
jl
pop
int3
leave
cs
ret
repz
add
push
xlat
loop
or
adc
and
or
es
daa
leave
loope
rorb
or
push
nop
aam
xchg
or
dec
jae
dec
popf
ja
xchg
cld
mov
xchg
jp
out
mov
scas
pop
push
jne
push
jp
xchg
inc
loopne
in
push
cld
rorl
orb
and
sbb
or
xor
jnp
jno
fldt
mov
cmp
cmp
cwtl
fadds
push
sahf
mov
adc
dec
fnclex
push
mov
push
pop
rorb
xor
imul
mov
add
or
add
mov
fimull
imul
xchg
lret
and
dec
out
iret
lcall
jle
rol
sbbl
js
and
add
push
fnstsw
imul
repnz
pop
cmp
test
rcl
mov
idiv
in
cmp
int
sbb
inc
dec
stos
js
pop
inc
xchg
and
or
call
loopne
add
lret
popa
cld
lea
lcall
nop
lock
sub
bound
xor
es
aad
out
mov
call
cmp
cltd
xorb
dec
enter
fnstenv
adc
or
sti
or
pop
divb
cld
imul
mov
fdivrp
mov
inc
bt
and
pop
fisttps
inc
and
inc
lcall
pop
fistpl
sti
adc
loope
xchg
negb
xchg
xlat
mov
xor
cwtl
jns
adc
mov
push
test
push
push
mov
in
inc
cmp
or
lock
pop
mov
pop
dec
add
mov
fwait
imul
jae
scas
or
pop
or
lea
inc
pop
das
addb
jl
mov
adc
or
fsubs
add
jp
das
push
cltd
cltd
pop
adc
cs
push
or
jnp
les
push
push
nop
or
mov
sbb
mov
es
jno
mov
sbb
jmp
into
rcrl
movsl
lcall
mov
stc
dec
mov
or
pop
stc
arpl
mov
add
add
sahf
jecxz
sbb
xchg
or
mov
mov
inc
xor
clc
xchg
inc
sub
adc
dec
cmp
dec
andl
mov
ror
push
jb
sbb
xor
pop
fucomi
cld
or
adc
xchg
in
stos
cld
xor
fisttpll
mov
stc
or
std
ss
fidivs
lcall
mov
into
xorb
cmpsl
jp
std
nop
outsb
push
les
bound
dec
add
lret
and
dec
jne
jbe
and
bound
nop
xor
mov
loope
mov
out
mov
xchg
fxch
cltd
addr16
mov
icebp
nop
jg
fiaddl
cmp
mov
mov
mov
scas
push
push
cmp
into
push
repz
dec
je
cmpsl
jbe
pop
ret
sub
lahf
jne
pop
mov
lods
add
cmp
or
push
orb
int3
mov
cs
cli
adc
jmp
xchg
in
lods
rcll
inc
sub
cli
sub
out
pop
push
adc
mov
inc
and
cs
inc
sub
jno
mov
push
mov
pushf
xchg
stc
std
adc
enter
int
xchg
call
js
imul
jb
aam
mov
xor
popa
lods
dec
lea
xchg
es
outsl
dec
fimull
insl
mov
sub
test
push
push
mov
pop
mov
lods
sub
adc
outsl
in
xchg
cmp
jae
pop
mov
inc
sbbb
in
pop
pop
add
xchg
cmc
mov
cmp
in
mov
jno
or
xchg
inc
les
mov
sti
sbb
and
mov
push
icebp
pop
push
fistpl
movsl
jns
mov
cld
sbb
pop
adc
pop
add
mov
hlt
iret
adc
add
mov
addr16
ror
xchg
shll
stos
jb
shlb
lea
push
lock
daa
xor
imul
scas
jp
cmc
push
adc
js
popf
sbb
jb
js
rcl
sub
mov
fyl2xp1
es
pop
xor
jge
dec
ljmp
adc
rol
sub
cmpsb
sub
js
test
rcrb
push
clc
mov
push
lods
add
fwait
vandpd
adc
aam
mov
das
adcb
xchg
jnp
cmp
jns
xchg
ss
ror
dec
sbb
pushf
in
jbe
and
repz
mov
sbb
push
adc
mov
daa
imul
arpl
adc
xlat
out
fnsave
jl
sub
and
pusha
xor
pop
lock
je
jae
xchg
xchg
xor
jne
push
lahf
mov
push
jne
rolb
pop
xchg
lea
xchg
insl
sbb
add
incb
push
pop
dec
nop
addb
cmp
test
push
adc
loopne
pop
dec
push
push
fdivrl
add
push
fsubrl
or
out
in
pop
in
jne
out
xchg
jle
xor
push
pop
mov
addr16
mov
lods
insl
push
add
xchg
jne
rcll
and
in
test
inc
jb
gs
jg
sbbl
insl
pop
popa
rcll
cmpsb
cmpl
cli
jno
lahf
int3
mov
push
shlb
xchg
xchg
inc
outsb
cmp
mov
jmp
xchg
movsl
sub
cld
out
clc
bound
add
mov
mov
test
xlat
inc
and
pop
sub
add
fidivrl
mov
xor
bound
add
sub
in
mov
dec
test
xor
jge
js
aas
mov
aas
out
sub
cs
push
sar
leave
mov
mov
pusha
das
or
sub
sub
call
loop
jmp
inc
jmp
jle
std
fcmovnu
push
sbb
popa
ds
aas
cltd
mov
sarb
or
xor
xchg
pop
movsb
scas
sub
mov
xchg
ficoml
mov
xchg
loope
call
push
jbe
jnp
mov
xchg
dec
addl
loop
push
sbb
movsl
neg
test
mov
adcl
stos
push
add
mov
push
fwait
arpl
and
insl
adc
pop
push
ja
xchg
cs
imul
arpl
jb
stc
popa
repz
and
adc
mov
pop
pop
icebp
cmp
lahf
mov
mov
mov
xchg
pop
ret
int3
stc
data16
jp
cmc
in
jns
jg
xchg
pop
cmpsb
sub
ljmp
lcall
or
hlt
orb
fs
cltd
call
dec
leave
lods
sub
pop
out
pop
pop
imul
data16
inc
in
and
jmp
fwait
lea
shll
mov
inc
hlt
adc
xchg
mov
dec
jne
pop
test
pushf
out
bnd
jg
imul
aad
cld
push
xor
xchg
mov
sahf
iret
xchg
cmc
repz
js
pop
cmp
sub
outsb
adc
mov
push
xor
mov
jns
pop
aad
xchg
sbb
mov
repnz
xchg
inc
dec
lret
test
or
je
shrb
cli
mov
xor
xor
sbb
jg
adc
cmp
mov
fcmovnu
ja
fsts
lahf
cs
jmp
sbb
mov
mov
or
or
lods
xor
mov
call
cli
inc
mov
outsb
mov
jg
mov
popf
fs
push
xchg
les
aaa
xor
jmp
inc
movsb
mov
lret
adc
mov
cltd
aad
pusha
lret
es
xchg
sub
push
pop
push
jbe
jle
sbb
and
insb
pop
js
sub
ffreep
icebp
push
or
nop
or
daa
insb
insb
pop
fidivrl
mov
outsb
pop
push
sti
or
inc
jo
inc
movsl
xor
add
lret
std
dec
test
aad
ja
fldt
adc
cli
adcw
xchg
pop
pop
fbstp
loope
bound
out
aaa
add
lahf
and
jnp
les
jne
mov
mov
div
mov
dec
pop
ret
vmovlpd
repnz
sub
inc
test
xor
insb
out
push
lds
nop
or
sahf
sbbl
pop
lock
std
mov
scas
add
jge
js
mov
sbb
out
movsl
jp
jp
sbb
sub
dec
sub
dec
and
push
loopne
test
mull
cmp
pop
adc
dec
mov
xor
or
xchg
fsubl
inc
loop
adc
mov
ds
enter
test
mov
leave
cmpsb
aaa
lret
adc
or
lret
das
arpl
fstps
push
ljmp
fbld
popf
movsl
xchg
mov
loopne
data16
fldlg2
fdivp
sub
jo
inc
sub
pop
lcall
in
mov
jno
je
jp
and
in
sbb
pop
popf
inc
repnz
lods
xchg
out
adc
scas
sub
push
xor
popa
cmp
cmpsl
inc
sarl
hlt
cmp
and
lcall
dec
stos
inc
mov
jbe
lahf
pop
addl
pop
dec
roll
push
das
jl
in
and
fwait
adc
popa
jp
out
fistl
repnz
jecxz
adcl
in
inc
sbb
lahf
es
push
and
call
xchg
add
push
xor
or
add
fs
insb
test
loope
pop
adcl
jne
xor
xchg
mov
sub
call
stos
stc
arpl
in
cli
push
rcpps
dec
gs
jno
mov
push
rolb
lret
push
test
into
cld
push
psubsw
push
in
and
movsl
repz
in
jecxz
daa
fsubrl
into
stos
mov
lds
and
shrl
add
xchg
mov
mov
sub
pop
lahf
lea
dec
xchg
sub
mov
rep
xchg
adc
push
sbb
lret
mov
add
push
mov
nop
es
pop
test
push
jbe
jae,pt
data16
xchg
inc
jns
pop
iret
bound
mov
dec
xchg
dec
rcr
notl
test
inc
in
ds
jo
jge
sbb
adcb
lret
out
dec
jno
loop
jnp
daa
pop
mov
sahf
bound
and
sbbl
lock
stos
xchg
xchg
dec
xchg
jecxz
lea
inc
fidivs
lock
imull
mov
addr16
jno
jo
flds
jb
aad
pop
push
or
mov
inc
mov
xor
sub
push
adc
cli
sub
add
push
orl
imul
and
cmc
lods
inc
loop
imul
lods
in
mov
mov
dec
nop
fbld
inc
scas
fucomi
mov
adc
cmp
lods
sub
rol
arpl
dec
test
fisubrl
loopne
jne
addr16
or
stos
dec
pop
out
rcrb
sti
mov
or
sbb
jb
iret
cmp
imul
mov
pusha
pop
mov
int
leave
sub
loop
icebp
or
jle
push
mov
mov
xchg
ret
stos
out
cmp
addr16
int
pushf
mov
shl
ss
mov
gs
mov
pusha
cmp
gs
sub
inc
in
mov
pop
dec
dec
sbb
sub
push
mov
inc
mov
adc
fmulp
mov
ret
in
nop
lock
cmp
lret
cmp
fcoms
pop
loope
xorb
pop
sti
mov
enter
adc
pop
xorl
test
dec
jnp
pop
cmp
ffreep
leave
dec
sti
es
outsb
in
int3
push
pop
stc
lcall
sbb
les
shll
addr16
adc
outsl
pop
xor
jg
sti
and
ljmp
xchg
lahf
sbb
outsl
ja
xchg
xchg
mov
sub
push
cmpl
push
push
ret
hlt
enter
push
pop
cmp
push
jge
sbb
stc
es
rorb
aas
inc
ds
aaa
dec
test
test
inc
xor
pop
mov
lahf
dec
xchg
jg
popf
cli
adc
into
jp
rorb
ret
call
daa
xchg
jo
insb
xchg
xor
in
sub
call
icebp
xchg
pop
push
rcll
lcall
xor
push
mov
das
les
xlat
dec
lds
aas
sahf
lods
fmull
mov
mov
testl
push
cmpsl
mov
aam
fcomi
push
xor
adc
adc
add
sbb
sub
xchg
xchg
std
ja
popa
std
mov
mov
adc
mov
ret
scas
push
das
pop
sub
pop
xlat
mov
or
or
xor
icebp
ljmp
mov
cltd
jmp
ficomps
push
and
sahf
repz
inc
mov
push
loopne
aaa
daa
test
ret
aas
xor
mov
dec
jecxz
fidivrs
std
mov
ss
cmp
adc
imul
clc
mov
and
insl
and
add
xchg
mov
aaa
mov
xchg
lret
pop
aad
add
pusha
xor
or
mov
push
jmp
sbb
push
aam
or
xor
mov
cmp
mov
jecxz
push
mov
push
lds
test
inc
push
inc
ds
push
adc
dec
scas
test
dec
lods
in
and
mov
mov
out
shl
sub
fsubs
loope
mov
mov
in
push
lea
sarl
and
fdivrs
xchg
in
fistl
outsl
xchg
imul
pop
or
out
mov
cwtl
out
push
inc
inc
xchg
push
cli
ss
mov
xor
mov
bswap
jl
in
push
fisttpl
cmpb
sti
mov
ret
sub
adc
xchg
imul
and
inc
movsb
sbb
cmc
push
mov
cwtl
fldl
add
jg
xchg
js
pop
mov
daa
mov
push
mov
pop
xor
sahf
test
bound
xchg
sub
imul
bound
cmp
mov
into
insb
out
test
data16
call
lods
iret
hlt
mov
stos
paddq
gs
push
mov
sbb
inc
pusha
adc
es
inc
jp
sbbl
daa
filds
inc
shll
add
mov
bound
repnz
mov
pop
dec
xor
popl
dec
jb
or
pop
nop
jmp
cmpl
lods
imul
jmp
insl
cld
mov
jb
aas
inc
pop
inc
addl
sub
repz
mov
adc
int
leave
cli
and
pop
shlb
sahf
cld
cmpsl
enter
or
sub
call
cmp
xor
add
sbb
jmp
push
lods
add
jnp
cmc
arpl
int
push
mov
mov
bound
mov
and
jl
aas
fstl
shl
sbb
sub
lods
fbstp
outsb
sbbl
cltd
dec
inc
mov
pop
xor
or
cmp
jle
lret
xchg
sti
scas
mov
mov
jnp
mov
xor
outsb
cmp
mov
out
or
dec
adc
adc
cmpsb
add
nop
mov
arpl
or
pop
lods
sub
mov
xchg
mov
daa
enter
mov
push
out
fcmovbe
movsb
scas
repz
sub
mov
arpl
jae
jne
mov
sti
imul
jb
pop
lahf
movsb
lock
mov
jnp
inc
cmp
fs
mov
lea
jns
inc
cwtl
aas
int
lods
inc
out
in
xchg
push
mov
aas
mov
test
push
cmp
mov
setge
jbe
push
push
dec
adc
lods
cmp
xchg
dec
pop
mov
xor
push
or
xchg
popf
mov
ljmp
and
test
or
pop
and
jns
data16
mov
scas
std
inc
cmp
scas
jmp
pop
test
sar
daa
popf
enter
fmuls
test
xchg
test
dec
or
xchg
fstl
aam
pop
or
push
push
xchg
addb
xchg
shll
sub
movsb
ret
int3
aad
xchg
or
inc
or
lret
mov
imul
cld
add
xchg
cld
ret
mov
mov
or
in
mov
mov
stc
lock
enter
and
call
mov
lods
xchg
sub
imul
mov
les
mov
btc
cmp
pop
shlb
add
enter
pop
push
std
stos
cmp
dec
clc
mov
adc
rorb
daa
push
fsubrp
out
test
or
sbb
push
cmp
sarb
cmp
mov
lea
fsubs
or
adc
arpl
add
lea
xchg
negb
js
adcl
scas
test
cmpsl
ss
in
inc
daa
aam
sti
and
xchg
push
lahf
call
imul
and
das
jp
js
sbb
mov
push
pop
faddp
mov
mov
mov
add
sbb
mov
aas
dec
add
push
sarl
inc
lods
repnz
or
dec
rcl
mov
dec
mov
test
xchg
test
jb
sarb
ja
cmp
push
cmpsl
mov
inc
loop
pop
pop
movsb
jae
adc
movsl
imul
adc
insl
sbb
cs
in
mov
jne
jb
pop
dec
pop
pop
mul
ficomps
adc
cmpsb
inc
add
decl
iret
movsl
insb
imul
or
iret
pop
sbb
jg
sar
pop
jge
rcrb
out
adc
inc
xchg
mov
add
push
fldt
mov
clc
stos
add
cld
xor
pop
inc
fbld
push
aad
stc
ffreep
mov
lods
or
rcll
mov
sbb
aas
cmc
lock
jl
aam
dec
int
jle
adcb
mov
push
cmp
lods
inc
xchg
fildll
push
imul
mov
out
sub
aas
in
push
and
pop
sbb
repz
xor
adc
cmp
xor
sbb
ja
mov
in
dec
bound
add
insl
or
nop
pop
jge
xlat
div
stc
call
xor
cld
mov
push
inc
lock
arpl
sti
add
push
mov
sbb
ret
mov
lods
xchg
or
and
adc
addl
cmp
pop
out
push
xchg
bound
aas
cmp
jo
mov
mov
enter
stc
xor
clc
mov
mov
outsl
mov
mov
int3
das
nop
push
subl
push
loopne
shrb
mov
sub
ds
sub
mov
add
push
inc
mov
xchg
jp
xchg
push
loop
adcl
nop
ljmp
xor
mov
leave
hlt
loop
test
mov
sti
sub
mov
insb
in
repnz
adc
pop
movsb
repz
ljmp
mov
iret
arpl
mov
lods
fdivrs
vmovq
loop
push
mov
push
pop
ds
mov
pushf
in
sub
jne
xchg
inc
das
out
jg
and
inc
test
or
pop
movsl
cli
dec
xor
mov
inc
adc
cmp
mov
je
lods
sbb
push
int
scas
addb
lods
into
mov
aaa
sbb
xor
jp
pop
bound
call
xchg
sbb
ljmp
lock
jg
jge,pt
rol
cmc
ret
test
mov
pop
pop
scas
push
push
push
xor
testb
mov
cmp
xchg
xor
dec
in
insb
popa
xchg
sbb
loopne
insb
pusha
push
cs
push
movsl
adc
xchg
dec
in
push
aam
mov
push
in
outsb
mov
or
cmc
xchg
ds
add
cmp
in
roll
mov
mov
or
and
xor
mov
mov
dec
hlt
daa
dec
hlt
pop
xchg
pop
push
sbb
cltd
shr
cmpsl
popf
shl
call
out
lods
nop
xor
dec
ja
adc
mov
xchg
or
ss
call
mov
mov
das
mov
mov
arpl
fcoml
hlt
je
sub
dec
dec
xchg
or
hlt
cmp
mov
and
inc
scas
or
jle
push
mov
sti
mov
push
repnz
mov
inc
fimuls
test
push
xchg
mov
xor
pop
and
int
outsl
cmp
aam
in
add
inc
jae
mov
xor
loopne
std
and
aam
bound
daa
into
lfs
push
roll
mov
cmc
and
add
cwtl
push
ds
arpl
jecxz,pn
xor
fwait
cli
mov
bound
mov
adc
adc
mull
add
aaa
sbb
outsb
xor
pop
mov
and
and
es
and
stos
cmpsb
mov
and
pop
pop
hlt
push
lea
jo
cltd
push
or
inc
mov
cld
pop
xor
js
lock
shll
ss
xrelease
add
mov
sbb
imulb
pop
popa
xor
push
mov
ja
in
lret
popa
sti
mov
out
sbb
testl
call
mov
adc
inc
or
rolb
pop
mov
mov
ret
push
jno
in
gs
and
bound
push
dec
mov
das
icebp
lcall
lahf
inc
push
xor
pop
mov
xor
aaa
in
lods
loope
cltd
cmpl
mov
push
inc
push
cmc
push
mov
in
ret
mov
testl
popa
sbb
addr16
subl
push
sbb
subl
sbb
jnp
out
es
and
cli
inc
add
movsl
inc
push
icebp
cmp
xor
push
ret
push
xchg
or
decb
ret
push
push
rcr
dec
mov
jge
push
cld
mov
pop
out
subl
inc
ret
xchg
jnp
jne
js
dec
xchg
sbb
mov
pop
push
adc
rcll
add
mov
jmp
lods
pop
and
loopne
xorb
cmc
jle
push
sbb
imul
xor
sbb
jg
jo
xor
ret
cmp
mov
popf
divl
mov
je
inc
fbld
fwait
mov
rcll
jns
scas
int
xchg
mov
enter
scas
ja
adc
movsl
pusha
jg
xor
xor
mov
add
nop
push
fdivrl
imull
pushf
lret
mov
std
and
pop
fbstp
dec
mov
stos
push
jb
in
xchg
xor
adc
std
negl
pop
repnz
cmc
xchg
pop
push
push
sub
sub
dec
daa
fs
adc
loop
xlat
lods
mov
pop
dec
mov
sub
xorb
out
icebp
jbe
jp
ljmp
xchg
xor
sar
xchg
jns
dec
mov
push
mov
imul
out
mov
mov
xchg
inc
jno
out
jmp
lret
das
fcomps
dec
pop
mov
push
xor
ljmp
stc
pusha
jle
and
cmpsl
test
bound
test
shlb
push
jb
pop
fiadds
jnp
jne
xchg
jo
jmp
xchg
mov
push
int3
mov
stos
pop
pusha
test
adc
push
mov
ret
pushf
jecxz
popf
xchg
dec
push
lods
enter
xor
stos
mov
inc
jg
fstl
xchg
jle
dec
fcomps
jns
mov
inc
int
jmp
xor
push
and
rorb
push
mov
or
shll
sub
pushf
push
movsl
stc
mov
mov
fs
sbb
hlt
dec
call
or
lret
orb
test
sbb
rorl
aas
jmp
pop
aaa
popf
test
push
cwtl
cs
add
push
xchg
dec
mov
daa
mov
arpl
aas
popf
sbb
cmp
xor
ds
ret
and
inc
aad
mov
in
lahf
jo
rorb
mov
pop
in
sbb
jns
aam
xchg
sub
dec
or
aas
hlt
push
sbb
push
stos
adc
adc
js
xchg
jnp
xor
sbb
add
sarb
in
pop
pop
cmpsl
inc
addr16
out
lods
sub
decb
lahf
dec
mov
or
xor
xchg
lea
fstpt
and
movl
pusha
nop
or
sub
xchg
push
mov
sub
mov
sbb
push
push
pop
adc
test
push
imul
popf
xchg
faddp
out
add
in
sbb
pop
or
enter
fwait
scas
pop
cs
mov
sbbb
cmpsb
daa
mov
gs
dec
in
jmp
mov
iret
mov
insb
shr
add
out
outsl
adc
aas
push
out
pop
sub
daa
sbb
jecxz
mov
lahf
mov
outsb
shlb
or
xchg
jnp
or
mov
loopne
imul
clc
lcall
movd
or
sbb
inc
mov
xchg
lock
loopne
ja
out
sti
push
enter
in
aad
orb
xor
add
inc
pushf
jecxz
pop
add
push
cmpsb
adc
orl
ss
and
addr16
aam
fnsave
js
ja
adc
and
rorb
popa
cmp
lret
lahf
ds
ret
jg
dec
cli
les
jo
gs
popa
call
out
lcall
mov
int
push
lods
add
mov
rcll
aad
mov
sub
xor
ffreep
mov
sbb
test
insb
dec
mov
jne
rol
mov
fistpll
js
scas
or
loope
stos
inc
and
jo
ffree
jb
dec
and
mov
inc
mov
stos
jmp
sub
sbb
imul
aam
xchg
mov
sbb
test
scas
fstps
shl
dec
sub
mov
jbe
dec
hlt
mov
fsubs
loope
sub
sub
and
push
xchg
push
out
cmp
mov
in
aaa
inc
and
xchg
sub
cld
fdivp
xchg
out
push
imul
or
mov
cs
pop
addr16
movsb
or
fsubrs
mov
pop
or
jae
push
push
addr16
adc
pop
mov
push
pop
mov
filds
xor
inc
cmp
movsl
ja
je
filds
in
add
loopne
lret
jbe
filds
or
or
cs
out
repnz
adc
mov
lea
enter
add
movsb
lds
out
cld
out
adc
mov
fstps
xchg
movsl
jno
mov
sahf
and
popf
je
mov
jno
pop
add
pop
mov
pop
int3
les
data16
inc
out
cmpsb
push
xor
sub
pop
int
xor
cmpsl
jl
das
ficompl
pushf
repz
mov
mov
pop
sub
mov
fldcw
fwait
imul
lock
pop
push
int3
call
xlat
cmp
add
adc
dec
sub
jmp
inc
and
out
arpl
lods
decl
mov
psrld
and
mov
xor
out
dec
nop
push
or
dec
jnp
mov
inc
or
not
jl
xlat
ret
pop
sahf
out
pop
jg
sub
xchg
test
fs
add
push
arpl
dec
adc
arpl
cmp
addr16
lods
lods
jnp
push
sub
xchg
and
adc
dec
jbe
mov
adc
adc
sbb
mov
lock
cwtl
cmpl
ja
les
dec
mov
mov
jnp
push
or
es
lahf
mov
popf
out
xor
and
js
jno
arpl
jbe
fcmovnb
push
xchg
cmp
mov
cmp
ss
test
pop
xchg
xchg
xor
dec
icebp
pop
call
cmc
xor
xor
adc
pop
stos
ja
xchg
fs
into
aad
ficompl
test
stos
inc
xchg
test
popf
mov
jno
mov
cmp
push
scas
mov
mov
fidivrl
lods
aas
sub
push
andl
lea
aad
inc
aaa
xchg
mov
aas
jg
cmp
xchg
lds
xchg
gs
pusha
lock
out
testb
jns
and
cmp
xor
fs
arpl
xchg
mov
jne
ds
cmp
pop
adc
push
mov
cmpsb
xor
sbb
sub
out
jnp
fsubp
mov
mov
jl
cmp
out
pop
pushf
or
call
aad
movsb
call
scas
cmp
int
lcall
adc
outsl
mov
sub
in
aam
or
sbb
jno
dec
shlb
sti
adcl
cmp
sub
or
xchg
into
mov
cltd
idivl
lcall
pop
outsb
paddd
jmp
aad
xchg
mov
lock
dec
lock
into
std
scas
push
pop
std
sub
xchg
adc
out
adc
cld
test
dec
lods
into
loop
cltd
testb
jle
adc
fimull
adc
mov
aaa
and
jle
cmp
shll
adc
dec
fcoms
fstpl
imul
mov
mov
mov
popf
jle
icebp
push
fadds
inc
push
jnp
push
cmp
push
lock
loopne
pop
test
out
or
sub
addr16
or
outsl
fwait
sahf
or
dec
jae
idiv
sbb
mov
inc
test
push
mov
cmpsb
rol
jle
jbe
lock
mov
xor
push
push
mov
ds
jmp
test
mov
mov
or
aam
jns
cld
repz
xor
nop
movsb
test
ret
mov
jns
inc
sub
or
lret
jbe
sub
lret
mov
pop
and
iret
pop
sarl
mov
idivb
js
sbb
mov
adc
mov
ror
or
cmp
xor
ror
mov
daa
out
fisubl
test
fcoml
sub
inc
lret
fisttpll
and
xor
or
insl
jmp
jge
xor
cmp
jns
loop
fsts
or
push
dec
dec
es
cmpsl
mov
js
dec
sbbb
xor
insb
pop
xchg
fsubrp
or
fistps
sbb
into
addb
nop
jb
insl
lock
cmp
fwait
lock
jno
dec
call
insb
xchg
repz
fwait
lods
arpl
or
pop
mov
push
lds
xchg
inc
icebp
push
mov
or
ljmp
xor
dec
mov
mov
sub
xlat
fstl
jbe
sub
sub
add
lock
sbb
addr16
lcall
fnstcw
inc
add
mov
push
movsb
inc
es
and
xorb
xchg
nopl
or
mov
inc
mov
mov
aaa
mov
dec
ret
adc
mov
addr16
adc
xor
lods
fadds
dec
xchg
cmp
daa
dec
sbb
xchg
stc
arpl
sarl
dec
cmp
push
adc
cmp
push
jp
icebp
in
lret
pop
dec
loop
ror
jne
in
cmp
lods
xchg
shll
add
push
les
push
jp
lds
inc
mov
jno
push
repz
push
sbb
adc
push
shl
jnp
or
push
orb
ss
in
mov
jne
inc
mov
js
push
sub
test
pop
jae
test
xchg
stos
xor
in
xchg
xor
rclb
cmp
jecxz
scas
ja
and
daa
in
repnz
dec
mov
fldenv
lock
jb
jmp
add
std
outsl
sbb
mov
cltd
sbb
in
xor
fucomp
xor
inc
xor
pushf
mov
in
mov
jp
roll
dec
repz
in
dec
mov
test
xchg
test
sbb
mov
pop
push
das
loop
data16
outsb
shlb
mov
and
inc
xchg
mov
dec
mov
mov
sub
pop
xchg
insl
jne
pop
aas
roll
popf
dec
lahf
xchg
xchg
add
mov
sbb
sub
inc
outsb
das
inc
and
clc
sbb
xchg
lods
loopne
les
and
sbb
popf
and
jae
rcr
ret
mov
test
xor
rorb
fsubl
fldcw
mov
stos
orl
mov
mov
mov
fs
mov
adc
pusha
sub
lds
in
test
ret
imul
test
cli
sub
shlb
loopne
lahf
int3
movsb
mov
mov
jg
sbb
ja
jnp
icebp
mov
dec
push
and
subl
shl
ret
in
scas
sub
fwait
push
lahf
pop
inc
vpsubusw
fs
mov
mov
fcomps
push
cmp
push
into
jmp
stos
or
stos
jecxz
out
dec
lea
jle
mov
sbb
push
movsb
and
xchg
out
lahf
cmpsb
or
fsts
pusha
lret
imul
dec
movsb
rorl
test
add
mov
sub
call
mov
dec
xchg
aaa
cmp
inc
add
push
sbb
push
in
jns
sub
js
xor
lock
sub
stos
sarb
movl
xor
ret
in
in
pop
pop
pop
cwtl
xorb
outsb
in
ret
fldenv
loope
lock
push
xchg
inc
iret
mov
cmp
insl
adc
fwait
cmp
repnz
imul
roll
leave
push
inc
push
cmpsb
in
xchg
cwtl
aas
pop
enter
call
push
call
orb
movsb
rclb
fiadds
pusha
add
mov
dec
xor
xor
out
jns
push
pop
orb
imul
js
sub
sub
imul
push
push
push
loop
aaa
push
fidivrl
movsl
out
jle
xor
mov
jns
repnz
pop
das
or
fdivr
movsl
fimull
scas
and
gs
fcmovbe
shll
pop
xchg
xor
mov
push
hlt
test
push
loopne
js
cs
lods
sub
pop
test
adc
int
insl
in
mov
cmc
inc
cld
add
cmp
cld
and
aam
inc
and
shlb
fwait
adc
sbb
and
incl
repnz
and
ret
mov
test
cmp
shrb
adc
xor
xor
add
mov
data16
int
lret
pop
pop
xchg
cs
add
xor
out
lea
lods
and
xor
imull
pop
cmp
mov
mov
aad
xchg
ret
scas
pushfw
pop
xchg
adc
or
icebp
inc
ss
add
fnsave
movsb
stos
test
int
mov
adc
xor
clc
cmp
dec
sub
pop
dec
aas
add
pop
dec
aas
loopne
and
mov
cmp
mov
sti
dec
call
or
jmp
push
rcr
pushf
fstpt
dec
push
adc
gs
cmc
mov
mov
daa
push
mov
push
shrl
addr16
loop
icebp
adc
andb
iret
aam
and
insb
mov
adc
mov
movsb
dec
dec
stos
fstpt
movsb
dec
mov
mov
jp
or
push
mov
fwait
cmp
enter
das
js
loope
test
mov
pop
or
push
sahf
mov
aas
jb
lcall
es
xor
je
pop
aam
aas
aad
fisttpll
pop
bound
or
das
enter
pop
cli
fimull
test
dec
pop
xor
cmc
jle
ret
shll
daa
push
pop
fmull
mov
xchg
or
mov
int3
mov
mov
pop
inc
out
mov
push
sub
out
mov
inc
movsl
das
push
cmp
push
pop
clc
xchg
out
and
test
inc
ret
out
test
test
pop
jnp
bound
sbb
xlat
stos
push
add
and
in
jg
frstor
fwait
adc
pop
jg
addb
xor
fstpt
repz
lcall
lods
push
lahf
sub
mov
int
push
movsl
fldln2
sti
jg
lahf
xlat
jg
inc
dec
test
fisttpll
mov
ret
sbb
shl
and
mov
enter
out
inc
push
and
or
stos
lcall
test
adc
jmp
sub
je
in
push
add
out
mov
dec
outsb
pop
loopne
stos
cltd
call
adc
inc
nop
insb
inc
repz
and
mov
pop
sub
sahf
xchg
and
sahf
sub
sbb
addr16
nop
push
jae
or
xor
daa
mov
call
aad
pop
mov
fldln2
jecxz
stos
mov
sbb
out
in
cmp
repnz
adc
syscall
dec
ret
out
in
sub
jns
das
stos
jmp
aad
pop
out
popf
outsl
xchg
icebp
sbb
ljmp
je
xor
xchg
bnd
or
dec
jnp
mov
aaa
iret
mov
pop
ret
leave
iret
mov
dec
addl
pop
mov
sbb
ret
testb
pop
xchg
push
fwait
and
mov
aam
lea
pusha
ja
lods
mov
xor
cmp
adc
mov
sub
mov
lods
dec
cwtl
rcl
pop
jno
mov
sub
jmp
inc
mov
sbbl
push
popa
pop
shrl
or
int
sbb
inc
mulb
xchg
stos
sti
push
adc
or
aad
sub
dec
popf
push
daa
rclb
xchg
mov
rcl
test
push
xchg
fisttps
dec
mov
xlat
ret
imul
push
aaa
fwait
mov
jecxz
jmp
stos
pop
pop
lock
out
in
sahf
ret
test
mov
adc
xchg
jmp
inc
or
jl
push
push
aam
add
sub
pop
lret
add
das
cmpb
mov
cmp
sub
pusha
cmp
aaa
rolb
cmp
shll
leave
adc
xor
jnp
ficomps
out
ud1
test
outsl
lods
and
jnp
push
push
ss
xor
or
xlat
lods
dec
orb
filds
hlt
mov
js
lahf
in
adc
les
xchg
sub
in
push
jmp
bound
cli
lret
pusha
scas
lret
mov
addl
icebp
xchg
xor
int
push
push
mov
fisubrl
shrb
pop
std
ffreep
sub
add
push
lret
insl
pop
jnp
js
adc
mov
sbb
lock
jg
jp
int3
call
in
or
mov
inc
loop
ret
sbb
movsb
cmp
dec
jbe
add
ret
push
jl
nop
cltd
push
and
loopne
repz
xorl
jno
testb
push
adc
xor
xchg
insb
jno
pop
dec
leave
int
test
dec
roll
push
push
pop
jae
shlb
lcall
lret
pop
xchg
fldl
add
fiaddl
dec
stos
mov
lahf
cltd
mov
jns
test
push
or
outsb
orl
jecxz
mov
or
sahf
addr16
mov
inc
push
aad
iret
mov
jne
add
dec
jle
popf
iret
inc
xor
aad
ds
cs
jbe
jo
sub
in
mov
imul
mov
add
mov
sub
std
loop
xchg
adc
jnp
fsubl
fwait
cmp
mov
mov
mov
mov
outsl
sti
repnz
add
xchg
lcall
scas
fwait
inc
inc
lcall
dec
stc
push
aaa
mov
test
xchg
jl
sbb
ret
leave
mov
out
cltd
rcrl
shlb
pushf
jae
imul
repz
push
cmc
aad
aas
jo
filds
sub
sbb
inc
jo
sbb
pop
dec
hlt
sbbb
jmp
sar
ja
or
sbb
stc
mov
rclb
inc
add
cs
out
push
dec
push
add
rolb
adc
inc
movsl
lods
mov
in
cmp
cmp
stos
dec
dec
jnp
jle
xchg
pushf
push
aaa
enter
push
sbb
and
addl
lds
cmp
xchg
add
dec
push
jne
push
ljmp
and
pop
xor
ret
cmp
imull
jmp
sbb
aad
shll
hlt
clc
idiv
test
jbe
lahf
xchg
sbb
lret
dec
xor
in
clc
addr16
adc
cmp
mov
mov
stos
int
cmpsb
sbb
jno
mul
loope
sub
stc
pop
push
dec
pusha
out
jmp
cltd
fmuls
loope
sar
pop
scas
cmp
lea
mov
movsb
lea
in
inc
adc
test
sbb
jno
or
ljmp
rorl
xchg
adc
daa
cmpsb
sub
push
fcomps
push
pop
lret
scas
mov
sub
test
das
outsl
inc
std
xor
and
jg
movsb
add
pop
in
fsubl
insb
pusha
push
scas
pop
fwait
mov
lods
xorb
mov
fdivr
push
ret
push
fidivrs
jmp
push
test
popa
pop
mov
fists
pop
pop
mov
and
mov
rol
sub
mov
insl
and
or
dec
or
callw
insb
jns
push
cwtl
adc
mov
xchg
fsubs
mov
xor
sbb
fidivl
outsb
mov
mov
mov
clc
add
fcomps
pusha
cmp
jb
arpl
inc
xchg
les
dec
loope
orb
incb
xlat
in
sbb
popa
dec
cli
sahf
lahf
stos
mov
dec
adc
cwtl
sbb
or
test
and
andb
adc
fimuls
imul
je
aas
fnstenv
cmp
pop
int3
cmp
cmp
xchg
mov
xor
fimull
jno
loop
pop
pop
add
xor
idivl
push
dec
js
push
ss
push
pop
imul
xor
push
movsb
jmp
cld
pop
xor
ds
enter
arpl
loopne
sbb
and
int
imul
popa
cmpsl
test
out
sbb
pop
loopne
fnstsw
cmp
cli
loopne
push
andb
ja
mov
lea
movsb
cli
rcll
mov
sbb
jbe
push
pushf
jp
mov
lahf
inc
dec
dec
xchg
popf
fs
pushf
pop
and
inc
sub
and
inc
bound
call
sub
mov
xor
dec
fs
xchg
out
jg
pop
packsswb
mov
jg
dec
mov
add
ljmp
scas
jmp
and
lods
in
das
int3
mov
mov
pop
cmc
iret
outsl
dec
mov
cmpsl
xlat
and
jns
xor
fnstsw
xchg
stos
xchg
in
out
push
aaa
ret
mov
cmp
dec
push
sbb
mov
and
or
addr16
scas
pop
lods
sub
rolb
test
cld
movb
hlt
aam
rol
sbb
add
std
cmp
or
adc
aaa
rolb
fcomps
call
mov
push
or
filds
pushf
push
shlb
shll
rcrb
mov
adc
jne
cmpsl
and
jno
arpl
and
cs
aad
pop
dec
testl
mov
enter
lcall
test
xchg
fstp
lcall
filds
dec
js
push
push
push
cmp
and
mov
pop
adc
mov
push
fimull
pop
jl
mov
jae
clc
shlb
inc
cs
invd
push
jle
fcomip
les
add
ret
mov
sub
aaa
mov
sub
jo
inc
andl
decb
jb
mov
mov
popa
jns
or
add
outsl
cltd
imul
gs
shr
adc
pop
outsl
add
cmpsb
ljmp
mov
sbb
xchg
test
scas
mov
add
insl
pop
es
popl
jl
jnp
inc
xchg
add
and
and
sub
cwtl
and
fdivl
sarl
ljmp
push
lcall
cld
xchg
aaa
repz
clc
shll
outsl
cmp
icebp
or
fstpt
add
subl
pop
mov
mov
cld
pushl
les
push
push
daa
icebp
lret
scas
test
pop
addr16
mov
xchg
mov
dec
scas
lds
insb
mov
imul
div
push
sub
and
sbb
push
dec
clc
arpl
xlat
pop
fcoms
or
or
push
mov
mov
in
and
and
out
out
mov
pop
sarl
mov
insl
jne
adc
add
into
popa
push
hlt
pop
jmp
outsl
adc
and
lods
ret
add
int3
add
addr16
imul
out
cld
test
shll
pop
push
mov
cmp
jo,pt
insb
xchg
and
incb
ror
inc
sbb
pop
mov
or
inc
push
bound
xchg
mov
sub
dec
add
popf
ljmp
dec
xor
or
pop
jno
push
arpl
loope
cltd
cmpsl
pop
in
dec
lds
jle
in
jo
jbe
add
lds
rol
outsl
mov
xor
jns
dec
sub
popa
adc
addr16
cli
jl
push
pop
push
es
jge
in
das
insl
inc
mov
xor
pop
cmp
cmp
rcrl
lds
addr16
jno
sub
xchg
pop
inc
js
xor
test
add
pusha
cmp
mov
aas
imul
sahf
movsl
repnz
pop
movsl
cmp
mov
adc
push
add
adc
loop
out
sbb
xchg
mov
or
ret
xchg
aaa
adcl
mov
xchg
inc
ss
jecxz
xor
add
leave
cmc
push
xlat
pusha
idivl
fisttpl
into
ret
inc
push
loope
aaa
mov
nop
or
sarl
fidivs
aad
inc
xchg
mov
sub
adc
mov
jbe
xchg
ffreep
dec
adc
push
inc
ret
clc
or
shll
mov
pop
cs
in
jnp
mov
adc
pop
aas
insb
dec
jbe
ret
cmp
out
outsb
mov
lods
aas
jge
mov
fstpl
pop
pusha
in
add
add
js
add
movsb
or
cmp
sbb
and
mov
cmp
subl
mov
sbb
xor
push
push
testb
or
iret
test
add
cmc
dec
sub
lcall
les
ljmp
mov
jb
cltd
fisubs
mov
popf
jl
dec
ret
test
pop
ret
out
jne
test
outsl
ret
icebp
stos
ret
push
push
jle,pt
xchg
sti
pop
popa
cmc
push
out
mov
fdivrs
inc
mov
andb
pop
cmp
xor
mov
cmpsb
aaa
sub
dec
dec
add
xlat
or
jae
mov
dec
jae
jae
push
ret
lock
xchg
ds
movsb
rep
pushf
pushl
and
mov
mov
pop
sbb
xchg
test
jge
test
enter
and
js
lods
pushf
call
les
pop
lret
lret
pop
fsubr
sub
or
out
fldt
outsl
mov
mov
xchg
mov
jmp
outsl
es
pop
pop
push
cwtl
pushf
sub
stos
arpl
movsl
mov
idivb
into
sti
inc
mov
mov
dec
cmp
xchg
jb
adc
sub
jge
mov
inc
sbb
popa
aad
xor
ss
icebp
lcall
inc
hlt
dec
dec
aam
cmp
hlt
and
jl
lcall
push
mov
sbb
inc
cli
push
test
out
and
movsb
clc
sub
pushf
jge
mov
ss
cwtl
cltd
jmp
xchg
push
je
pop
shr
imul
cli
in
sub
aas
arpl
lret
cmp
xor
jnp
sbb
mov
sbb
stos
es
xchg
xchg
fidivs
cmp
mov
iret
inc
pop
gs
data16
scas
mov
xor
loopne
xchg
pop
cmpsl
test
add
repnz
dec
hlt
push
dec
xlat
push
sti
mov
or
fsubl
gs
mov
xchg
addr16
fdivrs
repz
lea
mov
in
jnp
push
jno
sub
push
inc
sub
mov
scas
mov
aaa
repnz
arpl
xchg
dec
and
push
fcmovbe
stos
in
data16
stos
dec
subl
mov
cmpsb
mov
pop
jne
mov
jno
lods
fwait
push
push
arpl
fistpll
and
sarb
imul
test
jmp
int
repnz
bound
js
cwtl
cmp
push
and
ret
sub
pop
sbb
stc
inc
xchg
sbb
dec
mov
subb
mov
lret
movsl
aaa
mov
mov
jmp
pop
sub
rolb
and
mov
cmp
clc
dec
sbb
xchg
xchg
push
xor
popl
add
adc
out
xlat
test
jne
and
cwtl
pop
mov
cltd
dec
lods
incl
mov
pop
std
adc
lock
stos
das
fcmove
lods
xchg
out
mov
xchg
inc
movsb
mov
cmp
cld
test
mov
pop
shlb
lret
stos
fsubrl
loope
int3
add
mov
in
pop
sbb
sub
dec
pushf
dec
ficomps
imul
fs
sub
je
lds
pop
dec
mov
sbb
xchg
xchg
je
inc
in
xchg
sub
xor
add
and
jnp
push
cmp
jge
dec
arpl
loope
xor
cmpb
xor
mov
dec
sbb
or
lret
test
mov
out
fsubl
sarb
inc
repnz
push
adc
fidivl
out
int3
push
imul
nop
push
loop
push
mov
rclb
mov
and
retw
cmp
fwait
rcr
test
or
cmc
lret
push
mov
aaa
push
stos
in
imul
loope
inc
pusha
cld
add
mov
and
adc
xchg
in
or
ss
jbe
jae
ljmp
xlat
mov
inc
sub
mov
jne
jnp
cltd
je
mov
adc
or
push
mov
mov
mov
mov
push
adc
pusha
sbb
jnp
stos
adc
mov
dec
or
test
or
push
sbb
subw
into
test
pop
xchg
lret
inc
repnz
stos
popa
icebp
mull
sbb
insb
fisubrl
mov
ljmp
aas
push
dec
sahf
je
addr16
mov
push
xlat
cmpsb
jne
or
lret
and
inc
int
mov
mov
mov
and
cmp
jno
and
inc
adc
cmp
cmp
sbb
outsl
call
xchg
add
ret
push
inc
or
inc
add
sub
add
lods
jmp
call
daa
push
and
mov
enter
loop
les
jnp
aam
inc
push
mov
movsb
fldenv
and
icebp
pop
cmpsb
adc
inc
arpl
inc
adcl
mov
sti
daa
add
dec
xchg
shlb
sub
mov
bound
adc
dec
aam
das
and
aaa
push
mov
loope
jb
int
cld
xor
lret
mov
add
mov
stc
roll
push
insb
push
in
and
test
xor
fiaddl
jmp
repz
push
jge
dec
sub
cld
cmp
jp
jecxz
loope
cltd
shr
mov
cmp
push
inc
inc
outsl
jo
sbb
adc
lea
jge
aas
mov
pusha
dec
in
aaa
adc
mov
cmpsl
xchg
data16
mov
movsl
fwait
push
xchg
push
aad
iret
cmp
in
fs
sti
mov
fs
pop
sub
js
fcmovbe
or
repnz
inc
mov
pop
shl
mov
push
xor
adc
xor
xchg
mov
iret
shlb
hlt
xor
sub
or
mov
inc
pop
dec
dec
push
xor
and
fsubs
arpl
add
inc
mov
adc
or
adc
sub
lds
jp
insl
sub
cmp
inc
mul
outsl
pop
inc
icebp
push
push
je
fisttpl
outsb
xor
and
dec
ljmp
cmpsl
xchg
outsl
iretw
jne
cmp
movsl
or
stc
icebp
add
dec
shrl
mov
sbbb
aad
push
and
pop
fisubs
aad
je
lds
pop
inc
fisubl
xchg
inc
jp
mov
imul
push
and
sub
sbb
test
scas
xchg
push
shll
outsl
cld
xchg
cmp
outsl
lds
or
cli
sti
sub
push
insl
test
dec
xchg
adc
xchg
adc
lretw
push
sbb
xchg
dec
lea
fmull
aad
xchg
gs
jg
cmp
mov
je
mov
push
cmpsl
jno
imul
fabs
cwtl
push
nop
mov
sahf
or
test
outsl
mov
add
loop
subl
ss
xchg
sti
and
xchg
std
push
push
xchg
and
add
outsl
and
push
andl
lock
inc
scas
xor
inc
lret
mov
int
jg
vpackssdw
add
push
repnz
int3
mov
adcb
or
popa
in
popa
mov
xchg
loopne
shll
lahf
popa
out
push
mov
add
xchg
pop
mov
xlat
jg
push
cs
push
mov
xchg
hlt
cmp
popa
into
btc
das
and
push
repz
repz
xlat
js
mov
in
sub
sbb
addb
mov
jbe
mov
xchg
mov
into
gs
or
outsl
lret
mov
cmp
add
lods
and
push
call
loope
daa
pop
inc
stos
lahf
in
scas
mov
push
xor
xor
push
imul
jle
pop
subl
lahf
and
jmp
dec
pop
or
mov
push
mov
xor
mov
push
dec
negl
ljmp
cmp
sbb
mov
fdivrl
shrb
pop
icebp
mov
adc
iret
push
sub
fucom
xor
ljmp
lds
push
outsb
cmpsl
add
leave
add
xor
int
lret
sbb
cmpsl
dec
add
je
iret
xchg
jo
outsb
mov
and
cmp
and
push
fnsave
push
sti
xchg
jns
mov
ss
push
mov
outsb
mov
and
into
lea
cltd
xchg
mov
cmc
sub
push
cmp
aad
dec
push
jo
dec
xchg
movsl
add
shll
in
dec
ret
or
ss
mov
xchg
inc
scas
mov
sbb
mov
or
xor
push
dec
scas
lcall
les
cmp
or
xor
ret
dec
dec
mov
scas
mov
xchg
fisttpll
jns
pop
dec
out
jo
xor
mov
mov
or
cwtl
xchg
mov
in
rolb
fldcw
jecxz
ds
push
lret
lock
cld
push
jbe
xor
xchg
lods
jno
movsl
fstpt
dec
cmp
or
sbb
dec
ds
test
stos
pop
mull
add
ret
sub
in
jo
adc
loop
and
mov
cld
pop
jle
or
ftst
outsb
add
lds
or
icebp
mov
dec
mov
sbb
mov
aaa
into
push
push
dec
arpl
cmpsl
jne
inc
xchg
add
cli
xchg
insb
jne
repnz
pop
dec
nop
aaa
push
loop
mov
mov
mov
outsl
incl
and
sbb
in
mov
pusha
cmp
ljmp
stc
aaa
rolb
pop
adc
sbb
ret
jle
repnz
lods
dec
aad
xor
dec
aas
or
and
push
outsb
hlt
mov
mov
aam
and
dec
test
inc
push
push
btc
lock
pop
sbb
adc
aaa
inc
xor
dec
inc
and
dec
mov
dec
adc
ljmp
pop
sub
mov
cmpsl
jp
inc
add
pop
shlb
push
pusha
fldpi
sbb
lcall
loopne
out
nop
repnz
and
add
call
in
push
xchg
xor
movsb
call
mov
inc
lcall
mov
ja
fldl
loope
data16
jg
or
cld
lods
addr16
adc
push
fdivl
sub
inc
push
sub
sbb
ds
fwait
aad
mov
test
xor
hlt
sti
popf
mov
sahf
inc
shlb
pop
hlt
popf
lds
xor
scas
aad
fdiv
in
es
sbb
push
je
sub
ficomps
cwtl
mov
adc
movsb
insl
mov
xlat
arpl
insb
test
lds
and
xor
xchg
outsb
ss
jg
dec
mov
mov
mov
adc
jl
adc
jl
mov
cmp
xchg
fs
shrb
scas
xor
fildl
outsb
push
cwtl
mov
mov
or
cli
dec
sub
push
ds
rorb
jl
scas
data16
jg
pop
or
mov
xor
xor
add
and
repnz
mov
pop
insl
aad
imull
cmc
sub
notb
imul
int
cmp
lahf
shl
arpl
mov
stos
lods
rolb
jno
xchg
lods
dec
inc
test
aas
daa
xchg
pop
xchg
pop
arpl
adc
sub
loopne
cmp
mov
les
pop
mov
or
pop
mov
mov
mov
adc
loope
sbb
and
cmp
enter
les
sbbb
and
add
adc
push
push
mov
mov
dec
ja
icebp
xor
test
call
mov
notl
inc
rcrb
pop
daa
in
xchg
add
out
out
mov
stc
mov
mov
and
mov
shl
or
loop
jmp
mov
mov
mov
aaa
or
pop
shlb
dec
cmc
or
jb
adc
insb
shlb
jmp
shrb
xor
mov
cld
push
loope
mov
cmp
pop
add
mov
add
or
push
pop
test
adc
aas
and
loop
xlat
jno
cmp
xchg
rolb
arpl
divb
loopne
ret
adc
jns
mov
inc
adc
add
scas
insb
push
adc
pop
iret
fwait
inc
pushf
jne
fidivrs
jmp
sbb
add
lahf
and
mov
sub
cmp
jg
push
add
push
xor
mov
cmpsl
imul
ret
ljmp
flds
in
lcall
cmp
add
aas
shll
addb
scas
push
cmp
jl
dec
jb
popf
es
xchg
cwtl
push
push
push
mov
jne
adc
nop
push
test
jl
dec
cld
pop
xchg
mov
or
ljmp
ljmp
fcmovnb
xchg
add
js
jb
outsl
cli
adc
xor
push
test
mov
and
lock
sub
push
or
adc
dec
cmpsb
pushf
pop
push
add
or
in
lods
and
push
or
xor
mov
fiaddl
and
adc
sbb
sbb
ljmp
adc
repz
push
lcall
mov
dec
mov
fists
jno
iret
test
addr16
xor
clc
mov
xchg
mov
or
leave
dec
push
fisubs
pop
iret
in
out
pop
pusha
cmp
inc
and
adc
enter
inc
push
scas
cmp
js
cs
xchg
ljmp
pop
sub
mov
cli
adc
add
les
inc
pusha
mov
and
cwtl
cmpsb
pop
mov
mov
loopne
bound
add
jo
repz
add
pushf
dec
jge
or
stc
mov
pop
rcr
jae
jb
sti
cltd
cld
lds
pop
ficomps
cmp
fwait
xchg
mov
mov
xor
sub
pop
enter
mov
lea
jp
rol
add
mov
sti
inc
jns
jg
jp
dec
xchg
cmpsb
and
fmuls
clc
jl
fwait
xrelease
cltd
outsb
ror
inc
pop
je
cwtl
in
ficoms
fidivl
ljmp
push
lds
push
call
mull
sbb
lea
arpl
movsb
push
loope
mov
xlat
sub
push
push
jecxz
inc
inc
xchg
lret
pop
dec
daa
insb
ljmp
clc
and
mov
in
rcll
ja
xor
inc
fwait
mov
int
mov
dec
lahf
out
mov
shll
out
mov
jb
dec
xchg
leave
xor
and
xchg
xchg
xchg
nop
sub
mov
outsb
inc
add
es
jo
mov
and
mov
push
lret
test
leave
repz
adc
cld
fcmovnu
sub
fildl
mov
ljmp
add
jae
sub
je
xor
mov
inc
cs
cwtl
jl
js
js
aad
outsl
jl
jmp
push
mov
ret
ret
xor
push
aam
mov
cmc
cmp
shl
sbb
and
jecxz
add
ljmp
cmp
std
enter
ja
jmp
inc
jae
cmp
mov
add
mov
xchg
aam
dec
and
jecxz
mov
xchg
add
adc
add
push
stos
inc
repnz
fiadds
inc
std
sbb
and
inc
dec
pushf
scas
cmp
inc
push
sti
mov
std
mov
nop
imul
and
pop
loopne
xchg
sahf
and
cli
cmp
cmpsl
cmp
mov
pop
mov
faddl
dec
hlt
and
pop
test
xchg
or
cmp
leave
outsl
mov
addb
inc
popf
push
in
nop
lods
repz
insl
lret
xor
test
mov
sti
icebp
sti
js
les
addr16
or
rol
fdivp
pusha
add
mov
or
ss
movsb
add
xchg
jae
aad
fwait
xor
fdivrs
es
pop
or
xchg
and
mov
sbb
xor
in
loopne
inc
dec
idivb
sbb
mov
and
movsb
aam
mov
push
dec
into
pop
test
popf
or
mov
adc
nop
dec
push
jle
and
xlat
mov
add
outsb
mov
outsb
push
lock
inc
mov
inc
into
inc
jmp
clc
or
jp
lea
sub
movsl
mov
js
dec
fbstp
dec
inc
sub
pop
lea
jae
or
sti
xor
pusha
sbb
ja
nop
add
jge
stc
lds
test
cmp
out
into
fs
mov
dec
imul
lcall
push
jb
or
bound
push
fsubr
xchg
std
std
mov
stos
cltd
add
jne
aas
in
and
xchg
adc
bound
jnp
cld
adc
pop
jbe
mov
decb
mov
rol
loop
iret
enter
jno
jae
cmc
cmp
fucomip
sbb
nop
dec
jnp
lods
test
and
adc
pop
lods
in
hlt
pushf
into
mov
and
fsincos
and
scas
sarb
mov
addr16
std
xor
jle
jb
out
imulb
pop
test
adc
pop
mov
push
imul
or
push
push
mov
cmp
xchg
add
test
dec
xor
popf
ss
dec
invd
jecxz
test
or
les
nop
mov
shlb
cmc
mov
push
cmpl
fistl
test
icebp
roll
pop
add
inc
adc
add
cwtl
mov
shl
pop
push
mov
aad
sub
stos
pop
dec
cmp
add
ror
repnz
or
jae
inc
cmp
sub
sub
frstor
aas
pop
mov
divl
mov
cmp
gs
iret
out
xor
xor
jge
adc
jecxz,pn
nop
clc
dec
inc
orb
mulb
sub
mov
out
fidivl
mov
pushf
mov
and
dec
stos
push
test
movl
nop
and
je
mov
stc
imul
ret
pusha
pop
jp
pop
cld
leave
jae
xchg
dec
jg
imul
loope
mov
sahf
ror
filds
testb
xchg
xor
jmp
fdivl
test
adc
pop
inc
lret
push
ret
imul
insb
push
xor
rcrl
mov
adc
mov
mov
sbb
adc
cmp
jp
dec
sbb
and
or
dec
push
clc
cmp
jg
int3
jns
lds
xchg
push
dec
call
add
sti
movsl
pop
jns
cmp
loope
xorl
testl
jp
cli
orb
out
sahf
jmp
sub
push
ffreep
mov
out
cltd
sbb
outsl
add
mov
pop
adc
push
mov
sbb
dec
dec
cmp
adc
pop
push
pop
icebp
inc
popa
int3
pop
lret
jecxz
pushf
lds
inc
andb
rclb
push
popf
xor
mov
push
inc
ffreep
lcall
pusha
cmpsb
mov
jecxz
push
jp
cli
imul
scas
mov
adc
frstor
dec
cmpsb
and
mov
das
inc
addr16
shlb
push
pusha
leave
sub
pushf
daa
sub
or
mov
cld
out
inc
lds
cltd
ffree
test
dec
scas
shrl
xor
mov
and
test
scas
inc
adc
int3
sbb
xor
hlt
and
lea
jl
fwait
sbb
jg
xor
dec
mov
mov
adc
mov
or
or
xchg
movsl
dec
push
repz
cld
out
inc
jp
mov
xor
lods
syscall
cmpsl
push
inc
movsb
dec
push
imul
mov
dec
adc
idivb
std
shlb
sbbb
pop
test
mov
arpl
subb
and
mov
popa
insb
push
push
cmp
insl
popf
mov
stc
xor
pop
addr16
xchg
or
adc
mov
ja
cmpsl
xor
ljmp
loope
jge
nop
mov
stos
mov
inc
dec
xor
hlt
popa
or
fcomps
push
add
sub
adc
fcmovnu
in
nop
jmp
es
inc
out
popf
psadbw
stos
out
addl
loope
sbb
mov
in
mov
repnz
int
push
dec
daa
add
ja
add
sub
mov
nop
push
sbb
pop
popa
int3
mov
arpl
add
dec
shrl
dec
popa
inc
mov
mov
fwait
xor
sub
daa
movsb
ss
lds
adc
mov
and
leave
xchg
cmpsl
aad
push
aaa
sbb
xchg
repz
mov
leave
xorl
sub
adc
inc
xor
add
xchg
daa
lods
cld
test
adc
rclb
ret
mov
mov
cmp
cli
fs
fs
cmpsl
lcall
pusha
adc
jae
push
jmp
hlt
sti
pop
rcl
aam
cmp
das
jae
aaa
shlb
out
dec
es
test
push
mov
xchg
ret
shlb
pop
jns
mov
mov
stc
fidivrs
jg
xchg
mov
xor
xor
jbe
es
jae
sub
mov
scas
sbb
push
jo
or
scas
jae
gs
cmpsb
test
bound
in
int
sub
inc
clc
daa
in
pop
ficompl
lcall
pop
orl
leave
xchg
ss
test
in
ds
test
push
mov
push
aaa
xchg
xchg
inc
insl
in
mov
cmp
std
into
jl
xorb
push
pop
cwtl
mov
leave
jl
and
js
and
lods
dec
cwtl
out
add
lret
lcall
jmp
ljmp
inc
lods
xchg
and
mov
inc
in
pusha
test
cmpsb
push
mov
mov
inc
mov
pop
lcall
mov
movsb
dec
jge
sub
sahf
insl
insb
adc
pop
add
or
add
and
jg
stos
shr
sbb
pop
xor
pop
hlt
pop
cmpl
ffree
sbb
inc
sarb
cmpsb
lret
sbb
sbb
mov
mov
cli
add
idivl
out
pushf
cmpb
fs
mov
lock
sahf
xor
mov
or
outsb
add
pop
pop
jle
imul
cmc
idivb
pop
hlt
movsb
mov
out
sub
aam
cmp
leave
imul
mov
pop
fsub
jmp
sbbl
xorb
inc
or
jno
fstl
fsubp
test
cmpsl
aaa
mov
incb
in
pop
inc
fidivl
push
inc
mov
sbb
and
cmp
loopne
inc
fsubrp
xchg
mov
popa
mov
add
xchg
lods
mov
mov
pop
scas
push
xor
fwait
push
repz
lret
push
ret
push
enter
cmc
je
mov
add
iret
lahf
xchg
push
movsb
loop
or
pop
in
cli
or
or
pop
out
push
dec
add
daa
sarb
dec
aas
pusha
imul
or
xchg
jbe
pusha
and
mov
sahf
and
mov
cmp
cmp
sbb
pushf
lahf
test
shl
lcall
mov
push
enter
sbb
arpl
cltd
loopne
ljmp
dec
ss
enter
xor
shll
pop
or
xchg
sub
iret
pop
lahf
or
cwtl
icebp
lds
fistpll
adc
jl
mov
ja
mov
sub
pop
cwtl
cmp
push
clc
mov
cmpsb
std
sahf
hlt
cli
cmp
mov
pop
push
and
jle
adcl
jne
movsl
call
mov
inc
stos
adc
mov
movsb
stos
xchg
sbb
negl
inc
call
sahf
mov
and
and
pop
clc
test
fwait
insb
lds
rcll
adc
ret
jl
loopne
std
repnz
mov
mov
jne
push
dec
fidivrs
pop
push
cmp
push
loope
test
outsl
outsl
addl
call
lcall
sub
cld
push
rorb
lcall
in
scas
out
popf
add
into
cmp
mov
rcll
imul
fstpt
push
ret
sahf
fcmovb
je
leave
mov
addr16
adc
test
xchg
mov
loope
popa
daa
mov
jmp
or
mov
lahf
mov
inc
add
imul
movsl
push
bnd
mov
in
out
seto
js
push
cmp
lock
sub
inc
aad
jg
imul
jecxz
xchg
mov
movsb
mov
adc
pop
rclb
sbb
mov
scas
repz
clc
lea
aaa
js
add
inc
or
adc
push
int
xchg
mov
int
pop
out
fcmovnu
imul
lret
lds
push
sub
cmc
clc
mov
jb
and
inc
out
add
imul
inc
sbb
leave
and
inc
push
jno
xchg
mov
fchs
out
inc
jns
lea
scas
inc
mov
mov
inc
cld
aaa
pop
jbe
mov
pop
test
push
call
hlt
fs
cmovae
call
mov
fldl
mov
cmpsl
js
mov
arpl
jno
fcomi
mov
jb
loope
mov
clc
in
inc
pop
cmp
sub
cmp
cli
mov
lods
aaa
iret
mov
jne
jg
jg
jbe
mov
negl
in
sub
clc
rcr
mov
hlt
sub
sbb
mov
mov
movsb
pop
iret
movsb
scas
jo
clc
mov
and
sub
mov
mov
test
cmpsb
adc
addr16
pop
pop
stc
ja
sub
sbb
xchg
adc
push
outsl
mov
mov
inc
out
testl
rclb
fwait
dec
pop
pop
mov
push
xchg
lcall
ljmp
push
or
out
dec
aaa
and
enter
gs
fsts
pop
push
add
lods
pop
sub
sahf
pop
mov
sbb
mov
shrl
scas
icebp
mov
fs
inc
or
stos
lret
pop
cmp
out
jno
mov
int
repz
insl
hlt
push
jecxz
lock
add
sahf
jae
hlt
fwait
inc
aad
mov
dec
sbb
mov
adc
sbb
addr16
clc
imul
sti
adc
mov
push
fstl
std
dec
popa
jne
pop
popf
add
inc
or
int3
lcall
push
add
pop
adc
cmp
int3
adc
sub
lcall
sar
fnsaves
fs
mov
mov
push
inc
sub
or
jl
mov
push
mov
int3
lea
lods
stos
and
mov
pop
lcall
ja
dec
push
dec
jae
adc
cmc
cmc
xor
repz
ss
fcmovb
fs
sarl
in
xchg
orl
or
xor
add
dec
push
mov
dec
xchg
cmp
aaa
or
stos
mov
push
sti
jge
das
jmp
add
xor
adc
mov
xchg
mov
fidivs
ror
mov
aaa
push
jnp
xchg
push
and
test
test
jns
adc
push
ljmp
sbb
dec
jecxz
filds
lahf
js
lods
in
adc
xchg
push
in
mov
push
mov
push
loopne
dec
pop
adc
jmp
fists
or
xchg
stc
sub
fists
je
enter
fwait
lods
add
mov
adc
inc
mov
xor
faddl
test
dec
inc
sbb
rcrl
xchg
cwtl
imul
icebp
call
repz
sub
lret
enter
ficomps
jle
mov
outsl
rcl
inc
test
aas
lods
rorl
imul
cltd
cmp
jp
dec
dec
xchg
insb
cli
loop
fwait
imul
fdivrl
mov
into
jno
cmpsl
cmc
and
or
sbb
bound
ficoms
int3
push
in
pop
xchg
inc
sub
scas
mov
mov
cmovle
mov
insl
mov
je
jge
mov
insl
dec
lcall
les
mov
jne
ret
negb
sbb
cs
push
pushf
sbb
lock
mov
mov
outsl
push
xorl
sub
js
test
lcall
inc
js
adc
jle
push
movsb
out
stos
insl
sbb
mov
fyl2xp1
das
dec
mov
push
pop
pop
movsl
rol
in
lcall
cs
cmc
or
mov
insl
mov
fidivs
pop
movl
sub
and
push
jge
pusha
cld
sub
outsl
dec
scas
mov
xchg
xlat
enter
cmp
jae
insl
jae
mov
inc
add
insl
mov
dec
xchg
sbb
sub
cmpsl
inc
fwait
je
test
cmpsb
push
push
daa
fidivl
adc
enter
mov
inc
pop
enter
arpl
pop
pop
lret
jl
rcl
push
or
push
out
mov
xor
ret
and
xchg
xchg
sub
ret
dec
xchg
mov
mov
adc
xor
mov
dec
mov
adc
jo
jae
add
popa
test
xchg
cli
dec
jae
xchg
inc
test
pop
pop
std
and
jo
and
fnstcw
mov
mov
xchg
das
imul
or
test
js
add
rolb
mov
fcomip
shr
push
xchg
cmpb
xor
inc
adc
dec
or
jnp
sbb
inc
fimull
mov
mov
add
subl
xchg
xchg
ret
and
test
jns
clc
push
mov
out
mov
insb
dec
adc
lcall
outsl
sub
push
push
out
mov
adc
ret
in
xchg
in
push
jbe
pushf
mov
ljmp
stos
mov
mov
push
sbbl
aas
aas
iret
sub
fsubrl
repnz
mov
in
rorl
fidivl
add
lods
adc
add
adc
and
sub
negl
out
xchg
pop
jg
test
mov
adc
jmp
iret
aad
pop
arpl
add
mov
adc
arpl
insb
push
stos
jl
cmc
es
mov
or
sarl
insb
xor
mov
loop
fdivr
push
enter
xor
gs
out
mov
push
sub
push
mov
iret
dec
push
ljmp
je
repz
ss
sti
fwait
int3
mov
mov
out
bound
push
and
pop
lret
shll
cmpsb
cmp
or
scas
imul
xor
pusha
cmp
xchg
inc
jmp
xor
mov
or
and
cmp
and
mov
jl
hlt
dec
jmp
test
movsl
dec
fsubs
es
xchg
xchg
out
adc
mov
dec
das
fwait
sub
jb
mov
cltd
jl
pusha
or
jge
pushl
ds
push
lock
scas
cmp
test
mov
ja
daa
push
sub
sbb
ret
adc
inc
mov
jne
pop
add
adc
push
repnz
fdivl
sahf
pop
sbb
imul
pop
pop
nop
add
push
and
xchg
jno
cmc
arpl
ds
lods
push
fsubrp
stos
and
filds
stos
sbb
test
inc
out
add
rcll
jns
dec
jo
or
ror
jbe
stos
lret
lock
cmp
inc
jb
and
pop
adc
stc
push
jo
sbb
xor
xchg
insb
push
scas
adc
and
jmp
mov
and
sti
fwait
and
mov
shl
cmpb
shlb
fsubs
iret
or
roll
push
mov
mov
cmp
insl
xchg
mov
inc
jl
imul
popf
jns
or
mov
hlt
pop
jge
mov
cmp
movsb
enter
dec
mov
push
push
jecxz
stc
mov
lods
dec
mov
call
push
cmpb
inc
in
push
insb
call
or
dec
and
fistl
movsl
push
out
shrl
jne
cld
adc
jge
mov
mov
clc
ss
iret
aad
repz
and
data16
lahf
std
push
mov
out
mov
jns
outsb
lret
xchg
pop
roll
inc
int
scas
add
adc
movb
out
mov
sub
stos
pushf
inc
test
pop
ret
sub
aaa
pop
dec
or
push
out
sub
and
out
hlt
clc
mov
leave
ds
mov
jbe
mov
pop
push
mov
and
inc
stos
adc
aaa
xor
add
aas
aad
and
in
int
mov
ss
inc
or
aaa
fnstsw
arpl
or
nop
in
loop
and
or
adcl
scas
fimuls
push
clc
dec
inc
icebp
jp
jnp
jle
add
das
mov
adc
leave
and
movsb
pop
mov
pop
lea
lret
xchg
add
push
mov
rep
pop
lcall
lds
movsb
pop
adc
xchg
pop
aas
fs
inc
orb
mov
pop
daa
push
sahf
repz
sub
lock
cwtl
das
and
xchg
inc
test
add
idiv
aas
push
xchg
repnz
xchg
xlat
cmpsb
mov
and
add
cmp
arpl
or
mov
rorb
jge
lahf
jle
dec
jns
mov
fsubrs
mov
jnp
jmp
and
daa
lods
sub
aad
loop
scas
jno
mov
mov
inc
ds
lods
lret
dec
pop
mov
adcb
push
das
adc
testb
sub
mov
jnp
int
in
pop
ret
pop
fcoms
aam
sbb
mov
and
fildll
push
dec
mov
pop
mov
add
jl
dec
loop
dec
imul
adc
cmpsb
pop
dec
xchg
jo
ljmp
movsl
adc
dec
insb
sar
jg
jno
scas
jns
shlb
notb
cmpsb
or
fistps
sarb
pop
or
dec
mov
push
popa
arpl
cli
xchg
or
jp
sub
pusha
mov
adc
xchg
add
nop
jbe
pop
andnps
or
popf
out
fsubl
jle
pop
add
rcl
stc
test
push
and
iret
in
std
addl
mov
add
mov
out
mov
sbb
loop
or
dec
lret
inc
out
orl
imul
mov
mov
push
dec
add
rcrb
or
inc
sbbl
adc
fbstp
lea
bound
int
or
dec
mov
mov
je
clc
inc
mov
mull
cmc
jmp
push
add
test
loopne
cmpsb
mov
dec
imul
sub
out
pusha
mov
mov
jbe
pop
mov
adc
pop
lcall
movsb
aam
or
mov
sahf
hlt
inc
adc
and
mov
ret
pop
inc
mov
sbb
frstpm(287
adcl
mov
ds
inc
ds
push
out
lcall
sub
push
xlat
leave
nop
mov
sbbb
push
push
loopne
xor
cmpsb
mov
or
ret
add
mov
inc
test
cmp
xchg
cmc
pop
mov
sub
cltd
jae
mov
fucompp
addb
repz
data16
fstps
hlt
sub
je
push
or
mov
push
les
addr16
in
fsubrs
sub
lds
das
nop
lret
pusha
xor
shrb
push
inc
ret
lret
out
movsb
add
lret
dec
cmp
or
pop
test
stos
mov
mov
jns
test
mov
testl
and
jp
lds
push
js
aam
dec
xchg
scas
pop
cmpl
sbbb
aad
cmpsl
cwtl
insb
addr16
and
mov
cmp
imul
fchs
out
mov
pop
sahf
cmp
outsb
xor
sub
lret
and
jnp
jmp
push
lcall
add
mov
xor
orb
cmpb
call
mov
jl
stos
out
in
and
adc
loope
imul
push
call
add
loop
fists
mov
cld
mov
insb
xor
in
or
sahf
add
loope
jecxz
and
ja
fsubr
xor
mov
je
and
mov
ja
lahf
dec
cmp
cmp
sub
sub
loop
pop
idivl
fisubl
into
jae
sti
inc
ret
push
mulb
cmp
mov
sub
sub
mov
cwtl
std
rorb
xchg
insl
stc
shll
fisttps
and
and
adc
pop
aaa
jl
nop
push
fs
rclb
adc
pop
and
cmpsl
lahf
out
xor
mov
lret
jmp
xor
or
cmp
adc
push
xchg
mov
mov
mov
imull
xor
jbe
lock
dec
mov
dec
xchg
out
dec
xchg
or
cmp
or
adc
or
jno
push
and
push
test
filds
push
dec
in
push
shl
mov
insl
mov
sbb
outsl
sarb
and
or
or
dec
inc
pop
hlt
mov
pusha
rcrl
xor
lcall
cld
cmp
push
clc
nop
cmp
outsl
pop
xor
or
sub
frstor
enter
inc
adc
sub
mov
lret
fisttps
xchg
rsqrtps
aam
icebp
cmc
movsb
les
sub
or
sbb
and
ss
push
mov
out
fwait
push
imul
inc
mov
push
ljmp
rorl
add
jp
mov
jp
outsl
enter
movsb
cmpsl
mov
push
shlb
cmpsl
loop
or
push
iret
add
mov
mov
dec
notb
sbb
loop
pop
mov
xorb
xchg
adc
outsb
mov
jno
nop
and
addr16
das
mov
xchg
arpl
decl
out
ret
push
xchg
cmp
repz
xchg
or
iret
call
mov
cmp
xor
pusha
adc
jns
jae
mov
dec
sbb
fsubrs
cltd
or
scas
loopne
xchg
imul
sahf
gs
out
jecxz
fimull
loopne
cmc
je
vmovddup
push
addr16
or
out
jecxz
jl
mov
add
test
lods
xchg
ret
out
nop
pop
lods
clc
fists
pop
mov
aad
cmp
mov
pop
or
rol
sbb
loope
pop
jp
test
inc
sbb
out
lods
sbb
pop
sbb
mov
push
mov
fwait
xchg
pop
imul
loop
adc
int
add
daa
jp
add
jno
clc
push
aas
pop
loop
add
xchg
xchg
mov
pop
push
adc
or
dec
cli
adc
jle
jle
sbb
jl
jp
inc
inc
jns
inc
rcl
mov
jl
gs
into
filds
fwait
aaa
rcll
sub
cli
insl
xor
dec
test
push
loop
rcll
fidivs
sbb
call
jl
xor
inc
pop
mov
mov
inc
sbb
loop
icebp
jle
fwait
jo
mov
or
mov
shrl
add
repnz
movsl
mov
sub
or
in
mov
lods
push
or
andl
xlat
cwtl
movsb
addr16
sarl
mov
into
pop
push
orl
pop
imul
jmp
rolb
jo
lahf
nop
adc
pop
sahf
adcl
sbb
add
sub
shll
out
mov
xchg
jnp
mov
push
xchg
shrb
lret
test
pop
insl
popa
dec
or
pop
cmpsb
fwait
mov
jb
or
or
sub
lret
scas
loop
pop
push
xor
es
dec
mov
add
sbb
xlat
sahf
xor
cmp
pop
jge
repz
jno
mov
cmpsl
mov
arpl
movsb
jge
and
lret
inc
data16
adc
lock
out
gs
jp
movsl
dec
ficompl
outsl
inc
cmc
dec
sub
cmp
push
adc
jge
cmp
cmc
add
mov
xor
fsts
push
cmpsl
movsl
and
std
add
fidivl
rorb
lods
push
mov
shll
or
outsl
stc
dec
pop
rorb
out
inc
cli
sti
cmp
adc
or
in
pop
ljmp
mov
into
fidivs
pop
ror
or
xor
gs
icebp
sub
bswap
add
xchg
pushl
pop
fucomi
out
jl
mov
xor
and
add
xchg
data16
push
aas
cli
push
fwait
jge
xor
jb
into
fcomip
arpl
shlb
out
mov
imul
decl
mov
cwtl
inc
inc
push
es
ret
jno
insl
shlb
jp
sub
jmp
add
mov
add
mov
shll
scas
adc
leave
mov
jecxz
mov
push
lods
xor
insb
inc
jmp
loop
mov
or
lds
in
or
dec
mov
fcmovnbe
inc
mov
jg
test
xchg
int3
sub
push
ja
xchg
mov
add
add
xor
addl
popf
sbb
pop
daa
and
add
lret
imulb
fs
mov
sub
adc
shll
nop
movsl
movsb
jl
in
sub
pop
jnp
nop
push
dec
mov
jnp
fcmovnbe
pop
shrb
in
sub
nop
jg
cmc
sub
or
push
mov
xor
testb
pop
scas
sub
int3
and
pop
dec
adcl
mov
xor
jecxz
sahf
in
mov
stos
mov
test
sbb
cli
stos
subl
adc
jne
stos
push
dec
jl
mov
cmp
mov
pop
test
lcall
into
aad
int3
sub
leave
mov
sub
repnz
call
sub
mov
aas
push
and
push
cltd
pushf
cmpsb
add
mov
leave
jg
and
fsubl
loope
ret
xor
pop
loope
push
lea
out
cli
xlat
int
je
ljmp
testl
test
sbb
test
push
into
ret
fucompp
dec
or
add
ret
data16
xchg
add
repz
mov
xor
daa
mov
movl
jnp
xor
ret
fists
jp
cld
out
lret
ss
jmp
inc
dec
ror
add
and
test
push
fstl
pushf
xchg
sbb
xchg
xchg
mov
sbb
inc
add
xor
inc
jns
cmp
mov
leave
inc
int3
jge
xchg
fs
mov
cmp
mov
enter
cmpsb
lcall
daa
rorl
jnp
sbb
mov
insl
pusha
in
test
cmp
xor
loop
mov
push
stos
test
xchg
add
mov
add
push
push
and
lret
out
xor
jge
pusha
dec
int3
mov
mov
adc
jmp
int3
mov
jns
daa
lahf
sub
test
popf
xor
rorb
lahf
aaa
cmp
adc
jmp
mov
push
jne
mov
fmull
cmp
adc
cld
sub
jmp
sarl
cld
mov
fcmovbe
aad
sti
and
gs
or
pusha
pop
out
cmp
rcr
imul
int
insl
mov
jg
inc
movsb
rcr
push
jl
xchg
xchg
fcmovb
leave
pop
fwait
add
sub
push
xchg
xchg
sub
jmp
in
mov
jmp
push
sarb
leave
addl
pusha
mov
cli
and
add
test
stos
pminsw
xlat
push
xchg
loope
cmp
mov
push
mov
test
pop
inc
dec
add
jl
push
cmp
pop
out
mov
and
filds
cmp
dec
loopne
mov
daa
mov
xchg
mov
aam
cmpsb
fwait
pop
popf
bound
lods
push
add
cmp
pusha
push
sub
lds
cmovle
mov
pop
mov
sbb
repz
pop
mov
in
add
and
jle
or
xlat
jmp
xchg
pushf
insb
call
enter
cmc
js
jg
jecxz
mov
add
pop
push
jecxz
push
loope
fnstsw
in
jne
pop
add
call
ss
adc
cs
leave
jno
out
cli
loope
mov
ss
stc
mov
lods
repz
testl
fidivl
mov
inc
scas
popa
push
xchg
aas
sbb
mov
aam
addr16
ffreep
addb
add
pop
fistl
fsubrs
xlat
sub
cmp
cmp
arpl
push
dec
jge
push
aam
jl
in
test
inc
add
subl
fidivl
ficoml
cmc
lahf
inc
popf
jge
movsl
movsl
mov
cmp
adc
xor
pop
out
lods
loopne
jmp
jle
adc
sarl
or
dec
xchg
inc
push
rcrl
jb
or
cmp
push
mov
push
movsb
out
out
pop
mov
mov
stc
xchg
lcall
xchg
in
les
push
mov
xor
xchg
ss
arpl
push
popf
icebp
fildll
cld
ret
jae
rcrb
push
mov
rcrb
dec
jno
movsl
aas
aam
dec
sbb
mov
movb
xor
rcrb
adc
cltd
fucomip
test
and
mov
add
push
sub
mov
adc
lods
sub
mov
jae
push
mov
pop
in
enter
fisubs
inc
jae
sbbl
jnp
pop
xchg
nop
pop
xchg
pusha
push
js
sub
cmp
add
adc
push
mov
jo
lock
wbinvd
lret
sub
or
das
jg
sub
and
jb
jmp
push
ja
sbb
outsl
mov
popa
push
out
aaa
xchg
add
in
repnz
outsb
ffree
jp
adc
sub
push
fxch
add
pop
test
lcall
or
mov
stos
mov
mov
push
ret
adc
adc
xchg
orl
icebp
push
and
xlat
and
leave
and
das
sbb
mov
xor
pop
pop
gs
decb
ljmp
push
xor
sahf
ret
jne
sub
mov
das
push
clc
fcmovnb
push
xorps
fsubl
ret
mov
gs
sbbl
jns
pusha
jbe
adc
cmp
test
test
daa
pop
shlb
lds
in
mov
push
sub
out
push
ljmp
mov
inc
out
fsubr
imul
mov
mov
push
add
adc
mov
aas
jo
test
lahf
rorb
mov
fisttpll
roll
jb
rorb
or
stc
ret
fwait
imul
jo
and
mov
xlat
cli
insb
push
mov
sarl
sbb
add
mov
rorl
mov
stos
mov
xchg
inc
add
cmpsb
sbb
or
adc
addr16
and
cmp
mov
adc
imulb
test
jmp
cmp
inc
subl
dec
push
mov
add
xchg
aaa
add
sarl
pop
aam
int3
int3
push
mov
sub
push
dec
jnp
sub
dec
js
mov
push
nop
jb
xchg
add
int3
fldenv
out
xchg
jns
out
fdivrl
mov
jmp
and
sbb
add
mov
cmp
or
and
inc
fstps
jo
stos
lahf
mov
cmpsb
push
andb
lds
nop
jp
sti
mov
push
jno
xor
jge
js,pt
push
dec
insb
inc
insl
adc
xchg
sub
sbb
popw
xor
sub
sub
jmp
cmpsl
inc
xchg
push
divb
xchg
into
push
push
dec
push
jns
sub
mov
pop
xchg
mov
xchg
xorb
cmpsl
mov
mov
loope
aad
add
push
aaa
leave
sbb
mov
or
dec
shr
pop
movsb
xor
fisubl
dec
jl
loopne
cmp
aam
ljmp
mov
xchg
mov
and
mov
mov
or
cmp
cmp
cs
dec
and
call
mov
sbb
jb
inc
fisubl
adc
insb
call
pop
adc
ljmp
int3
push
xchg
insl
or
mov
es
in
sub
test
fcompl
cmp
aas
push
call
cld
lock
jg
mov
aad
mov
sbb
push
cmp
mov
dec
push
xchg
jecxz
mov
push
dec
loope
dec
sahf
divl
out
out
out
movsb
pop
fsubs
outsl
imul
out
scas
pop
faddl
push
jb
aam
sub
lret
and
pop
test
inc
icebp
xchg
es
cmpsb
lret
push
jmp
into
or
popf
into
sub
xlat
hlt
sbb
mulb
std
xchg
out
cmp
xor
stos
dec
push
xor
add
or
leave
mov
push
mov
add
lods
outsl
add
inc
aas
add
enter
imul
jae
pop
in
aam
xchg
sbb
movsl
mov
in
pusha
pop
rclb
out
mov
aam
mov
sub
iret
add
aad
push
or
mov
pop
sbb
lods
nop
jge
sbb
xchg
loop
insb
in
push
lret
cmpsl
scas
cmp
jp
lcall
dec
pop
xlat
rorl
sub
into
aas
or
ja
test
sbb
jmp
inc
jnp
pop
jns
push
push
dec
loop
adc
xor
pop
xor
adc
sbb
repz
or
clc
lock
inc
ds
mov
shll
adc
push
stc
imul
outsl
mov
shlb
xor
pop
mov
faddp
test
daa
inc
push
sbb
mov
rolb
add
adc
adc
daa
adc
xsaveopt
push
or
scas
dec
and
push
imul
scas
add
imul
out
push
scas
fwait
mov
fimull
pop
xchg
sub
test
mov
pop
mov
jae
int3
dec
add
sbb
movsb
mov
mov
jae
mov
inc
scas
outsb
mov
xchg
rcrl
and
add
adc
js
mov
xchg
sbb
nop
sub
or
pop
push
jno
push
dec
test
jo
lret
mov
jae,pt
mov
inc
jns
sti
call
and
sub
movsl
gs
push
in
stos
and
ror
into
cmpb
ficomps
push
ljmp
mulb
push
lahf
adc
adc
divl
pop
cli
fdiv
out
cltd
notb
incb
shl
insb
xchg
es
lret
add
ret
pop
dec
ds
jmp
mov
call
popa
xchg
andb
ja
push
push
mov
pop
rclb
inc
pop
in
scas
clc
loope
adc
xchg
leave
mov
push
test
int
fisubs
jp
mov
inc
xor
xor
adc
in
lret
insb
mov
jmp
aaa
clc
js
mov
xchg
add
push
pushf
jbe
bound
sbb
sti
sbb
in
dec
test
enter
add
cwtl
cs
clc
sub
movsb
cld
out
fildll
in
push
push
adc
jge
repz
xlat
lcall
pusha
mov
xchg
imul
fidivs
test
pusha
in
mov
mov
xorb
outsb
scas
and
fiaddl
aas
test
push
sbb
or
mov
ss
mov
xchg
mov
xor
cmp
scas
mov
adc
in
insl
sub
pop
xor
jmp
aas
mov
cmpsb
sbb
jns
mov
pop
pop
into
pop
mov
xchg
jmp
imul
test
or
sub
or
adc
xor
dec
jo
jmp
cltd
pop
or
test
scas
push
xor
sahf
mov
and
mov
rorb
lahf
xor
fcmovbe
mov
aas
fsub
adc
or
aam
dec
add
loop
mov
add
enter
popa
and
xchg
mov
jb
mov
xchg
push
mov
arpl
repnz
pop
je
pop
xchg
push
push
into
test
inc
sbbl
in
out
jb
lahf
xchg
mov
lahf
jnp
dec
xchg
and
mov
sub
jbe
fs
and
push
rolb
cmpb
shll
bswap
int
xlat
rcr
outsb
lea
xor
cmc
clc
in
out
lock
fildll
aam
sbbb
adc
add
mov
mov
fwait
xor
loop
pop
adc
sub
imul
and
mov
add
dec
inc
lds
cmp
sbb
adcb
sarb
mov
jg
mov
xchg
jmp
or
add
outsb
xor
push
push
mov
mov
into
push
out
pop
call
mov
aaa
enter
pusha
cs
shlb
clc
inc
push
push
push
push
xor
rcll
cs
mov
push
xchg
add
push
cmp
jl
out
repnz
sar
out
or
mov
dec
add
fadd
sbb
test
das
mov
aaa
ljmp
into
mov
sbb
sub
pop
std
mov
add
push
dec
fwait
insl
fstl
mov
mov
xchg
insl
lcall
mov
imul
sbb
insl
fisttpll
icebp
mov
pmaxub
sbb
adc
sbb
pop
pop
mov
outsb
movsl
js
fsubl
mov
lahf
dec
inc
mov
adc
xor
lods
mov
push
das
jmp
outsl
cs
add
cmp
popa
jbe
cmpsb
aam
and
lods
mov
fwait
jbe
scas
rolb
sahf
cmp
inc
inc
popf
into
and
push
cmp
sbb
inc
test
mov
stc
cmp
and
mov
xor
adc
pop
test
push
movsb
shlb
add
mov
mov
pop
test
mov
mov
xor
loop
mov
rorb
jg
and
test
inc
xchg
mov
cli
into
dec
leave
mov
lret
sub
xchg
jle
fs
pop
xor
int3
dec
inc
adc
out
and
jo
lret
or
jle
sub
pop
mov
add
mov
hlt
daa
jb
adc
js
mov
jp
mov
inc
and
loopne
xor
pop
cmpsb
stos
enter
fwait
pop
sub
ljmp
cmp
adc
xchg
in
mov
inc
iretw
mov
add
aas
imul
push
mov
jmp
enter
cmp
and
jge,pn
adc
mov
jmp
sbb
xor
jne
add
test
xlat
mov
pushf
mov
mov
into
movsl
ja
stos
inc
sbb
daa
mov
popa
dec
fcoms
cmp
lods
ficoms
cwtl
stos
xchg
push
cmp
mov
fndisi(8087
xor
aas
jp
cld
out
loop
ret
mov
xchg
dec
out
loop
jecxz
xor
pushf
jno
mov
push
push
ret
movsl
mov
and
mov
or
jbe
and
add
ret
pop
xchg
cmp
mov
dec
xchg
sub
int
pop
or
leave
in
inc
dec
jecxz
sbb
push
pop
xchg
cmp
jae
in
rcrb
mov
pop
mov
xor
inc
jnp
test
sub
flds
loope
cmpsl
adc
jle
jo,pt
pop
fidivrl
shl
pop
je
dec
sbb
mov
xor
fsubr
inc
mov
pop
inc
dec
push
sbb
loop
outsb
test
jns
push
push
dec
fsubs
cmp
fstpl
sub
insl
fcompl
pop
jae
inc
adc
mov
adc
add
or
sub
sbb
pop
fcoml
les
sbb
jp
mov
cmp
out
xor
adc
push
movsb
mov
pop
decl
in
dec
mov
fbld
sahf
pop
in
stos
sub
stos
jmp
lret
sbb
sahf
int3
sub
pop
int3
out
out
outsl
push
mov
mov
cmp
xchg
data16
jae
inc
lret
cmp
mov
cmp
inc
mov
cmp
cs
mov
js
push
sub
push
pop
shrb
xchg
add
lahf
stos
jp
cmc
xchg
pop
repnz
loopne
das
lock
iret
xlat
sarl
fdivs
and
cmpsl
adc
sbb
push
std
mov
sbb
adc
incb
lret
adc
jecxz
js
mov
adcl
sbbb
xchg
mov
pusha
push
lods
cmp
mov
xchg
mov
mov
movsl
lahf
dec
cmp
icebp
icebp
dec
xchg
and
pushf
cmp
adc
sbb
jb
push
inc
push
ss
dec
hlt
aad
cli
jmp
das
fistpll
inc
add
repnz
scas
sbb
stc
mov
frstor
cmp
adc
popf
leave
call
fdivl
repnz
daa
mov
jmp
les
push
sbb
mov
shll
fbstp
pop
jmp
or
popa
push
nopl
lret
popf
pop
mov
push
clc
ret
into
adc
mov
popf
jge
imul
push
jge
cltd
push
jmp
sbb
add
rorb
sub
or
test
loopne
mov
cmp
or
and
pop
and
mov
cld
int3
cmp
outsl
sub
lods
jg
cwtl
cwtl
pop
xlat
mov
loop
add
mov
inc
ja
aam
mov
test
push
xor
movsb
daa
repz
test
mov
insl
fbstp
mov
int3
xor
push
add
negb
loope
outsb
jnp
bound
sbb
jmp
xchg
nop
stos
sub
aas
sbb
stc
lods
mov
out
cmp
xor
insb
and
ret
jo
call
jge
or
dec
andl
jno
push
sub
mov
daa
stos
ss
pop
lds
or
push
xor
mov
outsl
loope
cmovns
cmp
pop
xchg
mov
idivl
int3
adc
pop
arpl
or
pusha
in
aam
push
pop
rorb
outsl
inc
sub
jle
push
mov
mov
test
and
mov
mov
cmp
loope
mov
and
ret
lods
jle
jae
sahf
popf
nop
jg
out
xchg
xchg
or
shlb
push
repz
addr16
int
push
ja
lcall
mov
mov
addr16
cmpsb
out
faddl
cmc
mov
scas
daa
mov
cmovg
outsl
mov
arpl
adc
ret
in
js
cmp
out
ret
cmp
jecxz
movsb
aam
mov
lcall
sti
je
push
push
add
popa
push
push
mov
mov
xchg
fnstenv
testl
inc
enter
int3
inc
sbb
sti
rcrl
push
data16
inc
pop
cld
icebp
xchg
call
ret
and
daa
rcl
les
sub
int3
ficoml
sub
inc
loop
fbstp
std
xor
stos
aad
jmp
cmp
pusha
data16
rcl
les
add
xchg
sub
mov
int3
mov
push
mov
push
jns
pop
test
sub
inc
jb
sub
xchg
lds
dec
jmp
std
pop
stc
xchg
ficomps
rol
fidivrs
push
icebp
adc
xchg
fstpt
xor
jae
jns
push
test
fistpl
jns
xchg
pop
iret
dec
inc
mov
cmp
shl
jg
out
mov
fnstcw
cltd
xchg
xor
push
adc
and
inc
sarl
inc
bound
clc
xchg
call
mov
xlat
xor
in
dec
stc
or
lcall
jnp
imul
xlat
int
gs
sbb
pop
pop
iret
push
add
fwait
mov
and
sbb
test
adc
dec
mov
mov
jmp
pop
shr
mov
sub
popl
xor
jecxz
lods
test
roll
or
mov
je
mov
cmp
shll
call
push
xor
mov
jg
sub
iret
shll
sub
fs
jns
fwait
hlt
mov
cwtl
mov
jp
sbb
cld
aam
add
arpl
add
push
push
add
fistps
inc
int
jmp
popa
push
fmull
mov
loop
jp
push
test
adc
add
cs
or
addl
lahf
lret
in
pop
push
jl
into
jecxz
je
sbb
jb
inc
fisubs
rcrl
and
pop
pop
shll
adc
cld
jle
sarb
inc
dec
test
test
adc
push
testl
sbb
and
dec
cltd
jl
int
mov
cmpsb
rcrb
inc
and
imulb
xor
movsl
sub
pop
xchg
lcall
mov
das
and
push
mov
ret
mov
jl
xor
test
xor
fiadds
ficoms
mov
cmp
fists
ljmp
jmp
pop
xchg
fwait
jle
imul
orl
pop
cmp
scas
insb
popa
mov
push
xchg
fnstsw
lcall
lock
jmp
cmp
sbb
cs
add
jbe
in
ja
enter
fwait
int
hlt
push
ss
data16
dec
cmc
adc
jle
arpl
xor
sbb
scas
mov
or
dec
sub
mov
jle
and
fnsave
adc
cmp
sbb
ret
std
loopne
addr16
adc
sbb
inc
push
fnsave
push
jg
sub
dec
lods
inc
dec
cld
das
and
lahf
and
lahf
pop
and
adc
xchg
inc
fcom
sub
insl
lret
xchg
push
push
into
adc
pop
cwtl
inc
jmp
out
xchg
push
cld
jecxz
inc
movsb
push
jo
add
sbbb
or
jns
imul
sti
jne
clc
mov
fsubr
out
call
ljmp
inc
sub
xor
fbld
stos
dec
or
sub
xchg
fisttpl
xchg
mov
jge
repz
jle
cltd
movsb
rorl
jecxz
xchg
mov
inc
cld
loop
orl
inc
int
in
and
xchg
pop
fwait
cmp
in
jle
xchg
push
leave
fs
stc
xchg
aas
and
push
out
fisttpl
repz
mov
mov
and
bound
mov
ja
dec
cmp
xlat
pop
xlat
or
jl
mov
mov
mov
dec
ss
mov
and
insl
sub
jl
adc
sub
lods
out
inc
in
outsl
adc
or
and
jg
imul
int3
out
nop
rcrb
fs
cmp
in
sar
sarl
imul
mov
push
xor
mov
cmpsb
xchg
lods
jl
leave
mov
aad
push
cmp
ds
add
mov
cmp
test
in
xchg
xlat
sbb
mov
movsl
jmp
mov
pop
cmp
jns
leave
dec
idivl
loopne
shlb
outsl
popa
repnz
lret
fidivrl
pop
lods
add
push
ret
cwtl
shll
fwait
movsl
jp
bswap
lods
cwtl
test
loope
stos
inc
ficoms
mov
and
jo
xor
mov
add
leave
aad
dec
andl
out
and
dec
subb
xor
jnp
dec
jge
and
pop
mov
adc
fnstenv
or
fwait
cmpsb
mov
pop
test
xlat
mov
mov
rclb
insb
xchg
and
add
in
sti
push
nop
xor
rcll
cmp
sbb
daa
push
lea
pop
fldt
or
cmp
inc
xorl
setle
sbb
mov
int
adc
mov
push
shrb
lock
mov
inc
mov
xor
mov
xor
adc
sahf
ja
fldt
stos
mov
inc
in
loope
std
ret
cmpsl
xor
pop
inc
xchg
ret
shll
cmc
and
lods
sbb
dec
adc
test
loope
pushf
mov
or
mov
xacquire
call
xchg
sbb
push
lock
pop
mov
mov
fucompp
push
mov
push
movsb
jno
lods
add
mov
insl
sahf
mul
cmp
iret
call
fisubrs
mov
sub
lea
add
decb
aam
mov
rcrb
leave
cs
pop
test
jnp
setb
jo
sete
xchg
js
xor
mov
flds
negb
sbb
push
mov
push
cld
sti
mov
mov
push
and
aas
popa
movsl
xor
sbb
sbb
adc
subb
testl
test
scas
dec
negb
or
sbb
icebp
fxch
bound
daa
in
iret
mov
jnp
push
mov
pusha
imul
ja
or
sbb
inc
jb
push
push
call
in
xor
arpl
mov
push
popa
add
pop
adc
mov
cli
movl
lods
push
test
clc
jg
cs
adc
or
xchg
cmp
lods
dec
cltd
mov
pop
subb
fcoms
sbb
shlb
out
jo
mov
sbb
test
jle
fnstenv
ret
out
jb
pop
jmp
and
sbb
mov
leave
mov
pop
pop
dec
sub
ljmp
aas
cmp
jecxz
and
dec
call
xor
mov
inc
pop
test
subb
pop
xor
push
xchg
xchg
push
xchg
adc
jge
xor
fcomp
call
shll
mov
pop
sub
shrb
cltd
pushf
sarb
sub
dec
add
push
pop
jne
ror
addr16
stos
mov
pop
popf
dec
jecxz
lahf
add
lret
cwtl
lock
outsl
out
pop
push
pop
daa
mov
icebp
inc
in
leave
fwait
sahf
xchg
xchg
mov
mov
add
in
in
iret
enter
xchg
jbe
pop
mov
lods
add
rorl
testl
pop
inc
cli
std
pop
mov
jl
icebp
xor
rolb
orb
and
imul
push
repz
imul
cltd
sub
stos
sti
inc
xor
in
enter
lds
sti
mov
fcmovnbe
imull
cmpsb
xchg
mov
leave
mov
lret
insb
popf
fidivl
lock
xor
push
mov
shlb
pushf
jp
xchg
shll
scas
outsl
or
fstp
sbb
push
cltd
outsb
mov
cmp
jl
cmpsb
inc
add
in
push
sub
dec
out
leave
lret
and
stos
popf
sbb
mov
mov
jmp
mov
shlb
xchg
push
lods
sub
cmp
jno
or
ljmp
ljmp
mov
inc
add
les
xchg
xor
into
mov
stos
lahf
aas
mov
mov
cmp
mov
pop
fnstsw
lahf
sbb
out
cmp
loope
or
mov
and
mov
xor
mov
xchg
xchg
rorb
roll
nop
or
cmpsl
cmp
mull
stos
push
cmp
fucom
pop
jmp
call
mov
lahf
mov
sub
push
movsb
stos
mov
xor
jo
push
inc
inc
cmp
mov
cs
push
inc
add
push
pop
emms
scas
pushf
mov
jno,pn
mov
fisubrs
jg
aad
lahf
test
dec
xchg
dec
mov
out
cmpsb
sbb
out
in
ret
data16
out
cmp
pop
imul
je
mov
jbe
xor
fdivrl
pop
cmc
movsb
mov
and
sti
inc
sub
mov
push
mov
sub
ljmp
pop
xchg
pop
fs
sbb
or
sbb
js
adc
mov
outsl
dec
mov
jmp
or
push
inc
dec
cli
ljmp
das
std
jmp
or
negl
lret
jae
adc
or
scas
sti
dec
xlat
or
gs
or
adcl
fcmove
push
insb
pop
stos
xchg
adc
push
and
lds
adc
daa
jg
jecxz
test
stos
jne
out
inc
nop
leave
pop
inc
jae
xchg
mov
fimull
clc
mov
pop
and
add
jno
into
shlb
scas
sbb
ljmp
xlat
mov
or
iret
or
sbb
push
subb
cmpl
movb
shll
sti
cmpsl
jo
bound
jg
push
xor
je
movsb
pop
fucom
mov
dec
loope
mov
scas
in
loopne
pusha
nop
das
sbb
cmp
stos
and
insb
out
pop
cmp
cli
les
imul
sbb
scas
xchg
inc
aaa
or
cli
xor
xchg
repz
jl
lock
dec
adc
xchg
sahf
mov
and
xor
je
dec
in
jp
decl
dec
repz
mov
pushl
movsl
test
fimull
fsubr
test
pop
cmp
fdivs
andb
test
jne
add
sub
add
fisubs
pusha
out
hlt
jmp
out
xchg
mov
rorb
dec
cwtl
cmc
xchg
std
cmc
out
xchg
out
jle
negl
fisttpl
test
add
xchg
aaa
xchg
testl
sbb
cmpsl
daa
hlt
xor
push
loop
xlat
push
stc
scas
enter
jae
movl
stos
push
or
push
lret
add
popf
sub
mov
into
push
roll
mov
jo
pop
jb
ljmp
xchg
push
sub
sahf
push
out
scas
iret
adc
add
adc
je
testl
loopne
mov
pop
sbb
in
inc
pop
fdivrl
xchg
jb
stc
stos
dec
je
clc
mov
lahf
stos
nop
loopne
icebp
fs
adc
xor
js
jno
ljmp
add
push
dec
popa
div
inc
mov
inc
xchg
sbb
xchg
scas
fstpl
xchg
or
out
test
adc
and
popa
iret
cmp
xchg
add
outsb
jae
or
pop
sbb
or
ret
sbb
xor
bound
mov
cs
fwait
sbb
pop
inc
dec
fdivs
insb
cmpsb
adc
mov
xor
xchg
sub
cmpsb
sbb
push
xor
mov
adc
scas
jbe
ja
mov
sub
or
inc
xchg
test
in
mov
inc
jle
mov
sbb
jns
sub
inc
jl
mov
xchg
test
adc
lods
insl
pop
ds
mov
push
fnsave
out
push
lret
sbb
imul
stos
outsl
scas
popa
cmp
xchg
inc
ss
and
and
sub
bound
in
gs
inc
sub
sub
fsubs
xchg
and
into
cmp
es
inc
int
mov
pop
testl
pushf
push
and
into
aam
mov
push
push
xchg
pushf
lock
sbb
fidivrl
mov
dec
mov
lock
inc
cld
leave
jae
xchg
sub
je
add
inc
sub
mov
or
movsb
mov
sarl
test
xchg
mov
push
jmp
cli
cld
repz
inc
sbb
add
in
pop
cmp
roll
xchg
clc
inc
dec
enter
movsl
icebp
adc
mov
ret
jle
xchg
pop
push
xor
fsubl
sbb
push
insl
xchg
mov
pusha
les
pop
cld
pushf
dec
sarb
aad
pop
mov
lock
pop
decl
and
inc
bound
roll
push
iret
pop
mov
pop
add
jmp
or
mov
inc
pop
mov
iret
cmp
mov
mov
jns
xor
les
cmp
add
cmc
xchg
sub
or
adc
adcl
fistps
ficoml
push
xchg
xchg
push
xor
mov
jo
xchg
dec
adc
and
jns
aaa
push
jae
push
out
push
aad
rorb
imul
mov
jne
mov
inc
jne
cmp
ret
rorl
sub
sub
je
in
xor
push
aaa
push
stos
jl
inc
adc
test
mov
aam
or
nop
dec
mov
pop
mov
fsubs
lock
andl
mov
imul
in
and
fs
fcmovb
aam
xchg
les
in
jae
xor
cmp
and
std
out
cmc
mov
fmull
inc
sub
xor
xchg
xor
nop
fildl
inc
out
lods
sbb
sub
cmp
add
pop
mov
pop
ljmp
sbb
loope
ljmp
inc
pushf
push
pop
outsb
ss
mov
pop
sbb
jne
adc
loopne
jno
shlb
ret
xor
bound
loop
add
jb
or
inc
pop
sti
jo
test
addr16
add
jb
push
in
push
bndstx
popa
lahf
out
inc
stos
fsubl
cmpsl
data16
ret
pop
pop
jmp
pusha
dec
rcrl
test
sar
mov
mov
lea
mov
jmp
jb
js
mov
hlt
rcl
jp
shl
stc
fcoml
fistl
lods
mov
cmp
jle
cmpsl
mov
cli
push
dec
pop
lcall
addr16
mov
jmp
leave
scas
in
sar
aas
sub
arpl
adc
popa
roll
xchg
ds
mov
and
xchg
mov
lret
cli
mov
inc
cmp
sbb
cmpb
fs
sti
mov
sbb
rcll
push
jo
mov
hlt
incl
add
dec
xor
jnp
rorl
icebp
mov
inc
pop
iret
mov
push
les
jo
dec
cmp
pop
shll
jnp
xor
and
cwtl
add
icebp
aaa
dec
loopne
sbb
dec
mulb
and
lds
fisubrs
jle
and
mov
daa
push
xor
mov
cmp
leave
out
xor
mov
popa
mov
repnz
sub
or
bound
mov
adc
xchg
jbe
push
mov
jne
rorb
mov
cld
stc
inc
sub
pop
ficoml
std
lock
sbb
inc
jp
insb
je
test
lahf
dec
mov
ret
mov
jmp
mov
cmpsb
or
jmp
push
mov
jmp
sbb
imul
or
in
sbb
mov
fcompl
out
clc
outsb
cmp
adc
mov
ret
xchg
and
clc
sbbl
int3
lahf
sub
repnz
mov
jmp
add
pop
xchg
movsb
int3
push
mov
sti
mov
add
inc
roll
pop
int
imul
call
subb
adc
pop
cmpsb
jmp
mov
gs
in
cmp
popa
cmp
scas
std
les
mov
out
stc
daa
push
rorl
cld
pop
lea
daa
xlat
out
mov
mov
fists
push
mov
xorl
push
pop
test
sbb
pop
hlt
cmp
ds
lret
mov
scas
mov
cs
aaa
jae
sbb
fsubl
add
mov
xchg
or
aas
out
sbbb
pop
mov
pop
mov
ficoms
sbb
jo
nop
xchg
out
dec
sub
stc
sbb
fbld
dec
pop
insb
mov
push
aad
cld
in
inc
out
lahf
loope
gs
jl
mov
shrb
lcall
std
mov
mov
aaa
aam
dec
inc
daa
jmp
push
ja
jnp
faddl
fsubrl
shlb
mov
add
pop
pushf
ret
pusha
mov
clc
mov
clc
and
mov
repz
popa
cmp
sub
repz
scas
sbb
push
icebp
sub
cmp
movsb
pop
xchg
mov
and
fdivr
sub
imul
mov
inc
mov
cld
and
fcompl
aam
xchg
sbb
movsb
and
xor
sti
pop
lock
and
pop
pushf
pushl
jb
mov
cwtl
push
jl
push
hlt
adcl
adc
inc
stc
vmovhps
jnp
mov
je
mov
js
daa
dec
mov
inc
in
les
jecxz
fcompl
ss
movsb
scas
insl
inc
notl
inc
icebp
outsb
dec
sbbb
orl
xor
push
inc
dec
mov
xor
add
dec
ret
sbb
sbb
sub
mov
sub
mov
push
loop
cs
ret
pushf
mov
push
mov
imul
pop
jle
cmp
xchg
test
jge
xchg
mov
sbb
xor
stos
int3
jle
scas
out
push
sub
pop
outsb
push
stc
repz
out
sub
inc
faddl
idivl
fldcw
in
and
sbb
sbb
mov
and
repnz
sub
lcall
jae
int3
negb
sub
jecxz
arpl
outsb
lcall
jecxz
data16
sub
sti
sub
push
out
jp
mov
out
adc
inc
mov
dec
jle
ret
sti
scas
xor
adc
add
inc
jmp
jmp
mov
jmp
les
sub
inc
clc
hlt
jae
add
cli
xor
loop
inc
mov
lods
inc
xor
dec
loopne
and
jl
inc
adc
sti
das
pop
xchg
push
addl
push
leave
sub
cmp
mov
lock
std
sbbl
outsl
mov
nop
inc
or
adc
mov
pop
mov
xor
outsb
lret
mov
jne
mov
mov
and
fs
cmp
jg
loope
mov
xor
dec
mov
cmpsb
je
popa
mov
jne
popf
iret
mov
adc
mov
test
mov
sbb
mov
mov
aad
popf
mov
lods
adc
cwtl
out
add
das
sbb
mov
mov
cs
out
ss
adc
fdivs
dec
ret
dec
popa
jmp
outsb
xor
movsl
xchg
stos
sbb
sub
jbe
adc
and
lods
mov
mov
inc
in
mov
and
mov
add
sub
repnz
ret
roll
pop
call
mov
cmp
call
push
roll
repz
repz
push
orb
ret
pushf
xor
in
nop
and
sub
xchg
pop
bound
shrl
loopnew
cmp
lret
dec
cmc
imul
xorb
rcll
fsubs
incb
cmp
dec
int
sub
add
mov
mov
xchg
clc
add
mov
xor
or
fists
mov
mov
imul
adcb
xchg
lret
cmp
inc
xchg
push
xchg
sti
dec
lret
cli
pop
mov
sub
jb
mov
sbb
cmp
out
sub
vmovupd
scas
mov
stos
das
arpl
int3
jecxz
fisttps
fisubl
cmc
push
testb
int3
pusha
adc
or
jbe
inc
sahf
mov
lods
or
xor
stc
xchg
add
ja
xchg
inc
lret
and
xchg
dec
sub
inc
xchg
fwait
sub
movl
mov
add
add
gs
test
enter
cld
outsl
xchg
out
jge
adc
fildll
add
dec
outsb
xchg
cmpl
rolb
clc
cmp
cmpsl
inc
ljmp
push
insb
pop
fadds
mov
stc
xlat
cmp
sub
sti
dec
mov
aaa
xor
out
rol
sub
mov
sar
sar
inc
xchg
jecxz
scas
dec
sbb
or
xlat
inc
xchg
and
mov
clc
fldenv
push
lea
adc
jmp
ss
lds
mov
fsts
dec
mov
movb
or
mov
jae
pop
fwait
cmp
jnp
sahf
adc
lea
push
insl
fwait
mov
pop
into
pop
jle
outsl
clc
xchg
imul
repz
add
cmp
mov
lahf
nop
add
aas
movsl
das
lahf
sub
mov
sub
aam
mov
bound
iret
je
push
insl
jbe
push
add
mov
insb
lods
push
mov
mov
mov
enter
xor
push
sbb
jp
ds
jl
and
adc
lcall
insl
or
sbb
gs
out
leave
dec
add
pop
ss
push
sub
aad
mov
out
scas
jl
cmp
push
inc
popf
flds
mov
jnp
fiadds
jo
mov
lods
addr16
shlb
or
pop
ss
insb
jmp
and
jl
pop
mov
or
fcom
aas
in
push
xchg
adc
aaa
and
lcall
ret
pop
fidivrs
les
not
fnstsw
adc
or
pop
inc
adc
iret
mov
adc
mov
idivb
xor
cmp
mov
cmp
mov
aam
inc
das
loopne
cltd
xor
push
adc
push
jbe
cmc
jo
je
ret
aas
bound
aaa
inc
push
lods
insl
or
sbb
loop
xchg
mov
pop
mov
out
outsb
jne
ret
daa
in
adcl
mov
sbb
sub
or
sbb
jp
push
sbbl
add
cwtl
cmp
jns
adc
mov
mov
orl
sub
mov
and
dec
mov
inc
xlat
mov
lret
or
rcrb
pop
andl
xor
aaa
fwait
inc
xchg
repz
sahf
pop
test
xchg
ljmp
adcl
push
loopne
es
adc
adc
xchg
and
ss
xchg
loope
fsubr
scas
or
test
sti
pop
dec
mov
xor
cmc
std
leave
pop
lods
add
loopne
mov
xchg
out
adc
push
pop
xchg
and
mov
test
cmp
and
fdiv
fwait
cmpsb
push
cmp
aaa
or
xor
gs
mov
push
hlt
aaa
mov
iret
jecxz
mov
imull
scas
dec
and
out
inc
push
out
pop
dec
pusha
pop
scas
outsl
and
mov
xor
push
or
xor
xchg
int
popa
gs
and
incl
rclb
adc
xchg
lcall
mov
clc
mov
pop
mov
aam
sahf
dec
sub
xlat
and
fimuls
inc
mov
pop
arpl
popf
dec
mov
hlt
sbb
std
mov
cmp
arpl
sub
outsb
inc
push
sub
xor
movsb
mov
jno
sub
pop
enter
fistl
xchg
rorb
jecxz
std
mov
push
in
sbb
jae
inc
int
test
addr16
mov
cmpsl
pop
mov
and
jg
dec
dec
loope
adc
jmp
mov
into
or
dec
inc
movsb
scas
js
int3
xchg
adc
and
add
inc
sahf
jmp
sbb
out
or
or
mov
lret
icebp
rclb
fcomp
sbb
test
in
dec
inc
cmp
icebp
pop
jne,pt
testb
push
test
dec
adc
mov
add
and
das
movsl
movb
xchg
jmp
pop
stos
jmp
clc
dec
cmp
sub
push
and
sbb
movsl
andb
xchg
inc
mov
xchg
xchg
dec
dec
addr16
cmpsb
push
test
mov
add
test
xor
stos
adc
cltd
fidivrl
inc
sub
mov
xchg
addl
jae
rcrl
inc
adc
movsb
push
int3
xor
xchg
sbb
or
push
or
mov
add
xlat
pop
fwait
clc
and
xchg
pop
lods
and
xorl
sbb
pop
dec
dec
mov
add
enter
or
sub
pop
lea
fisubrl
cmp
xchg
adc
jl
outsb
out
mov
sbb
sbb
mov
stos
std
ds
inc
adc
jbe
xorl
dec
movsb
pop
inc
sub
or
sti
ret
mov
or
jg
jge
stc
clc
hlt
sub
and
mov
dec
xor
jns
imul
sbb
popf
icebp
mov
push
ljmp
cwtl
pop
pop
or
fiadds
push
push
cli
clc
sbb
iret
ret
jnp
mov
rol
sub
daa
xor
jmp
push
mov
mov
ficoms
fstpt
popa
sbb
sub
clc
fsubp
fcmovbe
loope
jne
sub
lds
test
test
xchg
and
xchg
push
ds
and
fmul
adc
in
cmp
xchg
sbb
adcl
mov
dec
pop
jns
jnp
cmc
es
mov
in
push
fdivl
stos
push
push
xchg
fstpl
aam
pusha
add
add
call
loopne
shl
or
sub
push
pop
imul
pop
movsb
and
popl
push
adc
cli
sub
sbb
insl
loopne
cmp
loopne
xlat
xor
ret
dec
test
ficoms
xor
inc
xor
push
push
dec
cltd
call
sbb
push
xor
and
adc
inc
mov
pop
mov
xor
or
test
xor
push
and
xchg
mov
cmpb
sub
dec
sbb
dec
pusha
lods
xchg
sbb
test
insb
cmc
jae
sbb
stc
pushf
inc
hlt
ret
sbb
in
ja
push
icebp
push
fcmovne
mov
cwtl
test
cmp
cmp
push
or
shlb
jg
xchg
mov
stos
or
pop
xorl
pop
int
add
mov
jbe
jb
push
mov
sbb
cmp
cmp
fbld
test
movsl
je
ss
jp
mov
std
mov
outsl
lret
stc
pop
push
sub
ja
sub
or
pop
stos
mov
jmp
sbbb
xor
pop
pop
jae
xlat
add
or
mov
add
pop
fldt
or
mov
pop
inc
fsubs
sbb
scas
xchg
loop
leave
adc
dec
pushl
xor
and
pop
xor
repnz
mov
adc
imul
lcall
lret
cmp
idivl
or
outsl
fildll
adc
lret
ret
push
inc
out
pop
sarb
sub
and
out
and
test
ret
pop
push
aaa
adc
xchg
arpl
inc
jo
adc
push
jmp
mov
cmp
add
stos
and
xchg
or
aas
insb
xor
push
je
push
add
xchg
lret
xor
gs
leave
cs
and
jo
add
jle
mov
scas
rclb
adc
dec
insb
or
mov
in
mov
fcomi
lds
and
or
repnz
sbb
shlb
fnsave
cmpsb
mov
sbb
insl
sbb
cmp
mov
stc
je
dec
test
mov
inc
pop
mov
cmp
mov
mov
sbb
cmp
jae
fnstsw
nop
popf
add
cmp
xchg
add
jbe
mov
mov
ds
ja
or
add
bound
ja
xor
push
cmp
in
jle
test
sub
loope
addb
dec
andb
fldl
decl
and
pop
mov
test
es
push
gs
or
xor
pop
and
jne
rorl
mov
aam
cli
inc
fs
xchg
xorl
daa
daa
add
stc
cmp
adc
outsl
rorb
xchg
imul
xchg
iret
xor
sbb
loopne
lahf
push
sub
repz
jecxz
jnp
pop
mov
cwtl
test
mov
gs
mov
jno
jp
xchg
loopne
pop
add
rolb
lds
push
stos
xorl
in
push
cmp
xchg
ret
adc
mov
cmp
mov
push
push
test
push
movsl
cmp
sbb
cltd
and
dec
call
outsb
push
jmp
jns
adc
dec
pop
add
aaa
dec
add
shr
xchg
mov
and
jae
xor
lods
popl
mov
jne
mov
fcomps
addr16
out
push
mov
ffree
mov
sbb
cltd
mov
jbe
lock
jbe
and
arpl
clc
add
fwait
push
idivl
repz
shlb
mov
in
adc
mov
outsl
mov
stc
sbb
addr16
jle
xchg
lahf
lds
lret
stos
lea
mov
test
xor
sbb
and
test
in
push
pop
jne
lods
fcoms
fisubrl
jns
je
nop
push
mov
sbb
frstor
jecxz
daa
pusha
or
and
mov
mov
scas
xor
pusha
sub
mov
sbb
clc
sbb
lock
pop
jb
xchg
xchg
repnz
inc
push
shll
jmp
mov
int3
pusha
loopne
cmpl
mov
je
xor
je
loop
push
sbb
cmpsb
push
sub
sub
xor
add
icebp
ret
shll
push
ficompl
cmp
mov
adc
scas
ds
pushf
ret
loopne
int3
cli
or
xchg
ret
sub
cli
xchg
mov
pop
dec
push
cld
mov
stos
repz
jecxz
in
sbb
mov
es
insl
mov
movsl
dec
enter
cmp
add
lods
push
pop
ljmp
mov
pop
push
push
lcall
pushf
call
inc
sub
repnz
sub
mov
mov
pop
sbb
lret
xchg
dec
and
fwait
dec
mov
jge
ror
mov
sar
push
movsb
dec
cmc
sub
pop
or
xchg
sub
out
mov
adc
mov
ret
lds
jbe
mov
push
adc
test
out
add
add
sarb
add
hlt
stos
icebp
stc
mov
outsb
pop
popf
into
pop
xor
add
mov
gs
pusha
xchg
out
pop
pop
cmp
mov
js
inc
push
jnp
ss
mov
xchg
faddl
outsb
mov
cwtl
rorl
cs
in
cmp
insb
dec
sbb
fisttpl
sub
outsl
pop
cld
imul
loopne
sbb
bound
pop
loop
inc
ss
mov
test
in
dec
inc
and
and
jnp
sbbb
leave
pop
push
mov
push
mov
xor
and
mov
test
mov
adc
adc
lods
mov
xchg
jbe
shrl
iret
cmc
loopne
sbb
fs
cmp
cmpsb
aad
or
imulb
sahf
loopne
mov
lods
clc
ficoms
mov
dec
xlat
fs
dec
and
imul
gs
jle
enter
lret
and
dec
xchg
mov
jp
xchg
mov
pop
imul
das
sub
pop
idivl
sbb
mov
scas
inc
sbb
inc
jmp
inc
jmp
outsb
fsubp
sub
out
xchg
iret
jecxz
add
ss
out
cltd
mov
insb
cmp
iret
mov
xchg
adc
adc
int3
lcall
push
rcr
clc
lret
ss
rclb
jp
ja
sub
popf
push
pop
sbb
jno
pop
pop
aad
fldcw
test
ret
in
push
clc
stos
or
push
in
adc
jp
pop
nop
loope
xchg
cmp
and
sbb
roll
or
je
sub
shrb
pop
fistl
mov
scas
pushf
xor
out
mov
xor
rcll
xor
scas
mov
mov
push
ret
sbb
mov
fdivl
loop
mov
add
xchg
or
repz
repz
clc
sub
mov
mov
xchg
cld
mov
mov
inc
or
pop
cwtl
pop
sahf
cmp
or
std
stc
cwtl
mov
sbb
leave
jl
arpl
fiaddl
imul
jns
popa
rcrb
shlb
and
arpl
enter
or
stc
fmul
mov
adc
sbb
adc
pop
xor
sti
sahf
or
js
cmc
or
and
push
ja
jge
push
ret
les
push
cmp
push
in
lret
scas
frstor
pusha
pop
out
pushf
dec
add
inc
mov
xor
loopne
repz
addr16
cltd
jg
scas
sbb
sti
push
mov
test
sub
popa
push
test
jno
repz
mov
mov
pop
xor
je
push
dec
inc
stc
int3
jns
lods
insb
pusha
and
addl
loope
cmp
insb
inc
pop
cmp
scas
jp
stc
mov
lds
cmp
xchg
xor
addr16
out
push
and
cmp
loop
insb
adc
aad
pop
lcall
cmp
jle
inc
pop
std
cld
sub
cmpsl
push
mov
jp
icebp
es
pop
inc
hlt
cli
std
das
push
cmpsl
negb
stos
jg
fnstsw
jle
xchg
lds
xor
in
xor
repnz
push
sbb
xchg
xor
jne
movq
iret
aaa
fcoml
mov
dec
aad
out
clc
sub
pop
mov
xor
loope
push
addr16
mov
push
inc
jae
ret
push
outsl
icebp
lahf
andl
adc
inc
addr16
sbb
adc
mov
sbbl
mov
lret
push
and
pop
orl
bound
jge
inc
scas
and
mov
stc
add
or
fisubl
cld
add
xchg
jmp
sbb
mov
icebp
xor
mov
sub
jb
adc
je
mov
ja
xchg
lock
mov
or
sbbb
outsl
dec
jae
push
xchg
ljmp
icebp
scas
adc
jl
clc
xchg
sub
jo
stos
jns
mov
pop
outsb
mov
adc
adc
pop
icebp
mov
stc
mov
arpl
jmp
and
dec
push
shlb
mov
loopne
fisttps
andl
enter
add
xchg
push
loopne
stos
mov
mov
and
testb
int3
mov
dec
xchg
lods
push
popf
rcll
xor
mov
shl
pextrw
mov
gs
into
push
in
add
fidivl
push
dec
inc
movsl
and
lar
std
movb
dec
inc
aad
dec
and
lret
pop
popf
lret
lcall
cmp
jg
insb
in
mov
fistpll
xchg
sahf
shl
gs
adc
inc
xchg
ljmp
loopne
cltd
xor
lret
pushf
jbe
sub
jno
jo
daa
xchg
loop
mov
fistpl
lcall
aaa
inc
jns
mov
mov
dec
mov
lret
and
inc
sub
jnp
imul
in
xchg
or
or
adc
mov
or
sbb
mov
sbb
jp
scas
xor
scas
jns
lods
add
gs
ret
clc
and
and
cmc
sti
rcrl
and
shlb
sbb
lcall
mov
sbb
repz
mov
jae
jmp
pop
xor
push
mov
loopne
js
jbe
popf
cmpsb
xor
test
cmp
sahf
loope
mov
ljmp
jmp
sbb
ficoms
mov
pop
ss
ret
idivl
push
push
test
inc
aaa
sbb
fidivs
push
sub
fsubs
outsb
mov
xchg
or
test
pop
jmp
fwait
decl
sub
call
push
xchg
test
mov
and
loope
push
add
sub
mov
sbb
shlb
mov
stos
lods
xchg
fcmovnb
mov
or
cs
fdivl
xchg
mov
les
addb
es
add
mov
and
fstl
push
ficomps
mov
pop
insl
push
push
fdivl
cmpsl
aas
aaa
addr16
push
iret
cld
xchg
adc
xchg
repz
or
or
inc
xor
jo
mov
inc
push
mov
jl
cmp
adc
cmpsl
mov
incl
mov
add
out
out
ret
mov
and
ret
and
inc
jp
sub
inc
and
jg
push
je
sbb
loope
daa
loop
jo
in
ds
push
adcl
rorl
xor
inc
adc
adc
xor
add
int3
or
aad
sub
push
add
xorl
lahf
jo
xchg
lds
dec
sar
jnp
add
cli
lret
inc
push
dec
jb
ret
insb
xchg
es
mov
fildll
or
xchg
mov
dec
mov
push
push
cltd
mov
xchg
cli
pop
aad
xchg
or
fyl2xp1
mov
push
repnz
stc
imul
pop
cwtl
ret
call
outsl
ja
rclb
jo
mov
inc
in
mov
sti
xlat
mov
and
and
adcb
dec
xor
mov
jmp
inc
push
sarb
cmp
mov
jbe
fdivs
jmp
sub
add
fnstsw
and
out
in
loopne
out
sub
pushf
push
sti
shr
cwtl
push
int
add
and
xchg
addb
das
pop
mov
and
sub
add
xchg
rcr
xor
aaa
rolb
lcall
insb
adc
or
fidivrl
jle
inc
je
test
fs
adc
adc
fcoms
dec
testl
adc
push
add
and
mov
mov
mov
call
push
imul
bound
mov
std
xchg
repz
sub
cmp
cmc
inc
jecxz
or
mov
adc
and
lcall
mov
push
sub
mov
test
pusha
pop
stos
out
test
mov
sarb
movsl
cltd
leave
and
stos
mov
scas
push
mov
loope
sahf
notb
mov
adc
ficoms
xor
in
or
lods
loope
pop
jae
sbb
cmpl
pusha
mov
and
dec
nop
push
scas
mov
pop
jno
movsl
dec
sbb
addr16
mov
inc
pop
inc
cs
adc
loop
xlat
mov
icebp
mov
push
std
xchg
out
jmp
cld
and
sahf
fadds
dec
pop
insl
fsubrl
mov
sbb
out
push
fdivr
stos
push
and
dec
dec
je
or
ljmp
rcr
dec
cs
jb
les
movsl
or
flds
mov
inc
movsl
stos
add
pusha
cltd
insb
test
push
adc
mov
roll
sub
idiv
xchg
aaa
jge
ljmp
pop
hlt
add
adc
sub
or
int3
pop
ljmp
into
jmp
pop
popf
or
cmp
or
mov
out
ss
pop
leave
sbb
mov
ret
cli
popa
icebp
fdivl
int3
out
mov
pop
add
shll
notb
movsb
jns
add
sub
sub
pop
test
mov
int3
sub
and
loop
js
pusha
cmc
nop
jecxz
inc
xchg
lahf
push
mov
stos
or
loope
mov
jbe
ljmp
inc
fsts
clc
out
mov
dec
stos
out
sbb
mov
imul
ljmp
inc
sub
rcr
cmpsl
jnp
or
dec
inc
sub
cmp
outsb
les
push
por
sub
lret
push
push
repnz
push
into
fsubp
cmp
leave
subl
out
sub
lcall
rcl
mov
push
aas
dec
and
dec
iret
lret
xchg
in
rorb
rolb
sbb
mov
pushf
mov
mov
xchg
add
xchg
das
jo
sub
nop
outsl
shrl
adc
inc
push
pushf
shll
pop
mul
and
rorb
std
dec
adc
popa
inc
sub
add
cmpsl
lock
push
pop
fcoml
call
or
insl
mov
dec
sub
jp
sub
add
imul
mov
movsb
mov
ds
bound
ss
out
xor
outsb
call
xor
mov
test
cmpsb
loopne
xchg
mov
cmp
or
int3
or
adc
out
mov
in
into
lock
dec
cld
xchg
jp
lahf
shrb
out
xchg
push
mov
fdivs
pop
mov
daa
xchg
sbb
push
test
jns
jbe
mov
mov
push
xchg
push
lods
stc
sti
adc
mov
imul
sub
xchg
inc
or
out
jge
sub
sbb
das
inc
dec
sbb
push
mov
push
sahf
pop
out
xor
push
cli
adc
xchg
repz
mov
lea
icebp
mov
adc
dec
and
mov
enter
icebp
or
mov
in
inc
imul
sbbl
lahf
or
js
shlb
mov
and
xor
xchg
mov
lahf
mov
xchg
mov
xor
xchg
inc
and
jne
stc
xor
jl
mov
or
sub
imul
clc
popf
cwtl
lods
mov
fcoml
pop
and
jo
mov
jne
xchg
sub
mov
int3
ljmp
sub
std
dec
pop
lret
leave
call
fldt
jl
outsb
testb
popl
popf
cmpl
cmc
add
stc
lods
dec
repnz
outsb
sti
add
push
mov
stos
jns
or
mov
arpl
mov
cwtl
xor
xchg
in
xor
leave
xchg
mov
push
into
push
sub
and
lcall
add
fs
rcrl
adc
inc
sbb
pop
inc
into
add
jmp
adc
push
add
jns
mov
rolb
cmp
movsl
sbb
cmp
pushf
or
push
or
aaa
xor
add
ret
sub
dec
cmp
out
jae
lret
loope
and
in
mov
add
mov
mov
adcb
sub
and
cs
mov
mov
and
je
inc
test
mov
cmc
mov
loopne
xchg
push
addl
lds
sbb
out
add
inc
jb
fwait
shl
mov
push
add
mov
movsl
js
and
fists
adc
cld
jne
cmp
mov
jg
push
jae
popa
orl
push
out
mov
lcall
lods
es
adc
in
or
sahf
adc
test
testb
sbb
ja
mov
xor
add
or
xchg
test
push
add
call
sub
jmp
and
xor
aaa
mov
pop
shrb
addr16
add
lods
ljmp
push
pop
mov
pop
inc
repnz
test
dec
push
push
push
ret
loope
jmp
jb
mov
bnd
aam
sbb
hlt
mov
xchg
icebp
xor
aam
int3
xchg
adc
cli
jns
add
add
cli
sbb
mov
sti
mov
sbb
mov
test
or
mov
and
or
ja
push
loopne,pn
mov
pfrcp
jmp
cmp
mov
or
cmp
and
mov
mov
xor
divl
ret
stos
inc
lock
cmpb
push
fldt
movsb
jecxz
cmpsl
js
mov
sub
sub
mov
and
gs
out
pop
cmp
jae
lock
nop
pmaddwd
pop
cmpsb
xor
bound
sub
cmp
arpl
fimull
add
mov
in
or
cmpsl
dec
xchg
out
or
pop
sti
js
pop
add
add
dec
aaa
dec
xchg
push
pop
cmp
in
fwait
insl
push
cmc
mov
pop
xchg
ds
lods
sti
cs
sbb
mov
test
iret
subb
mov
cli
dec
xchg
mov
and
or
inc
jo
ljmp
jb
and
gs
mov
xchg
push
in
pop
imul
cs
jmp
iret
xlat
push
loop
out
mov
cld
push
scas
or
xchg
mov
push
cs
es
mov
fstl
in
pop
cmp
xor
mov
cmpsl
mov
sti
jns
stos
lods
sbb
loope
test
out
loope
adc
insb
cld
repz
or
xchg
sub
pop
xor
jbe
inc
xchg
xor
sub
jmp
push
out
jl
addl
sbb
jl
xchg
addr16
mov
loope
cmpsl
cmp
ja
adc
sbb
shlw
push
sub
and
cmpsb
mov
mov
sub
iret
lods
imul
cmp
xchg
nop
enter
cmp
jmp
lods
popa
xor
mov
outsb
ljmp
cmp
pop
cmp
xchg
xchg
outsb
inc
out
xchg
lods
jle
mov
cmp
or
fcom
add
scas
mov
movsl
bound
pushf
push
or
ret
jbe
push
jmp
lret
jnp
cmp
lret
push
shrl
push
push
fwait
out
push
pop
or
inc
adc
and
out
mov
call
jle
push
xlat
pop
fdivl
pop
and
scas
fnstcw
sahf
movsl
jg
mov
leave
lret
shll
outsl
adc
jno
or
push
test
mov
xchg
mov
lret
loop
mov
faddl
in
shlb
xchg
pop
mov
sub
daa
jge
sub
data16
sbb
sub
insl
mov
and
dec
sub
adc
sbb
jle
add
shll
push
sbb
pop
movsb
pop
adc
pop
icebp
xor
aaa
out
push
arpl
ret
dec
rcr
sub
nop
cli
sbb
dec
fisubl
push
shll
inc
jns
dec
jb
out
std
inc
enter
arpl
mov
cld
movsb
mov
xor
lea
add
and
fs
divb
cmp
cmp
daa
jae
push
mov
hlt
cltd
mov
dec
xchg
pop
pop
dec
xchg
jle
adc
xchg
pusha
clc
jmp
jmp
sub
sbb
sarb
jnp
lcall
or
mul
pop
pop
stos
pop
movsb
sub
test
lock
hlt
decb
pop
mov
jns
or
cmp
rcrb
arpl
or
roll
shl
and
jnp
push
pop
mov
mov
test
loop
xchg
cmp
inc
sarl
xchg
sahf
xchg
xor
fdivrl
mov
imull
int3
insb
sahf
mov
hlt
test
pop
test
jnp
in
pop
sbb
cltd
std
nop
sbb
mov
sub
adc
ret
sbb
and
ret
into
scas
dec
dec
mov
mov
inc
dec
xchg
lods
pop
imul
push
mov
mov
mov
dec
imul
std
mov
repnz
add
pop
sub
insb
test
imul
or
sbb
sub
push
push
sbb
mov
test
pop
cmp
pop
ljmp
mov
inc
push
negl
dec
lea
and
idivb
popf
shl
mov
cmp
cmp
data16
dec
lods
in
jecxz
dec
movsl
testb
lahf
inc
and
adc
cli
adc
push
mov
pop
repnz
or
add
mov
cwtl
mov
xorb
fisubl
push
push
in
sub
loopne
xchg
iret
aaa
dec
push
imul
push
mov
adc
xor
rcrl
popf
sub
mov
lahf
shrb
adc
loope
xchg
sarb
fisttpll
jg
push
cmp
out
pop
xor
pushf
dec
mov
int
outsl
data16
ret
popf
mov
add
mov
mov
mov
mov
fimuls
sbb
rclb
cli
stc
rcl
das
jbe
inc
mov
inc
mov
or
out
lock
leave
test
pop
ficoml
inc
je
inc
mov
push
cmpsb
lods
pusha
xchg
inc
decl
cmpsb
orl
hlt
bound
and
cs
std
jno
sub
jl
push
sbb
mov
dec
aam
jecxz
popf
lret
stos
and
and
dec
insb
lock
push
inc
test
and
rcr
xor
jmp
adc
call
fmull
sub
gs
std
and
repz
sbb
jnp
aaa
or
add
test
mulb
or
out
cmpb
push
outsb
scas
add
xor
inc
divl
push
dec
es
cmc
jp
hlt
mov
in
push
repz
mov
xor
daa
sbb
inc
dec
jmp
inc
inc
inc
aas
pop
ljmp
enter
les
loopne
sub
mov
mov
int
sbb
aad
sub
pusha
sbb
inc
or
movb
sbb
mov
inc
adc
insb
jb
mov
scas
test
xor
pop
push
cli
fwait
nop
insl
scas
ljmp
fimuls
loopne
sub
or
loope
mov
and
xor
out
fldenv
lea
pop
sub
mov
mov
out
xor
icebp
das
sub
loopne
jne
idiv
xchg
inc
mov
ficoml
or
int
imul
pop
mov
loopne
pop
xchg
mov
xchg
fcomip
into
mov
and
dec
sub
jecxz
pop
insl
cmp
stc
jno
xchg
xchg
iret
stos
gs
nop
push
out
daa
adc
sub
insb
fwait
add
pop
scas
stc
jbe
mov
mov
and
cmp
cmp
scas
iret
mov
sahf
mov
orl
decl
mov
jno
test
lock
jae
sahf
sbb
mov
lcall
sub
aad
sbb
cmp
js
mov
push
push
addr16
mov
ja
scas
sbb
mov
popa
sub
push
loop
xor
jle
push
inc
nop
inc
pop
mov
icebp
add
stos
in
cmpsl
loopne
and
dec
or
xor
mov
lcall
orb
adc
pop
sbbl
aam
xchg
jp
pushl
cmp
pop
xchg
dec
inc
or
ja
push
sbb
cltd
mov
xor
mov
sbb
xor
sub
imul
sub
sub
ljmp
xor
lods
pushf
and
dec
jno
xor
and
repnz
add
sub
inc
cli
sbb
mov
ds
jo
cmpsb
cmp
mov
xchg
imul
sub
jge
xchg
andb
inc
or
or
neg
jmp
pop
pop
out
mov
mov
add
mov
push
xlat
mov
enter
sbb
cmpsl
pop
in
add
stc
jne
xlat
pop
fsubrs
jg
icebp
add
add
insl
int
mov
xor
aas
enter
mov
leave
iret
clc
movsb
sbbb
or
jmp
divl
fwait
idivb
das
dec
sti
sbb
dec
cld
outsl
mov
adc
das
pop
ret
jnp
loop
cmc
push
jge
gs
enter
test
insl
inc
icebp
mov
sub
mov
cmovp
mov
test
mov
xor
jnp
sub
add
adc
push
call
inc
into
sub
dec
out
or
inc
cltd
clc
lcall
xor
mov
daa
xor
add
adc
push
ficoml
and
push
dec
jne
gs
loope
in
ss
pop
mov
scas
fildl
testl
cs
pop
aad
mov
or
mov
ja
into
mov
imul
pop
push
pop
cmp
sbb
cmp
push
jns
repnz
xorb
outsb
jns
mov
out
xor
daa
cmc
mov
mov
jnp
out
cmp
lea
cs
xlat
ficoms
adc
xchg
and
shlb
add
sub
mov
sarb
movsl
xor
mov
stos
inc
stos
dec
addl
mov
adc
inc
pop
lods
lds
cwtl
rclb
cmp
shlb
adc
int
aam
lods
push
rcl
cmpsl
fwait
out
dec
scas
mov
jno
lahf
imul
jbe
aad
pop
or
icebp
aam
roll
negl
add
mov
xchg
sub
push
sbb
in
push
push
out
xchg
and
iret
or
fisubs
or
stc
push
in
inc
mov
loop
push
add
clc
jne
rorl
xor
xchg
jge
shl
adc
imulb
xchg
les
clc
aas
movsl
jl
clc
out
in
adc
xchg
lret
insl
mov
sub
inc
mov
loop
test
push
mov
push
aaa
mov
daa
mov
sti
lds
jle
mov
not
sbb
cmp
inc
sbb
lock
inc
sbb
and
rol
jp
adc
push
xor
mov
mov
cwtl
fnsave
mov
or
xor
ja
sub
mov
addr16
hlt
loope
sbb
and
jae
jo
leave
dec
ret
pop
jbe
pop
pushf
test
out
iret
fdivrs
cltd
pop
into
sub
and
out
nop
and
cs
jmp
pop
adc
imul
xchg
push
insl
repnz
push
in
enter
pop
jg
ljmp
cmp
add
pop
int3
or
push
call
add
call
mov
pop
push
cmp
mov
clc
dec
push
jnp
ret
fsubrl
fbstp
jmp
popf
adc
push
mov
mov
mov
xor
jecxz
rcrb
jmp
fiadds
mov
and
add
notb
push
mov
pop
fisubs
shrl
cmc
mov
inc
fs
mov
movsb
xchg
movsl
pop
cmp
in
icebp
sbb
push
ss
dec
mov
rolb
push
leave
mov
jge
enter
sub
or
int
mov
mov
pop
sbb
mov
lcall
add
sbb
push
mov
test
movsl
es
and
maskmovq
imull
sub
xor
and
sti
and
push
dec
ret
and
imul
inc
xchg
xor
fistpll
inc
je
out
popf
or
dec
push
pop
xchg
cmpsb
sbb
push
sub
aas
add
cmc
fwait
xchg
dec
cmpsb
jp
xchg
aaa
sbbb
sub
inc
out
xor
add
shrb
cmpl
cmp
push
std
lcall
sbb
jae
cmp
push
mov
xorl
faddp
cmp
mov
loope
mov
sub
jns
mov
add
xor
push
pop
shll
in
mov
xchg
xchg
xlat
cmp
mov
lret
lcall
xrelease
inc
lret
jmp
mov
insl
outsl
fbld
sub
push
sub
xchg
js,pn
xor
test
pop
push
in
movsb
and
adc
mov
jb
push
popa
ljmp
and
ljmp
stc
or
sbb
repz
xchg
dec
cmp
sub
lds
out
mov
out
test
data16
lret
or
xor
cmp
lods
xchg
loop
and
xchg
adc
xchg
jge
cmpsl
inc
xchg
fnstcw
shrb
mov
adc
mov
and
pushf
das
xor
rcrl
ret
inc
jbe
xor
flds
xchg
jb
ds
stos
xor
into
lcall
adc
pop
lock
dec
je
inc
and
fs
mov
aas
cmp
stos
adc
xor
or
push
add
xchg
push
aad
pop
xor
inc
enter
rclb
sbb
iret
pop
mov
xor
call
dec
imul
add
mov
or
jns
pop
or
aas
push
push
shll
les
and
icebp
or
inc
inc
leave
or
movsb
mov
dec
mov
push
mov
xchg
aas
add
fs
jmp
mov
imul
xchg
pop
dec
mov
dec
sbb
aam
in
sbb
bound
loopne
pop
popf
pushf
int
cmp
xor
mov
push
adc
jmp
xor
test
mov
push
adc
mov
aaa
cmpsl
cmc
and
cmpsb
mov
int
push
sub
inc
in
arpl
inc
jle
adc
fmuls
pop
cmp
add
imul
ja
test
adc
sub
out
fwait
mov
stos
icebp
push
xchg
dec
push
test
dec
xchg
jge
inc
loop
icebp
movsl
mov
aam
ret
xchg
out
sub
hlt
xchg
or
adc
dec
repnz
sbb
pop
or
std
sub
insl
sbb
lret
leave
aad
and
mov
loopne
mov
ret
or
popa
ds
inc
mov
lret
into
sub
inc
je
popa
mov
fisttpl
xor
mov
int
pop
scas
shlb
sub
out
lods
sti
fnsave
xchg
sub
jl
inc
dec
fbld
dec
loope
subb
xlat
mov
jo
test
stos
xchg
cmp
pop
push
sahf
stos
adc
dec
fs
mov
and
cs
push
or
aad
xor
sbb
jb
test
push
dec
mov
jb
push
lods
mov
imul
xor
pop
xchg
push
cld
jo
sub
outsl
add
pop
out
push
movsl
mov
push
and
mov
test
mov
mov
std
push
push
in
mov
or
mov
outsl
sbb
or
mov
jns
arpl
ds
ficomps
jae
and
add
pushl
cli
and
mov
dec
inc
fmuls
or
pop
scas
outsl
push
cwtl
adc
push
sub
and
pop
lods
neg
ret
add
jl
and
shlb
mov
mov
sub
into
sar
stos
mov
mov
iret
jg
shll
hlt
divb
imul
adc
or
insb
xor
lods
add
andb
scas
xor
and
test
cmp
sbb
or
das
xor
mov
mov
jp
xchg
fists
ds
or
out
jnp
jmp
xor
adc
and
pop
or
aas
lds
add
cld
adc
cmp
dec
int
out
push
mov
loop
shrb
out
pop
or
inc
jl
movsl
adc
popf
and
inc
fsubrl
dec
push
negb
push
add
add
push
sub
es
xchg
mov
movsl
lock
test
scas
scas
and
inc
out
dec
leave
test
cmp
cmp
or
pushf
repnz
jle
inc
cmc
iret
mov
add
lock
ret
jnp
bound
inc
sbb
ss
popl
adc
enter
test
gs
add
insl
lret
adc
xchg
pop
insb
popa
fcoml
ret
cmp
jle
pop
jne
popf
es
fcoml
xor
and
inc
sbb
xchg
push
in
call
inc
enter
and
stc
pop
int3
out
push
ret
andl
lcall
adc
mov
mov
pop
mov
inc
inc
cli
aad
and
cmp
sahf
or
pop
in
add
inc
xor
rcr
pop
gs
xchg
xlat
lret
test
outsl
inc
jmp
cmc
inc
cltd
inc
cmp
pavgw
sub
jbe
fsubr
lods
mov
outsl
and
cmp
cs
push
xchg
mov
sarl
out
icebp
cmp
and
popa
pop
clc
jbe
fdivrs
int
hlt
cmp
xchg
inc
out
xchg
xor
xchg
test
jns
loope
inc
add
cmp
ffree
cmp
movl
std
xor
push
test
mov
inc
mov
mov
lds
rcrb
dec
outsl
mov
and
xchg
lcall
add
movsb
mov
cmp
and
sub
or
mov
sahf
dec
dec
jno
add
inc
and
outsb
jo
xchg
add
cmp
aas
loope
inc
push
dec
movups
fcoms
std
lods
jl
loope
push
adc
lret
fildl
es
bound
push
add
rorb
mov
inc
js
int3
or
jl
movsb
mov
lds
imul
inc
clc
inc
mov
mov
push
out
xor
and
or
pop
dec
jl
sbb
cmp
fildll
cs
xchg
inc
imul
inc
adc
mov
and
popf
loope
insl
or
fs
into
lahf
fsts
pop
push
push
jb
insb
cmp
mov
xor
jnp
mov
cmc
insb
rol
push
sbb
es
ja
dec
add
pop
lret
sbb
push
imul
dec
jne
or
xlat
test
in
sbb
cwtl
lahf
stos
ds
and
or
int
jo
clc
insb
mov
inc
dec
sub
ret
sbb
sbb
insl
cwtl
or
jbe
jmp
insb
lea
enter
shlb
mov
jp
dec
call
rclb
jne
mov
pop
outsl
in
mov
aam
stos
test
fcomip
dec
push
or
fyl2xp1
es
pusha
popf
push
or
es
js
fs
pop
and
cmpsb
shll
inc
jmp
lcall
std
lret
add
mov
or
push
inc
call
dec
loope
cmp
or
cmpsb
inc
cld
enter
inc
rorb
scas
mov
imul
dec
mov
stos
fcompl
pop
jg
rep
imul
adc
mov
jmp
testl
stc
outsl
mov
sbb
lcall
stos
fs
popa
imul
mov
lcall
movsb
ret
in
or
and
hlt
cmpsl
sahf
push
mov
in
inc
outsb
lock
add
jecxz
push
mov
mov
cmp
stos
jb
and
sbb
pop
loope
test
mov
add
aaa
aas
or
sbb
add
inc
jge
clc
xchg
lods
and
leave
mov
xchg
test
xor
sahf
jns
jmp
push
rolb
int3
popf
cmp
int
xchg
lock
movsl
stc
rolb
pop
in
loope
push
fnstsw
mov
loope
movsb
jl
pop
notb
push
sbb
add
daa
push
jb
fs
repnz
xchg
cli
test
sti
dec
jno
mov
sbb
push
push
xor
outsb
add
jbe
int
imul
sar
jnp
jl
mov
xchg
mov
pop
les
iret
idivl
xlat
das
inc
ljmp
jno
mov
sub
or
xor
vmulpd
popf
mov
dec
das
hlt
cs
inc
jecxz
addr16
pusha
lcall
push
inc
dec
test
push
andb
xlat
sbbl
out
rcrl
lret
sub
and
pop
or
pushf
repz
jmp
or
xor
cmpsb
out
pushf
dec
mov
lret
lds
sbb
add
divb
rclb
flds
push
shrb
popa
mov
out
bound
fwait
dec
aam
jge
and
outsl
xchg
xor
js
mov
mov
call
sub
sbb
arpl
cmp
mov
sarl
ljmp
icebp
and
dec
fimuls
in
repz
xchg
cmpl
daa
popf
into
xchg
test
das
pop
filds
mov
ljmp
mov
and
adc
aad
test
sbb
rclb
lret
adc
fdivrs
test
fdiv
flds
stos
push
aam
mov
xchg
in
and
cmp
ds
gs
shrb
repz
dec
push
je
or
and
movsb
pop
cmp
pusha
inc
inc
sbb
addb
cmp
lods
mov
xchg
mov
sub
pop
shlb
gs
stc
adc
jg
leave
jmp
in
inc
call
add
lret
sbbb
lods
sahf
inc
xor
in
xchg
ffreep
cs
adc
dec
jno
or
cmp
cli
out
out
add
repz
xchg
ret
and
lds
sbb
cmp
ljmp
cmpsl
ror
ret
adc
leave
push
dec
sbb
scas
xorl
sub
ret
std
jl
mov
icebp
xchg
dec
and
dec
inc
cmp
nop
inc
sbb
inc
and
pop
add
xor
mov
or
ss
mov
test
aas
mov
or
movsb
mov
mov
dec
icebp
sti
bnd
fscale
dec
xor
and
ljmp
pop
push
divl
sub
fwait
sarl
mov
xor
push
inc
and
cltd
sub
push
sbb
jbe
pop
dec
fiadds
mov
in
or
insb
cmp
xchg
push
dec
icebp
push
loopne
fisttpl
lods
add
ret
dec
fmull
divb
hlt
sbb
out
add
cmpsl
dec
pop
sbb
daa
mov
jmp
addr16
push
inc
fwait
and
icebp
fdivs
call
stos
pop
inc
mov
in
adc
inc
rcrl
cmp
mov
pop
mov
sub
movsl
stos
mov
shlb
pop
call
or
inc
cli
into
xchg
into
jb
fidivrl
mov
lods
outsl
je
cmc
jo
mov
jg
mov
cwtl
push
push
negb
ljmp
jle
nop
data16
push
dec
or
cld
mov
inc
imul
lea
loope
je
mov
imul
push
enter
sbb
scas
repz
push
hlt
sub
stc
aad
push
arpl
leave
int
pushf
dec
sahf
cs
mov
push
in
repnz
xchg
repnz
in
push
cmp
es
push
mov
or
push
sti
mov
sarb
addr16
inc
stos
in
push
inc
xchg
and
sub
mov
mov
or
sbb
inc
out
test
adc
or
shlb
add
mov
and
outsb
shlb
addr16
cmp
stc
lea
and
idiv
mov
fimull
out
scas
sbb
dec
mov
lcall
enter
icebp
mov
cmp
data16
push
mov
jbe
xor
ja
je
sub
adc
stos
in
negl
cmpsb
aas
out
or
pop
out
lahf
sbb
xchg
outsl
pushf
gs
dec
jno
in
mov
fidivs
sub
cmovs
imul
sub
mov
loope
push
sub
arpl
xor
cmpsl
jecxz
imul
or
mov
sub
cmp
les
lret
push
or
xchg
loope
movaps
xchg
and
pop
jo
imul
dec
imul
sub
push
or
mov
bound
inc
inc
and
jno
out
cltd
nop
pop
aas
aas
xchg
lea
pop
fcoms
dec
decl
lds
mov
push
movb
rol
rcl
mov
push
iret
mov
and
jbe
or
sub
adc
xchg
call
cmpsl
xchg
adc
pop
push
repnz
addr16
pop
repz
sbb
sahf
xchg
push
out
sarl
mov
rep
das
cvtps2pd
jg
mov
aad
popa
adc
jnp
int3
arpl
fisubl
add
outsl
jne
push
sbb
lods
imul
test
cmpsl
imul
scas
mov
popf
push
adc
lock
xchg
insb
cltd
push
jg
add
jmp
pusha
clc
pop
add
mov
addb
lock
xor
outsb
int
adc
iret
and
adcl
push
int
jb
dec
shl
mov
mov
pop
pop
cmp
jge
cmp
add
lret
ja
lods
fimuls
aaa
cwtl
mov
add
cmp
jle
mov
mov
popf
lea
popl
bound
adc
add
gs
insb
ja,pn
iret
push
mov
cmpsb
push
subl
mov
stc
jecxz
test
xchg
ss
fisttpl
cmpb
outsl
jne
gs
imul
inc
mov
or
xor
cmp
data16
adc
jno
sti
out
jns
cmpsb
mov
fmul
jg
movsb
add
cld
sbb
adc
dec
stc
test
sub
push
xlat
pushf
sahf
fs
jo
daa
cmp
stc
icebp
add
mov
aas
mov
cli
outsb
xchg
cld
cltd
inc
and
pop
adc
and
pop
cwtl
int
pop
aaa
sbb
mov
test
insl
jecxz
test
xchg
cmp
push
pusha
cmp
xchg
xchg
inc
loopne
rcl
inc
sbb
out
cmp
test
sbb
insb
sbb
lods
loope
sbb
mov
hlt
cmp
cmc
mov
loopnew
pusha
andl
aam
lods
imul
jmp
dec
jnp
push
loopne
je
jmp
sti
xchg
popa
mov
mov
push
and
fs
push
dec
push
ljmp
jl
or
dec
xchg
jns
xchg
les
into
ret
lret
fs
mov
xchg
sub
push
pop
out
popf
loopne
popa
repz
jg
add
out
and
lods
jo
xchg
or
push
sub
fst
inc
xchg
into
jmp
add
and
xchg
xchg
pop
stc
pop
imul
jmp
imul
and
fiaddl
mov
cmpsl
xor
add
xchg
ja
xchg
mov
ds
popf
lock
push
shr
insb
jne
je
pop
pop
es
cmpl
jb
xor
cli
loop
out
sti
scas
mov
les
js
popf
xchg
dec
lcall
daa
lahf
cmpb
cmp
cld
out
lds
cmp
or
sub
movhps
or
bnd
out
push
loopne
enter
mov
sbb
sahf
jnp,pn
cmp
xor
or
xor
js
iret
pop
js
stos
push
shll
dec
xchg
push
mov
xchg
jecxz
jg
dec
sbbl
push
xchg
mov
cmp
lods
sbb
mov
loop
push
or
test
ljmp
std
icebp
loope
hlt
lcall
jmp
data16
mov
aam
sub
xor
and
add
add
mov
std
dec
pop
nop
mov
cmc
lea
xchg
imul
or
out
fsub
icebp
inc
mov
sub
pop
xchg
data16
adc
rolb
pop
ret
jne
pop
jns
add
je
cmpsb
in
cmp
das
push
popf
icebp
idivl
mov
fwait
mov
sub
mov
push
and
test
inc
or
popa
mov
add
add
inc
push
inc
mov
pop
shlb
in
sub
hlt
push
push
aam
sub
mov
cmpsl
pop
ss
fwait
or
loop
lahf
scas
add
xchg
sub
mov
inc
nop
pop
xor
pop
std
and
add
js
inc
ljmp
mov
rorl
xchg
rcl
push
jnp
pop
jnp
popf
movsb
enter
mov
mov
inc
cld
js
testl
and
adc
stos
out
jae
icebp
adc
adc
sti
mov
mov
fcomi
push
mov
test
ret
lret
test
mov
iret
cmp
mov
aaa
das
pop
sub
jno,pn
jnp
sbb
push
pushf
aaa
out
movsl
mov
sarb
xor
scas
les
jg
adcl
int3
iret
adc
push
adc
xchg
scas
and
xchg
and
daa
push
ljmp
in
mov
test
pop
arpl
js
and
int3
psllq
dec
out
jle
add
data16
mov
std
add
in
mov
roll
pushf
xchg
lods
or
outsl
jno
mov
movsl
insb
shl
gs
mov
adc
inc
dec
inc
mov
or
add
sbbl
adc
cmp
out
mov
sub
repz
scas
leave
sub
xor
test
ss
dec
test
dec
xor
add
aam
int
pop
pop
push
inc
lods
fincstp
adc
and
mov
fstpl
add
aaa
es
loope
lret
cmp
sub
mov
or
inc
xchg
lods
jnp
aam
cmp
test
and
scas
sub
inc
movsb
scas
jmp
repz
enter
cmpb
iret
add
pop
cwtl
ret
cs
insl
adc
repz
stc
inc
xchg
aas
inc
dec
imul
movsb
sbb
xor
out
shl
xorl
sbb
push
unpckhps
or
sbb
shll
aam
cmc
jmp
adc
call
hlt
mov
adc
sbb
imul
sti
cmc
lea
cs
or
cltd
lock
fistpll
and
jb
ljmp
push
sbb
gs
mov
repnz
dec
sarl
ficomps
jb
push
int
fsubrs
test
pop
push
std
sbb
movl
enter
mov
aam
push
adc
cs
sbb
push
push
push
cmpsl
adc
sbb
je
aas
enter
je
movsb
inc
xchg
push
rcr
testb
mull
push
fmull
gs
call
pop
adcl
shll
or
adc
pop
fs
mov
cvtps2pd
sbb
pop
inc
or
movsb
xchg
mov
imul
clc
mov
lret
mov
pop
jno
ja
sub
in
sub
outsb
add
sub
rolb
pop
xchg
ds
adc
iret
mov
arpl
scas
xchg
inc
xor
mov
lods
popa
xchg
movsb
xchg
movsb
imul
jp
and
rorb
push
mov
sti
cmp
lea
xor
dec
ficoms
mov
popf
out
or
lds
sub
inc
das
adc
scas
sub
mov
ljmp
jle
pop
add
out
test
mov
cs
jno
inc
jge
cmp
bound
sbb
mov
mov
mov
mov
cmp
dec
test
or
pop
imul
and
mov
cs
jg
pusha
iret
rcll
mov
pop
cmp
pop
push
aad
in
pop
lret
insl
mov
je
in
scas
dec
popa
jge
push
inc
jmp
aas
iret
cwtl
sahf
mov
cmp
and
aam
pop
sbb
sahf
xchg
js
dec
idiv
inc
fs
xor
inc
insb
xchg
xor
inc
or
int
ret
or
sbb
inc
mov
push
aaa
inc
jge
and
xchg
int
loop
popf
lds
rcrl
ret
xor
sti
out
outsb
xor
mull
imul
push
lahf
adc
and
scas
pop
negl
and
daa
rorb
cltd
mov
andb
out
sub
and
adc
lahf
pushf
scas
xchg
rcrb
test
pop
jbe
ljmp
mov
adc
fisttpl
mov
rcrl
adc
out
inc
or
mov
xor
mov
pop
repz
sub
adc
cmc
push
lcall
mov
inc
stc
xchg
adc
push
or
sti
fidivl
and
adc
aam
push
push
adc
and
add
dec
xchg
filds
clc
xchg
or
mov
and
loope
clc
lods
lcall
lret
hlt
roll
cmp
outsl
repnz
mov
mov
fwait
shll
addr16
adc
push
lods
fwait
aas
xlat
adc
insl
sub
int
cmpsl
mov
jle
std
daa
and
add
dec
inc
fcompl
mov
xchg
mov
je
cmp
sub
xlat
add
cmpsl
pop
and
xor
cmp
lods
test
dec
push
mov
iretw
xchg
dec
mov
rorb
sub
cmp
lret
loope
inc
mov
mov
push
cmp
adc
sub
scas
jns
int
stc
divb
test
mov
cmpsb
jns
sbb
mov
pop
ficomps
ficoms
push
movsb
and
lcall
popf
cmp
sarb
aam
test
mov
and
in
or
mov
jb
mov
inc
shll
push
cmp
mov
pop
mov
fsub
jl
aam
mov
and
xchg
mov
xlat
out
adc
flds
inc
xor
xchg
push
push
and
pop
jge
mov
sub
rcll
cwtl
mov
xor
pop
jmp
sub
jge
jmp
lea
imul
sbb
mov
pop
je
push
out
push
mov
cmp
mov
out
das
xchg
aam
lds
popaw
fiaddl
pop
sbb
hlt
lods
sti
sub
sbb
or
pop
test
sbb
gs
sbb
mov
aam
nop
jmp
or
mov
or
push
sarl
repnz
and
adc
fistpl
sub
jl
stos
or
cmp
in
add
nop
pop
icebp
mov
sbb
and
push
inc
push
subl
cmp
nop
dec
inc
cmp
arpl
mov
testl
pop
mov
dec
pushl
rorl
adc
and
and
roll
mov
cld
or
and
fistl
or
rclb
shrb
xchg
mov
inc
mov
and
dec
fwait
cmpsb
cmp
sub
iret
sub
adc
divb
add
sahf
jo
jp
mov
orb
int3
leave
out
sbb
xchg
jl
in
sbb
adc
mov
ja
xor
and
push
mov
xor
mov
je
add
mov
pop
in
mov
jb
out
test
cs
in
lds
mov
test
out
sarb
sbb
cmpsb
jge
imul
in
sbb
push
dec
shll
jp
rol
or
les
mov
leave
daa
sbb
pop
adc
mov
xor
repnz
lds
out
xor
xor
xchg
xor
cmpsl
shr
dec
sub
inc
pop
dec
shrl
lods
jmp
ret
leave
stos
jb
rorl
xor
and
pop
in
sub
or
mov
dec
int
or
ret
push
scas
push
and
inc
insl
cli
mov
jg
dec
or
pop
and
outsl
mov
xor
loop
mov
js
inc
xchg
stos
or
fistpl
jg
sub
mov
loop
sbbb
lods
cltd
jae
and
cmp
xorb
and
push
fnsave
pop
je
adc
andl
loope
int3
mov
push
inc
loope
push
inc
fdivrl
loope
mov
ss
fldcw
addr16
cmpsl
hlt
mov
push
mov
in
jmp
insl
inc
sub
pop
test
push
std
int3
in
fadds
pop
aas
sbb
ds
jecxz
inc
es
clc
sub
shl
cmp
nop
test
cmpsb
dec
ljmp
mov
lahf
dec
cmpsb
jno
lret
fidivrs
aad
xor
inc
lods
rcl
mov
jl
cmpsb
inc
addl
mov
fiaddl
mov
mov
mov
mov
lahf
add
test
inc
test
adc
daa
push
mov
icebp
and
xor
loopne
stc
jae
fs
call
mov
mov
repz
add
mov
into
cmpsb
mov
outsb
inc
sub
jae
push
pop
sbb
sub
cmc
lds
es
mov
fwait
je
sub
lea
insl
fstpl
sub
push
mov
adc
rorb
loop
movsl
push
ljmp
jge
fdivrs
sbb
sub
cli
sub
xor
lahf
sbb
popa
arpl
inc
sub
push
jns
inc
mov
xchg
adc
push
shlb
fisubl
xchg
stos
push
inc
sbb
xchg
xor
lret
mov
inc
cmpsl
cwtl
jle
lahf
xchg
push
std
pop
int
and
push
mov
fsubrs
cwtl
mov
lock
jg
in
jp
andl
xor
iret
fidivs
out
repnz
inc
pushf
dec
push
xor
sarl
mov
xchg
sbb
adc
push
cltd
xor
xorb
sti
push
pusha
imul
mov
int3
dec
pusha
rcll
sub
mov
fs
int3
add
in
xor
cmp
jne
cmpsl
into
push
insl
lods
cwtl
loopne
jb
lock
jae
pop
aad
xor
mov
push
leave
mov
jecxz
sub
sub
gs
inc
leave
mov
stc
lret
mov
sub
jmp
xchg
dec
into
movsb
sub
ret
pushf
ja
hlt
add
shlb
cltd
adc
jo
insl
sbb
or
out
xchg
enter
inc
dec
or
aaa
pop
hlt
lea
sbb
fcoms
es
fs
sub
add
fcomip
mov
test
cmp
push
cmpl
jnp
mov
jae
and
xchg
hlt
mov
jmp
or
xor
mov
xorb
pushf
add
push
mov
dec
mov
xchg
pop
mov
sbb
je
jle
cmp
sub
std
ja
cmp
mov
pop
cmp
stc
inc
cmp
je
insl
cmp
out
fisubrs
rol
jns
mov
jmp
add
sub
ljmp
pop
adc
dec
loope
mov
pushf
test
xlat
inc
outsb
add
push
fldt
push
test
jnp
mov
pop
scas
lds
mov
push
cli
incl
dec
std
scas
push
push
daa
push
adc
sub
jmp
lock
xor
test
xchg
stos
mov
shll
cwtl
adc
adc
lret
js
aas
cmp
js
int
popa
dec
call
dec
pop
jmp
push
in
data16
and
je
and
addb
dec
push
lcall
sub
inc
mov
adc
add
leave
xchg
mov
pop
sub
jmp
push
mov
jp
fsubr
push
cltd
stos
mov
sbb
sbb
xlat
hlt
push
push
xchg
xor
inc
add
push
mov
mov
jne
adc
pushf
daa
gs
pshufw
inc
js
adc
mov
sbb
js
mov
dec
or
pop
cmpsl
xchg
int3
das
pop
add
xchg
shl
movsb
cmp
cmpsl
sahf
xchg
and
lret
es
data16
aam
es
xorl
rorl
jle
ret
idivb
das
dec
sbb
int
nop
push
add
divb
mov
jge
mov
ret
outsl
fstps
arpl
stos
xlat
jnp
jae
in
xchg
xchg
mov
inc
clc
call
add
cmpsb
in
jle
jp
in
dec
xlat
test
mov
push
je
add
out
mov
ds
jns
add
lods
cmp
jo
in
mov
je
loopne
pop
mov
jo
dec
sqrtps
aad
xor
fwait
js
mov
jg
pop
ds
sbb
sbb
and
mov
les
jmp
sbb
inc
push
jp
dec
mov
imulb
cltd
ja
jne
cltd
mov
jo
scas
daa
fstpl
movsb
jle
ljmp
test
fildll
jb
push
jg
lret
pop
jae
inc
fcoml
in
inc
mov
jg
out
xchg
shlb
push
jecxz
xchg
incb
lock
in
idiv
dec
add
setns
fdivrs
ss
out
mov
lea
dec
and
shlb
lahf
sub
pop
add
jp
xor
inc
push
and
jno
dec
shlb
xchg
push
daa
inc
test
add
repnz
push
add
inc
pop
sbb
int
dec
or
aaa
loope
push
cmpsl
mov
push
rclb
inc
mov
jne
mov
shlb
pushf
add
cli
jnp
xchg
push
mov
mov
push
test
enter
dec
sarl
out
lcall
adc
and
je
cmc
sub
sub
dec
add
mov
stc
dec
sub
pop
lds
cmp
lahf
or
enter
ret
adc
imul
jle
cmpsb
hlt
test
mov
adc
adcl
xchg
test
int
dec
inc
and
sbb
inc
mov
sahf
int3
leave
cltd
jl
pop
popa
xchg
inc
or
pop
shrl
dec
pop
sbb
mov
fsubrp
in
push
xor
movsb
cld
fsubrs
inc
xchg
jl
jle
sub
outsb
cvtdq2ps
xor
and
add
mov
jns
xchg
lods
mov
push
mov
dec
repz
mov
push
idivb
xor
adc
fwait
dec
adcl
stos
adc
stc
inc
icebp
cmp
das
jge
scas
enter
gs
sarb
sahf
mov
loopne
add
push
jnp
ds
fs
cmpl
fwait
mov
mov
mov
cmpsl
cmpsb
int3
sbb
push
cmpsl
outsb
sub
lock
pop
mov
sarb
sub
fdiv
je
xor
adc
icebp
scas
cmpsb
lcall
or
mov
imul
xchg
js
or
ret
daa
stos
lods
orb
xor
mov
test
sbb
inc
dec
mov
fincstp
sbb
fbstp
mov
pop
dec
adc
xor
sub
mov
scas
jge
sbb
loopne
push
aad
dec
cs
or
dec
mov
adc
mov
movsl
sahf
jae
jmp
push
sub
jge
cmp
push
xchg
sbb
sbb
mov
jge
cmp
sub
gs
lods
mov
push
fdivrl
orl
mov
push
push
imul
lcall
mov
and
lret
aas
mov
mov
lods
shrb
dec
lahf
arpl
out
idivl
or
cmp
shll
cld
into
repnz
nop
jns
clc
shll
les
sub
sti
pusha
shll
in
fcompl
push
xor
stc
add
cltd
inc
sbb
imul
call
mov
das
ror
aas
es
adc
sub
movsb
or
orb
daa
popf
and
and
movsb
sbb
jnp
pop
pop
mov
nop
fmuls
movsb
mov
mov
jns
shrb
int
pop
mov
jle
and
movsl
jae
xchg
shr
mov
ret
inc
sub
xchg
mov
or
popf
jo
rclb
insl
cmpsb
aad
jo
pop
mov
adc
cmp
adc
push
pushf
das
fs
sahf
pop
push
and
dec
insb
cli
jo
es
pop
fnsave
stos
and
js
mov
in
pop
cmpsb
fwait
mov
xchg
cmp
lahf
pop
mov
insb
sbb
movsl
test
scas
stc
stos
pop
cmp
sub
cmc
sub
push
jne
data16
idiv
xor
testl
sub
les
add
mov
adc
les
into
inc
fucom
inc
xor
stos
aaa
cli
hlt
dec
sarb
sbb
test
push
add
enter
popf
jae
neg
push
cmp
mov
sub
popf
in
and
loopne
sbb
rolb
and
adc
lods
xchg
lcall
ds
inc
and
repnz
adc
and
sub
loop
inc
dec
xor
push
adc
jns
leave
arpl
add
clc
adc
ds
outsl
jbe
pop
in
add
enter
mov
popa
shl
aad
mov
mov
or
xor
mov
or
mov
hlt
leave
int
mov
movl
into
lcall
adc
inc
sub
pop
mov
mov
add
sahf
xchg
in
lret
test
add
pop
jg
mov
loop
in
xor
arpl
sub
or
aam
outsb
and
imul
jle
mov
mov
je
call
jo
jmp
out
fcmovb
les
mov
cltd
imul
cmpsb
outsb
sbb
cs
xchg
mov
sub
bound
aas
adc
je
rcrb
repnz
pop
sub
out
divb
out
mov
js
scas
fcoml
mov
lods
rcll
mov
loope
repz
fdivs
mov
and
fsubrl
mov
je
and
xor
ret
into
push
cltd
adc
or
popaw
xor
scas
jge
ret
xor
xchg
mov
inc
std
insb
pop
sub
ret
cmc
pop
mov
movsl
xchg
sub
enter
out
jp
and
or
and
js
leave
jg
push
into
or
jecxz
push
fcmovne
adc
loope
push
lea
or
jo
sub
pop
xchg
ljmp
push
shrl
dec
icebp
lock
push
fdivrs
xor
out
pushf
xchg
rcrb
xchg
mov
push
int
jo
ficompl
fcomps
jae
jnp
mov
shlb
ror
movl
add
rclb
xlat
mov
mov
iret
outsb
lcall
loop
leave
jp
and
xchg
mov
dec
and
subb
adc
movsb
movsl
mov
mov
pop
inc
clc
jns,pt
insb
and
adc
icebp
xor
pushf
ja
pop
test
add
ret
lahf
xor
subl
push
push
js
push
nop
mov
jno
rcrl
pop
shll
mov
inc
xlat
push
lret
and
cmp
sbb
mov
dec
test
fld
fdivrl
jge
jns
and
cmp
out
loope
xchg
cltd
pop
lods
adc
sub
into
aas
jb
ficoml
push
mov
call
mov
and
in
inc
fidivs
pop
mov
sarb
movsb
ficompl
jb
into
mov
hlt
rcrb
xchg
pop
add
push
and
icebp
jae
inc
bound
inc
inc
add
inc
into
outsb
cs
inc
push
inc
or
mov
sub
cwtl
lret
or
jp
xor
lds
inc
insl
xchg
push
dec
sub
mov
mov
sub
sub
push
pop
pop
aas
iret
inc
jmp
popf
out
idivb
or
outsb
mov
insl
adc
pop
xchg
in
jl
mov
add
cltd
lock
out
adc
cmpl
mov
mov
fcoml
sub
adc
cmp
add
cmp
sbb
xor
jge
adc
push
push
xor
jne
daa
add
sti
int3
xchg
and
repz
lock
pop
sbb
mov
jnp
mov
imul
and
sub
daa
mov
xor
inc
jg
or
ljmp
and
jb
aas
push
push
insb
mov
jmp
addr16
test
jg
add
xchg
inc
insb
mov
sub
psubw
xor
cmp
mov
mov
sbb
dec
pop
xor
dec
mov
je
jo
enter
mov
sbb
cltd
mov
mov
mov
orl
shll
push
in
faddp
daa
rcrb
in
jnp
or
sar
fsubrl
ret
pop
sbb
shll
pop
adc
jmp
push
cltd
sbb
and
push
pop
xchg
lods
rolb
subb
out
mov
out
mov
and
mov
mov
lods
ds
fimuls
jno
pop
cmp
loop
mov
imul
cmc
inc
xchg
mov
dec
popa
dec
push
std
fwait
lea
into
xor
cltd
push
cmp
pusha
add
push
pop
fwait
lods
das
test
icebp
dec
adc
xchg
push
pop
sbb
int
test
pusha
xorb
pop
in
xchg
and
mov
jmp
or
push
jo
sbb
shlb
push
xor
and
xchg
out
jl
test
mov
sub
cmp
aaa
cld
add
daa
sub
cwtl
jecxz
mov
aad
sbb
inc
mov
les
ljmp
jmp
push
adc
pop
or
fldl
xor
fidivs
xor
lods
out
push
lret
call
xor
mov
cmp
push
cmp
test
call
rcrl
dec
rcrl
int
enter
test
pushf
mov
or
inc
add
stc
sub
fisttpll
pop
mov
inc
outsb
cmpsl
call
and
jge
push
clc
xchg
mov
xor
stc
push
test
cmp
dec
outsb
fldt
ret
xchg
cmp
test
mov
out
xor
outsl
outsb
addr16
push
jp
filds
mov
mov
xchg
mov
xor
movsl
gs
test
or
lods
sbb
or
mov
data16
jns
rcrb
lea
fisubrl
test
repnz
or
push
push
mov
out
jbe
sub
push
scas
mov
rcpps
testl
lods
in
test
jecxz
and
imul
pop
xchg
sarb
adc
push
pop
jns
mov
pop
inc
mov
add
mov
gs
into
fwait
push
notb
hlt
pcmpeqd
addr16
jnp
movsb
fsubl
or
rorl
into
add
jnp
push
test
or
decl
dec
repnz
pop
stc
mov
in
xor
mov
or
mov
insl
outsl
dec
in
mov
pop
jg
add
arpl
dec
mov
push
pop
mov
xorb
in
sbb
and
mov
gs
push
push
cmp
dec
lcall
inc
dec
xlat
sub
sub
in
mov
jg
cmp
sti
push
mov
test
cld
cmc
cld
adc
fmuls
out
loop,pt
mov
inc
cmpsb
lahf
test
cltd
push
call
mov
icebp
outsb
dec
popf
xchg
ret
jns
cmp
arpl
pop
enter
ds
add
aam
mov
out
push
sub
test
lahf
movsl
dec
cmp
loopne
mov
clc
mov
aad
mov
out
jae
insl
in
gs
xchg
insb
inc
insl
mov
sub
cmp
push
jo
in
mov
decl
int
xorb
popa
into
movntq
push
test
mov
pop
mov
inc
add
movl
and
lds
xor
ficompl
mov
lcall
outsl
inc
shr
mov
sbb
xchg
inc
xchg
xor
scas
shll
into
push
dec
dec
inc
in
dec
icebp
mov
scas
mov
push
xchg
xlat
dec
sti
ja
adc
fimull
das
stc
jmp
lods
cmp
pusha
sub
fldt
and
cmpb
jnp
outsl
cmpsb
mov
push
loope
ds
mov
mov
cmp
mov
jp
sub
je
pop
inc
push
arpl
xor
add
mov
dec
std
mov
test
jle
movsl
sbbb
push
test
add
das
frstor
popa
sbb
add
addr16
lret
addb
idiv
mov
pop
shrb
stc
cwtl
dec
jl
out
mov
sub
and
or
lret
mov
xorb
mov
stos
enter
arpl
jecxz
mov
or
inc
sub
xor
mov
fwait
add
fcmove
mov
lock
cmpxchg
jns
pop
jae
inc
out
xor
int3
fs
xchg
mov
inc
loope
call
nop
jmp
xor
pop
adc
in
notb
push
xor
ja
mov
pop
mov
add
bound
gs
testb
push
mov
mov
insl
and
sub
or
ja
test
mov
fldenv
repnz
iret
stos
mov
icebp
testl
pop
mov
sahf
add
sub
sbb
adc
lea
cld
mov
pop
loopne
cmp
bound
lea
push
xchg
xor
stos
idivb
mov
mov
fadd
cmpb
mov
sbb
repz
dec
idiv
addr16
test
inc
xor
movsl
mov
adc
cli
or
mov
inc
cld
lock
popf
aam
test
out
sbb
xchg
dec
jl
xor
sbb
mov
leave
mov
aaa
aam
or
sbb
jle
or
aam
stc
lret
fstpl
push
mov
popa
arpl
xor
jge
cmp
scas
pop
jg
lcall
inc
out
push
mov
popf
mov
cmp
push
sahf
inc
fwait
pop
test
xorb
pusha
fwait
aas
out
popa
pop
movsl
out
or
inc
pop
dec
in
ljmp
push
xor
loope
arpl
cli
out
jmp
mov
adc
mov
mov
pop
sbb
fdivp
sub
xor
fists
xor
cltd
fisttpl
pop
test
push
je
pop
xchg
cmpsb
sti
xchg
dec
add
sbbl
mov
arpl
mov
add
dec
pop
int
xlat
mov
mov
xchg
loope
rorl
ljmp
inc
sbbb
lcall
hlt
inc
cmpsb
hlt
adc
std
in
xchg
lea
add
jg
push
lret
out
pop
cmp
jmp
add
adc
popa
mov
mov
sbb
pop
lds
rcll
xchg
dec
or
mov
clc
icebp
xor
addr16
xlat
imul
xor
and
fucomi
mov
xchg
iret
js
mov
xchg
cmp
cld
mov
dec
lcall
jnp
rolb
cmp
lret
data16
dec
pop
aaa
xor
and
out
les
je
sbb
icebp
xchg
clc
mov
xchg
push
aas
lds
dec
fs
sub
out
xlat
add
orb
loope
sbb
lret
push
popf
and
movsl
xor
loope
jne
mov
or
mov
repz
sub
cwtl
sub
inc
push
insb
in
mov
or
mov
test
lock
push
repnz
sti
lret
je
test
mov
popl
in
ja
dec
movsb
inc
imul
dec
sub
mov
cli
or
add
mov
cmp
cltd
lods
xchg
adcl
ja
xorps
sub
add
or
out
syscall
cltd
and
mov
out
ss
inc
cmc
arpl
xchg
push
bound
sub
push
inc
dec
pusha
sub
les
pop
scas
cltd
sti
aam
cmpl
iret
gs
inc
in
movsb
mov
mov
jmp
fldenv
mov
es
and
push
mov
mov
add
data16
frstor
dec
adc
aaa
clc
cmp
ja
inc
fldl
mov
cmpsb
jl
in
iret
sub
cli
in
dec
jg
xchg
jmp
sub
add
les
cli
fdivrs
dec
fmuls
ja
xor
xchg
cmp
sub
pushf
sub
jno
scas
repnz
das
xchg
pop
sbb
sub
addr16
xchg
scas
mov
enter
jp
insl
imul
jbe
in
lret
loopne
orl
xor
xchg
mov
add
mov
loopne
mov
aas
dec
xchg
lret
cmpsl
lahf
push
xchg
rolb
adc
dec
inc
cmpsb
xchg
or
mov
add
cltd
pusha
or
lcall
add
cmp
lods
push
cmp
call
and
mov
push
out
xor
add
mov
xor
imul
loope
cmp
sub
mov
pushf
sub
test
packuswb
and
mov
sbb
add
mov
lret
fcomip
jmp
push
pop
jae
xor
sahf
xchg
jle
inc
mov
and
shrl
in
sbb
int3
subl
clc
cs
xor
mov
inc
cmc
sub
pop
dec
stc
lret
xchg
fwait
sub
mov
repnz
aaa
pusha
pop
lds
and
dec
jmp
scas
sub
sbb
cmp
jmp
dec
mov
loope
adc
pop
jmp
jecxz
mov
xchg
pop
fnsave
or
jbe
adc
xor
dec
lods
adc
xchg
in
roll
pop
test
push
insl
imul
in
dec
jb
test
push
int3
inc
add
test
lea
lcall
outsl
dec
cmp
adc
ja
test
les
push
xchg
cmp
mov
lods
addb
mov
addr16
sbb
pusha
lods
dec
adc
sub
xor
andb
xor
ljmp
sarl
out
push
mov
sbb
inc
outsb
inc
insb
add
xor
and
cmp
movsl
dec
adc
shrl
sbb
inc
mov
sbb
loop
mov
test
iret
cmp
iret
mov
setne
mov
push
ret
stos
jno
pop
movsb
fldenv
dec
stos
pop
pop
sub
mov
mov
movsb
rorl
jmp
mov
dec
arpl
test
and
mov
out
lahf
and
lcall
xchg
mov
test
push
lahf
inc
xchg
lret
and
xchg
dec
loope
cltd
jno
sbb
sahf
arpl
enter
aas
repnz
xchg
sub
int
cmp
dec
scas
into
pop
movsb
mov
nop
mov
pop
gs
repnz
jns
cmpsb
inc
loope
jae
pop
sbb
push
aam
pop
jnp
mov
shll
dec
add
mov
push
scas
inc
mov
aad
dec
jmp
punpcklwd
pop
sahf
jge
or
sbb
add
rcr
sbb
addr16
cltd
adc
outsl
adcb
cmp
inc
sbb
inc
loopne
sbb
add
xchg
xlat
repnz
aad
loopne
jnp
inc
test
jbe
lods
cwtl
cltd
dec
sbb
int3
jle
and
mov
jl
pusha
and
inc
pop
pop
les
xor
xor
scas
andl
pop
sbb
mov
je
aaa
xor
pushf
rcrb
into
popa
rolb
aaa
addr16
rorb
mov
adc
xor
addl
rcrb
mov
sub
ret
lret
scas
fs
mov
sbb
lods
mov
lret
jg
data16
stos
loopne
lods
push
lcall
dec
shlb
xor
dec
or
int3
pop
outsl
lret
lods
pusha
adc
nop
xor
xor
jno
jo
nop
pop
mov
jo
jae
add
mov
loope
push
dec
fildll
daa
cmc
sbb
loopne
es
mov
cltd
movsb
sahf
shl
stos
push
loopne
aad
jecxz
shl
ja
jnp
xchg
adc
popa
push
and
push
insb
jae
ret
cmovs
movsb
cmp
out
popf
jl
cmp
lea
lret
inc
cld
clc
addr16
add
cmp
cmpsl
xchg
add
mov
aaa
je
xchg
les
cmp
test
mov
cmp
mov
and
cmpsb
jnp
mov
je
sbb
enter
mov
lret
fadds
stos
iret
test
in
icebp
lea
xlat
lock
cmp
mov
inc
pop
and
xor
dec
xor
call
lock
xchg
jmp
cmpsl
data16
sub
gs
cmp
enter
sbb
loopne
es
daa
jp
mov
cmc
pushf
cmpsb
loope
cwtl
cli
mov
push
mov
or
aaa
fs
or
jecxz
loope
daa
into
rcr
push
ficoml
mov
jne
cmp
fwait
stc
icebp
or
sub
jb
jae
or
xor
add
xor
dec
imul
std
dec
sbb
cmpsl
cmp
xor
ja
sub
movsb
add
inc
sub
or
test
xchg
and
mov
adc
scas
lahf
frstor
fnstsw
cmp
xorl
in
subb
push
scas
push
movsl
dec
push
int
jo
ljmp
movsb
outsl
cmp
outsl
shr
mov
fsubs
orl
mov
or
pop
das
sahf
pop
sbb
jb
dec
dec
pop
jns
aam
add
pushf
mov
pop
lods
cmp
cmp
fdivl
cwtl
push
adc
cltd
ljmp
sahf
mov
pop
xchg
leave
sbb
pop
mov
subb
in
dec
movsb
loop
fdivs
notb
adc
jl
andb
xor
ss
movsl
jge
test
paddusb
in
push
mov
shlb
inc
mov
in
mov
pop
adc
testb
es
pop
pop
xor
ljmp
lcall
mov
pop
cltd
incl
or
mov
jb
cltd
inc
movsb
or
mov
leave
mov
inc
xor
lds
in
int3
push
subl
imul
mov
add
scas
dec
aaa
sub
imul
adc
and
xchg
cmp
pop
xor
gs
cwtl
or
insb
xor
xor
hlt
movsl
or
or
push
mov
sbb
lret
cmp
mov
lock
push
mov
push
sbb
into
nop
aaa
stos
in
dec
inc
cs
lahf
int3
pop
inc
stos
cmc
stos
pslld
xor
ja
scas
xor
lret
shll
jnp
jle
js
mov
add
test
add
push
sbb
insl
ljmp
sbb
movl
sub
cmp
test
sub
hlt
jecxz
adc
pusha
je
rorl
or
add
rol
mov
jno
popa
pop
rclb
aaa
sbb
and
mov
dec
negl
inc
test
fcoml
sbb
icebp
and
cmovbe
mov
lcall
addr16
mov
out
push
or
nop
add
sub
or
push
mov
xchg
imul
or
sti
cs
std
std
pop
pushf
mov
cmpl
jno
pop
jb
or
out
aam
mov
or
xchg
lea
sbb
nop
inc
push
fwait
inc
out
leave
pop
out
cwtl
ret
mov
sti
adc
insb
fsubrp
popa
incb
sub
adcl
cmp
push
sub
push
ja
dec
cmp
mov
loop
xor
aam
xchg
sti
pop
xor
fsub
cmpsl
cli
jo
xchg
test
scas
fists
xchg
jae
push
mov
mov
fwait
fs
push
test
and
sbb
idivl
rol
mov
fisttpll
aas
jns
or
bound
popf
dec
xlat
sub
int3
outsb
repnz
and
cmp
jle
das
loop
dec
push
ret
adc
jne
fisubrl
int3
cmp
data16
decb
test
mov
dec
fcomps
scas
jb
lret
orl
sbb
add
mov
and
pusha
ficomps
outsb
inc
mov
cmp
outsl
adc
cmpsb
adc
adc
insl
dec
ss
cmp
out
or
stos
in
mov
jo
add
out
repnz
adcb
iret
xor
inc
cld
call
push
gs
je
jle
pop
lcall
pop
sbb
scas
imul
imul
inc
iret
lret
mov
or
icebp
imul
imulb
inc
out
lret
stc
xchg
dec
push
xchg
xchg
shlb
or
mov
xchg
jbe
and
inc
pop
mov
push
jle
adc
jl
add
movsb
add
push
dec
or
mov
enter
fbld
pop
cmp
jns
movntps
xor
pop
mov
dec
mov
mov
es
jne,pt
mov
push
dec
mov
inc
ljmp
mov
movsl
push
lcall
cmp
add
repnz
and
xchg
outsb
mov
arpl
xchg
pop
mov
imul
inc
or
inc
mov
mov
ret
adcl
or
stos
xchg
daa
mov
mov
test
jp
int3
adc
mov
in
pop
pop
fildl
sarl
pop
adc
pop
pop
les
adc
outsb
sbb
imul
jp
cmp
jae
into
ss
push
xor
fsubs
jmp
shl
push
addr16
push
mov
sub
rorb
xor
push
mov
cltd
loop
fwait
cwtl
jne
mov
lcall
jbe
push
xchg
xor
imul
test
mov
inc
mov
in
outsb
loope
jb
adc
add
xchg
data16
mov
xor
mov
ret
dec
rorb
sub
adc
mull
pop
ljmp
and
xlat
ret
dec
daa
lcall
xchg
cmpsl
cmp
out
mov
push
testl
lods
shr
adc
push
lods
scas
mov
rolb
sub
imul
ljmp
add
pop
movsb
lods
jge
push
xchg
pop
insb
mov
pusha
lock
nop
shlb
fwait
sub
mov
daa
cs
gs
gs
cltd
jbe
data16
jns
cmp
add
in
lahf
dec
sahf
pushf
jno
add
in
loop
sbb
ds
inc
mov
mov
aaa
inc
in
cmp
leave
jne
sti
and
stc
and
xorl
js
lahf
cmc
lahf
into
fisubl
daa
mov
test
dec
push
or
fs
fwait
scas
cs
jp
inc
out
jo
cmp
int3
adc
in
jl,pn
pop
cld
and
movb
mov
mov
push
jne
pop
sahf
dec
sub
movsb
inc
push
dec
mov
and
pop
mov
cmp
xchg
mov
out
sub
arpl
mov
adc
ficoml
pushf
push
sarl
cmp
aas
mov
movzwl
and
dec
dec
jno
sbb
xchg
iret
adc
lock
das
jb
sub
jno
xchg
xchg
mov
dec
ud0
movsb
mov
test
lret
stc
sbb
test
cmp
into
rclb
xchg
loopne
outsl
fdivr
jo
pop
mov
xchg
cld
pusha
dec
sbb
rorl
popf
mov
cld
and
push
and
fwait
loope
sub
cmp
fldcw
in
push
pop
adc
mov
push
mov
xor
std
or
rcrb
cli
in
pop
enter
pop
orl
aas
loopne
inc
imulb
ss
aaa
adc
add
outsl
sub
ss
jnp
ret
repnz
dec
test
push
cmp
loop
mov
cmp
sub
dec
gs
bound
add
push
jns
mov
ror
aam
cmp
popf
push
and
fisttpl
or
push
int3
jno
fcmovb
add
or
mov
scas
pop
loop
xchg
int3
or
ss
pop
adc
into
lock
mov
imul
movl
popf
fisubrs
lea
mov
clc
pop
xor
fdivrs
push
add
sub
movsb
call
ror
iret
lcall
addr16
jo
mov
jno
pusha
gs
mov
add
push
out
lret
dec
outsb
mov
aam
xchg
jno
pusha
mov
or
adc
dec
ret
xor
xlat
xor
ja
mov
testl
iret
mov
int
jbe
cmp
inc
jo
adc
fildl
clc
or
adc
or
mov
add
mov
sahf
inc
jle
sbb
jns
insb
fs
fchs
jge
daa
loope
adc
mov
out
inc
jo
pushf
scas
outsl
adc
in
repz
sub
subl
and
cli
out
sbb
jo
and
mov
xchg
out
xor
test
add
jmp
or
popa
outsb
cli
popa
pop
pop
rorl
jbe,pt
adc
mov
jae
mov
outsb
jg
lret
dec
xchg
or
inc
mov
xchg
mov
insl
hlt
in
sarl
jbe
adc
mov
test
push
jp
adc
inc
fiaddl
iret
lcall
xor
inc
add
lods
xbegin
sbb
xchg
adc
jb
inc
xchg
ficoml
int3
test
push
loope,pt
or
sbb
mov
mov
lcall
icebp
aas
jp
daa
stc
xchg
add
adc
ret
mov
xchg
sbb
mov
adc
in
inc
sar
in
js
test
test
and
lods
pop
stc
dec
decb
or
cmpb
cmp
inc
imul
fld
mov
xchg
cmpsl
xlat
mov
mov
insb
outsb
je
test
sbb
add
push
mov
jo
test
pop
and
stos
sbb
jle
cld
test
sbb
mov
mov
xor
pop
adc
dec
dec
mov
cmp
mov
test
movsb
pop
aas
jp
sbb
vmovhlps
adc
aas
mov
icebp
jle
sub
movsb
jle
shr
sbb
cmp
clc
popf
incb
hlt
outsl
cmc
xchg
mov
mov
and
imul
negb
or
pusha
inc
adc
jl
jns
int3
sbb
arpl
and
aam
rcrb
call
call
add
xor
es
pop
add
push
adcl
push
dec
pop
cs
scas
mov
mov
xchg
or
add
popf
popa
jmp
inc
inc
sbb
or
aaa
loop
sbb
test
dec
imul
and
sbb
test
cmp
pop
mov
xor
pushf
ret
jno
pusha
fisttps
lahf
imul
jl
jne
add
mov
daa
in
cmp
inc
xchg
nop
cmc
test
out
inc
cmpsb
mov
sti
jle
jae
jl
mov
jmp
call
xchg
loop
call
sub
outsl
insl
test
sbb
arpl
sbb
jg
pop
fs
jae
xor
xchg
lock
cmpsb
sbb
and
stos
xor
jo
inc
mov
adc
jnp
push
dec
add
clc
in
xor
lea
and
out
push
push
sub
loop
mov
mov
pop
out
mov
and
mov
iret
inc
aam
add
cmpsl
xor
fmul
mov
or
aas
jp
cmpsl
ret
lcall
and
xchg
movsl
inc
or
sub
pop
xchg
outsb
lods
repnz
adc
subb
adc
mov
push
push
mov
ja
iret
pop
cmp
jmp
xchg
adcb
int3
outsb
inc
mov
fcoms
movsl
shlb
fs
fs
mov
mul
into
in
mov
out
test
xlat
mov
pop
mov
test
inc
dec
push
pop
push
pop
in
std
sbb
ds
lds
notl
or
dec
hlt
push
cmp
or
mov
sbb
cmpsb
adc
mov
pop
arpl
scas
inc
jae
jbe
sub
out
and
push
test
adc
xchg
popa
sbb
ds
fwait
lods
mov
cmpsb
push
fsubs
dec
aad
mov
push
mov
enter
inc
xchg
je
insb
test
mov
dec
data16
out
mov
addr16
sbb
sub
xchg
lea
aam
pusha
xor
fwait
icebp
loopne
js
les
pop
adc
push
stos
and
dec
xchg
pop
xchg
lahf
hlt
rolb
fcoms
push
inc
cmp
jns
jnp
jp
pop
addr16
aam
jle
or
in
dec
pop
leave
aam
les
sbb
inc
pop
rorl
loope
mov
mov
loope
jb
push
jo
add
inc
jge
push
fistpl
cltd
add
sub
pop
or
aas
inc
jmp
push
leave
cmp
dec
xchg
fwait
dec
mov
les
lcall
dec
popf
loope
adc
sub
cli
in
out
sub
jmp
xor
dec
repz
std
jne
inc
es
xor
push
sub
in
insb
pop
test
leave
nop
jno
ljmp
das
jne
pop
push
and
pop
xchg
or
fisttpl
shrb
retw
nop
insb
call
popa
cli
xchg
mov
data16
add
rolb
mov
ret
mov
fldcw
xchg
mov
and
jmp
loope
mov
shrl
inc
xor
pushf
or
sahf
lahf
pop
data16
push
mov
test
mov
jg
dec
aaa
aas
sub
sbb
sbb
aas
pushf
ds
jg
ret
pop
mov
icebp
aas
mov
icebp
mov
or
cmpsb
filds
das
movl
jl
push
testl
jmp
cmp
shlb
scas
mov
test
imul
jo
movsb
inc
and
int3
scas
int3
mov
rcrb
sbb
ret
imul
jnp
cmp
adc
mov
mov
stos
loope
nop
or
sarl
dec
mov
xchg
jp
mov
movl
dec
cmpsb
xchg
or
cmp
sbb
daa
test
lods
dec
jle
cmp
cmp
data16
stos
repz
cld
push
inc
cwtl
push
mov
jno
push
push
lret
dec
fwait
aas
add
or
insl
icebp
fwait
popa
and
cltd
hlt
lock
inc
fidivs
out
push
cmp
icebp
lahf
and
addr16
inc
bound
adc
call
cli
ret
in
aad
jl
loopne
pop
sbb
dec
rclb
movsb
insb
cmp
repz
mov
jnp
notb
daa
sub
mov
subl
mov
into
in
xor
clc
cmp
xchg
sub
pop
sub
pusha
imul
outsl
inc
adcl
cmp
mov
fldcw
xchg
or
jns
enter
fdivrs
mov
and
dec
popa
outsl
xor
stos
and
imul
outsb
sbb
push
mov
or
in
lock
add
xor
jae
xor
lret
std
xor
in
in
negb
jmp
rolb
mov
push
punpckhwd
movsl
into
je
lcall
fldl
lods
xor
pop
jo
jg
push
fcomp
xchg
or
loop
jecxz
daa
cmp
jne
mov
out
ret
and
in
push
hlt
incb
shlb
xchg
divb
mov
inc
xchg
mov
xor
push
xor
orl
pop
out
popl
in
mov
leave
fdivs
insb
push
or
lods
sbb
sbb
jo
and
jle
cmp
bound
ret
popf
fldcw
xchg
jo
add
push
jle
dec
push
sbb
dec
int
in
jno
dec
mov
jno
int
test
cmpsb
lcall
sub
add
in
ror
add
xchg
push
sbb
and
jno
dec
cli
fcomip
push
mov
mov
xor
popa
test
into
ljmp
pushf
mov
mov
in
jg
pop
push
ja
sbb
or
inc
dec
push
and
scas
enter
cli
shll
aas
das
inc
adc
xchg
pop
inc
dec
mov
pop
leave
mov
sub
out
xchg
sbb
rorb
push
sub
or
sbb
lods
jo
pop
shll
ja
clc
mov
outsl
rol
cmp
insl
xchg
fdivr
aam
call
cld
inc
xlat
and
sarl
and
mov
nop
lock
inc
out
and
pop
mov
cmp
mov
or
das
dec
test
cmp
pusha
repz
test
lock
hlt
ss
pop
push
ds
fnsave
mov
mov
xchg
push
popa
sbb
mov
jl
shrl
adcb
mov
ret
mov
call
pop
cmp
dec
or
and
adc
xor
lret
rolb
mov
sub
insb
mov
sub
imul
mov
lahf
add
mov
lock
mov
mov
inc
dec
subl
jl
inc
loope
lock
mov
jbe
sub
jne
es
mov
shrl
icebp
mov
sub
jge
ret
ljmp
test
xor
stc
sbbl
jmp
xor
lret
inc
dec
push
inc
pop
test
iret
and
sbb
inc
add
and
mov
cmpsb
je
movsb
ljmp
or
cmc
stos
sub
sub
cltd
pop
lds
xchg
and
lds
and
xor
sbb
cltd
std
mov
out
repz
ss
jmp
sub
xchg
pop
sub
lahf
adc
and
movsb
cmp
in
lcall
jmp
cmp
pop
int
push
and
add
jae
aad
ror
and
cwtl
es
lea
dec
lods
inc
fs
popa
pop
inc
fistl
subl
divb
imul
or
jnp
out
nop
mov
loopne
jge
je
test
test
mov
sar
enter
adc
popf
pushf
repz
test
out
xchg
popf
push
xchg
fdivr
stc
es
movsb
insb
repnz
loop
push
xchg
pop
adc
dec
mov
mov
test
xor
and
mov
sub
iret
pop
imul
fwait
mov
xor
push
jae
pop
or
insl
frstor
mov
lcall
test
sarl
or
mov
pop
negl
imul
imul
imul
mov
les
cmp
sbb
xchg
push
adc
sarb
stc
aas
cmp
xor
aaa
push
clc
mov
mov
jl
jg
ret
mov
inc
xchg
clc
out
data16
sbb
mov
shr
lds
mov
orl
inc
lock
popa
notl
adc
shll
in
jbe
andl
imull
hlt
mov
movsl
sbb
pushf
les
insb
pop
mov
add
lods
movsl
aad
pop
aam
ja
lahf
cmp
sub
fnstsw
ljmp
lods
mov
mov
inc
pop
xor
hlt
dec
sbb
ja
push
addr16
rcrl
adc
fcoms
mov
add
mov
adc
cmp
movsl
jle
hlt
insb
andl
fxch
in
in
lea
inc
gs
add
test
push
orb
sbb
adc
rcrl
add
rcll
inc
in
test
pop
cmpsb
loop
lock
push
fs
movsl
rclb
out
ds
out
shll
jnp
adc
jl
int
mov
sub
in
xchg
popa
push
jp
add
test
loopne
mov
fdivs
and
je
int3
add
inc
or
fstps
push
xchg
stos
mov
mov
mov
enter
adc
fidivs
ds
mov
sbb
and
pusha
scas
lretw
adc
in
fwait
inc
lea
cmpsl
xchg
insb
sub
ljmp
cmp
fwait
mov
dec
mov
jecxz
push
ljmp
mov
sarl
or
shll
mov
ror
mov
add
scas
sub
jae
out
movsb
push
xchg
in
pop
jge
jl
push
mov
gs
xchg
das
cmpl
push
cmp
mov
cmp
mov
inc
and
mov
xor
jbe
sar
jge
mov
xor
mov
lods
sub
nop
cs
imul
adc
out
mov
xor
xchg
test
or
push
sub
arpl
pop
cmp
lret
incl
sahf
fstpl
or
movsb
inc
push
movsb
adc
sub
jno
fmuls
repz
mulb
jbe
cmc
cmp
arpl
or
aam
or
xchg
ja
mov
in
cmc
cmp
lret
cmpb
jae
fistpl
insl
notl
or
mov
add
sbb
cli
jg
sbb
rorb
ljmp
mov
andl
aas
fisttpl
stos
dec
cmp
pop
jb
pop
rcr
lods
sub
or
add
int
jbe
add
pop
rolb
xchg
cli
out
mov
lods
xchg
int
insl
adc
out
test
xchg
inc
andl
dec
movsb
jb
sbb
mov
jle
and
xlat
xor
and
jecxz
fwait
mov
adcl
sti
add
or
sbb
fs
fldl
xlat
loop
cld
mov
xchg
xchg
mov
jne
adc
aas
std
test
clc
jp
loop
push
sbb
imul
pop
ror
hlt
arpl
arpl
and
outsb
scas
dec
in
mov
sbb
xor
mov
outsb
and
pop
inc
lods
xor
mov
jg
icebp
clc
xor
push
push
dec
cmp
jb
ret
mov
mov
shlb
push
out
insb
sbb
les
xchg
fidivs
jecxz
scas
inc
ljmp
inc
fisubs
aad
mov
pop
shll
rolb
jge
mov
lret
fld
jle
push
int
dec
mov
test
out
cli
out
jnp
test
pop
and
repz
jle
daa
lcall
xchg
nop
cmp
add
shll
imul
mov
xchg
mov
scas
mov
cmp
cmp
movsl
std
xor
xor
cli
ds
jb
test
mov
into
xlat
int
les
dec
pop
cmpsl
outsl
icebp
and
movsb
out
lock
inc
into
xor
in
add
in
dec
xchg
and
lods
add
sub
icebp
xor
subl
mov
xchg
rol
adc
sub
inc
mov
sbb
cmp
scas
mov
xchg
adc
mov
jb
roll
jne
mov
ds
mov
mov
add
ret
add
loop
dec
lret
inc
out
push
fistpl
pusha
push
inc
lcall
out
xchg
jle
imul
fnstenv
ja
ficomps
mov
mov
mov
lret
lahf
test
and
stos
xchg
mov
ss
bound
test
outsb
sub
xorl
movsl
push
adc
dec
cmp
and
fcoms
mov
cwtl
stos
test
dec
xchg
xor
inc
add
mov
movsb
enter
or
mov
pushf
sub
je
or
in
iret
dec
enter
sbb
push
imul
jge
icebp
xchg
cmc
test
ja
inc
sub
ja
push
cmp
xlat
xchg
cmpsb
and
mov
inc
fldenv
mov
hlt
lret
out
stc
pop
jo,pn
aas
mov
loope
pop
add
aam
adc
push
xorl
push
xchg
faddl
inc
bound
imulb
cmp
icebp
in
mov
jbe
mov
add
lods
inc
ds
xor
mov
xchg
inc
hlt
movsl
ja
ja
imul
cmp
fs
pop
cltd
loopne
jbe
cmp
jns
inc
jb
movsb
mov
push
xor
data16
adc
pop
mov
jbe
cmpsl
pop
mov
mov
cld
repz
inc
sub
out
jmp
jnp
stos
sti
cltd
int
mov
jns
js,pn
jbe
and
fidivrs
sbb
fs
dec
loope
jae
imul
sub
dec
add
mov
sub
ja
fidivs
cmpsl
iret
out
test
add
or
lahf
sar
clc
fistpl
jo
cmp
jne
cmp
sub
or
cltd
fsubr
ljmp
aas
notl
bound
push
clc
jmp
adc
pop
jg
adc
mov
add
mov
mov
pop
mov
xchg
fdivr
lahf
leave
pop
sub
cmc
or
adcl
add
xor
mov
pop
pushf
fcmovnu
inc
xchg
loope
pop
xorb
into
leave
sbb
aas
adc
sbb
cmovno
lahf
jp
in
dec
mov
push
test
pop
out
and
jae
pushf
cmp
stos
push
push
addr16
mov
fdivrs
xchg
inc
cmp
mov
mov
aad
leave
lds
mov
push
push
cmp
cmp
inc
xor
adc
cmp
mov
cmp
es
push
cmp
stc
sarl
cltd
mov
adc
dec
lock
mov
ljmp
lods
sbb
andl
sbb
mov
mov
jno
mov
into
insl
mov
lock
rcll
ror
fisubrs
int
call
add
ja
mov
or
xorb
xchg
test
daa
hlt
push
int
outsl
sbb
fwait
imul
dec
jmp
dec
push
loope
lods
aam
fdivrl
push
fidivl
jle
or
sbb
sbb
mov
or
mov
mov
adc
pushf
mov
jns
mov
lret
inc
cmc
dec
mov
push
dec
fwait
push
lods
cli
fbld
repnz
pop
cmp
cmpsl
jne
cmp
test
fimull
jge
or
lods
aad
test
adc
xchg
fiaddl
fwait
sbb
xor
cmp
test
adc
mov
push
inc
leave
fistpl
ds
out
mov
lahf
fs
shlb
sub
outsl
out
dec
rorl
outsl
adc
clc
stos
jo
shll
loopne
imul
jne
push
nop
jg
push
test
xchg
jae
cmc
or
sub
sbbb
mov
outsl
js
inc
add
sbb
xchg
filds
cmp
fwait
push
in
stc
lea
leave
and
setnp
movsl
xchg
and
sub
sti
nop
out
dec
push
movsb
pop
cwtl
rclb
add
push
xlat
arpl
dec
pop
or
sbb
mov
push
pop
push
rcl
mov
fcmovnu
jae
faddl
movsb
push
mov
cld
faddl
loopnew
mov
popa
pop
in
test
xchg
pop
lds
imul
mov
cmp
gs
aaa
std
add
add
cmp
ret
out
and
adc
mov
out
mov
icebp
pop
fwait
ss
dec
leave
add
aad
insb
push
mov
lret
cmp
xor
retw
adc
lds
outsl
pop
xchg
push
fistpl
into
les
test
enter
lcall
rolb
push
in
cmp
xor
popa
jle
movsl
pop
mov
sarb
mov
aad
or
nop
sub
je
loop
jg
push
call
decl
lret
dec
pop
idiv
hlt
cli
out
testl
divl
in
gs
xchg
fcoms
xor
mov
lods
pushf
scas
insb
mov
jno
mov
adc
jo
dec
pop
bound
addb
dec
jg
sbb
lock
dec
insl
frstor
pusha
js
mov
fisubl
ret
and
sahf
mov
mov
push
mov
mov
lods
repz
dec
lods
adc
mov
dec
adc
adc
push
pop
int3
dec
sub
push
jnp
push
push
popf
sub
rorl
inc
mov
das
mov
mov
pop
out
and
int3
sub
pop
lds
outsb
das
mov
push
xchg
in
icebp
jp
cld
xchg
and
xchg
xor
dec
outsb
jp
stc
mov
js
inc
rcrl
push
jbe
or
adc
sub
sar
adc
in
dec
fwait
stos
inc
xor
popf
mov
sub
fdivrl
mov
cmp
call
lea
xor
mov
scas
mov
faddl
int3
sub
cmp
arpl
adc
sbbb
lods
sub
aad
mov
in
lahf
sub
std
stos
aas
cmp
xor
fucompp
push
imul
mov
and
sbb
dec
ds
lea
mov
bound
stc
sbb
es
sbb
push
sbb
jl
mov
gs
imul
in
dec
xor
data16
dec
add
or
stc
sbb
push
das
dec
mov
fdivrl
pop
clc
addss
loopne
xor
mov
xlat
sbb
pop
lret
outsb
or
mov
enter
lret
xor
daa
mov
pop
test
in
xchg
lahf
or
ffreep
adc
cltd
xchg
mov
sub
data16
dec
pop
mov
xchg
addr16
inc
lret
in
aam
popa
sbb
cmp
adc
sub
test
rolb
xor
cmc
sbb
leave
ret
dec
cld
cli
or
scas
mov
mov
mov
test
and
leave
leave
xchg
or
mov
dec
push
pop
lods
sti
lcall
gs
lahf
jle
rorb
cmp
xchg
xor
cmp
movsb
hlt
cmp
test
cmp
sbb
ljmp
xor
pop
lock
pop
sti
xchg
xor
gs
add
insb
mov
add
int3
jbe
fnstcw
ss
mov
cli
stos
punpcklwd
lock
sub
fldl
gs
std
repz
cmpl
xchg
cli
notl
addb
sub
int3
push
test
in
out
or
in
call
adc
mov
mov
add
lcall
imul
jnp
mov
pop
adc
cmp
mov
ljmp
cmpsl
xor
adc
out
popa
dec
jae
sbb
jns
arpl
pop
insb
add
pusha
pop
fcoms
sub
mov
jmp
mov
sbb
dec
stos
mov
mov
xchg
pop
pop
pop
cmc
pop
adcl
jns
jbe
jb
out
movsl
xor
cmp
das
or
lgs
lds
scas
lret
mov
push
cmp
or
jle
mov
test
lahf
or
dec
jbe
repz
cmp
adc
icebp
rcll
clc
cs
rorl
xor
jo
inc
std
jecxz
sbb
jb
pop
mov
sbb
or
and
xor
into
ja
aas
aas
cmp
jo
mov
add
outsb
sbb
pop
test
cmc
sub
push
out
out
push
out
sarb
sti
add
push
sub
inc
add
mov
dec
mov
lahf
push
inc
fwait
jmp
fidivl
and
daa
fisttpl
arpl
mov
sbb
pop
mov
push
js
daa
rol
test
mov
push
sahf
rorb
imul
add
scas
mov
jne
rcrl
and
clc
jae
fwait
sbb
mul
mov
pusha
adc
pop
push
insb
addr16
js,pt
sti
scas
push
dec
lods
add
jae
cltd
sub
mov
rcl
lahf
iret
mov
dec
sub
pop
jl
jo
out
inc
les
or
pop
out
push
pushf
and
or
sub
lds
outsb
xchg
loopne
jb
scas
fdivl
add
outsb
cld
pop
cmp
rolb
push
shrb
mov
cmp
sbb
jg
mov
pusha
sarl
lcall
inc
rcrb
test
mov
dec
push
test
lock
jnp
mov
fnsave
pop
sub
push
call
sbb
pop
adc
mov
js
mov
std
inc
sub
mov
pop
popl
mov
dec
xor
push
sarb
xchg
mov
xchg
inc
push
es
xchg
scas
push
daa
push
lods
push
dec
dec
jns
andb
int
scas
out
and
fwait
inc
fists
test
lret
jecxz
leave
xlat
push
dec
sub
hlt
jbe
add
cli
loopne
fmul
push
mov
fxch
cld
xchg
test
inc
and
in
push
ret
roll
in
fcomip
jo
fstpt
addl
pop
les
fcmovne
in
clc
outsb
push
popa
arpl
sbb
mov
push
pop
outsl
scas
sbb
clc
adc
cmp
xchg
enter
fwait
mov
rorb
pushf
jne
jae
cwtl
loope
in
hlt
mov
push
or
mov
adc
lcall
jo
insb
xchg
cmpsl
cmpsl
mov
cltd
jl
enter
cmc
or
cmp
or
cmp
dec
jno
mov
popa
jnp
imul
mov
cmp
cmp
cmp
ljmp
std
fwait
xlat
orb
dec
push
pop
mov
lods
fisttps
or
andb
push
loop
jbe
fmulp
fdiv
xchg
adc
fadds
enter
lock
sub
shll
cmc
cli
loop
enter
icebp
lods
repz
push
imul
pop
out
adc
rclb
push
pop
cmp
lods
fldt
adcl
xchg
dec
mov
sarb
popa
lods
test
sub
push
frstor
fistl
inc
push
data16
jno
add
popa
enter
out
fldenv
frstor
shrl
inc
ja
dec
cmp
movsb
push
xchg
mov
xchg
icebp
jecxz
pop
add
sbb
pop
call
xchg
leave
das
loope
ret
and
mov
sub
inc
jge
repz
ds
or
daa
mov
int
out
xlat
mov
mov
xchg
fldcw
push
and
bound
adc
pop
jnp
out
scas
mov
inc
call
or
xchg
cmp
push
mov
arpl
cmp
mov
scas
xor
enter
push
mov
mov
sub
ficomps
aaa
lret
mov
pop
or
lret
or
or
pop
sarb
ficoml
hlt
daa
loop
iret
fcmovb
or
mov
lahf
jmp
mov
shrl
push
inc
mov
fldt
test
and
in
pop
add
cltd
or
int3
imul
jne,pt
push
mov
inc
sub
adc
xor
add
arpl
or
mov
xor
mov
jbe
mov
adc
sbb
mov
ss
mov
xor
push
mov
pop
movsl
sub
jmp
inc
cwtl
add
push
mov
mov
sub
iret
pop
or
xor
lods
mov
sub
push
movsl
sub
cmc
aas
test
adc
xlat
popa
sub
inc
int
mov
fdivs
ret
sub
je
ficoml
stc
sahf
repnz
pushl
sub
jl
dec
mov
mov
xor
xor
jne
push
mov
sbb
add
std
sbb
or
subl
mov
das
sub
mov
or
mov
outsb
push
jbe
push
or
in
jo
popa
sahf
cmpl
lahf
mov
out
jo
call
sti
mov
pop
sbb
out
movsl
test
pop
aaa
sub
into
mov
nop
pop
and
sub
and
fistps
xor
cmp
addl
pop
mov
inc
testb
mov
or
jecxz
mov
test
xchg
dec
shlb
mov
cmp
pop
push
jne
cmp
mov
popa
je
jo
test
inc
shrb
pushf
insb
mov
mov
mov
push
xor
xchg
call
mov
jbe
add
or
clc
loop
cmp
data16
in
add
mov
sub
cmp
or
je
pop
push
daa
fs
or
stos
pop
pop
ret
mov
outsl
cltd
mov
adc
in
mov
pop
pop
sbb
ret
pop
push
inc
mov
roll
inc
outsb
fdivrl
sbb
or
dec
sahf
jg
mov
push
xor
and
or
xor
push
stc
roll
in
shrb
push
push
jmp
mov
add
xchg
test
popf
pop
test
jmp
test
adcl
add
movsl
out
imul
push
sbb
push
aam
divl
push
stos
push
insl
or
aas
lcall
sbb
pop
icebp
push
cmp
ret
push
mov
fidivrl
scas
js
adc
adc
mov
sub
fidivrl
push
daa
lahf
xorl
lods
movl
sbb
jmp
xchg
mov
inc
imul
movsl
xor
sub
fnstenv
out
push
xor
cwtl
adc
mov
cltd
and
cmpb
adc
adc
movl
jl
pushf
aad
jmp
ficompl
adc
jo
sbb
test
add
test
inc
outsb
cmp
push
and
jmp
push
xchg
pop
cld
shlb
xchg
or
cltd
or
out
aaa
ret
pop
nop
out
adc
inc
mov
add
dec
scas
dec
popa
ja
xor
iret
daa
adc
jnp
jns
testl
mov
test
mov
bound
div
mov
push
or
mov
dec
int
inc
out
inc
inc
xchg
imul
jp
das
js
dec
xchg
push
jp
cli
repnz
dec
icebp
adcb
and
out
adc
adc
cli
lods
inc
and
sub
mov
sahf
sbb
sbb
jl
or
inc
cmpsb
sbb
cld
or
sub
fs
adc
mov
pinsrw
sbb
loope
ret
lea
xor
in
cmp
mov
xor
enter
pop
jbe
cs
xor
inc
add
pop
jne
pushf
adc
gs
cmp
mov
xchg
fmuls
pop
sbb
mov
mov
imul
scas
fists
cmp
fisubrs
repnz
push
movsw
adc
mov
adc
adc
test
mov
add
cmp
or
loope
divl
mov
xchg
xchg
xor
loop
sahf
inc
inc
ficoml
mov
xchg
je
pop
shlb
push
cmpsl
loopne
xchg
jmp
movsb
lods
jg
mov
cmpsb
je
lret
repz
aad
push
pop
sti
mov
jmp
sarb
jg
add
stos
int
data16
xchg
in
xor
pop
xchg
gs
aam
and
jnp
mov
stc
sub
mov
in
jmp
inc
xor
std
push
dec
xorl
hlt
rcrl
in
jmp
ja
lock
leave
adc
stos
loop
xchg
cmpsl
shll
cwtl
hlt
xchg
movsb
jnp
pop
xor
jmp
sub
inc
adc
fstpl
inc
mov
push
hlt
popf
sbb
sbb
push
fwait
sbb
arpl
mov
iret
adc
sub
psubsw
faddl
cmp
lret
mov
fdivrl
cmpsl
mov
dec
or
ret
inc
imul
fstp
mov
add
cli
mov
and
ja
cwtl
mov
inc
xor
mov
dec
imul
adc
out
mov
fnstsw
dec
popa
and
fwait
sti
jge
adc
into
int3
scas
mov
dec
into
lahf
icebp
push
sub
mov
cltd
lea
and
push
ds
or
mov
icebp
gs
inc
mov
xchg
scas
jmp
push
sbbb
fsts
or
pop
dec
xor
xor
sbb
cmc
int3
fsubl
sbb
into
and
test
ds
fwait
dec
and
repnz
lret
or
dec
mov
cmc
insb
cmp
cmp
in
inc
orl
lds
js
outsb
jle
dec
add
mov
cltd
jae
loopne
ror
mov
ljmp
sarb
std
insb
lret
mov
mov
ret
pop
fs
add
into
xor
test
fs
push
lahf
mov
cmpb
and
insl
into
ret
pop
or
daa
sbb
and
lahf
in
mov
or
mov
fs
js
scas
sbb
shlb
in
pop
xchg
mov
jnp
leave
mov
add
jp
sub
repnz
push
lods
in
cmc
jno
fwait
sbb
fiaddl
fiadds
lds
mov
mov
jecxz
sbb
dec
xchg
push
push
adc
pop
and
js
ret
lock
clc
leave
mov
addb
pop
cld
data16
mov
shr
cmp
mov
adc
xor
stc
jg
icebp
mov
add
dec
jo
xchg
jbe
xchg
mov
fisubrs
xchg
add
fildl
lret
cmp
cmp
mov
dec
fimull
lds
flds
adc
sbbl
fiaddl
cmp
jae
xchg
aaa
popl
inc
mov
push
xor
cld
pop
sbb
inc
xlat
xor
orb
pop
adcb
jns
fstp
fnstcw
in
jecxz
aam
inc
push
iret
cs
push
or
inc
sbb
jg
pavgb
mov
cmp
push
jecxz
xchg
add
inc
mov
mov
xor
mov
loopne
cmpsb
outsl
xchg
hlt
mov
sbb
inc
sbb
mov
stos
mov
loop
xor
lahf
rorb
aaa
push
dec
and
mov
stos
test
xchg
rcrb
pop
nop
jmp
gs
in
clc
sti
mov
loope
sub
mov
rcrb
mov
test
adc
xor
pop
mov
addl
pop
mov
ja
imul
and
enter
test
fwait
sub
mov
or
mov
stos
repnz
addr16
xchg
repnz
popa
test
movsb
cmp
in
ds
sti
xor
repz
mov
mov
in
ficomps
add
jge
cmp
and
pop
jns
or
jnp
jmp
fs
jnp
mov
xchg
add
xchg
sub
fstpl
cs
std
mov
mov
add
stos
mov
inc
pop
mov
jmp
mov
xchg
stos
inc
pmulhuw
push
loop
roll
sub
or
dec
lods
repz
out
popf
sbb
pop
push
pop
cltd
mov
inc
aam
outsl
out
cld
in
push
sbb
xchg
gs
xlat
mov
push
jno
jbe
xchg
mov
jb
mov
fwait
push
inc
pop
or
push
ss
jmp
dec
nop
adc
xchg
mov
pop
outsl
les
pop
lcall
fstps
nop
mov
bound
inc
lret
icebp
fistpl
jbe
mov
adc
stos
or
loop
stos
mov
adc
cmc
push
inc
stc
adc
lock
dec
sbbb
mov
jae
leave
dec
xor
pop
sub
and
jo
es
fmul
mov
xchg
jl
xor
xchg
pop
cmpsl
push
pop
subl
aaa
mov
pop
ja
lret
cwtl
mov
cmpsb
cmp
mov
add
push
add
dec
insl
test
in
shrb
sub
adc
test
xor
mov
dec
pminub
mov
aad
add
lcall
pop
mov
call
in
addr16
mov
mov
push
jle
xchg
shrb
lods
or
into
sbbb
es
insb
cmpsb
sub
cmc
imul
lcall
scas
fdivs
jge
jge
mov
or
jo
mov
fcmovnb
mov
cli
arpl
and
mov
mov
mov
movsb
test
push
adc
inc
es
inc
inc
push
icebp
sbb
mov
mov
imul
cmc
idivb
jbe
xchg
or
mov
adc
enter
mov
icebp
outsb
pop
out
mov
push
ljmp
sti
xchg
std
mov
inc
test
dec
cld
sbb
stc
dec
xor
lods
fnstsw
lods
dec
andb
pushf
sub
xchg
pop
inc
xor
lcall
out
lds
mov
cwtl
and
pop
in
cmpsb
addr16
lcall
mov
mov
sti
dec
mov
xchg
sub
push
cmp
jbe
sbb
push
std
hlt
xchg
pop
sub
push
jne
mov
dec
push
and
aam
inc
sbb
or
and
into
int3
popf
addl
and
or
rcrb
mov
pop
jge
push
sbb
fisubrl
pop
lods
xor
or
scas
sbb
push
push
stc
repz
cmp
in
test
imul
lahf
jg
mov
xchg
sbb
ja
xor
jmp
pop
movsb
pop
stc
insl
imul
dec
jne
push
ret
add
mov
adc
mov
shlb
dec
and
mov
stc
dec
lret
sub
or
inc
loope
xchg
ljmp
dec
dec
add
ja
mov
add
xlat
push
push
lds
pop
bound
inc
out
sub
fnsave
or
lahf
mov
push
adc
enter
sbb
es
sarl
pop
cmp
xor
pop
sahf
mov
pushl
or
dec
pop
jb
adc
or
psrlq
add
sub
test
pop
arpl
pop
daa
inc
jl
mov
cmpsb
outsb
dec
sbb
pop
inc
popf
or
pushf
movsl
ds
xlat
ljmp
jno
mov
outsb
cmc
jle
xor
fldenv
sbb
xorl
lea
jg
insb
pop
mov
in
icebp
lret
arpl
and
lods
xor
in
xor
mov
dec
jae
push
jb
dec
mov
mov
fcomps
stc
or
fldenv
sub
jle
sarl
es
stos
pop
cmp
filds
pop
jns
xchg
xchg
aaa
xor
daa
mov
sub
mov
pop
ret
test
sbbb
in
push
xchg
pop
or
sbb
sahf
out
test
mov
pop
mov
mov
mov
sbb
jmp
scas
pushf
pop
add
enter
insl
aaa
jne
aam
movsl
add
adc
lea
repz
jg
or
dec
xor
xchg
gs
test
xchg
mov
pusha
int3
sub
jp
daa
mov
aad
shl
daa
rclb
mov
fcmove
lds
jbe
scas
mov
es
or
mov
je
fcompl
negb
inc
pop
mov
and
out
test
xchg
jge
dec
add
adc
xchg
adc
xchg
pop
loope
mov
adcl
scas
xor
lock
mov
sbb
leave
scas
pop
js
sbb
inc
sub
iret
cwtl
add
addr16
jbe
inc
xchg
jnp
xor
xchg
adcl
clc
cmp
sarl
add
and
sub
lock
push
test
push
xor
push
cmpsb
pop
loop
out
inc
icebp
adc
out
lahf
mov
push
jo
mov
mov
inc
dec
test
mov
cmp
imul
sbb
shlb
lods
sbb
cltd
rcrl
cltd
xor
es
xor
shl
js
cmpsl
adc
pop
jg
fiadds
jb
das
cwtl
mov
cld
cmp
es
jl
and
test
outsb
test
out
pop
jmp
imul
dec
nop
cmp
sub
fsubrl
pop
dec
add
push
ja
lock
push
push
cltd
hlt
lods
ret
in
pop
push
mov
and
mov
lahf
sbb
mov
int
lret
jnp
jg
mov
dec
pop
sub
xor
bound
sbbb
or
sub
fmull
xchg
mov
notb
add
xchg
shrb
leave
sahf
stos
rcl
stos
fcmovb
iret
sbb
jns,pn
int3
mov
in
cld
aad
jp
into
cmp
push
pusha
push
add
mov
cmp
in
rcll
adc
xchg
iret
sub
or
mov
icebp
ds
xchg
movsb
pop
arpl
lea
je
and
or
add
sub
nop
and
xchg
sub
dec
in
pop
xlat
jl
dec
jns
cmp
outsl
jl
flds
jne
mov
daa
push
sub
test
xchg
mov
nop
inc
lock
sub
in
mov
imul
dec
inc
mov
mov
mov
mov
fbstp
jo
call
mov
jmp
jge
shll
nop
xchg
sbb
or
or
jle
inc
adc
push
inc
sub
push
lahf
shll
dec
pop
in
ja
shll
inc
test
notb
cs
je
push
and
lcall
dec
xchg
test
mov
lea
fs
pop
into
int
sahf
test
sti
das
jecxz
mov
cmp
pop
pop
ja
fisttpl
and
fidivl
or
pop
adc
scas
cmpsl
or
and
mov
lcall
arpl
test
jle
mov
pop
repz
mov
dec
pop
mov
mov
add
into
jbe
jae
shrb
dec
jg
imul
repz
movq
cli
sbb
out
cltd
mov
mov
fsub
pop
or
and
inc
adc
mov
jge
subl
jnp
jmp
adc
js
mov
xchg
adc
mov
cwtl
mov
inc
adc
fwait
jnp,pn
pop
mov
loope
fldenv
in
ret
cmp
mov
imul
int3
mov
add
add
sub
icebp
mov
xor
jno
popa
cld
pop
lahf
jbe
and
sbb
lret
inc
and
data16
pop
adcl
xor
inc
and
lds
sbb
dec
outsl
and
cmp
in
ds
xor
push
adc
fistpll
mov
into
testb
cs
mov
pop
rclb
sub
inc
cmp
pop
scas
test
and
jcxz
add
push
insb
push
clc
mov
lcall
add
mov
rol
mov
fsubl
repnz
sub
inc
add
push
or
mov
sub
pusha
enter
jb
dec
stos
xor
cwtl
loopne
pop
mov
push
mov
sbb
dec
xor
fs
lret
pusha
scas
sbb
push
xchg
add
inc
push
addr16
mov
ds
push
adc
sub
pop
lods
imull
out
cwtl
sahf
sub
xor
fldt
in
add
add
adc
push
repnz
mov
push
pop
push
aaa
sbb
sub
add
xchg
add
aam
lret
and
dec
xor
insb
sub
sar
inc
ret
jnp
push
xchg
das
mov
lret
push
and
fidivrl
cmp
lret
push
lcall
inc
js
outsl
jb
inc
add
aam
aam
ret
mov
outsl
dec
fistpl
lods
push
fmull
cmpsb
ja
mov
in
ret
pop
push
pop
xchg
sbb
out
or
divb
sub
sub
sub
cmpl
stos
push
mov
cld
mov
ds
outsl
mov
sub
scas
test
or
cwtl
test
dec
lock
and
dec
xor
addb
loopw
or
cmp
add
xchg
cmpb
and
test
jno
fnstenv
andb
and
jns
fwait
ret
xchg
lds
sub
sbbb
fisttps
aaa
or
mov
mov
in
outsb
scas
mov
in
sbb
inc
jge
push
fcomi
jno
mov
movsb
mov
inc
insl
lea
sbb
xor
iret
stos
and
inc
xchg
nop
add
aad
std
test
inc
lds
ljmp
sti
xchg
out
adc
xchg
cli
mov
rolb
dec
cmc
ljmp
mov
xchg
sub
out
std
dec
nop
add
or
ficoml
loopne
mov
mov
pop
jae
or
sbb
mov
pop
xor
int3
lret
aas
adc
push
into
dec
mov
fsubrp
popf
lds
push
xchg
sysexit
cs
or
ficomps
xchg
shll
mov
xchg
and
and
push
int
ud1
shlb
sbb
stc
xor
aas
jecxz
pop
out
in
fstps
shrd
push
sti
into
sub
sbb
std
inc
out
stc
pop
push
xchg
xchg
jge
aas
mov
js
mov
and
jecxz
and
add
lcall
nop
adc
stc
mov
cmc
ret
repz
xchg
sbb
push
pop
and
xlat
rol
aam
je
sub
pop
stos
inc
cmp
jmp
das
shrl
imul
in
fbstp
sbb
jmp
orl
pusha
fs
out
pushf
mov
push
cld
jge
addr16
aam
rcr
pop
xchg
jge
mov
dec
cmp
scas
inc
inc
jbe
adc
jb
aam
mov
icebp
cld
inc
mov
aam
push
jmp
pop
mov
cmpsl
dec
lds
jg
sbb
ficoms
cmp
sub
push
lods
stos
cwtl
daa
mov
dec
add
ja
mov
inc
lods
push
hlt
out
cmpsb
cld
outsb
push
stc
rorb
jae
sub
fdivl
pop
dec
shlb
stc
sbb
adc
push
ret
sbb
cs
lahf
sub
pop
mov
stos
sbb
shrl
inc
hlt
mov
arpl
jmp
pop
outsb
mov
mov
fsts
lods
mov
popa
aas
int3
lret
mov
push
jecxz
xor
pop
stos
cmp
pop
dec
xor
dec
lahf
add
into
fucomp
or
sub
sbb
xlat
in
and
rorb
mov
cmpsl
and
fsts
lods
in
cmc
mov
jb
aad
out
add
clc
push
sbb
mov
int3
or
movl
shr
dec
sbb
mov
stos
insb
xchg
mov
push
in
pop
mov
cs
in
stos
cmp
mov
daa
ret
push
in
mov
cwtl
je
adc
jmp
nop
dec
ss
std
mov
in
push
sbb
mov
out
sbb
xor
sti
pop
pop
xchg
push
lahf
or
loope
fisubrl
lret
pop
ficoml
dec
fistpl
or
xor
imul
adc
pop
in
push
xor
loop
cmpl
adcb
js
insb
jmp
sub
dec
mov
stos
out
push
inc
out
lahf
cmp
and
xchg
cmp
jne
sbb
lret
dec
out
aas
ss
inc
adc
or
ds
sub
idivb
bound
popf
add
mov
inc
sbb
js
pop
insl
pop
inc
ret
xchg
inc
mov
dec
xorl
sub
pop
dec
or
cmp
push
pop
lret
es
addr16
and
test
int3
jl
xchg
movsb
mov
push
ss
bound
sbb
xor
mov
inc
mov
mov
cs
or
xlat
jge
push
add
fistl
sti
pop
sbb
jnp
xor
inc
aaa
xor
push
test
xchg
movsb
loop
aad
mov
fwait
pop
addl
bound
inc
add
bound
popf
jb
andb
xor
or
jb
comiss
push
mov
fisttpl
sbb
ficomps
imull
pop
xchg
dec
lahf
ficoml
hlt
mov
push
repz
leave
add
loopne
mov
fnsave
leave
jnp
repz
push
mov
jbe
inc
jmp
push
pop
adc
jp
test
icebp
mov
push
dec
cmc
pop
out
loopne
rdpmc
cmpsb
dec
out
and
xor
mov
scas
or
jp
mov
and
rcr
cmp
or
loope
adc
enter
test
out
push
bound
push
or
jbe
inc
mov
into
es
and
and
je
cmpsl
std
pop
sbb
es
jmp
and
push
or
dec
mov
lahf
cmpsb
xchg
bound
xchg
inc
mov
lods
push
pop
dec
push
jge
in
sbb
ljmp
fs
mov
adc
inc
cmp
dec
scas
xorl
jne
cmpl
cli
xor
mov
xor
and
insl
ret
lret
movsl
pop
jbe
mov
sub
push
push
stos
mov
mov
shlb
push
xchg
pop
xor
push
test
sti
loope
and
outsb
sbb
cmp
fiaddl
cmp
cld
int3
mov
add
outsb
mov
add
mov
xor
pop
ret
cmp
scas
insl
inc
or
push
les
lret
fidivs
mov
jle
jl
jp
xchg
scas
insb
jno
jge
aaa
lahf
cmp
mov
pop
mov
dec
imul
jg
testb
mov
push
xchg
adcb
cs
sbb
js
add
jo
jns
orl
ffree
cmpsb
push
dec
jbe
xchg
add
mov
add
pop
cmp
pop
sbb
add
xor
lret
xor
inc
xor
inc
jbe
push
mov
in
aam
movsl
lds
je
dec
out
movsb
and
pop
dec
mov
sub
stc
stc
pop
jg
les
insl
push
shrl
xlat
lcall
push
stos
mov
jp
in
scas
cwtl
add
jb
dec
in
mov
aas
cmp
inc
push
adc
dec
sbb
mov
inc
js
add
mov
repz
add
in
shll
jns
cmp
push
jp
and
jl
fcoml
into
fmuls
push
imul
cmp
lea
mov
mov
cmp
push
sub
mov
mov
add
pop
data16
test
negb
mov
test
data16
inc
pop
xchg
into
in
add
cs
aaa
xor
scas
xlat
pop
and
mov
or
adc
out
inc
jbe
incl
xor
sub
nop
nop
push
iret
or
cwtl
pop
int3
pop
ss
imul
popl
mov
sub
aam
jne
push
xor
push
add
out
jp
fcomip
jl
jae
xchg
push
mov
xchg
mov
sub
outsl
sbb
add
pop
jmp
orl
addr16
pop
sti
xor
addr16
sub
int3
test
sti
mov
test
adc
iret
mov
sti
or
test
or
push
push
hlt
xchg
sbb
in
adc
sub
xlat
cli
insb
lds
push
outsl
jmp
movsl
aaa
repnz
mov
ret
es
mov
sub
xchg
or
jle
out
jp
mov
aad
jne
fisubrs
push
cmp
movsb
lahf
adc
xchg
cmpsb
cmp
push
inc
ljmp
or
mov
jno
loope
gs
push
pushf
fwait
inc
int3
test
sub
push
sti
pop
insl
int3
gs
cmp
and
mov
mov
enter
scas
shlb
inc
mov
push
out
pop
jp
add
push
pop
sbb
or
enter
test
enter
xor
push
jmp
and
pop
int3
lds
pop
fcoml
cmp
arpl
cmc
repnz
shlb
mov
or
ficompl
insb
imul
insb
adc
std
mov
push
mov
lcall
pusha
cmp
aas
jmp
ljmp
mov
out
xor
iret
mov
sub
cmpsl
cmp
fisubrs
cld
or
xor
push
adc
movb
dec
cmp
mov
repz
cmp
ret
cltd
orb
sbbb
mov
mov
popl
loopnew
aas
mov
xor
cmp
mov
push
inc
inc
inc
out
jg
sbb
mov
jne
xchg
mov
adc
pop
mov
in
jo
mov
push
adc
or
add
shll
xchg
inc
mov
push
pop
push
cli
sarb
mov
imul
pop
mov
mov
sbb
mov
repz
rclb
lret
lret
les
jno
add
ljmp
pop
dec
pop
sbb
int
xchg
adc
xor
dec
aam
fidivs
jle
push
adc
cmp
xorl
outsl
mulb
lret
aas
jge
aad
int
xorl
adc
cmp
scas
push
mov
xor
adc
mov
out
xchg
ret
jnp
mov
ja
movsl
gs
lret
sbb
mov
jge
push
lea
xchg
xor
adc
lret
icebp
pop
adc
mov
adc
repnz
adc
mov
cmp
sbb
rcll
lret
lods
mov
xorl
popa
mov
test
lahf
pop
or
test
lods
push
call
mov
jecxz
or
mov
inc
ss
jbe
pop
sub
pop
xchg
jo
jecxz
jns
pop
mov
mov
pop
js
mov
cmp
dec
xlat
inc
insl
push
xchg
adc
xchg
test
xor
bnd
adc
or
cmp
lods
mov
scas
inc
es
fists
adc
mov
insb
lret
jmp
pusha
lock
adc
in
hlt
pop
loopne
mov
bound
pop
push
xlat
mov
pop
inc
arpl
add
push
adc
sbb
enter
sahf
jae
in
gs
ret
out
popa
movsb
xchg
mov
cmpsl
clc
inc
imul
adc
xchg
sub
mov
and
mov
dec
dec
rclb
push
add
rcrl
mov
mov
ds
jo
les
in
subl
out
sbb
sahf
sti
mov
jae
mov
mov
jl
xchg
out
mov
sbb
mov
inc
adc
into
scas
or
and
mov
pop
adc
adc
out
pop
test
pop
fwait
xchg
jnp
dec
loopne
in
in
js
das
adc
ret
xor
outsb
cwtl
jne
das
lods
lret
lret
subl
in
cmp
sub
jle
pushw
xchg
and
aad
xor
inc
orb
loopne
add
push
ljmp
js
pushf
out
mov
movsl
lds
mov
cld
in
xchg
jge
fs
sub
in
push
outsl
cmp
inc
mov
inc
pusha
fwait
test
xchg
out
shlb
push
std
data16
insl
ja
jne
cltd
push
bound
dec
jne
ret
or
leave
mov
xorl
sub
and
cld
mov
mov
jl
bound
push
insl
fnstenv
adc
sub
pop
mov
iret
mov
jb
ljmp
push
mov
xchg
push
filds
insl
sarl
jns
int
rcr
aaa
and
xchg
xor
mov
jbe
sahf
fwait
sub
ljmp
outsb
xor
jae
jl
xlat
inc
jl
add
ret
stos
mov
pop
mov
in
xor
fcomps
loope
insl
scas
jge
fidivl
push
cld
mov
out
mov
and
in
movsb
lock
push
pop
popf
adc
mov
lahf
push
lods
insb
sub
daa
jb
mov
pop
aaa
sbb
mov
mov
repz
test
inc
add
es
andl
lret
in
mov
xchg
pop
out
es
inc
in
std
lret
jmp
cmp
addr16
fwait
and
enter
xchg
test
repnz
push
xchg
frstor
fbstp
outsb
inc
push
enter
xchg
inc
sub
call
mov
and
repz
shll
adc
add
jg
add
push
or
xor
mov
test
pop
jo
ret
popa
loopne
push
adc
adc
add
sub
loopne
xchg
enter
xlat
xchg
jne
jg
sbb
push
mov
call
jno
pop
mov
call
les
and
xchg
ds
xchg
fstpl
mov
mov
and
add
mov
icebp
push
lret
push
ja
xlat
stos
jae
push
mulb
insb
mov
push
ret
and
and
jge
idiv
and
lcall
sbb
adc
mov
jbe
xor
iret
mov
in
adc
or
int
inc
dec
and
jl
lahf
shll
lret
call
fnstsw
jo
sti
into
ror
enter
add
pop
mov
mov
notb
iret
out
adc
pop
sub
lock
clc
dec
ds
fnstenv
fs
cmp
mov
jg
xchg
and
jle
or
filds
add
add
shll
adcb
mov
mov
std
sbbb
stc
and
leave
pop
cmp
cltd
addl
test
push
repnz
out
jb
lds
and
jge
loope
sbb
fmuls
test
or
xor
insl
and
mov
jp
sub
jecxz
mov
pop
mov
cs
jecxz
jae
rcll
mov
push
popf
mov
or
ds
gs
and
mov
pop
insb
mov
mov
pop
mov
stc
add
int3
bound
cmp
out
mov
pop
add
xor
out
fcoms
std
mov
cmp
subl
dec
inc
icebp
pop
ss
imul
mov
sub
div
or
test
xchg
jl
mov
and
push
stc
cli
ja
in
and
shlb
insb
or
mov
addr16
pop
mov
lret
repnz
outsl
jp
push
mov
rorb
dec
xorl
jae
in
xor
pop
shlb
jp
mov
mov
mov
sbb
or
stos
fwait
insb
mov
mov
mov
std
push
mov
pop
dec
or
and
pop
pop
sub
push
enter
add
pop
sbb
or
jmp
rclb
xchg
or
push
add
rcl
mov
scas
jno
sti
lods
popf
lock
test
mov
adc
mov
push
push
cmp
mov
fimull
mov
pop
jge
mov
ret
dec
out
push
mov
repnz
pop
call
jecxz
loopne
arpl
pop
inc
cmc
lea
in
add
leave
xlat
fsts
std
in
or
mov
movsb
add
dec
pop
fstpt
loopne
sbb
insl
loop
dec
iret
and
lods
jno
arpl
imul
adc
js
pop
iret
sub
mov
je
mov
and
outsl
adc
xorb
sbb
or
mov
mov
outsl
aaa
inc
into
mov
pop
sub
aas
mov
cli
inc
pop
subl
nop
ret
pushf
or
out
cmp
mov
sbb
ret
fnstsw
stos
xchg
xchg
lds
jmp
repnz
xlat
aas
xor
mov
dec
pop
cmp
push
mov
mov
mov
mov
stos
mov
mov
add
lret
adc
loope
mov
push
inc
mov
jle
jnp
cmp
adc
lock
enter
jp
fwait
xchg
rcrb
or
roll
sbb
adc
daa
inc
fcmovnb
mov
dec
cmp
out
dec
pop
fbld
pop
mov
stos
ret
into
adc
bound
shl
mov
cld
loopne
js
mov
mov
jo
mov
jge
cwtl
add
dec
lahf
pop
lock
dec
popa
mov
jmp
sbb
mov
inc
cmp
loopne
pop
xor
ret
enter
or
dec
or
mov
mov
sub
jns
daa
ja
in
aaa
cs
pop
idivl
cmp
xor
std
pop
cmp
scas
imul
aam
and
pushf
sub
movsb
push
inc
imul
adc
inc
add
and
fs
lcall
cmp
adc
jae
mov
loope
lahf
lods
mov
in
inc
xchg
adc
xor
mull
test
push
clc
faddp
push
inc
mov
popf
out
lret
and
lods
mov
fwait
enter
mov
sbb
cli
jb
mov
xchg
idivl
pushf
pop
sbb
imul
dec
push
negb
cli
xchg
jmp
push
bound
dec
pop
mov
cmp
sub
sahf
ret
cmp
adc
xchg
sti
test
dec
and
dec
adc
shlb
cmp
cmp
rclb
mov
xor
test
adc
les
test
movl
lret
and
mov
iret
mov
int3
call
imul
mov
adc
fnstcw
inc
pusha
int
sub
std
cli
jne
pop
out
lret
cmpsb
loope
int
mov
in
decl
das
xchg
lods
ljmp
push
mov
inc
insb
into
fcomi
adc
out
scas
mov
ljmp
push
les
adc
lahf
leave
add
ds
sub
loope
push
mov
shrb
xchg
pop
arpl
aad
or
in
push
addr16
movsl
xor
sub
adc
cwtl
and
inc
xchg
xor
jno
mov
or
add
stos
sti
mov
je
inc
cmp
sub
xor
ljmp
pop
mov
icebp
or
jp
mov
andb
insl
js
pop
rcr
loope
pop
mov
outsb
jmp
xchg
pop
add
lods
das
cmp
fiadds
lock
outsb
mov
fs
lahf
mov
hlt
adcl
xchg
cmp
pop
adc
inc
out
add
and
mov
into
inc
xchg
lods
faddl
pop
mov
scas
pop
sbb
adc
jnp
sbb
js
cmc
out
ret
sbb
fldenv
addr16
adc
dec
testb
sbbb
inc
fdivrl
sahf
int
xchg
xchg
fsubl
and
xchg
inc
add
addr16
mov
pusha
pop
pop
int
mov
inc
adc
mov
decl
repnz
sub
fucomi
sbb
repz
not
push
ret
mov
push
mov
push
jns
add
xor
jecxz
jg
push
es
cmp
push
jb
xor
adc
pop
out
pop
icebp
xchg
jp
dec
les
insb
push
adc
dec
sub
repnz
sub
mov
jl
dec
cli
loop,pt
inc
addl
cmpl
enter
inc
movsl
stc
loopne
or
sti
inc
loopne
das
cmpsl
pop
lret
je
sbbl
decl
aam
aaa
ficomps
les
ret
add
cld
std
or
aam
hlt
inc
mov
inc
mov
repz
lock
jb
sbb
mov
push
add
xchg
roll
test
xchg
dec
pmullw
cmpl
sahf
adc
jl
lods
push
mov
push
rcl
mov
cs
sbb
test
insb
pushf
into
in
repnz
mov
pop
mov
push
sahf
pop
imul
mov
mov
mov
mov
test
or
add
lret
ljmp
ljmp
sbbb
test
icebp
mov
cmp
jle
jle
jle
push
call
ret
fldt
in
test
fisttpl
ss
lds
leave
ljmp
in
jmp
push
or
pop
adc
push
cmpl
jo
cmp
xchg
dec
cltd
pushf
test
mov
into
ja
scas
sbb
sahf
loope
lods
arpl
or
xchg
dec
fidivl
popf
mov
add
scas
movsl
push
xchg
inc
int3
jge
pop
and
repnz
lahf
fbld
sbb
add
sbb
or
mov
mov
push
push
ret
jmp
mov
xchg
pop
subl
inc
scas
sub
shll
cmp
sub
mov
jbe
mov
adc
or
int
test
add
pop
mov
dec
dec
pop
inc
pop
cs
push
fisttpl
out
pop
cmpsl
js
icebp
lret
jno
dec
xchg
cli
cmpsl
add
cmp
or
inc
pmulhw
mov
pop
pop
xor
cmc
std
cmp
xchg
adcb
cltd
pusha
jg
pop
fimull
xchg
leave
popa
xchg
testb
cs
jne
cmp
icebp
xor
movl
pop
enter
sub
push
lea
xchg
jns
addr16
inc
pop
jmp
das
mov
jg
lock
iret
jo
ret
aaa
imul
and
pushf
lahf
movsb
cmp
sub
xor
inc
mov
ljmp
daa
sbb
push
cmp
jle
pop
movsl
push
jno
leave
scas
adc
insb
inc
loope
xchg
push
push
mov
stos
xor
fistps
xor
mov
lret
xlat
sub
push
sbb
pop
in
int3
arpl
pop
arpl
jge
and
cs
sti
insl
push
mov
ret
mov
cmp
test
mov
mov
sti
sbb
cs
orb
lfence
sbb
test
dec
sub
or
or
mov
jge
je
outsb
add
and
arpl
mov
mov
push
and
cwtl
sub
test
das
xchg
add
adcb
loopne
pop
push
iret
sbb
es
das
int
xor
dec
test
cmp
pop
shrl
lods
scas
stc
pop
xchg
and
jge
test
sub
cmc
dec
inc
loopne
xchg
pop
lea
sub
add
gs
mov
inc
inc
xchg
xchg
xor
test
mov
push
pop
fbld
lods
stos
lahf
aam
and
inc
adc
outsb
test
fdivl
inc
clc
sbb
dec
xor
cmp
xor
jg
fs
popa
push
cltd
pop
jmp
inc
mov
mov
inc
push
jnp
and
pop
out
rolb
test
aam
jns
js
andb
stc
sbb
or
pushf
ss
adc
mov
dec
jle
lods
stos
or
test
push
mov
fnstenv
les
mov
add
cld
inc
insl
sub
xchg
cmp
imulb
out
arpl
push
fsubs
ja
mov
jns
andl
fidivrl
pop
sub
jge
lfs
jle
mov
and
cmp
sbb
divb
pop
jp
je
mov
push
call
cmp
stos
add
mov
in
mov
mov
pxor
addl
in
mov
in
pop
pop
outsl
cmp
push
loope
cmp
jns
and
pop
aas
fiaddl
pop
insl
inc
shlb
mov
in
pop
icebp
mov
lods
cmp
shrl
enter
lods
or
xchg
and
xor
push
push
pop
dec
lods
pop
fiaddl
insl
test
pop
and
sahf
xchg
mov
cltd
sbb
fisttpll
dec
shll
bound
test
adc
xlat
inc
mov
jecxz
fsubr
or
inc
push
sub
nop
movsl
jecxz
lods
jle
loope
or
icebp
jg
data16
sti
outsl
inc
out
push
sbb
mov
in
xchg
sbb
rorl
jno
sbb
fwait
test
jnp
jl
or
dec
xor
jl
jmp
dec
push
mov
sub
adc
sbb
les
ret
or
push
jb
dec
add
out
jp
push
sub
lret
push
add
cmp
mov
and
pop
pop
mov
inc
leave
or
int3
testl
inc
dec
mov
sub
xchg
jo
jne
inc
in
popf
mov
pop
rorb
out
into
addr16
fdivr
jp
add
inc
xchg
outsb
out
mov
orl
push
lock
out
mov
pop
pop
xchg
cmp
test
pop
cmp
sbb
sub
jne
and
sub
jb
stos
mov
sbb
mov
rorl
jno
sbb
jmp
out
loope
jge
push
addl
rcll
xchg
xor
frstor
movsb
cwtl
test
arpl
sbb
out
jns
xor
cmp
mov
call
mov
ljmp
pop
aas
andb
scas
insb
mov
lds
js
arpl
sub
lods
js
outsl
and
cmp
xor
inc
pop
daa
insl
lcall
ljmp
je
mov
pop
data16
xor
popf
push
addl
cltd
fldenv
push
adc
arpl
sahf
mov
mov
xor
pop
jo
repz
and
lret
arpl
popa
xor
xor
cs
pop
insl
test
sbb
ret
lret
push
cwtl
std
pop
cmp
orb
lea
jge
xchg
and
jo
push
imul
lea
inc
cli
mov
jns
sbb
and
xor
jl
push
or
cmp
sbb
data16
jbe
ret
xchg
dec
xor
mov
jmp
and
dec
bound
js
mov
fwait
popf
jb
sti
mov
mov
mov
lods
mov
fcmovnbe
fisubs
jnp
xchg
pop
leave
push
test
mov
arpl
ret
int
mov
mov
pop
mov
mov
fcompl
inc
sbb
mov
ss
cmp
pop
mov
ret
pmaxsw
xlat
dec
js
nop
adc
insb
dec
push
jge
dec
call
insb
ret
out
out
push
sbb
inc
imul
xor
loopne
pop
daa
dec
dec
stos
inc
ljmp
cwtl
xor
lcall
inc
mov
lcall
jge
lods
dec
test
cmp
shrb
nop
sub
or
repnz
mov
pop
jns
and
cmp
rorl
push
mov
movsl
nop
pop
push
pusha
popa
repz
jne
shlb
sub
aaa
dec
les
adc
mov
push
orb
dec
out
cmpl
inc
out
mov
mov
bound
mov
pusha
mov
sub
insl
xchg
xchg
test
leave
jae
mov
sti
mov
pop
xchg
aas
push
jne
pop
pop
lret
inc
ja
cltd
push
adc
mov
mov
mov
sbb
add
adc
imul
xchg
cmp
jmp
pop
insb
iret
add
push
jge
add
inc
xchg
jmp
scas
movsb
fildll
mov
pop
fdivl
jbe
fstps
jmp
xor
jl
xor
jle
xchg
mov
pop
gs
push
bound
ret
in
or
xor
add
pop
sbb
out
xor
movb
xchg
sti
and
lds
add
andb
jo
rorb
jg
xor
mov
adc
insb
fdivs
mov
jle
jle
in
xor
pop
mov
es
fwait
jge
enter
mov
cmc
cmp
or
add
mov
mov
xor
scas
rcll
mov
nop
mov
idivl
mov
sbb
rcrb
cmp
mov
dec
xchg
mov
out
pop
insb
iret
xchg
jle
add
daa
ja
mov
sbb
fdivrs
xor
pusha
ljmp
jnp
adc
push
xchg
inc
fcomps
jns
jecxz
bound
push
push
jae
fistl
div
addb
enter
mov
sbb
pop
mov
and
les
add
aas
mov
clc
je
sub
sub
cmpsb
imul
mov
dec
pop
movsb
xchg
aad
push
into
sub
clc
test
mov
and
ja
lret
and
pop
dec
jnp
outsl
pop
daa
or
add
xchg
push
loope
xor
sbb
adc
das
and
hlt
xor
pop
xlat
xor
or
sub
pop
rolb
mov
test
lahf
lock
test
ret
loopne
add
sbb
or
mov
mov
pop
insl
repz
test
cmpb
mov
jle
jecxz
ja
cmp
jg
scas
mov
lahf
mov
mov
jo
and
push
dec
add
mov
cltd
sub
mov
jno
insb
sbb
mov
mov
leave
int
push
lret
loop
cli
popa
mov
jg
aam
push
fcomp
test
pop
ret
dec
imul
jmp
add
pop
mov
push
por
repz
std
and
bnd
mov
js
jmp
dec
xor
xchg
push
into
sbb
cltd
or
aas
adc
adc
sbb
push
jl
add
add
xor
mov
mov
mov
cmpsl
mov
adc
ja
jle
je
jo
jl
loopne
incb
rcll
ja
fs
push
mov
repz
rcrl
inc
lods
gs
inc
jno
push
or
mov
mov
test
flds
stos
movsb
jecxz
adc
ficompl
movsl
test
push
inc
lods
test
mov
mov
xorl
pop
cmp
cmp
mov
and
xchg
je
inc
ja
aad
mov
out
push
pop
pop
jmp
pop
sahf
call
pop
addb
pop
shlb
xor
stc
insb
or
imul
loop
inc
push
jns
mov
sbb
arpl
ja
repz
sub
ds
add
pusha
scas
sbb
inc
shll
in
lea
dec
sub
mov
popa
dec
mov
arpl
push
mov
std
bound
mov
outsb
xor
sbb
aas
dec
jnp
mov
rcrl
jno
adc
popf
subl
sbb
adc
xchg
or
mov
hlt
jp
fadd
leave
nop
inc
sbbl
sbbb
adc
gs
jecxz
adc
les
xchg
jmp
add
test
mov
cmpsl
enter
lcall
xor
dec
push
and
xor
pop
or
fisttpl
jae
sbb
fnstenv
addr16
dec
mov
or
sub
push
aad
push
test
cli
mov
sub
or
add
push
and
xor
loope
pop
sbb
mov
rcrl
outsb
or
sbb
push
cmp
lret
mov
mov
fidivl
xchg
xor
jecxz
insb
pop
mov
sarl
stos
mov
dec
and
xchg
or
jno
adc
outsl
and
dec
iret
push
sub
and
pop
inc
scas
xchg
cltd
xchg
into
fstpt
xor
test
lea
push
ficoms
and
subb
cmc
repnz
repz
or
inc
jl
leave
push
add
imul
into
in
js
enter
dec
xchg
mov
inc
outsb
jecxz
dec
mov
arpl
dec
add
insb
push
popl
imul
hlt
adc
bound
icebp
dec
fmuls
mov
mov
mov
mov
jno
int3
lcall
rcl
incl
shrl
int
dec
mov
sub
or
rclb
das
mov
pop
jle
pop
hlt
shlb
ja
pushf
mov
mov
in
jp
fnstenv
mulb
inc
cmc
insl
sbb
sbb
cmp
mov
cmp
sub
arpl
call
or
mov
aaa
or
dec
jnp
in
test
or
mov
stos
popf
repnz
adc
packuswb
xor
lds
pop
dec
in
and
sbb
and
and
pop
mov
addr16
imul
mov
dec
push
mov
cltd
sub
push
pop
mov
imul
js
mov
adc
cmp
xlat
push
iret
mov
push
insl
mov
gs
sbb
jle
pop
mov
mov
scas
inc
mov
jp
dec
rorl
push
mov
aad
fcmovne
add
addr16
sbb
pop
rorb
xchg
and
add
fdivr
mov
lods
in
mov
dec
push
dec
icebp
aad
xchg
pop
push
andl
je
sub
or
movsb
add
outsl
sub
fdiv
dec
in
and
shll
mov
mov
dec
lret
mov
mov
flds
cmpsl
stos
je
mov
js
mov
adc
and
jecxz
push
xchg
xchg
addr16
ja
lret
cmpsl
sbb
xchg
insl
sahf
stos
cs
imul
push
outsl
aas
iret
sbb
push
icebp
loopne
out
pop
jecxz
cmpsb
or
roll
jmp
std
xchg
hlt
in
mov
sbb
mov
rorb
decl
fildll
repz
inc
xor
lods
cmp
push
cld
pop
sbb
mov
div
insb
cmpsl
xor
mov
fwait
arpl
pusha
stc
loop
push
es
push
jb
add
movsl
or
stos
push
sub
and
data16
mov
xchg
repz
and
adc
sbb
cmp
dec
pop
adc
inc
das
xchg
fcom
out
push
xchg
mov
or
jecxz
sub
popf
push
pop
jno
mov
cmpsl
rorb
stos
cmp
into
xlat
arpl
push
icebp
xlat
lds
cmp
int
pop
jmp
push
add
xchg
push
jmp
movsb
xorb
sub
adc
xor
ror
mov
fidivs
add
out
aam
pop
daa
lahf
and
add
ja
mov
dec
push
das
sub
inc
rorl
push
mov
mov
fwait
lcall
sbb
cld
xchg
ss
stc
sbb
sahf
iret
lahf
adc
arpl
mov
xor
les
lods
rcll
shr
popf
sbb
pop
cmpsb
ret
dec
mov
decl
mov
mov
mov
mov
in
or
mov
dec
call
or
push
in
rorb
pop
mov
sbb
int3
mov
xchg
popf
cmc
adcl
sub
cld
inc
scas
mov
addr16
mov
mov
push
jle
pusha
and
arpl
leave
je
pop
add
ret
jne
cmp
leave
mov
mov
mov
xor
mov
mov
add
nop
inc
sbb
xorb
les
int
jp
fs
sub
jbe
out
popf
test
adc
pop
hlt
adc
ljmp
cli
mov
imul
push
push
cmp
sub
mov
aad
push
loopne
mov
xlat
xchg
fidivl
les
push
sbb
push
ret
inc
push
les
xor
mov
repz
add
and
negl
icebp
add
xchg
rcrb
test
arpl
enter
je
shlb
adc
or
ret
repz
ret
push
jbe,pn
mov
inc
hlt
pusha
adc
pop
mov
imul
cmp
das
xor
fstpl
push
insl
sbb
sub
pushw
xor
sbb
repnz
test
scas
or
ljmp
test
stc
arpl
adc
lret
adc
call
mov
test
dec
push
xchg
fimuls
pushf
mov
mov
mov
mov
ficoml
xchg
dec
push
cmc
mov
pop
and
test
xor
mov
in
sbb
jl
sbb
mov
inc
in
popf
test
xchg
out
lret
fwait
outsl
push
cmc
mov
pop
pop
dec
cmp
xor
or
movsl
xchg
je
loop
aaa
aam
sbb
sbb
mov
push
insb
inc
daa
movsl
add
mov
push
dec
xchg
pop
sub
push
loopne
cmpsb
into
mov
mov
mov
aaa
sarl
mov
xchg
inc
cmp
dec
push
jno
xchg
fidivs
jmp
shlb
and
and
int
sub
adc
push
in
in
adc
adc
mov
adc
fstpt
aam
cmpl
xchg
das
lret
inc
stos
out
insl
enter
and
loop
outsb
ret
adc
lcall
es
jnp
mov
add
add
push
repnz
xchg
shrl
sbb
mov
adc
lods
mov
push
icebp
push
push
mov
and
jo
into
pop
pop
mov
or
dec
mov
add
insb
ret
sub
or
pop
rcl
push
std
mov
mov
jecxz
add
inc
aam
pop
or
xchg
fwait
inc
adc
lret
js
sbb
mov
dec
ret
xor
lahf
or
inc
lock
pop
dec
fwait
cmp
nop
sub
lds
jae
mov
fwait
cmp
inc
inc
adc
mov
push
mov
les
daa
and
mov
push
in
ss
xchg
hlt
int3
lcall
ljmp
ds
xchg
inc
cmpsl
sbb
or
sahf
push
cmp
aaa
or
les
mov
inc
dec
cs
insb
pop
test
sbb
fdivl
and
dec
push
add
or
mov
cmpsl
jno
pop
jl
adc
sbb
pop
rcrb
pop
push
xor
push
push
stc
movsb
mov
loopne
add
mov
jl
mov
sub
or
dec
enter
inc
xor
xor
repnz
cmp
out
or
add
std
gs
xchg
sbb
inc
push
lret
rolb
clc
mov
fiadds
pop
aad
jle
popa
mov
push
push
lods
fsubl
jb
jns
jecxz
xor
sub
bound
std
divb
xchg
mov
cmp
out
fnstenv
int3
fwait
loop
stos
adc
cmpsl
cmc
xchg
js
pop
lahf
outsb
sub
cs
loop
cmp
lods
sarl
jl
pop
push
pop
xchg
mov
cmp
imul
out
scas
std
jecxz
js
fs
das
adc
push
or
sub
stc
jmp
sub
add
add
or
mov
add
jp
into
aad
adc
push
dec
xchg
sbb
push
push
lds
loopne
sbbl
sub
jne
cmp
fdivrl
push
dec
sbb
jmp
xor
jmp
add
push
cmp
pop
sub
enter
add
adc
or
jecxz
dec
and
push
cmc
cmc
faddl
call
mov
mov
mov
add
jae
and
dec
dec
in
in
jne
sub
popa
sub
ds
ds
jo
pop
in
adc
in
pushf
jp
sbb
pop
add
sbb
jg
fdiv
jl
sub
xchg
out
inc
xchg
jle
pop
scas
jnp
movsl
aas
fstl
xchg
lea
xchg
xor
xorb
inc
xor
push
push
mov
inc
movl
or
xchg
lret
stos
hlt
imul
sub
imul
mov
pop
loop
mov
dec
xchg
push
iret
inc
imul
mov
in
aas
pop
bound
incl
adc
lock
sbb
inc
test
xlat
enter
inc
ljmp
iret
or
mov
xor
sbb
daa
jle
push
mov
add
popf
mov
lret
add
dec
shlb
sbb
push
mov
loop
sbb
testl
adc
or
out
push
and
or
int
push
or
sub
cld
pop
mov
mov
mov
mov
push
adc
mov
sahf
mov
les
loopne
pop
push
adcl
mov
mov
sub
pop
pop
iret
jno
jg
mov
jnp
cmpsb
shlb
stc
loop
inc
push
in
push
ret
or
jae
outsl
imul
cmpsl
stos
adc
pop
mov
xchg
bnd
pop
cli
mov
rolb
adc
sub
aam
sbb
out
inc
int3
pop
testb
mov
hlt
xchg
push
pop
xchg
out
ret
test
mov
mov
dec
inc
and
xor
xchg
clc
test
jno
lea
xor
push
leave
sbb
sub
mov
add
rcrl
pop
cmpsb
ret
xchg
xchg
mov
xor
mov
dec
pop
rep
popa
sbb
dec
dec
xchg
add
jge
cmp
xchg
jl
add
shll
roll
adc
clc
adc
push
into
cmp
hlt
dec
push
or
dec
cmp
ljmp
pop
rclb
aaa
sub
pop
lret
or
jge
jne
scas
push
jbe
sarl
pushf
xor
sub
lods
and
push
cmp
and
test
stos
jl
xor
inc
ds
hlt
ret
cli
mov
pop
popf
mov
mov
lret
test
cmp
cmp
mov
xlat
jp
loop
js
movsl
test
nop
mov
into
and
jbe
call
sbb
xchg
popf
jae
test
testb
sarl
push
loop
lea
inc
sbb
and
shlb
and
int
insl
and
int
lods
xchg
insl
jg
mov
xchg
lret
xchg
je
jno
jns
sbb
push
mov
or
iret
aaa
or
ja
dec
test
jge
jmp
xchg
fmuls
sub
repz
xchg
loop
xor
test
pop
mov
cld
es
and
arpl
les
mov
cmp
arpl
fldcw
push
cmp
jbe
push
out
cmc
or
subl
je
imul
icebp
popa
scas
jne
cmp
mov
cmp
ret
test
loop
test
pop
rorl
shrb
ret
or
cmp
mov
adc
ret
push
cmp
jne
push
mov
inc
jae
insb
sbb
lods
shll
movsl
nop
fidivrl
inc
mov
xor
sahf
idivb
push
sbb
mov
fnstcw
hlt
pop
dec
and
sti
mov
inc
or
sub
adc
sahf
push
pop
pop
xor
dec
mov
out
push
pushf
dec
movsb
lods
aam
mov
outsl
pop
sbb
jnp
adc
insl
out
xchg
xchg
sbb
and
hlt
test
push
mov
add
pop
lock
mov
pushl
cld
repz
xor
out
sti
xchg
fdivl
push
mov
sbb
dec
sahf
adc
sbb
inc
and
push
sbb
jmp
mov
pushf
add
lret
fistpll
std
pop
mov
das
inc
pushf
stos
mov
push
stc
sub
adc
pop
inc
sbb
js
in
lea
out
es
sub
aad
add
scas
enter
adc
push
stc
les
jmp
push
fldcw
dec
push
cmpsl
xchg
sbb
lret
adc
lods
mov
imul
dec
push
out
inc
push
or
dec
ret
and
ret
inc
popf
pusha
inc
push
movsb
mov
mov
mov
jne
sti
sub
faddl
pop
scas
addb
push
or
sbb
in
push
data16
repz
xchg
xchg
pushf
scas
pop
push
stos
cs
mov
add
rolb
pop
cltd
repz
and
cs
jnp
mov
pop
add
lret
mov
test
enter
js
pop
idiv
mov
push
mov
into
jb
jp
in
aam
fs
in
cli
mov
inc
scas
ret
repnz
mov
mov
movsb
je
outsb
mov
popf
sub
mov
dec
ficoms
xchg
dec
jae
addr16
cmc
jne
sbb
adc
fwait
sub
jo
cwtl
repnz
inc
outsl
mov
add
jne
cmp
mov
dec
xor
pusha
xchg
adc
jns
daa
pop
push
outsl
xchg
out
imul
out
jmp
xor
rolb
mov
ret
sbb
test
sbb
sbb
push
sbb
shrl
repnz
aad
je
clc
cltd
add
mov
ljmp
adc
rcl
aam
mov
sbbl
std
mov
sbb
pop
int
xchg
mov
xor
das
and
dec
dec
pop
or
fnstsw
push
sub
add
jo
cwtl
loope
int3
out
nop
push
dec
aam
mov
imul
popa
mov
xchg
gs
outsb
rol
dec
push
idivl
movsl
xchg
or
pop
dec
dec
out
jmp
cmp
push
subb
inc
icebp
xor
sub
mov
nop
push
and
xchg
scas
rep
test
jnp
cmc
add
xlat
jns
jg
jo
add
aam
push
mov
movsb
mov
xor
enter
xorl
push
insb
fistl
out
fbld
jo
mulb
and
or
xor
ret
adc
mov
xchg
lahf
push
push
aas
fsubs
outsb
xchg
mov
adcl
lret
mov
jno
pop
ficoml
dec
jbe
faddp
sbb
cld
add
dec
pop
stos
bound
int3
jle
bound
enter
stos
addr16
daa
repnz
pusha
xor
test
mov
call
ja
inc
enter
and
imul
in
mov
fcoml
push
lret
repz
jo
insb
xchg
mov
and
sub
sub
cmp
mov
push
movsl
scas
loope
orb
ds
pop
xor
mov
rorl
xor
stos
roll
pop
or
xchg
cld
aaa
sbb
sbb
mov
movsl
fsubl
lds
sub
insb
push
and
pop
lret
mov
and
jae
or
and
or
lock
mov
ja
jno
cmc
dec
adcb
xlat
outsl
out
pop
push
add
in
aaa
retw
cmp
mov
mov
test
cmp
adc
ret
adc
and
jge
outsl
mov
and
imul
roll
add
popf
jp
mov
mov
in
leave
pop
scas
jle
xchg
xor
movsl
arpl
js
cmp
push
xchg
fbstp
js
xor
jmp
or
pop
and
int3
dec
push
push
cmp
add
call
xorl
or
sub
push
into
mov
jle
or
stos
dec
mov
xchg
ret
popf
iret
fistl
push
fnsave
mov
mov
xchg
push
xor
xor
rcrl
addl
mov
loopne
mov
push
daa
mov
mov
out
mov
imul
out
fcmovbe
mov
popa
cmc
lcall
out
fcmove
out
movsb
sub
int3
and
cli
mov
dec
lcall
jg
jge
inc
pop
pop
jl
outsb
or
iret
and
mov
pop
cmpsb
fbstp
mov
loope
test
fsubrp
sub
xor
iret
movsl
push
and
iret
push
adc
lret
scas
xchg
jge
adc
xchg
lods
add
inc
movsb
sbb
jno
sbb
ret
test
sub
rclb
push
xchg
mov
and
adc
xchg
adc
add
es
push
das
sti
cmc
mov
dec
pushl
inc
jge
hlt
dec
lock
lods
inc
push
adc
into
cmp
fld
hlt
decb
xchg
sbb
jp
ljmp
pop
pushf
push
iret
mov
jne
xor
mov
outsb
cmp
pop
mov
mov
cmp
dec
andl
xor
mov
bnd
mov
js
and
and
sar
sahf
pop
in
jp
in
leave
push
and
xchg
fsubl
notl
lods
xor
push
sub
jae
mov
lds
adc
pop
out
mov
les
sahf
sub
pusha
test
repz
or
imul
rcr
pushf
iret
mov
lods
lret
sub
mov
std
push
lock
subl
test
push
out
addl
into
adc
aas
clc
aas
stos
xchg
push
fsubl
aaa
mov
in
mov
movsb
sbb
fildll
add
stc
sbb
mov
icebp
lods
pop
lea
inc
in
in
mov
popw
cwtl
mov
cmp
inc
jno
es
xchg
xchg
xor
ljmp
pop
pop
mov
inc
test
sub
mov
adc
lcall
jg
test
pushf
movsl
and
cmp
sbb
js
imul
fistl
subb
and
inc
mov
popa
nop
ret
sub
jb
jmp
mov
jg
jp
icebp
lret
sub
pop
cmp
xor
lret
popa
jg
lea
ljmp
mov
xchg
pop
pop
lods
rcr
out
mov
cmp
xchg
cmp
mov
ficomps
scas
add
jecxz
movsl
and
aaa
adc
mov
sahf
popa
mov
adc
lods
std
out
jp
mov
stos
xchg
loopne
loop
cmp
and
add
dec
sub
sub
mov
jge
sbb
push
inc
push
das
sub
pop
fistpll
xor
dec
lea
cmp
pop
dec
cmpl
enter
test
or
xor
shr
jle
jno
das
jae
aaa
int
and
sub
lea
out
movsb
dec
test
outsb
push
push
lds
push
xlat
xor
lods
es
fistps
push
sbb
jo
lcall
mov
sub
xor
stos
pop
outsb
stos
subl
sub
mov
leave
arpl
adc
or
out
cmp
add
add
mov
jmp
shl
mov
fstl
insl
movsb
inc
sbb
mov
roll
pop
out
pop
adc
push
dec
shlb
mov
lret
pushl
mov
jnp
repnz
add
mov
shlb
aaa
dec
adc
add
add
lods
cmc
jmp
cmpb
jbe
push
lret
pop
cwtl
enter
sub
dec
movsb
jb
sarb
xor
dec
cwtl
aas
mov
jmp
cli
mov
scas
mov
jp
jo
mov
mov
jae
mov
jnp
lods
hlt
add
aaa
call
sub
fwait
pop
cwtl
scas
push
sub
test
adc
je
push
sbb
cmp
xchg
stos
mov
loope
scas
add
mov
jnp
nop
jl
out
pop
mov
mov
lock
adc
dec
sub
sbb
cmp
sub
mov
cbtw
mov
push
dec
jb
daa
jecxz
mov
enter
call
imul
data16
mov
mov
mov
lock
add
aam
mov
xchg
mov
imul
icebp
inc
call
scas
cmp
push
push
cmovle
in
test
sbb
mov
sub
inc
in
jl
bound
xchg
xlat
push
inc
push
adc
cmp
mov
mov
scas
scas
push
sbb
test
push
sub
mov
sbb
sbb
mov
data16
imul
inc
or
ss
pop
dec
mov
cmp
fsubrl
xchg
dec
cmc
mov
mov
adc
dec
lret
jns
mov
xchg
or
mov
test
push
out
jne
into
lahf
orb
push
nop
filds
mov
dec
jae
in
cwtl
fwait
dec
les
icebp
pop
aaa
inc
mov
ret
jle
add
mov
leave
push
dec
aaa
adc
jno
and
push
loope
jnp
aam
mov
dec
cs
pop
inc
jg
adc
mov
inc
in
jae
mov
push
andl
stos
je
idivb
add
jg
jle
outsb
sub
iret
out
pop
es
popf
mov
icebp
push
imull
andb
add
int
dec
xor
je
sub
mov
add
shll
push
loopne
mov
test
repz
jmp
dec
stos
fadd
nop
sbb
out
mov
pop
adc
mov
jecxz
in
and
lock
repz
shr
mov
mov
sbb
mov
imul
jp
xor
js
jns
push
cmpsb
xchg
clc
sarl
mov
imul
push
stc
imul
sbb
out
stos
cltd
jnp
subb
add
cmpsb
cmpsl
lock
in
push
mov
jne
cmpsb
test
or
fsubs
jnp
pop
inc
pop
cli
cwtl
dec
mov
lock
sahf
jbe
adc
mov
shll
mov
xchg
jecxz
sub
adc
cmp
jecxz
in
scas
adc
movsb
push
lcall
push
push
jns
sbb
pusha
mov
insb
inc
aaa
dec
mov
push
aas
or
hlt
mov
popa
jns
out
jae
sub
ror
pop
lea
mov
mov
ja
sub
movb
filds
or
cmovo
adc
cmp
and
pop
push
icebp
push
mov
arpl
cmp
stos
push
inc
mov
dec
xor
shrl
sbb
adc
push
aad
scas
hlt
out
mov
stos
cwtl
icebp
loopne
icebp
and
int
pusha
mov
mov
sbb
dec
icebp
dec
loope
movsb
lock
int
inc
and
shrl
jno
pop
mov
sub
add
cld
icebp
pop
sbb
lret
pop
mov
sarb
mov
loop
cs
sub
sahf
scas
stos
out
stc
cli
fsub
push
lds
outsb
les
push
sbb
cmp
sub
dec
sbb
push
xchg
sbb
xor
xor
testb
ljmp
sub
cmp
jecxz
inc
outsb
sub
push
pop
stc
adc
mov
adc
and
mov
sbb
mov
stc
out
cmc
sub
push
cmp
or
data16
xorl
xor
pop
pusha
sahf
inc
xchg
and
mov
or
test
leave
jecxz
jge
sbb
jns
shlb
sub
fcomip
fidivl
cmpsb
jae
push
lret
rolb
stos
aad
inc
mov
fdivrs
xchg
cs
ficoml
hlt
mov
pop
cmp
orb
data16
and
scas
pop
xchg
subl
adc
std
scas
add
pop
js
cmc
clc
data16
inc
repnz
test
inc
add
fwait
add
stos
icebp
sub
cmova
idivb
pop
out
jge
adc
out
mov
lods
rcrb
mov
gs
enter
mov
push
mov
lret
aaa
dec
loopne
loope
add
dec
sbb
mov
movsb
add
and
push
nop
jge
lret
pusha
rcrb
jae
or
jl
mov
xchg
or
sub
add
jnp
sar
test
mov
jle
test
aad
dec
pop
adc
shrl
mov
add
testb
inc
pop
add
test
mov
cmc
and
sbb
xchg
dec
cs
lods
add
or
stc
xor
inc
in
dec
es
and
imul
cmp
lcall
orl
mov
je
dec
mov
std
jecxz
push
mov
pop
sar
sub
imul
or
int
dec
push
xlat
std
add
xchg
adc
sub
push
push
xor
xlat
in
mov
test
mov
xchg
adc
negl
push
pop
push
out
sub
mov
enter
lahf
push
in
lods
rcl
in
sbb
loop
out
or
xchg
fidivrl
mov
in
mov
mov
dec
mov
mov
ret
and
cmp
or
xlat
inc
dec
xor
sti
mov
mov
add
rorb
dec
insb
cld
stos
fisubl
scas
test
push
test
push
jp
fnsetpm(287
sub
cmp
jl
mov
sbb
sti
xor
in
ljmp
iret
push
fstps
dec
ret
cltd
push
into
enter
mov
test
and
cmp
cmp
mov
insl
unpcklps
das
popa
dec
cli
push
mov
pop
cmp
xor
or
in
arpl
std
mov
loopne
arpl
xchg
rclb
stc
std
data16
rcl
gs
testb
mov
push
inc
adc
leave
and
jg
mov
lcall
jne
sub
cmpb
sbb
ljmp
dec
fstl
xchg
shrl
sbb
data16
out
std
pop
fadds
or
xchg
push
hlt
push
in
fisubl
imul
loop
aad
or
loope
in
ss
dec
xor
inc
dec
inc
lods
leave
jbe
lods
fcomps
lods
xor
jb
loop
pop
mov
test
mov
xchg
sub
in
lret
rcll
ficompl
insb
or
icebp
mov
xorl
mov
xor
mov
pusha
or
cli
rol
int
jbe
mov
jbe
stos
pop
add
cmp
mov
popf
mov
or
sub
negl
cs
lea
pop
mov
jg
or
cwtl
cmp
mov
in
adcb
dec
testl
fsub
add
xorb
sub
ss
in
fcmovnbe
inc
in
cmp
cwtl
shl
lret
outsb
pop
mov
cltd
and
sub
cmpsl
add
frstor
mov
scas
pop
dec
movsl
cwtl
test
outsb
bound
push
bound
mov
ret
mov
or
mov
aaa
push
jmp
jmp
nop
jo
sbb
cs
mov
insb
lds
jl
loope
pop
test
cld
jp
mov
fwait
movsb
shll
aas
adc
js
rcl
repz
into
insb
pop
call
mov
push
int3
xor
insl
gs
xchg
or
cmpsl
and
pop
sti
lret
mov
popa
outsl
mov
je
aaa
sbb
shlb
and
pop
jb
les
bound
push
loopne
or
xchg
mov
imul
loope
jb
xchg
ds
jecxz
cmp
or
aas
pop
xor
das
push
xor
insb
pop
shrb
jb
rorl
sbb
loope
dec
lea
pop
mov
xor
insl
adc
sub
mov
lcall
test
lahf
imull
mov
popa
decl
jns
test
dec
xchg
inc
fnstcw
xchg
mov
das
jae
dec
sub
mov
mov
aaa
cwtl
jae
aam
pop
icebp
mov
sub
ja
xchg
outsl
pop
xchg
movsl
mov
fidivl
push
mov
jo
call
and
shl
test
mov
xor
lahf
lock
jecxz
ret
loop
rolb
adc
push
push
fildll
int
jle
shrb
test
sbb
xchg
insb
addl
aam
int
mov
push
shll
xchg
lds
mov
adc
leave
push
push
sub
inc
in
mov
mov
mov
cmc
dec
pop
sbb
not
ljmp
sub
pop
fiaddl
bnd
fidivrl
aam
sbb
adc
sub
jl
cs
sbb
int
add
in
xor
jge
fstl
mov
jmp
and
mov
jne
imul
and
fidivl
testl
mov
xchg
cmp
scas
add
xor
jl
adc
and
pop
inc
inc
cli
les
dec
insb
push
test
jo
mov
ret
icebp
add
mov
aad
out
pop
lcall
xlat
xchg
sub
push
push
jmp
cmpsl
pop
xor
cmp
lods
add
std
jmp
push
fpatan
xlat
or
rcl
or
mov
adc
pusha
ja
test
sub
sbb
in
inc
cmpsb
test
loopne
fldcw
or
or
lret
xor
xchg
mov
mov
cmp
push
jne
sbb
mov
outsl
sbb
or
cmc
jo
jne
std
outsb
mov
loopne
fsubl
sub
xchg
add
xchg
popf
mov
adc
sbb
sti
cli
scas
repnz
leave
inc
fmuls
es
mov
lahf
ljmp
int
out
js
cmp
mov
sbb
push
jb
inc
iret
mov
sbb
xchg
es
add
rcll
xor
repz
mov
cltd
cmpsl
das
popa
dec
sbb
inc
lcall
cmpsl
push
mov
mov
lcall
aaa
adc
cmpsl
popf
xchg
fdivs
imul
and
aaa
pop
andb
push
push
cmp
xchg
mov
dec
xor
xchg
out
jp
sub
ss
sbb
inc
jl
sbb
into
and
cmp
icebp
adc
test
invd
cmpsb
fidivrl
push
jmp
and
or
aad
stos
fildl
mov
jle
je
arpl
movsl
dec
push
pushf
shrl
sbb
iret
sub
int3
cmp
sbb
xor
adc
rcl
pop
jmp
adcl
loopne
pop
push
xlat
daa
and
movsb
fisttpl
out
fstpl
lahf
mov
mov
mov
push
rol
cmp
or
adc
jecxz
jnp
mov
sbb
clc
pop
inc
cmpsl
inc
fidivl
cmpsb
or
ret
xchg
scas
mov
sbb
das
test
std
test
mov
dec
fwait
jg
cli
mov
dec
aad
adc
xor
ja
dec
mov
or
icebp
out
imul
push
ja
lods
ret
je
inc
mov
push
jo
pop
xor
jle
inc
mov
sti
cmp
adc
sub
or
enter
repz
or
fldenv
sub
xchg
sub
pop
test
mov
icebp
enter
mov
popa
adc
push
dec
bound
daa
jmp
mov
mov
or
enter
push
jo
shrl
xor
inc
adc
mov
sti
dec
xchg
lret
mov
dec
lret
out
jae
aad
mov
orl
add
and
icebp
mov
imul
pop
insl
jno
cmp
jno
insb
pop
sbb
lods
les
orb
xlat
scas
add
daa
add
stos
lea
sub
dec
mov
mov
dec
push
xchg
adc
xor
daa
imul
into
fbld
mov
out
lods
and
daa
scas
pop
sbbb
cmpsb
shlb
pop
clc
daa
cltd
ret
jb
mov
push
lock
mov
enter
and
pop
test
popf
dec
cmp
pop
sbb
mov
sbb
bound
call
push
pop
adc
sahf
out
pusha
xchg
and
inc
iret
cmpsb
pop
jo
daa
mov
outsl
ficoml
add
lods
divb
fwait
scas
or
sbb
lret
rcl
fisubrs
xor
push
or
push
enter
mov
rcll
pop
xchg
pop
dec
add
or
xchg
pop
fmulp
push
lds
jmp
xor
sub
imul
subb
xor
adc
xchg
mov
es
cwtl
and
pop
mov
jo
mulb
dec
jnp
std
fiadds
jmp
dec
and
rcll
dec
adc
ljmp
pop
sub
outsl
inc
cwtl
mov
fwait
cmp
and
movsl
lret
popa
push
test
cld
lea
stc
pusha
mov
rorl
in
dec
sahf
test
pop
lds
lea
aas
jae
add
or
ficomps
cwtl
stc
mov
cmp
cmp
dec
lret
xchg
xchg
movsb
or
lcall
lds
dec
bound
adc
dec
popf
jb
cltd
lods
out
sbb
sahf
add
test
data16
or
pop
pop
or
ficomps
pop
xor
cwtl
enter
das
add
pushf
pop
bound
xchg
push
add
cwtl
xchg
jno
or
daa
fcom
add
pop
pop
xor
cld
add
adc
and
adc
inc
testl
pop
xor
pusha
cwtl
scas
fdivl
je
sbb
xor
xchg
ja
call
mov
sub
adc
jmp
jmp
xchg
movsl
push
mov
inc
nop
mov
out
movb
fadds
push
out
jns
in
jge
sahf
test
mov
cld
in
push
in
insb
scas
lock
or
arpl
rolb
push
adc
dec
inc
pop
out
xor
or
js
xor
inc
pop
ficomps
mov
sahf
mov
mov
popa
mov
jp
mov
stos
scas
data16
jns
out
dec
into
inc
lcall
aas
jb
roll
jns
repnz
fistps
inc
arpl
cmp
jl
cmp
insl
shll
test
xor
push
addr16
cld
call
sbb
loop
or
in
sub
hlt
sbb
and
out
int
pushf
xor
sub
fists
xchg
pop
cmp
dec
inc
subb
lock
imul
nop
bndstx
cmpsl
fs
xchg
lcall
gs
outsb
stc
pop
std
insl
outsl
in
sub
inc
dec
ja
aaa
jle
push
out
lds
jmp
in
bts
shl
adc
dec
sbb
fwait
pushf
jbe
or
lds
mov
xchg
mov
jge
loopne
mov
cmc
fistps
orb
mov
inc
pop
ljmp
out
stos
lock
fucomip
mov
ret
mov
stos
int
mov
add
je
push
cmp
insl
out
push
sub
dec
js
add
push
fwait
cmp
js
pop
subl
imul
sbb
jno
push
sbb
orb
insl
push
inc
stos
xchg
test
popf
or
xchg
mov
mov
outsl
fs
lds
mov
xor
out
in
cld
out
pop
dec
xor
ja
and
aas
lcall
mov
mov
sbbb
out
bound
insb
jg
mov
and
jb
outsl
or
jl
ss
lock
aad
cld
call
push
addl
sti
and
fs
cmp
div
push
test
push
andb
dec
pop
mov
stos
mov
pop
mov
sti
scas
inc
clc
cmp
mov
or
movl
test
fs
test
adc
cmc
icebp
jo
mov
clc
nop
jnp
pop
or
or
jecxz
aam
and
cld
mov
jmp
xchg
sub
xchg
test
xchg
mov
shlb
lea
inc
fwait
dec
je
xor
jae
in
xchg
inc
pop
push
mov
loopne
aaa
xchg
lods
mov
mov
cmc
pop
dec
addl
test
clc
sarl
test
or
sbb
mov
pop
iret
push
movsb
or
dec
mov
sarb
insl
pop
and
shll
pop
repnz
pop
aam
mov
sti
pop
js
popf
mov
xor
gs
push
or
xchg
push
cltd
jb
int3
mov
icebp
sub
push
in
insl
cmp
lds
mov
push
xchg
aam
daa
sahf
mov
mov
push
and
jo
jg
jg
cmpsl
jno
mov
jmp
jge
insl
xchg
push
jbe
dec
or
ds
leave
insb
mov
subl
sub
outsb
dec
call
push
jne
cmp
or
mov
in
dec
fwait
outsl
add
cmp
cmpsb
or
lds
push
cwtl
cmp
pop
mov
mov
xchg
mov
subb
mov
js
loopne
mov
xchg
rcll
add
push
nop
jp
cmp
scas
add
shrl
fdivr
pop
scas
mov
inc
lahf
xor
and
dec
lret
cmp
stc
push
ds
pusha
sahf
adc
push
add
outsb
pop
imul
inc
xchg
out
mov
xchg
lret
fsts
cmp
xor
xor
out
xor
mov
mov
sbb
scas
shl
stc
sub
dec
jecxz
in
mov
mov
mov
jge
leave
mov
or
mov
pushf
xor
mov
clc
leave
pop
push
push
gs
xor
pop
mov
adc
or
lock
sub
repz
test
mov
mov
icebp
lret
rorb
push
xchg
and
mov
sbb
jg
mov
dec
lret
outsb
jno
popf
iret
btr
lock
cmp
xor
out
sub
pop
push
lea
ret
call
inc
stc
mov
ja
xor
xor
inc
push
cmp
xor
xor
aas
fldt
movsb
add
in
jg
cmp
leave
push
cmpl
lods
sub
and
cmp
notl
iret
sub
push
insb
rcr
outsl
in
xor
and
stos
aad
jecxz
pop
cmp
sub
sahf
mov
call
xchg
icebp
lea
cs
loopne
or
xchg
lret
xor
mov
sub
jbe
jns
sahf
ret
mov
push
lds
xchg
lock
subb
std
mov
leave
je
movsl
xor
shlb
push
or
call
xor
lret
std
mov
outsl
imul
lret
aad
sti
dec
xorl
je
ss
iret
fidivs
gs
icebp
iret
stos
ret
mov
sbb
lret
mov
cmp
xchg
cwtl
mov
out
sbb
sahf
insb
xor
sub
int3
push
mov
jp
push
lods
add
add
xchg
fbstp
cwtl
aam
mov
dec
push
push
or
push
cmpsl
cmc
imul
mov
sbb
dec
ret
cmpsb
sub
rolb
xor
or
cmp
and
shll
test
sub
cs
xor
mov
mov
ja
not
popf
cmp
xchg
xor
roll
mov
icebp
pop
sub
sub
fld1
mov
or
jnp
mov
sub
mov
mov
sub
stos
adc
mov
jae
or
push
mov
ret
addr16
push
sahf
xlat
test
imul
dec
mov
inc
call
fdivrl
clc
cmp
jge
aad
inc
ja
insl
aad
das
hlt
hlt
cwtl
sub
lcall
repnz
test
out
lcall
icebp
inc
push
rorb
das
movsb
lea
and
add
xchg
adc
mov
or
les
divl
pop
aam
bound
setl
outsb
imul
inc
pusha
jo
inc
stos
shrb
pop
and
fwait
push
data16
lcall
inc
fimuls
lret
shr
jnp
push
fnstenv
test
out
mov
mov
bound
mov
lret
add
jnp
pop
inc
pop
shlb
roll
in
scas
mov
push
popa
pop
cmc
cmc
mov
cmp
jnp
enter
lock
into
pop
cmp
pushf
call
aad
mov
clc
sub
int3
and
enter
fsubl
mov
sub
mov
insl
inc
mov
push
hlt
xor
jle
fcompl
in
stos
vpcmpeqb
xor
inc
mov
sbb
pop
sbb
fists
add
pop
fidivl
shrb
mov
enter
pop
stos
push
push
lds
xlat
mov
dec
sub
sbb
jle
jp
inc
xchg
imul
jmp
arpl
push
inc
data16
jp
leave
xor
out
mov
mov
fbld
movsb
lods
negl
pop
divb
je
adc
cmp
mov
push
popf
hlt
notl
pop
cmp
push
cmp
into
and
lods
out
add
mov
and
popa
jmp
test
push
lret
adc
adc
lahf
cmpsl
jle
hlt
adc
repz
mov
popa
insb
sub
jmp
bound
inc
push
mov
ljmp
push
sbb
jecxz
cmp
or
sti
imul
ljmp
mov
mov
adc
dec
cmp
lret
xlat
xor
out
daa
lea
imul
in
cmpsb
adc
mov
mov
ljmp
sub
push
stc
fbld
sub
jb
outsb
or
mov
mov
fs
mov
cmpsb
sti
out
cmc
ror
sbb
sbb
adc
shlb
sahf
fmull
inc
add
pop
stos
ret
mov
add
leave
aad
add
mov
loopne
cmpsb
sbb
and
pop
in
outsb
add
add
in
sub
aas
inc
inc
jmp
jno
mov
cmp
fildll
mov
mov
mov
call
icebp
adc
testl
popf
xchg
push
xorb
cltd
addr16
std
les
and
mov
xchg
add
gs
ret
lods
mov
test
inc
dec
stos
jo
or
push
stc
dec
je
out
sbb
fbld
dec
push
dec
loopne
shll
gs
and
jmp
jnp
fwait
inc
int
sbb
movsl
aas
fidivl
cli
enter
std
test
jle
syscall
jnp
adc
inc
sbb
push
and
add
insb
xchg
fmul
add
in
iret
inc
xchg
icebp
lret
imull
lods
pushf
rorb
sub
mov
cmp
mov
popf
mov
loope
mov
xchg
jne
rcrl
addr16
pop
dec
addl
cli
add
jae
nop
xchg
add
pop
add
scas
daa
mov
adc
or
or
imul
test
movsl
xchg
jnp
stc
mov
sbb
clc
iret
xlat
cwtl
out
xchg
or
cmp
xchg
mov
xchg
lcall
fsts
jbe
fstl
pop
imul
int3
mov
ret
or
enter
popa
lods
movsl
or
fistpl
insl
pop
cmp
mov
and
sbbb
and
aad
or
inc
fwait
test
adc
in
lds
jp
xchg
jb
pushf
sti
sar
imul
sbb
jecxz
xchg
and
iret
push
ljmp
and
push
imul
test
pop
push
in
aas
or
mov
insl
inc
jae
pop
cmp
lods
loop,pn
xchg
sub
xor
add
popa
scas
imul
dec
ljmp
or
jo
sahf
aaa
adcl
mov
dec
mov
movsl
shl
jecxz
sti
bnd
sbb
or
fnstcw
push
or
or
sub
stos
and
stos
pop
fldenv
lcall
call
or
cmp
scas
jb
sub
sti
xchg
aaa
jb
sbb
cmp
out
pushf
daa
aaa
ret
mov
dec
cmp
push
add
adc
mov
mov
nop
mov
cmp
xchg
push
psubb
sub
add
loopne
into
adc
ficomps
push
xchg
jnp
push
jae
mov
jecxz
jle
mov
aam
pop
sbbb
or
push
adc
mov
popf
sub
xchg
in
push
pop
out
adc
jp
test
or
int
and
sar
cmpsl
xchg
das
xchg
dec
sarl
or
xchg
mov
out
dec
mov
mov
jg
std
cmc
push
fcoml
addr16
jo
push
add
or
or
loopne
dec
add
adc
aad
cs
xor
ror
add
test
repz
arpl
test
jae
push
mov
adc
roll
loopne
xor
std
pop
adc
les
mov
popa
mov
jle
or
cwtl
lods
scas
xchg
jecxz
mov
dec
dec
mov
dec
mov
mov
jge
push
jl
inc
rolb
mov
hlt
dec
jb
jne
subb
int3
aad
shlb
out
mov
jmp
sub
xchg
ret
call
xchg
pop
xchg
mov
ljmp
xor
mov
pop
scas
adc
sahf
mov
fisttps
decb
adc
adc
jb
pop
sbb
and
popa
push
jo
push
notl
mov
jmp
mov
inc
pop
push
roll
adc
insl
mov
gs
push
pop
jnp
inc
aad
xchg
rcrl
imul
pop
push
test
pushl
jecxz
push
movntq
mov
xchg
ds
mov
cmp
mov
movl
inc
add
daa
ss
adc
push
out
lods
lods
dec
inc
sbb
sbb
outsb
push
jns
sti
fsqrt
test
sbb
dec
fstpl
cld
pop
mov
xorb
mov
insb
push
mov
mov
sbb
add
mov
mov
pop
cmpsl
adc
outsb
cmpl
sahf
fists
or
loope
jb
mov
xchg
js
pop
or
es
xor
xchg
mov
lods
or
push
lret
push
dec
pop
sub
dec
popa
adc
cmp
jl
add
dec
js
xor
inc
push
mov
jecxz
cmp
das
mov
inc
cmpsl
dec
fsts
inc
xchg
outsl
xchg
cmpl
xchg
and
fmuls
out
mov
sti
pop
sub
jb
xchg
ljmp
and
and
into
pushl
loopne
rcll
sub
jp
ret
int3
aad
xor
fstpl
mov
ds
xor
je
push
pop
inc
cmp
jb
sub
cs
pop
sbb
xchg
xchg
xchg
mov
sbb
pop
lahf
outsl
push
adc
mov
js
and
pop
add
out
pop
jae
sub
pop
sbb
dec
pop
push
jmp
or
cmp
and
mov
adc
push
jmp
jno
push
xchg
dec
cltd
add
or
mov
hlt
rclb
jae
adcl
inc
sti
insl
pop
test
mov
cld
mov
xlat
mov
mov
shrl
icebp
nop
das
out
mov
testl
pusha
push
jl
jecxz
mov
mov
mov
mov
dec
popf
cld
pop
xchg
adc
icebp
mov
xchg
adc
cmp
rcrb
and
cmp
ret
flds
xchg
and
andl
lret
pop
sub
sahf
into
mov
mov
add
repz
sarb
xchg
ret
int
scas
movsb
pop
andl
fbstp
pop
push
or
inc
xor
xor
negb
push
cmp
add
dec
lods
pushf
lahf
mov
mov
jno
sub
mov
imul
popf
jmp
mov
and
lods
and
mov
add
and
jg
jne
push
outsl
dec
test
daa
outsl
std
and
jns
adc
push
arpl
outsb
mov
xchg
mov
arpl
mov
fdivrl
mov
adc
imul
pop
or
test
sbb
imul
bound
jp
cld
xor
pop
and
jl
lea
pusha
xchg
pushf
fisubrs
push
push
mov
adc
and
icebp
in
adc
mov
xchg
or
dec
xlat
inc
mov
lock
scas
cld
insb
out
push
lcall
into
jo
arpl
out
cltd
popa
cmpsl
mov
rcll
popf
out
rcr
stos
mov
cmp
add
fs
lret
in
test
inc
push
and
fistl
imul
jb
inc
or
pop
mov
clc
or
mov
adc
loope
xor
sbb
pop
ret
aam
aas
xchg
mov
fstps
or
push
cmp
xchg
fadds
mov
sarl
sbb
cmp
cmp
xchg
cmp
popa
cltd
int3
xchg
add
movsb
inc
cli
sbb
or
movsb
xchg
shl
jge
sub
jecxz
push
lods
outsb
jge
loopne
lret
fiadds
stc
aas
pushf
cmpsb
xchg
inc
cmp
and
hlt
sbb
leave
sub
jbe
mov
mov
or
popa
lret
shlb
aas
stos
push
ret
ljmp
pusha
xor
lea
insb
pop
mov
sub
out
cmp
cmp
mov
mov
loope
mov
jecxz
imul
pop
hlt
push
and
jae
test
ljmp
and
fstpt
xchg
loop
mov
adc
sbb
pop
inc
jns
mov
stos
jg
loop
cltd
xchg
pop
cli
test
pusha
leave
xchg
in
negl
in
test
cmp
int3
in
fwait
sti
pop
inc
test
push
shll
xchg
emms
out
movsl
and
mov
leave
pop
popf
inc
mov
in
std
cmp
mov
cmp
add
nop
and
scas
cmp
push
xlat
movsb
out
das
cmp
and
arpl
addb
out
cmp
cmp
into
mov
ficoms
enter
jmp
jno
add
shl
lods
xchg
cmpl
xchg
das
cmpsb
and
jb
test
idiv
pop
sub
cmp
test
jns
test
insl
xor
jmp
in
mov
leave
push
out
xor
cmpsb
mov
adcl
repz
std
rorl
jg
xchg
add
out
xor
dec
dec
gs
repnz
dec
lock
sub
scas
sbb
add
sub
int3
inc
aam
jnp
add
cltd
fmul
cld
push
cmp
int3
xchg
add
mov
sbb
pop
adc
xchg
in
in
incl
call
lds
movsb
push
jl
int
out
mov
or
aad
push
jo
sub
or
fldcw
ss
loope
xchg
loop
add
mov
and
xchg
mov
shll
xlat
test
out
ja
cmp
mov
dec
loope
lods
push
mov
int
add
fildll
and
in
pop
xor
or
cmp
jne
sbb
pop
lcall
loopne
jmp
dec
cli
dec
dec
jo
repnz
push
mov
std
cli
inc
rcr
cmpsl
mov
and
andl
fcmovu
insb
test
int3
fimull
xchg
cwtl
xor
mov
loope
insb
xchg
fidivl
add
and
jmp
xchg
sbb
and
mulb
inc
dec
xor
xor
jns
push
imul
shl
iret
pop
jb
jg
xor
fmuls
dec
jnp
cmp
ja
and
and
jg
sbb
sti
cmpsl
and
cld
xor
push
gs
pop
dec
rclb
adc
out
imul
clc
xor
sarl
movsb
cmp
icebp
push
lret
pop
call
push
mov
dec
lods
je
pop
pop
loopne
adc
cltd
repnz
cli
inc
cmpb
cli
jmp
dec
cs
lds
sub
lock
lds
das
in
push
mov
mov
sub
ds
loopne
push
sbb
popa
inc
push
and
mov
xchg
stc
inc
repz
imul
cmp
fsub
jae
push
sbb
bound
fwait
dec
insl
repnz
mov
sub
jmp
fcom
inc
dec
mov
sub
test
ss
jnp
aaa
and
cmpsl
adc
sti
hlt
mov
xchg
dec
movsl
lret
insl
adc
cmc
sub
push
subb
mov
inc
ret
aam
ret
ss
dec
out
mov
jno
xchg
lods
enter
ss
and
add
mov
push
cmp
aam
pop
push
sbb
loope
and
iret
mov
jae
pop
out
jle
jo
push
push
mov
pop
cli
cmpsb
xchg
mov
sub
xchg
repnz
inc
xchg
incb
and
jg
lea
or
sahf
mull
inc
test
aas
leave
hlt
sbb
jae
jp
ret
or
jbe
int3
bound
leave
xchg
sub
mov
xlat
mov
and
jnp
ja
push
imul
jg
xlat
and
cmp
clc
adc
mov
inc
arpl
push
dec
divl
test
xlat
dec
out
maskmovq
mull
jl
pop
mov
xor
loope
xchg
pop
out
push
ds
das
rcrl
inc
add
adc
loop
sti
sbb
lret
rorb
test
jnp
popa
jns
fdivs
mov
jne
stos
movsb
test
imul
dec
scas
or
jb
aam
gs
repnz
push
cltd
scas
mov
add
mov
push
loope
and
outsb
leave
pop
fs
dec
fcompl
je
mov
cmpsl
and
inc
push
fwait
int3
insb
pop
mov
mov
bndstx
int3
or
call
shl
shrl
jl
jge
lea
into
dec
lds
lahf
dec
lea
nop
xor
jmp
mov
xchg
inc
icebp
fmull
loope
xchg
dec
sarl
fstps
cmc
pushf
or
mov
or
inc
mulb
popf
push
xor
inc
icebp
mov
push
and
pushl
push
movl
sub
add
subb
mov
mov
mov
xor
in
pop
popf
cmp
pop
mov
mov
scas
sub
lret
sub
mov
pop
jg
jb
mov
add
pop
jno
xchg
cmp
mov
stc
lods
push
fisubl
push
fsubrs
mov
mov
sbb
outsb
in
sbb
and
push
fistpll
aad
jb
hlt
in
scas
lret
and
std
mov
stos
mov
in
dec
cmp
mov
fld
mov
bound
inc
add
jbe
js
dec
fsts
aad
cli
daa
cltd
lcall
mov
sbb
call
push
mov
inc
cmpb
in
mov
jge,pt
add
xor
test
int3
test
pop
test
xlat
in
imul
sar
mov
xchg
dec
sub
shll
sbb
xchg
loopne
into
out
hlt
icebp
dec
jecxz
pop
sub
xchg
xor
sbb
dec
lock
or
mov
shll
adc
daa
xor
push
and
enter
xchg
adc
xor
add
mov
or
cmpsl
or
pop
inc
cld
sahf
pop
jns
cmpsl
bndldx
clc
ret
test
xor
sbb
push
lds
sbb
pop
hlt
xor
and
arpl
inc
add
sahf
inc
push
imul
add
ss
mov
rclb
arpl
cmpb
adc
vmovddup
test
test
push
mov
mov
pop
jmp
inc
xchg
shll
add
jle
les
push
mov
adcl
xor
add
jns
cmp
jmp
rcrl
mov
repz
mov
inc
dec
or
pop
cmovo
mov
mov
sub
out
dec
les
mov
in
jmp
stos
cmp
pop
in
jns
scas
pop
and
cld
add
or
inc
jmp
jnp
sub
mull
xor
xor
cmp
xchg
xor
sti
fucomi
sahf
dec
pop
xlat
cmc
mov
mov
notb
aaa
jae
loopne
and
orb
xor
adc
iret
pop
jae
mov
je
ss
mov
xchg
int
popa
testl
mov
test
mov
add
sti
leave
adc
mov
adcb
adc
mov
xor
cmp
in
fdivrp
mov
mov
xorb
dec
push
pop
sbb
inc
sbb
hlt
jge
add
xchg
leave
xlat
fwait
mov
sti
aam
fsts
pop
pop
lret
rolb
add
in
aad
mov
bound
mov
dec
lahf
mov
push
dec
push
rclb
jecxz
jge
pop
addr16
inc
dec
fxch
mov
and
hlt
es
dec
icebp
adc
clc
cwtl
and
and
out
dec
mov
mov
test
stos
jns
stc
lea
aam
xchg
pop
mov
push
inc
popa
jg
repnz
pop
stc
sbb
push
mov
je
das
or
mov
fcompl
orps
pop
sti
dec
cmp
pop
es
adcb
cli
lds
shlb
in
or
ficoml
cwtl
jl
pop
jg
pop
xchg
pop
into
cmp
add
scas
pop
mov
mov
xor
xor
jns
inc
rcll
mov
gs
push
ss
pusha
sbb
in
mov
adc
mov
or
jne
in
xor
xchg
mov
mov
cmp
xlat
mov
sbb
jnp
pop
les
mov
jecxz
fs
das
sbb
rcl
xor
hlt
jecxz
rolb
loop
into
xor
mov
dec
mov
xor
add
push
out
inc
inc
rcrl
in
mov
jmp
xchg
call
xor
aaa
xor
sub
xor
push
push
lret
dec
arpl
push
sbb
fstpl
cs
in
test
cmpsb
cltd
adc
add
test
adc
cmpsl
mov
mov
jl
ficompl
pusha
inc
push
cmpsb
lret
cwtl
in
daa
xor
test
mov
outsb
loop
add
je
fidivl
xor
mov
push
imul
jae
jb
enter
mov
adc
xchg
inc
mov
mov
pop
or
cmp
jo
push
dec
loop
push
mov
arpl
sbb
insb
iret
in
dec
xchg
rorl
mov
pop
add
mov
mov
pop
in
adc
arpl
and
xor
mov
push
jbe
sub
outsb
das
ljmp
pusha
hlt
push
jmp
push
sbb
pop
jp
stc
add
add
add
mov
jmp
fwait
sub
fcomi
movsl
sub
cmp
and
or
fcoms
mov
cmp
nop
into
adc
movsb
outsl
jle
pushf
xchg
jne
clc
sti
push
sahf
adc
dec
dec
cmp
loopne
ja
inc
cs
cltd
mov
ret
dec
add
and
sub
enter
sbb
in
add
imul
insl
jle
sub
bound
bound
repnz
out
outsl
sub
in
lock
aam
cmpsb
push
and
dec
push
daa
loopne
into
dec
int
xchg
adc
sar
mov
and
in
dec
xchg
pusha
dec
sbb
fiadds
push
aaa
adc
xor
xchg
xchg
jno
aaa
jl
sbb
push
jg
sti
addr16
xchg
in
xlat
xor
icebp
mulb
lods
pop
and
bound
test
dec
xor
push
subb
daa
sahf
inc
mov
es
add
nop
fimuls
sti
in
lods
xchg
xchg
push
and
xor
fistps
mov
or
negl
aas
add
loope
test
sahf
pop
mov
mov
xor
jge
out
push
movsl
shlb
fistpll
sub
ja
fnsave
dec
jae
push
and
pop
add
push
mov
jo
jmp
pop
xlat
inc
in
sar
mov
sbb
ds
aas
push
cltd
fmull
adc
xchg
loopne
sbb
adc
cmpsl
hlt
test
sub
ret
sub
rcrb
lret
pop
add
push
orl
cli
dec
xchg
jo
jmp
lahf
sbb
sbb
lods
je
decl
add
pusha
js
imul
aad
hlt
xor
push
mov
push
inc
push
mov
push
outsb
sub
mov
mov
adc
cwtl
and
add
int
es
into
bound
mov
dec
push
jb
mov
mov
sbb
frstor
mov
pop
sbb
push
outsb
stc
lods
out
inc
mov
icebp
or
cli
iret
inc
or
dec
mov
push
xchg
out
push
dec
jae
cmp
movsb
cwtl
xchg
mov
pop
mov
mov
xor
mov
dec
lds
jg
sti
jns
iret
rol
xor
add
imul
mulb
jns
or
les
cmp
insl
sub
pop
add
jnp
or
fstps
jo
jmp
mov
jmp
or
loope
sbb
dec
mov
pop
cld
fstpt
or
mov
dec
repz
jl
cmp
mov
add
test
pop
das
sbb
sbb
aaa
jne
aam
mov
add
or
dec
add
mov
fldcw
mov
mov
and
rcr
or
push
in
mov
rclb
sub
add
jb
shll
dec
lods
ficomps
sbb
movsb
inc
stos
movsb
jns
pop
das
lock
lock
jp
jo
nop
fstpt
adc
test
push
inc
add
xchg
hlt
mov
scas
xchg
arpl
push
mov
xor
jg
mov
cmp
ret
add
pop
insl
hlt
bound
in
aaa
cmp
das
inc
add
add
mov
or
or
push
xchg
andl
xlat
stc
pop
sarb
pop
js
and
sub
cmpsl
repz
push
movsb
adc
rcl
lret
mov
sub
stc
mov
pop
cmc
lods
push
repz
mov
push
loope,pn
in
cmp
aam
lret
mov
pop
xchg
lret
lea
ljmp
adc
and
orb
sbb
cmpsl
pop
dec
mov
ds
subl
aad
jbe
jmp
jae
fcom
inc
adc
lock
ljmp
mov
adc
mov
stos
xor
leave
iret
stc
sbb
dec
ljmp
test
shrb
bound
push
or
sbb
sbb
aas
aas
lahf
ret
lock
lret
cmp
insb
mov
mov
mov
push
pop
das
adc
mov
jmp
aad
daa
hlt
jmp
outsl
mov
push
xchg
pop
jge
dec
xchg
ja
test
int3
mov
cmp
add
dec
outsl
das
scas
out
fwait
ret
pop
mov
inc
cmp
pop
fs
push
jmp
out
and
sub
fbld
or
xchg
sbbl
and
filds
push
in
mov
enter
jo
xchg
insl
test
pop
pushf
push
push
sbb
mov
sbb
scas
jp
jne
xor
decb
push
test
loop
push
mov
mov
adc
out
cld
push
jmp
dec
mov
out
and
loope
mov
push
mov
jmp
push
push
xor
sub
arpl
fbld
shlb
int
push
xlat
ljmp
out
je
xor
jae
jecxz
into
loop
mov
dec
pusha
cs
ljmp
in
std
push
adc
test
pop
and
mov
into
mov
fidivl
mov
xchg
enter
or
movsl
xor
jae
push
jae
jge
and
test
xchg
dec
test
xor
inc
shrl
adc
mov
push
pop
pop
sbb
cmpsb
mov
lahf
hlt
mov
aaa
push
mov
loope
mov
shrl
mov
mov
out
cmpsb
mov
sub
jo
cmp
mov
sbb
adc
mov
in
call
sub
cltd
xor
inc
sub
and
leave
or
cmp
push
push
pop
mov
dec
add
clc
aam
fidivl
adc
jne
xchg
sbb
xchg
pusha
notl
pop
cli
dec
mov
aad
sub
sbb
imul
dec
jns
jp
mov
scas
shrb
xchg
jns
push
mov
cmp
cmp
mov
cltd
mov
and
out
into
testb
sbbb
sbb
leave
sub
aad
mul
test
add
je
lret
out
lahf
jle
and
dec
je
out
pop
push
mov
repz
dec
fsts
cli
ss
xlat
test
test
add
cmpsl
push
roll
add
push
push
sub
mov
stos
dec
and
daa
xchg
inc
cmpsb
jle
mov
lock
mov
movsl
jmp
cld
jmp
cmp
cmp
add
push
push
xor
in
jge
imul
stos
aas
stos
pop
add
push
jno
dec
bound
xchg
pushf
and
jl
or
mov
fwait
mov
and
fwait
sbb
mov
lcall
call
inc
mov
push
push
push
jo
dec
mov
in
mov
cmp
cmp
enter
lods
psubq
pop
sahf
jae
int3
ss
push
xor
ss
in
mov
jg
xlat
push
push
stos
adc
mov
dec
adc
jo
outsl
inc
test
xchg
and
mov
ljmp
loope
inc
mov
inc
daa
ror
pop
push
mov
cltd
scas
push
adc
mov
jne
popa
add
sub
movnti
inc
ror
cmp
out
mov
mov
test
xchg
add
xor
inc
mov
jns
lds
push
push
jp
call
cmp
dec
lahf
sbbb
inc
mov
push
sub
xor
add
out
and
jno
subl
or
das
out
inc
and
int3
push
bound
push
pop
lret
sahf
jl
add
mov
pop
cmpsb
cwtl
addr16
ss
aas
adc
dec
out
mov
fistl
js
int3
cltd
pop
mov
stc
add
or
cmp
insb
cmp
jae
mov
dec
xchg
lods
fiadds
stos
push
aas
into
int
sarl
cs
cmp
push
xchg
xor
xor
clc
outsl
mov
mov
flds
jno
or
test
cli
mov
sbb
pusha
enter
pop
adc
lods
xor
bound
xchg
sub
mov
dec
pop
xorb
inc
aas
in
lds
pop
pusha
jle
inc
into
push
loop
jl
repz
imul
hlt
stc
outsl
or
and
test
inc
ret
ss
daa
adc
xchg
mov
sbb
sahf
pop
sub
je
push
or
jb
sub
ljmp
int3
int3
cmp
inc
and
enter
sbb
ja
jae
rcr
stos
and
dec
inc
push
inc
mov
pop
popa
sub
sahf
pop
mov
pop
lock
xor
mov
adc
in
xchg
jecxz
fstl
pop
xchg
aad
hlt
cmc
sbbl
mov
std
sub
dec
ja
cli
inc
push
shll
jno
cmp
pop
aaa
and
test
jle
cmpsb
push
cmpsb
fdivs
rcrl
imul
and
mov
jb
push
test
das
std
je
and
sbb
inc
pop
sub
out
ss
cmp
nop
add
dec
cmc
xchg
mov
stos
mov
mov
adc
xorb
or
xchg
xor
out
scas
or
pop
mov
popf
out
sub
cld
lds
jecxz
push
test
adc
mov
sbbb
pop
push
pop
std
out
shlb
sbb
jns
push
xchg
mov
push
insb
in
in
xor
aaa
xor
repz
clc
gs
mov
cmp
cld
push
cmp
arpl
lods
sub
sbb
cwtl
mov
fisubs
and
ficoms
lahf
je
push
jle
jbe
sbbb
xchg
ja
mov
add
ret
xor
mov
xchg
cwtl
rorb
imul
or
subb
mov
cmp
and
mov
push
adc
dec
popf
rcl
xchg
test
in
mov
lcall
fisubl
xorb
cli
cld
inc
test
outsb
xor
shrl
aas
ret
xchg
jae
test
addb
mov
mov
pop
push
cmpsb
ss
arpl
xchg
pop
je
mov
push
push
cmp
cmpsb
fdivr
adc
pushf
inc
sarl
mov
bts
psubusb
cmpsl
daa
mov
push
inc
fisttpll
dec
out
xor
addr16
test
out
aam
mov
ja
movsl
add
orb
push
mov
sbb
mov
sbb
sbb
mov
pop
mov
insb
in
adc
push
sub
stc
push
inc
cwtl
and
mov
scas
shll
sti
mov
mov
lock
jle
xchg
std
mov
mov
cmp
push
pop
bound
xor
push
push
sub
add
mov
stc
inc
pop
out
cltd
fsubl
pop
sub
rcrl
and
or
ja
out
dec
in
pop
xor
lahf
les
mov
pop
leave
add
xor
cli
ret
jb
or
aas
sti
pop
fstpt
sbb
xchg
push
adc
rcll
xchg
pop
jnp
rol
sbb
mov
icebp
fbld
sub
add
lds
mov
enter
out
lret
xor
addr16
fimull
inc
in
and
mov
mov
pop
addl
sbb
cmp
adc
pop
test
jle
mov
fistps
and
adc
je
pop
mov
mov
pushl
jecxz
cmc
jb
mov
push
xchg
pop
pop
push
insl
and
rol
inc
movsl
mov
inc
mov
loopne
lock
fisttpll
and
out
insl
mov
cs
out
ret
cwtl
hlt
fprem1
shll
or
fidivrs
les
lock
fsubrs
mov
push
in
inc
and
bound
lods
jge
dec
adcb
mov
negl
jo
push
dec
idiv
lcall
pop
loopne
push
test
in
xchg
pop
clc
ss
shll
cld
push
xchg
mov
dec
xchg
lret
jnp
push
cwtl
stc
adc
sub
sti
push
sbb
aaa
push
pushf
sbb
sub
cmpb
jae
movsb
aas
mov
lret
mov
aaa
lods
add
movsl
aas
test
sbb
dec
dec
jbe
imul
fdivl
or
sbb
inc
cmp
rcrb
add
nop
or
push
xor
mov
mov
vmread
fwait
jecxz
or
adc
push
iret
divb
int3
mov
cmp
in
fld
or
pop
push
aas
mov
jns
into
or
or
sbb
dec
xor
sbb
ret
lret
sub
out
cli
xchg
push
aam
test
jl
or
push
and
pop
lods
mov
mov
push
fists
bound
shlb
loope
ja
mov
dec
xor
imul
daa
and
addl
cmp
inc
mov
movsl
add
repz
cmp
call
adc
pop
leave
push
mov
push
xchg
arpl
sub
insb
out
in
sbb
xor
lret
pop
ss
scas
mov
mov
xor
call
out
add
pop
mov
loope
adc
lea
sbb
adc
adc
mov
jne
rol
add
or
jmp
sbb
mov
loopne
pop
mov
add
ret
add
mov
cmp
icebp
jecxz
jb
fwait
and
scas
adc
lods
sub
fcmovne
mov
sbb
test
mov
xor
xchg
inc
jl
pop
mov
movsb
adc
mov
rol
sbb
movsl
popa
mov
cmp
ss
add
pop
mov
adc
gs
sbb
xor
mov
jns
aad
or
jns
test
mov
jnp
pop
inc
xor
je
xor
sarb
push
mov
flds
pop
inc
fprem1
lods
ficoml
jmp
push
sub
lret
or
inc
repnz
cmpsl
ljmp
cmpsl
add
lock
mov
lret
scas
rcrb
xchg
loopne
mov
in
push
mov
stos
jnp
rclb
enter
cmp
or
inc
jne
outsb
xchg
int
cmp
popf
xchg
cli
repnz
sub
in
int
addr16
push
ja
sbb
push
push
dec
movsl
jmp
rcr
jecxz
mov
and
les
mov
test
loope
bound
sbb
push
aam
addr16
cmp
sahf
in
sbb
sbb
in
pop
lds
das
ljmp
dec
inc
insb
jl
add
fadds
xor
out
cmp
in
lods
xchg
adc
fbld
mov
mov
or
push
roll
jp
rol
pusha
mov
data16
inc
insl
fdivrl
roll
dec
lods
xor
in
mov
inc
push
bound
mov
and
cmc
jo
push
incb
data16
adc
jge
daa
push
jmp
lods
cs
mov
movsb
mov
call
faddl
mov
popa
push
outsb
fstpt
pop
rorl
movsb
fists
push
dec
in
es
xor
push
call
and
fldcw
mov
or
cmp
scas
sbb
call
inc
sbb
mov
ja
bound
cmpsb
repnz
rcll
jne
loope
bound
inc
xor
mov
inc
stc
stc
loop
into
pop
mov
es
cmp
pop
or
cmp
push
add
cmp
xchg
and
push
test
mov
js
test
inc
mov
sub
andl
adc
or
cmp
jnp
xchg
cmc
aaa
lret
int3
negl
pop
xchg
fdivrl
fsubrs
push
adc
out
pop
push
xor
inc
mov
in
push
pushf
mov
mov
adc
loop
mov
or
cmpsl
pop
loopne
stc
shl
mov
or
addb
imul
xchg
icebp
rcll
popa
cld
scas
int
mov
stos
jo
mov
ret
aaa
pop
and
enter
jbe
cmp
and
pop
repnz
out
mov
cmpsl
lods
mov
inc
xchg
mov
aas
jb
aam
mov
aaa
fnsave
frstor
adcl
or
cmp
enter
int3
or
inc
fcmovnbe
rcrl
out
xchg
daa
jns
push
std
cmc
int3
push
popa
pop
mov
add
sub
pop
outsl
cltd
jbe
loop
mov
stos
jl
xchg
push
fildll
insb
inc
out
dec
xor
pop
ljmp
or
aaa
in
in
mov
push
dec
fisubrs
lods
pop
or
ja
fcompl
mov
or
or
sbb
xor
mov
das
push
or
jecxz
incl
push
mov
lea
test
cmp
outsl
jg
movsb
push
mov
test
sbb
sbb
loope
inc
cs
nop
pop
push
mov
in
aas
cmp
hlt
clc
es
rcll
xlat
testl
sbb
mov
mov
jae
mov
out
cmp
mov
sarb
ret
cmpsb
mov
mov
nop
xor
pop
inc
subl
cmp
cmp
lcall
movsl
mov
fwait
js
xchg
adc
rolb
decb
cmpb
faddp
fldt
pop
outsl
or
mov
pushf
dec
xor
in
or
pop
jge
or
push
xchg
dec
sub
scas
stc
iret
imul
cltd
ror
xor
xchg
pusha
jge
sub
incl
addr16
mov
test
mov
testl
fiadds
ret
ret
adc
out
mov
add
mov
jg
hlt
fsts
imul
mov
inc
sti
ds
fsubl
mov
sub
add
popa
xchg
jno
jge
fwait
test
pushf
dec
test
jno
ffree
xor
or
icebp
dec
fidivrs
mov
in
outsl
xlat
jle
sub
xor
pop
loop
xchg
in
xlat
incb
xor
jge
or
lea
fdivp
loopne
or
sbb
adc
test
cli
pushf
stos
jnp
jl
add
lahf
or
loope
sti
scas
or
out
jmp
jae
pusha
xchg
nop
lods
xchg
push
mov
ret
mov
stos
xor
arpl
mov
sbb
std
ja
addr16
push
mov
fcom
loop
jae
or
icebp
pop
lock
lods
fimull
cmp
sub
inc
pop
and
mov
fbstp
into
xor
dec
xchg
sbb
decl
dec
sti
out
cmp
enter
jb
mov
popf
scas
inc
xlat
mov
pop
aad
bound
mul
mov
popf
mov
push
fists
pop
cld
lods
inc
pop
add
outsb
push
mov
sar
fiaddl
xchg
mov
int3
repz
test
push
mov
orl
inc
mov
cmovbe
les
and
inc
imul
xor
and
fsubs
inc
test
nop
je
into
jl
js
bswap
mov
testb
inc
xchg
es
cmp
fwait
shll
jae
jb
imul
popf
xchg
push
lret
jge
or
je
mov
mov
inc
loope
and
pop
and
mov
shrb
pop
fcmovnb
sahf
cmp
and
lock
add
push
je
adc
sub
jmp
in
xchg
cmp
sub
mov
xor
push
jbe
jecxz
inc
push
pusha
sbb
xchg
lret
cmpsl
mov
pop
shrl
inc
mov
ss
ds
pop
mov
xchg
popa
sahf
push
pop
xor
mov
mov
pop
mov
pop
sub
lea
push
dec
mov
mov
into
test
push
jge
and
int
shl
lods
clc
neg
xor
data16
sub
test
pop
repz
clc
aaa
sub
adc
addr16
cmp
inc
aaa
mov
in
subb
add
outsb
add
loopne
jnp
stos
adc
bswap
xchg
stos
xlat
adc
adc
push
sub
push
pop
scas
in
xor
cmp
jl
push
fwait
and
je
cmp
xor
sub
out
and
rcrl
mov
add
jg
imul
mov
push
cmpl
add
cmp
dec
xchg
insl
mov
push
jecxz
pop
jle
dec
dec
fcompl
cmp
and
push
movsl
out
lahf
sahf
in
mov
inc
push
into
add
nop
movsl
shlb
por
cmp
dec
pushf
test
fbstp
int
fcmove
bound
int3
enter
and
arpl
mov
pusha
xchg
addl
mov
push
inc
lcall
adc
enter
out
mov
mov
das
shrb
xor
test
sub
inc
dec
pop
mov
push
mov
add
adc
xlat
xchg
jbe
lea
test
cltd
inc
int3
loop
add
push
test
lret
je
or
test
pop
cmp
imul
sbb
sahf
inc
jae
aas
xchg
mov
push
movsb
jmp
mov
mov
scas
or
pop
push
cmp
in
sub
cmp
push
and
jmp
jbe
xchg
insb
sahf
cmc
push
jecxz
dec
out
lock
loop
pusha
cmpb
jmp
js
xor
pop
dec
sbb
sbb
push
test
decb
jae
movups
pop
pop
enter
jg
rolb
mov
add
ret
mov
and
push
repnz
mov
xchg
jo
push
sbb
dec
repnz
and
cmp
adc
iret
lcall
sbb
aad
mov
pop
fsub
ffreep
xor
jns
cmp
mov
test
pop
mov
pop
outsl
sbb
imul
incb
add
in
jg
sub
sbb
into
fnsave
jno
mov
aad
sbb
xor
sbb
xchg
shl
in
cmp
shll
mov
sbb
sbb
sbb
mov
je
call
ss
xchg
ljmp
lcall
hlt
aas
xchg
dec
sub
dec
push
pop
sbb
inc
push
push
sbb
test
addl
stos
inc
pushf
add
nop
push
fs
jbe
out
add
jnp
jo
insl
fidivl
daa
cltd
mov
mov
sbb
mov
sub
mov
push
mov
in
jo
rcll
faddp
out
outsb
les
sarl
dec
arpl
int
lahf
mov
outsb
sbb
sti
stos
sahf
cltd
pop
arpl
xor
jo
mull
in
dec
js
mov
inc
mov
scas
dec
loope
mov
pop
pop
push
cmp
push
iret
test
and
xor
outsb
aam
imul
mull
add
ljmp
or
and
lret
stos
push
jge
out
in
jnp
mov
cmc
arpl
xlat
mov
ret
mov
add
and
xchg
pusha
mov
shrb
data16
xchg
into
sbb
popa
sub
mov
pop
push
test
rcrl
adc
out
outsb
or
jae
data16
xchg
addr16
fucom
ljmp
stc
out
imul
lahf
stos
dec
sbb
cmp
je
pop
sub
push
mov
stos
addr16
jb
xor
xor
stc
lds
mov
push
mov
dec
in
or
jne
add
push
pop
cmp
xchg
repz
cmp
jp
mov
dec
inc
shr
aas
outsl
jmp
mov
lret
push
out
pop
sbb
add
cmp
aas
xchg
mov
sbb
jmp
dec
sarb
lret
mov
rolb
andl
popf
lea
push
mov
inc
push
sub
jmp
addr16
mov
jecxz
jnp
mov
dec
adc
jp
inc
add
in
mov
pusha
clc
mov
sbb
or
push
popf
stc
xchg
das
jle
mov
dec
insb
xlat
and
repnz
mov
sti
mov
pop
dec
mov
mov
xor
insb
cld
out
jle
sub
roll
xlat
sbb
sti
add
lea
inc
sbb
rcr
fldenv
bound
xorl
dec
test
aaa
loopne
xchg
js
cmp
mov
jb
mov
data16
repnz
imul
in
fcomps
divb
sbb
xlat
dec
cli
movsl
mov
subl
cmp
outsl
add
sahf
sar
repz
pop
mov
les
loopne
jmp
jae
inc
arpl
int3
and
andb
or
jmp
stos
dec
and
xchg
test
cmp
add
adc
lock
fsubs
loopne
aam
pop
lcall
aas
scas
mov
es
jnp
shrb
lret
lea
and
and
mov
inc
cli
hlt
rorb
add
insb
lock
sub
out
pushl
fs
enter
cmc
data16
hlt
mov
nop
fstps
out
hlt
xchg
pushf
mov
mov
in
cli
inc
je
add
ss
dec
pop
dec
pop
lcall
fbld
xchg
fmull
dec
rcl
loop
scas
repnz
enter
cmp
js
jbe
xchg
add
notl
inc
mov
or
xchg
outsl
lret
pop
test
rorb
out
hlt
mov
cmp
aaa
stos
aaa
and
xchg
adc
pop
push
loop
xor
outsl
and
adc
ljmp
inc
or
imul
ljmp
adc
xor
add
cmp
pop
push
lods
outsb
daa
loope
sub
cmp
adc
arpl
pop
fdivrp
adc
leave
in
outsb
mov
inc
adcl
mov
add
cwtl
and
mov
add
fcoml
dec
jecxz
push
mov
ds
cmp
push
out
pop
pop
pop
push
sub
pop
enter
sbb
or
and
scas
in
mov
out
mov
dec
lret
push
pop
mov
mov
xor
or
cmc
in
cmp
das
adc
aaa
ficomps
filds
lock
insb
xorb
loop
jne
and
xchg
push
mov
or
fmuls
adc
fisubs
jnp
mov
jg
pop
cmp
es
cs
insl
pop
mov
sbb
in
daa
in
mov
sbb
push
cmp
jb
jns
and
sub
mov
cmp
test
fdivp
das
mov
sub
out
cltd
cwtl
jg
or
jns
inc
jb
or
cld
inc
aad
add
add
loope
sbb
pop
push
nop
out
and
test
cltd
paddd
mov
scas
mov
mov
cmc
adc
and
mov
xor
bound
js
aam
xchg
in
insl
stos
push
mov
and
arpl
lock
jae
and
cwtl
fsubrs
and
jmp
sti
jl
mov
popf
fucomi
lahf
or
xor
ljmp
data16
ret
pop
enter
pop
jp
cmp
add
lods
mov
pop
fimull
push
xor
or
stc
hlt
mov
mov
stc
imul
mov
mov
jbe
fidivrl
lea
pushf
leave
icebp
jnp
inc
popa
fldcw
mov
and
mov
das
pusha
jg
sbb
in
and
cwtl
pusha
fbstp
add
sbbl
fs
pop
mov
push
das
ficoms
movsl
xchg
inc
ficomps
cltd
stc
or
fnstsw
cmp
aam
leave
popf
push
nop
adc
cmc
xchg
jae
es
gs
cmp
cmpsb
mov
adc
cmp
stos
inc
or
jecxz
lcall
cmpsb
fcomp
add
int
cmp
int3
mov
push
adc
push
int3
cmp
jae
lods
rorl
popf
into
into
enter
add
jecxz
test
mov
jl
sbb
sub
push
sar
dec
aad
out
adc
popf
mov
orl
xchg
enter
sbb
ja
push
fimuls
out
adc
fwait
pop
jno
xchg
lcall
iret
mov
jle
data16
test
and
fcompl
test
out
xchg
fwait
xchg
hlt
dec
es
clc
test
or
add
mov
outsb
insb
add
push
lret
lcall
gs
mov
xor
adc
push
mov
adc
mov
xchg
cmp
jl
or
outsl
lods
fstpt
rolb
push
call
mov
cmp
mov
fldl
lcall
jmp
mov
rcl
into
jg
mul
jae
lods
movzwl
mov
and
mov
pop
int
mov
jb
fsts
add
js
gs
xor
es
hlt
into
jno
cmp
mov
jl
and
insl
rcrl
and
pop
inc
xor
pop
xchg
sbb
add
xor
into
add
ljmp
pop
jb
lahf
cmp
lret
cmp
aam
negl
jmp
mov
sti
sbbb
fsubp
mov
lds
fisubrs
mov
mov
fcmovu
push
loope
add
imulb
pop
sbb
xchg
adc
mov
inc
xor
mov
ret
cs
stos
inc
mov
dec
or
test
in
orl
push
dec
pop
or
mov
sbb
push
xchg
lods
cmpl
negl
jge
inc
inc
std
mov
clc
pop
mov
adc
mov
loopne
mov
push
push
pop
in
mov
pop
push
pop
xchg
lret
dec
dec
pop
xlat
cmp
mov
adc
in
or
pop
lea
inc
push
pop
and
in
inc
fwait
sub
pusha
hlt
xlat
in
pop
dec
js
jmp
sub
test
rcrl
or
push
jge
add
mov
mov
mov
mov
jg
jmp
mov
out
daa
decl
adc
sub
mov
cmp
aam
xchg
adc
add
imul
daa
sbb
mov
out
popa
jno
aad
xchg
es
push
dec
mov
xor
loop
push
test
jecxz
movsb
push
fisubrl
lret
lds
inc
cltd
push
adc
loopne
test
das
imul
enter
daa
mov
roll
xor
cwtl
jno
xor
test
mov
js
ret
jno
xchg
cmp
mov
mov
incl
adc
push
mov
stos
or
xchg
push
mov
jae
int3
stos
js
mov
lcall
subl
cld
add
cmc
nop
or
or
or
jns
aaa
pop
repz
sub
lods
test
imul
xchg
or
inc
nop
inc
jecxz
mov
pop
pop
popf
sti
mov
mov
sub
xchg
jp
mov
jb
xor
hlt
cmp
jg
and
lcall
jecxz
imul
pusha
in
addr16
fiaddl
jae
lods
cld
push
add
leave
push
jo
jg
pushf
or
mov
sbb
rorl
mov
pop
mov
mov
lods
push
mov
ljmp
mov
add
stc
mov
xchg
jns
push
out
pop
xor
cmp
adcl
je
pop
cmpsl
ret
sahf
sub
adc
jl
sub
inc
pop
out
or
cli
mov
ret
push
mov
cmp
stc
imul
lret
pop
sub
sahf
fcmovnbe
ljmp
xchg
push
insb
pop
clc
push
mov
shlb
sub
insb
xor
xchg
outsb
test
int
inc
xchg
mov
push
jo
pop
out
sti
shl
xchg
pusha
icebp
mov
mov
sbb
xchg
je
je
fwait
pop
sub
mov
sbb
sub
lods
cmp
aaa
test
xchg
add
ss
lahf
imul
push
sbb
xchg
push
popf
adc
call
or
jo
shll
aad
lock
push
add
imul
lods
pop
add
push
sbb
xor
adc
mov
stc
mov
sti
in
call
testb
flds
push
inc
inc
mov
push
push
mov
test
sbb
popf
divl
push
test
push
dec
aas
lret
xchg
jb
ficompl
cmp
pop
mov
cmp
xor
cld
or
pop
rolb
add
push
cmp
popf
add
push
andl
pop
or
xchg
js
scas
xchg
push
adc
mov
pop
fdivr
jmp
cmp
iret
cmp
mov
sub
mov
jecxz
movsl
je
cld
push
int3
dec
jp
mov
xchg
add
mov
xchg
pop
lcall
xor
hlt
jne
add
repnz
adc
ret
jne
jne
mov
imul
hlt
iret
lea
adc
mov
add
pushf
std
add
mov
jo
fsubr
cmp
adc
cmc
fidivs
xchg
outsl
insb
jno
push
xor
dec
ds
repz
sub
sub
popf
cmp
fs
push
jno
mov
mov
and
fdivl
repnz
test
add
cmp
test
mov
sub
lods
adc
repz
mov
jne
inc
scas
fsubl
pop
fmul
and
pop
mov
scas
pop
inc
out
test
mov
pop
push
jb
out
jecxz
sbb
test
es
dec
xchg
add
stos
jbe
jmp
out
adc
shll
xlat
mov
sub
mov
loopew
leave
add
dec
xchg
popf
xchg
sub
adc
add
mov
inc
jbe
lret
pop
jmp
xchg
cmp
mov
and
push
lock
lahf
shlb
pushf
mov
jae
and
mov
add
cmp
int
or
push
arpl
sbb
daa
int3
sbbb
lahf
lret
stos
out
arpl
lds
inc
ljmp
cli
add
inc
cwtl
nop
rep
mov
xchg
mov
int3
inc
aam
mov
arpl
cmpsl
cs
add
dec
mov
jns
int3
loop
mov
sbb
adc
inc
sub
push
xchg
into
jo
aam
push
aad
imul
outsb
jnp
sub
lds
xlat
push
jbe
lds
mov
xor
lret
mov
dec
xchg
add
mov
imul
push
cli
mov
outsb
addb
lods
leave
adcb
inc
sbb
test
add
xlat
jnp,pn
mov
es
sbb
es
mov
mov
xchg
or
jnp
inc
aam
mov
hlt
xor
xchg
add
mov
add
cwtl
adc
std
shr
pop
mov
sbb
test
push
popf
and
in
fmul
jno
pop
lock
mov
mov
push
call
adc
cmc
push
cmp
xchg
int
xchg
sbb
push
pop
pop
sub
pop
xchg
cld
mov
xchg
dec
mov
lahf
test
dec
pop
pop
jmp
je
cwtl
lret
imul
dec
popf
aad
xchg
aaa
xor
hlt
sub
outsb
push
push
cmp
jle
jns
rolb
outsb
and
adc
pop
jns
mov
inc
pop
fwait
sbb
xchg
xor
jecxz
cmpl
push
pop
adc
js
cmp
dec
mov
or
mov
les
push
insb
jmp
add
sub
daa
icebp
xchg
test
mov
cmpsl
into
lret
leave
jmp
mov
mov
xchg
rcrl
loop
mov
repz
ds
lock
xchg
fcmovbe
add
imul
leave
je
and
daa
inc
pop
aam
mov
sbb
loop
jb
or
and
arpl
xor
ret
shrl
das
insb
sahf
adc
arpl
sbb
stos
dec
cltd
xchg
mul
mov
stos
jg
pmaxub
adc
fists
dec
inc
repz
fdivl
out
jbe
pop
or
xchg
jnp
test
pop
rcrb
ss
and
push
mov
addb
mov
jp
cmpsl
ss
fmul
jns
callw
or
je
idivb
inc
inc
mov
out
call
lret
inc
shll
fldcw
pushl
fdiv
ret
mov
xchg
mov
mov
test
mov
lcall
out
inc
push
mov
mov
rcr
adc
push
push
mov
cltd
fstps
pop
add
lcall
cmovg
lret
mov
xchg
push
fbstp
out
xor
popa
dec
adc
std
leave
popf
jnp
add
sbb
pop
div
outsb
jle
mov
pop
or
js
pop
aad
pusha
fs
lods
dec
andb
in
mov
jo
sarb
xchg
jge
dec
insb
mov
dec
repz
mov
sub
or
lock
sti
pop
cmp
fnstenv
sbb
inc
bound
ss
jl
pop
push
test
aaa
stos
sub
mov
push
mov
push
stos
pop
sbb
inc
fstpl
push
outsl
jge
pushw
or
dec
jno
xchg
push
dec
int3
and
pushf
push
imul
mov
xor
inc
push
lret
stc
sub
movsl
push
in
cld
out
or
repz
mov
cmc
xlat
or
add
sub
inc
imul
xorb
cmp
push
subb
in
sub
xchg
cmp
aaa
testl
sti
add
or
mov
loopne
test
repz
aam
in
loop
add
in
pop
lahf
inc
pop
sbb
stos
or
ds
and
subb
in
mov
or
out
fnstsw
xor
rcr
js
repnz
sbb
adcb
test
lret
xor
jns
arpl
sti
mov
mov
mov
mov
cs
xor
idivb
cmpsb
mov
pop
shlb
jmp
leave
adcl
pushf
inc
mov
cmp
daa
sahf
mov
jno
pop
pop
and
gs
scas
pushf
and
add
push
mov
sbb
pushf
sbb
ds
sub
lea
imul
in
jp
xchg
insl
and
lahf
xchg
into
fistps
sub
insl
loop
mov
arpl
leave
dec
rol
pop
add
pop
ljmp
inc
fstpt
nop
add
mov
add
jae
stc
push
into
addl
bound
mov
inc
push
fs
cld
add
lcall
xor
sti
add
adc
inc
jbe
push
fwait
dec
dec
xchg
jp
cmp
out
jnp
movsl
jb
and
fsubrp
xor
push
test
mov
out
pop
lret
adc
mov
sub
in
mov
test
je
cli
push
push
cli
mov
jecxz
cmp
inc
pop
sti
mov
dec
loope
das
pushf
test
or
shlb
pop
nop
sub
outsb
js
mov
sub
sbb
sbb
push
inc
sub
fdivrp
sbb
xor
aas
push
mov
or
scas
sbb
out
in
add
sbb
ja
fisubs
mov
fldt
jp
pop
test
loopne
shrb
sbb
sbb
data16
mov
nop
jge
sbb
ret
cmp
out
pop
dec
dec
movsb
inc
adc
jmp
je
mov
cmp
dec
test
pop
in
incl
mul
bsf
lret
aam
sub
imul
jg
test
push
mov
lea
lods
pop
pop
adc
movsb
mov
out
nop
xchg
mov
add
in
fidivrs
sbb
sbb
pop
mov
adcb
jbe
ret
jb
xchg
fcmovnbe
stos
enter
cmpsl
ss
loop
pop
test
lcall
or
jbe
mov
arpl
adc
xchg
lret
sbb
and
xor
or
mov
pop
lea
mov
inc
sahf
notb
pop
std
sarb
out
addr16
je
jae
pop
pop
loope
adc
jnp
in
addb
hlt
adcb
hlt
addr16
lds
inc
xlat
andb
xorl
fisttpl
arpl
lds
aas
sbb
xchg
xchg
xchg
faddl
test
popf
add
rcll
ror
insl
xchg
xor
inc
push
lret
or
add
pop
rorl
push
ja
xor
pop
addb
push
pushf
inc
je
xor
adc
xchg
cmc
lea
lods
hlt
mov
movsl
repz
mov
inc
mov
sarb
lds
jp
stos
icebp
xor
shll
outsl
rcll
jae
jb
inc
inc
mov
mov
add
xchg
sub
and
psrlw
dec
xadd
or
outsb
out
and
test
pop
nop
fiaddl
sub
ret
dec
xchg
add
xor
xlat
ljmp
je
pop
pop
sbb
nop
xchg
mov
imull
xchg
sti
add
rol
mov
push
xchg
lods
ss
out
lret
cli
xchg
sahf
dec
pop
xor
mov
sti
and
aam
sub
xor
shll
push
jl
jnp
shrb
leave
lret
ds
push
leave
xchg
push
fnstsw
mov
xor
jmp
shlb
jle
repz
xlat
jae
in
movsb
pop
pop
inc
xor
adc
aas
sbb
xchg
ret
and
out
mov
mov
xor
push
and
iret
pop
lret
inc
addr16
adc
xchg
stos
outsl
dec
mov
cmp
jge
out
and
jo
xchg
sbb
jle
insl
xchg
push
lahf
stc
ret
mov
and
clc
movsl
shll
lea
inc
sahf
mov
lret
loop
xchg
ret
and
fmull
outsl
xchg
mov
jo
mov
jbe
xchg
rcr
mov
ret
xchg
shll
js
xchg
cmp
hlt
xor
sbb
add
adc
inc
icebp
sub
into
pop
ds
or
cmp
iret
sbb
aad
jmp
push
lods
movsl
lods
xchg
dec
dec
pop
aaa
clc
sub
dec
or
inc
jl
xor
test
mov
dec
out
mov
or
sar
in
pusha
adc
mov
cmp
mov
mov
xor
mov
icebp
xchg
loope
xor
xchg
adc
fmulp
xchg
xchg
push
jns
or
push
nop
jnp
cmpsb
insb
jg
sub
int3
fstps
push
push
xor
outsl
or
inc
cmpsl
xchg
pushf
xchg
jns
out
in
cmp
mov
mov
nop
sub
mov
add
sub
push
sub
pop
and
lods
imul
enter
pop
push
pop
cmc
std
ljmp
xor
in
or
pop
pop
and
cmp
dec
push
adc
or
mov
and
outsl
xchg
bound
jb
lock
mov
adc
push
pop
jl
lods
adc
xchg
xchg
addr16
cmp
pop
add
pop
or
dec
jnp
imul
sahf
repnz
adc
cmc
and
xor
out
popf
lahf
add
mov
jbe
pusha
inc
jno
loope
in
imul
lahf
push
cmc
jnp
jle
lcall
test
aam
repnz
out
outsb
fwait
xor
popa
pop
pop
push
clc
pop
jmp
push
outsb
pop
xor
scas
sub
lods
sgdtl
test
cmp
scas
icebp
xor
pop
pop
movsl
inc
in
and
jl
mov
aam
imul
outsb
outsl
mov
and
test
push
pusha
dec
mov
mov
lods
lea
push
mov
sbb
sub
or
mov
lret
jmp
into
add
scas
stos
sbb
pop
xchg
andb
mov
mov
or
inc
decl
cld
in
fnstsw
jb
movsl
es
mov
fsubrp
int
and
flds
outsl
std
es
xor
fidivrs
js
adc
mov
cmp
cmp
pop
test
push
pop
adc
cmc
push
inc
lods
sub
enter
das
rcrb
xchg
jmp
mov
pop
lahf
and
out
ret
mov
test
sbb
adc
or
and
push
aas
cwtl
aas
jge
mov
mov
cld
aad
in
syscall
outsl
jnp
je
jecxz
add
adc
dec
insl
mov
ret
call
fstl
cld
fildll
xor
imul
pop
cmp
dec
iret
hlt
fiaddl
into
gs
push
test
jb
in
scas
das
sub
push
mov
je
push
push
into
jg
repnz
icebp
jge
shl
jl
pop
les
pop
mov
dec
outsl
mov
in
mov
adc
jnp
cltd
out
jecxz
mov
mov
mov
add
or
and
jg
adc
jl
testl
sub
dec
rcr
rcl
jle
daa
push
lcall
jae
dec
lock
xlat
enter
jge
and
push
ds
xchg
jo
les
cmc
or
push
sub
icebp
adc
stc
mov
fwait
or
xchg
xor
xor
inc
adc
clc
jl
cmc
jne
sbb
jno
push
pop
shlb
and
push
test
div
je
lret
test
and
in
gs
mov
jge
adc
enter
inc
push
mov
jb
lds
inc
xor
popf
icebp
mov
arpl
mov
cmp
xor
cmpsb
and
ljmp
jecxz
push
into
shlb
cmpsl
mov
or
test
inc
inc
enter
and
jne
lahf
xor
xchg
call
fimull
pop
pop
into
enter
inc
mov
xchg
fsubrs
int3
icebp
int3
pushf
icebp
cmc
sub
adc
inc
mov
stos
loopne
sub
xlat
outsb
push
dec
sbb
movsb
movsl
sbb
cmc
xchg
cmp
push
roll
in
in
push
xchg
and
pusha
ja
into
scas
mov
inc
dec
dec
jne
aad
ror
jmp
mov
mov
and
xchg
jmp
xchg
rol
aas
mov
data16
mov
rol
push
pop
or
pop
jnp
sub
popa
daa
ficoml
fmuls
shr
jno
fiaddl
in
add
nop
jo
incl
inc
loop
adc
push
sbb
rcl
loope
push
jg
xor
ret
inc
lret
xchg
fwait
enter
inc
es
inc
adcb
sub
mov
sbb
sub
imul
repnz
cli
lock
popa
jg
mov
scas
xor
insl
insl
insl
sbb
pop
and
js
push
repnz
lds
pop
adc
stos
or
xchg
jle
loope
fsts
sub
push
aam
mov
and
mov
adc
scas
xchg
jle
pand
aad
aas
psraw
sbb
lcall
jae
mov
push
shll
pushf
shlb
fimuls
mov
push
mov
hlt
jne
divl
sar
cmpl
insb
push
xchg
inc
int3
sbb
rolb
mov
dec
std
ret
mov
std
jg
dec
dec
pop
sub
mov
fadds
mov
xchg
fcmovnb
cmpl
fistpll
mov
sub
sub
xor
pop
in
adc
and
test
jp
push
sbb
sub
mov
fs
imul
xchg
daa
cs
mov
aas
push
mov
mov
push
loop
inc
or
xchg
adc
fcompl
sbbb
popa
fistl
out
jns
jne
fisubrl
dec
fdivrs
test
andl
pop
push
jge
mov
and
push
in
aas
mov
push
dec
fildll
stos
insb
push
mov
nop
and
outsb
push
fwait
xor
cmpsb
inc
jb
mov
and
mov
sti
mov
adc
sbb
jge
dec
push
mov
push
testb
out
std
mov
push
pop
mov
jnp
jbe
inc
inc
inc
scas
cwtl
dec
xor
mov
pusha
xchg
mov
xlat
ret
add
jbe
cmc
dec
hlt
sti
sub
leave
cld
fsts
adc
cwtl
loope
lea
add
lods
in
mov
movsb
jne
loope
shll
fistl
inc
ret
das
and
xor
ja
out
cmpsb
pop
jbe
loope
dec
mov
xchg
aaa
xchg
inc
mov
cltd
mov
aam
adc
and
fstl
stos
or
mov
ja
rclb
out
and
rolb
icebp
stos
adcl
in
shrl
pop
mull
pop
sbb
movsb
push
inc
into
dec
ds
push
out
add
jo
clc
rcll
mov
push
mov
ja
gs
cmp
notl
ds
clc
mov
loop
mov
ret
pop
rep
lcall
jmp
imul
pop
dec
into
jb
std
pop
cli
test
rol
inc
mov
inc
or
lods
mov
or
insl
insb
push
lods
jae
lds
xor
mov
cmp
inc
jbe
sbb
imul
sub
sbb
sub
inc
push
lea
mulb
rolb
pop
jecxz
cmp
insb
pop
int
jl
adc
jp
add
xchg
mov
ljmp
dec
nop
mov
decl
jmp
rclb
adc
xchg
mov
jb
repz
cltd
sub
pusha
xlat
movsl
bound
jp
jns
inc
and
les
pop
push
adc
jns
jae
push
inc
jno
arpl
push
test
pop
fidivrs
ss
inc
mull
dec
ret
inc
lahf
sub
push
lods
or
lahf
add
test
in
xor
mov
cmp
sbb
adc
cmp
pop
add
or
jbe
ja
gs
lret
fldl2e
mov
push
fisttpl
push
jmp
fsubs
inc
pop
lahf
lahf
mov
xchg
pop
ja
xor
pop
loopne
push
or
inc
lock
pop
mov
aaa
pop
pop
adc
jo
or
pop
pop
in
in
sbb
test
andb
sub
or
mov
imul
mov
cmpsl
arpl
xchg
sbb
and
mov
stc
push
and
add
push
iret
cmp
push
or
ret
mov
adc
mov
push
dec
mov
jno
lea
xor
es
sahf
mov
adc
inc
and
push
mov
mov
push
pop
xor
sub
jne
fmuls
aad
ror
jecxz
push
sbb
fisubl
loope
adc
add
mov
aam
and
mov
xchg
arpl
ds
gs
shrb
adc
das
push
sub
sarb
xchg
icebp
aam
fdivp
mov
test
pop
sahf
hlt
mov
cltd
sub
jae
add
adc
sub
lock
lret
add
jmp
push
mov
adc
xor
sbb
pop
je
xchg
fcompl
pop
sti
and
mov
add
dec
adc
pop
mov
rcrb
leave
stc
xor
push
hlt
adc
call
xchg
test
adc
or
dec
or
movsb
jbe
ret
adc
mov
adc
add
xchg
rol
or
test
sub
iret
cmpl
testl
lods
adc
dec
add
mov
into
enter
dec
stos
pop
jnp
cmp
jne
and
lock
adc
mov
jno
in
call
sub
and
nop
imul
xchg
ret
orb
jmp
stos
enter
dec
into
ljmp
int
lods
mov
sub
and
dec
test
mull
push
outsl
inc
out
mov
sbb
add
in
mov
sbb
in
orb
test
adc
push
fldenv
sbb
jg
pop
dec
mov
mov
out
jbe
pop
aam
sub
cwtl
fistl
mov
dec
mov
sti
or
pop
mov
cmp
mov
iret
aad
insl
call
cwtl
out
cmpsl
mov
shr
rorl
cwtl
notb
jg
fwait
call
aas
out
push
daa
mov
ss
sbb
sub
ret
stos
jo
fdivrl
sbb
sub
mov
sbb
enter
std
xchg
pushf
xor
outsl
cwtl
or
adc
push
sahf
fnstcw
xchg
movsb
jecxz
mov
ds
sub
or
stc
and
jle
repnz
arpl
repz
es
sarl
iret
idiv
push
inc
sub
outsb
dec
in
add
ja
sbb
inc
add
sbb
jb
add
add
cmp
clc
dec
rcrb
in
adc
lods
mov
pusha
mov
inc
cmp
test
pop
scas
leave
xchg
xor
mov
sbb
in
add
nop
dec
nop
push
cmp
pop
je
ret
dec
xchg
cmp
cmp
stc
adc
cmc
int
mov
mov
popf
in
test
push
out
pusha
mov
es
mov
push
mov
jae
xchg
sub
xchg
into
cmpsb
aaa
sbb
pop
adc
xor
mov
out
into
cmpsb
adc
stc
fimuls
aaa
js
mov
out
inc
mov
sbb
fimuls
and
neg
mov
mov
push
fdivs
loopne
jle
add
stos
cmc
adc
fwait
dec
jmp
cltd
sbb
or
pop
or
jecxz
and
imull
sbb
imulb
pop
sbb
push
jae
icebp
stc
repz
int3
sahf
mov
sub
test
mov
mov
cmp
add
out
push
pop
or
stc
loopne
lea
push
fdivl
push
int
sub
sbb
inc
sbb
lods
xchg
pop
ss
popa
aaa
ss
fwait
inc
push
ret
js
shrb
gs
loopne
xchg
pop
or
sbb
or
dec
push
adc
iret
dec
out
fdivs
rolb
js
xchg
sub
rclb
and
enter
xchg
adc
lret
sbb
adc
cli
sbb
sbb
mov
jo
test
add
lods
add
outsl
and
ss
ds
gs
popf
and
bound
push
rcrb
adc
mov
xor
arpl
cmp
adcl
mov
movsl
adc
xor
imul
mov
clc
inc
icebp
or
fisubrl
cmp
sbb
idivl
jb
push
sti
or
push
mov
push
lods
cli
adc
xor
sarl
and
adc
and
xchg
movsl
push
hlt
sub
or
jge
cli
xchg
jo
jae
fsub
pusha
popa
pop
jg
dec
sbb
jb
daa
ds
mov
push
cs
daa
std
ljmp
sbb
bound
xchg
sarl
and
int
inc
imul
add
jb
movsl
mov
push
repz
pop
jae
loop
jae
sbb
pop
xchg
out
push
xor
pop
push
xchg
lock
ja
sbbb
push
sbb
and
jnp
push
addr16
scas
stos
mov
jb
add
andb
mov
je
xchg
daa
jbe
ret
pop
lret
sbb
push
cmp
cs
stc
out
out
cmpsb
pop
mov
ljmp
imul
cmpsl
xchg
or
xchg
repz
cmp
call
xchg
dec
enter
mov
inc
daa
pop
jle
fmull
imul
push
repnz
cmp
inc
lret
adc
xchg
subb
inc
test
inc
push
xchg
gs
sahf
add
cmp
cltd
push
sbb
out
stc
sahf
mov
pop
lds
cmp
rcrb
and
movsb
fsubrs
inc
jl
jl
sub
lock
shr
lods
sahf
push
imul
hlt
sub
cmp
or
xchg
shrl
test
fidivrs
inc
push
pushf
loopne
loope
andb
loope
push
aam
cmpsb
pop
push
add
std
cmp
repnz
shlb
iret
inc
push
test
pop
arpl
mov
arpl
pushf
shll
shrb
cmpsb
pop
int3
aas
shlb
push
out
es
xor
pop
and
add
fs
sar
in
imul
mov
stc
pop
outsb
call
call
sbb
lret
in
ficoml
mov
lret
notl
fcomp
push
out
sub
xchg
insl
xor
mov
cli
jo
sbb
jmp
dec
push
scas
mov
inc
aaa
cltd
jne
loop
jecxz
cmp
clc
mov
jae
inc
int
sub
add
pop
push
xchg
fldt
sahf
push
mov
pop
mov
jns
bound
scas
or
inc
je
in
das
xor
lret
jno
mov
sbb
scas
pop
mov
inc
insl
in
add
pushf
add
and
aas
jle
mov
xchg
out
xchg
fcom
pop
lret
mov
jecxz
add
mov
mov
inc
movsl
dec
ja
cmp
fmul
xor
xor
mov
xchg
aad
in
add
xor
rorl
sub
out
add
push
xorb
adc
pop
cmp
mov
mov
pop
mov
inc
or
sub
movsl
rcll
cmp
popa
aas
lods
enter
xor
adc
es
sti
jl
and
mov
xor
cs
lcall
and
imul
jnp
xchg
cltd
shl
push
mov
mov
jle
adc
mov
leave
or
test
or
and
inc
sti
imul
pop
arpl
cmpsl
pop
xor
or
ljmp
out
or
pop
lcall
jge
shlb
scas
lcall
ss
cmp
into
cmp
jmp
sbb
fs
mov
or
lock
bound
stos
mov
fwait
mov
test
or
fbstp
jmp
lahf
cld
repnz
leave
rcrl
repnz
pop
ja
in
outsb
iret
or
cvtps2pd
pop
loop
int
inc
inc
add
data16
xor
scas
push
jmp
sahf
arpl
inc
sub
cli
loop
es
dec
gs
jle
sbb
test
scas
je
pushf
cmp
test
sub
iret
int
mov
scas
arpl
adc
push
or
rorb
daa
int3
imul
fisttps
outsb
aas
sarb
cmpb
mov
out
and
or
jbe
xchg
xchg
ret
loop
fucomp
gs
js
xor
out
mov
fidivs
dec
and
jns
add
int3
pop
inc
fcoms
sbb
shll
pop
cmc
mov
in
pop
and
mov
xchg
add
rorb
mov
filds
sbb
or
mov
out
in
lret
notl
sbb
xor
jne
pushf
test
jns
in
xchg
mov
mov
stos
arpl
into
mov
push
or
adc
adc
stos
dec
xchg
add
push
push
aas
mov
jmp
hlt
popf
sub
fisubl
rcrl
lods
xchg
or
movsl
jle
pusha
xchg
lret
inc
jg
int
jo
cld
inc
stc
lahf
add
out
mov
jns
adc
pushf
cmp
pop
inc
in
test
aaa
icebp
mov
pusha
mov
sub
mov
push
xlat
pop
cmp
fs
sub
pop
dec
jne
xchg
dec
test
xchg
mov
xchg
pop
repnz
sub
pinsrw
clc
dec
in
xchg
adc
mov
rcr
loope
cmp
adc
imul
mov
shll
jo
out
pop
pop
xor
jle
push
mov
shlb
out
arpl
inc
lock
pop
icebp
nop
movsl
cmp
dec
lea
lahf
push
mov
adc
push
insl
pop
mov
cmp
arpl
adc
push
and
in
push
lahf
shl
lcall
sbb
xchg
xchg
cli
in
jmp
or
xor
and
add
jmp
sbb
push
jp
cld
das
or
jno
shll
faddl
gs
lods
sbb
repz
push
jo
in
orb
cld
adc
shrb
sub
cmp
imul
hlt
loope
adc
call
xchg
out
cli
sbb
bound
pop
add
pop
mov
faddl
push
push
push
jnp
dec
scas
lods
popa
mov
ljmp
sub
pop
lods
cmp
mov
mov
aam
sysenter
xlat
push
mov
js
add
push
lcall
lahf
pop
lret
adc
mov
repz
push
shr
pop
fwait
pop
bound
mov
xchg
mov
push
inc
inc
mov
jbe
nop
shl
cmpsb
fwait
ja
rol
pusha
adc
lret
push
xchg
cli
inc
mov
push
inc
daa
pop
adc
cmp
psubsw
les
fsts
fmuls
jae
es
aaa
pushf
scas
mov
jge
ret
bound
repz
cld
pusha
cmp
imul
and
dec
js
ret
int3
stos
insb
outsl
dec
push
sbb
adc
lahf
xchg
sub
insb
icebp
movsl
sahf
mov
out
out
push
push
push
jmp
in
xchg
lea
test
add
xor
cli
xchg
ret
ret
test
mov
movsl
pop
cmpl
das
data16
mov
jno
fisubrs
dec
lods
cmpsb
sbb
rcll
test
pop
outsb
cmp
jne
fcmovnb
lods
inc
test
mov
jno
sbb
int
xor
es
push
out
fmuls
adc
lret
mov
push
xchg
add
xchg
ret
fwait
data16
add
out
loope
rcrb
fs
cmpsl
mov
in
jmp
mov
push
std
adc
cs
insb
addb
push
sarb
outsl
mov
xchg
and
jbe
xor
add
dec
inc
xorb
and
sbbl
mov
leave
shll
cli
je
insb
and
in
pushf
test
cmp
jnp
sbb
clc
fsubl
push
sbb
sbb
mov
mov
jne
stc
jne
dec
inc
ss
adc
xor
xor
test
test
xchg
pushf
pop
sbb
test
flds
jge
or
and
lods
sbb
addr16
xchg
push
flds
or
ror
bound
movsl
addb
inc
hlt
lahf
jnp
aam
xchg
outsb
push
cmp
inc
test
rclb
mov
addr16
cltd
inc
push
add
and
test
sbb
sub
mov
sbb
adc
and
push
iret
out
hlt
mov
scas
mov
pop
test
mov
xchg
das
in
add
fiaddl
shrl
inc
mov
xorl
xchg
mov
sbb
inc
mov
sti
movsb
lcall
repnz
cmp
mov
nop
adc
andl
fsub
or
cmp
mov
mov
xor
fwait
das
out
pop
ds
mov
sbb
mov
push
mov
rcrb
push
add
xlat
mov
iret
cltd
ret
cld
ret
adc
push
jmp
gs
ud0
pop
lahf
leave
ds
mov
pusha
jmp
iret
or
sub
mov
mov
push
mov
inc
out
je
jge
cmp
add
movsl
es
push
call
jae
cmp
pop
sub
pop
rorb
aaa
cmp
cmp
inc
loopne
mov
jge
cmpsl
ret
jns
push
jl
fwait
mov
push
lods
in
inc
dec
lds
cmp
mov
add
fisubrs
sbbl
push
enter
ljmp
imul
aaa
js
ds
sbbl
add
movsl
fwait
sbb
stos
cld
and
lds
dec
jo
pop
movsl
leave
push
andl
sub
int
mov
ficoms
mov
loopne
sub
aad
mov
push
adc
inc
pop
les
negb
mov
mov
ljmp
jle
sbb
add
xchg
add
inc
loopne
jns
dec
std
sti
mov
nop
jg
pop
stos
in
pop
sbb
negl
mov
pop
flds
cmc
pusha
fisubrl
mov
mov
cmp
lahf
xor
not
inc
or
rclb
cmp
adc
pop
xrelease
loope
ret
pop
in
mov
jl
mov
rcll
add
sub
cmc
aas
cmp
lods
stc
int
cld
enter
test
call
adc
push
out
ret
js
pop
push
cli
enter
mov
cwtl
add
arpl
scas
jo
lods
ja
sti
or
cli
rorl
addr16
rorl
xchg
pop
pop
lret
dec
mov
lods
es
leave
int
test
or
cltd
test
lahf
push
movl
repz
xchg
enter
jmp
inc
loop
jne
inc
loope
xchg
cmp
hlt
and
inc
mov
or
shll
cmp
outsl
xchg
mov
negb
dec
cwtl
lods
mov
and
mov
mov
scas
cli
test
cmpsl
push
or
pop
jnp
xor
cmc
push
or
jl
lock
or
pop
adc
addr16
mov
pop
in
lcall
xchg
mov
pop
lods
pop
cmp
jp
dec
pop
xchg
xor
popa
sbb
cli
pop
jbe
inc
add
bound
push
jae
xor
jmp
cmpl
push
sub
in
loopne
or
ds
loop
add
lret
lcall
dec
lret
lods
xor
in
leave
or
mov
mull
push
mov
xor
xchg
mov
mov
popa
xor
push
or
adc
pop
sti
xchg
add
and
stc
ja
and
mov
fbld
mov
lahf
nop
jo
iret
cbtw
inc
jno
mov
mov
jne
mov
xorl
adc
ja
xchg
mov
bound
iret
andl
mov
xlat
ret
jb
out
dec
sti
push
sub
xchg
push
cli
cld
add
rolb
mov
in
stos
and
jp
xor
scas
stos
push
xchg
lret
xorl
lea
add
or
pop
mov
loope
out
enter
clc
leave
je
or
xorb
sti
inc
xor
cwtl
push
cmpsl
shlb
or
scas
sbb
add
imul
sub
clc
imul
jmp
sub
mov
adc
adc
ljmp
popf
cwtl
add
push
xchg
mov
push
insl
dec
imul
fwait
into
inc
or
mov
pop
scas
pop
adc
mov
test
sub
mov
xor
push
fdivrp
imul
sbb
jecxz
dec
aad
inc
dec
out
lret
iret
rorl
fnsave
mov
fcoml
es
mov
pop
stc
pop
mov
test
mov
jae
shll
xchg
hlt
shl
ds
aam
jmp
xchg
cmp
fs
inc
dec
jg
or
btr
mov
mov
inc
hlt
xchg
stos
sub
dec
ja
push
jl
add
dec
push
outsb
pop
xchg
cli
jno
lret
dec
adc
add
pop
lcall
xchg
gs
xor
push
pop
rcrl
mov
jp
cwtl
xor
push
lods
popf
fdivrl
mov
mov
lock
cld
mov
das
jmp
rclb
enter
hlt
fisttpll
mov
loop
idivl
int3
xor
xor
aad
mov
inc
pop
icebp
in
nop
pop
mov
js
push
sub
or
es
aad
test
test
pop
mov
movsb
sub
imul
movsl
push
in
jp
dec
pop
or
mov
sbb
xchg
push
mov
push
push
out
mov
lods
iret
enter
xor
mov
sbb
ljmp
icebp
pop
push
aam
sub
mov
xor
int
stos
mov
push
sub
or
out
test
fldenv
int
jnp
cwtl
dec
pop
push
pop
stos
adc
fsts
outsb
ja
inc
and
xchg
ljmp
inc
or
fbld
clc
shll
xlat
stos
lret
xlat
push
inc
cmp
xchg
gs
inc
sub
and
hlt
sbb
lahf
hlt
push
popa
stos
imul
adc
mov
adc
ret
popf
imul
enter
cmp
cmp
ds
push
insb
in
nop
inc
popa
jge
and
sub
mov
movsb
mov
sub
sarb
aad
xchg
lods
adc
inc
or
jmp
ja
mov
xor
fs
ret
add
push
add
jne
repz
dec
mov
push
pop
xlat
xchg
cwtl
shll
rcr
jp
or
xor
mov
mov
jo
pop
loope
bnd
je
cmc
jle
xchg
sub
xor
in
sbb
cmp
xchg
filds
mov
cltd
jg
data16
mov
orl
jbe
push
inc
lea
push
jbe
push
sub
or
testl
sbb
test
divl
imul
in
test
add
ja
out
call
insl
cmp
xor
fistpl
jb
adc
call
lcall
sub
call
push
xor
mov
mov
mov
loope
imul
leave
in
fldcw
fwait
mulb
mov
mov
mov
cmpsl
xchg
jbe
mov
xor
fmull
scas
or
pop
or
pop
ret
imul
cwtl
fwait
lahf
pop
ds
inc
jl
out
pop
xchg
jb
repnz
enter
addr16
inc
scas
data16
xchg
cmp
inc
fnsave
xchg
and
test
lods
mov
xchg
add
sub
xor
xor
adc
mov
popf
movsl
cmpsl
xor
push
push
xchg
or
mov
xchg
jecxz
jno
fwait
int3
cmpsb
xor
sbb
and
mov
loopne
sahf
pop
dec
xor
cmp
insl
mov
jmp
mov
je
and
jle
ja
lcall
hlt
push
xor
in
pop
iret
xchg
aas
outsb
cmpsb
mov
pop
inc
lods
negb
xor
jl
pop
jbe
mov
push
dec
arpl
add
subb
repnz
push
cli
xor
insb
cmp
icebp
add
cmp
pushf
inc
lcall
shll
popa
adcb
cli
cmc
and
mov
cmpsb
adc
sbb
sbb
jmp
mov
xor
gs
xchg
cld
mov
xlat
mov
inc
sbb
mov
pusha
mov
add
test
xchg
stos
repz
mov
cmpsb
lods
arpl
adc
jb
pop
out
and
fldt
cmp
aaa
shrb
push
and
pushaw
sub
cli
dec
in
add
faddl
mov
pusha
std
dec
outsl
push
lods
js
ret
sbb
repnz
outsl
das
popf
sbb
push
out
scas
cwtl
add
push
cmp
inc
add
adc
pusha
cmc
pop
jne
push
scas
mov
inc
or
or
sbb
pop
bound
shlb
lods
mov
mov
scas
mov
inc
xchg
sub
jg
inc
sbb
std
js
mov
inc
adc
push
mov
loope
shr
or
mov
int
cmp
xor
movsb
mov
xor
popf
ljmp
addb
push
sub
sbb
mov
mov
out
aam
aas
pusha
outsb
xlat
cmpsb
cs
xor
mov
pop
push
jge
and
adc
addr16
mov
mov
movsl
int3
lock
ss
adcl
or
add
add
iret
push
in
mov
pushf
add
pop
shrl
sub
mov
aaa
inc
sub
lock
js
and
cmp
scas
pop
addr16
jp
and
sbbl
fucomp
in
stos
sbb
stos
or
xlat
shlb
rolb
add
add
xchg
les
cmpsl
and
sbb
pop
movb
and
dec
sub
sub
push
push
pop
mov
negb
out
xchg
aas
pop
xor
into
dec
jmp
jg
xor
xlat
sbb
mov
pop
jbe
hlt
outsb
push
adc
fs
add
movb
or
aad
push
dec
cli
cmp
popa
outsl
es
shlb
hlt
aad
pushf
pop
cld
fadd
popa
pop
or
mov
addr16
sbb
sub
sub
add
sub
mov
cmp
addr16
xchg
or
ja
enter
sbb
cld
sub
hlt
fadd
cli
and
mov
mov
mov
push
sbb
jbe
mov
mov
mov
inc
jmp
pop
mov
mov
int
adc
int3
dec
push
pop
mov
jo
aaa
mov
lods
mov
frstor
outsb
testb
call
pushf
ficoms
or
pop
icebp
push
xor
xchg
sub
jae
pop
pop
jae
out
sahf
jl
push
test
push
ret
shll
lock
lahf
sbb
into
fsubr
push
sbb
ret
cmp
popa
xchg
mov
outsl
or
jg
xchg
inc
or
dec
xor
repnz
xchg
push
cmp
adc
test
xchg
bound
dec
xchg
jnp
adc
dec
mov
lods
sti
sbb
push
adc
mov
xchg
pop
iret
sbb
jmp
ja
mov
std
push
ror
jmp
int
inc
jno
or
cmpsb
cltd
jbe
ss
adc
lods
fsubrl
cltd
inc
adc
inc
mov
jbe
sahf
inc
adc
pop
xchg
out
lods
lock
adc
orl
sub
inc
nop
sbbb
lret
ljmp
push
inc
fucomp
jae
loop
fcmovnbe
mov
pop
cmpsl
sub
jae
mov
mov
int
dec
dec
mov
lahf
xor
sub
mov
jmp
mov
pop
ss
push
pop
inc
scas
adc
add
pop
aam
mov
mov
sarb
shrb
sub
mov
and
cmp
mov
clc
mov
popa
xchg
fldcw
mov
movsl
push
lods
scas
cmp
xchg
sub
mov
xchg
mov
pop
ficomps
cmp
clc
ret
test
pop
cmp
inc
mov
shlb
orb
xchg
pop
ret
push
fnclex
mov
std
dec
hlt
in
cmp
repnz
or
xchg
jno
adc
xor
mov
push
leave
dec
les
mov
int
ljmp
inc
and
push
adc
xchg
mov
adc
mov
inc
cmp
mov
jle
and
jmp
push
outsb
add
into
clc
shlb
stos
cmc
mov
lret
in
dec
je
mov
adc
xchg
stc
jns
push
inc
xchg
jg
add
pop
cwtl
pop
jb,pn
push
addb
and
inc
dec
sahf
scas
mov
insb
scas
dec
mov
and
loopne
mov
dec
and
popf
scas
cmp
and
and
push
daa
mov
adc
push
pop
stc
out
jle
dec
sbb
dec
std
pushf
mov
jmp
pushf
and
stos
mov
dec
adc
adc
loop
mov
cmp
loope
rclb
lret
mov
sub
adc
jae
stc
outsb
mov
scas
jg
pop
pop
sbb
bound
mov
stc
push
aad
addr16
das
jo
pop
or
bound
mov
sub
fdivl
ds
lret
push
incb
subb
je
ja
test
push
aad
ret
pop
loop
cli
stc
or
fcoml
push
add
xchg
pop
and
div
jp
dec
hlt
jno
lret
aaa
and
shl
xchg
jb
inc
rcrb
pop
add
mov
ja
sub
js
push
iret
xchg
testb
mov
nop
fists
sbb
aam
loopne
dec
sub
jns
lahf
push
xchg
lods
xor
xchg
push
and
cmp
incl
sbb
xchg
adc
mov
jp
les
in
sysexit
ja
push
insb
cmp
icebp
leave
mov
ret
add
sub
push
rcrb
subb
nop
sbb
jae
aas
and
orb
lret
ficompl
mov
mov
loopne
cmc
adc
js
lret
aad
testb
pop
dec
out
jb
xchg
jo
filds
ret
cmpsb
outsb
mov
std
cmp
stc
pop
cmpsl
stc
popa
mov
dec
jle
pop
mov
cmp
inc
rorb
jg
or
mov
xor
iret
adc
movsb
aaa
ljmp
fcmovnbe
les
sbbb
out
out
jp
cmp
mov
into
push
das
sub
aad
cmpsl
lds
mov
push
xchg
mov
cmpsl
test
in
xor
sbb
mov
add
fidivrl
jne
mov
vmovupd
add
gs
or
xor
mov
mov
shrb
enter
jbe
inc
in
mov
clc
pop
out
aam
push
xchg
xor
jns
mov
jecxz
push
pop
mov
xor
ljmp
leave
adc
pop
ss
out
mov
scas
sub
aam
cmp
arpl
jne
fsubr
add
pop
jg
iret
nop
bound
mov
mov
popa
pop
sbb
int
sub
dec
stos
or
icebp
mov
int3
pop
call
scas
cmpl
out
xchg
aas
adc
adc
mov
add
sbb
xor
inc
lock
lock
out
repnz
popa
not
icebp
cmpsb
ret
sub
jo
out
pop
loop
jb
rcrb
int
push
mov
mov
xchg
adc
dec
adc
lods
and
fs
or
add
adc
mov
xor
lods
jnp
cs
pushf
cli
enter
subl
repz
loop
std
pop
lds
add
iret
push
mov
or
out
out
lcall
inc
cli
iret
and
popa
iret
cmp
nop
mov
stc
push
rorb
xchg
dec
jmp
insl
add
aad
aas
add
add
fdivrs
aas
sub
xor
decb
into
arpl
jo
addr16
dec
mov
push
xchg
int3
xor
jns
loop
cltd
mov
pop
cltd
adc
pop
inc
aas
xchg
dec
pop
jmp
and
mov
xorl
jns
out
inc
lret
ljmp
test
add
dec
mov
dec
test
lahf
testb
rcrl
push
mov
sarb
pop
imul
xchg
adc
in
push
stos
sub
add
aas
mov
mov
sub
mov
mov
cmp
bound
int3
into
adc
mov
push
jo
push
cld
mov
xor
dec
push
pop
or
cmp
scas
pop
daa
push
mov
mov
popf
jo
test
pushf
mov
inc
adc
mov
enter
rcrb
lcall
imul
adc
fwait
shll
mov
or
jge
int
popa
mov
mov
push
ljmp
fs
leave
inc
mov
sub
jle
mov
inc
mov
fwait
mov
xor
adc
or
mov
jb
inc
rorb
push
xor
sahf
sbb
icebp
xchg
enter
jmp
pushf
dec
adc
div
cmp
into
adc
mov
inc
pop
lods
mov
pop
push
sbb
adc
mov
leave
jmp
testl
sub
mov
pop
shl
lret
adc
inc
xor
pop
lret
stc
jnp
out
xchg
inc
repz
mov
cmpsl
mov
add
gs
aas
cs
fimull
xchg
je
push
inc
in
mov
adc
sub
sbb
mov
or
je
sti
mov
mov
dec
out
push
mov
stos
and
outsb
xchg
jns
sub
xchg
cmp
in
into
sub
or
and
test
subb
inc
xchg
aaa
adc
mov
xor
sub
stos
popa
call
stos
mov
sbb
pop
inc
sbb
xchg
xor
fcmovb
inc
call
sbb
xor
or
cmp
fwait
xchg
sub
movsb
adc
fs
mov
adc
inc
stos
repz
xchg
jmp
dec
fwait
mov
sub
out
or
push
adc
mov
dec
popf
xchg
sub
mov
jmp
stc
jo
test
inc
adc
sbb
add
dec
mov
lods
push
in
sub
fwait
test
mov
enter
cmp
push
or
dec
dec
add
jo
dec
lret
into
repnz
sahf
mov
jbe
aas
xchg
data16
jae
lea
jge
lock
bound
pop
sbb
mov
lahf
sub
push
sub
push
insl
inc
inc
or
mov
loope
push
dec
sbb
push
push
cmp
and
push
mov
insl
je
in
icebp
ja
cmpsb
push
and
dec
popf
int
add
mov
in
fsubl
mov
sahf
fsubrl
bound
xchg
roll
ja
inc
js
jmp
sahf
in
push
int
test
jg
cwtl
fistpl
inc
add
add
inc
inc
jbe
ja
cwtl
pop
pop
sbb
push
je
xor
shlb
cld
inc
int
push
pop
pop
lcall
lods
xchg
dec
cmp
jg
shll
test
and
adc
add
cmp
in
xchg
add
jp
and
ljmp
or
push
pop
stos
lcall
stos
rcl
enter
ds
push
mov
push
cli
dec
push
mov
lods
movsb
lds
shrb
or
or
jg
andl
xor
loopne
sti
cmp
out
add
loopne
jo
inc
int3
lahf
xchg
rclb
sarl
aaa
push
hlt
sbb
jbe
pop
cmp
cli
out
or
add
mov
inc
mov
divb
add
adc
sub
sbb
lret
lret
push
xchg
add
xor
sbb
inc
adc
jbe
push
sbb
cltd
xor
dec
sbb
into
insb
pushf
fstpt
mov
popa
pop
dec
mov
inc
mov
push
gs
or
xchg
sub
cs
enter
negl
stos
arpl
jge
int3
lea
imul
daa
in
cmp
pushf
push
test
or
or
lea
add
sahf
adc
inc
jae
add
and
and
cmpsb
es
mov
fcoml
test
xchg
mov
inc
shufps
inc
lret
dec
call
subb
push
or
cmp
ja
or
pop
cmpsb
and
lds
adc
push
test
bound
jecxz
sub
xchg
sbb
out
cmp
jg
es
andb
jae
aad
lret
sub
sbb
int3
push
addb
jne
in
push
cltd
lret
js
inc
mov
mov
pop
mov
push
pop
shrb
inc
push
pusha
imul
iret
cli
lods
add
xchg
int
push
and
icebp
and
dec
pop
movsl
jns
js
pushf
mov
gs
mov
lahf
inc
out
bound
fs
push
cmpsl
mov
mov
es
sbb
push
xor
out
push
cmp
int
jns
add
and
push
inc
aas
dec
inc
sbb
or
xchg
insl
push
arpl
jns
repnz
mov
call
popa
pop
mov
fwait
fstpl
gs
fiaddl
movsb
jb
popf
xchg
outsb
in
and
xchg
and
cmp
mov
movsb
arpl
xlat
mov
inc
scas
mov
cmp
cmpsl
in
mov
push
xchg
sub
and
popa
xchg
mov
push
xorl
cmp
cs
pop
mov
and
push
or
daa
lahf
add
stos
adc
repz
fadd
insl
rolb
stos
cmp
lret
dec
jecxz
ficoms
xchg
pop
mov
cmc
lcall
int3
cmpsb
jns
mov
inc
aad
lds
mov
mov
or
ret
mov
inc
cli
repnz
pop
ja
adc
push
adc
push
into
aaa
push
cwtl
cmp
mov
fs
pop
push
shlb
rcrb
inc
mov
clc
cs
xchg
aam
jb
shll
into
and
lds
dec
jmp
ret
test
or
ret
lds
jle
test
movsb
jle
sbb
test
dec
sbb
cmc
adc
or
cmp
push
clc
fstl
psubusw
fstpl
int
xchg
mov
cmp
test
out
xor
push
idivb
pop
push
mov
pop
xchg
aam
mov
out
or
jl
jp
mov
jle
fisttps
sbb
push
mov
xchg
stos
int
ud1
scas
cmp
out
scas
in
jbe
xchg
sti
sub
and
dec
cltd
lea
int
mov
push
pop
ret
das
cmp
cld
pop
in
mov
scas
idiv
mov
xor
push
popf
pusha
ja
mov
pop
jb
faddl
or
push
sbb
cmp
mov
es
leave
push
pop
sti
roll
push
jae
sarl
mov
test
sub
dec
fistps
rorl
lods
sti
mov
pop
daa
aam
sbb
arpl
cmc
jecxz
xchg
sub
or
in
ret
clc
sahf
movsl
sahf
and
cmpsb
fcoml
in
pop
ljmp
fisttps
pop
imul
rcr
cmp
scas
push
fsubs
pop
push
ds
mov
aam
xor
out
mov
cs
mov
jge
ss
jl
mov
xchg
xlat
and
cmp
popa
mov
in
cwtl
or
xchg
or
or
add
test
sub
mov
add
adc
jge
add
add
xchg
call
cmp
inc
sub
push
mov
popa
hlt
lret
fidivrs
mov
mov
pusha
add
jo
push
cmp
jmp
das
scas
sbb
pop
in
push
lret
sarb
rorb
leave
adc
int
repz
xor
enter
sbb
sbb
push
int
pop
jecxz
push
cmp
imul
jbe
jl
push
mov
outsl
jno
out
mov
addr16
pop
jl
adcl
lahf
aad
sti
arpl
jns
cmp
jg
push
sar
fcomip
push
repnz
mov
outsl
push
movsl
mov
mov
xchg
in
inc
sti
xchg
outsl
aad
lret
jno
lds
lock
jmp
fcmovnu
xchg
xor
dec
jbe
dec
lods
jmp
inc
push
xor
dec
daa
xchg
push
cltd
addr16
xchg
test
pop
shl
lea
out
scas
in
mov
push
stc
dec
pop
cs
vmwrite
out
fdivl
pop
dec
mov
xlat
repz
outsl
mov
lahf
mov
popa
ret
mov
fsub
inc
mov
xchg
xor
mov
in
jo
adc
pop
mov
sar
ss
jno
pop
or
rcrb
lea
pop
scas
xchg
add
rcr
jl
sub
clc
and
dec
dec
mov
aad
insl
stc
rcrb
sbb
cmp
mov
pop
std
jmp
mov
adc
movsl
sbb
xor
mov
adc
outsl
shll
fs
leave
int
clc
lahf
mov
out
mov
mov
std
loope
dec
divl
jo
lods
mov
jo
es
sbb
xchg
jp
test
sbb
cmpsb
mov
push
xchg
sub
inc
es
jmp
lock
push
fisttpl
aad
mov
inc
add
xor
mov
sub
xor
or
jb
mov
int3
or
pusha
push
ljmp
dec
sahf
jno
add
sbb
or
and
sub
icebp
test
ficomps
icebp
lret
inc
dec
jbe
pop
fnsave
dec
ret
mov
adc
push
sti
fcmovne
mov
repnz
jecxz
mov
cmpsl
push
loopne
sbbl
pop
dec
xor
inc
push
dec
fnsave
in
cld
adc
rep
cld
jnp
inc
dec
or
inc
inc
mov
mov
xor
pop
mov
mov
movsl
ljmp
jne
data16
pop
enter
std
or
test
cmpsl
dec
adc
sub
mov
je
fisubrl
fmull
rorl
je
mov
pushf
in
shl
inc
sbb
rorb
adc
cmp
ja
jecxz
call
movsb
ja
pop
int3
dec
out
inc
push
loopne
fsincos
movsb
adc
int
mov
je
subl
jmp
mov
sarb
outsl
xor
and
mov
mov
icebp
pop
imul
inc
out
je
cmp
incl
xchg
jge
sbb
dec
ret
inc
add
pop
imul
popa
dec
xchg
jecxz
imul
cmp
clc
sbb
mov
rdmsr
aaa
and
xchg
jl
sti
in
jmp
stos
mov
sub
aam
inc
adc
sbb
daa
push
ret
cli
test
mov
jg
pop
sub
fwait
dec
rol
sub
aaa
sti
imul
mov
xor
lea
js
pop
loope
pop
cmpsb
push
push
lret
rcrl
sbb
fmuls
outsb
push
jge
lea
mov
pop
pusha
fldcw
loope
mov
cs
ljmp
cmp
jne
and
sarb
and
addr16
int3
push
dec
in
mov
bound
repz
les
outsl
or
push
test
jl
scas
lahf
ss
rolb
shrl
inc
sub
jg
int
add
and
movsb
gs
push
fists
out
mov
pop
pop
pop
into
jbe
cmp
outsl
js
fsubr
in
mov
jo
ret
andl
push
mov
inc
inc
mov
xor
aam
jb
loope
loop
stos
lock
cli
pop
add
out
mov
push
push
mov
fadd
les
hlt
ja
sub
xchg
inc
cmp
pop
xchg
dec
gs
mov
push
sub
jb
out
iret
in
sub
ss
xor
push
dec
and
out
arpl
cli
inc
add
xor
jmp
dec
jne
shll
xchg
dec
adc
dec
push
push
fistpl
ja
mov
call
les
xlat
inc
imul
xchg
adc
push
push
pusha
test
test
out
dec
xor
rclb
repnz
push
add
ds
xchg
cli
stos
outsl
add
idivb
adc
mov
inc
out
call
outsb
and
shl
scas
lcall
sbb
pusha
ret
pop
je
sub
push
sbb
iret
jmp
cltd
jge
fidivl
mov
aam
push
movsl
mov
jl
xchg
adc
cs
pop
mov
sbb
daa
out
mov
cmp
fs
cmp
pop
pop
mov
fbstp
inc
arpl
insb
push
jmp
mov
ljmp
cmpsb
and
fwait
push
into
or
mov
mov
addr16
dec
out
cmp
out
xchg
cvtpi2ps
bnd
rorb
call
mov
jo
jns
mov
imul
and
pop
push
add
push
xorl
sub
pusha
xlat
jp
cwtl
and
mov
dec
test
push
adc
push
leave
jg
into
push
jbe
daa
jo
pop
ret
sub
ret
call
in
xor
adc
out
nop
and
sub
das
and
push
mov
push
jno
ret
inc
pop
xchg
mov
or
sbb
mov
xchg
scas
or
int
push
and
sahf
clc
mov
testb
sub
mov
jecxz
sub
cmp
mov
ja
dec
arpl
fisttpl
sbb
adc
inc
xchg
pusha
fst
loop
out
in
aaa
xchg
mov
mov
test
jb
and
ss
sbb
dec
rol
inc
ret
repnz
push
das
sub
aas
aad
xor
fcmove
or
push
jae
mov
addr16
xor
pop
pop
sbb
jl,pt
mov
stos
roll
add
mov
inc
and
cmp
int
pop
cld
and
inc
pop
pop
aaa
sub
adc
and
dec
and
mov
pop
and
or
test
or
mov
stc
popf
xor
sub
popf
shlb
xor
or
sbbb
mov
xor
idivl
fsubp
adc
push
test
lock
jne
push
dec
dec
xchg
dec
sar
mov
int3
mov
xchg
imul
mov
add
dec
out
lahf
adc
mov
or
cwtl
sbb
jp
pop
decl
dec
inc
jae
mov
rorb
cltd
cltd
and
mov
inc
cmp
lods
add
fcmovnbe
and
sub
mov
xorb
movsb
out
mov
int
and
loope
ret
lock
mov
test
clc
or
jae
or
push
pop
or
xchg
lret
addr16
sub
add
or
bound
push
xchg
loop
call
dec
sub
push
jb
stos
repz
vaddsubpd
sbb
adc
cli
adc
dec
push
call
mov
out
movsb
lret
mov
aas
ds
arpl
jae
fisttpll
cli
in
mov
dec
add
sub
dec
xchg
jecxz
jle
ljmp
inc
out
mov
pop
pushl
or
sahf
popa
in
shlb
adc
push
jg
outsl
pop
mov
push
in
push
add
push
inc
lcall
inc
mov
pop
jp
mov
mov
pop
dec
push
lods
js
adcb
mov
arpl
mov
clc
mov
cmpsl
cld
test
push
dec
push
and
adc
cmp
inc
loop
mov
repnz
pop
sti
mov
outsl
insb
mov
cmc
mov
inc
pop
imul
imulb
xor
popf
xchg
arpl
sub
mov
idivb
pop
cmpsl
cltd
fstpl
loop
inc
rorl
test
ja
sbb
je
les
xor
mov
sub
shll
cmp
aas
out
pop
xchg
std
mov
mov
fidivs
lcall
mov
mov
ja
or
std
imul
xlat
sbb
out
bound
loop
mov
xlat
movsb
popa
ret
jns
in
imul
pop
or
sub
dec
adc
jmp
pushf
data16
lcall
lea
insb
stos
jecxz
por
jns
sub
mov
aaa
mov
rorb
adc
sub
cmp
and
lret
int3
cmp
push
in
sub
mov
or
xchg
std
nop
push
movsb
add
xor
or
loop
jg
adc
mov
push
mov
lcall
ds
in
rcl
cltd
mov
xchg
cmp
sar
dec
jns
pop
pop
sub
and
stos
out
sub
sbb
and
imul
jle
ficoml
cmpsb
mov
icebp
xchg
add
out
cmp
jg
push
sub
xor
fdivl
je
ljmp
sbb
pop
pusha
jg
mov
loopne
and
scas
push
mov
scas
mov
inc
and
cltd
inc
mov
fidivrl
mov
rcll
push
ljmp
xchg
mov
sub
xchg
cmp
mov
aam
das
lret
setl
push
push
cs
adc
push
flds
pushf
cli
push
cmpsb
es
inc
mov
test
mov
cmp
pop
lret
mov
xor
mov
pop
mov
push
rcll
xchg
lock
sbb
adc
js
jo
mov
xor
loopne
push
push
lods
or
or
test
dec
or
ljmp
cmp
std
jb
xchg
sbb
iret
dec
mov
scas
or
in
imul
aam
mov
mov
add
sub
out
xlat
data16
inc
clc
lcall
stos
inc
sarb
test
inc
cwtl
dec
cmpsb
stc
loop
nop
or
push
faddp
test
jns
imul
fwait
idivl
jmp
dec
push
push
dec
loopne
xchg
or
cmp
mov
push
stos
mov
daa
bound
cltd
push
sahf
sbb
sti
jne
js
fdivrp
inc
or
ds
and
jno
jge
or
cmp
mov
mov
sub
ret
out
mov
js
inc
jl,pn
jns
xor
pop
imul
or
and
in
xor
stc
repnz
mov
pop
mov
ja
lret
push
mov
mov
pop
out
je
push
ficoml
scas
arpl
test
addr16
push
cmp
xor
add
into
leave
xor
xor
jge
jmp
fisubrl
insb
fwait
add
movsb
push
xchg
mov
dec
pop
test
mov
shl
loop
sbb
int
ss
shl
fs
push
out
dec
jbe
sbb
mov
stos
repz
inc
sarl
int3
aas
stos
mov
sbb
imul
pop
cmp
sub
lahf
sub
adcb
mov
aam
insb
mov
in
lret
push
mov
fildl
xlat
inc
insb
fs
ja
jg
in
dec
cmp
pusha
aad
stc
push
out
lret
add
jo
mov
lret
jl
push
cltd
xor
repnz
insl
fs
cld
and
test
mov
pop
mov
lahf
push
and
and
sahf
movsl
cmc
das
out
mov
pop
icebp
test
dec
and
mov
dec
je
dec
mov
inc
mov
fcmovbe
sarb
cmp
xchg
rorl
and
sbb
leave
je
lock
pop
push
adc
inc
fs
jnp
ds
jmp
push
sub
jno
jp
and
vpshuflw
icebp
xor
ljmp
aam
sbb
cli
into
and
xchg
mov
mov
mov
sbb
daa
inc
adc
dec
test
add
lea
mov
movsb
shr
test
xchg
aas
jmp
mov
xor
icebp
fiadds
push
lret
scas
push
aam
dec
jne
ret
mov
lods
fdivrs
daa
mov
subl
lcall
shlb
sub
popa
lods
rorl
pop
jge
push
inc
xchg
mov
mov
in
mov
ss
push
daa
sub
inc
sub
cmpsb
test
imul
sbbl
xor
repz
or
adc
ja
pop
ficoms
lock
push
fdivp
scas
clc
and
pushf
je
lret
jae
dec
jno
pop
sub
fdivl
pop
inc
inc
mov
mov
or
test
subl
and
or
fistl
xchg
pop
insb
sarl
add
adcb
jmp
mov
mov
push
les
push
pushf
insl
mov
pusha
push
cmc
ljmp
mov
lock
inc
loope
or
gs
mov
sbb
mov
pop
std
cmpb
jecxz
stc
ret
iretw
pop
jmp
inc
aaa
jl
aas
sbb
sub
inc
sti
push
push
lret
pop
push
dec
push
jo
pop
mov
cmpsb
sbb
outsb
inc
xor
fistpll
fsubl
mov
sub
pop
mov
rclb
inc
push
mov
lods
in
mov
add
sbb
scas
in
lods
pop
fidivs
or
add
sbb
mov
lret
or
cld
sub
aas
xor
roll
fwait
rcrl
jno
mov
mul
stc
mov
xchg
stos
jno
add
mov
pop
icebp
inc
lahf
mov
cmp
mov
cltd
push
cmpsb
add
adc
fnstcw
das
xor
xor
jae
sbb
fidivrs
sub
pop
in
into
rorl
cltd
mov
mov
into
mov
fwait
sub
jmp
fnstsw
mov
popf
mov
into
mov
push
sub
lahf
stos
ja
out
mov
aad
cmpb
lods
fldenv
jne
imul
in
push
add
repz
sbb
sbb
test
sub
mov
lcall
sbbl
fidivrs
movb
sti
popa
add
adc
sub
or
pop
cmp
push
pop
daa
call
pop
add
xor
mov
xchg
inc
cltd
jno
test
out
mov
mov
lock
mov
or
push
add
xor
sub
sbb
faddp
xchg
pop
outsl
dec
jae
mov
push
loop
lds
addr16
sarb
xor
pop
jo
jmp
lds
mov
pop
adc
mov
adc
pop
jecxz
cmpsb
clc
cs
pop
aas
sbb
sbb
sahf
cmp
js
ss
push
mov
jmp
nop
outsl
aas
add
inc
add
imulb
sbb
pop
jns
fistps
adc
arpl
pop
sti
out
jecxz
and
jge
jns
rorb
mov
and
lods
dec
pop
in
imul
lock
or
pop
arpl
arpl
stc
loop
cmpsl
mov
ffree
sbb
xlat
push
push
push
sbb
pop
fnstenv
jge
je
adc
nop
call
sarb
dec
sarb
add
add
out
xorb
movsb
cmc
fsubr
out
jno
sub
sbb
popf
push
or
cmc
xchg
ret
int
mov
fdivs
je
adc
inc
inc
pcmpgtw
loopne
cwtl
mov
pusha
iret
loope
cmp
pop
mov
push
vmaxss
vsubpd
sub
in
out
inc
out
cmp
lret
jb
mov
and
push
scas
mov
sub
push
incb
xor
out
shlb
aaa
das
popa
pop
push
mov
sbbb
adc
add
push
inc
add
aaa
iret
lds
mov
xchg
xor
jne
sbb
aas
jae
lret
jo
cli
arpl
sbb
and
fidivs
pop
xor
lcall
dec
sbb
lds
dec
std
xlat
xchg
push
or
loop
inc
in
fcomp
inc
cmp
mov
mov
mov
enter
mov
push
xchg
cmpsl
and
xchg
mov
lcall
cmp
and
cmpsb
out
pop
insl
pop
testl
xor
movsl
push
es
outsb
data16
mov
add
jno
dec
sub
mul
sub
in
adc
push
xlat
sbb
cmp
cmc
mov
sub
aad
xlat
imul
mov
scas
and
loopne
push
std
in
mov
imul
push
mov
push
pop
xchg
testb
out
js
test
cmp
mov
xchg
lds
lcall
cmp
fs
bound
movsb
out
mov
or
out
mov
push
pop
stos
mov
push
jae
xchg
mov
push
fisubrl
dec
or
sub
cmp
cwtl
imull
movsb
inc
mov
rorb
lods
mov
out
sbb
arpl
pop
push
ja
pop
sar
stc
dec
es
cmpl
rcll
xchg
mov
mov
jnp
fists
mov
iret
lcall
xor
inc
hlt
ja
cmp
dec
fldenv
xor
sti
and
idivl
ja
cld
xchg
push
xor
mov
icebp
mov
dec
mov
mov
xchg
fistpl
fidivrs
mov
xor
jle
pop
ja
lahf
xchg
sbb
jl
push
imull
scas
cmp
dec
hlt
xchg
pop
push
stc
bound
mov
loopne
aad
xchg
aam
popf
popf
aaa
int
popf
dec
push
cltd
mov
fdivrp
fists
xor
js
js
movsl
and
push
xlat
test
xor
mov
sub
xchg
cmpsb
adc
das
add
adc
mov
lcall
push
cmp
jecxz
add
sbb
lret
das
sbb
mov
pop
test
jns
insl
test
jb
ja
cmp
push
inc
insl
adc
mov
fsub
xchg
and
mov
rcrl
cmp
mov
jb
mov
leave
adc
mov
repz
jmp
sbb
sbb
sbb
mov
inc
jae
sar
aad
lea
enter
inc
mov
in
sbb
push
xor
inc
inc
js
aaa
xchg
pop
and
add
subb
sub
std
ss
imul
cmp
in
repz
push
add
mov
popa
leave
and
sub
fldcw
add
shrl
ss
cwtl
daa
jle
fmull
testl
movsl
xchg
inc
jo
push
pushf
insb
mov
in
lcall
jmp
push
jp
in
mov
fimull
sarl
dec
pop
or
and
pop
cmpb
push
or
out
aas
push
lods
movsl
sbbb
popf
scas
rcrl
lds
loopne
pop
xlat
popa
arpl
mov
int3
or
push
jmp
jecxz
pusha
cwtl
mov
data16
jne
push
push
adc
mov
push
push
cmp
arpl
mov
ret
xchg
xor
xor
add
fistps
cmp
add
test
popa
mov
sub
addr16
hlt
lods
cwtl
dec
popf
ficompl
stc
out
insb
dec
stos
jnp
pop
push
data16
orl
arpl
inc
btr
out
out
lods
lods
hlt
loopne
pop
mov
jno
and
ja
jg
mov
lock
cmpsl
cs
ja
clc
cmp
enter
lahf
xchg
jge
and
pushf
fwait
xor
or
stos
insl
mov
pop
pop
mov
push
jp
jae
mov
bound
cmc
lock
addr16
jmp
jge
or
outsl
dec
sbb
mov
pop
pop
pop
jp
mov
or
mov
into
lret
stos
clc
sbb
mov
std
push
sahf
cmpsl
adc
nop
mov
pusha
cmp
cmp
daa
or
xor
sub
call
sbb
lock
or
or
xchg
mov
and
sub
mov
xchg
push
mov
and
cld
aad
call
push
hlt
cld
push
adc
dec
jmp
leave
lahf
mov
jg
push
in
cltd
cwtl
addl
cmpsb
pop
push
dec
aam
inc
sti
xchg
mov
in
xor
dec
cmc
jg
pop
cmp
xor
xor
icebp
push
aas
sub
add
adc
sub
in
or
jge
dec
rol
pop
lahf
scas
in
mov
xor
adc
cmpsl
inc
xor
push
mov
dec
out
lea
inc
mov
mov
mov
xchg
lock
cmp
mov
mov
cmpsl
outsl
mov
dec
lcall
mov
mov
cmp
orb
popf
repnz
cmp
cmpl
mov
adc
pop
and
cwtl
add
jl
mov
inc
push
fwait
ds
mov
jmp
add
mov
push
ja
shll
ret
lret
ljmp
sub
or
cmp
ret
stos
jo
jbe
jle
lret
cmpsb
cmpsb
jp
les
or
dec
jns
daa
mov
xchg
pop
add
fldt
out
xor
data16
adc
divb
pop
les
pop
adc
andb
int3
std
mov
sbb
sbb
push
inc
cmp
mov
jmp
mov
pop
stos
mov
and
add
xchg
sub
mov
push
push
pop
cmpsb
testb
dec
jae
lds
xor
lock
dec
out
movsl
lret
mov
filds
adc
cwtl
out
shlb
into
addr16
arpl
outsl
and
insb
push
popf
aad
int
mov
pop
mov
inc
mov
cld
aas
sub
pop
sbb
je
std
mov
psrlw
out
dec
jg
lods
hlt
hlt
fdivrs
adc
jp
sbb
pop
out
push
mov
adcl
fcmovnu
int3
aam
sub
lds
lds
fbld
push
bound
xchg
into
add
cmp
fsubrl
jle
adc
dec
decb
adc
lea
push
or
mov
fsubrl
xchg
add
icebp
iret
out
pusha
and
or
fcmovb
jmp
jne
fisubs
mov
xchg
out
cmp
andb
sbb
sbb
add
cwtl
pop
sar
test
or
sar
dec
into
pop
clc
jecxz
push
and
aad
mov
mov
xchg
das
jge
insl
scas
outsl
push
clc
cmp
int
frstor
stos
push
js
dec
mov
push
fimuls
mov
lret
fbld
outsl
and
add
stc
push
mov
pop
std
scas
arpl
out
scas
push
lds
js
loop
inc
sti
xchg
out
mov
cltd
dec
adc
dec
rcll
xchg
cmp
and
and
test
jmp
mov
ljmp
insb
popa
xor
shrb
xchg
dec
or
or
insb
cmp
inc
lock
daa
pusha
push
rolb
mov
pop
call
jge
sbb
add
add
sub
inc
stos
and
inc
lret
mov
rorl
in
push
les
out
stos
push
movsl
dec
xor
xor
pop
test
xchg
mov
jns
xor
pop
mov
in
push
pop
negb
hlt
xchg
mov
ja
sub
dec
stos
mov
mov
push
mov
stc
ja
imul
mulb
ret
aaa
and
pop
xchg
aam
adc
arpl
sbb
dec
lret
mov
cmp
clc
cmp
int
inc
dec
and
and
orl
jb
lret
hlt
je
jb
imul
rcrl
push
rolb
xchg
push
mov
aad
xor
mov
scas
and
cmpsl
push
dec
cmpl
aas
dec
aas
test
dec
mov
mov
andl
add
data16
jae
cld
jg
inc
addb
jo
or
es
sbb
cwtl
dec
imul
adc
jno
sub
xchg
push
or
pop
fnstenv
sbb
and
and
cwtl
xchg
pop
lahf
add
in
lcall
adc
outsl
fwait
mov
mov
sub
shll
pusha
sbb
xchg
jb
idivl
and
test
loop
mov
sarb
and
stc
sbb
and
inc
out
push
pushf
es
and
loopne
jge
fs
push
ds
adc
lret
or
fisubrl
dec
clc
fucomp
mov
cmp
popa
movsl
jmp
cmc
fwait
sub
iret
xchg
aas
mov
push
push
jmp
aam
mov
lds
aaa
inc
and
fisubs
insl
cli
mov
xor
fs
scas
rcr
dec
call
leave
dec
aaa
jecxz
mov
xchg
clc
in
mov
enter
and
push
add
inc
gs
mov
xchg
ja
mov
and
pop
push
loope
pop
xor
icebp
cmp
xor
and
mov
mov
pop
and
ret
cli
xchg
cmp
lcall
loope
and
jecxz
jge
pop
add
jns
aas
cmpsl
sub
iret
out
sub
sbb
in
in
es
shlb
xchg
xchg
mov
imul
fnstcw
lcall
pop
xchg
int
mov
xchg
xor
xchg
lret
and
das
je
mov
pop
mov
jnp
add
call
xchg
out
adc
mov
addr16
sub
outsb
aad
push
testb
stos
rorl
pop
js
pop
dec
mov
shlb
push
aam
mov
cmp
inc
sub
mov
add
movsb
xchg
push
mov
sbb
xchg
popa
and
test
movsb
inc
repnz
pop
adc
das
add
or
sbb
cmc
out
mov
mov
sub
imul
insl
shll
mov
jmp
push
push
cmpsb
test
cmp
test
push
stos
add
pop
enter
jns
adc
cmp
cmp
mov
xchg
mov
xor
mov
mov
pop
mov
cmp
fsubrl
xor
adc
xor
add
push
repnz
fidivs
dec
fdiv
stc
xchg
push
push
adc
push
cwtl
cli
in
xchg
scas
xchg
in
movsb
aam
lds
sbb
call
pop
jl
addr16
cmp
mov
cmpsb
mov
pop
loopne
fcompl
div
xchg
and
sbb
jecxz
fistps
xor
lahf
loope
push
sub
decb
test
test
sub
inc
sbb
pop
lret
stos
xchg
or
jmp
cmpsl
sar
xchg
out
sarl
and
movsl
jb
fidivs
cli
repz
sbb
fwait
and
leave
adc
push
repz
repz
lcall
dec
dec
notl
clc
int
je
and
test
lret
dec
cmp
pop
divb
xchg
mov
inc
testb
xchg
push
ret
aas
aam
add
mov
mov
mov
fists
xor
inc
or
leave
imul
lock
ja
fimull
xchg
stc
stos
inc
addb
stos
js
addr16
ds
leave
mov
mov
in
shll
out
aaa
pop
in
pop
inc
ds
push
imul
icebp
fstl
jo
jbe
mov
or
mov
popf
push
fcompl
mov
mov
add
test
push
and
push
jno
jl
aam
iret
mov
mov
push
std
outsl
jae
cltd
stos
jnp
ret
jne
and
push
push
mov
xchg
xchg
cmpxchg
add
jno
enter
bound
xor
mov
push
rcl
mov
inc
insl
mov
cmp
test
xchg
adc
andl
lds
mov
add
sbbb
loope
xchg
mov
pop
jbe
dec
pop
ja
lock
adc
mov
mov
mov
pusha
mov
int
ret
inc
sub
icebp
cli
mov
add
repnz
lock
addr16
test
loopne
or
loope
in
or
or
mov
bound
jnp
idivb
ret
push
cmp
mull
jo
lret
jge
jl
mov
dec
jecxz
sbb
bnd
data16
mov
into
jae
and
inc
jp
rorb
movsb
mov
dec
addr16
enter
lods
jp
shlb
ja
rclb
inc
mov
pusha
cltd
push
fisubrs
js
in
sbb
orb
ja
imul
je
mov
inc
daa
loope
imul
in
cmp
inc
pop
lods
xchg
test
pop
arpl
mov
hlt
jl
push
dec
test
and
pop
out
push
cltd
adc
pop
mov
cltd
ljmp
ss
gs
xor
gs
fs
scas
cltd
lods
jns
jecxz
test
cmp
push
lcall
xchg
mov
xchg
fmull
xchg
cwtl
or
mov
push
and
stc
stc
or
stos
rcr
push
inc
mov
mov
test
je
scas
add
mov
mov
insb
sbbl
xor
clc
outsl
cs
lea
push
pop
lret
cmpsl
mov
or
pop
mov
sarl
fxtract
imul
xchg
xor
and
dec
cmp
std
insb
dec
clc
fcoml
inc
pusha
mov
dec
sub
jecxz
fldenv
ficoml
fistl
jbe
std
lods
icebp
negb
mov
lidtl
mov
pop
repz
mov
sbb
sub
xchg
dec
cvttps2pi
push
mov
rcrb
jecxz
xor
mov
add
jecxz
push
dec
pop
lock
inc
into
mov
out
rcl
mov
fwait
mov
inc
sbb
xor
mov
pop
push
nop
pop
aas
movsl
cmp
lds
ffree
fwait
xor
aam
popa
cmp
push
jle
js
outsb
subl
mov
das
stos
push
jl
daa
es
mov
pop
xor
cmp
xchg
imul
cmc
mov
loope
push
jo
cmc
rorb
push
insb
mov
shl
mov
cmp
jl
sbb
stc
fisubrl
sub
daa
int3
dec
pop
and
scas
sbb
orl
mov
sub
or
repnz
orb
xor
jle
pop
sub
std
pop
movb
clc
push
shr
mov
sub
mov
pushl
enter
mov
scas
dec
cmp
xor
ss
sarl
sub
imulb
cmp
cmpsl
cmp
and
mov
andl
cli
lock
inc
cmpsb
int
adc
in
xor
or
fs
cmp
mov
lock
hlt
dec
lret
fldt
roll
js
data16
mov
mov
insl
dec
lret
mov
pop
aad
dec
push
mov
push
fidivrs
lods
shrd
adc
out
out
fimull
mov
adc
fimuls
pusha
add
mov
pop
cltd
lods
push
leave
das
mov
adc
xorb
cmp
inc
call
adc
stc
sub
sbb
dec
insb
pop
xchg
or
jns
xchg
adc
dec
fnsave
lock
aam
add
push
cmp
add
fisubrl
xchg
int3
scas
shll
jg
jo
insb
push
jecxz
or
pop
mov
enter
mov
ja
gs
adc
inc
push
inc
jmp
inc
or
mov
xlat
aas
testb
lcall
cs
arpl
jo
mov
ret
js
lea
dec
into
in
mov
lahf
sub
lcall
jmp
cmp
js
loopne
jecxz
sbb
in
mov
or
das
adc
imul
lods
jmp
lret
loopne
cmpb
pop
xor
aad
pop
adc
mov
xor
dec
sub
dec
mov
sarb
icebp
into
xor
jle
daa
sub
into
xor
jge
dec
shll
in
add
mov
call
or
lahf
loopne
jae
gs
lock
movb
xor
cmp
push
in
ret
loope
cmp
mov
dec
or
sbb
stos
loope
movsb
mull
dec
rcrb
gs
shrl
dec
les
xor
sbb
push
js
mov
xchg
sbbl
loope
mov
int3
jo
cmp
nop
jne
mov
xor
int
fistl
mov
push
add
add
xorb
xchg
scas
into
out
mov
adc
loopne
in
es
lock
imul
pop
jo
lcall
lcall
std
xchg
andb
in
and
pop
pusha
fcoml
sbb
add
ret
in
ljmp
and
repz
pusha
cs
das
ljmp
push
insl
les
aam
or
cmpsl
std
vunpckhps
push
sub
mov
sar
in
or
cmp
jbe
inc
add
inc
data16
mov
xor
jp
mov
push
pop
cmpsl
sub
rclb
and
mov
popf
shrb
ss
pusha
mov
sub
sub
rorb
arpl
loope
arpl
xchg
or
test
push
jns
cmp
pop
adc
sbb
sbb
push
sbb
es
dec
movsb
cltd
fwait
inc
sbb
shl
inc
gs
dec
and
xor
test
pop
pop
adc
mov
enter
cltd
mov
adc
neg
popl
ja
jne
push
aam
fsubrs
push
pop
icebp
pop
jno
and
xchg
shll
movaps
pop
addb
fsubrs
xor
xor
xchg
mov
rcll
ss
fldpi
dec
inc
xlat
mov
xor
jle
sbb
xor
push
mov
cmp
mov
inc
mov
adc
xor
cwtl
lea
gs
dec
test
inc
pop
mov
xor
jmp
mov
cmpsl
dec
scas
pop
jb
aam
lods
and
int
jl
dec
cmp
adc
jno
and
sahf
inc
in
or
sbb
in
cwtl
fists
outsb
fcomip
dec
adc
sbb
cmpsb
cwtl
adc
jg
nop
mov
sbb
and
fldenv
loopne
call
jg
stos
loopne
push
adc
pusha
test
mov
jns
out
cltd
popf
pop
faddl
ret
cmpsb
dec
nop
jbe
sub
iret
push
cmp
enter
mov
shr
jno
jno
aaa
sub
pop
jecxz
xor
mov
xchg
out
in
ds
shlb
dec
mov
sbb
js
push
jg
pushf
divb
test
mov
mov
loopne
enter
leave
arpl
adc
fldt
cmp
scas
lcall
mov
aam
decl
cmp
or
ja
jp
mov
xor
cli
mov
inc
mov
ret
dec
or
nop
pushf
inc
dec
inc
dec
loopne
adc
adc
cmpsl
les
mov
xor
cmc
repz
push
inc
xor
and
jno
lods
sub
pop
push
xor
adc
test
sub
aas
je
push
aad
sbb
stos
sub
add
xchg
jg
adc
iret
inc
dec
cmc
and
lods
xchg
jo
and
cmp
push
icebp
jo
je
movsb
sbb
fdivs
fistpll
cltd
pusha
pop
mov
inc
lock
nopl
xor
repz
jnp
jbe
xchg
dec
popl
adc
jmp
jae
cltd
dec
jecxz
ds
push
sub
loopne
lods
push
sub
test
push
xchg
mul
inc
iret
loopne
fsubr
or
fwait
hlt
xor
cmp
inc
xlat
mov
mov
es
mov
hlt
or
jl
pop
neg
mov
in
popf
inc
adc
inc
lret
push
xchg
fistpl
xchg
adc
jmp
aam
jbe
js,pn
decl
lahf
insb
dec
jle
pop
hlt
push
mov
push
dec
mov
das
subb
pop
and
sbb
and
das
aam
and
xchg
xchg
mov
test
jmp
jns
mov
mov
fldenv
jne
cmp
test
popf
sbb
lea
call
xchg
cwtl
repnz
mov
inc
gs
roll
imul
mov
out
and
clc
out
pop
hlt
jmp
cmp
lcall
out
scas
dec
imul
shll
jmp
sbb
cmpsb
or
mov
sbb
fisubrs
push
sar
aaa
inc
mov
rorb
int
aad
aas
sub
out
fildl
lods
push
repz
test
sahf
cmp
xor
gs
daa
imul
lretw
cmp
add
loopne
xchg
pop
ja
adc
orl
lods
inc
jnp
out
cmc
push
std
add
ja
insl
adc
jae
sub
push
xchg
roll
repnz
lock
mov
adc
adc
mov
adc
out
push
sbb
sub
rcrb
adc
jne
cmpsb
xchg
cmp
sbb
insl
addr16
pusha
adc
lcall
mov
popf
or
xchg
xchg
add
sbb
clc
js
and
and
jl
pop
xor
sub
dec
pop
inc
lea
ds
in
out
sub
fidivrs
pop
shlb
enter
mov
jno
dec
aaa
or
sbb
jmp
mov
cmp
mov
sarl
shlb
popf
nop
in
in
loope
mov
cld
xchg
push
mov
sbb
mov
jp
imul
sub
lret
test
jne
jnp
add
aam
jle
iret
mov
mov
ds
negl
inc
mov
add
xchg
jmp
add
cmp
sub
insl
or
and
xchg
add
pop
fwait
jp,pn
insb
fbstp
push
cltd
lea
mov
mov
out
imul
jmp
div
icebp
mov
xorl
push
test
jecxz
out
xor
xchg
cmp
pop
sbb
xchg
imul
pusha
pushf
pop
cli
cmp
xor
ja
pop
cmp
sti
and
and
lcall
cltd
shrb
add
std
mov
push
sub
jmp
mov
adc
adc
cmp
sarl
in
sbb
insb
push
test
movsb
xchg
ror
mov
loop
stos
mov
aam
insb
mov
aam
lea
fcmovnb
fnstenv
push
dec
out
mov
sub
mov
mov
addr16
pop
ds
or
subb
rcr
lods
stos
mov
shll
add
std
dec
movsb
inc
xor
dec
xchg
adc
test
lods
xor
and
lahf
adc
cmp
push
fbld
push
adc
cs
rorl
dec
mov
cmc
mov
sar
add
fldt
leave
je
cli
sarl
push
sub
sti
mov
ss
xchg
or
pop
frstor
das
jl
dec
mov
outsl
lret
mov
xchg
jp
lret
sti
std
hlt
insb
fcmovnu
xor
in
mov
adc
xchg
bound
lret
mov
inc
push
lret
xlat
lds
sbb
sub
mov
mov
pshufw
and
test
test
lods
in
ja
lret
push
testb
mov
lods
xlat
sub
shl
cmp
or
lcall
xor
and
cmp
ljmp
mov
mov
inc
scas
sahf
push
sub
fwait
imul
pop
insl
mov
mov
jecxz
cli
stos
mov
sub
inc
rcrb
xor
imul
bound
gs
push
out
jo
hlt
cmp
push
fisttps
add
into
popf
xchg
push
jg
xchg
stc
aaa
mov
mov
dec
dec
inc
cld
mov
aas
lods
scas
repnz
or
mov
sub
pop
mov
mov
push
rcrl
cmp
cmp
sub
jp
jmp
leave
call
sbb
push
out
lahf
insl
mov
mov
xchg
push
in
jne
xchg
fdivrl
sub
popa
in
fadd
jp
jb
mov
dec
cmpsl
xchg
jg
rcll
adcl
pop
xor
push
adc
je
mov
sbb
cmove
mov
es
xor
cmp
mov
sbb
mov
xor
inc
xchg
in
mov
and
fwait
repnz
roll
inc
jge
lahf
inc
jecxz
sbb
jmp
cwtl
jno
jae
int3
pop
cwtl
push
enter
mov
in
out
sbb
push
lahf
sub
in
cmp
nop
mov
mov
cmp
push
ljmp
outsl
xchg
add
sub
mov
mov
insl
aad
sbb
xor
mov
push
jno
rclb
jle
pop
fadds
sbb
sbb
in
add
ss
push
stos
jmp
cmp
push
xor
in
loop
insb
pop
popf
dec
pop
mov
loope
sahf
mull
inc
push
push
sbb
cltd
jae
scas
ds
lahf
clc
rorl
add
xor
mov
dec
into
push
jmp
ja
int3
testb
js
add
out
jp
loopne
loop
xlat
inc
jae
popf
fisubrs
lret
jns
mov
inc
jns
ljmp
sbb
into
shrl
cmp
sbb
cmp
ss
aad
or
shll
idivb
wrmsr
sahf
out
add
jecxz
mov
je
push
sbb
xor
inc
jns
dec
xor
rcr
fnstenv
leave
fisttpl
punpcklwd
mov
fs
mov
fdivr
xchg
mov
int
inc
fsubrp
scas
mov
movl
roll
lahf
into
subb
push
or
or
mov
push
add
push
into
jge
mov
cld
or
mov
push
dec
inc
arpl
ds
xchg
dec
mov
in
test
xor
rcrl
in
mov
std
imul
in
sahf
out
aas
sub
inc
lret
mov
jb
or
out
xchg
insb
shll
aam
dec
push
sbb
xchg
mov
int
sysenter
scas
rcrb
fisttpll
sbb
sub
push
mov
mov
call
fwait
push
sbbl
and
or
leave
sub
lret
aam
cmp
and
add
stc
fldcw
sub
sub
pusha
mov
cmp
jge
scas
add
mov
sahf
pop
outsl
pusha
aaa
jae
xchg
imul
mov
andl
push
fisubl
test
push
pop
or
sub
inc
sbb
push
mov
xor
add
and
push
test
or
lods
addr16
repz
arpl
push
adc
fstp
cld
xchg
cmp
ds
adc
rcrb
adc
jle
and
fstps
jb
xor
test
adcb
ficoms
jg
adc
jge
push
push
movsl
movsb
push
mov
incl
push
aad
mov
jl
lret
test
ljmp
adc
test
inc
bnd
add
pop
and
mov
or
sub
addr16
out
ficomps
stc
pop
pop
into
jnp
inc
gs
sbb
loope
imul
shll
mov
arpl
dec
xchg
bound
test
scas
es
cmp
push
cwtl
les
xchg
push
ds
adc
into
popa
mov
jae
xlat
jp
sbb
pop
test
js
sbb
pushf
mov
dec
addb
cmp
xchg
aad
cmp
fcoms
sbb
xchg
push
or
test
jo
push
mov
mov
adc
in
fsubrp
xor
ds
sbb
sbb
ret
xchg
imull
out
sarl
jmp
sbb
mov
cli
mov
or
orb
pushf
mov
jg
mov
adc
cmpsl
jl
sarb
xchg
in
aas
pop
fsubs
int
adcb
shll
jnp
mov
push
lods
xchg
mov
adc
push
mov
leave
repz
rol
lcall
xor
adc
adc
push
sbb
cmp
roll
cltd
mov
or
ljmp
xor
adc
jae
cmp
jo
pop
pushf
xchg
scas
dec
dec
mov
dec
push
popf
fistl
test
ss
mov
out
lea
cmpsl
or
or
push
xor
movsb
and
sarb
js
inc
xchg
pop
filds
sub
push
mov
adc
fstpl
xchg
jne
cmp
imul
push
nop
jns
xchg
test
fistpll
push
push
cmp
imul
fs
fstps
and
shll
stos
ljmp
enter
popa
out
pop
hlt
pop
sbb
and
test
mov
mov
fwait
addl
out
insl
push
test
cli
les
stos
sahf
xor
xor
xor
lock
imul
sbb
aaa
popf
es
dec
repz
retw
sub
inc
loop
inc
pop
out
adc
dec
jb
cmp
rclb
xchg
xchg
cmp
lods
xor
sub
lahf
dec
in
stos
fwait
lea
jae
imulb
ret
mov
cmp
jl
pop
loopne
sub
loope
pminsw
xchg
sub
mov
loop
test
sub
in
js
into
test
stos
inc
jae,pn
je
shrb
sbb
mov
sub
daa
mov
scas
inc
testb
out
dec
xchg
cmc
fldenv
repz
dec
xchg
dec
cmp
mov
icebp
pop
jnp
mov
mov
mov
and
pop
and
xchg
push
xor
in
cld
dec
inc
push
stos
or
push
out
mov
ret
xchg
add
out
add
popf
aaa
dec
pop
lret
xchg
stos
jb
inc
sbb
inc
lahf
in
pop
or
and
add
jg
xchg
push
dec
insb
int3
je
lock
nop
mov
scas
mov
lds
mov
jnp
push
mov
out
sub
movsb
mov
pop
mov
pop
push
cmp
pop
out
fimuls
lret
push
jg
sbb
hlt
outsl
es
aas
out
cmp
enter
insl
out
mov
push
and
sbb
fwait
mov
xchg
xchg
cmpl
movsl
push
mov
movsl
mov
or
xchg
repz
jae
jmp
fidivs
jmp
mov
enter
jle
mov
xchg
imulb
rol
add
subb
cld
and
add
xchg
loopne
adcb
fsubrl
aaa
push
jne
xchg
push
dec
sub
data16
and
xor
in
xor
xor
sbb
pop
mov
insl
cmp
imul
dec
inc
push
add
cmpsb
push
pop
js
insb
movsb
push
lods
popf
add
jmp
test
sub
scas
insl
ret
pop
add
pop
popa
push
jns
clc
pop
in
mov
sub
stc
mov
orb
rolb
pop
test
out
test
push
repnz
xor
sbb
jg
or
popa
lock
loop
dec
int3
imul
jns
jmp
push
inc
lods
add
mulb
fisubrl
mov
ret
test
insl
sub
test
adc
mov
pop
fnstsw
aam
jmp
cltd
dec
stc
pop
xchg
or
daa
mov
pop
adc
je
pcmpgtw
sub
jo
and
bound
repz
nop
fldln2
add
arpl
stos
pop
std
xor
insl
ss
call
mov
das
rorl
mov
mov
les
repnz
es
and
add
xchg
xchg
into
sub
fmul
inc
lds
loop
sbb
fnsave
mov
xor
mov
out
stos
dec
pop
insb
cwtl
sbb
cltd
push
push
lods
rcll
fdivs
jle
cmp
push
mov
ja
jnp
dec
jne
fsub
cld
out
mov
xchg
jmp
jne
jns
sub
xorl
imul
sti
cmp
out
or
test
and
xchg
mov
imul
xor
pop
push
popa
push
dec
or
or
lret
or
and
stos
fsubr
cmp
clc
cmp
xchg
neg
cltd
and
hlt
adc
lds
pop
out
call
repnz
rclb
sbbl
lock
mov
jmp
call
jmp
jg
push
sbb
and
mov
and
xchg
xor
fdivp
pop
cmpsl
pop
and
ror
sub
jle
sub
adc
das
xchg
pop
sbb
mov
call
mov
mov
loopne
push
push
dec
inc
and
clc
push
hlt
in
pusha
cmp
ljmp
adc
imul
ss
popf
fmuls
pusha
cmp
movsl
in
pop
sub
sbb
pop
xchg
jno
rcrb
inc
outsl
frstor
fistpll
divb
inc
outsb
stos
sbb
mulb
mov
xor
test
mov
fsts
daa
mov
in
push
nop
xor
and
mov
imull
xchg
pop
out
xchg
cld
ds
out
out
das
dec
add
and
xchg
ja
and
sbb
nop
jne
adc
call
push
cmp
insl
and
scas
push
cltd
les
adc
mov
stc
loop
nop
adc
dec
hlt
sub
add
in
iret
ficoms
or
popa
std
wbinvd
fcomps
mov
pushf
cmp
popf
mov
popf
xor
xor
cwtl
sbb
cmp
cwtl
cmpsb
or
repnz
hlt
mov
dec
mov
hlt
mov
mov
cwtl
inc
jl
jp
fdivl
fiaddl
das
or
ret
xchg
inc
icebp
inc
in
xchg
rep
nop
mov
jno
xchg
popa
pop
cmp
cld
lods
push
in
das
jns
lret
xor
out
repz
pusha
xorl
loope
mov
cli
aam
inc
pop
cmc
int
clc
in
ljmp
call
pop
dec
pop
das
add
inc
nop
testb
dec
pop
lahf
pusha
adc
stos
or
insl
sbb
in
repnz
inc
cmp
jae
or
jecxz
or
dec
mov
out
mov
or
jmp
cmpsl
or
fldenv
push
test
mov
scas
jge
dec
fabs
push
dec
sub
pusha
fmulp
sub
dec
enter
xchg
lock
cmp
jno
sbb
mov
jae
fdivl
pop
mov
inc
js
mov
mov
insl
xor
fiaddl
cli
xchg
rcrb
sarb
mull
out
mov
inc
jmp
sub
push
arpl
cmp
sahf
je
inc
inc
push
std
ror
jne
sahf
lcall
fdivr
jg
jecxz
iret
jno
test
dec
cmp
test
fs
inc
les
ljmp
orl
dec
dec
mov
inc
pop
dec
add
call
ror
jl
jecxz
cmp
xor
pop
arpl
mov
xor
jb
xchg
movsb
and
testl
pop
imulb
inc
jnp
call
dec
sub
jbe
or
je
pop
xchg
or
xlat
adc
mov
dec
adc
pop
sahf
ss
lcall
mov
sbb
jmp
and
icebp
fdivl
pop
cmp
dec
lcall
mov
dec
pop
add
lahf
test
out
inc
adcb
orl
les
roll
xchg
clc
repz
sub
enter
int
push
cmp
xor
jno
push
cltd
mov
mov
mov
pop
call
or
push
shrl
pop
call
pop
dec
xchg
test
lret
sub
mov
mov
pop
bound
fistps
inc
lret
leave
sub
add
jge
jo
add
movsb
leave
mov
dec
leave
cmp
inc
dec
dec
test
pop
int3
and
xor
into
jmp
loopne
test
popa
in
inc
shll
scas
and
rolb
push
fwait
mov
mov
push
cmp
out
inc
cs
insb
mov
andb
insb
mov
pop
std
jns
lods
xor
rolb
loope
int3
pop
popa
xchg
mov
pop
or
sbb
imul
xchg
fcomip
shlb
loope
or
test
pop
insl
pop
push
loop
fsubrp
cmpsl
mov
or
ljmp
jmp
aas
sbb
add
popa
dec
dec
out
xor
lret
pop
or
push
cltd
ljmp
mov
andl
sti
fsubp
mov
pop
mov
aas
adc
mov
xchg
jno
scas
add
cmp
jge
es
jl
stc
dec
cmpsb
xor
and
push
outsl
pop
lret
adc
test
sub
lcall
cwtl
add
aaa
gs
push
mov
outsb
push
aad
mov
ret
cmp
nop
push
push
pop
adc
sbb
mov
movsl
push
loopne
fwait
icebp
cmp
inc
and
mov
and
xchg
aam
add
neg
fwait
leave
mov
add
add
dec
and
push
dec
cmp
adc
sub
and
push
fidivrs
add
push
pop
mov
insb
lcall
ss
imul
jmp
inc
push
mov
loop
mov
ds
shrl
in
jno
inc
inc
aaa
pop
rcll
fsubrl
push
mov
sub
fwait
mov
jae
sbb
pop
pop
cmp
mov
push
jmp
mov
pusha
fbld
xor
iret
xchg
dec
jle
xor
andl
mov
out
out
addr16
xor
mov
shll
fs
sbb
lret
adc
mov
pop
mov
xor
in
insl
dec
mov
inc
push
enter
adc
dec
jp
repz
pop
mov
out
addr16
dec
dec
call
and
lea
push
xchg
lds
sbb
out
push
repz
mov
pop
inc
xchg
movntps
test
mov
sbb
xor
inc
mov
push
or
inc
stos
mov
xor
jae
inc
out
mov
and
mov
int
adc
divps
xchg
sahf
mov
xlat
aam
mov
pushf
es
adc
fdivp
sahf
ljmp
pop
mov
fimull
and
loop
and
cmp
cmp
jns
jmp
call
xchg
jp
sub
icebp
scas
out
inc
or
shll
cmpsb
cmp
icebp
std
or
push
in
mov
cli
pusha
mov
or
lret
test
popf
pop
movsl
mov
mov
adc
cmp
leave
cwtl
in
std
rclb
scas
fsubrs
cs
in
fidivl
sbb
pop
dec
jecxz
sbb
mov
and
pop
sbb
in
mov
push
or
iret
les
ljmp
es
bound
jl
cmpsl
scas
pop
xchg
dec
shrb
push
jns
or
xor
mov
std
xchg
push
lret
sub
lock
sbb
aam
popf
mov
xor
lret
insb
mov
cmp
test
xor
inc
nop
repz
cmp
aas
lods
scas
pop
mov
jl
pop
add
cmpsb
xchg
sub
movb
fcom
test
add
fucomi
mov
push
sti
push
xor
nop
push
stos
aaa
test
mov
xlat
xor
test
mov
outsb
imul
lods
mov
inc
les
aam
mulb
sub
mov
outsb
cmp
jns
bound
cmc
sub
mov
lock
pop
incb
out
xor
jg
xchg
mov
out
add
aad
lods
cmc
bound
inc
int
push
jne
sub
jno
pop
clc
or
ja
push
pop
dec
int3
rclb
xor
jg
push
sub
inc
jo
push
xchg
xchg
xchg
sbb
jmp
jl
cmp
popf
ljmp
xor
lea
ja
sbb
sbb
mov
push
jp
pop
into
cltd
push
mov
pop
scas
inc
jne
scas
push
inc
mull
cmp
jmp
add
mov
addr16
lock
mov
fs
repz
pop
dec
icebp
push
subb
inc
mov
call
test
push
and
adcb
pop
pop
ss
mov
mov
insb
out
xor
jl
jg
xor
fdivrs
fstl
pop
mov
mov
ficoml
add
ds
inc
inc
xchg
fsubs
frstor
rcll
scas
rcr
out
push
aam
sbb
lea
emms
mov
aaa
xchg
jbe
mov
sar
xor
xor
push
jbe
rcl
in
push
mov
test
test
repnz
shll
xchg
ja,pn
pop
test
mov
jge
mov
or
inc
movb
in
loope
jp
loopne
fnstcw
add
adc
dec
mov
sbbl
mov
mov
inc
xor
inc
loope
popa
jl
xchg
aaa
xchg
adc
xor
mov
mov
fcmovnbe
je
icebp
ficoms
lods
fimull
jb
les
mov
stc
adc
sub
xor
and
mov
jo
leave
pop
mov
imul
lds
je
push
jmp
jmp
repz
mov
xchg
push
xchg
out
mov
adc
ss
fidivrs
and
mov
pop
sub
mov
imul
mov
pop
cmpsb
and
imul
pop
movsl
mov
aaa
in
add
shl
or
sbb
jno
cmp
ds
jbe
das
mov
or
subb
and
mov
subb
adc
cmp
mov
jns
add
adc
imul
inc
pushf
jmp
mov
fsts
loop
push
into
out
pop
pop
and
ret
cli
scas
ss
daa
inc
fstpl
vpavgw
out
cltd
push
or
jb
mov
sbb
mov
add
fsubl
dec
js
and
in
jns
adc
pop
hlt
int3
lret
pop
sub
repz
push
sbb
imul
cwtl
inc
movsl
fldl
add
aad
fnstcw
fbld
push
cmc
jno
cli
addr16
push
xchg
cmpsl
mov
pop
daa
adc
pop
xlat
xor
dec
lea
mov
arpl
cmp
mov
cmp
push
push
jge
dec
aam
mov
or
lahf
cli
xor
jge
ret
sbb
add
rol
push
xor
pushf
mov
mov
sub
arpl
push
repnz
sub
xor
lods
push
nop
mov
adc
push
jp
cmp
mov
push
xchg
sahf
cmc
push
inc
out
dec
in
pop
dec
pop
jns
inc
sub
cmp
or
ret
shll
data16
sbb
pop
loop
rclb
jmp
mov
test
pop
jecxz
rcr
xchg
cld
sarb
into
sbb
adc
push
mov
lock
loope
movb
sti
cmp
or
bound
push
cmpsl
or
adc
add
dec
pop
inc
test
aaa
sub
jmp
inc
adc
aam
sbb
mov
icebp
jge
outsl
mov
gs
rclb
loopne
sbb
add
sbb
sbb
outsb
cmp
dec
add
xchg
jnp
pop
sub
lret
inc
loope
mov
inc
test
fisubs
mov
sar
mov
add
inc
push
or
stos
aaa
mov
cltd
and
dec
fwait
xorl
arpl
fnstsw
push
jnp
inc
es
mov
fcoml
hlt
add
lea
and
pop
xchg
lret
insl
xchg
sub
loope
mov
fs
xchg
lret
and
out
xor
and
popa
ret
lahf
inc
js
pop
das
and
jle
jp
xor
jns
and
je
mov
mov
aaa
mov
xor
mov
scas
mov
cmp
mov
fs
pop
add
inc
and
pop
lods
popf
and
shl
cmpsb
std
adc
dec
ja
out
fcomi
mov
outsb
div
add
and
lock
inc
jns
pushf
or
inc
cmp
sub
scas
fsub
xchg
inc
mov
jbe
rcrb
fldt
in
jns
orb
dec
adc
nop
sbb
sbb
cmp
push
push
aad
mov
mov
in
cwtl
aaa
xor
jne
xchg
mov
aas
xlat
push
pop
je
jp
icebp
test
imull
addl
out
pop
mov
leave
cs
xchg
adc
push
adc
jne
scas
inc
loop
dec
outsl
mov
sub
dec
aam
push
pop
test
lea
xchg
lcall
jmp
dec
jne
iret
pop
dec
daa
sub
pusha
fsubs
ja
fisttpll
xor
jg
xchg
or
shl
scas
inc
into
movsl
fbld
pop
nop
adc
movsl
mov
aad
xlat
gs
xor
repnz
pop
aam
out
inc
xchg
jle
dec
push
shr
icebp
jle
push
xchg
push
out
cmp
bound
insb
xchg
test
out
test
shll
decb
arpl
ret
mov
jns
push
jnp
lcall
xchg
pusha
or
inc
sub
add
lods
sbbl
out
sbb
daa
loopne
movsl
mov
stc
and
push
daa
adc
jbe
add
and
and
popa
test
repz
push
sub
inc
push
add
xor
lahf
lock
in
lret
dec
mov
push
in
jg
cmp
xor
cmp
addr16
pop
jmp
sbb
and
and
ljmp
cmpl
fisubrl
fdivrp
jne
mov
out
mov
dec
imul
int3
mov
sbb
rclb
sbb
mov
ficomps
sbb
and
sbb
mov
xor
es
popa
xchg
shr
cld
pop
and
repz
pop
xchg
iret
sbb
ret
pop
dec
in
xlat
jge
mov
int
in
test
cltd
jmp
jnp
sub
ror
mov
fucom
xchg
lock
cmp
les
pop
mov
iret
dec
rcl
je
push
je
push
sbb
addb
mov
dec
xorl
xchg
cmpsl
fiadds
adc
pop
cmc
out
and
test
or
push
mov
pop
inc
xor
ret
sbb
insl
mov
nop
jle
je
mov
adcb
inc
fisttps
mov
push
cmp
jbe
push
js
pop
mov
xchg
lds
aaa
sbb
les
lock
dec
lret
push
mov
mov
out
dec
testl
aas
xor
and
insl
rolb
jnp
inc
lea
lahf
stc
jns
mov
nop
inc
sub
push
idivl
mov
mov
test
pop
and
sbb
mov
and
sbb
inc
pop
and
fcomp
loope
pusha
decb
sarl
xchg
xchg
lahf
and
jo
inc
and
daa
sbb
adc
sbbl
sub
cli
jmp
jecxz
push
fldt
mov
icebp
movsb
clc
lret
mov
cmp
cld
xchg
outsl
cmpl
dec
fs
adc
xor
and
mov
out
mov
or
mov
pop
xchg
insl
lret
dec
mov
push
scas
adc
xor
mov
test
mov
mov
dec
or
mov
cmp
mov
mov
and
mov
push
inc
and
call
jmp
icebp
lahf
and
cli
mov
mov
addb
dec
nop
ret
sbb
sbb
inc
push
insb
ss
je
sbb
fiaddl
aas
mov
adc
push
add
stc
push
outsl
mov
repnz
and
dec
in
stc
pop
and
inc
arpl
in
mov
scas
sub
fs
inc
aas
dec
or
cmp
icebp
xor
fwait
jb
cmp
push
sbb
xor
xlat
mov
jb
sub
inc
call
gs
mov
lea
ret
rcrl
popa
and
ja
int3
in
cmp
scas
xor
or
or
xchg
sbb
lea
xlat
sti
and
call
in
pop
fdivl
cld
rcr
jmp
aas
loopne
mov
repnz
push
enter
jnp
pop
mov
push
push
inc
fwait
xchg
fmull
xor
fs
push
cmp
mov
lret
cmp
sub
push
into
jno
lret
mov
sub
loopne
insb
aaa
mov
xchg
xor
pop
movsb
xchg
and
popa
mov
push
daa
sub
mov
pop
or
fidivrl
sbb
es
hlt
in
fldl
xor
push
mov
dec
add
adc
xor
jecxz
les
add
fs
pop
mov
sub
push
repnz
shr
push
mov
stos
cmp
mov
xlat
aad
jg
sbb
loop
cmp
pusha
mov
push
movsb
int3
xor
push
and
xor
call
mov
scas
popf
mov
add
cltd
pop
aas
cs
push
outsl
sarb
jns
xlat
loop
sub
repnz
xorl
enter
fcomps
fnstenv
imul
cltd
xor
rclb
cltd
pop
mov
inc
add
pop
daa
and
ret
jb
and
pop
aad
ljmp
pop
je
fs
pop
pop
int3
xchg
sub
mov
inc
fnstcw
xor
push
pop
testl
bound
jle
lret
fimuls
negb
jns
mov
or
scas
popf
fstp
ds
add
mov
xchg
shrl
sti
jl
stos
mov
fidivrs
scas
cmp
push
in
pop
test
push
xchg
clc
xor
mov
pop
andb
mov
out
jnp
or
addb
cwtl
xchg
lahf
cmp
pop
sbb
inc
jnp
pushl
sub
cs
add
out
cmpsl
inc
nop
lea
inc
cmpb
scas
stos
loope
sbb
mov
les
xchg
mov
pusha
inc
loopne
inc
and
mov
sahf
push
aaa
orb
inc
push
sub
jae
dec
clc
add
out
cmpsb
fs
fisubl
mov
pop
jg
cwtl
cmpl
jne
jae
fs
cs
testb
out
sub
aam
jnp
cld
add
and
jae
adc
test
enter
rclb
movsb
insb
out
xor
test
sub
out
adc
mov
int
and
in
inc
mov
push
cltd
cmp
pop
aaa
addr16
es
jle
cwtl
clc
dec
adc
repz
pusha
dec
lcall
ljmp
jno
jae
add
push
push
lret
pop
mov
lods
sub
fcmovbe
out
and
sti
pop
out
cmp
ja
sbb
rcl
rclb
mov
pop
mov
div
int3
xlat
scas
fsts
cs
and
jge
out
ficomps
lret
cmpsl
inc
xchg
push
xchg
push
or
cmp
daa
cmp
mov
into
sub
mov
inc
inc
insl
test
push
or
xor
adc
or
cltd
mov
ret
fimull
iret
nop
pop
xchg
fstpt
dec
out
pusha
xor
dec
cmp
ret
les
xchg
in
cmp
push
test
std
dec
mov
and
iret
mov
mov
or
add
jnp
xor
in
loope
shrb
out
frstor
xor
lret
adc
cltd
sahf
xchg
bound
xor
shl
mov
repz
loope
lea
dec
div
shll
and
inc
mov
dec
andl
jecxz
loopne
rcrb
jb
inc
les
xchg
repnz
inc
inc
pop
repnz
adc
mov
mov
out
inc
mov
icebp
add
ja
xor
dec
mov
push
push
sub
or
mov
ret
mov
es
aam
add
aas
jg
stos
mov
or
mov
clc
lea
jbe
mov
lcall
pop
lahf
push
pusha
and
push
mov
jns
int3
shrb
jmp
test
outsl
mov
mov
outsb
aam
and
test
sti
dec
pop
test
int
add
arpl
mov
xorl
push
pop
es
jae
cmp
push
mov
repz
jmp
xchg
gs
sahf
sbb
mov
pushf
push
dec
inc
push
cli
aad
and
lret
or
jle
test
push
or
loop
out
out
mov
iret
xchg
and
mov
aas
inc
xlat
sbb
sub
outsb
pushf
add
ret
sbb
in
inc
pop
and
call
movb
sbb
push
lods
je
fisubrs
xor
imul
push
add
or
inc
sbb
into
jp
outsb
and
sbb
or
rcrl
aad
jg
inc
cs
mov
add
fcmovnbe
outsl
leave
inc
mov
mov
pop
push
xorl
int3
pop
scas
inc
xchg
add
cmpsl
mov
roll
add
sarb
aas
clc
xorb
scas
pop
ret
cmpsl
addl
dec
in
std
loope
bound
and
fwait
addr16
in
push
stos
dec
into
inc
inc
inc
insl
mov
lcall
jae
push
cli
push
inc
inc
inc
xlat
mov
add
inc
call
or
sti
int
sbb
add
fsubrl
and
pop
jbe
sub
shll
ret
push
xor
cmpsb
jge
repz
xor
mov
push
jmp
ss
rcrl
aaa
test
fists
push
loope
xlat
dec
sarb
xchg
testb
push
xchg
out
into
or
pop
pop
in
xchg
add
addr16
test
or
pop
pop
xor
scas
bound
sub
or
ret
dec
jle
inc
cld
nop
adc
movsb
js
lret
xchg
mov
mov
insl
test
pop
push
out
mov
pop
mov
cltd
sbb
loope
add
fiadds
or
aas
xor
push
mov
pusha
lret
lcall
sbb
lret
out
sti
pop
or
mov
lahf
loop
xor
shrl
scas
adcl
imul
int
and
mov
sbb
inc
arpl
cs
fxch
std
cmp
ret
push
inc
sub
stc
test
push
pop
ja
mov
xchg
or
aaa
mov
mov
mov
mov
icebp
sahf
insb
push
addr16
fdivr
out
aad
fsts
clc
js
or
push
and
loop
cld
lods
cwtl
pop
inc
xlat
xchg
push
pop
mov
flds
int3
adc
jmp
mov
leave
pusha
cwtl
les
adc
scas
mov
push
or
dec
out
gs
cld
cmp
inc
roll
mov
aaa
pusha
and
pop
pop
out
cltd
xchg
loope
mov
sub
mov
lret
cld
movsb
daa
repz
fsub
mov
cltd
outsl
mov
pushf
mov
ret
sbb
mov
addr16
sbb
ret
orb
insb
push
test
push
arpl
xor
movsl
cmp
mov
push
subl
test
mov
lods
out
fs
aaa
arpl
adc
dec
or
outsl
inc
out
test
mov
shl
push
inc
test
add
sbb
lock
push
mov
stc
in
xor
out
push
xor
sbb
pusha
lcall
or
mov
inc
mov
mov
or
xchg
icebp
out
push
or
sub
imul
scas
adc
pop
lods
lds
add
cs
cmp
mov
sbb
shrb
sub
push
jns
mov
dec
pop
jp
mov
push
clc
cmp
testl
inc
mov
mov
dec
test
int
rcll
mov
push
sbb
stc
push
jo
cmp
adc
hlt
cwtl
cmpsb
pop
push
and
or
cmp
push
imul
insb
push
mov
xchg
fisubs
je
xchg
mov
sbb
or
xchg
cmp
aam
aam
push
cld
and
sti
cmp
loopne
mov
int3
cld
sub
dec
gs
ret
jp
xchg
lds
shrl
pop
dec
orb
loop
mov
xchg
add
out
fs
cltd
sbb
or
lods
cs
pop
pusha
xor
pop
lahf
dec
pop
xor
cmp
std
mov
mov
mov
and
mov
inc
xchg
pop
mov
insl
xor
and
mov
stos
and
adc
cli
daa
add
in
pop
shl
ficompl
sbb
addr16
or
inc
sub
jo
fildl
and
pop
xchg
call
mov
ja
xor
pushl
jge
push
movsl
repz
xchg
roll
lcall
inc
or
cs
fists
pop
pusha
fucomi
push
lds
pop
xchg
rcrb
dec
pop
out
rcrb
fsubrp
outsl
jbe
xchg
xor
out
or
jno
push
daa
cltd
ucomiss
loope
jnp
mov
xchg
les
or
dec
lcall
sub
dec
mov
sbb
inc
jg
inc
cmp
or
inc
loope
add
dec
pop
inc
jae
aaa
pop
test
or
mov
dec
inc
sub
stos
xchg
sahf
insl
dec
cli
mov
arpl
ficoml
mov
and
cmp
sub
popf
out
js
dec
pop
std
mov
cmp
mov
sub
xchg
gs
add
push
lods
cmp
popl
jmp
sbbb
jnp
pop
orl
outsb
add
mov
mov
mov
aaa
nop
ds
cmpsb
pop
push
sbb
addr16
mov
mov
push
jecxz
ret
add
lock
fstpl
fincstp
xchg
call
mov
addb
mov
stos
and
jnp
add
jmp
push
mov
sbb
pop
imulb
cli
mov
push
mov
jne
adc
dec
adc
fsubrp
xchg
mov
leave
fmuls
add
or
push
les
mov
in
cmpsl
gs
jb
std
shl
lret
popf
insb
in
jg
rorb
stos
jmp
cmp
push
jno
test
movsl
mov
adc
in
orl
add
adc
fadd
cmp
add
push
xchg
mov
jne
mov
jo
jo
jecxz
inc
cmp
mov
mov
pop
data16
push
pop
jge
test
aam
jae
aam
jb
ret
inc
adc
test
push
ja
ss
mov
dec
stc
lret
xor
clc
popa
addb
addr16
adc
out
cmpb
xchg
stos
and
xchg
jns
adc
leave
and
pop
push
sti
push
mov
aas
add
xor
push
out
inc
roll
xchg
mov
add
pop
sub
lds
or
pusha
xor
sub
inc
ret
xor
cmc
jne
lret
xchg
push
or
mov
push
insb
cmp
jecxz
aad
push
pop
sbb
xchg
pop
adc
jne
jp
xlat
dec
data16
xchg
push
mov
pusha
iret
jg
cltd
adc
mov
lret
sbb
and
push
rclb
leave
and
and
divl
mov
icebp
mov
idivl
xchg
rcr
jns
ljmp
mov
fsubs
mov
dec
xchg
lods
dec
pusha
fstpl
negb
mov
je
pop
pop
xorl
pop
int
cmpsb
sbb
cmp
cld
xor
fnstcw
out
mov
jns
mov
jnp
std
mov
jmp
lret
imul
xlat
xchg
xchg
cmpsb
outsb
aas
jmp
popa
push
jg
xor
mov
repz
das
ja
cmpsl
mov
call
in
or
cmpsb
dec
sbb
cmc
dec
xchg
push
add
ret
in
jmp
sti
mov
daa
and
shrl
fcmove
mov
mov
jge
rcrb
or
repnz
pusha
test
sub
cs
sbb
sahf
inc
test
jae
xor
add
jnp
enter
adc
pushf
inc
sbb
xchg
in
test
inc
and
xchg
icebp
xorb
pushf
inc
mov
and
lods
pop
adc
arpl
dec
fsubrp
push
cmp
cmp
stos
testb
jae
mov
notl
in
shrl
pushf
push
push
xor
cmpb
insb
fisttps
dec
lahf
jns
add
rcr
jge
and
xor
jo
lods
jecxz
repz
iret
loope
das
add
stos
add
arpl
scas
dec
push
loop
mov
rorl
mov
lgs
mov
xor
pop
stos
jno
pop
mov
sbb
add
fimull
in
fistps
inc
xchg
mov
dec
mov
sub
shll
mov
push
outsb
pop
adc
ficompl
jecxz
lcall
mov
das
and
cmp
insb
das
cltd
out
shlb
cmpsb
push
mov
adc
fwait
pop
shrl
outsl
push
sbb
mov
fbstp
pop
bound
dec
bound
andl
movsl
insl
stos
fsub
cmc
sub
jae
xchg
arpl
cmp
pushf
clc
mov
sbb
decb
scas
cmp
pop
xor
rol
add
frstor
or
push
shrb
cmp
int3
xchg
stos
sbb
xor
adc
sub
les
cmp
xlat
and
imul
jg
pop
sub
dec
or
mov
or
loop
mov
sub
add
pushf
and
cwtl
mov
test
cmpb
xor
add
test
pop
clc
xlat
fsubs
adc
imul
or
adc
sub
ret
pop
icebp
mov
cmp
jne
and
inc
fists
pop
std
or
fldl
lock
cld
cmpsb
mov
lret
out
pop
push
in
repz
add
les
or
std
inc
jbe
pop
pusha
dec
dec
xchg
pop
jp
and
in
push
out
in
pop
adc
inc
cs
dec
mov
pop
mov
lcall
testb
mov
gs
mov
lds
addr16
and
decl
xchg
push
ljmp
test
mov
sarl
stos
jg
sar
stos
into
ljmp
loopne
pop
xchg
pushf
cltd
fcmovnb
ss
fcoml
dec
mov
push
mov
sbb
out
mov
out
scas
das
jge
outsl
fstpl
mov
lock
mov
negb
cmp
insl
dec
cmp
iret
jecxz
sbb
scas
push
mov
xchg
ja
out
push
inc
shlb
rorl
pop
and
insb
xchg
fidivs
xchg
add
or
ret
rcrb
and
mov
repz
cmp
cmp
pop
jecxz
xor
xchg
dec
push
xchg
outsb
lods
int
or
mov
testb
mov
pushf
mov
jae
cmp
xchg
jp
mov
xchg
and
or
inc
jecxz
test
add
inc
push
data16
push
fmuls
dec
or
int
sbb
fbstp
mov
ss
rcll
push
adc
int3
pop
fistpl
pop
add
into
cmp
sub
shr
std
dec
fstl
mov
or
cli
and
push
cltd
push
mov
pop
mov
pop
cs
int
pop
sub
xchg
and
mov
sub
dec
shrb
xor
push
testb
ss
sti
rclb
mov
or
inc
dec
fisubrl
sub
fisttpl
jnp,pn
ret
in
push
addb
jmp
jo
xor
sub
stos
pushf
pop
sub
outsb
in
cs
xchg
arpl
xchg
in
mov
add
add
dec
xor
movntq
cmc
lcall
rolb
hlt
xor
arpl
pop
jbe
mov
js
loop
orl
dec
jne
adc
loop
mov
lock
and
adc
repz
mov
ficoml
movsb
inc
adc
stos
data16
jp
jmp
xchg
jecxz
popl
adcl
pop
add
mov
incb
rorb
popf
or
pop
imul
ds
and
aas
sub
cld
imul
arpl
out
mov
fisttps
out
mov
outsl
jns
mov
or
dec
clc
lret
push
enter
ja
mov
dec
mov
mov
mov
nop
mov
in
mov
fldcw
pop
mov
and
xor
lret
jmp
clc
mov
cmp
or
or
cmp
fdiv
clc
sbb
int
push
inc
inc
pop
cwtl
fcomp
out
jmp
pop
repnz
rolb
pop
dec
dec
int
aaa
dec
pop
test
imul
xchg
cmp
mov
aad
inc
jno
fs
daa
cmp
mov
icebp
mov
fidivl
push
es
popa
inc
adc
sub
movb
mov
imul
inc
lods
addr16
icebp
xor
sub
imul
fcompl
scas
sbb
push
pushf
or
ds
mov
sti
lds
fisttpl
xor
scas
mov
xchg
inc
xchg
adc
ret
inc
out
cwtl
and
imul
sbb
add
jae
fcmovnu
rol
stos
and
shlb
out
or
dec
sbb
bound
add
mov
scas
mov
test
cmp
jns
pop
das
push
call
jns
fistpll
ss
inc
repz
inc
or
and
aas
fimuls
pop
sub
push
or
add
cmp
in
rorl
mov
lahf
insb
cwtl
add
insl
push
in
xchg
push
sub
jo
adc
ds
fwait
rol
cmp
pop
or
mov
std
adc
jbe
mov
mov
mov
pop
jge
lret
es
pop
cmp
imul
mov
in
loop
jle
or
sbb
xchg
and
scas
mov
mov
fdiv
pop
fmuls
lods
les
pop
sub
int
insb
or
mov
popa
xchg
addr16
stos
fwait
cs
jge
je
add
lahf
pop
popf
into
aaa
jnp
mov
cmp
mov
imul
je
pop
es
imul
xchg
enter
bound
pop
insb
sub
dec
jle
xchg
fistpll
dec
jbe
cmp
add
ret
push
stc
dec
push
lods
mov
jge
loopne
adcl
xchg
push
imul
aam
fmuls
pop
frstor
int3
in
mov
cmp
pusha
mov
ja
out
shlb
addr16
insl
mov
push
dec
fistpl
movsb
lds
fbld
int3
mov
jecxz
inc
or
outsl
and
sub
lahf
sub
in
loopne
std
and
and
scas
cmc
test
movsl
ret
mov
mov
push
sub
jg
adc
sub
lret
seto
cli
repnz
lret
insb
repz
mov
jnp
mov
inc
xchg
mov
aaa
lods
pop
sbb
xor
mov
or
div
cmovg
adc
rcrl
sub
sub
sub
xchg
fmuls
cmpsb
jo
mov
call
jmp
xlat
and
ja
add
ljmp
inc
mov
stos
mov
dec
mov
push
dec
inc
enter
sbb
add
jp
sbb
push
push
mov
pop
inc
test
outsl
mov
pop
addb
cmp
cltd
adc
mov
push
jl
in
xor
jl
jl
xor
or
ljmp
in
stos
mov
inc
inc
fimuls
sbb
xlat
cmpsb
xchg
ds
sbb
push
dec
sbb
mov
addr16
xchg
into
xchg
add
pop
push
sbb
jb
mov
loope
and
or
flds
aaa
or
js
xlat
nop
adc
sub
sbb
cmpsl
or
jge
jne
xor
or
imul
jge
push
jecxz
sub
rcll
xchg
sbb
sub
outsl
sbb
ljmp
and
rorl
adc
gs
sarl
test
pusha
lea
test
fucomi
inc
mov
fadds
ja
sub
out
adc
cwtl
test
mov
cmp
js
roll
or
sbb
data16
add
mov
or
jp
test
sbb
mov
inc
pop
leave
dec
fistpll
fnsave
jbe
jl
je
push
add
lret
cmp
push
fs
enter
mov
cwtl
rorb
in
add
dec
cmc
popl
push
xor
insl
lea
add
aaa
pop
xchg
decl
pop
pop
je
std
sti
jno
ja
rorb
add
adc
sahf
cld
jp
ret
jp
push
loop
jns
xchg
xor
stos
sahf
fs
loop
fdivr
push
mov
xchg
out
pop
cmp
dec
popa
mov
out
inc
sub
fmulp
daa
xor
nop
inc
push
cmp
xchg
das
mov
imul
popa
jmp
mov
in
or
jp
sub
in
mov
dec
mov
cwtl
cmc
mov
jge
je
cwtl
sbb
movb
fs
sahf
sub
ss
int3
sbb
outsb
popl
test
jg
rorb
mov
lock
mov
mov
sub
add
xchg
or
popf
jb
das
sbb
xchg
mov
xchg
jl
push
or
push
loop
cmp
stos
inc
sbb
subl
push
pop
aaa
sub
insb
mov
inc
addr16
mov
mov
mov
lret
iret
cli
mov
push
imul
inc
push
imul
stos
pop
lahf
and
push
cwtl
mov
push
or
adc
push
xor
test
in
jecxz
mov
mov
mov
jno
jne
sub
hlt
insb
and
mov
mov
cmc
test
pop
or
inc
cld
dec
push
lcall
test
jmp
dec
xor
cmpb
aas
lea
imul
and
cli
inc
mov
inc
and
test
cmp
fildll
bound
sahf
cmp
repz
in
jl
sbb
lea
adc
fdiv
ja
in
mov
test
in
std
shll
sbb
cltd
sbbl
sti
xlat
push
sahf
rorl
ljmp
loopne
cld
in
adc
add
pop
stos
pop
imulb
mul
push
sbb
dec
iret
jne
addb
sub
jae
loop
dec
inc
sub
xchg
xchg
jns
inc
add
sbb
addr16
mov
shll
iret
mov
and
cld
and
pop
or
scas
scas
mov
dec
fisubl
mov
aaa
or
sbb
add
jae
sbb
dec
pop
cmp
mov
repnz
and
dec
mov
cltd
in
mov
inc
jmp
inc
imul
adc
xor
clc
jp
and
push
jo
push
ror
or
fwait
lock
cmp
cs
cmp
jne
sbb
lret
cld
sbb
xchg
cld
pop
in
aaa
fbld
outsb
and
insb
cmp
out
in
test
cmp
dec
xor
adc
dec
inc
add
bnd
inc
mov
mov
out
push
adc
pop
sub
popa
push
ret
inc
or
arpl
repz
scas
in
mov
inc
jge
and
adc
movsb
dec
jecxz
sahf
loop
jg
dec
push
mov
push
xor
inc
in
cmp
mov
cmpsl
aam
shr
add
fisubs
jno
shlb
mov
inc
pop
xchg
xor
jb
xor
mov
into
cmp
adc
cmp
pop
xchg
xchg
sbb
insl
mov
out
into
iret
mov
cmpsl
xchg
js
add
mov
push
icebp
incl
mov
or
out
push
jbe
mov
cmpsl
in
pop
les
pop
iret
add
mov
leave
xchg
sar
dec
outsb
or
cmpsl
mov
es
out
imul
leave
aas
cmpsl
mov
pop
jg
cmc
inc
repz
push
std
xchg
movsb
popa
cmp
xchg
mov
mov
jp
sbb
cli
jg
rcr
ljmp
pop
sti
sbb
or
lahf
nop
adc
lods
xor
dec
pushf
loop
dec
into
les
imul
push
gs
adcb
mov
lret
scas
pop
in
hlt
cli
mov
mov
mov
xor
loopne
xchg
mov
cmp
mov
or
add
pop
ficompl
movsb
jl
inc
cmp
mov
shrl
push
sub
outsl
sbb
adc
sbbb
sti
mov
mov
pop
lea
out
pushf
pop
pop
jg
mov
jecxz
push
popf
setae
addb
sub
imul
mov
mov
pop
or
enter
sub
sbb
outsl
add
les
insl
push
pop
lods
es
test
scas
jnp
rclb
mov
jp
rcl
mov
cld
mov
testb
jle
ret
loope
fcompl
sbb
int3
pop
mov
jns
dec
int3
mov
lret
ljmp
or
mov
outsl
mov
mov
dec
xor
mov
cmp
sti
loop
mov
es
xor
stos
test
pop
insl
xlat
fs
mov
sub
mov
sub
std
flds
and
dec
push
and
xor
outsw
stos
xlat
pop
pop
aas
mov
jae
jmp
add
out
lret
jecxz
xchg
ljmp
sarb
dec
test
cld
inc
orb
test
add
scas
push
iret
xor
cmc
rolb
mov
adc
popa
fnstcw
pop
push
fdiv
aas
sbb
adc
ja
test
sbb
sbb
pop
adc
inc
mov
dec
notl
rcrb
mov
aaa
in
xchg
jne
faddl
sbb
push
fildl
test
mov
jbe
jbe
mov
in
push
dec
fs
test
jns
imul
jge
cmpsl
inc
dec
jns
mov
or
pop
test
pop
out
mov
mov
mov
je
testl
daa
or
lahf
mov
xor
push
inc
inc
aaa
push
les
xchg
enter
dec
in
inc
cmp
lock
xor
sub
in
and
pusha
out
xchg
mov
xor
and
add
aaa
add
sbb
clc
out
pop
jg
movsl
jmp
test
pusha
mov
cli
xchg
mov
push
loope
inc
pop
jmp
sbb
adc
lret
into
mov
inc
add
rol
cmp
and
out
or
outsb
pop
fstpl
fdivs
lret
pop
dec
dec
sti
push
rcrb
adc
loope
shrb
add
bound
sarb
data16
ja
cmp
out
js
rcrl
pop
in
and
lock
adc
outsb
scas
es
pushl
orl
dec
xor
int
push
call
ja
jg
stos
stc
cwtl
gs
xchg
stos
pop
dec
cld
add
jge
je
cmp
les
pop
jmp
lods
mov
scas
pop
test
push
adc
outsb
pop
or
and
in
add
sub
bound
push
mov
out
addl
insb
mov
sub
adc
sub
cmp
lock
pusha
sbb
lock
jns
cmp
jo
xlat
pop
loop
cmpsb
sub
xchg
mov
sbb
daa
std
cld
inc
in
loope
add
fsubrs
cs
loope
jge
loop
pop
cmp
sub
dec
out
jo
gs
pop
into
cmpb
ja
aad
bnd
dec
cmp
add
dec
hlt
cwtl
mov
cmp
outsl
jge
and
rcll
arpl
lea
pop
fbstp
mov
fistpl
jmp
popf
hlt
rorl
rol
icebp
cwtl
cmc
jnp
imul
gs
hlt
mov
cli
jp
xchg
sub
lock
mov
push
jmp
les
aam
and
xchg
pushf
jmp
jl
and
push
pop
icebp
jmp
icebp
xchg
cmpsb
stc
push
xlat
ror
subl
pop
mov
dec
jge
sbb
test
into
loope
or
and
mov
push
mov
stc
ss
xchg
add
adc
push
cli
push
sbbl
add
sarl
mov
lret
dec
hlt
pop
xor
and
imull
lret
mov
jbe
outsb
push
test
addr16
in
and
or
enter
add
fsts
add
sub
jp
ror
pop
push
cmpsl
es
xchg
add
pop
or
imulb
mov
dec
jge
sbb
add
mov
ret
fistl
xor
inc
loop
dec
xor
push
iret
sti
mov
lds
xor
pop
leave
push
jbe
sub
call
inc
jge
xchg
pusha
sbb
lahf
bnd
sub
jns
test
test
lret
ss
cld
test
pop
mov
gs
scas
test
aas
and
xchg
repnz
stc
jp
gs
mov
das
rolb
mov
push
xlat
xchg
insl
rolb
jmp
insb
add
jmp
in
lods
jbe
dec
repnz
fistpl
xor
in
testb
add
mov
lods
icebp
loopne
shll
cmc
fcomip
jmp
rcrb
stos
in
sub
adc
mov
sub
test
add
frstor
pop
sbb
jl
stos
pop
mov
sbb
inc
xchg
daa
fstps
std
and
inc
pushf
push
loopne
push
xchg
cmp
cs
cwtl
je
clc
mov
cld
fs
call
dec
xor
cmp
cmp
dec
lahf
sub
xchg
scas
aas
lea
pop
aad
mov
negl
add
out
notl
shl
in
adc
and
adc
mov
sbb
mov
cmp
cmpsl
add
das
inc
xlat
or
fdivs
push
je
das
pusha
lret
mov
mov
cmpsb
inc
add
mov
lret
xchg
mov
push
in
iret
or
or
out
sub
pop
mov
jg
fdivl
or
add
inc
call
add
adc
push
push
xor
pop
or
mov
push
dec
aam
push
jge
sti
mov
push
aam
mov
iret
mov
mov
out
mov
cmp
lret
xor
dec
sub
jg
dec
xor
fbld
adc
adc
push
iret
xor
cmp
dec
xor
or
xchg
push
mov
int3
inc
mov
sub
sbb
popa
mov
jnp
inc
cwtl
mov
ljmpw
inc
aam
sub
je
into
shlb
clc
push
xor
mov
adc
add
push
nop
push
ljmp
mov
add
aaa
in
dec
mov
daa
push
cli
jecxz
int3
sbb
mov
xor
cmpsl
repnz
sub
push
push
dec
out
or
jg
filds
and
loop
mov
cwtl
inc
cmp
bound
div
sbb
pop
int
sbb
dec
jbe
pop
rorb
in
jae
xchg
rorl
pop
xor
pop
fnstenv
xor
insb
push
gs
std
sub
xchg
loope
and
cmp
add
pop
pop
ret
stc
mov
lret
jo
mov
pop
pmullw
cmp
sub
imull
cld
pop
inc
mov
dec
jae
and
fists
rcll
leave
inc
loope
shlb
push
scas
mov
jge
push
xchg
pushf
daa
lahf
dec
int3
jecxz
loope
push
sar
sub
lock
rcr
sbb
cmp
add
xchg
push
add
push
lret
shlb
pop
fsubs
jno
pop
xor
xchg
jg
mov
and
push
das
fbstp
mov
jmp
movsl
test
jmp
cmp
je
adc
imul
repz
fsubs
mov
lret
adc
adc
pop
jbe
clc
cmp
sub
int
test
adc
xor
dec
test
inc
pop
push
fsubs
dec
std
gs
es
cmp
incb
xorb
xor
or
test
jmp
xchg
xor
mov
popf
hlt
out
push
push
mov
inc
adc
lcall
scas
movsb
sub
shlb
lea
mov
orb
pop
mov
insl
shrl
insl
jb
inc
jno
ds
in
repz
retw
psubsb
jbe
dec
cs
mov
sub
xor
sbb
xchg
jecxz
lcall
xor
fnsave
add
lock
mov
in
div
or
inc
inc
cltd
pop
fwait
mov
repnz
int3
cmpsl
aam
lcall
pop
push
mov
sti
push
push
test
lret
stc
jmp
mov
stos
or
imul
aad
pop
jge
pop
popf
ljmp
mov
ja
inc
mov
mov
or
imul
fnstcw
ss
mov
ss
insl
push
outsl
add
rorb
inc
iret
popf
aaa
imul
push
jo
movsb
push
orb
inc
insb
std
mov
sbb
jbe
push
or
scas
sub
inc
or
inc
and
clc
and
xchg
pop
leave
cmp
cltd
and
pushf
or
pushf
pop
inc
push
lret
mov
shlb
outsl
out
stc
and
popf
jl
addl
pop
out
mov
mov
inc
sti
mov
cwtl
popf
aad
sahf
lcall
xchg
data16
cmp
cmp
out
test
mov
or
cmpsl
ret
jmp
shl
fwait
enter
mov
inc
iret
ljmp
or
cmp
loope
cmpsb
fistl
mov
push
mov
cmc
std
pop
add
push
sub
mov
popa
jl
xor
sub
add
pop
add
sahf
jl
push
push
es
jmpw
pop
mov
jg
aas
ror
in
ss
mov
fs
jp
push
push
mov
hlt
pushl
negl
add
enter
adc
repz
iret
mov
xor
jns
pop
movsl
fistpll
pushf
xor
popf
subl
sub
sbb
out
jmp
aas
ja
in
insl
jecxz
enter
paddusb
xor
xchg
or
jo
xchg
jns
mov
cmpsb
or
xchg
or
xchg
popf
popf
sbb
repnz
add
mov
insb
outsw
imul
sub
into
sbb
sub
filds
insb
cmc
lcall
mov
loopne
fsts
test
or
push
xor
pop
xchg
jb
mov
adc
mov
shll
in
testb
sbb
inc
outsl
call
xor
xchg
ja
dec
insb
push
mov
dec
outsb
and
cmpsb
jecxz,pn
sbb
and
cmpsl
test
cmc
cmpsl
jnp
sarb
imul
jne
and
sete
call
cmpsb
xor
mov
adc
cmovbe
sti
inc
lods
stos
pop
std
sub
push
lahf
add
jmp
jo
push
jmp
xor
sbb
mov
adc
adc
push
inc
jb
lret
testb
push
or
adc
sbbb
out
inc
bound
pop
add
inc
rorl
adc
in
adc
push
mov
push
cltd
push
sahf
mov
clc
dec
add
mov
add
pop
pop
cmp
insl
or
mov
xor
xchg
repnz
rcrl
cltd
and
int3
bound
sub
loope
cld
icebp
push
int
sbb
jmp
lret
fs
stc
pop
cld
jb
test
cld
pop
into
push
or
jp
push
sub
in
xorb
data16
or
cli
pop
sbb
fbld
adc
shl
xor
or
xchg
cltd
andl
cmp
pop
inc
jmp
jle
xor
xor
jo
cwtl
scas
shr
fdivs
stos
in
pop
test
pop
jbe
mov
mov
add
sbb
mov
je
cmp
outsb
jmp
arpl
mov
mov
lods
sbb
stos
or
je
pop
xor
stos
sarl
idivb
mov
push
ja
jae
sub
jp
dec
outsb
and
mov
lahf
xor
cltd
aaa
sahf
insb
popa
mov
pop
sub
clc
call
add
xchg
out
pushw
clc
ljmp
pop
fsubr
sbb
push
bound
push
mov
test
push
mov
and
push
push
rcl
fs
push
mov
aas
lds
in
adc
call
xchg
add
jmp
stc
mov
ds
dec
lcall
bnd
sti
mov
js
fisttps
les
mov
nop
jle
or
sbb
mov
mov
lahf
cmovl
and
jb
xchg
xor
and
pop
xchg
das
aas
xor
mov
imul
sbb
arpl
dec
sbb
jge
int3
dec
jb
rcll
into
push
sbb
adc
les
icebp
and
sahf
or
sbb
outsl
hlt
dec
mov
je
inc
push
sub
sti
xchg
push
push
leave
popf
imul
cmp
cmc
mov
ljmp
movsl
inc
mov
test
cmp
sahf
fadd
sub
sahf
push
mov
jbe
fiaddl
push
jmp
roll
or
inc
inc
xor
xchg
call
mov
out
xor
clc
inc
jp
fcomi
mov
mov
cld
lcall
cmpb
inc
call
call
aas
mov
idivl
jp
and
dec
sarb
fwait
movsb
into
std
pop
mov
jmp
adc
and
pop
xchg
mov
testb
mov
daa
rcrb
cwtl
call
pusha
cmp
jge
sub
dec
cmpl
hlt
fldcw
out
cmovs
mov
int
sti
or
ficoms
adc
cmp
imul
aad
das
aaa
iret
adc
jae
lahf
mov
inc
pop
dec
xor
ret
imul
adc
add
mov
clc
pusha
add
cmp
insl
stc
popa
nop
add
inc
jp
cmpsl
fwait
lahf
cmp
mov
mov
sahf
cltd
rcr
dec
test
popf
pushf
inc
pop
cs
mov
mov
xor
stc
push
or
test
jecxz
adc
xor
jle
mov
std
int
sahf
aam
cmp
xchg
xor
test
inc
sub
push
rcrb
dec
call
std
aaa
jge
or
out
imul
aam
sbb
pop
rcrl
ja
mov
push
jmp
into
fistps
xorb
in
scas
jmp
in
push
stos
xor
out
loopne
push
cmp
inc
sub
bnd
cmp
iret
xor
pop
lds
mov
test
call
arpl
cltd
lods
mov
inc
and
fwait
pop
xchg
ss
pushl
aad
xchg
fiadds
stc
and
or
loope
sbb
push
jp
leave
push
xchg
insl
xchg
ficomps
packssdw
cmp
dec
inc
test
popa
andl
pop
mov
fstp
cld
or
movsl
push
mov
add
stc
xor
ret
jae
cmp
lret
adc
out
in
call
jg
popf
mov
lret
fs
mov
imul
cmp
dec
or
sub
mov
bound
ret
inc
enterw
jg
std
xchg
outsl
cmp
pop
or
sarb
or
or
jae
test
xchg
sbb
fdivs
fldenv
aam
arpl
jmp
pop
sub
add
leave
xor
jl
sub
dec
jg
icebp
jo
es
aad
mov
insl
sbb
repnz
aas
loope
hlt
ljmp
insb
mov
adc
mov
out
add
idiv
dec
mov
cmp
xor
insl
ljmp
jo,pt
fcompl
adc
fchs
je
fwait
loop
and
test
cmc
add
sbb
add
mov
cwtl
aad
xchg
dec
xor
mov
in
mov
inc
lock
dec
pop
mov
and
rcll
jae
mov
mov
iret
mov
sbbb
sbb
data16
adcb
stos
inc
rcll
pop
adc
icebp
cs
cmp
je
lcall
push
in
mov
and
sti
ljmp
fdivrs
or
add
mov
test
stc
in
daa
cmp
push
hlt
jge
out
inc
add
jl
jmp
or
and
lret
jbe
je
sbb
mov
push
bnd
mov
cmp
pop
mov
fnstenv
adc
ret
dec
imul
or
and
daa
outsl
mov
lds
testl
adc
adc
cwtl
dec
add
pop
inc
or
popf
andl
mov
push
xlat
jle
mov
push
mov
hlt
jp
xchg
mov
aaa
mov
xlat
mov
in
int3
jno
mov
or
imul
xchg
or
push
ss
filds
add
out
and
sub
sbb
pop
mov
mov
popa
lock
pop
outsb
cmp
jp
hlt
ret
aam
xor
mov
addb
pop
xchg
pop
push
cmpsl
sbb
rclb
sub
sbb
sbb
ficoml
pop
cmpsb
stos
lods
and
inc
out
and
push
dec
and
adc
mov
sub
push
cltd
enter
add
lods
inc
pop
mov
out
push
cltd
movsl
dec
inc
push
sub
jmp
dec
adcl
aas
out
ret
mov
leave
inc
cmp
stc
jg
lea
js
adc
and
jmp
aaa
push
mov
loopne
mov
loop
cmp
dec
mov
fdivl
arpl
mov
enter
test
std
mov
enter
sbb
adc
imul
jmp
mov
push
sub
inc
xchg
les
sbb
mov
clc
int
arpl
jp
fwait
jns
int3
jp
inc
call
mov
imul
les
mov
xchg
gs
out
sahf
mov
xlat
fwait
aas
notb
outsb
in
inc
dec
cmp
add
stos
sbb
les
fbstp
jne
jmp
outsb
and
sub
aad
mov
enter
test
fwait
cmp
dec
mov
push
cwtl
js
dec
sahf
dec
cmovle
adc
lea
aad
js
outsb
scas
sbb
sti
stos
jl
jg
rorb
loope
pop
idiv
and
cmpsl
dec
jl
lret
rep
push
pop
cmp
cs
pop
jno
cmpb
fwait
adcl
fisubrl
arpl
xor
mov
jmp
jle
and
push
pushf
dec
stos
lds
repz
movsl
cmp
cmpsb
arpl
mov
stos
push
test
sbb
cvtdq2ps
mov
in
lcall
mov
in
jbe
js
dec
inc
lahf
dec
xchg
cs
mov
push
adc
decl
push
shl
mov
movsb
lahf
lods
inc
es
movsb
push
mov
sti
insl
arpl
or
pop
out
sbb
xchg
loop
cmp
leave
icebp
inc
or
loopne
pop
adcb
in
or
insl
int
sub
roll
cmpsb
arpl
in
popa
push
jp
std
fcomps
mov
pop
mov
sbb
repnz
mov
in
in
js
push
xchg
popf
fdivr
dec
nop
mov
cmc
ja
dec
cmp
pop
ja
filds
cltd
lock
leave
pop
adc
loop
andb
sub
inc
stc
add
ja
leave
mov
popf
ror
js
nop
jp
sbb
cmp
sbb
inc
pop
ja
je
adc
mov
outsb
insb
aas
movsb
mov
into
adc
inc
adc
leave
jbe
scas
push
ror
or
dec
daa
or
stc
add
push
xor
fdivr
fpatan
cld
push
mov
xor
in
or
jnp
movl
sbb
adc
fmull
mov
movsl
push
arpl
dec
ljmp
cmp
lahf
pop
pop
cmpsb
mov
shrl
xlat
mov
fnstenv
cmpsb
push
outsb
repnz
lea
xchg
mov
pop
pop
lcall
lret
rorb
xor
stos
mov
add
jle
push
pop
add
push
push
xchg
mov
xor
icebp
lods
push
lods
add
adc
jecxz
jno
push
add
dec
gs
daa
mov
fstps
ffreep
adc
in
fbstp
cmc
sbb
dec
xchg
dec
mov
mov
push
mov
mov
inc
sbb
pop
aam
mov
scas
cmp
mov
gs
ds
pushl
jge
adc
mov
call
mov
inc
mov
inc
mov
push
and
jo
adc
dec
shlb
stos
inc
cmovae
push
inc
loop
dec
or
cmc
xchg
outsl
ljmp
movl
lret
divl
mov
push
stos
add
inc
shlb
dec
sbbl
fs
sarl
sbb
xchg
imul
or
jns
leave
dec
push
nop
push
lea
pop
repz
jmp
call
lahf
mov
add
xchg
or
jno
cs
xor
mov
sbb
mov
rolb
and
loope
xchg
repnz
dec
jle
std
inc
cld
dec
outsl
jae
pop
mov
pop
pop
jno
ficoms
test
inc
addl
lods
pop
imul
lahf
pop
jge
xchg
pop
ja
jl
cld
pushf
ret
xor
inc
jg
mov
or
add
scas
mov
mov
leave
mov
pop
test
cs
std
jle
mov
mov
push
sbb
jo
sahf
les
sub
mov
and
or
push
jne
xchg
or
stc
fprem
flds
mov
mov
inc
sbb
push
push
lcall
xchg
enter
mov
push
push
into
nop
into
inc
xchg
jecxz
in
std
icebp
pop
jbe
and
rcl
test
mov
fldenv
into
out
fisttps
inc
fisttpll
push
sti
pop
sub
xchg
inc
js
mov
and
mov
shrb
add
jne
adc
sub
mov
cld
pusha
dec
dec
repz
push
outsb
xor
repz
arpl
adc
nop
imul
scas
inc
nop
icebp
or
repnz
mov
andl
fcomps
xchg
push
sub
inc
xor
rcl
jmp
or
addr16
out
sbb
cli
push
push
fwait
popa
ret
es
or
xchg
int3
mov
cmpsl
and
mov
std
test
shr
jmp
movsl
fistps
fcmovbe
fs
popf
cmp
sub
add
popa
shll
cmp
push
scas
mov
nop
mov
out
add
cwtl
mov
jl
sbb
hlt
das
add
fildl
cmp
add
adc
pop
sbb
push
push
push
sbb
and
and
cmp
mov
cmc
int3
cs
icebp
lahf
out
loopne
jge
push
xchg
sub
pop
inc
lcall
insb
repnz
pop
outsl
ss
mov
and
ja
in
jne
add
add
xchg
sbb
jmp
mov
jbe
test
jbe
adc
xchg
ret
rcll
iret
int3
imul
fs
or
xchg
negb
call
icebp
int
js
clc
dec
dec
lea
aaa
je
dec
loope
test
cmpb
push
rorb
insb
mov
test
inc
in
sbb
in
fnstenv
int
or
ds
out
std
fsubs
push
pop
sbb
ss
jo
std
out
dec
pop
fistpl
push
loopne
push
fcomi
mov
push
je
and
mov
fimull
fbld
jnp
leave
aam
add
loope
add
sub
lret
out
mov
lods
shlb
test
push
imul
jne
adc
stc
ret
cmpb
nop
std
in
sub
xlat
lea
inc
and
push
push
int
pop
cld
add
popf
sub
sub
lods
loope
out
cmovno
fwait
mov
outsb
das
adc
insb
sbb
or
ficompl
push
adc
xor
xchg
clc
cmp
stos
add
bound
movl
pushf
or
xchg
sahf
mov
add
pop
lret
cld
ljmp
xchg
pusha
loope
pop
lock
add
int
jae
mov
jecxz
and
jns
push
sub
imul
call
push
push
dec
aam
or
xchg
mov
hlt
nop
call
mov
call
cld
cmp
int
xor
jns
mov
les
xor
mov
test
jle
mov
adc
repz
jl
xchg
out
add
mov
jne
cli
push
jae
mov
jp
push
in
negl
lods
xchg
sbb
sbb
sub
repnz
imul
daa
and
sbb
push
sar
dec
pop
jge
fs
test
lahf
sub
push
leave
xchg
aam
enter
out
roll
rcr
pop
xchg
inc
xchg
push
sbb
leave
push
jmp
aad
imul
push
adc
dec
out
mov
fiadds
pop
movsb
icebp
pop
push
shll
cwtl
dec
sti
dec
ret
mov
xchg
fistpl
sbb
shl
mov
pop
shll
aas
jg
sbbb
xchg
enter
aaa
and
jmp
lret
or
outsl
test
jne
outsb
mov
imul
add
push
xor
cli
data16
not
mov
in
dec
loop
mov
cmc
adc
xchg
sub
fisttpll
and
insl
adc
fsubrl
mov
and
push
mov
orb
test
mov
stc
in
out
stc
pop
jl
inc
data16
lahf
nop
jg
repnz
sub
repz
rcrl
jl
add
daa
repz
adc
jg
pop
lcall
inc
fsubrl
das
push
leave
sbb
or
inc
insl
data16
es
cmc
mov
sub
and
push
cmpb
iret
cmp
add
mov
stos
cmpsb
jb
adc
cmp
loop
cmp
sbb
inc
mov
xchg
jne
fs
adc
jg
cmp
adc
push
icebp
push
repz
cmp
lcall
sahf
out
shlb
scas
or
arpl
xor
into
outsl
std
mov
inc
or
mov
push
sbb
addr16
inc
add
dec
movsl
mov
fnsave
mov
in
add
add
push
add
test
mov
paddq
or
sahf
cld
pand
and
jne
jne
aas
xchg
push
mov
int3
jle
movsb
popa
and
mov
inc
leave
aad
out
in
inc
mov
pushf
sub
sub
jns
imul
sub
or
sub
out
int
test
mov
or
mov
mov
xchg
pop
mov
repnz
or
mov
jb
or
push
pop
mov
pop
mov
push
or
fildll
in
sbb
push
lret
cltd
add
jecxz
add
fildl
scas
push
lods
pop
sub
imul
lret
pop
xor
adc
rorl
cmp
xchg
mov
das
imul
cli
push
lods
inc
testb
jge
cmp
push
in
or
adc
imul
jo
ret
pop
add
pop
and
or
xor
test
mov
inc
mov
mov
jns
lds
and
pusha
das
ret
sti
stos
mov
cmc
ds
cmp
mov
in
scas
sub
cltd
pop
mov
call
or
sub
cmp
jbe
push
lahf
es
jbe
jp
scas
test
out
push
sti
bound
dec
cmp
aad
push
and
lret
pop
movsb
jne
mov
and
out
scas
add
cli
adc
push
xor
cmp
jnp
repz
xorb
aas
lret
jo
xor
subl
cs
lods
ja
dec
aad
inc
hlt
sarl
mov
cmpsl
mov
mov
pop
sbb
test
cmp
jmp
xchg
mov
rorl
pop
ffree
les
adc
lock
clc
dec
fucomp
mov
repnz
mov
out
fs
insb
data16
push
insb
xor
lea
dec
shrl
mov
lcall
and
repnz
ja
xchg
xor
sahf
lcall
dec
inc
hlt
enter
cmp
and
xchg
imul
andb
lahf
push
incb
imul
add
push
dec
sbb
dec
sbb
fcmovb
jmp
test
std
gs
push
ja
aas
push
fiaddl
push
sbbl
sub
inc
popf
push
rclb
adc
sub
mulb
int3
fidivs
mov
dec
mov
out
xchg
mov
incb
sbb
cmc
jmp
pushf
icebp
lea
int3
icebp
push
cld
cmp
in
push
dec
pavgw
cmc
lret
les
sbb
adcb
mov
push
sub
cs
fildll
mov
or
es
pop
lret
daa
arpl
jl
clc
mov
lret
fwait
loopne
adc
addl
mov
jmp
cld
out
and
arpl
lds
cltd
movsb
pusha
mov
fcompl
lock
jp
jbe
and
dec
pop
lods
out
inc
sub
pop
and
inc
xchg
popf
dec
sub
arpl
xchg
xor
add
adc
jge
imul
add
cmp
sub
inc
xor
out
mov
or
mov
xor
mov
adc
push
mov
sub
data16
push
ffreep
pop
sbb
inc
jns
xor
into
scas
lret
xor
pop
inc
fstps
pop
sbb
leave
jnp
jge
call
xchg
pop
fwait
rcll
mov
cmp
out
mov
in
imul
scas
loop
mov
sti
test
xchg
dec
pop
fmull
jmp
pushf
sub
jg
push
jle
push
mov
cmp
shll
lods
in
sub
stos
pusha
movsb
loop
sbb
dec
cmp
push
push
pop
jnp
push
nop
sahf
popa
mov
pminub
inc
dec
jb
loope
pop
mov
pop
stos
mov
xlat
sub
inc
mov
in
imul
in
dec
les
mov
cmp
in
cwtl
mov
aad
mov
leave
dec
test
popa
adc
pop
inc
mov
imul
orb
add
sbb
jg
adc
movsb
mov
push
add
cmp
insl
icebp
mov
shll
pop
xchg
sbb
push
iret
out
mov
xor
or
stc
jae
mov
ljmp
ret
mov
mov
push
sub
mov
repnz
push
jecxz
mov
cmp
or
outsl
rcrb
pop
cwtl
push
or
inc
pop
lret
pop
xlat
addr16
sahf
pop
fstps
push
inc
frstor
inc
cmc
or
inc
sub
sbb
adc
push
fisttpl
stos
into
add
mov
adc
jmp
adc
sbb
push
cltd
les
out
pop
jb
pop
fidivl
gs
xchg
push
pushf
adc
mov
inc
enter
iret
inc
push
leave
push
pusha
push
mov
jno
movsl
shlb
fidivl
shll
lods
push
jae
dec
into
inc
rcll
mov
pop
jne
out
hlt
aam
push
frstor
lods
repnz
mov
sub
push
cmp
pop
outsl
iret
cmp
xchg
scas
pop
or
xchg
pop
cwtl
cmp
pusha
sub
or
cltd
dec
pop
inc
and
fs
mov
sti
ret
add
stc
out
mov
jmp
cmp
jg
ret
mov
mov
jl
and
mov
nop
into
pop
sub
adc
mov
xor
pop
push
sbb
scas
mov
cmp
cmp
aas
push
gs
mov
jno
mov
fs
pop
jg
or
rol
aam
mov
shlb
adc
imul
inc
jae
xchg
dec
pop
lock
jns
mov
jge
imul
into
popl
data16
in
sar
inc
push
inc
in
push
or
imul
imul
jne
mov
push
add
insb
fistpl
jmp
sbb
cmpsl
dec
scas
shrl
mov
mov
xchg
adc
mov
sbb
dec
les
push
sbb
es
shll
inc
push
push
cmp
test
fisubrl
sub
xchg
outsb
arpl
out
pop
mov
outsl
pop
pop
movsl
mov
xor
rolb
add
xor
dec
aam
xchg
sub
fistpll
ds
lock
push
jmp
mov
sbb
jmp
outsl
push
je
jae
arpl
ljmp
test
andl
push
ja
mov
xor
sbb
xchg
lds
leave
mov
inc
cs
jbe
dec
dec
cmp
ret
ss
add
rolb
bound
dec
push
cmpsl
push
rcrb
or
fisttps
and
mov
fs
cmpsl
imul
js
inc
pusha
rolb
jecxz
sub
cwtl
ss
idivl
in
pop
aas
in
pop
or
jecxz
fcomi
sar
jne
sarb
inc
lods
pop
lods
adc
popa
call
inc
mov
cli
jle
adc
cmp
mov
or
insb
int3
jae
xor
adc
in
dec
mov
rorb
jae
rcrb
hlt
aad
jno
jnp
adc
mov
outsl
rol
adc
jnp
dec
jo
cmp
stos
test
into
lods
push
cld
xor
mov
or
push
lock
mov
jbe
xchg
hlt
ja
addb
jno
clc
imul
movsb
cmp
in
cld
mov
or
sar
ss
push
dec
push
pop
fs
jns
mov
gs
js
hlt
ss
xchg
dec
jmp
sahf
outsl
mov
cld
xor
or
or
out
lds
xchg
add
insl
lret
fldl
pop
mov
ret
add
aam
mov
xchg
in
and
popf
jmp
pop
mov
fst
je
enter
cmp
pop
jecxz
mov
mov
cmpsl
cmp
or
daa
push
jmp
xchg
pop
cmc
pushf
mov
sbb
push
sub
xchg
andl
test
outsb
jge
jb
push
push
test
lret
mov
cmc
cmp
fisubl
jmp
je
jns
into
and
addr16
xchg
ljmp
inc
repnz
add
inc
push
jp
sbb
ss
or
adc
xchg
pop
aam
push
cmp
jecxz
mov
fsts
sarb
in
inc
jge
es
cltd
fcoml
fldt
aad
push
scas
call
movsl
and
jmp
mov
fcmovnu
ljmp
int3
push
mov
inc
out
fisubl
aam
mov
pop
cmp
xchg
adc
mov
add
push
jnp
push
arpl
mov
mov
mov
das
xchg
mov
sbb
inc
sahf
or
adc
xchg
stos
dec
pop
fadds
jns
stc
mov
pop
pop
cmp
xchg
sahf
cmpsl
movsb
push
test
aam
ljmp
xchg
and
lods
mov
iret
pop
mov
pop
fwait
dec
xor
icebp
push
dec
leave
pop
es
iret
xlat
sti
setne
jne
push
rolb
jne
daa
nop
hlt
out
sub
filds
scas
aaa
loop
shlb
dec
nop
loop
or
xor
push
mov
cmpsb
in
and
lret
mov
roll
sahf
loop
orb
scas
scas
pop
jne
das
out
push
lods
in
sbb
cmp
jmp
shl
jmp
xchg
xchg
ret
lods
data16
stc
mov
ds
push
jns
cmpsl
add
xor
pop
rcll
fdivr
cmp
jmp
push
mov
xor
negb
mov
sub
ja
aas
js
push
push
jge
ds
scas
jns
dec
push
jg
mov
fnsave
and
mov
or
cmp
push
mov
stos
adc
mov
jp
mov
push
cmpsb
aam
ret
xchg
push
mov
mov
lea
or
jae
sbb
cmp
or
lods
xchg
jge
mov
scas
test
mov
pop
mov
gs
addr16
adc
jmp
push
adc
cmp
inc
scas
stos
pop
cmp
or
mov
cmp
decl
ucomiss
lret
test
hlt
push
inc
clc
mov
jle
mov
loopne
iret
and
mov
aad
sbb
lret
lcall
rcl
adc
cmpsl
push
imul
popa
pand
je
and
or
outsl
fdivrs
inc
and
cmp
inc
sub
loopne
inc
push
in
bound
das
add
mov
and
in
mov
jno
mov
dec
dec
aas
push
pusha
pop
shll
sbb
mov
jb
shr
xor
mov
dec
adc
bound
and
aam
mov
faddl
or
ja
or
or
loop
bound
sbb
je
jge
mov
and
in
xorl
ja
dec
fdivl
inc
adc
les
popa
cmpsl
mov
iret
fistpll
ja
fs
add
outsb
repnz
loope
mov
push
arpl
jg
aas
and
dec
cmp
push
call
jnp
and
push
scas
or
xor
add
pop
jecxz
arpl
cwtl
mov
jmp
push
insl
ljmp
mov
mov
enter
jmp
jl
jp
jmp
dec
xor
jno
andl
jecxz,pn
push
mov
or
sbb
jp
les
jge,pn
mov
mov
cmp
cmpb
scas
lock
lds
push
mov
dec
push
ljmp
ret
push
cmp
aas
cmp
xchg
sub
adc
mov
xor
add
jae
push
iret
lock
pop
insb
idivl
jmp
test
pop
adc
lea
push
adc
mov
cmpsl
or
enter
fbstp
or
cli
outsb
es
lcall
adc
sbb
fnstcw
mov
aaa
push
daa
push
jl
push
lock
repz
call
xor
sbb
clc
rcrb
in
ffree
syscall
icebp
pop
leave
and
leave
cmp
fdiv
and
xor
mov
inc
inc
and
call
stos
and
mov
fnstcw
adc
mov
in
pusha
push
and
fldcw
dec
add
enter
xchg
je
push
popa
dec
test
scas
pop
pop
scas
jg
cmp
sub
mov
mov
mov
ficoml
bound
enter
sbb
aad
in
lock
pop
mov
xchg
mov
push
sub
sub
ja
daa
sbb
mov
insl
xchg
sbb
sbb
pop
jl
mov
rclb
push
mov
test
mov
fs
or
pxor
mov
cmp
and
mov
andl
dec
inc
push
sub
push
int
pop
clc
pop
lahf
faddl
outsb
cmpl
rcl
fildll
ss
jo
call
ss
loopne
bound
jmp
es
das
mov
bound
out
addr16
and
jle
fldcw
xor
xor
pop
jae
dec
icebp
loope
daa
rcr
mov
jae
cli
popf
insl
pusha
jbe
lods
aad
aaa
adc
cs
add
mov
scas
sti
push
ret
mov
in
data16
sbb
mov
adc
jge
or
push
cs
mov
pop
pop
pusha
xchg
push
adc
cltd
les
dec
mov
ret
rclb
pop
test
stos
es
outsb
adc
jl
lods
push
dec
clc
xchg
mov
and
loop
fnstsw
das
inc
cltd
sbb
and
inc
xchg
push
inc
fisubl
leave
dec
orb
int3
mov
popf
in
and
push
xchg
fcoms
lods
push
mov
lret
das
or
es
arpl
mov
out
add
mov
mov
sbb
sarl
movsl
das
or
xchg
pop
dec
movsl
imul
add
mov
mov
adc
add
xchg
pminub
xchg
xor
in
inc
push
test
push
jl
loope
pop
dec
sbb
jns
jns
inc
mov
shlb
lods
push
mov
mov
pop
push
pop
xchg
loope
pop
cmp
xor
jb
mov
addr16
dec
outsb
lods
stc
cmpsl
push
sti
push
push
out
shrl
insb
movsl
push
add
in
scas
in
dec
cmp
cmpsb
mov
dec
sbb
cmpl
xchg
fcomip
dec
sti
rolb
js
gs
push
test
jmp
int
cmp
push
push
out
nop
mov
adc
mulb
movsl
xor
adc
loop
mov
insl
cmpl
jo
lods
xor
idivb
sbb
lcall
arpl
push
add
adc
and
mov
sarl
std
es
push
jo
cmp
jge
mov
rcrb
mov
add
cmp
inc
dec
cmc
into
xor
sbb
sarb
push
sbb
std
stos
aad
xor
ss
inc
or
push
jmp
fimull
pop
push
xchg
dec
adc
je
push
mov
push
jne
movsb
sti
out
cmpsl
cmp
adc
dec
jbe
and
lret
cmp
rep
ret
adc
jbe
adc
imul
mov
cmp
sbb
clc
add
sbb
cltd
int
jmp
sarl
jp
dec
or
in
into
mov
lret
fsubs
inc
imul
mov
mov
mov
jmp
cwtl
jecxz
jb
in
cmp
mov
ja
inc
mov
push
jmp
inc
xchg
negb
ja
dec
inc
ret
and
jo
fidivs
repz
cmp
mov
add
in
jne
lods
adc
inc
mov
test
aas
movsl
mov
sbb
push
cs
mov
dec
mov
cs
mov
push
sahf
add
into
push
sbb
icebp
mov
shlb
sbb
shlb
movsl
andl
pop
popf
sub
rcll
imul
sbb
and
fs
scas
cmp
xorl
jne
test
out
push
pop
daa
out
and
aam
icebp
cli
push
in
or
les
cmp
cmc
pusha
cmc
mov
sub
shlb
orl
jg
cmpsb
push
cwtl
mov
and
into
adc
repnz
or
jb
mov
and
notl
sub
sti
gs
xchg
add
sbbb
fs
enter
inc
stos
push
dec
lret
push
and
xchg
or
shl
mov
jnp
adc
push
push
fdivs
inc
popa
push
sbb
pop
test
bound
mov
popf
xlat
and
fiadds
pusha
test
stc
mov
mov
lods
fisubrs
xchg
cltd
scas
pop
addr16
sbb
popa
stos
bnd
cltd
xor
test
shll
repnz
imul
mov
les
add
fwait
icebp
jmp
xchg
es
imull
pop
lea
add
mov
lea
popl
inc
dec
mov
les
mov
sbb
mov
pop
adc
adc
daa
test
neg
xchg
sbb
mov
repz
sub
add
pop
bound
jbe
rcll
inc
mov
pop
mov
push
repnz
sbb
sbb
cmp
push
test
mov
imul
into
mov
mov
lds
jno
add
movl
push
mov
adc
sbb
cs
leave
outsl
push
cmp
je
aaa
jne
lds
aam
add
stos
lea
pop
lea
loop
add
add
inc
fists
mov
xchg
jbe
mov
out
gs
ret
lcall
adc
sub
jb
mov
push
test
lock
pop
ret
cs
dec
and
adcl
jns
cmpsl
pop
pop
cmp
nop
or
ja
dec
loop
dec
xchg
out
and
push
ljmp
popf
jae
jne
shll
imul
push
mov
nop
mov
insb
jae
jno
mov
jo
pop
cmp
fstps
cmp
xchg
sub
fldt
pushf
mov
div
mov
mov
xchg
int3
inc
jb
ret
sub
jge
cmpsl
insl
aaa
push
mov
cmp
shll
lret
outsb
popa
adc
addr16
aad
sbb
mov
xchg
in
pop
jmp
lods
mov
cmp
pop
add
jge
fbld
rclb
sub
shrl
cmc
mov
movsl
xchg
inc
add
rorl
or
sbb
inc
loope
nop
movb
jp
dec
sbb
scas
scas
push
mov
mov
lock
xchg
push
xchg
adc
fxch
push
cli
and
mov
sbb
loopne
xchg
test
dec
and
inc
adc
fstps
lahf
mov
xor
pusha
bound
out
and
test
sub
and
push
imul
lods
cmp
pop
js
pusha
lcall
fcomps
jle
mov
jmp
or
push
mov
add
sub
pop
sub
ss
fnstcw
xor
int3
push
dec
jge
cli
sub
or
ja
and
aad
imul
add
mov
fiadds
jnp
sbb
movsb
nop
in
push
lds
jnp
push
and
xchg
int
push
sbb
inc
les
incb
mov
inc
sbb
sub
leave
std
xchg
xchg
xor
sub
jge
mov
clc
pusha
ret
xchg
out
adc
sub
subl
mov
fldl
bound
sub
mov
cmpsl
shll
mov
and
cmp
shl
xchg
sbb
out
into
sub
inc
cmp
pop
jl
lods
int3
popf
adc
bndldx
lcall
shll
pop
or
mov
cmpsl
xchg
inc
jb
push
xlat
in
icebp
imul
outsb
sub
xchg
sbb
in
stos
lret
jge
jge
jbe
sbb
mov
jbe
scas
loop
aam
adc
inc
out
nop
pop
dec
fiadds
push
mov
mov
push
pop
push
mov
cmp
dec
pop
fisttps
stc
outsb
sub
lock
or
push
enter
hlt
mov
sbb
add
in
das
mov
xor
stos
xor
popa
out
inc
data16
mov
xor
jae
xchg
cld
test
in
mov
inc
adc
aaa
sbb
push
enter
jp
xor
cs
sub
enter
stos
enter
xor
dec
loope
cmp
jecxz
push
push
stc
mov
mov
adc
popl
in
sbb
imul
pop
xchg
dec
jo
jge
call
loopne
push
xor
das
pusha
mov
fs
pusha
xchg
into
push
or
ljmpw
add
ret
jecxz
inc
mov
pop
mov
fisttps
and
aam
rcrl
inc
cmp
push
adc
call
sarl
mov
loope
jno
cmp
or
ret
jne
pop
jb
lods
pop
outsl
pop
mov
in
lcall
lods
test
int
testl
inc
loope
and
push
es
mov
imul
pusha
ret
mov
pop
lcall
lret
loopne
xor
xchg
push
out
lock
in
lcall
fdiv
jge
xor
js
inc
mov
or
and
xchg
jne
int3
stos
fsts
ficomps
stos
jmp
arpl
test
lret
scas
sub
xchg
cmp
inc
mov
enter
insb
jns
pop
adc
cmp
add
cmp
fldenv
jb
int
sbb
out
fsub
jge
bound
ror
mov
mov
enter
mov
dec
cld
ljmp
loope
mov
sarl
adc
push
sub
cld
mov
hlt
loope
insb
outsb
stos
pusha
jno
gs
xchg
xor
sub
and
mov
mov
cld
dec
lcall
xor
pop
ss
jge
out
mov
es
shll
pop
aam
push
ja
notl
jmp
jmp
mov
call
push
push
lret
lret
mov
add
dec
and
mov
test
xor
mov
lret
mov
jns
push
imul
cmp
mov
pop
pop
add
popa
lods
sbb
inc
dec
fwait
shll
mov
stos
push
sbb
cmp
xor
push
xor
shrl
mov
cld
leave
mov
mov
and
vpunpcklwd
out
repnz
push
cmp
add
fs
jp
sbb
arpl
popf
pop
push
test
xchg
mov
mov
mov
lret
daa
sbb
dec
inc
int
pop
xchg
pop
jg
jecxz
data16
aas
dec
test
repnz
ss
pushf
xchg
mov
sbb
das
in
and
jb
xor
enter
nop
mov
push
mov
mov
into
dec
sahf
or
test
movsl
pop
push
icebp
decb
mov
push
fnstenv
cmp
ss
mov
push
arpl
mov
mov
ret
add
lods
decl
ss
loopne
into
pop
pop
dec
jae
pop
jle
adc
stc
sahf
daa
jno
jno
loope
sbb
xor
mov
xchg
xor
and
push
out
mov
aam
shlb
pop
movsl
fcoml
mov
xchg
fistpl
int
insl
inc
sub
mulb
mov
xchg
inc
dec
sbb
dec
popf
add
mov
mov
stos
fistl
jmp
dec
jo
dec
getsec
xor
out
push
out
mov
scas
push
inc
out
push
test
ljmp
push
punpcklwd
add
movsl
invd
push
jmp
pushl
rcrl
mull
icebp
sahf
cli
imul
mov
aam
fimull
push
push
icebp
push
aas
sahf
ljmp
cltd
int3
mov
iret
aaa
in
and
sbb
popa
lock
loop
insl
xchg
pop
lods
fnstenv
jb
lock
roll
movsl
scas
jbe
mov
mov
mov
xorb
or
ret
pusha
sbb
fidivl
cld
mov
and
lret
mov
dec
jnp
xchg
push
cmp
mov
xchg
dec
sub
jbe
sar
jne
dec
ds
and
loopne
aas
test
and
jne
add
lea
sub
sub
inc
or
push
repnz
mov
shlb
cmp
sub
sbb
shrl
mov
mov
sbbb
and
mov
test
push
add
xchg
jno
or
xchg
sub
mov
mov
lds
movsb
fbld
mov
sti
cltd
mov
dec
mov
adc
nop
cmpsl
shll
adc
ds
lcall
loopne
xorl
bound
hlt
jmp
add
mov
xchg
xchg
xchg
or
mov
cmp
sub
xchg
mov
lods
popl
xchg
rol
adc
mov
xchg
push
in
sub
lods
xor
push
pop
or
adc
xor
inc
repz
inc
into
nop
test
mov
pop
cmp
sub
xchg
dec
and
push
sub
int
outsb
mov
xchg
sub
imul
mov
mov
pop
push
scas
outsb
in
cs
mov
xchg
push
pop
ds
out
xchg
icebp
xchg
rol
hlt
insb
xchg
stos
sbbl
das
movsb
and
sbb
fistpll
dec
mov
fcomps
sbb
test
lret
push
xorl
pop
pop
or
add
shll
lock
mov
stos
adc
adc
jb
std
fidivrl
and
lds
je
cmp
add
loope
inc
lea
ds
sub
dec
cs
pop
adc
cmp
das
mov
std
ss
inc
pop
rcl
xchg
dec
jno
clc
pop
roll
jge
cmp
scas
movsb
pop
cld
sbb
push
or
fiaddl
xchg
mov
out
or
in
clc
push
jmp
pushf
inc
mov
stc
push
mov
mov
rcll
mov
push
pop
rcrb
or
sbb
sub
mov
mov
push
jmp
bnd
lock
scas
jmp
sbb
xchg
mov
lea
outsb
push
insb
repnz
cwtl
lret
pop
ljmp
adc
push
mov
add
daa
xchg
lods
jp
pushf
mov
pop
mov
sub
iret
mov
fwait
mov
pop
int
ret
adc
pop
pop
ljmp
or
rcrb
iret
sar
jecxz
shll
or
enter
mov
mov
pop
mov
push
jle
mov
pshufw
cwtl
lahf
dec
push
dec
outsl
in
cmpsl
fs
ljmp
lods
in
pop
dec
or
adc
or
fdivrl
rorl
arpl
inc
jno
mov
dec
rcrb
je
mov
shlb
pushf
cmp
and
daa
inc
xchg
xchg
push
cwtl
or
addr16
sahf
push
negb
lret
mov
pop
das
ljmp
xchg
jecxz
or
and
sub
loop
mov
int
cmp
mov
xchg
imul
mov
stos
ret
lods
insb
sub
pop
add
fcoml
push
or
sbb
xchg
jmp
pop
dec
sbb
addl
std
jmp
ljmp
shl
adc
loop
ss
xor
aam
pop
adc
cmpsl
mov
mov
sbb
out
push
push
jno
rcrl
mov
jmp
stos
cmp
dec
dec
repnz
jecxz
scas
sub
out
mov
inc
nop
stc
cmp
fnstenv
fcmovnu
in
jb
adc
push
scas
cmc
inc
mov
mov
testl
pop
mov
notb
paddd
std
cmp
in
mov
cld
dec
lret
inc
push
mov
loope
mov
cmpsb
and
cpuid
repz
mov
jo
pop
and
mov
out
fstps
xchg
jbe
sbb
push
sti
push
sbb
mov
add
sbb
mov
mov
mov
jns
ficoms
sbb
mov
ds
pop
fistps
sbb
int
jge
cltd
cli
xchg
xchg
and
test
push
jp
mov
fwait
scas
jmp
jae
mov
aad
xchg
aaa
js
fistpl
sbb
imull
fdivrp
push
sarl
inc
mov
jmp
jb
xor
dec
test
mov
push
push
add
push
repz
into
jge
inc
jno
xchg
cmp
rclb
sbb
loope
push
popa
lock
inc
add
insl
cmc
dec
dec
jo
dec
mov
inc
out
xchg
popa
push
daa
pushf
mov
adc
xchg
insl
dec
mov
test
aad
mov
or
lcall
sahf
mov
pop
clc
int
pushf
cld
xchg
nop
aas
out
mov
lea
ret
pusha
mov
lret
sub
xchg
jnp
dec
and
testl
ja
xchg
arpl
add
or
fstpl
lds
xchg
xor
cmp
testl
inc
push
in
adc
test
push
jae
and
xchg
mov
stos
jno
or
xor
or
ss
inc
mov
inc
jne
es
ds
mov
jb
aaa
enter
iret
nop
xchg
mov
dec
jmp
inc
dec
adc
xor
mov
addr16
inc
sub
inc
or
inc
loopne
in
adc
ficoml
call
inc
or
push
mov
bound
jo
addr16
cmpl
pop
iret
in
aas
repnz
arpl
sub
sbb
or
imul
mov
push
or
jno
push
test
lahf
and
icebp
int3
fisubrs
cmp
fildl
dec
pop
mov
pushf
adc
cmp
out
or
push
insb
stos
jo
sbbb
or
cmp
lret
inc
mov
sbb
inc
ljmp
pop
and
mov
mov
mov
adc
dec
scas
js
scas
leave
data16
dec
scas
and
adc
or
mov
and
cwtl
or
xchg
cmp
dec
xchg
mov
movsl
std
fisubl
movsb
movsb
pusha
xlat
ljmp
das
mov
mov
nop
outsl
xor
or
dec
push
cmp
or
sub
push
je
mov
pop
sbbb
std
fsub
ficoms
lret
js
jg
mov
cmp
addb
mov
cwtl
int3
xchg
or
cwtl
fists
test
inc
ja
lock
cmpsl
cmp
call
xor
jae
pop
sbb
pop
jmp
cwtl
fwait
adc
mov
loope
xor
sarb
pop
adc
jb
out
test
pop
and
add
add
pop
fwait
insb
mov
add
in
pop
mov
out
in
pop
fld
or
sub
jle
int
leave
lock
hlt
test
mov
loop
out
shlb
jle
add
pop
sarl
adc
scas
add
bound
pop
mov
xchg
jns
pop
jl
ds
cmp
test
jnp
pop
mov
cmp
inc
out
jnp
popf
jge
sbbl
jp
push
repz
jp
mov
andb
jmp
xor
push
inc
lds
sti
mov
or
inc
xchg
xchg
test
pusha
icebp
jmp
sahf
or
scas
adc
adc
add
sbb
mov
xor
mov
mov
test
sahf
js
sbb
je
jmp
in
jge
stos
icebp
stos
inc
adc
int3
stc
negb
shlb
mov
fidivrs
fldl
mov
dec
out
xor
push
mov
iret
ja
add
sub
xor
push
push
mov
lea
mov
push
fistpl
ljmp
into
add
insb
pop
out
pop
insb
fcomps
pop
lea
in
scas
repz
outsl
dec
mov
jmp
jno
mov
loop
daa
push
mov
dec
daa
push
int3
adc
pop
sarl
and
sarl
push
movsb
cmp
cmp
mov
adc
fldenv
std
xor
pop
pop
and
xchg
xor
mov
sub
fcomps
jno
and
mov
aas
mov
pop
push
lahf
xorl
cmp
clc
aaa
mov
xchg
stos
xchg
cmpsb
sub
into
mov
mov
ljmp
enter
rcrl
dec
repnz
out
loop
jnp
cmp
push
sbbb
cmp
pop
scas
inc
adc
sub
jge
enter
lahf
jg
xor
dec
lret
das
add
outsl
jge
mov
sub
lret
loop
mov
hlt
add
out
xchg
popf
call
out
cmp
popa
inc
push
xor
mov
cmp
scas
das
lock
xchg
sbb
fistpll
call
mov
xchg
scas
sti
lods
aam
insl
hlt
arpl
push
das
scas
aad
adc
sarl
add
das
sub
enter
lret
xchg
add
xor
inc
lahf
adc
mov
lea
icebp
inc
push
fs
outsb
push
fistl
pop
sarb
add
xchg
sub
inc
in
mov
dec
hlt
mov
pushf
and
sbbb
lock
imul
xchg
inc
stos
mov
jb
aaa
das
ret
out
inc
jns
fmuls
insb
sarb
cwtl
ret
frstor
cmpsb
loop
push
lcall
movsb
pop
es
mov
xchg
stos
dec
and
lods
aam
rorl
push
cmc
imul
testb
inc
inc
fiadds
jle
push
dec
push
aas
and
ljmp
jmp
adc
ss
in
sub
inc
push
sbbb
fsubs
adc
shl
outsb
xchg
fsubr
mov
icebp
sbb
bound
xchg
push
adc
nop
xor
mov
cmp
xor
dec
popa
les
fdivrl
loop
pushf
iret
add
imulb
pop
cld
pop
in
fbld
mov
mov
ss
adc
fldenv
test
inc
sub
mov
jae
shll
rcrl
jno
inc
jo
xor
lock
xchg
or
das
movsb
into
jge
repnz
xchg
in
out
jae
adc
jo
push
inc
and
xchg
adc
push
mov
mov
xchg
pop
xor
hlt
dec
bound
sub
scas
scas
stos
mov
push
fcmovnu
push
out
js
pop
cltd
test
rclb
ljmp
mov
scas
call
sub
popl
mov
outsl
add
mov
mov
adc
pop
and
jmp
das
sbb
shr
cld
or
xor
aaa
ret
or
in
je
dec
mov
mov
jl
add
stc
lahf
jae
lcall
test
outsb
mov
and
test
pusha
daa
adc
jl
ja
out
in
lret
xor
mov
pop
fcmovu
arpl
xor
clc
push
mov
fnstcw
ret
dec
popa
imul
sub
out
outsb
daa
push
cs
push
mov
dec
mov
mov
fwait
add
cmp
push
push
cmpsb
sbb
vpunpcklwd
sub
push
push
jb
xor
xchg
stos
sub
jb
addr16
rolb
addr16
out
mov
rcrb
jg
out
lret
daa
nop
inc
push
mov
ret
xchg
add
stc
jge
cmp
add
out
std
bound
and
das
repz
xchg
sbb
dec
cltd
enter
push
mov
sahf
loope
sbb
jnp
arpl
inc
xor
les
add
add
aad
nop
gs
and
xchg
push
xchg
xchg
xchg
imul
and
and
push
jno
test
ja
fidivl
mov
xchg
frstor
and
gs
and
sub
arpl
add
xlat
push
lret
fcomps
cltd
fcomps
test
inc
and
fs
je
mov
sub
dec
cmp
xchg
jo
add
sbb
das
imul
jg
push
ror
push
xor
fistl
cmp
add
mov
imul
out
pusha
jae
outsl
xchg
add
out
pop
gs
pop
push
adc
xlat
xchg
imul
pop
scas
and
mov
das
pop
cmpsb
dec
fmuls
cld
andb
test
data16
sbb
jle
loopne
loopne
mov
rorl
add
sub
aas
jno
lret
icebp
outsb
xchg
lcall
mov
jb
in
xor
test
in
pop
xlat
xlat
dec
mov
xchg
int3
mov
fidivl
and
jns
cmpsl
rolb
xor
pop
push
xchg
and
or
loopne
pop
pop
pop
mov
jb
cmc
pop
cmp
loop
mov
dec
shl
into
hlt
in
mov
mov
loope
dec
sub
and
jle
mov
enter
sub
es
xlat
int
mov
ljmp
xchg
pushf
stos
pop
es
mov
sub
adc
addr16
cmpsb
jne
xchg
mov
xor
jo
in
jge
or
or
ss
pop
adc
bound
xorl
xchg
shrb
call
mov
in
adc
adc
push
or
or
loope
scas
inc
cmp
sub
lods
and
dec
insb
add
dec
lods
testb
dec
add
cs
ret
adc
insl
loope
imul
mov
pop
dec
add
pop
je
outsb
sbb
fwait
adc
sbb
sbb
jg,pt
push
jle
sub
push
push
adc
enter
xor
insl
dec
cwtl
add
pop
xchg
fistl
mov
xor
rorl
push
cmp
jae
dec
sub
xlat
loop
adc
cmp
or
mov
adc
cs
jg
divb
and
dec
cmp
cltd
fwait
mov
out
xchg
pop
std
rcll
addr16
imul
adc
push
xchg
pop
lret
pop
aas
rclb
mov
adc
and
jge
int
push
lret
add
inc
cmp
lock
es
mov
lds
mov
xchg
pop
and
jge
cmp
add
and
stos
sub
sbb
cmp
inc
mov
fidivs
sahf
push
test
in
jecxz
je
stc
push
jle
dec
jecxz
mov
popa
stos
mov
mov
ja
sti
sbb
fsts
sbb
push
jl
pop
push
add
inc
mov
and
aaa
nop
or
mov
in
imul
mull
pop
ljmp
mov
addr16
repz
inc
jle
hlt
dec
test
mov
call
icebp
faddp
lret
leave
cmp
jecxz
stos
fcmovu
cmp
mov
clc
aam
or
pop
and
enter
jo
out
mov
je
repz
fucom
cwtl
fadd
lahf
push
fs
in
cli
xchg
inc
pop
jg
sti
ret
xlat
or
insb
adc
jne
call
imul
mov
xor
cmp
adc
test
lahf
popa
mov
mov
je
cmp
mov
xlat
imul
data16
cs
add
jge
jns
push
push
push
xchg
lock
pusha
and
mov
pop
mov
imull
or
pop
out
sbb
push
push
adcb
scas
out
faddl
popf
adc
rclb
sbbl
stos
adc
enter
pop
cmp
xchg
dec
sbb
sub
aaa
iret
jo
dec
int
jg
int
or
leave
push
cmpsb
inc
pop
cmp
hlt
lods
inc
xchg
cmp
adc
xchg
popf
data16
inc
jbe
push
into
or
les
ret
jo
int
and
xchg
pop
insb
cmp
sbb
adc
push
adc
jno
test
cmpl
out
or
lods
arpl
add
dec
sub
xor
cmpsl
mov
andnps
movsb
jae
jne
lahf
xlat
add
out
push
or
sahf
daa
inc
sbb
ljmp
mov
pop
mov
adc
jnp
add
aas
cltd
out
mov
sbb
bound
or
or
out
stos
rolb
sbb
das
fwait
scas
mov
jbe
sub
std
call
or
dec
out
mov
pusha
lods
add
sbb
or
repz
adc
stos
cmp
mov
cld
test
js
xchg
jo
pop
cmpsw
jecxz
cmp
add
sahf
arpl
xor
xlat
out
cmp
notb
ret
mov
imul
daa
lcall
cmp
jbe
xchg
push
in
scas
imul
movsb
sbb
mov
or
mov
fstps
loop
push
push
loop
jb
mov
mov
cmovno
dec
xor
jmp
cli
cmpl
sbb
push
pop
es
pop
lods
adc
inc
mov
cmpsl
inc
call
into
je
adc
sub
addr16
nop
cli
sbb
mulb
idiv
andb
sub
je
push
sbb
sbb
je
inc
dec
mov
fnsave
or
imul
cs
mov
lea
dec
insb
popf
ds
xchg
movsb
gs
jbe
push
into
lea
inc
xor
sub
mov
jo
data16
mov
pop
push
cmp
out
mov
xor
mov
call
cs
mov
aam
lret
dec
dec
add
xchg
bound
shl
lods
push
enter
xor
lret
call
cmp
jge
push
aas
xor
lea
stc
sti
pushf
icebp
movsl
push
and
push
or
fbstp
dec
icebp
in
divl
push
shlb
js
adc
imul
jb
jb
iret
mov
daa
pop
or
sti
and
xor
mov
imul
push
fwait
std
aad
pop
or
clc
xchg
add
cmp
call
pop
mov
jae
sbb
mov
push
arpl
sub
xor
shl
std
add
pop
mov
aad
sbb
mov
inc
aas
and
and
mov
and
mov
outsb
shll
imul
cs
fcmovnu
in
mov
jmp
and
or
js
jne
lret
sahf
xchg
loop
nop
mov
shlb
int3
jmp
push
mov
push
xchg
cmp
call
das
idivb
lods
push
sti
sbb
je
and
in
ret
sti
dec
cmc
mov
mov
pop
mov
outsl
cwtl
mov
dec
ffreep
pusha
push
arpl
incb
xchg
jmp
jo
int3
loope
imul
fnstsw
push
jnp
ret
mov
xor
jo
mov
mov
loopne
int3
int
lods
imul
xchg
xchg
mov
inc
bound
ret
adc
xchg
shrl
mov
dec
in
jnp
mov
and
jns
lds
bound
xor
adc
xlat
outsb
sbb
mov
popf
ficompl
fstpt
pop
movsl
dec
and
imul
jmp
jno
sub
scas
fmul
movsb
lock
xchg
xchg
and
inc
jno
xchg
jmp
add
and
or
mov
pop
aas
or
rcrb
inc
add
sub
pop
and
xchg
lret
xchg
jecxz
fiaddl
add
fsts
cs
jecxz
ss
dec
push
push
dec
call
jbe
sub
push
dec
lods
data16
ss
out
pop
test
arpl
pop
std
pop
xchg
xor
mov
test
push
scas
dec
out
enter
and
sahf
xor
imul
adc
movhps
sub
ret
and
or
popf
sbb
imul
je
sub
push
pushf
cmp
inc
pop
mov
sbb
sub
sti
ljmp
pop
sti
pop
push
popa
jmp
inc
cmp
andl
xor
jge
jae
xchg
push
push
sbb
sarb
dec
mov
xchg
xchg
mov
cmp
in
lret
roll
pushf
adc
add
mov
scas
push
xchg
je
sub
cmp
pop
cmp
xor
mov
cmp
pop
mov
stos
adc
sub
arpl
popa
enter
mov
xor
cmpsl
cwtl
xchg
xchg
adc
mov
les
cmc
mov
xchg
xchg
test
pusha
imul
ret
fs
mov
jb
cmp
or
sbb
push
call
loopne
fsubl
shlb
gs
stos
adc
hlt
mov
push
sbb
push
dec
call
add
jge,pt
into
xor
scas
sarl
xchg
call
jns
ja
js
testl
dec
cli
push
icebp
into
aam
mov
addl
xlat
push
push
adc
push
hlt
faddp
std
negb
popa
fwait
add
pop
ljmp
jg
insl
out
inc
fdivrs
sub
fs
imull
add
aaa
adc
cs
sub
inc
aad
xchg
push
testb
lea
add
push
cld
cli
and
sub
leave
adc
sahf
inc
xchg
idivb
sub
fcmovb
push
movsl
pusha
mov
inc
outsb
and
dec
scas
mov
iret
or
loope
xor
push
rolb
flds
cmp
dec
cmp
adc
fdivr
lds
fstl
push
pop
adc
inc
adc
jmp
inc
mov
dec
mov
push
jecxz
dec
scas
jp
repz
mov
cli
fwait
dec
div
cmp
clc
dec
lods
loopne
mov
push
inc
mov
mov
pop
or
xor
gs
or
pop
or
add
cmpsb
jae
mov
fsts
cmp
dec
push
dec
pop
adc
add
dec
hlt
nop
push
sbb
inc
int3
clc
sub
imul
cwtl
sub
mov
sahf
imul
mov
mov
test
lret
sahf
cmp
enter
clc
sub
fildll
pusha
in
sahf
jle
addl
add
rcl
jge
and
jl
jg
xchg
stos
es
add
sti
ds
sub
and
repnz
mov
cld
pop
enter
inc
inc
mov
mov
mov
aad
mov
jecxz
xor
mov
add
push
jbe
ret
jnp
mov
mov
push
cwtl
xlat
les
mov
sub
jo
adc
nop
add
jmp
add
sub
adc
jge
popf
fsts
fcoms
push
xor
lods
in
or
sub
inc
call
push
fbstp
fwait
cmpsb
dec
popf
sub
gs
fstp
sbb
cmpsb
into
cmpsb
cmp
add
mov
lret
or
push
movq
gs
sbb
or
shlb
or
cmp
jmp
in
cltd
and
dec
aas
cli
in
icebp
pop
xlat
inc
cmp
sbb
adc
xor
xchg
push
daa
loope
ss
jne
sub
cmpb
pop
loope
jge
jle
movsl
xor
ljmp
cmpsl
pop
cmpsb
cltd
clc
test
jbe
push
xlat
fs
jns
nop
das
jl
jp
call
incb
jno
lds
cmpl
jl
repnz
push
ret
cmp
in
in
inc
pop
xor
dec
hlt
mov
popa
jecxz
test
xor
xchg
dec
stc
adc
mov
movsb
inc
sub
or
ret
outsb
test
cwtl
pop
cld
sbb
out
daa
pop
lods
pavgb
dec
jbe
push
jecxz
mov
xor
push
fisttpl
je
push
adc
push
fldl2t
mov
xchg
pop
bound
xchg
sbb
imul
nop
loopne
pop
fidivs
or
mov
xchg
xchg
or
push
jae
outsb
out
pop
jge
daa
aad
sbb
stos
punpcklbw
xchg
int3
jecxz
push
lcall
lock
outsb
pop
cltd
xor
xchg
jb
clc
aam
or
pushl
inc
negb
fiaddl
jl,pn
pushf
divl
or
jae
test
mov
xor
sub
push
ret
mov
shlb
lods
adc
inc
aad
and
push
push
or
push
divl
fcoml
jecxz
clc
mov
pusha
test
loopne
or
mov
enter
pop
dec
sbb
push
loope
cmp
pop
data16
mov
mov
sbb
mov
mov
movsl
mov
mov
enter
push
xchg
inc
ret
add
push
flds
test
das
xor
pop
jmp
add
stos
xorb
cmp
aaa
pop
repnz
out
xor
push
scas
pop
push
bound
mov
mov
xor
xor
mov
jae
das
out
ss
scas
cmp
or
xchg
dec
inc
int
dec
jb
enter
mov
lds
mov
cs
push
int
xor
in
and
daa
rcll
xchg
cmp
data16
jmp
add
mov
and
insb
push
loop
or
jg
cmp
cmp
imul
and
into
xchg
hlt
jle
mov
adc
sbb
pop
push
lods
sub
add
div
lock
mov
sub
dec
lds
hlt
jne
rorb
mov
in
sub
test
outsl
into
enter
lcall
sbbb
int
scas
inc
cmp
push
cmp
das
jmp
or
jnp
xor
push
rcl
push
fwait
jns
inc
push
adc
push
or
jb
insb
fsubp
xchg
adc
fstpl
std
aas
sub
shll
xchg
loope
addl
sarl
sbb
cmp
mov
subb
cmp
roll
sbbb
dec
inc
insl
mov
sbb
push
xchg
mov
out
scas
clc
idiv
jmp
xlat
inc
xchg
repnz
lock
movsl
test
cmp
call
xchg
clc
movb
rorl
mov
fsub
les
or
and
xchg
pop
mov
and
loop
pop
dec
in
sub
nop
push
mov
scas
movsl
and
jle
mul
xor
loope
lret
rcrb
aam
aaa
cltd
jb
out
push
out
lock
add
cmp
enter
dec
xlat
aad
add
stos
pop
push
mov
inc
and
shlb
adc
popf
adcl
test
mov
in
xchg
xchg
ret
pusha
xor
movsb
mov
repz
mov
jbe
inc
daa
sub
int3
sub
cmp
jb
mov
repz
inc
nop
jge
test
sbb
sub
sub
cmc
push
jbe
dec
xchg
inc
sub
push
pushf
or
mov
lret
cld
aaa
mov
mov
mov
ret
pmaddwd
and
int
fadds
out
mov
mov
or
pop
mov
push
sti
add
mov
adc
dec
inc
dec
mov
xchg
xor
loop
test
loop
mov
sbb
fmul
lcall
hlt
add
and
and
sub
adc
mov
repnz
dec
xor
test
lret
push
jno
adc
aas
mov
jle
xchg
cmp
pop
nop
dec
in
out
ss
cmpsl
cwtl
div
lret
mov
outsl
inc
int
xlat
mov
stos
cwtl
icebp
in
sbb
or
data16
out
dec
or
loopne
sbb
das
inc
fwait
push
add
jmp
push
loope
scas
and
lds
push
mov
push
pop
add
addl
pop
cmp
std
inc
aad
ret
es
pop
dec
aam
fmuls
jbe
adc
ja
movlps
aas
clc
cmp
push
iret
out
lret
out
movsb
pop
jge
addr16
xchg
push
int
clc
push
dec
sti
clc
std
pop
bound
dec
sbb
jne
fcomps
shrl
mov
enter
aas
pop
push
adc
sub
pop
leave
out
call
and
push
or
psubusb
mov
jge
mov
adc
imul
xchg
xchg
nop
das
sub
loope
les
in
test
shrl
cmp
add
in
add
mulb
stos
jae
jbe
movsl
in
adc
lcall
pop
jo
scas
repz
sbb
ljmp
xchg
xchg
loopne
sbb
push
inc
leave
push
sti
or
cs
sti
mov
repnz
and
outsb
mov
mov
lods
mov
sub
and
cmp
mov
sub
mov
cld
in
add
mov
jmp
dec
sub
std
nop
push
sahf
xchg
mov
xchg
fcmovnu
cmc
stc
dec
pop
fcmovnb
or
xchg
icebp
popa
pop
fsubrl
mov
imul
bswap
stos
out
lods
pop
fwait
aaa
mov
adc
xor
xor
dec
pop
int
sub
mov
or
add
ljmp
sub
std
mov
mov
stos
mov
loope
xchg
jmp
adc
xchg
add
mov
mov
fnstsw
daa
and
push
mov
add
inc
repz
ds
lcall
and
aaa
xchg
orl
fisubrs
mov
push
and
or
push
xchg
pop
adc
loopne
in
push
inc
dec
mov
aaa
jo
mov
push
jge
in
sub
sahf
rol
dec
lods
xor
inc
xchg
adc
mov
push
inc
into
xchg
in
test
mov
sbb
push
adc
jns
jmp
cmp
lcall
mov
test
and
mov
repnz
add
jp
push
lret
mov
jne
xchg
cmp
jle
outsl
cmp
out
lahf
xor
cs
push
pop
mov
fsubrs
mov
aas
cmc
aad
sbb
xor
out
cmp
jns
pusha
mov
sbb
jns
ret
mov
pop
scas
stos
aas
jle
aam
fs
clc
jbe
in
ret
test
enter
sti
pop
sub
inc
xor
or
ds
and
cs
push
lea
mov
mov
cmp
cmp
in
jecxz
idivb
lea
mov
fimull
cmp
fbstp
cwtl
loope
fstl
mov
loopne
mov
in
pop
jg
fcom
ss
sar
or
lar
imul
or
fistpll
mov
leave
add
loopne
retw
or
pop
ret
ds
mov
mov
and
mov
mov
add
jb
and
inc
sbb
arpl
fwait
push
mov
out
std
sbb
daa
mov
and
mov
aaa
mov
mov
add
ret
outsb
xor
cwtl
je
iret
mov
push
lret
mov
mov
mov
aaa
mov
mov
xor
push
into
pop
in
ss
iret
xor
mov
and
push
mov
mov
sbb
dec
mov
cs
sarb
push
decl
jb
sub
mov
push
xchg
jns
jbe
ret
jmp
mov
xchg
cmpsb
pushf
lret
leave
sub
inc
adc
inc
aam
ret
jns
pop
mov
int
lcall
lcall
addr16
jmp
pop
inc
fidivl
pop
outsb
je
add
dec
cli
je
xchg
add
dec
rorl
in
dec
test
dec
and
sub
dec
push
mov
testb
ja
ret
cs
jnp
push
bound
jo
dec
dec
push
mov
mov
aas
popf
mov
je
push
divl
std
pushf
mov
imul
jl
cmp
inc
lds
pushf
ljmp
adc
nop
insb
xorl
pop
xchg
daa
adc
mov
dec
cltd
sub
cmpsl
popa
aam
add
jns
in
andl
mov
gs
push
or
insb
pop
mov
repz
std
inc
pop
out
dec
inc
fcomps
das
call
leave
ja
sbb
rclb
bound
mov
cmpb
rolb
ficompl
leave
ljmp
add
dec
push
lock
cmp
sub
std
sub
pop
push
push
aas
xorl
push
je
ja
xchg
xchg
mov
js
mov
pop
out
fwait
das
rorb
int
ds
jp
cmp
leave
jno
mov
add
jl,pt
dec
xor
fnstenv
scas
mov
je
icebp
mov
mov
pop
test
xchg
pop
rcll
adc
outsl
sbb
fadds
ret
ss
mov
das
jge
jge
js
mov
mov
call
int3
daa
cmpsl
push
rcll
xchg
xchg
cmpsl
pop
out
int
subb
mov
cmp
lcall
in
cmp
xor
lock
call
stc
dec
mov
mov
inc
fisttpl
mov
push
repnz
call
xchg
dec
xor
repz
xchg
es
loope
dec
popf
pusha
scas
sbb
nop
dec
sub
ret
mov
adc
les
jp
int3
pop
cmp
sbb
fucomp
dec
scas
inc
jg
int3
sub
pop
jb
shl
stos
ljmp
hlt
enter
cmp
dec
lcall
ret
stc
dec
push
xchg
in
jnp
mov
sbb
xchg
imul
inc
cwtl
jne
test
push
stos
push
dec
add
aas
stos
pop
js
and
cs
outsl
jle
in
push
aad
shrb
jns
and
xlat
sub
xchg
pop
cmpsb
cs
ss
lret
adc
or
cmc
into
jno
mov
aam
inc
pop
fs
lcall
fisubl
mov
mov
sub
and
pop
xchg
mov
ficoms
jb
jl
jae
adc
roll
sbb
cmp
xlat
les
or
pop
jge
mov
lds
xchg
sbb
dec
push
adc
ss
fs
jns
or
fcoms
mov
dec
sbb
jnp
mov
arpl
cmp
popf
dec
mov
xchg
movsb
push
jle
cmpsl
lret
dec
test
into
adc
mov
scas
cmp
jl
outsl
scas
testb
movsl
out
enter
inc
and
mov
lock
cmp
xor
lcall
ret
addr16
and
stc
and
jo
bound
lcall
aaa
nop
push
sbb
sbb
cmp
fistpl
fsubr
repz
das
inc
popa
aas
dec
cmp
inc
loopne
and
rcrb
xor
sahf
mov
fdivp
es
test
std
and
int3
movsb
cltd
jae
icebp
jge,pn
xchg
dec
and
pop
sbb
mov
push
rclb
jb
jmp
mov
daa
ss
or
loop
adc
mov
cs
ja
cmp
fldcw
mov
inc
test
cwtl
ljmp
scas
dec
std
aad
into
and
cmp
rolb
mov
data16
decl
mov
cli
fstl
int
inc
sub
mov
xor
sub
filds
loopne
sbb
sbb
les
out
sbb
jo
cmp
inc
loopne
jmp
movb
movsb
dec
sub
in
nop
jnp
lcall
mov
push
jl
and
std
loopne
mov
jge
leave
pop
pop
stos
mov
sub
sbb
xchg
or
jnp
mov
ja
mov
ja
dec
sub
dec
cs
push
push
jbe
ficompl
pop
cld
mov
cmc
sbb
sub
pop
fsubl
push
enter
nop
imul
loopne
push
mov
sbb
shlb
je
inc
xor
daa
push
pop
fbld
repnz
adc
xor
insl
jns
mov
clc
pop
daa
sub
ds
shrb
lods
fstps
int3
js
mov
sub
clc
mov
xor
and
aas
sbb
push
adc
stos
cmp
lock
mov
or
pusha
test
mov
cmpsl
inc
mov
jnp
and
xor
cmpsb
fcomp
lods
repz
sahf
inc
inc
sub
sbb
push
adc
push
icebp
sub
mov
imul
aaa
cli
cmpsb
leave
jno
lret
in
sahf
xchg
je
or
loop
jmp
into
and
and
dec
orl
push
push
pop
pop
repz
ss
loop
adc
cmpsb
imul
jae
pop
sbb
mov
insl
repz
loopne
add
fnstsw
ljmp
movsl
inc
xor
pop
nop
pop
aad
xorb
lock
popf
xchg
cmp
sbb
inc
jae
flds
adc
lahf
cmp
test
cs
and
fmulp
xchg
cmpsl
mov
mov
imul
fdivp
or
mov
gs
mov
jge
mov
or
gs
les
inc
xor
sbbl
int
fwait
sub
add
jae
lods
adc
lock
push
js
bound
lods
enter
cmp
push
cmp
and
add
inc
xchg
mov
sub
outsb
call
js
xchg
pop
xchg
out
dec
in
push
cmp
jo
lds
push
jge
pushf
int3
lret
mov
xlat
insb
sub
dec
ljmp
dec
sahf
mov
scas
test
sbb
cmp
xor
jge
pop
ljmp
cld
daa
sub
cli
dec
loop
adc
jecxz
fldenv
cmp
ds
ret
cltd
and
in
pop
xor
push
repz
mov
gs
shll
scas
das
iret
jo
push
add
call
ljmp
sti
dec
nop
imul
ljmp
dec
mov
ffreep
dec
je,pn
jecxz
sub
loop
adc
push
pop
sub
pop
xlat
or
ret
add
or
xcrypt-cfb
cmpsl
cmpsl
dec
pop
popa
inc
jnp
adc
mov
es
jnp
jae
shlb
add
lea
mov
cmp
lret
loop
sbb
dec
xlat
aas
cmp
nop
data16
jmp
mov
mov
xlat
mov
mov
rcl
sbb
push
adc
inc
xchg
sub
and
pop
jmp
adc
out
sbb
xor
in
inc
out
pushf
jge
sub
and
xor
jnp
ljmp
pop
push
out
das
dec
mov
pop
push
stos
jp
stc
sbb
dec
data16
mov
movsb
adc
xchg
sahf
push
dec
xchg
jg
lret
test
fcomps
pop
mov
pop
jb
xlat
lods
pop
inc
js
loop
outsb
divb
adc
mov
and
test
test
loopne
lahf
mov
dec
pop
mov
stos
shrl
push
sub
das
push
mov
xchg
shlb
fdivs
xor
add
sub
sub
movsl
lds
cli
jo
test
lahf
mov
outsb
xchg
in
mov
pusha
movsl
es
cmpsl
or
imul
out
cwtl
or
jp
movsb
sbb
imul
xlat
out
sbb
sub
jl
sbb
scas
dec
jns
mov
stos
cld
mov
xlat
mov
fisubrs
inc
fucom
push
gs
sub
push
ja
push
aas
sahf
mov
fstpl
mov
jns
push
hlt
pop
imul
or
jno
xchg
loopne
xchg
xchg
es
dec
cltd
pop
cwtl
mov
xchg
ljmp
mov
rclb
cmp
mov
nop
lret
outsb
sahf
nop
rorl
loop
test
sbb
xchg
imul
mov
dec
cmova
jp
dec
mov
loope
ljmp
mov
out
aad
scas
dec
push
cmpb
push
adc
mov
mov
push
and
cwtl
ror
dec
fwait
pop
xchg
mov
pop
jbe
inc
leave
jae
and
leave
pop
ja
stos
mov
mov
hlt
loope
pop
popa
in
out
addb
push
mov
mov
cmpsl
or
ret
inc
jmp
loope
test
fwait
or
xor
repnz
xor
sub
mov
sbb
xor
aas
inc
pop
fadd
int
sbb
xchg
shrl
test
pop
adc
pushf
ds
enter
xchg
mov
or
fcoml
mov
push
dec
mov
pop
jmp
add
movsl
in
dec
setg
dec
imul
in
adc
imul
test
cs
mov
sbb
sbb
adc
fdivp
push
outsl
in
mov
dec
xchg
adc
fwait
addl
xchg
cmpsb
sub
sbb
mov
aaa
xor
xchg
push
add
lds
adc
mov
pop
and
push
out
push
cmp
aad
aas
sahf
and
and
ja
xchg
fmull
push
aas
js
sarl
mov
popf
aad
imul
int3
mov
or
popa
pop
aaa
les
fsubs
xor
jle
inc
ja
inc
daa
sub
adc
inc
fistps
ds
nop
inc
rolb
cli
ljmp
int
pop
test
repnz
push
mov
out
jmp
add
js
imull
inc
xor
xchg
cmc
cmp
jle
add
je
sub
and
and
je
xchg
push
test
cmp
sub
pop
mov
cmp
push
cmp
adc
add
int
stc
ljmp
data16
cmp
cmp
dec
dec
out
mov
mov
sbb
xchg
inc
or
adcb
sti
clc
scas
pop
ja
out
lret
icebp
aas
test
mov
xchg
lcall
add
push
outsl
stc
push
mov
out
sub
mov
mov
pusha
pop
dec
cmpsl
sahf
pop
icebp
out
sbb
sub
out
or
push
sbb
ret
xor
inc
in
or
aas
cmpsl
jb
sub
int
in
cmc
jnp
sub
mov
pop
sub
pushf
cmp
ljmp
popf
adcb
adc
mov
add
mov
shlb
pusha
cmc
popw
jg
popa
push
jne
or
mov
iret
xchg
mov
jmp
jl
adc
aas
push
out
or
jecxz
fs
inc
add
out
out
lods
push
pop
aaa
sub
jnp
jns
mov
imul
sub
pop
pop
sbb
sub
pop
adc
xor
jo
in
aam
nop
adc
or
jne
int
arpl
outsl
fcmovbe
fwait
test
scas
sub
dec
and
cltd
xchg
and
and
cs
xor
xchg
ja
lahf
mov
rcll
aaa
loopne
jnp
inc
shrb
push
lock
shl
push
and
pop
inc
addr16
sub
daa
dec
jle
add
or
cmp
cli
jne
mov
stos
or
test
pop
jae
jp
xchg
and
imul
out
rorb
ljmp
nop
sbb
fdivr
cmp
in
hlt
or
cmp
les
push
xchg
mov
cmp
dec
rcl
pop
das
sbb
mov
stos
mov
cmpb
aad
mov
push
xor
out
xor
dec
int3
xor
pop
xchg
add
ljmp
dec
jmp
xchg
test
daa
jns
out
dec
std
mov
in
fs
andb
fcmovne
cli
jmp
xchg
pushf
clc
jle
inc
mov
pop
mov
mov
or
mov
test
rolb
ds
dec
inc
add
subl
and
push
cs
push
adc
popa
arpl
loopne
hlt
lret
sub
imul
xor
out
mov
jl
push
jg
sub
mov
cmp
jecxz
sbb
insl
lea
xchg
dec
icebp
test
out
lret
imulb
push
xchg
sbb
insl
out
push
pusha
and
xchg
push
push
mov
cli
cmp
jbe
jae
test
xchg
sbb
mov
sbb
andl
rcl
jl
subl
cmpsl
jb
pop
add
icebp
or
call
mov
fildl
pop
or
push
xchg
subb
xor
sub
sqrtps
in
xchg
xor
sbb
xorl
in
fldenv
mov
cmp
faddp
mov
aam
es
jae
push
and
ja
cmpsl
jp
jb
push
mov
xor
mov
and
mov
mov
pop
dec
mov
cltd
rcll
mov
mov
push
std
ljmp
int3
pop
xor
ss
pop
data16
shrl
xchg
hlt
mov
add
icebp
cmp
fadds
rcll
or
cltd
push
adc
out
push
xchg
out
test
xchg
aad
push
in
mov
out
cltd
sti
push
add
stos
lahf
xor
push
adc
inc
add
or
xchg
mul
incb
pusha
dec
test
cltd
mov
pop
mov
arpl
ss
and
rcl
fisubs
lea
inc
pop
sbb
into
mov
xor
cmp
or
and
stc
jmp
adc
inc
repnz
cmc
insb
stos
lea
lcall
adc
add
aas
iret
into
jge
push
pop
mov
push
xor
inc
jo
ds
in
add
xchg
lret
adc
gs
scas
pop
dec
pop
test
adc
imul
mov
test
fildll
cwtl
aad
pop
xor
in
mov
repz
mov
test
data16
and
xchg
xlat
cli
sahf
sub
mov
mov
push
ret
pop
xchg
pop
or
out
inc
sbb
mov
lds
jge
mov
andb
cmp
mov
lds
lret
jo
push
jecxz
ret
sbb
lret
stos
popf
xlat
xchg
daa
adc
cmp
fildl
es
in
xchg
inc
out
sahf
imul
sbb
scas
or
leave
loopne
stos
add
ret
cmp
push
fs
pop
cmpsl
cmp
fbld
sbb
pop
stos
mov
inc
inc
mov
push
add
hlt
pop
insl
mov
push
xor
imul
movsb
fisttps
jb,pn
push
or
into
ret
ffree
push
inc
in
pop
adc
test
into
sarl
imul
outsb
dec
js
imul
int
pop
pop
jne
fstpt
dec
out
xchg
repnz
jo
out
mov
outsl
and
sbb
ljmp
mov
movlps
push
pushf
jbe
or
ret
flds
mov
mov
pusha
and
jge
sbb
xor
lock
cltd
add
push
dec
neg
sbb
dec
lds
mov
scas
jle
int
push
pop
lods
pop
adc
std
jb
add
cmpsl
out
add
lcall
pop
adc
add
scas
lea
or
and
add
or
mov
sti
push
sbb
or
mov
test
pop
imull
inc
repz
ss
xchg
jl
movsb
je
push
inc
xchg
sub
cmpsb
jo
stc
add
push
and
sbb
clc
iret
push
fsubs
enter
mov
cmp
dec
mov
xchg
cmpl
pushf
sti
aad
cmpsb
jne
xlat
xchg
jle
add
push
cmp
arpl
sarl
aam
and
daa
mov
mov
dec
rclb
adc
mov
mov
xchg
test
sub
imul
cmp
clc
sahf
in
in
dec
imul
mov
hlt
div
lds
lahf
pop
and
mov
inc
pop
test
pop
ret
inc
mov
iret
or
jp
pop
pop
in
sbb
out
scas
jne
mov
int3
adc
nop
xlat
push
xchg
lret
mov
lods
data16
fs
fsubrs
in
lods
icebp
sbb
int3
pop
inc
mov
lcall
jo
xchg
fisttps
adc
add
ror
and
sbb
push
mov
pop
dec
push
scas
xchg
inc
stc
xor
xor
or
scas
xchg
mov
rorl
cwtl
es
lahf
ss
fdivrs
cmp
fildll
xor
xor
out
pop
sbb
lret
ret
cmp
in
mov
je
fs
scas
cmp
bound
xchg
insb
call
adc
mov
filds
push
repz
stos
imul
xchg
xor
dec
dec
aaa
push
lahf
xor
shll
int
mov
inc
push
add
and
mov
or
scas
or
xchg
sub
cltd
scas
adc
sub
sahf
jne
test
movsb
cwtl
push
fwait
ljmp
xor
outsb
dec
add
lods
mov
push
mov
push
or
es
add
jmp
or
push
aas
jb
mov
imul
sbb
sahf
aad
inc
clc
test
pop
dec
adc
cmp
mov
lods
mov
mov
test
pop
mov
loopne
dec
sbb
sarl
lods
cld
mov
repz
sbb
cmpsl
sub
pop
sbb
xchg
sub
mov
test
sub
pop
jae
lods
pop
lahf
sbb
cmp
ljmp
dec
and
xchg
and
jmp
in
jns
mov
stc
xchg
jge
in
das
rcl
xor
cmp
aam
int3
sbb
imul
xor
repnz
mov
std
ret
pop
lret
or
insl
arpl
sahf
cmp
push
out
pop
imul
xor
pop
jo
sub
push
and
jo
cmpsb
xchg
pop
stos
ret
push
push
mov
in
ja
sub
push
xchg
fsts
sub
jle
xor
jno
xchg
xchg
cmp
mov
sbb
push
test
xchg
fisubrl
sub
xchg
sbb
sub
dec
mov
or
lds
push
cwtl
mov
sbb
loop
mov
adc
add
in
fmul
pop
pop
insb
iret
pop
mov
push
sbb
or
push
xchg
mov
pop
js
cwtl
pushf
mov
cmp
xchg
and
popf
std
adc
inc
xchg
push
and
or
xchg
nop
mov
adc
mov
cmp
mov
jb
xor
pop
inc
mov
pop
pop
arpl
xchg
xor
test
lock
fidivl
adc
lahf
and
rep
fildll
push
adc
adc
arpl
imul
jno
leave
xlat
add
lahf
je
or
inc
test
pop
mov
push
enter
inc
xchg
aam
cld
dec
add
outsl
call
jae
xchg
pushf
lods
aad
jmp
xchg
ljmp
outsl
sbb
xor
dec
lahf
jns
jb
fstps
mov
lret
cmp
ror
sarb
mov
aad
xchg
popf
sub
dec
dec
sbb
sub
mov
rep
push
mov
int
cmp
jns
mov
adcb
in
sbb
pop
clc
addr16
rcll
adc
fs
flds
mov
loope
rclb
lret
adc
fsub
pop
adc
arpl
adc
filds
sub
sub
inc
lret
aaa
movsl
pop
dec
sub
sbb
jle
jecxz
bound
pop
jmp
stos
mov
inc
add
mov
lods
cmc
shll
testl
mov
fs
icebp
scas
ja
add
cmp
sbb
adcl
ss
lahf
rcl
adc
test
aad
imul
pop
stos
dec
testb
popf
or
or
and
std
out
push
lcall
iret
fidivrs
pop
lcall
mov
xor
adc
in
inc
loopne
fistpl
xchg
loop
and
popa
js
mov
sti
jne
cmp
pushf
adc
and
or
in
fldcw
test
push
ss
sbb
inc
adc
push
mov
push
testb
inc
sbb
sbb
xlat
or
fisubrs
jl
fcomi
mov
fsubs
cmp
cmc
pop
cmp
shrb
xlat
stc
push
mov
inc
mov
adc
mov
mov
pop
cmpsl
lcall
stc
clc
and
lock
mov
push
mov
and
mov
shll
hlt
mov
or
xor
cwtl
popf
and
mov
cmc
call
cmpsl
adc
mov
addb
fistpl
sbb
pushf
jmp
repz
mov
cmpsb
fwait
sar
int3
imul
jl
scas
push
lods
shrl
push
adc
xchg
or
push
lret
data16
add
and
mov
xchg
mov
pop
dec
shlb
cltd
pop
ljmp
popa
add
sbb
xor
mov
and
popf
mov
ss
add
push
push
pop
cs
aam
mov
add
icebp
jecxz
mov
push
lret
negb
fs
insb
lds
lcall
iret
inc
jbe
roll
in
jle
mov
adc
ljmp
jae
ffreep
add
fcoms
sub
mov
mov
push
aad
nop
push
push
mov
mov
sub
test
sbb
mov
ljmp
cltd
push
mov
scas
cmp
pop
dec
and
adc
mov
xchg
cs
pushf
cmp
mov
cmpsb
lret
pop
inc
sbb
mov
into
add
jae
xor
sbb
xor
stos
test
scas
scas
pop
sub
fsubr
mov
jne
mov
repz
ds
fdivrs
fidivrs
pop
add
insl
pop
add
push
imul
xchg
cmc
xor
insl
mov
das
jmp
arpl
movsb
cld
not
ficoml
sbb
dec
pop
movsb
mov
mov
pcmpgtb
sbb
into
aam
xchg
insl
dec
out
sub
pop
ret
jno
mov
jnp
bound
xchg
push
in
shlb
sub
xor
pushf
or
lods
iret
xorl
jne
mov
xor
mov
test
mov
and
outsl
inc
xchg
and
mov
outsb
in
mov
out
jns
cmpsb
or
mov
adc
sbb
andb
imul
popa
clc
cmpsl
inc
ret
dec
cmp
pop
iret
shlb
pop
repz
adc
cli
ds
mov
push
aaa
xchg
push
cmp
movsb
xor
mov
cli
mov
pop
sub
lds
xchg
icebp
dec
cltd
dec
xor
testl
loopne
xor
mov
dec
jnp
xor
adc
shr
inc
std
dec
cwtl
std
les
aam
sbb
xor
pop
test
imul
push
push
push
adc
out
fstpl
push
cs
mov
mov
sbb
insl
jge
jnp
out
sbb
bnd
jb
xor
cmp
dec
push
dec
or
stc
ss
cli
inc
add
adc
sbb
out
lods
fisubl
pop
shr
sbb
jne
outsl
lret
fnstsw
mov
sub
cmp
notl
arpl
mov
cmpsl
mov
popf
loopne
pop
lahf
pop
mov
or
insb
dec
sub
test
movsb
fidivs
xchg
mov
pop
loop
int3
lret
lcall
sbb
fs
sahf
jnp
add
xor
fmul
fildll
addps
jle
fbstp
xor
imul
dec
adc
add
negl
out
insb
push
pop
fstps
lock
fs
pop
mov
push
or
fcmove
sarl
loope
xchg
inc
push
pop
or
vmread
adc
sbbl
inc
xchg
mov
fcomp
cltd
jo
pop
cmpsl
mov
mov
test
inc
dec
arpl
cmc
adc
ss
xor
fcmovu
es
cmp
dec
pop
sub
bound
push
lods
loop
outsb
add
in
and
loop
loope
mov
mov
cmp
daa
lahf
shlb
lea
xor
mov
in
test
add
xor
sub
or
jns
ljmp
cli
mov
dec
lock
jb
mov
push
sbb
lcall
js
insl
adc
dec
push
jmp
mov
pop
adc
adc
scas
bound
pop
dec
dec
faddl
mov
push
popf
add
sub
jns
jle
rolb
sub
inc
rorl
xchg
adc
cmp
dec
sub
sti
andps
lock
sub
ja
not
jae
cwtl
pop
xchg
fimull
std
fs
enter
jbe
in
xchg
shl
cmp
sub
movsl
std
cmp
bound
mov
xchg
mull
ficompl
pop
insl
xchg
mov
mov
je
addb
cmp
jge
sti
xor
ljmp
lahf
cmc
cltd
xchg
pop
cmc
int3
cs
rorl
out
fucomip
mov
add
cli
mov
test
jl
scas
lds
cmpsl
repnz
dec
mov
add
daa
lret
mov
mov
data16
aad
in
pusha
lods
aaa
andb
cmp
icebp
call
push
test
jecxz
mulb
xchg
sbb
mov
test
notl
data16
jg
insl
loop
ljmp
in
cmp
rclb
cmp
jge
hlt
sbb
mov
sbb
or
es
adcb
push
inc
adc
push
scas
leave
addr16
call
fnstsw
loop
test
mov
adc
cmp
pop
dec
cmp
movsl
cli
xor
iret
dec
movsl
leave
push
and
mov
ficoms
lock
mov
fbld
mov
xchg
mov
inc
ret
aad
mov
div
ja
mov
push
mov
es
ds
pop
jo
sbb
inc
jae
int
push
add
cmp
mov
jns
dec
rclb
leave
pop
outsl
es
jo
nop
xor
in
push
sbbl
insb
mov
cmpsb
popa
inc
mov
xchg
pop
xchg
sub
int
cmpsb
mov
insl
dec
shr
lret
push
xchg
or
lds
sub
into
mov
jb
fdivrl
push
cmp
jle
inc
test
xor
ret
fistps
and
jno
adc
cmp
or
pop
xor
pminub
shll
out
lock
inc
mov
jp
sub
in
push
jmp
and
scas
scas
pop
xchg
outsb
adcl
inc
dec
mov
sub
popa
push
das
add
adc
ret
cs
fstpt
imul
jmp
jg
and
push
xchg
lock
sahf
fadds
mov
sub
lods
aad
lret
sahf
stos
pop
jns
negl
loopne
lret
push
cmp
push
adc
leave
xor
cld
jmp
add
shrl
lock
mov
stos
xor
sub
dec
pop
push
fstl
pop
xchg
movsl
enter
or
fisttpl
lods
push
daa
sbb
shlb
push
cltd
mov
fidivrl
lcall
shl
nop
xorl
mov
mov
iret
in
test
push
repnz
ret
mov
dec
add
sbb
sub
mov
out
dec
mov
icebp
outsl
jp
dec
pop
jecxz
lea
jecxz
dec
mov
repnz
movsb
test
fwait
jnp
fstpt
add
cmp
daa
rorl
add
sahf
add
das
push
insl
fisubrl
cmpsb
sarb
adc
popa
scas
add
mov
pop
add
js
in
clc
and
sbbb
xchg
ds
leave
clc
cmp
movsb
adc
lods
fs
pop
insl
mov
xor
mov
aas
fstpt
push
dec
icebp
in
loope
lods
std
mov
out
lret
pop
es
cmp
xor
inc
inc
imul
lcall
add
add
sbb
aam
rorb
inc
xor
sbb
push
push
je
pushf
cmpb
dec
mov
mov
mov
jg
mov
dec
in
xchg
add
movb
mov
lret
aaa
icebp
and
mov
xchg
lret
cld
es
add
jmp
mov
jne
loopne
repnz
dec
xorl
or
dec
inc
scas
add
push
push
fisttpl
or
enter
pop
lahf
push
xchg
push
pushf
mov
mov
cbtw
lds
loop
cltd
sbb
mov
mov
and
aad
adc
inc
rolb
cs
xorl
sub
sti
into
call
or
xor
mov
in
arpl
ret
xlat
mov
mov
sbbl
push
pop
inc
jecxz
jnp
call
shrl
xchg
sub
and
loopne
ss
xchg
rorb
int3
scas
pop
sbb
inc
adc
pop
dec
cmpb
xchg
in
ret
fucom
repz
cmp
hlt
mov
push
lret
jl
xor
jo
jno
pop
mov
sbb
push
add
xchg
add
and
data16
jle
xchg
sbb
adc
sbb
jl
cmp
imul
call
mov
scas
stos
sarl
xlat
js
push
fwait
jnp
mov
into
out
pop
mov
scas
in
cmpsb
xchg
cmp
inc
pop
or
and
stc
sub
inc
iret
sti
lahf
adc
stos
adc
mov
out
sarl
fdivl
addr16
push
or
into
cmp
sbb
pop
imul
out
insl
out
push
inc
pop
sbb
xor
inc
sbb
hlt
sarl
stc
push
mov
ficomps
testl
mov
jp
fisubl
and
pop
mov
mov
out
sub
adc
bsr
mov
jnp
or
pop
inc
sahf
shrb
lock
sbb
xchg
cwtl
neg
push
mov
sbb
dec
dec
xchg
ret
shrb
fisubs
adc
pop
push
push
pop
data16
cmp
out
jo
cmp
pusha
ret
pusha
popa
pop
jl
cmp
ret
out
and
inc
rcr
shlb
jne
cmp
dec
dec
ja
sub
popf
mov
or
sub
xor
enter
stos
loope
sarl
dec
sbb
inc
jnp
jmp
int
int3
call
push
inc
in
mov
jle
test
inc
adc
lods
push
pop
xchg
incl
dec
xchg
pop
xchg
adc
out
ror
shll
ret
or
xor
in
jp
mov
movsb
mov
inc
add
imul
adc
mov
lcall
outsl
dec
jp
stos
push
jae
cmp
testl
lret
mov
pop
mov
sbbb
dec
or
jns
jp
xchg
fmuls
push
add
je
fwait
mov
and
pushf
mov
jnp
pop
divl
jmp
loopne
loope
stc
rclb
sbb
xor
mov
dec
icebp
loope
sbb
inc
pop
fdivrs
daa
out
rorb
pop
rcl
mov
jl
cs
test
enter
jecxz
inc
lock
daa
jmp
mov
fcmovnb
pop
clc
jnp
and
xchg
jg
pop
adc
jp
inc
cs
cmp
ljmp
push
stos
sti
in
mov
push
icebp
or
sbb
mov
rcrl
mov
lcall
and
inc
out
lods
sub
or
outsb
xchg
aad
cltd
push
adc
cmp
imul
pop
pop
je
adc
mov
in
call
int
rcrb
sbb
dec
jb
sub
loop
les
pop
test
pop
ljmp
mov
push
inc
sti
sub
js
adc
push
cmpsb
int3
xor
sub
cmpsb
adc
mov
sub
dec
inc
inc
outsb
popf
scas
mov
push
jne
enter
or
mov
mov
pop
enter
fsubs
cmpsl
out
cmp
int
xchg
sub
or
push
out
imul
inc
cmpsb
shll
andl
pop
cmp
test
mov
mov
insb
test
out
sub
movsl
xor
mov
add
stc
repz
mov
lods
or
xchg
hlt
mov
jmp
les
jo
mov
mul
arpl
test
lods
sbb
ret
movsl
popf
arpl
push
sarl
push
fldl2e
movsb
adc
pop
data16
test
dec
jbe
mov
loop
pushf
rolb
cmpsl
inc
dec
test
cwtl
int
loope
ljmp
cmp
jnp
pop
xor
loopne
mov
nop
js
add
jp
mov
aas
xor
cmp
int3
push
pop
xlat
mov
mov
sahf
lods
jmp
js
sahf
lds
add
jbe
sbb
lds
ljmp
sbb
pop
adc
cltd
jl
imul
sbb
or
push
insb
pop
add
or
pop
in
xchg
pop
leave
and
xchg
xchg
and
inc
lods
dec
jnp
cli
cli
notl
push
inc
lret
fdivrl
jmp
inc
inc
or
in
sub
imul
xor
sbb
push
rorb
sub
das
insl
aaa
lds
cltd
movsb
outsb
jmp
stc
or
imul
insl
into
aas
inc
aas
adc
pushf
pusha
or
sbb
sbb
mov
aam
sub
xchg
rclb
sti
movsb
loop
les
sbb
push
daa
xor
mul
sub
sbb
insl
pop
sub
xchg
divb
imul
pop
mov
push
outsb
or
dec
add
cmpsl
or
cmc
bound
mov
xchg
inc
lea
cmc
dec
sub
sub
pop
cmp
pop
scas
shll
xchg
vmread
shll
inc
in
inc
je
dec
mov
ss
jecxz
cmp
aas
mov
lods
cmpsb
and
inc
call
mov
xor
xchg
repz
repnz
cmp
andl
sbb
sbb
xchg
nop
fistl
push
sbb
jle
sub
and
out
test
dec
dec
in
roll
jge
jo
ds
orl
xchg
push
and
mov
push
add
pop
int3
ret
xlat
adc
ds
sahf
sbb
mov
lret
rclb
das
cmp
pop
xlat
insb
out
lods
add
aam
cld
xor
popa
push
jns
into
fcoms
dec
lods
jge
cs
dec
js
out
mov
outsl
faddl
leave
ret
into
jnp
sub
sbb
push
dec
jno
pop
lcall
xor
daa
testl
cmp
sub
out
test
xchg
jp
fbld
xchg
jb
push
mov
sbb
test
add
aam
push
or
adc
lret
jge
je
imul
adc
cmpsl
push
lcall
out
gs
in
dec
jno
mov
enter
fwait
mov
push
fisttpl
cmpsl
xor
add
sub
jb
imul
push
sub
xor
or
adc
lret
adc
jle
pop
pop
cld
sbb
lock
int3
sbb
mov
stc
int3
jo
push
cli
pop
push
mov
inc
aaa
mov
test
in
lcall
push
mov
mov
test
xor
divl
out
or
ret
in
mov
out
cld
mov
ss
mov
xchg
pop
or
mov
xor
stc
xchg
fldt
mov
shrl
fisubrl
sti
jl
add
cmp
pop
inc
pushf
dec
jmp
xor
or
mov
and
je
xchg
in
push
jmp
jo
cmp
mov
or
add
sbb
jno
cs
sbb
sub
insl
sbb
subl
insl
in
neg
dec
lea
orl
scas
push
cmp
lock
jne
shrl
xlat
inc
pop
outsb
sub
inc
test
pop
mov
jb
push
lcall
scas
push
scas
popa
xchg
pop
dec
xchg
and
test
jb
xor
xchg
push
adc
rclb
jb
dec
xchg
repnz
xchg
sbb
xor
sub
cmp
scas
mov
dec
movhlps
pop
pop
sbb
cmp
je
sub
push
aas
rolb
xor
adc
adc
push
xchg
imul
pop
es
cli
out
jp
inc
imul
inc
pop
scas
out
inc
adcb
pop
dec
stos
rolb
cmpsl
sub
pop
int3
rcl
into
rcll
jbe
lcall
lret
mov
xchg
adc
sbb
es
mov
mov
pop
jg
fsubr
sbb
jns
inc
hlt
lods
inc
es
adc
and
outsl
mov
out
fsts
fldl
mov
xor
insl
shrl
jno
mov
pusha
fsub
pop
jbe,pt
es
clc
xchg
stos
lock
mov
xor
or
stos
shr
dec
icebp
fisubl
and
repz
scas
xchg
push
inc
popa
sbb
xchg
jno
dec
int3
aam
push
sbb
mov
aam
mov
adc
pop
inc
popf
push
mov
rcr
ljmp
xchg
push
mov
mov
push
negl
test
push
scas
out
pop
push
mov
mov
xorb
leave
out
lods
mov
mov
inc
insb
xchg
imul
cwtl
and
pop
nop
xor
add
xor
jle
pop
push
test
in
and
pop
dec
ss
arpl
iret
in
xchg
xchg
sbb
xchg
pop
sbb
test
pop
ds
push
push
jecxz
adc
mov
test
int
mov
push
mov
cmp
ss
xor
push
shlb
dec
cmpsl
insb
psrad
int
das
inc
out
and
push
test
rcll
fisubrs
cli
fcmovnbe
sbb
and
outsl
out
orl
arpl
pop
mov
sub
push
mov
inc
es
std
dec
jecxz
xor
out
inc
loope
mov
jns
dec
out
imul
lds
fnstcw
in
into
fwait
jmp
or
pop
test
dec
mov
jns
testb
repnz
inc
mov
aam
push
out
mov
pop
rcrl
mov
jecxz
imul
sbb
mov
pop
cwtl
loop
je
fsubl
sbb
mov
mov
lds
or
in
mov
add
lret
mov
mov
ret
mov
push
dec
dec
clc
xchg
das
xor
mov
cmp
add
xor
cmp
jno
movsl
bound
aaa
mov
sahf
cmc
loopne
push
sub
and
mov
fstl
add
adc
cmpsb
jmp
and
add
mov
test
pop
dec
push
dec
ss
pop
xor
test
push
push
test
inc
jns
test
fwait
stc
out
pop
shll
cmp
mov
repnz
inc
leave
pop
jbe
test
mov
lcall
xor
rorb
sub
test
aad
mov
subb
iret
sbb
adc
loopne
mov
inc
lds
adc
in
inc
mov
cmpsb
dec
sub
insb
in
xchg
jno
xchg
cwtl
int
stos
push
sahf
add
inc
push
pop
iret
outsl
xor
leave
or
cltd
pop
in
leave
in
fisttps
fadd
mov
cmpsb
xchg
cmpsb
icebp
loopne
pop
and
rorb
cmp
iret
jae
mov
xchg
mov
mov
mov
cwtl
and
mov
fnstcw
push
push
adcb
adc
into
pop
pop
push
pusha
bound
mov
mov
hlt
into
lds
insl
jmp
or
jl
enter
fiadds
leave
xor
inc
aaa
cmc
cmp
je
push
popa
sub
out
daa
cmp
cmp
clts
pop
nop
jge
sub
lods
xor
jmp
sub
push
jge
xor
pop
jns
dec
push
jbe
mov
cmp
dec
mov
xor
jge
xchg
loopne
andb
lret
cld
pop
je
aas
xchg
clc
xchg
outsb
fdivrs
cmp
xchg
jg
dec
cmp
pushf
pop
jge
xchg
mov
iret
test
dec
nop
aad
dec
pop
sbb
adc
pop
das
push
jb
jmp
rolb
and
mov
inc
mov
inc
in
jge
and
cmpsl
je
add
pushf
push
or
push
in
in
pop
sub
xchg
jle
and
je
popf
push
inc
pop
std
xor
idivb
fadds
dec
or
ret
jno
movsl
cmp
out
and
mov
jno
testb
popa
xchg
sub
fadd
dec
adc
dec
pushf
es
jmp
and
dec
mov
mov
clc
add
cli
clc
into
pop
xchg
imul
mov
pop
dec
out
push
cmp
sub
sub
addr16
stc
pop
out
popa
adc
in
mov
cmpsl
mov
and
push
orl
pop
mov
xlat
ret
fnstenv
pop
out
push
imul
cmp
shl
cmp
mov
jp
xor
pop
call
pop
nop
fidivrl
xor
or
pop
stc
jp
jbe
push
jne
add
outsl
cmc
cli
or
push
sarl
daa
pusha
jp
rolb
data16
cmp
or
xor
pop
mov
out
fcomps
jmp
xchg
cmc
stc
mov
pop
fistpl
loopne
inc
je
jbe
in
aam
pop
jp
mov
sbb
push
jge
and
aam
or
enter
xlat
jb
pushf
aaa
cmp
adc
inc
mov
imulb
adc
and
outsl
inc
xor
gs
cltd
pop
add
adc
jbe
adc
push
push
mov
inc
lods
mov
sbb
scas
in
cmp
ret
dec
inc
out
jle
cli
sub
loop
iret
cmp
xchg
inc
addb
fs
hlt
std
stos
and
xchg
hlt
cltd
mov
cmp
fsts
push
push
sbb
adc
lods
stos
dec
movsb
cmp
inc
mov
xor
xor
daa
inc
inc
jae
xor
sbbl
bound
dec
loope
mov
xor
push
aam
add
outsb
sub
push
add
push
loop
push
dec
add
sbb
or
int3
cmp
sub
push
and
in
mov
xchg
aad
adc
push
jl
loope
jb
negl
push
rolb
aas
out
pusha
int3
sbb
imul
sub
push
mov
jge
loope
lods
iret
push
sub
pop
mov
xchg
push
pusha
ds
and
loopne
std
pop
sub
pop
jg
xor
inc
cmp
jbe
pop
ror
in
cmovge
les
dec
decl
pop
js
mov
movsb
fisubrs
lcall
clc
enter
dec
and
movsb
es
add
inc
loopne
clc
adc
jns
gs
insl
lea
inc
pslld
cli
lret
jecxz
and
sbb
test
fistpl
ret
mov
lahf
sbb
xchg
sbb
aam
sub
into
push
jmp
mov
sbb
dec
pushf
jns
movsb
jno
nop
pop
inc
mov
fildll
cmp
into
and
stos
enter
mov
mov
mov
leave
sar
sub
test
dec
loope
js
fnsave
rcr
out
xchg
sub
push
loope
loopne
je
mov
dec
test
imull
mov
mov
sub
lea
adc
mov
ljmp
rcll
movsl
pop
sbbb
sub
and
sub
pop
outsl
pop
dec
xor
fdiv
push
or
mov
cmp
sbb
sub
loop
mov
aaa
rcl
inc
cmpsl
lahf
adc
js
stos
daa
adc
loop
xor
sbb
or
mov
mov
xchg
mul
cmp
scas
and
inc
lahf
loop
push
out
je
jge
push
in
push
movsb
and
jo
in
mov
int
add
cmp
pop
loope
push
or
nop
jno
lea
sub
mov
mov
leave
adc
dec
dec
das
ret
popa
imul
testl
je
add
mov
aad
scas
xchg
xor
mov
push
cmc
or
shll
pop
je
sbb
xchg
test
cld
cmp
gs
cld
and
orl
and
sbb
rclb
cli
pop
loopne
pop
insl
push
adc
punpckhbw
dec
ljmp
out
jno
mov
or
lock
scas
mov
cltd
push
inc
cmpsb
mov
iret
xchg
testl
jge
loope
in
fs
add
sahf
ljmp
mov
cmp
lods
subb
in
subb
ret
icebp
sbb
mov
scas
fld1
lahf
fistpll
fsubl
testl
mov
movsb
sub
outsb
sti
andl
scas
aaa
mov
lods
sub
scas
les
dec
lea
push
jmp
xor
lods
insl
adc
sbb
leave
mov
mov
jp
lock
jns
push
mov
and
rorb
jae
pop
aaa
mov
push
movsb
adc
popf
nop
out
stos
inc
adc
mov
jne
lods
mov
fwait
and
push
mov
and
cli
rcll
pop
daa
mov
adc
mov
sub
sbbb
xchg
sub
xlat
adc
jae
add
mov
lds
inc
mov
or
std
loope
mov
or
jns
push
repnz
popf
movsb
add
lcall
jp
sbb
pop
push
jne
and
add
push
lods
cmp
int
sbb
mov
pop
repz
imul
cld
ljmp
in
pusha
pop
pop
in
insl
push
jmp
mov
jbe
push
jne
popf
aad
into
sub
test
cmc
add
cli
adc
jmp
aaa
adc
out
jg
pop
sub
outsl
push
stc
push
stos
sbb
rcll
inc
cmc
ljmp
jecxz
xor
das
in
cltd
xchg
fs
mov
in
addr16
jmp
sub
xchg
arpl
loop
mov
pop
ljmp
mov
outsb
jg
jecxz
cmp
int
xchg
repnz
inc
sbb
mov
add
mov
out
mov
pop
mov
push
movsl
pop
leave
roll
xchg
cli
out
xor
sub
rcll
test
or
pop
sbb
push
aam
cli
and
or
mov
out
out
or
idivl
inc
xchg
adc
sbb
hlt
in
aas
ds
dec
sbb
fld
lret
xlat
jge
mov
cmp
cltd
fiaddl
or
and
jae
pop
pop
daa
fwait
push
xchg
mov
sbbl
repnz
inc
pusha
movsl
push
or
dec
ss
movsb
inc
mov
add
in
jno
mov
out
fmull
xchg
in
dec
add
xchg
inc
lods
pop
dec
rep
mov
loope
pop
add
jb
mov
repz
sbb
mov
scas
fwait
dec
ja
inc
insl
dec
xchg
aam
call
mov
outsl
loop
cs
icebp
pop
repnz
iret
jmp
sub
aaa
gs
aas
pop
cmc
outsb
pop
cmpsl
cmp
fimull
sbb
push
mov
int
fadd
inc
add
jbe
mov
jno
or
push
fs
clc
shr
mov
pop
sbb
and
mov
pop
cmp
or
lds
jge
jb
shrl
add
jge
leave
mov
and
xor
iret
loope
sahf
push
xor
out
mov
int3
shrb
int
vmovss
push
mov
cwtl
push
imulb
vptestnmq
out
es
shll
insb
inc
add
pop
pop
pop
push
pop
sub
fstpt
loop
mov
fsub
vldmxcsr
lds
xchg
flds
jae
sbb
push
push
int
dec
sub
push
or
push
lret
cmp
shlb
or
or
inc
add
sub
xlat
cmp
lret
stos
push
popf
popf
test
sbb
mov
jg
adc
insl
lods
scas
ret
push
sub
adc
imul
mov
leave
mov
jge
cli
je
in
jp
fs
jecxz
ret
mov
mov
lods
ljmp
adc
push
or
aas
adc
inc
jo
mov
mov
loop
int3
daa
mov
sub
stc
pushf
repnz
es
jae
pop
adc
ret
xorb
cs
push
lcall
sbb
push
xor
clc
jnp
dec
out
lcall
sbb
test
clc
roll
sarb
lret
jp
imul
jae
fsub
popf
jo
pusha
jns
repnz
ss
adc
push
sbb
jmp
mov
and
mov
dec
adc
test
in
dec
int3
enter
loope
ret
pop
inc
js
adc
loop
jmp
mov
push
out
cmpsb
lret
mov
or
lret
inc
jecxz
ljmp
and
cli
lods
ja
mov
and
adc
or
pop
movsb
xorb
cmpsb
mov
decb
push
inc
or
and
call
fstps
fnstsw
rolb
cwtl
stc
xorb
ja
jo
mov
lock
xor
add
inc
jnp
je
mov
lock
les
cmpsl
adc
add
movsb
jnp
xor
sub
ficoml
addb
stc
push
cmp
pop
out
mov
jns
testb
xor
jecxz
fs
dec
dec
pop
jo
inc
repz
jbe
add
mov
je
sub
jp
xlat
and
add
fdivl
jo
out
mov
or
fimull
inc
mov
dec
and
jb
xchg
jle
pop
pop
lret
repz
test
xchg
add
mov
sub
test
jmp
inc
pop
and
mov
mov
jb
out
fs
add
std
fbstp
sbb
test
dec
xchg
inc
or
jl
push
loope
iret
mov
mov
xchg
notb
jb
cld
out
add
jne
mov
push
push
pop
push
lea
mov
xchg
push
adc
clc
sar
out
into
ret
rol
shrl
cmpsl
incl
cltd
dec
mov
adc
test
es
in
xor
loope
pop
and
lret
dec
pop
lea
movsl
shlb
out
fstl
sub
mov
js
out
dec
mov
mov
stos
movsb
out
xchg
and
enter
add
andb
rcll
addr16
or
daa
pop
mov
sbb
popf
lahf
jge
shrb
cmpsb
ja
xor
stc
jge
pop
jecxz
mov
and
lods
mov
mov
or
mov
test
xchg
fsubp
sub
and
sbb
or
stc
loopne
inc
frstor
clc
sub
cmp
data16
mov
xchg
and
int3
mov
mov
cmp
xor
and
cltd
jmp
in
into
xchg
movsl
or
push
push
pop
xor
add
sub
push
enter
daa
loope
loopne
pop
ljmp
and
or
repnz
xchg
outsl
mov
sbb
cmp
fwait
adc
pop
sub
cs
and
xchg
cmp
popf
push
subl
aam
inc
sbb
pop
mov
sahf
data16
stos
int
and
inc
out
add
fisttpl
xor
ror
mov
sbb
push
addr16
xor
mov
mov
add
adc
inc
push
xor
pop
nop
dec
shrl
jb
push
and
gs
test
aam
ja
cli
mov
les
add
xchg
fsubl
inc
int3
repnz
sub
add
adc
pop
pop
dec
and
dec
xchg
pushf
test
mov
flds
imul
addr16
mov
and
imul
cmpsl
fldpi
stc
popa
sbb
mov
push
inc
loopne
mov
imulb
andb
add
adc
mov
pop
frstor
enter
push
std
xor
inc
push
inc
int3
frstor
test
hlt
pop
sarl
adc
rolb
insl
ret
popf
or
dec
jecxz
pop
push
push
out
ja
dec
lea
int
pop
shl
fiaddl
enter
lds
xor
xchg
mov
imul
lcall
test
jno
sbb
pusha
lods
mov
bound
adc
xor
dec
cmc
push
jmp
mov
imul
mov
mov
inc
jmp
mov
jo
push
xor
jnp
mov
flds
and
imul
daa
dec
and
and
pop
mov
js
xlat
out
out
lret
nop
add
pop
push
adc
mov
std
push
xor
sti
jo
stc
aaa
sbb
enter
push
movsb
mov
decb
or
imul
repz
scas
aam
andl
fs
add
fcoms
cwtl
repz
lods
mov
xchg
push
push
add
test
xor
punpckhwd
fistl
mov
fiaddl
lods
mov
jmp
fdivrl
movsb
fildl
push
fcoms
pop
pop
sarl
repnz
sub
out
jecxz
xor
or
push
sti
push
lcall
push
pop
ljmp
push
xor
scas
dec
jl
daa
cmpb
pusha
scas
shrb
sbb
xchg
decb
mov
negl
in
rol
mov
jbe
dec
inc
pop
pop
inc
testb
pushf
lods
fdiv
xor
xor
jp
in
insb
lods
add
ret
imul
hlt
je
sbb
cmp
adc
adc
mov
mov
inc
xchg
call
leave
std
jno
enter
call
jmp
xor
movsb
and
lret
dec
ss
mov
test
lock
sub
dec
addr16
cmp
push
gs
mov
sbb
into
adc
clc
sbb
mov
xor
cmpsb
dec
sahf
data16
sarb
out
push
pop
xchg
idivl
es
outsb
dec
les
pushf
ror
cmp
jp
mov
mov
and
add
mov
dec
stos
cmc
cmp
pushf
sarl
pop
loop,pt
js
sbbb
rclb
mov
and
rorb
mov
xchg
push
movsl
imul
mov
dec
leave
fidivl
sub
adcl
adc
cld
dec
nop
nop
dec
sbb
fwait
sub
mov
or
test
pushl
jp
call
push
and
mov
shll
xor
mov
lock
aam
jbe
inc
or
cmp
leave
xchg
and
mov
pop
data16
xchg
les
pop
and
icebp
loopne
mov
out
jb
ljmp
and
sbb
mov
pop
dec
aas
adc
incl
adc
push
loope
lock
adc
std
xchg
shll
aas
inc
mov
push
cmp
mov
jae
out
cld
fs
repz
adc
mov
dec
test
addr16
cli
cltd
clc
inc
sub
pop
xor
lahf
ror
test
js
jns
es
add
ja
xlat
cmp
dec
mov
mov
cmpsl
cld
jb
pop
sbb
clc
inc
xor
ret
testl
imul
mov
or
es
push
jmp
dec
xchg
jno
cmp
js
sub
aad
out
faddl
sub
fs
fdivrl
sbb
push
movsb
aaa
movb
and
sbb
mov
xchg
test
adc
and
jne
pusha
jp
outsl
or
cld
mov
xor
pop
pusha
dec
stos
adc
int
out
loope
sub
lods
jl
and
std
pop
xor
sarb
inc
push
loopne
inc
subb
imul
pop
ret
push
sti
xchg
dec
mov
adc
or
mov
enter
mov
dec
jbe
int3
jl
mov
lea
adc
arpl
jno
in
xor
mov
loopne
and
inc
dec
and
gs
iret
addl
mov
dec
sti
push
js
cmp
pop
inc
pop
popa
sbb
aas
lret
in
pop
cmp
adc
pop
mov
aas
jg
or
xor
popf
popf
bound
or
sub
add
adc
hlt
loop
inc
into
dec
xchg
sub
mov
test
fmuls
movaps
ds
ds
xchg
fldl
fs
inc
dec
sbb
adc
jg
cmp
cmpsb
in
jg
lret
cmpsb
aam
xor
dec
in
push
xchg
mov
push
dec
lea
xchg
fs
xor
push
push
enterw
cmp
shll
es
sti
adc
sub
insl
cli
movsb
movsl
mov
xchg
popa
fimuls
in
jle
imul
adc
lods
pop
lock
sbb
inc
fnstenv
gs
push
and
pusha
jns
pop
cmp
sbb
pop
test
les
popa
jb
mov
leave
clc
fistpll
jge
xchg
push
sbb
aas
rcrl
jne
inc
daa
enter
lahf
mov
ffree
gs
imul
push
loop
cmp
aaa
xchg
sub
sub
jle
dec
cwtl
sbb
stc
adc
nop
je
cltd
pop
repnz
xor
adc
addb
add
xor
and
mov
test
xchg
insl
mov
hlt
push
stc
arpl
adc
xchg
cmp
cltd
mov
cld
outsl
dec
adc
jmp
cs
cmpsl
pop
lcall
pushf
hlt
das
mov
loopne
cmp
enter
pop
aas
icebp
jge
std
lret
dec
subl
jl
mov
lods
mov
lahf
mov
mov
inc
loopne
cmp
add
cltd
dec
pop
js
roll
fchs
aaa
movsl
mov
lcall
or
mov
mov
lahf
daa
cmp
jae
test
jge
pop
test
dec
ret
insb
arpl
lock
das
stc
fwait
cwtl
push
mov
ljmp
hlt
rorl
jne
mov
adc
xchg
call
aad
in
out
mov
xor
in
fidivrs
cmpsb
les
inc
jmp
in
shrb
leave
mov
xor
add
in
jecxz
leave
call
call
mov
xchg
adc
xchg
scas
jne
sbb
bound
pusha
jno
jmp
add
notl
mov
add
add
mov
pop
pop
jmp
sarb
sahf
jns
daa
cld
mov
jne
cmp
out
xchg
mov
push
out
jecxz
test
push
or
inc
ds
shlb
xor
test
lret
xchg
insb
inc
outsl
hlt
jl
pusha
jae
loope
gs
shr
mov
push
lret
push
pusha
enter
shl
fcomps
or
outsb
add
cmc
fnstsw
int
hlt
lock
pushfw
cmp
push
fldcw
mov
rol
adc
push
mov
rcrb
pop
test
adc
inc
sub
xor
inc
ret
shll
testb
mov
pushf
mov
push
sub
loop
or
push
pop
jmp
jns
pop
or
movsb
push
mov
add
ss
xor
push
mov
sahf
leave
dec
imul
in
add
cmp
frstor
cwtl
sub
mov
cli
out
and
shlb
jne
xchg
xor
push
int
mov
lds
inc
and
cmp
cmp
std
inc
mov
test
loopne
bnd
jns
cwtl
jge
add
les
sbb
out
jl
loop
cmp
ja
icebp
nop
fdivr
clc
mov
xor
pop
push
sahf
clc
cmp
jge
cwtl
pop
cld
xchg
movsl
iret
ljmp
dec
sbbl
mov
je
xor
jle
loope
lea
lods
jae
push
shll
ds
stc
mov
insb
daa
inc
or
cmpsb
and
or
fisubrs
stc
in
mov
sbb
lods
hlt
sbb
stc
xchg
shlb
jle
in
movsl
inc
push
mov
mov
dec
jnp
icebp
xlat
mov
sbb
fimull
cmpsb
cmp
jo
mov
dec
jmp
mov
push
repz
in
lds
fiaddl
dec
aad
jbe
movl
test
lret
lock
iret
bound
jne
mov
test
sub
icebp
gs
andl
adc
or
lods
out
sub
in
loope
addl
fidivs
das
in
js
and
jae
nop
jg
movsl
mov
mov
pop
fidivl
pusha
imul
sub
or
mov
fidivrl
cmp
jp
xchg
xor
test
mov
sub
ds
xchg
pop
xor
mov
daa
mov
jecxz
jge
rorb
mov
dec
ret
rcrb
add
aas
cwtl
xchg
xchg
imul
repz
scas
mov
pusha
jp
dec
and
lcall
fisubs
adc
outsb
xor
fcmovbe
push
daa
pop
mov
pushf
sbb
shll
cs
inc
mov
xchg
cmpsb
sbb
hlt
sbb
xor
sahf
pop
arpl
rcrl
jp
adc
mov
push
add
movsl
adc
mov
jmp
ljmp
aam
aam
push
lcall
adc
fwait
xchg
and
mov
inc
sti
sub
int3
push
push
pop
pusha
je
imul
leave
and
pop
dec
push
das
sarb
cltd
push
decb
xchg
imul
test
gs
and
sub
aas
jmp
push
lock
ficompl
outsl
mov
insl
mov
cltd
bound
arpl
call
inc
xchg
bound
enter
imul
or
out
lock
lods
jno
repnz
cmp
imul
or
or
imul
xchg
adc
pop
and
cmp
pop
fld
cmp
adc
es
mov
sub
in
call
add
adcl
xor
loope
enter
dec
sub
outsb
sti
push
test
orb
jmp
shll
xlat
insb
roll
mov
xchg
ss
test
jne
xchg
xchg
out
outsl
insb
pushl
xlat
hlt
pop
out
imul
addr16
cmc
clc
je
inc
or
xor
movsb
mov
rorb
mov
xor
inc
fdivrp
lea
roll
mov
mov
shll
mov
jae
movsl
dec
cmp
push
cmp
popa
pop
jb
jbe
in
in
fsub
jle
xchg
stos
lret
lret
sti
dec
jmp
imul
es
sub
sub
pop
ret
dec
jb
pop
pop
repnz
test
packuswb
pusha
nop
mov
sbbb
daa
cs
movsb
dec
push
mov
dec
push
addr16
dec
xor
adc
and
ss
cmp
dec
lds
adc
gs
lahf
call
jp
mul
dec
dec
fwait
sahf
mov
xor
mov
add
cli
inc
or
mov
mov
mov
shlb
stc
pusha
fcoml
dec
lea
dec
cmp
sti
gs
bnd
mov
out
aas
outsl
dec
testl
rorl
jne
shlb
jg
out
cmp
add
xchg
clc
jne
dec
scas
mov
nop
cmp
jb
pop
cmp
out
pop
jne
jns
xchg
stos
xchg
loop
sub
ss
aam
pop
roll
sbb
push
push
pusha
das
cmp
sbb
inc
or
notb
fisttpl
lahf
mov
dec
jl
das
js
mov
outsl
sbb
xlat
sbb
cmp
sub
mov
add
fucomi
fstps
sbb
cwtl
inc
jl
ret
cmc
push
repz
lock
pop
int3
and
cltd
mov
or
adc
add
mov
mov
enter
push
mov
ja
push
jecxz
int
and
push
mov
and
mov
or
sahf
outsl
fwait
mov
adc
push
popl
pop
imul
lcall
mov
sbb
rclb
test
outsl
dec
out
jnp
or
cmpsl
js
jle
pop
mov
in
fwait
insb
adc
in
lcall
outsl
mov
dec
ss
pop
pushf
push
test
sbbl
test
jno
push
ljmp
xorb
push
cld
ja
pusha
fs
and
orl
stc
subb
cmp
or
pop
or
mov
jbe
dec
shrb
mov
hlt
insl
bnd
adc
out
lcall
ja
cmp
inc
ja
xchg
es
inc
in
adc
sbb
jmp
mov
push
andb
mov
mov
jle
xor
sub
inc
mov
int3
lea
xor
adc
packuswb
pop
jnp
daa
mov
adc
addr16
ss
push
push
mov
nop
into
add
sbb
pop
lock
and
iret
testb
inc
mov
jle
or
in
mov
lcall
lea
cwtl
jae
out
inc
push
sub
inc
repnz
pop
adc
in
xchg
fwait
xchg
lock
mov
and
or
repnz
xor
jmp
insl
repz
movsb
pop
nop
mov
xchg
fidivs
cmpsb
mov
push
int
jns
aas
add
adc
adc
stc
jle
add
dec
mov
or
xchg
mov
sub
lcall
or
test
and
push
jp
fs
mov
les
sub
incl
cld
sarb
xchg
pusha
aaa
loope
in
jecxz
push
icebp
hlt
and
mov
aam
cmpsl
jecxz
xchg
les
xchg
aas
pushw
lds
sub
and
fsubs
les
das
loopne
pop
test
data16
lock
mov
stos
lds
aad
jb
not
mov
mov
mov
dec
sub
test
and
rclb
pop
sahf
push
mov
push
sahf
push
inc
and
mov
inc
mov
inc
mov
inc
xchg
xor
cli
sar
imul
popf
push
test
inc
movsl
adc
enter
popa
xor
call
fisubrl
jno
push
pop
scas
xchg
push
mov
sbb
xor
mov
mov
and
dec
pop
out
mov
adc
and
adc
into
inc
bound
ds
mov
add
testb
aad
add
sbb
pop
loope
mov
xchg
push
and
loope
arpl
popa
inc
mov
mov
icebp
inc
popl
jo
dec
and
push
insl
mov
push
add
insb
adc
aas
xchg
into
and
push
mov
and
push
sub
stos
xchg
arpl
addb
outsl
mov
ja
pushf
lret
mov
mov
mov
in
mov
sar
adc
dec
enter
test
out
ffreep
mov
sub
xor
in
xor
jae
repnz
push
mov
addb
cli
stos
into
mov
add
dec
loop
popa
pop
repz
xor
iret
pop
or
pop
pushf
cmp
mov
jle
pop
and
stos
out
cmp
fdivl
push
xchg
mov
pop
cmp
pushf
cmp
lcall
ret
pop
jo
fidivl
xchg
mov
ret
xchg
or
dec
mov
pop
sbbb
imul
xor
hlt
pop
lcall
jnp
pop
dec
pop
mov
mov
in
inc
inc
fnsave
fistpll
call
push
xor
ss
nop
inc
dec
adc
insb
ret
in
je
sub
popf
lahf
addb
jmp
mov
mov
popf
mov
int
mov
adc
sub
jb
xor
cld
fiaddl
lock
mov
sub
pushf
xor
jo
xor
cli
adc
clc
xor
ffreep
mov
and
mov
aad
cmpsl
inc
daa
and
clc
dec
repz
dec
or
pop
aaa
add
sti
cmp
mov
jl
pop
icebp
or
insb
stos
sub
pushf
xor
test
xchg
ja
or
divl
inc
mov
orb
sbb
aaa
xchg
mov
lock
lods
lods
pop
iret
jnp
sbb
pop
xlat
lock
lods
scas
scas
lret
daa
adc
adc
cwtl
std
dec
push
rcrl
xchg
xor
js
int
fadds
sbb
sub
sti
push
xor
out
add
sti
ror
cmp
imul
adc
sti
sub
stos
orb
and
pushf
aas
sub
into
jmp
outsl
push
dec
mov
jae
cmpsl
and
pop
mov
das
repnz
sarl
pop
cmp
pop
inc
movsb
std
scas
push
lcall
int
adcb
xchg
adc
cltd
and
jno
inc
ffreep
mov
mov
cmp
jecxz
mov
jle
mov
outsb
sbb
into
fcomps
mov
insb
xor
adc
push
sub
or
leave
arpl
cs
sbb
and
insb
dec
jecxz
mov
adc
icebp
xchg
in
cltd
or
xchg
cld
dec
sbbb
xor
xor
sti
fstpt
sbb
popa
jnp
popl
mov
sub
push
repnz
lcall
push
cltd
pop
push
pushf
lods
out
ss
xchg
imul
cmp
out
movsb
ss
sbb
sbb
pop
hlt
orl
or
pop
cld
pop
xchg
cwtl
mov
in
push
jo
jl
imul
iret
lret
call
icebp
ret
sub
sub
mov
in
mull
jno
or
or
int3
and
setne
cmp
fmuls
jl
data16
into
hlt
dec
fldenv
dec
mov
sarb
adc
or
mov
sahf
adc
adc
push
xchg
xchg
mov
fisttps
push
mov
movsl
jae
xor
aam
loopne
jno
repnz
jp
push
andb
fistps
dec
xor
lea
ret
ds
sar
lea
xchg
iret
mov
icebp
adc
mov
or
inc
adc
push
pusha
mov
iret
dec
cmp
or
movsl
sub
push
iret
adcl
mov
hlt
jae
rol
iret
adc
movsb
lahf
sub
mov
bound
outsl
and
pop
repz
rclb
jge
negb
pop
dec
push
jo
shll
jne
sub
adc
sahf
data16
xor
sahf
inc
sub
in
mov
dec
add
xchg
adc
mov
add
dec
fwait
jno
push
pop
mov
inc
mov
sub
stos
in
jb
mov
pop
cmc
pop
or
sahf
inc
jl
mov
fldcw
icebp
sbb
loope
mov
outsl
mov
or
loop
movsb
pop
call
inc
and
incb
xchg
js
lods
mov
push
loope
dec
cmp
add
mov
sub
mov
adc
out
xchg
data16
pop
and
sbb
and
xor
adc
imul
jmp
jne
stos
mov
popf
xor
push
or
jmp
and
sbb
fwait
and
pop
fimull
sti
lret
ja
mov
imul
xchg
add
inc
and
inc
mov
and
and
jae
jne
mov
js
cs
push
cltd
orb
xchg
xor
inc
jbe
iret
or
cmp
loope
xchg
push
sbb
movsb
pop
cmc
xlat
fwait
pop
mov
cmpl
mov
inc
data16
test
fdivs
jno
gs
mov
mov
int
les
notb
sub
mov
inc
mov
mov
int
push
fcoms
cld
pop
jge
cld
jne
inc
je
mov
mov
popf
mov
imulb
loop
sbb
dec
inc
arpl
loopne
arpl
xchg
out
and
in
mov
cmp
pop
inc
add
jp
push
in
out
mov
xchg
jbe
loop
dec
jo
mov
inc
test
ja
pop
fnstenv
sbb
inc
notb
pushf
loop
loop
cmp
fisttps
dec
mov
push
push
call
pop
not
aad
subb
rcrb
add
push
xor
push
jo
pushf
inc
cmp
stos
clc
in
and
shlb
cmpb
popl
or
imul
mov
push
aas
pop
sub
mov
or
pop
adc
mov
jmp
jno
cli
shlb
lea
or
mov
stos
jge
push
bound
orb
cmp
out
out
mov
dec
mov
mov
jmp
ret
cmpsb
out
and
and
jecxz
push
int3
cli
in
push
mov
sub
dec
cmp
cmpl
data16
adc
adc
fwait
js
iret
movsl
sbb
cmp
mov
lock
shll
cmp
add
xlat
mov
pop
add
mov
in
dec
cmpsl
xor
push
ja
push
adc
shll
les
inc
jo
inc
movsl
jp
pushf
xor
aam
inc
cmp
fcmovu
inc
test
adc
dec
out
pop
dec
gs
pop
mov
int
mov
jg
push
call
fistps
or
add
fwait
int
xor
arpl
mov
cltd
mov
adc
aas
push
xor
dec
push
cld
sub
movsl
cld
and
mov
or
push
std
out
lahf
mov
fcomps
add
jp
nop
push
popf
lock
jmp
out
jl
xchg
pop
mov
cmp
add
das
inc
repnz
scas
xchg
mov
push
inc
iret
push
lcall
loope
sbb
sbb
xor
cmp
es
mov
jp
and
pop
push
in
xchg
lock
or
inc
xor
lea
mov
xchg
pop
ja
sub
mov
and
cltd
xchg
lahf
jae
pop
stos
sub
std
mov
push
adc
fbld
jnp
faddl
mov
mov
xor
subb
mov
jecxz
frstor
pop
cld
arpl
lahf
les
xchg
shl
mov
xlat
fiaddl
inc
je
inc
cmpsb
mov
inc
mov
into
cld
mov
subl
mov
jle
or
addps
int3
pop
popa
cmp
sub
test
repnz
addl
test
les
arpl
xchg
sbb
push
or
out
sub
pop
push
fcoml
loop
push
and
mull
xchg
cmc
in
adcb
cwtl
mov
inc
pop
fmuls
push
push
xchg
test
mov
pop
cmp
fiadds
fwait
or
lods
sysenter
push
pshufd
lret
fsts
or
mov
or
cmpsb
dec
or
dec
or
test
hlt
mov
jecxz
in
fsubs
sbb
jl
pushf
loop
fbstp
jo
mov
shrl
cs
mov
mov
cwtl
xlat
push
outsl
loopne
mov
inc
cmpsl
pop
lahf
adc
repz
out
or
inc
pop
dec
push
imul
inc
push
pop
aas
nop
and
in
test
idivl
hlt
and
sbb
jmp
outsl
sti
and
in
xorb
xchg
add
lahf
ficompl
pop
hlt
ja
sbb
jp
or
push
pop
repz
pop
je
loope
int
nop
fsubr
sub
insl
pop
pop
add
popf
sbb
nop
sbb
idiv
in
dec
mov
jae
sbb
mov
ucomiss
loop
rcr
cmp
or
sbbl
jae
adc
stos
mov
lret
imul
and
mov
inc
sbb
stos
lods
roll
pop
cmpsl
test
pop
and
xchg
ss
sbb
cmc
jnp
rorl
ss
outsb
aas
jno
inc
pusha
imul
shrl
sti
xor
mov
loop
cmp
xor
jle
inc
and
mov
jl
mov
int
lods
cltd
jb
ss
mov
pop
mov
xlat
daa
cmp
sub
iret
mov
clc
push
cmp
mov
std
cmpsl
popf
leave
or
dec
fadd
mov
mov
leave
int3
imul
inc
mov
mov
jecxz
push
jp
pop
and
mov
movsl
hlt
xor
cmp
mov
cmp
push
leave
adc
test
test
mov
shll
ja
mov
mov
mov
insl
or
popf
ficomps
pop
or
rcrl
adc
in
popa
add
or
mov
mov
mov
xor
pop
adcl
jo
push
pop
push
and
sub
test
std
mov
cmp
popa
xchg
out
mov
xchg
xchg
insb
mov
xchg
addr16
mov
insl
adc
fdiv
faddl
rolb
scas
fildl
inc
gs
and
call
mov
xor
outsl
popf
mov
sub
cmpsl
scas
push
test
dec
push
pop
xchg
arpl
sbb
jnp
pop
inc
inc
lods
icebp
mov
jmp
push
cmpsl
mov
xchg
lret
cmpl
pop
add
orl
pushl
or
mov
mov
stos
jecxz
mov
sub
jb
sbb
add
jb
imul
and
rcrl
and
outsl
std
inc
xchg
dec
popf
pop
jae
mov
push
decb
scas
test
push
pop
out
mov
mov
dec
xchg
das
loop
enter
nop
jo
sub
imul
push
pushf
ret
push
stos
and
test
in
dec
jecxz
inc
inc
std
pop
int3
sti
dec
inc
das
mov
mov
adc
cmp
cmp
dec
inc
mov
rcll
aam
push
pop
mov
ljmp
sub
in
jge
fwait
cmpsl
inc
pop
push
add
stc
pop
sbb
mov
push
mov
inc
ss
add
push
outsl
arpl
loope
push
lods
dec
xor
test
aas
xor
push
popa
out
dec
mov
out
out
adc
push
leave
shlb
loopne
adc
add
fistl
inc
cmp
sahf
js
fs
lcall
dec
xchg
xor
jmp
orb
mov
and
addr16
cmc
push
jae
jnp
cmp
or
and
popf
in
sbbb
mov
inc
push
mov
inc
adc
pop
das
insl
add
lods
adc
push
mov
pop
xchg
or
sbb
adc
sti
mov
movsb
int3
mov
sbb
adc
pop
out
sbb
into
push
pop
cmp
and
mov
addr16
jbe
cs
cmpsl
jle
jmp
outsb
pop
sub
in
mov
addb
ret
push
mov
mov
movsb
pop
lahf
xor
pop
rcll
sti
mov
hlt
mov
mov
fadds
cs
rolb
lret
movsb
ficompl
xchg
sbb
sub
in
and
jne
js
mov
int
sahf
mov
xor
divb
mov
mov
cmp
out
out
sar
mov
outsl
jne
rorb
scas
bound
push
popf
and
sbb
xor
insb
out
shrl
sub
lahf
jle
daa
sahf
or
push
pop
adc
mov
aas
push
jge
loope
cmp
push
sbb
aas
imul
enter
add
fsubl
lcall
sbb
mov
lock
in
xchg
jg
sbb
lahf
xchg
sti
pop
jle
bound
imul
je
popa
inc
cli
das
dec
inc
je
cmp
notl
mov
daa
mov
or
cltd
pushf
pop
das
lock
push
movsb
xchg
cmpb
cmp
ficoms
sarl
cltd
jmp
cmp
xchg
jbe
mov
dec
jae
xor
pop
mov
in
dec
loopne
mov
scas
les
inc
adc
in
jb
pop
inc
inc
dec
jbe
nop
iret
adc
dec
pmaxub
stos
cmp
pop
test
push
addr16
sbb
mov
fiadds
mov
jne
clc
mov
aam
leave
stc
mov
sub
pop
mov
imul
imul
jnp
test
movsb
cld
stos
icebp
insb
push
pop
xor
and
mov
cli
repnz
scas
stc
or
jo
rcr
test
sub
cli
push
sarb
or
testl
lea
inc
gs
addb
xor
xchg
mov
jbe
pop
les
movsl
add
or
rorl
and
into
push
inc
fstpl
sbb
add
loop
inc
jg
clc
lock
mov
xchg
sbb
in
jl
mov
stos
jmp
mov
jno
loopne
clc
jecxz
aad
and
cmp
mov
shrb
sbb
xchg
and
pop
jmp
jb
loopne
add
pop
aad
inc
ja
dec
mov
mov
jle
in
es
push
mov
inc
mov
daa
dec
out
ja
mov
or
in
ja
jns
mov
pop
dec
out
jle
cmp
cmp
data16
dec
ja
imul
mov
mov
fsts
push
out
push
cmp
or
test
cltd
mov
pop
fsubrp
scas
mov
mov
or
mov
stos
dec
sbb
addr16
jbe
hlt
sub
daa
mov
and
and
xlat
insl
cmp
adc
dec
hlt
stos
fcompl
inc
rolb
sub
int3
jp
add
cmp
push
inc
mov
clc
mov
pop
push
or
jge
push
cwtl
insb
add
cld
sbb
mov
mov
inc
inc
fs
mov
stc
insb
add
inc
mov
test
push
in
push
lcall
insb
adc
loop
out
repz
popa
popf
pop
inc
pop
fcoml
dec
aam
arpl
and
nop
jb
fiaddl
jg
and
icebp
popf
dec
ljmp
pusha
and
dec
int3
nop
out
arpl
test
pop
sti
mov
sbb
cmpsb
or
sub
sbbb
sub
cmp
popf
lcall
xor
insl
aaa
push
sub
int3
out
cmp
mov
mov
scas
dec
in
dec
ja
bound
mov
es
mov
jne
loope
mov
popa
and
xchg
lea
mov
dec
dec
mov
rcr
push
imul
xor
xchg
lcall
xchg
xorb
mov
sub
popf
pop
sub
aas
out
pop
pop
mov
and
mull
lock
ret
imul
out
xor
ret
int
add
or
call
pop
daa
cmp
sub
xchg
cld
cli
xchg
inc
xchg
adc
or
std
popa
test
sbb
push
ljmp
and
or
push
jmp
lods
mov
xchg
push
ret
fimuls
imulb
out
stos
add
fldenv
insl
lea
pop
test
fistpl
aaa
xor
inc
pop
movsl
scas
in
imul
and
mov
insb
fldt
pop
ss
xchg
or
and
dec
cmp
mov
ror
clc
pop
nop
add
out
jecxz
movb
or
les
lock
lcall
gs
sub
pop
cmp
es
sbb
pop
add
addr16
sbb
mov
loopne
mov
imull
push
xor
xchg
pop
cmp
fisttpll
xchg
xor
sti
incl
pop
insl
lret
inc
add
mov
pop
iret
jle
imul
fwait
popf
xchg
or
mov
jg
mov
xchg
push
pop
in
jg
push
sbb
lahf
sbb
loop
loopne
ret
push
clc
imul
mov
popf
push
pop
mov
repz
lock
insb
test
call
ss
and
xor
cld
xchg
js
iret
fldenv
inc
mov
sbb
test
orb
mov
adc
repz
imul
pusha
add
shl
enter
and
mov
pop
rol
in
push
xchg
dec
lcall
and
gs
fimuls
fdiv
or
sahf
pop
std
lret
cld
cmp
jp
and
cwtl
cltd
pop
test
pop
xlat
sub
jge
lea
hlt
dec
addl
push
jge
mov
cmc
jle
or
jb
inc
mov
push
xchg
xchg
dec
shlb
adc
out
mov
cld
xchg
add
ret
roll
fadds
les
sub
hlt
mov
inc
and
out
adc
sub
aam
fidivrs
or
xor
inc
ljmp
inc
mov
shlb
jge
jno
scas
mov
push
dec
inc
sarl
xor
add
pop
js
popa
scas
cmpxchg
add
mov
fwait
enter
mov
cli
or
jmp
scas
adc
and
scas
pop
sub
pop
nop
loopne
lods
cmp
loope
mov
fidivl
lock
or
mov
cmc
fadd
aas
sbb
popl
aam
add
fldcw
in
dec
mov
or
push
filds
adc
pop
push
test
jmp
sbb
in
xchg
std
cmpsb
jl
rcrl
outsl
fcmove
pop
jbe
pop
jns
inc
push
and
mov
cli
aad
xor
mov
dec
jg
jg
icebp
sbb
xchg
dec
stos
cmpsb
pop
mov
jp
sub
insb
dec
inc
and
jge
fwait
repz
mov
lcall
ds
push
fsubl
push
or
sub
pop
inc
stos
mov
xor
shrl
cltd
sti
inc
sbb
scas
mov
xchg
movsl
vmwrite
xor
mov
sub
pop
xorl
sbb
stos
sub
lahf
repz
in
jnp
lahf
pop
push
cmp
xchg
mov
insl
add
movsb
sub
movsb
cmp
dec
imul
inc
das
ret
repz
shrb
pop
jp
pushf
pop
insb
mov
inc
pop
sbb
test
pop
inc
sti
ja,pn
lret
mov
or
mov
mov
je
int
pop
push
in
nop
leave
mul
movsl
cs
orb
add
xchg
aaa
lret
call
jle
loop
sbb
aam
outsl
pusha
dec
ficompl
or
inc
lods
mov
jmp
lods
stc
daa
pop
xchg
negb
mov
mov
int
cld
lock
cmpsl
push
aam
leave
outsl
cwtl
mov
sub
stos
stos
mov
fimuls
mov
jne
jecxz
negb
sbb
testl
mov
sbb
outsl
out
mov
pop
jae
jbe
fs
sbb
adcl
xor
lods
aaa
enter
js
repnz
int
or
inc
inc
mov
and
int3
addb
pop
ret
jmp
jae
test
cmpsl
rcll
cmpsl
frstor
movsb
mov
aad
cltd
gs
test
repz
push
push
mov
fld
fisttps
mov
xor
adc
pop
fld
dec
dec
inc
lock
movsl
push
dec
push
into
je
pop
push
rol
test
out
push
mov
fs
aas
dec
push
push
xor
fbstp
cmp
mov
cmp
push
cld
cli
and
in
and
jmp
fimuls
lret
mov
lret
push
insl
pop
and
adc
mov
sahf
scas
aam
daa
or
repnz
rclb
cs
divl
dec
call
lds
cwtl
sarb
add
ja
cmpsl
jg
movsl
incl
jae
and
mov
cltd
fs
into
dec
cltd
jmp
push
sbb
js
call
sbb
mov
cwtl
and
rcll
push
fldcw
mov
mov
repz
adc
test
test
inc
insl
pop
enter
cmc
in
aas
aam
mov
jl
sbb
and
rep
dec
dec
mov
lds
pop
xor
add
cmpsl
cmc
adc
sub
dec
out
push
in
cmp
fisubrl
aaa
push
pusha
or
xor
imul
insl
aaa
sub
std
pop
xchg
dec
repz
sbb
fisubs
lea
sahf
nop
ds
shr
rclb
aad
dec
xchg
pop
dec
cmc
ja
mov
shrb
mov
xor
sub
push
jbe
dec
mov
and
sahf
sub
push
insb
jge
sub
pop
in
dec
sbb
sub
or
fldenv
insl
jle
push
and
xchg
dec
mov
add
inc
pop
sbb
cltd
xor
scas
jo
dec
jb
into
aam
ljmp
cmpl
out
lret
and
and
movsb
idivl
pop
push
cwtl
dec
loopne
int3
lods
out
aad
stos
xchg
sahf
sahf
xchg
add
test
packsswb
test
sbb
mov
fsubrs
adc
icebp
sub
lcall
fisubrl
mov
mov
mov
jne
mov
outsl
and
sbb
and
pop
inc
jbe
dec
pushf
popf
andb
and
cmp
mov
sbb
dec
inc
test
push
cmpl
aam
cmc
outsb
inc
xor
in
rcrb
xchg
dec
add
bound
cmp
and
add
add
les
mov
decb
fidivl
cmp
popf
pop
sub
fs
repz
frstor
ja
and
test
lods
cmc
dec
push
push
xchg
cmp
jl
les
adc
in
xchg
xchg
bound
in
into
cmp
test
daa
cmpsb
je
ds
push
std
and
cmp
fistps
dec
repnz
sbb
jbe
xchg
mov
repnz
xchg
leave
cmc
or
pop
inc
popf
out
sbb
xchg
inc
xor
outsl
add
rclb
adc
ja
xchg
lret
cmp
mov
add
jp
jecxz
sbb
ja
sub
or
orb
xor
cmp
xchg
call
popf
pop
out
daa
sbb
add
mov
cld
div
pop
imul
insl
mov
stc
lds
stos
lds
sti
pop
and
adc
jo
cld
call
aaa
fdivs
pop
fnstcw
sbb
jns
sub
mov
stos
mov
dec
inc
sbb
sub
lahf
mov
fdivrs
clc
push
leave
mov
adc
lcall
mov
sbb
data16
lea
push
fs
int
cmpsb
outsl
jg
mov
pop
popf
pop
mov
mov
mov
leave
loopw
in
int3
or
xor
lret
pop
sub
arpl
fstl
mov
jecxz
dec
jb
enter
shrb
jg
addb
and
pop
adc
ret
mov
loopne
les
push
repnz
inc
je
sbb
addr16
add
cltd
inc
or
xor
adc
cli
or
or
movsl
dec
xor
es
pop
bound
xchg
or
pop
hlt
pop
dec
lea
pop
jmp
clc
and
pop
sbbl
out
cmp
sub
jl
adc
ja
fwait
pop
pop
jne
enter
and
stos
inc
dec
adc
push
insl
xchg
adc
gs
ret
push
cmp
pop
daa
adc
std
mov
into
sbb
xor
pop
subl
pop
scas
or
cmp
outsl
xor
jnp
inc
loop
das
inc
xor
addr16
cmpsb
xchg
in
addr16
dec
pushf
das
jmp
and
cmc
lret
lahf
mov
out
iret
fdivrs
repnz
shlb
fcoml
dec
sbb
mov
loope
pop
cmpsb
pop
pushf
loop
jno
test
shll
inc
movswl
sahf
dec
pop
cmp
xor
dec
add
pop
xchg
jns
pop
dec
in
iret
push
in
mov
sbb
inc
pcmpeqw
push
or
inc
sti
xlat
in
iret
mov
js
adc
icebp
lret
mov
ds
fsts
enter
push
xor
ret
int
jecxz
fnstcw
ja
sahf
fsub
jge
inc
pop
repnz
inc
mov
lods
dec
push
push
popa
and
insb
pop
in
push
lods
mov
loope
sub
cli
or
xchg
xchg
push
add
pop
imul
stos
mov
in
mov
fdivs
cmp
jmp
or
cltd
roll
test
and
adc
push
mov
std
dec
mov
sub
dec
fistpl
movsb
lock
loop
nop
cld
arpl
sarb
sub
xlat
idiv
les
sahf
mov
in
sub
jp
push
lret
and
push
andl
in
jae
rolb
andl
xlat
call
in
mov
in
sbb
inc
orb
xchg
movsb
movsb
sbbb
clc
pop
dec
out
mov
ret
add
sbb
jp
xor
stmxcsr
clc
mov
xchg
imul
pop
dec
jne
roll
push
out
mov
and
daa
aaa
ret
std
dec
fisubrs
jbe
inc
in
pop
mov
cmp
cmp
jmp
cmpb
stos
or
inc
data16
test
clc
subl
add
hlt
mov
or
push
cmp
imulb
rorl
sbb
add
mov
divb
xor
and
cmp
jl
xchg
das
in
in
jb
push
ja
aam
mov
mov
dec
jnp
sub
add
rcrb
jle
out
fbstp
cwtl
icebp
icebp
mov
sbb
xor
and
pop
out
xchg
int3
notl
leave
mov
jns
call
cmp
mov
addr16
dec
pop
xchg
insl
and
sub
ljmp
dec
andl
sub
enter
lret
ds
mov
xchg
or
hlt
rclb
mov
call
rclb
daa
loopne
or
and
nop
out
cld
mov
mov
mov
iret
es
or
scas
ja
cmp
jb
loope
icebp
and
add
adc
push
movsl
lds
pop
stc
adc
push
xlat
push
sahf
in
scas
jp
jae
test
outsb
and
les
mov
rcll
stc
cli
add
and
ret
mov
lret
mov
and
pop
mov
inc
lahf
mov
sbb
jmp
std
lea
aas
adc
fldt
aaa
push
mov
xchg
mov
data16
mov
mov
out
sub
mov
cld
jnp
mov
sti
and
cmpsl
aam
push
stc
inc
test
mov
das
push
mov
sbb
sbb
xchg
push
jp
jnp
andb
js
jbe
sbb
dec
pop
repnz
orl
push
xchg
scas
stos
xchg
mov
jnp
jecxz,pn
pop
scas
push
out
aam
sub
or
sbb
lret
pop
gs
inc
pushf
aas
sbb
jae
call
fidivl
xlat
xchg
ja
sub
or
test
out
pushl
and
cwtl
mov
mov
xchg
jp
fldl
lds
fcompl
and
bound
pop
dec
fcmove
loopne
les
jecxz
xor
and
dec
add
arpl
jo
sbb
int
fcmove
out
call
aad
push
repz
jae
test
sar
and
cmp
jecxz
jb
repz
sub
ret
lds
subl
or
mov
sbb
cwtl
mov
lea
sub
push
rclb
clc
adc
sub
and
ja
pop
fisubrl
ljmp
mov
in
pop
jp
lods
mov
mov
mov
fisubrl
imul
es
sbb
outsb
idiv
int
or
popf
xlat
fstps
mov
ss
rorl
imul
jae
or
test
lock
xchg
ret
pop
lods
mov
cmpsb
sbb
cmc
data16
out
arpl
fs
mov
movsl
mov
aam
in
shrb
or
adc
out
mov
sbb
cmp
lds
inc
mov
fwait
push
xchg
sub
lock
dec
xor
ret
hlt
mov
push
push
pop
inc
and
scas
mov
push
xchg
xchg
mov
lock
mov
mov
or
sub
dec
dec
arpl
lret
xchg
push
fstl
dec
ds
inc
push
loop
mov
mov
dec
lods
rcrl
jne
sub
pusha
movsl
xchg
movsb
roll
add
sub
clc
sahf
fcoml
scas
mov
cmc
add
mov
sbb
sub
jnp
clc
popf
dec
mov
jmp
fmull
cmpsb
xor
xchg
jb
dec
sub
adc
dec
cs
xchg
data16
dec
fnstcw
xlat
ja
shlb
popa
pop
lods
pushf
cwtl
test
inc
jg
mov
test
hlt
add
inc
xor
das
or
xor
in
dec
insb
popf
sbb
dec
pop
stos
fwait
aad
lods
push
mov
sbb
ficoml
aaa
mov
shl
lahf
pushf
xchg
adc
jno
lods
pusha
or
xchg
fstps
imul
movsl
cmc
and
insb
mov
pop
or
jns
dec
sub
and
movsl
in
add
xchg
xchg
sub
loope
cltd
and
lods
jb
sbb
pop
and
push
pushf
push
adc
test
icebp
push
xchg
and
out
jl
stos
aad
in
gs
sub
test
push
push
and
mov
adc
mov
and
mov
fs
fstl
ret
cmpsl
adc
ror
pop
ja
in
push
sbb
dec
scas
incb
and
fwait
pop
xchg
orb
and
jecxz
fsubrs
out
push
stos
add
out
in
enter
mov
push
inc
hlt
adc
shll
jbe
fists
xchg
and
ss
sub
pop
gs
pop
lods
insb
cwtl
aaa
xchg
dec
inc
pop
insl
movsl
test
push
jb
pop
in
dec
xor
xchg
dec
into
mov
enter
cmpb
das
fwait
push
jle
shlb
ljmp
dec
stc
cmp
pop
in
decb
jl
pop
ja
sub
dec
add
jmp
add
fsub
sahf
scas
dec
mov
nop
sub
popf
hlt
lds
cmp
lea
sbb
icebp
pushf
mov
and
test
lcall
jp
push
mov
arpl
or
push
popf
loopne
div
lds
jmp
orl
inc
stos
icebp
mov
xor
in
fnstenv
inc
jno
push
out
xor
je
in
filds
movsb
cmp
sub
lods
sub
add
dec
and
test
jb
xchg
sbb
sub
movsb
dec
call
push
ffree
inc
mov
in
cmp
das
lcall
sub
inc
dec
mov
fst
mov
gs
test
jl
mov
std
shlb
das
int3
inc
or
cwtl
sbb
arpl
fwait
mov
cli
mov
mov
in
lcall
scas
cltd
push
sti
sbb
jbe
dec
push
jo
call
mov
xchg
std
jmp
mov
inc
pop
mov
std
shrb
inc
sti
and
mov
cs
cmpsb
lret
or
sub
add
xchg
mov
lock
inc
ret
add
dec
outsl
jecxz
push
mov
aad
movsl
subb
push
xlat
mov
mov
sarl
pop
sbb
push
jmp
loopne
jb
stos
das
test
inc
push
ficomps
imul
adc
mov
movsb
add
shl
cmpsb
mov
roll
imul
add
add
or
sub
lret
cmp
dec
ljmp
fstps
xchg
cmpsb
push
pop
cmp
jne
cmp
sbb
loope
xchg
out
lock
int
loopne
sub
dec
and
pop
cmp
add
adc
es
or
ss
enter
and
push
icebp
popf
push
pop
xor
addr16
add
xchg
pop
push
mov
or
sarl
jae
jmpw
loopne
or
add
loope
adc
insb
pop
jmp
movsl
mov
xlat
mov
loopne
adc
int
xor
and
gs
jmp
and
and
xlat
sbb
shlb
adc
mov
adc
outsb
mov
lods
sahf
sbb
sub
adc
stos
insb
mov
push
repz
inc
pop
push
js
cmp
dec
les
outsb
popf
jmp
lock
cmpsl
rcrb
xchg
push
scas
enter
push
imul
mov
mov
call
mov
and
jno
xchg
data16
mov
sub
mov
sub
push
pop
pusha
push
aas
mov
insb
lods
fisttps
mov
leave
mov
sub
sar
mov
mov
adc
iret
mov
inc
test
jns
rorb
cld
jae
mov
xchg
xlat
mov
test
inc
fwait
sub
jge
push
sub
call
adc
in
jecxz
cmpsb
or
iret
fs
sub
sti
popf
push
push
xor
dec
clc
inc
lcall
fildl
sbb
or
rorl
stos
pushf
jns
ja
and
push
unpcklps
sbbl
cmc
fistps
push
or
dec
cli
adc
arpl
mov
jns
loop
pop
repz
nop
data16
repz
dec
dec
aas
dec
jo
movsl
inc
and
sahf
sub
cmp
adcb
push
stos
cmp
xor
iret
fcomps
hlt
out
xor
xorl
inc
jp
push
cwtl
ljmp
jp
add
popf
ds
icebp
shrb
cmp
xchg
add
pop
push
dec
outsb
xchg
mov
jle
jle
lret
dec
push
fisubl
dec
sbb
inc
sbb
loope
sub
jo
jmp
and
pop
inc
loop
out
cmpxchg8b
adc
inc
xor
inc
mov
je
popa
push
inc
and
nop
dec
sbb
and
ss
popf
test
outsl
aad
add
xor
imul
mov
pop
movsl
xchg
in
pop
mov
ret
xor
xchg
fldcw
lds
aas
mov
out
shrb
lahf
and
orb
repnz
cmp
inc
test
sbb
jp
or
pop
jns
push
lahf
adc
sahf
sbbl
xor
aad
js
psadbw
add
rclb
mov
divb
sbbb
inc
xor
sub
mov
rolb
inc
daa
mov
shlb
and
inc
xchg
sub
loopne
lods
mov
sahf
cmc
push
iret
mov
in
in
jne
adc
mov
or
push
cltd
gs
cmpsl
jp
int3
sub
jns
out
fdiv
and
idiv
lods
aad
ret
lods
xchg
pop
jo
add
loope
lahf
xchg
arpl
loopne
icebp
sbb
jbe
xchg
shll
push
std
dec
aad
fildll
sub
sti
mov
subb
adc
sbb
jne
sarl
sbb
fidivl
cmpsl
pop
frstor
mulb
dec
and
ret
push
push
push
and
sysexit
add
dec
mov
popf
dec
pop
inc
sbb
sub
les
lret
inc
xor
or
add
jge
sbb
test
xchg
das
mov
test
pop
cltd
lock
jmp
xor
aaa
out
pop
mov
pop
xor
outsb
shrb
xor
dec
pop
call
xor
mov
push
aas
jnp
fwait
xor
shr
arpl
lret
mov
adc
lahf
pusha
pusha
std
push
sti
xchg
dec
movsb
jge
xchg
clc
xchg
mov
xchg
lret
add
jp
std
les
inc
cli
int
pop
push
push
ja
jp
aaa
data16
aas
sub
popf
add
lcall
dec
outsl
sub
pop
stc
cmp
pop
push
jne
hlt
pop
cmpsl
dec
jbe
les
mov
mov
jp
neg
repnz
inc
fwait
out
xchg
loopne
ret
fmuls
sub
scas
ljmp
mov
bound
jae
jne
test
and
int3
sbb
inc
xor
mov
dec
addr16
popa
mov
aam
jne
test
xchg
gs
jae
lret
push
mov
and
pop
mov
aad
sbb
rclb
push
mov
inc
std
push
xor
add
inc
jmp
cltd
mov
cmp
or
jle
cmpsb
push
lods
push
rol
add
addr16
xor
jp
imull
xchg
push
inc
mov
aam
insb
insl
std
mov
adc
lock
je
pusha
pushf
sbb
adc
pop
arpl
hlt
adc
repz
pop
inc
mov
jb
push
push
dec
out
shlb
movb
cli
jp
push
mov
pop
push
sub
push
out
cmp
sub
mov
orb
in
dec
in
inc
xor
adc
sbb
loop
pop
mov
stc
sub
jg
das
in
cmp
out
rorb
icebp
cmpsl
int3
in
sbb
ret
and
jne
dec
or
mov
sbb
aas
test
test
out
inc
scas
xorl
test
mov
incl
inc
push
cmp
popa
aad
xor
push
push
cmpsb
xor
mov
in
cld
insb
mov
rol
sbb
outsb
bound
adc
mov
loope
aam
outsb
inc
icebp
mov
xchg
das
mov
inc
pop
popa
xor
adc
mov
mov
pop
adc
xor
jb
sub
pushf
pop
pop
scas
popa
jb
outsl
jo
daa
dec
fiaddl
dec
push
insb
jp
inc
fwait
mov
aam
shlb
insb
ret
jge
imul
test
sahf
in
das
sub
and
mov
and
mov
and
pop
aad
ret
xchg
aas
push
sub
jmp
int3
xor
cmp
ja
add
inc
xorl
jecxz
dec
push
popa
insb
fisubrs
adc
cmp
aaa
roll
bound
fimull
shrl
dec
aaa
cwtl
pop
jae
sub
cltd
lahf
jno
fucomi
aaa
or
les
scas
mov
xlat
push
imul
mov
call
iret
mov
push
mov
ljmp
ljmp
sbb
xchg
push
mull
leave
xor
dec
xor
stc
sti
sbbb
jp
test
shrl
arpl
xchg
lahf
test
xchg
xor
and
js
pop
ja
in
mov
ret
adc
addb
xchg
mov
xor
jg
pop
int3
mov
movsl
lret
pop
fwait
jg,pn
jle
test
push
ljmp
pusha
mov
inc
lcall
xchg
sub
in
sbb
xchg
mov
push
insl
xchg
inc
cmpsb
pop
sbb
enter
aas
dec
iret
stc
in
adc
and
les
rclb
mov
jmp
mov
cmpsb
lods
or
mov
ja
and
xor
cmc
iret
fcmovbe
dec
hlt
aaa
in
call
mov
push
pusha
adc
cwtl
idivb
dec
or
data16
in
xchg
int
inc
pop
inc
iret
shll
test
out
fs
mov
xchg
pop
movb
mov
or
fldz
jno
push
and
cld
sbb
mov
xchg
mov
addb
leave
call
in
push
push
xor
mov
add
fmull
loope
out
inc
dec
ret
movsb
gs
cs
push
xor
loop
pusha
ja
pusha
inc
or
push
test
ljmp
inc
fildl
mov
xchg
cs
in
mov
inc
icebp
loop
pusha
sub
mov
or
cmp
jb
orl
gs
push
daa
in
xor
xor
mov
sbb
mov
lcall
insl
movsl
jno
mov
loope
in
bound
sbb
push
mov
push
decb
imul
shlb
cmp
out
jle
push
jl
and
fsubrs
cwtl
dec
in
sub
push
cmpsb
sbb
dec
insl
fwait
push
leave
cmp
mov
push
stos
push
lods
andl
aas
imul
mov
test
mov
dec
xor
mov
push
dec
enterw
in
jge
mov
cwtl
or
lahf
cmp
sub
push
aaa
sub
sti
mov
push
dec
mov
adc
lods
adc
ds
js
cltd
leave
push
outsl
daa
push
xchg
lahf
xor
push
fs
fs
adcl
loopne
hlt
cwtl
jmp
into
stc
std
outsl
inc
imul
imul
popa
hlt
sub
shrb
dec
ss
decb
imul
jge
cmp
mov
mov
mov
push
xchg
je
xor
les
dec
jb
adc
cmp
push
mov
out
gs
stos
push
push
dec
dec
dec
mov
cwtl
pop
pop
cmp
sub
jle
mov
inc
xchg
mov
adc
xchg
sbb
mov
hlt
inc
mov
mov
xor
adc
or
outsb
push
bound
jg
cmp
jp
repz
test
and
xchg
lea
inc
inc
rorl
lods
sub
sub
cmp
rcll
xchg
pop
jnp
das
repz
pop
arpl
test
cs
test
add
push
mov
dec
mov
mov
sub
push
cmpxchg
xchg
sub
xlat
mov
dec
out
jp
lret
push
or
rcr
sub
inc
js
cmp
and
jne
mov
xchg
loopne
loop
mov
push
into
jl
inc
ss
lret
sbb
adc
cmp
js
push
jne
aam
xchg
xor
xchg
fcmovnu
andb
std
pop
and
pusha
int
push
shrl
dec
push
and
add
int3
mov
ja
add
icebp
sbb
adc
dec
cmpsb
xlat
push
jae
push
jg
lahf
mov
inc
cwtd
fdivs
sbb
inc
inc
xchg
mov
pop
rcrb
sub
sbb
sti
rclb
rcr
test
inc
stos
jns
cs
and
movsb
add
push
into
xchg
loop
mov
insl
pushl
pop
adc
mov
outsl
iret
and
jecxz
mov
cmp
mov
pop
int
jne
xor
xchg
lcall
dec
mov
lret
loop
mov
dec
inc
dec
in
pop
push
dec
aas
sub
adc
ss
xchg
adc
inc
shrb
xlat
sbb
xchg
jnp
dec
xor
sub
xor
les
ljmp
popf
inc
dec
inc
loope
and
std
addr16
sub
loopne
mov
xchg
pop
push
dec
lret
leave
mov
mov
sarl
inc
jns
jb
pushf
lret
cwtl
lock
add
xor
jo
cli
pop
stc
icebp
sbb
lds
sbb
notl
mov
sub
sahf
jge
sbb
mov
lods
imul
mov
mov
dec
adc
outsl
xor
push
dec
shlb
mov
mov
mov
mov
daa
mov
out
mov
push
inc
push
mov
jmp
add
add
loopne
test
xchg
lahf
les
jo
sub
xchg
push
ret
out
jge
or
mov
sbb
push
push
es
lods
lock
cmpb
sarb
xchg
and
jno
lahf
cmp
test
mov
and
aaa
fdiv
sahf
dec
or
adc
push
add
pop
cmp
jle
pop
hlt
mov
sbb
mov
xlat
add
in
cmp
loope
test
adc
add
aad
inc
inc
mov
add
mov
mov
dec
add
pop
aas
inc
out
into
mov
jno
sub
scas
gs
pop
adc
sarb
arpl
push
cmp
ss
outsb
adc
lock
inc
xor
adc
test
scas
push
popa
push
pop
dec
push
int3
fisubl
fcoms
outsl
jo
insl
pop
add
stos
cwtl
icebp
xchg
scas
test
pusha
add
mov
sbb
jg
push
popa
jo
mov
xor
lahf
inc
push
jne
jmp
cmp
js
mov
addr16
orl
xchg
cs
pop
stos
push
fstl
or
fidivrl
into
fstpt
outsb
shlb
xchg
insl
dec
mov
int3
adc
stos
push
scas
push
loop
arpl
popf
cmp
jo
push
inc
in
xchg
scas
mov
mov
inc
je
test
cmpsb
add
jae
cmp
decb
daa
jmp
stos
negb
bound
addr16
jbe
test
data16
xor
pop
fimull
cmp
mov
sbb
mov
and
pop
mov
aad
cmp
iret
leave
dec
cmp
and
shl
cld
sub
push
jmp
or
or
dec
mov
imul
and
sbbb
mov
idivl
push
sti
sub
leave
mov
loop
mov
bound
das
sub
mov
stc
mov
in
arpl
push
out
jmp
mov
shrb
push
jg
stos
inc
push
test
int3
jmp
and
push
movsl
jl
pop
popf
adc
sar
out
std
cmc
shrb
mov
add
imul
aas
loop
pop
aas
xchg
roll
inc
aaa
sub
out
into
jb
in
mov
das
and
adc
jg
fisttps
xor
pop
call
or
pushf
fdivl
inc
xchg
inc
jle
mov
inc
mov
sbb
rorb
jge
dec
loope
lret
or
lock
cmp
push
andl
addb
lcall
pop
inc
pusha
pusha
je
and
jnp
fcmovbe
sbb
out
imul
xor
dec
std
xchg
cmp
into
sbb
xorl
jns
mov
popf
ret
mov
je
push
mov
aaa
scas
and
dec
cmp
push
jnp
push
outsb
loop
pop
jmp
lret
fisubs
arpl
inc
mov
mov
cmp
ret
in
sub
lock
dec
stos
sbb
mov
dec
packsswb
sahf
enter
leave
xchg
sub
je
lret
gs
xor
xor
and
mov
imul
cld
jge
dec
fs
push
hlt
ret
mov
icebp
sub
mov
das
push
inc
push
imul
sub
pop
xchg
xor
inc
scas
rolb
mov
stos
pop
incb
and
xorl
mov
pop
lock
xor
pop
sbb
pop
sahf
call
jnp
push
mov
adc
cmp
mull
jae
in
dec
xor
int3
fs
pop
scas
hlt
lds
mov
mov
add
dec
repnz
xor
pop
xchg
outsl
mov
ja
and
shl
dec
movsl
xor
sarl
or
adc
divb
scas
insl
mov
cmpl
pusha
ficompl
or
cwtl
mov
sub
mov
loope
in
imul
inc
mov
fcmovne
jb
jno
cmp
es
and
inc
or
scas
in
testl
sbb
hlt
push
jle
stc
push
outsl
mov
call
mov
movb
pop
sbb
cwtl
cs
dec
test
inc
mov
ds
lahf
push
dec
jo,pt
pop
test
inc
xor
test
imul
pop
mov
int
push
out
cmpsb
lock
push
xchg
clc
mov
or
lcall
jo
pusha
les
ja
and
aad
pop
xchg
test
test
fcmovu
mov
add
fs
dec
ret
jp
ret
icebp
xchg
int3
and
xlat
daa
fs
lret
into
mov
lds
push
sub
cmp
inc
cmc
xchg
dec
daa
pop
in
cmp
faddl
push
adc
xchg
jmp
xor
jl
ficoms
retw
pop
or
movb
push
sbb
out
in
adc
outsb
orl
inc
stc
dec
shr
js
rclb
jnp
movl
pushf
movsl
pop
imul
fwait
sahf
inc
out
icebp
or
push
leave
add
lcall
lret
pop
and
outsl
out
push
adc
xor
pop
cs
dec
pop
jl
mov
xchg
or
mov
lods
and
popa
and
mov
sbb
add
or
sbb
add
mov
sub
jmp
add
xchg
inc
cmpsb
dec
insb
pop
push
sahf
mov
push
sbb
push
add
pop
int3
push
out
adc
mov
fs
test
ret
mov
mov
in
sub
cwtl
dec
ja
imul
cwtl
adc
aad
outsl
add
push
push
xchg
aas
jbe
and
lcall
out
sbb
bound
imul
mov
lea
leave
pop
and
ret
xor
cld
mov
nop
lcall
adc
mov
jle
adc
test
pop
or
jbe
cwtl
jl
scas
roll
pusha
mov
and
ret
test
int
adc
imul
fs
mov
test
xchg
cmp
iret
aam
shrd
hlt
hlt
mov
push
push
test
cltd
adc
cmp
push
mov
shll
mov
adc
mov
repz
fs
repnz
les
or
fs
mov
jp
add
xchg
cld
lret
aaa
dec
jb
sbb
cli
loopne
fisubrs
shl
mov
xor
pop
inc
push
mov
loop
push
fcmovnb
popl
add
jae
xchg
outsb
inc
jge
fmuls
outsb
into
movsb
xchg
xchg
mov
outsl
and
int
int3
sbb
fwait
ret
stos
cmp
pop
xor
test
add
rclb
pusha
jl
loop
ss
std
xchg
es
call
adc
adc
pop
hlt
faddp
in
pop
pop
xor
add
pop
movb
ljmp
xor
mov
inc
mov
inc
xor
mov
imul
out
ret
inc
jmp
and
sub
add
aam
mov
jb
push
jo
aad
and
pop
push
mov
mov
pop
sti
mov
iret
cmp
mov
mov
das
lock
roll
push
repnz
push
mov
dec
adc
fstl
insb
repnz
inc
das
rcrl
pop
xlat
jecxz
sub
inc
push
pop
in
js
push
cli
fadds
in
test
scas
jp
daa
push
sub
fs
inc
cld
les
call
fidivl
push
xor
adc
pop
xor
jae
pop
dec
mov
lret
stc
ds
out
cltd
subl
mov
sbb
int3
repnz
pusha
mov
push
xchg
out
adc
mov
cld
ror
add
pop
xchg
in
push
data16
cmpsb
loope
lahf
aad
jbe
sbb
mov
pop
cmp
pop
sbb
push
decl
aam
jmp
test
xor
out
and
xor
mov
mov
add
adc
out
les
add
pop
mov
rorb
cmpsb
js
movsb
test
sarb
sbb
cmp
cmp
leave
xor
mov
lcall
sbb
jle
cmpsl
xor
adc
icebp
mov
push
in
imul
fiadds
inc
and
cmp
push
adc
mov
pop
insb
jl
sbb
or
adc
and
jno
lcall
xor
repnz
xchg
sbb
mov
push
xchg
lret
shll
das
xor
ljmp
xchg
out
in
lea
mov
and
xlat
inc
inc
pop
jnp
and
dec
mov
daa
pop
ljmp
roll
jne
sub
bound
jnp
xchg
jnp
fisubs
inc
sbb
mov
xchg
loop
jns
lock
and
add
mov
loope
div
sub
sub
jne
out
mov
cs
adc
xchg
mov
insb
cmpb
xor
sarl
jmp
addb
leave
test
mov
js
dec
xchg
icebp
outsb
push
cmpsb
stc
jbe
dec
xchg
pop
push
sbbb
pop
inc
enter
int
jp
push
xchg
xchg
das
and
ficompl
and
aam
push
fsubrs
pushf
mov
orw
aas
cmp
scas
es
cmpsl
inc
fs
es
out
pushf
fsts
fisttpll
mov
testb
sub
and
mov
cmc
mov
mov
sbb
inc
inc
sub
pop
in
mov
or
ljmp
cmc
scas
dec
xor
jl
xchg
fcomi
or
push
dec
jb
mov
or
lods
loope
jns
aam
pop
stos
mov
ds
push
xchg
sbb
lds
mov
cli
pop
js
in
popa
xchg
frstor
dec
aaa
out
adc
sub
sub
je
mov
dec
sub
shlb
push
push
outsl
fstl
cmp
lds
mov
rclb
mov
adc
jecxz
push
xor
pusha
inc
jmp
cmp
xor
scas
xchg
andl
sub
push
stos
xchg
add
mov
jl
cmpsl
movsl
ljmp
cmpsb
das
mov
add
adc
xchg
xlat
mov
xchg
scas
add
and
sub
test
pusha
cmp
pop
jg
and
push
cs
outsl
mov
cmc
rolb
and
hlt
dec
aad
in
xchg
adc
movsb
xor
cmc
pop
ds
negl
movsl
xchg
jnp
inc
aaa
insb
push
pop
pop
lret
out
add
int3
enter
dec
in
xor
adc
scas
es
lds
cmp
popf
sbb
ret
ja
sbb
arpl
scas
mov
shll
xchg
subl
stos
pop
pop
add
mov
leave
and
stc
js
push
jae
cmpsb
and
jecxz
sbb
in
fst
mov
sti
cmpsb
jge
sbb
sti
mov
dec
insb
adc
fidivrs
dec
dec
outsb
data16
cmp
add
icebp
fcoms
mov
push
dec
pop
mov
mov
or
adc
loope
je
mov
shl
popa
push
jbe
cmpsl
scas
sti
xchg
push
mov
lds
int
test
into
or
stc
jmp
es
lret
aam
addr16
jecxz
fdivrl
sahf
sarb
mov
mov
insb
and
push
jecxz
cmp
dec
sbb
xchg
mov
inc
cmc
push
outsl
ds
cwtl
mov
ljmp
mov
cltd
stc
stc
jno
push
cmp
pop
test
incb
xor
mov
mov
call
in
imul
icebp
hlt
sub
dec
mov
fcomp
adc
xchg
jo
jae
mov
lods
xchg
je
lahf
push
lods
stos
xchg
loope
lods
sahf
and
outsb
fucomi
es
inc
or
outsl
mov
inc
mov
mov
dec
test
lock
dec
mov
xchg
xlat
int
out
fdivl
rorl
jg
lcall
xchg
jecxz
push
clc
and
mov
or
or
sahf
cmp
push
int3
or
inc
sbb
popf
hlt
mov
cmp
scas
inc
aam
aad
mov
xchg
xchg
ret
cs
cld
jns
loope
inc
nop
dec
out
mov
adc
mov
shll
and
test
jns
mov
repnz
xchg
stc
mov
and
and
dec
jl
pusha
ret
lcall
sub
adc
fsubs
xor
aas
fstl
dec
mov
add
sets
mov
es
cmp
adc
or
cmp
lods
stos
sub
pop
add
das
cmp
subl
adc
adc
dec
sarb
ljmp
fwait
add
push
xor
rorl
aaa
je
sbb
or
insl
push
clc
mov
mov
insb
dec
shrl
test
inc
jge
sbb
mov
sahf
outsl
jle
cmpsb
sbb
in
adc
stos
inc
mov
xor
out
jg
insl
sub
cwtl
and
or
sub
pop
cmp
xlat
add
icebp
clc
pop
dec
in
clc
xchg
rcrl
stos
jle
filds
repz
add
jl
mov
cmp
ljmp
jo
pop
pop
test
dec
jno
out
push
push
or
rcrb
mov
ja
je
subl
ds
arpl
test
xchg
ret
lds
jne
lock
mov
out
mov
sub
inc
aaa
push
roll
jp
lds
adc
imul
and
idivl
and
test
cmpsb
or
mov
fldln2
std
popa
dec
cs
mov
into
nop
xor
adc
push
notb
outsl
aam
jge
fsubrs
sub
outsl
fists
aam
movsb
cmp
jmp
adc
xchg
outsb
fxam
adc
ret
popf
cmp
in
mov
mov
xchg
adc
push
sub
inc
inc
lret
or
xor
cli
adc
xor
lds
jnp
and
or
mov
scas
inc
cld
into
loope
mov
out
jne
pushf
es
jp
or
out
imul
jmp
stos
cmp
push
or
pop
je
into
movl
jo
jbe
es
mov
fwait
outsb
xor
mov
mov
pop
je
popf
mov
testb
sbb
stos
test
lret
popf
arpl
xchg
push
adc
dec
pop
fstpl
pop
mov
inc
jno
scas
loop
scas
loope
sub
sub
inc
mov
fwait
movsb
sub
xor
jne
xchg
mov
mov
jae
xor
out
aad
jg
js
fsubs
andl
push
mov
cltd
adc
fcmovbe
mov
xchg
inc
insb
dec
mov
imul
push
mov
mov
mov
les
cmpsb
sub
xlat
xor
aad
cli
pop
fildl
mov
sar
pop
add
ja
xchg
mov
cwtl
test
or
repnz
repnz
aas
ss
mov
mov
mov
fbstp
mov
or
out
imul
pop
push
push
in
bound
mov
enter
jg
or
dec
sti
inc
sbb
mov
notb
sub
add
cmp
inc
mov
fcoml
lret
fmul
adc
es
or
orl
or
jb
inc
cltd
mov
adc
cs
mov
jnp
xor
jge
mov
dec
xorb
cwtl
pop
pop
nop
adc
test
mov
jnp
push
cmp
idivb
mov
ljmp
js
mov
inc
or
lahf
pop
or
mov
neg
cs
jae
loopne
rcll
xor
cltd
mov
push
dec
xchg
addr16
mov
roll
daa
mov
lods
in
push
sbb
jmp
ficoml
cld
sbb
push
jae
test
jb
imul
outsl
sub
cmp
pop
movsb
adcb
imul
lcall
sbbl
and
and
fidivrl
call
or
xchg
ljmp
mov
mov
ret
add
sbb
xchg
adc
cmp
call
les
add
mov
fmuls
push
pop
pop
iret
bound
sbb
fcoml
jg
jmp
push
or
sbb
into
imul
xor
mov
mov
mov
jns
cltd
jp
mov
cltd
leave
imul
jne
insl
mov
adc
mov
cmp
dec
shll
mov
std
pushf
push
xor
repnz
je
sub
iret
rcll
xchg
adc
in
movsl
test
outsl
fimull
movsb
fisttpll
je
xchg
idivl
jl
dec
ret
push
jp
lods
mov
cli
ror
and
enter
jl
icebp
or
fcmovne
les
mov
mov
imul
jb
sub
repz
dec
or
cwtl
mov
int3
stos
mov
pop
mov
push
xchg
lcall
leave
and
jecxz
cmp
lcall
or
testl
popa
fwait
sahf
xor
fsubs
rcr
mulps
mov
nop
in
push
scas
in
ljmp
inc
stos
es
repnz
bound
out
ss
pop
push
jnp
fadds
inc
cmp
in
inc
inc
add
enter
sbb
fnstsw
cwtl
mov
lahf
jg
shrl
dec
jbe
shll
add
ljmp
insl
je
repz
mov
and
lea
psrld
inc
call
push
inc
jbe
add
loop
lds
and
enter
mov
inc
shlb
dec
sub
push
adc
jns
pop
shll
mov
cld
aas
mov
out
stc
mov
sbb
xor
stos
or
pop
sbb
stos
les
add
mov
mov
stos
lret
mov
dec
das
and
sti
xchg
aas
cmc
or
shl
mov
sbb
adc
jle
insl
sub
mov
jmp
popa
xor
lods
leave
add
in
out
dec
mov
mov
xorb
pop
gs
fucom
mov
ja
sahf
adc
stos
lods
pop
rcrl
push
cmp
mov
dec
cmp
pop
cs
loop
shrb
test
dec
push
push
dec
aam
sbb
and
fbstp
mov
sub
sbb
sub
mov
test
out
lock
xchg
pop
dec
fnsave
mov
mov
jno
mov
int3
push
mov
cmc
jge
dec
pop
bound
test
or
cltd
es
dec
mov
fcoms
pop
push
mov
fimuls
pop
rcrl
mov
lret
ja
mov
out
ret
xchg
out
inc
lods
lds
mov
daa
sbb
imulb
nop
cmc
shlb
push
adc
clc
mov
test
adc
inc
out
cltd
loopne
pop
fwait
and
lea
lahf
sub
add
cwtl
pop
xor
call
push
aas
jmp
sarl
in
inc
int3
inc
adc
dec
jae
sahf
div
jae
adc
push
mov
sbb
xor
iret
ret
dec
inc
and
mov
and
sbb
cmp
arpl
ret
mov
mov
lcall
lock
scas
jne
inc
xor
ss
cmp
test
mov
dec
movsl
sbb
arpl
cmpsl
outsb
lret
mov
fnstcw
icebp
roll
or
add
test
push
mov
adc
rcrl
sub
pop
jo
lcall
jne
sub
lahf
fcmovb
loope
push
imulb
ja
outsl
xchg
into
popa
in
push
or
mov
mov
repnz
pop
loopne
scas
aam
add
or
push
push
xchg
sbb
mov
rolb
xchg
pop
cmp
mov
lahf
jg
xor
mov
leave
and
pop
cli
in
cmp
xor
sbb
aam
sbb
pop
cmp
xor
add
ss
loopne
push
lods
push
popa
pop
sarb
add
aad
aaa
aad
cmpsb
mov
jge
fsubrp
flds
outsl
pop
movsb
outsb
dec
leave
inc
inc
xchg
inc
adc
mov
fimuls
jl
daa
jne
aas
push
adc
or
mov
popf
cmp
mov
push
mov
cmp
or
je
jo
sbb
jae
stc
leave
int
jmp
in
cmpsl
out
adcl
xchg
xchg
aas
out
inc
or
insl
insb
mov
mov
stos
test
add
xor
shr
push
test
call
imul
lods
jo
into
ret
and
xor
inc
mov
inc
mov
iret
or
sarb
cmp
repz
and
fldcw
outsb
pop
int3
enter
cmp
call
lods
arpl
pop
daa
fiadds
imul
adc
ds
addr16
out
mov
mov
and
jl
mov
sbb
or
mov
out
mov
mov
dec
xor
scas
js
and
call
adc
push
rcll
outsb
lea
cs
dec
popf
xlat
cli
test
gs
cmc
sbb
xchg
mov
fwait
inc
into
xchg
cmp
cs
ret
das
sbb
sub
cmp
cmp
cmp
push
fdiv
xor
sahf
addr16
rcll
adc
sti
and
mov
xchg
xor
push
popa
mov
cli
popa
popa
mov
sub
into
loope
mov
cmp
insb
mov
lock
je
mov
inc
mov
loope
cmp
jle
pushf
pop
mov
lahf
lods
push
push
cmp
pushf
push
cmp
shl
decl
das
insl
add
xchg
insb
icebp
leave
jl
ds
mov
cmp
inc
pop
adc
outsl
pop
fwait
insb
neg
inc
mov
jge
jg
push
inc
test
ficoms
and
push
cmc
xchg
jl
mov
sbb
xchg
jge
faddl
shl
inc
xor
imul
jmp
push
add
sub
mov
mov
fdivl
scas
adc
jp
inc
out
jge
xor
gs
daa
in
pusha
xchg
mov
sbb
pop
scas
cmc
pop
mov
mov
lock
out
fidivrs
iret
cmp
sahf
dec
cmp
pop
bound
fldenv
cli
inc
cmp
test
faddl
lret
mov
xor
or
mov
in
or
xor
mov
push
lods
test
push
pushf
fcom
or
xor
pop
jae
pop
outsb
jno
stc
jnp
xchg
sbb
lock
mov
lods
adc
and
inc
mov
cs
lret
hlt
arpl
outsl
lods
jle
out
cwtl
stos
and
jp
mov
mov
enter
cmp
mov
sti
sbb
cmp
enter
ret
jnp
loope
movsl
dec
sbbb
mov
adc
lds
insb
shll
adc
push
pop
jo
imul
jb
jno
jecxz
repnz
ja
pop
mov
cli
loop
rorl
popa
cmp
and
aad
pop
mov
std
out
sub
adc
ret
cli
call
cmp
inc
inc
dec
mov
ret
xchg
in
in
movsb
pop
xchg
mov
sub
testl
adc
push
out
mov
fwait
loopne
loop
inc
lcall
je
dec
repz
dec
xchg
or
mov
xchg
jmp
pop
cmp
ja
retw
xchg
inc
cmc
adc
test
rcrl
gs
adc
sub
mov
mov
cmpsb
sub
orl
inc
aam
pop
lcall
mul
fwait
xrelease
mov
xchg
cli
fnsave
sub
mov
xchg
lock
stos
ja
subl
fs
jle
int3
jge
sub
ss
pop
mov
push
jo
mov
les
cmpb
pop
fxch
jg
add
xchg
mov
ret
inc
aaa
jo
add
jne
xor
and
lods
es
inc
daa
aaa
jmp
jo
pop
imul
lods
int3
stos
mov
jmp
sarb
dec
test
cmc
insb
xchg
mov
add
test
xchg
fidivrl
mov
mov
push
push
xchg
addr16
out
enter
orb
test
xchg
sub
mov
iret
ja
dec
push
jl
in
lock
adc
nop
add
xchg
sbb
mov
mov
in
pusha
adc
adc
mov
mov
into
xchg
pop
dec
mov
push
daa
mov
pop
mov
mov
jbe
or
in
aad
mov
add
aad
adc
out
fldl
arpl
hlt
sbb
push
adc
pop
and
push
xchg
dec
popl
cmc
in
negl
sbb
cltd
sahf
int3
pop
add
mov
push
jmp
inc
js
mov
xchg
mov
mov
shl
into
ret
sbb
jg
cmp
ja
and
pop
jle
aam
insl
jns
xchg
mov
fwait
addr16
in
cmpb
jmp
xchg
fadds
inc
xchg
adc
sbb
sub
call
push
jbe
movsl
cs
clc
pop
mov
push
adc
rol
das
rcll
pop
xchg
outsl
xlat
jg
pop
and
lods
or
inc
flds
lds
mov
std
xchg
fistpl
jmp
scas
pop
pop
sub
inc
mov
in
cltd
mov
ljmp
scas
cmp
data16
das
mov
inc
pusha
push
repz
lret
xchg
hlt
pusha
bound
imul
jp
xor
xchg
cmp
push
or
mov
rcll
ret
inc
or
dec
push
rcr
push
call
mov
js
xchg
sbb
fsubl
push
loopne
repz
das
xor
push
iret
mov
adc
loop
outsb
in
add
mov
nop
dec
pop
rcr
ja
pop
xorl
sahf
pop
mov
cld
sahf
daa
dec
stos
mov
pop
imul
and
mov
notb
mov
dec
movsb
out
xor
pop
xor
dec
lock
fsubrl
cmp
aam
jnp
adc
fdivrs
sahf
mov
xor
xchg
jle
test
jl
mov
stc
fisubl
mov
xchg
nop
mov
leave
cmc
sbb
dec
and
es
out
aaa
movntq
out
ret
shll
arpl
popa
cmc
hlt
pop
daa
dec
pop
shll
xor
fiaddl
jnp
ret
enter
sub
mov
fs
test
loope
shrb
pushf
mov
adc
scas
je
ljmp
aad
shll
mov
add
ror
idiv
push
dec
lods
jae
or
or
scas
and
test
jns
jl
lock
sbb
lret
jge
push
mov
mov
mov
pop
add
lock
xchg
xchg
sub
clc
jne
sub
addl
xlat
mov
push
push
cmp
fisubrl
js
inc
je
sbb
bound
xchg
fisttpll
or
imul
xor
pushf
mov
sahf
cmp
lods
push
push
orl
mov
or
ret
mov
lcall
jle
cli
sub
adc
lahf
push
fsubrs
or
cli
js
insl
repnz
shll
inc
sbb
arpl
cmp
je
int
dec
call
sarb
and
add
test
pusha
aad
xor
stos
out
adc
addr16
mov
shlb
pusha
rcrl
cltd
pop
icebp
loop
dec
je
inc
or
sbb
fbld
jns
es
out
mov
push
leave
xchg
out
xor
push
sbb
add
cmp
xchg
scas
outsb
sbb
movsl
jl
add
sub
mov
inc
push
xchg
pop
mov
fs
inc
cmp
xor
lcall
outsl
mov
push
xor
mov
movsl
lea
pushl
leave
and
push
popa
insb
bound
in
lock
add
xchg
loope
rcr
negl
iret
icebp
cmp
xchg
aaa
push
sub
push
repz
pop
lds
or
push
imul
ror
sub
adc
push
out
jne
loopne
subl
pop
xchg
pop
pop
xchg
cli
shll
scas
sub
movsb
loope
add
push
pop
sub
fimuls
test
xchg
lcall
pop
sbb
scas
or
mov
jno
xlat
into
pop
mov
add
addb
xlat
dec
mov
mov
jns
repz
jnp
jno
mov
rclb
jno
xchg
bound
sub
cli
pop
push
add
test
mov
int3
push
sbb
jae
arpl
add
mov
ds
loopne
pusha
outsl
xchg
test
rcrb
or
sbb
inc
outsb
aas
rcrb
lcall
dec
pushf
dec
je
mov
xchg
pop
and
mov
push
pop
xor
pop
mov
or
dec
mov
cmp
cmpsb
push
xchg
push
sahf
fisubs
xor
popf
sub
mov
cmc
and
stos
rcrb
push
sbb
test
gs
jmp
jno
jb
sub
arpl
cs
xchg
push
ja
mov
push
sbb
fisttpl
ljmp
xchg
mov
sti
jp
push
sbb
dec
sbb
and
adc
pop
and
outsb
bound
mov
call
mull
mov
or
inc
fiadds
cmp
add
cmc
mov
cmpsl
pop
sbb
adc
dec
mov
lods
xchg
cmp
push
mov
push
jb
or
mov
cmp
or
xchg
popf
inc
mov
sar
fldt
js
xchg
aaa
hlt
movsl
xchg
fadd
mov
cwtl
adc
or
nop
dec
xor
notb
out
popf
lods
ffreep
mov
test
push
dec
sbb
sti
pop
decl
jp
or
inc
push
dec
push
dec
fsubs
cli
mov
pop
mov
sub
push
call
pop
jnp
shlb
xchg
icebp
dec
xor
adc
mov
mov
pop
mov
mov
xor
int3
jnp
ret
xchg
pop
in
bound
jl
pusha
jmp
leave
ret
inc
fstpl
nop
sbb
pop
and
stc
dec
cmp
add
jmp
fisttpl
test
in
mov
fstl
rorb
int
add
jnp
sbb
mov
addr16
jnp
lahf
sbb
and
sahf
push
inc
inc
loope
push
stos
mov
sub
push
inc
loop
xor
and
sbbb
imul
or
inc
nop
push
mov
pop
mov
adc
mov
mov
pusha
push
ud0
mov
repnz
add
ret
pop
dec
xchg
jbe
push
sub
popa
popa
sub
ret
jne
sub
jb
cmp
xlat
pop
rcrl
push
mov
stos
lock
push
xchg
test
gs
jle
repz
mov
and
adc
mov
push
nop
pop
jg
and
mov
xor
outsl
dec
cmp
lds
mov
pushf
ss
push
lahf
cmpl
and
xor
movsb
popl
leave
js
icebp
sbb
fs
mov
xor
movsb
repz
fcmovu
add
or
adc
iret
in
xor
test
mov
ja
dec
daa
dec
xchg
mov
lret
mov
inc
hlt
lods
ja
fdivl
jo
xchg
push
xlat
inc
popa
out
jg
lret
or
jmp
das
scas
push
and
xor
into
dec
jns
jne
cmpsl
push
fiadds
vcmpss
cltd
xlat
cmp
in
out
shrl
dec
jecxz
push
push
enter
sahf
jns
cmp
push
in
scas
and
sub
jp
mov
dec
push
adc
test
sahf
test
add
cmpsb
mov
arpl
cmp
call
loop
xchg
push
mov
xchg
mov
push
xchg
mov
subl
jmp
cmc
js
stc
fdecstp
add
xlat
out
sub
adc
or
scas
fbstp
leave
adc
ss
jnp
addl
outsl
xor
mov
pop
lods
jl
and
mov
dec
pop
rcl
jno
push
push
mov
or
and
cs
call
add
shll
rolb
jg
imul
jnp
fwait
adc
imul
add
aam
pop
sarb
cmp
notl
jbe
dec
jl
push
arpl
imul
mov
icebp
jg
push
pop
andb
mov
xor
leave
out
call
into
mov
cmc
mov
sub
repz
or
push
mov
je
mov
enter
iret
in
mov
adc
mov
cmp
pop
das
jp
lock
mov
cmp
jae
loopne
push
mov
cwtl
daa
scas
pop
mov
and
mov
and
pop
scas
adc
fstl
xchg
or
neg
gs
vmaxpd
notb
ja
sahf
dec
pop
jo
lcall
jb
out
mov
mov
xchg
xor
mov
out
inc
test
cltd
mov
push
push
push
into
sub
mov
jp
outsb
and
lcall
jl
nop
or
mov
out
jle
roll
cwtl
imul
pop
fisubl
sbb
cmp
sub
jae
inc
les
cmpsl
jne
add
cmp
lret
sbbb
xchg
into
popf
jno
sbb
fmul
sahf
sbb
sub
sti
push
fdivl
sbb
test
pop
sbbb
push
jp
icebp
add
lea
dec
mov
in
fimull
sbb
stc
push
pop
xchg
sbb
cmpsb
in
movsb
shll
pop
add
lahf
jbe
cli
cmp
ds
imul
in
xchg
sahf
repz
dec
cli
mov
es
and
outsb
mov
ss
ds
daa
mov
and
mov
test
xor
movsl
cltd
xchg
icebp
push
leave
xor
cld
out
in
xor
jbe
jecxz
sbb
mov
jnp
sub
in
test
inc
stc
les
call
jbe
jb
jb
push
out
xor
cmpsb
lcall
data16
cld
sbb
hlt
out
add
js
in
pop
dec
jb
mov
cmpsb
jp
cli
mov
push
adc
outsb
test
mov
or
pop
pop
push
dec
repnz
cmpl
fs
aas
mov
sbb
out
shlb
lahf
lods
jmp
ror
fisubs
ret
xor
popf
and
jb
ret
cmp
mov
gs
mov
test
adc
jle
cmpsl
lods
shlb
push
jae
subl
testl
add
xor
in
pop
aas
adc
or
or
xchg
push
and
insl
insl
rorl
push
inc
call
ffreep
pop
es
mov
push
scas
pusha
fstl
xor
std
or
cs
fwait
xchg
sbb
cltd
sub
data16
cmp
fwait
jp
pop
mov
push
adc
fcoms
jmp
fstl
push
lret
loope
lock
jle
aad
or
repz
and
pop
push
or
outsb
icebp
std
dec
pushf
mov
sti
or
scas
mov
sbbl
test
loop
sub
add
std
jl
inc
sbb
f2xm1
xchg
and
orb
popa
pop
push
stos
leave
daa
sbb
pop
mov
aam
mov
add
xchg
mov
xchg
lcall
sbb
xchg
or
and
outsl
rorl
xchg
xchg
pusha
repnz
cmp
int3
inc
xchg
jb
add
and
ljmp
bswap
jno
add
cmp
xchg
sbb
mov
rcl
lds
fdivrp
sbb
fadd
or
out
pop
sti
cmp
outsl
clc
je
or
daa
idiv
jb
in
mov
lock
mov
ret
push
sbb
pop
imul
sub
jae
jp
pop
adc
fldl
pop
call
mov
clc
ja
inc
jmp
iret
imull
in
ss
push
fldl
mov
mov
xchg
fcmovnb
cmp
sbb
jle
fcomip
sbb
adc
lds
outsb
push
dec
mov
stos
sbb
add
cmc
mov
mov
mov
outsl
or
and
add
sbb
aam
mov
fwait
dec
enter
in
adc
sbb
mov
popa
sbb
cmp
cmc
cs
dec
movsb
jecxz
jle
adc
lret
ja
clc
dec
daa
insb
jle
pusha
mov
cmc
push
xchg
jg
rorl
scas
test
aam
mov
xchg
divl
xchg
lea
push
cmp
pushf
leave
les
aaa
sbb
cli
lea
cld
push
addb
jae
lock
ja
lret
mov
aam
rcrl
loope
or
out
sub
jmp
lea
or
pop
and
push
cmp
in
mov
flds
jl
fdivr
xchg
outsb
leave
out
repnz
xchg
lea
mov
in
test
es
or
ljmp
xor
add
aas
imul
jbe
or
jmp
add
adc
cmp
push
aam
arpl
add
fnsave
clc
pop
push
fs
test
stc
outsb
clc
dec
jnp
push
push
mov
js
cmpb
cmpsl
add
sbb
in
xor
mov
push
pushf
xor
jno
sub
popa
cmp
add
js
rol
pop
or
stos
xor
dec
cwtl
xor
std
jns
mov
jo
bound
push
or
std
xchg
popa
lahf
cld
add
adcb
pop
adcb
fsubs
mov
movsb
add
sbb
sbb
imul
inc
daa
pop
cmp
popl
test
dec
test
jl
mov
nop
cmp
xlat
xchg
movsl
jo
sbb
das
loope
jg
or
inc
push
xchg
outsl
pusha
or
add
lea
jg
xor
hlt
adc
rorl
cli
in
cmp
inc
psubq
mov
rorb
mov
mov
push
in
sti
insl
dec
mov
lea
inc
jmp
push
arpl
stc
stos
nop
xchg
cmp
mov
pop
fwait
in
and
mov
xchg
test
in
lret
in
repz
and
arpl
add
dec
adc
or
push
lcall
rorb
or
insb
andl
pop
inc
mov
mov
frstor
std
loope
movl
xchg
cmpl
scas
push
movsb
jae
push
int3
cmp
arpl
pop
xor
dec
or
pushf
lock
loope
in
mov
mov
xchg
xchg
adc
jl
idiv
mov
inc
mov
ret
repnz
push
dec
push
es
cmp
leave
mov
aas
jle
xchg
rolb
dec
jp
add
sub
mov
pop
stos
mov
repz
mov
lods
movsl
addl
fdivp
mov
cmp
test
pop
sti
sbb
fldcw
dec
repz
cmc
fists
sub
in
cs
xor
mov
xchg
sbb
mov
loope
xchg
add
imul
cmp
test
and
call
test
sub
nop
push
fidivrl
add
pop
xor
xor
in
push
ss
push
cmp
popf
shlb
outsw
mov
push
xorl
rcll
inc
xchg
cmp
jnp
scas
cmp
jle
mov
mov
inc
xor
pushl
and
mov
dec
loopne
mov
xor
cmc
aam
cld
jecxz
xchg
movsl
jne
js
adc
cld
sbb
adc
loopne
ja
popa
pop
rolb
xchg
scas
mov
cmp
dec
jnp
mov
iret
pop
cli
jmp
stos
stc
mov
ja
cmp
shl
call
mov
jbe
js
in
mov
pop
loop
and
jo
xlat
sbb
arpl
dec
xchg
imul
push
xor
mov
jmp
es
push
popf
xchg
push
hlt
mov
imul
lea
andl
mov
cmp
adc
adc
lret
divl
mov
mov
push
pushl
add
sbb
adc
leave
mov
mov
mov
shlb
dec
pop
cmovg
clc
jo
mov
pop
popf
adc
imul
movsl
loope
sub
pop
cmp
pop
fnstsw
test
mov
outsb
pop
outsl
ret
repnz
outsb
xchg
mov
push
xor
out
out
lret
mov
xchg
imul
mov
popa
sbbl
xchg
mov
xor
rcrb
xlat
jbe
mov
testb
xchg
test
mov
lahf
mov
adc
dec
cltd
xchg
clc
test
add
stos
fistl
pop
sub
jnp
mov
data16
lods
mov
std
stc
xchg
pusha
addr16
test
xorb
jo
loop
and
fmuls
fidivs
mov
mov
clc
sub
push
mov
adc
rcll
ds
inc
hlt
adc
jecxz
add
push
pop
sti
mov
imul
push
aad
mov
or
push
inc
lret
pop
push
xchg
cmp
cmpsl
inc
icebp
jmp
or
pop
test
sbb
rorl
je
pop
imul
push
aam
stos
sub
test
xor
dec
and
cmp
pop
xor
int3
sbb
pushf
lret
cmpsl
cmpsl
fsubrs
cmp
inc
iret
fldenv
mov
lahf
arpl
imul
lds
enter
adc
push
xor
mov
orb
inc
popa
cmp
adc
es
fisubs
shlb
mov
nop
xchg
mov
or
outsb
shll
cmp
dec
clc
notl
iret
push
movsb
les
fdivp
mov
pop
int3
and
xor
stc
pusha
or
push
int3
dec
out
out
in
es
in
jp
arpl
icebp
pop
nop
addb
jmp
shll
sbb
cmp
pop
jmp
hlt
pop
arpl
sbb
jp
inc
aad
dec
or
lds
das
mov
sbb
inc
inc
iret
aad
loopne
aad
mov
popa
inc
cmp
jo
cmp
add
adc
xchg
aaa
sbb
test
pop
xchg
iret
ss
js
sbb
andl
mov
xor
adc
add
dec
dec
xchg
and
nop
or
push
movsl
mov
mov
test
iret
sbb
adc
fs
fwait
les
jae
pop
js
push
pop
imul
shll
faddp
sub
and
dec
movsl
stos
xor
fbld
or
adc
cs
in
pop
push
hlt
popf
jle
mov
pop
int3
add
adc
dec
xor
aas
das
loopne
dec
pop
or
cs
enter
stc
cmpsb
out
stos
test
xor
clc
sub
mov
mov
add
lds
mov
addr16
dec
jecxz
fdivs
je
xor
push
jl
add
sub
adc
outsb
hlt
xchg
adc
cmc
jp
mov
mov
mov
fsubp
mov
gs
xor
stos
dec
cmp
enter
movsb
sub
jns
or
ss
dec
inc
ljmp
js
lahf
mov
jl
mov
jno
dec
mov
dec
cmp
scas
push
push
movsb
mov
pop
and
popa
sbb
mov
nop
sbb
mov
ficoms
in
xchg
jne
xor
call
add
xlat
mov
ja
movsb
sbb
jae
jg
jecxz
in
xor
in
nop
cwtl
loopne
shll
or
outsl
cmpsb
ret
insl
addb
movsl
rcll
mov
ret
in
xchg
add
inc
arpl
outsl
inc
jle
and
fwait
icebp
cmp
mov
inc
cmp
push
pusha
sahf
lods
cmpsl
pop
mov
lods
fdivr
inc
mov
mov
dec
fnstcw
fsubl
dec
xchg
sub
xor
rorb
push
loope
push
and
jl
dec
ret
clc
and
xchg
cld
or
stos
fisubrl
jbe
les
sub
es
or
dec
fbld
shrl
fmull
xorl
fstl
ret
xchg
movsb
jnp
and
xor
mov
pop
pop
in
sub
inc
or
in
push
inc
sub
andl
sbb
pop
fs
adcl
mov
aad
push
es
daa
jno
xchg
adc
cmp
and
clc
dec
sub
shlb
jl
test
fsubp
mov
in
cmp
cld
fidivrl
sub
mov
fmul
in
ret
sub
leave
loop
stos
xchg
dec
add
pop
stos
xor
pusha
loope
das
sbb
sub
push
pop
cmc
in
pop
scas
test
loopne
test
add
mov
stc
shlb
into
or
or
loop
sbb
repnz
outsl
pop
push
out
dec
pop
mov
loopne
push
inc
xchg
ficoms
cmp
pop
or
lods
addr16
cmpsb
stc
mov
jl
mov
add
mov
scas
jnp
xchg
push
push
dec
jne
add
popf
mov
mov
sbb
repnz
fs
sbb
lret
pop
jmp
movsb
xor
jl
jecxz
mov
xchg
mov
mov
out
popl
add
dec
insl
sbb
fildll
xsha1
cmpsb
dec
and
xchg
push
adc
pop
adc
pop
mov
fmul
xchg
in
xlat
mov
sub
nop
add
out
xor
loope
and
cwtl
mov
jmp
or
stos
sbb
cmp
pop
xchg
mov
ret
cmp
aam
movsl
add
or
pop
gs
dec
arpl
cmc
dec
insb
shll
dec
and
stos
and
out
push
lods
mov
inc
mov
mov
dec
mov
or
cmp
lock
dec
inc
or
add
aas
fdivr
cmc
jbe
out
mov
lahf
aam
push
xor
mov
cmpsl
leave
shrl
push
int3
sub
out
lods
call
adc
dec
push
enter
mov
and
dec
xor
and
cwtl
leave
popl
cmpsb
or
pop
and
popa
dec
push
movsl
fistpll
icebp
ja
ficoml
mov
mov
fwait
inc
scas
popf
clc
jae
into
xchg
cmpb
fisubs
sarl
loop
mov
loope
aas
pop
roll
push
movl
mov
lds
in
mov
mov
xchg
bnd
push
xchg
shr
lods
inc
xor
adc
frstor
rolb
mov
xorl
cmp
xor
push
icebp
mov
xor
xlat
xchg
sbb
jae
xchg
andb
jge
out
lret
cmpsb
sbb
mov
pushf
insb
into
or
add
fcoms
inc
leave
out
xchg
fnstcw
fwait
sarl
adc
les
clc
sub
loope
xor
cld
cli
ds
sbb
mov
xor
cmp
sub
lock
jno
lahf
dec
xor
push
aad
lea
mov
cmpsb
mov
xor
adc
cmp
mov
sti
movsb
jns
sub
idivl
inc
lcall
outsb
push
dec
popf
insl
inc
push
mov
adc
cmp
inc
in
sub
sbb
jp
sbb
es
mov
bswap
es
out
cmp
shll
std
into
mov
sarl
push
jns
jg
sub
mov
sahf
jle
leave
lret
add
in
push
mov
in
mov
in
mov
lret
dec
das
cmpsb
es
inc
jge
aam
push
dec
stos
pushf
cmpsb
jle
push
loopne
pop
nopl
mov
mov
xor
and
mov
sub
xchg
xchg
push
loopne
cmpl
inc
pop
pop
jno
push
std
xchg
xchg
xchg
pop
inc
lods
rolb
dec
fstl
cmp
or
mov
fcompl
inc
scas
push
pop
mov
cmp
mov
popf
cmpl
loope
cmp
adc
adc
or
adc
das
push
jmp
push
mov
out
and
fists
or
dec
fdivs
insl
mov
sub
jne
aad
inc
iret
mov
fstp
inc
xchg
vmovd
in
add
testb
gs
sub
sbb
mov
dec
daa
leave
push
roll
inc
pushf
inc
pop
ss
in
mov
mov
data16
jae
mov
jge
or
das
or
dec
sarl
pop
pop
clc
dec
pop
ljmp
adc
fidivrl
sahf
mov
and
fwait
jae
sub
in
rol
ljmp
repz
aam
jp
pop
add
push
sub
aaa
mov
movsb
enter
pop
xchg
push
inc
jmp
mov
dec
mov
dec
add
add
gs
pop
xor
lcall
cwtl
mov
xor
mov
adc
sub
mov
and
lret
jo
repnz
enter
mov
mov
or
mov
jl
fistps
into
mov
imul
mov
out
or
aad
in
test
shll
dec
dec
je
jmp
mov
nop
or
jnp
sarb
outsb
jg
mov
add
das
mov
xchg
inc
pop
xchg
inc
lahf
lds
sbb
les
push
jg
and
and
cmpsb
adc
arpl
cmp
push
inc
aaa
jle
gs
jp
sub
mov
add
arpl
bound
cmp
je
ret
or
cmp
int
outsb
adc
fildll
xchg
sub
mov
xor
rolb
ret
mov
sbb
push
mov
add
xchg
out
mov
pop
inc
js
stos
cmpsl
test
imul
jmp
aas
gs
inc
add
sub
cmp
mov
or
jno
sti
mov
pusha
add
adc
ja
add
inc
sub
pop
int3
sbb
ja
xchg
inc
mov
aad
jnp
imul
sbb
fcmove
xor
stos
sbb
lcall
scas
push
push
lahf
jmp
and
repnz
add
mov
in
push
lods
cmp
and
sub
mov
aad
cmp
fld
fldcw
dec
mov
dec
nop
mov
mov
frstor
sbb
and
imul
and
push
das
rcll
ja
out
adc
hlt
dec
mov
cmp
sbbl
xchg
addl
icebp
ret
rolb
stos
ret
inc
sbb
inc
push
sub
roll
dec
mov
and
loop
add
mov
mov
mov
pop
add
xchg
shlb
xor
lret
jmp
push
fimull
mov
fbld
push
sub
mov
stos
in
jg
scas
dec
and
jns
sbb
fidivs
pop
lock
cmp
into
out
sub
cltd
mov
cmp
mov
sti
adc
sbb
adc
pop
in
lods
jmp
sbb
xchg
int
inc
cmpsl
movsl
loope
out
and
xchg
incl
in
add
lret
jbe
cs
push
mov
xchg
jg
out
in
scas
xchg
inc
mov
in
mov
add
adc
or
mov
inc
dec
insl
or
rorb
adc
pop
mov
push
roll
loope
and
jecxz
cmc
jns
les
ss
dec
add
rcrl
mov
sbb
mov
lods
fmul
test
sub
jbe
lods
ljmp
outsl
push
and
dec
xor
jg
scas
cmp
fldl
popa
dec
sti
test
scas
rcrb
push
ljmp
in
and
push
xor
subl
scas
decl
test
lods
addr16
fwait
sub
xchg
gs
sbbl
fwait
jg
xor
in
mov
fbld
push
ret
aam
jg
ja
out
sub
push
jbe
jge
rorl
pop
sub
test
xchg
mov
lods
jecxz
loopne
add
jle
test
das
dec
push
insl
and
adc
xor
data16
xchg
insb
mov
scas
dec
cmp
divb
call
daa
in
fptan
mov
ss
mov
ficoms
das
jecxz
mov
popl
sbb
shlb
and
dec
std
loopne
jae
mov
jnp
or
std
mov
and
ficomps
scas
fists
sub
cmp
cmp
dec
and
pop
cs
and
pusha
and
inc
mov
sbb
push
int3
cmp
jae
stos
xor
or
fabs
jbe
jbe
push
xchg
adc
stc
mov
sub
or
xor
andl
decb
xchg
les
stos
sub
jne
icebp
xchg
fnsave
lahf
or
roll
push
inc
shll
adc
mov
jns
mov
das
repz
lock
or
outsl
movsb
in
out
fs
mov
aaa
and
ljmp
mov
jbe
xor
daa
cmp
std
push
or
add
loop
jmp
repnz
test
add
ret
cs
ret
push
inc
dec
test
inc
or
lods
test
sub
inc
aas
mov
or
and
add
dec
aam
pop
pop
cmp
add
ds
inc
jecxz
add
xor
push
dec
sub
inc
or
ss
xor
imul
loope
cwtl
jb
call
push
jbe
int
cmp
jns
in
int
nop
inc
adc
test
sub
outsl
mov
xor
divb
add
testl
sub
sub
idivl
adc
sahf
and
addr16
stos
fwait
jns
aaa
cmp
stos
mov
push
arpl
fsubrp
pop
fwait
stos
andb
cmpsl
jmp
repnz
dec
adc
dec
or
mov
lahf
sub
dec
loopne
pop
mov
dec
cmp
sub
xor
dec
js
jns
inc
inc
jo
pop
inc
aaa
icebp
fwait
icebp
lea
in
aam
add
pop
xchg
jbe
or
push
hlt
and
xchg
flds
mov
out
cmp
jmp
ret
icebp
jae
in
inc
aas
xlat
insb
pop
aam
sub
iret
cmpsb
jp
lcall
mov
sbb
jno
imul
insl
push
jb
aas
enter
xchg
mov
sub
add
dec
js
pop
mov
int
aad
pop
xchg
xor
or
mov
call
sub
hlt
in
dec
cmpsl
and
and
jae
dec
inc
sti
popf
mov
xor
xor
cmp
std
mov
inc
xchg
insb
ds
mov
and
ds
sti
mov
int3
leave
jo
cwtl
sahf
push
sti
jo
jge
xor
ficoms
fs
xchg
shrl
test
lret
sbb
insl
aad
das
adcb
xchg
pop
insb
add
lgs
xchg
int3
jnp
xor
cltd
incl
jmp
mov
ret
cmp
clc
or
outsl
addl
adc
aad
cmp
xchg
jge
mov
bound
ja
jmp
sub
jge
sti
dec
call
cmp
mov
cmc
jg
fisttpl
es
data16
jle
incl
mov
inc
sbb
jmp
stos
clc
sbb
dec
sub
push
cmp
push
and
test
repz
cltd
in
adc
clc
push
push
jge
dec
sub
adc
loope
xor
cmp
push
mov
popa
lea
pop
mov
push
mov
rcll
or
dec
imulb
inc
or
inc
lock
mov
test
adc
jbe
xorl
push
dec
hlt
inc
inc
lods
dec
cmpsb
jne
sub
lret
sub
repz
in
inc
add
ret
dec
xchg
pop
jle
push
add
mov
cltd
push
inc
pushf
cmp
or
xchg
fwait
imul
lret
call
jge
aas
dec
aam
enter
mov
imul
sbb
push
or
mov
test
jmp
sti
xor
pushw
fdivrs
fbld
sti
jb
int3
daa
test
add
jnp
fwait
out
inc
repz
ds
xor
data16
sbb
mov
add
push
sub
add
jg
dec
fldt
ljmp
les
aaa
sbb
lea
sbb
fs
xchg
cmp
std
aam
dec
cmp
dec
jmp
xchg
or
or
mov
push
ljmp
or
cmpsl
gs
or
popf
xchg
pop
sbb
lds
pop
scas
or
outsb
stos
sbb
and
or
iret
cmp
jmp
pop
cmpsl
cld
repz
das
add
and
mulb
add
inc
ror
testb
jmp
pushl
fucomp
inc
pop
push
mov
ja
sub
aaa
mov
jbe
cld
adc
mov
clc
test
dec
jne
test
jecxz
insb
out
xchg
mov
dec
sbb
idivb
rcrl
adc
aad
nopl
add
mov
cmp
jecxz
sar
gs
lock
add
lret
push
fbld
sub
xor
loop
fstps
xor
cmp
cmpb
dec
js
cmc
int
pop
pop
das
or
dec
icebp
in
mov
lahf
mov
mov
jns
sub
cmp
mov
or
inc
icebp
or
xchg
xorl
cltd
fstps
loop
push
cltd
mov
pusha
in
cli
scas
pop
jnp
push
adc
ja
fbstp
scas
cmp
xchg
jmp
mov
and
xchg
aas
xchg
dec
and
in
mov
inc
xchg
sbb
xor
push
repz
fwait
clc
ss
rcrl
fnstsw
push
cltd
lock
fistl
imul
pop
pop
sub
sbb
stc
jecxz
loopne
cmp
in
mov
movsb
mov
nop
aam
mov
sub
mov
shll
or
xchg
xor
dec
outsl
inc
jne
push
fnstcw
add
mov
sub
loop
lods
inc
call
dec
out
jmp
jp
je
mov
xor
inc
xor
ds
jae
add
fstp
inc
mov
clc
xlat
xlat
popa
stc
add
out
gs
push
mov
insl
dec
scas
xchg
push
fiaddl
scas
xchg
push
pop
cld
clc
dec
stos
out
jecxz
aas
pop
sbb
pop
lock
lret
shr
imul
cmp
add
mov
xchg
inc
pop
lret
sub
dec
cli
imul
pop
push
cmp
dec
pop
fs
jbe
add
jno
dec
dec
cwtl
ljmp
int
dec
ds
shl
int
dec
and
add
js
mov
mov
sbb
jae
aas
adcb
pusha
mov
xor
pop
cmp
jnp
fs
sub
sti
pop
pop
add
stos
aam
cmp
mov
xchg
aaa
movsb
jge
imul
xchg
ficoml
jne
in
mov
inc
pop
xchg
insl
push
cmp
dec
mov
xchg
popf
mov
incb
stos
scas
ja
pop
push
les
lock
popl
add
cmp
pop
jp
jge
pop
xchg
cmp
jo
insl
xchg
xchg
stc
adc
sub
jno
cmp
shl
es
loopne
mov
gs
rcrl
add
rol
ret
rolb
or
call
cmp
mov
xchg
out
sub
nop
repnz
mov
cwtl
xchg
inc
xchg
mov
inc
cli
push
ljmp
adc
fiadds
dec
mov
push
jnp
fstl
pop
orb
inc
ss
push
imull
stos
mov
pushf
rolb
xor
cmp
shll
push
mov
imul
in
or
cmp
fstl
cmp
rcl
in
mov
xor
leave
xchg
jmp
sbb
arpl
jle
jmp
mov
sti
sbb
mov
dec
rorl
out
push
and
jns
lahf
into
cmp
and
xor
sbb
sub
and
or
cmp
popa
js
inc
nop
add
pop
jl
sub
sbb
xchg
and
mov
cmpsl
mov
adc
lds
push
cmpsb
gs
mov
fisttpl
sub
sub
mov
shll
pop
rorb
add
adc
inc
xlat
cmp
push
clc
mov
pop
mov
jmp
sbb
mov
aad
lret
push
mov
xor
test
pop
dec
and
mov
and
mov
add
dec
sub
sbb
dec
dec
adc
add
jo
jb
mov
mov
mov
adc
dec
sarb
dec
cs
sbb
pop
les
jbe
jo
movsb
mov
pushf
aas
or
jb
sub
aaa
cmp
xchg
xor
es
cmp
dec
icebp
stos
stos
in
add
stos
jp
cmpl
mov
das
mov
adc
aaa
adc
adc
jg
les
in
add
or
out
lcall
jns
imul
dec
imul
push
xchg
and
sti
clc
or
mov
xchg
loope
jmp
or
iret
cwtl
aad
pushf
sub
cmc
int3
popa
aad
jg
pop
les
jbe
mov
xchg
pushf
pop
divb
mov
stos
and
lret
popf
jne
clc
pop
sub
in
mov
jnp
push
sbb
dec
or
lret
inc
inc
clc
ja
in
push
mov
or
mov
mov
xor
lds
mov
cltd
jg
xchg
aaa
in
stos
mov
adc
push
xor
xlat
adc
lock
fistps
or
dec
sbb
xchg
fcmovb
push
sub
adc
cmp
xchg
and
mov
xor
xchg
addr16
sarb
ljmp
pop
insl
out
decb
imul
jle
cmp
pushf
push
xchg
mov
pushf
sbb
mov
mov
inc
sti
shl
jns
add
push
jo
lods
cs
iret
fmuls
rclb
pop
mov
or
jmp
test
in
rcll
pop
sar
ljmp
cmp
rolb
mov
mov
icebp
add
or
xor
iret
push
jle
cmp
outsb
adc
xor
add
xor
push
sub
lea
jmp
pop
xchg
ret
mov
arpl
mov
sti
insl
lcall
dec
popa
pop
sbb
add
and
pop
stos
addr16
int
pop
adcl
push
insl
mov
inc
or
and
sbb
data16
cs
int
jmp
mov
mov
xor
push
xchg
bound
inc
adc
sub
lret
stc
add
adc
cmp
cmpsb
mov
and
adc
daa
mov
ret
mov
test
test
lret
pop
xor
xchg
call
int
push
imul
sub
repz
stc
insb
mov
imul
in
dec
add
mov
sbb
and
loopne
jnp
add
lods
dec
dec
ds
cs
js
jle
hlt
mov
lahf
add
jl
ret
xchg
adcb
clc
mov
clc
dec
jae
and
dec
imul
adc
lcall
mov
sub
leave
add
jns
xchg
adc
jae
insl
leave
fs
pop
xchg
test
call
repz
adc
ja
aad
pop
scas
ja,pn
imul
and
push
hlt
rolb
test
or
les
inc
sti
int3
bts
jmp
xor
and
sbb
stos
cwtl
sub
lds
mov
add
js
cmp
pusha
fsubr
jle
mov
hlt
stos
mov
push
xlat
and
into
outsl
jg
addr16
inc
xchg
mov
nop
sub
mov
xchg
xor
jl
das
int3
out
or
jno
in
cmp
mov
adcl
lock
dec
arpl
sub
jnp
mov
pop
arpl
pop
mov
push
mov
mov
sbb
scas
xlat
add
test
cmpsb
jno
jp
into
loope
adc
pop
jecxz
or
or
push
jb
fs
add
push
jno
stos
das
and
inc
cmp
lock
testl
sbbl
scas
push
icebp
cmp
inc
dec
cmp
or
jg
lret
dec
lea
test
dec
adc
dec
inc
sub
inc
inc
stos
shrl
arpl
fs
dec
xchg
jae
dec
adc
sub
mov
or
addb
cmp
lcall
fistps
pop
pop
dec
jmp
pop
out
mov
xchg
adc
ret
push
mov
pop
pop
sbb
add
mov
push
daa
push
jmp
jno
in
dec
dec
push
push
dec
sbb
push
aam
adc
imul
jae
xchg
mov
jo
xlat
fadds
xchg
or
ret
add
inc
and
call
je
ds
sbb
cmp
pop
jb
mov
cmp
pop
sbb
shrb
nop
scas
loop
sbb
pushf
in
mov
movups
mov
jo
pop
or
sbb
pop
test
xor
or
sarl
pop
loop
outsb
mov
mov
lret
push
push
push
push
jbe
stc
mov
and
outsb
inc
pushf
push
xor
test
or
les
sahf
shl
fisttps
fnsave
stc
cmp
mov
daa
inc
mov
int
int
xchg
mov
or
aam
xchg
lods
lahf
in
out
add
and
push
rcrb
mov
aad
cmp
sub
imul
std
push
add
cmp
xchg
add
cmp
fdivrp
dec
fisubl
leave
mov
cmpsl
fidivrs
div
rorl
shrl
pop
sub
shrb
in
in
aad
adc
pushf
outsb
lods
mov
cld
daa
notb
sar
sahf
and
stc
loope
jae
ficomps
mov
out
cmp
aam
fwait
xor
mov
adc
fs
or
mov
stos
call
jnp
sbb
mov
xchg
pop
push
mov
jne
js
inc
insl
cmp
jns
mov
lds
popf
cld
pop
xlat
inc
push
dec
mov
push
nop
adc
js
std
jns
lret
addr16
rorl
xchg
xchg
inc
jecxz,pt
xchg
xor
push
aaa
mov
jb
cmpsb
shll
fld
xchg
cs
inc
lret
cvtps2pd
jno
imul
and
sbb
test
cmp
ljmp
movsb
clc
inc
scas
ss
xchg
nop
add
stos
xchg
in
push
jge
stc
pop
cmpsb
lahf
adcl
or
jnp
fs
repnz
lret
or
xor
xchg
pop
mov
pop
and
push
lret
lahf
push
insl
pop
fcmovne
mov
xchg
sbb
inc
ja
aaa
cmp
lods
and
xlat
or
xchg
xchg
stc
aad
adc
mov
adc
xchg
xchg
push
jno
nop
pop
test
lret
xor
fsubl
inc
scas
in
add
adc
jb
ja
or
pop
rcrb
adc
dec
cmp
xor
jae
mov
xor
mov
fcompl
jmp
or
cmc
add
pop
xor
sbb
inc
push
and
mov
pop
xchg
hlt
jecxz
xchg
sahf
outsl
add
fwait
out
mov
sbb
rcll
pop
cmpsb
pop
xor
jecxz
or
outsl
aas
cmp
mov
outsb
push
in
stc
cmp
mov
test
add
sbb
inc
or
repnz
adc
push
xchg
rcrl
dec
lahf
cld
fnstcw
lret
jp
sbb
popl
ljmp
and
mov
jo
cltd
divb
orb
push
daa
xor
jecxz
cmp
pop
pop
xor
mov
jno,pn
stos
or
cmc
dec
gs
out
pop
loope
and
pop
arpl
mov
cli
punpckhdq
pusha
xchg
lock
inc
add
xchg
shll
rorl
mov
mov
push
xorl
outsb
mov
adc
fisttpl
stos
js
sbb
sub
xor
or
sub
in
fcompl
rolb
sti
fcmovnu
xor
mov
xor
jns
call
sbb
lock
sub
push
pop
lods
jge
mov
pop
sub
mov
cli
add
andb
enter
mov
pop
aad
xchg
mov
leave
cmp
outsl
cmp
push
lock
icebp
ret
push
outsl
jbe
addl
ds
pop
mov
pushw
mov
mov
loopne
xor
js
pop
fbld
pop
jl
xchg
pop
out
dec
loopne
jecxz
xchg
hlt
inc
stos
push
int
sahf
xchg
push
push
into
insl
dec
xchg
sub
popa
stos
out
xchg
in
mov
xchg
loopne
imul
and
icebp
test
cmp
or
fwait
add
out
shll
cmpsl
lods
test
fnstenv
jns
inc
inc
ja
xchg
fstp
mov
daa
jmp
inc
pushf
shlb
push
pop
xor
inc
or
push
push
push
jmp
test
lahf
rcr
jge
cld
push
das
jbe
sbb
aam
ret
inc
cmp
sahf
hlt
sahf
sbbb
daa
xor
push
aam
adc
push
xor
aas
test
inc
and
jb
dec
xlat
inc
xchg
clc
outsl
sahf
lea
sbb
and
or
ffreep
xor
sub
jg
or
pop
movsl
mov
mov
cwtl
frstor
sub
sub
push
add
cmc
clc
adc
lret
inc
mov
mov
and
mulb
push
mov
in
xchg
adc
mov
pop
cmp
dec
in
mov
xlat
lahf
sti
cwtl
xor
rolb
fninit
mov
loopne
bound
push
jne
jmp
in
mov
sub
dec
pop
arpl
lahf
cs
dec
fs
dec
dec
inc
or
mov
add
jnp
inc
jno
push
or
xor
and
gs
test
clc
mov
add
mov
lods
mov
leave
push
shll
mov
popa
fwait
lea
mov
mov
jl
push
dec
jmp
pop
aad
lcall
mov
lret
roll
push
fidivrl
push
and
xchg
add
cmpsb
adc
leave
xor
sahf
mov
lahf
xchg
sub
cmp
bound
into
lret
pop
add
mov
popf
repnz
adc
xchg
repz
outsl
loope
mov
loopne
cmp
pop
aam
or
jno
and
add
jmp
lock
call
nop
sarb
pop
and
aam
bnd
in
sub
push
jae
stos
jge
lds
lds
jg
adc
stc
stc
mov
and
dec
pop
pop
mov
sahf
sbb
inc
iret
rorb
dec
fucom
iret
xchg
repz
in
daa
mov
pop
ja
dec
jns
cmp
orb
jp
push
aas
test
lret
jl
fwait
repnz
add
push
and
call
aas
loope
push
repz
cwtl
repz
divl
adc
adc
mov
sub
or
stc
lods
and
push
mov
dec
sbb
and
push
dec
jb,pn
or
es
movsl
mov
shl
imul
mov
cmpl
inc
aad
inc
sbb
rcr
out
adc
in
imul
mov
add
pop
stos
xchg
stc
push
add
cmp
xor
enterw
jbe
mov
jp
lret
jne
test
push
adc
int
lahf
popf
mov
outsl
adc
jmp
pusha
out
imul
pop
hlt
and
dec
mov
ja
jge
push
in
shlb
fsubrl
xor
out
push
pmulhuw
mov
adc
and
dec
test
inc
xor
sbb
or
stos
arpl
ret
push
push
repnz
push
pop
mov
xchg
mov
js
or
inc
push
pop
ja
add
jne
sbb
cmp
cli
cmp
in
pusha
lea
mov
dec
mov
or
xchg
pop
ret
loope
cmc
mov
and
ret
sbb
clc
outsb
shlb
jo
lods
sub
test
jge
bound
arpl
fcos
add
out
adc
lcall
push
in
test
xlat
or
imul
sbb
loope
enter
or
in
and
lret
mov
push
iret
mov
call
popa
pop
add
pop
fs
aaa
int3
les
lods
add
push
mov
rcr
out
xor
adc
or
pop
testb
into
push
cs
cmp
mov
popa
mov
fdivrs
dec
outsl
addl
in
in
jg
jae
inc
mov
xor
and
jle
sbb
iret
movq
or
dec
outsb
mov
mov
pop
mov
inc
lret
pop
fs
int
jo
testl
mov
cmp
jb
pop
test
push
xchg
pusha
ficoml
test
ljmp
inc
hlt
mov
lea
cmc
repz
cmc
mov
push
jae
dec
out
adc
out
out
test
sub
stos
insb
das
add
push
jge
out
test
ret
mov
xorl
pop
iret
jp
or
iret
aas
and
ljmp
popf
les
out
pcmpgtd
push
outsb
cli
mov
bound
push
jge
rcll
ret
fnstsw
test
mov
or
add
dec
add
pop
xlat
dec
and
cmp
sti
daa
stos
inc
lcall
or
fwait
pop
lahf
pop
adc
lods
jge
pop
fldl
movsl
clc
pop
popa
cmp
xchg
insl
rcrl
xchg
fsubrl
cltd
cmp
and
into
cwtl
push
test
push
mov
ja
les
add
and
push
mov
fisubl
add
mov
aad
jmp
addr16
mov
mov
fildl
in
out
push
ror
xlat
jp
hlt
pop
or
movsb
xor
mov
sub
mov
std
sbb
or
jge
rolb
sar
mov
inc
test
xor
xchg
shr
or
xlat
jns
mov
push
lret
push
and
jbe
jb
stos
das
add
mull
scas
rcrb
je
lcall
clc
imul
adc
in
push
fsubrs
into
cs
fisttpll
or
sub
jmp
movb
or
inc
mov
popf
sub
sub
mov
xchg
fucomip
loope
jge
xchg
or
das
jnp
pop
jecxz
into
insb
aad
lea
lods
mov
mov
and
orb
aaa
in
or
fs
xor
or
cwtl
lret
sbb
dec
lahf
xchg
inc
out
inc
pop
iret
mov
jmp
sub
jmp
int3
cmpsb
pop
sub
les
int
loopne
and
mov
iret
es
mov
cmp
mov
test
sub
adc
mov
sub
test
repz
pop
jecxz
mov
sbb
fildll
or
sub
push
pop
cwtl
loope
out
fs
inc
icebp
xchg
adc
sub
cmpsl
or
jge
push
adc
imul
es
pop
popf
mov
dec
or
and
add
adc
or
sub
add
por
insb
xchg
pop
cwtl
add
bnd
push
lret
or
ss
mov
vmread
cs
dec
in
loope
sbb
fs
xchg
inc
adc
adc
mov
mov
pop
mov
mov
ss
lods
ficomps
inc
or
jmp
jae
pop
or
data16
loop
dec
add
lret
test
or
bound
adc
mov
cmpsl
mov
shlb
xchg
sbb
sub
into
lods
sahf
sbb
inc
sub
into
out
sub
out
aam
cld
aam
lds
sbb
sbb
sbb
pop
fwait
push
or
push
pop
je
adc
mov
mov
int3
push
neg
add
adc
push
fxch
adc
dec
pop
aad
movsl
in
adcb
mov
data16
mov
lea
cli
ret
lret
ljmp
int3
mov
js
int3
sbb
out
mov
int
xor
or
adc
dec
xor
scas
sbb
popl
mov
lahf
pop
cmp
popf
mov
bound
testl
ret
shlb
push
mov
add
cmc
ja
mov
pop
ret
rorl
stos
clc
cmp
push
lret
xchg
sbb
mov
sub
mov
lea
xchg
std
mov
pop
in
sbb
push
sbb
inc
cmp
shl
push
mov
push
and
or
pop
xor
bound
repz
nop
into
ret
pop
pusha
mov
insb
sahf
mov
cmp
nop
sub
dec
pop
xchg
daa
inc
fidivs
pcmpgtd
inc
xchg
add
cltd
je
dec
popf
or
out
cmpsl
insl
es
std
push
or
out
shll
mov
push
sbb
cmp
pop
lahf
adc
out
push
knotb
xchg
ss
xchg
aam
jecxz
gs
ret
out
hlt
mov
gs
into
inc
or
nop
mov
psubq
dec
ret
mov
sbb
pop
add
xor
and
push
xchg
push
sbb
push
push
xor
out
or
sbb
out
subb
not
repnz
push
leave
sbb
dec
inc
int3
orb
popf
or
cmp
bound
cmpsl
jle
xchg
test
popf
aam
mov
xchg
movsl
xchg
and
add
cmp
pop
enter
adc
cmpb
std
popa
mov
sub
hlt
addr16
aad
fisubrl
adc
out
jecxz
inc
mov
inc
pop
addr16
jne
out
mov
pop
pushf
jae
pop
mov
mov
xchg
aas
xor
shlb
and
jae
inc
jae
mov
in
pop
iret
cmp
mov
cwtl
mov
aad
andl
in
xchg
inc
xchg
cmp
lret
and
add
xchg
pushf
ljmp
push
jp
pop
pop
mov
sahf
add
mov
adc
int
sub
cltd
bound
adc
rol
adcb
sbb
cmpsb
sub
adc
nop
mov
mov
adc
sbb
jno
jbe
mov
push
push
or
inc
mov
out
clc
hlt
xor
pop
xchg
mov
sbb
sahf
or
push
leave
or
fdiv
xor
int
inc
lods
push
mov
xchg
pop
xor
mov
repz
adc
lds
iret
mov
inc
lods
ret
pop
jl
jnp
icebp
mov
outsb
std
rclb
mov
loope
dec
testl
xor
mov
cmp
fldcw
mov
mov
inc
out
test
mov
mov
xchg
int3
hlt
xchg
ss
out
cmp
out
push
clc
fs
leave
pop
push
add
lcall
jae
dec
xor
les
push
sbb
shlb
out
push
ds
test
imul
stc
xchg
repz
stos
ret
inc
pop
iret
fildl
jae
pop
mov
leave
fstps
sbb
adc
cwtl
ds
jno
xchg
xchg
inc
and
cli
loopne
das
stos
mov
push
add
mov
pop
cmp
inc
xchg
outsl
out
out
mov
pop
sbb
aam
repz
push
es
mov
inc
dec
pop
sub
and
sbb
xchg
insb
lahf
outsl
pushf
and
ds
pop
divl
mov
lods
out
movsb
loopne
lahf
insl
test
jmp
sbb
lahf
mov
xchg
rclb
xchg
sbb
test
jae,pn
je
push
cmpl
imul
jge
inc
xchg
std
and
data16
imul
sub
mov
add
dec
sahf
fcomps
roll
sbb
xlat
cltd
pop
leave
arpl
mov
xor
or
rcrl
mov
es
lods
test
lcall
mov
mov
mov
mov
sbb
les
mov
aam
and
push
mov
fistpl
aaa
sbb
lcall
pushf
in
xchg
mov
dec
lock
sbb
aam
mov
int
stos
sub
cmpsl
or
arpl
or
jecxz
mov
inc
or
push
mov
enter
shll
in
pusha
mov
sbb
push
xor
nop
js
cmp
push
sbb
dec
les
xor
xor
pop
mov
enter
mov
aad
xchg
and
xchg
icebp
ds
test
pop
sarb
mov
fbstp
shll
sbb
cli
mov
cli
sbbl
push
inc
stos
xor
xchg
flds
int
jge
fldenv
mov
int
sar
rolb
inc
mov
inc
addl
imul
inc
out
jp
inc
aas
add
out
int
mov
xor
inc
xor
out
enter
rorl
or
repz
and
add
test
subl
enter
out
cmpsl
xor
pop
popw
dec
rcrb
test
dec
mov
push
out
inc
push
mov
xor
sbb
add
aas
push
inc
xchg
cli
daa
sbb
adc
sub
loope
inc
dec
subb
adc
in
dec
mov
and
sub
push
leave
std
cmp
and
imul
jecxz
ljmp
push
xchg
cmpsl
cmpb
adc
sub
fildl
or
or
adc
imul
stos
hlt
xor
sarb
push
add
mov
jno
sbb
sbb
cmp
jno
add
cmpsl
or
inc
cmpsb
jnp
mov
and
stos
pop
inc
push
pop
cwtl
sbb
pop
negl
stos
fwait
xor
std
push
daa
ss
out
mov
popa
rorb
pop
aas
bound
pop
movsl
add
dec
push
xchg
add
add
push
inc
addr16
fld1
imul
pop
sti
or
jno
cmpsl
jmp
sub
fcoml
cltd
xorb
out
out
aas
imul
fnsave
mov
inc
lods
lds
mov
arpl
test
je
lcall
fdiv
ror
xor
cmp
mov
enter
sub
test
cmp
inc
bound
jmp
enter
inc
sbb
add
jne
sub
mov
xor
pop
hlt
test
xchg
icebp
mov
leave
add
lods
iret
dec
push
movl
js
or
pop
lods
in
sub
mov
imul
and
int
mov
bnd
sub
cmp
jbe
cld
mov
les
repnz
mov
mov
leave
jg
lds
lcall
and
xlat
xor
aam
repnz
inc
fisttpl
and
imul
xor
xchg
ftst
pop
xor
fcoml
icebp
out
sub
scas
inc
add
cmpb
push
or
dec
test
popl
mov
or
xchg
dec
jmp
xor
mov
push
nop
pop
fs
xor
dec
loope
jge
test
cmp
add
inc
jmp
pop
movsl
lods
mov
lods
fmul
sbb
mov
jae
inc
les
xlat
test
orl
mul
cmp
push
mov
repnz
fs
cwtl
int3
cld
pop
xor
inc
xor
clc
lea
ds
hlt
in
add
cld
std
dec
test
mov
mov
rcl
lods
mov
ss
mov
aaa
dec
adc
sbb
ljmp
lahf
out
mov
cmpsb
xchg
outsl
jl
lcall
push
sub
or
sub
lds
leave
xchg
sub
mov
shrl
movnti
insb
fisubrl
lea
lret
int
jmp
jmp
sub
mul
jno
push
mov
mov
mov
cmp
idivb
jg
mov
add
lods
popa
sbb
inc
inc
scas
cmp
aaa
enter
icebp
mov
lea
jmp
mov
sbb
push
mov
ret
data16
js
js
leave
mov
adc
pop
adc
push
lret
push
cmp
out
lds
cli
insb
stc
mov
call
adc
cmp
xor
xor
aad
xchg
and
jae
jl
jbe
js
push
add
cmp
xchg
stos
fisttpl
jne
shrl
das
ret
rcrb
sbb
jp
lods
or
cmp
add
push
adc
ja
scas
mov
dec
mov
push
dec
scas
lahf
lds
and
cld
push
push
xchg
js
xor
mov
mov
fs
jge
out
adc
cmp
push
sahf
pushf
sahf
addl
xchg
aaa
jbe
push
jecxz
adc
iret
and
rcr
lahf
xchg
adc
push
dec
or
sub
push
xchg
test
sbb
rorl
adc
lahf
add
bnd
stc
cmp
add
push
inc
rclb
mov
mov
pop
fistpll
mov
mov
pop
nop
cmp
mov
cli
add
inc
mov
adc
xchg
mov
shll
sbbb
and
adc
fucom
dec
test
mov
add
fsubrs
mov
pop
and
insl
mov
pusha
mov
jge
hlt
sub
arpl
sbb
cli
dec
mov
cs
push
pop
or
loop
xchg
fsubrl
and
jne
repz
and
inc
rolb
and
push
add
mov
pop
dec
mov
xor
xlat
pop
mull
orb
addb
dec
loopne
shlb
das
inc
jnp
rorl
jmp
cmc
std
fsubl
adc
fsqrt
nop
pop
hlt
loope
icebp
jl
out
outsl
lahf
pushf
ret
sub
dec
jecxz
jbe
sti
je
or
pop
xlat
xchg
scas
in
xor
add
or
clc
mov
and
addr16
aas
mov
in
sub
xlat
mov
add
mov
pop
js
jl
imul
mov
xchg
bound
int
push
idivb
cmp
mov
and
loope
cmp
je
cmc
lcall
push
mov
sbb
sbb
int
shl
mov
inc
jmp
xchg
cli
mov
imul
cmp
mulb
pop
xor
out
arpl
outsb
inc
dec
fstpt
push
movsb
sahf
test
rcrb
notb
pop
cmp
push
shlb
jae
mov
cmp
fsubrl
xchg
movsb
dec
pop
mov
push
les
data16
mov
add
dec
cmp
mov
in
mov
ret
pusha
pop
fistps
jbe
call
lock
xor
sbb
cmpb
dec
aaa
lret
adc
lcall
mov
mov
jg
filds
imul
out
xlat
cmpsl
sub
mov
js
adc
cmp
cli
lcall
lds
xor
cltd
push
sbbl
call
or
jnp
mov
lret
stc
mov
mov
or
push
out
or
inc
adc
stos
cmpsb
inc
pop
jecxz
mov
jno
add
push
mov
push
xchg
lss
pop
and
sbb
lret
inc
inc
bound
aad
inc
sub
and
jae
out
adc
mov
add
stc
inc
lret
and
jno
or
fistl
loopne
sub
mov
lcall
or
pusha
xor
roll
jae
iret
lret
mov
in
movsl
out
icebp
lods
dec
fildll
clc
push
shlb
repnz
sub
pushf
int
and
or
xor
out
cld
fsubs
daa
or
sbb
in
push
lret
or
out
sbb
lds
insb
sub
xchg
mov
fwait
pushf
sbb
lret
jne
adcb
enter
scas
lcall
ja
pop
lea
xor
test
mov
imul
lcall
sbb
or
lock
out
jmp
pop
xor
incl
notb
sub
idivb
sub
fistpll
pusha
pop
scas
mov
cwtl
xchg
addr16
add
jae
inc
mov
mov
push
cltd
dec
cmpsl
insl
xchg
aas
push
fistpll
sbb
lock
aaa
int3
push
and
dec
sub
testl
aam
lahf
and
lahf
shrb
test
sbbl
push
or
xchg
jmp
inc
lea
mov
pop
ret
mov
cmp
test
adc
test
ret
dec
divb
cmp
add
shl
fcoml
mov
pop
mov
mov
je
jns
or
jp
int3
bound
scas
cwtl
movsl
sbb
in
in
xor
cmpsl
fidivs
adc
fwait
cmpsb
in
mov
and
mov
mov
cli
jbe
int
stos
in
fisttpl
push
fwait
daa
push
mov
out
adc
rclb
sub
or
outsb
mov
sbb
jo
leave
push
dec
push
sbb
popf
sahf
mov
dec
nop
sub
sbb
sub
fildl
out
inc
inc
mov
fstpl
outsb
stos
and
jne
mov
cmp
mov
mov
jo
cmp
pop
mov
fwait
add
sub
testl
aas
xchg
adc
jle
jb
imul
mov
out
jno
jp
roll
push
les
rclb
jae
or
sbb
jle
xor
cmpsl
fbld
pop
rorl
pop
and
fs
pop
dec
fs
or
mov
or
mov
leave
sarb
jg
inc
hlt
xchg
jnp
lret
sbb
add
pop
xchg
jno
mov
lock
or
sbb
and
in
add
push
movsb
cmpl
xor
cwtl
enter
push
mov
push
idiv
jp
xor
aad
xchg
test
sbb
pop
ss
sub
mov
inc
xor
int
cmp
push
dec
popf
movsb
or
imull
cltd
xchg
mov
mov
push
xchg
fistps
xchg
dec
cltd
cmpb
cmpl
movb
pop
cmpl
jno
jmp
test
sbb
add
mov
rclb
xor
daa
ljmp
loope
lds
cli
lret
lcall
int3
ss
orl
inc
dec
mov
cmpsb
add
bound
notl
cld
cmpsb
jae
mov
jg
xor
xor
push
loop
or
pop
rcrb
stc
loop
sub
fwait
xchg
cmpsl
jecxz
cmp
in
dec
xchg
addb
pop
cmc
aam
fadds
insl
stos
and
out
cmp
mov
stos
out
nop
xor
mov
cs
inc
cmp
lea
adc
sub
mov
cmp
pop
cli
in
ficompl
lahf
addr16
loope
xor
shlb
cmp
inc
xchg
sbb
dec
jnp
loopne
pushf
push
in
movsl
adc
mov
mov
and
mov
cld
out
inc
mov
adc
in
andb
sub
xchg
add
sub
and
jle
dec
gs
push
nop
pushl
cmpsl
xor
sti
or
mov
and
ret
mov
out
ja
fcoms
mov
xchg
jb
and
insl
lcall
ret
xor
aaa
lahf
pop
push
pop
arpl
xor
mov
push
mov
lret
jb
std
lods
iret
insl
es
inc
and
orl
jle
pop
icebp
xor
out
add
lock
lahf
dec
cmpsb
movsl
pop
cltd
scas
aam
test
into
jge
popa
xor
dec
pop
adc
ror
mov
lds
mov
dec
lock
ljmp
es
xlat
sbb
xchg
mov
dec
jg
jno
mov
int
int3
add
repnz
jns
mov
fcmovbe
mov
mov
jmp
lret
imul
cmp
jge
ljmp
cltd
scas
mov
fiadds
repnz
mov
xchg
push
lea
or
mov
dec
sbb
std
xor
adc
cs
sbb
xchg
aad
xchg
push
faddl
sub
xchg
repnz
faddl
pushl
outsl
xor
add
push
jl
cs
clc
xchg
mov
arpl
dec
mov
xorl
ret
ret
jne
outsb
outsb
loope
or
movsl
xchg
adc
test
sbb
jae
push
lods
daa
xor
pop
cli
dec
xor
jmp
loop
ja
jo
mov
out
mov
cmc
or
jnp
and
inc
inc
mov
bound
mov
xor
pop
inc
scas
imul
xlat
inc
pushf
int
push
and
sahf
and
hlt
lret
scas
push
cmp
cmp
jge
rol
ja
jns
shll
int
dec
fstps
jle
jg
jge
mov
mov
xor
arpl
sbbb
jmp
push
hlt
xchg
fwait
lds
in
or
enter
push
xchg
fsubrs
mov
pushf
sbb
in
cld
xor
div
les
sub
ret
in
xor
lock
pop
daa
vpsrad
jmp
gs
aam
cmp
mov
add
call
ds
mov
das
pop
mov
lods
setl
jno
test
cld
cmp
cmc
movsb
insb
into
cwtl
out
pop
fwait
jmp
gs
cmpsb
adc
loop
xor
jns
mov
push
fistps
sub
or
bound
loop
pop
ficompl
sti
rclb
mov
push
cs
jge
aas
push
mov
int3
jmp
fiadds
movsl
cld
push
mov
add
sub
dec
pop
movsl
ret
test
add
cmpsb
lds
nop
fistpl
xchg
inc
cld
xor
push
lds
fbstp
aaa
mov
ret
loope
jg
decb
aas
popf
clc
fimull
xchg
jns
pop
pop
jae
pop
push
and
ja
sub
sbb
jmp
ret
and
test
fdivl
inc
dec
pop
sarb
je
out
les
pop
loopne
ret
in
cmp
fcompl
vpaddd
fsubr
jp
adcb
sub
clc
mov
pop
jnp
iret
inc
push
inc
gs
cmp
std
ss
mov
pop
xchg
addl
subl
nop
in
add
adc
ret
rcrb
xorb
push
mov
addl
in
cmp
lock
dec
out
cmp
inc
cwtl
inc
fmull
insb
xchg
mov
xchg
stc
movsl
lret
scas
cmp
cmpsl
dec
mov
sub
ljmp
pop
iret
inc
mov
fpatan
outsb
loopne
jno
pushl
js
pusha
push
xchg
adc
dec
addb
test
sbb
mov
les
inc
sbb
ljmp
dec
scas
fdecstp
pop
icebp
insb
das
enter
sbb
popa
ret
push
sub
inc
in
mov
or
stc
push
andb
movsb
sub
or
adc
dec
jle
pop
add
jge
cmpxchg
scas
push
xchg
jle
jle
mov
mov
das
and
rclb
push
aad
aad
rolb
mov
jnp
inc
jnp
and
into
push
loop
fs
push
in
fdiv
sub
jl
jge
xchg
dec
neg
rcrl
jle
stos
mov
loopne
mov
sarl
mov
test
pop
stos
adc
pop
incb
leave
imul
push
xchg
insl
cs
mov
xchg
jo
mov
add
or
jb
in
jo
lcall
xor
movsb
mov
adc
out
outsb
outsl
adc
popf
cmp
mov
lcall
sub
std
icebp
fisttps
sbb
out
dec
ss
xchg
pop
lock
push
inc
mov
leave
dec
fdivrs
inc
mov
popf
cmc
sbbb
sarb
jns
neg
jecxz
sbb
fidivrl
adc
or
addl
aam
dec
lcall
jle
cli
shlb
pcmpeqw
insl
xchg
fbstp
and
popa
lea
aaa
push
mov
mov
imul
lods
jnp
iret
dec
in
push
outsl
push
rorb
ror
icebp
push
inc
les
jb
inc
push
sahf
std
lods
push
mov
jmp
test
shl
xor
xchg
hlt
movsl
xor
loop
mov
imul
cmp
fisttpll
lds
jne
outsb
ss
xchg
sti
add
test
mov
push
mul
push
loope
daa
mov
shlb
mov
mov
sarl
arpl
scas
push
jae
int
in
ret
jle
popf
addb
pop
push
gs
ds
rcrb
pop
cmp
inc
pop
mov
iret
fxam
lods
sub
pop
xor
jmp
mov
add
lret
push
jae
push
lock
cmp
movsl
xor
test
in
sbb
or
inc
fnstenv
shll
cmp
jle
push
pop
lcall
xor
xlat
in
mov
mov
mov
sub
test
sbb
icebp
andl
mov
and
dec
lods
cmp
and
xor
or
jb
cmpsl
cmpsl
and
stos
cmp
xor
jnp
push
pop
test
cmp
cmpxchg
jge
mov
fucomi
shl
std
add
out
loop
pop
loopne
cld
xor
push
adc
shll
jg
imul
xor
push
shll
dec
add
lods
push
rcrb
sbb
clc
pop
lods
addb
sbb
fiadds
inc
xchg
mov
in
pop
stos
idiv
inc
push
fdivrs
mov
sbb
sub
sahf
add
add
pop
xchg
pmulhw
mov
shl
shll
push
inc
cmpsb
pop
sbb
repz
int
test
add
xor
ret
add
lods
xchg
movsb
inc
jge
outsb
and
xchg
inc
gs
shlb
mov
jo
jmp
pusha
out
das
sbb
dec
sbb
cmp
repnz
outsb
insb
ds
xor
mov
rol
or
shll
inc
andl
pop
idivb
cld
popf
adc
dec
movsl
jl
push
ficoms
lcall
aam
and
je
out
bound
jne
imul
shll
push
xchg
xchg
imull
adc
push
cld
and
dec
ret
mov
icebp
jno
mov
test
mov
mov
fildll
inc
leave
out
cmp
ja
mov
mov
shlb
subl
out
dec
dec
dec
sti
push
mov
rorb
into
or
stos
mov
inc
push
jle
fidivrs
mov
stos
stos
in
std
mov
adc
jecxz
int3
outsl
sbb
dec
xchg
sub
hlt
mov
aas
in
inc
ljmp
dec
test
jo
sarl
ss
pop
inc
mov
dec
sub
add
lods
movsl
mov
and
shl
in
daa
xchg
movsl
das
mov
dec
dec
dec
adc
and
jb
aad
sahf
fcomps
or
nop
add
icebp
cs
adc
push
add
ds
loope
shll
add
inc
scas
mov
mov
out
jl
dec
inc
iret
test
mov
and
mov
dec
ds
iret
rol
jbe
and
dec
jnp
xchg
data16
iret
and
jge
adc
push
cltd
leave
minps
dec
jl
sbbl
movsl
pop
dec
ds
movsl
fsubrs
lods
mov
lahf
shlb
inc
xchg
iret
sub
addr16
cmp
fnstsw
in
in
repnz
mov
xchg
sti
xor
jne
mov
fwait
popa
dec
push
aam
out
imul
mov
and
push
sub
mov
dec
je
hlt
xchg
ds
out
fistpll
jg
adc
jns
cmp
bound
dec
stos
test
testl
xchg
sub
jp
outsb
xor
or
jbe
xchg
leave
out
movntq
adc
cli
push
andb
aaa
jecxz
jbe
jno
push
xlat
mov
mov
insb
call
push
sbb
inc
push
bound
sbb
pop
daa
jmp
add
hlt
add
js
icebp
mov
cmp
ret
xor
rol
into
xchg
ror
repnz
in
xchg
gs
xchg
daa
dec
repnz
pop
mov
insl
ja
enter
pop
jns
pusha
and
int3
sub
mov
sbbl
aam
popf
mov
cmp
popw
pop
stc
push
jl
adc
dec
ret
fsubl
xlat
in
xor
dec
enter
pop
dec
dec
data16
sbb
repnz
sbb
push
mov
mov
sbb
and
or
scas
pop
cmpl
out
repz
lea
mov
call
xchg
fdiv
ss
mov
std
xchg
xchg
sub
sub
pop
repnz
movsb
jge
dec
adc
mov
fimull
dec
pop
dec
subl
mov
mov
cmp
xchg
xor
mov
aad
shr
xlat
pop
jno
inc
popa
sahf
ljmp
and
mov
cmpsl
inc
inc
movsl
sbb
sbb
jne
int3
pop
cmp
sti
rorb
rclb
pusha
pop
mov
inc
in
pop
push
filds
imul
add
add
insl
xchg
out
jg
cmp
sbb
fistpll
hlt
loopne
cmpsb
cltd
loop
push
jae
cmpsl
sahf
add
or
lret
je
test
push
loop
subl
jmp
lret
inc
mov
dec
in
les
adc
xchg
adc
push
stos
push
mov
xlat
roll
dec
push
dec
mov
lods
add
aad
xlat
stos
xchg
sahf
xor
movsl
dec
cmpb
in
mov
push
push
sub
push
fisubrs
sub
pop
cmp
movq
xor
ffreep
inc
fdivs
jb
mov
sub
jecxz
and
insb
nop
cmp
fadds
cmp
int3
mov
dec
inc
call
dec
sbb
cmpsb
mov
stc
mov
pushf
push
popa
das
jecxz
pop
push
call
sbb
xchg
sbb
enter
or
jp
loopne
push
arpl
xlat
xor
outsl
sahf
fwait
hlt
xor
sub
adc
mov
loop
imul
test
out
shr
inc
aad
xor
xor
pop
lret
es
dec
out
sbb
adcl
pop
sub
inc
es
mov
lea
repnz
jae
sub
into
xchg
jb
out
test
dec
lods
or
and
in
dec
push
cmp
add
outsb
sbb
push
mov
es
jae
push
sti
pop
sbb
xchg
pop
shlb
fbld
sub
mov
adc
in
daa
lret
xchg
sub
pushf
lret
aam
add
repnz
jnp
shl
call
popa
lods
out
jp
lods
enter
and
sbbb
sbb
or
sbb
enter
xlat
jae
stos
outsb
pusha
incb
pop
int
mov
inc
into
push
cltd
or
loope
rol
mov
mov
xor
jge
xor
mov
add
inc
sbb
test
cltd
add
mov
loope
test
mov
adc
icebp
cmp
xlat
ja
mov
popa
roll
scas
mov
lcall
in
push
push
jmp
add
into
fidivl
mov
hlt
call
imulb
shll
lea
or
rcll
jno
or
loope
xor
xor
es
dec
iret
mov
xor
test
mov
cwtl
int3
mov
pop
pop
mov
ja
inc
orb
fwait
jbe
out
test
in
test
repnz
add
in
and
fs
mov
dec
std
pop
fadds
stos
cmpl
pop
pop
cmc
xchg
neg
popl
jle
negl
fmuls
arpl
rcrb
pop
pushf
adcl
add
ljmp
cmpsw
jae
mov
mov
mov
aas
sti
rcl
mov
sbb
sub
rcrl
pusha
jecxz
cli
out
movb
mov
inc
imul
rorb
fwait
xlat
rol
lock
iret
es
push
stos
push
sub
sarb
pop
push
push
cmpsl
sbb
inc
sub
mov
xchg
xchg
jns
fcmovbe
out
sar
jmp
in
mov
andb
or
je
les
mov
inc
mov
push
mov
scas
sub
push
dec
shll
xchg
add
maskmovq
mull
push
sbb
xchg
xlat
fimull
adc
inc
or
lcall
sub
or
and
in
inc
bound
jae
test
repnz
cmp
inc
out
cmp
in
and
loope
sbb
scas
xchg
mov
fwait
adc
shlb
lods
dec
int3
lret
adc
add
scas
or
pop
fnstcw
xchg
pop
or
push
sub
pop
out
fsubrp
xor
adc
xchg
fstps
ja
in
sbb
fucom
adc
movsb
xchg
mov
repz
das
mov
push
movsb
push
pusha
cli
dec
mov
mov
inc
in
lcall
mov
mov
sbb
das
jo
and
call
leave
mov
enter
mov
rorb
pushf
dec
inc
popf
sbb
push
push
mov
jns
mov
sbb
cmp
cmpsb
bound
mov
mov
ror
jbe
dec
or
imul
mov
jg
stos
mov
jmp
lea
inc
mulb
mov
test
int
cld
repnz
lret
dec
sbb
dec
add
push
mov
in
xchg
sub
push
mov
lcall
subl
mov
in
das
mov
mov
dec
push
test
sub
jmp
and
push
xor
pop
pop
ret
or
mov
adcb
aaa
into
mov
icebp
cmp
in
or
add
cmp
nop
je
jnp
imul
ficompl
mov
pusha
roll
pop
addr16
nop
les
cltd
clc
imul
sub
adc
fcoml
xor
pop
mov
sub
out
f2xm1
pop
scas
loop
or
mov
xchg
fs
movsb
notb
in
in
jns
push
pop
in
test
sbb
pop
insb
movsl
sub
jns
mov
sub
fucom
mov
jmp
int
add
xchg
dec
cmp
orl
movsb
iret
pop
iret
loope
fucomi
or
or
out
mov
and
enter
or
pop
inc
popf
out
mov
sub
push
dec
sbb
xchg
mov
lds
mov
inc
test
sub
jnp
scas
fcmovu
push
cmc
std
pusha
mov
test
or
xor
mov
fs
jbe
adc
jae
sbb
popa
inc
inc
xlat
imul
hlt
xchg
mov
mov
stos
cmp
jae
pop
or
push
arpl
dec
pop
js
call
les
bnd
mov
jp
cwtl
cmc
jl
fdivp
or
mov
cmp
and
mov
push
les
les
out
lahf
jl
sbb
xchg
sub
inc
push
dec
push
ret
repz
pop
dec
mov
int
fldenv
je
pop
add
dec
sbb
data16
mov
adc
xchg
test
adc
das
cmp
add
jmp
call
pushf
push
add
sti
sub
shr
outsb
lahf
push
cwtl
push
inc
ficoml
cmp
loope
jno
test
neg
divl
fnstenv
dec
push
add
lret
stos
movsb
and
xlat
xchg
mov
push
xor
in
push
in
scas
xorb
push
cmp
jbe
add
inc
test
in
out
inc
mov
mov
outsl
ljmp
mov
dec
lods
aam
push
or
push
cmpsb
pop
pop
fs
aam
jo
gs
mov
jge
outsl
inc
inc
std
fsubrl
sahf
xchg
cld
sbb
ret
ret
les
scas
cmp
sub
scas
into
sbb
jmp
aas
xchg
repnz
out
sbb
mov
test
mov
bound
jp
ja
cmp
pusha
roll
mov
adc
add
mov
and
jno
sbb
lods
dec
sti
push
fdivrp
lcall
sub
call
jecxz
shlb
test
subl
jo
xchg
mov
xlat
jp
fildll
cmp
in
jle
xchg
fnsave
jmp
aam
test
insb
xor
fs
daa
push
enter
mov
cld
mov
cmpsl
mov
pusha
xchg
lock
inc
pop
cld
test
push
nop
sbb
cmp
dec
add
lock
lret
or
repnz
lret
mov
lahf
rcrb
push
es
xchg
jno
cmp
push
xchg
jg
or
add
jb
or
jmp
sub
xlat
stos
cmp
jecxz
push
xchg
ret
pop
scas
scas
roll
xchg
das
incl
loop
leave
dec
or
push
dec
pop
xchg
lahf
mov
sub
jle
imul
stos
outsb
mov
fsts
adc
dec
pop
movsl
xchg
mov
addb
movsb
loop
scas
sti
jecxz
adc
mov
decb
daa
adc
fwait
int3
stos
ret
jo
adcl
fstl
js
adc
add
or
test
xchg
push
shr
jmp
pop
pop
mov
mov
insb
loope
in
std
xchg
push
fildll
sbb
outsl
mov
sub
xchg
xchg
adc
shrl
xchg
cltd
mov
into
mov
or
mov
sub
add
or
mov
jle
fistps
orl
pop
aam
or
and
mov
mov
ror
cmp
insl
mov
dec
xlat
leave
jmp
movsl
push
adc
repz
cltd
incb
mov
lcall
out
cmp
das
mov
mov
cmp
cld
ret
sbb
add
repnz
daa
mov
lods
mov
dec
nop
scas
pop
fucom
sbb
ficomps
push
inc
dec
add
sahf
jmp
xchg
xor
test
jge
pop
mov
cmp
xor
sub
imull
insb
mov
adc
test
inc
cwtl
test
mov
fisubrl
test
mov
pop
push
cmp
aam
in
cwtl
imull
pop
std
ret
in
fcomps
in
mov
adc
xchg
test
mov
sub
rcrb
shll
enter
adc
pop
inc
add
mov
jle
push
push
scas
add
dec
add
daa
add
push
cmp
int
lcall
sti
dec
aaa
out
shll
mov
mov
pop
sub
mov
mov
and
adc
test
push
mov
dec
cmpb
test
stc
call
inc
xlat
les
xor
mov
xchg
fucomi
mov
mov
inc
cmp
cmp
mov
fcmovnbe
sahf
mov
or
hlt
stos
movb
add
push
pop
cli
push
pop
add
xchg
adc
pop
push
lods
fiaddl
mov
pop
inc
cmpsb
mov
shrb
insl
mov
fs
ljmp
xor
xchg
pop
mov
iret
xchg
sti
lods
xchg
and
js
xchg
sbb
mov
ret
jp
pop
insb
push
dec
jbe
mov
or
mov
in
enter
push
add
fldcw
dec
mov
outsl
lcall
xchg
pop
das
adc
push
das
add
outsb
pop
adc
call
or
dec
int3
cmp
cli
xchg
or
int3
add
test
sti
rcrl
push
adc
sbb
mov
fiadds
in
sarl
jb
push
dec
push
and
push
push
jb
sub
into
jae
out
shll
inc
fwait
std
subb
lret
sbb
scas
add
pop
add
int
cmp
lods
push
push
push
repnz
fwait
mov
inc
andl
cmpsb
gs
pushf
mov
in
jle
push
shrl
lret
and
in
movsl
ds
in
sbb
adc
fsub
sub
imul
jno
cli
mov
rcll
outsb
cmp
outsl
mov
jb
sub
or
mov
hlt
shlb
jns
mov
cmp
xchg
int
and
imulb
scas
stos
and
or
mov
dec
push
sbb
test
cwtl
outsb
addr16
insb
arpl
pop
pop
aad
push
lods
pop
sub
dec
ret
add
pop
add
movsl
out
insl
stos
push
scas
xor
xchg
in
adcl
aam
inc
add
dec
je
and
data16
jmp
in
or
xchg
in
mov
inc
outsl
decb
sub
xchg
orl
test
test
shlb
fs
jo
push
mov
lds
dec
pop
popf
or
out
int
cwtl
imul
dec
repz
out
mov
pop
ljmp
aad
dec
mov
add
mov
aas
dec
xchg
pop
mov
aas
xchg
jmp
jbe
push
mov
jo
xchg
ljmp
pop
repnz
aad
cltd
pop
std
mov
in
pop
xlat
mov
xor
or
xor
sub
dec
sbb
fs
xor
and
icebp
nop
lahf
xchg
mov
out
mov
daa
mov
cmpsb
jns
jmp
xchg
fiaddl
xchg
test
mov
xor
adc
fcoml
xlat
sbbl
int3
dec
scas
cltd
inc
mov
xchg
xlat
jnp
add
pop
outsl
adc
and
cmpsb
out
lret
clc
inc
xlat
mov
lret
shll
xlat
dec
mov
loopne
subb
sub
aas
mov
pop
dec
push
icebp
ret
cmp
and
movsl
adc
jns
in
inc
andb
leave
add
cmp
mov
lcall
dec
or
sbb
xrelease
mov
ss
xchg
mov
mov
mov
call
cmp
and
jl
adc
xor
inc
leave
pop
adc
sbb
xorb
xor
jmp
jg
movsb
mov
in
pop
outsl
pop
rol
pop
daa
dec
lcall
data16
dec
das
bound
xchg
lret
fcmovbe
inc
arpl
daa
jmp
test
sub
imul
sub
xchg
loop
and
pop
jo
cli
es
mov
imulb
mov
mov
lret
pop
mov
mov
jl
inc
scas
call
int
in
jg
sub
sub
lock
outsl
and
movsb
out
xchg
sbb
sub
mov
je
lret
cmp
inc
or
scas
or
sbbb
outsb
inc
sub
mov
mov
mov
pop
enter
pop
mov
xchg
jp,pn
cmpsb
pop
in
aaa
dec
cmp
fnstsw
lret
xor
cmc
and
jge
adc
inc
dec
inc
adc
cmpsl
dec
dec
mov
and
mov
cmc
shll
push
sar
mov
jae
sahf
dec
aam
int3
xchg
lods
pop
popa
cmp
and
int3
aam
sbb
cmp
push
cmp
rcl
loope
push
mov
lock
in
adc
cld
jne
and
dec
jecxz
pop
cmp
addr16
dec
loopne
lods
test
push
scas
daa
cmp
punpckldq
sub
cli
lods
lahf
pop
mov
mov
out
jecxz
ds
filds
pusha
in
cmp
fstps
dec
lock
inc
mov
and
iret
popl
xor
mov
jb
cli
insl
jl
mov
push
movsl
fldl
pop
movsb
dec
dec
dec
push
aam
jmp
xor
std
push
iret
imull
mov
mov
mov
xlat
shll
inc
lret
ja
mov
fnstcw
sub
inc
sub
mov
jp
jmp
jae
std
inc
and
xchg
mov
je
cmp
enter
push
lret
and
or
test
push
dec
and
imul
adc
out
and
repz
adc
outsl
push
cs
test
mov
fistpll
in
je
adc
xchg
repz
or
jbe
fisttpll
or
mov
popa
cmpsb
pop
adc
mov
mov
mov
outsl
xor
sub
sub
cltd
aad
xchg
int3
sub
gs
adc
and
test
or
fnsave
mov
or
dec
pop
mov
imul
aam
scas
mov
in
push
add
sbb
xchg
dec
popa
push
bound
movsb
pusha
pop
lods
out
in
lods
xor
pop
enter
pop
mov
cmp
dec
jecxz
iret
mov
xchg
cltd
popa
cli
sub
dec
popa
xlat
ljmp
scas
in
push
mov
imul
pop
xchg
mov
mov
inc
xchg
or
inc
ss
jg
adc
loope
fs
cmp
cmp
mov
cmp
mov
test
sbb
or
lods
xor
mov
jns
int3
fld
xchg
sub
dec
pop
movsb
xchg
push
mov
js
cmpsl
rolb
and
rcrb
ret
pop
repnz
sbb
mov
mov
les
scas
gs
jl
or
inc
xor
pop
adc
fistps
shr
mov
adc
dec
mov
icebp
out
outsl
xchg
out
xchg
jnp
popa
cmp
mov
mov
les
xchg
push
stc
xlat
fcompl
out
sbb
movsl
pop
icebp
dec
or
xor
pop
out
fdivrs
orb
sbb
jnp
push
ret
inc
xor
std
mov
jbe
hlt
or
and
fidivl
imul
jae
lods
add
jmp
or
in
stos
or
sbb
nop
call
imul
dec
and
pop
cmp
xor
outsb
test
push
leave
cmp
aam
and
daa
add
add
in
ja
outsb
cmp
adc
int
insl
iret
adc
xchg
repz
dec
and
std
les
hlt
test
sbb
adc
mov
or
cmc
call
adc
cltd
push
adc
stc
imul
jbe
xchg
push
add
stc
es
xor
and
sub
sbb
mov
cmp
fldenv
imul
scas
xlat
test
clc
push
in
mov
in
sub
push
adc
or
adcl
cmp
lahf
pusha
ss
addr16
mov
int
pop
jp
stos
push
mov
shll
jae
out
sub
xlat
xor
addr16
jmp
lret
mov
mov
sub
xchg
pop
int3
and
sbb
mov
nop
jbe
or
or
push
int3
xchg
cmp
jno
aas
stc
rorb
push
insl
or
or
repnz
or
lret
and
add
sub
ret
push
repnz
mov
push
jecxz
inc
cli
xchg
xchg
dec
pop
repnz
testb
ljmp
addr16
jl
dec
sub
cmp
bound
pop
cmpsl
mov
stc
ret
or
andb
cmp
std
mov
test
jbe
mov
in
lock
sub
jp
pop
jle
mov
pop
inc
inc
scas
push
notl
dec
sbb
jl
push
out
or
push
into
mov
inc
add
sbb
adc
pop
push
cmc
out
lahf
jmp
push
mov
mov
inc
pop
mov
scas
movsl
jno
dec
jl
jge
stos
and
out
mov
mov
jns
mov
xlat
mov
cmp
int
sbb
mov
and
ss
cmp
pop
sbb
sub
push
adc
in
mov
leave
sbb
scas
mov
out
int
xchg
ficoml
mov
out
outsb
mov
imulb
and
arpl
xor
mov
insl
xchg
push
adc
pop
arpl
mov
cmp
pushf
and
repnz
push
push
jne
push
out
jp
rcrl
pop
daa
mov
incb
jmp
shll
push
and
xchg
lret
cmp
lahf
rclb
mov
mov
out
fsubrp
add
inc
sub
pop
and
adc
mov
inc
jns
add
mov
xor
sub
adc
adcb
mov
xchg
pop
and
movsl
sbb
jne
push
dec
pusha
jecxz
rcrl
pop
jecxz
int3
loope
xchg
incl
xlat
jle
inc
push
sbb
imulb
and
addr16
dec
xchg
sti
inc
sub
mov
test
mov
dec
or
loope
push
add
push
xorl
roll
pop
mov
outsl
jg
jne
dec
enter
sbb
pop
ret
adc
loope
or
adc
add
ret
pop
movhps
shrl
movsl
push
and
inc
mov
jae
push
aaa
inc
jle
enter
adc
push
xchg
es
jl
xchg
jg
hlt
mov
jge
xchg
adc
mov
add
jno
cmp
lahf
sbb
push
jg
push
mov
cmpsl
and
adc
ret
jmp
stc
mov
int3
ds
xchg
cltd
mov
ss
xchg
nop
mov
rcrb
lahf
pop
mov
clc
push
mov
out
push
test
insb
rclb
mov
sbb
mov
dec
dec
adcl
and
es
incb
dec
loop
sbb
pushf
pop
mov
jle
imul
int
movsl
xchg
push
mov
mov
cs
dec
push
or
inc
pop
adc
xlat
subl
pop
push
leave
lcall
adc
mov
fs
adc
dec
cmp
ret
aam
iret
and
shrb
xchg
cmpl
das
ljmp
dec
xchg
ret
mov
lahf
push
mov
adc
cmp
pusha
enter
pop
mov
out
mov
xchg
rcll
jns
ds
pusha
fimuls
mov
inc
mov
sar
or
mov
test
push
fst
bound
or
adc
mov
fdivrl
outsb
in
call
pop
mov
in
je
add
cmp
pop
les
or
inc
mov
cs
mov
stos
jb
fstl
cmp
jl
mov
push
push
testb
ds
rolb
pop
shl
and
cmc
mov
mov
mov
in
stos
inc
or
cmp
pusha
xchg
bound
cmc
rcll
icebp
cmpsl
pop
jne
push
mov
and
xchg
ret
iret
stc
add
jo
inc
pop
jb
mov
cwtl
insb
add
cmc
into
in
and
or
push
xchg
sbb
xlat
jmp
lds
push
adc
cld
outsb
loop
push
or
adc
sahf
add
fimuls
fidivrs
rcll
je
mulb
insb
test
adc
mov
imulb
mov
mov
push
mov
fcomip
adc
push
inc
push
push
xchg
cwtl
add
std
sub
stc
push
xchg
fdiv
aad
movb
jle
fdiv
cltd
das
fsubl
hlt
jle
push
mov
aaa
daa
dec
add
test
add
sbb
setne
loope
cli
hlt
add
adc
pop
shrb
jno
mov
jbe
mov
mov
xor
push
fnstcw
in
dec
dec
sbb
jmp
cs
notl
sarb
movsb
and
aas
pushl
sbb
outsb
mov
loopne
outsb
mov
or
sub
repnz
jle
cmc
cwtl
dec
add
lahf
dec
inc
mov
push
and
sti
xor
adc
cmp
mov
popa
pop
jmp
scas
lds
sbb
jle
mov
add
sbb
sub
hlt
push
fcmove
mov
mov
leave
insb
scas
movb
xchg
xchg
push
sub
jl
popa
cmpsb
and
fsubrl
mov
sub
movsb
scas
imul
push
data16
daa
data16
push
adc
and
push
pop
xchg
pop
xor
out
mov
aas
iret
and
pop
mov
ret
pop
or
ss
pop
lcall
mov
and
add
rorl
addb
sbb
aam
in
mov
and
loopne
loope
aad
mov
or
insb
xchg
jecxz
daa
scas
repz
in
mov
out
les
sub
mov
aam
cmp
xor
rsqrtps
loopne
dec
aad
jno
adc
flds
test
adc
jmp
and
fwait
rol
xchg
pushf
out
ds
mov
push
mov
repz
test
xor
imul
out
push
xor
jb
imul
scas
or
cs
stos
test
add
xor
push
in
jecxz
movsl
loopne
cs
test
mov
add
pusha
into
push
cmp
and
add
or
faddl
inc
lods
dec
mov
mov
push
out
lds
mov
sbb
imul
xor
cmpsb
mulb
fisubl
xchg
adc
lods
sub
les
pop
dec
mov
dec
sbb
push
sbb
jns
mov
shl
dec
cmp
sbb
xor
and
pop
xor
mov
jg
decb
imul
enter
xchg
outsb
hlt
adc
mov
lea
insb
push
shlb
fs
mov
jmp
inc
mov
push
cmp
lahf
stc
fcomi
sbb
inc
sti
cmp
popa
mov
in
mov
test
mov
mov
mov
test
popa
push
in
aaa
push
jge
jge
call
xor
pop
test
js
lret
xchg
dec
mov
or
or
pusha
mov
clc
test
mov
mov
mov
cmpsl
xlat
push
in
mov
les
aam
lods
and
mov
leave
clc
imul
aam
bound
lock
xor
jmp
lock
jbe
movsb
fsubrl
fnsave
xor
lahf
or
xchg
xlat
fbld
jg
cmp
mov
stc
in
call
cmp
int3
dec
outsl
dec
lods
insl
inc
xor
pop
outsb
shrl
popa
std
add
test
iret
mov
jbe
pop
mov
mov
xlat
inc
xchg
xor
xchg
fisttpll
xor
xor
repz
xor
movsb
subb
mov
dec
iret
and
xor
mov
fucom
push
je
out
insl
inc
sub
or
popf
add
ret
movsl
je
dec
dec
jl
push
sahf
push
xor
add
dec
jae
mov
xlat
mov
mov
jle
push
dec
jae
cmpsb
push
dec
xor
jmp
xor
jl
icebp
inc
arpl
scas
jge
lret
xchg
test
out
daa
inc
xor
lret
lahf
test
pop
js
lock
fwait
inc
mov
insl
cmp
pop
or
outsl
fwait
lret
push
sub
cmp
out
pop
out
je
pop
pop
arpl
mov
push
movsl
xchg
or
cs
and
jmp
push
adc
mov
pop
in
xchg
movsl
or
aam
mov
pop
pop
aam
sub
push
mov
popf
jo
sub
pop
repnz
cmp
popf
cli
mov
or
lea
add
xor
sbb
push
out
add
xchg
push
lcall
mov
xor
push
addr16
aam
loope
int
mov
sbb
mov
jecxz
ror
jecxz
dec
gs
xchg
iret
popf
fildll
jle
addr16
lcall
popf
add
or
call
iret
repz
shrb
sbb
add
repnz
loopne
loop
insb
cmpsl
sub
add
shr
lods
xchg
cwtl
xlat
in
imul
out
sbb
test
mov
adc
filds
imul
cmp
in
and
cs
aas
cwtl
mov
mov
and
or
sti
loopne
clc
sub
cwtl
loop
cmpsl
nop
pop
rclb
call
movsb
repnz
imul
sbb
add
fdivl
les
add
loopne
in
push
adc
adc
shr
das
call
lcall
rorb
lahf
cmpsb
pop
out
decl
or
push
xchg
pop
dec
pop
fldt
cmp
or
xor
jb
push
mov
cmp
inc
sahf
int
int
add
and
idivb
nop
lea
sbb
add
frstor
test
sbb
push
add
fs
sbb
push
sub
out
loope
xchg
push
sub
pop
cwtl
jp
mov
jbe
ret
add
aad
in
lock
xchg
int
pmaddwd
adc
xor
sub
in
fsubl
test
in
mov
rcl
mov
ficompl
pop
jae
aad
sbb
cltd
inc
popa
cmp
and
gs
jecxz
adc
add
jns
and
adc
inc
test
andb
dec
andb
scas
and
ljmp
es
mov
fdivrp
lods
push
insb
pop
jbe
sub
int
iret
add
cmp
stc
rcll
aam
lahf
cs
shlb
mov
sub
or
xchg
push
push
push
test
dec
dec
inc
or
icebp
or
loop
cwtl
movsb
out
inc
mov
xor
scas
jle
adc
sub
sahf
add
cvttps2pi
popa
test
inc
jnp
pop
test
adc
sub
lret
mov
cli
sbb
push
aad
subl
repz
mov
xor
jmp
and
outsl
pop
ffreep
jp
mov
mov
fcoml
in
shrb
cs
xorl
in
or
mulb
push
inc
call
ds
leave
sub
stos
mov
shll
sub
mov
cmpsb
lret
loopne
cbtw
sbb
addr16
jo
lock
jmp
cmpsl
mov
mulb
xchg
inc
jle
shlb
or
jp
dec
xor
sbb
or
push
mov
enter
into
push
dec
or
pop
mov
jbe
mov
xchg
shl
fmuls
and
sub
cmc
rorb
jge
test
nop
xorb
daa
xor
call
leave
in
dec
sbb
cli
ljmp
mov
lret
add
rclb
pop
mov
jnp
repz
or
std
mov
mov
xlat
fyl2x
xor
jle
pusha
fmull
out
and
psrad
sub
je
aam
xchg
xlat
add
loop
pop
sbbb
insb
pop
cmc
repnz
cmpl
adc
test
cmp
cmp
inc
sbb
mov
push
addr16
ret
jns
enter
psubb
push
inc
inc
outsb
mov
ljmp
pop
pop
loop
adc
pop
jae
test
loopne
lret
cli
mov
lret
out
dec
loopne
in
loope
sub
push
mov
testl
imul
int3
mov
xchg
push
pop
inc
loope
xor
loopne
xchg
push
lahf
mov
sub
daa
adc
push
lock
stos
fsqrt
int
add
aam
add
in
and
aad
cmpb
dec
adc
push
pop
es
pop
ret
add
and
bound
shll
shld
cmp
mov
mov
pop
scas
insb
lods
aaa
xlat
mov
popa
test
xor
bnd
pop
sbb
andl
movsl
xchg
jno
addr16
cld
or
or
push
add
test
repnz
dec
iret
in
pop
cmpsb
aam
push
pop
movsl
mul
and
fcmove
jae
jno
xchg
aas
std
shl
xor
or
sub
rorb
push
lret
pop
stos
xchg
push
movsl
or
fisttpll
mov
enter
inc
sub
mov
dec
ss
test
sarb
enter
out
inc
leave
pop
mov
xor
dec
push
in
enterw
mov
dec
les
xor
adc
jns
cs
xchg
sahf
dec
bound
cmp
out
test
dec
and
lret
cmpsl
call
mov
xchg
dec
dec
adc
adc
ja
lret
mov
ret
js
jo
aam
test
add
adc
cmpsl
cmp
inc
ret
lock
fldl
stc
lcall
lea
and
push
adcl
sbbl
mov
add
out
cmp
loopne
int3
sub
inc
inc
mov
jmp
cwtl
lea
test
dec
pop
bnd
loope
mov
and
sub
dec
add
iret
fstps
xchg
stos
insb
pushf
mov
jle
test
sub
test
pop
aam
js
ret
scas
ret
mov
shl
pop
mov
popf
inc
add
push
lods
xchg
push
jmp
bound
scas
xor
mov
repnz
subb
rcll
fdivrs
lods
push
adc
leave
clc
xchg
cmpsl
sbb
js
out
pusha
mov
push
mov
pop
sbb
xchg
mov
popa
call
jb
jmp
inc
mov
mull
jo
xor
mov
stos
xchg
xchg
ffree
ds
xor
shlb
movntps
pop
loop
mov
std
stc
pop
or
in
insb
jns
or
dec
les
sbb
jae
xchg
jnp
cld
leave
cmp
add
popa
test
mov
adc
cmp
pop
cli
push
sbb
adc
enter
loope
outsb
sbb
pushf
adc
test
mov
jg
dec
ficompl
sbb
mov
ds
repnz
adc
lods
inc
aad
xor
cs
hlt
sarl
mov
sti
mov
imul
pop
out
jnp
enter
inc
lret
fs
pushf
mov
mov
cltd
pop
push
outsl
pop
data16
xchg
insb
dec
sub
push
inc
xchg
cmp
jmp
lods
cmpsb
add
mov
insb
jl
xchg
xchg
pop
cli
in
jo
push
dec
cli
inc
inc
frstor
mov
mov
cmp
mov
clc
cwtl
jo
popa
insl
jle
into
jno
dec
bound
pop
pushf
adc
sub
push
add
orb
mov
es
int
inc
nop
push
pop
in
adc
mov
aam
enter
daa
cltd
pop
or
jecxz
ja
cs
add
sbb
push
stc
push
xchg
pop
push
out
or
xor
je
pop
cltd
jae
mov
and
sub
hlt
testl
push
push
repnz
push
mov
or
mov
or
stos
mov
scas
les
icebp
iret
fildll
fisttpl
push
push
and
push
cld
inc
test
jp
dec
out
ss
jns
add
cld
mov
out
insl
sbb
iret
inc
imul
or
rcrb
sar
dec
cmp
pop
in
gs
mov
addb
sub
jnp
test
pop
jnp
dec
jmp
pushf
sti
cld
fs
fdivrs
sbb
insb
pop
add
cwtl
adc
arpl
and
lods
vucomiss
int3
adc
xor
sub
pop
addr16
jno
jle
mov
popf
cld
popf
jbe
jb
negb
and
out
rcr
rcrl
insl
stc
ds
loope
add
cmp
hlt
dec
cmp
pop
jbe
adc
testl
imul
mov
shll
sub
inc
fisubs
insl
out
pop
xor
popa
repnz
ret
sbb
call
cmp
xor
mov
and
mov
adc
out
scas
leave
lea
cmpsl
bound
push
out
inc
mov
cltd
xchg
sti
out
outsb
push
jns
or
mov
pop
mov
sti
pop
inc
outsl
sahf
or
mov
hlt
xchg
mov
adc
loop
fdivl
bound
out
lods
js
mov
lcall
ds
aad
loopne
mov
int
push
and
aad
stos
mov
test
mov
sbb
test
xor
divl
mov
xchg
lods
test
sti
mov
inc
adc
or
xchg
stos
jbe
xor
fnsave
idiv
xor
sti
jg
pusha
dec
xor
aad
es
xor
push
sub
jnp
xchg
xchg
shrb
inc
mov
xor
cmp
lea
sar
push
sbb
outsl
mov
test
and
pop
dec
fsubp
into
adc
sbb
pop
lods
arpl
rcl
or
jecxz
jmp
lahf
adc
orl
inc
jns
mov
xchg
sbb
xchg
mov
and
mov
mov
outsl
sti
push
addl
mov
cmp
jns
lds
fwait
pop
in
ret
jb
push
fldt
mov
idivb
in
shl
and
mov
and
add
xchg
cmp
loope
dec
into
sbbb
pop
fisubs
lea
clc
pop
xchg
jne
dec
dec
sahf
add
jo
push
jmp
out
addl
ret
lea
cmp
imul
add
mov
pop
xchg
into
add
hlt
int
mov
pop
addr16
movsb
mov
mov
js
pop
and
inc
outsl
add
shlb
sti
lea
add
or
add
int3
aas
xor
es
or
xlat
int
cld
xchg
mov
sar
pop
cmpsb
cmp
out
xchg
and
or
es
clc
out
mov
push
into
mov
lods
add
pop
xchg
jp
pusha
mov
enter
sub
mov
ss
imul
push
jp
stos
mov
jb
jmp
rol
movsb
adc
movsl
add
popa
push
or
push
jnp
loope
repnz
call
cld
inc
gs
add
xchg
add
insl
hlt
and
out
fistpl
dec
pop
ret
imul
cmp
mov
std
sbb
mull
push
jne
out
ja
sub
fnstcw
leave
or
fdivrs
movsb
divl
mov
sbb
lret
cwtl
stos
daa
xchg
cld
vpaddusb
xlat
pop
cmp
sahf
push
stos
add
push
outsl
pop
sbb
sub
or
test
xlat
adc
cld
push
in
mov
jo
dec
cmp
fcmovbe
mov
inc
xor
popaw
daa
jp
jo
stos
addl
sahf
adc
icebp
pop
imull
inc
mov
addr16
dec
out
pop
fsubrs
xor
pop
xchg
pop
jno
test
and
jbe
adc
fdiv
leave
shlb
sti
inc
cmp
sbb
cmp
dec
ror
inc
jl
daa
or
jno
dec
sbb
shll
cmp
cmpl
jae
ret
jb
xor
sbb
sbb
vpmulhw
or
cli
and
sbb
dec
pop
imul
and
jl
out
aaa
inc
mov
sub
jns
pop
inc
pop
pop
add
xor
sti
ret
mov
lds
jp
mov
dec
ljmp
mov
jmp
insl
mov
xchg
pop
mov
dec
or
pusha
into
bound
lcall
inc
orb
leave
outsl
or
xor
cmp
push
xor
xor
adc
sbb
in
xchg
cmp
sbbl
add
imul
mov
push
adc
xor
enter
test
imul
mov
cmp
mov
fildl
xchg
mov
lcall
mov
ss
loop
jne
jl
inc
pusha
imul
jge
and
pop
int
xor
add
pop
pop
fldt
mov
jmp
scas
mov
jcxz
or
mov
add
add
test
cmpsb
mov
and
sbb
jns
aam
fldt
mov
jmp
sbb
adc
mov
mov
enter
sbb
mov
push
dec
mov
jle
cli
push
arpl
lds
jle
mov
into
pop
clc
pop
movb
pop
fiadds
inc
into
roll
cwtl
pop
mov
mov
hlt
add
inc
push
and
rclb
mov
sub
mov
add
xchg
mov
inc
popf
jne
scas
in
mov
hlt
add
ss
fcompl
lret
sub
test
dec
mov
jg
test
or
movsl
jge
out
sub
mov
inc
jns
and
test
jno
mov
pushf
or
pop
aam
popa
jnp
sbb
push
pop
add
imul
jae
mov
mov
xor
add
gs
out
sub
pop
sarl
adc
push
aaa
pop
add
imul
xor
push
jo
ds
cwtl
loope
repnz
cwtl
popa
repz
daa
arpl
xor
ss
pop
sub
ror
push
sub
push
push
sub
push
mov
movsl
sub
xor
mov
and
lock
mov
xchg
pusha
outsb
test
add
cmc
mov
xchg
mov
pop
and
imul
loopne
add
into
stos
push
mov
xchg
mov
mov
das
mov
jae
lods
pop
sbb
dec
push
jo
mov
adcl
shlb
and
cmp
popa
std
pop
sbb
pushf
or
adc
das
push
push
pop
cmpsb
dec
fmul
add
xor
mov
add
aas
pop
out
xchg
or
int3
add
subl
push
mov
test
mov
shll
and
lods
insb
inc
fstpl
sti
das
jecxz
cmc
xchg
shr
bound
les
mov
fnsave
push
and
cwtl
push
sub
adc
repz
iret
mov
sub
pusha
scas
loope
pop
cmp
mov
or
subl
ds
cmp
pop
unpckhps
sbb
es
faddl
cmp
xor
std
int3
jns
fmul
adc
mov
clc
push
adc
andb
mov
lret
jb
ficompl
inc
jle
or
arpl
and
sub
inc
xlat
lcall
push
clc
cmp
sub
xor
jnp
and
cmp
out
cld
xor
mov
mov
or
jle
jmp
push
pop
pop
sbb
mov
pop
fistpll
aas
ds
aaa
hlt
add
sub
lods
test
pop
lea
test
push
mov
dec
push
outsb
movsb
pop
mov
cmpsl
ljmp
clc
dec
js
xchg
outsb
repz
mov
sub
out
pandn
adc
xchg
lods
ljmp
aaa
enter
insb
adc
cmp
sbb
mov
xorl
shl
ss
repnz
clc
and
and
fldl
pushf
mov
insb
leave
mov
mov
sub
add
sub
out
inc
sub
insb
xchg
mov
andl
push
xchg
loope
lea
sahf
inc
sbb
mov
mov
ds
mov
mov
outsb
lds
aam
fst
rorb
mov
push
pop
pop
movsl
jne
movsl
in
std
cwtl
inc
cmpsl
enter
pop
or
pop
call
mov
icebp
sub
mov
cmp
xchg
dec
dec
add
jae
adc
mov
mov
and
lock
cwtl
pusha
test
push
xor
push
mov
rorb
movsb
pop
push
push
pop
cmp
sub
pop
xlat
das
aaa
insb
adc
fdivl
ret
inc
loope
ja
test
mov
xor
or
stos
je
jne
std
ss
sub
xchg
cli
add
sbb
in
mov
ljmp
rdpmc
mov
add
push
mov
jne
outsb
hlt
nop
lods
scas
mov
aaa
mov
push
in
aas
lret
dec
aam
jecxz
dec
insl
cli
iret
out
and
inc
loop
dec
test
in
pop
or
push
pop
jle
ss
pop
cs
cmp
call
ret
cs
jl
mov
jmp
adc
pusha
lret
shlb
lret
pushf
mov
mov
ss
mov
insl
loopne
rclb
and
imul
add
adc
and
or
xor
cmp
fisubrl
es
xor
stos
lds
cmp
adc
rol
adc
xchg
push
mov
in
nop
clc
push
mov
pop
dec
addl
adc
xchg
jecxz
pop
dec
xor
dec
adc
es
std
push
inc
jmp
and
lock
pop
fs
xlat
cmp
les
mov
add
inc
dec
lods
mov
add
bound
push
out
adc
xchg
or
scas
push
int3
inc
mov
or
xchg
mov
stos
mov
cmp
data16
mov
pop
cmc
push
loopne
xor
push
mov
mov
mov
lea
or
loope
lret
mov
out
jecxz
pop
lret
mov
xchg
jb
add
mov
outsl
or
ja
fbld
jno
aas
pusha
push
xchg
push
inc
shrb
pop
repnz
int3
shlb
add
xchg
repnz
inc
push
fsubrs
outsl
mov
outsl
roll
popa
loope
add
mov
xchg
adcb
imul
lds
dec
mov
cmpsl
cmp
jbe
fildl
mov
inc
xor
jp
testb
xchg
nop
xchg
call
mov
mov
sub
mov
je
mov
shl
sub
in
cli
xor
mull
out
push
cli
jge
and
cmc
shlb
push
pop
add
pop
fcoms
and
sub
add
or
xchg
loop
idivb
mov
mov
popf
push
inc
dec
pop
adc
xor
pop
repnz
ror
pop
hlt
notb
cmp
insb
mov
push
sti
test
jnp
stc
xchg
movb
enter
mov
ret
testb
and
addr16
xchg
mov
mov
fldl
push
scas
stc
jl
push
and
es
lret
mov
ret
aad
aaa
or
or
add
and
fisttps
es
ljmp
cmp
push
xchg
ja
repz
mov
sub
popa
xchg
cmp
insb
adc
je
dec
lret
loope
xchg
push
xchg
or
jp
jb
movsb
aad
inc
or
imul
jo
dec
inc
xchg
dec
mov
dec
cmp
inc
sub
js
mov
nop
and
call
sbb
pushf
repz
movsl
or
scas
cmp
push
push
mov
rcl
inc
scas
push
addl
aaa
cmp
mov
ja
mov
cmp
pop
add
stos
push
mov
mov
and
sidtl
and
dec
sbb
addr16
mov
push
inc
orb
in
fcoml
xchg
dec
push
arpl
lea
xor
js
lock
sub
jl
sbb
jmp
cmp
repnz
repz
sbb
rorl
push
cli
dec
add
mov
ss
xchg
add
xchg
add
mov
loopne
push
lock
inc
mov
lds
je
addr16
dec
push
js
and
mov
and
repnz
mov
sahf
daa
and
dec
push
mov
sbb
push
fstp
push
ret
inc
into
and
aaa
cld
add
shr
adc
mov
movsl
test
push
xlat
dec
data16
adc
inc
gs
rclb
push
pop
imul
inc
lods
jle
cld
push
aam
inc
fidivl
jg
xor
fwait
mov
rcr
jbe
stos
jmp
pop
sar
mov
dec
jb
mov
jmp
jge
inc
fcmovu
popa
sarl
mov
call
and
ds
and
mov
jle
shlb
loopne
xchg
inc
imul
addr16
sub
repz
test
mov
sub
add
mov
ret
push
xchg
xchg
andl
int
xor
push
ret
test
mov
fs
lcall
out
adc
sub
out
sbb
inc
or
or
add
bound
xchg
and
ja
lahf
or
loope
jp
push
sub
popf
xchg
repnz
aam
or
and
inc
jmp
pop
cli
outsl
push
movsl
adc
mov
push
out
imul
dec
into
int
dec
aam
dec
adc
incl
xor
sub
out
dec
ror
aam
mov
imul
ret
dec
adc
add
test
iret
test
mov
mov
js
ret
imul
cltd
dec
das
xchg
ss
cmp
stos
aaa
sub
icebp
adc
fmuls
sub
sub
pusha
arpl
fsubrs
or
mov
pusha
jns
nop
pop
jo
sbb
loopne
adc
das
lods
xchg
testl
cmp
add
call
aas
test
push
aam
daa
sbb
fsubrs
sbb
ds
cli
lods
data16
xorl
push
daa
cld
ds
jg
jns
cld
fs
lods
pop
ja
popl
sti
arpl
fucomip
mov
mov
cmp
lret
fldl
pop
imull
std
inc
movsb
pusha
jnp
dec
lahf
inc
cli
shr
test
icebp
jne
sti
push
sbb
xor
push
xchg
jne
ljmp
mov
movsb
lret
ds
lret
stos
lea
aas
and
xchg
cvtdq2ps
or
mov
lcall
pop
in
lret
orl
mov
adc
sbb
scas
out
sub
pop
jge
xchg
jp
test
xchg
sti
iret
mov
in
jg
adc
pop
popf
das
lret
cld
pop
adc
adc
fldl
out
xlat
inc
je
add
mov
pop
pop
inc
mov
in
xchg
repnz
inc
test
ret
enter
lods
icebp
xorl
pop
xor
ja
aas
jle
movsl
mov
push
stc
enter
je
addr16
testb
shlb
or
xor
ja
aaa
psubsw
mov
and
iret
lcall
int3
xor
xor
push
mov
xor
imul
out
shr
jne
xor
mov
icebp
cmp
lret
xor
add
cltd
test
in
or
adc
cli
mov
mov
and
add
shll
and
fnsave
fstps
add
popl
gs
call
xchg
mov
xchg
mov
ds
out
aam
pop
pushf
mov
push
sub
lret
dec
testl
loope
pop
inc
add
or
mov
sti
inc
pusha
or
mov
xor
mov
and
jnp
mov
popf
mov
mov
mov
push
cld
mov
adc
lahf
mov
popf
xchg
mov
jl
cwtl
cmp
sub
clc
lahf
hlt
cmp
xchg
mov
out
sbb
repnz
lods
or
insl
dec
add
xchg
inc
bound
mov
aaa
xchg
in
jo
test
or
inc
enter
sub
sbb
mov
push
mov
into
lods
cmp
push
sti
dec
pop
stos
lcall
rcll
mov
mov
sbb
sbb
mov
xor
dec
lods
jl
dec
mov
cmpsb
das
xchg
inc
push
rorl
fwait
rolb
into
ret
cmp
jno
mov
aaa
jns
int
push
rcr
pop
aad
dec
jbe
dec
rcr
dec
mov
pop
pop
dec
subl
je
stos
rcrb
adc
lcall
shr
mov
jae
pop
inc
insl
push
imul
out
das
pop
and
dec
mov
pop
mov
pop
dec
comiss
les
jne
mov
repz
lock
sbb
add
push
add
sbb
insl
movsb
fsubr
stc
mov
or
inc
mov
ljmp
sub
mov
rcrl
test
sbb
cmp
test
mov
jmp
std
add
or
lds
sub
jno
jno
adc
popf
add
xchg
int3
mov
repz
rep
pop
xor
mov
lods
bound
inc
dec
pop
cmpsl
pop
mov
pop
negb
mov
jge
repz
xchg
es
mov
inc
mov
arpl
cmp
mov
jg
and
mov
mov
subl
push
dec
cltd
jmp
les
dec
xchg
daa
adc
adcl
out
negb
jge
sub
shll
es
call
jo
xor
xlat
je
pop
mov
ret
jbe
pop
mov
ja
pop
jae
mov
xor
test
push
fs
add
mov
inc
dec
xor
cmp
stos
ja
jp
inc
xor
inc
push
jo
cli
mov
pop
mov
mov
mov
mov
jecxz
cmp
xchg
add
les
jbe
stos
adc
int
lods
test
orb
xchg
negb
repnz
je
dec
inc
cmpsb
mov
xor
out
andl
push
fstp
cmpsl
hlt
xor
push
pop
cmpsb
or
xchg
inc
mov
pop
mov
push
mov
lods
adc
or
mov
fldl
dec
add
push
notl
pop
adc
nop
repnz
aas
lods
inc
mov
mov
ret
jl
sbb
jno
dec
inc
clc
jae
fnstsw
sbb
cmp
xor
xchg
cmp
mov
imul
loope
jnp
sub
jecxz
sub
jae
add
and
in
rolb
movsb
push
pop
mov
jl
das
vhaddps
icebp
mov
enter
insb
shl
movsl
icebp
arpl
jbe
das
dec
rorl
out
stos
push
lret
adc
loope
xor
mov
popa
xor
inc
adc
dec
rcl
leave
fildl
mov
pmaddwd
lea
lahf
out
loope
jae
clc
cld
js
xorl
xor
and
add
xchg
dec
add
scas
ret
jg
mov
xchg
and
xor
pop
fstps
mov
xor
mov
dec
scas
push
lret
sbbb
sbb
addr16
fisttps
inc
cld
sub
dec
div
pop
or
lret
fs
movsb
pop
shl
push
out
sub
or
cli
or
lcall
mov
les
and
movsb
outsl
cmc
xor
inc
pop
cld
loop
jle
xchg
dec
adc
fstl
out
push
sub
lds
into
cs
sub
lock
mov
fldcw
jbe
xchg
insb
jnp
iret
sub
sahf
xor
test
and
jp
test
aaa
cltd
xchg
cs
xchg
outsb
stc
shl
std
pop
test
xchg
pop
xchg
mov
outsb
jbe
push
xchg
mov
jmp
fisubrl
or
test
add
push
add
push
jp
fmull
mov
adc
or
notb
fstpt
jno
lahf
es
movsb
or
fnstsw
add
pop
mov
pop
repnz
mov
hlt
cli
aam
fstps
push
sub
dec
dec
or
repnz
pop
call
push
ja
fldl
xchg
mov
and
inc
adc
mov
mov
pop
sub
pop
jle
divl
lret
cmp
stos
dec
xor
shrb
daa
divb
loop
enter
or
movl
pop
xchg
gs
mov
jg
stos
mov
or
cmp
int
rcll
xor
xchg
int
xchg
xlat
dec
and
shl
nop
dec
mov
ja
mov
lock
daa
or
sub
loope
dec
mov
jle
call
and
mov
mov
outsb
movb
cmp
add
dec
adc
sub
xchg
das
daa
jns
dec
js
jns
jmp
popa
out
fs
sub
sbb
movsb
jge
pop
in
mov
xor
sbb
push
and
bound
test
fdivrl
mov
jo
out
and
fiaddl
pop
xchg
xchg
dec
loop
mov
push
push
fidivrs
insl
cmp
adc
incw
xchg
je,pt
fidivs
push
mov
in
mov
pop
arpl
loop
cmpsl
jecxz
pop
movsl
mov
ss
mov
cmp
mov
inc
dec
scas
stos
icebp
mov
jl
cmpsb
or
adcb
stc
rcll
xlat
dec
sahf
int
icebp
ja
shlb
inc
mov
shlb
lret
push
cld
ret
jmp
sub
jb
scas
imul
in
pop
daa
push
and
repz
test
out
sub
js
pop
inc
dec
mov
push
dec
jge
pop
mov
mov
push
xor
xor
push
xor
adc
push
test
and
jp
das
orb
push
js
das
nop
adc
mov
and
scas
scas
pop
in
jg
cmp
das
ss
shrl
ljmp
mov
add
jmp
pushf
or
jmp
jo
test
adc
arpl
outsb
xchg
pop
imul
repnz
adc
adc
mov
ljmp
idivl
inc
repnz
push
enter
in
js
daa
pop
fwait
dec
gs
cld
lahf
inc
pop
stc
ja
or
cltd
mov
cld
cltd
scas
xchg
jns,pn
cli
pop
js
adcb
sbb
loope
loopne
in
pop
clc
in
stos
repnz
cmp
or
dec
subl
in
dec
jmp
xchg
aas
inc
test
popf
adc
adcb
sarb
xchg
jbe
aam
add
mov
jo
mov
xchg
push
dec
aam
push
xchg
adc
cmp
adcl
fbld
xor
inc
xorb
int3
cmp
dec
or
out
mov
loopne
push
loop
enter
pop
xchg
add
and
mov
out
adcb
jno
mov
dec
sbb
js
loopne
ds
and
lahf
sbb
sbb
jl
loop
repnz
jmp
lods
std
mov
repnz
dec
addr16
imulb
dec
inc
mov
push
xor
mov
test
xchg
popa
inc
sbb
mov
lret
mov
data16
rcll
pop
pusha
mov
mov
jb
sbb
and
and
fbstp
fmulp
imul
mov
mov
jnp
stos
stos
inc
and
sub
add
dec
add
sahf
rcll
je
xor
mov
xchg
incb
mulb
scas
mov
xchg
outsb
xchg
jmp
jg
loopne
in
pushf
pusha
push
and
rolb
or
inc
and
jo
cwtl
aad
je
out
jb
sti
mov
lcall
or
in
testl
or
dec
in
mov
push
adc
pop
add
mov
movsb
inc
mov
inc
popa
aam
adc
lods
cmpsl
cmc
fdivs
adc
in
sub
outsb
in
add
mov
in
sbb
push
xor
add
dec
cmp
outsl
and
loopne
push
adc
jb
inc
xchg
cs
push
cmp
inc
mov
stos
jp
dec
jmp
rorb
stos
iret
add
push
cmc
inc
mov
or
pusha
gs
popa
mov
jg
iret
jmp
enter
movsl
push
leave
scas
stc
sbb
ret
mov
add
xchg
shll
add
mov
dec
mov
test
sub
jbe
loope
mov
add
sbb
xor
pusha
imul
push
pop
icebp
lods
repz
mov
insl
lods
mov
test
cmp
jge
icebp
lret
or
repnz
push
push
dec
adc
xor
fcmovne
into
lcall
add
xchg
sub
adc
cmp
mov
iret
pop
sbb
cmp
sbb
idiv
sub
jo
pusha
push
xchg
or
aas
aad
jo
and
xor
jbe
iret
dec
clc
out
std
jecxz
xchg
movsb
cmp
push
sub
or
arpl
or
or
jns
in
ljmp
sahf
jns
sub
pop
js
mov
jae
stos
fistl
sbb
jmp
pop
aaa
je
push
repz
insl
sbb
mov
adc
jbe
mov
daa
outsl
and
dec
push
mov
mov
or
jae
stc
adc
jne
adc
push
mov
pop
idivl
inc
and
mov
jle
xchg
pop
or
mov
mov
sahf
inc
daa
adc
cwtl
or
mov
adc
mov
psubsw
mov
lahf
cwtl
movsl
xor
sbb
jno
or
mov
mov
xchg
inc
pushf
fwait
aaa
or
xchg
or
cmp
das
mov
cmc
sub
les
pop
stc
or
xor
rclb
ss
roll
iret
cmc
es
xor
hlt
cltd
pop
xchg
sbb
jb
rolb
int3
and
pop
xchg
ds
xor
mov
add
imul
mov
cmp
adc
cmc
fsubr
jmp
lea
loope
sub
leave
lods
xor
cmp
pop
test
xlat
jbe
addl
jmp
push
cmpsb
mov
jp
sbb
mov
movsb
pop
sub
in
mov
jbe
jmp
loop
aam
cmp
push
fsubrp
in
into
cmp
pop
cmp
sub
xchg
mov
daa
mul
iret
mov
cli
xchg
clc
out
cltd
fisubrs
jmp
gs
ret
movsb
dec
movsb
pusha
adc
add
push
cmp
push
fwait
ror
jmp
mov
pop
insb
lds
cmpl
xor
dec
mov
push
pop
in
push
gs
lcall
adc
dec
pusha
sarb
pop
push
jnp
stc
mov
mov
inc
jbe
daa
xchg
fsubl
jge
fwait
xor
sahf
push
clc
and
add
cmp
jo
insb
inc
lods
adc
mov
add
mov
loopne
insl
jecxz
lods
and
mov
ficomps
movsl
fadd
xor
cmpsl
mov
and
jae
sbb
popf
xchg
sbb
sbb
add
xchg
arpl
in
ret
outsl
add
mov
insb
cmp
mov
mov
and
or
fsubs
lea
lock
stc
mov
loopne
in
daa
fisubrs
roll
das
sti
cs
loope
mov
xchg
daa
loope
pop
stos
and
mov
jle
cld
sbb
test
test
daa
cmpsl
inc
ret
stos
cli
gs
adc
outsl
mov
xlat
pop
test
icebp
push
pop
dec
sar
outsl
loope
add
mov
in
xlat
jle
dec
repnz
bound
xchg
mov
bound
imul
int3
inc
jg
and
pop
xor
pop
arpl
ds
cmp
mov
sbb
ljmp
mov
inc
lret
js
ss
add
mov
loope
out
sbb
jns
data16
cmp
inc
aad
bound
xchg
ret
mov
pop
into
push
lock
lahf
sub
test
out
imul
xacquire
push
mov
dec
sub
pop
ja
pop
jnp
adc
cmpsb
jecxz
xor
pop
inc
jno
lahf
sbb
sbb
xchg
int
or
dec
push
sbb
filds
xchg
mov
mov
sub
cmp
stos
int3
dec
sub
inc
jb
andl
imul
popf
popa
fisubs
and
or
pop
inc
roll
xchg
es
inc
inc
orb
push
movsb
sub
jecxz
aaa
fnstcw
pop
jno
stos
push
std
ds
pop
pop
push
dec
lret
xlat
push
in
aam
jp
outsl
cmp
cld
ja
imul
or
sbb
in
call
cli
xor
add
testb
push
cmp
pop
leave
iret
arpl
stos
fwait
ds
test
and
push
cli
push
push
dec
and
xchg
ja
aad
pop
out
iret
push
in
adc
sub
pusha
enter
inc
mov
mov
inc
leave
out
fcom
cmpb
inc
add
mov
cmpsl
movsl
mov
repnz
adc
imul
test
or
cmpsl
dec
sub
adc
int
push
mov
sbb
cld
jg
mov
and
xchg
fwait
sarl
je
outsb
les
push
clc
fmull
vshufpd
sub
mov
jl
sahf
cmp
jle
and
pusha
dec
shll
in
inc
lods
dec
js
mov
stc
ret
pop
add
std
adc
rol
into
std
xor
xor
xlat
push
mov
aam
xchg
sub
sbb
xor
and
dec
inc
pop
adc
lock
insb
mov
or
jge
cltd
inc
roll
push
jl
lret
icebp
xor
jno
jle
push
mov
mov
jecxz
jge
add
push
fsubrp
xchg
jbe
test
mov
lods
adc
loope
fisubrl
imul
pop
xor
shrl
lock
cmp
incl
loope
sub
push
int3
and
leave
ds
jg
rolb
insl
xlat
or
lret
ss
inc
stos
mov
and
pop
inc
xchg
gs
cmc
in
add
in
sbb
cmp
sbb
and
notl
sahf
jae
jl
ret
mov
es
sahf
mov
outsb
ds
aas
es
adc
ljmp
inc
adc
push
push
out
jae
adc
inc
iret
js
push
dec
dec
and
xchg
movsb
js
sbb
outsl
lock
sbb
mov
push
mov
pop
in
sub
fidivrl
shlb
ret
repnz
aaa
in
xchg
lret
push
jmp
mov
out
sub
bt
arpl
pop
xchg
aad
int
lods
add
pop
lret
outsl
icebp
and
sti
lods
sti
push
js
jno
xchg
testl
xchg
imul
mov
sub
loope
je
push
xchg
ljmp
sbb
test
imulb
dec
xchg
ja
test
insb
ds
in
ret
mov
mov
insb
adc
lock
movsl
pop
pop
js
cmpsb
iret
sarl
push
aaa
lods
stc
out
test
inc
push
lret
fisubs
adc
jle
shrl
ds
mov
leave
push
jnp
std
loop
adc
jnp
out
pushf
mov
add
repz
sahf
xlat
cmc
push
fstp
inc
jae
cmp
outsb
jno
aam
lahf
jns
adc
jge
or
lods
cmpsb
ret
test
aas
cmp
cmp
les
cmp
push
push
insb
mov
jecxz
test
popl
sbb
xchg
push
add
das
fxch
mov
dec
dec
ljmp
adc
jmp
fstpt
jl
xchg
in
inc
in
mov
or
shll
push
roll
and
mov
int3
fmuls
movsb
push
imul
mov
arpl
sbb
sbb
mov
mov
pushf
es
jae
scas
insb
fs
shl
loope
outsb
cmp
test
xor
jg
cmp
sahf
stos
push
inc
aad
js
pop
seta
lea
push
push
lahf
adcl
sub
xor
cmpsb
push
fnstenv
dec
out
imul
pop
adc
aaa
nop
ret
xlat
adc
add
mov
testb
push
mov
cltd
cmp
adc
mov
aad
and
pushf
and
jne
add
jle
imul
loope
push
pop
ss
or
rol
mov
jmp
cld
sarb
adc
xchg
add
arpl
repz
xchg
lds
adc
add
test
cmp
jno
mov
rorb
roll
add
lret
leave
sub
mov
and
ss
test
in
cmp
imul
xor
pop
aam
sub
aad
pop
les
push
aad
jbe
aam
add
mov
ret
or
fidivrs
and
inc
pop
adc
jns
pop
shr
xorl
sub
decl
loopne
lret
addr16
xor
cltd
repz
dec
in
mov
lods
clc
fisubs
jle
imul
xchg
clc
sub
mov
xchg
push
je
test
ljmp
or
and
enter
push
dec
dec
mov
test
mov
nop
lret
xchg
jge
add
lds
sbb
sbb
and
mov
jp
sti
mov
lods
sub
int3
cmp
ljmp
outsl
or
and
cld
aad
or
int3
inc
pop
mov
daa
repnz
mov
test
rorb
or
push
test
and
jbe
add
or
test
fs
adc
pop
iret
jne
lods
je
pusha
lret
xor
pushw
je
jle
loopne
push
imull
sarb
ret
ret
mov
push
add
stc
mov
fwait
xchg
mov
xchg
mov
sbb
popa
shlb
into
jns
mov
add
xor
sub
mov
pop
mov
cmp
dec
in
add
dec
xchg
push
xlat
push
inc
in
pusha
inc
aaa
arpl
mov
sub
adc
cmpsb
mov
mov
or
or
sbb
sbb
cmpb
mov
fists
js
aaa
or
mov
xor
hlt
jb
and
addr16
pop
lret
dec
push
jge
pop
jb
std
out
ds
pop
jge
call
ljmp
pop
popf
and
xor
bound
int
push
outsb
mov
lds
push
movsl
mov
pop
divl
pop
loop
adc
in
xlat
jnp
cmpsb
dec
mov
in
jnp
jmp
subb
aad
fimull
shl
aas
dec
cs
jge
fidivs
cmp
fimuls
ret
repnz
cwtl
add
rolb
mov
subb
mov
pop
inc
jp
sbb
jnp
and
inc
inc
add
jge
stos
add
fmull
shll
mov
daa
push
add
stos
dec
fadds
les
leave
sti
xor
div
xchg
inc
sub
or
dec
or
dec
adc
mov
mov
std
rol
xor
pop
cmp
cmp
or
and
cltd
xor
xor
aas
inc
cmp
xor
sbb
mov
cmp
iret
ret
fadd
mov
insb
jmp
dec
mov
or
push
clc
in
in
in
push
rcrb
add
in
fmull
push
xchg
lcall
js
xor
cmp
clc
mov
pop
inc
inc
lods
push
xchg
int3
adc
adc
inc
scas
adc
les
aam
ss
cmpb
and
ljmp
adc
loope
inc
cmpsl
sub
repz
pop
jge
aas
jge
aam
pop
ror
sbb
pop
mov
sub
scas
aas
mov
xchg
in
push
std
or
rorb
inc
push
shrb
pusha
scas
pop
loopne
push
test
loopne
jmp
add
std
cs
repz
pop
xchg
mov
sbb
cmpl
pop
sbb
repz
test
mov
xchg
jg
pop
add
sub
inc
sbb
ret
icebp
cld
mov
je
ret
or
xchg
mov
adc
jmp
cli
push
pop
ja
lds
pop
movsb
and
lret
push
jecxz
pop
mov
push
sti
mov
cs
pop
pusha
push
push
jns
int3
mov
pop
xorb
lcall
push
inc
sbb
xchg
push
lock
std
jnp
mov
in
fwait
mov
add
cmpl
in
fcmovbe
mov
sbb
test
packsswb
pop
inc
jne
stos
sbb
aas
sub
cmp
dec
das
std
xchg
mov
lcall
xchg
test
scas
xchg
in
lds
dec
cmp
enter
mov
stos
adc
lret
jg
es
pop
mov
stos
sbb
add
jg
jnp
fwait
iretw
xchg
mov
dec
adc
sahf
jno
lcall
cld
outsl
jg
cld
lcall
inc
mov
pop
xchg
or
xor
enter
xchg
inc
sub
loop
cltd
mov
xor
popa
addb
sar
add
mov
xor
push
mov
push
movb
pushf
or
pop
add
pop
or
fldenv
push
push
std
cmp
stc
push
imul
and
push
pop
xchg
and
imul
outsb
dec
dec
mov
popf
das
push
mov
push
adc
arpl
pusha
adc
cmp
clc
popa
xor
imul
or
jbe
push
xor
ljmp
into
cmpsl
jp
fists
lret
fdivl
fstp
mov
ljmp
ds
mov
or
shll
mov
int
ljmp
mov
pop
adc
xchg
mul
fisubl
in
mov
cmp
push
sbb
jp
jbe
mov
shrb
mov
pop
ljmp
jg
or
fldt
inc
push
cmpsl
rclb
cmpsl
test
je
icebp
mov
mov
shll
mov
icebp
mov
scas
xchg
adc
push
xchg
push
pop
call
mov
fwait
repz
xlat
fs
daa
mov
sub
ja
lahf
jp
std
and
pop
adc
jo
lahf
and
je
add
inc
inc
cltd
insl
stos
push
orb
mov
xchg
int
dec
jle
cs
test
pop
nop
insb
mov
sbb
mov
adc
inc
inc
mov
inc
add
cli
add
add
push
subb
pop
mov
fwait
cmpsl
fstpt
arpl
mov
mov
push
loope
loope
sbb
or
push
inc
andb
in
mov
jo
daa
sub
sbb
fimuls
testl
adc
test
jmp
out
dec
add
mov
push
daa
xchg
sbb
xchg
sti
ds
orl
test
mov
lahf
or
or
lock
sahf
mov
into
push
jne
loopne
cwtl
in
arpl
adc
call
popf
mov
incb
mov
inc
or
jae
and
sarl
sbb
jnp,pt
pushf
adc
push
int3
fstp
xor
int3
icebp
mov
xor
and
xchg
das
mov
insl
pop
cmpl
xor
pop
sbb
mov
popa
dec
cltd
mov
sbb
sbb
scas
push
ja
pop
dec
inc
jecxz
xchg
add
cmp
stos
lds
gs
jae
hlt
xchg
pop
inc
fimull
push
aas
mov
mov
cs
push
imul
xlat
mov
insb
push
push
adc
mov
rcll
add
push
xchg
stos
push
mov
test
ja
incb
push
inc
inc
ret
pop
mov
or
das
inc
lcall
pop
shlb
jns
mov
psadbw
xchg
xor
ds
add
xchg
and
xchg
movb
jp
inc
test
in
int
negb
in
push
jmp
inc
popf
aad
xor
movsb
stos
push
movsb
mov
add
jbe
lock
je
insb
jno
mov
imul
out
pop
mov
mov
pushf
mov
lods
mov
inc
push
mov
add
mov
sbb
roll
pop
ljmp
xor
cs
in
shlb
mov
movsl
mov
sbb
mov
xchg
data16
dec
push
sbb
xor
lcall
xor
sbb
or
mov
cmp
das
or
jb
lds
testl
fstps
pop
inc
and
mov
xchg
std
push
mov
xor
mov
rcrl
inc
loopne
pop
rcrl
shrb
push
adc
fldt
jmp
xchg
je
push
cmp
leave
ljmp
add
adc
testl
cmp
daa
add
test
inc
leave
sbb
je
xchg
mov
push
aad
clc
repnz
mov
inc
enter
mov
jne
test
aas
pop
test
mov
ja
pusha
push
nop
cmp
jmp
lret
add
pop
mov
or
jge
pushf
xor
dec
lods
stos
hlt
aad
pop
loope
jne
mov
shlb
call
xchg
stc
rcr
and
mov
sub
loope
bound
sbb
add
adc
cmpsl
cmpsl
insl
lock
mov
repz
lds
leave
mov
mov
push
adc
inc
mov
ss
cmc
sahf
mov
fstpt
xorb
cmp
jnp
mov
adc
xchg
add
adc
xor
incb
addr16
subb
add
lods
jae
xchg
daa
int
frndint
popf
mov
ljmp
in
mov
shll
jno
inc
dec
mov
loope
insb
mov
pop
pop
sahf
fbld
arpl
sub
jbe
push
jmp
ja
mov
mov
lret
je
inc
jle
arpl
fs
jle
push
aaa
adc
mov
mov
add
or
inc
roll
data16
and
sbb
and
flds
fstp
outsb
mov
or
dec
add
dec
rclb
aas
lock
bswap
mov
in
out
xchg
push
fcompl
sub
insb
dec
notb
jno
push
or
pop
mov
mov
jmp
mov
fmull
add
xor
inc
inc
mov
rorl
decl
fs
push
fmull
jo
insl
add
mov
mov
sbb
mov
pop
mov
pop
mov
jnp
pop
fisubrl
pop
lods
outsl
es
out
jmp
fstpl
xor
lcall
inc
mov
pop
mov
fcmovb
cmp
ljmp
sub
loopne
clc
cltd
mov
sub
fwait
push
mov
leave
jge
lcall
repnz
push
lahf
subb
add
les
paddd
arpl
or
xor
movsl
jl,pn
pushf
outsl
test
inc
fstp
inc
dec
cmp
pop
or
add
scas
mov
jbe
ljmp
outsb
fildl
inc
adc
hlt
iret
xor
sar
shl
jg
bnd
push
aam
iret
inc
int
mov
enter
inc
iret
pop
shrl
dec
add
adc
and
arpl
pop
into
into
lds
lock
das
xchg
es
xchg
dec
in
inc
pop
aad
and
inc
pusha
nop
jecxz
inc
adc
mov
add
cltd
shlb
pop
test
mov
add
movsl
fdivrl
adc
adc
pop
lret
clc
push
or
imul
adc
and
ret
xor
pop
push
cmp
sbb
add
dec
xlat
xchg
pop
sahf
insl
cmp
test
xor
insb
mov
mov
dec
mov
xor
jnp
popa
pop
inc
mov
jo
xor
dec
stc
adc
je
mov
lcall
push
cmpsb
mov
inc
shll
sbb
insl
mov
xor
push
lock
rorl
lock
add
pop
cmp
test
cld
fcoms
or
ss
movsb
mov
sub
xor
add
xor
stos
sub
inc
aad
rcrl
ret
pushf
add
subl
jb
mov
mov
lcall
addr16
inc
lds
fbld
mov
aam
mov
or
shlb
lret
mov
cmp
lods
fidivs
sbb
mov
mov
les
mov
or
mov
jo
rcr
popa
loop
pop
call
insb
scas
es
ds
inc
mov
rol
fs
add
lock
inc
xlat
push
pushf
jbe
inc
stos
in
or
jb
and
mov
imul
dec
test
mov
mov
jnp
or
lret
mov
push
mov
jno
jns
lret
fwait
in
sahf
cwtl
mov
int
cli
popa
ds
xorb
pop
jb
mov
push
cli
fimuls
psllq
out
inc
mov
lock
jmp
test
lds
cmpsl
pop
adc
mov
fs
repz
stos
movb
lods
sub
jae
imul
mov
and
mov
test
mov
mov
push
rorl
sub
std
jecxz
and
clc
inc
scas
imul
cmp
add
mov
mov
and
es
hlt
sbb
add
popa
fnstcw
push
imul
and
fmull
jb
scas
leave
pop
pop
mov
gs
sbb
out
sub
in
ss
imul
dec
iret
fs
mov
ret
dec
aaa
xor
xor
push
stos
stc
sub
push
mov
xchg
fcomps
fwait
scas
pop
mov
ja
repnz
pop
cmp
lods
call
sti
dec
lea
mov
pop
mov
push
movsl
lret
popf
sbb
inc
lods
mov
out
pop
stos
insb
sarb
xor
push
out
xor
cmpsl
pop
xor
cltd
fstps
cmpsb
adc
iret
or
lds
mov
jp
ds
xchg
outsb
fildll
icebp
jnp
pop
subb
dec
fld
inc
gs
add
jnp
push
hlt
inc
in
jbe
sub
mov
mov
sahf
inc
cmpsb
imul
push
mov
or
adc
fwait
hlt
je
paddd
aad
and
test
in
fcompl
inc
lret
js
fs
push
fmuls
inc
pop
aaa
cmp
mov
and
ret
stos
xor
mov
jl
adc
xchg
shll
ljmp
bts
gs
ret
xor
pop
inc
cmp
jns
ret
mov
mov
sub
mov
fs
test
or
xchg
jno
stos
push
mov
pop
ss
adcl
xchg
mov
pushf
push
leave
sub
pop
jmp
jbe
pop
fldcw
dec
cltd
inc
mov
test
add
pop
mov
movsb
xchg
mov
mov
shll
mov
add
stos
adcl
push
cmp
dec
xchg
ds
pop
lret
test
inc
imul
lds
cwtl
sbb
stos
mov
in
daa
leave
popf
and
dec
xchg
xchg
xor
dec
push
add
jl
xchg
adc
ret
iret
mov
test
sub
mov
iret
pop
je
rcrl
add
aam
xchg
mov
lcall
push
fwait
push
hlt
jnp
pushf
jne
add
inc
icebp
or
popl
out
add
push
imull
sbb
fs
xchg
hlt
scas
xor
jo
xor
jl
lods
dec
cmpsl
imul
fidivrl
pop
js
mov
jecxz
pop
adc
sbb
mov
addr16
dec
data16
xor
cmp
insl
fidivrs
xchg
and
pop
aad
mov
mov
xchg
cmpl
fists
mov
push
mov
fsubp
fisubrl
inc
leave
xlat
dec
fnstcw
lret
lcall
sahf
push
or
mov
pop
sub
and
fiadds
nop
std
mov
jne
je
pop
outsb
movsb
lods
pushl
sbb
test
sub
sub
push
scas
scas
mov
or
mov
xchg
loop
mov
pop
jne
mov
out
xor
xchg
ret
mov
inc
mov
lcall
repnz
or
clc
add
stos
mov
lods
loope
stc
jb
xor
mov
lods
fs
sub
mov
ja
in
icebp
jb
pusha
vpsrld
push
dec
js
pop
sti
arpl
mov
mov
test
push
push
jl
dec
mov
call
or
lcall
cmp
shr
pop
add
lret
xchg
mov
mov
out
jg
jae
pop
push
and
xchg
adc
movsb
pushf
jno
add
dec
sbb
addr16
faddl
dec
dec
mov
push
mov
sti
xor
jns
mov
pop
jae
or
fld
fstl
scas
xchg
cmp
cmp
aaa
cmp
dec
popf
mov
repnz
js
mov
inc
adc
xlat
mov
xor
and
cmpb
imul
mov
inc
js
inc
sti
push
mov
pop
mov
es
add
xchg
pop
int
es
xor
movsl
xchg
int
xor
ljmp
sbbl
in
test
mov
sub
xchg
or
jge
and
int3
aas
and
inc
sub
sub
bound
dec
inc
sbb
add
pop
xlat
inc
inc
mov
icebp
aas
mov
dec
popa
jbe
push
rcrl
rcll
xor
inc
cmc
xorb
xor
jo
fbld
movsl
mov
addl
cmp
ja
insb
lea
cmp
pushf
iret
sar
inc
mov
dec
fsts
push
pop
and
test
sbb
rcrb
mov
adc
add
inc
xlat
jns
push
pop
xor
push
inc
in
cmp
dec
arpl
cwtl
mov
push
jle
fildl
xchg
aaa
scas
adc
scas
jmp
push
adc
adc
push
mov
mov
dec
popa
ret
test
out
scas
push
roll
inc
add
test
outsb
mov
inc
mov
out
or
jle
adc
adc
sbb
sub
jge
xor
pop
xchg
pop
mov
mov
adc
mov
lock
push
xchg
mov
ja
adc
ret
bound
fisubrs
pop
fstp
pop
inc
pop
xchg
fstp
jl
jmp
mov
nop
jge
testl
xlat
cmp
mov
insb
hlt
xchg
sub
xchg
rcrb
jne
scas
jbe
mov
adc
fcomi
movsb
jecxz
repnz
mov
add
fcomps
jle
test
sbb
outsb
aam
and
fisttps
test
mov
inc
not
jo
mov
pop
cmp
inc
ret
das
lods
out
mov
jmp
jno
inc
inc
out
sub
jnp
dec
je
adc
fcmovnbe
gs
jo
push
and
jmp
jb
cmc
test
mov
lret
daa
insl
xor
lods
mov
mov
loop
loopne
sbb
fwait
sub
xchg
test
and
mov
popa
lods
push
test
jecxz
cmc
in
adc
pop
ret
ljmp
std
rorl
lahf
cmp
lods
mov
xchg
mov
iret
push
pop
sbb
cltd
inc
cmp
inc
out
sbb
aam
xor
js
add
jns
mov
pushf
cmp
sub
pop
loopne
mov
divb
add
icebp
sub
aam
std
jo
sub
lds
shr
dec
adc
pusha
popf
adc
sti
cwtl
dec
pop
mov
lret
fdivrl
ds
jg
jns
cmp
popa
fcompl
xchg
adc
out
frstor
fnstsw
jbe
mov
sbb
dec
movsb
xchg
insl
cmpsl
add
dec
xchg
adc
leave
pop
into
fcmovne
jbe
sbb
jle
xor
push
outsb
xchg
divb
lret
fidivrl
mov
out
add
add
ja
push
out
xchg
cmp
jg
cmc
in
call
xlat
xchg
dec
pushf
mov
fnstenv
pop
add
subb
add
pop
leave
mov
adc
test
and
cs
mov
sti
xor
push
int
sbb
mov
data16
out
setne
inc
js
pop
lods
sbb
mov
rep
mov
mov
dec
stos
imul
and
fidivrs
das
jne
xchg
xor
adc
ss
fidivl
cwtl
outsl
xchg
subb
jg
aad
and
int
pop
cmc
xchg
sub
int
push
xor
sbb
int3
pop
sub
into
jb
movsb
xor
mov
mov
bound
xor
into
adc
push
pusha
arpl
inc
dec
into
fsubl
imul
lret
fwait
lret
loope
fbstp
push
xchg
sar
add
adc
fbld
es
adc
in
xchg
aas
ss
pusha
daa
adc
lods
das
inc
add
gs
sub
mov
test
je
je
adc
mov
mov
jne
adc
xor
sbb
lret
adc
sub
pop
out
popa
jns
push
sub
mov
movl
iret
push
lods
outsl
pop
les
clc
push
aaa
cmp
roll
out
test
es
test
pop
addr16
jmp
xchg
xchg
ljmp
or
pslld
sbb
push
jp
and
push
add
bound
jmp
push
xchg
lcall
sub
sbb
cwtl
stos
mov
insb
imul
mov
lahf
or
popa
pop
xchg
adc
jnp
jp
cwtl
jp
and
push
push
push
scas
fldcw
cmp
int3
adc
cmp
sub
mull
rcl
andb
scas
out
dec
and
movsl
je
pop
mov
popf
enter
mov
vphaddwd
mov
mov
sar
cmpsb
add
mov
paddusb
and
test
test
stos
fistpl
or
imull
mov
fadds
add
cmp
adc
outsb
popf
mov
jmp
or
rcrl
xchg
pop
jnp
xchg
cmp
jl
mov
and
lret
jmp
mov
hlt
js
int
sbb
pop
mov
movsl
mov
dec
sbb
and
sbb
push
pop
dec
imul
sbb
adc
mov
mov
test
in
lret
mov
mov
pop
out
push
jo
push
jnp
adc
jnp
sbb
cmc
dec
jmp
arpl
dec
cs
jmp
mov
adc
xchg
bound
mov
jnp
push
scas
xor
ljmp
cmp
push
hlt
lds
cmp
and
dec
es
loop
test
or
sar
test
cld
movsl
lret
mov
int3
outsl
sbb
scas
ljmp
sbb
mov
jp
pop
pop
pusha
adc
add
push
cmp
aam
sub
inc
mov
dec
xchg
cmp
adc
aaa
add
bound
or
cmpsb
mov
aam
int
shlb
or
test
push
mov
gs
scas
stc
jecxz
push
and
cmp
mov
mov
cmp
or
fisubrl
enter
adcl
ljmp
into
repz
frstor
fsubl
xor
pushf
lret
xor
pop
flds
insl
clc
sub
ret
jecxz
pop
outsl
xchg
xor
fadds
mov
or
movsl
mov
add
das
mov
mov
fsin
push
add
or
int
in
push
test
pop
lds
sub
sahf
add
fcomi
ds
data16
andl
dec
popf
dec
jbe
adc
mov
inc
pop
data16
outsl
and
xchg
push
insb
mov
sub
stos
sbb
or
out
call
jne
lds
outsb
loop
mov
in
repnz
sub
fldl
sbb
cmp
mov
add
xorl
inc
push
in
pop
xchg
adc
lds
out
xlat
sarl
xchg
cmpsl
bnd
jecxz
pop
test
cs
push
repnz
xor
or
lahf
and
push
xchg
pushf
cmpsl
mov
jp
and
loopne
jl
sbb
sbb
add
movsl
cld
in
jg
cli
out
jno
pop
jne
ljmp
or
push
push
cmp
fiaddl
adc
inc
fisubrs
and
jno
inc
scas
mov
pop
out
cwtl
shll
xor
mov
sub
adc
lock
scas
sbb
mov
dec
xchg
adc
mov
xor
jmp
es
cmpb
adc
leave
inc
sub
dec
in
or
adc
lea
stos
xchg
push
int3
jp
mov
cmpsl
imul
sbbl
ljmp
mov
insb
dec
xchg
sbb
pop
dec
adc
inc
and
aas
mov
cli
pusha
cmp
aad
add
mov
xchg
pusha
inc
outsl
jge
scas
testl
bts
pop
or
jmp
and
cs
mov
xchg
cltd
lret
lds
inc
lret
adc
mov
pop
stos
add
das
adc
fldt
ss
aas
mov
mov
xchg
imulb
repz
inc
jnp
push
or
or
xchg
gs
shll
mov
cli
rol
mov
bound
mov
inc
mov
pushf
addr16
jns
xchg
jae
aam
sti
mov
cltd
or
or
rolb
xchg
pop
pop
lods
lods
xor
call
ficompl
rcl
pop
gs
mov
leave
cld
jns
fistl
das
cmp
mov
out
xchg
enter
das
mov
clc
add
mov
pusha
and
es
pop
cs
pop
shrb
lcall
push
jb
or
rclb
lds
xchg
lret
dec
add
subl
and
jg
inc
push
pop
sub
in
pop
mov
jl
rcl
out
cmc
imul
stc
push
ds
adc
inc
ror
mov
jg
mov
and
pop
mov
adc
push
fwait
stc
bound
nop
repnz
inc
pop
cmp
sbb
jmp
sub
add
mov
and
push
sub
or
inc
insb
mov
pop
in
scas
fbld
addr16
mov
inc
dec
icebp
scas
adc
xor
and
shll
hlt
inc
push
fisubrl
fs
fstpl
ja
cmp
arpl
mov
popf
inc
cwtl
push
xchg
jbe
addr16
rolb
call
fisubl
imul
roll
push
int
into
subl
ds
pop
into
aad
les
sub
jecxz
mov
mov
outsb
mov
das
and
cld
push
mov
rclb
popa
cmp
jge
and
mov
ret
imulb
or
fildll
xor
xlat
repz
daa
and
jb
aad
and
call
mov
sbb
sub
loopne
fisttpl
daa
aam
fsubrs
push
mov
sbb
lret
jmp
arpl
test
xchg
aad
and
mov
cs
jae
xchg
imul
lock
mov
jo
lea
inc
into
daa
jecxz
rcrl
jnp
sub
push
push
jp
add
mov
outsb
cli
xchg
or
push
cmp
jmp
punpckhwd
inc
imul
cmp
lock
dec
adc
jne
loop
popa
adc
mov
stc
movsb
or
in
push
movsb
add
lods
adc
cld
dec
lds
inc
add
sbb
imulb
sbb
ja
loopne
mov
cmp
adc
arpl
mov
imul
scas
ja
in
jmp
ffreep
xchg
leave
xor
push
jo
xor
add
iret
mov
fsubs
cld
or
ud0
lret
push
pop
push
jne
or
adc
call
adc
subl
ja
out
sub
adcl
stos
roll
jo
repz
push
loop
popa
mov
stc
cs
mov
icebp
xchg
cwtl
popa
mov
ds
out
pop
pop
fldcw
pop
jmp
test
daa
or
andb
xchg
mov
out
lods
inc
je
outsl
ret
jne
pop
mov
jecxz
mov
mov
lret
mov
lea
jg
shll
outsl
or
xlat
xor
inc
push
outsb
lods
and
scas
popf
stos
jmp
lcall
pop
cmc
ret
leave
inc
xchg
mov
fwait
cmpb
push
nop
fwait
test
orl
inc
xchg
outsb
inc
sahf
push
mov
fsubrl
int3
lods
roll
addr16
sub
push
push
movsb
inc
sub
mov
and
cwtl
loope
xor
cmpsl
loope
inc
inc
sti
je
sbb
inc
js
gs
in
jp
jmp
and
mov
testb
cmp
and
aaa
cwtl
xorl
mov
movsb
popa
inc
xchg
mov
cmp
xchg
mov
xchg
loope
jge
jl
mov
in
push
and
mov
test
sub
aad
call
iret
sbb
in
jnp
sbb
add
in
sbb
xor
xor
cwtl
sahf
mov
testl
sub
jg
out
mov
push
fimuls
sbb
test
pop
sub
rorb
lods
sbb
cmpsb
jp
popa
inc
xor
cmp
pop
mov
insb
fildll
mov
aaa
xor
cmp
repnz
sbb
pop
clc
push
xor
lret
call
imul
daa
adc
xchg
sbb
div
mov
fsubrl
cmp
bound
rcll
fsubrl
or
dec
xchg
cld
adc
maskmovq
imull
adc
xor
rol
add
xlat
ja
push
xor
jno
jmp
cmp
mov
in
xchg
jnp
lods
push
test
mov
cltd
clc
out
inc
mov
sbb
adc
sbb
rol
int
mov
hlt
js
cmp
xchg
rolb
xor
jecxz
filds
xor
sti
pop
clc
xor
fldenv
cmp
stos
pop
pop
lds
out
iret
daa
addb
mov
mov
outsl
lock
sub
in
jno
mov
lret
test
sub
xor
adc
mov
dec
xchg
sbb
dec
push
dec
cwtl
add
shll
pop
xor
in
xchg
jno
lahf
mov
pop
imull
xchg
mov
jae
icebp
cmovbe
and
or
loope
pop
push
mov
inc
xor
je
push
ljmp
repnz
cmp
or
lret
mov
mov
lahf
jnp
mov
jmp
mov
cmpsb
inc
or
in
je
dec
lds
mov
and
lea
ss
xorb
hlt
xchg
faddp
pusha
fs
push
cmp
ret
jns
and
mov
jbe
adc
or
pusha
ss
push
mov
mov
add
addl
outsb
jb
push
cmp
add
test
push
rcrl
ret
arpl
inc
and
jl
cwtl
and
dec
jle
jl
aaa
inc
pop
enter
dec
push
sahf
aas
jns
ret
xchg
pushf
xlat
and
aad
mov
leave
mov
push
pop
ja
addr16
test
jmp
sub
sbb
adc
test
movsl
fdivrl
dec
rcrb
test
lds
pop
mov
aam
sarl
dec
stc
loope
sub
mov
sbbb
lods
jg
dec
push
push
inc
cmp
ds
pop
cld
loope
sbb
ret
dec
iret
xlat
sarb
daa
adc
lret
xchg
pop
mov
sub
mov
fwait
dec
mull
dec
push
adc
and
inc
sub
add
mov
leave
sub
cli
mov
sub
test
mov
xchg
dec
push
sti
jl
mov
dec
out
add
in
loope
addr16
xlat
dec
xchg
mov
sbb
ljmp
dec
xor
ja
cmp
adc
sub
dec
jae
fmull
js
pop
sbb
mov
lea
daa
enter
jne
popf
jge
xor
int
scas
lahf
mov
add
cmp
ret
sbb
test
aam
scas
jno
pop
inc
pop
add
bound
push
jbe
push
xchg
shl
shrb
out
in
cmp
sbb
gs
lcall
add
sub
cmp
aaa
aam
les
sbb
or
scas
or
fcmovne
repz
jecxz
lea
adc
ja
add
mov
xchg
test
psubb
pop
out
jmp
pop
ss
aam
and
adc
mov
jmp
rolb
shlb
and
add
pop
push
adcb
enter
push
pcmpgtw
lret
mov
dec
jecxz
insb
adc
add
fsts
fwait
and
cmp
pushf
mov
xchg
mov
je
test
out
sbb
cmp
enter
jmp
and
or
js
in
out
push
push
inc
jns
mulb
add
jge,pt
pop
cmp
in
not
into
jno
ljmp
lock
mov
inc
push
movsb
fwait
stos
jl
mov
rclb
pop
stos
jge
pushf
dec
inc
pop
xor
cmpl
inc
push
fxch
jae
scas
popa
repz
push
sub
enter
adcl
and
push
xchg
inc
pusha
bound
shrb
enter
pop
and
popf
sub
notb
inc
jno
mov
rcl
lods
or
dec
insb
outsl
hlt
mov
call
aad
in
push
lret
mov
jl
ret
stc
pushl
jne
or
cmp
fstl
ret
xchg
push
enter
stos
negl
fs
js
jmp
xor
add
and
aaa
push
pop
mov
test
loop
pop
aam
xchg
data16
xchg
mov
dec
pop
adc
into
ret
movsb
arpl
xor
lds
xor
outsl
pop
push
dec
mov
cld
insl
push
fldl
or
stc
stos
popa
mov
sub
arpl
iret
cli
add
mov
mov
adc
and
push
sbb
popa
adcb
adc
mov
mov
jl
pop
fstl
aad
fnstsw
xchg
cmp
lcall
in
hlt
xchg
addl
pop
push
lea
insl
mov
mov
cmpsl
test
lahf
loopne
movsb
sti
fmuls
lock
xor
jae
adcl
sbb
push
ret
mov
test
out
sbb
or
sbb
ljmp
rolb
push
fisttpl
mov
push
movsb
clc
clc
inc
cmc
psrad
fisttps
sbb
cmp
pop
jb
push
or
cmp
test
ds
dec
mov
push
mov
notb
sti
popa
rorl
inc
pop
xlat
sub
repz
test
add
push
adc
cmp
cltd
loopne
enter
fbld
sub
pushf
jb
pop
sbb
bound
or
dec
xchg
pop
ret
push
subb
and
add
add
pop
xor
clc
rcl
cld
sbb
test
imul
repz
repnz
mov
or
ret
sbb
pushf
aaa
in
mov
xchg
mov
sub
int
sahf
jge
push
aas
loope
push
test
iret
sbb
fnstenv
sti
mov
sti
fcmovnb
xchg
or
pop
xor
popa
ret
xlat
xchg
jns
out
sub
mov
and
xchg
push
scas
push
mov
adc
call
mov
icebp
sub
push
sbb
mov
or
icebp
mov
shlb
xor
pop
pop
inc
movb
jmp
cmp
std
cmp
arpl
fbstp
jno
inc
xchg
outsl
loope
or
sbb
popf
aaa
jns
sub
jmp
idivb
push
cmpsb
je
xchg
and
mov
sbb
leave
ljmp
test
fisttpll
gs
dec
enter
repnz
sahf
out
add
adc
xchg
mov
sub
andb
inc
repz
mov
repz
aad
in
and
icebp
pop
jle
push
insb
sbb
jecxz
or
mov
fisttpll
es
ljmp
mov
cmp
dec
add
pop
into
iret
jecxz,pt
ss
repz
dec
add
push
dec
lret
pop
jl
push
stos
sub
fisubrl
lock
jnp
push
test
lds
roll
xchg
aam
icebp
xor
cmpsb
movsl
test
cmp
ret
test
mov
popf
push
leave
pushf
and
and
aas
sahf
xchg
pusha
sub
and
cld
stc
sub
fcmovnu
jmp
cmpsb
xchg
subb
and
adc
iret
xchg
or
popf
mov
or
test
jg
add
lds
dec
jno
in
dec
xchg
jmp
cmp
mov
or
nop
test
mov
mov
pop
mov
xchg
mov
add
imul
adc
pop
in
lods
int
xchg
push
xchg
inc
fimull
ss
subb
adc
fists
mov
or
scas
jp
pop
mov
jp
adc
pop
mov
adc
aaa
mov
pop
and
xchg
ja
daa
movsb
or
dec
inc
cmc
stc
in
push
jg
les
sub
add
inc
add
cmp
mov
mov
pop
jne
push
and
jae
daa
cmp
pop
in
jnp
nop
adc
imul
int3
inc
or
mov
pop
or
test
inc
into
or
and
xor
sub
adc
outsl
pop
shr
lods
and
scas
jp
and
push
pusha
scas
fwait
pop
test
cmpsb
push
daa
and
cltd
dec
insl
leave
push
ficoml
pop
mov
pop
inc
sahf
sti
xchg
sub
cmp
jnp
or
sbb
pop
sub
mov
jb
adc
aaa
in
jp
add
les
je
cmp
xchg
xchg
jmp
jae
int3
cltd
in
push
call
loopne
adc
leave
imul
adc
xchg
xor
inc
mov
ljmp
popa
ret
jl
mov
mov
jbe
movb
xchg
mov
lcall
filds
vpmadd52luq
jnp
cmc
xchg
mov
sahf
shrl
xchg
ljmp
frstor
inc
popf
out
daa
lock
push
jp
out
test
xchg
leave
loop
pushl
sbb
jg
imul
jae
loope
frstor
imul
push
aam
push
jl
div
imul
pop
loop
dec
mov
mov
out
test
pop
ljmp
pop
dec
call
push
xor
push
out
mov
mov
aam
add
mov
dec
in
inc
pop
jecxz
icebp
hlt
lds
xor
fdiv
jg
iret
mov
xchg
imul
in
loop
or
or
aas
fwait
incl
inc
bound
jnp
adc
out
cs
pop
fldenv
inc
popa
jge
push
enter
les
stc
jmp
sahf
sub
gs
sbb
aaa
popa
dec
push
mov
stc
andb
ficomps
pop
mov
pop
in
cwtl
and
xchg
inc
mov
repnz
lahf
ficoml
push
mov
xchg
xor
movsl
rcll
arpl
sbb
cmpsb
inc
scas
pop
outsb
lds
ds
nop
dec
shl
inc
mov
jle
dec
pop
pop
dec
lods
pop
jb
pop
test
push
dec
fiaddl
fisttps
mov
dec
dec
icebp
rorl
sub
cmp
psubd
inc
xor
xor
lock
aam
dec
nop
add
push
jge
mov
cmc
dec
lcall
add
push
outsb
stos
fdivrl
clc
mov
test
out
aad
popa
jg
xor
xor
add
lock
cld
adc
pop
outsb
pop
out
adc
ljmp
push
pop
sbb
icebp
fadds
dec
add
ljmp
outsb
into
out
mov
mov
pop
lret
ljmp
jno
outsl
add
sub
shrb
imul
jae
lds
adc
mov
adc
xchg
inc
mov
push
or
sbb
movl
push
push
push
jno
mov
shrl
sub
orl
sar
pop
lds
dec
push
pop
push
dec
fstpl
inc
daa
test
lds
std
cmp
clc
lcall
cmp
push
outsb
adc
pop
mov
leave
inc
insl
xchg
out
push
mov
xchg
dec
add
or
cmp
int3
mov
add
rcll
and
aad
sub
fdivrs
pop
adc
sbb
sub
nop
cmp
imul
pop
loope
jle
xor
sahf
sub
je
xchg
xchg
pop
in
movsl
bound
cmpsl
mov
mov
bound
in
pusha
mov
dec
iret
stos
mov
cmp
mov
mov
push
push
mov
lock
inc
cs
jno
xor
fcoml
push
nop
stos
mov
je
les
aaa
out
mov
ficoms
mov
int3
cli
loopne
cmp
jg
test
into
push
std
jbe
popf
mov
leave
nop
jmp
sbb
js
mov
test
in
repz
mov
sbb
dec
in
pop
sbb
push
stc
mov
inc
lret
shll
lea
pop
add
pop
lods
mov
jle
cmp
mov
fwait
pop
cmp
mov
and
cltd
cltd
and
fisttpl
push
push
dec
dec
out
fidivrs
or
aam
and
outsl
aam
stos
and
add
out
in
rcll
sub
adc
es
add
cmc
fistl
daa
mov
lahf
jp
mov
es
dec
sarl
add
xor
incb
cmp
aas
fnstcw
stos
clc
ljmp
mov
xchg
adc
inc
ja
mov
mov
jns
fs
loope
in
mov
pop
adc
jns
jbe
je
js
sbb
add
push
ret
add
stos
cmp
gs
daa
hlt
or
inc
pop
loope
dec
xor
into
std
adc
sbb
fs
jp
adc
fidivrs
sub
dec
inc
out
jno
movsl
jno
ret
stc
imul
hlt
xor
fisubs
shr
or
shrd
add
sub
fldt
test
call
in
les
or
in
jnp
jg
stc
mov
stos
leave
pop
aaa
outsb
ret
jg
cmp
repnz
shll
xor
lret
add
loop
loop
pop
fs
inc
add
es
push
fcomi
and
in
ret
leave
sbb
les
fsubrl
jge
xchg
mov
jp
imul
lahf
adc
jns
nop
or
jbe
dec
cs
loopne
aad
js
movsl
gs
jns
adc
jno
rorb
ds
repnz
lret
stos
jge
lcall
adc
xor
outsl
movsb
push
filds
cli
or
lods
into
xchg
pusha
xchg
mov
test
xor
test
loopne
pushf
filds
mov
hlt
fwait
or
and
mov
push
lret
pushf
mov
and
movsb
sub
pop
stc
inc
or
imulb
popf
jne
jne
mov
push
pop
inc
push
push
xchg
jnp
outsl
mov
popf
icebp
popa
adc
mov
mov
popa
nop
mov
fs
gs
outsb
sbb
jl
push
add
xchg
movsb
add
int3
mov
fs
add
xchg
scas
mov
fsts
lds
lahf
lods
pop
xchg
pop
xchg
repz
addr16
pop
xchg
xchg
inc
mov
xchg
mov
push
ror
inc
ds
pop
mov
int3
and
jo
dec
or
nop
test
push
sbb
pushf
mov
jb
mov
outsl
mov
cmp
scas
dec
jle
stos
andl
mov
lds
pop
sub
sub
mov
mov
inc
ret
fcmovbe
sbb
and
xor
fidivrl
lods
scas
icebp
xchg
and
jne
mov
mov
outsb
mov
jo
faddl
jns
xchg
xor
mov
and
add
pushf
aad
or
sub
adc
popf
sbb
mov
add
mov
push
enter
fistl
dec
sbb
in
xchg
dec
lods
inc
ret
sub
ds
pop
pop
test
dec
cmpl
dec
xor
dec
out
stos
xlat
sahf
sub
xchg
daa
ret
gs
leave
fstps
aad
pop
imul
mov
adc
push
xchg
mov
adc
cltd
or
sub
cwtl
cmpsl
scas
std
mov
cmp
inc
xchg
sbb
dec
push
sub
ficoml
jmp
jecxz
mov
sub
rcr
jle
jns
adc
sbb
and
sbb
leave
int3
inc
mov
xchg
mull
mov
mov
sub
mov
or
pop
mov
ficomps
test
mov
fwait
gs
jl
nop
push
jne
icebp
xchg
dec
fwait
add
sahf
jnp
pop
push
sahf
push
jo
filds
mov
sbb
inc
xchg
std
daa
nop
mov
push
inc
xchg
inc
dec
mov
insb
and
mov
cmpsl
push
dec
sbb
or
cmp
pop
in
and
push
cmc
daa
test
xor
or
sbbl
popa
repz
lods
xor
in
imul
mov
popf
insl
sbb
lods
mov
adc
ljmp
es
mov
jne
cs
cmpsb
adc
inc
push
xlat
pop
xor
lret
test
es
in
into
pop
inc
mov
pusha
cmp
push
cmp
xor
push
in
nop
out
sti
cld
movsb
cmp
ss
push
cmp
js
cltd
aaa
or
ret
sbb
mov
ss
mov
xchg
mov
fmuls
fstpt
push
mov
cltd
addr16
mov
lea
jb
es
repz
stos
mov
cs
cmc
push
jle
cs
rcrb
push
jp
mov
insb
mov
scas
push
jge
filds
je
lods
ret
popa
repnz
fnstcw
call
cmp
data16
mov
loop
and
push
mov
xlat
mov
xor
out
cmpb
xchg
bound
cmp
mov
ljmp
sbb
inc
sarl
lahf
xchg
xchg
cmc
pop
and
dec
arpl
dec
inc
fadd
fwait
arpl
movsb
pop
stc
addr16
push
das
mov
xchg
sahf
shl
mov
shrb
test
shlb
sub
cmpsb
xlat
rcr
or
mov
xor
fsubl
cmp
je
push
sahf
push
lret
sbb
inc
sub
xor
xchg
mov
xchg
jp
or
stc
push
xchg
sub
mov
and
in
push
xor
mov
jmp
cmp
rcr
je
in
cmpsl
lock
out
mov
xchg
xlat
or
push
push
mov
imul
movsb
repnz
cmp
pushl
ss
aaa
cs
xchg
xor
add
pop
mov
outsb
shl
dec
inc
insb
orl
aaa
mov
shrl
pop
jnp
stos
xchg
adc
jb
pushf
pop
jge
and
stos
mov
in
mov
in
fadd
inc
pop
fld
push
inc
inc
mov
jle
pop
movsb
popf
xchg
push
pop
das
cmp
mov
mov
jl
rorb
cs
cmp
pop
xor
scas
sbb
and
shll
mov
rol
or
add
jo
test
bound
xchg
mov
call
mov
fstpt
pop
dec
divps
xchg
push
shrb
ds
lahf
out
jmp
cld
pop
and
xlat
mov
jmp
or
ss
mov
fs
cmp
mov
insl
dec
xor
jne
sub
mov
orb
jnp
fwait
scas
mov
cli
pop
mov
aas
cwtl
nop
sti
pop
adcb
cmpsl
in
mov
jae
mov
data16
jecxz
insl
loope
push
out
dec
sbb
and
sbb
and
pop
or
lock
mov
mov
push
cmpsl
into
aaa
outsb
pop
lret
mov
insb
and
push
ljmp
ret
imul
rolb
lret
xor
cs
faddp
pop
pushf
aaa
push
mov
jb
xor
cmp
mov
add
pop
xor
ficoml
jnp
imul
cmp
repnz
jnp
inc
mov
int3
push
notl
inc
pop
out
jge
or
lahf
or
shll
iret
lock
pop
xlat
xchg
lods
dec
xchg
push
pop
xchg
mov
mov
mov
add
inc
sahf
inc
orl
sub
sub
sbb
lret
lret
js
mov
aas
jecxz
adc
loope
sub
icebp
fiadds
jg
and
aaa
or
scas
out
inc
cmp
dec
shrl
cwtl
mov
or
cmp
xor
fwait
dec
mov
add
fs
adc
cmpsl
andb
cli
mov
fwait
and
adc
in
and
ds
jmp
insb
addr16
rclb
fisttpl
stos
lea
xchg
in
or
int3
test
in
sahf
test
dec
ret
push
or
jae
inc
js
xchg
jle
dec
daa
xchg
jo
aaa
in
dec
clc
pop
movsl
xor
add
xor
subb
push
das
rorl
gs
sbb
call
add
btr
adc
pop
mov
jmp
pusha
scas
sahf
sahf
sarb
cmp
dec
fxch
mov
mov
fcmovu
push
cs
adc
je
out
repz
xchg
jecxz
mov
test
mov
subl
jle
mov
and
xor
aam
test
pop
shll
mov
arpl
xor
lods
lea
add
outsb
dec
das
inc
dec
dec
fbld
sarl
aas
int
mov
faddl
repz
cli
cltd
and
xchg
jl
stos
out
mov
sub
mov
dec
inc
in
xchg
xor
outsb
mov
hlt
lret
out
lock
cld
xlat
adc
std
adc
lret
push
and
cmp
insb
mov
jmp
push
ds
xchg
inc
or
and
sub
lcall
in
nop
push
push
arpl
pop
xlat
ffree
stos
jle
adc
icebp
rcl
sub
mov
mov
mov
or
mov
xchg
jne
push
aad
adc
and
xor
adcb
es
adc
mov
outsb
sub
call
mov
ret
lods
leave
inc
stos
call
xchg
es
or
xchg
outsb
test
push
jbe
lret
aaa
mov
fcos
pop
sti
sub
mov
mov
vmovsd
in
and
stc
mov
mov
jns
insb
stos
xor
push
dec
sarb
sbb
sbb
or
jg
jle
adc
jmp
cmp
std
les
imul
stos
pop
jg
dec
rol
inc
std
mov
pop
gs
pop
addr16
cmp
stc
nop
sbb
les
xor
mov
inc
out
test
adc
int
push
mov
out
movsl
sahf
jbe
add
sub
sti
cs
pop
add
stos
push
cli
cs
mov
push
fdivr
imul
adcl
mov
jne
repz
add
dec
aad
lret
mov
mov
jb
cmpl
out
or
ss
push
outsb
sbb
inc
jecxz
je
mov
stos
pop
add
dec
idivb
adc
shll
jbe
jbe
mov
mov
test
rclb
mov
cmp
dec
popa
push
xor
out
arpl
enter
cmp
arpl
mov
cmpsl
pop
xor
gs
fistpl
pop
xchg
xor
inc
xchg
rorb
cmpsl
cmp
push
into
push
mov
mov
xchg
sbb
xchg
mov
xchg
pop
nop
outsl
mov
add
sbb
or
lea
jne
mov
jmp
jb
shrl
mov
int3
call
ds
in
ljmp
sub
fcoms
xchg
add
std
jge
dec
hlt
xchg
scas
dec
test
aam
repnz
cmpb
popa
insl
lcall
fs
loop
ja
adc
dec
lods
xor
loope
mov
dec
dec
lea
test
xchg
pop
sarb
push
ret
cmpsl
loopne
popf
add
add
aaa
js
jnp
xchg
adc
or
xor
cmp
popa
and
and
sub
les
push
jno
mov
jp
enter
sbb
in
icebp
pavgb
sahf
adc
push
mov
ds
pop
in
scas
orb
lea
mov
sbb
hlt
mov
inc
lret
stc
xchg
out
adc
sbb
sbb
jnp
mov
cmp
repz
xchg
push
testb
mov
adc
mov
add
mov
mov
out
adc
mov
dec
dec
push
movsl
xchg
push
popf
lret
jp
cltd
push
das
xor
stos
sub
sahf
stc
icebp
cld
rep
out
xchg
xchg
insb
jb
das
ret
das
lods
mov
xor
cltd
into
gs
lods
je
stos
cli
sub
popf
mov
cld
scas
cmp
aad
daa
pop
sub
sub
mov
pop
push
rcrl
outsl
imul
ja
and
jl
fisubs
imul
dec
dec
gs
cwtl
push
aas
sub
pusha
mov
mov
cmpsl
adc
les
mov
push
jecxz
dec
mov
and
dec
rclb
inc
iret
xor
xchg
pusha
inc
adc
xchg
pop
jbe
and
mov
cmp
mov
scas
jbe
ds
je
std
mov
rorl
mov
pop
jecxz
xor
push
fwait
push
push
xchg
dec
and
mov
stos
sbb
mov
pop
cs
jge
movsb
pop
ljmp
maxps
mov
call
insl
jmp
push
mov
insb
movsb
in
xchg
push
adc
lods
fdivrl
push
js
add
test
in
add
push
jo
outsl
xchg
cmp
test
fnstcw
lret
outsl
or
pusha
and
pop
enter
and
and
jo
dec
xchg
xchg
jns
or
cmpsl
pushf
add
jb
mov
lret
xchg
ds
hlt
ret
push
mov
cmp
sbb
dec
push
and
out
fsubl
pop
jbe
hlt
sti
cmp
sbb
xor
andb
cmp
shlb
sub
cmpsb
rcrl
ret
mov
dec
jge
sub
cmpsl
sbb
daa
dec
lods
push
cmp
leave
ljmp
notl
jne
mov
jmp
mov
mov
insl
dec
enter
inc
pop
iret
pop
xor
les
decb
mov
mov
idivb
shll
stos
adcb
je
dec
mov
adc
inc
push
push
pop
das
push
jecxz
push
cmp
jmp
imul
mov
pop
xchg
das
xchg
lock
ljmp
dec
int3
pop
adc
push
mov
popa
orb
es
les
out
andl
inc
mov
or
out
sti
adc
lods
cmp
inc
repnz
sbb
insb
cmp
sbb
jo
xchg
and
xchg
lcall
ljmp
xor
xchg
mov
or
test
jp
mov
out
lcall
fmul
shrb
push
sarb
adc
xchg
add
sub
and
push
jge
cld
cmpb
mov
sub
ljmp
mov
xor
add
dec
jo
rcll
ss
cmc
jmp
pushf
or
shrl
cmp
aad
rcll
mov
push
aaa
shlb
aad
push
mov
mov
loop
leave
jp
fisubl
jbe
mov
ret
das
test
btc
jbe
clc
aad
popa
enter
popf
xchg
push
fnstenv
cltd
incl
mov
int3
in
dec
in
sub
add
out
sub
cmp
lock
jb
daa
int3
scas
pop
in
push
fucom
roll
inc
int3
movsb
and
sub
push
stos
insl
and
int3
mov
cmp
inc
mov
add
test
jo
out
ret
cmp
scas
push
aas
lods
repz
add
out
cwtl
scas
stc
fsubrl
call
test
or
push
add
pop
mov
dec
out
fists
dec
cltd
lods
pop
pushf
subb
and
ds
movsb
outsb
adc
movsl
sub
ja
scas
test
data16
xor
cwtl
gs
pusha
dec
out
pop
aad
jp
cmp
ljmp
jmp
aam
shlb
sub
cs
sub
mov
data16
testl
lret
pop
add
xchg
inc
xchg
push
or
add
push
add
jae
ret
iret
sub
bound
les
mov
jnp
cli
lods
repz
outsb
mov
js
fldl
mov
push
ret
stc
push
inc
cmp
xchg
and
fcompl
inc
jmp
inc
fisubs
orb
jb
arpl
add
inc
insl
inc
adc
dec
test
inc
pop
ret
adc
adc
cmpxchg
xor
jne
jnp
xor
in
inc
push
fistps
ljmp
in
das
adc
call
iret
stc
pop
repz
aaa
lret
xchg
add
hlt
pop
mov
dec
cmp
xchg
mov
or
cli
test
mov
add
inc
jle
xlat
adc
loope
sub
or
mov
rcll
pop
in
fcomip
mov
hlt
push
negl
scas
sub
xchg
fldz
mov
pop
loopne
mov
dec
flds
pop
fsubrl
add
mov
mov
lds
andl
add
xor
and
mov
into
fstl
ret
ja
mov
mov
xchg
adc
scas
outsb
cs
push
adc
mov
jl
sbb
mov
das
push
mov
movsb
idivl
mov
push
add
lcall
lret
mov
jae
aam
push
lret
adcl
mov
lcall
push
movsb
cltd
pop
xor
sbbb
push
mov
adc
dec
inc
repz
scas
and
sub
dec
pop
iret
lret
stc
or
jmp
test
out
int
pop
mov
cld
pusha
enter
xchg
jno
stc
xor
fisttpll
add
lahf
cmp
or
fidivrs
loop
inc
push
and
clc
fs
sub
aam
push
test
push
arpl
push
adcl
mov
jl
sahf
ret
and
sub
fsubr
mov
or
scas
xor
mov
cmp
push
mov
jmp
jg
imul
pop
sbb
jnp
lds
sahf
orl
mov
mov
icebp
mov
or
filds
idivl
inc
sahf
shl
repz
cmp
sti
popf
popa
lods
cld
jbe
mov
push
pop
sub
das
bound
xor
xchg
mov
test
push
mov
outsb
jmp
xchg
aam
push
loop
daa
std
int
mov
lcall
sub
sahf
dec
in
fidivrl
pop
enter
or
push
maxps
in
inc
test
xlat
fwait
cmp
sub
push
pop
cmp
lret
test
lret
push
pop
push
add
jb
adc
xchg
sbb
mov
fistpl
dec
push
je
ret
push
xlat
loop
cltd
adc
cli
dec
lahf
sti
enter
push
mov
jno
mov
pop
les
test
pop
rcll
mov
fsubl
push
sub
divb
adc
call
popf
out
lea
pop
outsb
lcall
mov
mov
mov
and
outsl
rorl
add
lods
ljmpw
movsl
adc
test
mov
mov
xchg
sbb
jg
or
and
or
xchg
adc
fsubrs
fbld
pop
lret
mov
xchg
sub
js
xor
fdivs
xchg
and
mov
test
hlt
std
fists
lds
ret
push
out
xchg
sti
jb
loope
xchg
cld
daa
shrl
add
insb
mov
flds
insl
vmulss
inc
call
rorb
push
mov
repz
xchg
or
push
out
and
pushf
mov
fxch
lahf
jmp
dec
jbe
xchg
sbb
les
cmp
adc
popf
out
or
push
enter
mov
pop
mov
mov
pop
dec
fcom
pop
push
inc
scas
nop
rol
pop
adc
js
jle
nop
sub
push
sub
inc
pop
mov
sub
dec
pop
rcr
push
inc
adc
gs
xchg
xchg
call
cmp
dec
sub
test
out
push
out
rcr
rep
insb
add
inc
jmp
push
xor
pop
inc
das
sub
mov
and
sbb
mov
mov
or
push
dec
and
lock
cmp
cwtl
mov
xchg
pusha
dec
fwait
mov
sbb
jno
movsl
cmp
sub
daa
push
je
mov
sbb
test
inc
xlat
push
pop
sub
xchg
cmp
dec
or
pop
cmp
sbb
rorb
fmuls
arpl
popl
outsb
jg
enter
cmpsl
movsb
sbb
add
sub
daa
cmp
cmpl
cmp
push
testl
jmp
mov
mov
jle
in
push
sbb
mov
in
add
cs
xchg
pusha
std
fwait
add
ja
pusha
push
mov
jl
jno
adc
push
aam
in
movsl
lock
push
int
shlb
mov
mov
test
adcb
xor
sbb
sub
pusha
aad
lea
mov
xor
int3
adc
stc
loop
mov
sub
loop
mov
fcompl
dec
div
pop
cmpsl
push
push
add
dec
int3
int3
xor
dec
pop
out
cmpsb
mov
pushf
int
or
cli
pop
jmp
push
push
xchg
inc
pop
lret
sbb
cmp
sbb
ret
fildll
mov
mov
pusha
dec
and
je
mov
mov
sub
jbe
insl
in
push
push
test
cs
sub
int3
add
in
inc
jne
sub
mov
fwait
cmpsb
mov
dec
push
mov
gs
aad
cmp
or
out
cmp
mov
inc
popf
faddl
mov
add
push
dec
rcrl
mov
jecxz
inc
jo
fs
insl
cwtl
ljmp
cmpsb
scas
fwait
cmp
pop
jno
mov
push
dec
leave
insl
pop
aaa
inc
push
movsb
das
sbb
insw
push
sub
adc
jmp
loope
sbb
mov
je
insl
in
mov
and
test
popf
mov
popa
mov
add
inc
scas
push
lret
cmpsb
es
mov
mov
jle
ficomps
add
jb
jp
mov
xchg
cmp
imul
fwait
mov
add
movb
cld
fcomp
daa
je
dec
push
jl
jbe
loop
fldl
jmp
data16
xchg
jg
xor
cmp
daa
push
xchg
andl
testb
adc
test
pushfw
sub
test
cmp
and
sahf
sbbb
pop
jl
adc
sub
dec
push
jb
popf
notb
inc
mov
cmp
push
lods
dec
cs
lds
stos
dec
jg
out
aaa
mov
ret
cmpsb
jg
push
sub
sbb
pop
mov
and
push
pop
inc
negl
outsl
cs
and
xchg
sbb
addl
call
pop
iret
mov
rcrb
or
xor
mov
mov
into
adc
mov
lret
outsl
and
pop
sub
mov
ror
lret
cwtl
ja
cmp
lods
jo
inc
xchg
or
mov
sbb
sub
lret
je
aad
testl
dec
aad
lds
xor
setge
orl
in
dec
jmp
stos
add
pop
mov
sahf
push
sub
bound
sbb
push
scas
cli
aad
sahf
out
xor
test
mov
enter
insl
jecxz
lds
sbb
cmpsl
out
sub
std
test
xor
inc
mov
mov
jno
test
test
clc
adc
inc
int3
xchg
aad
fisubrl
out
push
inc
fwait
dec
inc
pusha
xor
in
inc
or
in
inc
data16
mul
dec
mov
icebp
cmp
and
mov
aam
jno
out
imul
inc
xor
push
shll
xor
das
or
movb
dec
adc
out
jle
fdivrs
cmpsb
jnp
xor
cmp
adc
cmp
hlt
aaa
cmp
jo
jae
rcrb
jge
xchg
push
inc
ficompl
addr16
jmp
movsl
sbb
jge
fucomip
jge
es
sar
arpl
ret
xor
jb
div
ret
mov
add
xor
icebp
loope
or
nop
insb
out
cmp
icebp
arpl
ljmp
sbbl
loopne
lea
lea
jo
notl
fwait
dec
cld
andb
lahf
sbb
add
and
adc
adc
leave
getsec
je
in
js
out
jns
jecxz
into
imul
je
scas
mov
jg
push
sbb
sub
jne
xor
ret
mov
sbb
and
outsl
pop
outsb
xchg
sahf
cmp
insl
sbb
fidivl
adc
push
adc
ljmp
test
jge
sbb
and
int3
inc
and
push
fsubp
out
pop
lea
inc
sub
sarl
mov
decl
pop
pop
jle
in
cmp
andl
call
pop
cs
lcall
pop
xchg
mov
dec
jo
mov
add
mov
test
mov
in
sbb
or
pop
cmpl
data16
jno
sbb
xchg
push
xchg
inc
mov
adc
loope
push
mul
or
and
cmpb
gs
sub
mov
or
test
sbb
add
xchg
inc
mov
xlat
push
fs
sbb
xchg
mov
jecxz
in
outsb
out
das
dec
push
arpl
les
adc
rorb
xchg
out
es
xor
loop
jmp
dec
dec
cmpsl
ficomps
loop
sbb
imul
cltd
andl
push
push
cltd
sub
cltd
push
mov
pop
jmp
xchg
fs
fistpll
pop
stc
rcrl
xchg
sub
in
je
mov
mov
push
dec
mov
fnsave
mov
stos
stc
leave
into
add
daa
popf
xchg
mov
or
mov
les
and
scas
push
shlb
hlt
xor
mov
lock
inc
mov
rcrl
fadds
adc
or
jl
pop
add
jns
sar
mov
aad
pop
jne
inc
sbb
mov
lret
loope
sbb
lret
out
fucom
sbb
mov
cmp
adc
loope
cld
add
sahf
loopne
testb
push
orb
mov
aaa
int
sub
push
loope
mov
ret
lcall
fsubs
mov
lods
cmp
aad
insb
sbb
push
add
imul
aad
adc
inc
js
jl
mov
aas
jbe
or
mov
das
xchg
push
xlat
cmp
push
lret
xor
insl
sti
imul
sub
jecxz
imull
into
inc
cmpsl
gs
xor
and
push
mov
sahf
jb
jmp
pop
xor
dec
fisubrs
cmp
into
subb
dec
add
xchg
mov
fidivrl
dec
sub
repz
test
or
in
or
outsb
cli
sahf
dec
dec
pusha
pusha
xor
addl
sub
push
repz
mov
inc
sbb
stos
lret
cmpsb
and
sbbb
dec
push
rol
je
jne
scas
mov
jno
mov
push
icebp
xchg
aad
adc
jno
xchg
mov
dec
mov
sbb
enter
inc
mov
out
add
fisubl
fcmovnbe
lahf
jecxz
add
movsl
xchg
ljmp
jb
dec
stc
test
adc
fnstsw
outsb
test
and
cmpsb
pop
fst
mov
rorb
and
mov
rolb
mov
cmpsl
and
pop
mov
inc
nop
inc
cmp
les
out
aaa
fcompp
jb
bound
or
sub
cli
inc
mov
lret
mov
and
adc
js
or
sti
dec
cmpb
adc
and
clc
aam
or
cmc
incb
outsl
repz
mov
push
sahf
push
or
sbb
dec
jae
in
and
pop
in
bound
xchg
push
mov
aaa
sbb
call
xorl
loop
pop
pop
sbb
sbb
cmp
adc
inc
outsl
push
jmp
jp
mov
xchg
jle
aas
popf
mov
pop
mov
mov
movsb
outsb
test
les
mov
xchg
mov
pop
inc
jle
xchg
push
int
pop
jle
jle
test
cwtl
xchg
or
enter
jo
test
pop
test
out
notl
mov
mov
and
xor
ficompl
jp
jle
test
ret
mov
ja
dec
xchg
mov
arpl
insl
in
push
add
mov
pusha
and
das
nop
xor
pop
cmp
bound
std
sub
mov
push
mov
jmp
test
cld
lds
push
push
int
xorb
outsb
xchg
cmp
adc
push
mov
add
jl
pop
int
lods
cmp
jno
stc
push
cmc
in
leave
aad
orb
pop
in
mov
aam
mov
pop
sub
inc
xchg
test
cmp
mov
add
mov
cli
adcl
leave
sbb
xchg
mov
clc
mov
add
push
cmp
xor
push
or
jmp
push
test
push
fnstsw
inc
xchg
ljmp
mov
inc
pop
popf
inc
jno
sbb
adc
sub
hlt
push
movsb
dec
xor
sub
out
movsb
xchg
lods
ljmp
sub
xchg
aaa
cmp
aaa
inc
movsl
jecxz
adc
orb
insl
cli
sbb
ja
or
pop
int
sbb
adc
add
imul
mov
or
xlat
scas
imul
testl
popa
pop
outsb
adc
aaa
pushf
enter
mov
sub
xor
mov
das
inc
aad
sub
test
jns
mov
int3
lock
pop
jbe
mov
int3
das
inc
les
push
ljmp
and
xor
rcl
mov
add
xor
movl
xchg
xor
mov
sub
enter
loop
and
sbb
loop
dec
xchg
inc
xor
push
sub
dec
cmp
xor
sahf
loopne
outsb
cmc
mov
push
mov
jo
sub
jle
mov
xlat
push
and
repnz
inc
into
mov
or
in
fwait
addr16
mov
dec
mov
jae
pop
push
xchg
cmp
movl
lcall
in
mov
cmp
pop
aas
insl
and
dec
mov
pusha
or
out
ret
fs
cmc
int3
divl
stos
sub
pushf
leave
dec
dec
test
fmuls
lcall
stos
scas
jg
xlat
or
stc
lret
dec
clc
int
lods
jg
ja
filds
shll
aas
mov
adc
push
in
jb
sub
cmp
das
mov
in
sub
aam
pop
jle
jp
shlb
int
and
sbb
imul
popf
in
pop
mov
fisttpl
icebp
adc
jnp
dec
dec
insl
xor
push
and
push
push
loope
mov
cmp
daa
cmp
jne
mov
fs
cwtl
test
adc
into
xor
mov
ss
das
xchg
xchg
jl
out
pop
cltd
icebp
outsb
mov
mov
push
js
push
mov
xchg
xor
in
insl
push
in
mov
adc
or
mov
test
lock
stos
arpl
adc
dec
ret
mov
add
arpl
mov
nop
add
or
in
fisttpl
je
sub
fucomip
jp
popf
sbb
clc
mov
mov
add
enter
dec
fcmovb
sub
xor
loope
mov
pushf
jno
int3
xor
cmpb
or
push
or
xchg
pop
pop
arpl
cmpsl
pop
jmp
aam
mov
ds
jns
push
dec
xor
stos
out
std
je
loope
sub
mov
stos
inc
pop
push
adc
and
push
hlt
dec
push
stos
cltd
and
imul
inc
mov
iret
mov
xchg
add
jl
inc
in
and
jge
addr16
fistl
pop
aaa
pop
bound
xor
jo
daa
push
fsubs
mov
movsl
pop
push
cld
ret
inc
es
loope
xchg
mov
push
pop
sbb
sbb
xlat
xor
sbbb
xor
inc
andl
or
enter
pop
dec
inc
push
mov
sbb
int
pop
cmpsb
loop
sub
push
or
sub
fwait
cmp
test
inc
or
outsl
loope
ljmp
outsl
jge
in
icebp
stc
jno
jne
xchg
xchg
bound
mov
sbb
sub
les
fldenv
adc
add
bound
test
inc
push
xchg
mov
mov
lods
loope
lret
into
xchg
push
fldlg2
mov
add
mov
push
push
pop
andl
test
cmc
pop
dec
in
test
cmp
outsb
push
adc
cmp
cmp
jnp
xchg
dec
mov
inc
enter
jecxz
mov
icebp
sarl
jmp
jmp
insb
mov
call
fsin
ret
jle
mov
les
sbb
add
xchg
push
jp
clc
cmp
ja
jb
fmul
roll
scas
xchg
cmp
scas
mov
fst
cli
scas
in
lret
in
out
jmp
pusha
ret
pop
inc
leave
out
sarl
mov
mov
inc
sub
aaa
sarl
mov
jnp
aaa
pop
shrb
add
into
pop
or
jmp
movsb
scas
sbb
add
out
inc
inc
cmp
pop
sbb
sub
xchg
stos
imul
fisttpll
push
mov
or
out
sub
ja
lret
ror
jmp
jno
xchg
stos
mov
setb
push
mov
ljmp
lds
call
int3
and
lds
mov
adc
dec
add
fs
shlb
daa
jg
sbb
fnsave
fisubs
sub
sbb
inc
adc
cltd
rclb
dec
cmp
ret
and
lds
ds
out
fldt
mov
jmp
mov
in
jno
or
sbb
push
push
scas
jb
or
mov
mov
mov
dec
and
fnstenv
adc
aad
push
ret
mov
andb
cld
data16
xchg
mov
mov
jmp
shrw
das
inc
mov
xchg
adc
test
popa
ficoms
sbb
dec
or
mov
xchg
movb
or
mov
xchg
das
pusha
jg
inc
mov
lods
je
mov
and
xchg
push
addr16
jb
xchg
loop
icebp
xor
and
bound
gs
jmp
scas
jmp
in
cwtl
movsb
subb
ficompl
cmpl
jnp
pop
mov
push
or
mov
push
es
cmpsb
pop
pop
jb
sbbb
nop
std
ret
sub
inc
or
adc
lods
add
repnz
test
jne
adc
mov
push
call
sti
dec
outsl
dec
out
dec
roll
dec
scas
mov
push
jmp
jbe
out
hlt
rorb
push
aas
adc
inc
xchg
add
test
push
pop
fbld
subl
sub
test
lret
inc
jne
aad
mov
sub
lcall
fildl
shll
mov
inc
sub
xchg
or
xchg
icebp
mov
mov
push
aas
lret
lods
inc
xchg
inc
popa
js
int
dec
xor
adc
loopne
mov
sbb
into
cld
adc
adc
call
imul
lahf
cli
mov
push
mov
fnstenv
jno
loopne
pop
dec
test
xor
notl
dec
inc
fidivs
jne
pop
gs
mov
jle
mov
adcl
dec
pop
int3
push
fwait
dec
cltd
pop
gs
jnp
add
test
jb
push
or
lods
xchg
jae
flds
mov
inc
test
test
adc
sahf
cmpsb
scas
adc
xor
rcrb
in
cltd
ljmp
rcl
jno
push
ret
sub
shrl
outsl
mov
enter
ljmp
and
mov
imul
adc
lea
pop
movsl
insb
sbb
pop
int
xchg
cmpsl
hlt
or
out
dec
cmp
and
sbb
ja
fistl
mov
push
mov
mov
fistpl
and
cwtl
mov
inc
dec
fcmove
push
pop
loopne
and
adc
das
and
in
out
arpl
jmp
xor
inc
pop
xchg
leave
rcll
out
data16
aad
icebp
inc
pop
scas
ss
negl
sbb
mov
jmp
xor
sbb
jp
lcall
xchg
pop
call
fsubl
stos
add
sbb
aam
int
xor
or
inc
insl
adc
out
lcall
jg
dec
iret
sbb
aad
test
jbe
push
xchg
jge
popf
fbld
and
sub
or
jp
pop
mov
test
mov
cmp
jmp
insl
mov
pushf
xchg
movsb
roll
mov
movsb
mov
fs
sub
jp
cltd
outsb
inc
pop
xor
push
movsl
fimull
test
out
aaa
xor
or
pop
jbe
movsl
cwtl
pop
dec
fs
mov
aad
stos
jg
call
mov
mov
mov
or
jge
rcl
test
test
cmp
pop
hlt
or
test
nop
mov
xor
xor
sbb
xor
loopne
popf
add
je
stos
fcmovne
dec
push
cwtl
mov
icebp
add
insb
dec
jmp
cltd
push
setp
mov
mov
sub
stc
sti
fidivrs
mov
and
cld
mov
popf
push
std
outsl
bound
inc
sbb
call
jge
arpl
roll
lret
fmull
clc
xchg
or
fwait
mov
fistl
les
cmpsl
xor
cmp
shll
mov
mov
push
pop
enter
push
jp
xchg
ret
xchg
sbb
push
dec
dec
jb
pop
cmp
imul
int
sbb
xchg
lcall
push
movb
fsubs
jl
xor
nop
push
sub
push
mov
jb
adc
fsubrl
add
and
push
lahf
cs
and
jmp
scas
mov
sub
jns
cmpsb
out
push
cmp
out
pop
and
push
jecxz
lahf
xchg
ficoms
imul
iret
add
lock
cmp
out
sub
jno
orb
je
imulb
mov
aaa
out
movsl
sub
aaa
popa
xor
pop
lahf
mulb
ret
push
lock
es
fldt
cmp
xor
mov
mov
jns
arpl
hlt
and
pop
fcomip
movsb
les
mov
cmp
test
enter
dec
push
stos
ljmp
sar
add
loop
xor
lock
movsb
jle
mov
mov
jbe
negb
cmp
inc
mov
jmp
inc
std
lahf
pop
outsb
adc
call
mov
xor
dec
sbb
outsb
inc
lods
jge
or
cs
testb
inc
rolb
adc
lock
test
mov
mov
in
int
daa
push
rcr
and
and
jmp
mov
mov
lods
mov
push
bnd
ficoms
mulps
test
mov
divl
es
aam
out
dec
mov
inc
out
addr16
pop
fs
mov
dec
cmp
movsl
insl
fiaddl
sub
add
and
dec
xor
mov
clc
xor
orl
push
or
push
cs
jb
mov
fnsave
and
arpl
add
stos
pop
mov
aas
sub
push
add
mov
pop
sbb
xchg
jmp
sub
scas
xchg
push
dec
sbb
mov
jne
mov
dec
cmpsl
and
shll
pop
sar
stos
loope
cmc
dec
or
ret
pushf
mov
fldenv
std
add
cmp
mov
push
fsubrl
test
ja
pusha
push
pop
dec
mov
test
leave
pop
pop
mov
repz
jb
aad
daa
jmp
fnsave
sub
pop
pop
add
pop
inc
cltd
xor
add
leave
mov
insb
sarb
lds
jo
push
scas
add
and
jle
push
fimull
mov
fnstcw
outsl
pop
xchg
imul
daa
or
adc
pop
xor
loop
mov
ljmp
out
adc
pushf
push
jae
pop
push
push
sub
and
sbb
xchg
pop
inc
stos
data16
popa
testb
sbb
shlb
dec
sbb
loop
and
in
mov
push
jae
pop
add
sti
jmp
xlat
mov
add
add
jnp
addr16
daa
dec
and
push
int3
mov
clc
fdivl
inc
and
stos
addr16
sbb
gs
and
add
mov
mov
iret
ss
xor
andl
ljmp
rep
pop
scas
cli
cmpsb
adc
or
jb
inc
mov
lret
mov
push
std
addl
adc
dec
mov
mov
movsb
arpl
jbe
roll
dec
dec
xor
dec
insl
xor
mov
hlt
inc
and
pop
scas
les
sub
xor
and
xlat
jp
jl
xor
adcl
push
inc
scas
xchg
inc
popl
and
sub
pop
leave
fcmovnbe
inc
and
sub
inc
push
jle
les
jmp
cmp
pushf
add
pop
mov
sub
int
mov
ret
sbb
push
fstps
pusha
xchg
cmp
xor
sbb
mov
or
repnz
orb
in
mov
cli
adc
add
fs
incb
dec
scas
xchg
rorb
ljmp
pop
sub
adc
lock
movsl
add
and
mov
xchg
scas
ror
outsb
or
subl
adc
jmp
mov
pop
movsb
sbb
clc
inc
xchg
sub
mov
aad
dec
mov
lcall
mov
lock
roll
mov
scas
insl
repnz
mov
or
lcall
jle
pop
jp
insb
sbb
xor
enter
lods
test
or
xor
loope
mov
enter
hlt
or
in
popf
movsl
lcall
sub
fwait
repz
jl
and
cmp
ds
clc
sahf
cmp
out
push
inc
pop
push
sbb
lock
mov
mov
test
push
shll
out
loop
into
insb
imul
and
mov
mov
push
mov
out
xor
aad
out
aam
fwait
xor
sub
daa
test
mov
scas
inc
xchg
fwait
dec
xchg
push
mov
rorb
fcmove
leave
sahf
cmp
outsb
mov
enter
pop
mov
add
mov
or
mov
sbbl
mov
sbb
add
clc
add
xorb
scas
je
test
call
fnstsw
sbb
jecxz
mov
lods
push
xchg
scas
mov
aad
jne
push
jbe,pn
fstpl
cmp
je
jne
mov
dec
insb
decb
dec
orl
test
stos
pop
add
or
sbb
sub
lods
mov
pusha
orb
pop
adc
pop
lea
mov
cmp
fadd
xorl
xor
getsec
in
out
sub
mov
xor
into
aaa
fs
lret
cmp
ds
incb
cmp
jo
mov
xchg
mov
jbe
jmp
rolb
jmp
lea
mov
movsl
inc
and
aaa
cmp
lcall
lock
cmp
scas
cmpsl
mov
movsl
aam
testb
pop
push
inc
pushf
jle
popa
pop
aaa
fadds
leave
xchg
push
popa
inc
and
out
jle
sub
mov
mov
test
jae
filds
outsl
adc
data16
push
lcall
jnp
aas
aas
out
imulb
call
add
xor
xchg
aaa
or
pop
mov
jne
sub
jne
stos
lock
push
push
cmp
leave
jg
shlb
movb
jmp
cmp
dec
push
addr16
add
das
insb
push
jge
push
cwtl
cli
mov
insb
xchg
xchg
pop
fdivs
jno
lods
in
push
mov
ljmp
xlat
imul
xchg
push
push
ljmp
adc
test
jmp
cmc
fiadds
ljmp
pop
aaa
jge
and
mov
mov
subl
in
xorb
loopne
fiaddl
sub
add
sub
leave
cmp
adc
push
gs
cmp
xor
dec
stos
out
adc
cmp
inc
cli
fnstcw
push
push
in
pop
xchg
push
ljmp
cmp
mov
add
stc
mov
daa
inc
inc
add
movsl
aad
cmp
pushf
insb
add
xor
rclb
out
jp
popf
clc
mov
loope
repz
xor
ja
xchg
sbb
inc
pop
movsl
dec
dec
cmp
jae
push
sub
pop
mov
push
movsl
fwait
jle
mov
nop
pop
cli
das
xor
daa
push
sub
push
jno
push
cmp
push
es
pop
roll
jno
or
inc
sbb
out
enter
cwtl
cs
add
insl
jg
fwait
xor
mov
mov
adc
mov
mov
jp
inc
jg
insb
rorb
sbb
add
inc
fbstp
shrb
mov
push
int
movsb
pop
les
push
or
xor
and
add
popf
popf
lret
dec
lds
mov
mov
sbb
lods
outsl
sub
lret
sahf
in
pop
xchg
add
cmp
cmpl
ds
sbb
add
lea
jp
pushf
lods
setno
mov
lock
les
out
jp
inc
inc
cmp
insb
cmp
pop
ret
dec
jp
lds
inc
pop
ss
dec
gs
mov
jb
gs
jb
cmp
or
pop
jno
jp
daa
cmp
mov
sub
sub
imulb
xor
sbb
cmp
mov
or
cmc
push
fs
xchg
test
negb
cwtl
sub
xor
int
or
dec
jne
fnstcw
cmp
loopne
fsub
incl
dec
xor
outsb
jl
fldt
out
pusha
stos
add
fmuls
cmp
xor
mov
sahf
mov
cmp
add
nop
push
and
add
xchg
bound
dec
inc
push
xchg
mov
lret
xchg
cmp
adc
add
cmp
cmp
mulb
pop
sbb
test
xor
test
sahf
orb
mov
lahf
push
dec
je
imul
cli
scas
mov
lods
int3
jecxz
cli
mov
pop
mov
test
rorl
out
xchg
shl
imul
cmp
into
loopne
scas
dec
inc
dec
pop
andb
scas
or
sub
inc
std
aaa
loopne
aad
imul
add
aas
rol
fimuls
jecxz
cmp
mov
mov
push
sub
sarb
or
mov
push
cwtl
xchg
rcl
xchg
pop
mov
jle
hlt
cs
sub
mov
mov
rorl
pop
mov
test
fsts
sbb
jo
add
fbld
mov
clc
lods
mov
mov
mov
cmc
add
jns
stc
addr16
cwtl
lock
xchg
in
sbb
cwtl
outsl
inc
data16
sbb
add
cmp
sahf
aas
jle
adc
pushf
fbld
in
mov
imul
mov
daa
test
cs
inc
push
xor
push
jg
int3
dec
pop
cmp
scas
in
xor
mov
mov
dec
mov
lea
jecxz
sbb
imul
adc
loopne
rolb
mov
stc
cmp
clc
call
fcmovu
das
jno
insl
pop
mov
aam
or
sbb
mov
ss
and
lds
int3
mov
push
pop
mov
dec
pop
mov
add
push
inc
aas
cmpb
imul
sbb
out
pusha
inc
adcb
inc
xchg
jbe
ja
daa
inc
mov
es
xchg
pop
sti
fadds
pop
jmp
movsl
push
sahf
jbe
fdivrs
fmul
mulb
out
push
adc
mov
cld
pop
mov
aaa
adcb
mov
push
mov
sti
sahf
jle
inc
mov
jbe
lods
movsb
loop
fstl
lcall
test
xor
mov
lods
outsl
iret
add
jb
divb
dec
neg
mov
rcrb
jmp
out
xchg
mov
or
mov
push
imul
ss
mov
jnp
cmpsl
cmp
push
xchg
stos
xchg
dec
imulb
xchg
int3
adc
cmp
and
pop
out
test
jg,pn
or
mov
vxorps
xchg
scas
xor
imul
hlt
movsl
sbb
jp
data16
das
repnz
ljmp
iret
sub
ljmp
pop
inc
and
cmc
xor
cmp
push
push
adc
int3
ret
inc
sbb
test
imul
jne
inc
mov
inc
pop
fidivs
pinsrw
in
loop
mov
mov
xor
addl
sbb
push
divl
clc
mov
pop
cli
pop
and
popa
xorl
jbe
rorb
mov
mov
and
sbb
inc
cs
jae
sbbb
push
jecxz
mov
stos
add
jne
cmp
adc
fisttpl
imul
sub
jl
pop
cmp
pop
imul
sbb
or
popf
ja
in
adc
sbb
popa
add
sarb
mov
pop
sub
inc
mov
add
mov
call
fmull
cmp
lods
add
add
jl
push
and
inc
popf
stos
fwait
test
inc
xor
mov
add
cmp
or
out
lcall
ret
jmp
imull
test
xor
mov
xchg
scas
push
addr16
shrl
ret
test
xlat
stos
xor
mov
popf
xor
mov
mov
sub
jnp
mov
jnp
and
lds
jmp
sub
dec
sbbb
mov
shlb
fisttpll
sbb
daa
xor
xchg
lods
jbe
xor
pop
rolb
pop
add
outsl
mov
lcall
and
dec
push
xor
jb
mov
pop
movsl
jne
clc
dec
cmpsb
dec
inc
fistl
std
aaa
lahf
arpl
push
add
pop
daa
adc
adc
sbb
imul
adc
fwait
int
cli
ficoml
push
nop
jb
xor
adc
dec
ret
out
add
jmp
mov
and
xchg
iret
ror
ret
xchg
mov
xor
test
jb
repnz
es
scas
xlat
and
loopne
and
hlt
jno
cmp
sub
lock
in
fs
add
jns
xchg
test
cmp
gs
out
das
and
dec
sbb
cmp
shrl
adc
cmp
adcl
setge
es
cmp
jmp
push
sub
dec
mov
mov
xor
push
jmp
mov
fisubrs
push
xor
aas
mov
cmp
xchg
mov
sub
fs
sub
pop
loope
push
ret
adc
xchg
loop
js
rclb
daa
mov
pop
int
xor
in
xor
cmpsb
test
cli
mov
sbb
mov
jb
jmp
inc
xchg
dec
add
aaa
xchg
pop
jg
add
jl
fdivrl
cmc
sub
sarb
sub
fwait
dec
lods
xlat
cmp
out
push
outsb
adc
jne
or
xchg
sbb
push
mov
sub
scas
int3
sarb
ret
inc
adc
pop
pop
gs
adc
add
xchg
ffree
dec
adc
dec
mov
xlat
out
shl
mov
popa
xor
test
mov
ret
xchg
ret
inc
test
es
aad
movsb
lds
leave
daa
test
xor
fwait
dec
add
mov
nop
dec
mov
cmpsb
out
dec
xor
cli
in
sbb
push
adc
out
jp
sti
pop
pop
add
xchg
arpl
lret
fwait
mov
pop
push
lods
xor
test
mov
sub
ljmp
ljmp
sarb
push
call
lods
sub
das
and
mov
jno
cmp
mov
xor
fnstenv
ja
es
adc
pop
pop
mov
cmp
lods
les
les
hlt
push
orl
add
mov
inc
inc
mov
lahf
pop
jns
shll
je
out
jmp
mov
push
xchg
xchg
fldcw
and
and
or
fdivl
icebp
pushf
aaa
arpl
ds
inc
mov
aaa
push
lret
add
je
dec
in
jl
xor
movsl
into
xor
gs
mulb
mov
push
add
fsubrp
jge
lea
sbb
outsb
mov
test
cmpsb
andb
popaw
negb
or
or
add
inc
jno
push
mov
inc
enter
ja
sbb
orl
loop
addl
les
leave
push
adc
addr16
fistpl
jnp
cmp
and
pop
movsl
xchg
mov
test
sbb
in
pop
test
int
adc
daa
mov
dec
cmp
xor
jle
pop
xchg
xlat
jl
dec
int3
add
in
fists
inc
ret
jnp
or
pop
mov
out
aam
das
imul
pop
or
sub
fs
mov
stos
ficomps
dec
leave
jns
mov
test
ret
push
lock
outsl
inc
or
pop
in
loopne
xor
lods
and
jo
hlt
aam
mov
jl
std
dec
in
cs
add
inc
pop
xchg
sub
push
mov
mov
in
into
sahf
js
mov
mov
xchg
push
jb
xchg
mov
rcrb
out
stos
clc
outsb
mov
aam
ss
xchg
nop
stc
cs
push
inc
push
add
cwtl
add
sub
cmp
in
xor
rcll
scas
repz
pop
mov
lret
cmp
leave
or
incl
test
mov
gs
pop
xorl
loope
lea
es
push
cwtl
mov
fisttps
inc
sub
je
in
je
fs
pop
sub
inc
xchg
rolb
stos
jge
leave
sahf
decl
mov
inc
mov
cmpsb
xor
aas
xchg
sarb
clc
mov
inc
cld
fbld
inc
or
aas
negb
mov
sarb
cltd
imulb
fadds
push
push
xchg
iret
adc
mov
mov
jg
push
jle
fcomip
jle
adc
sbb
std
dec
cmp
adc
inc
push
adc
jecxz
imul
cvtps2pi
pop
inc
in
mov
mov
mov
in
in
fildl
ds
ret
xchg
sbbb
jb
mov
push
push
std
add
outsl
mov
lret
mov
mov
je
and
insl
lret
bound
xchg
inc
rclb
mov
adc
mov
mov
rcll
mov
xlat
movsl
sub
push
dec
inc
xor
pusha
lret
lods
add
mov
push
cli
mov
scas
cmc
outsl
cmp
xchg
mov
mov
pop
popa
hlt
adc
fdiv
sub
jnp
mov
cmpsb
aaa
cmpsl
push
jp
mov
pop
fnstsw
dec
in
movsl
pop
int
jp
and
sbb
and
scas
lcall
lods
out
call
xchg
fldt
xor
popa
mov
push
in
iret
out
mov
pop
lea
aas
imul
sub
mov
and
sbb
fwait
ret
sarl
mov
int3
or
and
dec
sub
call
mov
into
mov
rolb
mov
ficompl
dec
pop
call
jmp
xor
push
adc
cwtl
jg
xor
and
les
loope
jb
lret
mov
pusha
mov
jnp
push
arpl
or
inc
cli
jmp
cmp
inc
jle
xor
xor
loopne
mov
and
push
jle
inc
je
mov
and
arpl
je
test
and
add
out
dec
add
in
lds
inc
jmp
inc
push
pop
cmpsb
jp
mov
stos
std
push
das
shll
push
mov
sarl
xchg
mov
pop
das
push
mov
loope
xchg
or
xchg
test
popf
dec
xor
and
js
enter
fs
push
cmc
aam
js
outsb
test
sub
push
sti
aam
fisubrs
cmc
cld
rorb
cmp
sbb
push
push
pop
push
mov
or
fmull
push
xor
push
arpl
imul
cmp
dec
rcr
mov
or
inc
mov
gs
mov
int
jne
sub
daa
inc
ffreep
fwait
test
divl
adc
sbbb
lret
shrb
movsb
inc
cld
shrb
push
out
cmp
nop
aam
jnp
cwtl
ljmp
dec
loopne
adc
ficomps
add
push
sbb
fistps
popf
sbb
dec
sub
or
push
xor
aad
xlat
daa
js
adc
cwtl
es
jge
lret
lret
ffree
pop
in
pop
sbb
lahf
sbb
int3
jne
pop
xchg
cmp
hlt
hlt
in
into
cwtl
xor
dec
bswap
nop
rorl
adc
dec
test
aam
in
test
outsl
xor
and
xchg
lods
sbb
rol
cmc
jecxz
xchg
int
mov
and
lret
test
stc
dec
out
jns
or
js
cmp
sbbb
cltd
loop
rorb
pop
jo
lahf
lods
lods
pushf
pop
lds
rol
enter
stc
adc
cwtl
sbb
or
xor
jb
movsl
ss
add
dec
or
stc
mov
lea
lds
hlt
ds
mov
mov
cmp
xchg
aam
movsb
cmpl
xlat
dec
xorb
in
jl
and
dec
sub
out
mov
pop
mov
out
mov
xor
inc
and
add
pusha
jne
mov
inc
insb
mov
aam
int
cmp
add
in
shll
inc
jge
pop
mov
push
jle
cmp
leave
sarl
scas
push
sbb
shll
enter
ret
scas
cmp
adc
and
lahf
cmp
in
jle
in
pop
cmp
dec
lock
addl
push
out
inc
inc
int
and
lock
xchg
add
iret
in
fiadds
adc
push
fbstp
pop
jg
imul
addb
fcmovne
jnp
mov
lcall
cmpsb
push
xor
jp
dec
fistps
pop
pop
ljmp
mov
sub
xor
insl
xor
jo
nop
xchg
push
repz
ss
push
push
jge
jle
das
mov
sti
js
rcll
mulb
pop
mov
or
pop
add
xor
inc
lea
and
jne
adc
pop
dec
dec
push
cmp
scas
adc
xor
mov
lods
pop
bound
lods
sbb
cs
push
lcall
push
loop
aaa
mov
test
and
dec
in
jmp
jns
fimull
test
and
dec
cmp
sbb
sbb
fcmovbe
nop
pushf
cmp
sbb
das
sbb
test
lahf
pop
scas
and
jle
mov
mov
inc
sbb
xor
lock
mov
jns
mov
lahf
adc
test
add
jle
out
push
mul
pusha
jmp
inc
mov
ror
lea
xor
sub
lcall
test
lds
mov
das
adc
es
lcall
mov
xchg
cmp
mov
pop
leave
movsb
imul
lods
or
cmp
pop
push
push
adc
pop
pop
or
add
shlb
adc
insl
cmp
or
dec
jo
xchg
ret
dec
add
sarl
sbb
sub
rolb
add
stos
insl
out
mov
je
cmc
pop
lods
ret
dec
fldt
gs
inc
pop
out
jbe
cmpsl
inc
out
mov
cmpsb
dec
adc
jmp
neg
pop
fstpt
sbb
lret
cmc
cmp
mov
lock
subb
in
mov
jmp
inc
push
mov
fiadds
jns
into
lret
test
sub
dec
adc
repz
in
loop
rcr
push
add
sbb
xchg
pop
lea
inc
popf
ds
icebp
push
add
mov
pop
fs
sub
jb
imul
cmpsb
mov
dec
xchg
add
shlb
lods
fbld
test
jg
std
sbbl
sbb
cmp
add
adc
adc
mov
ss
push
faddl
cld
sbb
pushf
daa
sub
dec
leave
dec
push
pop
adc
data16
dec
jl
xor
or
repz
adc
inc
dec
in
sub
pop
xchg
cmpsl
cli
jl
repnz
and
jle
fwait
push
push
and
push
pop
outsl
mov
pop
jae
or
dec
fdivl
and
test
mov
cs
aas
das
aad
xchg
enter
pushf
jp
dec
aad
cmc
mov
add
jne
dec
adc
adc
cmp
les
enter
in
adc
inc
pop
jbe
pop
mov
and
scas
or
xchg
aaa
movsl
cwtl
in
mov
mov
imul
jecxz
push
test
lret
or
int
inc
imul
jae
fimuls
inc
mov
repz
jae
mov
xlat
clc
orl
sub
sbb
xchg
les
or
fsubr
inc
mov
mov
cmpsl
mov
pusha
jmp
pop
pop
scas
and
rclb
jae
in
rol
mov
mov
cmp
pop
cs
lods
int
lret
jge
inc
lock
push
fisubrl
xchg
mov
inc
mov
mov
push
out
push
pop
mov
xor
adc
jb
sub
or
mov
adc
add
clc
jg
enter
sbb
or
mov
xor
push
idivl
mov
repz
push
cmpsl
inc
flds
pop
mov
jmp
out
cli
adc
sbb
pop
hlt
clc
sub
in
movsb
fistpll
xchg
je
ss
cmp
or
cmp
stos
outsl
sbb
filds
xchg
mov
iret
push
adc
sti
and
std
lock
aad
in
pop
mov
adc
pop
mov
cmp
adc
icebp
int3
add
dec
pop
fsubrs
sbb
sub
dec
pushf
fnsave
loopne
sti
xchg
aad
inc
mov
cmp
andl
faddl
push
or
movl
aad
cmp
sti
loopne
out
lahf
bound
sub
fs
mov
ljmp
sbb
pop
dec
push
mov
sahf
fwait
mov
pop
pop
in
mov
int3
sbb
enter
and
adc
add
mov
pop
jle
dec
pop
mov
add
loope
cmp
or
dec
add
push
fadds
shlb
sbb
mov
xchg
or
jae
mov
test
xchg
lock
jl
call
jno
popf
xchg
pusha
test
pop
jne
gs
push
es
fsqrt
test
mov
sbb
cmp
push
mov
push
xchg
adc
lahf
enter
push
cmp
nop
pop
ficoms
sbb
jae
dec
in
xor
repnz
dec
fidivl
jae
dec
gs
aaa
lret
xlat
pop
jae
das
pop
and
push
jae
in
loop
xchg
out
leave
inc
xorl
jae
out
jmp
jge
lret
data16
imul
sahf
test
pop
sbb
or
mov
mov
inc
gs
push
dec
jne
mov
movsl
jne
jns
mov
pop
pop
push
jb
fsubs
incb
sub
cltd
inc
sbb
mov
mov
test
lds
sub
imul
fmuls
pushf
xor
add
inc
pop
movsb
push
aaa
js
dec
push
ret
loop
test
lahf
cmpsl
inc
fs
lods
int
sub
and
sarb
ficomps
mov
adc
cs
mov
mov
push
enter
add
inc
and
mov
mov
loopne
cltd
sahf
mov
cmp
pop
insl
sub
mov
sbb
and
mov
push
mov
out
insb
addr16
dec
mov
fidivrl
push
fwait
cmp
outsl
hlt
int3
out
lret
inc
and
stos
icebp
jbe
sbb
cmp
mov
call
test
popa
mov
xor
cmp
jne
jb
icebp
cli
xchg
cmp
inc
sub
push
je
mov
cmp
xlat
rcll
xchg
je
jne
dec
daa
daa
test
pusha
shr
or
cmp
loopne
fiadds
int
cmp
cld
mov
xor
mov
iret
shlb
sbb
mov
push
ficoms
scas
aaa
sbb
mov
out
jecxz
ja
loope
hlt
loopne
es
ret
roll
fidivs
out
push
movsb
adc
cwtl
sbb
mov
and
sub
int3
cli
fwait
mov
mov
cmp
inc
mov
xchg
cmp
jecxz
int3
adc
pop
lret
out
popa
jl
dec
ljmp
ljmp
xor
push
stc
fst
jo
ljmp
cltd
subl
incl
mov
aaa
xchg
jae
adc
xchg
jns
adcl
push
pusha
cltd
lock
lods
add
xor
pusha
int3
jle
imul
in
and
mov
bound
aas
and
inc
jp
jp
jle
jmp
jmp
and
jb
mov
sub
ljmp
jmp
test
cmp
xor
mov
push
fs
cmp
adc
andl
pop
loop
sub
jae
cmp
pop
add
mov
pop
into
cltd
mov
enter
fnclex
or
in
gs
data16
sbb
bndstx
fldt
pop
xor
clc
sbb
sub
push
lods
and
ljmp
push
cmp
cmp
add
or
stos
mov
mov
mov
shlb
out
or
test
sub
repz
mov
punpckhwd
push
mov
jbe
test
push
jbe
jne
cld
inc
pushf
nop
or
pop
adc
cli
cmp
loope,pt
mov
iret
jno
test
xchg
lock
nop
pop
test
cmpsb
aas
aad
push
test
leave
call
popf
jmp
ss
mov
pop
jns
mov
mov
pop
stos
xor
dec
scas
in
mov
pusha
xor
and
btr
imul
dec
xor
mov
mov
pop
lods
cmp
mov
jl
cld
xor
pop
cmpsb
adc
jne
xchg
add
and
cmp
fs
test
mov
jno
es
ret
mov
mov
int3
pop
and
xlat
loopne
aam
std
mov
and
or
jno
jno
scas
mov
cmpsl
push
fcompl
push
xlat
dec
inc
add
push
mov
jns,pn
mov
loope
faddl
daa
add
adc
cmp
xchg
or
mov
adc
add
or
sbb
dec
popf
mov
push
bound
add
outsb
ljmp
cs
sub
mov
sbb
cli
out
mov
in
cmc
movsb
cli
bound
icebp
cmc
ds
ss
in
mov
test
clc
sub
rolb
add
call
es
out
movsl
jge
loop
dec
add
pop
cmp
fcomip
mov
ja
sbb
mov
cli
mov
ds
mov
sub
fdivrl
mov
lret
inc
sbb
stos
mov
inc
mov
scas
xchg
out
xor
jmp
ss
scas
cmp
mov
rclb
dec
dec
outsb
mov
es
ljmp
ret
dec
pop
xchg
xor
inc
call
xchg
fldcw
bound
xor
inc
dec
sarl
mov
int
test
std
cmp
xlat
pop
lock
mov
mov
inc
xchg
popf
gs
jp
ljmp
out
loopne
mov
shlb
fwait
add
sbb
lret
pop
mov
rol
mov
icebp
pop
mov
cmp
out
imul
sarl
xchg
cwtl
add
or
push
sbb
mov
adc
mov
push
popa
sub
scas
xchg
pop
cmp
in
mov
adc
mov
adc
js
mov
ret
add
xor
rol
and
cmp
in
mov
mov
inc
mov
cltd
push
sbb
enter
cltd
ljmp
or
daa
xchg
icebp
cs
stos
and
lcall
shlb
mov
or
mov
es
cmpsb
pop
out
and
cmpsl
repnz
adc
xchg
cmpsl
lcall
aam
test
insl
popa
cmp
mov
ss
mov
dec
shl
mov
pop
shlb
sub
enter
in
mov
lea
popa
xchg
test
jb
mov
inc
insb
mov
jae
xchg
popf
hlt
lahf
stos
test
arpl
in
inc
sub
out
fildll
sbb
jmp
inc
sbb
xor
fisubrs
push
mov
lahf
mov
mov
sub
and
push
mov
negb
fistps
fwait
loopne
mov
orl
sbb
jns
addr16
cwtl
loop
xchg
repnz
sti
pop
xlat
lret
cmc
bound
adc
xchg
mov
or
or
mov
dec
sbb
add
or
push
dec
pusha
sbb
adc
mov
jg
fisubrl
in
mov
dec
push
int3
les
mov
cwtl
enter
jb
add
in
shrl
repnz
sti
mov
mov
xchg
das
xchg
loope
sub
in
jecxz
or
ljmp
adc
aad
aad
jno
lock
dec
stc
mov
outsl
stos
xor
add
push
cld
f2xm1
pop
pop
sbb
jmp
push
push
aad
mov
push
and
mov
inc
push
mov
rcrw
fidivl
aam
js
push
mov
lods
test
mov
inc
pushf
inc
sbb
ds
push
data16
iret
ret
pop
pushf
xchg
fwait
mov
or
ja
bound
cmp
sub
fbld
pop
bnd
ret
push
sub
cmpb
xor
lods
add
dec
movsl
mov
js
mov
int3
out
ds
stos
jge
push
call
imul
lahf
fucomp
push
dec
fs
lock
mov
es
shrb
repnz
and
lea
mov
sub
stos
test
pop
cmpl
in
pop
xchg
push
adc
cmc
and
in
xor
fbld
and
pop
pop
xchg
xlat
in
xchg
inc
imul
test
and
xchg
mov
dec
imul
or
pop
mov
fisubl
out
xchg
fidivs
xlat
sbb
jnp
nop
mov
pop
mov
int
inc
repnz
test
push
or
push
inc
mov
push
jb
jns
xchg
mov
sti
out
xor
cltd
movsl
insl
dec
inc
fwait
sub
adc
outsl
mov
addl
sbb
fdivrs
push
sub
fsubp
adc
add
pop
pusha
fs
addl
mov
ljmp
lods
sub
pop
xor
cmpl
cs
mov
in
addr16
cli
ret
adc
faddl
and
insb
push
dec
add
or
mov
repz
out
jmp
xchg
xor
aad
mov
icebp
imul
sbb
cmp
lods
sub
out
push
jnp
add
stos
aas
xor
inc
outsb
mov
mov
repz
sbbb
arpl
xchg
adc
push
mov
xor
dec
incl
js
icebp
pop
adc
pusha
mov
iret
and
mov
mov
popf
cmpsb
lcall
fsts
dec
stos
mov
bound
add
int
andb
pop
insb
andl
movsb
aam
movsb
xchg
adc
xor
jne
push
mov
jae
dec
jge
cmc
aaa
pop
jmp
lahf
mov
pop
xchg
mov
xlat
jmp
cmp
fistpl
scas
ljmp
mov
cmp
push
xor
sub
sub
movsb
mov
ja
jo
push
mov
and
lcall
leave
mov
js
in
ja
std
push
adc
aad
mov
inc
jbe
pop
sub
aaa
stos
ljmp
push
add
sub
pop
jb
insl
pop
movsb
jg
data16
sub
mov
jl
cld
cmp
es
xchg
outsl
daa
insb
popa
mov
mov
lds
sahf
nop
and
jne
pusha
fiaddl
sub
sub
cmp
xorl
nop
ss
lret
int
repnz
idivl
stos
sbb
aad
pushf
mov
repnz
icebp
xchg
inc
adc
enter
inc
repz
jns
xor
mov
mov
push
pop
and
clc
iret
push
movb
bsf
cmp
adc
adc
hlt
mov
pushf
sarl
js
sub
xor
ret
jp
out
xchg
cs
jle
adc
and
dec
pusha
xor
xchg
repnz
cmp
lahf
push
sub
div
in
inc
jae
jno
mov
inc
cmpsl
dec
sub
push
es
mov
xlat
or
icebp
add
xchg
dec
ror
jmp
sub
jno
stos
icebp
loopne
neg
ret
sbb
jns
insl
jge
aam
inc
imul
mov
lret
mov
ds
push
sub
jnp
jge
sub
flds
mov
scas
lods
insl
and
dec
jnp
push
cli
jno
sbb
fdivs
cmp
add
rcll
popf
xchg
jg
jmp
clc
das
jp
inc
out
xchg
inc
pop
push
std
cmpsl
mov
scas
in
hlt
or
inc
xlat
repz
push
movsl
shl
cli
jp
sub
sub
jp
andl
fsubl
out
ffree
and
divl
das
sub
inc
pop
inc
mov
sbb
and
testl
inc
stc
sbb
dec
jecxz
imul
xchg
imul
movsb
xchg
xor
mov
loopne
in
int
outsl
fcomp
mulb
sbb
daa
xchg
scas
bnd
xor
mov
add
insb
fs
cmp
add
cmp
orl
out
xchg
adc
lea
sbb
ja
out
push
loop
or
lods
decb
mov
xor
testb
mov
cmpsl
jbe
add
push
insl
mov
fmull
push
add
jl
fistpl
enter
sub
lcall
pop
mov
das
aas
out
inc
and
add
adcl
es
and
mov
adc
mov
push
jp
jge
sahf
push
lds
loopne
and
sbb
lea
sub
js
in
inc
pop
scas
mov
add
push
pop
sub
inc
dec
sahf
xlat
cld
fldl2e
fnstcw
movsb
pop
into
cmp
lcall
aad
fstpt
jle
mov
repnz
cltd
jg
xchg
ss
icebp
cmp
push
dec
imul
fs
fldl2t
hlt
jecxz
pusha
lods
outsb
push
or
adc
les
popa
dec
fwait
jg
loop
mov
cmp
sub
jp
mov
or
xchg
or
out
popa
xchg
mov
mov
insb
sbb
dec
ja
mov
sbb
cmp
out
test
jg
pop
jns
js
orl
ficoms
aam
mov
mov
jae
test
rclb
ficoms
add
les
add
lods
lds
mov
into
and
push
mov
sub
mov
mov
sub
mov
adc
dec
popa
enter
movsb
mov
sysenter
xchg
loopne
enter
jl
adc
jb
mov
xchg
lahf
jno
das
cmpsb
rcll
adc
add
aaa
add
cli
ds
and
int3
sbb
push
cmp
xor
dec
pop
icebp
dec
xchg
dec
add
push
inc
jmp
stc
sub
out
cmp
cltd
xchg
jnp
jnp
cmp
imul
test
mov
pop
cmp
jmp
addr16
es
out
cmp
mov
imul
outsb
add
and
push
dec
mov
mov
movsl
cmc
mov
pop
cltd
test
popa
sarb
mov
sbb
jmp
sub
sbb
jo
mov
inc
in
xchg
mov
and
push
movsb
dec
stos
aam
shl
in
clc
shll
pop
sarl
mov
or
mov
rclb
or
push
xchg
pushf
fildll
adc
iret
and
loop
ds
ret
pop
or
sbb
cld
mov
inc
sub
sbb
pushf
push
inc
int3
out
je
adc
mov
sahf
insl
icebp
jbe
jmp
xor
mov
pop
addb
mov
inc
and
mov
in
je
sbb
dec
dec
dec
test
or
dec
shlb
mov
adc
in
and
mov
mov
pusha
pop
iret
jl
cli
cli
jbe
lds
cmp
in
sub
fsubr
rolb
int3
dec
xchg
lock
mov
pop
and
mov
gs
icebp
cmp
stos
xor
inc
sub
pop
fildl
push
pop
and
enter
fcmovnbe
sbb
roll
int
dec
std
imul
cmp
adc
mov
lods
or
imull
sbb
sarl
int
in
inc
pushl
cmp
cmpsl
push
fwait
jl
in
lods
sbb
insb
cwtl
repz
cmp
sub
in
mov
stos
in
call
andb
stos
dec
test
xchg
sbb
cmp
cmp
dec
scas
mov
add
in
cwtl
das
loop
insl
inc
shll
inc
or
dec
imul
imul
xor
aas
cli
xchg
les
dec
sbb
add
cmp
xor
data16
fsubrp
adc
fisubs
or
jbe
sbb
dec
in
outsl
std
or
mov
enter
sub
fiaddl
sahf
outsb
push
in
daa
mov
mov
test
movl
ret
pop
cmpsb
mov
mov
jno
pop
jnp
xchg
out
jne
sbb
imul
mov
enter
add
ljmp
xchg
xor
iret
jo
call
jg
lret
cmp
je
pop
mov
out
dec
cmp
popl
cmp
rcrb
test
call
push
dec
adcb
roll
rorl
repz
push
or
or
cli
mov
pop
ficoms
std
mov
shlb
rolb
dec
shlb
loop
stc
cmp
in
push
add
adc
cmpsb
cs
push
clc
movb
jg
dec
ret
int
sub
scas
les
sbb
flds
pushf
bound
fsub
dec
sbb
jecxz
in
xor
add
jne
cld
xor
or
push
je
ljmp
dec
fisttps
mov
add
push
pop
xchg
pop
lods
ds
stc
cld
add
mov
insl
outsl
fcmovne
popa
sbb
adc
jg
mov
mov
test
adc
mov
pop
sbb
cs
jno
inc
cmpsl
mov
xlat
aad
adc
sub
pavgw
push
mov
scas
xchg
add
xchg
enter
cmp
test
mov
cmp
adc
mov
xor
add
mov
pop
negb
jae
ret
cmp
out
cli
cmp
ret
dec
data16
or
adc
inc
push
in
lods
and
inc
sbb
jno
test
xchg
fimull
arpl
xchg
mov
hlt
loop
int3
xor
sbb
arpl
inc
aaa
cs
adc
sbb
outsb
and
movsl
cmp
and
arpl
outsb
aas
sbb
and
pop
add
push
mov
in
aam
leave
xchg
movsl
pop
xchg
shll
fsubr
icebp
loop
div
fwait
test
or
fistl
xchg
data16
mov
jecxz
xor
inc
mov
repz
or
or
neg
adc
bound
into
mov
or
lcall
xchg
ret
jle
arpl
sti
repnz
aaa
dec
out
bound
outsl
stos
inc
push
adc
or
rorl
arpl
xchg
inc
mov
ret
ret
pop
ja
mov
xor
scas
push
sarl
and
stos
movsl
stc
daa
mov
jae
adc
dec
test
leave
in
adc
add
int
test
mov
mov
rclw
lock
mov
popa
stos
push
push
sarl
pop
lods
mov
andb
pop
add
lcall
inc
or
addl
cltd
out
xor
sbb
popl
popa
dec
cmp
test
arpl
jo
cmpsl
xchg
test
pop
insb
test
bound
and
jns
inc
lea
lock
mov
and
cmp
popf
cmpsl
clc
jecxz
mov
mov
ret
in
xchg
inc
jnp
cwtl
adc
lcall
fs
xor
jne
mov
xor
mov
push
dec
jl
into
cld
jmp
jl
adc
and
mov
cmpsb
mov
jo
jns
lret
mov
dec
es
mov
addb
jne
outsl
sti
and
pop
and
setno
imul
loopne
lock
cmp
sub
or
sbb
adc
xchg
jno
and
cmpsb
and
vpsllw
inc
js
pop
mov
adc
in
orl
or
hlt
call
lock
inc
mov
enter
lcall
sub
push
aad
sub
pop
out
jp
dec
inc
nop
mov
pop
jl
mov
push
mov
adc
inc
inc
push
pusha
mov
cmp
cmp
pop
fistpll
sbb
inc
mov
sidtl
cmpsb
ja
lea
std
icebp
call
dec
pop
cmc
aam
jge
push
subl
pop
push
jns
cmp
sub
sub
sti
shll
jbe
jns
leave
dec
inc
into
or
addr16
mov
mov
mov
out
aad
push
sbbl
aaa
jo
fcmovnb
lods
sbb
andb
dec
push
fnstenv
lock
rcr
daa
xchg
inc
ret
lds
fwait
and
mov
out
out
mov
fdivrp
xor
aas
dec
or
out
jl
xchg
sbb
xor
rcll
insl
rcrb
jmp
je
ret
ss
adc
ljmp
xor
sub
mov
popa
negl
xor
fcomps
leave
idivl
gs
stos
aaa
inc
cmp
hlt
movsl
ret
sub
jmp
int3
cmpsb
jbe
inc
jne
lds
mov
and
stos
pop
das
fisttpl
rolb
jmp
aaa
cmpsb
push
xchg
outsb
push
int3
jmp
es
push
in
rcl
loop
mov
cli
or
roll
inc
fs
mov
add
jmp
mov
movsb
jl
cltd
daa
inc
xor
sub
xchg
out
sbb
call
jmp
jo
cltd
dec
aaa
sarl
adc
mov
pusha
mov
xor
popa
jl
les
pop
jl
popf
pushf
xchg
shld
repz
jbe
pop
loope
pusha
pop
roll
and
sub
mov
ret
and
xchg
xor
cmpsb
add
push
cs
xor
in
push
pushf
cli
push
push
in
mov
cmp
movsb
lds
dec
sbbl
fisubrl
xor
sub
mov
and
ja
xchg
xchg
jne
sbbb
ljmp
and
pop
jmp
lcall
out
shll
in
mov
fnstenv
mov
cmc
lret
add
add
jae
xchg
lea
jle
sbb
clc
rcl
fcomps
or
cmpsb
jecxz
jecxz
cli
mov
fwait
pop
cld
cmpsl
mov
lret
dec
aam
inc
bound
dec
test
rcrb
fistl
pop
add
or
add
adc
jne
xor
mov
push
fidivrs
rcl
icebp
cmp
arpl
fninit
ljmp
imul
sub
push
hlt
push
in
mov
jb
jo
into
lret
xchg
test
sub
sbb
adc
ja
std
jae
add
push
or
mov
adc
fistps
outsl
jae
adc
js
inc
inc
jle
lret
cli
in
fcomps
dec
into
ret
mov
inc
pusha
inc
push
insb
loop
jnp
or
test
sbb
in
shrl
leave
test
gs
rcll
mov
mov
sub
jecxz
push
sbb
fimuls
stos
rcrb
jbe
pop
outsl
dec
xchg
sub
mov
dec
ljmp
pusha
add
mov
pop
mov
pop
lret
add
out
lcall
enter
or
fcomp
pop
stos
pusha
cmp
pop
test
pop
stc
ds
in
inc
popa
cmp
sarl
pushf
lds
mov
mov
inc
or
in
movsb
adc
test
loopne
push
mov
mov
push
cld
fmul
ds
lods
rclb
mov
push
jecxz
test
mov
ja
sbbb
cmpsl
out
aaa
insl
in
fiadds
ret
fcmovnu
int
pop
xchg
in
dec
les
jbe
in
fstp
mov
outsl
pusha
cmc
xchg
mov
insb
sahf
aam
jae
dec
dec
or
or
dec
pop
mov
fs
sbb
pop
cli
mov
mov
in
fadds
call
rorl
cwtl
mov
pop
push
pop
inc
enter
pop
mov
shl
cmc
cwtl
repz
xchg
sbb
add
popf
xlat
cwtl
out
mov
enter
lcall
fldl
mov
rcll
add
push
cmpsb
push
addl
pop
fdivrp
aam
movsl
xor
xchg
pusha
in
shl
pop
jmp
cmp
pop
xchg
add
je
rcl
jb
repz
out
ss
mov
inc
cmp
call
into
repnz
bound
ret
add
repnz
xor
dec
dec
xchg
das
xorb
mov
nop
lret
out
out
mov
inc
xorb
insl
jnp
push
mov
test
sar
mov
push
mov
js
fadds
pop
loop
sti
sub
aam
sahf
mov
test
bound
lods
jge
add
jecxz
ret
adc
xchg
imulb
or
mov
pop
int
sub
jp
dec
les
push
jnp
push
lods
sub
pushf
xchg
xchg
pop
dec
dec
rclb
repz
lods
mov
xchg
cwtl
sbb
xor
mov
pop
dec
and
scas
inc
and
in
rcrl
xchg
dec
call
aam
lcall
leave
jnp
lods
xchg
inc
fnstsw
test
ja
leave
fwait
inc
loope
imul
jne
mov
xchg
jb
fsubp
add
nop
ret
pop
mov
push
not
ljmp
leave
add
int3
cmpsl
cld
sar
pop
sbb
cmp
xchg
repz
pop
and
jge
aad
cli
cli
mov
add
mov
or
mov
cmpsl
mov
ss
es
push
pusha
mov
jns
mov
push
cs
cmp
dec
fbld
pop
movsb
mov
xchg
dec
stos
xor
xor
push
xchg
loop
push
out
rcrl
xor
test
jne
mov
fs
and
out
cs
fists
orb
adc
data16
add
popa
and
cmp
cmp
add
ret
fsubrl
sub
int
repz
dec
popa
xchg
adc
imul
addr16
xchg
jmp
and
mov
cs
mov
mov
push
hlt
push
mov
and
or
xor
push
rclb
or
mov
dec
aaa
ret
jne
mov
std
push
jae
int
lds
scas
stc
call
push
push
out
test
test
sarb
or
and
fcoml
stos
xchg
lock
dec
pop
mov
xchg
cmp
and
add
pop
add
lock
jne
movsl
clc
cmp
jno
jo
add
or
dec
xchg
inc
sbb
movsl
pop
enter
or
les
xacquire
rcll
js
mov
rdtsc
adc
push
push
inc
in
mov
dec
cld
lcall
loope
es
imul
fidivrs
mov
aad
xchg
mov
jb
popa
sbb
shl
clc
xchg
in
jbe
es
pop
mov
xchg
incb
cltd
ret
fsubrl
rcrl
jne
jl
inc
pushf
cwtl
add
mov
mov
mulb
mov
out
push
cmpxchg
mov
pop
push
lock
xor
out
lahf
pop
jl
jne
adcb
and
push
in
clc
cmp
pop
pop
mov
lcall
or
shr
cmp
jg
arpl
call
jle
mov
xor
inc
jne
cmc
or
xchg
adc
popa
lock
shr
ja
pop
fisubs
push
jns
xchg
imul
pusha
rcll
cmp
inc
mov
out
sahf
mov
push
push
lods
pop
push
pushf
outsl
push
lret
icebp
cmc
add
mov
mov
sbb
jg
das
cmp
sbb
cmpsl
jp
shlb
lret
push
xchg
push
lods
inc
push
cmp
out
dec
xchg
adc
inc
gs
push
pop
mov
mov
loope
into
mov
scas
dec
xchg
push
daa
cmc
sub
cmp
jae
pushf
enter
lods
in
cmp
lds
push
sti
xchg
jbe
or
dec
jl
xor
mov
push
aam
push
repz
dec
rol
in
cltd
inc
mov
adc
pop
and
rcrl
es
sub
pop
dec
or
or
fcmove
jne
push
sbb
daa
loopne
dec
adc
repnz
mov
fsubl
push
outsl
cwtl
jno
push
rcl
lea
adc
hlt
rcll
test
mov
mov
xchg
gs
aas
loopne
mov
push
repz
insb
fstl
popl
imul
mov
ds
icebp
jp
fwait
mov
rorb
jge,pt
icebp
push
call
adc
add
cli
cs
push
pusha
rorl
ret
cs
inc
mov
cltd
fwait
outsb
sahf
gs
add
scas
dec
pop
mov
xor
iret
jo
pop
cli
add
pop
cmc
adc
pop
sbb
daa
lahf
or
jae
xchg
int3
movsl
imul
mov
sahf
jecxz
cmp
std
aad
decl
lahf
xchg
in
subb
movnti
push
inc
push
jg
cmp
sti
jno
nop
push
mov
push
jnp
sbbl
xor
push
lock
xchg
dec
fistps
pop
shlb
arpl
mov
jne
ret
int3
gs
pop
pusha
adc
mov
stos
or
or
push
push
dec
mov
and
iret
outsl
sub
in
test
push
mov
push
mov
jnp
addl
adcb
cli
jnp
sub
fistps
int
stos
shll
ret
pop
add
push
gs
mov
jg
movsl
jo
sub
and
sti
push
push
jne
mov
pop
scas
adc
add
shl
jmp
dec
icebp
fs
pop
imul
jbe
jge
mov
leave
cmc
fidivs
mov
mov
cmp
mov
push
out
imul
mov
scas
enter
aad
out
xor
das
push
push
inc
xchg
andl
mov
cmp
rol
add
iret
je
xchg
ljmp
xchg
aaa
hlt
pop
and
adc
xor
pusha
repz
mov
stc
mov
sbb
ret
cs
push
insb
mov
mov
xchg
mov
lods
shlb
push
pop
loopne
je
sub
or
push
mov
cmp
outsb
inc
xchg
pop
call
enter
mov
repz
icebp
sbb
bound
sub
loopne
iret
mov
imul
push
push
cltd
mov
xchg
adc
ss
adc
jne
dec
test
inc
popa
sbb
test
ljmp
dec
mov
test
add
cli
add
inc
add
mov
mov
popf
jmp
mov
jb
jb
mov
adc
mov
mov
dec
iret
sbb
adc
aaa
dec
cli
cmpsb
shrl
mov
pop
es
jb
lock
repnz
jb
test
decb
cmp
movsb
push
cmc
lahf
pushf
sbb
and
mov
jle
adc
mov
push
mov
and
or
xor
lret
xor
sbb
daa
mov
divl
jecxz
loop
sub
das
push
lods
and
loope
fwait
dec
add
mov
mov
test
fildl
sbbb
fwait
mov
push
or
push
fwait
pop
repnz
adc
sbb
xor
insb
fldt
inc
mov
push
insl
jge
xchg
mov
xchg
xorl
mov
sbb
xorb
popa
sbb
mov
sbb
mov
cs
adc
mov
adc
imul
aad
lock
lock
pop
data16
xor
mov
xor
movsl
push
cmp
or
jmp
cltd
push
fwait
or
lods
es
hlt
loope
dec
cli
jmp
jmp
add
bound
adc
fs
cmpsb
ds
nop
or
jle
add
mov
dec
xchg
pop
adc
cwtl
ret
rcl
imul
stc
and
inc
scas
in
mov
int3
sbb
add
decb
sarb
repz
aam
inc
dec
jae
xor
cwtl
inc
imul
sbb
add
inc
jmp
rcrl
xlat
mov
std
dec
iret
arpl
cmp
ljmp
xor
xchg
das
lcall
sbb
jae
and
outsl
pushf
inc
add
dec
test
pusha
insb
fs
into
pushf
push
mov
lock
dec
ss
inc
jae
xchg
in
add
popf
ror
push
pusha
cmp
and
mov
lcall
mov
mov
shlb
in
adc
jb
jbe
jg
cmpsl
popf
lds
sub
sbb
xchg
push
xor
mov
ja
sub
pop
idivl
dec
jbe
mov
dec
sub
pop
out
jo
scas
cwtl
ss
inc
push
xchg
jae
sub
mov
xchg
scas
sub
pop
loopne
sbb
in
sub
ds
repnz
test
sub
mov
xor
and
push
pop
aad
push
xchg
mov
scas
add
sub
in
jnp
cwtl
mov
xor
sahf
leave
adc
adc
insl
pop
repz
xchg
cmc
icebp
imul
or
in
sbb
repz
inc
xor
sbb
repnz
jns
cmpsl
or
popa
push
movsw
dec
outsb
ret
mov
iret
mov
adc
insb
das
sbb
fcompl
ret
daa
aam
sub
adc
hlt
fcmovne
mov
pop
mov
cmp
out
mov
rolb
js
jecxz
pop
in
jg
sar
scas
xchg
mov
pop
pop
mov
pop
mov
mov
xchg
int
push
jmp
flds
fsubs
push
pop
adc
in
and
push
jo
loopne
sub
adc
data16
inc
pop
pop
ds
lea
ja
dec
out
xchg
pop
mov
xchg
sub
addl
call
xchg
xchg
inc
push
cmpsl
mov
iret
xchg
adc
jmp
popf
scas
call
ret
adc
and
aad
inc
dec
pop
add
cmp
fstpl
and
movsl
adc
push
addl
mov
cbtw
sbbb
sbbb
loopne
mov
and
jp
je
and
cld
and
dec
xchg
test
add
xchg
aad
sbb
jle
icebp
adc
lods
cwtl
repnz
mov
adc
jl
mov
imul
push
das
aas
lret
or
iret
cld
adc
add
sbb
sahf
mov
mov
adc
lret
out
lock
gs
mov
mov
cli
enter
imul
and
jno
xor
fnsave
movb
pushf
out
inc
ja
mov
repz
lods
stc
push
movsl
fmul
notb
or
data16
rorb
xor
inc
jns
mov
ret
pushf
sub
shl
loope
xor
fwait
jae
mov
fucom
stos
push
pop
mov
sbb
sahf
xchg
ror
int
mov
lea
pop
outsb
cli
out
jbe
loop
jl
fistpl
sub
ret
push
cmpsl
daa
add
sbb
ss
and
adc
jae
push
ret
sbb
xchg
daa
inc
cmpsl
sub
jmp
mov
jb
jl
fimuls
or
loop
pop
popa
xor
out
dec
fidivs
adc
xor
and
shlb
test
mov
pop
or
mov
cmp
dec
cwtl
cli
inc
mov
lahf
jae
mov
repnz
jp
xchg
jmp
test
cld
pop
inc
mov
divb
btr
adcl
out
sub
mov
or
iret
ret
sub
fwait
repnz
add
in
mov
idiv
xchg
fcompl
and
test
sub
push
push
inc
int3
out
push
scas
es
je
ror
sbb
scas
adc
mov
shrb
sbb
cld
stos
aas
cmc
add
lret
pop
xor
insb
cmc
cmpsl
hlt
divl
jge
icebp
in
mov
ds
in
das
mov
mov
ret
fcmove
xchg
fidivl
mov
fldl
and
sahf
xor
repnz
mov
add
imul
mov
jbe
xlat
cmp
jnp
pop
fs
jne
cltd
ret
fcompl
shrl
shrb
jne
lret
mov
pusha
push
add
mov
outsl
jae
lret
sbb
mov
je
pop
sbb
or
es
xor
pop
sbb
cs
imul
mov
loopne
mov
or
sarb
jmp
jb
cwtl
shl
imul
call
cmp
stos
es
cmpsl
pusha
or
xchg
loop
int
inc
pop
jb
mov
cmp
jmp
fwait
mov
add
popa
add
dec
pusha
iret
bound
and
cmp
sahf
cmpb
mov
mov
dec
or
iret
mov
mov
adc
daa
insb
in
ret
adc
adc
ret
daa
popa
imulb
out
jae
lret
cmp
mov
arpl
fimull
pop
fisubrl
xchg
insl
xor
mov
fisttps
test
or
adc
jb
fldenv
fisttps
dec
cmpsl
inc
das
pop
xchg
jno
or
or
xchg
shl
ljmp
xchg
xchg
dec
mov
dec
sub
push
cld
xchg
adc
iret
push
leave
mov
lods
ja
dec
xor
shrl
mov
clc
aam
aad
lret
cmc
push
sub
xchg
mov
xchg
mov
sub
jo
push
mov
jne
imul
mov
push
and
cld
int3
add
pop
adc
mov
jl
pop
imul
pushf
xchg
mov
xchg
push
test
sbb
cmpl
mov
dec
loopne
or
mov
jne
pop
add
fst
pop
shrl
xchg
popa
test
imul
adc
fmull
add
sbb
xchg
mov
mov
adc
mov
jmp
xor
mov
xor
mov
push
leave
push
mov
or
push
xor
mov
and
cmp
in
sbb
nop
aas
add
inc
push
or
or
mov
mov
sahf
inc
dec
shl
cld
mov
sub
jo
mov
in
test
push
nop
ljmp
fnstcw
or
cmc
and
mov
fptan
lret
mov
cli
jne
dec
pop
jecxz
sbb
add
pushf
mov
scas
push
cld
inc
into
mov
push
loopne
mov
sub
jno
mov
sbb
mov
jbe
insl
daa
xchg
ds
adc
mov
xchg
xchg
push
cld
pop
push
leave
pop
xorl
push
mov
fsub
sti
dec
jmp
lods
outsl
popf
mov
xor
rcrl
js
repnz
cwtl
jp
push
inc
inc
jae
dec
xrelease
ret
push
bound
lock
std
popw
imulb
test
mov
nop
shl
push
mov
lods
push
jns
out
stos
xor
push
jg
inc
sbb
push
mov
cmpl
cwtl
shrl
jns
in
inc
ja
mov
lret
push
or
and
xor
icebp
add
and
or
in
ljmp
in
lods
ficompl
jge
lods
mov
mov
ljmp
popf
pop
mov
push
jns
xor
xlat
xor
xchg
ds
xchg
fmuls
loop
fsub
jbe
sbb
inc
cmpsl
pushf
repz
fnstenv
xchg
lods
scas
loope
je
push
dec
jae
sti
imul
mov
sbb
sbb
pop
out
test
enter
xchg
cmp
iret
mov
sbb
gs
cmp
out
cmp
inc
xlat
dec
hlt
aaa
mov
jle
jns
int
xor
fbld
out
add
mov
popa
inc
shl
es
jb
xor
push
dec
adc
xchg
xor
cld
sub
ffreep
nop
stos
mov
push
push
test
dec
shrl
div
jp
and
mov
mov
lds
jns
mov
mov
das
test
jbe
sti
jo
lcall
adc
cltd
fmull
movsb
mov
sub
pop
xor
stc
push
cltd
lahf
jb
mov
lret
inc
jns
test
imul
jmp
lahf
add
test
inc
cltd
or
hlt
int
imul
cmpsb
mov
push
push
std
lds
iret
xchg
cmp
jge
xchg
push
testl
in
push
in
out
insb
repnz
xor
lds
pop
cmp
add
test
jnp
xchg
dec
cmpsb
dec
lock
or
movsl
add
call
shlb
fistl
push
push
push
pop
arpl
lods
pop
mov
jnp
notb
xor
mov
mov
xchg
loopne
push
jle
lods
cld
sbb
inc
adc
xchg
icebp
das
add
mov
adc
in
dec
dec
cmp
test
icebp
cmp
dec
jns
add
xlat
or
lret
movsl
push
pop
pop
arpl
dec
mov
fisubs
and
push
iret
jle
and
ret
inc
sbb
icebp
push
aam
rclb
sub
scas
jo
fidivl
adc
sub
lea
lret
out
fists
cmp
int
jecxz
enter
arpl
into
in
cmp
mov
loop
jmp
loope
xor
das
xlat
jp
inc
dec
imul
add
xor
cmpl
adc
xchg
pop
pop
fimuls
sub
inc
adc
cmp
cld
fildll
jmp
add
sub
sti
repz
xchg
sub
xor
push
lret
dec
lahf
add
fwait
lods
mov
cmc
int3
vmread
shlb
fidivrl
out
mov
mov
fadds
push
pop
push
into
mov
sbb
xor
and
movl
sub
mov
pop
mov
inc
repz
std
shl
testl
loop
jge
lcall
xor
jle
cltd
lods
push
rorb
inc
loop
mov
adc
mov
cmp
xor
out
pop
xchg
cmp
jmp
pop
fcompl
jno
mov
icebp
xchg
mov
add
xchg
jb
mov
arpl
cmpsl
jne
pop
shlb
inc
clc
mov
xchg
pop
xchg
xchg
xor
sub
push
iret
imul
mov
pop
pop
mov
mov
xchg
jae
pop
cmp
mov
jecxz
push
xchg
add
daa
fwait
mov
and
pusha
jle
push
push
jno
xchg
dec
cmp
pop
jmp
jns
pop
add
add
popf
cmc
lea
and
lock
pop
out
rorb
mov
lahf
sub
xchg
cmp
sub
les
add
out
mov
bound
mov
add
shrb
push
jns
dec
cmp
push
lods
enter
xor
push
push
jns
dec
mov
call
ret
es
and
sub
pop
xor
rcll
mov
sub
mov
cmp
leave
mov
cmpsb
rcrb
pop
cmpl
inc
jmp
push
cmpsl
jg
add
inc
insb
mov
fdivr
mov
iret
aam
sti
or
and
mov
dec
repnz
mov
mov
call
fldl
sbb
icebp
sub
shr
out
add
ret
imul
push
push
imull
ss
test
out
fninit
or
add
pop
leave
adc
push
sub
mov
and
or
adc
aam
adc
inc
xor
sbb
cmp
dec
scas
cmpsl
mov
add
fs
test
outsl
xor
cli
or
cmpsl
cmp
ficompl
mov
call
popf
push
mov
sbb
lods
mov
dec
fildl
pop
outsl
movsl
loop
mov
ficomps
add
rcr
xor
sbb
popa
inc
jge
or
cwtl
xchg
in
xchg
xchg
add
loope
fwait
movsl
push
fdivrl
cmp
bound
stos
xor
pop
and
mov
inc
mov
scas
aaa
push
icebp
clc
pusha
xor
pop
and
je
jecxz
subl
sbb
ret
inc
lods
cmp
pushf
popf
mov
call
test
sbb
pop
xchg
xor
xor
push
pop
mov
imul
xor
rcl
iret
mov
icebp
popf
loopne
and
incl
stos
xor
cmp
mov
mov
push
pop
fsubrs
and
gs
rorl
ret
cmpl
lods
clc
sub
lret
pop
out
cmp
dec
into
xor
leave
cmp
nop
inc
sbb
fwait
loopne
shll
int3
push
inc
or
sti
das
fldpi
mov
out
mov
mov
cmp
mov
dec
pushf
aam
pop
mov
lret
dec
sbb
xchg
xchg
in
addr16
iret
push
xchg
shlb
lret
sti
stos
fistpl
push
xchg
jecxz
pop
inc
jge
std
cmp
fistpll
call
out
push
xor
rorl
cmc
mov
test
jnp
adc
xchg
push
lock
add
fistl
or
lods
mov
aaa
push
xchg
aad
idiv
fists
out
and
es
push
sbb
sub
push
iret
push
ljmp
adc
pop
dec
and
mov
rcr
xor
and
pop
subl
sub
cmp
aas
mov
sbb
addr16
ss
shlb
insb
mov
add
pop
push
lret
sbb
lret
jns
lock
insb
dec
xchg
sbb
pop
mov
sbb
xchg
push
add
test
mov
adc
dec
jns
xor
add
mov
loope
fdivrl
push
call
adc
test
daa
jo
inc
dec
mov
push
ljmp
xchg
ret
bound
movl
pusha
imul
sbb
or
xor
lea
pop
leave
cmp
sbb
and
add
mov
cmp
add
scas
iret
pop
jae
mov
jl
test
or
gs
cmc
es
arpl
call
test
push
inc
inc
mov
and
scas
push
inc
enter
out
std
cwtl
mov
lods
lret
sahf
add
push
mov
jp
or
roll
push
fimuls
or
jp
rorb
lock
dec
and
cmp
notl
sbbl
jae
xchg
dec
xchg
cmp
lock
add
inc
and
add
jno
push
and
lods
push
dec
inc
hlt
jno
mov
jno
sub
imul
adc
pop
daa
test
loope
loop
ficomps
movsl
add
push
cmp
mov
rcl
cmp
js
push
mov
xor
call
hlt
in
clc
lret
xchg
lods
jmp
jp
jg
mov
in
nop
push
gs
xchg
and
mov
les
mov
pop
add
pop
mov
xchg
mov
jp
or
rclb
insl
adc
and
mov
adc
dec
test
jno
mov
lods
or
jno
test
fdecstp
jne
push
push
adc
inc
xchg
cmp
or
leave
sub
mov
xor
cmp
mov
call
call
and
or
jae
jmp
mov
or
pop
nop
aas
push
test
fndisi(8087
mov
xchg
push
in
call
add
jecxz
pop
dec
mov
ret
jge
in
dec
cmp
push
mov
popa
vsqrtpd
ret
xor
pop
mov
sbb
add
xor
inc
adc
inc
cmp
out
cmp
jne
jp
cmpsb
xchg
adc
pop
mov
cmpsl
mov
subl
int3
dec
ss
xchg
pusha
clc
mov
insl
push
enter
cwtl
push
hlt
aad
addr16
outsl
stos
and
fistps
pop
lods
mov
lock
sub
clc
fstl
inc
sbbl
pop
xchg
sbb
fstl
pop
add
int
cmc
in
sbb
push
arpl
mov
mov
daa
mov
fadds
addb
test
and
adc
pop
adc
jae
lcall
push
jb
push
pop
fwait
insl
mov
jb
cmpsl
and
outsb
cmp
leave
scas
js
pusha
sbb
adc
aad
addr16
std
inc
cmp
adc
imul
add
xchg
push
mov
lahf
je
stos
and
xchg
test
outsl
enter
outsl
and
lret
lock
sbb
test
cmp
lods
jl
inc
inc
jns
cmpsb
push
jne
push
fists
pop
aad
sahf
addl
mov
mov
fs
fistpll
sub
mov
ljmp
or
jno
data16
lcall
dec
call
lahf
mov
sub
sub
or
mov
cmp
lret
sahf
in
cld
xchg
pop
hlt
push
fbstp
xchg
or
test
into
sbb
aam
nop
xchg
dec
shll
lea
mov
ja
not
std
xchg
ret
daa
jl
insl
lcall
inc
int
aas
push
popf
int
sub
popf
xchg
cmp
imul
orps
rclb
or
imul
jns
out
jae
pop
sbb
outsb
cld
mov
loopne
data16
mov
add
aad
int
outsl
push
int
stos
arpl
dec
jl
jb
js
loop
xchg
push
sub
dec
rorl
mov
dec
movl
sub
test
sahf
sub
mov
imul
cmp
mov
pop
data16
dec
aam
shl
jp
mov
aam
and
notl
out
or
jmp
dec
ficoms
cmp
push
xchg
inc
xchg
xor
cs
ret
std
ud0
insl
mov
push
out
outsb
in
and
movsb
cltd
jbe
mov
pop
js
mov
lret
repnz
mov
inc
cwtl
xchg
ljmp
push
out
push
aam
test
pusha
adc
jae
outsl
lahf
out
push
mov
lods
mov
dec
sbb
sbb
xor
xorb
imul
lea
inc
lret
mov
or
push
aas
insb
push
insb
mov
push
fdivrs
addl
mov
xchg
mov
inc
cwtl
jp
jnp
aaa
aaa
andb
mov
sub
pushf
dec
out
outsb
jns
adc
jge
sti
les
and
jge
adc
mov
jbe
adc
fwait
test
jecxz
sbb
insb
call
idivb
adc
inc
push
mov
aad
xchg
mov
addr16
cli
mov
fisttpl
pop
mov
imul
and
test
add
push
pop
jp
sbb
fisttpll
lahf
push
mov
ljmp
shlb
std
aad
push
adc
clc
loope
dec
mov
pop
imul
sbb
insl
sub
jnp
mov
lock
dec
adc
mov
lret
inc
scas
repnz
xchg
push
into
insl
push
scas
scas
roll
and
pop
xchg
adc
mov
pushf
cmp
pop
cmp
ja
jg
mov
mov
jle
outsl
xchg
stc
push
rcr
dec
insl
fdivl
xchg
popf
xchg
jmp
hlt
adc
jl
pop
inc
lods
lret
xchg
inc
clc
dec
push
or
fisttpll
stos
adc
iret
or
popf
mov
add
test
scas
scas
das
pop
and
jmp
xchg
dec
test
enter
cmp
xchg
cmpsl
dec
cmp
mov
shlb
call
daa
leave
inc
divb
dec
pop
js
test
dec
push
pop
jl
dec
sub
fsubrl
or
jb
movsb
mov
pusha
fildll
loope
inc
push
push
and
add
lahf
dec
jl
pop
lcall
out
jne
rcrl
sbb
jmp
aad
js
adc
cwtl
outsb
dec
ret
mov
jl
push
pop
cmpsl
lcall
push
xchg
inc
popl
mull
cmc
xorl
sbb
mov
add
inc
cmp
lcall
xor
adc
ds
pop
popa
test
sbb
sub
mov
stc
inc
push
mov
icebp
or
in
dec
rclb
sbb
fidivrl
push
or
jno
rcrb
mov
shll
out
or
sbb
xchg
repz
movsb
mov
shr
fwait
int
sub
cmp
mov
outsb
pop
lock
mov
jp
aad
pushf
pop
shlb
pop
pop
mov
and
mov
pop
sub
and
aad
ficompl
mov
sti
xchg
inc
sbb
xchg
imulb
xor
cli
pushf
dec
cltd
movsb
mov
or
rcll
loopne
sub
sbb
and
mov
sbb
and
test
push
push
shrb
sub
sahf
xchg
xchg
push
lods
stos
mov
mov
aas
push
subl
rcrb
adc
sti
scas
inc
and
sbbl
add
inc
shlb
mov
iret
dec
addr16
movsl
xor
sub
push
gs
loope
ret
in
sbb
jbe
push
adc
call
pop
ljmp
cmpsb
xlat
inc
xchg
fisubs
pushf
jae
mov
mov
xchg
or
cmp
in
and
sbb
popa
daa
adc
dec
into
or
fldcw
pop
fwait
ret
jecxz
in
popa
in
xor
adc
and
sub
lahf
cmp
ja
fidivs
mov
xchg
sbb
and
xor
in
mov
pop
stos
loope
out
fidivl
xor
inc
pop
ret
pop
push
adc
and
mov
fildl
pop
jg
xchg
mov
sub
dec
mov
cld
test
out
inc
fiaddl
pop
cli
aad
mul
pop
mov
call
mov
add
sub
pop
hlt
lods
out
xor
inc
or
out
ret
jmp
outsb
or
add
test
xchg
or
pop
out
push
rcrb
ds
insb
addr16
stos
std
cmc
pushf
mov
mov
xor
shlb
sub
test
jnp
bswap
pop
jle
gs
bound
les
and
iret
push
adc
int
mov
testl
lahf
push
fstps
lds
mov
and
xor
decb
idiv
mov
pop
sub
fiaddl
dec
hlt
add
push
and
mov
lcall
mov
fiaddl
es
lahf
test
mov
xor
adc
test
into
jp
mov
jmp
popa
mov
das
fnstenv
inc
push
dec
stos
xchg
jmp
stc
push
shlb
jecxz
pop
pop
cmp
dec
push
clc
jnp
loope
in
cmp
xchg
in
jnp
pop
lret
cmp
aad
in
and
adc
clc
cmp
jne
lea
adcl
rorb
sub
pop
mov
mov
mov
adc
movsb
daa
aas
rorb
popa
jbe
mov
push
and
in
or
push
rep
fsubrl
js
cmpsl
pop
or
jb
jge
repnz
enter
adc
push
mov
imul
enter
vstmxcsr
lret
jg
mov
pop
cmp
mov
push
lea
cmp
cwtl
push
mov
xchg
mov
dec
dec
pop
enter
push
in
xchg
daa
sbb
aaa
adc
mov
add
push
or
das
adc
fsubr
push
xor
test
subl
mov
cmp
iret
aam
sbb
cwtl
jne
xor
xor
jnp
mov
add
pop
cmp
pop
arpl
mov
aad
inc
andl
ret
sub
imul
ja
and
xor
lahf
aad
jns
jmp
mov
cmp
dec
rorb
imul
mov
mov
xchg
rclb
mov
push
mov
ret
test
cmp
xchg
inc
mov
in
mulb
test
pop
xor
mov
sbb
mov
out
popa
xchg
repz
fndisi(8087
or
adc
pop
aam
loope
mov
jmp
sahf
sbb
ret
in
outsl
decl
sub
cmp
test
sbb
dec
push
jge
pop
mov
push
adc
in
repnz
mov
pop
dec
inc
cmpl
nop
mov
sub
push
cltd
jp
sbb
flds
cmp
xor
pop
mov
inc
inc
mov
shr
lret
cmp
lahf
fisubrs
adc
bound
inc
push
xchg
inc
and
add
fldl
push
div
imul
add
sbb
in
cmc
xor
inc
fists
ds
nop
add
sbb
je
andb
mov
jg
sbb
in
adc
jb
mov
pop
mov
push
push
xchg
push
pop
sbb
sar
lret
bound
mov
adc
jnp
ret
push
out
pushf
sub
shll
int3
xchg
stc
jg
or
ret
cmc
jg
int
stc
sbb
adc
dec
loopne
sbb
jns
loopne
sub
shl
inc
adc
rol
popa
aad
fiaddl
dec
jmp
jns
adc
sar
call
shlb
aad
dec
jne
inc
lahf
push
insl
sti
in
scas
dec
inc
test
andl
in
sub
in
insl
fsubrl
scas
or
test
cwtl
imul
imul
mov
mov
arpl
pop
xchg
shl
mov
pop
aas
jl
xchg
loop
jne
andb
lret
pop
dec
cltd
and
jae
test
pop
sbb
out
mov
push
adc
mov
jp
add
jo
rcll
and
sti
push
or
mov
dec
push
push
adc
push
pop
pop
jae
pop
mov
fs
mov
jmp
jl
cli
movsb
incb
xchg
ljmp
sub
and
mov
pushf
lods
dec
or
aad
mov
test
clc
lret
mov
nop
aas
dec
fisttps
in
mov
add
jecxz
aad
in
mov
push
sbb
pop
rcrl
mov
testb
pop
push
enter
sub
fs
and
mov
pop
out
testl
fldt
out
add
addr16
orb
in
pop
jne
outsl
sub
pop
mov
mov
pop
jl
mov
test
xor
xorb
jns
pop
out
and
add
je
cmp
js
test
xlat
test
fdivl
sub
lea
jbe
xor
scas
fdivrl
mov
xchg
cmpsl
dec
roll
fisubrs
aaa
movsb
jg
and
pop
or
or
dec
fisttpl
adc
outsb
and
inc
rorb
cmpsb
mov
push
inc
push
cltd
xor
adc
scas
orl
xor
insb
cli
pop
pop
mov
aam
jne
test
dec
iret
sub
mov
jb
pop
jp
mov
mov
insb
daa
ds
adc
mov
inc
pusha
xor
jbe
ss
leave
mov
lret
pop
adc
outsl
mov
fidivl
mov
xchg
xchg
and
int3
xchg
push
pop
fs
dec
mov
xlat
rorb
je
and
push
mov
pop
adc
ss
mov
push
ds
call
mov
jl
pop
cmp
inc
out
outsb
inc
mov
jmp
xor
daa
inc
dec
pop
jp
cli
ret
pop
addr16
test
imul
imul
sbb
add
add
cli
inc
or
mov
call
rclb
jmp
and
jg
das
cwtl
dec
xchg
test
mov
lods
imul
scas
in
test
sbb
or
adc
or
mov
cltd
movsl
cmp
mov
fimull
sti
or
dec
sbb
mov
and
add
push
movd
add
int
jmp
es
add
sahf
scas
jmp
mov
incb
xor
mov
and
dec
cmp
sahf
xor
sarb
fmul
jns
pop
cmpsl
mov
jns
mov
jp
pop
loope
loope
cmpsb
out
xchg
push
mov
shrl
fidivl
xor
ror
or
mov
sub
hlt
call
sti
lds
pop
mov
or
enter
or
and
push
xor
sub
daa
faddp
jne
xor
leave
or
push
pusha
and
in
sub
int
and
es
bound
mov
mov
inc
pop
cmpsb
sub
adc
dec
stos
test
aaa
push
mov
rol
mov
add
mov
inc
push
mov
clc
add
imul
insl
push
sub
and
scas
mov
xchg
repz
xor
adc
mov
add
mov
mov
jecxz
scas
int
push
mov
jne
ss
pop
cmc
jecxz
push
mov
mov
jnp
scas
je
mov
or
xchg
mov
adc
add
and
push
das
es
jp
mov
jns
aas
push
add
cmc
adc
mov
xchg
dec
sbb
sub
in
xchg
mov
inc
adcl
push
hlt
arpl
loop
insb
mov
jl
push
mov
js
sbb
popa
jl
sahf
dec
cmc
out
sbb
or
jge
icebp
repz
mov
jl
ja
imul
je
inc
sarb
mov
aad
jmp
push
jno
out
add
stos
mov
out
ret
xchg
test
cmp
inc
jecxz
sub
cmp
mov
push
repnz
cmpsl
cmc
add
mov
mov
dec
and
xor
pushl
negb
andb
and
sbb
loop
enter
push
fcoml
in
inc
sub
inc
xor
sbb
jno
xor
roll
jl
jecxz
out
mov
xor
test
xchg
mov
sbb
jb
dec
popf
inc
ds
or
out
test
mov
sahf
loopne
mov
mov
js
ds
add
inc
lods
push
or
inc
cwtl
insb
push
xor
fldenv
cmpsl
call
cmp
push
ss
push
das
inc
mov
pop
jmp
jp
dec
pop
cmp
popf
idivl
pop
dec
movsb
sbb
mov
jecxz
addr16
pusha
push
call
jmp
shlb
sub
sub
cltd
imul
or
mov
mov
scas
sbb
jb
aad
xchg
inc
mov
adc
jl
lods
loopne
pop
addr16
mov
jmp
lret
sbb
or
sarb
sub
into
iret
shll
mov
jl
or
call
pop
test
test
pop
sub
popf
leave
test
ja
arpl
das
mov
and
dec
fildll
ss
xchg
aaa
xchg
inc
inc
jge
insl
sbb
mul
cli
not
mov
lds
mov
dec
inc
scas
mov
inc
lahf
ds
loop
not
jg
les
cmpsb
jbe
stos
xor
dec
and
push
scas
push
je
std
int3
mov
in
loop
and
test
xchg
cmpsb
xchg
jbe
repnz
cltd
cmc
cmc
cld
push
and
jl
push
insl
sbb
arpl
mov
inc
jecxz
pop
push
lock
fmulp
xchg
int
sbb
out
mov
jmp
pop
jb
lcall
mov
dec
inc
mov
add
inc
popf
xchg
xchg
xor
ja
dec
xlat
xchg
push
call
cmc
je
loopne
rolb
jno
cld
sbb
sub
andl
mov
stos
jns
popa
jns
dec
xchg
sub
sub
bound
push
inc
pop
mov
out
xlat
jle
mov
lret
mov
les
loopne
loop
lret
shll
loop
movl
out
xor
or
add
adc
popl
jns
dec
mov
and
cmp
aas
into
addr16
xchg
js
loopne
mov
adc
jecxz
sub
fidivs
test
or
sbb
ds
cli
mov
inc
xor
dec
notl
pop
adc
pop
mov
mov
push
push
rcl
mov
sub
aam
sbb
cmpsb
sub
jnp
aad
scas
ret
or
dec
mulb
vmwrite
insl
sti
repz
rcrb
pop
pop
out
mov
add
sub
add
jge
mov
xchg
and
mov
es
dec
cli
scas
jno
pop
mov
cmp
cmp
lea
xor
mov
cmp
pop
pop
push
mov
mov
xor
cld
or
int3
and
fistl
das
rclb
movsl
or
mov
sbb
cmp
gs
clc
test
mov
dec
out
jg
sbb
sahf
xor
adc
push
pop
sbbb
lret
pop
or
scas
mov
add
sub
insb
outsl
mov
dec
push
mov
add
scas
cmp
popf
fs
enter
mov
mov
mov
mov
stc
mov
and
or
and
mov
bound
popa
sti
mov
cmpsb
insl
ss
js
xchg
loopne
pop
push
or
jne
xor
jo
dec
fwait
cli
fsts
fs
ljmp
inc
pop
fnstcw
add
jo
add
unpcklps
jno
inc
pextrw
lahf
add
sahf
pop
cmpsl
shrb
cmc
js
sbb
ret
sahf
mov
push
loopne
inc
test
lret
stos
xor
out
mov
sbb
and
decl
sub
mov
pop
inc
inc
xchg
dec
jne
and
mov
shlb
sahf
sbb
push
xchg
pop
aam
mov
jo
nop
sub
xlat
stc
sahf
shlb
int3
insb
ljmp
dec
pop
push
test
into
push
fwait
sbb
and
fwait
sbb
popa
pop
rorb
mov
and
xor
and
ds
pop
cwtl
aam
and
pop
iret
jbe
rol
aaa
fs
add
roll
outsl
cli
push
mov
popf
fwait
ljmp
jne
jge
inc
loop
inc
xchg
xchg
and
test
rcll
or
mov
pop
mov
repz
rcr
into
fs
mov
popf
cmpsl
mov
push
cmp
fiadds
jne
cli
mov
dec
push
jg
rorb
jge
in
sub
icebp
lods
mov
mov
xchg
scas
or
ss
jg
cmp
shr
xor
mov
add
sub
add
fsubs
mov
pushf
pop
xor
roll
xor
cmp
data16
and
inc
sbb
daa
in
iret
xchg
fnstenv
loopne
rcll
xchg
sub
mov
insl
push
xchg
mov
mov
lea
popf
imul
push
xlat
xchg
ret
aaa
inc
inc
ret
jp
daa
sahf
fisttpl
lea
jnp
aad
test
push
pop
mov
xor
adc
ficoml
outsb
idiv
mov
popf
pop
push
leave
xchg
aad
mov
sub
jmp
push
mov
pop
sub
jo
sti
mov
je
or
scas
xor
lahf
neg
xor
adc
cs
loopne
loop
mov
add
loopne
xchg
dec
mov
sub
fidivrl
fwait
pop
push
imul
rcrb
jno
aas
pop
push
stos
ds
jge
or
lcall
mov
cmp
lahf
pop
sbb
add
pop
loop
lea
pop
xor
test
push
push
pop
fsub
test
jmp
add
cwtl
nop
dec
pop
or
sub
jne
mov
frstor
aaa
arpl
cmp
mov
or
jb
sbb
loope
repnz
inc
mov
jmp
adc
movsl
cmpsl
gs
mov
pop
imul
pop
xchg
dec
dec
mov
in
push
xchg
cltd
xchg
in
sbb
and
and
xlat
roll
cmp
dec
lea
mov
ljmp
jo
adc
outsl
arpl
lret
or
lea
sbb
rcrl
mov
ds
adc
adc
sub
in
lret
insb
idivl
test
and
xor
ja
pop
js
shll
incl
mov
push
les
add
xchg
in
fldl
xor
negl
jge
aaa
lock
cmp
dec
inc
iret
or
push
push
and
mov
test
xor
or
aaa
popf
divb
dec
push
jno
push
insb
push
arpl
and
pop
mov
mov
and
es
jbe
fisttps
adc
cli
add
lds
xchg
das
in
fldt
nopl
arpl
cmp
testb
jle
or
jnp
js
out
mov
or
jge
movsl
pop
mov
push
lahf
sbb
ret
inc
and
in
idivb
adc
pop
cli
int
incb
in
push
insb
jecxz
cmp
mov
jae
imul
push
cs
or
adc
push
hlt
fsubs
movntq
test
push
cwtl
hlt
sbb
mov
xchg
inc
fiaddl
orl
pop
out
cmp
sub
daa
inc
pop
out
xor
sub
jg
in
pushf
xchg
call
movl
arpl
rcr
dec
js
push
mov
lcall
pop
mov
mov
ror
dec
arpl
add
loop
pop
lret
push
fs
sub
push
icebp
and
xor
loope
add
dec
outsb
pop
mov
in
enter
dec
push
mov
sbb
or
cmc
in
sbb
rorb
dec
xchg
icebp
push
jno
and
fsubp
add
xor
out
sub
enter
rcrb
pop
orl
rcr
test
xor
repnz
xor
aam
add
sub
popa
insb
dec
iret
movsl
ljmp
outsb
jp
jl
cs
insb
mov
loope
in
in
inc
jo
xchg
mov
cmp
pop
push
mov
or
lock
enter
pop
fyl2xp1
add
fcmovne
sub
sahf
sarl
sbb
lock
cmp
aad
mov
fldenv
xchg
push
sub
out
andb
subb
push
lock
sbb
cmpsl
push
icebp
mov
adc
shr
add
fnstsw
adc
adc
jmp
mov
add
hlt
sub
mov
pop
repz
adc
or
mov
add
insl
cs
xchg
insb
notb
fldt
sbb
jne
add
cmp
cltd
and
lods
incb
int
cmp
sarb
mov
mov
dec
popf
fstpl
ja
push
into
lods
mov
lcall
or
daa
xchg
xor
and
notrack
lahf
lods
pushf
fstpl
clc
mov
cmp
arpl
icebp
mov
fnstenv
sarl
movsl
in
int3
cmp
arpl
test
xlat
popa
aam
jle
cmpb
push
jne
fst
out
js
cmpsb
push
inc
bound
pop
ret
pop
cwtl
jl
insb
popa
or
sti
jge
bound
hlt
imul
dec
scas
imul
js
and
imul
int3
xor
mov
imul
jb
fsubrs
cltd
or
addr16
fwait
rcrb
add
shlb
push
lea
or
insb
arpl
jae
xlat
inc
in
sbb
ret
inc
and
xor
adc
pop
roll
xor
jecxz
xor
or
mov
xor
mov
imul
in
test
xchg
lds
pop
sti
adc
cltd
mov
inc
je
and
xor
call
xor
loopne
nop
pusha
ds
push
mov
mov
or
ss
outsl
adc
ss
lret
adc
lods
jge
sbb
fstpt
movsl
sub
in
gs
jns
cmpsb
mov
lods
subl
daa
jno
or
imul
pop
and
rcrl
pop
fs
imul
dec
add
or
mov
insb
iret
sub
outsb
jae
les
fimuls
cwtl
outsl
mov
pop
fadd
dec
lret
push
rorl
loopne
daa
mov
jge
mov
xor
js
mov
mov
cmp
sub
push
xor
xor
jae
jle
dec
bound
sti
xchg
loop
rclb
push
sahf
je
lea
mov
sub
aaa
out
pop
out
shrl
cmp
pop
test
lods
or
js
or
lods
add
inc
push
sub
mov
jnp
pop
lods
sti
xor
jge
adc
xchg
int
mulb
rcrb
push
mov
push
inc
jns
xor
out
jbe
loopne
lahf
fcmovne
cs
ja
xlat
aam
repz
push
sbb
fdivrs
fdivrl
xlat
scas
iret
pushf
add
push
repz
mov
test
lahf
xor
aaa
dec
mov
in
ljmp
add
fcmove
cmp
xor
test
not
xchg
test
jnp
inc
je
mov
mov
fst
xor
jns
enter
inc
sarb
lods
in
fldcw
nop
out
popf
pusha
pop
add
in
xchg
sub
lea
stos
into
push
mov
add
aad
es
pop
sub
popf
xchg
or
test
push
repnz
adc
fs
fisttps
xchg
cmpsl
fimull
xor
push
mov
add
gs
fcomi
adc
mov
cltd
in
inc
sub
cmpsb
mov
jno
in
mov
lods
iret
mov
pop
adcb
and
add
enter
test
mov
aad
js
jle
ljmp
test
dec
inc
mov
int
addl
loopne
js
lret
movsl
jae
mov
dec
jl
jg
sub
pop
movsl
xor
jl
push
mov
adc
adc
mov
xchg
adc
cmp
sarb
jg
push
xor
cmp
sub
cwtl
aam
jp
fistpl
mov
push
pop
mov
dec
int
cld
mov
pop
stos
into
xor
fbstp
sub
xchg
xchg
je
aaa
inc
repz
sahf
push
je
xchg
dec
aas
in
xchg
and
jmp
jns
and
sbb
adc
mov
pop
sahf
pop
mov
loop
xchg
mov
jne
and
popa
and
xchg
lret
push
jbe
jp
push
mov
andl
sbb
mov
cmpsl
adc
sbb
sbb
sahf
or
out
xchg
xor
out
les
dec
stos
inc
sub
adc
jne
test
push
aas
repz
mov
jb
repz
sbb
call
lret
nop
mov
movsl
mov
xor
cmp
jp
mov
aad
mov
subb
pop
je
add
lods
push
push
call
js
int
gs
dec
or
fadds
mov
mov
js
jmp
std
or
pop
xchg
dec
mov
mov
ljmp
push
pop
inc
jae
fsubrl
lods
cmp
stc
pop
push
add
mov
imul
mov
xor
ljmp
js
xor
or
scas
mov
aaa
out
iret
iret
ret
push
mov
mov
dec
lds
cmp
mov
jmp
imul
jmp
sbb
scas
aaa
xchg
in
das
xlat
sbb
mov
out
insb
jmp
pop
vmptrst
mov
cmpsl
orl
mov
pop
aas
jmp
push
push
cmpsb
enter
inc
call
mov
sbb
xor
icebp
inc
and
jo
orps
sub
push
dec
pop
push
stc
icebp
test
inc
iret
xor
call
pop
int3
in
push
add
imul
jg
fwait
aam
jge
and
movsl
mov
bound
sbb
pushf
dec
xchg
xchg
into
cmc
imul
push
ja
push
mov
imul
and
push
scas
cmp
repnz
hlt
jbe
cmp
ror
mov
in
popf
outsb
xchg
push
shlb
fildl
enter
fidivs
pusha
loop
cmc
lock
lcall
jl
test
mov
shll
mov
cmp
lds
xchg
fucomip
gs
stos
scas
sbb
lahf
xor
int
lock
in
sub
test
jae
adc
rcr
jbe
pop
and
mov
lahf
add
mov
cmpsl
or
sti
insl
push
push
push
pop
stos
aas
inc
lea
and
mov
lret
lock
daa
pop
out
jecxz
ret
daa
sub
push
dec
jge
test
data16
mov
les
jmp
call
add
repz
loopne
mov
gs
insb
mov
pop
xchg
mov
inc
mov
insb
jmp
inc
int
out
bnd
lret
cltd
test
popa
pop
inc
jle
sbb
stos
dec
sbb
arpl
repnz
loop
inc
sarl
mov
fdivr
lret
mov
stos
cmp
pop
icebp
push
out
sub
insb
insb
fidivrl
cs
inc
and
leave
cs
xchg
mov
adc
push
in
and
mov
mov
mov
inc
xchg
ss
mov
sub
aam
flds
xchg
es
inc
sahf
ljmp
add
cld
movsb
negb
stos
adc
out
shlb
mov
mov
sub
pop
add
xchg
dec
jno
fidivrl
pop
or
add
sub
add
ds
popf
add
repnz
pop
fcmovu
arpl
cmp
lgs
push
sub
test
jle
std
mov
repnz
lods
jno
stos
shll
jle
popf
ss
mov
pop
loop
jne
test
in
stc
mov
inc
cs
add
xor
push
scas
mov
jp
xchg
loope
sbb
add
sub
inc
aam
jg
and
dec
jo
jg
inc
btsl
xor
rorl
dec
mov
ret
aas
add
int3
pop
cmp
ds
mov
js
insb
mov
adc
jnp
inc
mov
cmp
and
mov
xor
out
or
inc
fdivr
sub
daa
lods
outsl
xchg
push
popa
mov
dec
mov
dec
sbb
push
fldenv
loopne
jge
repz
pop
mov
or
outsb
mov
push
sbb
fldl
adc
add
in
mov
bound
repz
pop
mov
or
lcall
sbb
cmp
ret
sub
mov
stos
rorl
andl
dec
iret
xchg
push
sar
mov
xchg
aad
addr16
fcoml
andb
out
mov
aam
mov
inc
cmp
fstps
les
lods
adc
push
sub
into
and
sub
add
or
lods
pop
outsl
popa
inc
mov
ret
mov
push
arpl
icebp
push
out
rclb
sbb
sub
out
lods
insl
mov
add
popa
fadds
ret
lret
imul
call
cli
push
aad
fwait
les
dec
xchg
aaa
and
push
mov
and
lea
and
js
es
inc
inc
pop
rcrb
jne
lds
push
xor
lods
in
mov
cwtl
mov
jbe
dec
aaa
mov
jo
mov
iret
js
mov
adc
and
pop
jecxz
or
cld
lret
sbbl
dec
out
loopne
pushf
sub
mov
push
push
shrl
mov
lea
jp
or
out
inc
cmc
mov
cmp
stc
xchg
rclb
ret
popa
imul
stc
push
push
fmuls
push
insb
insl
sbb
pop
rcll
cmp
sub
adc
les
mov
jmp
clc
fs
cltd
add
mov
xor
lret
lcall
das
hlt
adc
sub
adc
adc
mov
ds
mov
push
fisttpll
jecxz
mov
jne
xor
fcmovnu
cmp
dec
mov
cmp
pop
mov
mov
xchg
rclb
xchg
stc
xchg
sub
or
xor
or
fs
push
mov
sub
mov
fstpt
pushaw
push
mov
lcall
cmp
mov
xor
sub
dec
mov
mov
test
or
ss
sbb
mov
imul
pop
test
in
pop
push
xchg
out
pop
dec
lds
decl
nop
hlt
mov
shlb
ds
push
in
sub
and
add
aam
hlt
js
push
loope
inc
mov
call
jle
cli
rorl
imul
imul
dec
es
cmp
xchg
enter
mov
insb
call
mov
fdivs
popf
cwtl
add
or
insb
inc
dec
mov
and
cmc
std
cwtl
hlt
xchg
pop
xor
push
je
out
iret
faddl
arpl
enter
outsl
cld
inc
sub
push
pop
icebp
pop
mov
or
jnp
in
inc
loop
jo
js
lret
mov
addr16
dec
lcall
testb
sti
dec
in
jmp
push
sbb
cs
ss
stos
mov
sub
hlt
xchg
xchg
dec
cs
xor
sbb
imul
jbe
test
and
mov
mov
pop
popa
inc
xor
aad
hlt
mov
aad
jns
mov
fiadds
push
in
add
ss
push
mov
push
cmp
addr16
adc
pusha
nop
jmp
push
and
jg
jmp
loop
lahf
ss
fimull
push
push
cli
pop
sbb
mov
ss
lods
cmp
sub
sarl
push
sbb
mov
mov
pop
xor
pop
push
xchg
popa
hlt
cwtl
jmp
sbb
in
inc
jo
mov
aam
mov
fdivr
xchg
mov
test
xor
xchg
mov
fistl
pop
loope
pop
insb
add
inc
adc
repnz
and
jle
lahf
outsl
ret
outsb
sahf
js
in
add
inc
int
lods
test
addr16
sahf
aaa
jo
adc
xchg
dec
cmp
fwait
dec
jbe
mov
pop
xor
in
movsb
inc
sbb
dec
in
mov
push
push
sbb
xchg
fdivr
xor
enter
cmpsb
popf
mov
outsl
clc
mov
popf
dec
mov
stc
rorb
lea
gs
cld
lods
pop
stos
imul
and
movsl
mov
or
out
sahf
aas
out
sub
fnsave
pop
sti
adc
nop
imul
fnstsw
inc
movsl
inc
mov
das
rorb
out
add
or
pop
inc
je
addr16
xchg
inc
hlt
pop
and
fisttpl
out
aad
mov
xor
ljmp
sub
insb
loope
xor
mov
add
cmpsb
nop
mov
jnp
into
pop
and
xchg
inc
loopne
jb
add
sbb
into
test
or
dec
xchg
clc
mov
mov
imul
push
push
sub
clc
xor
adc
dec
shlb
push
xchg
mov
or
cmp
movsb
arpl
arpl
sahf
out
fsubr
stc
add
lock
stos
xchg
mov
mov
popf
outsb
fildl
add
arpl
ja
icebp
mov
lahf
inc
jle
repz
fcoms
fbstp
dec
cmp
andl
mov
xor
xchg
cmp
xchg
pop
xor
adc
stos
daa
shrb
pop
ds
dec
lods
and
out
bound
mov
sub
inc
aaa
sub
cli
sbb
shlb
mov
xorb
mov
nop
push
inc
fucomi
in
push
push
je
bound
mov
push
loop
or
mov
stos
shlb
pushf
or
fsubp
jp
mov
pushf
cld
push
inc
leave
sub
out
mov
adc
sbb
pop
add
iret
test
push
pop
push
decl
inc
adc
arpl
int3
xchg
add
cmpsb
cbtw
sbb
pushf
rdmsr
adc
out
fmuls
test
bound
aas
bound
lret
loopne
roll
xchg
dec
test
xchg
inc
xchg
fnstcw
cmp
into
fistpll
out
test
mov
dec
xchg
mov
ljmp
pop
lret
lock
stc
aas
in
inc
lret
cmpb
xor
hlt
mov
inc
and
pop
addr16
cld
call
pop
jne
lods
pop
aad
xchg
jle
mov
dec
push
cmpsl
dec
ljmp
push
push
push
jge
int
addr16
fidivl
aam
dec
jecxz
dec
jg
ja
jnp
mov
out
pop
mov
xchg
subl
adcb
out
push
dec
push
fwait
jp
xchg
movsb
fdivl
or
jbe
sbb
gs
push
cmp
iret
cmpsl
scas
dec
out
cltd
repnz
push
cld
xchg
pop
aaa
add
push
and
cld
ret
sarl
mov
and
scas
in
adc
add
ja
scas
jecxz
stc
test
aaa
push
push
cmp
sbb
bound
outsb
adc
popa
add
add
pusha
and
cmpsl
push
clc
loope
mov
aas
cmp
mov
adcl
nop
dec
mov
cmpb
sub
dec
notl
es
int
ja
add
jecxz
or
je
xor
int3
filds
cmp
sahf
sub
and
fcompl
pop
xlat
movsl
push
add
xor
sbb
inc
lock
int3
mov
mov
jg
xchg
sbb
movsb
outsl
cmp
daa
in
lods
lahf
cwtl
add
bound
pop
out
fisubrl
lret
cmp
cmpsb
popa
dec
inc
sub
lods
push
dec
adc
js
xchg
stos
inc
inc
inc
shrl
rcrl
dec
sbb
jge
popf
sub
lret
sub
dec
pop
scas
push
mov
jl
xchg
mov
mov
cmp
mov
nop
xchg
inc
add
fidivrs
pop
outsl
xchg
je
sar
loopne
hlt
mov
aad
jle
pop
xchg
sarl
or
inc
xchg
pop
dec
in
jne
incl
idivl
sbb
and
xchg
popf
xor
fstps
push
es
mov
rcrl
jp
xchg
cmpsl
cwtl
dec
jg
insb
and
pop
sbb
in
outsb
push
fsub
fs
imul
xor
mov
mov
dec
xchg
scas
dec
sub
into
in
or
in
jo
sbb
push
daa
add
movsl
cmc
loop
scas
lods
add
xchg
dec
jae
fcomps
cmp
stos
push
rcr
mov
cmpsb
jg
inc
sub
xchg
adc
add
xor
fsts
xor
jle
int
les
sbb
xchg
pop
pop
mov
push
cmp
in
push
iret
pop
inc
adc
and
adcl
pushf
xor
test
lock
pop
stc
stos
mov
dec
lahf
in
popf
aam
or
arpl
push
ja
mov
js
sti
stc
mov
sub
xor
adc
icebp
add
icebp
lret
adc
or
adcl
es
insl
ror
lods
mov
cmp
cmpsb
in
mov
push
movsb
add
mov
and
mov
sub
pushf
arpl
lcall
shrl
dec
xchg
xor
and
outsb
sbbb
jp
mov
lods
push
jge
or
loopne
mov
mov
dec
and
mov
inc
xchg
and
dec
push
pop
std
andl
lock
into
xor
sqrtps
xor
xchg
sbb
xor
mov
cmp
mov
pop
and
push
jp
imull
adc
sbb
mov
test
test
push
insb
dec
push
leave
aam
and
dec
cmp
gs
or
pop
sbb
pop
rol
sbb
lret
sub
xchg
test
adc
cltd
mov
scas
xor
jl
xchg
lock
test
cmpsl
dec
fldl
es
aam
or
lock
std
cmpsl
sbb
inc
stc
lds
mov
cmp
jo
addb
pop
cs
mov
mov
in
push
mov
and
push
shlb
cmpsb
dec
mov
bound
mov
into
lods
pop
pop
divl
test
and
arpl
dec
das
ljmp
popf
add
xchg
dec
pusha
aas
xor
adc
pop
insb
push
xor
frstor
je
pop
xchg
addr16
xchg
xchg
mov
pop
push
fisubs
outsl
or
mov
aaa
arpl
decb
int
push
cmp
mov
lret
xchg
xor
sbb
int
js
imul
xor
outsl
loope
cltd
or
ds
jnp
and
fistl
aas
add
xchg
jmp
test
sbb
xchg
out
sbb
xor
je
sbb
ja
sbb
xchg
ret
imul
sahf
imul
dec
js
loope
pop
dec
les
jo
or
in
xor
cmpsb
mov
jle
in
pushl
test
into
idivl
ja
stos
aaa
lcall
adc
xchg
ret
pop
sbb
cs
adc
mov
in
out
in
or
enter
or
mov
and
popa
pusha
jecxz
mov
xchg
test
dec
int3
lock
push
jmp
movsl
sub
jp
adc
shrb
in
push
stos
lock
notb
mov
fists
pop
sarl
flds
insl
add
push
incl
inc
lock
xor
fprem1
stos
imul
sub
sarb
add
pop
add
adc
lods
ror
aas
xadd
jns
bound
adc
pop
xchg
mov
fdivl
sbb
push
sbb
faddl
ret
cmp
fsubrl
mov
sbb
shr
cmp
jmp
insb
cmpsb
pop
mov
jmp
mov
dec
adc
jb
mov
xchg
push
sub
push
outsl
incl
fwait
mov
pop
jg
push
push
jae
inc
decb
inc
js
packssdw
xchg
inc
mov
mov
mov
in
lea
mov
inc
out
lret
push
jo
xor
inc
gs
pushf
adc
push
jmp
cwtl
pop
push
rcrl
mov
fstl
mov
inc
adc
inc
mov
pop
push
loopne
xchg
xchg
xor
jg
mov
call
repz
aaa
mov
clc
inc
mov
mov
jns
pop
repnz
test
cwtl
jmp
mov
add
adc
ja
mov
jbe
call
mov
pop
and
xor
jmp
mov
popa
testb
mov
dec
inc
orb
cs
jae
cli
xchg
push
mov
add
roll
sub
ret
ret
daa
mov
cwtl
into
dec
jbe
test
or
fs
adc
push
mov
mov
ret
arpl
jno
divl
mov
ret
jne
fsubl
outsb
scas
sub
jb
xchg
xchg
add
add
or
mov
mov
stos
xor
adc
jne
gs
push
push
inc
divb
mov
hlt
sub
push
sub
fidivrl
mov
mov
sbb
out
or
dec
xchg
lods
outsl
test
lods
cltd
adc
mov
pusha
jnp
test
shl
inc
outsl
push
mov
mov
es
cmp
and
sbbb
pusha
pop
js
xor
push
pop
mov
popa
out
pushf
cltd
or
lret
pusha
pop
fists
add
pop
stos
out
fnsave
and
dec
popa
xchg
xlat
xchg
cs
insb
cmc
and
mov
ret
push
push
cmc
push
add
xor
xor
mov
jne
test
outsb
enter
pop
aam
or
enter
pop
cli
rol
add
int
cmp
leave
xchg
rolb
pop
push
arpl
jno
jo
mov
outsb
in
lea
add
push
adc
push
mov
jecxz
inc
popa
in
jnp
inc
add
lods
inc
lea
fiaddl
and
push
jnp
mov
adc
jp
add
xchg
mov
jns
scas
xor
icebp
xor
int
aaa
hlt
orl
sbb
in
xchg
xchg
leave
sbb
inc
daa
and
sbb
xor
lods
push
and
outsl
fcompl
mov
and
icebp
dec
push
testb
inc
jnp
aas
dec
jl
pop
xchg
dec
inc
jae
mov
aad
sbb
sub
adc
sbb
adc
movaps
loopne
mov
sub
js
inc
jecxz
out
fistpll
pop
sub
and
insl
enter
adc
cmpsb
shl
subb
inc
outsl
test
inc
outsb
inc
fisubl
mov
das
xor
aaa
mov
mov
test
add
negb
inc
xchg
nop
and
mov
jecxz
mov
pop
rolb
cmp
shlb
mov
sub
aaa
rcl
loopne
pop
pop
or
cmp
pop
js
inc
inc
jmp
stc
test
aaa
outsb
push
dec
mov
inc
divl
sbb
idiv
ja
mov
adc
test
insb
mov
movsb
sarb
pusha
repnz
pop
xor
jmp
mov
aad
jns
outsb
push
mov
lods
xor
int3
add
imul
mov
xchg
fsubrl
push
popa
daa
cmpsb
or
mov
dec
push
mov
fs
mov
push
jbe
test
add
cld
in
fidivrs
dec
pop
xor
out
push
jecxz
mov
cwtl
inc
int
mov
test
test
pop
ja
scas
sbb
xor
es
popf
jle
push
pusha
xchg
adc
je
js
lods
pop
imul
outsl
ds
inc
dec
cltd
aaa
inc
xor
shlb
lods
xor
sarl
arpl
pusha
in
idivl
outsb
jb
mov
push
add
outsb
imul
in
ljmp
adc
push
add
sahf
imul
test
push
xor
mov
sub
gs
jp
mov
xchg
jns
jno
aad
andb
or
jecxz
popa
cli
xor
data16
mov
jg
adc
call
push
jns
dec
dec
mov
lahf
out
push
and
int
shll
push
and
mov
dec
pusha
mov
pop
push
push
mov
ret
js
mov
fcompl
fimull
xlat
rorl
insl
stc
pop
jnp
mov
rcr
les
mov
adc
push
sub
jnp
or
dec
mov
fwait
sbb
xor
hlt
xchg
sub
jnp
fldenv
mov
lret
addr16
cld
loop
adc
push
mov
int3
xchg
xlat
clc
jbe
in
pushf
out
mov
iret
popf
jp
pop
popa
add
xor
das
pop
adc
add
sti
inc
fsubr
adc
add
sbb
cmpb
xchg
stc
sub
aad
sub
xchg
iret
mov
test
jne
jne
sub
lods
fdivs
rcrl
pushf
push
enter
inc
mov
mov
mov
cmp
shll
fistpl
popf
inc
push
xchg
pop
int
aaa
cmpsb
aaa
ljmp
pop
inc
insb
dec
cmpsl
jle
lock
cld
push
inc
pop
adc
iret
or
and
dec
test
daa
jae
sbb
idivb
stos
out
push
inc
inc
inc
jno
rcr
mov
pop
andb
mov
mov
xor
rcrb
jl
mov
ljmp
divl
outsl
mov
or
imul
add
sahf
mov
cmpsl
sub
into
fs
inc
cld
inc
sub
cmp
ds
fisttps
pop
gs
inc
mov
and
int
jae
push
aaa
subb
imul
scas
push
mov
sub
aas
shl
std
xchg
arpl
mov
inc
outsl
sbb
xor
iret
push
mov
popa
aad
sti
shrl
jns
loop
repz
cmp
adc
ljmp
and
xchg
fsubrs
inc
mov
xor
add
mov
pop
push
imul
das
mov
mov
jg
in
std
mov
leave
fmuls
fbstp
leave
loopne
mov
add
pusha
je
and
inc
inc
adc
sub
sub
jl
sahf
ljmp
out
fistpll
lahf
inc
mov
jecxz
pushl
sbb
sbb
insb
xchg
popf
xor
lahf
imul
adc
iret
push
push
mov
shll
cwtl
and
pop
and
test
xor
ret
mov
sti
inc
int
decl
xchg
testl
aad
test
cmp
dec
hlt
adc
mov
dec
sub
add
inc
pop
aas
jb
jno
sub
nop
out
sbb
notb
scas
inc
adc
testb
fisubrs
popa
xchg
int3
jle
jle
add
add
mov
and
or
xchg
jno
xchg
add
sbb
dec
daa
add
mov
xchg
cmp
mov
pop
lcall
loop
fimull
pop
xchg
mov
stc
cli
popa
dec
jae
xlat
or
stos
fcmovbe
jnp
lea
iret
add
scas
xor
mov
shlb
dec
sbb
out
mov
enter
loop
mov
pop
adc
outsl
sbb
loope
aaa
sub
and
cwtl
jle
mov
mov
fcoml
sbb
mov
add
dec
imul
or
adc
dec
and
popa
jo
mov
int3
mov
mov
sub
jge
add
test
pop
push
shrb
xchg
dec
inc
pop
or
stos
or
fs
push
ss
arpl
push
daa
sarl
mov
lret
or
ljmp
mov
mov
fwait
add
push
in
jecxz
les
insb
push
iret
fisttpll
out
movsl
mov
jae
adc
lods
sarl
sahf
pop
mov
imulb
hlt
fldt
roll
test
leave
inc
icebp
mov
inc
add
push
cmp
lret
sarb
in
sbb
or
sahf
xchg
push
test
lods
dec
ss
adc
testb
jnp
sti
andb
mov
xchg
sub
lcall
mov
ljmp
or
lods
push
aad
loope
imul
mov
pushf
and
xchg
and
mov
rorb
sti
xchg
or
sub
cmpsl
dec
lret
lcall
inc
inc
xor
lret
enter
imul
and
int
adc
in
fmuls
aas
add
adc
adc
xchg
insl
ret
push
nop
adcl
arpl
lock
inc
inc
std
and
mov
dec
pop
cmp
sahf
lods
lcall
inc
dec
cmp
push
repz
inc
out
loope
jecxz
out
out
jecxz
repz
or
scas
je
sbbl
lret
inc
push
gs
sbb
jnp
cmp
cmp
sarb
pushf
push
jb
aad
shlb
xor
scas
jge
lcall
pusha
lock
inc
sbb
lds
push
add
dec
jo
jne
fisttpl
sbb
out
jge
outsb
sbb
bound
fst
inc
lret
jmp
push
mov
mov
and
mov
movsb
jl
aaa
sbb
dec
mov
pop
and
aas
mov
cmc
lcall
xchg
mov
mov
aaa
xchg
push
jmp
dec
cli
push
dec
das
ds
or
stc
mov
jge
sarl
scas
push
ljmp
cmp
xchg
daa
pusha
or
jo
ss
sub
ljmp
lods
jg
jae
jp
pop
rorl
mov
bound
std
push
pop
flds
addr16
adc
jo
or
lahf
jo
std
lcall
loopne
mov
fcmovbe
in
or
push
pushf
inc
mov
out
data16
call
mov
push
jne
mov
jo
pop
push
sub
push
pushl
cs
test
pop
cmpl
int
pop
loop
fs
pop
and
jecxz
pop
stos
inc
incb
je
imul
movsl
fildl
scas
pop
psrad
sbb
mov
stos
xor
mov
filds
test
clc
inc
jb
bound
fiadds
sbb
mov
test
xor
outsl
mov
jl
insb
dec
clc
sbb
lret
push
mov
adc
insb
aad
movl
roll
cmp
push
pop
mov
lea
jno
dec
cmp
add
repnz
stc
insl
addr16
jne
sub
xchg
xchg
push
dec
mov
int3
out
mov
movsb
adc
or
scas
shll
and
out
je
into
icebp
pop
or
clc
sti
adc
aas
add
add
fadds
xchg
imul
or
and
insl
cmpsb
push
inc
fisubrl
shll
js
idivb
popa
mov
aaa
push
sbb
fldl
movsl
cmpsl
cmp
int
push
dec
xchg
sbb
sub
jns
xchg
xchg
jl
sbb
push
and
test
loopne
cmpsb
push
out
push
push
jg
add
mov
cmp
dec
sub
mov
lret
and
ja
sub
cmp
pop
or
shlb
push
or
add
sub
mov
test
push
lcall
sbb
scas
or
leave
aas
fadd
add
ljmp
sbb
add
sbbb
in
mov
jmp
lock
ds
push
fiadds
lahf
mov
adc
out
ljmp
les
dec
jecxz
bound
jno
xchg
xchg
push
stos
mov
jp
xchg
fildll
jecxz
or
negl
xchg
sub
and
in
push
jge
mov
ja
cmp
mov
xor
pop
adc
dec
or
shlb
mov
ret
push
sub
jnp
xchg
test
push
mov
push
cmp
and
cs
cli
fs
in
jae
sbb
ja
mov
or
dec
mov
and
call
rol
inc
rol
mov
sbb
fadds
jg
cmc
daa
jns
flds
movsb
xorb
add
and
loope
push
jmp
pop
mov
xor
mov
int3
cmp
xor
sbb
sub
fisttpl
arpl
xor
leave
add
xchg
lret
popa
icebp
stos
mov
das
cmp
dec
sbb
ret
cmp
fadds
repnz
das
xor
push
nop
jo
rclb
std
nop
push
data16
pop
dec
push
in
call
js
fistpll
cli
push
cmp
add
mov
clc
mov
rorl
cmp
ljmp
mov
test
jne
dec
in
insl
fisttps
sbb
jl
mov
xor
sbb
push
xor
jno
shrb
das
pop
mov
lret
sub
dec
sub
mov
pop
insl
lea
adc
clc
movsb
jp
shrb
leave
imul
jae
cmp
mov
insl
mov
inc
addl
pop
mov
icebp
dec
inc
jns
popa
in
pop
popl
mov
dec
fst
dec
xor
shrl
xchg
mov
pop
shlb
cmc
push
jo
popf
in
stos
je
sbb
push
jne
out
test
dec
pop
pop
push
pop
addr16
xchg
aas
decl
jae
stos
stos
sbb
iret
jmp
popa
and
loop
movsb
jae
sbb
dec
sbb
nop
aaa
cwtl
aaa
loope
pop
fcmovnu
js
shll
cs
and
pop
adc
imul
mov
cwtl
pushf
push
aas
fcomip
mov
add
sub
bswap
sub
jb
or
daa
sbb
inc
push
and
mov
stc
or
call
or
fwait
nop
cs
lahf
mov
mov
mov
ss
jo
lahf
popa
ja
fs
ljmp
inc
out
sub
dec
mov
jbe
or
mov
push
mov
add
mov
sub
out
sub
jb
jbe
test
data16
sbb
in
push
xchg
adc
mov
xor
fimull
jbe
or
fsubrl
repnz
pushw
shll
cmpsl
jge
cmp
mov
jecxz
test
push
or
cmp
sbb
in
arpl
aas
add
push
lods
jle,pn
inc
jb
sub
sub
int3
sbb
mov
es
stos
test
and
iret
mov
lcall
or
sbb
aam
push
xchg
stos
test
insl
cmp
ret
into
enter
scas
mov
lcall
incl
or
iret
aam
mov
jge
sub
mov
jae
ficompl
test
das
inc
cmp
fs
jg
in
in
int
mov
mov
cli
fwait
loop
andl
inc
mov
lahf
scas
imul
mov
sahf
mov
lahf
jg
aad
loope
xor
sub
dec
pop
add
xor
dec
mov
or
cmp
dec
or
rorb
dec
int3
mov
mov
mov
jae
mov
mov
xor
push
jmp
xchg
adc
lods
add
out
mov
or
xchg
enter
clc
fucomp
push
lock
imul
xchg
cmc
mov
leave
jbe
sbb
insl
ret
cwtl
push
icebp
push
mov
pop
into
cmp
pop
inc
pop
addr16
jnp
mov
test
push
inc
je
filds
imul
das
cmp
jbe
sbb
idiv
push
loope
mov
out
and
cmp
pop
shl
cmpsl
roll
cmp
sahf
cmp
inc
xor
loopne
sub
mov
int
mov
lock
lods
dec
out
mov
mov
frstor
lahf
adc
faddl
push
mull
adc
xchg
loop
and
jmp
lock
mov
or
test
adc
outsl
sub
notl
loop
daa
mov
mov
scas
fdivs
mov
jecxz
aas
les
movsl
imul
int
sbb
jp
fistl
clc
das
jns
mov
ret
insl
in
mov
jg
sub
mov
clc
adc
push
sbb
dec
rolb
mov
mov
stc
mov
test
shld
pop
push
inc
add
and
jge
lods
sub
cmp
call
test
xchg
test
outsl
lea
shlb
inc
sbb
lods
test
push
dec
add
pop
dec
mov
ud0
mov
subl
mov
ret
cli
mov
cs
dec
inc
jle
bound
pop
cmpb
clc
cwtl
xchg
in
push
mov
leave
loop
inc
fimull
or
adc
xlat
aam
xor
sub
stc
mov
sbb
sub
mov
push
mov
es
aaa
add
mov
fidivl
shll
das
and
loope
lret
pop
xor
mov
xor
xchg
popa
pop
std
lods
jns
out
and
cmpsl
mov
pop
jp
xchg
adc
pop
mov
xlat
or
nop
lcall
add
subb
jmp
movsl
fs
test
imul
stos
outsb
pop
mov
cmpsb
ja
mov
leave
pop
sub
push
in
cwtl
jge
pop
sti
push
xchg
je
repz
fs
jo
add
pop
fcompl
jle
out
daa
inc
push
adc
or
and
scas
pop
and
dec
cli
dec
mov
fs
mov
loope
clc
in
cld
movsb
ljmp
insl
adc
repnz
mov
mov
xlat
cld
popa
inc
loop
inc
popa
jo
mov
repnz
xchg
mov
mov
imul
adc
lret
pop
into
mov
insl
movsb
dec
je
es
scas
adc
mov
dec
adc
jb
adc
sbb
sub
mov
outsl
dec
fdivrl
dec
xor
jb
ret
jae
pop
outsb
jl
leave
inc
test
or
sbb
data16
push
es
adc
loopne
daa
aam
ficoml
sarb
outsb
add
test
popf
adc
mov
mov
js
adcl
aas
or
out
dec
sbb
jge
leave
sbb
in
xor
fstl
pusha
xchg
push
ljmp
test
in
lea
pusha
mov
jg
or
fcoms
mov
jp
inc
adc
call
jo
fxch
inc
push
shrl
and
adc
mov
push
repz
shl
popa
sub
mov
lock
in
push
inc
push
es
faddl
pop
jle
mov
push
xlat
or
mov
adc
add
lea
and
fs
inc
loop
cli
dec
mov
js
push
cld
fwait
add
push
lahf
int3
aam
lret
cmp
or
xor
lret
mov
sub
xor
cmp
sar
mov
scas
dec
jnp
mov
cs
lcall
out
aam
int
sbb
mov
std
fnsave
mov
outsl
ror
push
addr16
mov
je
sub
push
into
ja
sbb
les
mov
add
lods
iret
xchg
out
imul
ja
and
xchg
lret
push
xor
pop
sahf
pop
mov
cmc
or
popa
andb
push
cs
pop
pop
inc
xor
inc
mov
addb
wbinvd
xorb
daa
ret
push
jno
mov
pop
enter
push
cltd
xlat
adc
pop
xchg
pop
xor
jae
push
inc
or
cltd
shlb
movsl
mov
jne
push
popf
fdivrl
adcb
lret
push
rol
popf
mov
push
mov
push
cmp
stos
repnz
jmp
push
or
mov
xchg
mov
cmp
icebp
stos
daa
sub
mov
cmpb
mov
sbb
lret
cli
popa
jnp
xlat
jb
sti
sub
jl
leave
call
jg
pop
repnz
jecxz
cmp
push
xorb
cmp
xor
sbb
jno
inc
push
jno
jg
cld
push
sti
data16
iret
mov
add
clc
cmpsb
mov
nop
cmp
cmp
in
sbb
mov
das
cmpl
fcompl
es
jnp
jb
mov
sub
jp
arpl
fnstsw
icebp
jmp
insl
mov
ds
dec
push
lcall
dec
int3
jmp
fisttpl
lock
das
pop
mov
lods
xor
dec
adc
dec
or
or
pop
xchg
fnsave
in
xchg
jp
insb
int3
cmp
or
cli
out
leave
mov
mov
test
dec
lock
ret
out
jb
pop
inc
dec
inc
inc
ret
adc
sbb
popa
xchg
lods
jo
pop
jae
mov
scas
dec
arpl
mov
test
sbb
xor
mov
je
and
xchg
fildll
pop
addl
sub
mov
clc
mov
inc
stc
sbb
add
mov
icebp
or
mov
pop
xchg
das
mov
add
sbb
mov
cmpsb
sub
into
shrb
icebp
movl
or
jge
fsubrs
aaa
in
sbb
mov
xor
mov
ret
xlat
mov
mov
ficompl
jno
test
js
mov
add
cmpsl
xchg
dec
inc
push
outsl
sub
mov
mov
inc
iret
hlt
sbb
cmc
pop
pushf
cltd
aad
xlat
lcall
sub
mov
pop
jl
inc
rcr
pusha
pop
inc
push
stos
fcompl
hlt
enter
jae
lods
xchg
insl
insl
lock
mov
int
dec
add
adc
test
inc
in
cmp
and
lods
push
in
xlat
enter
push
push
fistpl
cmp
pop
cmpl
daa
dec
adc
jge
or
mov
xchg
ljmp
dec
xchg
mov
fcomps
scas
out
test
xor
push
in
xchg
inc
repnz
dec
out
dec
cltd
lahf
add
xchg
inc
push
sub
xor
out
dec
adcb
adc
loope
es
out
lds
shlb
popa
subl
push
icebp
xchg
enter
dec
add
insl
nop
or
inc
fnstcw
mov
cmp
mov
vpsubb
ds
mov
jmp
adc
xorl
popf
fmull
pop
push
push
mov
mov
jnp
or
inc
jmp
or
jo
push
fisubs
pop
inc
stos
jb
stos
xor
icebp
inc
and
lock
loope
xchg
popa
push
jno
shll
clc
mov
pop
pop
mov
xor
xchg
test
jae
dec
sbb
jne
inc
movsb
lahf
mov
cwtl
cld
imul
pop
lods
add
jecxz
inc
pop
mov
xchg
adc
popa
test
push
rcrl
mov
push
dec
xchg
adc
fisttpll
pop
and
cmc
mov
cmc
pop
sbb
pushf
test
test
sub
mov
push
mov
pop
and
add
dec
xor
lahf
xchg
add
subl
ljmp
sub
enter
dec
mov
add
pusha
out
sub
push
leave
xlat
rcrb
nop
nop
je
xchg
adc
mov
sub
into
dec
mov
dec
and
mov
ljmp
aas
loop
mov
xchg
pop
mov
orl
insb
lret
and
jge
push
xchg
sub
jge
push
inc
xchg
idivl
ss
in
jle
xchg
xchg
orl
mov
xchg
fcom
cmpsl
popf
pusha
inc
xor
repz
xor
sbb
lret
dec
ficoms
fsub
pop
fwait
jno
cmp
fsubrl
cmp
add
data16
dec
dec
dec
outsl
lcall
push
fsubr
das
inc
inc
in
pop
fs
test
jo
adc
lea
hlt
xchg
les
cmp
push
dec
dec
data16
dec
push
xchg
cmc
sub
pop
and
jge
add
and
push
jnp
push
punpcklbw
mov
dec
mov
cmp
lds
notl
xor
pop
jae
and
inc
cmp
fdivrs
cmp
cmc
or
jb
aaa
dec
cmp
movups
or
sub
dec
push
mov
ljmp
mov
iret
pop
int
sahf
or
sbb
fdivrp
lea
push
in
add
pushf
popf
popf
pop
xchg
sub
lds
lods
sub
adc
fnstenv
fwait
cmp
push
incl
and
or
inc
pushf
movsb
add
cmp
cld
xor
mov
jmp
add
push
sti
out
mov
js
repnz
stos
ss
push
cmp
push
sti
js
bound
inc
ret
nop
dec
xor
mov
mov
adc
mul
test
sti
inc
pushf
push
enter
xlat
rolb
ret
mov
test
inc
enter
ljmp
jle
lods
rcr
dec
cli
scas
aas
popa
ret
or
in
sub
push
and
jo
incb
jl
sahf
mov
mov
cmpsb
sahf
mov
or
out
xlat
ret
frndint
insb
jbe
xchg
lret
dec
rcr
dec
push
pushf
mov
adc
sbb
lds
test
pop
je
mov
inc
pop
jns
clc
fidivrl
decb
mov
jbe
xor
push
lock
loop
xorl
fisubl
sub
add
loop
repnz
sub
cmp
push
aas
in
or
sub
jmp
lods
push
fmull
mov
pop
pop
std
loop
cs
scas
outsb
out
fstl
lods
push
loopne
imul
mov
pop
mov
inc
call
packssdw
mov
mov
jae
jnp
daa
scas
lret
ret
xlat
int3
pop
mov
pop
adc
dec
gs
jo
sub
divl
je
mov
lock
inc
sub
and
movsb
inc
push
jns
sub
jp
shll
xchg
mov
jg
enter
and
iret
imul
incb
int
test
insb
mov
std
dec
pop
dec
pop
call
sbb
das
das
flds
clc
jnp
insb
adc
movsb
test
hlt
push
jl
sub
pop
mov
jle
jecxz
mov
fidivl
in
clc
or
sub
or
cmp
pop
sbb
xchg
out
sub
xor
and
mov
mov
cmp
out
in
ret
lcall
icebp
icebp
stos
pusha
pusha
stos
sub
mov
push
mov
or
or
push
lea
bound
dec
stos
adc
jmp
scas
adc
repnz
pop
jle
push
and
scas
inc
push
daa
inc
pop
shlb
imul
outsb
jb
adc
xor
js,pn
xor
add
sbb
mov
lods
mov
xor
cmpsl
push
mov
push
cmp
outsb
sarb
mov
inc
ficompl
mov
pop
clc
fists
or
fimull
sub
lea
pop
push
inc
jmp
addr16
xchg
bound
jp
insl
ja
rolb
xchg
andl
jecxz
jecxz
ret
adc
nop
aaa
pusha
pop
andb
ds
xor
lea
push
test
jl
inc
popa
push
adc
scas
inc
pop
test
stos
jae
fwait
data16
xlat
mov
aad
jae
inc
xor
cmp
pop
iret
inc
or
clc
sub
sbb
je
les
pusha
scas
xor
and
push
andl
repnz
push
jnp
les
sti
je
arpl
pop
sbb
xor
add
pop
xlat
jae
xor
pop
outsl
jb
pop
into
ja
sub
mov
shll
gs
imul
iret
sub
repz
fadd
mov
adc
pop
ljmp
add
xchg
push
jmp
mov
lea
test
pop
pop
arpl
out
jnp
xchg
add
and
jne
push
je
xchg
pop
xorl
push
aas
adc
gs
cmpsl
push
out
fisubrl
arpl
mov
lret
sbbl
pop
lret
lret
stos
ljmp
icebp
nop
xchg
int
jge
scas
push
gs
xlat
pop
xchg
jg
xchg
jne
movsb
sti
insb
xlat
ror
and
push
mov
clc
hlt
jb
js
cmp
into
clc
mov
decb
aas
imul
lds
cmp
xchg
jnp
or
push
leave
ds
lahf
pop
cmp
enter
mov
fsts
and
dec
and
mov
xorl
inc
in
bound
cmp
lret
rep
push
pop
imul
sub
inc
daa
sub
pop
sahf
test
imul
pop
cs
lods
xchg
js
faddl
imul
pop
mov
mov
pop
scas
popf
jp
mov
cmc
mov
sub
pushf
inc
xor
out
idivl
dec
filds
inc
dec
sbb
clc
sbb
pop
inc
jmp
adc
lea
pop
jbe
cwtl
pop
cmpsl
xchg
mov
add
leave
hlt
lret
xlat
jno
scas
mov
mov
sbb
or
out
jb
cmp
xlat
lahf
movsl
fists
scas
dec
pop
in
or
add
shlb
js
cmc
pop
lcall
aad
dec
cmp
xlat
xchg
cmp
xchg
clc
fwait
sbb
pop
xchg
fbld
sti
xchg
test
shll
inc
xchg
outsl
jbe
test
inc
xlat
pop
lret
lods
test
cmpsb
or
xchg
shr
push
mov
in
sub
movsl
fidivs
cmp
sub
dec
xchg
int
divl
and
push
mov
mov
movsl
adc
sbb
daa
daa
std
cmp
andl
xchg
stos
push
loop
std
fnstcw
je
xchg
push
out
out
add
dec
sbb
sub
int
mov
or
call
cltd
sbb
mul
mov
in
mov
imul
xor
and
loop
insl
cmp
ret
cltd
sbb
mov
and
add
out
cmpsl
add
sub
xor
or
jno
in
mov
hlt
stc
in
add
movsb
loop
sbb
cli
out
lods
xlat
int
sbb
jae
bound
inc
sub
cmp
cwtl
je
or
lock
repz
iret
pop
movsb
sarl
xchg
movsb
jge
cmpl
outsb
adc
mov
jmp
ja
movsl
fisubl
dec
jmp
fbstp
in
enter
jb
jo
add
pop
push
ds
loop
push
imul
imul
in
je
jnp
inc
ljmp
mov
fwait
dec
mov
push
insl
push
jge
movsl
dec
in
mov
das
add
dec
call
xchg
sbb
dec
xchg
popa
pop
pushf
mov
addl
inc
or
repnz
nop
pop
aaa
test
lods
mov
inc
push
push
jbe
push
in
stos
pop
mov
mov
mov
movsb
icebp
dec
pop
sub
mov
cmc
adc
out
in
jg
das
pop
lods
test
out
mov
add
scas
push
rcll
sbb
mov
mov
dec
pusha
sbb
pop
repz
test
sbb
push
jge
xchg
jg
rcr
pop
push
push
push
fsubrl
mov
ror
out
sub
rclb
lahf
jb
mov
mov
cmp
sub
jg
hlt
sub
iret
add
filds
cmc
jno
pop
jl
lods
jg
lods
sub
lods
mov
aad
dec
xchg
arpl
and
inc
pop
mov
add
mov
test
add
out
mov
and
add
mov
or
adc
sbb
xor
mov
popa
adc
call
xchg
imul
cmp
xchg
fisttps
in
rorb
loopne
lods
scas
or
insl
pop
mov
rcrb
out
inc
fsubr
and
xchg
jp
call
mov
shll
xor
aam
sub
mov
loope
inc
ja
mov
sti
inc
mov
addr16
iret
mov
add
lret
xor
xor
notl
push
cmp
daa
shll
jle
inc
jb
xchg
pushf
roll
imul
inc
js
ljmp
sub
dec
sbb
xchg
mov
cmp
mov
pop
pop
pop
xor
mov
in
pushf
jp
jecxz
sub
sub
mov
and
inc
movsl
fstl
dec
cmp
orb
je
or
cwtl
dec
add
push
jle
scas
out
mov
nop
mov
sbb
lock
cmpsl
repz
mov
or
out
xchg
dec
jp
adcl
insb
and
out
fiaddl
lock
mov
mov
test
std
es
daa
cld
imul
shl
cmp
xor
imul
push
cwtl
xchg
jmp
xchg
jecxz
inc
jnp
outsl
stos
ret
adc
jp
sub
in
or
movsl
jl
outsb
outsb
data16
mov
iret
pop
psubd
mov
push
adc
adc
mov
mov
xor
push
rcll
dec
fstp
xchg
mov
adc
pop
fwait
sbb
aad
jae
add
push
movsl
mov
cmc
ljmp
sbbl
adc
cmp
xor
cld
xor
add
and
adc
add
clc
sbb
pop
add
pop
jmp
lods
dec
push
movsb
out
inc
add
es
icebp
in
or
xor
push
rclb
jne
push
dec
push
repnz
inc
mov
imul
aam
ds
push
dec
nop
fs
leave
std
fbstp
cli
pushf
dec
cmp
insl
add
loope
fwait
inc
cvttps2pi
xchg
test
shrb
pop
insl
xchg
mov
cmpsl
lcall
push
out
lds
push
sub
mov
fsubr
sub
jmp
loopne,pt
pop
in
adc
sub
cmp
stc
cwtl
addr16
inc
in
push
or
imulb
adcl
fistpll
hlt
loop
xchg
inc
imull
ja
mov
pop
mov
push
sub
imul
jno
out
negl
insl
xor
fs
rcrl
fldcw
sbb
inc
movsl
and
mov
push
shl
and
mov
loope
mov
es
cmp
andl
dec
inc
sub
xchg
mov
imul
fldl2e
jnp
fcomps
subb
mov
shll
loopne
push
fisttpl
aad
insl
sarb
outsl
aas
test
push
bound
les
shll
lahf
js
mov
inc
sbb
cmp
aas
push
sub
jno
sbb
push
mov
inc
std
dec
jecxz
std
mov
ret
notl
cmpsb
mov
ljmp
cmp
mov
mov
add
xchg
incl
adc
or
mov
sbb
pop
jno
or
and
test
leave
fisubs
ficompl
sahf
push
repnz
push
hlt
out
pop
jecxz
ds
sbb
ja
daa
dec
std
test
cmovle
pop
data16
sub
cmp
cwtl
mov
arpl
pop
cmp
pop
push
sub
ret
xchg
aam
cli
test
test
sbb
pop
mov
lods
shll
sbb
sub
xchg
push
dec
push
pop
push
repz
in
inc
push
push
pop
sbb
mov
pop
jmp
dec
popa
jae
outsl
jecxz
pop
pop
mov
leave
je
cmpb
cmp
pushf
lret
into
xor
and
js
mov
jb
cmp
sub
out
pop
add
lds
mov
lea
mov
jg
xor
pop
or
jno
rcrb
fcom
shlb
call
ss
movsb
pop
fnsave
mov
out
xchg
push
sti
jno
inc
dec
adc
aaa
cmp
out
fisubs
mov
push
or
js
push
jno
scas
jecxz
pop
push
outsl
jl
xorl
in
stos
push
cmp
fnstenv
sub
gs
and
mov
xor
inc
shll
in
jnp
xchg
es
xchg
addl
mov
cmp
out
cs
xchg
xchg
jo
dec
dec
outsb
mov
in
dec
sub
dec
mov
pop
out
std
hlt
andb
jb
inc
cmp
mov
sti
ljmp
cmp
addr16
in
push
std
loop
mov
sbb
pushf
imul
dec
add
inc
push
call
mov
lds
sbb
sub
cltd
mov
hlt
jp
sub
mov
popf
pop
fstps
mov
or
jmp
mov
add
imul
bound
and
fstpt
cmpsl
jmp
add
mov
out
adc
aaa
and
fiaddl
and
lea
xchg
xor
mov
cmp
pop
imul
mov
insb
push
adc
jmp
mov
add
js
dec
push
dec
xchg
and
scas
push
xor
mov
mov
inc
int3
jmp
and
mov
push
shlb
mov
jmp
sbb
js
mov
push
sahf
mov
add
movsl
mov
jmp
adcb
pop
and
adc
cmc
es
clc
sub
pushf
loope
addr16
pusha
jae
sub
outsb
ss
lcall
lcall
push
mov
test
aad
in
pop
cmp
bound
fcoms
notb
sbb
cwtl
mov
mov
ljmp
sub
xchg
js
in
dec
enter
test
xlat
rorl
std
movsl
inc
orb
stos
xor
sub
lret
and
mov
fmuls
and
jle
shrl
add
lea
sub
push
jno
repz
int3
pushf
mov
jbe
sub
adc
sar
outsl
outsl
in
js
add
jp
popf
adc
adcb
pop
pop
inc
sbb
xchg
dec
jp
cmp
dec
push
jbe
jge
and
and
push
leave
sbb
push
arpl
mov
jo
dec
xchg
xorl
xlat
mov
nop
aad
mov
xchg
and
ljmp
aad
stos
stc
mov
cmp
gs
cmp
rcrl
arpl
adc
rcrb
and
xor
lcall
outsb
mov
lods
or
or
and
popa
cld
inc
outsl
outsl
loopne
int3
sub
jmp
pop
mov
cmp
pop
test
mov
call
lods
cmp
dec
test
pop
and
pop
xor
mov
sub
cwtl
add
add
cwtl
mov
dec
xlat
mov
out
sub
cmp
cli
gs
imul
mov
xchg
out
pop
decl
cmp
imul
cmp
and
xor
loop
add
bound
cmp
mov
cmp
mov
fsubrp
dec
xchg
loope
cmp
jo
loopne
andb
mov
dec
cmp
lock
push
andl
adc
rolb
mov
xchg
lret
lods
fmulp
dec
fidivs
dec
mov
pop
nop
aam
pop
loopne
mov
jns
lar
cmc
incb
pusha
sbb
pop
je
push
sbb
pop
mov
ror
test
xchg
dec
int
loope
aad
mov
push
outsl
sti
mov
in
push
call
hlt
xor
jmp
fsubl
or
adc
shll
iret
sub
jp
mov
stos
jb
ret
lret
rclb
ljmp
jb
pushf
jle
cli
mov
nop
fucom
pop
sub
cmp
in
mov
xchg
pop
out
xchg
pop
ret
ss
leave
movsl
jg
pop
push
mov
mov
mov
sbb
and
imul
faddl
mov
mov
sbb
nop
in
add
adc
xor
scas
addr16
pop
mov
test
adc
cmpsb
pusha
dec
dec
inc
fldt
arpl
adc
mov
in
add
insl
and
and
sub
lahf
shrb
and
stos
sbb
cld
mov
add
cmp
or
out
jp,pt
xchg
lods
test
jne
xor
pop
stos
rcrl
xor
mov
cmp
mov
fistl
adc
mov
xchg
repnz
js
adc
inc
ljmp
pop
icebp
mov
cmc
sarl
inc
mov
test
sbb
out
mov
cmp
jmp
movsb
mov
in
repnz
push
test
ljmp
shlb
outsl
xor
push
adc
stos
mov
pop
xor
push
mov
lods
aaa
mov
mov
push
imul
pop
sbb
cld
xchg
insb
and
rcll
adc
aam
js
shll
sbb
addr16
xor
test
pop
outsl
mov
inc
ljmp
sti
div
mov
sahf
aam
out
and
ret
icebp
dec
lods
inc
xchg
mov
push
xor
push
mov
mov
and
sbb
dec
xchg
inc
add
data16
xor
outsl
jne,pn
sbb
inc
insb
mov
loopne
lcall
mov
push
push
les
stos
sub
jns
or
push
lods
stc
iret
mov
mov
mov
mov
test
ret
stc
mov
jo
sub
setns
lahf
icebp
jle
push
sbb
cli
and
cmp
jmp
call
pusha
lret
mov
dec
and
lods
xchg
faddl
fwait
out
push
dec
lods
insl
stos
ds
mov
adc
push
push
movsb
data16
pop
pop
dec
jno
daa
and
mov
ficoms
repz
inc
inc
aam
int
inc
in
lret
push
decb
mov
fistps
mov
enter
fadds
dec
mov
xchg
dec
cmp
nop
imul
cmpb
cli
or
insl
xchg
lock
popa
testl
enter
rolb
cmp
outsb
pop
loopne
movsb
pusha
mov
add
loop
loopne
cmp
mov
xchg
add
jle
lods
fstps
jo
imull
xor
pop
imul
out
popa
xchg
ja
jno
jle
insl
pop
in
dec
addl
jp
mov
pop
adc
pop
xchg
inc
movsl
nop
je
adc
or
push
aaa
mov
sbb
push
movsb
and
aam
aaa
ret
jns
in
mul
sbbb
add
fadd
movsl
and
sti
pop
je
lds
repnz
or
aad
cmpl
inc
lcall
mov
push
add
adc
mov
dec
sahf
mov
mov
cmp
cmp
lea
pop
or
pop
fmuls
lds
push
sbb
test
mov
jnp
mov
add
or
or
sbb
lds
fisttpl
push
xchg
data16
out
repz
loope
cmp
repnz
movsb
mov
jne
push
inc
outsb
enter
inc
in
mov
sahf
adc
inc
icebp
push
in
mov
pcmpeqb
jge
sarl
pop
lods
mov
inc
xchg
jmp
or
insb
inc
int
addr16
mov
inc
mov
xchg
outsb
adc
loopne
adc
test
dec
imul
imul
orl
xchg
call
test
and
int3
push
or
insb
shlb
xor
and
adc
out
mov
cs
pop
mov
push
ret
pusha
xor
add
fcmove
cmp
push
or
scas
push
xor
lcall
xchg
sub
fisubrs
test
and
adc
out
mov
push
xchg
imul
xor
push
addl
cmp
pop
jmp
xchg
mov
dec
jmp
aad
hlt
adc
loope
mov
mov
adc
ret
shrl
sub
js
insl
xchg
cltd
out
aaa
jae
aam
sbb
cmp
sti
lea
subl
testl
in
mov
mov
arpl
add
pop
sub
jle
cmc
fmul
popf
or
add
pushf
lahf
nop
out
scas
int
leave
mov
mov
jmp
js
mov
loope
add
into
adc
lock
mov
bound
inc
sbb
mov
pop
ss
push
sub
addr16
out
out
mov
cmp
aad
mov
arpl
cmpsl
and
loopne
cmpsl
push
or
mov
outsb
mov
and
sbb
rol
rclb
out
sarl
push
push
xchg
out
fsub
mov
inc
pop
sbb
scas
cld
clc
das
cmpsl
cli
sahf
es
fadd
or
out
xchg
xchg
adc
mov
sarl
andl
sbb
icebp
pop
dec
add
jns
dec
test
repnz
aam
pop
jmp
pop
js
call
fimull
mov
xor
xlat
jle
in
push
call
adc
and
das
jge
mov
jge
movsb
lret
arpl
aaa
xor
das
outsl
scas
sub
push
or
add
pusha
lahf
push
cmpsb
xlat
scas
or
mov
hlt
movsb
xor
ljmp
inc
cmp
mov
lock
xlat
cwtl
and
jecxz
fucomp
and
pop
test
fmulp
dec
pop
cli
jge
pop
and
pusha
jg
and
sbb
test
fimull
pop
not
out
out
xorl
ret
stos
cmpsl
xchg
mov
xchg
mov
aas
in
dec
fs
cs
pushf
sbb
or
xor
mov
ljmp
add
mov
cmp
push
push
add
or
add
inc
loopne
mov
add
enter
sbb
cmp
push
in
je
movsb
subl
loopne
or
enter
inc
pop
inc
or
std
xchg
xor
push
ja
xchg
nop
cltd
cmp
adc
pushf
popf
sahf
nop
dec
inc
adc
add
in
mov
xor
cmpsl
jno
adc
jmp
fnstcw
enter
hlt
pushf
test
mov
int
xchg
popf
mov
imul
in
js
ret
loope
mov
mov
adc
jle
mov
je
pop
push
pop
ljmp
pop
mov
ret
xlat
popf
daa
jnp
fs
push
sbb
cwtl
sub
iret
fisubrl
divl
insl
cmc
pop
sti
fnstsw
push
pop
jne
pop
enter
fwait
mov
das
sub
cmpsb
stos
mov
imull
xorb
jge
out
sub
ljmp
mov
lcall
in
mov
cltd
mov
sbb
mov
movsb
addr16
mov
dec
mov
cmp
sub
sahf
jg
sub
or
push
ljmp
rolb
aaa
dec
lcall
add
imul
das
or
jge
inc
sti
mov
jl
and
and
hlt
adc
or
movswl
jne
iret
sub
stos
adc
push
sbb
fistpll
xor
or
mov
movsb
clc
adc
mov
aas
mov
stc
pusha
pop
mov
mov
icebp
push
clc
out
jmp
cs
pop
aaa
sbb
sub
pop
mov
pop
jle
out
jb
ds
call
inc
jns
dec
cmp
or
push
ja
ss
adc
xchg
lods
jnp
sub
or
pop
call
mov
enter
mov
mov
hlt
dec
loopne
lea
lahf
rcl
aas
notl
sub
dec
ljmp
push
sub
lods
xor
popl
icebp
aad
dec
imul
lea
fidivs
fildll
add
or
fisubrs
and
fnstsw
pop
sub
addl
push
imul
ljmp
xor
or
inc
jl
fimull
loopne
inc
repnz
cmpsb
and
mov
xchg
lock
loope
daa
jle
xchg
xchg
cmp
xchg
aaa
inc
iret
jnp
push
fidivs
cmc
mov
adc
xchg
and
outsl
inc
xchg
inc
in
pop
imul
sub
inc
dec
sbb
repnz
insb
loopne
dec
add
data16
mov
ljmp
and
loopne
adc
xchg
sbbb
adc
les
fldcw
fwait
xor
jb
insb
pop
fwait
pop
popa
cli
sbb
pop
jbe
pop
jecxz
mov
into
sti
dec
mov
jecxz
gs
fwait
dec
imul
jecxz
xchg
jnp
push
inc
dec
iret
dec
mov
outsb
movsl
mov
cltd
mov
mov
mov
pop
decl
add
xchg
sbb
inc
and
jno
jmp
cmpsb
jns
mov
bound
pop
and
in
call
and
dec
dec
pusha
pop
mov
fstpt
or
scas
cmc
xchg
scas
push
stos
xchg
add
mov
add
hlt
inc
fstpl
sbb
clc
jns
shrl
imul
scas
push
test
jmp
pop
and
fnstsw
out
addl
sbb
adc
popa
add
or
addr16
movsb
mov
xchg
and
leave
cli
sbb
dec
adc
mov
and
dec
sbb
cltd
jg
mov
shlb
mov
aas
and
lea
and
push
dec
in
inc
jne
icebp
call
adc
out
cld
daa
mov
or
push
mov
pop
js
jae
push
cmp
mov
jmp
push
jb
jp
addr16
or
or
aad
mov
pop
fldenv
scas
push
aad
xor
stos
int
xchg
arpl
shr
cmp
sbb
xchg
pop
xor
xchg
and
ja
xchg
inc
incl
dec
js
mov
sub
icebp
lcall
inc
xorl
cmpsb
and
mov
mov
iret
or
cmp
mul
int
aad
iret
mov
pop
test
or
cmp
movsl
or
or
fisttpl
ror
aaa
cmc
fwait
leave
add
mov
and
sbb
pusha
push
mov
and
cmp
mov
mov
fnsave
sbb
hlt
ljmp
iret
jo
cmp
cmp
aaa
aam
imul
shl
dec
ret
mov
adc
addl
mov
adc
enter
sbb
and
es
adc
fwait
push
mov
pushf
popa
sub
jg
rorl
and
push
xchg
add
out
or
leave
je
pop
ljmp
outsb
mov
pusha
sahf
sub
icebp
mov
push
xor
testl
or
lods
dec
imul
mov
stos
popa
sbb
imulb
sbb
fiaddl
and
cmp
fsts
mov
xchg
mov
mov
and
shrb
out
xor
pop
adc
test
mov
push
loopne
repz
adc
sahf
mov
cmp
aaa
sbb
sub
mov
call
aam
subl
je
jg
in
push
les
jecxz
jge
cmpsb
pop
xchg
int3
fists
outsb
mov
in
adc
pop
mov
push
lahf
pop
scas
dec
pop
hlt
sti
mov
popa
push
fstps
hlt
stc
stos
pxor
aaa
jge
dec
mov
adc
jbe
push
dec
cmpsb
xchg
push
xchg
lcall
mov
xchg
or
jp
mov
adc
mov
adc
push
je
outsl
stc
sar
scas
sti
aad
xor
nop
inc
jmp
or
pop
add
push
addr16
cmpb
mov
and
out
mov
lock
jl
lock
jns
xor
popw
cwtl
or
or
jmp
inc
loop
mov
in
shlb
fidivs
lea
orb
xchg
gs
dec
and
lahf
stos
xlat
sub
sub
adc
stc
push
gs
pushf
add
or
fldenv
dec
jbe
push
iret
popf
pop
xchg
sbb
push
sbb
test
int
test
cmp
divb
mov
sti
and
jg
aas
jbe
sbb
or
lock
lds
jns
add
jo
xchg
lret
jnp
push
hlt
mov
insl
xchg
ret
mov
adc
outsl
fsts
adcl
sbb
fmul
out
mov
data16
mov
cmpl
vpsubsw
jo
ffree
mov
mov
es
jl
test
fisttpl
dec
in
ss
in
loope
mov
mov
inc
and
mov
orb
jo
sub
out
sbb
int
jmp
les
cs
push
xor
mov
or
jae
loopne
dec
int
fists
stos
insb
sub
jg
lods
fcmovne
pop
jl
in
xchg
pop
sbb
mov
inc
enter
xor
andl
fcoms
jp
in
sub
loop
mov
cmp
sbb
push
cwtl
or
xchg
jg
pop
mov
das
pop
jb
jmp
adc
or
jmp
sbb
lods
or
daa
les
setg
inc
or
scas
inc
lcall
pop
mov
xor
cmc
xchg
mov
xchg
mov
sbbl
insl
and
push
in
or
jg
rorl
fwait
inc
in
out
je
repz
pop
hlt
js
xor
jp
or
fisubrl
ljmp
ljmp
mov
push
divl
push
cmp
push
pop
or
js
pop
push
fwait
jns
mov
mov
jg
xchg
mov
cmpsl
dec
mov
rcr
mov
sbb
xchg
jle
sahf
loopne
jp
pop
loop
in
pop
mov
sub
test
int
jnp
call
cltd
stos
mov
je
xor
sub
adc
mov
ja
repnz
outsb
sub
jmp
pusha
int3
leave
es
repnz
pop
sub
dec
lds
lods
fsts
std
outsl
jmp
adc
sub
idivl
hlt
xchg
cmpsl
mov
inc
in
adc
mov
pop
jae
out
cmp
movsb
pop
xchg
jbe
or
cld
dec
outsl
sbb
cmp
xor
fwait
xorb
xor
sub
loop
add
das
or
lock
dec
addr16
mov
scas
scas
mov
dec
shlb
inc
pop
jns
mov
mov
mov
xchg
adc
mov
jns
mov
pop
in
adc
fnstsw
push
iret
les
shl
ss
sbb
fistpl
push
clc
xchg
repz
mov
pop
in
mov
cwtl
jnp
mov
fwait
dec
xchg
lock
insl
out
test
cli
cs
jae
loope
push
divb
add
adc
dec
pop
addr16
cmp
adc
mov
es
xchg
push
push
mov
mov
in
mov
movsl
jg
rolb
loopne
lods
fwait
xor
pop
push
in
cmpsl
bound
int
nop
xchg
fs
les
mov
enter
pop
xchg
cmp
mov
push
outsl
andb
ss
insl
lea
sub
dec
fmuls
outsl
push
pusha
pop
popf
test
negb
add
js
subl
pop
arpl
add
test
fisttpl
dec
cld
lret
jl
incb
mov
imul
stc
outsb
test
or
cmpsb
sbb
pop
jg
inc
pop
pusha
popf
sbb
pop
xorb
scas
mov
inc
mov
add
ret
sahf
fs
sub
push
aam
mov
aad
stos
ljmp
shll
cmp
jno
xor
cmp
insb
insl
push
pushf
dec
jns
jno
lods
mov
cwtl
sub
adc
popf
jno
inc
xchg
rcrb
and
and
xchg
mov
mov
add
or
push
mov
hlt
daa
lret
imul
cmpl
jb
or
in
mov
out
sub
mov
jno
les
mov
mov
test
lods
scas
fcoms
pop
mov
fisttpll
jp
pop
pop
and
ret
loope
mov
insb
add
and
ret
fisubl
push
test
stos
and
xor
dec
adc
js
scas
mov
jns
xor
cmpsb
dec
cmp
daa
lcall
ljmp
jecxz
out
jo
mov
push
push
pop
push
or
orl
into
movsl
dec
cli
icebp
gs
jge
sub
dec
jnp
and
cmp
repz
or
mov
mov
and
sub
pusha
popa
mov
leave
mov
adc
sub
fsubl
xor
ficoms
std
hlt
fcomp
cli
ret
cmpsb
jmp
or
xchg
jbe
jae
jecxz
push
mov
or
mov
ret
fwait
es
sahf
mov
pop
push
cmc
mov
out
xchg
mov
jmp
xor
out
repz
cmp
stos
sbb
xchg
mov
je
or
sbb
fsqrt
or
in
ss
mov
pop
jmp
bound
jle
negl
cmp
mulb
mov
sub
rcrl
mov
lcall
lods
add
out
imul
and
xor
rorl
les
cmc
mov
fst
push
insl
lfs
adc
in
pop
jle
shlb
out
arpl
mov
push
or
push
push
or
xchg
loope
xor
mov
xchg
mov
xlat
adc
jmp
shll
cltd
adc
pop
jg
std
aaa
repnz
into
push
inc
call
aam
cmpsl
jge
icebp
mul
dec
call
xchg
into
popa
mov
js
mov
pop
pop
int
pop
imul
inc
pop
inc
stos
dec
sub
add
adc
cltd
orl
dec
daa
into
mov
or
or
js
and
push
jo
mov
fdivrl
xchg
shl
jecxz
cmpl
testb
xchg
inc
xor
adc
pop
jb
cmpsb
leave
jbe
popl
or
fiadds
dec
mov
cwtl
addr16
lahf
add
scas
mov
jge
cltd
cs
and
mov
cli
rorb
xor
xchg
movsl
mov
icebp
push
jno
add
fsub
jecxz
fmull
and
shl
jbe
or
fisttpll
cld
xor
sti
sbb
popa
mov
lret
jp
jbe
cmpsb
xchg
push
or
jle
loopne
adc
add
and
bswap
outsb
out
inc
or
loop
mov
mov
sarl
and
or
clc
adc
xor
push
bound
mov
cmc
inc
jne
push
jno
pop
xchg
loopne
inc
stc
mov
imul
and
pushf
or
lcall
int3
out
pop
sub
jmp
out
lods
xor
nop
dec
pop
ficompl
in
movsl
dec
mov
dec
js
push
mov
popf
add
testb
jnp
adc
xchg
lds
std
in
enter
in
mov
and
dec
mov
int
sti
sbb
mov
dec
pop
cmp
jno
cwtl
xchg
fbstp
sbb
pop
ret
in
int
pop
loope
jge
popf
cwtl
mov
or
mov
xor
jb
cmpsl
sbb
scas
push
adc
mov
test
xchg
sti
push
inc
jbe
out
mov
and
jge
pop
jecxz
cmpsb
imul
jbe
and
es
hlt
mov
mov
fwait
lcall
inc
mov
sub
pop
push
ss
jns
sbb
and
inc
ljmp
movsl
add
jns
ret
mov
sub
gs
jecxz
pop
mov
sub
push
mov
mov
xor
lds
daa
stos
inc
or
or
sub
loope
lcall
movsl
cmp
cltd
xlat
cwtl
xchg
sbb
icebp
loope
icebp
scas
sbb
aam
cmp
sbb
das
lcall
test
out
pushf
fimull
in
mov
push
mov
lcall
mov
dec
hlt
inc
mov
fs
vpsrld
lods
clc
dec
jp
roll
mov
mov
sbb
add
mov
sar
iret
popf
sub
outsb
lahf
cmp
aad
ds
movb
dec
dec
mov
mov
movsl
or
cmp
loopne
test
insl
add
cli
sarl
sti
das
mov
mov
dec
js
mov
or
pop
inc
mov
neg
sub
clc
dec
fucomip
or
push
dec
fidivs
cld
lcall
mov
pop
jl
ror
roll
sub
xor
and
movsl
jge
cmpsl
push
pop
xor
sbb
xor
mov
jno
and
jle
frstor
sbb
inc
lret
jnp
data16
lock
imul
outsb
ss
int
mov
daa
jne
mov
cltd
in
sbb
hlt
pop
fwait
les
cwtl
fbstp
xchg
push
dec
rol
enter
and
jp
scas
mov
and
mov
jnp
test
popa
outsl
addr16
mov
lcall
clc
int
pop
into
push
push
lds
mov
aaa
inc
sub
outsl
out
into
sbb
loop
push
or
in
sub
sarl
ret
xchg
test
push
dec
test
xchg
sbb
fwait
cmc
jg
nop
jno
jns
push
pushf
push
sub
sbbb
sub
sbb
int
repnz
mov
icebp
out
cwtl
popf
fmull
out
cmp
test
xchg
xor
mov
ds
je,pn
in
and
inc
lock
testb
std
lret
sti
ja
testl
pop
mov
dec
mov
je
xchg
sub
xchg
test
dec
mov
lahf
outsb
mov
cmp
mov
imul
repz
mov
jne
stos
push
sahf
pushf
mov
adc
aam
fbstp
fbld
xlat
cmp
push
xchg
and
jecxz
aam
lcall
dec
push
push
aad
test
sbb
xor
dec
jbe
xchg
jp
or
popf
repnz
pop
cs
clc
aas
add
pop
cmp
cld
add
outsl
mov
rol
cwtl
popa
jle
das
dec
jmp
pop
add
testb
call
mov
dec
movb
xchg
mov
loope
lahf
repz
movsl
aam
andl
sbb
pop
jnp
dec
adc
in
adc
flds
jae
push
pop
and
or
mov
xor
repnz
pop
rcr
test
mov
sub
sub
mov
scas
js
gs
test
out
stos
sub
cmpsl
jmp
xor
push
and
xchg
mov
sub
aas
and
mov
cs
sbb
sarl
xchg
jo
dec
jmp
out
pop
xchg
mov
and
cli
subl
pop
adc
movsb
lret
sti
pavgb
fsubl
jmp
popa
in
jge
adc
mov
movsb
mov
stc
mov
stc
mov
inc
xor
pop
sub
or
pop
pop
popa
sbb
aad
pushf
loopne
leave
jl
in
mov
push
out
loope
int
jo
sbb
int3
dec
sub
inc
mov
cli
mov
mov
arpl
rorl
push
inc
jb
xchg
xor
add
scas
pop
subl
push
rclb
out
xchg
push
sbb
in
es
enter
or
or
lcall
nop
add
cmc
mov
cmp
dec
cltd
shrl
pop
xor
push
xchg
push
adc
cmp
pop
inc
sbb
mov
push
mov
dec
cmp
inc
mulb
jno
mov
pop
xchg
das
lock
into
sub
jge
mov
push
ss
sub
mov
test
outsl
outsb
mov
inc
mov
mov
dec
pop
out
ljmp
push
mov
mulb
cwtl
incl
cmpsb
add
les
lods
pop
adc
sub
cwtl
and
pop
loop
or
cmp
jnp
fcomp
mov
mov
or
mov
add
push
in
jp
mov
or
dec
aas
mov
sbb
arpl
dec
mov
pop
push
mov
scas
cld
mov
xchg
jecxz
xchg
push
insb
sahf
push
mov
ss
dec
pop
idiv
cwtl
mov
mov
adc
dec
fdivl
push
xchg
mov
repz
jle
pusha
insb
vmwrite
fisttpl
shrl
les
push
lcall
cwtl
test
xor
cmp
movsl
roll
lea
fs
inc
in
inc
add
cmp
jb
popf
addb
sub
cmpsl
pushf
mov
lea
mov
mov
jle
dec
clc
ret
push
les
loop
cmpsb
pop
fistpll
popf
push
add
jno
fildl
in
out
pop
iret
dec
inc
stc
mov
js
movsb
jl
jbe
aad
sbb
mov
adc
scas
xchg
or
ret
test
dec
mov
xor
scas
push
jnp
dec
mov
lcall
or
and
popa
sub
shlb
shrb
cs
cltd
pushf
sbb
sub
fnstenv
mov
sbb
ljmp
jl
mov
jne
icebp
xchg
jp
cs
cmc
loopne
xchg
xchg
or
jne
daa
nop
ss
sbb
dec
aaa
and
loopne
js
mov
adc
sbb
int
mov
cmp
fldt
das
mov
je
aas
out
mov
or
jne
or
mov
mov
cmp
mov
loop
sub
fsubrl
testb
scas
cwtl
mov
cltd
imul
lret
sub
dec
add
fdivl
push
xchg
daa
lea
stos
pop
aad
data16
sub
sbb
jl
jbe
push
push
out
push
jle
test
inc
sbb
loope
sub
movsb
imul
jnp
push
insb
mov
add
fadd
cmp
icebp
les
xor
filds
lock
imul
push
insl
and
in
ficoml
cmp
mov
push
dec
xchg
lock
repz
aas
cltd
push
aam
xlat
xor
pop
sub
pop
test
mov
and
popf
push
and
sub
or
mov
pop
out
insb
cli
clc
mov
adc
and
imul
xchg
dec
test
loopne
mov
push
mov
mov
mov
subl
outsb
pop
jle
flds
mov
lock
popf
cld
in
xor
or
and
andb
mov
xchg
jp
std
add
xchg
nop
push
in
lds
mov
pop
push
cmpsl
aas
arpl
pop
pop
cli
or
cmp
push
in
pop
jle
int3
pop
imull
icebp
pop
xchg
jbe
in
xor
in
loope
push
sahf
mov
sbb
mov
or
inc
lods
hlt
sub
sbb
add
rcl
mov
mov
lods
das
xor
int3
aam
xchg
mov
jmp
cmp
add
lods
lods
or
fisubrl
sbb
jmp
das
cld
scas
inc
rcrb
xor
aaa
addr16
orb
pop
ja
inc
xchg
call
iret
pop
mov
out
mov
inc
cwtl
data16
xor
jecxz
idivb
stos
jne
inc
adc
out
gs
cmpl
stos
cli
dec
jo
scas
movsl
inc
adcb
std
sub
xchg
or
test
xchg
xlat
push
add
cmp
inc
cli
aaa
mov
lcall
pushf
arpl
jge
and
and
lcall
dec
push
add
jno
mov
outsl
and
addr16
icebp
lods
or
ficomps
cltd
rcrl
inc
or
add
sbb
pop
lods
shrb
cmp
lods
popa
subl
adc
push
out
pop
inc
xchg
add
jns,pn
shlb
outsb
cmpsb
sub
pop
push
dec
mov
inc
xor
xor
fdivrs
jo
lock
icebp
dec
imul
sub
cmp
in
pop
jo
mov
setae
repnz
cwtl
iret
pushf
hlt
outsb
jno
ficomps
fnstenv
leave
stos
sub
jmp
lock
mov
outsl
mov
js
xor
loopne
mov
pop
divl
mov
xchg
test
call
inc
cmp
jge
or
cmc
mov
mov
jbe
sbb
lret
repnz
stc
xchg
ljmp
inc
std
or
jmp
push
mov
sbb
test
add
subl
ljmp
stos
stos
in
adc
out
addr16
lret
sub
lock
or
movups
and
leave
jge
test
in
sarl
stc
lds
stc
lcall
out
mov
pop
push
add
cli
xchg
in
and
sub
push
out
stos
mov
sbb
mov
lret
hlt
xor
mov
mov
scas
inc
inc
mov
into
add
out
loop
mov
sbb
cmpsb
ss
push
xlat
mov
hlt
add
ljmp
out
push
jmp
sbb
xchg
loope
fcoml
or
cmpsb
jns
out
cmc
xchg
mov
mov
fs
adc
testl
leave
gs
stos
ret
add
jb
scas
idivl
insb
sub
ret
dec
fwait
push
pop
dec
shrl
ja
push
push
ret
dec
mov
dec
jmp
pmaxsw
into
hlt
out
and
mov
push
sbb
pop
cmc
jbe
mov
popa
jns
ja
cmpl
stc
fstpl
es
sbb
mov
push
sti
add
and
xchg
jp
xor
mov
sub
sub
cmpsb
pop
adc
stc
mov
stc
inc
pop
jne
xor
iret
push
ficompl
adc
in
sbb
mov
jle
mov
mov
sbb
cli
jg
clc
mov
mov
push
int
pop
lret
fbld
data16
data16
int3
xchg
jp
bound
mov
lods
mov
repnz
and
push
testb
testl
pop
mov
loopne
or
sbb
fcoml
popf
pop
loopne
pushf
out
and
stos
loopne
fwait
dec
inc
xor
xor
inc
icebp
sub
mov
andl
inc
pop
loopne
push
dec
and
jg
xlat
and
jmp
mov
and
pop
into
ss
cld
xor
xor
pop
adc
ja
addr16
pop
ljmp
std
pop
fstpt
jae
lds
xchg
sbb
aam
ret
imul
mov
xchg
inc
test
movsb
jge
lret
xor
sub
dec
mov
cmp
mov
popa
sbb
nop
adc
mov
div
bound
mov
sbb
add
incb
cltd
and
mov
fdivrs
sbb
popf
iret
fstl
lcall
fsubl
js
xchg
or
scas
push
xchg
ds
jecxz
mov
push
sbb
xchg
dec
cmp
fildll
int
lret
pop
in
insb
add
xor
test
xor
jmp
adc
sbbb
dec
sub
mov
xor
loop
add
mov
mov
push
addr16
adc
mov
cmp
lods
sub
jge
ret
pop
adc
push
test
push
int
addr16
mov
xor
aaa
mov
lds
sub
xor
xor
out
sbb
fbld
mov
xchg
loopne
stos
dec
adcb
jb
movsl
loop
dec
push
cmp
gs
cs
sbb
adc
adc
dec
in
int3
orb
lods
lcall
lcall
jle
jb
and
jns
mov
rcrl
mov
ficoms
loope
call
cld
mov
insl
push
insb
sub
pop
subb
cmpsb
pushf
dec
adc
mov
fmull
into
fisubrl
xor
andl
mov
test
subl
mov
jbe
inc
lds
xchg
fs
movsb
mov
cmp
cltd
call
ficomps
fs
push
arpl
push
jge
dec
cmp
mov
ss
or
popa
xor
sub
mov
shrb
lret
sub
negl
mov
adc
sahf
cmp
push
stc
in
xor
cmp
icebp
dec
popf
je
mov
xchg
movsl
add
fidivs
jae
test
xchg
loopne
or
and
pop
adc
mov
fnstsw
fmull
add
jo
fidivrs
push
fsubr
aas
dec
call
push
jo
cmp
sub
xchg
imul
repz
out
pop
or
and
sbb
fnstenv
das
mov
mov
pop
test
lea
mov
xor
jmp
jnp
popf
sbb
mov
push
idivb
mov
jle
jp
hlt
sbb
xchg
cmpsb
pop
sub
imul
sbb
xor
xchg
push
inc
push
adc
mov
sub
pop
xor
insl
xchg
mov
aas
repnz
mov
movsl
lahf
ret
mov
jmp
mov
cmp
xchg
cmp
and
xor
sbb
inc
lods
or
test
jnp
and
fucomp
sbb
out
push
sub
ss
dec
mov
cmp
filds
and
out
or
mov
inc
lods
jl
scas
lea
fildl
mov
xchg
lock
xchg
cmp
mov
int3
push
movb
push
test
in
int
sbb
xchg
jle
inc
or
popa
in
mov
ss
inc
mov
dec
jbe
loope
dec
jb
adc
add
jmp
ret
enter
mov
jno
enter
mov
mov
popa
or
pop
stos
jp
mov
xor
jecxz
aad
push
int3
shl
pop
mov
jg
hlt
imul
mov
jne
pop
aad
test
ret
or
push
stos
call
cltd
cmpsl
out
mov
mov
std
repz
loope
cli
push
je
stos
mov
mov
xlat
jmp
loopne
sbb
sbb
rolb
int3
dec
add
cmc
in
in
test
mov
dec
outsl
pop
aam
pop
int3
adc
sub
pop
cmp
call
aas
lret
leave
hlt
imul
inc
fs
test
fwait
mov
out
or
adc
rorl
sbb
add
inc
add
mov
ja
ljmp
pop
cmp
push
pop
cmp
xchg
inc
movups
or
popf
jnp
push
mov
imul
sub
subl
inc
in
add
adc
mov
in
jns
adc
cmp
sbb
sub
pop
test
inc
je
stos
sub
popa
stos
testb
cs
inc
mov
or
mov
xchg
testb
push
ja
push
divb
fdivl
jbe
and
nop
pop
dec
scas
mov
in
pop
out
fldcw
fcmovne
cmp
negl
push
lret
dec
add
testl
mov
sub
test
pop
mov
out
mov
mov
cmp
and
repnz
jmp
mov
mov
push
mov
pop
je
jmp
test
or
sub
xchg
sbb
popf
cld
cmc
lods
popa
xor
mov
pop
mov
adc
rclb
cltd
lods
add
jns
andb
xor
lahf
mov
xlat
mov
popf
popf
jle
stos
cmpsl
es
fs
cwtl
loope
add
sub
ja
ss
icebp
and
in
and
aam
xchg
clc
leave
fs
mov
mov
and
fcom
stos
lds
push
jmp
jnp
push
mov
cmc
adc
int
jae
xchg
fistpll
adc
mov
jbe,pn
mov
fmull
fwait
mov
add
xor
push
dec
aad
push
xchg
sub
cs
cmp
xchg
mov
pop
pop
or
mov
fucomi
mov
jo
fdiv
fdivs
adcb
addr16
xchg
pushf
aad
arpl
push
mov
inc
xchg
negl
xor
fnstcw
and
cmp
popa
mov
out
out
lods
push
ljmp
enter
scas
inc
out
dec
scas
push
mov
mov
fisubrl
xor
xor
mov
add
outsb
add
jbe
ss
scas
lock
leave
xchg
mov
fs
nop
popf
das
xchg
push
shlb
sub
mov
lods
adc
sbbl
sti
mov
test
cld
daa
sub
xchg
sahf
dec
push
movsl
mov
jno
lods
rcrl
stos
mov
pop
loope
jo
mov
jb
mov
mov
mov
lods
sub
or
inc
cli
fldl
xor
push
sbb
int
int3
fs
enter
and
movsl
stos
push
mov
loopne
das
jmp
jnp
into
mov
xor
mov
bswap
test
jae
pop
in
int
pop
sbb
push
or
xchg
adcb
aam
dec
clc
jno,pn
jbe
sub
push
add
movsl
cmp
lret
jp
ret
lods
jb
xchg
pusha
add
fisttps
mov
pop
fbld
dec
cmp
jecxz
dec
push
and
mov
or
js
pop
adc
dec
jmp
jp
sbb
inc
and
das
add
sbb
bnd
adc
jnp
loopne
push
xchg
push
movsb
mov
movsl
sub
inc
and
ja
test
jmp
cltd
jmp
mov
mov
adc
mov
sub
lds
jno
mov
adc
rcrb
scas
pop
enter
icebp
out
add
lret
and
jnp
movsb
addr16
ja
push
inc
mov
lods
shlb
mov
shll
ficomps
stc
int
push
sbb
cmpsl
sbb
ja
subb
sub
and
mov
add
ret
pop
mov
cmp
sub
add
popa
adc
adc
cld
jle
imul
dec
fildll
into
mov
mov
out
xor
dec
test
loope
int
and
xor
mov
sbb
popf
cmc
test
pop
sbb
rclb
add
lods
lret
loopne
jmp
mulb
insl
cli
call
lea
cmpsb
or
mov
ja
loope
xchg
mov
std
fwait
lret
mov
mov
and
insl
cli
mov
jle
pushf
int3
sub
mov
pop
rcl
je
scas
js
xor
cmpsb
ljmp
mov
movsl
repnz
movsb
jle
cmp
testl
daa
int3
mov
xchg
mov
test
in
in
pusha
daa
jno
and
mov
dec
cmp
mov
add
or
stc
testl
fdivrs
inc
ss
shlb
add
ret
fnstenv
lock
fcoms
ror
cwtl
std
add
jmp
pop
adcb
bound
test
loopne
fisttpl
mov
xlat
lock
jecxz
xchg
es
mov
cmc
and
fildll
xchg
xor
js
call
je
test
mov
jae
or
sub
repnz
sahf
pop
sbb
adc
into
jmp
xor
sbb
movsl
pop
and
adcl
pop
jnp
in
std
lods
mov
sub
mov
das
add
pushf
sbb
or
and
insb
push
sub
xchg
cmove
les
dec
in
in
inc
in
xchg
psrld
adc
fwait
notb
subb
nopl
and
test
mov
stc
fstpl
fs
insl
cmc
mov
mov
int
fs
arpl
cmc
insl
movsb
cs
jmp
popf
jb
cmc
aad
sar
and
ja
gs
dec
pop
inc
jne
ret
nop
mov
pop
pushf
movsl
adc
lcall
addr16
clc
adc
pop
add
cmc
xor
shlb
jmp
pop
icebp
and
repz
jmp
mov
add
aas
xchg
aam
jns
jo
jg
scas
xlat
dec
aaa
clc
roll
mov
mulb
lret
das
lcall
cmp
imul
test
ljmp
xor
jmp
dec
std
sbb
fyl2xp1
push
outsb
mov
and
das
cs
addr16
jecxz
jge
divb
push
stc
and
dec
mov
lods
iret
adcl
insb
shrb
xchg
pusha
mov
push
lods
jge
push
jo
mov
repz
xor
scas
call
stos
xchg
pop
gs
mov
mov
inc
inc
mov
mov
dec
xor
insl
or
out
mov
mov
ror
mov
repz
imul
lret
cltd
hlt
xor
popf
shll
lea
aad
xor
jae
mov
jne
xor
and
shll
push
in
adc
sbb
jp
mov
shrl
cmp
es
cmp
fsubrs
nop
and
jge
iret
add
subb
jmp
outsl
jle
fcoms
xor
stc
stc
dec
ja
pushf
mov
xchg
sub
adc
sub
fiaddl
pop
icebp
sahf
out
shll
pop
fs
in
dec
dec
out
popa
push
or
xor
sarb
xchg
inc
mov
and
or
sbb
fdivl
cmp
mov
lds
and
test
outsl
add
cltd
and
xor
inc
movsl
shll
jno
scas
push
sahf
in
jne
xchg
inc
or
test
fucomip
iret
sbb
aas
push
stos
fidivl
jg
jns
ljmp
popf
xchg
in
sub
lods
jmp
rcr
push
inc
jns
lods
movsb
mov
mov
vcvtps2dq
xor
sub
dec
mov
ja
mov
cmp
sbb
pop
cmc
inc
dec
icebp
inc
mov
or
add
dec
dec
outsl
cli
pusha
cmp
pop
sub
fistl
xchg
mov
negl
fdivs
cmp
mov
popf
outsb
mov
scas
add
mov
hlt
fadds
push
mov
add
addr16
cmp
subl
pop
adc
xchg
mov
scas
pop
mov
inc
je
out
and
mov
cld
sbb
scas
into
int3
cmp
inc
push
into
orb
fcomps
ret
dec
xchg
mov
xor
fs
fs
daa
mov
jnp
jg
pop
and
jb
add
jnp
sbb
push
out
add
daa
sub
into
dec
push
dec
and
jns
insl
and
test
jp
jns
movsb
add
adc
push
pop
lahf
dec
adc
leave
out
lods
and
mov
hlt
push
pop
test
stos
shr
mov
push
fbld
bnd
mov
cmpsb
arpl
repnz
sbbb
xchg
sub
cmpl
andb
mov
scas
nop
fsubl
adc
out
imul
dec
ficomps
push
push
dec
push
jbe
mov
add
outsb
fxch
loope
aaa
popf
jo
dec
in
or
xor
icebp
cmp
ja
pop
jmp
jno
adcl
sbb
mov
adc
pushfw
or
enter
dec
stos
andb
inc
lcall
sub
xor
fdivrl
sub
aaa
pop
ss
popa
rolb
push
in
pop
push
dec
out
jg
xchg
das
js
jae
outsl
xor
rorl
xchg
test
jmp
cmpsb
movsl
lods
or
and
mov
test
push
lods
int
jo
mov
stos
scas
mov
daa
lods
ds
jl
pop
dec
out
push
fldl
leave
loopne
pop
fnstenv
jns
pop
add
add
or
or
sub
notb
std
iret
stc
cmp
in
scas
dec
xor
push
and
cltd
jns
fxch
sti
into
xchg
les
push
cltd
and
push
notb
add
inc
mov
insl
pop
add
mov
mov
cmp
icebp
cwtl
test
sub
sub
xor
xchg
sbb
push
mov
cld
aad
mov
loope
mov
xor
dec
loope
scas
out
pop
addl
mov
fidivs
cltd
jb
jnp
subl
jo
cmp
lret
repnz
out
add
test
push
mov
sbb
std
mov
push
sub
gs
lods
pop
xor
cmpb
pop
test
adc
or
es
mov
add
jecxz
jb
xor
lret
mov
popa
test
shlb
aam
pop
mov
std
mov
test
popf
pop
addl
jmp
sti
push
cmp
test
loopne
les
or
pop
aad
popf
dec
lds
dec
lahf
mov
int
addr16
xchg
test
inc
arpl
lock
scas
cmp
imul
dec
cmp
ret
sub
cli
xchg
mov
shlb
ljmp
leavew
dec
lds
xor
in
movsl
mov
testl
push
cmp
cmp
xchg
mov
lcall
in
fbld
inc
int3
mov
outsb
push
faddp
pop
mov
inc
add
cs
in
jl
jno
dec
out
mov
sub
lock
inc
pop
icebp
inc
push
dec
inc
mov
incl
or
cltd
fstl
mov
lock
push
sbb
dec
shll
lret
scas
insl
cmp
arpl
in
pusha
xor
xchg
pusha
ljmp
stos
jecxz
ja
fwait
inc
shrl
jae
mov
cmp
cmp
ja
fidivs
xchg
fbld
je
jecxz
jmp
dec
daa
mov
mov
push
mov
cmp
or
mov
or
icebp
aam
stc
test
xor
mov
adc
sbb
or
out
jns
inc
test
filds
mov
addb
imul
test
fcomps
mov
mov
and
add
pusha
hlt
arpl
subl
cmp
cmpsl
cs
out
adc
mov
mov
sti
mov
cmp
inc
sbb
adc
mov
es
sbb
add
push
sbb
push
movsb
add
dec
mov
rcl
xor
divl
icebp
xchg
sub
stos
out
mov
nop
mov
jp
xchg
xor
mov
fidivl
jbe
lods
xchg
out
xchg
jecxz
inc
jns
cmp
repz
push
adc
std
mov
test
fsubl
mov
push
sub
sbb
push
sbb
jl
cld
insl
jge
jae
popf
test
mulb
mov
lahf
loop
mov
or
add
test
stos
pop
and
js
jo
mov
pushf
pop
sub
inc
add
dec
sbb
addr16
mov
dec
popa
push
push
cmp
in
ja
cmp
pop
movsl
push
mov
or
ljmp
sub
test
mov
imul
das
inc
push
lods
push
jo
or
dec
cs
in
push
inc
push
addb
jmp
mov
movsl
addl
mov
mov
push
jns
xor
mov
into
and
mov
push
je
nop
cltd
insb
dec
sub
mov
xchg
negb
inc
aam
mov
sub
das
ljmp
rorb
clc
cmp
jbe
or
insl
out
inc
mov
and
in
iret
mov
test
sbb
jg
es
sub
ret
pop
add
jg
mov
sbb
sbb
scas
dec
or
and
jo
in
bound
lds
mov
outsb
outsb
loope
xchg
subb
ja
fscale
dec
cmc
cmp
mov
ss
xlat
jmp
iret
or
push
loop
sarl
sub
push
jmp
adc
shlb
cmpl
pop
ret
mov
cli
mov
aam
loop
js
dec
add
arpl
mov
push
aaa
or
sti
dec
out
fisubrl
fstpt
push
push
fsub
enter
xor
xor
lods
leave
add
sub
repnz
dec
fprem
jns
cmpsb
hlt
cmpsb
mov
hlt
scas
adc
rclb
adc
mov
aam
int
inc
daa
mov
lock
loope
mov
push
sbb
fiadds
mov
xlat
pop
jg
sahf
pop
cwtl
arpl
push
imul
je
in
ljmp
aam
shlb
adc
fwait
mul
dec
pop
loop
cwtl
adc
sbb
mov
or
and
inc
shrb
xchg
add
repnz
aaa
adc
lock
push
nop
or
push
into
mov
add
cmc
jb
lret
out
scas
inc
mov
rorl
iret
adc
xor
pop
mov
sbb
ret
and
cmpsb
shl
clc
js
jmp
xchg
pop
jb
and
push
adcl
push
int3
mov
outsl
adc
dec
mov
std
xchg
lds
push
mov
jle
xchg
push
xor
and
adc
lock
push
orl
cmp
fsub
out
mov
sbb
adc
imul
mov
inc
dec
decb
int
xchg
popf
out
dec
or
cltd
test
inc
jbe
add
xor
inc
je
push
xchg
dec
sbb
xchg
inc
or
aam
imul
unpcklps
rcr
add
mov
sbb
ds
adc
mov
rcrl
mov
addb
stc
mov
lock
ss
xchg
stos
push
push
add
mov
lods
mov
cmpsl
xchg
or
mov
push
imull
jp
rorl
stos
push
fcmovb
inc
mov
cmp
push
mov
and
ja
mov
add
pop
ds
std
sub
in
sub
mov
call
test
and
imul
arpl
mov
push
cmp
fnstenv
push
lea
loopne
sub
jne
mov
jle
jno
insb
scas
pop
pop
mov
sub
push
in
adc
xchg
xor
mov
add
ror
inc
xlat
cmp
inc
mov
pusha
sub
pusha
jne
mov
rcrb
add
js
cmp
dec
sahf
pop
push
int
jl
lahf
inc
loop
push
and
cltd
adc
sub
fdivl
sub
iret
iret
leave
push
and
jmp
fcoms
cwtl
jno
mov
sub
xor
jbe
lret
iret
push
fsubrs
push
or
push
cmp
mov
xor
xorl
push
cmp
inc
dec
leave
xchg
loop
xchg
xchg
fiadds
sub
pop
sbb
jmp
out
jo
imul
cs
les
jle
addr16
insl
dec
cmc
jns
push
inc
push
imul
xchg
xor
cld
mov
cmp
inc
popa
out
je
xor
stos
jmp
aad
and
fnsave
ljmp
xchg
push
xor
xchg
dec
sbb
leave
mov
pop
push
xlat
int3
push
fidivrl
int
mov
cld
test
ljmp
es
pop
loop
fldl
lcall
pushf
xchg
or
test
push
testb
out
popa
cmp
sub
sub
xchg
xor
movsl
mov
in
andb
xlat
sbb
loop
enter
dec
mov
pop
cmpl
inc
loop
gs
pop
sub
adc
inc
lods
mov
mov
jmp
sbb
mov
dec
daa
cld
mull
xchg
xor
imul
movsb
mov
sub
jo
mov
dec
inc
outsl
gs
xchg
sbb
push
pop
xchg
jle
sbb
inc
push
jno
dec
pop
push
sbb
xchg
pop
popf
sbb
inc
mov
adc
cmp
jp
jmp
aad
cwtl
pop
push
or
ret
fsts
inc
out
add
sbb
push
xchg
int3
jae
and
xlat
jo
add
jo
jmp
cmp
imul
fcompl
or
cmpsl
repnz
lds
in
dec
jnp
rclb
dec
sub
enter
jae,pt
mov
dec
popa
testb
jg
jp
out
pop
pop
push
pop
mov
test
add
cmpsb
xchg
ds
push
loopne
pop
push
and
aas
in
sbb
mov
pop
clc
push
push
stos
outsl
xchg
or
mov
inc
sbb
mov
inc
fs
sti
int3
pop
loopne
popa
test
jno
inc
repz
jg
inc
mov
loope
testl
cmp
les
or
test
push
fcmove
sbb
les
dec
pop
inc
test
inc
clc
dec
cmp
bound
add
shlb
shlb
push
dec
pop
stc
sbb
inc
jns
pop
movsl
add
in
iret
cmp
push
xchg
fs
jge
pop
jne
cmp
mov
dec
or
clc
lods
ret
in
not
inc
push
xor
or
jle
inc
push
nop
cli
bound
out
pop
fists
mov
sbb
daa
out
int3
imul
adc
jg
decl
pusha
adc
popf
xor
sub
xchg
repnz
lcall
xor
fimuls
cmpsb
decb
sbb
pop
jle
pop
movsl
jl
jmp
sub
sub
push
in
sysenter
shlb
imul
push
ror
xor
cmp
pop
pop
lahf
repnz
lock
add
stos
cmp
jo
jg
adc
xchg
subl
popf
movsb
stos
mov
mov
dec
xor
xor
jno
aad
xchg
jge
jl
lea
or
inc
xor
lahf
fwait
push
mov
xorl
cmpb
adc
fldl
cli
push
push
dec
inc
cmp
movsb
lea
in
movsl
mov
push
loop
push
adc
cmp
es
data16
hlt
pusha
imul
push
icebp
cmp
nop
js
mov
xchg
repz
inc
or
xchg
add
call
xchg
pop
in
lods
adc
mov
mov
daa
pop
popf
roll
and
aas
mov
addr16
and
test
jns
dec
or
dec
sbb
or
ja
xor
pop
and
xchg
inc
and
xor
push
pop
repz
ja
in
movsl
add
es
and
inc
inc
addl
rolb
mov
arpl
subl
sahf
stc
cltd
aas
mov
lret
pop
cs
dec
and
push
inc
int
icebp
jmp
iret
imul
icebp
xchg
xchg
dec
push
popa
xor
sbb
dec
sbb
pop
xor
pop
push
push
add
cltd
fldt
and
insl
decl
sub
inc
lahf
hlt
ret
mov
pushf
movsl
arpl
push
insl
shl
mov
mov
dec
out
iret
je
inc
xor
xor
mov
xchg
cmp
or
inc
rcrb
es
pusha
scas
cwtl
mov
fwait
jl
ret
ficoml
sub
jle
mov
sbbl
pusha
pusha
pop
lcall
or
mov
stos
pop
iret
pop
and
mov
add
leave
push
add
testl
inc
cmpsb
fstps
adc
stos
popw
daa
ss
jo
mov
ds
pop
test
and
sub
lret
icebp
imul
je
shl
mov
mull
push
cmp
jb
mov
mov
in
xor
cmp
sub
mov
movsl
mov
ljmp
dec
mov
rolb
adc
pop
pop
and
push
je
scas
fwait
into
mov
cmp
adc
jno
xor
insb
add
data16
inc
int
ret
scas
dec
mov
inc
and
or
stos
jns
outsl
dec
mov
pushf
cmp
daa
lret
xor
xchg
and
sub
mov
cltd
jns
xchg
lods
imul
jmp
push
pop
and
mov
xchg
notl
aam
xchg
xchg
fs
out
andb
xor
sbb
adc
xchg
mov
and
test
jnp
pop
jle
std
ret
popf
or
lods
in
loopne
mov
jecxz
jne
sbb
jmp
cmp
mov
std
xlat
and
jecxz
decb
inc
inc
testb
les
mov
jp
sub
daa
xchg
xchg
mov
xchg
push
jbe
jle
jbe
fcmovnb
sbb
inc
stos
inc
push
xchg
xchg
push
insb
dec
mov
popf
mov
xchg
adc
negb
bswap
cli
xchg
mov
pop
xchg
pop
lahf
es
adc
jae
sbb
rcrl
ds
cmc
sbb
add
cwtl
push
test
and
std
push
pop
xlat
mov
int
mov
pop
sub
adcb
adc
sub
dec
mov
or
out
sti
dec
loopne
pop
jns
lret
mov
dec
pusha
xor
mov
inc
pop
inc
test
shl
inc
or
mov
add
xchg
and
add
push
xor
and
mov
adc
es
cmp
popa
nop
ljmp
lret
xor
pop
in
ret
repz
xor
jmp
inc
aam
jne
loop
fdivl
ret
inc
inc
iret
xor
les
xor
or
out
ss
xchg
repz
xor
ret
jg
hlt
push
mov
jl
mov
mov
xchg
cmp
sbb
insb
mov
stc
filds
sbb
imul
or
arpl
cmp
pusha
xor
aam
lret
ds
mov
jmp
lret
jge
jo
inc
aam
mov
cltd
ficomps
xorl
jo
ret
jge
lods
cmc
cmpb
mov
fdiv
loopne
lods
dec
icebp
pop
orl
cmp
mov
jbe
imul
mov
cld
mov
test
and
pop
cmp
lods
test
cmp
dec
or
addr16
jge
push
lcall
sub
in
xchg
jp
test
cmp
lret
stc
push
movsl
loope
call
sarl
mov
fnstsw
lock
mov
push
movzwl
jge
cld
pop
jp
jl
lcall
movsb
test
jne
sbb
lret
mov
mov
ja
arpl
cmp
or
inc
ja
in
js
outsl
xchg
or
cmp
push
imul
rclb
sub
pop
gs
fwait
mov
add
push
and
mov
pop
sbb
fcoml
cmpsb
es
xor
leave
scas
lock
cli
mov
addl
ja
stos
dec
mov
add
push
jle
mov
sbb
iret
push
xorb
push
inc
push
insl
lahf
inc
cmp
pop
out
pop
out
fdivrs
lahf
adc
dec
xlat
push
add
in
fisttps
nop
call
iret
les
loop
or
sbb
popf
jns
testl
in
movsb
mov
xor
out
xor
movsb
xchg
test
mov
ret
pusha
pop
cmc
cmp
ret
cld
arpl
pusha
xchg
sti
pop
cmp
imul
es
cs
xchg
inc
negl
xor
cmp
pop
aam
or
mov
push
sub
pushf
add
pushl
jbe
jecxz
fsubs
dec
enter
test
ljmp
mov
shll
stc
push
ds
bound
xor
scas
jno
mov
fistpl
xchg
fistps
out
stos
cmc
loope
inc
xor
add
xchg
mov
sub
jae
sarl
out
xor
mov
stos
push
iret
adc
loop
sbb
jecxz
mov
or
xchg
mov
scas
es
and
daa
xor
icebp
xor
push
je
out
mov
jbe
jge
shlb
decb
fstl
mov
adc
sbbb
js
aam
inc
sub
shr
sub
xor
xlat
mov
push
movsl
das
in
ja
fcoms
daa
mov
lds
pop
mov
mov
xor
fldt
ret
aam
cmp
mov
cltd
aas
out
lea
inc
std
push
das
pop
add
jnp
pop
fs
lea
xor
out
cmp
ret
pop
mov
mov
adc
or
jae
inc
cmp
leave
jno
insl
and
ror
scas
pushf
cmp
cmpsb
outsl
dec
mov
clc
roll
mov
adc
push
stos
dec
push
fstpl
fcoms
pop
cmpsl
repnz
icebp
mov
and
sbb
out
and
daa
test
push
add
add
bswap
enter
cmp
clc
adc
mov
cwtl
sbb
inc
insb
gs
and
lods
les
fcomps
lods
add
xlat
jmp
jecxz
push
jmp
xchg
icebp
or
in
xor
jns
inc
cli
cmp
imul
or
cmc
jmp
and
stos
std
xor
ret
fs
and
add
or
out
mov
inc
scas
jmp
fcmovbe
arpl
arpl
in
cld
xor
leave
pop
rorb
inc
inc
adcl
in
cmp
push
test
cmp
or
pop
push
cmp
mov
xor
push
stc
mov
xor
dec
jle
jecxz
test
adc
repz
mov
sub
xchg
ret
pop
popf
cs
jb
push
and
js
mov
xchg
push
xchg
jmp
xor
cmpsb
xor
ret
lock
int3
fs
lds
movsb
orps
and
call
mov
iret
mov
and
jnp
sub
pop
ret
out
dec
jp
stos
xchg
fbstp
push
add
imul
std
xchg
sbb
jmp
pop
adc
out
clc
aaa
sub
hlt
add
jmp
and
pushf
push
xchg
jbe
push
dec
and
cmpsl
sub
or
and
stc
sub
mov
adc
mov
xchg
mov
adc
sbb
jge
add
popf
adc
mov
fwait
sub
dec
jb
sub
pushf
cmp
les
dec
xor
in
movsb
pop
mov
add
xor
jle
dec
les
adc
mov
dec
xor
cwtl
dec
jbe
jg
dec
or
cmpl
out
movsb
jb
cmpsl
pop
adc
outsl
aaa
lret
in
lock
mov
clc
mov
and
and
mov
sbb
sahf
xchg
repz
mov
iret
sub
mov
ficomps
cmp
repnz
hlt
out
sysexit
pop
pop
mov
leave
xchg
dec
cmc
insb
lcall
iret
jae
adc
js
push
ljmp
pop
aas
mov
mov
icebp
mov
into
xchg
xor
add
or
inc
adc
xchg
outsb
adc
push
ss
hlt
clc
fstpt
mov
mov
jle
aas
mov
or
mov
xor
mov
je
dec
jne
pop
rol
outsl
push
mov
stos
aam
fs
test
push
pop
lahf
sub
ss
aad
inc
add
dec
icebp
mov
mov
mov
test
push
mov
pop
push
sub
cmp
xchg
scas
and
adc
adc
dec
mov
aaa
cmp
jmp
ret
jmp
jp
pop
cmp
sbb
mov
and
xchg
or
add
cltd
dec
xchg
adc
popf
fildll
outsb
push
not
jae
push
sbb
dec
lahf
mov
cltd
out
cltd
push
sbb
mov
emms
mov
aaa
pop
mov
mov
mov
dec
inc
inc
jmp
sti
imull
mov
ret
pusha
gs
test
test
and
dec
out
push
idivl
cmpsb
dec
jle
aaa
loop
shrl
cld
fisubrs
inc
mov
hlt
mov
movsl
xor
dec
inc
adc
pop
push
subl
adc
xchg
stos
add
mov
dec
mov
and
jnp,pn
test
in
mov
push
and
add
push
scas
lock
jle
push
jp
mov
jge
push
and
lret
sub
cmp
add
jle
ret
push
jmp
rorl
pop
mov
daa
push
mov
mov
jne
mov
lods
lods
mov
jle
test
sahf
mov
fistps
push
jns
pop
inc
pushf
sbb
sbb
pop
mull
popl
inc
dec
sub
jecxz
repz
dec
int3
mov
jmp
ljmp
cmp
mov
add
jnp
mov
xor
pop
xlat
arpl
inc
iret
shl
shrb
test
mov
pop
pop
std
pop
push
ret
ret
push
jno
push
aas
lods
cmp
xchg
jp
pop
ss
push
pop
dec
push
pop
dec
cmp
jne
fadds
xchg
int
repnz
xor
insl
adc
notb
movsb
pop
push
push
aad
stos
sub
pop
fisttpll
sub
bound
int3
pop
loope
ret
out
imul
lock
popa
inc
mov
loopne
jnp
mov
divl
pop
sti
inc
push
pop
pop
add
loopne
rorl
stos
lock
rclb
ficoms
int
mov
out
sub
mov
popa
xor
inc
xchg
add
ja
cli
into
mov
lods
push
push
pop
mov
subl
lods
fcmove
mov
cmpsl
and
loope
inc
jb
ffree
lock
mov
insb
das
pop
jmp
aaa
mov
aad
jge
pusha
sbb
int3
sub
in
mov
fimuls
push
mov
ds
mov
inc
cs
mov
mov
xchg
xor
mov
push
lret
add
mov
mov
push
inc
data16
repz
repnz
sbb
bound
cwtl
aas
movsl
inc
test
dec
sub
sbb
fldenv
pop
cwtl
mov
mov
gs
and
cld
cmc
mov
xchg
dec
xchg
mov
pop
cwtl
jl
mov
sbb
icebp
rorb
dec
jns
insl
loop
add
cltd
and
xlat
ljmp
inc
das
stos
jge
ja
out
pushf
pop
fwait
loop
add
adc
push
or
ss
add
mov
and
dec
inc
aad
push
cmp
mov
mov
out
loop
pop
jmp
aad
push
adc
out
adc
mov
pushf
pusha
cmp
lret
sbb
or
jl
daa
nop
xor
lods
push
lcall
arpl
shlb
aas
mov
ret
pop
inc
outsb
or
mov
sbb
pop
fistpll
or
dec
out
ss
push
cmp
test
add
sbb
xchg
inc
outsb
inc
mov
test
lahf
lcall
dec
iret
cli
divb
pop
in
lret
and
arpl
hlt
pop
imul
add
pop
movsb
out
add
addl
dec
mov
push
sbb
or
jno
mov
ret
sub
iret
aas
cmpsl
scas
xchg
divb
ret
clc
pushf
push
outsb
pop
or
mov
dec
or
cmp
jg
mov
dec
decb
xor
popl
xchg
ljmp
movsl
scas
and
addr16
loope
fstpl
popa
or
inc
mov
inc
fildl
negl
orl
fildll
addr16
dec
lret
sahf
xorl
mov
sbb
mov
dec
push
push
push
add
push
scas
call
xor
adc
jnp
or
sbb
or
out
lret
push
xchg
push
jmp
lcall
rolb
cmpsb
dec
push
aad
shll
scas
shlb
and
and
mov
lcall
mov
stc
add
and
leave
or
dec
adc
and
loope
repnz
mov
ret
add
push
shrl
es
and
or
jmp
xor
insl
outsb
test
xor
shll
dec
sbb
mov
push
popa
es
stos
jns
sub
inc
sbb
sahf
clc
stos
pop
jp
push
mov
cwtl
cmpsl
mov
push
xor
nop
mov
rorb
call
ja
pavgw
xchg
xchg
cltd
jg
mov
cli
adc
push
push
repnz
mov
jb
fsubr
mov
outsl
das
popa
sahf
push
sbb
ljmp
pop
mov
or
bound
xchg
sbb
nop
cmp
data16
and
js
insb
xchg
inc
ror
lret
pop
shrl
cmp
insl
ficompl
inc
lahf
je
or
push
dec
insl
inc
rol
cmp
sub
inc
sbb
out
stos
xchg
mov
aas
pop
xchg
xchg
adc
jmp
dec
inc
fdivr
aad
jle
ret
sahf
mov
sbb
jp
jl
push
sarb
repnz
xor
adc
adc
std
fs
movsb
pop
inc
inc
subb
inc
mov
jmp
inc
and
stos
mov
push
mov
shlb
inc
faddp
cmc
sub
shr
sbb
adc
fisttps
jg
pop
fldt
shlb
adc
add
fdivr
shll
outsb
pop
pop
dec
je
mov
mov
mov
xchg
adc
add
and
out
lret
aas
mov
lds
and
insl
imul
xchg
dec
push
imul
mov
in
cld
mov
dec
out
cmp
push
rcr
fcmovu
adc
mov
jmp
push
push
pop
imul
inc
std
fs
fcomp
or
mov
int
ss
insl
call
and
mov
mov
leave
std
movsb
cs
jecxz
int3
push
mov
mov
gs
stos
xor
out
xor
fwait
adc
outsl
leave
cmp
pop
in
lds
inc
loopne
xchg
or
shll
push
sbb
pop
sub
pop
setl
imul
mov
push
dec
push
aaa
aas
ret
or
and
cmp
sbb
and
rcrb
mov
mov
dec
inc
insl
es
pop
pop
push
dec
rclb
add
out
insl
clc
int3
pop
inc
xchg
dec
adc
xor
or
jg
lods
outsl
fdivs
int3
xchg
jb
negl
inc
insb
out
sbb
sbbl
or
in
pop
out
mov
xchg
mov
clc
imul
cmp
jb
xor
add
jae
add
jb
out
shl
decb
mov
fcomip
dec
sahf
cmp
mov
popa
sub
add
push
in
cwtl
adc
cmp
dec
mov
xchg
call
dec
mov
in
mov
push
and
in
pop
adc
imul
sub
mov
xchg
ret
cmc
daa
stc
scas
cmp
sbb
inc
stos
and
leave
dec
loope
xchg
repnz
and
addl
je
stos
jle
pusha
inc
mov
sub
pop
add
add
je
shrl
imul
aad
fldenv
cltd
pop
test
sub
fwait
int
adc
pop
mov
xchg
push
mov
mov
or
cli
imul
in
fsubp
aam
loop
sub
loope,pt
dec
loop
xchg
insl
add
stos
cmovb
ud2
fcomps
cmc
in
mov
sbb
loopne
sbb
push
scas
cmp
inc
insb
clc
rcrl
pushf
sbb
push
jmp
ljmp
jle
add
cmp
rolb
in
mov
test
jg,pt
mov
call
ret
add
pop
inc
out
sbb
add
cs
jne
call
sbb
xchg
hlt
in
cmp
nop
rcll
jo
mov
push
clc
cmp
and
mov
add
stos
stos
cmc
cmp
sub
mov
mov
arpl
jbe
push
pusha
jecxz
sub
clc
lahf
pop
push
in
pushl
add
gs
xor
test
jmp
ss
xlat
xor
jo
out
lods
jecxz
adc
mov
loope
jb
xchg
adc
xchg
sub
mov
in
xchg
and
pushf
fwait
stc
insb
stos
adc
inc
popa
cmc
mov
push
cmp
push
lahf
dec
ret
xchg
fdivrp
dec
les
out
leave
jle
movsb
es
fcmovu
adc
mov
mov
and
gs
mov
test
aas
xchg
pop
loopne
push
mov
in
adc
outsb
fstpl
add
cmpsl
sub
xor
scas
clc
pusha
fcompl
mov
into
jle
pop
imul
push
scas
xor
xor
jmp
insl
jle
adc
es
cmp
mov
cmp
and
jmp
mov
leave
ret
add
je
and
sub
lods
jb
ljmp
loope
je
test
add
loopne
add
rorb
mov
and
mov
jmp
cmpb
mov
or
sahf
and
jns
xor
loopne
jp
xlat
stc
mov
div
in
xchg
adc
push
xchg
in
xor
dec
stos
jnp
sbb
jmp
push
xchg
cltd
stos
popa
mov
mov
xchg
mov
sbb
pop
dec
or
je
push
imul
dec
lcall
movsl
mov
push
ja
daa
push
fwait
rclb
enter
aad
pcmpeqb
dec
out
dec
sub
imul
cmp
insb
cmp
fdivs
imul
xor
xor
adc
inc
test
mov
pop
rcll
push
adc
aad
cltd
ja
lods
mov
icebp
add
fistps
test
add
adc
stc
out
mov
fcoms
inc
mov
inc
xchg
jae
push
and
mov
add
cli
fndisi(8087
and
pop
adc
es
xor
sbb
mov
daa
aad
xor
xchg
mov
mov
fisubrs
dec
cmc
push
int
xor
fs
pop
clc
push
insb
cli
push
adc
rcr
pop
out
in
push
in
ja
add
mov
cltd
push
sub
sub
jne
subb
aam
dec
pushf
call
jl
xchg
fisubrs
movsb
fidivrl
pusha
pop
cmp
xchg
ficompl
cwtl
out
fstpt
jecxz
dec
mov
add
jbe
je
lret
pop
mov
rorb
imul
pop
dec
or
and
pushf
rclb
sbb
or
ss
push
pop
loope
clc
imul
sbb
jae
scas
push
or
mov
rorl
jbe
and
or
push
or
dec
push
xor
and
das
xor
cmp
loopne
mov
push
je
inc
dec
xchg
not
lret
scas
test
cmpsb
arpl
add
cwtl
sbb
int3
mov
adc
adc
test
pushf
pop
loope
jmp
dec
cmp
xchg
jne
push
xchg
push
in
mov
jbe
pop
push
in
sbb
dec
fnsave
cmp
xor
pop
mov
andb
inc
arpl
dec
pop
jp
imul
add
or
dec
cmpsl
pop
mov
pop
jl
push
xor
insl
lret
leave
gs
test
lds
sbb
std
test
mov
lret
pop
shlb
sbb
xor
mov
cwtl
das
jge
push
mov
lea
jle
pop
lret
std
sbb
jo
inc
xchg
and
sbb
std
xchg
pop
cmpsl
loope
jp
das
daa
jecxz
add
int3
movsw
xlat
bound
dec
lahf
push
xor
cmpsl
mov
xor
xor
sub
icebp
out
cmp
inc
inc
pop
sub
jmp
adc
sub
fisubrs
mov
push
jbe
mov
and
rolb
jge
pop
ljmp
pop
inc
pop
lock
imul
lcall
mov
cmp
add
lret
push
jg
repz
dec
notb
int
lea
cld
in
mov
in
aaa
les
jns
outsl
fiadds
xchg
jmp
dec
cltd
add
pop
les
test
sbb
jl
inc
adc
pop
sub
mov
add
push
aaa
mov
out
xchg
jl
sub
aad
cmpb
loop
pop
mov
and
lods
mov
jecxz
pop
xchg
inc
ret
fwait
icebp
clc
cmp
rorb
cmpsb
adc
mov
ficompl
mov
xor
mov
xor
inc
dec
add
es
mov
dec
and
shlb
xchg
or
movsl
dec
movsb
movb
push
cli
and
shll
lahf
stc
addr16
loopne
mov
test
fsubrl
bound
mov
daa
pop
cltd
test
pusha
pop
orb
xor
and
push
pop
dec
jo
test
fsubl
cmpsl
mov
pop
idivb
dec
jo
aad
stc
adc
push
bound
jmp
lahf
aaa
stos
fidivrs
les
mov
xchg
jmp
and
ljmp
cwtl
mov
call
and
loop
out
scas
inc
inc
lea
dec
pop
xchg
cmp
test
and
mov
loopne
roll
push
clc
pop
movsl
pop
shr
movsb
sbb
add
push
lret
inc
mov
ss
mov
or
sbb
xor
sahf
cmp
add
rcll
rcll
in
mov
inc
ds
inc
lods
fsts
pop
jbe
mov
sub
sar
into
fnsave
daa
xchg
pop
push
rcrl
mov
or
sbb
ds
pop
in
inc
add
aaa
in
push
lock
and
and
and
lret
stos
xchg
in
jbe
lock
mov
movsl
clc
sbbb
pop
sti
cmc
xor
fwait
in
mov
xlat
notl
mov
outsb
js
and
dec
xchg
sbb
mov
inc
inc
xchg
and
pop
addl
or
ds
ror
data16
mov
push
cmpsl
inc
lahf
subb
mov
call
push
dec
rol
mov
sub
and
hlt
mov
sbb
sub
divb
iret
popf
dec
in
pop
out
filds
xchg
xor
dec
pop
ret
add
imul
divps
jns
adc
xor
stos
mov
imul
lea
test
add
or
mov
pushf
jge
ljmp
push
orl
sahf
cmp
mov
jne
insb
push
push
icebp
fdivrl
xor
push
notb
loop
ret
jnp
das
mov
bound
jmp
or
lcall
inc
scas
fisttpll
push
rcll
rcr
shl
push
dec
stc
mov
movsl
push
jg
mov
pop
inc
adc
and
inc
icebp
pop
xchg
aad
and
push
cmp
loope
stos
test
pop
mov
xchg
in
mov
rcrl
test
andl
fiaddl
pop
test
push
leave
and
xor
scas
repnz
fdiv
inc
cmpsl
stc
push
push
popf
popf
mov
push
jmp
shl
in
call
sbb
inc
cltd
idivl
lret
push
or
jae
xor
xchg
xchg
push
gs
enter
sahf
lret
outsl
push
aaa
in
or
inc
xchg
mov
call
jb
inc
shrl
scas
int
jl
ret
int3
addl
pop
jno
push
icebp
ljmp
cs
pop
push
sub
cltd
add
aad
cmp
adcl
shrl
push
fstl
sbb
in
sbb
leave
pushf
xchg
jbe
push
out
int3
sub
je
lcall
dec
push
jp
lea
fstp
test
mov
sarl
mov
js
mov
sahf
js
into
lcall
stos
mov
pusha
jae
sbb
adc
sbb
mov
jle
jge,pn
fsubrl
popf
jbe
push
cltd
dec
and
mov
sub
jl
mov
inc
sub
popf
icebp
inc
sub
jle
mov
push
xor
mov
mov
add
dec
imul
mov
mov
and
addl
xchg
mov
mov
jle
sbb
scas
mov
aas
test
int
push
std
popl
xchg
lret
cwtl
enter
xchg
xor
sub
fsts
aaa
je
shlb
jl
xor
out
sbb
mov
pop
jno
sti
out
mov
cwtl
cli
fidivrs
sbb
std
enter
loop
insb
dec
adc
jnp
mov
mov
push
popa
sbb
sbb
sub
mov
outsb
pushf
add
pop
in
sub
add
adc
sti
aaa
sub
scas
sub
xchg
xchg
aaa
or
and
mov
inc
inc
into
xchg
cmp
iret
das
inc
popa
sbb
push
jg
xchg
fwait
lds
push
and
xchg
add
adc
testl
sbb
gs
shrl
push
lds
push
xchg
jb
and
jl
add
jge
enter
push
xchg
cmp
das
negl
cwtl
shlb
lock
loopne
outsl
mov
jp
js
mov
sub
sub
jb
lcall
jmp
das
mov
ret
inc
xchg
ss
rcrb
or
and
jns
outsl
sub
fisubrl
call
mov
rcrb
pop
xor
jnp
movsl
or
pop
lret
mov
mov
xchg
setge
jbe
add
add
imul
popf
adc
xchg
outsl
push
mov
jnp
adc
dec
addr16
sub
fldl
lcall
sbb
pop
pop
mov
test
and
loopne
xchg
dec
xchg
scas
jne
xor
push
mov
daa
mov
push
mov
mov
fs
cmp
jp
xchg
fwait
xor
testl
pop
mulb
cs
jl
push
mov
cmpl
xor
push
sbb
mov
out
cltd
push
dec
pop
xchg
aaa
and
nop
mov
jae
sub
sub
sub
xor
dec
cmp
int3
mov
and
mov
inc
or
in
addl
mov
jbe
rorb
push
sub
push
imul
stc
jge
cmp
jl
xchg
in
pusha
movsb
out
test
dec
lret
lret
pop
out
in
xchg
add
mov
push
jg
jp
in
call
push
mov
pop
sbb
or
ja
mov
out
jb
adc
lea
pop
xchg
rol
popa
iret
sub
mov
scas
lcall
pusha
pop
or
in
push
stos
add
inc
mov
jl
pop
xor
adc
cmpb
or
push
lret
push
lret
push
pop
or
lea
out
mov
push
loop
lods
pop
into
xchg
sbb
mov
xchg
adc
cmp
lret
rolb
in
add
sub
and
sub
sub
jle
cmpsb
enter
out
adc
cmp
pusha
out
stos
outsb
out
xor
jmp
jbe
xchg
push
jne
xor
cs
cli
ret
aas
add
adc
imul
outsl
xor
adc
and
jne
sbb
negb
dec
push
xchg
ja
rcrb
xchg
jmp
pop
push
repz
ss
jp
xchg
cmp
xor
std
not
jge
loop
or
fmulp
xchg
cmpb
mov
inc
mov
push
aas
addps
mov
hlt
sti
push
jns
lods
aad
jo
sub
push
out
rolb
jge
pusha
or
xchg
popa
test
lcall
fwait
lret
push
xchg
sbb
push
add
sti
mov
pop
ljmp
mov
cmpsl
in
mov
jmp
into
sub
jo
pop
push
gs
dec
in
or
je
hlt
xchg
popfw
int
pop
dec
sbb
int3
rclb
add
ljmp
or
rclb
xchg
inc
cmp
mov
fbstp
fucomip
mov
jae
sbb
mov
out
jmp
pop
sbb
scas
pop
pop
mov
push
add
pop
jl
daa
mov
inc
andb
mov
int3
mov
stos
loopne
clc
aaa
scas
sbb
rcrb
or
jbe
sbb
out
andl
push
cwtl
fldcw
lods
into
mov
in
jge
sbb
dec
icebp
stos
adc
cs
xor
pop
dec
cmp
jg
inc
out
jbe
push
dec
push
or
mov
stos
popf
clc
clc
int3
xchg
sbb
jecxz
fwait
mov
pop
pop
xchg
sbb
movsb
inc
or
shll
mov
out
popa
sbb
rcrl
imul
sbb
cmp
jo
pop
fsub
outsb
mov
dec
outsb
test
cmp
dec
daa
push
sbb
cs
icebp
faddl
iret
shll
mov
fwait
cmp
inc
dec
movsl
dec
cli
sbb
jns
add
addr16
xor
dec
sbb
ret
ret
add
push
push
or
xor
shrl
clc
lea
jmp
dec
push
gs
in
or
cltd
loope
divb
inc
fs
xchg
cmp
xor
mov
stc
aaa
pop
mov
inc
sbb
cmpb
insb
cmpsl
sbb
mov
xor
mov
sbb
fsubrs
loopne
and
mov
rcrb
out
xchg
jmp
stos
sub
data16
fwait
jecxz
add
cmp
cmp
push
test
sar
fwait
sti
mov
cmp
sub
dec
pop
inc
in
out
lds
cmp
cmp
jae
mov
hlt
inc
push
stos
int
and
cmpsl
push
lret
sub
mov
push
adc
jg
jns
push
outsb
mov
movsb
movsl
mov
or
push
xlat
mov
xchg
movsl
lcall
jbe
xor
xchg
sahf
cmpb
testb
jmp
push
sbb
jne
adc
or
rcrb
dec
lahf
daa
xor
outsl
repnz
testl
jae
cmp
mov
or
orb
ja
mov
js
icebp
cmp
clc
sahf
call
mov
xchg
pop
xchg
scas
imull
pop
out
xchg
aad
loope
fsubr
jle
push
mov
and
icebp
dec
sbbb
add
mov
dec
mov
dec
mov
mov
xchg
xor
fwait
mov
jo
dec
inc
sub
lds
setae
push
fidivs
jg
inc
inc
lret
ret
cs
and
scas
lret
std
mov
inc
jnp
or
jle
ret
pmulhuw
cs
iret
mov
into
mov
cltd
mov
pop
jmp
fsubr
xchg
repz
popa
adc
aaa
daa
les
jmp
mov
cli
xchg
mov
lret
adc
dec
idivl
dec
lods
sub
lock
inc
cmp
loope
andb
cltd
insl
push
xor
mov
jne
in
ret
push
cmp
add
negb
sub
jne
push
pop
push
xor
aad
cmp
pop
xor
subl
aaa
mov
aas
add
in
jecxz
xor
ja
mov
test
inc
negb
out
cltd
sahf
xchg
scas
or
shr
sub
test
dec
rol
and
inc
sub
shlb
mov
xor
adc
bound
ffree
xchg
adc
mov
mov
mov
rorl
lds
test
jecxz
daa
mov
popf
mov
push
push
push
clc
xchg
cmpsl
jecxz
mov
addr16
cmpsb
sub
test
mov
mov
imul
mov
inc
movsb
lcall
int
or
xchg
dec
adc
xchg
jp
int
cmp
outsb
outsl
inc
mov
mov
mov
push
scas
pushf
movsl
mov
inc
pop
mov
fcomps
into
dec
gs
push
aam
in
add
adc
test
mov
sub
insl
mov
aad
cmp
mov
cmp
adcb
or
outsb
mov
jb
add
jge
push
std
push
jbe
ds
ret
adc
inc
in
lods
xor
xor
clc
nop
or
test
sahf
sbb
jns
call
in
lea
and
fcoms
push
cli
insl
push
pop
adcl
test
jne
je
ja
insb
adc
push
loope
push
dec
mov
mov
push
iret
lcall
cmp
cmpsb
push
fiadds
sbb
inc
fcompl
aad
adc
mov
sub
cmp
xor
addb
inc
jl
sbb
out
sbb
gs
mov
inc
jle
lods
dec
and
adc
and
in
sahf
mov
mov
xor
xor
orl
rcl
xchg
imul
add
mov
mov
cmp
setl
xlat
jb
movl
jae
jg
mov
gs
jbe
xchg
scas
jo
stos
pop
lods
in
mov
roll
mov
pusha
sub
sub
xchg
mov
aam
sahf
sbb
cwtl
xor
movsl
xchg
mov
int3
cmp
fs
in
mov
nop
in
xchg
sub
push
mov
sbb
push
pause
fdivrl
aad
cmp
adc
mov
iret
mov
stc
sbbl
and
ljmp
inc
xorb
sbb
jnp
mov
vdivps
dec
mov
aas
or
scas
mov
stos
mov
mov
push
mov
mov
ljmp
pop
dec
ljmp
rcrb
lret
icebp
fs
mov
add
or
push
adc
push
in
jbe
mov
xchg
mov
xor
jo
enter
hlt
movsl
dec
scas
cmp
inc
fwait
cmp
mov
enter
and
cmp
dec
rclb
fldcw
adc
xchg
pop
shl
filds
mov
sbb
push
jg
mov
jae
testl
dec
mov
ficomps
ljmp
pushf
out
repz
sbb
inc
pop
dec
in
mov
push
xor
stos
sbb
jbe
popf
scas
push
fisttpll
xchg
lahf
jle
mov
push
jg
and
jp
mov
fistpll
xor
jecxz
adcb
insb
movsl
mov
sub
and
daa
iret
sub
lea
push
cmpsl
incl
mov
pop
or
lret
push
push
loop
pushf
jno
mov
pop
out
sti
and
mov
dec
mov
fwait
sar
or
outsl
dec
mov
push
sbb
lods
lock
sbb
sub
sub
pop
rcrl
sub
dec
mov
push
fildll
fldenv
or
out
les
push
add
push
fidivrl
xchg
sbb
data16
xchg
add
lods
in
add
fisubs
mov
test
sub
dec
mov
sub
jns
fisubs
mov
aad
push
lret
push
mov
out
pop
add
sbb
insb
xor
push
movsb
push
scas
mov
stc
mov
jp
adc
cmp
pop
mov
xchg
aas
shl
lea
leave
jbe
xchg
popf
outsb
pop
inc
imul
aaa
sub
lods
sub
cltd
icebp
gs
sbb
adc
add
mov
insb
mov
int3
xlat
mov
clc
xor
out
mov
lds
hlt
add
or
mov
xor
sbb
sub
call
add
mov
adc
cmpsb
pop
jle
movsl
lahf
xor
and
jbe
mov
mov
xor
add
dec
push
mov
mov
movl
stc
push
imul
mov
jnp
mov
adc
lret
push
jae
sbb
adc
lea
insl
jl
fidivl
rcrb
cli
sahf
movsb
movsb
ret
lock
stos
xchg
push
xchg
call
insl
mov
das
sbb
ret
pop
repnz
cwtl
mov
add
ljmp
test
fstl
lods
and
ss
mov
pusha
popa
push
inc
or
pushf
test
int
add
out
mov
and
inc
es
add
or
push
dec
push
and
push
es
ss
dec
push
cs
xchg
lods
dec
mov
sar
dec
sbb
sarb
jl
or
adc
loop
addr16
dec
scas
mov
push
es
adc
sbb
add
inc
int
fwait
notb
js
mov
inc
aad
andb
push
mov
ss
stc
mov
inc
icebp
mov
cmc
psubsb
mov
hlt
xlat
je
jge
out
or
jo
cmp
lret
push
or
test
pop
cmp
out
rorl
mov
push
inc
mov
push
push
xor
dec
dec
bnd
xchg
dec
xor
in
add
mov
outsb
pop
dec
lret
mov
je
cmp
mov
outsl
sub
adc
js
orl
inc
sub
mov
adc
dec
pop
pop
movsl
sbb
jno
dec
imul
cld
push
ret
mov
fldt
mov
inc
out
nop
dec
sahf
mov
insw
mov
jno
pop
lods
aad
sbb
in
loope
dec
and
dec
xchg
stos
add
push
cmp
mov
sbb
arpl
mov
cmc
jb
incl
out
or
int3
xchg
repnz
and
jno
mov
push
jl
stos
push
insl
push
push
mov
hlt
xorl
cmpsb
pop
sub
aad
dec
jnp
jo
aam
jp
daa
scas
icebp
and
push
push
jb
pop
dec
movsl
inc
stos
lret
mov
mov
adc
and
outsb
mov
andl
xchg
xor
pop
pop
mov
push
negb
or
sub
lahf
test
psraw
subb
mov
mov
mov
loope
lahf
push
leave
or
sbb
outsl
xchg
dec
iret
repnz
mov
jb
dec
cmpsl
mov
in
inc
in
xorb
pop
aad
lea
pop
inc
pop
addl
lret
int3
push
or
enter
aaa
jge
mov
dec
mov
stos
rorl
mov
jp
fldl
or
mov
and
cmp
xchg
jecxz
mov
jg
in
pop
ret
imul
test
arpl
out
push
repz
pusha
push
mov
mov
fwait
push
add
xor
ja
das
lea
push
mov
movq
dec
pusha
cltd
xchg
in
imul
pop
sbb
push
jbe
pop
sub
mov
xorb
sbb
fdivrp
cmp
jbe
call
mov
mov
fldenv
cmpsb
std
hlt
ret
ss
pop
cmp
psadbw
or
shrl
mov
or
push
sbbl
mov
popa
xchg
test
sub
mov
xor
push
dec
negb
out
mov
sbb
pop
cmp
adc
xor
lock
leave
inc
mov
inc
add
andl
lds
sahf
in
fldcw
adc
dec
xchg
xor
mov
leave
sbb
xchg
lods
cwtl
outsb
jb
outsb
sbbb
shlb
leave
xchg
fmulp
pop
mov
lahf
xchg
cli
xchg
push
or
push
xchg
repnz
pop
xlat
rcr
cs
dec
cmpsl
ljmp
and
jecxz
mov
push
dec
sub
jns
je
mov
int
movsb
pop
movsb
cli
sub
pop
ljmp
push
jae
fidivrl
fists
and
mov
xchg
xor
push
js
mov
lret
gs
jl
xchg
ret
mov
mov
icebp
adc
and
jb
lock
mov
dec
xor
ret
lcall
mov
enter
xor
js
rol
cld
lret
push
lret
and
cmp
fldl
arpl
rorb
dec
ljmp
jbe
lret
push
out
mov
push
cmc
lret
pop
clc
xor
imul
cmpsl
or
mov
cmp
xchg
leave
movsb
scas
mov
daa
insb
sub
jl
xor
fstp
lods
dec
cmpsb
add
mov
mov
and
bound
fmul
cmpsb
push
xchg
mov
mov
loope
inc
int3
cmp
xorl
push
cmpsl
sbb
fistl
sarl
pop
mov
test
popf
jge
xor
in
scas
mov
rcrl
sbb
sub
mov
add
arpl
fstpt
jecxz
mov
xor
xchg
sub
lcall
ret
xor
mov
dec
dec
jne
cmc
dec
int
add
lea
jne
js
repnz
cmp
sti
mov
hlt
out
insl
mov
lcall
or
jae
loop
dec
fwait
inc
wbinvd
out
jnp
adc
sbb
ljmp
pop
int3
sbb
cld
xchg
in
jl
pop
mov
jne
push
orb
iret
imul
adc
dec
negb
daa
mov
lret
jb
push
push
cmpsb
jl
jae
add
lods
and
xlat
insb
ds
leave
lret
mov
xor
pop
sbbb
mov
pop
out
add
xor
movsb
sub
in
js
xchg
iret
cmp
sub
das
mov
lock
les
and
enter
mov
ljmp
inc
cltd
add
sti
pop
in
jg
jle
add
insb
push
mov
fistpll
xchg
pop
lret
dec
xchg
mov
in
cli
insl
lret
sub
out
jp
mov
sti
adc
dec
xor
jmp
es
or
rcr
mov
lods
stos
or
mov
or
ss
mov
mov
push
je
ret
nop
pop
vmovd
ret
adc
loopne
adc
cmp
ret
and
leave
daa
in
inc
movsb
or
mov
outsb
dec
or
mov
add
bound
ja
cmp
dec
int
jns
xchg
xchg
mov
std
cmp
test
addr16
lea
nop
fnstsw
mov
xchg
scas
xchg
or
inc
ret
test
xor
xor
inc
js
push
adc
aam
add
popf
sub
inc
flds
nop
inc
cwtl
pop
data16
mov
pop
incb
loopne
ficomps
xchg
outsb
test
sbb
lret
aam
xlat
add
add
test
pop
mov
cmpb
adc
jp
mov
xor
dec
jg
xorl
jg
and
lret
lahf
addr16
fidivrs
jmp
aas
aam
mov
cmp
push
and
movsb
dec
stc
sub
mov
adcl
mov
scas
idivb
data16
mov
cmp
adc
or
data16
shl
xchg
int3
mov
gs
jle
leave
dec
dec
dec
inc
add
aas
pop
test
les
cwtl
mov
xor
inc
mov
cld
popl
loopne
sub
loop
mov
scas
jg,pt
leave
pop
mov
loope
sub
and
leave
repnz
pop
rcll
pop
lock
mov
in
ret
jmp
loopne
lods
stos
mov
xchg
shlb
ljmp
push
or
inc
inc
bound
jmp
mov
or
xor
cmp
add
popf
int3
and
gs
push
pop
jb
hlt
inc
sbb
and
les
mov
mul
sub
mov
sub
push
ljmp
mov
push
cmpsb
or
fistpl
shll
lret
aas
pop
mov
andl
cli
inc
data16
adc
mov
movsl
pop
or
test
push
xor
je
adc
stc
cmp
dec
and
pop
pop
add
dec
imul
push
and
add
sub
adc
cmp
mov
sub
adc
mov
loop
sbb
hlt
adc
jg
xchg
jmp
lods
cmpsl
mov
or
rol
scas
daa
mov
sbb
cmc
inc
cmp
in
in
out
outsb
in
xor
cld
lods
in
dec
movsl
insb
in
push
inc
xor
lods
rcll
aas
push
xchg
leave
int3
lods
into
daa
movsl
mov
popa
dec
fcompl
cs
inc
out
fidivs
aas
pusha
jmp
clc
lret
jge
lcall
push
push
pop
fsts
fsubl
jb
dec
int3
jno
jg
das
xlat
xchg
push
mov
mov
loop
test
testl
icebp
push
adc
addb
subl
movzwl
add
in
mov
nop
addb
xor
scas
insl
xor
xor
and
clc
and
int3
mov
jg
cmp
xchg
icebp
pushf
enter
sub
add
scas
repnz
pop
and
lahf
push
push
dec
dec
fs
sbb
into
adc
fisttpl
push
movsb
pop
mulb
and
cmp
rcl
stos
adc
adcb
mov
pop
lret
cmpsl
jle
bound
mov
lret
insl
ficoms
dec
inc
cmpsl
push
in
jecxz
mov
push
movsb
flds
fwait
sbb
out
or
outsb
dec
and
or
outsl
mov
push
loopne
movsl
jnp
add
adc
dec
cwtl
mov
orl
lods
push
insl
outsb
mov
loop
adc
arpl
cmp
adc
inc
xor
cmpsl
iret
push
adc
jge
lods
lods
in
xor
mov
push
push
pop
and
sbb
imul
pushf
stos
pop
mov
jno
dec
lds
pop
jb
sarb
orb
dec
push
or
sar
cmp
cmc
jb
adc
push
mov
mov
loopne
outsl
cmpsl
push
lea
cmp
lcall
iret
pop
mov
outsl
sub
jg
mov
push
add
shl
in
ret
xor
subb
jle
pusha
mov
pop
adc
pop
out
adc
xor
out
push
insl
shrl
addr16
lret
test
imul
inc
mov
imul
and
xchg
js
scas
scas
mov
into
outsb
dec
psrlw
scas
mov
lret
pop
jle
sbb
xchg
arpl
fists
adc
fcom
pop
int
sbb
mov
inc
mov
pop
mov
repz
and
addb
pop
inc
and
into
xor
sub
mov
jmp
jno
adc
movsl
lea
cwtl
and
fwait
adc
add
fdecstp
cmp
movsb
imul
negb
adc
sbb
in
repnz
mov
mov
lahf
ret
inc
and
insl
lcall
rolb
jl
jle
lret
pop
mov
jl
xchg
scas
mov
or
fiaddl
pop
js
xor
fmuls
inc
sub
pop
daa
out
into
mov
pop
mov
xor
sub
pop
aaa
daa
fwait
sbb
cmpl
popa
pusha
pusha
pop
in
test
jbe
or
add
push
xchg
fistpll
jmp
das
push
pop
jge
sbb
jo
inc
fimuls
push
stos
add
dec
sub
inc
addr16
push
mov
sub
jae
xor
stos
ljmp
or
test
jns
jmp
mov
loope
stc
in
mov
pop
out
sbb
icebp
aas
adc
sbb
xchg
out
mov
inc
rcl
xchg
pop
push
sbb
lods
pushf
stos
add
jb
ja
inc
int
mov
dec
lods
js
add
cs
sub
ret
fsubs
xchg
test
mov
xchg
sti
xor
inc
mov
jnp
or
xchg
iret
pop
mov
pop
movsl
aam
or
xchg
jne
rcll
leave
das
ret
mov
rcl
insb
es
jb
aas
inc
inc
mov
ljmp
add
push
lea
cli
addr16
sahf
jnp
gs
sbb
cmp
movsl
inc
jo
bound
xchg
out
push
out
xor
jecxz
jl
xor
or
cli
push
fldenv
push
fmul
cmpsl
out
lock
jl
out
lods
mov
daa
mov
cwtl
dec
jp
mov
mov
out
dec
inc
adc
sub
scas
xchg
push
icebp
xchg
mov
xor
jbe
adc
out
jecxz
cmc
repz
xlat
jmp
inc
mov
pop
pop
mov
iret
subl
cmpsl
pop
sub
sub
xor
cli
aas
and
dec
mov
xchg
jp
mov
lods
insb
or
pop
pusha
mov
loop
rcrb
inc
sbb
pop
shlb
xchg
adcl
mov
orl
or
xchg
cmc
xchg
xchg
push
cmp
pop
xor
enter
clc
jge
mov
mov
fcmovnb
movsl
cmp
sbb
jecxz
mov
div
pushl
fmull
negl
xor
xor
sbb
jae
mov
out
stc
xorb
jnp
icebp
dec
pop
sbb
ret
scas
mov
enter
cmp
loope
fdivrp
add
xor
loope
sbb
xlat
pop
js
lods
mov
int3
sub
push
fwait
sbb
inc
jne
enter
popa
cmp
je
inc
sbb
mov
sub
sub
cld
xor
sub
rclb
and
cli
xchg
cmpsb
pushf
push
inc
cwtl
sbb
mov
mov
hlt
xlat
xor
xor
repz
daa
adc
lahf
push
jnp
stos
xchg
sar
xor
pop
mov
mov
add
adc
call
fsubrp
cmp
pop
push
sbb
movsl
into
in
mov
ja
push
adcl
xchg
push
pop
mov
mov
dec
sbbl
xor
jg
push
rorb
inc
sbb
imul
lea
movsl
les
or
lea
inc
sahf
mov
fnsave
rcr
adc
xor
xor
cmp
cmove
stos
stos
dec
jp
sbbb
push
and
in
stos
int3
jg
add
in
push
in
sbb
push
adc
sbb
sbb
pop
xchg
push
lds
test
push
es
jo
enter
jp
sbb
dec
into
xchg
sbb
int
fwait
sahf
fwait
add
or
ret
push
xchg
cmpsl
enter
imulb
addb
lds
sub
pusha
lods
das
add
xor
imull
add
push
js
mov
mov
xchg
xchg
xchg
push
pcmpgtw
sub
dec
push
test
pop
inc
in
add
jle
and
sbb
in
or
mov
popa
xchg
call
sub
test
sbb
and
mov
mov
jmp
pusha
dec
test
adc
in
xor
stos
pop
xlat
movsb
adc
mov
xor
in
xorl
call
mov
dec
add
cwtl
dec
pop
std
lcall
js
xor
out
jb
sub
cmp
pop
fistpll
inc
cmp
faddl
stc
call
or
enter
mov
cmc
dec
adc
mov
jmp
xor
jns
aad
test
cmpsl
rclb
mov
pop
adc
xchg
pop
push
and
push
jae
mov
mov
mov
push
pop
imul
out
and
xchg
jo
mov
fmul
rorl
push
sbb
and
dec
hlt
push
lret
inc
in
data16
stos
fists
adc
fsubl
addl
pop
adc
pop
sarl
fldl
adc
adc
dec
xor
xchg
lret
jle
dec
xchg
pop
mov
cmp
ret
xorb
mov
inc
mov
fldl
pop
jae
sbb
dec
mov
jg
jae
int3
jns
jmp
into
mov
nop
data16
sub
mov
mov
pop
lret
clc
lods
mov
mov
dec
cmp
fldcw
dec
mov
or
push
mov
xchg
dec
fcmove
and
add
outsl
xchg
push
push
dec
xlat
xor
dec
mov
and
pop
push
fisubl
or
xor
pop
orl
mov
jns
ljmp
mov
aad
lods
adc
stos
pop
xchg
ljmp
jae
scas
sub
dec
test
ds
sbb
rol
outsl
or
pushf
jo
pop
test
shl
mov
push
hlt
mov
cmp
jg
stos
inc
add
sbb
pop
rcrl
jp
nop
cmp
jne
imul
hlt
sub
and
cmp
adc
add
add
aaa
cmp
pop
stos
out
out
jb
cltd
dec
rol
add
ds
mov
cmp
inc
mov
push
jb
mov
fisttpl
orb
das
xor
xchg
cmpl
jbe
mov
lods
js
scas
sbb
sub
mov
pop
mov
movsl
dec
sbb
sti
sub
lea
dec
scas
arpl
fimull
jae
xchg
xchg
stos
out
decl
xchg
shrl
push
das
rorb
xchg
mov
rcrb
mov
mov
pushf
adc
xchg
test
leave
mov
xchg
inc
lock
jno
fwait
test
mov
pop
out
jl
pusha
aas
xor
sub
cmp
mov
pop
insb
add
adc
mov
cmpsl
adc
mov
pop
lds
push
repnz
test
rol
div
popf
mov
mov
pop
fsubrl
jns
or
loope
sub
mov
jl
inc
or
pop
pop
sub
pop
ja
and
mov
lods
cmp
idivb
sbb
cwtl
xchg
push
and
push
ret
xor
mov
rolb
pop
lret
or
ss
mov
xchg
inc
jp
clc
or
je
fsts
je
rorb
push
fpatan
in
out
ljmp
addl
int3
insb
lahf
and
adc
lock
adc
fs
sub
popf
jns
sbb
jmp
dec
jmp
push
sbb
jl
sbb
rep
lods
lcall
loopne
jno
xchg
lret
cmp
stos
repnz
jp
mov
test
or
jmp
lock
mov
dec
ljmp
or
rol
xchg
inc
clc
adc
xor
push
cmpsb
lret
or
mov
cmp
lahf
aas
fisubs
aas
lock
sub
xchg
mov
jne
shrl
in
fnstcw
push
ret
push
lret
sbb
mov
mov
jmp
xlat
test
aas
push
les
mov
int3
cmp
and
jecxz
cmp
mov
xor
pop
fmuls
mov
andl
daa
outsb
cwtl
jno,pt
jno
dec
fs
cmpsl
jnp
jnp
cltd
mov
push
leave
jns
fdivl
push
pop
aad
lock
leave
sti
push
int
mov
mov
pop
leave
mov
pop
sub
mov
sub
das
popf
rcr
subl
pop
push
xlat
jecxz
adc
inc
push
lret
cmp
pop
movsl
xor
xchg
in
jne
frstor
ret
or
mov
add
js
and
xorl
adc
cld
inc
inc
loop
arpl
jecxz
mov
mov
es
addl
stos
ret
add
inc
mov
sti
fistps
push
cmpsb
es
mov
fs
mov
bound
lret
fstl
roll
das
xor
lahf
fmul
lahf
js
pop
adc
jne
mov
add
push
mov
mov
mov
lahf
mov
test
mov
hlt
sti
int
lret
movsb
xchg
dec
add
out
ss
add
cmpsl
sbb
xchg
lds
rcrl
or
jnp
push
add
jp
mov
cmc
jge
stos
mov
pop
push
mov
push
into
jne
test
jmp
repz
std
sbb
cwtl
shrb
jns
and
mov
add
insl
insl
lds
mov
add
inc
enter
orb
pop
leave
movsb
or
pop
popf
push
ja
addr16
imul
adc
daa
adc
and
lea
leave
aad
pop
sbb
xchg
push
lods
aad
mov
cmp
pop
repnz
jg
xchg
addr16
shr
jno
jle
lcall
pop
inc
pop
dec
jecxz
mov
sub
mov
fbld
sub
pop
lds
mov
cmp
icebp
mov
jmp
aaa
push
lods
cmp
lahf
lods
fsts
add
mov
adc
jmp
pop
inc
arpl
push
mov
aam
lods
inc
add
cmc
mov
inc
hlt
andl
cmp
jns
shll
inc
aad
mov
mov
xor
jns
or
rcl
and
lret
sub
add
js
aaa
xchg
lahf
jge
push
sub
sbb
mov
xchg
push
pop
stc
adc
push
mov
mov
mov
and
lea
push
mov
pop
dec
aam
pop
jl
xchg
xor
add
sbb
push
ljmp
or
call
add
add
push
cmc
int
into
push
dec
in
or
lea
xchg
jno
inc
shll
roll
rcrb
or
test
xlat
lods
cmp
shlb
cmp
leave
adc
xor
shrb
fcmovnu
mov
call
repnz
add
loopne
ljmp
push
xor
andb
push
ret
push
sbb
inc
insl
mov
mov
iret
scas
add
lret
and
jnp
lods
cmp
or
addr16
sub
test
jo
xchg
inc
repz
xchg
in
mov
adc
inc
cwtl
cmp
xchg
hlt
inc
fmull
inc
push
fnstenv
ret
dec
into
lret
sub
push
adc
fs
xor
imul
cld
sbb
mov
xchg
mov
or
inc
pop
andb
mov
lcall
sub
das
daa
ds
pop
cld
cld
inc
insl
jmpw
repz
adcl
and
pop
insl
int3
js
es
ror
sti
add
jle
cmpsb
inc
pop
add
add
push
sbb
test
fs
loopne
repnz
fstl
xchg
ror
mov
out
push
fildll
and
fs
out
push
insl
cmp
mov
rclb
mov
push
mov
aam
outsb
add
mov
lea
or
sbb
pop
shrb
jp
jns
push
cmp
xor
sarb
sti
sbb
aad
mov
inc
fsubrs
popa
test
fwait
lds
mov
xchg
jae
dec
das
xor
mov
add
and
and
rorb
push
rcll
bnd
int3
mov
pop
stc
push
js
lds
push
jns
jmp
bound
mov
pop
aas
divl
insb
sbb
cmp
outsb
movsl
adc
lret
jp
test
das
leave
jmp
sbb
xor
mov
xor
sqrtps
test
xchg
push
jge
shlb
adc
pop
pop
add
notl
js
inc
sub
add
pop
pusha
stc
push
cwtl
inc
cmpsl
lods
sub
shrb
add
test
sbb
out
and
shll
or
lods
mov
cmp
sub
popf
mov
movsb
rcrl
jne
jb
mov
xor
fwait
incl
sbb
cltd
inc
and
sbb
insb
or
mov
xchg
jg
inc
mov
xchg
movsl
fcompl
out
arpl
andb
mov
xlat
inc
xor
add
mov
xor
sbb
fiaddl
loope
push
decl
daa
sub
xlat
dec
out
mov
mov
dec
push
dec
pop
adc
mov
repz
sub
mov
jno
xor
aaa
mov
pop
jle
cmp
xor
pusha
pop
mov
ret
das
mov
repnz
jns
mov
add
xchg
add
cmp
xor
cmp
cmp
cmp
pop
aaa
rclb
mov
sub
mov
or
aam
ljmp
push
js
insl
mov
fnstenv
pusha
jle
or
push
jle
jbe
aad
dec
ret
cli
add
push
pop
jecxz
sbb
inc
int
out
outsb
dec
scas
sbbl
xor
test
cmpsb
mov
aaa
add
add
cmpsl
xor
pop
mov
cmp
and
popf
lcall
push
jb
fcoms
sbb
outsl
inc
sub
xchg
mov
aaa
sti
sbb
push
pushf
pop
out
and
enter
add
out
call
sbb
adc
jnp
mov
fcoms
repnz
mov
jno
xchg
fwait
mov
pop
repz
jmp
jg
adc
jbe
shll
xchg
sahf
add
dec
in
insb
insl
arpl
popa
or
sub
stos
in
es
dec
push
jb
js
clc
ds
or
fwait
adc
mov
mov
clc
gs
or
lret
out
pop
cmpl
push
fcomps
or
popa
stos
cmp
cmp
pop
dec
cld
mov
jne
mov
add
mov
ficoml
stc
dec
lds
mov
lcall
jmp
outsl
jns
inc
repz
or
fwait
add
popa
xchg
mov
mov
lahf
movsl
icebp
xchg
mov
loopne
movsb
xorl
iret
or
mov
mov
repnz
dec
dec
inc
shl
cmpsl
subb
dec
sub
add
add
scas
sarl
pop
xor
cmpsl
mov
lock
pop
out
xor
cmp
ja
jne
into
das
lods
sti
cmp
xchg
xchg
sti
xor
es
dec
mov
jbe
pushf
jle
or
add
into
adc
bound
lea
mov
fwait
mov
xchg
in
and
push
adc
lock
pop
add
xchg
aad
add
fsubl
in
dec
inc
mov
sbb
ds
into
pop
mov
jg
jo
lret
or
mov
dec
das
pop
psrlw
xorl
or
arpl
dec
data16
dec
out
mov
inc
sahf
xor
cmp
mov
cltd
dec
jnp
add
and
fs
mov
lret
dec
mov
out
jp
mov
sub
cltd
pop
lea
pop
jne
xchg
fnsave
shrb
out
mov
ficomps
shll
inc
and
aam
out
mov
shll
mov
sahf
mov
cmp
enter
and
xchg
and
jge
jo
repz
mov
jnp
jb
or
out
push
sub
cmp
dec
xor
xlat
push
mov
jle
aas
aas
xor
das
in
stc
repz
dec
or
mov
pop
and
mov
sub
sbb
enter
fsubrl
aaa
test
arpl
xor
push
pushf
mov
mov
jmp
imul
lock
xchg
cmp
shlb
fadd
sti
jle
sub
mov
inc
out
das
pop
daa
icebp
pop
cmp
rcll
mov
fsubrs
inc
mov
inc
aam
cmpsb
xchg
lcall
xor
imul
subb
cmp
adc
in
adc
adc
ljmp
add
cmp
inc
pusha
loop
outsb
and
pop
ljmp
jg
cmpsb
add
mov
adc
leave
in
call
repnz
and
dec
lret
or
rcr
mov
fisubl
fadds
sub
stos
mov
mov
mov
push
popf
jp
insb
or
repnz
lea
dec
and
aaa
jb
xor
hlt
mov
cmpsb
cmp
adc
scas
add
push
adc
lcall
sti
push
fstps
cmpsb
cmp
or
imul
insb
mov
gs
cltd
pop
adc
fldenv
repz
test
lods
sbb
mov
movsl
mov
pop
sub
je
addr16
outsl
jnp
inc
shrb
jl
mov
stos
pop
mov
sub
mov
fldl
sahf
mov
popf
lods
push
sbb
scas
imul
xorl
insb
jecxz
ds
sub
nop
sub
add
or
data16
push
shrd
cmpsb
add
in
mov
inc
ret
pushf
mov
fcoml
outsl
shlb
test
push
inc
inc
cmp
and
xchg
ret
inc
test
pop
mov
xchg
mov
jmp
into
pop
push
mov
out
rolb
mov
cwtl
mov
je
sbb
sbb
mov
adc
test
pop
inc
loop
push
pop
and
dec
es
rcll
jecxz
lret
mov
jo
icebp
std
sbb
pop
mov
negb
pushf
push
adc
cs
adc
inc
iret
shrb
jae
add
jmp
pushf
fmuls
fisubrl
aas
shll
pop
f2xm1
fsubrl
sbbb
cld
out
fcmovne
cmc
icebp
add
call
lret
xor
aas
cltd
dec
stos
ja
mov
fdivp
mov
mov
out
pop
mov
imul
push
adc
vsubsd
repz
in
sbbl
jp
push
cld
pusha
add
and
push
mov
subl
int3
jp
cltd
test
sti
push
sub
push
adc
aad
loopne
sbb
imul
nop
pop
lods
outsl
clc
cwtl
dec
xchg
aam
and
data16
pop
mov
xchg
rcll
fcmovu
bnd
or
or
xchg
in
daa
lea
notl
add
out
dec
adcl
mov
sub
pop
lods
popf
jns
xchg
leave
mov
subb
mov
notb
xor
jmp
and
pop
outsb
sbb
in
cmpl
push
movsl
je
sub
cmp
inc
add
cltd
mov
scas
subb
push
repz
push
inc
outsb
daa
mov
mov
adc
inc
cmp
xor
lods
mov
iret
jnp
cmp
mov
pop
bound
stos
inc
inc
repz
push
sahf
shll
lret
add
sarb
add
or
mul
addl
addr16
or
lcall
and
ficompl
jno
adc
mov
add
mov
push
sub
jnp
sahf
cltd
test
fistpl
lods
repnz
mov
cmp
aaa
pop
inc
jnp
test
adc
mov
nop
pop
ret
sbb
dec
les
rorl
aas
mov
mov
xor
iret
pusha
popa
fcomps
into
sub
flds
and
or
mov
push
mov
call
lcall
and
nopl
movsb
ljmp
decl
and
jnp
test
shll
add
hlt
lahf
add
mov
popa
xor
ret
mov
mov
sub
fs
enter
orl
xchg
xor
inc
faddl
sbb
lret
mov
sahf
xor
into
gs
cmp
inc
hlt
stos
sti
pop
jns
jp
pop
in
out
or
jbe
sbb
enter
leave
pop
xchg
adc
jl
mov
push
aaa
add
push
cmpsl
push
mov
das
andl
inc
xchg
pusha
in
adc
mov
loop
popl
ljmp
lret
jnp
push
out
out
xor
into
int
pop
subl
adc
push
loop
mov
jp
jmp
xor
fwait
out
push
adc
enter
movsl
test
inc
movsb
adc
mov
and
jns
rsqrtps
pop
fdivrs
jl
je
sub
sahf
mull
test
pop
add
test
push
dec
sub
pop
push
inc
xor
lds
xor
movsb
cmp
inc
lcall
dec
push
rorb
inc
or
mov
and
add
faddl
inc
mov
inc
pushf
push
lea
js
out
and
roll
xor
sbb
or
jae
movsb
stos
xchg
mov
cmp
sbb
xor
inc
jg
pushf
push
adcl
add
fstps
mov
mov
imul
in
ret
dec
jl
mov
into
out
and
sub
mov
jmp
xor
loopne
ret
sub
iret
daa
dec
and
sub
inc
call
out
sub
lock
movb
pop
sti
test
shl
sarb
shll
outsl
cmpsb
flds
add
jp
mov
inc
std
cmp
mov
aam
mov
adc
xchg
push
cmp
lods
cmp
or
fbld
jo
xchg
movsb
stc
dec
add
adc
loop
aam
or
test
repz
test
ret
pop
sar
or
cmc
bound
cmc
cmc
and
inc
mov
loope
test
pushf
enter
fstps
enter
insb
int3
out
daa
pop
out
test
out
adc
shrl
jg
jbe
push
mov
pop
cmp
fwait
push
repnz
add
xchg
push
add
sbb
sub
jae
je
adc
mov
and
jo
decl
test
xor
pushf
cmp
xchg
lods
mov
test
jg
jb
mov
je
gs
or
dec
mov
stc
sbb
icebp
add
ret
push
or
lock
adc
pop
rol
jo
inc
cld
lods
imul
sti
stos
rcll
daa
add
in
lods
jmp
or
xor
xor
push
outsb
adc
or
sbb
jne
loope
jl
pop
aaa
xchg
ljmp
fmuls
repnz
xchg
mov
bound
cltd
sub
mov
js
and
jno
mov
mov
pop
push
jae
mov
scas
shrl
sub
or
scas
call
fildl
cli
shl
notl
push
or
movsl
test
xor
jne
mov
idiv
xor
jbe
lods
jnp
inc
cmp
fildll
xchg
stos
out
arpl
dec
ret
daa
xchg
or
xor
into
aaa
and
arpl
dec
adc
or
mov
dec
gs
cmp
stos
repz
nop
sbb
sbb
movups
jl
ficoms
or
cmpsb
inc
in
jge
nop
repz
pop
mov
testl
jno
cmpb
lds
add
aas
sub
outsl
bound
cwtl
or
push
repnz
sub
outsl
out
mov
pusha
rolb
outsl
mov
les
mov
mov
jl
jmp
stos
adc
dec
ret
pop
inc
push
mov
xchg
mov
dec
ds
mov
sbbb
test
xchg
les
pop
fbld
ja
cmp
jmp
cld
dec
adc
aas
stos
int
dec
mov
icebp
or
dec
mov
fdivrp
js
hlt
daa
cmpsb
fiadds
daa
pop
mov
lahf
jbe
fxch
mov
pusha
in
or
push
add
sbb
clc
mov
pop
sbb
sti
inc
ss
push
push
xchg
mov
adcl
xor
ss
into
fs
jbe
enter
cmc
subb
je
aas
add
lock
outsb
iret
dec
and
mov
sarl
mov
push
xchg
push
sub
cltd
jmp
test
call
call
xchg
add
pop
mov
adc
lods
jnp
stos
bound
rcl
sub
ficomps
dec
imul
mov
flds
sub
test
popa
push
fdivs
cmpl
lahf
mov
loope
xchg
xor
adc
aam
add
insl
roll
dec
mov
dec
cmp
sbb
or
fmull
mov
movsb
insl
js
data16
jge
xchg
mov
push
mov
sbb
xchg
repnz
jl
mov
mov
stc
sub
cli
sub
jbe
scas
mov
inc
cltd
add
fidivs
dec
lock
xchg
jne
adc
and
aad
push
std
fildl
lea
leave
loop
dec
test
ret
push
and
xchg
icebp
int3
sub
sahf
test
adc
es
inc
xor
jae
sub
outsl
or
pop
mov
dec
push
nop
dec
ret
add
insl
mov
push
sub
bound
gs
cmp
mov
jge
push
je
sbb
das
mov
pusha
xchg
and
sbb
leave
arpl
fistps
lds
add
dec
cmp
push
outsb
mov
loop
cmp
or
shll
pop
sbb
int
in
pushl
scas
sbb
lcall
clc
orb
jnp
pop
add
call
sub
adc
leave
ret
ret
ljmp
mov
test
sahf
dec
imulb
mov
xorb
stc
mov
inc
inc
pop
add
xor
fsubs
sar
cltd
loop
sub
out
loopne
jb
and
jle,pt
lods
pop
pusha
cmpsb
outsb
mov
outsb
mov
repnz
mov
jb
fiaddl
fstps
out
ror
fwait
out
mov
or
mov
cmp
adc
imul
adc
std
scas
mov
mov
xor
dec
ljmp
int3
cmpl
andb
xchg
pop
rol
loope
data16
loop
gs
cmpsl
xor
lea
mov
fwait
sbb
adc
xchg
dec
xchg
xchg
mov
add
idivb
ss
sbb
xor
in
test
xchg
mov
shll
les
cld
aam
mov
xor
push
ret
ljmp
data16
pusha
arpl
js
mov
aad
in
sarb
and
push
or
aam
sub
out
inc
lock
dec
into
and
cmpsl
xor
std
dec
push
cmp
sub
fdivs
push
sub
cmp
loop
mov
pop
dec
movsl
and
mov
fwait
mov
sbb
mov
xchg
in
and
mov
xchg
ficoml
bound
or
sub
popa
xchg
mov
xchg
aas
jne
xchg
testb
outsl
xchg
cmc
sahf
movd
mov
mov
xchg
in
mov
xchg
mov
jp
mov
lock
fstpl
jnp
lret
std
fadd
dec
jo
out
lods
push
imulb
mov
add
mov
mov
push
sbb
out
pop
out
sbb
mov
loopne
push
repz
jg
out
iret
jp
shlb
sbb
dec
xor
pushf
loopne
or
lcall
outsl
push
mov
adc
sbb
and
test
add
rorl
xor
mov
pop
mov
ds
sub
stc
mov
imul
xor
cld
push
sub
xchg
xchg
dec
xor
testl
lods
sbb
stos
dec
cmp
inc
sbb
mov
arpl
mov
in
nop
pop
or
dec
leave
sbb
cwtl
in
mov
sbb
cli
mov
jnp
cmp
pusha
cmp
xchg
adc
test
jmp
xchg
push
and
push
add
cli
push
fdivs
cmp
nop
aaa
xorl
adc
push
ffreep
cltd
rol
adc
rolb
hlt
test
xor
cmp
add
lcall
mov
pop
and
aas
xor
sbb
dec
stos
testb
mov
mov
or
xchg
imul
arpl
push
jb
fdivs
cmp
cmovge
pop
or
jb
xor
loope
pop
or
or
outsb
lea
sub
push
mov
pop
bound
out
das
push
push
xchg
xor
fstpl
dec
scas
sar
sbb
fcmove
cld
aad
fsubrl
or
imul
jmp
loope
aaa
pop
jle
in
stc
inc
insb
jg
call
je
sub
inc
in
lcall
mov
ror
pop
cmp
add
adc
aas
mov
stc
insl
jmp
cmp
mov
imulb
pop
mov
or
push
out
mov
aaa
std
sti
lret
dec
cmp
scas
xchg
jmp
jb
lods
pop
mov
sub
mov
dec
or
test
mov
enter
ja
lret
add
push
cmp
testb
sbb
dec
inc
pop
test
fnstsw
das
out
push
mov
jg
test
scas
outsb
push
ja
xchg
test
arpl
xlat
cmp
mov
mov
shlb
sbb
pop
mov
sub
jne
xor
push
pop
data16
adc
ficoms
or
rol
cs
jg
cmp
in
dec
mov
inc
and
mov
pop
in
and
dec
jb
pcmpgtd
lret
mov
lea
pop
sub
mov
mov
xor
push
mov
call
mov
addr16
mov
mov
test
int3
fnsetpm(287
sub
push
sbb
and
ss
test
cli
adc
out
movsl
xchg
add
cmpb
add
stos
enter
addr16
daa
jmp
cmp
and
jle
inc
mov
mov
into
stc
enter
adc
sbb
lret
mul
pop
ja
arpl
dec
and
push
and
bound
add
imul
sbb
add
out
sub
dec
pop
xchg
push
push
and
pop
bound
xor
mov
clc
sub
mov
jl
mov
into
mov
jp
mov
or
xchg
adc
mov
pop
lock
scas
lods
jnp
sub
inc
adc
dec
push
movsb
shr
add
push
jae
adc
and
loope
jo
sbb
leave
test
mov
shlb
loopne
adc
sbb
inc
inc
pop
mov
test
int
je
adc
inc
and
divl
and
addr16
insl
adc
out
rcll
or
push
ret
push
xchg
out
push
pusha
pusha
in
loopne
dec
jb
jo
ret
fimull
test
loop
ret
inc
sbb
test
iret
xor
stos
cld
jne
std
cmp
adc
xchg
sbb
out
mov
xor
cmp
jns
idiv
xchg
mov
add
orl
pop
sub
dec
ds
mov
sar
jo
sub
aam
test
shlb
fwait
clc
aaa
dec
xlat
xchg
cltd
int
pop
xor
popf
or
sub
sbb
sbb
jle
mov
lock
aam
je
loopne
popa
jl
loope
hlt
orl
lods
sub
enter
or
imul
sub
gs
cmpsl
mov
lcall
or
push
sbbl
mov
loop
aad
pop
inc
std
pusha
stos
fists
int
xchg
and
jbe
ja
pop
insb
or
movsl
push
loope
sbb
imul
dec
movsl
jmp
inc
or
pop
test
inc
jl
add
loop,pn
add
xchg
mulb
repz
add
aas
out
test
das
es
and
jp
and
jmp
jmp
mov
or
xchg
push
mov
inc
push
dec
jp
mov
adc
fcomps
inc
addl
mov
inc
sbb
icebp
pushf
jge
mov
stos
or
mov
push
cmp
fcom
xchg
mov
jne
dec
mov
mov
and
outsb
push
mov
pop
fldl
ss
inc
rorb
xchg
jecxz
xchg
sbb
xchg
stc
in
shlb
cltd
sub
sbbb
inc
loope
inc
jl
and
jns
pop
cmp
subl
sbb
mov
xchg
outsb
add
push
adc
fidivl
mov
mov
nop
imul
mov
stos
loop
dec
lret
mov
add
lahf
xchg
outsl
add
mov
ja
lret
repnz
sub
push
sub
or
ljmp
iret
fs
sbb
xorl
lcall
push
mov
sbb
cmp
lahf
mov
cmp
sub
subb
fcomps
xor
adcb
and
fmuls
adc
fists
mulb
adcl
nop
std
inc
push
pop
ss
cwtl
mov
out
cmpsl
mov
js
push
mov
push
pmulhw
orl
add
mov
dec
test
mov
mov
out
inc
push
sti
xor
cmpsb
fadds
scas
pop
push
daa
insb
lock
cld
pusha
inc
stos
gs
dec
test
sbb
hlt
jbe
sti
notb
xchg
or
ljmp
out
stc
fisttps
cmp
orb
sbb
insb
les
js
push
aas
mov
bound
sub
lcall
sbb
sub
stos
out
pop
nop
lock
mov
mov
xchg
jne
sbb
ja
ss
shll
add
test
push
mov
iret
sub
pop
xchg
sarb
lret
jle
sbb
dec
das
roll
gs
lods
sahf
stos
iret
mov
push
out
jp
lea
jp
lcall
mov
les
repz
jb
lods
fadds
dec
mov
dec
in
es
mov
jge
pop
rorl
movsb
cld
sub
neg
icebp
or
xor
lea
inc
cs
dec
mov
push
pop
lahf
lret
xchg
popa
sub
ds
testb
sbb
cmp
sbb
dec
idivl
movsb
xlat
rolb
dec
xchg
test
movsb
xchg
ficoml
mov
pushf
adc
and
iret
nopl
xchg
daa
dec
iret
dec
mov
hlt
xor
jne
pushf
and
testl
and
jp
outsb
mov
add
pop
lods
lea
popf
cltd
sbb
sahf
movsb
pusha
push
cmpsb
bound
inc
shlb
rol
jmp
add
mov
cmpsb
jge
test
inc
jbe
cmpsb
add
scas
aam
iret
jp
stc
push
loopne
sbbb
fs
jne
shl
adc
xor
repz
lret
addb
adc
fwait
push
arpl
fisubrs
cmp
movb
hlt
lret
sub
pop
mul
out
mov
mov
stos
pop
push
push
sub
push
loop
test
rorb
cmp
xchg
in
popa
mov
inc
dec
jle
ficompl
push
testl
mov
and
decb
test
dec
ret
pop
mov
bound
sbb
cli
insb
or
shrl
mov
mov
cmp
mov
or
adc
iret
pusha
stos
push
dec
xchg
aad
lods
jo
lea
into
mov
into
iret
xchg
adc
imul
and
rcrb
addr16
jle
fdivr
andl
fistpll
lds
push
xor
mov
inc
lock
adc
dec
add
sbb
testl
clc
mov
shll
orb
inc
ljmp
out
pop
imul
leave
pop
jl
test
int
rol
loopne
sub
repnz
sbb
fldenv
lea
smsw
or
int
or
sub
sub
dec
shlb
les
jl
adc
sbb
cwtl
cmp
sub
popf
rcrl
sbb
jbe
mov
popf
loopne
xchg
jg
popa
data16
sbb
in
cld
jne
push
xor
jl
adc
incl
hlt
movsl
mov
ret
mov
cs
dec
mov
cmp
mov
movsb
or
aas
mov
scas
cmp
jp
add
loopne
xor
jp
inc
hlt
in
call
inc
lret
std
sub
xchg
dec
out
push
xchg
stos
xlat
jmp
imul
aad
roll
es
test
int3
jb
das
fisttpll
mov
ficoml
faddp
insb
add
xchg
nop
sarl
adc
sub
negb
out
arpl
aas
adc
repnz
popf
and
jno
dec
sbb
fs
test
js
jno
int
movsb
push
dec
in
test
push
fsts
mov
in
adc
pusha
outsl
pusha
push
push
pop
aaa
jo
and
idiv
aam
add
mov
and
jne
push
shrl
addr16
mov
xor
repnz
into
jnp
aam
insb
adc
cmpsb
mov
ror
ficoml
jmp
ss
push
sub
iret
lret
xor
or
add
cmp
xor
jnp
jg
lods
leave
mov
imul
test
mov
adc
xchg
dec
jns
xchg
cltd
mov
popa
popf
or
cwtl
test
dec
loope
nop
add
mov
pop
pop
pop
push
test
and
mov
sahf
add
loopne
es
inc
or
dec
cli
push
mov
insl
mov
call
cs
in
loope
scas
mov
icebp
push
aas
cmp
jne
push
pop
inc
ss
xchg
xor
mov
adc
repz
and
lahf
sti
dec
ror
push
mov
cld
ret
mov
loope
repz
stos
scas
mov
outsb
fsub
pop
inc
out
insb
inc
add
idivb
push
push
fildl
inc
imulb
dec
jns
jno
push
cld
lods
pop
jmp
enter
pop
xor
push
pop
enter
push
gs
push
leave
adc
add
or
scas
lds
and
mov
cs
fimuls
sub
lods
jns
sbb
clc
inc
jo
jg
outsl
pop
sbb
mov
xlat
xlat
jns
push
imul
jmp
out
jl
mov
or
divb
sub
cmpsb
mov
arpl
jl
jmp
cmp
mov
aas
mov
int
xchg
out
mov
test
jmp
add
ret
fidivrl
hlt
and
dec
int
jg
leave
nop
popf
ljmp
mov
push
cli
add
pushw
mov
cmp
stos
iret
fistps
js
mov
lock
mov
push
std
rcrb
cs
repnz
rolb
mov
mov
mov
jl
sbb
cltd
loop
push
jo
pop
jb
pushf
shr
push
cmp
add
or
push
enter
clc
push
push
and
mov
imull
mov
repnz
mov
movb
lea
out
mov
push
pushf
push
mov
ret
ljmp
sbb
xchg
jne
hlt
dec
in
or
mulb
sub
int
shlb
idivl
ds
mov
and
jge
or
mov
and
mov
adc
es
jmp
ljmp
mov
dec
enter
jbe
pop
scas
out
shll
xchg
lcall
jbe
push
or
leave
cli
cmp
ds
inc
sbb
sub
pop
push
xchg
or
stos
mov
imul
ss
dec
dec
inc
jbe
pop
pop
cmp
ret
dec
lahf
lret
dec
mov
dec
icebp
aaa
xchg
push
xchg
sbb
inc
pushf
mov
dec
pop
dec
mov
add
pop
pop
mov
sub
leave
arpl
sbb
fwait
jo
aas
xor
aaa
sbb
push
xor
gs
movsb
or
sub
inc
mov
lods
cli
enter
mull
es
imul
pusha
out
xor
cmp
cmc
pop
jge
sbb
adc
ja
repz
and
aad
add
dec
movsl
jnp
adc
push
or
or
add
and
fsub
incl
outsl
shrb
shrb
adc
testl
lcall
fisubs
js
test
int3
sbb
mov
jae
mov
sub
loope
arpl
mov
inc
jmp
add
dec
iret
repnz
mov
lret
stos
adc
dec
mov
push
or
das
jns
jl
in
push
cmpsb
sub
mov
cltd
dec
stc
lods
lock
mov
and
adc
sbb
pop
mov
lea
leave
cmp
sub
xchg
jecxz
sbb
in
dec
jg
scas
xchg
ljmp
and
js
xor
les
inc
xor
inc
pop
dec
call
lret
xchg
adc
gs
ds
inc
or
xchg
or
xor
adc
inc
test
lds
mov
out
std
icebp
fmuls
sbbl
dec
xor
push
rcrb
icebp
xlat
adc
and
push
and
jbe
mov
and
xchg
cmp
scas
fiaddl
add
xchg
outsl
mov
push
aaa
pop
cmp
adc
cmp
leave
push
or
aas
xor
call
adc
jle
fwait
cltd
fdivrl
mov
divl
mov
fsubrs
repz
mov
mov
outsb
stc
insl
sahf
mov
stos
scas
mov
mov
sbb
out
lock
push
xor
int
aas
add
sub
jl
in
cmp
sub
iret
pop
jl
and
xchg
sbb
adc
add
ja
add
xchg
xor
into
into
mov
sub
out
dec
mov
pop
or
pop
rorb
pop
out
leave
pop
icebp
and
pop
inc
flds
and
cmpb
xlat
ret
repz
dec
cmpsl
cmc
into
dec
add
dec
ret
sub
mov
outsl
mov
push
fdivrs
fwait
mov
mov
and
stos
pop
int
out
adc
fisubs
push
cli
push
jge
fildl
lcall
dec
jne
push
sbb
loopne
pop
jno
xor
imul
mov
loop
sbb
aaa
add
push
inc
and
addb
add
fisttpl
cltd
test
movsb
and
loope
popf
clc
imul
mov
pop
sbb
jg
into
das
stos
das
or
xchg
dec
xchg
push
dec
mov
mov
jge
cmp
sbb
sti
les
cmp
test
add
mov
jg
in
or
popa
leave
out
es
fcoms
pop
adc
stc
mov
out
cli
pop
bound
and
adc
xchg
or
xor
mov
cmp
inc
mov
rorb
cmp
jle
movsb
mov
pop
mov
inc
sbb
insl
mov
jno
jmp
rclb
pop
jle
mov
cli
shr
dec
dec
repz
inc
fnclex
inc
lods
popa
in
or
int3
sti
mov
test
inc
jnp
test
lds
mov
mov
pop
stc
fs
cwtl
push
rcrb
mov
rclb
sbb
nop
enter
sub
mov
add
cltd
mov
call
dec
insb
fs
je
shlb
jmp
aaa
push
arpl
ss
xor
mov
ret
out
dec
cmc
out
fstp
sbb
fs
movsl
sub
mov
jle
sbb
cmpsb
xor
adc
shlb
jbe
mov
and
nop
xor
lods
je
movl
add
sbb
addr16
shll
cmp
aaa
dec
cmp
jns
js
sub
cmpsb
roll
sbbl
adc
addl
xor
lds
jecxz
lds
lcall
push
scas
sub
jle
faddp
jno
sub
sbb
ja
pop
sbb
add
adc
mov
mov
push
cmp
in
cmpsb
or
mov
push
and
inc
dec
dec
push
mov
loop
push
movsb
mov
lds
sub
xor
mov
mov
es
mov
jle
mov
inc
xchg
std
adc
loope
dec
xor
movsb
ja
mov
mov
cmc
loop
jmp
les
push
jno
daa
xchg
lret
inc
aas
cltd
jne
pop
and
mov
js
bound
pop
dec
mov
fsub
mov
subl
xlat
js
and
outsb
orb
jnp
mov
arpl
xchg
das
clc
pop
sbb
xchg
sub
inc
std
clc
out
iret
sub
sarb
insl
mov
lret
test
addr16
push
sub
push
jmp
pop
rcl
aad
or
jp
xor
aad
inc
mov
stc
test
lds
sub
arpl
jb
movsl
jp
or
sub
jmp
jo
in
mov
test
outsb
arpl
cmp
xchg
jp
push
cli
jp
xor
jnp
push
sarl
fiaddl
sbb
in
lods
mov
test
push
push
inc
jns
pop
inc
push
mov
pop
sub
mov
xchg
sbb
and
xchg
jo
sti
xor
rolb
addr16
stos
jns
lock
push
mov
and
xor
mov
cmpsl
mov
jg
loopne
xor
xor
lret
mov
testl
inc
movsl
xchg
hlt
nop
lea
adc
pop
mov
mov
dec
popf
imul
cmc
mov
xor
out
add
imul
jnp
jae
mov
cmc
out
jnp
xchg
cmp
xchg
pop
push
mov
mov
jg
mov
cld
outsb
cmpl
mov
outsb
and
adcb
pushf
mov
mov
aam
adcb
pop
xor
lahf
pop
xchg
fstpl
xor
push
aaa
jae
or
stc
mov
fdivrp
fadd
push
cmpsb
fs
jns
inc
adc
repz
clc
mov
call
inc
fwait
mov
sahf
xlat
inc
in
mov
cwtl
fsubrs
ds
or
mov
adc
xchg
mov
push
xor
shlb
and
daa
push
test
xorl
test
cmp
push
xchg
lods
dec
push
jnp
in
xchg
lcall
mull
add
mov
lds
or
cwtl
jecxz
mov
rclb
lods
fsubp
push
dec
ficompl
xor
popa
shll
adc
sbb
lcall
lahf
xchg
stos
pop
xchg
push
ds
sbb
xor
push
pop
popf
lret
aas
cmp
inc
ss
popa
sub
test
and
cmp
and
aad
lds
repnz
enter
clc
mov
repz
mov
jbe
sub
inc
pop
mov
dec
xor
call
call
rcll
push
inc
mov
arpl
in
sub
and
cmc
pop
movsl
push
adc
pusha
cwtl
shll
insl
pop
lods
xchg
int3
lods
pop
sbb
std
lock
pop
sub
xor
xor
and
scas
dec
mov
dec
pop
push
divb
fcos
mov
push
lret
mov
push
movsl
lods
fcomps
imul
push
or
notb
inc
insb
out
pop
inc
rclb
aas
mov
int
mov
pop
pop
dec
insb
loope
lock
mov
xchg
inc
mov
into
sahf
and
xchg
mov
xor
inc
sub
and
push
mov
xchg
sbb
push
jmp
ret
add
mov
or
and
push
aas
mov
jmp
fisttps
mov
adc
adc
mov
push
mov
lret
subl
push
adcl
mov
ss
sti
fdivr
xchg
into
out
add
mov
sbb
pop
pop
lret
movb
sbb
fildl
mov
mov
and
xorl
xor
xor
out
push
in
xchg
mov
pop
dec
iret
add
mov
or
push
test
sti
jbe
push
xchg
adc
call
xor
jne
cmp
fisubl
adc
add
or
enter
rclb
jle
daa
orl
inc
test
dec
cld
jle
inc
cmp
sub
sub
xchg
das
popf
cmp
call
jge
mov
mov
and
xchg
out
sub
sahf
lock
scas
js
adc
in
dec
sbb
imul
test
add
pop
push
pavgb
mov
outsb
rclb
adc
mov
into
dec
mov
bound
popf
cmp
sub
or
xorl
sub
jle
xchg
push
hlt
jg
jne
pop
scas
call
lea
mov
push
es
je
mov
mul
mov
mov
adc
add
ss
repnz
push
push
xchg
repnz
and
dec
mov
bound
dec
imul
js
mov
loop
repnz
xor
loop
cmp
lods
stos
in
jb
jmp
push
xor
and
lods
mov
gs
scas
mov
fwait
aad
stos
push
push
dec
fldenv
out
cmpsl
dec
aam
mov
pop
xchg
sbb
test
lock
in
dec
sbb
insb
mov
mov
stc
sbb
sarl
ja
mov
adc
jp
jle
push
xchg
mov
push
fwait
mov
xor
xchg
xor
call
mov
adc
mov
insl
das
and
or
push
fs
sbb
test
inc
icebp
insl
stos
jnp
jg
add
or
ds
xor
ljmp
inc
loop
fdivrl
data16
ss
add
sub
in
mov
icebp
xchg
push
lahf
lock
mov
mov
out
ljmp
mov
sub
mov
lds
ds
and
js
xor
push
pop
inc
ds
setno
cmp
loope
xchg
mov
test
fistl
xor
xor
scas
in
in
dec
jae
test
add
sti
lock
fistps
enter
std
or
adc
xchg
mov
cltd
iret
xorb
pushf
les
inc
push
call
dec
push
sub
daa
int
cmpsl
dec
aaa
mov
mov
push
xor
inc
lret
mov
aad
cmp
sbb
cmp
shlb
aam
and
aad
push
in
adc
imul
js
rcrl
jg
roll
lret
mov
pop
sbb
cmp
dec
in
mov
test
push
mov
cmc
cmpsb
inc
test
sbb
cmp
xchg
mov
mov
dec
cltd
rol
inc
inc
jne
outsb
jo
in
addr16
push
cmp
loope
ds
mov
test
fsubp
inc
push
sub
rorl
js
mov
xor
sub
or
adc
mov
loope
add
es
pop
test
imulb
pop
pop
lock
push
xchg
xchg
xor
mov
mov
mov
or
cmc
mov
scas
push
cltd
cmc
push
jecxz
mov
bswap
lret
adc
inc
fwait
mov
dec
sub
mov
add
cmp
int
inc
sbb
aaa
jne
sbb
in
ret
cmpsl
sahf
mov
divb
popa
daa
mov
jge
roll
and
mov
orl
jp
lea
cmp
gs
mov
mov
fs
movsl
inc
push
shr
push
xor
pusha
dec
adc
push
mov
sbb
xor
fdivl
mov
push
icebp
xchg
push
dec
mov
push
mov
cld
pop
aas
sub
lea
lahf
in
outsb
ja
insb
pop
fdivrs
push
inc
cli
mov
clc
push
cmpsl
out
subl
pop
adc
jl
rdpmc
int
mov
mov
lcall
imull
iret
push
loopne
mov
fwait
jo
mov
sub
push
adc
xchg
mov
and
dec
or
sarl
adc
dec
outsl
repnz
hlt
sahf
push
dec
cmp
mulb
xchg
dec
pop
out
jnp
jmp
mov
xor
dec
mov
test
or
in
jge
add
inc
sbb
mov
cmpsb
movsl
popf
dec
out
in
adc
mov
inc
pop
jns
test
cs
mov
push
cmc
frstor
loop
pop
mov
inc
cwtl
sbb
addb
les
mov
xchg
push
xor
xor
push
enter
xor
outsb
cmpsb
jecxz
test
mov
push
pushf
jp
or
xorl
repz
and
shrb
push
mov
fs
dec
adc
imul
fimull
sarb
jmp
xor
push
stos
push
aaa
in
ror
jne
divl
ret
pop
or
ja
mov
cmp
inc
call
outsl
jecxz
lret
push
outsb
adc
pushf
insl
push
in
out
cmc
je
aaa
pop
or
xor
inc
and
in
dec
je
fistpll
call
shrd
dec
mov
sub
cwtl
ficompl
arpl
or
lcall
push
test
jg
lds
mov
mov
nop
jb
stos
cs
xor
ficoms
cltd
adc
xchg
sbb
ret
dec
incb
lea
outsb
pushf
inc
fnstsw
aad
push
and
jno
es
bound
in
push
movsl
cs
add
nop
nop
in
xorb
fstp
pushf
fisubrl
or
or
jle
and
int3
fists
and
mov
out
xor
pop
fstpl
add
pop
push
enter
in
das
lcall
jne
lds
xchg
mov
inc
push
in
pop
rcrl
xor
jne
mov
mov
rcll
jo
xchg
nop
add
lods
sbb
jmp
and
lcall
rcll
dec
sbb
push
jg
cwtl
cwtl
push
cmp
or
xor
out
ficomps
jl
mov
sbb
jae
les
mov
test
xor
and
les
dec
es
jecxz
push
push
out
dec
repz
lea
gs
cmpsb
jns
dec
or
add
fisubs
add
inc
dec
jp
xor
xchg
ja
imul
mov
insl
aaa
mov
adc
fisttpll
add
dec
jmp
repz
fistps
inc
sbb
adc
ds
testl
ja
xchg
add
sti
lds
pop
adc
ficomps
cwtl
push
adc
aas
les
cmc
adc
fcoms
push
mov
shl
popf
fisubl
adc
xor
pusha
jne
enter
add
push
cmp
pushf
les
xchg
sbb
stos
fistpl
cmp
lds
push
shlb
icebp
or
jns
dec
pop
jne
mov
xor
shlb
int
pop
add
push
int
xor
push
jb
addb
fucomp
push
loop
test
cmp
aas
push
adc
fdivl
sbb
add
push
fidivrl
das
xchg
out
shll
jmp
jo
test
cmp
sbb
or
dec
mov
lret
pop
fisubs
mov
ret
lea
sarb
xchg
fcomp
sub
enter
adc
movsb
mov
mov
outsb
dec
je
popa
sbb
push
out
fs
cmp
mov
shlb
test
mov
stos
fidivl
fadd
sbb
imul
lret
xchg
jl
fidivl
movsb
mov
sbb
shr
adc
mov
or
clc
add
and
roll
fildl
pusha
dec
out
push
mov
push
mov
ret
jg
popf
mov
and
and
adc
movsl
shll
jle
nop
movsb
sub
jae
push
out
mov
pop
cltd
add
jns
push
xchg
jg
or
adc
lods
xlat
cli
jg
addr16
loop
cmc
mov
rolb
int3
mov
out
push
std
push
aas
jle
ljmp
iret
mov
or
les
das
sub
cmp
and
xchg
shlb
fidivs
adc
outsl
mov
fdivrl
subb
push
fmuls
sbbb
movsl
imul
push
out
ret
xor
hlt
lret
add
cltd
xor
mov
inc
pop
push
popf
into
iret
loope
cmc
push
xor
xchg
cmp
sub
mov
cmp
pop
xchg
stos
daa
fistpl
cmpsb
insl
mov
test
ret
vpsllq
xchg
push
ljmp
cltd
negb
sbb
cmp
sarl
push
fnstsw
test
pop
aad
in
arpl
testl
pop
addr16
mov
cmp
mov
cmp
addr16
stos
add
add
rol
bound
jle
push
call
cmpsb
cltd
jnp
lock
xor
dec
push
hlt
xlat
adc
ja
hlt
push
aam
xor
in
mov
cmp
out
xchg
enter
mov
outsl
push
daa
movsb
cmpsb
lret
in
push
test
pop
loop
dec
dec
mov
lods
xchg
push
xor
pop
jno
out
cmpsl
aaa
pop
mov
lods
outsl
dec
negb
push
adc
int
mov
pop
subb
imul
fimull
insl
push
loope
ss
mov
leave
repnz
outsb
cmp
hlt
imull
mov
lods
jae
dec
cmp
cld
xchg
mov
fwait
js
mov
loop
sar
mov
rorl
cld
push
outsl
call
cld
xorl
xchg
clc
repz
sahf
mul
cmp
and
dec
mov
dec
pop
jno
xchg
sub
loop
xchg
pop
push
pusha
push
daa
ret
in
and
inc
aas
fdivl
and
push
fs
and
imul
mov
jle
pop
enter
mov
xor
fcoml
xchg
dec
imul
adc
clc
jecxz
movsl
fsubs
or
inc
data16
adc
jo
js
aad
dec
in
scas
shrl
daa
sahf
fmul
popa
and
popf
outsb
out
sub
or
movsb
hlt
hlt
jno
adc
mov
jb
aaa
jp
dec
out
std
mov
mov
loop
push
jecxz
btr
daa
shr
in
rcrb
xor
adc
inc
or
cmc
sub
insl
mov
aam
xchg
push
pop
arpl
test
xchg
add
loope
ret
enter
scas
aam
push
inc
jmp
dec
sbb
pop
jnp
push
push
lahf
sub
repnz
dec
or
imul
mov
mov
lods
leave
pop
pop
inc
or
addr16
lcall
xor
popl
out
int3
pusha
inc
mov
xlat
into
adc
push
adc
and
xchg
pop
ds
jp
sbb
mov
and
dec
imul
popf
cmp
pop
mov
fwait
pop
lea
or
shlb
xchg
pop
push
out
sub
dec
lods
or
int
mov
out
lock
je
jmp
inc
bound
fsub
ds
iret
sbb
fs
dec
and
into
mov
out
jno
call
jle
push
push
pop
into
cs
fmul
lock
sbb
sahf
test
movb
pop
mov
inc
mov
cltd
fcoml
xchg
xor
test
jne
ja
add
jl
pop
add
cwtl
push
jg
jge
negl
sub
push
inc
or
insl
push
popf
popa
mov
and
pop
sub
pop
mov
mov
pop
xor
cmp
sub
dec
popf
popl
loopne
shl
pop
sbb
jl
dec
ja
jp
popf
or
je
loop
push
loope
loope
cmpsb
adc
add
mov
jno
ret
iret
sarb
lods
adc
add
aas
cmpsb
pop
or
pop
push
mov
mov
jbe
ret
xchg
adc
sub
or
andb
pop
sub
leave
mov
jl
mov
push
pop
mov
pop
add
or
dec
dec
lods
pushf
mov
movsl
dec
xchg
pop
cmpsb
pop
xor
aaa
mov
inc
imul
cli
mov
xor
mov
mov
sbb
mov
pop
or
mov
cmp
addr16
jne
pop
sub
sub
add
lds
jo
std
das
movsb
inc
loopne
addr16
mov
mov
pop
and
lret
hlt
mov
sbb
cmp
leave
mov
ror
cmp
xchg
dec
mov
loope
push
mov
sub
mov
sbb
sub
xchg
fiaddl
jno
test
fwait
test
push
ret
mov
ret
mov
inc
fisttpll
cmp
push
sti
xor
jae
xorb
inc
mov
pop
inc
pop
in
dec
push
pop
push
call
aaa
repz
ljmp
xchg
shrb
push
loope
and
pusha
iret
int3
mov
fmulp
stos
jno
and
ljmp
test
mov
or
jbe
mov
in
shl
aad
outsl
int3
mov
rorl
imul
in
mov
inc
aaa
fadds
add
xchg
and
push
out
aas
add
cltd
xchg
xchg
cs
mov
jo
cmp
adc
mov
pop
mov
lds
push
mov
add
inc
or
lahf
jg
cltd
mov
xchg
in
clc
fwait
jle
jl
mov
xor
pop
nopl
ss
fmull
xor
mov
pop
xchg
push
imul
repz
sub
mov
pop
adc
pop
pop
cmp
mov
mov
jecxz
das
mov
ja
sbb
popa
inc
test
aad
and
dec
mov
and
int3
dec
adc
mov
pop
into
adc
rorb
mov
mov
mov
adc
and
lret
cmp
fbld
inc
push
and
sub
scas
jns
orb
in
dec
pop
fisttpll
jecxz
or
sahf
mov
sar
cltd
shll
test
std
cmp
out
addr16
in
xor
inc
rcrl
lods
mov
lret
jge
test
add
jle
push
sub
mov
xchg
xchg
inc
mov
push
xchg
outsb
ret
fiadds
sarb
or
int3
shll
sbb
mov
push
cld
pusha
cs
insl
rorb
or
in
ret
rorb
negb
xchg
jb
adc
hlt
or
je
or
sbb
out
in
and
xabort
dec
or
rol
scas
fsubl
and
xchg
xchg
call
xchg
xlat
inc
pop
aaa
test
fdivs
sub
xchg
ret
cltd
and
dec
xchg
xchg
push
out
out
int
cmp
ss
shrl
or
test
inc
xor
push
mov
movb
mov
ret
movsb
sbb
add
jae
or
pop
in
mov
or
pop
adc
loopne
addr16
sub
out
xchg
push
out
mov
and
es
push
cmc
pop
jmp
pop
jmp
bound
loopne
inc
fstps
adc
push
cmp
mov
mov
popa
mov
movsb
mov
andl
cmpsl
lret
mov
pop
and
filds
xchg
mov
add
sub
loope
mov
repz
loop
mov
or
xlat
icebp
in
pop
dec
ljmp
loopne
mov
push
or
cmc
movsb
mov
rcll
mov
push
outsb
xor
adc
sub
cmp
shrl
stos
sbb
dec
mov
lahf
cwtl
ss
or
push
rcl
andl
fsubrs
inc
fwait
fnsave
movsl
fwait
mov
int
or
dec
pop
pusha
jne
test
sbbl
out
pop
dec
mov
hlt
xor
mov
inc
iret
mov
mov
icebp
mov
xchg
adc
mov
aad
add
lock
mov
adcl
jne
dec
mov
inc
sub
scas
dec
push
dec
in
mov
or
lock
popa
rcrl
stc
mov
cs
js
fidivrl
cmc
dec
mov
sbb
pop
loop
cltd
gs
mov
dec
outsl
jo
mov
les
out
sti
mov
es
sbb
dec
mov
outsl
sub
mov
sub
pusha
ja
aam
scas
scas
jne
into
dec
lods
ljmp
aad
loop
mov
je
sbb
xchg
add
addl
fsubrs
popf
ds
es
aad
mov
int3
rcl
mov
pop
xchg
sbbb
push
mov
ret
and
fadds
lahf
std
sar
pop
fmull
rcll
sbb
iret
outsb
sbb
mov
mov
fxch
cli
adc
aad
pextrw
cmpl
inc
loop
les
sbb
outsl
sbb
test
xor
xor
jp
sub
push
jg
sbb
sti
jl
call
in
out
pop
adcl
in
stc
movsl
push
xlat
rolb
adc
test
out
sub
stos
jle
repnz
push
insb
movsb
jp
dec
jecxz
std
mov
push
add
lods
leave
mov
pusha
lret
ficoml
lods
mov
and
add
nop
jg
push
push
scas
add
loope
fs
inc
dec
or
sub
sbb
mov
jae
arpl
and
loope
lods
cmp
movl
insb
lds
inc
dec
idivb
xchg
mov
sarl
and
int3
leave
cmp
mov
mov
push
pop
adc
into
sbb
or
dec
in
ljmp
pop
cmpsb
mov
jp
rcll
fildl
daa
gs
push
xchg
bswap
mov
fs
inc
sbb
xchg
lcall
mov
clc
lret
cwtl
mov
mov
sahf
xchg
inc
fst
gs
sub
push
sbb
pop
inc
cmp
inc
sub
fstps
or
and
mov
hlt
sbb
add
sbb
xorb
push
sub
sub
lcall
mov
add
dec
xor
daa
cmpl
sub
push
outsl
mov
mov
add
xchg
xor
cmc
fisttpl
fadds
pop
adc
enter
xchg
xchg
stos
push
push
mov
les
inc
mov
call
inc
mov
fdivs
pop
test
fstpl
cmp
push
addr16
or
ljmp
fdivs
cmp
cmpsb
xchg
mov
xchg
cmc
repnz
repnz
daa
rcrl
and
hlt
sahf
repnz
adc
sub
pop
les
pop
fs
pusha
loope
inc
cmpsb
mov
cmp
je
mov
movsl
xor
mov
adc
mov
loopne
packuswb
or
pop
mov
mov
clc
fildll
mov
push
inc
xor
shlb
dec
sub
mov
push
aam
or
and
mov
lea
jecxz
in
cmp
emms
dec
and
mov
sub
insb
out
mov
mov
sub
push
inc
fstpl
inc
add
int3
jp
inc
cmc
cmpb
aam
jbe
and
fstl
fisubrs
jecxz
jl
xchg
push
xor
xchg
jp
xor
mov
mov
xchg
leave
xor
inc
jle
and
out
dec
pop
cmp
outsb
sbb
cmp
gs
xor
cltd
cs
jecxz
cltd
xor
in
das
js
and
inc
aas
daa
push
outsb
push
push
xor
mov
pop
aaa
jle
jmp
ds
push
inc
push
xchg
fwait
aad
sbb
pop
ret
gs
int
lcall
fbld
jno
sarl
ds
fnstenv
push
icebp
ror
inc
add
sub
adc
mov
add
mov
dec
lods
push
cmpsb
push
pop
xorl
pop
or
inc
sbb
inc
mov
cmp
mov
sbb
rolb
jge
test
cmpsl
test
sub
in
inc
cmp
pop
inc
scas
jl
and
das
cmp
push
test
jbe
and
out
pop
ds
push
jbe
xchg
jecxz
movsb
mov
mov
fcoml
pop
decl
xchg
cmp
jg
cmpsl
push
cmp
std
jge
jmp
xor
adc
fneni(8087
adc
sub
int
xchg
dec
cmp
stos
scas
add
mov
aam
pop
xchg
adc
aam
mov
cmp
rcrl
inc
mov
les
test
mov
orb
int3
dec
mov
xor
fistpl
jmp
xchg
mov
xchg
push
xchg
push
mull
sbbb
mov
mov
dec
cmp
call
and
fadds
jae
aam
jne
xlat
nop
sbb
mov
repz
cmpsb
lret
fcomi
xor
fisubrl
das
xchg
dec
cmp
jge
jo
adc
xchg
imul
jge
enterw
aad
adc
fcoml
ror
sbb
and
out
push
inc
jmp
mov
mov
imul
push
mov
rcr
aaa
cld
pop
mov
mov
fsubrl
aas
pop
bound
loop
inc
sbb
pop
sub
pop
mov
pop
shll
pushl
jecxz
int3
xchg
inc
lret
imul
int3
sub
pop
mov
aaa
icebp
sub
cmp
xor
jg
xchg
pop
sub
lea
add
add
jb
jno
xor
add
sbb
dec
jnp
mov
js
aad
pop
jecxz
push
testb
mov
outsb
adc
test
fld
cmp
adcb
jne
pushf
or
inc
jno
mov
lret
sbbl
mov
add
xor
pusha
ds
and
push
scas
xor
adc
icebp
dec
enter
sub
jno
cmpsb
add
add
fstpl
stos
sti
push
sbb
out
mov
fimuls
xchg
cmp
scas
loope
xchg
scas
jmp
mov
cmpl
lods
test
imul
aad
mov
aam
xor
loop
stos
push
pop
adc
daa
xor
nop
xlat
lods
jo
stos
inc
call
push
xlat
pop
xchg
sub
xorb
add
cld
jl
mov
leave
in
inc
cmp
test
imull
lret
lds
dec
jmp
jno
and
aas
jo
mov
mov
cmp
rol
cmp
cmp
scas
lods
test
and
addr16
cmpsl
inc
dec
mov
pop
pop
scas
pop
ljmp
ffreep
inc
scas
cmp
adc
rol
jb
mov
fs
stos
ljmp
pop
cmpsl
pop
jae
je
cld
mov
stos
add
adc
push
inc
cmpsb
mov
xorb
push
lahf
clc
dec
xchg
rol
adc
lret
inc
xor
push
ja
subb
push
ret
test
stc
into
jl
inc
arpl
ds
sbb
imulw
pop
inc
ffree
pop
inc
or
push
jb
sbb
clc
mov
mov
scas
mov
xchg
add
fidivl
stc
xchg
daa
mov
fidivs
nop
sub
lcall
rcrl
inc
es
and
mov
repz
loopne
movntq
out
testb
mov
pop
dec
fstl
loopne
jno
test
int3
out
in
repz
pop
pop
stos
ss
pop
xlat
scas
jp
jmp
rcl
or
mov
mov
sub
and
push
andl
xor
jnp
lods
dec
stos
pushf
dec
add
idiv
out
mov
xor
out
fstpl
dec
test
xchg
hlt
dec
stos
xchg
dec
adcb
std
mov
or
pop
icebp
test
inc
xchg
lahf
les
pop
mov
inc
cld
clc
mov
ja
into
add
int
xor
push
lods
roll
cmp
das
or
js
ljmp
insb
add
add
fistpll
popf
in
fs
into
movsb
dec
out
loop
jbe
es
xchg
loopne
cmp
es
fincstp
rcrb
xchg
sub
inc
data16
call
cmpsl
xchg
mov
test
and
or
andl
stc
pop
push
xchg
testl
inc
or
sub
ljmp
shlb
in
push
adc
in
jnp
jns
sbb
mov
and
rcrb
xor
jecxz
pop
popf
loopne
pusha
mov
movsb
xchg
mov
cltd
add
shlb
cmpsb
rcll
mov
les
mov
push
inc
xchg
dec
xor
outsb
lret
pop
test
dec
add
sub
mov
and
mov
lret
xchg
push
mov
out
inc
sub
xor
mov
lea
in
out
in
xchg
test
test
bound
xchg
xor
loop
cmp
mov
xchg
roll
xchg
stc
movsl
aas
jp
ror
adc
push
adc
mov
cmp
mov
xor
pop
add
mov
add
mov
push
ret
inc
es
daa
mov
adc
pusha
mov
mov
sbb
out
mov
mull
insb
push
pushf
pop
pop
adc
xchg
or
push
sbb
ds
out
and
test
inc
sub
xorb
xchg
inc
jb
out
dec
lods
sub
int
adc
fs
testb
cmp
mov
jne
in
push
jne
jns
and
test
and
ss
xor
adc
icebp
fcmovnu
ljmp
mov
outsl
sbb
jne
enter
or
add
push
xchg
xchg
jp
and
rcrb
mov
adc
lahf
test
in
pop
and
mov
mov
mov
mov
xor
cmpsl
pusha
popa
mov
stos
iret
pop
ftst
inc
adc
cmpb
js
push
ret
and
icebp
sub
push
cmp
rorl
out
xor
pop
stc
fimull
ljmp
subl
das
adc
ds
xchg
xchg
pushf
mov
or
mov
fistpl
and
sti
cmp
shlb
jp
inc
leave
in
mov
or
lods
dec
xchg
enter
divl
dec
jnp
lret
ljmp
push
pop
mov
jge
sar
popa
dec
ficomps
dec
test
out
adc
stos
loope
and
out
daa
test
test
xor
das
inc
cs
mov
cmp
stc
push
sub
popa
lahf
mov
mov
dec
push
pop
repz
jb
or
push
push
xor
xchg
jo
cmpsb
pop
xor
jmp
stc
push
inc
xchg
adc
lds
pusha
popa
push
add
das
mov
mov
pop
push
mov
xor
mov
outsb
dec
cmp
fistl
rcll
stos
pop
out
divb
iret
shll
cli
add
fwait
loop
insl
rcrl
inc
out
shr
mov
test
sbb
push
addb
xchg
inc
jge
mov
leave
or
fwait
add
daa
inc
jb
and
icebp
mov
into
mov
imul
mov
imul
in
lds
xorl
idiv
xchg
mov
or
xchg
and
dec
jno
lret
jno
enter
addr16
lods
lret
push
out
bound
xor
loopne
xor
sbb
sahf
negb
fcoml
jmp
scas
mov
subb
or
inc
push
fidivrs
mov
testl
pop
mov
pop
fistl
testb
mov
sbb
xchg
or
dec
sub
push
push
lods
sub
leave
int3
out
ja
sti
dec
adc
in
cs
repnz
jns
mov
mov
sub
test
xchg
cld
out
mov
hlt
fadds
sub
arpl
ds
cmp
in
mov
das
outsb
xchg
push
mov
mov
sbb
inc
mov
xchg
cmp
je
ljmp
out
es
shrl
fsubl
out
push
ss
sbb
js
es
pop
pop
cmp
insl
test
lret
aaa
hlt
daa
int3
cli
mov
mov
popf
dec
push
mov
xlat
pop
sbbb
and
rcr
lods
pop
dec
dec
ds
fst
or
sbb
sbb
addr16
dec
cmpsl
jnp
je
or
mov
push
cli
cmp
in
and
leave
cmpsl
and
xchg
lds
iret
add
cmp
mov
std
ficomps
lods
fcmovnb
pop
into
jle
jge
fs
xorb
dec
add
jecxz
mov
stc
push
and
dec
int
push
mov
mov
adcb
bound
cmp
sbbl
pushf
inc
jno
call
pushf
sbb
int3
push
mov
gs
cvtdq2ps
lea
leave
pop
adc
test
aam
rol
xchg
xor
mov
inc
int
std
jecxz
mov
jbe
add
pop
ds
cwtl
mov
jge
fmull
sub
gs
aam
repz
ss
cwtl
test
dec
jne
ss
mov
jbe
pop
fldenv
or
mov
push
ljmp
in
call
xor
fdivl
and
pop
cltd
mov
aad
push
lret
test
xchg
dec
lods
outsb
push
add
popa
stc
test
popf
jnp
sub
mov
iret
jne
test
adc
add
xchg
popa
cli
cmp
cmpsb
loopne
in
fnstenv
add
ret
and
fistpll
in
adc
test
lock
std
ljmp
ret
aaa
gs
add
aas
mov
mov
outsl
stos
jle
jo
andb
in
cmp
push
call
jl
and
lods
rclb
das
jge
in
lods
loopne
daa
pop
dec
cmpsl
dec
xchg
pop
mov
ja
arpl
pushf
jecxz
xlat
lcall
adc
cmc
lea
mov
loop
jno
cmp
lods
dec
lcall
int
mov
imulb
sbb
out
mov
cmp
mov
sub
fnsave
or
dec
pop
inc
imul
lret
stc
hlt
push
aad
mov
push
mov
pusha
mov
shlb
imul
mov
inc
in
push
lods
cmp
cwtl
daa
jge
push
jo
scas
jmp
mov
inc
fadd
add
cld
push
jb
jmp
sub
into
punpckhdq
inc
sarl
insl
hlt
adc
subl
sub
ret
sbb
push
loope
jge
mov
mov
rorl
scas
push
dec
jmp
shlb
push
sti
xchg
dec
cmp
sub
mov
adc
mov
pop
jecxz
cmc
cmc
sar
fwait
scas
in
push
mov
or
jmp
cmc
or
push
adc
out
ss
mov
push
inc
mov
mov
lods
sbb
flds
or
sub
mov
rolb
neg
inc
pop
dec
inc
xchg
bound
adcb
push
cmp
out
jl
cmp
jo
outsb
add
dec
and
rclb
in
popf
rol
ror
in
push
fsubrl
pushf
lea
in
adc
out
stos
sahf
mov
mov
add
into
add
imul
nop
pop
mov
ret
pop
aaa
mul
mov
data16
push
mov
es
test
xchg
and
inc
insb
and
stos
inc
ficomps
hlt
jle
iret
inc
cwtl
pop
sbb
scas
mov
mov
lcall
jns
cli
jo
pop
xchg
adc
shr
cmp
mov
imul
push
pop
mov
inc
dec
mov
ds
lret
das
push
xchg
xchg
cld
sbb
test
sub
xor
mov
or
ret
mov
dec
jbe
sbb
push
cmp
mov
les
mov
lcall
je
mov
xchg
xchg
iret
addr16
dec
lret
iret
out
fidivrl
idiv
mov
xorl
fstpl
sarb
cmpsb
push
inc
int3
arpl
sbb
add
pusha
mov
push
in
test
mov
or
fists
xchg
mulb
pop
mov
and
std
inc
sub
sbb
ss
lret
aas
negl
aaa
lret
out
stos
loop
mov
ret
pushf
push
add
pop
or
xor
cmc
mov
adcl
in
aas
sbb
popf
dec
adc
mov
mov
and
dec
stos
aam
outsl
ds
aas
cmp
pop
dec
mov
scas
sbb
lret
pop
xor
or
jp
bound
xlat
shl
mov
ja
insl
andb
std
movsb
ret
in
mov
jno
jne
adc
out
ja
stc
xor
rclb
fwait
and
hlt
je
push
stc
or
cmp
inc
mov
fucomip
loop
pop
imul
cltd
inc
cmpsl
repnz
aam
xchg
add
push
or
ss
ljmp
daa
enter
push
xchg
mov
sbb
sbb
add
sub
bound
add
cwtl
imul
sbb
sbb
xchg
xchg
lods
sarl
or
fmuls
loope
pop
cmpb
cmp
cld
mov
dec
xor
loop
xorl
daa
push
sbbl
adc
scas
outsl
adc
enter
enter
or
aam
mov
aam
pop
xor
out
or
pop
inc
mov
push
sahf
mov
rclb
test
add
addr16
mov
in
sbb
push
out
jp
pop
pop
insb
cmpsl
mov
cwtl
aas
mov
or
mov
add
add
or
push
ljmp
jbe
clc
sbb
jne
test
pop
fisubrs
xchg
cld
test
jp
inc
rorl
outsb
lods
fmulp
adc
shll
adc
jg
out
mov
pop
je
or
and
dec
adc
stc
addr16
xor
cmpsl
in
mov
add
subb
call
push
cmp
xor
sarl
inc
hlt
pusha
fstpt
mov
fxch
pop
sti
and
xor
cld
clc
mov
jo
lods
jb
add
repz
loopne
cmpl
aas
jle
subb
leave
inc
xchg
fldenv
dec
aad
pop
xlat
push
xchg
cmp
push
in
mov
leave
mov
ss
adc
ja
mov
shrb
or
lcall
rcrb
cs
sub
mov
cs
and
adc
out
push
js
shll
push
adc
jle
lret
andb
scas
jno
adc
sbb
xchg
mulb
mov
enter
movsb
jmp
ljmp
rcll
mov
imul
int
add
dec
fsubrl
lret
addr16
ficompl
aas
or
mov
lret
add
push
mov
adc
add
pop
out
pop
lds
cld
adc
xchg
js
mov
xchg
xor
lods
divl
mov
mov
pop
xchg
mov
data16
sti
in
cmpsb
xchg
fdivs
gs
cltd
scas
mov
lret
outsb
or
ret
ret
adc
enter
sub
push
cmp
pop
outsl
and
push
push
lahf
mov
add
mov
lds
fbstp
mov
xchg
jbe
inc
arpl
dec
pop
cmp
into
mov
rolb
scas
jbe
imul
pushl
or
push
pusha
adc
fs
xchg
mov
out
lahf
ss
and
fisubrl
xchg
mov
dec
out
jb
lretw
push
mov
push
push
push
mov
fsubp
dec
shl
adc
bound
sub
mov
mov
xor
push
test
sahf
add
dec
call
dec
add
or
sbb
jae
popa
pop
xor
xchg
jno
mov
sub
lock
or
cs
mov
xor
push
xor
das
sbb
scas
addr16
aad
fs
popa
call
push
cmpsl
data16
jmp
mov
xor
jne
pop
add
int3
jns
xor
push
sub
pop
aam
add
cmp
fidivs
lods
outsl
cli
sbb
mov
cmpsl
rol
out
out
rcl
fs
outsl
sbb
fdivr
scas
cmp
push
mov
jnp
adc
sbb
leave
mov
inc
jp
xchg
in
cltd
sbb
push
push
sub
int
jo
ds
gs
mov
ljmp
xor
add
fldl2t
adc
and
mov
xor
cmp
mov
lret
pop
lods
mov
lret
or
and
pop
jne
cmp
push
pmulhw
jbe
add
mov
push
sbb
cmp
push
push
movsl
scas
sub
repz
ja
jle
mov
or
pop
inc
arpl
sahf
clc
lods
mov
push
adc
add
inc
popf
jbe
mov
jne
fistl
inc
mov
xchg
mov
sub
and
mov
lods
add
inc
sub
inc
pop
adc
dec
mov
lock
rcl
sarl
and
inc
mov
les
xlat
sbb
dec
dec
and
imul
mov
jnp
mov
cltd
pushf
pop
lock
mov
fwait
clc
sbb
pop
clc
shl
xchg
pop
mov
ret
xor
push
and
test
dec
int
fstpl
int
xor
mov
xor
arpl
rclb
jg
insb
imul
adc
add
cmp
and
rep
dec
sub
push
out
repz
cmp
call
mov
jl
enter
enter
jns
inc
or
sub
push
daa
pop
outsb
lret
push
cmp
lret
jl
lock
setg
pusha
out
mov
cmpsl
mov
into
mov
jb
sub
call
mov
subb
sti
insl
shl
lret
and
cmp
cld
sub
fcmovne
pop
mov
or
mov
push
push
sub
adc
xlat
enter
adc
pop
lret
sbb
sbb
xlat
pop
out
mov
inc
cli
aad
mov
fs
dec
lret
rorl
jae
lret
mov
aas
sub
mov
xor
inc
sub
testw
jp
or
dec
push
imul
jle
fstpt
std
shrb
jnp
xor
loopne
adc
in
rorb
dec
push
loop
or
fs
call
jb
mov
fcmovb
pop
cmp
divb
xchg
cld
pop
hlt
lret
fldenv
or
pushf
push
inc
pop
pop
mov
pushf
sbb
xor
mov
xlat
ljmp
cwtl
stos
cmp
out
xchg
and
in
shlb
cs
pop
lods
int
in
sub
loopne
xchg
andb
push
sub
pushf
imul
jle
sub
jb
mov
fmull
loope
repnz
and
shrb
cmp
xchg
fnstcw
adc
sub
pop
adc
sti
xchg
loopne
jle
mov
cmp
add
pop
int
adc
add
sbb
lahf
push
loopne
loope
test
movsb
sub
pushf
jge
mov
xchg
test
pop
cld
push
mov
insb
add
or
pushl
cmc
mov
xor
mov
dec
imul
ljmp
push
int
jecxz
mov
adcl
jnp
adc
mov
je
sahf
fbstp
sub
lds
iret
mov
and
jp
mov
ret
movsl
add
xlat
fisubrl
lods
or
inc
add
daa
jp
pop
sbb
shlb
aad
rcrb
xchg
jge
fwait
divl
cmp
stos
xor
mov
call
push
loope
pushf
call
cli
xor
loope
dec
xor
stc
or
sub
sbb
xchg
mov
popa
cmp
push
adc
xchg
je
jns
into
shlb
xorb
rcr
mov
push
popf
pop
repz
je
idivb
pusha
nop
shlb
mov
adc
xchg
mov
lock
cmpsl
fwait
xchg
rcrb
enter
mov
xchg
push
and
loopne
mov
push
cld
popa
mov
in
mov
xor
push
mov
or
push
and
jns
out
mov
cmp
or
enter
shlb
pop
xor
inc
and
cmp
pop
iret
and
mov
mov
js
xor
lret
jne
inc
add
mov
pop
daa
jp
sub
and
enter
inc
loope
push
mov
movsb
adc
out
out
mov
mov
mov
mov
pop
adc
stc
lret
inc
sub
inc
aam
lahf
int3
dec
call
mov
test
testb
int
jg
popa
add
cmp
loop
mov
mov
dec
nop
lcall
fiaddl
inc
xchg
cmp
ret
call
addr16
loope,pn
sbb
mov
out
xchg
push
mov
hlt
shrb
inc
mov
out
js
add
or
mov
faddl
pop
and
aaa
imul
in
loop
aas
xchg
add
clc
fcmovnb
int3
in
fstl
les
jno
ret
and
lock
pop
jp
sbb
mov
cwtl
pop
inc
ss
xchg
or
leave
movsl
cmp
xchg
stos
mov
pop
ret
aad
fmull
xchg
sub
iret
pop
orb
or
insb
rcr
test
dec
movsb
cmp
cld
jmp
inc
shr
lods
dec
popf
and
jle
hlt
lds
movsl
or
adc
movsl
imul
lret
jb
mov
test
and
loope
mov
shll
mov
pop
imul
pop
clc
ds
jmp
das
ja
or
mov
orl
aas
lret
xor
adc
rol
jp
insl
xchg
cmp
mov
xchg
ss
push
sub
je
sub
frstor
xor
ss
xor
outsb
and
or
pop
or
ret
mov
hlt
outsl
mov
les
hlt
mov
jmp
mov
push
add
sub
or
or
add
push
xor
leave
jle
fsubp
push
ja
push
das
andl
jns
cmp
pop
fstpt
sub
nop
jg
dec
ret
rcrl
xlat
mov
int3
pcmpeqd
pop
lahf
insl
test
mov
test
jns
sub
ds
ss
jl
dec
ret
cld
imul
sahf
pop
cld
jne
arpl
sub
or
jns
jb
call
mov
pop
jmp
mov
inc
jno
mov
xor
push
jecxz
xlat
ret
shrl
lods
je
les
popa
rorl
push
sbb
in
sub
push
xor
push
arpl
cmp
jbe
inc
mov
hlt
lea
sbb
arpl
fcmovne
scas
xchg
lret
mov
lds
in
enter
pusha
xchg
or
cmp
xorb
in
adcb
sbb
mov
and
repz
and
jl
or
mov
int3
out
pop
mov
sbbl
mov
fwait
scas
jo
mov
ljmp
xchg
or
push
adc
daa
add
insl
out
dec
arpl
clc
sbb
nop
jb
adc
xchg
mov
cltd
lods
xchg
mov
fidivrs
mov
das
mov
mov
dec
inc
nop
scas
mov
stc
sbb
xchg
daa
test
ret
pop
adc
push
mov
ja
add
ret
je
loopne
lret
jae
jmp
lods
mov
pushf
in
jg
int
mov
ljmp
out
jne
call
lods
mov
ret
dec
dec
jecxz
sbb
push
and
repnz
jecxz,pt
cld
pop
xchg
xor
pushl
jp
add
jns
lods
les
fwait
sbb
push
test
or
or
dec
loopne
movlps
inc
aas
mov
xchg
outsl
sbb
sahf
in
xorl
xor
icebp
inc
adc
adc
bound
push
jae
neg
loope
or
xchg
cmpsb
push
lods
add
ljmp
xor
inc
sarb
bound
mov
rcrl
lcall
mov
adc
jne
sahf
outsl
push
push
popf
and
push
fwait
push
loope
imul
shll
cmc
ret
cmp
jl
dec
inc
push
outsb
jnp
mov
push
rol
js
inc
jbe
and
inc
or
or
andb
push
mov
addr16
andb
jmp
test
mov
adc
insb
xchg
pop
repz
insl
inc
cli
mov
fsubrl
cld
jnp
or
fwait
out
jne
mov
ja
arpl
xchg
aas
out
mov
daa
fstpt
cmp
sub
xchg
mov
mov
pop
outsl
ljmp
int3
lcall
push
pushf
outsb
repz
int
sub
insb
ja
test
ss
push
iret
dec
mov
aaa
xchg
pop
add
pop
jmp
test
int
lcall
or
xor
out
aad
imul
in
loop,pt
fwait
icebp
adc
ljmp
xchg
fcmovu
mov
xchg
or
leave
or
movsl
cmp
test
sti
sbb
sub
rclb
out
imul
popa
fwait
outsl
cs
push
adc
pop
lahf
pop
ficoml
mov
mov
or
xchg
and
movsb
push
cwtl
insl
lods
cmc
inc
mov
pop
xchg
inc
test
push
sbb
sbb
dec
adc
sbb
test
int
xchg
xor
aad
hlt
lods
hlt
xor
bound
rcrb
cmc
xchg
or
or
jns
cmp
into
mov
dec
cmpsl
dec
push
es
cs
xor
shr
das
mov
pop
add
push
popf
mov
scas
sahf
in
imul
dec
xchg
inc
push
iret
add
sarb
sbb
ds
inc
mov
add
adc
aaa
xchg
fcomip
sbb
jl
in
aaa
mov
push
jbe
mov
andb
pop
sub
mov
mov
insb
insl
cmpsb
inc
jmp
pop
dec
fisubrs
mov
or
outsl
jae
daa
mov
jns
jbe
jmp
inc
call
inc
inc
xchg
sub
jmp
ret
xor
fs
sbb
mov
cltd
mov
fs
mov
sbb
and
ret
ret
faddl
icebp
je
pop
js
adc
ret
inc
int
stos
push
fistpl
adc
pop
popa
jg
sbb
lods
jl
stos
add
ss
xor
iret
ss
add
lret
daa
jne
and
and
lds
mov
insb
jp
sbb
sbb
and
jae
fcmovnbe
out
mov
xor
fiaddl
ss
push
lcall
xchg
test
cmp
pop
sarl
and
and
sbb
mov
cli
cltd
psrlq
aad
icebp
cmp
negl
popf
in
dec
out
in
and
pop
mov
jecxz
cmp
repz
imul
xchg
adc
jns
movsl
in
iret
cmp
lret
sti
jle
lahf
cmp
popf
or
into
dec
dec
mov
mov
out
adc
test
int3
jle
enter
and
cli
push
test
push
sahf
gs
stc
mov
and
les
and
jns
jno
cs
sub
test
inc
lods
push
jge
ret
dec
mov
xchg
cmp
sub
mov
fldenv
int3
xchg
push
inc
pop
movsb
sub
pop
xchg
jge
add
xor
add
xor
stos
mov
jp
xor
jne
outsl
pop
dec
cmc
lods
lret
mov
jp
xor
icebp
push
sub
pusha
lret
or
and
pop
repz
mov
jb
stos
popl
imul
and
sub
clc
ret
iret
jo
xor
pop
mov
leave
insb
pop
lock
mov
cmp
adc
lea
gs
test
sbb
movsl
mov
jg
jg
lret
sbb
xor
pusha
xor
or
xor
pop
push
pop
jae
xchg
clc
dec
test
lahf
inc
add
mov
cmc
lcall
xor
scas
sub
loope
cli
cltd
pop
popf
push
lock
jo
lock
lcall
adc
js
sbb
dec
xchg
push
push
inc
mov
sbb
or
mov
push
or
mov
sub
test
cmp
pop
cmp
pop
push
dec
movsl
xlat
xchg
gs
ret
mov
dec
sahf
test
add
sub
sbbl
dec
arpl
push
pop
mov
bnd
mov
xor
add
lods
ljmp
fs
incb
into
pop
hlt
lret
cld
xchg
cmpl
mov
das
scas
lods
fs
pop
or
sub
dec
cmp
fwait
sub
cli
inc
fcoms
mov
push
loope
push
mov
js
adc
add
sub
add
mov
push
loop
cmp
repz
out
jno
incb
ficoml
adc
ss
in
mov
mov
das
xor
call
mov
pop
insl
shlb
jbe
ljmp
fs
sbb
add
call
mov
mov
or
jo
addr16
mov
stos
sbbl
cwtl
movsb
lods
add
jg
loope
push
in
aam
icebp
test
fs
scas
pop
std
sbb
movsl
data16
xchg
pusha
faddl
push
pop
cmpsl
sub
xchg
mov
in
xchg
push
xchg
test
cmp
rcl
je
outsb
sub
adc
ljmp
cmpsl
ja
jnp
iret
add
push
pop
insb
pop
jmp
test
outsb
ret
stos
in
ret
faddl
dec
sub
push
outsl
cli
xor
jno
mov
and
pop
push
insl
push
aas
push
je
jnp
mov
add
cmp
cmp
dec
push
mov
daa
sbb
xchg
je
jp
mov
aas
inc
ret
roll
fidivrs
aam
pop
dec
gs
cmpsl
fwait
ja
push
insl
nop
lret
das
cmpb
fidivl
insl
pop
and
repnz
mov
aam
loope
xchg
jl
mov
push
lcall
cmp
shll
cli
ret
push
inc
popa
fwait
inc
addl
sub
repz
or
xchg
or
pusha
pop
cli
xchg
mov
dec
pop
xchg
sub
mov
fbld
inc
lret
cmp
mov
nop
aam
pop
xlat
jbe
out
lret
mov
out
std
cmp
mov
xchg
mov
insb
andl
les
xorl
mov
mov
jl
mov
not
std
lret
cmp
xlat
test
ds
clc
adc
jb
cmpsb
jg
ret
out
or
clc
or
shlb
cmpsb
movsl
xor
cld
push
or
cmp
xchg
inc
pushf
push
out
ficoms
inc
xchg
push
dec
std
sub
ja
inc
cmp
pusha
pop
jne
in
popf
sbb
jecxz
sbb
clc
mov
mov
jg
and
out
mov
or
cld
or
sti
in
enter
cmp
push
sub
ljmp
dec
add
jns
mov
imul
outsb
cmc
dec
and
stc
mov
in
inc
test
mov
jb
in
rcll
aad
repnz
clc
test
push
leave
pop
insb
vmwrite
xor
xchg
or
push
xchg
jmp
xor
pop
jne
call
adc
push
fidivrl
in
dec
mov
stc
dec
mov
xor
iret
mov
dec
pop
ss
in
push
cmp
fisubs
loop
lret
filds
loop
mov
jns
push
cmpsb
xchg
jle
and
pop
mov
push
sub
sub
imul
fldenv
out
adc
iret
jbe
mov
sub
std
js
add
inc
clc
jecxz
repz
test
dec
push
and
das
sub
dec
pop
xor
enter
shll
popf
cmp
lods
imul
push
scas
cs
mov
rcrl
push
test
cmc
mov
xchg
mov
scas
sbb
xchg
xchg
mov
sbb
pusha
push
mov
enter
mov
inc
pop
je
pop
pusha
mov
mov
leave
scas
lods
hlt
sbb
clc
loopne
ret
push
or
jl
jo
mov
xor
fwait
xchg
aaa
adc
mulb
or
je
add
and
xor
sub
add
lds
jmp
fldl
pusha
test
or
lock
jno
sbb
aaa
mov
or
hlt
adc
fs
lcall
shl
test
das
imul
push
cwtl
cwtl
jmp
sti
imul
fdivs
xor
sti
loope
cmpl
les
mov
ror
push
cmpsl
mov
fbld
mov
je
xlat
ljmp
pop
negl
adc
arpl
jb
out
mov
jmp
pop
into
xlat
xchg
dec
lret
jns
sbb
jo
jp
popa
adc
pop
or
or
sub
or
scas
dec
arpl
lret
ja
jecxz
dec
xchg
jnp
and
popf
orb
jbe
not
ja
mov
outsb
in
mull
pushf
cmc
adc
adcb
inc
dec
pop
adc
push
test
xor
xor
test
push
push
fcom
dec
insl
cs
pushf
out
ss
add
push
sub
pop
rcl
and
jl
pop
add
sbb
lock
cmpsb
cmpsl
jl
jp
test
roll
adc
lock
mov
fnsave
inc
pop
pop
sbb
or
lock
mov
pop
lds
mov
rorb
mov
pop
push
clc
out
movq
ret
add
mov
mov
add
push
loope
mov
orb
test
push
cmpb
xchg
xchg
push
jne
cwtl
sbb
jl
sbb
rcll
push
outsl
mov
dec
inc
imul
call
pop
adc
sub
push
push
xchg
fidivrl
mov
sbb
es
outsb
pop
push
scas
in
jae
icebp
push
cmp
pop
xor
xchg
jne
pop
pop
adc
movsb
jns
and
leave
lods
xor
jb
shr
sbb
insb
pop
mov
adcl
lret
and
fistps
push
test
adc
and
jbe
adc
push
ljmp
or
dec
daa
adc
adc
or
mov
dec
jmp
dec
jge
push
mov
int3
enter
gs
enter
push
hlt
jp
push
in
pop
xchg
inc
mov
stos
outsb
loopne
daa
jbe
mov
and
inc
jmp
inc
lods
push
mov
pop
push
pcmpeqw
add
negb
pop
dec
jae
in
xchg
xor
popa
sahf
xchg
cmp
jns
xor
inc
mov
rep
lret
ret
and
fwait
ja
sub
fdivl
sub
ret
imul
sbbl
xlat
mov
cmp
movsl
cmpsb
sbbb
or
stc
movsb
out
loop
enter
cmp
pop
pusha
iret
mov
roll
xchg
sbbl
pop
insl
test
inc
sbb
xor
pop
jne
mov
mov
jmp
push
cwtl
mov
xchg
xchg
pop
sub
pop
lock
stos
adc
jl
cmp
mov
mov
jg
insb
ret
inc
mov
stc
jbe
and
pop
jmp
and
enter
add
rcll
test
cmp
pop
push
xor
pop
xchg
add
adc
movsb
out
and
stos
push
push
jbe
lret
add
jp
loop
pop
jbe
and
enter
aam
loopne
and
daa
mov
cmpsl
jmp
out
inc
jae
popa
cmp
call
pop
loop
test
mov
imul
xchg
mov
ss
or
push
jno
xchg
xchg
dec
pop
pop
sbb
mov
cmpsb
dec
addl
ret
jl
xor
add
mov
sbb
dec
adc
sahf
int3
jno
lret
jl
ret
enter
popf
nop
or
add
in
add
mov
inc
inc
sbb
shl
jl
lret
jg,pt
mov
insb
je
and
bound
mov
cmc
pusha
xor
inc
push
xor
mov
add
je
mov
sub
sar
movsb
fadd
jl
mov
cmc
jbe
repz
es
xor
cld
xor
xor
popa
shll
push
fidivl
add
or
push
cmp
jl
lds
ror
jne
outsb
sub
jne
jle
loope
or
repz
push
jnp
push
inc
sarb
xchg
mov
mov
inc
jmp
mov
cmpsl
sbb
inc
mov
imull
pop
std
ljmp
lds
repz
lahf
adc
fs
out
push
imul
lahf
rorl
or
lea
xchg
movsb
dec
pop
loopne
dec
out
ljmp
dec
lock
jmp
inc
jl
sub
gs
shlb
pop
sbb
out
arpl
cltd
sahf
aam
cmp
roll
dec
test
add
jmp
xchg
sti
sub
lods
xor
mov
out
lods
pop
ljmp
add
call
cwtl
loopne
aaa
cmp
sahf
sbb
jnp
fbstp
in
notl
dec
cmpsl
ljmp
xchg
shr
imul
xchg
gs
inc
push
jge
aaa
xor
xor
sti
ret
pusha
mov
ja
jb
out
inc
and
lods
pop
mov
jl
inc
nop
movsl
push
test
shrb
add
test
jno
adc
push
rcrl
add
outsb
lret
cmp
pop
hlt
mov
cld
pop
les
rorb
push
addr16
stos
fcomps
push
pop
shll
dec
js
push
cmp
fstps
add
xor
xor
sub
test
xchg
or
pop
stc
or
test
sbb
lods
dec
bound
inc
repz
dec
in
test
add
jg
sbb
adc
sti
mov
cmp
icebp
mov
popf
je
jecxz
jo
xchg
lahf
and
push
lret
lcall
xor
dec
rcl
bound
cwtl
xor
scas
xchg
jg
inc
push
mov
and
or
cmp
out
add
enter
pop
dec
das
sub
cmpl
sbb
sbb
test
push
stos
ja
dec
pop
jo
idivb
sahf
pop
popf
jmp
sahf
scas
lea
clc
sahf
cmp
xchg
mov
jbe
out
lea
and
mov
cmp
mov
mov
ret
jmp
imul
jbe
cmp
iret
pop
jecxz
scas
xor
or
sarl
xchg
gs
inc
js
nop
inc
or
jno
out
cmp
pop
xorl
fcmovbe
jbe
pushf
shrb
jbe
mov
dec
push
inc
sbb
ffreep
imul
out
sub
push
pusha
mov
sahf
aam
std
out
mov
sbb
jbe
js
inc
pop
lret
lds
dec
scas
cltd
mov
clc
mov
jns
fisubs
call
inc
sub
in
mov
wbinvd
fadds
hlt
popf
int3
xor
push
cltd
push
mov
cmp
mov
mov
shlb
mov
stos
mov
mov
push
mov
bound
mov
or
sbb
daa
inc
mov
orb
adc
into
imul
daa
cmp
xorb
push
gs
push
int3
jno
in
mov
sub
stos
lret
push
mov
xchg
and
and
and
out
mov
cmc
adc
push
mov
mov
in
in
daa
fstps
mov
or
xchg
mov
or
leave
stos
sarb
add
int3
inc
mov
pushf
pop
les
jbe
add
inc
dec
fsts
test
sarl
fwait
arpl
aaa
mov
int3
repz
push
fistpl
adc
push
les
xchg
pop
fistpll
lea
ret
out
lods
or
sbb
inc
lahf
dec
subb
cmc
fpatan
xchg
sub
daa
js
xor
incb
push
fists
sub
mov
sbb
jge
lock
andl
xor
movsl
cld
jb,pn
aas
cmp
fmul
pop
lea
adc
xor
shll
adc
daa
repnz
fwait
jnp
inc
add
push
rcl
rorl
jmp
inc
push
xchg
repnz
cmp
cmp
movsb
cmp
or
jbe
mov
jnp
mov
stos
lods
shll
shl
add
xchg
mov
dec
in
pop
aam
mov
incb
cmpsl
or
xchg
jge
das
xor
mov
out
fdivr
push
jne
lea
mov
mov
call
xorb
adcl
test
lods
xor
addb
addl
push
dec
and
loop
and
adc
test
cwtl
xlat
pop
mov
test
push
push
out
aas
sbb
push
push
popf
icebp
xchg
jns
pop
int
dec
fidivrs
jmp
insb
push
ja
inc
push
xor
in
inc
ja
fdivs
inc
mov
fsubr
fdivr
je
pop
test
aas
test
or
jb
xor
jnp
arpl
js
ljmp
inc
aam
jmp
mov
dec
call
insb
mov
test
and
aaa
dec
lcall
push
rcrl
fdivrs
mov
inc
or
fmul
mov
loopne
aam
sbb
das
inc
mov
jns
pop
cld
out
jnp
push
fmulp
jne
xchg
add
sub
dec
hlt
sbb
jp
pop
imul
sub
jmp
mov
fs
int
aad
lahf
add
cwtl
in
cmp
mov
adc
jns
cmpsb
aaa
pop
addl
dec
loop
sti
test
jl
mov
pop
pop
mov
je
daa
xchg
ret
out
mov
es
shlb
jno
pop
cltd
mov
pop
cmp
pop
sub
std
loopne
sub
arpl
mov
sbb
and
pushf
mov
sub
jmp
inc
mov
ss
inc
mov
or
ret
and
mov
adc
sbb
xor
dec
sbb
dec
mov
push
ja
aas
ljmp
int3
jle
cld
mov
dec
xchg
push
gs
mov
outsb
les
cmp
test
ds
sbb
lcall
and
or
adc
int3
jmp
adc
stos
aaa
jae
mov
push
enter
dec
or
mov
push
mov
movsl
lcall
fwait
inc
mov
or
push
cmp
or
das
addb
sub
pop
jp
and
incb
push
sub
xor
xchg
xchg
mov
lds
adc
clc
add
jb
dec
test
jmp
and
cltd
pusha
sbb
mull
lretw
mov
loope
sbb
hlt
pop
mov
jle
sti
movsb
shl
jp
mov
sub
fnstenv
dec
mov
mov
jmp
sub
xlat
fbld
push
inc
test
fildll
cmp
aam
loop
xor
sub
pop
and
shll
fldt
in
and
xlat
pushf
add
mov
adc
shrb
sub
adc
push
inc
in
imul
orw
jne
test
pop
pop
adc
fwait
inc
nop
jo
mov
cwtl
pushf
pop
mov
fmulp
cmpsl
mov
ret
cs
lcall
outsl
adc
fs
cmpsl
testl
ficompl
sbb
sbb
cs
icebp
ret
pop
mov
jmp
out
mov
hlt
mov
jl
je
adc
andb
jns
add
sbb
negl
cmpsl
and
add
lock
out
out
outsb
push
pop
push
sbb
or
xor
std
lock
push
jb
stc
jae
lret
mov
lock
xlat
repz
cmc
xor
cmp
outsl
adc
pop
xlat
cmpsb
aas
repnz
adc
xchg
cmp
mov
pushf
and
xchg
fucomi
jnp
inc
inc
test
pop
outsl
mov
dec
push
fdivp
cmp
mov
push
inc
in
mov
push
sub
sub
cmpsl
pushf
sahf
sub
mov
inc
inc
popf
fistps
push
add
and
outsl
out
les
push
push
cmp
and
sbb
mov
decb
mov
cmp
add
cmc
push
test
and
fdivs
in
lret
popf
sub
loopne
scas
push
xor
pushf
add
cmp
nop
and
test
lods
cmpsb
pop
out
pop
mov
or
jmp
aam
mov
test
mov
jns
or
xchg
xor
jne
mov
out
call
int
inc
sub
fistpl
cltd
std
xchg
icebp
pop
popf
loop
les
outsl
dec
jae
mov
push
sbb
fcomi
jno
ret
ljmp
mov
xchg
ljmp
dec
adc
and
lds
ret
loope
sbb
pop
adc
adc
push
mov
shll
sub
dec
fstl
dec
adc
sub
bound
fwait
jp
pop
cwtl
imull
jge
add
sub
lret
andb
sub
adc
fs
fimull
popa
or
xor
xchg
pop
sahf
xor
pop
cmp
mov
mov
scas
xlat
fwait
prefetch
and
jno
ljmp
mov
outsb
fisttpll
popf
sub
pushf
inc
cmp
jae
jecxz
fs
fs
mov
loopne
pop
push
sub
pop
inc
xchg
push
inc
imul
xchg
cld
sub
icebp
sbb
mov
inc
mov
les
loopne
loop
loopne
pop
dec
cmp
clc
xchg
sbb
in
ret
into
jle
test
repz
sub
inc
push
pop
add
cld
sub
sbb
ss
sbb
jp
dec
sarl
loope
push
cmpsb
out
dec
push
jge
orb
in
or
cli
mov
ja
dec
xor
fdivrl
or
fidivl
ret
test
sub
out
mov
scas
push
adc
xor
call
out
popf
mov
call
negl
add
cmpsb
test
mov
pop
test
das
mov
jae
jnp
loope
xorb
rcll
fsubs
inc
rcrl
or
mov
rorl
or
inc
and
fdivrs
or
daa
dec
inc
das
cmp
push
out
push
mov
ret
mov
fcmovb
cs
pop
leave
adc
rcll
jnp
sub
and
inc
xchg
dec
test
mov
pop
xchg
insl
xchg
add
push
ds
popf
push
mov
jle
mov
bound
adc
les
push
cmp
scas
leave
call
mov
in
rcl
or
pop
pop
shrb
test
pop
adc
int3
psrad
dec
push
out
mov
push
sub
mov
fdivrs
mov
mov
in
pop
neg
aam
xchg
dec
out
dec
mov
xchg
lds
mov
sbb
ljmp
jl
loopne
cli
scas
jne
jns
mov
xchg
inc
cmp
fsubs
out
dec
adc
xor
xchg
xchg
xchg
cmp
iret
mov
xor
std
sbb
push
sub
addr16
cmpsb
push
rcrl
jmp
jbe
dec
insb
mov
pop
leave
or
mul
jo
fcmovnbe
je
loop
mov
subb
mov
jp
sbb
add
lods
and
call
mov
cmp
imul
pop
pop
test
aad
push
cltd
add
and
insb
jne
push
insb
cmp
pop
lret
jnp
and
jg
adc
xchg
or
ja
fdivrs
divb
mov
dec
mov
mov
jmp
jg
sbb
fs
push
call
lahf
mov
sbb
xchg
mov
push
adc
add
jo
out
sbb
mov
mov
outsb
pop
jns
cwtl
mov
mov
xor
lret
adc
pop
jae
mov
dec
int3
bound
push
sub
sub
sbb
mov
adc
mov
xchg
lds
fidivl
aaa
dec
xchg
clc
and
dec
mov
stos
and
sbb
dec
add
int
ret
adc
xchg
repnz
mov
into
popa
sbb
or
loope
ss
je
jne
cli
adc
das
xor
pop
add
adcl
test
push
mov
movsl
arpl
popa
push
popa
into
movsl
sti
mov
repz
jge
pop
pop
push
cli
int
fimuls
outsb
in
xchg
mov
mov
inc
cmp
mov
mov
inc
int3
sti
xor
jb
jg
inc
cld
ss
lods
fwait
mov
and
mov
mov
sbb
in
movsb
mov
lods
add
add
fbld
push
clc
popa
dec
push
push
in
insb
dec
xchg
cmp
cmc
push
mov
mov
repz
push
pop
lahf
outsb
jl
dec
mov
jp
inc
jge
sbb
fldl
inc
repnz
sub
push
adc
in
cmp
add
mov
fidivrl
mov
daa
adc
in
insl
insl
or
mov
cmpsl
fisubrs
cltd
inc
fs
jae
dec
pop
pop
mov
fisttpll
insl
fisubrl
adc
ficompl
mov
push
cmp
stos
ss
xor
jne
adc
loop
adc
xor
dec
inc
pop
sbb
sub
xchg
fcmovnu
outsb
cmpsb
add
adc
push
lret
test
sbb
or
jmp
cli
leave
mov
dec
xchg
add
jbe
inc
inc
inc
or
sbb
inc
popa
in
inc
inc
clc
rcl
adc
dec
icebp
jecxz
and
jmp
aas
add
cmp
adc
jmp
movsl
insb
push
adc
or
sti
cltd
shl
ret
daa
sbb
inc
push
xchg
pop
pop
jp
cmpsb
loopne
mov
mov
fucom
and
pop
in
add
sub
sbb
mov
in
test
or
sbb
sub
or
leave
clc
mov
mov
lret
jb
sahf
or
pop
jo
pop
jmp
out
cmp
faddl
adc
addr16
sbb
adc
es
bound
lret
add
adc
pop
into
dec
imul
xor
imul
jo
icebp
ja
daa
inc
ror
orl
imul
aas
pop
mov
push
les
jge
dec
cmpsb
pop
into
sub
and
rolb
mov
cmpsl
scas
and
xchg
mov
push
test
sub
outsb
jl
xor
jge
adc
int3
adc
push
mov
orl
mov
xorb
test
outsb
int
mov
and
jp
xchg
inc
test
fsubl
mov
mov
frstor
dec
lret
adc
sub
or
push
stc
ss
sbb
jg
adc
push
adc
xchg
cmp
xor
cmp
add
fwait
les
jns
xchg
clc
mov
mov
and
lods
and
andb
das
jo
je
push
lea
xor
in
ds
mov
sbb
addb
call
add
xchg
xchg
cmp
or
inc
test
icebp
test
std
jnp
mov
fdiv
push
std
rclb
pop
add
jo
popl
rcl
xor
xchg
and
pop
fs
mov
dec
leave
lea
mov
mull
clc
inc
mov
push
repz
or
rorb
das
mov
insl
inc
inc
add
cmpsl
or
jecxz
outsl
mov
jnp
ds
fs
mov
mov
adc
cmp
cld
or
pop
add
mov
loop
xchg
inc
inc
add
fildll
repz
xor
mov
dec
stc
in
cmpsb
jmp
jge
lds
pop
pushf
or
mov
loop
adc
adc
mov
mov
pop
inc
adc
jae
loope
fimuls
mov
sub
jne
dec
daa
icebp
or
insb
aad
cmpsl
int
lret
or
dec
mov
clc
and
mov
mov
imul
in
stos
scas
aam
mov
sbb
sbb
nop
mov
test
fildl
js
and
adc
std
inc
pop
test
jecxz
ret
enter
and
xchg
and
das
test
lcall
jg
out
dec
adc
rclb
rcrl
xor
xchg
clc
bound
lods
lcall
mov
and
insl
xor
test
jnp
jnp
aaa
lods
push
in
cmp
mov
push
push
out
dec
xchg
sub
xor
outsl
cmp
mov
popa
mov
dec
sub
loope
mov
jecxz
sarl
addr16
shrl
fidivs
adc
mov
jno
das
mov
mov
mov
lds
jmp
bound
push
call
fwait
adc
lods
inc
enter
pop
ss
mov
xchg
push
pop
movsb
jnp
jecxz
rorl
or
int
push
inc
cld
loope
mov
ljmp
or
xchg
push
movsb
jmp
stc
js
xchg
cmp
pop
xchg
int
dec
mov
fnstcw
aad
adc
pop
pop
xchg
data16
xor
aaa
jecxz
push
or
pop
icebp
xchg
push
sub
sti
shll
and
adc
fisttps
out
push
mov
adc
xor
add
dec
or
and
inc
add
insl
cs
inc
fisttpll
mov
and
ja
or
xorb
mov
mov
hlt
add
mov
lret
pop
sbb
add
test
outsb
lcall
mov
mov
jle
mov
add
in
int
das
andb
ffree
xchg
xor
je
adc
fisubrl
and
dec
push
mov
or
ljmp
lods
or
stos
mov
cmc
pop
sub
or
shrb
pop
dec
adc
adc
pop
and
mov
iret
jno
add
mov
fmulp
clc
nop
ljmp
push
adc
sub
push
out
aam
cmpsl
loopne
pop
cld
xchg
and
push
iret
push
and
imul
mov
aad
cmp
cmp
inc
movsb
jno
and
xchg
pushf
sbb
mov
fcoms
leave
fistps
sbb
or
sti
roll
call
sub
aam
ss
push
push
inc
xor
pop
in
xor
mov
cbtw
out
sub
cmp
mov
lcall
outsl
pop
cltd
and
xchg
and
addr16
out
ja
sub
aam
fwait
xchg
jne
dec
inc
dec
inc
dec
aam
movb
mov
decb
pop
mov
movsl
inc
test
mov
mov
cltd
adc
add
push
push
push
std
pop
push
in
mov
int
or
jo
jmp
jmp
fiadds
les
pop
stc
xlat
cmp
incl
into
pop
sub
cmc
jae
xorl
std
push
adc
pusha
sub
inc
mov
push
mov
hlt
jo
outsl
clc
inc
jne
lcall
push
outsl
adc
lods
dec
jmp
pop
in
fstpl
imul
fldlg2
pop
xchg
and
xchg
jnp
das
dec
frstor
imul
cli
clc
inc
adc
xor
aam
pop
out
mov
testl
add
mov
daa
adc
dec
dec
jno
jp
or
add
pop
or
push
dec
push
mov
cmovle
jns
mov
repnz
es
mov
or
ret
aas
cli
adc
mov
dec
test
cwtl
into
mov
lahf
xor
repnz
popf
jne
int
lods
push
stos
sub
out
aad
test
sbbb
xor
mov
dec
sub
pop
inc
insb
call
lea
adcb
xchg
ss
sub
sahf
out
xor
sub
mov
push
adc
add
cli
lods
sub
pop
test
stos
push
mov
cmp
xchg
and
loopne
test
daa
add
scas
lds
test
add
outsl
shlb
out
ds
xchg
jne
aas
nop
mov
pop
in
dec
stos
scas
lahf
addl
adc
aas
es
ss
push
pop
mov
mov
jae
inc
mov
clc
bound
pushf
rcr
mov
push
cmpsl
add
fwait
mov
push
fidivs
testb
stos
and
int
jo
pop
push
sub
outsb
imul
or
mov
pop
and
mov
add
in
cltd
mov
lahf
xchg
test
ss
push
movsl
testl
mov
jno
xchg
scas
jne
add
sub
mov
je
call
scas
loope
mov
cltd
jns
cld
mov
mov
sbb
cli
ret
outsb
div
outsl
lock
sub
test
aas
jbe
enter
xchg
inc
xchg
movsl
cmp
fwait
jno
outsb
mov
arpl
push
jp
pop
leave
push
andb
jp
outsl
daa
jge
dec
cld
mov
pop
and
bound
mov
sub
fwait
jb
popa
notb
stos
mov
fnstenv
jno
jp
loop
mul
loope
xor
mov
add
ja
clc
shlb
mov
lcall
std
test
push
jecxz
fmuls
adc
jmp
sbb
mov
outsl
jl
sub
int
leave
jne
push
cmp
sbb
nop
pop
shl
or
movsl
test
std
das
pop
sub
xchg
pop
pusha
inc
and
call
xchg
adc
outsl
cli
orl
xor
push
or
daa
fwait
xchg
inc
push
xlat
pop
add
add
xchg
clc
sub
mov
cmpsb
lcall
pop
mov
fsubs
mov
ss
mov
xor
sub
push
xchg
add
push
js
mov
lahf
add
dec
aad
fdivrl
mov
dec
lods
fwait
daa
jp
sbb
mov
pop
dec
fbstp
push
xchg
inc
dec
sbb
data16
mov
enter
push
pop
cmpsl
adc
sarl
addr16
and
adc
dec
je
movaps
xchg
adc
push
sub
jb
xchg
jge
pop
or
jmp
orl
out
aad
lods
inc
sbb
movsl
mov
xchg
dec
cmp
cmp
inc
inc
daa
push
gs
jmp
aad
sbb
test
mov
les
repz
lea
fisttps
cmp
out
shll
das
out
jle
inc
push
leave
mov
sbb
sarl
pop
sti
cmp
add
pop
add
out
out
mov
fcmovnu
pop
pop
xchg
fnsave
cmp
repz
js,pn
aam
in
std
sub
mov
dec
inc
jle
arpl
add
pop
shlb
or
mov
nop
bound
popa
sub
push
inc
mov
pop
sub
xchg
clc
mov
pop
xor
mov
loope
lret
pop
and
neg
aas
inc
cmc
pop
sbb
pusha
sbb
push
leave
pop
pop
cmp
sub
les
cli
mov
scas
mov
cltd
inc
fidivrs
mov
cmpsb
scas
repz
lock
push
mov
lret
sub
dec
and
sbb
cmpl
dec
pushf
sbb
cltd
sbb
mov
jno
xorb
call
test
shrl
pop
in
cmpsb
adc
popa
inc
jecxz
pop
movsl
dec
outsl
jnp
aam
jns
ss
xor
lods
adc
and
dec
aaa
fnstsw
fs
das
clc
pop
pop
mov
or
cmp
sti
push
fwait
jge
add
ljmp
mov
jne
ds
fdivrs
dec
sahf
push
popf
out
ljmp
test
arpl
pop
mov
pushf
mov
sbb
jmp
in
pop
xor
call
mov
pop
jp
mov
paddsb
mov
pushf
jp
or
insb
inc
out
outsl
jne
cmc
repz
jns
jge
or
add
cltd
in
mov
dec
es
loope
rolb
movl
fildl
insl
sti
daa
addb
xchg
xor
aad
in
push
cmp
dec
push
pusha
lods
add
and
imull
push
and
into
test
aad
inc
insb
sbb
pop
insb
jae
mov
push
lret
add
into
nop
sub
out
jb
ror
outsl
push
or
adc
pop
cmp
pushf
sub
mov
je
fmuls
popa
or
outsb
and
insl
inc
or
test
imul
testb
inc
test
jl
lea
xor
cltd
insl
xchg
gs
int
mov
fdivr
dec
testb
movsb
ja
in
lret
lret
stos
mov
mov
xor
xor
insl
or
pop
ffreep
mov
adc
iret
mov
aam
dec
sbbb
out
int
jns
cmp
lods
push
cmp
icebp
jl
cmp
jns
and
frstor
je
add
adc
repnz
dec
fistl
pop
mov
dec
xchg
push
push
mov
cmp
outsb
sub
test
fnstsw
jae
loope
leave
xchg
popf
jo
sub
and
push
push
out
stos
dec
mov
insl
dec
push
sbb
fsts
shrl
jns
mov
and
or
insl
ss
add
lret
inc
fistps
imulb
leave
mov
int3
pop
cmpsl
fs
cmpw
push
jns
das
jge
cmc
xchg
and
inc
cmpsb
push
outsl
mov
stos
inc
dec
imul
cmp
ljmp
in
inc
jle
je
aam
jp
adc
dec
dec
sub
mov
xchg
add
push
imul
adc
gs
mov
cmpps
dec
xchg
outsl
jp
sbb
gs
dec
pusha
pushf
push
mov
repz
lret
inc
cmp
push
repnz
inc
push
cmp
fcmovbe
mov
add
dec
sub
mov
aad
fimuls
lcall
jecxz
imul
call
push
iret
cmp
movsl
ja
mov
inc
dec
scas
adc
lock
dec
ss
or
sub
xchg
cmpsl
push
bound
ljmp
mov
xlat
mov
and
rclb
mov
call
imul
lcall
fxch
jge
lcall
push
js
cmp
adc
mov
jns
cwtl
notb
leave
xchg
dec
cmpsb
xchg
hlt
adc
test
clc
clc
cmpsl
int3
xor
imulb
addr16
push
xchg
imul
sub
push
jnp
les
pop
cmp
ds
jbe
jo
and
xchg
and
push
pop
sbb
shr
bound
xor
pop
mov
mov
scas
add
adcl
jne
movsl
arpl
inc
mov
fstpt
sub
test
int
pop
jo
mov
add
or
fs
in
rcrb
movsl
ljmp
js
mov
int3
shl
scas
loopne
loopne
insb
popa
xor
inc
push
sub
enter
ss
gs
sbb
repnz
xor
test
jp
xchg
mov
mov
test
divb
jecxz
mov
int
mov
ret
lds
js
test
insb
xchg
inc
push
filds
shr
in
push
lcall
aam
mov
out
subb
jge
adcl
and
enter
jmp
lcall
or
je
xchg
jle
sub
add
into
loope
cmp
out
jnp
in
fcmovu
lods
negb
xchg
mov
cmpb
jmp
sahf
lcall
out
jne
xor
roll
adc
or
inc
adc
shlb
das
mov
dec
rcll
mov
cwtl
in
cmc
mov
aaa
xor
mov
loopne
dec
jns
les
sub
pop
in
out
insl
scas
nop
loop
xor
sub
mov
cli
cmp
adc
jb
dec
aaa
rorb
jns
hlt
ja
and
xchg
pop
jecxz
and
jo
leave
lods
cmc
sbb
enter
cmp
adc
adc
sub
pop
push
cltd
push
sbb
pushf
cmp
sbb
xchg
add
aam
in
mov
pop
xchg
aas
jl
mov
jp
inc
les
lock
dec
adc
sbb
mov
out
pop
mov
fldt
xor
add
cmp
pop
pop
dec
xor
fidivrs
adc
popf
bound
lret
xchg
add
or
or
test
or
xchg
inc
popa
push
inc
jo
jo
mov
xor
ret
or
jbe
dec
out
and
sbb
sti
cmp
push
ja
xor
and
adc
aas
clc
loop
cmc
and
adc
fsubr
adc
mov
inc
inc
inc
push
loop
test
or
ret
jo
sub
fsubrs
jnp
iret
mov
jp
mov
cs
xor
pop
out
int
in
iret
mov
lds
push
pop
jb
aam
jo
and
pop
loopne
mov
nop
mov
lock
lock
orl
fldl
or
jb
insb
xchg
sti
enter
aam
xor
cmp
fldenv
mov
sti
pop
add
add
dec
or
cmp
cwtl
cmp
lods
mov
icebp
mov
xchg
jae
mov
je
xchg
sub
divl
adc
add
cmpsl
or
clc
int
test
es
jne
mov
adc
fwait
popf
in
rolb
adc
sbb
xor
xchg
jbe
pop
cmpsl
test
imul
pop
stc
enter
adc
sbb
test
rorl
inc
mov
jge
mov
xchg
les
cmp
jne
push
mov
xchg
out
adcb
dec
test
je
stos
inc
insb
shrl
inc
stos
cmp
add
dec
jecxz
fidivs
sub
pop
pop
push
pop
jae
das
dec
dec
outsb
cmc
xor
or
rcr
sarb
pop
fsub
inc
notb
cmp
cmp
es
add
mov
and
dec
into
addr16
mov
fiaddl
mov
ja
mov
idiv
pushf
sti
and
mov
and
or
jbe
lods
fdivp
adc
push
test
pop
jno
ja
insl
ds
mov
dec
imul
sbb
dec
scas
fidivrl
add
inc
cmp
adc
mov
push
push
stos
jns
lahf
add
pop
and
dec
adc
lock
jp
adc
es
out
repnz
lea
bound
mov
into
pop
frstor
add
outsl
loop
add
stos
outsb
imul
fcoms
insb
ret
inc
add
enter
les
sub
lock
cwtl
mov
notl
mov
je
loopne
addr16
loope
js
xchg
imul
sbb
xchg
cmp
js
les
mov
jge
into
push
cltd
sbb
ljmp
or
cli
ljmp
jle
xchg
pop
dec
imul
xchg
push
mov
push
cmpsb
jp
push
repnz
movsb
es
mov
or
mov
repz
imul
xor
cmp
mov
sub
imul
xor
pop
inc
inc
fldcw
adc
popa
cli
mov
stos
push
dec
adc
mov
inc
cmp
int
clc
xor
pop
das
push
inc
aad
pop
fldl
mov
cmp
std
mov
and
pop
and
and
xor
push
lret
pop
push
mov
jbe
daa
call
jb
inc
stc
cmpb
out
adc
add
xor
sbb
sbb
and
test
mov
ds
imul
nop
cld
icebp
aad
and
add
mov
push
cs
jecxz
insl
divb
cmovno
lods
rcrl
enter
jnp
stos
std
cmp
scas
mov
mov
push
mov
popa
xchg
push
test
xor
loopne
adc
aas
jmp
popa
lods
in
data16
imulb
in
imul
sbb
pop
outsb
xor
push
bnd
sbb
or
push
out
mov
mov
fs
js
xchg
sbb
fistpl
loop
fisttpll
inc
orl
cmpsb
mov
mov
xchg
or
and
lret
stc
fs
mov
dec
cmp
mov
aad
sub
cmp
jmp
pop
cmovnp
lods
subb
clc
idiv
push
mov
into
cmp
aas
mov
test
and
dec
or
fwait
mov
push
add
in
xor
shrl
mov
fsub
int
iret
bound
sti
inc
xor
pop
xor
xchg
dec
mov
or
cltd
jge
in
inc
stc
outsl
lahf
jae
push
add
mov
aas
cmp
repz
inc
ret
sahf
out
push
inc
jns
je
mov
sbb
and
push
xor
test
sub
dec
xchg
mov
push
mov
xchg
push
es
and
push
push
pop
sarb
jg
popa
sub
dec
xlat
repnz
inc
push
mov
adc
neg
gs
cmpsl
jb
push
xlat
pusha
mov
adc
fstpt
lcall
xchg
out
fbstp
jg
sbb
into
adc
sub
jmp
movsl
inc
add
cmpsl
mov
fcoms
pop
std
mov
mov
jne
aas
inc
cmp
fisubrs
cld
outsl
rcrl
add
or
xchg
mov
test
or
rcrl
inc
adc
xchg
lret
aam
les
mov
jnp
cld
fistpl
mov
clc
sti
mov
inc
adc
imul
int
clc
adc
add
sub
fucomp
push
rcl
xchg
push
mov
mov
xor
pop
cwtl
sahf
enter
pop
adc
cmp
fnstenv
jnp
cmp
adc
mov
in
and
sub
lea
mov
and
xchg
and
push
ss
aas
pop
cld
xor
xor
push
stos
sub
inc
adc
jecxz
sbb
jns
add
shrl
movsl
xchg
push
std
push
mov
aam
adc
rcll
mov
adc
cmc
movb
mov
enter
sbb
dec
cs
gs
lret
pop
fcomps
inc
addr16
mov
pop
sbb
aaa
pop
adc
inc
cld
xchg
mov
sbb
jno
cmp
cmp
pop
sub
loop
hlt
test
stc
imul
lret
enter
jnp
sbb
in
inc
clc
popf
lds
or
out
loop
mov
sti
fisubl
jns
adc
std
aad
lds
cmpsl
enter
shlb
push
loope
leave
call
inc
jo
adc
bound
ret
cmp
decl
xor
inc
shrl
push
pushl
push
cltd
mov
cli
cmp
xor
lods
inc
pop
inc
dec
lret
push
ljmp
out
ljmp
pop
insl
cli
xchg
jno
iret
xchg
loope
shll
nop
mov
push
xorb
popf
pop
and
sti
add
mov
ss
xor
dec
notrack
push
jo
imul
sbb
jmp
sar
aas
mov
xchg
aad
pop
hlt
rcl
sbb
int
mov
cmp
enter
mov
mov
out
cmpsb
add
inc
jno
jne
xor
jecxz
test
je,pt
popf
stos
jge
mov
adc
movsl
jae
repz
sbbl
fiadds
inc
add
stos
mov
in
inc
jmp
in
bound
cmpsb
cmp
pop
or
popf
lret
stc
sub
inc
jnp
add
aad
fs
dec
cli
jle
pop
shl
in
fbstp
ss
and
rcr
dec
iret
xchg
insb
sbb
fists
js
cmp
int3
cld
mov
cwtl
popa
lds
and
je
gs
xorl
pushf
adc
xchg
in
popa
push
push
xadd
fstl
inc
test
mov
insb
cmp
notl
mov
test
rolb
push
mov
mov
inc
mov
jl
xchg
dec
stos
rorl
leave
daa
or
dec
data16
mov
lods
popa
mov
mov
jne
dec
and
enter
loop
jae
sbb
and
pop
sub
add
or
mov
or
loopne
icebp
loope
ficoms
lcall
fcompl
aad
push
inc
ljmp
add
out
les
mov
or
iret
mov
jnp
sub
in
cs
ss
arpl
xlat
sbb
and
lcall
dec
aas
shlb
enter
mov
stc
cli
add
jmp
push
lea
std
xchg
jle
dec
or
addr16
cld
add
add
sbbl
jbe
jb
or
out
mov
or
cmp
lea
sbb
ret
insb
cmp
pop
loope
icebp
jecxz
mov
jo
cltd
ja
push
pushf
adc
lods
mov
xchg
xchg
shlb
xor
repnz
jo
sub
sbb
pop
daa
fists
shlb
test
push
movsl
xor
pop
push
cmp
rclb
xchg
pop
jmp
pushf
sub
out
sti
rcl
out
call
jb
ljmp
xor
fwait
repnz
imul
mov
fdivl
gs
cmpsb
jp
mov
adc
fwait
sbb
mov
sbb
stos
mov
add
dec
dec
push
daa
xchg
xor
test
pop
push
jle
clc
dec
test
fld
cmp
cs
jns
add
fisubs
pop
lds
or
cmp
idivb
xchg
jb
dec
cmp
fnstsw
adc
lahf
aam
adc
add
cli
std
cli
hlt
xor
cmp
lock
push
std
cmp
add
jns
dec
mov
test
add
shrb
and
jb
cmp
call
push
mov
inc
sub
cmp
es
js
sub
out
mov
scas
sti
jne
testb
sti
adc
mov
jo
dec
and
stc
fsubrs
mov
cmp
and
pop
and
dec
loopne
xchg
insb
push
rcrb
dec
pop
out
jmp
inc
in
stc
scas
push
imul
fisubs
sub
dec
add
in
jle
hlt
out
jmp
lcall
mov
int
shll
and
jl
ret
xor
sbb
push
ficoml
dec
sub
pop
fldenv
xlat
popa
popl
sti
movsl
add
shr
inc
ret
push
xor
pop
sahf
outsb
in
stc
and
repz
push
aaa
xchg
rcrl
sub
dec
sbb
xor
pushf
lret
adc
dec
cmp
cmp
mov
sbb
clc
test
dec
sbb
fnsave
test
dec
pusha
inc
fstl
adc
xor
gs
inc
cs
and
pop
dec
aad
icebp
cmp
enter
xchg
cmpsb
adc
xchg
xchg
lret
lds
cmc
xorl
cltd
je
inc
loop
push
push
fsubl
adc
lret
push
cmp
xchg
jmp
jge
decb
and
xchg
mov
outsb
test
adc
inc
clc
and
dec
fistpll
and
push
fistpl
jle
rcrl
popl
lea
cmp
or
xor
xlat
shll
out
fprem
push
dec
cmp
enter
cmp
hlt
push
pop
mov
mov
pop
mov
xor
fcmovb
imul
jae
mov
lahf
pop
iret
aas
into
ret
adc
mov
inc
clc
gs
and
dec
ja
iret
lcall
xchg
mov
mov
repnz
enter
mov
and
inc
xor
int3
and
out
ds
dec
shrl
aad
stos
sub
cs
andl
call
leave
das
pop
icebp
pop
dec
int3
inc
pushf
imul
loope
xor
fbstp
ljmp
jp
push
popa
mov
popa
loopne
jecxz
jb
push
inc
inc
ds
xor
mov
test
push
mov
clc
push
shrl
ja
fidivrl
and
mov
cmp
cmp
xchg
xchg
xchg
inc
sbb
sub
and
cld
adc
add
repnz
ds
lret
scas
push
lret
xor
and
addb
or
or
aam
call
push
das
fmuls
mov
inc
mov
dec
inc
test
scas
or
jno
lods
je
inc
gs
jne
fisttps
sbb
notl
dec
int3
pop
xchg
cs
push
stc
cmpsl
cmp
jle
cmp
out
rolb
push
lods
mov
sub
sub
sub
decb
xchg
push
dec
xchg
fwait
movsb
adc
xchg
and
pop
adc
cmp
shr
cmp
in
lret
sahf
rcrl
push
sbb
loop
fimuls
push
into
daa
jl
inc
or
lock
cld
sbb
fistps
sub
jae
shlb
out
dec
mov
mov
dec
dec
mov
ret
stos
nop
xchg
fidivrl
loop
add
cmp
or
lods
outsl
push
into
or
add
dec
ja
inc
mov
xchg
ss
add
out
cmp
xor
insl
mov
xor
lret
ss
ror
sbb
mov
add
and
mov
jns
fnsave
hlt
pop
enter
scas
push
flds
dec
loopne
mov
sub
ljmp
sub
jb
mov
dec
push
adc
cmp
mov
cmp
push
jle
push
lret
lods
repz
out
scas
in
dec
in
push
test
lods
out
cmp
popf
push
mov
push
xchg
xor
movsb
fwait
mov
mov
sbb
ds
push
inc
or
js
lods
fistpl
repnz
inc
lret
mov
es
jle
sub
push
push
and
xor
or
int3
and
roll
lcall
loop
add
adc
push
push
popa
popa
stc
sub
cmc
sbb
cmp
add
hlt
jle
jno
icebp
or
add
clc
or
sahf
je
inc
sub
std
sbb
jge
iret
add
mov
push
add
movsl
mov
inc
les
jno
mov
int3
push
call
or
jmp
dec
jno,pn
outsl
xchg
sbb
int
sbb
sti
xlat
push
jge
clc
outsl
arpl
ret
loopne
sbb
cmp
sbbb
jle
and
jge
fldenv
adc
addb
hlt
out
push
cld
outsl
jno
mov
es
aaa
jno
ret
xor
stc
movsb
push
sub
loopne
leave
iret
cmp
and
pushl
push
sbb
push
mov
push
xchg
adcb
or
in
aam
ds
push
sti
push
mov
movl
sbb
push
je
loope
adc
jb
je
pop
popf
es
or
sbb
mov
jno
mov
mov
cli
mov
jmp
ficompl
xchg
xchg
out
fstpl
push
mov
insl
imul
mov
repz
notb
imul
pop
jmp
sbb
je
add
sahf
rcrl
pop
lods
xor
dec
and
scas
scas
ret
nop
addr16
jecxz
and
es
cmpsl
mov
or
mov
adc
mov
xchg
fs
add
jmp
xor
jmp
sahf
jns
fldenv
mov
insl
cwtl
sub
xlat
loope
fs
cltd
dec
sbb
js
into
pusha
jge
sarl
xchg
adc
pop
push
xor
repz
je
jg
stos
jp
dec
xor
dec
scas
or
sub
bnd
xchg
cwtl
stos
test
arpl
push
pushf
jno
jb
ljmp
out
aaa
test
cwtl
shrl
xor
xchg
fstl
or
or
test
pop
sbbb
sub
xor
mov
arpl
push
sub
jge
scas
mov
mov
push
std
lea
add
punpckhdq
repnz
lock
add
ja
pop
lods
in
mov
mov
add
fnstsw
enter
or
inc
jb
call
popf
xchg
dec
sub
jo
sbb
or
sbb
mov
dec
and
lods
push
xlat
dec
xchg
shll
mov
sbb
in
mov
add
fildll
repnz
lock
insb
pop
scas
jno
lea
scas
mov
iret
xor
rclw
cs
pusha
mov
sarb
and
inc
xchg
test
das
rcll
cmpsl
stos
gs
ret
cli
mov
popw
pop
add
inc
cmp
sub
mov
je
mov
inc
stos
ret
mov
push
je
push
push
scas
mov
adc
test
mov
ja
dec
jo
mov
out
movsl
xorl
adc
inc
fbstp
sub
repnz
mov
sub
sbb
mov
cmc
jl
scas
xchg
mov
sub
fldl
xor
lcall
aaa
cmpb
lea
inc
jo
adc
jecxz
jecxz
repnz
xor
adc
cld
hlt
ds
stc
cmp
mov
dec
and
add
leave
fadds
push
mov
stos
mov
lods
sub
int3
shll
sbb
xorb
jnp
loop
xor
push
sbb
sub
jae
lods
bound
or
cmp
inc
pop
or
cs
repnz
imul
out
push
outsb
push
pop
inc
stos
mov
mov
bound
and
pop
rorl
stos
push
iret
out
out
out
xchg
hlt
jb
lret
fdivs
aam
sbb
hlt
cli
push
inc
mov
insl
xorl
inc
xchg
push
push
data16
xchg
addr16
xor
xor
mov
sub
iret
xor
fsubl
xchg
rcr
les
fmull
xchg
mov
pop
mov
jge
mov
dec
ds
shll
xlat
inc
pop
leave
or
pop
cwtl
jmp
sub
in
xchg
mov
bound
jnp
lods
sbb
jmp
mov
sub
sbb
jle
lods
sbb
inc
sbb
jl
xchg
test
aad
adc
lret
dec
fdivl
xlat
mov
pop
nop
les
ss
shlb
aas
cwtl
psubb
enter
in
mov
repnz
imulb
or
mov
adc
mov
sub
jl
scas
adc
fnsave
in
fcomps
enter
jnp
dec
nop
push
repnz
push
and
adc
and
xlat
cmp
and
xor
xchg
pop
fwait
pop
cltd
arpl
mov
cmp
stc
loop
pop
movl
pushl
xchg
jb
stos
pushf
gs
arpl
add
jo
or
movsl
xchg
pop
ret
sub
fcmovnbe
jecxz
leave
aam
ret
inc
int3
int3
sbb
daa
insb
test
das
adc
cmpb
sbb
and
pop
sub
mov
inc
and
popf
push
lret
sbb
cmp
adc
stos
lret
movsb
mov
out
push
and
mov
ljmp
outsb
arpl
sbb
mov
cmp
stos
sbb
add
xchg
push
ret
and
outsb
loop
gs
loop
movsb
adc
and
push
into
mov
adc
dec
dec
mov
dec
mov
mov
scas
dec
rorb
leave
jno
fldt
movsl
xchg
imul
cmp
add
std
mov
mov
lods
sbbl
xchg
in
push
lods
xor
inc
cld
out
fistps
insl
jle
stos
pop
xchg
fs
arpl
imul
adc
leave
icebp
setle
cmp
jecxz
add
xor
bnd
hlt
mov
mov
adc
jp
popa
enter
sub
lahf
xchg
iret
mov
divb
idivl
lret
mov
in
stos
shlb
addr16
mov
fst
sahf
jae
sub
lea
push
frstor
and
cmp
dec
dec
pop
push
int3
inc
adc
push
lea
add
lods
lds
ret
jl
mov
imul
pushf
les
insl
popa
sub
sbb
xchg
lret
xor
rolb
pop
adc
std
cmpsb
cmp
inc
notb
lcall
dec
dec
dec
hlt
fnstsw
pop
aas
stos
lahf
ss
mov
xor
dec
xor
inc
inc
add
adc
pop
push
pop
leave
daa
cmp
rorb
xchg
and
int
sbb
cli
sbb
ja
pop
stos
sub
adc
or
pop
popa
shl
fsubr
pop
loopne
inc
out
into
cmp
add
lods
inc
std
clc
movsb
cmc
jge
es
dec
xchg
pop
imulb
push
movsb
rcrb
and
jno
aaa
inc
movsb
xor
sti
lret
lods
adc
fs
pop
fnstenv
sti
shlb
jp
add
xchg
inc
mov
test
lahf
fildl
shr
pop
je
ljmp
shr
cs
gs
adcb
pop
js
mov
cmpl
ret
xor
inc
ljmp
cmp
sbb
aaa
mov
sbbl
dec
adc
dec
sbb
pushf
or
hlt
push
cmp
ss
or
mov
jp
push
shrb
sbb
outsb
add
push
arpl
in
rcr
inc
cmpsl
xchg
xor
mov
and
mov
mov
jne
js
or
xchg
ret
dec
loope
flds
rcll
jl
and
push
add
xchg
sbb
repz
jae
in
cmp
sbb
insb
inc
test
lock
out
popf
jge
mov
imul
mov
shr
or
push
cmp
and
and
mov
insl
adc
shrb
cmc
fwait
dec
das
push
pusha
pop
aaa
sahf
rorb
xchg
sub
push
fcmovb
fdivrs
outsl
adc
sarl
cltd
push
jl
shlb
adc
push
cmc
mov
aad
push
loopne
sub
movaps
jno
push
movsb
stc
inc
cltd
ficompl
push
rcrb
mov
add
cwtl
inc
xchg
stos
nop
pop
mov
xor
add
lds
xor
test
ja
adc
sbb
int3
loope
in
in
test
push
pop
or
clc
pop
cmp
aas
jnp
popf
iret
lret
push
pop
cld
xchg
sbb
das
js
push
xchg
sub
inc
jb
repz
push
fldt
int3
mov
sbb
xor
xor
or
stos
in
test
push
shll
mov
sub
push
test
xor
xchg
aas
adc
push
cmpsl
sub
push
pop
lret
xchg
adc
ror
ficoms
add
jo
dec
xlat
push
mov
movw
and
inc
xor
mov
cmpsl
inc
lret
pop
pop
push
fisttpll
pop
es
push
lods
pop
ja
pop
xchg
cmp
fst
cltd
repz
sub
lahf
insl
adc
scas
cmp
fadds
in
cmpsb
stos
jecxz
shll
out
xor
sbb
jle
mov
xlat
out
ds
andl
addr16
orl
adc
push
push
test
inc
cmp
sub
jg
ja
aas
lock
xchg
fsubl
adc
pop
jbe
sub
dec
xor
xor
sbb
popf
lods
imul
popa
das
lret
or
jo
inc
and
xor
adcb
add
cmp
cs
loopne
xor
dec
mov
shrb
cmc
or
push
pop
push
jb
jne
xchg
adc
inc
pop
hlt
sahf
sbb
mov
fiaddl
data16
adc
aad
jne
jne
push
inc
outsb
iret
arpl
int
cld
push
jne
jno
or
mov
stc
pop
popf
inc
or
scas
mov
xor
mov
sar
or
fs
pop
add
xlat
inc
mov
loop
or
and
cmp
mov
dec
ljmp
push
mov
leave
add
insb
xchg
adcl
mov
jne
cmp
sbb
mov
adc
dec
mov
xchg
aam
cmpsl
cmp
lahf
inc
pop
cmc
push
popa
cmp
pop
sbb
adc
pop
lcall
insl
int3
cli
int
sbb
and
and
ret
in
shrb
sub
outsb
mov
test
sbb
sub
aas
or
push
test
dec
xlat
mov
cld
mov
mov
test
inc
dec
xchg
push
cmp
pop
jno
js
mov
pop
xchg
or
stc
gs
outsl
test
test
pushf
addr16
movsb
inc
mov
dec
enter
push
push
mov
jge
xchg
lea
gs
dec
bound
xchg
dec
and
jns
xlat
jp
insb
inc
shrl
dec
jmp
popa
mov
mov
ffreep
stos
fistpl
push
lea
repz
cli
cmp
xor
cmpl
push
dec
test
lahf
adc
sub
mov
arpl
sub
hlt
stos
hlt
test
sbbb
and
push
cmp
out
outsb
adc
adc
adc
cld
loope
xor
xchg
dec
daa
inc
notl
sub
add
lcall
lcall
pop
and
icebp
xor
sbb
fildll
jns
gs
mov
mov
or
mov
jno
std
cmp
jne
out
sbb
mov
lods
mov
ja
mov
loope
push
ror
aas
fs
lds
mov
mov
xchg
push
lret
lds
es
outsl
cwtl
cmp
stos
in
adc
pop
mov
mov
pushf
testb
xchg
add
inc
fimuls
jg
add
xchg
xor
lods
das
pop
incl
cmpsl
add
jecxz
and
jo
data16
sub
popl
lahf
or
stos
xchg
lods
or
sbb
cmp
cmpsb
mov
or
cmpsb
insl
xchg
push
push
repnz
push
pop
rol
push
push
sbb
inc
mov
xorb
mov
push
pop
mov
int
jbe
xchg
xchg
push
or
and
outsl
jge
adc
xchg
cmpsb
loop
mov
pop
xor
fs
test
jo
xor
xor
mov
pusha
or
sub
pop
sbb
cmp
sbb
adc
push
into
data16
outsl
pop
data16
iret
or
lea
xor
sti
dec
popa
data16
xor
shr
jmp
or
cmc
push
ds
sub
jae
jg
test
cltd
dec
roll
out
add
lcall
out
jge
mov
push
and
dec
xor
mov
fimuls
outsb
mov
dec
or
xor
test
sbb
or
in
data16
push
inc
fnstsw
outsl
cmpsl
fsin
adc
mov
push
ja
mov
xor
mov
lds
rorb
fs
dec
mov
inc
xchg
xor
int3
xchg
mov
rorl
rorl
fisttpll
call
or
pop
cmp
pop
shl
hlt
xchg
xlat
data16
push
inc
xor
scas
cmpsl
sbb
inc
js
and
int3
fwait
mov
sub
dec
xor
xchg
dec
sbb
pusha
or
aas
hlt
dec
inc
int3
xchg
std
xchg
mov
sub
mov
incl
decb
rcrl
testb
inc
sub
enter
cmpsl
cmp
xor
push
shrb
mov
xchg
in
imul
repz
jae
psrlw
jl
push
pop
cmp
jecxz
out
repnz
or
lods
ret
das
fistpl
vpsubusb
push
lret
sti
rorl
jno
sub
stc
add
or
lds
in
int
or
mulb
sbb
lock
loopne
stos
pusha
sub
mov
int3
pop
inc
sub
sbb
adc
or
xchg
js
jg
pop
pop
or
aaa
iret
adc
jne
cmpsl
sub
mov
fcoml
cmc
and
push
in
cmp
sbb
mov
dec
faddl
rcl
inc
lret
adc
xchg
cmpsl
pop
pusha
sbb
sbb
cmp
shll
push
dec
fbstp
dec
cmp
mov
jno
pop
cmp
pop
js
aaa
loopne
imul
mov
test
fidivl
movsb
push
pop
jmp
cmpsb
sub
jg
gs
xor
cmp
dec
jg
iret
jo
int3
xchg
sub
push
sbb
xor
imul
adc
negl
dec
arpl
out
dec
mov
testb
and
movsl
jg
push
add
out
xchg
fisubl
mov
js
xchg
push
push
cmp
add
nop
xchg
call
testb
inc
divb
rolb
stc
cmp
adc
mov
jb
pushf
cmpsl
loopne
nop
push
popf
jmp
insl
sub
lcall
cmp
adc
insl
pmaxub
insb
and
in
push
jge
iret
js
je
cld
jno
or
imul
dec
lret
push
mov
stos
push
add
aas
pop
js,pt
ljmp
imull
outsb
insl
xor
mov
push
jg
mov
mov
fidivs
test
pushf
orb
jne
icebp
push
add
mov
flds
rolb
aas
push
mov
sub
iret
aaa
mov
scas
test
test
and
sbb
cmp
add
add
sub
pop
incl
mov
pop
loop
push
jbe
nop
add
mov
pushf
or
inc
mov
jbe
pop
icebp
xchg
pop
add
mov
sub
fldcw
adc
out
aad
jge
mov
enter
std
dec
lcall
mov
dec
mov
shll
imul
xor
pop
xchg
and
xchg
cmp
mov
push
cmpsl
cmp
frstor
sbb
test
mov
inc
aas
mov
aam
sub
or
fcoml
mov
ja
stos
shrb
xchg
fcompl
mov
xchg
mov
dec
lahf
jno
cmpsb
adc
arpl
or
scas
fwait
lods
popf
cmp
int
les
addb
in
hlt
xlat
pop
xlat
or
mov
aas
xor
outsl
xor
outsb
push
int
inc
jl
cmp
nop
pop
sahf
out
rclb
scas
addl
mov
push
jbe
popa
mov
cmp
jb
jmp
mov
jge
push
lretw
xor
aam
loop
shrl
popa
ja
loopne
pop
insl
dec
mov
cmpb
orb
popa
test
lret
shll
jecxz
in
mov
push
rorl
xor
sbb
pop
inc
loopne
jmp
out
jl
inc
ljmp
cmpb
aam
ret
setnp
push
es
mov
lods
int
aam
sbb
jbe
repnz
adc
ret
mov
sar
daa
push
jecxz
out
out
cmpsb
and
dec
xchg
mov
and
out
ja
out
testl
out
xchg
xorb
add
cmp
mov
xor
mov
add
dec
mov
dec
dec
jb
jb
lock
jl
or
js
adc
push
mov
lock
jbe
xchg
xchg
push
lds
adc
insb
loop
add
xchg
and
stos
mov
xchg
std
cwtl
nop
outsl
or
mov
rolb
jmp
into
sub
mov
dec
stos
mov
je
dec
int3
cwtl
jle
shr
inc
adc
cmpsl
insl
xchg
xchg
mov
cmp
cmp
out
mov
sbb
leave
dec
repz
jo
repnz
add
inc
iret
inc
fcomps
mov
push
lret
fcmovnb
ror
mov
mov
testb
add
icebp
mov
outsl
mov
ljmp
jns
lods
mov
adcb
cld
enter
xchg
data16
mov
push
cmp
jbe
cmp
cmp
lcall
sbb
inc
push
mov
outsb
mov
aad
jge
mov
mov
in
cmp
rorb
pavgb
es
frstor
sub
or
and
bound
inc
xchg
lret
mov
cmpsb
loopw
imul
roll
out
pushf
xchg
ret
cmp
pop
shll
adc
lcall
xlat
pop
mov
mov
sub
scas
shrb
bound
cwtl
cmpsl
call
in
ljmp
adc
xchg
in
sbb
into
int
add
leave
mov
adc
xchg
pop
lds
nop
sbb
testb
cmp
test
sbb
xor
out
into
and
jg
lret
adc
imul
lea
sbb
in
push
inc
shlb
ja
mov
movsb
xor
mov
pop
rolb
sbb
test
cmp
mov
mov
push
dec
scas
notl
inc
cld
sub
dec
jne
mov
lahf
lods
mov
and
insb
dec
sub
lods
shll
jne
pop
cmp
mov
aad
mov
mov
jb
hlt
fadds
hlt
imul
popa
lret
and
nop
gs
xchg
daa
add
push
stos
jl
push
test
rorl
pushf
and
mov
sub
mov
popf
cs
inc
add
in
fstpl
lret
sub
fbld
sbb
int3
sub
mov
les
in
cmp
sub
pop
inc
scas
addl
nop
mov
jbe
cld
push
and
loop
xchg
xchg
mov
adc
js
test
mov
pop
rcll
cmp
cld
repnz
inc
sub
sbb
sbb
sbb
pop
add
xor
out
jge
mov
inc
xchg
pop
imul
mov
mov
stos
jnp
sti
push
cld
mov
dec
sbb
xlat
jecxz
or
stc
mov
xchg
pop
sbb
pop
out
lcall
add
notl
in
hlt
dec
xor
daa
pusha
xchg
sahf
add
fsub
xchg
in
mov
cmp
dec
mov
hlt
jmp
jns
cld
rcrl
sub
iretw
inc
lea
pop
lea
outsl
and
ljmp
imul
fiaddl
push
mov
pop
aam
test
aad
aas
dec
pop
push
dec
repz
test
mov
mov
mov
iret
lock
idivl
jmp
shll
fst
lret
xor
xchg
jecxz
sub
test
sbb
push
bound
inc
add
jge
fstl
dec
adc
ret
subb
pusha
mov
testl
scas
loope
sub
mov
mov
ror
push
pop
stos
aam
sbb
addr16
jne
lods
shll
sbb
inc
loope
mov
push
ret
pop
loop
shrb
or
int3
sub
aas
lods
fsubs
inc
dec
movsb
clc
mov
std
sbb
adc
loop
das
xor
pop
jae
push
jns
adc
lret
jb
jp
fs
xchg
rolb
inc
outsl
mov
adc
in
in
inc
sub
dec
mov
cmp
rcrb
shufps
scas
mov
and
lods
jg
xor
test
sbb
adc
repz
out
cld
or
xor
cmc
nop
repz
cwtl
lahf
jne
sub
adc
shll
push
xor
sti
sub
fisubl
push
xor
xchg
and
rolb
jns
lret
xor
imul
push
cmp
push
jl
idivb
jns
dec
push
into
jb
inc
add
pop
lcall
shrb
imul
cmp
and
stos
xchg
jl
mov
and
icebp
repz
or
jg
dec
jno
cmp
pop
jecxz
test
mov
sub
rol
xchg
cmp
mov
mov
adcb
push
lret
inc
jno
sbb
cmp
xor
sbb
out
dec
call
aad
xchg
sub
leave
insl
sbb
or
in
inc
sbb
pop
cltd
mov
cmpsb
orl
movsb
inc
rclb
xchg
cltd
push
call
or
mov
dec
xor
stc
lret
popf
push
hlt
pop
insl
xchg
pop
ja
in
les
or
lret
or
aas
or
jns
movsl
push
loope
jnp
inc
xchg
sub
aam
int
mov
push
inc
push
push
mov
mov
loope
fcmovnu
mov
mov
jno
pop
test
int
test
lcall
xchg
daa
std
test
mov
adc
pusha
das
stos
and
push
adc
adc
xlat
ret
fs
xor
test
fmul
repz
aam
test
mov
out
adc
adc
push
sbb
adc
or
das
or
out
sahf
js
lods
movsl
jge
fcoms
scas
or
and
data16
xor
push
pusha
pop
cmp
das
faddl
out
aad
xchg
out
xchg
movsb
jle
xchg
xor
ss
inc
dec
movsl
lea
adc
cmp
subl
add
mov
and
xchg
imul
cmp
pop
jecxz
data16
cltd
popw
jbe
flds
mov
cltd
push
mov
jnp
in
int3
fisubl
mov
mov
sub
fimull
jbe
adc
scas
xor
jne
cmpb
and
add
sub
sub
fs
adcl
aas
sahf
sbb
mov
or
pushf
mov
aam
inc
mov
dec
and
adc
jnp
dec
dec
cmc
push
in
popf
lods
data16
lods
push
mov
out
gs
or
fsubrl
cmc
mov
cltd
sub
das
mov
in
pop
aam
rorl
pop
repz
lock
dec
jmp
sub
pop
out
inc
jge
mov
lds
ds
sbb
and
jle
adc
ja
cmp
jnp
inc
pop
loopne
pop
sub
mov
out
test
aaa
pop
push
lret
xchg
jle
addr16
popf
push
sti
lods
mov
out
add
jb
cwtl
push
mov
movsb
lock
or
adc
insl
sub
rol
out
ljmp
xchg
pop
pop
and
mov
mov
pop
mov
arpl
arpl
mov
movsb
mov
jecxz
mov
loope
popf
xor
jbe
sbb
sarb
fiadds
xchg
adc
daa
mov
mov
cld
jb
insb
shll
out
cmp
loope
xor
jle
jmp
negl
ljmp
add
push
ljmp
and
push
lods
push
jecxz
fwait
ljmp
xor
nop
sub
ret
out
xchg
pop
sti
aam
jbe
add
test
pop
add
pop
or
in
test
push
orl
sbb
cmp
mov
fimull
fidivrs
cmp
and
addr16
leave
cmc
jno
lret
sbbl
fucomp
push
aaa
loope
cmp
out
cmp
sbb
fsubrs
bound
adc
jl
shrl
jnp
pop
jcxz
into
idiv
fwait
dec
pop
bound
dec
add
out
mov
cltd
jmp
jmp
push
cli
xor
mov
push
sti
pop
stos
mov
mov
push
add
pop
sbb
lcall
sub
enter
loopne
sbb
icebp
fstp
popf
cmpsl
mov
xchg
cmp
push
sbbb
stos
xchg
fs
pop
pop
adc
lods
or
mov
mov
push
fnstsw
mov
aaa
mov
mov
dec
xchg
pop
mov
out
jp
add
ljmp
jp
popa
fstps
aad
jne
pop
push
xor
push
xor
xlat
lock
dec
fidivrs
rorb
addl
outsl
push
jecxz
jecxz
push
es
xchg
in
or
adc
test
pop
cltd
jmp
je
ljmp
gs
sti
inc
das
mov
jmp
mov
cld
or
icebp
mov
sbb
aas
push
cli
pop
cltd
adc
ss
dec
loope
jae
outsl
cmpsl
xor
and
pusha
addr16
out
dec
or
in
mov
sbb
aam
or
add
push
pop
pop
test
aas
sub
or
orb
push
or
xchg
lret
pop
mov
mov
pop
ret
or
jo
mov
shll
xor
or
icebp
shlb
lods
push
ror
decb
xchg
inc
clc
stos
ret
jl
mov
shll
xlat
sub
into
daa
adc
push
jl
dec
dec
xchg
out
fimuls
pop
sbb
repnz
mov
in
insl
cli
jae
xchg
jg
enter
jo
scas
adc
hlt
cmc
test
dec
pop
or
fwait
add
int3
adc
insl
xor
jl
mov
mov
adc
loop
add
es
iret
flds
and
inc
sub
loopne
jl
mov
sub
icebp
cmpsl
mov
insb
adc
mov
sahf
rcrl
inc
xor
mov
je
pop
cwtl
arpl
add
xlat
gs
pop
mov
xchg
ja
jl
and
jmp
xchg
fadds
cli
fs
scas
inc
mov
mov
pop
sub
lcall
adcl
adc
es
je
cli
movsb
ljmp
lock
fistl
roll
xor
dec
out
outsl
cmp
rorb
add
lahf
push
je
sarl
lods
inc
jecxz
inc
push
xor
xchg
cmp
push
lret
pop
lret
mov
test
bound
sbb
outsl
aaa
sahf
jnp
rclb
lret
add
xor
lods
in
pop
fmuls
fdivrl
test
ss
pminsw
and
packsswb
inc
jle
psllw
push
dec
push
add
mov
jecxz
stos
fstps
mov
inc
pushf
out
pop
mov
push
pushf
aas
sub
popa
pop
xor
out
test
pop
xorb
js
push
inc
mov
test
out
inc
lea
xchg
sbb
aam
outsb
aas
leave
lret
fcom
pop
mov
scas
stos
xchg
pop
mov
mov
mov
mov
push
repnz
mov
pop
cmp
cs
xchg
lcall
pop
sahf
mov
mov
lods
test
push
ds
xchg
loope
movsb
jb
lock
xchg
cmp
fildl
push
mov
popf
xor
jmp
add
fistps
int3
aas
jecxz
pop
fidivrs
cmp
in
clc
enter
push
ror
jmp
mov
push
sub
add
andb
mov
cli
add
inc
or
cmp
mov
push
dec
ficoms
mov
hlt
cmp
in
outsb
pop
xchg
xchg
fldl
mov
adc
add
movsl
or
mov
add
subb
xor
inc
jl
icebp
fstps
insb
add
or
inc
mov
orb
xchg
leave
jecxz
mov
sbb
test
cmp
push
lock
inc
addr16
mov
sbb
add
cmp
add
sbb
hlt
inc
push
or
mov
jne
je
cmp
or
xchg
add
in
xlat
in
or
fistpll
jmp
sbb
fldt
maskmovq
mull
in
lea
sbb
pmulhuw
in
inc
lods
add
inc
cmp
fadds
xchg
mov
sbb
es
pop
mov
push
aaa
pop
shrb
out
add
push
je
push
rcrb
mov
xchg
sub
fdivl
pop
loop
lret
sub
xchg
hlt
and
int
mov
dec
xlat
pop
push
dec
inc
cmpsl
shll
mov
imul
push
lret
inc
lods
mov
sbb
scas
sahf
sbb
or
xchg
outsb
xchg
cld
push
sbb
popa
and
pop
lds
mov
mov
aas
or
inc
xor
lret
fwait
cmpsl
xor
mov
cs
inc
xchg
int3
ss
stc
pop
mov
mov
rcrl
xchg
pop
mov
into
xchg
sbb
inc
test
jle
pusha
cltd
or
imul
clc
cld
aaa
add
pusha
cmp
pop
mov
ret
mov
repnz
jae
call
rcll
jmp
xor
mov
cmp
shl
mov
hlt
hlt
int
ss
cwtl
sbb
cmp
aaa
sbb
ds
add
pop
adc
mov
aaa
add
pusha
es
lock
bound
aam
xor
push
xchg
iret
fstpl
sub
cld
cmp
rorb
sub
int
mov
xor
dec
in
jo
pop
sbb
outsl
daa
sbb
mov
push
fmull
add
test
aam
mov
cmp
dec
stc
mov
xchg
int3
and
stos
dec
sbb
daa
sbb
lods
insb
sub
mov
push
data16
push
ss
int3
gs
cld
test
pop
jbe
enter
add
cmc
movsl
push
aad
aaa
add
cmp
das
jbe
push
into
mov
popf
dec
cli
sub
push
jae
cmp
out
mov
shll
mov
sub
jae
fs
dec
sbb
jo
out
test
dec
bound
test
aad
xlat
adc
cmp
pushf
loop
iret
in
and
xchg
repnz
out
aad
daa
push
xchg
cmp
cmp
fsubp
fmul
int
fidivs
stc
sbb
jge
addl
fisttpl
adc
pop
sub
dec
ljmp
jae
or
pop
mov
nop
pusha
adc
xchg
xchg
ljmp
and
aaa
cli
jne
outsl
jns
sbb
mov
pop
or
minps
sub
leave
bound
ss
leave
fs
mov
cltd
clc
push
insb
push
and
cmp
add
push
lcall
pop
cmp
adc
into
in
movaps
sub
leave
push
ljmp
mov
dec
lcall
scas
adcb
sahf
out
add
dec
cmp
mov
mov
inc
xchg
mov
hlt
dec
jg
fs
sarb
push
data16
outsb
cwtl
and
xor
cmpl
jne
or
sub
sarb
adc
push
test
das
inc
lret
xchg
inc
leave
rclb
aad
mov
push
sarb
or
xchg
sti
mov
out
fidivs
shrw
jns
cmp
inc
lret
push
sub
insb
cmp
mov
arpl
bound
mov
loopne
mov
ret
shr
dec
scas
aam
inc
jl
sub
sub
hlt
jnp
xchg
shlb
sub
por
xchg
inc
jbe
cmp
or
and
sahf
and
imul
dec
pop
sahf
push
dec
sbbl
out
jg
fst
nop
mov
decb
xorb
ret
mov
add
push
sub
mov
dec
inc
jo
xchg
mov
repz
xchg
insl
lock
and
daa
aaa
test
xchg
shr
shlb
data16
inc
push
jl
add
jmp
or
popa
mov
addl
mov
dec
dec
clc
mov
adc
test
sti
sbb
sub
push
test
sub
mov
xchg
add
shld
pushf
and
mov
imul
sub
out
filds
int3
arpl
dec
dec
jp
imul
inc
pop
sub
test
lret
lret
ja
add
stos
and
pushf
insl
stos
cmc
js
ret
push
cs
cltd
fadd
into
sahf
mov
test
xorl
jecxz
lock
aam
and
jecxz
shrl
ss
push
xchg
xor
adc
out
xor
sub
or
dec
cli
xchg
pusha
decb
mov
push
in
lock
jl
aam
xchg
sub
pop
fisubs
cmpsb
pusha
pusha
or
add
xchg
adc
adc
push
push
dec
xlat
subl
movsl
pushf
mov
insb
push
mov
iret
xchg
mov
sbb
imul
aaa
adc
jmp
lret
pusha
mov
fcomps
ja
mov
mov
js
aaa
gs
stos
jmp
dec
loopne
adc
fldl
sbb
outsl
pusha
pop
sbb
xor
sub
add
jge
mov
mov
sub
push
popf
inc
xor
add
ret
or
iret
testb
and
push
repz
push
icebp
and
push
divb
push
inc
pushf
inc
inc
insl
sbb
xor
insb
jg
sub
add
int3
imul
sbb
mov
fistpl
mov
push
in
adc
and
inc
cmc
test
mov
xlat
cmp
pop
xor
cmp
mov
xchg
das
mov
and
sbb
jmp
lret
pop
fsubl
imul
push
hlt
sbb
jno
js
leave
popf
or
cwtl
mov
cmovne
xchg
dec
js
jo
rcrb
xchg
or
push
dec
xor
dec
and
sbb
adc
lods
lock
mov
ja
sub
lcall
iret
pop
adc
sti
mov
gs
inc
push
aam
pushf
add
mov
iret
cmp
push
mov
adc
sti
sti
shll
xlat
inc
in
fdivr
jb
in
ja
sub
and
fisubl
gs
xor
mov
jl
bound
imul
rolb
scas
int
icebp
clc
mov
shlb
pop
lret
xchg
iret
jnp
sub
push
sarb
test
shrb
push
icebp
mov
aad
jb
lock
cmp
aas
xchg
sahf
inc
iret
mov
and
mov
int3
repz
sub
int
cmpsl
sahf
cmp
cld
insl
lods
mov
clc
mov
repz
pop
mov
or
xchg
pop
aas
call
adcl
mov
scas
jl
loop
xor
lahf
in
shlb
mov
cwtl
stc
scas
lods
pop
sahf
xlat
fwait
aas
out
fwait
insl
or
pop
push
pop
fnstsw
sub
mulb
rcll
sarl
inc
add
inc
lret
pushf
stc
add
std
mull
cmc
fiaddl
mov
xor
inc
les
adc
jle
fnsave
mov
and
les
jecxz
pop
fsubl
pop
push
popf
sarl
mov
mov
add
aad
sbb
inc
adc
ja
cmpb
subb
mov
fwait
cmpsb
pop
inc
repz
bound
push
aaa
pop
cmp
sbb
shl
jge
out
das
pop
xor
mov
adc
cmpsl
sbb
arpl
dec
lea
sbb
and
sbb
mov
stc
adc
addb
fwait
pop
pop
xorl
loop
or
push
or
dec
arpl
clc
sub
rcpps
sbbl
mov
je
popa
imul
je
imul
fsubs
jmp
scas
je
pop
and
pop
fsub
sahf
test
sub
cltd
mov
cmc
scas
and
mov
xorb
lods
je
in
out
ljmp
push
inc
mov
mov
xchg
mov
jb
mov
mov
iret
sahf
dec
ror
inc
mov
push
mov
in
and
dec
jmp
pop
data16
loop
jg
mov
add
jmp
mov
fsubl
out
mov
dec
sub
add
clc
aam
dec
clc
sub
push
lcall
or
adc
pushf
cwtl
mov
imul
js
and
jle
pop
dec
cwtl
pop
xor
inc
rorb
sbb
lods
jge
test
fwait
mov
mov
fdivs
mov
dec
sbb
xlat
enter
xchg
shrb
sbb
mov
jl
int3
pop
sahf
into
sub
xchg
aad
xor
jp
bnd
dec
out
cmc
pop
xchg
sahf
sub
sbb
out
jle
insb
inc
mov
fiaddl
fdivrl
push
or
cmp
inc
add
inc
aaa
push
int
aas
ret
mov
test
push
dec
push
in
lahf
les
push
sbb
jmp
mulb
loop
jl
add
int
xor
lea
loopne
and
push
out
mov
sbb
ret
add
push
dec
mov
and
roll
loope
mov
jae
add
mov
adc
shlb
fsubrl
inc
mov
mov
outsb
mov
movsl
mov
daa
xchg
xor
jp
aad
fs
mov
roll
je
or
pop
fstps
mov
test
mov
mov
lds
popf
lahf
sub
mov
sub
mov
movsl
jbe
jne
in
mov
jae
pop
div
mov
insl
aas
sub
int3
clc
and
cmpsl
pop
arpl
std
les
adc
out
leave
inc
nop
or
cwtl
insb
xor
shl
insl
fcmove
or
and
sbb
add
pop
pop
sub
jb
lahf
xor
push
push
cmc
fs
sub
xchg
mov
hlt
cmpsb
cs
insl
push
mov
shrb
jnp
inc
pusha
cmp
adc
xchg
inc
jbe
mov
ja
xchg
imul
pop
inc
xlat
rcrl
mov
sahf
dec
pop
stos
into
sbb
add
sbb
cs
clc
out
sub
int3
int
lods
sbb
inc
jbe
lret
enter
test
xor
lds
sbb
notl
adc
jmp
leave
add
or
mov
test
sub
xchg
inc
loop
fcomip
xorb
movsl
aam
lcall
mov
xor
shr
mov
add
in
cmp
xchg
adc
mov
loop
dec
push
sbb
int3
pop
test
dec
pop
xchg
sbb
add
into
jbe
arpl
mov
mov
inc
dec
lods
mov
shlb
adc
ret
mov
inc
cmp
mov
mov
ja
jnp
adc
mov
lahf
lods
out
jl
lods
inc
fcompl
sar
push
jmp
pop
jmp
add
and
mul
aaa
dec
pop
jecxz
mov
sub
dec
lds
mov
adc
push
mov
test
ja
call
divb
jne
jnp
adc
in
stc
sub
cmc
insl
or
mov
lahf
incl
icebp
jmp
cmc
add
push
mov
sbb
mov
sbb
jae
xchg
jg
lret
xchg
pushf
push
add
movsb
or
push
dec
fiadds
aas
sub
adc
sub
in
lock
cmp
sub
sbb
negb
jno
pop
add
pop
loope
imul
cmp
mov
loop
and
aam
xchg
scas
pop
dec
out
pop
xor
jg
jnp
or
and
sub
cmp
jl
jno
call
cmp
sbb
mov
jno
xchg
and
das
in
mov
outsl
xor
mov
ret
push
push
inc
aas
pop
icebp
jp
jns
cmp
fdivrl
repnz
ficoms
or
cmp
xchg
pop
cwtl
inc
loop
inc
iret
call
in
in
popa
sub
ss
ja
jb
mov
mov
dec
xchg
inc
lock
xchg
push
lret
push
jge
imul
icebp
mov
push
out
sub
hlt
mov
aam
cmp
cmp
jb
dec
fadds
sbb
sahf
cmp
xor
in
push
push
scas
pop
aam
cmp
or
insl
scas
jne
or
push
or
lret
inc
mov
int
mov
add
mov
sub
or
lahf
jne
push
int
loopne
and
add
dec
jmp
lods
mov
mov
jecxz
icebp
mov
sub
push
call
xchg
das
push
out
add
mov
inc
fwait
and
dec
add
jmp
xor
aaa
push
jp
jg
icebp
cmp
lret
xlat
mov
js
repz
mov
and
std
pop
cld
jb
stc
popf
sub
push
jns
xchg
or
mov
fnstcw
iret
aas
inc
sub
dec
lods
lds
mov
sahf
jae
dec
repz
mov
sbb
outsb
sbb
xchg
test
fs
xchg
mov
mov
pop
xchg
pushf
call
mov
jo
repnz
inc
inc
sub
cs
dec
out
sub
hlt
xor
pop
loop
into
push
enter
xor
and
clc
lret
test
cmp
test
push
sti
jbe
fdivrl
xor
cmp
daa
add
jo
cwtl
jne
int
cmp
inc
xor
fmuls
push
mov
repz
les
adc
sub
leave
xchg
ret
lods
mov
int3
cmp
ficomps
arpl
popa
inc
mov
adc
inc
ljmp
sarl
sub
push
lock
sbb
push
jne
int
stos
fisttpl
fwait
add
insb
out
mov
xor
push
das
adc
jbe
subl
dec
xor
out
ds
mov
fldcw
dec
xchg
push
mov
sub
fidivrl
in
fiaddl
adc
arpl
jns
sbb
dec
adc
stc
mov
jl
sub
adc
test
movsb
xor
fidivrl
popf
cmp
mov
lret
push
add
shrb
jno
xrstors
je
and
rclb
sub
lock
push
push
mov
mov
sbb
mov
pushf
mov
xor
jne
jb
jmp
es
insb
pop
daa
push
icebp
inc
jecxz
fisttps
xchg
pop
mov
fildl
fstps
cmp
loop
xchg
or
jl
sbb
loop
pop
inc
pop
in
loopne
fs
push
xchg
mov
mov
out
mov
mov
lret
or
out
add
pop
adcl
cmp
mov
push
popf
es
push
push
inc
jl
push
insb
enter
inc
dec
push
push
imul
in
dec
sbb
jo
pop
push
and
or
jnp
insl
cmpsl
stc
rcrb
or
and
fimuls
ret
pop
imul
fistpll
test
mov
jnp
cmpsb
mov
jle
movsb
or
mov
inc
stc
mov
push
out
je
dec
fnstenv
jge
add
hlt
mov
and
push
push
daa
xor
rol
enter
and
cmc
xorb
das
jae
mov
dec
push
push
pusha
stos
push
insb
arpl
sub
and
inc
inc
inc
sbb
into
xchg
pop
ficoms
movb
out
jb
cmpsb
mov
icebp
shll
inc
mov
mov
pop
push
xchg
loope
jmp
cmp
push
pop
sub
push
cmpsl
xlat
fsubs
inc
pushl
pop
cmp
fs
inc
inc
sbb
xor
mov
mov
push
xor
test
xor
jns
aaa
test
call
mov
ss
outsb
mov
mov
sti
fimull
mov
cmc
jmp
hlt
mov
aam
imul
cmpsb
or
movsb
sub
xor
jl
in
test
sbb
ret
xchg
jne
mov
cmpsb
cs
fstps
and
shrl
test
les
xor
adcb
push
cli
xor
and
cmpsb
sti
inc
cmpsb
imul
outsb
xor
xchg
insl
popf
gs
loope
xor
and
aad
push
enter
mov
add
aad
and
inc
std
clc
sbb
loop
iret
xchg
adcl
sbb
stc
inc
mov
jecxz
mov
test
scas
imul
sbb
test
bnd
addr16
decb
fwait
loopne
leave
iret
add
shll
call
int
popf
push
popa
ret
fbld
aaa
mov
sub
sub
mov
lock
lods
in
adc
test
push
push
add
scas
shrb
jl
or
xchg
or
and
mov
jl
sbb
scas
mov
xor
sarb
dec
xor
repnz
faddp
add
imul
push
mov
addr16
call
mov
stos
pop
xchg
pop
mov
cmp
sbb
repnz
aam
cwtl
sub
pusha
xchg
push
cmp
push
mov
mov
pop
into
leave
or
push
mov
pop
bound
mov
mov
push
mov
sbb
fwait
mov
popf
mov
jo
scas
jmp
or
jl
out
scas
mov
into
jo
mov
mov
adc
xchg
fwait
xchg
roll
sti
je
jae
or
sub
push
pop
dec
mov
mov
adcl
inc
inc
dec
out
shll
mov
inc
int
out
pop
jp
test
cmc
cmpsb
stos
pop
repz
sbb
mov
cltd
or
cmp
fstl
pop
push
fsubrs
jo
loop
fiaddl
sbb
cmpsb
out
xor
aaa
call
cmpsl
cmp
in
inc
shrl
sbbb
in
cs
or
add
out
mov
fstpt
lods
push
mov
ja
mov
jle
pop
test
mov
testb
dec
loop
sub
and
and
negl
inc
xor
daa
shlb
or
mov
aad
mov
shrb
cmp
hlt
mov
push
pop
jns
aad
popa
aad
insb
div
fwait
lret
cmp
sub
push
or
dec
mov
mov
pop
add
xchg
mov
movsl
jnp
filds
movsl
sbb
repnz
and
iret
loope
test
jg
pop
pop
jle
daa
jle
arpl
repnz
outsb
js
xor
fadds
push
scas
imul
mov
and
push
sarl
adc
xlat
aad
cld
roll
das
inc
jmp
mov
mov
lret
xlat
out
pop
cmp
test
mov
imul
daa
jp
pop
xchg
mov
mov
dec
jae
sbb
inc
lahf
clc
ljmp
push
push
jne
jo
sbb
sarl
dec
cmp
dec
lcall
xchg
lock
sub
shlb
fwait
jl
mov
es
pop
fwait
mov
insl
jmp
pop
les
sbb
sbb
adc
std
push
incl
lret
jecxz
inc
xchg
push
pop
lahf
pop
xchg
test
jecxz
aad
fs
or
adc
push
loopne
cmp
hlt
call
cs
mov
push
test
loopne
mov
les
mov
sbb
movl
mov
aas
fidivrs
mov
jecxz
or
mov
or
xchg
std
push
pop
sub
stc
in
sbb
scas
repnz
inc
mov
or
rclb
mov
cmp
jl
xchg
fildl
inc
adc
pushl
inc
pop
mov
aas
mov
cmp
mov
pop
jle
mov
mov
xor
push
mov
adcb
std
or
push
lock
jl
pop
sbbl
pop
mov
fstps
cmp
rol
js
pop
sbb
mov
add
adc
imul
mov
pop
push
dec
les
loop
push
ret
outsb
or
mov
inc
jns
pop
jp
stc
dec
jle
mov
out
mov
add
imul
test
jne
push
or
jbe
popa
out
in
movsl
and
cwtl
cli
nop
adc
add
mov
ja
jecxz
or
insb
adc
push
mov
xchg
dec
cmp
mov
popa
sub
ret
shll
jmp
or
xchg
add
lret
xchg
push
out
in
jbe
lret
lods
stos
adc
stos
and
lahf
mov
xchg
nop
repnz
sub
adc
movsb
inc
int
xor
add
push
inc
movsw
xor
or
fadds
fisttps
test
add
cmp
mov
nop
inc
inc
or
in
ss
idiv
and
dec
mov
fldt
rcl
mov
push
pop
cwtl
mov
ret
pop
mov
dec
sbb
fcomps
jl
or
jle
dec
out
stos
lret
in
add
mov
stos
pop
mov
xchg
cmp
add
mov
test
or
les
xor
pop
push
or
sbb
xor
clc
repnz
push
and
out
adc
idivb
or
psubsb
jmp
inc
nop
pop
pop
in
adc
loope
clc
xchg
incl
es
shlb
scas
mov
add
ret
mov
jl
adc
adc
pop
push
fnstsw
call
inc
mov
lods
dec
dec
insl
xor
or
mov
cmc
and
into
dec
push
bnd
mov
push
or
cmp
mov
rolb
subb
inc
xchg
aad
dec
cmpxchg
sbb
xchg
dec
mov
push
adcl
pop
adc
out
push
hlt
adc
jns
mov
lods
pop
ss
insl
fucomi
iret
sub
jl
pop
das
js
mov
cmp
clc
sarl
cmp
or
mov
push
hlt
or
xor
add
mov
add
xor
bswap
enter
decb
fbstp
popa
outsb
xor
clc
int3
lea
popa
push
push
jle
mov
mov
mov
mov
loopne
fnstsw
xchg
out
adc
pop
lods
insb
bound
xor
sub
mov
pop
push
and
dec
hlt
xor
dec
mov
movzbl
ja
add
mov
adc
test
pop
mov
mov
cmc
mov
fcoml
pop
add
repnz
and
lds
xchg
pop
mov
pop
shll
dec
aaa
mov
xchg
repz
loop
jg
addl
xchg
mov
and
push
enter
call
repz
int3
or
out
or
hlt
inc
addr16
dec
enter
dec
daa
sbb
lret
and
xchg
repz
inc
dec
mov
xor
fmull
dec
add
rorl
ss
in
sub
fs
outsl
ss
pusha
push
pop
clc
ret
mov
aaa
push
jle
aas
adc
adcl
shrl
sbb
cmp
sbb
aaa
int
mov
adc
movsb
mov
testl
addr16
lods
xchg
jbe
jo
xor
enter
mov
hlt
aam
orb
lods
adc
push
and
lea
cwtl
je
fidivs
aas
movaps
rorl
ret
out
sbb
sub
addl
mov
xor
push
mov
sbb
xchg
dec
mov
das
add
mov
or
stos
jmp
add
add
jne
sti
int3
xor
in
mov
lret
push
sbb
cmp
out
jne
and
loop
lea
mov
aas
lods
js
sahf
rcll
je
push
xchg
faddl
iret
hlt
mov
cli
repz
lods
int
stos
mov
xchg
add
shrl
mov
pop
aam
adc
sub
hlt
data16
xchg
cmp
or
xlat
xchg
add
add
sahf
mov
outsb
jge
gs
outsl
lcall
into
mov
div
or
subl
sub
or
das
pusha
dec
cmpsl
lods
aas
nop
cmp
jl
out
adc
jno
aas
xor
add
jmp
arpl
mov
jecxz
cmp
cmp
and
out
sti
push
mov
orl
jge
in
stos
lahf
mov
pop
mov
or
pop
out
xchg
pop
stc
sbb
cs
rolb
jge
movsl
daa
orb
je
arpl
xchg
lods
add
jnp
inc
lds
or
lods
aad
aad
pop
roll
mov
pushf
pop
adc
popf
dec
push
in
test
pop
int3
xchg
not
inc
lcall
loope
loop
dec
mov
and
in
movsb
push
in
dec
out
insb
inc
scas
mov
mov
sub
icebp
cmp
adc
mov
out
in
stc
out
mov
bnd
mov
flds
fbld
mov
and
sbb
inc
xchg
jle
pop
add
out
dec
mov
push
mov
fnsave
jge
shrb
outsl
adc
jbe
xchg
lret
xchg
jae
push
cmp
fisttps
loop
cltd
add
add
and
in
int
shl
push
and
jl
stos
lods
sub
mov
sbb
sub
test
mov
mov
mov
je
pop
movntq
out
pop
xchg
in
imul
xor
pop
xchg
jmp
cmp
lods
shll
mov
sub
aad
fs
scas
mov
cs
fsubr
add
push
dec
out
push
je
mov
gs
fcomps
in
loop
lahf
test
repz
dec
inc
aas
push
jecxz
js
adc
fcoml
inc
cmp
sub
ret
fs
jb
test
int
fisttps
push
mov
adc
or
mov
inc
test
sbb
in
mov
es
bnd
adc
mov
loope
testb
aas
ds
add
ds
cmp
pop
or
add
ljmp
cmp
lock
shrb
xchg
jne
insl
xor
lret
addl
les
fisubl
cwtl
pop
pop
sti
sti
push
icebp
js
mov
rcrb
mov
repnz
pop
inc
xor
sbb
pop
jmp
and
cmp
out
dec
mov
cltd
in
shrl
fdivp
dec
mov
adc
cli
xlat
ss
add
dec
dec
imul
or
jo
jno
repnz
xchg
andb
mov
pop
sub
cld
or
xchg
sub
lds
enter
xorb
incb
das
ja
dec
inc
ljmp
add
push
pushf
xchg
sub
shrb
xchg
sbb
pop
and
imul
or
sbb
inc
jp
cmp
xchg
inc
dec
leave
mov
and
mov
jge
dec
fcomi
stos
sarb
outsl
mov
mov
cmp
icebp
cmp
clc
add
cmp
fcomp
mov
xchg
and
pop
std
ja
mov
xor
movsl
xorl
and
add
mov
dec
xlat
out
mov
loopne
std
mov
sahf
mov
mov
sub
imul
test
sbb
lret
pop
jg
sub
cmp
in
jnp
addr16
outsl
dec
outsb
scas
fmuls
in
out
xchg
xor
sub
int3
add
xchg
je
mov
or
lods
and
dec
fdivl
jp
cmp
cmc
push
insl
test
pushw
in
insl
repnz
xchg
ret
push
rolb
dec
adc
sbb
xchg
out
push
sti
mov
dec
push
mov
cltd
sbb
repnz
cwtl
and
mov
in
push
push
cltd
xlat
into
sbb
lahf
xor
add
mov
xchg
fldcw
js
xor
jo,pt
cltd
jmp
std
lods
neg
pop
ret
daa
or
pusha
into
adc
mov
xor
jmp
inc
jmp
stc
inc
scas
stos
addb
mov
sarb
push
add
popa
idiv
loope
inc
call
jmp
movl
js
iret
iret
or
mov
xchg
pop
lahf
out
jno
or
mov
xor
testb
dec
xchg
and
inc
mov
jae
pop
sub
mov
cmp
push
adc
pusha
xchg
adc
leave
mov
in
addl
std
mov
sbb
xchg
movsb
fsubs
push
cmpsb
mov
jnp
mov
stc
push
xor
pop
mov
adc
xchg
daa
and
jge
pop
test
shll
bound
call
rcll
scas
retw
lret
test
mov
mov
dec
outsl
xor
jp
fstpt
push
shrb
or
pop
rolb
es
stos
ret
dec
mov
imul
aaa
cmp
mov
dec
jle
dec
jecxz
cli
mov
mov
cli
cmp
inc
add
in
push
push
pop
mov
repnz
andb
mov
xchg
icebp
roll
xchg
dec
mov
dec
mov
inc
iret
xlat
pop
fidivrl
mov
xor
add
outsb
insb
xchg
movl
and
jnp
jb
mov
mov
dec
dec
insb
dec
pop
add
gs
mov
test
dec
mov
imulb
cmp
or
add
cltd
inc
mov
pop
and
incb
in
icebp
lea
cmpsb
mov
xchg
push
lock
mov
movsl
or
test
pop
or
test
cmc
test
popf
out
push
inc
sub
sti
mov
fidivs
lods
and
adc
inc
mov
or
lods
aam
pusha
pop
into
push
pushf
and
gs
mov
jns
scas
pop
loopne
shr
mov
push
cmpsl
xor
movb
add
add
xor
push
sbb
loopne
xchg
mov
sub
xchg
ds
cli
inc
pop
push
lds
sub
jl
repnz
into
sub
xchg
popa
movb
add
jp
sub
mov
movsl
hlt
inc
xor
push
adcl
mov
or
int
cs
mov
jecxz
pop
into
popl
pop
mov
jp
aam
in
push
out
test
sub
imul
into
enter
stos
mov
outsl
je
dec
insb
mov
cmpb
std
negl
ljmp
jl
andl
orb
mov
ljmp
xchg
imul
cli
shll
stc
mov
mov
inc
ljmp
hlt
fwait
or
push
fistl
aas
and
rclb
shrb
inc
aad
cmc
std
sub
lods
xlat
vpcmpeqw
pop
inc
sub
notl
mov
mov
pop
xor
int3
and
mov
cmp
loop
cltd
jge
push
mov
jle
dec
mov
arpl
add
mov
mov
xchg
xlat
lcall
das
out
je
std
sti
add
movsl
int
xchg
add
fst
shrl
notl
leave
lock
lcall
add
mov
cmp
cli
mov
or
lock
lea
clc
lahf
notl
ret
testl
in
add
outsb
dec
or
push
hlt
mov
mov
xor
test
clc
std
fcmovu
push
cmp
in
shll
xchg
ja
mov
sbb
inc
movsl
pop
in
mov
xchg
lret
mov
and
sahf
ja
testl
sti
mov
cmpb
mov
imul
outsl
sbb
jns
mov
adc
in
add
clc
lock
in
pusha
dec
idivl
and
pushf
adc
dec
lret
fstl
add
lahf
xchg
lret
cmp
lret
mov
jo
mov
lret
andb
scas
rorb
arpl
mov
adc
cld
jae
and
inc
es
cmp
xchg
outsb
dec
testl
add
imul
jno
inc
fs
adc
cmp
xchg
sub
pop
lods
popa
or
int
mov
push
add
jmp
jp
nop
inc
push
pop
jno
inc
cmp
les
dec
mov
daa
mov
stos
fcmovu
cmc
test
adc
cmp
repz
leave
stc
inc
sub
std
dec
mov
out
inc
xor
xor
push
jle
jno
insl
fcmovne
and
cmp
or
cmp
or
push
pop
dec
push
inc
inc
adc
ja
push
outsl
clc
mov
fidivl
loope
stos
add
or
dec
push
mov
cs
inc
inc
rorl
es
jmp
and
lods
adcb
dec
cmc
jl
push
cmpsl
jb
cs
imul
cmp
xlat
sub
sub
adc
dec
and
push
or
inc
iret
xchg
inc
fists
sub
outsl
insl
lahf
fwait
stos
mov
in
cmp
sbb
das
pusha
xlat
adc
movsb
into
push
dec
mov
adc
rcr
loopne
jle
pop
in
pop
rcr
and
ret
and
dec
push
pop
jmp
lock
lret
out
inc
and
out
ret
mov
out
pop
jmp
shl
pop
aam
mov
stc
add
scas
xor
add
lods
stos
xor
push
bound
adc
addr16
in
cmp
into
mov
lds
jno
icebp
xor
out
pop
jno
test
dec
push
orb
push
or
or
and
stc
cmp
out
adc
cmpsl
test
cmp
sbb
mov
xchg
cmc
add
jmp
test
mov
inc
mov
or
repnz
mov
pop
shrb
leave
mov
xchg
and
imul
push
push
pop
lds
mov
pushf
stos
testl
jge
add
nop
sbb
rorb
and
or
dec
pushf
rolb
adc
push
test
cmp
mov
stc
sbb
inc
popa
xchg
inc
sub
mov
inc
jae
stos
cmp
cwtl
mov
adc
jge
leave
push
mov
gs
jle
imul
fists
push
repnz
jp
mov
sub
push
dec
sbb
repnz
push
pop
cmp
cmp
cmp
mov
lret
push
and
or
jbe
add
cs
push
jp
push
inc
and
lcall
insb
bound
repnz
aam
mov
mov
pop
popl
stc
push
mov
mov
mov
push
xor
adc
lods
pop
and
mov
mov
ja
lcall
inc
jmp
loope
pop
add
mov
js
jg
lret
xchg
repz
lret
daa
jae
daa
ja
mov
shrb
inc
outsb
push
xor
rcl
adc
ret
mov
mov
cmp
sbb
jg
je
mov
jecxz
in
dec
sub
dec
inc
inc
mov
push
xchg
les
cltd
in
pop
outsl
mov
and
dec
ficoml
xchg
push
jb
aas
js
pushf
test
dec
loopne
and
into
stc
pop
xchg
xchg
push
shlb
pop
lcall
cmpsb
lods
cwtl
sti
cs
je
fs
lods
rcrb
adc
fstl
push
les
inc
inc
in
andl
mov
das
mov
add
xlat
mov
fimull
mov
fs
int3
lahf
mov
push
jmp
jmp
cltd
popf
sub
ret
lcall
out
aam
fwait
loopne
adc
lea
out
mov
repz
mov
push
inc
add
inc
flds
js
push
aaa
out
aas
cmpb
and
lea
sub
rcrb
sahf
outsb
les
fimull
xchg
enter
into
cmpsb
in
cmp
jbe
xchg
leave
and
mov
inc
lds
cmc
xchg
lcall
faddl
push
movl
push
int
mov
dec
outsb
int3
jecxz
pop
mov
pop
sub
rcr
fwait
popf
xor
mov
xchg
imul
sbb
into
and
gs
insb
add
pop
mov
sbb
mov
repnz
push
or
addl
lahf
xchg
loopne
dec
dec
push
arpl
xchg
cmp
arpl
mov
loopne
add
pop
jno
ljmp
in
in
cmp
pop
stos
mov
and
adc
mov
stc
adc
fisubrs
pusha
pop
add
mov
lea
sbb
mov
repnz
les
outsb
mov
ss
mov
xchg
ljmp
call
loop
push
prefetchw
scas
xor
cmp
add
iret
sbb
jmp
sbb
in
fisttps
sub
pop
std
int
leave
outsl
push
cmpsb
andl
push
fsubl
mov
rclb
xor
lcall
sbb
mov
je
mov
into
ljmp
mov
in
add
leave
idiv
push
add
es
outsb
adc
pop
lahf
test
leave
and
jg
andl
sbb
mov
dec
repz
lahf
mov
cmpsb
add
stc
lods
xchg
lcall
ja
inc
stos
xchg
aad
inc
sbb
aas
jecxz
sub
aaa
mov
jmp
jp
aaa
imul
mov
arpl
sub
xor
popf
push
sbb
cmp
cmpsl
js
sbb
cmc
insb
das
add
aas
popf
das
imul
lret
sbb
mov
clc
rcrl
mov
push
das
dec
or
roll
mov
fstpt
les
mov
mov
gs
xchg
jg
lret
mov
adc
shll
sub
out
fidivl
xorl
sub
cmp
movsl
xlat
mov
shrl
stc
mov
inc
in
xchg
es
sbb
pusha
jno
xchg
out
add
flds
jmp
pusha
mov
lock
push
sahf
bound
gs
hlt
and
aad
frstor
in
push
jns
movsl
subl
push
inc
jmp
into
cmpsl
ds
or
js
xor
xchg
pop
fs
push
scas
dec
fcoms
mov
mov
iret
les
lret
cmp
xorl
popf
jmp
xor
inc
dec
insl
int3
pushf
xor
inc
rcll
cmpsl
scas
lret
iret
loope
mov
sub
in
popa
pop
push
int
push
hlt
lock
or
orl
push
dec
shrl
jnp
dec
push
adc
shrl
fildll
add
shrl
inc
gs
or
push
imul
cs
repz
adc
pop
mov
ss
scas
pop
popf
cli
mov
dec
dec
adc
mov
out
mov
inc
out
sub
push
popf
cmp
into
inc
mov
or
test
mov
xchg
les
sahf
bound
popf
popw
movsb
jno
bound
sahf
lcall
aas
stc
lahf
sub
in
out
adc
cs
lea
xor
lret
mov
rol
loopne
and
mov
mov
fisttpll
push
ret
mov
out
cwtl
sahf
mov
scas
fnstcw
lods
pop
pusha
lods
mov
sbb
cmp
mov
mov
inc
cli
cld
das
andl
in
inc
mov
sbbl
pop
push
test
ljmp
add
add
fisttpll
push
fbld
and
lcall
add
pop
sbb
push
lcall
fdivs
in
cmpsl
loope
imul
repnz
xchg
mov
mov
cmp
lea
mov
mov
mov
sbb
jp
icebp
xor
popa
out
test
xchg
rcll
shrl
mov
fs
inc
inc
popa
fwait
mov
sti
xor
and
ja
test
aam
push
js
sub
stos
vphsubbw
dec
cmp
loopne
cmp
inc
mov
cwtl
and
adc
push
ja
cli
cmp
mov
mov
or
pop
mov
jne
xchg
out
xchg
dec
ja
aaa
rcrl
test
icebp
mov
adc
adc
xlat
or
jg
push
pop
add
or
jle
fisttpll
jo
mov
add
and
adc
jns
push
sub
fsubrl
arpl
sub
pusha
fucompp
data16
jo
sbb
test
addb
xlat
addr16
and
xchg
call
mov
negl
sub
clc
lds
clc
out
lcall
add
jbe
jg
in
testl
xor
xchg
nop
nop
mov
enter
pop
push
mov
xchg
cmc
push
stos
notl
pop
jno
mov
test
mov
jecxz
adc
inc
xchg
mov
push
out
jbe
popf
loop
sarl
in
cmp
xchg
adc
js
scas
div
push
clc
or
pop
ds
mov
cmc
aad
adc
ret
int3
push
mov
jl
jge
mov
addr16
xor
call
xor
sbb
xchg
mov
leave
or
js
sbb
cs
sub
push
xor
sbb
mov
fldl
outsb
sbb
and
inc
jnp
icebp
fistps
sbb
ret
int3
jne
scas
jge
sbb
push
fld
xor
fcompl
leave
pusha
loope
out
add
add
xchg
and
out
out
xchg
cmp
mov
aam
add
mov
fstps
dec
pop
into
mov
jno
sbb
mov
mull
jge
xchg
lods
jp
repnz
cmp
data16
pop
sub
pop
push
pusha
aaa
push
fs
movnti
cmp
in
pop
test
push
inc
dec
aad
ljmp
in
lahf
pop
sub
psubsw
mov
cli
scas
xchg
push
push
cmp
mov
xor
lea
and
sbb
sub
push
pop
and
arpl
push
ret
insl
sti
mov
lock
mov
iret
lock
fsubrl
in
lock
mov
push
in
arpl
mov
popf
jmp
sbb
ja
pop
push
dec
roll
test
sahf
add
repz
cmp
pushf
sbb
mov
pop
cwtl
add
jecxz
mul
cwtl
push
cmpsb
jae
inc
inc
imul
mov
lahf
sub
jmp
jbe
xor
cld
mov
cmpsl
sub
inc
jno
inc
pop
mov
push
movsl
xchg
pop
mov
inc
sarl
xchg
dec
and
inc
lock
fwait
mov
mov
jo
xchg
aas
mov
in
push
push
jo
aam
popa
sub
sar
fdiv
loope
scas
xlat
adc
lahf
xchg
push
bndldx
leave
pop
push
std
cmc
ja
push
fcoml
adc
outsl
pushw
shll
xor
aaa
enter
mov
xor
aam
jb
cmp
jl
dec
in
cmovge
jne
out
cli
push
mov
iret
aad
xor
bnd
lock
or
xchg
inc
sbb
and
ss
push
push
cmpsb
jecxz
lock
ret
stos
pop
test
push
in
pushf
xor
and
je
ret
mov
cmp
fists
cmpsb
mov
mov
pop
test
jo
imul
sub
mov
cmc
shl
pop
cmc
lret
aaa
in
mov
cmpsl
add
imul
fnsave
mov
inc
mov
fsubr
testl
outsb
inc
xchg
or
add
and
repz
mov
cmc
mov
push
adc
sub
sub
add
mov
mov
in
xor
fistpl
xor
jmp
inc
fidivrl
shr
mov
shll
enter
test
outsb
push
sub
sub
xchg
sub
pop
test
mov
cli
xor
testb
adc
orb
aaa
out
cmpsl
outsb
sbb
aaa
mov
enter
cmp
int
aad
movb
loope
xchg
mov
mov
enter
lret
in
fiaddl
jle
jl
call
sbb
sub
not
mov
scas
jns
nop
les
mov
cmp
xchg
xchg
adc
or
iret
in
pop
push
inc
push
lret
cltd
int3
or
sub
add
xchg
or
sbbb
pop
inc
daa
add
jp
fnsave
push
decl
fwait
push
leave
push
mov
ret
sbb
in
sub
cwtl
push
mov
pop
ds
ja
arpl
add
imul
inc
push
decl
sbb
loope
jae
add
and
pop
pop
push
cmpsb
std
sub
jle
daa
fwait
sbb
loop
mov
dec
andl
test
mov
jecxz
pusha
mov
add
syscall
inc
jle
jecxz
roll
cmp
outsl
arpl
enter
xchg
loop
lret
xor
mov
sbb
xor
xor
mov
add
cwtl
shlb
scas
push
xor
mov
xchg
jmp
mov
ljmp
test
dec
loope
je
in
test
les
ret
ds
movsb
or
aaa
mov
int3
jo
or
insb
sbb
jbe
cli
mov
mov
stos
xor
jecxz
mov
jae
test
mov
enter
xor
jnp
fdivl
push
and
ljmp
arpl
inc
pop
pop
xchg
mov
jb
mov
pop
jns
test
lods
adc
mov
test
imul
mov
clc
das
pop
jge
jecxz
pop
dec
mov
ja
mov
fmull
das
fs
inc
andl
push
icebp
outsl
mov
es
push
ret
jo
aad
scas
xor
or
test
daa
les
mov
or
gs
adc
pusha
imul
mov
inc
push
jae
sub
aam
sarl
leave
cs
dec
mov
push
cmpsb
sti
mov
cli
gs
pop
test
lea
lock
out
or
lods
sbbb
mov
jae
hlt
pusha
scas
mov
mov
ret
mov
jns
jmp
jmp
clc
or
lahf
sub
cli
fimuls
sbb
mov
jne
cmp
in
inc
notl
xor
or
inc
jp
test
inc
or
lahf
xchg
rorb
xorl
dec
add
cmp
sbb
ja
pop
cmp
mov
aaa
stc
pusha
lcall
flds
scas
dec
inc
adcb
jnp
dec
std
fisubrl
in
rcll
mov
std
jnp
popa
pop
add
dec
repnz
hlt
pop
mov
sbb
ds
rorl
inc
ret
in
les
test
and
jmp
mov
icebp
lock
xor
lcall
xchg
xchg
sub
stos
test
sbb
dec
out
inc
and
loope
imul
mov
dec
ljmp
push
xchg
sahf
gs
jb
mov
mov
sbb
ror
mov
nop
xorb
dec
inc
stc
pop
jbe
xchg
ja
movsb
es
xchg
aas
cld
sub
out
shl
adc
das
add
shll
add
ljmp
mov
sar
inc
into
xor
mov
jno
mov
and
imul
mov
movsb
lock
sub
aaa
fstl
mov
into
pop
xchg
cmp
jno
sub
es
iret
or
dec
inc
aas
dec
or
jp
out
sbb
mov
cmpsl
xor
push
pop
stc
cmpsl
lods
movsb
imul
mov
in
adc
pusha
es
sbb
adc
arpl
iret
mov
push
pop
mov
into
pusha
testb
lea
or
mov
clc
movsb
xor
push
jle
or
mov
aaa
add
aad
loop
xchg
setg
sub
mov
and
rorb
out
xchg
add
push
movsl
adc
or
sub
add
dec
sti
divb
dec
sbb
clc
lcall
imul
add
std
popf
push
test
push
xchg
outsl
jo
dec
inc
es
jg
int3
fldcw
movsl
xor
shll
pushf
mov
inc
loopne
sti
cltd
js
dec
dec
mov
les
mov
inc
xor
pop
and
jne
roll
mov
mov
xchg
mov
mov
push
xor
inc
out
lods
sub
movsb
cmc
or
jbe
push
xor
fsubl
cwtl
mov
js
std
frstor
bound
int
xor
inc
xor
inc
xor
and
nop
lret
and
ss
and
jg
or
inc
scas
sbb
leave
xchg
aam
jae
xchg
sub
into
jbe
in
push
pop
mov
add
outsb
cmpsl
nop
stos
or
inc
pop
enter
mov
sub
mov
fnstsw
nop
sub
shrl
push
pop
clc
jns
outsl
push
push
xor
test
imul
mov
decb
lret
xchg
jnp
xchg
movsl
pop
dec
or
ror
stos
cmp
es
mov
or
push
addr16
sbb
jecxz
clc
mov
mov
inc
enter
lods
jge
push
vpsubusb
outsl
push
or
pop
ja
mov
test
mov
adc
mov
mov
or
dec
jae
inc
mov
in
es
sbb
rorl
pop
out
scas
add
sbb
pop
pusha
pop
inc
cmp
pop
push
ret
cmp
xor
or
pop
mov
icebp
outsl
xchg
mov
pop
cmp
fabs
or
and
cmp
outsl
mov
lods
or
fwait
adc
scas
int
ljmp
and
xchg
lea
sahf
pop
cmp
adcb
push
or
icebp
aam
jmp
and
loopne
frstor
mov
int
xchg
pop
ss
jbe
pop
push
xorb
pop
clc
sub
ljmp
inc
push
sub
adc
xchg
and
or
repnz
sti
out
cmp
push
lock
pop
popf
mov
in
sub
mov
xchg
or
jmp
std
xor
xor
sub
xchg
ficoml
popf
iret
add
mov
push
cmp
daa
int3
ds
xchg
mov
push
lahf
add
mov
mov
call
push
pop
in
jne
cmp
je
inc
out
bound
pop
cmp
in
je
rcrl
rolb
inc
or
pop
mov
pop
sbb
xchg
icebp
arpl
mov
ret
out
push
test
frstor
adc
stos
pushf
cmp
sarl
mov
stc
pushf
mov
vminpd
xor
dec
pop
pop
adc
imul
cmp
jl
mov
stc
out
sbb
in
dec
jmp
push
sbb
pusha
and
lods
push
lea
sub
and
fdivl
fwait
add
out
test
add
cld
nop
es
popl
mov
scas
shrl
mov
mov
mov
push
sub
mov
mov
and
pusha
ret
add
cmpsb
outsl
push
sub
lock
repnz
sub
pop
loope
xchg
out
lock
add
push
dec
xchg
stos
jns
icebp
mov
jns
mov
jp
jae
inc
cld
movsb
push
and
loope
stos
call
pushf
les
fstps
aam
sub
and
and
adc
iret
div
rcr
aas
roll
repnz
ret
mov
jle
shrl
cmp
mov
mov
inc
sbb
arpl
inc
cltd
lahf
aaa
repnz
clc
push
loope
in
fisubrl
sbb
jno
push
add
add
mov
subl
sub
das
std
sub
std
subb
sbbl
fldenv
out
fists
sbb
fsts
repz
sbb
or
mov
es
ds
negl
jno
push
imul
mov
add
test
mov
fisubrs
in
imul
jb
das
sub
movsb
in
mov
dec
xor
movl
mov
add
add
out
push
sub
mov
inc
mov
xchg
adc
cmpsb
dec
dec
or
fwait
xor
adc
add
in
mov
dec
mov
dec
mov
inc
iret
mov
cmp
jge
fdivr
icebp
mov
les
rorb
mov
pop
jecxz
cmc
clc
pop
adc
adc
xchg
dec
dec
sbb
add
jmp
or
rorb
outsb
stos
rcrl
out
clc
cmp
and
push
xchg
cld
pop
jns
out
push
or
sarl
jo
mov
jg
fiaddl
js
adc
test
and
cmp
inc
cmp
out
pop
fadds
fisubs
xchg
mov
popa
fidivl
insl
sub
daa
decb
sub
popf
push
jbe,pn
mov
xchg
lahf
sbb
sub
or
xchg
rorl
ficomps
cmpsl
mov
add
push
out
mov
jns
daa
inc
aas
adc
lahf
test
jne
dec
loop
stc
jmp
lods
sti
pusha
pushf
aas
push
ficomps
std
and
mov
dec
ret
imul
movsl
inc
xor
imul
imul
addb
cld
or
and
mov
leave
in
mov
adc
xor
cmc
icebp
sbb
ds
addb
stos
sub
jg
pop
addb
xchg
out
xchg
insl
adc
pop
inc
scas
dec
test
ret
push
lret
clc
mov
into
pusha
xor
pop
imul
cli
jg
or
adc
insl
lock
icebp
pop
and
popa
xor
in
lock
or
adc
fisttps
mov
int3
test
mov
sub
xchg
xor
jne
rol
pop
sub
es
sbb
sbb
loopne
lods
dec
scas
pop
loope
cmc
ljmp
inc
jns
in
insb
aas
or
das
cli
pushf
mov
mov
push
inc
in
pop
and
dec
repz
mov
cmp
push
aaa
push
lock
push
cmp
lret
in
lock
imul
jno
sub
mov
xchg
push
adc
pcmpeqw
shrl
mov
dec
mov
lcall
loopne
mov
sbbl
adc
test
sbb
dec
cmp
mov
mov
iret
jbe
cmc
add
pop
bound
push
aaa
insb
fs
pop
add
jmp
hlt
arpl
lret
inc
jns
into
out
scas
mov
jp
aad
mov
rcll
out
and
jg
mov
mov
ljmp
aaa
jbe
cs
mov
xchg
jae
inc
inc
outsl
icebp
lahf
data16
and
sub
sbb
shlb
fstpt
out
gs
imul
sbb
push
jl
xor
and
xchg
lea
xor
xchg
aam
push
mov
add
test
jo
jge
add
pop
not
cmp
adcb
pop
mov
mov
loop
leave
adc
jg
out
xor
cmp
xchg
addr16
cmp
addb
jle
add
fst
sbb
repz
outsb
lret
mov
daa
jno
push
notl
and
xchg
cmp
jp
cmc
sbb
cmp
aas
loope
inc
adc
adc
scas
rorl
movsb
jle
stos
loop
cld
mov
jnp,pn
pop
int
imul
pop
adc
sub
mov
mov
test
add
cmp
pop
xchg
cwtl
stos
das
test
out
dec
stos
or
aaa
jo
pop
mov
test
push
mov
lock
mov
mov
fdiv
imul
mov
xchg
repz
js
xrelease
sbb
arpl
inc
adc
jno
enter
jge
xor
stc
fucomip
mov
es
cs
ss
and
je
stos
and
leave
xor
jg
mov
pop
test
cmp
inc
dec
popa
cmp
scas
xor
lods
rorl
cltd
arpl
jg
sti
ret
xchg
mov
iret
jno
lret
scas
jmp
dec
lret
add
aad
inc
bound
scas
jp
add
rcrl
into
mov
jne
insl
fdivr
push
cmc
add
out
push
xchg
cmp
sti
inc
fildll
repz
out
dec
dec
test
sarl
jecxz
push
pushf
jle
xor
adc
inc
sti
ret
lret
movsb
cmpl
and
push
push
pop
clc
sub
jl
test
push
push
or
dec
jns
add
in
dec
dec
je
xchg
scas
insl
sti
adc
in
imul
dec
cmp
iret
push
clc
and
jb
outsb
fwait
les
pusha
xchg
ja
pusha
push
imul
pop
or
js
lret
push
sbb
gs
lcall
xchg
mov
push
mov
adc
out
cmpsb
jnp
pusha
jb
jle
dec
jne
out
cmp
mov
jmp
pushf
stos
mov
divl
adc
rcrb
inc
xchg
vpavgw
scas
xor
loope
adc
push
inc
jno
mov
add
bound
cmp
bound
int
xchg
jle
push
int
testb
mov
cltd
stc
push
and
mov
fs
mov
adc
push
jns
repnz
or
mov
pop
add
push
push
pop
idiv
xchg
xchg
mov
lea
cmpsb
outsl
lahf
loopne
mov
int3
dec
xor
push
movsl
cmp
nop
push
jp
das
mov
je
adc
test
in
mov
movb
fdecstp
xchg
das
aad
out
dec
into
js
out
mov
or
insl
iret
xchg
je
cwtl
test
dec
pop
xlat
fbstp
out
pop
push
mov
cmp
adc
adc
ljmp
push
ss
and
cmp
adc
mov
je
aad
insb
bnd
lods
cmp
mov
xor
cmp
xchg
jae
inc
pop
jo
push
inc
xor
shrb
xchg
xchg
fsubl
es
xchg
xorl
push
hlt
cmpsl
and
loop
xor
cli
movsb
cmp
daa
cmpsb
dec
pop
push
ja
pushl
aad
leave
sbb
jg
ss
sbb
jmp
push
leave
or
pop
and
imulb
insl
mov
sub
movsl
scas
mov
stos
jns
lahf
shll
out
and
jo
and
pop
rolb
sub
sub
pop
xor
leave
pop
add
pop
and
jl
orl
aaa
inc
sbb
sub
daa
dec
push
mov
mov
xor
icebp
push
jmp
sahf
das
cmp
cmp
je
fnstenv
ret
push
lret
dec
xchg
sbb
push
or
stc
mov
xlat
rol
movsb
insl
out
xor
push
hlt
cltd
xor
cs
repz
mov
or
mov
sub
jg
loopne
xchg
adc
pop
mov
pop
icebp
dec
push
and
mov
adc
fcoms
sub
ja
iret
pop
or
xchg
fcmovu
ret
rolb
int3
mov
or
int3
inc
pop
out
mov
out
xchg
mov
jno
mov
lea
stos
mov
movsb
sub
and
push
sub
lods
mov
and
mov
jns
and
outsb
rorl
mov
inc
add
jno
sbb
xchg
inc
int
int
inc
sub
mov
lds
les
sbb
mov
lea
mov
xchg
cmp
test
mov
mov
mov
jp
lods
scas
nop
gs
int3
cmp
and
nop
adc
adc
xor
mov
jbe
ror
or
mov
push
hlt
push
add
mov
push
insb
cmp
stos
push
mov
inc
jo
inc
jp
cmp
movsb
push
subb
call
ss
repnz
push
adc
inc
xchg
sbb
iret
xchg
sahf
lods
xlat
mov
outsb
aas
or
push
inc
ss
les
test
mov
movsl
pop
cli
pop
cli
xchg
and
fcmovu
xchg
loop
loope
jne
pop
xchg
push
and
fistl
xchg
imull
dec
xchg
fnstenv
std
movsb
jb
jne
insl
test
push
mov
cmpsb
pop
cmp
jmp
je
mov
iret
popf
lods
adc
push
push
push
aam
inc
pop
xor
or
xchg
mov
enter
cmp
inc
xor
dec
mov
xchg
sub
mov
sti
call
xchg
stos
out
mov
and
xor
jle
or
rclb
mov
add
stc
and
mov
sahf
pusha
jge
sub
in
ja
sahf
pop
add
inc
xor
adc
es
stos
cmpsb
imul
stos
popf
inc
sarb
xchg
data16
cmp
sub
mov
cmp
movsl
or
jnp
adc
fstpt
shr
loopne
xchg
outsl
cmc
dec
push
pop
sbb
xchg
nop
xchg
lret
cmp
fdecstp
sbb
cmp
cltd
outsl
mov
sarl
mov
sub
mov
pop
jle
add
lret
pop
hlt
push
dec
mov
and
cmp
loope
jne
sbb
or
push
call
sahf
sti
stos
jae
ds
ljmp
sub
adc
dec
push
int
push
add
les
dec
add
fldl
insl
xchg
push
mov
adc
push
xchg
sbb
negl
mov
push
mov
add
into
lock
in
push
mov
push
pop
inc
leave
inc
fidivrl
sub
sub
inc
or
rclb
mov
mov
pop
outsb
pushf
sub
nop
adc
stos
adc
ret
dec
loop
mov
xchg
push
cmp
repz
jle
dec
jp
mov
add
jne
cmp
mov
cld
jo
data16
stc
add
xor
jns
sbb
insl
ljmp
sub
inc
add
scas
gs
mov
nop
sub
les
scas
fdivrs
push
rclb
leave
mov
test
fcmovnb
push
sub
fbld
shlb
cmp
das
ds
loope
xor
test
mov
mov
add
dec
roll
jge
jg
lods
push
jmp
push
xchg
rcll
int
fucomi
aaa
in
bound
adc
fcompl
test
sub
sub
pushf
add
cmp
sbb
lahf
out
mov
shl
mov
subb
xchg
insb
hlt
inc
jmp
in
fdivs
das
jmp
mov
cs
jbe
jns
mov
or
insl
lods
imul
mov
test
daa
ficompl
les
popa
add
inc
sbb
movsl
hlt
xchg
lcall
mov
clc
aam
adc
push
in
icebp
inc
jne
or
repz
inc
jnp
out
jbe
into
push
inc
jecxz
xlat
xchg
stc
negl
aaa
jle
nop
mov
mov
cmp
jp
outsl
adc
or
fstl
lods
xchg
out
scas
xlat
or
insb
fcom
inc
scas
xor
fsubs
cmp
mov
ds
inc
fstl
inc
rcr
pop
mov
and
loopne
mov
jns
xor
jnp
cli
out
mov
pop
jb
mov
sub
xchg
cmpsl
cld
ret
insl
lods
test
outsb
dec
addr16
movsb
repz
pushf
pushf
xor
xor
cmp
fcomps
or
cmp
call
daa
stos
sbb
jns
jge
test
cmp
push
loopne
push
shrl
sarl
insb
and
test
in
sub
out
int
sahf
aaa
fisttps
pushf
mov
in
jge
jno
inc
or
mov
jecxz
push
and
or
lret
movsb
add
pop
ljmp
nop
test
mov
pop
shl
jl
cli
lods
mov
fidivrl
pusha
test
insb
lods
addr16
aas
push
pop
inc
pop
lcall
cs
or
xchg
cltd
dec
aad
loope
flds
and
outsb
xchg
mov
inc
stos
dec
js
add
adc
gs
imul
add
scas
inc
stos
jb
and
lea
inc
in
inc
mov
jno
and
std
nop
out
ret
ret
jne
or
push
shll
sahf
inc
lds
aad
cli
lret
subl
sbb
mov
mov
adc
pop
fdiv
pop
pop
cli
or
sarl
jae
ret
mov
or
mov
xchg
add
and
aad
sti
mov
addr16
pop
inc
push
pop
dec
pusha
nop
daa
xor
cmp
mov
adc
sbb
mov
push
ss
dec
lret
test
data16
mov
push
notb
les
mov
cmp
xor
iret
mov
popf
add
inc
push
test
mov
out
sub
sub
push
pushl
clc
mov
xchg
icebp
scas
mov
add
or
arpl
mov
bound
std
cmp
push
sbb
pop
cmpsb
inc
test
les
rcr
or
or
iret
mov
leave
pop
mov
mov
xorl
je
mov
jns
xlat
sbb
push
loop
dec
jo
mov
lea
popa
dec
mov
xchg
jbe
cpuid
dec
in
inc
push
sub
pusha
movsl
sbb
shrb
push
mov
mov
xor
lcall
ficoms
aas
jae
js
and
pop
pop
dec
sbb
mov
cmp
rcl
push
out
inc
pop
shrb
push
repnz
xor
call
ss
push
shrb
mov
sub
mov
push
jp
lret
cmp
call
add
mov
mov
or
enter
push
out
jmp
xchg
mov
stos
pop
cmp
jae
add
fisubs
mov
mov
and
adc
mov
aas
xchg
mov
outsb
fiaddl
jbe
test
hlt
icebp
inc
stos
dec
mov
pop
fcomps
pop
mov
stc
in
addr16
add
cmpsl
icebp
sub
push
adc
addr16
xchg
sbb
add
clc
xor
testb
int
ja
notl
inc
lods
pop
aas
call
sub
dec
push
jle
test
inc
add
sbbl
pop
out
or
addr16
mov
sub
rolb
mov
or
es
loop
ss
xor
icebp
imul
nop
lcall
pop
dec
mov
xchg
sbb
add
push
ljmp
test
daa
outsb
lock
pop
arpl
clc
cmp
fstpl
fisttps
push
add
sub
loopne
push
repnz
push
ljmp
cmpsl
cmpsl
enter
in
sub
pop
fdivp
stc
ffree
adc
outsl
mov
sub
cmp
fidivrl
movsb
and
fcmovnu
inc
imul
mov
stos
sbb
jmp
test
mov
daa
outsb
popf
cmpsl
aam
and
js
or
pop
xchg
xchg
adc
xor
mov
adc
mov
mov
sbb
daa
mov
mov
ds
repz
test
xchg
popf
xchg
arpl
out
pop
xor
or
add
jo
mov
lahf
add
cmp
push
pop
adc
push
sti
inc
xor
mov
sahf
nop
fst
lret
scas
jle
imul
sti
jns
sbb
add
xchg
or
adc
fisubrl
sbb
cli
mov
cmp
cmp
cmp
bound
aad
mov
dec
ss
inc
or
cs
cmp
inc
bound
cmp
adc
daa
clc
pop
ret
fists
cwtl
popf
inc
adc
mov
divl
or
ficomps
mov
aaa
sarb
in
iret
testl
fsub
fisubrl
fldl
pop
pop
adc
jl
ja
push
push
iret
mov
or
mov
sub
dec
data16
outsl
pop
mov
clc
outsl
mov
repnz
lods
lcall
sub
mov
adc
mov
into
cltd
in
mov
jecxz
in
mov
jo
adc
and
sbbb
pop
ljmp
adc
sbb
js
fidivrl
sbb
push
test
test
das
int
inc
pop
movsb
jae
push
dec
sbb
mov
hlt
and
pop
mov
pop
gs
lds
cs
out
mov
repnz
jb
xor
mov
shl
pop
mov
mov
jns
popf
mov
fs
fidivl
pop
ljmp
pop
pop
std
std
movsb
movsb
sahf
mov
push
aam
push
lea
lcall
xor
ja
pop
or
push
adcl
xchg
gs
xor
pushf
dec
mov
cmc
jmp
sub
jge
nop
and
mov
pop
pop
cmpsl
ds
or
jbe
outsl
lods
nop
movsb
mov
jecxz
xor
pop
cmpsl
lret
cmpsl
adc
cmp
repnz
xchg
or
aas
or
mov
fnstsw
add
fisttps
pop
int
xchg
jg
push
popf
hlt
les
push
ret
mov
adc
mov
mov
sbb
push
xor
das
xor
aaa
cs
sahf
out
in
rorl
xor
cmp
sub
ret
cltd
mov
out
pop
xchg
cld
mov
dec
fcompl
push
mov
jne
outsl
push
cmp
adc
fiaddl
jb
dec
sub
popa
mov
jns
mov
mov
jae
insb
push
enter
int
aaa
mov
je
inc
into
stos
mov
outsl
into
lods
or
sub
inc
std
inc
mov
mov
xor
ret
adc
inc
sbb
push
orb
ffreep
xor
in
outsb
adcl
mov
fwait
out
cmp
fidivrl
pop
popl
nop
xchg
scas
or
imul
mov
or
xlat
hlt
popf
ret
add
shll
mov
dec
das
int
loope
cwtl
jle
adc
or
xchg
cmp
push
push
xchg
jmp
test
jb
outsl
orb
sbb
mov
sub
das
out
or
xor
daa
sbb
add
lret
js
sbb
push
sub
xchg
call
xchg
ret
pop
xchg
jo
pushf
xor
adc
lahf
jne
addr16
xchg
push
lods
push
ja
loopne
inc
sbb
inc
dec
and
cmp
mov
call
and
pop
sub
mov
les
and
cmc
dec
inc
sbb
cli
out
aaa
fidivl
je
xor
nop
lds
dec
in
jge
mov
jb
push
jmp
adc
and
lods
adc
xchg
pmaxsw
aam
test
pop
test
cmove
cmp
stos
int3
xor
mov
sub
movsl
pop
or
pop
ret
or
xlat
push
jbe
popa
int
or
bswap
mov
sub
test
mov
lock
leave
ja
mov
rcl
push
sti
lret
addr16
push
dec
outsl
sub
fwait
push
stos
ficompl
jne
incb
addl
adc
leave
push
sub
fisttps
and
push
push
ljmp
inc
into
inc
xchg
push
xchg
jl
aaa
and
and
ja
jl
jns
sti
faddp
fiaddl
lock
or
sub
lahf
sbb
or
and
xchg
rclb
aaa
loope
aas
loopne
push
or
test
xor
xor
leave
bound
addl
xchg
jecxz
mov
pop
loop
enter
out
fnsave
push
outsb
out
repnz
outsb
jae
aam
mov
cmp
imul
loopne
sub
fwait
jl
xor
inc
lods
push
inc
lods
jmp
shlb
pushf
pop
iret
ret
xor
push
rolb
cmp
pop
outsb
mov
in
je
xchg
jmp
mov
js
test
scas
cli
mov
flds
and
jp
sbb
cmc
mov
push
hlt
aad
push
adc
sbb
movsl
out
stc
sub
pop
in
push
lcall
xchg
sub
dec
shlb
int
js
jecxz
fidivs
ja
cwtl
mov
mov
add
lahf
xchg
std
popa
push
aas
outsb
jle
jbe
movsl
ljmp
adc
cmpsl
lcall
dec
mov
mov
out
pusha
xchg
ljmp
cmpsl
popa
popf
dec
shlb
scas
std
ljmp
sbb
add
mov
sbb
push
outsl
in
fmuls
rorl
mov
rcrb
testl
cmc
pop
xlat
mov
subl
sbb
mov
inc
negb
dec
out
lods
roll
xchg
fs
inc
xchg
rcll
repz
inc
out
sahf
inc
sub
and
push
lock
sbb
pop
dec
idivl
cld
cltd
inc
cmp
aad
jne
xchg
adc
xchg
int
in
xor
push
repnz
mov
mov
mov
pop
ret
test
aad
sbb
jae
xchg
sub
mov
jno
pusha
decb
call
and
repnz
adc
adc
push
xchg
aam
jmp
test
dec
sub
std
sub
lcall
stc
sub
fwait
out
subl
sub
push
mov
popf
lcall
mov
jbe
out
imul
xor
adc
xor
aaa
scas
push
sbb
and
adc
in
aas
sub
mov
enter
cmp
or
xlat
add
and
nop
mov
push
lea
test
stos
andl
and
and
and
fnstcw
mov
call
jbe
fisubl
mov
mov
sbb
lods
ret
shr
sub
xor
bound
push
xchg
sahf
fabs
or
ss
imul
outsb
cmpsb
shrb
cmp
xchg
mov
fwait
push
or
rclb
iret
add
adc
scas
lcall
or
leave
daa
inc
mov
and
push
xor
lds
aam
push
mov
repz
std
xor
mov
pop
jno
repz
sbb
aam
gs
pop
and
bnd
mov
jae
xchg
cmp
dec
fidivrs
idiv
xor
mov
imul
fst
cmp
and
inc
cmp
pop
or
fs
jmp
movsl
sbb
cmp
or
js
loope
xchg
jo
inc
sbbl
mov
pushl
js
fcoms
pop
pop
cmp
or
mov
iret
or
shrb
inc
mov
adc
scas
cld
sbb
ret
pop
fmuls
xor
xor
mov
cld
sti
pop
in
fidivs
and
pop
pop
mov
or
pop
mov
andb
mov
sub
mov
jo
shrl
mov
sbb
ljmp
dec
jp
push
leave
dec
mov
mov
test
aad
sub
and
insb
cmp
data16
push
insb
adc
push
xor
addr16
push
sub
add
mov
out
out
lea
dec
negl
mov
xchg
push
ja
cmp
push
insl
mov
enter
into
and
add
pop
or
dec
test
jmp
mov
or
pop
jne
or
rolb
xor
jmp
test
jnp
adc
popa
jp
cld
fimuls
mov
cwtl
loope
or
cmp
mov
sub
xchg
into
mov
xchg
ffreep
call
movsl
pop
sub
push
inc
fsubrl
subb
xlat
fsubrl
cmp
loop
xor
dec
push
and
cmpsl
adc
or
out
xchg
mov
daa
fwait
movsb
mov
movsl
xchg
adcb
cmpsl
pop
and
dec
mov
imul
cmp
je
out
mov
xor
pop
mov
inc
mov
enter
cli
movsl
test
imul
cmpb
xor
mov
dec
pop
into
repnz
test
mov
rorb
or
lock
add
gs
fstpl
cmp
mov
in
popa
pop
dec
cs
sbb
outsl
inc
fidivs
pop
ret
sti
pop
inc
add
pop
int
scas
scas
js
jbe
xchg
dec
stc
incb
fldl
repnz
out
or
mov
enter
inc
fadds
adc
mov
mov
stc
xor
and
mov
fsubrs
inc
out
hlt
pop
jae
xor
cmp
or
sub
lcall
jmp
cwtl
mov
mov
ficompl
addr16
or
bound
dec
xchg
aad
mov
mov
xchg
mov
or
lret
xchg
stos
sub
shll
fsts
popa
adc
dec
in
stos
cld
cmp
xchg
sub
aad
cmpsl
sbb
lock
or
inc
pop
mov
and
pushf
xor
dec
mov
insl
push
shlb
stc
adc
mov
cmovbe
roll
mov
mov
dec
mov
clc
pop
mov
inc
fstl
cld
int3
sahf
fxch
pop
xor
cli
add
add
push
pop
cmp
stc
lret
rcll
cmp
fldt
push
jno
js
cmc
and
push
push
cmp
mov
xor
dec
mov
pop
faddl
push
xchg
xchg
fildll
lahf
xor
jg
push
imul
mov
sahf
xchg
loope
fsubs
data16
cmpsl
lock
lds
xchg
or
sahf
push
enter
adc
in
test
scas
pop
inc
pavgw
outsb
call
pop
or
movswl
pop
lret
inc
test
jo
repz
xchg
adc
mov
mov
data16
leave
cltd
xor
jmp
and
fists
fbld
jne
ret
lock
imul
xchg
mov
sub
jo
cld
dec
jae
test
or
lret
push
push
inc
cmp
leave
xor
out
dec
fdivrl
or
sub
lods
or
shll
sub
arpl
xchg
jmp
and
imul
cli
pusha
pusha
popf
dec
iret
mov
stc
inc
inc
push
orl
jg
push
push
nop
cmc
dec
cmpsb
add
xor
imul
incl
jno
cmp
into
jae
int
inc
bound
dec
ret
adc
fwait
add
jmp
sub
cs
sub
and
add
xor
stos
mov
add
out
pop
dec
ret
inc
clc
xlat
push
xor
insl
pop
scas
daa
dec
add
dec
push
scas
test
aas
ret
xchg
jnp
fldt
dec
push
imul
sbb
cs
in
aad
daa
pop
push
jmp
cld
lods
jae
add
cltd
dec
mov
rcl
pop
mov
test
pop
shl
xchg
xchg
mov
arpl
or
pop
fdivrl
pop
cmpsb
or
out
ror
outsb
push
xchg
out
cmp
loopne
rcrl
xor
push
call
xor
push
xlat
sub
pop
inc
cmp
jbe
mul
pop
mov
mov
jle
xlat
fisubl
test
xchg
test
gs
mov
dec
sub
or
nop
jle
cmp
and
pop
adc
pop
js
sub
xchg
pop
faddl
lods
or
movsl
or
das
push
adc
movsb
dec
xchg
je
mov
xchg
mov
lds
daa
fwait
insb
popf
outsl
inc
popa
jg
and
cmpsb
gs
clc
add
lds
jns
fldl
flds
aad
daa
or
xchg
out
stc
mov
jnp
jnp
mov
sub
lcall
lods
dec
outsb
std
pop
xchg
pop
xor
shlb
iret
sub
out
mov
add
test
cltd
or
gs
fcmovu
dec
xlat
jl
adc
mov
sbb
sbb
hlt
js
ret
out
fidivl
dec
mov
dec
jae
sahf
call
jecxz
ljmp
inc
inc
test
xor
mov
and
mov
subl
outsb
mov
mov
xchg
imul
outsb
nop
jno
xchg
mov
pop
fisttpll
cmp
pop
ss
mov
jae
imul
mov
pop
lea
rorl
sub
arpl
inc
and
fnsave
mov
inc
sbb
mov
je
add
cmp
sahf
mov
sub
lock
cmp
or
push
pop
jge
stos
xchg
jle
cld
js
lds
sahf
popa
fs
mov
inc
ljmp
mov
fbstp
into
hlt
lcall
add
pop
cld
rcl
sub
cmp
ficoml
add
dec
pushf
sbb
repz
push
mov
or
mov
mov
push
dec
and
dec
lahf
pop
and
mov
fsubs
jnp
mov
idivl
fnstenv
jne
mov
lret
adc
lods
sub
dec
mov
fdivrl
pop
mov
pop
xchg
addr16
and
aas
mov
icebp
std
sahf
mov
sbb
out
mov
cmpsl
test
stos
fisttpll
stos
icebp
or
fwait
cmpsb
insl
in
add
sarb
lahf
push
xchg
pinsrw
test
clc
mov
leave
mov
aaa
xor
cmpb
xchg
jnp
cwtl
sbb
fmull
stc
scas
push
lds
mov
mov
test
mul
jo
nop
push
cs
sbb
mov
ficoml
lods
hlt
pop
lahf
loopne
das
jbe
mov
inc
sbb
out
addr16
gs
movsl
cmpsl
and
and
xchg
dec
pop
cmpsb
cmp
pusha
or
or
mov
daa
ja
sub
cmp
xchg
mov
fidivrl
nop
scas
mov
lods
push
push
out
data16
mov
mov
adc
push
test
pushf
jno
out
daa
xlat
jnp
mov
int
adc
sbb
adc
mov
bound
enter
jge
add
jno
sub
ljmp
jns
jno
jnp
and
pop
outsl
ret
jg
mov
cmpsb
ljmp
insb
inc
lock
dec
cmp
imul
cmpsl
adc
push
add
jmp
ds
add
push
stos
aaa
addb
sub
shr
add
mov
cli
das
mov
sbb
jecxz
test
sub
iret
popf
lahf
mov
dec
into
add
shll
clc
test
aad
mov
add
rorl
lea
or
add
add
dec
inc
dec
cmp
mov
sbb
shll
sub
push
movsl
test
fnstenv
cmp
xor
ret
rcl
pop
mov
insb
mov
into
mov
sbb
push
jecxz
xor
orb
bound
cmp
enter
push
aad
inc
in
loope
mov
lock
fcomps
adc
or
sarl
xor
xchg
in
xchg
repz
mov
loop
xchg
out
xchg
inc
jae
gs
test
sub
imul
jne
mov
sbb
orl
xchg
add
je
ds
jne
xchg
add
out
out
dec
andb
cli
cmpsl
aad
xor
js
adc
jbe
imul
int3
shll
ds
inc
cmp
mov
xor
pop
dec
scas
push
xlat
mov
and
icebp
pop
mov
and
inc
add
arpl
cli
shlb
mov
pop
push
lcall
sbb
jecxz
push
adc
lahf
cmpb
mov
xor
xchg
mov
sti
inc
fldenv
mov
insl
pop
mov
cmp
jge
icebp
mov
and
mov
push
mov
cmp
mov
nop
dec
ss
dec
test
and
cmc
jmp
and
cmp
and
pop
push
xor
xchg
data16
aad
dec
jne
push
arpl
das
popa
inc
test
sub
jnp
and
in
data16
xchg
jl
xor
sbb
lret
hlt
in
sbb
jmp
repz
jae
inc
xor
cmp
repnz
das
xor
and
leave
test
insb
ret
aas
sarl
cmpsb
test
stos
ret
fisttpll
jle
test
xor
rolb
pushf
jmp
pop
dec
cmp
test
mov
ljmp
mov
inc
jb
or
stos
pushf
leave
xor
in
xchg
pusha
rolb
ret
jecxz
mov
cmc
sub
push
cld
mov
cmp
fs
jmp
lcall
scas
mov
xchg
xlat
fbld
mov
stos
pop
dec
dec
and
sub
jno
jbe
mov
push
int3
or
test
mov
jae
js
lahf
pop
sbb
fwait
push
outsl
in
push
mov
insb
cmp
mov
jo
std
add
shll
sub
mov
jbe
mov
lcall
cmp
int
lds
adc
fs
imul
pusha
cltd
mov
lcall
lods
jl
shr
dec
sbb
mov
insb
xor
mov
lret
and
and
adc
dec
inc
push
ss
add
insl
mov
or
cltd
pop
dec
loop
test
mov
sahf
out
sti
repz
add
and
mov
cmc
std
mov
mov
sbb
out
xor
outsl
jne
stos
clc
test
mov
cmpsb
sarb
fdivl
adc
xor
enter
xorl
aam
outsb
or
popf
cmp
hlt
bnd
test
in
sbb
lea
rcrl
repz
jmp
repz
stc
outsl
cwtl
andl
xchg
test
mov
lods
pop
cmpl
cmpsb
fwait
xor
mov
push
adc
jmp
mov
push
mov
xchg
popa
decl
jmp
push
jne
xor
jns
and
sub
and
mov
push
dec
ret
mov
iret
out
inc
test
pop
bound
sbb
cld
ret
jg
push
and
cmp
fildl
xchg
arpl
mov
dec
pop
sub
mov
scas
or
mov
popf
clc
rep
scas
rolb
nop
add
jg
cmp
mov
or
xlat
jne
inc
ret
jg
and
inc
js
out
aad
test
inc
push
inc
shl
and
mov
ds
imul
and
or
testb
stos
les
dec
or
dec
lret
sbb
push
std
aas
cli
aas
popf
mov
lock
xchg
lods
push
enter
add
add
sbb
push
jmp
mov
lods
pop
push
cmp
jbe
push
jmp
iret
xchg
outsl
dec
scas
fsubrl
cli
sub
fadd
mov
jge
mov
dec
cli
daa
shll
dec
iret
inc
cmc
mov
add
std
push
jae
and
add
in
int
push
pusha
bound
pushf
jle
sub
add
outsb
lret
and
lea
imulb
jae
adc
pop
jno
lock
cmp
popa
or
pop
fldcw
push
cmp
xlat
mov
dec
jg
cmpsl
push
mov
cwtl
sub
pop
jnp
jle
hlt
cld
in
mov
ja
lahf
sub
ret
cmp
or
nop
insb
mov
movsl
push
fnstsw
mov
into
decl
sahf
cmp
adc
in
pushf
cmp
test
mov
mov
pop
push
or
push
pop
pusha
jge
repnz
cltd
inc
jb
fwait
mov
pop
sahf
ret
push
pop
jp
icebp
dec
and
jmp
call
cld
xchg
xor
imul
xor
jg
rclb
jge
mov
cmp
mov
cmp
or
add
jg
repnz
sahf
add
xor
xor
out
sub
sub
out
jnp
xor
inc
xchg
insb
call
xor
aam
fwait
lahf
mov
mov
jge,pn
mov
sahf
mov
cwtl
ja
ret
fiaddl
leave
adc
or
mov
or
jae
lods
cmp
in
scas
cli
imul
js
rclb
add
out
pop
jae
cwtl
mov
or
or
js
mov
adc
jmp
cmp
push
outsb
or
out
adc
loopne
aam
movsl
or
mov
pop
pop
fidivl
dec
addb
shl
pop
ds
bound
shr
push
test
in
loope
or
lock
jp
adc
cmp
xchg
fildl
jle
sub
inc
sub
mov
push
stc
and
outsl
cmp
ret
dec
aas
mov
inc
aaa
aaa
mov
ss
sub
test
enter
mov
sarb
jo
lea
inc
pop
in
pop
in
pusha
int3
insb
add
push
loopne
or
or
add
jl
jecxz
and
and
loope
mov
xchg
adc
inc
popl
mov
mov
adc
sbb
ds
mov
in
mov
push
and
in
sbb
jecxz
jns
lock
xor
mov
xor
sub
inc
mov
pop
gs
mov
call
or
test
mov
addr16
mov
daa
mov
test
dec
add
ffree
mov
fiaddl
pop
sbb
xor
movsb
push
mov
repz
pop
jb
lock
cld
mov
mov
inc
mov
pop
cmpxchg8b
add
es
pop
add
repz
loop
lds
dec
add
pop
xchg
filds
pushf
jb
pop
cld
inc
mov
testb
out
test
es
sbb
out
js
cmp
push
cmp
repz
inc
outsb
push
adc
xor
pop
mov
fs
fmull
lret
test
popa
cli
sahf
xchg
jmp
dec
push
or
mov
dec
cs
mov
orl
sub
mov
lea
pop
rcr
nop
dec
dec
mov
stos
mov
icebp
daa
pop
sub
lret
jnp
adc
mov
jo
jge
out
mov
or
sub
dec
fsubs
and
out
cmpsl
inc
dec
ljmp
sub
shll
sbb
xor
xor
and
xor
cltd
mov
cmpl
icebp
icebp
dec
xlat
adc
sub
scas
popa
jb
cld
adc
cltd
outsl
aaa
out
pop
cmp
loope
mov
lods
stc
xchg
shrl
out
mov
dec
icebp
outsb
dec
mov
sbb
pop
mov
dec
jl
addr16
or
inc
pushf
mov
push
gs
fdivl
or
push
push
xor
pusha
lcall
xchg
jns
fistl
dec
fcmovbe
ss
movsb
xor
push
inc
aaa
mov
out
pop
incb
mov
fsubrs
mov
cmp
sbb
jge
sbb
int
push
mov
sbb
call
in
and
dec
sbb
jge
out
int3
ret
sbb
in
xchg
dec
pcmpeqb
mov
aaa
sbb
sar
mov
int3
out
int3
sbb
cmp
sub
pushf
scas
rcrl
push
xchg
imul
adc
or
addr16
mov
inc
xlat
divpd
pop
int3
imul
sbb
hlt
jo
insb
mov
xchg
inc
lock
inc
or
push
and
cltd
add
mov
sbb
out
fdivs
dec
push
mov
cli
or
add
xchg
loope
add
or
popf
ds
and
popl
inc
push
push
mov
push
idivb
add
pop
xchg
push
push
jle
adc
cmp
sub
and
push
inc
popa
subb
pop
aaa
sahf
insl
movsl
cmp
pushf
xchg
int
insb
push
lods
mov
test
inc
pushf
clc
adc
push
mov
out
les
jle
mov
mov
call
push
or
sahf
and
jl
es
lods
nop
xrelease
into
mov
ret
leave
mov
outsb
lods
sbb
inc
mov
jl
std
dec
repnz
xor
xchg
cmp
lret
cwtl
shrb
insl
mov
in
loopne
sbb
pop
mov
mov
xor
hlt
pop
or
xchg
mov
pusha
mov
lahf
jns
neg
shl
out
dec
and
and
out
daa
rcr
mov
add
lock
and
mov
andb
scas
push
lods
adc
and
hlt
rcrb
sub
outsl
loope
push
arpl
push
out
xorl
jp
cli
dec
xchg
pop
in
dec
cmc
jo
movb
movsb
lcall
cmp
push
mov
cmp
inc
ret
fisttpl
pop
xor
add
mov
js
lahf
add
dec
addl
lahf
leave
sbb
loope
and
fcmovu
xor
ds
cmp
push
mov
sub
fidivrl
ss
sbb
inc
push
lcall
cmp
mov
pop
shll
push
dec
inc
mov
xor
clc
mov
add
dec
cmp
dec
xchg
sbb
sbb
xlat
adc
fldenv
adc
insl
xchg
lds
mov
jo
js
or
je
inc
xchg
add
xchg
push
adc
les
jg
and
call
cmp
adc
loope
and
jnp
inc
lods
outsl
scas
sarl
insb
call
cmpsl
pop
rcrb
or
shll
shlb
mov
jne
shlb
mov
jae
std
mov
out
lret
in
iret
aas
ret
sbb
mov
mov
or
jecxz,pt
add
push
repz
xchg
ja
stos
cmp
push
inc
adc
cltd
in
or
and
ljmp
mov
popa
out
gs
nop
push
and
inc
dec
or
lahf
aaa
sub
jp
int
push
out
add
push
push
mov
gs
mov
into
xchg
cmp
lret
inc
inc
orb
jle
sub
or
xchg
xlat
push
hlt
pop
out
jbe
movsl
fcomi
dec
or
loope
sbb
popf
leave
push
sahf
push
xor
adc
jge
lds
inc
in
push
pop
popa
insb
pop
mov
or
jmp
dec
stos
or
pusha
scas
mov
cltd
xor
fldenv
inc
adc
mov
lret
test
add
jge
enter
loopne
xchg
mov
xchg
pusha
add
out
cmp
cmp
adc
dec
fdivs
fnstcw
sub
icebp
dec
lahf
mov
stos
aas
adc
cld
mov
fstps
jg
mov
adcb
dec
push
inc
fwait
aaa
dec
les
dec
cmpsl
pop
fildl
cs
hlt
mov
repz
xor
cmp
or
hlt
pop
ds
add
dec
or
jecxz
mov
mov
lods
cmp
dec
jle
sbb
and
fildl
sarl
fdivrs
mov
inc
aam
fs
jo
xor
lods
ds
sbb
jno
andb
or
test
js
dec
daa
ret
jae
pop
fwait
xchg
push
mov
aaa
xchg
ljmp
sub
clc
pop
jbe
stc
dec
fucomi
cltd
mov
rcrb
pop
lock
mov
das
cmpsb
shrl
adc
inc
gs
pop
mov
insl
call
into
cmpl
in
xchg
mov
sti
xchg
pop
push
mov
fwait
cmp
cmp
sub
sub
pop
mov
push
xchg
es
cmpsb
test
jecxz
aaa
sbb
adc
mov
shrb
pop
stc
or
cmpsl
pop
js
mov
lea
jmp
decl
jns
sbb
mov
in
fists
and
fstps
sbb
xchg
mov
stos
addr16
jp
lea
mov
bound
dec
rclb
subl
or
rorb
fcomps
cmp
in
xchg
into
push
xlat
cmp
adc
dec
mov
push
pop
mov
sub
pop
mov
adc
jne
pop
les
aam
repz
data16
sbbb
fisttpl
adc
add
xor
lods
adc
cmp
push
fmulp
mov
lds
push
mov
add
mov
mov
adc
jns
mov
je
sarb
insb
jl
repnz
inc
and
mov
xlat
popf
mov
jge
adc
mov
lret
stc
pop
push
cmp
cmpsl
das
pop
lret
push
pop
int3
leave
jns
stos
aas
ss
es
inc
inc
test
loop
js
pop
xor
sbb
lds
in
xor
cmp
adc
adc
iret
out
inc
add
inc
push
dec
dec
lock
and
push
fwait
and
bound
es
sub
sbb
and
sub
call
dec
in
icebp
add
adc
inc
pop
cld
mov
test
cmp
mov
cmp
mov
mov
int
popa
mov
shll
out
and
inc
add
mov
mov
push
xor
sub
adc
push
xchg
mov
in
sbb
mov
das
les
xchg
test
dec
arpl
enter
in
inc
mov
xor
jbe
lcall
mov
sbb
leave
cmp
sub
test
imulb
adc
cmpsl
mov
mov
inc
adc
enter
test
repz
mov
sti
loope
cmp
xchg
repnz
jo
cs
repnz
and
jmp
and
jecxz
int3
jnp
sti
int3
mov
rcl
inc
xchg
dec
sarl
and
jo
insl
xchg
or
shrb
and
and
in
xchg
imul
dec
dec
mov
popf
out
xor
lcall
and
pop
lret
das
mov
das
insb
pop
or
clc
dec
mov
pop
jb
inc
divl
call
sub
mov
lock
mov
lea
mov
and
push
aas
or
jno
ficomps
rcll
pop
cmp
add
pop
xor
dec
push
out
test
stos
lods
lret
pushf
lock
and
in
jne
fidivs
xchg
sbb
mov
inc
push
rcrl
mov
push
lret
or
repnz
mov
cmpsl
fsub
push
xchg
mov
fisttpl
stos
add
or
rdrand
xchg
cmp
sbb
pop
ss
pusha
lret
lods
inc
adc
xchg
in
popa
rcrb
xor
retw
cmp
xchg
je
xchg
add
and
mov
test
gs
hlt
out
adc
and
and
lret
mov
es
mov
xor
iret
mov
pop
push
ljmp
mov
add
ss
xchg
push
cmp
subl
inc
outsb
shlb
sahf
xor
loope
and
fcmovb
incb
xor
dec
push
jmp
cli
and
inc
popf
jae
inc
mov
sub
test
xchg
jnp
stos
push
clc
jnp
cmp
ja
jbe
jns
jbe
xor
jg
nop
lea
imul
xchg
stos
sbbl
ja
lcall
cli
push
push
int
mov
inc
inc
je
sbb
xchg
cmp
pop
mov
jp
add
cmc
or
mov
mov
jmp
lods
arpl
cmp
push
fst
sahf
add
xor
adc
xchg
mov
jbe
inc
lock
out
es
add
jno
in
mov
aam
ret
pop
sahf
adc
out
jecxz
mov
inc
add
mov
push
sahf
mov
shrl
imul
cmp
ljmp
cwtl
popf
sbb
push
clc
sbb
movsl
aaa
push
mov
xor
jecxz
sbb
lret
dec
mov
fnstenv
and
int3
insl
cmp
pop
ss
or
insb
sbb
mov
add
es
push
sti
sub
xor
sub
dec
and
test
in
mov
out
pop
shl
or
pop
add
mov
inc
push
adc
mov
cmp
scas
movsl
adc
xchg
arpl
pop
les
lock
inc
in
fadds
sbb
add
push
loopne
or
push
mov
mov
mov
sbb
push
js
jae
push
es
popa
mov
mov
cmp
and
test
or
jmp
jno
sbb
xchg
popf
xchg
add
push
sbb
adc
cli
aad
rolb
mov
pop
push
xchg
shl
adcb
mov
fs
cmpsb
jns
mov
testb
and
mov
arpl
xchg
jb
popf
clc
inc
out
sub
movsl
cmp
push
popf
stos
pop
or
cmp
outsb
data16
jecxz
test
inc
fstpt
dec
xchg
lret
lret
mov
or
push
cmp
dec
jb
or
fstl
leave
addb
popf
bound
sbb
mov
sbb
movsb
enter
and
xchg
pushf
jno
mov
test
push
jae
shrb
adcb
mov
aas
push
movsb
sbb
mov
fidivl
push
in
scas
cmp
lods
sub
sub
inc
add
inc
lret
mov
xchg
dec
cmpsl
fbld
mov
jp
cmc
dec
xchg
adc
insb
mov
jg
push
inc
outsl
cltd
mov
lock
je
xor
adc
pcmpgtd
cltd
test
lcall
sbb
inc
fldl
push
push
in
imul
lcall
test
cmc
jmp
inc
lock
cmp
mov
test
lahf
mov
and
je
cmp
outsl
cli
loopne
adc
or
push
ja
out
jle
repz
lods
les
mov
repnz
add
mov
lret
xchg
mov
icebp
cmc
cmp
ljmp
stos
mov
and
out
out
mov
test
mov
data16
xor
dec
enter
fsubr
pushf
iret
out
add
cs
xor
les
jmp
pop
out
enter
sbb
int
dec
idiv
movsl
dec
mov
fsts
mov
mov
or
push
lock
in
pop
jne
vcvtss2sd
add
ret
cmp
mov
xor
daa
xchg
push
sub
sbb
fisttpl
sub
les
and
and
sbb
and
in
hlt
mov
sub
sahf
aas
and
and
cwtl
stos
push
sbb
inc
and
cmp
xchg
pop
push
adc
cmpsb
pop
mov
or
shll
push
push
dec
pop
addr16
mov
mov
mov
xchg
fnstenv
addb
xor
movsl
les
add
ds
push
stos
inc
iret
in
shrl
or
sti
push
shrb
aam
push
mov
loopne
arpl
rcr
fsubrl
mov
fisttpl
ds
nop
push
push
or
sahf
fdivrl
je
adc
in
jge
lods
or
in
inc
jo
xchg
xchg
fdivrs
fdiv
xchg
xor
mov
insb
cs
hlt
xchg
lret
jb
mull
mov
mov
xor
adc
mov
fnsave
dec
outsb
fildll
xchg
and
push
fimull
push
cmpsl
cmpb
nop
jp
and
fstp
ja
jp
leave
aaa
dec
test
adcl
in
outsl
lret
addr16
dec
popf
aam
sub
stc
daa
jo
or
shrb
cmc
mov
in
inc
or
decb
sti
lock
subl
and
and
scas
xor
movsb
ljmp
lds
add
inc
add
mov
popf
pop
jmp
insl
or
xor
mov
cmp
mov
test
lods
and
jno
inc
fdiv
ret
pop
mov
pop
inc
bound
dec
xchg
jae
jg
mov
push
xor
lcall
sti
mov
sbb
adc
mov
mov
outsb
xor
sbb
xchg
das
daa
push
rorl
sub
iret
out
xor
push
or
fsts
or
imul
jbe
loopne
jp
mov
mov
mov
outsb
and
push
shlb
push
dec
mov
lahf
xor
dec
stos
repnz
mov
mov
sub
push
cmc
icebp
das
int3
jb
pop
icebp
inc
jmp
dec
in
pop
loope
push
mov
scas
fmuls
fisubrl
add
adc
cmp
pop
imul
outsl
popa
aam
inc
imul
enter
outsl
pop
add
cmpsb
adc
mov
fistpll
jb
inc
mov
pop
subb
loopne
icebp
frstor
jmp
clc
stos
sahf
sub
mov
arpl
fsub
jmp
push
outsb
adc
xchg
mov
adc
fwait
mov
insl
push
jmp
popf
cli
out
and
imul
mov
mov
and
xchg
mov
fdiv
push
mov
lock
outsl
jle
lock
or
lahf
scas
lock
data16
fcomps
std
push
insl
icebp
ror
add
mov
sbb
les
jnp
out
testl
add
mov
adc
and
stos
sub
xchg
scas
pop
push
aaa
pop
bound
pusha
imul
repnz
cmp
dec
pop
jl
fcmovne
into
aam
cmpsb
push
sub
mov
xchg
jp
scas
jns
pushf
jb
ja
cmp
mov
sahf
testb
test
flds
or
lcall
aad
gs
mov
xchg
and
into
repnz
cs
jnp
arpl
sub
push
push
xor
pop
aaa
out
add
sub
jecxz
lock
aam
bound
xchg
jbe
adc
push
jb
in
nop
lcall
pusha
push
push
ret
sbb
push
pop
mov
cmp
aam
jbe
lret
push
daa
fstpt
movsb
push
popa
jbe
and
repnz
cmp
mov
xchg
insb
jno
xchg
mov
add
in
popa
stos
mov
mov
ja
subb
cwtl
cmp
bound
jle
push
and
nop
mov
or
gs
add
lcall
stos
nop
sbbl
jnp
fwait
lods
shrl
mov
pop
xchg
lret
fwait
mov
cmpb
mov
loop
add
xchg
xor
mov
xor
jnp
call
adc
in
xor
out
and
pop
sub
adc
stos
ljmp
inc
sbb
pusha
out
mov
lods
sub
and
fstpl
pop
mov
mov
or
gs
popf
sarb
sbb
bound
dec
or
rol
scas
push
movsl
jp
clc
mov
lods
push
dec
adc
pop
or
iret
inc
cmc
fdivrs
mov
inc
inc
inc
fists
nop
inc
mov
pushf
push
cmp
mov
mov
lret
mov
dec
or
and
inc
js
sbb
jns
or
xchg
ja
sub
scas
cwtl
cs
inc
es
cmp
ja
into
cmp
jnp
aad
aam
mov
and
dec
in
fisttpl
stc
push
fwait
sarb
insl
into
jmp
ss
push
xor
int
test
xchg
xchg
lods
test
cltd
inc
or
add
shlb
and
mov
dec
shl
inc
lahf
inc
jae
inc
test
pop
rcr
mov
dec
xor
fdivs
ss
comiss
jg
out
add
stc
cmc
jo
mov
test
daa
jmp
int
cmc
bound
shll
and
xchg
jmp
inc
or
and
mov
in
mov
inc
push
inc
movsb
aas
data16
ret
ja
sub
popa
and
adc
int
rcl
out
loope
shll
ret
xchg
shrb
cmp
adc
aam
aas
dec
or
cld
mov
gs
mov
fsts
add
mov
and
pop
ljmp
xor
pop
cltd
dec
mov
cmp
cmp
in
mov
fs
outsl
call
imul
sbb
push
cli
cmp
out
rorb
out
pop
pop
push
das
cmp
or
push
in
shll
dec
jae
sbb
cli
rcrb
fsubs
ja
add
add
and
or
xchg
mov
inc
pushf
pop
adc
fimuls
add
jb
shrl
cmp
aaa
inc
sub
test
ret
lock
int3
mov
sub
out
mov
inc
rorb
daa
xchg
xor
ds
call
fs
push
sarb
movsb
scas
push
jno
sub
lock
inc
int
imul
movsl
scas
int
push
fidivrl
sarl
pop
insb
fwait
push
or
cmc
imul
arpl
inc
add
mov
mov
inc
push
sub
jmp
pusha
daa
cwtl
push
arpl
nop
inc
mov
dec
incb
fistl
cld
mov
mov
jo
mov
mov
cmpsl
xchg
cmp
push
push
es
imul
call
ret
add
push
sbb
outsl
pusha
fwait
int
pop
lods
cmp
ret
imul
mov
lock
sub
push
push
cld
loop
push
adcl
subb
mov
xor
outsb
out
nop
aaa
mov
fucom
cmc
or
imul
pop
push
rolb
or
int
push
mov
and
pop
push
dec
in
add
test
ret
and
call
mov
outsl
je
mov
fists
sbb
cmp
xor
icebp
jne
jp
das
cmp
fisttps
and
gs
and
sub
cmp
test
jmp
inc
daa
pop
xchg
shr
adc
aam
jmp
jmp
and
xor
cmc
and
sahf
addb
inc
cmp
push
movnti
sub
sub
sti
in
jle
pop
out
cltd
pop
mov
in
in
fimuls
ret
leave
xchg
xchg
inc
ja
sbbl
test
cmc
push
js
xor
mov
xlat
test
adc
ds
inc
mov
sti
lret
std
les
cmp
and
mov
add
out
xor
inc
mov
inc
adc
and
push
inc
mov
xlat
push
shll
or
dec
and
push
fs
mov
jae
aad
rcrl
imul
testl
leave
sbb
clc
shr
add
scas
push
and
inc
test
mov
jmp
fwait
ljmp
sbb
add
repz
loopne
jne
jne
arpl
adcb
out
push
in
sub
arpl
aad
test
loope
cmp
dec
loop
adc
repnz
sbb
lahf
mov
out
les
add
mov
sub
add
es
push
es
push
ret
cmpsb
outsb
inc
addr16
fadd
lret
mov
clc
dec
pop
jmp
fisubl
test
aam
mov
inc
fwait
call
insb
push
push
xor
xchg
cltd
xor
popl
js
xchg
movsl
outsb
data16
jle
jne
lret
mov
ljmp
rclb
sbb
lcall
aas
push
and
adc
call
hlt
adc
push
stc
mov
mul
dec
mov
orb
or
imul
pop
stos
js
cmp
mov
popw
jmp
rorl
jb
pop
jb
xchg
lock
jge
inc
and
and
push
pushf
mov
push
mov
je
popf
loope
push
insb
mov
loopne
push
scas
push
and
pop
lcall
jl
and
add
mov
mov
xchg
sub
xchg
cli
push
and
fmul
aam
lods
adcl
adc
xchg
ds
jg
pop
cltd
and
fdivs
adc
les
mov
add
icebp
into
push
cmpsl
inc
shr
iret
jns
add
nop
push
out
popf
jl
mov
movsb
in
cmc
inc
mov
sbb
mov
addb
aas
cmp
dec
cs
out
hlt
mov
cmc
pop
push
pop
jecxz
jbe
aas
dec
mov
xor
inc
xchg
je
add
dec
sub
loope
push
cld
cmpsl
dec
push
pop
jp
cmp
js
adc
mov
pop
jp
push
addr16
fistpll
aam
out
movsl
xor
xor
jne
ja
lock
hlt
mov
inc
in
jnp
add
insl
decl
fwait
ret
xchg
insl
test
xchg
cs
fadd
in
cmp
scas
pushf
push
pop
pop
fs
out
in
mov
cld
adc
dec
and
mov
mov
xchg
stos
lcall
loope
jl
sbb
adc
xchg
jle
jmp
scas
jl
repz
mov
push
dec
shlb
paddusb
bound
mov
push
lods
pop
lahf
sub
xchg
sbb
cmp
xchg
mov
test
push
add
addr16
xchg
mov
mov
pop
test
and
jnp
pusha
ret
movsl
xor
xchg
dec
js
outsb
xor
sub
mov
xchg
mov
inc
mov
je
sti
rorl
lcall
bnd
pop
mov
sub
sub
pop
pushf
fistps
icebp
fldl
pop
subb
inc
or
rclb
or
dec
psrld
inc
fildl
in
jbe
cli
mov
and
outsb
stos
movsl
add
inc
or
int
cmp
cmp
scas
leave
sbb
inc
xor
add
pop
push
movsb
sbb
dec
dec
aad
enter
lea
sbb
stc
xchg
movsb
stc
sub
js
pop
repz
in
testl
push
add
out
shrw
sub
add
inc
cmp
push
in
cmp
pop
ljmp
mov
js
or
sahf
jecxz
mov
xchg
xchg
ret
mov
jle
xor
mov
mov
std
dec
xchg
jo
imul
cmpsl
push
sub
pop
mov
xor
mov
mov
mov
dec
xor
pop
inc
adc
jecxz
fisubrl
xchg
and
fists
mov
pop
pop
push
call
mov
sbb
in
lcall
frstor
test
inc
pop
pushf
mov
sub
mov
mov
push
mov
add
sbb
xchg
lock
jne
and
cli
outsb
or
mov
cmp
decl
pop
shll
ss
push
sbb
cld
or
jecxz
test
std
or
jb
out
sbb
jmp
xor
jl
jle
cmp
push
lods
push
out
mov
inc
in
and
sub
arpl
shll
pop
inc
rep
jge
jge
or
call
pushf
pop
cltd
lods
out
fstp
mov
pop
and
sbb
rolb
cmp
lcall
pop
jp
and
ss
cld
jne
xchg
sbb
sbb
cmpsb
data16
jo
mov
xchg
adc
adc
fldcw
rcrl
int
pop
mov
xchg
xchg
and
dec
sub
push
test
fmull
pop
movsb
js
insb
imul
and
ret
or
sbb
jmp
cmp
mov
jo
pop
ja
pop
loope
sub
xor
popa
xor
daa
out
pusha
leave
out
push
xchg
push
mov
mov
mov
sub
cmpl
in
dec
sahf
sbb
jle
sub
iret
cs
test
addl
decl
dec
pushf
mov
push
add
outsl
jae
stos
repz
fstpt
aam
loop
ret
shrb
loopne,pn
mov
add
pop
xor
mov
cltd
inc
movsb
mov
outsb
std
push
xchg
xchg
mov
in
inc
jl
loop
ss
cli
popf
ret
sub
rcrl
adc
push
aas
xor
pop
sbb
dec
pop
arpl
negl
nop
ret
push
mov
push
shlb
jbe
dec
and
mov
inc
jae
popa
push
mov
stos
in
cmpsl
idivl
jae
int
mov
les
ss
add
mov
push
adc
pop
rcl
repz
inc
out
js
adc
mov
jbe
les
fimull
bound
inc
stc
push
int3
dec
out
mov
push
outsb
bound
enter
jb
dec
ss
cmp
iret
out
push
pop
fwait
int3
imul
mov
dec
iret
imul
xlat
add
rorl
nop
mov
inc
xchg
lret
into
ljmp
xchg
out
icebp
push
sahf
loop
out
cmp
pop
shr
adc
and
mov
push
mov
iret
and
aam
int3
insl
shl
cmp
lret
dec
fsubrl
adc
push
dec
add
dec
pop
sbb
cli
dec
xor
lcall
fsubs
or
ja
mov
movsl
mov
push
jl
push
cmpsb
sbb
push
sub
sbb
mov
sub
push
popf
fwait
or
insb
xor
dec
out
dec
adc
mov
push
test
pop
sub
xor
cmp
sarb
xchg
popf
push
outsl
test
sbb
cmp
adc
mov
js
loop
jle
fsubs
adc
subl
stc
jb
out
pop
dec
push
mov
jge
pop
add
lods
mov
jp
or
push
cld
mov
and
das
push
push
sub
or
test
inc
das
xchg
push
rorb
ret
pusha
inc
aam
into
clc
sbb
outsl
mov
out
je
fwait
xor
out
cs
mov
push
mov
aam
fists
mov
fwait
xchg
insl
mov
mov
out
jbe
sbb
mov
adc
xchg
fsubs
mov
pop
dec
dec
mov
arpl
pop
incl
fstps
push
sbb
cmp
fidivrs
sbb
jb
clc
adc
je
sub
push
pop
mov
adc
mov
mov
adc
lret
sbb
fwait
movsl
xchg
mov
push
lahf
jg
sahf
repnz
cmp
mov
enter
loope
arpl
mov
sbb
inc
fistl
push
or
mov
in
cmp
cmp
add
faddl
mov
jns
pop
in
and
mov
dec
mov
adc
into
mov
cs
cld
dec
gs
and
mov
fisttps
push
cmp
sahf
cli
dec
jge
and
dec
push
xor
cmp
in
lret
fsubrl
loopne
fistps
jecxz
fldt
xlat
push
xchg
and
and
add
cwtl
fucom
push
ljmp
fldt
std
xor
xor
mov
lock
pop
fdivrl
inc
mov
mov
hlt
jle
fucomp
pop
inc
or
mov
mov
sub
ljmp
or
push
ret
pop
lret
das
xor
mov
xor
shrb
test
pop
icebp
fildl
cwtl
std
dec
adc
gs
outsl
pop
movb
jg
fisttpll
in
out
sub
add
mulb
notb
adc
jge
jmp
jge
out
push
sbb
jno
data16
cmp
mov
sbbb
lds
arpl
or
xchg
ja
ja
mov
jp
daa
adc
inc
dec
enter
leave
repz
pushf
adc
and
into
mov
adc
and
or
adc
dec
mov
sub
sub
popa
xchg
push
lcall
outsl
aam
cwtl
inc
int3
loopne
scas
push
xchg
fwait
loope
jge
jne
or
icebp
ret
or
loop
stc
and
mov
dec
xor
aaa
scas
mov
roll
push
mov
dec
sub
mov
sti
int
cmp
sbb
lods
aaa
mov
xor
sbb
cmpsl
mov
pop
pop
push
adcb
lahf
rcl
push
dec
ja
adc
test
jge
mov
test
pop
clc
pop
es
sbb
jg
mov
jp
addb
sahf
fldl
test
movsl
sub
enter
fidivl
shrl
jb
sahf
test
inc
insl
lea
loop
and
sub
adc
jmp
pusha
inc
pop
dec
fildl
es
mov
sub
jno
data16
mov
pop
xor
repz
mov
in
cmp
call
sub
js
js
inc
fsqrt
lock
mov
add
das
mov
insb
out
add
stos
push
rcrb
dec
data16
fcomps
and
or
xchg
push
int
sti
not
rclb
xlat
stc
repnz
stos
ds
mov
or
lret
ss
mov
xlat
ficompl
fs
test
mov
xchg
dec
fdivp
push
or
int
mov
daa
insl
shrl
fmuls
lock
and
push
hlt
mov
add
mov
dec
bound
ret
adc
into
sbb
scas
xchg
nop
mov
add
xor
vcvtss2si
xchg
clc
scas
and
movsl
insl
add
outsb
fldt
repz
sub
inc
popa
nop
shlb
aaa
add
out
xchg
sub
fisubrs
scas
into
sahf
pop
push
test
lock
xchg
mov
cmc
adc
jge
subl
mov
dec
adc
lcall
mov
aad
in
pop
xor
imul
jge
mov
testl
clc
mov
imul
fsubl
lods
jbe
cmp
into
jns
out
pop
sbb
xchg
cmp
sahf
cmp
pushf
int
push
inc
push
mov
sbbl
xor
dec
jo
mov
push
test
cmpl
ret
adc
push
cmp
push
pusha
push
inc
popf
cmpsl
mov
fists
cmp
mov
push
cltd
mov
mov
hlt
pop
test
and
xchg
mov
mov
add
fsubl
adc
cmp
sub
out
test
jmp
sub
sub
cli
stos
sahf
roll
xchg
push
adc
mov
pop
push
test
cs
in
or
jle
ss
sbb
movl
sbb
and
xchg
jbe
sub
sbb
lea
testb
adcb
push
mov
mov
jl
jecxz
inc
fistpll
cmpl
dec
push
mov
sbb
popa
and
pop
cs
pop
call
sub
or
push
and
sbb
mov
push
fisttps
and
mov
repz
xchg
std
mov
scas
mov
mov
pop
test
scas
lahf
jge
fwait
sub
ds
sbb
outsb
jp
orb
loopne
xchg
push
rol
or
dec
adc
out
into
aaa
dec
outsl
jmp
pop
push
test
mov
push
and
or
adc
cmp
adc
clc
sbb
xchg
xchg
icebp
xchg
push
cmp
test
lods
les
sub
inc
sbb
insb
add
push
sbb
nop
cmp
and
lahf
mov
lahf
jl
jno
and
out
movsl
add
stc
scas
lock
fcmovu
ret
xchg
adc
mov
nop
mov
repz
mov
in
sahf
ds
jmp
jle
mov
fstpl
adc
idiv
mov
in
popf
stos
dec
or
ds
dec
mov
sti
and
inc
add
xchg
das
lods
cmp
add
mov
jae
clc
cmp
pop
cs
add
jecxz
aam
daa
cli
aas
fbld
stos
mov
mov
adcb
push
sbb
xchg
or
jae
sbbb
dec
xchg
shrb
aaa
adc
movsl
pop
mov
int3
add
ja
les
insl
xor
test
outsl
jnp
jge,pt
imul
movsl
sbb
dec
mov
mov
fiaddl
mov
pusha
dec
xchg
dec
xchg
xor
shlb
into
mov
fdivp
lahf
pushf
lret
imul
cmp
push
in
insl
in
lods
jp
and
jo
fwait
cwtl
iret
imul
jae
cli
mov
sbb
mov
int
sbb
dec
fbld
dec
cmpsb
sub
lods
pop
xchg
mov
enter
scas
or
into
leave
push
cli
decl
adc
jo
mov
jb
push
out
int3
sbb
jmp
ret
mov
sub
call
sub
cld
sahf
neg
mov
jp
in
movsb
mov
int
add
sub
mov
mov
bound
js
dec
or
clc
sarb
addb
mov
sbb
cmpsl
dec
dec
popa
test
out
les
rolb
pop
sbb
insl
cli
pop
mov
push
cmp
outsl
mov
out
sub
lods
stos
pop
ja
push
movsb
lret
aam
rcl
iret
add
jo
xor
or
int3
adc
jae
int3
mov
inc
sub
mov
test
or
aaa
fildl
sbb
mov
fcmovb
lods
loope
rcrb
jmp
pop
sub
addl
je
bound
stos
std
dec
lods
cmpsb
fsub
in
fwait
sub
sahf
mov
add
incb
in
or
hlt
adc
movsb
je
xor
sub
cld
popa
mov
push
mov
pop
enter
into
repz
ds
or
mov
lcall
adc
test
cmp
loopne
mov
and
imul
sbb
and
test
mov
out
aas
imul
jmp
cmpsl
mov
pop
jns
sub
movsl
dec
push
jo
pusha
inc
pop
ficomps
popa
es
int
cld
and
jle
test
pop
data16
out
arpl
jle
push
nop
xchg
mov
shlb
xchg
or
sbb
lea
jae
leave
stc
sbb
in
adc
cmp
repz
int3
sbb
jle
push
xor
mov
xchg
cli
cwtl
aas
xlat
pop
adc
repnz
or
jno
mov
sarb
cmpsl
cmp
js
push
pusha
push
cmpsb
inc
xchg
popf
pop
mov
out
xor
cli
data16
js
rcrb
ljmp
arpl
in
fs
xor
xor
sub
jmp
in
cwtl
fsubs
outsb
mov
mov
push
gs
addr16
fists
lahf
daa
hlt
clc
pop
jnp
cmp
or
fst
inc
dec
push
and
shlb
int
popa
leave
pop
outsb
or
push
imul
in
jno
hlt
hlt
xchg
subb
call
shll
push
hlt
mov
fs
js
fwait
cmc
jae
sbb
sub
adc
dec
push
or
icebp
sarb
dec
lcall
mov
icebp
xchg
cmpl
mov
inc
testb
test
icebp
mov
data16
cmp
insb
mov
xchg
insl
cmp
mov
subl
bound
ss
push
mov
xor
subb
inc
add
cs
and
jecxz
xor
jo
rorb
push
xchg
mov
aad
pop
in
mov
pusha
test
fsubl
or
pusha
xchg
aas
push
jge
loope
cmp
push
mov
mov
ror
ja
call
scas
add
dec
push
fbstp
push
mov
ja
ja
and
lock
shrl
xor
loopne
daa
cli
test
ret
jne
pop
pop
das
cmc
cmp
add
push
pop
sbbl
sbb
xor
inc
sub
out
cmp
xor
arpl
mov
je
sbb
int3
movsl
jmp
out
jp
and
cmc
mov
jl
cmpsl
mov
jp
stc
dec
lea
fsub
sub
add
scas
mov
gs
iret
pushf
jb
push
mov
ret
inc
sahf
and
cmp
mov
add
dec
repz
incl
ja
cmc
or
lock
cmpsl
lds
xchg
mov
aad
jo
mov
push
popa
jle
scas
sub
fwait
jno
or
in
cmpsl
and
jecxz
pop
cmp
jae
ja
add
roll
enter
add
inc
stos
and
jnp
mov
ss
pop
icebp
pusha
sub
out
and
mov
js
lcall
aas
loopne
or
sbb
adc
negl
repnz
sbb
adc
xchg
add
pop
shr
imul
sub
ret
add
sti
std
adc
fcmovnu
aaa
loopne
ds
dec
or
out
mov
repnz
cmp
mov
fimull
es
sahf
jmp
imul
inc
out
imull
or
add
in
push
lods
push
mov
inc
sub
daa
inc
sbb
mov
and
and
inc
pop
or
mov
js
mov
or
push
xchg
jle
call
movsl
ret
in
int3
jbe
jnp
lea
dec
sbb
lock
data16
sbb
mov
inc
mov
pusha
dec
pop
or
insb
js
cmc
ss
add
imul
sar
aad
mov
pusha
cmp
jmp
cli
xor
subb
leave
imul
lea
pop
cli
stos
loope
jp
mov
bound
ja
orl
xchg
and
insb
outsl
icebp
push
or
cli
addr16
adc
or
outsb
mov
pusha
popa
int3
and
sbb
inc
mov
xchg
jbe
sub
add
popa
int3
fdivrl
and
mov
aam
repz
and
ficomps
mov
push
aaa
push
jne
out
xchg
xor
jmp
add
out
inc
sub
loopne
aam
dec
lds
pop
fs
mov
cli
jnp
out
xchg
shll
stos
mov
add
hlt
scas
jmp
das
in
data16
xchg
mov
cmp
push
xor
cs
xchg
mov
or
ja
in
sub
sbb
inc
es
pop
or
mov
or
xchg
xchg
inc
mov
pop
ror
les
cmp
lret
sbb
lds
push
jns
mov
mov
inc
sub
in
sarb
jle
pop
add
popa
mov
shl
mov
les
les
sbb
jl
fs
inc
dec
xchg
add
push
mov
faddl
bound
adc
dec
test
ss
out
adc
pop
cwtl
sti
popa
adc
dec
push
cmp
xbegin
jmp
add
xchg
aam
cmp
sub
pop
jb
pop
pop
fsubrl
and
sub
loope
xor
cmpsl
xacquire
sbb
add
ret
push
xchg
inc
in
or
fcom
pop
outsl
cmp
inc
cmp
sbb
bound
nop
int
mov
pop
push
mov
push
xchg
cwtl
fsubs
push
or
mov
sarb
adc
es
cmpsb
sbbl
lahf
add
xchg
out
dec
in
fistpll
cmc
in
jge
xchg
ja
aad
movsb
arpl
pop
shlb
mov
pop
jns
imul
outsl
jle
fucomi
mov
ja
test
jns
dec
mov
mov
gs
push
insl
push
mov
jecxz
pop
xor
sbb
fwait
jae
test
mov
jns
cld
pop
adc
jle
adc
and
mov
xchg
fdivrl
xlat
out
movsl
test
lcall
and
pushw
jno,pt
sti
pop
stos
inc
jae
outsb
mov
ljmp
stc
sarl
test
inc
cmp
mov
out
cmpb
jae
jo
rcrb
imul
add
ss
loop
jge
cmp
sub
mov
sbbb
stos
inc
push
mov
rorb
jp
mov
push
fucomip
es
mov
ret
jecxz
push
push
add
pop
pop
test
rcr
sbbb
jns
pusha
sub
xchg
ffreep
ror
mov
xorb
xchg
mov
pop
insl
stc
mov
sub
repnz
inc
mov
cli
pushf
pop
mov
in
scas
mov
mov
cwtl
jmp
dec
xor
mov
or
lock
scas
pop
adc
mov
stos
pusha
jns
push
mov
mov
in
std
mov
stc
int3
sti
cltd
inc
jg
dec
dec
dec
nop
das
mov
sub
ret
loop
xchg
lea
mov
push
in
inc
arpl
enter
addr16
cmp
out
shl
mov
fisubl
mov
insb
push
jp
je
mov
cli
jmp
out
aaa
adc
and
sub
mov
push
andb
pop
lcall
xchg
fcoml
out
rorb
mov
std
sbb
clc
jnp
xchg
dec
jg
cs
xchg
inc
iret
sub
jno
ficoms
rclb
xor
je
push
mov
adc
mov
stc
jae
jnp
xorb
jb
mov
in
cmp
mov
test
jae
push
push
psraw
lods
pop
sbb
test
inc
jge
add
xlat
arpl
cmp
stos
jnp
or
push
lret
out
in
jbe
iret
cs
or
outsb
pop
ret
popa
in
fildll
or
or
sbb
push
add
adc
adc
pusha
sbb
dec
cmp
add
mov
or
fs
cwtl
mov
filds
cli
outsl
push
leave
rorb
jecxz
mov
pushf
or
ret
test
add
cmp
xorb
push
or
loopne
mov
jle
dec
jae
mov
je
enter
sbb
out
test
aad
cmp
lcall
add
pop
popa
popa
incb
lahf
xor
subb
or
js
jecxz
cltd
mov
push
movsl
xchg
and
sub
pop
push
scas
pop
xor
sbb
dec
hlt
push
cmp
and
dec
fildl
jle
xchg
test
mov
xor
and
andl
cmp
subb
mov
pop
sub
out
push
pop
and
outsl
inc
in
add
push
les
cmp
gs
mov
outsb
loope
enter
mov
arpl
add
ss
cld
arpl
dec
cmp
hlt
ds
cs
push
mov
jne
jno
repnz
stos
cmc
cmpl
jl
lret
aad
into
mov
stos
lcall
xsaveopt
in
cmpl
data16
aas
adc
pop
js
gs
lret
popf
es
mov
ret
mov
mov
add
fst
dec
mov
add
daa
stos
in
lods
mov
popa
shlb
addl
cmp
dec
mov
dec
xchg
hlt
rorb
push
push
cmp
inc
mull
lock
les
fadd
cli
test
adc
int3
sub
push
mov
int
aad
jno
ljmp
and
mov
movsb
mov
inc
sub
xchg
cmp
xchg
sti
fldt
out
out
fs
inc
inc
test
pop
jb
sub
and
inc
mov
fildll
push
jmp
pop
add
fistpll
daa
stc
jb
dec
mov
loop
stc
int
dec
adc
out
jge
cmp
push
scas
push
mov
jg
stos
push
and
sub
lret
inc
add
mov
leave
ljmp
xor
in
cmp
scas
add
xchg
pop
fisttpll
inc
repz
cmp
push
outsb
inc
dec
add
call
dec
movl
ficompl
pop
jno
sbb
xchg
lret
fs
popf
cld
cs
jno
lret
jge
inc
sbb
add
mov
addl
andl
mov
stos
mov
push
iret
sar
add
pushl
pop
inc
inc
fs
rcr
shll
arpl
rol
leave
add
ja
push
adc
cmp
mov
or
jbe
add
cmp
lret
xor
outsb
add
xor
std
ljmpw
dec
sub
inc
imul
mov
cli
mov
frstor
in
in
stos
mov
pop
or
pop
nop
sub
aad
sub
dec
in
mov
sbb
adc
add
or
mov
aas
mov
cmp
xchg
test
arpl
sbb
arpl
scas
mov
fcomi
pop
pop
xchg
test
dec
ret
cmp
mov
cmpsl
inc
pop
aaa
push
xor
idivl
mov
add
lcall
inc
cmp
inc
jge
jmp
shll
mov
fs
pop
dec
mov
cmp
ja
int3
aaa
mov
cmp
pop
sahf
ret
shll
out
scas
inc
pop
ss
fs
xor
sub
push
and
xchg
cmp
mov
scas
int3
jo
or
sub
aam
mov
jmp
cmpl
scas
and
xor
sar
out
adc
jmp
mov
pusha
push
and
cmp
mov
pop
push
setns
loopne
test
or
sub
jne
push
mov
iret
push
cmp
in
imul
int3
and
mov
push
jns
test
jl
cmp
mov
fistpl
pushf
mov
in
lods
dec
loope
pushf
mov
orb
stos
adc
sbb
or
jmp
mov
nop
inc
or
xor
std
pop
push
inc
out
icebp
jl
sbb
sub
into
dec
test
adc
sbb
inc
xor
jnp
jb
jmp
xor
adc
adc
test
cs
scas
imul
bound
stos
test
pop
lcall
sbb
push
shrb
inc
movsl
js
rcrl
fstl
push
or
lret
in
clc
lea
aam
ret
cwtl
inc
push
push
inc
scas
fdivrl
mov
ret
imul
lds
cmpl
jae
or
xlat
mov
cmpsl
stc
js
in
xlat
jo
xchg
lret
push
jle
push
push
rorb
mov
mov
jmp
fisttpl
mov
jns
movsb
jbe
inc
arpl
xor
jns
pushf
aas
and
pop
push
aam
jmp
sbb
cmp
arpl
lret
sbb
mul
loopne
lds
je
jne
sub
sarb
ret
adc
jecxz
stos
loopne
lcall
andl
test
mov
xchg
dec
aam
mov
loop
roll
mov
movsl
ljmp
mov
xor
fcmovnbe
movsl
and
jle
xchg
mov
sbb
mov
scas
dec
sbbb
cmpl
xchg
xchg
scas
jmp
push
aad
cmp
pusha
aad
ficoml
push
hlt
mov
mov
rcrl
or
fs
fwait
aaa
sbb
ret
adc
ja
imul
push
inc
ficomps
outsb
shlb
xor
pop
into
mov
sbb
insb
xlat
cmpl
lahf
repz
popf
mov
add
pop
jmp
jbe
xor
or
imul
addr16
and
jbe
mov
add
repnz
cmp
push
xor
adc
mov
sub
xchg
sub
push
scas
xchg
pop
cli
out
notl
cmp
mov
mov
mov
inc
hlt
add
int
adc
cmp
lret
xchg
cmp
adc
xchg
mov
mov
sbb
mov
out
add
push
fstl
iret
bound
jb
jbe
aas
jo
xchg
sub
test
les
jg
pushf
cs
out
sbb
hlt
lods
js
push
mov
hlt
and
enter
xchg
jns
out
push
add
shl
and
mov
jle
xor
dec
cld
pop
lea
add
enter
mov
cmp
sahf
test
cmc
jnp
cli
pop
sbb
xchg
les
push
insb
lea
lea
sub
out
pop
inc
add
bound
pop
push
js
and
addr16
xor
mov
cld
cmpsl
adc
jae
stc
xchg
push
icebp
xchg
stos
mov
jl
jecxz
lods
in
and
dec
leave
icebp
adc
daa
fadds
addb
cmp
rcll
xchg
xorl
outsb
enter
pop
mov
sti
xchg
cwtl
addb
jmp
jbe
cltd
lds
dec
mov
shl
into
add
add
gs
sbb
push
in
fbld
iret
test
pop
mov
aad
in
dec
jb
pop
ror
or
add
cmc
popa
pushl
jno
inc
in
push
push
outsb
loop
aaa
add
sbb
pusha
xlat
outsb
aas
mov
int3
push
pop
sbb
aas
push
sbb
ret
fwait
call
or
pop
xor
jmp
xchg
mov
sub
scas
jmp
xor
mov
and
out
xchg
push
xchg
movsb
sub
sti
dec
inc
test
sbb
xor
ja
sub
jnp
adc
imul
mov
ljmp
xorb
fcmovnbe
push
sbb
fsubs
xor
pop
mov
fldl
xor
fdivl
push
push
push
dec
out
dec
daa
mov
movsb
jne
add
mov
sbb
xor
push
cltd
std
mov
test
loope
scas
push
ds
mov
sbbl
inc
bound
add
cld
xlat
sbb
ljmp
push
sbb
push
mov
cltd
nop
pop
cmpsl
testl
mov
adc
out
add
jnp
pop
xchg
insl
shlb
jnp
call
aaa
push
and
push
inc
dec
xchg
iret
mov
jecxz
cmp
sti
cs
aam
movsb
dec
dec
into
ret
dec
leave
cmp
pop
fidivrs
cmp
cmp
mov
repnz
adc
dec
lret
ss
ja
loop
xchg
pop
xchg
iret
jae
cmp
test
sub
setb
push
lods
ret
sub
jno
xor
cmp
lods
adc
enter
sti
lret
sub
cld
dec
inc
adc
lret
xchg
sbb
sub
cmp
jo
mov
enter
inc
ljmp
jns
sti
arpl
push
in
scas
adc
js
in
lcall
pop
xchg
pop
inc
gs
int3
push
out
mov
pop
push
lret
iret
clc
js
cmpsb
out
jb
aas
mov
adc
out
frstor
jae
jae
pop
cmc
jne
leave
mov
cmpb
ja
aad
shlb
or
js
je
fildl
pusha
push
sbbb
movsb
xchg
or
test
mov
push
mov
js
cmpsl
inc
andb
loopne
add
int
or
aaa
xor
std
sahf
icebp
insb
imul
cmp
and
adc
adc
es
and
aad
mov
outsb
mov
dec
or
fs
cli
inc
sbbb
push
aaa
and
push
jae
insb
shll
or
out
aad
push
stos
or
fcmovnu
sub
jecxz
mov
add
andb
js
andb
sub
loop
mov
movsl
mov
and
xor
sub
outsl
mov
rcll
pop
cmp
lock
jbe
leave
mov
sbb
pop
nop
out
in
sub
lahf
jb
sbb
inc
sarl
mov
xchg
testb
incl
rolb
ffree
ja
addb
mov
arpl
mov
mov
rep
xor
or
mov
fdivl
stos
xchg
cwtl
sub
jmp
xor
push
or
in
es
xchg
cmpsl
add
mov
push
dec
pop
pop
adcb
fnstcw
int3
outsl
jae
in
xor
and
jnp
or
insb
adc
decb
icebp
mov
mov
lock
adc
aad
adc
andb
adc
je
scas
mov
pop
dec
cmp
xor
fistps
mov
sub
inc
movsl
sub
pushw
sub
mov
clc
adc
push
xor
adc
pop
dec
xlat
xchg
jl
jne
bts
je
mov
sbb
sarl
rclb
scas
cmp
stos
add
flds
andb
fiadds
or
xchg
jl
push
int
add
das
hlt
mov
mov
or
xchg
cld
into
aad
movsl
imul
insl
movsb
loop
sub
push
dec
in
cmp
cli
mov
pop
jo
xchg
cmpsb
xchg
push
pop
mov
add
sbb
cltd
xor
jle
in
out
sarb
shlb
std
stos
inc
mov
xor
loop
pop
int3
inc
cmpsl
jmp
jge
mov
jl
jg
mov
andb
cmpsb
in
jno
mov
mov
adc
mov
inc
mov
mov
mov
lahf
lods
jle,pt
mov
repz
pop
jo
dec
cs
aas
xchg
call
ret
sub
push
insb
insl
out
push
and
lret
mov
hlt
dec
jno
lds
fildll
cmp
pop
mov
dec
mov
and
xor
in
sarl
fstpt
push
mov
imul
outsl
sbb
je
or
xchg
and
leave
adc
test
mov
mov
jno
jge
imul
fnstsw
fistl
sbb
out
xor
sbb
sbb
mov
dec
arpl
aad
and
jecxz
pop
xchg
fsubr
mov
cmp
shr
shrl
loopne
and
xchg
adc
in
xorb
hlt
pushf
in
lret
jbe
dec
das
pop
add
inc
lock
loope
push
or
dec
pop
mov
push
xchg
xor
ds
imul
notl
cltd
movsl
pop
movsl
into
nop
push
mov
add
popa
push
xchg
add
mov
loope
cmpsb
lahf
and
inc
sahf
sbb
test
lods
fsubr
loop
fsubrs
imul
bound
dec
out
jns
cmp
jae
addr16
mov
and
icebp
fimuls
cld
jo
push
repnz
xor
cwtl
push
xchg
ret
xlat
cmp
mov
xchg
or
pop
aad
fildll
inc
mov
push
xlat
mov
inc
fbld
and
addb
jl
pop
scas
into
xchg
mov
nop
or
xchg
dec
ja
loope
mov
inc
in
and
cmp
stos
pusha
inc
or
inc
mov
jg
jl
test
arpl
test
fstl
pusha
adc
js
or
cltd
inc
pop
and
xor
push
fnsave
sub
jne
mov
mov
addl
dec
sbb
lds
sbb
mov
fsubl
enter
dec
cld
lock
ja
xor
push
mov
mov
dec
or
add
jbe
icebp
std
xor
add
xor
xchg
xchg
rcrb
jae
fistpll
cwtl
ljmp
xchg
jmp
fs
cmp
jge
sbb
mov
cmp
and
sub
aam
and
cwtl
fcmovu
pop
cmp
dec
in
mov
fcompl
jo
jmp
push
movsl
ds
sub
xchg
mov
cmp
sub
mov
xchg
inc
sarb
fldcw
mov
mov
lods
jle
cmpsb
push
mov
scas
push
xchg
xchg
test
mov
add
cwtl
mov
ret
dec
scas
push
out
lods
out
mov
loop
testb
in
test
outsb
imul
jle
test
lods
arpl
in
dec
sbb
xor
leave
hlt
cs
aas
jne
rorb
in
popf
push
ja
pop
imul
lret
xor
sub
inc
xor
inc
roll
insl
xchg
and
lock
pop
xchg
pop
adc
int3
pop
cli
insl
cmp
icebp
xor
xor
dec
ss
pop
clc
pop
mov
push
pop
popa
sbb
or
popa
inc
sub
xchg
mov
xchg
inc
shll
adc
xor
loopne
add
xchg
mov
out
ja
adc
outsl
in
mov
pushf
lock
pop
and
adc
push
icebp
sbb
pop
mov
mov
xor
ds
rclb
fs
push
mov
popf
shrl
test
pop
stos
stc
jae
mov
mull
adcb
mov
cmp
aas
adc
dec
aaa
movsb
out
inc
test
idivb
add
or
cmp
sbb
fidivs
incb
inc
movsl
and
jnp
cmp
out
pop
sbb
sub
xor
sahf
pop
ds
stos
leave
or
push
cmpsl
into
dec
push
pusha
adc
sbb
jne
jno
mov
push
jmp
xchg
or
dec
jecxz
or
adc
sub
stos
xor
out
jb
inc
dec
in
dec
and
flds
xor
js
into
add
mov
pop
dec
icebp
push
flds
or
add
add
cmp
jl
iret
and
xlat
pop
ja
popf
in
jg
mov
push
mov
cmp
jle
movsl
jo
repz
push
out
push
or
sbb
mov
xor
or
ss
mov
cli
mov
pop
loope
jecxz
test
sti
adc
ds
xchg
mov
xor
aam
cmp
mov
lds
lock
or
rcll
sbb
adc
mov
out
mov
jo
push
imul
cmpsl
inc
lock
jl
or
cmp
jne
movsl
push
in
sbb
fisttpl
xor
test
iret
push
not
mov
ljmp
jle
decl
fucom
lret
imul
xchg
call
outsl
ror
cmp
mov
aam
inc
cmp
lret
sbb
insb
mov
repz
in
pop
fnstenv
mov
sub
mov
push
mov
push
pop
int
ss
sbb
pop
insb
sub
outsb
js
inc
andl
dec
and
pop
lock
pop
movsl
popf
cmp
cltd
jbe
fisttpl
mov
jp
lahf
cmovge
cmpsb
daa
shl
mov
in
aaa
fs
adc
sub
xchg
fadds
lahf
ret
imul
daa
lods
fdivl
not
movsb
negl
in
movsl
sbb
repz
dec
mov
aad
mov
loop
mov
test
push
cmp
cmp
imul
xor
lcall
and
lock
add
inc
adc
mov
test
scas
jo
and
mov
mov
enter
cmp
inc
or
mov
imul
dec
leave
xor
mov
nop
call
jb
mov
rorl
repz
push
push
stos
inc
cmp
scas
push
sub
push
xor
mov
mov
push
or
adc
sbb
mov
dec
and
arpl
fnstenv
pusha
mov
add
cmc
aam
xor
pop
add
sbbl
pop
pusha
fdivrs
sahf
sub
subl
push
cmc
cmp
jno
lea
jp
popf
sub
sarb
mov
sahf
and
int3
push
dec
data16
ss
cmp
lahf
test
jmp
xor
fs
mov
pop
mov
out
jecxz
inc
movsb
repnz
and
cmpsb
inc
cmpsl
aas
xchg
mov
pop
xchg
outsb
adc
leave
lcall
jmp
mov
roll
mov
mov
rorb
add
pop
ja
lahf
dec
push
in
mov
pushf
sbb
mov
jne
adc
push
or
push
push
adc
mov
imul
xchg
loopne
subl
cmp
mov
push
or
fcoml
pop
fldcw
fwait
jbe
or
in
imul
lahf
fstpl
out
mov
push
pusha
add
int
sahf
mov
sahf
xor
sbb
push
fimull
or
xlat
lock
arpl
pop
cmpw
mov
sbb
jl
jg
push
xchg
lret
out
inc
out
outsb
bt
inc
xchg
pushf
dec
loop
xor
cld
xchg
push
xor
xchg
lcall
jbe
movsb
push
stos
push
cmp
push
les
and
sbb
xor
mov
int3
aam
push
push
push
fadds
push
cmp
jo
sbbb
cmp
inc
mov
mov
mov
shrb
push
lea
sub
enter
adc
pop
cltd
sbb
mov
je
adc
sahf
push
daa
and
pop
cmp
cmp
shrb
mov
xor
sti
pop
inc
mov
xor
push
dec
notl
movsl
sahf
movsl
adc
xchg
fnstsw
pop
and
or
fs
xor
lods
jmp
push
lods
gs
or
int
pushf
push
lret
mov
mov
subl
sub
lret
sahf
decl
xchg
sbb
lss
cli
rorb
add
mov
jb
mov
test
xchg
inc
jmp
lahf
stc
mov
mov
sbb
iret
sbb
dec
ljmp
cmp
imul
jae
pop
insb
mov
xchg
inc
push
negb
and
mov
int
pusha
les
xchg
fcoml
cli
push
rcl
sub
into
mov
stc
jecxz
cmpsl
cmpsl
mov
mov
pop
scas
mov
and
decb
lcall
push
shlb
sbb
mov
mov
movsl
or
push
jns
cmp
lds
add
fs
pop
cmp
loopne
or
dec
insb
dec
sub
addr16
sbb
dec
rorb
call
ds
repz
jle
push
xor
push
mov
sub
mov
mov
leave
testb
fdivrl
push
pop
stos
stc
shl
mov
aas
dec
pop
sub
pop
pop
rcr
mov
aad
or
mov
outsb
insl
xchg
enter
xchg
insb
loope
inc
aad
xor
scas
mov
icebp
push
scas
movsl
xor
aam
mov
test
sbb
je,pn
mov
test
aaa
lcall
push
out
pop
sbb
pop
stc
test
ret
dec
aad
adc
xchg
xchg
jg
dec
fistpl
loope
mov
xchg
dec
jmp
int
aad
lret
iret
mov
cmp
mov
scas
test
rcrb
pop
push
mov
mov
pop
mov
mov
repnz
xor
jnp
es
dec
and
ja
jno
movsl
testl
cltd
sbb
inc
stos
testb
fcomp
and
ret
xor
fisubs
pop
fdiv
sbb
sbb
sbb
or
test
lcall
insb
mov
sbb
lcall
add
cmc
fldl2e
xlat
mov
dec
out
loop,pn
je
add
inc
or
lcall
lea
add
pushf
int3
inc
add
mov
dec
lahf
mov
mov
insb
pop
mov
cmpsb
loopne
push
test
xchg
stc
or
sti
and
popf
jle
test
jbe
cmp
out
inc
test
ffreep
mov
pop
sbb
les
icebp
xchg
popf
lods
dec
pushf
xchg
in
mov
ja
dec
mov
xor
fs
shll
add
mov
jp
pop
inc
mov
ret
mov
xchg
cltd
mov
xchg
mov
out
lds
xlat
cli
push
aam
cmp
lret
or
imul
sub
cmp
bound
push
inc
cmp
fsubrl
push
xchg
into
lahf
pop
stc
and
jo
xchg
hlt
ja
imull
pop
or
mov
jg
push
mov
inc
cltd
negl
push
jecxz
xor
xor
sbb
jg
mov
das
jmp
xor
popf
and
int3
lock
mov
arpl
push
or
mov
mov
outsb
pop
push
xchg
add
adcl
pop
out
insb
jo
mov
out
push
lock
inc
mov
dec
test
in
in
and
icebp
lcall
stos
out
lahf
imul
jbe
sbb
sti
out
inc
lds
pop
push
movsl
cmc
or
fs
mov
and
ja
rolb
xchg
jnp
insl
lcall
in
jnp
push
pop
fwait
jns
sub
pop
movsl
and
out
xchg
fwait
das
in
shrb
add
flds
gs
push
jg
aam
and
out
sub
lcall
mov
jge
shl
pusha
dec
lcall
inc
icebp
ret
in
inc
cli
pop
push
hlt
jbe
addl
pop
mov
pop
jns
pop
mov
in
xchg
aam
xchg
sti
push
int
les
int3
aam
mov
sbb
lods
and
cmp
jg
or
daa
xchg
mov
mov
push
sbb
and
sbb
xor
sbb
or
jns
mov
xor
dec
sub
hlt
addr16
sub
mov
mov
pop
in
cld
jmp
sbb
or
mov
or
and
pop
adc
fisubrs
in
sub
mov
mov
mov
imul
gs
mov
mov
push
push
sub
add
out
jae
scas
arpl
sub
repnz
dec
or
sub
jg
lret
push
nop
bound
into
sub
jo
leave
sbb
inc
insb
inc
aas
mov
mov
out
lret
in
jmp
outsl
cmp
pop
mov
sbb
xor
pop
jno
pop
inc
test
sub
dec
aas
or
cs
enter
pop
xchg
bound
cmpsb
pop
push
xor
lea
and
jle
dec
ss
les
push
mov
testl
and
add
fdivr
push
pop
out
and
jle
xchg
ret
insl
in
call
sbb
mov
ja
lret
icebp
lcall
frstor
mov
jle
push
cs
jmp
das
jge
loop
cmp
insl
cmc
mov
xor
cmpsl
scas
or
dec
push
les
mov
jae
stos
push
dec
xchg
inc
add
pushf
push
xor
and
pop
jl
pop
jae
lahf
xor
jns
lock
mov
jns
mov
pop
mov
mov
cs
out
jl
repnz
ja,pn
jmp
cld
das
lods
insl
mov
pushf
push
xlat
mov
inc
sub
in
cmp
fsubs
cmc
scas
lods
outsl
mov
fadd
sub
adc
outsl
js
gs
xchg
aad
xchg
popa
mov
jmp
dec
fsubrp
scas
and
sbbl
xor
test
mov
sub
push
add
test
mov
xchg
pop
lahf
out
sbb
lods
insb
popf
xor
mov
fisubl
and
add
pushl
push
stos
roll
in
mov
pop
dec
push
adc
push
sbb
cmp
repnz
dec
outsb
pop
push
jno
int3
jp
cltd
loopne
insb
pop
addb
repnz
ret
fistps
cltd
clc
dec
xor
cmp
mov
pop
jmp
add
sbb
cltd
jge
daa
ret
push
inc
out
pusha
sub
insb
push
cltd
sbb
xor
or
repz
push
pop
inc
ret
cld
cld
dec
icebp
int
mov
add
mov
outsl
insl
scas
pop
mov
push
arpl
push
inc
iret
inc
dec
dec
out
mov
sbb
push
scas
fcom
ljmp
pop
push
pop
add
rcll
jo
push
lds
cmp
rol
imul
pop
cmc
outsb
pop
cmp
lahf
lock
push
fldt
mov
fwait
adc
sub
fsubrp
mov
lahf
push
jg
push
jmp
lret
mov
mov
int
xor
dec
fisubl
xchg
mov
dec
inc
addb
aam
xchg
out
int
fsts
jb
and
fmuls
adc
dec
push
push
sub
shll
sub
cmp
dec
xchg
mov
cmp
les
xchg
hlt
and
xchg
movl
mov
test
or
popf
mov
in
insb
xchg
enter
push
xor
fsubrl
or
aas
jbe
mov
mov
pushf
lods
and
out
push
shll
mov
or
mov
mov
les
stos
in
dec
repz
add
scas
popf
into
je
ret
inc
jno
pop
push
push
and
movsb
jne
lret
out
cld
sub
jp
cld
imul
rol
push
sbb
mov
fidivs
sbb
mov
xor
xchg
mov
fisttpl
and
mov
andb
xor
dec
imul
in
js
jg
adc
popf
pop
and
mov
pop
test
cmpsl
aad
mov
test
mov
int
call
dec
fimuls
xor
mull
fsubl
popa
nop
loope
mov
lahf
lds
je
or
mov
jp
adc
jo
in
aaa
cs
lret
rclb
cmp
mov
adc
sub
jnp
jnp
mov
and
pop
iret
mov
cmp
aaa
inc
sbb
mov
int3
outsb
push
push
ficompl
stc
xor
je
mov
call
int3
push
fmul
mov
in
mov
into
lahf
jno
icebp
sbb
adc
ljmp
lret
testl
ficomps
cmp
add
out
fildl
mov
and
jle
add
jns
js
dec
aam
sub
jg
mov
sbb
pop
inc
push
stos
jne
or
loop
stos
aad
stc
sbb
pop
fiadds
fidivrs
movsb
mov
sub
icebp
add
jns
int3
mov
ret
lret
sub
adc
or
push
jmp
or
or
lock
fs
out
int3
mov
hlt
movsb
out
sti
lcall
adc
push
add
imul
push
out
lods
sbb
and
test
cmp
test
and
push
cmp
pop
or
ljmp
mov
add
inc
repnz
jo
lahf
mov
pop
mov
jle
xchg
mov
aad
dec
xchg
cs
popa
cmpsl
repz
ficoms
adc
call
pusha
rcll
pop
mov
jmp
mov
pop
cwtl
sbb
push
add
or
ss
popf
adc
xchg
adc
xchg
mov
nop
mov
rorl
das
dec
xchg
addl
pop
adc
les
mov
lahf
mov
sbb
call
insb
cmp
sbb
dec
sub
clc
pop
dec
mov
enter
dec
outsl
fcom
cmp
imul
dec
pop
or
push
and
jmp
push
call
or
movsb
lahf
xlat
inc
outsb
mov
pop
mov
mov
out
sub
mov
and
cmc
sub
fs
xchg
jb
dec
sub
cmpl
in
sub
xchg
pop
xor
imull
xor
push
inc
stc
seta
pusha
cmc
add
loop
cwtl
xchg
dec
xor
add
rclb
pop
daa
out
mov
out
aaa
cli
rcll
xchg
clc
sub
into
shll
cmpsl
inc
es
arpl
jns
xlat
shrb
inc
test
sub
fisubs
push
fistpl
inc
sbbl
inc
cmp
out
cwtl
mov
jle
in
or
ror
xorl
push
inc
pusha
mov
jle
test
push
and
push
xchg
notl
xchg
les
xchg
icebp
fbstp
stc
adc
scas
call
and
xor
cltd
shlb
push
mov
add
int
mov
adc
mov
gs
cmp
jae
repz
lcall
cmc
jp
cmp
test
xor
mov
push
into
enter
lcall
cmp
push
lods
mov
insb
cmp
idivl
xchg
mov
or
inc
lods
mov
test
aam
pop
adc
xchg
ja
subb
xorl
sub
cmp
fcomi
and
pop
fcoml
jmp
fiaddl
xorb
push
and
insl
dec
ds
mov
shll
or
mov
stos
iret
push
sbb
xchg
adc
stos
and
push
sub
jnp
pop
jp
int
ss
ret
sub
pusha
sti
insb
and
ljmp
inc
js
adc
call
inc
cltd
adc
int3
in
sbb
into
jb
std
pop
cmp
mov
mov
mov
cmp
add
loopne
outsl
or
loopne
pop
xor
in
rcrl
aaa
push
mov
jge
pusha
call
aaa
mov
mov
fiaddl
pop
repz
data16
jmp
xlat
add
inc
pop
inc
cli
cld
icebp
fisttps
outsb
mov
mov
push
test
pop
pop
mov
fists
adc
or
cmc
pusha
movsl
js
lods
out
cmpsl
xchg
negb
pop
stos
fstp
pop
push
test
stos
popa
lcall
insl
add
decb
cmp
dec
jae
ss
and
je
inc
mov
push
mov
and
cmp
aam
push
push
sub
out
cli
dec
icebp
mov
xchg
imul
xchg
sbb
lods
movsl
mov
jae
sbb
fstp
mov
ret
mov
mov
push
sub
pop
les
xor
push
mov
inc
loopne
xchg
cs
jge
das
jae
pop
jge
nop
mov
leave
xchg
cltd
call
or
sahf
inc
iret
jae
popf
add
cwtl
or
mov
mov
cmp
jmp
out
and
pop
sahf
jecxz
xlat
mov
iret
xchg
test
mov
and
jl
addr16
out
mov
dec
fisubs
sbbl
loop
cmpsl
pop
pop
test
in
in
fldt
ret
fistpll
into
jmp
fcmovnu
mov
jne
xor
mov
jmp
loope
or
jns
sbb
sbb
push
out
cltd
push
add
push
clc
in
mov
mov
out
shrb
mov
cmp
add
fs
cmc
pop
call
fimuls
sub
jae
push
idivl
dec
jp
cld
mov
pop
sub
add
shlb
cld
lcall
jne
jbe
sbb
jl
decl
sub
inc
clc
jo
add
sbb
dec
and
lds
mov
sbb
xlat
lahf
in
xorl
stos
xchg
add
push
add
test
lock
in
push
push
shl
lds
faddp
or
lcall
pusha
sbb
pop
popa
inc
xor
nop
cs
push
mov
in
icebp
or
popa
mov
iret
pop
lahf
sbb
sbb
mov
pop
js
sarb
and
ds
push
nop
out
add
stc
cmp
inc
mov
cmp
lahf
cmp
push
clc
out
pop
jmp
xchg
sahf
pop
repz
in
jecxz
push
scas
std
scas
dec
fcmovbe
lea
sub
add
push
push
pop
pop
cmp
mov
add
sub
xchg
push
xlat
xor
mov
pusha
cld
jle
or
js
xchg
mov
xor
call
repz
cmp
clc
pop
or
adc
sub
or
sbb
xchg
insb
mov
push
fisubl
test
cmp
xchg
and
bound
lcall
inc
push
jb
stos
nop/reserved
cmp
pop
and
mov
mov
outsb
push
and
push
sub
add
and
mov
xchg
mov
std
scas
fildl
shll
xchg
ljmp
lock
and
test
mov
iret
cmp
push
fldt
jns
mov
popa
push
sbb
jle
mov
jecxz
and
sbb
es
cltd
fisubl
cmc
test
aad
add
sub
gs
sahf
and
clc
jge
enter
pop
ficoms
out
scas
dec
xor
cwtl
imul
cmp
or
mov
sbb
sub
cmp
mov
rol
cmp
call
cmp
js
fadd
bound
push
xlat
xchg
sti
fsubrp
call
stos
lods
test
add
mov
and
push
and
call
jmp
jb
inc
hlt
test
pop
mov
jno
push
ret
mov
pop
out
adc
pop
into
clc
sbb
xchg
inc
stc
xor
movsl
sub
sub
in
inc
fidivs
fwait
mov
stos
mov
and
les
mov
xchg
push
out
jne
lret
mov
mov
movd
push
push
jo
nop
xor
sti
jae
loop
loope
sbb
push
push
inc
aas
int
cmpb
mov
ds
shr
outsl
xor
shrb
inc
popa
and
out
sub
popa
sbb
xchg
sub
mov
push
notl
pushf
dec
xchg
sahf
sahf
mov
push
in
jmp
test
mov
push
cwtl
leave
test
push
js
mov
jl
loopne
mov
xchg
jnp
jb
xlat
out
scas
std
sti
xor
mov
sbb
lods
lods
pop
in
inc
pop
aaa
stc
jnp
sarb
fidivrl
jecxz
gs
imul
pushf
je
cld
xchg
jmp
cli
shl
in
lds
xchg
xor
cmp
pop
repnz
pop
mov
outsl
mov
cli
xchg
xchg
ljmp
out
test
adc
mov
addl
push
dec
negb
movsl
xor
pop
dec
xor
adc
in
lock
aas
and
mov
sub
mov
scas
sti
popw
mov
loope
stos
push
sahf
pop
lret
adc
cwtl
popa
int
dec
fcompl
leave
in
imul
mov
das
fwait
pushf
les
jle
xor
xor
test
xlat
data16
fisubrl
sub
xchg
dec
out
xchg
push
sub
dec
outsl
shlb
or
mov
outsl
dec
mov
push
xor
inc
mov
in
add
cs
aad
scas
push
loop
inc
sbb
adcb
sbb
stos
scas
jle
adc
xchg
cli
xchg
or
clc
dec
cwtl
push
icebp
cmp
in
es
fmuls
sub
pop
or
pop
cmc
add
int3
cmp
adc
or
xchg
mov
shrb
push
add
mov
les
scas
fisubrl
or
addr16
repnz
stc
xor
inc
and
mov
xor
out
icebp
pop
aaa
arpl
push
and
pop
scas
mov
sub
pop
xchg
jbe
into
cli
jg
pop
std
and
aad
fistpl
cmpsb
fiaddl
jp
mov
popa
xchg
xchg
sbb
out
cli
ficompl
jl
imul
pushf
mov
or
xor
jnp
inc
add
mov
mov
xorl
es
in
mov
mov
mov
mov
cmpsl
xchg
mov
ret
insl
push
xchg
rol
push
xchg
std
cltd
testb
jb
fldt
push
mov
add
insl
lahf
push
inc
dec
shl
bound
rcrb
es
scas
dec
xorl
fincstp
adc
imul
xor
adc
mulb
mov
loop
sbb
loopne
int3
lock
sub
and
sub
dec
sub
push
repz
outsl
mov
rol
in
sbb
lods
mov
cmp
adc
xor
mov
inc
mov
in
xor
sub
or
cmpsl
int
pushl
push
cmp
call
movsb
addr16
jae
dec
or
pop
and
mov
mov
or
cwtl
mov
mov
jnp
xorb
inc
fnstsw
in
popf
hlt
pop
pop
xchg
push
cmp
fwait
cltd
push
repz
scas
frstor
scas
fidivl
cmc
lahf
xor
push
roll
call
bound
jl
addr16
imul
rcrb
adc
paddusb
and
ljmp
xor
pop
out
push
mov
lret
pop
out
cmpsl
ljmp
clc
add
xlat
loop
mull
push
adc
push
aaa
cmpsl
dec
mov
leave
fsubr
sbb
sub
inc
fcmove
lods
jno
ds
repz
adc
pop
add
lds
mov
sub
test
pop
loop
nop
lods
fimull
mov
aas
mov
xor
fldt
mov
adc
or
lret
adc
popf
stos
mov
push
sbb
dec
lret
mov
jne
loope
iret
or
jo
pop
jae
test
push
out
sbb
xchg
jg
inc
or
adc
imul
fstps
pop
push
fmuls
inc
adc
lds
xchg
in
addr16
ja
mov
ret
mov
dec
mov
popf
mov
or
stc
mov
adc
or
test
pop
mov
push
or
push
into
bound
mov
sub
add
or
sub
shrl
rcrl
xor
dec
cmpsb
mov
pop
ret
jge
mov
jmp
push
pop
dec
push
sbb
cmp
js
and
inc
data16
outsl
mov
adc
jbe
bound
int3
push
mov
scas
jg
loop
aaa
jns
test
sbb
jecxz
fsts
and
sub
rol
rol
pushf
in
add
cwtl
mov
mov
pop
mov
std
xchg
mov
lods
scas
out
in
scas
mov
divb
mov
rcl
lods
push
lods
repz
cld
inc
jp
cmp
leave
test
lret
xor
xchg
das
rcpps
movsl
shll
lcall
xor
flds
or
lret
pop
cmp
xlat
shrl
cmpsl
sub
fnstenv
push
test
mov
enter
lahf
loope
cltd
lock
out
xchg
mulb
fs
push
jmp
inc
pop
icebp
js
sbb
jmp
sarl
pop
fmul
dec
sbb
push
test
inc
rcll
mov
pop
xchg
les
pop
pop
call
clc
or
jp
push
nop
adc
push
xchg
inc
ja
and
inc
lahf
stos
outsb
push
mov
xchg
test
xor
loopne
sbb
cmp
mov
mov
sub
out
push
cli
jle
mov
ds
push
add
das
sbb
or
adc
or
mov
jno
add
lds
fiaddl
cwtl
mov
push
shl
scas
cmp
push
xor
cmpb
movsl
push
pusha
dec
mov
cwtl
movsb
int
clc
inc
jp
xchg
les
sbb
xchg
lds
xor
hlt
lcall
jle
cltd
lea
subl
loope
sbb
adc
xor
mov
xchg
lret
scas
or
jl
mov
lds
sbbb
fadd
test
cmpb
popf
shll
fisubrl
psubb
lcall
and
test
aam
inc
or
dec
fldt
out
test
imul
xor
xchg
data16
mov
into
pop
repz
out
pop
cmovg
lea
or
mov
ljmp
or
mov
sub
aad
pop
xor
repnz
xchg
lahf
in
sti
rcll
jl
enter
mov
loop
jge
fisttpll
scas
jnp
cmovb
cwtl
outsb
push
pop
div
cmp
mov
add
sbb
das
xor
dec
test
or
inc
clc
jo
jae
mov
xchg
mov
out
sbbl
lods
lret
es
mov
cmp
or
nop
mov
sub
test
inc
push
adc
push
cmp
mov
mov
imull
jnp
inc
mov
xor
sub
movsb
icebp
shr
lea
dec
mov
mov
or
repnz
cltd
int3
dec
jecxz
mov
arpl
mov
pushf
and
dec
dec
jb
sbb
xor
mov
movsb
imul
enter
jno
outsb
movsb
rep
movsl
mov
ss
aas
cwtl
pop
pop
mov
inc
and
sbb
mov
decl
pop
adc
push
or
push
lods
arpl
inc
push
mov
scas
cmp
jge
mov
jmp
add
iret
inc
cmp
and
lahf
into
adcb
nop
mov
ds
jmp
call
test
xchg
dec
adc
and
xor
xchg
popf
and
rorl
popa
dec
sbb
repz
in
cmp
pop
xchg
xor
fs
nop
int3
mov
cltd
pop
cmpsb
sub
ljmp
jne
das
dec
sbb
and
imul
dec
xchg
sub
xor
fstpl
je
cmp
dec
inc
or
or
shr
push
push
aas
gs
push
cwtl
push
cmp
and
pop
lret
dec
sbb
dec
scas
pop
mov
jo
pop
mov
out
es
sbb
push
mov
in
shl
xor
in
xchg
xor
sbb
pusha
and
loop
lods
or
into
in
mov
fs
or
dec
aas
push
sbb
adc
jecxz
push
inc
outsl
clc
cmpsl
xchg
imul
inc
sbb
and
push
jns
mov
cwtl
jmp
mov
lds
pop
les
clc
cltd
inc
rolb
sub
jnp
fstl
arpl
fdivrl
xorb
fs
cmp
jp
arpl
mov
iret
aas
cmp
fistps
mov
mov
mov
and
xchg
xchg
insl
xchg
sbb
xchg
aaa
out
xchg
in
outsl
sti
cld
sarb
popl
lods
mov
jge
aaa
mov
mov
jns
aaa
mov
out
fs
cmp
repnz
lods
ljmp
mov
insb
mov
cmp
aad
popf
stos
mov
leave
lods
fcmovbe
inc
ret
pop
int
mov
mov
divl
xchg
pusha
dec
mov
in
test
aaa
lods
js
xchg
jbe
in
push
dec
jnp
lods
xacquire
mov
pop
pop
popa
out
mov
insl
and
sub
mov
test
or
fsts
pushf
xor
mov
dec
add
loop
xlat
fadd
hlt
mov
mov
and
scas
in
mov
aas
pop
int3
mov
xchg
xor
adcb
repz
jns
adc
loop
arpl
mov
mov
xor
or
mov
mov
ret
mov
jne
aam
fs
xor
cmpsl
std
mov
inc
mov
dec
sub
lahf
sbb
dec
je
pushf
jo
push
lea
sbb
data16
pop
cmpsl
jmp
insl
add
sbb
out
mov
xchg
jge
fnstsw
ret
lds
ret
push
dec
and
in
push
xchg
aad
mov
push
push
xchg
dec
sbb
sahf
cwtl
xchg
adc
mov
add
add
cmpsb
aaa
mov
dec
add
pop
int
mov
pusha
mov
icebp
outsb
mov
add
shlb
pop
jg
push
cmpsb
jg
mov
loope
add
mov
mov
loop
pop
pusha
xchg
in
jmp
mov
dec
adc
arpl
outsl
jge
push
xor
xor
in
in
out
dec
filds
cmp
pop
pushl
dec
sahf
and
scas
adc
orl
addr16
jl
jge
xchg
dec
test
cmp
push
jl
sub
xchg
cmpsb
sbb
pop
icebp
inc
movsb
outsb
fistps
repz
sub
push
addr16
mov
inc
mov
pop
lahf
and
loopne
jp
out
cli
lea
cli
or
cli
dec
or
inc
rorb
mov
or
fwait
notb
mov
mov
or
andb
arpl
int3
dec
iret
in
dec
jmp
mov
jecxz
push
dec
mov
mov
dec
dec
scas
mov
das
int3
push
fdivs
jns
cli
jns
shl
mov
aam
mov
jmp
mov
mov
into
cmp
cld
inc
xor
xchg
mov
jmp
sbb
push
inc
mov
jge
adc
js
cmp
jg
in
outsb
xor
cmp
dec
test
fmull
subl
sbbb
xlat
dec
cmp
add
les
fidivrl
xchg
adc
inc
push
xor
out
imul
out
loop
inc
movsl
or
cltd
jbe
mov
ljmp
test
mov
por
cmp
pop
and
xor
not
fsubrs
int3
les
mov
fcmovne
fists
adc
jl
inc
xor
pusha
icebp
mov
pop
ret
add
mov
cmp
jge
ret
jb
js
pop
xor
loopne
push
jmp
add
dec
lahf
mov
div
cld
fcomps
xchg
movsl
popf
mov
mov
bound
jno
jbe
es
adc
or
cmp
add
cwtl
mov
or
cmp
gs
adc
ja
sbb
sbb
push
xchg
inc
mull
sbb
lahf
mov
aam
fs
mov
popa
inc
in
ret
popa
jecxz
fdiv
int3
in
test
fdivl
aas
mov
inc
mov
je
mov
or
jmp
fisttpll
dec
dec
flds
cs
xor
mov
push
test
inc
addr16
push
mov
lahf
in
mov
imul
jb
and
arpl
xchg
pop
add
or
cld
std
mov
xchg
loope
inc
aaa
loope
jg
xchg
jl
jns
sub
mov
push
sbb
mov
iret
mov
cmp
aas
loope
sub
xor
orb
in
orl
cmp
loop
daa
adc
mov
rcll
insl
fmull
xchg
lods
pop
add
call
insl
fwait
jbe
ficoms
fidivrs
mov
xchg
pop
into
xchg
in
mov
and
out
xorb
ljmp
and
mov
orl
push
cmp
aaa
jns
movsb
into
sub
mov
mov
pusha
push
pop
adc
sub
scas
ret
cmp
popf
lahf
test
or
mov
cmp
lods
mov
ret
mov
cmp
cmp
and
insl
inc
loopne
dec
cmp
dec
outsl
fs
fcmovb
aad
pop
fnstcw
ja
leave
test
shr
jb
loope
rorb
fcmovu
mov
hlt
sti
fnsave
insb
into
adc
sbb
sbb
outsb
ss
int3
jg
sub
jo
es
popf
in
jnp
cmp
mov
test
and
cwtl
in
cmp
mov
jae
rcll
shrb
lock
sti
xchg
cmp
repz
lods
cmpsb
repz
jbe
loop
push
stos
js
scas
or
lahf
fisttpll
lods
out
and
movsb
int
test
test
fldt
andb
imulb
fnstsw
mov
stc
enter
loopne
ror
adcb
mov
add
shll
iret
inc
lea
add
xchg
add
or
ret
inc
mov
xor
not
and
aas
jge
nop
xor
ficoml
or
aam
add
inc
hlt
xor
cwtl
mov
cli
pop
mov
stos
mov
rcll
neg
or
loopne
push
mov
jnp
rolb
out
sarb
xor
scas
mov
adc
lret
int3
cmp
jbe
dec
sbb
mov
mov
fs
push
jge
shll
in
cs
in
inc
or
ret
cmpsb
mov
lahf
cmp
pusha
stos
mov
dec
jb
stc
mov
or
add
cwtl
push
aaa
into
dec
outsl
mov
rcrl
add
push
sbb
lahf
cmp
push
stos
jl
rolb
mov
testl
std
cld
popa
adc
sbb
xchg
xchg
sub
into
aaa
inc
sbb
std
xor
cmp
cmp
sbb
xchg
push
faddl
inc
mov
lock
into
and
xor
xchg
mov
insb
add
or
mov
push
mov
jb
std
fidivl
adcb
popa
mov
cli
push
stc
movsb
jp
cwtl
frstor
push
imul
adc
add
jp
mov
xchg
movl
mov
fisubrl
push
push
iret
nop
out
popa
pop
and
loop
pop
mov
enter
test
movsl
lods
dec
sub
bound
sub
or
jne
pop
and
xchg
push
or
xor
stos
lahf
test
and
sbb
add
sub
pop
adc
dec
sub
xchg
mov
lock
sbb
lods
out
or
rcrb
pop
mov
arpl
negl
dec
outsb
inc
rorl
adc
inc
loope
test
inc
hlt
adc
xor
push
jb
pop
shrl
sahf
hlt
outsb
loope
out
jno
xor
sub
push
add
mov
out
mov
lods
push
pop
or
adc
pop
nop
out
push
adc
rorl
sbb
aam
adc
jge
push
fnsave
sub
aad
mov
sarl
push
push
divb
push
pop
xor
sub
in
pop
dec
jg
insl
scas
js
test
pushf
imul
int
icebp
and
xor
dec
shlb
daa
sbb
sbb
in
in
loop
out
daa
sub
xchg
push
adc
cld
jecxz
push
jb
insl
mov
mov
nop
imul
xchg
int3
shll
mov
cmp
fsubs
push
loop
inc
rcr
das
insl
pop
mov
inc
shll
mov
add
jo
loope
dec
sti
adc
push
out
sbb
lahf
adc
jecxz
sub
call
cwtl
fcoms
bound
and
stos
icebp
jg
adc
mov
jb
lds
test
js
push
loopne
les
sbb
xor
lods
popf
hlt
sub
icebp
add
add
mov
andb
pop
cmp
push
sbb
fimuls
out
sahf
cmp
je
xor
popf
cmovge
aaa
bound
jge
inc
sarl
mov
and
outsb
leave
aam
fstl
add
sub
jl
cmp
pop
daa
cmp
sub
test
orl
cmpsl
xchg
mov
jae
mov
js
lods
push
or
test
cltd
xor
mov
mov
mov
adc
rcrb
out
movsl
fs
movsb
push
and
mov
jno
mov
push
and
fcompl
hlt
outsl
imul
cmp
ret
mov
repnz
es
and
xchg
stos
jne
insl
cltd
xor
std
sbb
les
jle
mov
dec
loop
imul
js
ficompl
cmp
adc
in
adc
push
rcrb
out
out
jg
movsb
mov
scas
dec
jo
xchg
or
dec
ss
iret
int
or
icebp
jmp
rol
sbb
mov
jp
jns
add
ss
mov
xchg
cmpsb
repz
mov
cmp
sub
rcr
pop
out
or
fcmovnu
std
insb
add
mov
addr16
loope
orl
sbb
xor
add
jle
lds
in
push
mov
callw
je
inc
dec
sbb
movsl
adc
or
icebp
rcrb
mov
call
push
stos
inc
jne
sbb
aam
in
and
loopne
dec
repnz
mov
push
mov
cmp
jbe
mov
sub
adc
test
add
jecxz
inc
popa
or
sub
cmp
inc
xchg
push
leave
mov
cltd
enter
add
inc
lds
inc
iret
mov
mov
popa
iret
xchg
push
jmp
into
mov
popf
outsl
mov
insl
xor
repnz
mov
pop
sahf
dec
mov
add
inc
push
out
or
pop
ja
push
ljmp
push
and
sbb
pop
jp
xor
nop
lods
dec
cmpl
inc
ja
out
jmp
aam
mov
pushf
xor
shlb
pop
jl
out
xchg
in
inc
jae
or
ja
imul
lods
mov
dec
scas
push
pushf
jge
inc
call
dec
push
sub
sub
fcompl
imul
push
inc
fstpt
xchg
divl
adc
mov
inc
mov
outsl
pushf
xchg
cwtl
inc
jbe
pusha
ljmp
cmpsb
movsb
jp
outsl
inc
jnp
add
fstps
pushf
cmp
rorb
xchg
dec
jle
fstl
rorb
mov
test
or
mov
lods
pop
mov
fildl
call
push
out
jge
fiaddl
aas
jnp
jge
ja
arpl
sub
mov
les
mov
push
add
adc
adc
mov
cmp
scas
lcall
sar
pop
outsl
sub
bound
cmc
outsl
fcompl
push
sub
pop
dec
inc
xor
ds
sbb
xchg
jp
and
rol
ss
inc
push
pop
mov
outsl
xor
bound
sbb
in
pop
mulb
sub
push
cmp
inc
dec
int
ljmp
out
mov
lahf
inc
and
ret
adc
jecxz
sbb
pop
outsb
mov
and
mov
pop
ss
int
jg
lock
mov
daa
popf
sub
stos
pop
cmp
push
call
cmp
mov
loopne
jecxz
popf
out
repz
roll
enter
cmp
leavew
fwait
js
inc
pop
ss
pop
daa
lahf
insb
jl
fsub
daa
fildll
adc
lret
loopne
xor
mov
xor
mov
pop
out
arpl
js
mov
jle
xchg
std
test
inc
xor
mov
sbbl
ds
dec
dec
mov
leave
add
mov
push
ds
adc
dec
in
mov
pop
out
gs
fcompl
mov
add
cmpsl
pop
out
jb
leave
pop
insl
inc
jne
adc
jbe
ljmp
repnz
iret
jbe
jmp
repz
sbb
test
sub
push
les
xor
jl
xchg
and
fwait
cmp
or
sbb
in
jae
lret
sub
adc
sub
mov
mov
movsl
int
xchg
mov
loopne
push
fnstsw
mov
lret
pop
pusha
das
lss
xor
out
roll
and
shlb
imul
jl
stc
inc
loopne
jns
cmp
inc
andl
idivb
std
cltd
fidivl
or
into
jmp
xor
push
push
rclb
sub
push
mov
fcmovnb
pop
dec
inc
mov
cmp
mov
jae
xor
scas
fidivl
mov
ja
jns
movsl
out
and
iret
dec
inc
adc
add
lret
jge
popf
sahf
insl
pusha
cmpsw
ror
cmp
add
xchg
scas
pop
or
aam
pop
mov
lret
xorb
cmp
xlat
jno
push
add
sub
or
insl
clc
fwait
js
cmp
in
pop
in
or
lahf
in
mov
sbbl
repnz
or
fstpt
xchg
cltd
sti
into
testb
ret
out
dec
lahf
mov
dec
gs
cmpsb
sub
rolb
pop
ljmp
jl
int3
jge
test
push
xchg
cltd
fiaddl
in
push
add
jp
rcrb
jns
roll
mov
dec
xor
inc
and
dec
ret
stos
jbe
pop
and
lcall
xchg
inc
rcll
pop
or
push
pusha
cmp
in
mov
aas
fimull
sbb
mov
repz
push
iret
sbb
xchg
dec
jl
jecxz
leave
dec
inc
jns
xor
out
cmpsb
sub
ja
inc
pop
mov
imul
lret
pop
iret
fs
test
jbe
push
jp
shl
fcoms
aaa
and
inc
add
mov
cmp
fcomp
add
test
and
jmp
dec
push
add
sbb
lods
mov
jl
jmp
shl
mov
out
jecxz
vmptrst
into
xlat
dec
jle
dec
push
mov
repz
xchg
push
outsb
and
pop
sbb
dec
movsl
insb
mov
sbbb
jge
icebp
cs
push
ds
aad
mov
or
xchg
test
and
pop
leave
pop
addl
lds
add
lea
and
pop
pop
dec
sbb
rcrl
lds
and
adc
dec
out
mov
pop
in
cmpsl
add
inc
andl
shrb
ds
jnp
fs
arpl
fisttpll
xlat
test
xchg
jmp
js
pusha
sbb
into
xchg
cmpsb
leave
popf
scas
pop
nop
leave
or
cli
jbe
lcall
mov
and
pop
aaa
pushf
push
popa
gs
in
ret
fiaddl
roll
xlat
rcr
add
lahf
adc
imul
fcoml
cltd
jo
aaa
std
outsl
loope
dec
clc
push
add
mov
jge
fisubl
adc
and
mov
xor
int3
jb
scas
mov
pop
cmpsl
nop
insl
lods
push
ss
mov
push
lods
xor
or
in
dec
popa
scas
movsb
and
mov
jg
aam
inc
push
adc
das
mov
and
out
push
loop
das
loopne
dec
aad
dec
dec
xchg
shrl
jmp
cli
fucomip
mov
popa
test
stos
std
add
and
pop
mov
je
into
mov
inc
xor
mov
xor
push
repz
in
inc
push
cmp
pop
mov
iret
inc
push
sti
imul
std
ljmp
mov
ret
push
pop
fldt
mov
cmp
mov
and
in
push
adc
pop
aam
movl
pop
int3
lahf
mov
pop
inc
out
aad
iret
add
cli
xchg
imul
stos
cmp
dec
fwait
xchg
ret
lahf
scas
or
in
enter
cmp
sub
and
cmc
lods
add
jmp
jns
sbb
stos
les
xor
dec
lret
fldcw
out
sub
test
mov
test
push
inc
pop
xchg
mov
stc
xchg
lods
mov
sub
shl
xchg
stos
mov
std
push
push
jmp
cli
addb
imul
jns
pushf
loope
dec
imul
mov
loope
mov
xlat
mov
in
adc
mov
push
inc
mov
pop
cmp
xchg
mov
mov
call
dec
push
ljmp
mov
pusha
das
das
mov
jmp
ss
aad
dec
jno
aad
mov
mov
ret
add
jge
or
and
adcb
jmp
cmpsl
test
sub
pop
xchg
inc
imul
pusha
loope
in
sti
shlb
ffreep
jb
inc
fdivrs
inc
pop
mov
adc
loope
repnz
jecxz
orl
and
mov
cli
hlt
movsl
mov
add
sub
lahf
push
xlat
cmc
cmpsb
dec
icebp
scas
and
add
out
mov
xchg
es
and
icebp
fadds
sub
rorb
jmp
mov
mov
gs
push
std
les
add
int3
mov
aaa
pop
lods
sub
jl
adc
dec
sbb
inc
outsb
jb
jp
ret
pop
jle
out
sbb
pop
test
ret
add
enter
xor
jecxz
stos
inc
popa
and
mov
inc
pop
shl
jb
cmp
mov
inc
les
push
repnz
jae
inc
sub
cltd
or
inc
sbb
mov
cs
pop
pop
add
call
call
cmp
dec
test
fidivrl
or
add
jae
cmpsb
imul
sbb
stos
stos
mov
inc
push
mov
shrb
pop
test
mov
inc
lret
jl
jp
mov
and
decb
lea
fisubs
add
xor
mov
sti
inc
ret
push
or
mov
fsubl
push
cmp
mov
pop
cmp
in
lock
fildll
iret
push
fcomps
xor
jns
lahf
test
out
adc
test
or
add
mov
loop
inc
ret
fucom
sahf
push
xchg
shll
shrl
not
arpl
out
test
aas
aam
pop
leave
sub
mov
xor
call
pop
jns
cmc
xchg
push
and
xor
data16
div
std
rol
or
push
jbe
into
jl
shl
add
dec
test
out
or
mov
cmp
cmpsb
enter
push
or
xchg
lods
imul
andl
aas
idiv
jmp
sub
dec
or
daa
and
and
cmp
sahf
lahf
jmp
add
jl
je
aaa
mov
xchg
jl
insl
aas
lret
pop
fs
cmpsb
cmp
adc
imul
out
and
test
scas
je
testb
cwtl
adc
lret
arpl
stos
ret
jb
push
ja
xchg
std
xor
sbb
mov
addl
pop
popa
mov
dec
je,pt
sbb
sub
mov
adc
mov
scas
xorb
jmp
popa
out
lret
push
xor
std
cmp
mov
xor
xchg
add
inc
pop
jne
xchg
std
xor
cmp
cld
lcall
mov
jae
roll
mov
iret
fisubrs
pop
dec
xor
das
xor
jnp
xchg
adc
lcall
lret
pop
adc
sbb
mov
pop
inc
lock
pop
jae
inc
jo
in
stos
sub
in
xorb
or
push
xorl
jae
daa
int
ja
fiaddl
mov
movsl
ret
mov
jne
jg
pop
xchg
into
push
pop
xchg
cmp
and
addr16
incb
ja
sub
xchg
adc
fwait
xchg
das
inc
add
inc
mov
mov
gs
iret
imul
mov
add
xlat
out
sarl
xor
jle
icebp
sbb
and
and
das
mov
cmp
cmpsl
mov
mov
clc
jl
jno
cmpsl
cmp
js
or
idivb
inc
or
jae
stos
xchg
popf
loopne
inc
or
cmp
cwtl
cmp
jns
inc
shlb
jg
andl
jno
rcrb
lock
rcrl
aaa
imul
cmp
in
jnp
bnd
add
aam
inc
cmpsl
mov
pushf
xchg
insl
and
add
push
mov
pop
shll
pop
jns
sahf
xor
and
data16
in
pushf
adc
out
mov
mov
lods
inc
int
into
lods
cli
sub
das
mov
mov
adc
popa
daa
mov
lcall
loopne
lea
add
cld
popf
scas
add
sbb
mov
xchg
scas
jbe
jle
sub
jo
mov
mov
lahf
pop
cld
arpl
outsb
or
fidivl
repz
jne
out
sbb
inc
mov
inc
cmpsl
lahf
jne
es
fcmovbe
mov
fcoms
aad
loope
scas
andl
stos
add
mov
push
icebp
or
pushf
inc
lret
jno
adc
jbe
rcrb
xor
push
ret
xlat
loope
cmpsb
pop
xchg
scas
inc
sti
inc
sti
inc
jno
in
ja
sti
and
pop
xchg
mov
out
push
popf
stos
sub
jb
jmp
pushf
dec
cs
pop
inc
ljmp
aas
add
dec
mov
pop
lret
or
push
aas
aam
sbb
outsl
es
xchg
dec
decb
add
out
xlat
pop
std
xor
ljmp
aaa
push
or
ljmp
out
rol
mov
pushf
pop
mov
cs
mov
lahf
xor
dec
leave
enter
mov
pop
cmp
adc
add
and
or
shrl
add
lock
je
aas
test
adc
jne
imul
mov
cwtl
aam
pop
cmp
pop
mov
cli
inc
pop
dec
ja
pop
bound
out
inc
gs
add
add
shlb
fs
in
jge
or
pop
shl
push
fsubl
sbb
outsb
mov
insb
aas
xor
call
xor
loope
sub
imul
hlt
jecxz
dec
and
cmpsl
test
jne
int3
loope
das
xchg
xchg
add
jle
xchg
mov
push
ret
jge
mov
sbb
repnz
adc
ss
inc
and
cs
aad
std
addr16
push
jle
sub
ret
mov
lock
sti
rcl
or
stos
xchg
pop
enter
cmc
dec
pop
and
cmp
jno
mov
cmp
aaa
int
push
iret
or
cmpsb
outsb
cmp
xchg
aaa
fcomp
or
push
sbb
ror
imul
aaa
insb
jns
in
rcr
sbbb
push
inc
out
sub
int3
ret
sbbb
daa
pop
lcall
mov
cmp
jmp
dec
push
xchg
jg
jb
orl
jecxz
push
je
xchg
bnd
pushf
js
lds
fidivl
xor
pop
gs
ljmp
push
push
mov
mov
xchg
int3
adc
xchg
xorl
and
jno
insl
pop
jnp
push
pushf
rcrl
adc
test
mov
daa
sti
jne
insb
popa
mov
lods
xor
mov
pop
push
cmp
adc
and
dec
lods
ds
mov
or
mov
jo
adc
leave
shrb
ret
cmp
pushf
jae
add
add
push
bound
cmp
call
xor
xlat
es
or
xchg
xchg
rol
outsl
icebp
sub
stos
or
bound
inc
push
xor
test
push
mov
jmp
add
out
xlat
clc
push
sbb
cmc
hlt
inc
imul
in
add
jb
pop
sbb
bound
aas
gs
into
add
outsl
xor
sbb
jnp
rclb
jns
adc
dec
cltd
icebp
cmp
mov
jge
imul
scas
jmp
loope
hlt
orl
cmp
sbb
pop
add
sarb
sub
loop
jecxz
sub
sub
out
jle
stc
mov
mov
cmp
mov
and
xor
movsl
lcall
int3
std
adcb
mov
ret
lret
xchg
xchg
dec
mov
pop
mov
sub
mov
pusha
sbb
das
xor
stos
dec
lret
push
loope
sub
or
lret
inc
out
nop
sahf
popa
xor
inc
or
in
cmp
xchg
xchg
loop
pop
cmp
shll
and
mov
inc
inc
mov
cmp
in
jl
fidivl
test
sti
les
loope
enter
push
cmp
mov
cmc
aas
mov
es
inc
int
bswap
jb
cli
ss
dec
into
cmp
arpl
cmpsl
paddd
jb
adc
add
sub
test
push
jmp
jmp
enter
xor
pop
ljmp
imul
mov
iret
clc
out
jle
xor
push
cwtl
pop
dec
imul
loopne
cmp
pop
les
hlt
jb
dec
xor
cmp
lcall
add
nop
outsb
ret
xchg
sbb
inc
xor
orl
jbe
sub
sbb
or
cmpsl
inc
dec
call
jbe
push
fisttpll
mov
push
ss
out
leave
xor
jg
cld
hlt
ja
mov
or
pushf
pop
mov
adc
pop
stc
add
les
adc
jmpw
push
xor
test
lcall
or
cmp
ret
pop
sub
sti
idivb
es
pop
or
out
xor
pop
aam
jecxz
jb
inc
xchg
mov
mov
sahf
cmp
cmp
movb
pop
lcall
add
xor
fcmovnbe
fimuls
pop
lret
mul
inc
test
enter
pusha
inc
push
mov
adc
pop
shlb
add
fld
xchg
jb
jae
repnz
div
sub
inc
cmp
inc
inc
mov
loope
insl
movsb
idivl
js
inc
insb
vpmovswb
jmp
aas
sbb
in
xor
std
das
pop
push
and
xor
jecxz
jl
mov
mov
fisttpl
push
test
pop
inc
xchg
jne
clc
movsl
lea
gs
mov
jecxz
scas
mov
scas
push
sbb
lret
sbb
test
loope
inc
mov
shrb
mov
test
mov
jle
out
push
dec
pop
sub
repz
push
jbe
insb
push
insb
add
or
shr
inc
orb
inc
or
xchg
daa
adc
cmc
and
push
jo
pop
or
nop
jl
clc
daa
or
push
sub
mov
cmpsl
repnz
sbbl
aad
dec
sub
repnz
inc
push
divb
lcall
gs
adc
imul
sarb
sar
push
pop
push
test
lcall
in
pusha
mov
and
xor
sub
int
mov
test
or
arpl
clc
es
sbb
and
xchg
adc
sahf
out
lahf
out
pop
xchg
sbb
stos
or
or
mov
mov
pop
movsl
mov
out
out
repnz
scas
sbb
lods
ficoml
mov
cmp
jl
repnz
js
pop
stc
shl
icebp
jo
incb
push
xor
imul
call
sub
out
jb
push
jno
stos
sub
and
mov
cltd
adc
pop
xor
lds
das
lahf
xor
aas
into
push
test
pushf
mov
andb
aas
imul
inc
jl
call
cwtl
int
xchg
cmpsb
inc
mov
gs
push
adc
cmp
into
push
dec
outsb
sub
and
sub
sbb
xchg
lret
dec
subl
adc
or
int
dec
lret
mov
push
and
push
xchg
loop
in
cmpsl
xchg
cmp
fwait
jmp
sti
push
or
xchg
in
fistpll
addr16
mov
or
jmp
frstor
jo
hlt
enter
dec
insb
inc
subl
mov
pop
std
sti
movsl
lret
pop
sbbb
xor
out
into
jge
jmp
into
into
mov
imul
and
mov
out
std
or
outsl
subb
test
sarl
out
clc
hlt
sbb
jp
cmpsl
dec
ljmp
mov
cwtl
jnp
stos
pop
punpcklbw
test
loope
lea
jg
divl
test
arpl
clc
sub
out
adc
gs
jbe
pop
jae
push
jno
mov
sbb
rdtsc
and
push
loop
or
lea
stc
pop
push
jecxz
pushf
xchg
mov
mov
dec
lret
xchg
push
push
test
lea
jbe
mov
mov
lock
mov
mov
call
inc
bound
pushl
gs
cmp
bound
jo
jno
jnp
push
lret
aaa
add
push
sub
add
push
cmp
lret
pop
push
cmpb
jb
and
dec
data16
fisubs
stos
out
mov
sub
popa
add
jmp
or
rcr
scas
xchg
sub
scas
je
mov
dec
mov
test
xor
inc
scas
xor
popa
sahf
dec
icebp
in
scas
lret
outsl
xor
inc
mov
push
mov
cld
pop
shll
bnd
add
sub
insb
ja
lods
pop
adc
stos
out
cli
jmp
je
sub
imul
lods
cmp
pop
inc
xor
jb
push
lret
mov
mov
mov
adc
push
inc
ljmp
stos
mov
aad
jae
inc
mov
aad
outsl
pusha
popl
je
test
mov
pushaw
push
jns
cmpsl
push
pop
jo
lds
imul
xchg
lods
push
mov
cmpb
sub
repz
hlt
loope
sti
dec
rorl
push
ret
leave
fisttpl
push
mov
iret
mov
or
cmp
in
or
ds
jge,pt
sbb
fcomp
lock
xchg
or
xchg
add
scas
decl
insb
xchg
push
push
repz
call
add
lea
fildl
push
jne
mov
jno
subl
push
sbb
in
sbb
xchg
std
add
mov
push
bnd
dec
in
ljmp
ja
sub
mov
mov
addl
mov
jge
mov
inc
jae
cmp
stos
cmp
xor
mov
push
subb
rcrl
mov
mov
ds
sbb
pop
xchg
aam
cmpsl
cmp
movsl
out
mov
push
popf
or
cltd
dec
scas
fsubs
mov
in
mov
adc
inc
jno
jl
sub
cltd
add
rcl
movsb
dec
pop
or
jbe
adc
in
adc
inc
adc
lret
pusha
mov
mov
repnz
dec
and
lret
leave
adc
rcr
push
inc
test
flds
jno
xlat
fistpl
ja
jge
jp
hlt
sbb
ja
mov
inc
inc
outsb
push
pop
ficompl
int3
adc
mov
xrelease
testl
ja
pop
fisubrs
dec
jne
pop
sarb
lret
ljmp
mov
hlt
enter
cmp
nop
jb
int3
loopne
mov
push
outsl
or
jae
addb
divb
add
inc
push
sbbb
jae
gs
inc
in
testl
jne
and
xchg
xor
popa
inc
jg
add
jno
push
sub
mov
rcrl
call
lock
out
and
fcmovb
xchg
dec
cmpsl
add
mov
mov
mov
mov
sub
adc
mov
cs
inc
lea
mov
sarb
push
jmp
clc
mov
shlb
inc
ss
xchg
mov
test
jo
mov
addr16
ds
sbb
mov
push
sahf
imul
shrb
pmullw
sub
pop
cmp
add
cli
popa
jge
mov
iret
mov
sub
xor
or
inc
fmuls
fnstcw
dec
stos
xor
leave
movsb
test
fimull
mov
adc
repz
inc
nop
xor
cmpsb
jae
lahf
ss
xor
iret
and
ja
sbb
jmp
sbb
loop
push
popf
xlat
adc
dec
outsl
in
jmp
xor
jecxz
sbb
lahf
mov
push
mov
inc
fbstp
add
lahf
outsb
xor
cmpl
sahf
add
jp
push
dec
fsubrp
jmp
lock
mov
popf
ror
addl
addr16
push
ljmp
jb
shl
mov
idivb
int3
pop
pop
addr16
xor
call
cmp
adc
shll
push
xchg
xchg
xor
mov
pop
or
pop
sbb
dec
pop
inc
pop
ret
out
jmp
pop
pop
inc
mov
insb
imul
xor
repz
xchg
push
out
daa
mov
decb
gs
pop
push
pop
inc
cli
imul
int
iret
jl
aad
add
frstor
icebp
adc
cmpsl
jbe
outsb
dec
push
xlat
test
or
insb
adc
cmp
test
lret
xor
sub
dec
sub
lods
add
jp
add
and
lret
je
or
das
jno
mov
push
lret
aam
shrl
mov
cmpsl
pop
push
mov
cmp
addr16
fs
mov
into
pop
mov
xor
xchg
mov
inc
mov
inc
scas
sub
dec
mov
scas
jecxz
aaa
adcl
fiaddl
push
ljmp
add
adc
pushf
cwtl
xorl
dec
test
in
dec
xor
mov
rcll
outsl
lods
addl
fisubl
shrl
orb
repnz
adc
outsb
add
inc
xchg
js
jae
push
mov
pop
rclb
pusha
mov
cmc
sbb
arpl
inc
adc
xor
addr16
xchg
add
sahf
fildll
pop
mov
insb
sub
cmpsb
in
fsubrl
push
int
pusha
popf
fstps
scas
scas
cmp
fsubs
out
in
jae
sub
jns
clc
xchg
or
jge
jl
sub
xor
pop
loop
inc
aad
lock
cmp
inc
aaa
out
lret
mov
push
lret
jg
fwait
scas
fcompl
outsl
clc
xchg
das
leave
add
mov
mov
jb
sbb
mov
inc
jno
sbb
incb
pusha
push
cld
jb
call
int
mov
std
movl
or
fmuls
mov
and
loop
jmp
out
xrelease
jb
mov
xor
mov
stc
jae
xchg
je
or
data16
cltd
push
stos
xor
mov
pop
pop
sbb
xchg
repnz
cli
repnz
mov
add
outsb
fnstcw
push
repz
cld
test
movb
enter
jg
mov
lahf
outsb
nop
icebp
lock
cld
sbb
dec
insl
cmpsl
or
aam
mov
mov
ja
and
xchg
adc
pop
adc
movl
cmp
enter
pop
inc
or
xor
add
mov
jmp
movsb
aas
pop
test
fidivs
adc
xor
mov
jmp
popf
jnp
or
inc
mov
jno
sbb
xor
push
cwtl
outsl
dec
sahf
ja
jbe
jno
jle
mov
js
inc
jecxz
js
roll
js
insl
push
push
fsubl
repz
or
movsb
jle
pop
bts
push
ret
push
and
test
insl
and
in
fldenv
orl
scas
push
mov
roll
dec
jle
push
movsb
cmp
sub
pop
das
pusha
pop
fisubrl
les
xor
fwait
xchg
mov
sub
dec
nop
mov
mov
popa
loope
mov
mov
sti
movsb
mov
icebp
sub
loopne
xorb
insb
mov
adc
sbb
leave
mov
nop
dec
les
push
cwtl
jbe
iret
and
inc
out
sub
xchg
push
adc
adcl
outsl
sbb
mov
xchg
lods
addr16
cltd
mov
cwtl
xor
cmc
push
leave
mov
in
pop
cmp
aaa
div
data16
out
mov
je
or
test
push
pop
and
push
scas
mov
xor
loope
pusha
xor
leave
push
loop
mov
jle
adc
sub
popf
stos
cs
insb
or
push
inc
jp
dec
and
out
loope
mov
es
stos
push
push
notl
dec
xchg
add
rcll
inc
mov
fsts
addr16
aaa
push
adc
out
mov
mov
cli
pop
and
jg
in
loope
lods
cli
xor
in
nop
push
ja
mov
popf
mov
add
sub
imul
mov
pop
push
roll
pop
ret
mov
shlb
jecxz
insb
and
aad
pop
xchg
sbb
cmp
fsts
push
or
cmp
mov
int
mov
jne
jle
fwait
xchg
dec
enter
dec
jle
inc
pusha
shrb
ds
sbbl
pushf
mov
popa
call
lret
ret
jl
push
cmc
ret
cmp
mov
fistl
fsubrl
xchg
rorl
stc
sbb
mov
and
push
inc
bound
cmpsb
dec
dec
sub
fcoms
adc
dec
or
jmp
adc
cmc
lret
mov
mov
cwtl
shl
in
fistpll
out
fidivrl
and
sarl
icebp
sub
test
sti
nop
test
jg
xchg
cmp
inc
mov
or
or
outsl
stos
out
dec
loop
das
std
sbb
push
fistl
cs
outsl
dec
xchg
mov
insl
sub
mov
cmp
cmc
jne
mov
xor
or
inc
pop
adc
lret
xchg
sub
lcall
adc
les
inc
push
test
and
add
mov
xchg
fstl
es
aaa
xchg
stc
mov
cmp
les
fsubrs
stos
xchg
std
mov
add
mov
sub
icebp
inc
sahf
int
xchg
movsb
add
arpl
lods
clc
mov
out
loope
sub
js,pt
ret
outsb
dec
cmp
dec
insl
jecxz
add
lods
fsubl
pop
out
leave
loopne
loopne
mov
pop
aaa
fcompl
mov
jno
mov
mov
stos
clc
mov
pop
sub
xlat
cmp
push
mov
xchg
pop
movsl
out
sub
jb
loopne
loope
inc
cmp
repz
mov
mov
aad
movb
mov
repz
mov
into
lahf
adc
push
ljmp
fs
pop
cs
add
imul
ret
inc
or
adc
aaa
ffreep
stos
lret
repz
sub
int3
arpl
push
push
daa
shl
dec
int
movsb
imul
push
xchg
and
call
xlat
fstl
aas
push
or
insb
test
cmp
lock
mov
jmp
pop
in
repnz
rorl
test
jnp
and
js
insb
sub
xchg
cmp
xchg
jle
push
shr
iret
xor
fistl
push
add
arpl
push
lds
outsl
fldcw
movl
dec
mov
pop
clc
jl,pn
aaa
add
cmp
cmpsb
cmp
and
xor
orl
lods
xchg
jnp
cmp
jo
pop
xor
jae
popf
xchg
push
enter
gs
sbb
fists
jecxz
data16
outsl
test
cmp
imul
adc
mov
nop
dec
inc
sbb
jb
leave
push
lds
pop
repz
inc
xor
lcall
or
push
cli
fsubl
push
int
dec
sub
inc
jno
and
mov
xchg
les
gs
ret
int
jg
in
inc
jbe
xor
in
and
out
mov
rorl
insl
fs
mov
mov
inc
lock
xchg
mov
pop
mov
mov
les
mov
pop
mov
pop
stos
push
pop
mov
cmp
loop
test
lcall
pushl
fwait
and
and
mov
je
hlt
and
push
pop
push
in
jmp
add
dec
in
and
jg
mov
cmp
inc
dec
cmp
sub
test
pop
ljmp
imul
lock
cmpb
push
mov
push
push
fstl
filds
xor
mov
imul
mov
pop
sub
sub
cmp
mov
and
ret
xchg
out
cmpsb
jge
push
mov
inc
das
push
push
inc
shlb
es
shll
sahf
movsb
push
cld
jle
arpl
mov
add
mov
cli
inc
movsb
lcall
and
adc
orb
bound
int3
add
jno
mov
arpl
movl
pop
or
mov
jmp
and
imul
movsb
insl
mov
adc
cmp
pop
mov
dec
popa
fistps
lods
repz
fwait
xchg
xor
pop
jne
les
in
das
lods
and
pop
cmc
loope
lods
xor
mov
inc
cli
scas
lret
adc
dec
cld
fdivr
clc
inc
xlat
roll
dec
mov
adc
and
stos
jno
sub
mov
adcb
stos
sbbl
ja
pop
add
int
or
jne
dec
out
negb
out
loop
mov
ss
loope
cld
push
xchg
sarl
cs
dec
sub
cmp
imul
mov
mov
cmp
jp
inc
shlb
clc
and
and
fs
lods
push
mov
xchg
lds
mov
or
rcrb
cmp
lods
cmpsb
push
call
je
push
cmp
incb
push
loope
cs
lods
shll
mov
push
pop
loope
mov
adc
push
imul
jnp
push
aaa
adcl
imul
les
aaa
clc
pop
dec
int
shll
push
pop
stos
and
dec
lods
mov
sub
or
fwait
in
ss
mov
pop
inc
popa
insb
push
clc
div
mov
sbb
inc
sbb
call
push
call
lods
rorl
lcall
daa
sahf
sarb
jle
sbb
fisubrl
jle
pop
mov
mov
mov
sub
dec
adc
inc
popa
shlb
mov
xor
inc
inc
xor
inc
call
cld
in
push
arpl
dec
cmc
test
xor
adc
sub
mov
aaa
fs
iret
clc
mov
movsl
aad
cmc
inc
dec
popa
fwait
jne
mov
cwtl
mov
sahf
mov
push
xor
ljmp
fwait
shll
pop
imul
aaa
jp
loop
ss
adc
ss
pop
int3
xchg
mov
mov
dec
lods
mov
shlb
fnstenv
daa
xor
inc
jecxz
xchg
pop
rol
cld
or
ljmp
dec
mov
xchg
cmovb
jg
xchg
in
xor
xor
scas
sti
cmp
inc
jbe
mov
adc
xor
pop
fdivs
arpl
cld
cwtl
test
sbb
and
enter
or
repz
in
cmp
ja
pop
dec
mov
popf
mov
and
scas
pop
hlt
xchg
push
in
and
sub
pop
dec
add
shll
jns
test
inc
cld
jne
push
inc
or
cmp
push
test
popa
loop
test
mov
cs
adc
mov
add
xchg
sbb
in
rcr
aam
and
inc
popa
fnstenv
mov
xor
insb
mov
mov
sbb
enter
or
sbb
adc
push
dec
add
add
cmc
add
sbb
mov
inc
cmpsb
lahf
jp
mov
jne
rclb
or
arpl
sbb
loopne
and
add
mov
jo
dec
cs
int3
xlat
roll
clc
fidivrs
push
mov
mov
movsb
loope
jmp
imul
fs
leave
mov
cmpsl
xorl
inc
ljmp
xchg
push
adc
adc
cmp
jmp
push
lds
in
rolb
push
add
add
pop
clc
push
push
push
mov
fstpl
dec
adc
fdiv
push
cmp
push
sub
mov
ficompl
fs
out
sub
dec
int
mov
test
aaa
sbb
cmp
aaa
or
rcll
mov
or
mov
ret
jbe
sbb
xor
inc
mov
ds
or
insl
push
sub
mov
fldcw
imul
daa
je
je
cwtl
xor
stos
bound
repz
and
inc
jno
sub
push
push
mov
mov
mov
and
jno
std
movsl
in
stos
cld
es
mov
and
jae
jns
fcoms
ret
xchg
aam
dec
out
mov
inc
sub
enter
rol
and
mov
add
imul
sub
incb
stos
xor
pop
push
jnp
or
fmul
mov
shlb
les
jne
std
inc
ja
jnp
push
insb
daa
insl
pop
dec
pop
stos
mov
mov
cltd
dec
jge
jmp
or
mov
cmp
inc
sbb
sbb
pop
xchg
aas
lock
or
pop
sti
out
movsb
cmpsb
cs
scas
push
cmc
pop
mov
push
inc
cmp
fisttps
dec
xor
mov
test
fiadds
push
leave
lret
or
jl
out
loop
sbb
or
es
jecxz
xchg
dec
and
jbe
sbb
fimuls
jno
movsb
mov
bswap
gs
cmc
fcmovb
inc
ret
fcomi
mov
adc
sbb
popf
push
mov
in
in
das
jb
je
and
sti
loope
shl
fnstsw
sarl
sbb
arpl
inc
lahf
imul
push
cld
leave
xchg
xor
dec
shlb
inc
pop
adc
sub
lds
sti
fcomps
mov
movsl
jp
cmp
into
adc
jne
jp
dec
sub
jp
ss
pop
movlps
lahf
movsl
data16
in
jg
adc
xor
xor
aaa
ret
in
ret
pop
lods
and
xchg
outsb
jmp
adcl
add
push
mov
and
jnp
loope
shll
sbb
or
in
pushf
pop
insb
jne
or
add
mov
add
nop
and
repnz
daa
testb
mov
inc
testl
add
gs
out
jp
push
loope
mov
leave
push
dec
mov
movsl
test
pop
ret
pop
icebp
push
mov
cmp
adc
cmc
dec
or
push
icebp
aad
xor
mov
cmc
ficoml
in
fdivrs
mov
add
fwait
ljmp
xor
or
rcll
fmull
out
sbb
incb
jge
fs
lods
roll
or
push
mov
frstor
es
mulb
push
pop
cmp
add
leave
dec
dec
je
add
int
mov
xchg
or
out
cmc
arpl
and
sub
lea
loopne
and
push
clc
call
imul
insb
aaa
in
popa
and
arpl
push
add
out
out
xor
mov
xchg
or
mov
imul
and
loope
xor
mov
fld
xor
in
mov
mov
xor
adc
inc
int
pushf
cli
and
push
jb
jle
cld
jnp
ret
pop
xor
outsl
or
cmp
jns
stos
mov
leave
dec
and
jbe
cld
add
add
push
cmpsb
fstps
into
lret
das
lea
pop
pusha
xchg
lea
or
pop
arpl
pop
out
repnz
mov
push
xlat
clc
loope
pop
cmpsb
cltd
and
mov
add
jo
lea
enter
mov
test
rcr
xchg
xor
push
sbb
pop
mov
jnp
pushf
fs
ret
fistpl
test
lret
inc
ja
repnz
js
sahf
daa
lds
push
adc
jae
cmp
add
mov
pop
dec
insb
pusha
cwtl
daa
xchg
lods
pop
mov
pop
jae
inc
add
mov
popf
lds
pop
pop
and
sub
sbb
mov
orl
fs
sti
mov
jmp
jo
jb
clc
add
mov
repnz
push
adc
out
mov
lods
cmc
push
mov
xchg
sbb
aas
loopne
lret
inc
pusha
daa
and
fistps
pop
push
xchg
inc
mov
enter
test
push
inc
fmull
cli
dec
js
loop
xchg
cmp
ficomps
cmc
testb
data16
and
mov
xor
mov
push
jmp
or
sbb
in
adc
add
mov
ret
or
or
pop
shlb
jns
mov
mov
xchg
push
sbb
dec
sbb
leave
xchg
inc
test
lret
fdivr
mov
sahf
es
mov
add
movlps
cmp
xor
arpl
test
movsl
push
dec
adc
push
cwtl
aad
mov
cmp
out
mov
cltd
les
xor
add
movsl
add
pop
hlt
test
pusha
loopne
pop
adc
mov
cmp
sbbb
loope
cmpsl
aas
loope
inc
mov
in
mov
fistpll
pusha
sti
or
xchg
inc
sbb
mov
outsb
jnp
push
mov
push
mov
mov
xchg
cmp
jns
mov
sbb
outsl
xor
lcall
stc
adc
notb
or
daa
cmpsl
vmptrst
push
mov
and
call
push
aaa
xlat
cmc
and
sbb
sub
add
or
dec
mov
test
xchg
sbb
insl
lea
jg
loopne
les
mov
adc
mov
mov
int3
mov
dec
in
fdivl
xchg
sti
in
add
jns
sub
sub
mov
push
xchg
scas
in
lret
lret
sub
mov
ret
jl
popl
cli
pushf
mov
jl
inc
mov
and
sbb
lds
add
adc
lret
data16
fimuls
lahf
and
cli
adc
push
fildll
xor
sbb
loop
xchg
pop
lret
mov
imul
dec
add
subb
jnp
cs
cmp
mov
mov
movsb
pop
xor
inc
fwait
into
gs
dec
xchg
into
imul
pusha
push
mov
jge
xchg
jmp
xor
dec
adc
xor
dec
test
out
lahf
xor
movsl
scas
sbb
xor
or
mov
subl
mov
scas
rcl
mov
jg
push
je
adc
shll
push
fcom
repz
gs
out
mov
xlat
rol
adc
mov
fbstp
add
call
and
clc
lret
inc
adc
jae
hlt
insb
pop
pop
cmp
jle
pop
mov
ss
repz
xor
adc
mov
mov
jmp
cwtl
das
shll
and
mov
das
adcb
or
les
inc
add
lret
push
jmp
xchg
inc
or
imul
or
push
jle
and
push
imul
ss
xchg
mov
flds
push
push
pop
mov
pop
dec
mov
cmpsl
push
inc
mov
mov
sahf
out
push
sbb
daa
jle
out
lock
push
cs
or
add
and
pop
xchg
sarb
js
outsl
rorl
arpl
jo
add
inc
xchg
sbb
mov
xchg
outsl
xchg
pusha
pop
adc
test
cmovle
xchg
psubd
pop
xchg
cwtl
or
mov
imul
scas
add
lods
jbe
cld
inc
in
dec
xchg
fs
repz
mov
lea
insl
mov
mov
pushf
aad
cld
les
jno
bound
and
sub
aaa
fidivs
inc
push
mov
idiv
dec
div
dec
mov
mov
push
leave
pop
outsb
sub
dec
outsl
inc
mov
dec
add
cmpsb
jge
xchg
inc
test
in
pop
lods
push
mov
and
mov
jnp
adc
icebp
mov
mov
jecxz
push
pop
std
mov
xlat
aas
mul
repnz
aad
mov
into
pop
loopne
sbb
pop
fidivl
sbb
push
sbb
push
aaa
pop
mov
addb
mov
test
lods
lret
test
inc
jns
imul
rcrb
xchg
pop
xor
fisubrl
ljmp
jne
sub
mov
inc
test
out
into
xor
mov
test
push
jmp
mov
rorl
mov
cmp
mov
dec
mov
addr16
adc
nop
popa
pop
lret
movsl
inc
in
inc
sub
movsb
mov
mov
in
test
in
xchg
jp
stos
inc
das
jecxz
scas
push
jnp
xor
mov
xchg
push
cmp
dec
add
dec
ja
inc
stc
sbb
popf
pop
jle
adc
stos
aad
dec
cmc
xchg
xor
xor
add
fcmovnbe
add
mov
je
repz
aad
ss
pop
fstpt
ljmp
daa
divb
ljmp
mov
ss
mov
test
inc
jle
xor
push
xchg
scas
ret
adc
sbb
push
jns
mov
je
cli
mov
xchg
out
adc
add
insl
pushf
scas
fbld
sub
and
ficoms
test
cmc
jl
pop
fdivs
std
movsl
and
cmpsl
jae
sub
adc
mov
ds
cwtl
in
mov
cmpsb
push
cmp
repnz
shlb
mov
inc
adc
cld
lea
addr16
jl
scas
push
mov
xchg
mov
mov
and
outsl
ret
outsl
repnz
mov
test
out
push
mov
mov
dec
xor
ds
mov
notb
add
out
sbb
push
mov
andb
xor
fistl
dec
mov
bound
lock
mov
sti
sarl
and
dec
xchg
mov
inc
push
dec
lock
and
adc
lds
lea
call
aam
pushf
xchg
ffreep
inc
ds
xchg
sbbb
out
xor
sbb
mov
shll
pop
cwtl
and
enter
mov
loopne
lods
jl
jge
mov
pop
push
jae
pop
rcll
test
xchg
push
fsubrs
xor
pop
jg
popa
lds
xor
jl
inc
test
lret
lret
mov
pop
lds
out
xchg
and
and
imul
out
and
add
ljmp
inc
test
imul
outsl
jmp
inc
ljmp
out
icebp
mov
lcall
pop
sub
and
popa
pcmpgtw
inc
test
xchg
orl
jecxz
adc
xor
pop
push
mov
cmc
imul
ret
push
inc
xor
mov
cwtl
dec
in
mov
xlat
mov
push
push
xor
adc
pushl
push
or
in
fadds
lods
dec
les
dec
jae
lock
adc
hlt
rorl
popf
sbb
lods
test
sub
mov
fldenv
jne
xor
inc
xor
sub
mov
mov
xchg
nop
mov
stos
mov
test
popf
ret
dec
iret
fcomps
add
or
lds
mov
mov
push
mov
mov
jne
cld
dec
mov
stos
mov
push
mov
mov
mov
stos
addr16
jmp
or
shll
loop
popa
int3
xor
scas
loopne
imul
test
mov
jb
xor
popf
sbbb
push
pop
mov
mov
adc
xor
into
arpl
rclb
push
add
aaa
jge
scas
cli
and
mov
inc
jno
popf
loop
add
push
loop
movsb
fisttpll
dec
dec
out
lds
xchg
pushf
sub
aas
ror
arpl
icebp
jg
fwait
pop
xchg
fsubl
jmp
push
pop
cmc
mov
out
mov
cld
test
out
add
push
std
sbb
cltd
inc
cmp
xchg
and
mov
dec
fadds
push
mov
clc
jl
adc
dec
sti
xchg
das
test
add
jae
fisubs
sti
stc
sarb
jb
jbe
mov
pop
movsb
dec
push
mov
add
out
add
or
cmp
in
push
mov
ret
cli
int
mov
xchg
sbb
dec
hlt
lahf
test
mov
add
or
jmpw
jb
lds
add
xchg
call
pop
push
mov
jns
out
out
push
or
leavew
jb
std
jnp
mov
mov
test
rorl
nop
gs
inc
mov
jp
mov
dec
add
movsl
mov
stc
jno
in
cli
out
rorb
movsl
and
cwtl
cmp
mov
cwtl
ret
lds
dec
pop
push
push
pop
xor
sub
sbb
adc
outsl
int3
add
sub
fidivl
aad
fstpl
pop
mov
add
repz
cmpsl
and
daa
ret
es
and
hlt
sub
dec
stc
push
push
push
jp
jecxz
movsl
scas
dec
dec
xor
xchg
adc
and
or
pop
sar
xchg
pop
loop
mov
xchg
dec
jle
mov
dec
inc
xor
in
js
cmpsb
fisttps
sbb
inc
jo
in
imul
test
or
hlt
shlb
mov
ja
sub
push
push
dec
jb
jnp
nop
ja
mov
jg
sub
mov
xchg
cmpsl
and
popf
lock
inc
dec
clc
test
push
pop
xchg
lods
lcall
xlat
sbb
int3
jb
iret
insb
ss
cmp
mov
dec
out
lahf
pushf
imul
mov
sub
es
lods
sub
sbb
xor
jno
lcall
xchg
sti
pop
add
cmpsl
imul
roll
and
mov
xor
cmc
test
ljmp
icebp
roll
mov
and
gs
lret
inc
push
cmp
pop
cmc
in
sub
mov
out
roll
cmpsl
xchg
xchg
mov
sub
mov
pop
jo
lods
adc
out
sbb
out
fsubl
gs
sahf
sbb
mov
or
sarl
inc
sub
lods
and
orl
add
cmc
adc
repz
xlat
sub
data16
pop
insl
cmp
xlat
das
sti
stos
mov
mov
add
jb
fwait
into
push
mov
mov
lock
lock
cmp
add
das
pop
push
aad
jle
or
cmp
mov
pop
test
xchg
scas
sbb
inc
push
xchg
add
jns
xchg
sub
sub
mov
popa
cmc
add
sahf
mov
lods
dec
add
xor
test
ffreep
shrb
and
push
ljmp
nop
dec
sub
into
loope
dec
inc
and
mov
mov
out
fnstenv
jecxz
or
xor
cmp
cli
arpl
sub
fnstenv
mov
xchg
fwait
cmc
call
xor
outsb
or
mov
dec
mov
ljmp
pop
sub
adc
call
cmp
sbb
mov
mov
ja
xchg
mov
into
sbb
sub
js
adcl
dec
les
je
push
insb
mov
shl
jl
ret
lret
sbb
rclb
fistpll
or
loopne
lret
mov
mov
js
cmp
inc
adc
and
push
pushf
in
into
clc
pop
cwtl
int3
mov
jno
pop
adc
add
xor
xchg
xchg
sbb
and
lahf
push
insb
and
xor
lcall
imul
sbb
stos
pop
lret
add
adc
sbb
xor
aad
mov
cmpsb
adcl
inc
gs
cmpb
out
xor
shl
lahf
orl
test
loopne
iret
outsl
mov
pop
ja
or
scas
sahf
flds
sub
pop
jno
mov
insb
in
loopne
ret
jle
push
rcrb
outsl
arpl
add
dec
pop
pop
xor
pop
mov
mov
push
insb
inc
and
pop
mov
shl
daa
ja
stos
and
test
in
addr16
and
sbb
push
dec
pxor
inc
dec
pop
fdivl
xorb
xor
cltd
orl
inc
xchg
lret
in
les
xchg
imul
into
lock
mov
shl
xor
lret
mov
xor
lret
dec
mov
test
mov
or
movsl
inc
lcall
movsl
cmp
sub
pop
ffree
in
pushf
enter
popf
jne
in
sbb
adc
fisubrl
mov
push
or
sahf
xor
in
idiv
inc
test
mov
leave
testl
daa
xor
inc
daa
scas
pop
inc
sti
or
cmp
das
ret
ds
ret
test
or
je
mov
fidivs
and
imul
call
push
fisttpll
insl
push
xchg
jl
subb
sbb
arpl
mov
rorb
addb
ds
out
pop
fucom
add
mov
cli
push
daa
xchg
or
adc
pop
xlat
and
cmpsb
call
cmp
and
cmp
cmp
or
xchg
cmp
xchg
sbb
dec
gs
push
dec
mov
xor
cmp
jns
adc
jp
mov
repnz
lea
mov
addr16
lods
or
inc
adc
adc
les
out
into
daa
lcall
daa
inc
ficompl
jns
addl
jno
gs
mov
nop
cmp
add
mov
lret
cmp
jne
aaa
fldenv
push
iret
imul
mov
fldenv
lea
loopne
ret
add
enter
adc
cmp
xchg
fdivs
in
inc
stc
jns
cltd
gs
lea
dec
pushf
mov
inc
and
add
flds
mov
subb
or
cmc
jbe
dec
mov
xchg
fnstsw
mov
out
cmp
into
mov
mov
xor
sbb
ss
std
mov
adcb
or
add
dec
cmp
adc
imul
enter
out
pop
push
aas
add
xchg
fmuls
push
jmp
ljmp
mov
adc
scas
dec
das
jmp
int
sti
mov
enter
xor
inc
mov
cmp
jnp
mov
sbb
addr16
ret
pusha
dec
add
fidivrl
dec
sbb
dec
dec
mov
test
in
jl
ja
mov
xchg
addr16
sarb
sbb
mov
push
or
mov
sub
jl
push
cmp
ret
int
ret
mov
adc
mov
icebp
ret
out
and
fsubrs
sub
push
and
outsl
jb
push
inc
xor
ja
or
fwait
xlat
lea
ret
add
fidivrl
dec
mul
test
xchg
iret
lds
lahf
dec
mov
push
adc
fwait
loope
ficompl
push
fwait
cmpsb
imul
shl
pusha
and
dec
int
mov
xor
leave
and
cmp
mov
add
in
fchs
data16
les
out
in
adc
inc
cs
dec
test
and
ss
in
add
sub
lahf
push
cmp
cmp
push
outsb
imul
rorl
xor
into
lock
js
jae
mov
mov
pop
mov
push
dec
pop
cwtl
mov
iret
push
leave
add
lret
xchg
outsl
sub
mov
out
jb
dec
popa
xor
lods
xor
scas
or
insb
test
movsl
ret
mov
cs
sarb
addr16
out
xor
or
cmpsl
xchg
xchg
xor
or
std
imul
add
je
inc
mov
stos
jno
mov
add
hlt
add
mov
faddl
int
sbb
xor
sbb
mov
fucomip
sbb
ret
and
ja
adc
xchg
cmp
pop
dec
mov
sbb
xchg
aam
out
pop
add
int3
inc
icebp
jb
push
subb
out
lret
adc
push
stc
dec
cmp
xor
mov
call
mov
jge
xchg
mov
repz
xchg
push
mov
adc
adc
sbb
fdivl
insb
loopne
or
pop
inc
dec
pop
out
arpl
or
cmp
insb
pop
ret
das
pop
in
sbb
xor
push
pop
loope
dec
push
shr
or
adc
shll
xor
sahf
xchg
lock
jp
loopne
nop
sub
push
sbb
adcb
in
mov
imul
ret
fdecstp
mov
adc
rorb
jo
push
loopne,pn
lods
movaps
ret
push
jne
pop
lock
lret
push
mov
cmpsl
push
sub
inc
or
sahf
sti
int3
mov
dec
inc
mov
pop
inc
cmp
push
inc
pop
fildl
add
pop
xchg
mov
cmpsl
adc
jne
push
pop
xor
cltd
dec
outsb
lcall
cmp
sbb
fdivrs
mov
pusha
fwait
movsl
cmp
pop
into
or
xchg
dec
push
mov
add
mov
loope
out
lods
je
leave
shll
fs
ljmp
stc
push
dec
lret
clc
mov
push
push
inc
mov
icebp
xor
dec
mov
add
outsl
mov
pop
pop
out
clc
scas
xor
addr16
stc
loop
aad
rolb
pop
push
push
ds
xor
lock
aaa
sub
dec
fcoml
sbb
dec
psubusb
clc
lret
xchg
push
cld
add
rclb
and
or
pop
mov
pop
and
or
xor
xlat
push
mov
mov
int
rclw
adcb
push
xchg
jmp
es
xchg
ljmp
out
aaa
popa
add
cmp
add
mov
sbb
sub
jns
or
mov
movsl
mov
sbb
inc
pop
push
mov
pop
out
push
or
dec
pushf
adc
cwtl
xchg
cltd
adc
lea
lds
add
add
pop
mov
xchg
xchg
jecxz,pt
inc
push
in
and
jnp
dec
pop
push
xchg
push
lcall
test
push
aam
rcr
call
aad
lea
mov
call
sbb
test
jp
jnp
int
aaa
rcrl
mov
ljmp
aad
xchg
iret
pop
psrad
mov
dec
into
psrlw
xor
fmuls
sub
inc
negb
adc
repz
and
outsb
xor
lods
or
jbe
xchg
mov
inc
cwtl
jmp
jns
nop
lcall
xor
mov
mov
fisttps
add
add
lock
clc
mov
mov
push
xorl
dec
imul
shrl
jecxz
jge
aad
push
mov
dec
pop
mov
scas
addr16
int
out
cmp
sarl
rcr
cmp
sub
push
sti
inc
mov
ss
cmc
lret
jl
xchg
mov
aaa
test
xchg
dec
sub
dec
test
outsb
out
shlb
scas
mov
dec
adc
mov
pop
jecxz
icebp
notl
clc
movsb
and
inc
aad
xor
or
fisubl
lahf
xchg
xchg
popf
pop
cmpsb
fsubrs
sbb
pop
js
jecxz
lods
cmp
insl
rolb
or
cwtl
inc
sub
fs
shr
mov
mov
mov
dec
mov
test
leave
cmp
fdivr
adc
sar
pop
push
mov
inc
loope
je
in
sub
imul
dec
pop
js
dec
sbb
clc
insb
jle
dec
mov
jb
fstpt
iret
leave
rcrb
fidivs
push
addr16
ret
ret
pop
inc
adc
add
es
lods
movsl
mov
es
and
nop
push
sub
jae
stos
xchg
stos
aaa
int
sar
and
repz
das
js
lcall
stos
fs
shrb
daa
stos
xchg
daa
and
scas
aam
sbb
call
mov
repz
cmp
and
scas
sti
cmp
add
dec
cmc
or
inc
mov
jne
mov
pop
inc
sti
push
mov
jecxz
lcall
xchg
lock
sub
les
jecxz
adc
pop
xchg
adcb
or
sbb
push
fistpll
mov
mov
xchg
adc
popf
int3
int
aam
add
je
mov
outsl
out
scas
or
adc
mov
ja
mov
sbb
shlb
inc
sub
incb
cmp
mov
movsl
enter
fcomps
sbb
dec
push
in
mov
jle
or
fcmovbe
sbb
and
push
sbb
cmp
aaa
mov
push
sarb
lock
xor
ds
jle
mov
stc
add
movsl
push
inc
imul
mov
loop
sub
jg
cmp
mov
cmp
dec
fiaddl
ljmp
sarb
xchg
jmp
sbb
push
fdivp
xchg
jnp
push
mov
or
jmp
loopne
mov
jle
sbb
ficoms
fistps
std
sbb
mov
loop
out
out
inc
test
xchg
fisttpll
repnz
lods
xor
jecxz
js
lret
pop
mov
xchg
pushf
fwait
dec
lds
and
adc
bound
adc
in
jno,pn
out
jl
stos
rcr
out
pop
mov
pop
pop
mov
fcoms
lods
js
jg
fcmovnbe
daa
adc
sbb
mov
movsb
sbb
mov
dec
mov
add
jns
adc
adc
mov
movsl
shl
or
leave
or
pusha
sub
cmp
sub
testl
pop
dec
dec
call
add
push
xchg
cmp
cmp
xchg
fnsave
outsl
pop
push
add
repnz
pop
out
incl
inc
mov
xor
xor
pushf
sub
aas
cmpsl
inc
mov
rorb
sbb
mov
lcall
add
sub
repnz
mov
or
loop
mov
adc
push
bound
push
test
and
leave
ja,pn
icebp
xlat
mov
or
arpl
test
les
cld
mov
shrb
push
pusha
push
pop
arpl
gs
nop
xor
cmpsl
les
std
mov
sub
mov
cltd
or
adc
enter
cmc
ss
add
sti
mov
sahf
push
jbe
in
cmp
xchg
popa
testb
sub
dec
or
mov
push
fmuls
loopne
out
jmp
test
mov
adc
adc
repz
xchg
js
and
popa
xchg
jl,pn
mov
adc
fwait
aam
lods
inc
pusha
arpl
jbe
mov
cmp
mov
jle
insb
roll
inc
xor
push
call
or
stc
sahf
fdivs
out
xchg
clc
mov
dec
jecxz
mov
cmp
repnz
repnz
loop
xor
and
pop
sbb
push
add
xchg
xor
ror
inc
mov
aam
ret
stc
adc
ds
mov
mov
fwait
out
popf
sub
jl
pop
out
push
out
push
inc
push
dec
add
insb
cmp
pop
add
and
int
dec
add
nop
je
pusha
mov
ret
fdiv
xor
xchg
ret
xchg
nop
sar
fnstsw
sub
or
dec
sahf
rorb
pop
mov
dec
shlb
mov
jecxz
pop
rcrl
lds
jne
push
movsb
xchg
push
adc
dec
repnz
mov
dec
ss
add
test
je
sti
cmp
and
xlat
dec
jg
and
dec
inc
jns
xchg
sahf
sbbl
jl
jnp
imul
adc
lock
push
mov
cmpsl
lock
mov
leave
inc
mov
mov
push
mov
mull
shlb
cmpl
aaa
inc
repz
es
sbb
lret
scas
dec
xchg
lret
pushl
outsl
in
cld
pop
dec
jb
push
data16
jns
unpckhps
adc
js
xor
mov
aas
pop
push
fisubrs
add
and
lock
imul
add
sbb
cmp
ja
pusha
fidivs
in
push
or
push
sbb
hlt
in
aaa
cmc
cs
push
loop
gs
sti
jb
push
add
push
pop
jb
sahf
push
enter
mov
stc
into
xor
pop
js
mov
in
xchg
xchg
pushf
in
jge
pop
or
outsb
mov
adc
inc
push
lret
clc
sbb
push
pop
inc
test
fdiv
mov
call
pop
daa
dec
mov
and
in
sti
out
fiadds
xor
inc
jg
mov
inc
sub
jecxz
xor
sub
insl
ds
inc
sbb
push
or
or
push
jne
arpl
ret
push
add
sbb
ficomps
shll
xchg
insl
lret
add
inc
popa
inc
mov
into
add
mov
outsl
pop
or
xchg
sub
pusha
scas
nop
and
daa
rorb
mov
sbb
and
mov
jp
repz
xchg
push
pop
outsb
jl
jbe
push
jne
subb
imul
sub
adc
mov
or
pop
imull
shlb
lahf
js
fxtract
cmp
cmc
ret
inc
out
fwait
sbbl
adc
movsb
negl
dec
xor
lret
dec
dec
mov
pusha
mov
or
adc
push
enter
mov
pop
lret
or
inc
dec
cmpsl
mov
mov
test
cwtl
mov
cmp
or
mov
lea
pop
or
adc
lods
pop
mov
or
pop
mov
das
push
or
sub
pushf
push
cmp
jae
mulb
xchg
addl
sub
stos
and
hlt
or
mov
lods
xlat
daa
test
sarb
stc
repz
sbb
push
inc
imul
cltd
iret
clc
in
aaa
add
adc
jo
dec
mov
out
push
dec
aam
xchg
mov
adc
mov
fcompp
fs
mov
bound
repz
jmp
in
push
xor
fcmovnu
cwtl
pop
movsb
adc
xchg
sbb
insb
jae
in
and
mov
dec
push
xchg
cmc
cld
std
adc
or
sarb
popa
inc
pop
sub
pop
dec
adc
and
adc
pop
or
daa
addr16
out
mov
mov
nop
fdivrl
in
ss
out
into
imul
adc
cmp
daa
call
lcall
stc
add
mov
xchg
dec
xor
insl
jnp
mov
popa
sub
xchg
ret
je
shl
cltd
xchg
add
sbbl
pop
testb
xchg
popf
add
ss
les
jle
push
add
pop
sub
push
jl
sbbl
xor
insl
aad
push
insl
jmp
cmpl
pop
daa
test
out
mov
sub
addb
or
xor
data16
sbb
dec
std
inc
fisubl
clc
sti
iret
pop
leave
pushf
or
in
test
pusha
jge
push
mul
adc
js
xchg
out
push
xchg
and
mov
push
or
push
movsl
dec
idivl
leave
in
dec
xchg
push
loopne
popa
scas
lcall
xchg
xchg
stos
int
or
clc
shl
decb
shll
loope
hlt
rorl
sbb
sar
push
and
dec
rclb
outsb
shr
pop
mov
incb
dec
xor
dec
enter
jo
fs
push
cmp
imul
fisubl
inc
stc
mov
cwtl
ret
and
ret
ss
loopne
jno
int
lods
ljmp
pop
ljmp
int
cmp
outsb
and
imul
aaa
fstl
movb
push
shll
cmp
aad
jp
mov
jbe
in
or
repnz
call
xchg
pop
mov
lcall
push
add
jmp
sbb
mov
jnp
inc
int3
sub
or
mov
jle
in
push
hlt
pusha
mov
and
inc
shrl
xchg
pop
sahf
sub
cmp
lret
dec
push
icebp
dec
cmp
or
outsl
sub
insl
lods
and
psubq
jae
cltd
inc
imul
xchg
sub
data16
sbb
sbb
or
pop
cld
mov
mov
inc
mov
xor
mov
or
push
les
mov
mov
in
gs
iret
adc
int
inc
notb
cmp
mov
out
sarl
int3
test
mov
or
adc
mov
aaa
mov
daa
loopne
or
adc
pop
ljmp
iret
xor
and
sbb
fldenv
ret
fildl
add
xor
repz
ljmp
addl
fisubl
cld
add
push
lret
movsb
inc
sbb
xor
hlt
addr16
cmp
out
sub
clc
popf
loopne
stc
dec
iret
pop
aaa
gs
xchg
adc
xor
xchg
ja
sar
es
sbb
in
fldcw
pop
call
imull
adc
inc
jecxz
enter
out
int3
mov
dec
add
lahf
sahf
cltd
mov
pop
rol
push
dec
inc
jns
push
out
fcmovnu
das
rcl
fwait
test
fldl
and
lea
push
movsb
dec
push
jns
lods
inc
or
cs
mov
leave
lahf
inc
sbb
iret
xor
insb
pop
icebp
pusha
ret
mov
repnz
out
fucomi
inc
out
push
lret
dec
push
adc
outsl
daa
nop
les
inc
mov
cmp
xchg
sub
mov
movsl
inc
call
cwtl
xchg
inc
jecxz
pop
and
bound
int
in
or
dec
dec
and
loop
inc
xor
hlt
mov
test
sti
push
loopne
pop
cmc
out
jno
push
or
fsubs
cmp
sub
out
inc
jg
sbb
vmovd
mov
jne
lret
pop
repz
scas
sub
sub
mov
fmul
sarl
imul
repnz
adc
das
xchg
jp
out
push
cltd
scas
mov
rorl
and
xor
xor
in
adc
sub
loopne
int3
cs
add
bound
xchg
lret
dec
inc
hlt
adc
sbb
sub
ret
outsb
push
cmp
movsb
jnp
pop
in
das
cmpsl
jmp
mov
push
out
sbb
jno
add
add
outsb
divb
and
pop
lret
mov
push
xchg
cmp
int3
arpl
push
fwait
pop
and
xchg
nop
push
mov
aam
lcall
imul
add
or
dec
add
dec
jmp
icebp
cmpb
out
cmpsl
in
adc
mov
enter
pop
or
add
cmpsb
lock
jns
inc
or
je
aad
cmpsb
xchg
adc
adc
jl
jo
out
rolb
pop
outsl
inc
hlt
iret
fbstp
sahf
stos
arpl
in
adc
or
and
lahf
and
sub
xchg
jo
das
add
add
and
sub
mov
rcrb
stc
or
movsb
sub
pop
xor
hlt
mov
scas
in
push
pop
shl
faddp
xor
and
push
ss
sbb
push
jmp
loopne
lods
adc
mov
and
cwtl
xlat
in
stos
popa
repnz
insb
popf
xchg
xor
in
and
dec
jp
jmp
sbb
shrl
mov
dec
cwtl
lock
scas
movhps
das
rol
and
aam
sub
or
add
push
jle
es
outsb
pusha
andl
push
cmp
icebp
xor
and
sar
jge
adc
test
lock
test
xchg
in
cmp
push
jne
iret
jns
xor
cmpsb
iret
pop
in
push
lods
push
pushf
push
or
pushf
mov
dec
cmp
je
test
fsubr
mov
lock
mov
or
bound
nop
sti
mov
inc
jg
xor
subl
xor
or
mov
sub
cmpsb
sbb
or
cmpsb
movsl
icebp
arpl
mov
jmp
fcoms
imul
imulb
xchg
jno
mov
pop
mov
sub
or
xchg
sbb
add
scas
movb
cmpb
or
cld
inc
push
jle
movsb
outsb
repnz
test
sahf
jmp
insl
xchg
lret
or
into
mov
loop
std
jo
test
test
lcall
ljmp
repz
fldl2t
pop
xor
test
leave
dec
mov
cwtl
inc
imul
mov
xor
stos
pop
enter
daa
ret
push
mov
gs
daa
push
sbb
cmp
lret
repnz
call
loopne
mov
push
mov
xchg
mov
cltd
fwait
pusha
aad
movsl
addr16
lock
xor
int
int3
mov
sub
jb
int
gs
lahf
cmp
ret
jnp
movsl
popa
nop
sub
js
dec
in
jb
test
inc
adc
xor
pushf
jecxz
rcr
pop
mov
imul
lock
stos
xchg
sbb
lahf
idivl
dec
and
pop
cmp
outsb
rclb
sbb
mov
fwait
add
sub
out
dec
cmp
scas
aad
adc
sbb
aas
inc
nop
sbb
shlb
push
pop
adc
sub
cwtl
movsb
lret
xchg
test
sarb
and
mov
inc
cli
fnsave
loop
sbb
mov
jae
cmp
mov
and
push
es
mov
fprem
pop
and
adc
movsb
sbb
sahf
lods
inc
stc
mov
lret
enter
je
inc
jmp
not
lods
cmpsb
and
mov
in
cli
loope
out
add
pushf
mov
cld
pop
mov
adc
into
dec
movsl
pushf
mov
mov
pop
push
inc
popf
jle
andb
fs
sbb
mov
mov
lods
mov
jmp
loopne
cld
push
fstpl
dec
daa
stos
inc
dec
cli
push
xchg
lea
adc
dec
scas
jae
jg
add
cmc
pop
mov
lds
imul
cmp
outsb
in
and
inc
cwtl
sbb
push
push
pop
sahf
inc
das
mov
add
cmpsb
stos
pushf
fsubrs
mov
shl
jp
jmp
sub
lea
xchg
push
repz
in
or
test
jne
dec
xor
dec
sub
pop
pop
jbe
hlt
jae
icebp
movsb
xor
xor
pusha
lcall
inc
jns
fwait
jb
mov
out
testl
xor
xchg
push
cmp
idiv
ret
scas
rol
xor
cmp
or
enter
out
pop
fsubr
sub
ljmp
push
loop
bound
mov
mov
cmpsl
addr16
push
fucom
jmp
ja
and
cld
mov
fisubrs
and
aas
ss
add
or
dec
faddl
aad
lods
repnz
test
xor
adc
jbe
cwtl
nop
push
sbb
call
push
push
xchg
mov
inc
mov
cltd
outsl
cmpsb
mov
mov
adc
mov
lock
outsb
sahf
repz
mov
cmp
push
popa
pop
insl
shl
push
inc
sbb
cmpsb
insl
adc
popa
push
iret
out
sbb
inc
jecxz
push
dec
mov
popf
int3
dec
pop
sbbl
insl
int
fsubl
incb
dec
out
inc
movsl
push
and
xchg
aaa
into
into
pushf
xor
mov
push
xor
push
mov
fmull
adc
jecxz
mov
mov
mov
or
cmpsb
dec
xor
fmull
aaa
pop
data16
jecxz
mov
imul
out
sbb
lahf
mov
push
repnz
pushf
movsl
bound
sbb
lcall
pop
adc
mov
sbbb
cmc
add
jno
inc
jl
dec
rolb
imull
mov
sahf
pop
jg
and
inc
sub
cltd
or
mov
dec
jo
and
clc
cmpsl
cmp
mov
push
jl
adc
fs
jb
divl
imul
xor
dec
out
popa
mov
dec
enter
mov
dec
jno
leave
stos
sbb
rcrl
xchg
fidivrs
and
inc
inc
jbe
sbb
scas
add
int3
sbb
xchg
in
push
mov
jbe
xchg
push
sub
lea
pop
xchg
das
pop
xlat
scas
dec
mov
arpl
push
inc
mov
inc
sbb
cmpsb
ja
mov
inc
fstpt
insb
jmp
xor
mov
andl
cltd
aad
pusha
cltd
loopne
dec
movsb
insl
jge
xchg
inc
sbb
jne
push
mov
push
mov
mov
dec
xchg
and
mov
push
sbb
mov
adc
mov
mov
test
adc
out
or
cld
fmull
pop
out
xor
cwtl
cmpb
gs
cmp
loopne
filds
cmp
jmp
xor
mov
outsl
scas
and
and
loope
push
xor
push
mov
xchg
inc
mov
shrb
jns
add
pop
fadd
mov
sub
dec
sbb
lahf
pop
xchg
fistpll
jae
scas
insl
mov
mov
cwtl
mov
test
jecxz
dec
inc
xlat
ja
les
shlb
enter
aad
insl
sub
divb
out
sub
jp
sub
in
inc
mov
and
in
in
dec
shrl
jns
dec
pop
stos
addr16
mov
inc
test
dec
lcall
into
add
push
cmp
jo
stos
aad
inc
das
aas
enter
insl
jge
test
cli
jb
clc
fisttpl
mov
les
pop
xlat
gs
jb
dec
fwait
ja
and
pop
push
pushw
insb
pop
fsubp
dec
stos
xor
mov
dec
shlb
popf
je
movsb
push
fistpll
or
mov
sbbb
lahf
fistl
scas
add
lea
popf
adc
pop
aaa
cmp
stc
dec
popf
jae
btr
ja
insl
das
xlat
test
scas
das
and
repnz
add
ret
js
add
mov
adc
rolb
dec
cmp
xchg
decb
mov
dec
adc
ret
mov
sub
cmpsl
pushf
sarl
add
and
pushf
push
xlat
push
pop
add
stos
pop
mov
gs
outsb
ds
test
inc
rol
ffree
push
iret
dec
adc
xchg
mov
dec
mov
or
push
insl
dec
mov
outsb
movl
cmp
mov
jp
es
out
mov
xor
mov
inc
cmpsl
mov
lret
in
rcrb
adc
mov
decb
mov
jmp
xchg
adc
push
sahf
pop
xor
dec
push
in
pop
mov
cmp
into
pushf
pop
adc
ss
cmp
pop
cmp
add
mov
sub
lods
call
and
loopne
push
popa
mov
rcrb
mov
cli
stc
dec
jl
mov
jno
lcall
push
dec
popf
mov
sbb
lock
scas
mov
in
lret
pushf
adcb
cmp
jge
test
clc
mov
sti
adc
xchg
cmp
outsl
pop
xchg
out
sub
jmp
jl
inc
inc
lods
lods
adc
ja
push
add
add
mov
inc
int3
call
adc
mov
mov
jno
inc
push
cmp
rolb
fstpt
pop
inc
jle
cmp
fildll
jg
push
xchg
lods
adc
test
mov
sahf
mov
jg
pop
cmovs
jmp
or
push
cld
mov
outsl
pop
cmpsb
shl
lcall
cwtl
mov
push
inc
movsl
mov
test
jl
aad
popa
mov
mov
cmp
lods
sub
mov
arpl
in
loope
loope
mov
test
pop
aas
out
les
cmp
stc
sti
add
xor
lods
adc
inc
xor
mov
or
daa
clc
or
jl
and
ret
sarb
mov
mov
mov
fists
mov
gs
and
adc
in
xlat
mov
popf
fsub
int3
push
and
cmc
out
dec
jae
fwait
or
mov
sub
mov
and
pop
arpl
lahf
shlb
xchg
inc
sbb
fildll
sahf
fisubrl
popa
inc
imul
pop
or
pop
pop
inc
pusha
sbb
cmp
mov
and
lcall
mov
add
pop
shlb
inc
push
imul
xor
aad
xor
dec
jmp
pop
cmpsl
jmp
or
adc
mov
fdivp
loope
mov
xor
adc
dec
xchg
les
sub
mov
repnz
nop
fists
xor
test
cli
dec
mov
in
std
xchg
outsb
pop
pop
popa
repz
mov
lret
repz
daa
pop
mov
xlat
movsb
mov
stos
dec
push
incl
or
add
pop
xlat
push
rorb
ret
inc
jmp
test
cmc
mov
fnsave
aam
and
adc
sbb
xorb
sbb
addl
xor
cld
fstpl
sbb
ljmp
aad
jmp
add
inc
push
repz
xor
fldenv
icebp
bnd
sahf
jle
or
mov
nop
into
cmpsl
icebp
pop
mov
adc
push
pop
roll
imul
jmp
fcompl
sub
notl
mov
iret
or
or
test
inc
lods
out
inc
mov
lods
arpl
mov
pop
js
dec
mov
cmpsl
icebp
hlt
cmpsb
sub
ret
dec
mov
inc
adc
das
push
cwtl
sub
rol
push
popf
sbb
scas
jmp
mov
fldl
es
add
fstl
scas
adc
in
out
pop
push
sub
inc
inc
adc
test
mov
push
cmp
gs
jbe
dec
and
mov
mov
xchg
es
insl
mov
in
push
dec
xor
pop
adc
in
data16
pop
out
fadds
cmpsl
and
repnz
inc
hlt
insb
mov
sub
jmp
ret
idivl
push
push
pop
out
xchg
ds
pop
les
aam
mov
dec
pop
out
xchg
mov
inc
push
ds
filds
or
cmpsl
inc
test
sbb
cmp
xor
imul
es
and
jmp
cmp
cmp
sub
cmp
dec
imul
lods
cs
gs
ret
mov
mov
xor
sub
pop
push
dec
mov
and
mov
addr16
xor
sbb
lock
or
jmp
inc
push
jae
inc
loop
add
in
or
or
ja
leave
dec
add
mov
xlat
add
cs
inc
sbb
lahf
cmp
cmpsb
aas
push
or
push
repz
std
xchg
stc
fwait
dec
fwait
adc
aad
mov
fstpt
ds
push
jae
out
stos
and
mov
imul
test
out
fistl
xchg
cmp
add
sbb
or
cmp
pop
sbb
adc
adcl
pop
sbb
fs
btc
mov
jmp
fucomip
lods
or
adc
xor
cmp
sbb
outsl
xor
xor
lds
movsb
inc
pusha
dec
icebp
daa
cs
fistpl
scas
aas
sub
cmp
jb,pn
cmp
jns
jle
add
and
or
cltd
int3
ss
xchg
sbb
dec
outsl
push
mov
add
cmpsb
ficompl
sub
mov
arpl
mov
out
jns
pop
jb
fisubrs
js
mov
dec
mov
sbb
dec
and
add
push
rol
or
push
xor
and
xchg
add
adc
xchg
rcrl
mull
pop
pop
push
adc
out
push
int3
mov
cld
dec
mov
jo
repnz
pop
jnp
mov
mov
adc
movsb
sub
xchg
or
push
in
sbb
addr16
cltd
les
lods
inc
inc
pop
sub
fidivrl
or
adcl
fnstcw
fistpll
cmpsl
callw
sbb
sti
je
mov
lods
or
imul
lret
pusha
test
jge
pop
and
push
inc
std
sbb
rclb
shl
jns
test
sub
mov
test
mov
pop
outsb
aam
outsl
cmp
mov
fldt
xchg
cmp
mov
stc
repz
mov
push
sbb
cmc
mov
mov
jns
lcall
adc
adc
fsubrs
cwtl
add
mov
mov
int
xchg
cmp
ret
addr16
lahf
xchg
test
fadds
inc
mov
hlt
hlt
in
sub
jle
sbbb
jbe
test
les
adc
inc
out
fmul
sbb
jl
xchg
xlat
out
inc
movsl
into
mov
cli
test
xor
inc
and
orb
xchg
fildll
aaa
cmp
out
out
movsl
or
cs
scas
cmp
adc
mov
imul
addl
pop
jb
iret
pusha
fsubl
sub
fstpl
and
cld
cmpsb
jl
mov
imul
sbb
pop
into
das
ret
adc
cmp
arpl
xchg
dec
push
addr16
std
test
pop
fisubl
outsl
outsb
sub
push
popf
add
dec
dec
call
shll
cli
pop
or
push
sub
sub
cmp
sub
cmc
cmpsb
or
cmp
jae
add
pop
and
fs
xor
je
cmp
aaa
ds
mov
lods
stc
push
xchg
xchg
clc
xchg
dec
xor
xor
dec
cmp
inc
or
and
lock
mov
push
movsl
mov
lock
push
daa
outsb
repnz
xor
adc
sub
aas
or
aaa
daa
or
loop
mov
sub
pop
xor
add
addr16
inc
inc
pop
mov
jno
out
dec
lcall
add
dec
addr16
mov
inc
adc
insl
addl
mov
dec
fwait
sub
or
jmp
notl
lcall
inc
fwait
rcrl
gs
repz
mov
sbb
std
dec
lock
and
dec
mov
movsl
sub
stc
loope
jne
popl
jge
popf
adc
and
lret
loope
xchg
bound
je
ret
pop
dec
cltd
movsl
add
es
sbb
xor
push
fmul
mov
jg
push
fstp
gs
mov
inc
nop
and
jns
mov
shrl
mov
daa
loope
in
into
shl
ret
into
sub
cmc
mov
mov
lock
dec
jecxz
rol
jnp
or
pop
dec
mov
cmp
in
ds
sub
stos
int
mov
mov
fwait
jb
mul
js
data16
in
cmp
sbb
jg
add
bound
cltd
pop
loope
in
test
out
gs
pusha
lods
sbb
lods
in
lock
loopne
mov
lahf
les
mov
push
inc
in
jno
mov
shl
stc
imul
mov
lret
cmc
mov
inc
rcrl
and
loope
cmp
push
inc
push
inc
inc
jg
and
mov
push
lods
lock
lret
xchg
mov
ds
je
gs
jl
testb
or
dec
stos
stos
add
stc
in
into
add
orl
popf
jno
and
sbb
insb
jno
fsubs
or
rcrl
dec
out
mov
movsb
adc
icebp
iret
mov
pusha
stos
jmp
lds
xchg
mov
lods
sarl
cs
inc
mov
mov
xor
fistl
dec
and
xlat
pop
inc
inc
mov
fiaddl
or
cmp
insl
icebp
data16
std
pushf
out
mov
inc
popa
insl
pop
xor
loope
insl
jg
mov
outsb
sarb
add
xlat
or
adc
sbbb
jns
mov
xor
cld
pushf
push
pop
enter
test
enter
adc
dec
fwait
andl
pop
ljmp
cmp
cmp
sub
xor
and
or
mov
push
mov
imul
adcl
stc
or
cmp
int
into
pushw
cmpsb
repnz
out
sbb
loop
enterw
enter
cs
aas
mov
cli
scas
leave
test
pop
in
xor
adc
jnp
mov
pop
loopne
movb
lds
test
mov
pusha
mov
push
or
sar
out
das
imul
inc
and
push
fcompl
aad
or
cmp
or
sub
push
xor
loope
filds
and
insb
data16
jle
mov
pop
in
push
push
push
rolb
or
dec
jp
pop
push
movzwl
mov
inc
xor
mov
out
sti
sbb
xorl
jno
pop
cmp
cli
xor
rcrb
cmp
adc
lret
lea
mov
mov
push
pop
std
cmpsb
aas
jmp
in
jg
std
and
in
jo
fcmovne
sub
adc
jnp
push
scas
and
mov
inc
icebp
cmp
shrl
cmc
jae
mov
push
aas
push
out
xor
mov
add
clc
inc
sti
push
xchg
clc
loop
jecxz
cmp
pop
sub
jge
adc
or
mov
add
paddq
out
xchg
lods
lock
sub
nop
mov
add
dec
rcl
cltd
sahf
jecxz
mov
add
movsl
push
aad
jne
pop
shll
or
and
inc
test
push
dec
sar
lret
jne
ds
lret
insl
mov
pop
xchg
push
or
fcoms
cli
add
test
pop
lods
mov
mov
add
pop
cltd
loopne
and
cmp
test
inc
nop
pop
inc
test
jne
sbb
dec
bound
in
cmp
imul
jg
or
jnp
shll
mov
outsl
pop
dec
fwait
insl
dec
fcompl
rcl
xchg
nop
imul
pop
scas
xchg
mov
jo
xor
andl
jno
xchg
inc
stos
cmp
scas
cs
stc
hlt
adc
mov
fsubl
testb
xchg
jl
aad
mov
jle
add
lea
ret
sub
cmpsl
fisubl
xchg
xchg
outsb
mov
and
push
in
xchg
inc
and
and
icebp
inc
sahf
and
dec
int3
out
cmp
adc
jbe
jle
dec
ret
sbb
pop
fdivs
in
jmp
fsubs
mov
xorb
inc
cwtl
mov
movsb
mov
shrb
jnp
inc
popa
jne
lds
rcrb
sub
dec
pushf
xlat
sbb
sarb
pop
mov
call
aam
loopne
movsl
daa
cmp
loopne
dec
loope
push
into
sub
lcall
test
int3
shll
mov
dec
lret
add
sub
mov
mov
popa
sti
scas
lock
xorb
mov
clc
sbb
jb
adc
or
pushf
jge
adc
lea
in
insl
or
daa
mov
pop
mov
mov
sub
fs
outsl
mov
test
xchg
scas
xchg
les
int
xchg
ret
mov
xor
dec
pop
sub
pop
xchg
sub
and
jno
inc
and
sub
int3
cld
in
icebp
push
add
mov
nop
fldcw
test
popf
insl
jne
loope
insb
mov
fimull
int
rorl
out
mov
add
add
leave
xchg
mov
mov
fbstp
stos
sub
pop
sahf
and
ret
xor
mov
int
add
or
push
int
mov
dec
jge
push
and
xorl
clc
cmp
jns
xchg
sbb
pop
sbb
xchg
mov
sub
lcall
imul
test
or
sub
mov
cltd
add
fadds
sbb
xchg
jmp
repz
orb
mov
pop
inc
jns
mov
cmp
push
add
cmc
in
jg
sub
mov
aam
aas
push
mov
mov
mov
push
inc
add
imul
pop
or
cmp
fcomps
gs
sub
bound
je
jo
and
stos
push
je
in
inc
mov
test
adc
cld
jmp
stos
mov
outsb
push
imul
fstps
mov
stos
test
fadds
adc
mov
pop
rclb
cmpl
sub
sub
ret
push
lret
int
jl
dec
clc
xor
pop
shll
fmul
lock
lods
pop
add
dec
xor
sbb
lea
xchg
xor
mov
sbb
mov
imul
fildl
rcr
push
andb
pop
cld
fs
sbb
fsubs
mov
push
cld
mov
lods
mov
mov
mov
xorl
push
ja
scas
ljmp
mov
pop
int3
or
jnp
rolb
test
in
sub
jp
test
mov
shrb
int
andl
xor
repnz
ss
xor
repnz
adc
xchg
sti
scas
ret
stos
push
test
pop
pushf
mov
out
in
out
rolb
aad
fsub
enter
mov
xor
leave
cmp
ret
mov
lret
loop
cltd
shll
jo
sub
fwait
mov
xor
sbb
inc
insb
mov
rcrl
cmp
xlat
mov
mov
ss
icebp
add
inc
dec
and
loope
inc
or
movsb
or
jnp
loope
out
insl
jl
mov
fstps
xchg
in
cmp
push
cmp
or
add
xchg
stos
loopne
push
pop
nop
pop
fisubl
es
mov
xor
addb
xor
mov
jae
stc
xchg
jle
cmp
imul
rcrl
loope
outsl
cmp
mov
xor
in
data16
rcr
loope
add
fiaddl
scas
hlt
rcll
sub
xchg
outsl
fsubrl
xor
push
clc
push
jecxz
xlat
jl
scas
aaa
ret
fldcw
sub
shll
cmp
clc
iret
inc
or
int
aam
je
in
sbb
jb
push
or
std
fildl
mov
jnp
ret
xor
jmp
push
mov
jns
sbb
test
jno
pop
jo
negl
jns
call
aad
sti
mov
test
imul
cmp
pop
cld
pop
out
nop
cmp
mov
mov
lahf
mul
aam
pushf
cmp
lea
fwait
xchg
jbe
sbb
adc
mov
sbb
cmp
mov
or
test
jl
mov
int3
mov
sbb
dec
loopne
xchg
pop
add
repz
cmp
cmp
inc
sbb
pop
inc
div
pop
imul
das
cltd
dec
mov
dec
inc
outsl
jl
pop
fnsave
mov
pop
mov
push
int
dec
adc
cmp
div
jnp
mov
sti
sub
mov
mov
sub
pop
mov
add
mov
clc
mov
xchg
movsl
cmpsl
rcrl
dec
mov
mov
rorl
iret
mov
sbb
iret
mov
imul
jg
ret
rcl
imul
and
push
xchg
ja
cmpsb
fisttps
cs
nop
les
shrb
push
add
cmp
mov
gs
cmp
out
sbb
mov
movsb
fwait
jo
cmpsb
stos
cmp
lret
or
jle
out
out
inc
jnp
negb
out
call
xor
insl
lahf
jns
dec
shll
add
mov
jge
addr16
popf
into
pushf
lcall
pop
jge
push
cmpsb
mov
insl
subb
int
jge
push
vfrczss
popa
mov
dec
or
nop
sbb
dec
lods
dec
stos
ret
outsb
jmp
sti
mov
sub
ja
in
sub
pop
mov
loope
dec
ss
mov
scas
bnd
xchg
push
daa
test
push
mov
push
pop
pop
fdivp
adc
mov
pop
adc
int3
pushf
xchg
roll
adc
xor
sub
stos
hlt
push
dec
je
fdivp
cmp
test
fwait
outsl
iret
test
out
push
sbb
mov
into
movsb
jecxz
cli
cmp
imul
fidivs
fstps
pop
mov
xchg
push
test
sub
je
xor
loopne
and
mov
push
shll
out
and
add
mov
sti
dec
clc
mov
push
icebp
stos
imul
call
je
andb
jb
sahf
out
mov
jbe
push
mov
imul
stos
push
bound
imul
jmp
incb
cmc
in
lahf
cmp
addr16
add
in
add
call
test
sbb
stos
sbb
jns
pusha
sbbl
ficomps
mov
push
fimull
jnp
xchg
fcomip
fisubrs
sbb
ss
stos
mov
cmpsb
lcall
loope
jbe
stos
fsubrl
mulb
cld
dec
mov
adc
bound
inc
xor
xor
test
or
movsl
bound
mov
and
mov
incb
pop
lds
std
aam
jle
in
js
hlt
push
xchg
inc
fnstsw
mov
pop
stc
fbld
fisttpl
out
mov
jae
push
fs
add
mov
xchg
leave
cltd
jg
push
scas
pop
ljmp
sahf
out
dec
inc
pushf
in
jb
jns
adc
lock
or
and
push
stos
popa
lock
push
xor
fcoms
pusha
hlt
push
push
xor
push
flds
repz
pop
pusha
clc
outsl
inc
aad
movsl
dec
in
sahf
jnp
out
mov
and
ret
mov
mov
es
push
adcl
loop
mov
adc
sbb
frstor
cmp
out
test
in
adc
sub
xor
mov
jge
arpl
push
popa
arpl
scas
xor
push
pop
fst
test
hlt
out
idivl
dec
lahf
pop
rcrb
or
push
imul
lods
imul
decl
jae
ss
lods
aad
shll
cli
mov
inc
cwtl
mov
ficoms
mov
repz
xor
mov
call
jmp
mov
mulb
repnz
popa
fdivrs
mov
adc
iret
dec
inc
xchg
bound
shlb
cld
fcoml
sbb
xor
shrb
dec
mov
xchg
xor
or
mov
pop
cmp
lods
adc
dec
lock
mulb
or
std
dec
data16
and
int3
xchg
sub
cltd
aam
cmc
sub
in
ret
dec
mov
inc
nop
jns
cmp
sub
jbe
mov
push
sbb
jg
hlt
clc
sti
scas
inc
pop
sub
in
xor
fisttps
loope
mov
push
mov
imul
in
mov
mov
das
inc
pop
vandps
mov
xor
shrb
mov
test
cmp
cmpsl
mov
into
xchg
sbb
fidivrl
insl
xchg
dec
mov
in
or
int
pop
mov
pop
push
ljmp
cmp
xchg
inc
mov
jbe
or
push
outsl
cmp
lahf
lret
das
pushf
pop
icebp
movsl
test
push
cmp
mov
mov
sub
push
inc
cli
dec
icebp
pop
mov
xor
jg
or
in
sub
addr16
or
xor
add
clc
aaa
pop
xchg
xchg
inc
sbb
add
pushl
sbb
lods
mov
mov
push
add
les
mov
int3
adc
push
jbe
xor
sti
fprem1
xchg
xchg
in
icebp
mov
jp
adcb
stos
jmp
add
inc
jl
push
je
inc
ljmp
jb
stos
mov
std
aas
popf
stc
mov
xor
js
or
sub
fldl
mov
shll
pop
insl
leave
push
inc
mov
in
inc
ds
jbe
sub
xchg
popf
popa
out
loopne
fs
push
loop
lock
inc
xlat
imul
push
push
mov
xor
repnz
pop
fs
sbb
mov
aam
jmp
mov
mov
mov
les
pop
pushf
repnz
dec
dec
xchg
cmp
adc
lcall
in
daa
sub
inc
daa
repz
cs
xor
dec
shrl
xor
xor
rorl
pop
pop
and
push
xor
mov
mov
fidivrl
les
push
add
bound
sub
pop
lods
inc
and
mov
adc
fistl
stos
pop
adc
das
cld
pop
jno
pop
insl
iret
cs
pop
fisubrl
jb
jmp
push
mov
sub
adc
mov
lods
push
push
mov
lds
mov
adc
add
add
fnstcw
leave
or
nop
add
int
fmuls
ja
lcall
and
mov
xor
adc
mov
and
pop
jbe
xor
cmpb
inc
insl
dec
adc
pop
lcall
ljmp
xchg
fisttpll
into
sub
mov
pop
ret
test
mov
mov
js
and
pop
addr16
jmp
xor
xchg
sbb
dec
cmp
inc
dec
mov
cmp
aad
aam
out
test
or
pop
cmp
push
xor
inc
sbb
pop
fdivl
jbe
jl
mov
rorl
imul
or
sbb
xlat
sbb
es
lahf
xchg
pop
mov
pop
dec
pop
sub
test
fisubrs
push
lods
repz
cmp
push
push
das
xchg
shlb
dec
aam
mov
fimuls
jo
add
inc
out
js
push
lcall
fld
mov
dec
push
mov
mov
jg
int3
jae
add
xor
adc
das
push
in
pop
cmpsl
jl
adc
cmp
test
jbe
adc
pop
arpl
adcl
push
xchg
rcl
push
fstpl
imul
mov
aad
xchg
mov
test
test
lret
xchg
dec
jbe
popf
dec
fidivl
mov
pusha
js
je
enter
jg
add
or
add
xchg
xor
loopne
mov
aad
js
aaa
mov
shrb
in
es
pop
adc
jo
mov
sub
adc
push
pushf
dec
jle,pt
mov
mov
mov
mov
in
pop
out
insb
out
sub
std
out
mov
clc
dec
lods
ret
xchg
cmp
jnp
mov
int
xor
clc
add
mov
cmpsb
sbb
cmp
inc
cmp
or
out
or
clc
test
mov
mov
cmc
movsb
adc
cmp
fwait
sbb
pop
pushf
dec
or
lods
mov
jne
push
lret
inc
adc
cmp
out
das
inc
mov
mov
adc
inc
nop
sub
xor
inc
add
iret
addr16
orb
xchg
sbb
push
sub
mov
cmp
fsubrs
aaa
push
out
dec
iret
enter
adc
mov
cmpsb
popf
and
pop
in
sti
lahf
sub
dec
xchg
dec
imul
int3
js
mov
pop
in
sbb
sbb
iret
mov
loop
cmp
loope
pop
mov
add
imul
mov
jnp
leave
les
adc
push
sti
jecxz
std
inc
daa
aas
or
xor
or
lret
pop
add
push
scas
push
or
test
pop
mov
pop
jle
incb
int
inc
pop
leave
sub
sub
push
lea
cwtl
xchg
shl
int3
sub
cmp
dec
ss
int3
jns
push
pop
movl
pop
in
cmp
cmp
dec
push
cmp
push
jg
push
repnz
adc
orb
and
daa
pop
int
inc
xchg
push
dec
stc
sub
push
leave
insb
mov
and
sbb
pop
dec
sub
aad
add
adc
jmp
pusha
in
pushf
js
sub
testl
xchg
push
sbbl
sub
sbb
outsb
ds
mov
and
mov
ret
dec
adc
fcmovnbe
jnp
and
imulb
add
cmpsl
movl
inc
xor
push
int3
mov
xchg
add
mov
push
loope
mov
lcall
adc
repz
mov
pop
jmp
sarl
push
ljmp
test
fs
mov
sahf
xor
fists
lcall
repz
and
dec
dec
pop
mov
dec
cmpsb
adc
addb
test
sub
adc
mov
cwtl
pop
xor
push
and
xor
sbb
sub
jbe
cmpsb
pop
xchg
push
clc
into
clc
jge
dec
sbbb
jns
fsubl
mov
mov
test
stc
rcrb
push
sbb
repz
adc
fbstp
decb
imul
jecxz
es
jle
cli
and
mov
cmpsl
sti
push
jno
mov
adc
andb
mov
pop
jns
mov
ret
mov
mov
ret
xchg
pop
call
mov
pop
mov
icebp
lret
and
rorb
gs
sub
divl
addr16
jmp
pop
cmc
aaa
test
mov
sub
mov
mov
lret
xchg
shrl
xchg
pop
xchg
pop
cmc
and
cmp
mov
flds
mov
push
cld
adc
jp
adc
dec
leave
jne
cmpl
mov
jo
add
sahf
add
loope
xchg
adc
jp
sub
sub
aas
lea
mov
xchg
or
cmp
add
aaa
in
dec
cmp
mov
movsl
mov
aas
push
popa
push
xchg
jp
in
loopne
push
std
cmp
mov
popw
stc
stos
out
ds
xchg
mov
add
jp
adc
sbb
add
inc
push
adc
fwait
and
push
xchg
dec
cmp
negl
gs
push
addr16
add
cmp
add
or
and
xchg
cmpsb
adc
imull
movsl
push
fbstp
xor
push
inc
divb
sahf
pop
mov
adc
cmpsb
aam
sub
add
cmp
and
xchg
push
das
insw
adc
mov
mov
sahf
fidivl
and
xchg
jnp
dec
negb
mov
mov
xchg
and
jl
repz
or
int
imul
xlat
xlat
xchg
js
test
push
dec
push
clc
shl
jne
adc
inc
cmc
leave
xchg
cmp
jb
int
adc
xchg
mov
jno
jo
scas
push
lret
or
xor
ficomps
adc
mov
das
pop
add
cmpsl
cmp
inc
lret
cmc
and
pop
fldl2e
jbe
and
daa
jl
pop
fists
jle
xchg
dec
cmp
mov
xor
lret
pop
and
pop
and
pop
add
xchg
mov
jbe
push
push
loope
shl
mov
xor
ret
push
cli
xchg
and
xchg
shlb
push
test
shll
jo
inc
xorb
dec
les
inc
jl
xlat
jae
rorb
sti
add
lock
insb
mov
xchg
jmp
xor
ret
repz
push
fisttpll
inc
cs
dec
xchg
sub
cld
loope
lock
in
pop
arpl
icebp
sub
pop
aas
andl
movsl
icebp
mov
out
iret
sbb
mov
test
das
movsl
notb
enter
repz
leave
out
lds
outsl
aam
push
lds
dec
xorb
lods
add
mov
inc
jbe
sub
pop
inc
mov
sub
inc
mov
pop
je
dec
in
inc
repz
xchg
mov
outsl
mov
aas
in
mov
mov
mov
adc
lahf
fdivl
adc
addr16
push
inc
cmp
enter
outsl
adc
xor
pop
cld
cwtl
dec
sbb
int3
cmpsl
add
cmp
rcrl
lahf
mov
lahf
hlt
mov
int3
adc
inc
addr16
out
cmp
fisubs
int
pop
jnp
clc
cmp
cmc
addb
and
arpl
imul
add
das
dec
adcb
jge
mov
dec
hlt
mov
out
loopne
mov
cmpsl
jo
sahf
jl
dec
out
stos
aam
imull
shll
inc
in
inc
inc
jbe
ret
push
inc
mov
shrb
ret
mov
or
movsl
fists
int3
inc
fs
hlt
or
sti
jb
mov
push
push
jecxz
in
cmc
stc
int
sub
pusha
out
xor
fsubs
sub
push
test
scas
push
das
sbb
mulb
jno
sarb
push
subl
xor
repz
xchg
sub
pop
sub
mov
pushf
stc
cmp
dec
subl
test
sarb
cltd
mov
loop
and
jo
mov
xor
mov
xchg
in
xchg
cmp
xchg
inc
xchg
xchg
and
mov
addr16
cmp
dec
push
mov
int
mov
xor
shlb
movsb
in
dec
and
mov
jb
push
test
test
loope
popf
addr16
das
sbb
lods
and
dec
cmp
lods
lods
pop
hlt
cmpsb
int3
pop
loopne
fcmovne
add
scas
dec
imul
pop
xchg
cmp
mov
dec
out
inc
gs
inc
or
pop
enter
icebp
mov
popa
mov
mov
mov
out
lcall
adc
and
adc
mov
dec
daa
pop
imul
sbb
pop
adc
mov
and
mov
xor
int
push
mov
adc
or
jb
and
mov
or
cmp
mov
pop
fmul
inc
pop
dec
popf
lret
sub
lea
push
sub
fidivrs
pop
adcb
dec
add
dec
pushf
push
es
or
into
push
jnp
sbb
rcr
lds
cmp
push
cli
in
sub
fdivrp
loope
push
lods
mov
add
and
sub
out
sahf
imul
lods
js
pop
mov
or
push
mov
lcall
mov
lret
aas
jne
push
sub
lock
fisttps
add
mov
mov
out
aad
sbb
adc
adc
xchg
xchg
mov
in
aad
hlt
outsl
fidivs
int
mov
mov
mov
cmc
push
mov
lds
loopne
jp
movsl
loope
lahf
cmpb
dec
insb
lds
pop
call
test
and
push
push
addr16
xchg
cmp
enter
icebp
pop
xor
jp
repz
dec
sbb
popa
xor
jmp
aaa
mov
and
cli
imul
sub
mov
jp
dec
sbb
inc
sub
sbb
push
ljmp
jle
loope
stos
mov
enter
add
in
or
jmp
jecxz
cmp
scas
scas
jno
mov
hlt
imul
xchg
sbb
das
sub
popf
repnz
dec
mov
xchg
aas
shrb
stc
or
sub
pop
add
pop
jmp
orb
push
xlat
add
push
jle
fists
dec
push
xchg
lret
mov
repnz
cmc
cmp
dec
inc
cmp
jg
push
mov
inc
cmpb
cld
cmp
loope
jo
lret
cltd
fisubl
fldcw
sub
jne
and
pop
lahf
xchg
mov
and
sub
ret
jbe
dec
out
fisttpll
push
gs
inc
xor
lret
fldenv
sub
lock
add
cld
adcb
fs
push
ret
xchg
enter
sbb
in
mov
push
jno
dec
add
iret
mov
jecxz
dec
cltd
inc
hlt
into
into
aaa
icebp
push
es
ficompl
idiv
daa
jg
dec
push
inc
lret
insb
lock
adc
push
mov
sub
sbb
sbb
call
jmp
ret
divl
push
sahf
jbe
jmp
popa
adc
pop
pop
jns
xchg
lods
fbld
mov
and
jmp
add
test
jne
cmc
inc
xor
sub
icebp
pop
out
mov
stos
jp
adc
xchg
cwtl
and
mov
mov
mov
and
cmp
cmpsl
sarl
arpl
cmpsb
je
dec
add
popf
dec
aad
jecxz
adc
scas
mov
and
cmpsl
sbb
cmp
add
or
test
test
test
jge
sbb
xor
testb
cmp
jl
xchg
add
or
mov
jmp
push
ret
lods
iret
int
repz
lahf
jle
or
addl
lahf
xlat
arpl
jl
movaps
mov
xchg
or
mov
and
insb
ds
push
pushf
bound
les
add
outsb
dec
sbb
push
test
stos
fs
cld
sub
ja
insl
out
push
pop
jnp
pop
ret
dec
jmp
adc
sub
push
mov
sub
mull
fcompl
dec
mov
add
loope
adcb
xchg
lods
icebp
das
inc
push
and
lods
and
ffree
xor
mov
inc
fildl
adc
call
out
popa
jns
scas
sub
mov
xchg
fstps
leave
aas
and
mov
inc
jle
pusha
das
gs
mov
mov
mov
loopne
xchg
frstor
cmc
imull
or
lods
aaa
es
mov
aas
clc
pop
dec
adc
push
mov
pop
mov
pop
jb
loope
test
bound
aam
inc
test
and
mov
insl
icebp
cs
inc
fdivrl
test
out
lds
insl
insb
lcall
jmp
cmp
das
dec
mov
loopne
int3
push
xchg
cmpsb
push
faddl
xor
sub
cli
xchg
mov
cli
push
mov
sbb
xchg
push
xchg
les
mov
scas
ljmp
arpl
pusha
pop
xchg
xchg
mov
dec
push
sub
cs
stc
lret
stc
jnp
push
pushf
or
lods
mov
movsb
jno
xor
lret
insl
aaa
int3
inc
in
pop
pop
dec
adc
jmp
cwtl
cld
mov
sbb
inc
test
fisttps
adc
xor
cmpsb
fiaddl
jae
bound
mov
sbb
cli
dec
xchg
jnp
jae
push
in
and
js
iret
inc
iret
pop
les
test
pop
lcall
add
push
or
mov
loop
adc
xlat
xor
out
pop
mov
addr16
push
xchg
fcomps
cmp
pop
pop
jnp
in
std
sbb
fcoms
andl
push
xlat
gs
pop
icebp
divb
adc
fisubrs
xorl
fs
lds
in
xchg
out
or
call
jno
pop
adc
sbb
cli
leave
push
repz
sub
xlat
jno
adc
adc
pop
add
xchg
xchg
push
mov
scas
loope
jle
mov
xor
addr16
xchg
sbb
xlat
mov
call
xchg
jae
inc
inc
dec
sbb
dec
lret
or
or
movsl
sub
mov
add
rcl
shrb
icebp
fdivrl
sub
popf
adc
mov
mov
stos
mov
fwait
out
and
fbld
shrb
jb
fstl
sub
ds
jle
xor
or
dec
xor
xor
mov
jl
sbb
movsb
and
andl
sbb
out
push
mov
mov
push
and
pop
mov
mov
push
sub
adc
sub
in
inc
dec
and
test
push
push
sub
cmp
dec
and
pop
cli
add
std
and
fldl
push
and
mov
jl
movsl
jl
jne
out
stos
mov
fcomip
js
xchg
pop
xchg
arpl
out
out
cmp
or
loop
adc
pushf
mov
mov
orl
pop
inc
mov
mov
push
push
repz
push
add
stos
sub
mov
out
sti
rolb
cmp
inc
scas
adc
xor
mov
push
mov
pop
iret
outsb
cli
inc
testb
mov
adc
icebp
lods
mov
add
mov
push
pop
xchg
push
daa
scas
lods
cmp
gs
push
jb
sti
inc
add
hlt
pusha
sub
rcrb
addb
push
es
idivl
popf
pop
je
loope
or
mov
fxch
inc
push
and
add
inc
sbb
jecxz
ja
jg
xlat
sbb
add
outsl
sub
jb
cmp
mov
jae
add
inc
jmp
sbbl
in
mov
push
sbb
popf
mov
xor
xchg
pusha
lcall
xchg
xchg
add
in
divb
mov
or
scas
adcb
lcall
mov
in
out
pop
sbb
cmp
xor
mov
mov
sub
movsb
decb
dec
cmpsb
sbb
pop
in
loopne
xchg
aas
add
sbb
fcoms
pop
mov
loopne
cltd
adc
pop
push
movsb
or
inc
nop
nop
dec
loopne
inc
daa
jp
shrl
shlb
push
cwtl
popa
stos
jnp
popf
out
rorb
xor
mov
jns
push
xchg
sub
cli
aas
push
xchg
xchg
cltd
jb
xor
int
adc
adc
iret
jl
push
divl
mov
fcmovnb
iret
jno
pusha
ljmp
lahf
pop
lods
mov
data16
jb
stos
jnp
dec
sti
subb
or
movsb
jl
jp
aad
repnz
cmp
xchg
stos
rolb
inc
divb
jl
add
mov
test
pop
dec
jge
xchg
or
push
repnz
aad
fistps
negb
xor
fistl
mov
outsl
lret
stos
sub
jb
add
push
jnp
out
jno
ret
loopne
cmpsl
lods
xorl
inc
jbe
leave
or
xchg
pop
roll
enter
test
cltd
jmp
xchg
loop
or
and
repnz
sub
xchg
xchg
fldt
add
dec
sub
xor
movsb
cmpsb
in
insl
test
dec
je
push
inc
xchg
dec
mov
push
aad
add
jbe
lds
push
jge
fs
pop
fcompl
std
and
icebp
push
push
push
fwait
cmp
mov
fnsave
pop
ss
mov
push
iret
add
mov
orb
push
push
cld
scas
test
int3
shlb
xor
cmpsl
dec
and
xor
add
iret
mov
jne
test
data16
jbe
push
and
leave
imul
lds
push
mov
mov
jbe
aam
add
cmp
dec
cmp
stos
sbbb
pop
lret
cld
xchg
fcmove
stc
lret
stc
xchg
es
sbb
xor
jnp
rcrb
add
xor
insl
cltd
adc
sub
or
sti
dec
jae
sbb
add
movsl
stc
push
inc
sub
sbb
in
adc
push
sbb
jae
cmp
mov
mov
xlat
cltd
xor
scas
in
sbb
mov
loope
sbb
jg
xor
lods
lods
pop
js
xor
inc
fcmovnu
or
test
xchg
add
sbb
push
std
mov
aam
cmp
pop
cld
sub
fsubrl
cmp
sbb
imul
adc
push
cs
cmp
aaa
or
fnstenv
jne
shlb
mov
fmul
call
enter
xor
jg
in
push
das
cmp
push
jp
in
enter
rcll
add
adc
fmul
xor
popf
sbb
xchg
or
mov
ss
ret
add
outsl
sbb
sbb
mov
mov
shll
ficomps
shlb
outsl
adcb
psrlq
addr16
jmp
mov
jmp
mov
xor
addr16
dec
stos
js
cmp
lahf
xchg
test
fsub
sub
xor
lods
sub
shlb
lcall
or
into
jmp
jo
scas
iret
int3
daa
jno
cmpsb
xlat
xchg
outsl
cmp
cli
mov
test
data16
bound
dec
fwait
jmp
repz
or
add
adc
push
pop
sti
adc
jnp
xor
sbb
and
loopne
fs
roll
add
mov
outsl
inc
out
mov
int3
repnz
mov
jbe
mov
loopne
mov
pop
sarl
inc
adc
test
daa
decb
jg
les
lcall
add
jge
cltd
ret
sarb
jno
cmpsb
out
pop
cmp
js
jne
mov
iret
mov
push
loopne
pop
das
addr16
dec
mov
fdivl
cmp
mov
repnz
inc
rcll
push
mov
cmp
xor
nop
inc
lea
fdivrl
sbb
std
fidivl
aas
das
mov
pop
ret
clc
dec
enter
jg
cmp
push
sbb
xchg
jae
in
mov
push
pop
adc
pop
mov
imul
sbb
into
divl
int
push
mov
int3
adc
mov
xor
xorb
clc
ss
pop
shrb
push
repz
xchg
rep
adc
inc
imul
std
inc
mov
and
push
or
je
sti
in
mov
push
fisubs
enter
inc
leave
inc
cld
stos
subl
lret
sub
mov
push
ja
aam
aaa
dec
pop
les
fs
dec
and
das
icebp
mov
sbb
fisttpl
lahf
lock
cmc
xchg
es
xchg
out
scas
mov
jle
sbb
aam
test
in
cmp
sub
push
or
mov
pop
jnp
mov
rclb
icebp
outsb
push
negb
sub
xchg
or
inc
cwtl
sub
xchg
xchg
xlat
xchg
clc
or
imul
jmp
rcl
xor
scas
mov
in
cs
and
lea
lcall
and
xor
mov
sbb
cld
pop
scas
jne
adc
inc
mov
loope
and
xorb
and
xchg
negb
sub
arpl
insl
jecxz
jno
xor
xor
les
xchg
xchg
std
sbb
jge
mov
inc
mov
jg
outsb
inc
dec
rorb
loope
pop
jnp
mov
cmp
sbb
aaa
aaa
and
sbb
add
fs
push
dec
jae
dec
ror
sbb
mov
repz
sub
ficompl
ret
xchg
dec
test
in
pushf
lret
lock
add
orb
mov
mov
in
jae
pop
mov
add
outsb
sti
popa
cli
ret
fs
and
add
push
out
xor
outsl
pop
mov
and
lods
pop
pop
iret
ficoms
addb
inc
ss
or
cld
mov
dec
shrl
sub
sahf
imul
xor
xor
jb
sub
push
adc
ret
out
mov
test
dec
loopne
int
xor
sub
and
lret
pop
out
or
jp
ljmp
sub
mov
and
jnp
mov
das
fdivr
js
scas
daa
jge
mov
popf
int3
shll
orb
ret
xchg
lahf
cmp
xor
out
outsb
xchg
mov
add
negl
jecxz
call
adc
xchg
xlat
jmp
dec
cmp
and
sti
mov
xor
inc
in
pop
lret
and
pop
test
cmp
nop
sti
mov
sub
mov
das
fistl
ja
adc
jne
insb
lcall
movsl
inc
inc
or
sbb
pop
dec
mov
popa
push
dec
add
roll
cmpsb
push
mov
cmp
cmp
pushf
out
ret
mov
das
xchg
cmp
cli
lret
negl
xor
in
into
jne
xchg
adc
jnp
xchg
sub
stos
pop
mov
fldl
jl
xor
clc
daa
dec
inc
iret
loop
mov
inc
mov
and
movsb
jo
push
movl
push
out
in
jne
pop
mov
ds
adc
adc
pop
cmp
js
sub
inc
cmp
sbb
popf
in
cs
or
jno
jae
ret
daa
rcr
sar
and
sbbl
leave
xchg
addr16
mov
int
and
in
int3
sub
pop
cmc
pop
jge
ljmp
push
sahf
jl
mov
dec
lock
push
xlat
sbb
adc
add
addr16
inc
cmpsl
add
fnstsw
popf
adc
and
and
pop
cmpsl
movsl
mov
fisttpl
sub
cmpsl
and
andb
and
sti
sbb
or
xchg
add
mull
mov
in
fistl
push
xchg
jno
add
and
push
sbb
mov
push
mov
and
mov
cmp
fwait
sahf
mov
or
ljmp
in
repz
and
sub
add
rolb
dec
xor
bound
push
cltd
icebp
imul
jg
or
mov
inc
testl
hlt
pop
lds
cli
das
xchg
cmp
jmp
mulb
int
mov
mov
inc
mov
dec
leave
jp
inc
sub
mov
into
loopne
pop
sub
js
clc
cmpsb
cmp
and
popa
dec
push
cmc
mov
int3
lds
xorl
jge
xchg
ljmp
test
push
pop
pusha
and
pop
jb
push
lds
push
push
sbb
push
test
mov
dec
movl
pop
push
inc
sbbl
cltd
mov
xor
cmpsl
xchg
or
repnz
jle
arpl
adc
inc
pop
sbb
xor
aam
mov
inc
push
push
pop
mov
les
mov
pushf
in
adc
mov
push
pusha
pop
pushf
cmp
jg
flds
fbstp
push
sti
jmp
shr
cld
mov
scas
mov
dec
dec
and
aas
inc
dec
and
add
adc
std
dec
dec
loopne
cwtl
decl
push
dec
pop
js
add
xor
fsubr
imul
and
int3
or
xor
in
sbb
add
aaa
pop
cmp
cwtl
iret
enter
ficoms
dec
loop
jne
in
mov
nop
mov
xchg
pop
lret
mov
adc
mov
data16
clc
or
push
mov
inc
int
jp
cmp
push
pop
xchg
xor
mov
aad
btr
dec
xchg
push
push
mov
xchg
pop
stos
int
push
mov
cmc
cmc
dec
imul
sub
ss
scas
imul
pop
mov
into
mov
lds
mov
xor
lret
lds
sbb
lock
push
push
sbb
aad
xor
jp
std
jbe
sbb
mov
rclb
sbb
pop
mov
stos
ja
mov
xor
imul
call
sbb
movsl
orb
fstp
pop
pop
adc
shl
stos
ljmp
hlt
scas
insb
inc
sahf
sbbb
lods
incl
pop
or
repz
mov
bound
lret
xchg
xchg
sbb
out
cli
cltd
or
push
pop
mov
scas
jecxz
loope
xchg
rorb
jmp
and
rorb
testb
outsl
xor
ja
jl
cs
clc
xchg
in
mulb
mov
push
mov
neg
js
jnp
xor
pop
call
dec
jge
jge
aas
pop
inc
mov
lds
bound
pusha
fmuls
rclb
out
sbb
in
inc
ss
xor
dec
jle
xchg
sub
stc
inc
lahf
adcb
out
loop
xlat
shlb
lret
push
sbb
adc
pop
bound
test
mov
sbb
test
cmp
push
gs
sti
mov
decl
add
cltd
or
lock
outsb
inc
lahf
arpl
push
mov
push
nop
js
das
ljmp
sub
sbb
iret
ffreep
mov
or
sub
loopne
push
jmp
lcall
push
insl
xor
jecxz
push
mov
jmp
dec
push
push
ss
sbb
sahf
scas
aaa
ljmp
aaa
ret
jle
dec
test
mov
and
xor
sub
mov
sbb
in
cmp
jmp
add
scas
inc
and
movb
ja
int
xor
xchg
sub
pop
rorl
cmp
pop
lret
xchg
xchg
ljmp
dec
hlt
out
in
ljmp
push
stos
test
push
jle
std
mov
push
push
sub
hlt
fs
xor
std
or
add
lds
and
pop
pop
call
leave
int3
fs
jg
cmp
or
jmp
sbb
bound
sub
cltd
ret
push
xor
clc
adc
popa
sbbl
jno
xor
fs
mov
jbe
loopne
unpcklps
push
or
dec
dec
jmp
icebp
sub
rcrl
int
push
cltd
sbb
xchg
dec
add
cli
iret
cmp
sub
and
fdivrs
inc
insb
adc
push
mov
clc
adc
sahf
cwtl
shll
add
fs
popf
pop
sar
faddl
add
loope
subb
add
and
pushf
and
lcall
std
dec
adc
in
adc
mov
xor
xor
movsb
pop
lds
pop
mov
ja
popf
mov
dec
push
add
cmpsl
fisttps
hlt
mov
sbb
mov
cmp
leave
cmpsl
xchg
mov
out
mov
mov
sub
add
jnp
inc
xchg
mov
gs
xchg
clc
jb
pop
xchg
es
cmp
fstps
les
loop
addr16
dec
into
pop
mov
dec
ja
stos
jbe
push
pop
loop
and
lcall
arpl
outsl
inc
insb
aad
nop
cld
jmp
rolb
lret
notb
fidivl
jle
divb
push
xor
enter
lods
xorl
ja
ds
or
aas
das
dec
iret
lahf
fwait
inc
inc
lock
lret
dec
cmp
or
out
jle
mov
jnp
push
cmpsl
cmp
scas
dec
mov
out
int
adc
sub
loop
and
and
sbb
out
jmp
mov
adc
sub
xchg
pop
loopne
pop
adc
hlt
cmp
jmp
sti
scas
das
cmp
push
lds
movsb
xchg
push
test
push
sahf
add
in
int
leave
jp
lcall
xchg
inc
mov
fucomp
mov
adc
dec
xlat
inc
in
dec
pop
test
push
cltd
xchg
popf
daa
pop
inc
je
test
fldl
pop
jmp
dec
add
cltd
or
in
mov
scas
pop
hlt
xchg
fwait
xchg
shl
mov
or
mov
pop
mov
test
les
orb
lock
or
mov
inc
cmp
inc
lcall
pop
sub
mov
lea
adc
jecxz
cltd
rolb
push
mov
mov
daa
mov
jno
loop
fs
clc
repnz
cmpsl
push
adc
icebp
adc
push
std
mov
jbe
lcall
clc
adc
div
inc
xor
test
adc
scas
outsl
xchg
call
dec
sbb
sti
xor
test
cmp
in
cmp
push
dec
lods
mov
fistl
cmpsb
ss
mov
std
pushf
pop
mov
dec
test
fst
lods
test
xchg
mov
inc
in
scas
dec
inc
jmp
outsb
push
mov
out
mov
pusha
push
ret
fs
dec
xchg
inc
insl
repnz
xchg
sbb
pop
pop
push
xor
jg
mov
lret
cld
mov
pop
and
mov
stc
xor
xor
push
lret
cmp
lods
mov
jl
les
or
fdivrp
xor
dec
ret
cmc
js
imull
rclb
cmc
sub
xchg
adc
in
lret
lock
out
out
pop
and
test
mov
lods
pushf
xchg
lock
sbb
cwtl
mov
pop
imul
mov
sbb
clc
out
scas
test
and
enter
imul
fnstcw
sysexit
push
aas
cs
in
and
and
mul
dec
dec
mov
cmp
lds
jne
movsl
sahf
and
daa
pop
or
mov
ret
stc
sbb
incb
push
jl
je
std
pushf
repnz
mov
inc
jge
in
and
push
lds
inc
xor
mov
leave
daa
adc
incb
rorb
cwtl
inc
mov
addr16
sbb
mov
xlat
inc
pop
adc
popa
jle
xlat
mov
lods
pop
sub
test
jmp
aad
loop
enter
int3
imul
popa
push
sbb
mov
mov
dec
bound
rclb
test
jmp
mov
push
sbb
jle
addr16
addr16
xor
mov
cmc
psubsw
inc
popa
icebp
jle
ret
and
std
jnp
mov
out
aas
lahf
xchg
dec
sub
xchg
jmp
cmpsb
test
mov
lods
pop
xor
movsl
push
imul
xchg
and
pop
mov
outsb
int
lret
push
adc
rorb
repz
or
inc
movsl
dec
ficompl
ds
add
mov
fisubs
add
pop
fwait
lahf
outsl
adc
pop
jns
push
int3
cmp
mov
adc
xchg
mov
dec
xchg
ljmp
stos
sbb
xor
pop
mov
or
jb
cmp
iret
movsb
sbb
pop
test
or
dec
dec
imul
push
cmp
adc
mov
pop
xchg
scas
push
call
mov
mov
lret
ss
scas
cmp
out
out
flds
cmp
lock
cwtl
sar
shl
out
inc
or
push
mov
jbe
xor
or
mov
push
ljmp
jns
add
mov
pop
roll
loopne
in
cli
and
loopne
and
cmc
jecxz
xor
adc
int3
stos
pop
lods
push
shr
lock
dec
out
cld
lock
cmp
nop
inc
insb
add
mov
cmc
imul
fs
cli
xchg
je
out
aad
xchg
xchg
cmp
or
arpl
and
jnp
and
mov
test
pop
mov
jno
mov
jecxz
lods
cmp
jg
pop
or
out
push
mov
gs
cmp
stos
xor
fildl
enter
inc
adc
inc
mov
shrl
push
dec
insl
mov
aas
loopne
ret
mov
jns
jo
add
and
sub
fldl2e
ja
ljmp
xchg
mov
setbe
nop
fs
ljmp
inc
push
xor
cmpsl
sub
andb
mov
jae
movsl
stc
fistps
sub
out
stos
orl
push
imul
out
add
and
jne
push
add
in
std
sub
nop
push
roll
xchg
dec
lahf
and
or
xchg
es
int
sub
lret
inc
fistps
out
lock
in
fs
and
add
lahf
mov
dec
test
push
mov
loope
sub
sbb
ficoml
sub
jbe
lahf
js
add
push
xchg
mov
mov
mov
mov
pop
lock
out
pop
inc
icebp
xchg
mov
lock
cmp
ret
dec
test
movsb
bound
sti
inc
inc
xchg
cmpsl
sub
mov
add
fs
pop
xor
mov
pop
orl
loopne
dec
xchg
dec
insb
jge
sub
lret
out
mov
insl
repnz
or
cmpsl
add
loope
xor
hlt
aas
pusha
loop
imul
mov
loopne
adc
out
mov
into
dec
mov
or
mov
jmp
mov
or
cmpsl
sbb
cmp
ja
or
jo
jp
sub
add
push
pusha
movsb
xor
lds
and
pop
jmp
mov
mov
push
dec
out
insb
and
pop
mov
out
jl
or
inc
dec
jne
sub
or
mov
sub
es
inc
push
push
push
mov
push
mov
or
shlb
xchg
test
cld
pop
scas
push
mov
or
out
cmp
in
fldcw
and
xorl
adc
sub
sub
shll
shlb
pop
int3
jp
movsb
mov
loopne
xor
andb
add
dec
inc
push
sub
and
out
dec
loopne
mov
in
cmp
lahf
repz
sub
mov
mov
outsl
js
fcmovnb
lods
cld
sbb
dec
xchg
cmp
xchg
imul
shll
call
loope
clc
sbb
cmp
enter
pop
xchg
sahf
pop
stos
push
leave
dec
sti
gs
adc
push
fsubrs
push
sub
dec
lret
xchg
cwtl
or
bound
imul
sbb
add
mov
mov
lret
pop
cs
enter
lret
xchg
movsb
mov
mov
gs
lret
daa
cmc
sbb
insb
add
inc
mov
int
mov
clc
sub
jp
mov
mov
xlat
popf
sbb
adc
push
scas
ja
in
push
cmp
ret
mov
sti
fmull
fs
dec
sub
mov
lea
or
stos
aam
jmp
mov
jbe
aas
jo
sub
pop
pop
cld
into
mov
push
mov
and
inc
stos
or
out
mov
push
sub
outsb
jnp
insb
sub
addb
les
daa
dec
pop
cmc
xchg
lods
jl
dec
test
loope
mov
fisubs
ljmp
jg
sub
out
cld
test
xchg
shlb
push
in
nop
mov
xchg
stos
adc
lahf
arpl
mov
sub
add
adc
into
daa
jp
add
push
rcrb
dec
aam
and
ret
cmp
sbb
dec
pop
shll
push
xor
mov
pop
repnz
out
pop
cs
mov
or
push
divb
fildll
aas
jne
mov
es
and
loope
sbb
sarl
push
mov
lock
lds
addl
ret
movsb
or
pop
jns
add
jns
fidivrs
lods
daa
int3
pop
inc
xchg
jo
sub
sbb
xor
push
adc
inc
sbb
cmpsb
jg
cmpsb
push
or
sbb
arpl
lock
scas
into
dec
mov
testl
pop
mov
adc
inc
lods
lds
sbb
sbb
test
lret
inc
lahf
fs
sarb
sbb
cmc
dec
and
jb
lret
xchg
fwait
sub
add
outsb
call
imul
fstpt
sub
outsb
aaa
repnz
cmp
jne
or
aam
bound
repnz
dec
in
inc
sbb
mov
dec
shll
cmpsb
inc
pop
fisttps
xchg
add
jb
jbe
xor
fstl
or
bound
ja
inc
or
test
iret
add
inc
sub
cmp
mov
or
gs
movsb
push
movsl
icebp
cmp
xchg
jle
repnz
fstp
pop
mov
inc
sbb
fcompl
movsl
mov
fs
aam
cld
sbb
xor
jge
add
jbe
mov
cli
jb
in
push
cmpsl
clc
cld
inc
in
jae
pop
in
les
dec
xor
sub
cmpsb
sub
or
sub
add
xlat
pusha
lock
rol
or
ss
push
xchg
pusha
js
repnz
fsubrs
xchg
mov
addr16
push
jmp
xchg
and
push
mov
jb
mov
adc
call
xchg
int
sub
fstpl
push
sbb
pop
fistpl
addb
inc
inc
stos
ud1
xchg
dec
xchg
mov
xchg
adc
sar
fs
jp
sub
cmp
ja
mov
loop
mov
es
sbb
xchg
xchg
cmp
lea
movsb
dec
out
scas
rolb
cmpsl
jle
push
mov
push
inc
dec
nop
and
mov
lods
inc
xchg
call
data16
lds
cmovs
pop
call
inc
rep
arpl
adc
jle
call
or
pop
loopne
imul
inc
add
scas
ss
loopne
sbb
or
lock
pop
out
dec
aaa
orl
ja
popf
mov
mov
jb
testl
cmp
leave
nop
test
fwait
mov
repz
jl
scas
jl
ror
es
outsl
mov
test
xlat
sbb
mov
xor
pop
xchg
rorb
mov
fbld
jl
xor
dec
cmp
pushf
and
in
mov
lods
test
inc
cltd
add
pop
setg
and
fdivrp
sbb
bound
in
adc
adcb
add
and
or
cmp
add
popa
mov
mov
adcb
imul
push
jno
test
insl
jecxz
jp
cmp
jbe
lahf
incb
pop
arpl
imul
mov
in
test
mov
xchg
scas
into
popf
cmpsl
scas
cmpsl
push
add
xor
test
es
xor
jle
inc
xor
in
mov
jbe
rolb
push
nop
inc
jg
aam
je
mov
dec
stc
inc
gs
cmpsl
les
arpl
lds
loop
jno
fisubl
xchg
pop
xchg
popl
mov
sbb
dec
jmp
std
dec
dec
xchg
leave
mov
mov
sbbb
add
imul
stc
push
rorb
in
aas
sub
rcrb
mov
add
mov
mov
out
inc
dec
addl
cwtl
jge
sbb
push
adc
pusha
aas
ljmp
mov
scas
pop
sub
lahf
adc
rorl
cmp
lods
sbb
out
out
in
and
bound
mov
stos
and
dec
xor
cld
cmp
shl
mull
popf
and
dec
scas
insl
mov
call
je
inc
xor
or
in
cmp
mov
loope
test
add
std
adc
xor
mov
enter
sahf
inc
xchg
js
aas
inc
mov
inc
loopne
jle
stos
cmpsl
jno
inc
clc
ljmp
cmpsl
mov
inc
into
loope
cmp
jo
mov
shl
adc
fmulp
incl
jbe
ss
aam
cld
jg
and
lods
mov
jg
sbb
xchg
adc
mov
daa
ret
xchg
jne
xor
cmp
popf
rcr
mov
jle
push
das
push
sub
xchg
aad
cmpsb
inc
in
sub
push
adc
mov
inc
sub
sub
subl
mov
frstor
cmp
dec
es
nop
in
adc
popa
ss
mov
ljmp
add
pop
and
xchg
push
sbb
pop
cmc
jecxz
repz
mov
lods
fiadds
push
loopne
inc
out
sub
xchg
mov
insl
stos
sub
jne
sbb
sarl
mov
pushf
cltd
mov
add
pushf
cmp
adc
xor
fcmovnb
push
mov
loopne
inc
jecxz
ret
add
mov
cli
imulb
push
fists
pop
mov
out
icebp
jg
sub
aaa
fistpl
jo
repz
dec
outsl
push
add
xchg
js
pop
pop
push
nop
push
sbb
adc
sarb
jecxz
int3
inc
test
sbb
pop
dec
mov
lahf
ljmp
mov
mov
popf
andl
fdivs
xor
pop
les
outsb
jmp
aas
stos
clc
lcall
rol
adc
fwait
int
insb
jp
inc
xlat
push
rorl
add
push
stos
sbb
jb
sub
test
arpl
gs
in
notb
data16
dec
icebp
adc
mov
cmp
fsts
push
shlb
mov
adc
mov
and
or
sbb
jecxz
fistpl
divb
out
pop
gs
stc
int
daa
xor
push
leave
nop
add
test
inc
cmc
cmpsb
sbb
inc
imul
dec
push
jl
sbb
int3
push
push
das
or
push
cltd
imul
out
xor
insl
je
dec
scas
cmpsb
jnp
push
lret
adc
inc
or
mov
push
in
sbb
add
rorl
mov
cmp
add
leave
test
mov
call
add
cltd
stos
mov
ficoml
dec
in
outsl
pop
xor
pushf
xchg
or
out
dec
cmp
mov
xor
jl
incl
pop
sub
enter
imul
pop
sbb
ss
int
cld
stos
dec
cmp
lods
push
adc
cmp
out
mov
jno
xorl
shlb
repz
jmp
imul
lret
neg
cs
test
lds
jb
cltd
rcrb
mov
fidivs
leave
sti
jbe
outsb
jge
pop
cmpsl
mov
outsl
out
scas
mov
adc
and
push
in
into
test
mov
dec
int
aad
push
cmp
popf
test
test
dec
sub
or
fsubrs
jecxz
jle
xchg
rcrb
jae
jns
dec
bound
popf
int3
sub
xchg
std
and
or
cmovbe
push
fs
sti
mov
imul
ud1
dec
jbe
sahf
mov
adc
loop
sbb
pop
push
adc
inc
jge
icebp
clc
icebp
pusha
popf
popa
daa
adc
inc
cmp
inc
fnstsw
repnz
add
jg
and
mov
jmp
or
std
cwtl
jnp
cmp
add
outsl
lock
stos
push
push
push
test
je
sarl
jecxz
gs
aaa
dec
or
mov
rol
sub
lea
sub
mov
mov
xchg
jecxz
adc
inc
icebp
imulb
inc
mov
jbe
pop
cltd
scas
arpl
jge
scas
jl
aaa
in
lods
or
adc
xchg
jle
pop
rclb
repz
rcrl
jg
flds
movsl
sbb
inc
loope
xor
aam
inc
mov
dec
add
and
sub
and
loope
and
lea
adc
xchg
fs
outsb
xchg
xchg
adc
dec
fsts
shlb
fstl
loopne
inc
inc
mov
gs
add
std
sub
mov
jbe
mov
push
dec
and
test
jnp
aas
out
mov
testl
pop
cmc
pop
int3
subb
jae
add
scas
or
fwait
pusha
in
jbe
iret
ret
neg
push
xor
imul
sar
es
pop
mov
stc
fdivrs
and
xor
mov
repz
nop
shl
mov
decl
cmp
pop
mov
xchg
dec
and
xor
lock
in
and
leave
mov
mov
push
mov
fildll
pop
ret
insl
fwait
movsb
movsb
aas
push
lods
mov
movsb
ja
into
std
mov
inc
mov
int3
push
fisubl
enter
lods
insl
sti
loope
mov
adc
dec
xchg
movb
pop
and
dec
rclb
std
cmc
sarb
in
ss
leave
shlb
pop
inc
mov
jns
lea
xchg
popf
dec
mov
imul
inc
fwait
mov
jmp
jae
sub
aas
push
cmp
imul
mov
mov
jp
and
sub
popa
mov
fldenv
hlt
popa
rclb
fs
clc
arpl
daa
pop
cwtl
out
sub
daa
imul
sbb
or
lods
aas
mov
sti
and
add
inc
jnp
push
sub
int
int3
out
add
jl
inc
imul
jne
lods
mov
nop
cmp
cmp
push
or
out
outsl
cmp
je,pn
bound
push
imul
adc
xchg
push
push
je
das
jnp
pop
enter
mov
out
aaa
ss
lcall
imul
push
scas
mov
ret
sbb
mov
jp
fwait
sub
test
dec
outsl
sbb
test
add
sbb
inc
fwait
loopne
mov
inc
sub
xchg
mov
mov
stos
push
jecxz
shrb
jno
adc
sti
loopne
dec
fs
xor
es
call
mov
in
pop
mov
pop
push
jae
leave
xchg
and
inc
xchg
mov
inc
jno
out
loope
and
adc
mov
lret
nop
lahf
popf
xchg
dec
pop
xor
pop
adc
mov
push
adc
xor
data16
ds
add
mov
dec
ret
enter
orl
ret
mov
test
push
gs
adc
cmp
or
xor
pop
xchg
mov
pop
sub
mov
sbb
sbb
push
into
sub
out
jns
add
les
lahf
pop
or
or
adc
sub
lcall
xor
mov
dec
pop
inc
fmull
sub
add
popa
fstpl
bnd
and
subl
dec
push
or
sti
cmc
ficoms
adc
mov
add
je
imul
jg
sahf
sub
gs
movl
cld
or
inc
pushl
fbld
jns
jp
lods
lahf
mov
fcomi
jmp
mov
stc
lcall
or
mov
enter
and
jl
icebp
inc
in
mov
inc
fwait
movl
cmovnp
sbb
jecxz
push
negl
movsl
call
cmp
leave
scas
sti
test
mov
sub
pop
movsl
xchg
scas
mov
xlat
fstl
idiv
scas
stos
testb
orb
scas
shll
test
rolb
xchg
jecxz
xor
pusha
lret
push
jnp
or
lcall
lcall
dec
pop
cli
push
push
bound
cmp
sbb
lahf
push
pop
inc
sbbb
push
mov
arpl
das
insb
pop
cmp
sbb
faddl
xorb
xor
cmpsb
or
leave
cmp
xor
arpl
sub
jmp
sbb
in
add
nop
dec
push
out
xlat
das
add
scas
xor
mov
ds
icebp
loopne
nop
sub
inc
push
inc
and
jmp
mov
fstps
jecxz
adc
or
popa
mov
enter
test
int
icebp
sub
and
add
pop
fnsave
push
xor
or
xlat
call
dec
lcall
mov
out
add
fists
lods
ja
test
push
cltd
push
or
xor
adc
sub
call
cmp
cmp
adc
dec
inc
and
xchg
repnz
call
cwtl
iret
cmc
shl
push
sub
xchg
roll
leave
lds
cmpsb
mov
pop
popa
in
inc
jecxz
das
ja
scas
sub
cmp
mov
inc
add
lods
cmpsl
mov
pop
int3
inc
and
pop
fs
clc
lock
mov
jmp
and
mov
jo
pop
daa
movsl
dec
push
sub
add
xchg
xor
adc
testl
arpl
jmp
mov
enter
push
mov
sub
adc
pop
inc
and
and
mov
jge
in
pop
es
imul
mov
push
mov
loope
xor
jbe
push
mov
add
pop
xor
xchg
sarb
lea
fdivrp
test
pop
cmp
dec
mov
jns
out
jbe
jb
pop
sub
das
push
push
mov
scas
and
and
shr
push
sbb
sbb
sub
mov
xchg
xchg
sub
push
adc
data16
filds
stc
icebp
push
cmp
and
adc
mov
push
stc
insl
imul
repz
cli
dec
inc
mov
rclb
rcrl
push
pop
out
jl
xor
or
outsl
mov
shr
jg
sti
jnp
xchg
xchg
or
shll
lcall
aad
push
stc
seta
push
std
sti
cmp
cmpsb
aas
xor
cwtl
push
fcompl
nop
dec
cmp
mov
lods
out
pop
fildll
insb
and
xor
mov
or
jg
test
dec
andb
inc
sbb
enter
mov
and
rorb
imul
leave
out
push
pop
popa
in
gs
jbe
popf
jnp
cmp
sbb
addb
int
movsl
pop
jbe
mov
pop
fidivrs
pop
or
les
or
popf
mov
sub
inc
xchg
repnz
cmp
ret
pop
cli
xorb
std
pop
pop
jno
push
shll
sub
cmp
cmc
test
push
fcompl
xor
and
leave
insb
scas
xor
mov
insl
and
pop
out
test
and
sub
cmp
int3
inc
adc
icebp
sahf
pusha
mov
das
in
xchg
test
jae
xorb
jmp
jno
pop
xchg
adc
push
sbb
mov
leave
aad
loop
sub
iret
push
mov
cmp
lea
mov
dec
outsb
pop
inc
mov
mov
ret
jne
notb
mov
inc
out
daa
loope
adc
mov
outsl
sub
sti
dec
sbb
ja
push
idiv
and
ds
lock
scas
or
jecxz
cmp
orl
inc
fldcw
xor
sbb
lods
sub
mov
sub
lods
out
sub
scas
mov
lods
add
cld
insb
add
mov
into
xor
or
xchg
or
and
adcb
dec
adc
ljmp
adc
and
mov
test
js
and
arpl
adc
add
loop
fadd
xchg
mov
test
xor
popf
cltd
lods
sahf
lret
cmp
in
sbb
dec
jbe
or
scas
nop
testl
mov
sbb
es
ss
or
sbb
pop
in
loopne
out
and
and
int3
aam
mov
iret
adc
testl
adc
es
in
jb
repnz
enter
repz
jno
xor
push
cmp
bound
sbbb
add
outsb
xchg
cmp
sbb
and
cmp
sbb
and
inc
xor
movsl
cmp
dec
xor
sti
inc
iret
lahf
sbb
pop
into
scas
mov
imul
iret
mov
jbe
xchg
lret
jge
fsubl
mov
jecxz
rolb
pop
rol
adc
sbb
daa
dec
xor
rol
push
push
aas
mov
pop
fstpt
mov
jp
pop
jae
or
and
xor
xchg
or
scas
adc
fnstenv
in
xchg
xchg
arpl
lahf
out
pop
mov
sbb
mov
or
icebp
xchg
jbe
xchg
push
out
dec
rcrb
and
sti
je
je
mov
dec
imul
repnz
fdivr
xorl
mov
imul
mov
cmc
les
dec
int3
inc
dec
ss
call
jnp
stos
xchg
add
ljmp
in
sub
out
je
pop
dec
mov
fwait
xor
xor
adcb
iret
sbb
or
jle
insb
adc
xor
popf
emms
aaa
movsb
cmp
jne
or
cmp
daa
fisttpl
jo
mov
rcll
mov
int3
inc
add
stc
call
outsl
in
repnz
roll
jno
icebp
data16
pop
clc
ljmp
js
leave
shlb
stos
sbbl
scas
frstor
mov
add
fbstp
fwait
pop
jns
xor
movsl
xchg
adc
and
mov
aad
sahf
mov
std
bound
or
cmp
dec
into
movsl
out
jo
ret
lea
add
outsl
sub
cmp
or
inc
mov
sbb
push
xchg
fs
mov
movb
ljmp
daa
shll
inc
loop
pushf
cmpsb
int
into
loopne
pop
mov
mov
fwait
imul
sbb
mov
mov
mov
outsl
mov
xchg
adc
xchg
inc
aam
loopne
cld
inc
xor
push
xorb
inc
cltd
mov
fucomp
pop
xchg
gs
icebp
aaa
lds
data16
mov
inc
adc
sbb
into
pop
mov
push
cld
pop
xchg
xchg
nop
sub
mov
pop
bound
add
and
gs
push
lcall
lret
imul
jae
jg
sub
sbb
xor
orl
scas
scas
cwtl
out
inc
push
and
jle
push
imul
movsl
xor
and
je
sub
add
add
mov
or
xchg
stos
bt
icebp
pop
and
stc
idivl
lret
fsubr
xor
dec
cli
jne
jmp
out
inc
jle
push
pop
jge
lods
fxch
and
xchg
jp
lcall
fcmovnbe
mov
push
xchg
sub
adc
xor
and
add
fcoms
ljmp
mov
lods
xor
sbb
sarl
sbb
call
pop
mov
mov
pop
stos
test
mov
jne
pushf
scas
test
pusha
inc
imul
fnstcw
cwtl
addr16
adc
addr16
adc
ss
adc
inc
xchg
cmp
icebp
sub
mov
ficoml
jnp
lret
sbb
mov
sbb
and
add
loopne
je
rcrl
jbe
insl
mov
bound
pushf
mov
xchg
repz
pop
mov
xor
dec
mov
pop
outsl
jnp
dec
sub
cmp
pop
aad
pop
and
cli
cmc
dec
shr
jp
xor
inc
pop
xor
test
test
mov
loop
xor
bound
lcall
cmp
dec
roll
push
push
adc
push
sbb
fbld
jg
ja
push
ljmp
cli
shrl
jg
popa
push
ss
adc
in
cmp
xchg
push
cmpsb
out
mov
test
cmpsb
andb
pop
mov
clc
inc
movsb
mov
mov
in
jne
dec
pop
mov
not
ja
push
es
mov
push
in
into
shll
add
gs
cmp
cmc
sbb
jo
dec
mov
pushw
mov
mov
ffree
push
sbb
mov
jno
xchg
fcmove
scas
xchg
xchg
std
mov
xchg
leave
mov
push
cltd
insb
sbb
lods
and
jge
jg
xor
or
xchg
or
inc
adc
xor
sahf
outsb
mov
push
or
cld
pop
in
out
ds
cmpb
jne
sub
adc
mov
xchg
fs
js
aas
je
repz
fidivrs
outsb
movsb
sbb
les
add
push
push
xchg
mov
movsl
adc
mov
cwtl
dec
inc
lcall
aam
adc
outsl
adc
adc
fnstsw
pop
rep
cmp
and
sub
test
dec
adc
clc
pop
cmp
dec
mov
sti
jnp
adc
sbb
adc
fdivl
out
insl
clc
and
cmpsb
rcrl
dec
xchg
xchg
scas
lret
sub
faddl
or
je
fsubs
int3
sbb
loopne
mov
ljmp
jecxz
inc
sbb
cmp
jle
push
mov
or
pop
jbe
adc
mov
inc
enter
repnz
out
fcomps
roll
hlt
lods
lds
mov
dec
xchg
ffreep
add
shll
lock
mov
pop
loope
jae
les
clc
mov
test
in
gs
ficoml
movsl
mov
lods
jmp
cmp
int3
test
lods
test
adc
in
loope
sub
add
stc
and
jns
les
add
sahf
mov
pop
sbb
mov
repnz
stos
jb
mov
push
lret
scas
bound
lods
xor
int
cmp
dec
mull
loop
repz
xor
sub
mov
div
jno
or
mov
add
hlt
mov
fs
pop
shl
and
jge
mov
mov
push
fstpt
add
lods
pop
test
pusha
xchg
push
popl
subb
movsb
shlb
mov
pusha
mov
or
aad
es
pop
popf
mov
sahf
adc
enter
xchg
adc
das
xor
dec
pop
xchg
popa
jmp
jge
rol
xchg
add
adc
test
stos
cmp
cltd
jne
test
cmp
push
cmp
pop
push
test
imul
push
inc
xchg
sub
cmpsb
insl
lcall
mov
sub
inc
sar
mov
test
and
movsl
lahf
add
cmp
das
fsubr
imul
into
lea
pop
sub
dec
push
mov
sub
dec
fwait
pop
cmp
push
popa
and
jno
sbb
xchg
mov
sbb
ret
inc
ja
push
mov
sbb
fildll
aaa
fcmovnbe
xchg
pop
gs
int
orl
fnstcw
loopne,pt
stos
mov
loope
enter
sbb
les
cwtl
mov
mov
je
pop
mov
mov
movsl
dec
push
or
out
shl
enter
push
das
lcall
test
push
mov
movsl
and
hlt
push
in
mov
arpl
addl
push
push
repz
jne
sti
pusha
jge
cmp
ljmp
fcmovbe
sbb
daa
sbb
lock
scas
fs
inc
inc
dec
inc
or
int
jmp
pop
or
mov
imul
negl
sbb
or
jbe
xor
push
add
mov
inc
bound
push
shrb
lea
push
js
push
sub
cmpsl
xor
das
inc
cmp
inc
nop
mov
mov
inc
adc
fs
lcall
sti
pusha
xor
daa
mov
pushf
pop
cmp
mov
or
mov
filds
cli
popf
imul
dec
dec
jae
movb
rol
int3
cmp
pop
pop
jecxz
fimull
xchg
adc
psubd
pop
test
dec
add
mov
jo
iret
jmp
fdivrl
enter
add
cmp
lea
xchg
pusha
mov
enter
sbb
adc
jb
js
jne
dec
jne
inc
sarb
mov
inc
xor
inc
mov
call
imul
adc
lcall
scas
sahf
fistpl
test
cmp
sbb
lods
inc
add
mov
loop
aam
sub
repnz
pop
dec
push
aad
imul
ljmp
mov
scas
add
jl
lods
leave
and
push
or
fldenv
out
dec
mov
mov
mov
jnp
test
mov
int
in
or
add
pushf
lret
cmp
loope
sub
mov
sbb
cmpsb
rcr
mov
outsl
xor
mov
mov
movsb
out
jmp
lods
test
jmp
sbb
std
sahf
lahf
pusha
push
push
adc
jae
xchg
cld
imul
inc
xor
arpl
sub
add
mov
movsl
pop
imul
adc
hlt
test
ret
movsb
mov
adc
and
push
test
data16
adcl
xor
add
aas
mov
je
jl
repz
and
mov
jnp
jmp
sbb
std
nop
stos
movsl
in
xchg
mov
daa
jge
daa
out
test
dec
push
bound
xchg
scas
lahf
aad
leave
out
scas
sbb
xchg
cmpsl
xchg
lea
add
sbb
icebp
add
and
sbb
push
cmp
das
mov
inc
mov
rolb
cmpsb
push
jo
les
lcall
sbb
sub
dec
inc
push
fisttpl
stos
stos
arpl
jns
xchg
inc
es
xlat
pop
mov
in
xchg
or
mov
xor
les
cmpsb
dec
ljmp
les
lods
and
in
mov
pusha
call
jns
sbb
shr
adc
mov
out
dec
cmp
mov
faddp
call
aaa
sbb
out
pusha
in
mov
xor
dec
mov
sarb
xor
pop
arpl
lods
add
fcoml
jnp
jecxz
sub
fdivrl
adc
in
mov
sahf
sahf
lods
movsb
push
cmp
popa
add
mov
les
jle
mov
sub
inc
push
rolb
cmp
in
iret
fidivrs
xchg
and
jbe
jge,pt
push
cltd
xchg
add
adc
mov
mov
fisttpll
stos
scas
fsub
push
fwait
pop
jb
pop
bound
mov
rcl
jne
jns
mov
inc
dec
mov
inc
lret
iret
sub
mov
lods
push
cmp
test
and
int
or
xor
pushf
sbb
xor
push
mov
fs
scas
and
xchg
int3
inc
ret
in
mov
dec
cwtl
inc
xchg
and
sbb
aam
daa
or
cmp
jmp
adc
mov
orl
add
insb
adc
mov
inc
popf
jae
dec
mov
xor
in
xchg
leave
dec
push
xlat
es
cmp
repnz
sub
je
cmc
int
adc
clc
rorl
lods
enter
jnp
outsl
sahf
stc
stos
in
or
sub
pushf
inc
leave
into
into
adc
adc
aad
mov
jle
cmpl
cmp
push
inc
push
mov
inc
inc
or
jecxz
ja
mov
test
mov
mov
push
cmp
out
inc
xor
js
mov
and
xor
push
and
xor
pop
mov
fstl
mov
fsubs
push
das
sti
int
repz
lods
es
jo
pusha
mov
movsb
roll
subl
and
shl
dec
movsb
clc
add
mov
and
mov
cmp
jb
adc
push
mov
clc
adc
mov
xor
out
sar
je
or
outsb
lcall
inc
repz
pop
pop
dec
lret
xchg
and
dec
pushf
fldenv
cli
sub
xchg
test
adcb
jnp
xchg
mov
mulb
repnz
std
pop
sub
movb
jmp
adc
or
mov
push
lods
test
push
mov
pushf
inc
mov
inc
fstl
dec
cmp
pop
jbe
aad
rcrl
icebp
imul
daa
inc
shll
fiaddl
and
fidivrl
ret
sti
in
out
out
xor
xor
cmp
jo
jp
sub
inc
adc
push
adcb
push
fisubl
push
call
insl
and
push
fnstcw
xor
sub
cmp
loopne
cltd
popf
mov
std
das
or
enter
mov
xchg
cltd
in
sbb
js
push
cmpsl
mov
rcl
xorl
xchg
adc
xchg
and
dec
dec
add
cmpsb
xor
shrb
adc
and
dec
adc
cmp
cmpb
sub
push
lock
sub
mov
popf
xor
or
xor
aas
mov
pop
mov
xor
dec
gs
mov
aaa
jnp
dec
jo
or
inc
in
jge
aad
push
movsl
insl
dec
cltd
sbbb
xor
decl
sbb
or
test
and
ds
mov
mov
ret
and
cmp
movsb
fwait
xchg
es
pop
cmp
lcall
mov
push
pusha
adc
mov
movsb
fidivl
insl
xor
xlat
nop
add
dec
cmp
push
hlt
bnd
mov
mov
imul
cmp
pop
shlb
addb
pushf
or
pop
div
mov
jne
loopne
jae
mov
out
mov
sub
cmpsl
cmpl
popf
out
mov
xchg
andb
push
mov
sbb
mov
jp
mov
pop
cmpsb
xchg
mov
popa
add
sub
ja
ds
movsl
mov
ret
mov
sbb
fsubrl
out
sub
sbb
stc
fldl
jnp
jno
pushf
cmpsb
dec
das
andb
push
inc
push
push
in
pushf
loop
xor
shlb
mov
sbb
mov
imul
sbb
cmp
mov
outsl
xor
rclb
popf
cmp
and
pop
add
shrl
cltd
aad
test
fwait
pop
jle
add
and
or
test
test
shrl
mov
mov
fisubs
sub
dec
sbb
repnz
pushf
fsubrp
orl
inc
cmpsl
cmc
cmpsl
dec
adc
movl
push
aad
leave
fmuls
and
mov
data16
cmpsl
andl
imul
or
and
lahf
enter
repnz
stos
mov
fstpt
xor
loope
push
adc
push
pusha
aad
rcrl
mov
sbb
push
pop
push
or
repnz
jl
out
push
shl
dec
jl
push
daa
mov
mov
aad
dec
bt
xchg
arpl
fwait
mov
pop
aad
jp
and
rorb
or
stc
sbb
dec
lds
jno
adc
in
enter
xchg
and
push
dec
pop
mov
add
add
rcll
adc
mov
stos
dec
jbe
pushf
xor
or
jnp
ret
sub
imul
popf
sbb
and
xor
lret
push
cmp
fs
mov
or
shlb
xchg
fucomi
rcrl
push
fdivr
lret
int3
mov
and
addr16
xchg
cmp
test
cmp
inc
inc
fs
or
sub
push
mov
out
add
ss
test
andl
mov
jge
out
sub
mov
aas
pop
xchg
xchg
add
mov
mul
fidivrs
popf
sub
push
lret
iret
push
test
jle
daa
int
test
xchg
lcall
lcall
jne
dec
sti
pop
test
mov
push
inc
mov
repz
or
xchg
stos
cld
or
xor
stc
sbb
ret
int
imul
scas
mov
mov
aas
xchg
sahf
cmpsb
xchg
lahf
andl
lret
jp
adc
lahf
pop
sub
cmp
hlt
jecxz
and
mov
or
sub
xor
jge
sub
dec
xchg
xor
sub
ficomps
dec
scas
repz
inc
xor
shrb
hlt
mov
lock
pop
aaa
mov
xor
mov
cmpsl
jl
push
stos
add
and
add
adc
jmp
orl
sub
test
icebp
movsb
fwait
sahf
and
test
push
cwtl
dec
fsubrl
les
popa
jbe
notb
cmp
icebp
movntq
xor
jne
jge
repnz
jp
sarl
or
notl
es
add
sbb
mov
sub
dec
jp
lock
sbb
xchg
jg
add
cmpsb
stos
leave
scas
in
push
ljmp
or
xchg
add
lret
or
je
fs
rorl
andb
sahf
divl
lods
and
dec
sbb
das
dec
jle
or
js
inc
bt
mov
lcall
mov
rorb
sarb
fwait
cmp
jmp
pushf
imul
outsl
or
cmp
sub
or
pop
rorl
jnp
dec
dec
add
cmp
mov
mov
dec
jge
dec
mulb
add
mov
insl
cmp
xchg
lds
int
enter
push
mov
mov
fwait
push
mov
js
adc
add
sbb
sbb
cwtl
xor
andl
hlt
jbe
push
xchg
xchg
push
ss
add
fidivs
fsts
pop
jbe
or
push
push
pop
push
popf
dec
aaa
dec
icebp
jae
mov
mov
popf
in
inc
mov
lea
loop
fnstenv
inc
cmp
mov
stc
and
fs
cmp
mov
inc
add
mov
mov
scas
jmp
leave
cltd
outsl
ret
push
cmp
mov
fisttpll
add
xor
rcrb
cmp
mov
adc
dec
je
xchg
sbb
xor
add
jns
mov
les
loopne
jp
dec
jno
pusha
das
pop
sti
jge
xor
inc
xor
sti
mov
sub
pop
mov
lcall
stc
xor
js
gs
stc
ffree
jg
cmp
inc
push
outsl
jle
stc
ficoms
jno
sub
repnz
in
in
aad
jo
roll
xchg
sub
fsubrl
rol
movsl
inc
xchg
icebp
lcall
incl
sub
jge
xor
mov
loopne
xchg
aas
nop
jl
push
and
movsb
mov
into
add
pushf
test
mov
bound
in
adc
xchg
add
ficoms
imul
fs
sub
in
je
add
inc
inc
leave
daa
pop
cmpsl
int
pop
ja
or
jp
hlt
push
sbb
lds
mov
jge
pop
stos
repz
xchg
clc
lahf
mov
xchg
repnz
inc
nop
es
pop
outsb
ret
jmp
cmp
stos
outsb
add
or
mull
aaa
andb
xor
imul
xchg
pop
mov
jo
sbb
pop
and
sti
mov
lcall
aaa
loop
or
movsl
lcall
into
push
sbbl
push
in
outsb
addl
pop
pop
xchg
jecxz
sti
fisubrl
gs
in
test
xchg
inc
mov
xchg
sbbl
mov
enter
in
std
fcomps
aam
or
stos
pop
in
out
xor
mov
or
mov
add
mov
sub
std
stos
sbb
lcall
out
xor
dec
es
test
clc
xchg
fs
ljmp
std
fwait
jns
inc
outsl
les
push
popa
xchg
inc
outsl
enter
inc
sub
sti
push
jmp
or
test
icebp
cmpsl
mov
adc
mov
mov
adc
idivl
cli
jbe
xor
xor
mov
lahf
push
scas
jmp
jne
pusha
inc
push
dec
xor
ret
or
jns
adc
pop
outsl
daa
cmc
or
cmp
lcall
fwait
out
gs
fwait
aam
mov
iret
push
mov
push
pop
adc
int3
insl
daa
sub
mov
mov
mov
dec
stc
and
imul
xchg
or
push
pop
cmp
shrl
bound
sub
enter
scas
mov
addl
xor
pop
push
mov
test
inc
frstor
test
scas
por
lods
pop
test
les
repnz
lods
mov
pop
stos
mov
jnp
aam
push
and
lea
out
cmc
sub
adc
jle
and
int3
decl
jg
mov
ret
loop
out
lds
in
in
adc
fidivrs
shll
mov
lahf
pop
lock
jle
xor
push
pop
ret
mov
pop
cmpsl
aas
bound
mov
lcall
fcmovnb
pusha
fdivl
add
fwait
inc
mov
pop
movsl
xor
xchg
lahf
insl
jmp
mov
popf
xchg
push
mov
jnp
lds
and
cmp
mov
mov
push
adc
jnp
imul
jp
fisubrl
cmp
in
sbb
mov
or
inc
cmp
sub
out
scas
push
inc
stc
xchg
xchg
sti
scas
sub
cmpsl
pop
loopne
mov
out
rcll
adc
dec
int3
or
das
sub
mov
shlb
ret
jbe
sub
jno
dec
push
xchg
stos
cmpsb
adc
pop
call
xchg
mov
cmp
adc
jge
sbb
jl
rorl
lods
leave
adc
jno
ret
andb
les
xor
mov
pop
or
mov
out
clc
dec
imul
jo
or
pop
cmp
inc
lret
stc
loopne
cmp
and
and
fldcw
fidivrl
stos
stos
lret
rcr
jle
scas
shll
lds
das
in
jb
pop
int3
inc
lods
roll
sbb
cmp
sbb
sbb
sub
xorl
xchg
dec
mov
jmp
xor
adc
inc
loope
adc
aas
jnp
test
xchg
out
std
repnz
mov
pusha
xchg
mov
sub
inc
push
mov
fisubrs
adc
fnsave
or
add
inc
inc
int3
push
dec
add
shrb
aam
mov
cmp
pop
jbe
in
bound
inc
jb
decl
mov
ljmp
mov
and
loope
cmpsl
in
mov
dec
sahf
and
dec
mov
je
rcrl
mulb
and
jl
inc
negl
inc
xor
scas
aas
mov
push
adc
cmp
add
sbb
pop
ret
daa
push
stos
arpl
sbb
shll
sahf
dec
xlat
or
and
in
cmp
push
mov
jne
sub
movsb
paddd
mov
xlat
gs
js
cmc
jecxz
cmp
sub
rcll
add
pushf
lea
add
add
jmp
lods
lods
jns
leave
std
test
fwait
jp
or
dec
cli
jne
rcl
loope
push
leave
xor
mov
pop
cmpsb
sahf
dec
leave
and
jo
mov
jne
xor
icebp
fsub
popa
mov
fs
add
cmc
push
xor
out
and
loope
and
inc
inc
push
arpl
mov
mov
call
dec
lahf
pop
pop
mov
lret
nopl
dec
jp
or
push
inc
scas
add
imul
adc
xchg
std
xor
sub
mov
imul
pop
xor
jmp
nop
scas
sub
mov
es
cltd
ret
sbb
mov
data16
push
mov
in
inc
and
lods
mov
or
and
pusha
outsb
aaa
test
in
iret
pop
pop
ja
adc
lcall
pop
mov
and
outsl
mov
fwait
xchg
xchg
or
insl
sbb
jo
inc
movaps
jmp
xchg
stos
mov
lret
rcrb
call
mov
pop
push
lock
aam
mov
les
in
xor
inc
test
sti
aaa
das
je
lcall
aaa
lods
add
imulb
fcompl
and
push
clc
outsb
add
pop
inc
sub
int
clc
dec
out
neg
jmp
sbb
das
outsb
imul
mov
movsl
xchg
out
jnp
xchg
mov
pop
pop
cwtl
mov
mov
adc
lods
xchg
ret
sbb
or
and
xor
es
fstps
jae
mov
sub
sub
fsubs
in
inc
mov
xor
cli
shlb
in
xchg
adc
repnz
add
lds
pop
mov
dec
test
or
mov
add
in
jecxz
cltd
paddsw
jbe
mov
xchg
jne
mov
push
add
adc
mov
adc
cmp
int
loop
mov
mov
and
aaa
cld
arpl
inc
les
arpl
mov
movsl
or
sbb
adc
arpl
enter
add
xor
sti
mov
int
jmp
fidivs
inc
sub
adcl
insl
sub
mov
sysexit
test
popf
fdivrp
jle
fistl
mov
xchg
movsl
cs
push
mov
sub
in
fidivl
mov
cmp
in
fcoms
xor
les
repnz
std
in
and
arpl
jmp
jg
pop
rol
popf
and
pop
push
inc
cli
in
jl
xchg
push
lahf
add
mov
out
mov
mov
push
and
fnsave
xchg
stc
mov
pop
fsubrp
ds
ret
in
cmp
xor
clc
xor
mov
pop
fwait
lods
in
sbb
mov
sub
push
sarl
jp
mov
xor
sub
cmc
sub
shr
bound
subl
jbe
mov
jnp
xor
mov
mov
mov
mov
adc
sbb
std
aam
or
and
dec
in
or
add
jbe
call
adc
in
cwtl
jle
ret
cmp
in
scas
dec
cwtl
rorl
das
lods
mov
xor
pop
dec
rorb
cmp
popa
ja
and
sbb
dec
fwait
dec
adc
fstpt
mov
dec
sbb
lock
jg
pop
and
pushf
ds
jl
addr16
xchg
push
int3
in
adc
insb
xchg
xor
aam
dec
rcll
clc
inc
push
icebp
mov
clc
adc
and
or
stos
pop
pusha
mov
outsb
lcall
sbb
mov
push
nop
sub
add
pop
push
cmc
pop
sti
das
xlat
cs
pop
out
pop
pushf
mov
nop
pop
jno
adc
in
out
mov
and
pop
ss
pop
fisubrs
jp
pop
push
adc
fistpll
out
fs
adc
jno
and
dec
dec
rorb
xor
jg
adc
add
fildll
and
xorl
push
ja
in
jno
shlb
inc
dec
push
mov
inc
push
ds
xchg
cmpsl
cwtl
sub
mov
add
sub
fwait
xor
shlb
and
dec
aad
shll
aad
cmp
add
jle
add
add
push
push
pop
jno
clc
pushf
xor
mov
imul
popa
dec
mov
mov
or
or
stos
inc
mov
push
insl
in
lods
in
adc
cmpb
mov
dec
mov
hlt
popf
push
mov
pusha
movsb
das
inc
int3
push
inc
sub
movsb
test
mov
dec
out
loope
inc
jns
pop
cwtl
movsb
push
test
lock
xor
ret
shr
pop
jge
add
cli
lock
cli
jb
clc
pop
imul
and
out
mov
push
push
sub
test
adc
mov
rcr
jnp
js
inc
jb
bound
and
pop
dec
jp
jnp
or
or
cld
pop
xchg
dec
call
push
xor
adc
xor
sub
das
popa
adc
jg
movsl
mov
pop
dec
jge
in
in
call
or
push
mov
and
push
xor
jns
xlat
adc
xchg
lret
int
clc
fisttps
pusha
jno
cmc
test
lock
in
push
shrb
in
push
out
cmp
arpl
sub
stos
pop
pop
cmpsl
pop
outsl
mov
leave
push
aas
lea
icebp
ret
cld
in
in
add
addl
ficoms
jp
imulb
kmovb
jp
adc
push
cmp
pop
xchg
dec
popf
scas
xchg
jmp
mov
imulb
sbb
adc
sbb
imulb
sub
xchg
adc
arpl
push
push
in
add
imul
clc
in
inc
jl
push
std
nop
test
gs
cmpsb
aas
mov
mov
inc
subb
scas
pusha
test
jno
scas
pop
pop
pop
inc
aas
push
push
ror
push
mov
shrl
add
mov
into
push
lods
call
jle
mov
pop
sti
inc
sbb
lods
inc
sbb
loop
push
lret
jbe
lea
or
in
scas
fcmove
pop
shl
decl
repnz
out
mov
adc
xor
mov
js
popa
sbb
aaa
jg
xor
orb
gs
xor
into
dec
lcall
ret
mov
xor
xor
inc
dec
lahf
test
pop
mov
pop
data16
sbb
frstor
lret
and
inc
pop
lcall
sub
push
pop
xchg
add
mov
sbb
add
mov
stos
shlb
xchg
lahf
loope
test
push
xchg
movsl
pop
push
add
clc
lahf
mov
sbb
dec
jns
mov
sub
inc
jb
in
sub
incl
mov
out
lret
insl
ret
push
lret
xchg
sbb
clc
pop
jmp
daa
mov
out
loopne
ret
nop
pushf
jno
cmp
jle
ret
scas
test
std
mov
mov
push
or
inc
add
sbb
xor
ljmp
shrb
add
testl
insb
lock
fisubl
test
push
add
xchg
or
or
and
fdivrl
test
fistl
cmp
dec
xchg
lahf
outsb
or
and
jnp
and
outsl
pop
dec
adc
pushf
xor
and
cwtl
outsl
and
decl
sub
dec
fisttpll
int
pop
xlat
push
fldt
insb
mov
orl
pop
popa
or
daa
mov
jb
test
cmp
mov
push
pop
fwait
and
ret
scas
xchg
adc
push
dec
adc
xchg
pushf
lahf
mov
lock
icebp
addr16
mov
mov
cmpsl
iret
js
mov
mov
cmc
mov
data16
or
pop
push
sbb
push
mov
inc
cltd
mov
shl
sbb
add
sbb
popl
scas
or
stos
or
fidivs
mov
push
dec
mov
mov
insb
jnp
loope
and
test
ret
stos
mov
inc
jns
jb
or
sub
cmp
mov
jnp
sub
push
fmuls
jecxz
ret
mov
sbb
test
xchg
js
loope
stc
bound
repnz
or
inc
jne
and
gs
and
fistpll
lret
dec
mov
dec
inc
fs
pop
sub
roll
mov
lcall
dec
sub
mov
push
jns
imul
into
aas
inc
or
xchg
jnp
insl
inc
negb
mov
fcmovu
sbb
sbb
lods
loop
in
in
xor
and
repz
daa
pop
jb
adc
dec
ret
sbb
je
loopne
xor
pop
mov
cli
cmpb
mov
sbb
cmp
fisttpl
int
ja
add
jl
push
inc
lret
jbe
rcrl
adc
pop
pop
mov
fistl
jo
mov
cmp
mov
fnstsw
xlat
call
xor
xchg
fmuls
ds
inc
inc
int3
inc
pop
mov
leave
js
js
ds
aas
xchg
es
call
xchg
cmpsl
or
add
cmp
push
insl
decl
pop
repz
jo
sbb
loopne
or
mov
mov
popa
push
jno
push
push
out
jno
mov
mov
jmp
jne
cltd
decl
sub
repnz
xchg
add
out
cmp
addr16
rorb
test
sbbl
cmp
sahf
test
out
sub
adc
clc
push
jne
loope
mov
xchg
stos
enter
inc
popa
lea
test
aad
xor
jo
cmp
add
setl
mov
in
lock
and
call
orl
test
aaa
xor
sar
cmc
dec
mov
icebp
insl
enter
adc
inc
ret
mov
xchg
inc
gs
in
test
roll
pop
adc
push
dec
pop
mov
or
clc
sub
xor
lahf
les
imul
and
xor
ret
lds
xor
inc
popf
push
xchg
out
cli
adc
mov
xchg
shlb
dec
jl
jmp
cmp
cmp
xorl
out
rcll
inc
jae
imul
jg
insl
mov
cli
cli
movb
fdivr
sbb
outsb
jmp
in
idiv
and
insb
in
and
sarl
movsb
jge
inc
mov
loop
stos
sbb
int
out
loope
jecxz
cmc
lock
and
push
xlat
or
dec
div
jl
xor
jg
ljmp
mov
pop
rorl
addl
mov
mov
out
fisubs
lcall
outsl
sub
xchg
loop
sbb
sahf
add
sbb
lods
sub
sub
xchg
inc
lods
push
jno
stc
sub
jle
jno
lcall
call
mov
fwait
ret
xchg
loope
push
jp
outsl
popa
shlb
jae
insl
test
xor
jb
adc
or
push
jg
adc
xchg
jmp
xchg
or
xor
inc
pop
icebp
loopne
xchg
push
fcmovbe
lret
xor
mov
sti
pop
cwtl
xchg
in
repz
stc
aad
inc
repnz
mov
or
jmp
in
ficomps
lds
or
jnp
push
push
out
cmp
enter
push
shlb
jge
fdivrl
dec
and
dec
andl
test
xor
inc
mov
icebp
adc
divl
imull
and
mov
add
pop
lret
mov
fs
xor
lret
negb
or
ret
sti
insl
enter
rclb
inc
sub
mov
sub
loope
int3
pop
loope
push
and
push
inc
jae
clc
enter
daa
fdivrs
xchg
inc
jae
lret
jge
push
je
cmp
fimull
aas
jmp
jno
push
aam
xchg
popf
sarl
imul
and
adcl
out
mov
shrb
adc
sub
jg
jns
iret
repnz
dec
mov
sbb
sub
xor
push
mov
inc
test
lahf
dec
inc
add
in
data16
sbb
data16
dec
cmp
rolb
in
xor
mov
sahf
xor
inc
xchg
lods
aad
sub
push
movsb
jb
cmc
cmpsl
mov
sub
mov
jecxz
pop
dec
xchg
push
lds
adc
sub
les
imulb
sbb
mov
jbe
int3
pop
ljmp
sbb
adc
sbbl
inc
rcl
out
or
cmp
loope
jae
cmpsb
xchg
push
enter
mov
cmc
call
sbb
dec
xor
adc
mov
ja
cmpl
sbb
loop
lds
out
pop
mov
inc
sarb
jmp
mov
sub
js
mov
pop
xchg
adc
fcom
popa
mov
jbe
daa
sub
and
mov
cld
dec
or
sbb
loopne
mov
sbb
add
mov
dec
pop
xlat
xchg
fdivl
or
loopne
fistpll
or
incl
mov
stos
pop
pop
adc
scas
out
push
pop
inc
adc
sahf
fcmovnbe
pusha
jle
push
stc
push
xor
adc
cld
addb
mov
std
xor
cli
inc
add
adc
pop
ds
adc
xchg
mov
adc
xchg
xchg
lock
stos
mov
scas
jmp
xor
pop
sbb
nop
dec
rcll
mov
aas
clc
mov
push
mov
dec
cmc
ljmp
fnstenv
es
stos
add
mov
dec
push
daa
ja
aad
jp
rorb
push
cmp
rcrl
cs
es
xchg
daa
and
call
and
fidivl
mov
jl
lret
sub
adc
xchg
mov
or
mov
push
dec
sub
adc
cltd
sbb
xor
sbb
je
loope
sti
adc
add
orb
inc
xchg
in
lods
rclb
add
mov
dec
cli
shlb
cld
loop
jle
sbb
push
out
pop
and
int
sti
push
add
and
cltd
cmpsl
xchg
xor
adc
xor
out
sub
js
dec
outsl
sub
push
mov
stos
lcall
int3
xlat
cmp
dec
mov
ud0
lret
sbb
scas
das
cwtl
jmp
dec
std
leave
inc
call
test
out
call
loopne
lret
xor
push
cli
fcoms
addb
add
insb
jmp
and
out
sub
add
js
cmp
dec
in
or
fstp
xchg
mov
xchg
mov
mov
orb
add
test
push
scas
xor
aad
mov
out
mov
dec
fistpll
loopne
int
sbb
int
xor
imul
loopne
pop
and
jge
out
xchg
pop
movsl
mov
push
shrb
leave
shlb
sbb
test
xchg
cld
dec
xchg
inc
cmp
ficomps
mov
out
pop
adc
xchg
or
xor
cs
mov
mov
and
add
jb
cld
ret
out
fadds
fucomip
mov
pop
in
mov
je
xor
add
fiadds
jne
call
lods
aam
out
dec
outsl
add
notb
sbb
or
inc
xchg
xor
mov
rcrb
out
leave
xor
cmp
push
pop
push
mov
sbb
fucomi
xlat
or
cmpsl
lret
cmp
sahf
lds
sub
sbb
pop
pop
int
mov
clc
xchg
fidivl
sub
insb
xchg
clc
sub
or
shr
xchg
not
aam
and
loop
out
cmp
loopne
xchg
lea
cld
sti
movl
jge
cs
sbb
dec
push
outsl
mov
std
insl
cwtl
popa
xchg
sbb
rcrl
jl
cmp
pop
push
add
or
fwait
mov
bound
cmp
addr16
or
rcrl
into
sbb
arpl
cwtl
fs
pushf
xor
scas
lock
inc
shl
mov
cld
mov
jp
push
ds
call
jp
icebp
dec
dec
cld
stc
inc
inc
fidivs
lods
push
push
cmp
mov
fxch
inc
sub
movsb
pop
dec
dec
mul
call
je
stos
imul
je
cltd
mov
hlt
clc
lods
mov
rcl
xchg
test
jl
stos
mov
into
adc
sbb
dec
push
rol
fildl
cwtl
xor
imul
insb
jp
xchg
or
aad
frstor
jl
adc
sbbb
fldcw
or
sbbb
mov
xchg
cmpsl
add
test
cmp
sbb
nop
xchg
mov
mov
jg
out
lcall
sub
ja
add
sub
lods
dec
sbb
das
adc
repnz
cmpsb
inc
dec
xchg
xchg
mov
pop
test
dec
mov
push
stos
movb
shrb
sbb
filds
cli
sbb
cwtl
adc
rclb
rolb
cmpsl
push
fistpll
inc
pop
xchg
popa
cli
sbb
push
or
andl
aad
fnsave
sub
out
daa
mov
flds
les
or
aas
cmpsb
fstpt
xchg
add
inc
fwait
daa
inc
loope
js
mov
scas
out
fmuls
sti
ret
inc
clc
push
mov
sbbb
xor
out
sub
cmp
lret
jl
frstor
test
xchg
icebp
pop
das
inc
push
lea
push
cmpsl
xchg
and
jmp
or
adc
fidivs
mov
mov
rclb
sub
aas
jecxz
xor
subb
movsb
add
pop
dec
mov
cwtl
lahf
and
insl
xchg
mov
push
loopne
lods
lds
test
test
rorl
ja
push
imul
cmc
insb
adc
cld
lea
lahf
add
js
shl
in
mov
fimull
xchg
leave
mov
scas
sbb
movsb
lods
xchg
int
das
lret
cmp
xchg
ror
push
pop
cmp
cmpsl
fnstsw
in
xchg
add
shll
daa
xor
mov
adc
add
pop
arpl
out
cmc
enter
push
in
vmovhlps
js
out
pop
std
or
cmp
xor
scas
popl
mov
mov
and
outsb
ffree
in
loop
mov
and
movsb
jnp
or
push
jp
sbb
sub
mov
cmp
mov
adc
cmpl
dec
xor
adc
aaa
inc
sbb
lcall
and
jbe
int3
aas
jnp
arpl
ret
adc
sarl
fs
test
dec
movsl
and
adcl
jo
fisttps
fiadds
test
or
and
mov
jnp
stos
inc
or
xchg
and
scas
movsl
dec
pop
xchg
cmp
push
repz
xor
aad
dec
push
jp
jnp
scas
setns
fwait
jo
cmp
in
push
pop
call
push
rclb
fimuls
mov
pushl
pop
arpl
pop
or
loop
imul
xor
imul
leave
and
or
cwtl
loopne
in
mov
sbb
loope
loopne
ret
push
pusha
adc
dec
push
adc
xchg
or
adc
jg
aad
pop
popa
shlb
xor
test
mov
pushf
pop
aad
fdiv
rcl
aad
push
sub
cmp
inc
repz
add
jbe
and
in
in
dec
and
push
lahf
leave
ss
enter
xchg
sahf
jns
lret
jae
fiaddl
leave
insb
icebp
insl
sub
pop
dec
and
idiv
daa
pop
movsl
gs
cmp
inc
push
cmp
push
dec
sti
stc
mov
aam
lret
rcrb
ds
mov
in
cli
jae
out
cmp
mov
cmpsl
adc
add
les
fwait
pushf
lds
fidivs
adc
pop
filds
inc
mov
push
xchg
fs
fwait
clc
jne
pop
dec
cmp
adcb
scas
sbb
jno
ds
popf
mov
pusha
and
jl
pop
dec
sbb
insb
shll
dec
stos
faddl
aas
aaa
pop
pop
aam
mov
mov
xor
mov
sub
arpl
mov
pcmpgtw
scas
mov
mov
fwait
aaa
jns
leave
cmp
out
add
call
jns
cmpsb
sub
pushf
popa
dec
pop
add
adc
and
jbe
sbb
adc
nop
fistpll
loope
mov
push
lcall
jnp
pop
mov
nop
inc
jp
lea
ret
loopne
or
outsb
mov
jno
mov
add
sub
test
inc
out
mov
lret
cld
add
stos
sbb
add
lret
fwait
xor
lea
jecxz
nop
shlb
dec
adc
in
mov
test
push
and
xor
push
or
femms
mov
imul
cmpsb
mov
and
loopne
add
mov
movl
test
cld
adcl
or
stos
push
push
or
jp
jle
jb
mov
imull
addps
dec
mov
outsb
mov
mov
incb
data16
sbb
stos
rcrb
mov
cmpsb
aam
lock
and
add
inc
push
xchg
adc
repz
out
mov
gs
iret
dec
idivl
sbb
imul
js
push
rclb
dec
mov
icebp
xor
lret
int3
int3
jnp
dec
ds
adc
sbb
jp
dec
add
mov
inc
xor
mov
lahf
and
andl
test
sbb
jecxz
aad
sahf
xchg
sub
in
into
insl
mov
mov
mov
xchg
jb
repnz
cld
fsubp
mov
mull
dec
test
mov
aaa
lock
adc
in
sbb
out
and
xor
jo
divb
rolb
fsub
ljmp
jbe
xor
jo
lahf
jmp
push
into
cld
xchg
rcrl
rorl
cs
sub
xor
mov
faddl
jl
mov
mov
sbb
cwtl
cmp
push
jb
dec
mov
sbb
and
negl
in
les
jecxz
jl
push
push
and
mov
sub
push
hlt
cmpsl
dec
insb
xor
dec
cmp
shrl
push
sarl
mov
jge
cmp
stos
pushf
mov
jg
mov
inc
sub
mov
jnp
inc
cmp
aaa
hlt
mov
or
or
sti
jne
hlt
gs
xchg
xor
lods
xchg
push
addl
pop
sub
or
sub
aam
xchg
jb
adc
push
jb
movsl
adc
push
adc
test
inc
push
or
xchg
aad
enter
test
mov
test
adc
jb
pop
movsb
stos
sub
jg
rol
test
mov
jp
shrl
lahf
jno
xor
inc
test
mov
enter
cmpsl
in
mov
dec
std
in
movsb
stos
mov
test
loop
fmul
or
jecxz
test
adc
push
jecxz
test
sahf
icebp
repnz
xlat
in
mov
movsl
jg
fiaddl
add
jmp
in
into
push
push
outsb
andl
mov
pop
jnp
mov
push
mov
adc
add
rclb
into
mov
ret
jg
inc
inc
jmp
sahf
call
aaa
aad
xlat
jbe
push
or
insb
push
dec
mov
and
mov
cld
gs
pop
dec
sti
push
xor
call
in
enter
inc
mov
add
in
pop
mov
jp
dec
mov
push
lods
and
cmpsl
lcall
cmp
fiaddl
push
idivb
jg
js
push
add
bound
decl
dec
and
xchg
jmp
inc
fisttpl
add
les
insb
cmp
mov
dec
xchg
mov
dec
inc
mov
adc
lcall
dec
inc
mov
daa
stos
fcomps
push
movsb
loopne
or
xor
loope
xchg
sbb
mov
push
fs
insb
pop
cmc
mov
sbb
test
pop
sub
int3
pop
loop
clc
or
and
and
push
ret
leave
clc
loope
fnstsw
push
sbb
sub
adc
sbb
xchg
fwait
jnp
repz
mov
dec
out
mov
jecxz
ret
aam
stc
sub
fucomp
pushl
imul
mov
cltd
lds
sub
push
pop
jge
cmpsb
movsl
xor
scas
pop
fidivl
mov
lds
add
std
jne
lret
divl
add
dec
mov
rcll
arpl
je
dec
out
es
mov
clc
sub
das
mov
mul
jle
mov
sbb
daa
sub
or
mov
and
add
rclb
mov
das
rclb
adc
pop
push
loop
scas
aam
push
push
sbb
push
mov
mov
or
inc
adcl
inc
pusha
mov
rorb
cmp
push
jg
ja
jle
xor
jl
jmp
sub
lods
sub
dec
jae
mov
push
and
cmpsl
lock
scas
popf
mov
jp
xchg
data16
xor
sahf
jle
lahf
jae
mov
dec
stc
mov
imul
nop
cli
inc
out
in
mov
popa
pop
lahf
addr16
fabs
int3
jmp
mov
jecxz
idivl
jns
filds
jmp
inc
hlt
lahf
cltd
add
test
lret
mov
mov
add
popf
fidivrl
xor
std
das
jb
or
mov
inc
pop
cmp
push
jl
fcomip
push
xor
cmp
insl
loope
sub
adc
xchg
out
adc
mov
pop
cmp
orl
sti
and
mov
pusha
or
subl
cwtl
into
pop
cmp
mov
inc
in
aad
lret
sbb
out
push
mov
jbe
ljmp
inc
inc
jg
mov
xchg
sbb
cmp
pop
pop
mov
lea
daa
jmp
imul
mov
test
push
or
pop
es
cmp
movsb
xchg
xor
imul
mov
push
negl
jne
adcl
js
out
daa
push
pop
jne
sti
adc
sub
ret
andb
dec
daa
push
jae
cmp
inc
and
add
stc
loop
cli
mov
sahf
sbb
insb
mov
jo
insl
js
fwait
xchg
imul
shlb
fs
and
jae
mul
inc
add
sub
mov
ss
out
outsl
mov
test
loop
xchg
daa
jo
mov
test
inc
xchg
and
sti
pop
pop
adc
dec
sbb
inc
jmp
pop
fcoml
jge
lahf
jmp
dec
icebp
push
aad
bound
decb
ret
dec
jbe
cmp
leave
stos
les
daa
sub
mov
cmp
loope
pop
pop
sarb
dec
insb
pop
test
jnp
mov
cld
adc
mov
sbbl
dec
pop
mull
mov
mov
insl
sub
sub
pop
pop
adc
pxor
sbb
jo
pop
push
call
inc
jmp
pop
dec
xor
outsl
ljmp
jns
inc
and
pshufw
xor
or
mov
cmpsl
jo
xchg
pop
stc
fcoml
pop
pop
jbe
lcall
adc
push
fisubrs
ds
mov
clc
mov
fadds
or
mov
mov
daa
xchg
jnp
mov
repnz
mov
cld
movsl
sub
fidivrl
sub
mov
jno
sti
int3
cwtl
jbe
test
xor
test
movsb
cli
out
daa
leave
and
fwait
mov
pop
cmp
cwtl
xchg
ja
dec
mov
mov
int3
clc
adc
xor
inc
mov
imul
cwtl
mov
and
bound
jno
test
sub
fldcw
and
inc
jg
pop
adc
aam
je
ret
mov
jecxz
mov
sbb
mov
pop
das
xchg
mov
and
scas
xchg
add
movsl
mov
clc
aam
test
and
leave
outsb
iret
mov
stc
jp
icebp
xor
pop
mov
pushf
popf
es
push
inc
dec
nop
int3
mov
add
jp
jb
sbb
int
jo
jo
dec
hlt
sysret
push
push
cmp
xor
jnp
and
mov
jnp
jecxz
ficompl
roll
sub
cld
mov
dec
repz
sub
imul
test
inc
scas
scas
mov
pop
lcall
fisttps
xchg
cli
dec
or
mov
pop
call
adc
mov
xor
cmp
incb
lahf
push
and
shrb
pop
inc
sbb
dec
decb
fwait
adc
xchg
pcmpeqb
std
aaa
and
mov
inc
sbbl
hlt
pop
cmc
ficoml
push
sbb
or
pop
mov
jge
dec
dec
push
xor
stc
push
sub
lea
pop
xor
xchg
fcomi
call
mov
mov
in
cmp
fildll
ljmp
and
inc
divb
push
and
dec
push
pop
cmp
mov
add
ret
int3
daa
aam
pusha
lds
loop
and
fnstenv
rcr
pop
out
mov
aas
cmpsl
mov
enter
push
cmovs
outsb
stos
leave
and
test
int3
mov
or
test
pusha
dec
dec
push
mov
dec
jl
pop
js
push
es
or
stc
xor
mov
mov
sahf
movsl
pushf
xchg
and
in
ret
jb
pop
xor
in
imul
lret
pop
xorl
aad
push
mov
lds
cmp
mov
xor
push
lods
or
adc
inc
bound
imul
push
xchg
jo
in
dec
cli
cmp
into
dec
mull
add
sub
sub
sub
loop
add
push
out
xchg
cltd
pushf
inc
lods
es
jecxz
jnp
cmpsl
in
add
pop
icebp
in
mov
xchg
leave
inc
mov
imul
add
enter
sbb
jbe
insb
push
aam
sarl
out
xchg
insl
add
lret
mov
sub
out
fildll
mov
or
xorl
fs
clc
pop
pop
sub
jge
xchg
sub
sbb
repz
mov
clc
nop
pop
jge
adc
push
addr16
sbb
gs
in
psrlq
sbb
test
cmp
sub
and
popa
lock
push
in
ja
inc
shr
sub
stos
xchg
mov
fdivrl
dec
repnz
mov
pop
push
cmc
mov
icebp
repnz
add
pop
cmp
dec
aas
jbe
cmp
fmulp
push
fwait
lea
pop
jp
stc
jmp
dec
orb
inc
sub
cmp
push
es
pusha
lret
addr16
mov
mov
ljmp
adc
je
repnz
mov
cmp
push
cld
mov
jge
lret
push
loope
not
into
cld
mov
jecxz
shlb
sbb
out
lods
dec
add
pop
out
cld
xor
mov
mov
inc
jno
lcall
inc
and
popa
out
xchg
lret
mov
xlat
mov
lods
sbb
adc
push
mov
fmull
shll
mov
cmpsl
xor
loop
arpl
jge
aad
cmp
addr16
je
mov
jb
aad
push
gs
sbb
jno
xchg
les
jl
shlb
inc
inc
push
xor
lods
mov
outsl
cmp
bnd
xlat
push
adc
in
xlat
add
mov
movsb
mov
lods
sbb
enter
sub
fwait
and
sbbb
mov
testl
adc
stos
popa
cmc
bound
and
dec
mov
xor
jecxz
add
inc
or
lods
int
scas
mov
mov
mov
sub
lods
insl
cli
sbb
loop
cli
pusha
add
adc
push
mov
mov
cli
jns
fdivp
mov
xor
adc
ds
sti
jne
dec
insl
das
xchg
mov
push
loop
sbb
cmpsb
test
aas
cltd
lret
mov
push
hlt
aaa
xchg
dec
es
cmpsb
addl
pop
sub
push
into
rorl
lahf
sub
pop
xchg
lahf
jl
loop
sbb
sti
inc
repz
xor
push
fldt
xlat
mov
lcall
jo
aas
jle
pop
sbb
sbb
pop
repz
leave
cld
cmc
push
cmpb
ret
bnd
dec
add
sub
enter
or
repz
cmp
push
xor
cmp
imul
push
cld
ljmp
scas
add
jecxz
push
push
cli
mov
fimull
divl
dec
movsl
xchg
stos
sub
sbb
push
jae
cmp
fcompl
dec
adc
mov
jl
mov
dec
cmp
cmp
jnp
sbb
test
sbb
or
cmp
enter
add
scas
push
cmpl
dec
repnz
paddw
jmp
pop
push
mov
sbb
outsb
scas
std
and
das
imul
pop
fsubp
aaa
push
aas
fiadds
sub
mov
js
jne
mov
adc
flds
inc
ja
push
push
mov
add
loope
int3
sub
roll
stos
popa
sub
in
push
jecxz
popf
xchg
pop
imul
push
xchg
or
xlat
jl
push
inc
popa
mov
hlt
into
mov
shld
inc
loop
in
mov
mov
mov
loop
add
push
adc
call
ds
push
mov
dec
add
test
xchg
adc
sbb
lods
sbb
mov
and
cli
cmpsl
mov
daa
mov
sti
imul
inc
mov
mov
lock
test
repnz
cmp
inc
bnd
jns
push
ljmp
push
mov
mov
mov
add
pop
fdivp
sti
cli
das
lcall
push
push
jecxz
xchg
mov
cmp
and
cmp
into
popf
daa
push
call
imul
jl
inc
adc
pop
loopne
push
push
mov
daa
je
int3
loopne
pop
add
aad
lods
mov
in
aam
cmp
shlb
xchg
mov
xchg
cli
pop
je
and
lock
dec
and
sub
aas
sub
imul
lea
adc
mov
lahf
sbb
iret
incb
repnz
cmpb
mov
sbb
stos
repnz
test
ljmp
jae
fneni(8087
xchg
shrb
sub
fwait
mov
mov
mov
in
sbb
lea
cmp
lea
enter
dec
pop
mov
shll
rcl
push
jecxz
mov
iret
andb
fmul
out
pusha
mov
das
ret
xor
in
adc
cmpsl
addr16
insb
or
bound
lret
push
pop
mov
push
loopne
shl
daa
sbbb
fldenv
mov
stos
sub
je
jmp
jecxz
mov
testb
test
test
sarb
sarb
sub
xchg
dec
xor
sar
jne
mov
iret
call
jecxz
icebp
ret
sub
fs
jbe
imul
je
hlt
push
mov
aas
andl
and
jp
in
es
sbb
pushf
test
wbinvd
jne
insb
xchg
neg
or
fldcw
stos
sub
lods
push
fsubrs
xor
ljmp
int3
leave
dec
xor
xor
enter
cmpsl
pop
out
pop
in
xor
inc
bound
push
inc
adc
fdivp
subl
ja
pusha
test
xor
inc
repz
icebp
push
scas
hlt
and
xor
xchg
sbb
xchg
xlat
je
and
out
pop
es
sar
and
insl
iret
adc
pop
ret
jo
sub
shlb
xor
jo
test
mov
sbb
jg
aas
and
add
pop
xchg
xchg
nop
les
and
sbb
jns
pop
ret
ret
scas
dec
add
hlt
call
sub
bound
aad
std
jb
ret
fwait
cmp
mov
cltd
outsl
insl
test
push
or
lret
sub
jo
jmp
or
sub
test
mov
xchg
ret
mov
push
mov
sub
sub
pop
into
sarl
mov
add
addr16
lret
inc
ret
andb
fists
loop
cwtl
fsincos
mov
dec
dec
xchg
push
mov
dec
lock
lds
inc
jb
sub
jbe
icebp
repz
push
mov
lea
cmpsb
or
xlat
cmp
enter
dec
repnz
jae
xor
popa
jp
dec
fcmovne
insb
push
imul
ljmp
sub
mov
mov
xchg
das
push
lcall
mov
enter
cmp
adc
push
adc
pop
ja
mull
movsl
xchg
ret
sahf
jl
fldt
xchg
std
loopne
iret
fnstenv
sti
mov
out
js
fxch
xor
repnz
lods
test
lcall
cmp
faddp
mov
aas
cmp
pop
fsubl
jmp
loopne
hlt
aas
sbb
adc
and
jle
jb
pop
sub
clc
sbb
cmp
mov
outsl
xor
stos
xor
lods
in
js
sbb
adc
nop
dec
sub
mov
jl
push
popf
div
push
mov
in
imul
scas
xor
and
jb
daa
mov
mov
or
adc
movsl
cli
gs
andl
fwait
aam
outsb
add
dec
push
ret
loopne
es
mov
in
push
or
in
ds
aaa
sub
lret
cmp
add
cmpsl
mov
sti
shl
adc
jg
xchg
mov
scas
notl
jo
push
push
scas
ja
outsb
or
jnp
and
cmp
dec
pminub
fucom
mov
repz
inc
call
xor
lcall
push
enter
and
pop
test
or
mov
fsubrl
test
popa
mov
leave
ja
sub
mov
out
or
stos
xor
nop
lods
orb
aad
or
ror
cmp
mov
push
sbb
mov
and
jae
pushf
pushf
pop
fcmovnb
inc
xchg
adc
pop
stos
or
in
call
mov
xlat
xchg
stos
cmp
pop
das
test
mov
int
mov
adc
xchg
inc
rorl
pop
daa
inc
push
pusha
hlt
loope
fdivs
test
xchg
loop
jmp
jnp
mov
cli
push
clc
lods
adc
mov
and
xchg
jb
pop
mov
outsb
mov
push
pop
cwtl
lock
sub
repnz
jb
fdivs
ljmp
int
bound
fs
addr16
push
pop
inc
les
add
adc
leave
sbb
xor
rcl
jae
test
xor
jle
sbb
dec
jbe
xchg
or
test
inc
rcrb
sub
jge
repnz
stos
ds
push
adc
sbb
cmc
insb
pop
adc
and
push
add
out
mov
jecxz
stos
jne
push
xchg
pop
je
notb
push
test
and
push
mov
lahf
test
xor
push
fs
outsl
lret
mov
push
lret
jne
inc
lahf
or
loope
mov
pop
mov
xlat
mov
sahf
pop
insl
jl
iret
icebp
pop
mov
mov
mov
outsl
loope
jne
push
mov
loop
mov
imull
jmp
lods
lods
stos
fwait
ljmp
jb
xchg
adc
leave
loop
sbb
shr
cmpsl
mov
xor
push
ds
cmpsb
and
mov
and
adc
adc
cmp
mov
mov
xchg
inc
cmpsb
lcall
ss
nop
adc
aad
mov
lods
fs
lret
xchg
jns
gs
cmp
dec
movsb
xchg
jge
ds
out
lret
int
imul
cmp
mov
lods
jecxz
push
ljmp
dec
pushw
testl
inc
repz
in
popf
xchg
into
clc
inc
jg
push
outsb
imul
es
jp
movsb
xor
test
push
pop
cli
inc
sarb
out
fistps
and
mov
jns
mov
mov
or
lock
sub
clc
jne
pop
sbb
mov
mov
xlat
xor
or
je
inc
leave
fcomip
pop
cmpsl
cmpsb
jge
cmp
xchg
push
test
mov
dec
push
xor
inc
and
pop
jne
and
jg
add
xlat
lods
or
dec
inc
jge
push
mov
lret
xchg
add
ljmp
sbb
out
cmp
nopl
rol
sahf
popa
aad
mov
fcmovu
mov
scas
cld
data16
fs
leave
ja
or
outsb
push
cmp
sbb
pop
es
repnz
xchg
pop
pop
xorl
dec
aaa
dec
in
shr
jecxz
repnz
adc
pushf
cmp
mov
adc
outsb
xchg
jns
sub
cmp
mov
cld
pop
cwtl
jl
adc
jno
jbe
inc
pop
mov
fidivrl
push
imul
mov
nop
scas
jne
scas
cmpsb
ljmp
stos
or
cmp
rep
xor
sub
inc
mov
jae
shll
or
xchg
das
dec
out
fs
jg
out
out
imul
or
jp
cmp
mov
xor
or
mov
or
jbe
fwait
in
xchg
mov
fnstenv
adc
testl
gs
jp
imul
adc
adc
jl
test
loope
mov
test
es
in
iret
push
cmpsl
xor
jle
daa
mov
mov
mov
adc
xchg
jecxz
mov
mov
xlat
xor
cmpsb
lret
arpl
js
test
pop
insl
enter
cmp
push
insl
add
int
stos
push
sahf
aam
pop
xor
ds
sti
out
test
fstpl
pop
pushf
adc
or
mov
push
fs
mov
lods
clc
xchg
fildl
sbb
pcmpeqd
addl
jne
push
mov
in
test
xchg
push
out
xchg
call
movsl
scas
adc
lcall
inc
sti
push
inc
loop
shll
stos
adc
cmp
and
xlat
mov
mov
insl
int3
add
mov
pop
push
in
sub
dec
stc
lods
push
int
or
dec
fs
pop
mov
hlt
popa
adc
mov
jl
pop
inc
out
cmp
nop
cli
pop
sbb
xchg
mov
sub
pop
fnstenv
add
jne
pop
cmp
mull
in
sbb
push
fstps
loop
add
imul
sbb
pop
xorl
fwait
push
jbe
mov
add
mov
push
adc
sbb
pop
mov
bound
and
hlt
sub
insl
mov
fildll
xor
xor
loope
and
jbe
icebp
or
fstl
aaa
xor
jl,pt
arpl
adc
dec
pop
dec
and
jp
add
aad
lea
int3
mov
repnz
insw
mov
mov
xchg
and
aad
je
repz
pushf
xchg
push
sbb
hlt
dec
aaa
xlat
push
and
sub
cmpsb
mov
mov
sahf
insb
mov
xchg
mov
fwait
in
leave
outsb
clc
es
lretw
mov
jecxz
dec
aad
rcl
pop
xor
addr16
or
addr16
sbb
bound
mov
mov
mov
roll
add
pop
adc
push
mov
xchg
rorl
lcall
push
into
pop
xlat
sub
mov
hlt
push
outsb
out
xchg
inc
jne
mov
and
xchg
pop
push
cwtl
xchg
cmp
push
in
ret
xor
and
mov
pop
mov
loopne
fiadds
add
or
pop
mov
scas
repz
push
outsl
jbe
xor
int3
int3
out
sbb
xchg
sahf
mov
mov
push
pop
mov
mov
stc
push
dec
pop
add
mov
lea
shlb
push
push
sbbl
lahf
rcrl
xor
pop
gs
mov
shll
pop
mov
push
jge
lea
mov
mov
inc
jmp
rorb
jno
test
push
jno
pop
into
jmp
ret
xor
gs
out
xchg
lret
hlt
sub
in
mov
sarb
out
movsb
icebp
test
sarl
fstpl
jo
mov
sbb
loop
test
dec
cld
subb
loop
add
push
out
adcb
push
fld
fcmovnb
lea
sub
icebp
fucomp
fs
mov
sbb
cmpsl
loop
pop
jmp
mov
repnz
jmp
iret
pop
push
mov
scas
xchg
repnz
cmp
fwait
daa
cmp
insl
cmp
dec
cmp
mov
add
lea
dec
pusha
xchg
cmp
adc
lcall
push
inc
pusha
dec
cmpb
pop
bound
out
push
out
adc
dec
repnz
push
in
mov
cmp
cmp
cwtl
fbstp
adc
adc
dec
mov
or
ret
adc
xor
ror
jnp
leave
mov
cld
inc
pushf
fldcw
dec
adc
mov
xchg
dec
sub
sub
lds
xor
or
jo
nop
dec
sbb
cmp
outsl
lret
mov
adc
test
or
push
ret
jns
xchg
inc
adc
das
rorb
or
push
xchg
add
xchg
or
pop
or
nop
imul
lds
shrb
mov
scas
daa
jg
sbb
or
test
imulb
adc
int3
out
push
pop
mov
jne
into
cmpsl
in
stc
jecxz
pop
jmp
dec
fadds
rcrl
lret
mov
sbb
ja
xor
fcmovnbe
into
clc
xor
pop
loope
ret
mov
pusha
dec
mov
pop
cmp
std
fcomi
cs
adc
stos
push
push
outsl
jnp
dec
jecxz
xchg
hlt
ret
clc
mov
push
in
enter
hlt
xor
in
mov
shll
sub
fnstenv
sub
fisubs
xor
jge
lret
cvtdq2ps
fdivp
lea
cwtl
aad
push
jae
mov
jmp
jl
call
and
jl
enter
sbb
adc
xchg
out
aaa
mov
aas
cmp
scas
movsl
mov
rorb
push
inc
pop
mov
mov
ja
stos
add
aaa
loope
cmp
inc
inc
jbe
sub
mov
jmp
dec
pop
das
push
rcrb
xorb
out
cmc
mov
push
xor
add
fisubl
push
outsb
rorb
push
dec
test
aaa
push
ljmp
or
cmp
add
into
mov
mov
pop
sbb
into
sbb
test
mov
enter
and
dec
sti
push
mov
jl
sbb
mov
outsl
int3
inc
lock
mov
push
fneni(8087
jmp
imul
push
lock
jbe
das
dec
jno
xor
add
arpl
stos
in
imul
rclb
lock
daa
scas
jl
and
cmp
das
call
fcomp
xrelease
aad
jmp
jnp
int3
jnp
and
pop
ss
in
rcr
ficompl
ja
or
xchg
and
and
and
pop
and
push
jmp
aad
ljmp
mov
daa
jl
movsb
pop
push
je
lret
ljmp
stc
shrl
xchg
hlt
dec
mov
cmp
into
es
push
out
mov
sahf
scas
cmpsl
cmp
and
loopne
rcrb
cmp
ss
pop
dec
dec
pause
pop
or
xchg
std
enter
pop
ljmp
jle
mov
mov
sub
mov
sbb
insb
pushf
xchg
test
sbbl
pop
cmpsb
inc
add
fisubs
aaa
out
inc
or
cmc
push
jle
shlb
ss
aam
in
mov
sub
jl
cmpl
es
xor
cmpsl
test
push
in
dec
cmp
gs
out
sarl
icebp
lahf
pop
pop
sbb
jbe
aad
and
add
push
xor
mov
jns
lods
add
sbbb
add
xchg
sahf
sub
xor
mov
xor
data16
scas
mov
mov
push
das
mov
cmp
adc
rclb
fdiv
mov
mov
bound
cmp
mov
sub
stc
movsl
ret
lods
popf
and
rol
pushf
sbb
sbb
je
orb
mov
adcb
test
mov
pop
out
mov
pushf
repnz
push
pushw
push
out
mov
sub
jbe
ljmp
mov
sti
loop
aas
adc
mov
pop
mov
es
fwait
cwtl
cwtl
xor
inc
mov
xor
and
loopne
mov
in
add
in
mov
in
aaa
out
mov
out
repz
mov
push
sbb
mov
std
mov
sub
lcall
sub
scas
cmc
xchg
popf
movsb
enter
xor
jo
shll
mov
xor
push
add
jnp
clc
ret
jl
jnp
inc
mov
aaa
sub
dec
dec
mov
mov
jmp
aad
or
fistl
and
jmp
cmp
cmp
push
xor
jp
mov
or
lods
jae
dec
mov
mov
ss
inc
outsb
xor
sbb
sub
ret
pop
cmc
int3
inc
ds
add
pop
out
popl
loop
jne
ror
lods
popl
xchg
bound
stos
out
cld
and
movsb
pop
decl
pop
stc
stos
jmp
popa
hlt
sbb
pop
insb
insb
gs
subl
data16
push
mov
loope
in
or
cmp
sbb
add
ja
test
jg
push
test
aaa
push
in
arpl
enter
jae
pusha
xlat
ficompl
xor
cmc
pushf
loopne
jb
adc
push
xor
adc
scas
push
into
pop
xchg
and
repnz
adc
mov
xor
mov
notb
and
jo
xorb
in
cld
push
mov
xor
mov
js
mov
int
mov
fwait
xchg
clc
sbb
sub
lods
insl
inc
cmp
cmp
lahf
cmp
mov
in
scas
add
cmp
sarw
mov
frstor
ss
fmulp
mov
push
in
or
xchg
mov
adc
sub
fldz
jb
out
loop
bound
rorl
dec
arpl
push
in
in
xorl
pop
jbe
cli
xchg
jnp
inc
cld
ljmp
and
mov
sarb
push
fwait
pop
das
add
inc
mov
and
shlb
jne
xchg
mov
in
jae
enter
pop
push
mov
mov
push
enter
sbb
cld
das
dec
inc
push
out
cmpsb
pushf
adcl
outsl
jbe
inc
int
fisubrl
cltd
dec
test
stos
cld
adc
dec
inc
mov
call
cs
clc
cmpl
push
mov
push
sbb
lds
mov
into
sub
mov
addr16
xor
jg
movsb
jge
inc
xlat
ja
pop
cli
arpl
stos
in
mov
lahf
roll
shrl
mov
jns
add
cmp
dec
data16
lea
xor
loop
shlb
cmpsl
mov
push
testl
push
jns
inc
sub
push
jl
out
xchg
aad
and
jmp
jecxz
adc
lahf
mov
pop
outsb
add
or
sbb
cmp
adc
insl
jp
jae
or
cmpsl
and
pop
xor
mov
test
xchg
and
outsl
mov
xor
jnp
sbb
nop
mov
repz
je
loop
pop
les
dec
lea
popf
lock
daa
test
jnp
pop
imull
pop
fwait
pop
loope
fdivrl
cmpsb
jp
scas
sti
pop
insl
test
xchg
imul
cmp
cli
mov
xor
mov
inc
add
cmp
js
into
std
push
jl
daa
xorl
fcmovne
sub
bound
mov
xchg
sahf
sub
xchg
aam
pushf
fists
aaa
pop
fs
rcll
rcrl
push
adc
cltd
clc
push
sub
sub
out
fsubs
jecxz
fisubrs
scas
mov
mov
clc
mov
loopne
mov
pop
mov
out
add
push
loope
outsb
xor
mov
sub
gs
inc
out
pop
movsl
mov
js
in
addb
add
ja
inc
lahf
jne
sub
ret
push
hlt
fs
insl
test
mov
fst
mov
negb
adc
mov
sbbb
mov
jo
jne
ja
push
lcall
lcall
ss
add
lock
stc
daa
add
lcall
popf
ljmp
gs
iret
test
adc
sbb
test
dec
jmp
in
jl
inc
adc
cld
fmull
sarl
ret
loope
mov
ret
pop
lock
int
push
dec
sbb
jp
das
inc
xchg
dec
push
push
vunpcklps
add
movsl
jno
sbb
mov
addr16
inc
aas
test
movsb
ret
pop
mov
jae
fsubrs
movsl
xchg
mov
or
mov
ds
mov
xor
sub
cmp
mov
dec
sbb
fstpl
jle
xchg
xor
into
pop
or
mov
lahf
ret
jne
mov
call
pushf
scas
pop
out
int
lcall
stos
adc
push
push
sub
aas
adc
cmp
push
dec
pop
pop
scas
adc
shlb
mov
and
pop
adc
shll
lods
dec
jbe
and
jne
jecxz
pop
mov
iret
lock
lods
call
dec
push
repz
sbb
jns
mov
andl
cmp
xchg
in
jl
das
testb
cld
jns
call
icebp
popf
frstor
in
popf
dec
push
mov
shrl
cli
xor
shrl
cmp
xchg
cmp
gs
mov
xlat
and
movsl
daa
pop
sub
xchg
xor
test
push
and
ret
in
loope
xchg
mov
pop
mov
enter
dec
lcall
roll
cltd
xor
rorb
movsb
ret
cltd
pop
inc
lret
xor
sahf
cld
mov
cmp
sub
push
jmp
lods
into
adc
imul
xor
jp
rolb
shl
aad
jbe
pop
jmp
xor
test
add
stos
inc
int3
out
sub
addr16
inc
push
xor
and
dec
lea
push
scas
add
mov
leave
inc
lock
dec
out
add
jmp
inc
setle
and
aam
add
cmpsb
sub
push
mov
pop
jne
out
iret
iret
outsb
pop
xchg
sub
insb
xchg
fcmovbe
insl
dec
xchg
icebp
add
adc
popf
pushf
adc
mov
fisttpl
inc
jno
or
pop
lahf
add
xor
sbb
out
sbb
ljmp
out
rorl
dec
add
pop
inc
sbb
push
pop
mov
xchg
and
mov
int
xor
mov
test
lret
cld
mov
cwtl
xchg
jle
mov
paddw
push
mov
mov
inc
xor
roll
xchg
int
outsl
iret
test
sbb
xchg
mov
bound
xchg
call
mov
rclb
xlat
das
cmp
sbb
aaa
pop
cmp
mov
test
popa
sub
into
rcrl
shlb
pusha
fcoml
xchg
and
lea
push
sub
popf
add
pop
xchg
xchg
cs
ret
cmp
dec
pop
inc
mov
mov
mov
pop
xchg
ret
mov
leave
imul
push
jg
mov
sahf
sub
jae
stc
mov
ljmp
or
mov
andb
xchg
jge
call
xchg
and
push
stos
scas
jg
mov
loop
bound
jb
xchg
lahf
pop
fdivr
mov
in
dec
dec
in
sarb
xor
call
pusha
push
fnsave
xor
push
out
jg
add
fmuls
cmp
and
loope
mov
mov
sub
and
cld
xlat
in
cmp
es
or
loop
stos
adc
pop
lcall
add
and
jl
sub
cs
dec
repnz
lret
adc
icebp
xor
aas
mulb
add
inc
pop
das
and
mov
jmp
mov
das
mov
clc
pusha
loop
jl
dec
mov
int
and
push
popa
cmp
fwait
les
xor
adc
pop
fmull
das
daa
sbb
fldenv
xor
in
in
xor
jg
repnz
gs
js
jo
mov
lods
mov
jb
mov
and
cli
decb
pusha
jne
out
mov
mov
lret
adc
cltd
adc
imul
sbb
xchg
inc
rcll
dec
cmpsl
cmp
and
inc
js
xor
mov
jmp
es
jbe
fidivrs
sub
and
out
popl
jb
sbb
jns
jo
mov
aaa
pusha
test
sbb
enter
jns
int
mov
and
shrl
push
and
xor
cwtl
jo
ret
sub
jns
add
cmp
dec
popf
insb
daa
in
mov
into
ss
mov
mov
fidivrl
sbb
js
jno
xlat
xchg
fs
loopne
aad
xchg
add
sbb
pusha
dec
mov
push
mov
sub
pop
inc
xorb
cmp
jmp
popa
mov
mov
out
stos
xor
ja
mov
jmp
rclb
or
mov
xchg
ss
jmp
fs
pop
push
ror
cs
or
push
or
sbb
jnp
pop
inc
ret
xchg
in
or
pop
repnz
adc
sbb
inc
stos
mov
push
das
stos
mov
xlat
sbb
mov
mov
cmp
cwtl
gs
ret
dec
mov
subl
or
xor
mov
adc
cmp
ret
insb
xchg
pop
icebp
add
es
push
sbb
rorl
cmpsb
test
mov
mov
lds
repz
xor
pop
xor
movsl
popl
imul
ja
fs
rcl
outsb
xchg
or
lcall
xchg
jecxz
shll
popa
fcomps
hlt
lcall
cs
add
test
hlt
mov
pushf
jb
aam
push
or
pop
mov
inc
xchg
mov
sub
in
lret
jle
lcall
push
scas
movsl
sarl
scas
pop
pop
adc
and
sub
xchg
and
sub
mov
inc
rcrl
negb
xor
js
cwtl
clc
lods
dec
sti
into
mov
xlat
lret
dec
leave
mov
test
xchg
adc
pop
push
mov
mov
push
pop
mov
cmp
insb
cmp
add
pop
adc
in
gs
push
pop
aas
xchg
jb
or
jge
sarb
insl
push
scas
pop
xchg
adc
inc
jl
sbb
add
cmc
or
scas
jns
mov
addr16
fcoml
dec
fimuls
and
mov
or
lret
push
loopne
xor
jecxz
xchg
fadd
adc
push
lods
push
add
push
inc
jnp
add
shr
adc
imulb
pop
mov
xchg
shlb
test
inc
jns
addr16
loopne
or
and
ror
aaa
daa
jo
js
repz
push
inc
repz
inc
rorb
xor
xchg
sub
std
inc
andb
in
or
lods
movsb
xchg
lret
jecxz
add
mov
push
push
adc
pop
movsb
das
into
loopne
scas
xlat
mov
pop
shl
mov
add
sub
loop
mov
push
cmp
mov
out
enter
scas
push
in
dec
xchg
jbe
push
xor
dec
data16
mov
push
ret
add
stos
and
sub
push
adc
inc
xor
jecxz
fldenv
int3
daa
dec
push
fisttpll
mov
fcomip
or
fstl
fbld
lret
sbb
arpl
jns
aam
mov
cld
lock
imul
popa
dec
push
stos
mov
jno
imul
jp
sub
arpl
xchg
lret
xlat
leave
pop
test
cwtl
jge
aas
cmp
js
lods
sahf
popa
xorb
or
ss
lods
adc
xchg
in
pop
sahf
pusha
xchg
into
mov
adcb
pop
imul
test
addr16
pop
mov
add
push
fidivs
sub
and
jmp
ds
jecxz
fiaddl
call
hlt
dec
loope
mov
mov
scas
push
mov
sub
lods
popa
gs
inc
sar
movsb
gs
add
gs
bound
jne
xor
sarl
rorl
add
hlt
out
stos
jmp
imul
jo
push
fsts
ret
stc
idivb
daa
jge
fwait
rcrl
add
bnd
mov
popa
orb
adc
lods
shll
in
das
sub
mov
mov
idivb
popf
sbb
repnz
push
sbb
lret
pop
rcrb
xlat
rcr
add
lea
cmp
pop
add
adc
ds
in
push
lahf
in
sub
mov
fsubl
js
out
sub
add
stos
mov
call
dec
fisubs
mov
xchg
in
ds
pop
jmp
mov
test
stos
int
or
inc
cmp
add
pop
shll
js
std
pop
inc
cmp
inc
cli
adc
dec
xchg
sub
das
ja
push
sbb
cmp
sbb
ljmp
xchg
movsb
add
mov
insb
outsl
lret
mov
fldl2e
xor
pusha
push
icebp
add
add
pop
ds
std
mov
das
es
xlat
cmpsb
mov
lret
xchg
cmp
push
insb
mov
shrb
jo
push
push
nop
fcmovnbe
and
shll
and
cmc
nop
js
and
push
loope
stos
dec
shll
icebp
sbb
push
mov
call
movb
xchg
or
dec
pop
adc
fs
or
shlb
mov
push
xchg
adcl
mov
mov
in
push
outsl
in
push
outsb
pop
int3
sub
dec
xlat
or
pushf
out
pusha
jmp
pop
adc
dec
sarb
cmp
stos
out
stos
in
push
inc
fwait
cs
push
mov
cmp
orl
shl
xorl
stc
xchg
dec
xor
xchg
fs
or
cmp
ss
push
stos
sub
mov
mov
adc
cmp
or
mov
mov
xor
movsl
xchg
jb
inc
or
and
xchg
int
adc
mov
les
stos
and
push
push
xchg
xor
jle
xchg
inc
adc
mov
lea
mov
xchg
xchg
in
nop
inc
push
cmp
xchg
cmp
and
mov
pop
jnp
outsb
xchg
inc
pop
fisubrs
jae
adc
mov
cmp
sti
fsubrp
xchg
mov
and
pop
frstor
dec
sbb
out
inc
push
add
pusha
cmp
lcall
and
xchg
add
mov
adc
sahf
xlat
fwait
leave
imul
adc
inc
cmpsl
lahf
call
add
hlt
js
shll
lea
add
xor
test
inc
fidivs
adc
repnz
in
or
pop
outsb
or
test
int3
scas
fiadds
jbe
cltd
test
out
mov
cmpsl
pushf
mov
je
shrb
xchg
add
imul
jo
xor
adcl
dec
jl
rolb
cmp
popf
sub
sbb
push
xchg
jecxz
pop
dec
jnp
aam
test
mov
decb
adc
mov
das
icebp
xchg
sti
dec
sub
sbb
popa
and
dec
mov
jo
inc
insl
lea
shlb
inc
sub
ljmp
or
inc
ss
or
cs
fsubs
jp
shlb
hlt
inc
jbe
inc
lea
jle
lahf
mov
and
pop
add
push
fst
mov
fscale
mov
imul
xchg
ljmp
adc
mov
ja
push
stos
mov
sbb
imul
xchg
xor
xor
enter
ss
xchg
cli
push
push
aad
scas
enter
sbb
xchg
jl
loop
iret
sahf
in
and
dec
dec
andl
push
mov
cmp
jae
sbb
lods
in
jae
xchg
mov
or
xadd
xrelease
movq
int3
adc
inc
out
pop
mov
rorl
addl
cmp
add
add
mov
push
or
or
fs
lock
nop
inc
and
inc
out
mov
mov
mov
fcompl
mov
loopne
xor
sbbl
xchg
cmp
dec
sahf
aaa
clc
sub
push
xchg
sbb
cmc
and
aaa
scas
pop
imulb
add
mov
pop
xor
lret
lahf
dec
fucomip
cmp
mov
aas
pop
jb
std
xchg
add
aaa
cmpsl
inc
movsl
dec
stos
cltd
mov
js
cmp
pushf
fcoms
mov
in
pop
sub
jge
pop
dec
in
pop
sti
xchg
mov
loop
mov
push
mov
mov
sti
mov
sti
shll
jg
fwait
inc
add
jg
ljmp
jns
fs
jnp
jbe
je
mov
and
add
ret
jge
inc
inc
jne
insl
adc
and
mov
xor
lds
inc
jbe
adc
cmpb
adc
pushf
scas
aad
das
dec
popa
jo
dec
add
mov
xchg
mov
lahf
lcall
dec
scas
cmp
popa
aas
lret
dec
gs
ret
loope
push
sub
dec
aad
push
dec
or
scas
data16
pop
sbb
hlt
jmp
pusha
mov
xchg
pushf
fdivs
add
in
js
popa
and
andb
cli
pop
push
add
cmpl
xchg
movntq
out
repz
loop
jecxz
inc
fdivrp
call
and
stos
xor
dec
sub
xor
xor
addr16
subb
loop
jmp
sub
arpl
cmc
cmp
fs
insb
pop
jbe
mov
lcall
popf
mov
sbb
mov
push
jne
xlat
lret
sbb
mov
cmp
lods
and
add
jo
bound
adc
push
rcrl
lock
pushl
push
sbbb
hlt
shll
inc
add
or
pop
or
jo
imul
xor
push
ja
addr16
aaa
imul
in
out
rcll
repnz
cld
push
cld
clc
cmpsl
in
and
xchg
adc
pop
add
pop
and
shll
call
addr16
sbb
sub
loopne
mov
int3
inc
out
call
jbe
cwtl
xchg
cs
and
jbe
popa
jmp
sbb
std
sub
loop
call
aaa
xor
cmp
fdiv
xor
mov
imulb
adc
clc
mull
call
jo
jmp
mov
jecxz
das
repz
jnp
pop
loope
xor
jb
mov
jecxz
cmp
cs
mov
push
movsl
into
stos
in
insb
inc
sbb
lods
push
mov
stos
mov
popa
mov
mov
sub
in
orb
add
imul
shlb
cmp
cwtl
imul
nop
aas
inc
mov
mov
in
or
jp
or
push
mov
fs
pop
xchg
out
ljmp
inc
mov
mov
lds
mov
popw
and
mov
add
sbb
sub
fisubs
mov
cs
cmpsb
pop
xor
push
lret
frstor
dec
add
loopne
iret
mov
loope
xor
add
es
mov
int3
sbb
orb
or
movsl
xchg
or
add
js
mov
aaa
cmp
test
loopne
jp
int3
mov
test
mov
orb
or
jmp
les
mov
fucomip
les
into
pop
sub
shl
mov
int
push
cmp
inc
bound
dec
adc
daa
ret
jl
mov
sbb
mov
mov
cmp
mov
test
push
out
fdivrl
mov
cmp
jnp
dec
cld
fbld
icebp
pop
mov
xchg
fwait
mov
jle
xchg
lock
dec
sub
mov
or
sbb
mov
or
movsb
shll
jecxz
xor
insb
jne
mov
mov
loope,pt
dec
inc
add
push
das
outsb
stos
push
mov
outsb
cwtl
pop
push
cmp
sbb
adcb
pusha
jl
call
xlat
jbe
daa
jns
jle
add
imul
leave
jnp
std
push
cltd
sbb
and
mov
notl
ret
push
movsb
mov
adc
and
iret
pop
mov
dec
fsubrl
fdivp
dec
ds
mov
inc
xchg
xor
out
dec
xchg
out
call
adc
sbb
mov
xchg
in
test
adc
fwait
mov
jne
jne
lea
jmp
and
sub
mov
sbb
push
and
push
test
in
push
fsub
and
sbb
xor
ljmp
xor
sahf
push
aam
add
js
scas
add
xchg
nop
mov
jge
cmp
or
adc
mov
mov
adc
fs
int3
add
sbb
or
mov
xor
dec
nop
repz
dec
ret
jnp
ss
or
jge
mov
ljmp
test
xor
lret
aam
jns
into
adc
test
push
sbb
cwtl
pop
test
and
mov
jo
clc
push
pop
mov
cld
mov
adc
lcall
and
iret
sbb
xor
fldcw
xchg
mov
icebp
cmc
repnz
daa
in
test
add
cmp
add
subl
sub
jae
push
out
mov
cmp
int
mov
xor
loope
adc
add
sbb
fwait
jns
js
mov
fdivrl
dec
dec
lret
movl
pop
test
in
jg
xchg
test
cli
cs
sahf
stc
mov
arpl
int3
lret
add
movsb
gs
inc
pushf
popa
pmullw
mov
xchg
lret
in
jo
mov
lcall
jge
iretw
push
and
cmpl
test
dec
dec
int
aam
loop
and
addr16
mov
out
adc
loop
push
push
mov
ret
fdivrp
jno
cmc
add
jae
ret
pop
mov
xchg
rorl
push
mov
ljmp
push
mov
adc
fcoml
lret
sarl
add
xchg
xchg
xor
fwait
push
adc
pop
mov
mov
jecxz
xchg
divb
mov
ret
repnz
in
jno
ret
dec
sub
testb
fsubl
pop
push
je
sbb
out
pop
mov
aad
pop
cltd
lock
in
popa
popf
popf
pop
push
test
cwtl
mov
and
sarl
and
je
addb
xor
push
rolb
out
les
dec
adc
rclb
das
cwtl
dec
mov
and
in
lret
shr
cmp
pop
popf
fbstp
clc
hlt
or
leave
mov
or
stos
add
ss
dec
int
cli
pop
in
mov
iret
mov
in
fs
adc
pop
imul
in
insl
movsb
std
cmp
cmp
cmpsl
mov
mov
cmp
mov
xor
negb
mov
stos
adcl
push
roll
pop
lahf
dec
ja
xorb
cmpsb
or
and
ljmp
divl
mov
sti
ss
xchg
cmp
imull
mov
imul
cmp
xor
adc
xchg
mov
cmp
mov
mov
adc
fisubl
inc
mov
das
iret
mov
outsb
pop
push
flds
aam
mov
cs
dec
pop
inc
inc
xchg
push
mov
stos
mov
mov
jnp
mov
std
into
ret
stos
mov
add
inc
pop
pop
das
inc
movq
andl
ja
pop
pop
xor
and
jno
mov
cwtl
cmp
fucomp
scas
pushl
stos
iret
and
inc
pop
cmp
jle
or
shrl
jae
mov
cwtl
cli
xchg
sbb
xchg
sub
jne
xchg
or
das
aaa
fwait
sub
fadd
jmp
add
dec
in
cwtl
push
cmpl
or
mov
in
or
lods
dec
rolb
sbb
push
sub
and
in
repz
and
xchg
sbb
lea
insl
repz
cmp
jp
sbb
cmc
push
imul
sub
sub
arpl
inc
xchg
aas
cltd
orb
stos
add
xchg
cmp
aam
xchg
ja
stos
out
test
das
push
test
push
mov
push
pop
cld
mov
js
push
jae
mov
in
adc
pop
ret
xchg
dec
dec
das
inc
add
cmp
cmp
mov
and
jnp
cli
cmp
jbe
inc
stc
aad
or
nop
xor
mov
insl
fmul
mov
xchg
dec
insb
lods
fwait
loopne
mov
xchg
mov
stos
pop
xor
cmc
cmp
xor
push
mov
ror
aas
push
mov
mov
xchg
gs
arpl
cltd
jno
push
push
in
add
pop
cwtl
inc
xlat
pop
lods
jp
mov
popa
lock
or
ja
icebp
dec
rclb
lret
push
xchg
rorl
adc
sub
mov
xchg
dec
orl
jne
dec
aam
mov
stos
repz
orl
clc
xor
sub
and
adc
sarb
or
mov
mov
inc
sub
or
out
sbb
shl
ds
jb
repz
jle
xchg
mov
inc
dec
xor
rcrl
repz
dec
mov
testb
mov
cmp
add
jns
mov
les
js
lret
shlb
mov
in
flds
pop
fmuls
sub
add
sub
mov
mov
flds
mov
push
les
shr
int3
adc
iret
cmpsl
out
fsubs
xlat
cmp
sub
and
push
ds
mov
cwtl
push
cmp
adc
in
aaa
adc
test
mov
sub
ret
jle
jo
ret
sbb
adc
jnp
xor
outsl
adc
mov
rcll
dec
inc
leave
dec
ret
nop
pop
test
add
xchg
hlt
mov
pop
and
nop
sub
sahf
jmp
jae
setnp
xchg
mov
mov
mov
mov
fs
cmp
mov
ret
xchg
pop
test
bswap
xor
pop
jg
sbb
mov
das
mov
in
clc
sub
mov
out
lcall
jb
jmp
adc
cwtl
out
inc
fildll
in
shl
repnz
xchg
inc
xor
jecxz
test
adc
scas
adc
repz
push
mov
into
in
mov
std
inc
mov
push
mov
lods
sub
bound
jg
push
pop
jns
pusha
pop
pop
rclb
dec
sti
adc
mov
push
repz
pop
pop
jo,pt
mov
pop
sub
mov
test
lahf
sbbl
inc
popf
into
fldl
push
aas
mov
sbbl
adc
test
and
in
fs
jb
push
icebp
mov
inc
sbb
pop
outsl
jae
cs
push
loope
add
in
cmp
pop
mov
popa
loopne
mov
xchg
dec
lds
push
scas
cmpsb
push
add
pop
inc
js
lret
and
cwtl
or
sbb
loope
xor
shll
in
jo
pushf
lods
jge
pop
dec
out
jg
subl
dec
and
dec
mov
int3
jne
mov
nop
into
ss
inc
bound
lcall
jmp
add
daa
cmpb
mov
sub
shll
pushf
movsl
bound
mov
xchg
test
pop
fiadds
adc
outsl
mov
inc
add
xor
or
pop
clc
jb
ljmp
clc
xchg
sar
outsb
out
pop
int3
and
icebp
cmp
fsubl
pop
mov
add
das
push
pop
or
mov
mov
jecxz
nopl
inc
filds
je
add
lahf
iret
mov
cli
jno
mov
xchg
jle
in
mov
fdivrs
popf
mov
push
pop
mov
inc
es
mov
scas
mov
lcall
sub
add
scas
cmp
lcall
mov
imull
test
sub
cwtl
out
mov
test
dec
cmp
jecxz
cs
push
jle
les
or
fwait
out
mov
test
mov
shl
add
sub
push
cmpsl
loope
orl
fldl
icebp
push
loop
push
dec
rcr
mov
adc
or
repz
lods
inc
mov
jl
mov
sbb
lret
out
jl
dec
and
inc
inc
push
inc
add
mov
out
sub
pop
sub
and
ljmp
sti
inc
xchg
sti
ficomps
jge
or
in
test
cmp
xchg
jnp
or
in
lcall
and
mov
dec
inc
lods
and
lahf
loop
sbb
sub
mull
pop
test
dec
push
mov
lret
roll
test
daa
add
arpl
imul
dec
xor
cmp
mov
jg
mov
insb
mov
sbb
push
add
push
dec
jae
adc
dec
inc
xor
int
inc
pop
jecxz
jns
into
ret
or
mov
cmp
aad
ret
jns
or
and
inc
enter
cmc
popf
mov
nop
js
add
mov
stos
dec
push
add
sbb
out
ret
es
xchg
lcall
sbb
pop
sub
adc
idivl
mov
xor
sub
ljmp
andb
add
ja
pop
add
pushf
jle
jne
sbb
nop
bound
stos
mov
xchg
adc
mov
outsb
cld
pop
pop
insl
jp
bound
xchg
jl
imul
push
cli
int
inc
or
push
in
scas
and
stc
pop
insl
sub
mov
jns
cmp
lock
sbb
mov
jle
scas
popa
jnp
dec
and
loope
fcmovnb
pushw
mov
rolb
fisubl
ret
call
mov
push
dec
sbb
ja
dec
add
xor
les
iret
test
iret
fwait
mov
enter
pop
or
sti
add
dec
mov
cld
int
dec
ret
push
fldenv
pop
jg
in
dec
test
xchg
mov
imul
fldenv
lock
pop
or
mov
lret
fs
je
sbb
decb
sti
xor
push
imul
les
lods
push
xchg
mov
push
and
daa
lock
ret
push
movsl
fwait
cmp
shl
rcl
mov
scas
iret
movsb
mov
lahf
repz
adc
loope
and
sub
fnstenv
jecxz
popf
xor
stos
je
inc
push
shlb
xor
mov
into
gs
stc
sahf
out
or
and
and
cld
jne
loopne
ror
repnz
mov
mov
imul
jg
sarb
int3
test
dec
and
outsl
lea
push
movsl
xchg
repnz
sub
mov
xor
fldenv
popf
insl
inc
dec
pop
stc
mov
ljmp
and
out
in
repnz
xchg
pop
add
jmp
and
test
aas
lcall
jmp
xor
repz
in
dec
sbb
aam
cmp
test
jbe
out
mov
mov
rorl
pop
mov
jp
int3
das
jo
jmp
fsub
les
mov
nop
push
mov
fcmovne
test
insl
sbb
xchg
sti
push
push
rolb
loopne
inc
dec
lret
push
inc
xchg
sahf
aam
add
inc
icebp
and
mov
adc
jbe
rcll
push
addr16
in
nop
cmp
add
cmc
pop
lahf
popf
js
popa
xchg
std
dec
testb
sbb
jl
shlb
cmp
mov
js
sub
adc
sbb
dec
fwait
push
nop
leave
inc
pop
in
movsl
push
jae
mov
mov
sub
cltd
adc
repnz
cmp
xor
test
in
add
push
outsb
loop
int
fwait
lods
push
and
and
insb
fwait
mov
shlb
sub
mov
into
imul
daa
out
push
ljmp
jge
ljmp
cmp
adc
add
sub
mov
jle
adc
jge
sub
add
and
cmpsb
sbb
inc
mov
or
sub
fcmove
in
cli
push
sub
push
pop
and
stos
sti
mov
popl
jno
cmp
and
imul
xchg
jno
cmp
aam
sub
lea
push
adcl
jmp
test
xor
sub
push
scas
jecxz
fidivs
jnp
dec
in
inc
stc
xor
data16
out
aad
push
add
iret
outsl
sbb
into
inc
mov
iret
mov
pusha
fisubs
leave
push
xchg
out
mov
idiv
mov
fs
or
sbb
test
xchg
xchg
inc
repz
sub
push
dec
pop
fisubs
hlt
imul
imul
ss
ljmp
pop
ret
outsb
sub
cmpsb
mov
sti
aaa
jbe
aaa
or
fwait
dec
leave
or
sbb
mov
jmp
jno
clc
imul
inc
add
pushf
cmp
lds
cmpsb
xchg
lcall
xchg
mov
fldl
push
jb
xchg
mov
mov
out
inc
lods
icebp
dec
ret
loopne
roll
push
mov
push
insb
idiv
push
or
push
pop
xor
xchg
dec
int
adc
loop
je
sub
ljmp
cmc
xchg
rolb
pop
dec
pusha
jmp
insl
jle
mov
inc
pop
out
mov
jle
jns
in
xchg
sbb
iret
pop
xor
cmp
clc
jle
clc
jns
out
es
adcb
add
out
jmp
jb
mov
xchg
lds
ss
rcr
out
into
aad
int3
mov
fildl
inc
loopne
xchg
push
rcrb
mov
mov
insb
adc
lods
mov
mov
mov
inc
xchg
dec
mov
in
jno
inc
jmp
xor
outsb
sub
aas
jmp
shl
mov
aam
adc
imul
int
scas
add
gs
jne
xchg
xlat
push
out
std
lret
inc
and
test
outsb
leave
cmp
shll
xor
outsl
fwait
pop
fistl
pop
pop
jle
nop
jno
popf
cmp
ds
mov
popa
mov
arpl
sub
xchg
sbb
in
adc
das
sbb
pop
mov
lods
and
jb
add
cmp
rclb
adc
into
sbb
or
es
inc
leave
pop
sub
sbb
lods
pusha
nop
dec
jl
pop
push
cmp
mov
cmp
stc
js
rcrl
fwait
jne
jns
adc
nop
mov
cmp
fwait
nop
enter
jecxz
xor
mov
sbb
shll
clc
xchg
negl
mov
inc
fwait
xchg
sbb
adc
shrl
in
sbb
mov
xor
cld
sar
xchg
or
jp
arpl
aam
push
shl
adc
cmp
pop
addr16
adc
loop
loopne
push
mov
out
mov
jp
cmp
mov
out
testl
es
cmp
mov
in
cwtl
clc
fisubrl
imul
pop
aaa
sbb
test
and
popf
cld
add
jae
dec
mov
cmp
and
inc
xor
loopne
leave
pop
inc
repz
imul
popf
xchg
icebp
pushl
mov
iret
or
fwait
xor
jge
out
gs
push
dec
push
shlb
xlat
mov
inc
aaa
clc
movsb
and
or
adc
je
subl
gs
arpl
repz
loope
jg
out
pop
jne
loope
js
cmpsl
jg
or
mov
push
xor
push
xor
inc
add
pop
cmp
dec
mov
mov
test
enter
xchg
loopne
mov
in
rcrl
or
ss
jne
jl
mov
test
into
sub
push
movsb
add
jae
push
test
insb
fisttpl
sbb
into
inc
gs
arpl
rcrb
lods
pop
pop
cli
adcl
cwtl
mov
out
cmp
sub
out
in
dec
ret
xchg
push
mov
dec
sbb
mov
ljmp
dec
cli
jg
xor
xchg
or
movsl
ljmp
and
xor
push
popf
jp
xor
push
mov
ficomps
int
pop
fildl
and
or
rclb
cmp
stc
popf
sub
incl
fimuls
pop
jecxz
or
or
cmp
mov
mov
cld
mov
into
or
push
xor
cltd
sub
mov
cli
jg
inc
cmpsb
orl
xchg
dec
lea
into
cs
jecxz
in
sarl
xchg
hlt
cmc
mov
dec
cwtl
or
out
out
inc
popf
rclb
sbb
push
in
push
nop
aaa
jae
and
and
adcl
lods
pop
cmp
and
sbb
int
sti
scas
pop
or
in
ss
iret
outsl
iret
ffree
xchg
mov
imul
imul
sub
scas
loopne
jnp
js
js
daa
lcall
add
pusha
fists
adc
lahf
aaa
fsubr
lock
int3
cmp
and
inc
push
stos
jg
xchg
adc
decb
or
add
sar
jo
fs
ret
mov
arpl
cmp
mov
pop
arpl
adc
and
shrl
hlt
and
test
xchg
fwait
pop
sub
imul
js
mov
mov
jmp
jb
mov
mov
adc
outsl
dec
jmp
push
mov
push
clc
dec
arpl
inc
lea
call
adc
inc
add
sub
adc
bound
mov
shll
jl
icebp
jae
arpl
dec
sarl
xchg
ficoml
xorl
inc
out
xchg
mov
imul
or
cmp
cmc
les
jb
ret
xchg
imul
dec
add
dec
jo
sti
add
or
pop
xor
mov
ficoml
push
ljmp
sbb
repz
jae
lret
out
mov
xchg
pusha
in
or
jno
std
mov
cmp
ficompl
push
dec
repz
in
pushf
add
ret
jp
popa
or
scas
pcmpgtb
cmpsl
pop
sbb
or
xor
dec
inc
extrq
out
jo
push
and
clc
and
test
push
fcoml
sti
repnz
add
out
cmp
popf
shl
jmp
pop
cmp
mov
andl
xor
push
xlat
in
imul
mov
inc
sarb
out
sbb
pushf
mov
mov
fsubl
dec
xchg
push
aas
adc
sbb
in
mov
pop
sahf
inc
xor
cmp
aas
mov
xor
in
sub
stc
dec
adc
inc
sbb
enter
add
or
ss
lock
shlb
out
loope
pushf
sti
xchg
xchg
push
xchg
dec
or
add
push
sub
int3
jae
clc
pop
cmpsb
mov
test
ror
pop
cmp
std
loopne
fcmove
adc
adc
hlt
in
add
jns
insb
pop
jns
cmpsb
std
mov
mov
fcoml
mov
orl
and
leave
inc
out
enter
xchg
mov
dec
mov
xor
pop
cs
incl
ret
sub
add
lods
mov
inc
aaa
push
lock
sahf
sub
inc
cmpsl
int
pop
aam
fistpll
push
out
js
aad
enter
push
xorb
xchg
and
jbe
xor
lds
pushf
fsubrs
push
shld
out
std
aam
les
outsb
pop
outsl
add
sahf
jge
decl
rclb
add
xchg
xor
and
mov
ss
les
cmp
sub
mov
cmp
xor
mov
fs
inc
push
inc
fnstcw
and
dec
aam
sbb
aas
push
pop
sbb
sub
mov
sub
cmc
mov
xchg
dec
jmp
test
xchg
sti
shrb
mov
mov
or
mov
and
cltd
inc
fldenv
cmp
imul
aad
mov
and
push
adc
movsl
ficoms
jmp
inc
daa
das
sarl
add
das
mov
cmp
pop
cwtl
jne
lods
push
pusha
jg
mov
into
cmp
stc
pop
cwtl
xor
sub
shrb
iret
loopne
sub
ds
or
jno
lret
mov
imul
adc
imull
adc
xor
cld
aaa
imul
add
repnz
jno
and
loope
popa
sahf
inc
inc
inc
test
into
test
inc
aas
stos
out
in
loope
ja
cmp
test
fisubrs
sub
mov
mov
jne
sahf
adc
sub
adc
xor
sub
addr16
mov
and
push
xor
lock
ljmp
sbb
lods
adc
out
xchg
into
pop
ret
daa
sub
mov
ret
lock
stos
shl
call
dec
mov
or
or
jl
clc
cmp
inc
les
stos
jo
das
or
into
scas
push
push
pop
cli
cmpsl
mov
push
push
jnp
lds
scas
pop
ljmp
lret
lods
je
and
ret
pop
cmp
pop
xchg
xor
loope
sbb
jecxz
in
js
jbe
aas
inc
test
fwait
out
and
cmpl
nop
cli
push
aas
mov
fistps
add
cmp
sub
sub
ljmp
js
rcrb
mov
mov
rclb
xchg
mov
into
popf
iret
mov
or
lock
fistpl
mov
sbb
es
les
push
and
cld
stos
in
andl
cmp
fldl
dec
shrl
lret
push
cwtl
sub
xlat
mov
add
xchg
dec
int
ret
les
dec
adc
loopne
mov
cs
cwtl
jg
mov
jecxz
test
cmpsb
xchg
lods
mov
jo
fidivl
dec
jecxz
lods
lret
jno
imul
rorb
pushf
les
inc
loope
push
xchg
sub
mov
sbb
popf
mov
leave
pusha
pcmpeqw
ret
fisubs
sti
ror
cmpb
mov
in
push
lcall
mov
pushf
std
int3
xor
push
frstpm(287
jo
aas
jge
add
mov
cmpb
outsb
dec
mov
inc
adc
arpl
sub
dec
xor
fcomi
movsl
mov
sub
pop
popa
adc
roll
leave
rorb
mov
jecxz
mov
add
ljmp
push
push
flds
jne
aas
std
dec
fs
loope
sub
ret
jge
inc
push
sbb
shll
xchg
js
add
mov
popa
lock
adc
mov
or
fcmove
or
dec
ss
fs
mov
xchg
or
dec
xor
sbb
fwait
mov
pusha
bnd
cmpsb
lods
cltd
jge
aas
stos
push
mulb
adc
cmc
cmp
xchg
aas
sub
jnp
loope
repz
das
arpl
inc
jns
or
and
or
adc
or
cs
xor
fbld
shrl
jp
jp
sti
mov
outsl
gs
fildll
das
pop
lods
pop
into
inc
repz
sarb
sbb
mov
es
repz
test
js
and
add
mov
mov
lods
sbb
push
leave
mov
or
ds
in
fs
stos
iret
pop
push
jne
and
adc
jle
mov
bound
lods
int3
or
int
scas
fcmovnu
mov
dec
jge
fistpl
mov
add
fdivp
repnz
bound
adc
mov
jge
add
inc
fldcw
div
rcll
xchg
adc
outsb
subb
add
adc
jle
push
mov
adc
dec
push
push
xchg
sub
push
movsb
dec
sub
and
push
int
aas
sub
xchg
enter
dec
dec
push
adc
adc
xchg
push
and
dec
dec
fs
sub
sbb
cmp
push
loop
ds
fdiv
jo
lcall
test
nop
cld
les
fildll
pop
push
bound
mov
popf
push
pop
sbb
gs
mov
cli
jno
mov
add
xchg
mov
mov
fisttpll
xor
pop
call
jne,pn
add
mov
adc
lcall
int3
jle
fisubs
lret
jns
xor
xchg
lahf
repz
scas
das
and
mov
shrl
xchg
xor
sbb
inc
lret
mov
inc
movsl
fisttpl
mov
into
xor
shlb
rcl
test
add
rorl
call
jmp
fwait
add
inc
shr
imul
mov
mov
mov
lods
popl
rorl
sub
sub
add
cmpsb
sub
stos
xor
aad
adc
mov
cmp
mov
adc
jmp
dec
or
mov
push
test
ds
sbb
in
sbb
sbb
cmp
adc
xchg
sub
jp
mov
mov
aas
sub
inc
sub
mov
dec
fwait
outsb
jnp
in
loopne
int3
or
cmp
gs
in
push
lcall
inc
cmc
aas
xor
sahf
cmp
adc
sub
mov
lret
push
outsl
inc
mov
inc
inc
pop
int
pop
inc
jne
jnp
addr16
lahf
push
xchg
or
mov
int
jno
pop
pushl
pop
xchg
out
in
and
mov
jecxz
cmpsb
enter
shlb
push
ror
and
mov
inc
ficoms
nop
rolb
test
in
bound
in
outsb
shl
xchg
push
mov
ja
movsb
repz
hlt
xchg
sub
push
mov
mov
jae
imul
jge
or
or
dec
mov
lock
faddl
mov
cmpsl
xor
ds
pop
adc
jb
add
aas
scas
mov
repnz
xchg
jno
cwtl
shlb
fmul
inc
shlb
add
leave
incb
cmpl
loope
ds
scas
sbb
pushf
inc
hlt
jno
adc
pop
inc
imul
in
xor
pop
in
mov
push
jp
adc
push
cs
or
std
mov
ds
ds
jnp
sbb
jne
les
and
mov
jb
js
lret
push
fs
inc
ret
fnsetpm(287
pop
lods
push
push
or
mov
les
fs
addps
or
xor
sub
inc
xor
stos
push
mov
xor
mov
or
pushw
test
jae
imul
icebp
int
rclb
icebp
test
fildll
int3
aam
scas
lret
movsb
pop
loopne
or
pop
pop
jb
jnp
hlt
mov
and
push
in
and
jne
cmp
mov
data16
push
scas
mov
xor
xchg
shrl
daa
cmp
aas
fidivrl
hlt
xor
jae
loope
movsl
inc
idivl
sub
pop
into
mov
paddw
fwait
in
mov
pop
stos
mov
dec
outsl
jae
nop
cmc
lock
inc
cltd
or
fdivp
sbb
xchg
push
shlb
movsl
xor
push
or
sbb
push
sub
das
dec
mov
rcrl
popf
incl
jno
push
cs
inc
jns
adcb
mov
adc
icebp
repz
in
lods
cmc
enter
frstor
ret
push
into
dec
mov
iret
cld
ja
in
hlt
notb
cli
inc
pop
push
pop
int3
lret
inc
in
xchg
and
sbb
and
andl
cmc
nop
ror
std
out
cmp
pop
pop
pop
ljmp
aam
or
xor
sbb
lret
imul
xor
pop
mov
fimuls
js
setle
jp
popf
cmpsb
pop
fistpll
push
xor
aaa
popa
and
mov
adc
xchg
arpl
insb
push
mov
dec
js
std
sub
daa
cmp
adc
insb
dec
mov
jmp
mov
out
aas
push
cmp
inc
ja
sub
adc
subl
cmp
mov
jb
push
jo
insl
pop
lock
cmp
into
dec
lahf
dec
sbb
pop
mov
sar
adc
inc
push
adc
call
test
add
rolb
dec
sub
aas
pop
call
ret
cli
rolb
add
push
stc
pop
cmp
lea
xchg
lods
mov
mov
xchg
in
inc
xor
xchg
scas
xor
sub
and
fildll
fldl
jge
sbb
call
fwait
jnp
mov
push
sbb
test
sbb
adc
lds
jnp
adc
mov
fs
pop
into
xchg
or
out
dec
xchg
xchg
js
sbbb
cli
jno
std
not
jge
mov
test
shlb
mov
jmp
add
cwtl
in
xor
out
cmp
add
add
es
jo
xor
xor
pop
jo
xchg
pop
cli
cmp
test
xor
inc
mov
clc
push
sub
ficompl
daa
lock
inc
inc
and
push
out
mov
dec
mov
fwait
sti
mov
xchg
push
xlat
xor
sub
mov
loope
mov
add
nop
dec
aaa
mov
bound
fidivrs
cmpsl
or
push
push
test
push
cmpsl
xchg
inc
sbb
in
repz
adc
sbb
ljmp
xchg
push
xchg
push
and
push
xor
fdiv
ljmp
cwtl
fstpt
xor
mov
clc
cmp
mov
ret
sbb
icebp
jnp
stos
lret
rclb
add
inc
movb
out
test
pop
das
and
aas
cmp
lahf
ja
fbstp
out
push
sahf
movsb
pop
add
mov
hlt
lods
or
push
sbb
jno
jmp
lods
pop
out
sub
xchg
int3
adc
sbb
add
fimull
cmpsb
std
orb
jg
lahf
icebp
jbe
sbb
adc
mov
into
call
into
cmp
insl
sbb
lods
std
scas
call
js
add
enter
aam
lea
icebp
xor
jno
adc
and
scas
add
mov
cmp
mov
jcxz
arpl
call
push
pop
rorl
sarl
sub
jne
jp
sbb
xor
jae
mov
sbb
xchg
jbe
and
ret
bound
dec
shrl
cli
dec
mov
jle
loop
push
jb
je
les
mov
movl
xor
mov
out
leave
cmpsl
sub
cmp
adc
xchg
xchg
lods
rcrl
or
out
xchg
imul
test
test
scas
jo
jns
mov
sbb
test
push
fsubs
aaa
scas
out
jb
add
xor
jo
test
mov
std
roll
add
cwtl
repnz
out
sbb
pop
inc
and
mov
push
cmpsb
jl
repnz
adc
cli
mov
rcll
xor
mov
add
and
xorb
std
adc
ss
cmp
sbb
inc
dec
in
out
shl
stc
push
js
test
xor
mov
lahf
int3
adc
aad
decb
leave
push
or
fdivrs
mov
or
in
movsb
and
xor
call
mov
shll
testl
add
mov
dec
int
cmp
popf
dec
xchg
test
loope
or
stos
dec
sbb
xchg
ret
sbb
mov
sub
inc
loopne
mov
imull
enter
lods
push
nop
xrelease
popl
pop
mov
scas
dec
pop
fadds
xor
test
addr16
dec
cld
lock
inc
sbb
lcall
cwtl
in
fs
sub
mov
gs
movsb
insl
jb
cmp
jle
adc
adc
and
outsb
add
imul
scas
cld
movsb
inc
sbb
sbb
push
xlat
scas
jecxz
push
pop
pop
xchg
ret
dec
ja
pop
into
push
arpl
push
pop
ret
cmp
inc
in
xchg
xchg
jae
gs
inc
outsb
add
mov
push
xchg
fidivrl
fisttps
ret
pop
mov
cli
outsl
add
sti
es
xchg
aam
out
cli
js
es
subl
jo
test
imul
sbb
or
ret
fiaddl
or
pop
jae
push
int3
sub
push
dec
sub
cwtl
sub
mov
dec
pop
and
decl
add
loope
jbe
js
mov
mov
int
in
repnz
daa
or
jp
mov
ret
lahf
jb
jg
inc
ja
mov
lods
mov
test
inc
daa
inc
faddl
stos
in
mov
das
xor
loopne
shr
out
into
pop
test
das
pop
mov
pop
cmp
jg
lds
push
leave
lcall
in
push
push
lret
pop
pop
jp
cld
arpl
mov
and
clc
push
popf
xorl
dec
cmp
inc
and
fidivs
jb
xchg
stc
xchg
lret
fneni(8087
dec
push
cmp
push
js
add
inc
pop
movsb
loop
addr16
daa
shr
xor
mov
push
fisubrs
fbld
mov
sub
or
jmp
icebp
or
and
stos
rcrl
xchg
jecxz
les
xchg
lret
shl
sar
stos
out
sub
popf
rorb
pop
cld
sahf
addr16
and
lods
sub
cmp
pop
xchg
out
jno
mov
push
add
imulb
sbb
ss
mov
xor
jne
push
rcl
nop
dec
daa
std
pop
aaa
out
mov
dec
fisttpll
bound
icebp
xchg
test
cmpsb
or
push
jl
subl
inc
xchg
pop
jmp
cs
xor
shrb
in
pop
xchg
adc
or
mov
sbb
sub
mov
lahf
out
out
jnp
dec
aad
dec
divl
xor
pop
cmp
out
lret
xchg
mov
shlb
cwtl
push
dec
out
or
inc
adc
outsb
jo
cmp
imul
sbb
aad
pop
pop
shrl
sub
mov
or
pop
mov
cli
imul
scas
ljmp
stos
test
inc
out
and
sbb
xchg
fsts
dec
or
pushf
negb
and
out
mov
xchg
rclb
push
imul
in
into
aam
inc
push
cmp
daa
in
dec
push
dec
inc
adcl
test
or
outsb
pop
stos
sbb
sbbl
in
pop
insb
lds
je
lcall
out
add
ja
push
cltd
out
or
dec
sbb
sbb
cmp
xor
and
push
jae
add
shlb
xor
les
outsl
xor
popa
loope,pn
movsb
inc
enter
dec
test
add
lods
pop
push
mov
or
dec
enter
mov
adc
incl
nopl
aad
sub
mov
add
cmp
test
mov
popa
lea
and
or
push
push
mov
in
idivb
cmp
push
test
xor
test
jo
insl
push
lods
stc
mov
pop
into
inc
js
addr16
push
icebp
mov
sub
xchg
ja
inc
push
lahf
jmp
adc
inc
mov
mov
popa
iret
sub
stos
sti
cmc
dec
inc
jbe
cmp
sti
lahf
pop
dec
cmc
sahf
jmp
cmp
sbb
sub
shlb
stc
div
lahf
inc
sarl
jl
mov
aas
outsb
aam
leave
rolb
nop
mov
lods
js
outsb
and
add
push
sbb
mov
xchg
xchg
sti
mov
push
shr
out
push
rcll
pop
daa
inc
loopne
and
jae
adc
mov
jb
sar
push
mov
pusha
cmpsb
repz
je
std
icebp
stos
sbb
lcall
test
lret
dec
js
xor
xor
insl
xor
pop
push
mov
lahf
addr16
dec
fptan
mov
and
sub
jo
inc
or
and
dec
test
andl
lahf
sar
in
mov
inc
js
fcom
cltd
sbbl
sbb
call
fmuls
pop
mov
xchg
fs
ret
in
mov
andb
repnz
call
sbb
loopne
add
fwait
pushf
inc
push
adc
xlat
jl
mov
cmp
adc
mov
mov
mul
pop
cwtl
aad
mov
mov
xor
inc
mov
cmp
xor
subb
push
lods
aam
cmp
xor
lea
aaa
adc
mov
jae
mov
sti
lods
test
mov
mov
ret
cmp
inc
ss
dec
icebp
mov
js
aaa
xchg
pop
pop
fisubrs
and
in
popa
sbb
loope
lret
repnz
test
sbb
jmp
sub
pop
ljmp
xchg
je
sub
inc
insb
mov
cmpsl
sub
adc
jmp
sub
mov
push
pop
mov
ficompl
sbb
add
mov
xlat
push
mov
popf
cmp
or
andb
adc
xchg
dec
mov
mov
xor
mov
ss
iret
pop
or
dec
dec
mov
mov
or
hlt
les
jge
fcoms
and
push
xchg
mov
push
pop
sbb
dec
or
and
adc
dec
adc
push
aaa
xchg
hlt
or
mov
add
fmull
pop
xchg
pop
mov
pop
xchg
fisubrs
mov
and
and
pop
and
ficomps
pushf
cmpsb
adc
sub
mov
sub
xchg
rorl
in
sub
add
dec
loope
cmpsb
fstenv
data16
cmp
mov
or
idivb
int3
repz
fcoms
mov
inc
dec
jl
stc
out
adc
pop
add
jmp
outsb
sbb
inc
dec
push
jb
xchg
lret
jmp
rcll
les
jbe
mov
mov
ret
mov
sbb
pushf
adc
mov
fnstsw
les
add
aaa
pop
cld
imull
shl
push
les
movsb
pop
int
or
dec
aad
xchg
cmp
mov
push
pop
fsub
jmp
dec
mov
popf
orl
xor
push
pushf
gs
pop
sub
adc
dec
inc
or
or
bound
mov
pushl
inc
idivl
jns
jge
mov
pop
xlat
jp
cli
dec
pop
pop
and
movsb
stos
stos
sbb
fidivl
les
ljmp
movsl
cld
leave
lret
fildll
std
movsb
and
add
and
xchg
mov
and
int3
and
xchg
jg
in
mov
jbe
jae
cmp
or
into
inc
shlb
mov
jnp
pop
xchg
mov
pop
inc
icebp
inc
lret
dec
mov
pop
imul
xlat
je
mov
out
pop
inc
addr16
add
pop
xchg
in
or
lods
push
into
cmp
lret
cltd
fdivr
sbb
jmp
stc
push
aaa
rorb
sbb
into
cmp
push
sub
in
adc
jne
jo
test
jmp
push
test
jbe
push
andb
jae
sbb
and
dec
repnz
jge
and
leave
mov
adc
in
test
mov
lahf
xor
mov
int
fisttps
jns
test
cmp
mov
mov
pop
and
cli
scas
and
imul
xchg
outsb
outsl
pop
outsl
out
or
lret
cmp
pusha
pop
stos
jcxz
pop
in
cmpsb
aaa
jo
inc
mov
cmpsb
daa
xchg
xchg
lock
xchg
movsl
push
pop
pop
cmp
cmp
cmp
arpl
mov
sarl
mov
inc
dec
sub
and
test
inc
inc
pop
mov
sbb
push
dec
gs
push
xor
jp
cmpsl
jae
orl
clc
xor
dec
sbb
jle
lcall
scas
ret
fdivrs
test
scas
pushf
push
aas
or
call
mov
inc
lcall
lods
inc
push
adc
sub
arpl
mov
iret
inc
xchg
clc
mov
ret
icebp
jne
jns
and
cmp
cmpsb
out
jnp
jg
insb
pop
mov
inc
sub
scas
ret
jmp
pop
push
repnz
adc
mov
add
jp
je
in
in
lahf
dec
mov
push
cmp
sub
ficoms
inc
mov
jmp
icebp
stos
dec
rcrl
pop
dec
sub
insb
mov
stos
sti
xchg
xchg
and
add
testb
mov
jns
ret
mov
mov
add
stos
xchg
push
fistps
mov
xor
out
icebp
or
or
out
mov
pop
dec
xchg
mov
adc
push
imul
sbb
adc
aam
mov
mov
adcl
and
or
jns
or
clc
inc
push
pop
pusha
fsubl
xlat
add
fstpt
outsb
popl
cmp
mov
add
out
fsubrl
or
sbbl
xchg
pop
in
cmp
in
and
sub
xor
adc
lods
fildll
ds
sub
mov
cmpsl
cltd
sub
je
add
lret
push
push
mov
and
inc
jmp
mov
bound
shlb
xchg
adc
jmp
adc
adc
cli
shll
lcall
pop
pushf
and
xchg
push
push
movsl
push
adc
and
adc
insb
arpl
cmp
and
adc
push
clc
inc
inc
jg
insl
sbb
je
psubd
jecxz
cmp
pop
add
popf
cmp
and
bound
dec
pop
insl
sbb
cld
pop
pop
jl
andb
test
cltd
add
inc
jbe
pop
clc
dec
clc
push
xlat
ret
xchg
les
xor
stos
xor
repz
sahf
inc
in
and
aas
in
cmp
mov
cmpsl
loopne
jns
pop
out
clc
cmp
loop
cli
sub
mul
xor
cwtl
pushf
ret
lods
inc
icebp
xchg
xchg
mull
das
mov
lcall
or
in
inc
jnp
loopne
and
cs
push
fadd
pop
lods
mov
lahf
je
push
mov
fcomps
mov
sahf
add
pop
inc
push
or
lahf
cmp
pop
jnp
fsub
sbb
lcall
pop
fst
push
scas
aas
pop
jle
lret
out
mov
cmp
push
std
adc
push
test
dec
je
test
mov
cwtl
scas
sbb
fdiv
daa
int
xor
push
fwait
xchg
pop
pop
fwait
aas
in
into
scas
rcll
jle
enter
dec
mov
jl
push
push
mov
cwtl
cmp
mov
mov
jecxz
insb
mov
nop
loope
add
je
inc
ljmp
cmc
mov
xchg
mov
mov
arpl
jns
adc
ds
lcall
inc
cld
adc
icebp
mov
sbb
and
lahf
mov
divb
leave
rorb
mov
bound
subl
xor
fdivrs
sub
push
and
fmul
hlt
push
in
cld
repnz
sbb
sub
xor
jae
pop
stc
mov
dec
cmpsl
mov
xchg
xor
out
ja
out
aaa
push
add
arpl
cmp
sti
cltd
nop
xchg
push
hlt
xchg
out
shrb
pop
mov
insl
aam
cmp
mov
in
cmpb
inc
jo
ss
imul
icebp
cmc
pop
dec
xor
sbb
sti
enter
xchg
xlat
cwtl
leave
loopne
loopne
adc
out
rcll
outsl
shll
fs
sbb
xchg
call
pop
sub
cld
or
jge
insl
jns
rolb
mov
jnp
mov
jmp
ret
dec
mulb
cmc
outsb
outsb
xchg
data16
in
xor
push
dec
sbb
lea
pop
mov
call
dec
adc
mov
insb
ja
push
sub
aas
jb
sub
sub
jle
mov
xchg
mov
add
or
ja
imul
dec
pop
sbb
inc
enter
nop
cs
popa
lods
dec
sbb
jno
movsb
inc
cld
xchg
xchg
cmpsb
pop
jno
push
and
ficomps
call
stc
rclb
notb
dec
jg
lods
sarb
pop
and
movsl
mov
and
fsubs
std
jnp
int3
mov
nop
lret
dec
sbb
daa
aad
jmp
test
xchg
push
sbb
in
push
or
or
xchg
mov
popw
jns
lea
imul
dec
mov
mov
mov
out
nop
or
inc
push
inc
call
jnp
bound
fsubr
jmp
sbbb
sub
cltd
add
ror
dec
xchg
cmp
mov
xchg
cmp
cmp
mov
cltd
addr16
std
ret
test
es
hlt
push
pop
xchg
mov
sub
subl
jp
data16
cli
inc
cli
test
into
stc
faddl
mov
fmull
cmpb
adc
daa
xor
xchg
mov
int3
in
jns
icebp
jl
aam
out
adc
xchg
lock
test
xor
stc
data16
decb
rcrb
fdiv
or
dec
dec
cmpsl
out
sub
fcmovnb
cmp
jae
ret
sub
push
out
add
iret
adc
or
addr16
and
dec
arpl
clc
cwtl
xor
sbb
je
push
sahf
cmp
inc
mov
outsb
and
repz
loopne
repnz
dec
mov
mov
imulb
fucomp
push
scas
repz
scas
cmp
mov
ja
test
cwtl
stos
add
adc
mov
jo
mov
jl
sbbb
and
shlb
cli
mov
dec
mov
mov
cltd
and
nop
int3
aas
insl
jge
mov
adcb
mov
addr16
jp
mov
sbb
mov
cmp
inc
test
das
out
lods
movsl
call
sti
pushf
mov
gs
int
jo
push
jo
push
rolb
leave
cmp
cmp
cmpsl
push
data16
out
xor
add
lahf
sbb
cmpsl
mov
and
hlt
xchg
shl
scas
in
imul
ja
out
inc
movsb
and
jae
inc
jno
pop
or
fucomi
sub
push
push
test
jo
cmp
inc
push
fiadds
jno
repnz
jge
repz
or
les
aas
test
and
mov
sub
push
in
cmp
mov
fmull
stc
cli
loopne
adc
mov
mov
xchg
xor
xor
rcrl
adc
lds
icebp
into
daa
je
cwtl
in
pop
nop
inc
pop
xchg
jbe
or
subb
sub
bnd
xor
push
cmc
mov
pop
jle
ja
pop
push
or
mov
inc
sbb
std
adc
shlb
arpl
mov
aam
xlat
fildl
arpl
and
outsb
hlt
nop
push
adc
push
push
ds
cmp
fwait
jecxz
push
test
bound
es
and
jo
adc
js
retw
not
xchg
and
sub
mov
rol
pop
jge
adc
xor
sub
clc
loop
ljmp
shl
lret
dec
mov
and
jne
mov
pop
jae
adc
cli
hlt
dec
pop
scas
gs
pop
aas
out
sbb
xchg
lods
or
daa
or
nop
movsl
mov
adc
popa
fwait
and
cld
push
xchg
xchg
cmpsl
dec
in
leave
in
xlat
out
xlat
movsl
push
scas
pop
outsb
xlat
cwtl
aad
mov
cmc
sbb
movsb
xor
inc
cvtpi2ps
xlat
mov
movsb
mov
jge
xchg
paddusb
mov
and
xchg
push
lahf
repnz
scas
test
aas
bound
inc
and
fiadds
out
jb
and
pop
mov
test
push
sub
das
cmp
sub
cmp
mov
dec
js
pop
fs
fisttpll
inc
call
pop
xor
pop
sahf
sub
es
sbb
jmp
inc
in
adc
sahf
in
pop
mov
dec
cmp
lret
test
mov
subl
xorb
xor
jg
mov
es
jbe
inc
sbb
lods
adc
arpl
out
sbb
leave
xlat
adc
cltd
arpl
add
ljmp
hlt
insb
leave
add
movsb
xor
stc
jmp
pusha
es
cld
sti
outsl
gs
cmpsb
rcr
lods
push
mov
push
add
int3
xchg
jecxz
into
xchg
push
lahf
dec
fwait
inc
jnp
sub
leave
mov
lcall
ja
adc
lea
pop
stc
nopl
nop
sub
das
roll
iret
mov
sub
outsl
movsb
cmovp
inc
and
sbb
xor
jb
mov
scas
dec
ja
fistl
push
or
aas
scas
icebp
mov
sub
mov
sti
orb
xchg
decb
xchg
sbb
inc
mov
pop
cmp
sub
mov
bound
or
int
jno
jae
add
mov
adc
shrl
xor
lock
mov
fldt
out
mov
dec
and
scas
repnz
shl
xor
push
lea
pxor
aad
lahf
cmpsl
inc
xchg
sarb
sbb
adc
cmp
and
mov
pop
imul
xchg
addr16
in
jp
cmpsl
cmp
mov
jp
inc
or
dec
aaa
xchg
cmp
xchg
mov
jne
cmc
loope
cmp
std
xchg
clc
and
outsl
shl
dec
fisubrl
test
loopne
into
or
imul
es
shl
mov
ja
jb
mov
push
inc
mov
ljmp
and
xorl
mull
pop
adc
pop
fadd
sub
sahf
lea
cmp
sub
scas
jbe
sub
cs
into
shll
mov
pop
xchg
scas
sar
adc
fsubp
into
cmp
pop
fstpl
xor
out
or
pop
std
and
clc
mul
ret
pop
fsubs
sbb
add
sbb
mov
lret
inc
or
ja
mov
int
cmc
push
xchg
mov
cmp
popa
fwait
test
arpl
sub
lds
jo
in
add
sub
ficoms
enter
cmpsb
popf
xchg
and
ret
add
loopne
loope
or
push
mov
ror
rorl
dec
pop
dec
push
push
jae
mov
mov
or
je
pop
mov
cmp
out
jmp
rcrb
add
call
mov
adc
add
fwait
sub
fimull
pop
cmp
jmp
sub
cs
lahf
dec
cmpsl
or
pop
idiv
push
sbb
push
leave
cmpsl
xchg
push
push
mov
loopne
test
pushf
jae
or
mov
or
dec
dec
push
and
test
repz
cmp
or
jp
mov
pushf
push
in
enter
dec
pop
sahf
mov
adc
aam
repz
pop
pop
cli
adc
adc
mov
out
negb
gs
mov
and
fistpll
adc
or
imul
mov
out
mov
add
sbb
xchg
mov
push
mov
xchg
imul
inc
mov
lods
or
xchg
and
cmp
push
ljmp
push
dec
jge
mulb
push
push
shrb
lods
cli
loopne
popa
push
pop
scas
mov
stc
push
jns
jp
out
xlat
push
xchg
ret
shlb
mov
add
scas
inc
xor
fdiv
xor
push
ds
add
or
and
fdivl
push
sbb
or
jmp
push
in
pushf
mov
adc
add
lcall
push
movsl
je
adc
popa
addr16
shrl
sub
and
inc
sub
incb
arpl
ja
cmp
jae
ficoml
lds
jae
repnz
add
fucomp
xchg
imul
loope
push
rcl
hlt
pop
scas
insb
dec
push
mov
mov
maxps
and
sbb
bound
sbb
leave
fistpll
jecxz
mov
mov
int3
in
and
sbb
xchg
fisubrs
adc
xlat
es
dec
mov
mov
dec
aaa
inc
mov
das
cmp
cmp
aad
mov
cmpsb
cmp
mov
pop
loopne
mov
int3
faddl
xchg
adc
shll
sbb
addr16
or
xchg
jne
xor
int
mov
or
or
dec
xchg
in
lds
fdiv
xor
mov
jecxz
fdivrs
pop
leave
jbe
dec
sbb
jmp
mov
fists
cmc
sub
mov
rorl
xchg
je
inc
pop
add
dec
sub
pop
push
cmpsb
pop
jo
ss
adc
pushf
das
jge
jns
stos
add
pop
sbb
inc
sbb
fdivrl
add
testb
lcall
mov
sbb
push
adc
lret
jo
mov
pushf
leave
add
xchg
call
adc
pop
mov
sbb
xor
jno
push
sbb
xchg
xor
push
lock
negb
mov
mov
loope
and
and
gs
shlb
movsb
mov
test
andb
fisttpll
inc
in
jle
adc
sbb
js
pop
push
add
int
mov
nop
fisubrl
bound
jp
inc
mov
push
push
and
subb
jbe
js
push
pop
mov
xchg
fsubrl
stos
adc
inc
lock
and
int3
jne
cmp
xchg
xchg
jl
stc
lcall
and
nop
sub
mov
push
ja
into
adc
xchg
add
push
data16
jmp
shll
pop
nop
addl
mov
xchg
pusha
fistl
mov
iret
shl
test
int3
popa
sbb
xchg
sti
jecxz
scas
mov
mov
pop
push
xchg
mov
testb
jae
lahf
sar
in
dec
sub
sbb
ds
pop
mov
faddl
inc
in
mov
mov
sub
icebp
dec
jmp
jno
shrb
cmp
stos
add
mov
push
cmp
cs
xchg
dec
notl
pop
mov
fstpl
aas
loop
cltd
xor
icebp
xor
fimull
icebp
jecxz
cmpsl
push
out
fnstcw
inc
mov
sti
mov
ss
out
sbb
mov
pop
in
mov
orb
movb
outsb
mov
jno
repnz
iret
xchg
repz
jns
inc
into
data16
es
fdiv
into
inc
call
insl
sbbb
mov
cltd
push
out
dec
jae
scas
xchg
jno
dec
push
push
push
mov
push
int3
mov
movsl
adc
jno
xchg
bts
rclb
test
je
in
push
daa
sub
push
lret
add
pop
mov
push
in
or
int
daa
mov
add
jnp
out
orb
outsb
mov
mov
xchg
adc
ret
icebp
and
popa
aad
iret
mov
jg
cmc
push
dec
dec
push
outsb
gs
fmull
mov
cmp
xor
push
push
cs
jp
lods
cmp
flds
cmpsl
push
jmp
push
jbe
dec
pcmpeqd
jge
sahf
xchg
xchg
rcrl
inc
shl
pop
je
push
scas
es
aad
mov
subb
push
pop
test
stos
jg
outsb
mov
pop
aam
mov
inc
pop
outsb
lret
call
jae
and
jecxz
daa
inc
xchg
into
mov
mov
movsl
mov
push
jno
mov
pusha
arpl
xor
push
int
cwtl
adc
test
and
addr16
push
repz
aaa
aas
inc
ret
cmp
pusha
push
adc
adc
inc
cmp
mov
push
lret
pop
dec
hlt
inc
mov
fcoml
lret
std
sub
jmp
shlb
jno
sbb
xor
mov
push
fmulp
out
jbe
sti
and
mov
mov
pop
lock
and
cmpsb
xor
pop
addr16
les
jne
pop
dec
and
out
xchg
dec
jns
lds
adc
fdivs
sti
mov
jl
pop
stos
into
mov
aam
es
in
cmpsl
sub
pop
mov
sub
xchg
mov
mov
mov
pop
jecxz
fmulp
out
xchg
sbb
test
and
adc
movsl
mov
shll
gs
inc
push
or
adc
push
neg
out
xchg
sub
and
test
cmp
add
xor
mov
push
arpl
xchg
jp
jge
insl
mov
icebp
adc
sub
mov
orl
jno
mov
push
mov
fsubs
cwtl
or
sarl
shlb
sub
scas
lock
mov
pop
fwait
std
ret
loopne
mov
movsb
mov
mov
int3
pusha
cs
gs
andl
es
daa
in
iret
sub
enter
out
sub
mov
and
mov
push
rolb
or
pusha
in
mov
sbb
loopne
in
pop
sub
ror
xchg
jp
mov
call
xchg
lea
bound
call
inc
ss
jp
mov
xchg
loope
push
aas
lock
sub
lods
enter
mov
popf
movsl
mov
imul
fisubs
fiaddl
fmul
in
jle
fimull
pop
jp
outsb
pop
shrb
arpl
je
dec
cmc
in
sbb
mov
pushf
jmp
mov
sbb
mov
stc
inc
sbb
mov
inc
jae
mov
inc
lods
in
into
mov
or
lods
cwtl
mov
in
xor
adc
jne
daa
xchg
inc
add
test
mov
sahf
outsl
dec
movsl
and
pop
xor
adc
mov
jmp
jns
mov
scas
or
cmp
push
lret
pop
add
mov
and
pop
popf
inc
clc
aas
cwtl
imul
sub
cmovle
jecxz
xchg
fldt
xchg
cltd
lds
lods
xchg
and
scas
add
scas
outsb
xchg
scas
xchg
dec
sub
out
addr16
and
mov
cmp
lds
in
mov
and
ljmp
dec
pop
clc
cs
je
or
pop
sub
xchg
push
add
js
adc
mov
movsb
or
mov
add
mov
adc
daa
inc
mov
les
ret
and
adc
jo
repnz
jecxz
push
les
in
lds
xor
das
cmpsb
hlt
push
sbb
and
out
mov
lods
sub
push
mov
sahf
push
movsb
in
pop
insl
jns
lcall
negl
xchg
sbb
xchg
aaa
xor
mov
adc
outsb
pop
cmp
imul
lret
es
stos
fisttps
pop
out
out
addr16
jno
pop
xorl
iret
insb
inc
or
fsubr
inc
adc
inc
loope
js
adc
pop
xor
and
into
pushf
pop
pop
dec
std
mov
sub
fmuls
lret
fmull
push
sub
lock
daa
cmpsl
pop
and
aad
lcall
pop
stos
jmp
out
ficoml
clc
fisttpll
mov
loop
and
or
mov
sbb
sub
push
rolb
fsts
cmp
je
xchg
cmp
or
inc
sub
sbb
popf
repz
push
mov
xchg
sbb
push
pushw
pop
cmpb
fistl
aam
and
mov
imull
and
push
pop
lods
xchg
jp
mov
orb
popf
orl
movsb
fsubrl
rorl
add
jmp
and
lret
add
push
shr
jecxz
cmp
in
push
push
cmpsb
cmc
mov
movb
dec
test
mov
repnz
jle
jl
jg,pn
out
pop
sbb
jmp
imul
mov
ror
test
xor
adc
test
hlt
cld
test
mov
stos
sub
push
lahf
add
mov
cwtl
cmp
repz
xchg
in
jns
mov
or
out
fstpt
rcrb
jo
dec
adc
outsl
mov
push
repz
int3
fmuls
shlb
dec
fiaddl
and
mov
mov
iret
push
mov
pushl
mov
mov
mov
ljmp
jnp
jle
int3
cmp
mov
out
jae
sub
pop
fbstp
jnp
aad
or
mov
add
lods
dec
movsl
lods
lret
xchg
in
mov
addb
add
lods
ja
sub
lcall
stc
out
loopne
rcrl
je
inc
fisubs
add
or
mov
sbb
dec
shlb
test
push
pop
mov
sahf
call
add
pop
add
jp
and
xor
ljmp
cltd
fiadds
out
int
inc
sarl
and
inc
je
pusha
das
mov
cmp
repnz
push
faddl
fmul
lock
xor
loope
or
daa
test
clc
mov
pop
cli
add
mov
jmp
dec
push
ret
xlat
and
mov
add
aaa
mov
push
jl
scas
cs
shll
inc
out
cmp
out
xchg
popf
sbb
test
push
cmc
adc
pop
cmpb
sub
xchg
xor
test
ret
stos
sub
mov
je
hlt
jae
dec
stc
jecxz
push
and
fnstenv
dec
jge
cmpsl
mov
and
aad
jp
inc
cltd
jns
cmp
dec
inc
mov
push
xchg
es
inc
jb
mov
jecxz
daa
pusha
or
movb
inc
stc
push
lret
xchg
ds
out
xor
ret
pushf
jae
cmp
mov
pop
sub
iret
adc
aas
out
add
jae
add
fwait
jge
stos
pop
dec
mov
mov
outsb
push
dec
fldcw
sbb
cmp
aam
sub
adc
ss
sub
mov
subb
jmp
xor
mov
insl
xchg
mov
mov
or
inc
sub
pop
sti
push
jbe
dec
jo
mov
insl
cvtps2pd
add
sub
xor
mov
sbb
fcom
and
lods
pop
jne
sbb
outsb
sbb
sbb
imul
dec
sbb
jb
pop
pop
int
sti
gs
ss
int
add
xlat
hlt
ljmp
pop
push
cmpsl
mov
push
daa
insl
loope
sub
add
imull
insb
loope
or
js
jno
cmpsb
inc
scas
sub
ss
test
sub
pop
std
pop
hlt
mov
iret
mov
sub
and
rcl
out
jle
into
cwtl
or
lahf
gs
leave
adc
mov
pop
popa
insb
xor
xor
ds
pop
subl
aam
xcrypt-ecb
cmpsl
dec
out
icebp
cld
scas
out
mov
add
scas
jp
andl
cmpsb
rol
sarb
xor
jmp
mov
jmp
fsubrs
cld
mov
adc
or
mov
jns
or
in
fstps
fcmovne
dec
lret
mov
dec
push
mov
dec
push
jbe
aaa
jne
pop
lret
add
cltd
imul
into
aas
add
xchg
movsl
loope
push
mov
mov
pop
mov
cmp
jl
int
push
loope
mov
testb
mov
testl
negb
or
xor
rol
sbb
fisubl
inc
push
xchg
xchg
clc
mul
xchg
dec
enter
dec
sub
shrb
loop
or
cmp
push
int3
mov
adc
mov
jo
and
pop
fwait
xchg
mov
and
jmp
enter
hlt
jmp
cmp
ret
adc
icebp
outsl
jmp
ja
jge
xchg
pop
cmp
je
and
test
lcall
rcll
inc
mov
xor
out
pop
out
pop
adc
insb
lock
insb
push
gs
out
cmpsl
shrl
jl
sub
mov
repnz
test
jae
cld
insb
pop
xchg
add
fimull
fsubr
pusha
adcl
cld
ss
mov
mov
mov
data16
pop
scas
in
rcl
scas
mov
ds
movsb
mov
fsubrp
cmp
std
call
push
outsb
cwtl
sbb
lods
sbb
cwtl
sti
fldl
push
stos
int3
jns
lcall
out
push
subb
ss
adc
add
mov
sub
push
out
call
cltd
xchg
mov
jae
rclb
jae
mov
xor
add
inc
lret
or
mov
pop
xchg
mov
xor
cmpsl
xorl
cli
adc
mov
jmp
aas
outsb
loope
dec
push
out
or
cmp
xorb
int
ret
dec
sbb
cmpsl
inc
mov
sub
xor
jo
popf
fnclex
adc
add
dec
jg
pop
shrd
popa
or
xor
jne
cli
dec
jg
inc
or
jnp
cmc
xlat
scas
sub
aaa
cmp
es
popf
adc
inc
jl
xor
es
mov
and
cmp
dec
cs
dec
pushf
sarb
mov
and
arpl
daa
ud0
aaa
or
push
mov
fs
jle
das
jmp
aad
jo
adc
jb
adcb
jecxz
adc
in
dec
sbb
in
nop
and
scas
mov
and
mov
mov
fisubs
movsw
dec
xor
mov
loopne
mov
adcb
inc
xchg
nop
loopne,pn
nop
shll
clc
and
inc
pop
mov
xchg
movsl
inc
sub
mov
jne
roll
lea
sbb
push
inc
subb
js
push
pop
mov
imul
add
shrd
jecxz
enter
lcall
clc
leave
lret
xchg
pop
sbbb
scas
jmp
dec
sub
cmp
lods
and
popa
dec
outsl
fiaddl
push
int3
sub
jne
xchg
jle
pop
dec
fstps
adc
inc
sbb
push
mov
inc
push
fldenv
xlat
nop
in
outsb
es
pop
repz
hlt
pop
out
sbb
adc
push
and
outsb
cs
xor
orl
test
shlb
aaa
pop
xor
jno
xor
orl
aaa
sub
test
fs
push
clc
mov
ds
loop
jb
rcrl
push
jecxz
mul
test
inc
fistpl
jno
call
dec
mov
jmp
cmpsl
imul
pusha
xor
lret
ljmp
mov
xchg
nop
jne
mov
mov
inc
bound
hlt
xor
push
jmp
scas
loopne
dec
idivb
popa
pushf
jl
into
jecxz
int
add
enter
filds
push
cmp
xchg
fsubr
dec
xor
repnz
test
fldt
pop
mov
push
jbe
xor
inc
sarb
inc
mov
int3
or
mov
fcmovb
xchg
cmp
icebp
popf
or
and
push
inc
sub
addb
call
shr
fistpll
jne
push
pop
jmp
pop
fadd
sub
sbb
hlt
add
sbb
cmc
add
mov
jbe
dec
xor
mov
stos
add
adc
ja
repz
pushf
jb
addr16
outsb
pop
mov
mov
mov
orb
jecxz
and
lret
add
cld
loope
mov
frstor
pop
sahf
sti
nop
stos
xchg
clc
jl
scas
and
jp
sbb
dec
shlb
cwtl
cld
out
sbb
jae
add
movsb
push
adc
add
lods
push
ds
imul
add
inc
iret
pop
or
adc
pop
mov
in
dec
inc
mov
mov
mov
pop
neg
or
cwtl
jp
sbb
add
jae
int3
rcrl
and
pop
jl
push
xchg
dec
pop
es
pop
lret
dec
push
sub
sub
in
and
test
and
xchg
mov
jmp
mov
push
jecxz
cmp
mov
andb
mov
add
xlat
adc
jge
fndisi(8087
or
xchg
call
shll
lret
push
add
in
leave
adc
bound
adc
jnp
bnd
add
inc
dec
inc
xor
fnstsw
shlb
cmp
sar
jp
movsl
mov
sub
sub
jns
adcb
test
push
push
mov
jbe
stos
pop
xor
xchg
mov
dec
sbb
jo
cmp
ss
add
mov
cmp
nop
testl
js
xchg
pop
add
jns
stc
data16
pushf
imul
fsubrs
inc
push
cmp
outsb
cmpsb
pop
mov
add
das
loop
int3
mov
push
fsubrl
pop
mov
push
jle
adc
ja
sbb
int
xchg
movsb
daa
mov
xchg
dec
dec
add
xor
mov
mov
std
out
scas
mov
fwait
and
inc
sbb
ljmp
add
iret
mov
rolb
sahf
daa
popa
sub
jle
or
rol
stos
lods
cmp
push
subl
mov
mov
fldenv
jne
push
adc
out
shr
push
pop
adc
dec
stos
ds
in
dec
rcll
pop
cmpl
mov
movb
mov
or
mov
js
and
jns
mov
andl
xor
je
jmp
sub
outsw
dec
mov
push
push
aad
mov
shrl
int
push
sub
xor
loop
pop
int
cmc
dec
int3
pop
lock
clc
lret
mov
insb
mov
xchg
loopne
fsubrp
mov
xchg
xor
leave
dec
and
stos
pop
insl
popa
inc
mov
or
add
xchg
xorb
rcrb
js
mov
pushw
pop
add
dec
stc
pushf
cwtl
mov
pop
and
xchg
or
jns
cmp
lods
push
xor
fistps
cmp
and
xor
ss
cmp
dec
cmpsl
loopne
cmpsl
stos
icebp
out
jb
cld
push
mov
sub
lcall
adc
andl
ds
ret
jae
lds
jge
adc
xor
cmp
push
mov
cmp
jnp
sub
lds
dec
ja
sub
xor
mov
lret
mov
addb
out
mov
daa
and
inc
insl
jb
lret
shl
push
mov
mov
sbb
test
lcall
push
lahf
mov
arpl
dec
out
ret
ds
pop
xrelease
popf
notb
sub
pop
jecxz
pop
fbld
adc
cli
xchg
out
dec
or
cmp
add
sub
out
or
cltd
sub
pop
fsubrl
mov
mov
aad
repz
andb
dec
jns
dec
cld
out
pop
fisubrs
pop
cmc
dec
insb
dec
int3
xchg
adc
and
lds
pop
fldl
and
sub
pop
fmul
cmp
orb
movsb
enter
jecxz
mov
pop
mov
pop
push
cmp
repz
filds
adc
aam
cmpsl
hlt
mov
mov
xchg
jle
pop
cmp
mov
add
cmp
jae
lret
pop
cmp
mov
cmp
iret
mov
xchg
mov
rorb
ja
pop
jmp
mov
and
fisubrs
adc
insl
loope
push
rcrb
pop
popa
xchg
xchg
das
fists
dec
popf
hlt
and
xor
lcall
and
lods
fdivs
inc
xchg
repz
stc
adc
test
sbb
cltd
ret
jge
pop
sub
mov
jmp
push
stc
cs
or
mov
mov
outsl
cld
cmp
int3
adc
addr16
int3
faddl
pop
dec
mov
shl
jge
es
cmp
les
sub
nop
xchg
push
push
movsl
insl
jo
xor
cmp
dec
or
xorl
add
jmp
ret
daa
fdiv
xchg
cmp
cmp
ljmp
loopne
int
in
push
xchg
inc
fimuls
pop
imul
xor
lods
in
lock
pop
cwtl
push
fcoml
insl
mov
xchg
sbb
stos
cwtl
add
and
cs
loopne
dec
adc
sahf
jo
push
popa
scas
xchg
push
pop
outsl
jmp
inc
mov
aas
out
add
nop
sub
movsb
das
push
ret
lea
xchg
leave
pop
sbb
rclb
adc
inc
push
mul
xchg
mov
inc
out
add
jge
jno
push
pop
dec
lods
aam
or
dec
rclb
imul
hlt
sub
pop
add
mov
adc
fcomi
mov
js
aas
xchg
push
sbb
bnd
rcrl
mov
cmp
or
sbb
sbb
or
dec
call
js
aaa
and
push
or
data16
mov
xorb
mov
xchg
ja
dec
sbb
repz
xlat
pop
adc
fcmovbe
xchg
sbb
mov
jne
test
xorb
pop
dec
test
cltd
mov
cmp
push
sti
or
repnz
add
push
and
sti
jae
mov
mov
lods
and
lods
adc
ret
pop
or
pop
repz
dec
inc
inc
out
push
addr16
push
enter
jle
sbb
scas
negl
xchg
mov
add
rol
pop
repz
cwtl
pusha
and
cmp
add
insl
lahf
in
xchg
cltd
int3
sub
es
xchg
inc
ret
mov
cmp
inc
bound
pushf
or
mov
cmp
jmp
mov
mov
sbb
cmp
cmp
mov
and
adc
add
push
jno
jb
sahf
jnp
aam
jle
fisttpl
push
adcl
test
add
xchg
and
sahf
push
and
test
xor
add
cmpsl
stos
push
stos
dec
mov
call
add
add
jecxz
test
loop
pop
mov
out
mov
fbld
mov
movsb
repnz
mov
test
ss
push
loop
mov
cmp
push
push
fwait
in
shlb
mov
leave
or
call
gs
notl
cmp
cmp
xchg
jo
ret
into
ds
xor
cmp
mov
xchg
test
jns
pop
insl
pop
scas
cmpsl
dec
push
nop
adc
jno
cmpsb
jb
out
cltd
ror
cmc
sbb
mov
stos
dec
nop
add
cmp
inc
mov
mov
adc
vcvtps2dq
jp
iret
pop
std
insb
cmp
inc
push
add
xchg
xchg
ret
xorl
fs
popf
mov
out
fsubs
jnp
add
pop
jmp
shrl
cmp
sub
jg
das
cmp
aad
mov
pop
addr16
cli
mov
enter
lret
rep
out
xorl
push
mov
aad
sbb
and
sbb
adc
fucom
in
leave
loop
jl
pusha
and
cmp
and
aas
adc
pop
lds
dec
pop
ja
dec
jns
pop
es
sub
and
subb
pop
xchg
scas
or
in
jmp
dec
aaa
xchg
sbb
dec
lret
mov
xchg
stos
inc
inc
les
loop
jns
mov
and
repnz
ret
loopne
mov
fisubs
or
mov
and
rcr
xor
mov
insb
in
stos
fistps
mov
cld
xchg
cmpb
xlat
jmp
test
add
pop
xorl
cltd
and
int3
inc
adcb
iret
push
test
sbb
aaa
or
out
mov
rcll
and
cwtl
push
add
dec
out
pushf
xchg
mov
mov
push
cmp
mov
xchg
in
imul
inc
cs
sbb
or
leave
or
outsl
mov
sbb
sub
add
fidivl
stos
mov
push
xchg
pop
push
mov
enter
popf
fwait
mov
mov
mov
sbbb
repnz
jns
xchg
mov
pusha
xchg
sti
lods
or
lds
add
pop
jbe
inc
out
loop
das
jno
sub
and
mov
fiaddl
and
xchg
pop
call
js
adc
sbb
lea
push
xor
jp
test
inc
sbb
fcomi
shll
iret
call
scas
or
into
mov
sbb
pop
dec
sbb
stos
int3
xor
lods
fistl
out
xor
repz
jecxz
js
xor
shll
in
sub
xchg
lret
clc
lods
aad
int
aad
clc
and
sbb
aam
inc
cli
loop
aam
inc
xlat
in
push
jg
aam
cmc
jb
movsb
roll
jns
push
cmp
cmpsb
mov
adc
jnp
pop
lret
es
sub
or
mov
and
das
sahf
jl
mov
inc
ret
loopne
mov
idivb
in
mov
iret
pop
xchg
dec
aad
outsl
fwait
cmpsb
jmp
out
in
pop
xchg
xchg
sbb
dec
inc
push
sub
xor
push
push
mov
jbe
inc
cmpsl
xor
or
cbtw
mov
iret
mov
cltd
or
jnp
lea
and
mulps
push
inc
add
push
out
lret
or
pop
mov
scas
in
push
cmc
cltd
rcrb
adc
xlat
or
dec
sahf
mov
sbb
jmp
push
int3
mov
lods
vpsubw
mov
arpl
loopne
mov
jge
jecxz
int
adc
sub
icebp
inc
data16
or
cmp
nop
arpl
andb
xor
pop
sti
dec
movsb
out
mov
in
stc
lods
mov
jb
inc
stc
inc
std
push
out
jne
inc
mov
sbb
jp
push
jbe
into
icebp
or
in
pusha
jb
arpl
loopne
lods
ljmp
out
insb
pop
test
jbe
inc
pop
xchg
jns
shll
sbb
dec
das
test
push
jnp
jb
mov
cmpsb
addr16
and
out
insl
gs
call
lret
mov
mov
cmp
mov
orb
stos
lcall
cmp
push
inc
mov
test
loope
out
adc
testb
add
shll
mov
aam
test
cmp
fildll
xchg
xchg
mov
inc
popl
imul
repnz
dec
dec
mov
mov
loope
xor
mov
insb
aad
pop
fnsave
loopne
movsl
cmpsb
jae
push
inc
inc
es
inc
fwait
push
xchg
adc
jg
fbld
sysenter
rclb
sbb
scas
ja
in
dec
xor
sbb
cmp
movsl
pop
stos
xchg
ja
outsl
cmp
and
xchg
cmp
push
out
icebp
cmp
mov
mov
icebp
push
into
jge
dec
outsl
loopne
cmp
jb
mov
lret
dec
pop
jl
dec
jmp
imul
jns
sub
add
sbb
push
je
pop
lods
add
inc
and
stos
dec
pushf
inc
xor
ret
ja
mov
inc
and
les
or
mov
repnz
mov
aas
xchg
xor
pop
popa
sti
xchg
cld
xchg
aas
xor
mov
add
mov
xchg
ja
movsl
jmp
packsswb
push
aam
jp,pn
idivb
pop
stc
dec
aam
inc
rclb
in
mov
fs
je
cwtl
fists
repz
lea
lock
xchg
jb
xchg
mov
ljmp
pop
mov
call
out
inc
lods
push
data16
clc
dec
arpl
dec
jmp
outsl
xor
pusha
sbb
dec
and
and
xchg
test
mov
push
lret
hlt
arpl
mul
call
rolb
push
data16
and
mov
pop
in
or
mov
cmp
shlb
mov
in
mov
lods
popa
into
or
insl
test
cmp
mov
jg
or
js
jg
int
or
addr16
movsl
add
stos
dec
jo
ret
es
in
xorl
xchg
xor
repnz
push
push
cld
jg
pop
xchg
imull
jle
inc
hlt
pop
adc
ljmp
xor
sub
fcmovbe
and
lahf
sahf
and
sti
iret
sub
add
iret
sarl
jb
mov
into
negb
pop
pop
sahf
outsl
test
xor
test
jge
or
int
push
hlt
add
adc
inc
push
mov
sbb
push
ja
adc
or
pop
sbb
jo
push
lahf
push
mov
out
in
mov
leave
icebp
and
push
leave
sub
call
push
inc
mov
ds
mov
loope
push
pop
fwait
shll
sbb
outsl
pop
adc
daa
or
xchg
lods
lds
jg
xchg
sbb
and
mov
pop
jae
cwtl
out
sub
stos
push
es
in
paddsb
and
enter
lahf
iret
push
insb
sub
sub
aaa
mov
cmp
daa
or
push
xchg
jle
pop
add
out
add
inc
loopnew
sbb
in
test
imul
imul
mov
jns
mov
out
xchg
shlb
jno
mov
das
inc
data16
jmp
pop
xchg
mov
in
sahf
lret
ljmp
fnstenv
push
push
popa
cwtl
cwtl
xor
imul
int
jbe
popf
or
adc
jmp
jnp
mov
or
dec
cs
cmpsl
ljmp
mov
sub
xchg
and
jmp
or
adc
mov
xchg
out
fsubrp
in
aas
jbe
cmc
mov
int3
xchg
and
les
mov
push
xchg
sahf
addl
jge
pop
mov
adc
push
insl
jge
jl
mov
xor
push
fistl
pusha
bound
int
rcr
out
movl
cmp
repz
lock
xor
cmp
and
fsts
sbb
and
test
mov
xchg
xchg
xchg
push
or
hlt
jb
nop
sbb
das
pop
adc
pop
das
or
add
xor
lods
mov
mov
push
jecxz
sub
out
pop
stos
jg
in
adc
cs
leave
loope
sub
arpl
loop
mov
cmpb
jmp
push
js
clc
test
loope
xlat
sbb
ljmp
jecxz
sub
push
jmp
pop
jge
lock
insb
mov
pusha
jb
lret
dec
sbb
jmp
jmp
cmc
pop
aam
mov
and
pop
and
shlb
bound
mov
or
imul
adc
in
cs
js
xchg
sbb
loopne
xor
icebp
push
mov
fucomip
les
xchg
pop
int
xchg
cli
bound
out
stos
cmp
and
pushf
mov
jb
test
dec
pop
fwait
cmc
cmp
rcrl
and
scas
cmp
push
sbb
mov
loope
or
inc
xchg
iret
gs
xchg
ror
xchg
and
or
dec
movsl
ljmp
pop
add
jl
addl
vpmacsswd
add
sub
push
push
and
dec
jmp
pop
out
ret
jo
or
mov
xlat
fwait
in
pop
repz
insl
lock
pop
xor
repnz
ljmp
das
movsl
repnz
sub
dec
jbe
fsub
xchg
hlt
popf
push
inc
popf
dec
mov
movsl
lods
jae
scas
cmpl
aaa
popf
test
mov
int
mov
jo
sub
mov
sti
sbb
mov
je
rcl
out
out
jb
xchg
das
aam
sbb
xlat
xchg
adc
mov
mov
inc
cmp
pop
sub
jecxz
xchg
push
data16
inc
sub
test
addb
mov
and
or
mov
sbb
ja
xor
std
xchg
mov
lds
sub
adc
data16
iret
imul
sub
xchg
sbb
sti
lods
mov
cmp
jl
fadds
mov
push
sbb
and
mov
mov
and
add
cwtl
mov
outsb
fldenv
push
dec
push
mov
stos
or
mov
xchg
gs
mov
outsb
or
mov
xor
inc
fldl
or
rcrb
xchg
ficoml
ljmp
out
cld
mov
jae
lret
cmc
add
add
adc
jp
add
jle
mov
fs
enter
mov
lods
jae
add
shlb
or
mov
loope
cmp
js
jne
and
repz
mov
nop
mov
jne
addr16
or
sti
inc
xor
test
mov
and
sub
pop
pop
or
and
adcl
push
sub
shll
cmp
pop
mov
jbe
cmp
inc
cmp
adc
and
dec
push
push
push
ds
ret
pop
dec
clc
loope
push
fisttpl
sub
arpl
stos
push
lods
mov
push
loop
insl
pop
or
fimuls
inc
xlat
mov
mov
adc
or
out
xchg
ficomps
icebp
nop
test
push
icebp
loop
dec
jae
fsts
sub
rclb
fnstcw
int3
fwait
call
les
push
fsubs
out
or
les
jle
clc
out
mov
test
insw
add
push
pop
jns
add
scas
subl
pusha
pop
push
roll
and
lret
out
adc
aas
out
adc
sub
ds
xor
test
mov
inc
mov
dec
and
ret
sbb
outsl
sbb
jnp
aas
cmc
adc
or
xchg
clc
pop
rcl
ficoms
aam
es
popf
aam
das
inc
outsb
sbb
add
loop
shrl
xor
sbb
jge
inc
ljmp
mov
inc
mov
shrb
mov
xchg
sbb
mov
sti
fdivrs
mov
fsts
int
fnstcw
mov
fdivrs
out
in
dec
cmc
and
sbb
inc
push
pusha
mov
pop
jnp
xor
adc
cmpb
cmp
dec
or
hlt
loope
inc
push
lcall
adc
or
xor
mov
loop
jge
jmp
addr16
cmp
clc
pop
fisttpl
iret
cmpsb
je
adc
lahf
jne
lock
pop
pusha
xlat
jne
scas
loopne
aaa
pop
mov
lock
or
and
jbe
dec
mov
daa
xchg
repz
jmp
dec
in
shrl
gs
pop
inc
cmpsb
jmp
or
dec
pop
cmc
imul
cmp
fiaddl
jge
jp
mov
mov
fstps
mov
push
ljmp
xor
pushf
jecxz
sahf
inc
xchg
movsb
cwtl
ret
jmp
sbb
arpl
call
pop
cltd
into
je
push
inc
dec
test
jl
jl
sbb
cli
mov
gs
dec
lock
push
or
adc
cwtl
or
push
movsl
clc
jmp
lods
or
nop
gs
inc
call
adc
popa
flds
mov
call
out
sbb
ljmp
adc
xchg
push
xchg
xor
pop
mov
mov
xchg
mov
lods
sub
xchg
stos
shrb
jp
sbb
imul
xchg
ret
lahf
adc
data16
stc
stc
xchg
and
out
mov
dec
aaa
xor
loope
xchg
sbb
andb
or
sub
mov
pop
inc
imul
les
lods
je
cs
mov
aaa
adc
movsl
xor
push
out
into
test
ja
iret
adc
lock
lcall
pop
bound
and
jp
adc
insb
out
mov
sub
or
mov
scas
sahf
loop
lods
cmp
push
jne
push
js
mov
lock
test
pusha
insl
cs
enter
into
pushf
mul
mov
cmp
les
jae
mov
daa
jl
push
fwait
insl
lcall
in
daa
jae
mov
lcall
mov
or
scas
popf
adc
xchg
test
inc
insl
pop
cmp
jo
rclb
add
rcrl
jo
jb
addl
sbb
sbb
mov
int
jns
xchg
sbb
movsb
xor
jns
cltd
arpl
push
imul
jle
je
adc
mov
xchg
ret
sbb
inc
leave
mov
dec
clc
jns
aas
xchg
inc
push
pushf
je
cmp
xchg
fwait
xor
andl
mov
mov
add
fistpll
out
test
movsl
pop
aaa
daa
test
aam
xchg
imul
and
cltd
fldenv
jo
jmp
flds
jne
fwait
les
jne
inc
pop
ja
notb
mov
mov
add
pop
or
dec
push
adc
xor
or
pusha
aad
imul
js
popa
and
add
iret
mov
rcll
repnz
in
jns
sbb
xchg
das
jno
push
pusha
fwait
cld
bound
jb
add
mov
inc
les
jno
push
cmp
jle
inc
popf
cmp
cmp
insb
jae
in
cltd
mov
orb
push
inc
jo
cmp
imul
jnp
add
jne
insl
cmpsl
add
jecxz
adc
add
aad
sub
sarb
cmp
dec
bound
inc
lds
fdiv
es
les
push
popf
jp
xchg
imul
ret
xor
adc
jmp
movsl
rcr
adc
ds
leave
scas
aaa
cltd
aad
imul
and
repnz
fs
in
push
stos
fidivs
mov
mov
cmp
xlat
or
repnz
mov
clc
xlat
lds
adc
mov
idivl
es
ja
inc
push
aas
mov
jae
xor
xor
adc
arpl
cmp
lret
jle
stc
dec
lea
adc
cmpxchg
pop
into
shr
call
outsb
mov
or
adc
inc
cmp
sahf
daa
fadd
mov
inc
inc
jmp
mov
int
and
dec
scas
jmp
ja
mov
int3
imul
fstps
adcb
jl
xor
jecxz
or
test
mov
adc
jo
aad
mov
push
dec
aam
scas
js
or
lds
fstpt
sub
or
pop
in
sbb
clc
sbb
pusha
mov
sub
roll
sub
mov
mov
aad
sbb
adc
mov
pop
xchg
movsl
adc
pop
jno
xor
xor
lea
sarl
cmc
pop
loope
in
pop
dec
cmp
data16
and
aad
mov
add
or
lds
jnp
sbb
push
pop
mov
or
das
mov
arpl
jmp
out
mov
ss
fmulp
mov
push
pop
std
mov
push
movsb
loopne
vmovups
cmp
jl
stc
outsb
imul
neg
loope
pop
out
cmp
push
in
pminsw
aaa
inc
sub
jnp
pop
dec
dec
push
push
dec
rolb
lret
fmull
notb
inc
sub
popa
std
mov
or
push
xor
scas
jl
mov
mull
mov
or
test
sti
stc
or
stc
and
push
jmp
add
cmpsl
mov
and
movsl
sahf
jae
lds
nop
into
pop
pushf
data16
dec
out
es
cli
jecxz
mov
xchg
sbb
aam
and
jl
out
push
xchg
cmp
mov
aas
push
aas
es
adc
leave
or
pop
or
insb
adc
sbbb
mov
sarl
enter
push
into
xor
int
inc
ds
jns
sbb
adc
ljmp
and
lods
adc
cmpsb
push
pop
je
cmpsl
and
cs
es
popa
sbb
das
orl
testl
mov
in
dec
in
pop
call
push
pop
iret
out
push
adc
push
cmc
and
jno
cmp
inc
outsl
mov
fwait
lcall
lods
pop
mov
push
loop
imul
cmp
sub
scas
mov
jg
das
push
scas
mov
test
roll
sar
dec
cmpsl
cltd
ljmp
pop
jae
cmpsb
data16
insb
sti
adc
lcall
fistpll
mov
shlb
sbb
push
sbb
jmp
sbb
fimuls
inc
xchg
bound
cmp
lea
mov
js
or
mov
cmp
fnstcw
add
xchg
or
imul
adc
sbb
clc
mov
ja
jae,pn
xlat
and
xchg
push
mov
or
cltd
es
loop
sbb
add
call
push
xor
jmp
xchg
loop
pusha
in
shr
xchg
aad
js
push
mov
xor
rcll
mov
xchg
fldenv
out
mov
stos
out
movsb
or
xchg
mov
inc
fisttpl
push
inc
out
pop
mov
sbb
and
stc
mov
mov
shrl
pop
xchg
in
jp
frstor
shl
mov
cltd
movb
jmp
xor
aaa
push
clc
mov
sbb
imul
push
bound
stos
cs
mov
inc
shlb
mov
das
lea
dec
pushf
bound
les
mov
cmc
fldt
xchg
hlt
pop
xor
imul
movsl
rcrb
fs
test
push
frstpm(287
imul
mov
clc
mov
cli
frstor
fs
pop
jne
dec
push
and
cmp
xor
sbb
pop
adc
fimuls
mov
push
push
add
pop
or
pop
or
or
xchg
scas
rol
gs
sbb
jl
push
pop
mov
and
orb
and
jns
push
inc
jno
cmp
adc
or
inc
scas
fcomps
mov
in
inc
shlb
fsubrs
cld
popf
imul
iret
int
cltd
cwtl
push
sar
fistl
xor
stos
out
push
sub
pop
push
fidivrl
ljmp
call
pushf
rorb
xchg
mov
or
idiv
aam
or
sub
sti
in
push
int
dec
push
lret
mov
xor
loope
call
daa
mov
mov
cmpsl
mov
in
imul
fucom
fisttps
test
push
pop
mov
data16
mov
xor
jle
sahf
pop
mov
imul
into
ds
mov
push
jo
test
lock
out
dec
inc
push
nop
loop
movsl
push
push
xchg
inc
shll
adc
out
cmpl
popf
in
fisubs
jno
gs
adc
pusha
dec
out
ret
and
loopne
mov
add
fwait
jmp
adc
into
mov
adc
out
dec
jno
jb
xchg
add
fstpt
sub
inc
inc
sti
jge
loope
sbb
xor
inc
and
sbb
cmpsl
mov
pop
push
pop
cltd
xchg
clc
dec
mov
lahf
cmp
xchg
cmp
and
cltd
xlat
pop
insb
pop
mov
jns
test
dec
adc
push
xchg
mov
rorl
push
sbb
or
push
sbb
mov
outsb
out
jecxz
inc
xlat
lret
or
or
ret
pop
test
nop
in
sarl
xchg
sbb
arpl
add
out
cmp
sbb
mov
loope
pop
and
pusha
je
jo
mov
dec
and
int
mov
decl
rorl
cld
aad
jne
xchg
call
cmp
push
out
aas
arpl
clc
or
pop
fldcw
iret
data16
test
cs
loop
pop
movsb
or
subb
popa
inc
ret
xchg
leave
push
mov
mov
dec
int3
lds
mov
lret
push
pop
inc
repnz
negl
xor
fcom
cmp
clc
and
xchg
mov
pop
stos
sti
jmp
popa
andl
cmpsl
xchg
pop
iret
xchg
ss
mov
pop
ss
movsb
mov
xlat
jge
das
out
add
push
add
sbb
mov
dec
daa
pop
shll
leave
mov
imul
gs
add
in
mov
xchg
mov
ficoml
mov
shlb
xchg
in
xchg
adc
loope
aam
lea
std
jae
lea
push
sub
nop
test
mull
es
in
jg
push
cmp
in
fwait
jmp
inc
dec
aaa
and
into
pop
sub
add
aam
sbb
les
sub
mov
lahf
pop
addb
pop
fwait
ljmp
adc
adc
push
xor
jle
insb
cmp
fs
sbbb
xor
push
fsubrs
xchg
imulb
cltd
out
cli
popf
fwait
rcll
mov
dec
sti
das
jecxz
mov
icebp
mov
cmp
adc
add
lret
arpl
outsb
push
mov
xchg
mulb
daa
addr16
xor
and
ret
mov
aas
in
sub
inc
int3
insb
cmp
cmp
push
cwtl
mov
dec
push
pop
add
mov
sub
cmp
insl
pop
xchg
sahf
dec
or
shl
sarl
inc
das
stc
rcll
push
ds
ja
pop
xor
stos
cli
pop
adc
cmp
xchg
jae
push
and
sti
mov
outsb
jp
pop
or
jecxz
mov
aaa
adc
sbb
push
test
xor
lea
in
daa
or
push
mov
adc
aad
fisubrl
push
jle
inc
jb
add
jbe
rcl
and
xchg
add
pop
lret
sbbl
dec
mov
xor
repz
pop
mov
rcll
mov
scas
mov
and
sbb
or
dec
data16
imul
fcomip
inc
std
dec
xchg
mov
and
mov
jmp
lcall
sbb
subb
jle
fdivs
lods
test
xchg
repz
mov
xchg
sub
xor
sub
jno
out
insl
xchg
jp
fwait
mov
jl
cmp
fwait
sbb
xor
mov
or
inc
in
dec
cmc
and
movl
lret
xchg
loop
and
mov
adc
xchg
in
int3
jmp
pop
test
into
mov
xchg
sbb
sahf
pop
sarb
or
inc
arpl
and
sbb
add
movsb
outsl
mov
mov
mov
pusha
aaa
pop
or
scas
repnz
fnstsw
lods
mov
cmpsl
imul
inc
bnd
add
shlb
fisubs
inc
out
pop
jo
dec
pushf
jo
mov
imulb
testb
lcall
scas
cmp
fstpt
inc
nop
outsl
enter
jmp
cmp
cmp
sbb
ljmp
lret
scas
push
pop
imul
add
movsb
das
pop
xchg
aam
xchg
aas
dec
or
inc
inc
cli
cmc
adc
aaa
rol
addr16
clc
xchg
push
icebp
ljmp
pop
dec
add
cld
out
add
js,pn
xchg
popf
push
push
jno
or
imul
out
inc
shl
and
stos
push
repnz
sub
push
into
mov
pop
inc
xchg
jb
jne
lret
cmc
cmpsl
stc
sub
popa
cmp
fidivl
xor
enter
cmc
inc
lock
decb
xor
inc
xor
add
jge
shrb
mov
push
hlt
jp
movsl
lea
lds
pop
out
std
push
je
nop
bound
xchg
dec
inc
fldl
add
shlb
xor
out
pusha
sbb
and
mov
xchg
cmp
jge
mov
sub
xchg
add
add
test
pop
push
push
popf
cmpsl
and
fildl
fstl
push
cli
push
jmp
test
pop
xor
ret
inc
addr16
pop
js
nop
xor
inc
int
out
jb
lods
leave
out
outsl
push
pop
cmpsb
inc
cwtl
popf
pop
jns
test
mov
fwait
add
cmpsb
mov
add
inc
or
mov
fstpl
push
pushf
lea
pop
mov
adc
add
faddl
sub
push
xor
outsl
std
add
or
jecxz
inc
mov
pop
mov
lret
ds
inc
mov
ja
icebp
cmp
insb
stc
dec
shrl
and
loopne
push
adcl
add
push
push
out
aaa
xchg
sub
lock
test
push
popf
push
add
push
jmp
jle
ja
imul
xchg
pop
sbb
bound
xchg
pop
mov
mov
cltd
pop
adc
insl
aad
insl
push
gs
in
xor
add
and
jl
es
pop
cli
jg
mov
xchg
sub
cmpsl
and
mov
add
lds
incl
adc
imul
fnstenv
cmpsb
aad
mov
sahf
daa
mov
push
and
add
inc
mov
imul
shlb
inc
das
push
inc
mov
push
cmp
lcall
cmp
and
es
cmp
jp
aas
xor
add
call
cmp
hlt
jmp
sarl
add
aam
sbb
enter
xlat
push
sahf
add
mov
mull
jno
inc
mov
scas
fcmovu
fistps
daa
call
sbb
mov
jmp
repz
mov
dec
mov
push
hlt
mov
aaa
mov
xchg
xchg
xchg
and
loope
mov
aad
in
push
daa
push
popf
lods
lcall
mov
add
add
pop
add
dec
mov
dec
cmp
out
cmp
mov
out
cli
or
js
mov
pop
into
arpl
xor
shrb
push
shl
add
movsl
and
fcompl
stos
jle
and
loope
arpl
xchg
ds
mov
iret
sbb
jnp
mov
dec
loope
mov
fisubs
lods
and
decl
mov
leave
jnp
lods
imul
sbb
pop
imul
movsl
jbe
add
popa
jno
lods
jns
andl
movsl
pop
mov
or
or
push
loop
fwait
rolb
out
fildl
mov
sti
daa
pop
mov
test
and
scas
rol
andb
adc
inc
sub
popf
das
mov
inc
arpl
and
cmp
inc
pusha
mov
pushf
xchg
loopne
dec
incl
aaa
fsubs
xchg
jb
scas
dec
push
add
rolb
movsl
xchg
shrl
xor
sub
jge
arpl
clc
and
aam
repnz
jecxz
sbb
or
ror
in
or
mov
fisttps
add
scas
sub
pushf
jbe
enter
out
movsl
sbb
xor
dec
or
ja
mov
inc
int3
lods
inc
inc
mov
sbb
mov
mov
mov
repz
dec
xchg
jbe
add
xorb
xor
xchg
adc
gs
adc
mov
or
and
sbb
lcall
and
mov
aas
add
dec
dec
xchg
pcmpeqb
push
insl
inc
adc
fisubl
into
mov
jp
sub
leave
inc
aaa
fwait
cmp
inc
mov
mov
cmp
sbb
rolb
cmp
in
loope
ret
jg
xchg
sbb
sub
add
sbb
movsl
or
pop
lds
movsl
sahf
js
mov
or
js
mov
adc
push
cmpsb
xchg
leave
mov
or
adc
pop
add
add
loopne
sub
arpl
mov
inc
or
sahf
dec
sub
jno
push
jno
jae
imul
mov
and
popf
repnz
fwait
xor
xchg
movl
pop
lret
xchg
addr16
adc
rcll
ljmp
dec
or
ja
je
push
lret
mov
insl
aas
test
adc
frstor
icebp
sbb
mov
sbb
pop
mov
pop
mov
xor
mov
jns
jno
loop
movsb
mov
pop
idivb
xlat
in
jecxz
test
add
sub
add
jmp
ret
mov
lret
sti
negl
ret
sbbb
int3
movsl
sbbb
mov
jbe
push
daa
sbb
lods
nop
jecxz
in
or
hlt
mov
mov
and
jge
push
enter
cmpb
or
and
repz
sbb
inc
or
sbb
push
in
inc
add
lds
std
sbbb
es
cmp
fisubs
sbb
das
cs
pop
xor
xchg
push
inc
jnp
push
and
pushf
sbb
inc
popa
pusha
ljmp
or
xchg
jge
cmp
inc
inc
cmp
lahf
dec
sti
inc
xchg
and
js
out
and
add
mov
add
inc
mov
pusha
sub
adc
in
adc
mov
and
xchg
push
aad
iret
mov
clc
sub
sub
pop
or
xor
cwtl
std
andl
push
jae
pop
jne
sbb
jecxz
xchg
cmp
test
push
jle
inc
xchg
int
aam
inc
fwait
insb
fcoml
xchg
bound
and
jb
ss
test
mov
and
jl
mov
cmpsb
mov
xchg
movsl
mov
dec
in
xor
in
into
fbld
dec
pop
xor
or
pop
out
push
xchg
xor
xchg
jbe
cs
and
into
jge
pushaw
je
pop
sbb
push
mov
mov
jg
call
cmp
pop
call
push
cltd
std
je
sub
or
xlat
insl
in
mov
out
dec
adc
mov
lcall
or
loop
fdivl
jp
xchg
movsb
push
xchg
ret
sub
lret
xchg
mov
adc
rcr
pop
fistl
iret
lods
fs
aad
add
dec
pop
push
movsb
fbld
addr16
inc
mov
xchg
xchg
call
mov
subb
sti
mov
cs
xchg
fcmovnu
or
mov
adc
ss
pop
fdivrp
add
mov
loopw
bound
push
pop
sbb
lcall
into
sub
push
lret
pop
mov
int
aam
jnp
lods
out
mov
fcomps
push
pop
mov
pop
xchg
fstpt
icebp
push
out
sahf
push
enter
push
out
lods
mov
pop
inc
pop
dec
daa
imul
rcrb
mov
and
xchg
mov
call
cwtl
push
daa
push
inc
out
jmp
aas
push
aam
repnz
dec
popa
xchg
push
mov
sbb
fisubs
ljmp
je
and
mov
ja
scas
jo
jnp
adc
inc
adc
shlb
lods
cli
xlat
fcmovne
pop
adc
and
adc
jo
jp
push
loop
shl
dec
stos
add
rdtsc
mov
addb
jo
mov
pop
dec
pop
ljmp
outsb
cmp
push
jp
mov
push
cmp
aad
bound
push
mov
test
daa
mov
das
push
lds
vfrczss
pop
cmpsb
mov
cwtl
repz
xor
addr16
cmpsl
pcmpeqw
in
mov
popa
xlat
gs
cmp
adc
mov
mov
mov
sbb
xor
mov
test
mov
mov
cmc
in
cld
mov
fcomps
fcmovnbe
scas
inc
mov
cwtl
pop
mov
mov
dec
mov
dec
add
cmpsl
push
xchg
pop
arpl
mov
add
pop
cld
stos
out
iret
xor
bound
push
imul
and
cmp
sbb
sub
ljmp
adc
stos
xchg
xchg
cli
rorb
cmp
ds
sub
fcomi
xlat
or
ja
xchg
repnz
imul
inc
cmpsb
mov
xor
loop
mov
call
imul
inc
jge
xor
scas
cmc
mov
or
fcoms
hlt
or
fistps
ja
cmp
les
jae,pn
sbb
ss
test
adc
inc
adc
inc
push
loop
ret
daa
test
cmpsl
dec
inc
pusha
jnp
cmp
add
fcompl
adc
add
mov
jae
out
loope
jp
sarl
fnstsw
dec
lret
mov
test
xor
ret
xchg
out
shll
xor
ja
clc
push
cli
leave
push
sbb
mov
mov
and
pop
dec
cltd
ds
xor
xchg
or
inc
pop
dec
pop
dec
and
adc
xchg
shlb
push
mov
stos
dec
jmp
rcrb
push
pop
pandn
xor
test
mov
mov
jb
inc
mov
cmc
pop
adc
mov
cmp
je
out
loopne
pop
mov
insl
shlb
hlt
movsl
push
mov
movsb
ljmp
psrlq
adc
movsb
insl
mov
xchg
cmp
int
in
inc
xor
xor
jge
lcall
push
call
loopne
lea
enter
mov
outsb
sub
xchg
pop
jmp
repz
mov
mov
jmp
jle
and
xor
add
repz
inc
lds
mov
aas
fs
enter
and
sub
pop
stc
test
push
mov
cmp
gs
and
mull
inc
xchg
and
xor
fldenv
mov
in
ret
into
daa
dec
or
int3
loopne
jg
pop
and
in
test
adc
clc
aam
cmp
aaa
cli
jbe
ljmp
add
adc
inc
fcompl
and
insb
je
cltd
out
in
ror
inc
clc
mov
cmp
mov
inc
dec
pop
xchg
or
or
repz
int3
cmp
sub
test
xchg
mov
ss
repnz
xor
enter
mov
in
push
jno
mov
out
fdivrl
push
fstl
xchg
lods
orb
dec
sahf
sahf
sub
movsb
jp
push
jle
push
sti
int3
add
jge
mov
push
icebp
push
daa
xor
cld
lock
cld
aaa
jno
cmc
rcl
xchg
add
cmp
push
and
pop
mov
adc
push
xchg
add
out
daa
mov
push
mov
sub
sbb
cld
out
or
and
mov
dec
jns
adc
cli
or
test
push
xchg
outsl
loopne
fsts
or
imul
cs
adc
jmp
les
clc
jl
sbb
mov
sub
dec
jbe
mov
inc
push
negb
mov
lcall
fnstcw
pop
xchg
data16
push
aam
sar
ret
jo
add
cs
mov
dec
shrb
cwtl
push
lods
sub
dec
adc
push
mov
xchg
scas
xchg
scas
push
popa
xchg
or
mov
test
mov
and
stos
adc
loope
push
push
adc
mov
dec
pop
fucomi
out
mov
xor
pushf
cmpsl
add
repnz
js
daa
cmp
cwtl
jge
in
adc
cld
add
jmp
mov
and
pop
icebp
jle
movsl
in
dec
pop
jo
daa
hlt
push
jae
cmp
xchg
sbb
mov
jmp
in
xchg
mov
fnsave
xchg
loopne
shlb
push
cmpsb
and
pop
fs
jle
mov
inc
into
filds
push
or
inc
movsb
push
dec
inc
mov
clc
lds
out
lret
dec
jle
pop
test
nop
xchg
dec
sub
arpl
jno
push
add
sti
jns
sbb
mov
lods
xchg
aas
rcll
arpl
push
xor
add
divb
test
dec
hlt
mov
fsubrs
aam
jg
jnp
adc
or
jg
jg
sub
mov
jmp
jp
and
shrl
push
movsb
in
xchg
dec
sbb
nop
xchg
adc
loop
push
leave
pop
mov
mov
icebp
adc
and
lock
cltd
jnp
sbb
push
cltd
add
clc
mov
adc
adc
outsl
add
pop
les
cmpsb
test
jns
jl
jmp
cli
push
mov
pushf
stc
cs
outsl
sbb
push
pop
stos
shll
rclb
jbe
nop
sbb
mov
inc
movsl
fs
dec
lea
inc
in
jns
push
psrlq
adc
mov
stos
inc
mov
jl
insl
mov
jge
sti
cmpsl
mov
inc
mov
insb
out
adc
sbb
ds
and
sbbb
out
sub
js
push
inc
pop
push
sub
jno
loope
xchg
and
push
out
adc
lods
or
sub
mov
xor
ret
xchg
cmp
ficomps
dec
xor
cmp
sahf
dec
mov
jmp
les
cmpsl
sub
aaa
add
pop
xor
xchg
push
jmp
sbb
insl
mov
jge
mov
aaa
outsl
hlt
and
std
mov
dec
rclb
cs
mov
jbe
jbe
fdivs
imul
mov
mov
ret
jo
das
inc
pop
add
and
inc
daa
fisubrl
inc
sbb
dec
or
mov
inc
inc
mov
add
pop
sahf
adc
leave
insb
cwtl
push
jle
lock
jnp
scas
ljmp
cltd
push
inc
sbb
lods
aaa
mov
dec
and
fdivr
dec
data16
push
arpl
adcl
loop
mov
pop
sti
xor
cli
mov
mov
push
pop
dec
adc
sub
cli
sbb
gs
out
daa
mov
nop
push
or
ficoms
lods
movsl
and
scas
cmc
xchg
xor
cli
sbb
mov
std
enter
and
mov
andl
das
nop
rorl
mov
and
mov
imul
pushf
inc
jae
sbb
mov
push
xchg
mov
ss
xor
pop
out
and
push
add
jmp
mov
add
jns
stos
fcomi
xor
and
sbb
jne
fsubrs
incb
mov
and
or
fistpl
jmp
hlt
les
pop
popa
mov
in
dec
fstps
stc
call
leave
jb
pop
hlt
loop
jne
out
lahf
ret
mov
push
fmuls
lahf
mov
mov
shlb
lret
loope
adc
cli
neg
popf
fdivrp
fcoms
jnp
push
out
out
fs
mov
lds
cmpl
mov
sbb
fcom
xor
jno
xadd
fldcw
ror
shrb
or
sbb
lahf
cld
cmp
hlt
fsubrs
ficomps
pop
sub
xor
mov
fcomps
mov
shrb
cli
ss
daa
rcrb
inc
ss
sbb
mov
jns
out
mov
pop
mov
por
jo
lahf
sub
add
jns
push
insl
inc
cmp
cmp
fs
enter
leave
push
es
fxch
pushf
adc
mov
xchg
add
imul
cwtl
pop
xchg
repnz
dec
xor
add
mov
in
mov
xor
out
and
ror
fiadds
pop
repz
scas
andb
outsb
out
fsubrl
mov
into
or
cmp
lea
xorb
mov
daa
fsub
pop
push
mov
fstpt
dec
pop
in
out
mov
rol
adc
stos
dec
mov
cmp
mov
out
sub
repz
mov
inc
lock
jne
xorb
sub
xchg
jg
mov
mov
dec
pusha
jp
orb
sub
adc
pop
xchg
in
adc
sub
mov
mov
jle
stos
movsb
test
cmc
in
mov
dec
sbb
inc
and
cmpsl
insl
jl
movsb
and
mov
addl
mov
outsb
inc
pop
inc
lcall
cld
arpl
fdivl
mov
xorb
icebp
jmp
stos
mov
fcoml
into
clc
test
mov
mov
rcr
pop
mov
fcmovne
pushf
pop
mov
pop
jno
xor
dec
pop
inc
andb
outsb
es
cmp
cmp
lods
repz
enter
add
dec
sub
aas
fisubrs
inc
ret
enter
incb
mov
lea
sub
jno
enter
pop
jg
adc
arpl
int3
popf
adc
xchg
dec
sbb
out
pop
aam
ret
daa
sti
aas
pop
add
mov
shll
pop
and
ja
leave
loopne
push
push
scas
aaa
mov
cmp
enter
xchg
outsb
jecxz
ret
mov
adc
dec
out
inc
jne
in
iret
cld
xor
dec
sti
mov
add
push
mov
pop
sub
cld
push
pop
iret
ret
xlat
dec
int3
pop
and
sub
jno
and
cmpsb
out
mov
xchg
xor
out
dec
push
jno
jp
lret
xor
add
xor
es
call
repz
mov
mov
addb
dec
jne
xchg
cmpsb
jmp
xchg
das
enter
fstl
add
imul
cmc
pop
xchg
pop
cmc
xchg
add
or
sarl
sbb
pusha
xchg
xor
aam
lods
jmp
dec
sahf
cltd
rorl
adc
sub
jb
inc
stos
cmpsl
cmpsl
xor
fs
sub
repnz
push
jns
rcrb
scas
cmp
shll
cmp
aas
fdivl
clc
std
cld
movsb
xchg
fwait
inc
icebp
pop
sar
mov
adc
sti
inc
mov
nop
pop
notl
enter
mov
xchg
jge
je
andb
int3
fidivrl
fldt
gs
xchg
ret
sub
ficomps
sub
les
es
mov
sub
xchg
enter
xchg
test
adcl
jl
inc
jae
pusha
inc
push
jo
jb
xchg
mov
out
jae
repz
leave
bnd
lea
push
enter
out
sbb
out
es
filds
cmp
in
sbb
ds
dec
push
rol
lret
nop
shr
sub
and
int3
rolb
cwtl
sbb
or
nop
sub
adc
icebp
push
movsl
xor
and
rcll
mov
xor
pop
testl
sti
xchg
ds
add
inc
jle
mov
int
jle
or
popa
insb
js
sbb
add
xor
and
or
icebp
test
mov
movl
out
lahf
or
mov
xor
sbb
daa
rolb
dec
mov
sbb
inc
mov
fildl
adc
pushf
pop
scas
std
ret
sbb
and
sarb
adc
push
es
mov
imul
aam
mov
sub
daa
insl
fcoms
mov
xchg
push
jmp
mov
sbbl
lock
in
adc
test
or
inc
pop
adc
cmpsl
xchg
das
push
push
stos
or
xchg
mov
lods
std
int3
cmpb
ss
leave
push
cs
fcomps
mov
sahf
push
and
jp
jge
push
push
andl
movl
push
imul
mov
shr
push
inc
gs
pop
add
stos
std
cltd
mov
mov
je
push
les
sub
out
jno
pop
ficompl
std
popf
jecxz
test
xor
fnstsw
inc
call
outsl
stos
xchg
and
test
dec
xor
and
shl
std
or
ds
mov
xchg
addb
mov
mov
lods
in
mov
mov
add
pop
mov
sub
ja
data16
and
das
mov
cmc
adc
stc
and
mov
mov
cmpsl
or
int3
push
out
dec
jge
and
cmp
in
pushf
inc
push
mov
adc
nop
jl
imul
shlb
enter
mov
ret
and
je
out
xchg
inc
mov
sbb
sbb
or
es
cli
push
lods
sbb
outsl
in
je
fidivs
test
inc
or
adc
adc
in
sbb
xchg
dec
loope
sub
stc
mov
adc
or
aaa
loopne
jno
push
es
loop
jb
push
lds
mov
js
dec
iret
jle
fildl
dec
pusha
add
or
and
mov
inc
nop
sub
push
push
sbb
insl
push
push
ja
cmp
int3
xchg
lcall
and
iret
add
repz
stos
sub
push
outsb
outsb
jbe
nop
imul
xchg
mov
jns
int3
test
add
cmpsl
xor
into
mov
or
sbb
mov
adc
into
xor
inc
notb
pop
repnz
xor
fidivs
out
and
cmpsb
fstpl
sub
mull
shll
sarl
adc
popa
testb
clc
mov
pop
andb
idivl
or
cmc
lcall
push
jg
jns
insl
addr16
mov
cmp
inc
lahf
sbb
and
lock
mov
pop
and
clc
lcall
cmp
mov
xor
sahf
shlb
xor
jmp
xor
mov
mov
xchg
jl
out
into
or
or
negl
test
push
aam
push
nop
cs
hlt
inc
or
fsub
cmp
or
jae
jmp
addr16
les
imul
sahf
movsb
xchg
cmc
js
dec
es
mov
push
mov
inc
inc
movsb
fcomps
ret
or
add
fwait
xchg
pop
xchg
ficoml
jns
rorb
scas
sti
mov
mov
aaa
xchg
aad
sub
adc
cmp
pusha
aam
out
xor
test
movsl
xchg
mov
fwait
xor
fwait
inc
lea
push
out
mov
in
shrb
mov
jns
fdivr
pop
inc
and
mov
push
sub
sbb
cwtl
or
mov
pop
xor
dec
xor
add
in
adc
sub
pop
mov
adc
push
lods
lods
stos
stos
inc
outsb
mov
fisttps
aam
cli
imull
xor
mov
jle
lcall
stc
jo
dec
pop
push
insb
cltd
mov
imul
jbe
mov
lods
loopne
lret
cmp
pop
std
push
fld
xchg
rcrl
test
add
dec
mov
inc
mov
dec
mov
pushf
test
dec
and
xchg
and
or
adc
scas
inc
fisubrs
in
push
add
xchg
sarl
lret
incl
mov
sbb
and
mov
cmp
rolb
repz
std
int3
fadds
repz
fsubrl
sahf
std
mov
dec
push
pop
lcall
insb
repnz
stc
negl
popa
inc
addr16
lahf
mov
mov
clc
xchg
flds
int
inc
in
aas
lcall
mov
aam
mov
pop
sub
leave
xor
jl
lret
sub
fisttpll
outsl
cmp
aam
icebp
loop
cmc
mov
xor
jmp
mov
fld
sarl
inc
pop
icebp
sub
xor
dec
enter
clc
cmpsl
mov
pushf
and
mov
fcmovb
and
sahf
test
std
lahf
add
cmc
in
adc
sti
ss
aas
out
rcr
jae
js
sub
mov
adc
fstps
pop
mov
inc
shll
cvtpi2ps
test
rolb
stos
push
xor
xchg
sub
xlat
popa
ret
adc
loope
and
lcall
jae
bound
mov
xor
xlat
cltd
je
loopne
push
pop
xrstors
outsb
vmovhps
jmp
cmp
outsl
cmpb
add
push
mov
and
test
mov
hlt
rolb
push
lret
push
dec
fiaddl
clc
int3
shl
push
and
push
shrb
mov
xor
mov
in
push
xlat
cmp
out
xchg
fildl
ja
ja
movntps
adc
mov
mov
or
es
xchg
divl
js
in
enter
stos
mov
out
lods
push
ljmp
aaa
fbld
sbb
or
arpl
cmp
cmp
test
aaa
push
inc
xchg
dec
sub
and
cmp
cmp
fsubrs
mov
ljmp
push
or
or
adc
stos
cmpsb
or
xchg
jp
nop
xchg
movsb
sub
cmpsl
cltd
mov
andb
rol
iret
fnstcw
dec
aas
mov
lahf
in
jnp
xchg
adc
loop
jo
btc
int3
daa
xor
inc
loope
adc
xlat
cmpsl
imul
nop
testl
xor
cmp
sbb
xor
and
lds
fwait
jae
push
js
sbb
sub
aas
or
ret
jp
jae
xor
fisubl
pop
jp
xor
push
sub
cmp
aaa
mov
insb
es
add
mov
xor
ret
adc
imull
movsb
or
cmp
or
rorl
subl
int
add
ficompl
clc
xor
js
cmpsb
push
jns
dec
test
mov
cmpsb
mov
sbb
pusha
leave
gs
xchg
push
icebp
subb
xchg
bound
sbb
dec
stos
sbb
and
ja
adc
lods
mov
sub
aam
pop
cmp
dec
addl
stos
mov
xchg
shrl
push
and
or
sbb
adc
xor
sbb
dec
insl
pop
dec
imul
mov
int3
add
push
movsb
inc
pop
mov
and
insb
fst
push
imul
pop
fisubrl
mov
sub
cwtl
sub
push
in
fwait
pop
sbb
repnz
fiadds
push
outsl
sbb
mov
mov
cmc
cmc
test
mov
xor
gs
loopne
in
test
popa
dec
xor
ficompl
xchg
adc
sbb
mov
and
sbb
xor
in
and
and
adc
loope
and
scas
cmpb
pop
xchg
shlb
lds
mov
repnz
fwait
leave
dec
loop
sahf
or
fadds
mov
in
out
in
aad
and
xor
popl
push
sti
sub
jno
add
pusha
dec
cmpsb
pop
dec
lock
sub
xor
add
xor
es
imul
into
repz
jecxz
inc
lahf
divb
push
jp
push
xchg
jae
and
xchg
cmpsl
adc
rep
dec
stos
adc
pop
cwtl
ja
xchg
inc
sti
cmp
push
ds
bound
insl
popa
test
repnz
cmp
mov
gs
popf
mov
popa
lret
mov
and
jp
xlat
xchg
cmc
sbb
adc
out
jns
out
icebp
orb
and
push
das
adc
jecxz
xor
into
nop
enter
jecxz
aas
test
das
pop
fs
jne
sbb
pop
in
adc
mov
out
jmp
cmp
xlat
arpl
int3
push
or
adc
inc
cwtl
fidivs
cmp
int3
dec
rorb
in
movsb
pop
dec
jns
add
mov
testb
and
iret
loope
je
push
add
imul
lret
ret
movsb
inc
popf
mov
ds
dec
mov
or
stos
cmpsb
xlat
jl
ds
in
pop
andl
loope
xchg
cltd
fiadds
and
popf
jmp
mov
rcll
jnp
or
jge
fstpt
pop
mov
cmpl
insl
sbb
inc
std
xor
out
loop
movsl
inc
dec
cmp
and
ds
cwtl
and
mov
jle
pop
jnp
jb
movsb
popa
push
cmp
sub
mov
mov
adc
lcall
fildll
popf
mov
dec
jl
gs
cmp
pop
xchg
xchg
pop
sbb
jno
call
outsb
lods
enter
js
test
pop
testb
mov
outsl
lret
xchg
jl
adc
ljmp
gs
mov
ret
push
fcoms
out
dec
or
imulb
mov
jbe
xor
out
xor
push
iret
or
pop
cmc
into
arpl
addr16
mov
sub
movsl
push
loop
jg
fnstenv
add
hlt
repz
push
pop
mov
fwait
inc
pop
push
jle
pusha
mov
mov
cltd
daa
sub
xchg
xlat
and
lahf
sub
fdivl
push
andb
sub
sahf
js
xchg
insl
jge
bound
stos
fs
in
and
imul
xor
movsl
fisttps
bound
mov
xchg
jl
pop
sbb
sbb
inc
out
int
pop
lret
fldt
ds
jb
xchg
popf
fiadds
int
loop
outsb
es
fcmovb
sbb
test
dec
xchg
dec
into
fisttps
xchg
mov
lock
popa
cwtl
pop
cmc
mov
popf
jmp
mov
xor
ror
inc
imul
xchg
insb
shll
fsubrs
arpl
jno
pushf
pusha
push
in
push
push
push
icebp
or
jl
or
ds
mov
cld
mov
mov
aas
shrl
pop
outsb
outsl
mov
fistpl
cmpsb
xor
add
scas
cld
push
cmp
inc
sahf
sahf
xor
pop
shr
js
jmp
dec
xorl
out
sbb
ds
lods
fiadds
cmpsl
rcrb
fwait
in
push
stos
cld
data16
outsl
sti
hlt
enter
movsb
mov
mov
mov
or
add
leave
aam
jp
fiaddl
rcrl
sbb
mov
xor
aas
sub
bnd
xor
ds
push
mov
jmp
leave
fneni(8087
enter
cmp
incl
pop
push
inc
cld
fcom
mov
xor
rcr
sahf
or
and
movzbl
mov
cmpsl
ja
dec
or
mov
push
xlat
inc
or
or
aas
insb
push
add
lret
vfmsub132sd
rolb
sub
fsubr
fcomps
les
mov
add
push
das
cmp
pop
lods
out
mov
stos
lea
lods
dec
shrb
sub
inc
gs
mov
int3
adcl
and
cwtl
xor
pop
lahf
cmp
mov
or
sub
mov
orl
sub
popa
test
cli
fisttpl
shlb
adc
gs
sti
dec
scas
das
mov
dec
not
pusha
sub
jnp
cmpb
lods
jne
bound
sbb
and
cmpl
aas
mov
fabs
push
imul
arpl
pop
cltd
ljmp
inc
add
dec
sub
mov
sub
cmp
cs
lock
pop
loope
jb
mov
aas
cmp
cmp
push
cld
add
and
fisttpl
sub
mov
cmp
aas
je
jmp
add
xor
inc
cwtl
loop
mov
ds
fistpll
push
pusha
lea
sbb
test
jae
test
stos
xchg
subl
xchg
inc
cmp
call
xor
mov
mov
push
inc
cmpsl
lods
or
cmp
or
repnz
push
in
fnstsw
cwtl
adc
inc
inc
lret
out
pop
dec
test
arpl
clc
mov
sub
imul
push
jecxz
mov
and
xor
add
sarl
sti
ret
fldt
andl
ficomps
outsl
daa
and
int3
mov
cld
cmp
sbb
fnstenv
dec
daa
mov
and
xor
fisubl
nop
jmp
mov
pop
cli
arpl
mov
pop
xchg
mov
xchg
and
xor
push
mov
out
std
jno
mov
inc
xor
mov
sub
cli
or
repz
cmp
sbb
pop
cmc
movsb
sub
insl
add
lret
cltd
lret
paddusb
sti
mov
add
pop
xor
das
mov
add
xchg
lret
lea
mov
inc
or
addr16
xchg
testb
cmp
leave
sub
pusha
xor
push
fisttpl
push
or
jnp
and
ss
das
cs
sub
jle
aam
push
adc
lds
pop
jne
aaa
rorb
out
xor
mov
lods
mov
int3
lea
add
stc
add
les
push
out
xchg
ret
nop
jl
enter
sub
test
jno
add
jo
iret
imulb
mov
jb
arpl
cs
and
in
and
arpl
push
mov
movsl
cmp
aad
pop
pop
mov
mov
add
sbb
push
add
xchg
aaa
rcll
inc
adc
push
ds
jg
dec
xchg
lock
scas
and
add
and
inc
mov
sub
push
sub
pop
pop
gs
adc
cmpsb
mov
imul
rorl
shl
popa
das
xor
iret
clc
sub
loop
dec
sbb
pop
pushl
add
mov
dec
sub
psubw
push
insb
in
loopne
ret
subl
test
fcmovnb
stos
mov
mov
mov
outsl
sbb
in
adc
adc
lret
inc
mov
addb
xor
sub
jl
insl
pop
outsb
pop
pop
idivl
imul
cwtl
je
gs
stc
sub
fsubrs
dec
sahf
inc
add
movsb
push
cmpsb
leave
cmpsb
into
mov
jo
pop
mov
inc
or
jno
sub
mov
pop
inc
jecxz
daa
mov
into
cltd
std
outsl
jle
clc
pop
sti
pushf
cmp
test
cmp
mov
sahf
xchg
call
or
repnz
push
incb
cmpsl
inc
and
pop
jo
push
push
movsb
xchg
ficompl
push
out
iret
sbb
loope
aam
jne
rcl
stc
or
popa
shrl
cltd
add
lea
sbb
add
cmp
xchg
mov
push
or
inc
xor
xchg
aas
out
add
stc
imul
fisubs
test
jecxz
rclb
int3
fucomi
je
int3
orb
jbe
out
cmpsb
add
in
fiaddl
mov
jl
sbb
push
loopne
sbb
lcall
pop
cli
inc
jle
inc
sbb
test
mov
sahf
lcall
pop
pop
stos
addl
xor
into
or
das
in
test
push
pop
loop
xchg
xor
arpl
test
or
fstpt
sub
adc
mov
cmpsl
mov
jp
ret
jg
and
leave
movsl
lea
mov
frstor
hlt
shrd
mov
adcb
data16
and
inc
jno
dec
fldl
shrb
or
and
sbb
stos
cmp
dec
hlt
xchg
lret
sbb
xchg
in
xchg
dec
adc
and
cmpsl
or
push
adc
push
xchg
adc
notb
cmp
and
loop
popa
jmp
inc
mov
outsb
cli
es
les
popa
pushf
push
jl
fwait
sub
in
testb
and
pushf
movsb
jle
pop
mov
rcll
push
mov
and
adc
aas
test
enter
movsl
sub
lcall
cmp
stc
fisttps
jmp
imul
xchg
test
cmpsb
test
xorl
fiaddl
mov
jns
push
lret
test
pushf
add
dec
push
adc
jle
scas
cwtl
pop
mov
ss
cld
dec
nop
bound
inc
mov
lods
jmp
ret
cmc
nop
test
ret
aas
loopne
inc
cltd
es
cmpsb
stos
mov
sub
add
xor
push
adc
ret
rorl
test
mov
cltd
in
je
les
and
push
push
insb
push
scas
js
sti
cmp
aad
xor
iret
push
add
jo
in
ficoml
fs
push
fmul
adc
sub
lods
lcall
pop
punpckhdq
pop
arpl
push
jbe
idiv
add
sti
clc
push
sahf
mov
cwtl
mov
sbb
xor
addb
jo
jne
mov
movsb
xor
cmp
jecxz
push
addl
out
lret
sbb
nop
and
pop
mov
and
adc
ret
push
push
scas
mov
ret
mov
dec
mov
out
int3
bound
fcomps
sarl
sub
jnp
and
fwait
aas
stc
mov
ds
adc
stos
mov
stos
stos
jecxz
push
cmpsb
inc
add
jge
jnp
es
jecxz
cmc
pushf
fdivrp
out
sbb
addr16
sub
fcoml
jnp
sbb
mov
stc
add
fsubrl
fsubl
dec
out
nop
mov
sarl
inc
pop
sti
shlb
pop
aas
je
rep
pop
gs
pop
std
adc
dec
add
xor
adc
scas
imul
stc
jns
clc
call
imul
sbb
out
sbb
inc
out
add
adc
popa
rorb
add
js
sbb
mov
popa
mov
test
sar
ror
xor
xchg
push
xchg
and
adc
pusha
cltd
test
loop
lcall
shlb
cmp
jb
push
popa
pop
fwait
shr
cmp
adc
stos
test
jmp
mov
sbb
ret
mov
hlt
xlat
in
data16
mov
jge
mov
in
push
cmp
mov
pop
loope
mov
sbb
repnz
popa
push
sbbb
xchg
mov
out
dec
add
ds
adc
test
cmpsb
addr16
loopne
ja
push
xor
mov
dec
imul
xor
sub
dec
rclb
push
leave
pushf
pushf
sub
outsl
fwait
pop
xor
mov
inc
adc
lcall
inc
sqrtps
sti
rcrb
push
sarl
xor
lods
adc
pop
xor
inc
jno
test
js
mov
push
mov
mov
mov
sbb
lahf
lret
movsl
and
in
subb
pushf
outsb
xchg
push
sarl
cli
movsl
dec
adc
insb
lea
jno
add
in
xor
outsb
adc
jle
push
and
std
or
popf
jnp
aas
pop
vpmaxsw
inc
into
pushf
sarb
testl
mov
sbb
rcr
scas
lahf
push
sub
in
fadd
movsl
out
adc
dec
pop
mov
ljmp
popf
repnz
cmp
pusha
enter
inc
call
push
push
or
sahf
adc
test
shrb
ss
jbe
loopne
rcll
ds
out
cmpsl
add
out
data16
es
cmp
test
push
mov
dec
sub
jb
xor
cmp
aaa
mov
xchg
push
int3
cmp
jo
scas
sahf
shlb
adc
xchg
std
out
scas
mov
add
mov
mov
addr16
int3
lds
dec
cltd
ficomps
divps
enter
mov
mov
or
int
xchg
jp
loop
xchg
sbb
clc
outsl
paddusw
lods
adc
dec
mov
movsl
test
xchg
adc
mov
shl
inc
int3
jb
inc
in
into
cmp
xor
inc
pop
xchg
in
pop
insb
test
jb
pop
jp
jns
mov
xchg
sbb
adc
loope
imull
mov
or
mulb
xchg
cwtl
xchg
femms
pop
or
filds
pop
rorl
sbb
adc
xchg
mov
xor
mov
imul
sub
inc
add
push
jno
xchg
inc
push
sub
adc
mov
ret
lds
out
ret
adc
sbb
js
inc
repnz
icebp
cld
leave
or
xchg
adc
adc
mov
or
lock
ret
jp
ss
enter
jb
test
cmp
mov
inc
aas
xchg
cmpsl
mulb
jmp
fiadds
add
inc
adc
cmpsb
roll
or
call
sub
out
sahf
loopne
repz
sbb
mov
dec
mov
and
out
cwtl
xchg
fsubp
fdivs
fadd
sti
cmc
push
lahf
pop
fbstp
cmp
cmp
xchg
stos
mov
pushf
jne
push
test
jno
pusha
push
icebp
lcall
mov
push
stos
mov
jnp
inc
lds
scas
adc
shll
mov
pop
scas
lock
shrb
sbb
test
aaa
xchg
mov
ja
cmp
mov
call
js
and
aad
ficoml
add
orb
lock
xor
xor
arpl
shll
cli
adc
bound
inc
or
paddsw
and
roll
mov
subl
xor
loope
xchg
adc
jle
mov
cwtl
inc
std
pop
out
inc
jns
loopne
sub
mov
dec
mov
cmp
imul
push
dec
xor
lds
cmp
mov
enter
fs
mov
push
pop
adc
xor
movsl
test
or
mov
sbb
push
dec
mov
mov
mov
fistpl
push
fcoms
pop
add
subl
push
jno
xchg
stos
mov
lcall
mov
mov
cwtl
mov
ss
push
and
enter
xchg
mov
mov
punpckhdq
push
xchg
inc
rolb
cmpsl
pop
test
loopne
andl
mov
push
nop
mov
orb
mov
xchg
ret
pop
push
jg
mov
shll
push
js
add
sub
jp
aas
sbb
mov
sub
adc
xchg
jae
das
fadd
pop
push
rol
xchg
imul
iret
mov
and
clc
mov
ret
dec
lret
add
scas
std
push
mov
notb
mov
pop
sahf
adc
addr16
scas
ret
popf
add
out
xlat
in
xchg
notl
lahf
sbb
cmp
iret
dec
xor
adc
push
or
rcll
push
push
pop
jnp
out
imul
out
sub
in
testl
xchg
or
mov
cltd
lods
sub
jg
fisubrl
scas
xor
lods
scas
xchg
movsl
leave
jmp
dec
mov
mov
lcall
mov
inc
mov
or
mov
negl
cld
adc
loopw
cmp
test
icebp
mov
popf
dec
mov
orb
prefetcht0
push
leave
fidivrl
jmp
outsb
cmpsl
cmpsl
and
jg
dec
mov
add
jg
xchg
leave
insl
jo
push
add
sti
orl
aad
dec
or
sub
std
inc
pop
mov
cld
lahf
shlb
gs
or
jle
fstl
and
cmpsl
pop
push
sub
jb
xor
test
dec
shll
cmp
dec
xchg
cmp
scas
push
in
arpl
notl
outsl
fwait
inc
or
sti
test
ss
sbbl
cmc
and
mov
loopne
xchg
cltd
dec
movsl
sub
in
cmc
add
cmpsb
iret
xor
cltd
mov
push
jo
inc
mov
sub
cltd
mov
scas
inc
cld
lret
outsl
jmp
jp
mov
inc
bound
lret
inc
inc
and
out
out
outsl
lds
and
xor
push
pop
mov
in
aas
mov
jo
fcomps
rcll
notb
pop
movl
mov
jmp
test
std
xor
inc
mov
and
adc
flds
test
outsl
iret
inc
or
or
push
mov
pop
call
jmp
fldcw
test
ret
xchg
jp
loopne
ljmp
mov
push
mov
inc
pop
scas
xchg
outsl
subl
ret
jge
mov
lock
mov
inc
negb
xchg
add
lods
notl
xor
push
mov
jle
or
mov
dec
mov
outsb
add
icebp
add
push
sub
shlb
adc
rorl
and
clc
fcomip
dec
cmpsb
test
push
push
imul
fs
push
icebp
jp
push
fs
mov
ret
clc
bound
sub
aas
insb
jno
subl
sarb
sub
pop
icebp
popa
loope
mov
pusha
icebp
enter
out
dec
add
ja
mov
add
sub
jne
pop
and
pop
jp
mov
adc
mov
push
cwtl
int
or
push
add
dec
lock
imull
add
xchg
push
cs
pushf
adc
mov
out
rcll
mov
xchg
je
mov
fs
je
jge
loope
pop
xor
push
cltd
int3
adc
aam
mov
in
add
dec
jge
and
adc
stc
mov
jmp
sbb
jne
ds
cs
mov
out
and
lods
mov
jmp
decb
push
enter
pusha
mov
jl
daa
push
cmp
loop
dec
adc
inc
add
loope
jl
ds
mov
repnz
shll
jmp
jae
test
push
add
rclb
cmp
xor
adc
enter
shl
jnp
shlb
dec
stc
mov
sbb
or
data16
fmull
test
push
jle
sub
mov
lock
or
xlat
testb
stc
mov
andb
in
or
add
sahf
fdivr
sarl
mov
mov
dec
popf
mov
push
nop
ret
ret
or
test
jg
xchg
repz
jo
sub
or
subb
icebp
or
jg
ss
dec
cmpsb
das
and
xor
mov
or
dec
xchg
xor
and
jns
mov
pop
xor
mov
repnz
shrl
lcall
mov
adc
sub
out
clc
out
jnp
popl
insl
aam
adc
xor
and
and
fnstcw
inc
cmp
ljmp
inc
int3
push
cmp
mov
imul
in
sarl
popf
or
jp
and
or
sub
sbb
pop
fcoml
lds
cmc
sbb
add
fdivl
xor
adc
pop
sub
outsb
test
arpl
dec
fcoml
daa
cmpsl
gs
iret
jecxz
or
shl
mov
jmp
fcoms
mov
sbb
mov
iret
cmp
decb
mov
mov
push
xchg
sbb
movsl
dec
stos
or
pusha
ljmp
xchg
int
fldenv
xchg
cld
and
mov
stos
push
cmp
adc
call
xchg
aas
push
fwait
addr16
and
fisubrs
sahf
xor
pop
push
inc
jge
or
add
push
ror
mov
inc
adc
and
insl
mov
xchg
fisubs
mov
ljmp
adc
popfw
mov
pop
push
cld
in
pop
les
pusha
mov
dec
mov
icebp
imulb
lret
push
xchg
shl
inc
push
pushf
call
push
mulb
shlb
cmp
mov
mov
and
mov
dec
jecxz
fstps
je
test
jno
ret
lods
push
xchg
xor
push
pop
inc
into
test
sbb
stos
fisubs
in
mov
loopne
ja,pn
inc
shr
jae
pop
dec
rcll
mov
xorb
push
push
std
mov
enter
sti
mov
pop
icebp
mov
add
cmp
cmp
push
xor
movsb
aam
cmc
in
pop
and
shlb
jg
test
das
rcrl
movsl
cli
in
hlt
mov
imul
push
data16
or
xchg
jecxz
repnz
pop
sahf
add
ds
aaa
hlt
pop
push
sub
jp
sahf
sub
pushf
scas
repz
popa
leave
push
pop
jae
inc
fisttpll
ret
pop
cld
sub
dec
bound
or
cmp
aaa
jle
push
cmp
xlat
xchg
push
sub
xchg
ljmp
stos
jbe
popa
sti
repz
cli
inc
ljmp
jecxz
dec
fmuls
stos
push
and
lret
ljmp
mov
and
pop
repnz
repnz
ljmp
inc
adc
dec
push
jle
sbb
les
sub
dec
push
cmc
cmp
stos
ja
in
add
rclb
inc
das
sub
arpl
gs
les
fildl
mov
mov
ja
stos
test
push
repz
lret
testb
sub
int
es
pop
inc
mov
and
lret
adc
add
hlt
movsl
inc
or
aad
xchg
in
push
mov
cmc
imul
stc
mov
int3
and
xlat
sti
mov
inc
and
mov
insl
pop
mov
mov
rorl
or
jp
pop
mov
push
jo
pop
sub
adc
push
mov
movsb
test
push
inc
data16
out
dec
dec
or
sub
xchg
cmp
and
adc
cmp
and
push
mov
push
mov
lock
push
xchg
mov
pop
cmpb
lahf
in
xor
adc
insb
imul
cld
in
jne
sub
cmp
pop
sbb
xchg
test
shll
jo
nop
jecxz
sbb
dec
mov
outsb
test
jmp
movsb
inc
xchg
jmp
das
mov
movsb
mov
mov
xchg
xchg
loopne
sahf
push
cwtl
dec
jnp
pop
jbe
jge
mov
adc
dec
es
mov
mov
arpl
dec
in
shrl
ret
imul
scas
mov
jle
xchg
push
clc
ret
int3
mov
mov
arpl
jle
popl
pop
dec
dec
ljmpw
mov
jnp
inc
push
and
mov
cltd
xchg
and
test
pushf
sbb
dec
dec
notl
lock
ja
pop
add
push
ljmp
mov
dec
pop
mov
push
insl
mov
scas
pop
ret
jb
jecxz
mov
lds
and
pushf
pop
pushf
jb
push
pop
movsb
loope
push
adc
pop
ds
dec
mov
xchg
push
sub
adc
xchg
jle
fcomp
mov
sbb
xor
mov
jae
xor
xor
sbb
aam
cmp
and
clc
adc
jp
adc
loope
mov
sub
aaa
sbb
mov
loope
push
jge
das
xchg
addb
xchg
fadds
punpcklwd
ret
outsb
ljmp
pop
jno
push
cld
sub
cwtl
scas
pop
aad
outsb
movsl
mov
in
sub
int
pop
sti
ss
or
andl
lcall
dec
xorl
leave
fisttpll
aaa
fisttpl
adcl
mov
pop
and
mov
inc
into
mov
push
xor
fdivs
popa
or
je
ja
stos
repnz
adc
xor
mov
aaa
jp
sbb
aas
cwtl
mov
ss
into
inc
sahf
stos
or
pop
pop
push
mov
mov
jp
sarl
or
mov
call
dec
sub
mov
or
sub
cmc
lock
xchg
fistps
mov
inc
sub
jl
int
sub
xor
dec
ja
mov
leave
cwtl
xchg
das
mov
push
stos
ja
adc
mov
or
pop
lret
add
pop
insb
mov
ret
dec
nop
test
jg
movsl
push
and
leave
movsb
sti
int3
add
pop
mov
arpl
call
xor
cmp
push
or
sub
inc
xor
lret
lea
push
add
jbe
stos
xchg
push
xchg
jecxz
orl
int3
mov
push
inc
rclb
ficomps
lahf
je
stos
jge
xorb
inc
or
in
cmpl
cli
xchg
pop
ficompl
iret
cs
adc
pop
test
push
fdivp
sbb
daa
insb
hlt
cwtl
outsl
int
outsb
nop
stos
mov
dec
aad
shl
lahf
fistpll
xchg
and
addr16
adc
cmp
jecxz
push
pop
xchg
or
and
rcl
lods
mov
inc
mov
imul
pop
mov
add
jg
or
inc
and
aad
jmp
adc
out
push
das
test
popf
sbb
sarl
add
push
add
insl
ja
xlat
jmp
ja
mov
lock
int3
mov
cs
jnp
cld
dec
outsb
ja
xchg
repnz
mov
aas
lret
sub
and
in
movsl
mov
sub
shl
outsl
jb
loope
ja
adc
stos
adc
cmp
mov
or
es
gs
push
and
neg
cmc
mov
jb
insl
sub
je
inc
lods
jne
mov
ret
in
push
mov
cmp
popf
mov
popf
mov
mov
ja
orb
ds
repz
jb
pop
ds
xlat
pop
xor
lcall
test
mov
push
cmc
jne
push
loopne
sub
add
aaa
ficoms
adc
xchg
cld
es
loop
call
add
loope
idivl
mov
mov
mov
inc
out
test
jns
fs
and
xor
data16
scas
mov
inc
xchg
and
sbb
jbe
mov
lods
cmp
push
dec
dec
lret
cli
add
mov
daa
inc
test
test
call
daa
add
cmpb
jne
jne
push
pop
sarl
lds
cmp
cmp
push
adc
lods
mov
dec
adc
rol
shrb
cmp
xchg
loop
insb
inc
push
lahf
sub
jg
fdiv
repnz
jle
xchg
jmp
pop
mov
or
movsl
aaa
lds
sbb
roll
xor
rcr
pmaxsw
mov
mov
push
mov
sbb
inc
scas
dec
fdivr
aaa
mov
pop
js
pop
out
loop
push
or
add
mov
mov
lods
jnp
outsb
xor
ret
aaa
sahf
add
mov
adc
scas
mov
pop
cmp
outsb
jb
mov
mov
into
cmp
cmpsb
into
jg
sbb
push
mov
outsl
mov
leave
or
or
mov
adc
lcall
dec
push
or
mov
inc
cmp
or
iret
scas
test
test
push
jecxz
cli
push
mov
std
das
pop
aam
add
addl
push
test
je
inc
push
addr16
outsb
inc
mov
cmp
fcomip
aam
fs
mov
cmp
fsubrl
sub
imull
stc
sub
or
mov
loop
movsb
xchg
jae
and
xchg
xor
jnp
ret
push
insl
xor
das
xor
mov
add
fsub
mov
xchg
into
pop
xchg
or
call
mov
sbb
pop
sbbl
cltd
adc
aas
aas
dec
inc
push
mov
sub
push
sub
sub
mov
test
fadd
cwtl
cltd
out
mov
xor
shlb
cli
and
mov
push
inc
int3
insl
cmp
and
iret
mov
sub
lds
xlat
sub
icebp
popf
arpl
pushf
andb
pop
xchg
mov
rolb
test
in
inc
int
cmp
sbb
sbb
inc
std
fiadds
cmp
out
or
or
push
jb
pop
xchg
add
mov
inc
stos
or
xchg
sarb
cs
insb
stos
xchg
movsl
or
insb
cmp
cmc
das
sub
dec
ja
outsb
mov
adc
pop
clc
aad
sub
out
add
adc
jge
fsubrs
sarb
dec
loope
jl
inc
mov
cs
gs
mov
or
inc
add
mov
sbb
mov
jecxz
int
lock
mov
xor
out
jle
mov
mov
out
ljmp
pop
pop
cmp
lea
push
into
and
xchg
icebp
loope
mov
xchg
sub
scas
jmp
pop
push
lcall
xchg
jne
stos
outsb
out
lcall
hlt
int
shr
in
push
xlat
xlat
mov
mov
ret
js
mov
clc
add
movsb
inc
test
bound
bound
and
mov
pop
sbb
cmp
mov
ss
nop
push
dec
lock
sbb
mov
mov
int3
pop
mov
pop
test
dec
xor
jne
or
pop
pop
loope
lcall
aad
es
or
cmpsl
inc
push
ret
out
inc
pop
enter
test
and
test
testl
add
rclb
push
negb
xchg
test
pop
in
cmp
mov
add
orb
outsl
mov
in
mov
or
xor
ret
xchg
in
into
pushf
push
cmpsl
and
out
cmp
mov
in
ds
inc
mov
in
rorl
pop
xor
sub
or
pop
jae
inc
scas
adc
mov
addl
and
adc
add
aas
jnp
xchg
fldt
or
mov
loope
inc
xchg
mov
xchg
cld
add
dec
and
mov
shll
mov
jg
dec
jmp
sbb
aam
push
xor
xchg
mov
lds
push
or
xchg
mov
aam
into
or
and
cmp
pop
out
idivl
add
shll
pop
push
mov
out
cwtl
and
mov
or
xorl
test
xlat
ds
jnp
ja
or
jg
lahf
add
lret
fbld
fwait
push
add
pushl
aad
dec
inc
dec
push
fcmovu
ss
cld
or
ficoms
divb
rcrb
loopne
in
out
repnz
pop
insb
out
pop
imul
test
and
shll
ljmp
mov
bnd
sbb
outsb
jmp
xor
jo
or
clc
mov
mov
movsb
outsb
callw
roll
push
pop
jmp
test
jnp
jle
aas
inc
cwtl
cmp
push
popf
or
gs
arpl
ficomps
push
sahf
jle
nop
leave
in
mov
pushaw
adc
not
rclb
into
inc
pop
mov
test
xchg
mov
sub
mov
fcomps
sbb
push
sbb
sub
les
push
fnstenv
test
mov
adc
xor
bnd
inc
aad
mov
pop
dec
movsl
or
nop
ret
mov
out
loope
lcall
inc
or
mov
xlat
mov
inc
je
push
sbb
xchg
jle
push
push
mov
or
bound
rol
jo
xor
xchg
stos
pop
rcll
inc
sarb
mov
mov
ret
filds
loope
stos
mov
and
nop
cmp
mov
decl
mov
adc
cmp
js
xchg
adc
arpl
shrl
mov
adc
mov
les
rol
pop
lret
pop
cmp
inc
mov
push
mov
mov
add
xor
cmp
loope
mov
addr16
lock
sbb
pop
pop
mov
pusha
data16
enter
out
pushf
or
push
pop
pop
cmp
call
shll
lret
out
loope
dec
pop
push
mov
adc
aas
jl
out
loopne
jnp
rclb
pop
inc
add
adc
pop
scas
xchg
sbb
xchg
je
push
mov
inc
push
outsb
xor
jnp
movsb
test
jo
push
fdivrl
push
jecxz
jno
adcb
xchg
mov
lock
in
cmc
and
stos
sub
and
xchg
push
sub
div
pusha
jae
add
je
out
in
pop
clc
push
add
add
adc
in
popf
jno
scas
cli
dec
test
pop
ljmp
adc
pop
pop
mov
scas
cwtl
xlat
add
jnp
idivb
icebp
arpl
xlat
jb,pn
sub
idivb
test
aaa
mov
into
xlat
lock
dec
jo
rclb
add
cs
pop
lret
sbb
push
jns
lods
xchg
stos
clc
sub
pop
inc
in
sti
mov
fld1
mov
inc
mov
dec
iret
add
scas
loope
rolb
mov
stc
loop
addr16
js
pop
cmpsb
push
mov
aas
imul
mov
xor
jns
cmpsb
mov
and
cmc
cs
and
es
pop
cmpsl
or
fs
sbb
mov
add
adc
adc
sub
leave
xchg
mov
and
lds
js
cwtl
mov
fwait
loop
push
out
mov
cmp
and
cmp
adc
pusha
out
fbld
cmpsl
lock
add
sub
xorl
sbb
lods
scas
int
stos
mov
mov
daa
adc
xor
jecxz
aam
and
mov
xor
nop
push
es
and
mov
in
and
dec
inc
jne
rclb
adc
lret
shll
in
dec
mov
push
mov
ret
aas
out
nop
loopne
test
mov
loope,pn
sbb
mov
mov
mov
push
inc
rcll
mov
or
push
or
insb
sbb
pop
in
lea
sub
imul
shl
sti
imul
std
mov
xchg
lahf
test
add
xor
sub
icebp
fdiv
test
sub
mov
push
cmp
je
popf
divl
iret
cmp
das
and
sub
jns
push
pusha
js
es
adc
sub
push
insb
jne
cmp
bound
jl
or
add
inc
lcall
subb
push
lret
cltd
aad
cmp
xlat
test
mov
pop
cmp
test
int3
fildll
pop
outsl
rorb
jg
inc
pop
inc
sbb
arpl
push
adc
cmc
es
movsb
and
fsubrl
mov
into
xchg
mov
push
shll
adc
out
stos
icebp
jle
lock
outsb
lods
mov
shrl
push
mov
xchg
push
dec
rclb
aam
imul
out
outsl
ret
test
icebp
fdivrl
jnp
mov
sbb
mov
andl
dec
enter
pushf
sahf
sbb
aam
addr16
jmp
dec
jbe
out
ret
push
mull
stos
arpl
hlt
mov
lret
fs
fisttps
adc
aaa
repnz
jns
jmp
adc
in
push
lcall
outsb
lods
push
sbbl
out
add
sbb
test
cmp
push
adc
mov
stos
jo
sbb
pushf
jne
jne
in
and
inc
leave
in
add
das
enter
and
xor
adc
andb
adc
xor
mov
adc
and
cwtl
mov
arpl
data16
es
imul
aam
inc
loope
xchg
cmp
fcompl
push
out
xchg
das
int3
out
push
mov
cmp
or
pop
jne
fwait
push
test
xor
ret
pop
dec
jno
les
das
xor
lret
mov
sub
push
and
pusha
mov
std
jne
pop
mov
into
adc
push
sub
aad
mov
data16
neg
xchg
mov
xchg
pop
pop
or
sub
jbe
les
xchg
pop
loope
pusha
or
pop
scas
and
jb
push
mov
mov
xor
insb
pop
push
xor
xor
lds
mov
add
into
lret
and
dec
aaa
fwait
mov
call
fnstsw
inc
xchg
in
and
dec
push
fisubs
xchg
add
lods
pop
push
movsb
sbb
push
rorl
dec
xchg
sahf
xor
sbb
inc
push
and
inc
mov
xorl
and
test
xchg
xor
mov
sub
inc
or
dec
les
pop
outsl
enter
ja
int3
popf
jns
or
push
pop
fists
cmp
pop
add
sbb
loope
xchg
fsubrs
adc
ds
sbb
gs
outsl
jmp
jmp
mov
aas
es
jb
subb
cmpsb
nop
jp
fstpt
jmp
enter
faddl
xchg
cmpsb
jns
mov
dec
xchg
mov
add
cld
mov
shrl
out
sbb
or
repz
xchg
cmpsl
bswap
and
arpl
sub
xchg
jnp
jmp
in
mov
outsl
pop
or
out
sahf
nop
xor
mov
mov
movsl
mov
ja
incl
addr16
popa
scas
ds
fdivrl
mov
mulb
xor
xchg
in
mov
cmc
pop
shrl
imul
sbb
push
test
push
pop
push
ret
pop
inc
loope
push
arpl
jb
adc
xor
pop
gs
cmc
nop
aam
cmpsb
sbb
lock
notb
mov
repz
lea
push
out
xor
dec
fadds
dec
clc
out
cmp
repz
mov
jl
add
xchg
xchg
outsb
sar
inc
mov
cmp
sub
adc
mov
pop
cli
imul
into
and
xchg
in
test
in
ret
xchg
aas
xor
push
adc
and
cmp
pop
repnz
push
mov
adcl
pop
pop
mov
jno
bnd
inc
mov
ret
ss
pop
stos
mov
jo
pop
ja
mov
inc
popf
and
mov
mov
filds
pop
lods
ret
jl
jecxz
loop
out
test
adcb
imul
adc
into
popf
fldl
xchg
sub
sub
jo
pop
jb
adc
pushf
std
jnp
sub
mov
jnp
mov
push
xchg
jne
data16
call
xchg
shlb
in
inc
cwtl
clc
lods
adc
in
test
add
in
jmp
jp
pop
lods
je
lods
loope
pop
mov
ljmp
mov
cmc
out
or
aam
jp
dec
adc
outsb
pop
inc
push
lds
jecxz
fidivrs
rcrl
bound
ljmp
ljmp
repz
nop
and
mov
push
inc
sbb
and
outsl
hlt
movsl
cltd
lds
loopne
fs
out
push
xor
cmp
pusha
std
icebp
pop
mov
fs
arpl
push
mov
ja
mov
sub
sub
outsl
push
lds
aad
arpl
push
jae
out
mov
jnp
rolb
mov
pop
adc
fidivrl
sbb
call
fcoms
in
imul
adc
sar
push
int3
push
cmp
mov
xchg
dec
int
push
clc
xchg
mov
push
idivb
adc
push
sbb
xchg
sbb
test
inc
je
jae
imulb
add
sub
pusha
xchg
fst
sbb
and
into
mov
inc
add
data16
jle
stos
stc
mov
lods
jne
insb
jp
inc
popa
jae
test
shll
push
addb
or
lods
stc
add
dec
xchg
ficoml
inc
adc
pop
int
or
les
iret
dec
sahf
call
insb
cmp
and
enter
fsubrl
in
add
sub
sub
mov
std
xlat
inc
dec
in
notb
jb
shlb
out
inc
lds
js
dec
adc
inc
leave
shr
adc
in
cmp
mov
stc
mov
cmp
pop
mov
sbb
push
test
fcomps
shrb
push
outsl
insb
inc
sbb
test
xchg
add
or
inc
addr16
xchg
xchg
fsubrl
xchg
hlt
sbb
insl
lahf
pushf
xchg
lods
or
gs
cmp
jl
enter
xchg
es
xchg
fstl
and
arpl
fcompl
and
lahf
mov
cmp
fsts
divl
mov
push
and
mov
pop
insl
adc
pop
jbe
out
mov
adc
popf
add
push
push
cmpsb
orb
clc
lea
add
daa
aad
cmp
xorl
ret
sti
fs
xchg
sbb
arpl
lock
loop
int
pop
in
rcll
adc
adc
jae
mov
popa
xchg
aas
das
inc
xor
adc
sub
xchg
xchg
push
or
and
pop
jae
cltd
mov
repnz
fwait
sahf
out
lret
cmpsb
in
cmp
imull
rcl
push
cmp
jbe
arpl
sbb
adc
xchg
ret
aam
in
imul
orl
and
pop
sti
inc
mov
test
ja
xor
cmc
flds
push
mov
sbb
in
push
mov
jmp
leave
outsl
idivl
pop
add
jno
das
sbb
rclw
cmp
cmpps
push
jb
cs
sbb
icebp
push
pop
mov
mov
inc
andl
xchg
aas
sbb
rcrb
mov
loop
inc
int3
push
mov
dec
pop
pop
daa
xor
push
or
loopne
ret
cmp
pop
mov
rol
xor
pop
shlb
sbb
int
sti
xor
and
and
leave
mov
dec
jecxz
mov
out
aam
cmp
push
mov
fimuls
push
popf
js
xchg
cmpsl
in
lds
adc
sar
mov
mov
mov
and
lcall
sbb
ljmp
sbb
cmp
lahf
inc
loop
shr
aad
mov
ret
sbbl
lods
inc
daa
rorb
shlb
ficoml
int3
push
dec
pusha
xorl
and
pop
fmuls
jp
in
ret
inc
aaa
repz
jno
and
xchg
dec
mov
clc
sbb
imul
add
aad
arpl
test
into
xor
cli
sub
enter
mov
repnz
sbb
aam
jno
in
loope
idivb
sbb
inc
ret
inc
test
xor
push
popa
mov
sbb
jns
in
mov
leave
mov
adc
dec
fsubs
sarb
mov
lds
push
ficoms
movsb
inc
out
adc
push
pusha
push
dec
push
xor
hlt
sbb
mov
cmpl
xchg
mov
or
jno
push
es
sbb
xchg
sahf
pop
push
push
jge
andl
inc
out
out
mov
neg
ret
mov
test
out
out
sbb
data16
stos
inc
dec
mov
int
mov
adc
arpl
and
fisttps
pop
xchg
idivb
inc
adc
mov
enter
daa
iret
jbe
xor
fidivl
fildll
mov
adc
mov
mov
test
mov
sqrtps
les
cmpsl
mov
addr16
daa
jnp
inc
shrl
inc
fisttps
and
xchg
test
jge
lock
iret
push
shlb
and
pop
rcrl
cmp
push
lods
sbb
pop
add
push
test
cmpsb
mov
imul
andb
xchg
lods
lahf
dec
scas
lods
cmpsb
lret
sbb
mov
and
mov
jnp
xorl
lods
adc
mov
sub
jo
fildl
int
mov
cmp
sub
pop
xor
jg
imul
inc
test
mov
xor
cmp
jge
sub
shll
je
mov
cvtdq2ps
jns
inc
test
pushf
dec
mov
scas
fwait
cmp
sahf
dec
jno
or
xor
in
dec
pop
push
call
jo
test
loop
sbb
xor
mov
sbb
shlb
cmp
lock
jl
in
mov
hlt
push
fistps
clc
cs
aas
jg
mov
lods
lret
xor
xchg
shl
imul
mov
test
cmp
cwtl
or
cli
orl
sbb
stc
mov
mov
stos
sub
cmp
mov
clc
in
dec
adc
add
push
pop
dec
mov
rorb
shll
adc
mov
adc
mov
scas
mov
add
xlat
test
pop
mov
ds
pop
orb
fisttpl
int
mov
outsl
push
and
xchg
mov
jae
dec
or
sub
jae
lcall
or
sar
adc
xchg
add
lds
mov
lock
adc
jbe
and
sahf
lea
imul
aas
sbb
pop
in
push
das
jo
pop
js
mov
mov
jecxz
add
scas
push
pop
pop
inc
insl
lods
xor
add
in
jb
or
xchg
pusha
cltd
je
and
jne
out
test
pop
adc
xchg
push
adc
popf
out
xor
rcrb
test
adc
jno
jo
outsl
stos
outsb
mov
out
je
sbb
ja
mov
and
xchg
dec
cmp
or
icebp
jp
jnp
subb
xchg
pop
sbb
pop
scas
test
mov
in
inc
mov
xchg
push
data16
mov
fimull
cmp
loopne
xor
ljmp
xchg
roll
enter
sub
test
adc
jl
jne
sahf
repz
mov
jmp
imul
jnp
mov
or
jle
in
pop
sbb
adc
movsl
mov
pushl
cld
mov
mov
inc
out
push
subl
pop
movsb
add
inc
insl
je
or
imul
in
pop
push
mov
je
addl
xchg
mov
mov
ror
shrl
jns
testb
pop
push
pop
mov
dec
pop
fs
push
jbe
lret
cmc
mov
icebp
ja
sub
adc
add
sbb
jnp
mov
sbb
cld
pop
mov
xor
addr16
sub
outsl
mov
movsb
imul
popf
cmp
loopne
imul
or
xchg
push
fwait
and
mov
ret
push
imul
cltd
mov
and
mov
cmp
ds
mov
inc
mov
in
lods
add
negl
iret
aaa
pop
cmc
aaa
xchg
xchg
shrb
out
mov
or
and
test
mov
les
subl
jmp
dec
in
ja
loopne
popf
js
ds
sbb
ja
xor
xor
stos
add
stc
pop
test
popf
mov
pop
mov
jb
mov
addr16
inc
movsb
test
adc
mov
mov
sub
pushf
fisubrl
mov
jo
stos
mov
out
mov
aad
mov
xchg
pop
xor
jge
mov
rcl
pushf
lcall
fwait
aam
push
mov
xchg
fildll
cmp
xor
inc
popa
cld
jg
xchg
cli
in
xor
pop
repnz
pusha
pop
insb
sbb
push
pop
clc
lea
inc
hlt
dec
ficompl
add
imul
xor
aas
mov
pop
push
sbb
mov
scas
icebp
movsb
mov
push
es
call
add
mov
data16
or
icebp
cmpsb
ret
pop
xchg
jb
adc
push
cltd
ds
sub
or
push
gs
jl
mov
cmc
jecxz
lods
add
test
adc
lock
jnp
fisttpl
mov
adc
push
enter
mov
adc
fs
outsb
roll
out
mov
sub
sbb
jmp
test
push
loope
orb
or
rcr
jle
ja
outsl
sub
andl
mov
psubw
mov
nop
lods
daa
jo
clc
es
insl
add
lods
into
sub
inc
bound
jae
imul
pop
stos
jbe
call
lock
push
xchg
cmpsb
cmp
cmc
shl
fcmovnb
or
aam
lret
mov
pop
push
mov
dec
shl
or
insl
pop
ss
ljmp
cmp
inc
push
pop
in
imul
adc
ljmp
mov
ss
es
cmp
cmpsb
incb
call
movsb
or
les
sub
jb
roll
inc
in
insb
adc
adc
lock
mov
bound
mov
cmpsb
cmp
ret
push
int3
pop
adc
sbbb
movl
into
out
stos
cltd
jge
xor
outsb
sahf
rcl
test
sbb
jle
decl
in
push
testb
xchg
js
divl
ljmp
jl
and
mov
cmp
das
push
pop
add
mov
dec
jo
dec
aaa
loopne
out
add
xlat
jecxz
sbb
inc
aas
xchg
xchg
jo
sub
cmp
pop
mov
scas
inc
xor
hlt
addl
ljmp
int3
add
cmc
push
push
lcall
stos
xchg
aam
movsb
mov
jge
dec
nop
mov
and
cld
sbbb
and
icebp
notl
rorl
push
and
jmp
out
clc
jg
inc
lahf
cli
movsl
aam
push
pop
les
jnp
cs
aas
lods
pop
es
push
pop
out
addr16
cli
shll
dec
test
jno
jb
rorl
rcrl
dec
loopne
test
imul
jge
inc
dec
bound
push
lea
cmc
mov
jge
cmp
hlt
sub
add
inc
adc
xlat
sbb
popa
mov
add
imul
cmp
jne
push
subb
pusha
pop
jnp
call
mov
xchg
outsb
aad
lcall
mov
jno
inc
pop
jmp
bound
mov
inc
mov
data16
jns
mov
sbb
jne
testl
pop
pop
adc
fwait
test
outsb
outsb
enter
out
mov
fcmovnb
lcall
jnp
jge
cmpsb
sti
imul
dec
mov
adc
jl
dec
xor
ja
mov
push
xor
mov
out
inc
lds
and
movsl
cmpsl
sbbl
dec
fcmovbe
fnsave
xlat
fs
loope
push
push
or
sti
fdivs
and
les
in
jmp
mov
daa
cwtl
test
test
sub
xor
aam
add
inc
mov
sub
sub
mov
push
test
sti
jle
inc
push
add
iret
push
repz
push
pushf
dec
and
and
cmc
mov
pushf
xchg
cmp
or
es
add
movsbl
or
lock
aaa
mov
call
sbb
in
push
add
int
push
ficompl
mov
je
sbb
pop
cmp
xchg
loopne
outsb
jp
ret
pushf
pusha
inc
loopne
dec
sub
cmp
cmp
jne
sbbl
fisubs
ror
test
jb
ret
in
push
or
rcrl
push
hlt
sub
or
add
cmpsl
cmp
pop
cltd
lret
xorl
repz
mov
mov
jl
scas
inc
push
ss
rcll
sub
cmp
mov
lds
mov
push
mov
inc
xchg
mov
scas
push
or
jecxz
xchg
and
add
std
jno
shll
sub
cmp
dec
xchg
lock
mov
in
aam
cmp
addl
pop
insl
mov
mov
mov
mov
aad
icebp
sbb
popf
xchg
push
cs
sarb
out
xchg
xchg
test
fs
in
mov
xor
sub
in
inc
cmp
pop
clc
rclb
dec
imul
add
cmc
cs
jne
imul
sbb
sub
movsl
cmp
mov
cmp
aas
pusha
lock
inc
cmp
inc
jge
dec
sbb
sarb
scas
mov
or
aas
shll
jecxz
aas
mov
cmpsb
lcall
sbb
adcb
add
inc
pop
sarl
add
sub
sahf
std
outsl
push
cmp
arpl
daa
pop
rclb
sbb
test
mov
loop
adc
std
dec
cs
cmp
cmp
mov
fnsetpm(287
out
sub
mov
inc
dec
add
sbb
leave
mov
mov
scas
inc
push
fnsave
movsb
adc
lahf
repnz
ja
or
mov
mov
lcall
xchg
push
mov
scas
pop
rcrb
push
adc
mov
jno
not
into
out
imul
lret
pushf
push
sub
shrl
fs
cli
loopne
or
ss
and
rolb
adc
sbb
lret
and
push
jge
or
jo
lock
cmp
outsb
xchg
push
lret
subb
in
pusha
in
rcl
dec
cmpl
sbb
jbe
push
or
push
jno
imul
sub
push
shl
sahf
pop
jb
add
pop
cmp
aad
gs
cmp
movsl
jecxz
mov
lea
mov
mov
dec
sbb
add
ljmp
movsl
dec
push
push
xor
mov
push
xchg
mov
push
in
test
jb
mov
jg
cli
fs
or
enter
ljmp
push
sbb
mov
fstp
jecxz
mov
lret
ret
aas
out
aad
ds
lds
in
jmp
cwtl
call
fistl
mov
scas
dec
leave
xchg
jb
mov
test
xlat
jns
mov
sarl
out
sbb
xchg
loopne
std
mov
int3
push
cli
adc
adcb
adc
and
xchg
in
call
dec
cmp
jle
sub
orb
frstor
jmp
sti
jl
xrelease
dec
fldt
jnp
jbe
sub
sbb
cmp
adc
xchg
dec
into
pop
ja
mov
and
fwait
nop
pop
cmp
or
mov
fcomi
dec
mov
shll
mov
or
arpl
aam
or
movsl
sbb
sbbl
mov
insl
mov
sbb
xchg
xor
jne
cmc
test
mov
and
xchg
ss
into
or
jo
test
push
arpl
xor
push
jecxz
fsubr
pop
dec
out
hlt
or
shll
dec
hlt
mov
ja
rcrb
clc
test
fstpt
xlat
xlat
push
ss
movsb
sub
mov
mov
mov
and
sub
sub
xchg
shlb
out
outsl
es
mov
int3
dec
and
xor
ja
pop
iret
cmp
testl
inc
or
xchg
xchg
jle
test
pause
push
mov
cwtl
and
call
mov
imul
add
js
pop
fcmovnb
jbe
xchg
cmpsl
jmp
lods
and
shrb
jmp
not
andb
dec
outsl
dec
adc
fistl
jg
mov
push
outsb
mov
lret
imul
addr16
sbb
idivl
jmp
flds
sub
jmp
lcall
cli
add
pop
into
arpl
insl
cld
cmpsb
sarb
in
lret
sub
imul
adcl
icebp
je
data16
gs
sub
in
mov
sub
movsb
or
loop
mov
sub
rcrl
mov
cli
push
shr
jp
or
dec
mov
in
mov
sbb
jo
cltd
gs
int3
adcl
shlb
sub
sbb
lret
ljmp
inc
sar
int
pop
push
loopne
int3
fcoms
pop
push
cwtl
stos
icebp
data16
sbb
mov
or
aaa
jbe
push
dec
inc
fwait
add
mov
mov
aas
inc
shl
cmpsb
outsl
fstpl
dec
and
outsb
mov
cmp
mov
std
xchg
push
jle
mov
das
cmpsl
int3
leave
cli
pop
inc
aaa
ret
dec
in
rcll
subl
adc
cmp
adc
test
popa
pop
pop
fisubl
aam
push
in
cmp
out
and
movsl
adcl
cs
lds
fcoms
lea
fisubrs
cmp
imul
jns
cmp
sbb
ret
dec
mov
dec
push
fiaddl
pop
jl
sti
jmp
shrl
cmpsl
fcomp
orb
pop
dec
jo
icebp
adc
andl
inc
fwait
or
cld
ss
mov
lods
test
jl
dec
lods
or
mov
sub
sub
shlb
shlb
bound
nop
aam
dec
and
cmpsl
insb
sti
push
mov
cld
mov
repnz
inc
adc
in
lea
xor
shrb
add
dec
pop
cwtl
push
dec
shlb
insl
dec
repz
mov
cld
rorl
and
daa
pop
cmp
pop
add
xchg
mov
mov
sbb
ret
fdivl
insl
lea
imul
shlw
pop
adc
gs
imul
mov
sbb
orb
dec
push
push
out
cwtl
mov
stos
test
cmovns
cmp
jne
aaa
pusha
dec
and
dec
int3
inc
cld
std
popa
mov
push
push
mov
or
mov
aad
ss
xor
fistps
in
inc
pushf
outsb
mov
xor
das
xor
imul
xlat
rolb
mov
sub
popf
call
push
in
cmp
jne
jo
inc
mov
aas
out
icebp
adc
cmp
shll
xor
popa
cmpsb
sub
jge
jmp
or
mov
pop
dec
xchg
movsb
mov
jle
push
mov
jno
mov
xor
jnp
mov
add
add
mov
jbe
aaa
mov
ljmp
daa
jmp
dec
leave
sbb
push
out
mov
idivl
and
xchg
xchg
dec
popf
or
shlb
insl
pop
call
scas
and
andb
test
pop
mov
sub
scas
imulb
sub
icebp
adc
and
add
push
data16
or
sbb
sbb
sbb
scas
add
insl
mov
scas
push
push
sbb
adc
cmp
cmp
adc
movb
test
pop
push
test
in
push
stos
repz
adc
pop
mov
push
sbb
leave
enter
stos
adc
jne
cmp
mov
imul
mov
fdivrs
inc
out
inc
jg
or
xchg
inc
dec
jno
popa
xor
xor
fidivs
mov
xor
pop
xor
stos
pop
push
mov
xor
pusha
pop
push
stos
add
xor
ljmp
ds
xchg
mov
call
subl
mov
and
rorl
pop
or
psrad
sub
sbb
sub
dec
stos
push
push
or
insl
lea
pushf
xor
addr16
fwait
test
xchg
xchg
inc
jnp
testl
ljmp
fldt
je
xor
addr16
in
xchg
xchg
mov
in
or
call
inc
push
sbb
pop
scas
inc
adc
fisubrs
dec
hlt
roll
mov
lods
jp
lods
movsl
sbb
stc
movl
fisttps
push
or
sub
mov
dec
dec
add
cmp
std
loope
xchg
mov
insb
dec
int
jo
dec
int
dec
mov
mov
mov
sbb
loop
cmp
push
or
add
pop
mov
dec
dec
in
mov
mov
push
or
xor
mov
imul
jp
sbb
jns
cmp
fmulp
sub
lods
jno
test
cli
inc
sbb
mov
repz
leave
and
mov
rcll
push
into
and
jmp
adc
and
insl
adcb
notb
scas
cwtl
pusha
pop
stos
ret
xor
loopne
dec
adc
or
push
and
f2xm1
imul
in
mov
dec
or
daa
jecxz
cmpsb
int
enter
in
sub
cmpxchg
outsb
cmp
or
popa
lret
jnp
mov
pop
je
clc
mov
mov
cld
inc
adc
pop
jne
xchg
cmp
pusha
gs
and
test
fiadds
outsl
lret
scas
jbe
xor
outsl
subl
mov
out
xor
push
pushf
es
pop
sbb
test
into
je
movsl
iret
add
lods
seto
sbb
pop
push
rorl
out
inc
add
push
cmp
movl
adc
jne
jecxz
xor
testb
out
dec
test
push
pusha
das
ljmp
sub
arpl
cmp
fstl
fidivl
icebp
xchg
cmp
mov
dec
rorb
jbe
push
ret
sbb
aas
add
inc
xchg
pop
xchg
xchg
ficomps
mov
push
mov
imul
imul
adc
popf
enter
jle
cwtl
xchg
test
lods
dec
mov
insb
jb
lods
mov
xchg
add
shrb
lret
push
jle
mov
mov
ja
cmpsl
sbbl
jmp
push
lret
xchg
nop
push
call
cwtl
or
int3
add
out
inc
rcl
xchg
sbb
icebp
adc
mov
xchg
shll
dec
or
fstpl
pop
pop
push
xchg
push
out
mov
mov
ret
dec
lods
sarl
popa
add
arpl
stos
call
xchg
cs
push
stos
and
fstpl
and
addr16
dec
stos
pop
fistl
dec
popf
add
lds
jo
ret
and
scas
test
cmovl
insb
outsl
jae
test
pop
dec
repnz
xchg
das
push
loopne
xor
hlt
adc
shlb
push
shr
enter
clc
or
jne
inc
or
mov
js
pop
xor
test
aaa
cmp
mov
mov
dec
push
jg
cli
lods
and
mov
inc
insl
jecxz
inc
scas
outsb
aad
out
adc
push
jo
repz
stos
xchg
test
arpl
mov
adc
add
pop
add
lds
stc
std
filds
push
fisttpl
es
ret
pop
ret
popf
push
sub
inc
jl
or
test
idiv
jmp
stc
outsb
rolb
xchg
popf
in
and
sti
lcall
dec
pop
mov
mov
movsl
call
jno
cmpsb
mov
inc
xor
jl
pop
add
and
push
scas
icebp
sub
subl
cmpsb
cmp
jl
and
iret
lret
fmuls
dec
mov
and
sbb
mov
xchg
hlt
sbb
pop
pop
xchg
lahf
pop
jl
inc
sarl
xchg
cmc
shll
movsb
mov
jne
loope
mov
cmp
jecxz
dec
mov
sbb
out
les
int
sub
add
mov
jmp
push
stos
loopne
jnp
pop
imul
jae
jno
cmc
add
cli
pop
nop
repz
fcmovnbe
dec
lea
mov
imul
in
in
enterw
scas
adc
insl
sub
dec
xchg
iret
or
and
jae
in
testl
jg
inc
jge
lea
xchg
push
loopne
ljmp
cmpsl
orb
std
movsl
mov
jo
mov
gs
std
add
xor
push
je
imul
pusha
mov
fnstcw
xchg
mov
lcall
nop
lahf
xor
pop
mov
jae
fsubrs
sbb
pop
mov
stos
xchg
call
adc
jb
mov
pop
add
adc
out
dec
pop
popa
ret
mov
loopne
decl
sarb
push
inc
mov
scas
addr16
sub
in
popf
jno
sub
add
mov
push
xchg
movsl
xchg
dec
into
shr
mov
pop
mov
mov
aam
adcl
out
mov
test
mov
sub
xlat
cmpsl
lds
jo
fsubrl
adc
icebp
roll
mov
ljmp
or
ja
enter
std
fstl
mov
jbe
sbb
lods
add
and
sbb
arpl
mov
cs
push
xor
xor
adc
mov
pop
xchg
push
or
dec
pop
cld
mul
cmp
mov
push
pop
call
sti
scas
mov
or
test
xor
sub
movsl
pop
loopne
shll
sub
loope
mov
ja
pop
sub
ret
push
adc
and
arpl
or
shl
rcrb
mov
inc
pop
mov
and
mov
dec
mov
loop
xlat
or
subb
imul
das
jge
dec
test
sti
loope
sarb
xchg
push
xchg
stc
cmp
imul
sbb
repnz
es
repz
mov
cmp
dec
xor
in
add
jae
mov
daa
test
sub
mov
xchg
aad
mov
xor
enter
test
fwait
test
pop
mov
mov
pop
and
push
push
mov
sahf
fdivl
adc
mov
insb
xor
xchg
test
push
mov
add
call
stc
xor
sbb
hlt
push
out
icebp
pop
push
mov
jbe
mov
lods
adc
add
jb
or
lahf
sub
xor
add
and
cs
aam
sub
jp
repz
xor
pop
dec
in
out
mov
pop
inc
lods
sub
mov
test
cli
push
cltd
loope
xlat
add
and
cmpsb
inc
cmp
cltd
xchg
sbbb
dec
aaa
pop
rcrb
movsb
loop
das
out
movsb
cmp
js
clc
mov
lretw
fwait
mov
xchg
mov
inc
clc
cld
jmp
imul
dec
ljmp
fiadds
dec
sbb
xlat
mov
out
push
pop
in
jo
cmp
outsb
xor
xor
divb
pushf
inc
movsl
mov
xchg
popf
inc
fs
inc
inc
mov
inc
gs
jecxz
push
rolb
sub
or
inc
fs
sub
adc
and
mov
loopne
pop
xchg
sahf
dec
test
xchg
pop
jecxz
push
mov
iret
push
mov
ss
cmp
std
push
pop
pop
or
push
xor
rorb
mov
sbb
push
icebp
mov
mov
push
cmp
fcompl
xor
mov
adc
xchg
and
sub
repnz
leave
imul
stos
jg
xchg
inc
movsl
adc
sbb
mov
fs
loop
call
inc
test
cwtl
push
push
popf
sbb
mov
jle
xor
fwait
js
ja
xchg
js
shrb
stos
js
and
test
cmp
repnz
shl
sub
sbb
scas
dec
xchg
bndstx
push
add
xor
xchg
in
xor
jecxz
adc
xchg
and
inc
outsb
leave
mov
aas
mov
pop
sub
xor
add
insl
add
fcomps
aam
sub
aas
add
pushf
outsl
sub
stc
in
scas
scas
call
idivb
fnstsw
mov
cmp
cmc
inc
aam
ss
push
xor
inc
test
jle
in
sbb
lcall
add
sbb
fwait
popa
jge
sarl
sub
dec
pushf
mov
lods
dec
movsb
pop
rcrl
jbe
and
cmc
adcl
test
jnp
ja
loop
gs
sbb
lcall
mov
fs
or
gs
ss
inc
sahf
sti
adc
fbld
ds
push
aad
jecxz
inc
adc
push
xchg
addb
push
ja
fildl
adc
lea
mov
mov
sub
sub
test
out
fists
jne
bound
int
and
pop
into
bound
sbb
push
test
in
pop
ss
rol
scas
inc
icebp
icebp
mov
in
sarl
addr16
lods
rol
mov
popa
jo
inc
and
test
lahf
pop
leave
adc
cwtl
daa
push
inc
xor
jae
jo
and
jne
fwait
rcll
mov
roll
je
jge
iret
push
xlat
lock
jge
adc
inc
or
mov
sub
push
mov
pop
xor
dec
push
pop
je
aad
ret
stos
mov
jge
testb
sbbl
clc
jge
jns
pop
sub
std
lock
mov
fnstenv
and
je
jo
enter
mov
mov
fstpl
add
insl
mov
pop
daa
or
fincstp
outsl
cld
std
mov
jno
cmpsb
js
icebp
dec
sbb
push
repnz
lahf
cwtl
mov
sub
repnz
mov
mov
stos
adc
dec
mov
push
sbb
jo
mov
mov
and
les
xchg
lahf
loope
iret
sbb
scas
test
xor
out
fildll
push
sbb
test
mov
push
push
scas
out
push
int
mov
push
loope
push
inc
aam
iret
sbb
pop
xor
jnp
fdivr
inc
push
or
mov
dec
ljmp
lock
hlt
xchg
cmp
jnp
mov
out
dec
shlb
xchg
mov
xchg
cmp
xor
bound
in
or
lahf
xorb
mulb
not
pop
fadd
fisttps
xchg
dec
xor
xchg
add
aas
mov
cmpl
cmp
pop
mov
cmp
test
jb
mov
dec
sub
in
or
fnstsw
nop
jbe
repnz
iret
pop
cmp
test
sub
stos
cmp
dec
pop
in
xchg
stc
xchg
xchg
and
xchg
jmp
clc
pop
nop/reserved
in
cmp
xor
movsb
fadds
and
jmp
repnz
or
mov
shlb
daa
ja
or
cmp
add
es
pop
push
inc
push
fiadds
add
sti
mov
in
jb
sub
mov
cld
ja
push
add
push
clc
xchg
aad
dec
and
addb
mov
sub
lock
inc
loopne
cltd
push
inc
xor
popa
ret
xchg
pop
shll
mov
xor
push
dec
push
loop
xorb
xor
pushf
lods
insl
sbb
mov
shrl
sahf
dec
rdpmc
lahf
sbb
divl
push
jnp
adc
and
add
imul
push
popa
xor
icebp
add
pop
or
outsl
sahf
sbb
xor
or
or
les
mov
sbb
loop
or
push
stos
imul
push
inc
add
fstpt
pop
fsubs
lods
outsl
push
jb
fcompl
push
xor
rolb
dec
sub
fdivrs
lret
inc
ficoms
and
call
dec
inc
arpl
jb
mov
jnp
or
xchg
ficomps
and
pop
sub
mov
das
jmp
cmpsb
dec
pop
xor
pop
inc
insl
xchg
xchg
dec
cmp
xchg
cmp
xor
push
jbe
popf
outsb
ret
ja
cmp
shlb
mov
jae
mov
ja
pop
das
pop
inc
lret
lea
inc
push
add
push
mov
xor
mov
cmp
cmpsb
inc
cwtl
jl
xlat
and
pop
and
in
popa
into
sahf
and
scas
call
inc
xor
cmp
insl
jmp
pop
add
sbb
lock
pop
pushf
xchg
jmp
pushf
bound
cmc
cmp
jae
out
sub
mov
arpl
mov
cmpsl
outsl
testb
roll
adc
sbb
xchg
pop
dec
data16
adc
sahf
std
add
aam
mov
das
xor
dec
filds
shl
dec
mov
sub
add
ss
lahf
adc
push
in
jno
xlat
fbstp
and
bound
mov
sbb
mov
popa
out
xchg
xchg
inc
lahf
inc
pop
jp
ret
arpl
pop
push
fildll
xchg
stc
outsb
loop
int
xor
or
add
inc
repz
fucom
cli
jo
lea
mov
xor
push
dec
inc
xchg
out
xchg
push
adc
or
iret
push
mov
andl
dec
sti
in
das
xor
jle
in
dec
jmp
mov
retw
pop
outsb
mov
popf
push
cmp
mov
or
ret
push
stc
aaa
aas
je
inc
push
add
sahf
das
sbb
push
loope
repz
aas
xchg
stc
inc
ror
sub
and
shl
in
sbb
inc
sahf
pop
mov
mov
out
mov
mov
mov
in
cli
and
leave
lods
cmp
add
adc
cmp
repz
xchg
dec
ret
lret
xchg
adc
sub
cmp
mov
mov
cmp
sbbb
inc
cmpsb
or
xchg
cmp
xor
mov
orl
test
mov
mov
fisttpll
xchg
icebp
jbe
hlt
cmp
mov
in
add
pop
cmp
push
push
push
sbb
outsb
push
cli
push
in
cld
and
inc
mov
ljmp
adc
pop
mov
adc
loop
out
dec
aas
sbb
push
cmp
lea
cmp
sub
insl
imul
jecxz
aad
out
sahf
inc
dec
lea
dec
lock
xchg
and
call
stos
notb
push
scas
aad
and
popf
ljmp
push
jmp
xor
xor
jbe
jle
jae
pop
sbb
imul
sti
mov
pusha
inc
add
sub
fmul
sbb
or
xchg
popa
insb
outsb
icebp
mov
push
pushf
and
in
adcb
push
jno
cmp
arpl
lret
lret
out
in
pop
dec
mov
push
cmpsb
push
mov
xor
cld
repz
pop
ljmp
mov
pop
mov
clc
dec
inc
popa
aas
add
out
in
jle
ret
roll
cld
movsb
inc
mov
mov
pop
in
int
jae
sbb
movsb
xchg
push
divb
out
cmc
add
mov
mov
and
mov
sti
push
ret
subl
lock
cmp
daa
cmp
jmp
jecxz
or
add
hlt
scas
outsb
pop
add
outsb
inc
insl
in
cmp
mov
test
lahf
into
filds
xchg
ror
sub
std
dec
mov
add
data16
jnp
cmp
mov
mov
xchg
out
in
xchg
lret
xlat
std
push
dec
sbb
jp
test
pop
stos
push
insb
aam
lret
lods
inc
mov
jo
sub
icebp
mov
pop
push
imul
in
sbb
jg
or
scas
dec
and
dec
jne
inc
push
shrb
mov
inc
rcrl
inc
call
push
lods
popa
psraw
nop
pop
addl
leave
popa
sbb
in
mov
scas
in
dec
imul
jns
sub
in
sti
fs
aad
xor
ljmp
xor
mov
ss
mov
pop
inc
or
sbb
clc
idivb
lret
ret
lret
leave
pop
add
rorl
cmp
mov
sbb
ret
je
push
or
cmp
pop
sub
test
and
int3
stos
mov
lcall
and
stos
les
js
cmp
hlt
aad
ficomps
ror
dec
jo
xchg
clc
test
and
aad
iret
mov
xor
cld
cmp
and
rorb
sbb
or
add
in
fisubrl
aaa
or
dec
and
sbb
mov
out
cwtl
pop
pop
jae
leave
movsb
jl
mov
sub
jne
or
or
push
orl
xor
pop
scas
xor
mov
movsb
test
mov
push
and
xor
incb
xor
adc
add
flds
cmp
mov
int
inc
cmp
sbb
out
sbb
out
scas
fucom
arpl
int
cmc
repnz
mov
lret
lret
sarb
sub
dec
incl
and
sub
aaa
mov
jae
popa
jb
xchg
push
ret
cmp
sar
or
cltd
xor
jmp
push
insb
icebp
test
jb
jbe
add
and
outsb
and
lahf
or
bound
xchg
nop
xchg
call
adc
ja
ficoms
dec
xor
mov
jg
jo
cltd
mov
xchg
movsl
jge
inc
jns
push
add
mov
scas
pop
test
inc
inc
xchg
mov
fistps
add
out
xchg
adcl
sbbb
nop
leave
mov
xchg
call
imul
outsb
fsubrs
imul
jmp
pop
jp
push
lods
adc
inc
lock
aad
add
scas
and
push
das
lahf
call
or
sub
cmp
movsb
adc
mov
outsl
outsl
das
adc
shll
xchg
inc
shl
ss
xchg
movsb
out
insl
mov
mov
add
xor
jns
std
outsl
or
rclb
mov
jge
out
lret
mov
mov
sub
cmp
add
mov
fsubrs
sbbb
pop
loope
dec
lods
out
and
add
jmp
inc
pusha
popf
pop
xchg
jns
pop
fists
jg
ss
mov
divl
incb
or
cmpb
idivb
xor
lret
jg
mov
jg
popa
xor
and
and
jl
test
test
test
jbe
mov
pop
jp
and
xor
mov
call
lods
pop
bound
mov
pop
insb
cmp
mov
push
adc
mov
xlat
sbb
aas
inc
mov
jecxz
std
stos
xchg
mov
cmc
pop
in
rcrl
scas
xchg
pushf
jge
aas
sub
push
outsb
mov
adc
sub
inc
std
mov
xchg
fistpll
ds
jno
mov
add
or
hlt
jbe
aad
cmp
push
inc
push
add
repnz
mov
movb
pusha
lret
pop
orl
or
shr
arpl
xor
fnstcw
jp
or
and
sub
xchg
fsub
insl
add
push
inc
stos
push
push
je
test
jne
bnd
sbb
mov
mov
cli
dec
imul
mov
lock
mov
es
lock
and
pop
jg
or
jecxz
lahf
loopne
sahf
imul
jno
loopne
inc
jp
shrl
hlt
inc
lea
push
mov
xchg
jge
sub
in
imul
xor
jae
fwait
pop
sub
fs
mov
pop
lods
sub
stos
fdivrl
mov
push
mov
cmp
frstor
mov
mov
lahf
popf
cmp
int3
movsl
ss
mov
mov
out
cmp
adc
into
in
addl
arpl
outsl
mov
push
lret
roll
sub
rcrb
jecxz
mov
cmp
cmp
add
leave
test
adc
xchg
arpl
sahf
dec
lahf
adc
test
outsl
xor
lods
ret
add
or
clc
add
aad
lods
lcall
jmp
test
push
insb
in
mov
pop
inc
dec
outsl
xor
data16
fbstp
icebp
xor
in
stos
test
into
mov
push
add
cmp
scas
mov
mov
add
sub
aad
mov
jo
fucomip
arpl
shlb
mov
xor
addr16
inc
ret
mov
ja
loop
out
dec
bound
sub
mov
insl
pop
jl
lds
cmp
adc
clc
pop
insb
scas
nop
cmp
pop
mov
arpl
push
sub
or
scas
iret
inc
das
ds
mov
push
arpl
popf
xlat
inc
jno
sub
orl
sbb
cmpsl
or
xchg
push
push
ljmp
mov
scas
leave
jmp
idivl
mov
push
rclb
sbb
add
rep
les
xorl
xchg
xchg
xlat
or
mov
sbb
outsl
push
xchg
lea
sbb
dec
cmp
out
in
mov
imul
mov
insb
mov
jns
inc
fists
jmp
push
push
outsb
mov
leave
xchg
in
insl
cmp
int3
and
pop
imul
push
in
add
js,pt
fcomps
icebp
mov
enter
mov
xchg
cwtl
push
int3
dec
scas
jl
jmp
cmp
cmp
dec
xchg
test
cmp
nop
mov
mov
pop
pop
lret
push
mov
inc
sbb
pop
insb
test
pop
xchg
hlt
dec
dec
std
jns
sbb
ja
outsb
push
push
inc
filds
adc
push
xchg
ficoms
fisubrl
pop
mov
jle
mov
push
pop
adc
cli
jg
pop
adc
xor
sub
roll
add
mov
jne
mov
fistl
push
xchg
lret
in
xchg
fmuls
pop
lods
icebp
lock
xchg
std
mov
es
popf
into
push
mov
sbb
adc
sub
add
sub
enter
inc
or
xchg
sub
dec
push
call
xor
cld
inc
es
daa
out
sti
bound
lds
sbb
aam
and
lea
xchg
jecxz
pushf
int
xor
imul
iret
test
adc
ss
dec
add
fs
shll
cmp
jp
stc
add
mov
addr16
xchg
pop
ljmp
mov
aas
xor
wrmsr
psrlw
xor
mov
mov
into
test
xor
jmp
adc
orb
popf
in
scas
lret
and
stos
mov
cmp
dec
mov
mov
cltd
add
inc
std
jge
pop
insb
jb
aas
orl
lds
sti
push
out
dec
and
pop
loopne
add
insb
mov
mov
mov
in
sub
xchg
je
fisttpl
clc
adc
mov
sbb
fwait
pop
out
lea
push
cs
cltd
dec
mov
lret
mulb
xor
and
add
data16
ljmp
cmp
movsb
cwtl
or
cmp
cmpsb
sbb
dec
add
cwtl
loop
mov
mov
sahf
out
inc
xchg
adcl
test
dec
je
out
dec
pop
mov
outsb
sbb
fs
push
mov
les
push
pop
xchg
scas
xor
aaa
addr16
les
xchg
dec
dec
sbb
jno,pn
dec
addb
ljmp
push
dec
out
in
repz
test
sbb
add
cmpsb
inc
cmpsl
inc
mov
sti
loopne
mov
and
neg
inc
sbb
fisubrs
sub
out
call
std
out
pop
ss
imul
sbb
es
dec
outsl
cmc
gs
fucomi
loope
mov
xor
xor
les
popa
pop
jb
aam
jl
mov
pop
xor
xor
aas
stos
mov
jge
xor
sbb
cs
and
shl
int
dec
mov
das
or
adc
dec
data16
loop
xor
mov
jne
lcall
sbb
call
dec
lock
mov
int3
jcxz
bound
das
sbb
dec
hlt
sbb
insb
xor
aas
sbb
inc
cmp
cmp
loop
mov
cmc
xchg
pushf
or
mov
cld
shrl
add
std
les
jg
jae
ret
push
insl
sub
sbb
cmpsl
ret
ret
sti
mov
jnp
jge
sub
add
jns
lock
jnp
pop
mov
sub
jle
pushf
fdivs
pop
sbb
cmpl
stc
xchg
test
insl
jne
and
je
daa
ret
xlat
inc
test
pop
testl
xchg
aas
fxch
and
xchg
inc
mov
pop
xchg
inc
aad
data16
andb
fisubrs
mov
mov
xor
push
jge
pushf
sbb
mov
jno
pushl
int
fstps
lds
mov
pop
pop
push
fdivr
roll
mov
xor
pop
stos
aad
loopne
add
das
cli
sbb
xchg
and
addr16
xor
shl
jp
adc
mov
imul
loope
cmc
popa
adc
add
orl
stc
cmp
or
subb
jns
lret
insl
add
sub
rol
mov
cltd
ss
mov
adc
mov
adc
cmp
sub
xor
out
rcl
shll
lds
movsb
pop
orb
cs
sub
push
shl
mov
jnp
jo
sti
cmp
iret
scas
std
inc
fdiv
dec
mov
ret
scas
pop
mov
mov
inc
inc
jns
fcoml
lret
out
jge
jb
rol
push
add
cmpsl
gs
jns
xor
jns
sub
xchg
aas
jp
add
or
adc
inc
not
jne
icebp
ss
fidivl
pop
pop
mov
xchg
call
scas
mov
sub
cs
scas
dec
and
sub
std
pop
aad
imul
dec
and
mov
in
cli
out
cmpsl
cmp
sar
test
movsb
int
adc
int3
insb
mov
and
int3
mov
mov
cmp
test
ja
or
cmpsb
add
pop
ja
xlat
mov
pop
leave
sbb
push
bound
mov
hlt
icebp
jbe
ret
in
cmpsl
and
push
inc
push
out
sbb
ja
rolb
or
cwtl
lret
iret
push
dec
inc
mov
xor
ffree
mov
sub
sub
cwtl
or
jnp
imul
sbb
cmpsl
pop
jecxz
fsubrp
sbbb
push
bound
cmpsl
inc
out
lds
and
out
inc
push
mov
xor
jnp
test
mov
inc
push
pop
sbb
call
xchg
ljmp
jbe
ljmp
scas
adc
loop
stc
sub
ljmp
and
push
inc
mov
cmp
or
lahf
jno
or
cmp
add
and
xchg
xor
lds
mov
mov
sti
adc
cmp
jne
ljmp
outsl
pusha
sti
test
mov
leave
das
adc
cltd
lret
add
push
dec
into
loopne
andl
jmp
orb
std
movb
and
jo
add
arpl
aam
pop
shlb
mov
fxch
popf
pop
sub
adc
lret
mov
fs
sbb
notl
in
xor
mov
and
cmp
sbb
jle
add
mov
nop
dec
xor
add
repz
sbb
dec
dec
mov
cli
test
jp
iret
popf
aas
mov
dec
jl
scas
pop
jmp
ss
popf
ds
pop
shr
enter
adc
xor
ror
dec
jo
adc
outsl
and
jg
int
xchg
in
lods
xchg
sar
lods
dec
les
fstpt
pop
and
filds
jmp
fwait
jl
cltd
xlat
pop
enter
cmp
gs
sbb
pusha
repnz
fs
fcoms
mov
in
aam
sbb
jno
push
fs
sarb
ficoms
add
and
test
js
mov
and
inc
pop
cmpps
dec
push
lahf
cmp
popf
pop
mov
mov
int3
sbb
push
pop
rcrb
loope
dec
and
mov
fwait
cmp
adc
lret
xchg
mov
xchg
adc
lret
cld
adc
stos
ja
xchg
or
popa
xchg
or
outsl
pusha
xor
loop
xchg
dec
adc
icebp
fistps
and
jp
mov
lods
das
fldl
xor
lea
je
in
mov
cld
mov
cmp
xchg
leave
sarb
cmpsl
lret
addr16
lret
aam
incb
gs
xchg
jp
ret
pushf
leave
push
pop
inc
mov
adc
or
push
pop
test
inc
or
jne
aaa
jge
ja
std
jl
pop
addl
in
dec
adc
dec
test
js
mov
and
icebp
es
fnstcw
dec
gs
ficompl
test
out
nop
sub
dec
in
and
push
mov
gs
adc
stos
adc
data16
push
test
clc
xor
jo
and
gs
xchg
fwait
idivl
notl
and
pop
pop
nop
push
test
jge
push
in
mov
loopne
and
mov
scas
dec
pop
out
loop
add
pop
mov
lods
sub
js
jb
or
js
out
pop
movsl
imul
pop
mov
mov
ret
jmp
test
cltd
sbb
loope
or
test
mov
jecxz
sub
lds
pop
xor
add
fs
cmpsb
es
fidivrs
repnz
mov
popa
int3
addb
popa
xchg
in
xchg
push
jnp
insl
scas
aaa
pop
sbb
mov
push
stos
clc
subl
cmc
mov
andb
push
mov
shl
mov
dec
or
repz
mov
repz
mov
rcl
jg
daa
cmpsl
test
jp
push
lcall
test
dec
mov
adc
mov
mov
das
mov
movsl
roll
test
scas
or
jb
xor
mov
stc
int
lea
mov
sub
sub
jns
dec
lret
and
aad
push
sbb
mov
scas
push
add
mov
mov
adc
jo
scas
mov
push
inc
in
rcr
jae
sbb
das
push
mov
adc
adc
insb
lret
xchg
adc
and
sub
mov
testb
add
mov
jbe
std
insl
and
mov
pop
jb
popf
pop
std
ja
stos
addps
aam
jge
sbb
mov
jb
push
sbbl
or
adc
loopne
sbb
adc
insl
mov
xchg
mov
cmp
and
mov
adc
imul
cmp
sbb
lcall
aam
adc
daa
mov
dec
fmulp
lahf
in
clc
cltd
pop
imul
mov
cli
lahf
ret
outsl
inc
mov
and
add
aas
dec
mov
inc
sub
jmp
jns
out
inc
mov
nop
push
rolb
xchg
add
sub
pop
mov
mov
les
add
push
add
mov
or
mov
pop
mov
in
dec
in
cmp
add
push
sbbb
xchg
mov
jge
sub
loop
movb
lock
sub
or
pop
je
jecxz
mov
movsl
sbb
cmpsl
in
jno
sub
cmc
scas
mov
jae
fisttps
adc
inc
mov
lret
mov
mov
jecxz
movsl
mov
shr
ds
and
push
jo
dec
imul
out
sub
jle
mov
in
fistpll
jb
ret
popa
sbb
loopne
pop
pushf
mov
adc
js
pop
out
test
or
and
mov
push
xchg
cwtl
notl
mov
pushf
mov
mov
mov
jl
ud2
test
adc
xchg
mov
lret
pushf
mov
imul
mov
inc
outsb
arpl
lods
jae
sub
leave
div
stos
and
fadds
adc
jl
mov
fistpll
in
jne
xchg
sbb
push
loopne
pop
iret
mov
sbb
fwait
movsl
adc
dec
aas
cmpb
andl
call
mov
jg
inc
lock
not
pushf
lods
insb
and
jnp
push
scas
add
xchg
repz
scas
xor
popf
push
movsl
mov
push
stc
jbe
cmp
mov
xchg
xor
dec
subb
xabort
xchg
xchg
add
lock
mov
bound
js
ret
xchg
scas
mov
jl
mov
repz
inc
xchg
lret
adc
jle
cmp
xchg
xchg
std
add
and
pop
scas
sub
jo
pop
lcall
xchg
sbb
and
fiadds
cmp
mov
sbb
push
repz
xor
add
mov
sub
out
lods
add
sub
xchg
xor
fcmovne
std
cltd
out
or
subl
cmpsb
sbb
shr
test
test
les
dec
int
push
inc
or
push
and
adc
xor
xchg
out
rorl
test
pop
cmp
mov
jne
test
adc
adc
stos
insl
lcall
sub
jmp
add
and
enter
int3
cmpb
ljmp
dec
mov
aas
or
jle
aad
loopne
rolb
stc
sbb
xchg
fs
sub
xor
pop
push
push
dec
orl
data16
jne
pop
jne
pop
mov
test
push
pop
add
ret
popa
cmp
xor
fs
mov
lret
mov
pop
shll
divl
cmp
xchg
jle
notb
mov
pop
insl
fscale
les
lahf
xchg
adc
xlat
and
fsubs
in
mov
nop
mov
push
inc
and
hlt
push
adc
cmp
adc
mov
cmp
add
jg
xchg
push
or
xor
into
mov
pop
cmp
or
and
cmp
jecxz
pop
cmp
xlat
mov
fadd
cmpsl
lcall
daa
xchg
popf
sub
addr16
or
arpl
pop
dec
xchg
xor
ss
and
dec
fcompl
shl
sub
dec
loop
out
out
arpl
cmc
stos
popf
das
incb
insb
fdivl
mov
fdiv
inc
orb
push
xchg
aam
ret
xchg
lret
stos
sbb
leave
es
daa
push
das
add
adc
sbb
int3
popf
jp
mov
mov
sbb
pushf
lahf
and
stos
aad
mov
add
xor
in
into
lds
test
nop
cmp
xorl
xor
ret
not
adc
pushf
sub
xchg
inc
mov
outsl
push
ljmp
lds
lods
add
cwtl
xchg
ds
in
pop
xchg
mov
pop
lret
adc
das
and
cwtl
sub
lods
daa
mov
fsubr
icebp
and
jecxz
dec
inc
mov
popf
stos
dec
stc
inc
mov
cli
loope
test
std
out
insb
xchg
sub
lds
or
cmp
cmp
mov
inc
test
iret
icebp
je
in
xchg
insb
pusha
sub
cmp
mov
fcoms
mov
ds
mov
and
sub
je
xor
jnp
pop
rcl
dec
sub
fiadds
fbstp
roll
pop
dec
fildll
mov
nop
cwtl
and
adc
push
sub
addr16
psllq
mov
insl
mov
xor
ja
or
mov
mov
inc
add
rorl
orb
adc
jo
sbb
lods
cld
adc
std
sub
call
test
adc
pop
push
das
out
add
cmpsb
clc
bound
or
jo
inc
xor
push
mov
and
mov
out
jns
jno
rcrl
aam
bound
sub
push
inc
in
ret
flds
dec
lahf
cmp
je
loop
mov
or
aas
shrl
ds
jle
jp
add
mov
dec
adc
mov
add
ret
xor
xor
test
ss
sbb
das
or
push
jp
aam
adc
fmull
ja
fistl
or
lds
fbld
les
out
mov
lods
sub
sub
add
lahf
dec
mov
xlat
fcoml
aas
repz
lds
and
test
xchg
fcoml
scas
xchg
repz
dec
mov
mov
jnp
mov
xor
mov
xchg
in
stos
nop
std
stc
pusha
xlat
mov
fstps
mov
mov
int3
pop
roll
sub
call
bound
jns
frstor
xchg
pop
xchg
lret
aas
out
movsb
xor
jne
ret
mov
cmp
jb
fcmovnu
aas
cld
xchg
arpl
push
or
arpl
and
aaa
mov
and
xor
lods
movsb
jae
repz
inc
mov
ror
aaa
pushf
push
cwtl
jbe
cmp
jo
mov
mov
aad
pop
leave
dec
mov
out
fwait
rorb
sbb
pop
shlb
jecxz
popa
gs
sub
dec
data16
push
add
xor
leave
push
add
jb
push
pop
dec
lods
iret
mov
enter
jae
jl
mov
dec
sub
pop
loopne
push
inc
pop
lret
cmpb
aaa
out
sub
subb
mov
sbb
test
push
frstor
mov
push
test
mov
sbb
insl
mov
pop
fists
fcomi
inc
push
jb
mov
out
fstp
fiaddl
add
sbb
push
pop
xlat
and
inc
sub
sahf
imul
insl
outsl
jne
or
cli
imul
idivl
jnp
aaa
push
testb
xchg
mov
jno
mov
adc
mov
sahf
xchg
test
pusha
mov
negb
add
cmp
inc
sbbb
mov
lods
in
nop
mov
lds
jge
jmp
pushf
xchg
or
hlt
es
lret
cmc
inc
fstps
or
lret
push
cli
xchg
adc
pop
dec
inc
outsb
shlb
pop
test
out
inc
push
sahf
scas
sbb
xlat
adc
lea
mov
test
jecxz
into
mov
jg
adc
int
push
xchg
xor
loop
cmp
mov
leave
ss
xorb
inc
sbb
in
push
push
cmp
inc
or
and
insb
xor
out
sbb
xor
inc
ret
jnp
jecxz
nop
loope
inc
inc
adc
mov
fldcw
jno
pop
jo
dec
push
xchg
rcr
add
jmp
pop
jle
inc
aas
stos
jge
in
and
lret
and
sub
mov
jge
add
mov
ja
repnz
cmpsb
subb
cmp
out
mov
aad
sub
add
fistpl
push
pop
mov
cmpsb
ds
loope
lds
jge
xor
xchg
dec
push
push
cltd
jne
in
cltd
sub
cs
mov
adc
inc
aad
pop
mov
or
shll
push
repz
test
iret
pop
ret
jmp
imul
add
mov
out
and
test
or
pop
stos
scas
sbb
cmp
inc
shrb
xor
lds
or
loop
push
rcrb
lods
int
scas
fdivs
mov
add
cvtpi2ps
lret
inc
insb
popa
lds
lahf
in
leave
push
insl
lock
pop
cmc
push
scas
or
jno
cmpsl
out
ja
or
fimull
jmp
insb
adc
push
loopne
icebp
mov
ljmp
adc
faddl
jecxz
xor
cmp
push
push
cltd
pusha
mov
shl
lret
sbb
ljmp
mov
fcompl
mov
pop
inc
call
inc
or
cmpsb
xchg
jnp
mov
lret
inc
scas
jno
lcall
out
fs
subl
mov
setp
ds
int
or
adc
mov
dec
fsubl
les
into
into
push
mov
int
movsb
aas
or
inc
or
push
sub
push
jg
adc
dec
das
adc
xchg
mov
and
ret
inc
add
xchg
mov
test
sbbb
cmp
adc
sub
divl
loop
ds
arpl
sbb
or
xor
ret
lods
ficoms
and
push
xor
jl
cli
push
mov
movsl
aas
cld
popa
pop
sub
cmp
sub
scas
pop
inc
pop
or
ja
cwtl
out
pop
mov
cmp
add
jmp
shrb
and
or
inc
mov
jbe
push
loope
in
mov
mov
push
jns
iret
jp
mov
push
lahf
or
ss
inc
mov
mov
icebp
shl
mov
or
js
cmpl
mov
test
pop
push
ljmp
mov
ret
mov
jmp
mov
mov
dec
xor
push
jno
jnp
js
xchg
fcmovu
shlb
ss
icebp
push
daa
xchg
nop
aaa
sub
aam
jl
les
andps
jg
mov
jecxz
inc
add
push
mov
push
or
dec
cmp
mov
lcall
sub
inc
sbb
mov
lret
mov
cmpb
in
jnp
sahf
sbb
sbb
sti
fcmovnb
xlat
cmp
movsl
jg
roll
mov
adc
test
adc
outsl
test
mov
inc
insb
cmp
pusha
es
fwait
pop
add
sbb
push
cs
add
cmp
das
adc
imul
add
pop
rolb
push
or
xor
ret
fistps
out
mov
push
je
jge
cmp
cmc
pop
jno
imul
pusha
rclb
pop
testl
mov
xor
and
add
in
push
mov
fstpt
movsb
add
adc
inc
in
mov
adc
or
popa
lret
or
add
pop
ja
fidivs
rol
and
pop
sbb
sbb
mov
inc
mov
lcall
fsubrp
loop
cmp
out
repnz
push
popa
mov
subb
pavgw
mov
pusha
and
and
jns
pop
push
push
xor
jno
loopne
adc
dec
int
mov
xlat
add
pusha
es
testl
xchg
mov
mov
psrad
fwait
push
pushf
jns
sub
es
push
sahf
add
push
shlb
shrb
mov
adc
stos
or
pop
inc
sbbb
jae
pop
inc
aaa
or
aaa
or
imul
std
xchg
adc
fcoml
xchg
scas
jp
cmp
fwait
mov
pop
ret
rolb
pop
mov
fisttpll
fs
jno
dec
sbb
in
jnp
push
iret
ret
cmp
mov
shlb
js
mov
adc
add
xor
xchg
lds
jo
test
jle
pop
into
adc
sbb
call
lret
pop
cwtl
jae
test
mov
out
loop
inc
adc
xorb
mov
cmp
in
leave
lret
test
push
call
shlb
xor
and
icebp
push
mov
cmpsl
adc
jl
popf
aaa
or
jge
out
push
sub
ret
mov
ret
sbb
stc
inc
fnsave
aam
add
inc
rorb
jmp
ljmp
movsb
lods
mov
xorb
leave
dec
negb
jmp
inc
mov
pop
sbb
bound
push
xor
jge
inc
inc
jne
pop
ds
or
xor
arpl
mov
push
arpl
call
mov
ljmp
push
xor
inc
ja
outsl
repnz
jo
fcompl
cwtl
inc
in
xor
jns
mov
mov
or
lcall
xchg
fwait
dec
frstor
xor
jle
xchg
pop
jp
rcr
sub
pop
or
sbb
sub
push
jge
sub
xchg
inc
adc
lahf
jnp
jae
mov
es
push
cmc
xchg
add
mov
ds
xchg
xchg
pop
push
mov
pushf
movsb
jecxz
push
arpl
lock
sub
stc
mov
mov
mov
fcomp
push
mov
add
jecxz
mov
pusha
into
jecxz
cmp
arpl
shrl
xchg
jp
insl
mov
jnp
stos
cltd
popf
or
add
inc
addr16
mov
push
cld
aam
and
mov
shll
cmp
dec
inc
inc
dec
sbb
dec
sub
mov
push
mov
dec
mov
lock
pop
mov
jmp
pop
nop
adc
loope
test
ljmp
js
loope
jl
in
push
bound
incl
fwait
dec
xor
or
cmp
sub
add
xchg
je
push
addr16
data16
push
in
insl
mov
ja
dec
adc
sbb
insl
xor
or
xbegin
lods
add
fs
lods
fistpl
repz
jg
cmp
popf
push
cmp
fstpt
movsl
popa
pop
test
rol
lods
jb
bound
pop
shl
outsl
stos
mov
mov
add
mov
mov
les
pop
mov
imul
scas
pcmpgtw
sbb
adc
call
xchg
arpl
inc
pop
mov
movsl
mov
leave
insb
pop
jecxz
push
shl
dec
push
jg
pop
das
inc
dec
jl
push
xlat
dec
call
repnz
pop
fmuls
and
lods
lret
rol
xchg
and
in
mov
movb
pop
jo
rorb
mov
or
dec
jo
add
gs
lock
fst
push
pop
inc
and
mov
dec
jo
das
shr
lods
or
pusha
xchg
cmp
orb
or
dec
adc
jo
jne
xchg
xor
imul
loope
incl
xchg
cs
ljmp
mov
pop
sub
gs
outsb
sub
and
das
jno
test
cmp
push
add
into
inc
add
mov
aad
inc
mov
mov
cmpsl
or
inc
clc
movsl
dec
push
push
int3
add
dec
adc
shl
gs
jo
dec
push
nop
jp
add
mov
add
scas
dec
movl
aaa
repnz
cmpsb
dec
jo
mov
enter
mov
and
paddsb
dec
push
pop
sub
popf
and
test
ja
push
dec
dec
scas
pop
arpl
dec
mov
pushw
pop
mov
xor
aaa
dec
mov
pushf
inc
lods
dec
push
pop
fsubrl
push
push
int
xchg
out
push
sub
dec
pop
mov
lcall
lds
xor
sub
es
and
mov
inc
xchg
ret
repz
mov
stos
dec
mov
add
dec
push
mov
dec
insl
jbe
out
js
and
and
push
cmp
outsb
cmpb
xchg
popf
add
jo
jge
in
in
jb
hlt
stc
sub
jb
sarb
popf
push
test
adc
mov
dec
ret
xorb
scas
push
jmp
ja
adc
mov
sub
ret
push
pop
push
mov
fstpt
push
mov
or
gs
pop
stos
out
std
inc
mov
subl
movsb
inc
xor
adc
pop
cmp
mov
data16
push
dec
dec
dec
test
push
xor
daa
js
ja
and
inc
out
pushf
mov
lea
ret
repz
pusha
fidivrl
aad
movb
popf
sub
mov
in
mov
sahf
and
mov
shlb
fsubs
div
dec
je
cmp
or
dec
xlat
mov
pop
loopne
cwtl
dec
int
sbb
lods
adc
mov
push
popf
js
mov
jle
push
sub
push
daa
cwtl
scas
push
push
xchg
lret
push
cltd
jmp
and
popa
or
cmp
jb
ret
xchg
lods
mov
sub
xchg
sbb
sub
dec
xor
mov
ret
int3
fwait
push
movsl
ror
imul
sub
call
push
mov
and
in
sahf
fisubrs
in
and
pusha
out
in
lahf
insb
in
int
inc
in
sub
jl
xor
xor
mov
jl
bound
sub
push
xchg
sbb
mov
int3
notl
cmpsb
mov
mov
ljmp
lods
cmpl
pop
push
pop
sti
sbb
adc
xor
push
cmpsb
push
int
mov
pop
out
mov
adc
mov
pop
mov
pop
repnz
mov
jne
and
lret
lds
xchg
xor
dec
pop
ret
test
add
imul
pusha
sub
mov
push
jno
ja
cmc
dec
into
push
out
cli
loopne
xorl
or
jle
xor
mov
xchg
mov
push
dec
mov
xchg
repz
fs
aad
dec
mov
pop
call
sub
daa
mov
pop
aas
xchg
adc
xchg
nop
test
int3
aaa
pusha
fisttpl
int
xor
or
pop
adc
mov
insl
jne
flds
fwait
cwtl
js
adc
fstpl
rol
push
mov
ljmp
adc
add
add
mov
subl
repz
cmpsb
in
push
subl
push
gs
mov
rorb
outsl
in
push
inc
in
add
push
mov
push
pop
imul
push
xlat
lods
aas
in
and
or
fcompl
shlb
ljmp
lock
lods
mov
push
hlt
mov
push
incb
pop
add
dec
subb
mov
outsl
jmpw
add
inc
movsl
test
sbb
push
out
aaa
shl
das
sub
sbb
aaa
dec
or
sub
ret
adc
pop
scas
mov
stos
dec
pop
divl
add
pop
andl
cmpsb
repnz
or
push
dec
mov
mov
xchg
stos
insb
add
loopne
imul
xlat
pushf
popa
jg
or
ret
mov
cltd
ljmp
push
add
inc
iret
sar
xchg
adc
jno
adc
fsts
add
aas
jmp
add
popa
rclb
pop
mov
bound
aaa
xor
out
cwtl
fbstp
ja
fsubp
sbb
cld
aaa
ja
xchg
loopne
jp
sub
jecxz
push
xor
or
and
jnp
shrb
jns
fsubrs
add
pop
ljmp
pop
pop
or
loope
mov
and
adc
mov
lahf
std
push
shl
aaa
out
fs
sub
pushf
int
gs
fmul
shrl
mov
mov
rorb
sub
xchg
sbb
mov
jg
sahf
mov
inc
xchg
das
mov
in
add
mov
in
xchg
xor
pop
repnz
fsubl
adc
lret
je
fs
xor
loope
or
mov
ss
inc
sub
in
scas
xchg
sbb
outsb
pop
cmp
movsw
jp
cmp
jnp
or
push
dec
fisubrl
andl
lds
push
icebp
inc
pushf
int3
data16
test
xchg
xor
cld
inc
int
cmpsl
xchg
inc
adcl
dec
fstpt
push
iret
sbb
out
lods
adc
cmp
and
or
or
loope
cltd
pop
mov
adc
cmp
xor
test
mov
xchg
mov
lods
cmc
notb
dec
ds
lcall
add
inc
outsl
imul
pop
in
dec
loopne
mov
shr
sub
jns
loope
lahf
or
ds
ljmp
or
sub
pop
fwait
in
lcall
scas
pop
pop
pushf
add
jbe
and
xchg
pop
xchg
dec
xor
and
daa
mov
pop
mov
add
insl
sbb
lea
sbb
scas
xlat
fistps
into
push
inc
pop
cmc
dec
or
xor
mov
adc
xor
outsb
mov
dec
push
gs
sbbb
dec
jmp
int3
jge
or
push
dec
jmp
test
jge
repz
xchg
sbb
mov
and
mov
sbb
mov
inc
stc
cltd
xchg
jb
int3
or
mov
jbe
sub
fwait
ljmp
int
outsb
mov
sar
inc
ljmp
fld
int
add
pop
or
adc
out
imul
fnstenv
andl
sbb
cmp
cmpsl
sub
loopne
das
jge
hlt
pushf
nop
pusha
dec
movsl
loop
add
dec
jno
sub
into
add
inc
xchg
lret
and
clc
popa
fistpl
jl
imul
jp
sti
push
ret
jb
shrl
push
or
out
fsts
stos
mov
in
add
sub
stos
sbb
test
aad
jne
adc
imul
pop
adc
pop
inc
es
push
jbe
cmp
or
rcll
dec
push
cwtl
mov
xchg
outsb
rol
and
test
shlb
push
push
fldcw
or
lock
sbb
or
cwtl
pop
jge
sahf
fiadds
loopne
dec
jns
mov
gs
arpl
pop
shl
xor
mov
in
aaa
adc
int
mov
lret
mov
mov
push
jg
testb
cwtl
mov
cmp
lods
mov
and
aad
push
flds
lods
and
stc
fisubrs
mov
dec
pop
inc
push
pop
aas
imul
in
lds
daa
shlb
xor
in
push
jae
push
xor
call
mov
sti
jmp
cli
clc
sbb
insb
xchg
jbe
push
movsl
js
or
fs
lds
cwtl
dec
sub
mov
sub
add
mov
jle
mov
mov
mov
cmp
sar
push
and
sti
mov
sbb
stc
push
jns
push
sarl
inc
lahf
xchg
js
mov
outsl
jmp
cmpsl
in
add
repz
mov
int
jne
movsb
sbb
in
dec
sti
rcll
push
add
inc
mov
mov
jmp
xor
addb
or
test
fsubl
fsubrp
mov
push
lcall
adc
or
sub
mov
push
lea
das
fs
jo
rcr
in
mov
stos
sti
adc
dec
js
jb
sub
mov
aad
fmuls
and
rcrl
xrelease
pop
jno
pop
sub
sub
arpl
lret
mull
addr16
push
xchg
cmp
jge
movsb
cmpsb
dec
pusha
iret
mov
icebp
sbb
xchg
adc
cmp
or
xchg
imul
push
aas
outsb
repz
lock
and
idivb
push
xchg
cld
out
pusha
adc
aas
adcl
divb
movsl
sahf
lods
std
push
les
cli
jno
mov
pusha
in
call
std
test
sub
add
add
and
stc
jnp
hlt
jno
dec
jle
add
cwtl
mov
push
add
xchg
imul
pop
add
pop
sub
sub
leave
shll
fdivrs
sbb
dec
nop
mov
sub
rcrl
popa
add
popa
or
xchg
cmc
lcall
int
ficompl
ljmp
fadds
out
mov
push
cmp
imul
pop
ljmp
or
jns
jecxz
add
rclb
ja
inc
incb
xlat
leave
mov
xor
bound
pop
jecxz
fildl
and
jne
out
pop
dec
jae
push
xchg
cmp
rcrb
rcrb
mov
fbld
sbb
pop
cmp
imul
ds
movsl
mov
out
push
test
jmp
dec
imul
dec
adc
mov
and
dec
xlat
mov
lods
in
insl
jmp
adc
rcll
int
out
dec
lods
sub
push
lods
aam
mov
pop
lds
dec
and
repnz
nop
push
pop
ret
aaa
test
rorl
xchg
inc
movsl
xor
xchg
xor
out
pop
out
in
mov
xorb
add
jns
inc
dec
ret
sbb
cli
mov
push
orl
loopne
cmp
cmp
mov
jno
push
inc
push
add
jns
insb
out
movsl
sub
leave
inc
jp
es
jns
insb
incb
mov
mov
pop
pop
inc
fidivrl
xchg
or
mov
push
cmp
push
dec
jmp
mov
push
xor
repz
mov
outsb
cmp
dec
aas
add
iret
fwait
and
jne
adc
repz
sub
in
jno
cmpsl
sub
notb
sahf
test
or
sahf
test
fistpl
adc
lcall
lods
das
adc
inc
je
gs
add
pushf
fstps
and
mov
sbb
dec
mov
xchg
cmpsl
jns
dec
mov
jns
mov
pop
jns
or
and
sub
or
lea
push
cmp
and
js
leave
adc
cmp
mov
jnp
out
das
jae
stos
inc
lods
repz
xorl
push
lahf
gs
add
cmp
testl
in
cmp
sti
add
mov
mov
loope
fsubrs
xchg
lcall
sbb
mov
fwait
add
pop
or
sub
dec
outsl
cmc
aad
out
out
mov
xchg
shl
lds
mov
jmp
pop
ret
shl
scas
pop
pusha
jecxz
mov
outsl
out
mov
test
sahf
xor
or
clc
sub
rcll
and
mov
jno
adc
or
pop
pop
jns
lea
je
btrl
xchg
mov
push
inc
repz
jecxz
push
jp
out
mov
stos
js
out
add
inc
adc
popa
mov
xorl
popf
push
mov
or
xor
rorl
xor
sbb
or
lock
cwtl
pop
mov
adc
test
decb
xchg
das
lock
sub
xchg
dec
ja
jbe
out
mov
std
fistpll
sub
pop
cli
hlt
lret
or
pop
outsl
mov
cmpsl
fdivr
pop
mov
in
pop
mov
xchg
push
mov
adc
je
ss
dec
iret
repz
std
shl
add
sti
out
ret
call
sub
daa
mov
mov
add
sahf
enter
adc
cmp
mov
jge
cmp
shrb
scas
mov
mov
xchg
aam
inc
jl
xorb
push
mov
xchg
pop
jle
stos
push
ret
cld
es
push
dec
testl
mov
mov
mov
sub
std
fs
je
in
inc
jecxz
popf
jmp
out
loope
push
inc
es
push
imul
fcmovne
fsubrs
rclb
dec
jae
ljmp
pop
fmull
push
push
or
mov
sbb
popa
out
push
insl
inc
and
pusha
ljmp
imul
test
sbb
mov
fwait
in
imull
mov
rcrb
mov
cli
lahf
cmpsl
push
pop
inc
jo
ret
pop
inc
mov
aad
out
inc
sub
sbb
push
rclb
adc
rcpps
test
push
inc
push
stc
stc
pop
outsb
jnp
dec
into
les
mov
jns
adc
addr16
mov
aam
push
sahf
mov
mov
push
jae
outsl
mov
xchg
and
cmp
addr16
sub
aad
ja
adc
stos
loope
adc
scas
scas
mov
push
add
inc
ds
push
movsb
push
enter
movsl
xor
dec
sbb
mov
pop
pop
cmp
jns
pop
push
ret
mov
test
inc
dec
cmp
dec
xchg
pop
and
mov
out
fwait
dec
subb
test
sub
cli
jmp
and
pop
fidivrl
mov
cmp
jmp
xchg
cltd
push
and
push
lcall
sbb
aas
add
mov
push
fptan
movsb
jg
sbb
or
pop
jl
out
xchg
rorb
ds
push
scas
cwtl
pop
outsb
fstl
and
enter
insl
xchg
adc
dec
dec
sbb
jns
push
lret
test
mov
test
push
mov
les
cmp
mov
stos
cmc
jb
lahf
xchg
pusha
and
adc
movsl
clc
mov
adcb
or
cmp
dec
shll
xorb
or
dec
mov
mov
lods
popf
mov
mov
push
dec
fsubs
cmpsb
mov
or
sbb
pop
sub
call
lea
insl
decb
inc
outsb
cltd
pop
mov
cmp
loop
sbb
xchg
mov
pop
rcrb
iret
js
jge
cmp
jg
sbb
movsb
mov
dec
outsb
adc
leave
in
jp
cmp
xchg
in
scas
adc
int3
and
mov
adc
adc
mov
aam
daa
pushf
xor
jnp
sbb
cld
cltd
mov
into
sbb
push
push
nop
in
cwtl
into
imul
cmp
imul
outsb
fildll
xor
in
sbb
sti
push
sbb
aad
in
test
clc
repz
and
adc
pop
cmp
cltd
ljmp
mov
std
addl
add
jp
les
jb
mov
fdivrp
sbb
insl
addr16
movsb
add
push
out
mov
loop
nop
bnd
into
jge
cmp
mov
mov
insb
xchg
and
or
mov
shl
adc
gs
jae
pushf
push
pop
mov
mov
add
ja
mov
cmp
mul
cmp
int
insl
insb
mov
aaa
adc
scas
dec
sub
lea
lret
mov
dec
stos
sti
addr16
cs
add
adc
add
imul
cmpsl
aam
xchg
push
xchg
lahf
inc
leave
sub
stos
cltd
aas
loopne
xor
ffree
cmp
loop
push
adc
add
cltd
xor
cs
jle
push
xor
pop
jmp
sahf
iret
mov
fcoms
sub
jne
repnz
sbb
into
and
int3
lods
dec
rcrb
in
push
iret
push
rep
or
call
pop
mov
or
aad
sbb
sub
sbb
lds
imul
xchg
xor
sub
jno
idivl
xor
cmpsb
add
inc
imul
mov
pop
xor
dec
dec
cmp
pop
pop
inc
pusha
ja
or
pop
inc
xor
lods
cltd
mov
frstor
push
in
add
pop
sub
sti
popa
sub
insl
nop
out
xchg
nop
lods
mov
notb
or
repnz
cwtl
cmp
and
addl
enter
cmp
dec
outsb
push
adcb
mov
or
mov
mov
cmp
xchg
loopne
sub
mov
cltd
xchg
and
paddsw
xor
cltd
or
out
and
mov
jle
or
jne
xlat
add
mov
imul
sub
or
dec
inc
jl
xor
ljmp
inc
xchg
sar
repz
xchg
pop
es
push
mov
stc
mul
lcall
call
stc
inc
sbb
adc
sub
sub
in
stos
pop
outsb
xor
ja
or
dec
ljmp
sub
rcrl
fnstenv
outsl
xchg
push
xchg
sbb
sub
pop
out
cmp
fildll
dec
xor
push
jb
iret
fwait
pop
adc
test
sbbb
jecxz
xor
xor
xor
das
aaa
in
je
cmc
dec
dec
xchg
push
pop
mov
hlt
jno
pushf
rolb
pushf
jbe
out
sbb
mov
and
addr16
aaa
jge
sbbb
in
notb
cltd
test
mov
je
es
adcb
bound
scas
ds
and
xor
dec
in
push
imul
mov
lcall
jge
cmp
cmp
push
int
xchg
lea
xorl
ss
das
mov
jne
popa
rorb
adc
pop
pop
incb
popl
or
mov
push
xchg
mov
adcl
cmp
cmpsl
mulb
push
sub
jb
jecxz
mov
xchg
fdivrl
es
lds
cmc
aaa
push
mov
push
jge
pop
pop
push
hlt
sub
fisttpl
ret
je
inc
pop
push
xchg
xchg
sub
mov
mov
aas
fbld
ljmp
xchg
ss
pop
repnz
mov
rclb
jno
lock
xchg
jp
int3
add
xor
dec
pushf
cmpsb
sbb
cltd
aam
stc
add
jne
push
data16
movb
mov
inc
push
stos
ret
enter
push
clc
mov
sub
lods
pop
sub
int
adc
movl
scas
push
inc
out
outsb
js
addr16
sub
add
fstl
jno
add
js
cmp
adcb
inc
pop
lcall
sbb
xor
sbb
sbb
movsl
mov
pop
xor
nop
and
outsb
sub
jmp
lock
mov
lods
jle
fs
xchg
inc
jmp
scas
mov
jne
mov
sbb
mov
sub
jne
dec
sub
stos
leave
pop
add
or
int3
dec
dec
pop
fs
lcall
lock
dec
jp
jnp
dec
xchg
push
cltd
pop
lds
jp
scas
mov
sti
and
cli
sbb
loop
fcomip
and
aas
into
jmp
pop
negb
lea
xor
inc
inc
ds
add
or
xchg
mov
sbb
imul
xchg
call
es
push
dec
out
cltd
sbb
mov
popf
xchg
popl
jmp
xchg
andl
ss
add
and
push
aam
imul
lea
mov
call
pop
jl
add
adc
xchg
inc
push
dec
push
scas
pusha
cmc
pusha
jns
mov
movsl
pop
and
xchg
mov
mulb
lds
push
sbb
fxch
jnp
jmp
jnp
fcomps
lock
mov
jne
and
lret
je
inc
repz
adc
repz
cwtl
and
mov
in
jmp
xor
nop
mov
adc
jno
aas
sbb
outsb
movsl
fistpll
inc
inc
adc
and
ficomps
pop
out
xor
clc
add
ret
adc
push
mov
xchg
sub
fldenv
movsl
call
fs
dec
daa
sub
into
sub
or
mov
je
inc
mov
pop
push
jmp
mov
xor
mull
shl
aas
in
in
ret
sti
push
scas
dec
lock
xchg
repz
pop
xchg
xor
and
lcall
aas
cltd
adc
lea
dec
je
fisttpl
cs
fsubrl
jecxz
xchg
rorb
push
mov
popf
out
iret
and
rolb
loope
jns
mov
sarb
fidivrs
int3
fwait
divb
insb
orb
xchg
dec
cld
rcll
loop
arpl
aaa
dec
mov
out
fnsave
lret
icebp
jo
aaa
xchg
sub
xchg
inc
repnz
leave
ret
sub
dec
rcrb
jne
jp
popf
adc
mov
jae
sbb
sahf
stc
jle
sub
bound
or
shlb
test
ret
shl
pop
aas
cmc
daa
dec
inc
cld
insl
cmp
push
jle
aaa
mov
pop
lea
add
loope
or
loopne
andl
inc
jge
mov
call
pop
insb
jo
and
aaa
fcmovb
stos
mov
mov
out
scas
shll
sub
xchg
lods
pushf
es
push
sbb
xchg
in
pusha
cld
mov
cmp
out
frstor
les
int
adc
fwait
xor
arpl
in
push
mov
js
jo
pop
aam
cwtl
fnstenv
jnp
repnz
out
out
fs
xchg
sbb
xor
sub
pusha
inc
inc
push
pop
push
hlt
jo
sbb
data16
cs
sbb
divl
pop
xor
std
push
das
out
sub
mov
enter
ss
push
pop
adcl
adc
xor
es
cltd
xchg
adc
xor
je
call
nop
loope
mov
aad
dec
test
clc
or
jmp
mov
inc
xchg
jo
out
pop
cmp
enterw
icebp
out
xchg
loope
pop
inc
inc
mov
push
xchg
leave
pushf
adc
push
xor
dec
xchg
mov
dec
iret
loopne
mov
push
shlb
into
cli
cmp
xchg
jo
push
movsl
xchg
dec
xchg
xorb
push
lods
cli
xchg
fnsave
imul
or
sbb
pusha
aas
test
pop
lods
jae
add
iret
in
inc
adc
and
fldl
jo
es
mov
and
into
mov
stos
arpl
dec
stos
lods
mov
stos
stos
fsubrs
pop
or
movsl
push
aas
cmpsb
enter
andl
push
fistpl
div
or
adc
sti
in
sbb
lds
rcrl
add
lret
push
and
jge
cmp
mov
int
xor
pop
test
hlt
pop
jmp
cs
fimuls
inc
jmp
shrl
mov
inc
mov
out
add
mov
push
inc
das
add
iret
sbb
sub
ficoml
movsb
mov
cs
sbb
out
std
test
lods
imul
leave
imul
jmp
cli
push
shll
sbb
movsb
mov
adc
repnz
cmpsb
jle
pop
popf
shl
sbbb
add
ljmp
jae
pop
jns
and
fdivl
out
mov
mov
inc
and
cmp
cs
subl
adc
jle
shl
xchg
gs
push
jb
movsl
xlat
loope
popa
outsb
decl
jns
outsl
jnp
enter
arpl
add
jecxz
jbe
add
xchg
inc
and
pop
pop
les
mov
lret
mov
or
sub
xor
fwait
test
and
ret
jge
pop
ss
dec
add
sbb
cmp
mov
ret
lret
std
fadds
movsb
cs
pusha
je
dec
ja
aam
out
in
fiaddl
push
pop
out
inc
and
lock
stc
cmp
and
fiadds
fxch
mov
fidivrl
ficomps
aaa
cmp
lea
nop
rorb
mov
mov
mov
mov
push
pop
inc
pusha
sub
jae
fistpl
lret
fnstsw
fistps
daa
xor
xor
mov
inc
mov
sbb
ret
xchg
mov
repnz
fwait
pop
jne
movsl
mov
jmp
pop
or
es
pop
sbb
cmp
jl
xor
lret
push
movsb
adc
pop
inc
mov
decb
ficoms
mov
pop
popf
and
loopne
xchg
mov
pusha
push
mov
in
push
mov
xor
adc
xchg
sbb
out
ret
push
popf
mov
add
movsb
xchg
mov
gs
mov
aas
movsb
or
pop
cmp
pop
adc
test
xlat
add
cli
mov
lds
push
mov
mov
and
jmp
test
jno
pop
das
clc
ret
and
xchg
cltd
lahf
sbb
iret
cmpsb
fs
pop
xchg
sub
jmp
out
inc
lock
fsubrs
cld
insb
fists
push
pop
pusha
rcl
or
jo
std
icebp
outsb
dec
add
orl
xchg
mov
cmpl
jp
loopne
in
inc
hlt
sti
pop
mov
movsb
mov
mov
push
xor
icebp
cli
clc
ret
out
xchg
scas
jae
push
mov
out
lods
pushf
xor
nop
add
cld
add
mull
int
inc
leave
insl
pop
mov
add
cmp
decb
es
jne
hlt
ja
xor
or
cmp
inc
movsl
aam
add
sbb
xchg
pop
mov
shrl
xchg
jge
mov
mov
test
out
cmp
cmc
ss
mov
jnp
loope
aas
sbb
mov
repz
dec
sbb
enter
fwait
idivl
push
push
sbbb
ja
pop
mov
jle
enter
xor
xor
mov
popf
mov
jge
pop
inc
notl
imul
loope
shrl
adc
dec
enter
inc
jns
aaa
es
inc
and
lahf
fwait
adc
adc
cmp
fidivrl
jne
inc
mov
ret
add
add
ds
and
daa
xchg
ficomps
mov
andl
fisttpll
sbb
sahf
rcl
xchg
sbb
cs
xchg
test
orl
adc
cwtl
aas
mov
jle
loop
dec
mov
loop
mov
ljmp
sub
xchg
enter
fisubrs
rclb
dec
push
lret
inc
repnz
cld
xchg
xor
out
sti
fs
es
inc
sub
and
sahf
fstpl
sahf
mov
lods
cmpsb
bound
adc
shld
pop
test
mov
jge
sbb
push
sbb
scas
xchg
add
sbb
cmc
mov
repnz
add
push
sub
push
lea
mov
cmc
push
cmp
mov
repz
mov
xchg
inc
lcall
mov
push
add
loop
test
push
aad
mov
frstor
jb
leave
in
clc
sub
notb
inc
mov
lret
or
jg
repnz
test
mov
push
lcall
test
fnsave
mov
xchg
xor
or
xchg
jp
jge
and
xor
xor
fs
movsb
or
adcb
pushf
mov
pop
js
aaa
mov
pushf
jmp
cmpsb
xchg
adcb
fldenv
into
jb
icebp
sub
test
xor
jo
mov
mov
jne
js
add
stos
sub
int
adc
jbe
out
sbb
sbb
fstp
cmpsb
pop
popf
js
push
insl
movsl
sbb
dec
mov
rcrb
add
mov
sub
xchg
xor
xchg
and
jne
fiadds
out
add
mov
aad
in
call
loope
xorl
or
sub
jns
mov
mov
bnd
or
fwait
or
pop
mov
adc
dec
stc
incl
push
bound
scas
inc
jmp
and
stos
sbb
ss
xor
cmpsl
ljmp
loopne
xchg
addl
sahf
popa
outsl
lods
es
fistl
ret
loopne
sahf
xor
mov
jns
ja
sbb
and
mulb
dec
dec
add
incb
mov
mov
gs
cmpsb
mov
out
fisttpl
aad
leave
call
dec
fwait
lcall
ffreep
jle
ret
cmp
jmp
cmp
xlat
pop
xchg
fwait
lods
loopne
push
out
sbb
ljmp
cld
xchg
fdivrs
aas
in
jge
sbbb
ss
jl
scas
mov
pop
insl
lods
insl
ja
xor
movsl
jmp
outsl
cmpsl
or
addr16
cmpsl
push
adc
xchg
dec
cli
push
mov
lret
mov
popa
adc
outsb
xor
mov
mov
push
inc
cmp
adc
mov
pop
ja
fisubrl
pushf
add
cmp
in
push
movsl
add
sti
xlat
and
arpl
jb
push
jl
push
cmp
dec
popf
clc
mov
or
mov
add
mov
jbe
mov
mov
fidivrs
dec
cmp
xor
xchg
ss
mov
and
lcall
test
or
rcrl
leave
sub
std
dec
push
jae
pushf
inc
popa
arpl
in
cld
aaa
inc
jle
shll
mov
mov
mov
mov
jo
outsl
int3
or
insl
add
sub
clc
adc
dec
int
out
mov
fisubl
jae
jmp
ja
andb
push
mov
std
lcall
jno
daa
test
dec
je
jb
in
push
cmp
pushw
outsl
xor
pop
call
and
insb
xchg
subb
adc
mov
insb
pop
ror
xchg
xor
iret
stc
idivb
and
inc
mov
outsl
cmp
cmp
push
jp
xchg
add
inc
dec
mov
sbb
and
sub
pop
xchg
popa
push
cmp
sub
daa
inc
movsl
daa
pop
mov
and
out
add
fstl
das
insb
pushf
bound
mov
lock
xchg
sub
loope
sub
mov
jl
mov
mov
sub
push
les
pusha
ret
fnstenv
inc
mov
xor
mov
bound
ficoml
std
out
xor
adc
mov
mov
pushf
sahf
push
cltd
in
mov
adc
mov
xorb
fstp
xor
jmp
imul
sub
xchg
jg
cmp
sub
adc
sub
outsb
out
inc
dec
xchg
pop
or
mov
movb
call
lock
scas
psllw
dec
adc
mov
gs
mov
adc
dec
inc
insb
inc
or
lahf
fwait
jl
xor
cld
mov
jae
lret
andb
push
ret
jb
add
or
adc
shlb
mov
pop
out
push
idivb
lret
pusha
sbb
dec
rcrl
or
scas
mov
ljmp
mov
dec
enter
and
push
es
mov
cmp
push
xor
and
cmp
scas
mov
xchg
enter
add
mov
fsubl
lret
push
pop
pop
addb
jnp
push
cwtl
inc
addr16
cmc
cmc
loop
dec
std
or
cmp
mov
es
xchg
sbb
xor
cli
sahf
gs
cld
fcmove
pop
sub
ja
mov
lea
sub
in
pop
mov
xchg
je
clc
or
adc
divl
imul
mov
dec
add
push
lods
rol
int3
jns
rorb
mov
sbb
or
and
imul
cmpsl
in
jg
push
mov
cmp
sbb
jae
jmp
rcll
ret
jmp
pop
sahf
lds
loop
imul
ret
dec
ret
sub
push
pop
pop
cld
sbb
jne
lahf
mov
cmp
mov
insb
xchg
loope
bound
xchg
mov
xchg
lahf
fcoms
xchg
pop
in
sub
dec
push
add
add
cmp
pop
jno
or
pop
pop
sbb
pop
mov
rcll
sbb
jbe
push
jae
out
movb
mov
test
in
stos
and
pusha
jae
into
lahf
pusha
test
and
cmc
dec
jae
xchg
jg
cwtl
movsl
pop
test
jne
shl
movsb
and
fstps
mov
leave
cmp
push
pop
lods
mov
xchg
sub
pop
les
pop
add
lcall
mov
push
lea
mov
push
imul
jno
test
clc
pop
xorb
faddp
push
aas
fiaddl
nop
inc
xchg
push
xchg
pushf
scas
and
jmp
and
es
push
sbb
fimuls
sbbb
decb
xchg
sub
mull
push
sub
cltd
and
add
std
cltd
imul
dec
mov
lcall
mov
adc
push
ret
dec
xor
fsubrs
dec
cld
dec
xchg
push
mov
mov
mov
dec
cmp
outsl
push
fdiv
in
fcoms
js
sahf
mov
aas
aaa
cwtl
jl
mov
dec
xorb
cmpl
pop
mov
mov
mov
scas
xor
fnsave
fists
insl
out
fwait
or
mov
rolb
dec
aad
sbb
icebp
stos
jmp
jo
fnstsw
int3
sarb
int3
add
xchg
clc
pusha
stos
add
sub
int
rolb
adc
imul
add
mov
dec
xchg
mov
lret
cmpsb
xchg
lds
mov
mov
push
jg
push
mov
enter
lret
mov
jae
fcoms
jns
sub
mov
jmp
jb,pn
inc
inc
outsb
jno
icebp
rol
jo
jp
insl
fst
mov
aad
std
ss
pop
sub
shlb
push
test
fsts
xchg
mov
mov
int3
xor
inc
add
data16
int3
and
jmp
inc
xchg
nop
sub
push
outsb
cmp
gs
pop
jge
pop
les
fistpll
pushf
cwtl
in
or
lock
inc
out
pop
or
xchg
inc
mov
cmpsb
jl
lret
sahf
jecxz
mov
inc
xchg
push
ds
push
fchs
sti
in
push
fimuls
pop
push
xor
or
sarb
addr16
jns
jno
mov
mov
sbb
jl
xchg
into
ret
dec
pop
jo
test
aad
cmp
stos
pop
lods
fcoms
loopne
adc
push
arpl
out
and
lcall
out
enter
lea
outsb
and
aaa
cmc
mov
out
add
popf
add
ret
pop
ja
and
lcall
cwtl
sahf
sub
mov
pop
outsl
adc
lea
loope
adc
scas
push
mov
in
sub
xchg
decb
mov
push
sub
and
or
jge
sbb
jmp
jecxz
and
out
test
lea
mov
push
xor
loope
cmp
sbb
mov
mov
loopne
cmc
mov
rolb
cmpsb
xorb
jge
sub
xchg
cmp
popa
stc
cld
push
pop
push
push
jno
mov
mov
mov
fists
mov
inc
inc
cmp
jo
lret
mov
push
lods
in
cld
xor
test
xchg
push
mov
lods
add
rclb
jo
cmp
push
cmc
test
scas
out
mov
jge
xor
addb
cmp
fsubrl
mov
mov
sbb
fdiv
mov
cmc
rorb
mov
leave
sub
xor
gs
adc
jo
enter
jae
dec
adc
gs
pop
sbb
xchg
rcl
xor
mov
mov
inc
es
loope
cli
cmc
pop
xchg
cltd
into
mov
jo
int
pop
fstpt
mov
pop
sbb
cmp
movsl
mov
das
jnp
jno
or
fldenv
lods
rorl
jne
ficoms
xchg
aam
js
into
jl
adc
inc
push
popl
push
push
jl
lret
leave
xchg
jmp
mov
and
int
push
jno
fisttps
sub
rclb
in
xor
mov
movsl
scas
mov
add
xor
daa
jl
jmp
sti
imul
lea
je
mov
testl
jno
mov
pop
push
mov
nop
dec
aam
rorb
inc
fwait
inc
das
popf
xchg
jo
fmulp
outsl
into
mov
out
imul
in
pop
sahf
mov
mov
jmp
pop
aam
xchg
sbb
addb
mov
mov
dec
dec
push
or
fldl
lret
sub
ja
sub
xor
add
pop
push
lea
lods
outsb
cmp
push
xor
mov
mov
leave
jge
pop
mov
sbb
ds
popf
lret
push
xchg
repnz
and
adc
lods
jo
mov
mov
insb
pop
xchg
xor
adc
pop
push
push
int
mov
pop
adc
inc
push
or
gs
enter
jge
loope
inc
and
ret
out
out
cli
cmp
xchg
cmpsb
in
bound
inc
push
into
xor
loopne
add
movsl
in
cmp
in
mov
dec
adc
cs
es
scas
inc
sti
lret
xor
in
lret
pop
fldcw
out
std
mov
lcall
mov
lret
sub
dec
mov
inc
sbb
mov
in
adc
xlat
adc
rorb
shll
loope
xchg
sahf
mov
inc
jecxz
repnz
fs
lock
jns
jmp
lret
repz
aam
push
fldcw
pop
clc
ja
imul
adc
sbb
clc
aad
cmp
lock
pushf
cmp
mov
mov
fisttps
push
bound
push
adc
push
push
xor
sbbb
lock
movsb
arpl
cmp
movsb
xor
fidivrl
sbb
repnz
shrb
add
addr16
or
in
ficoml
mov
dec
and
add
das
cs
sub
mov
cmpl
sub
add
imul
cs
push
into
mov
cmp
test
xchg
clc
jb
repnz
shr
lret
test
movsl
out
xor
popa
sbb
push
pop
lds
andl
test
jne
and
or
xor
test
jno
fnsave
sbb
aaa
in
fnstenv
orl
adcb
lds
dec
pushf
loopne
call
mov
fstpt
jae
fstp
push
dec
xchg
inc
jne
adc
xchg
inc
dec
xlat
ftst
in
fimuls
mov
movsb
inc
jo
dec
ljmp
repz
mov
out
pop
pop
mov
mov
sub
mov
mov
mov
mov
cmp
xorb
inc
sbb
aas
fisubl
insb
push
shl
jmp
add
xchg
inc
pushf
and
jno
cld
fst
call
outsw
fldz
sub
or
inc
dec
loop
icebp
push
cwtl
push
fiadds
sub
mov
push
cld
or
mov
icebp
insb
mov
test
dec
mov
pop
scas
repz
lock
scas
aam
adc
out
call
mov
lods
inc
iret
pop
out
inc
mov
cmp
mov
fcmovb
adc
call
lods
scas
popa
cmp
ret
jo
cld
call
mov
movsb
mov
ret
insb
jl
lods
push
cmpsb
mov
iret
into
and
pop
xlat
jle
je
inc
neg
fisubrs
cmp
inc
pop
out
enter
xor
xchg
or
mov
mov
loop
les
dec
stos
jmp
sub
push
push
xor
adc
and
outsb
cltd
imul
into
adc
nop
aaa
push
or
in
fwait
lahf
es
cmp
fldln2
jmp
arpl
mov
lds
shrl
inc
add
dec
jb
cmpsb
lret
pop
xlat
xchg
arpl
lret
lahf
add
cmp
pop
cmp
mov
xchg
push
xor
pop
xchg
add
popl
sahf
in
rol
out
xor
mov
sahf
jno
notb
shlb
bound
lret
cmc
mov
cs
out
or
ds
mov
jnp
outsb
xchg
icebp
dec
rorb
aas
shl
pusha
cltd
stos
out
cmpsb
fs
sbb
and
dec
lea
std
ja
scas
daa
lahf
pop
icebp
sub
stos
fmuls
subb
faddp
idivl
inc
popl
movsl
pushf
jmp
mov
and
mov
imul
insb
jmp
xchg
in
or
packsswb
jb
fwait
mov
lcall
scas
xchg
mov
lahf
or
xchg
or
push
xchg
cmp
adc
cli
sti
lcall
outsl
mov
add
xor
inc
fdivl
arpl
les
sub
test
ret
les
test
mov
push
fwait
push
push
fiaddl
push
cmp
jnp
negb
movsb
sbb
pop
push
loopne
sbb
cmc
xor
adc
lock
xchg
cwtl
and
and
or
fs
push
pop
jle
lret
dec
add
xchg
clc
bound
inc
cmp
repnz
mov
xor
rcrl
aad
jl
mov
mov
jg
mov
ret
and
sbb
out
push
sub
sahf
cli
loope
pop
iret
sbb
sti
sahf
mov
in
enter
outsl
xchg
add
pushf
lods
sbb
hlt
sbb
or
negb
ficoms
sbb
push
mov
pop
pop
dec
rcrl
push
pop
xor
movsl
push
mov
and
mov
or
push
nop
mov
add
ljmp
mov
mov
push
xchg
xor
jmp
or
adc
pop
test
jns
lcall
jbe
mov
cld
in
mov
test
jae
mov
les
jmp
sub
rolb
sbb
movsb
dec
sub
out
subl
insb
sbb
repz
into
aam
aam
int3
push
add
lahf
sub
add
and
fsubrl
mov
xchg
fidivrs
sub
loope
lock
movsb
push
inc
jae
push
inc
jbe
xor
lret
imul
or
dec
data16
les
dec
lcall
lea
xchg
mov
jl
push
mov
movsl
sub
mov
or
mov
cmp
cmc
pop
ret
stos
or
and
and
cmc
gs
lods
adc
sbb
jb
test
add
fidivl
jno
cmpsb
subb
jne
cwtl
insl
cwtl
push
jmp
ret
je
xor
int
xchg
pop
pushf
xchg
sahf
iret
ret
fcoml
adc
scas
lahf
dec
insb
add
repnz
in
inc
in
dec
xor
push
scas
add
gs
fiadds
xor
rorl
jle
inc
or
mov
pop
int
cmp
push
xchg
movsl
cmp
sbb
jmp
mov
xor
xchg
adc
mov
das
pop
push
mov
call
cltd
loope
cli
jbe
loopne
stos
jo
cld
scas
add
mov
adc
xchg
sbb
sbb
lods
inc
stc
fmuls
jmp
xchg
lods
mov
add
push
dec
out
int
and
add
jne
arpl
in
leave
or
sub
pop
mov
cmp
in
pop
mov
xchg
mov
mov
rcrb
in
pop
xchg
sti
pop
mov
jb
adc
xchg
rorb
mov
data16
cmp
lcall
dec
lods
cmp
pop
mov
push
xchg
fcom
adc
jb
lret
lea
inc
clc
xchg
inc
stc
rol
mov
mov
and
pop
or
jb
pop
rcrl
cmp
inc
fisubs
xor
cld
dec
in
orb
jnp
in
xchg
or
or
arpl
shrb
push
dec
or
loope
dec
outsl
adc
cmpl
jp
mov
xor
xor
nop
fadds
fimuls
mov
sbb
push
and
ja
mov
add
roll
mov
scas
pop
pusha
add
dec
lds
in
jl
lods
cwtl
jmp
sahf
lods
testb
mov
jb
fbstp
ss
cmp
int3
xor
in
dec
test
loopne
or
inc
flds
mov
and
dec
push
in
mov
jnp
out
shrl
test
sbb
lds
jmp
mov
cld
xlat
das
stc
or
pop
sbb
mov
lods
orl
scas
push
hlt
out
stos
enter
and
test
adc
cs
cmp
lahf
cs
leave
in
sbb
ss
js
data16
aaa
test
fisubrs
js
mov
les
test
arpl
and
imul
in
repz
dec
inc
mov
fcomps
xchg
daa
pop
push
out
and
in
fwait
dec
push
push
sbb
sub
rcll
imul
pop
mov
pop
out
ljmp
fadds
inc
arpl
repz
iret
push
mov
inc
and
fldl
sub
jo
sarl
xchg
lods
orb
ss
push
pusha
jmp
lea
inc
push
lret
lods
loop
in
insl
add
call
lret
xor
sahf
and
and
aam
xor
clc
hlt
mov
arpl
ja
test
cld
insl
fidivl
mov
mov
add
cmp
mov
inc
loop
xchg
ret
xchg
testl
test
imul
xor
cli
push
dec
cs
adc
data16
cs
push
push
mov
sbb
repnz
scas
adc
dec
sbb
test
lea
subl
xchg
mov
inc
loopne
enter
adc
add
pcmpeqw
xchg
inc
jb
mov
xchg
in
rolb
shrb
lahf
enter
lods
dec
test
mov
in
mov
jl
dec
bnd
and
xchg
testb
push
js
mov
fsub
rcll
mov
push
inc
loopne
mov
pop
push
ffree
jne
dec
gs
jne
and
mov
bound
js
pop
jno
pop
jno
out
inc
lret
mov
xor
jl
das
xor
ss
jnp
push
jns
pop
fimuls
cmpsb
dec
mov
mov
fbld
insl
std
add
jo
mov
xor
imulb
push
sbb
sub
mov
dec
adc
mov
mov
test
jmp
pop
call
mov
adc
repnz
gs
ficoms
shlb
push
repz
scas
sahf
jle
daa
and
add
pop
sub
aad
jle
pop
jl
jl
int3
into
mov
inc
mov
dec
cmc
sahf
inc
std
pop
pushf
popf
dec
push
imul
sub
int3
adc
sub
incl
test
mov
adc
and
push
ss
mov
xor
mov
jo
testb
mov
jp
or
cmc
shr
je
dec
clc
movsl
mov
je
repnz
pop
push
stos
and
xlat
mov
loop
leave
push
adc
pop
dec
in
scas
or
out
lock
shrb
fwait
loopne
arpl
jg
adc
dec
inc
int3
outsb
nop
fldcw
mov
add
add
jbe
dec
repz
sarl
sub
pop
pop
rcll
sbb
pop
jmp
mov
iret
hlt
pop
xor
push
jne
loop
arpl
dec
hlt
xchg
push
orl
or
sub
push
ret
mov
mov
ja
cmpsb
jmp
movsb
out
lods
in
pop
push
and
jne
in
repnz
push
cmpsb
sti
enter
mov
jnp
dec
sbb
mov
stos
popa
out
add
xor
loopne
lahf
in
loop
mov
orb
fnstsw
push
addr16
popa
inc
cmc
rorb
cmp
xchg
out
mov
jae
jg
rcrb
xor
dec
clc
and
daa
and
jo
loop
sbb
adc
pop
repz
inc
inc
xchg
mov
aad
pop
jae
ret
push
mov
or
push
cli
and
pop
lcall
fidivs
cmp
das
jecxz
lock
ds
fcmove
xchg
sbb
add
sub
and
xacquire
cwtl
jne
sub
push
imul
pop
dec
inc
sbb
cmp
dec
enter
lcall
push
add
outsl
push
je
and
sbb
sub
imul
sbb
cmpsb
xchg
mov
dec
add
lret
xorb
fmul
pop
jne
mov
call
push
mov
fstpl
stc
nop
or
stc
popf
shrb
dec
mov
pop
and
nop
mov
pushl
cmp
in
int
repnz
mov
sti
jno
pop
mov
jb
mov
das
mov
nopl
movsl
dec
mov
jae
scas
or
mov
cli
pop
enter
cmp
or
sbb
jae
push
mov
ficoml
push
mov
and
mov
adc
add
lods
fwait
or
leave
jle
push
mov
sub
int
shl
inc
sbb
ja
negl
mov
pop
pop
repz
mov
bound
dec
mov
in
mov
jp
push
sbb
sub
adc
into
fidivl
jecxz
stos
insb
rol
cs
push
push
adc
testl
pushf
jmp
sti
cmpsl
ret
insb
xor
mov
mov
fs
jno
jge
pop
lods
xchg
js
xor
fcoms
gs
push
mov
mov
sbb
insl
dec
mov
hlt
mov
fistps
add
push
je
mov
xor
cmc
stc
mov
push
loopne
or
bound
xchg
into
cmp
sarl
idivl
jle
xor
pop
xlat
and
call
sbb
push
sbb
pop
jecxz
mov
loope
xchg
push
fidivrs
aas
hlt
aam
dec
push
xchg
xor
enter
mov
mov
xor
or
push
mov
clc
stos
sbb
inc
pop
fimull
mov
dec
push
rolb
orl
cmp
aaa
push
sbb
lds
into
push
ljmp
cmp
imul
inc
adc
mov
inc
outsl
or
dec
int3
leave
stos
xor
jns
fsubrs
cmpsb
lret
jecxz
ret
add
inc
dec
sbb
fildll
es
pop
adc
dec
xchg
into
mov
adc
lods
pop
and
mov
mov
sbb
cmp
jns
lret
into
lret
das
adc
repz
push
dec
hlt
xchg
lods
adc
in
imul
inc
jno
push
add
add
sbb
sub
pop
and
jmp
rorb
aad
mov
fsubr
test
insb
lds
adcl
xchg
push
mov
negl
mov
push
jae
fisttps
popf
imul
cmp
xchg
incb
jnp
jp
inc
arpl
aaa
fdivp
rol
test
mov
cmpsb
popa
arpl
push
mov
mov
outsb
pop
adc
jmp
jae
xor
push
call
push
dec
arpl
lds
or
add
aam
je
aam
jae
add
adc
adc
push
mov
dec
cmp
mov
xor
xchg
clc
inc
mov
xor
cmp
fdivr
sub
push
adc
loopne
xor
mov
mov
xor
inc
jp
out
xchg
adc
mov
not
cs
cmp
sbb
cld
rorl
add
insl
enter
incl
fidivrl
aaa
inc
xor
xor
ja
in
sub
setnp
mov
pop
fistpll
addl
imul
cmp
jbe
dec
repnz
shl
mov
fucomp
enter
bound
dec
xor
mov
rcrb
rcl
cmp
push
dec
fdivl
ficomps
in
push
mov
mov
enter
xor
mov
icebp
maxps
sti
push
shlb
inc
jno
iret
cwtl
add
sti
and
fistps
mov
lea
stos
jno
adc
enter
pop
clc
sbb
stc
sbb
roll
stos
inc
mov
fimuls
in
push
sbb
and
jmp
push
cmp
rorl
push
add
push
sbb
jno
adc
or
das
mov
adc
xor
xchg
outsl
leave
xor
jecxz
mov
pop
adc
je
adc
subb
push
jecxz
push
leave
cmp
fwait
fs
stc
sub
push
mov
lock
jbe
test
add
xorb
add
mov
adc
lret
es
ret
shlb
mov
lcall
ret
mov
cs
aam
mov
jg
xchg
stos
sub
cltd
sbb
mov
cltd
jecxz
mov
popf
sbb
xchg
int3
aas
dec
inc
stos
cmp
push
aas
imul
imul
xchg
add
and
out
inc
ja
pushl
outsb
sbb
andb
outsb
push
lock
in
sub
out
cli
jae
ljmp
aaa
mov
loopne
outsb
dec
jmp
inc
mov
pop
imul
popf
add
pop
lcall
xchg
push
xchg
mov
xor
xchg
push
dec
adc
mov
xor
xchg
sub
into
xorl
lds
ja
ljmp
popa
xorb
dec
adc
jl
aad
insb
jg
and
je
and
in
pushf
mov
add
xlat
outsb
sub
jbe
data16
push
push
xor
and
xchg
jecxz
testl
inc
mov
sbb
or
push
adc
in
jbe
sbb
fwait
push
lcall
jb
add
aaa
dec
in
pop
inc
push
out
repz
inc
sub
inc
mov
push
mov
das
inc
insb
mov
adc
das
lods
and
xchg
negl
arpl
mov
rol
stos
jmp
adc
cmp
mov
cmc
outsb
loop
push
cmpb
cli
lods
lcall
xor
out
mov
movsl
xchg
movsb
pop
dec
addr16
and
xchg
shrb
pop
sub
push
mov
repnz
sbbl
out
dec
inc
jo
sti
dec
jno
sub
jg
arpl
push
fstpl
inc
inc
xchg
data16
sbb
leave
add
adc
xchg
sub
shrb
fwait
out
mov
jmp
sub
and
add
pop
cmpl
push
aaa
xchg
movsl
sub
jne
int
jle
jb
pop
decb
mov
fmull
push
adc
add
mov
test
and
dec
jnp
mov
cmp
xor
push
daa
mov
push
mov
out
cmp
pushf
mov
out
cli
push
mov
mov
or
pop
mov
ja
mov
mov
loop
jg
imul
sti
cmp
stos
scas
je
dec
insl
push
sbb
push
pop
xchg
or
push
xchg
pop
xchg
dec
hlt
xor
scas
pop
sar
arpl
cmp
and
push
inc
ljmp
cmpsb
or
mov
dec
or
adc
out
add
or
scas
js
jne
adc
mov
out
cmp
pop
xchg
pop
outsb
mov
fldl
xchg
mov
outsb
sar
mov
or
fsts
cmp
jno
adc
push
std
ret
in
loop
lret
push
mov
mov
ljmp
add
fsubs
jle
stos
xchg
clc
add
sbb
mov
popa
add
push
shlb
or
loopne
xchg
shlb
mov
fistpll
xor
cmpsb
mov
cmp
jnp
xchg
lcall
cmpsb
jo
popa
and
sbb
adc
cmp
mov
cmp
in
imul
pop
testb
jns
ljmp
je
cmp
daa
add
pop
and
std
xor
and
add
sbb
aaa
mov
mov
pop
pop
jb
xchg
inc
std
xchg
and
fistpll
scas
adc
mov
out
xchg
pop
xchg
push
fisubrl
fs
sbb
dec
je
out
jle
push
mov
test
jb
testb
movsl
ret
aaa
mov
lock
mov
xor
pushf
ss
ds
xchg
inc
lahf
jae
jbe
sbb
mov
jp
pop
fdivs
je,pt
add
loopne
xor
in
fst
mov
repz
xchg
jl
sub
xor
lret
jb
jne
mov
rcll
jge
popa
push
sbb
cld
sub
in
pop
in
sbb
xchg
repnz
inc
xor
inc
lods
xlat
subb
xor
popf
push
jle
and
ja
inc
jmp
push
pop
inc
inc
push
inc
cmc
xor
sub
flds
adc
push
pop
xchg
out
and
fsub
ret
jecxz
loop
push
loopne
mov
inc
jp
pop
clc
mov
int3
dec
and
sahf
xchg
sbb
lret
aad
cld
cmc
into
pusha
cmp
push
shr
imul
lahf
sbb
int3
jle
mov
and
xchg
ss
hlt
dec
mov
je
dec
xchg
jnp
es
sbb
popf
cld
addb
orl
jmp
pushf
cli
sbb
xchg
lret
aam
cli
mov
loope
push
ja
xor
dec
mov
out
mov
cmc
add
jnp
jae
mov
shl
sub
addr16
stos
ret
jg
sbbl
in
sub
dec
arpl
mov
lea
les
push
cmpl
insb
fnstcw
push
popf
or
mov
jo
sbb
mov
jns
sub
ja
je
push
mov
sub
ss
stos
leave
shll
xor
scas
xor
push
insl
push
fisubrl
adc
loope
movsb
push
mov
inc
fdivr
in
jo
inc
fsub
test
inc
and
in
cwtl
push
xor
lds
imul
mov
mov
sbb
dec
mov
subl
or
rclb
fsub
or
xor
xor
in
xchg
loopne
imul
jecxz
add
dec
mov
dec
add
out
and
mov
mov
ret
jo
pop
int
pop
int
out
push
scas
xchg
shrb
xchg
adc
mov
mov
hlt
jle
ljmp
mov
hlt
in
inc
pop
xor
or
adc
ret
dec
shrb
or
dec
mov
mov
inc
sbb
dec
mov
nop
scas
inc
mov
pusha
sbb
sub
cmp
mov
jmp
shlb
adc
inc
out
sbb
adc
add
imul
add
fidivs
xor
jle
jae
sbb
adc
jp
jo
lcall
imul
cmpsl
sub
jge
cmpsl
movb
jo,pn
je
dec
jecxz
add
dec
out
fwait
das
pop
lret
divl
repz
mov
fucomi
rcrb
add
bound
inc
out
data16
sub
mov
inc
cltd
cmovnp
lea
mov
pushf
fldl
xchg
mov
inc
fnstenv
mov
xchg
or
sbb
sub
sub
andb
push
xchg
ret
pop
pop
and
arpl
add
fwait
cmpb
inc
cltd
cld
xchg
or
loopne
xor
inc
add
xor
or
mov
lahf
xorl
fiadds
jecxz
shll
je
xor
cltd
xor
push
data16
pusha
std
pop
mov
nop
inc
pop
mov
gs
mov
or
ss
stc
rcll
mov
mov
sub
cs
mov
addr16
hlt
sarb
xor
mov
push
push
in
and
pop
sub
es
inc
xchg
popf
scas
mov
and
or
dec
mov
sbb
movsb
xchg
pop
xor
pop
push
mov
add
add
mov
xor
xchg
movsb
cs
jno
sub
jnp
mov
pusha
xorl
adc
imul
bswap
xor
imul
sbb
jmp
lcall
xchg
lret
pop
dec
inc
das
test
add
shrb
mov
mov
jecxz
ds
cmp
mov
ja
ret
jb
mov
or
and
cmp
into
lahf
es
cmp
lea
xor
repz
mov
add
dec
cmc
ficoms
pop
pop
movb
lds
scas
leave
in
pop
xor
push
push
push
fmul
cmpsb
add
into
pop
pop
dec
enter
pop
out
movsb
addr16
push
mov
jnp
jb
test
cmp
inc
decb
mov
rolb
test
movsb
sbb
jae
sti
insl
dec
sbb
sub
adc
xchg
push
push
dec
or
imulb
cmp
arpl
aas
push
leave
xchg
inc
xchg
rcrb
sub
in
daa
add
xor
or
lds
or
les
mov
jbe
inc
arpl
into
scas
mov
cld
rorb
mov
cs
or
lods
js
dec
mov
mov
xchg
in
and
inc
mov
mov
sbb
repz
dec
cld
ds
mov
cmp
adc
inc
ds
arpl
popf
pop
das
rcrl
nop
dec
and
lods
sub
dec
outsb
push
adc
jne
rorw
push
clc
fwait
adc
dec
jmp
sub
jbe
push
rcrb
sbb
scas
cmpsb
sub
xchg
sahf
mov
xchg
inc
aad
repz
jb
mov
jge
dec
add
mov
dec
scas
dec
les
cltd
dec
cmp
cmp
rcrl
adc
add
dec
mov
stc
mov
enter
cmpsl
pop
adc
push
jo
imulb
and
cli
iret
lahf
xor
sarb
sub
adc
stos
icebp
fisttpl
pop
jns
sub
ret
jno
and
ds
pop
fwait
pushf
lea
cltd
add
and
cmpsb
loop
test
pusha
push
sbb
call
and
ss
jnp
add
fs
mov
pop
push
aaa
mov
sbb
or
mov
mov
je
rcll
shlb
shlb
addl
rclb
scas
jbe
add
push
dec
dec
loope
adc
lds
in
mov
je
adc
sub
notl
or
pop
or
add
lods
dec
pop
jo
inc
frstor
push
mov
xchg
ret
cmpb
cmp
mov
stos
push
sub
mov
add
jne
cltd
lods
incb
mov
int3
popf
into
daa
xor
mov
xchg
sub
ja
xlat
or
or
add
ficoms
in
add
mov
dec
pushf
sbb
jne
sub
inc
lods
jl
fmul
add
icebp
pop
sbb
into
ret
adc
fistpl
and
outsl
je
cmp
sbb
mov
lcall
xlat
call
xchg
pop
or
adc
movsb
sub
or
mov
adc
xor
stc
mov
shll
dec
xchg
js
mov
shll
clc
mov
outsl
pop
push
bswap
movb
dec
mov
add
pusha
cmp
mov
mov
xor
inc
jae
jle
inc
push
call
dec
and
mov
dec
pop
in
mov
inc
cmp
dec
fistpl
popa
push
push
lahf
xor
pop
lcall
jne
sbb
test
mov
xor
mov
call
sti
xchg
in
imul
dec
cltd
roll
sbbb
dec
loopne
test
push
xchg
push
jle
fistpll
pusha
shr
adc
or
xchg
loope
arpl
and
pop
std
arpl
es
push
jmp
test
or
fcomip
fbld
jns
push
bound
cmp
pushf
iret
cmpsb
je
cmpsb
out
mov
popf
out
sbb
cmp
es
pop
push
inc
enter
inc
sub
sbb
jl
inc
hlt
enter
fisubs
jne
in
scas
mov
xchg
loope
or
fdiv
xchg
ret
int3
loop
imul
int
in
pop
lahf
cmp
imul
aam
dec
mov
pop
sbb
rcrl
mov
or
push
add
sahf
pusha
push
out
mov
fcoms
mov
mov
pushf
xchg
scas
test
int3
pop
icebp
arpl
pop
adc
mov
scas
adc
xchg
pop
roll
inc
bound
xor
std
lcall
jo
jno
aad
xchg
addr16
jno
pop
lods
imul
hlt
inc
adc
clc
pop
pushf
mov
add
pop
mov
mov
out
pop
sti
pop
cmc
or
das
lcall
int3
rolb
fnsave
pop
lods
xchg
data16
daa
iret
push
inc
xchg
movsb
fidivrs
inc
lock
arpl
js
je
in
mov
pop
int3
sub
rolb
adc
inc
adc
mov
dec
fidivrs
arpl
add
in
cmp
into
cwtl
or
mov
aad
stc
sbb
inc
cmp
pusha
push
dec
jl
jns
andl
sub
inc
jge
test
push
or
sahf
hlt
mov
and
ljmp
outsb
mov
xor
popa
addl
lods
outsl
jnp
popf
stos
pop
adc
cltd
inc
pop
pop
pop
or
pusha
in
fst
aam
call
jmp
pop
cmpsl
in
scas
mov
insb
inc
enter
lret
pop
out
mov
pop
jmp
pop
mov
mov
icebp
xchg
sbb
pop
lds
nop
jne
fwait
leave
and
fs
fdivrp
mov
mov
jle
adc
mov
add
mov
popa
mov
or
mov
scas
je
xchg
ja
in
and
rclb
dec
fsts
mov
sarb
cld
push
ljmp
clc
dec
dec
out
rcrl
adc
mov
mov
cmp
mov
fcmovbe
imul
sbb
cmc
adc
dec
test
lods
rolb
or
xchg
mov
sub
out
inc
sarb
rcrb
gs
addr16
std
pop
sub
mov
and
mov
lahf
out
test
orb
rcrb
cltd
outsl
jecxz
xchg
sahf
mov
addr16
jne
clc
rorl
decl
std
ja
xchg
stos
inc
mov
hlt
xor
and
negb
fsub
nop
xor
mov
push
push
add
cmp
push
push
mov
aas
mov
inc
je
xchg
in
sbb
lock
dec
hlt
fdivrl
xor
std
push
scas
aam
outsb
jne
xbegin
outsb
sti
jns
pop
cmp
jno
jle
fidivs
sub
stos
mov
inc
gs
cmpsl
cltd
bswap
loope
aaa
js
jecxz
inc
aam
xchg
push
xchg
je
ljmp
mov
push
push
ja
dec
xor
enter
mov
cwtl
pop
mov
ret
mov
arpl
and
repz
mov
mov
jbe
sub
iret
int
test
cmp
mov
mov
push
lret
daa
sti
les
add
ljmp
inc
ljmp
xchg
xorb
sub
cmc
rcll
es
mov
js
clc
stc
pop
cwtl
das
les
test
ret
xchg
or
pusha
int
test
lods
push
cli
pop
cmp
sahf
push
dec
jmp
cmp
inc
mov
inc
push
ror
bound
sbb
int
aad
and
adc
pop
cmp
out
shlb
mov
and
test
mov
cmp
cmp
cs
or
xor
jbe
lods
into
mov
xchg
nop
mov
mov
loope
and
testb
stos
dec
inc
dec
xor
jle
adcb
pop
mov
rorl
push
lahf
adc
sahf
fwait
mov
lock
cmpsb
cmpsb
jl
inc
push
push
mov
inc
pop
xor
xlat
cltd
jge
lahf
cltd
test
cmpsb
imul
cmp
sub
sbbl
orl
xchg
stos
incl
pop
and
xor
stc
int3
xor
push
test
mov
or
test
js
stos
xchg
pop
rolb
and
mov
jle
sub
movsl
faddp
cwtl
sahf
lahf
adc
xor
sbb
flds
xor
sbb
test
push
in
pop
into
mov
pop
mov
cs
pop
pop
xor
cli
mov
sub
add
loope
jae
lret
addl
ja
dec
add
movsl
into
xlat
int3
sarl
sbb
push
sbb
call
les
cs
rorl
cltd
mov
push
ret
mov
andb
test
jnp,pt
inc
loope
dec
lret
xchg
cmp
dec
test
mov
push
outsb
push
int3
pop
jp
js
loopne
inc
adc
mov
xor
lret
sarl
mov
cld
pop
and
gs
mov
xchg
and
sub
in
nop
ja
shll
cmp
cli
or
push
lods
out
add
imul
cmp
mov
mov
aad
mov
xor
inc
ficompl
pop
daa
adc
sbb
sbb
dec
and
add
xchg
dec
scas
pop
cmp
jmp
or
cwtl
jae
jecxz
add
mov
or
test
enter
push
xchg
push
enter
xor
in
nop
mov
ficoms
mov
inc
or
sbb
int
das
jne
pop
clc
mov
bound
int3
pop
out
imul
add
arpl
xlat
jb
dec
and
push
sbb
adc
push
push
adc
loope
sahf
push
sub
sbb
mov
sbb
lea
lods
or
inc
test
xchg
shll
lcall
in
pop
aad
cmc
and
and
sub
mov
mov
mov
inc
lock
pop
jle
mov
adc
out
xor
cmp
lods
lcall
into
dec
jmp
iret
xlat
clc
fwait
pop
lds
pop
jnp
xchg
mov
pushf
lcall
out
and
imul
aam
addr16
idivl
adc
adc
inc
int
fnsave
cltd
mov
or
inc
std
and
pop
jae
mov
pop
jnp
cwtl
inc
xor
aaa
xor
scas
sbbl
inc
mov
sti
xchg
push
pop
aas
push
scas
dec
jae
mov
fcompl
addr16
arpl
mov
pop
inc
cli
subb
adc
and
cmp
jnp
jo
push
fstl
flds
scas
push
cmp
cmp
mov
mov
push
call
cmp
pop
cli
jnp
lea
pop
iret
lret
push
add
xchg
mov
leave
xorb
subl
adc
xlat
in
mov
pushf
popf
pop
jns
jg
mov
pop
xchg
inc
arpl
pop
push
jbe
lahf
sbb
or
rcrl
push
cmpsl
iret
mov
pushl
sbb
divb
jecxz
fisttpl
ds
pushf
fisubrl
pushw
pop
in
xchg
add
sbb
mov
jnp
out
int3
mov
add
push
cld
mov
into
and
cmp
mov
ret
mov
lods
loop
fwait
jp
fs
xor
push
jmp
push
lcall
cmp
inc
popf
push
adc
rolb
ja
pop
lahf
cmpb
dec
and
loop
add
mov
jecxz
repnz
jmp
test
sub
xchg
dec
arpl
or
cmp
leave
push
lods
add
push
bnd
xchg
mov
pop
adc
cmp
lahf
or
jg
in
nop
rorl
gs
in
sbb
pop
sbb
in
out
adc
dec
in
testl
mov
or
sub
sbb
add
adc
aas
test
push
rcrl
jb
inc
dec
jb
out
add
dec
aas
xchg
mov
xchg
and
test
push
insb
add
pop
test
xchg
fisttpl
mov
mov
jae
jnp
rorl
lods
push
fadd
sbb
arpl
xchg
ds
xchg
insl
loope
adc
mov
lods
movsl
pop
js
lods
out
sti
dec
out
jp
bound
jmp
push
mov
pop
mov
cmp
arpl
xchg
mov
sti
or
sarl
cmpsb
dec
xchg
stc
xchg
sub
dec
pop
into
xchg
hlt
stos
xchg
inc
and
popf
or
stos
cltd
pusha
loop
jle
xlat
stc
or
inc
pop
cli
pop
testl
inc
dec
mov
lret
aaa
imul
add
xlat
insl
aas
sub
dec
xor
dec
into
jb
or
shrb
mov
inc
or
xor
sbb
dec
xchg
add
pop
jne
sub
popf
hlt
fptan
rol
pop
gs
aas
in
testb
int
lahf
jns
dec
sti
mov
cmpsl
push
push
jmp
dec
pop
xchg
aad
loop
push
jle
outsl
sub
dec
out
mov
sub
and
mov
mov
dec
cmpsb
or
xchg
dec
repnz
js
int3
mov
popf
fucomi
push
hlt
out
sub
sub
or
dec
adc
cmpl
mov
stc
repnz
mov
jno
testl
ljmp
or
outsl
xor
lods
dec
pop
and
xchg
add
sahf
inc
jno
pushf
sahf
mov
push
jne
pop
aaa
mov
sub
sub
notl
int3
push
repz
inc
fimuls
movsb
fs
in
dec
mov
ret
mov
cmpsb
nopl
jg
and
iret
sub
lret
cmc
xchg
push
in
ja
loope
mov
mov
insl
stos
pop
imul
add
sub
mov
cmpsb
cmp
jle
cmpsl
mov
pop
inc
in
jns
pop
inc
cmpsl
cld
xor
mov
or
cmp
sub
sub
cmpsl
xchg
jb
fptan
aad
testl
lods
rcrb
fmull
add
mov
roll
inc
cmp
ror
inc
adc
scas
btc
popf
mov
cmp
aad
push
xchg
mov
sbb
fistps
push
dec
and
rcr
insl
xchg
lahf
out
sarb
enter
or
popa
push
ljmp
pop
cmc
mov
mov
testl
mov
in
insl
xchg
lahf
sahf
pop
out
lods
push
push
insb
test
jnp
mov
pop
popf
push
lret
sub
hlt
pop
idivb
cmc
xor
sub
push
out
enter
dec
inc
adcl
push
pop
sbb
es
ficoml
or
lcall
fisubs
aaa
xor
and
add
nop
cs
sarb
add
cmc
cwtl
and
mov
xchg
pop
repz
and
xchg
mov
xchg
xchg
pop
js
mov
lea
jge
jecxz
push
iret
cmp
sbb
mov
out
jmp
pop
xchg
inc
outsl
mov
mov
push
mov
xchg
inc
icebp
inc
xchg
cmp
xor
lret
fisubrl
enter
in
or
sbbl
insb
fcmovb
fistpl
xchg
stos
add
xchg
and
lods
inc
dec
mov
das
sbb
das
cmp
ret
adc
dec
dec
leave
mov
xchg
mov
jg
sarl
sarb
inc
movsl
jg
out
inc
or
fists
jecxz
gs
and
mov
outsl
jbe
dec
mov
mov
shl
flds
iret
or
fisubl
pop
adcl
loop
int3
jecxz
sbb
push
pop
mov
mov
inc
fldenv
sbb
ds
sbb
lods
fdivl
adc
push
sbb
push
jp
rcrl
rolb
call
nop
ljmp
orl
iret
adc
leave
cmpsl
inc
mov
mov
inc
clc
test
mull
test
outsl
add
push
cwtl
mov
xor
mov
ds
gs
out
adc
sti
mov
mov
or
cmc
xchg
repz
xor
push
sti
mov
data16
cmp
xor
mov
sbb
sbb
mov
mov
cld
xor
mov
hlt
xor
fstl
pop
pop
mov
xchg
mov
mov
add
xchg
ds
roll
out
ss
hlt
sub
add
cmpsl
jg
lea
in
mov
in
or
mov
hlt
mov
mov
xor
je
push
or
sbb
mov
call
mov
push
les
lock
mov
jno
cs
mov
hlt
ret
sahf
jp
mov
in
js
outsl
or
mov
xor
sub
divb
ret
and
dec
gs
out
repnz
adc
push
aad
sahf
sbb
sbb
mov
lods
iret
pop
es
aam
cs
or
cmp
mov
mov
mov
cmpsl
sbb
jl
shlb
pop
xchg
pusha
jo
mov
cmp
data16
mov
sbb
sbb
mov
test
xchg
inc
sar
mov
pusha
pop
dec
mov
popa
fcoml
stos
xchg
cwtl
cmp
push
and
xchg
pushf
xor
pop
jecxz
mov
rcr
test
rolb
sbb
repnz
lea
imul
mov
mov
adc
cmp
sub
lret
jge
push
sub
pop
cwtl
daa
mov
enter
pop
push
pop
int
xor
popa
imulb
cmp
out
cs
dec
dec
in
or
pop
sahf
mov
adc
repz
inc
lahf
mov
push
stc
and
mov
int
outsb
xchg
push
test
cs
clc
enter
cld
push
ljmp
jne
pop
xchg
shlb
xchg
icebp
icebp
mov
mov
or
sbb
dec
mov
jle
popa
popf
mov
mov
sbb
shlb
mov
cs
clc
es
lahf
or
scas
mov
icebp
ss
out
jge
std
test
dec
addr16
or
adc
push
adc
mov
push
outsl
std
int3
and
repnz
sbb
leave
popa
arpl
rorl
fs
adc
rclb
punpckldq
mov
jmp
inc
xchg
pop
daa
xor
and
leave
jae
mov
xor
xor
js
outsb
fs
nop
adc
sbb
popf
sub
mov
idiv
sub
pop
and
rcrl
test
and
sarb
xchg
mov
movsl
into
cmp
stc
pusha
adc
cmpsb
or
cmpsl
mov
mov
adc
push
adc
dec
jae
lods
push
insb
mov
xchg
push
mov
iret
and
loop
pop
cmpsl
in
je
lret
xchg
je
lods
adc
xor
sub
or
aaa
rorl
test
xor
cmp
insb
mov
testb
xor
sub
arpl
or
leave
xchg
nop
push
dec
popa
jae
js,pn
mov
push
pop
movsb
sbb
sub
aad
inc
or
ja
shlb
sub
jo
stc
xor
ss
mov
inc
es
in
subb
orl
mov
xchg
push
cltd
sbb
xlat
push
push
movzbl
in
fimull
outsb
loopne
cltd
lea
mov
pop
pop
pop
fcomi
lods
data16
dec
pop
or
mov
mov
mov
jecxz
sub
push
cmp
aaa
jl
jo
dec
lock
push
mov
add
ret
repnz
arpl
cltd
or
fucomip
jnp
movsl
mov
cmc
adc
jle
outsl
outsb
sbb
add
mov
sub
cmp
sub
mov
xchg
out
xor
adc
and
inc
push
arpl
lock
adc
sub
imull
or
inc
push
xor
ficoml
fnstcw
lds
adc
in
sub
inc
cwtl
mov
jge
out
shrl
jmp
push
mov
pop
sub
cmpsb
dec
scas
inc
sbb
insb
xchg
std
fs
mov
xchg
cmp
adc
xchg
sbb
addr16
pop
mov
or
cmc
cmc
pop
xor
mov
lds
and
mov
scas
fs
scas
pop
adc
pop
jle
in
mov
stos
jo
ljmp
push
stos
insb
pop
test
pop
mov
push
fs
andb
pop
fisubs
mov
mov
in
test
sub
data16
adc
je
imul
es
cmp
cs
dec
jo
pop
mov
enter
mov
ja
adc
cmpsl
jle
cmp
in
sub
lret
ror
or
dec
insl
scas
sub
dec
or
test
push
dec
xchg
mov
cwtl
leave
shll
xor
mov
jl
or
cmp
gs
fdivl
outsl
fsubp
fidivrs
mov
inc
mov
mov
cs
lret
jmp
xchg
mov
inc
jmp
movsb
or
jg
jecxz
sub
ror
divb
jbe
xorb
mov
inc
sub
add
jns
mov
pushf
movsl
sub
dec
shlb
mov
movsl
xchg
lret
mov
adc
cmpsl
in
pop
sbb
xchg
mov
scas
inc
test
mov
mov
xchg
or
fidivl
and
pop
mov
adc
test
adc
ret
bound
movsl
sub
out
adc
xchg
arpl
cli
mov
or
idiv
jo
sub
sbb
add
jns
push
lcall
mov
jo
imul
leave
les
fwait
outsb
movsb
or
adc
aaa
dec
imulb
adc
stc
ljmp
jae
mov
aas
dec
lahf
stos
adc
add
mov
int
mov
test
add
adcl
adc
testl
mov
inc
dec
jb
add
ret
dec
aad
fldln2
mov
jecxz
jbe
int3
popa
mov
lods
enter
fsts
cwtl
cmpsb
mov
pop
sti
mov
pop
ljmp
mov
and
cwtl
popa
fs
repz
xchg
into
xchg
sbb
pusha
adc
rolb
bound
mov
xchg
ret
push
arpl
mov
xor
adcb
ficoms
xor
xchg
or
mov
push
rclb
pop
cwtl
ss
insb
dec
lds
sbb
rcrb
mov
jg
xor
dec
jno
inc
inc
clc
mov
mov
cmpl
mov
inc
scas
pextrw
js
movsb
cmp
pusha
fiadds
xor
pop
in
out
mov
adc
fcompl
mov
mov
les
push
dec
int3
xor
pop
xchg
cmp
scas
xchg
add
scas
testb
push
push
xchg
pcmpgtw
mov
sub
lret
inc
inc
cmc
ljmp
imul
ljmp
jno
lret
push
jecxz
mov
rcr
and
repz
ljmp
fcmovu
mov
sub
xchg
jl
js
cmp
inc
adc
dec
jb
sbb
lds
subb
dec
inc
dec
lret
popa
dec
adc
fimuls
bound
sub
sbb
ret
pop
cmp
fistl
push
xlat
stc
push
and
mov
add
push
mov
inc
stos
jne
sbb
xor
dec
rolb
xchg
fcompl
enter
lock
push
mov
mov
arpl
sbb
pop
loop
js
das
mov
jg
mov
adc
mov
adc
pop
xor
push
mov
jg
loope
push
jmp
aam
mov
and
jnp
in
xor
dec
adc
mov
test
sbb
filds
hlt
cli
dec
inc
and
mov
add
es
add
lods
nop
dec
and
pop
mov
shlb
pop
fstpt
sub
mov
shl
cmpsl
mov
pushl
pop
shll
test
or
aam
or
lds
or
lahf
mov
ljmp
push
xor
popf
clc
pop
mov
push
mov
jecxz
inc
in
and
mov
aam
loope
lahf
add
mov
mov
call
mov
pop
imul
or
jns
jmp
xor
lcall
gs
inc
pop
insl
add
push
ja
iret
mov
jecxz
jae
test
cmp
pop
in
call
inc
adc
inc
repnz
jae
mov
xchg
dec
lea
es
push
xor
push
or
sahf
add
mov
addl
cmp
hlt
inc
mov
push
stos
add
cmp
cmp
in
dec
and
mov
roll
bound
dec
ds
scas
lock
leave
dec
cmc
loop
jp
mov
jmp
xchg
pop
push
pushf
rcrb
inc
mov
lds
and
adc
je
cmpsl
inc
lcall
dec
push
or
notl
in
xor
enter
xlat
orb
fmull
aad
gs
sub
je
adc
xor
leave
outsl
lret
fcoms
mov
enter
xchg
cmpb
inc
jne
or
dec
insb
lcall
pop
test
mov
mov
test
dec
add
sti
adc
add
mov
ss
subl
add
inc
daa
jns
cmp
push
es
clc
into
les
mov
adc
cmp
or
decb
add
js
js
cld
stos
jno
adc
xor
push
cmp
out
cs
dec
mov
mov
imul
push
or
mov
decl
fildl
in
popf
inc
jns
cmp
sahf
bound
ror
mov
cld
xchg
jle
int
fcmovnb
dec
jb
sub
addl
add
xchg
imul
xchg
ffree
xor
sub
test
xor
ds
mov
icebp
pop
mov
pop
dec
jns
dec
mov
lret
lret
cmp
dec
clc
inc
jge
das
push
jb
repnz
mov
shlb
mov
int
leave
mov
sbb
daa
clc
inc
lcall
icebp
lods
inc
pushf
loop
sub
push
pop
icebp
sub
xor
mov
pop
adc
loope
fisttps
lods
fwait
neg
pop
pop
ja
xchg
insl
outsb
mov
int3
mov
dec
add
fstpl
pusha
fwait
icebp
mov
mov
mov
add
hlt
stos
mov
or
sub
jno
or
xchg
mov
sub
mov
xlat
shlb
mov
lods
fldt
xor
scas
add
mov
movsl
jbe
inc
push
jbe
ds
sub
xchg
fstpl
xchg
push
daa
sbb
mov
dec
adc
mov
xchg
pop
or
adc
into
and
add
cltd
add
or
xchg
repnz
push
jl
cmp
and
test
pop
movsb
mov
int3
aas
sub
dec
or
in
pop
xchg
xor
mov
inc
mov
or
int
add
fisubrs
paddsb
sbb
jg
cmovge
shr
and
fistpl
pushw
movb
sbb
push
adc
jb
sarl
mov
or
lds
clc
mov
mov
mov
cmp
cld
mulb
push
enter
inc
sbb
sub
rcrb
pop
out
fcompl
sub
jnp
sbb
fwait
cmpsb
sub
and
in
cmp
adc
fsub
jbe
adc
addl
adc
fcoml
add
out
fsubr
cmpsl
or
sub
jecxz
mov
lods
ret
ret
dec
inc
pop
push
pop
roll
push
rcl
inc
das
fstp
xchg
repnz
repz
mov
shlb
push
scas
scas
daa
inc
cltd
mov
repnz
pop
stc
dec
lret
mov
pop
lcall
movsb
outsl
bnd
pop
cmpsb
dec
cmpl
sbb
bound
jl
sbb
jno
mov
fstpl
push
dec
lret
std
sbb
xchg
scas
cmp
push
inc
jp
lock
cmpsb
jo
es
sbb
xor
dec
sub
xchg
pop
xchg
xchg
mov
jmp
add
cmp
lret
je
push
cmp
xor
fmul
test
pop
inc
ss
or
data16
xor
xchg
or
pop
adc
add
popa
ret
mov
or
in
in
das
mov
je,pn
mov
sbb
dec
xchg
lret
outsb
cmp
jne
jns
rorb
in
frstor
cmp
sbb
mov
test
rcr
movsl
add
sbb
mov
dec
leave
and
fldt
sub
or
sub
mov
stos
enter
xor
outsl
fstpl
adc
aas
jnp
or
lret
test
cmpl
push
ja
int
mov
fidivs
jb
adc
mov
xchg
frstor
jo
mov
nop
fildl
pop
adc
negl
mov
ret
jno
mov
pmaxub
ja
jle
popa
rol
pop
inc
ss
std
repz
lods
insl
mov
jne
out
push
enter
or
shl
ret
fwait
pop
ror
mov
sti
fucomi
add
movsb
xchg
adc
dec
mov
xchg
sbb
mov
popf
out
punpckldq
xchg
popa
inc
stos
rclb
sub
pop
adcl
adc
mov
mov
lods
push
outsl
pusha
push
loope
fdivrs
push
stc
jmp
das
scas
pop
push
sbb
pop
or
aad
mov
test
out
into
arpl
mov
mov
add
out
in
out
inc
test
subb
or
stos
dec
sbb
lcall
cmp
inc
in
xor
outsb
xchg
xchg
mov
adc
daa
movsl
stos
int3
dec
outsb
outsl
push
movsb
inc
insb
cmp
push
inc
les
nop
int3
icebp
shl
mov
dec
sbb
mov
out
js
repnz
cmp
fidivrl
cmp
pop
ja
mov
xchg
dec
movsb
pop
inc
loop
sbb
loop
mov
mov
adc
pusha
inc
call
std
test
adc
das
stos
xchg
adc
loope
adc
sub
push
jg
outsb
fcoms
push
ja
xor
ljmp
stos
aad
pusha
push
push
and
add
xchg
enter
adc
fldcw
add
jb
imul
mov
mov
jmp
rcrl
ja
pop
das
je
fidivl
mov
sti
or
pop
shlb
adc
inc
repz
and
cs
jg
pop
sbb
fisubs
dec
shll
sub
loop
insl
mull
mov
idivl
inc
push
negl
adcl
jecxz
and
addb
mov
mov
enter
cmp
int3
and
arpl
pop
aaa
inc
movsl
dec
scas
add
leave
cmp
and
xor
mov
inc
cmp
fdivs
dec
jo
and
sbb
mov
test
mov
inc
enter
test
in
adcb
sbb
mov
cmp
jne
xchg
imul
mov
out
push
mov
out
push
push
rcl
and
push
mov
leave
pop
jnp
shlb
inc
in
sbb
in
dec
scas
xchg
arpl
mov
cli
movsb
push
mov
push
mov
dec
js
inc
and
rcll
pop
sbb
xchg
call
mov
xchg
inc
push
cli
test
mov
xlat
jl
lret
mov
outsb
inc
in
ss
sub
test
inc
mulb
adc
push
loop
fimuls
dec
sbb
sbb
fdivrp
dec
mov
mov
movsl
icebp
xchg
lods
ljmp
add
daa
out
lahf
je
pop
and
push
inc
cwtl
jmp
rcrl
mov
js
loope
dec
frstor
or
popf
push
dec
jae
cwtl
xor
inc
mov
and
jne
dec
mov
into
inc
pop
lock
jmp
js
icebp
jae
cmc
cmpsb
dec
das
mov
jg
inc
jp
lahf
mov
add
lods
jg
mov
dec
std
or
es
js
rcl
mov
inc
add
dec
pop
test
gs
test
mov
inc
push
test
stc
call
mov
xchg
mov
nop
xchg
icebp
dec
mov
stos
dec
or
xor
mov
jmp
in
cltd
pop
jp
imul
js
call
mov
add
xor
pcmpeqb
enter
mov
cmpsl
orb
dec
push
testl
sub
push
test
mov
js
ret
repz
or
inc
inc
je
out
cmc
out
or
mov
clc
pop
outsb
sub
aam
pop
push
mov
iret
test
or
push
dec
sahf
call
mov
inc
mov
rol
inc
adc
data16
nop
add
sub
dec
mov
mov
add
mov
jb
pop
in
cmp
cmp
or
cmp
pop
add
bound
adc
sbb
outsb
jnp
mov
mov
gs
movsb
xchg
imul
xor
lea
fdivl
inc
add
pop
add
add
xor
or
xor
inc
push
int3
inc
mov
mov
cwtl
and
add
repz
stos
ret
mov
push
call
lods
lods
in
movsb
icebp
frstor
or
sbb
mov
xchg
pop
cmp
inc
pop
mov
xor
popf
movsb
out
arpl
int3
lock
iret
lret
fs
sub
cmp
loop
mov
sbb
pop
jo
jmp
xor
sub
xchg
add
in
lock
pop
cmp
loope
pusha
mov
ret
fiadds
or
out
je
inc
shrl
cltd
shll
fldcw
fsubs
cmc
mov
mov
movsl
sahf
xorl
bound
testb
add
pop
aad
incb
sub
mov
mov
out
cmp
cli
add
scas
cmp
add
or
clc
xor
test
xor
cs
jl
mov
cmpsl
inc
jae
pop
inc
sbb
imul
daa
fistps
mov
mov
clc
rcl
adcb
inc
test
mov
mov
cmp
in
jecxz
mov
xor
or
lods
ljmp
popa
fwait
sbb
pop
xor
scas
push
pop
mov
pop
addr16
shrl
jne
add
roll
lahf
aad
addr16
cmp
lods
into
xchg
cmpsb
or
sub
pop
jbe
test
cmp
jne
mov
jecxz
sti
cmp
jae
pop
xchg
or
ds
jnp
ficompl
cmc
inc
fimull
mov
jno
jmp
and
or
popa
cmpsl
cmp
jo
scas
clc
in
mov
shll
and
std
daa
rcll
orb
testb
mov
fsubl
cmc
loop
mov
jg
inc
lret
insl
mov
pop
imul
sub
dec
cli
pop
fldt
mov
mov
movsb
aas
push
cld
jmp
mov
movsb
sub
test
cmp
or
movsl
shl
and
pop
fs
dec
mov
or
int
hlt
ljmp
inc
jmp
jmp
cwtl
mov
movsl
push
jge
test
push
fldcw
lods
inc
test
fucom
push
xor
sahf
add
pop
and
lcall
cld
iret
sbb
mov
lds
jp
sub
pop
push
xchg
push
jmp
popf
or
inc
sarb
push
test
rcr
shlb
std
arpl
mov
shlb
dec
adcb
mov
pop
nop
ret
mov
cmc
dec
push
sub
mov
out
push
sbb
faddl
shl
daa
jno
add
imul
dec
ds
int3
punpckhbw
aaa
repz
fldl
out
nop
mov
mov
das
and
mov
mov
in
pop
mov
jnp
jecxz
nop
std
pop
dec
sbb
test
mov
jg
jne
mov
les
out
pop
mov
push
jge
and
adc
es
insl
dec
xchg
jp
or
mov
shl
fs
pop
adc
popa
sub
sub
js
cmpl
sbb
mov
or
imul
das
in
and
mov
dec
jo
test
mov
clc
cld
mov
pop
insl
fmulp
jecxz
cwtl
jb
in
aad
addr16
outsb
sbb
push
push
mov
xchg
add
repz
ljmp
aaa
push
in
push
test
sub
gs
jge
inc
lock
daa
sbb
hlt
inc
ja
pop
jae
out
push
cli
dec
jae
pop
aam
pushf
inc
dec
loop
xor
stc
aad
loopne
das
shll
mov
notl
insl
mov
js
fcompl
pinsrw
insb
cmp
pop
aam
fnstenv
xchg
arpl
sbb
icebp
out
ret
popf
push
cld
ret
addr16
ljmp
int3
rol
adc
hlt
mov
clc
pop
test
mov
jnp
xor
ret
jge
test
jle
in
lock
scas
add
data16
out
out
int3
stos
arpl
or
data16
into
dec
fistpl
ljmp
dec
or
jle
fisttpll
push
xchg
js
xor
hlt
pushf
push
lds
mov
ljmp
test
and
inc
sub
inc
popf
sub
xchg
loopne
daa
rorb
test
and
jle
nop
sub
lds
adc
push
jae
adc
mov
fsubl
lahf
cmpsl
pusha
jne
xor
into
sub
xor
insb
enter
and
pop
cmp
pop
mov
imul
xchg
test
lds
sbb
mov
xchg
sahf
movsl
out
inc
xchg
dec
pop
mov
std
int
push
and
mov
inc
mov
add
test
stos
add
mov
outsl
cli
mov
sbb
sbb
xchg
std
sub
negl
inc
icebp
imul
cwtl
adc
daa
or
mov
push
xor
cmp
dec
bound
mov
add
add
push
iret
inc
mov
xchg
sbb
pushf
imul
sub
mov
lahf
inc
outsl
jecxz
lock
enter
push
scas
cld
push
xor
xor
cwtl
or
mov
popa
fldl
jg
pop
mov
pop
cmc
or
mov
data16
out
cmc
jno
mov
nop
lahf
xchg
fmuls
adc
fnstenv
mov
pop
push
sti
pusha
cmp
add
pop
shll
icebp
pop
dec
lods
bound
rsm
inc
out
mov
std
test
ret
add
cmp
jnp
mov
loope
rsqrtps
adc
push
cmp
mov
mov
lods
xor
ret
popa
jbe
pop
fidivs
iret
adc
testb
rcl
cmc
das
inc
stos
inc
popf
xchg
cltd
jnp
scas
pushl
lods
jo
nop
push
mov
sub
flds
cltd
rol
bound
push
mov
push
mov
mov
jecxz
push
xchg
rep
popf
das
pop
inc
les
xchg
ja
cmpsl
cmp
mov
dec
insb
adc
dec
push
call
pop
xor
adc
aam
repz
adc
pop
in
test
add
repz
in
mov
les
out
jbe
pop
imul
dec
sbb
divl
push
lods
fildl
cld
into
mov
jle
and
je
js
inc
sbb
scas
dec
mov
test
or
xor
mov
push
xchg
adc
fdivrl
pop
aas
inc
mov
out
dec
and
fidivrs
and
aaa
mov
les
pop
xor
roll
dec
dec
xchg
lods
mov
sub
roll
mov
push
nop
fidivrs
jns
fwait
inc
push
add
cmovo
inc
fdiv
cmpsl
ljmp
bound
loop
fldenv
rcl
mov
popa
mov
mov
adc
xor
pop
sbb
sbb
inc
cwtl
out
push
sti
xchg
jecxz
testb
in
adc
mov
add
nop
cmp
push
push
lret
jo
mov
stos
lock
sarb
and
mov
jg
fs
and
cld
push
adc
imul
mov
fs
pop
icebp
loopne
dec
pop
push
sbb
mov
push
jno
mov
bound
and
cmpl
xor
xor
adc
fisubrs
andb
cltd
cltd
cmp
xchg
out
mov
imul
daa
and
mov
les
jp
mov
outsl
add
stos
pop
xchg
cltd
adc
in
cmpsb
movsl
mov
cmp
xorb
sub
lods
mov
push
inc
pop
jle
xor
mov
movsb
adc
mov
pop
jmp
xchg
jnp
pop
xor
jo
inc
or
cwtl
imul
fadds
xchg
into
stc
pop
fs
test
xchg
add
xchg
or
add
cmp
hlt
call
leave
xor
mov
mov
pop
pop
xor
jl
dec
mul
push
ljmp
add
mov
push
pushf
inc
inc
out
cltd
ljmp
insl
and
out
sbb
loope
xchg
lods
test
mov
mov
sbb
mov
dec
rcrl
cmp
inc
xchg
adc
das
xor
daa
mov
inc
in
xchg
clc
add
mov
mov
pop
pop
outsb
add
cmp
std
ds
mov
mov
lret
out
bound
inc
ret
out
loope
xor
xchg
xor
jae
imul
xchg
cltd
mov
inc
pop
arpl
pop
fs
jae
iret
and
mov
ds
pop
xchg
ror
test
xchg
sbb
and
or
xor
sti
ret
sub
dec
lahf
push
aam
aam
sbb
jno
outsb
in
sub
rclb
push
lret
cltd
data16
std
sbb
negb
imul
add
test
and
aad
ret
mov
aam
rol
mov
out
sub
inc
ret
cmpsw
sub
xchg
test
mov
stc
sti
xor
fsts
mov
inc
pop
insb
hlt
sbb
lds
mov
pop
push
mov
xchg
or
rolb
negb
or
ret
mov
mov
add
push
stos
loopne
mov
xchg
icebp
jg
jo
cmp
cmpsb
jmp
dec
pop
dec
pcmpgtw
jmp
mov
push
mov
jle
pop
push
sbb
cmpsb
or
push
pop
rcr
jne
sbb
in
repz
push
sub
hlt
xor
call
mov
aaa
dec
dec
xor
cmp
dec
push
cltd
mov
mov
adc
jge
loop
mov
das
push
in
pusha
fstl
pop
sub
int
mov
add
daa
xchg
test
mov
scas
aaa
div
xchg
fdivrp
fwait
pop
sbb
fisubrs
dec
insb
shl
in
shlb
mov
shll
inc
pop
ret
std
cmp
iret
jne
fwait
add
nop
dec
add
xchg
popa
mov
adc
mov
incl
mov
push
icebp
incl
fcomps
pop
xchg
or
jb
cltd
lea
sbb
push
popf
mov
scas
movsl
xor
push
push
clc
xchg
movsl
sbb
mov
adc
jg
lahf
pop
and
mov
repz
jl
div
out
enter
push
or
and
or
cltd
push
loope
adc
inc
cmp
cmpsb
mov
data16
and
push
sbb
test
sbb
or
mov
loope
shll
jmp
push
pop
sar
and
icebp
and
xor
inc
xchg
lret
out
mov
in
mov
xor
xchg
or
icebp
aam
outsl
jl
cmpb
int3
loope
negl
push
cmp
fidivl
xchg
ljmp
add
es
inc
fdivl
or
adc
add
sub
add
or
xchg
jb
lods
daa
popa
inc
inc
push
pusha
stc
xor
push
div
loop
dec
out
fsubs
xor
ret
cmp
push
or
xchg
or
pop
push
xchg
jle
inc
cwtl
pop
cli
into
insl
mov
mov
ret
push
jno
cmc
push
into
jl
insb
in
inc
dec
dec
cmp
cmp
xorb
sbb
xchg
mov
add
or
mov
xchg
mov
mov
dec
or
call
sub
and
mov
lea
inc
fmull
flds
jmp
jne
xchg
inc
sub
sbbl
loopne
mov
fdivs
pop
sub
daa
mov
mov
insb
sub
or
or
push
jb
ret
push
dec
mov
ss
jbe
mov
or
jl
mov
cltd
adc
xchg
es
cld
cld
sarl
mov
and
movsl
shrb
popf
and
pop
jg
mov
outsb
stc
xor
pop
scas
xchg
pop
pop
mov
in
and
in
sbb
mov
lcall
mov
push
and
clc
sub
ss
je
cmp
push
jg
loope
sarb
mov
inc
ljmp
mov
sub
jle
aad
scas
hlt
ret
test
xor
sbbb
mov
cmpsl
xchg
mov
and
inc
in
andb
in
mov
test
jge
ds
inc
jp
into
pop
mov
jno
enter
popf
jge
outsl
insl
sti
fcmovnbe
mov
cmp
fdivp
inc
add
cld
aas
mov
mov
cmp
jp
shll
pop
or
jno
add
jecxz
adc
pop
in
in
jmp
xor
dec
lahf
cmp
push
pusha
jns
dec
shrb
or
scas
push
dec
jmp
aad
fwait
sarb
cs
jg
adcb
sarb
aam
mov
sarl
cli
pop
fldcw
pop
jns
sub
popf
pop
std
push
jae
inc
jp
pop
roll
in
jns
xor
xchg
hlt
pushf
fwait
pop
scas
sub
rorb
xor
andl
in
push
ror
in
and
outsl
cmpsl
jg
dec
scas
das
inc
lret
xchg
sbb
ret
arpl
cs
cmp
jbe
push
xor
adc
xor
mov
sub
sub
jg
repnz
fiaddl
jno
mov
pop
scas
mov
pop
xor
dec
dec
jmp
outsl
pop
loop
movsl
pop
test
pop
adc
cmp
pusha
dec
test
test
jmp
xchg
mov
adc
xchg
inc
ret
jecxz
sbb
das
mov
mov
clc
or
jp
mov
cmp
xchg
cmp
in
es
jge
addr16
out
jl
xlat
out
repz
stos
push
push
pop
mov
add
es
jae
mov
xchg
mov
es
add
test
add
lret
sbb
std
sbb
push
dec
pop
sub
mov
stos
mov
inc
std
in
mov
inc
jno
enter
push
scas
je
lret
rorl
add
push
ror
insb
inc
aaa
sbb
incl
xor
stos
loopne
sub
mov
addr16
push
in
jno
aas
filds
mov
pop
pop
lret
mov
dec
mov
inc
rolb
aaa
push
arpl
mov
jns
sbb
xchg
push
cmpsl
cwtl
imul
adc
pop
scas
adc
push
inc
mov
mov
mov
and
out
sahf
sub
lock
mov
and
loopne
icebp
add
jno
pop
xor
mov
push
lods
fwait
je
sub
jge
rcll
sub
xor
sbb
ds
gs
lret
jp
pop
push
xor
aad
mov
nop
enter
call
mov
xchg
icebp
icebp
pop
and
xor
xchg
pop
popa
loopne
xchg
cltd
fadd
xor
mov
shrb
cmp
repz
jne
outsl
xchg
popa
outsb
push
test
adc
dec
sub
std
and
mov
mov
test
leave
mov
insb
xchg
out
sub
popa
adc
push
imul
push
fsubl
mov
insb
jno
ss
and
outsl
mov
shrl
stos
test
adc
lds
add
mov
sub
into
cwtl
push
jne
mov
insb
test
sbb
cmpsb
popf
inc
mov
pop
or
xchg
cs
inc
aad
cmc
aam
inc
cmp
xorl
xor
outsb
insb
xchg
xchg
out
in
notb
mov
loop
ror
sub
int3
cmc
pushf
inc
ds
sbb
mov
arpl
data16
mov
imul
mov
xchg
les
push
lret
add
ret
cmc
jge
fistpll
lds
and
addb
data16
lods
ljmp
jle
mov
inc
mov
cmpl
jecxz
mov
dec
ret
ss
int3
in
mov
lock
setae
pop
ss
or
addr16
xchg
fisubl
add
test
sub
inc
test
mov
ret
jecxz
jl
insb
jbe
insl
in
loopne
cmp
ljmp
int3
aaa
mov
repnz
in
popf
and
push
xchg
js
cli
inc
cli
inc
stos
jns
imull
int
jo
in
pop
nop
movsl
push
sub
fisttps
fs
xor
jg
push
jns
xor
cwtl
mov
testb
push
mov
mov
cld
mov
or
xchg
jns
sub
add
add
mov
cmp
or
cmp
es
cmp
lea
rcll
scas
fwait
and
mov
test
push
out
dec
add
mov
jmp
pop
xchg
repz
addr16
xchg
xor
cli
cmpsb
lock
aaa
pushf
lret
push
sbb
scas
push
mov
ret
movsb
fldcw
sbb
add
jne
adc
dec
pop
and
cmpsl
xchg
sub
dec
imul
popa
int
fsubrs
mov
loope
inc
clc
addl
daa
pop
jge
cmpl
scas
pop
add
mov
or
mov
dec
sbb
sbb
andb
mov
and
lea
fwait
idivl
cltd
popf
or
fldcw
mov
data16
adc
imul
or
stos
fmuls
mov
fcomps
inc
adc
add
cmp
leave
pop
push
push
es
xchg
mov
fsubr
inc
inc
mov
jl
cwtl
add
aaa
scas
or
lods
xchg
fildll
data16
or
and
js
inc
mov
daa
js
aaa
or
sub
arpl
rcrb
pop
xchg
adc
das
mov
xchg
shrl
out
push
sub
call
fnstenv
mov
xor
cwtl
jbe
testl
rcl
fwait
sahf
ja
mov
add
sbb
lock
sbb
mov
push
test
icebp
ficoml
addw
stc
rclb
andb
mov
add
in
mov
frstor
int3
scas
addr16
mov
ja
and
leave
mov
in
popa
xor
jnp
inc
in
mov
or
dec
roll
pop
mov
mov
pop
jmp
movsb
addr16
mov
dec
xor
xor
mov
sahf
test
pusha
imul
mov
std
mov
xorb
movsb
sbb
ja
lret
rol
int
addr16
out
add
fbld
mov
xor
fimuls
outsb
mov
pop
mov
arpl
inc
add
outsb
test
out
push
std
sbb
filds
jbe
sti
outsl
lods
in
cld
pop
out
jne
shl
add
fs
nop
ss
sbb
lods
and
ljmp
sub
fs
and
das
sti
in
clc
add
in
dec
jns
stc
aam
shr
cmp
push
mov
add
mov
jl
sbb
ss
push
or
fldcw
cmpsl
fs
xor
pop
push
out
dec
xor
inc
mov
push
push
movsl
mov
sub
mov
jp
adc
mov
sbb
xor
pusha
icebp
lods
mov
stos
daa
mov
push
cmp
mov
lock
addl
push
mov
pop
xchg
push
and
sbb
dec
xchg
lods
cs
insl
mov
cmp
xor
aaa
mov
lcall
jno
xchg
popa
es
jae
rclb
xchg
lcall
xchg
jno
enter
mov
mov
fsubrp
inc
cwtl
js
jnp
popa
cli
xlat
and
inc
enter
xchg
cmpsb
clc
push
push
mov
cld
push
add
jl
int
inc
loopne
xor
in
outsb
mov
repz
pop
mov
pop
cmp
pop
sbb
in
push
push
scas
jo
fcmovb
add
sbb
cmp
popa
xchg
outsb
orl
outsl
pop
xlat
mov
jae
xorl
gs
pop
and
popa
xchg
cmc
ret
mov
jle
out
sbb
stos
hlt
mov
scas
pusha
xor
cld
flds
sbb
mov
mov
enter
data16
lock
push
push
xchg
jns
in
fiaddl
pop
dec
arpl
mov
jnp
pop
imul
mov
fstl
std
jge
lds
rorl
sub
xchg
lret
push
add
enter
sbb
divb
cmp
call
shlb
in
mov
dec
rcrb
cmpl
jecxz
inc
lret
repnz
decl
cmpsb
leave
fwait
in
sbb
loopne
and
pop
and
adc
pop
sti
das
aaa
xor
and
push
jno
fcompl
aam
mov
je
scas
sbb
pop
jg
jge
je
xor
pop
mov
pop
inc
addr16
mov
xchg
sbb
shlb
jp
fldt
add
mov
fcmovne
lahf
or
mov
in
dec
cltd
sbb
hlt
sub
lret
add
fstps
fcoml
mov
lds
movsl
jnp
push
test
jp
mov
jecxz
add
pop
mov
std
xchg
incl
stos
fstl
push
sub
movaps
dec
ret
jbe
mov
or
push
daa
iret
inc
lahf
sbbb
adc
in
mov
adcl
mulb
dec
push
push
out
mov
fistl
or
mov
inc
fs
jb
pop
cmp
je
jns
cmp
xchg
lret
loope
cmpsl
sbb
fmulp
add
dec
add
sub
fcmovu
insb
inc
aam
dec
fldt
jns
mov
dec
xchg
push
pusha
cmpsl
push
mov
cs
mov
push
inc
fistpll
hlt
sub
sub
cmp
nop
dec
mov
dec
xchg
lcall
rorb
or
out
sarl
jne
cmp
mov
xor
popa
ror
mov
fldcw
into
aam
dec
xor
ds
movsb
lods
daa
inc
mov
lret
cmp
pusha
addr16
sub
pop
pushf
cmp
push
sub
add
gs
lock
pop
inc
lret
mov
push
xchg
mov
ret
cmpsl
mov
add
sub
push
push
or
mov
pop
xchg
in
dec
add
nop
mov
pushl
decl
pop
je
daa
ret
dec
sub
in
fidivs
sub
daa
out
inc
shlb
dec
push
movlps
das
fistpl
leave
xor
js
xor
sahf
lahf
push
popf
js
lret
push
cli
mov
and
mov
out
and
adc
push
mov
test
shl
and
or
add
enter
ds
or
int
pop
jl
mov
lds
inc
pop
inc
push
mov
pop
das
adc
jl
xchg
movsl
leave
or
orb
arpl
add
daa
add
mov
pop
nop
fcomi
jb
pop
jns
push
rolb
int
mov
jo
jbe
jo
loop
xor
lock
mov
dec
jb
repnz
jno
xchg
scas
jbe
test
scas
mov
fildll
leave
imul
rorb
xor
cmp
movsb
movb
xchg
cmp
sub
or
xchg
mov
mov
xchg
xchg
jle
enter
push
xchg
sbb
cs
cmp
cmp
lds
mov
fistps
scas
fcompp
xor
int3
enter
cmp
pop
cs
dec
leave
dec
icebp
rclb
ljmp
sti
cld
into
xor
fnsave
adc
cmp
aad
sub
sbb
xor
adc
shll
arpl
adc
scas
xchg
les
loope
popa
sahf
ds
loopne
push
js
adc
pop
add
cmp
xlat
xchg
jmp
cmc
cs
or
or
mov
cltd
loop
mov
lea
outsb
xchg
cmp
ret
dec
sbb
test
xor
adc
xor
loope
dec
and
repnz
pop
jge
gs
inc
popa
pop
lahf
test
lcall
jecxz
xor
stos
arpl
jg
push
xchg
xorb
lea
mov
fimull
mov
sbb
ret
lret
mov
pop
ja
ljmp
lret
out
mov
repnz
in
das
popa
outsl
jbe
ret
dec
fsubrp
xchg
imul
mov
ficoml
cld
xor
xchg
in
orl
mov
and
hlt
push
xor
mov
imul
pop
pop
adc
into
cld
xchg
mov
cmp
bound
sub
and
rep
lods
dec
mov
loop
or
sbb
rorl
scas
sub
jno
outsl
dec
inc
jo
jno
sub
inc
cmpsl
mov
jmp
in
test
cld
push
pop
jle
fs
mov
and
in
inc
sbb
rolb
dec
lret
es
xor
xor
ficompl
arpl
or
push
adc
cli
xor
popf
fidivl
mov
sti
inc
call
inc
xor
cmp
orl
and
xchg
cltd
xor
fbld
mov
pop
and
xor
shrl
inc
push
jae
push
cmpb
xchg
dec
es
fsubrl
jge
into
insl
and
icebp
sahf
repz
adc
pop
add
mov
push
pop
fs
adc
push
mov
inc
fnstcw
daa
mov
inc
inc
imul
pushw
gs
cmp
cmp
and
subl
aad
adc
in
jle
cmc
dec
test
push
pushf
mov
cld
repnz
cmp
loope
test
popf
mov
xchg
pop
mov
mov
repz
mov
dec
ljmp
fdivl
mov
aad
shrl
jbe
add
mov
ds
pop
js
xor
outsb
add
fldl
imul
adc
scas
push
cmp
dec
pop
dec
mov
pop
repz
test
xlat
in
mov
and
imull
mov
adc
mov
xchg
test
or
pop
iret
cmp
pushf
rcr
scas
sti
ret
cmp
ret
ffree
sti
data16
lea
cld
cmpsb
sub
xchg
test
bound
inc
insb
mov
std
mov
stos
mov
out
push
out
pop
out
xor
mov
xchg
data16
movsl
sub
inc
fdivs
pop
pop
sbb
clc
std
dec
enter
xchg
push
and
sub
xlat
mov
mov
sbb
fsubrs
xchg
rorb
sbb
jecxz,pt
insl
mul
pop
clc
lods
shl
push
mov
mov
mov
gs
insl
stos
jg
subl
imul
enter
outsl
cwtl
dec
mov
dec
pop
cmp
sbb
and
pop
cmp
out
sub
xor
iret
sub
mov
xor
das
outsl
jl
movsb
and
ss
adc
jecxz
gs
jo
mov
pop
or
mov
xchg
sahf
jecxz
mov
xlat
lret
insb
lock
mov
add
loopne
xchg
leave
aam
loop
fcoms
add
add
in
sbb
mov
gs
add
leave
scas
cmpsl
sub
mov
xchg
push
popf
adc
faddl
loope
add
in
push
mov
jg
aad
lea
stos
shl
adc
pop
into
mov
in
jo
push
repnz
mov
sbb
icebp
test
ss
lret
rorb
loop
aad
decl
adc
inc
es
hlt
sbbl
enter
jle
hlt
and
sub
ret
jp
cltd
loope
jns
sbb
stos
enter
jle
rcrb
and
or
out
test
ret
push
xchg
js
and
add
and
sub
jle
xlat
jo
sti
mov
jno
add
in
jo
pop
xor
ret
outsl
jnp
lock
xor
sbb
mov
adc
inc
aam
jmp
in
movsb
mov
addr16
or
sub
cmp
sub
push
jne
lea
ret
sbb
cmp
stos
pushf
add
adc
mov
cmp
daa
testb
sub
test
pop
cmp
jp
push
es
sbb
push
cltd
aaa
test
sti
incl
mov
aam
fnstsw
js
mov
in
sbb
stos
sbbl
scas
mov
lods
pusha
cmpsl
dec
and
test
scas
mov
sbb
push
push
pop
shlb
inc
rclb
enter
adc
mov
adc
mov
imul
insl
xor
fyl2xp1
mov
push
outsb
test
inc
adc
xchg
mov
inc
fs
jg
fldenv
jg
lahf
lock
xor
or
into
jb
lds
xchg
sub
leave
jb
add
iret
inc
adc
pop
add
out
adc
sbb
adc
cld
ss
push
pop
or
movsl
xchg
or
jge
cld
ds
inc
sub
jge
cld
adc
std
je
out
cmpb
pusha
stos
ret
int
nop
repnz
mov
stc
mov
popf
dec
insl
sub
push
sub
cld
bound
outsl
add
lcall
mov
sbb
loope
fnstcw
sbb
es
inc
xchg
push
pop
adc
out
dec
sbb
xchg
lods
in
sti
cwtl
xor
mov
cmc
add
push
out
es
call
adc
adc
outsl
xchg
xchg
xchg
mov
jns
scas
scas
sub
dec
int
pop
cmp
notl
or
es
cmpsb
incl
imulb
jbe
cmp
sub
jmp
add
and
fs
xor
es
jl
adc
insb
mov
fsubr
xchg
xor
and
bound
xchg
cmpsb
dec
dec
test
lcall
rcl
mov
jae
push
add
inc
xchg
cmpb
sub
push
mov
sbb
enter
sbbl
out
xor
data16
or
dec
jae
push
push
rolb
mov
push
adc
shlb
andl
daa
cs
inc
gs
outsl
or
imul
sub
lret
fstpl
hlt
sarl
inc
adc
inc
mov
mov
jle
inc
fsubrl
cwtl
sti
out
or
clc
ss
push
jg
push
dec
sub
push
lret
out
and
jb
iret
lds
pop
fcomi
loopne
scas
inc
lcall
fsub
and
mov
ret
stos
mov
add
and
lret
sarb
xchg
inc
iret
and
or
stos
cli
or
jo
xchg
pop
test
jne
dec
jne
adc
cmp
into
enter
repnz
sbb
popf
push
es
xor
rorb
clc
xor
sahf
or
add
adc
popa
shlb
sahf
lret
movsb
push
jb
iret
mov
sti
push
insb
iret
cld
dec
xchg
xchg
sbb
subb
and
or
lock
lods
xor
int3
fadds
lods
test
and
jecxz
in
mov
psubd
andb
hlt
dec
adc
sub
mov
mov
lret
adc
lods
mov
push
xchg
sbb
jecxz
pop
push
xchg
fisubrl
daa
mov
mov
dec
fisubrl
mov
mov
mov
aas
fldenv
cmp
mov
add
ds
decb
mov
int3
mov
xchg
add
jne
cmpsb
aas
stos
out
xor
cmpsl
rcrb
jo
imul
sub
sub
adc
mov
sub
sub
bound
cwtl
add
mov
or
lret
fimull
aas
lds
rcrl
mov
xchg
xor
jg
or
lds
adc
cmpl
inc
nop
fldcw
sti
outsl
in
daa
popf
xchg
sar
sbb
adc
fldenv
mov
pop
cmp
mov
inc
out
ja
les
aad
jle
fisubs
push
jae
jae
imul
test
out
mov
pop
xchg
sti
popl
pop
inc
sbb
scas
mov
cli
fiaddl
in
mov
push
add
nop
push
mov
sbb
jb
lods
mov
sbb
cmp
xchg
xchg
ret
xor
xchg
ret
xor
jle
sub
sbb
stos
cmp
lock
add
add
ret
daa
push
aas
push
inc
inc
es
mov
ja
pusha
pushf
fadds
and
in
std
jbe
add
pop
inc
push
pop
sub
sub
int
popa
lock
shll
shl
movsl
and
pop
popa
enter
dec
dec
and
fwait
push
enter
xchg
icebp
cwtl
fsubs
sahf
out
insb
jo
mov
loope
inc
repz
sub
dec
leave
xor
gs
push
leave
inc
je
cmpsb
shrl
dec
mov
dec
xchg
or
sub
jle
cwtl
int3
mov
pop
daa
ljmp
mov
xor
mov
sub
sbb
inc
push
idivl
aad
or
xchg
or
lock
and
mov
xorb
dec
bound
inc
mov
xchg
mov
scas
psrlw
cmp
in
mov
jae
cmpsb
mov
cmp
pop
jecxz
daa
dec
arpl
push
arpl
ja
xchg
das
pop
rcrb
xchg
scas
dec
mov
in
sti
cmc
rcll
xchg
int3
jne
xchg
mov
pop
mov
dec
divb
and
outsb
aad
xchg
test
inc
stc
lret
lret
xor
or
cmp
mov
icebp
cmc
jmp
cmpsl
or
aam
shll
adc
ss
pop
xor
adc
adc
xlat
shll
lds
inc
mov
add
mov
call
mov
stc
push
aaa
and
in
cs
lret
sbbb
mov
sub
sub
add
andl
xchg
and
sbb
push
mov
pop
loop
and
dec
arpl
subl
neg
push
dec
negl
das
fs
jmp
lret
jmp
pushf
lret
cld
pusha
mov
lahf
mov
or
mov
inc
push
outsl
fadds
or
push
mov
out
jb
mov
sbb
pop
add
sbb
xor
test
inc
aaa
int
or
add
fnstcw
dec
jne
and
sbbl
xchg
mov
inc
push
and
icebp
dec
pop
mov
hlt
loop
mov
hlt
mov
xchg
xor
es
out
rcl
test
flds
push
dec
push
xchg
dec
cmp
jnp
lds
cld
mov
sub
out
ds
mov
dec
ret
jecxz
or
ds
xchg
jo
in
jp
inc
pusha
push
fcmove
xchg
jb
or
rorl
rcl
repz
add
add
mov
add
add
jle
movl
popf
into
scas
or
subb
mov
jle
smsw
mov
lcall
xor
pop
mov
scas
add
sbb
sti
ljmp
stos
add
cs
outsl
inc
call
sbb
pop
ret
outsl
ja
aas
imul
mov
or
imulb
cmp
sbb
lret
jbe
xchg
jb
aam
pop
cmp
ret
movsl
aaa
and
shll
es
xor
cli
jmp
jne
js
xorl
inc
rorl
jl
int3
mov
sbb
or
clc
dec
dec
arpl
daa
mov
daa
xorb
dec
jbe
insl
adc
push
mov
sbb
lcall
dec
or
les
mov
and
jle
test
movsb
shrb
imul
iret
adc
int3
movsl
or
ror
sub
rcrb
mov
loope
repnz
mov
mov
inc
adc
fmull
pop
scas
ja
or
mov
mov
rcl
mov
ds
gs
int3
mov
pop
sbb
arpl
popf
dec
and
test
je
imul
jnp
and
push
push
pop
in
mov
mov
aam
movsl
xor
popf
test
mov
or
mov
mov
push
xchg
dec
into
jne
pop
pop
push
mov
shll
fneni(8087
gs
lods
rol
ja
rcll
lock
xchg
loop
inc
insb
fisubl
pushf
mov
test
mov
cltd
rcrl
and
jno
movsl
out
in
jp
insl
in
mov
push
or
lahf
push
in
push
aam
xor
loop
out
cmpsb
sar
fs
fnsave
or
xchg
js
outsb
test
pop
sbb
sahf
mov
push
sub
int3
out
out
xor
data16
fadd
cwtl
mov
inc
xor
and
xchg
stos
rolb
mov
jnp
pop
adc
xor
fcoml
cmp
mov
inc
es
mov
pop
xchg
inc
xchg
loopne
mov
movsl
out
insb
push
lret
push
mov
dec
push
xchg
cmc
push
adc
and
bound
xchg
imul
imul
dec
mov
repz
fwait
cli
loopne
adc
sub
add
add
inc
fmuls
jg
sub
cmovg
lods
and
lds
add
ss
cs
jg
lea
cmp
or
movsb
lock
or
loope
data16
mov
sub
das
aad
mov
scas
sub
mov
ret
jle
data16
jb,pn
notl
fsubr
jo
jp
loop
rorl
lret
pushw
js
xor
pop
mov
add
mov
jecxz
test
je
movsl
filds
pop
lock
mov
cs
xor
inc
scas
xlat
push
xchg
lcall
int3
mov
mov
aaa
mov
dec
fisubrl
mov
xchg
sbb
outsb
xchg
std
pop
inc
mov
sbb
lret
loopne
push
js
xchg
test
sbb
cvttps2pi
pop
cmpsl
xchg
adc
xchg
das
test
das
jle
in
dec
in
ja
push
gs
rol
fldcw
orb
sti
sbb
and
iret
cmp
daa
cmp
sahf
out
mov
fsubrl
outsb
loop
push
rol
aam
sbbl
decl
jne
cltd
outsb
xchg
sbb
push
xor
adc
jp
shl
cmp
sub
jmp
clc
sub
out
add
clc
mov
jge
orl
movsl
clc
and
test
and
adc
mov
cltd
into
mov
stos
sbb
pop
cltd
cmp
mov
xchg
cmp
cmp
xor
das
dec
fisubrs
add
pushf
sarl
in
sar
lret
xchg
popa
dec
je
push
push
dec
mov
decl
sbb
cmp
push
fsubl
pop
movsb
das
add
mov
mov
xchg
cld
shlb
push
mov
shll
mov
test
aam
dec
nop
lret
fisubl
push
jmp
and
mov
imull
test
aaa
jb
add
add
mov
dec
push
repz
inc
std
push
fildll
add
test
in
inc
mov
push
cli
mov
mov
lret
inc
icebp
lods
mov
sti
cmpsl
push
mov
nop
fs
mov
fadd
fs
cli
dec
lea
sub
cmp
mov
jge
fsubrl
mov
cmc
xchg
fwait
lret
mov
inc
push
ficoms
je
push
fucomip
daa
push
jecxz
xchg
shrl
pop
sbb
sub
inc
hlt
and
jno
loop
push
int
inc
fcoms
rolb
pop
je
cwtl
rcll
aaa
sti
ret
aam
in
jle
mov
mov
int
cmpsl
movsl
xchg
cmp
iret
testl
ror
sarb
stc
jg
cmp
and
pop
push
in
dec
mov
push
ret
movsl
je
test
in
jae
insb
imul
rcrb
daa
mov
nop
outsl
add
sub
int
fisubl
fnstenv
mov
or
cmp
ljmp
or
sar
push
shlb
fidivs
push
ss
push
sub
sbb
enter
dec
sub
rorl
into
sbb
jns
mov
and
add
call
rorl
xor
ret
pop
ja
mov
mov
imul
andl
xlat
bound
fiaddl
xorl
add
lods
inc
loope
cli
stc
fmull
jbe
sub
aam
shll
lea
dec
jge
mov
dec
sub
mov
pop
jns
das
je
mov
push
test
arpl
add
pop
test
add
or
sub
pop
fwait
pop
add
out
xlat
into
mov
popf
pop
pop
dec
adc
in
in
pop
call
add
cld
push
les
flds
rorb
sbb
popf
inc
xor
ret
mov
xor
insl
imul
adc
mov
hlt
add
rcl
jae
test
add
mov
jne
negb
add
ret
and
inc
test
call
shl
aad
roll
inc
cmp
pop
sbb
je
sbb
in
faddp
lcall
fisubs
das
insl
je
xlat
xlat
mov
dec
inc
in
xchg
outsl
out
add
fdivrp
push
xor
or
movsb
sub
int3
idivb
or
mov
scas
xor
jecxz
dec
leave
outsl
sub
or
jle
movsl
xchg
rolb
cmpsl
push
cs
dec
xchg
ret
imul
jb
into
inc
lcall
mov
sbb
stc
fdivp
aad
push
sbb
repnz
scas
ljmp
sub
imul
xor
movsl
loop
xchg
add
lods
icebp
mov
inc
out
cmp
pop
inc
mov
ret
cmp
add
lret
dec
pop
shrb
xchg
out
call
xchg
and
subl
inc
adc
push
push
test
aas
and
or
cwtl
aaa
fwait
or
js
sub
loope
xor
push
sbb
xor
out
xchg
jnp
outsw
inc
add
std
data16
or
ja
loope
sbb
fisttpl
push
movsl
aad
lock
pop
inc
test
imul
or
aam
lock
hlt
test
ja
loope
call
imul
nop
mov
cwtl
xor
popf
fistpl
xor
mov
add
cmp
insl
xor
scas
jge
in
out
and
imul
bound
imul
or
lcall
push
mov
pop
sub
das
lods
scas
out
roll
sarl
imulb
xchg
sub
cltd
sbb
jge
inc
jle
cmpsb
sub
jmp
sbbb
pop
pop
jb
mov
movsb
pop
lods
shlb
cmc
lret
dec
mov
cwtl
sub
in
inc
fcmove
mov
repz
out
adc
cwtl
repz
mov
and
mov
andb
mov
imul
push
shlb
jnp
in
fsubrl
cmpsl
out
inc
subb
sbb
jb
pop
imulb
mov
sbb
stos
inc
jl
pop
inc
gs
inc
ret
pop
in
mov
or
mov
cltd
out
gs
push
repz
fadd
push
cmpl
sub
out
xchg
sub
xor
push
clc
adc
hlt
push
sbb
and
outsl
or
into
cli
lret
adc
adc
int
or
inc
mov
scas
in
insb
adc
call
push
imul
push
out
js
call
fnstcw
xor
cli
ret
scas
add
rorb
mov
out
data16
icebp
aas
aaa
xorl
jae
rdmsr
jmp
daa
std
sbb
xlat
fdivl
jnp
clc
inc
andb
mov
add
and
aas
inc
mov
mov
ljmp
out
xchg
movb
inc
jge
mov
jge
repz
outsl
inc
into
fs
inc
sub
sub
xor
cmp
in
loope
mov
xor
stos
pop
xchg
into
hlt
sbb
adc
jae
cli
push
pop
xlat
pop
mov
xor
xchg
mov
cmp
cmp
push
jns
mov
jns
mov
js
jecxz
out
sub
jnp
adc
dec
pop
cmp
fists
xchg
or
or
pop
dec
dec
and
lea
xchg
das
adc
mov
xchg
xchg
lcall
mov
es
and
sbb
push
lods
sti
adc
hlt
or
outsl
dec
mov
cli
int
orl
jae
mov
sahf
divl
lods
lahf
movsl
dec
jns
repnz
sbb
push
xorb
mov
shrd
mov
fs
xchg
addl
xor
mov
push
xchg
daa
inc
addr16
mov
add
add
inc
outsl
and
rcll
xor
leave
aaa
adc
add
inc
jg
inc
notl
rorb
add
imul
leave
jp
and
add
movsb
scas
and
lds
clc
nop
sahf
push
pop
cmp
je
inc
pusha
jns
mov
mov
loop
xchg
xor
out
mov
out
testl
add
shlb
xor
ss
std
xor
dec
lds
sub
dec
cli
cmp
into
rclb
xor
push
insb
push
xchg
jle
mov
nop
repnz
xor
inc
xchg
ffreep
cmp
push
push
test
push
cmp
mov
xorb
or
in
or
call
loope
mov
imul
jp
or
sub
mov
mov
clc
sbb
sbb
mov
insb
push
pop
add
mov
mov
xchg
push
xor
add
out
das
inc
repz
xchg
lcall
jmp
inc
ljmp
push
pop
lods
testl
rclb
shrb
cltd
pop
pop
mov
aam
fisubrs
cs
loop
stos
add
inc
jl
mov
call
mov
push
mov
insb
adc
ljmp
or
pop
pusha
push
sub
dec
mov
mov
dec
inc
xlat
dec
stos
in
xchg
mov
mov
es
jbe
sub
jbe
cwtl
add
sti
dec
dec
adc
inc
lds
cmp
pop
ficomps
dec
push
mov
addr16
mov
add
jp
push
loop
cmp
decl
jne
insb
lock
sbb
jae
mov
loop
sbb
aad
jge
mov
scas
push
insb
icebp
stos
xor
jmp
inc
outsl
pop
xchg
jmp
iret
insb
inc
insl
imul
xor
jp
cwtl
adc
xchg
add
adc
test
jne
jg
add
adc
decb
je
xlat
clc
aam
xor
jne
add
nop
cmp
push
jnp
and
sti
fidivrs
aam
xchg
add
hlt
mov
out
dec
cmpsl
mov
fidivl
xchg
fwait
rorl
or
mov
mov
pusha
sbb
leave
cmp
lock
mov
xor
loopne
inc
adc
mov
push
add
mov
repnz
enter
dec
enter
rclb
in
shrb
daa
addr16
pop
cwtl
push
mov
adc
push
add
repz
cmp
mov
shll
inc
loope
jecxz
push
negb
dec
cwtl
rolb
add
add
mov
fucom
nop
mov
xchg
dec
mov
movl
hlt
test
sbb
adc
add
dec
or
iret
jge
jns
jnp
nop
fwait
dec
daa
insl
cmpsb
push
xchg
lret
ja
pop
sub
int
sub
in
negb
stc
add
inc
push
push
jo
mov
hlt
ss
mov
push
jne
clc
jnp
xchg
jo
scas
mov
adc
popa
rcrl
dec
fsubp
inc
rorl
outsl
das
bound
mov
test
pusha
add
mov
push
mov
test
mov
in
ficomps
jmp
cmp
dec
sub
sub
push
xlat
cmpsl
mov
clc
rclb
pop
cltd
insb
push
icebp
xor
dec
dec
das
mov
xchg
sbb
std
leave
cmp
xchg
test
roll
push
sbb
xchg
cli
jnp
stos
inc
rclb
in
push
dec
dec
rol
out
jne
clc
std
jb
lret
lcall
lret
cmp
fistps
in
cmp
das
pusha
test
sub
push
movsb
rorl
out
lret
aad
movsw
je
movsb
jp
rorl
jp
in
jnp
movsb
xlat
adc
sbb
jl
push
stos
ret
mov
movsb
inc
xchg
and
mov
stos
pop
add
mov
pop
pop
sub
jnp
sahf
pop
test
aas
jo
je
jmp
addr16
decb
faddl
lcall
aam
and
je
lds
sbb
loopne
addr16
movsb
in
popa
and
lds
push
ja
loope
jo
pop
in
addl
mov
adc
xchg
dec
add
scas
inc
adc
cmp
stos
sub
mov
loop
sbb
lret
out
inc
cmp
lock
call
je
jno
daa
lds
sub
add
lods
jl
imul
inc
out
out
aad
mov
xor
gs
and
pop
mov
cltd
fdivrl
push
mov
xor
sub
pop
sbb
dec
shlb
sub
shlb
sub
sti
leave
stos
fwait
popa
out
enter
jnp
or
test
mov
mov
push
or
lret
les
mov
test
dec
mov
jbe
jle
mov
movsb
shlb
ljmp
sbb
pop
mov
repnz
push
push
pop
pop
andl
data16
sahf
mov
aaa
int
sbb
shll
fdivl
sub
pop
sbb
xor
pop
icebp
add
push
cmp
and
frstpm(287
stos
inc
and
mov
test
nop
rol
jp
fxch
mov
int3
nop
shlb
shl
cmc
mov
lea
lock
clc
sub
fdivrs
or
dec
loope
or
jns
out
aas
xchg
in
jecxz
shll
push
scas
sar
dec
jo
xchg
mov
inc
dec
popa
or
les
fldl
xchg
push
cmpsb
lret
rclb
mov
shrl
cmpsb
mov
movsb
shl
add
mov
popf
frstpm(287
mov
adc
mov
sahf
lret
jg
pop
gs
push
pop
push
mov
jae
cli
jg
aas
mov
sub
out
stc
lock
jle
aam
sbb
sub
pop
sub
repnz
sub
repnz
icebp
pop
adc
out
scas
hlt
dec
test
dec
mov
adc
stos
test
cmp
jo
xlat
aad
clc
push
out
dec
and
adc
test
mov
jg
lods
dec
gs
movsl
or
inc
insb
mov
pusha
fcoms
mov
ret
mov
cmp
sarl
insb
inc
repz
lods
xor
sub
arpl
add
scas
lods
das
iret
cld
jne
les
popf
test
push
pop
aaa
sete
push
repz
stc
pop
cmpl
push
xchg
ds
fiadds
in
fildll
cmp
push
test
push
outsl
mov
jge
push
sbb
outsb
out
mov
loope
testb
es
adc
mov
loop,pn
mov
or
das
mov
and
pop
jae
cmp
and
es
jl
or
lea
insb
es
pop
pop
xchg
fsts
lahf
push
cmp
cmp
inc
aad
xchg
mov
lret
lods
add
dec
inc
pop
jg
cmpsl
jg
mov
jnp
mov
mov
jbe
in
test
inc
pop
mov
push
int3
mov
adc
cli
mov
jecxz
cmp
out
mull
push
push
mov
jns
daa
dec
loope
dec
mov
ror
adc
and
mov
cmpsl
call
insb
sub
lods
push
adcb
fsts
arpl
testb
lods
sahf
or
repz
xchg
shll
loop
addb
out
mov
inc
xchg
in
xor
jae
mov
ja
dec
xchg
in
xlat
pop
fdiv
push
jo
and
jne
pop
popf
mov
loope
jbe
pop
push
add
ja
je
mov
push
sti
repz
adc
mov
cwtl
push
add
mov
leave
xchg
stos
or
mov
sbb
lods
pop
into
lods
or
push
rolb
pop
imul
mov
insl
test
fcoms
jl
adc
push
inc
rcll
scas
dec
pusha
fistl
cli
and
mov
loope
loope
jns
xlat
mov
jns
negb
movsl
add
and
shll
adc
sub
jle
jo
lahf
shl
or
mull
adc
sbb
pop
and
daa
or
int3
jmp
addr16
add
dec
enter
clc
test
dec
mov
es
nop
gs
dec
xchg
xlat
fidivl
pop
fiadds
lds
subb
loope
inc
fwait
mov
and
dec
xchg
inc
popf
jmp
rcll
xlat
sbb
popa
mov
push
xor
lea
jae
and
bound
lods
adcb
js
mov
or
inc
std
stos
mov
cld
mov
ss
inc
sbb
enter
outsb
fisubs
into
and
dec
rclb
mov
push
sbb
cmp
mul
or
fildll
lcall
dec
inc
lahf
popa
lds
xchg
roll
cmp
movsb
rcrb
shr
mov
mov
insb
data16
jo
adc
icebp
and
pop
stos
lret
stos
add
pushf
int
xchg
inc
and
sub
jmp
rolb
dec
pop
inc
iret
xor
push
jg
into
mov
out
mov
daa
loopne
mov
in
pop
sbb
inc
scas
add
inc
cmp
ret
test
shrb
ds
sub
iret
cmp
inc
lahf
inc
sub
adcb
addl
and
push
sbb
ret
mov
out
fwait
cmpsl
mov
xchg
insb
movsb
popa
icebp
imul
cld
xchg
lds
sbb
jns
lret
rclb
mov
or
jno
adc
push
fs
in
mov
int3
sbbb
jp
cwtl
push
push
mov
mov
out
lcall
ss
mov
in
mov
imul
dec
in
sbb
outsb
or
imul
inc
sub
dec
clc
repnz
xor
push
ss
stc
clc
ret
jne
sti
mov
jbe
aam
jne
mull
dec
les
push
add
push
add
enter
idivb
fmull
roll
out
or
pop
jb
mov
ds
cwtl
sti
mov
mov
popa
enter
adc
or
cmc
dec
pop
cmp
movsl
clc
pop
mov
pop
sub
mov
inc
popa
and
pop
inc
xor
mov
xchg
aas
imul
addr16
push
fcmovnbe
xchg
sbb
sub
lods
out
pop
push
dec
and
and
fdivrl
xor
pop
cwtl
jmp
je
bnd
cmpsb
test
sub
jnp
cmpsb
data16
sub
add
and
jle
cld
pop
call
xchg
call
movsb
and
arpl
pop
iret
xor
loope
fmull
and
inc
divl
inc
or
je
push
sub
addr16
mov
mov
cmp
je
fs
popa
aad
dec
inc
out
notl
stos
adc
jo
xchg
imul
xor
xchg
in
mov
jp
push
mov
test
add
inc
test
lret
pop
shll
dec
shr
and
add
lods
hlt
mov
mov
jnp
ja
stos
push
dec
insl
push
popf
xchg
cmp
lcall
adc
adc
out
hlt
punpckhwd
mov
pushf
roll
aam
ja
repz
ljmp
jle
cmp
cmp
mov
inc
pop
cld
stc
mov
outsl
pop
cwtl
in
sbb
aad
mov
mov
sbb
dec
shr
outsb
jns
xor
cwtl
sti
mov
inc
ffree
mov
testl
jns
dec
mov
push
rep
mov
lds
inc
mov
pop
jae
popa
rcrl
bound
lret
adc
jo
andb
filds
lods
mov
movsl
pop
adc
scas
lea
add
dec
mov
fsubs
inc
daa
lret
dec
xchg
arpl
dec
push
lods
jl
test
data16
fstps
out
inc
mov
push
sub
dec
outsl
jne
insb
sti
inc
aad
cld
nop
mov
push
jno
bound
pop
insb
sti
jne
shlb
movsl
in
push
sbb
adc
fdivp
jecxz
sahf
in
fcmovne
cmc
test
mov
xchg
xchg
data16
fcomps
dec
mov
iret
jno
cmp
add
adc
lcall
cmp
push
xchg
cld
xchg
mov
xchg
push
mov
out
fstpt
xchg
cmpsl
xor
add
lods
lahf
inc
jne
cmc
pop
pop
cmp
mov
or
je
sub
pop
mov
in
fcoml
sbbb
stos
loop
fbstp
sub
ret
call
xchg
adc
xor
xchg
inc
or
fiaddl
ret
insl
jb
lock
ror
aaa
mov
sub
ss
jle
pusha
pop
xor
dec
push
cmp
rcll
add
or
imul
aad
fisttpll
sbbl
nop
and
dec
jge
mov
out
push
aad
hlt
pop
sub
pop
cmp
rcrb
mov
or
add
adcb
jnp
scas
sti
lret
cmp
stos
int
shll
xchg
das
jnp
sub
xchg
pop
gs
aas
and
fstpt
inc
std
shll
arpl
inc
clc
lret
sub
push
les
rcl
cmp
rcrb
stc
mov
mov
stos
daa
out
inc
lahf
rcl
pop
movsb
cmp
jb
jmp
push
mov
ja
push
adc
popa
cmc
cmpsb
mov
jne
push
rclb
pop
gs
or
in
jl
xor
sub
dec
jg
fcoms
and
sub
xchg
push
sub
fidivrl
push
fildll
add
outsl
push
orl
adc
adc
mov
test
pop
inc
pop
fcomps
xchg
lea
and
cmp
icebp
mov
jecxz
xor
fdiv
pop
or
push
lret
lds
loope
std
loopne
ret
movsl
cmp
dec
mov
test
xchg
mov
aam
xchg
mov
mov
iret
cli
leave
movsb
mov
cmpl
fnstcw
fidivl
jl
fnsave
cmc
imul
filds
ds
ljmp
jmp
jae
das
sbb
pop
cmp
jnp
mov
push
adc
popa
dec
inc
dec
fcmovnb
jmp
in
cmc
jnp
gs
dec
adc
fcmovnbe
mov
push
sbb
test
popa
jle
add
cmp
lea
or
aad
jbe,pn
insl
dec
sahf
in
popf
push
mov
mov
subb
xlat
popf
test
fidivs
jg
mov
mov
pop
sub
xor
adc
mov
sub
mov
sub
dec
rcrl
test
popf
not
aam
repz
xchg
es
dec
gs
mov
gs
lock
xor
nop
movzwl
movsb
rclb
sub
cmp
mov
repz
repz
mov
loope
mov
les
lods
add
push
push
push
ud2
pop
push
mov
mov
outsl
pop
adcb
mov
sbb
sub
insb
jbe
mov
xchg
mov
xor
or
iret
stc
rcll
mov
fists
inc
int
stos
mov
fsubrl
fcmovbe
loop
mov
push
or
push
out
xchg
jmp
mov
sub
mov
out
lea
jmp
les
dec
mov
add
jge
icebp
dec
jbe
lea
cs
scas
cli
jg
out
sub
out
inc
jp
mov
pop
popa
rcrl
mov
into
push
lcall
pop
je
stos
xchg
scas
decl
inc
push
mov
jnp
in
inc
adc
adc
mov
mov
or
mov
jae
dec
xor
push
ss
pop
jp
mov
rcr
jb
add
mov
jmp
xchg
hlt
inc
js
inc
xor
xor
movsb
sbb
adc
cmp
or
fwait
bound
mov
push
mov
stc
adc
and
shll
rcll
pop
sahf
dec
aad
pop
std
cld
mov
dec
aad
inc
mov
loopne
adc
jnp
aam
lods
scas
sbb
or
mov
lcall
pushf
jge
mov
pop
mov
cmp
rcrb
rcr
sti
pop
pop
jle
cmp
mov
ret
lods
mov
dec
dec
mov
push
hlt
sbb
xor
scas
mov
xor
test
sbb
lods
cltd
shrb
pop
inc
test
push
cld
subl
xchg
imulb
jo
add
clc
add
jecxz
jbe
lahf
cmpb
out
or
jb
fisttpll
xchg
mov
movsl
lret
and
or
cld
movsl
out
push
inc
dec
jno
pop
stos
les
std
outsl
hlt
xchg
pop
cmpsl
daa
xor
push
dec
decl
imull
mov
insl
lcall
mov
fidivrl
push
stc
cmp
mov
fistpl
aam
and
out
cmp
jle
sbb
dec
push
sahf
cmpsl
xor
fidivrl
sbb
hlt
lcall
adc
push
sub
in
inc
jne
mov
outsb
sbb
push
pop
lds
mov
push
gs
pop
out
fwait
xor
lock
lods
out
repnz
mov
cwtl
jle
cmp
add
xchg
test
cmp
sbb
daa
push
lock
addl
pop
call
aad
pop
sbb
mov
out
pop
sub
add
adc
cmp
sub
inc
dec
inc
push
inc
stos
rolb
jle
or
dec
pop
sbb
and
movsl
xlat
cli
cli
das
cmp
sbb
and
clc
lods
fsubl
in
jns
test
int
shlb
xchg
mov
std
sub
hlt
nop
cmp
push
decb
pusha
mov
or
xor
xchg
inc
xchg
cs
push
mov
je
or
cmpb
fmull
add
xor
aaa
add
or
sbb
dec
rol
mov
inc
and
repnz
rorb
sbb
testl
push
call
lods
aaa
adc
lods
and
nop
scas
cmp
pusha
mov
notl
push
and
jecxz
repz
in
mov
xchg
push
dec
ret
or
daa
xchg
imul
sbb
andb
adc
std
xlat
add
minps
jl
mov
sbb
mov
or
jmp
enter
inc
orb
pop
and
push
ja
mov
pop
lock
lods
pop
call
imul
jb
mov
mov
pop
sbb
dec
es
aas
into
mov
scas
gs
jmp
xchg
lea
stos
sub
xor
enter
mov
mov
outsb
dec
cltd
lock
add
cmp
lret
aas
popa
xor
xlat
ret
pop
sbb
movsb
sti
sar
lea
imul
cwtl
dec
push
test
inc
jg
ss
shlb
aas
adcb
ss
pop
cmp
add
int
push
test
pusha
rcrb
out
inc
mov
pop
iret
dec
test
ret
push
ds
and
das
insl
and
cmp
inc
xchg
cmp
scas
fs
fldenv
popa
jg
sbb
outsb
xchg
test
dec
mov
cmp
sub
add
adc
popa
sub
movsl
ss
push
and
adc
mov
cmpb
mov
call
subl
pop
dec
movsl
cmp
div
mov
lcall
sub
ds
or
mov
jnp
sbb
jno
push
insb
outsb
shl
insb
and
pop
xor
jmp
or
mov
out
dec
mov
mov
jecxz
fwait
adc
lret
aad
inc
sub
fildll
add
or
mulb
xor
sub
inc
or
call
int
testl
inc
insl
filds
sbb
and
in
cmpsb
adc
lods
fisubrl
popf
xor
inc
xlat
mov
testb
adc
stos
jae
mov
dec
outsl
push
test
jno
lahf
add
lods
xor
js
jecxz
xor
xchg
popf
test
push
into
cmpsb
dec
adc
out
cmp
fists
out
inc
std
push
sbb
jp
es
movsb
out
ss
insl
adc
sub
repnz
cs
shll
in
insb
xor
push
push
mov
jle
mov
aas
fdivl
ja
fdiv
in
rcr
sti
subb
mov
jb
inc
shll
in
cwtl
mov
xorl
nop
push
mov
fs
push
movsb
add
pop
push
add
loopne
push
dec
aam
pushf
sti
xor
mov
js
xlat
shlb
cltd
pop
bound
insb
fnsave
jb
add
popf
nop
sub
sahf
fwait
stos
enter
jns
mov
out
cltd
xorl
sbb
sub
in
cmp
push
sbb
or
push
inc
add
fdivrl
xchg
scas
push
stos
push
cmpsl
ret
mov
nop
pop
cmpsl
cmpsl
add
leave
cmovnp
pop
out
loope
mov
mov
and
scas
scas
cmp
or
iret
inc
jmp
jl
aam
les
scas
stos
ret
inc
inc
out
repnz
jnp
lods
mov
dec
sbb
iret
pop
sbb
in
mov
inc
jg
push
inc
pop
pop
repnz
xor
xchg
inc
cmovae
jecxz
mov
sub
aaa
int
mov
fcmovb
jecxz
inc
push
std
ljmp
xor
push
imul
in
inc
xlat
jmp
mov
out
cs
mov
in
mov
mov
mov
xor
pop
sub
jne
and
loope
sub
dec
inc
shll
xor
rcrb
inc
leave
pop
push
sub
popa
mov
ret
pop
mov
addr16
xchg
les
mov
aad
stos
add
inc
arpl
mov
sbb
mov
xor
addr16
ja
shlb
push
and
pop
popf
xchg
inc
adc
xlat
int
xor
rclb
mov
sub
lea
xchg
ss
jno
xchg
stos
lret
mov
test
push
lds
mov
xchg
mov
adc
lahf
mov
sbb
inc
push
lcall
ja
xlat
inc
adc
fwait
subl
popf
dec
es
dec
push
int3
push
inc
sub
pop
sbb
fidivl
mov
js
sbb
pop
mov
inc
adc
dec
mov
jns
jmp
dec
movsb
dec
icebp
mov
insl
pop
adc
and
das
xchg
jo
lret
enter
lcall
mov
in
adc
sbb
lock
clc
mov
sbb
xchg
inc
rcrb
jg
sub
mov
and
and
je
xchg
in
mov
setl
or
or
lods
stos
pop
fldenv
shll
clc
roll
or
fwait
push
sarl
sub
or
dec
lret
xlat
mov
mov
aas
pop
lods
push
or
fisubl
dec
loopne
push
nop
ret
sub
cmpsl
mov
sti
leave
cmp
in
mov
push
shll
ficomps
cltd
jp
add
jb
or
out
mov
fs
je
push
mov
lods
cld
or
pushf
pop
add
jbe
add
mov
jae
dec
sbb
add
mov
lock
jo
lcall
mov
jns
xchg
pop
mov
pop
jb
mov
lods
xchg
mov
cs
adc
leave
jae
bound
mov
add
out
sbb
sbb
xchg
cmp
or
pusha
bound
add
sbb
orb
or
mov
lahf
iret
out
xchg
mov
or
cmpl
pop
sti
xchg
adc
xchg
inc
cmp
sub
or
fisubs
mov
jns
shrb
movsb
add
push
mov
imul
inc
inc
adc
xchg
mov
xor
push
lea
and
out
fstps
scas
cwtl
stc
cmp
out
movsb
mov
imul
add
mov
loopne
and
sarl
repnz
stos
jnp
jae
pop
xchg
and
loop
rep
shlb
or
push
mov
add
sub
push
aad
jg
xchg
or
dec
sbb
jp
in
ret
ja
popf
scas
nop
jne
push
adc
add
xchg
dec
cli
in
sub
in
test
mov
pop
ljmp
mov
push
bound
out
mov
jge
inc
xor
dec
push
and
cld
push
arpl
enter
pop
out
ret
or
lret
movsb
repnz
nop
sbb
sbb
in
jmp
rcrl
call
or
lahf
push
mov
daa
mov
push
mov
shrb
jl
clc
and
adc
adc
xchg
add
scas
jne
dec
js
adc
sub
out
dec
scas
test
daa
pusha
repz
push
adc
sbb
inc
sti
cmc
fbld
add
loopne
in
mov
cmc
fdivs
cwtl
xchg
adc
pushf
sbb
cmpsl
and
ljmp
cld
jge
cmp
popa
mov
xchg
adc
ffree
adc
je
mov
and
lods
and
lret
shll
pop
fnstcw
enter
je
sbb
inc
xchg
push
or
orl
jae
mov
push
subl
mov
es
push
cmp
cmpb
mov
fdivl
loope
pop
ljmp
sbb
sub
ljmp
stos
mov
icebp
xor
fdivrs
lds
jmp
pop
scas
pop
shll
les
or
or
je
mov
addr16
data16
sbb
mov
call
fs
icebp
out
or
clc
cmp
ljmp
ljmp
outsl
pop
mov
cmc
stos
ret
mov
push
or
push
nop
add
adc
and
cmpsb
ja
jbe
iret
and
fdivl
xor
jg
lods
std
in
or
push
fadd
ret
int
inc
cs
xchg
push
lds
paddq
adc
sub
idiv
sub
mov
hlt
popf
mov
int3
adc
enter
jg
movsl
and
sub
adc
sub
lods
int
notb
loope
or
inc
or
xor
mov
mov
mov
outsb
xor
jge
imul
pop
je
inc
mull
jecxz
pop
das
jmp
mov
daa
and
int3
inc
cmc
loopne
lds
int3
push
inc
mov
test
mov
adc
add
rorl
repnz
mov
scas
or
xchg
repz
movsl
aaa
je
adc
lods
xchg
adc
mov
repz
or
jbe
sbb
subl
sub
jmp
inc
cwtl
jl
dec
adc
pop
out
xlat
cmp
inc
int
jge
push
xchg
jno
inc
iret
int
cmp
enter
leave
sbb
inc
icebp
insl
xchg
xlat
in
es
test
sarb
rolb
cmpsl
int3
push
call
rclb
cld
dec
adc
movsl
pushfw
add
das
fwait
jmp
jb
pop
fsubrs
dec
in
mov
sbb
jno
xor
cmpsb
fadd
imul
sahf
mov
subl
sahf
mov
insb
xor
pushf
or
lcall
prefetch
xor
cld
dec
mov
scas
push
cld
imul
jl
sbb
dec
add
fcoml
scas
leave
sub
mov
ret
pop
inc
dec
mov
and
push
mov
xchg
outsb
aam
pop
mov
push
in
mov
sbb
pop
divb
or
imul
cmp
gs
gs
push
bound
test
imul
popl
adc
xchg
ja
loope
addr16
sub
pushf
std
jbe
pop
and
push
push
fisttps
cmp
inc
dec
jl
lcall
lcall
mov
mov
mov
mov
mov
lret
repz
fiaddl
mov
mov
lahf
sub
inc
pusha
ret
push
xchg
mov
ja
push
push
pushf
cs
fistps
jle
push
inc
pop
push
jp
jae
cmp
in
xor
add
sarb
pop
xor
pushf
push
scas
ljmp
and
jg
jecxz
or
mov
cmp
cmp
jg
xchg
mov
xchg
mov
add
dec
mov
enter
add
movsl
xchg
imul
arpl
std
lret
dec
add
and
lods
mov
mov
arpl
push
fcmovu
xchg
jmp
adc
mov
sub
test
xchg
jns
xchg
ds
pop
push
push
xchg
jl
stos
and
cmp
in
or
adc
sub
mov
scas
or
bound
adc
jle
fwait
sbb
fs
mov
fldt
inc
mov
call
cmp
dec
in
movsl
and
jmp
scas
jmp
mov
jle
and
ret
mov
pop
mov
adc
mov
test
sbb
cmp
nop
fxch
dec
std
ljmp
adc
fsubrl
inc
mov
push
aad
adcb
jecxz
pop
stos
xchg
jecxz
in
and
outsb
jae
and
outsb
sub
cmp
dec
rcr
mov
add
sbb
mov
push
rolb
pop
ss
iret
cmc
dec
lret
clc
and
pop
std
fstpl
sbb
or
icebp
fstl
or
test
or
push
mov
imul
loope
and
es
jp
in
add
mov
xor
gs
pop
or
std
inc
out
imul
jp
imul
push
outsb
add
mov
jo
jge
jnp
repz
inc
sarb
jecxz
mov
dec
xor
or
pop
mov
lea
xor
pop
xlat
adc
xor
xchg
into
jmp
ss
fcmovnu
rcrl
mov
cmp
shlb
pop
in
push
cmpsl
pop
adc
movsb
out
scas
adc
frstor
test
iret
loope
pop
xchg
test
or
cmp
push
pushf
lods
movsl
test
sbb
or
pop
xchg
ret
mov
sahf
out
dec
mov
fwait
test
xor
mov
cltd
std
movb
into
jo
in
lret
xor
aas
andl
loop
inc
xchg
inc
arpl
std
imul
and
mov
push
push
or
mov
or
xchg
pop
or
add
cwtl
leave
inc
mov
add
int3
mov
adc
lock
mov
and
adc
adc
push
test
and
sbb
xchg
jns
xor
arpl
pop
pop
shrb
jbe
add
rcrb
jp
pop
mov
jb
jecxz
fwait
fwait
test
call
add
xor
push
xchg
push
inc
fwait
rorl
into
xor
sbb
cld
shrb
xor
leave
sub
dec
lcall
rcrb
cmp
insl
das
ds
xor
test
add
cs
and
xor
sbb
scas
stc
sbb
mov
or
or
imul
out
ss
stos
cmp
hlt
jle
cmpsl
mov
rcrb
sahf
push
test
es
lock
mov
in
mov
sub
inc
xlat
pushf
inc
jmp
iret
ficoms
in
mov
mov
stos
fcoml
pop
in
and
shlb
sarl
add
stos
sub
inc
and
dec
jmp
and
insl
lret
jno
cmp
dec
and
sub
mov
jbe
jns
xchg
sti
add
mov
xor
rorb
push
jo
jmp
dec
inc
sti
mov
fcomip
mov
xor
cmp
movsb
inc
bound
and
xor
add
xor
pop
add
mov
movsb
pop
pop
ja
daa
jae
addr16
jmp
outsb
cmp
mov
pop
mov
fistpl
cli
inc
mov
mov
inc
sbb
push
iret
popa
pop
push
push
insl
xchg
mov
add
in
cmp
push
jge
fnsave
int3
loop
pop
fldcw
or
sub
dec
add
mov
fnsave
push
cmpsb
jnp
negl
or
cmp
push
sti
mov
rcr
jle
out
fidivl
ret
aad
lea
mov
imul
lock
filds
dec
add
mov
jecxz
and
icebp
xor
ret
and
aad
testb
mov
or
imul
pop
and
fnstenv
sbb
imul
insl
or
lret
fs
faddl
bound
fists
sub
inc
pop
push
rep
sbbb
insb
stos
shrb
ljmp
inc
shl
sahf
test
mov
mov
es
sbb
pop
in
inc
push
mov
in
inc
adc
inc
daa
sbb
lret
jnp
mov
hlt
or
insl
and
int
sbb
daa
push
dec
pop
les
orl
sub
loopne
or
sbb
and
vpacksswb
add
jo
cmpsb
std
movb
out
daa
leave
imul
fistpl
dec
cvttps2pi
cmp
xor
stc
loop
sahf
addb
xor
fsts
cwtl
sub
xchg
lahf
lock
inc
bound
insl
in
psrlw
arpl
imul
lret
cli
cmp
dec
push
sub
aad
push
mov
adc
sub
adc
and
and
pop
cmp
int
cli
push
or
pusha
mov
out
popl
aad
sbb
mov
out
lods
sub
arpl
test
or
stos
testb
mov
in
bound
into
mov
aad
in
int3
cmp
mov
push
test
shll
shll
mov
or
pop
sbb
lret
inc
pop
add
mov
clc
add
mov
fidivl
xchg
scas
mov
std
hlt
stos
clc
push
xor
bound
aas
jmp
inc
and
push
scas
cmp
add
leave
imul
in
mov
pop
in
jmp
out
dec
dec
sbbl
ret
add
adc
mov
sub
in
inc
push
mov
xor
adc
out
imul
or
sub
popf
fistl
test
xor
orb
cltd
mov
dec
dec
push
pop
imul
push
pop
fsubl
dec
dec
fbstp
or
imul
and
cmpsl
lcall
mov
or
push
and
sub
jb
xor
adc
pop
or
dec
clc
pop
arpl
loope
add
sub
pushf
std
imul
shlb
enter
movsb
xchg
add
out
and
cmp
cmp
inc
pushf
nopl
sti
fsubl
cmpb
push
je
adc
insl
out
into
cmc
pop
mov
dec
and
cltd
push
push
out
cmp
mov
jae
inc
jecxz
into
in
dec
rcr
jae
xchg
lret
sahf
mov
hlt
mov
sahf
lea
das
fs
notb
adc
mov
add
jp
and
lds
mov
in
pop
sub
test
cmp
xor
in
xchg
out
push
mov
dec
inc
jmp
adc
xchg
or
fwait
aas
jmp
testl
push
adc
jg
xor
int3
mov
mov
jmp
js
outsb
stos
je
cld
test
dec
cmp
jle
and
sbb
sub
jne
or
iret
jno
aam
mov
aam
shrb
mov
in
lods
stos
arpl
jo
add
push
movsb
stos
push
mov
enter
pop
add
cmp
movsb
popf
popa
dec
loopne
mov
fadds
fidivrl
shlb
in
jge
ds
stc
xchg
cli
cmpb
sub
mov
call
lret
ss
sar
testb
cmpsb
imul
xor
adc
je
test
xchg
sahf
mov
sar
push
mov
mov
xor
sti
jle
add
cmpl
sub
sbbl
and
fwait
and
and
pop
add
dec
push
mov
jno
sub
jnp
mov
push
ss
inc
inc
lret
js
and
jnp
sub
bound
icebp
ljmp
or
jmp
in
aam
movsl
sub
push
cmp
aam
sbb
inc
dec
aam
jbe
fwait
push
push
in
jl
mov
sti
jecxz
idivl
ret
mov
mov
popf
xchg
cmpl
stos
pop
mov
push
jno
and
inc
sub
leave
add
jne
and
cld
sbb
jl
loope
xor
popf
or
mov
ljmp
cmp
out
ret
cs
fnstcw
rcrl
xor
popa
ljmp
and
mov
lahf
mov
push
and
ret
push
fstl
jecxz,pn
lahf
dec
jl
jg
ja
pop
xor
jbe
popf
or
xor
pushf
cltd
stc
push
pop
sub
xchg
and
stos
sub
pusha
or
push
jns
jle
cmp
jns
xchg
test
pop
xchg
sub
pop
mov
lds
jb
out
xchg
repnz
cmpsb
adc
lds
clc
shll
sub
idivl
push
jns
movsl
xchg
xchg
push
xchg
mov
lcall
andb
mov
cmp
repnz
cmp
popa
icebp
in
sarl
lds
rorl
push
xchg
lret
xor
arpl
pop
push
add
push
shll
ss
cld
sub
mov
and
roll
mov
lret
or
pop
pusha
popa
fnstcw
xlat
lds
js
lcall
cmp
je
js
push
mov
ret
and
int3
inc
or
push
ss
adc
cmp
lods
mov
cmpsb
lahf
add
mov
rolb
clc
lods
cltd
pop
test
sub
rcll
mov
sbb
ljmp
pop
lret
cmpsl
jl
andl
in
mov
mov
adc
fldcw
test
loopne
add
test
mov
cwtl
sub
mov
xor
fcmovnbe
aaa
lcall
ss
inc
pop
push
sbb
ficompl
mov
aas
or
sub
shrb
mov
pop
push
adc
mov
lcall
xchg
xor
adc
clc
aaa
ds
mov
cmpsb
and
loopne
jno
and
sbb
es
popf
call
dec
push
xchg
stos
out
jnp
xchg
dec
sbb
mov
adc
gs
pop
ret
sbb
xor
cmp
lods
xchg
mov
mov
icebp
fsubl
jmp
cmp
jl
icebp
testb
daa
mov
inc
mov
mov
icebp
cmp
cmc
cs
roll
mov
mov
icebp
sub
push
rep
stos
mov
push
dec
repnz
and
dec
mov
adc
test
mov
mov
shlb
int
imul
dec
insl
cmp
repnz
mov
and
addr16
xor
stc
pop
and
rclb
add
mov
xchg
sub
filds
in
xlat
add
and
sub
xor
imul
stc
loope
mov
add
ljmp
cld
adc
icebp
andl
sbb
pop
adc
sub
in
inc
mov
or
mov
pusha
lea
ret
testl
insl
ss
call
jo
mov
push
jb
xchg
push
xor
enter
ror
jg
les
jmp
into
xchg
and
sub
push
lret
sbb
jno
pop
jmp
mov
mov
andl
scas
pop
jnp
or
inc
or
cmp
cmpsb
jmp
mov
es
adc
out
jle
mov
outsb
mov
ret
and
shlb
xor
and
jge
jns,pn
iret
xchg
dec
cmc
cmc
and
rclb
jle
and
push
xchg
in
xchg
cltd
insb
mov
xor
scas
jecxz
or
popa
cmp
inc
jo
jg
decb
lods
aaa
cltd
adc
data16
mov
iret
xchg
xor
int
enter
jle
sar
mov
rorb
fprem
scas
int3
xchg
pop
gs
in
out
push
test
xchg
mov
lcall
pop
lcall
jmp
xor
mov
xchg
and
cmp
shr
loopne
lret
addl
ds
xchg
mov
scas
mov
mov
rcrl
dec
mov
stos
push
sahf
ret
lret
fs
lret
loopne
lcall
out
pop
aad
xchg
jne
dec
dec
dec
cmp
fs
fadds
jmp
outsb
xor
stc
mov
jb
cmp
dec
addr16
inc
mov
xlat
adc
adcb
fcmove
inc
adc
leave
aam
jo
lret
dec
jmp
lea
cmpb
pop
push
sbb
push
cmp
jne
inc
mov
fsub
jo
add
fcoml
dec
rcrl
inc
mov
cmp
lds
aas
pop
cmp
mov
addr16
xchg
cmpsl
ss
mov
subb
pop
cmpsb
shlb
mov
and
or
xchg
push
clc
repz
pop
test
ja
push
mov
inc
and
adcb
ret
mov
inc
pop
push
outsb
xorl
in
push
pop
pop
inc
mov
iret
into
and
dec
jae
mov
jne
in
andl
lea
test
cmp
stc
pop
pop
in
jmp
in
jno
loopne
xor
xchg
push
push
push
mov
dec
jb
lret
test
sub
repnz
fdivrl
cwtl
pop
dec
in
push
loopne
and
jle
sbb
out
fdivs
or
dec
dec
negl
xchg
pop
sub
jge
test
pop
and
mov
dec
push
sti
inc
and
andl
lret
jno
dec
sti
iret
xchg
push
adc
and
xchg
push
cmp
push
sbb
sub
fwait
or
sbb
sahf
inc
and
out
aad
or
ja
sbb
dec
fadd
cld
in
cvtps2pd
xchg
mov
cld
addr16
xchg
int
fwait
mov
sbb
fnstcw
roll
mov
iret
add
out
bound
jnp
sbb
fnstsw
xchg
and
push
ret
push
or
cmc
mov
clc
popf
stos
xor
sub
xor
out
cmp
aas
or
inc
mov
out
movb
xchg
mov
push
out
lods
lret
fiadds
lods
call
xchg
sahf
adc
push
stos
xor
jne
dec
push
mov
adc
xor
imul
cmp
xor
push
loop
push
inc
arpl
clc
xchg
mov
ret
test
mov
adc
pop
cs
mov
cld
mov
popa
stos
cmp
lcall
loop
or
fmul
stos
cmp
imul
cmp
sub
jg
das
gs
loope
dec
je
imulb
ficoml
bound
push
dec
aaa
icebp
xchg
mov
push
inc
fcomps
cmpsb
outsb
mov
mov
int
stos
pop
popa
pop
add
aam
fisttpll
js
sub
hlt
daa
leave
mov
imul
sarb
cmp
xor
push
imul
jmp
or
inc
sub
mov
adc
inc
test
mov
test
das
pop
icebp
aas
xchg
dec
sub
xchg
jl
cmpl
dec
repz
and
adc
in
rolb
mov
dec
out
out
scas
sbb
es
sub
shll
insl
cltd
insl
or
inc
push
stmxcsr
adc
int3
inc
out
cs
iret
sbb
jl
fwait
mov
cmp
pop
leave
push
add
cmc
pop
push
pop
hlt
mov
pop
jno
mov
and
aad
int3
ds
jns
and
or
add
dec
or
mov
ss
sbb
adc
jne
push
enter
sar
add
xlat
int3
push
mov
insb
notb
data16
or
loope
pop
xlat
shrb
rep
mov
sti
mov
in
daa
pop
adcb
popf
add
sbb
xchg
inc
jns
push
push
insl
mov
push
lods
mov
xchg
or
repnz
inc
mov
sub
jno
out
shl
push
mov
xchg
sbb
mov
int
mov
out
push
mov
test
jbe
arpl
sbb
cmp
enter
cmp
or
test
push
pop
xchg
adc
dec
shl
and
pusha
fisttpl
and
dec
pop
push
lahf
es
adc
xor
sub
pop
xchg
mov
inc
xor
mov
repnz
jno
push
lds
mov
imul
mov
xor
xchg
mov
cmpsb
jno
sbb
mov
outsb
sub
add
imul
push
decb
adcb
add
xor
cmp
repz
mov
into
inc
mov
scas
clc
cwtl
into
push
sub
movsl
mov
adc
cmp
cli
push
or
inc
or
ficomps
add
inc
dec
call
ds
test
std
pushl
jg
imul
xchg
fldcw
add
flds
outsb
cli
jp
test
jle
fisubrs
jns
test
cld
les
rcrl
shll
rcll
xor
push
push
pushf
testb
add
outsb
push
sbb
loopne
shrl
jnp
adc
out
imull
es
sbb
rcrl
ret
int3
shll
add
fcomi
fmuls
fidivrl
add
sbb
test
or
jo
int
jno
cmc
and
addl
lahf
push
or
imulb
out
cwtl
and
orb
bound
xchg
fldcw
aad
ljmp
sub
lahf
or
inc
jnp
decb
xchg
and
rorl
push
icebp
add
push
ljmp
cmp
test
insl
sbb
sbbb
xchg
and
dec
clc
jnp
xchg
add
xchg
ror
push
mov
cmc
xchg
mov
sub
mov
scas
ret
addr16
es
loope
rorl
insl
pop
cmp
and
pop
stos
adc
pop
mov
inc
adc
pop
and
inc
inc
pop
adc
lock
mov
outsl
jle
push
mov
mov
and
lahf
xchg
int
mov
and
jmp
xor
lds
mov
add
or
addr16
push
dec
lcall
pushf
and
sbb
fcoms
sbb
mov
lods
fs
or
inc
ja
jne
push
push
into
inc
and
pinsrw
fcmovne
test
pop
sbb
dec
fisttpl
ret
movb
idivl
sarl
in
loope
aas
cs
mov
sahf
lret
push
rcrl
je
js
int3
sub
mov
das
lds
popa
jo
and
notl
dec
add
loope
rorb
xchg
jo
inc
popa
push
adc
add
sti
pop
push
xchg
fs
xor
or
jne
cmp
and
pop
mov
inc
shlb
bound
or
sbb
mov
cmpsl
xchg
stc
mov
or
nop
mov
test
cmp
adc
inc
mov
gs
or
sarl
jmp
or
cmp
scas
imul
xor
inc
inc
bound
mov
push
sti
cmpsb
stos
xchg
cmc
mulb
pop
and
mov
cmp
sub
ljmp
lods
jp
and
stc
cltd
imul
mov
push
adc
jb
or
rolb
into
aas
in
cltd
dec
add
aam
fwait
pop
xor
nop
pusha
jb
lcall
shlb
pop
jns
jns
add
and
mov
and
std
mov
repnz
orb
cmpsb
shrl
test
mov
mov
jbe
neg
adc
mov
out
in
mov
xchg
pop
add
cwtl
repz
or
lahf
movsl
jle
or
je
int3
mov
fwait
mov
test
das
lds
and
mov
mov
adc
fsubl
cwtl
imul
ficompl
mov
pop
test
stos
xchg
sbb
fcmovb
repnz
and
xor
outsl
jle
nop
jns
outsl
jl
inc
jmp
int
pushf
shrl
and
xchg
inc
out
and
pop
icebp
lods
jl
ja
arpl
lcall
inc
inc
imul
mov
sti
jle
xchg
and
and
jno
mov
or
lock
jns
in
cmp
xchg
jb
sub
push
and
sar
fcmovu
inc
sbb
rorb
sbbl
sub
and
push
xor
into
sbb
lret
adc
test
int3
mov
das
xchg
fsts
mov
xor
dec
imul
les
movsl
cmp
mov
stos
lods
cmp
push
mov
sbb
das
jae
sahf
outsl
mov
pop
fwait
cmc
sbb
adcl
mov
call
decb
mov
or
cmp
xchg
std
icebp
mov
mov
add
adc
mov
sbb
dec
inc
repnz
les
pop
pop
xorb
mov
daa
ljmp
dec
icebp
mov
stc
outsb
xor
mov
in
pop
loopne
sub
out
idivb
dec
lods
shll
push
cmp
aam
fnstcw
in
sbb
sbb
ret
inc
cmc
lret
mov
rorl
push
jle
notb
jae
sbb
fnsave
fsts
and
sub
push
cmp
xlat
pushf
call
mov
and
xor
sub
cs
nop
fwait
shlb
ffreep
das
rcll
mov
shlb
sti
cwtl
sbb
push
out
into
loope
xchg
pop
inc
and
push
cmp
pop
mov
and
and
xor
push
and
mov
cmp
pop
sahf
mov
je
push
mov
into
sub
int
cmp
insl
arpl
xchg
mov
xchg
add
jnp
loopne
icebp
outsl
sbb
lahf
jl
adc
je
inc
inc
add
mov
dec
cmpsb
test
mov
mov
jmp
aaa
pop
jb
bound
pop
inc
push
mov
xchg
lods
cmpsl
leave
cmp
fisubs
pop
fistpl
cmpsl
loope
das
dec
adc
sbb
addr16
ret
adc
pop
inc
fwait
shrl
lret
sarb
fcoms
push
call
fdivs
cmc
push
jno
dec
xchg
jge,pn
mov
cmp
call
cmpsb
mov
or
negl
iret
and
bndldx
roll
mov
xor
or
arpl
imul
jo
and
cmp
mov
or
mov
xchg
cmc
fcmovne
inc
mov
pop
push
nop
inc
jae
add
sub
pop
gs
addb
mov
lret
sbb
mov
sti
lahf
inc
mov
mov
scas
mov
insb
cmp
bound
inc
cmp
nop
fistpl
xchg
push
outsl
imul
repnz
hlt
daa
aaa
or
push
jecxz
ds
inc
aad
jo
pop
xlat
mov
sub
gs
subl
and
and
jb
repnz
xor
loope
cmp
int
lret
adc
leave
ret
mov
incl
pop
jp
sbb
lods
mov
adc
jp
mov
fildll
dec
jbe
hlt
jo
pop
subl
test
fs
notl
pop
add
dec
inc
jae
ds
push
jns
sub
adc
mov
js
jmp
inc
xchg
adc
pop
jnp
add
pop
lods
dec
xor
xchg
std
fdiv
test
bound
and
mov
inc
test
jo
fwait
daa
sti
decl
pop
add
shl
mov
mov
jmp
mov
jns
push
mov
cs
loope
mov
mov
in
test
xor
fildll
ljmp
mov
dec
jo
insl
in
das
mov
jmp
test
ret
push
add
repz
push
xchg
jecxz
ret
shl
sbb
hlt
or
sbbl
adc
stos
xchg
fs
test
cmp
shll
inc
xchg
jae
lock
scas
in
jne
test
loope
inc
fildll
mov
loop
cli
mov
mov
lcall
xor
jb
outsb
outsl
insl
mov
adc
testl
mov
mov
xchg
xchg
stc
xlat
lea
fadds
int3
ja
mov
mov
push
inc
push
pop
bound
fnstcw
ret
add
pop
cs
and
fwait
js
jae
dec
aad
mov
push
and
and
fisttpll
call
mov
sbb
push
and
out
sub
pop
jae
inc
add
in
jae
imul
dec
add
xchg
popf
or
stc
aaa
adc
pop
out
sbb
stc
push
xchg
lods
test
dec
pop
jle
jp
scas
sub
mov
aas
xchg
sar
sub
cs
loopne
mov
mov
xchg
mov
cli
into
jp
call
ss
aaa
sti
push
push
jg
sarl
mov
cwtl
push
dec
outsb
xor
sbb
mov
jb
popa
push
xlat
ja
or
mov
cmpsb
das
jns
out
scas
add
hlt
or
in
mov
push
imulb
or
addr16
push
dec
insb
mull
cmpl
scas
sbb
or
divb
push
jle
stos
jnp
cmpsb
mov
in
aaa
cmp
jno
dec
fdiv
data16
cmp
fs
push
iret
fimuls
push
push
xchg
es
ret
xlat
popa
addr16
jne
jb
jge
and
xchg
std
push
cmp
xchg
push
loope
rolb
js
mov
mov
cmp
or
mov
aad
xchg
adc
lahf
adc
jbe
enter
cli
rcll
shrb
pusha
mov
mov
dec
and
cmp
pop
add
cmp
fnstsw
mov
sub
xchg
test
dec
jb
hlt
mov
jae
outsb
orb
roll
in
rclb
sub
ja
es
sub
dec
cmp
jo
popa
xchg
mov
add
out
cmp
aam
fwait
pusha
mov
sbb
adc
test
into
sarl
mov
adc
push
and
out
push
cltd
cmp
rclb
pop
pop
inc
mov
jnp
mov
dec
lret
test
int
int3
ss
fcomps
cwtl
enter
shlb
xchg
cld
in
js
xchg
pop
inc
or
jns
mov
gs
jns
xchg
dec
push
xor
fcomps
pop
imul
repnz
dec
dec
jnp
jp
adc
and
xchg
push
push
push
and
xor
sub
sbb
add
pop
jb
mov
xchg
sub
jmp
xchg
dec
popf
std
in
inc
mov
loop
std
push
xchg
repz
outsl
dec
jl
ds
sub
imul
int
mov
shll
sub
aaa
dec
or
mov
xchg
bound
je
push
std
or
addb
stc
outsl
or
shrb
ret
ljmp
and
pop
sub
cmc
pop
inc
mov
enter
jg
xchg
imul
scas
pop
push
addl
movsl
or
mov
rcll
loope
fstps
movsb
xor
xchg
xchg
mov
aaa
movsb
fbld
cmp
stos
js
or
das
fs
and
push
fnsave
inc
or
push
mov
mov
into
mov
aas
mov
ja
or
hlt
rcl
and
mov
cli
pop
inc
mov
fidivrl
add
xchg
mov
xor
mov
mov
mov
pop
pushf
push
out
jle
daa
jne
pop
sbb
cld
lret
dec
sbbl
lahf
xchg
inc
push
outsb
or
adc
mulb
add
aad
mov
fwait
arpl
push
icebp
inc
push
pop
or
fwait
dec
inc
out
mov
movups
popf
inc
adc
lods
test
and
sbb
andb
dec
sbb
ja
push
pusha
xchg
rol
jge
mov
addr16
movsl
adc
sahf
jp
sbb
mov
push
fisttps
xchg
add
test
daa
pop
xchg
fucom
and
in
mov
add
aad
ljmp
dec
ja
mov
fcoml
push
leave
sub
jb
out
cmp
adc
loope
xchg
xchg
or
es
push
lret
jecxz
outsl
or
cmp
lret
sub
and
xor
mov
pop
push
sti
cld
push
or
and
inc
mov
cmp
shll
pop
mov
ss
and
lock
mov
push
arpl
and
mov
xchg
in
pop
pop
sbb
test
xchg
adc
mov
fdivr
push
in
fisubl
insl
loope
jg
jp
popa
or
dec
pushf
out
adc
insl
jp
xchg
and
xor
or
out
add
adc
repnz
pop
sti
jbe
mov
dec
cmp
or
test
movl
dec
scas
xchg
pop
pop
jl
pop
pop
pushf
std
cmp
cmp
xchg
gs
out
push
add
sub
mov
sub
incb
pushf
xchg
mov
cmpsl
add
and
add
xor
arpl
cmp
pop
mov
mov
cmp
cmp
sbb
stos
mov
add
and
sahf
push
ficomps
dec
lods
inc
setp
fs
int3
cmp
mov
xchg
into
push
test
xchg
pushf
xchg
sub
stos
xor
into
xor
sahf
gs
and
call
data16
iret
mov
in
clc
xchg
les
sub
out
cmp
mov
leave
add
or
lock
cs
sbb
in
test
inc
mov
push
int
fs
mov
fsubrl
aas
mov
xor
mov
aam
rclb
dec
mov
jae
es
or
cmc
and
in
pop
imul
sub
loope
or
stos
int3
cltd
sbb
mov
xchg
test
xchg
das
adc
jp
fnstsw
pop
dec
sbb
iret
and
je
gs
insb
nop
xchg
lea
sub
popa
pop
pop
loopne
pop
sahf
lea
jb
jne
xor
xchg
sub
fcompl
jae
iret
jmp
nop
cmp
cli
cmp
loop
cmpb
rcr
std
mov
jns
pop
pop
jbe
pushf
jmp
push
stos
test
scas
add
pop
aad
icebp
in
aas
outsb
mov
hlt
lcall
inc
dec
mov
adc
jns
test
and
movsl
test
sti
and
mov
ror
xchg
ficoms
mov
cmp
shlb
call
cltd
scas
xchg
ficomps
int
mov
push
pop
lret
and
imul
fwait
rcrl
or
jne
test
lods
sarb
and
add
jbe
lret
rcrl
aas
and
sbb
adc
movsb
add
cmp
scas
pop
addr16
mov
add
lcall
push
cli
roll
out
sbb
ljmp
xchg
push
mov
pushf
movl
nop
push
xchg
fdivs
stos
mov
insb
gs
cs
das
ds
sbb
mov
push
dec
lea
pusha
jo
test
out
mov
cmc
sub
or
jno
pop
or
aaa
addr16
shll
mov
pop
push
in
xchg
push
es
addr16
or
adc
add
cmp
loop
hlt
into
pop
movsl
xchg
ljmp
data16
add
shll
or
mov
or
push
mov
stos
adcb
jae
mov
aas
sub
jb
pop
call
push
pop
sub
or
cwtl
shll
xchg
movsb
call
inc
and
scas
mov
cmp
movsl
imul
push
push
inc
stc
icebp
pusha
call
test
pop
jmp
dec
mov
ret
cld
and
or
out
idivb
stos
repnz
das
repz
push
lcall
sbb
mov
sti
push
in
mov
xchg
cmp
inc
inc
add
inc
pop
std
ja
rcll
mov
ret
out
das
xor
push
adc
mov
and
pop
pop
insl
inc
jo
or
sti
pop
int3
rclb
rcr
daa
xor
js
rol
push
and
aaa
lods
push
stos
lock
push
xchg
lcall
pop
mov
xchg
daa
mov
std
xor
arpl
cmc
cmc
cmp
mov
mov
out
std
mov
pop
mov
cmpsb
jmp
cmp
lods
mov
inc
clc
fwait
jle
mov
mov
xchg
add
repz
ret
cmp
xchg
sub
hlt
dec
xor
gs
pop
push
adc
xchg
pushf
cmpb
add
fdivp
inc
xchg
shrb
xchg
push
jo
in
inc
dec
popl
mov
cld
fwait
mov
dec
jae
xor
push
es
popa
pushf
push
scas
pop
out
cmp
xor
xchg
loope
iret
fidivs
neg
push
push
sbb
jmp
test
test
fnstenv
lcall
std
in
mov
out
lea
leave
lcall
cwtl
fwait
inc
push
dec
test
xor
loope
jle
cld
pop
movsb
dec
add
dec
ret
fldt
mov
mov
inc
outsb
cwtl
pop
adc
les
movsl
jle
les
sbb
cmpsl
insb
or
shl
cld
push
test
mov
pop
pusha
leave
lds
sahf
xor
lret
jecxz
inc
mov
xorb
addr16
test
mov
movsb
in
cmc
mov
rol
push
sbb
decl
push
sahf
outsb
mov
jns
push
add
xlat
mov
sub
add
in
dec
rcll
inc
mov
lock
loope
je
or
pop
lahf
clc
movsb
and
jge
jno
ret
aas
lods
mov
jo
imul
and
adc
dec
mov
cmp
outsb
int3
lret
sub
stc
adc
leave
inc
mov
addr16
aas
daa
inc
mov
mov
out
mov
ficompl
mov
fdivp
test
jae
ja
enter
aam
dec
idiv
or
test
jmp
push
mov
mov
cmc
add
sub
je
inc
pop
push
jne
pop
cmp
cli
dec
sbb
add
sbbb
loop
rorl
jge
testl
pop
xor
cmp
repz
add
sbb
sub
inc
lea
scas
adc
gs
cwtl
dec
mov
jnp
dec
nop
xor
mov
imul
mov
fmull
dec
dec
cmpsb
xchg
cmpsb
adc
xor
cmp
push
loope
push
mul
ljmp
movsb
mov
outsb
repz
pop
lea
data16
pop
or
into
pop
sbb
or
mov
xchg
push
mov
movsb
das
xchg
dec
dec
mov
repz
repnz
aaa
adc
cmpb
bound
pop
lret
nop
dec
shlb
mov
or
xor
aaa
in
fidivl
sub
xor
adc
inc
scas
and
push
sub
fcmovnu
adc
fisttpll
push
dec
and
mov
lea
inc
cmpsb
jge
xor
sar
lret
icebp
mov
cltd
or
dec
test
push
ret
jbe
fcoml
fcoms
cmpsl
leave
mov
insl
push
jmp
cs
outsl
aas
adc
adc
dec
inc
aam
xor
fdivs
push
mov
add
fisttpl
stos
cli
inc
jmp
adc
in
push
or
xor
or
gs
sbb
shrl
mov
jnp
mov
add
pop
adc
adc
inc
or
jecxz
inc
mov
pop
fidivrl
dec
sti
cmpsb
jno
dec
out
jg
faddl
jns
in
stos
out
les
mov
pushf
mov
pop
pop
xchg
or
pusha
lds
addr16
adc
fsubr
imul
push
ljmp
stos
fwait
mov
pop
lahf
sub
ret
jne
aam
and
xor
fisubl
mov
scas
cmpsl
push
gs
sbb
clc
arpl
sbb
mov
inc
cs
leave
xchg
cmp
adc
shlb
mov
fmuls
fdivrs
dec
dec
sbb
adc
or
inc
and
cld
push
movsl
mov
ljmp
stc
loope
push
push
adc
xchg
push
aaa
incb
or
stc
jmp
out
add
and
stc
jb
cmp
xchg
inc
jno
adc
adc
cmp
push
jo
sbb
sbb
loope
mov
lahf
sub
xchg
adc
leave
jb
jl
and
sub
cmp
add
push
or
and
lock
and
sub
cld
mov
mov
adc
jmp
hlt
mov
xlat
inc
rcll
mov
and
jge
dec
dec
jge
or
cmp
sub
int
or
jge
sbb
dec
js
fcomi
cmc
fwait
adc
arpl
add
rolb
repnz
fildl
or
nop
lods
or
push
add
push
repz
imul
mov
jb
mov
xchg
pop
mov
movsl
mov
mov
xor
mov
nop
lret
in
or
in
movl
repz
jno
pop
push
mov
sub
js
inc
jmp
add
movsl
dec
in
pushf
pop
push
fdiv
mov
add
pusha
sub
mov
mov
jbe
dec
xor
movsb
inc
les
or
pop
adc
in
pop
xor
fnstenv
sbb
or
or
pop
adc
pop
addl
sub
scas
xchg
jle
stos
cmp
jecxz
icebp
cmp
xchg
lcall
subb
sbb
mov
dec
test
ret
in
int3
stos
test
dec
dec
mull
lods
les
lret
mov
imul
fwait
cmpsb
adc
fnstcw
jge
ljmp
inc
mov
insl
or
sbb
sub
lock
out
notl
in
mov
fisttpll
ret
inc
jo
add
cmp
push
imul
imul
cmp
in
inc
adc
iret
das
xor
outsl
loop
xchg
or
movhps
ss
mov
sahf
bnd
mov
inc
repz
mov
jo
clc
mov
lcall
fsubr
fcoms
sub
mov
outsl
jne
ret
cltd
gs
mov
jmp
jecxz
inc
stos
xlat
pop
inc
int
xchg
enter
xlat
ja
pop
cld
dec
jo
hlt
movsb
bound
pop
aad
inc
jg
andb
fcom
scas
je
imul
inc
sbb
insl
sub
cli
scas
arpl
adc
adc
pop
and
and
out
out
mov
adc
nop
add
ds
stos
roll
push
push
loope
test
push
cmpl
sbb
fisttps
mov
pop
mov
arpl
xlat
mov
inc
mov
mov
sub
adc
push
jae
cmpsl
lods
cli
cltd
in
int
push
ficoms
pop
mov
sbb
jmp
repnz
insb
insl
or
jbe
sub
dec
dec
vmaxpd
push
jmp
data16
enter
or
push
pop
mov
mov
scas
sbb
adc
xor
ret
cmpsb
mull
fsubrl
imul
mov
ja
mov
lahf
mov
pop
jmp
fwait
jne
pop
cmp
scas
aas
mov
dec
dec
xchg
and
jbe,pt
lahf
mov
push
dec
mov
or
sbb
adc
outsb
dec
outsb
leave
test
sahf
repnz
les
cmp
test
mov
insl
test
jecxz
jns
and
pop
and
add
fisubrl
sbb
inc
mov
xor
sarl
xor
push
add
shlb
pop
cmpsb
dec
inc
mov
mov
nop
or
rorl
ja
mov
fstps
inc
test
subl
xor
rcrl
xchg
adc
sub
push
fldt
shll
lcall
cmp
decb
sbb
test
adc
and
mov
add
adc
or
push
mov
insl
add
sub
lret
fldlg2
cmp
xchg
js
sub
stos
je
inc
inc
jns
cmp
icebp
xor
sub
inc
or
adc
dec
pop
mov
sbb
sti
inc
xor
add
mov
outsb
je
cs
or
enter
hlt
cmp
inc
nop
pop
mov
scas
pop
enter
mov
movsb
inc
mov
test
push
sub
ds
imul
fisttpll
adc
xchg
pop
cmp
pushf
mov
nop
jl
push
out
stos
sbbl
xorb
mov
pop
enter
shrl
movsb
push
pop
mov
dec
cli
pop
mov
or
pushf
out
jmp
enter
cmp
jecxz
xor
mov
jmp
push
xchg
inc
ffreep
pop
xchg
jge
mov
fwait
shll
push
jno
or
bound
imul
dec
popf
gs
cmpsb
jno
xor
and
pop
in
leave
clc
aas
jnp
fbld
jne
bound
dec
aas
push
scas
mov
cmp
cmc
dec
dec
fimuls
cld
js
jmp
push
add
gs
imul
mov
mov
mov
inc
mov
repz
stc
out
repnz
out
bswap
stc
test
or
test
cwtl
repnz
add
inc
lods
stos
stc
repnz
xor
dec
mov
add
lds
popa
ret
pusha
cltd
lock
in
in
mov
xchg
dec
cmp
rorl
jecxz
cmc
imul
ljmp
wrmsr
cmp
mov
popf
add
lcall
rorl
mov
das
sbb
cltd
sbb
and
repz
pop
push
jne
test
sahf
adc
ret
dec
add
jecxz
dec
or
sub
out
andb
jbe
ds
leave
cmp
fidivrl
dec
mov
xor
fs
cmp
cmp
dec
mov
cld
dec
or
mov
out
push
xor
imulb
jne
test
pop
sahf
mov
pusha
decb
fisttpll
call
mov
jp
xor
dec
sbb
in
repz
xchg
pop
jge
pop
loopne
les
pop
sub
enter
out
cmp
mov
sbb
out
pop
nop
cmpsb
dec
fucomi
test
and
cmp
push
sti
cmp
out
mov
push
aad
lods
sub
aad
xchg
dec
cli
rorb
xor
xchg
in
fistpl
aam
fwait
xlat
insl
fstpl
xor
fs
stc
mov
sub
rolb
push
mov
mov
data16
test
push
xchg
aam
shlb
push
std
lret
icebp
test
leave
add
or
inc
sbb
push
inc
cmc
mov
jge
add
xchg
sub
lret
les
rcrl
cmp
leave
mov
mov
xor
sbb
test
cmpb
sub
aad
jge
mov
adc
sahf
inc
or
jle
dec
cwtl
loope
fstpl
ljmp
mov
mov
jne
sub
mov
sub
push
jge
dec
scas
dec
cmpsb
popa
popa
cmp
sti
inc
lcall
fdivs
movl
bound
int
sub
or
lcall
fdivrs
dec
mov
xor
mov
push
dec
out
aas
fs
inc
lahf
cld
sbb
mov
mov
ret
fidivl
hlt
inc
loopne
push
fwait
movsl
icebp
pop
mov
sub
iret
mov
pop
fstpl
jg
test
mov
or
and
mov
jg
mov
xor
push
mov
mov
js
cmpsl
inc
out
mov
xchg
mov
pushf
subb
xchg
and
ja
pop
scas
orb
pop
pop
shll
scas
insl
dec
add
pop
inc
mov
test
pushf
repz
sti
mov
dec
inc
pop
rclb
scas
in
inc
mov
dec
ss
adc
fwait
push
pushl
pop
pusha
xor
ja
inc
pop
fdivl
xchg
out
aad
out
lret
in
add
shll
pop
and
push
lods
cmpsb
repz
pop
incl
in
arpl
inc
cmpsl
add
jmp
push
mov
push
call
jmp
adcl
in
jecxz
mov
lock
cs
ret
lea
test
lods
xchg
mov
testb
arpl
out
insb
or
add
ja
cmp
inc
out
lcall
pusha
pop
fmull
dec
sbb
mov
lods
pusha
push
pop
fiadds
jno
sub
xchg
fbld
les
jnp
sub
es
lcall
xor
mov
cmp
or
mov
in
jl
inc
es
and
dec
mov
cmp
jle
test
add
in
ret
pusha
in
inc
aas
push
adc
mov
jmp
sbb
loop
adc
pop
pop
fnstsw
mov
push
lcall
cli
out
lods
jb
or
shlb
aam
cmp
mov
lods
fisttpl
aam
ret
dec
pop
es
mov
lock
lds
lods
rclb
daa
pop
loop
push
add
icebp
jmp
popa
call
mov
lods
fldcw
in
outsb
jge
or
jb
jne
call
cld
inc
vsqrtpd
cmp
lds
xchg
mov
mov
shld
test
adc
mov
add
mov
call
jle
fildl
sbb
pushf
inc
pusha
daa
mov
rcll
push
mov
push
enter
lock
adc
add
add
xchg
xor
je
stos
mov
shll
mov
cld
jge
and
roll
sbb
xchg
jb
push
shl
fcoms
dec
out
movsb
sti
mov
insl
fstpt
mov
scas
jns
xchg
lods
test
pop
add
xchg
and
adc
mov
cmp
xchg
xbegin
mov
test
cmp
and
insb
jno
mov
imul
dec
cmp
jg
push
outsl
xor
cmpsl
test
or
inc
cwtl
ficompl
int
movsb
dec
mov
lods
inc
inc
insl
xchg
aaa
aam
movsl
ja
fstpl
jmp
adc
xchg
outsl
shl
jge
pop
push
mov
mov
push
xchg
mov
hlt
mov
dec
repnz
bound
imul
jo
lret
push
sahf
je
push
fnclex
mov
mov
pusha
mov
and
int
push
push
cld
pop
mov
repnz
push
or
icebp
incb
pop
push
mov
cltd
scas
pushf
cmp
mov
inc
push
ret
pop
movsb
pop
xor
stos
frstor
add
mov
loop
in
sti
outsb
or
jnp
push
fnstsw
fs
clc
dec
lds
jmp
jl
in
xor
dec
clc
cmc
popa
test
test
cmpsl
fdivrs
or
popf
rcrl
sarl
cmp
into
inc
in
or
xor
outsb
adc
push
outsb
addr16
sub
mov
add
pop
push
jb
mov
ret
xor
or
mov
loope
adc
mov
mov
repz
xchg
ljmp
insb
lea
push
mov
dec
aad
mov
adc
xor
test
dec
enter
mov
push
addb
pop
notl
data16
cmp
mov
movsl
or
xchg
jo
leave
repnz
cmp
repz
sbb
adc
fwait
sub
and
fldpi
and
sub
movsl
stos
and
cmpsb
inc
les
ret
inc
xchg
in
cmp
movsl
adcb
push
stos
add
jg
lret
jge
push
jbe
outsl
lret
sub
lcall
jg
std
inc
adc
xor
add
stc
jmp
cld
ror
pop
popl
mov
and
and
mov
add
pop
jg
jecxz
mov
or
lret
mov
sub
lcall
and
push
fistl
ds
sbb
test
pop
xchg
cmp
insl
ret
sahf
cld
cmp
push
in
jmp
stos
bound
subb
loopne
stc
inc
movb
or
cmpsb
adcb
sbb
std
cmp
xchg
sub
xor
jbe
stos
ja
mov
mov
mulb
imul
imul
test
loope
push
dec
std
cmpsb
push
push
and
sub
or
fdivrs
pop
mov
lcall
dec
rcl
mov
sarl
sbb
int
jns
pop
cmp
repnz
adc
iret
in
dec
scas
jo
lock
mov
fcoml
xor
sar
push
loop
hlt
pop
sbb
mov
sub
cmp
andb
aad
xor
sbb
jo
fildl
adc
jae
int3
ljmp
mov
popa
js
fcoml
mov
cmp
mov
pop
jmp
sbb
fsubs
hlt
sub
cmp
dec
xor
sti
xor
mov
adc
push
adc
outsl
sti
adc
jecxz
or
lret
test
xchg
testb
out
leave
imul
push
fadds
lea
mov
cmpl
sti
cltd
into
pop
jno
xchg
cmp
mov
fnstcw
shll
jl
push
sub
mov
add
out
fwait
jp
aaa
imul
test
fwait
inc
xchg
jb
data16
cmpl
pop
insl
or
xor
ficompl
int3
imul
insl
je
cld
insl
push
pop
arpl
lock
adc
lret
sbb
dec
outsb
add
iret
add
repnz
jmp
mov
xor
leave
sbb
cld
jae
mov
mov
push
or
flds
jmp
andl
je
imul
mov
sahf
mov
push
mov
bound
loope
push
mov
in
jnp
push
sub
xchg
mov
mov
mov
dec
xor
rorl
push
jb
dec
lods
inc
aas
mov
sti
fcomp
push
mov
xor
cmpsl
sbb
pop
repz
enter
imul
test
and
sub
xor
pop
repz
inc
movsb
addr16
inc
push
and
inc
mov
add
pop
movl
push
pop
dec
dec
adc
xchg
out
es
sub
sbb
dec
outsl
insb
les
sub
push
sbb
mov
cs
js
fwait
rcll
push
mov
and
ja
mov
inc
lds
lahf
stos
dec
lcall
in
insl
xor
xor
mov
pop
push
lods
mov
push
dec
mov
rolb
jne
pop
lock
add
dec
jns
cmp
push
lcall
adc
fbstp
scas
repnz
pop
sub
jg
xor
rcll
call
xor
scas
mov
and
lods
push
adc
test
subb
jmp
lea
arpl
xor
outsl
xorl
pushl
sub
add
fs
mov
pop
jmp
rorl
out
stc
xor
sysret
outsl
jle
jecxz
mov
lcall
cmpsb
fsincos
mov
cmp
xor
popf
cmp
call
jns
into
xchg
push
cmc
jno
outsb
aaa
movsb
push
loopne
inc
daa
or
push
jg
test
sbb
pop
xacquire
and
orl
lret
cld
xor
ss
or
in
add
xor
pop
xchg
ret
stos
mov
clc
inc
mov
pushf
jbe
and
imul
pusha
jne
sub
js
mov
mov
lahf
push
sbbl
leave
neg
inc
addl
lret
movsb
push
or
fsubs
push
popl
fsub
lea
outsb
cvtps2pd
pop
stos
pop
jp
cmp
stc
cld
leave
mov
testb
loopne
test
bnd
out
inc
lret
xor
lret
cltd
cvttps2pi
repnz
stos
ret
push
add
hlt
push
sub
mov
in
push
xor
imul
arpl
ret
pop
cmpsl
adc
scas
call
and
outsb
adc
sbb
mov
mov
push
jnp
jmp
mov
sti
push
push
push
jnp
mov
sub
sbbb
dec
inc
roll
inc
aaa
adc
pop
sub
mov
xlat
jle
and
js
jp
fstpt
cmp
mov
movsb
ret
orl
loope
and
sbb
mov
dec
xchg
inc
aad
jge
xor
adc
ja
addr16
icebp
out
mov
dec
ret
sbb
js
cmc
push
xchg
lret
inc
inc
outsb
or
jno
mov
sti
daa
sbb
push
mov
ljmp
das
jnp
pop
outsb
xchg
js
scas
scas
jae
sbb
adc
inc
jo
dec
inc
jp
data16
pop
rcrb
test
imul
hlt
jle
inc
imul
dec
and
aad
push
push
out
pop
sbbl
lods
loop
jecxz
jnp
adc
xor
push
jne
pop
sub
jge
test
lahf
push
divb
mov
popa
icebp
push
test
das
loope
aas
negl
mov
mov
imul
push
lods
mov
nop
lcall
leave
pop
xchg
sbb
adc
push
loope
lock
adc
inc
cmp
inc
pop
adc
adc
fistl
sub
adc
ja
sbb
and
push
inc
shlb
aam
movsl
push
and
and
insl
and
and
adc
cmp
dec
adc
push
hlt
push
add
bound
dec
insb
xchg
inc
divl
dec
pop
andl
xchg
aaa
cmp
in
out
lcall
cmpsb
mov
mov
sbb
cwtl
and
fwait
xchg
test
fstps
add
loop
dec
dec
inc
or
sub
jns
add
test
jl
cld
dec
insb
pushf
jb
movsl
dec
rcr
or
rcrl
in
and
imulb
and
mov
sbb
push
pop
add
add
test
testb
jnp
adc
adc
out
push
xchg
mov
in
xchg
fwait
testb
int
rolb
jbe
or
or
xchg
sbb
rclb
and
imul
xchg
pop
mov
aam
jecxz
sub
cs
popa
add
or
adc
push
insb
adc
leave
out
jg
lahf
stos
jl
jle
and
sbb
scas
test
mov
cmp
fwait
psubusw
adc
in
insb
lods
mov
subb
loop
jecxz
out
cmpsb
icebp
inc
and
add
sub
jp
hlt
dec
dec
loop
xor
or
aaa
je
mov
loop
dec
and
jl
mov
dec
ss
and
inc
clc
mov
mov
dec
dec
jge
cmc
mov
ds
aam
lds
or
mov
orb
gs
out
push
jbe
push
jo
sub
dec
xor
stc
lock
cmpsb
and
pop
dec
or
out
and
ret
cmp
outsl
pushf
cmp
pusha
pop
in
mov
inc
mov
cld
push
aas
push
cmpsl
push
arpl
xchg
out
push
test
sbb
sub
pushf
jl
push
lret
dec
mov
jbe
inc
andl
stos
pop
push
mov
sarl
shll
insl
cwtl
mov
jbe
out
int3
test
mov
rorl
inc
rolb
subl
push
push
fisttpll
add
xchg
inc
mov
mov
lods
pop
mov
cmpsl
iret
inc
push
stc
mov
aad
pop
mov
xlat
test
ret
xchg
js
sbb
xchg
lods
cmpsl
jnp
jns
shlb
lret
lods
adc
mov
iret
loop
dec
sub
dec
movl
jb
testl
push
mov
notb
add
xchg
pop
loope
mov
cmpsb
sub
fidivrs
fbstp
adc
lret
push
sub
into
out
test
push
jne
out
mov
adc
loope
xor
data16
add
movsb
pop
das
adcb
cs
xlat
inc
dec
pop
sub
cmp
lods
xchg
loope
and
mov
xchg
mov
or
insb
dec
rolb
daa
popa
int
dec
pop
fimuls
jb
in
xor
cmp
dec
scas
xor
aaa
adc
mov
arpl
stc
movsb
nop
mov
mov
adc
filds
cmpsl
add
jo
add
xor
xor
push
hlt
mov
inc
xchg
out
mov
adcl
cmp
dec
int
add
mov
xchg
sub
iret
ljmp
out
test
mov
or
xchg
xor
ss
pusha
add
inc
add
adc
mov
pushf
mov
xchg
xchg
and
lahf
push
jae
sbb
mov
push
loop
pop
out
faddl
dec
pop
scas
mov
add
ret
test
out
test
mov
mov
lods
push
lcall
push
cmpsl
outsl
mov
rcrl
jnp
jle
add
xor
sbb
sub
lcall
sbb
xchg
sti
or
mov
pop
ds
fildl
out
pop
ret
dec
in
lock
sub
dec
xorl
mov
inc
dec
insl
sub
pop
sbb
mov
into
popf
sub
push
add
add
out
push
jecxz
icebp
pop
xrelease
aam
pushf
mov
sbb
test
jae
mov
das
bound
pop
mov
das
stc
dec
push
jb
data16
pop
dec
mov
dec
inc
aad
jmp
push
scas
xchg
adc
cwtl
mov
xor
sbb
xchg
mov
pop
pop
decb
arpl
pushf
add
push
and
cmc
and
hlt
inc
sub
insb
jg
les
xchg
int
push
cmp
xchg
movsb
or
js
into
cmp
push
mov
scas
in
mov
xchg
add
pop
enter
jb
lock
loop
pop
sbb
xor
mov
imul
aad
dec
pusha
test
daa
add
in
lret
stos
jbe
inc
mov
cs
mov
mov
dec
mov
out
mov
aad
outsb
sahf
adc
loopne
mov
pusha
insl
or
imul
into
dec
sbb
cmpsl
or
lret
xchg
cmp
sbbl
cmp
xchg
test
fwait
repz
and
mov
pop
pop
popa
popa
jne
jno
in
psrlq
imull
and
js
pop
cli
dec
adc
push
adc
and
sti
mov
push
into
clc
add
push
push
shlb
xchg
and
inc
add
ss
or
data16
cwtl
sti
sahf
xchg
add
jl
sahf
push
dec
sub
fidivs
fiaddl
scas
or
push
mov
lods
daa
test
or
mov
loop
adc
rcl
xchg
push
inc
jne
jmp
std
adc
sub
pop
push
mov
bound
dec
fdivrs
push
xor
lcall
inc
mov
sbbb
inc
dec
cmp
cwtl
xchg
mov
mov
xchg
cmpsb
les
adc
mov
rclb
cmp
dec
addb
loope
test
out
or
addl
mov
jmp
xchg
xor
rcrb
xchg
int
pop
fistpll
pop
ret
mov
mov
push
pop
and
jo
pop
loop
popf
test
fcomps
mov
inc
push
loopne
mov
sarb
pop
insl
lret
sbb
repz
loope
scas
call
mov
aas
and
dec
das
mov
sbb
lret
movsb
out
xchg
sub
jnp
pop
mov
add
sub
out
jns
adc
addr16
les
and
outsl
shl
add
inc
mov
pop
fistl
repz
jno
sbb
loope
shlb
mov
aaa
xor
mov
jl
mov
or
sbb
adc
dec
xor
cmc
addr16
sbb
xchg
scas
xchg
cmovb
or
dec
mov
jecxz
aad
and
adc
and
cmpsb
cs
lret
lret
or
mov
stos
add
jb
mov
pop
inc
pop
jmp
xchg
jo
mov
mov
leave
lcall
jl
fucomip
ret
dec
popa
xor
push
jbe
jle
add
aaa
push
scas
pop
jbe
das
sbb
inc
popa
lock
enter
pop
or
test
arpl
jg
into
pop
sti
dec
imul
jle
xchg
cmp
addr16
ja
pop
mov
out
mov
and
sahf
fiadds
dec
testl
test
inc
les
push
std
sub
cmp
sub
dec
lret
jb
out
inc
out
cmpsl
test
adc
jbe
mov
adc
jns
pop
popf
pop
pop
add
sub
inc
push
mov
dec
push
test
push
jmp
xorb
call
jo
and
sti
insl
mov
push
adcl
or
jno
xchg
fcompl
mov
fidivrl
and
lcall
dec
fwait
stos
add
add
mov
in
out
cwtl
mov
jns
and
gs
jp
pop
sub
or
ret
ds
xchg
out
push
mov
sbb
mov
out
sbb
mov
repz
loopne
es
lret
rcr
push
mov
jbe
pop
aad
lods
call
faddl
sbb
negl
into
std
cmovge
mov
aam
fmuls
cmp
sub
icebp
jl
loope
add
imul
add
stc
repnz
ja
mov
test
inc
nop
bnd
mov
sub
ja
shlb
mov
loope
or
test
pusha
dec
and
dec
xchg
dec
mov
adc
lods
push
ret
xor
and
andl
clc
xchg
popa
data16
push
hlt
xchg
jp
mov
loope
and
jl
jns
pushf
aas
ret
dec
sbb
pop
sar
xor
or
jmp
testb
fimuls
movb
fcompl
pop
push
sbb
add
dec
cmp
in
and
test
jne
ret
add
loope
dec
pop
sub
ds
mov
rcll
cltd
pop
cwtl
dec
xor
inc
dec
mov
mov
cmp
ja
lahf
sub
cwtl
or
or
out
test
cmp
xchg
in
sbb
push
push
cmp
call
cmp
aas
jbe
sub
cmpb
cs
scas
jbe
cmpsl
cmp
sub
rclw
filds
imul
movsl
dec
out
add
icebp
fdivrs
bound
mov
cltd
adc
mov
fsubrp
lods
adcb
mov
sbb
rcrb
divl
mov
jb
pop
lret
out
es
xchg
push
pop
ds
xchg
lds
fucomip
ret
bound
adc
mov
repnz
icebp
xchg
mov
in
or
sbb
ret
mov
imul
xlat
lods
aam
pop
insl
call
adc
in
mov
and
mov
adc
add
sbb
mov
jbe
call
fcomip
jnp
sbb
mov
push
xor
xchg
arpl
jl
sub
movsb
in
aam
lahf
push
movl
out
dec
stc
test
mov
push
icebp
xlat
shll
stos
pop
add
jnp
lahf
and
orb
push
roll
std
mov
sbb
es
stos
arpl
pop
lods
lcall
hlt
sbb
inc
mov
or
and
mov
xlat
xor
sbb
xchg
int
jmp
test
fwait
inc
lret
inc
jb
jmp
and
pop
std
mov
leave
jbe
js
sbb
jb
and
out
jp
jns
xchg
pop
sub
ret
push
mov
push
cld
icebp
jb
jbe
add
mov
adc
lea
push
jae
xchg
in
gs
roll
lea
dec
stos
push
andl
icebp
jge
jb
pusha
adc
stos
push
xchg
mov
enter
inc
lock
xor
test
adc
inc
jp
pop
jmp
jb
dec
movsl
push
inc
xchg
movsb
xchg
pop
sbb
mov
dec
or
cmp
mov
cltd
xchg
rcrl
jp
jmp
fsubl
bound
mov
adc
push
adc
pop
jle
or
stos
mov
adc
jp
or
sbb
js
cli
inc
fmull
stos
imul
jbe
dec
lock
jmp
add
fs
fs
inc
push
cmp
mov
je
and
add
negl
xor
lock
cmp
pop
lcall
or
addr16
inc
jmp
test
aad
pop
jne
adc
test
aam
inc
cmp
mov
xchg
mov
pop
call
aaa
mov
adc
add
aas
push
xor
jecxz
out
mov
and
pop
dec
in
inc
mov
sbb
fisubl
adc
out
ss
std
mov
push
mov
fcomip
xor
aad
inc
mov
scas
out
add
mov
xchg
test
imul
dec
jne
outsb
add
loopne
dec
lock
push
shl
decb
lds
xlat
scas
cli
mov
call
sbb
add
add
pop
cwtl
and
xor
fldl
and
push
test
les
jle
pop
lret
dec
cmp
mov
lods
std
ss
mov
sub
cmpsb
xchg
and
test
jp
addb
sahf
push
mov
adc
call
pop
test
push
aaa
mov
mov
or
data16
mov
cmp
pusha
xchg
sub
fimuls
mov
movsl
fiaddl
loopne
lds
mov
pop
lahf
pop
pushf
sbb
or
aas
divl
dec
stc
add
jno
inc
iret
mov
ds
ljmp
lea
dec
add
or
lods
sub
sub
adc
ficomps
xchg
push
or
jbe
and
es
jp
stos
sbb
cli
push
loop
ds
xor
or
fstpl
scas
push
imul
out
movsl
iret
mov
or
xor
cmc
ficoms
or
outsb
stos
sbb
ret
or
sar
sub
mov
dec
popf
aad
fmuls
sub
sbb
pop
cwtl
push
jmp
popa
data16
call
aad
outsb
inc
loop
dec
addb
fdiv
push
inc
inc
or
inc
imul
es
std
jge
add
or
les
mov
ret
lret
xchg
ja
mov
push
aaa
cmp
shll
cmp
dec
insl
inc
repz
loopne
mov
lds
or
jo
mov
daa
xchg
or
fdivp
sbb
ret
push
insl
test
lcall
mov
mov
mov
sbb
push
daa
clc
lods
out
mov
or
ret
jmp
dec
mov
mov
mov
cmp
lret
pushf
shll
cmc
sub
cs
add
xor
cmp
or
fstl
push
fsubl
movsb
xor
push
mov
mov
test
mov
dec
jo
movsb
add
ljmp
jg
inc
dec
sbb
int
cmpsb
daa
jno
inc
lret
sub
sub
dec
mov
fnstsw
int
and
adc
cwtl
xchg
add
add
jo
adc
pop
out
jb
mov
aas
dec
jb
mov
push
js
in
xchg
lcall
mov
leave
xor
and
pop
or
mov
outsb
mov
das
test
arpl
sub
cmpsl
lds
popf
xchg
pop
lret
popf
lahf
cmpsl
subl
fistpl
mov
sub
push
ljmp
test
pop
lods
xchg
cmp
add
incl
movsl
pop
cld
mov
hlt
sbbb
inc
sarb
repz
mov
or
and
sarl
cmp
adc
sbb
popa
dec
cli
test
ljmp
rcrl
fcoml
ljmp
or
lock
inc
xchg
and
cld
fnsave
add
jae
jge
mov
rcll
sub
sub
into
sub
add
mov
lret
xchg
xlat
dec
or
mov
push
mov
lea
cmpsl
call
jl
cmp
cmp
div
mov
or
ret
scas
mov
out
dec
stc
or
shll
pop
cmp
jo
jmp
pop
test
pop
mov
lods
sbb
pushl
xchg
popf
mov
lret
inc
repz
mov
movsl
rorl
popf
in
push
cli
jnp
mov
mov
lock
push
rorl
mov
jno
nop
and
sbb
and
pop
pop
lock
mov
shr
cmp
ja
jg
cwtl
lret
mov
xchg
imul
jmp
pop
dec
mov
mov
adc
push
mov
mov
adc
push
jg
jns
mov
shll
xlat
out
out
je
sahf
hlt
hlt
mov
lret
pusha
repz
ds
scas
repnz
ror
adc
fs
hlt
shrl
adc
dec
aad
dec
fdivr
inc
fisttpl
sub
jmp
xor
leave
and
dec
xchg
mov
std
push
loope
jp
into
jge
test
les
js
shl
or
add
rep
xchg
xor
cmp
adc
scas
sbb
fstpt
cmpsb
adc
dec
mov
jmp
sbb
cmp
mov
cwtl
shlb
cmpsl
cmp
ds
popf
mov
enter
sbb
cwtl
inc
popf
push
iret
xor
dec
addr16
das
dec
pop
push
fwait
dec
adc
shll
inc
clc
push
mov
clc
pop
add
xchg
xchg
movsb
or
or
loope
fmuls
movsl
jns
xchg
sahf
jae
int
inc
fcomi
hlt
stos
sub
mov
gs
in
clc
jne
stos
scas
inc
ret
mov
adc
mov
outsl
sub
adc
pop
inc
add
mov
cltd
xchg
adc
test
jmp
and
sti
movsb
cmp
push
nop
fimull
rorb
push
mov
mov
adc
les
gs
arpl
push
test
mov
js
add
inc
lret
mov
push
aas
loopne
xchg
jl
jge
pop
fdivrl
les
xchg
xchg
iret
dec
movsl
dec
mov
push
xchg
mov
leave
popa
sub
push
jecxz
aaa
mov
arpl
aam
mov
push
jo
xchg
mov
inc
xor
cmpsb
push
inc
addb
scas
and
xchg
popf
repz
aaa
pop
sbb
or
iret
pop
scas
jbe
out
or
jp
lahf
orb
dec
test
fucomp
jmp
mov
push
xor
or
jge
or
adc
pop
aad
test
cmc
cmp
fdivl
mov
mov
or
mov
push
std
cmp
sub
inc
cmp
loopne
sbb
push
loop
in
aam
repnz
dec
mov
mov
push
leave
inc
push
push
push
xchg
stos
inc
dec
and
jne
sbb
insl
add
lods
addr16
test
sti
jne
mov
in
loope
mov
mov
test
push
mov
pop
pushf
stos
jecxz
mov
les
int
rclb
or
jl,pt
rorb
adc
lret
outsb
pop
ss
stos
pop
mov
mov
mov
in
arpl
mov
cmp
sti
xor
xlat
sbb
and
push
enter
xor
sub
pop
jae
sahf
push
in
bound
aad
shl
pop
inc
inc
mov
jmp
es
jb
push
rcll
inc
mov
mov
pop
push
jge
mov
insl
or
push
mov
daa
outsl
addr16
insb
test
int
dec
lods
sub
sbb
push
sub
adc
outsb
cmp
add
pusha
loope
mov
push
aam
roll
daa
inc
dec
repz
xor
mov
cmp
rclb
repz
aam
int3
fimuls
adc
xchg
sbb
mov
mov
andb
add
mov
jns
sbb
ret
pop
xlat
sub
pushl
cmc
cmp
test
mov
out
mov
gs
lods
fucomp
leave
mov
inc
jle
jmp
clc
mov
mov
push
jmp
mov
or
add
pusha
adc
cs
push
jbe
pusha
lock
jmp
out
adc
pushf
xor
mov
je
cmpsb
mov
or
andb
enter
mov
cli
fwait
xor
jmp
sub
dec
daa
dec
jns
sbb
fdivl
out
pop
cmp
mov
xor
clc
in
and
int3
mov
adc
dec
xchg
mov
mov
mov
rolb
inc
ret
test
dec
roll
push
mov
add
fstps
in
dec
cmp
pop
pop
popf
sbb
xchg
jge
cwtl
pop
call
adc
sub
sub
or
xchg
loop
pop
cltd
xchg
add
popa
xor
xchg
inc
insb
sahf
lock
pop
fbld
sub
loopne
repz
inc
inc
push
inc
loop
add
inc
sbb
scas
lcall
fdivr
sti
adcb
and
iret
insb
imul
adc
push
stos
pop
sbb
out
nop
xchg
xor
pop
data16
pop
push
dec
jne
imul
je
jns
inc
sti
pop
addb
sub
mov
pushl
fidivl
push
mov
or
movsb
nop
int
cwtl
and
sbb
shrb
sti
jae
outsb
push
or
imul
or
sbb
push
and
or
push
inc
and
sub
cs
js
xchg
imul
push
cmpsl
push
pop
std
pop
xchg
pop
stc
mov
cmp
xchg
dec
cmp
and
ror
mov
mov
xor
js
shrl
jle
or
dec
cmp
fldcw
test
bound
push
pop
push
loopne
jns
dec
incb
mov
mov
lods
dec
rorl
rcrl
cmp
add
push
shll
mov
jp
or
mov
or
loop
xor
cmp
xorl
loopne
shl
xlat
mov
loop
cli
inc
enter
xor
sarl
jmp
dec
out
mov
cltd
and
scas
or
subl
addr16
jmp
pop
imul
push
xor
xlat
movsb
repnz
pop
test
dec
scas
mov
mov
addb
jbe
adc
push
sbb
xchg
mov
aas
xchg
dec
xchg
dec
loope
sbb
test
mov
js
repz
fmull
jmp
addr16
cs
inc
fisttpl
xor
stc
jecxz
rol
pop
pop
into
xor
fidivrs
out
xchg
xor
cli
fistpl
adc
inc
sahf
mov
or
filds
mov
dec
ss
leave
adc
outsl
dec
fcomi
add
sbb
sbb
pop
repnz
lock
jno
out
shll
mov
xlat
mov
inc
pushl
sahf
mov
xchg
and
cli
das
inc
sti
sti
leave
lds
dec
popf
jg
pop
inc
loopne
sbb
xchg
sub
cwtl
inc
xor
clc
divb
sahf
dec
pop
in
push
je
aad
dec
pop
xchg
mov
mov
in
decl
inc
mov
cmpsl
inc
fisttpl
rorb
push
cwtl
xchg
add
inc
sbb
add
mov
fcomip
imul
mov
mov
aaa
sbb
iret
les
xchg
daa
in
das
xlat
daa
and
jno
mov
dec
rclb
aad
push
lret
xchg
mov
jnp
sub
mov
popa
repz
daa
mov
lret
daa
add
std
fistl
fildll
mov
cmp
lea
faddl
mov
leave
bound
jecxz
jno
mov
pop
arpl
sub
mov
orl
icebp
es
mov
mov
out
add
les
xor
cltd
cmc
dec
les
rcrb
jmp
cmp
je
inc
in
jne
lea
orl
fisttpll
popf
fisubrl
sti
in
sub
mov
aad
mov
imul
or
mov
movsl
xor
ret
dec
adc
scas
push
sub
and
imul
cltd
pusha
popa
cmpsb
lods
aam
mov
out
aam
mov
movsl
jae
lds
sub
movsl
lcall
call
clc
dec
jecxz
xor
jmp
sub
push
cmp
adc
mov
pop
mov
dec
bound
fstps
dec
enter
mov
loopne
unpckhps
gs
loope
mov
movsl
or
stc
xlat
and
xchg
ret
xchg
pop
jne,pt
push
mov
ljmp
stos
notb
enter
ret
cmp
fstl
movsb
jb
xor
dec
adc
cs
sbb
and
out
cld
cmp
icebp
fidivrs
sub
adc
out
adc
outsb
or
sbb
test
gs
jl
popf
xor
mov
test
and
xchg
inc
inc
dec
add
dec
or
leave
mov
mov
jo
jnp
testb
xchg
shrl
insl
iret
js
clc
subb
imul
gs
add
repz
jg
dec
jnp
inc
and
outsl
call
jo
cltd
icebp
movsb
sub
movsb
jl
es
lret
xchg
push
jp
stc
lds
sbb
in
pop
or
push
and
ja
push
int3
or
pop
repnz
dec
pop
cmp
dec
add
fadd
push
mov
rcrl
or
stos
movsl
icebp
mov
push
mov
push
stc
jne
fdivp
ret
andb
inc
pop
mov
or
pop
adc
cld
aam
or
cmpsb
mov
inc
xchg
lods
adc
iret
int
xchg
pop
dec
and
imul
push
inc
xchg
std
fs
iret
pop
sub
pop
and
lods
sbb
fndisi(8087
ret
cmp
lds
jne
dec
xchg
mov
pop
lret
or
inc
sub
cs
and
fcompl
lret
sbb
shrl
mov
adc
shll
mov
mov
xor
or
cld
adc
aas
test
movsl
mov
xlat
out
inc
add
inc
and
clc
jbe
sub
xor
pop
leave
js
outsb
sbb
pop
xchg
mov
int3
insl
ja
bound
stos
test
mov
loope
fisubs
mov
jno
xor
std
xor
cmp
scas
sub
mov
sub
sar
lcall
mov
popa
out
push
pop
enter
ret
nop
aas
push
cmp
fcoms
imul
in
fcmovnb
out
mov
movsl
adc
insb
out
pop
xchg
xabort
mov
push
sub
and
add
ds
sbb
in
aad
out
dec
xchg
addb
jnp
xchg
push
imul
aam
add
aad
out
dec
scas
jl
mov
fidivl
pop
lock
jns
outsl
in
or
cltd
push
mov
mov
sahf
adc
cmp
add
cmp
xchg
push
adc
ss
inc
fists
push
xor
cltd
addr16
jae
rcl
lahf
xchg
and
mov
arpl
loope
push
and
sub
cmpsl
call
shl
xchg
cmp
popa
out
testb
seta
ss
dec
push
out
les
mov
sub
cwtl
dec
sub
or
ret
fcmovnu
mov
bound
stc
dec
mov
mov
jne
and
fisttpll
xor
cltd
cmp
sahf
mov
adc
rcrb
aad
xchg
pop
add
test
mov
aam
fidivs
icebp
xchg
push
dec
mov
incl
pop
outsb
out
cmpsb
in
push
sbb
fstps
add
mov
popf
lods
insb
int
xchg
cli
aaa
mov
xor
call
ret
adcl
in
je
and
inc
sub
cmpsb
in
jne
push
jge
scas
xchg
mov
add
xchg
add
loope
lret
mov
add
sub
pop
mov
in
lcall
imul
jb
jg
test
sbb
fstpt
add
mov
dec
jne
ljmp
mov
insl
jb
mov
pop
cmp
jno
lret
cltd
mulb
jp
sbb
jbe
adc
sahf
mov
jbe
shl
cwtl
dec
je
pop
xlat
cmp
cwtl
jmp
xchg
cmp
pusha
sub
adc
xchg
test
push
mov
inc
clc
inc
and
add
adc
lahf
jno
out
dec
add
ret
or
jle
daa
jmp
push
fmull
lods
and
xor
ja
xchg
mov
push
jb
cmp
dec
fwait
pop
in
jmp
ret
inc
enter
in
and
nop
out
stos
hlt
dec
or
add
xchg
mov
mov
inc
xor
and
xchg
push
inc
cmp
call
js
and
inc
mov
movsl
or
mov
loope
pop
jp
pop
pop
inc
mov
mov
inc
ds
sahf
inc
sarl
pop
dec
sub
gs
je
in
pusha
enter
lcall
pop
loope
or
add
pop
sbb
std
rorb
mov
sbb
into
scas
mov
fmuls
out
fldlg2
push
pop
repz
sbb
pop
adcl
jecxz
sub
in
ss
push
test
scas
jg
aad
pop
ljmp
sahf
jecxz
scas
push
loop
mov
hlt
mov
sub
add
push
xchg
ror
or
push
aaa
mov
mov
cmp
inc
leave
lds
jno
lock
sbb
ret
cltd
adc
aam
insb
mov
aas
ret
sbb
xor
iret
aad
int
jbe
jp
icebp
jne
mov
movsl
sbb
sub
mov
or
leave
addr16
xor
mov
and
xchg
lcall
jnp
nop
pop
es
cmpsb
daa
aaa
orl
jge
int
sbb
push
sbbl
jmp
fucomip
cmp
outsl
loopne
movsl
cmp
data16
inc
push
jmp
in
push
adc
leave
dec
add
iret
add
bound
mov
leave
leave
inc
test
push
pop
rcl
mull
xor
movsb
mov
sub
into
inc
std
mov
adc
mov
xchg
leave
inc
loop
mov
shld
fwait
not
imul
mov
scas
dec
roll
das
add
and
stc
mov
pusha
xchg
lret
divl
add
fwait
cmp
push
ret
xlat
xchg
xchg
ret
xchg
mov
mov
sub
insb
out
aaa
mov
push
dec
jnp
push
into
add
xchg
pop
cmp
insl
adc
mov
call
jecxz
inc
jecxz
dec
add
js
jno
loopne
subb
movb
scas
inc
pop
pusha
adc
jae
sahf
dec
in
add
enter
pop
cs
xor
cmp
add
jnp
push
adc
scas
test
pop
cwtl
ja
scas
stos
push
pop
push
or
aas
psubsw
adc
jno
or
pop
shlb
jg
jg
cmpsl
jp
mov
mov
imulb
sub
push
jbe
jge
sub
insl
sbb
repnz
int3
lds
mov
and
cmp
call
xor
js
jge
pop
jle
mov
mov
xchg
ffreep
daa
cmp
into
mov
jge
stos
out
mov
out
cli
add
rcll
jns
outsl
inc
in
sbb
pop
test
dec
rolb
cmp
jl
jge
outsl
xor
sbb
xorl
jnp
dec
faddl
mov
adc
xchg
dec
mov
sub
xor
ja
xor
and
movsb
loope
in
mov
imul
pushf
inc
pop
mov
jno
xchg
andl
jmp
ljmp
sahf
inc
loop
inc
add
adc
add
daa
mov
lock
xchg
mov
or
inc
fwait
and
je
sub
test
leave
fisttpl
loopne
or
dec
jo
mov
mov
sahf
jns
xor
mov
pop
rclb
sarl
jmp
dec
scas
mov
shll
fdivp
pop
lods
imull
mov
push
pop
imull
inc
ljmp
test
scas
xor
sbb
mov
outsl
fwait
jo
outsb
fstl
int
pop
lret
xchg
push
shll
cmc
fwait
pop
add
cmp
push
xchg
sub
stos
jl
inc
add
gs
scas
loope
lock
test
sahf
sbb
adc
nop
xor
popa
mov
or
in
loopne
addl
or
ds
stc
imul
sub
insl
or
loope
pop
ljmp
sbb
jl
rcll
test
push
cmpsb
je
pop
insl
or
sbbb
cmp
cmp
scas
sbb
insb
arpl
xchg
cmp
inc
and
push
mov
or
cmp
in
fildl
xchg
jns
je
int
lea
push
sbb
jle
add
dec
stos
imul
or
in
inc
push
aas
imul
mov
fldcw
or
loopne
in
imul
pusha
sbb
or
in
xor
inc
inc
cltd
clc
aam
add
lods
hlt
cld
xor
xor
push
cmp
jl
push
flds
in
cmp
or
lret
dec
and
mov
push
jge
es
cwtl
or
and
je
das
ja
popf
loopne
push
cli
pushf
xchg
sub
mov
mov
mov
and
inc
fld
out
outsl
jbe
fcmovbe
int
sahf
sub
aaa
test
pop
testb
ds
mov
or
cmp
xor
pop
mov
movsb
xor
mov
dec
bound
sub
add
shll
xor
sbb
cmpsb
or
repnz
lods
jo
ret
mov
mov
gs
jbe
fwait
and
inc
or
arpl
sub
hlt
addl
shl
xor
leave
ss
js
jmp
into
rcrl
jne
cmpsl
and
imul
sbb
add
dec
lret
or
aaa
pop
or
lds
sub
xor
pop
subb
testb
test
shrl
sub
xor
inc
aaa
mov
adc
lock
fcmovnb
mov
sub
insl
mov
and
in
cmp
mov
test
xor
xchg
fwait
test
cmp
loopne
call
mov
dec
mov
and
icebp
xchg
pop
lea
push
or
je
mov
roll
sbb
insb
lock
popf
lret
rcrb
leave
adc
ret
fwait
int3
xchg
daa
inc
repnz
gs
pop
fldt
mov
and
fdivl
out
xchg
cld
pushf
bound
pop
outsw
fsubl
or
add
mov
scas
mov
add
mov
mov
xchg
fistpl
in
and
loope
enter
sub
lods
lret
rol
dec
std
xor
fisttpll
sti
movsb
loop
out
mov
adc
mov
adc
lock
nop
scas
aaa
jmp
xchg
out
pushf
or
cmp
push
push
gs
movsb
xchg
int
or
mov
stos
or
repz
sub
gs
jp
xchg
test
jmp
cltd
dec
push
add
sbb
sub
sub
dec
loope
popf
sbb
pop
int3
add
repnz
icebp
repz
clc
jae
std
loop
inc
stos
fcompl
mov
cmp
jmp
sbb
lods
xchg
out
and
sub
into
push
rcll
or
pop
adc
es
adc
lods
adc
out
mov
stc
sub
rcll
dec
add
push
xchg
cmp
mov
test
sti
jne
pop
xor
inc
out
out
movsl
mov
mov
push
mov
incl
inc
aam
loopne
xchg
adc
out
nop
leavew
subl
lret
test
mov
jnp
add
dec
fwait
icebp
orb
push
mov
sarl
sbb
mov
jbe
add
push
mov
mov
gs
adc
push
sbb
xchg
les
xor
mov
jp
xchg
cs
scas
xchg
jns
mov
push
in
jb
fs
filds
mov
stos
jns
and
sarl
fsts
mov
mov
jo
xchg
adcb
xor
test
popf
lret
add
ss
ret
mov
mov
fidivl
and
xchg
aad
inc
push
jl
sbb
and
lret
inc
roll
and
dec
pop
inc
out
and
dec
pop
lods
das
cwtl
pop
cmc
inc
mov
add
je
xchg
cmp
mov
imul
lods
dec
mov
clc
rcll
movsb
sbbl
sbb
sub
pushf
mov
dec
add
test
cmpsl
addr16
sahf
imul
inc
pop
lea
aaa
clc
xchg
repnz
jbe
shlb
jns
or
or
sbb
and
data16
outsb
aad
jo
fbld
lcall
sub
push
inc
and
sbb
jg
pop
xor
test
out
leave
outsb
add
popa
xorb
ljmp
sbb
out
add
lea
xchg
sahf
stc
sbb
stos
in
notl
sub
les
sbb
clc
add
fwait
xchg
je
dec
jno
fdivl
sub
or
call
leave
adc
popa
mov
mov
mov
mov
mov
adc
imul
out
mov
inc
mov
dec
pop
or
dec
sub
fidivrs
mov
and
int3
in
cmp
jnp
dec
pop
sbb
aas
cmpsl
insb
lds
jnp
pushf
pusha
pop
or
ljmp
sbb
aam
sti
and
sub
pop
inc
or
mov
add
in
adc
adc
into
xchg
push
mov
xchg
stos
dec
mov
cmp
clc
inc
sub
adc
jo
pop
and
subb
push
push
sub
mov
pop
dec
mul
stc
je
pop
cli
dec
movntps
xor
hlt
std
pop
lods
sbb
sbb
mov
test
jo
xor
push
jo
adc
mov
or
leave
loopne
sbbb
cmpsb
outsb
mov
sub
sub
mov
and
add
imul
mov
incb
dec
les
addl
faddl
dec
movsl
adc
push
add
push
push
les
or
shrl
outsb
fcom
push
push
clc
sub
sti
inc
cmc
cmp
mov
add
cli
iret
jmp
pop
insb
arpl
les
ss
pop
jae
in
lods
test
in
xor
mov
dec
sbb
xchg
mov
mov
push
pusha
mov
ja
jge
dec
aaa
add
jnp
les
jp
fsubrl
cli
push
cmp
inc
jb
lahf
and
imul
cli
fldln2
xor
push
mov
xchg
sub
fnsave
pop
pop
cmp
jmp
sbb
in
mov
lds
aas
imul
cmpsb
pop
push
out
push
mov
jno
jmp
leave
imulb
movd
inc
shlb
rolb
daa
ja
mov
cmp
mov
test
nopl
popl
cli
adc
or
jg
outsb
ret
jle
mov
xchg
sbbb
int
sub
shlb
mov
xor
leave
sarl
dec
fprem1
inc
int
xor
in
out
jmp
lcall
in
int3
and
addr16
movsl
sub
push
jb
ds
out
jnp
cmp
jmp
mov
or
push
mov
jae
or
addr16
addr16
cmp
bound
inc
loope
loop
out
insl
xchg
shll
add
xchg
add
mov
adcl
sub
mov
ljmp
imulb
jg
inc
gs
addr16
xchg
lock
jns
add
jmp
add
test
or
mov
lds
add
mov
adc
add
push
pushf
push
rolb
xchg
outsl
fstps
gs
ss
arpl
lahf
mov
jns
dec
out
xchg
add
loope
xchg
xor
lahf
lds
add
jne
insl
enter
jle
mulb
add
and
test
dec
mov
dec
popl
push
and
mov
loope
sbb
inc
xchg
inc
sub
jp
mov
ret
hlt
test
or
int
cmp
xchg
or
dec
jg
cltd
subb
cwtl
dec
daa
adc
adc
or
mov
or
out
mov
mov
add
add
mov
out
scas
mov
push
sbb
xor
ds
fs
shrb
jecxz
pop
cmc
imul
mov
stos
out
loop
jmp
push
dec
lcall
mov
add
xchg
xchg
dec
fcoml
testl
lods
outsl
add
mov
push
inc
sub
inc
cmp
mov
movsb
es
ffree
push
and
clc
and
pop
int3
jne
cmp
mul
fcomps
cmovge
xor
imul
mov
pusha
jmp
ds
out
fadds
insl
pop
aas
cs
xchg
stos
aam
mov
jno
lret
jnp
les
leave
out
push
push
imul
add
insl
imul
push
mov
pop
xchg
xchg
jns
dec
pop
dec
popl
scas
and
adc
scas
cmp
mov
xor
sub
arpl
arpl
push
loopne
bound
je
and
mov
adc
fwait
pop
ds
add
in
inc
adc
mov
pushf
sbb
dec
and
xchg
call
push
sti
sub
xor
cmp
mov
mov
shlb
cltd
mov
jb
loop
push
out
cmp
sbb
mov
faddp
in
cmp
jbe
ret
or
mov
fcomps
jb
jecxz
lea
jg
shlb
pop
ror
scas
daa
xchg
pop
aaa
jmp
fcomps
add
mov
mov
lret
int3
inc
pop
loop
lock
mov
sarb
ficoml
in
je
push
fcmovnbe
mov
pop
and
outsl
mov
mov
popa
mov
cmpsl
or
clc
adc
xor
gs
jnp
loop
out
add
jbe
in
cmp
fnstenv
push
je
xchg
push
cltd
xchg
leave
adc
test
jmp
mov
sub
push
push
daa
dec
lahf
loope
inc
mov
xchg
imul
sbb
hlt
pop
pop
sti
dec
dec
test
adc
orb
push
mov
push
mov
inc
push
dec
push
mull
xor
stos
inc
std
jecxz
and
cwtl
popa
xchg
out
cmp
int3
loop
loopne
test
dec
dec
cmp
mov
pop
in
addr16
js
push
pop
loope
inc
mov
dec
mov
jb
bound
imul
dec
mov
xchg
cli
dec
in
mov
mov
dec
stc
jle
in
sub
and
mov
mov
sub
mov
adc
movsb
xor
idivb
adc
push
out
fwait
pop
mov
xor
test
xchg
cmp
jle
mov
xor
push
lret
popa
cmpsl
inc
mov
and
dec
loopne
sub
mov
scas
push
lods
js
jg
push
outsb
movsb
test
add
push
cmp
loopne
xchg
out
sub
push
cmp
lock
pop
arpl
jmp
xchg
dec
xor
scas
pushf
push
out
jbe
fcom
add
xor
add
xchg
jecxz
pop
lds
xor
inc
fbld
lcall
adc
mov
inc
pop
scas
lods
and
cld
inc
mov
jle
sub
adc
rcr
fcmove
or
mov
jo
ja
mov
xor
pushf
or
sub
sbb
test
jno
rorb
sub
dec
mov
pop
jge
or
or
push
in
insb
lret
lods
loopne
pop
mov
cld
pop
dec
imul
xchg
mov
jge
pop
stos
mov
and
dec
jbe
stc
sbb
and
out
mov
sub
pop
ret
mov
pop
lods
nop
clc
add
sub
shlb
add
adc
imul
xlat
minps
in
lahf
mov
aad
in
cltd
sarl
call
mov
mov
sbb
std
adc
mov
mov
xor
push
cmpl
xchg
adc
fwait
xor
cmpsl
fwait
in
nop
mov
insb
or
cmp
hlt
movl
inc
popf
push
repnz
std
pop
sub
out
sar
cmp
mov
push
pop
fcmovbe
mov
leave
std
ret
nop
pushf
dec
lahf
pop
mov
jnp
mov
aaa
pop
jg
lock
dec
mov
fstps
pushf
and
inc
imul
mov
pusha
xchg
or
dec
xor
fldl
in
push
aad
stos
push
sub
cmpsl
dec
push
sub
repnz
sbb
pop
cmpsl
bound
pop
cltd
shll
mov
inc
xchg
subl
jb
pushf
arpl
add
loopne
mov
mov
sbb
inc
pop
push
popa
in
pop
and
pushf
mov
fmull
ret
test
push
add
pushf
hlt
iret
dec
pop
mov
imul
sub
arpl
mov
inc
adc
cli
fdivs
adc
test
jno
enter
les
pusha
cmp
mov
imul
arpl
fs
mov
xchg
pop
out
ret
or
sub
test
sbb
popf
mov
loope
push
mov
adc
sbb
stc
arpl
jg
pop
sub
stos
ljmp
loopne
ret
scas
dec
add
in
adc
sbb
and
pusha
jg
or
imul
orl
daa
rol
xchg
adc
lods
shrl
jno
adc
int3
outsl
and
push
test
iret
jnp
and
jmp
cwtl
xlat
loope
jnp
xchg
je
shll
jns
stc
out
mov
jg
insl
gs
fimuls
out
xor
pop
jp
adc
add
ds
xchg
stc
add
rcrl
mov
fiadds
pop
add
std
pop
inc
inc
push
movsb
sub
mov
mov
mov
mov
and
sti
pop
loopne
and
insb
repz
inc
clc
xchg
ja
push
xchg
loopne
mov
data16
cmp
push
sbb
sub
add
push
sahf
scas
pop
mov
clts
imul
jmp
jg
push
mov
pop
cwtl
out
or
cmpsb
repz
mov
pop
enter
adc
mov
inc
mov
insb
dec
sbb
mov
xchg
pop
ja
mov
icebp
mov
add
dec
mov
xor
xchg
xor
mov
add
adc
fnstcw
mov
pop
and
push
inc
or
sbb
dec
dec
leave
cmp
mov
mov
ficoms
pop
decl
test
sub
pop
data16
mov
mov
and
xchg
lret
cld
shll
stc
lret
add
mulb
inc
adc
insb
sub
js
dec
inc
ja
pop
movl
or
mov
lock
sbbl
pop
out
push
pop
arpl
sahf
stc
jge
or
les
pop
scas
adc
mov
mov
add
scas
out
or
cmp
sub
movl
fisttpl
dec
adc
mov
or
std
sub
inc
push
jae
xchg
and
jns
pushf
in
adc
dec
or
and
push
ss
xchg
push
push
and
rorb
test
xlat
cltd
jecxz
lods
sub
adc
in
cmp
loope
push
jmp
xchg
add
dec
inc
cmp
adc
outsl
push
pop
mov
xchg
jmp
vpunpckhwd
push
inc
movsl
addr16
xlat
repz
push
js
inc
dec
pop
jnp
fs
andl
test
jge
dec
rcr
pop
push
inc
lea
imul
jge
loopne
cmp
adc
testb
pop
or
or
dec
sbb
xor
test
add
or
shl
sbb
test
imul
sbb
push
pop
xor
flds
movsb
lock
pop
fwait
subl
in
repnz
add
test
ljmp
lahf
jne
mov
pushf
adc
cmp
loop
push
lds
es
aaa
sbb
fiaddl
je
dec
nop
loop
test
push
mov
sub
and
xchg
pop
icebp
jb
in
addr16
icebp
and
test
xchg
lahf
inc
daa
xor
popf
out
push
dec
push
cld
mov
sub
int3
push
mov
push
push
cmp
daa
pop
push
adc
inc
push
adc
pop
ljmp
mov
imul
xchg
daa
sub
sahf
imul
adc
lods
or
out
sbb
into
iret
insb
rcl
test
dec
repnz
lds
aaa
aaa
inc
decl
xor
loope
inc
adc
sub
outsb
mov
inc
aas
push
pop
inc
sbb
ror
jp
pusha
sbb
add
fdivs
mov
xorb
pop
and
popf
clc
data16
and
adc
inc
sub
pop
and
jp
jne
outsb
popa
pop
dec
sub
lods
pop
push
sub
out
dec
mov
call
repnz
and
xchg
xchg
or
fists
dec
test
mov
pop
mov
adc
mov
sahf
xchg
pop
gs
mov
aam
and
call
push
push
roll
test
ret
nop
jg
out
gs
mov
pop
mov
lcall
xor
idiv
ja
shll
xchg
sbb
and
xor
nop
mov
shll
add
and
test
shl
mov
loop
aam
cmp
pop
mov
and
mov
jno
fs
and
mov
in
mov
fwait
adc
icebp
xchg
xchg
aad
callw
rcrl
sbb
ljmp
mov
push
inc
xchg
xchg
mov
fwait
cmc
bound
add
jecxz
cltd
mov
ret
lea
pop
adc
imul
es
imul
stos
shll
mov
das
mov
push
movl
enter
xor
jmp
iret
fdivl
les
popf
lea
sbbl
and
stos
xchg
enter
push
addr16
cs
inc
push
les
pusha
lcall
and
adc
mov
mov
in
mov
jmp
pop
or
lret
js
aaa
sti
and
add
xor
and
xchg
or
sbb
dec
loopne
mov
pushf
movsl
out
rcrl
push
out
jecxz
hlt
scas
jb
xchg
ss
inc
mov
jns
fwait
into
mov
fdivp
orl
fwait
lret
xchg
and
inc
xlat
and
xchg
ljmp
pop
or
mov
mov
inc
mov
mov
mov
shll
push
and
rcll
pusha
add
into
xor
cmp
gs
call
mov
out
dec
test
lret
movsb
nop
leave
xchg
les
push
jae
movsl
testb
mov
and
push
jae
into
ret
sub
scas
lcall
pop
cli
cli
inc
hlt
mov
adc
ret
mov
dec
jns
lds
mov
mov
std
or
movb
loop
sub
mov
pop
mov
fneni(8087
outsl
loop
inc
movsl
pop
pusha
xor
daa
or
je
movsl
jne
mov
in
sar
fwait
mov
push
lea
enter
add
clc
das
xchg
insl
test
xchg
inc
test
mov
add
jne
xor
mov
mov
sub
cmp
push
js
outsl
mov
xchg
negb
test
fdivrp
cmp
mov
pop
and
dec
sti
mov
das
jge
adc
pop
out
xchg
mov
pusha
lahf
mov
inc
arpl
pop
mov
cmpb
cwtl
movsb
adc
das
out
jno
jnp
stos
ljmp
popa
or
sub
dec
hlt
add
pop
outsb
aam
test
xchg
lret
sbb
jmp
cmpl
push
cmp
xchg
mov
push
mov
mov
bound
sbb
dec
in
push
pushf
aas
mov
stc
test
cltd
jecxz
sbb
mov
dec
xor
and
inc
push
leave
fsub
cltd
ja
pop
pop
incb
mov
pop
sub
scas
xchg
dec
jp
in
xlat
mov
out
adc
ds
push
movsl
jae
adc
lret
pop
mov
sub
xor
orb
and
pushf
push
test
or
pop
cltd
aad
mov
test
jbe
cld
in
mov
in
fisttpl
aaa
or
fcomps
mov
aam
notb
rorb
hlt
lahf
push
repz
jp
push
inc
insb
dec
mov
hlt
cmpsb
mov
cli
dec
and
lods
in
mov
dec
xchg
imul
lcall
inc
sbb
rolb
cmp
out
ret
add
repz
mov
mov
mov
cmp
add
pop
xchg
test
inc
testb
ret
adc
stc
into
rorl
push
xchg
shr
ljmp
xchg
pop
push
mov
mov
and
ss
jmp
add
xor
das
sbb
push
or
add
xor
adc
stos
ret
jle
outsb
push
test
dec
jmp
data16
js
mov
xchg
push
loope
in
loope
mov
push
push
push
inc
or
insb
jo
cmpsl
jo
aad
push
das
jmp
nop
repz
jmp
mov
iret
and
sti
iret
mov
call
or
mov
xchg
sbb
test
xorl
stos
enter
mul
add
inc
add
dec
push
add
sbb
cmp
push
pop
push
sbb
xor
pop
shrb
out
sub
push
sbb
dec
push
ret
lret
repnz
lea
cltd
mov
pop
in
addb
fbld
cmpsl
cld
stc
dec
rol
jbe
fcom
out
lcall
popf
stos
push
mov
imul
iret
ret
xchg
rcr
mov
test
imul
stos
pushf
int3
outsb
jle
int
xchg
out
in
ja
sbb
jle
fldl
dec
cs
xlat
xchg
push
cld
imul
nop
push
mov
shr
in
dec
mov
xchg
stos
std
inc
subl
xlat
inc
mov
addr16
push
jnp
mov
inc
enter
xchg
jle
stos
jmp
push
ret
test
js
sub
sbb
ss
mov
pusha
jae
sbb
jnp
mov
outsb
ret
repz
cs
outsb
jp
push
or
lds
into
gs
fwait
lock
adc
cmp
in
cmp
test
and
adc
sbb
test
fsts
mov
push
repnz
jo
aas
dec
hlt
int
xchg
dec
and
pop
mov
pop
sar
inc
sbb
jb
faddl
jmp
pop
push
jmp
mov
gs
neg
cmpl
and
mov
nop
outsl
adc
fcomi
mov
dec
out
addr16
cmp
popf
sub
insb
mov
or
jns
rcll
lahf
sub
cmp
inc
cmp
mov
test
adc
or
cmp
sarb
insb
pusha
xor
scas
pop
xchg
push
inc
xchg
scas
inc
es
es
inc
data16
insb
fs
jge
scas
lcall
xchg
fnstenv
scas
inc
adc
test
jp
push
cmp
imul
mov
mov
add
inc
xor
push
test
push
cmp
mov
test
dec
add
rorl
dec
add
jne
jns
loope
jg
sub
sbb
ss
fwait
pop
sbbb
adc
pop
shll
xchg
cwtl
fcoml
shl
cmc
ja
stos
cmp
mov
andl
and
add
daa
fdivrs
loope
and
inc
dec
nop
adc
push
inc
enter
xchg
jae
add
stos
jae
xchg
dec
pop
cmp
jns
repnz
jne
xchg
xchg
cmp
jb
xchg
sarl
push
or
fwait
xor
push
or
dec
jmp
mov
xchg
scas
rolb
mov
out
jecxz
dec
cmp
jmp
stos
sbb
xchg
dec
incl
dec
je
xlat
push
adc
mov
loopne
stc
fdivl
shrl
pop
or
or
cld
popa
jae
in
jnp
shlb
stos
adc
out
xor
repz
in
in
hlt
or
mov
xchg
aam
mov
and
cmpsl
in
mull
add
and
test
inc
pop
fmul
gs
jb
out
inc
jo
iret
add
cld
rcrl
push
xchg
pop
jnp
loop
fucom
frstor
mov
pop
test
push
inc
repz
jge
dec
mov
int3
add
dec
xor
aas
xchg
mov
sbb
xorl
cld
sahf
fwait
mov
mov
xor
cmp
int3
jp
mov
xor
dec
push
jg
es
mov
jg
addl
adcb
pop
pop
add
in
pusha
adc
sub
dec
addl
adc
xor
push
popl
add
fisubs
cmp
sbb
in
test
lahf
lods
adc
out
addr16
int
loopne,pt
xchg
int3
bound
sub
pop
jp
dec
mov
inc
sub
call
in
cmp
filds
jo
aaa
imul
aas
test
xchg
inc
pusha
push
cmp
aad
pushl
sub
jecxz
clc
js
sub
cmpsb
outsb
mov
out
std
scas
mov
insb
into
arpl
adc
and
mov
mov
sub
add
fisubrs
fistl
fxch
js
cs
repz
push
addr16
addr16
pop
push
xchg
cld
stc
sbb
mov
inc
cmp
and
push
mov
dec
mov
pop
cmp
mov
daa
sbbb
mov
insb
iret
hlt
xchg
ja
ret
cmpsl
cmp
pop
pop
jecxz
add
jp
sahf
sub
push
pop
push
xchg
mov
out
fwait
cltd
aas
jmp
cmp
popf
test
or
insb
fwait
adc
scas
es
adc
mov
push
enter
test
outsb
push
mov
and
int
push
in
pop
sub
data16
fwait
lret
out
dec
sub
insl
mov
xor
negl
mov
or
int3
sub
adcb
pushf
jnp
mov
xor
or
aad
sbb
imul
add
dec
push
repnz
cmpsb
push
ds
fmuls
rclb
fs
gs
dec
sub
out
push
or
xor
mov
fistps
and
ret
mov
sbb
sti
popa
or
int3
adc
mov
jo
add
dec
fs
idiv
lcall
or
mov
push
leave
movsl
mov
pop
in
jl
lcall
sub
pop
xchg
mov
ret
and
jl
or
bound
push
cli
sbb
iret
and
dec
bnd
sbb
lahf
hlt
mov
fdivrl
or
xchg
into
imul
clc
mov
pushf
aad
stos
mov
push
inc
insl
cli
out
fimull
repnz
movsl
jl
jne
in
xchg
popf
lock
or
sbb
fsubs
gs
xchg
and
xor
cmp
imul
daa
lock
mov
cmp
out
sub
add
addr16
stos
in
mov
add
or
addb
dec
xor
inc
cmp
scas
and
jo
mov
mov
sbb
addb
dec
cs
mov
ja
mov
lret
jg
aad
loope
jmp
or
sbb
inc
cmp
dec
sti
xor
outsb
xchg
adc
das
pop
lcall
push
shlb
in
daa
sahf
cmp
stos
add
sbb
data16
movsl
cli
test
shrb
or
xor
and
sbbl
mov
movl
push
stos
pop
dec
popf
hlt
jbe
es
mov
pop
gs
dec
adc
ret
clc
jecxz
in
fwait
xchg
dec
or
out
into
pop
and
jno
lock
pusha
stc
push
or
jle
and
xor
inc
add
cmpsl
xlat
jp
gs
cmp
nop
pop
lcall
pop
or
cld
sahf
xchg
adc
fsubrp
rclb
pop
adc
jmp
ss
incl
fs
aas
mov
mov
repnz
push
repz
jns
mov
in
test
arpl
les
int3
daa
in
gs
cmp
push
cmp
jnp
rcll
pop
sbb
aad
jp
das
mov
lahf
jl
call
shrb
cmp
lret
rol
xor
ret
fidivrs
cmp
data16
push
popa
adc
and
cmc
and
xchg
pop
std
std
mov
mov
jl
cmp
outsl
rol
xlat
add
lods
shll
mov
sub
jmp
sti
fiadds
stos
dec
add
pusha
push
inc
adc
adc
lret
outsb
sub
sti
adcb
fwait
data16
js
sbb
stos
jno
jle
js
popa
int
inc
ss
or
test
adc
jp
inc
xor
jne
sti
push
mov
sub
jno
mov
notb
clc
ret
stos
sahf
push
aam
and
push
loop
inc
push
push
jl
xorl
xchg
not
add
and
add
rolb
jmp
push
out
in
inc
es
jb
sub
iret
mov
rcll
cmp
dec
jecxz
ja
in
jecxz
ret
inc
lret
add
mov
aam
fs
cmpl
cmpl
ret
mov
mov
lret
dec
out
adcl
fbstp
mov
pop
dec
mov
ds
aaa
cli
je
jg
lods
fiadds
jnp
mov
sti
js
outsl
mov
pop
mov
jae
leave
and
lock
add
sub
cmc
test
filds
mov
xor
bound
adc
bound
mov
push
test
out
test
push
and
movsb
out
std
scas
int
ss
lcall
and
ss
sbb
fisttpll
mov
cltd
sub
sbb
bound
aam
or
mov
test
movsb
adc
and
sub
pop
mov
and
inc
fnstcw
movsb
adc
xchg
xor
aam
dec
and
mov
inc
mov
mov
pop
in
push
sbb
sub
nop
in
ds
jae
jae
aaa
imul
test
ljmp
jo
lods
in
sub
jb
aaa
outsb
pop
sub
cmp
call
xchg
lea
rcrl
inc
test
jne
bnd
cmc
cld
mov
outsl
jo
les
and
loop
incb
cmp
enter
xchg
dec
frstor
ss
pusha
daa
xchg
pop
leave
push
lcall
mov
push
outsb
jns
push
in
bound
pop
mov
or
and
stos
mov
or
ret
insl
or
add
or
int3
mov
or
jno
xchg
scas
sub
loopne
sub
mov
stos
mov
xor
dec
add
mov
mov
jno
pusha
cmpb
test
cltd
push
cmpsl
pop
xlat
mov
lret
sahf
lret
adc
and
jge
push
cli
inc
stos
xchg
cmpb
cld
test
adc
adc
mov
jo
cmp
fsubrp
adc
cmpsl
iret
rcll
les
leave
aad
mov
cmpsl
loop
push
shrb
addr16
inc
mov
adc
sub
mov
or
xchg
cmp
outsb
mov
and
je
cmp
xorb
adc
sbbb
iret
pop
stos
pop
mov
mov
dec
jge
pusha
cltd
xchg
fiadds
push
pushf
inc
cmpsb
iret
pop
std
cltd
das
jae
push
xchg
sub
jnp
js
lcall
loopne
jno
xchg
sub
stos
xchg
mov
imul
pop
mov
insb
xor
es
ds
ror
mov
and
push
sahf
sub
aas
jmp
repz
sti
cmp
imul
sbb
pop
mov
lea
jae
xor
sbb
fadds
das
insl
fwait
call
xchg
cmp
mov
jecxz
out
mov
fsubrs
outsb
pusha
ss
in
inc
rcrl
pop
adc
mov
arpl
or
jbe
pop
outsl
pop
sbb
inc
arpl
pop
loop
popa
cmp
bswap
subl
imul
push
test
cmp
jnp
lcall
addr16
and
mov
jo
sbb
hlt
fsubl
pop
dec
mov
add
fs
and
mov
dec
in
das
fiaddl
cltd
mov
push
les
mov
movsl
stc
sbb
je
das
es
out
sbb
cwtl
cmp
les
inc
xchg
decl
pop
push
mov
ja
fiaddl
add
jg
or
bound
cmpsl
iret
fcom
inc
inc
fdivrp
push
mov
in
mov
xchg
fcmovbe
adc
add
adc
fwait
sbb
dec
and
push
pop
xor
xchg
loop
add
call
arpl
push
push
iret
sahf
sbb
mov
pushf
cmc
jecxz
or
lods
ret
sbb
pushf
or
xchg
in
lock
lret
fdecstp
rcrl
or
xchg
or
js
jecxz
xor
icebp
pop
jne
bswap
push
divb
cs
mov
stos
int
xchg
nopl
lret
out
inc
daa
jne
lret
xor
aaa
sub
cli
inc
and
inc
add
jno
fistps
xor
add
mov
mov
lcall
dec
out
cltd
dec
push
jg
shll
mov
mov
add
dec
cmp
sarb
movsb
sub
push
adc
push
xlat
stc
jge
push
loopne
push
es
or
std
subl
decl
add
mov
push
xlat
add
inc
pop
mov
push
aam
cmc
in
sbb
sbb
mov
and
cmpsb
dec
and
loopne
adc
lea
mov
sbb
and
xchg
in
lock
fwait
roll
lcall
in
shlb
xchg
lret
cmpsb
test
testb
ret
sub
push
xor
jne
mov
pop
cmp
jecxz
pop
and
fidivrl
ret
pusha
fdivs
rcll
mov
cltd
shll
push
gs
push
cmp
cmc
pop
insb
loop
rclb
popa
imul
sbb
mov
mov
in
jp
pop
jl
mov
jns
test
icebp
push
int3
stc
xchg
adc
add
pop
sub
pushf
sbb
arpl
bound
lcall
push
cmc
aas
lea
clc
and
stos
mov
cltd
test
jp
mov
dec
adcb
jmp
xor
inc
dec
aam
jno
or
popf
stc
or
fcomi
dec
out
xor
test
mov
fs
lret
fisttpl
shll
push
pop
sbb
xchg
pop
in
aam
lds
xor
add
mov
lea
or
cwtl
mov
in
mov
mov
add
call
cmp
jbe
stos
sub
sub
and
outsb
pushf
xchg
test
or
mov
cwtl
add
dec
jge
lahf
mov
lret
test
ret
mov
inc
jmp
outsl
jge
dec
sbb
adc
push
icebp
mov
xchg
sbb
xchg
js
inc
mov
arpl
aaa
add
and
mov
ljmp
inc
jb
js
push
pop
dec
cs
inc
inc
mov
nop
cmp
ljmp
lret
sbb
jno
cmp
jge
fs
xor
cmp
pop
push
test
int3
andl
or
jae
outsb
leave
aad
jb
mov
pop
fisttpll
shll
mov
inc
inc
or
xchg
pop
imul
ret
mov
jge
jg
cltd
mov
xor
sub
fdivrp
out
mov
outsl
sub
movsl
shrl
mov
lcall
sbb
dec
lret
or
enter
icebp
lock
mov
pop
adc
cld
daa
je
sbb
add
adc
push
xchg
mov
cmp
xor
or
jg
imul
dec
sbb
cmpsl
cltd
das
nop
ljmp
ljmp
pop
sbb
sub
push
lds
lret
ss
in
mov
adc
out
rolb
int
sub
leave
fidivs
fwait
or
enter
jp
adc
mov
scas
dec
fwait
scas
or
lods
enter
gs
xor
pop
sub
push
and
fnsave
xchg
enter
out
pop
xor
mov
push
sbb
mov
jl,pn
sbb
mov
cmp
into
pop
nop
stos
add
lea
arpl
daa
adc
push
or
fsubrp
xchg
outsl
and
jo
mov
in
xchg
fmulp
pop
daa
das
pop
lods
and
mov
xchg
or
arpl
jmp
shl
and
adc
xchg
mov
shrb
xor
js
and
dec
outsb
pop
mov
icebp
adc
mov
jp
inc
in
dec
cmp
mov
adcl
xor
test
aad
lods
xor
xchg
xlat
xor
sahf
and
lret
cmc
push
xchg
push
loop
shrb
cld
mov
movl
pop
dec
test
sbb
sbb
inc
adc
and
fildl
cs
stc
or
imul
ds
int
mov
stos
aaa
adc
sub
xor
popa
inc
ficoms
repz
mov
andb
pop
and
mov
in
dec
lahf
cmpsl
in
dec
fisubl
pop
mov
rcr
xor
fbstp
fbstp
mov
mov
or
out
xor
ss
test
imul
dec
loop
push
xchg
rcl
or
jne
xchg
scas
int3
fistpl
mov
push
popf
pop
loope
mov
leave
mov
aam
iret
mov
or
and
push
ret
std
xchg
cli
int3
adc
mov
push
aad
outsb
sbb
aam
pop
push
mov
xchg
jnp
xchg
sbb
and
cmp
test
insb
pop
cmp
pop
repz
xor
movsl
push
cmc
push
dec
jl
sar
pop
mov
call
jbe
xchg
add
pop
jg
into
jno
testl
sub
test
in
push
ss
dec
push
jmp
mov
push
fidivl
cld
dec
inc
cmpsl
test
in
push
ret
fwait
adc
adc
shl
xchg
mov
lahf
xorl
outsl
sbb
inc
inc
mov
lahf
push
gs
pop
xchg
cmpsl
adc
lea
push
pop
mov
inc
int3
and
xor
xor
xorl
jnp
fidivl
aad
xor
rorb
mov
jmp
pop
sub
decb
pop
or
mov
mov
icebp
test
pushf
jl
sbb
lcall
jmp
out
stos
fwait
jl
cld
movl
lcall
or
push
ljmp
out
mov
outsl
arpl
fs
mov
xchg
lret
stos
and
cmp
sbb
lahf
pop
ja
pop
dec
mov
xlat
mov
inc
adc
or
mov
jecxz
inc
xor
les
cmp
jae
push
push
or
xchg
or
xlat
or
adc
or
inc
fs
int
mov
and
sbbl
inc
mov
gs
into
cmp
iret
add
pop
and
insb
fs
push
jmp
sbb
mov
mov
and
mov
in
cltd
int3
int
xchg
fidivrl
mov
aas
ret
rolb
call
filds
ss
jp
push
mov
dec
cmp
push
jp
into
out
dec
push
orb
mov
push
pushf
sub
hlt
jg
idivl
out
ret
mov
mov
out
pusha
push
adc
orb
fwait
cltd
insl
mov
orl
adc
in
mov
and
and
cmp
test
rorb
adc
movsl
xlat
lods
daa
cmp
inc
iret
cmpl
stos
dec
push
mov
mov
jo
imul
pusha
inc
add
mov
enter
mov
not
dec
mov
repz
dec
sbb
js
int
sub
iret
or
sbb
jge
js
movl
nop
loopne
jb
outsb
or
xchg
mov
xlat
sbb
fsub
push
cmp
testl
adc
js
fs
cltd
pop
in
pushf
adc
imul
ret
ss
fdivs
bound
pop
fistps
xchg
cltd
out
xor
in
and
es
jg
pop
pop
push
aas
cmp
dec
or
mov
dec
dec
pushf
xchg
fmulp
push
xchg
mov
idivb
repnz
scas
ret
inc
mov
jo
daa
or
cmp
out
xor
pop
sbbb
lret
ret
xchg
loopne
je
outsb
sub
jmp
imul
dec
jne
adc
adc
mov
loope
pushl
clc
movsl
repnz
ret
push
dec
cmp
jle
pop
adc
fsubl
repz
mov
pop
leave
int
stc
adc
add
pop
cmp
iret
inc
and
adc
gs
sub
test
faddp
and
push
jle
jle
xor
xor
pop
fimuls
push
and
adc
cmpl
xchg
sub
jno
or
push
mov
addl
into
adc
dec
mov
push
js
test
loope
lock
add
mov
out
mov
xor
pop
movsb
pop
inc
icebp
dec
mov
mov
gs
test
popf
xchg
mov
xchg
add
mov
xor
lcall
xor
inc
pop
movsl
arpl
ret
data16
push
std
dec
sahf
and
mov
jae
scas
cld
xor
stos
mov
sbb
arpl
mov
cltd
pop
and
xor
xchg
sarb
int
jle
adc
xchg
call
dec
mov
aad
aam
sbb
sbb
stos
addr16
dec
mov
push
lock
pusha
add
mov
cmpsl
loopne
stc
cld
popa
cmc
in
popa
push
xor
sbb
jmp
push
out
adc
out
jle
push
sub
test
loopne
sbb
hlt
in
adc
add
cltd
imul
out
push
sti
sahf
or
ret
test
imul
add
xchg
mov
data16
popa
in
jl
inc
pop
testb
aad
or
pop
and
loopne
add
in
mov
xchg
jno
out
adc
mov
iret
jl
jo
lcall
pop
andb
outsl
loopne
xlat
cmovle
pop
cmp
cmpsl
push
mov
dec
xor
ret
je
inc
inc
push
xchg
mov
rcll
cmp
arpl
les
push
sarl
ret
outsb
lcall
cmp
or
mov
pop
dec
or
mov
pop
out
push
or
insl
adc
push
sub
add
lcall
jbe,pn
sahf
fidivrs
add
jns
cmpsb
add
cmp
sub
daa
push
fiadds
ffree
mov
dec
xor
movsb
in
fs
xor
dec
mov
push
add
cmpsb
jbe
jp
xchg
adc
inc
push
cld
into
pop
pop
lds
in
or
adc
jmp
cmc
shlb
nopl
icebp
cwtl
adc
mov
jnp
pop
add
das
sbb
fiadds
scas
or
scas
pop
cmp
adc
test
std
jb
jg
inc
adc
mov
dec
xor
and
testl
test
jae
imul
addr16
jbe
popa
jno
fidivs
lods
mull
mov
mov
mov
pop
xchg
leave
dec
mov
add
movsl
sub
lods
inc
iret
cs
add
stos
insb
sbbb
add
enter
mov
mov
sahf
std
aam
daa
mov
lcall
stos
andl
xchg
mov
aam
inc
lods
fmuls
mov
and
insl
daa
in
mov
jb
dec
icebp
add
out
movsl
inc
push
adc
repz
jmp
add
test
aaa
mov
popf
out
mov
sarb
sbb
and
lret
out
xor
xchg
push
shll
pusha
dec
mov
movsb
out
lods
mov
test
out
mov
xchg
pop
cld
mov
inc
loopne
jnp
test
lcall
imul
lret
mov
fnstenv
faddl
push
std
adc
loope
push
nop
cmp
mov
sub
sbb
mov
mov
mov
mov
icebp
or
aam
ret
add
push
mov
cltd
push
lret
xchg
xchg
in
xor
dec
cmp
cli
add
inc
jge
sbb
lret
add
jo
mov
mov
jno
sbb
test
mov
push
sbbb
xor
cmpsb
scas
jl
js
hlt
imul
mov
sar
fidivs
jecxz
iret
jo
jno
cld
pusha
test
in
imul
mov
out
ret
rolb
out
adc
fsubrp
jnp
rorb
cmp
mov
pop
outsb
je
cmp
xor
in
stos
pop
stos
cmp
out
sbb
sbb
test
pop
add
sahf
cwtl
and
rcll
nop
pop
xchg
push
xorb
push
and
icebp
or
xchg
mov
enter
dec
addl
mov
das
xor
imul
mov
push
mov
lret
push
inc
sahf
push
push
repz
sub
dec
xor
mov
lods
arpl
cli
inc
jmp
pusha
xchg
sub
xor
mov
pop
mov
imul
es
jg
dec
gs
mov
push
clc
sbb
xor
mov
mov
xchg
cmp
add
push
loopne
cmp
imul
int3
jb
jg
push
dec
xchg
or
outsb
jno
pusha
out
out
out
int
mov
movsb
repz
jmp
test
adcb
sbb
int
and
rclb
jecxz
rsqrtps
int3
mov
call
ja
inc
sub
cmp
je
inc
out
mov
jmp
in
lock
xchg
inc
lods
add
lahf
test
ja
mov
jmp
loop
scas
out
push
std
cmpsb
mov
or
ja
push
jmp
dec
cmp
jae
dec
or
xchg
inc
imul
andb
hlt
sub
pop
or
movsb
xchg
dec
jno
nop
stos
adcl
pop
jge
add
imul
mov
xlat
sbb
mov
popf
mov
mov
in
mov
movl
jo
in
sub
jo
sbb
int3
lock
inc
js
enter
and
sub
inc
pop
or
lcall
mov
fdivrs
xchg
add
lods
mov
in
test
lret
fs
in
imul
jnp
xchg
fisttpll
mov
xchg
jae
fnstsw
and
shlb
notb
in
dec
xchg
cld
cwtl
jle
mov
pop
flds
subl
and
flds
stos
js
and
xchg
cmpl
test
out
in
leave
or
lea
out
lret
inc
adcb
pop
mov
jae
leave
fimull
addb
jnp
sahf
adc
jle
add
stc
cmp
mov
in
lock
std
clc
scas
push
xchg
out
sub
sub
jl
outsl
jge
fs
leave
add
inc
lcall
fisttpl
scas
pop
xchg
call
pushf
psubsb
mov
clc
call
test
rorl
fldl
cwtl
xchg
mov
xor
push
es
push
fwait
sbb
lea
pop
lcall
and
pop
cld
xchg
cmp
adc
or
cmpsb
cs
dec
adc
mov
insb
movsb
subl
in
repnz
orl
xlat
xor
arpl
leave
cmpb
or
stc
push
adc
jmp
ss
cmpsl
hlt
push
cmp
daa
jo
cmp
inc
loope
inc
adc
push
or
add
jg
ljmp
jg,pn
aam
repnz
mov
push
mov
or
pop
data16
sub
icebp
fisttps
sbbl
add
into
sub
xor
cmp
jae
stos
insl
clc
mov
xchg
lahf
push
mov
inc
push
mov
or
add
mov
rcll
sub
rcr
xchg
andl
stos
popf
push
out
stc
incb
mov
cmp
fsubs
dec
in
inc
int
pop
jae
lds
movsl
cwtl
lea
sub
std
lret
pusha
int
cmp
pop
js
rcll
sub
jne
repnz
add
push
neg
in
push
jno
imul
pop
xchg
or
bound
jb
stc
subb
scas
aaa
imul
mov
lcall
fs
or
fcmovnu
dec
bound
inc
inc
ret
mov
sub
test
pop
and
xchg
add
out
sbb
notl
adc
or
arpl
pop
pop
loope
mov
aam
jmp
inc
or
stc
into
pop
xor
loop
mov
sub
loopne
fcomps
push
push
ds
test
or
test
inc
stos
inc
mov
stos
arpl
test
pop
nop
cmc
js
sbb
lock
rcrb
jne
dec
sub
fnstenv
mov
jns
dec
pop
jne
scas
cli
lds
pop
out
adc
pop
inc
jecxz
xchg
mov
movl
cmpsb
enter
clc
fs
nop
inc
mov
aad
enter
aam
or
xor
cmc
xchg
xor
lahf
add
mov
push
insb
test
imul
jl
dec
add
pop
dec
mov
lret
pop
xchg
testb
push
mov
aam
daa
push
or
cmc
adc
jo
gs
mov
and
inc
test
outsl
mov
mov
mov
sbb
mov
add
filds
ret
xchg
jbe
lret
ss
cmp
lret
cltd
sub
imul
loope
ljmp
fs
cmp
movsl
js
lods
jo
in
mov
das
mov
lock
pop
ficoml
sbbb
sub
xor
jg
lock
jle
cwtl
sbb
sub
xchg
jp
daa
sbb
mov
push
dec
xor
jp
ficomps
das
call
and
push
test
push
testb
fdivl
out
sub
pop
mov
clc
sbb
dec
in
popa
sub
xor
add
mov
add
sub
js
xor
std
cli
jns
cmc
adc
xor
dec
jne
push
mov
mov
iretw
loop
cmp
daa
jle
js
in
add
jns
hlt
test
sbb
inc
jns
dec
push
into
cmp
inc
jno
inc
inc
cwtl
ja
jo
pop
lock
jle
out
in
fnstcw
jg
dec
pop
add
aaa
ss
push
ja
cmp
nop
xchg
and
mov
add
mov
nop
jp
aas
cmp
xchg
mov
adc
mov
mov
movsb
ja
lret
jle
add
mov
pop
and
icebp
inc
mov
inc
shrl
cld
lahf
lock
mov
addr16
lea
lret
jo
cmpsb
jle
sbb
pushf
orl
jnp
stc
test
insb
cld
jns
loopne
push
data16
mov
aaa
cmp
sbb
sti
mov
popa
in
iret
stos
aas
add
push
dec
mov
lock
xor
insl
pop
sahf
out
icebp
int3
push
mov
sub
mov
orb
aam
pop
mov
movsl
repz
mov
shrl
popf
test
adc
imul
int
lcall
xor
mov
or
mov
jge
push
mov
fwait
adc
xlat
and
pop
mov
out
stos
push
les
or
out
xlat
cmpsl
sub
jl
mov
mov
mov
inc
mov
push
outsl
mov
loop
fnsave
or
pop
lea
int3
dec
push
sub
push
mov
xor
mov
and
mov
sbb
mov
mov
unpckhps
cmc
mov
das
repz
call
ret
and
pusha
jle
cmp
jae
or
mov
mov
push
push
movsl
lods
in
scas
popf
in
and
jbe
cmp
aaa
das
cld
mov
jo
cmp
inc
inc
gs
je
lods
mov
pop
lea
xchg
jo
movsb
pop
add
dec
dec
je
in
pushf
and
out
jne
dec
xchg
inc
arpl
fisttpl
mov
xchg
imulb
jne
xchg
fsubrl
iret
xchg
pop
adc
negl
adc
mov
fs
mov
add
hlt
sub
inc
test
dec
jge
imul
ret
lea
xlat
sbb
call
mov
es
dec
out
xchg
push
enter
loop
pop
sbb
sub
rcl
ret
sub
jmp
stos
sub
push
in
mov
std
cmc
shlb
jno
lods
mov
cltd
mov
jg
cld
jmp
xchg
mov
cmpb
sub
xor
pushl
popa
mov
jge
pop
rorb
and
xchg
cmpsl
shll
add
cmp
xchg
push
adc
mov
pop
mov
inc
push
aas
movsb
fcmovnu
inc
in
adc
pop
pop
xchg
and
clc
pop
mov
mov
scas
je
xor
dec
ja
imul
ljmp
into
stos
mov
pop
and
int
fildll
filds
clc
lods
pop
inc
jb
ja
push
fidivrl
adc
movsb
cmp
fsts
insl
inc
shr
std
lret
mov
mov
and
mov
inc
push
popf
xchg
movsl
int
sbb
push
rorb
sbb
imul
fwait
jbe
sbb
push
push
stc
fsubr
push
sbb
test
idivb
push
lcall
scas
mov
pop
dec
jb
sub
dec
mov
add
scas
in
sarb
cmp
add
push
push
adc
sub
and
xchg
arpl
dec
mov
or
pop
mov
jecxz
jmp
and
stos
cli
mov
mov
mov
aam
aad
lret
or
and
adc
mov
adc
popf
jae
or
call
aad
xor
and
inc
call
leave
mov
out
xor
clc
push
insb
and
outsb
cmp
sbb
inc
lock
jo,pt
mov
out
jo
ret
push
inc
push
push
popf
jb
add
jecxz
inc
das
idivb
in
sti
pop
gs
addr16
xchg
pop
push
xor
pop
pop
dec
aad
push
xorb
lea
stos
daa
push
push
sbb
imul
jne
jnp
repz
imul
repnz
cmp
ja
decl
cmp
aaa
lods
adc
push
fs
mov
add
mov
pop
sub
cli
mov
sub
or
adc
sbb
adc
test
out
addr16
jmp
adcl
mov
mov
and
ret
jp
std
xchg
pop
push
in
shrl
popa
sub
cmp
je
cmp
cwtl
in
nop
mov
adc
push
mov
sbb
test
fisttpl
movsb
repz
fwait
aad
inc
js
fwait
mov
sub
test
dec
mov
outsb
out
pop
push
ljmp
js
mov
push
mov
lock
repz
add
mov
test
sub
mov
dec
mov
and
mov
int
jmp
jae
arpl
sbb
xchg
inc
xchg
sub
ficoms
movsb
arpl
xor
bound
pop
cmp
mov
xchg
sbb
jge
fisubrs
mov
pop
xor
pusha
inc
jle
add
iret
in
xchg
cmc
adc
xor
ljmp
pop
dec
repz
mov
and
cmp
sub
mov
sub
das
popf
call
or
jae
mov
jl
mov
mov
jo
xor
adc
fwait
xor
stos
addr16
fisttps
daa
mov
or
cli
dec
push
pop
xchg
pop
outsb
popf
sbb
scas
test
sub
insl
cmpsl
mov
cld
test
repz
jbe
pop
test
inc
mov
mov
xchg
arpl
jge
rolb
dec
pushf
mov
adc
jne
dec
in
jge
mov
cmp
sarb
xchg
pop
fs
jo
das
icebp
jge
mov
sahf
inc
leave
lock
sbb
psllq
jge
sub
mov
and
push
into
xor
adc
inc
push
js
out
jge
inc
sbb
dec
cmp
push
push
jl
lahf
jl
mov
jge
fisubs
or
sbb
push
inc
add
xchg
inc
mov
cltd
push
sbb
sub
add
push
cs
jb
dec
xlat
sub
mov
fidivrs
bound
dec
mov
shl
xor
popw
cltd
lret
scas
dec
and
repz
testl
and
sub
xlat
mov
int3
pop
insb
ljmp
jg
fcoms
sub
adc
arpl
ret
dec
stos
xchg
push
dec
repnz
insb
mov
sbb
ror
jno
add
imull
sub
mov
mov
fst
jo
call
pop
adc
mov
mov
sahf
sahf
in
mov
outsl
leave
scas
xor
pushf
or
sbb
and
cmpsl
popf
cmp
jmp
and
shlb
int3
in
inc
push
mov
je
push
push
dec
cli
subl
push
das
cltd
imulb
inc
std
pop
hlt
xchg
mov
sbb
das
cmpsl
inc
sahf
xchg
fadds
stc
jmp
jge
dec
les
js
dec
stc
adc
sub
enter
clc
aas
lcall
scas
dec
stos
cli
in
push
adc
jle
jg
mov
sbb
mov
lcall
imul
push
enter
out
shrl
fldcw
and
imul
sub
pop
ds
mov
jbe
jb
push
push
cmp
xor
dec
add
data16
stc
clc
inc
mov
mov
sbb
jp
jb
push
out
dec
loop
ljmp
adc
jge
sub
cmp
imul
insl
lret
cmc
xchg
pop
pop
pop
js
ss
iret
add
jae
out
mov
adc
xchg
scas
or
dec
xchg
pop
iret
fldenv
daa
mov
mov
fwait
sbb
popa
hlt
push
lahf
or
jne
mov
add
ret
and
xor
mov
inc
mov
addr16
int3
jne
mov
mulb
push
xchg
icebp
idiv
loopne
pop
and
jnp
jg
fnstenv
push
mov
insb
out
jb
adc
xor
cmp
adc
jge
sbb
inc
pop
sub
in
les
cmp
push
mov
xchg
push
adc
and
mov
inc
jbe
sbbb
clc
pop
mov
xchg
aad
cmp
rclb
fldt
pop
push
out
adc
bnd
scas
mov
cli
scas
pop
inc
pop
ss
ret
mov
push
das
sub
cmp
ret
out
pop
das
je
fisubrs
mov
mov
aas
leave
dec
xor
or
push
sbb
iret
mov
fmull
inc
js
dec
adc
repnz
xor
unpckhps
push
fdivl
mov
add
in
mov
mov
push
mov
aam
test
sbb
cmpsl
cmp
outsb
mov
dec
fmull
jnp
add
rcl
es
les
cmp
jle
push
push
loope
pusha
dec
dec
shll
jp
les
scas
jmp
mov
shrb
jle
jmp
scas
sub
cmp
dec
subb
cmp
mov
add
stos
cmpsb
pop
test
ficompl
adc
mov
lahf
dec
sub
popa
imul
aad
pop
clc
test
fisttpl
mov
fistpl
in
or
in
fsubs
hlt
roll
pop
dec
idivl
and
mov
cmp
inc
shll
imul
sub
and
push
add
push
test
inc
ret
pop
in
out
ja
cmp
imul
push
andl
add
movsl
inc
sub
mov
and
iret
in
shrb
pushf
lods
mov
dec
mov
mov
nop
out
mov
lds
push
cmp
or
and
loop
push
das
mov
push
push
test
popa
aas
ficompl
or
adc
push
xor
pop
das
pop
jge
in
and
lods
cmp
mov
mov
sub
inc
aam
mov
aad
push
jnp
pop
jnp
fdiv
jae
ljmp
push
pop
push
in
cltd
in
jbe
aam
gs
lds
jae
out
xchg
aam
mov
mov
push
or
sahf
mov
loopne
mov
inc
xchg
movsl
add
popa
push
mov
xchg
in
cmp
mov
xlat
shll
cli
pushf
iret
fbstp
push
jns
xchg
test
fidivs
adc
cmpsb
lea
jne
mov
stos
mov
test
sub
nop
leave
cmp
movsb
fldenv
add
in
mov
cwtl
ret
push
xor
cmpsb
das
sub
cld
call
aam
sbb
xchg
addb
mov
mov
jecxz
sub
das
loop
mov
out
daa
arpl
sarl
inc
add
mov
sub
ljmp
call
mov
cmpsl
push
lods
ss
lods
pushl
fdivrs
cmp
mov
fsubrl
cmpsl
test
inc
popa
mov
sahf
out
in
scas
lods
mov
rol
shl
push
shll
xorl
push
test
push
shrb
xor
pop
insb
int
rclb
adcb
dec
movl
js
popf
into
dec
out
jg
add
mov
pop
stos
adc
bound
stos
mov
pop
ss
in
add
hlt
lahf
js,pt
aad
cmp
roll
sbb
and
je
mov
inc
insl
mov
in
xlat
pop
xchg
jecxz
and
filds
sbbl
pop
repnz
adc
lock
sbbl
clc
test
int3
mov
sbbb
outsl
in
enter
stos
stc
add
push
cmpsb
and
jae
aam
in
dec
lret
shlb
cmpsl
add
sbb
inc
xor
xor
sub
cmp
daa
fwait
mov
push
mov
aas
dec
push
jle
lock
imul
adc
test
pop
xchg
insl
repz
sbb
aam
idivl
shll
jno
mov
xchg
stos
enter
aas
sbb
adc
fcmovnbe
jne
clc
pusha
or
mov
push
cmpsb
stc
mov
dec
popa
dec
popf
pop
mov
ss
add
idivl
mov
int3
mov
sbb
pop
icebp
push
push
fs
xchg
jmp
xlat
push
mov
and
mov
push
in
add
testb
mov
jno
pop
imul
and
dec
in
jns
mov
add
inc
je
cli
sbb
repnz
or
inc
adc
or
lret
hlt
loop,pn
loop
ds
jae
jno
lahf
push
jnp
pop
xchg
rcrb
xor
ret
or
mov
pop
ljmp
add
out
dec
jle
loop
lock
and
shlb
aaa
in
push
and
adcl
fcompl
popf
dec
pushf
adc
loop
adc
jecxz
faddp
and
and
leave
fdivr
and
cmp
inc
inc
stc
jno
mov
arpl
lahf
jp
dec
out
addb
nop
add
sub
sub
pop
enter
dec
add
pop
pusha
lret
outsl
bound
shl
xor
add
mov
and
aaa
push
inc
cmpl
sbb
inc
mov
mov
sub
sbb
cmpsb
test
clc
xchg
lds
jecxz
enter
lds
jecxz
orb
in
jne
and
iret
daa
bnd
mov
jnp
cmp
icebp
enter
adc
cmc
ss
movsl
gs
ss
cmpsl
or
loope
leave
ljmp
std
sbb
and
mov
fs
in
mov
sub
inc
test
ljmp
add
mov
movsl
push
test
xorb
push
sbb
and
sbb
mov
push
mov
dec
mov
js
lcall
iret
mov
sub
mov
sahf
xchg
dec
jo
xchg
call
adc
mov
and
add
jmp
data16
jl
xchg
inc
adc
daa
push
aam
pop
mov
and
mov
imul
rcrb
lds
pop
scas
xorb
in
push
push
ja
call
dec
push
and
and
adc
add
inc
lods
push
jno
sbb
sub
imul
imul
mov
adc
stc
xlat
mov
sbb
cmpsb
jle
pushf
repnz
jnp
mov
lds
add
cli
dec
xor
scas
flds
mov
pusha
imul
xchg
or
std
mov
pushf
aam
push
nop
push
fadd
push
pop
lock
xor
xchg
test
lods
mov
leave
clc
repz
pop
inc
int
pop
jno
lret
out
inc
rol
and
cmp
scas
insl
cltd
cmp
cli
add
leave
rcl
je
out
xchg
daa
dec
mov
ret
popa
call
cmpsl
test
mov
jmp
push
add
imul
movb
push
cmp
sbb
or
xchg
xchg
stos
pop
adc
jmp
rclb
jmp
in
cmc
xor
xchg
push
cli
sbb
mov
adc
js
xlat
inc
pusha
addr16
adc
out
in
out
xor
jmp
popf
fmul
daa
and
lret
enter
sar
or
push
les
and
push
lods
test
xchg
andb
stos
arpl
mov
sub
jne
sub
dec
cltd
add
mov
dec
ljmp
mov
xchg
mov
push
enter
and
cmp
inc
cwtl
xor
jno
jmp
fwait
rcr
out
pop
arpl
ljmp
mov
insl
xor
jmp
cmc
rcrl
jo
movsl
and
mov
out
ss
inc
sub
repnz
mov
ds
leave
dec
dec
stos
pusha
cmpsb
xchg
popf
dec
test
xchg
mov
test
mov
lock
arpl
and
adc
push
lcall
mov
pop
lret
stc
inc
outsl
mov
hlt
in
ficoms
and
mov
add
jl
jp
test
mov
daa
movsb
push
cmp
imul
xlat
jle
movsl
lcall
aad
lock
leave
test
sbb
lcall
sbb
sbb
or
mov
sub
loop
mov
imull
je
hlt
xchg
xor
gs
ret
dec
negb
neg
je
and
push
insb
or
xchg
xor
xchg
sub
ljmp
inc
popa
aad
enter
cwtl
inc
mov
notl
adc
les
jno
mov
ret
adc
mov
mov
rorb
push
jae
dec
push
jge
mov
imul
enter
jae
inc
es
fbstp
push
es
mov
jno
xchg
inc
jl
nop
cmpsl
sbb
sbb
sub
sbb
jbe
jl
jno
sarl
test
faddp
shll
out
push
aam
test
add
pop
test
insb
fsubp
fistps
sub
xchg
push
fdivs
xlat
out
mov
sub
jge
les
adc
inc
daa
xchg
out
jo
aaa
mov
pop
adc
sbb
jge
push
fmulp
sarl
scas
add
cltd
mov
cmp
or
jbe
adc
jnp
push
scas
sub
mov
adcl
fcmovu
dec
test
xchg
mov
dec
xchg
je
jmp
and
aad
gs
jmp
jne
movsl
or
xchg
mov
pushf
mov
dec
pop
aas
sahf
test
mov
vpor
dec
ss
pop
and
das
aam
mov
mov
adc
jp
dec
sub
sub
push
and
mov
out
push
jo
push
jp
in
mov
cmpsb
imul
adcl
aas
jo
sub
int
lds
ret
sbb
jge,pn
xchg
mov
outsl
fisubl
iret
repnz
icebp
cs
mov
adc
loope
cmovg
dec
stos
mov
jg
fldt
cmpsb
jne
inc
lods
push
jb
lock
pop
xchg
out
or
dec
pop
jbe
lret
inc
lods
xchg
fadd
call
jg
pop
pop
xor
push
aaa
sbb
inc
and
and
push
imul
xor
push
shll
cmp
xor
xor
mov
xor
inc
lcall
push
and
sbb
xor
xchg
push
outsl
sbb
and
inc
imul
insb
imul
and
es
and
stc
pop
sbb
js
sub
cltd
mov
adc
rclb
sbb
in
sbb
inc
adc
arpl
dec
mov
mov
sub
sbb
fsubrp
loop
adcl
jmp
and
les
stc
mov
out
test
push
jns
add
adc
cli
imul
ds
sub
dec
pop
lods
popf
insl
xchg
xchg
push
adc
out
cmpl
pop
addb
pop
loopne
ja
pop
xchg
stos
cmp
into
pop
xor
or
jmp
inc
and
sbb
enter
test
or
jp
jns
mov
fmull
mov
int3
outsb
push
pop
lret
ror
mov
sub
aaa
sub
movsb
push
mov
jo
dec
clc
jne
mov
and
mov
jno
pushl
pop
aam
xor
dec
imul
cmp
and
fcmovbe
andb
xchg
out
or
mov
mov
pop
dec
xor
jnp
ret
hlt
pushf
dec
mov
or
cmp
in
cmp
stos
outsb
fstl
sar
inc
xchg
add
sub
jmp
outsl
aam
dec
nop
mov
inc
inc
lahf
inc
aam
lods
aaa
pop
dec
addr16
rol
das
adc
pop
daa
subl
and
arpl
pop
push
dec
test
sub
xchg
fisttps
xchg
pop
mov
pop
rcll
push
fs
jnp
jmp
movsl
jo
add
pushl
jp
fistl
jl
movsl
adc
insb
and
lods
jmp
or
lahf
jnp
xchg
lods
aam
adc
lret
mov
cmp
mov
dec
shlb
and
dec
stc
das
sbb
or
mov
fstp
mov
data16
nop
xchg
daa
cmp
mov
sahf
in
fistpl
pushf
daa
orl
inc
inc
mov
mov
push
push
and
dec
mov
push
fsubrs
out
jp
lods
dec
mov
int3
push
push
and
mov
fcoms
call
insb
and
mov
pop
jp
pop
lea
icebp
sbb
notb
mov
addr16
adc
int3
scas
push
adc
add
xchg
jle
leave
fwait
and
inc
and
rcrb
outsb
insb
negl
push
cs
fstp
testl
and
aad
lret
and
lea
cmp
or
aad
sub
xlat
jge
test
je
jecxz
mov
sbb
fmull
xorl
jnp
and
xor
mov
jnp
or
add
add
and
pop
lods
cmp
insb
sbb
push
pop
push
idivl
mov
popa
movsl
or
hlt
icebp
rcr
sbb
lret
cmp
mov
scas
stos
les
dec
pusha
sbb
jmp
xor
cmp
cld
mov
in
fisttpl
pusha
mov
lret
cwtl
and
das
arpl
addr16
nop
mov
cwtl
clc
data16
sarl
push
icebp
and
enter
cwtl
and
mov
cs
mov
jecxz
inc
dec
mov
mov
mov
cmpsb
push
and
mov
push
mov
cmp
in
add
lock
repz
dec
hlt
imul
loope
inc
aad
mov
jmp
xchg
dec
loop
lret
inc
add
repz
xchg
push
decl
dec
sti
xlat
aaa
lods
add
in
pop
xchg
divb
and
xor
fstps
lods
mov
xor
cmp
int3
sarb
fildl
xor
mov
inc
and
sbbb
call
push
movsl
in
xchg
rcr
add
nop
int3
lcall
out
imul
mov
cmp
add
jmp
jle
dec
pushf
loopne
jbe
mov
mov
add
fdivrl
add
inc
daa
int
std
sahf
xor
fcmovnb
les
fadd
sub
or
sbb
push
adc
inc
jns
and
lods
addr16
pop
bound
mov
pusha
or
xorl
loop
es
push
mov
jg
pop
and
mov
pop
xchg
pusha
cld
sbb
gs
test
push
fidivl
loop
call
adc
push
mov
xor
push
jae
stc
in
cmp
pusha
sbbb
mov
ja
mov
inc
stc
ds
dec
cmp
insb
sbb
mov
or
mov
xchg
std
loopne
push
mov
jo
sub
lahf
mov
aaa
insb
lea
fwait
dec
jbe
or
lahf
lods
cmp
adc
jmp
sbb
leave
mov
xor
out
jl
mov
test
jmp
pop
or
jp
or
ds
stos
cwtl
xor
out
pop
icebp
sbb
mov
rolb
fidivs
mov
jo
sub
lcall
and
or
cwtl
xor
xchg
ror
cs
push
and
jg
xchg
jg
sti
loope
sub
int3
fiaddl
jecxz
pop
adc
adc
into
cmpsl
xor
int
and
jg
dec
mov
push
add
push
push
xor
les
ret
repz
nop
into
adc
call
rcr
xchg
xchg
dec
hlt
mov
sbb
pop
push
xchg
cltd
es
and
in
adc
sahf
pop
in
jbe
mov
xor
call
stos
daa
jbe
shrb
out
imul
movsb
xor
in
adc
cmp
mov
pop
push
mov
xchg
shl
mov
outsb
or
cmpb
inc
in
jg
cltd
mov
stos
iret
dec
and
dec
lea
mov
mov
mov
aam
pop
test
mov
mov
dec
push
pop
jo
xor
testb
pop
xchg
mov
js
pop
jns
dec
mov
mov
std
xchg
int3
or
jbe
jg
in
ljmp
inc
pop
int
int
dec
or
adc
aam
xor
and
imul
sbbl
rorl
lods
push
adc
repnz
sub
push
aad
repnz
inc
insb
push
lods
ss
jnp
repz
ret
adc
push
rorl
lods
ja
dec
hlt
pop
sbb
and
xchg
xor
pushf
xchg
in
mov
bound
jae
scas
nop
rorb
popf
out
xor
out
movsl
sti
push
aaa
lods
push
roll
or
jae
clc
xchg
pop
je
es
nop
adc
xchg
subb
sbb
xchg
jp
orl
mov
in
pop
cmp
imul
test
icebp
loopne
mov
pop
jnp
add
repnz
and
or
inc
push
xchg
ja
mov
push
out
dec
jns
sub
outsl
in
lock
sbb
sub
lock
jecxz
pop
fcmovnu
add
rol
icebp
popa
push
lret
fisubrs
call
mov
mov
or
cs
adc
insl
push
pop
sbb
inc
pop
outsl
dec
std
adc
sub
mov
iret
js
test
mov
xchg
xor
data16
icebp
rorb
adc
dec
jb
add
repnz
repz
mov
push
adc
pop
jns
lods
negl
es
cmc
inc
dec
mov
and
movsb
fdivs
mov
lds
mov
cltd
clc
dec
cmp
jnp
and
push
hlt
testl
mov
stc
int
movsl
rep
and
dec
cmpsb
or
or
push
in
inc
mov
test
or
sbb
lret
iret
rcrl
fnsave
in
mov
outsb
lcall
sub
mov
outsl
pop
dec
sub
fisubrl
sbb
into
xchg
mov
jp
or
lock
cmc
repz
and
imul
stos
sarb
jo
jg
leave
sub
xorb
inc
xlat
xor
push
aas
push
mov
mov
lret
daa
pop
xor
fcompp
inc
rcrb
jmp
inc
imul
jp
mov
sbb
cld
push
jg
push
push
inc
mov
fldlg2
cmp
adc
jecxz
bnd
std
imul
xchg
je
xlat
jecxz
test
movsl
sbb
mov
push
jne
daa
fimull
int
pushw
or
cwtl
mov
out
inc
push
pop
pop
shrl
mov
or
sub
dec
inc
mov
pop
fwait
sub
adc
inc
or
and
cmc
and
ss
cmpsl
les
pusha
movsl
testb
dec
add
dec
repz
push
in
mov
cmp
or
sub
sub
add
xor
lret
stos
sbb
hlt
popa
mov
cmpsb
push
xchg
add
jns
mov
int
es
pop
inc
lret
push
sbb
stos
or
outsb
pop
mov
mov
mov
sub
pop
cs
pop
mov
popf
add
cmp
push
fs
int3
pop
inc
pop
inc
repnz
sub
mov
and
cwtl
pusha
sub
imul
out
iret
cmpsl
ret
and
pop
jns
dec
or
out
sbb
sbb
dec
aad
js
push
lahf
sub
fs
dec
cld
xchg
cli
mov
in
fisttps
push
xor
push
and
cmpsl
lcall
gs
clc
pop
insb
movsb
arpl
adc
test
adc
pop
ret
clc
fildll
push
lahf
stos
push
fimull
orl
sbb
mov
inc
jg
sbb
or
dec
or
stos
stos
lret
inc
frstor
clc
sub
outsb
nop
test
sbb
int
lret
push
cmc
or
dec
sbb
scas
add
iret
call
sub
movsl
pop
push
cmpsl
mov
add
shrd
negl
sbbb
jne
mov
jp
gs
mov
in
push
xor
cld
inc
mov
sbb
cmpsl
je
stos
inc
mov
fnstsw
ljmp
jne
out
mov
insb
movsb
aad
mul
ds
xor
je
jne
movsb
inc
dec
add
int3
cltd
xor
xor
aam
dec
or
lahf
fnsave
inc
mov
into
xchg
xchg
mov
jb
test
rclb
icebp
and
ds
data16
fwait
sub
daa
movsb
sub
aam
int3
lods
mov
int
je
iret
movsb
cmp
lcall
adc
int3
cmp
inc
in
and
sar
push
mul
in
insb
stos
pop
push
xchg
lea
rorb
call
and
mov
jo
pop
adc
and
pushw
mov
fidivs
rcl
inc
outsl
ljmp
popa
jle
loop
lods
add
stos
cmc
jnp
out
out
jl
sub
push
mov
inc
mov
add
mov
sbb
xchg
das
clc
cmp
dec
addr16
into
inc
xor
arpl
jg
sub
jl
in
push
dec
cmp
cs
gs
and
dec
push
std
iret
inc
xor
loop
rcll
sub
sbb
repz
stos
lods
or
movsb
nop
sub
jbe
hlt
repz
das
das
ret
into
adc
out
clc
jbe
repz
jp
gs
dec
fisubs
jb
stc
inc
dec
notl
sbb
xor
out
mov
ljmp
mov
ret
scas
clc
xchg
push
xchg
cmp
cmp
pop
jae
loop
inc
fwait
push
rorb
mov
jle
mov
lahf
shlb
inc
icebp
and
lret
cltd
jo
xchg
mov
loope
data16
mov
insl
int3
push
out
adc
int
ret
push
push
jl
jg
push
sbb
mov
jl
pusha
mov
mov
lret
ret
cli
sub
cmp
int
scas
dec
xorb
jo
imul
icebp
movsl
sti
add
sbb
arpl
fistpll
mov
mov
cmp
scas
aas
fnstcw
es
test
jl
xchg
mov
or
mov
cmp
in
or
mov
insb
test
pushf
andl
fldl
popa
jb
add
push
lods
xor
sub
add
mov
xor
push
jb
cltd
dec
and
les
xor
imul
loopne
mov
add
xchg
mov
ljmp
jnp
cmp
test
jmp
dec
mov
jmp
mov
pop
push
dec
insl
incb
fucomip
mov
inc
xor
sub
jnp
lahf
daa
mov
or
sub
or
sbb
pop
xor
xchg
insb
push
mov
xlat
inc
sub
push
mov
stos
cmp
nop
insb
pusha
xor
sbb
jecxz
or
aas
xchg
iret
test
test
fidivl
fs
es
mov
fs
and
mov
scas
xlat
jge
sar
outsb
stos
mov
mov
lock
xchg
popf
lahf
push
arpl
fldl
push
xchg
insb
fstpt
fmuls
loope
dec
push
dec
fists
mov
push
js
pop
pop
mov
testb
shlb
inc
sbbl
lea
push
push
in
scas
dec
mov
out
loope
mov
cmpsl
dec
test
pop
add
xor
pop
and
or
test
cmpsb
orl
jge
outsl
jmp
sub
push
sbb
xchg
sti
xchg
fs
stc
movsl
ret
mov
jp
lahf
pop
mov
out
add
insl
roll
and
jg
js
jbe
push
inc
mov
nop
push
and
dec
scas
scas
jecxz
push
jge
loopne
aad
int
ficomps
out
add
mov
sbb
out
call
xchg
xchg
dec
cwtl
outsl
pop
gs
push
fistpl
jmp
rcl
or
and
push
xor
sub
jecxz
call
sbb
daa
cmp
test
lret
imul
add
inc
add
mov
addl
fs
xchg
dec
pop
inc
daa
or
mov
lret
cli
sti
jle
xchg
mov
xchg
push
or
xchg
lcall
fcompl
int
mov
stc
jl
push
and
xchg
jo
adc
lret
and
fs
nop
push
fldz
fwait
xor
push
sub
inc
notl
mov
ret
sub
mov
iret
sbb
loop
addr16
lock
mov
test
pop
jecxz
int
or
into
sbbb
xchg
cld
in
cwtl
cmpsb
mov
sbb
sub
xchg
jno
inc
xor
adc
add
scas
mov
test
cmp
out
sti
inc
int
jae
cwtl
out
das
ljmp
cmc
mov
jno
pop
lcall
sub
mov
mov
ljmp
das
mov
xor
idivl
addr16
xor
inc
inc
cmp
jle
inc
mov
xchg
or
rorl
adcb
mov
loope
out
rcll
sbb
jae
inc
cmp
dec
ja
cmp
pop
std
popa
testb
addr16
jns
mov
dec
fucomi
nop
add
cmp
clc
cmp
mov
xor
pop
call
xchg
mov
insl
and
int3
dec
lret
xor
mov
fstps
push
shl
add
jle
xor
jmp
mov
test
jl
jp
xor
push
in
mov
dec
ss
test
bound
mov
shll
xor
add
lock
xchg
and
int3
xchg
mov
jnp
xor
stos
pop
out
dec
cs
and
sub
test
popa
sbb
nop
pop
lret
xchg
dec
dec
pop
and
xor
ds
sbb
lods
fisubl
movsl
sahf
mov
dec
jl
ja
shlb
jle
jnp
mov
mov
hlt
gs
jno
cmp
dec
fimuls
cmovp
js
cmp
movsl
leave
mov
cmp
idivb
imul
jle
or
popa
fildl
cmp
sub
insl
arpl
mov
aam
add
rcrl
lock
nop
aas
mov
fucom
test
jnp
adc
cltd
mov
ficoml
icebp
es
jg
sti
mov
sahf
mov
jns
enter
arpl
cmp
sti
inc
in
push
enter
aam
sub
and
adc
insb
or
add
loope
pop
dec
lods
push
sub
mov
sub
cmp
push
aas
out
jno
sub
add
or
out
int
arpl
or
dec
mov
pop
neg
aaa
stos
rorb
or
mov
mov
push
push
out
sub
call
ljmp
decl
sub
push
addr16
sahf
out
loopne
std
shlb
dec
adc
mov
fiaddl
fsubr
inc
mov
sbb
popf
out
movsl
cs
rclb
pushf
ljmp
mov
stc
fimuls
mov
add
pop
mov
sub
pop
cs
std
cwtl
jnp
fwait
icebp
sbb
popf
push
pop
das
add
pop
popf
mov
jbe
js
lret
rolb
mov
ss
pop
leave
addr16
xchg
es
fsubrs
xchg
adc
fists
xchg
sbb
imul
jmp
mov
int
fwait
and
int3
cvtps2pd
insb
pop
sbb
mov
mov
and
out
jno
jl
or
bound
pop
cmpsl
fs
dec
fisttpll
pop
dec
movsb
jmp
loopne
aad
out
inc
sub
inc
fistl
insb
aam
loope
cmp
dec
xchg
mov
rorb
xchg
jp
or
add
sub
int3
push
test
cmp
ljmp
push
inc
repz
popf
popa
xchg
repz
mov
pop
xchg
dec
and
movsl
jmp
bound
cmp
and
mov
cmp
and
lea
adc
push
cmc
test
movsl
mov
jae
hlt
lock
inc
add
push
cmpsl
imul
repnz
and
bound
lods
leave
inc
movsb
fsubrp
xchg
and
mov
popa
push
dec
inc
jge
repnz
pop
std
sarb
in
and
ljmp
fstpt
cmp
push
loop
inc
or
scas
fs
std
rcll
loop
xchg
pop
dec
or
push
adc
mov
icebp
popa
add
cmp
stc
jbe
cs
cmp
lcall
dec
mov
fsubrl
push
mov
arpl
sub
rorb
pop
rcrb
sub
dec
push
jnp
les
or
movsl
pusha
mov
insb
xor
pop
arpl
shl
cmp
loopne
mov
into
arpl
sbb
shrl
movsl
pop
cmp
or
and
nop
cmp
test
enter
or
aaa
scas
out
cmp
test
cmp
jge
or
jnp
subb
lahf
mov
dec
xchg
stc
push
leave
cmp
fwait
jnp
fwait
mov
lods
jle
sub
outsl
cmp
aad
out
push
push
lods
loop
adc
push
je
repz
and
scas
sbb
je
xor
negb
lods
test
push
out
les
add
pop
scas
pop
sbb
dec
mov
cmp
call
gs
je
xchg
xor
xor
ret
xchg
add
jge
xchg
aam
pop
in
out
movsl
mov
int
xchg
sub
jb
push
xchg
add
enter
mov
push
sbb
mov
xchg
test
daa
mov
sbb
jno
lret
adc
mov
jg
or
sbb
movsl
jp
xchg
mov
repz
lock
outsl
shll
inc
cmp
leave
pop
mov
iret
xor
sub
daa
shll
ret
ret
mov
in
icebp
rcll
cltd
inc
xor
fstps
sub
and
cld
jecxz
fisubrl
inc
jno
and
test
outsb
xchg
or
push
pusha
movsb
mov
push
jp
push
sahf
je
push
lods
fistpll
add
scas
pop
add
sahf
sbb
xor
and
aad
clc
out
xchg
sbb
lods
add
jo
das
sbb
jg
and
neg
jecxz
movsl
sbb
and
test
data16
daa
push
cwtl
insl
lea
jne
inc
sbb
mov
and
push
cmp
push
ror
pusha
gs
adc
sahf
dec
mov
jp
pop
push
mov
cmc
imul
xor
mov
mov
push
scas
in
sbb
inc
clc
jne
cli
dec
adc
in
mov
mov
xchg
cmpsb
xchg
push
insb
loopne
inc
out
cmp
aas
and
loop
jp
sti
sub
jo
sahf
sub
testl
call
inc
insl
add
in
mov
xchg
sbb
push
pop
popf
cmpsl
inc
paddd
test
arpl
cmp
sbb
imul
add
shlb
mov
out
jecxz
dec
mov
loope
xchg
jnp
jae
sbb
stos
push
in
adc
pop
lcall
dec
out
xchg
or
out
mov
test
test
inc
lds
add
pusha
fistl
push
pop
mov
iret
and
or
mov
imulb
add
shrb
icebp
ret
mov
xchg
pop
sbb
jp
jl
and
out
adc
mov
mov
lret
jnp
mov
sbb
icebp
sub
cmp
int3
adc
imull
sbb
loope
cmp
and
test
movsb
push
cs
cmp
test
push
add
leave
xor
push
scas
xor
imul
js
sbbb
cwtl
stc
jno
mov
dec
cmp
nop
cmc
jns
ja
cmp
in
in
fstpl
lcall
pop
les
mov
iret
pop
sti
inc
or
ljmp
adc
push
pop
and
sub
cmp
push
lea
std
inc
cld
jbe
cli
lcall
decb
jg
jo
dec
or
fwait
and
sahf
ljmp
inc
cmc
pushf
pop
add
xlat
rcrl
jno
loope
mov
mov
and
xchg
cmp
loope
and
push
fisttpl
js
mov
popa
outsl
loop
mov
xor
jb
into
and
xlat
repz
mov
pop
or
jmp
dec
jo
and
testb
arpl
es
xor
in
push
mov
aaa
jle
mov
insl
nop
dec
add
daa
cltd
and
push
add
jne
inc
mov
push
mov
movsb
lds
stos
rorb
mov
xor
repnz
mov
inc
sbb
insl
sub
loop
push
repnz
pop
fwait
push
ja
add
out
mov
jno
cmp
ffree
pop
outsb
test
sub
aas
in
xchg
xchg
sub
int
orb
mov
mov
mov
and
xchg
xchg
xchg
lock
ss
in
mov
stos
dec
sbb
push
push
push
jle
dec
push
std
out
ss
lea
test
lods
or
inc
fbstp
cmc
sbb
rcrb
insb
cmp
fcoml
or
jne
sub
push
shlb
ror
pop
xchg
mov
in
adc
aam
and
int3
lock
lock
outsl
scas
adc
test
lock
add
leave
and
fildl
and
sbb
push
or
xchg
fildl
sbb
push
jns
hlt
je
jne
aad
fcmovnbe
aam
dec
mov
int
ljmp
ljmp
push
insl
fiadds
mov
fwait
aam
push
nop
mov
sbb
mov
js
cmpsb
pusha
mov
jle
insl
ss
aaa
std
mov
cwtl
push
dec
repnz
in
lds
vandnps
stos
mov
xor
aas
mov
lret
lea
fadd
clc
adc
mov
mov
or
loope
imul
adcl
clc
dec
xchg
sub
add
leave
and
sahf
mov
fcmovu
aad
pop
xor
cmp
add
push
lea
das
sbb
arpl
stos
aaa
lock
jno
cvtps2pd
ss
outsl
push
push
mov
cmp
outsl
rorb
hlt
push
sub
clc
shll
dec
and
fcoms
in
mulb
inc
adc
push
inc
cmp
push
repnz
add
mov
fldl
mov
bound
pop
jmp
push
js
frstor
sbb
dec
call
test
stc
fisubs
sub
xchg
int3
cmp
xchg
adc
test
push
and
dec
pushf
insw
mov
mov
sub
fucom
fisubl
xchg
add
add
orl
cltd
pop
jns
inc
cwtl
pushf
cli
sbb
iret
aad
push
sar
mov
mov
hlt
adc
mov
test
js
or
xor
addr16
push
out
jno
push
gs
mov
push
dec
in
xor
repnz
ret
inc
ss
fdivp
sub
adc
jbe
adc
inc
sub
mov
pop
cmp
repz
inc
cmp
inc
and
sub
int3
out
in
rcll
dec
and
and
mov
and
push
jmp
mov
pop
push
cmp
lcall
es
enter
sbb
rolb
sbb
dec
cld
jmp
mov
dec
jmp
xor
mov
adc
iret
sub
inc
popa
push
adc
call
dec
leave
pop
push
insb
in
xchg
loope
push
and
push
ret
mov
xor
daa
jo
in
mov
lret
cmp
add
mov
jle
cwtl
mov
push
push
jno
inc
mov
xchg
sbb
jb
dec
sub
fmulp
mov
sub
inc
jl
xor
inc
xor
mov
into
inc
cmp
add
pusha
sbb
xor
push
lea
test
xchg
jmp
std
and
cvtps2pi
mov
jp
xor
rorb
mov
adc
jg
stos
sub
aam
push
sbb
or
cli
push
vmovlps
xor
mov
and
dec
fadds
adc
adc
je
push
fldenv
out
push
xchg
adc
or
flds
push
stos
iret
pusha
xchg
test
pop
inc
mov
cmpsl
int3
pop
inc
mov
ss
roll
mov
insb
mov
sub
rorb
cwtl
aas
ret
shlb
push
scas
push
inc
movsb
xchg
stc
clc
sti
stos
lock
iret
pop
push
cs
push
jg
mov
lahf
ret
test
fwait
out
hlt
inc
pop
jp
lds
or
scas
sahf
iret
pop
insb
push
dec
push
xor
pop
inc
xchg
push
mov
xchg
punpcklbw
mov
xor
fisubl
adc
mov
mov
or
std
inc
mov
sti
or
add
or
std
jno
push
inc
jnp
jae
fsubs
outsb
inc
dec
mov
sub
outsb
dec
inc
inc
inc
push
lods
mov
stos
inc
adc
sbb
mov
aaa
mov
jmp
push
xchg
push
loope
out
flds
mov
sbb
shr
cltd
jecxz
out
mov
and
push
or
lods
call
jbe
rcr
test
xchg
jl
push
mov
out
xchg
xchg
cmp
mov
add
adc
mov
andb
insb
or
cmp
push
push
jmp
movsb
je
xchg
push
sbb
add
jmp
push
xlat
andb
sti
outsb
mov
fidivs
xchg
orb
mov
sbb
cmp
imul
add
sbb
and
pushl
lret
cmp
jge
adc
jg
xor
test
and
mov
sbb
outsl
mov
scas
call
inc
mov
dec
mov
bound
jbe
jmp
fcom
add
imul
jl
add
shl
xor
sbb
leave
dec
iret
dec
into
cmp
ret
inc
mov
push
ja
rorl
add
xor
xchg
mov
iret
adc
cwtl
inc
xchg
push
push
mov
pop
movsl
lea
and
std
loopne
add
dec
jns
test
cmpsb
fldl
xchg
xchg
into
bound
mov
loopne
cmp
push
cltd
mov
xchg
aad
iret
jae
fsubrl
cwtl
push
lret
pop
orl
xlat
xor
xchg
lret
xchg
rorl
or
nop
mov
add
sub
gs
or
mov
test
xor
cmp
imul
pop
pop
cmp
lea
js
mov
add
clc
adc
xor
int3
xchg
daa
sub
mov
adc
ljmp
and
hlt
mov
out
int
aas
ljmp
mov
xchg
rcll
adc
or
pop
std
adc
pop
jbe
mov
leave
icebp
lock
jmp
in
shll
xor
xchg
fwait
inc
push
inc
xor
stos
sub
and
jne
dec
and
repz
out
js
imulb
ret
fcom
pop
push
and
and
or
test
mov
mov
ja
push
mov
add
jae
xchg
hlt
and
jmp
movb
ret
push
inc
jae
and
cmp
outsb
sbb
and
or
out
xcrypt-ecb
cmpsl
punpckhwd
ljmp
jns
push
sub
xor
insb
loope
push
mov
out
hlt
aad
test
scas
add
xor
mov
in
lock
lds
mov
shr
nop
in
push
add
add
sti
test
cmp
cmp
sub
ret
fcos
iret
xchg
mov
out
mov
or
mov
cmpsl
ss
mov
movsb
xlat
mov
xchg
adc
repz
out
push
lods
lcall
int3
pusha
adc
and
pmaddwd
lea
mov
rcrl
inc
mov
mov
inc
loope
adc
and
out
jb
mov
inc
popa
mov
cmc
adc
xor
dec
dec
jae
add
sbb
fs
icebp
pushf
pop
clc
mov
jp
mov
stc
and
xchg
sbb
mov
push
movsl
push
inc
ret
lea
lods
cmp
mov
xchg
lds
ret
call
mov
ficompl
arpl
sti
adc
or
lock
les
cli
sub
or
and
push
jge,pn
dec
jge
fs
shlb
loope
push
jnp
sub
cmp
push
push
jo
cmp
dec
test
mov
enter
es
imul
xor
stos
rcl
add
test
jle
std
ret
neg
dec
or
push
hlt
fnstenv
mov
adc
test
int
daa
jae
in
xor
inc
stc
cltd
push
mov
cmp
or
sti
repz
xchg
xchg
push
adc
jnp
inc
out
popf
and
leave
aam
dec
xor
leave
out
daa
std
jne
mov
negl
loop
ja
fdivrs
inc
hlt
xor
aad
jo
out
add
pop
mov
jne
sbbb
dec
and
repz
lcall
enter
je
stos
or
xchg
sub
rcrb
mul
mov
cmp
repz
inc
insb
pop
sarb
jae
mov
arpl
mov
add
dec
int3
stos
movsl
mov
and
scas
xchg
ljmp
stos
fcmovb
subb
inc
mov
mov
xor
data16
adc
fucomip
clc
lcall
push
adc
xor
mov
pop
icebp
xchg
mov
add
cli
popa
push
push
adc
rcll
fnstenv
adc
mov
leave
popf
mov
into
pop
jbe
add
push
lea
loopne
dec
lret
cld
inc
mov
movsb
sub
mov
lcall
call
sub
mov
xchg
aam
lock
int3
fisubrs
pop
repnz
jnp
cmpsb
dec
adc
jns
insb
mov
fcmovu
lock
jns
dec
cwtl
cmp
pop
lahf
pop
and
jmp
lds
movsl
pop
les
pusha
xor
pop
movsb
dec
rol
and
xchg
lods
aad
and
repz
aam
push
or
pop
jp
adc
test
sub
movsl
test
out
daa
push
stos
mov
jge
sbb
mov
push
xor
loope
loop
dec
pop
lret
mov
fidivl
dec
xor
push
cmp
jmp
and
imul
movsl
pop
out
outsl
ljmp
xchg
fscale
dec
xor
sbb
jp
xchg
scas
icebp
pop
setl
xchg
cmp
data16
enter
addr16
fcompl
cmp
add
pusha
mov
add
pop
ss
adc
pop
and
inc
mov
cmp
or
add
jp
cld
insl
mov
jne
jb
or
gs
jo
mov
jle
je
sbb
or
dec
mov
xchg
aam
mov
sbb
out
xor
lret
lret
mov
ss
lods
pop
sbb
adc
mov
imul
sbb
jbe
jg
in
push
mov
pusha
jne
push
insl
aaa
insl
add
dec
xor
das
js
jae
lret
mov
sti
or
mov
sarl
sbb
xor
jecxz
jo
sarb
push
shll
pop
into
cmp
mov
es
xlat
jle
sub
mov
icebp
es
lahf
jb
mov
cmc
pusha
cwtl
popf
sub
pop
stc
fwait
adc
jecxz
scas
dec
enter
push
leave
push
lret
dec
popf
jbe
popf
ss
cs
test
and
jg,pn
idivl
xor
push
insl
push
push
ffreep
dec
pop
and
or
out
movsb
inc
movsb
jbe
adc
and
lret
mov
xadd
je
mov
out
inc
mov
mov
lods
lods
mov
jno
xchg
dec
imul
or
fidivl
pop
fisttpl
push
imul
dec
sbb
imul
out
and
lret
cwtl
pop
out
stc
cmp
and
sbb
cmp
push
xor
sub
rorl
cwtl
mov
in
dec
add
pop
pop
loope
jmp
and
icebp
pop
out
mov
fwait
xchg
out
stc
jnp
scas
insb
or
nop
push
xlat
xchg
xchg
cmp
sub
cmp
adc
mov
bound
jg
popa
addl
cmc
or
adc
or
push
mov
test
in
adc
add
add
test
mov
push
aas
dec
lods
xchg
into
xchg
divps
xchg
mov
dec
in
pop
loopne
jle
add
mov
xlat
cltd
ficoms
mov
cmp
jecxz
push
cmp
testl
imul
mov
data16
cmp
stos
fst
xlat
push
in
aad
mov
pop
push
dec
ret
adc
jb
xchg
cmp
bnd
imul
fdivr
mov
jnp
outsl
fsubs
inc
loopne
in
add
xor
mov
stos
test
int
cmp
in
pushf
arpl
std
scas
es
into
lods
xchg
insb
outsb
mov
jge
pop
leave
jg
fnstcw
cs
addr16
nop
adc
bswap
inc
jns
add
sbb
lods
imul
je
lret
push
call
mov
int
xchg
xor
and
dec
inc
xor
jmp
sbb
mov
insb
push
mov
test
mov
jge
lods
rolb
mov
push
lret
loopne
sbb
mov
sti
mov
or
fldt
ss
lods
dec
sbb
adc
fmull
hlt
cmp
jg
mov
mov
aas
push
inc
push
pop
jb
fwait
sahf
mov
jl
push
lret
sbb
jae
mov
cpuid
lret
arpl
sbb
fnstsw
popf
push
test
stc
jbe
jp
jp
add
adc
sbb
mov
fwait
xchg
push
mov
push
fnstenv
mov
imul
push
test
stos
jnp
sub
lock
xlat
pop
mov
mov
data16
aam
xchg
not
rcrl
jp
push
xchg
xor
adcb
pop
mov
leave
icebp
cmc
push
fs
xchg
cltd
fwait
out
mov
pop
mov
jnp
push
rorb
inc
sahf
and
mov
inc
repnz
and
jo
jle
xchg
mov
test
jl
mov
lea
cmp
xor
inc
jp
dec
jle
fld
lds
sub
test
cmp
cwtl
inc
lds
push
iret
lods
je
lods
stos
loop
and
and
mov
xor
push
incb
push
cli
mov
sub
adc
repz
or
ljmp
in
xchg
in
lds
dec
das
or
js
mov
and
fsubl
adc
in
fs
in
in
test
movsl
scas
sub
lret
test
and
aad
fbstp
mov
daa
aaa
mov
in
daa
repz
jo
adc
cwtl
adcl
xor
das
rcll
std
sbb
roll
cmp
shrl
mov
inc
jns
cmp
into
mov
cld
sarb
lret
std
jecxz
cmp
ss
dec
and
mov
inc
mov
repz
inc
adc
out
data16
mov
and
inc
xor
mov
push
enter
rol
mov
aas
mov
into
dec
lret
shlb
adc
dec
and
mov
rolb
mov
xor
add
rcrl
xchg
lds
mov
lock
mov
and
sarb
inc
in
push
dec
out
cld
push
pushf
repz
dec
or
xor
push
sti
xchg
and
call
mov
pop
test
ficompl
sahf
pop
je
and
es
xlat
add
add
es
jbe
sub
js
xchg
push
mov
xchg
shll
cwtl
xchg
dec
mov
sbb
or
pop
lock
testl
mov
lods
lds
out
arpl
mov
popf
xchg
bound
push
loope
sub
xlat
lods
nop
push
xor
stc
ja
jecxz
movsl
add
pop
pop
push
call
xchg
pusha
mov
push
lcall
pushf
jl
aaa
mov
pop
mov
jnp
xor
fucomp
jo
jecxz
leave
mov
cmp
xchg
int
testb
add
arpl
cmpsb
fdivr
cltd
call
leave
addr16
lahf
jecxz
inc
xor
cld
hlt
popf
inc
lods
lret
insb
test
dec
pushf
loope
push
sbb
in
sub
lods
pop
repnz
les
jmp
jns
je
add
pop
jge
xchg
outsb
lds
test
repnz
inc
sub
popf
loopne
xchg
cli
xorb
dec
ljmp
ljmp
out
dec
mov
stc
dec
xchg
fcompl
daa
or
xchg
fucomp
ds
jb
pop
mov
add
mov
dec
por
pop
ljmp
dec
rolb
mov
mov
xor
jno
outsb
push
repnz
pop
mov
inc
rorb
js
jle
jp
mov
jns
jle
lods
test
ret
mov
movsl
sbb
mov
mov
jo
loopne
rcr
out
mov
clc
jno
rol
movsb
pop
jbe
pop
cmp
and
es
icebp
daa
cmp
mov
test
int
and
pop
lret
lret
stc
ds
xor
pop
aam
xchg
mov
pop
cmpsb
push
dec
mov
jne
mov
std
or
mov
dec
data16
mov
sub
clc
test
int
or
and
mov
cmp
icebp
jge
add
insb
rcrb
dec
hlt
aam
fsubrl
lahf
dec
bound
push
mov
ret
out
sbb
clc
mov
adc
cmc
jbe
cmpsl
scas
xchg
dec
jnp,pn
arpl
sub
pop
jnp
dec
dec
pop
xor
pop
inc
inc
and
or
jb
ss
xor
cli
icebp
adc
stos
mov
and
add
daa
adc
push
cwtl
scas
sub
fidivrs
mov
mov
mov
lods
stos
add
sub
and
add
cmpsb
lock
pop
cmp
cmp
movsl
inc
cli
pop
inc
inc
xchg
ds
dec
xchg
mov
jae
popa
fbld
cld
push
xchg
mov
enter
pop
dec
es
xchg
adc
mov
sub
push
nop
or
cwtl
or
jo
or
push
in
int
out
cltd
gs
lretw
je
ja
dec
cld
xor
fisttpll
jecxz
mov
pop
sub
jne
cmp
dec
pop
mov
mov
push
xor
outsb
loope
jmp
mov
scas
aaa
rclb
sbb
inc
icebp
arpl
or
outsl
push
in
dec
stos
jecxz
jno
xchg
mov
lahf
sbb
and
adc
or
imul
shll
mov
add
dec
adc
sbb
in
insb
pop
mov
push
sub
int
jp
outsl
cmp
ret
mov
sbb
jbe
sub
fld
test
xor
pop
inc
mov
or
pop
mov
pop
inc
icebp
pusha
ss
dec
dec
push
inc
mov
cmp
inc
ds
out
mov
or
scas
mov
int3
pop
pop
adc
inc
and
jnp
mov
mov
lahf
mov
aas
mov
divl
orl
push
lods
cmpsl
xchg
add
sub
sub
aaa
mov
sahf
divb
ret
xor
pushf
inc
lcall
xchg
fwait
jns
jecxz
test
sub
scas
int3
add
add
dec
adc
adcl
xor
jp
cwtl
or
jne
out
cmp
inc
mov
push
rclb
mov
xchg
scas
out
dec
aaa
ret
mov
in
std
jne
in
mov
sbb
pop
fistpll
xchg
lds
pop
aas
out
jns
std
mov
push
mov
mov
sub
cmp
cmp
in
inc
fsubr
testb
inc
in
mov
pop
cmp
inc
sub
adc
mov
xchg
add
mov
sbb
sbb
addr16
fiadds
xchg
mov
fcomp
leave
mov
and
movsl
and
sub
loope
sbb
sub
mov
mov
bound
movl
ja
mov
inc
pop
loopne
sarl
stos
repz
test
mul
roll
xchg
out
aas
add
call
push
inc
sarl
jmp
cld
cmp
loop
lret
push
mov
mov
pop
je
jns
mov
jmp
dec
push
fisubrs
xor
mov
arpl
dec
add
fwait
pop
dec
pop
mov
iret
fsubr
cmpsl
test
loope
xor
add
mov
ljmp
jl
stc
xchg
cmpsb
shl
lock
xchg
xor
stos
outsl
std
orl
or
enter
adc
lods
rcll
std
jmp
add
xchg
hlt
cs
popf
push
ficoml
sbb
mov
mov
jno
pop
mov
sbb
arpl
mov
loopne
js
sub
mov
and
jnp
adc
dec
fs
inc
pop
rorb
popf
add
xor
data16
push
jo
out
sarb
aaa
mov
popf
jb
std
jbe
rorl
decb
sub
jns
js
sub
cmp
roll
arpl
sub
push
into
test
xchg
bnd
jge
pusha
sarl
jmp
dec
mov
aam
aas
jmp
vcvtdq2pd
inc
into
mov
add
or
in
jo
xor
cwtl
nopl
xor
inc
pop
inc
adc
or
push
sbb
mov
mov
imul
fcompl
mov
je
jae
mov
test
add
mov
loop
adc
lret
cmp
scas
cld
ret
inc
mov
adc
adc
in
push
push
dec
lods
inc
xor
cmp
sbb
jnp
inc
pop
push
mov
adc
xchg
repz
mov
jp
mov
fwait
push
jp
xor
pop
fdivl
jnp
jecxz
pop
test
pushf
fst
push
out
repnz
or
lahf
cs
xchg
popf
shlb
lods
cli
sbb
in
or
cli
sahf
mov
dec
aad
faddl
popa
fprem
mov
pop
sub
cmp
adc
aam
push
lods
imulb
adc
mov
xor
in
mov
inc
or
pushf
push
xor
sti
loopne
addb
xchg
je
cmp
sahf
push
shll
xchg
jbe
cmp
inc
shl
cmp
aad
js
cwtl
aad
jo
loopne
lea
addl
ret
mov
rorl
push
add
in
xchg
fcomip
push
iret
xchg
popf
pop
sub
int
loopne
dec
fcoms
out
shlb
sub
push
lea
sub
stos
mov
and
sbb
jmp
popl
scas
rorl
out
stc
cmp
repz
inc
inc
sahf
test
ja
fsts
insb
ja
shll
mov
ja
adc
add
inc
xchg
adc
jl
lret
test
sbbl
or
or
add
jb
and
xchg
mov
adc
aas
repz
mov
arpl
cld
jp
mov
and
call
push
stos
ljmp
cmpsl
movsb
jge
inc
jl
mov
inc
ja
inc
out
push
xor
jecxz
repz
lods
cld
cli
xor
xlat
aaa
mov
cmp
jp
nop
xor
pop
cwtl
stos
frstor
cmp
ja
mov
ficoms
inc
xchg
jbe
sarb
jo
stos
mov
or
loopne
inc
sti
hlt
jecxz
mov
xchg
add
ljmp
shr
sub
movsb
cmp
iret
cmc
xchg
pop
xchg
inc
outsl
xchg
lods
mov
mov
into
iret
inc
or
negl
lds
scas
pushf
mov
inc
int3
xchg
mov
ja
xor
add
pop
sub
ficomps
sub
fidivrl
push
adc
push
je
inc
out
inc
lcall
sbbb
xchg
pop
inc
les
sub
aad
repnz
mov
lock
xchg
adc
push
icebp
cmp
test
xchg
stos
in
jmp
pop
inc
fs
sti
aaa
xor
dec
mov
out
int
lds
cwtl
aaa
and
jmp
or
fisubl
or
add
cmp
push
sub
loope
sarl
push
inc
jno
aad
mov
mov
in
mov
scas
fsubrs
push
int
mov
loopne
dec
stc
mov
fstp
je
sub
mov
test
sub
fisttpll
lea
mov
cmp
sbb
test
fistl
ljmp
in
ret
int3
rcrl
stc
mov
pop
in
pop
int
hlt
xchg
je
sbb
mov
pop
and
add
or
inc
or
mov
hlt
mov
repz
pop
sarb
lods
daa
jge
repnz
xchg
nop
daa
inc
enter
pop
dec
xchg
xor
lcall
scas
aam
test
cmp
insb
syscall
sub
ljmp
push
ja
mov
jecxz
data16
enter
jmp
in
cs
sub
pop
dec
enter
pushf
or
repnz
sbb
xchg
push
xchg
xchg
add
mov
xor
pop
jecxz
adc
loopne
in
mov
pop
addr16
lds
shl
mov
and
push
inc
mov
push
out
scas
dec
imul
jp
mov
fcomps
dec
push
fstl
test
in
jge
stos
call
xchg
aad
cld
mov
iret
pop
cmpsl
fistl
into
add
ret
rol
and
pop
or
add
dec
clc
pusha
push
gs
hlt
and
mov
out
incl
in
pusha
aad
xchg
jge
out
nop
xchg
pop
push
inc
adc
popa
pop
pop
dec
cmpb
bound
cltd
push
loope
jle
cmpsl
cmc
xchg
sub
mov
sbb
addr16
mov
mov
mov
gs
clc
sub
push
in
xchg
fmuls
fmuls
mov
ja
outsl
pop
xlat
int3
jo
adc
ret
inc
push
inc
cltd
or
adc
bound
add
divl
pushf
movsb
addr16
push
mov
sbb
loop
lcall
shufps
dec
shll
mov
and
fwait
push
repz
mov
jno
scas
leave
mov
sar
mov
dec
xchg
xor
mov
mov
pop
test
mov
push
adc
cmp
lret
ljmp
sub
stos
jecxz
lock
sub
mov
push
in
or
mov
icebp
int3
xor
jbe
or
mov
shlb
in
les
sub
xor
lods
lock
cltd
mov
test
and
inc
add
jne
adc
cmp
cmc
inc
int
pop
test
pop
popa
mov
jno
pop
sub
pop
pusha
and
jne
imul
mov
in
iret
pusha
cmp
nop
xchg
out
or
stc
pop
test
daa
out
mov
push
sbb
arpl
icebp
xor
mov
xchg
fiaddl
mov
jle
stos
xchg
and
roll
push
out
mov
xor
push
dec
mov
sbb
test
inc
mov
or
mov
dec
lahf
sbb
cs
jae
lods
das
pop
aaa
mov
sti
cmp
mov
add
jbe
sub
inc
jl
out
cli
ss
sahf
xor
lods
lds
popf
lea
sbb
sub
mov
ficompl
mov
inc
hlt
sti
jno
sbb
jle,pn
ja
adc
leave
sti
dec
pushf
jne
pop
jg
cmc
fwait
stos
mov
jp
or
xor
rcll
mov
lods
cld
sbb
or
mov
icebp
cmpsb
shrl
notl
out
test
dec
adc
daa
in
and
out
sub
cmpl
cmp
out
sub
xchg
inc
xchg
adc
xchg
add
in
cmp
xor
cli
call
mov
loopne
or
push
push
and
adc
sub
and
sub
bound
fisttpll
mov
inc
outsb
dec
jge
jae
fs
pop
cmpsl
and
adc
push
inc
les
sub
and
cli
dec
cmpl
inc
shll
lcall
imulb
xor
inc
or
pushf
adc
mov
and
jae
mov
sbb
mov
jne
pop
jns
push
stos
das
notb
loop
out
fcomip
cwtl
push
outsb
inc
and
lret
push
pop
fs
outsl
mov
int3
pop
jecxz
or
insl
fnstsw
mov
xor
insb
mov
add
inc
loop
fcoml
repz
mov
fs
ror
pop
lret
fmuls
xchg
insl
and
xor
cmp
add
insb
out
cltd
rclb
scas
shlb
mov
insl
mov
stos
mov
pop
dec
or
push
fdivrs
cmpsb
inc
mov
icebp
fdivs
cpuid
mov
mov
adc
jae
fsubrs
js
ret
dec
mov
lcall
cmp
adc
ljmp
mov
movsb
jmp
aam
sub
mov
jp
jle
lret
lea
bound
cmc
rorl
sarl
sub
jno
xchg
cmp
mov
adcl
scas
or
pop
dec
or
adc
mov
and
or
out
sbb
push
lds
pmulhw
call
cmpsb
fnstenv
lret
pop
xchg
mov
sbb
outsl
mov
rorb
xchg
fadds
in
pushf
pop
shlb
mov
dec
out
icebp
lds
loope
pop
sub
enter
iret
adc
test
lahf
in
mov
add
cmp
stc
xor
mov
push
adcb
movsl
insb
push
xchg
mov
data16
test
into
and
int
inc
or
jbe
xor
pop
mov
scas
pop
mov
call
cmp
or
cmp
xor
cmp
mov
ljmp
ja
aad
mulb
cli
sub
inc
cs
jno
pop
call
clc
lds
xor
adc
fwait
sub
int3
mov
sub
push
mov
mov
or
push
xchg
ja
adc
icebp
xchg
aad
mov
cmc
je
jae
lock
nop
inc
cwtl
int
enter
in
loop
addb
bound
xlat
ret
nop
xchg
jmp
daa
dec
fisttpl
lcall
mov
pop
dec
mov
leave
mov
jns
stos
dec
mov
push
dec
movsl
cmp
enter
lret
and
stos
jl
je
dec
sub
aas
inc
inc
pop
mov
test
sbb
jecxz
mov
sahf
repz
test
mov
fs
and
sti
in
les
str
xlat
push
mov
mov
pop
push
xlat
pop
cli
mov
jnp
add
pop
push
icebp
sub
mov
cmp
adc
and
push
xchg
mov
xor
xor
sbb
push
cmpsl
mov
stos
addr16
repz
mov
das
jo
xor
cmpsb
js
enter
xorl
repnz
sahf
sbb
xchg
dec
jle
out
test
repnz
cmp
loop
jbe
and
fisubrl
out
out
push
cld
add
das
mov
sub
or
rorl
jno
push
rcl
int3
das
xorb
cmp
pop
mov
in
sub
js
and
xchg
icebp
or
andl
mov
insl
xor
xor
ja
inc
aam
mov
rclb
and
in
add
mov
popa
movsb
test
std
out
addr16
int3
add
dec
jns
mov
add
or
enter
xchg
push
cmp
lcall
ret
pusha
cs
gs
pop
aam
into
mov
imul
int
mov
push
or
jge
adc
cmpb
adc
xchg
xor
pop
xchg
rolb
mov
cli
repnz
movsb
ljmp
int
call
mov
outsb
pusha
scas
stos
rorb
inc
fdivl
sub
jp
jb
add
lret
lods
pop
dec
jg
gs
xchg
push
mov
enter
and
adc
add
arpl
ficoml
std
jl
cmp
xor
mov
adc
gs
inc
fisubrl
leave
rorb
jb
cmpsl
xor
xlat
or
or
stos
lock
call
notl
mov
add
test
sub
nop
pop
rclb
or
cmp
xor
ret
ret
in
inc
mov
test
lcall
bnd
loopne
popa
test
addr16
xor
aad
dec
pop
aad
out
sbb
scas
ds
dec
and
test
add
push
fnstcw
lcall
popf
aas
fisubrl
imul
aaa
cmp
nop
sahf
pop
jb
add
pop
jno
inc
push
scas
add
leave
mov
jbe
push
jno
mov
arpl
jge
xor
idiv
and
out
mov
mov
mov
mov
jecxz
cmc
adc
aam
sbb
les
addl
jg
in
and
nop
ja,pn
push
jns
sbbb
mov
pop
cmp
xchg
jle
les
cmp
sti
rcrb
leave
xor
dec
pop
mov
dec
repz
daa
inc
or
scas
das
pop
or
out
lret
jle
mov
test
add
test
sub
ja
jno
xor
mov
jb
adc
test
shrb
or
lahf
test
adc
xor
pop
movsl
xchg
xor
jg
daa
sahf
pop
stos
jge
imul
inc
sahf
sub
mov
and
sbb
lcall
nop
loopne
xchg
adcl
int
push
jecxz
push
inc
xor
push
dec
mov
fisttpll
cltd
lahf
lods
imul
xchg
icebp
push
int
gs
filds
cwtl
pop
fnstsw
insb
std
rorb
daa
sbb
jl
mov
insl
mov
xlat
mov
inc
sbb
jnp
inc
xchg
pop
cmp
jae
push
shlb
scas
aas
sbb
cmp
push
stc
loopne
pop
insb
sbb
xchg
cmc
repz
cmp
adc
lahf
fs
iret
lret
call
lret
sub
dec
adc
xorl
add
repnz
cmp
stos
xchg
cs
iret
mov
fistpll
loope
adc
xor
push
hlt
push
dec
xor
in
cli
cmp
repz
inc
push
fsts
cli
enter
stos
fsts
les
pop
mov
mov
cmc
daa
cli
sub
fs
fdiv
lahf
pop
int
dec
xor
mov
jne,pt
ret
test
sbb
mov
xchg
in
insb
movsb
sub
stos
mov
lcall
push
fbstp
pop
out
movsl
add
sbb
lret
xor
pop
lock
repnz
leave
pop
cld
cmc
lods
and
data16
inc
mov
mov
cmp
xchg
mov
xchg
sbb
scas
insb
roll
adc
loop
popa
dec
arpl
out
cmp
fwait
pop
das
and
push
xor
les
out
dec
mov
loopne
in
lods
in
lods
xchg
fwait
mov
inc
iret
jge
push
adc
sub
pop
mov
imul
pop
jmp
inc
or
in
dec
mov
jo
cwtl
hlt
adc
jmp
jnp
stos
shl
sub
jno
icebp
or
int
cmpsb
inc
mov
sbb
or
std
mov
aas
push
pop
sbb
dec
push
inc
mov
stc
ret
sub
aaa
call
jl
arpl
push
xor
ficompl
outsl
inc
or
enter
mov
or
add
js
and
add
jnp
sub
lds
mov
mov
jae
xchg
test
pop
push
cltd
pop
inc
in
xor
and
sbb
pop
mov
loope
push
xlat
or
mov
cmpsb
ret
pop
cmp
mov
aad
or
add
cwtl
outsb
add
ss
aam
cli
mov
adc
rclb
sub
xchg
out
jge
imul
aas
cmp
int
cmp
ret
movsl
xchg
xchg
mov
cmp
pop
or
jno
or
sbb
icebp
fists
test
lret
test
cmp
xchg
icebp
jne
pop
push
mov
jle
mov
mov
ror
cmp
lock
mov
cmpsl
adcl
out
dec
mov
cmp
mov
adc
cmp
dec
sbb
mov
push
or
aam
sbb
or
mov
xor
jnp
loope
lds
push
adc
test
jl
orb
ljmp
mov
mov
int
mov
ror
xchg
dec
dec
insl
clc
movsb
stos
std
mov
push
jp
jecxz
adc
dec
cmp
stos
aas
mov
insb
sub
inc
sub
hlt
xchg
jbe
lock
xchg
and
and
insb
dec
push
jne
jo
ret
push
sub
inc
xlat
jbe
rcr
xchg
xor
mov
mov
xlat
and
or
imul
cmpsl
fwait
outsb
inc
mov
test
xchg
mov
jl
fdivrs
push
or
nop
scas
es
flds
cmp
sbb
push
daa
inc
and
leave
or
jbe
add
fisubs
push
repz
pop
outsl
mov
sub
ficompl
pop
pop
xor
lcall
jp
or
mov
add
dec
xor
iret
mov
mov
sbb
push
mov
jge
mov
jecxz
and
mov
or
add
je
popa
inc
clc
mov
mov
fsubrs
dec
imul
popf
sbb
adc
and
and
xchg
ja
and
imul
add
or
mov
cmp
stos
or
xchg
cmp
cmp
inc
test
jp
lcall
mov
shl
pushf
lcall
adc
adc
dec
sbb
push
rorb
and
imull
xorl
testb
lret
jle
push
sub
sub
xor
shlb
mov
mov
hlt
ja
fstpt
jnp
push
fs
stc
les
movsl
inc
ljmp
clc
out
repnz
mov
pop
repz
sbb
sub
push
and
fistpl
and
aas
hlt
push
int3
fs
out
dec
in
scas
sbbl
daa
mov
int
mov
mov
cmpl
sbb
pop
push
cmp
lods
jne
xchg
xchg
aam
call
jnp
outsb
or
push
jle
ja
ljmp
rcrl
mov
mov
pop
sub
jns
cmp
push
fs
out
mov
stos
lock
push
enter
push
mov
pop
push
fwait
and
cmpsb
or
pop
mov
push
cmpsl
mov
inc
mov
dec
leave
cmpsb
cmp
test
or
dec
test
popf
ss
mov
mov
mov
lea
and
pop
push
push
jb
cmp
push
add
sub
mov
cmc
shll
lret
push
bound
flds
xchg
fs
lcall
out
xchg
cmp
sbb
jnp
and
push
dec
and
loop
je
sub
idivb
mov
cmp
dec
lret
pop
mov
sti
insb
sbb
mov
insb
out
push
jns
fldt
xchg
mov
dec
rcl
loope
xchg
mov
sbb
xchg
les
insb
cld
cmp
pop
subb
mov
stos
pop
or
mov
imul
xor
jnp
xor
pop
mov
xchg
inc
in
mov
xchg
imul
inc
mov
pop
pusha
loopne
push
sub
test
scas
mov
in
dec
dec
repz
xchg
sub
jne
scas
ret
jb
loope
push
int
mov
gs
loope
lret
lahf
popf
movb
ret
movsl
out
inc
push
add
xor
inc
cltd
dec
loopne
and
pop
loop
fisttpl
cmp
pop
adc
mov
xchg
addb
xchg
notl
cwtl
out
mov
dec
cs
mov
xor
inc
outsb
lods
js
scas
loop
push
dec
or
mov
popf
or
mov
sbb
push
jmp
nop
adc
sbb
movsb
sbb
cltd
orb
pop
int3
cmp
sub
arpl
dec
or
and
inc
add
xorl
push
mov
xchg
pop
dec
out
mov
or
js
ljmp
dec
add
add
test
xor
pop
mov
arpl
dec
adc
jecxz
out
loopne
pop
jecxz
pop
cmc
movsb
in
sub
insl
div
push
xor
lods
ljmp
stc
mov
mov
pop
xchg
clc
pop
mov
pop
xor
mov
loopne
shlb
neg
push
sbb
inc
mov
fnstcw
mov
inc
or
xor
ud2
jne
xchg
cltd
dec
add
stos
out
shr
sub
xorl
movsl
add
xchg
inc
mov
xor
and
mov
frstor
mov
dec
ljmp
arpl
mov
jo
repz
sub
popa
adc
dec
fcomps
jne
add
cwtl
jne
sbb
jo
jecxz
xchg
lock
mov
adc
cli
aam
xlat
ds
adc
daa
pop
or
add
cmpsl
leave
ret
dec
lock
je
ljmp
lock
cmp
lods
pop
insl
fadds
shlb
pop
imul
nop
imul
inc
divl
dec
xchg
das
jnp
mov
incb
std
dec
push
test
decl
jne
mov
mov
mov
xor
cmp
call
out
out
adc
pop
rcr
sub
push
shll
sbb
jl
rorb
push
lret
div
pusha
gs
mov
mov
mov
and
xchg
mov
enter
rclb
js
cmp
mov
lcall
cmpsb
jmp
out
dec
in
dec
or
in
mov
dec
cmpsb
inc
test
les
adc
jae
mov
hlt
jp
or
gs
pop
hlt
sbb
cmc
pop
jecxz
call
ljmp
push
test
mov
imul
aam
jge
in
pop
shr
in
lds
jl
fcmovnu
or
test
popf
enter
mov
fadds
fiadds
mov
loopne
xor
pop
loop
mov
xchg
mov
xchg
popa
cld
cmp
dec
sub
daa
mov
inc
leave
mov
int3
dec
je
in
jns
or
decb
push
pop
std
mov
in
repnz
stos
fwait
hlt
es
lods
daa
cmpsb
push
mov
daa
insb
mov
add
push
xchg
gs
loopne
mov
stos
push
dec
call
or
push
mov
test
xchg
out
jge
fwait
dec
jbe
cmc
cwtl
in
jle
movsb
scas
pop
cwtl
pop
mov
sub
out
rcll
stos
inc
popa
pop
or
ja
mov
cmpsl
adc
scas
sbb
push
fistpll
push
sbb
decl
cmp
sub
xor
insb
sub
aaa
and
rclb
cmp
cmpl
fdecstp
xor
fucomi
mov
lret
xchg
gs
cmp
divl
mov
and
or
jno
xlat
sub
mov
sahf
mov
mov
mov
out
cmp
xchg
mov
fcmovb
aaa
rcrl
decb
push
repz
out
test
fmuls
iret
lods
push
fnstenv
xchg
fs
dec
xor
enter
lret
cmp
or
aad
movsl
test
sub
add
fistl
lahf
mov
lock
gs
out
cmc
std
xor
lock
iret
adc
push
jno
mov
scas
xor
pop
fbstp
hlt
movsl
sub
movsb
sbbb
push
jnp
and
fsubrs
inc
inc
mov
sub
dec
or
jmp
in
pop
ja
or
mov
roll
mov
add
xchg
jp
mov
fwait
aad
and
std
in
int
push
outsb
flds
mov
inc
out
inc
push
pop
cwtl
lock
xor
out
push
scas
stos
in
mov
xlat
popa
adc
sbb
int
shlb
xchg
lea
decl
data16
and
aad
inc
loope
out
jmp
ret
dec
mov
test
add
movsb
dec
fld
add
inc
jb
push
add
imul
or
fwait
scas
pop
and
pop
jo
aam
pop
pushl
ficoml
inc
inc
and
mov
scas
lods
ds
cli
loope
xchg
lahf
xchg
adc
imul
fidivl
fistpl
out
call
aas
mov
adc
xchg
rorb
jo
sub
and
mov
ja
je
push
mov
mov
orb
push
or
add
pop
fs
mov
mov
rcrb
mov
je
push
push
loope
imul
es
fcmovnb
mov
data16
imul
cmp
and
mov
ret
push
jp
out
push
setbe
iret
scas
push
iret
pop
mov
stos
push
dec
inc
xlat
rclb
sbb
mov
sbb
call
insb
mov
clc
mov
mov
push
adc
push
mov
lea
scas
xor
or
int3
cmp
xor
cmpsl
dec
lahf
lods
das
sti
addr16
hlt
nop
pusha
jne
fcompl
fs
das
mov
subb
mov
mov
scas
aaa
fldenv
clc
clc
call
xchg
shrb
cmpsb
arpl
insb
movsl
jl
jns
gs
notrack
add
aad
xor
cmpsb
test
mov
mov
add
sbb
mov
and
push
mov
dec
xchg
pop
or
stc
int
stc
mov
repnz
push
mov
mov
ds
push
mov
or
pcmpeqb
pop
xchg
mov
mov
test
mov
repnz
imul
mov
jnp
mov
shll
inc
xchg
in
les
pop
xchg
nop
pop
mov
mov
cmp
lcall
push
mov
lret
pop
sbb
cmpsl
adc
or
movsl
out
mov
movsb
movsb
outsb
sahf
mov
ret
mov
into
int
pop
out
mov
push
pop
pop
hlt
popf
out
push
addr16
pop
dec
outsb
imul
subl
pop
adc
ss
jg
std
jl
pop
cld
loopne
inc
dec
pop
scas
add
repnz
hlt
outsl
iret
sbb
and
or
aas
aad
fisttpll
test
imul
xor
fcomp
sbb
insl
in
idivb
rolb
iret
pusha
fdivrl
in
pop
mov
test
cld
mov
jnp
lock
repz
stc
outsb
mov
or
out
gs
add
mov
stos
mov
or
sbb
push
int
mov
and
pushf
jae
jl
in
cmpb
add
fsubs
push
aas
cmpsb
jo
out
or
out
hlt
frstor
inc
subb
lods
push
iret
in
addr16
aas
inc
in
jns
sbb
mov
jl
sahf
mov
je
jge
repz
pop
mov
sub
ror
or
movsb
das
push
xor
enter
jns
movsl
jecxz
in
les
cmp
push
cmp
lea
in
xor
xor
or
dec
mov
jb
adc
ds
js
jnp
jo
xor
sub
sahf
out
movsl
imulb
icebp
sbb
dec
adcb
fiadds
sbb
dec
mov
pop
mov
std
out
pop
push
mov
xor
icebp
pop
pushl
pop
outsl
scas
ss
xor
cmp
je
xchg
scas
or
or
out
out
repz
clc
scas
xchg
adc
loop
lcall
adcb
adc
mov
scas
or
push
jle
or
mov
addr16
addr16
stos
jbe
sarl
test
leave
xor
das
add
pop
test
sub
adc
mov
xchg
data16
jge
arpl
pop
ljmp
pop
fistpll
cmp
adc
jmp
sub
popf
push
aaa
pop
jl
loope
push
out
mov
cmp
sbb
stos
rclb
ss
mov
mov
sahf
daa
mov
cmpsb
and
pop
xchg
xchg
inc
cmp
and
stc
adc
cwtl
ror
mov
mov
movsb
in
push
sub
mov
js
and
mov
and
inc
test
aas
push
fmul
pop
shrl
and
mov
cld
and
mov
lods
push
jmp
dec
ret
jae
in
ja
lods
dec
movsl
xchg
cmp
adc
cmp
inc
inc
orb
mov
and
lahf
pusha
xor
decl
sub
bnd
and
mov
xchg
jne
adc
xchg
movsb
and
shll
and
mull
cmpsl
pop
data16
add
jp
mov
and
pop
mov
mov
into
cmpsb
jmp
push
pop
or
fsubrs
adc
movsl
sbb
add
cltd
aaa
push
ss
sbb
push
mov
xor
addl
push
cmc
mov
out
add
cs
xor
lret
loope
subb
add
mov
dec
popf
notb
cmc
sub
jl
shlb
mov
mov
ja
icebp
mov
add
jb
push
cs
cld
dec
push
push
mov
nop
inc
adc
adc
insl
sbb
faddp
push
dec
outsb
imul
repnz
in
fs
sub
fcmovnbe
mov
insl
test
pop
clc
ds
call
jns
sahf
pop
insb
add
adc
mov
fwait
adc
sub
adc
stc
adc
push
inc
pop
inc
repz
push
mov
sub
jl
into
push
test
adc
out
mov
imul
add
ret
mov
insl
inc
sub
dec
testl
jns
insb
mov
test
into
dec
xchg
adc
cmp
xchg
int
out
add
stc
xchg
inc
push
outsb
fwait
inc
inc
dec
jle,pt
in
pop
test
xchg
aad
hlt
jns
mov
rcrb
enter
or
push
ret
jo
dec
nop
pop
in
out
add
cmp
ret
je
in
and
xchg
dec
push
mov
sub
ja
and
xor
add
std
insl
jbe
outsl
ret
sub
add
fdivrs
add
mov
flds
aaa
jo
cltd
sub
shrl
xlat
out
add
dec
mov
movsl
push
pusha
inc
or
lock
mov
pusha
out
shll
ret
test
out
inc
cmp
inc
push
out
and
mov
pop
mov
or
or
cmp
cmpsl
push
mov
mov
testl
mov
scas
shrb
insb
cmp
sahf
ret
sub
test
leave
jge
cld
jle
sti
hlt
aas
add
fisubl
fistpl
jb
sub
sbb
mov
pop
sub
pusha
je
test
in
xor
push
lods
js
dec
std
mov
xchg
jae
aam
jno
add
mov
hlt
xor
fwait
mov
inc
pop
ficoms
and
inc
sub
xchg
and
lods
cld
cmp
bound
and
sti
scas
mov
sub
pushf
sub
xor
hlt
and
pop
sub
sub
cmp
add
push
imulb
and
cmp
sbb
imull
lcall
and
mov
cli
imul
jmp
or
ja
pop
inc
mov
mov
lcall
jns
cmp
mov
push
lds
in
test
in
sbb
cmpl
jnp
mov
jns
inc
test
cs
xor
int3
flds
add
jmp
mov
jns
mov
and
insl
rcrb
cli
fistpl
sub
cmc
addr16
mov
cs
add
inc
enter
xor
lcall
in
cwtl
rorb
movd
pop
or
dec
popf
out
pop
cld
sbb
xor
xor
movsl
xchg
int3
icebp
aas
xor
mov
out
mov
mov
push
decb
sbb
xchg
ljmp
xor
mov
imul
cmp
push
and
enter
cwtl
loop
mov
and
mov
jno
lret
insl
jl
push
into
inc
jb
ret
jg
mov
adc
cmp
inc
rorl
cmp
add
mov
jmp
lock
push
jno
pushl
jae
je
jmp
andl
jae
inc
xchg
add
xor
mov
pop
inc
jge
das
into
icebp
shr
dec
stos
pop
inc
dec
inc
int3
shll
xor
scas
lea
int3
test
push
and
jecxz
inc
xchg
setne
mov
movsl
sti
mov
outsb
dec
and
inc
icebp
lcall
jmp
lret
ja
sbb
testl
pusha
adc
in
stc
psubd
pop
mov
pop
or
fs
call
xchg
adc
sahf
sub
xor
test
sub
push
or
stos
cmp
mov
jb
loop
jns
pop
jae
fnstsw
push
cmpl
pushf
test
sbb
and
clc
mov
and
imulb
push
and
ret
and
loope
mov
iret
add
sbb
mov
mov
sub
sti
add
movsl
xchg
leave
inc
fimuls
pop
push
mov
lods
je
sbb
and
sub
stos
sub
mov
or
push
adc
pop
jmp
fcomps
cmp
std
movsb
pop
add
mov
push
incl
not
rcll
insb
sub
in
test
scas
jb
sbb
pop
loop
and
fwait
aas
mov
cmp
pop
testb
lcall
cli
insl
int
es
rorl
out
gs
inc
cmc
sbb
stc
pusha
cmp
cmp
les
mov
in
cmp
es
incb
outsb
insl
fists
mov
xlat
sahf
mov
mov
js
stos
jg
xchg
mov
add
inc
or
insl
inc
dec
fmull
mov
sbb
int3
scas
aaa
sub
pop
mov
fldenv
fucomp
xlat
xor
mov
push
add
ss
bnd
das
push
adc
add
xor
out
dec
pop
push
inc
xlat
add
andb
mov
sti
fwait
mov
push
pop
xchg
push
sub
pop
inc
cs
cltd
dec
add
ljmp
enter
hlt
lcall
in
adc
mov
xor
stos
cmp
ret
lea
out
faddp
lods
outsl
jp
push
mov
pop
fs
push
cmpsb
sbbl
lret
test
sub
addr16
fmuls
xchg
sbbl
rcrb
cmp
dec
mov
imul
jae
scas
ret
push
cmpsb
lds
gs
mov
pop
mov
loop
sbb
sbb
sbb
jmp
test
sarb
cmpl
sbb
or
mov
in
call
loope
xlat
and
adc
sub
js
scas
or
dec
test
push
mov
push
cltd
mov
scas
rcl
cli
mov
dec
out
push
xor
xchg
push
loop
sbb
test
fs
and
xor
xorl
testb
cmc
or
scas
push
jle
in
aad
add
mov
mov
lea
jle
cmp
int3
xchg
adc
arpl
mov
in
outsl
mov
sub
mov
fmull
or
pop
subb
enter
iret
int3
mov
jbe
push
xor
repz
dec
stos
sbb
or
and
jge
push
mov
cmp
pop
pushl
push
out
out
jmp
cmpsb
nop
jbe
or
adc
jnp
stos
sbb
and
cmp
cmp
rorb
faddp
repnz
push
jo
outsb
mov
sti
pop
ja
lds
jmp
pop
jge
jecxz
inc
cld
scas
loopne
clc
aas
jl
sbb
popf
lods
add
add
and
push
bound
or
lds
in
sbb
icebp
into
or
insb
and
or
movsl
nop
sbb
ja
in
leave
xor
mov
push
lcall
andb
cli
cmp
neg
insb
bound
xchg
mov
lret
cli
mov
iret
lods
aam
fsubl
nop
fidivrs
add
popf
negl
xchg
jne
jmp
cmpb
subl
push
sbb
xor
xchg
sbb
xorl
pop
into
jbe
out
inc
sub
ret
xchg
outsl
push
mov
mov
sub
in
dec
iret
jp
fistpl
addl
dec
adc
shl
dec
outsl
movsw
xor
jmp
outsl
cmp
mov
mov
mov
out
js
pop
iret
nop
std
or
decl
and
push
ret
mov
mov
scas
into
scas
mov
mov
xor
xor
icebp
mov
sbb
loop
into
dec
mov
enter
insb
and
mov
pop
adc
lea
js
mov
ljmp
and
push
divb
cmc
rolb
add
rcll
xchg
fwait
push
or
rorb
jmp
roll
or
adc
xchg
imul
fs
ss
xlat
outsb
jne
test
loop
push
xor
lret
mov
cld
inc
jg
call
add
pop
mov
xchg
or
loopne
pop
push
cmp
fcompl
and
inc
sbb
or
jnp
mov
pop
xchg
sub
adc
or
test
inc
int3
popa
in
or
lea
pop
fstps
popf
pop
test
fisubrs
in
test
aas
sub
ljmp
xchg
mov
cmp
push
push
jl
push
mov
sub
insl
xchg
int3
jle
dec
fnstenv
add
sbb
xor
xchg
inc
mov
or
sub
xor
cli
xor
ja
jmp
mov
sub
clc
out
sar
or
ja
adc
or
jne
mov
push
bound
mov
cld
sbb
sub
sti
mov
dec
stos
jl
jbe
hlt
enter
inc
push
dec
mov
jns
xor
push
xchg
mov
fmull
repnz
inc
cli
mov
xor
sbbl
mov
sti
outsl
fldl
fistps
dec
mov
cmp
sub
mov
fcmovnb
mov
push
mov
add
ret
cmp
or
sub
fstl
sub
pushf
loopne
and
mov
cld
cwtl
rcrb
xchg
test
cmc
jbe
push
std
jno
clc
pop
movsl
push
cli
and
fs
push
aam
push
sub
daa
mov
subl
lcall
sbb
out
insb
or
ret
jb
inc
or
jnp
cmp
cld
jg
outsl
andl
xchg
or
or
mov
pop
loop
mov
xor
and
and
idivl
out
mov
sbb
js
xor
push
push
cmpsl
jne
mov
and
xchg
cmp
sub
mov
mov
xor
daa
ds
jg
dec
loopne
in
loop
xchg
das
xchg
sbb
adc
nop
es
adc
inc
cmpsb
cmp
adc
repz
fwait
daa
or
adc
pop
pop
sti
pop
hlt
ds
inc
imul
adc
push
sti
arpl
cmp
xor
aad
movl
mov
loopne
negb
push
mov
ret
xchg
je
or
stc
xchg
sub
pop
out
pop
std
movsl
mov
push
lret
xchg
jmp
mov
sbb
imul
adc
lcall
push
shr
shrb
jecxz
stc
lock
loopne
mov
out
loopne
cltd
insb
xchg
outsb
xchg
add
aas
jecxz
mov
test
test
pusha
stos
cs
mov
cld
hlt
mov
mov
mov
or
jg
pop
enter
std
add
lock
mov
and
repz
rcll
popa
insl
cltd
add
add
clc
add
rorb
push
lcall
mov
xchg
aaa
add
push
sahf
sub
int
xchg
aam
xlat
add
enter
and
in
push
mov
pop
dec
mov
pop
pop
pop
pop
pop
xlat
lret
xchg
arpl
xchg
std
enter
push
jo
addl
hlt
movb
sbb
ja
mov
scas
pop
lret
mov
enter
movl
movsl
popa
sbb
pop
aam
rclb
add
sbb
ds
mov
sbb
rcrb
fildl
bnd
and
rol
jmp
testl
cwtl
jbe
adc
decl
or
mov
mov
pop
add
es
in
or
jecxz
push
cld
jg
dec
inc
dec
test
cmp
jle
enter
mov
popl
sti
movsl
pop
leave
insb
xor
pop
and
insl
dec
xor
jo
jecxz
adc
dec
std
sub
xor
sti
xchg
ja
fiaddl
pop
in
ss
cmp
fcmovnu
mov
xor
out
pop
stos
push
test
jbe
cli
sub
jbe
cltd
outsb
enter
jmp
or
push
aas
clc
iret
fadds
jg
jae
fsubl
test
daa
cmc
xor
jae
xchg
mov
add
sbb
hlt
xor
and
sbb
pop
sub
mov
adc
xchg
daa
popf
pop
daa
bts
add
loope
cmc
inc
repnz
lods
pusha
add
mov
inc
inc
dec
ret
mov
andb
scas
adc
and
cmpsb
loopne
ficomps
push
xchg
sbbl
xor
cli
add
addl
adc
subb
add
xor
daa
xchg
imulb
stos
inc
cld
rcrl
push
inc
or
dec
std
push
jne
pop
popf
mov
xchg
lret
pusha
bound
mov
inc
push
ljmp
in
cmp
sbb
mov
mov
sahf
inc
push
ljmp
out
or
insb
xor
fcompl
xlat
rcr
outsb
inc
cmp
mov
dec
cmp
out
add
test
in
out
aas
cmc
leave
sub
dec
or
test
cwtl
push
in
std
fcomps
jg
popa
push
or
mov
shll
sub
bound
cmp
mov
fisttpll
inc
movsl
ret
pop
stos
xchg
fwait
or
scas
sbb
push
nop
movsl
std
ret
testl
shlb
ljmp
cmpsb
jmp
pop
pop
in
fmuls
add
xchg
shll
pop
jne
rclb
mov
sbb
out
xchg
fmuls
pop
loopne
sbb
mov
scas
clc
push
pop
mov
jp
rclb
push
dec
mov
lcall
ret
jecxz
aaa
add
xor
insb
test
rclb
push
dec
sbb
int
sub
int
ljmp
lods
xchg
dec
xchg
ja
add
lcall
dec
push
adc
in
wbinvd
inc
mov
lahf
and
jbe
jne
sbb
jmp
push
and
and
sahf
or
mov
hlt
movsb
call
ds
mov
mov
push
repnz
or
out
push
test
xlat
ret
push
sbb
pop
fnstsw
mov
loop
pop
mov
and
add
das
loope
decb
jb
in
dec
mov
fld
xor
jne
mov
xorl
cs
cmp
sahf
xlat
inc
out
xchg
xchg
dec
adc
scas
sub
rcr
add
push
xor
cs
xchg
test
es
add
push
xchg
xor
xchg
out
loop
add
in
jge
out
pop
mov
adc
push
xchg
dec
sbb
outsl
mov
jae
adc
insl
adcb
jmp
jo
push
inc
outsl
pop
test
or
les
repnz
arpl
mov
mov
test
and
add
inc
mov
repnz
data16
mov
adc
jg
push
or
out
sarb
push
jb
daa
xlat
dec
jo
pusha
loopne
push
dec
cmpsl
aad
pushf
jne
add
cli
addr16
movsb
pop
lds
push
pop
mov
jb
fisubrl
imulb
cli
xchg
fcmovne
out
jns
shrl
cmpsb
push
scas
loop
scas
and
pop
inc
inc
xchg
leave
sub
mov
mov
es
jp
jns
aad
fadds
rclb
and
mov
jg
sub
std
push
lds
push
mov
adc
dec
xor
scas
mov
dec
fcoml
and
dec
jle
inc
stos
dec
dec
fidivrl
dec
iret
subb
pop
dec
pop
repz
shr
cli
pop
int
gs
add
xor
or
inc
xor
sbb
ficoms
mov
mov
xorb
jmp
cwtl
test
lea
cmp
push
std
xchg
testb
daa
push
movsb
jl
test
pusha
push
mov
cwtl
das
cmc
push
pop
pop
and
movsb
xchg
cmp
add
test
dec
xchg
mov
out
and
mov
jno,pt
addr16
test
sahf
popa
clc
lret
xor
fadds
sahf
ja
pop
and
mov
fs
lea
xchg
stos
cmpsl
fstpl
adc
mov
add
ret
stos
scas
mov
idiv
lret
inc
lods
or
xchg
addr16
ja
iret
xor
out
or
sub
adc
ds
adc
xorb
sub
mov
in
or
push
jne
and
rol
pop
mov
add
mov
mov
and
test
bound
add
test
testl
xor
test
ds
lds
out
popa
xor
in
or
cld
js
stos
xor
mov
xchg
xor
or
js
add
test
cli
lods
push
push
cltd
into
sub
out
fdivl
bnd
push
sbb
or
aam
fistpl
out
mov
lock
imul
out
in
dec
inc
sub
mov
dec
lret
adc
ss
adc
sub
jnp
mov
cmc
cs
in
sarb
push
and
js
adc
add
mov
cs
out
jge
xchg
jne
loopne
mov
lods
into
dec
fdiv
test
add
mov
icebp
mov
sbb
and
mov
stos
adc
popf
mov
gs
shll
stc
es
loopne
fdivs
les
iret
rcr
outsb
or
pop
call
push
mov
or
popa
jge
push
add
cmp
fstp
cmp
clc
pop
add
cltd
dec
imul
cmc
ljmp
loopne
das
popa
leave
daa
ret
cmpsb
pop
loopne
mov
ljmp
mov
add
sbb
jns
test
cld
je
icebp
movsb
pop
inc
cmpb
push
jmp
pop
imul
in
js
imul
mov
xor
popf
or
js
sbb
negb
popf
cltd
aam
lahf
or
and
adc
jle
and
and
addr16
neg
neg
loop
mov
push
mov
loop
push
xchg
mov
inc
addr16
jp
inc
aam
inc
cmpsl
and
ret
mov
push
addl
push
pushf
stos
mov
pop
adc
cmp
pop
fistpl
dec
ss
jmp
push
dec
repnz
pop
xor
shlb
aam
cs
jecxz
pop
jno
adc
stc
mov
loopne
cmc
fdiv
lds
and
xchg
loop
mov
testb
shll
adc
jp
mov
mov
mov
shrb
sub
sbb
jg
lea
mov
jmp
xor
jae
rclb
pusha
iret
sarl
sahf
adc
sbb
fildl
call
lea
mov
fstpt
or
sub
lods
mov
pushf
dec
jo
jno
fnsave
imul
jo
outsb
and
in
lds
jno
cs
ds
xchg
jmp
jb
loopne
dec
sub
mov
call
fdiv
push
shl
cmp
cld
xchg
xor
adc
dec
xor
pushf
das
je
les
add
loope
push
push
xchg
xchg
mov
mov
pop
and
adc
aam
inc
xor
inc
add
jecxz
push
cwtl
dec
lahf
fldenv
lret
dec
fnstsw
mov
dec
mov
fdiv
ljmp
lret
xorl
into
lods
cmc
ret
stos
in
loope
cmc
imul
mov
inc
mov
pop
add
out
outsb
mov
push
cmc
lahf
movsl
jle
add
sub
jae
adc
sbb
arpl
test
out
mov
inc
sub
xchg
jp
sti
push
mov
mov
xor
pop
mov
push
dec
jp
mov
pop
mov
or
das
xchg
and
jb
cmc
lods
push
repnz
lea
rcll
push
jp
xchg
xchg
js
es
jecxz
inc
icebp
aaa
xor
pushl
hlt
sub
mov
mov
scas
cwtl
jns
das
aaa
ret
mov
mov
stos
jne
int
adcl
cld
push
ret
jno
sbb
jo
dec
fcmovnb
mov
inc
or
or
mov
aas
sbb
inc
bound
out
inc
out
sub
fmuls
loop
divl
push
xor
cmc
mov
adc
push
adc
fxch
mov
add
sub
xor
inc
rcr
inc
xchg
rolb
sbb
das
pusha
divb
scas
mov
call
mov
add
mov
in
addl
mov
loopne
test
sub
push
arpl
test
inc
mov
dec
ffree
jno
iret
fsubl
icebp
std
mov
jmp
mov
ret
add
adc
bnd
pop
data16
cmpsl
lcall
popa
mov
into
mov
iret
pop
and
pop
rolb
add
test
popa
movl
out
inc
add
inc
shr
loop
scas
bound
or
fs
mov
pop
sub
mov
pop
scas
sbb
jg
movsl
imul
pop
push
push
pop
add
mov
in
cmpsb
adc
rolb
xchg
inc
ret
mov
or
pop
pop
jge
rcl
dec
int3
adc
push
push
fsubrs
test
or
std
xor
insl
out
and
adc
jnp
movsb
negb
adc
and
fdivs
test
and
mov
not
shrl
xchg
or
imul
xor
pushl
nop
mov
sahf
xchg
aaa
pop
dec
and
xchg
ss
and
stos
mov
pop
popa
jmp
jne
and
and
mov
mov
add
stos
mov
adc
ds
cwtl
rcrb
sbb
push
shrb
and
sub
cmp
call
pusha
enter
sub
lret
lahf
lods
adc
in
cltd
rol
sub
cmp
fldpi
fs
jle
xchg
mov
adc
cmpsb
std
mov
lret
push
or
mov
mov
aad
jnp
fwait
mov
jae
icebp
fwait
call
out
and
subl
jle
lock
and
mov
mov
mov
or
cmp
mov
int3
sbbl
outsb
or
push
int
add
push
ret
sub
mov
aas
mov
xchg
fstpt
aam
call
mov
and
xor
cmp
mov
jb
jae
in
sub
loop
test
jae
fwait
dec
cmc
push
and
bound
sbb
imul
dec
inc
pop
xchg
lcall
mov
xchg
stos
js
cmc
dec
out
adc
dec
jg
inc
mov
jns
gs
mov
movsl
pop
stc
xor
dec
ja
mov
mov
xchg
movsb
push
mov
testb
xor
cmp
adcl
data16
xchg
adcl
pop
testb
push
dec
xor
xor
subb
sbb
pusha
mov
lods
pushf
sbb
ret
stos
dec
es
mov
outsb
jg
lahf
fcoms
and
jl
cmp
repz
pop
mov
stos
sub
adc
imul
out
cmpsl
pop
cs
jnp
shl
mov
rcrb
mov
adc
mov
aad
xchg
int
lahf
pop
inc
ss
mov
xor
inc
mov
fnsave
inc
mov
lcall
adc
imul
clc
and
mov
jno
faddl
push
mov
jnp
out
cmpsb
scas
notl
pop
xchg
repnz
stos
xor
test
subl
xchg
mov
xchg
or
cmpsb
add
sbb
mov
xor
lods
fmulp
jae
lds
cwtl
repnz
cld
jecxz
frstor
xchg
ret
adc
lret
fwait
daa
fistpl
fwait
adc
cwtl
xchg
hlt
jns
xor
filds
push
outsl
or
fnstcw
ficompl
add
and
fucomi
or
imul
adc
pop
test
mov
sbb
xor
push
daa
mov
insl
lods
or
mov
add
jg
shl
adc
inc
inc
xchg
inc
jecxz
sub
fnsave
test
and
in
inc
jne
sub
mov
push
rcll
mov
fwait
into
cmp
lret
pop
and
sbb
pusha
sbb
or
rorb
loope
testb
popa
daa
mov
jo
cmpsl
mov
lock
mov
xlat
push
pop
mov
sub
call
inc
subl
cwtl
jle
stos
mov
fistpll
popa
repz
pop
sbb
sub
sbb
rclb
xor
loope
fs
loop
test
mov
stc
shlb
in
movsl
addr16
pop
std
pop
test
add
dec
inc
lcall
jp
into
fs
and
cld
lret
sub
lahf
xchg
xchg
outsl
mov
push
inc
ljmp
mov
ljmp
lods
push
dec
mov
mov
push
popf
shll
xchg
and
mov
in
adc
fwait
das
pop
mull
mov
out
ss
ficoms
cmp
clc
cmp
xlat
stc
mov
mov
or
movsl
jg
xor
insl
jo
dec
popl
sub
mov
cmp
shrl
ja
aad
mov
pusha
inc
xchg
icebp
or
popa
push
xor
inc
imul
mov
xor
sub
je
xor
fidivl
iret
and
mov
jmp
cmp
push
enter
or
jae
pusha
xchg
mov
mov
imul
cwtl
lret
sub
mov
lea
dec
mov
into
mov
outsl
test
aaa
inc
xchg
pop
in
mov
fmul
ss
or
push
jge
pop
push
cmpsl
jp
daa
inc
xchg
pop
repz
cld
lea
pop
jmp
arpl
cwtl
js
mov
out
inc
jbe
lods
orb
pop
lods
and
xchg
js
jb
cmpsb
sti
xlat
pop
loope
ds
mov
fldenv
fsubrl
arpl
fdivrl
jecxz
aas
mov
hlt
jmp
lock
movsb
fmuls
mov
xor
bound
dec
mov
psubusb
testb
dec
cmp
push
test
pusha
pop
scas
push
aam
dec
out
add
sub
pop
repz
cs
push
and
gs
int3
lea
movsl
in
push
mov
addr16
jl
out
fmuls
mov
insb
popa
mov
inc
out
pop
xchg
arpl
daa
leave
movsl
xor
and
aam
push
adc
cltd
ss
jb
inc
push
add
or
pop
fwait
repz
repnz
cli
call
inc
sub
cmpsl
adc
imul
pushf
addr16
in
rcr
inc
into
pop
or
lahf
filds
out
clc
jp
scas
mov
cmp
sbb
ds
add
dec
aad
mov
in
mov
pop
pop
mov
int
or
cmp
in
sbb
xchg
sub
adcb
outsb
cmp
dec
pop
cli
cmpsl
test
int3
rclb
js
ljmp
imull
jg
xchg
pop
fidivrs
xchg
adc
shlb
push
pop
inc
dec
addr16
cmp
add
lds
cmp
adc
scas
sti
mov
mov
sbb
cmp
outsb
jo
xchg
pop
sar
push
cld
push
movsb
cli
cltd
add
jo
dec
jp
iret
add
inc
lods
test
mov
in
int3
jg
pop
xchg
stos
mov
inc
movsl
cmp
mov
adc
out
pushf
out
jbe
and
in
imul
and
out
mov
movsl
adcb
repz
and
out
dec
cld
cmp
test
test
fdiv
mov
out
add
pop
flds
cmp
lcall
xchg
mov
xchg
push
lret
lcall
cli
jne
xchg
add
pushf
shlb
sbb
sub
ret
jl
movsl
xchg
push
cmp
loopne
enter
lods
cmp
cli
cmpl
sub
mov
cltd
cli
out
test
xor
xchg
sub
cwtl
cld
and
lods
mov
jle
dec
mov
cmp
sbb
loope
push
idivl
and
testl
add
pop
aaa
test
push
jg
repz
push
sahf
fdivl
cmp
xchg
sub
dec
imul
rorb
xchg
dec
out
popa
jl
and
imul
lods
dec
pop
mov
add
push
test
movl
dec
jns
lds
inc
lods
sbb
in
mov
cmp
and
cld
inc
add
adc
aaa
dec
lea
xchg
inc
insl
insl
pop
xor
jbe
add
jb
mov
hlt
mov
jnp
mov
sbb
ds
mov
cmp
mov
add
mov
mov
mov
test
push
pop
addr16
les
pop
dec
cmc
test
pusha
mov
xchg
fsubs
mov
pop
push
dec
sub
cmp
sbb
dec
add
xchg
sbb
sub
mov
stos
cmpl
xchg
mov
cmc
or
dec
fisubs
sub
mov
outsb
mov
jp
mov
ss
dec
ja
mov
sub
push
mov
mov
jnp
negb
cmp
jo
movsb
xchg
int3
and
or
xchg
cmp
das
mov
sub
xor
mov
fisubrl
stc
sbb
lock
xor
sti
dec
gs
imul
fsub
cmc
stc
pop
insb
icebp
mov
xorb
fwait
daa
rcrl
xchg
dec
repnz
in
push
stos
repnz
scas
push
imul
sub
fldenv
or
sbb
jecxz
faddl
push
xchg
scas
sahf
dec
add
aam
cli
inc
push
mov
add
sets
or
jp
inc
sub
test
cmp
loopne
sbb
out
mov
stos
fcom
and
push
lret
dec
incb
mov
mov
mov
sar
jne
insb
pop
adc
sub
pminub
outsb
sub
ljmp
push
clc
jge
xor
add
lahf
mov
ss
lock
dec
mov
lcall
dec
push
mov
test
sub
sti
cmp
insl
mov
sub
mov
adc
jb
pop
test
lds
sub
leave
fistl
inc
shrl
pop
ficomps
fsin
clc
push
aas
cmpsl
insb
adc
dec
jecxz
or
jo
dec
jnp
sub
outsl
sbb
mov
dec
inc
out
and
repz
adc
jle
mov
test
sub
incl
sub
pop
popa
int3
mov
adc
fadds
pop
xchg
enter
jmp
sarb
xlat
aaa
inc
mov
dec
or
js
sbb
and
or
imul
cltd
xorl
add
mov
les
pop
shlb
pop
ss
sbb
das
cli
add
sbb
roll
test
adc
sub
call
bound
cmp
cmpsb
rcll
lea
jge
scas
sahf
adc
aad
cwtl
or
popa
pop
aam
pop
mov
jnp
and
cmp
sub
cmc
xor
shll
dec
xor
cmp
sbb
push
or
lods
xchg
or
push
mov
cld
jo,pn
or
cmpsl
lds
fisubrs
divl
sub
lret
or
stc
add
cld
je
xchg
into
outsl
add
lods
mov
ud1
adc
mov
jecxz
data16
pusha
inc
rcr
xor
add
mov
dec
or
sti
aam
add
and
dec
mov
xor
repnz
push
mov
or
sbb
jmp
pop
xor
adc
push
decb
in
push
jmp
stos
mov
push
leave
jbe
les
iret
or
jns
data16
outsl
addr16
out
das
enter
int
mov
mov
out
loop
xor
or
push
mov
mov
lods
push
sub
sub
xchg
in
jbe
jecxz
out
rol
je
push
xor
or
call
ret
jle
cmpsl
clc
or
sub
jae
jo
cmp
pop
mov
clc
in
out
sbb
test
int3
fnstcw
ja
mov
je
jbe
mov
shlb
xchg
pop
mov
dec
ss
inc
pop
out
addr16
lods
cmp
jp
adc
cmp
mov
sbb
pushl
sub
inc
inc
shrl
loop
mov
outsl
das
sub
push
fbld
push
cltd
cmpsl
pop
cmp
xor
aas
inc
insb
std
ja
or
popw
in
lea
and
xchg
shl
mov
aaa
cwtl
cmp
arpl
js
lock
xor
out
jns
pop
sub
mov
pusha
and
test
fstpt
sub
lahf
inc
mov
pop
inc
arpl
insl
adc
sbb
xor
jbe
dec
pusha
fsubrs
jae
add
adc
push
mov
lds
add
or
push
mov
xchg
mov
adc
roll
ret
mov
jle
dec
and
dec
mov
inc
cmp
fidivs
call
push
jno
jge
addr16
rorl
dec
jbe
sarb
inc
inc
in
xlat
pop
lds
loopne
cmpsl
dec
aas
mov
pushf
cmp
push
fmuls
fs
scas
loop
push
mov
sub
mov
pop
push
cmpxchg
div
mov
add
inc
aam
out
cmc
pop
movsl
outsb
aam
imulb
add
pop
sub
in
push
mov
roll
push
push
mov
rorb
test
lcall
xchg
insb
xchg
pop
add
stos
and
movsl
push
cltd
push
bound
dec
ret
int3
stos
aaa
adc
mov
and
cmp
pop
cltd
and
dec
jp
aad
fdivrs
mov
invd
inc
add
xchg
idivb
int
mov
pop
fbld
scas
mov
jnp
pop
into
cli
insb
scas
push
out
iret
push
jl
bound
jne
and
lcall
inc
daa
popf
fnstenv
xchg
mov
out
inc
dec
sbb
jne
push
cmp
jecxz
movsl
shr
xchg
adc
push
int
inc
clc
stc
or
mov
inc
int
addr16
popf
pushf
push
xor
xchg
xchg
mov
cwtl
ja
mov
xor
outsb
into
jbe
pop
xor
ret
subl
or
popf
pop
jnp
daa
enter
insl
clc
add
or
add
imul
testb
jecxz
lods
jge
sarb
push
and
out
stos
add
and
fcmovne
pop
jae
or
xchg
adc
adc
sbbl
roll
mov
pushf
and
push
das
fisttps
lods
push
push
mov
aaa
push
out
stc
out
fs
sbb
repz
pavgw
and
and
or
pop
scas
insb
idivl
test
out
adc
aaa
or
cmpsb
sub
ret
sub
add
scas
push
push
push
pop
mov
into
dec
ja
call
shlb
jl
jns
fsubrl
push
adc
out
inc
push
add
pop
int
in
stos
push
dec
loopne
lea
and
loop
xchg
lahf
xchg
sti
adc
xchg
xchg
dec
jmp
ficoms
aad
cmc
jl
sub
push
xchg
bswap
pop
repz
and
push
cli
movsb
ror
pop
mov
aad
sub
inc
jg
jle
push
loope
js
inc
aam
jl
add
inc
cmpsl
sbb
aas
dec
mov
and
pop
fst
or
xor
mov
adc
dec
int
and
push
mov
cmp
out
mov
push
add
push
sub
xlat
fdivrs
push
aad
sub
xchg
add
mov
in
stos
or
lea
aam
push
and
cld
cltd
mov
lahf
mov
les
mov
fwait
popf
fiaddl
lds
jns
dec
sbbl
mov
cmp
in
mov
popf
xor
cmp
pusha
faddp
add
jge
fs
sbb
pop
dec
ret
ret
mov
adc
cmc
sub
add
ret
dec
xchg
mov
adc
int3
xchg
loope
mov
das
pop
add
scas
xor
sbbb
push
and
test
ret
paddd
jle
cwtl
les
movsb
mov
ficomps
mov
mov
in
jmp
add
push
into
int3
ljmp
imul
inc
dec
daa
xlat
jge
mov
cmpsl
jg
xor
das
push
jmp
in
mov
data16
adc
inc
leave
movsl
in
sbb
jno
pop
cmpsb
cmp
movsb
dec
call
xchg
inc
xchg
std
xchg
adc
and
call
out
jg
roll
add
mov
inc
mov
clc
xor
mov
add
stos
pop
mov
dec
popa
movsb
inc
xor
dec
cli
in
xchg
lret
sub
jge
sub
cld
lock
adc
jg
sbb
sub
jnp
daa
loopne
cmp
mov
leave
sbb
cmp
jnp
xorb
pop
mov
pop
out
daa
inc
cs
in
adc
push
dec
sbb
mov
and
xchg
ficoml
sbb
jecxz
mov
cmp
adcb
and
push
out
jno
xor
cld
mov
jno
adc
test
scas
fnsave
mov
repz
mov
pop
hlt
add
mov
fidivs
pop
aam
bound
rcrb
cmc
sub
jae
gs
cmpsb
lret
add
and
mov
loop
sbb
mov
mov
sbb
ss
push
push
adc
or
or
mov
xor
arpl
filds
xchg
jp
pop
mov
loopne
stc
pop
int3
pop
sub
movb
xor
pop
sbb
mov
dec
push
ffreep
lret
testb
movsb
lods
or
in
mov
mov
xchg
and
in
jp
xchg
jns
fstl
outsb
xor
insl
pop
pop
push
jp
int3
in
jecxz
icebp
cwtl
rclb
stos
jg
jne
sub
cli
lock
data16
aam
push
sub
out
cmp
aad
mov
mov
mov
mov
sbb
and
fs
insb
mov
mov
out
add
cmc
test
jg,pn
daa
mov
leave
sub
mov
mov
lea
adc
dec
popa
popf
xor
sub
inc
loop
insl
das
in
xorb
lea
into
scas
pop
data16
aaa
movsb
jl
and
test
arpl
pushf
cwtl
lods
cmp
movsl
mov
lock
shl
hlt
add
arpl
fcmovnb
aad
iret
imul
test
pop
lea
pop
push
stos
dec
xchg
icebp
lahf
mov
jne
and
imull
jp
mov
ret
enter
push
test
inc
mov
inc
cld
test
sbb
out
filds
xchg
jecxz
mov
call
add
std
pop
js
inc
ret
push
iret
xchg
dec
idiv
push
addr16
pop
fbld
sub
mov
pop
out
xor
adcl
stc
or
pop
pop
clc
lret
push
divl
cmc
enter
push
fidivrs
pop
adc
push
insl
sub
enter
xor
add
add
pop
mov
and
enter
test
inc
cld
aad
sbb
enter
fs
cmp
rorl
or
push
loope
fcoms
cmp
stos
xor
add
adc
dec
imul
xor
adc
xchg
fldt
das
repz
xchg
repz
push
insl
sbbl
sub
lods
shll
adc
cmp
lea
mov
ja
lea
stc
lock
jnp
jo
dec
arpl
pushf
mov
inc
icebp
mov
shlb
aad
sub
frstor
sub
jmp
call
push
pop
add
push
addb
iret
and
mov
sbb
aam
ds
jb
mov
shl
or
popa
push
sarb
xor
adc
call
out
push
cmp
in
adc
out
xchg
gs
sbb
jl
xlat
icebp
sbb
jnp
test
xor
inc
adc
or
out
scas
or
ror
dec
xchg
mov
cmp
shr
in
das
inc
lahf
push
mov
int3
push
lahf
cmp
inc
movsl
sub
lcall
xor
fs
pop
push
jo
das
pop
and
pushf
fadds
mov
cmpsl
mov
aam
mov
ja
stos
adc
cmp
adc
andl
and
enter
inc
add
out
fcom
add
pop
lret
stos
xor
lock
pop
jbe
pop
pop
mov
pop
dec
push
push
jae
out
cmp
pop
std
fwait
and
adc
pusha
xor
aaa
fbstp
lea
aad
sub
adc
repnz
pop
cmp
in
stos
mov
pop
xor
sbb
cli
data16
out
out
js
out
outsl
repnz
jne
adc
xchg
jbe
out
cld
rorl
and
inc
loope
cmpsl
shll
fisubs
out
xchg
das
pop
pusha
mov
dec
stc
mov
jg
je
jno
mov
push
xchg
sti
push
xlat
addr16
popa
out
fiadds
fbstp
jno
fwait
call
dec
repz
cmovle
inc
dec
data16
lret
mov
test
div
mov
mov
sub
jl
and
push
add
lods
mov
mov
shl
cwtl
mov
imul
das
fidivrl
js
int3
cli
jp
sub
aaa
cwtl
inc
jnp
loope
and
jmp
pop
xor
repnz
jbe
mov
sub
or
popa
pop
push
popf
lods
push
cld
outsl
sbb
leave
mov
sahf
or
xchg
xor
push
popf
cli
xchg
movsl
cli
int
je
pop
les
jg
les
sub
fildl
bnd
sub
bound
cltd
loopne
sti
jbe
xor
add
sti
sbb
xchg
inc
push
add
pop
cmp
aad
scas
movsl
mov
sbb
and
pusha
or
cltd
mov
add
or
int
xchg
push
dec
pop
inc
test
inc
jb
ret
iret
mov
lret
jns
jno
test
push
xchg
mov
fbstp
movsb
icebp
jno
or
xor
lahf
imull
popf
pop
arpl
lcall
lret
dec
mov
repz
mov
sub
push
cmp
arpl
scas
aam
jno
adc
loop
and
xor
adc
cmp
xchg
jae
ret
adcl
ret
cmp
push
or
mov
js
lds
iret
mov
jmp
fidivl
stos
subl
mov
bound
or
adc
mov
loop
adc
cld
jae
pop
jg
adc
nop
and
jns
les
inc
push
arpl
lds
mov
xchg
push
jb
mov
sbb
jl
push
sub
imul
dec
mov
aaa
inc
adc
mov
mov
mov
adc
lea
xchg
in
out
cmp
jecxz
jmp
mov
pop
jnp
xchg
call
insb
xor
fisubs
dec
mov
or
cmp
mov
cli
jb
popf
sub
jmp
es
jecxz
ja
daa
jle
ja
jecxz
cmp
push
pop
test
xchg
cli
add
es
loop
jno
je
xor
jecxz
inc
push
outsb
lret
nop
dec
ja
jo
enter
mov
dec
sub
add
and
jbe
pop
leave
out
imul
jnp
mov
pop
mov
and
mov
push
dec
xchg
daa
xor
test
ret
ret
jo
pop
out
sbb
push
insl
data16
or
pop
cmp
fs
mov
xor
jmp
pop
dec
lahf
popa
push
cld
popf
shl
jmp
push
popa
xchg
aaa
jmp
aas
ret
mov
loopne
mov
lds
lcall
sub
push
pop
or
shl
fwait
icebp
mov
arpl
outsl
inc
push
pop
mov
iret
fcmovnbe
ret
inc
adc
cmpsl
lods
data16
inc
xor
mov
ljmp
fs
jp
cmpl
adc
sub
cmp
in
sbb
mov
dec
pusha
mov
repz
out
int3
data16
les
mov
rcll
jp
std
daa
aaa
add
sub
imulb
mov
mov
iret
imulb
movl
test
xorl
xchg
mov
push
roll
fmul
mov
push
sbb
int
ss
paddd
and
sbb
fbld
jle
mov
dec
outsb
mov
in
ret
loopne
call
icebp
mov
in
xor
dec
shlb
into
mov
cwtl
pop
iret
lock
data16
jae
scas
in
push
push
cmp
fldcw
dec
dec
or
test
xor
jg
push
cmp
mov
and
popw
sarl
es
enter
and
jmp
push
sub
add
mov
adc
loope
js
inc
sub
push
cli
and
mov
cmp
cld
add
mov
inc
cmp
add
jno
mov
fcmovu
pop
dec
jb
dec
js
xor
xchg
outsb
imul
adc
mov
ret
pop
xchg
or
and
jle
mov
mov
xor
mov
jl
mov
pop
movsl
out
adc
loope
push
repnz
dec
scas
jne
dec
ss
mov
or
or
xchg
push
xchg
pop
lods
lea
test
mov
fsub
stc
addr16
cltd
mov
cmp
inc
outsb
cmp
or
scas
xor
lahf
divb
iret
loop
mov
cwtl
xor
xchg
cmp
adc
bound
jg
push
leave
addr16
inc
jmp
sbb
xchg
and
cmp
repz
ret
cwtl
xchg
lret
jmp
fadds
mov
clc
pop
add
int
popf
lret
or
pushf
in
scas
std
xor
xor
int3
mulb
fdivs
sub
xor
ds
aam
jp
inc
test
sbb
sbb
add
int3
or
jno
sub
shlb
pop
das
and
je
pop
fistps
loope
xchg
imul
repnz
fcmove
divb
xchg
push
ret
test
and
mov
mov
roll
mov
int
xor
fdivl
arpl
ja
cwtl
mov
mov
xchg
cmp
ret
push
popf
xchg
popa
lock
rorb
int
mov
out
notl
adc
aam
ljmp
in
mov
unpcklps
icebp
xchg
je
sbb
xchg
jbe
jge
push
test
cmpb
std
dec
aas
sub
jno
xor
jecxz
mov
pop
and
mov
push
push
dec
mov
jb
fsubl
fistps
popl
sub
jmp
or
lahf
arpl
push
or
aaa
inc
xchg
cmp
loope
jae
cmpsb
mov
mov
mov
pop
loope
arpl
in
test
adc
mov
jecxz
adc
int
cmp
insb
push
fmul
pop
xlat
fistpl
lret
icebp
dec
push
mov
adc
adc
ljmp
lock
scas
inc
push
cmp
fcmovnu
mov
out
inc
add
loop
push
mov
lret
mov
and
js
jae
mov
or
icebp
pop
test
aaa
pop
sub
mov
sub
fstl
pop
into
inc
shll
cmovp
rorl
lahf
mov
cmp
xor
loopne
add
inc
hlt
jmp
jg
lahf
push
push
les
cmp
stos
stos
jp
mov
adc
mov
or
bnd
jge
or
jbe
loope
adc
scas
sbb
xor
jl
sbb
enter
add
jne
movsl
and
and
js
and
cmpsb
int
sarl
incb
push
jle
mov
or
cmp
movl
adc
adc
push
jbe
jb
xlat
xchg
dec
lret
cwtl
pusha
sub
pop
inc
repnz
das
adc
mull
inc
lahf
jl,pt
push
sarl
pop
fisubrs
and
adc
xor
dec
fsubl
ret
cwtl
jge
cmp
cs
push
mov
test
sub
and
mov
imul
dec
cmp
or
mov
and
push
call
rorb
lods
pop
or
sbb
les
pop
xchg
testb
mov
out
mov
sbb
dec
leave
movsb
orb
xor
aas
cwtl
xor
sbb
push
fdivrs
loopne
and
loope
cmp
push
xchg
xor
jnp
nop
push
sbb
sub
sti
mov
mov
mov
dec
xchg
aam
jmp
and
xchg
stos
jne
adc
rcrl
dec
js
push
push
daa
lock
popa
fstps
pusha
mov
in
dec
addr16
out
xchg
cwtl
push
fadds
xchg
or
fisttpl
inc
adc
stos
scas
xor
mov
mov
in
bound
xchg
xor
or
or
dec
mov
sbb
sarb
or
pop
iret
ret
sub
or
scas
fs
cmc
mov
cmp
bound
clc
inc
pop
mov
lahf
in
shl
jge
xor
bound
lahf
subb
mov
sbb
ss
mov
movsl
and
cmp
clc
jmp
in
out
push
pop
jbe
pop
inc
add
ret
sahf
stos
loopne
sub
pop
ljmp
mov
jbe
pop
negb
rol
fsts
xchg
adc
lock
or
mov
sub
inc
mov
subb
imul
scas
stos
pop
fstps
fwait
push
call
in
cmpl
sub
test
ja
mov
out
pop
cld
add
cmp
mov
mov
js
adc
and
xlat
push
fcoms
mov
or
in
cmp
test
arpl
mov
fwait
outsb
add
sub
jne
data16
cmc
cmpsl
sahf
incb
and
ret
clc
cmp
or
adc
add
or
fcoml
das
cmp
in
xchg
fistpl
sub
hlt
movsl
mov
fisubs
hlt
test
out
ret
sbb
jle
aam
add
ljmp
mov
sbb
mov
mov
push
and
or
mov
jge
scas
add
xor
int
dec
cmp
imul
mov
add
inc
xchg
es
jmp
cmp
mov
pop
addr16
movsb
sti
lock
aaa
lea
pop
sub
mov
fildl
xor
bound
and
mov
insb
iret
andl
jno
add
add
inc
mov
cwtl
addb
mov
sbb
pusha
lahf
and
pop
mov
mov
dec
push
sbb
add
in
or
lods
test
sbb
mov
cmp
fsubl
pop
fs
inc
ficompl
ret
pop
mov
jne
xchg
xchg
ror
mov
dec
jns
addr16
mov
jno
ret
jno
sbb
cmp
cld
mov
push
sahf
mov
jl
aam
loop
scas
fldenv
mov
lea
or
sub
add
xchg
push
pusha
or
mov
mov
out
out
xchg
xchg
out
cmp
sbb
jns
jmp
sub
cmp
cmpsb
fdiv
dec
dec
sub
pushf
mov
push
jmp
insb
fwait
xlat
push
and
push
mov
into
xchg
jecxz
xor
jne
lar
mov
jbe
and
out
in
push
xchg
insl
movsl
aad
loope
pushf
out
xchg
scas
clc
pop
lret
inc
and
or
fwait
mov
sbb
idivb
lahf
enter
and
in
jno
out
push
les
fists
mov
sbb
jl
cmpb
arpl
out
xchg
mov
push
outsb
call
scas
lea
mov
test
cmp
jl
jecxz
pop
into
shll
and
mov
sbb
sbb
clc
out
jns
fmuls
lds
pop
leave
popf
aam
dec
dec
popf
mov
xchg
jne
js
inc
cwtl
dec
xchg
mov
mov
dec
repnz
fidivs
mov
das
inc
shrl
or
pop
stos
outsl
jle
xchg
jl
push
pop
pop
bnd
rcrb
mov
cmc
mov
cli
sub
jnp
shlb
push
ljmp
mov
inc
xor
inc
cwtl
xor
sub
lods
xchg
or
cbtw
ljmp
je
sbb
mov
jp
leave
mov
sub
sbb
lods
mov
into
bound
mov
fbstp
xchg
iret
les
loopne
push
cmpsb
push
xchg
cmp
jmp
dec
mov
in
sub
push
dec
jbe
shrl
hlt
pop
aaa
adc
cltd
lods
or
inc
stos
addr16
sbb
addr16
xor
sbb
scas
andb
js
rcll
in
movsb
leave
and
mov
pslld
xorl
mov
xor
cs
adc
repz
ficomps
int
or
dec
mov
out
mov
movsl
xor
out
push
cmp
stc
jns
icebp
mov
repnz
adc
jae
aaa
ljmp
xor
roll
mov
push
adc
iret
outsb
adc
imul
clc
dec
gs
dec
fisubs
xchg
push
push
jle
sub
mov
jmp
mov
jmp
xchg
imul
xchg
jle
imul
pop
js
add
in
repz
bound
test
out
and
movsb
jl
outsl
loopne
jg
dec
xchg
int
fimull
adc
add
loopne
xor
cmp
push
test
adc
xor
leave
cmp
add
inc
xor
and
incb
jne
mov
mov
and
cmpl
lock
lahf
shlb
into
jmp
jmp
mov
push
cwtl
outsl
call
sti
outsl
and
es
jb
andb
ja
xor
jmp
inc
adc
popa
aad
lods
ds
pop
testl
cld
lret
outsl
mov
xor
or
xor
sbb
popf
dec
pushf
jp
pop
addr16
xor
shlb
jge
mov
fimull
mov
in
mov
das
cmpsl
mov
cld
lock
aad
jmp
mov
mov
std
gs
pop
jl
lahf
mov
and
jbe
lods
imull
mov
ret
dec
cmpsb
sub
out
fwait
ret
stos
popf
aam
mov
cmpsb
ror
jo
aad
xor
jbe
jmp
aad
sbb
repnz
jbe
fs
sbb
aad
ljmp
jnp
sbb
daa
out
fsubs
ss
xor
xchg
aam
shrb
mov
mov
into
cmp
out
in
ljmp
sub
mov
jnp
push
in
jbe
pop
scas
pop
mov
sbb
lret
into
sbb
inc
dec
inc
xchg
sub
lds
addr16
dec
imul
mov
idivl
sub
pushf
xchg
in
psrad
imull
call
dec
repz
inc
ficompl
pop
cmp
sub
jns
roll
mov
dec
stc
subl
jg
sub
adc
lahf
jle
testl
inc
xchg
repz
out
and
pop
mov
pop
adc
xor
mov
scas
mov
xor
repnz
fwait
ss
fsubrs
pop
mov
stc
fldl
fsub
hlt
call
pusha
lds
cmc
je
push
cmpsb
dec
cwtl
mov
jg
mov
sbb
pop
sbb
mov
pop
repnz
dec
mov
jns
inc
insl
mov
lea
clc
cmp
mov
add
out
lret
push
xor
dec
push
fdivl
fadd
inc
shrl
bnd
xchg
aam
insl
les
or
dec
je
daa
xor
insl
test
les
adc
mull
xor
into
mov
xor
cli
negl
dec
sbb
idivl
mov
mov
mov
adc
enter
mov
push
xchg
pusha
bound
mov
pop
insl
xlat
sub
fstpt
and
pop
aam
mov
sub
and
fiadds
mov
test
jb
sti
mov
ret
imul
cmp
lods
xor
out
pusha
sub
sbb
int3
jmp
jae
bound
popl
enter
jecxz
mov
jbe
jne
jp
pop
push
mov
inc
aas
into
stc
lcall
in
jno
dec
adc
fwait
sbb
push
mov
pushf
fisubrs
enter
inc
fsubl
lret
ss
call
in
xrelease
mov
cltd
mov
dec
mov
loope
xchg
aam
test
stos
or
aas
rcrb
xor
fdiv
call
lahf
inc
inc
hlt
xlat
cmpsb
mov
mov
mov
push
push
pop
int3
cmpsl
sbb
add
mov
cmp
fcoml
jmp
push
xor
insl
fmuls
mov
out
fsts
std
push
js
xchg
pop
sub
popf
mov
xchg
cmp
popf
xchg
gs
push
mov
lods
fidivl
faddl
aad
rclb
sbb
imulb
cltd
les
push
inc
sbb
xchg
call
mov
add
xchg
shlb
dec
sarb
clc
mov
dec
xchg
adc
stos
aad
push
int
lods
and
add
lock
or
jbe
inc
loopne
cmp
ret
sbb
adc
orb
add
arpl
dec
icebp
cmpsb
sbb
lds
inc
cmc
sub
jecxz
jp
and
push
repnz
leave
mov
out
cli
and
mov
loop
pop
movsl
clc
mov
pop
jne
sub
rolb
pop
adc
outsb
mov
jae
xchg
test
mov
pop
das
movsb
test
cwtl
dec
xor
xchg
loop
or
xchg
push
xchg
fsubrl
mov
data16
ret
aam
outsl
push
cmpsb
push
mov
inc
lods
sbb
cwtl
outsl
arpl
and
add
jb
cli
mov
mov
sahf
jp
mov
inc
mov
add
movsl
add
inc
or
nop
push
jge
es
lock
mov
sub
dec
lock
pusha
xor
sbb
mov
mov
popf
loop
jae
frstor
and
nop
inc
push
aas
in
inc
jns
sbb
cmp
fcoms
icebp
pop
mov
in
and
jg
adcl
jmp
mov
jge
adc
push
ret
cld
mov
aas
jg
and
ds
mov
mov
mov
movsl
ljmp
mov
sub
stos
adc
mov
and
insl
notl
add
cmp
fucomp
aad
jge
ret
cmpsl
xor
jae
jp
out
test
shlb
and
fmul
fadds
enter
sbb
les
ret
cmpsl
pop
mov
push
pop
pusha
sub
mulb
addr16
dec
mov
lea
ja
dec
inc
mov
lret
shr
and
xchg
stos
pop
jle
lret
lret
ret
xor
jb
test
lds
sub
push
mov
popf
hlt
cld
dec
pop
push
dec
dec
jecxz
or
lahf
mov
sub
push
cwtl
add
outsb
cwtl
ret
notb
mov
mov
js
mov
lret
push
fsubrl
and
daa
mov
mov
fiaddl
fnsave
in
sbb
dec
push
mov
mov
loopne
jge
jmp
ret
test
inc
push
pop
mov
push
xchg
push
dec
xor
dec
sub
sub
or
jb
sub
pushf
jns
mov
xor
jl
imul
or
popa
and
mov
mulb
movsl
cwtl
clc
enter
pusha
test
lcall
insl
sub
mov
and
shr
rdpmc
push
pop
sub
mov
mov
lret
sbb
cs
cmc
pop
cmp
add
push
mov
and
push
push
lds
leave
fwait
subl
mov
mov
iret
jo
cmp
or
mov
pop
sub
call
mov
cmc
loope
fsubl
xchg
data16
sbb
aaa
shll
jge
nop
shlb
adc
lods
dec
sbb
push
mov
sub
push
addb
aaa
shll
pop
mov
std
sbb
push
shlb
stc
mul
sbb
out
decb
test
jbe
lcall
adc
mov
xchg
cltd
xor
mov
xor
fistpll
mov
push
push
fwait
inc
xor
jge
fwait
cs
add
sti
cmp
loopne
jle
out
xchg
jns
xchg
mov
push
dec
sub
adc
rorb
push
std
adc
sub
push
dec
pop
and
mov
mov
adc
add
fdivp
ror
loope
jmp
stc
icebp
sbb
in
lods
cmpsb
dec
mov
lods
test
popf
pop
cmp
daa
clc
dec
push
inc
mov
jno
xchg
movsb
dec
negb
lcall
setno
push
jle
shr
popa
aas
cmc
les
add
addr16
jge
imul
fisubs
int
and
lods
aaa
mov
sbb
mov
mov
sahf
fldt
in
xchg
sahf
inc
lods
jp
jg
lret
enter
bnd
xor
es
outsl
in
ja
out
jno
sbb
outsl
inc
mov
js
lock
cli
loopne
jno
mov
rcrl
arpl
mov
mov
xlat
mov
out
inc
aaa
lahf
adc
mov
jne
stc
lock
into
outsl
stos
mov
cwtl
idivl
shrb
stos
jecxz
into
jno
and
mov
or
pop
mov
xor
mov
inc
mov
and
jae
scas
fnsave
adc
push
sarl
sbb
xchg
cmp
jnp
mov
lods
mov
lea
jmp
in
shrl
and
pop
inc
inc
lahf
jo
fwait
push
and
add
or
sarb
stos
ror
sbb
repz
and
adc
jne
leave
test
adc
add
xchg
cs
iret
mov
dec
jg
and
scas
sar
stos
sbb
push
leave
sub
xchg
push
xchg
inc
push
and
mov
aaa
ficoms
fsts
add
pop
out
repz
mov
xlat
dec
add
push
cmp
jo
out
jmp
xor
pop
rcll
jbe
ds
lock
pop
outsb
ret
jl
dec
aad
sub
dec
sbb
sub
fcmove
or
sbb
ss
icebp
cwtl
jecxz
insb
xchg
dec
lret
jne
sti
fwait
xor
jp
jb
dec
dec
sti
xor
mov
cmp
cmpsl
pushf
mov
and
add
xor
jg
cmp
inc
dec
xchg
fsubr
js
ja
popa
mov
out
pop
mov
push
mov
xor
std
mov
mov
pusha
or
lret
je
cli
adc
incl
dec
loop
push
jg
mov
xchg
enter
outsl
inc
icebp
lret
sbb
and
std
out
jnp
cmp
push
inc
insl
and
rcrl
mov
sub
sub
lcall
fbld
or
mul
jo
out
inc
mov
push
sub
rorl
in
sti
adc
pusha
insl
lods
cmovo
mov
adc
dec
pop
call
iret
and
xchg
dec
sti
pop
push
push
mov
repnz
dec
mov
adc
dec
xchg
sub
xor
daa
lea
ja
rcrb
mov
xchg
sub
out
jg
xchg
inc
adc
lods
sub
out
subb
test
outsb
mov
lds
and
xchg
dec
jp
or
in
mul
pop
xchg
inc
jno
adc
push
popf
push
xchg
lods
add
fcompl
test
dec
hlt
ss
xchg
inc
imul
popa
sbb
jle
add
and
add
repz
push
jmp
mov
push
push
fwait
or
daa
call
fidivrl
test
jno
fsubr
in
lret
sbb
mov
int
jle
es
fwait
adc
cmpsl
and
icebp
add
sbb
stc
sar
dec
arpl
aas
add
mov
mov
add
sahf
mov
jne
mov
fistpll
popf
adc
lods
aas
sub
lea
jnp
mov
cwtl
push
inc
movsb
mov
out
imul
mov
jb
js
gs
stos
xchg
inc
inc
movsl
inc
int
push
push
flds
mov
sbb
lods
lahf
jnp
jo
pop
rcrb
xor
call
add
in
lcall
xchg
dec
int
das
popf
cmp
jmp
mov
or
ljmp
fwait
pop
or
js
outsl
adcb
aas
cld
lods
mov
sahf
cmpb
fs
cmp
mov
lahf
pop
aaa
mov
mov
sbb
inc
fisubrs
cmp
sahf
lock
mov
dec
mov
sbb
sub
mov
in
inc
clc
mov
pop
inc
ret
jge
pop
loope
mov
cltd
dec
sbb
sub
xchg
push
xchg
sti
lret
or
pushf
test
data16
mov
and
mov
push
xchg
jle
inc
mov
jo
in
add
xchg
xchg
mov
xor
sbbb
push
push
inc
or
inc
jp
cmp
xor
daa
cli
inc
pop
lret
mov
movsb
xchg
sub
pop
mov
xor
sbb
xor
mov
repnz
jl
ja
adc
push
negl
int
mov
xor
ficoms
xchg
lahf
movb
or
sarl
jge
mov
sbb
test
sahf
ret
xchg
inc
push
cmc
xchg
ss
and
jno
xorl
xor
pop
jae
mov
imul
hlt
sbb
sub
xor
add
cmp
stos
insl
lds
testb
iret
sbb
sbb
je
jae
into
xchg
iret
test
leave
ss
xchg
jb
mov
insl
push
movsb
insb
jno
repz
cmp
out
lret
out
adc
and
mov
sub
pop
or
adc
les
adc
mov
pop
dec
dec
sbb
pop
xor
xchg
push
sub
inc
xchg
int
push
dec
or
test
xchg
xchg
orl
aad
jb
test
fistps
mov
inc
fdivrl
imul
call
sbb
mov
movsl
ds
or
sbb
dec
subl
fmull
addl
sub
out
pushf
addr16
inc
mov
outsl
jns
pop
xor
mov
push
jno
jl
fsub
jae
cmp
dec
mov
sub
inc
pop
add
imul
and
mov
out
aam
push
lds
sub
add
mov
testb
cmpsl
mov
repnz
inc
jae
fwait
into
bound
popf
jle
xchg
push
cmc
jg
jb
or
sti
mov
daa
repz
mov
sti
aas
jns
outsb
lret
ss
sbb
mov
xor
hlt
iret
pop
stos
out
into
mov
and
inc
jb
sbb
dec
mov
into
mov
cmp
xor
lret
mov
cmp
lods
or
dec
xchg
js
outsb
push
dec
push
fidivl
add
and
int3
inc
cmp
pop
aas
dec
jne
pusha
out
inc
jnp
cmpsb
scas
push
outsl
xchg
enter
mov
fists
int
or
fimuls
adc
lret
mov
shll
ds
pop
test
mov
int3
xor
xor
fisubs
add
ja
mov
sbb
or
jne
das
push
jbe
jl
cmc
mov
cmp
jp
enter
or
mov
loopne
ret
enter
push
xor
cltd
adc
mov
mov
mov
or
mov
mov
inc
jbe
adc
enter
xor
adc
orb
adc
xorl
out
xor
pop
and
xchg
dec
xchg
jnp
mov
xchg
mov
jle
dec
out
sbb
mov
mov
jb
jns
cs
je
add
cmp
mov
pop
fstpt
movsl
sub
movsl
jmp
scas
adc
aad
aas
fimuls
daa
repnz
in
lea
popf
fildll
nop
pop
pop
ss
mov
push
mov
aas
data16
adc
dec
dec
mov
xor
and
stos
or
stos
fnsave
mov
add
xor
rcll
outsb
push
aas
push
pop
cmp
rcrb
jmp
jg,pt
ja
das
add
js
test
daa
das
dec
pop
loope
out
jecxz
movsb
jl
subb
sub
or
push
cmp
loopne
int
out
imul
sub
fdivs
movsl
sub
lahf
aaa
imul
dec
mov
mov
mov
mov
andl
loop
adc
fwait
test
and
xor
daa
xchg
iret
xchg
mov
sub
cmpsl
std
lods
xor
xor
mov
lock
lea
lock
loop
inc
sahf
out
jmp
dec
nop
mov
pop
arpl
lahf
call
fwait
mov
scas
icebp
jge
andl
or
cmpsl
mov
add
out
mov
enter
repz
inc
aaa
mov
in
pop
adc
add
cmp
enter
or
inc
cmp
mov
aas
push
jno
cli
xchg
pop
fisubl
jo
lret
adc
mov
aas
jo,pn
sti
cmp
push
imul
xchg
ret
pop
xchg
scas
dec
fisttpll
in
mov
push
mov
cli
or
mov
cwtl
sub
adc
les
leave
xchg
lahf
cmc
imul
xchg
in
push
stos
jnp
loopne
movsb
push
fiadds
sarb
jae
cmp
mov
rorl
mov
push
lods
arpl
sub
sbb
push
fsubr
in
fcomip
dec
and
outsl
in
test
cli
lret
les
or
jmp
or
test
sbb
mov
xor
cli
es
inc
add
cmp
sbb
xor
and
jmp
mov
hlt
inc
es
pop
ret
and
add
inc
cwtl
jecxz
in
mov
xor
clc
je
push
cmp
jae
pusha
jne
in
scas
dec
mov
fwait
pop
jne
inc
fdiv
fadds
in
jmp
pop
cmpsw
daa
and
jb
es
push
cmp
or
sbb
mov
lahf
mov
adcb
xchg
mov
and
sub
frstor
add
dec
push
cmc
jae
add
mov
and
xor
mov
mov
faddl
lahf
in
and
sub
dec
lret
and
lods
mov
popf
push
es
xlat
cmp
and
cwtl
aad
fstpl
popf
test
out
pop
mov
inc
jg
sub
ret
or
ss
aaa
cmpsb
loope
add
or
cwtl
mov
cmpb
jns,pn
je
add
push
es
mov
test
cs
mov
fs
daa
pop
dec
cwtl
jne
push
mov
add
push
mov
pop
sbbl
pop
mov
roll
dec
out
add
mov
js
ja
mov
add
dec
and
mov
sub
imul
imul
xchg
adc
leave
movsb
mov
mov
cmp
xor
test
mov
jne
movsb
jno
fstp
test
jmp
outsl
mov
sub
sbb
add
adc
or
push
add
imul
lret
sbb
int3
insb
inc
push
jp
jb
lods
mov
aam
jne
cmpsl
arpl
and
cmpsl
fs
lea
pop
sbb
je
push
int
and
or
cwtl
js
mov
jnp
pop
jg
int3
ja
test
shrl
and
adc
enter
push
dec
popf
shl
push
push
sti
popa
sti
mov
enter
pop
jae
pop
jno
xchg
mov
iret
out
cmp
fidivrl
sbb
xchg
cli
inc
jle
jmp
lea
test
arpl
sub
leave
and
sbb
mov
cmpsl
adc
sub
sbb
push
negl
adcl
xchg
xchg
mov
pop
mov
sbb
jb
push
fists
and
push
aaa
push
cmp
clc
xchg
test
into
decb
insl
push
cmp
stos
cmpsb
in
outsl
adc
mov
and
repnz
popa
das
add
clc
ret
or
xchg
push
clc
ds
mov
jns
inc
inc
stc
xchg
scas
lods
or
or
test
push
adc
pop
cmp
mov
insl
add
push
das
aad
mov
pop
sahf
repnz
add
mov
dec
jnp
fcoms
xlat
inc
stc
cmc
adc
jge
lcall
int3
add
std
insb
iret
lods
iret
xchg
int
cmp
mov
in
mov
ja
mov
shlb
pop
addr16
subl
pop
lret
mov
iret
aam
outsb
jno
pop
sbb
xchg
jne
inc
add
jnp
mov
cmp
daa
jbe
mov
cltd
sub
pusha
sbbb
mov
mov
xchg
out
push
lods
movsl
lods
mov
jg
cmp
dec
pop
xor
cmp
push
mov
inc
dec
and
xor
jb
stos
adcb
clc
jno
or
movsl
or
sar
not
jne
lock
test
or
lock
xor
into
sbb
stc
data16
out
jns
aad
jmp
add
push
jmp
cmpsl
rclb
or
mov
jo
out
xchg
and
push
and
in
int
xor
dec
adc
movsl
pop
push
and
jb
cmp
mov
jno
mov
jne
aaa
or
xor
fistps
lock
dec
insb
movsl
mov
test
jp
mov
rcr
mov
mov
mov
es
xchg
sbb
xchg
xlat
and
add
test
ret
mov
xchg
push
jno
imul
push
clc
stc
mov
push
pop
add
fcmovu
add
test
stos
xor
sbb
scas
mov
js
fwait
leave
and
xchg
fxch
rcll
fistpl
xchg
add
loopne
push
mov
into
xchg
mov
dec
sti
cmpsl
stos
mov
ds
cli
cmp
scas
das
jns
imul
xor
jns
cmp
in
push
dec
inc
fadd
cli
xchg
cltd
jnp
push
push
or
mov
sbb
popa
out
aaa
andb
mov
in
insb
jo
stc
dec
add
rcrl
fmul
cs
pmulhw
jp
sbb
cmp
cs
push
out
enter
dec
xchg
sub
mov
int
adc
mov
xor
sub
je
scas
cltd
stc
jecxz
mov
push
inc
mov
fstpl
pop
dec
inc
orl
jmp
out
jmp
outsl
int3
mov
jns
dec
pushf
push
or
sbb
pop
sbb
adc
movsl
out
cmp
xor
pushf
push
adc
outsl
adc
mov
test
add
fmul
dec
mov
mov
inc
xchg
and
xchg
std
pop
dec
sbb
jns
les
shll
push
sbb
lds
into
mov
popa
cmpsb
pop
out
cmpsl
jb
lea
popa
int
pop
mov
and
mov
cmp
xor
add
pop
and
sub
adc
in
insb
movsl
mov
xor
mov
and
cmp
pop
add
outsb
mov
es
mov
jns
push
les
rcll
push
scas
inc
fwait
mov
push
outsl
scas
xor
pop
out
int3
repz
rorb
ja
ret
inc
test
into
sbb
and
dec
or
aaa
adc
push
jns
jo
popa
enter
arpl
lods
stos
out
or
xchg
push
push
cmp
icebp
outsb
and
arpl
stos
cmp
shll
adc
xchg
movsb
lds
xchg
mov
aam
daa
data16
pop
testl
and
ret
mov
pop
mov
arpl
jno
fstpl
xor
pop
and
daa
inc
adc
roll
add
xchg
dec
xor
push
aad
inc
daa
cmp
or
dec
xlat
xorb
in
mov
mov
and
cmp
cmpsb
bound
lret
mov
icebp
scas
adcl
mov
shr
lds
pop
scas
jge
fnstenv
divl
pop
adc
popfw
cltd
push
cmpsl
pop
mov
stc
mov
mov
or
filds
inc
cmp
lahf
inc
repnz
push
fisubs
xor
lret
test
sub
js
dec
mov
add
sbb
addr16
cmp
sub
ret
mov
call
jo
sbb
je
dec
inc
or
scas
and
push
orl
popf
out
sahf
cmp
push
cmp
frndint
xchg
or
outsl
out
cltd
js
pusha
push
test
xor
sbb
or
push
stc
adc
test
dec
gs
mov
dec
xor
sub
lcall
incb
mov
lcall
xor
xchg
outsb
mov
pop
and
pop
jne
in
icebp
pop
mov
push
dec
js
jl
cmovnp
sub
push
inc
pop
fistpl
sbb
cmp
cli
jge
pop
scas
outsl
xchg
cmpb
mov
and
jb
lods
sbb
pushf
scas
movsl
je
dec
inc
xor
scas
iret
dec
bound
sub
xchg
imul
sub
loopne
jno
jbe
dec
push
test
ror
fadd
push
pop
mov
jb
xchg
dec
cmc
jb
jmp
add
jg
sub
mov
pushf
divl
sbb
out
cmc
mov
pop
dec
mov
or
inc
jb
mov
push
sub
loope
insb
jge
cmp
add
mov
lods
lods
jecxz
push
jp
jnp
ds
jns
sub
and
lods
push
jne
mov
stos
les
arpl
inc
inc
push
or
mov
or
test
or
xor
test
sarb
jo
xchg
clc
mov
xor
mov
sbb
fsubrl
out
rolb
push
inc
addb
pushf
fisubrl
testl
push
iret
cli
xchg
pop
adc
jne
mov
call
mov
popa
fwait
mov
shlb
in
hlt
loopne
std
fidivrl
out
adc
cltd
fdivrs
mov
or
sub
insb
lret
pop
mov
negl
push
sbb
pop
mov
inc
sub
pop
push
movl
stc
ret
ja
cwtl
push
pop
test
call
ss
push
xor
mov
and
mov
push
rorb
sbb
dec
loop
cmc
jae
push
xor
push
xor
mov
add
aam
mov
mov
xchg
mulb
in
inc
xor
and
push
inc
mov
cwtl
je
fwait
jb
jp
pop
xchg
add
cmp
cmpsb
xlat
dec
pop
push
cmp
sbb
mov
jl
insl
dec
dec
and
mov
dec
pop
inc
xor
ret
in
mov
imul
push
or
decl
scas
inc
push
jecxz
or
cmp
call
shrb
mov
cltd
dec
mov
fisubs
and
in
outsb
loope
inc
jp
icebp
adc
sub
sbb
jp
mov
cwtl
and
repnz
push
gs
pop
stos
int3
jns
into
mov
dec
pop
xchg
enter
adc
scas
sahf
jecxz
mov
lahf
fcompl
push
or
daa
cmpsb
cmp
jae
jecxz
xchg
lcall
cmp
lods
daa
and
loope
mov
int
stos
or
xchg
inc
in
mov
call
or
ret
nop
andb
dec
rcrl
pop
cmp
sbb
dec
rcll
xor
data16
aad
push
aaa
inc
sub
push
jae
cmp
add
loopne
xor
sub
xor
add
lret
dec
mov
test
test
mov
push
lret
dec
nop
mov
jp
loopne
sbb
orl
aas
or
cmp
scas
ja
std
dec
mov
rcrb
test
dec
or
pop
jl
aad
cmpsl
jns
push
aas
mov
jg
xchg
mov
fldenv
or
dec
dec
push
ud1
cmc
adc
jbe
mov
push
xor
ljmp
mov
outsb
fists
add
aad
mov
popf
push
mov
cmpsl
shlb
mov
hlt
add
mov
dec
mov
cmp
push
add
cmc
jne
and
xlat
stos
cmp
cmp
loop
iret
out
lret
outsl
outsb
ret
pop
inc
shr
push
je
jmp
xor
gs
ds
popa
jmp
dec
cmpsb
rorb
iret
and
or
out
faddl
sbb
xor
arpl
jbe
mov
xor
push
jmp
jo
ja
push
fmulp
or
ss
inc
sti
mov
mov
mov
mov
and
in
shlb
sub
hlt
mov
adc
adc
into
outsl
shl
jb
stos
out
or
and
lret
sbb
sarb
sub
sub
or
sbb
sub
jl
add
sub
hlt
cmp
push
mov
push
push
dec
test
rcr
icebp
je
sti
movsl
test
xchg
scas
pop
mov
negl
sahf
sbb
int3
mov
add
adc
adc
test
sub
jne
dec
ror
aas
jmp
imul
stc
add
mov
sbb
jno
or
push
movsb
mov
cmpsb
jp
jnp
popa
xchg
jo
inc
inc
xor
mov
fistps
push
lds
shlb
lods
xlat
mov
pop
jg
cld
out
ret
cli
mov
stos
fwait
and
jg
cld
int
sbbb
xlat
adc
dec
movsl
std
mov
xor
cmc
decl
dec
addl
mov
xor
jnp
mov
lret
and
mov
xchg
dec
aad
cld
test
sbb
cmp
cmp
icebp
js
icebp
mov
mov
dec
cmc
leave
xchg
xor
jno
leave
push
jmp
and
cld
pop
scas
inc
push
dec
dec
and
out
daa
sub
icebp
incb
in
rol
das
pop
jns
jno
and
mov
cmp
mov
in
ret
fsubp
pop
cmp
inc
sbb
insb
div
lret
add
fcmove
std
or
inc
dec
or
addl
fs
mov
mov
test
xor
popf
int
mov
fmul
sti
push
enter
mov
ficomps
insl
jmp
sub
and
outsl
ficoml
adc
add
test
lret
imul
sti
std
dec
std
xor
xor
mov
and
sub
cmp
mov
pop
mov
jmp
mov
inc
scas
inc
mov
mov
push
insb
les
scas
sarb
pop
xor
pop
roll
insb
adc
pop
mov
gs
lret
xchg
arpl
jmp
or
pop
dec
lea
iret
sbb
and
es
dec
into
push
aaa
xchg
and
fmulp
ror
subb
iret
cmp
test
jns
je
inc
popf
lahf
mov
loope
sbb
jge
stc
jns
mov
jg
gs
lret
idivb
test
mov
push
or
loop
pop
sarb
lret
push
jne
loopne
dec
das
jmp
fisttpl
jbe
orb
nop
or
loopne
push
push
ds
xchg
icebp
testb
jae
xchg
add
popa
dec
inc
cmp
dec
rolb
mov
aad
out
pop
je
into
cmp
mov
mov
stos
je
lret
mov
push
dec
rorb
mov
cwtl
push
adcl
sbb
pop
test
sbb
mov
lcall
mov
pusha
loopne
or
mov
pushf
movsl
dec
fidivrl
xor
rolb
shll
mov
mov
sub
sbb
cwtl
xchg
dec
mov
sub
into
fwait
movsl
mov
and
cmp
xchg
movsb
xor
add
test
push
lods
mulb
mov
inc
call
into
cmp
loopne
xor
xchg
test
pop
stos
subb
mov
push
out
arpl
sti
insb
outsl
in
xchg
out
mov
mov
push
and
push
push
dec
sub
jge
imul
pop
test
idivb
xchg
ljmp
enter
enter
pusha
icebp
mov
test
sbb
mov
sbb
jmp
sarb
sbb
add
dec
fists
mov
fwait
xchg
xlat
mov
test
jb
jb
shll
jecxz
lret
xchg
loope
stos
cmp
dec
add
or
pop
inc
jge
in
adc
sub
xchg
movb
and
xor
cmp
cmp
fnstsw
mov
cmp
ljmp
iret
and
mov
aas
sbb
shrb
mov
stos
push
fmull
and
mov
inc
sbb
cmp
adc
loop
repz
stos
mov
and
jecxz
xor
rclb
pop
test
jg
xor
inc
jecxz
aaa
jo
imul
sbb
mov
imul
test
movsl
sbb
inc
rcl
pop
stc
inc
add
sbb
sub
outsl
push
sbb
sub
and
jecxz
pop
mov
or
mov
push
scas
adc
jno
push
insb
adc
cs
cmp
les
fcomi
mov
pop
push
xchg
push
cwtl
movsl
mov
pop
mov
cmc
dec
inc
jbe
sub
or
sbb
dec
rclb
xor
mov
add
push
test
lcall
inc
adc
cmpl
jge
adcl
dec
das
cmp
pop
std
stos
insl
mov
aam
sub
test
enter
mov
or
jge
xchg
sub
movsl
int
xchg
scas
xor
xchg
lea
push
mov
rorb
in
aaa
hlt
imul
xchg
jb
pop
cmpsl
mov
push
shlb
fbstp
into
mov
pop
cwtl
dec
iret
inc
mov
pop
sbb
adc
xor
jnp
sbb
aad
sbb
inc
test
pop
push
ret
pop
xor
imul
shlb
lods
repz
mov
mov
jecxz
into
mov
dec
inc
push
cmp
daa
or
in
mov
mov
lret
jge
int3
stos
and
in
or
scas
loopne
pop
or
lock
inc
xor
or
sub
lret
hlt
mov
popf
adc
sbb
mov
mov
jmp
mov
lea
shll
hlt
lret
xchg
push
popa
jbe
xchg
inc
fistps
inc
sub
cmp
js
inc
inc
sti
decl
or
cmp
sahf
cmp
lock
and
or
inc
xchg
test
pushf
dec
inc
mov
sub
aad
aaa
fdivs
cmpsl
sub
sarl
rol
cltd
scas
inc
jb
jle
incl
enter
and
repz
mov
test
ret
push
sub
loope
je
ret
xchg
pop
popf
mov
push
cmp
pop
stos
xor
mov
enter
and
mov
push
mov
xchg
sbb
int
outsl
sahf
inc
push
cwtl
mov
mov
sub
and
inc
jbe
jnp
movsb
ss
cmp
or
xchg
stos
test
fisttpll
lock
fs
push
ss
popl
add
nop
xchg
subl
xor
mov
imul
mov
push
sarb
pop
mov
push
jns
jp
fisttpll
lock
movsb
cmp
and
imull
dec
xchg
mov
pop
call
xchg
cs
or
mov
insb
ss
pop
inc
js
jae
mov
mov
pop
jmp
negl
ds
int3
dec
lock
sub
mov
xor
mov
imul
inc
stc
cmp
or
xchg
repz
inc
and
lea
push
inc
inc
or
stos
push
push
xor
mov
orb
mov
push
lret
jge
add
push
inc
das
ret
or
aaa
push
jne
push
sahf
icebp
sub
xlat
cmp
in
notl
sbb
xor
or
jg
fwait
add
cwtl
popf
fidivl
sbb
js
push
out
popf
push
dec
std
dec
xor
xchg
mov
aas
xor
mov
push
mov
mov
aaa
out
sbb
daa
adc
inc
xlat
mov
notb
sbb
jecxz
xlat
in
ror
mov
jmp
add
std
lods
ds
adc
push
push
clc
rcll
out
pop
loope
xchg
push
int3
inc
mov
jmp
or
push
mov
je
ret
pop
add
push
push
rolb
push
fs
inc
mov
xor
in
mov
scas
mov
jnp
aad
cwtl
mov
and
outsb
pop
push
push
jg
imul
push
adc
push
int3
aas
movsb
icebp
or
or
ret
cmp
int3
pop
push
fnstcw
push
enter
push
xor
stos
pop
fisubrl
jb
mov
jmp
enter
orl
das
push
inc
in
dec
jle
int3
movl
lock
push
lret
fists
pop
movsb
mov
repnz
into
pusha
xchg
xor
mov
insl
cmp
stos
nop
push
ret
ja
data16
in
xchg
mov
add
fs
ds
xor
cmpsl
mov
mov
jae
xlat
mov
insb
mov
xor
push
jo
push
adc
fldl2e
cmp
cmc
mov
lret
jecxz
loope
in
fwait
jo
test
divl
fcoml
out
fcomps
lods
sbb
ja
inc
add
or
or
movsl
pop
in
fsubrl
ret
hlt
leave
js
cmp
jl
pop
sbb
mov
aaa
pushf
stos
stos
out
or
mov
dec
rolb
scas
xor
scas
js
xor
mov
ret
pop
icebp
mov
jb
sbb
sub
sbb
xor
push
mov
sbbb
cmpsb
mov
push
push
call
cmpl
leave
and
test
mov
or
sub
loopne
jnp
leave
pop
incb
mov
iret
hlt
fbstp
lea
mov
xor
popf
dec
sbb
sbb
or
jecxz
sub
mov
add
scas
test
xor
lcall
rolb
jns
cmp
jg
push
cli
jbe
ja
inc
lahf
bnd
les
pop
mov
fwait
test
jmp
fstpt
scas
scas
cmp
jl
mov
addr16
movsl
jns
add
mov
add
sbb
dec
mov
hlt
or
jl
mov
out
or
or
mov
sbb
lret
xor
and
insb
mov
jns
jne
and
mov
insb
ja
rcl
inc
sbbl
cmp
cmpsl
iret
push
in
ficompl
sub
sub
jbe
test
xor
aam
pop
xchg
imul
push
xor
lahf
sbb
jp
mov
inc
test
push
lock
lret
dec
or
mov
jo
inc
xchg
mov
stos
iret
es
sbb
sub
xorl
add
lds
loope
sub
imul
cmpsb
inc
mov
pop
add
loop
mov
jge
repz
leave
repz
pop
lahf
cmp
xchg
jb
in
cmpsb
jns
test
inc
scas
leave
jle
repnz
into
scas
mov
loopne
mov
dec
repnz
or
pop
cli
imul
cltd
jno
shll
loop
jmp
mov
mov
cmp
jbe
pop
sub
scas
push
mov
mov
mov
movsb
cmp
jp
ljmp
arpl
xlat
test
mov
lahf
jmp
push
and
ret
sub
dec
and
test
push
jns
je
inc
pop
jo
fisubrs
test
or
xor
mov
adc
iret
mov
and
and
dec
lret
push
cmpsb
dec
mov
jge
stc
aam
pushf
imul
sbb
or
sbb
pop
ljmp
cmp
iret
les
dec
xor
lahf
in
jg
push
and
outsb
out
or
ljmp
out
orb
gs
add
loopne
and
sub
pop
add
jmp
and
push
pop
inc
pop
fmul
repz
mov
orl
into
pop
or
mov
lds
lods
insb
mov
cmp
addr16
add
int
pop
push
int3
dec
pusha
insl
push
imul
outsl
xchg
and
je
out
mov
xchg
std
fsubs
ja
inc
fstps
into
mov
sti
mov
sahf
into
sbb
ret
cmp
lds
dec
daa
mov
or
push
adcl
push
xchg
add
jle
lea
mov
sub
fisubs
je
jg
ja
in
dec
mov
test
inc
sub
push
adc
sbb
xor
or
jae
fmuls
movsl
cmp
cmp
jo
inc
or
xchg
rcrl
rcrl
stos
pusha
int
addr16
push
mov
call
xchg
jl
add
sub
or
pop
xchg
or
loopne
xlat
pusha
mov
data16
pop
xor
push
es
test
int3
aam
push
and
xchg
mov
clc
push
jg
xor
adc
pusha
sbb
add
cmpsl
ljmp
push
pop
out
stos
mov
pop
mov
test
rcll
mov
lret
loope
pop
out
dec
repnz
and
and
adc
xchg
adc
adc
jns
mov
xchg
test
sbb
mov
pop
dec
inc
out
popf
sub
jbe
in
sub
mov
pushl
add
and
pop
clts
add
inc
rol
cmpsl
mov
fwait
jge
aad
cmp
into
sti
in
aas
and
pop
xchg
imul
sti
mov
lock
insl
add
ret
xchg
jl
insb
das
adc
sub
addb
ss
shl
mov
push
cli
sbb
add
cli
inc
stos
inc
js
add
cmp
rolb
push
in
pusha
sbb
stos
xchg
or
les
xchg
fists
test
test
adc
insb
jmp
push
lahf
insl
sbb
test
mov
lods
xor
test
aaa
mov
sub
mov
loopne
xchg
scas
cmp
je,pn
fimuls
pop
xor
mov
jge
je
lock
mov
mov
lret
call
xor
nop
notl
sahf
push
nop
and
push
xchg
shlb
sbb
cmp
js
mov
rcrb
or
addr16
daa
fnsave
sbb
cmc
xor
mov
pop
int3
ljmp
loopne
std
mov
push
mov
mov
fsubl
jmp
xor
pop
jl
jno
jmp
insl
cmp
es
fs
adc
sbb
add
push
cltd
sbb
mov
mov
jge
or
aaa
pop
xor
adc
xadd
mov
fstl
cltd
sub
xor
bound
mov
in
mov
sbb
pusha
daa
stc
xchg
xorl
mov
inc
push
js
push
scas
call
and
dec
bound
enter
cs
add
lods
mov
sub
and
pop
scas
psubsb
sti
out
outsl
mov
ljmp
lret
pop
jnp
xchg
dec
insl
mov
jb
or
repnz
mov
mov
xor
repz
or
std
cs
dec
imul
rcrl
jno
into
or
xor
inc
cltd
stc
test
jns
jbe
adc
adc
inc
fs
push
or
inc
maskmovq
notl
lret
xchg
in
mov
xchg
jno
and
idivb
std
xor
dec
add
jne
and
test
arpl
and
cltd
js
icebp
sub
fucomp
fsubrp
sarl
xchg
ljmp
jnp
jg
add
lods
sti
jno
out
call
jno
les
cmp
jno
fs
jle
out
adc
xor
subl
or
pop
out
aas
pushf
xor
inc
push
arpl
lods
pop
xor
sub
adc
in
sbb
ljmp
sbb
sbbl
mov
mov
stos
mov
cmp
push
sahf
xchg
xchg
dec
repnz
imul
xchg
movsb
test
cmp
dec
mov
jp
pusha
pop
adc
sahf
js
movsb
and
sub
dec
push
cmp
outsb
xor
lea
stos
mov
adc
fwait
xchg
popa
aaa
sbb
mov
jno
out
or
out
sti
push
imulb
push
gs
mov
dec
fcmovb
jge
xchg
mov
cmp
adc
pop
cmp
xor
cmp
sbb
push
dec
sbb
cmc
jmp
dec
les
add
sbb
mov
shll
xlat
cmpsb
sub
add
push
pop
jmp
leave
dec
popa
int
in
sub
sbb
rcrl
jge
sub
jl
mov
and
sbb
jle
push
sbb
scas
cli
cmp
push
fbstp
sbbb
clc
jb
pop
popa
sbb
xor
mov
test
icebp
ljmp
decb
mov
lret
mov
mov
scas
fldt
jnp
mov
lret
push
xchg
mov
dec
mov
imul
sbb
sub
in
cltd
int
dec
and
cmpsl
add
rcr
cli
mov
or
ret
jo
dec
pop
push
add
nop
pop
jl
call
dec
outsb
iret
xchg
push
hlt
cmpsl
std
es
pop
push
mov
std
in
cs
jae
mov
jge
aad
jg
sahf
out
out
outsb
lods
or
rcrb
outsb
jecxz
sub
inc
fldt
push
push
cmpb
imul
out
xor
cltd
mov
pop
jge
jg
pop
aas
xchg
mov
or
data16
cltd
cmp
test
mov
mov
repnz
fsubs
sbb
mov
mov
push
adc
jbe
xchg
rcrb
add
ljmp
pop
das
cmp
mov
repnz
jno
push
cld
arpl
imulb
or
bound
andl
mov
fwait
and
adc
xor
or
sbb
adc
cmp
and
sub
cmp
mov
dec
push
scas
xor
sbb
dec
leave
or
or
daa
ret
rorb
imul
sbbl
sub
out
jge
sub
xor
sub
xor
scas
fcmovb
std
jbe
addr16
addl
push
sub
ljmp
xchg
sti
cmp
inc
outsb
ss
in
jecxz
push
mov
jbe
push
sbb
mov
filds
xchg
out
jle
xchg
pushf
and
xor
lock
sti
mov
xchg
mov
sbb
insl
xchg
cs
shll
lods
jne
in
jno
push
and
push
push
pop
andl
repnz
dec
lods
mov
mov
les
jecxz
loop
dec
pop
dec
cmp
push
xor
ja
ja
repnz
mov
cmpsb
mov
xchg
jne
sub
or
push
mov
imulb
pop
adc
adc
xlat
push
jl
fistpl
and
xchg
cmc
les
cmp
or
lods
int
int3
scas
pop
pop
cmp
dec
repnz
mov
dec
ds
rclb
and
push
roll
inc
std
ja
filds
mov
leave
and
cmc
xor
mov
push
test
lods
icebp
mov
mov
movsb
ret
nop
mov
test
inc
sbb
inc
jg
ret
lret
xchg
clc
icebp
inc
sbb
mov
xchg
int
mov
ret
aaa
ret
loopne
leave
sub
shrl
or
dec
or
pop
add
add
insb
adc
xor
push
insb
push
out
rorb
iret
sbb
sbb
fwait
cmp
mov
in
mov
out
pushf
inc
cld
xchg
inc
pusha
and
mov
int3
lea
mov
loope
xchg
xchg
pusha
or
dec
jge
aam
and
push
jbe
xor
xor
pop
inc
int
jnp
mov
mov
cmp
in
std
in
outsb
js
or
push
adc
jge
xor
imul
sub
stc
rcll
and
je
sbb
sarb
stos
punpckhwd
mov
cmp
xor
popf
cmp
and
in
xor
mov
xor
jge
inc
jne
arpl
sbb
dec
lret
cmp
sub
cli
rorl
out
mov
jnp
mov
in
loope
push
jge
push
sub
out
mov
cld
gs
insb
rcrb
adc
adc
das
rclb
mov
mov
fcos
xchg
inc
cmp
mov
repz
pushf
or
in
fcmovnu
mov
fmull
sub
imul
mov
sub
loop
insl
mov
mov
cmpsb
push
cmp
inc
jg
xor
adc
inc
mov
movsb
pop
cmp
das
inc
or
inc
faddp
mov
pop
jle
mov
mov
jnp
jge,pn
push
das
cmp
rorl
sti
and
mov
xchg
popa
btc
sub
arpl
sub
aad
xor
or
aaa
add
mov
push
mov
mov
scas
pushf
fdiv
xor
roll
aas
jmp
scas
push
push
iret
scas
push
xlat
jp
aaa
lods
cmpsl
mov
cld
xchg
in
movsb
dec
xchg
pop
movsb
repnz
inc
jecxz
sarb
or
mov
inc
movsl
jge
in
imull
fs
push
test
add
negl
add
movsb
xchg
or
fidivrl
orl
ds
sub
mov
subl
or
dec
mov
rorb
fistps
xchg
out
adc
mov
mov
test
lret
xor
je
dec
xor
pusha
pop
sahf
sbb
pusha
add
pop
fwait
xchg
xchg
inc
jno
icebp
iret
pop
stos
lods
mov
pop
cli
lret
jp
lods
es
jmp
cmpsb
sbb
mov
sub
adc
inc
pop
push
fldt
rcll
jp
cmp
mov
push
jmp
fstl
dec
or
mov
cltd
cmp
mov
lods
lea
jp
shrb
add
stos
stc
cmp
shrl
cmp
pop
sahf
sub
xchg
jne
jns
daa
sub
mov
sarb
lcall
sbb
jno
push
mov
cmp
or
and
test
sti
mov
scas
pop
outsb
inc
cmp
std
mov
pop
add
mov
aaa
lret
xor
jnp
mov
movsl
in
rol
push
jmp
pusha
xorl
sub
push
in
dec
pop
ja
dec
int3
inc
sarb
push
and
pop
push
sbb
pop
outsb
lock
inc
sub
push
addr16
sbb
lock
pop
push
scas
cwtl
sub
aaa
or
lods
pop
cmpsb
mov
cmp
mov
mov
movsl
add
int
inc
rorl
cmc
add
sub
cwtl
and
in
cmp
xchg
shlb
adc
loopne
pop
xor
gs
lret
cmp
orb
adc
stc
mov
faddl
pop
iret
xor
sub
xor
cmpl
jno
jbe
test
adc
aam
out
cmp
xor
xlat
xlat
adc
out
stos
xchg
cmp
mov
push
jecxz
xorl
dec
pusha
xor
fsubs
out
sbbb
decb
hlt
xchg
adcb
cmp
add
xchg
fs
or
mov
icebp
lock
fisubs
sub
add
jno
or
jmp
pusha
xor
xchg
loopne
add
jecxz
subl
fwait
sbb
dec
insb
lahf
fidivrs
ret
jle
fldl
xlat
inc
add
add
icebp
insb
lret
imul
sub
mov
pop
xchg
jle
jae
imul
push
sarb
sbb
xor
xor
int
jmp
fisttps
lcall
mov
int
rorl
inc
insl
stos
iret
pop
lret
into
fisttpl
mov
and
mov
and
in
stos
push
xchg
call
aam
mov
xor
lret
fadd
enter
xchg
push
out
sub
out
xor
imul
aad
adc
mov
test
lods
test
imul
and
mov
xchg
dec
testl
cmc
add
pop
mov
test
dec
loop
adc
mov
mov
shlb
cmpsl
cmp
stos
ret
out
inc
mov
inc
jge
or
cmp
dec
mov
inc
jbe
jmp
std
je
mov
fcomp
or
hlt
or
lock
fcoms
les
loop
insl
xor
pop
or
mov
aas
movsl
and
sbb
mov
movsb
push
pop
hlt
fisttpl
xlat
cmc
push
rcrl
inc
mov
xchg
fsubl
mov
xor
adc
pusha
adcb
mov
or
scas
andl
xchg
in
mov
add
mov
push
icebp
in
jg
jl
fs
cmpsb
jae
daa
mov
sbb
xor
rolb
iret
insb
movsb
aam
cmp
mov
test
and
add
mov
mov
pop
dec
mov
fistpl
pop
or
scas
cmp
mov
lahf
in
in
lcall
dec
in
test
inc
sub
xor
ret
mov
mov
mov
inc
push
add
stc
dec
mov
adcl
mov
pmulhw
jb
inc
xchg
or
fwait
jecxz
dec
push
dec
mov
iret
add
push
mov
mov
aad
xor
dec
sub
pop
mov
iretw
mov
sub
fdiv
sbb
ds
fisubl
in
ret
and
push
repnz
addr16
cli
and
sub
or
sbb
pop
sub
mov
sti
pop
pop
fsubs
dec
mov
fidivrs
in
fwait
cmp
rcr
daa
test
and
pop
sbb
mov
lret
mov
dec
fcomip
cmpsl
xor
filds
inc
cs
xor
inc
pop
pushw
pop
mov
mov
mov
aam
add
cmp
stc
cmp
cltd
inc
xchg
fwait
jnp
pushw
jae
push
lock
test
aaa
aad
xchg
notb
rcr
ljmp
call
int
inc
jnp
call
test
xchg
cmp
cmp
adc
inc
pop
pop
or
jg
addr16
add
pop
jns
notl
xchg
bound
xor
sbb
mov
dec
jb
and
pop
sbb
jmp
lret
shll
pop
aam
arpl
mov
incb
xlat
xor
mov
dec
inc
scas
cmpsb
mov
sub
cmp
addb
cmp
mov
xor
shlb
adc
pop
ret
or
popf
xchg
pop
rclb
aaa
inc
call
push
fdivs
loope
dec
movsl
pop
repz
add
jnp
mov
xor
push
and
loope
movsb
scas
stos
cmp
xchg
daa
mov
iret
xor
paddb
jo
out
pop
pop
popf
fsubl
cmp
add
pop
mov
bound
scas
cmp
xor
adc
outsb
adc
push
jge
imul
add
addr16
sahf
loope
dec
pop
cmp
fadds
sub
cmp
dec
das
test
daa
adc
sti
insb
fadds
mov
xchg
fisttpl
lea
xchg
outsb
mov
cli
lods
or
and
sub
jl
sub
lahf
sbb
sbb
sbb
mov
dec
loopne
lahf
mov
aam
mov
sahf
add
cmpsb
shlb
stc
jns
movsb
xchg
jmp
lret
cs
enter
stc
mov
sbb
lock
and
subb
mov
mov
ljmp
jmp
pop
inc
fwait
leave
iret
cwtl
repz
les
popa
test
outsb
push
fwait
jo
pop
fldt
fidivl
jns
hlt
and
enter
or
shll
mov
ljmp
dec
lcall
adc
scas
xor
leave
cvttps2pi
pop
push
adc
scas
jo
mov
es
dec
lret
push
lea
das
incl
out
xchg
add
dec
inc
sbb
cwtl
imul
pusha
mov
mov
lret
lcall
and
adc
iret
bound
jae
hlt
and
jge
mov
push
adc
test
or
pop
dec
lods
sti
cmp
cltd
push
dec
testl
inc
negb
or
gs
adc
in
inc
adc
adc
rcll
test
sbb
daa
jl
ljmp
add
push
stos
push
adc
ret
imul
mov
dec
mov
cmp
lods
cmpsl
cmp
aas
jae
ljmp
enter
stos
popf
mov
jecxz
lret
mov
mov
outsl
in
test
bound
clc
or
dec
and
push
mov
dec
loop
lea
stos
mov
or
lods
sbb
out
sbb
fwait
sar
ja
fidivrl
pop
add
int3
jno
dec
pop
popa
dec
adc
pop
push
ljmp
leave
or
mov
xor
and
bound
dec
int
leave
sub
scas
lods
ret
sub
push
aam
in
or
aad
dec
test
fcomp
jmp
sub
rorb
cli
sub
adc
andb
cmp
fbstp
pop
lock
daa
jne
and
jg
gs
sbb
outsb
sbb
aaa
bnd
cmp
sbb
lods
das
insb
adc
test
inc
sbb
mov
lret
jecxz
fisttpl
jb
sbb
mov
cmp
cwtl
push
mov
mov
sbb
in
xchg
xlat
xchg
pushf
jge
xor
cli
js
adc
xchg
movsb
inc
cmove
lods
mov
or
add
fucomi
xchg
cs
mov
pushf
loopne
sbb
insb
adc
shrb
or
xor
inc
stos
xchg
pop
mov
xor
icebp
cmpsb
inc
dec
mov
addr16
out
out
loopne
push
pop
cld
not
sub
inc
sub
ret
out
stc
adc
push
fistpll
loopew
mov
ror
mov
call
js
pop
insb
lods
out
ds
cmc
pusha
scas
mov
outsl
jmp
je
js
cmpb
adc
push
jl
jge
leave
jb
push
shrb
lret
pop
lcall
xchg
imul
add
push
adc
inc
push
sbb
mov
fadd
xchg
dec
pop
dec
dec
ljmp
xor
dec
mov
aas
cmc
repz
popa
adc
xchg
mov
ret
sahf
pop
icebp
sbb
lret
rcrb
iret
rorb
lea
adc
stc
imul
sar
cltd
roll
mov
xor
dec
xchg
xchg
xor
js
pop
mov
scas
addr16
jp
push
test
adc
add
pop
jp
enter
jno
jno
push
xchg
mov
loop
pmuludq
mov
bound
xchg
mov
das
pop
inc
das
xor
xor
in
call
data16
mov
aas
sarb
xchg
cmp
fbstp
xor
pop
xor
adc
notb
cmp
scas
mov
mov
loop
aam
gs
loopne
andps
xor
int3
xor
addr16
arpl
test
hlt
repz
inc
pop
cmp
js
cmpsl
ficoml
jnp
into
mov
jg
pop
xchg
inc
out
dec
cmp
jp
dec
pop
nop
mov
nop
dec
movsl
add
insl
nop
mov
rcrb
int
mov
in
aam
ficoms
push
pop
jae
sti
repz
cmp
das
inc
adc
lea
loopne
pop
fs
call
rolb
orb
sbb
nop
je
sbb
lcall
mov
xchg
push
das
out
cmp
xor
jg
sbb
pop
sti
in
pop
lret
xor
mov
cwtl
outsl
sbb
xor
jmp
testl
mov
outsl
pop
out
lds
mov
sbb
repnz
or
xor
dec
cmp
xor
out
faddl
icebp
push
dec
aad
rclb
mov
shll
rcll
in
push
cld
cwtl
inc
cmp
push
push
shlb
nop
adc
inc
sti
add
mov
daa
mov
mov
sub
dec
cs
push
shl
mov
divb
adc
cmp
lahf
add
call
push
mov
scas
or
cltd
aam
jle
bound
or
sbb
les
fdivrl
das
and
or
pop
pop
into
lock
sub
cltd
xor
in
xchg
xor
jl
mov
jbe
clc
fcmovne
out
mov
lahf
or
inc
sbb
mov
int
test
cli
xor
les
cmp
jbe
or
jae
insb
mov
xorb
add
lea
jns
inc
cmp
dec
jbe
inc
jb
clc
xchg
mov
cli
cmpl
sbb
jno
mov
cmp
xchg
cli
jmp
das
and
dec
icebp
les
loop
arpl
xchg
mov
dec
aad
mov
popa
add
sbbl
mov
and
or
cmove
push
pop
fstpl
stos
aaa
lea
lahf
aaa
mov
add
lahf
and
sub
xorb
outsb
mov
dec
orb
movsl
out
dec
lahf
in
push
pushf
push
jns
mov
stos
mov
lret
stos
daa
jg
xchg
pop
rorl
xchg
out
xchg
fcompl
sti
cmp
loop
lods
ss
shlb
push
adc
pushf
inc
xor
aas
rcll
mov
cli
mov
movsb
les
lcall
pop
sti
pusha
repnz
mov
outsb
pushf
mov
jbe
mov
jp
bound
divl
in
std
rcll
je
mov
sti
in
xorl
fld
insb
lret
fistpl
das
push
or
jnp
push
jbe
xchg
stos
push
movl
scas
lcall
int3
mov
sub
pop
imul
orl
adc
insl
rorl
fmull
xor
cs
inc
push
dec
shlb
xor
or
jl
loope
dec
sti
jge
and
or
dec
popa
adc
push
mov
cmpl
mov
sbb
sub
out
mov
andl
jle
jae
push
or
ja
adc
pop
add
push
pop
gs
cs
je
dec
gs
shl
mov
test
cmp
test
sbb
jecxz
aaa
pop
bound
xchg
pusha
cmpl
movl
mov
mov
dec
add
push
cmp
xlat
cltd
int3
or
movsb
out
jne
sub
dec
aad
leave
jae
lea
dec
stc
call
imul
les
sbb
pop
das
dec
or
movsb
add
cld
sub
dec
in
cmp
sub
shll
lock
push
xor
or
orps
enter
and
fisttps
lock
dec
inc
lret
imul
scas
push
push
mov
mov
pop
ror
jle
xor
rcl
add
inc
ja
enter
leave
test
lret
jge
andb
dec
icebp
int3
cmp
adc
hlt
or
or
rcll
push
push
jo
fsts
fdivrs
rcrl
addr16
sbb
sti
fwait
sub
aas
test
std
jbe
popa
sub
pop
insl
inc
pop
mov
inc
imulb
rorb
pop
or
and
fwait
sahf
fiadds
push
outsl
fmul
andb
mov
pushf
test
outsb
ss
aam
pop
inc
fmuls
mul
ret
cltd
out
adc
fsts
int
xor
aas
daa
cmp
sub
in
lcall
inc
jecxz
jecxz
jnp
bound
aaa
add
test
or
cmp
rcrb
mov
pop
mov
xor
dec
dec
leave
in
addb
stc
xchg
or
xchg
movsb
imul
daa
iret
sbb
xor
xchg
ljmp
fisubrl
cmp
movsb
arpl
add
push
xor
adc
les
pusha
clc
pop
test
pop
lock
movsl
pop
pushf
test
test
add
push
pop
add
loope
pop
pop
mov
dec
in
iret
pop
pop
fnstsw
loop
cmc
test
inc
sarb
pushf
pop
pop
dec
cwtl
js
xchg
add
pop
add
mov
addr16
add
subl
xlat
xchg
les
cmp
test
test
js
mov
popf
jle
cmp
iret
jg
stos
jmp
xchg
mov
cld
mov
hlt
cmp
and
cmp
add
aas
mov
ljmp
push
les
xchg
push
inc
jns
pop
loopne
mov
stos
mov
roll
mov
mov
add
jmp
iret
xchg
popf
add
mov
xor
push
out
mov
rcrl
fmul
rorl
in
push
mov
inc
imul
aas
lcall
dec
repnz
mov
mov
aam
adc
lea
mov
arpl
push
sbb
pop
xor
sub
sub
aas
movsb
cltd
les
xchg
pop
sbb
or
xor
dec
lret
aad
insl
fistl
cmpnleps
popa
pop
popf
clts
dec
mov
aam
adc
ficoms
or
xchg
xchg
lret
add
dec
or
aaa
inc
xchg
pop
mov
push
sbb
mov
mov
push
je
stos
jecxz
aam
or
lahf
pop
popf
and
test
jp
mov
jo
out
pop
and
and
xchg
xchg
xorl
mov
test
js
insl
mov
sbb
bound
xchg
mov
xlat
xchg
or
cmp
js
dec
dec
sub
xchg
or
push
dec
xchg
adc
push
xorl
or
mov
leave
jns
fstps
in
xchg
add
jne
dec
xchg
shl
push
push
xchg
sahf
inc
inc
scas
push
adc
js
cmp
mov
int
imul
inc
js
movsb
inc
adc
imul
jmp
dec
aas
icebp
outsl
in
or
jp
add
lock
loop
pop
outsb
and
out
pop
mov
popf
jno
push
push
adc
jns
inc
and
dec
rclb
cltd
ret
imul
jecxz
push
pop
jb
push
daa
push
xchg
inc
mov
scas
xor
lcall
rolb
aaa
mov
clc
popa
int3
mov
jl
and
inc
add
mov
out
scas
mov
out
push
icebp
ret
inc
movsl
repnz
sbb
jge
movb
xchg
rcrb
push
in
repnz
push
mov
leave
mov
imulb
push
fyl2x
testb
lret
pop
in
lret
test
jbe
movsl
cmpsl
dec
bound
sbb
jbe
xor
test
push
jno
jle
sub
arpl
or
push
pusha
int3
inc
dec
out
fcom
lods
mov
sbb
sti
mov
push
loopne
fsubrs
xor
ljmp
dec
push
inc
ds
add
data16
inc
sti
xchg
test
jmp
repnz
mov
push
xchg
pop
push
stc
pop
stos
sbb
pop
inc
dec
mov
mov
outsb
test
test
loope
fimull
sub
adc
jle
inc
cld
sbb
sub
jp
inc
adc
mov
mov
push
jb
or
add
imul
lcall
adc
lahf
inc
pushf
cmpsl
ret
int
lcall
dec
mov
mov
scas
mov
aaa
push
add
and
cmpsl
lahf
mov
push
shrl
xchg
mov
cmpl
inc
jp
call
xchg
pusha
jb
inc
out
jp
out
inc
aas
add
push
icebp
jnp
imul
mov
test
ficomps
test
and
es
aas
lcall
pop
pop
movsl
sbb
js
cli
mov
fwait
mov
repnz
fs
aas
or
xor
dec
or
jg
sbb
xorb
push
adc
adc
mov
pop
jmp
fmull
jl
scas
pop
pop
cwtl
movsb
and
push
and
pop
and
popf
mov
sbb
shlb
and
push
mov
int
sub
cmp
pop
fwait
sbb
jnp
iret
xor
fistps
daa
xchg
cmpsl
es
ficomps
inc
dec
jb
ja
aaa
stos
test
dec
leave
inc
mov
dec
int
cmp
mov
lcall
cmp
cmp
dec
sbb
loope
xchg
inc
push
fimull
ror
push
add
out
out
or
mov
loop
outsb
dec
jne
push
xchg
div
shll
sbb
shrl
mov
fs
fldcw
adc
test
lock
mov
in
fsub
pop
test
arpl
xchg
sbb
test
lds
jp
jmp
icebp
mov
loope
imul
xchg
orl
test
xchg
rcll
inc
inc
insl
std
inc
jle
cmp
mov
mov
ja
adc
ja
add
loope
lcall
jbe
ds
cmc
jecxz
stc
ret
cwtl
decb
xchg
inc
push
adc
push
scas
sub
scas
mov
repnz
mov
call
cli
pushl
lods
lock
test
repnz
push
lods
sub
mov
gs
aas
xchg
xchg
repnz
or
mov
ja
xor
mov
mov
fwait
mov
inc
sbb
pop
jmp
in
iret
sub
aaa
add
adc
sub
xchg
fucomip
lea
stos
xchg
or
out
das
inc
test
xchg
loope
daa
xor
inc
pop
sarb
enter
mov
inc
in
mov
bound
jb
xchg
aas
ror
xchg
test
jge
and
or
or
adc
cmp
iret
adc
jo
sbb
subl
cmpb
mov
test
sub
xor
cmp
mov
mov
fistpll
jg
aas
xchg
or
ljmp
xchg
push
sub
loope
inc
arpl
push
daa
mov
mov
test
adc
cmpb
popa
je
add
shlb
jge
mov
mov
mov
jg
mov
mov
orb
testl
or
ja
jmp
fistps
jp
sub
arpl
push
mov
ja
jnp
mov
es
xchg
inc
popf
int3
mov
int
test
pop
inc
pop
or
inc
insl
aam
xchg
repz
xchg
push
fisubs
jo
cwtl
xchg
push
pushf
mov
push
adc
adc
and
ja,pn
popf
jo
push
adc
lods
push
aad
pop
and
das
aad
cli
daa
out
jmp
pop
or
sbb
jnp
popf
sbb
pop
fisttps
in
or
cmc
lahf
jge
or
push
xchg
dec
inc
adc
xor
iret
shl
sub
aad
push
repz
dec
in
scas
fsubs
imul
cltd
int
scas
leave
test
push
shrl
iret
testb
or
or
in
push
push
aam
mov
rolb
ret
xchg
adc
pop
mov
pop
push
out
inc
jecxz
fcomps
push
push
xchg
add
test
add
lods
test
jne
test
or
fidivl
and
xor
jbe
stos
repz
cmp
fneni(8087
ret
es
xchg
push
xor
std
mov
js
incl
lret
inc
shll
mov
fsubl
insb
decb
xchg
addb
cld
lods
not
and
pusha
adc
ss
xchg
mov
popf
add
cmpsb
or
movsb
sbb
out
xchg
hlt
add
push
sub
mov
xor
sbb
jp
sbb
rcrl
cld
daa
pop
jp
push
sub
mov
imul
in
leave
punpckhwd
push
popf
sbb
cld
mov
aad
jne
push
mov
ficoml
inc
push
pop
xor
pop
mov
iret
and
add
mov
adc
mov
mov
jmp
cmp
fisttpl
in
push
pop
orb
mov
sub
and
and
jns,pn
xor
mov
and
mov
bound
in
adc
xchg
fs
xchg
lods
pop
mov
dec
jno
mov
addr16
or
insl
cmp
lods
sbb
cmpsl
inc
leave
sbb
push
xlat
icebp
mulb
mov
mov
and
ja
int
jge
nop
cmp
popf
lock
dec
in
out
jae
inc
jne
pop
cmp
imul
mov
les
testl
dec
divl
scas
lahf
pop
mov
jle
inc
andb
pop
ja
jecxz
outsb
shll
sti
adc
add
ja
adc
pusha
int3
and
js
cmpsb
xor
mov
mov
pop
sbb
stos
gs
jbe
mov
enter
mov
push
test
mov
xchg
cmp
pop
inc
fisubrl
ljmp
xlat
push
xchg
call
push
adc
push
mov
dec
repz
lahf
int3
xchg
adc
ret
inc
mov
mov
les
dec
pushw
cmp
cld
pop
add
stos
dec
cltd
stc
xor
mov
xlat
pop
hlt
sbb
inc
scas
icebp
out
lods
mov
loopne
xchg
fcmovnu
lahf
aad
jns
push
inc
add
lcall
pop
mov
aas
fwait
aad
add
or
mov
mov
in
jge
push
pop
into
and
loope
popl
jno
inc
push
icebp
jo
lahf
or
push
scas
adc
pop
out
xchg
rclb
hlt
pusha
push
sbb
add
jae
xchg
cwtl
push
cmpsb
test
idivl
loopne
cmpsb
jg
jb
cmp
data16
in
xchg
push
cmpsl
cs
daa
add
and
jns
xor
cmp
mov
movl
enter
scas
decl
movsl
or
int
add
inc
aas
fptan
mov
add
out
das
and
pop
lret
jmp
popf
out
add
pop
pop
repz
in
cmpsb
sbb
clc
add
out
push
adc
lret
mov
stos
stos
pop
add
pusha
xlat
incb
xchg
shl
or
pushf
jge
cmpsb
out
dec
jecxz
clc
popa
cmp
xchg
scas
jp
dec
mov
mov
imul
mov
xor
fdivrs
adc
xor
rol
fsubrs
mov
sub
mov
mov
and
int3
cmpsl
movl
ja
jno
jae
or
sbb
clc
cmp
inc
inc
cmp
imul
sahf
adc
push
cmp
std
sub
movsl
pop
mov
es
ss
adcb
adc
mov
cmp
and
jbe
and
sti
push
loopne
sbb
adc
push
mov
leave
add
cmp
xchg
shrb
mov
out
add
pop
fcom
push
dec
push
xlat
jae
addr16
mov
push
rclb
subl
int3
jmp
pop
pusha
rcrl
movsb
je
fwait
pop
or
das
jmp
push
std
popa
add
fcmovu
aam
sub
xchg
pop
lods
fwait
push
pop
sti
inc
mov
adc
shr
fdivs
cmp
mov
lds
mov
pop
rcl
mov
jg
adc
and
sahf
lods
add
outsl
jo
aad
adc
mov
jo
insb
add
out
ds
mov
gs
or
popf
adcl
in
rcr
fcmovnb
movsb
lret
or
aas
es
cmpsl
jne
pushf
lods
jle
shlb
divb
push
xchg
sub
mov
push
outsb
enter
adc
leave
sahf
repz
push
movsb
loopne
lahf
popf
xchg
push
in
rolb
mov
push
add
push
test
xor
jmp
cwtl
jbe
stc
int
aam
push
or
mov
rcr
out
jle,pn
mov
cmp
jp
xchg
shrb
mov
sti
jecxz
popa
xlat
jno
je
stc
adc
pop
cmpsl
je
data16
add
inc
adc
rol
sbb
jle
daa
adc
fsubl
dec
int
fisttpll
mov
ja
sbb
test
outsl
fcoml
dec
xor
inc
jns
inc
cmp
movsb
enter
shrl
out
adc
bound
push
enter
mov
pop
push
mov
jmp
mov
dec
mov
mov
mov
push
jns
lods
ljmp
rcr
ja
insb
fdivrl
frstor
enter
mov
xchg
in
ljmp
data16
sbb
and
xor
daa
mov
xchg
or
or
jnp
out
pop
ds
xor
lds
inc
xchg
mov
mov
lods
pop
stc
mov
js
cmp
jno
jns
and
dec
lds
add
sub
pop
dec
cmp
cltd
cltd
fisttpll
fstl
pop
das
pop
mov
jo
mov
faddp
dec
or
and
cli
xlat
out
fisubs
pop
test
jmp
clc
lds
leave
cmc
mov
pop
movb
adc
or
push
add
cmpsb
imul
push
daa
xlat
js
xor
imul
notl
sub
in
xchg
mov
cld
into
loope
push
outsb
sbb
and
sahf
mov
inc
push
pop
ret
jno
mov
pop
aad
stos
stos
and
cmp
xorb
or
loopne
adc
mov
add
sbb
inc
xchg
mov
jnp
fildll
push
dec
daa
push
test
testb
cwtl
inc
add
push
ret
xchg
fs
pop
lcall
or
cmpb
orb
je
pop
sbb
jmp
fwait
dec
push
sub
lret
cltd
sub
lock
mov
cmp
int
gs
adc
xchg
je
aas
adcl
les
push
fsts
push
pop
cmpsl
mov
andl
jecxz
in
fsubp
outsl
fs
popf
and
nop
cwtl
inc
imul
pop
fwait
loopne
pop
mov
data16
mulb
enter
or
pusha
hlt
dec
jge
mov
lcall
inc
jmp
xor
pop
cmp
cld
pop
je
jmp
mov
jo
lock
xlat
mov
loope
sub
jb
les
cmpsl
dec
adc
mov
adc
sub
and
inc
xor
jmp
xchg
pop
or
sbb
pop
push
ss
cmpsl
cmp
or
xor
inc
mov
push
inc
rorb
out
std
out
mov
in
push
rcrb
add
xorl
pusha
sbb
js
lods
lahf
shll
pop
rcrb
push
push
add
mov
enter
sbb
popa
jbe
dec
clc
cmpb
in
inc
movsb
push
repnz
xlat
int
gs
test
and
xchg
gs
in
jmp
jl
sbb
call
cmp
int
pop
cli
push
xor
add
and
int3
xchg
ficoml
mov
mov
in
xor
mov
inc
inc
jo
ja
imul
mov
call
test
or
stos
and
outsl
shrl
mov
mov
cltd
mov
fiadds
ja
pusha
add
movsl
mov
xchg
test
sub
adc
outsb
arpl
or
push
jecxz
pop
adc
xlat
mov
xchg
sbb
xor
push
imul
popa
mov
ret
fisubrs
fldenv
add
jno
mov
cmc
mov
and
in
xchg
dec
xor
sbb
out
pop
icebp
xor
push
add
sub
xor
add
dec
sub
xchg
lret
insl
mov
xlat
out
rcl
and
loopne
call
push
dec
popa
bt
cmpsl
ss
mov
fsub
jae
dec
notb
xchg
xchg
sbb
sti
subl
mov
adc
pop
orb
ret
stos
push
test
mov
pop
mov
inc
add
inc
mov
test
fdivs
js
adc
testl
mov
pop
into
sbb
repnz
pop
pop
mov
xchg
mov
ljmp
pop
pop
and
dec
pushf
jle
daa
scas
xchg
inc
mov
insl
pusha
int3
dec
insl
inc
xchg
xor
scas
mov
jae
ret
ja
cmpsl
mov
adc
in
jg
mov
sbbl
sbb
ret
sbb
repnz
xchg
add
sub
movsb
sub
push
pusha
adc
ja
lahf
lds
icebp
xlat
fstpl
idivl
lods
mov
lea
in
testl
fldenv
inc
push
js
ss
dec
and
sahf
fwait
mov
sbb
notb
lret
insb
xor
imul
mov
aam
push
in
fxtract
shll
popa
jecxz
imul
pop
mov
adc
inc
push
cmc
in
xor
aaa
pop
pushf
inc
jbe
xchg
cmp
test
sub
fstps
leave
fwait
cmp
int3
int
push
and
loope
into
stc
adc
xor
mov
pop
pop
pop
in
loopne
mov
sarb
insl
fisttpll
in
mov
cmp
mov
and
shrl
and
fimull
fnstsw
das
dec
and
push
cmp
xor
movsl
pop
stos
dec
scas
icebp
xchg
insl
xor
addl
outsb
repnz
je
inc
xchg
sti
pushf
and
adc
fistps
push
xor
std
jnp
bound
clc
out
xor
ja
stos
pop
jle
test
adc
aaa
aaa
nop
add
ljmp
int
fsubrs
sub
lock
sub
mov
daa
pop
pop
push
dec
add
dec
xchg
fwait
rolb
lret
std
mov
testl
xor
lcall
push
sbbb
push
xor
mov
adc
dec
in
out
hlt
mov
pop
fsubrl
lods
xor
std
xor
fildll
sti
nopl
sub
in
mov
cld
jl
xchg
js
mov
mov
scas
insb
negb
adc
xchg
sub
stc
into
gs
fsubs
loope
aas
push
xor
xchg
pop
out
mov
dec
xlat
scas
insl
cs
imul
and
sbb
xor
pop
pop
lcall
insl
inc
push
xchg
cmp
push
loop
inc
mov
jae
aad
scas
inc
pop
les
stos
aam
pop
rclb
pop
jle
or
jo
dec
pop
inc
inc
jg
iret
pop
bound
adc
or
xchg
push
ja
icebp
ret
jnp
mov
and
push
sbb
stos
mov
push
mov
mov
xor
imull
jle
aad
popa
pxor
das
push
jmp
orb
pop
lods
pop
arpl
lret
scas
lds
or
cli
inc
pop
jns
add
and
shl
cmpsb
cs
js
inc
mov
cmp
jl
and
xor
jb
lods
shr
fistps
mov
pop
std
jns
fld
cmc
into
lahf
push
push
test
mov
loop
sti
int3
enter
push
mov
out
mov
and
out
mov
or
stos
sbb
cmp
movsb
cmp
add
mov
stos
and
xor
jb
mul
fwait
mov
cmp
in
cmp
test
or
push
xor
adc
int
push
pop
cmp
bnd
jno
xchg
mov
push
shl
pop
and
xor
sarl
push
popw
jecxz
arpl
cmp
mov
add
mov
dec
nop
ljmp
js
cmp
in
movsb
sbb
lret
lea
push
mov
lds
test
jecxz
xor
loope
xor
popf
outsl
inc
jbe
fisttps
dec
jge
push
jae
push
or
es
mov
nop
ss
mov
mov
xchg
cmpsb
fsubl
pop
xor
fidivs
es
sub
cmp
pop
xorb
icebp
ljmp
push
mov
push
fildl
inc
and
lea
lret
dec
addl
inc
pop
mov
dec
lds
push
and
jmp
ret
je
pushf
or
inc
add
mov
mov
addl
pop
dec
addl
adc
pushf
xchg
ror
xor
insl
jb
ljmp
xchg
push
add
incl
sbb
mov
scas
pop
aad
into
out
movb
cmp
incl
sub
xchg
sub
sub
repnz
or
orl
std
sahf
out
sbb
or
mov
mov
xchg
xor
shl
inc
and
mov
out
sbb
jbe
jl
sbb
test
adc
rcrb
mov
pop
add
test
pop
sbb
dec
mov
mov
jo
cltd
in
int3
out
jb
test
nop
ja
jmp
lock
rcrb
push
jp
dec
sub
sti
cmp
dec
push
rep
insl
and
les
mov
adc
into
mov
push
dec
ljmp
outsl
adc
dec
sub
and
and
adcl
lret
add
test
mov
jnp
fnstsw
stos
in
lret
cmc
or
cs
jns
lea
dec
mov
xor
inc
add
sti
sbb
sbb
cmp
dec
mov
pushf
sbb
add
push
fbstp
test
xchg
cmp
push
repnz
int3
popf
inc
loope,pt
sbb
sub
nop
out
and
dec
fdivl
cmpsb
test
inc
fwait
jmp
mov
push
pmaxsw
jo
jbe
negb
ja
in
adc
or
icebp
mov
sbb
push
pop
push
push
hlt
jmp
cs
xchg
sub
out
fisttps
sub
or
sahf
cmpsb
f2xm1
out
pop
into
adc
insl
mov
pop
xor
adcl
lcall
lea
dec
lret
jg
aaa
mov
shll
pop
mov
add
push
and
dec
cs
int3
and
nop
bound
imul
es
mov
pusha
xlat
rcrb
repz
orps
stos
rclb
adc
stos
sti
dec
scas
test
movsl
sbb
cli
aas
icebp
dec
xor
mul
pop
fldt
in
cmp
cltd
cmc
call
lret
mov
js
and
daa
daa
pop
inc
xchg
or
mov
stos
cmovo
hlt
mov
subl
pusha
jno
jecxz
xor
add
pushf
ljmp
pop
fisubl
scas
repz
inc
ds
mov
xchg
mov
sbb
sub
xchg
lds
or
pop
lods
fildll
or
pop
mov
cs
call
inc
push
gs
fucom
sub
mov
ja
jno
outsl
scas
xor
repz
sub
sub
adc
mov
pop
xor
leave
dec
sub
push
xchg
push
addr16
loopne
jp
out
mov
dec
xchg
xchg
call
les
adc
mov
adc
leave
and
cmpsl
fisttpl
push
push
and
cld
sahf
and
andb
pop
aas
and
cmp
nop
jno
and
inc
dec
jmp
inc
decl
insb
sub
jne
adc
in
xchg
push
xlat
sub
insb
jmp
sub
mov
and
sub
sub
test
lret
insb
dec
sbb
into
out
sbb
sbb
das
sub
mov
out
sbb
cli
fst
pop
sub
inc
push
popf
notb
xor
sub
lds
rorl
pushf
xchg
pop
xchg
mov
mov
dec
and
dec
dec
push
jmp
fbld
data16
xchg
inc
fsubp
or
xor
icebp
jne
icebp
bound
inc
adc
dec
xor
push
lea
aam
dec
add
lods
mov
push
mov
sbb
fisubl
in
ss
pop
mov
jge
std
icebp
pop
or
sbb
xchg
lret
pop
jnp
mov
jno
jmp
pushf
nop
ds
jecxz
mov
adcb
gs
testl
jo
mov
and
mov
movaps
jmp
add
jecxz
mov
or
popf
loopne,pt
cld
fs
inc
dec
sub
popf
mov
push
sub
sub
lods
xchg
or
jge
clc
arpl
mov
mov
ja
psrlw
mov
shlb
jg
pop
pop
std
shrb
fdiv
lcall
fstpt
testl
into
inc
daa
xchg
xor
aas
mov
or
jmp
and
xor
sahf
jge
arpl
mov
add
adcb
sub
pop
js
mov
adcl
mov
xchg
mov
pop
add
sub
outsl
stc
mov
and
sarl
outsl
aam
mov
mov
mov
lret
aas
mov
mov
xor
jne
lea
bound
mov
testl
out
mov
lret
jle
loop
jecxz
push
je
aas
adc
rcrb
scas
sbb
add
lods
in
jnp
sbb
sbb
ljmp
mov
mov
ficompl
je
lret
inc
jp
sti
jae
dec
fcomip
inc
cmp
cmc
movsb
push
pop
cmp
mov
mov
lahf
arpl
mov
xchg
arpl
sub
xor
jb
mov
js
ljmp
cmp
add
add
push
out
and
inc
or
loopne
cmpsb
xor
gs
mov
sbb
clc
nop
push
in
xlat
mov
jl
and
cmp
and
ja
dec
sti
dec
int
mov
sahf
sub
sub
jne
and
or
lahf
and
xchg
sarb
pop
ss
mov
push
stc
in
cmpsb
pop
popa
shlb
movsl
ja
popf
dec
adc
push
sub
inc
iret
cmpsl
fs
jo
sahf
sbbb
loop
jge
xor
push
ret
push
pop
inc
nop
and
inc
dec
push
aaa
rep
xor
jl
inc
pop
rcll
enter
imul
pop
cmp
out
xor
jg
push
loop
dec
or
mov
es
cmp
repnz
fisttps
sbb
sbb
mov
das
mov
aad
in
xchg
and
dec
icebp
jp
fsubrp
dec
ror
push
mov
and
mov
fimull
mov
rorb
movsl
adc
fs
outsl
cmp
mov
fiadds
out
daa
lea
std
pop
mov
push
sbbl
push
add
movsl
out
pop
test
jp
sarb
fs
movb
mov
jge
scas
test
mov
or
or
shll
mov
lods
ljmp
mov
mov
push
jb
cmp
mov
out
sahf
shrb
pop
mov
clc
call
pop
mov
mov
enter
imul
sete
clc
mov
jnp
and
dec
inc
push
cwtl
std
mov
push
pushf
push
gs
inc
arpl
popa
inc
shl
sbb
test
shrb
jo
and
stc
shlb
sub
jb
mov
stc
in
mov
sub
sub
mov
jge
jge
ljmp
ja
xlat
jl
pop
popf
cltd
dec
inc
lds
nop
cmp
lahf
jno
movsl
jle
ja
cmp
pop
mov
sbb
jne
and
movsb
arpl
rclb
sub
cmp
dec
xchg
cli
loope
adc
pop
sub
loopne
push
ret
pusha
lods
or
popf
shl
es
pop
xchg
push
cmp
mov
cmp
or
mov
loop
mov
sbb
push
jecxz
add
xchg
add
cmp
xchg
arpl
jnp
push
inc
arpl
loope
jne
pop
mov
mov
hlt
es
mov
mov
outsb
fucomp
mov
fucomi
mov
enter
sbb
add
dec
pop
insb
stos
or
call
xor
mov
dec
sub
pop
jae
adc
push
pop
xchg
jo
mov
int
pop
xchg
fidivrl
fcmovnb
xchg
mov
mov
add
mov
es
pop
lock
xchg
pop
jmp
lods
iret
fs
cmp
fcmovu
pop
cmc
bnd
movsl
mov
lds
mov
mov
inc
dec
sub
hlt
js
mov
inc
in
fbstp
ss
dec
xchg
mov
fsts
cmp
fsts
pop
mov
fistpll
test
cmp
ficompl
hlt
dec
js
mov
int
push
mov
jno
push
rcr
rcrl
xor
lret
mov
add
cs
push
add
xchg
arpl
or
jmp
stc
adc
roll
and
fs
add
pop
fcomp
sahf
xor
dec
test
mov
mov
xor
inc
adc
int3
in
inc
cli
fsubrl
jmp
adc
sahf
sbb
adc
loopne
cmp
jb
jb
jl
imul
cmp
sbb
or
fldcw
push
lock
das
stc
jp
jmp
das
ret
sbb
pop
dec
push
rorl
add
sbb
shlb
jecxz
int
movsl
bound
xor
ret
clc
leave
mov
ds
fistpl
mov
cs
xor
lahf
addr16
jne
push
adc
mov
cmp
fldt
insl
je
fdiv
ss
or
lret
pop
mov
xor
xor
adc
or
stos
test
cmpsl
jle
sbbl
jg
mov
inc
clc
pop
inc
int
and
mov
and
cld
pop
incl
mov
inc
fdivp
iret
das
loope
gs
xor
mov
es
and
in
insl
or
iret
bound
mov
xchg
lcall
rclb
rol
pop
cli
sbb
cmp
adc
ret
cmpsb
cmp
leave
sbb
or
xchg
std
out
or
xchg
out
loopne
shll
in
xlat
in
mov
lea
add
stos
mov
pop
cs
sti
imul
movsb
into
push
cltd
xor
dec
lcall
mov
enter
xchg
add
add
cltd
sbb
insb
jns
sub
in
hlt
pusha
mov
outsb
pop
dec
lock
cmp
xor
lret
sub
push
mov
dec
in
ja
ja
ret
insb
cmp
out
es
push
pop
cld
out
movsb
ficoml
ret
aad
std
aam
aam
cld
jl
mov
or
cmp
out
dec
xchg
roll
inc
movsb
faddl
repnz
sub
dec
xor
stc
cmp
sub
and
mov
push
sub
iret
dec
push
xchg
add
mov
insb
sahf
out
addr16
jecxz
out
out
es
push
pop
gs
xchg
shrb
icebp
mov
xor
jmp
dec
add
mov
leave
nop
sbb
jae
push
cmp
mov
and
repnz
insb
xor
insl
mov
imul
and
lret
dec
cwtl
outsl
out
mulb
xor
out
int3
out
sbb
aad
xor
xor
mov
cs
and
jge
xor
shl
fisttps
mov
pop
jecxz
sbb
fstl
das
loope
fldcw
cmc
push
pop
cmp
ja
mov
adc
ret
std
inc
aas
int
inc
xor
aas
jg
mov
out
cwtl
pop
notb
pushf
inc
fcmovbe
into
adc
imul
xor
mov
popf
dec
in
xchg
pop
sub
ds
lahf
in
es
mov
movsl
mov
xlat
or
pop
les
fmulp
inc
loop
add
mov
jp
xor
and
or
xchg
ja
cwtl
push
leave
mov
sahf
mov
iret
inc
lcall
inc
xchg
out
repz
ja
call
mov
push
push
xor
aas
mov
mov
inc
filds
cmp
sub
data16
mov
and
add
dec
xchg
loopne
clc
xchg
mov
adc
fstpt
mov
jno
or
je
add
lods
gs
aad
jbe
idivl
addr16
mov
and
lret
push
mov
loop
out
xchg
sbb
xchg
mov
dec
push
loopne
cmc
sarb
out
das
mov
lods
out
ja
mov
dec
pop
xchg
mov
loope
mov
mov
lods
add
sbb
xor
push
or
test
idivb
cmp
in
sbb
push
pop
xchg
cmpsb
pop
jb
iret
cmpsl
sbb
dec
sub
pandn
xchg
test
adc
pop
jge
sub
mov
jae
shl
cmp
mov
push
push
mov
or
jnp
sbb
int3
push
lea
jo
pop
sub
sub
fildll
cmp
pop
jmp
rol
sahf
add
iret
mov
stc
rcll
mov
test
aaa
ds
dec
aaa
jge
push
das
bound
filds
sbb
inc
jb
outsb
stos
ficompl
or
jg
jb
or
into
dec
cli
std
or
xchg
pop
adc
sub
and
bnd
popf
dec
mov
leave
or
mov
into
pop
jmp
fildll
and
ficoml
repnz
pusha
mov
jmp
adc
dec
mov
mov
imul
mov
jns
sti
loop
repz
movsl
mov
dec
dec
xchg
lahf
inc
fldt
cs
push
sbb
xor
cmp
int
and
popf
inc
negl
adc
call
ficoms
xor
call
mov
add
push
inc
mov
sub
das
cmp
dec
call
test
mov
call
cld
mov
mov
loopne
xor
inc
mov
out
sub
repnz
aad
mov
inc
cmp
ja
rcrb
lock
cmpsb
andb
out
add
sbb
pop
mov
pop
ds
mov
pop
insb
inc
pop
push
mov
cwtl
mov
and
sbb
xchg
add
movsb
ja
fwait
dec
aas
inc
inc
mov
sub
movsl
xchg
or
imul
mov
insb
nop
fs
insl
xchg
jl
and
xor
and
pop
jge
push
inc
in
jl
cmp
mov
mov
lcall
push
fwait
aam
add
and
nop
cld
jg
adc
inc
dec
int3
dec
mov
shl
fldcw
movsl
loop
scas
pushf
or
xchg
inc
fidivl
ljmp
aam
jae
push
ror
arpl
aad
adc
popa
jo
mov
mov
pusha
aam
jle
mov
and
ret
xchg
orl
fsubl
imull
std
and
push
and
cmc
test
popa
lock
outsl
push
sub
xor
jne
cmpsb
lret
stc
jno
pop
cs
mov
test
xor
sub
call
mov
mov
push
das
dec
mov
aaa
xorb
mov
adc
inc
sub
mov
add
add
xchg
movsb
lods
jmp
sbb
sahf
xchg
mov
mov
movsb
push
mov
les
dec
inc
mov
insl
insb
outsl
inc
scas
add
lock
mov
std
cli
aad
sub
add
sbb
mov
sbb
es
es
mov
je
in
ret
fisttpl
mov
pop
mov
imul
shr
pop
addr16
hlt
imul
jmp
lcall
dec
popa
or
push
stos
add
sbb
into
mov
test
cmp
add
arpl
xchg
add
test
xchg
aaa
dec
sbb
daa
dec
scas
pop
mov
mov
arpl
adc
dec
mov
add
or
and
sbb
cmp
inc
sbb
jno
inc
stos
cltd
popa
ret
dec
enter
dec
rorb
sub
out
adcl
test
sbbl
stos
xor
mov
jb
sbb
push
adcb
in
leave
mov
repnz
into
lds
xchg
arpl
jecxz
xchg
vandnpd
out
pop
adc
xchg
xchg
cltd
dec
pushf
pop
pop
sub
or
xchg
mov
std
or
cli
call
rcr
daa
cmp
mov
jp
lahf
pushl
xor
ss
xor
cli
std
mov
inc
clc
imul
mov
jno
cmp
decl
push
dec
nop
aad
dec
add
add
test
dec
filds
xchg
mov
or
and
dec
jmp
push
outsl
xchg
adc
sbb
mov
adc
and
inc
dec
sbb
sbb
add
sti
pusha
gs
das
push
popf
adc
pop
dec
ret
and
pop
sbb
xchg
fmul
sarl
in
aam
xchg
add
sub
xchg
jbe
fsubl
pop
fwait
dec
pushf
arpl
inc
icebp
mov
xor
push
pop
cwtl
mov
xor
call
inc
test
jno
xchg
andb
jge
insl
cltd
fisttpl
int3
repz
sub
and
jnp
jne
push
out
sbb
xlat
aaa
lret
enter
into
insl
fadds
dec
sbb
inc
mulb
mov
shr
data16
mov
test
loopne
push
pushf
xchg
pop
push
call
xchg
or
sub
sub
mov
jge
sub
cli
ret
mov
int
rcr
js
and
es
jl
adc
mov
loopne
out
iret
cmp
fists
xor
ret
andl
pop
or
adc
mov
aaa
sahf
insl
pusha
add
jle
jecxz
fildll
loopne
mov
nop
mov
mov
call
mov
fisubl
scas
mov
lcall
aad
sbb
jg
pushf
or
sahf
es
repnz
xchg
jbe
mov
lds
stos
add
call
mulb
daa
insb
enter
fldt
and
mov
cwtl
arpl
insb
jp
movsl
mov
mov
lcall
js
cmp
out
lret
pushf
imulb
mov
mov
jl
adcl
addr16
push
in
aad
aad
xor
pop
repz
insb
test
sub
xchg
xchg
imul
ret
adc
add
test
test
dec
clc
testl
jge
iret
mov
test
sub
jp
xchg
xchg
fsubrl
adc
jno
cmp
xor
and
mov
scas
lods
add
sbb
jae
mov
stc
dec
cmp
ss
and
icebp
jns
not
mov
sub
pop
fisubs
int3
imul
dec
xchg
jne
adc
divl
xchg
in
or
fwait
lds
sbb
jae
mov
jne
fsubr
aam
xorb
andl
pop
mov
adc
pop
mov
mov
leave
dec
lds
cwtl
stos
push
sarb
sbb
xor
stos
aaa
and
push
orl
xchg
cmpsl
adc
ljmp
dec
sub
test
test
loop
jl
lret
cs
inc
xchg
lods
push
mov
cs
pop
leave
mov
or
sub
aam
mov
ret
jbe
rcrb
xlat
movsb
loop
pop
adc
mov
cli
icebp
mov
inc
sub
and
push
les
mov
sbb
in
inc
mov
xchg
fcmovne
in
jo
adc
lea
adc
jle
adc
adc
dec
andl
out
cmp
mov
or
scas
shll
loope
shl
orb
repz
mov
add
lcall
adc
mov
push
loope
shll
mov
in
or
pop
adc
loop
scas
and
mov
mov
js
rolb
mov
lods
cld
jne
jle
scas
loop
addb
xchg
add
ret
dec
mov
xchg
ljmp
cmp
mov
mov
adc
popf
xor
push
ljmp
mov
test
xor
mov
repnz
test
cmp
dec
lea
out
or
mov
lret
mov
js
sub
pop
nopl
cltd
mov
cmpb
popf
pop
iret
sbb
push
pop
sar
pop
push
adc
mov
lock
jae
fdivrp
loop
push
xchg
js
xor
dec
iret
shrb
adc
aas
mov
and
pop
cmpsb
mov
scas
aad
add
test
cmp
fisubrs
fistl
lcall
or
jo
sub
lahf
add
lret
ss
aaa
aam
xor
lret
rolb
fadds
jle
sbb
mov
add
xor
fwait
mov
adc
scas
enter
stc
cmp
xchg
xor
lahf
iret
push
pop
inc
push
cmp
imul
mul
pushf
xor
cmp
aad
cmp
push
cmp
je
dec
sub
sbb
jle
xchg
and
outsb
cmpsb
insb
fdivrs
pop
mov
sub
mov
mov
pop
ljmp
pop
lea
inc
fwait
int
mov
call
sbb
cmc
daa
or
call
sbb
dec
nop
aaa
inc
sub
pop
and
imulb
jmp
bound
fldpi
shlb
mov
cmpsl
stc
jns
fdivs
insb
repz
popa
xor
sbb
pop
lahf
in
inc
int
int
sbb
add
les
mov
inc
cmp
sahf
sub
imul
out
into
pop
repnz
aas
inc
mov
lods
push
push
loop
jo
lret
aam
add
mov
and
xor
loopne
inc
hlt
push
lock
out
pop
pop
leave
loope
cmp
jbe
adc
sahf
and
mov
or
mulb
pop
pop
movsl
sub
adc
imul
sub
out
mov
inc
and
push
outsl
jno
push
pushl
xchg
call
sbb
xor
and
std
sti
xor
push
in
mov
mov
mov
rorl
push
inc
rcrb
xor
fnstenv
loope
int3
mov
push
sub
add
push
ja
aas
mov
and
iret
push
jge
mov
or
or
test
dec
sbb
repnz
jbe
jbe
mov
mov
leave
hlt
inc
mov
dec
lahf
cmp
xchg
and
and
xchg
mov
cmp
lcall
jnp
hlt
and
sbb
mov
mov
test
xor
xchg
in
mov
cs
pushf
add
mov
rorl
dec
inc
ja
inc
lahf
add
pushf
in
daa
int3
mov
fs
int3
cmpsb
xchg
xor
pop
and
push
fdivr
jmp
loope
jo
pop
xor
lret
mov
fstpt
test
fnsave
and
or
test
dec
mov
faddp
daa
lock
pop
mov
mov
dec
mov
dec
fstl
cmpsl
repnz
mov
std
scas
ds
mov
inc
daa
lahf
xor
jae
iret
inc
or
orb
jbe
std
mov
jnp
xchg
add
inc
sub
vmaxps
mov
test
xor
xchg
inc
jg
or
mov
xchg
cmpsb
or
xchg
scas
cmp
div
mov
fists
dec
xor
or
cli
fmuls
pop
popf
gs
xchg
xor
int3
xor
add
mov
addr16
add
sbbl
sbb
negb
xchg
xor
test
pop
push
and
mov
pop
jle
xchg
inc
pushf
orl
js
xor
sbbl
movsl
fisubrs
or
xchg
jmp
cmp
jp
cld
push
pop
pusha
and
jnp
addr16
iret
fidivrs
out
scas
insb
pop
or
clc
mov
cwtl
loope
cs
sti
mov
sbb
out
cmp
clc
aas
xchg
fistpl
xchg
pushaw
mov
cmp
push
in
jno
ret
inc
adcb
mov
notb
and
cmp
xlat
and
sub
or
xchg
adc
xchg
dec
sbb
push
imul
mov
mul
and
mov
scas
stos
mov
lods
dec
add
es
jno
adc
sti
dec
pop
aam
dec
dec
push
shlb
cmpsb
jo
fxch
sbbl
mov
jne
jmp
dec
mov
push
js
insb
xor
dec
dec
xor
mov
mov
jg
adc
add
or
xlat
popa
sbbl
or
jnp
js
mov
mov
sbb
andb
iret
xor
scas
cs
jae
dec
jns
cmp
mov
incl
shrb
iret
enter
or
lock
pop
cmpl
lods
xor
mov
jne
jg
mov
add
adc
scas
mov
mov
xlat
sub
push
lret
je
jl
div
rcrl
mov
sbb
and
mov
push
fs
ds
stos
mov
and
add
push
call
mov
mov
adc
inc
cmpsl
iret
xchg
jl
mov
xchg
jb
pushf
sub
push
aad
outsl
push
pop
shrb
xchg
or
xor
in
hlt
nop
sub
mov
negl
jne
push
cmp
enter
mov
jns
lods
mov
and
ror
lahf
stos
lock
imul
mov
add
add
push
jp
mov
jns
xlat
or
cmp
jb
iret
daa
xchg
mov
cmc
call
push
fwait
rorl
imul
push
fs
outsl
push
mov
lock
dec
xchg
jecxz
mov
nop
push
xchg
fisttpl
leave
or
or
jne
cltd
mov
repnz
sub
xlat
cltd
sub
mov
jno
imul
push
mov
adc
sarl
xchg
pop
test
xchg
pop
jmp
xlat
insl
cmp
inc
sbb
leave
pop
int
push
int
shrl
sbb
es
daa
cmpsl
jmp
cmp
pusha
inc
pushf
mov
xchg
or
outsl
aaa
xchg
jne
jg
notb
in
js
jmp
mov
in
inc
xchg
cmp
push
mov
in
clc
add
dec
es
bound
stos
jge
das
mov
stos
lret
or
in
xor
aaa
andps
int3
repnz
adc
push
push
ret
push
cmp
push
ja
test
out
popa
cmp
int3
cld
jae
enter
inc
cmpsb
dec
icebp
adc
jle
add
sub
pop
and
mov
adc
cld
scas
sub
leave
mov
inc
add
mov
mov
ja
notb
aas
sub
es
mov
popl
fcoms
or
jle
xchg
cmp
lret
loope
fucom
popa
out
jg
xchg
inc
fwait
lods
test
lret
mov
adc
mov
stos
shrb
mov
js
in
insl
les
and
inc
addr16
nop
push
xchg
into
sub
aas
movb
cmc
jmp
sbb
jmp
cmp
push
cmpsb
ss
loopne
scas
dec
push
lcall
and
sub
lret
mov
jp
push
imul
or
and
sub
fwait
and
fsts
pop
dec
push
xchg
mov
sub
push
scas
or
leave
mov
cli
jle
or
adc
mov
movsl
adc
shrl
stc
xor
js
out
or
fisttpl
out
outsb
xor
inc
mov
xchg
stos
cmc
test
push
sub
jbe
mov
outsl
sub
pop
add
test
push
xchg
fimull
jp
or
jg
cli
inc
xor
inc
sub
ja
lcall
int3
cmp
dec
mov
push
pop
lret
bound
scas
push
fdivrs
sub
icebp
scas
sbb
pop
outsl
mov
rcpps
xlat
mov
ja
xchg
xor
popl
fidivrs
shl
inc
push
mov
push
mov
bound
inc
jb
mov
xlat
arpl
mov
xchg
insl
lods
pop
cmp
enter
ret
jg
jle
fwait
sahf
lock
stos
pop
je
jmp
mov
iret
je
insb
jae
aas
mov
cmpsb
mov
mov
push
ret
mov
dec
jno
xor
repnz
pop
mov
ficomps
cmp
pop
add
mov
mov
inc
cmp
in
dec
es
mov
cmp
pop
sbb
mov
adc
mov
jmp
cld
mov
push
or
sti
and
test
push
xor
pop
and
sub
pop
or
push
and
sbb
loop
xor
ds
cmp
pop
sub
and
pop
fs
cmp
jmp
sub
pop
dec
fcomip
jae
lret
bound
add
out
std
lcall
insl
sbb
cmpsl
ljmp
mov
adc
cltd
add
xor
add
test
movsl
pop
mov
jo
ss
adc
bswap
pop
es
adc
ficoms
cmp
adc
enter
out
inc
stc
add
bound
in
loop
aas
xlat
push
call
jecxz
lods
push
mov
mov
cli
mov
ret
inc
xorb
cmp
leave
in
mull
fbstp
sarl
sbb
mov
data16
enter
add
ljmp
std
stos
outsl
pusha
out
aaa
stos
mov
jmp
inc
popa
jle
shl
push
loop
shrb
rorb
js
js
xor
jns
sbb
popf
push
test
cs
scas
dec
dec
leave
aad
fisubl
dec
in
sub
nop
into
xlat
test
cmp
cmp
loopne
push
mov
mov
push
or
cmp
xchg
retw
sbbb
in
push
popa
xor
scas
scas
push
mov
ror
cmp
mov
xchg
cli
stos
jns
test
shll
pop
movsb
add
sub
enter
mov
test
test
mov
or
xchg
adc
repnz
stos
ret
sbb
bound
pop
and
or
mov
dec
mov
pop
cmc
xchg
mov
xchg
test
pop
fmul
inc
inc
xor
stos
addr16
je
jle
out
jmp
sbb
jno
aaa
add
fstpt
setle
dec
xchg
mov
shr
sbb
jmp
fs
sub
ss
fdecstp
scas
push
mov
outsl
mov
mov
pop
dec
cmp
ret
daa
add
fsub
mov
jno
out
xlat
cmp
mov
push
xchg
push
test
mov
add
div
cwtl
shrl
jg
ljmp
sbbl
xchg
nop
cmovl
addr16
push
or
pop
in
and
mov
lret
mov
decb
in
fisttpll
mov
loope
sahf
jo
test
jae
xchg
in
divb
jp
mov
push
insl
sbb
ss
data16
jmp
stos
mov
sbb
lea
pop
push
xor
add
test
sahf
into
pop
ss
notb
ret
jge
cmpsb
push
jecxz
mov
ret
sbb
mov
imul
fisubrl
push
mov
pop
pop
xchg
leave
repnz
cltd
in
scas
dec
adc
jge
xchg
xchg
addb
cli
int3
pop
sahf
xor
xchg
lea
push
orl
lcall
cli
scas
mov
lods
int3
fmuls
jle
mov
pusha
sub
adc
ret
shll
push
inc
insb
mov
shll
adc
jnp
xchg
mov
scas
sahf
into
sub
scas
leave
and
xchg
jmp
adc
or
sub
ds
repnz
xor
ljmp
jecxz
ja
inc
mov
in
jl
icebp
jo
lock
mov
sub
jge
or
subl
cmp
insb
lahf
inc
fidivs
push
adc
sub
pushf
pop
inc
ds
add
fsubp
test
adc
popa
aaa
shr
mov
add
cli
and
ss
jle
in
pop
imul
mov
or
mov
jae
insl
mov
lods
popf
sahf
ljmp
xchg
xor
add
inc
jb
lds
pop
and
sbb
xchg
lea
in
lret
sub
dec
and
pop
cmp
sbb
dec
dec
xchg
mov
test
cmp
fst
out
mov
jb
cmp
add
mov
fadds
and
xchg
or
sbb
outsl
cli
push
sbb
add
push
iret
movsb
cmp
mov
xor
sub
push
pop
xor
mov
cmp
clc
mov
pushf
inc
gs
les
mov
popf
sbb
hlt
fwait
mov
and
divb
jecxz
outsb
push
cs
dec
pop
insl
xor
cmp
xchg
sti
ret
push
xchg
sbb
subl
adc
mov
repz
fistps
loopne
fisttps
jp
pop
or
mov
lods
fldt
lret
ja
out
ds
pop
cmp
pop
push
lret
fcmovb
jge
xorb
inc
hlt
mov
ret
aam
dec
jno
cltd
cwtl
dec
sahf
fildl
adc
rcrl
jne
fimull
mov
std
mov
jo
sub
popa
add
stc
sti
pop
push
push
xchg
jmp
push
test
cmp
in
sub
insl
stos
add
mov
pop
repnz
add
or
cmp
dec
loop
mov
sub
mov
inc
add
ss
js
in
add
icebp
pop
jecxz
inc
pop
add
pop
dec
jle
xchg
inc
fistpll
xor
sub
jmp
insb
idiv
jne
ss
cmp
add
stc
movsb
xor
mov
imul
mov
dec
mov
mov
sbb
movsb
sbb
lods
repnz
and
mov
addl
cmp
jl
sub
enter
stos
push
shlb
mov
mov
repz
dec
mov
popa
int
sbb
ds
ja
inc
dec
test
rcrb
or
mov
xchg
push
xchg
dec
mov
leave
pop
std
faddp
out
pusha
xchg
jle
lahf
idiv
arpl
sti
popf
inc
cmp
pop
or
je
xchg
aaa
sbb
dec
stos
ljmp
aam
sub
pushf
popa
xchg
push
mov
cmp
push
mov
mov
add
sbb
cmp
comiss
and
test
lret
inc
add
jle
ret
inc
shll
push
shl
js
mov
out
iret
in
gs
xlat
inc
mov
xchg
and
daa
pushf
pop
movsl
sbb
cltd
cld
inc
push
jo
enter
loope
sbb
loop
cwtl
imul
orb
pop
jp
adc
popf
int
fdiv
sub
and
aam
aaa
push
mov
enter
ss
or
mov
xchg
sti
sub
jne
mov
cmc
xor
mov
jle
hlt
pusha
lret
int
sub
nop
dec
outsl
sbb
cmp
inc
movsb
ss
mov
jno
push
repnz
xor
mov
ds
xchg
insb
add
dec
xor
push
out
cmp
out
js
xor
cmp
fildl
outsl
filds
push
adc
cmp
cmp
into
mov
decl
in
stc
sub
mov
jne
ja
ret
imul
mov
addl
negl
in
shll
leave
sbb
sbb
inc
mov
inc
xchg
inc
outsl
das
push
dec
repz
mov
lcall
bound
test
repz
int3
enter
jne
outsb
mov
mov
lea
jmp
lret
or
sti
and
cli
add
sbb
test
icebp
jb
pop
xchg
loope
jp
loop
outsb
mov
mov
jl
mov
sbb
push
push
xlat
pop
sti
je
test
sub
xchg
push
mov
inc
push
pop
int3
lret
mov
repnz
and
jno
insl
lock
sahf
adc
cmp
pop
mov
sbb
fdivl
movsb
shll
mov
sub
lahf
push
adc
and
xor
fldenv
insl
mov
daa
hlt
xchg
cmp
dec
lahf
or
xor
push
xchg
cmpsl
mov
test
pop
jne
hlt
fimuls
test
mov
imul
nop
mov
pop
sub
lods
repnz
leave
incb
mov
mov
pusha
add
loop
or
ds
cmp
sti
push
xlat
dec
shl
leave
push
sbb
sahf
fdivrp
cmp
adc
fbstp
push
out
cmc
sahf
lds
ret
mov
dec
pop
mov
stos
xchg
push
mov
out
mov
mov
pop
mov
mov
cli
scas
shrl
cmpsb
test
xor
sub
sub
aas
mov
loope
push
lcall
inc
mov
xor
call
lods
xor
lods
loop
inc
xor
sub
addb
cmc
inc
xchg
xlat
std
mov
rcpps
lods
and
pop
pop
and
cmpsl
adc
mov
ds
sahf
out
loop
xor
lgs
sub
out
dec
pmuludq
sub
adc
les
pop
pop
xchg
pusha
mul
cmpsl
xchg
or
fs
and
pop
jge
rcrb
ja
insb
sahf
push
add
icebp
cmpsl
mov
loope
mov
test
leave
add
inc
mov
inc
mov
adc
fdivrs
negb
out
xor
mov
aam
add
dec
imul
add
xchg
pushf
out
or
push
out
xor
and
fisttpll
in
jb
cmpsl
insl
adc
jbe
or
inc
lods
pop
inc
push
test
sahf
popf
in
ret
imull
jmp
mov
ret
out
jns
decl
testb
adc
aas
sub
out
scas
push
push
jl
mov
add
cmp
div
xchg
imul
sarb
loop
and
test
adcl
mov
leave
mov
xchg
stos
lods
mov
stos
mov
sbb
call
imul
xor
jnp
lds
push
iret
jno
mov
pop
gs
xchg
and
jmp
js
insl
and
pop
cld
cli
push
xchg
imul
insb
mov
filds
cmp
ror
mov
call
add
push
fdivrl
push
mov
dec
sbb
adc
mov
mov
and
pop
sbb
out
js
jp
push
push
subl
mov
add
adc
mov
iret
lock
loope
test
mov
or
inc
pop
push
mov
and
sub
pop
subb
add
pushf
or
sahf
or
leave
mov
add
sbb
gs
push
sbb
or
sar
mov
cmp
int
push
mov
mov
and
push
mov
push
mov
aad
and
mov
mov
sub
pop
icebp
sbb
mov
fnstenv
sbb
rclb
js
pop
xor
cs
pop
pop
inc
mov
sahf
or
loopne
adcl
and
mov
mov
push
push
aad
dec
arpl
jg
fimull
add
mov
mov
cmp
notb
or
movsb
leave
xlat
iret
loopne
in
gs
jg
ljmp
xor
nop
out
sub
scas
or
jns
lahf
mov
sti
outsl
in
dec
fistps
and
test
sbb
mov
cmp
nop
into
sbbb
add
repnz
sti
in
das
iret
loope
and
std
sub
add
jmp
fmull
rorb
mov
insl
sbb
ja
sahf
adc
nop
das
aam
mov
mov
xchg
gs
jp
pop
sbb
hlt
adc
adc
das
sbb
mov
pop
fldcw
lods
out
mov
aam
and
mov
cli
xchg
or
push
mov
sub
ja
sti
jno
xchg
stc
jecxz
mov
sbb
sbb
xorl
xchg
scas
xchg
je
shr
sub
sub
inc
cltd
or
xchg
sbb
xor
sarl
into
mov
aas
inc
xchg
add
addl
repz
gs
daa
dec
pop
sbb
pop
je
je
aaa
lods
mov
or
pop
push
cmc
je
dec
and
mov
outsb
pusha
cmp
sbb
imul
pop
jge
lahf
shrb
mov
stos
jns
sti
mov
pop
addb
test
outsl
in
cld
cmp
jmp
je
mov
pop
roll
sarl
outsb
ret
cmp
inc
jnp
xchg
jns
jbe
mov
xchg
test
cld
test
fnstenv
mov
int
sbb
cmp
push
rcl
or
sub
mov
dec
sahf
xchg
xchg
mov
stos
add
outsb
cld
mov
daa
jno
stos
insl
rcrl
dec
mov
lret
fisubrl
mov
ss
and
pop
jbe
xchg
leave
pop
int
sbb
sbb
sub
push
mov
fnstenv
ss
xchg
xor
cmp
xchg
jb
pop
sub
std
inc
xchg
inc
cmp
mov
insb
inc
mov
ds
push
adc
jmp
stos
aad
mov
push
ds
std
push
add
lods
aam
xor
pop
rclb
inc
out
shll
xchg
mov
ljmp
addr16
mov
and
sbb
shll
push
jbe
mov
stos
fiaddl
mov
cs
pop
inc
pop
and
ret
push
stc
stc
jo
adc
dec
pop
lock
xchg
cmp
fs
call
add
cmp
std
push
dec
sub
fidivs
lds
ds
sbb
mov
dec
mov
inc
lods
aam
in
mov
mov
cmp
xchg
ljmp
push
jg
rcrl
mov
and
mov
ret
cmp
stos
jge
jecxz
repnz
or
clc
mov
xchg
cmp
push
lret
xchg
mov
movsl
rcrl
mov
popa
ljmp
movsb
pop
push
adc
mov
fisubs
aas
mov
pop
cld
es
push
inc
dec
xacquire
inc
sbb
adc
lret
lcall
jne,pn
cmp
push
cmpb
iret
call
dec
adc
jl
ja
inc
sbb
dec
es
add
fisubl
cwtl
sbb
lock
inc
pusha
outsl
lret
push
xor
jge
shl
dec
call
xor
data16
pop
inc
xchg
cwtl
imul
or
call
hlt
sbb
popf
inc
pop
mov
ds
xchg
test
adcb
fisttpll
inc
jmp
repnz
pop
icebp
inc
fisubrl
jo
int3
sahf
dec
jge
cmpsb
adc
shlb
lret
pop
mov
cmp
mov
xor
push
push
sub
push
cld
jecxz
test
sbb
pop
loope
sbb
xchg
pop
mov
pop
repz
adc
xor
jge
mov
pusha
ljmp
mov
cmp
xor
push
adc
sbb
insl
push
mov
insb
fnstsw
fiaddl
and
jns
dec
ret
repz
test
sarb
push
xchg
inc
add
js
fs
push
in
fdivp
xor
iret
cmpsb
sbb
dec
loop
in
sahf
sbb
dec
es
enter
gs
in
add
adc
mov
xchg
das
rep
pushf
mov
cwtl
xor
mov
rol
pop
mov
mov
daa
pop
push
dec
push
jl
es
sub
jmp
fiadds
rcrl
and
sub
mov
notb
shlb
leave
add
test
xlat
sbb
cmp
mov
mov
xor
add
rcrb
scas
inc
xor
xchg
cli
mov
dec
pushf
lods
out
aam
xor
jmp
stos
xor
mov
mov
mov
xchg
icebp
dec
data16
xchg
out
pop
cli
hlt
cmp
in
data16
test
adc
adc
mov
mov
mov
int
inc
call
pop
es
adc
test
adc
jnp
mov
adcb
punpckldq
sbb
sbbl
inc
pop
enter
scas
pop
dec
test
jns
mov
dec
mov
mov
push
xorb
cmc
xchg
lahf
add
pop
jg
sbb
sbb
cmp
ret
aad
ds
aam
mov
fdivrl
pushl
popa
mov
mov
int
inc
add
loop
adc
adcb
aad
pop
test
ljmp
fisttpll
mov
leave
add
lock
cmp
sub
mov
dec
jbe
movsb
mov
lds
push
ffree
and
cmp
sbb
add
cli
shll
dec
fwait
xchg
rclb
aaa
imul
aas
pop
movsl
cmc
xorl
jg
add
rolb
lea
xor
cmp
xchg
and
fmuls
cli
push
movsb
mov
addw
xchg
push
cmp
xlat
mov
imul
mov
push
dec
pusha
sbb
dec
xlat
dec
pushf
nop
fldl
mov
xchg
jecxz
jmp
mov
cmpsb
frstor
movsb
jno
popa
outsb
cmp
ret
lods
mov
sahf
adcl
dec
cmp
ret
pop
mov
mov
push
ss
popa
dec
das
or
pop
jb
ret
stos
dec
mov
pop
fimuls
in
mov
ret
ss
or
stos
gs
loope
inc
sub
inc
push
andb
sbb
jmp
sub
inc
fistps
cmpsl
push
cli
mov
icebp
ja
dec
cmp
je
xchg
sub
cmp
clc
mov
data16
divb
mov
popf
xor
sbb
jnp
pop
int3
fisubl
mov
xchg
negl
xchg
push
xor
sub
add
mov
xor
shll
and
xchg
mov
pushf
cs
xor
clc
sbb
sub
lock
repnz
int
push
rolb
sbb
test
out
push
es
ret
and
or
cli
int3
mov
xchg
dec
pop
adc
xor
rorb
clc
sti
inc
movsl
ds
push
inc
mov
out
jbe
or
lea
dec
fwait
mov
cli
cmpsl
test
into
lret
iret
or
das
icebp
xor
insl
mov
fistps
push
shll
cmp
inc
add
cmp
and
or
cmpsb
fdiv
aad
fidivrl
cwtl
or
dec
add
xor
pusha
xchg
repz
repnz
sahf
pop
xchg
mov
jnp
fld
sahf
outsb
pop
test
xchg
das
rolb
mov
ret
xchg
pop
cld
sbb
stos
adc
scas
imul
sbb
dec
xchg
jbe
jnp
lret
fidivrl
jns
and
jp,pn
cltd
fs
cltd
jne
and
xchg
mov
add
pop
pop
dec
test
mov
std
popa
xchg
or
mov
fwait
mov
jge
popa
mov
xor
inc
push
sbb
cmpsl
mov
std
lahf
sbb
popa
outsb
dec
inc
enter
mov
pop
jl
addr16
insb
test
jp
xchg
xor
ret
and
inc
mov
pop
xchg
adc
dec
sbb
add
fnstcw
cli
pop
test
jecxz
and
inc
movsl
in
insl
bound
in
roll
pop
adc
mov
cmp
js
dec
adc
xchg
loope
aaa
stos
sbb
add
fmul
mov
loop
mov
sbb
push
outsb
mov
loop
fnstsw
fldt
leave
push
sub
lods
push
xlat
jg
mov
subl
lret
xor
pop
in
pop
cmp
dec
inc
inc
jo
push
mov
lahf
cli
inc
push
lret
hlt
or
mov
xor
rcrl
xor
addr16
inc
rdmsr
loop
pop
cwtl
loopne
cmpsl
sarb
push
test
mov
in
sub
pop
sub
sbbb
sbb
mov
test
mov
outsb
popf
pop
subb
mov
xor
mov
cwtl
sbb
fsubs
loope
pop
xchg
sbb
jecxz
xlat
fnsave
mov
and
enter
xlat
test
icebp
ljmp
stos
gs
out
es
clc
sbb
addr16
stos
and
fimull
loopne
pop
xchg
dec
dec
dec
std
sbb
std
iret
data16
xchg
jecxz
bound
sahf
mov
add
mov
jmp
icebp
dec
or
inc
sub
mov
lods
sbb
add
mov
sbb
shrl
loope
nop
inc
insl
sahf
lds
adc
sbb
xchg
cmp
icebp
jle
mov
fnsave
add
lret
mov
sub
push
dec
mov
push
je
out
add
arpl
mov
data16
stos
sub
mov
mov
cmp
pushf
xor
pop
imul
sbb
lahf
pop
cmp
in
stos
jp
sbb
sbb
pop
jmp
rorb
xchg
loop
out
repz
inc
fsubrl
cmpsl
jge
inc
icebp
mov
stc
popf
lods
insl
fistpl
mov
cli
inc
cmp
add
cmpb
and
imul
enter
inc
dec
lret
pusha
in
sbb
out
pop
jne
inc
dec
pop
jmp
pop
lods
push
fimuls
out
jp
cmpsb
cmp
inc
dec
insl
xchg
inc
xor
lret
js
jbe
lock
mov
mov
popa
stos
adc
sub
sti
mov
lahf
mov
lret
fnstsw
dec
mov
repz
jmp
pop
mov
aad
cmpsl
sub
dec
popf
cmp
sub
ljmp
jmp
nop
xchg
movsb
xchg
jbe
dec
movsb
inc
mov
add
pop
pushf
loopne
pop
xchg
cmp
mov
aaa
jnp
inc
insb
mov
jl
xchg
mov
adcl
test
subb
xchg
dec
mov
pusha
loope
fistpl
jge
push
mov
addr16
ret
xor
std
push
ss
das
mov
and
arpl
ss
dec
pop
inc
fwait
into
test
or
inc
dec
mov
push
xor
jmp
cmp
rorb
cmc
lds
sub
add
inc
popa
je
sub
gs
movsl
push
xor
push
or
cmpsb
cwtl
nop
mov
repz
repz
sti
ret
mov
outsb
popf
in
push
cmp
lods
aas
sbb
sub
push
stc
dec
fs
xlat
adc
test
into
adc
jle
popa
push
push
out
add
scas
dec
xchg
outsl
les
ss
shrl
stc
les
dec
xchg
push
xlat
push
jbe
ret
pop
jg
enter
sub
cmp
lahf
jmp
mov
pop
xchg
lret
push
mov
and
dec
in
pop
test
inc
out
dec
mov
iret
in
mov
and
dec
fcompl
adc
fwait
or
sbb
push
fs
out
pusha
push
mov
jecxz
ds
repnz
push
adc
push
mov
mov
fisubs
sub
leave
cli
loope
js
pop
push
enter
jmp
cld
into
orl
sub
xor
jge
push
mov
gs
cli
inc
cwtl
in
aad
xchg
add
iret
pop
mov
pop
hlt
cmpsl
or
sub
or
jmp
mov
aaa
ds
cmp
pop
sbb
mov
outsb
orl
or
jne
outsb
jno
lock
pusha
xor
sti
dec
inc
xor
lea
or
or
jl
jecxz
addr16
and
bound
inc
mov
jle
test
mov
jmp
inc
push
lock
imul
xchg
or
push
adc
sbbb
mov
loop
push
and
popf
push
iret
outsl
cmpsl
orl
xor
xor
xchg
movsb
mov
pop
mov
dec
push
sub
std
fwait
imul
call
sbb
jmp
es
stc
push
pop
add
subb
fisttps
jno
lock
jo
in
andl
or
sti
dec
shlb
adc
and
inc
mov
pop
push
outsl
push
or
loop
loope
push
repz
ljmp
ds
mov
loop
jb
or
jl,pn
dec
mov
inc
iret
sti
rcrb
xlat
mov
cld
imul
pop
xor
pop
sti
or
cs
mov
cmp
sbb
dec
ja
gs
adc
adc
inc
push
jecxz
mov
and
mov
test
sti
dec
jae
enter
popf
adc
test
push
and
or
popf
negl
ds
push
mov
insl
xor
imul
jl
lds
int
adc
lcall
jno
mov
mov
jb
addl
imul
mov
mov
pop
movsl
dec
push
rcrl
ret
ds
adc
or
mov
into
push
ljmp
rcll
pop
xchg
stos
add
test
or
dec
cmp
sbb
and
dec
stos
pop
cmc
cmpsl
lret
or
imul
lret
jnp
mov
push
mov
test
lds
jmp
into
das
cwtl
mov
mov
mov
aaa
fdivl
loopne
push
xchg
aad
hlt
ljmp
sub
sub
into
inc
xchg
pop
jge
mov
je
test
adc
inc
add
and
jae
bound
bound
mov
movb
dec
loope
cmc
popf
sub
inc
mov
mov
testl
out
xor
or
xor
fcompl
sub
jae
iret
pop
push
xor
or
es
loope
adc
dec
ret
cmpsb
push
xchg
mov
out
pop
popf
loop
pop
mull
dec
and
into
dec
ret
mov
sti
cmp
xor
fwait
adc
aam
adc
pop
xlat
add
das
sbb
sbb
clc
jb
lahf
int
fistps
sub
daa
inc
push
inc
fstl
xor
xchg
jl
rorl
jne
or
mov
push
sbb
or
stos
mov
xor
inc
icebp
inc
into
je
sbb
sbb
push
ror
sbb
and
shll
add
xchg
xchg
or
sbb
dec
mov
daa
loope
adc
loopne
mov
ret
out
subb
filds
test
into
loop
loopne
xor
popa
jecxz
out
inc
ljmp
xorl
mov
stc
jg
mov
or
ja
push
out
or
loop
pop
addb
sub
jmp
test
xor
or
sti
mov
cmp
or
mov
jnp
add
sub
mov
dec
cwtl
dec
idivb
jmp
inc
push
loope
roll
out
hlt
push
data16
sbb
and
les
icebp
mov
scas
adc
iret
push
fsts
jmp
lret
ss
inc
jno
out
dec
sti
loop
scas
push
inc
cmp
inc
xchg
shll
mov
pusha
cmp
clc
mov
in
cld
pop
inc
xchg
inc
das
in
xchg
negl
cld
loope
and
cmp
shll
mov
xor
iret
das
mov
insl
outsl
xchg
jecxz
ret
pop
aam
xlat
nop
icebp
aad
shl
fwait
outsl
sbb
rorb
stos
pop
push
adc
lods
mov
repnz
scas
mov
mov
loopne
popa
pushf
ljmp
outsb
lret
mov
repz
sub
outsl
fsubrs
inc
xor
gs
adc
xchg
push
leave
jp
sbb
out
shrb
push
call
push
push
pop
mov
jmp
sub
popa
out
mov
iret
fwait
outsb
data16
xchg
jmp
mov
push
mov
fwait
or
push
test
or
pop
push
mov
sub
popf
cmp
mov
dec
mov
mov
sarb
inc
daa
hlt
mov
mov
scas
int
shr
popa
jne
push
sbb
mov
jle
cmpsl
mov
push
nop
or
roll
mov
imul
inc
mov
popf
cmp
out
jecxz
add
sub
or
pop
sbb
or
popa
mov
cwtl
sub
cmp
sub
sahf
andb
or
outsb
mov
out
insl
xchg
rcrl
dec
sub
fdivr
jnp
lds
xor
mov
add
push
xchg
adc
push
jmp
dec
in
lahf
cmpsb
mov
fdivr
fcoms
pop
add
xor
push
loop
mov
add
mov
lea
cmp
clc
jno
cmpb
xorl
or
sub
cwtl
scas
pop
push
jmp
fistl
xchg
dec
sahf
call
das
mov
in
jns
fstpt
mov
inc
xor
sbb
scas
mov
lods
loopne
or
out
adc
dec
jl
xchg
stos
incb
je
bound
jne
add
cmp
cmp
pop
pop
popl
ret
andb
fstl
insb
insl
sub
pop
addr16
dec
sarl
stc
mov
scas
xor
cmp
mov
in
rcrb
xor
js
test
cmpsb
pop
pop
dec
pop
xchg
ja
pop
adc
cmp
adc
lret
in
lds
push
mov
out
loopne
arpl
fst
mov
push
adc
fdivrp
testb
es
mov
lea
sbb
ja
mov
es
jae
ret
adc
lods
into
lea
enter
imul
ljmp
sarl
ficomps
xchg
repz
les
sti
cmpsb
fisubrs
push
lea
dec
push
dec
mov
arpl
pop
or
push
cltd
icebp
sar
add
call
ror
adc
movsb
jbe
pop
xchg
jmp
cli
fldcw
dec
lods
cs
xlat
sub
jecxz
movsb
int
dec
scas
and
fcomp
jle
and
dec
subb
fistps
sbbb
xorl
rcrl
sahf
imul
pop
jo
les
sub
jmp
sub
fidivs
push
jmp
dec
xor
xor
jecxz
sub
pusha
jo
mov
clc
out
lret
sbb
rolb
lahf
inc
fsts
movsb
adc
mov
call
adc
ret
mov
sub
rcrb
imul
pop
cmp
dec
xchg
sbbb
add
loopne
dec
or
mov
mov
xor
test
icebp
call
and
sub
adc
movsl
push
sub
and
pop
or
inc
icebp
stos
out
out
xor
or
fdiv
inc
popf
cmp
and
cmpsb
adc
fbld
enter
inc
sub
mov
cmp
or
loopne
mov
js
sar
hlt
shrb
fisubs
nop
xlat
and
add
adc
leave
jae
lods
not
mov
xor
andl
pop
adc
jecxz
invd
mov
dec
int3
jns
or
sbb
repz
mov
js
ja
inc
shl
dec
mov
cmpsb
or
out
mov
lods
push
dec
sar
push
mov
mov
mov
arpl
and
sti
ficoml
js
mov
mov
int3
rcl
bound
lcall
adc
pop
sub
jno
inc
push
cmpl
xor
dec
lods
mov
jb
sub
cs
dec
sbb
jne
push
outsl
and
clc
testl
jl
fistpll
loope
adc
lock
clc
int
push
das
mov
loop
inc
sti
mov
aas
sbb
in
ret
bound
or
xor
fwait
sbb
mov
out
fsubr
adc
hlt
hlt
jg
mov
or
hlt
mov
jbe
hlt
push
sub
add
shlb
cmpsb
data16
cwtl
add
dec
pop
lahf
mov
push
mov
fs
jl
mov
and
stos
lea
mov
mov
cmp
pushf
jae
xchg
stos
push
inc
sbb
xchg
lret
out
insl
ljmp
cmc
stos
in
sub
fidivrl
insb
shrb
jecxz
subl
mov
pop
jnp
add
adc
leave
cmp
test
xchg
mov
mov
aam
push
sbb
fidivs
bound
add
push
clc
mov
and
push
xor
push
fptan
jg
mov
mov
mov
adc
sub
dec
and
cmpl
lods
ret
insb
add
xor
pop
pop
pop
mov
inc
mov
and
mov
rcll
sbb
mov
pop
xchg
jle
mov
pop
push
stos
or
inc
jne
rcrl
mov
fdivrl
cltd
out
pop
fbld
sbb
push
loop
cmp
xchg
pop
ficoms
fmul
hlt
xor
test
mov
jle
push
cmp
insl
mov
mov
fbld
sub
push
stc
cmpsl
into
lds
ret
bound
dec
mov
or
mov
sar
clc
jb
xchg
mov
sbbb
add
adcb
sub
ja
xchg
mov
xchg
jno
and
fidivrs
clc
cmc
stos
and
adc
mov
sub
sti
cwtl
enter
jo
lods
cmpsb
sub
xchg
fldl
call
icebp
pop
les
pop
dec
out
int
jle
mov
popa
ss
xor
out
lock
add
or
fs
sbb
mov
decl
cmpsb
push
mov
out
andl
mov
xchg
in
ja
dec
mov
js
dec
sub
clc
push
les
iret
push
mov
into
sti
adc
push
xlat
cmpsl
xchg
fcmovnb
imul
in
in
mov
cmp
jne
shrb
mov
cmp
xor
popa
push
add
dec
mov
ficomps
aas
nop
pushf
mov
mov
or
test
cli
insb
cmp
cmp
mov
enter
push
ret
xor
icebp
cli
push
or
pop
pop
into
and
lea
icebp
mov
stc
dec
and
fdivrl
jae
pop
jp
pop
lret
in
jne
dec
pop
or
pop
outsb
cmpsb
jle
pop
mov
push
nop
xchg
pop
pop
cmp
loop
xchg
jge
gs
mov
pusha
divb
test
sbb
in
xor
dec
mov
ficomps
add
mov
add
push
shll
jecxz
test
inc
lahf
scas
or
jg
xlat
inc
lods
sub
mov
data16
xor
mov
dec
lods
mov
adc
lods
out
add
sbb
lods
lock
push
call
fisttps
pop
icebp
ret
dec
std
lahf
cmpsb
in
sbb
pusha
in
and
jno
aas
sbbl
inc
fdivrs
jnp
pushf
rcl
dec
cmpl
stos
shlb
add
xchg
or
insl
xor
iret
lret
lock
sub
mov
fstp
cmp
shl
pop
int3
fnstenv
mov
dec
out
loop
pop
mov
das
ljmp
mul
mov
ss
ds
cmp
jne
mov
repnz
insl
pushl
test
out
sub
sub
in
jmp
xchg
stos
mov
xchg
push
sbb
inc
mov
fstl
add
fldl
iret
fmulp
lret
insb
sbb
shll
repnz
pop
xor
cltd
jecxz
mov
fs
cmpsb
fwait
push
mov
es
loopne
mov
push
pop
fisubs
inc
adc
jae
lret
push
mov
stc
fdivrl
ret
inc
cmp
fsubs
iret
inc
sub
in
xor
or
xchg
xchg
xorb
fstp
cmpsl
xor
xchg
pop
fucomp
insb
mov
clc
stos
bswap
add
dec
push
push
dec
push
fxch
xor
fimuls
adc
mov
cld
repz
test
int
dec
dec
rolb
pusha
mov
inc
cli
sbb
aas
add
rorl
mov
inc
sbb
clts
fucompp
push
lds
outsb
les
add
xor
in
dec
imul
aam
fucomi
xor
adc
dec
das
sub
lahf
jbe
test
rcrl
xor
fidivrs
imul
in
popf
ret
ja
mov
mov
cmp
fwait
xor
mov
or
and
push
aas
cmp
and
outsb
jbe
pop
ds
dec
sbb
xchg
in
cld
xchg
xchg
pop
cmp
push
inc
dec
cmp
mov
sub
scas
imul
and
lcall
mov
jb
inc
inc
adc
adc
xchg
pop
sbb
or
push
mov
lds
jecxz
add
jle
sub
bound
jl
inc
dec
mov
sbb
adc
cwtl
xchg
nop
dec
adc
shll
or
pop
scas
mov
pop
fcoml
movsl
and
mov
sub
fmul
push
push
dec
pop
iret
adc
mov
push
out
je
inc
aaa
mov
loopne
jb
aad
sti
hlt
sub
ret
in
fidivrs
fldt
xor
or
dec
push
sub
cmpsl
add
ret
cmp
mov
enter
movsl
repnz
jns
xchg
lods
into
fbld
rcll
push
push
push
xor
fisttps
loop
addr16
stos
push
mov
xchg
lahf
fwait
test
lret
lea
jmp
shlb
xchg
mov
mov
stos
xor
xor
mov
xchg
pop
push
lods
cmc
and
out
dec
add
hlt
icebp
aad
adcb
sbb
jecxz
push
and
out
add
fiadds
rolb
sub
push
pop
mov
sub
xlat
mov
sahf
xchg
mov
push
pushf
pop
adc
test
mov
out
add
inc
pop
mov
dec
sub
lods
cwtl
and
jge
das
scas
xchg
shlb
sbb
adc
enter
jo
push
cli
push
les
mov
fwait
pop
xchg
into
jl
movsl
cmpsb
fwait
outsl
mov
and
adc
inc
pop
mov
xor
jns
adc
stos
jp
addr16
pop
les
inc
xor
mov
pusha
add
mov
and
fistpll
xchg
mov
aad
jmp
add
mov
and
dec
mov
cmp
fstps
gs
adc
and
xor
pop
pop
pop
cmpl
add
mov
cmc
inc
int
test
adc
std
dec
push
push
dec
in
sbb
push
sub
and
add
jns
jl
pop
aad
xchg
mov
sahf
enter
inc
cmp
xor
sbb
and
in
pop
sub
mull
fdivl
scas
adc
in
inc
sub
sbb
lret
mulb
sarl
ja
sbb
movsb
pop
ljmp
ss
push
inc
jge
lret
add
sub
inc
pop
fsin
sub
outsl
andl
adc
jae
fisttps
iret
push
xchg
movsb
pop
push
sub
xchg
pusha
inc
ja
mov
in
rcr
xchg
jmp
push
idivl
cli
cmc
data16
in
in
idivl
dec
rclb
push
mov
shr
cmp
jmp
xor
fcmovnbe
and
mov
leave
outsb
jg
push
push
and
out
or
pushf
adc
mov
push
pushl
and
and
xlat
mov
fldt
inc
fs
ret
scas
repnz
xchg
mov
inc
or
xor
xchg
push
xchg
inc
scas
scas
jne
dec
add
inc
dec
shrl
pxor
lahf
jo
orl
stos
repnz
add
pop
xor
sbb
dec
std
nop
rcll
push
sbb
insl
fisubrs
cli
test
adc
jmp
adc
js
inc
adc
dec
adc
ljmp
push
iret
adc
pop
ljmp
push
mov
or
scas
cld
cmp
dec
cld
aaa
jns
mov
insb
pop
filds
adc
push
jnp
arpl
loope
inc
inc
and
mov
dec
cmpsb
es
pop
adc
mov
mov
sbb
mov
in
sahf
sarb
sbb
mov
mov
and
jnp
movl
push
rorb
jne
mov
or
es
mov
adc
xor
imul
sub
or
subl
and
in
jne
lock
outsl
arpl
lds
inc
das
mov
das
das
or
lahf
aad
push
movsl
insb
data16
adc
lret
aas
cmp
test
mov
outsb
nop
mov
cmp
jb
out
gs
rcrb
pop
mov
out
lcall
iret
iret
xchg
cmp
pop
mov
dec
sbb
add
rorb
add
inc
sbb
popa
pop
outsb
adc
dec
dec
lock
xlat
cmc
es
dec
and
dec
cmc
inc
jbe
jns
and
mov
addb
movsl
int
into
cmc
xchg
inc
mov
jg
shlb
push
add
lods
cmpsl
xchg
movsl
mov
cmp
mov
push
cli
aaa
mov
jb
mov
pop
and
aas
popf
repnz
mov
adc
jbe
pushf
repnz
out
mov
cmpsl
lahf
xchg
mov
lods
and
adc
dec
nop
mov
inc
addr16
fs
lret
bound
test
lods
aaa
cmpl
outsb
into
sahf
adc
add
xchg
pop
inc
inc
dec
fistps
iret
int3
leave
push
mov
mov
shll
sarb
sub
and
pop
roll
pop
sub
and
loop
mov
push
xlat
lret
cwtl
add
xchg
mov
clc
cmp
shll
and
jp
fcoms
add
ds
sbb
jmp
stc
jp
and
ja
loopne
out
jmp
cs
mov
daa
fnstsw
adc
cmp
fsubrp
sub
xchg
pop
jecxz
in
mov
jne
or
lcall
jle
pusha
gs
or
mov
xor
aas
mov
push
and
jo
pushf
jno
mov
cmp
push
pop
adc
xchg
mulb
ret
xchg
push
stos
push
in
add
dec
push
sti
cmpsb
jno
lret
test
fwait
pop
int3
andl
xor
std
out
repnz
imul
jbe
mov
mov
leave
movsl
push
sti
call
aas
adc
xor
jge
pop
movsb
aam
das
rorb
mov
xchg
scas
shufps
leave
imul
ss
stc
sbb
incl
lahf
cli
test
or
cwtl
roll
push
in
add
inc
es
jnp
dec
dec
jmp
jle
dec
pop
pop
popf
jp
inc
add
and
push
lods
in
xor
test
mov
or
push
cmp
inc
std
movsl
or
mov
adc
mov
loope
ja
daa
push
and
mov
adc
data16
sti
ret
jp
jmp
ds
bound
arpl
xlat
dec
movsl
cmpsl
mov
xchg
inc
cmpb
mov
stos
cld
flds
or
jg
mov
in
cmc
xor
push
mov
jnp
add
jge
or
inc
outsb
dec
pop
imul
movsl
and
mull
inc
adc
add
and
mov
pop
jmp
mov
movsb
fs
mov
mov
flds
cli
jb
aaa
aas
pop
leave
fidivrs
ss
pop
mov
sbb
sbbb
lret
popl
jge
notb
test
mov
pop
fdiv
xchg
xor
hlt
or
jge
mov
scas
daa
ja
push
or
dec
fistps
lret
jle
pop
mov
sar
xchg
lods
push
or
sbb
and
and
pusha
sahf
mul
cmc
out
in
mov
dec
fistpll
ret
add
cmp
add
mov
into
pop
push
push
and
pop
mov
out
jnp
push
popf
jne
testb
fldl
mov
dec
fstps
push
jp
jns
xchg
push
call
push
jns
mov
push
jno
mov
or
outsl
popa
sbb
jo
ja
sti
adc
lds
insb
jp
dec
cs
data16
add
and
mov
ret
add
ficoml
cmc
jbe
ret
push
push
jns
and
in
out
std
jno
fs
ror
xchg
popa
lods
dec
ret
leave
sub
js
ljmp
or
xor
xchg
shrb
jle
push
sti
int
outsl
mov
fwait
jns
jle
jle
sub
adc
sbb
push
jp
in
sbbl
std
bound
xchg
negb
lods
mov
jg
mov
sbb
sub
jnp
daa
jl
insb
iret
test
inc
outsl
inc
enter
adc
mov
adc
lock
pushaw
lcall
test
push
cmp
shrl
adc
inc
cmp
rcr
cmp
out
mov
roll
out
xchg
movsl
cmp
ds
repz
sbb
popa
adc
imul
rcl
aam
sbb
push
inc
push
xchg
jmp
mov
xchg
cld
jnp
mov
stos
xor
mov
cld
mov
dec
stos
stos
cli
pop
inc
loop
mov
mov
cli
mov
mov
xchg
push
push
mov
pop
mov
jne
pop
cmp
pop
dec
xchg
pop
jbe
adc
pop
fwait
repnz
add
push
movsl
cmp
fdivp
jmp
jbe
push
roll
scas
cmp
mov
lds
and
inc
ret
lcall
les
and
dec
imul
out
sbb
fwait
xchg
jne
ret
adc
mov
pop
xor
pop
test
sub
into
pop
shll
int3
cs
or
pusha
fistl
sbb
xchg
inc
std
add
or
sbb
sub
sub
adcl
lds
es
and
jecxz
rol
dec
mov
cmp
push
dec
jno
or
stos
repz
dec
add
sub
call
add
xchg
adc
aas
cld
pushf
sub
cmp
sbb
push
shlb
adc
call
push
push
inc
fiadds
rorl
pop
aas
cmp
pop
jmp
mov
aad
jb
pop
inc
and
dec
cmp
mov
daa
lock
xchg
and
ret
push
popa
inc
adc
mov
daa
mov
cwtl
sti
push
jne
cmpsb
scas
rorl
icebp
test
adc
addr16
dec
lock
mov
stc
rcrb
jmp
scas
inc
add
mov
inc
jno
pop
mov
sbb
cwtl
repnz
out
aad
negb
scas
xchg
ficomps
dec
rcll
xchg
lds
inc
popa
lods
or
cld
fmulp
pusha
sub
ja
lods
push
shrb
and
into
jge
add
popa
cmp
iret
and
add
inc
sbb
adc
or
rolb
ljmp
aad
mov
out
add
into
popf
or
sti
stc
aas
mov
cmp
es
xchg
dec
xchg
mov
xor
lea
arpl
sbb
dec
das
js
mulb
shr
add
adc
scas
sub
pop
ror
inc
sahf
mov
mov
in
sub
ljmp
mov
jne
pop
aas
add
add
sbb
in
repz
adc
xor
xor
repz
fstl
pusha
setb
lods
mov
rclb
imul
out
addr16
inc
mov
push
aaa
pop
popa
ret
testb
pushf
xchg
pop
cmpsl
ret
std
mov
cmp
dec
aad
jmp
adc
nop
fs
dec
jge
xor
push
jmp
int3
loopne
add
pop
outsb
scas
inc
sub
pop
call
sbb
js
pushf
aaa
mov
and
mov
ljmp
mov
mov
lods
call
cmc
push
mov
jg
inc
scas
outsb
mov
and
in
fs
imul
pop
xor
sbb
andl
adc
mov
mov
pushf
xrelease
lahf
mov
std
push
mov
xchg
gs
push
aaa
xlat
jecxz
fldl
iret
mov
pop
imul
lcall
movl
rorl
mov
bound
add
jnp
or
cmp
adc
inc
leave
idivl
into
stc
nop
xchg
xchg
enter
mov
mov
ds
fwait
shlb
nop
int
clc
leave
subl
xchg
sbb
or
cwtl
push
push
outsl
add
je
popf
xchg
and
mov
jnp
mov
mov
mov
mov
mov
mov
inc
into
mov
lock
loope
push
jle
in
imul
sti
xchg
loop
fldl
and
cmpsb
sbb
iret
jmp
movsb
stc
push
jle
dec
xchg
push
push
mov
cmp
mov
mov
iret
pusha
mov
jmp
ret
ret
push
addr16
cmpl
std
emms
xlat
mov
push
out
xchg
pop
je
adc
daa
test
out
mov
and
int3
sbb
test
sub
add
js
push
adc
in
pop
hlt
inc
jle
pop
cmpl
sbb
sub
and
push
daa
xchg
push
ljmp
pop
mov
lret
push
sahf
daa
push
push
repnz
jge
js
je
mov
scas
inc
sub
enter
xchg
adc
pop
les
jp
aaa
jo
add
mov
xchg
jp
xchg
cmp
mov
rcrl
sub
mov
cmp
mov
aam
cmp
clc
adc
dec
and
mov
xchg
jae
mov
dec
jb
negb
repz
imulb
add
push
adc
test
sub
jne
xchg
in
mov
pushf
pop
jbe
sbb
stc
dec
jge
xchg
and
xchg
push
scas
stos
jmp
enter
sbbb
fmuls
push
mov
push
insb
inc
xchg
mov
lods
push
jmp
mov
scas
mov
adc
lahf
push
adc
popf
add
test
in
and
lds
mov
jg
sub
jne
out
xchg
je
dec
xchg
bswap
movsb
mov
fs
jmp
and
mov
leave
lahf
imul
and
sbb
sub
adc
adc
cld
bound
xor
mov
cmp
ret
out
sarb
shrl
xchg
mov
mov
inc
lcall
es
adc
cmp
add
call
cmp
adc
iret
add
testl
mov
sbb
pop
cs
jno
cmp
and
call
dec
enter
sbb
push
mov
mov
push
ss
lods
jne
sahf
out
and
dec
mov
nop
mull
dec
aam
andl
cmp
pop
pushf
fidivs
sbb
mov
and
cmp
mov
inc
push
mov
test
push
jo
pop
xchg
push
xchg
xorl
pop
add
test
inc
jp
into
je
add
lahf
out
test
lahf
rcl
testb
ljmp
mov
add
imul
in
incb
icebp
xchg
fisttpl
sbb
clc
andl
sahf
loope
xchg
mov
xchg
aam
inc
adc
mov
rolb
je
jg
ud1
int3
dec
movsb
mulb
push
into
lret
mov
jecxz
dec
repnz
sti
jge
and
cmc
mov
mov
xor
fld
fnstsw
xchg
nop
sbb
xor
in
dec
fisttps
mov
adc
icebp
das
das
push
es
xchg
cli
mov
sbb
fmuls
out
lahf
mov
cltd
in
cmp
sbb
mov
xchg
sbb
jno
in
xor
pop
div
decb
mov
sub
loopne
gs
push
pop
sti
mov
mov
hlt
mov
dec
or
shll
lds
sub
cmp
and
xor
outsb
ja
int
jle
pushf
pop
xchg
roll
cld
or
stos
imul
push
xchg
cmpl
pop
imull
arpl
cmp
xor
sub
out
jbe
int
inc
imul
pop
xor
or
xlat
and
xor
push
mov
nop
loope
dec
pop
jbe
fstp
xchg
int3
dec
adc
push
xchg
push
mov
sbb
xor
stos
push
jmp
aad
xor
int
lds
sbb
scas
and
add
aad
jg
fwait
loope
and
mov
push
mov
aaa
sbb
cli
mov
insb
std
lcall
push
sub
pusha
or
mov
mov
mov
pop
fcompl
leave
pop
lahf
sbb
daa
cmpsl
and
or
out
xchg
dec
pop
and
dec
mov
stc
lcall
ss
pop
ret
lock
sarb
add
jp
lret
pop
sub
inc
mov
lods
nop
push
pop
andb
add
pop
push
cmpsl
fidivrl
mov
xchg
push
adc
popf
ds
dec
jbe
xchg
mov
jecxz
lods
aaa
bound
cld
testb
pop
mov
push
rolb
decb
pusha
mov
lret
dec
adcl
adc
ljmp
fisubl
into
jnp
cltd
jmp
cltd
outsl
add
test
or
inc
loopne
and
insl
mov
cmp
inc
or
dec
and
outsb
jg
lods
addl
jne
fnsetpm(287
adcb
aad
fisubrl
rclb
loope
loopne
mov
into
add
sarb
sbb
out
ret
jmp
stos
add
stos
xchg
fdivl
and
int3
or
stc
ds
daa
xchg
sbb
addr16
enter
xor
incl
fnstsw
cmpsb
and
mov
jns
mov
xor
popa
jmp
in
pop
ja
xlat
sbbb
scas
push
push
push
je
mov
adc
xchg
lret
mov
jecxz
sbb
les
and
out
rep
dec
or
xchg
sbb
mov
mov
mov
lods
push
push
fs
enter
cmp
xchg
stos
xchg
mov
insl
mov
and
cmp
rcr
das
inc
push
sub
add
push
sarb
adc
paddd
rcrl
push
add
mov
add
leave
cltd
mov
push
test
shll
pop
faddl
aaa
lcall
into
adc
dec
test
sbb
fdivp
and
lret
insl
insb
inc
ds
fdivrl
pushf
bound
lret
cli
imul
lahf
jle
imul
fadds
fsubp
inc
xchg
scas
cli
jecxz
and
leave
roll
loope
insl
addl
pushf
les
mov
pop
out
mov
inc
xlat
cmp
jne
inc
lret
movsl
enter
cwtl
cltd
mov
mov
and
jmp
fnstcw
mov
mov
push
adc
lock
hlt
aam
mov
fwait
bound
adc
aas
js
inc
push
inc
and
jmp
stos
and
ret
scas
pop
vshufps
xchg
inc
aad
js
imul
pop
aaa
in
or
cmp
daa
movsb
rep
out
dec
sbb
ds
push
call
shrb
pop
mov
dec
xchg
ljmp
xor
arpl
insl
ss
pop
inc
in
dec
call
and
ja
add
jnp
xchg
std
mov
xchg
in
icebp
jo
test
dec
inc
mov
adc
adc
mov
sbb
dec
cmp
rorl
cmpb
push
pop
movsl
and
dec
not
repnz
inc
mov
dec
or
inc
fdivrl
add
mov
rcrl
lret
mov
adc
sbb
sub
mov
mov
inc
jns
jbe
or
lahf
pop
mov
mov
rclb
insb
inc
sbb
std
icebp
rclb
cs
pop
shl
inc
mov
clc
ljmp
data16
mov
push
mov
sbb
dec
xchg
jb
add
mov
sti
jb
inc
insl
push
xor
cmpsl
mov
loope
and
fisubl
das
push
cwtl
push
outsl
jbe
jo
cmp
mov
in
ja
pop
inc
jl
adc
fs
das
mov
jg
test
shlb
daa
dec
pop
out
cmovle
ss
addb
mov
push
insb
test
movhps
sbb
or
inc
lock
aad
test
sub
sub
test
pop
cmp
outsl
xchg
test
fucom
lods
aaa
xorl
adc
scas
sbb
mov
pop
push
push
aas
out
cltd
clc
mov
lods
inc
push
mov
cs
inc
das
je
movsl
js
jp
sub
adcb
setg
rcrb
push
mov
or
xchg
and
insl
push
sub
dec
mov
jne
test
sbb
jne
sub
cs
inc
mov
imulb
loope
jg
jl
push
jg
out
in
mov
rolb
push
addr16
push
dec
ja
sbb
jmp
xor
cmp
jb
mov
scas
pop
jo
lea
mov
sti
adc
stos
push
nop
arpl
sbb
pop
fsubrs
popa
test
or
mov
mov
xchg
jle
mov
fcomi
inc
cmp
cltd
mov
jb
and
pop
pusha
adc
aam
push
and
add
jle
ja
bnd
lahf
jno
call
int3
fwait
shl
insl
dec
mov
notb
mov
outsb
lea
sbb
and
mov
inc
nop
dec
xor
lcall
lcall
xor
lods
jg
push
inc
andb
cmpsl
and
mov
cmp
xor
jno
sbbb
jae
cmp
push
jg
insb
dec
sbb
es
outsb
stos
loope
int
and
dec
addl
in
xor
and
fcoml
idiv
inc
cmp
out
popf
shlb
data16
ret
adc
cs
inc
and
adc
jmp
xchg
je
cmp
mov
lods
sti
sbb
sahf
loope
jbe
push
mov
nop
or
insl
rorl
xor
aaa
insb
fnstsw
or
add
cld
adc
js
cmpsl
sahf
jg
repnz
add
adc
inc
xchg
sub
xchg
aad
rcrb
cwtl
cli
arpl
arpl
fwait
adc
mov
push
mov
add
out
xchg
insb
inc
mov
cmp
inc
xchg
inc
cmp
pop
inc
xchg
add
sub
inc
insb
scas
dec
stos
push
jns
push
popl
out
adc
mov
add
inc
insl
stos
in
sub
aam
lods
mov
jae
mov
outsl
stos
sub
mull
imul
mov
in
popa
out
stc
adc
push
ffree
addr16
in
cld
repnz
test
sub
incl
sub
push
sti
sub
rcll
movzbl
out
movsb
rclb
add
dec
data16
adc
jp
cvtps2pd
ret
sbb
out
push
rclb
push
push
jne
or
push
mov
xor
or
dec
xchg
int
jo
shll
xor
movl
dec
adc
inc
pusha
sahf
jns
mov
xchg
lret
out
mov
cmp
push
js
iret
or
ja
sub
mov
mov
sub
cmpsl
int3
iret
mov
cmpb
or
jl
xchg
sub
into
add
sub
mov
int3
pop
fistl
lahf
push
jle
dec
lods
data16
push
adc
cmpsl
cmp
fneni(8087
sbb
jl
addr16
mov
outsb
stos
jmp
jg
popa
stc
insb
pop
sbb
or
dec
or
pop
mov
xor
sbb
shll
push
adc
adc
xchg
negb
pushf
mov
loope
neg
ret
stos
dec
push
ret
push
xor
pop
xor
fwait
mov
or
orb
addb
subl
aam
pop
sbb
rcrl
hlt
adc
popa
loope
ja
xchg
jecxz
xlat
std
lret
xchg
int3
std
pop
push
dec
jbe
imul
into
sub
paddq
xchg
aad
in
push
sub
jp
into
sub
scas
daa
inc
dec
push
and
out
les
lret
ja
or
mov
ja
add
adc
jecxz
and
loope
xor
dec
cmovno
mov
adc
dec
int3
std
pop
xor
mov
inc
js
roll
ret
movsl
inc
push
dec
inc
int
mov
xchg
adc
cwtl
outsl
fstpl
mov
subb
sbb
push
push
push
popf
setno
inc
adc
sbb
insl
jo
jnp
and
lock
cmc
jno
test
dec
and
inc
stc
sub
mov
lock
push
shl
nop
push
mov
or
push
or
into
jno
aad
ja
mov
jg
sub
sbb
test
scas
xchg
jmp
dec
pusha
rcl
insb
adc
ljmp
cmpsl
enter
aad
imul
imull
fmul
jbe
or
xchg
and
and
movsl
rol
lcall
pop
mov
stos
dec
cmc
sbb
test
inc
ss
icebp
add
jae
inc
test
pop
les
push
mov
clc
stc
sub
mov
mov
je
and
aad
pop
sbb
out
and
dec
dec
mov
testl
push
fsubs
sbb
sbb
xorl
cmp
and
lds
sarb
mov
mov
mov
add
loop
shll
jb
daa
cmp
push
int3
mov
ret
ret
jmp
data16
push
es
incb
or
leave
ja
add
loope
lret
mov
sub
push
fdivrl
sbb
in
jne
imul
testb
jbe
adc
test
push
mov
aas
nop
pusha
xchg
mov
cmp
inc
jmp
pop
mov
push
fidivl
mov
mov
into
pop
sbbl
mov
mov
sub
int
add
pop
fwait
lods
pusha
jle
or
cmp
dec
out
ret
rorb
jo
movsb
in
fs
popa
push
iret
sbb
aam
out
adc
int
and
outsb
mov
jno
mov
mov
lea
or
pop
sbbl
jo
lahf
mov
and
addr16
push
cwtl
les
xchg
dec
cli
iret
ret
or
lret
pop
in
pop
test
ret
pop
lahf
aas
cmp
xorb
loopne
jbe
jae
adc
pop
cmpb
pop
jl
arpl
out
push
lods
pusha
mov
mov
test
inc
xor
in
sarb
push
loop
pushf
cmp
lods
pop
mov
lock
mov
popf
add
sbb
jo
gs
pop
xchg
fisttpl
pop
ja
loop
inc
in
inc
cld
hlt
mov
cmp
mov
rol
loope
mov
pop
pop
dec
sbb
into
lea
rcr
andb
pop
das
cltd
cmp
insl
push
mov
sbb
mov
rcrl
dec
js
lcall
mov
sarl
xchg
fldcw
push
stc
test
out
inc
sub
jne
dec
shrl
mov
dec
adc
iret
add
inc
pop
inc
mov
pop
mov
cli
insb
lahf
jle
in
fcoml
jmp
in
cmp
popf
fstps
xor
or
or
repnz
add
or
sub
mov
lods
add
inc
stos
mov
ret
jmp
cwtl
xor
sahf
mov
sahf
or
xchg
dec
rclb
mov
cmovg
fldt
adc
ficomps
pop
out
in
mov
inc
ret
mov
mov
cmp
add
test
fwait
sahf
mov
lds
sub
mov
hlt
lret
pop
aas
sbb
cmpsb
push
xchg
pop
lcall
push
in
pop
cmp
fstl
sbb
pop
inc
sbb
xlat
xlat
ret
pushf
test
insl
add
cmpsl
lea
aaa
inc
xlat
adcw
lret
sub
cltd
stc
mov
into
jb
xchg
fmull
and
add
dec
xchg
jns
ret
movsb
xor
rolb
sub
in
ret
ret
dec
adc
jl
xchg
xchg
inc
cmp
loopne
aam
jmp
xorl
xchg
std
jg
call
loope
push
mov
cmp
arpl
push
test
cld
sbb
outsb
jp
imul
fisttpl
xor
js
add
cld
mov
adc
lret
movsb
imul
stc
mov
cwtl
xchg
or
push
into
push
pop
cltd
aad
cmpsl
fisubrs
mov
test
movsb
adc
in
dec
sub
js
dec
push
in
ss
in
cmp
lahf
xor
shr
dec
nop
cld
popf
adc
into
jb
cmpsl
jecxz
mov
int3
es
stos
jl
dec
and
mov
pop
int
movsl
dec
pop
push
in
filds
lahf
add
cmp
xor
jle
lea
dec
out
shrl
ljmp
mov
pop
shr
ss
xchg
int3
ja
outsb
push
push
lds
mov
sub
ss
pop
mov
jmp
push
fdivrl
subb
cmc
push
shlb
pusha
mov
aaa
mov
dec
aas
xchg
pop
xchg
loop
outsl
and
push
jnp
mov
sub
mov
pop
mov
cli
addr16
enter
mov
xchg
lods
push
pop
scas
ds
xchg
add
inc
insb
cmp
iret
icebp
xchg
xchg
sub
rcll
je
xchg
loopne
jae,pt
test
xchg
or
mov
jle
adc
sahf
dec
ds
jp
pop
dec
cmpsl
cmp
sbb
adc
fadds
popl
mov
sbb
jns
mov
movsb
shlb
fucom
and
pop
sbb
mov
xlat
lods
jae
shll
or
push
add
add
cmp
xorl
cs
inc
dec
dec
incl
mov
sub
push
jge
ss
mov
imul
sbb
xchg
lock
addl
fisubrs
loope
lods
fisttpll
xchg
stos
adc
aad
and
add
inc
ljmp
dec
push
and
fists
dec
jns
insl
aaa
aad
enter
cmp
mov
xor
push
xchg
popf
sub
pop
icebp
gs
add
push
push
stos
outsl
stos
test
xchg
mov
mov
and
xor
movsb
dec
jp
or
jo
mov
imul
jno
rcl
jbe
dec
pop
jecxz
lods
xlat
push
std
outsl
lret
xor
fwait
push
nop
lods
jb
jae
pop
and
cmpsb
out
test
ret
mov
cmp
xchg
dec
pop
mov
dec
dec
stos
jg
int3
test
lods
ror
lods
outsb
int
mov
sub
xor
shll
pop
jmp
xor
inc
fidivrs
or
mov
loopne
mov
ja
jo
loope
dec
fs
jbe
cli
jns
dec
sbb
pop
mull
imul
sbb
mov
lock
aad
scas
push
jns
rcr
enter
sarl
popa
push
adc
xchg
inc
fstps
mov
movsb
movsl
xor
cmp
jp
sub
pushf
mov
mov
flds
inc
das
sbb
add
push
fsubrl
push
mov
xchg
dec
sarb
sbb
in
xor
aad
sub
pop
xor
aad
stos
sahf
gs
mov
cld
push
mov
push
or
pop
xor
pop
mov
or
mov
mov
xchg
push
jge
gs
xchg
sub
mov
pop
or
mov
les
mov
push
aad
and
cmpsb
lcall
xchg
sti
add
lea
ljmp
frstor
mov
hlt
lds
mov
aad
xor
mov
cmpsb
ret
das
scas
cmp
adc
mov
cs
inc
jge
icebp
mov
jl
aam
dec
ja
sbbb
xor
cmp
and
or
sti
cmpl
rcrl
or
notb
fidivs
adc
add
inc
or
stos
dec
jae
dec
aas
and
shlb
jg
cmc
gs
dec
xchg
or
arpl
xchg
aam
je
fdivs
fwait
scas
mov
dec
addr16
xor
or
adc
jg
jno
mov
and
call
aas
iret
xor
bound
xchg
sahf
shrl
cli
das
rclb
aaa
and
ljmp
outsb
mov
test
xor
adc
pop
loop
push
lea
fwait
mov
bnd
xor
push
add
pop
lcall
xchg
aad
popa
pop
rcrl
test
mov
inc
mov
aas
clc
push
xchg
xor
call
adc
adc
mov
adc
aaa
sarl
jns
push
inc
pusha
sbb
shll
roll
nop
mov
mov
mov
pop
cmp
cli
pop
xor
mov
call
pop
jbe
or
cmp
xor
adc
lret
in
rorb
jge
insb
push
fisubrs
xchg
in
cmpsl
cmp
mov
sbb
push
into
icebp
test
testb
push
mov
lret
imul
push
test
test
pop
test
dec
xlat
add
adc
xchg
jnp
or
cwtl
dec
inc
mov
pop
das
ret
ljmp
xlat
popa
xchg
adc
std
jle
popa
push
mov
pop
fs
es
mov
fmul
sbb
mov
movsb
pop
je
push
bound
iret
sbb
push
fwait
push
mov
and
cmpsb
insl
std
mov
pop
addl
mov
jns
pop
je
cld
fsubl
lcall
in
xchg
test
cli
test
call
lahf
mov
adc
mov
sar
in
shld
ja
dec
pop
mov
dec
fstpt
jmp
mov
out
fwait
std
jp
sbb
lahf
mov
popa
jne
cmp
pushf
sub
jns
push
negb
addr16
xchg
sbb
inc
push
and
in
jne
sbb
test
hlt
cwtl
xchg
test
sub
pop
rclb
out
sub
mov
or
mov
mov
dec
mov
mov
and
insb
pop
mov
je
in
dec
fistps
ret
jl
mov
stc
leave
cmp
sbb
das
inc
test
sahf
xchg
xor
mov
bound
cmc
xlat
push
mov
mov
sbb
popf
test
xchg
xor
inc
xchg
sbb
int3
bound
fildl
aaa
xchg
lret
push
and
imul
out
push
adcb
shrb
inc
jp
mov
fmull
sub
mov
or
jg
mov
sbb
popa
pop
jle
fucompp
shr
xchg
xor
xor
add
dec
out
pop
push
scas
imul
xor
add
mov
adc
mov
mov
nop
cltd
das
out
lock
stos
test
aas
dec
rep
rcrl
lods
pushf
in
sbb
fsts
inc
jne
dec
or
or
and
cmpl
call
xor
adc
cmpsb
pop
or
jmp
sbbb
scas
mov
xchg
jge
xchg
repnz
loopne
shlb
lock
pop
movsb
jb
clc
jmp
fs
jbe
xchg
push
loop
and
jo
push
mov
or
mov
jnp
stos
ret
insl
push
mov
mov
jnp
outsl
push
enter
in
lcall
push
aas
or
in
xchg
roll
jle
clc
cmp
cmp
sub
and
fiadds
lret
jnp
rcrb
aas
pop
xchg
mov
rcl
enter
sbb
iret
dec
fildl
in
dec
and
rorb
ret
push
mov
mov
or
mov
sub
fnstsw
jp
gs
loop
enter
pop
sub
push
inc
fwait
lock
inc
repz
dec
mov
inc
dec
mov
xchg
xor
dec
push
cmpsl
mov
stos
sub
add
cmp
ljmp
loope
push
les
jp
mov
subl
les
ljmp
sub
les
shll
push
cmp
or
daa
iret
mov
mov
lds
dec
sbb
sub
shl
sbb
jge
popf
loopne
stos
jmp
pusha
mov
test
jmp
sub
adc
sbb
jg
shrl
jne
adc
je
ja
aad
push
push
repnz
outsl
pop
adc
popf
adc
ret
iret
sbb
scas
mov
jp
mov
xlat
push
push
sub
mov
sbb
sbb
adc
fiadds
mov
outsl
ss
xchg
pop
lods
mov
call
xchg
testb
adcl
mov
js
dec
mov
popf
fiaddl
lcall
in
outsb
add
fdivr
xchg
mov
pop
int
pop
std
out
push
jno
add
mov
sub
out
sub
fistpll
stos
push
gs
inc
and
xlat
jge
cmc
push
sbb
and
mov
in
mov
pop
int3
add
repnz
add
in
lods
mul
lock
cmpsl
loop
xchg
in
fnstenv
inc
jle
imul
iret
mov
xor
lea
enter
stos
in
sub
jns
ficomps
pushf
mov
jne
mov
insb
lods
mov
mov
je
jb
mov
push
icebp
loopne
iret
addl
cmp
scas
icebp
out
es
or
add
dec
ja
jb
inc
test
push
fcompl
xor
fidivs
mov
sub
or
or
or
mov
arpl
in
out
mov
testb
aaa
stos
jo
mov
fidivl
test
dec
popf
pop
xlat
imul
in
fdivs
ret
or
addb
adcb
es
mov
stc
xchg
mov
mov
xchg
out
iret
mov
push
inc
xor
shlb
lods
mov
in
pop
inc
adc
lcall
inc
lret
pop
cmp
aaa
xchg
loope
pop
popa
int
dec
push
mov
add
inc
inc
add
add
dec
fimull
stos
nop
out
repz
xchg
fcompl
push
mov
mov
xchg
dec
pop
xor
mov
or
leave
sbb
xor
cmc
mov
jne
pop
lahf
and
pop
jl
mov
jae
adcl
sub
sbb
ficomps
inc
jae
scas
std
xor
and
mov
jmp
jecxz
mov
fstl
loopne
jp
jo
xor
fldl
xlat
dec
iret
pop
aaa
sbb
stos
fwait
xor
arpl
or
popl
adc
sbb
out
jnp
pop
dec
pop
cs
mov
nop
push
pop
test
xchg
push
scas
or
jae
sarb
mov
dec
cs
push
pop
add
daa
stos
int3
push
addr16
jecxz
xchg
sbb
adc
mov
loopne
xor
jb
rorb
divb
dec
jno
mov
mov
xchg
mov
scas
push
mov
repz
xchg
jmp
pop
movsl
add
mull
cld
in
sub
xchg
push
js
data16
pop
cmp
or
loope
js
cmp
rclb
daa
xor
out
scas
and
jb
mov
cmpsb
dec
es
imul
int3
ret
call
adc
je
leave
push
icebp
pop
rol
xchg
mov
push
jae
xchg
lcall
ret
and
es
cwtl
jne
mov
pusha
cmp
dec
lods
jno
add
std
jne
or
out
mov
out
lock
mov
add
cmpsb
push
adcl
std
add
pop
idivb
scas
mov
loop
stc
pop
xor
dec
inc
add
imul
movsl
jge
gs
aas
jae
shl
arpl
nop
dec
shlb
push
mov
into
nop
jae
fadd
aas
adc
pop
push
xchg
sar
enter
leave
imul
jmp
outsb
fnsave
mov
sarb
inc
add
inc
daa
in
cmpsb
rcrl
or
mov
or
adc
lret
mov
lock
cmpb
xor
pop
sbb
push
sarb
mov
or
aas
jno
ds
jnp
sub
aam
test
dec
in
nop
jge
out
push
into
fldcw
jg
movsl
mov
jns
test
sbbb
inc
xchg
ja
jns
and
inc
loop
imul
and
push
mov
out
jmp
push
push
jo
xor
adc
into
out
inc
int
cmp
jo
push
fcoml
scas
xchg
add
sbb
mov
fnsave
mov
lds
and
shl
lods
loopne
mov
mov
adc
fdivrs
into
arpl
mov
sub
mov
addr16
pop
sub
out
adc
daa
pop
mov
jecxz
sarl
and
int3
fwait
push
dec
enter
lret
pop
pop
xor
icebp
daa
jne
adc
jp
subb
xor
sahf
add
aad
scas
mov
mov
add
push
ret
sbb
xor
cmpsb
cli
push
in
ja
pop
cmp
mov
jne
aaa
dec
add
or
into
push
mov
mov
sbb
xor
ret
mov
pop
and
in
int3
or
adc
mov
add
mov
xchg
jb
jo
jmp
test
lret
jle
movsb
mov
add
inc
stc
cmpsb
push
pop
lret
enter
cmc
loope
mov
ja
sub
stc
push
sbb
xor
lods
xchg
cmp
xchg
cmp
cmp
dec
pop
cmpsb
lret
pop
mov
push
inc
iret
xor
sbb
ret
lcall
mov
ds
inc
hlt
mov
xchg
add
xchg
popa
fisubrs
xchg
dec
movsl
pop
popf
dec
test
cld
fwait
mov
imul
stc
cmp
icebp
add
or
test
push
pushf
loope
jl
pop
je
insb
xchg
mov
lods
test
pop
push
pop
pop
addr16
jge
in
ret
clc
es
cmp
dec
pop
ss
inc
ds
scas
popf
fcmovne
scas
xor
add
nop
es
dec
pop
sbb
ss
loopne
mov
outsl
add
sub
pop
addr16
cmpsl
in
sub
mov
add
fs
push
dec
sbb
and
aaa
mov
sbb
sub
mov
mov
xchg
pop
jno
out
pop
jg
add
jp
sub
out
cs
cmp
aam
mov
or
imul
lahf
fwait
sbb
fsubl
dec
pop
or
cli
push
sub
icebp
pop
xchg
push
fisubrl
adc
sahf
mul
jg
lret
rcll
imul
cmp
pop
sti
out
sar
mov
push
pop
pop
pop
nop
rcl
cli
aad
pop
mov
insl
push
add
push
pop
jp
daa
xchg
sbb
incl
incl
mov
jae
mov
sbb
mov
mov
aam
sub
iret
pop
clc
call
les
inc
push
jmp
mov
and
jbe
out
or
aas
les
outsl
push
jg
xor
in
imul
mov
cli
hlt
sub
mov
movsl
and
addr16
mov
cmp
add
push
mov
or
mov
add
sub
pushf
pop
sbb
outsb
push
lcall
addr16
mov
mov
mov
sub
push
jp
movsb
inc
pop
rol
jnp
add
mov
in
inc
adc
mov
xabort
pop
aam
inc
jbe
pop
mov
bound
lods
idivl
adc
cmp
popf
movsb
gs
fisubl
insb
and
testb
mov
sub
das
insl
ds
xchg
jo
jg
lods
fcoms
shr
jae
or
push
inc
sub
mov
push
add
and
sahf
out
xor
mov
push
sub
pushf
sahf
and
xor
add
mov
xor
fcmovbe
negl
jno
jo
adc
leave
rclb
lcall
push
cld
fstpl
lods
xchg
dec
sub
dec
push
test
shrl
inc
cmpsl
fisubrl
xchg
xchg
jmp
mov
cmpsl
insl
xchg
jp
sub
in
lea
cltd
xchg
push
jge
sub
or
jo
cwtl
cwtl
iret
dec
pop
sahf
dec
cmp
test
data16
out
add
movb
mov
std
sbb
popl
jmp
mov
mov
and
pop
jmp
sarb
mov
xor
imul
movsl
add
ret
add
inc
push
js
ror
or
sbb
fsubl
jg
sbbl
sbb
xor
xchg
repnz
fstpt
jne
pop
push
cld
fidivl
xorl
cmp
lods
ss
dec
rcrb
push
nop
cmp
mov
pop
bound
xlat
push
add
addr16
popa
add
sbb
arpl
mov
mov
jge
sub
out
xchg
cmp
fs
pop
jle
xchg
mov
xchg
mov
ja
insb
push
pop
fxtract
je
je
mov
jbe
mov
cmp
out
out
or
xchg
imul
pop
cmp
scas
data16
loope
sub
or
add
sub
lock
testb
shll
cmpsl
lock
mov
fwait
push
cmp
aaa
inc
or
mov
outsl
fnstsw
dec
xchg
inc
lea
mov
int
lcall
imul
je
mov
out
mov
push
sbb
test
mov
sahf
gs
cli
mov
je
inc
shrl
mov
pop
fadd
pop
inc
and
push
out
sbb
and
lahf
ret
pop
insl
add
xor
out
jo
fcom
xor
pusha
prefetch
mov
mov
movl
pop
in
movsl
test
push
mov
lods
cmpl
ljmp
popf
pusha
cmpb
not
xor
cmp
adc
and
push
sbb
xchg
cmp
xchg
scas
push
dec
jbe
lea
aad
hlt
pop
and
cmp
enter
cltd
push
enter
cld
popa
daa
prefetch
or
sbb
ret
inc
fsubs
ffreep
or
cli
lods
outsb
fwait
rol
mov
out
mov
push
clc
pop
push
xchg
test
leave
sahf
test
rcr
xlat
iret
insl
jmp
sbb
sbb
test
shll
test
sbb
adcl
fnstsw
push
push
inc
sahf
lea
xchg
push
outsb
inc
loop
inc
dec
xchg
mov
fsts
mov
pop
mov
jl
sub
stos
inc
mov
mov
pushf
sarl
mov
mov
ret
test
leave
enter
pop
les
inc
adc
or
rcrb
adc
loop
dec
jmp
in
adc
loop
pop
sbb
xor
or
mov
leave
sbb
aam
mov
inc
add
aad
xor
adc
xchg
jb
das
aad
pushf
jl
inc
daa
test
stos
pop
mov
xlat
mov
popf
cmp
mov
shlb
test
ds
cmpsb
or
dec
loop
out
pop
inc
jno
loopne
jg
xor
popl
or
adc
sarb
pop
dec
fnstcw
pop
cmp
call
mov
jmp
adc
pop
xor
test
pop
int3
scas
std
xorl
dec
enter
adcb
push
in
pop
je
xor
fs
pop
fs
stos
cmp
pop
adc
push
call
cmp
repnz
pushf
sub
cmpsb
cmp
cmpb
jnp
xchg
xchg
pop
xor
cmpsl
ret
adc
jle
or
and
hlt
lds
andb
rcll
and
sbb
stos
lahf
js
iret
or
xor
pop
cltd
mov
adc
or
in
sbbb
xchg
xchg
and
test
add
pop
ds
mov
cmp
addl
loop
rcrb
iret
xchg
leave
cmp
sbb
aam
cmpsl
bound
pop
lret
xchg
push
aad
or
mov
imul
jg
cld
and
cmpsl
bound
mov
add
adc
popa
orl
push
xchg
adc
fbld
jne
aam
mov
out
js
ja
mov
jbe
fisubrl
out
jmp
push
scas
stos
insb
sti
or
loopne
add
cwtl
cmpsl
into
out
flds
popa
sbb
mov
or
mov
fsts
dec
mov
fidivrl
mov
inc
ret
dec
sub
mov
daa
scas
lret
and
sub
shll
int
mov
enter
push
fimull
or
fsubrl
rorb
movsl
cmp
pop
mov
push
inc
iret
test
js
dec
pop
and
push
stc
pop
sarb
bound
arpl
sar
movsb
jp
cmp
pop
cmc
mov
pop
cmp
jg
pusha
cmpsl
iret
jnp
sbb
add
cli
enter
test
or
sub
mov
push
xor
hlt
in
xchg
sbb
movsl
dec
mov
push
push
pop
mov
roll
stc
es
scas
popa
push
cs
and
ret
push
repz
pop
movsb
adc
out
int3
mov
mov
out
mov
nop
mov
imul
mov
xchg
insb
jmp
inc
aas
jno
push
dec
nop
adc
mov
xor
xchg
adc
push
pop
mov
fcomps
call
pop
lock
adc
mov
aaa
inc
iret
cmp
adc
iret
mov
bound
ds
pusha
xorb
jge
mov
pushf
push
test
inc
divl
fcmovu
in
jp
fisubrs
nop
scas
dec
mov
mov
cwtl
xchg
imul
pop
jns
mov
in
mov
fs
mov
imul
iret
js
jns
xor
ljmp
sbb
or
and
mov
aad
cmpsb
sub
into
mov
mov
dec
rcll
push
dec
enter
add
adc
cs
cmp
fsubs
iret
jmp
mov
cwtl
insb
mov
dec
rolb
mov
or
dec
xor
adc
xor
or
sub
rorl
mov
push
lret
pop
xor
js
adc
scas
push
nop
xchg
loopne
sahf
mov
lock
xchg
push
cmp
addr16
pop
out
jmp
sti
pushf
mov
addb
and
sub
sar
testl
push
add
inc
mov
jbe
fdivr
cmp
cmp
push
ljmp
mov
lods
mov
daa
repnz
adc
dec
nop
sbb
lcall
mov
or
adc
stos
aam
loopne
cli
nop
jg
bound
mov
fdiv
fsts
and
push
pop
xchg
icebp
push
repz
call
andl
add
lods
xor
mov
dec
mov
sub
in
xchg
or
bound
test
inc
shlb
pushf
outsl
setne
inc
sbb
jmp
mov
ss
pop
mov
out
jge
fcomip
adc
xor
or
mov
push
add
fwait
insb
and
xlat
fadd
adc
iret
and
mov
outsb
push
and
jg
or
jns
jl
sbbl
sub
mov
add
jnp
decl
and
mov
adc
jbe
cmpsl
add
imul
cld
push
xor
push
xchg
imul
shrb
xor
pusha
iret
dec
es
out
call
and
cmp
jnp
pushf
test
out
popf
mov
stos
jecxz
pushf
outsb
or
xchg
mov
xchg
daa
mov
sub
push
cld
pusha
ficompl
and
pusha
xor
mov
lea
int
adc
fbstp
pop
jle
pop
xlat
imul
add
adc
dec
pusha
jae
pop
dec
call
je
push
xchg
mov
nop
xor
jns
jmp
mov
or
sub
mov
xchg
cltd
sbb
loope
iret
cli
cmp
hlt
mov
jl
inc
or
inc
push
sbb
push
jnp
sbb
outsb
into
add
pop
dec
test
movsb
aas
dec
stos
scas
mov
mov
jne
dec
sti
mov
or
adc
repz
fcmove
arpl
scas
shlb
scas
pop
cmpsl
loopne
jle
test
push
movsl
mov
mov
and
fmuls
jae
daa
test
loop
jbe
sbb
dec
lods
movsb
sub
or
lcall
data16
fidivrl
add
ss
mov
mov
jae
mov
sti
cmc
or
fcomps
adc
bound
xchg
mov
jne
das
sub
cmp
movsl
sub
outsl
mov
test
mov
push
je
inc
xor
push
ljmp
pop
shr
pushl
int
loop
or
dec
in
fcoms
jno
inc
rol
hlt
xlat
mov
jnp
and
mov
cmpsl
dec
out
out
push
das
dec
loopne
dec
cli
mov
es
pop
jge
aas
ficompl
mov
lret
mov
or
stos
add
inc
lcall
scas
aam
repz
cmp
mov
mov
int3
into
push
jge
in
lock
enter
pop
pop
mov
mov
test
stc
pusha
or
jns
fwait
inc
adc
mov
mov
lods
and
mov
pop
std
pop
cltd
aas
lret
cmp
sar
scas
jl
cmp
push
imul
sub
jnp
pop
jecxz
xchg
mov
insb
sbb
xchg
and
ret
lock
xor
and
ja
or
add
jmp
aam
pop
std
jnp
rcrl
adc
add
push
push
mov
fsqrt
out
fwait
dec
dec
fnstenv
jle
fs
cli
mov
xor
iret
mov
dec
cmp
arpl
inc
fsubl
les
bound
int
mov
dec
addr16
test
or
jmp
aad
lcall
icebp
mov
xchg
xor
sbb
fwait
mov
mov
fsubrp
and
out
mov
ljmp
mov
fisttps
xchg
adc
lcall
or
shll
aaa
xchg
int
loopne
dec
dec
cmpsl
stos
sbb
mov
sub
ret
fcmove
es
push
adc
fistpll
push
dec
sbb
loope
jbe
mov
pop
or
pop
roll
data16
sbb
jmp
jno
stc
jb
mov
xchg
sub
adc
push
popf
mov
sbb
mov
fidivrl
and
repz
inc
das
call
int3
cltd
pop
jle
aam
dec
and
orl
cld
dec
data16
rclb
cmpsb
arpl
lds
enter
leave
lret
cltd
int3
add
lods
xchg
clc
jp
into
mov
sbbb
fstpl
aaa
dec
pusha
imul
outsl
clc
inc
nop
daa
cs
fcoml
bound
ds
repnz
jp
adc
cmp
xchg
jo
add
icebp
cli
xchg
stos
int
pusha
mov
sti
sbb
pop
or
lret
push
adc
out
in
sub
clc
or
aad
cli
sub
jecxz
dec
es
sbb
push
dec
aad
sub
mov
sbbb
es
jnp
lea
or
jecxz
nop
cmp
sbb
scas
clc
mov
negl
sbb
xchg
add
dec
dec
int3
and
leave
lahf
jg
dec
and
or
jb
dec
pop
cmpsb
repz
imul
mov
lods
das
jbe
or
fs
scas
mov
jmp
push
std
pop
and
out
ja
jbe
cld
enter
ret
inc
xor
and
mov
mov
mov
mov
scas
call
add
pusha
push
push
cmp
mov
xchg
mov
fmul
mov
xor
ficompl
push
dec
fdivp
mov
in
xor
mov
adc
out
ss
xchg
cmpsb
cmc
roll
pop
xchg
addl
loopne
in
sub
in
mov
xchg
and
push
sub
cli
lret
inc
adc
test
out
adc
fcomip
cltd
cmp
dec
and
cmp
int3
mov
xchg
mov
test
repnz
cmp
aaa
test
pop
push
mov
pop
and
mov
sub
ss
and
mulb
jne,pt
lahf
pop
jns
xorl
push
jae
cwtl
sub
mov
mov
jmp
jmp
mov
stos
gs
push
xchg
stos
mov
addr16
cld
cltd
jne
daa
je
loopne
xchg
repnz
insb
stc
call
les
mov
and
push
out
mov
fmuls
xchg
shll
mov
sbb
fwait
mov
loopne
and
add
jae
das
push
shll
cli
rorb
int3
cmp
xor
pop
sub
push
test
and
cmp
popa
imul
and
adc
aad
bound
fldt
jnp
add
and
addl
rcrl
fisttpl
lods
sbb
dec
add
mov
rcrb
mov
imul
imul
jo
fwait
decl
mov
gs
or
and
iret
jae
sub
cmpsb
or
insb
insl
fcoml
sbb
cmc
add
iret
int3
inc
mov
iret
inc
stos
cmp
loopne
loope
pop
aas
inc
stc
cmp
adc
add
orb
jno
imul
lret
mov
int
iret
xor
in
mov
lods
andl
stc
sub
fstps
dec
mov
xchg
aaa
leave
pusha
push
insb
idivb
xchg
or
lods
js
je
mov
aaa
int
xor
aam
xchg
fs
addl
xor
aam
mov
repnz
xor
mov
pusha
pop
push
mov
cwtl
je
xor
xor
icebp
dec
popf
pop
pushf
jne
jg
loop
insl
ret
dec
adcl
mov
push
imul
fadds
jle
js
cmp
pop
mov
addb
in
cmp
movb
iret
ljmp
icebp
pop
pop
dec
aaa
add
nop
adc
insl
push
int3
icebp
pop
es
xor
popf
adc
inc
jo
repnz
movsb
push
fistps
pusha
push
mov
jbe
dec
jne
push
ret
fldenv
inc
inc
test
mov
sbb
sti
in
inc
andb
fistl
xor
xchg
lret
lock
dec
mov
pop
dec
loope
leave
fsubs
shll
fmul
aas
pop
or
andl
sub
sbb
lcall
push
scas
int
dec
and
mov
xor
or
mov
mov
xor
mov
fimuls
repz
mov
adc
cmpsl
ret
movsb
push
xchg
and
sub
rcrb
sbb
inc
xchg
cmpsb
stos
in
jnp
addr16
and
and
ja
cmp
mov
jle
adc
cmc
popa
icebp
cmp
mov
push
mov
xchg
dec
lahf
movsl
sahf
sub
mov
adc
test
jne
jbe
movsb
test
mov
push
jnp
jb
mov
mov
mov
int3
mov
add
mov
call
xor
repnz
jmp
cmp
xor
das
or
cmp
xlat
mov
xor
pusha
iret
push
pop
fcompl
adc
fnsave
movsb
ljmp
dec
push
in
mov
jno
cmp
adc
stos
mov
xor
cmp
in
jo
lods
dec
push
push
and
fidivs
adc
add
popf
cwtl
sub
dec
int
int
repnz
pop
mov
pop
xlat
push
negb
or
repz
aaa
fucomp
outsl
pop
test
cld
pop
shr
add
jae
xor
and
lods
decl
popa
dec
sub
out
in
cmpsb
xchg
lcall
in
and
add
out
xchg
outsl
and
aaa
cmp
mov
test
pop
aad
movsb
sub
mov
outsl
fwait
jmp
pop
mov
ret
test
out
pop
jnp
xchg
xlat
popf
push
mov
jle
insl
push
scas
jnp
std
push
cmovle
popf
sub
jle
sub
out
dec
insb
mov
stc
mov
push
movsl
call
mov
pushl
std
cmp
pop
add
outsb
mov
das
push
aad
mov
mov
sub
add
fdiv
mov
in
xor
mov
push
add
cli
sub
pop
aad
inc
dec
xchg
rcrl
mov
divb
sarl
cwtl
dec
pop
sub
cmp
pop
pop
les
jnp
inc
aaa
lret
arpl
icebp
xchg
fs
fidivrl
stc
cwtl
or
mov
arpl
fcomp
xor
stos
cmp
rorl
mov
inc
dec
int3
fisttpll
cmc
push
andb
adcb
mov
pop
ret
loop
outsb
test
das
mov
or
sti
push
popa
pusha
jb
cmp
push
adc
inc
fucomp
push
std
pop
xchg
sbb
fnstcw
mov
fisubl
jo
jmp
loopne
dec
jo
and
roll
bnd
push
or
jmp
iret
fistl
aad
mov
inc
mov
outsl
push
mov
jmp
or
js
cmp
inc
adc
pop
push
xchg
push
mov
or
sbb
xor
cmp
lock
or
mov
dec
push
int
imul
xor
sbb
insb
adc
test
xor
mov
and
in
mov
pop
out
loope
xor
in
pop
dec
pop
xchg
push
pop
mov
popf
ljmp
pop
push
jle
sub
out
dec
test
jge
loopne
mov
loope
lock
jge
popa
and
shll
adc
into
jo
mov
ficoml
lahf
sahf
sub
push
sub
pop
dec
cmp
gs
sti
ss
xchg
jbe
sbb
popa
lret
les
das
xchg
push
cs
mov
fs
and
mov
sar
inc
stos
and
aad
aaa
mov
and
jo
insl
fcompl
test
jmp
mov
jno
mov
int
sub
mov
sub
mov
popf
leave
and
and
inc
mov
es
cmp
imul
iret
fwait
cld
icebp
subl
mov
test
mov
pop
cmp
mov
push
fistpll
push
pop
and
pushl
out
mov
add
rcrl
decb
mov
ret
adc
mov
inc
jb
sub
scas
inc
sbb
sbbl
cmp
cld
loopne
mov
ss
push
out
adc
and
jmp
push
mov
mov
out
enter
scas
sbb
mov
adc
sub
pusha
inc
rcrb
rorl
mov
jo
inc
es
jo
pop
xor
test
jp
inc
push
adc
movsl
mov
aas
gs
inc
push
rolb
jne
lahf
sub
mov
jns
jl
sub
arpl
shr
aad
sbb
inc
cmpsb
outsl
jne
adc
mov
lret
xchg
push
dec
ficoml
add
jae
push
adc
xchg
movsb
and
xlat
and
and
fwait
int
cld
repz
adc
inc
jns
mov
les
jg
mov
xor
cmp
sbb
out
mov
pop
cmp
sbb
insb
jg
inc
mov
lea
stc
repz
lds
push
loope
inc
sub
ja
icebp
mov
aam
gs
jecxz
les
cwtl
mov
stc
inc
out
jb
xchg
push
insb
mov
push
adc
popa
mov
mov
ja
inc
add
push
and
adc
push
mov
jns
int3
xor
mov
popf
cltd
inc
sbb
pop
daa
jno
adc
sti
jmp
pop
out
xchg
lea
sqrtps
cmp
add
cmc
scas
jp
mov
rcrb
sbb
and
adc
loop
mov
jge
push
dec
in
fistl
jnp
add
fbld
add
jnp
sbbb
push
lea
mov
lock
jg
sub
or
fmuls
xlat
dec
pop
sbb
movsb
adc
lret
out
int
insl
jno
mov
or
pop
ret
mov
mov
xor
adc
xchg
sub
cmc
jbe
icebp
bound
mov
ljmp
xchg
pop
loope
icebp
aad
add
mov
pop
pop
leave
stos
sub
and
mov
fisttpll
divb
out
repz
cmpsb
repnz
pop
adcb
aas
lcall
shrb
fnstcw
nop
outsl
mov
adc
jp
mov
and
movsb
jnp
fiaddl
ja
xchg
xchg
push
adc
cmpsb
or
les
repnz
mov
xlat
in
cmp
jbe
cmp
lds
inc
push
sahf
cmc
dec
test
mov
bound
sub
add
iret
jne
mov
ret
cltd
lea
dec
sbb
push
xlat
mov
inc
js
jp
stos
cmp
mov
jnp
and
adc
adc
cmpsb
mov
out
jb
rorl
repz
stc
jg
scas
rcrl
mov
mov
push
cs
xor
aad
push
shlb
xor
pop
lahf
add
jmp
lds
mov
fiadds
in
xor
or
xlat
jns
fwait
jne
or
dec
push
lock
push
xor
cmc
popa
mov
xorl
xchg
popf
cmp
mov
and
rorl
jp
pop
cmp
stos
aam
mov
xchg
cmp
in
popa
or
add
adc
cs
pop
or
fwait
pop
jmp
fisubrl
xor
mov
cmp
jecxz
sbb
sbb
in
xchg
push
arpl
in
and
add
f2xm1
mov
jge
or
lret
repz
mov
stos
enter
jl
call
fldcw
push
mov
mov
adc
imul
inc
lea
orl
xlat
mov
popf
and
xor
into
add
mov
jno
lods
jl
pop
lret
push
daa
nop
add
adc
stc
imul
mov
cmp
pop
out
pop
mov
xchg
fidivl
push
jb
push
push
or
and
std
and
notb
adc
lods
out
test
into
xchg
std
std
aam
dec
sbb
and
lods
push
sub
pusha
mov
sub
xor
dec
jg
xchg
int3
adc
cld
cmpb
subl
nopl
mov
insl
imul
shll
nop
jbe
mov
pop
and
or
enter
aam
stc
jb
cltd
sahf
xlat
ret
jnp
jo
gs
inc
popa
insl
xor
pop
inc
stos
and
lods
push
lods
xchg
loope
adc
arpl
into
cmp
into
pop
and
dec
data16
int3
or
or
rorb
mov
adc
dec
jecxz
jmp
rcll
imul
dec
cwtl
dec
aas
sar
sub
or
sub
stc
aas
stos
mov
push
fbstp
pop
hlt
test
jb
lahf
mov
int
and
cmc
cltd
xor
bound
stos
and
add
movsl
push
pop
popa
or
ret
imul
inc
cwtl
in
cli
cs
add
out
cmp
fisubrl
adc
call
outsl
dec
or
test
shrb
sub
pop
mov
dec
add
es
vpcomud
mov
inc
cmp
imul
mov
int3
cltd
mov
scas
dec
push
adc
lcall
shl
adc
mov
shl
stc
dec
into
cmp
sbb
cmp
jmp
pop
inc
mov
movsb
sahf
mov
test
adc
and
sub
lods
jbe
cmp
mov
test
sub
insl
test
mov
out
sub
gs
insb
jge
sbb
pop
mov
nop
mov
and
cmc
fwait
xor
call
add
adc
in
mov
cmp
bound
push
mov
repnz
or
jns
or
test
das
fnstcw
popa
fistpl
roll
lahf
sbb
addr16
imul
sti
xchg
fld
pop
repz
pop
cmovno
aam
pop
add
add
aaa
mov
mov
clc
test
pop
jnp
das
jmp
cmp
or
sbb
push
push
shll
cmc
lods
sub
push
add
mov
pop
adc
add
mov
mov
roll
std
and
xchg
fistpl
jmp
pop
mov
data16
subb
fsubl
addl
cmpsl
dec
pop
cwtl
popa
jl
cli
pop
imul
mull
popa
test
ds
out
scas
add
std
mov
inc
add
jne
mov
outsl
pushf
fs
sahf
sbb
jae
pop
cmp
jle
pop
loope
and
and
imul
or
cmp
jl
outsl
adc
testl
and
cmp
mov
dec
jge
push
loope
dec
xlat
or
stc
xchg
inc
fcompl
int3
jl
or
repz
adc
add
pusha
cmp
mov
xor
push
push
push
repz
cmpsb
aaa
push
sbbl
and
ror
fs
or
inc
inc
pop
mov
sbb
and
mov
sub
pop
enter
fstpl
dec
fstpl
ret
jle
mov
out
jb
pop
dec
and
mov
cmp
inc
mulb
enter
jns
pop
inc
sbb
imulb
inc
push
mov
mov
mov
xchg
dec
inc
in
dec
add
sub
cmc
or
hlt
test
xchg
pop
xchg
and
out
aaa
das
or
add
xchg
sahf
stos
mul
das
dec
inc
idiv
popa
sbb
jns
inc
pop
mov
fdivs
pop
ficoml
ret
pop
leave
icebp
or
pusha
xor
icebp
aam
ja
or
jae
loopne
mov
dec
add
xlat
neg
jmp
adc
shrb
mov
repz
sub
dec
mov
lret
mov
test
clc
push
jp
mov
scas
inc
mov
sbb
xchg
test
mov
pop
jo,pn
dec
jbe
testb
sti
int
jnp
std
dec
orb
test
dec
cmp
pop
or
jp
adc
rorl
in
mov
xchg
in
sar
lret
cmp
lahf
dec
pop
cmp
repz
jp
stos
or
sahf
shrb
pop
xor
sbb
add
adc
ds
add
adc
ljmp
iret
inc
xchg
fwait
icebp
sub
imul
fs
movsb
mov
movsb
xor
lods
fsub
stc
push
mov
pop
mov
mov
or
bound
sbb
sbb
and
push
add
shll
push
push
add
and
cmp
in
arpl
adc
push
insl
pushl
mov
add
sarl
sub
jo
mov
fdivrp
cmp
or
mov
xlat
cmc
rcll
enter
sbb
xchg
push
pop
or
xor
ja
mov
sub
insb
cli
add
add
jp
jmp
fdivrs
jno
movsb
push
int3
xor
adc
adc
jle
clts
pop
and
out
mov
add
lret
xorl
adc
mov
js
adc
outsb
imulb
adc
ror
sar
mov
mov
subl
dec
adc
stos
in
add
out
negb
sbb
sahf
adc
rorl
jne
xchg
mov
xor
xchg
roll
std
xchg
sub
push
mov
dec
xchg
mov
adc
mov
mov
sti
jns
out
cmc
mov
sbb
lahf
loope
movsb
rorl
aam
fdivl
lods
lea
cwtl
mov
lret
clc
inc
fcomp
dec
enter
rorl
movsl
test
dec
mov
xchg
push
mov
enter
lret
cmp
mov
aad
popa
jmp
out
popa
into
xchg
cmp
into
fsubrs
loopne
mov
out
mov
test
bound
dec
xor
lods
sbbb
fadds
dec
cmp
es
loop
ja
les
xchg
cmp
xor
jae
clc
push
sti
cmp
movsb
mov
lret
cmp
in
test
popa
pop
xchg
mov
pop
add
pop
xchg
pop
push
jae
fnsave
cmp
cltd
xor
jns
stos
jns
mov
adc
out
leave
das
mov
jp
mov
and
mov
push
jae
and
dec
mov
loope
cltd
adcl
adcb
enter
mov
mov
jne
dec
shl
mov
mov
mov
ds
xor
xor
adcb
icebp
ja
cmpsb
iret
imul
shlb
push
fsts
cs
cltd
mov
mov
pop
xchg
jae
test
pop
cmp
sbb
ret
adc
imul
dec
cld
inc
xchg
in
aaa
je
pop
cwtl
popf
or
in
sub
sahf
pop
loop
into
je
in
xor
inc
push
or
inc
xchg
ss
mov
and
scas
std
dec
jno
push
aam
lods
xor
movsb
les
aam
leave
inc
mov
mov
ja
std
sbbb
pop
pop
js
mov
mov
ss
mov
jl
or
sub
pop
mov
jne
mov
jne
lret
fcompl
insb
xchg
cltd
or
lcall
or
push
mov
xchg
rcrb
cmp
out
sub
out
popf
cmp
mov
pop
mov
cmovle
push
outsl
notb
xchg
popf
or
loopne
ds
mov
rclb
push
int3
ret
fsub
jecxz
inc
pop
or
fwait
mov
test
insl
cmp
mov
xchg
pushf
std
adc
sbb
sub
adc
mov
mov
push
cmpb
push
fdivrl
out
sub
mov
outsb
mov
pop
div
push
mov
adc
xor
daa
test
inc
add
mov
pop
je
movsl
push
fcoml
adc
cmpsl
pop
stos
ret
adc
mov
and
or
outsl
inc
adc
xor
inc
xchg
sub
cltd
and
imul
mov
push
mov
sbb
and
push
out
pop
dec
push
mov
cltd
add
stc
pop
fistps
test
movsl
sub
addr16
test
mov
mov
cmp
pop
sbb
out
repnz
mov
inc
es
movsb
cmpsb
cs
lahf
pop
inc
jl
hlt
int3
das
test
sub
add
cs
xchg
jle
pop
hlt
int3
push
sub
adc
repnz
and
rcrb
shlb
adc
je
dec
or
dec
or
lret
testb
sbb
outsl
mov
lods
inc
icebp
ljmp
ror
mov
shll
leave
sbb
sti
xor
mov
ds
mov
inc
stos
sub
or
ficoms
and
jg
in
mov
cs
stc
pop
inc
push
inc
loop
data16
sub
mov
sbb
sbb
in
mov
clc
push
insb
and
repnz
jg
and
mov
cmp
sub
mov
or
insl
add
rol
push
nop
or
xchg
aad
psllw
mov
sti
pusha
push
test
mov
loopne,pn
paddd
mov
mov
add
pop
ret
mov
pop
pop
cli
push
xchg
out
push
imul
sti
xor
cmpsb
and
stos
cmp
dec
int
adc
push
fcmovne
and
insb
jg
push
xor
push
xchg
inc
insb
subb
inc
insl
xor
inc
mov
and
sbb
scas
dec
out
outsl
dec
xchg
mov
inc
movsb
lock
pop
cmp
rclb
cwtl
leave
sbb
imul
adcb
es
cltd
fdivrs
cmpl
in
scas
repnz
in
inc
aam
sbb
push
xchg
imul
cwtl
cmpb
mov
jne
xchg
imul
push
lods
add
cmp
mov
push
or
sbb
fsubrl
int3
adc
cmp
aad
jmp
push
push
or
adc
pop
xchg
test
mov
insl
hlt
gs
ret
jecxz
js
cmp
loopne
notl
sub
sub
dec
mov
mov
test
xchg
popa
daa
ljmp
test
mov
jp
sahf
mov
inc
fstpl
rcl
ret
mov
cmp
xor
sub
sbb
sub
aas
call
mov
mov
mov
adc
sti
popa
pop
scas
out
inc
sbb
push
insb
add
push
or
xchg
jbe
test
test
je
into
lods
pop
and
in
fnstcw
ss
out
mov
jno
jne
roll
scas
filds
pop
adc
jb
push
mov
hlt
in
jbe
sbb
push
xchg
sbb
add
pop
xor
rclb
imul
dec
mov
mov
js
inc
sbbb
or
addl
loopne
adc
jg
cmpsl
in
inc
or
jo
loopne
lea
popf
jp
xchg
sbb
loop
movsb
ds
add
pushf
es
sub
mov
xchg
lret
inc
leave
pop
adc
mov
in
cmp
fucomp
pop
mov
inc
adc
mov
xor
adc
insb
leave
test
and
shl
adcl
cli
cmp
adc
rolb
jg
pop
loope
xor
mov
xlat
pop
imul
mov
movsl
mov
jmp
jmp
es
and
sub
push
push
adc
fcoml
orb
lret
js
xchg
jmp
push
xor
faddl
mov
push
mov
test
mov
adc
and
xchg
hlt
sbb
lods
cwtl
je
inc
jl
testb
inc
pop
repnz
inc
sub
ffreep
push
jp
inc
mov
dec
jg
jb
pop
and
pusha
jns
rolb
add
dec
jmp
sar
xor
adc
and
xor
pop
cmpsb
scas
mov
jmp
add
or
mov
fwait
mov
lret
nop
and
xchg
mov
jo
mov
mov
frstor
sahf
cltd
daa
sub
mov
mov
dec
push
sbb
cvtps2pd
push
jmp
stos
and
cmp
loop
sub
cmp
jmp
cmp
xchg
fidivl
cmp
mov
push
jecxz
xlat
cmpsl
movsb
fiadds
fisubs
jmp
and
movsl
xor
cltd
test
pop
inc
shr
or
ret
movsb
mov
sub
cmp
jl
mov
dec
mov
jbe
fs
jns
xor
hlt
pop
push
jge
inc
movsb
leave
loop
xor
sub
sbb
dec
leave
adc
orps
xor
mov
cmp
jae
data16
xor
mov
sbb
addl
in
fwait
movsb
sub
inc
ss
inc
sub
cld
popf
dec
lcall
dec
mov
popf
adc
gs
pop
mov
pop
lret
test
shl
out
cmp
mov
sub
aas
movsl
dec
fcmovnb
out
jbe
or
popa
or
mov
push
mov
cmpb
xorl
aam
mov
sub
jle
testb
enter
popf
add
xchg
inc
les
cmp
fwait
ss
pop
sub
xchg
xchg
mov
into
pop
movsl
fs
sti
cwtl
je
pusha
cmp
pushf
pop
rcl
pop
imul
push
push
cmp
push
jbe
lds
mov
pop
aaa
emms
lret
mov
pop
jns
and
stc
push
pusha
sbb
or
adc
jg
lock
bnd
add
test
xor
repnz
xor
jge
ret
lret
popa
shr
xchg
in
xchg
cli
stc
sub
xchg
lret
lcall
cltd
movsl
mov
repz
adc
je
gs
mov
rcr
mov
orb
jb
in
into
add
mov
dec
xor
test
lock
xlat
js
test
fcomps
ret
pop
add
lods
adc
mulb
add
test
mov
push
call
fs
sahf
cmpsb
stos
add
mov
push
push
repnz
addr16
loopne
xor
mov
test
jno
mov
pop
inc
and
lcall
push
rcrl
xchg
mov
movsl
rcl
mov
jns
imul
xchg
cli
jecxz
andl
push
add
push
cmp
xor
pop
dec
cmp
nop
xchg
nop
pop
cmc
jg
ret
push
scas
leave
jne
jmp
xchg
push
test
bound
xor
iret
mov
fs
pop
imul
mov
imul
dec
loope
mov
les
icebp
inc
inc
in
mov
mov
repz
js
rcr
gs
mov
dec
test
mov
push
in
xchg
imul
jo
push
sbb
enter
or
pop
aad
jle
mov
imul
xor
sbb
test
shlb
mov
xchg
and
lds
xchg
test
stos
sbb
or
loop
bts
xchg
sub
gs
dec
fdivs
xor
lods
jne
cmp
dec
inc
jbe
adc
movsl
pop
iret
ficompl
inc
stos
sbb
mov
cmp
icebp
mov
lcall
std
shlb
xor
test
push
mov
mov
sbb
popf
stc
cmp
lcall
divb
ret
jmp
iret
and
lret
mov
popa
sub
movsb
sarb
inc
or
shll
jg
jg
mov
or
mov
xchg
pop
in
cmp
test
adc
mov
xchg
imul
mov
sti
fiaddl
pushl
xor
int3
or
mov
xor
mov
jns
testl
fwait
lods
aam
cmc
repz
pop
xor
pop
or
test
push
mov
mov
pop
mov
xchg
mov
push
mov
imulb
add
add
das
js
add
jecxz
fiadds
inc
test
cltd
clc
gs
in
push
lret
mov
fsubp
int
xchg
ss
jmp
xchg
sarb
jmp
pop
mov
mov
xchg
aad
xchg
jbe
movsl
sbb
adc
cltd
xchg
pop
jb
lods
clc
push
adc
push
popf
in
aad
xchg
jmp
adc
xchg
xor
xchg
xchg
mov
mov
mov
fbld
inc
lods
das
push
mov
add
cs
std
cwtl
sar
mov
push
mov
sub
jmp
xor
aaa
sub
cld
sbbb
loope
addb
addr16
push
push
out
dec
insl
enter
out
fs
orl
out
lret
cld
inc
pop
jmp
ds
lahf
aas
inc
adc
sarb
pop
stos
inc
fsts
in
mov
iret
je
cmp
mov
orb
inc
test
dec
lea
jecxz
into
mov
xchg
push
cmpsb
fisubrl
xchg
mov
or
dec
pop
rcrb
adc
sub
lods
or
sub
cmp
push
inc
and
mov
inc
xor
es
mov
dec
je
inc
jmp
in
insl
cld
out
addr16
mov
mov
pusha
inc
dec
xchg
xlat
and
adc
mov
aad
mov
pop
dec
in
mov
fdivrl
push
sti
out
and
in
hlt
pop
inc
rcll
bswap
pop
loop
pop
cmovg
out
push
scas
ror
ds
bound
lods
icebp
in
popf
dec
test
mov
jmp
inc
sub
mov
push
shrl
mov
lahf
push
shrb
jge
jne
xchg
bound
movsb
ds
adc
icebp
jo
pusha
insl
jo
add
ljmp
ret
jns
rolb
xor
mov
mov
outsb
cmp
sbb
inc
xchg
sub
gs
sub
jno
in
pop
add
outsb
sbb
addr16
cli
popf
cmpsb
out
stos
cld
dec
imull
push
push
and
lret
inc
gs
xor
std
mov
push
jmp
out
fstp
and
push
cmp
jbe
int3
dec
cmp
enter
or
adc
lahf
iret
in
insb
mov
jno
jno
scas
pop
mov
out
add
cmpsb
xchg
daa
cmp
dec
push
jno
dec
cmpsl
das
cmpsl
mov
inc
push
cmp
cmp
std
xor
add
mov
sub
idivl
ljmp
bound
jecxz
clc
push
std
pop
scas
lods
mov
in
dec
lock
dec
int3
push
cmc
fnstenv
inc
gs
xor
ljmp
pusha
ja
inc
lar
inc
shlb
and
stos
fcomps
shll
xor
js
and
inc
inc
insl
jne
or
xor
pop
popa
popa
mov
mov
scas
adc
aad
scas
outsl
xlat
imul
sub
roll
dec
nop
lock
inc
loop
mov
dec
shlb
sub
push
lcall
or
push
mov
test
imul
mov
lock
dec
mov
das
jge
mov
sub
dec
testb
pop
data16
into
mov
aas
pop
xchg
outsb
jle
stos
sub
rorl
test
ret
into
test
imul
xchg
nop
test
popf
xchg
xchg
pop
push
cmp
scas
add
int3
cmpsl
rorb
dec
xchg
pop
mov
mov
adc
jne
adc
add
mulps
int
jns
mov
xchg
sub
nop
pop
sub
xor
cmp
pop
les
out
iret
ret
cmp
negb
and
test
mov
xchg
aas
fs
lea
addb
jae
jbe
xor
mov
xor
sub
push
add
xchg
inc
insl
jl
xchg
les
out
cmp
dec
inc
xor
lret
dec
and
cmp
pop
fsubrs
addr16
add
mov
in
add
cmp
je
xchg
mov
inc
adc
mov
ds
icebp
notl
dec
and
js
repnz
pop
movsl
dec
bound
push
pop
mull
es
fiaddl
xor
jge
lods
cmp
mov
pop
orl
mov
pop
xor
lcall
inc
je
cmp
jns
and
or
shll
cmpsl
dec
mov
and
mov
sbb
inc
mov
and
fwait
mov
hlt
add
std
pop
cs
mov
adc
xor
cmpsl
dec
pop
mov
imul
mov
in
inc
pop
ds
into
lods
mov
xlat
inc
cld
push
and
jo
dec
bswap
testb
pop
fwait
mov
mov
xchg
rorb
notl
arpl
pop
sub
pop
clc
in
int
out
leave
stc
xchg
or
xlat
movsl
clc
adc
mov
inc
mov
ja
xchg
or
and
sbb
xchg
and
ja
scas
adc
mov
mov
mov
or
int
push
mov
stos
stos
pop
adc
xchg
jns
mov
xor
and
sub
jl
mov
pop
pop
adc
repnz
aam
push
cs
mov
mov
pop
cmpsl
ja
std
dec
mov
iret
mov
call
imul
mov
mov
pusha
and
loopne
xchg
test
add
jnp
push
fidivrl
mov
sbb
mov
or
mov
jge
adc
out
js
dec
xchg
int3
or
adcl
addr16
ret
cmp
xchg
dec
adc
mov
pop
icebp
cwtl
push
stos
js
into
sub
aad
or
jl
pop
pop
add
mov
test
sbb
out
push
sbb
xchg
or
jle
sub
cmp
sub
incb
inc
xchg
or
push
lods
xor
sbb
push
sbb
or
pop
fwait
sbb
mov
sbb
decb
rcrb
jmp
mov
test
xor
in
es
pop
imul
push
mov
sub
and
or
jb
or
lahf
jl
pop
ds
dec
dec
hlt
cs
push
imul
sahf
jb
and
sub
jns
mov
mov
repz
sbb
cmp
push
or
mov
fbld
iret
mov
mov
das
pop
js
xor
inc
lods
loopne
inc
lds
ja
jmp
inc
xchg
mov
or
adc
stc
cmp
jp
mov
lret
movsb
loopne
cmp
mov
xchg
fwait
test
xchg
xor
test
loope
stos
dec
pop
daa
cmp
fldenv
mov
mov
jg
loop
test
jmp
lret
mov
push
imul
inc
dec
leave
mov
xor
cmc
push
insl
rcrl
int
insb
cmc
lock
cli
inc
in
push
popf
addb
mov
push
push
or
lcall
aad
and
cmc
jecxz
or
es
mov
push
add
movsb
jp
insl
xchg
out
mov
insl
xchg
xor
rolb
jge
fwait
adc
cmc
lods
xor
mov
movsb
aad
push
in
xchg
or
pop
inc
insb
dec
ds
sbb
into
pop
and
jge
dec
movsl
gs
dec
ljmp
sub
into
push
xor
jb
fcoml
push
testb
and
dec
shl
mov
pop
and
test
lods
pop
and
add
sbb
adc
orl
pop
pop
cli
out
ljmp
les
xor
cmc
sahf
mov
ficoms
cmpsl
xorb
mov
icebp
xlat
imul
in
test
add
cmp
xor
cmp
pop
leave
lods
mov
dec
call
mov
pop
xor
sbb
jmp
or
xchg
sbb
std
sbb
stos
movsb
jecxz
fsubrp
sbb
ja
mov
movb
fcmovnb
cli
xor
popa
out
repz
adc
andl
inc
jmp
cmp
imull
je
mov
and
or
inc
inc
faddl
cli
pop
icebp
leave
jo
mov
insl
iret
or
xor
xor
aaa
pop
ret
jle
mov
mov
add
sti
out
pcmpeqb
sbb
pop
xchg
lods
sub
ret
adc
fmuls
repz
pop
push
int
inc
dec
mov
xchg
repnz
pop
lods
sub
or
sbb
aaa
test
fsub
pusha
dec
into
dec
pushf
jg
and
rclb
xchg
push
dec
pop
cmpsb
cmp
jo
dec
mov
pop
aas
outsl
xchg
sub
insl
sti
jp
das
jmp
inc
mov
mov
adc
inc
push
jge
add
lret
jmp
sub
out
cmp
out
mov
rclb
jb
gs
or
imul
out
dec
add
add
les
fdivrl
sub
xchg
leave
xlat
pop
cmp
ss
sbb
inc
icebp
dec
mov
jecxz
idivl
in
cmpl
xor
in
arpl
sub
sbb
scas
push
jge
repnz
repz
dec
xchg
mov
xor
aam
mov
stos
adc
ja
in
pop
dec
inc
inc
test
or
lret
cmp
cltd
lret
icebp
daa
jae
mov
lahf
sub
xchg
adc
pop
fcmove
and
jo
xchg
sub
fisubs
popf
vcvttsd2si
mov
pop
in
insb
aad
mov
pop
call
cmp
mov
ja,pn
pop
mov
mov
sar
negb
loop
clc
and
cli
or
push
iret
ja
lea
adc
inc
fadd
pusha
int
movsb
insb
mov
push
in
add
push
call
jae
mov
mov
ret
xor
sbb
push
paddd
xor
mov
fsubrl
sbb
addr16
mov
adc
sub
sbb
pop
cli
cld
popf
out
roll
insb
in
out
subb
adc
add
xor
cmpsl
cld
stc
mov
inc
mov
out
mov
fstps
cmpsb
fistpl
mov
loope
xor
nop
adc
pop
jle
add
push
adc
mov
push
je
cmp
out
xchg
mov
push
mov
pop
or
cmpsl
sbb
test
inc
inc
es
les
mov
push
enter
jmp
jb
mov
loope
inc
mov
cmpsb
adc
movsl
mov
repnz
jmp
push
add
out
mov
and
arpl
cmpsb
inc
dec
sbb
inc
mov
outsl
pop
or
shrb
mov
shll
leave
insb
lahf
or
or
dec
push
mov
add
in
pop
mov
jge
faddp
mov
jo
or
out
and
cld
jmp
mov
dec
sub
dec
adc
pop
mov
and
push
imul
push
testl
into
mov
arpl
pop
sbbl
jg
loope
or
test
sbb
push
inc
push
andb
push
push
add
push
mov
sbb
ds
mov
adc
sub
adc
into
add
pop
xchg
jle
xchg
jp
xchg
pop
lods
push
imul
add
adc
pop
fnstcw
mov
shlb
aaa
jns
ljmp
shll
mov
adc
xor
lret
xor
inc
sub
out
scas
int3
inc
out
push
pop
je
out
pop
xchg
sbb
inc
and
mov
in
xor
stos
jbe
bound
fs
inc
stos
roll
rcrb
jmp
inc
adc
xchg
repz
imul
xor
call
jbe
mov
push
lds
aaa
rcrl
insl
jmp
mov
ljmp
inc
inc
adc
loop
addr16
dec
push
daa
jnp
pop
leave
cltd
sub
fadd
or
cmp
xlat
lret
std
xor
js
scas
pop
je
icebp
lods
sub
gs
shll
dec
sti
and
scas
lock
add
mov
iret
pop
mov
cld
jp
jae
jmp
mov
lret
adc
xchg
daa
imul
xchg
xchg
push
sub
mov
gs
mov
cmp
sbb
mov
hlt
sbb
jmp
or
cwtl
push
sahf
sub
sub
flds
sub
jp
inc
cmp
fcoms
mov
inc
push
loopne
mov
cmp
jb
mov
pop
js
je
mov
insb
test
jne
shll
rclb
cwtl
or
sbb
sub
cwtl
lock
dec
test
in
and
cltd
ss
movsb
mov
mov
push
jno
movq
adcl
pop
inc
ja
adc
mov
jo
in
ss
test
cli
sub
mov
xchg
xchg
add
jae,pt
mov
mov
fsubl
std
cmp
inc
jg
dec
jge
rcl
and
inc
pop
fmull
popa
xchg
lods
jns
push
push
in
ljmp
push
sbb
xor
lds
pop
scas
test
adc
or
sahf
pop
lock
scas
inc
dec
das
pushf
inc
dec
xchg
adc
mov
dec
mov
pop
stos
jle
test
mov
or
std
fdivrl
lods
push
inc
push
pop
mov
ficoml
mov
jp
mov
push
aam
mov
scas
xlat
cmp
divb
jnp
jmp
scas
andl
mov
mov
push
or
or
movb
mov
adc
mov
inc
mov
add
jo
cmpsb
arpl
icebp
or
push
add
inc
pusha
fstpt
aas
pop
in
movsl
bound
mov
fcomps
movsl
jmp
mov
pushf
xor
int
mov
gs
xor
popf
adc
outsl
in
loop
xchg
sub
mov
sbb
mov
loop
mov
std
stos
mov
dec
and
push
push
xchg
sub
or
adc
sti
shll
cltd
sbb
and
pop
dec
sbb
fidivl
sub
jo
repnz
pop
aaa
lods
add
inc
push
aaa
cmpsb
insb
fildll
jmp
jmp
dec
lcall
jno
inc
pop
pushf
decb
xchg
mov
aam
rolb
loop
cwtl
imull
jecxz
push
nop
sbb
gs
out
mov
and
repz
mov
xchg
stos
dec
lods
cmpsl
or
mov
add
mov
cmp
loope
arpl
incl
out
mov
loope
std
adc
ror
sub
imul
fsub
inc
jg,pn
mov
int
mov
std
or
imul
inc
lea
mov
mov
sbb
add
xor
pop
pop
stos
daa
xchg
int
sub
mov
or
and
and
mov
pop
test
mov
dec
push
daa
stos
pop
int3
push
adc
pop
fisubl
rcrl
jg
outsl
pop
lahf
stc
out
jge
sub
cld
push
sbb
sbb
cmpsb
adc
cli
jl
aaa
sub
fs
ret
lcall
bound
mov
repnz
cmp
shll
add
push
xchg
jmp
cli
insb
mov
inc
enter
mov
mov
and
callw
xlat
mov
repz
dec
rorl
and
add
jmp
fidivs
scas
les
aas
fs
rcrl
and
push
sarl
bound
adc
dec
dec
and
fmul
cmp
inc
mov
aaa
sbbl
cmp
xlat
mov
add
int
adc
xor
xchg
pop
push
lret
fists
adc
loop
jg
xchg
and
sahf
mov
jg
movsl
dec
arpl
repz
cmp
test
inc
outsb
xlat
mov
inc
into
aam
scas
mov
into
rorb
das
fildl
xlat
mov
test
xchg
cmp
xchg
lcall
add
pop
push
fmull
xchg
and
pusha
mov
and
lock
jb
pop
push
cmp
cld
or
jmp
pop
and
mov
xor
fidivl
jl
mov
popf
imul
xchg
icebp
pop
ljmp
sarb
sahf
sbb
mov
fcoml
pusha
out
inc
inc
push
mov
cmp
sti
add
fwait
ljmp
lods
mov
ret
cmpsl
xlat
or
adc
mov
hlt
testl
mov
dec
adc
pop
xchg
cmp
xor
xchg
cmp
sbb
mov
fimuls
loopne
inc
push
popf
or
mov
cmpl
ds
mov
ret
fbstp
adc
adc
add
into
mov
sahf
xchg
push
jp
cmp
rcl
mov
lods
and
rcll
fbld
test
sbb
mov
data16
pop
cmc
mov
aas
mov
xor
pusha
xor
xchg
lds
cli
fnstenv
or
cmp
pop
dec
sub
and
data16
in
aaa
cs
cltd
insb
lock
into
int3
rcrl
test
jae
inc
xchg
outsb
mov
iret
arpl
in
inc
fs
int3
es
or
mov
sub
aam
push
insl
push
mov
test
pop
adc
fidivrs
and
outsl
rcll
filds
sbb
clc
inc
push
jne
ja
scas
cltd
stos
pop
repz
mov
jo
je
je
pop
ret
mov
or
pop
fistl
xchg
fistl
aad
mov
mov
jae
xlat
adc
cmp
cmc
std
and
imul
lods
sbb
outsl
cld
mov
test
push
inc
push
scas
sbb
daa
iret
push
ds
jnp
ret
mov
mov
popf
outsb
outsl
aad
mov
or
inc
ficomps
push
movsl
ds
xchg
jl
adc
xchg
push
pop
or
sti
gs
rorb
pop
inc
mov
ret
sahf
ss
jge
lret
mov
push
cli
sub
dec
cmpsl
jae
pop
movsb
xchg
cli
inc
cmp
neg
push
cmp
adc
insb
neg
ljmp
jae
decb
jmp
xor
fsubl
in
xchg
inc
jle
dec
cmp
dec
loope
mov
jne
mov
dec
fdivl
popa
std
mov
cmc
ljmp
jo
stos
insb
push
call
inc
sar
mov
clc
sub
sbb
lods
push
sub
mov
pop
repnz
add
test
stc
cmp
push
fwait
loopne
popf
jl
push
imul
cmovg
inc
mov
test
jmp
in
fucomip
testb
pop
enter
cmp
sub
mov
aam
and
push
gs
adc
mov
and
loope
push
xor
push
jae
cmpl
mov
xchg
outsb
mov
pop
cltd
jae
rolb
jmp
fnstsw
pop
sub
push
jae
fidivs
cs
rcrl
sbb
and
cmp
push
lea
dec
xchg
mov
lret
dec
movsl
sbb
push
es
sti
jnp
xchg
int
and
rcrl
jle
push
in
orl
xor
es
dec
dec
push
cwtl
and
xchg
jge
lods
push
xor
leave
and
mov
out
movsl
pop
dec
adc
scas
ss
sahf
or
sub
aad
aas
test
and
xchg
test
mov
lret
add
popf
push
aad
mov
pop
inc
or
add
jb
pop
inc
pop
mov
adc
or
aas
insb
push
add
rolb
in
xchg
jl
faddl
adc
and
shll
loop
sbb
hlt
subb
fistpll
pop
clc
clc
xlat
ja
int3
push
sbb
xchg
fistpl
mov
inc
daa
adc
push
xlat
inc
test
lods
push
data16
stos
sti
add
xchg
mov
jge
data16
push
adc
inc
jno
dec
sub
mov
mov
lds
mov
sbb
jbe
or
out
cwtl
fstpl
cld
into
xor
rorb
fldl
dec
repnz
cmpsb
sbb
cmpsb
call
sti
dec
fstl
jbe
out
or
fucomi
pusha
push
cmp
movsl
into
test
xlat
xchg
lea
jmp
dec
xchg
mov
or
cmpsb
dec
iret
push
cmp
xor
sbb
jnp
ret
pop
xor
ds
adc
or
xchg
test
and
cmp
test
dec
sbb
aaa
add
and
push
mov
mov
push
and
es
inc
pop
fdivrp
adc
xor
fcomp
sub
int
aad
sub
incl
fcmovb
push
fs
inc
ljmp
movsb
add
or
and
mov
stos
pop
out
sti
or
inc
adc
mov
cld
cltd
push
hlt
cltd
push
or
out
push
and
push
jb
cmpsb
imul
push
loope
js
mov
stc
mov
stos
stos
orl
stc
jo
push
adc
test
lcall
movsl
dec
xor
rcrl
loope
imul
in
in
cwtl
cmp
movsl
push
lock
enter
addr16
and
xor
dec
cmpsb
mov
mov
mov
out
ss
insl
iret
add
and
inc
scas
into
fisubs
add
sub
push
mov
or
jns
lahf
int
rcr
mov
jmp
xor
fsubrs
cmp
xor
and
ljmp
pop
mov
ret
xor
pop
mov
and
orl
inc
xchg
cmp
pop
jecxz
rcl
dec
mov
rcrb
in
nop
movsb
xchg
inc
movb
dec
add
dec
mov
sbb
movsl
jmp
jo
xor
int3
sti
pop
out
divb
arpl
push
mov
fdivrl
imul
push
sarb
xor
adc
mov
rorb
mov
push
mov
fimuls
mov
xchg
rolb
insb
inc
mov
icebp
in
mov
mov
out
mov
xchg
out
lret
in
sub
jl
or
shll
sti
and
jo
cmp
lds
adc
mov
arpl
xchg
push
and
sbb
mov
outsl
push
dec
jge
lahf
stos
pop
test
rolb
xchg
arpl
jns
movsl
pop
inc
mov
std
in
gs
lea
jl
fisttpl
dec
dec
loop
push
ret
pop
sti
mov
dec
test
lods
loopne
es
adc
xchg
lcall
call
mov
movsl
xor
sbb
push
mov
enter
in
dec
pop
jge
std
sbb
clc
aas
cmp
icebp
jno
pop
sbb
or
sub
stos
stc
in
dec
lods
insl
outsl
sbb
inc
shrl
cs
pop
iret
jle
dec
leave
popa
adc
push
test
frstor
aas
and
lahf
jg
or
ss
imul
add
shll
lcall
sbb
fsubrs
nop
pop
sbb
into
loope
pop
test
cmp
pop
push
adc
sbb
xlat
xor
popf
push
aad
and
iret
xlat
ret
push
xor
hlt
jp
es
push
jecxz
stc
pusha
mov
stos
lahf
shrl
pop
mov
sbb
dec
or
jnp
icebp
mov
or
jecxz
lea
cmp
inc
mov
xor
and
aad
and
pop
lret
sub
mov
aas
adc
inc
out
mov
push
mov
push
fisubs
enter
sbb
loop
hlt
sbb
fimull
cltd
sbb
aam
push
or
aad
add
xor
mov
cltd
in
imul
mov
sbb
xor
out
lods
push
xor
nop
add
pop
icebp
mov
sub
pop
mov
aaa
cmp
sbb
mov
xchg
dec
out
sub
push
cmp
jl
out
imulb
cmpsb
push
ret
lret
push
jo
das
jle
lahf
fstpt
push
xor
outsl
jge
sub
ss
mov
jge
and
testl
insl
mov
pop
or
popa
jge
inc
xchg
and
pop
jg
jp
out
sub
daa
clc
jmp
pop
add
divb
out
xchg
repz
jnp
xchg
jmp
and
sti
cmp
out
testl
push
adcb
or
pop
jno
jbe
leave
pop
fmul
add
pop
jmp
addl
repz
lahf
inc
and
mov
lret
push
jg
xchg
aas
mov
int3
lds
loop
fcompl
lods
inc
imul
push
aaa
sahf
pop
mov
dec
mov
bound
pop
das
mov
inc
mov
add
sbb
mov
xor
xchg
mov
mov
or
js
xchg
mov
cmp
fnstcw
fs
sub
ret
push
fbstp
inc
xor
icebp
lahf
mov
xor
iret
or
mov
scas
mov
ljmp
orb
repz
cmp
ss
fdivl
cmp
jno
je
sti
fwait
test
pop
cmp
nop
cmp
inc
rorb
jo
enter
lret
or
push
fmull
xor
push
jbe
add
mov
xchg
in
leave
ss
xchg
jns
mov
cmc
sbb
xchg
sbb
xchg
loopne
sub
les
xchg
mov
or
xchg
jmp
mov
xor
jl
stos
add
jg
scas
adc
test
cmp
bound
or
scas
insb
xchg
jp
mov
cwtl
push
ds
jle
xor
sbb
subl
and
lret
jecxz
ret
in
and
cmpsl
std
and
mov
js
test
xor
and
sub
lcall
add
fdivl
cld
pusha
lret
or
mov
cmp
sub
jbe
lock
adc
lods
outsb
dec
jb
js
push
pop
fcoml
sbb
pop
les
movsb
cmp
sub
pop
scas
pop
in
mov
sti
scas
cmc
cmpsb
je,pt
data16
daa
notb
movsl
in
xor
jnp
sahf
push
xor
cmp
movb
jge
mov
cmp
sti
mul
inc
fimuls
add
cmp
ret
pop
jge
andb
xor
mov
je
ret
mov
sbb
sbb
aaa
mov
cli
add
dec
and
mov
jl
test
mov
movsl
add
xor
dec
mov
fstpt
pop
fwait
rolb
add
out
popf
rcrl
jge
jge
imul
inc
or
out
in
outsl
inc
cs
out
dec
out
lock
movsl
mov
aas
lock
sub
ret
xor
jge
push
dec
and
xchg
dec
leave
xchg
loop
movsl
push
jnp
ljmp
adcl
sarb
dec
js
pop
sbb
add
jmp
mov
add
jae
shrb
jo
xchg
add
aaa
test
mov
pop
cmpsb
sbb
jb
cwtl
int3
lret
in
movsb
lret
out
ds
sub
ret
mov
aad
mov
xchg
mov
mov
or
aas
adc
pop
xchg
sbb
inc
mov
xchg
cmc
xor
sub
int3
dec
stc
mov
into
sub
or
fdivp
cli
jns
cmp
and
scas
inc
cmp
lcall
pushf
enter
mov
cmp
jno
and
into
nop
pop
and
das
in
insb
pop
jle
sbbl
leave
mov
iret
fisubl
movsw
andl
jb
pushf
xchg
mov
and
sbb
push
iret
idivb
stc
and
stos
xor
aaa
stos
pop
push
dec
xor
jecxz
fists
mov
cmp
cmpsb
lods
out
push
test
mov
orb
sbb
mov
xor
jle
popf
dec
adc
hlt
mov
mov
mov
xor
mov
jne
sahf
lea
imul
pop
out
stc
aam
kmovd
push
lds
inc
sbb
xlat
jecxz
mov
test
sub
push
add
inc
cmp
xchg
repnz
stc
cmpsb
fists
lds
push
sub
leave
push
outsb
cmp
fcoms
jecxz
negl
sar
push
add
dec
push
icebp
jge
arpl
stc
pop
mov
cmp
sbb
mov
into
outsl
mov
push
mov
push
mov
xlat
pop
movl
repz
push
dec
stos
stc
jmp
rolb
adc
fmull
and
and
fidivrl
test
cmc
orb
cmc
dec
xchg
push
fldl
inc
imul
adc
fiaddl
or
push
push
mov
mov
cli
rcrl
out
xchg
arpl
hlt
cmpl
inc
and
jge
addb
popf
push
jne
mov
pop
adc
push
pop
rcrl
cltd
leave
jp
ja
push
into
and
lock
or
jb
inc
mov
rol
push
es
xchg
adcl
dec
scas
push
outsl
inc
jb
sbb
ja
je
mov
inc
mov
mov
imul
jns
lret
push
fildl
adcb
pop
and
jb
mov
adc
mov
lock
mov
sahf
pushf
inc
call
clc
adc
mov
cmp
adc
xchg
scas
and
jmp
insb
dec
jo
and
or
pop
mov
insb
dec
jo
or
mov
gs
add
pop
cmp
test
gs
push
lock
inc
fcompl
cwtl
stc
pop
mov
nop
mov
mov
aas
dec
add
mov
mov
ds
sub
push
xor
or
xchg
sbb
cmpsb
popa
cld
sbb
mov
inc
outsl
sub
das
addr16
cmp
push
dec
aas
popa
cltd
or
jnp
add
xchg
or
mov
xchg
push
jge
es
mov
fidivl
ljmp
outsl
jmp
xchg
jb
and
xchg
lahf
dec
loopne
dec
xor
scas
imul
push
pop
or
outsb
mov
pop
or
sarb
mov
addr16
jnp
lds
mov
fcomp
pop
add
fstpt
adc
sub
dec
mov
scas
in
stc
ss
sbb
adcl
out
cmp
inc
push
lret
xor
out
ficomps
pop
pop
sub
iret
outsl
and
popf
xchg
rolb
cmp
shll
mov
mov
imul
or
out
jge
out
jge
cmpsl
push
inc
sub
inc
jno
cwtl
je
sti
in
inc
inc
push
test
lret
push
sarl
xor
mov
inc
cmpsb
xchg
xor
mov
add
mov
inc
out
out
cltd
lahf
fdivrp
aam
in
jg
test
or
pop
adc
cmpsb
icebp
mov
or
or
mov
sub
cld
mov
std
std
add
jae
jge
je
fadd
out
inc
fs
js
inc
sahf
dec
insl
xchg
add
mov
pushf
pop
mov
popl
dec
mov
lods
sbb
dec
dec
xchg
pusha
shll
rcrl
mov
mov
jnp
movl
jl
adc
out
jnp
fnsave
icebp
sub
mov
add
repz
cwtl
jae
rcl
in
ljmp
aas
mov
idiv
test
es
pop
iret
xchg
cmp
test
fmull
sub
data16
loope
cmp
shll
mov
push
and
ds
mov
addr16
shll
ret
cmpsl
out
out
mov
ss
xchg
mov
popa
mov
adc
daa
mov
inc
sub
lcall
mov
out
push
roll
cltd
out
mov
cmp
xor
shl
inc
scas
sbb
lock
test
push
test
xchg
push
mov
adc
lahf
mov
lret
test
pop
movsb
xchg
adc
fmull
dec
dec
xchg
mov
sub
jmp
test
shll
mov
cli
push
loope
and
sbb
fldlg2
pop
fadds
hlt
add
sub
mov
das
gs
cwtl
les
xchg
pop
dec
push
cmp
aaa
loop
mov
cmc
outsl
xor
or
mov
dec
out
arpl
lret
andl
mov
not
and
jo
lods
test
xchg
into
and
and
jo
test
decb
jno
je
xchg
inc
mov
push
push
ljmp
in
test
repnz
adc
xlat
add
mov
scas
xor
add
adc
inc
jl
mov
pushf
sub
sbb
xor
push
add
sbb
ja
xor
dec
and
push
cmp
into
mov
sbb
add
push
and
sahf
ret
cltd
push
lods
repz
out
adc
add
xor
sub
jg
lahf
push
push
aad
js
loop
pop
pop
ss
out
enter
jbe
push
or
les
das
subb
cli
cs
jmp
adc
pop
fisubl
xchg
int
xchg
pop
mov
inc
test
mov
js
jmp
ret
cli
movsb
test
cld
pop
pop
pusha
or
adc
sub
shrl
pop
je
xor
sbb
dec
cmp
andb
push
mov
gs
pop
and
pushw
fcomps
xor
repnz
mov
or
lock
cmpsl
negb
cwtl
push
push
add
sahf
or
dec
or
or
or
pop
xchg
xor
test
push
daa
mov
fnstsw
pop
stc
or
sbb
setge
hlt
ljmp
cld
mov
ret
jno
insb
inc
jg
push
sti
sbb
out
lret
xor
adc
xchg
sti
clc
rorl
dec
cmp
fisubrs
jne
xchg
inc
pop
daa
pop
mov
cmp
shlb
repnz
test
fwait
xchg
sbb
mov
mov
dec
leave
mov
fs
mov
lcall
xchg
fisttps
pop
les
push
push
inc
int3
in
jne
sahf
inc
hlt
shl
pop
pop
mov
sbb
sub
pop
mov
clc
daa
push
test
xlat
sbb
and
std
adcb
sahf
outsl
stc
jns
inc
mov
scas
mov
jp
mov
rol
adc
xlat
xor
popa
push
add
push
fsubl
imul
subb
fdivl
fsubs
sub
xor
imul
jbe
xchg
sub
sub
fldl
imul
sbb
ja
into
push
test
add
dec
fisttpl
pop
xor
pop
call
jle
mov
pop
push
xor
mov
jmp
lret
and
adc
fldenv
divb
or
mov
das
push
cmc
mov
fwait
pop
xor
push
push
popf
cld
cmp
mov
pop
movsl
or
mov
or
pusha
lret
lcall
push
xchg
lret
mov
cmp
stos
iret
push
call
xchg
push
inc
repz
sub
repnz
pop
jb
mov
push
adc
in
loope
adc
xchg
sub
outsl
imull
jg
sbb
dec
adc
test
data16
aam
insl
stc
xchg
add
pop
push
call
push
cmpsb
or
jge
repz
lret
inc
xchg
inc
jns
dec
cmovge
add
popa
and
call
mov
stos
bound
and
or
dec
cmpsl
xchg
inc
dec
rorb
add
ud1
mov
add
pop
inc
adc
fwait
pop
leave
popf
dec
and
in
xchg
jp
dec
jmp
pop
push
sahf
es
sbb
movsb
enter
js
mov
seta
leave
iret
xchg
sti
mov
mov
mov
jle
or
pop
pop
add
and
jg
or
aam
dec
pop
roll
imul
jns
mov
mov
mov
int3
xor
inc
aaa
rdtsc
test
push
lds
aas
sbb
je
rorb
mov
ss
fiadds
sbb
jno
int3
xor
inc
xchg
cmp
loop
mov
ja
fidivl
in
cmp
xor
cmp
nop
sub
cmp
pop
jl
jo
shl
jle
or
sahf
sub
lahf
shl
push
stos
enter
iret
jmp
test
mov
xlat
add
mov
cmpsl
popf
mov
scas
movsb
mov
inc
ss
arpl
les
dec
pop
enter
pop
fisubrl
cmp
jmp
xchg
sub
cmp
scas
xchg
lcall
aaa
ja
push
adc
repz
aam
lds
test
dec
mull
dec
loope
pushf
fimuls
jmp
faddl
in
clc
in
xor
fstpt
dec
lods
xchg
faddp
test
push
push
lock
pop
pop
cmp
mov
fldenv
push
inc
inc
loope
cwtl
push
mov
in
mov
test
insl
ret
xor
sub
push
scas
or
inc
mov
push
inc
inc
sub
push
lock
fs
ja
push
int3
xchg
pusha
adc
test
jne
dec
imul
jno
adc
out
sub
add
out
stos
aas
add
mov
dec
adc
pop
inc
pop
cmp
fwait
xorl
in
push
sub
into
lret
shll
and
bnd
pop
mov
sbb
ss
dec
mov
or
mov
sbb
xchg
inc
add
sub
je
cltd
enter
mov
das
push
xor
int
rorl
add
or
mov
pop
stc
xor
daa
mov
inc
jmp
sbb
cmc
xchg
mov
inc
pushf
incb
mov
stos
std
or
push
jbe
add
cmp
clc
xchg
mov
add
pop
ficomps
jae
mov
adc
dec
xor
ret
lods
addl
les
ret
cmp
push
into
clc
mov
int3
cmp
sar
stos
dec
mov
pushf
sub
or
fdivrl
cmpsl
sub
mov
jmp
inc
call
lea
fnstsw
mov
test
cmp
pop
fwait
div
or
cmp
dec
pop
test
fdiv
fistpl
in
pop
sbb
sbb
jne
mov
outsb
popf
out
xchg
push
and
popa
pop
push
jp
aaa
repz
test
loopne
stos
fistl
push
in
push
aam
sbb
and
jp
adc
leave
xorl
mov
xchg
out
outsb
adc
add
mov
add
and
add
cmc
daa
fwait
sbb
cltd
icebp
sub
and
mov
ja
mov
loope
jge
adc
popf
fdivp
add
dec
or
pushf
xchg
mov
test
ja
cwtl
ds
and
ret
push
mov
cmc
es
pop
sbb
dec
scas
sbb
fmuls
jb
ja
shll
mov
xchg
lret
push
repnz
add
lahf
jb
or
and
inc
dec
dec
jl
fs
idiv
mov
or
jle
daa
pop
pop
sbbl
or
push
lea
insl
pushl
hlt
lea
cmpsl
mov
jge
pop
lret
in
lret
xchg
xor
jbe
or
lods
xchg
iret
pop
inc
sub
cmc
pusha
jno
pop
push
test
arpl
pusha
fucom
pop
imul
xor
add
mov
es
lcall
inc
mov
and
rcl
xchg
imul
ja
lods
xchg
popf
test
fdivl
pop
xchg
jmp
sbb
dec
in
scas
fidivrs
jecxz
insl
push
lahf
mov
cltd
push
fisubrl
or
mov
insl
and
xchg
fsubrs
pop
sub
mov
inc
out
sub
cltd
xlat
jbe
test
fnstcw
subb
sub
or
test
pop
int
mov
pop
pop
and
jae
lock
movsb
test
hlt
fdivrl
int
sbb
jo
and
push
sbb
popa
les
xlat
out
sbb
daa
jp
fcompl
jle
ljmp
xchg
jmp
jb
ss
sbb
pop
clc
aam
xchg
or
nop
popa
shrb
mov
xor
outsl
xorl
pusha
pushf
repz
cli
aaa
dec
xor
loope
enter
jne
dec
cld
nop
repnz
mov
out
fiadds
mov
push
sbb
call
mov
shl
divl
or
and
lds
movbe
push
mov
inc
ljmp
pop
in
sti
dec
sahf
push
sbb
add
les
andb
or
mov
push
out
mov
cmp
cmpb
cld
mov
fcoms
ret
out
jb
jl
or
out
lret
rclb
or
loope
add
shrb
sbb
ds
or
pushf
out
xchg
leave
jmp
adc
jnp
ret
push
xor
fidivrl
out
sbb
stc
call
or
cmp
cmc
ljmp
sub
loope
movsb
flds
cwtl
or
or
cltd
xchg
or
loop
lret
pop
jns
sub
sbb
mov
stos
out
notl
mov
mov
push
shl
xchg
sub
push
lods
int3
cmp
pop
outsb
adc
out
test
scas
icebp
cmp
xchg
testl
stos
mov
mov
je
nop
fnstcw
ret
adc
xor
pop
popf
imull
test
jae
ret
xor
xor
and
mov
in
pushf
sarl
pop
and
push
adc
cmc
filds
andb
push
mov
jecxz
inc
int
dec
push
and
cmp
daa
mov
in
je
dec
cmpsl
inc
sub
lods
out
aas
data16
in
mov
xchg
fnstenv
in
aas
sbb
pop
adcl
scas
or
call
pushf
xchg
into
leave
push
push
jge
test
in
mov
jb
add
jo
popf
fimull
dec
sub
and
repnz
jge
rolb
cmpsl
cmp
aad
movsb
push
pop
popa
imul
xchg
jle
dec
cmc
cmc
sti
fsubs
xchg
test
testb
mov
push
push
cmc
and
dec
fidivrs
stos
int3
int3
sub
mov
movsb
out
push
sbb
fnsave
mov
in
mov
jl
fistpl
add
pop
pop
outsl
cmp
jg
shll
in
lods
mov
loope
pop
or
sbb
jns
mov
adc
sub
xor
cmpsl
mov
negb
xchg
fwait
mov
gs
mov
lcall
insl
push
pop
out
fidivl
xor
mov
addr16
add
jne
icebp
arpl
test
pop
lea
mov
dec
lods
inc
fstpt
dec
dec
shrl
icebp
xlat
sub
dec
sbb
cmp
in
iret
pop
dec
inc
pusha
add
cmp
out
movsb
inc
xchg
or
pusha
out
cmovle
or
inc
xlat
out
pop
out
sbb
add
sbb
mov
add
or
mov
jg
adc
mov
inc
xor
pop
sbb
push
jns
in
es
jns
in
iret
cld
xor
cmp
fisubrl
ja
jb
aas
xchg
or
sub
iret
xchg
lret
fidivl
jmp
js
bound
jnp
idivl
sub
sub
call
in
mov
sub
jp
loopne
fidivl
outsb
inc
xor
xchg
rorb
mov
push
sbb
mov
add
pusha
in
add
stc
pop
cmp
scas
lods
test
cmpsl
mov
mov
test
icebp
int
imul
jnp
xchg
mov
add
sbb
xchg
push
dec
fcoms
sbb
outsl
sti
sti
jle
mov
stc
sbb
mul
cmpsb
popa
xchg
mov
xor
xchg
lods
or
or
xor
lock
mov
sub
mov
mov
repz
popf
sub
shl
jl
mov
out
inc
mov
imul
inc
lds
jp
je
sub
mov
into
push
pop
pop
mov
sbb
inc
push
jle
cmc
cmp
xchg
jmp
daa
inc
pop
lock
test
and
sti
test
jnp
adc
mov
sbb
jns
inc
shll
add
outsl
aas
call
mov
into
pop
movl
ret
fs
add
add
inc
mov
rolb
dec
cltd
sub
pop
jno
xor
sbb
andb
push
mov
inc
sbb
into
sub
ror
inc
ret
inc
ljmp
mov
mov
shl
std
std
sub
fmull
and
pop
inc
mov
inc
ja
xor
and
cmp
xchg
inc
addl
fs
mov
push
std
adc
call
out
or
xchg
mov
adc
xor
sbb
into
fistps
mov
fistps
shrb
jmp
mov
dec
andl
push
jo
outsl
test
inc
mov
fldt
jns
pop
mov
xchg
es
test
add
rcrb
or
shrb
adc
faddl
adc
loopne
cmp
pop
aas
jno
or
pop
icebp
push
xor
lods
out
jecxz
enter
movsb
clc
sub
data16
and
dec
cmc
shll
ljmp
xlat
pushf
lods
dec
call
stc
f2xm1
js
jo
xor
cmp
inc
aas
mov
ja
mov
movsb
out
outsb
jp
or
sub
or
sbb
filds
out
pop
sbb
mov
dec
cltd
pop
pushf
mov
lock
ret
xor
bound
lds
add
es
mov
dec
xchg
insl
adc
lahf
jae
pop
inc
jmp
in
mov
sbb
lret
lret
mov
inc
jb
sbb
push
mov
xor
test
insl
dec
negb
jecxz
jns
cmpsl
mov
aas
lock
cmp
idivb
push
sbb
jl
int
je
mov
rolb
popa
jge
call
xor
and
jb
repz
sub
adc
cmp
jne
dec
es
jp
push
sbb
int3
sbb
cmpsl
popf
inc
lret
jle
test
cmpsl
mov
mov
jmp
cld
scas
lret
jp
fcompl
or
mov
mov
ja
insl
popf
popa
mov
lea
cmp
adc
popf
repz
mov
add
adc
mov
aaa
mov
push
or
pop
or
and
push
mov
in
cmp
adc
xchg
sbb
xchg
nop
ret
xchg
rol
dec
dec
das
cmp
aas
mov
dec
aad
dec
mov
xor
cmc
in
cmp
add
stos
sub
aad
int3
xor
cmp
outsb
fdivrs
adcb
xor
sahf
test
push
mov
xchg
lds
or
cmpsb
daa
push
stos
jl
mov
test
pop
fsub
lods
pop
out
fwait
cmp
pop
dec
loopne
pop
ja
aad
xchg
xor
add
sbbb
movsb
lea
pop
shrl
dec
into
dec
pop
add
mov
sub
pop
or
in
mov
test
in
xor
cltd
inc
mov
lret
lock
shll
pop
ss
cmpb
and
jg
xchg
mov
icebp
adc
jecxz
pop
and
adc
gs
rcrl
imul
into
inc
inc
push
insl
iret
mov
stos
aad
or
push
addr16
jb
imul
leave
xchg
dec
mov
popf
cmp
insl
incb
lock
mov
loope
mov
pop
rcrb
fs
fidivrs
aas
mov
jg
and
mov
and
in
cs
rorb
or
inc
out
repz
push
dec
jo
sti
xchg
adc
jp
mov
mov
stc
dec
lds
add
aad
loop
inc
ret
dec
push
out
int3
sbb
and
or
pushf
push
outsl
or
out
push
cmc
cmpl
xlat
adc
shlb
divb
pushf
adc
xor
adc
mov
sub
lods
ds
int3
jmp
mov
scas
scas
addr16
push
sbb
jno
xor
movsb
test
out
mov
ds
jle
dec
fsub
adc
mov
xor
aad
or
xchg
mov
fwait
push
das
insl
in
sub
aas
pop
arpl
movsb
es
shrb
dec
and
aas
jae
mov
push
je
sbb
push
mov
dec
cmp
xor
xchg
out
jno
dec
cmp
sbb
pop
ret
mov
lods
inc
jle
pop
pop
fidivrs
filds
cmp
pop
sbb
fsubrs
daa
add
arpl
push
sahf
imul
dec
andl
imul
repnz
inc
push
movsb
adcl
lret
xchg
fisttpll
cmp
gs
adc
fwait
push
shr
or
mov
loopne
rcrb
mov
mov
scas
push
push
in
cwtl
and
mov
stos
and
insb
das
fistpll
jnp
aas
adc
scas
sub
adc
xor
cwtl
ss
lahf
and
hlt
xchg
mov
cmpsb
cmpsl
inc
dec
cmp
fwait
sahf
cmpsl
jnp
test
sbb
and
enter
shrb
mov
adc
jbe
add
mov
xchg
push
in
add
lods
ds
sub
jns
out
push
dec
push
jnp
pop
aad
mov
jae
shrl
push
adc
stos
cli
dec
sbb
xchg
pusha
xchg
test
pop
adc
ret
pop
jns
aas
add
cli
jp
pop
mov
pop
mov
xor
aad
rol
aaa
leave
adc
jmp
dec
in
push
or
cmp
sub
fwait
adc
scas
ds
mov
sbb
adc
adc
or
fs
lahf
mov
movsb
mov
aam
sub
stos
fucomi
into
daa
jecxz
movsl
cmp
mov
jno
jne
pop
fucomp
sbb
jae
jno
mov
in
aad
add
out
jp
dec
jecxz
jae
dec
lcall
cmp
push
mov
and
test
ja
jl
push
add
sub
and
into
fcoms
mov
out
cltd
push
testl
adc
daa
out
test
lret
out
and
lcall
or
pop
sub
add
shlb
jp
mov
imul
das
mov
sub
dec
lret
jp
sbb
leave
gs
mov
cmp
pop
push
cs
xlat
dec
fwait
pop
add
fwait
mov
ss
or
enter
and
push
mov
pop
sahf
jmp
xchg
sbb
add
or
xchg
add
call
sbb
jmp
mov
pop
test
dec
icebp
jmp
outsl
cltd
rolb
cmpsb
out
pusha
xchg
notl
jnp
and
or
inc
cmpsb
adc
push
loop
ss
mov
sbb
outsb
repz
ljmp
or
leave
jecxz
mov
mov
mov
es
add
rcll
cmp
pushf
in
jb
pop
sarl
xchg
mov
in
int
pop
scas
test
mov
insb
add
bound
xchg
cmpsb
inc
aaa
and
aad
mov
xchg
popa
mov
call
mov
sarb
cltd
push
aas
das
xor
mov
push
push
mov
adc
or
out
lret
dec
idivl
inc
sbb
sub
rcrb
insb
cmc
sbb
and
hlt
addl
scas
pop
arpl
xchg
out
sbb
hlt
jae
in
sub
adc
mov
xor
and
test
sbb
frstor
mov
xchg
inc
sub
dec
test
divps
ret
mov
adc
aas
inc
pusha
jg
lahf
fs
adc
inc
outsl
lret
std
xor
out
loope
push
bound
xchg
test
mov
popf
mov
movsb
and
jmp
popa
sbb
pop
add
leave
dec
stos
leave
in
fdivl
stos
pop
push
aaa
movsb
add
inc
push
stc
ss
jae
mov
xchg
add
ljmp
pop
add
inc
and
dec
ljmp
mov
dec
icebp
pop
shrl
jae
cld
imul
jmp
cmp
ficoml
popa
push
sbb
jle
sub
fcmovnbe
pop
sbb
cltd
fisttpll
pop
sub
imul
ds
push
stos
add
xchg
sub
jge
testb
faddl
roll
mov
inc
sti
push
into
cmp
sbb
scas
xor
sbb
inc
push
mov
adc
mov
add
sbbb
sbb
jo
pop
jmp
sahf
shrl
mov
movsb
cwtl
add
int3
mov
pop
xchg
mov
mov
cmp
loope
push
in
sbb
inc
out
mulb
push
mov
xlat
pop
out
repnz
inc
xor
neg
pushf
int
push
fsubs
mov
test
dec
fistpl
jecxz
aas
dec
mov
mov
enter
push
test
aaa
jae
fucomip
and
add
sub
imul
loop
fnstcw
mov
push
sub
cli
sahf
adc
adc
gs
sbbb
aaa
sbb
or
loopne
add
pushf
mov
or
aad
dec
pusha
lds
dec
sbb
lret
xlat
xlat
sahf
push
sarb
sub
in
mov
jne
flds
mov
mov
sub
out
xchg
mov
adc
cmpb
arpl
cmc
adc
repnz
out
mov
jl
test
popa
out
mov
jno
fdivl
insl
aas
ljmp
out
cmpsl
sub
pop
sub
movsl
loope
iret
inc
ret
jp
shll
test
test
mov
scas
scas
fdiv
mov
jge
cmp
or
cmc
xchg
cmp
or
stos
mov
dec
pop
mov
push
cmp
xchg
fstl
mov
sub
ja
push
enter
iret
push
mov
repnz
pop
jmp
stos
icebp
jo
mov
pop
int3
call
lea
add
aas
clc
int
pop
aam
dec
popf
cwtl
rcl
in
add
push
dec
pop
mov
add
adcl
es
ja
std
or
mov
xchg
in
adcb
ficomps
pushl
repz
jmp
push
int
mov
pop
pop
add
push
shr
dec
lock
pop
jne
mov
inc
aas
mov
sub
in
out
or
mov
dec
dec
fstps
or
inc
and
jbe
push
add
leave
subl
sarl
xchg
add
pop
sbb
adc
or
jnp
scas
jae
inc
add
movsb
ds
add
shll
nop
ljmp
imull
and
mov
sti
outsb
add
outsl
jno
sub
stos
cld
aam
bound
sub
ja
stc
mov
dec
inc
adc
aad
repnz
ficoms
xor
fs
dec
les
adc
mov
mov
xchg
test
or
jo
dec
cmp
lret
cltd
stc
daa
add
push
scas
out
xor
adc
jnp
cmp
adc
ret
jno
repnz
jle
push
int
fsub
adc
pop
pop
mov
mov
fs
pop
inc
adc
xchg
rcrb
xchg
jb
xor
test
or
pop
or
lret
ljmp
jne
and
dec
lods
in
cmp
test
cmpsl
pusha
in
mov
mov
pop
xchg
add
imulb
loope
sbb
and
pop
out
cmp
cli
add
jle
pushf
into
or
or
mov
outsl
rclb
popf
stos
hlt
fldl
adc
mov
data16
mov
sub
pusha
sbb
in
and
scas
lea
cltd
mov
mov
dec
add
mov
dec
imul
cmpsb
flds
mov
lods
cmpsl
sbb
stos
cmp
push
mov
push
rcll
test
addr16
pop
mov
fsts
stos
lcall
and
inc
js
pushf
push
mov
push
shlb
aad
scas
jno
sub
test
and
inc
cmp
icebp
das
add
xchg
leave
shll
mov
add
sarb
add
or
jecxz
mov
lcall
jle
push
dec
xchg
je
mov
jnp
cmc
mov
xlat
fisttpl
fs
mov
mov
cmp
in
mov
mov
sbb
mov
gs
jle
cmpsl
push
fiadds
xor
mov
mov
clc
dec
ja
fdivrl
mov
mov
dec
mov
xor
lret
icebp
rcrb
cld
enter
push
add
xor
in
jbe
iret
loopne
or
addr16
or
xor
dec
jge
rolb
sbb
jbe
xchg
repnz
cmp
movsl
xchg
sti
enter
shrl
ret
aam
sub
data16
inc
bound
loop
or
xchg
jbe
inc
test
adc
jge
push
and
lock
in
shll
mov
mov
negb
lods
add
insl
xchg
arpl
movsl
sub
and
mov
mov
lods
mov
sarb
cs
adc
int
cmpsb
les
shl
add
sub
inc
sbb
mov
hlt
fwait
dec
sub
in
outsb
xor
push
mov
cltd
ret
test
cltd
and
add
je
mov
pop
mov
xchg
inc
jno
pop
stos
mov
xchg
jg
cmp
jmp
or
add
xchg
adc
pop
sub
cmpb
mov
xchg
lods
sbb
xchg
ret
push
insl
ljmp
xor
inc
push
andl
arpl
pusha
les
bound
or
je
push
sbb
xchg
lods
sbb
pop
and
sbb
dec
leave
into
insl
mov
hlt
push
sahf
call
jmp
scas
enter
in
ss
popa
test
mov
push
movsb
pandn
mov
shrl
pop
mov
jge
add
aas
aaa
dec
mov
inc
mov
cmpsl
sbb
mov
hlt
cs
cld
aaa
int
fdivp
repnz
incl
push
mov
jae
mov
es
push
sbb
pop
adc
icebp
sbb
add
sbb
and
jge
jae
scas
push
call
cmp
leave
ljmp
outsb
cwtl
or
cmp
cmpsb
push
cmp
sbb
or
or
xor
shlb
rclb
insl
add
mov
test
icebp
jp
out
xlat
movsb
insl
inc
adc
sub
jg
mov
mov
imul
sbb
daa
mov
or
cmp
xchg
lret
popa
push
add
sbb
pop
stc
pop
faddp
xchg
cmp
pop
jb
ja
pushf
repnz
push
fwait
mov
xchg
inc
lcall
add
shlb
mov
std
insl
mov
mov
mov
sub
jae
into
sahf
call
mov
cmc
je
ret
into
add
rcll
adc
inc
jecxz
aas
xor
fadds
enter
imul
rclb
sub
aam
pop
hlt
mov
inc
ds
inc
repnz
dec
in
or
int3
pop
jbe
add
out
jmp
lret
cld
stos
add
and
jmp
loop
int
push
fbstp
mov
imul
adc
fisttpll
xchg
jne
xlat
mov
loope
rcrb
lea
gs
insl
pop
in
xor
pop
mov
out
push
decb
aaa
popa
ret
lret
ja
adc
mov
das
jecxz
or
insl
cmp
and
xchg
subb
add
cmp
and
dec
test
and
sub
out
xor
mov
inc
lods
cwtl
les
xchg
push
fimull
fisttpl
sub
cmpsb
dec
xchg
inc
jne,pn
pop
xor
in
mov
out
push
xchg
loopne
mov
loop
mov
rcrl
ja
pop
dec
lcall
or
decl
into
jno
lret
mov
int3
mov
cmp
jne
ljmp
call
and
sub
mov
ljmp
mov
shll
test
mov
mov
jg
stos
xlat
mov
jb
xchg
arpl
in
mov
inc
sub
push
outsl
cmp
xlat
cmpb
pop
mov
jp
hlt
jle
cmp
inc
mov
mov
outsl
les
pop
mov
xor
leave
add
and
and
xor
cmp
sbb
pextrw
popa
lock
sbb
clc
addr16
xchg
mov
popa
pop
pop
cs
jo
ret
mov
sbb
cmp
jl
or
push
outsb
lcall
fcmovu
movsl
std
pop
adc
popa
insl
mov
jae
sahf
push
lahf
lcall
out
cmc
push
dec
xor
orb
and
xchg
xchg
lea
and
mov
jge
jnp
xchg
aam
test
sub
jl
cwtl
jp
or
pop
clc
adc
and
imul
stos
dec
pop
addr16
stos
jmp
rorb
pop
daa
out
sbb
ja
adc
push
inc
fisubl
out
jle
enter
jg
cmpb
iret
mov
loope
or
insl
repnz
rep
and
loop
movsl
or
fmul
cmp
nop
sar
jbe
add
push
ret
cltd
in
push
int3
out
lcall
mov
mov
out
int
xchg
pop
fsubrs
mov
sub
pop
pop
scas
add
cmp
ds
xor
jl
mov
clc
mov
mov
fcomps
mov
dec
mov
cs
cwtl
mov
pop
aaa
and
in
lods
sub
jbe
pop
jns
sub
inc
jge
into
pop
sbb
popa
int3
push
mov
nop
sub
sbb
mov
pop
push
lock
lret
rorb
mov
or
icebp
or
jge
je
push
adc
jg
mov
fsubrl
stos
ret
dec
mov
cmp
pminsw
out
out
dec
or
and
int
sbb
inc
test
jb
add
sbb
pusha
das
adc
and
cwtl
ficoml
xchg
dec
sbb
mov
push
cmp
cwtl
daa
test
inc
cltd
test
jne
pop
jno
insl
fcmovnu
mov
sub
and
gs
loope
push
shll
mov
roll
xchg
arpl
jbe
int
or
xor
mov
ljmp
mov
repnz
push
fbstp
cmp
cmpsb
js
popf
pop
sub
arpl
mov
mov
movsl
addr16
sub
jmp
imul
out
sbbl
pop
enter
push
cmp
and
movsl
dec
add
fisttpll
push
pushf
sbb
xor
mov
cmc
pushf
dec
call
testb
scas
and
push
pop
popf
and
shrl
add
sbb
nop
mov
sbb
data16
pop
xlat
es
je
bound
icebp
fistpll
sbb
int3
xchg
ljmp
outsb
jb
cld
mov
adc
rcr
xchg
dec
dec
rclb
adc
jae
out
fistps
and
xor
je
push
jns
add
mov
sbb
and
and
iret
iret
xchg
sub
lock
sahf
jecxz
popa
jae
and
iret
call
sbb
sub
inc
cmp
subl
inc
or
and
pushf
xor
mov
sbb
and
cmp
cmp
cmp
std
sub
xchg
push
sub
mov
sub
adc
cmp
push
orl
rol
popa
jbe
js
xchg
pop
jge
dec
pop
pop
leave
inc
popa
aas
mov
test
cwtl
daa
push
aas
mov
sbb
inc
cmp
movsb
sub
and
mov
xchg
imul
ss
adc
inc
mov
leave
and
push
jp
adc
push
pop
andl
ret
cmp
std
lret
int3
mov
xchg
push
rcrb
pop
hlt
jecxz
or
cmpsl
nopl
or
mov
sub
xchg
add
adc
push
sub
les
cmp
mov
jl
subb
and
sbb
arpl
mov
pop
mov
fimuls
int3
jb
jp
adc
lds
and
adc
xchg
jl
test
arpl
and
push
lret
push
mov
loope
sub
cmp
clc
add
shlb
xlat
rclb
jg
mov
mov
xchg
das
sbb
popf
mov
insb
cs
cmp
push
mov
fldt
cmp
adc
xchg
push
negl
push
jb
bound
popf
inc
sbb
mov
stos
loop
xlat
and
xchg
cmp
call
push
lods
jge
add
push
movsl
subb
pop
inc
xor
cmp
faddl
add
icebp
ja
cmp
sub
scas
push
fimuls
nop
xchg
mov
mov
pop
xchg
imul
inc
lret
call
cli
outsl
jae
dec
jg,pn
pop
repz
inc
in
jbe
adc
cmp
je
add
cs
cmp
in
and
jmp
add
jnp
cli
mov
jl
fisubs
fistpl
mov
sub
jecxz
sub
cwtl
adc
sar
or
jp
aam
adc
test
mov
adc
xor
xor
mov
rcll
dec
popa
or
adc
into
push
notl
and
mov
js
sti
js
mov
inc
mov
mov
lret
popa
push
inc
and
pop
sub
das
add
mov
nop
adc
xchg
pop
ljmp
ja
push
into
jl
int3
movsl
jge
lret
xor
subl
mul
iret
mov
dec
jge
aad
xchg
jnp
cmp
sahf
inc
ret
xlat
lcall
lcall
cmpsb
nop
andl
jnp
ljmp
jl
loop
fildl
mov
push
mov
xorb
mov
repz
scas
out
mov
sbb
dec
push
rcll
sbb
push
xchg
dec
test
push
pop
cmp
push
xchg
pushf
ja
or
sub
xor
out
xchg
pop
test
dec
fs
aad
bound
lret
push
adc
xor
dec
cmpl
push
or
out
pop
mov
ret
push
mov
dec
cmp
inc
xchg
and
sbb
es
test
cld
xchg
sti
mov
sbb
mov
fbstp
loop
and
mov
mov
mov
popf
clc
iret
aaa
lock
mov
js
pop
push
roll
cmpsl
sbb
add
mov
add
push
mov
idivl
sbb
into
dec
cmp
lahf
push
inc
lahf
xor
bnd
enter
mov
pop
in
inc
push
add
mov
lods
xchg
fists
xchg
sub
loope
leave
mov
mov
cmpsb
xor
jae
pop
fs
jo
int3
scas
mov
data16
add
and
fsubrl
ret
aad
jae
out
mov
test
pop
jl
dec
out
jbe
pusha
jecxz
jecxz
add
iret
mov
lea
mov
fwait
push
loop
xchg
sarl
inc
in
inc
and
dec
das
lods
mov
push
sub
ficompl
dec
or
mov
fwait
xor
or
rcl
push
push
mov
imul
sub
push
repnz
dec
xor
adc
sbb
imul
int
outsb
jb
cmp
xchg
cltd
pop
add
rcrb
enter
movntq
inc
cmp
xor
inc
mov
mov
inc
jge
or
mov
dec
ret
mov
mov
mov
xor
imul
xor
mov
and
lock
dec
dec
mov
pop
sbb
pop
ljmp
or
fsub
in
stos
push
fmul
sarl
sub
inc
jle
inc
mov
push
jnp
cmp
jecxz
mov
jmp
insl
leave
push
ds
cmp
xchg
stc
push
add
outsl
arpl
cltd
inc
add
dec
arpl
and
push
cmp
sbb
mov
in
sbb
sbb
ret
mov
mov
outsl
mov
mov
and
xchg
and
ror
inc
jnp
sbb
dec
bound
pop
mov
out
loope
in
lcall
cmp
into
lds
jno
jae
cltd
push
add
and
push
jb
pop
add
addl
and
xor
xchg
pop
jo
sub
movl
shll
add
js
xor
pusha
cmp
loope
daa
push
aam
and
push
add
mov
pop
outsb
xorl
bound
or
je
pop
mov
sbb
and
shlb
test
mov
inc
bound
xor
sub
ss
lcall
xchg
ret
shlb
lods
sbb
js
out
jno
xor
call
pop
out
iret
adcb
sti
or
mov
stos
rorl
lods
ja
xor
xor
in
test
jmp
mov
mov
xor
stos
push
loope
shlb
lahf
mov
std
xor
cmpsl
or
sub
push
gs
fimull
pop
mov
movsb
jne
ror
dec
nop
cltd
out
fcoml
hlt
mov
icebp
out
popf
xchg
orb
pop
xchg
insw
nop
nop
fidivrs
sub
outsb
pushf
jo
cmpsb
mov
pop
xorb
es
or
mov
adc
jg
lock
lcall
incb
ljmp
push
rcr
push
and
ret
pop
inc
mov
jne
mov
mov
xor
popl
add
nop
hlt
fs
dec
iret
int
ds
jg
sub
xchg
lods
and
inc
lcall
js
mov
movl
adc
mov
scas
cld
imul
jbe
and
aas
aaa
dec
repz
sub
mov
pop
popf
adc
out
test
loope
stc
ja
add
call
push
and
out
insb
lret
loop
aaa
sub
fsubs
jmp
cli
dec
or
xchg
mov
and
lock
add
icebp
mov
lock
push
ds
xor
mov
cmpsl
leave
xor
push
outsl
cld
ja
pop
and
inc
push
leave
fs
mov
mov
sbb
mov
mov
popf
xchg
test
push
pop
movsl
pop
iret
out
push
dec
das
movsl
xchg
movsl
push
and
cs
int
mov
jnp
fdivl
cltd
aaa
or
mov
mov
sbb
int3
sub
jb
sub
cmpsl
fs
sbb
loop
cmpsb
xchg
pushfw
ja
push
adc
inc
inc
xor
mov
push
xchg
sahf
inc
inc
or
stos
pop
adc
sub
pop
outsb
bound
pushf
shrb
daa
jno
imul
xor
push
and
xchg
push
outsb
ret
int3
cltd
repnz
out
in
ficomps
les
xchg
pop
les
sub
mov
fwait
cld
mov
add
das
mov
cmp
sahf
mov
dec
lret
std
push
lcall
push
pop
popa
xor
jecxz
rcl
mov
roll
mov
jb
ja
mov
mov
hlt
or
adc
bsr
aam
mov
mov
movsl
mov
mov
les
shl
sub
les
mov
movsb
outsl
push
dec
repz
adc
lods
xor
cld
jmp
inc
xchg
js
pop
pushf
test
imul
je
andb
mov
out
addl
cmpsb
pop
movsl
inc
xchg
xor
in
mov
fnsave
add
mov
fsubrp
lock
ret
subb
hlt
cmp
mov
sub
push
xor
loope
mov
shr
das
das
btc
sti
pop
stos
add
lret
add
shlb
xchg
mov
es
jle
shrb
cmpsl
sub
aas
outsl
inc
cmpsl
std
dec
in
es
mov
data16
adc
gs
xor
cmp
xchg
jno
shr
adc
pop
mov
jecxz
xchg
lea
lahf
cmp
clc
adc
popa
jle
fldlg2
pop
xchg
stos
fisttpll
icebp
xor
dec
ss
popf
cmp
inc
pop
pop
fisttpll
or
pop
mov
arpl
int
push
in
int
inc
adc
inc
adc
cmp
test
xchg
imull
pop
test
sarl
scas
stc
adc
push
shl
cmp
dec
xchg
add
mov
mov
das
rolb
xor
xchg
fldcw
divl
dec
jns
loopne
xchg
push
lds
les
in
inc
sbb
and
stos
pop
jo
or
bswap
fidivrs
out
pop
xor
adc
xchg
fiadds
ljmp
adc
arpl
and
mov
pop
cld
imul
sti
push
push
pop
and
lret
mov
push
push
cmp
sbb
dec
jmp
pop
and
adc
hlt
inc
sbb
xor
cmp
xor
and
pop
nop
push
stos
enter
in
sbb
lds
mov
and
cmp
add
lret
or
fstp
pop
jnp
mov
xor
and
in
mov
outsb
or
cmp
fdivs
mov
cwtl
push
mov
int
sbb
lock
dec
pusha
cmpsb
and
xor
or
aad
pusha
repnz
mov
jmp
fdivrp
aaa
je
pop
jae
pusha
add
sub
neg
mov
xchg
popf
push
xor
roll
mov
add
sub
adc
xor
cltd
add
shrl
scas
xchg
sub
sbb
mov
cli
fs
push
sbb
lock
lret
aas
xor
mov
andl
mov
fadd
test
jecxz
aas
shr
sti
lods
out
insl
pop
and
es
outsl
mov
sbb
jle
xorl
or
leave
inc
loopne
punpckldq
bound
imul
and
dec
clc
testb
add
jnp
add
push
aaa
sbb
push
inc
inc
std
cltd
add
sarl
sarb
mov
shlb
test
sub
push
fs
sbb
xchg
adc
mov
push
icebp
sbb
or
and
comiss
inc
das
lods
repz
push
outsb
mov
test
or
stc
and
sti
jbe
mov
or
mov
inc
jmp
sbb
sub
sbbb
shrb
mov
rorl
jmp
push
into
jg
mov
sbb
sbbb
push
mov
ret
mov
call
add
leave
and
aaa
pusha
jmp
ret
shrl
jle
push
adc
xchg
enter
aam
fimull
mov
jns
hlt
lret
pop
cmp
das
nop
dec
cmp
cmp
clc
xor
out
jmp
testb
sbb
test
xor
push
mov
fwait
addr16
jl
mul
add
aam
jo
cmp
aaa
inc
popa
fcoml
mov
add
dec
mov
into
or
in
aad
ret
jg
or
sti
mov
lods
jne
xor
push
cmp
jae
ret
fiaddl
adc
fcmovne
ret
dec
sbb
adc
aaa
cwtl
and
push
push
ret
mov
loope
lods
sbb
sub
mov
push
mov
xor
sub
popf
lock
imul
test
dec
and
scas
addl
sarb
inc
push
push
mov
push
pusha
mov
push
add
mov
cmp
cmp
cmp
mov
mov
ljmp
or
jge
add
je
mov
mov
cmp
test
xchg
movsl
lods
jne
ss
xor
stos
jne
sar
mov
or
imul
add
and
xor
inc
in
adc
or
cli
adc
pop
andl
pop
aaa
out
sbb
loopne
jmp
imul
int
mov
iret
adc
jecxz
jmp
movsl
sub
ss
or
push
out
stos
sar
ljmp
rorb
mov
adc
mov
out
aad
mov
scas
popa
pop
push
aad
mov
push
loopne
mov
int3
incb
adc
push
mov
cs
pop
or
pop
mov
and
lods
stc
jge
ds
xchg
mov
mov
push
fistpl
sub
mov
sbb
mov
popa
lods
sbb
mov
jecxz
subl
sub
xlat
lahf
lret
out
xchg
mov
mov
test
jle
push
rcrb
pop
jne
into
sbb
pop
mov
arpl
lods
loopne
mov
cmp
add
addr16
mov
push
pop
and
cmp
and
js
mov
shlb
movsb
aas
push
cmp
mov
ror
repnz
aas
lds
jg
sub
jno
mov
fldl
in
sbb
mov
arpl
icebp
lahf
xorl
in
dec
in
push
jge
dec
int3
clc
mov
sti
pop
cmp
mov
test
cltd
lods
fst
or
pop
fdivs
mov
add
fisubs
inc
and
mov
cmp
leave
xor
das
popf
xchg
push
xchg
push
pop
xchg
jmp
cmovs
push
leave
mov
scas
inc
mov
popa
and
aaa
rcr
xor
lea
dec
or
pop
or
inc
icebp
push
and
dec
inc
js
testb
xchg
clc
loope
outsl
lretw
jbe
sahf
sub
mov
push
cmp
mov
mov
bound
imul
mov
aas
loope
mov
jg
mov
mov
lahf
cmpsb
data16
out
sub
fdivs
sbb
xor
mov
cmp
mov
in
add
jb
dec
push
pop
ret
test
dec
aad
fsts
mov
jmp
jl
outsb
inc
xor
and
pop
repz
jb
fmul
clc
stos
jl
xor
xchg
popf
sbbl
in
xchg
pop
mov
inc
pop
ljmp
mov
and
jae
fldz
push
mov
push
mov
insb
dec
xor
cmpsb
fwait
daa
or
mov
fwait
add
out
push
push
lret
testl
cwtl
lret
sub
ret
fldt
out
call
das
outsl
inc
in
sub
std
push
fisttpll
shrb
imul
cmp
mov
test
sub
sbb
out
dec
pop
in
aaa
and
stc
adcb
and
outsl
ret
ret
adc
in
jge
lret
jp
in
jmp
jnp
jl
mov
cs
lods
or
or
cmp
sti
insb
test
jns
lods
xor
jmp
pop
xchg
push
xorl
inc
or
icebp
adc
sbb
insl
inc
cmp
dec
mov
ficoms
dec
fstpl
lcall
jae
ret
push
in
inc
mov
test
push
add
and
loopne
ja
popa
std
cmp
andl
mov
dec
pop
sahf
mov
pop
and
into
push
jb
jo
into
mov
sbb
push
push
jns
je
push
shlb
hlt
mov
insl
or
int
or
lea
notb
jl
add
mov
or
and
shll
push
outsl
daa
shll
and
or
xchg
gs
ret
push
pop
call
fdivrl
mov
and
pop
xor
push
pop
add
inc
cmp
mov
es
pop
addl
add
adc
jne
inc
inc
mov
push
mov
fistps
jnp
ljmp
sbb
xchg
cli
mov
stos
xchg
mov
and
push
inc
daa
cltd
xchg
aam
dec
pop
add
sub
repz
fs
hlt
push
jno
push
mov
lods
pusha
push
notl
jns
lods
or
std
mov
out
test
cmp
out
adc
aad
cltd
and
dec
cmc
lods
jnp
mov
inc
nop
push
jnp
xor
push
push
xor
cmpsl
fstpt
sub
lret
xchg
push
hlt
daa
pop
push
mov
das
mov
lods
lea
xlat
sbb
xchg
ficoml
in
ljmp
call
pop
mov
ja
jbe
movsb
gs
mov
push
cli
lock
push
xchg
jmp
ja
hlt
xor
clc
mov
loop
mov
add
fstpl
and
test
pop
lret
inc
nop
imul
scas
sbb
push
ret
cmp
xor
pop
pushf
push
lods
and
mov
mov
fisttpll
mov
fadds
mov
filds
and
fwait
add
movsl
xchg
push
ret
mov
and
cmpb
xchg
inc
pusha
mov
mov
mov
ss
aaa
add
insl
mov
out
push
mov
push
insl
mov
mov
and
inc
test
mov
lock
imul
fwait
jg
sub
mov
pop
arpl
repnz
lock
clc
test
dec
jecxz
scas
add
mov
xor
or
dec
push
lcall
xchg
inc
or
cmp
ljmp
pop
inc
out
inc
rcrl
xchg
and
xchg
mov
popf
insl
and
mov
popf
jae
out
pop
je
sbb
cltd
jnp
sub
inc
lret
adc
arpl
mov
fnsave
jno
pop
jle
or
sub
inc
inc
ss
pop
and
dec
cmpl
sub
ror
xchg
divps
mov
int3
fcomp
outsl
js
jns
push
push
dec
sub
fs
xor
add
adc
mov
js
mov
cmpsb
pop
test
mov
xchg
xchg
sbb
jbe
push
inc
mov
jg
je
imul
rcr
adc
mov
test
cwtl
rol
rcll
lock
test
orb
adc
fsubrp
rclb
das
cmp
imul
sbb
mov
jne
out
cmpsl
fstpt
mov
addr16
lcall
mov
addr16
xchg
subl
mov
lcall
or
pop
mov
test
jl
sub
push
in
in
push
sub
enter
mov
repz
xchg
cld
inc
andl
sbb
cs
mov
adc
lret
pushf
jae
adc
xchg
icebp
sub
rclb
test
test
lahf
sar
jnp
stc
addr16
xchg
xor
cltd
or
mov
mov
call
pop
shr
cmpsl
cmp
rclb
arpl
sbb
test
push
sbb
movsb
stos
or
lcall
pop
pop
roll
and
inc
dec
sub
into
mov
stos
dec
ficoms
mov
shll
mov
test
xor
cmp
and
push
int
pop
push
jmp
inc
add
xchg
mov
xchg
ficoml
lock
adcl
fstpl
jecxz
mov
scas
cwtl
jo
dec
sbb
push
push
cwtl
lahf
jno
mov
fadd
cmp
bound
push
ret
adc
xchg
pop
jns
mov
test
faddl
rolb
and
pop
pop
sub
mov
fwait
inc
mov
push
push
jmp
mov
out
out
shll
xor
xchg
jg
mov
cltd
or
mov
dec
sub
pop
into
xor
adc
test
bound
lock
and
insb
and
cltd
lcall
lock
jno
loop
dec
cmp
lahf
aam
in
icebp
jecxz
pop
sbb
cmp
mov
sub
outsb
sub
xchg
add
les
pop
mov
cmp
mov
mov
cmp
dec
mov
inc
sub
pusha
inc
ret
je
leave
aad
xchg
dec
mull
cmp
iret
fmul
out
insb
ljmp
mov
mov
dec
fisubrl
mov
sbb
or
mov
adc
xchg
mov
mov
loope,pn
cmp
cld
popf
imul
ja
lds
mov
daa
call
stc
icebp
xchg
mov
imul
or
sti
mov
mov
and
adcl
jg
mov
push
xor
shlb
dec
cmc
and
adc
sbb
pop
pop
les
xor
jo
idivl
or
mov
sbb
dec
hlt
lcall
stos
and
or
add
dec
repz
add
dec
mov
js
adc
popa
clc
sbb
push
mov
push
mov
or
call
lods
rcrl
bound
call
jmp
xchg
or
push
mov
pop
orb
inc
cmp
test
popf
rcrb
sub
ljmp
rclb
cmp
mov
gs
imul
ljmp
pusha
jmp
push
nop
and
push
cmpsb
scas
dec
jge
mov
cmp
xor
push
out
notl
scas
adc
xlat
dec
jp
psllw
and
flds
pop
mov
jge
rep
mov
adc
sbb
test
test
call
jae
jae
leave
mov
hlt
mov
inc
inc
mov
jle
mov
pop
test
sbb
cmp
add
lret
mov
lahf
mov
adc
push
rorb
and
scas
inc
cmp
pop
iret
psubsb
fistpll
cmpsl
sbb
mov
mov
out
mov
xor
pop
fimull
add
sbbl
fs
and
mov
mov
out
sbb
pop
aas
subl
dec
xchg
ja
sub
clc
cmc
into
mov
mov
shll
cmp
lahf
shlb
push
or
xor
cmp
add
out
dec
xor
movsb
sahf
pop
adc
push
arpl
ret
and
add
sbb
lock
xor
sbbl
iret
adc
jl
out
repnz
filds
push
inc
bound
sbb
mov
jbe
mov
lahf
imul
xor
cmc
cmc
mov
sbb
test
mov
ret
mov
mov
movb
outsb
mov
add
scas
mov
dec
dec
xchg
push
jno
insl
and
outsb
popf
ja
sti
xor
sub
std
mov
je
inc
mov
dec
mov
movl
mov
cs
mov
xlat
add
arpl
leave
cmp
jae
sub
inc
ja
stos
hlt
sbb
xchg
sbb
inc
mov
mov
dec
dec
mov
decl
xchg
inc
lods
xlat
outsb
mov
xchg
ds
ja
cmp
push
aad
popf
lods
and
xchg
leave
xchg
add
pushf
push
sbb
shlb
jnp
mov
dec
jae
cmp
inc
arpl
xlat
push
mov
xchg
repnz
cmpsb
mov
fistps
add
and
insl
push
jae
jp
testl
push
dec
xchg
pop
repz
sub
sub
jne
fldl
inc
fst
in
push
imul
and
pop
mov
cwtl
xchg
mov
enter
xchg
loop
outsb
push
cmc
cld
adc
movsb
add
cmc
jg
or
jbe
out
mov
jbe
pop
or
push
mov
xchg
mov
jno
loope
fs
mov
insb
xchg
cld
xor
mov
inc
insb
mov
in
int3
dec
cmp
aaa
ja
loop
inc
mov
add
call
cmp
sbb
gs
imul
or
popf
shr
and
pop
jb
xchg
movsl
out
pop
push
and
xor
sub
sub
shr
dec
sbb
loop
or
test
mov
inc
sbb
mov
jns
adc
std
std
jns
cmp
xchg
mov
idivb
rcll
movsl
leave
notl
jl
clc
adc
cmp
lods
cmc
test
pop
inc
mov
in
adc
mov
dec
or
lds
add
mov
xchg
jp
pop
lods
in
mov
push
cmp
aam
and
xchg
cmp
ficoml
push
icebp
dec
or
sub
push
sahf
or
and
insb
cmpsl
lds
push
and
test
cld
dec
fxch
cmc
shl
clc
jns
cmp
lods
cmc
cmp
and
lods
inc
sub
out
push
pop
add
mov
push
sbb
dec
mov
jl
adc
test
rcr
stc
sub
test
mov
test
cwtl
fadd
cmp
aad
mov
dec
stos
pop
add
adc
cs
inc
pop
push
cmp
aas
loope
jg
outsl
roll
rcll
inc
or
cmpb
lock
adc
int
nop
jmp
xchg
fdivs
lods
es
popf
roll
dec
xchg
cmp
sbb
fcomip
lods
jne
jbe
ret
fisubs
sbb
and
jno
pop
mov
dec
mov
jne
fidivs
push
in
jns
inc
sarl
andb
sarl
and
in
pushf
cltd
push
mov
lods
negl
test
fimull
push
or
in
test
inc
sbb
orb
cmp
mov
daa
mov
cmpb
xchg
inc
loopne
scas
push
outsb
pop
fnstenv
ret
outsb
xchg
popa
add
mov
outsl
outsb
pop
out
jbe
call
xchg
dec
dec
xlat
sub
arpl
std
les
jmp
inc
adc
jo
inc
lret
scas
adc
arpl
push
int3
lahf
jno
add
xchg
pop
add
push
jo
xchg
int
push
xor
aad
popa
dec
xor
cmc
rol
mov
fistl
xor
fldcw
insl
iret
sbb
movsb
pop
jmp
js
cmc
imul
mov
mov
shl
push
lret
pushf
mov
pushf
arpl
bound
or
shlb
cmc
dec
xchg
scas
iret
xchg
and
adc
out
adc
in
dec
je
ljmp
adcb
icebp
mov
ret
loopne
fs
data16
int3
inc
test
fistl
lahf
sub
or
fwait
xchg
addl
dec
jbe
bound
shl
jecxz
push
sahf
imul
arpl
bound
shrl
repnz
jecxz
ret
pusha
out
cwtl
xlat
jmp
stc
and
fs
test
je
adc
fcomps
mov
roll
or
pop
mov
movsb
or
mov
sbb
fnstenv
cmp
pop
add
addr16
cli
cmc
xchg
sub
mov
sbb
sbb
sahf
mov
std
or
sbb
incb
mov
jno
inc
pop
ljmp
pop
idivl
xor
push
sub
out
or
arpl
out
jae
and
int
faddp
andl
adc
fwait
pop
dec
jnp
imul
imul
mov
sub
test
or
stos
push
lods
repz
jl
push
fldenv
push
mov
sbbb
push
stc
dec
aas
pushf
xor
xchg
push
rclb
mov
dec
mov
pop
lret
push
add
shll
loope
sbb
xchg
fadd
sub
cwtl
push
cmp
dec
mov
xchg
pop
jecxz
push
test
sbb
cmp
aaa
lcall
push
nop
arpl
in
jle
fabs
shl
in
sbb
mov
enter
push
mov
loope
sub
inc
xor
xlat
dec
xchg
xchg
mov
test
push
xor
mov
cltd
mov
loop
shlb
insb
cmp
or
add
fwait
jmp
pop
out
or
adc
sub
fs
dec
jecxz
pop
xchg
inc
mov
push
push
add
sbb
mov
and
dec
and
ds
and
inc
loop
imul
xchg
mov
or
popw
sub
xchg
dec
pop
aas
xchg
sub
cwtl
sub
adc
push
je
push
repnz
nop
mov
mov
cmp
loopne
aad
pop
xchg
jecxz
jmp
test
ljmp
lahf
inc
rcl
or
aad
popf
bswap
aaa
dec
sbb
int
sti
movsl
add
aaa
jns
push
mov
and
bound
xchg
pushf
divl
fbstp
sahf
dec
ja
sub
sub
inc
mov
call
aad
cmpl
push
mov
lcall
loop
call
lret
mov
pop
jbe
xchg
cmp
dec
mov
add
mov
pop
rol
fistps
xchg
xor
adc
lahf
imul
xchg
xor
pop
push
pusha
add
dec
push
lods
rol
std
outsl
push
cmp
sti
xchg
dec
push
add
adc
mov
aad
bound
dec
mov
xchg
leave
mov
js
sbb
neg
mov
add
hlt
xchg
test
adc
cld
or
shl
and
out
cmp
cmp
or
pop
andl
fistps
dec
inc
unpcklps
pop
ss
mov
js
sbb
mov
repz
jle
call
add
mov
mov
rorl
leave
js
xchg
ret
movb
push
lahf
loope,pn
push
leave
insb
out
daa
mov
adc
dec
and
int
cmpsl
jle
je
or
sbb
pop
xor
dec
lret
and
pop
lock
je
lods
mov
xor
sbb
mull
push
add
lea
push
call
push
aaa
shrl
pop
ret
data16
fwait
ret
lods
icebp
sbb
lret
loopne
mov
mull
inc
lods
lcall
push
mov
mov
cltd
movsl
pop
out
lods
jle
sub
dec
int3
cmpsb
dec
push
inc
or
push
repz
out
fsubl
iret
jge
mov
ljmp
aas
sahf
test
jmp
sub
out
aam
push
xchg
ljmp
mov
inc
outsb
lea
adc
mov
cli
ret
xlat
test
mov
inc
mov
xor
loop
cmp
icebp
dec
popa
stc
cs
orb
or
stc
sbb
repnz
sub
cmpsb
dec
scas
dec
jecxz
or
jne
push
and
pusha
enter
dec
mov
dec
mov
into
pushf
into
int3
inc
in
mov
loop
sahf
mov
pop
adcl
ja
repnz
or
fwait
arpl
mov
jg
jmp
sub
arpl
adc
or
nop
inc
cmp
pop
scas
aam
adc
pop
punpckldq
jns
std
nop
test
stos
lds
cmp
dec
movsb
jb
fmuls
inc
jge
mov
rcrb
test
inc
inc
ds
dec
push
js
dec
add
ret
fwait
ja
inc
or
shlb
rcll
and
andb
adc
lds
cmp
shlb
icebp
int
imul
add
into
jp
jbe
inc
in
scas
aad
add
sbb
add
add
movl
gs
add
pop
mov
cld
xchg
jnp
fsts
stc
sub
test
cmp
sbb
pop
sub
and
dec
aad
add
add
or
sub
test
repnz
stc
ja
out
stos
pop
fwait
repnz
aam
mov
es
sub
sbb
fdiv
fsub
rcr
faddp
mov
adc
mov
testb
xor
push
lock
mov
mov
shlb
ret
dec
loop
inc
dec
inc
test
cmpl
jmp
dec
cltd
out
pop
pop
pop
push
notb
add
xor
and
andb
cmpl
loopne
imul
out
inc
xchg
mov
incb
jle
adc
and
pop
add
push
adc
pop
movsb
movsl
inc
loop
sti
inc
sub
hlt
das
insb
mov
xor
cmp
out
bound
and
cltd
sub
sti
add
xchg
pop
inc
cmp
ljmp
mov
xchg
lods
dec
mov
ja
xchg
outsb
add
inc
loopne
inc
and
lea
push
xor
dec
ret
xchg
out
and
test
addr16
sub
jno
iret
lcall
mov
xchg
ss
mov
aas
or
mov
out
pop
dec
repz
mov
decb
pause
lahf
clc
in
psllq
dec
adc
ljmp
mov
cmp
fildll
test
mov
fadds
or
push
lret
xor
mov
cmp
mov
mov
mov
jae
imul
fcom
leave
push
popa
cmp
out
or
cmp
or
lret
jae
add
scas
jb
into
adc
xor
dec
nop
dec
xchg
leave
repz
test
jne
test
dec
insl
inc
data16
cmp
mov
insl
stos
jns
push
daa
pushf
je
stos
push
fcmove
push
scas
xor
mov
jbe
iret
cltd
mov
mov
pop
adc
data16
pop
mov
ja
into
stc
and
add
clc
sbb
adcl
int3
enter
in
mov
das
fs
pop
mov
jae
xchg
hlt
mov
lret
push
leave
int3
or
lds
mov
add
mov
fstl
mov
mov
xchg
fadd
push
loopne
outsb
adc
or
adc
nop
sbb
dec
ja
cli
mov
push
adcl
cs
xchg
jmp
inc
aad
daa
cwtl
cwtl
iret
pop
pop
mov
stos
mov
std
gs
mov
add
pusha
pop
ja
loope
mov
ret
sbbb
adc
mov
aad
movb
outsb
gs
add
rorb
out
subb
ja
and
or
or
add
arpl
mov
arpl
jne
jb
fdivrs
or
jb
push
loop
stc
ret
stos
repnz
push
scas
into
sbb
cmp
mul
and
dec
add
cmp
sarb
sti
mov
mov
aaa
popa
jno
lea
loopne
adc
or
insl
inc
jae
mov
and
pusha
out
icebp
cmpsl
popf
lret
scas
sbb
or
popf
inc
sbb
addr16
pop
or
ljmp
nop
dec
pop
and
sub
test
mov
pop
fisubrl
jecxz
and
arpl
aad
es
inc
mov
stos
mov
clc
lock
pusha
out
les
aad
push
inc
sbb
sub
ds
fsubrp
or
pop
bound
xchg
mov
adc
sbb
lret
mov
shll
lcall
cwtl
xlat
cmpsb
push
xor
ljmp
pop
iret
jae
in
ljmp
popf
je
adc
add
adc
inc
xchg
into
mov
mov
addb
jmp
mov
and
mov
pusha
push
push
cwtl
aas
and
repnz
jg
fdivrl
lods
test
xchg
ja
mov
jae
adc
notb
inc
nop
cmp
dec
pop
arpl
movsb
inc
fsubl
repz
jmp
push
pop
ljmp
out
xchg
popa
outsl
lcall
sbb
popa
pushf
in
dec
loope
dec
imul
push
xor
movl
dec
sbb
mov
push
mov
aas
add
fbstp
inc
xlat
xchg
jo
int3
enter
lock
aas
cmp
sbb
xorl
mov
cmp
mov
dec
pop
cmpl
fcmovu
int
or
sub
movd
je
adc
jo
sub
mov
push
pop
mov
stc
xchg
inc
cmpb
mov
adc
mov
xchg
fdivrs
adc
lea
loopne
mov
movsb
lret
jle
mov
or
mov
call
push
mov
lret
pop
mov
scas
icebp
adc
push
ficompl
pop
and
mov
mov
mov
shll
pop
push
popf
mov
repz
daa
test
in
sbb
mov
fcmovnb
jle
iret
repz
sbb
push
mov
xorl
out
jbe
mov
lods
xor
sbb
mov
pop
movsl
icebp
sub
adc
add
or
xor
inc
addl
in
scas
jae
cmc
or
clc
jp
cltd
jg
sarb
xchg
cmp
std
pop
jecxz
std
sub
iret
mov
adc
jae
xlat
pop
stos
cli
mov
or
adc
push
mov
mov
aaa
je
mov
leave
and
ja
cwtl
rorb
push
ret
loop
cli
mov
sbb
lret
add
cmp
push
ffreep
mov
cld
das
jl
aam
sbb
enter
cmp
js
xchg
test
xchg
inc
adc
jecxz
enter
fldcw
in
cmc
sbb
ret
in
ret
push
xchg
cmp
inc
push
jp
xchg
pop
sub
mov
or
push
pop
ret
dec
or
fwait
inc
cmp
dec
arpl
stos
outsl
outsb
sub
xorb
push
push
mov
mov
fcmovne
cmp
cmpsb
jbe
mov
lods
ret
cmp
cmpsb
mov
push
in
push
dec
and
fxch
inc
in
sarl
call
stos
ljmp
jne
sbb
insb
add
or
inc
stos
xchg
xchg
ljmp
repz
mov
aas
iret
inc
movb
pop
add
aas
out
scas
and
xor
or
dec
lds
dec
mov
xor
cmp
out
pop
mov
pop
dec
jnp
ss
call
push
sub
cmp
pusha
xchg
xor
lcall
push
or
xchg
ret
hlt
stc
push
insb
and
adc
lahf
in
sbb
nop
xor
sbb
add
push
shrb
in
xor
mov
lret
jp
push
call
rcll
jecxz
dec
mov
insl
add
sbb
dec
enter
loope
outsl
jo
outsl
push
sbb
rcrl
shlb
bound
cmp
push
subb
pop
xlat
sti
lea
std
aas
in
sbb
xchg
mov
adc
icebp
push
movsb
push
sbb
push
outsb
mov
cmpsb
mov
xchg
jne
pushf
arpl
mov
lahf
mov
pop
rcrb
cmp
pop
pushf
mov
xor
dec
adcb
out
cmp
or
jb
and
inc
leave
pop
es
pop
cmp
xor
ljmp
xchg
stc
xchg
push
sbb
sub
push
daa
imul
sub
pop
jmp
pusha
imul
int
leave
dec
scas
stos
cmpsb
ret
into
mov
lret
push
loop
lods
iret
in
mov
inc
mov
ljmp
xchg
lahf
or
lods
jo
out
inc
fyl2x
and
and
cld
mov
mov
leave
inc
dec
mov
xchg
pop
call
ja
xchg
cmp
cmpsb
leave
sub
cmpsb
std
fisubs
shll
fstpl
cmp
ljmp
arpl
pop
inc
xor
test
and
inc
jbe
mov
cmp
cmp
mov
sub
nop
xor
sub
sub
mov
push
stos
cmp
add
mov
bound
int
and
iret
inc
xlat
fucom
mov
mov
push
je
pop
or
js
test
mov
ret
cmpsb
fs
mov
dec
fbstp
mov
addr16
ret
pop
popf
arpl
aam
cltd
iret
ret
jae
dec
lock
icebp
xor
xchg
sbb
imul
stc
mov
leave
cs
dec
les
test
daa
inc
jg
xchg
jne
dec
and
mov
lret
mov
mov
dec
in
inc
pop
ss
cs
cltd
adc
cmp
mov
ficoml
cwtl
shlb
mov
loope
out
dec
or
ljmp
jo
scas
mov
imul
dec
jb
xor
pop
test
aas
mov
jmp
mov
ja
adc
inc
dec
and
mov
xchg
sbb
outsl
in
cmp
mov
mov
cwtl
addr16
mov
push
loop
xchg
xlat
cmp
sbb
jl
les
sbb
push
pop
cs
into
sbb
mov
or
dec
jne
cmp
das
imul
sub
and
dec
aam
mov
fcoml
xor
xor
dec
mov
movsl
sbb
cmc
pop
sbb
inc
in
loopne
mov
pop
sbb
jp
xchg
or
hlt
mov
inc
sbb
adc
fldcw
daa
int
push
push
das
lret
mov
cmpsb
or
fldenv
loopne
cltd
ds
inc
push
push
xor
add
and
cmp
pop
sub
shlb
fisubrs
inc
inc
sub
mov
add
cld
test
fidivrl
jge
cmp
lods
jge
mov
xorl
or
cmp
shll
cltd
movsb
lahf
inc
or
sub
fisttpll
dec
dec
sub
rcrb
popf
xchg
roll
push
jmp
jge
fsubl
sbb
add
pop
xor
and
dec
enter
mov
jge
jge
adc
roll
xchg
pushf
mov
xchg
adc
push
lret
popf
xor
xor
dec
inc
enter
mov
push
push
sbb
pushf
xchg
inc
std
addr16
repnz
fcomps
mov
rorb
sub
mov
leave
adc
sbb
rcrl
jle
int3
cmp
xor
daa
push
call
js
pop
mov
jg
sbb
leave
inc
imul
scas
rdmsr
lret
fdivs
mov
mov
sarb
js
shlb
and
js
in
adc
push
xlat
sbb
mov
mov
fdivrl
out
ja
and
cli
sub
mov
push
fcmovne
sub
filds
sbb
lods
fidivs
shlb
dec
push
lock
dec
xrelease
mov
test
lods
adc
sub
gs
mov
xchg
cmp
movsb
movsb
ror
nop
jge
pop
arpl
sbb
inc
sarl
xchg
sub
or
sub
incl
gs
ljmp
mov
ss
ljmp
call
xorb
push
pop
push
shll
das
add
mov
sub
imul
adc
shrw
jecxz
mov
cld
xchg
xor
andb
lods
mov
repnz
mov
lods
daa
sbb
ja
aas
adcl
adc
in
sbb
pop
xchg
lods
xchg
mov
dec
pop
and
jle
add
sbb
pop
insb
cmpl
lods
lret
add
out
mov
fbstp
out
lds
divb
and
popa
and
sbb
movsl
jns
js
fistpl
les
fidivs
sbb
insl
mov
mov
bound
addr16
jmp
ljmp
pusha
mov
xchg
cmc
xchg
rcrb
push
outsl
mov
jno
jmp
jecxz
and
in
daa
fwait
das
loop
pusha
sbb
loopne
loop
mov
es
cwtl
jmp
jnp
cli
mov
sub
loope
in
imul
aaa
incl
mov
bound
push
sub
dec
mov
inc
mov
cmc
dec
push
lcall
shrl
mov
rorb
loope
pop
aas
and
aad
xchg
jae
lret
gs
and
test
nop
cmpsb
mov
xlat
pop
enter
pusha
dec
ljmp
and
or
loope
popl
dec
xor
enter
fisubl
cmp
ret
push
cs
xor
jno
mov
dec
jnp
sbb
jbe
jp
xor
das
shll
aad
iret
imulb
pop
cmp
jg
pushf
mov
mov
push
push
adc
cli
aas
and
push
movsb
lock
cmpl
insl
loop
pushf
in
mov
roll
fidivrs
pop
arpl
outsl
jp
inc
push
ror
mov
out
fcoml
rcl
push
adc
xor
ficoml
mov
cmp
push
mov
pop
push
ljmp
inc
pop
xchg
inc
push
cmp
xchg
pop
bound
imul
mov
xor
arpl
pop
lea
jg
ret
sarb
es
negb
mov
xchg
in
scas
cmpsl
mov
je
insl
sbb
bound
movsl
in
out
aam
push
lcall
mov
push
cmp
or
dec
lcall
cmp
jg
pop
mov
xchg
cmpps
xor
stc
sbb
xor
adc
icebp
pop
call
dec
mov
cmp
mov
xor
pop
repnz
xchg
sub
mov
mov
xor
lods
shr
sbb
sub
inc
inc
insb
aam
pop
pop
pop
push
in
mov
jp
lret
dec
ret
xchg
inc
pop
cmc
fprem1
ficompl
test
mov
push
mov
mov
shll
outsl
adc
gs
fdivl
js
in
push
jne
push
dec
int3
scas
testb
pop
scas
mov
mov
mov
rol
subb
jecxz
inc
clc
jne
int
dec
cmp
daa
lds
mov
test
add
jb
sub
cmp
js
sbb
cmp
rorb
popf
lods
push
cli
std
mov
fnsave
mov
inc
in
jns
in
dec
mov
and
and
idivl
mov
divb
test
es
inc
shr
adc
pop
fiaddl
clc
pushf
and
enter
test
lret
into
in
push
sahf
or
pop
sub
mov
mov
gs
jne
std
and
iret
fists
fcom
das
xor
stos
pushf
cmc
and
push
arpl
ret
lea
pop
mov
fadd
inc
mov
push
pop
inc
lret
mov
sbbl
add
add
pop
sbb
inc
jle
ljmp
cmp
cmpsl
std
sbb
lret
push
sbb
inc
cltd
aaa
jnp
les
les
inc
stc
test
repz
or
idivb
jle
pop
lods
push
sahf
shrb
sbb
pop
in
sub
into
or
dec
xor
inc
in
cmp
out
fs
mov
int
loopne
sub
adcb
push
repnz
mov
sub
jno
adc
and
test
jp
scas
cli
jo
push
cwtl
push
sbb
sbb
jbe
add
xchg
xor
lea
xchg
mov
cld
hlt
cld
int
and
pop
fnstenv
or
adc
inc
call
ret
sub
push
push
xchg
rol
pop
mov
fidivl
mov
inc
pop
push
lahf
out
mov
pop
movsl
push
cs
inc
jns
inc
clc
ret
es
push
lahf
mov
push
stc
test
lret
dec
inc
lods
sub
and
dec
xchg
cmpsl
jbe
mov
scas
jp
leave
pop
mov
dec
mov
pop
cmp
shr
pusha
xchg
adc
pop
fcmovbe
xchg
xchg
jno
cmp
mov
arpl
daa
dec
lahf
dec
jno
arpl
xchg
xor
outsb
test
adc
and
scas
addr16
enter
or
test
pusha
xchg
rcl
jl
lea
mov
or
stos
pop
cli
inc
pop
je
mov
icebp
into
frstor
mov
loopne
orb
lods
negb
xor
and
jecxz
sti
jmp
push
or
fstpt
in
sbb
adc
or
cltd
out
mov
sbb
dec
adc
fimuls
mov
sub
push
or
call
and
cmp
and
mov
add
and
xchg
xor
push
adc
sarb
jle
lret
mov
mov
in
dec
lods
scas
icebp
xchg
sbb
inc
sub
dec
scas
xchg
cmpsb
fstpt
cmpsl
xchg
leave
lods
outsb
push
popf
scas
mov
mov
dec
xchg
xchg
movsb
push
sub
sti
jae
pop
inc
lods
and
test
js
jmp
adc
arpl
aas
add
sti
cli
sub
cmp
jle
xor
outsb
jnp
mov
cli
pusha
aas
jae
cli
push
mov
cmp
jge
adc
add
jns
cmpsl
popa
sti
outsl
xorl
sbb
add
add
jg
jmp
aas
test
push
or
fiaddl
mov
sbb
adc
aad
jb
sbb
jnp
dec
inc
addr16
xchg
dec
dec
add
and
cs
daa
jle
push
shll
lods
cs
jno
lods
pop
adc
add
daa
push
xlat
clc
nop
cmp
push
xor
jae
test
and
imul
jbe
dec
mov
or
dec
dec
mov
adc
stc
mov
fnstsw
cld
sbb
repnz
jge
jnp
test
ret
stos
mov
movb
aas
add
mov
andb
cmp
or
push
sub
cmc
sahf
dec
std
insb
rol
into
jno
insl
test
adc
inc
cmpb
mov
repnz
cmp
test
test
push
enter
mov
popf
loope
lods
cmpsl
or
pop
mov
mov
ret
sub
sub
push
dec
int
pop
cli
mov
ror
gs
nop
jle
mov
iret
pop
mov
xlat
or
push
test
xchg
mov
add
xlat
mov
cmp
mov
je
pop
int
pop
sbb
lock
jg
fimull
enter
sti
jo
int
out
sub
das
mov
xor
pop
cmp
js
push
jbe
lret
jno
inc
psadbw
jl
hlt
rclb
mov
cwtl
fbld
loop
fdivrl
jb
cli
mov
aam
push
sbb
dec
enter
std
sub
or
and
icebp
repnz
inc
cs
in
adc
pop
cld
push
mov
test
mov
int3
sub
andb
dec
sub
mov
adc
sub
xchg
inc
xor
inc
mov
ja
popf
fistps
xlat
ret
fs
lock
add
outsl
xchg
data16
jb
jle
jbe
pop
jg
pop
mov
cmc
sbb
faddl
test
pop
inc
in
jns
lcall
arpl
add
pusha
add
jns
jno
and
ja
pusha
cmc
sahf
lock
movsl
fsts
daa
dec
and
imul
das
outsb
addr16
stos
xor
sub
das
rclb
pop
mov
jle
ss
mov
mov
lret
mov
jb
shl
adc
pushf
push
imul
pusha
cs
mov
js
xor
inc
rorl
cmp
rolb
movsb
pop
push
daa
mulb
shll
push
jbe
jmp
mov
mov
jle
xorb
inc
xor
mov
sub
dec
inc
and
or
pusha
mov
push
inc
mov
movl
mov
movb
xabort
out
lret
pop
out
dec
pop
inc
jge
sbb
ja
mov
aas
leave
pop
pop
xchg
pop
cmp
cmp
imul
dec
fwait
loope
mov
cltd
test
in
outsl
mov
or
inc
dec
ljmp
fcmove
notb
push
sahf
into
fadds
fldl
mov
inc
push
insl
ret
fs
push
mov
es
leave
jae
sbb
adc
pop
out
mov
push
in
cmpsl
lret
lcall
sti
and
fimuls
or
cltd
mov
xor
stos
inc
ror
pushf
push
lods
jmp
push
les
outsb
mov
push
popa
ds
jp
cmpl
xchg
inc
call
bound
mov
add
and
inc
loopne
in
or
inc
dec
sahf
iret
adc
clc
sarl
jmp
xor
sub
sahf
jne
out
fwait
dec
sub
dec
fabs
cmp
xchg
insl
dec
xor
test
mov
jp
push
ja
mov
push
das
sub
add
fdivrs
cmp
jnp
jbe
incl
ds
scas
cmp
loopne
sub
mov
mov
cmp
out
fnsave
orb
lea
jbe
je
sub
jbe
cld
cmp
mov
out
cmpsl
fstpl
inc
xor
dec
mov
arpl
pop
xchg
mov
mov
fcmovb
jnp
lock
push
les
sbb
dec
std
gs
out
data16
or
pop
inc
fcmovu
lock
loop
shll
lock
stc
in
movsl
mov
dec
inc
lds
insl
dec
push
mov
mov
and
add
sbb
es
pop
stos
fst
aas
fisubrs
xchg
pop
dec
dec
sub
and
ds
dec
cwtl
sbb
arpl
adc
lods
lret
cmp
mov
push
xchg
cmpsb
cmp
iret
stc
test
sub
inc
jae
in
leave
jae
xor
sbb
add
lret
mov
rcrb
mov
outsl
neg
adc
add
jb
scas
inc
push
xchg
insb
sbb
mov
sbb
hlt
shl
push
call
ficompl
jns
ja
mov
pop
cmp
adc
ret
push
add
ja
add
int3
push
int3
mov
mov
loop
ficompl
sbb
pop
stos
xor
out
inc
mov
lret
rclb
mov
dec
xor
inc
adc
in
out
xchg
jge
add
arpl
push
aaa
outsl
or
fimull
inc
add
iret
push
loope
sbb
mov
call
outsb
dec
or
test
jbe
push
movsb
inc
dec
mov
adc
sahf
mov
push
xchg
jo
or
mov
push
ljmp
pop
pop
sub
xchg
movsl
popa
mov
outsl
push
xchg
lahf
xchg
stos
lcall
jmp
mov
and
ja
lods
fstps
addl
add
mov
pusha
outsl
test
xchg
mov
add
and
imul
bound
add
push
dec
inc
or
mov
jbe
xchg
cmp
sub
cld
stos
cli
adc
and
pop
jmp
pop
mov
xor
sub
stc
arpl
out
lahf
jp
rol
aas
test
and
andb
add
xor
sbb
mov
adc
out
int
scas
rcll
sub
andb
data16
shl
jl
adc
pop
test
pusha
ds
pop
xchg
jb
into
lea
into
repnz
jbe
xchg
lods
and
mov
lea
xchg
and
mov
xchg
stc
cmp
inc
mov
fildll
inc
push
xchg
cs
push
clc
movsb
dec
lcall
enter
sub
xchg
mov
pop
mov
shrb
ljmp
scas
xor
xor
in
ss
cmp
jmp
add
dec
xor
xchg
or
int
add
pushf
js
pop
pop
and
loop
arpl
mov
dec
shrb
jl
mov
or
cmp
in
pop
push
lahf
hlt
pop
xchg
jae
or
test
dec
xchg
add
mov
lret
cwtl
mov
add
aam
in
mov
jmp
dec
jo
push
popf
and
sub
sbb
sub
mov
push
xchg
xor
mov
jne
mov
movsb
inc
pusha
sub
jne
cmp
or
in
inc
ja
bound
mov
gs
jmp
inc
aad
pushf
dec
push
test
xchg
adc
and
int3
pushf
jno
push
mov
mov
mov
pop
fldl
outsb
mov
fisttps
xchg
sbb
rclb
scas
add
cmp
and
xchg
pop
adc
mov
imul
adc
mov
popa
ja
rol
cmp
imulb
pop
int
xchg
repnz
sub
insl
cmpsl
pop
push
pop
pushf
and
repnz
inc
fmuls
incl
mov
add
movl
mov
ret
in
xor
popf
xor
push
stos
lock
add
add
xchg
mov
test
mov
mov
dec
pop
lock
mov
add
lds
jp
out
pop
aaa
push
pop
aam
and
sbb
popa
adc
into
jae
pop
mov
lar
pop
aad
xchg
xor
ljmp
in
jno
mov
test
decl
inc
jge
xchg
sahf
add
loop
shrl
cmpsb
or
push
lods
popa
aam
cmpsl
ja
sub
cmp
lock
mov
in
movsl
pop
sahf
fidivl
lock
mov
mov
call
mov
enter
jno
ret
xchg
fwait
pop
ljmp
push
cwtl
lds
pop
movsl
push
sub
jmp
pop
jno
jmp
imul
clc
jg
les
dec
mov
push
jno
add
xchg
aam
out
roll
jnp
bound
push
add
cmc
lahf
arpl
in
jg
or
dec
mov
push
add
push
imul
scas
cmp
addb
test
and
movsl
and
adc
bound
pop
or
or
push
in
icebp
pop
sub
mov
xchg
test
cs
clc
jg
jo
xchg
test
push
sbb
mov
add
cmp
rolb
out
out
sub
les
in
inc
jne
mov
xchg
pop
mov
add
mov
test
sti
fidivrl
sbb
imul
test
mov
pop
scas
fildl
push
es
and
inc
push
movsl
imul
outsb
aad
dec
mov
mov
or
out
lcall
sub
pop
jns
jo
and
dec
stos
dec
test
stos
xchg
lods
xchg
mov
sar
pop
imul
and
andb
pop
xor
mov
add
mov
in
inc
mov
scas
pop
adc
xchg
movsb
mov
in
and
ficomps
lods
xor
repz
jecxz,pt
mov
lcall
add
cmpsb
mov
mov
push
es
mov
sub
jae
divb
dec
out
xchg
inc
loop
sahf
insb
add
pusha
mov
jp
out
sbb
xor
clc
aaa
aam
outsb
je
rcrb
jb
cmp
subb
ss
xchg
mov
sbb
stos
push
adc
sti
jmp
add
mov
xchg
xchg
je
cmpsl
leave
inc
sub
bound
insl
testb
mov
jne
cmpsl
mov
test
dec
hlt
xchg
divl
ficoml
cmc
cld
mov
mov
pop
pushw
mov
mov
add
cmc
inc
xchg
in
pop
pop
orl
or
push
inc
cmp
mov
jmp
hlt
aas
mov
loope
std
into
mov
mov
movsb
ljmpw
xchg
adc
fs
repz
iret
cmpb
xchg
xor
xor
loop
inc
jp
iret
daa
adc
out
cmp
add
mov
sbb
push
xlat
cmc
jb
ret
in
cmp
and
loop
inc
push
or
int3
push
lods
xor
ss
jge
pop
push
in
movsl
jp
jne
mov
push
push
insl
clc
dec
lahf
jbe
xchg
cmp
nop
aas
xchg
mov
lods
lret
xchg
xchg
shrl
pushf
int
and
dec
pop
push
daa
xchg
pop
mov
pop
ret
jmp
sub
push
jo
out
test
mov
dec
gs
js
dec
dec
out
xor
mov
or
mov
adc
inc
in
arpl
loopne
inc
sbb
movsl
cld
add
dec
fsubrs
cwtl
mov
addr16
inc
fwait
xlat
fucomip
mov
into
mov
scas
mov
pop
insb
sub
push
lock
push
in
xor
leave
fs
sti
and
mov
cmp
dec
jne
inc
repz
dec
mov
sbb
jae
xor
mov
pop
sarl
loop
mov
popf
in
movsb
xlat
loopne
pop
inc
push
sahf
out
mov
xor
sbb
inc
repnz
inc
mov
jecxz
mov
xchg
rcr
iret
jae
shrb
pop
into
dec
cmp
mov
mov
iret
and
dec
lcall
js
jmp
cs
dec
push
or
adc
sbb
fidivrs
cmpl
inc
je
add
addb
dec
ret
ret
inc
or
andl
add
cld
cld
push
sbb
iret
test
test
aad
cld
call
jo
mov
adc
push
push
or
push
stc
aas
push
inc
jns
cmp
or
xchg
cmpsb
sbb
sarl
sub
cmp
add
push
dec
inc
sub
test
ds
leave
jbe
sbb
xchg
sahf
pop
jmp
adc
push
imul
sti
sbb
push
xlat
pop
cmp
sbb
xchg
test
inc
adc
dec
es
lret
movsl
stos
pop
sub
xor
cmp
cmpsl
mov
ja
xchg
repz
fisubl
sub
inc
adc
xor
clc
aas
jnp
pop
fwait
inc
inc
lret
inc
nop
js
iret
adc
cmp
testb
lock
lret
mov
sub
ret
orb
enter
cmp
loope
pop
pushf
in
imull
icebp
jmp
adc
test
push
mov
mov
test
cmp
xchg
dec
je
imul
fs
mov
jns
in
xchg
cwtl
out
inc
xchg
jg
jecxz
popa
push
clc
jae
pushf
add
in
cmp
dec
loope
sub
je
cmp
pop
mov
mov
pop
dec
push
sub
add
out
stos
xchg
xchg
aas
mov
inc
popa
insb
ja
and
adcl
xor
fstpt
push
cmpsb
mov
and
mov
js
pop
jmp
das
push
das
mov
xor
mov
sub
fs
jae
dec
popf
call
imul
push
xchg
mov
inc
data16
lahf
movsb
push
pop
mov
rolb
and
xlat
sbbl
sbb
push
push
shrl
lahf
lahf
mov
lock
dec
and
sub
mov
js
or
fs
xchg
ja
test
pop
xor
cld
stos
andl
notb
inc
mov
fs
stos
das
cmp
pop
inc
daa
fcoms
push
xchg
xchg
negb
lods
or
lods
cmc
fs
fs
das
sub
pop
push
push
ds
dec
mov
ret
arpl
push
jle
or
popa
fadds
rorb
xor
mov
ss
inc
daa
dec
ror
mov
adc
repnz
fnstcw
ffreep
addb
mov
lcall
push
mov
dec
loope
mov
cmpsl
repnz
ss
sbb
sbb
jns
sbb
loope
lcall
dec
addb
cmp
test
in
pop
push
adc
xlat
hlt
std
jge
ds
xorl
leave
sbb
jg
popa
aas
jge
jbe
add
lock
nop
pop
stc
bound
lods
inc
and
push
hlt
adc
add
enter
shll
push
popf
push
mov
mov
ss
popa
push
aam
loop
cmp
popa
adc
xor
les
dec
sub
xchg
fdivrp
imulb
push
icebp
dec
das
push
pop
adc
or
shrb
mov
and
jge
cmc
inc
and
pop
mov
data16
rorb
push
nop
mov
call
je
scas
xor
xlat
jg
push
out
loopne
xor
mov
fisubrs
lahf
lock
mov
xor
push
mov
repz
fscale
int
jmp
add
push
add
mov
dec
lahf
aam
int3
cwtl
lds
aad
fbld
dec
xor
in
rorb
pop
dec
repz
rcrb
cmpsl
sub
sub
jl
push
pop
mov
stos
jno
dec
inc
inc
loop
jo
sbb
sahf
sbb
xchg
xlat
imul
cli
std
gs
call
lea
xor
test
xor
int3
out
or
pop
mov
mov
in
cmp
fs
call
gs
xor
cli
or
or
imul
jp
jnp
ljmp
sbb
in
leave
adc
jmp
jecxz
in
sbbl
in
es
les
xchg
or
xchg
aaa
fcomip
leave
xchg
pop
jmp
sub
lds
add
jo
test
sub
mov
arpl
stos
xchg
jge
imul
test
xorb
or
dec
jbe
das
mov
insb
mov
dec
nop
movsb
vmwrite
mov
xor
pop
sahf
or
movl
and
pop
mov
mov
out
mov
inc
repz
out
sti
cwtl
fsubs
xlat
mov
mov
sub
outsb
sub
push
or
mov
rcr
aam
fxch
daa
cmp
in
and
loop
test
inc
addr16
sub
scas
and
stos
cmp
fldenv
loope
and
adc
int
mov
ret
enter
in
incl
cmp
aas
js
mov
mov
push
jbe
adc
sub
jo
cmp
mov
push
push
ja
dec
jl
push
iret
or
mov
ds
pop
push
je
xchg
sub
imul
sub
mov
inc
repnz
aas
xchg
push
adc
loope
cltd
mov
mov
sbb
ds
pop
xchg
test
cmp
ficompl
mov
sub
jg
loopne
add
fwait
int3
fistpl
or
add
cmc
pushf
inc
and
insl
mov
int
bswap
pop
add
push
orb
clc
push
push
sbb
cmpb
ds
and
jnp
popa
movd
icebp
or
sbb
fs
mov
cmpsl
xchg
ljmp
adc
mov
scas
test
jmp
hlt
fst
int
movsl
inc
add
filds
es
mov
rol
iret
jb
xorl
cmp
sbb
shrb
inc
xchg
cltd
dec
pop
adc
out
loopne
shll
xchg
addr16
lcall
mov
imul
cmpsb
push
push
jg
and
sti
es
adc
outsb
loop
push
fwait
pop
lock
lea
aaa
inc
cmp
insl
cmc
aad
cmp
test
jmp
and
xchg
das
push
stos
loope
hlt
ret
std
leave
jne
cmc
adc
in
out
mov
mov
xchg
mov
flds
sahf
loope
xchg
jo
int3
lret
ja
mov
cmp
js
nop
and
dec
jmp
or
jl
movl
arpl
jg
dec
add
xor
mov
jae
repz
movsb
fnstsw
fs
std
dec
push
aam
aad
in
adc
int
shll
std
pop
fnstsw
and
mov
mov
sarb
add
bound
sbb
inc
and
les
jmp
mov
xor
js
ja
ljmp
out
lahf
insl
gs
sbb
cmp
jnp
addr16
sub
iret
mov
sbb
dec
mov
fcompl
cmp
lea
pop
inc
in
mov
out
dec
add
lcall
es
pop
adc
test
push
bndldx
mov
shr
pop
pushf
push
out
mov
sub
call
pop
bound
xchg
jle
in
in
dec
stos
aaa
jge
xchg
cmp
cmpsl
aam
xor
mov
ja
call
mov
jge
xlat
xor
jb
in
jl
and
sbb
aas
into
scas
or
outsb
mov
push
mov
push
dec
je
jbe
les
inc
addr16
add
sbb
or
outsl
call
out
dec
mov
sub
xchg
jbe
mov
xlat
sub
add
or
and
or
jne
xor
repz
bound
out
push
cmc
xchg
ret
sbb
mov
nop
and
cmp
pop
or
sub
mov
lods
ret
xor
pop
shll
int
jge
xchg
iret
mov
fstps
push
js
ret
sub
fistps
mov
adc
inc
je
loopne
sub
or
test
lahf
sub
adcb
add
outsl
inc
jno
dec
or
jp
mov
orb
xchg
out
xor
xchg
pop
pop
les
fsts
cmp
push
mov
in
xchg
adc
pop
aas
pop
push
jbe
mov
hlt
daa
xchg
mov
adc
in
add
mov
cltd
sbb
addl
lods
ficoms
int3
cs
xchg
leave
jb
xchg
daa
mov
or
das
test
sub
daa
or
inc
jge
jmp
test
push
mov
xor
and
fimull
push
fmul
inc
mov
xlat
mov
fisubs
mov
arpl
adc
adcl
test
push
add
mov
roll
mov
mov
xchg
mov
scas
outsl
sub
pop
sub
push
sub
jae
pop
sti
and
mov
add
add
icebp
and
xor
and
mov
call
jae
mov
cmpsb
inc
cltd
lods
or
mov
insb
mov
stos
dec
cmpsb
inc
sub
cli
out
in
stc
out
add
es
xor
pop
push
rorb
push
pop
jnp
loop
push
xchg
adc
ret
sbb
gs
rolb
orb
outsb
sti
cmp
movsl
xchg
adc
lea
shlb
fiadds
roll
push
inc
int
scas
xchg
aaa
or
pop
sbb
mov
cwtl
mov
push
scas
lret
cmp
popf
insb
scas
das
repnz
and
inc
pop
or
adc
jmp
insl
sahf
lods
or
mov
push
inc
insl
mov
inc
xlat
dec
popf
inc
jle
pop
inc
rcrb
nop
cmp
mov
mov
and
mov
inc
sbb
rep
sub
adc
add
jb
jmp
andb
inc
gs
jnp
xchg
ret
stos
jecxz
mov
sub
push
pusha
mov
adc
roll
into
push
cld
insl
imul
jo
mov
test
adc
mov
xor
add
xor
paddusb
or
in
xchg
inc
and
add
mov
fcomps
add
and
mov
push
outsl
push
sti
xchg
cmp
add
shlb
xchg
cmp
sahf
loop
add
leave
push
lret
mov
cltd
add
mov
insb
iret
repz
lret
push
outsl
dec
roll
cmp
ljmp
push
ret
add
mov
pop
and
mov
call
filds
shlb
lds
test
add
pop
popf
sbb
int3
xor
cmp
adc
push
out
mov
pop
mov
push
mov
mov
push
add
and
inc
mov
xor
fcmove
jae
out
popa
dec
mov
les
cltd
xor
lods
je
lods
push
adc
and
imul
test
push
sbb
fsubl
addr16
std
addb
pop
int
inc
push
cmp
push
lds
mov
mov
cs
inc
dec
jne
jbe
sub
xchg
cmp
insl
or
scas
push
cs
mov
lcall
outsl
jbe
movzbl
andb
out
xchg
pop
popa
mov
in
test
lods
add
movsl
dec
mov
fnstenv
and
mov
pushf
mov
sbb
insb
adc
fldt
cmc
sbb
adc
mov
in
sbb
outsb
icebp
ficoml
fwait
cld
stos
mov
ret
jle
loope
popf
push
mov
icebp
jb
mov
adc
sub
lahf
out
data16
inc
jbe
or
in
dec
jmp
shlb
ret
jno
rolb
pop
fidivs
or
push
repz
sbbb
stc
adc
mov
imul
mov
mov
jl
divb
or
test
mov
repz
test
or
inc
cmp
inc
aaa
jo
cmp
std
aad
fucom
dec
jnp
xchg
ss
adc
dec
inc
dec
popf
out
cltd
inc
movsb
push
fcmovu
je
mov
mov
cwtl
imul
inc
mov
and
mov
fidivrs
es
flds
inc
pop
mov
cmpsb
cmpsb
fs
notl
mov
mov
ret
jp
inc
lret
in
cmp
or
jo
push
jno
and
sahf
cmp
out
sub
mov
in
sbb
pop
rcr
mov
outsb
ficoms
stos
xorb
jno
addr16
aam
or
cmpsl
stos
jnp
fldt
or
mov
subl
inc
sbb
hlt
shlb
in
add
xchg
pop
and
jp
mov
xchg
xlat
add
popf
jmp
mov
jnp
inc
testb
repnz
scas
std
cmp
push
cmpsb
aaa
in
sub
add
mov
xor
aas
aaa
jbe
push
mov
stc
and
sahf
stc
dec
lret
dec
sub
popf
lahf
iret
insb
pushf
mov
test
xchg
in
addr16
jb
sbbl
pop
pop
cld
daa
leave
addr16
inc
repz
mov
xor
ror
fldt
test
std
sub
dec
movsl
les
add
sub
push
insl
cmpsl
mov
into
js
xor
in
loopne
int3
or
jmp
mov
mov
pop
jge
mov
jg
nop
mov
dec
fscale
xchg
cli
repnz
out
repnz
sbb
sti
jo
or
aaa
or
cmp
adc
push
fwait
loopne
popf
les
imul
jmp
add
stos
test
xor
or
xor
inc
sbb
insb
pop
xor
add
nop
pop
or
dec
xchg
popa
shl
lock
cs
push
fscale
lock
mov
out
fimull
mulb
insb
or
outsb
arpl
roll
pop
test
int
mov
cmpsl
aaa
mov
pop
sbb
aaa
shlb
adc
xorl
cmpb
xchg
jl
stos
mov
mov
lods
outsb
cmp
iret
popf
dec
sub
stos
ret
lods
mov
cmp
add
or
fmulp
or
mov
ret
js
sbb
push
inc
test
adc
adc
pop
mov
ret
jecxz
mov
xorl
adc
sbb
xor
std
mov
into
add
mov
insb
outsl
inc
movsl
ret
lcall
add
jmp
out
adc
jmp
sti
dec
rol
aad
repz
std
ret
out
adc
push
mov
jmp
cmp
jno
jp
fdivrs
jle
push
inc
pop
in
ds
sub
dec
xchg
loopne
pop
sub
inc
adc
jge
xchg
sub
ret
js
out
daa
pop
xor
out
cmpsb
mov
imul
imul
out
add
inc
in
add
xchg
ret
mov
cld
jl
xchg
inc
dec
cmpsb
arpl
sub
imul
pop
nop
and
das
sub
jnp
inc
pop
mov
pop
sbb
fldl
fdivrl
dec
and
out
cli
ja
and
out
rcrb
clc
xlat
clc
popf
push
sahf
xor
xor
dec
filds
int3
lods
shll
sub
test
and
addr16
andb
setp
cmp
sbb
xchg
pop
mov
dec
inc
inc
inc
ret
dec
das
sbb
add
xor
xor
testb
shrb
in
test
adc
add
adc
dec
loopne
jo
dec
ljmp
into
aas
jae
mov
cwtl
das
cwtl
daa
mov
sub
mov
inc
sub
outsl
jns
sbb
jo
pop
dec
dec
data16
jle
std
into
mov
sti
mov
xchg
jmp
orl
les
daa
mov
push
push
xchg
das
aam
ss
inc
push
dec
and
fidivs
dec
stos
repz
add
and
and
mov
lcall
dec
adc
pop
jg
nop
dec
popa
stc
and
inc
add
adc
inc
stc
mov
les
out
jg
mov
test
int
cli
mov
pop
loop
cmp
jecxz
jecxz
rorb
popa
shrb
mov
push
adc
jnp
mov
out
cmp
aad
inc
scas
sub
adc
out
cmc
xor
dec
subb
mov
cmp
inc
out
imul
cmpsb
enter
sub
mov
test
mov
mov
int
mov
loopne
push
into
push
daa
and
stos
rorb
loopne
movsb
xchg
push
ljmp
inc
je
popf
mov
jnp
popa
inc
add
inc
aad
loopne
mov
jmp
adc
in
aaa
sub
jl
sub
jmp
inc
fsubs
inc
popa
lods
adc
push
iret
es
insb
rep
xchg
in
aad
pop
lret
mov
sti
sbb
mov
cmc
xor
push
push
lahf
and
rorl
mov
push
sub
addr16
jno,pt
mov
std
cmpsl
pop
scas
xor
sub
mov
mov
sbb
lcall
cwtl
mov
sti
movsl
mov
push
fidivl
dec
xchg
and
das
xor
adc
push
popa
and
cmpsl
sarl
andl
inc
mov
fistl
sub
repz
mov
hlt
scas
jns
mov
or
stc
hlt
jno
push
push
xchg
lock
lods
mov
jmp
or
in
pop
aaa
cmpsl
push
push
push
dec
cvtps2pi
scas
cmp
std
adc
sub
push
jl
int3
filds
hlt
fsubp
fisttpl
add
sbb
mov
jno
loop
js
stos
das
cmpsb
mov
jecxz
pushf
ss
adc
lret
xlat
dec
hlt
sbb
fstps
insb
pop
add
imul
sbb
in
add
add
iret
test
pop
xchg
bound
pusha
pop
cmp
stos
movsl
xor
push
adc
js
je
push
pop
push
mov
pop
rep
cmp
and
adc
addb
jb
mov
dec
sarl
out
mov
jno
dec
mov
jl
adc
jno
andb
rcll
add
lods
jns
mov
xchg
jmp
pop
add
daa
jo
jb
shll
jp
jns
fistps
push
in
rorb
idivb
dec
imulb
mov
fld
inc
jae
cmpsl
mov
ret
test
push
stos
cmc
mov
nop
xchg
cmp
out
push
mov
bound
mov
xchg
lret
inc
iret
lret
or
iret
dec
sbb
addr16
faddl
push
xlat
xor
pop
cmp
aad
mov
ja
and
xchg
sub
sub
ja
xor
stc
hlt
loope
imul
stos
subl
daa
dec
add
sbb
jne
xchg
push
dec
lds
or
ret
jno
test
pusha
xchg
and
mov
sbb
cltd
mov
js
mov
jno
mov
lock
ret
aaa
adc
or
int
test
push
push
mov
inc
cmp
push
pop
ret
xor
adc
loope
push
aaa
addl
pop
movsl
add
outsl
das
mov
xchg
adc
xchg
adc
jg
jnp
es
xchg
mov
aaa
push
push
std
dec
rcl
pop
andl
mov
jae
mov
out
das
loope
movsl
test
adc
jmp
xor
add
imul
jne
test
ret
je
add
cli
ss
pusha
mov
in
mov
mov
dec
adc
or
sti
mov
dec
sbb
mov
call
sbb
rorb
movsl
dec
cmpsb
je
test
pop
enter
fidivl
test
mov
out
dec
xor
xor
cmp
scas
push
dec
mov
ja
in
jmp
loop
test
xchg
push
xchg
xor
xchg
cltd
pusha
call
mov
lcall
add
iret
dec
jns
sahf
sbb
dec
imul
jo
or
addb
inc
data16
sub
inc
hlt
xor
mov
push
nop
add
sbb
call
cld
dec
cmp
dec
shll
in
or
testl
iret
pushf
cmp
jo
adc
int
push
out
pop
sub
cmp
ficoml
push
leave
add
cmc
std
xor
mov
je
push
iret
and
push
andb
ja
stos
lea
mov
add
sbb
xchg
xchg
int3
addr16
shlb
fwait
js
pop
test
jecxz
ret
bound
adc
add
jecxz
int
rorl
inc
cmp
fs
mov
shr
addr16
cltd
rorb
mov
adc
adc
mov
xor
mov
mov
cmp
xor
xchg
or
jle
faddl
and
cmp
sub
stos
xchg
mov
push
imul
data16
dec
pusha
pop
jnp
mov
pop
out
pop
add
inc
cs
imul
std
add
mov
lea
sbb
lock
or
inc
xchg
inc
movsl
mov
mov
ficoms
scas
sbb
pop
test
lods
enter
sbb
fiadds
sbbl
jp
mov
daa
dec
mov
movsl
push
adc
movsb
xchg
xchg
mov
push
aad
pop
stos
jb
inc
or
xchg
push
add
inc
add
sbb
les
pushf
dec
add
in
push
dec
fildll
push
push
out
fsubr
inc
push
stos
sub
xlat
sub
mov
outsl
sub
cmc
cmpsl
fdivrs
push
pop
mov
mov
or
cmp
mov
sbb
ret
inc
es
xchg
cltd
repz
subb
into
xor
sbb
xchg
or
pusha
mov
loopne
dec
mov
sbb
ficoms
xchg
stos
push
fdivrl
out
lock
push
inc
mov
ja
fwait
mov
mov
cwtl
stc
cmp
push
popa
sbb
clc
mov
or
pushf
mov
icebp
or
xchg
jle
jp
adc
xor
addb
sti
dec
jns
jne
imul
lods
jbe
inc
arpl
or
addb
fiaddl
pop
out
or
and
jg
aas
out
adc
cs
mov
and
add
jae
sahf
push
gs
mov
mov
cmc
add
sbb
cmpl
pop
in
ds
xchg
test
sahf
dec
adc
adc
inc
jo
xchg
rclb
adc
pop
fs
add
dec
mov
leave
movb
add
xorl
sub
mov
ficoml
shl
push
push
in
imul
sub
fidivrs
add
pusha
mov
imul
and
in
push
mov
mov
xlat
fxch
inc
jmp
rcrl
shrb
xorl
dec
mov
dec
test
xchg
xchg
cmc
xlat
mov
into
xor
test
test
push
jge
aam
xlat
and
adc
in
mov
mov
test
loopne
lahf
adc
jne
je
mov
cld
cs
jae
stc
lea
cmp
cmp
push
lret
aas
mov
sbb
and
xor
lds
dec
xor
lds
rcrb
cmp
into
inc
pop
bnd
xor
sbb
movsb
adc
test
jae
xor
dec
inc
fwait
int3
jecxz
shlb
hlt
pop
pop
fisubrl
inc
lods
sti
nop
rol
loopne
nop
inc
mov
cmp
mov
popf
das
test
jle
cld
mov
dec
jbe
sbb
sub
aam
mov
pusha
jbe
mov
les
pop
pcmpeqd
mov
and
mov
xchg
push
loopne
dec
mov
insb
fcmovbe
ss
aaa
add
inc
lods
nop
dec
in
fiadds
cmp
push
xchg
data16
sbb
jl
and
gs
sarl
ret
add
and
sbb
cmpsb
or
xor
stos
sub
loopne
pushf
jge
fsubrp
jl
lods
loop
inc
xor
mov
sahf
cmpsl
out
dec
and
divps
addr16
pushf
sti
add
aas
repz
popf
mov
loope
ss
and
mov
push
pop
out
push
or
jecxz
adc
fiaddl
mov
sbb
dec
loope
arpl
aas
jecxz
sub
sbbb
add
jecxz
nop
das
mov
cmp
stos
inc
mov
mov
lods
in
popf
or
mov
data16
dec
enter
pop
pop
enter
mov
inc
rcrl
loopne
cli
ficoms
add
push
xchg
push
push
mov
jo
inc
mov
in
insl
jecxz
push
sbb
int3
sbb
roll
push
mov
je
ljmp
adc
inc
cmp
push
pusha
xor
mov
mov
in
mov
and
mov
push
fidivrl
not
dec
in
add
push
imul
test
jge
ret
js
ret
fistpl
pushf
push
jbe
fs
xor
mov
xlat
ficompl
xchg
mov
cltd
jb
adc
repz
push
aad
pushf
xchg
inc
cltd
fists
cld
cli
je
or
jle
pop
add
dec
xor
lret
lea
fnsave
jnp
sbb
or
popa
scas
mov
nop
sbb
leave
test
push
pop
mov
pusha
jp
xor
or
and
shlb
push
std
outsb
mov
sbb
cs
loop
imul
jb
dec
sbb
fstl
sub
dec
push
xor
add
out
cmpsb
push
fdivrs
lcall
add
and
jge
pop
dec
mov
clc
pop
and
cmp
cmp
outsl
imul
jge
add
in
push
jno
aad
xchg
inc
leave
leave
jbe
push
cltd
sub
pop
iret
test
js
xchg
dec
mov
xchg
dec
xor
xchg
mov
cmp
inc
mov
xchg
fsubs
inc
call
inc
addr16
xlat
clc
aaa
push
inc
sbb
sahf
pop
dec
xchg
and
xchg
ds
push
add
test
into
xchg
mov
adc
mov
dec
in
mov
adc
cmp
arpl
mov
cmp
mov
xor
dec
sbb
jl
push
lock
jle
fsubrl
icebp
sub
je
jbe
mov
lods
ffree
mov
jmp
mov
lock
out
push
fiadds
cmp
adc
jno
jmp
js
jnp
add
cmp
push
adc
sbb
mov
fldenv
cmp
xchg
adc
daa
sub
mov
mov
and
mov
pop
js
mov
pop
mov
dec
scas
jns
cmp
repz
bt
clc
aas
stos
ret
cli
push
gs
sahf
xor
adc
into
push
aaa
psllq
pushf
fisttpl
pop
push
sub
and
jb
adc
xchg
repz
out
into
push
add
sahf
sbb
pop
jp
fs
dec
lds
jmp
pop
in
js
lret
iret
push
outsb
mov
cld
dec
jae
sub
add
fiaddl
mov
or
jne
xlat
cmp
cli
cmp
iret
jo
push
dec
ja
out
adc
fwait
cmp
pop
cmp
cmp
jae
outsl
ficomps
mov
outsl
addr16
add
pop
pop
test
stc
ficoms
jo
movsb
ljmp
fwait
jecxz
loopne
das
xor
fdivp
sub
cs
jmp
jns
mov
and
lods
fildll
lods
cli
shll
mov
ss
mov
sbb
movsl
mov
leave
popf
cmpsb
mov
push
xor
xchg
and
xchg
and
fistl
sbb
push
inc
divl
push
pop
adcl
jmp
push
mov
das
data16
popf
dec
sbb
dec
and
sbb
sub
jle
mov
push
push
push
fsubrs
test
xchg
adc
rclb
aam
xorl
or
into
jge
pushl
dec
imul
cmp
movsb
call
add
xchg
jno
decb
mov
cmpl
imul
mov
shrl
ja
cmp
sahf
and
ja
loope
jl
and
xor
xchg
xchg
inc
sbb
mov
lcall
aas
iret
add
shl
xchg
scas
jne
nop
into
lea
xor
mov
mov
cmp
mov
inc
lret
mov
mov
mull
pop
inc
fadds
je
icebp
nop
mov
lret
mov
pop
mov
insb
sub
push
add
mov
mov
mov
jnp
repz
mov
cltd
push
jl
test
mov
push
mov
imul
adc
shlb
test
idivl
lret
in
jecxz
dec
xor
ja
movsb
mov
xchg
fisubrl
pop
inc
pop
leave
ljmp
xchg
sarl
xchg
xor
test
ror
stos
adc
std
mov
imul
sub
pushf
jbe
xchg
lahf
push
cmp
adc
add
stos
jne
mov
cmpl
push
jmp
xor
mov
dec
xor
adc
and
les
cs
and
aam
push
data16
sbb
xchg
dec
out
lcall
sbb
jne
mov
push
out
jno
mov
idivb
arpl
mov
xchg
pop
rol
cmpsl
jmp
dec
call
iret
imul
adc
sub
cmc
cmp
int3
adc
stc
mov
xor
push
push
sbb
and
mov
or
iret
push
movsl
and
xchg
xchg
in
sbb
adc
andl
add
jnp
xlat
js
inc
mov
and
sahf
repnz
std
push
pop
sub
mov
out
addb
mov
sub
sbb
cld
mov
fwait
pop
sbb
xor
stos
stos
or
inc
outsb
jmp
xor
in
inc
fildll
int3
or
lahf
aad
xchg
test
shll
and
push
popa
xor
xchg
jp
lsl
cmp
imul
add
int
mov
hlt
xchg
stc
imul
clc
cmp
lds
pop
lods
shl
jle
adc
cwtl
iret
mov
ret
dec
pop
nop
je
xchg
cmpsl
adc
jl
lcall
dec
pop
add
jp
pop
mull
cltd
data16
cmpsl
mov
lea
xchg
xchg
test
jge
mov
sub
jo
xchg
inc
lahf
out
outsb
in
cli
fistl
stc
movsl
add
int3
sub
sbb
jno
mov
es
lods
std
mov
push
add
cli
call
pop
in
mov
lock
jmp
push
lods
cmc
or
into
cld
xchg
test
inc
lea
xor
jecxz
in
cld
mov
outsl
cmpsl
push
mov
ds
pop
pop
cmp
nop
cmpsb
xor
pop
cmp
jbe
shr
xchg
jo
mov
and
out
xorl
sub
iret
sub
mov
scas
mov
and
add
sbb
sub
scas
cmp
inc
daa
test
mov
push
xlat
inc
out
jmp
pop
lcall
cmpsb
out
push
or
or
sar
jge
fimuls
cmpsl
adc
pop
inc
flds
jecxz
jno
stc
data16
aaa
and
xchg
std
dec
xchg
mov
stc
dec
xor
push
adc
cli
pop
cltd
test
mov
ficompl
sbb
pop
push
and
jmp
mov
outsl
xlat
push
and
ja
cmp
fs
adc
imul
add
adc
xor
mov
push
arpl
notb
mov
nop
jge
xchg
ror
xor
jb
out
add
push
mov
out
sarl
xor
inc
adc
jno
imul
inc
xchg
mov
xor
movb
dec
cwtl
dec
rorb
scas
int3
jno,pt
daa
sub
jecxz
xchg
ds
test
test
or
icebp
and
sub
xchg
sbb
aaa
push
sarl
mov
xchg
add
and
sbb
filds
xchg
dec
das
cltd
mov
cmp
fwait
mov
mov
cmp
popf
out
lock
mov
sti
mov
mov
xchg
dec
popa
push
insl
jmp
cld
push
add
xor
xor
push
dec
mov
fdivrp
imul
xchg
lcall
in
orb
imul
inc
cli
je
dec
xchg
pop
insl
mov
mov
adc
insb
cmp
call
dec
notl
mov
aad
cs
arpl
add
mov
mov
xchg
mov
fisubl
fcoml
sbb
negb
inc
movzwl
xor
test
mov
pop
lds
and
mov
clc
push
xchg
int3
adcb
pop
addr16
inc
adc
pop
jl
movsl
bound
test
and
inc
or
lods
sub
popf
pop
icebp
inc
ja
xchg
leave
movl
lcall
imulb
insb
leave
mov
and
jae
ss
xchg
nop
std
or
push
sbb
bnd
mov
mov
shll
cmc
sbb
lret
je
push
cltd
or
repnz
repz
mov
lds
scas
jl
sub
mov
mov
jne
fadd
call
xlat
sbb
add
aas
fwait
push
mov
sahf
xor
xor
pushl
gs
push
sub
sbb
dec
mov
push
sub
adc
cmp
sub
push
scas
cmp
lahf
adc
cmp
xchg
sbb
std
push
and
mov
arpl
outsb
imul
pop
lods
lds
mov
cltd
and
nop
jg
jne
lea
jmp
scas
cmp
push
loopne
imul
sbb
sub
lods
ljmp
dec
sbbl
push
cltd
cli
jb
add
push
inc
add
xlat
add
out
cwtl
dec
inc
fdivrl
fldenv
mov
ss
mov
xchg
xchg
jae
adc
fcomip
or
xor
sbb
jecxz
dec
dec
or
dec
nop
mov
sub
inc
jmp
dec
pop
movsl
cmp
fimull
sbb
lcall
xor
xchg
pandn
dec
icebp
mov
add
lds
mov
std
aaa
in
gs
stos
mov
rcr
imul
mov
pop
aam
xor
mov
icebp
lahf
clc
daa
xor
mov
out
jp
jae
lea
mov
pop
mov
push
std
pop
or
xchg
in
cmp
add
sub
aad
sahf
xor
jns
stos
fimuls
mov
and
shrb
js
arpl
sub
push
sub
jle
das
jno
pop
adc
adc
sub
in
popf
ds
flds
xchg
dec
je
mov
hlt
cmp
mov
xchg
mov
sub
push
or
dec
in
addb
lods
cmpsl
notl
in
shlb
and
fdiv
loopne
sarl
jae
jle
pop
pop
cmp
pop
add
or
or
jo
ja
xor
push
stos
ret
add
jo
int
lahf
pop
jo
or
ror
bound
mov
mov
cmpsl
leave
add
xor
mov
arpl
ret
cmp
mov
xchg
mov
stos
pop
je
jo
pop
into
inc
push
in
lahf
addr16
icebp
and
xchg
cmp
mov
jp
cmp
lock
aad
sbbb
xorb
xchg
xor
pop
fimuls
push
loop
cmp
sub
xchg
cld
rcl
inc
jecxz
sub
xchg
mov
push
cmp
dec
insb
mov
es
mov
sub
xor
movsb
dec
inc
sub
jp
test
test
imul
pop
cli
and
jno
jmp
insl
xchg
into
pop
mov
nop
and
ljmp
lret
jae
fwait
in
mov
aas
dec
and
cld
sbb
fwait
sub
mov
xor
sbbb
xchg
mov
out
call
xor
and
xchg
loopne
mov
jl
mov
imul
mov
cmpsl
scas
sbb
cmpsb
adc
pop
addr16
sbb
ds
jno
mov
imul
lock
add
xor
pop
mov
dec
aad
pop
movsl
in
mov
es
sti
outsb
lahf
lea
mov
lock
add
int3
shlb
cmp
testl
bound
aad
arpl
mov
cmpsb
cltd
dec
sbb
ss
das
nop
mov
repz
imul
ficoms
jge
in
inc
mov
repnz
sbb
push
lahf
popa
lods
and
and
lock
movsl
fnstenv
jne
jl
ficomps
scas
insl
adc
insl
cmc
xlat
push
inc
mov
mov
dec
mov
das
movsb
shl
repnz
jne
cmc
out
cmc
adc
fldenv
out
or
sub
sbb
imul
push
mov
movsl
call
stc
xchg
scas
sbb
dec
cwtl
dec
push
push
jnp
clc
ss
fwait
cmp
and
scas
iret
cltd
cmp
in
movsb
mov
pop
das
push
outsb
fcom
jne
and
pushf
xor
daa
stos
sbb
push
dec
dec
movsl
push
fs
cmp
adc
das
mov
call
and
push
dec
inc
fldl2e
sub
ja
pop
inc
das
das
in
dec
ds
sub
push
and
in
dec
inc
iret
push
pop
mov
out
jge
icebp
dec
push
lea
popf
mov
dec
xchg
jo
iret
pop
cmp
mov
and
repnz
fidivs
jns
in
daa
lods
shll
jle
jne
dec
sbb
adc
dec
or
sub
loope
ja
and
inc
xor
mov
jge
mov
iret
and
add
jle
lret
pusha
pusha
insb
sti
popf
or
movsl
dec
inc
std
fstps
dec
mov
gs
aas
push
lcall
inc
jo
je
movsl
lret
dec
sbb
fsts
cmp
xorb
je
sbb
xchg
shlb
pop
xor
cs
fnstcw
fnstsw
and
jmp
aad
loope
push
cmp
ljmp
push
icebp
cmp
mov
and
xlat
xlat
push
sbb
incl
enter
adc
clc
jg
mov
int3
rol
mov
xchg
pop
add
cwtl
xchg
lods
in
rorl
inc
test
aad
adcl
and
popa
mov
push
push
int3
scas
sbb
cwtl
lret
mov
cmp
dec
jbe
pop
pop
sbb
movsl
fsubl
cs
subl
sub
cltd
adc
mov
lds
fdivr
aam
jle
xchg
es
push
aaa
sub
push
cmp
pop
aad
xchg
inc
adc
lcall
movsl
push
test
mov
cmp
sbb
adc
sbb
mov
movsl
or
test
xchg
and
and
and
xor
in
call
lahf
push
pop
fcompl
mov
mov
adc
pop
mov
cmpsl
sub
and
mov
xchg
adc
fnstsw
add
sub
xchg
mov
pop
jns
testb
jno
jae
pop
mov
xchg
xor
mov
push
shrl
mov
mov
mov
push
xchg
dec
setne
sarl
popf
sbb
push
test
shl
mov
cmpsl
fst
jns
fsts
jns
add
jmp
push
rcll
mov
testl
lahf
mov
lcall
push
sub
mov
push
or
js
xchg
push
and
and
or
out
ret
inc
xchg
adc
adc
mov
shll
fldenv
loope
popf
cmpsl
mov
outsb
push
ljmp
loope
adc
sbb
fnsave
sbbl
mov
sub
mov
popa
sahf
lods
fstl
or
inc
mov
sub
aam
aaa
out
mov
repnz
xlat
xor
add
pop
cmpsl
cs
mov
cmp
or
xor
ja
push
push
lock
lcall
int3
stos
mov
adc
pop
xor
data16
xchg
into
mov
or
add
adc
xchg
gs
sub
dec
mov
cld
mov
or
xor
loope
cli
xlat
or
cli
sbb
xchg
inc
mov
movsb
ret
mov
cmp
adc
mov
dec
movsb
cli
or
xlat
pop
repz
int3
out
lret
jo
inc
xchg
jecxz
inc
jmp
lds
push
daa
lods
icebp
dec
xchg
popf
es
sbb
rclb
das
mov
push
or
lods
je
push
and
add
pop
inc
cs
push
lods
mov
jnp
shlb
jg
or
sub
lret
out
mov
xorb
cmp
fistpl
inc
jg
ja
gs
or
sub
push
loope
ljmp
out
cmc
cmp
pop
jb
sub
adc
leave
push
mov
mov
test
movsb
push
and
sbb
xor
push
mov
stos
jnp
ja
ja
cwtl
add
pop
shll
loop
and
mov
sarl
mov
pushf
and
mov
cmpsb
sbbl
les
rclb
xchg
rcll
cmpsb
rcrl
mov
pop
repz
mov
inc
fbstp
in
aam
dec
call
add
add
push
ret
fwait
sub
inc
or
pop
push
dec
or
arpl
inc
pop
mov
mov
leave
push
dec
lds
aas
int
sub
mov
adc
loop
scas
sub
pop
xlat
je
jmp
fldt
jmp
scas
adc
out
out
xchg
out
clc
repnz
or
addr16
or
jnp
add
pop
and
insl
out
inc
cmp
mov
inc
push
mov
or
mov
out
pusha
sbb
cld
mov
jle
insl
xorl
lods
pop
test
inc
fdiv
jmp
test
push
add
and
push
add
sbb
dec
pop
jmp
add
jle
pop
push
sbb
cmc
rolb
sub
loopnew
pusha
les
daa
xchg
dec
fcmovnb
nop
mov
xchg
cmp
or
xlat
fcoml
xor
ds
push
xor
flds
mov
xchg
outsb
mov
mov
out
cmpl
ljmp
data16
cmpl
jmp
pop
push
push
mov
add
dec
mov
push
out
sahf
pop
cmp
add
sbb
pop
cs
js
push
call
add
dec
sbb
loope
and
es
mov
mov
stc
leave
aaa
popf
out
or
pop
and
mov
xor
mov
dec
xchg
xor
loope
dec
test
insl
sarl
bound
dec
cmp
pop
lret
call
out
xor
repz
in
cmc
test
sbb
cwtl
adc
xchg
inc
neg
and
xchg
int
out
popa
or
mov
push
fbld
mov
xchg
inc
subb
mov
lret
sub
cmp
push
out
xchg
orl
inc
es
pop
loopne
scas
pop
arpl
xor
add
inc
mov
mov
cmp
add
dec
nop
sarl
test
cmc
mov
mov
nop
mov
into
dec
or
test
xor
in
mov
push
mov
iret
sahf
jl
or
jnp
repz
nop
adc
stc
add
push
sbb
mov
shl
and
cld
add
lds
mov
adc
movsl
pop
sbb
out
mov
lret
inc
orl
push
lar
and
push
push
pop
sub
imul
das
lods
lds
mov
sub
mov
xor
mov
loopne
xchg
cli
mov
mov
push
push
aad
mov
jns
sbb
imul
sbb
sti
inc
scas
push
aam
pop
bound
sub
mov
imul
dec
or
rcll
xor
fsubrl
test
push
mov
cmp
out
cltd
lahf
in
push
sbb
data16
add
pop
div
ret
dec
lret
pop
pop
pop
mov
pop
xchg
mov
dec
mov
inc
xchg
inc
jecxz
pop
leave
lds
or
push
push
xchg
sub
cmp
push
out
pop
fidivs
push
test
push
jnp
mov
sub
scas
xchg
insl
inc
inc
data16
pop
mov
fimull
jp
dec
cmp
cmp
xor
imull
sub
insl
fs
test
sbbl
mov
clc
pop
mov
leave
xchg
xor
in
lea
xchg
pusha
mov
stc
add
rol
lods
ret
xchg
mull
fcompp
hlt
fwait
popf
and
shrl
cmc
je
aaa
jbe,pt
dec
pop
imul
out
mov
mov
repz
mov
push
and
daa
push
inc
dec
aad
je
push
js
in
jns
loope
insl
mov
fimuls
pop
adc
mov
sbb
jnp
test
pop
pop
pop
push
sarl
jecxz
imul
xor
cmp
push
and
sbb
pushf
lds
dec
pop
xchg
cmp
adcb
call
lods
xchg
or
sub
jo
dec
std
dec
mov
dec
jle
rorl
add
mov
lods
mov
cmp
or
jmp
insl
mov
and
xor
mov
loop
add
jmp
pop
jmp
mov
xchg
mov
jmp
les
xor
xor
repnz
out
lods
je
xchg
mov
cwtl
inc
fsubrl
jecxz
inc
orl
mov
jnp
mov
decl
cmc
ja
scas
adc
or
mov
cltd
shlb
dec
loope
ficomps
lret
aaa
jnp
ret
sub
mov
xchg
sub
sbb
cs
jae
scas
sub
mov
push
jp
stos
push
cmpsb
hlt
cmpsl
ds
xchg
outsb
adc
in
js
adc
test
adc
insb
dec
dec
cmp
lock
out
sbb
push
gs
repz
test
rcll
in
aas
cmp
std
jae
shl
xor
ret
bound
scas
push
adc
inc
scas
jp
add
and
fdivs
jge
lsl
mov
adc
mov
cmp
jl
sub
fdivl
add
ret
mov
mov
jmp
lock
cwtl
sub
fnstenv
in
xor
sar
and
adc
push
fistl
adc
jae
xor
lods
pop
into
lods
loopne
push
in
fsub
mov
xchg
xchg
push
js
inc
push
dec
js
stc
inc
xor
mov
ss
adc
pop
push
lahf
lods
inc
xacquire
stos
out
pop
lahf
insl
fcompl
jmp
push
mov
out
mov
jno
jecxz
dec
push
inc
xor
repz
mov
push
int
adc
fildll
jo
pushf
loop
sbb
ds
and
inc
dec
je
mov
add
mov
add
shl
repnz
ret
cmp
pop
mov
enter
cli
inc
lods
push
stos
sub
out
jnp
rolb
xchg
xchg
and
mov
mov
iret
popa
sbb
cltd
mov
lret
and
icebp
pop
pop
push
adc
jmp
xchg
lcall
movsb
decl
cmc
enter
adc
and
xchg
movsl
popa
push
aaa
stos
test
test
xchg
ret
mov
popf
stos
inc
jne
jae
cwtl
lret
mov
or
xor
dec
sub
sub
mov
xlat
cmp
cwtl
scas
mov
pop
sbb
stos
or
cmpsb
out
repz
push
pop
xlat
out
outsl
cli
inc
mov
xlat
adc
mov
pop
leave
xchg
fistpl
movsb
ficomps
cmc
addr16
xchg
xor
mov
jne
xor
mov
loop
push
or
xor
cmpsl
sti
dec
and
ja
cmp
sbb
call
xchg
pop
mov
mov
mov
scas
dec
mov
dec
jle
mov
dec
out
out
stc
ds
popa
and
sub
pop
xchg
inc
dec
lods
cmpb
cltd
int3
stos
mov
mov
fildll
push
imul
xor
xor
xabort
lret
ret
daa
mov
test
cmpb
ljmp
or
cli
adc
adc
shll
out
dec
and
mov
outsl
aaa
cmp
mov
daa
enter
adc
mov
repnz
jnp
mov
pop
or
dec
mov
fiadds
sbb
jle
pop
inc
sub
dec
mov
ljmp
les
adc
shl
pusha
jge
mov
ret
clc
mov
xchg
inc
sub
test
movsl
inc
xchg
pop
mov
mov
lock
add
shlb
pop
jnp
xchg
or
in
push
xchg
push
scas
xor
aas
xor
dec
xchg
cmp
jb
popf
stos
ret
push
jecxz
cmpb
jl
std
xchg
pop
fsubl
mov
daa
xor
fs
cld
loop
inc
adc
les
dec
add
push
xchg
jb
push
jg
xor
adcb
jp
dec
cli
inc
out
mov
mov
repz
int
pop
xchg
dec
pop
xchg
rcrb
cld
int3
fdivrl
cmp
inc
bound
imul
sbb
dec
sub
add
insl
std
jbe
or
pop
cmpb
cs
xchg
xor
jp
rcrl
fisubrs
jmp
popa
addb
fnsave
adcb
mov
aam
inc
cwtl
adc
movsb
xor
pop
in
sub
scas
inc
stos
in
mov
orl
ret
pop
lea
jle
sub
mov
dec
cmp
sub
dec
nop
xchg
ds
and
pop
dec
or
inc
jge
push
push
je
daa
nop
xchg
and
xchg
xorb
mov
hlt
ljmp
xchg
xchg
outsb
cwtl
mov
sbb
out
daa
jnp
jo
aas
cmc
mov
aam
iret
cmp
insb
xchg
adc
fildl
dec
pop
dec
or
jmp
and
leave
xor
iret
fdiv
cltd
sti
in
dec
pop
pushf
ror
ret
xchg
jnp
sub
sahf
adc
cmc
mov
sbb
pop
jecxz
imul
add
ret
pop
adc
add
mov
lret
je
arpl
into
notl
mov
and
add
sbb
subb
adc
inc
pop
and
lretw
add
je
mov
aas
lods
mov
sahf
aaa
pop
int
pop
in
jbe
outsb
int3
or
xchg
jge
das
cmpsb
mov
push
cli
mov
cmpsb
xchg
xchg
cmc
xchg
pop
nop
cmp
stos
sarb
addl
pop
mov
mov
add
cmp
addr16
inc
pusha
imul
pusha
jb
cmpsb
aas
xchg
rorb
rorl
adc
fisubs
outsl
stc
push
stos
push
cmp
orl
fisubrl
xchg
ja
pushf
ljmp
ret
cltd
inc
movsb
out
xchg
fsub
push
movsb
sub
sbb
loopne
lret
jne
in
jo
repnz
stos
lds
push
mov
or
mov
scas
call
xor
adc
pop
lret
push
imul
push
mov
and
add
ja
addl
std
test
xchg
push
inc
jmp
aas
pop
lock
and
sub
xlat
popf
push
adc
ljmp
push
icebp
arpl
mov
out
mov
xchg
insb
scas
mov
xor
lods
inc
leave
inc
or
cwtl
arpl
jmp
and
and
xor
pop
shr
int3
mov
sahf
add
mov
push
cmp
ljmp
gs
subl
aad
sub
xchg
imul
cltd
adc
inc
adc
pop
addr16
addl
xchg
icebp
xorl
jb
mov
mov
mov
adc
dec
js
loop
jno
inc
scas
pop
jecxz
dec
fists
mov
push
cmp
shll
ret
scas
mov
lods
in
xchg
dec
mov
fidivs
ret
xor
shrl
xor
mov
jbe
gs
lret
insb
mov
and
je
stos
fldt
js
jl
sub
cmp
pop
ficomps
mov
mov
inc
es
ja
pop
push
cmc
pop
je
lods
mov
pop
xlat
adc
cld
and
adc
dec
iret
test
enter
call
addr16
mov
dec
imul
inc
jae
jb
rorl
mov
insl
and
in
sti
jle
outsl
mov
mov
test
push
add
adc
lods
cwtl
pop
fwait
int3
pop
adc
sub
xchg
jge
mov
adcb
pop
vpsraw
fwait
ret
stc
shrl
les
cmp
sub
pop
cmpsb
sub
mov
pop
lret
addb
or
out
push
xor
sbb
loop
les
mov
lods
fwait
xor
jno
push
cmpsb
aad
pop
dec
lods
fmulp
into
cmp
daa
or
sbb
ret
bound
xlat
fdivl
add
cmc
lcall
int3
mov
cld
into
mov
ja
jb
popf
mov
arpl
int3
pusha
jmp
sub
popa
rol
cmp
jne
outsb
jns
test
sbb
and
push
and
mov
and
pop
xchg
sbb
adc
hlt
mov
ret
imul
jae
fcomps
jb
icebp
mov
jno
or
lea
sbb
push
dec
mov
inc
and
fistpll
rcl
pop
jno
adcb
in
adc
mov
xchg
sbb
inc
ret
sub
and
mov
jge
push
mov
cmp
jns
rcrl
mov
arpl
cmpsb
mov
gs
sbb
imul
fs
out
lds
addr16
stc
sub
jno
insb
cmp
repnz
mov
pop
insb
stos
in
fmul
insl
mov
arpl
outsl
dec
inc
mov
adc
sub
jnp
sbb
cmp
das
lret
inc
aad
icebp
out
sub
loopne
sbb
jmp
push
mov
sahf
clc
dec
call
push
jne
lret
sbb
sub
cmp
sahf
xlat
pop
imul
test
arpl
aad
cli
sub
clc
jp
shlb
leave
insb
repnz
mov
insb
into
arpl
rclb
sbb
adc
shl
int3
unpckhps
dec
push
nop
aad
inc
inc
aad
testl
imul
and
cmp
sub
das
dec
mov
adc
hlt
ss
das
mov
jne
mov
seto
jb
bound
je
push
jle
xor
jmp
scas
mov
push
pop
xchg
imul
sbb
pop
sbb
mov
push
pushf
dec
inc
sbb
xlat
outsb
dec
xchg
fisubs
mov
push
paddq
xchg
push
xchg
cwtl
lret
and
or
in
sub
cmp
xchg
sbb
outsl
and
scas
fs
mov
fldt
outsl
ljmp
xor
fstpt
aaa
mov
inc
sub
in
sub
scas
fstpt
mov
jmp
pop
rcr
mov
mov
insb
loopne
andl
push
dec
jp
mov
inc
xlat
pop
lret
es
or
or
clc
sahf
mov
cltd
sbb
dec
js
add
mov
push
call
mov
out
mov
mov
add
rcr
and
sbb
fldenv
and
sbb
cmp
and
dec
or
jae
inc
lret
push
jo
push
and
mov
push
in
dec
das
pop
mov
jle
sarb
mov
aam
jns
rolb
in
imul
pop
cs
loopne
jl
pop
negl
pop
es
ret
leave
mov
adc
or
ret
ljmp
mov
in
out
sti
cmpsl
pusha
lahf
mov
lret
inc
test
xchg
addb
mov
cli
in
jmp
divl
cmc
test
mov
pop
mov
pusha
dec
dec
outsl
jbe
add
mov
inc
pop
mov
sbb
adc
cmovb
add
in
sahf
std
out
inc
mov
mov
cli
ljmp
fwait
ja
pop
mov
insl
dec
xor
stos
imul
mov
rcr
test
popf
les
pop
shlb
lahf
mov
cmc
mov
adc
sbb
cmc
call
daa
mov
pushf
and
inc
pop
jnp
jo
adc
in
std
into
cwtl
push
in
mov
sub
stos
leave
and
test
divl
add
sbb
ja
mov
cmp
gs
sbb
pop
and
lea
nop
dec
push
and
mov
xchg
into
testl
sbb
cmpsl
mov
daa
xchg
jmp
mov
neg
cmp
repnz
call
adc
and
test
jl
pop
mov
cmp
mov
into
clc
movsl
jnp
nop
sbb
jno
sbb
iret
mov
xor
scas
lea
sub
sbb
test
movsb
sub
jecxz
sar
sub
out
jnp
fstp
push
scas
fidivl
add
xor
mov
and
mov
lods
add
xchg
lea
cmp
scas
push
pop
and
jbe
xchg
mov
pop
mov
in
ficoms
sub
mov
movsl
ljmp
sub
mov
xchg
jl
icebp
sbb
mov
cwtl
xchg
hlt
xchg
aas
iret
mov
add
scas
sbb
or
call
push
push
scas
push
stc
fnstenv
lret
add
add
cmp
test
cmp
ja
mov
mov
sbb
mov
push
int3
sahf
xchg
hlt
jge
lea
push
mov
insb
in
ja
add
mov
lret
push
ljmp
roll
jno
lock
adcl
mov
xor
jne
aad
adc
stos
push
push
fiadds
loopne
stos
xor
out
ret
repnz
jns
xor
int3
fsubrl
dec
and
jo
movsb
cmp
push
loopne,pn
and
jne
add
or
pop
mov
mov
and
and
dec
mov
add
dec
add
int
sub
dec
lcall
mov
pusha
adc
fisubs
imul
jg
jnp
push
inc
fs
repz
fildl
push
mov
xchg
jp
lea
mov
dec
addr16
les
xchg
mov
sub
dec
lock
stos
aam
pop
inc
out
pop
test
lcall
clc
mov
or
fucomp
cmp
and
test
jl
in
pop
sbb
cs
add
test
outsb
xchg
cmp
add
loopne
or
test
call
rol
adc
mov
inc
leave
mov
xlat
jae
rorb
daa
xchg
and
inc
cmc
mov
sbbb
sbb
shll
jno
push
rcr
lret
inc
das
mov
sbb
adc
pop
daa
xchg
daa
gs
push
mov
std
fstl
outsb
leave
incl
mov
pop
sbb
rol
shrb
mov
and
sbb
std
lock
sahf
xchg
push
cmpsl
push
and
push
pop
loop
aad
sub
cmpb
dec
shl
imul
stc
mov
sbb
in
arpl
loop
daa
push
inc
movsl
mov
scas
dec
lret
cmpl
divb
fsub
jmp
fstpl
jae
sbb
clc
decl
mov
mov
jns
nop
inc
mov
popa
add
ss
mov
and
in
mov
pop
add
outsl
jbe
add
dec
sub
pop
push
mov
mov
xor
sub
mov
inc
add
out
inc
notb
std
cwtl
fs
fidivrs
les
add
sub
push
mov
jae
xchg
push
xor
or
jmp
cld
pop
ds
jns
mov
arpl
std
inc
and
push
cmpsl
sbbl
cli
or
push
dec
push
dec
shr
adc
repz
sarl
inc
and
loop
add
inc
out
sub
jbe
add
pop
add
loopne
adc
cs
insl
idivb
xchg
ret
sub
pop
pop
aas
pop
cmp
mov
lcall
and
fwait
in
mov
jae
pop
sar
push
insb
mov
ficoml
ss
pop
inc
and
and
pop
andb
jle
cwtl
xor
mov
push
cmpsb
adc
push
mov
movsl
dec
mov
imull
add
add
ljmp
lret
jge
and
test
fildll
push
imul
push
imul
fldl
add
or
fisttps
stos
add
cmc
fdivrl
nop
or
cltd
dec
loop
inc
push
in
imul
sub
cmp
pop
add
fstl
stc
add
ja
pusha
or
dec
mov
lret
push
mov
pusha
sbb
inc
dec
mov
fwait
adc
push
cltd
test
scas
and
cmc
cmpsb
pushf
mov
jmp
testl
pop
fs
arpl
andl
jge
add
shl
mov
ja
cmp
mov
sbb
inc
cs
or
sbb
inc
enter
xchg
ss
inc
pop
movsb
in
aad
and
jne
add
outsb
and
lods
jl
mov
jmp
ficoml
adc
inc
fwait
lcall
ljmp
mov
pop
dec
sub
add
test
xchg
jmp
jns
lods
xor
ret
xor
add
mov
addr16
adc
lret
cmp
mov
xor
and
and
je
cmpsl
sbb
sti
xchg
pop
and
mov
mov
ret
mov
and
shl
test
jbe
sbb
pusha
mov
stos
sub
shl
testl
dec
or
jg
mov
pusha
sub
stos
movsl
ss
push
push
push
jne
mov
or
mov
jmp
adc
cmp
jmp
jne
das
addb
test
mov
mov
sbb
ret
mov
push
hlt
cmp
dec
sbb
test
cmp
push
int
and
push
movsl
inc
loopne
pop
mov
rcrb
or
jae
xor
daa
repnz
fucom
add
lock
lahf
and
loope
sub
into
outsl
test
sbb
inc
iret
mov
lea
outsb
mov
add
push
mov
f2xm1
out
dec
outsl
or
mov
clc
xchg
jecxz
movsl
xlat
push
test
xlat
jmp
fst
bound
nop
dec
pop
push
jno
sub
adc
jle
sub
into
and
inc
imul
jns
mov
xor
jecxz
cmp
ljmp
dec
jle
pop
jne
mov
sti
inc
mov
add
fisttpl
cli
sbb
cmp
jmp
out
cmp
sbb
or
mov
push
addb
ss
test
cmp
repz
jno
scas
shlb
cmc
js
dec
mov
xchg
jecxz
inc
test
cmp
sub
out
xchg
ret
dec
lcall
ss
mov
or
stos
cmpsl
xor
mov
mov
test
and
xchg
dec
stos
mov
aaa
or
add
imul
mov
insl
in
mov
push
bound
mov
jns
add
popa
and
and
jl
out
and
scas
dec
shr
add
rcrb
lods
lahf
mov
aad
push
add
cmp
cmc
jl
fwait
lahf
mov
adc
dec
mov
test
hlt
sub
pop
pop
loop
loope
pop
or
in
mov
mov
xor
inc
stos
push
lret
xor
repz
dec
mov
call
call
pop
shr
pop
out
test
push
pop
add
ror
roll
cwtl
imull
cmp
push
lds
jnp
jns
aam
sub
das
in
pop
xchg
or
aaa
shll
pop
in
clc
fwait
sbb
lret
repz
xor
xor
icebp
mov
stos
pop
arpl
jbe
push
dec
std
mov
cld
test
out
mov
and
push
add
or
shrl
neg
lcall
in
xchg
lds
pop
cmp
and
daa
pop
ljmp
mov
cmc
out
not
xchg
xchg
adc
fucomi
pop
jge
cmp
dec
jmp
mov
scas
push
xchg
push
loopne
popf
std
cwtl
fmuls
push
in
repnz
xchg
notb
ret
test
fstl
jae
fldt
mov
sub
inc
pusha
mov
mov
push
mov
ret
jl
mov
imul
cmpsl
rolb
pop
jp
sub
add
xchg
adc
out
mov
xor
inc
loopne
xchg
mov
inc
mov
pop
pusha
cmp
fs
and
ja
dec
push
sarb
dec
jle
cmp
stos
push
pushf
xor
lea
movsl
and
sbb
cmp
mov
jge
dec
or
jle
lds
mov
mov
push
pop
mov
dec
mov
cld
in
lock
push
xor
les
lcall
ficomps
jge
adc
xchg
mov
add
imul
mov
inc
or
xchg
and
insb
inc
mov
int
mov
test
insl
mov
movsb
mull
sub
aad
fs
add
pop
rorl
lock
ret
inc
out
cmp
je
lret
mov
adc
idiv
mov
add
add
pop
andl
or
or
pop
mov
push
push
and
jno
fs
or
mov
adc
jnp
jb
pop
push
test
mov
sahf
mov
jl
xor
int
mov
mov
mov
pushf
xchg
in
aas
ret
fdivrs
pop
call
hlt
xchg
dec
mov
scas
lea
adc
stc
xchg
sbb
jmp
push
cmp
cmp
mov
repnz
call
movsb
mov
stos
mov
shll
int
jns
out
push
mov
out
xchg
out
mov
fs
dec
jns
das
cmc
in
decb
ja
test
pop
mov
shlb
data16
sub
mov
ret
sahf
ds
and
adc
lcall
inc
stos
les
sbb
arpl
mov
cltd
push
inc
lret
mov
sub
and
inc
inc
push
sbb
ror
dec
mov
les
mov
lret
pop
rclb
cmpsb
fstps
lods
into
xchg
push
mov
decl
insb
gs
das
xchg
mov
mov
push
xchg
pop
jle
stos
jecxz
bound
dec
mov
jecxz
or
popf
xor
adc
popa
fnstenv
pop
es
idivl
sbb
aas
pop
cmp
mov
xchg
sbb
orl
loop
or
mov
les
pop
decl
cmc
mov
ret
daa
jns
dec
mov
lahf
int3
jle
stc
fidivl
out
sub
cmp
sbb
arpl
adc
lea
pusha
push
inc
pop
repnz
loope
out
out
mov
testb
lea
mov
outsb
jne
jecxz
add
decb
in
jecxz
jne
lods
pop
xor
xchg
or
add
inc
push
shll
fidivrl
mov
loope
stos
std
ds
pop
mov
and
test
dec
jmp
fbstp
cmp
div
lret
in
push
icebp
cmp
mov
dec
loopne
lods
movsl
xor
ret
mov
je
adc
sbb
cmc
fldenv
and
push
mov
jmpw
mov
inc
test
dec
notb
adc
outsb
loopne
test
push
add
dec
stos
mov
sahf
jo
out
add
bound
xlat
jg
mov
jbe
sub
stos
sub
stos
jmp
fs
scas
cld
add
clc
xor
testl
mov
mov
or
int3
push
enter
xchg
adc
add
sti
jge
dec
mov
loope
mov
scas
aas
sbb
mov
popa
sub
sub
push
ljmp
stos
fisubs
sub
les
fwait
sub
jae
jae
repz
loopne
dec
out
add
dec
sbb
leave
jg
xor
mov
mov
and
and
push
cmp
add
in
jge
shrl
or
cld
and
or
lret
lock
pop
sub
sub
push
push
inc
xor
sub
xchg
jle
popf
mov
adc
movsl
inc
or
jno
sbb
push
mov
mov
fistpll
pop
adc
sbb
test
in
ljmp
push
add
xchg
lahf
cmp
outsl
jecxz
sbb
popf
cmc
mov
scas
fndisi(8087
aaa
dec
aaa
loopne
xor
jmp
fxch
shrl
jle
mov
inc
aad
mov
fsubrl
fstpl
lret
mov
pop
addr16
sub
sbb
mov
aad
push
ficoml
mov
jnp
in
rcr
and
adc
lods
out
pop
xchg
cmpsl
mov
pop
jns
cltd
daa
add
xor
inc
push
jns
push
mov
adc
and
pop
push
daa
jge
mul
push
pop
mov
in
ss
dec
aas
into
mov
lods
add
mov
push
sub
lret
enter
lods
mov
xor
lret
inc
fucomip
js
push
data16
sarb
mov
mov
xchg
loopne
mov
shll
out
pop
lret
pop
jp
daa
pop
lahf
adc
jbe
dec
adc
xor
xchg
inc
sub
mov
mov
cld
and
fsts
pop
push
mov
jne
jno
xor
cmp
aad
push
test
mov
lcall
fldcw
mov
js
and
stc
xchg
sti
daa
icebp
insl
dec
cmp
fdivrp
push
aaa
dec
add
xor
push
pop
fdivrs
aad
pusha
dec
mov
ret
arpl
or
cs
fs
lcall
test
stos
in
sahf
and
les
push
sub
add
outsl
cld
mov
mov
and
data16
pop
jbe
cmp
mov
test
dec
jbe
inc
lds
xchg
sarl
inc
jg
push
lcall
les
out
inc
scas
lcall
sbb
aaa
adc
dec
jl
ja
mov
mov
repnz
fistpll
push
jge
mov
mov
fwait
push
movswl
inc
and
adcb
nop
sub
movsb
std
xor
out
sub
jno
pop
push
inc
outsb
pop
rcll
mov
bound
cli
sbb
shrb
jae
lahf
lret
jns
ret
fxch
loope
nop
and
jecxz
call
pop
iret
jge
icebp
ret
xchg
xchg
or
imul
dec
hlt
sub
or
loopne
in
and
daa
jno
into
xchg
aaa
lcall
loop
ret
test
mov
and
shll
ret
sub
mov
and
outsl
cmp
fisubl
out
or
xchg
addb
add
insb
mov
lods
sbb
dec
xchg
or
push
xchg
lret
lahf
mov
insl
pop
xor
cmpsb
cld
test
cmpsb
dec
fidivs
xor
inc
pop
sbb
pop
call
jp
repz
jge
out
popa
lcall
mov
push
push
pop
mov
cmp
or
push
aam
adc
call
pop
dec
shl
fcoml
cmc
sub
and
sbb
imul
pcmpeqb
fists
mov
movl
cmc
in
xor
lahf
pop
movb
addr16
inc
dec
lahf
push
stc
hlt
hlt
inc
test
es
sti
cmpsl
mov
fs
jnp
sub
pop
add
jne
ljmp
mov
sbb
cmp
inc
jnp
cltd
je
and
xor
or
lds
add
dec
shlb
scas
adc
sub
ds
sbb
leave
mov
adc
mov
aas
lcall
cmpsl
out
fcom
std
adc
in
mov
shlb
pop
mov
mov
sbb
lods
stos
lock
ficoml
adc
shll
aad
in
push
call
test
js
loop
insb
fnstcw
mov
adc
subb
jmp
dec
pop
or
jmp
inc
rol
rorl
sbb
enter
mov
or
inc
and
jle
inc
into
leave
xor
push
inc
lods
loopne
and
popa
pop
rorb
pusha
mov
loope
sub
stos
loop
in
jno
push
mov
fildl
repnz
and
push
daa
icebp
jns
ret
fisubl
xchg
push
mov
nop
mov
js
inc
mov
out
decl
adc
mov
xchg
pop
or
mov
arpl
iret
add
mov
or
std
xor
dec
mov
mov
adc
xor
pop
in
xchg
inc
xor
xchg
icebp
cmp
in
jp
xchg
pop
shlb
push
push
js
jle
or
add
push
filds
mov
int3
cmp
jl
ljmp
inc
rorl
mov
and
loope
aam
inc
lods
mov
jle
imul
lods
mov
xchg
loopne
insb
dec
mov
in
sub
mov
mov
out
hlt
lds
add
icebp
add
jae
cmp
adc
aas
xor
std
push
shll
shlb
xchg
mov
xchg
mov
pop
cmp
faddl
pop
insl
push
sbb
in
cmp
jg
mov
orl
sahf
jecxz
insl
daa
mov
jnp
js
imul
mov
sbb
mov
loope
dec
fbstp
sbb
sub
jp
packuswb
add
clc
bound
pop
push
push
insl
jle
pop
ds
xor
out
dec
pop
sahf
cmc
mov
pop
nop
xchg
jl
xor
jae
cmp
add
xor
jb
ficoml
or
in
pop
xchg
push
fsubrl
inc
arpl
mov
push
mov
shl
cmp
add
add
sbb
mov
lea
inc
xor
pop
mov
xor
pusha
repnz
fs
sbb
push
push
cs
movsb
pop
jne
adc
jp
icebp
loop
cmc
mull
movsl
fsin
je
push
xchg
mov
adc
pusha
adc
dec
push
nop
mov
in
sub
mov
mov
jno
mov
cmp
fstl
cmc
mov
cwtl
ljmp
imul
jnp
jbe
mov
aaa
pop
popf
stc
sbb
out
push
xchg
loop
faddl
stc
dec
add
or
jne
sub
inc
mov
sarb
inc
adc
push
rcll
in
dec
push
xor
pop
aas
iret
ljmp
cs
or
mov
dec
stos
sbb
cli
add
icebp
xchg
sub
shrl
sarb
lahf
add
mov
push
push
test
rcrl
push
iret
nop
sti
and
sub
pushf
mov
aad
jb
push
mov
lods
test
gs
dec
out
mov
hlt
dec
and
imul
stos
mov
jle
bound
xor
mov
push
rolb
and
pop
ror
rcll
fsubs
popf
ja
jae
cs
and
xor
add
aam
iret
rcll
adc
inc
imul
negb
in
je
mov
push
dec
adc
cmp
cmp
xor
adc
enter
jae
in
or
outsl
mov
cmp
push
mov
stos
jns
inc
movsb
mov
mov
dec
je
jns
push
fldt
iret
daa
das
out
int3
pop
dec
adc
in
or
or
xchg
pop
cmp
mov
jmp
sbb
sub
call
in
imul
les
add
cwtl
mov
jb
gs
fildll
adc
fistps
push
dec
cmp
mov
cmp
mov
int3
scas
ljmp
lret
outsw
int
fsubs
pop
insb
mov
fucomip
mov
outsb
daa
in
out
fwait
mov
sbb
push
and
addl
xor
mov
movsl
loope
ret
push
adc
jl
ljmp
sub
ja
cmp
mov
arpl
fidivrl
fs
repnz
mov
xchg
stos
mov
adc
int
sub
daa
daa
push
cltd
rcl
mov
push
js
add
insl
imul
lcall
cwtl
adc
push
pop
add
fwait
add
mov
in
ja
pop
xchg
mov
mov
stc
push
sahf
push
mov
or
sbb
and
ljmp
xlat
in
into
adc
push
testb
mov
xor
icebp
lcall
add
push
fldl
inc
push
repnz
outsb
movsb
mov
push
xchg
adc
xchg
xchg
lahf
shll
ror
adc
xchg
xchg
call
addr16
pop
pop
pushf
sarl
loopne
call
xchg
jnp
dec
jbe
mov
dec
adc
mov
jae
sbb
sti
pop
sub
into
mov
sbb
inc
sbb
sbb
out
mov
xor
loopne
mov
adc
shl
inc
sub
dec
rcl
mov
push
sub
in
adcl
sbb
and
xor
movsl
fst
adc
mov
jecxz
test
mov
mov
sarb
sbbb
push
nop
push
push
mull
push
push
sahf
cmp
sbb
rcll
mov
repnz
inc
loopne
and
add
mov
int3
lods
movsb
into
lods
push
inc
adc
push
fs
sbb
jbe
adc
stos
ja
or
lret
add
cld
sbb
mov
mov
pop
rcl
pushf
dec
adc
lret
cmp
fs
xor
arpl
and
aaa
mov
sub
pop
shlb
dec
insl
xchg
dec
test
jb
add
aad
xchg
add
cmpsl
nop
jg
push
loop
inc
cmpsb
stc
out
sahf
sub
ror
clc
icebp
sbb
push
pop
outsl
imul
xor
cli
scas
cmpsl
es
insl
mov
sahf
mov
mov
aas
test
imul
in
jle
data16
insl
xchg
mov
aas
add
add
pop
dec
push
adc
das
out
enter
inc
ds
repz
add
lock
cmpsb
movsl
mov
and
cmp
sbb
fisttps
mov
das
jmp
adc
adc
jae
cld
adc
sub
cmpb
push
rcr
adc
jno
xchg
addl
cld
lock
mov
mov
vrsqrtps
outsb
loopne
push
test
push
popf
icebp
adc
inc
clc
test
push
xor
dec
test
mul
sbb
lahf
sbb
cld
hlt
push
outsl
popf
inc
mov
push
clc
pop
or
ret
icebp
dec
cmc
mov
dec
out
push
call
dec
bound
xchg
sbb
int
inc
mov
int
adc
sbb
aas
mov
arpl
outsl
in
les
or
in
jg
push
and
dec
js
sbb
loopne
xchg
movsl
jne
movsl
xchg
or
fmuls
mov
cmpsb
scas
das
pushfw
cmpb
mov
gs
pop
in
pop
adc
aaa
push
push
and
pop
mov
and
pop
adc
ret
adc
sbb
lods
std
test
push
cwtl
out
cmp
or
mov
jp
push
mov
add
lea
adc
sbb
sub
and
scas
add
popa
out
insl
mov
into
fdivl
push
pusha
out
lret
pop
add
mov
dec
jne
enter
pop
jo
and
test
sub
cmp
es
mov
int
and
fnsave
bound
add
inc
pusha
mov
sub
jbe
hlt
sbb
das
subb
or
push
test
xor
sub
or
mov
xchg
std
and
sbb
movsl
or
inc
sub
loopne
fmuls
push
xor
ret
cmpsl
or
adc
adc
loopne
cs
es
pop
push
lcall
js
dec
sub
daa
movsb
sbb
pusha
iret
dec
mov
jns
roll
cmp
pop
imul
xorb
sbb
mov
rorb
test
or
mov
xchg
test
add
int3
nop
imul
outsl
or
clc
bound
mov
pop
movb
sar
lods
pop
icebp
cmp
std
pusha
lret
loopne
adc
rclb
mov
int3
lds
ss
mov
out
aaa
mov
xchg
cli
or
shlb
sbb
mov
loope
pop
movsb
loope
outsb
test
sbb
xchg
ss
dec
mov
jne
sahf
jl
mov
movsb
xchg
mov
xchg
sbb
or
push
scas
sub
sbb
mov
and
hlt
js
mov
and
lahf
aaa
xchg
pop
mov
xchg
jno
pop
dec
xor
mov
out
movsb
imul
das
cli
lods
movsl
mov
pop
or
int3
daa
cmpsl
mov
push
sub
fstps
sub
cs
jp
jae
je
cmp
dec
fcompl
xor
sbb
inc
mov
rcrb
jecxz
popl
faddl
sbb
dec
sbb
pusha
mov
cltd
fs
movsl
sub
test
xchg
sti
mov
push
fwait
jo
xchg
jmp
pop
test
cld
fcmovnbe
sahf
pop
addb
adc
and
mov
mov
sbb
push
jns,pn
test
ja
sbb
pop
in
jno
dec
dec
inc
sbb
dec
mov
out
inc
mov
repnz
cmp
insl
movsb
in
mov
and
mov
push
aam
push
inc
push
jecxz
jmp
pop
pusha
sbb
xor
adc
pop
mov
sub
and
add
xchg
movsb
add
xchg
addr16
test
test
lahf
hlt
lret
xchg
pop
jnp
outsb
mov
outsb
lea
mov
lock
movsb
adc
mov
mov
out
push
or
mov
adc
cmp
push
fstpt
mov
dec
cmp
es
push
dec
iret
shrb
repz
sbb
xor
lock
cmp
call
test
add
jns
icebp
jne
xchg
clc
scas
scas
ret
sbb
and
push
out
lret
out
stos
test
insb
mov
add
out
aam
cmp
cwtl
in
faddl
inc
das
xchg
pop
sbb
cli
lret
jp
sbb
mov
hlt
xlat
cmp
add
mov
adc
enter
mov
cmp
nop
imul
imul
subl
negb
stc
lret
into
pop
lcall
push
xchg
cs
push
pop
dec
mov
mov
arpl
push
loop
sub
xchg
loop
adc
mov
imul
popa
hlt
inc
xor
and
push
loop
push
iret
sbb
std
pop
cli
adc
adc
lret
into
fistl
dec
push
mov
arpl
mov
cmpsb
out
pushfw
mov
icebp
xor
pop
in
dec
pop
push
add
and
fnstenv
sub
xlat
ss
cmp
push
jbe
pop
stc
scas
sarl
popf
stos
add
pusha
clc
ds
loop
xchg
loopne
mov
push
mov
sub
pop
fs
and
and
lock
xor
stos
inc
mov
jmp
mov
jp
and
and
inc
jge
mov
and
sbb
lods
sbb
dec
mov
test
push
dec
xchg
dec
shlb
cmp
enter
add
repnz
pop
out
out
add
adc
in
mov
repz
dec
lahf
pop
sbb
lcall
bound
sbb
jns
add
stos
jb
jnp
inc
or
popa
push
hlt
fimuls
loop
dec
jno,pn
push
sbb
in
sti
or
bound
cmpsl
inc
lret
sub
pop
mov
jl
push
or
into
ja
jb
jne
dec
lret
rorb
nop
leave
sub
insb
shlb
sub
cmp
fdivp
pop
sub
mov
mov
int3
fimull
pop
fsubl
or
nop
das
and
lods
aaa
out
inc
cmpsl
rolb
push
mov
push
jae
lock
pop
push
test
sub
cmpl
lahf
js
mov
xor
orl
iret
mov
pop
adc
cmp
lcall
sahf
xchg
push
adc
aad
jge
sbbl
repz
ljmp
mov
in
dec
daa
sbb
sub
mov
aaa
push
pop
subb
loop
mov
arpl
xchg
test
pushf
cltd
xor
pop
sbb
push
or
ss
dec
out
subl
or
shlb
cmp
push
push
mov
psubusw
and
inc
mov
mov
sti
push
insl
outsb
push
insl
jp
je
push
stos
pushf
dec
add
ja
sbb
jg
cmp
dec
test
mov
stos
or
adc
jo
mov
xor
jo
ret
repz
stos
enter
or
adcb
xor
call
popa
loop
mov
test
inc
ret
or
nop
lods
sub
rcl
imul
mov
jns
cmp
jecxz
cltd
scas
lret
mov
dec
add
es
fdivs
add
push
leave
cmc
inc
sbb
push
int3
dec
dec
pop
jp
loope
xor
sub
repnz
pop
ds
or
mov
xor
xor
loopne
adc
mov
imul
sub
sub
jge
xor
nop
lods
xor
ficomps
xchg
testl
dec
pop
cmp
jae
outsb
test
popf
stos
cwtl
add
sub
in
sub
pop
and
xchg
mov
jne
cltd
into
xchg
mov
adc
nop
out
mov
or
dec
mov
and
push
xchg
inc
sbb
sub
pop
xchg
and
into
outsb
inc
mov
js
xlat
mov
ljmp
loop
jb
loopne
mov
adc
fisttpl
mov
xor
test
in
adc
push
pusha
push
push
in
push
mul
adc
cmp
ret
jne
not
dec
cmp
push
aaa
xchg
aaa
rcrl
icebp
out
lock
pop
aaa
pop
xor
inc
out
sbb
sti
notl
pop
pop
add
loop
outsl
and
xchg
cmp
sbb
sbb
jp
sti
push
pop
mov
xchg
jnp
jl
fistps
fcomip
push
dec
arpl
js
dec
jbe
leave
ljmp
mov
pop
and
add
jecxz
arpl
xor
divps
pop
lods
fisttpll
adc
cmp
imul
fwait
negb
jne
sbb
movsl
cmpsb
push
adc
inc
sub
enter
xchg
aam
aaa
repz
mov
in
dec
mov
sahf
inc
sbb
pop
mov
add
cmc
mov
cmp
in
lret
mov
adc
jmp
and
or
add
inc
sbbb
jno
adc
jb
fcoml
loope
mov
jp
sub
stos
popa
mov
sbb
mov
adc
shl
adc
int3
mov
inc
xchg
push
shlb
sti
xor
hlt
cmp
mov
in
inc
mov
lahf
mov
lods
lcall
mov
es
rcl
clc
fstl
sub
lods
sub
repz
in
js
call
jne
cltd
ret
fcomp
mov
mov
jbe
gs
repnz
xor
mov
mov
push
mov
mov
aas
cmpsl
leave
movsl
adc
cltd
adc
adcl
xor
pop
sti
push
mov
test
mov
ja
imul
xor
sbbb
dec
ljmp
sbb
xchg
jo
imul
outsl
repz
sahf
xchg
mov
adc
and
out
inc
push
or
mov
add
pop
xchg
sub
inc
sbb
push
iret
pop
out
scas
mov
dec
jbe
out
dec
push
sub
test
jmp
inc
cmp
sbb
pop
test
cmp
sub
add
add
adc
ffree
imul
sbb
je
popa
popa
mov
seto
stos
inc
daa
pop
idivl
sub
fldl
xchg
sahf
rep
mov
pop
outsl
mov
pushf
clc
pop
aaa
fsubrl
xor
mov
jb
push
arpl
cmp
mov
into
mov
jl
sub
push
cmp
pop
xchg
cltd
mov
jns
sub
dec
sub
and
inc
push
inc
mov
jg
fs
ret
and
test
subb
daa
icebp
pop
xchg
sbb
mov
pusha
xorl
or
cmp
fs
sub
ret
mov
in
jnp
sub
rorl
mov
mov
xchg
cld
dec
mov
and
stos
loopne
cmc
xchg
lods
jnp
lods
xchg
orl
inc
mov
xor
jb
mov
aad
loop
fs
jmp
arpl
dec
xchg
sti
lods
mov
mov
repnz
xchg
mov
inc
movsb
sbb
mov
enter
push
in
cmp
rcll
push
and
sub
cli
movsl
push
adc
int3
lret
push
aas
loopne
or
push
xor
pop
bound
or
inc
jle
mov
xor
aas
cwtl
mov
mov
pushf
sbb
in
inc
pop
dec
push
aas
rclb
push
jle
ret
ror
jb
xchg
ss
inc
or
andl
in
pushf
int3
xchg
icebp
movsb
pop
adc
and
lds
mov
jns
inc
fwait
shrl
int3
ljmp
push
sahf
inc
xor
movb
jle
jp
cmpsb
jmp
xor
fdivr
mov
sub
std
lods
xor
mov
popa
daa
add
push
imul
inc
pop
in
adc
aaa
xchg
jp
sub
imul
adc
cltd
xchg
cmp
push
lock
dec
repz
sub
and
dec
pusha
imul
mov
inc
ds
shlb
nop
add
mov
mov
ret
mov
add
dec
hlt
mov
xor
cmp
into
cltd
add
iret
pop
sti
dec
in
push
mov
outsl
add
lret
jns
inc
jecxz
xchg
sti
mov
or
cvtps2pi
sarb
push
sarl
xor
data16
jbe
lods
roll
pop
sbbl
stos
fcmovne
cmp
enter
mov
leave
dec
js
xor
pop
pop
dec
insb
es
jg
push
push
push
fistpl
je
xor
xlat
xor
mov
gs
gs
xor
fwait
add
mov
and
push
mov
cwtl
sub
pop
std
xchg
clc
fstl
in
cmp
cli
fucomip
pusha
mov
cmp
in
xchg
mov
aad
cmp
loop
in
dec
xchg
add
js
test
bound
ret
sbb
xchg
or
xor
pop
outsl
mov
dec
ret
and
loope
push
iret
fistl
mov
fistpl
cmp
loop
add
mov
sub
cmc
and
outsb
outsl
rorb
cmp
mov
imul
mov
arpl
aas
sar
add
and
inc
and
or
push
lret
mov
lahf
cmpsb
pusha
jnp
sub
jne
in
sbb
pop
je
dec
cmp
ja
sahf
dec
cwtl
sbb
stc
inc
lret
adc
cmp
inc
out
mov
into
scas
enter
test
dec
adc
lret
inc
test
lds
shlb
or
out
push
xor
negw
movsl
fsqrt
mov
mov
ror
jle
jg
aam
ja
mov
and
fldcw
cmp
mov
jnp
stos
pop
xchg
ret
lods
adc
sbb
cltd
xchg
dec
clc
jns
fistl
sbb
and
notl
cmpb
add
lds
cmp
lea
sahf
mov
pop
lock
pop
adc
push
mov
mov
and
push
xchg
xor
cmp
mov
mov
push
cli
push
rorl
hlt
lds
js
pop
into
mov
popa
jno
aas
sbb
mov
jns
mov
rclb
in
sbb
pop
sbb
out
in
test
scas
adc
and
fldenv
add
xchg
das
outsl
adc
imul
add
fistpll
push
repz
push
lahf
cmp
aaa
lods
ret
jno
mov
arpl
inc
lret
add
mov
inc
cltd
ss
clc
mov
inc
jmp
lods
mov
hlt
adc
int3
mov
mov
mov
adc
loopne
fnstsw
incl
je
shrl
fnsave
sahf
mov
clc
xchg
mov
jle
test
push
mov
adc
shrb
sub
dec
mov
popf
loopne
jmp
cmpsl
popf
int
cmp
sti
je
leave
lods
popl
outsb
cmpsb
outsl
movb
mov
jno
dec
fs
fisttpll
mov
mov
mov
sbb
xchg
mov
xchg
shrb
outsl
or
and
mov
in
loopne
add
je
jns
dec
adc
lock
push
daa
aaa
movsl
aam
lods
repnz
inc
adc
push
push
test
and
sub
test
aas
push
inc
stos
mov
push
aaa
push
arpl
pop
adc
push
cld
and
mov
mov
mov
push
ss
adc
sti
sti
andl
mov
push
mov
jno
fiaddl
out
aas
adc
pop
or
xor
aas
jno
cmc
cmp
mov
mov
mov
stos
lock
and
fs
cs
cmpsl
push
dec
sbb
inc
ljmp
or
mov
ljmp
repnz
lods
es
mov
inc
outsb
xlat
fucom
xchg
mov
cmp
fidivrl
mov
loope
into
sub
jb
dec
sahf
ret
xchg
imul
gs
icebp
adc
mov
inc
stos
ret
push
add
and
aaa
adc
xchg
out
cmpsl
push
mov
fnstsw
add
dec
movsl
add
adc
leave
sbb
xchg
insl
fisubrl
xor
lret
insb
stc
addr16
in
or
sub
outsb
jb
sbb
aam
loop
scas
es
mov
aas
enter
addb
out
xchg
iret
outsl
inc
mov
mov
cmp
inc
in
hlt
cmp
mov
pop
push
mov
push
lods
pop
sbb
cli
mov
dec
mov
mov
adc
lds
lods
sahf
subl
cmpsl
push
enter
icebp
ret
pop
addr16
inc
jo
xchg
xor
rol
scas
test
pop
xor
sbb
pusha
xor
popf
or
inc
cmp
movsl
jle
lcall
and
or
jg,pn
inc
cmp
aad
cmpl
pushf
sbb
int3
dec
jp
enter
dec
adc
cwtl
fistl
and
mov
mov
shlb
ret
jl
shlb
add
and
jmp
xor
fsubrs
jo
mov
xchg
imul
push
mov
cltd
sti
mov
dec
bsf
jecxz
add
push
jnp
sbb
add
cld
jmp
mov
adc
and
xor
jb
outsl
jp
mov
push
fisubl
jae
std
in
sbb
xchg
into
push
ss
clc
jmp
push
lcall
jne
pop
pop
push
clc
xor
fs
adc
movsb
and
mov
inc
dec
adc
cmp
aam
adc
jbe
hlt
stos
jo
jbe
sub
pop
scas
adc
inc
pushw
mov
dec
scas
add
addr16
xor
addr16
cli
sub
and
movsl
pop
xor
and
dec
clc
mov
cltd
int3
inc
push
clc
and
rcrl
jmp
or
ja
xchg
and
xchg
mov
cmc
push
pop
or
pop
xchg
mov
divl
nop
adc
and
adc
pop
dec
dec
or
mov
sub
inc
push
jo
push
sbb
fcmovnbe
inc
fcoms
test
push
cmpsb
sub
rcrb
and
loop
push
pop
lcall
adc
outsb
and
xor
pop
lods
mov
cmp
ss
jo
sub
fistps
dec
mov
rorl
push
pop
ds
cmp
stos
pop
dec
push
imul
rcrb
cmp
dec
dec
cltd
cwtl
dec
mov
cmpsl
dec
aam
adc
sub
push
xchg
inc
add
xchg
push
out
shrb
fstps
punpckhdq
stc
mov
pop
idivb
int3
jge
sub
dec
test
push
bswap
push
cmp
inc
jle
stos
int
lds
xchg
lods
out
push
push
add
ret
mov
xor
js
xor
out
mov
aas
mov
lret
rcl
and
inc
jb
aas
gs
xchg
cli
in
or
sub
andl
pop
enter
sahf
cmp
cmp
xchg
pop
adcb
notb
lods
dec
adc
and
inc
inc
dec
xor
mov
push
pop
add
jmp
cmpsl
jp
mov
fisubrs
repnz
push
adc
je
int3
ficoms
and
xchg
cmc
loopne
cmc
cmp
sahf
ljmp
and
or
cmpsl
mov
jo
fwait
nop
or
imul
mov
push
rorb
mov
inc
test
sbb
sub
mov
mov
ret
mov
test
notb
sub
in
jne
xchg
mov
dec
rcr
inc
repz
test
test
scas
clc
sub
push
in
push
jbe
xchg
jne
lea
pop
pop
mov
jae
pop
js
call
or
push
sahf
inc
push
sub
in
lret
push
dec
sub
in
jle
ret
sbb
sub
dec
mov
in
movsb
outsb
out
jge
mov
mov
cmpsl
sub
popf
movsl
pop
ficoml
sub
ret
mov
loopne
pop
mov
es
jle
insb
push
xchg
movsb
fldt
fwait
xor
adc
pop
push
add
das
loope
cmp
fidivs
adc
loope
mov
jmp
push
xor
cmpsl
nop
inc
add
jge
out
fldenv
test
clc
in
sbb
mov
out
jl
add
rcl
lcall
lds
mov
jns
lret
lock
cmp
dec
repz
repz
adc
dec
pop
outsb
fistpll
pushf
sub
aam
fistl
shr
ret
mov
mov
subb
push
adc
mulb
jb
jno
loop
mov
dec
inc
flds
sbb
imul
pop
sub
dec
inc
dec
ds
jmp
clc
mov
cld
aam
lea
mov
rorb
test
push
cmpsl
outsb
and
xor
call
lock
jo
cli
inc
loop
pushf
xchg
fldt
mov
adc
xor
mov
stos
out
pop
mov
mov
gs
cmp
add
adc
scas
push
pushf
dec
cmp
sbb
bound
jae
movsb
js
aad
aaa
pop
sbb
adc
or
mov
in
adc
xor
leave
jae
sub
xchg
scas
repz
imul
sar
scas
xor
rcll
stc
fdivrs
mov
popf
adc
dec
enter
ds
sbbb
and
xchg
adc
xlat
adc
cmp
push
pusha
sub
mov
jns
stos
repnz
shlb
push
inc
insl
int3
xlat
inc
stos
cltd
or
movsl
cmp
and
lds
adc
jo
outsb
subl
xorl
testb
sub
data16
add
xor
in
iret
clc
out
jb
into
xchg
sbb
jb
ret
adc
add
mov
sbb
fdivr
in
xor
pop
decb
mov
add
stos
adc
mov
jne
cwtl
fsubrl
cwtl
loop
fdivr
ss
lahf
pop
adc
jb
jo
fdivrp
push
jbe
in
pop
sti
adc
sub
aad
rorl
cli
pop
imul
adc
rolb
or
and
cs
inc
enter
jo
das
movsl
jae
cltd
inc
push
subb
insb
lds
cli
andl
stos
pop
pusha
clc
xchg
cwtl
ret
inc
sti
dec
cwtl
lcall
and
lods
mov
fistl
push
iret
cmpsb
jno
out
aaa
rol
push
dec
lds
mov
cmp
inc
push
test
gs
scas
push
jecxz
mov
add
popf
mov
fwait
and
adc
mov
sbb
sub
xchg
out
sbb
xor
add
test
shr
mov
xor
dec
aam
add
jb
mov
cltd
jge
adc
mov
imul
in
in
push
inc
xchg
mov
mov
subb
jp
jbe
dec
jl
add
rcrb
je
xor
call
test
jp
pop
in
std
jmp
pushf
push
lods
sbb
jecxz
sub
nop
leave
mov
mov
aam
hlt
aaa
xor
pop
test
pop
sub
xchg
hlt
push
ror
mov
lcall
push
imul
xlat
cli
mov
in
xchg
add
pop
or
xor
push
inc
jg
inc
lods
sub
and
and
in
mov
popf
or
ljmp
out
push
fcomp
in
dec
sub
js
dec
mov
cli
and
outsl
cmpsb
iret
js
fcomp
adcl
xor
jle
roll
fnstcw
mov
hlt
cmc
icebp
sub
inc
testl
inc
gs
or
ror
in
xchg
pusha
and
daa
and
ret
mov
mov
sti
mov
sub
call
inc
dec
inc
pop
inc
dec
outsb
inc
xchg
into
lret
rcrb
push
fcoms
dec
ret
mov
fsts
inc
outsb
shlb
jne
dec
mov
add
adc
outsl
fst
sub
push
mov
ret
insb
roll
xchg
out
stos
xchg
ret
push
cwtl
xor
aad
xor
fwait
pushf
push
jmp
outsl
lcall
js
lret
mov
call
enter
jmp
sbb
movsl
cmp
mov
xchg
gs
mov
add
lahf
adc
iret
test
mov
outsb
pop
pusha
lcall
cwtl
stos
cmp
cmp
int
rcr
int3
xor
pop
les
out
and
fldl
or
adc
mov
push
mov
bound
jge
nop
pop
fsub
insl
popa
ret
icebp
xor
cmp
jp
cmp
jo
fisttpll
repnz
pop
daa
outsb
mov
cmpb
xchg
lcall
in
repnz
mov
adc
in
fidivrs
xchg
popf
mov
jmp
ljmp
lcall
push
fs
sti
popa
int3
push
pop
dec
addr16
repnz
inc
mov
sub
sarl
mov
adc
dec
pop
pop
out
sub
movsb
xchg
dec
and
inc
and
jbe
ss
xchg
test
dec
add
pop
xlat
lcall
out
add
and
test
repz
sub
mov
jbe
gs
in
pop
movsb
xchg
test
orb
adc
sub
sbb
pop
lods
push
jae
sub
or
jnp
xchg
mov
mul
into
out
jae
fs
jle
repz
test
dec
pushl
popa
aas
mov
sti
inc
pop
mov
scas
fmull
cmp
adc
aas
add
fildl
sub
sbb
or
fstpl
push
xchg
dec
ljmp
adc
dec
mov
inc
imul
push
int
pop
or
jo
xor
adc
inc
xchg
dec
in
or
fwait
lods
aad
push
rcrb
or
inc
movsb
inc
rcrb
imul
pop
gs
cmc
add
aaa
cmp
mov
cmp
push
mov
in
inc
js
decb
xor
int
pusha
lahf
lahf
push
fst
and
cli
adc
or
jb
cmc
sub
or
sub
pop
adc
call
lret
dec
lock
stos
mov
dec
xchg
sub
push
push
cld
mov
push
dec
rorb
decb
dec
jmp
dec
icebp
jns
sub
add
popa
rorl
jge
pop
fadds
aam
sub
adc
sbb
and
mov
and
out
sbb
dec
pop
imul
imul
cmp
cmp
xchg
outsl
push
rorb
rcr
out
push
jae
lds
xor
xor
imul
sub
mov
inc
aam
cmpb
inc
and
jnp
xchg
stos
fnstsw
nop
push
jl
mov
scas
fwait
orb
jo
fistl
ret
xchg
xchg
pop
cwtl
nop
test
xchg
push
mov
imul
push
jo
mov
jb
push
push
mov
xor
push
in
addr16
cmpsb
pop
ffree
cwtl
out
jg
lret
inc
cmp
jbe
jmp
pop
cmp
notb
out
arpl
ja
cmpsl
sub
cmp
cmp
mov
add
nop
or
out
pusha
add
mov
fisttpll
pop
outsl
jns
lods
xchg
dec
push
fs
sarl
push
mov
jg
ss
pop
icebp
mull
inc
lcall
cmpsb
ja
pushf
push
movsl
stos
in
repz
pop
push
sti
mov
movsb
push
inc
inc
std
loop
mov
and
movsb
popa
mov
sub
inc
sub
sub
xchg
and
xchg
pop
sub
cmpsl
aas
sbb
jo
cmpsl
mov
shlb
sub
icebp
int3
scas
leave
cmpsb
enter
inc
dec
das
pop
jge
inc
daa
jp
inc
test
sub
lea
mov
addl
out
inc
outsb
sub
xlat
pop
pop
jmp
mov
cmp
dec
cli
sarb
push
int
inc
cwtl
subb
xchg
xchg
loopne
in
dec
lds
adc
pop
jmp
enter
mov
sbb
fists
in
mov
pop
rclb
cmpsl
push
mov
adc
nop
xchg
inc
xchg
out
xchg
pop
or
decb
into
push
pop
stos
sbb
adc
mov
sbb
push
hlt
stos
cmc
lock
ret
xchg
leave
or
dec
push
movsb
std
jg
pop
xor
ficomps
or
adc
popf
ret
sbb
movsb
ret
inc
push
sub
int3
movsl
xlat
xlat
loope
push
cmp
mov
jmp
jp
xchg
and
aam
pop
cmc
int
out
cmp
xor
rclb
mov
cmp
and
das
imul
pop
sbb
push
cmp
lods
std
pusha
xor
imul
xor
sbb
jge
iret
sar
jg
scas
iret
inc
mov
sar
push
bound
jle
jb
out
xor
roll
mov
adc
push
adc
pop
outsb
or
mov
fidivs
je
rolb
pop
inc
push
in
pop
pop
jnp
lret
sbb
cmp
add
sub
jns
ficoms
jno
pop
ja
stc
sahf
mov
inc
pop
hlt
jns
and
xchg
into
lea
xchg
fnstcw
or
loop
and
mov
shrb
mov
mov
insb
xor
pushf
movsb
out
std
inc
sahf
pop
mov
scas
inc
dec
cmp
inc
jecxz
add
pop
inc
addr16
mov
and
xor
imul
outsb
mov
cmc
jl
sbb
aad
lret
sbb
mov
mov
outsl
lock
lahf
lahf
cmp
xor
enter
lcall
les
xor
sbb
cwtl
bound
aas
pop
out
dec
or
and
xor
adc
loop
inc
jge
mov
in
sbb
sbb
push
std
xor
stos
jnp
dec
xchg
fcmovne
ret
inc
andb
xor
xor
insl
or
enter
loopne
enter
out
int
xchg
popf
daa
fs
xor
sub
repz
aam
cmp
pop
scas
leave
pop
push
mov
inc
addr16
notb
or
leave
cmc
out
sarb
add
dec
sbb
jge
xlat
inc
xor
out
fists
push
lret
jbe
cwtl
adc
dec
xlat
rcrl
das
cmpsl
in
fwait
fwait
mov
les
mov
jg
add
mov
pop
mov
pop
cmp
cmpsb
repnz
js
fs
es
hlt
cli
add
pop
andb
mov
lahf
xchg
cli
lahf
es
imul
mov
jae
mov
fs
sub
out
cmp
push
movsl
push
lret
and
sub
ja
iret
or
ret
out
cmp
sub
xorb
loopne
add
dec
add
fadd
xchg
mov
ss
push
daa
into
mov
mov
lcall
push
mov
mov
and
leave
outsl
cwtl
outsl
dec
je
sbb
pushf
frstpm(287
xor
cltd
in
das
ffree
in
xor
aaa
scas
dec
ds
mov
clc
ljmp
test
or
mov
mov
mov
fs
out
std
int3
adc
push
xor
int
inc
inc
sbb
xchg
nop
add
adc
sub
in
sub
inc
test
xor
into
mov
cmpsl
cmp
fnsave
bnd
shl
ss
or
xchg
and
lea
lds
dec
dec
add
mov
jae
lock
and
adc
inc
addb
clc
movsl
stc
jl
mov
cli
sbb
rorl
xchg
das
inc
jo
mov
push
jmp
clc
push
xchg
and
imul
into
adc
adc
test
jno
arpl
dec
mov
sub
dec
inc
xchg
xchg
into
fisttpll
and
add
dec
sbb
jle
sub
sbb
inc
mov
repz
orl
loope
mov
lods
push
xor
jnp
sub
out
dec
jmp
rcrb
dec
fs
inc
sub
inc
loop
xchg
ljmp
daa
cmp
fisttpll
and
jae
imul
and
mov
test
and
mov
popf
mov
neg
mov
sub
call
int3
lret
aas
mov
fists
adc
bound
scas
mov
loope
aad
sub
ud2
cmpsb
dec
jmp
addl
mov
mov
add
std
dec
jp
or
call
rolb
fs
dec
rcl
ss
lds
je
push
xchg
fnstcw
dec
xchg
sbb
test
les
mov
mov
cltd
dec
cmp
pusha
repnz
lret
shlb
iret
test
mov
ljmp
in
jecxz
mov
adc
xchg
push
out
icebp
hlt
mov
rclb
xchg
movsb
scas
jo
mov
out
fadds
sub
pop
pop
pop
mov
hlt
hlt
stos
icebp
fninit
and
sub
outsl
cltd
fildll
pusha
adc
pushf
pop
scas
pop
mov
adc
dec
mov
push
mov
mov
mov
lods
movsl
sbb
and
jge
mov
jle
lret
push
cwtl
inc
js
inc
sbb
int
dec
push
sub
lret
stc
out
push
jmp
xlat
clc
lock
repz
push
sub
pop
dec
push
or
jno
je
and
stos
jno
add
dec
out
adc
dec
fimuls
out
cld
aam
add
repz
push
sti
fsub
xlat
aaa
push
jl
repz
push
xchg
or
dec
fdivrl
sub
icebp
jno
ret
inc
jb
jne
cmp
adcl
adc
bound
lcall
mov
jmp
lret
int3
push
jg
mov
jne
sub
repz
push
pop
and
outsb
ljmp
sub
add
add
loope
cltd
push
test
and
fiadds
mov
pushf
xchg
mov
in
aaa
mov
aaa
mov
into
test
jge
lcall
inc
jb
fadds
les
jo
mov
sub
cmp
mov
dec
mov
push
dec
mov
cmpsb
sahf
pop
imulb
ret
jge
hlt
fs
popf
xor
cmp
test
imul
sbb
outsl
pop
decb
leave
pusha
cmc
and
scas
aad
test
add
sbb
aaa
push
mov
repnz
lock
test
jp
mov
add
cwtl
xor
adc
and
std
push
cmpl
popa
imul
rcll
lret
jo
sub
loopne
push
sub
mov
sti
jl
je
leave
sbb
divb
pop
add
or
call
push
aam
pop
aad
jle
jb
stos
call
sbb
xchg
cmp
xor
adc
xchg
or
fldcw
dec
out
mov
or
bound
mov
add
rcll
adc
bound
pusha
cmc
cmp
cmp
dec
rcr
fwait
push
popa
scas
mov
aas
frstor
ja
mov
aas
jne
mov
lret
stos
rolb
ja
jl
and
sbb
lret
popa
cmc
ss
pop
pop
adc
xlat
sub
push
sbb
inc
sub
test
fisttps
push
outsb
loop
jg
loop
sub
sbb
jae
xor
dec
xchg
cltd
leave
xchg
cmp
sbb
sub
sahf
push
cli
repz
mov
push
mov
or
loopne
bound
stos
bound
push
loop
cmp
mov
movzwl
mov
or
adc
add
mov
and
xor
mov
lahf
ss
es
and
or
sub
je
xchg
push
iret
mov
pop
test
or
ss
cmpb
test
pop
xchg
dec
shr
push
mov
ja
sub
sbb
pusha
push
jo
or
sbb
or
push
adc
push
int3
imul
int
daa
jne
add
lods
les
ror
and
push
cltd
ja
test
fiaddl
nop
adc
cwtl
test
movsl
sbb
mov
ficompl
mov
imul
inc
inc
inc
in
sub
push
pop
cmpl
sti
sbb
mov
and
xchg
scas
push
scas
push
aaa
rcrl
loopne
cmpsl
test
inc
and
xchg
inc
sbb
push
jge
push
jb
xchg
sbb
push
or
paddusw
dec
loope
push
pop
insl
mov
roll
out
jnp
insl
call
pop
dec
jae
jbe
sub
jnp
jnp
mov
cmc
aad
stos
stc
add
cli
clc
sub
pop
mov
testb
fs
cmp
cmp
mov
pop
aad
add
pop
and
fistps
push
push
pop
mov
lret
xor
fs
aaa
cwtl
test
lret
pop
add
adc
insb
xorl
int
xor
aad
xor
mov
gs
sbb
addr16
sbb
lds
je
mov
cmp
sahf
add
and
push
jle
dec
int
pushf
mov
cmp
adc
add
push
faddp
sbb
test
in
and
adc
mov
lock
out
sbb
or
das
push
adc
push
cwtl
rdtsc
fs
adc
mov
mov
gs
fiadds
mov
dec
xchg
cmc
and
jno
fldenv
and
jns
push
mov
cmp
stc
xchg
mov
jge
imul
jns
push
push
popf
popa
aaa
xchg
mov
aaa
out
je
jmp
mov
ja
out
add
xor
fnstsw
jb
add
aad
mov
test
shrl
pop
inc
dec
mov
repnz
pop
sub
inc
add
mov
cmp
lcall
mov
mov
gs
scas
inc
cmpsl
cli
xor
push
outsl
dec
cmp
sbb
popa
dec
sbb
loope
pop
push
repnz
jns
aas
cs
sub
xchg
push
lods
ss
fwait
ret
sahf
xchg
jb
mov
xchg
repnz
jo
stos
xchg
sbb
jno
mov
mov
mov
push
lods
shll
push
das
jp
push
mov
mov
xor
mov
pmaxub
ficomps
adc
adc
mulb
pop
das
adc
test
cmp
dec
addr16
bnd
insl
aam
pop
mov
sub
jno
sahf
sbb
std
xor
icebp
test
sub
add
push
cli
repnz
sub
mov
fstpl
push
andl
in
shlb
lods
enter
sbb
pop
cmp
aad
call
pushl
xchg
sub
xor
xchg
movsb
lret
mov
and
out
mov
or
dec
aad
fcmovnb
lods
mov
and
adcl
xor
sbbb
cli
sbb
bound
gs
inc
ss
out
lret
cmpsl
dec
inc
ret
add
aas
push
mov
mov
insl
repnz
jecxz
dec
xchg
pop
cld
movsl
fisubs
jg
pop
lds
test
stos
inc
cmp
insb
hlt
faddp
ret
imul
push
dec
iret
cltd
popa
jb
lods
cmc
jecxz
rcrb
mov
pop
neg
cmpsb
movsb
inc
dec
and
popa
sub
dec
mov
xor
mov
rol
mov
jnp
sub
inc
mov
popa
dec
out
sub
jge
stos
sbbb
inc
fisubrs
ljmp
or
icebp
xchg
inc
xchg
and
jp
pop
inc
pop
push
bound
mov
pop
sbb
mov
and
call
dec
xor
inc
xor
out
lret
adc
xchg
fsubrl
scas
jbe
inc
scas
cmp
pop
outsb
addr16
mov
add
dec
mov
insl
icebp
ljmp
pop
ror
jne
lret
inc
gs
ds
sub
dec
push
xor
fst
adc
and
or
xchg
push
bound
hlt
hlt
jmp
or
jno
aaa
xor
data16
jno
mov
mov
popl
cmp
lods
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
xlat
sahf
push
aad
clc
mov
xchg
dec
cmp
movl
and
mov
add
sar
and
jl
lods
mov
lcall
cltd
sub
pop
loopne
lahf
rcrl
push
adc
inc
mov
jle
dec
dec
cld
rcl
popa
mov
mov
add
jo
fnstenv
mov
aaa
stc
dec
test
cltd
ljmp
rorb
push
ljmp
jmp
xor
adc
and
jecxz
xchg
int
fs
xchg
popf
xor
mov
fisubrs
pop
cs
insl
mov
jecxz
jp
inc
and
incl
jmp
and
push
sbb
push
jno
cmp
rorl
and
iret
subb
leave
cmp
mov
jp
std
aas
push
fmuls
hlt
enter
add
jo
test
bswap
jno
jecxz
pushf
jae
sub
or
out
out
lret
add
sar
dec
cmpsb
mov
mov
js
je
sbb
dec
add
and
pop
jbe
inc
and
repnz
pop
jo
cmp
adc
jb
xchg
xor
mov
ret
dec
jl
sub
fs
ljmp
scas
insb
rorb
push
icebp
mov
icebp
fwait
fs
jecxz
pop
mov
or
jmp
xor
sbb
xchg
daa
mov
jp
and
jnp
add
mov
jl
pop
mov
movsb
jp
cmpb
mov
pusha
pop
rcl
loop
pusha
xor
leave
or
call
jne
adc
sar
mov
jne
inc
pop
mov
cmpsl
mov
daa
lcall
mov
in
mov
je
icebp
lea
pop
stos
shrl
jle
insb
roll
mov
jbe
rcr
mov
popa
xchg
roll
rclb
xor
mov
lret
sub
lret
fdivrs
mov
fwait
mov
or
push
push
sub
sbb
inc
pushf
mov
jnp
cltd
inc
cmpsl
xchg
adcb
lods
sti
mov
sbb
repz
inc
adc
mov
cs
push
jbe
xchg
xor
xchg
inc
adc
adc
aaa
movb
jns
jge
scas
add
add
inc
add
inc
add
cmp
lret
aad
mov
inc
pop
cwtl
sbb
lret
cwtl
loope
nop
andl
sub
iret
dec
and
push
and
popf
popa
push
mov
addr16
hlt
into
and
jl
xchg
add
add
inc
inc
jp
mov
sub
cs
or
push
fsub
fcmovnbe
loop
int3
or
cs
leave
xor
inc
xor
sbb
pushf
dec
ffreep
ljmp
mov
into
xchg
pop
enter
aad
std
rorl
push
mov
sbb
xchg
sti
jnp
les
mov
mov
push
dec
aad
in
mov
mov
ljmp
lahf
into
sbb
lret
push
mov
in
std
lock
xchg
add
stc
jmp
push
sbb
popf
mov
in
jmp
sbb
xlat
ljmp
xchg
out
ficoms
sti
cmc
mov
icebp
addr16
movsb
add
fwait
xchg
jmp
sti
nop
ds
mov
lds
int3
dec
lock
test
mov
cmc
ljmp
dec
ret
xor
xchg
jns
fdivl
or
or
add
cmp
inc
jb
fsub
pop
mov
out
bound
xchg
es
lods
mov
mov
fsin
mov
mov
inc
ja
fsqrt
pop
mov
jmp
scas
jl
insb
ljmp
dec
push
cmpsb
mov
inc
and
push
dec
imul
dec
mov
ljmp
mov
xchg
fwait
dec
sbb
subl
nop
mov
mov
loope
dec
rcrb
sbb
mov
mov
stc
dec
mov
fs
push
ret
lahf
push
xchg
outsl
dec
mov
aas
sub
adc
or
adc
fmuls
iret
sbb
mov
inc
stos
clc
or
daa
mov
or
cwtl
ja
nop
jmp
popf
int3
test
clc
xchg
cld
xor
nop
test
add
test
mov
icebp
pop
push
or
sahf
mov
xor
aas
stos
cmp
push
int
pop
test
fistpl
xchg
in
pop
dec
mov
sub
xorl
test
jl
cmp
push
lods
xor
cmpsl
jns
adc
repz
cmp
inc
outsb
mov
in
addb
or
sarb
stos
push
clc
ljmp
or
add
sbb
incl
mov
into
js
jg
stc
andb
mov
cmp
fsubrs
jmp
daa
dec
pop
sub
mov
pop
pop
js
int
imul
cli
adc
pop
loope
xchg
cmpsb
lds
test
or
aam
shll
add
mov
jb
sub
stc
xchg
ret
xchg
test
jge
xchg
clc
pop
jmp
cwtl
mov
sahf
lods
aaa
popa
dec
mov
mov
gs
inc
test
mov
sub
leave
push
mov
xchg
dec
out
mov
daa
fistpl
jb
mov
add
mov
jno
fidivs
ss
iret
jns
rdpmc
js
popf
iret
or
imul
icebp
mov
dec
rolb
add
out
sti
mov
aam
push
cmp
rcrb
lds
push
sub
dec
or
jmp
loop
in
push
push
out
push
mulb
inc
cmpsl
or
std
out
mov
xor
mov
ljmp
lds
fcom
lret
and
scas
int3
adcb
aam
ret
call
stos
je
scas
mov
test
or
xor
jp
sti
cmp
call
enter
cld
jae
decb
outsl
arpl
cmp
jae
xchg
loope
xchg
repz
fisubs
mov
xchg
ja
inc
mov
jecxz
stc
and
aam
movsl
pop
push
push
mov
cld
cltd
add
xor
clc
clc
jmp
sbb
mov
adc
cmp
push
arpl
mov
insb
mov
pop
in
pop
aam
inc
test
mov
jecxz
dec
inc
sbb
sahf
cmp
dec
cld
jl
je
lds
sub
int3
fwait
js
popl
mov
sub
and
enter
mov
fildl
aad
std
nop
push
sbbb
xor
movsl
mov
adc
adc
xlat
mov
leave
gs
inc
and
sub
pop
add
push
out
push
xor
mov
mov
add
dec
mov
xchg
sbb
xor
aaa
mov
test
adc
pop
stc
into
in
xchg
jne
xchg
push
dec
cmpsb
adc
and
mov
inc
dec
adc
cmpl
mov
nop
pop
test
sbb
pop
test
mov
or
pop
out
lret
mov
clc
or
push
jbe
scas
sti
aas
xor
sub
jno
and
inc
aas
aaa
push
and
daa
cmp
and
lahf
dec
popf
repnz
mov
cs
out
js
lds
cltd
test
jle
mov
push
mov
cmp
fldenv
and
out
pop
inc
div
mov
leave
sub
adc
sbb
dec
cmp
ret
sub
mov
in
fisubrs
insb
cmp
sub
dec
or
push
out
in
mov
nop
cli
pusha
stos
and
aam
pusha
flds
out
jle
cmp
inc
mov
cmpsl
mov
out
clc
std
mov
stos
out
or
jl
sbb
sub
outsl
jle
popa
fistps
popa
nop
lods
enter
cmp
fsubrs
daa
pop
and
mov
mov
inc
and
adc
andl
sbb
jns
and
mov
stc
adc
subl
movsl
mov
inc
aam
mov
pop
incb
scas
adc
jmp
leave
dec
cmpsl
iret
sbb
cltd
mov
cmp
inc
andb
lods
adc
dec
loop
dec
stos
mov
fucomip
sub
into
movsb
dec
insb
sbb
cmp
js
rcrl
jne
lahf
insb
xchg
and
sub
out
hlt
jb
xchg
scas
stc
sub
push
and
rorl
in
or
gs
nop
cli
dec
in
out
test
cmp
mov
mov
and
mov
pushf
jns
or
and
cmpsb
push
std
mov
scas
push
repnz
sti
ror
xchg
add
lods
pop
pop
xchg
or
add
sarl
xor
aas
lock
cmp
mov
into
pop
cmc
icebp
jbe
mov
test
adc
ret
jmp
dec
iret
call
dec
dec
adc
test
push
jns
mov
jbe
sbb
aad
mov
xchg
outsl
imul
clc
std
cmpsb
inc
test
dec
in
xor
int
dec
scas
and
pop
push
enter
mov
cmp
jecxz
mov
imul
jg
dec
xlat
call
push
mov
cmp
daa
lcall
xchg
xor
mov
hlt
iret
lods
adc
lret
dec
int3
mov
test
or
mov
jmp
ss
in
add
xchg
adc
outsl
adcb
out
ret
add
mov
mov
pusha
mov
mov
push
mov
mov
idiv
pushf
test
inc
fsts
lea
sbb
sahf
test
mov
jp
jle
push
inc
pop
test
inc
adc
pop
test
mov
cmp
sub
mov
imul
fs
pop
pop
stc
push
pop
rol
out
adc
sub
adc
sub
gs
push
adc
cmp
push
sbb
xor
popf
repz
jno
push
shll
cmp
jg
mov
mov
jmp
enter
push
mov
aaa
sub
lahf
mov
and
push
movdqa
adc
and
push
data16
inc
jnp
in
sub
sbb
push
pusha
inc
lods
bnd
pop
mov
mov
cs
cmpsb
adc
test
push
or
pop
cwtl
jns
mov
mov
test
aam
dec
xchg
add
inc
xorl
sar
push
pop
jo
pslld
fcmovnbe
or
adc
add
insl
inc
jecxz
leave
add
loopne
nop
sbb
cmc
push
rcll
dec
pop
shlb
mov
dec
adc
cmpsl
jnp
mov
loope
add
movsb
mov
dec
loop
imul
jne
cmpsl
aaa
je
or
lock
mov
je
inc
push
xor
cmpsl
test
movsb
decl
push
test
push
arpl
add
addl
xchg
fidivrs
out
push
mov
mov
xor
enter
jge
enter
movsl
out
pusha
ret
ret
xor
add
inc
iret
jmp
xchg
jb
in
mov
sub
push
or
mov
cwtl
push
xor
xlat
add
lock
nop
out
add
jp
dec
call
mov
mov
add
fmul
data16
sbb
cmp
xor
in
push
inc
mov
test
jo
mov
adc
xchg
jmp
xlat
jge
loopne
cmp
mov
pushf
pop
pop
sub
adc
inc
mov
adc
mov
scas
pop
add
stos
incb
test
cmc
xchg
sbbb
daa
dec
outsl
jbe
xor
cmp
mov
cmp
fldl
adc
push
jl
inc
loope
dec
popa
dec
leave
mov
inc
dec
cmp
daa
imul
adc
sub
mov
mov
fbld
outsl
and
mov
xor
es
das
mov
xlat
push
push
push
mov
stc
lea
pop
lret
fstps
push
addr16
dec
adc
es
sub
inc
loope
dec
cmpsb
roll
cmp
xchg
cmp
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
add
insl
