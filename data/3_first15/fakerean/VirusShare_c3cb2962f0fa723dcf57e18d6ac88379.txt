jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
dec
add
and
mov
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
adc
inc
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
or
inc
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
inc
add
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
and
add
addb
push
inc
add
add
or
lea
mov
add
mov
add
add
add
addb
adc
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
adc
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
adc
inc
add
xor
mov
push
mov
push
push
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
xor
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
or
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
push
inc
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
clc
adc
xor
cmp
je
mov
test
xor
push
inc
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
push
adc
add
ds
rolb
add
jg
inc
sub
add
je
and
and
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
push
sub
add
inc
and
or
inc
add
adc
sbb
pop
and
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
dec
sub
add
add
push
push
call
test
js
lea
lea
ds
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
xchg
push
inc
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
sbb
adc
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
lea
call
lea
call
pop
pop
pop
leave
ret
or
mov
jmp
orb
jmp
push
mov
sub
push
mov
mov
test
push
push
jne
mov
test
je
cmp
je
test
je
test
mov
jne
mov
cmp
ja
mov
mov
mov
add
cmp
mov
jae
fldl
mov
sub
fstpl
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
fldl
inc
faddl
incl
cmp
fstpl
jb
mov
test
je
mov
mov
cmpl
jne
mov
mov
mov
mov
add
push
push
mov
call
mov
cmp
ja
mov
mov
pop
pop
pop
leave
ret
test
je
jmp
test
je
jmp
cmpl
jne
push
call
test
pop
je
andl
movl
mov
mov
mov
mov
mov
mov
push
add
push
call
fldl
push
push
fstpl
pushl
lea
pushl
call
fstpl
fldl
mov
fsubl
add
mov
call
test
mov
fildl
jl
mov
fstps
lea
push
add
call
fldl
jmp
mov
jmp
push
mov
push
mov
push
mov
push
mov
mov
call
test
jne
mov
push
push
pushl
mov
andl
push
pushl
call
mov
add
mov
xor
pop
pop
pop
pop
ret
mov
call
test
je
pushl
call
test
pop
jne
push
mov
call
mov
test
jne
jmp
xor
jmp
decl
push
push
push
push
mov
push
movl
movl
movl
pop
je
push
mov
call
lea
cmp
add
xor
inc
cmp
push
call
pop
lea
call
lea
call
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
call
lea
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
lea
pop
pop
pop
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
add
lds
test
decl
or
adc
lock
incl
dec
mov
test
je
cmpb
je
mov
ret
mov
test
jne
movb
jmp
mov
call
test
je
cmpl
mov
mov
mov
je
push
lea
push
push
call
pop
test
mov
jne
movb
xor
ret
call
test
jns
jmp
push
lea
sub
mov
xor
mov
push
xor
cmp
push
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
lea
push
pushl
push
call
test
js
cmp
je
add
mov
lea
call
mov
mov
push
pushl
lea
push
call
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
lea
lea
mov
mov
movl
movl
mov
mov
call
test
js
pushl
mov
lea
push
pushl
call
testb
mov
je
mov
add
push
call
test
pop
je
lea
call
testb
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
push
mov
push
xor
push
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
lea
push
call
mov
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
test
jne
test
jne
xor
pop
pop
pop
leave
ret
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
push
mov
push
mov
cmpl
je
add
jno
adc
add
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
test
je
lea
jmp
mov
test
je
lea
jmp
push
call
test
pop
je
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
movl
xor
pop
ret
pop
movl
mov
pop
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
jmp
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
push
mov
movl
call
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
mov
mov
mov
push
mov
lea
andl
push
mov
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
lea
andl
lea
push
mov
movl
call
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
push
mov
push
push
push
mov
mov
add
cmp
push
mov
jne
xor
cmp
jg
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
add
cmp
push
mov
jne
mov
cmp
jg
add
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
mov
push
mov
push
mov
lea
mov
call
test
je
mov
andl
test
mov
je
push
call
pop
movl
push
lea
lea
call
mov
neg
sbb
and
je
mov
test
je
push
mov
call
mov
xor
pop
inc
push
lea
lea
mov
mov
call
test
je
mov
mov
testb
jne
testb
jne
cmpl
je
cmpl
je
pushl
call
pop
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
fldz
mov
fstl
sub
fstpl
fldl
bound
and
fstpl
fldl
fstpl
push
push
push
lea
push
lea
push
call
mov
xor
mov
mov
mov
mov
mov
mov
fildl
add
fmull
fstpl
call
call
mov
mov
mov
fildl
mov
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
mov
mov
fildl
fmull
fstpl
call
call
mov
mov
add
ret
fldz
push
fldl
push
fcom
fnstsw
fstp
test
jne
faddl
fstpl
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
push
call
add
cmpl
je
mov
push
call
add
mov
pop
add
ret
mov
push
push
mov
cmp
push
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
call
mov
add
pop
pop
pop
pop
add
ret
sub
jne
mov
mov
lea
push
push
movl
movl
mov
call
mov
mov
push
push
mov
call
add
jmp
dec
sbb
je
mov
push
call
mov
andl
andl
mov
mov
test
je
pushl
mov
push
call
shr
not
and
mov
mov
ret
xor
mov
mov
mov
mov
mov
mov
ret
mov
test
je
mov
andl
mov
xor
inc
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
push
push
xor
cmp
je
pop
pop
pop
leave
ret
push
mov
sub
push
mov
cmpl
je
push
movl
movl
lea
push
mov
xor
cmp
je
mov
mov
mov
cmp
je
cmp
mov
jbe
mov
movl
mov
mov
mov
mov
mov
call
mov
cmp
je
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
inc
call
decl
subl
cmpl
jne
jmp
dec
dec
jne
jmp
int3
int3
int3
mov
mov
xor
add
push
lea
cmp
je
movsbl
rol
xor
add
jmp
pop
ret
push
mov
cmp
push
mov
je
cmp
je
cmp
je
pop
xor
pop
ret
push
mov
call
mov
mov
mov
mov
push
push
call
mov
pop
add
into
add
lea
fisubs
mov
add
pop
scas
stos
fisubrl
fs
addb
push
mov
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
testl
scas
add
mov
aam
add
add
stos
lret
jo
cmpsl
add
add
arpl
xchg
add
movsl
leave
add
fcmovne
iret
outsl
call
add
pop
xchg
fisubrs
mov
add
add
rorl
popl
push
push
lea
push
push
push
push
call
add
mov
push
into
cltd
add
push
rcll
jne
add
lahf
add
add
pop
mov
add
add
in
call
push
push
lea
push
push
push
call
add
out
ljmp
lds
mov
data16
add
testl
add
popf
add
jne
add
sahf
sarb
testb
add
in
imul
add
add
loopne
add
add
lock
call
push
push
push
push
push
push
call
xchg
add
lret
push
test
ljmp
push
add
ja
add
popa
std
je
pop
scas
jecxz
mov
xchg
gs
mov
add
add
add
test
ret
addl
cmc
fcoms
xchg
cmc
add
mov
test
xchg
add
lcall
sub
add
sbb
add
push
push
lea
push
push
push
lea
push
push
call
xchg
add
push
or
push
add
xchg
add
add
add
jge
xchg
adcb
add
into
add
in
push
push
lea
push
call
push
add
cmc
pushf
add
pusha
popa
add
data16
je
ret
add
fs
hlt
int
sahf
call
add
add
add
jecxz
mov
cli
add
into
bound
out
add
out
test
pusha
les
add
call
in
clc
pop
call
jmp
push
push
lea
push
push
push
push
push
push
push
push
call
cmc
into
mov
add
add
out
leave
lock
add
arpl
in
movsl
aam
push
call
push
out
add
int3
add
stc
stos
add
fidivs
fcomip
stos
add
rcr
lea
cmpsl
add
pop
add
mov
add
sub
pop
ret
push
push
push
push
push
push
lea
push
call
add
add
jo
add
add
add
test
add
mov
mov
add
lahf
fildl
mov
pop
add
pop
filds
lcall
add
xchg
mov
add
add
pop
sub
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
call
scas
popf
jl
jle
mov
into
push
pusha
add
popf
add
mov
jne
add
add
cli
jbe
xchg
push
add
add
add
push
mov
int3
xchg
std
push
push
mov
xchg
int
test
pop
xlat
xlat
add
movsb
add
scas
roll
push
add
add
add
add
add
sub
pop
add
push
push
push
lea
push
lea
push
push
push
call
jp
cwtl
mov
mov
negl
add
js
pop
pushf
enter
jmp
rcr
add
add
sub
pop
add
add
push
push
lea
push
push
push
call
arpl
lret
mov
add
faddl
stos
push
add
add
xlat
fldenv
add
aad
hlt
cmpsl
jno
add
out
push
fadds
add
add
arpl
mov
iret
add
add
add
enter
jecxz
sub
pop
mov
xor
push
push
inc
inc
push
xor
add
inc
sub
inc
pop
sub
xor
pop
push
lea
push
push
lea
push
lea
push
push
call
jle
roll
rcr
add
add
mov
add
stos
loope
std
add
mov
stc
xacquire
add
push
sahf
add
add
mov
jne
call
push
push
push
push
push
push
push
push
call
xchg
add
pop
outsl
add
mov
shrb
add
std
je
imul
mov
add
fldenv
add
add
add
insb
add
add
pusha
in
add
scas
jne
add
lock
xchg
test
scas
ja
fldt
addl
call
push
lea
push
lea
push
lea
push
lea
push
push
push
call
shlb
add
add
mov
jno
add
add
movsl
mov
add
add
add
sub
pop
lea
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
xorb
iret
out
scas
mov
mov
stc
xchg
ljmp
fidivrs
add
mov
iret
pop
pusha
add
into
mov
add
int3
enter
add
add
add
add
add
jo
int3
add
loop
lock
in
add
add
push
fidivrl
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
xchg
mov
pop
add
mov
add
mov
add
add
mov
add
sarb
mov
xchg
lods
les
ror
add
add
movl
add
add
movsb
add
add
aam
xchg
add
mov
call
mov
shll
push
mov
sub
pop
pushl
push
lea
push
push
push
lea
push
lea
push
call
add
stos
ficoms
add
mov
xchg
jecxz
jmp
add
lahf
add
mov
test
iret
mov
shll
add
push
push
jbe
lret
sti
add
outsl
sub
pop
pushl
push
push
call
add
nop
add
add
imul
add
add
add
add
pop
jb
add
add
addl
pop
mov
rolb
in
out
cmc
add
jge
std
leave
clc
add
add
add
add
add
pop
fcompl
add
jb
xchg
jnp
push
mov
jp
add
sub
pop
call
push
push
push
lea
push
push
lea
push
call
xchg
jb
add
fwait
add
add
incb
mov
fs
add
ja
add
add
sub
pop
pushl
push
push
push
push
push
lea
push
push
call
add
mov
add
push
fiadds
add
add
add
mov
addl
xlat
pop
pop
fildl
add
in
lcall
jne
call
push
push
rol
push
xor
add
add
sub
shr
inc
pop
shl
ror
pop
push
lea
push
push
call
xchg
add
add
add
scas
cli
add
arpl
bound
xchg
clc
popa
lods
jge
in
add
mov
push
add
add
jmp
add
fsubs
movsl
add
add
xchg
out
out
test
fyl2xp1
add
add
jne
push
push
call
cmpsl
fsubs
add
cltd
scas
xchg
fimuls
add
xlat
add
pop
add
add
jns
mov
hlt
out
add
pop
pusha
sahf
add
into
pop
mov
mov
jge
scas
add
lret
pusha
jp
add
add
mov
lea
ficomps
test
mov
in
clc
lcall
mov
add
push
push
push
call
add
push
jp
xchg
iret
jns
mov
lock
jle
add
add
les
adc
add
add
xchg
in
add
insb
xchg
add
movsl
add
test
insb
scas
xchg
mov
iret
add
xlat
add
add
negb
push
mov
mov
add
lcall
inc
push
push
not
push
and
add
dec
sub
add
inc
not
pop
shl
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
leave
add
add
ja
push
mov
data16
test
leave
shrb
add
add
mov
add
pop
mov
pop
shl
jne
sub
pop
push
push
push
push
push
push
push
push
push
call
add
fstps
add
add
idivl
decb
add
mov
int3
imul
xorl
mov
mov
mov
stos
cld
sbbb
xchg
addb
add
lcall
stos
add
add
je
scas
push
push
call
insb
add
pop
mov
add
add
mov
add
add
jl
les
in
add
add
add
enter
imul
jb
mov
rclb
add
sub
pop
call
push
push
push
push
call
add
lock
jecxz
xchg
add
add
iret
mov
push
clc
mov
add
test
lock
mov
push
push
push
push
push
lea
push
push
push
push
push
call
data16
add
div
fadds
add
pop
push
add
mov
aad
pop
popl
imul
rcr
lahf
aad
add
lods
loop
roll
add
hlt
mov
add
add
add
jns
cwtl
mov
pusha
out
add
jp
movsl
sub
pop
push
mov
push
push
push
push
push
call
add
add
mov
add
mov
add
add
imul
loope
fiaddl
fldenv
nop
in
add
add
add
pop
in
add
push
push
call
mov
scas
test
bound
add
add
push
lods
js
add
add
add
add
jno
fmulp
sub
pop
add
push
push
call
je
jae
fldl
call
mov
mov
add
add
popf
repnz
add
add
xchg
pop
cld
add
mov
lret
repnz
push
popa
out
mov
jo
mov
pop
popl
popf
mov
xchg
xlat
aam
mov
mov
add
gs
rclb
mov
xor
push
lea
push
push
push
lea
push
call
add
mov
fadds
js
ret
add
leave
hlt
add
add
and
mov
stos
add
loopne
hlt
push
xchg
add
mov
pusha
jecxz
add
add
out
add
mov
add
js
pop
xchg
mov
fisubrs
mov
add
int3
add
pop
xchg
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
push
push
call
xorb
int
xchg
addr16
in
jb
icebp
addb
add
mov
shlb
gs
cld
fdivrl
add
xchg
push
push
add
push
jnp
add
push
lods
cltd
in
xchg
iret
add
pop
mov
xor
push
lea
push
push
push
lea
push
call
add
add
icebp
xchg
add
add
in
jo
add
imul
sahf
push
pop
add
add
add
push
in
pop
add
pop
push
push
call
add
add
ror
mov
cmpsl
cmpsl
fdivrl
jno
mov
mov
loopne
add
add
lock
add
movsl
add
add
add
je
arpl
std
push
xchg
add
dec
add
test
push
push
lea
push
lea
push
push
push
push
call
js
repnz
mov
into
movsl
ror
jb
jge
jge
add
jns
into
lea
xlat
add
add
add
fs
add
in
mov
shlb
int3
rolb
add
add
push
add
add
gs
call
stos
iret
lahf
sub
pop
xor
push
push
push
push
push
push
call
add
xchg
jle
ljmp
mov
xchg
mov
mov
cltd
add
bound
cmc
push
xchg
push
in
in
call
add
push
push
call
pop
outsl
add
jle
popa
in
scas
insb
add
add
test
loopne
jbe
push
mov
jbe
add
add
jge
mov
lock
aam
fisubs
fiadds
fistl
lcall
mov
push
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
into
jge
imul
push
lcall
loopne
bound
add
add
addl
sti
add
jne
jl
pop
lock
xchg
add
mov
mov
cmc
add
pop
lds
stos
add
pop
add
mov
lcall
add
push
lea
push
push
push
call
add
add
add
add
stc
testb
mov
add
push
lock
mov
nop
cwtl
scas
cli
add
add
jbe
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
ror
out
cli
push
mov
jo
add
mov
add
lock
scas
subb
add
mov
add
add
push
add
add
lods
mov
hlt
pop
les
add
scas
sti
add
fildl
sahf
add
enter
push
lea
push
lea
push
push
call
iret
add
pusha
rcrb
mov
into
add
test
stos
test
mov
pop
rcll
pop
jae
in
addl
add
std
lea
stos
in
cmpl
push
mov
out
fiadds
mov
add
call
pop
rep
push
push
lea
push
lea
push
call
add
mov
add
roll
mov
add
iret
out
mov
cmpsb
jmp
loopne
ja
add
mov
in
lock
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
addb
add
jno
movsl
fiaddl
scas
mov
mov
insb
subl
lret
jle
add
lcall
pop
hlt
add
push
push
push
push
push
push
push
push
call
rclb
add
mov
clc
xchg
hlt
xchg
fiadds
addr16
loope
hlt
pop
mov
add
mov
sahf
add
fwait
clc
push
add
add
add
xchg
add
out
xchg
lods
mov
add
cmpsb
mov
ret
sub
pop
add
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
cltd
add
in
push
clc
mov
push
test
in
add
add
push
lock
flds
add
lds
mov
jno
add
xchg
add
lcall
ret
xor
push
push
push
push
lea
push
push
push
call
mov
out
add
adcb
testl
pop
xor
jl
add
add
mov
fiadds
inc
and
pop
jae
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
xchg
push
lret
mov
add
add
add
jmp
jp
add
add
pop
rorb
fists
add
push
xchg
add
mov
in
mov
add
add
jge
in
fcompl
add
push
push
lea
push
push
push
push
call
fs
enter
mov
js
add
fnstsw
add
outsl
bound
add
xchg
add
mov
arpl
add
stos
push
mov
mov
push
push
mov
mov
in
call
add
add
loop
push
push
xchg
push
push
lea
push
push
call
xchg
mov
add
test
add
jge
mov
stos
add
mov
push
bound
jo
lahf
add
ljmp
in
add
add
into
add
and
in
xorl
lcall
push
and
test
push
push
push
push
call
add
lds
add
fadds
add
add
mov
mov
stos
add
add
jo
std
fildl
add
rolb
add
call
add
add
cld
jno
mov
sub
pop
xor
push
push
push
push
call
mov
sarb
add
xchg
testl
cmpsl
add
mov
add
add
arpl
divb
mov
jle
iret
add
jle
add
jb
add
add
mov
add
jp
mov
cltd
mov
lcall
les
add
push
push
push
push
push
call
xchg
lds
clc
push
xorb
pop
jnp
stc
mov
addb
cmpsl
add
add
adc
mov
add
mov
nop
ret
mov
jo
mov
int3
fsubrl
xchg
mov
clc
popa
add
in
lcall
dec
sub
push
push
pop
add
add
push
lea
shr
pop
mov
push
push
dec
inc
inc
add
push
push
pop
add
xor
sub
lea
inc
pop
rol
sub
pop
push
push
lea
push
lea
push
lea
push
call
fiadds
add
lahf
push
mov
add
cld
rorb
mov
xchg
pop
lret
add
lahf
pop
xchg
loop
sub
pop
pushl
push
push
lea
push
push
call
add
push
mov
pop
fs
add
add
xchg
mov
gs
add
call
enter
jp
add
add
mov
add
mov
cwtl
sub
pop
call
push
xor
add
sub
dec
pop
push
push
push
sub
dec
sub
add
push
or
inc
add
sub
sub
sub
xor
pop
dec
pop
push
shr
dec
shr
pop
push
push
shr
dec
pop
push
call
push
lea
pop
mov
push
push
push
call
enter
mov
add
xchg
cmc
ret
mov
pop
add
lea
add
add
scas
sub
pop
push
push
not
pop
mov
push
push
lea
push
call
push
lcall
test
jle
mov
add
add
add
aad
rolb
add
gs
pop
aam
xchg
xor
scas
mov
aad
popf
rorb
stos
loope
add
xchg
push
add
add
add
jp
roll
add
lahf
add
xlat
pop
mov
jno
mov
out
mov
in
hlt
lcall
pop
in
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
push
sti
push
mov
pop
add
xchg
in
jne
out
lds
xchg
xchg
mov
mov
cmpsl
add
mov
pop
add
push
push
push
push
call
push
gs
lret
add
adcb
xchg
addb
add
pop
iret
lcall
test
pop
mov
add
add
mov
shll
add
mov
lock
lcall
lods
loope
cmc
jecxz
les
jmp
push
add
lcall
ret
xor
mov
push
push
push
call
in
mov
iret
xchg
mov
push
movsl
add
test
addl
lock
lods
cwtl
push
push
data16
mov
mov
testb
add
add
mov
stos
fcomi
pop
adcl
in
clc
lcall
xor
push
push
push
lea
push
push
call
arpl
mov
add
add
rolb
mov
ffree
jne
cld
push
nop
add
push
clc
jno
add
mov
out
add
add
les
add
push
lea
push
call
outsl
add
add
lret
mov
add
add
ljmp
jb
add
xchg
push
add
xchg
mov
mov
jecxz
add
add
out
pusha
ja
sub
pop
add
push
lea
push
lea
push
push
lea
push
push
push
call
out
add
cmpsl
push
jns
cltd
add
jle
mov
jp
mov
add
pusha
cltd
push
add
mov
ja
test
xchg
add
js
add
cli
add
test
add
sub
pop
push
push
lea
pop
mov
push
push
push
lea
push
call
xchg
mov
incb
add
add
add
add
test
fiadds
out
xchg
add
add
pusha
outsl
shll
les
add
lock
add
jp
push
push
add
add
mov
in
int
clc
test
fstp
in
add
sub
pop
xor
push
push
call
add
mov
add
stos
add
mov
add
idiv
mov
lods
mov
icebp
ficomps
add
data16
rol
popl
lea
add
sub
pop
add
push
push
lea
push
call
jns
lods
add
cmpsl
add
push
add
pop
stos
add
add
gs
add
mov
out
mov
lahf
push
add
mov
add
add
imul
mov
add
hlt
add
add
lock
push
lea
push
push
push
call
mov
mov
mov
add
clc
insb
rclb
pop
leave
mov
mov
addr16
add
in
add
add
lcall
dec
and
push
push
push
lea
push
push
push
push
call
cmpsb
add
add
mov
push
add
insb
sti
test
add
in
mov
loope
lret
add
add
scas
add
jmp
push
lahf
pop
fcmovnb
or
in
call
rol
sub
shr
dec
pop
mov
xor
push
push
push
call
add
in
cltd
iret
test
repnz
loopne
orb
sahf
lods
add
mov
add
int
stc
imul
test
data16
add
rolb
fists
push
mov
enter
in
hlt
lcall
leave
je
push
ror
sub
lea
not
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
call
std
mov
jnp
add
nop
add
fistl
push
mov
jle
add
jnp
add
arpl
std
add
mov
add
rolb
add
add
ljmp
lcall
xor
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
insb
out
in
les
jl
stos
jno
scas
fiadds
cli
add
add
movsb
roll
je
add
add
imul
ret
sub
pop
add
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
mov
add
into
add
sar
xchg
mov
sti
add
add
add
insb
fwait
add
out
add
into
sahf
add
fiaddl
push
sbb
push
push
push
push
push
lea
push
push
push
push
call
pop
mov
push
aam
stos
add
xchg
lds
lret
out
add
into
ljmp
int3
fstl
scas
add
mov
add
call
mov
pop
add
add
push
lea
push
push
push
push
push
push
push
call
add
cmpb
add
add
add
movsb
popa
outsl
mov
lea
stos
add
add
add
jns
add
mov
out
iret
sub
pop
push
push
lea
push
lea
push
lea
push
push
call
push
add
decb
add
mov
add
add
add
ljmp
jo
pop
mov
jmp
shrb
add
imul
add
inc
or
pop
jae
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
out
imull
add
jno
add
adc
sbbl
add
sahf
mov
out
add
mov
lods
mul
out
mov
popl
lcall
add
push
push
push
call
add
jae
mov
add
je
add
jb
fstpl
add
mov
outsl
add
push
test
in
lea
add
add
cmc
add
sti
pop
xchg
add
fiadds
add
jle
mov
pop
add
push
not
pop
add
pop
push
push
push
push
lea
push
lea
push
call
in
fwait
push
into
imul
mov
add
cmpsl
fcmovnb
jns
jbe
add
add
rcrb
loop
mov
jmp
into
add
add
pop
test
add
cmpsl
xchg
movsl
add
add
rolb
mov
jae
add
call
rep
mov
xor
push
lea
push
push
push
call
add
imul
pop
add
pop
call
out
add
clc
repnz
roll
add
mov
or
add
lds
jge
mov
sub
pop
or
je
push
add
pop
mov
push
push
push
lea
push
call
push
mov
cld
add
mov
add
add
pushf
add
xchg
add
add
jge
sahf
lret
xchg
add
add
push
pushf
add
add
fcomi
add
ficoms
fwait
xchg
add
pop
add
add
je
test
add
add
mov
push
sub
pop
add
add
push
add
xor
pop
rep
push
push
push
push
call
mov
in
add
in
add
add
push
popl
add
add
add
ret
add
jge
cltd
add
xchg
shr
call
add
mov
in
lock
lcall
push
push
add
lea
add
rol
push
or
inc
add
sub
sub
sub
sub
pop
ror
sub
pop
push
inc
shr
xor
lea
pop
pop
push
push
call
lcall
add
add
add
add
mov
add
int3
mov
int
fyl2xp1
rolb
add
add
add
xchg
scas
add
aam
add
in
clc
pop
mov
mov
push
add
ror
sub
xor
pop
mov
push
lea
push
push
lea
push
push
push
call
jmp
add
add
push
add
iret
in
cli
add
add
add
fisubrs
mov
add
add
xorl
test
add
pop
jo
in
loopne
loope
sub
pop
jmp
push
push
call
icebp
shll
add
add
in
outsl
cwtl
sarb
add
iret
pop
pusha
popf
mov
add
add
pop
push
add
add
add
addb
fiaddl
ffree
leave
add
pop
add
add
mov
push
xchg
rolb
leave
test
jmp
add
lcall
push
lea
shr
pop
mov
push
not
pop
add
push
add
pop
push
push
inc
xor
dec
pop
push
push
xor
rol
pop
push
push
push
push
push
push
push
lea
push
call
xchg
add
add
sti
scas
add
iret
jcxz
fs
push
add
stos
mov
add
add
add
popf
add
lock
stos
jnp
movsl
add
sti
mov
add
mov
ficoms
movsb
jne
jne
hlt
add
jae
pop
shl
add
mov
xchg
gs
incb
add
in
call
mov
push
push
push
call
mov
loopne
push
push
clc
nop
add
imul
add
mov
add
add
add
mov
xchg
add
rcll
mov
lods
rcr
cld
pop
jecxz
stos
in
add
mov
add
lcall
pop
push
push
lea
push
push
push
push
push
push
push
push
call
scas
lock
mov
aam
add
jbe
add
pop
aad
xlat
mov
push
add
add
add
add
xchg
movsl
aad
mov
add
pop
add
add
mov
add
loope
pop
sbb
out
jae
add
add
add
add
add
add
leave
add
pop
push
xor
pop
pop
push
ror
inc
pop
leave
push
ror
shl
pop
ret
push
push
ror
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
scas
add
add
add
add
mov
bound
std
add
jo
mov
popa
add
mov
add
jns
add
addr16
add
outsl
int
jl
add
out
sub
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
add
test
xchg
roll
scas
add
add
jae
add
lock
cli
add
add
add
add
addl
push
shr
shr
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
sti
loope
add
add
nop
add
std
jge
mov
mov
lret
xchg
mov
addr16
out
pushf
fistpl
mov
add
add
push
add
jo
jmp
outsl
imul
in
xlat
add
mulb
lcall
inc
cld
add
add
push
ror
pop
addl
push
inc
rol
pop
test
je
push
xor
inc
xor
pop
mov
push
dec
shr
sub
pop
pop
push
rol
pop
pop
pop
push
push
push
push
push
push
lea
push
call
add
notb
add
fldl
ljmp
add
movsl
add
push
add
add
fldt
lcall
leave
push
lea
push
call
add
fildl
lea
andl
testl
add
add
add
add
add
movsl
lret
loop
mov
stos
add
add
jmp
cmc
out
push
mov
add
push
xchg
xchg
add
xchg
add
sub
pop
ret
push
push
add
lea
inc
pop
mov
push
sub
pop
add
push
lea
lea
pop
push
push
push
push
push
push
push
push
push
call
fadds
mov
add
lock
lahf
movsb
add
sar
add
and
mov
movsb
add
sahf
mov
xchg
les
add
pop
push
push
lea
pop
push
push
push
push
call
add
pop
enter
add
lret
add
mov
lods
add
jae
lret
shll
shll
sub
pop
push
testl
push
not
sub
pop
addl
push
push
push
push
lea
push
lea
push
push
call
add
pushf
test
mov
test
add
ja
add
mov
add
leave
in
into
data16
fs
add
fs
jp
add
add
ljmp
add
cmpsl
testb
add
jb
roll
add
mov
lcall
test
call
flds
call
test
jae
call
xchg
out
add
add
add
jo
add
flds
cmp
cli
add
sub
pop
mov
pushl
push
push
call
rcr
orl
mov
pop
shlb
add
add
add
add
add
bound
js
mov
icebp
test
out
arpl
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
lahf
aad
xchg
add
nop
mov
add
add
jno
loope
imul
fmull
nop
add
add
lods
js
add
cli
add
lret
jp
sub
pop
call
push
shl
dec
pop
cmpl
jne
push
push
push
lea
push
call
test
addr16
cltd
jge
shll
add
add
add
mov
cmpsb
xchg
imul
insb
jbe
repnz
incb
lcall
push
shr
not
shl
dec
pop
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
add
xlat
jbe
je
mov
xchg
clc
add
add
in
add
rclb
lcall
insb
out
bound
test
add
jl
add
jae
pushf
loope
lea
jp
stos
mov
mov
add
in
fcompl
push
push
push
call
add
push
lock
jge
add
add
add
add
lahf
add
adc
aam
push
rcr
add
pop
popa
xchg
pop
add
in
add
add
pop
add
mov
lods
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
pop
testl
mov
in
xchg
bound
add
test
andl
cmc
mov
mov
add
add
pop
scas
sub
mov
jge
sarl
push
inc
sub
pop
ret
push
push
not
sub
ror
pop
mov
push
lea
push
push
push
push
call
js
out
add
jbe
jge
sbbb
add
add
add
fldl
add
stos
xchg
cltd
add
subb
in
in
pop
add
push
push
call
add
rol
add
add
mov
add
jno
add
fwait
add
jmp
sub
pop
push
push
push
push
push
lea
push
call
add
add
jmp
add
add
jp
mov
add
movsl
jnp
fcoms
shrb
clc
mov
mov
mov
testl
add
in
add
sub
pop
push
push
push
push
lea
push
call
mov
add
and
fdivrl
hlt
push
leave
cltd
xor
add
popa
in
add
in
ror
add
addl
in
hlt
pop
movl
push
push
lea
push
push
push
push
push
push
push
call
popl
xchg
icebp
movsl
addb
outsl
insb
add
in
mov
add
add
lds
add
pop
ror
add
add
jo
add
pop
test
out
jb
add
cli
pop
push
add
mov
les
out
add
add
ret
add
popf
xchg
add
add
mov
gs
mov
sub
pop
push
push
push
push
push
push
call
cmpsb
add
add
push
jbe
cltd
add
add
ljmp
add
add
add
mov
add
add
xchg
xchg
cld
add
add
fadds
cli
rcrb
add
add
add
test
push
add
out
lods
push
add
lcall
lcall
mov
ljmp
push
push
push
push
call
add
mov
xchg
xchg
leave
mov
loopne
push
add
mov
movsl
add
les
add
jnp
jl
pop
call
loope
iret
push
cmpsl
add
jb
push
stc
add
mov
sarl
add
add
add
popf
push
mov
add
sub
pop
call
push
lea
shl
pop
subl
push
pop
cmpl
jne
push
shl
pop
pop
push
lea
not
pop
pop
push
push
call
add
ljmp
push
add
jp
test
add
mov
mov
jmp
add
imul
add
push
mov
ror
add
xchg
push
add
add
mov
in
clc
lcall
push
push
push
push
lea
push
call
mov
add
push
shlb
fcomps
shlb
add
je
mov
add
insb
push
jns
add
lods
mov
imul
push
add
add
add
xlat
jae
mov
add
lret
testl
lahf
sub
pop
pop
push
lea
push
push
call
add
xchg
in
lods
mov
imul
push
into
aam
incb
fnstsw
pop
lahf
ljmp
fcmove
mov
mov
rolb
xchg
fisubl
popa
add
sub
mov
add
add
push
xchg
push
jns
roll
ja
in
mov
add
aad
add
mov
add
int
add
lcall
ret
push
not
pop
push
mov
push
lea
push
lea
push
lea
push
call
add
jmp
pop
mov
mov
incb
mov
lds
add
add
aad
add
icebp
stos
int3
xlat
add
jo
sub
pop
add
push
push
push
push
push
call
push
add
sti
rcl
add
mov
insb
push
mov
in
add
test
add
std
mov
add
add
push
push
add
popf
test
in
fiaddl
sub
pop
push
push
push
lea
push
call
xchg
mov
mov
mov
xchg
movsb
in
add
add
add
add
xchg
push
ljmp
rclb
fiaddl
mov
add
add
add
jl
in
hlt
pop
push
push
push
call
filds
jle
add
lds
mov
outsl
jne
mov
add
push
fdivr
cmpsb
xchg
jmp
mov
add
int
in
xchg
jl
addl
cmpsb
test
leave
ja
add
in
clc
pop
push
mov
push
push
push
lea
push
call
rcll
sti
mov
add
jge
xchg
data16
movb
lods
add
test
addb
add
pop
mov
pop
addl
add
jge
out
add
add
pop
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
pusha
add
gs
xchg
add
add
movsb
popf
add
push
mov
add
add
add
add
repnz
repnz
mov
add
ret
jp
les
les
add
add
leave
add
sub
pop
sub
push
push
call
add
add
addb
pop
mov
add
out
enter
stos
add
fildll
js
mov
add
add
xchg
xchg
xorl
pop
push
divl
mov
loope
xchg
add
jne
add
jno
mov
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
jne
add
mov
iret
lret
add
add
push
add
les
stc
in
js
xchg
add
lock
add
ljmp
add
call
lock
icebp
rcrb
inc
or
inc
cld
push
xor
shr
sub
rol
pop
mov
push
dec
ror
pop
add
push
lea
sub
shl
add
pop
add
mov
push
push
push
push
lea
push
lea
push
call
add
push
jl
fcmovne
leave
xchg
add
movsl
add
xchg
cld
add
imul
scas
add
jnp
cmc
add
add
jl
movb
pop
add
lret
add
jle
add
pop
mov
push
add
pop
cmp
jne
cmp
jne
push
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
push
call
push
push
lods
jmp
add
movsl
jne
add
ja
add
mov
mov
in
lret
add
cmpb
cltd
sti
cmc
add
add
hlt
add
add
pop
fistl
pop
movl
push
not
shl
pop
jmp
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
stos
test
add
scas
mov
add
add
scas
bnd
test
fnstenv
test
add
imul
jle
add
jecxz
mov
xchg
add
xchg
xchg
cwtl
js
sarl
add
repnz
imul
pop
sub
pop
mov
mov
push
pop
sub
jne
push
push
lea
push
push
push
push
call
add
mov
data16
add
shrl
addr16
loope
jbe
fistpll
add
in
pop
xchg
add
iret
addl
add
idivb
add
add
add
add
in
call
push
rol
pop
movl
jmp
push
push
push
push
lea
push
push
push
push
push
call
rolb
add
add
add
add
addb
cwtl
movsl
jle
jbe
jmp
add
pop
add
test
xchg
imul
add
add
add
cmpsl
rcl
xchg
add
mov
lcall
inc
cld
push
push
push
push
push
push
push
push
call
iret
add
add
lahf
pop
add
xchg
pop
repnz
cmpsb
lods
add
call
add
add
mov
push
push
in
add
add
in
pop
in
sub
pop
mov
push
dec
sub
pop
cmp
jne
push
push
push
push
push
push
call
xchg
add
lods
xchg
add
hlt
add
popa
loopne
sbbl
sahf
nop
out
fildl
add
add
nop
add
add
mov
add
out
mov
pop
mov
movl
push
add
rol
pop
jmp
push
push
push
lea
push
push
push
push
call
mov
add
outsl
sti
add
add
notb
xchg
stos
add
mov
imul
leave
shrb
sub
pop
mov
push
push
push
call
in
add
test
pop
out
jge
aad
add
add
add
jne
push
mov
add
add
jb
cwtl
add
loope
out
add
add
cwtl
sub
pop
cmpw
jne
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
in
add
add
push
scas
popl
add
add
cwtl
je
add
mov
add
sti
stc
add
popa
add
leave
stc
iret
ljmp
popa
add
imul
add
push
add
push
add
pushf
addb
add
inc
pop
jmp
push
xor
pop
pushl
push
push
push
call
add
xchg
testl
jb
add
xchg
divl
jl
jge
add
jne
fidivrs
ret
add
add
movsl
mov
sub
in
add
in
xchg
bound
in
hlt
pop
pop
push
sub
shl
inc
pop
mov
push
push
push
lea
push
lea
push
lea
push
call
mov
aad
mov
add
std
int3
cmpsl
xchg
jmp
mov
add
add
add
add
movsl
add
mov
popf
stos
add
mov
mov
lea
mov
in
call
mov
push
dec
pop
mov
push
push
add
push
and
add
sub
shl
inc
pop
dec
lea
dec
pop
push
inc
rol
rol
sub
pop
push
call
push
sub
pop
cmpl
je
push
push
shr
add
ror
push
xor
add
ror
lea
inc
sub
rol
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
lcall
test
int
push
mov
jp
add
fistl
xchg
std
in
shr
cli
jae
pushf
clc
add
enter
jp
mov
addr16
add
add
xchg
test
add
loopne
lcall
call
push
lea
add
pop
cmpl
je
push
push
push
xor
add
dec
rol
add
sub
sub
xor
xor
sub
pop
add
pop
push
push
push
lea
push
call
mov
scas
jle
jnp
add
lcall
test
rcl
movsb
jmp
jbe
test
add
lock
push
push
shl
pop
call
cmpl
je
push
push
not
sub
push
or
not
add
sub
sub
pop
dec
inc
inc
pop
push
add
shr
pop
push
call
push
push
push
push
push
call
popl
add
add
fs
mov
faddl
push
add
add
jae
push
fadd
add
sti
add
sahf
aam
xlat
cmc
add
add
add
cmp
add
int3
je
push
push
ror
lea
push
or
not
add
shr
sub
add
shl
sub
pop
dec
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
add
add
gs
int
add
popa
add
shr
pop
add
fidivrs
add
popa
fucomp
out
lods
jb
jnp
fildl
mov
push
push
lea
push
push
call
add
jb
cmc
add
decb
into
loope
add
push
push
add
add
pop
add
add
add
add
lahf
mov
sub
pop
call
push
push
push
push
lea
push
call
mov
add
rol
add
add
lods
ret
mov
add
push
insb
testl
add
shll
add
scas
xchg
in
pop
cmpl
je
push
push
sub
ror
add
push
and
add
sub
not
xor
pop
pop
push
not
ror
add
pop
push
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
out
test
test
les
xlat
out
add
mov
bound
mov
data16
imul
pop
xchg
out
stc
test
add
pusha
movb
mov
arpl
enter
add
jae
add
add
push
add
fcomps
fidivrs
add
push
sub
sub
lea
inc
pop
cmpl
je
push
push
add
push
push
pop
add
dec
dec
xor
sub
lea
pop
sub
rol
sub
pop
push
lea
push
lea
push
push
push
push
call
mov
add
jno
pusha
xchg
mov
jl
lcall
mov
push
mov
add
movsb
add
sub
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
xchg
add
loop
into
jns
sahf
mov
add
add
js
add
icebp
xlat
or
add
push
fiaddl
std
popa
sub
pop
call
cmpl
je
push
push
sub
add
sub
push
or
not
add
ror
sub
not
inc
pop
shr
pop
push
not
add
ror
pop
push
push
push
push
push
push
push
push
push
call
call
aam
lcall
stos
sbbb
ljmp
push
mov
jmp
add
add
adcl
addl
mov
leave
mov
test
mov
sub
pop
call
cmpl
je
push
push
sub
push
or
not
add
add
add
sub
add
pop
lea
sub
pop
push
sub
sub
xor
xor
pop
push
push
shr
ror
dec
not
pop
call
cmpl
je
push
push
not
push
push
pop
add
shl
sub
dec
not
pop
add
pop
push
lea
push
push
push
push
push
push
push
call
fsts
pop
add
add
add
add
in
xchg
add
add
add
shrb
leave
scas
xlat
add
add
jp
in
loopne
push
call
push
xor
pop
cmpl
je
push
push
dec
add
push
or
not
add
xor
add
shl
sub
rol
lea
pop
rol
sub
add
inc
pop
push
not
not
pop
push
call
push
push
push
lea
push
push
lea
push
push
push
push
push
call
push
push
add
add
add
in
mov
add
xchg
fildl
cwtl
add
insb
add
test
cmpl
je
push
push
push
or
inc
add
add
sub
rol
pop
lea
rol
pop
push
xor
xor
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
jmp
add
add
shlb
mov
clc
add
in
add
fidivrs
in
add
lahf
repnz
push
jbe
mov
add
add
cmp
mov
test
add
push
jb
pop
add
jne
sub
pop
call
cmpl
je
push
push
sub
push
push
pop
add
lea
sub
sub
pop
dec
pop
push
xor
add
lea
pop
push
call
push
inc
not
sub
pop
cmpl
jne
push
lea
push
push
push
push
push
call
push
add
add
arpl
outsl
add
shll
loopne
add
add
add
add
add
sub
pop
mov
push
rol
rol
pop
movl
push
rol
pop
jmp
xor
push
push
push
push
push
push
push
call
add
xchg
jmp
add
add
pusha
xchg
mov
cmc
add
add
sahf
pop
mov
lea
add
roll
add
or
xchg
imul
add
push
add
add
sub
pop
pop
push
shr
dec
pop
pop
push
lea
push
call
add
xchg
add
push
fadds
jnp
je
iret
add
mov
imulb
add
pop
add
push
scas
pushf
loop
xchg
add
sub
pop
pop
push
push
push
push
push
push
call
add
filds
add
add
pop
ja
add
add
aad
clc
add
stos
add
lahf
add
xchg
pop
add
add
add
in
add
push
add
testl
add
enter
les
xchg
add
out
sub
pop
leave
ret
push
push
lea
push
push
push
lea
push
push
call
add
jle
add
pop
imul
pop
jle
rolb
sbb
push
add
add
mov
add
into
xchg
push
add
addb
mov
add
add
in
push
push
lea
push
push
push
call
add
add
hlt
add
lock
add
add
mov
add
push
mov
add
add
lock
in
push
push
push
lea
push
push
push
push
call
xchg
in
add
add
add
rcrb
add
add
mov
testb
lahf
add
add
fiadds
bound
add
add
mov
mov
add
mov
mov
add
add
loope
mov
in
in
lcall
in
cmpl
jne
push
push
shr
push
and
add
add
add
sub
shl
add
pop
add
sub
pop
push
shl
not
pop
pushl
push
lea
push
lea
push
call
fmul
jbe
add
lret
mov
add
pop
pop
std
mov
add
add
push
movsb
int3
mov
testl
jmp
add
test
rcll
lret
fnsave
jno
mov
leave
fisttpll
mov
in
hlt
lcall
cmpsb
xor
add
push
add
pop
call
jmp
push
dec
rol
rol
shl
pop
cmpl
je
push
push
lea
push
lea
push
push
push
push
push
push
call
loope
add
add
add
stos
add
std
add
add
out
lret
shr
xchg
popa
scas
add
xchg
lods
jl
jmp
jne
lock
add
movsb
cltd
add
lcall
jge
add
add
leave
push
not
pop
add
push
lea
push
push
call
add
not
aam
lahf
push
push
sti
add
lock
pop
shll
jns
sar
lahf
add
sub
pop
pop
pop
push
push
push
call
mov
add
xchg
out
add
addb
add
in
xchg
flds
add
add
loope
fwait
add
cmc
roll
ja
testb
iret
add
push
mov
add
add
pop
popf
loope
test
jl
add
mov
fwait
mov
sub
pop
pop
push
add
dec
pop
pop
push
push
lea
push
push
push
push
call
addb
aad
add
add
out
insb
cltd
hlt
add
add
addr16
add
add
push
into
mov
add
mov
push
mov
add
stc
les
add
xchg
add
mov
ja
add
add
call
leave
push
add
dec
pop
add
push
lea
push
push
push
push
call
test
mov
add
add
add
arpl
sti
fiadds
cli
sahf
jmp
mov
fsubs
flds
pusha
test
xchg
add
add
add
gs
subl
push
jno
add
add
lahf
popa
mov
add
pop
add
in
pop
ret
push
rol
rol
shr
pop
jmp
cmpl
jne
push
push
rol
ror
push
and
add
xor
sub
add
xor
sub
sub
sub
sub
pop
pop
push
add
add
pop
pushl
push
push
push
push
push
push
push
push
call
add
out
aam
add
add
add
add
out
xchg
add
shl
in
nop
add
jae
cli
pop
popf
add
add
add
into
xchg
add
add
add
jl
add
add
mov
int
fiaddl
mov
fbld
add
add
add
cltd
sub
pop
call
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
call
push
jle
cltd
stos
xchg
mov
jb
add
in
add
leave
mov
add
xchg
fnstsw
into
add
ljmp
outsl
mov
scas
add
add
mov
jp
cwtl
fldenv
add
popf
add
imul
test
mov
pop
call
push
push
push
push
lea
push
push
push
call
mov
add
lds
imul
mov
add
add
add
xchg
xlat
ljmp
mov
call
mov
fadds
cwtl
out
add
add
mov
bound
enter
mov
repnz
add
add
add
jne
imul
add
int3
pop
add
push
lea
push
push
push
push
push
call
add
add
pushf
arpl
pop
js
nop
imul
out
flds
add
add
add
xchg
add
mov
rcl
call
add
sub
pop
cmpl
jne
mov
push
push
push
lea
push
push
push
push
push
push
call
xlat
mov
push
pop
jae
add
jle
mov
add
mov
push
scas
add
add
int3
add
pop
mov
push
pop
jmp
push
lea
push
lea
push
call
aad
add
sahf
add
mov
add
jns
addl
int3
mov
push
add
mov
aam
mov
mov
mov
jns
push
add
add
sti
add
in
loopne
lret
out
jae
movl
pop
push
push
push
not
add
xor
push
or
not
add
xor
sub
shr
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
mov
jge
fsubl
add
sahf
add
add
div
js
leave
stc
add
add
add
int3
add
loopne
lcall
jne
call
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
add
add
fcmovnb
pop
add
add
xchg
imul
add
ljmp
add
jne
jecxz
jecxz
sti
add
add
outsl
add
xchg
repnz
add
add
popf
sub
pop
call
push
push
rol
shl
push
or
inc
add
add
not
shr
add
sub
sub
shl
shr
pop
inc
pop
push
push
push
push
call
out
in
arpl
add
jne
flds
jno
add
add
jl
mov
mov
jle
icebp
add
mov
lock
add
jae
movsb
jl
fcomip
mov
imul
add
add
stc
sub
pop
pushl
push
xor
pop
call
push
push
push
push
push
call
xchg
in
inc
jne
jge
mov
je
add
mov
add
mov
in
mov
mov
add
jnp
div
add
std
ja
sub
pop
call
push
push
lea
push
push
pop
add
not
shr
dec
sub
rol
xor
pop
shr
xor
ror
pop
push
shl
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
push
call
add
fsubl
lods
mov
xchg
mov
push
mov
roll
jns
mov
xchg
lret
fwait
add
add
jle
lds
add
fcmovne
leave
filds
xchg
pusha
add
add
gs
pop
call
call
push
push
not
ror
push
and
add
dec
sub
rol
pop
lea
sub
rol
pop
push
lea
push
push
call
add
test
add
int
cltd
add
add
pop
jp
push
rcrl
add
lahf
mov
mov
in
add
in
add
shrb
je
ror
mov
mov
int
testb
add
add
in
push
push
add
add
jne
call
push
lea
push
push
push
call
pop
lea
push
add
loop
fcmovnu
test
pop
add
in
add
add
out
add
add
pop
in
roll
add
xchg
lds
stos
imul
sti
add
scas
push
test
mov
pop
lcall
popl
mov
shrb
push
fstps
not
lea
push
or
inc
add
not
not
lea
sub
sub
shl
add
pop
rol
inc
sub
pop
push
add
ror
pop
pushl
push
ror
inc
inc
sub
pop
call
call
push
push
add
not
xor
push
xor
add
shl
add
add
sub
not
add
pop
sub
pop
push
push
push
push
push
lea
push
push
push
call
add
mov
add
add
add
nop
lds
out
std
lods
add
add
ja
out
js
add
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
push
push
call
imul
loop
pusha
stc
push
in
js
add
gs
add
add
add
hlt
xchg
pop
add
add
fadds
mov
add
insb
pop
lahf
add
sahf
add
outsl
pop
add
mov
les
add
push
push
push
push
push
push
lea
push
push
push
push
call
out
push
test
ret
add
sti
outsl
add
filds
jns
xchg
add
cltd
rolb
mulb
loopne
mov
out
cli
add
hlt
add
retw
add
xchg
mov
fnstsw
rorl
add
push
lahf
sub
pop
call
push
push
xor
not
push
sub
add
add
sub
pop
pop
push
shl
pop
pushl
push
push
push
lea
push
call
imul
ftst
add
add
add
add
add
add
into
add
push
add
aad
mov
add
jns
add
add
mov
mov
add
xchg
add
add
add
in
in
lock
lcall
test
add
push
add
pop
call
push
push
xor
push
push
pop
add
shr
sub
shr
sub
rol
lea
dec
dec
pop
inc
not
pop
push
lea
push
push
push
push
push
push
call
add
pop
imul
add
add
add
mov
out
add
scas
in
mov
mov
ljmp
or
loope
lea
shl
shr
pop
call
push
lea
push
push
push
lea
push
push
push
push
call
in
add
xchg
cmpsl
add
add
lret
gs
jecxz
jb
jecxz
popa
xchg
add
mov
addr16
add
pusha
cmpsl
add
mov
add
push
stc
add
xchg
add
push
add
pop
call
add
popa
mov
popl
jp
aad
sub
pop
call
push
push
dec
shl
push
push
pop
add
inc
shr
add
sub
shl
inc
pop
shl
not
pop
push
push
call
add
jle
add
add
iret
add
jecxz
pushf
add
xchg
xchg
mov
in
cmpsb
ja
fadds
mov
jb
add
js
iret
cltd
add
add
add
pop
aam
mov
add
lods
mov
add
in
test
call
add
in
clc
lcall
jne
push
push
push
lea
push
push
push
push
call
ja
xlat
add
lcall
mov
push
lcall
add
add
add
roll
push
out
pop
pop
jp
add
add
push
add
repnz
push
add
sub
pop
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
add
add
mov
imul
aam
cld
cld
lock
imul
add
add
pop
test
add
scas
add
add
add
test
in
fcomps
shrb
js
mov
add
inc
add
sub
push
xor
add
add
ror
shl
sub
add
lea
add
pop
add
sub
pop
push
lea
push
call
insb
rolb
int
xchg
lods
add
add
add
mov
push
add
jo
roll
in
in
push
imul
nop
add
add
sahf
mov
clc
pop
pushl
push
lea
push
call
xchg
ja
mov
mov
add
push
add
clc
mov
fnstenv
loopne
pop
add
int3
add
add
rolb
addr16
sar
add
out
add
lcall
push
and
lret
not
pop
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
aam
mov
push
xchg
add
add
push
add
mov
xchg
icebp
add
imul
ret
clc
add
imul
test
aad
add
in
clc
add
add
jbe
in
fcomps
push
push
lea
push
lea
push
push
push
push
push
push
push
call
add
loopne
call
add
shlb
popa
xchg
add
add
loop
add
ja
xchg
leave
add
divl
pop
shlb
loop
xchg
mov
pushf
add
int
mov
call
add
push
add
lcall
shrb
jmp
jmp
pop
add
add
inc
sub
xor
dec
pop
sub
dec
lea
pop
push
rol
add
rol
pop
pushl
call
push
inc
xor
pop
call
push
push
push
sub
add
xor
shr
not
dec
sub
shr
pop
add
pop
push
push
push
push
lea
push
push
push
lea
push
call
clc
add
add
add
mov
js
loopne
add
fildl
subl
add
add
imulb
add
jmp
add
lock
mov
add
mov
xchg
add
mov
add
add
sub
pop
pushl
call
push
push
push
lea
push
push
lea
push
push
call
jnp
jb
outsl
mov
push
fs
cld
add
stos
add
xchg
mov
add
add
add
jno
add
test
add
imul
lds
jae
jecxz
fstl
add
add
add
js
lcall
add
shrb
hlt
stos
push
add
rol
rol
push
push
pop
add
add
xor
sub
sub
not
pop
add
pop
push
add
pop
pushl
push
inc
sub
pop
call
push
add
not
pop
call
lea
push
push
sub
sub
inc
push
and
add
sub
lea
sub
sub
pop
ror
add
add
pop
push
lea
push
call
add
mov
in
fimull
xchg
mov
add
repnz
mov
fadds
add
rclb
sub
pop
pushl
call
push
push
call
faddl
in
ret
add
leave
nop
jmp
add
into
jnp
push
data16
add
xlat
leave
iret
jb
add
mov
mov
add
cltd
mov
mov
add
loope
aad
ret
ret
add
pop
add
add
add
lcall
call
push
push
rol
rol
push
xor
add
rol
sub
shr
sub
rol
pop
dec
xor
pop
push
push
push
push
push
lea
push
push
push
call
test
subb
sahf
add
rol
mov
flds
add
jmp
add
add
jge
js
add
mov
sub
pop
pushl
push
dec
add
add
pop
call
push
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
into
mov
pusha
add
cmpsb
mov
mulw
jne
add
mov
arpl
jbe
jno
add
loopne
cld
mov
rorl
pop
call
push
rol
sub
shr
dec
pop
mov
push
push
xor
push
sub
add
xor
ror
lea
sub
rol
pop
add
add
pop
push
sub
pop
pushl
push
dec
pop
call
push
push
push
push
push
push
push
call
add
add
gs
popl
in
add
xchg
push
add
ljmp
nop
stc
add
add
loop
add
mov
mov
addl
add
loop
in
in
push
push
pop
pushl
push
dec
inc
pop
call
push
push
lea
lea
push
or
inc
add
dec
dec
sub
lea
shl
lea
pop
dec
inc
lea
pop
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
add
add
add
outsl
mov
jo
ja
leave
fwait
add
xchg
xchg
add
movsl
pop
negb
add
add
add
mov
xchg
mov
testb
pop
out
cwtl
movsb
xchg
cld
add
lcall
jne
push
push
push
call
mov
add
movl
pop
add
mov
mov
jl
fadds
mov
fiadds
add
jns
test
add
sub
pop
call
push
push
sub
push
and
add
sub
dec
pop
pop
push
push
add
push
and
add
ror
sub
not
pop
not
sub
rol
pop
push
push
lea
push
push
call
int3
jnp
aad
add
mov
add
pusha
add
add
jl
rolb
add
int3
push
add
aam
xchg
add
lock
call
push
push
not
xor
push
xor
add
lea
sub
shr
pop
sub
pop
push
lea
push
push
lea
push
push
call
fiaddl
lret
add
js
jecxz
mov
mov
mov
add
add
xchg
lcall
xchg
ret
mov
fs
fs
add
add
mov
out
add
add
add
test
in
flds
ljmp
add
mov
popf
sub
pop
pushl
push
shr
pop
call
mov
push
push
call
add
arpl
gs
in
add
add
fwait
data16
ja
cmpsl
loopne
frstpm(287
mov
ret
push
add
filds
jmp
sub
pop
lea
lea
push
push
lea
push
push
lea
push
push
push
call
iret
add
add
jp
mov
add
iret
fiaddl
jecxz
repnz
mov
rolb
adcl
add
cwtl
lahf
lahf
jle
lcall
add
test
push
js
jns
scas
into
add
in
in
lcall
push
push
push
push
push
push
push
call
stos
jns
mov
add
mov
testb
xchg
mov
pop
mov
ret
pusha
lret
pop
push
imul
add
add
jecxz
push
add
add
add
stos
pop
mov
add
sub
pop
push
push
push
push
lea
push
call
jo
jb
leave
add
lock
jle
jmp
add
int3
add
mov
add
mov
fiadds
out
enter
add
add
add
out
mov
nop
add
leave
shl
in
hlt
pop
push
push
push
not
pop
push
push
ror
sub
sub
pop
push
push
push
push
lea
push
push
call
push
add
add
add
mov
jmp
add
rolb
std
data16
add
stos
add
add
test
mov
mov
addl
ret
jl
cmpsb
pusha
out
imul
xchg
pop
add
test
add
lods
add
imul
push
pushl
push
add
ror
add
dec
pop
push
push
ror
pop
call
push
push
lea
push
xor
add
sub
sub
not
shl
pop
lea
pop
push
not
pop
pushl
push
push
call
mov
cli
xorb
mov
add
add
jb
add
add
push
test
in
push
nop
mov
sub
pop
call
push
sub
xor
pop
call
push
push
push
push
push
call
add
icebp
push
fidivrs
add
lds
gs
roll
push
insb
lods
nop
push
cwtl
add
pop
lods
fdivrs
add
cwtl
push
imul
jno
add
std
push
repnz
push
add
add
add
pushf
rolb
add
jo
add
addr16
add
add
sub
pop
mov
push
shl
pop
pop
push
push
push
call
mov
rolb
push
arpl
mov
xchg
add
cmc
jo
mov
add
idivb
fcom
lea
add
xchg
divl
rcrb
enter
lods
add
push
xchg
add
mov
mov
mov
pop
dec
jne
push
push
call
in
add
je
add
mov
mov
add
cmpsl
jmp
mov
rolb
add
gs
jns
add
add
add
mov
out
les
out
addr16
fadds
faddl
mov
sub
pop
call
push
push
shr
push
xor
add
not
ror
sub
sub
pop
rol
lea
shr
lea
pop
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
cltd
mov
jns
add
cltd
mov
add
add
add
out
fiadds
add
js
add
add
ret
in
testl
pushf
mov
add
pop
mov
fnstenv
in
cltd
mov
jecxz
add
fwait
stos
bound
add
out
mov
add
test
out
aad
xchg
sub
pop
pushl
push
add
pop
call
push
push
xor
shl
pop
call
push
push
push
push
push
push
push
call
add
xchg
imul
mov
xchg
sti
mov
add
push
mov
push
fdiv
clc
fstp
add
mov
int3
scas
int3
out
in
in
mov
lea
push
push
inc
sub
push
or
inc
add
sub
sub
add
shr
pop
shr
sub
inc
pop
push
dec
inc
pop
pushl
push
push
lea
push
call
movsl
add
fmulp
mov
mov
lds
add
in
jb
add
add
add
add
nop
int3
stc
call
jae
in
add
popa
add
in
fiadds
lret
push
add
lret
add
in
hlt
lcall
jo
add
push
push
call
data16
jo
hlt
mov
std
xchg
push
mov
jecxz
add
jle
sti
jae
add
add
add
add
add
movsl
addb
ffree
popf
add
add
jle
outsl
in
add
lcall
push
lea
add
pop
call
push
push
dec
push
xor
add
shr
dec
sub
xor
xor
add
add
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
call
add
sahf
mov
scas
bound
add
loop
repnz
add
repnz
add
outsl
sahf
pop
incb
add
pop
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
lea
push
push
call
imul
sti
mov
add
lds
xchg
flds
push
ret
leave
in
jecxz
mov
loope
iret
pop
mov
out
pop
push
mov
sti
sub
pop
call
push
sub
xor
pop
call
push
push
lea
push
lea
push
push
push
call
add
into
add
xlat
mov
movsl
xchg
xchg
scas
push
pop
fsts
outsl
enter
hlt
test
add
scas
add
jbe
fcmovne
test
arpl
arpl
add
add
je
fcomip
out
test
pop
xchg
pusha
add
mov
add
sub
pop
mov
lea
push
push
add
add
push
or
not
add
add
rol
sub
shl
sub
dec
ror
pop
lea
dec
add
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
in
test
faddl
hlt
ret
add
xchg
push
outsl
leave
pushf
clc
out
add
out
mov
add
add
cmpsb
pushf
add
add
fiaddl
pop
add
add
jne
add
aad
lea
add
add
cli
rcrl
mov
fdivl
add
add
add
add
add
idivl
in
fcompl
jne
push
push
push
push
push
lea
push
push
push
push
call
insb
insb
bound
divl
int3
add
add
fst
xchg
add
add
jecxz
stos
movsb
add
add
in
fcompl
mov
sub
lea
pop
lea
push
push
push
lea
push
lea
push
call
add
add
jl
add
fisubrl
add
add
xlat
out
jo
add
cmpsl
stc
add
stos
lcall
lcall
add
dec
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
sahf
stc
add
mov
out
lock
pushf
scas
add
xor
add
data16
arpl
sbbb
mov
add
add
jb
xchg
int
sub
pop
pushl
push
push
add
shl
lea
add
push
and
add
dec
rol
sub
sub
sub
pop
add
shr
xor
pop
push
inc
ror
pop
push
call
push
push
add
add
inc
shl
push
xor
add
dec
dec
sub
xor
shr
pop
dec
xor
add
pop
push
push
push
push
call
addl
test
add
test
mov
outsl
lods
adcb
rolb
lods
push
add
out
add
push
jnp
push
in
lock
pushl
call
push
push
push
call
add
add
add
fs
add
add
lcall
add
mov
xchg
add
cmpsb
mov
add
jnp
roll
sub
pop
push
push
sub
pop
call
push
push
sub
lea
push
and
add
ror
sub
lea
dec
pop
sub
sub
sub
pop
push
shr
not
pop
pushl
push
lea
pop
call
push
push
push
call
jecxz
add
add
xlat
mov
add
ret
xchg
outsl
divb
mov
in
mov
add
clc
add
popa
mov
mov
jns
xchg
stos
popf
jmp
push
xchg
push
add
lcall
rclb
jno
push
add
add
aam
and
mov
lahf
lods
pop
add
add
add
xchg
cwtl
lea
add
add
fsubl
stos
faddl
out
add
loope
add
mov
nop
stos
cltd
add
jecxz
sub
pop
jmp
push
shr
rol
not
sub
pop
pushl
push
push
push
push
lea
push
push
call
add
in
rcl
xchg
push
clc
cltd
jmp
movsl
out
push
enter
pop
imul
lcall
jae
add
add
add
xchg
arpl
add
add
add
add
addr16
movsl
xchg
add
add
xbegin
add
les
add
lret
add
lcall
mov
jmp
push
push
ror
inc
ror
push
sub
add
sub
not
dec
not
sub
inc
rol
pop
inc
shl
shl
pop
push
rol
pop
pushl
push
push
push
push
push
call
into
arpl
fcoms
add
jl
shll
push
clc
mov
add
add
add
mov
xchg
add
out
mov
lcall
out
adc
add
push
inc
sub
add
shl
pop
call
push
push
shl
dec
push
push
pop
add
rol
rol
sub
shl
sub
pop
add
lea
pop
push
push
push
push
call
incb
add
lods
int3
add
add
add
fcmovne
rclb
stos
cli
mov
add
les
clc
mov
stos
sti
add
std
add
into
sub
pop
pushl
call
push
add
pop
push
call
push
lea
sub
pop
leave
push
lea
push
call
loopne
add
out
je
add
add
pop
mov
out
add
add
add
notb
scas
out
jmp
rcll
add
test
call
cwtl
add
addr16
add
stos
mov
jb
out
mov
xchg
aam
add
mov
jmp
add
out
add
mov
mov
push
sub
pop
add
push
lea
push
lea
push
push
push
push
call
jae
add
add
loopne
mov
add
mov
add
mov
add
push
fwait
add
add
xchg
mov
in
mov
push
mov
out
add
jmp
add
int
add
add
fdiv
add
les
popf
add
pop
push
shr
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
outsl
add
jmp
rolb
add
add
mov
add
lock
imul
add
out
jp
pusha
add
add
add
push
int
stos
add
xchg
hlt
sub
pop
pop
leave
push
pop
add
push
push
push
lea
push
call
lds
loope
lods
mov
icebp
add
add
add
add
imul
add
scas
mov
lcall
leave
push
push
call
rcrl
test
jmp
add
jmp
xchg
addb
test
add
add
add
add
add
add
aad
in
clc
lcall
or
push
push
push
push
push
push
lea
push
push
push
push
call
push
add
add
stc
pushf
add
mov
imul
cmpsl
in
shrl
mov
lds
add
out
add
add
add
je
in
xchg
push
movsl
mull
jle
movsl
add
stos
mov
call
push
push
mov
sub
pop
push
push
not
ror
ror
pop
mov
push
sub
add
not
shl
pop
cmpl
jne
mov
push
push
push
push
push
push
call
add
data16
in
scas
fisubrl
pop
insb
add
movsb
add
add
add
jne
mov
test
sub
pop
jmp
mov
push
inc
sub
pop
and
xor
push
xor
ror
xor
ror
pop
xor
add
push
rol
rol
pop
xor
push
add
pop
dec
push
not
add
pop
sub
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
jo
les
mov
add
popl
push
push
test
mov
testb
jbe
add
lahf
negb
aad
insb
mov
add
in
add
scas
test
add
add
pop
add
jl
test
add
add
fadds
push
xchg
add
fcomps
addl
add
push
push
lea
push
call
popf
sbbb
mov
iret
add
add
push
out
xlat
imul
add
push
push
addb
fdivrp
pop
pop
out
fildl
addl
add
add
in
push
add
mov
nop
leave
addr16
add
push
les
lcall
add
add
pushl
push
rol
pop
pop
push
ror
pop
sub
push
sub
sub
pop
cmp
jne
push
rol
pop
mov
push
rol
not
lea
pop
lea
push
push
push
push
push
lea
push
call
add
add
outsl
icebp
out
add
add
jle
add
popf
in
jge
mov
clc
add
fcompl
add
push
cltd
test
add
je
add
xchg
stc
add
add
insb
add
cltd
add
add
xchg
nop
cmc
iret
add
pusha
add
std
call
in
call
sub
push
not
add
pop
mov
push
lea
push
lea
push
push
lea
push
call
add
mov
movsl
idivb
mov
sarb
popf
add
add
mov
arpl
add
insb
add
xchg
in
out
pushf
add
add
add
bound
add
mov
add
add
add
mov
out
add
jge
jle
fwait
add
lcall
jmp
push
push
push
lea
push
push
push
push
call
push
pop
add
incb
shrb
testb
fists
add
mov
add
out
popf
cwtl
mov
add
aad
mov
fdivr
lcall
enter
push
push
call
shl
add
add
pushf
add
frstor
mov
cmc
in
add
add
add
filds
add
xchg
fwait
test
pop
sub
pushl
push
ror
sub
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
xchg
into
test
add
rorl
add
add
sbb
add
mov
mov
add
mov
xchg
cmc
js
sub
pop
shr
push
push
lea
push
call
add
mov
gs
add
add
jl
xchg
mov
fwait
into
add
jl
loop
add
add
mov
mov
imul
and
sub
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
fildl
ja
add
scas
mov
fbstp
jnp
mov
add
push
test
insb
in
nop
sub
pop
cmp
jne
leave
push
sub
shr
inc
shl
pop
ret
push
push
push
lea
push
push
push
push
call
add
add
push
jbe
add
call
arpl
add
call
mov
add
in
add
ficomps
add
test
mov
rolb
hlt
add
add
add
scas
mov
scas
lcall
add
add
cmpsl
mov
add
call
push
push
push
push
lea
push
push
push
push
call
add
lock
add
cltd
xchg
add
out
mov
mov
add
add
mov
leave
shrb
add
int
int3
in
imul
mov
cwtl
pop
add
lahf
cli
add
out
add
add
mov
js
sub
pop
add
push
push
push
push
call
push
shll
pop
lea
arpl
cwtl
imul
add
push
mov
clc
add
popf
imul
add
testl
add
add
fs
ffreep
clc
add
push
add
add
add
pop
jae
jl
in
add
clc
enter
sub
pop
push
push
push
push
push
lea
push
push
call
cltd
lret
xchg
scas
mov
jmp
add
add
loopne
movb
jae
xchg
negl
mov
scas
add
add
imul
add
addl
lcall
push
push
dec
dec
pop
push
push
add
shr
sub
pop
push
mov
push
inc
pop
lea
push
push
push
push
push
call
add
loop
xchg
add
rcll
in
in
out
add
add
add
sti
scas
push
cmpsb
divb
xchg
sahf
push
add
ja
add
roll
test
xchg
stc
add
stc
fiaddl
xchg
aam
xchg
jae
mov
mov
jno
in
in
lcall
ljmp
add
js
add
popa
push
out
andb
out
mov
add
shr
push
pop
xchg
testb
add
add
add
add
gs
add
sar
add
out
in
xchg
arpl
repnz
sub
pop
mov
push
lea
push
push
push
push
call
add
out
add
add
popa
mov
xchg
add
jbe
add
xchg
add
add
call
sbbb
push
lea
popf
ror
add
flds
add
add
mov
add
add
lods
add
leave
iret
add
mov
in
in
pop
shr
push
push
push
push
push
push
call
add
lret
lahf
ljmp
xchg
cltd
ficomps
add
xlat
fiaddl
mov
add
lret
pop
add
sub
pop
add
mov
push
add
pop
add
push
xor
sub
pop
mov
add
push
push
push
push
lea
push
push
lea
push
call
js
sarb
loope
add
push
in
add
mov
add
loop
add
xchg
mov
push
cmc
push
mov
mov
cld
add
add
pop
jno
add
lcall
testb
outsb
je
fidivs
push
pop
push
push
push
lea
push
push
push
push
call
add
mov
in
lcall
add
add
add
add
test
loop
bound
add
hlt
xchg
add
fnsave
loopne
pop
fildl
mov
add
add
out
add
mov
add
add
mov
add
lret
add
jecxz
sub
pop
and
push
push
push
push
push
push
push
push
push
call
mov
xchg
mov
add
out
shlb
jb
outsl
add
push
add
lods
push
andb
jne
push
add
xchg
push
mov
out
sub
pop
rol
rol
push
push
lea
push
push
push
push
push
push
push
call
mov
outsl
cmpsb
out
aad
icebp
add
pop
mov
add
add
add
add
pusha
fldl
add
mov
pop
add
lds
add
rorl
lea
add
add
in
mov
jecxz
add
rcrb
add
add
lods
jae
lea
add
sbb
lds
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
add
fsubs
jne
ljmp
add
lret
add
pop
jne
mov
push
add
mov
rolb
add
outsl
add
nop
add
lcall
push
pop
cmpb
jne
add
push
push
push
push
lea
push
push
call
push
mov
xlat
add
push
add
cmc
data16
ljmp
in
test
add
add
jns
loop
add
mov
mov
out
ja
add
push
shrb
add
pop
lea
add
add
jne
sub
pop
cmp
je
add
push
lea
push
push
call
lds
add
scas
add
xchg
iret
fdivl
pusha
add
lret
loopne
add
add
jne
lret
push
cmc
shr
cmc
add
add
add
fnstsw
mov
in
hlt
pop
cmpl
jne
xor
push
rol
xor
rol
shl
pop
pop
pop
push
rol
dec
shr
add
pop
pop
push
not
pop
pop
pop
push
inc
not
dec
lea
pop
leave
push
rol
shl
shr
pop
ret
push
sub
add
xor
pop
mov
push
shl
inc
pop
add
push
push
not
not
pop
push
push
push
lea
push
push
call
add
push
lcall
repnz
xchg
jno
add
hlt
xlat
add
jo
add
fldcw
add
xchg
mov
jno
add
hlt
jns
enter
lods
fiaddl
xchg
addb
add
add
icebp
add
addb
pop
add
push
push
push
push
lea
push
push
call
add
mov
add
cmp
pop
ret
pop
add
iret
mov
lods
cld
add
add
cwtl
out
add
mov
jo
pushf
filds
jo
xchg
stc
mov
mov
in
call
add
lea
pop
testw
push
push
push
push
push
push
push
push
push
push
call
ljmp
in
loop
mov
add
mov
insb
cmpb
into
jbe
add
add
mov
repnz
mov
scas
outsl
add
test
xorb
test
into
leave
push
add
jnp
mov
add
add
flds
lods
add
add
add
fcomps
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
loop
roll
add
add
add
insb
push
in
cwtl
add
add
xchg
mov
add
fisubl
add
cmc
movsb
pop
mov
cmpl
addr16
add
lret
pop
hlt
testb
aad
sub
pop
pop
mov
push
inc
add
pop
push
call
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
nop
idivb
sti
add
leave
jae
add
ljmp
add
in
add
add
loopne
jecxz
mov
in
scas
add
xor
push
add
not
pop
pop
push
push
lea
push
lea
push
push
push
call
out
add
add
add
mov
add
add
add
lcall
add
cltd
mov
adc
add
lods
add
add
cwtl
mov
pop
mov
popf
add
add
add
jo
add
stos
add
std
add
sub
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
add
cmpsb
out
leave
add
add
mov
xchg
mov
in
add
mov
test
jle
loop
add
ljmp
in
fcompl
pop
push
push
push
push
push
push
push
push
call
mov
add
add
scas
add
pusha
push
add
add
faddl
cmpsl
stc
add
add
add
std
lods
add
add
addl
les
add
out
push
add
stc
add
xchg
popl
xchg
std
jbe
push
add
jns
jge
mov
mov
add
sub
pop
pop
leave
push
sub
lea
pop
ret
push
push
push
call
cmc
add
lock
jnp
les
add
add
add
movb
scas
data16
add
add
int
add
add
pop
cld
add
test
jp
add
jbe
add
mov
aam
scas
int
sub
pop
mov
add
push
sub
shl
pop
push
push
push
pop
push
push
lea
pop
push
mov
push
shr
sub
pop
push
push
push
push
lea
push
push
call
add
add
push
add
cmpsl
clc
add
popl
mov
jo
pusha
mov
sti
xchg
push
add
add
add
add
add
mov
pop
push
inc
pop
lea
sub
push
not
shr
sub
pop
mov
push
lea
push
lea
push
push
push
push
push
push
call
add
jp
fwait
cmpsb
jbe
add
add
mov
in
add
add
lret
push
add
hlt
add
add
add
push
out
add
xchg
jae
add
mov
add
ret
mov
add
movsl
add
add
cltd
xlat
xchg
jge
sarb
pop
shll
add
add
sub
pop
shr
push
ror
pop
add
push
push
push
push
push
push
push
push
push
push
call
mov
add
addl
pop
mov
add
add
fwait
cmc
add
roll
add
add
lods
into
add
pop
sahf
repnz
jmp
add
mov
add
mov
add
add
stos
add
rolb
out
fidivrl
stos
push
sub
pop
mov
add
push
lea
push
push
call
add
leave
les
int
add
add
test
add
lods
add
pop
rol
pop
sti
testl
add
into
add
test
bound
add
add
enter
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
add
lock
add
roll
add
add
add
add
in
notl
shlb
add
add
cmc
mov
add
add
jns
xchg
mov
nop
testl
mov
mov
in
lcall
inc
clc
mov
push
push
lea
push
push
lea
push
push
call
pop
add
scas
jo
mov
popf
pop
mov
lret
add
imul
cli
jle
scas
add
nop
movsb
stc
add
add
movsb
cli
add
in
pop
loope
addb
mov
pop
jmp
jecxz
popa
cltd
cwtl
shlb
cmpsb
add
add
mov
add
mov
add
stc
push
xor
pop
xor
push
add
add
sub
pop
lea
push
push
push
push
push
push
push
lea
push
push
push
call
fadds
add
mov
xchg
ja
add
mov
mov
imull
mov
push
mov
mov
add
fcom
add
add
faddl
lods
lcall
leave
out
call
add
add
sub
pop
mov
push
rol
not
pop
add
xor
push
not
add
rol
pop
rol
push
push
push
lea
push
push
push
call
add
xchg
stc
xchg
mov
aad
shl
js
add
movsb
lds
push
mov
push
jno
js
add
mov
imul
add
xchg
mov
test
js
push
sub
pop
nop
push
lea
push
call
add
add
add
test
push
arpl
add
add
jns
stc
mov
add
addl
mov
add
add
testb
add
js
add
add
xchg
mov
add
jne
out
jp
je
in
clc
lcall
push
push
lea
push
push
push
push
lea
push
lea
push
call
lods
fsubrp
add
mov
add
orb
mov
xchg
into
imul
cli
nop
pop
add
add
xchg
iret
repnz
push
cld
jae
sub
pop
xor
nop
push
lea
ror
pop
nop
push
push
push
lea
push
push
call
add
lods
scas
add
add
add
push
ljmp
out
iret
mov
push
add
add
add
pop
push
scas
add
bound
add
lds
in
in
lcall
nop
push
push
push
push
push
lea
push
push
push
push
call
add
popf
mov
stos
test
lcall
xchg
add
jle
add
outsl
movsl
add
add
out
rclb
stos
sbbb
pop
cmpsl
loopne
add
add
lods
add
add
sub
pop
nop
cmpb
jne
push
not
lea
add
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
test
aam
out
pushf
add
mov
add
pop
push
sarl
add
lods
add
jp
flds
mov
popa
add
jb
fldenv
add
in
fcomps
push
push
lea
push
push
push
push
push
push
call
in
add
test
jb
ficoms
add
test
push
stc
jmp
roll
add
add
add
add
scas
lods
add
xchg
lret
push
loope
int
stos
add
xchg
test
add
bound
add
add
nop
cmp
je
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
xchg
push
ljmp
push
arpl
add
add
add
add
bound
jbe
add
popf
xchg
lods
lods
add
xchg
push
add
jmp
add
cmpsb
ljmp
jae
je
pop
mov
fdivr
lcall
nop
push
push
push
call
add
push
icebp
testl
add
pop
lret
jge
add
add
scas
add
mov
add
add
add
lret
add
add
pushf
sti
add
add
mov
fisttps
add
add
in
enter
imul
hlt
lcall
nop
push
push
push
lea
push
call
pop
push
lock
repnz
add
into
jb
jne
fwait
add
jbe
push
xchg
add
rolb
jno
insb
aam
add
mov
jo
ljmp
rolb
repnz
push
test
sub
pop
nop
cmp
jb
push
push
push
push
push
push
push
push
push
lea
push
call
mov
xchg
jb
data16
pusha
add
lahf
xchg
add
nop
add
out
add
add
add
add
add
in
add
jecxz
add
mov
mov
scas
shrl
add
add
mov
add
fildl
sub
pop
xor
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
out
fldl
add
add
into
testb
fistpl
mov
ja
int
add
fstpt
pop
add
add
movsb
mov
cltd
aad
add
add
cmpsl
adcl
js
add
jo
loope
nop
lock
pop
jmp
push
sub
lea
pop
mov
add
push
push
push
push
push
call
pop
lock
xchg
push
mov
arpl
notl
add
add
add
jp
add
mov
pop
enter
add
aad
push
bound
testl
push
add
testb
add
xchg
mov
jecxz
mov
add
lcall
sub
pop
movzwl
push
push
push
push
lea
push
push
push
call
add
lret
out
data16
js
fs
loope
scas
fdivr
movsl
push
add
loop
shll
jne
add
add
inc
sbb
not
pop
add
push
push
push
push
lea
push
push
push
push
call
mov
add
call
add
addb
rcl
lret
add
add
scas
add
out
xchg
sar
loope
iret
add
add
lcall
nop
add
in
cmc
add
aam
add
addl
add
stos
in
add
sub
pop
mov
xor
push
shr
pop
xor
push
sub
sub
pop
shl
push
dec
pop
xor
shl
push
push
push
push
lea
push
push
push
push
lea
push
call
cwtl
mov
add
pop
add
mov
faddl
add
add
add
jle
add
js
mov
les
add
andl
add
add
add
lret
addl
xchg
push
lret
in
fcompl
dec
nop
add
out
lea
add
pop
shl
push
pop
xor
push
push
push
push
call
jge
insb
popa
incb
idivl
call
add
outsl
pop
add
xchg
push
add
lock
lcall
roll
hlt
push
push
push
lea
push
push
call
negl
cltd
add
test
addl
add
in
add
add
xchg
mov
rcll
in
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
int3
add
mov
testb
mov
push
stos
faddl
lret
add
pop
add
add
sti
into
data16
add
cld
add
add
mov
add
addb
add
xchg
out
mov
outsl
in
add
leave
add
mov
aad
in
fcompl
push
pop
pop
pop
push
push
push
push
lea
push
call
add
sahf
lock
add
add
lea
add
fildl
in
call
add
pop
adc
pop
jo
add
ljmp
mov
in
pop
leave
push
shl
shr
pop
ret
push
ror
pop
push
push
sub
shl
pop
mov
push
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
test
rolb
les
fwait
add
add
add
pop
nop
lds
addl
cmpsb
rolb
mov
add
test
add
add
push
jne
mov
fdivr
lcall
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
adcb
js
push
add
out
add
jl
add
add
icebp
add
add
cltd
add
loop
add
add
add
movl
fs
push
add
jl
push
test
nop
add
rorl
push
add
int
add
add
add
scas
sub
pop
push
push
push
push
call
aad
in
add
les
cwtl
jo
jl
add
add
pop
add
mov
mov
pusha
push
hlt
lcall
dec
or
lea
push
push
lea
push
push
push
push
lea
push
push
call
mov
clc
push
add
add
mov
add
sti
push
into
add
cmc
rcll
add
mov
add
xchg
pop
cltd
add
pushf
add
cmc
cld
cmc
scas
add
add
int3
lret
jb
push
pushf
mov
fdivr
lcall
adc
push
push
push
lea
push
call
jmp
icebp
add
lret
add
xchg
add
jo
clc
nop
push
cli
add
jecxz
lock
add
add
add
call
push
shr
sub
sub
add
pop
test
je
mov
push
dec
inc
pop
test
je
mov
push
shr
inc
inc
pop
mov
mov
push
lea
rol
inc
pop
inc
push
dec
shl
sub
pop
cmp
je
test
je
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
leave
push
hlt
shrb
mov
add
add
add
add
lcall
push
inc
push
rol
add
add
pop
cmp
je
push
push
call
fiadds
out
add
test
add
push
lahf
add
mov
mov
lods
mov
mov
push
add
add
ffreep
add
mov
add
add
add
add
pop
stos
bound
mov
sahf
aad
in
add
lods
f2xm1
scas
imulb
add
out
add
fwait
jecxz
stos
lock
sub
pop
test
jne
xor
push
rol
inc
add
pop
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
call
movsb
mov
loopne
stos
mov
data16
lds
add
icebp
add
add
add
int3
lea
in
in
lcall
pop
push
dec
lea
pop
pop
leave
push
sub
shl
xor
pop
ret
mov
push
add
pop
inc
push
add
not
add
pop
cmp
jne
lea
push
add
sub
sub
not
pop
mov
test
je
push
push
lea
push
push
lea
push
call
add
mov
add
fnstcw
imul
in
add
jmp
add
cmpsl
popf
cmpsl
int
lcall
out
mov
add
incb
out
add
add
pop
mov
out
iret
rclb
pop
hlt
into
add
push
pushf
add
rclb
test
mov
push
push
push
push
push
push
push
push
push
push
call
arpl
add
lret
fwait
add
testl
add
les
add
mov
pop
aam
out
test
push
js
add
add
out
add
out
add
add
jp
add
add
repnz
int
jno
add
jb
add
aad
sub
pop
add
cmp
jne
push
pop
mov
push
lea
push
push
lea
push
push
push
call
mov
xchg
add
add
add
xchg
add
out
add
add
add
add
fildl
add
pop
testl
jge
iret
add
mov
jae
push
add
add
add
jbe
mov
add
add
add
pop
test
je
push
add
rol
ror
pop
mov
add
push
not
xor
pop
cmp
je
push
lea
pop
jmp
push
push
push
lea
push
call
cmpb
add
add
add
add
cli
add
leave
shll
add
add
pop
in
jns
call
add
add
ljmp
add
int
mov
mov
add
sub
pop
xor
pop
push
rol
dec
pop
pop
push
push
push
push
push
push
push
push
call
xchg
fwait
roll
xchg
cli
add
add
aam
add
jbe
add
add
add
mov
add
mov
mov
add
add
jmp
cld
add
loopne
lcall
push
sub
pop
pop
push
ror
lea
sub
pop
leave
ret
push
dec
pop
lea
push
push
lea
push
push
push
push
call
add
jmp
add
add
nop
pop
add
roll
push
popf
add
push
mov
add
movsl
imul
add
xchg
filds
pop
addr16
int3
mov
sub
pop
pop
push
inc
not
shr
dec
pop
pop
pop
push
lea
push
push
call
add
idivl
push
jnp
mov
mov
in
lock
mov
add
push
add
mov
lret
add
mov
add
add
mulb
scas
mov
in
push
testl
add
lcall
leave
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
nop
push
add
jne
xchg
repnz
add
push
add
into
mov
iret
popa
mov
push
add
flds
addl
loop
add
jmp
jge
add
jl
jnp
je
in
fdivr
lcall
or
mov
push
push
push
push
push
push
call
movsl
shll
add
cltd
mov
xchg
mov
add
mov
scas
in
add
xchg
add
add
arpl
mov
jp
add
add
add
sahf
mov
add
jnp
js
add
add
pop
cltd
push
mov
roll
pop
jne
flds
iret
jmp
leave
fsubrs
incb
lcall
push
dec
add
add
pop
pop
pop
push
dec
pop
pop
leave
push
push
push
push
lea
push
call
add
ljmp
std
idivb
add
add
jo
add
cmpsl
add
add
add
push
fiaddl
icebp
out
add
jge
xchg
popa
add
cmc
out
ljmp
ljmp
in
sub
pop
ret
test
push
test
jae
pop
imul
jmp
push
test
jb
dec
sbb
inc
sub
push
shlb
test
jae
cmp
jb
mov
adc
rorb
xor
sbb
push
sub
daa
or
jg
mov
negb
inc
inc
cmpb
scas
movsl
sub
push
ja
dec
adc
mov
cld
pushfw
or
mov
inc
sarb
out
add
icebp
adc
icebp
cmp
aas
int
cmp
push
inc
insb
lods
shl
pop
cmpl
mov
in
sbb
cmc
dec
mov
je
push
add
xchg
cwtl
lock
loopne
mov
cmc
pusha
rcrl
cmp
pushf
adc
out
xchg
pusha
sbb
into
mov
cs
sbb
sbb
clc
mov
sbb
xchg
pop
daa
or
int3
mov
inc
repz
push
lret
sub
add
outsb
stos
pop
imul
xor
mov
mov
sti
jo
xchg
cmpsb
loop
sbb
mov
mov
ret
fsts
mov
inc
in
mov
xor
mov
loop
push
xor
or
iret
and
adc
cmp
lods
dec
mov
push
cs
sbb
addr16
push
push
pop
lods
xor
sub
xorb
sar
or
dec
add
mov
mov
push
out
and
inc
add
mov
mov
or
jno,pt
jp
push
jge
outsl
jns
mov
mov
mov
sbb
or
jge
xchg
fistpl
or
arpl
aam
repnz
and
xor
insb
or
sbb
mov
test
adc
lea
sbbb
adc
sbb
mov
or
nopl
int
shll
test
jg
and
cmp
push
xlat
or
rcll
dec
cmovp
push
adc
cmpsl
fstl
ja
fdivrs
sub
repz
daa
clc
adc
push
rep
xor
negb
mov
dec
jge
leave
adc
mov
jnp
pop
adc
les
es
mov
pop
jb
xchg
xchg
sbb
lods
je
lret
adc
bound
add
add
push
ja
cs
mov
ljmp
and
adc
arpl
loop
stc
adc
js
out
xchg
cmc
cld
jp
push
xchg
fs
push
test
fs
cs
fimuls
rol
bound
or
out
insl
cmp
cli
push
xor
mov
pop
mov
movsl
fstps
or
inc
popa
lock
push
sarl
das
add
cli
pop
mov
pop
xchg
out
xchg
out
dec
js
arpl
sbb
call
cmp
fildl
addb
sbb
cwtl
pop
jnp
jge
lret
mov
cli
jmp
add
jo
adc
ja
push
das
test
pop
lds
pop
or
icebp
mov
inc
ss
pusha
dec
xchg
jnp
adcb
xlat
cmp
push
loopne
xchg
pop
dec
leave
and
sub
or
test
into
xor
pusha
xchg
aaa
popa
in
std
mov
xchg
xor
mov
push
add
scas
call
pop
popa
ror
inc
inc
repz
cmp
sub
cli
push
push
lret
xor
add
es
lcall
pop
loope
mov
cmp
ja
sub
mov
pop
aas
pop
js
andl
xchg
jnp
es
xor
mov
mov
adc
fs
xchg
shll
cmp
jl
out
jns
fistl
mov
mov
inc
hlt
sbb
sub
add
dec
cld
outsb
inc
bsr
mov
or
pop
ss
in
jae
sbb
xor
mov
popa
scas
fidivrl
cmp
sahf
fildll
fs
mov
or
sbb
insb
jmp
cld
jg
xor
lcall
cmp
push
jmp
std
xlat
fwait
xor
mov
jl
xor
jae
out
js
fnsave
jp
clc
mov
adc
lods
dec
lahf
int
es
popf
push
pop
mov
mov
test
push
xchg
lret
pop
fidivrs
cmp
xchg
frstor
push
cmp
and
popf
scas
mov
jb
push
les
pop
and
adc
sarb
or
mov
scas
ret
cwtl
xor
mov
fldenv
adcl
or
mov
lock
aas
mov
mov
sti
or
inc
pop
mov
sbb
test
cs
movsb
push
jnp
sbb
cmpb
mov
add
and
imul
pop
and
cld
sbb
in
jmp
popa
and
mov
jbe
mov
jg
mov
sub
add
in
out
andb
add
cs
jmp
test
push
popa
mov
cmp
rol
adc
jecxz
outsl
lods
int3
pop
in
repz
xchg
cmp
je
icebp
ljmp
cs
jns
xchg
int
xor
mov
repz
xor
vmulpd
mov
xor
into
cmp
pushf
sub
mov
orb
div
and
sub
loop
std
sbb
jns
dec
mov
movsb
push
xchg
lds
mov
jge
mov
jge
daa
mov
popa
js
xchg
cli
cmp
xchg
cltd
fidivl
fisttpll
shll
outsl
mov
mov
testb
xor
sub
nop
lea
pop
mov
push
jb
mov
arpl
mov
rcrb
lret
hlt
test
sbb
idiv
ljmp
dec
jg
sub
dec
aas
mov
punpckhbw
or
pop
cmc
cmpb
outsb
mov
dec
leave
add
fistpl
cs
and
xor
or
dec
fptan
xor
aas
xor
jns
imul
out
push
jmp
mov
cli
pushf
loope
pop
mov
jo
iret
xor
xor
fdivrs
cwtl
mov
pusha
push
and
and
mov
jne
or
dec
inc
jne
dec
mov
inc
dec
lea
cmpsl
adc
mov
or
test
sysret
sub
into
out
pop
cmc
adc
pop
loopne
mov
push
jg
sarl
jg
cmpsb
push
shrb
add
imul
inc
push
or
in
movsb
inc
movsl
fldl
jmp
loope
adc
es
mov
stc
sub
jl
and
into
push
int3
push
arpl
icebp
pop
mov
daa
adc
jmp
push
test
sbb
adc
jle
push
jle
lcall
mov
mov
pop
cmp
int3
cltd
ljmp
mulb
addb
mov
sub
push
mov
out
cmc
sub
jbe
lds
sub
and
jl
add
pop
pusha
enter
arpl
push
bound
hlt
mov
movsl
call
insb
and
int
mov
mov
jne
sbb
pop
push
daa
std
sbb
mov
data16
std
sub
or
mov
adc
cmp
pop
mov
das
push
fldl
mov
ret
loope
daa
enter
out
fsub
test
xchg
adc
loop
test
addb
sbb
movsl
in
insb
pop
mov
vmaxss
adc
jns
sbbb
sub
cmc
test
inc
cltd
add
leave
mov
xor
dec
sbb
hlt
adc
dec
mull
enter
mov
repz
fs
sbb
sub
aas
inc
and
aad
rcl
jecxz
lret
dec
push
adc
insb
xchg
out
cmp
mov
inc
test
loope
cwtl
dec
fisubrs
ds
or
jl
call
imull
jo
push
jnp
and
cmpsl
sub
dec
inc
test
sahf
or
push
cltd
sub
xchg
shlb
pop
mov
leavew
dec
mov
andb
fs
mov
adc
mov
dec
jge
xchg
push
aad
pop
es
dec
push
jg
rcll
or
or
push
mov
add
cmp
dec
jmp
pop
xor
sub
mov
push
mov
mov
and
inc
sbb
sbb
sbb
add
pop
mov
es
sbb
pop
das
clc
inc
mov
push
jns
xor
sbb
loop
aad
mov
pop
lret
pop
mov
ljmp
out
pop
leave
fists
addr16
push
mov
xchg
popf
sub
dec
repnz
or
adc
inc
addr16
cmc
mov
dec
sbb
mov
sbbl
cwtl
leave
jg
ja
outsl
iret
adc
lds
mov
shrl
cmpl
fildll
fidivrl
jo
adc
pop
push
fstps
outsb
out
out
test
jbe
mov
xor
mov
mov
dec
ret
or
in
add
sub
loopne
lods
pusha
inc
add
xor
popf
inc
add
xchg
and
cmp
xor
xchg
js
add
pop
lcall
pusha
in
lods
js
movsb
jae
ljmp
push
pusha
push
shlb
pop
sarl
add
jno
jp
insl
adc
pop
mov
cltd
out
dec
jae
xlat
xlat
push
push
jg
inc
gs
jb
cmp
sbb
and
xor
push
inc
outsb
sbb
mov
or
addl
jno
pop
xor
int
rcrb
sub
notb
bound
pop
shl
xor
repnz
cmp
ja
iret
cwtl
jb
sbb
movsb
sbb
out
cli
in
push
push
xor
cwtl
and
sub
sbb
lock
mov
sbb
sbb
aam
dec
outsb
xchg
lods
je
fisttpl
stc
push
adc
xchg
stos
out
es
out
add
add
xchg
outsl
pop
repz
sbb
mov
enter
mov
cmpsb
inc
xor
or
pop
mov
cmp
dec
jle
mov
imul
jb
lcall
daa
xchg
lcall
mov
outsb
cld
cld
sub
lret
imul
pushf
int
pop
int3
aas
sbb
xchg
jmp
mov
inc
xor
xor
iret
insb
jo
es
fsubrl
cmp
popa
jb
sub
dec
ljmp
add
sbb
out
pop
sbb
out
fldz
xor
or
out
es
push
or
push
and
aas
mov
arpl
mov
xlat
ja
jno
xor
negb
or
add
out
mov
cmp
jg,pn
in
xor
and
mov
fdivr
insl
xchg
mov
xchg
mov
jmp
inc
add
pop
xor
outsb
push
cmp
jnp
sahf
sub
out
sub
testl
and
inc
push
sahf
xchg
sbb
loope
popf
mov
shll
std
flds
scas
or
rclb
push
shll
inc
imul
jae
js
add
clc
out
and
push
sbbl
push
mov
stos
or
jns
in
mov
sar
leave
add
inc
inc
or
or
ja
loop
das
sbb
ja
call
or
out
xor
out
ret
fs
out
notl
ljmp
sbb
in
dec
int3
ret
xchg
jge
jmp
ljmp
pusha
ss
xchg
pop
mov
jno
insb
mov
das
mov
and
jno
pop
inc
or
fists
subb
or
xchg
sbb
xchg
data16
pusha
push
push
pop
mov
aas
cmp
out
movsl
mov
es
pop
int3
popf
icebp
shl
push
in
push
add
inc
lea
jge
pop
or
lret
add
test
js
push
jmp
add
nop
cmp
push
lcall
dec
insl
sbb
scas
popf
je
adc
push
aam
test
into
and
mov
ss
add
std
cmp
enter
mull
loop
ror
dec
and
test
pop
pop
adc
sbb
mov
ret
sti
rcrl
das
roll
dec
fdiv
mov
xchg
cmp
add
mov
mov
push
add
push
mov
inc
or
jecxz
mov
fsub
ja
mov
mov
icebp
shrl
into
sbb
inc
je
push
gs
in
mov
stos
inc
icebp
jg
in
lret
shrb
add
je
cwtl
lret
mov
loop
popa
arpl
daa
adc
mov
cmp
mov
leave
or
outsl
ret
daa
jb
xlat
stos
call
test
es
fnstcw
inc
orl
lea
arpl
cs
sub
inc
adc
js
stos
push
sub
shlb
test
jp
sti
mov
into
clc
dec
push
fistl
mov
jne
inc
stc
sub
xchg
jp
push
imul
cmp
mov
int3
and
ja
test
loopne
ds
inc
out
lcall
test
fs
mov
loope
cmc
sbb
test
lds
loop
jbe
cwtl
or
test
push
lcall
imul
mov
mov
scas
mov
ret
test
sti
xlat
pop
add
inc
stc
shrl
dec
sbb
arpl
mov
dec
icebp
imul
sub
ret
imul
loope
or
nop
mov
fildll
jae
mov
or
out
into
adc
xchg
jne
out
push
pop
fildl
jbe
rolb
sub
mov
mov
mov
pop
shlb
xchg
inc
mov
dec
ret
mov
movsb
pop
push
stos
inc
xor
js
dec
test
jne
add
or
orb
sub
aaa
ljmp
push
xor
mov
push
xor
jp
adc
daa
pop
push
lods
pop
sbb
push
adc
mov
insl
xchg
jge
xor
out
clc
sbb
jle
cmpsb
cwtl
add
inc
inc
in
fsubrl
scas
enter
adc
sbb
or
cmp
je
pushl
xor
dec
nop
push
cmpsb
inc
or
daa
call
push
ret
cmp
mul
jle
mov
int3
addr16
push
pusha
rcrl
js
push
frstor
adc
cmpsb
out
js
pop
mov
clc
sub
insl
andw
push
out
or
lret
js
xchg
push
xor
scas
cmp
mull
sub
test
or
div
sbb
add
int
lahf
and
adc
aas
paddsb
jno
inc
cmpsb
call
push
out
push
ljmp
xchg
repz
push
leave
and
ja
cmp
les
jbe
ror
mov
adc
add
mov
ret
sub
xor
xchg
cmp
cmp
sahf
cwtl
int
cmp
inc
cmp
lcall
stc
add
mov
outsb
inc
cmp
mov
push
call
jg
in
xchg
out
stos
jo
and
pop
dec
mov
sarl
pop
dec
and
and
mov
pop
lret
and
cmp
mov
push
movsl
mov
sbbl
jns
movsb
xor
jp
jns
sbb
pop
pusha
inc
bsr
push
mov
cmc
dec
cli
int
cmpl
orl
int3
adc
in
xchg
repnz
jmp
popf
shrl
push
mov
in
nop
int
mov
push
clc
push
lock
icebp
mov
js
loopne
adc
mov
nop
sbb
xchg
and
mov
mov
mov
push
es
out
inc
pop
cmc
jns
mov
push
sbb
repnz
std
and
push
lret
push
in
inc
sbb
sbb
mov
aam
mov
gs
push
xchg
jb
jp
mov
ret
fadd
mov
cmpb
adc
loop
inc
mov
or
fcoms
enter
je
cmp
add
int
xor
dec
dec
mov
hlt
mov
dec
push
or
cld
lret
ret
jno
xor
lcall
mov
outsl
sbb
xor
aas
sub
adc
mov
nop
or
lret
movsb
xor
lahf
test
sub
sub
fcmovnu
push
outsl
outsl
jno
and
xor
xchg
pop
es
push
mov
adc
stos
scas
mov
addr16
push
pop
inc
lahf
lds
jbe
add
out
cli
xchg
jbe
cmc
cltd
jmp
clc
xor
ret
jnp
movsl
rcl
pop
cmp
xchg
fidivs
xlat
add
lods
jecxz
hlt
add
jle
and
mov
mov
jno
mov
xor
sbb
pop
sti
testb
aas
es
mov
rclb
mov
sbb
ja
pop
mov
add
in
aaa
sbb
add
inc
adc
pop
mov
xor
jle
sbb
push
in
clc
push
into
add
fwait
add
xchg
sub
push
loop
fdivr
sub
cli
mov
clc
movsl
jae
mov
xor
test
mov
inc
push
repz
gs
jns
mov
gs
cltd
cltd
dec
sahf
jg
xor
inc
xorb
and
jle
cmc
push
cmp
xchg
sub
data16
inc
sub
xor
sbb
shlb
inc
subb
rorl
shll
xor
rorb
enter
or
push
cmpsb
mov
and
cmp
test
in
loop
add
frstor
es
sub
mov
mov
sub
xchg
sub
insb
int3
mov
insb
push
data16
xorb
andb
inc
sub
and
pushf
jo
xchg
jb
in
cmpsl
jge
xor
push
and
mov
scas
mov
inc
repz
aad
push
and
push
push
movb
xlat
push
jmp
mov
inc
inc
dec
je
xor
aaa
xor
dec
test
mov
lret
jl
imul
aad
fisubs
add
xchg
push
adc
sub
dec
rcrl
call
lret
daa
xchg
daa
pop
jmp
test
mov
dec
lret
cwtl
pop
or
jbe
shlb
mov
sbb
mov
mov
rolb
mov
mov
xchg
sbb
or
sbb
add
orb
sbb
mov
cs
push
lret
sbb
bound
shr
add
xor
mov
sbb
std
inc
in
pop
xchg
sub
cmpsb
test
and
or
aaa
add
and
cmp
daa
or
add
or
rorl
fists
or
movsl
xchg
test
pop
rclb
sub
mov
dec
or
fiadds
cmp
inc
jbe
jb
inc
and
dec
mov
leave
or
movsb
mov
iret
fmull
repz
ficomps
movsl
cmp
xchg
aaa
ds
adc
sbbb
add
aas
mov
dec
out
push
int
test
scas
push
dec
and
jle
sbb
ja
repz
sbb
cs
add
mov
or
cmpsb
xchg
insb
lret
addr16
sub
sub
int
pop
jne
fnstsw
sub
mov
testb
inc
lock
cwtl
pop
pop
lret
insb
jns
jnp
fwait
xchg
mov
sbb
leave
test
jl
test
fwait
cltd
or
mov
mov
dec
jp
cmp
and
das
push
mov
pushf
inc
fldt
pusha
adc
fisttps
dec
enter
pop
arpl
stos
xchg
push
or
jmp
fs
insl
iret
dec
push
xor
js
sbb
negl
test
mov
pop
lcall
sbb
ficompl
mov
shrl
dec
ficoms
bnd
cmp
pop
inc
data16
clc
push
mov
dec
jmp
in
lret
lock
repnz
jnp
loope
aaa
cld
or
stc
xchg
loopne
dec
decl
inc
cld
sahf
testb
push
lret
sub
movsb
test
popa
or
or
fbld
fmuls
mov
push
adc
stos
test
pop
shll
out
adc
mov
inc
or
int3
movsl
call
sbb
adc
xchg
lods
mov
dec
xor
push
mov
sarl
pop
adc
xlat
call
and
or
sarb
mov
sti
aas
push
mov
int
push
xorb
dec
clc
jp
les
pop
inc
dec
lcall
push
pop
jae
inc
cmpb
xchg
popa
and
inc
xchg
or
xor
pop
and
xor
push
push
fbstp
jb
rcl
flds
cld
pop
std
mov
or
or
cmc
inc
and
pop
pop
xchg
xchg
jmp
pop
or
pop
andb
std
mov
inc
imul
fistps
inc
in
testl
inc
mov
jo
jne
push
andb
popf
fisttpll
pop
stos
sbb
and
jmp
movb
sub
fldenv
lds
nop
sti
cmp
iret
enter
inc
pushf
repz
or
sub
push
lahf
mov
pop
sti
adcb
jne
fdivp
notb
jno
popa
dec
or
push
dec
sbb
mov
mov
ret
add
xchg
and
sbb
adcl
jne
js
cmp
ret
push
popf
cmp
pop
add
xlat
aas
sbb
test
cmc
inc
jecxz
je
adc
lods
hlt
inc
pop
out
mull
imul
movsl
mov
cmp
push
pop
push
xor
adc
jns
xchg
add
int3
gs
xchg
imul
pop
mov
and
jo
int3
sbb
mov
mov
mov
ss
mov
aas
stos
add
or
cwtl
pop
add
and
add
mov
cmp
xchg
movsb
repnz
sarb
leave
js
test
jle
pop
scas
pusha
mov
add
cmc
iret
out
cmp
pop
je
push
scas
fildll
and
ficomps
clc
and
bnd
fisubrl
pop
cmp
stos
adc
mov
push
dec
inc
add
xchg
mov
add
mov
insl
mov
jns
push
data16
jno
push
push
ja
ljmp
adc
sub
rcrl
fld
jmp
mov
jge
mov
xor
xor
aas
hlt
test
push
cltd
lahf
iret
scas
xor
pop
mov
xchg
hlt
mov
push
in
enter
lret
xor
inc
imul
ds
imul
bound
sahf
or
imul
sbb
mov
sub
and
fbld
testl
rcl
inc
fsubr
jecxz
daa
xchg
mov
or
or
mov
mov
shll
pop
cli
or
mov
ja
or
icebp
cmp
inc
and
jnp
xchg
mov
or
mov
sahf
lcall
mov
xchg
sbb
jo
sub
loopne
mov
test
push
push
fwait
inc
adc
shrb
mov
lock
stos
sbb
je
push
in
jb
scas
cld
bound
cmp
in
jno
mov
loop
xchg
out
jnp
notl
cmpsl
cmp
add
pushf
scas
pop
cmpsl
popa
xchg
cli
shrl
jle
imul
dec
movsl
in
push
or
ljmp
xor
stc
mov
sub
fcmove
out
push
out
pusha
pop
lret
mov
jle
stc
sbb
dec
gs
divb
imulb
or
imul
mov
sbb
rcll
pop
dec
mov
or
test
gs
mov
cs
test
mov
jo
sub
push
aad
dec
sub
je
pop
xor
repz
lret
int3
jg
dec
and
mov
dec
outsl
test
les
loope
outsl
push
mov
dec
lods
aam
or
pop
arpl
add
pop
fcompl
aaa
mull
lret
pushf
dec
jmp
int
or
xchg
and
mov
mov
cmpsb
out
ds
and
adc
sbb
mov
shlb
dec
sti
cmc
jo
test
push
int
mov
in
sbbb
xor
jmp
test
xor
cmp
jae
push
jg
int
cmpsl
xor
scas
mov
mov
xor
getsec
arpl
push
decb
adc
inc
xor
rcrb
pop
cmp
jp
dec
sbb
or
xchg
pop
cmpsl
cs
cmovbe
jae
jno
nop
in
pop
xchg
pop
lods
adc
imul
cltd
adc
xchg
or
loope
cmp
mov
mov
mov
xor
loop
icebp
hlt
cmp
dec
xchg
xchg
loop
pop
stos
shl
sbb
in
das
sub
sbb
loop
add
xor
fs
jno
pop
sbb
push
cs
shll
jp
lock
scas
cmp
int
push
cltd
push
pop
or
out
mov
sbb
mov
test
pslld
xor
fistl
setp
fnstenv
ret
out
sub
pop
push
mov
mov
movsb
shll
fisubrs
jae
aas
pop
adc
stos
lcall
mov
out
push
cld
das
xchg
and
mov
dec
les
pop
les
jp
les
or
aas
cmp
pop
mov
inc
push
push
jmp
xchg
ja
stos
dec
sbb
testl
dec
notl
jne
mov
subl
or
mov
iret
stc
xchg
loop
adc
sbb
bound
ljmp
xchg
int
das
mov
test
push
add
adc
ret
frstor
insl
aad
cmp
or
insl
das
cmpsb
icebp
jno
jg
xchg
jo
push
jbe
dec
mov
in
push
add
sbb
pop
cmp
mov
jp
inc
mov
lods
dec
out
dec
insl
xchg
push
add
adc
cmp
int
mov
cmp
adc
es
sub
xor
je
cmp
pop
xchg
pop
add
and
mov
pop
pop
inc
push
push
mov
outsb
insl
mov
sar
jp
popf
sub
lds
stos
adc
mov
lods
push
cmp
scas
sysenter
scas
sub
dec
sub
repz
mov
add
add
ds
mov
xor
hlt
js
imul
lea
ret
movsl
cwtl
xlat
pop
mov
je
out
jl
push
xor
xor
aad
add
cmpb
scas
dec
dec
jbe
mov
in
cwtl
or
sub
ror
xchg
dec
shr
push
jae
mov
and
dec
push
fidivrl
xor
into
push
xchg
loope
jo
lcall
cwtl
adc
cltd
mov
cmp
cmpsb
cmp
jg
jge
cmp
or
cmp
shlb
imul
mov
and
scas
out
xor
icebp
adc
and
shlb
inc
push
stos
stc
add
jl
sahf
out
add
das
jecxz
inc
or
add
jecxz
into
and
iret
rcll
mov
lahf
aas
add
sub
pop
int
lods
gs
jae,pn
clc
loope
push
out
gs
lcall
pop
push
pop
rcl
pop
push
xchg
outsb
aas
cmp
shrb
xchg
lods
lock
int
sbb
adc
lret
mov
jbe
sbb
cmp
imul
ja
mov
xor
or
xor
mov
loopne
cltd
cmc
and
push
push
outsl
or
mov
xchg
call
or
popa
push
mov
addr16
sbb
js
cmp
fsubp
test
pop
push
pop
cs
adc
mov
xor
pop
mov
loopw
push
or
mov
lea
ds
and
std
inc
lret
jb
std
addr16
jmp
loope
out
sub
loop
shl
cmp
leave
in
and
adc
add
mov
lods
cltd
lea
stc
push
inc
inc
aam
daa
hlt
push
jne
add
push
push
in
sub
cmp
jae
in
imull
pop
mov
sub
mov
aas
inc
mov
inc
mov
and
jnp
mov
roll
outsb
bound
add
stc
aam
push
xchg
and
loop
nop
ljmp
call
dec
loopne
pop
add
mov
sub
pop
inc
dec
sub
aas
push
adc
rep
mov
aas
xchg
pop
push
rorl
or
mov
cwtl
test
idiv
mov
jbe
call
insl
aad
ret
in
mov
aaa
xchg
int
adc
dec
lret
and
lock
mov
xchg
pushf
daa
in
add
lahf
mov
cmp
xchg
push
cs
jmp
js
inc
dec
test
loope
stc
lcall
xchg
call
test
cmp
ss
mov
fists
sbb
mov
xor
pop
imul
mov
leave
push
icebp
aaa
pusha
cmp
xor
inc
fwait
push
insl
stos
pop
jno
push
dec
or
arpl
push
xor
adc
jo
aaa
and
repz
sbb
xchg
loop
insl
push
ljmp
fstpl
push
mov
xchg
fcomps
xor
inc
ljmp
std
push
cmpl
mov
mov
dec
in
sbbb
dec
test
adc
pop
xor
leave
sub
into
push
cmpl
jmp
jns
xchg
pop
and
jge
push
pusha
stos
xchg
and
xchg
lods
popf
repz
pop
jecxz
adc
fadds
mov
push
push
rclb
sub
ljmp
lret
sbb
ds
and
jne
mov
in
lret
fwait
jo
push
xchg
rcrb
push
sbb
mov
xchg
aam
add
mov
lea
ljmp
push
jnp
pop
sahf
loop
adc
mov
roll
fldl
pop
loop
jl
sbb
xchg
jae
shll
stos
rcrb
sub
mov
xchg
lret
scas
mov
jge
dec
in
fnsave
or
in
or
pop
adc
ss
outsb
jmp
xchg
xchg
jecxz
adc
jb
jle
jge
es
cmpsb
repz
adc
adc
repnz
pop
add
lods
in
int3
add
jno
push
je
daa
dec
inc
push
ror
sub
cli
jg
fdivrl
mov
fmull
cld
mov
js
and
inc
js
pop
les
mov
imul
mov
adc
into
out
cmp
fsubrs
add
std
aaa
adc
add
adc
inc
mov
int3
fcmovnb
mov
mov
pop
out
pop
lds
adc
repz
and
fldcw
cmp
cmp
shrl
pop
out
xor
in
sbb
and
es
repnz
mov
pop
jg
ret
aaa
adc
shlb
pop
xchg
fisubl
mov
jne
pop
test
push
pop
dec
rcr
dec
sub
lds
xor
movsl
dec
xchg
cmpsb
jle
sub
push
sbb
loopne
addr16
and
add
inc
fldcw
popf
and
sbb
in
lock
stos
xchg
xchg
repnz
jo
cmpb
or
andl
pop
add
cmp
out
lods
roll
in
mov
and
jmp
out
icebp
cltd
mov
push
adc
mov
xchg
mov
test
xorb
adc
sarb
shlb
push
sub
cmp
fistps
cmc
jns
inc
add
call
and
notb
jmp
bnd
push
adc
jns
jns
xchg
js
enter
xchg
inc
pop
jb
idivb
and
mov
dec
add
push
dec
push
insl
bound
ljmp
fwait
cmp
adc
sbb
jnp
sub
lods
push
lds
lea
pop
sbb
je
sub
mov
nop
lcall
and
cmp
das
pmaxsw
testb
into
add
mov
jg
ffree
enter
lret
insl
cmp
mov
push
mov
pop
mov
mov
ss
nop
test
sub
ljmp
xchg
inc
std
xor
aas
inc
add
cwtl
push
popa
icebp
pop
test
cli
shr
push
lods
idivb
out
jecxz
push
test
pop
cmpsl
lcall
inc
xchg
mov
faddp
or
fiadds
imul
push
mov
sub
sti
jbe
ret
xchg
leave
insb
test
repz
jnp
mov
mov
push
dec
mov
fmulp
pusha
sub
fistpll
adc
repz
or
lock
pushf
mov
fucomip
rorb
xor
pop
popf
divl
cmp
push
lea
xor
jno
cmovbe
inc
mov
pop
aad
dec
xchg
test
pusha
push
mov
mov
popf
cli
or
mov
sbb
fisttpll
fsts
cmc
mov
cld
xchg
adc
in
rorb
lock
inc
mov
xor
xchg
lcall
fstp
jnp
pop
leave
xchg
daa
mov
sarb
mov
mov
cli
sarb
push
ljmp
dec
cltd
xor
sbb
mov
mov
fistps
mov
push
mov
call
insl
ljmp
dec
or
sahf
mov
xor
lods
adc
or
mov
sti
xor
lcall
mov
pusha
stos
mov
sub
cmp
pushf
mov
push
or
sbb
pop
add
xchg
into
ds
jg
call
and
mov
xchg
and
nop
inc
lahf
push
js
and
cmp
in
stc
sbb
sbb
add
rorl
jbe
push
dec
mov
fstps
jp
cld
xchg
push
mov
adc
or
pop
inc
ds
or
rorl
out
cli
jbe
cs
xchg
bound
push
sub
mov
mov
nop
pop
jns
push
jg
push
scas
outsb
ret
dec
insl
mov
in
dec
mov
aad
xor
cltd
fistps
sbb
push
pop
cmpsb
mov
xor
scas
jne
out
insb
jae
push
inc
adc
lcall
mov
mull
mov
mov
mov
in
push
repnz
xchg
dec
rclb
mov
repz
or
sbb
cwtl
mov
idiv
and
test
sbb
mov
stos
movsb
inc
add
mov
xor
add
mov
jge
out
dec
jecxz
mov
mov
push
jl
push
shl
aad
std
sbb
sub
mov
mov
sbb
or
loop
test
pop
inc
lret
int
xchg
gs
ficompl
jecxz
ja
dec
dec
adc
ret
and
xlat
gs
inc
lret
jp
cmc
mov
push
mov
add
mov
add
pop
xor
cwtl
inc
popf
xor
icebp
dec
mov
subl
sub
pop
xor
je
pop
add
shr
xor
cmp
arpl
cmp
cmpsl
cmpsb
pop
mov
xorb
mulb
loope
call
movsb
jle
jecxz
and
xchg
sahf
cmpsl
sarl
stos
add
out
sti
add
scas
cmp
pop
cmpsb
xor
lock
jmp
add
mov
push
rcr
pop
sbb
roll
jae
sub
scas
cmc
sbb
iret
mov
adc
imul
adc
mov
xchg
std
push
sahf
popf
cmpb
popf
subl
sbb
pop
ljmp
arpl
pushf
cmp
daa
cld
sti
in
imul
dec
pop
xor
and
in
movsb
pop
cmp
imul
fwait
sti
push
cmpsb
enter
pusha
les
and
cli
or
data16
ret
xchg
push
xchg
movsb
arpl
stos
fs
sti
xchg
loope
xchg
sarb
pop
and
or
dec
mov
insl
inc
scas
insb
fs
lret
inc
popf
imul
pop
movsb
jns
shl
aas
mov
jg
xor
push
ljmp
lret
jmp
mov
stc
pop
movsb
push
xor
xchg
pop
push
lret
inc
aad
and
cmp
ret
or
push
mov
stos
sub
rcr
mov
jb
mov
xor
mov
out
or
lcall
push
cmp
xorl
into
movsb
jae
in
cmp
movb
mulb
aaa
cmc
nop
addr16
cmpsl
jae
push
in
test
insb
leave
mov
das
cmp
add
test
icebp
int3
imul
push
lds
sahf
ret
fdivrl
stos
test
xchg
mov
mov
in
leave
cli
out
hlt
cmp
fdivrp
jne
jp
out
pop
std
jbe
imul
aaa
jecxz
out
adc
mov
or
jno
cmp
hlt
js
sbb
aad
jmp
adc
mov
mov
push
push
and
xchg
cmp
in
jbe
mov
fwait
sub
xchg
cmp
ja
ss
scas
lds
mov
jnp
add
std
jae
jmp
scas
imul
sub
faddl
movsl
orb
imul
mov
push
xchg
stos
dec
jg
test
cmp
jl
mov
orl
ror
cmp
cmp
adc
push
inc
stos
shll
and
and
mov
jns
add
xor
jns
aad
popf
adc
jo
loope
mov
in
std
adc
lret
xchg
test
ss
insb
add
push
movsl
cltd
stos
sbb
repnz
sbb
test
sub
test
popa
popa
in
cmpsl
dec
pop
xchg
mull
jb
xchg
addl
cmp
lods
or
dec
dec
iretw
daa
push
pushf
sahf
xor
fdivr
adc
loopne
jne
push
sbb
pusha
adc
pop
xchg
mov
jbe
cmp
or
je
dec
imul
adc
cwtl
cmpsl
adc
xor
jo
popf
adc
sub
ja
sbb
jae
dec
sub
mov
sbb
xor
jne
test
loopne
mov
stos
dec
adc
mov
divl
dec
cmp
jmp
pop
mov
insb
adc
push
xor
push
insb
shrb
pushf
stos
aam
add
jg
mov
xor
es
dec
mov
and
inc
imulb
pop
dec
push
dec
repz
mov
fistpll
mov
jbe
bound
mov
jmp
mov
pop
das
sbb
jno
fucomip
rclb
lods
or
push
cs
fildl
and
loop
cmp
and
das
pushf
adc
scas
cmp
push
add
dec
ja
pop
clc
testb
fdivrl
sbb
mov
xchg
jno
call
imulb
test
ja
inc
push
mov
mov
mov
mov
inc
sub
les
mov
outsb
or
pop
ss
pop
subl
mov
rcr
add
xor
and
inc
hlt
shll
into
iret
or
hlt
in
sti
xchg
andl
sti
jbe
lock
out
xor
mov
sub
out
adc
lea
and
mov
aam
xchg
push
aas
insl
cmp
scas
push
xchg
cmpb
addr16
ret
cltd
out
mov
jl
and
adc
pop
test
imul
movsb
enter
or
fwait
data16
ret
test
push
xchg
std
shl
pop
ds
mov
mov
sbb
into
adcb
cmc
push
sarb
cld
xchg
mov
insl
or
xchg
pop
outsb
jp
int
pop
in
and
es
arpl
lock
mov
daa
mov
push
in
xor
cltd
stc
sti
imul
addr16
mov
cmp
xor
mov
jnp
mov
pinsrw
adc
mov
imul
cmp
xor
movsl
inc
jo
mov
push
mov
stc
push
pop
lcall
dec
and
fnstenv
sbb
int3
out
adc
gs
pusha
stc
dec
pop
gs
aaa
cmc
push
in
jmp
popa
dec
cmp
adc
movsb
add
pop
out
cld
movsl
aad
adc
jo
pop
fidivrl
rcll
aad
outsl
add
movsb
push
pushf
aaa
out
or
push
mov
movsb
fcomps
ljmp
repz
and
rcll
pop
pop
scas
jl
call
add
daa
or
pop
in
daa
outsb
fwait
roll
sahf
dec
insl
lods
and
xor
mov
jle
cmpsl
cltd
push
outsl
dec
int
and
dec
loope
mov
sbb
hlt
xchg
fidivrl
inc
pushf
imul
cmpsb
daa
inc
sbb
sub
dec
or
jg
push
or
lcall
sbb
mov
sti
addr16
mov
dec
dec
mov
clc
xchg
hlt
rcrb
stos
cltd
fldcw
mov
mov
adc
lock
outsl
pop
insb
pop
imulb
pop
shll
dec
xor
mov
xor
add
mov
mov
fiaddl
decl
movsl
jnp
stos
lahf
test
mov
scas
hlt
xor
push
mov
adc
xorl
inc
or
mov
mov
adc
pop
pop
pop
inc
jb
jae
xor
enter
adc
movsl
or
push
addr16
ds
cmp
mov
adc
or
pushf
in
int3
mov
inc
mov
sub
and
cmc
decb
mov
jg
sbb
mov
pop
icebp
lahf
add
cwtl
add
jp
push
jnp
xor
fidivrl
inc
and
arpl
lock
cmpsb
xor
xchg
push
pop
mov
lods
pop
mov
es
xchg
and
and
je
cmpsb
add
lret
add
inc
lahf
inc
adc
inc
js
sbb
pop
sti
sbb
scas
inc
sub
and
adc
stc
inc
nop
pop
out
cwtl
mov
daa
insb
mov
xchg
sti
xchg
push
push
lds
mov
dec
xor
or
mov
jl
insb
out
mov
cmpl
mov
scas
arpl
push
mov
stos
lock
sbb
and
loopne
adc
addr16
popa
stc
mov
testl
pop
mov
mov
addr16
mov
out
loopne
cmp
mov
inc
mov
mov
mov
mov
dec
push
xchg
dec
rcll
and
push
dec
clc
call
test
mov
mov
mov
bound
fucomip
subl
fistpl
xlat
lock
push
fidivrs
popw
out
stos
jae
cmp
or
lret
js
pop
and
add
or
push
fwait
ja
xor
pop
in
cmp
scas
neg
lods
call
pop
fwait
aam
jge
xor
scas
stos
aad
repnz
xchg
in
push
mov
or
test
stos
mov
imul
xchg
ret
push
enter
lods
aas
inc
leave
add
add
scas
pop
orl
mov
push
aad
rcr
and
mov
inc
mov
pushf
adcl
rcrb
clc
fs
shl
cmpsl
cwtl
cmp
cltd
cmp
out
jle
xor
addb
push
ds
in
mov
js
mov
movsl
cmpsb
push
adc
fsts
jno
repz
ljmp
lret
arpl
lds
xor
aam
ss
cmpsl
stos
pop
xchg
dec
dec
inc
xchg
add
and
orb
arpl
stc
mov
inc
pop
inc
sub
xlat
jge
imul
sbb
sahf
lock
xchg
ficoml
pop
xor
and
xchg
cmc
pop
repnz
outsb
aam
jo
xabort
xchg
mov
js
jb
and
cmc
fs
mov
cmp
lcall
add
cmp
mov
add
push
sbbl
lahf
lds
int
adc
pop
pop
lds
mov
in
pop
outsl
xchg
lods
pop
sbb
pop
pushf
data16
push
sub
in
dec
cmp
mov
ss
cmp
xchg
mov
pusha
mov
and
xor
clc
pop
cli
lret
sbb
ret
movsb
insl
out
cmp
aam
fdivs
pop
lock
mov
int
loopne
cltd
out
pop
adc
pop
mov
fmulp
ret
xlat
pop
fistps
nop
insl
dec
jb
out
pop
insl
lret
mov
jbe
pop
dec
pushf
xchg
ds
fimuls
mov
jp
pop
jp
and
sbb
pop
or
jle
lds
jmp
loopne
je
xchg
jae
sbb
xchg
sbb
test
dec
adc
cltd
mov
push
add
jns
ror
jns
repz
mov
pop
push
and
dec
sbb
in
push
mov
ja
insl
sub
movb
mov
out
push
aam
icebp
jmp
add
movsl
fsubr
xor
mov
push
popf
imul
es
fnstenv
xchg
pop
dec
pop
mov
fcoms
lret
dec
addr16
inc
cld
icebp
or
sbb
out
sarb
lcall
pop
test
rorl
dec
and
test
stos
jl
sub
add
pushf
js
sub
push
jne
adc
xor
xchg
pushf
adc
lahf
xor
fcmovbe
stos
mov
scas
rolb
push
movsl
xlat
fisttps
jp
dec
rolb
mov
in
into
or
push
inc
aaa
int3
mov
inc
fbld
sub
lds
lret
lds
fbld
lock
test
pushf
ja
aas
loop
xor
mov
jg
mov
mov
sub
movsl
push
mov
cltd
lock
fsubs
pop
aam
adc
dec
cltd
cmp
push
xor
xchg
mov
insb
mov
and
cmp
mov
aas
jnp
push
jge
shlb
aaa
leave
or
cmpsl
fimull
mov
pusha
xchg
fisttpll
into
jge
hlt
sbbb
dec
repz
cmp
mov
add
arpl
daa
push
std
xor
mov
stos
jge
cmpsl
shrb
das
pop
ds
icebp
add
sbb
mov
mov
mov
mov
pop
imul
inc
lret
rcll
sahf
icebp
jecxz
xchg
outsl
add
cmc
repnz
and
mov
mov
mov
loopne
sbb
mov
xchg
bound
sub
shr
in
movl
lcall
sub
add
out
scas
adc
jle
or
in
out
fmull
or
mov
fs
add
jmp
sbb
add
mov
dec
fadds
sub
mov
pop
aam
cmpsl
andb
adc
hlt
fisttpll
sbb
fwait
aaa
or
ljmp
push
mov
mov
cltd
aam
sahf
add
scas
mov
mov
sti
das
enter
mov
es
xchg
lret
test
mov
fscale
mov
pop
je
inc
rclb
xchg
adc
mov
mov
aam
pop
adc
shr
sub
mov
bound
pop
and
arpl
lcall
fcmovu
jb
xchg
and
jecxz
mov
aaa
fbld
adc
adc
pop
test
mov
cmp
repz
imul
push
aam
int3
sahf
outsb
scas
js
fisubrs
pop
mov
dec
adc
mov
dec
ficompl
xor
cmp
loopne
fstps
out
lock
add
mov
jg
testb
jne
mov
cmp
loopne
or
lods
jo
cmp
cli
push
sahf
push
mov
sbb
addr16
jecxz
xor
arpl
mov
cmc
daa
xchg
sbb
out
test
test
gs
dec
xchg
aas
adc
xor
cmpsl
iret
adc
loope
cmovle
xchg
imul
sbb
xlat
in
mov
cltd
xor
mov
mov
xchg
mov
adc
push
xor
inc
data16
inc
push
adc
daa
push
nop
mov
ljmp
in
scas
stc
pushf
mov
adcl
jns
fistpll
bound
mov
addr16
and
add
sub
in
cmp
cmp
outsl
ljmp
out
mov
arpl
pop
call
js
add
inc
add
scas
loope
ss
pop
aad
xor
in
push
scas
mov
mov
arpl
inc
imul
popf
insl
cmpb
cli
or
dec
lret
or
lods
add
pop
hlt
sbb
fsubrp
mov
aas
popf
hlt
rorl
data16
pop
mov
test
adc
or
xchg
sarl
mov
jmp
xor
push
lret
mov
cmpsb
xorb
ror
jg
sbb
insb
dec
int3
inc
lret
mov
les
or
adc
testb
int3
or
lahf
insl
pop
adc
aaa
aaa
out
xor
inc
lcall
xlat
jle
je
pop
mov
idivb
cmp
xadd
xor
cmpsl
scas
xlat
mov
pushf
cmp
xchg
xor
out
xchg
out
pushw
mov
arpl
dec
call
add
lret
aaa
mov
xchg
inc
dec
or
pop
inc
lcall
imul
fwait
mov
addr16
jle
xchg
outsb
or
sub
fcoms
cmp
or
adc
and
xor
fdivr
or
mov
mov
xorl
sub
es
push
outsl
mov
mov
inc
cld
dec
mov
ljmp
inc
in
mov
out
aad
push
mov
imul
iret
imul
or
pusha
insb
in
sub
pop
ret
xlat
insl
pop
repnz
rorl
jmp
xchg
cmp
push
xor
pop
jbe
pushf
incb
pop
add
sbb
sub
lods
dec
inc
outsl
mov
push
add
fwait
lea
and
jo
cmpsl
adc
cmp
sbb
mov
xchg
pop
out
lock
sub
in
scas
test
inc
xchg
notl
and
pop
jge
int3
loopne
mov
jmp
push
sarl
sub
lahf
test
push
mov
cld
fsubs
pop
cmpsb
and
push
in
test
popf
dec
xlat
pop
fists
pop
inc
cmp
pop
ret
out
pusha
leave
sub
add
pop
jl
mov
sub
les
das
xchg
cmp
pop
jnp
add
mov
xchg
xchg
data16
insl
sub
popa
dec
mov
cs
xchg
pop
dec
jae
lods
loopne
sbb
inc
push
fsub
jnp
push
sub
mov
inc
jecxz
inc
les
jecxz
mov
push
ja
jl
or
test
cltd
xor
mov
mov
push
push
subb
mov
aad
nop
or
cltd
out
lret
or
imul
out
fbld
hlt
xchg
add
mov
scas
in
xchg
in
adc
je
sub
jb
ss
jb
movsb
cmc
shlb
out
cmp
ja
test
jecxz
lcall
cli
popf
enter
fdivrs
cmc
pushf
jne
jo
or
rcll
dec
ja
sub
mov
outsb
out
sub
dec
lahf
dec
arpl
push
inc
pop
xchg
ja
stos
insl
sub
mov
push
and
cltd
push
push
mov
inc
rcll
std
pop
stos
sbb
push
pop
mov
cld
addb
and
jo
lods
jbe
in
js
pop
pushf
je
cmpsb
jmp
out
adc
pop
pop
clc
lock
scas
xchg
fcmove
repz
xrelease
xchg
and
cwtl
sti
xor
imull
notb
jo
adc
addr16
and
mov
push
adc
jno
fildl
jp,pn
js
xchg
add
mov
dec
cmp
dec
mov
cmp
pop
mov
iret
sbb
pusha
ljmp
fs
test
jg
popa
pop
imul
cmpsl
fiadds
std
and
add
lcall
imul
lret
pop
icebp
dec
add
sbb
cwtl
leave
lcall
xor
or
jge
push
es
or
cmp
outsb
hlt
movsl
sbb
push
dec
push
clc
popa
jns
mov
add
sub
cwtl
mov
ss
mov
iret
cmpb
mov
mov
fwait
sub
icebp
sbb
jb
in
popa
movsb
jmp
cltd
das
pop
fstl
xchg
adc
arpl
cmpsb
jbe
fadds
xor
movsb
or
pop
test
inc
clc
or
jnp
popf
dec
mov
pusha
xchg
jnp
out
rcrl
push
fisttpll
adc
inc
jmp
pop
aas
lods
fldt
mov
lret
jbe
notl
cwtl
stos
sbb
test
inc
sub
mov
xor
mov
adc
pop
mov
cmpsb
xchg
inc
mov
cmpsb
push
add
sbb
cmp
je
icebp
dec
pop
pop
sub
mov
push
cmpsb
dec
add
jp
pushf
sahf
das
add
inc
cmpl
push
pop
cmp
clc
jecxz
xor
ficoml
popf
test
lds
pop
or
mov
pop
loope
add
les
pop
mov
test
in
pop
jae
iret
test
int
jno
je
stos
mov
loopne
enter
jbe
cltd
adc
or
hlt
mov
cmp
mov
mov
out
lods
pop
sti
je
cld
not
or
shlb
xchg
popf
dec
nop
sub
sub
mov
inc
mov
jl
lret
jno
add
pop
out
sarl
fdiv
cmp
mov
loopne
dec
lea
icebp
sbb
je
in
iret
push
fs
jge
cmc
jg
xor
pop
mov
pop
pause
stos
push
es
fsts
dec
into
or
push
sbb
aaa
divl
gs
lock
frstor
push
add
lods
rcrl
lahf
dec
add
xchg
leave
cmpsb
jl
es
inc
int3
xor
in
imul
repnz
adc
dec
rcr
mov
mov
fs
mov
inc
lods
inc
sbb
pushf
sub
and
and
jo
mov
cmp
das
jge
xchg
outsl
mov
sbb
nop
shll
jo
ss
into
push
mov
push
adc
shlb
ret
sub
lahf
xlat
aad
mov
xor
pop
filds
shr
cli
mov
sbb
shrl
cmp
in
fnsave
cmpsl
pop
ss
xlat
add
jo
and
shll
cwtl
lock
xchg
mov
cmp
pop
and
mov
push
xchg
xchg
adc
imul
xchg
rcr
sbb
pop
mov
push
or
ret
cmp
adc
dec
jnp
movsb
nop
sti
fwait
push
pop
jmp
sbb
sub
filds
dec
sbbl
bound
lcall
jae
fmuls
or
insb
inc
add
cld
test
adc
fsubs
mov
lcall
mov
in
or
jne
mov
rorb
mov
jne
jne
xor
pushf
arpl
mov
sub
mov
fidivl
fdivs
out
jo
stos
inc
mov
imul
inc
and
movsl
sub
int
mov
mov
inc
push
and
pop
outsb
fs
add
jmp
lock
ja
and
xchg
jo
cmpsb
cltd
cmp
mov
push
je
push
test
mov
cmp
aas
push
and
mov
lds
sbb
push
push
pop
add
cmp
lret
dec
xlat
push
mov
push
les
aas
sbb
cmp
cmp
inc
jg
add
sub
dec
aam
pop
sbb
jb
iret
sbb
dec
das
ds
mov
adc
xchg
jns
pop
mov
push
cmp
mov
test
mov
xor
out
xor
pop
lcall
xchg
arpl
sbb
xchg
sbb
xchg
push
fcoms
ljmp
into
push
adc
dec
or
push
aad
mov
enter
jge
cmp
daa
jb
cmp
mov
in
shll
test
adc
nop
jns,pn
adc
add
je
mov
jo
add
insl
popa
push
repz
faddp
ficoms
sub
je
aaa
sbb
lret
lock
sahf
std
fadds
pop
aas
and
shrb
mov
test
decb
iret
movsb
and
and
jmp
js
xchg
test
call
mov
xor
mov
lahf
int
mulb
test
repz
enter
cmp
js
mov
pop
mov
cmp
push
jno
sbb
mov
inc
and
test
or
push
push
bound
mov
push
and
and
arpl
and
loopne
jle
scas
pop
xchg
lahf
ret
iret
mov
sbb
arpl
dec
filds
divb
roll
pop
xchg
jl
jae
cmpsb
int3
jge
in
inc
and
mov
loope
mov
imulb
xor
pop
sbb
adc
cs
mov
xor
pop
iret
pop
lret
in
js
cld
add
inc
mov
sbb
mov
orl
add
scas
mov
pop
bound
ljmp
int3
mov
xor
inc
mov
mov
loopne
sub
pop
arpl
test
jp
and
js
pop
dec
jnp
jne
push
mov
or
mov
mov
lds
sbb
add
cld
stc
sbb
mov
sahf
mov
inc
lods
int
sub
sbb
mov
inc
mov
addr16
jb
adc
dec
mov
hlt
mov
mov
xchg
pop
pop
cmp
cmpsb
pop
pop
std
ret
rorl
test
sbb
mov
or
fsubl
push
aam
mov
dec
test
mov
push
out
pop
pop
cwtl
jle
dec
pusha
adc
adc
dec
jne
dec
mov
cmp
mov
jnp
pop
mov
sahf
pop
leave
cmp
jnp
test
cmp
sub
push
cld
in
sbb
lea
imul
lcall
mov
fldt
mov
ljmp
add
fwait
adc
push
repnz
cmp
and
cmp
add
leave
jge
cwtl
es
push
cmpb
pop
mov
stos
xor
pop
xchg
pop
sahf
sub
mov
sub
sti
push
xor
ljmp
aas
pop
ljmp
test
mov
ss
int3
adc
mov
and
pop
mov
xchg
jnp
pop
cmp
stos
xchg
iret
cmpsl
sub
jb
mov
add
scas
das
mov
test
push
lahf
mov
dec
xchg
lret
sub
negb
cltd
inc
adc
inc
adc
lahf
mov
loope
jl
xchg
arpl
jns
loope
jo
sbb
in
sub
ret
imul
sbb
insl
shl
pop
mov
gs
ret
jecxz
fucomip
fists
popf
mov
shlb
sub
lahf
ljmp
sub
sub
cmp
shll
aaa
sarl
gs
aaa
or
dec
cld
aaa
imul
add
inc
aam
int3
leave
testl
daa
xchg
mov
pop
ss
sbb
int3
dec
sti
insb
dec
in
stos
jecxz
outsl
sub
subb
jno
cltd
sti
or
mov
sbb
sbb
or
stos
js
pop
int
push
sbb
lds
pusha
lods
sbb
mov
fnsave
pop
frstor
cwtl
xchg
fisubrl
filds
fucom
xchg
pushf
iret
test
sarl
push
test
idivl
movsb
ret
cmp
pop
pop
pop
negb
in
and
pop
or
repz
mov
imul
adc
mov
call
enter
mov
inc
xor
and
inc
xchg
stos
jo
mov
rcr
xchg
dec
sbb
push
xchg
inc
adc
leave
lcall
in
inc
inc
pop
testb
iret
nop
cmp
mov
call
int
xor
push
jl
mov
push
adc
loop
jnp
inc
inc
xchg
mov
add
cmp
iret
xor
imul
hlt
insb
push
stc
stos
sar
dec
movsl
les
dec
scas
fldcw
fs
cmp
in
xlat
imul
add
push
xorb
pop
lcall
adc
fisubl
push
int3
fidivrl
shll
mov
mov
addr16
mov
lea
inc
xchg
notl
jno
and
cs
xchg
jae
sti
xor
push
add
push
jle
popa
int
add
mov
inc
les
out
mov
adc
dec
into
ja
mov
pop
out
dec
cli
xchg
cmp
je
lds
das
sarb
push
jae
and
push
pop
loopne
insl
add
mov
in
lahf
popa
ja
and
inc
fisubrs
in
mov
xchg
loope
call
pop
xchg
stc
xchg
dec
sbb
xchg
cmp
ret
sahf
filds
mov
in
bound
dec
imul
mov
outsl
xchg
push
nop
ret
mov
jl
cmp
inc
pop
and
add
repnz
shr
jnp
cmp
mov
rolb
mov
mov
lods
mov
sahf
mov
and
out
xchg
add
pop
dec
movsb
es
sub
pop
fisubl
idivb
sub
add
inc
shlb
sbb
or
push
or
xor
lret
xchg
test
add
rolb
push
iret
decl
inc
call
bound
pop
lret
jae
aas
push
sti
or
enter
je
cs
pop
jnp
pop
mov
jo
sub
xchg
cmpsb
fdivs
or
mov
ss
jmp
inc
mov
sub
test
fldl
insl
mov
in
dec
negb
imul
jne
adc
and
test
aad
shrl
xor
scas
fstpl
icebp
testl
mov
test
and
fs
imul
xbegin
imul
add
jo
mov
xchg
jbe,pt
mov
jecxz
adc
or
jp
iret
filds
scas
shrl
bound
out
pop
jge
out
jmp
daa
adc
es
dec
pop
stos
or
cld
aad
mov
adc
pop
xor
iret
pusha
dec
pop
jp
xor
sti
jle
dec
in
gs
xor
adc
insl
or
imul
jg
je
aaa
call
shrl
rorb
rol
lcall
jbe
outsb
mov
pushf
cmpsb
cld
push
pop
mov
sbb
int
push
and
push
fwait
or
jb
cltd
xor
gs
subb
jns
mov
dec
hlt
fistl
dec
push
ja
shll
mov
jmp
cld
fcompl
insl
bswap
clc
lahf
jnp
mov
cmc
push
mov
addb
adc
lods
js
call
mov
push
jg
sbb
bound
pop
movsb
pop
mov
push
cmp
loopne
enter
test
mov
cmp
pop
mov
cltd
das
adc
loopne
or
push
fimull
mov
lret
js
push
mov
adc
enter
scas
mov
mov
cltd
adc
lahf
jbe
inc
jecxz
testl
jno
xchg
leave
xlat
ret
arpl
cltd
inc
dec
pop
jno
insl
and
outsb
lea
icebp
sbb
add
dec
sbb
iret
cwtl
xor
sti
roll
adc
mov
mov
cmpsb
inc
adc
cmp
add
subb
nop
je
inc
cmp
xor
bnd
insl
add
pop
or
test
inc
or
js
mov
les
jbe
in
pop
jg
stos
std
adc
pop
cmpsb
xchg
mov
sbb
lret
and
xlat
dec
mov
xchg
in
insl
cmp
and
sbb
rcr
icebp
push
inc
lret
fstpl
fldcw
stos
cmp
mov
push
inc
adc
jge
call
fcomps
pop
xor
jno,pt
cmp
cmpsb
test
inc
xorl
ret
fs
negb
pop
cs
cmp
scas
push
xchg
bound
rcl
cs
std
inc
lock
scas
mov
mov
and
mov
aas
rorl
stos
sbb
sti
scas
push
push
push
cli
dec
inc
inc
xor
movsl
and
push
adc
mov
mov
cmp
inc
mov
scas
add
es
sbb
leave
aas
fisttpll
sbb
loop
mov
add
shlb
insl
cs
jge
jo
cld
pop
inc
mov
mov
sub
or
mov
bound
sub
sub
pop
sub
test
or
sbbl
jmp
iret
xchg
fcompl
pop
sub
fsubrp
mov
mov
enter
lea
out
cmpsl
jp
adc
mov
cmc
or
sbb
or
stc
scas
int
cvttps2pi
mov
in
xor
stc
cmp
loop
daa
adc
mov
es
adc
jne
jle
pushf
push
jmp
orb
divb
mov
hlt
push
or
lcall
xchg
xor
sarb
lds
out
and
xchg
stc
sbb
mov
test
adc
ljmp
inc
inc
movhps
dec
sub
loope
repz
aam
std
pop
and
lret
fwait
jae
fldl
arpl
popf
cmc
in
and
dec
sbb
stos
subl
loop
xorl
scas
adc
outsb
pop
pcmpgtw
aad
je
inc
push
sar
and
sti
dec
or
jne
dec
lds
dec
jmp
sub
jp
dec
je
pop
ja
xchg
out
sub
cwtl
dec
mov
xchg
sub
fsubp
stos
lea
sbb
icebp
dec
sub
xchg
aad
push
cmp
insb
jns
add
fdivl
fxam
or
and
cwtl
fidivl
mov
popa
dec
loope
sub
add
pop
pop
jns
loop
dec
and
movsb
pop
out
int3
add
lret
add
out
mov
stos
mov
es
or
es
jb
dec
rcll
xchg
adc
loopne
test
mov
nop
jmp
jp
out
shll
dec
ja
or
fiaddl
rcr
push
push
mov
mov
sub
aad
mov
dec
mov
int
mov
lret
dec
cmp
push
repnz
and
inc
inc
jne
ja
fnstcw
dec
jb
fcoms
sbb
jo
stc
pop
xlat
xchg
fmuls
lret
and
shll
arpl
subb
stc
push
leave
mov
xchg
sbb
adc
jmp
jle
cmpsl
aas
sbb
fdivr
xchg
std
jne
jecxz
xchg
add
push
stc
pop
out
inc
inc
pop
dec
xchg
pop
adc
and
or
xorl
dec
in
add
test
and
icebp
mov
fdivrs
stos
imul
and
mov
sbb
inc
xchg
sub
cmp
icebp
shl
inc
fld
xor
movsl
movsb
fsts
aam
xor
push
sbbb
jns
mov
xchg
pop
dec
insb
dec
cld
into
jge
sbb
xchg
xchg
add
mov
outsl
jp
dec
les
push
adc
loop
push
bound
sbb
imul
imul
mov
js
jg
add
push
mov
insl
jl
lret
cmpb
and
leave
xchg
loope
jb
dec
daa
pop
pop
push
ljmp
outsb
test
xchg
popa
jge
mov
mov
mov
mov
xor
cltd
xor
pop
addr16
iret
pop
clc
push
dec
or
cmpb
push
cmp
insb
imul
and
aas
cmc
dec
cmpsl
aad
jne
xchg
ret
adc
arpl
rorl
pushf
into
pop
push
mov
cmpsb
xchg
adc
aaa
sahf
fs
add
packsswb
je
cs
lods
inc
lret
sub
cmp
hlt
pop
outsb
ljmp
test
or
jnp
push
das
notl
cmpsb
pop
notl
and
repz
test
stos
adc
sahf
inc
sbb
test
xchg
mov
mov
xchg
cmp
js
shll
clc
cld
push
dec
nop
das
repz
out
into
leave
jmp
bound
lods
mov
nop
jo
or
mov
xchg
push
mov
mov
adc
nop
inc
mov
cld
loop
test
and
pusha
es
jp
xlat
xchg
add
loopne
mov
mov
movsl
mov
push
mov
pushf
and
repz
or
push
sub
adc
sub
pop
bound
push
ds
fwait
leave
sbb
fnstenv
out
jmp
bnd
jb
icebp
fsubl
inc
scas
jb
mov
and
rolb
out
adc
cmp
add
sub
push
popa
daa
sub
mov
or
repz
ss
lds
jno
fucompp
leave
xchg
inc
or
call
popa
xor
jno
ja
sub
orb
les
hlt
push
repz
xor
orl
hlt
adc
cmp
mov
loop
or
outsl
or
dec
test
test
mov
repnz
call
inc
mov
sub
cmpsb
dec
bound
lods
cmp
mov
xor
stos
pop
push
loopne
adc
jbe
leave
or
pop
aaa
push
icebp
mov
add
enter
iret
lahf
popf
repnz
test
sub
push
add
in
pusha
out
sub
arpl
pushf
inc
mov
in
dec
je
mov
clc
in
ds
mov
es
pop
jp
data16
pop
cwtl
ret
and
mov
clc
lahf
xor
mov
sub
mov
and
xor
and
push
popa
add
gs
bound
jg
push
or
into
xor
into
jno
mov
imul
mov
or
adcl
xor
rcrl
imul
inc
into
sub
xchg
cli
jle
vmread
add
lret
jmp
dec
js
cs
enter
mov
dec
push
scas
pop
jl
mov
mov
hlt
lods
sub
xchg
inc
out
test
mov
sbb
mov
sub
leave
popa
mov
in
fwait
and
test
hlt
jl
inc
in
jns
pop
mov
fldenv
push
xchg
cmc
sub
in
pop
gs
mov
iret
mov
call
stc
sbb
mov
fcoms
inc
adc
shl
test
testl
mov
aad
shlb
shr
mov
flds
and
sbb
out
adc
pop
jnp
or
filds
and
mov
mov
adc
jg
lods
cld
out
xchg
dec
sbb
jb
icebp
inc
bound
lods
xchg
es
imul
cld
pushf
inc
insb
xor
imul
fwait
mov
shll
pop
xchg
js
arpl
faddl
into
dec
outsb
stos
es
orb
push
pop
call
mov
jo
dec
hlt
mov
pop
out
push
into
mov
shll
out
jb
mov
iret
and
dec
call
inc
push
jno
in
lcall
dec
iretw
and
adc
out
push
push
sub
xchg
and
mov
test
pop
inc
aam
jno
push
sub
xchg
push
dec
sub
int3
add
pop
xlat
adc
add
sub
push
test
sahf
sbb
outsb
lcall
cmc
gs
sti
sub
fsubs
ljmp
imul
movsl
std
mov
cltd
ret
enter
ficoml
fisubs
mov
push
repnz
sbb
outsl
dec
stos
test
lret
cmp
aaa
adc
pushf
popa
jge
xor
xchg
je
mov
ljmp
stc
lods
les
daa
mov
adc
mov
daa
dec
sub
dec
mov
pop
cmp
movsl
xchg
sub
ds
jb
xchg
pop
add
popf
std
lahf
xchg
xchg
pusha
inc
aaa
push
push
xor
ss
adc
dec
sub
jecxz
shl
xchg
mov
mov
adc
push
mov
cwtl
lret
or
xor
das
or
sub
sub
jbe
lds
inc
sbb
inc
test
cmp
jbe
lret
sbb
repz
divb
sub
bound
stos
push
aam
stc
cmp
cmp
fsub
rclb
jmp
rcll
or
lds
xor
jnp
mov
ret
cwtl
jne
xchg
or
push
cmp
enter
or
sub
and
mov
jae
or
jb
sbb
push
int3
mov
adc
mov
sahf
sbb
repnz
xchg
cwtl
mov
loopne
xor
dec
aam
scas
xor
mov
shlb
push
gs
and
aam
movsl
or
loopne
mov
mov
mov
dec
and
mov
addr16
js
push
in
fisttpl
int3
test
mov
cmova
pusha
inc
cld
cmp
mov
inc
cltd
dec
xchg
add
fs
inc
sbb
sub
ds
call
pushf
jl
int3
ret
sbb
adc
scas
pop
jae
adc
sub
cmc
jno
sub
fnstenv
adc
jne
push
push
fwait
dec
jmp
xlat
repz
sbb
push
push
xor
std
test
mov
pop
or
xchg
in
scas
bound
out
or
cltd
jl
and
xor
out
and
dec
adc
das
sbb
add
insl
scas
ss
pushl
outsb
les
cmp
pop
js
jmp
int
cmp
mov
cmp
add
ret
insl
or
cmp
pop
sbb
sub
imul
add
lcall
enter
mov
dec
lret
mov
push
dec
icebp
sbbb
add
push
xchg
mov
xchg
inc
mov
sbb
push
int3
xchg
inc
sbb
mov
inc
call
testb
das
popf
ss
xor
je
rcrb
push
or
pop
or
sub
xor
cltd
imul
push
mov
adc
out
inc
fidivl
jne
inc
js
fs
in
xchg
cmp
pusha
out
or
xchg
lods
int
ficoms
jbe
inc
and
lock
in
scas
lret
jl
fnstenv
fcoms
xchg
sarl
lret
jns
inc
test
jg
pop
cmp
xchg
mov
aas
ja
jo
mul
sbb
fstpl
hlt
lds
call
out
cmpl
dec
push
sbb
dec
loope
inc
jo
and
add
imul
dec
daa
lds
mov
and
and
dec
mov
sbb
rorl
jbe
rol
fistps
rol
mov
out
movsb
pop
dec
xchg
addr16
into
adc
jne
pop
dec
cmpsl
add
je
or
in
sub
push
adc
fiaddl
outsb
pop
cmpsl
mov
push
sub
in
popa
inc
pusha
std
imul
mov
push
push
sub
push
fucomi
in
jg
cmpsl
pop
popa
dec
cmp
and
sub
test
fwait
and
pop
add
rcr
icebp
sarb
inc
mov
dec
repnz
std
mov
mov
dec
mov
incl
jge
fstps
mov
hlt
aad
cmp
jae
outsl
mov
arpl
ds
imul
jecxz
push
xor
std
and
mov
lods
cltd
or
sub
mov
mov
out
nop
fsubrp
inc
shll
enter
fwait
dec
clc
add
or
mov
stos
lods
test
jecxz
and
xorb
mov
mov
adc
roll
sarb
xlat
cmp
add
out
inc
xchg
popa
mov
xchg
xchg
or
mov
lods
ljmp
pop
mov
call
sbb
pop
sarl
pushf
xchg
pop
push
repnz
cs
cmovb
sahf
cmp
ljmp
decl
mov
mov
fs
mov
pop
popf
inc
loopne
cmp
imul
testl
mov
test
aam
mov
outsl
fcompl
inc
jo
jecxz
mov
addr16
add
aam
mov
pop
adc
test
mov
imull
in
jne
hlt
lret
xchg
call
cs
sub
mov
cwtl
mov
call
lret
jb
or
dec
ficoms
add
push
inc
adc
cs
movl
jmp
push
aad
push
sbb
mov
imul
sbb
or
mov
cld
iret
filds
iret
scas
lock
out
add
loope
or
je
jbe
fdivrs
xchg
shrl
js
dec
ret
fldt
ds
xor
jmp
lods
add
fistps
sub
jp
mov
and
mov
sbb
mov
push
cmp
arpl
sub
repnz
jp
pop
aaa
push
mov
je
loopne
mov
pushf
movsb
mov
sbb
cmp
jecxz
fsubs
push
lea
xchg
mov
sub
sbb
push
mov
sbb
inc
and
inc
push
or
lock
fstl
insl
adc
fcomps
hlt
jb
iret
xor
pop
cmp
adc
inc
mov
dec
xchg
push
sbb
adc
xchg
push
mov
add
push
push
pop
fs
in
arpl
xor
mov
cs
mov
fldt
ds
push
mov
and
mov
and
jl
lods
sbb
sbb
xlat
mov
and
fcomip
loopne
into
xor
fs
and
dec
jmp
leave
xchg
and
stc
repnz
sbb
or
adc
pop
cmpsl
into
lret
push
popa
fs
out
rorl
add
int
sbb
add
scas
scas
jbe
sbbl
cld
scas
cld
inc
cmpsb
sahf
dec
xchg
mov
arpl
inc
sub
clc
mov
lock
into
ret
mov
loop
repz
repz
fcmovu
ja
sub
cmc
mov
mov
inc
pop
mov
push
sbb
inc
cmpl
push
lret
cmp
test
in
xlat
mov
imul
jb
cmp
or
in
movsl
xchg
popa
dec
cmpsb
jns
add
fscale
sbb
scas
xor
leave
mov
aas
mov
sbb
stc
dec
ret
ljmp
sub
xlat
pop
cltd
cmp
fadds
jo
fs
lock
pop
pop
sub
xor
movsl
xlat
adc
ljmp
popa
cmp
fwait
bnd
sub
sub
imul
dec
mov
outsb
or
dec
mov
clc
push
std
push
add
mov
xchg
int3
daa
out
ds
hlt
sub
sti
jno
mov
jp
loopne
pop
inc
fnstcw
daa
xlat
lret
popf
sbb
rclb
inc
scas
pusha
cmp
roll
sub
sbb
cmp
pop
jge
push
xchg
mov
jmp
pop
push
sub
pop
dec
sub
cld
inc
sub
inc
insb
sub
push
cmpsb
mov
and
pop
aas
and
std
in
lods
xor
lock
popf
in
fistl
cmp
mov
push
jmp
push
inc
nop
push
js
scas
push
fnsave
mov
loopne
lahf
mov
sbb
mov
adc
dec
int
mov
sahf
sub
dec
lods
fwait
jbe
pop
xor
add
dec
adcb
lods
jmp
cltd
pop
or
dec
xchg
mov
and
jle
push
mov
and
fdivs
dec
aad
pusha
push
daa
mov
test
aam
js
xchg
fcoml
adc
dec
jmp
mov
mov
imul
sbb
scas
xchg
inc
js
aam
shl
test
or
ret
adc
aaa
inc
popf
cmp
leave
mov
jb
pop
int
inc
mov
aas
inc
xchg
imull
out
js
dec
mov
pusha
scas
or
jle
or
xor
xchg
lods
add
lock
pop
dec
lea
fildll
jae
mov
pusha
in
nop
gs
xchg
adc
pop
fnstenv
jp
lods
and
inc
adc
pushl
or
and
mov
lret
inc
cmc
clc
mov
pop
in
jbe
icebp
or
adc
nop
pop
cmp
clc
and
inc
insl
xor
sbb
cmp
movb
test
lods
push
dec
das
in
in
push
sarb
enter
mov
int
dec
xor
mov
xchg
mov
jbe
movhps
shll
and
pop
outsl
xlat
sub
or
dec
mov
movsl
adc
mov
xchg
mov
adc
xchg
jnp
mov
xlat
insb
aaa
jl
inc
jge
and
add
out
mov
sub
in
mov
jmp
enter
mov
xchg
sub
stos
dec
mov
lods
cmpsl
shl
imul
lock
call
ljmp
xchg
ljmp
fsubr
ret
mov
enter
jb
je
mov
enter
fistps
xlat
xor
sbb
negl
fs
xor
mov
inc
push
pop
lahf
xchg
or
outsb
cs
adc
push
inc
cmp
or
jnp
stos
hlt
lret
dec
mulb
or
hlt
mov
dec
fbstp
push
out
push
xchg
testb
sahf
fcmovne
das
dec
sub
xor
jge
sbb
aaa
movsb
cmp
outsl
cmp
es
inc
repz
dec
jmp
in
cmpl
aam
push
pop
fisubs
pop
jg
xor
push
popf
mov
and
cltd
rcl
je
xor
mov
lret
insl
in
adc
fnstcw
test
adc
push
pushl
sbbb
cli
out
fcomps
sbb
xor
data16
and
cs
gs
rorl
shrl
cmc
test
cs
cs
jg
push
popa
xor
cmpsl
pop
xchg
xchg
cmp
das
and
loope
fbld
stc
sub
jns
cwtl
inc
in
mov
sarl
imulb
or
or
outsb
shlw
icebp
ljmp
pop
pop
faddl
xchg
in
lret
imul
repnz
push
in
nop
stc
shlb
push
lds
int3
push
dec
leave
xor
pop
xchg
adc
movsb
mov
sub
stos
xchg
leave
xchg
inc
out
mov
inc
mov
cmpsb
push
add
adc
dec
dec
imul
push
mov
pop
mov
xchg
loope
in
lods
or
lret
inc
std
sbb
mov
sbb
push
insb
mov
inc
movsl
dec
cmp
xchg
sbb
in
mov
aaa
jmp
fidivrs
add
in
lret
jecxz
xchg
xchg
pop
es
push
mov
add
pop
lcall
lret
vpmullw
lods
jne
jno
mov
gs
aas
lea
add
inc
clc
inc
stos
or
mov
cmpsl
cmc
jmp
fmuls
lds
and
ss
insl
loopne
push
jo
push
shlb
xor
in
fisttpl
dec
mov
xor
pop
jle
scas
jae
dec
push
sarb
mov
xchg
dec
jecxz
and
out
fwait
out
sub
mov
xchg
test
or
pusha
aam
in
and
sbbl
sbb
call
jp
xor
out
mov
imul
pop
test
xchg
mov
aaa
and
fs
or
push
push
and
out
insl
lcall
jmp
test
xchg
loope
clc
or
add
rcl
pop
lods
push
push
adc
lock
fldl2t
mov
mov
cli
pop
ss
enter
and
js
push
add
popa
test
rorl
test
add
imul
xor
mov
jp
sbb
pop
mov
jo
bound
add
adc
aas
mov
das
shll
idiv
popa
nop
pushf
xchg
and
bound
adc
push
sbb
shll
aas
dec
xchg
dec
das
push
sahf
stc
inc
fnstsw
adc
shrl
dec
rolb
icebp
cmp
xchg
fnstsw
xchg
add
popa
scas
les
ss
fldcw
xlat
jae
sbb
nop
cld
test
lock
add
jb
mov
fabs
mov
or
mov
mov
cmp
in
lret
loope
mov
mov
inc
mov
cmpsl
mov
in
or
mov
lcall
sbb
les
and
fildl
cmpsl
subl
addr16
lock
xor
inc
mov
out
adc
xchg
dec
mov
add
rcll
inc
repnz
mov
xor
cs
sub
cmp
sub
lcall
mov
int3
jg
mov
popf
pop
sahf
orl
fdivl
sbb
stos
lds
repnz
pop
in
fnstenv
and
jle
dec
mov
and
lahf
mov
in
iret
addr16
inc
mov
lret
mov
ljmp
stos
push
nop
addl
jo
aas
xor
idivl
stos
sti
mov
cli
xchg
add
cmp
aad
rorb
pop
adc
or
adc
or
aas
xchg
movsl
sub
aam
add
jmp
or
push
fstps
nop
pop
jae
dec
mov
mov
pop
repz
in
xor
data16
pusha
push
adc
ret
adc
test
test
add
mov
stc
jl
sbb
xchg
faddl
loope
mov
daa
pop
add
mov
scas
push
sbb
xchg
gs
out
push
cs
jo
nop
arpl
out
outsb
out
jmp
cmp
pop
inc
mov
fs
aas
push
pop
fistpl
sub
movsl
sbb
rorl
movsl
imul
orb
out
push
add
xchg
xchg
inc
xor
dec
sub
xchg
arpl
push
cmp
mov
cmpsl
popf
dec
jge
stos
push
mov
xchg
ljmp
hlt
es
fists
cmp
pop
stos
ljmp
cli
std
imul
lock
lods
xor
inc
mov
pushf
fdivrp
pusha
lods
or
js
enter
jo
add
iret
adc
mov
push
and
lahf
aam
pushf
jno
lret
test
cmpsb
scas
xchg
mov
imul
lret
popa
sub
dec
push
in
pop
fidivrl
lock
push
sbb
sbb
and
out
loope
sbb
push
leave
xor
jo
dec
lret
inc
mov
mov
add
fwait
dec
xchg
movsl
xor
in
movsl
push
adc
out
cltd
leave
mov
cmp
pop
jno
mov
mov
cmp
dec
lcall
ja
out
inc
call
cmp
sbb
cmc
jnp
push
xor
out
sub
mov
aam
add
rcrb
sbb
outsl
test
enter
push
sahf
mov
dec
ja
into
mov
cs
mov
test
xchg
cmp
aad
fwait
jle
out
xorb
jmp
jnp
and
sbb
nop
andb
or
les
test
insb
fcmovne
insl
mov
inc
in
jbe
dec
int3
es
hlt
test
ret
sbb
jno
dec
dec
mov
int3
into
sbb
sbb
pop
out
aad
sub
mov
xchg
mov
clc
or
sbb
adc
jmp
push
sbb
sub
stos
les
mov
lds
nop
test
ret
xchg
add
popf
sbb
fildll
mov
inc
call
add
xor
xor
xchg
mov
idiv
sub
or
mov
mov
add
ret
stos
ret
lret
aad
test
dec
mov
rorb
mov
mov
pop
adc
rol
dec
push
xlat
nop
stos
iret
sub
jl
cli
mov
cli
repz
cmp
add
xchg
test
push
or
cmc
sbb
stos
xchg
loop
ret
fcomip
mov
mov
mov
sbb
imul
adc
fdivs
mov
xor
inc
fidivs
std
and
mov
jbe
loope
xchg
fidivs
pop
mov
out
add
xlat
shlb
adc
mov
setp
jmp
in
add
in
inc
adc
sbbb
inc
pop
push
mov
push
lcall
jg
into
adc
je
in
sbb
sub
dec
add
mov
mov
mov
std
and
cmpsb
mov
in
add
scas
dec
inc
dec
lcall
push
cmp
xlat
into
ljmp
xor
xchg
push
pop
xchg
out
movsl
dec
push
pop
adc
movsl
xchg
sahf
cmovle
pop
cltd
cmp
dec
jmp
xchg
addl
ljmp
lret
pop
and
icebp
int3
ljmp
jae
xor
pop
pop
pusha
mov
fistpl
jno
popf
dec
pop
push
ja
cwtl
mov
xor
sub
rcrb
int3
lock
out
mov
mov
sub
ljmp
adc
mov
and
lock
fstp
pop
enter
shlb
test
mov
cwtl
in
fs
scas
inc
fildll
sub
or
inc
jmp
dec
dec
sti
pop
push
pushf
cli
test
cwtl
out
and
data16
sbb
dec
movb
fcompl
jecxz
cli
enter
push
jmp
and
sub
std
pop
fildl
cmp
stc
jle
pop
jb
outsb
inc
mov
popa
xchg
jmp
mov
cmpsb
clts
cmp
mov
and
inc
popf
aaa
loope
push
push
or
mov
gs
xor
test
dec
xchg
and
xchg
mov
jb
in
cmp
popa
call
nop
popa
or
xchg
addr16
fisttps
xchg
cld
mov
inc
xor
andb
mov
xchg
pop
test
cmp
xchg
in
push
ret
cli
push
pop
jb
or
xor
pop
adc
int
push
lea
xor
cmp
sahf
sbbl
inc
xchg
mov
inc
jns
sub
loop
rcl
or
ret
mov
movsl
mov
jmp
es
push
aam
insb
or
cmpxchg8b
rcr
mov
aad
loopne
sub
int
push
add
enter
rep
gs
shl
outsb
aas
in
mov
push
ret
cld
dec
xchg
inc
cmp
sahf
addb
or
loop
sbb
jp
aam
enter
pop
fwait
add
mov
out
jmp
sub
scas
repnz
sbb
imul
pop
int3
inc
std
dec
sarl
rclb
enter
ss
dec
push
outsb
push
int
mov
loopne
es
movl
pop
pushf
mov
mov
lods
jg
mov
sub
add
sub
loope
in
inc
bound
sub
call
popa
jl
cmc
ljmp
dec
add
mov
sbb
add
std
cmp
xor
fmuls
push
lea
xchg
sbb
sub
push
stc
iret
or
stos
jle
mov
std
test
out
jle
out
push
mov
arpl
pop
cmpsb
cmpsl
movsl
cmp
mov
insl
mov
cmp
sub
dec
fisubs
ljmp
dec
sub
xchg
push
outsb
mov
movsb
repnz
js
inc
sub
xchg
test
xor
js
mov
js
pop
or
cmp
aam
jle,pn
mov
es
mov
inc
xchg
pop
inc
dec
fadds
pushf
inc
in
sbb
lahf
test
cli
mov
pop
or
je
aaa
mov
adc
into
or
iret
daa
repz
inc
sub
lods
rorb
dec
inc
and
inc
adc
sub
push
push
ds
mov
dec
cmp
xchg
lcall
test
jmp
push
sub
clc
dec
push
or
loopne
es
inc
fcmovbe
sarl
mov
aad
scas
mov
or
mov
pop
dec
jb
mov
sub
aaa
sbb
in
call
jecxz,pt
mov
ficompl
mov
fidivrs
jne
sbb
hlt
faddl
mov
xchg
xchg
aaa
fildl
mov
xchg
popf
xlat
mov
add
lock
sub
mov
sbb
int3
jle
jo
xor
mov
rol
test
mov
rcll
inc
std
cmc
sub
into
outsb
insb
ret
jno
scas
testb
dec
loopne
stos
push
cli
push
daa
fnstsw
lret
cmp
mov
imul
shl
lds
adc
clc
xchg
test
data16
je
or
dec
mov
lret
cmc
mov
stos
xor
aad
nop
jge
ds
lret
push
dec
fcomip
into
ror
icebp
or
mov
xchg
lret
repnz
and
mov
cmpsl
repz
dec
ds
or
xor
xor
std
test
cld
pop
out
aaa
lock
mov
in
jle
mov
fimuls
cmpsl
jp
stc
push
mov
push
xor
or
ret
adc
xor
cmc
loopne
imul
inc
jmp
xchg
pop
cltd
pusha
xchg
sub
fistps
ljmp
shl
mov
dec
inc
div
inc
sti
jl
jge,pt
jmp
test
cld
dec
fcomip
sub
mov
aam
pop
js
jb
mov
adc
jns
iret
adcb
mov
repz
out
out
mov
adc
or
clc
push
adcb
jmp
add
rcl
fwait
clc
jbe
sbb
fbstp
es
jl
jge
adc
jno
add
add
mov
adc
mov
sbb
pop
in
pop
xor
das
in
jbe
mov
fadd
jp
ss
fsubs
and
imul
dec
mov
in
lods
inc
push
xchg
test
push
js
jecxz
adc
std
mov
es
mov
fists
loop
mov
push
jb
fstpl
or
push
push
mov
cmp
in
insb
push
jb
daa
shrl
cmp
inc
inc
sub
and
fcomps
test
dec
mov
lods
add
dec
stos
add
out
incl
push
jns
pusha
xor
xchg
mov
pop
or
fidivs
lahf
lret
mov
cmc
add
hlt
scas
inc
bound
ret
outsb
scas
ds
test
or
ds
mov
shlb
xor
cltd
jp
dec
mov
fsubl
mov
sub
fldl
sub
stos
test
adc
pop
push
scas
mov
insl
lods
shll
mov
inc
sbb
jmp
xchg
mov
sbb
pusha
lahf
out
xchg
mov
push
add
cmp
sub
inc
nop
shll
inc
sub
call
or
mov
or
jo
ja
shl
lret
pop
sbb
cs
add
sbb
sti
inc
adc
sub
test
mov
xchg
fsub
outsb
jo
and
repnz
xchg
mov
out
cld
test
in
sub
mov
mov
aas
mov
fists
inc
stc
clc
data16
mov
insl
sti
popl
xchg
icebp
pop
or
stc
cs
dec
dec
fstpt
lahf
iret
adc
pop
adc
sub
int3
xor
cld
mov
and
add
xlat
or
xor
cmp
stc
inc
xor
sahf
adc
enter
cwtl
sub
insb
int
push
sub
repnz
lret
shr
push
rcrl
cs
jmp
push
inc
xor
lea
scas
mov
jl
gs
push
stos
mov
cld
es
adc
xor
adc
push
sti
iret
je
mov
ret
gs
jbe
out
lcall
jecxz
repz
outsl
dec
daa
lods
imul
mov
adc
push
mov
jbe
or
dec
jge
lcall
push
mov
cmc
sbb
outsl
lods
stos
cmc
cld
imul
sarl
test
gs
jp
cwtl
mov
je
jmp
lods
or
mov
add
inc
loopne
push
cmp
loopne
outsb
xchg
loopne
jp
jmp
mov
in
in
xor
cmp
pop
ljmp
fnstenv
shll
adc
fiaddl
jl
adc
cmpsb
mov
jle
insl
out
iret
fwait
loope,pt
jecxz
mov
mov
and
iret
xchg
mov
dec
and
jecxz
dec
sbb
pop
fidivrs
ja
sub
pop
mov
jno
sub
clc
aas
pusha
sbb
fwait
push
call
lds
out
gs
iret
fisubrs
fnstenv
ret
inc
loope
or
sub
jno
push
or
cmpsl
cmp
jbe
mov
mov
mov
cmp
adc
and
insb
dec
ficoms
scas
adc
out
out
mov
jae
xchg
div
push
cmp
les
xor
scas
ret
add
sub
sarl
add
pop
xchg
adc
adc
dec
mov
push
sbb
sub
xor
pop
pop
or
test
or
inc
cmp
sbb
mov
imul
insb
adc
pop
inc
cmp
das
shl
mov
adc
lcall
mov
xchg
fsubs
stos
xor
lods
mov
rol
add
aas
mov
movsl
mov
push
loopne
or
jl
push
out
adc
test
mov
jne
push
sub
stc
test
fdivp
imul
push
or
jmp
jle
int3
roll
ja
pop
clc
std
adc
stos
sbb
test
scas
or
mov
mov
push
stos
arpl
aam
inc
mov
fisubs
add
and
xchg
push
insl
xchg
sub
fcmovnu
or
push
xchg
sub
add
fwait
mov
mov
mov
arpl
in
popf
pop
cs
pop
outsb
adc
xorb
mov
inc
mov
jge
lea
sub
and
sub
and
iret
popf
scas
adc
out
push
mov
sbb
fisubrs
adc
and
sub
mov
mov
xchg
dec
loopne
sysexit
pushf
cmpsb
out
jae
inc
push
inc
andl
call
fnstsw
mov
inc
push
or
je
cmp
lret
jmp
push
lods
out
inc
mov
cmpb
mov
sahf
ds
inc
jmp
lahf
lret
loop
xchg
xor
repnz
mov
cwtl
rorl
mov
mov
repnz
pop
int3
enter
ljmp
jg
icebp
cmp
pop
mov
dec
push
inc
mov
decb
mov
std
insb
jecxz
xchg
adc
call
dec
and
rorb
xchg
xchg
jne
sbb
fldcw
std
in
xor
mov
imul
cmpsb
jmp
cmpb
loop
push
mov
outsb
into
orb
mov
mov
pop
mov
clc
repnz
mov
jns
jmp
inc
push
cmp
clc
mov
cmp
test
insl
aad
pop
stc
xchg
dec
mov
mov
cmp
jmp
mov
inc
out
stos
sub
and
push
xchg
cli
rcrl
jno
aam
pop
push
fistpll
sti
push
cltd
scas
out
mov
push
sbb
cmp
pop
ja
jg
shll
xor
ds
add
or
ja
repz
imul
xchg
jecxz
enter
test
sub
ds
pop
stc
dec
outsb
into
mov
aaa
add
cs
hlt
dec
xor
mov
pop
mov
test
dec
inc
das
xchg
sti
jle
sbb
lcall
push
mov
or
je
xchg
js
mov
sub
loopne
push
pushf
loop
pop
xor
jns
lods
fiadds
pop
repz
sub
out
js
mov
and
insb
dec
xor
mov
or
sbb
aas
jbe
mov
add
mov
imul
outsl
push
add
pop
or
insl
mov
fldcw
pushf
mov
lock
js
fsubs
cmpsl
clc
pushw
sbb
push
pusha
sarl
adc
stos
mov
int3
jp
cmp
test
jecxz
cmc
pop
data16
mov
cli
fisubl
jge
jge
push
mov
mov
push
xlat
movsl
mov
xchg
and
sbb
out
mov
jno
loope
mov
ds
sahf
fs
cmp
fdivs
inc
or
ds
lods
mov
push
xchg
stos
pop
add
and
test
ret
xchg
add
insl
pop
sbb
fisubrl
in
in
jno
dec
repnz
jne,pn
add
testl
addr16
jecxz
mov
cli
inc
add
mov
xchg
xor
sti
aam
shlb
fwait
xchg
xor
jo
jl
jae
roll
mov
jg
out
call
mov
add
data16
mov
outsb
mov
shlb
pop
sub
add
stc
adc
mov
mov
cmp
inc
int3
push
lcall
xchg
jl
jle
outsl
and
sti
xlat
mov
nopl
inc
scas
popf
mov
out
shrl
pushf
inc
inc
xor
and
add
jp
xchg
mov
iret
into
xor
mov
mov
insb
ds
xor
lahf
sarb
lcall
mov
sub
pop
xchg
mov
mov
shl
movb
jbe
ret
sbb
iret
pop
ret
test
pop
mov
jns
ror
sbb
nop
shll
daa
xchg
int3
pop
and
jg
adc
jo
scas
or
out
xor
xchg
imul
loopne
or
push
dec
or
in
movsb
xlat
jnp
inc
xor
inc
adc
sarl
xor
and
xchg
xor
cs
test
fsubl
jp
jg
jecxz
jo
icebp
inc
mov
int
scas
aam
or
aaa
stc
xor
cmp
lock
inc
dec
jno
mov
adc
cmp
mov
add
push
mov
out
jno
adc
lods
add
mov
outsb
jmp
fs
add
or
jg
lahf
pop
or
add
push
insl
mov
int3
jge
pop
shr
xor
xor
jle
add
lods
pushf
jb
mov
nop
shlb
insl
push
add
jae
xchg
stos
pop
das
popa
xchg
loop
in
cs
pop
add
mov
xchg
mov
sbb
jecxz
xchg
and
int
jbe
loopne
mov
sbb
and
scas
pop
sub
in
shrb
cltd
sbb
clc
addr16
push
pop
lcall
sbb
mov
fidivl
and
outsb
mov
fnsave
aas
dec
push
call
mov
sahf
dec
subb
jg
xchg
jge
xchg
xchg
add
lea
dec
mov
idivl
out
sbb
dec
push
dec
cmp
fcomps
xor
in
repz
fs
dec
outsl
or
cmp
lahf
sub
add
lcall
push
cmp
mov
subb
cli
or
push
data16
or
xchg
movsb
lea
sub
pop
addb
inc
adcl
lret
xchg
sub
or
xchg
cmp
and
outsl
pop
ljmp
pushf
in
inc
jl
fwait
aad
xor
clc
outsl
nop
mov
mov
dec
and
jecxz
ret
jp
xchg
lods
and
popa
ret
ret
fcomps
xor
pop
pusha
mov
add
lcall
pop
shr
mov
adc
loopne
fldenv
lcall
arpl
adc
jle
dec
pop
cmp
adc
dec
inc
cmp
dec
push
nop
fs
add
pop
push
and
movzbl
test
jno
sub
lds
dec
cs
fadd
jecxz
add
add
jns
in
sahf
in
mov
cmp
arpl
icebp
and
xchg
jb
pop
push
enter
dec
push
mov
mov
xor
and
xchg
rcrl
lahf
je
scas
cmp
sub
mov
es
push
inc
or
xchg
dec
aaa
pusha
mov
les
dec
pusha
pop
inc
xchg
dec
pop
inc
mov
stos
pop
int
mov
imul
aad
stos
and
roll
sbb
lcall
jl
sti
sbb
xchg
or
rol
scas
mov
aaa
mov
dec
repz
popf
enter
loop
mov
xchg
mov
fisubrs
push
ficompl
inc
push
pop
les
mov
push
mov
push
add
test
stos
or
xorl
jne
insb
dec
xor
out
scas
ss
aad
pop
inc
pop
jle
mulb
inc
sub
test
add
clc
insl
pop
mov
mov
int
arpl
dec
in
fsub
stc
push
pop
jg
sub
and
xchg
popa
aaa
jg
pop
cwtl
mov
in
cmpsb
incl
pop
xchg
lret
shrl
mov
inc
jno
lahf
aad
in
mov
sub
lods
out
sbb
inc
push
fidivrs
push
lret
jb
lcall
push
fwait
pushf
das
lods
jecxz
cmp
sarl
lret
loopne,pn
push
jmp
mov
das
pop
fcomps
cmpsl
xchg
jmp
in
xor
mov
adc
mov
push
fisubrl
jne
cmc
xchg
inc
cltd
orl
jl
test
pop
lods
ret
pop
inc
and
mov
mov
sub
and
inc
dec
insl
and
das
jge
testl
fnsave
addr16
xor
scas
mov
dec
lret
sub
adc
cmp
mov
adc
call
push
sbb
add
andl
and
jle
outsl
mov
jae
sub
lock
fptan
add
sub
mov
nop
push
fs
enter
pavgb
mov
in
mov
test
aas
subl
lods
es
xchg
mov
push
cmp
gs
jae
sbb
push
add
scas
sti
add
addr16
add
mov
adc
inc
pop
sub
lds
ret
and
pop
push
lahf
fisubrs
jp
sub
mov
sbb
clc
inc
adc
pop
test
push
arpl
inc
push
pop
push
aad
aam
push
sbb
into
add
inc
push
out
lret
cmpl
and
sbb
test
js
cs
pop
xor
arpl
fnstenv
ficoms
aam
or
mov
cmp
fisubrl
adc
dec
shrl
add
jge
adc
mov
push
pusha
jbe
imul
ds
pop
and
shrb
inc
aas
add
enter
jecxz
dec
popf
mov
mov
dec
jno
xor
fbld
xor
repnz
cmp
pop
std
jbe
and
pop
add
outsb
inc
test
loope
mov
test
adc
cmpsl
test
or
test
iret
lret
or
shlb
ja
ds
mov
jmp
dec
sbb
daa
in
cli
cld
mov
inc
push
bound
fucomp
scas
arpl
or
xchg
aam
fs
jle
jnp
negl
loop
inc
scas
int3
xchg
cs
sbb
cmp
sti
out
or
addr16
pop
fistpll
and
adc
push
stc
or
pop
cmp
or
inc
mov
xor
cwtl
fisubs
imul
cltd
jbe
inc
jae
add
mov
test
je
cli
stos
je
inc
rolb
pop
loop
and
std
inc
popf
mov
pop
mov
hlt
inc
jo
xor
mov
xchg
pop
jge
lahf
stc
push
dec
xor
and
pop
jbe
jno
daa
mov
outsb
loope
add
lcall
sbb
jge
add
and
ss
popf
push
lahf
daa
lock
fidivl
pop
rcl
stos
xor
out
xor
stos
xlat
and
cmp
pop
roll
pop
pop
scas
dec
negl
mov
cmp
shlb
mov
data16
jmp
mov
call
repz
stos
insb
int3
imul
adc
test
hlt
fisubl
sbb
and
xchg
cmp
stos
xor
int
lcall
inc
pusha
mov
pop
add
and
xchg
pop
ds
lcall
adc
lcall
sub
stos
insl
jbe
cmp
pop
lds
add
sbb
push
jnp
jne
testl
push
movd
out
mov
and
jmp
xchg
loope
xchg
jmp
push
sahf
jnp
lds
in
pop
push
inc
mov
hlt
dec
cmp
js
mov
cmp
dec
shl
fcmovnu
loop
pop
xor
pop
push
stc
mov
fs
outsl
mov
cmpsb
push
mov
mov
fcoms
lods
sti
jae
xchg
mov
mov
mov
aas
or
xchg
enter
cmp
pop
jl
pop
pop
rclb
lock
pop
push
push
sti
pop
jo
push
mov
xor
outsl
fucomp
nop
ret
add
xchg
sbb
es
cltd
mov
dec
pop
in
xchg
push
inc
push
jg
fsubl
fdivp
add
push
in
and
jns
les
lds
inc
xchg
mov
out
ss
xchg
je
jb
repnz
adc
sbb
insb
stos
lcall
push
cli
lea
call
movsb
out
ret
cmp
cs
sub
into
mov
loope
dec
adc
out
in
pop
mov
fiadds
jae
cmp
daa
adc
xchg
sbb
dec
divl
dec
dec
jle
xchg
or
fstpl
adc
pop
adc
cld
jo
enter
xchg
jg
sarb
lahf
rolb
sbb
jb
fsubrs
xchg
roll
rclb
leave
jbe
cmpsb
jge
inc
xchg
adc
clc
dec
adc
push
mov
mov
mov
sahf
into
and
pushf
or
adc
sbb
adc
xor
jg
scas
lea
gs
sub
pop
aaa
fbstp
into
cli
repnz
cmpsb
rcr
mov
fwait
movsb
xor
lcall
xchg
and
pop
pop
imul
pop
stos
cmp
fs
sub
in
test
imul
adc
aas
mul
cltd
in
ja
xor
repnz
jg
xchg
popa
nop
cld
sbb
sub
or
notb
xchg
inc
mov
cmp
sub
rdmsr
out
inc
xor
push
jno
or
mov
nop
add
lret
mov
gs
mov
jmp
jg
out
rorl
cmp
ss
xor
les
xlat
test
lock
dec
nop
sub
inc
jns
imul
xor
cli
xbegin
dec
aaa
test
cwtl
mov
adc
xchg
pusha
insb
dec
out
jne
ja
or
add
insb
pop
js
sbb
inc
pusha
xor
leave
cld
daa
mov
lret
adc
jge
lret
mov
aaa
adc
jo
mov
je
lods
aam
inc
pop
xchg
popf
or
cltd
aaa
js
dec
in
inc
adc
xchg
inc
mov
jge
adc
push
lret
pop
inc
add
jecxz
shrl
sti
lods
shlb
mov
and
shll
pop
mov
cli
adc
xchg
mov
in
cmpl
gs
cs
inc
pop
iret
add
and
inc
lods
dec
data16
fsubrp
ret
pop
lea
inc
pop
data16
push
cmpsl
movsb
pusha
stos
jno
mov
jb
inc
mov
shrl
add
or
xor
rcll
mov
rcrl
and
insb
mov
in
rolb
dec
shlb
push
daa
aas
rcrl
xlat
loopne
loop
mov
adc
xchg
pop
mov
mov
pop
xchg
push
or
movsl
push
sbb
and
lahf
ja
stos
lcall
pushf
movsb
xor
or
push
pop
jecxz
add
mov
shl
imul
or
xchg
push
lods
or
popa
aaa
and
loopne
push
adc
dec
xchg
fistpl
add
das
in
std
xchg
ret
cs
addr16
imul
sbb
jns
jmp
in
shl
dec
adc
xor
cli
fisttpl
imul
pop
pop
and
jo
push
jmp
loope
movsl
shll
dec
xor
loopne
dec
testl
into
rcrb
cmpsb
insl
xor
popf
imul
loop
and
inc
inc
setne
sub
fdivrl
dec
xchg
pcmpgtb
aad
and
or
scas
jecxz
jecxz
push
xchg
jg
mov
rcrb
jmp
in
ds
int
xchg
fs
mov
cltd
std
out
lret
ljmp
push
xor
inc
add
dec
insb
mov
pushf
mov
test
inc
or
cmp
call
add
mov
or
fnstsw
in
rorb
mov
stos
cld
mov
stos
icebp
adc
adc
xchg
lds
in
add
lds
pop
xlat
dec
cmp
dec
sub
xlat
mov
xor
nop
mov
call
mov
pusha
xlat
stos
mov
mov
inc
out
xor
dec
out
clc
jnp,pt
mov
pop
int
add
mov
aas
scas
jg
xchg
dec
jne
sub
dec
xor
aas
push
imul
add
jno
ficoms
psrad
test
mov
mov
inc
jle
add
aam
push
dec
mov
shl
sahf
mov
rdmsr
dec
cmp
sub
insl
mov
inc
in
addb
jns
sbb
cmp
jl
sbb
and
add
leave
cmpsl
and
out
mov
out
fs
lahf
mov
jp
xchg
cmp
xchg
push
cmc
adc
mov
pop
and
mov
pusha
iret
xchg
cmp
cmpsl
and
repz
cmp
xchg
or
jno
cmpsl
mov
cmp
sub
repz
jne
iret
in
scas
sbb
sub
sarb
or
dec
xor
xor
pushf
xor
aam
jmp
addb
sti
rol
int3
fisubl
outsb
adc
add
scas
pop
sbb
mov
adc
inc
pop
sub
fdivrs
sbb
leave
lea
add
sbb
mov
xchg
cmc
dec
adc
jecxz
jnp
mov
mov
sub
leave
and
hlt
je
push
jl
scas
int3
push
cmp
mov
les
and
pop
mov
push
add
xor
mov
pop
imul
out
insb
and
lea
in
add
ja
mov
das
stos
or
mov
stos
xor
dec
adc
push
mov
shrb
lahf
inc
decl
decb
sbb
test
in
jmp
fwait
add
shlb
mov
fiaddl
cmp
stos
hlt
pop
call
repz
sub
mov
inc
add
jmp
popa
xor
xchg
dec
sub
adc
mov
push
adc
inc
xor
lods
mov
add
jp
leave
popf
cmp
mov
sub
mov
lods
adc
clc
mov
sbb
xchg
aaa
adc
push
je
scas
pushf
and
mov
rcrl
cltd
sub
inc
adc
mov
cmpsb
cmove
dec
dec
repz
sti
mov
push
or
or
fstpl
and
invd
push
adc
xchg
sub
mov
call
and
lret
or
cmpsb
and
jg
jnp
push
lods
lahf
mov
bound
sahf
inc
fdivl
xchg
ficompl
or
add
push
cmp
stos
stos
or
jne
dec
fucom
sahf
xor
xchg
xchg
dec
or
mov
arpl
cs
jp
invd
mov
scas
lea
mul
or
cmp
hlt
jnp
mov
leave
sub
and
gs
repnz
push
and
cmc
call
int3
cld
inc
std
and
das
loopne
jnp
or
push
cld
fwait
inc
push
lret
dec
dec
in
sbb
hlt
sub
and
add
mov
push
daa
aam
shll
pop
jne
jnp
loopne
out
cmp
sbb
call
pop
mov
mov
adc
adc
ret
mov
cmpsl
lret
sub
loop
mov
les
lret
nop
xchg
dec
orl
inc
pop
or
xchg
frstor
adc
jns
pop
or
hlt
imulb
dec
and
out
lret
bound
push
and
xchg
and
adc
mov
popa
jbe
leave
lds
mov
xchg
mov
dec
cmp
call
pop
test
in
jnp
in
insb
xlat
aaa
ret
movsb
fsubs
je
arpl
fimull
xor
mov
jl
add
jge
jb
popf
xchg
mov
nop
xor
les
fcoms
out
stc
ret
cmp
mov
dec
sbb
std
push
fstl
push
push
mov
mov
lahf
mov
out
ds
xor
in
push
bound
popf
xchg
mov
mov
xchg
push
fwait
scas
ret
jmp
xor
push
lds
in
lock
icebp
fsubrl
cltd
insl
fs
pop
fcomip
test
xor
mov
ds
arpl
pop
xor
call
xor
xchg
stos
fdiv
inc
mov
push
lods
jo
ds
push
lods
jno
stos
xchg
add
int
adc
mov
mov
test
mov
inc
xor
sub
sub
cmp
arpl
incl
fnstcw
fdivrp
sub
adc
aas
xor
pop
repz
inc
mov
jns
icebp
int3
sbb
and
cs
xchg
fdivrl
loopne
cmpsl
mov
jns
or
mov
dec
xchg
stos
ss
add
cmp
push
lods
fidivrs
stc
and
das
loope
repz
mov
pop
xchg
lods
xor
and
fildl
mov
cmp
mov
sbb
outsb
cmp
inc
inc
notb
repz
jg
or
jno
cmpsb
fwait
and
test
inc
dec
andb
decb
adc
adc
jecxz
je
cmc
stc
mov
das
clc
push
in
arpl
out
test
bound
inc
xchg
loope
movsb
sbb
jno
movsb
xor
sar
mov
push
leave
xor
ret
add
and
test
repnz
jl
dec
mov
pop
data16
mov
fildl
cmp
ds
stos
sahf
ds
clc
xlat
mov
nop
push
je
or
adc
js
les
mov
lods
push
inc
jno
xor
sbb
cs
sbb
test
mov
and
cmp
xchg
ret
incl
cmp
jp
jle
test
mov
pop
jns
jle
cmc
dec
adc
dec
lock
scas
sbb
push
add
or
mov
cmp
push
cwtl
dec
filds
lcall
bsr
std
or
or
xchg
scas
push
sbb
loopne
push
mov
sbb
push
sbb
subl
in
pop
add
movsl
push
shll
xor
xchg
add
add
add
xchg
mov
imul
xchg
decl
ljmp
adc
call
sbbb
inc
xchg
mov
xor
push
aam
inc
dec
jg
daa
jg
lcall
lret
ror
into
mov
push
mov
push
adc
xchg
sbb
orb
adc
mov
push
jbe
push
popa
mov
inc
jo
jl
push
loopne
mov
or
mov
or
popa
lcall
cmp
xchg
dec
and
mov
bound
mov
lods
stos
popf
stos
ret
dec
and
ret
push
xchg
mov
jnp
inc
mov
push
popa
add
add
scas
push
cmp
in
xchg
cmp
mov
mov
pushl
mov
sahf
js
addb
push
mov
mov
cmp
or
add
idivl
rol
imul
xor
fcoml
push
aam
sub
arpl
out
jmp
dec
adcb
cmp
loop
cmp
jg
test
call
jae
and
std
and
sahf
call
rol
add
jnp
fwait
ss
mov
pop
push
jle
cmpsb
mov
scas
xchg
xchg
fwait
mov
sub
add
faddl
sub
xor
push
dec
out
xchg
pop
repz
fs
out
pop
movsl
inc
fwait
dec
lea
mov
and
push
jp
cmpb
in
arpl
or
cmp
inc
ret
sbb
dec
rcr
xchg
and
jne
aam
adc
iret
and
or
adc
mov
cmp
mov
sbb
adc
sub
shrb
mov
ficompl
fistpll
fildll
repnz
daa
fisttpll
sbb
cmp
push
popa
adc
test
loopne
fwait
mov
push
inc
push
in
inc
sbb
mov
and
lahf
jg
mov
jo
push
fiadds
xor
push
adc
arpl
enter
sbb
dec
cmpsb
push
sbb
je
lcall
fdivl
addr16
jp
xchg
or
imull
add
fdivl
je
push
pop
sub
dec
xchg
lods
sub
inc
jecxz
lret
pop
mov
and
sbb
pop
movsl
lcall
hlt
mov
shll
js
push
add
or
out
enter
cwtl
cmpsl
stc
jle
rcll
jle
jl
shll
mov
xor
clc
mov
out
jae
mov
jae
mov
into
mov
hlt
movsb
lods
out
mov
xlat
inc
jmp
daa
sub
pop
stos
mov
pop
or
cli
into
ds
lahf
movsl
sub
xchg
push
mov
out
stos
cmp
pop
pop
inc
clc
adc
stos
and
aas
aas
sbbl
adc
insb
pop
jl
lock
movsb
lods
mov
cmpl
data16
or
test
fldt
pop
inc
or
rcrl
fbld
mov
jns
call
adc
or
out
enter
add
or
test
jbe
cmc
cli
loope
rcr
loop
push
movsl
lea
cs
xchg
xor
pop
loopne
jg
push
xchg
test
lock
inc
mov
xchg
xor
jmp
inc
mov
test
mov
mov
jmp
mov
xor
xor
xor
gs
dec
mov
repz
mov
mov
add
test
fnstcw
dec
sahf
push
movsl
sti
jbe
mov
aam
and
jae
xor
lea
xor
pop
jge
jmp
push
ljmp
mov
in
ds
dec
iret
xchg
dec
and
and
mov
loopne
xlat
cmp
jb
shlb
sbb
mov
adc
xchg
test
jae
rorl
in
jmp
mov
xchg
jle
xchg
pop
dec
lahf
pop
lock
or
stc
adc
adc
iret
fcomp
xchg
add
pop
push
call
cmpsb
cmp
fimull
fnstenv
cmpsb
pop
dec
je
dec
push
inc
pushf
and
xorb
xor
pop
jno
movsb
add
mov
dec
fiadds
or
in
lret
mov
push
fmuls
sub
in
int3
in
arpl
mov
arpl
sti
mov
js
lcall
add
test
pushf
xlat
sub
hlt
data16
aaa
outsl
cmpsl
cld
fsubrp
or
pop
jae
mov
adc
xor
sub
jno
inc
fnstcw
mov
fwait
and
clc
shll
and
repnz
inc
imul
push
pushl
shl
in
lahf
pop
xor
pop
test
mov
or
lahf
movl
in
mov
scas
push
std
test
arpl
cli
sbb
hlt
stos
mov
inc
popf
push
cwtl
mov
sbb
xchg
shl
fldenv
hlt
imul
std
cmpsb
mov
popf
lods
insb
mov
cmp
fidivl
in
sbb
adc
adc
pop
adc
add
mov
subl
inc
pusha
mov
rolb
loop
cmp
shl
jmp
ja
adc
or
inc
sub
push
out
mov
xor
loopne
cmp
mov
in
mov
inc
and
inc
sbb
sbb
xor
fwait
push
leave
pusha
insb
sbb
call
insl
xchg
or
cmpb
cltd
push
icebp
add
insb
xchg
jmp
imul
add
lock
sub
and
inc
pop
insb
jmp
and
inc
mov
aaa
imul
and
mov
fwait
adc
pop
xchg
mov
xchg
mov
mov
sub
movsl
sub
adc
jo
jo
push
mov
push
arpl
or
wbinvd
cld
test
in
dec
mov
loopne
into
lds
stc
xor
lds
lock
jle
inc
pushf
or
test
addl
jg
pushf
in
mov
push
push
and
xchg
jae
in
add
into
xchg
mov
mov
les
test
and
mov
into
mov
jnp
pop
mov
mov
or
les
vaddsd
pop
push
andb
mov
out
loope
cwtl
xor
inc
fldl2e
sbb
push
out
in
jle
and
ljmp
jb
es
mov
jne
test
pop
cmp
inc
add
cli
out
jns
or
daa
adc
sub
push
icebp
add
push
lcall
jecxz
clc
fstpl
mov
mov
shrb
movsb
or
inc
pop
bound
fstps
fwait
daa
lret
pop
adc
xchg
aaa
or
jno
andl
mov
int
out
aad
adc
adc
sub
pusha
or
lock
jnp
fstpt
mov
or
lds
mov
mov
fildll
inc
fldcw
inc
add
mov
dec
negb
push
rorb
ret
outsl
pop
fcmovnu
sub
mov
mov
cmp
icebp
lcall
scas
movsb
mov
outsl
pop
divl
sbb
sbbl
jg
jns
add
addr16
fdivs
mov
jle
jge
sbbl
dec
push
adc
shl
fstpt
and
cmpsb
ficompl
pop
lds
mov
notl
xchg
mov
in
push
sbb
stc
dec
or
movsl
in
lret
cmpsb
dec
inc
mov
bound
fucomi
imul
rorb
pop
js
mov
push
loope
mov
pusha
or
dec
jmp
rcrb
xchg
outsb
adc
cmp
mov
push
lods
cld
xor
push
or
cld
aaa
test
sbb
fdiv
ret
cmp
addr16
aam
jp
rorb
adc
sbb
lret
push
sti
adc
int
pop
outsb
lock
mov
mov
jo
jno
mov
nop
xor
adc
ja
stc
mov
sub
xor
or
fldl
mov
stc
mov
mov
dec
jecxz
or
es
dec
pop
in
dec
in
addr16
or
mov
cld
fs
push
aam
inc
sbb
std
leave
rcll
mov
adc
push
int3
leave
cmpsl
sub
js
xchg
aaa
test
lods
test
das
push
mov
stos
pop
hlt
adc
pop
sahf
movsb
xchg
cld
insl
cs
cmpsl
mov
and
adc
ss
mov
add
repz
xor
mov
lods
mov
dec
das
mov
fcomps
mov
fistl
popf
jmp
fisttpl
out
adc
std
notl
and
adc
jne
xor
lock
push
push
and
into
lods
divps
fwait
xor
inc
fcmovbe
cmp
nop
movsb
aad
jmp
clc
test
gs
mov
fistpl
sub
push
iret
es
je,pn
mov
cltd
push
jg
mov
fcomp
stos
push
jmp
cmp
test
push
jne
xor
popf
sbb
in
movsb
fistl
je
lahf
sti
sub
out
dec
push
shrl
jmp
jl
cli
fs
adc
std
xchg
bswap
aaa
pushf
jno
ja
and
pop
inc
jne
adc
fadd
imulb
mov
shrb
leave
outsl
inc
shl
sbb
xchg
imull
cmp
sub
dec
pop
test
pop
push
adc
dec
jne
stos
roll
inc
rorb
aad
dec
add
mov
loope
pusha
xor
out
cmp
and
fstpl
mov
test
dec
add
cwtl
test
aas
jp
aam
xchg
gs
push
push
outsl
mov
fstps
addl
rorb
popf
es
out
popf
in
or
out
fcmovu
jl
xchg
insb
jno
xchg
adc
aaa
jbe
mov
xor
lahf
push
lods
rcrb
testl
ja
xchg
inc
shll
and
pop
cmp
lahf
mov
in
pop
fnstcw
mov
inc
add
push
mov
call
leave
and
imul
repnz
mov
ljmp
push
push
loop
jg
mov
push
je
mov
mov
lea
or
adc
mov
dec
daa
js
push
sub
or
aaa
enter
orl
sbb
mov
lds
mov
jmp
pop
or
jo
lods
mov
cli
jle
mov
sub
test
inc
call
lods
andl
dec
aaa
test
mov
ja
nop
xor
sbb
shrb
ret
fdivrl
push
imul
imul
mov
xor
popa
mov
sub
xor
pop
iret
ret
imul
imul
daa
fs
and
lock
sbb
fcomps
cmpsb
fcmovne
jecxz
nop
dec
mov
iret
je
pop
inc
into
or
pop
in
jnp
or
or
icebp
sub
inc
gs
jle
cmc
test
aaa
or
ficompl
ss
cmpsl
xchg
jns
xchg
enter
jmp
stos
out
aas
dec
daa
dec
fs
fnstcw
sbb
imull
rcrb
mov
into
mov
push
push
mov
mov
inc
imul
xlat
dec
sbb
cmpsl
inc
xchg
std
mov
fiadds
inc
cmp
sub
repz
dec
push
dec
mov
pop
outsb
cltd
sub
push
mov
lds
inc
jp
shl
push
mov
mov
lret
nop
sbb
popf
out
lea
lds
mov
adc
ss
sahf
adc
cmpsb
rcr
pop
jns
fld
pop
push
and
roll
out
pop
push
pushf
xchg
or
js
ret
jbe
cmp
inc
jp
rcl
inc
es
push
testl
inc
adc
ljmp
adc
add
jecxz
xchg
mov
adc
dec
pop
sub
cmp
aaa
adc
popw
in
jp
fnclex
fisttpll
ds
testb
xor
mov
inc
inc
dec
push
mov
fcom
ret
iret
cmpsl
shlb
mov
cld
movsb
in
adc
scas
jle
cmp
xchg
addr16
mov
add
bound
test
enter
cli
xor
inc
push
nopl
xorb
add
cmp
fwait
dec
gs
test
pop
sub
inc
xchg
pop
push
cmpsl
nop
aad
rorb
stos
pop
sbb
jns
sub
mov
notb
sub
pop
andb
pushf
call
aaa
repz
movsb
mov
std
mov
sub
in
shlb
or
fidivrs
jg
enter
sti
jns
cmpsl
inc
push
xorl
mov
add
cmpsl
test
lods
mov
sub
mov
inc
call
lret
faddl
pop
cmp
outsb
pop
pop
lods
fiaddl
jnp
sbb
mov
jbe
cmp
lret
idiv
gs
pop
lea
int3
add
push
ficoml
xchg
loop
mov
mov
int
daa
pusha
or
fldenv
sub
aam
insb
int
dec
xor
fmuls
idivl
cmc
test
cmp
xor
sbbl
sbb
mov
xchg
cmc
stos
es
stc
cmc
lcall
loop
imul
mov
push
xchg
movsl
pop
int3
in
aam
push
adc
stc
lahf
loop
jnp
jne
andb
insb
add
stc
int3
mov
popa
lods
cmp
stos
cmp
imul
clc
adc
out
or
and
pop
les
and
mov
loopne
mov
ficoms
nop
out
je
sub
stos
lret
dec
xchg
lret
jmp
pop
mov
adc
inc
bound
int3
lods
incl
flds
aas
insl
std
mov
mov
mov
andb
in
jbe
jns
adc
push
pop
push
push
les
mov
jge
pop
sbb
gs
mov
loopne
dec
lret
hlt
fisubrl
enter
jge
hlt
xchg
add
mov
jle,pt
ret
jecxz
mov
add
or
mov
movsl
enter
xor
enter
push
push
mov
loope
test
imul
into
test
shrb
lret
in
sub
repnz
sbb
mov
dec
or
adc
cmp
fs
adc
in
pop
rcl
sbb
fucomip
in
les
sub
vpcmpgtd
mov
shrb
aad
cmp
mov
pop
lret
sbb
negb
xor
mov
xchg
test
repz
add
mov
xor
adc
stos
sbb
sub
clc
xor
test
adc
jecxz
adc
ret
es
and
and
add
repnz
in
sbbb
out
lret
sahf
lods
inc
aad
scas
fs
mov
test
and
ret
nop
in
inc
cmpl
push
pop
daa
lds
sbb
jp
inc
imull
test
adc
or
push
inc
in
pop
enter
test
in
xor
push
pop
push
pop
pop
mov
pushf
adc
lock
mul
push
insl
xchg
add
pop
test
rcrl
cmpsl
lods
mov
dec
aam
xlat
hlt
dec
mov
sbb
mov
xor
and
fldcw
xor
sub
das
pop
mov
neg
in
sarb
push
insb
ret
nop
or
sbb
cli
mov
sbb
lret
xchg
sbb
insb
jo
insb
scas
adc
mov
ret
pop
xorb
fcoms
loopne
lods
stos
daa
rcr
stos
inc
fs
enter
xchg
test
mov
imul
mov
dec
and
xchg
lcall
addb
in
sub
cmp
and
push
xchg
aad
in
sbb
scas
jns
mov
in
dec
mul
movsb
push
cmpsl
cmc
adc
jecxz
pop
sarl
ficoms
cmpsb
leave
mov
outsb
mov
jg
gs
mov
xlat
mov
shrb
xor
mov
mov
mov
and
jno
iret
int
xchg
in
sbbb
sahf
leave
lret
cmpl
mov
xlat
fldl
jb
rcll
fwait
or
sbb
xchg
rorl
jecxz
loope
imul
ja
fistpl
aaa
adc
xchg
ss
fiadds
enter
or
and
outsb
inc
enter
movsb
ficomps
popa
push
jbe
lods
mov
add
fcomps
jl
pop
std
xorb
std
push
dec
add
into
mov
mov
popa
lds
cmc
shll
popa
in
adc
pop
les
sbb
jmp
xor
push
rcl
jge
insb
fdivp
sbb
loopne
adc
sub
outsl
lret
push
mov
loopne
mov
and
adc
jne
out
inc
or
in
das
dec
lret
xchg
ds
mov
aad
rcrl
pusha
lcall
pop
pop
lods
and
push
and
les
jb
pop
mov
push
xor
and
out
add
cmp
add
dec
imul
mov
pop
popa
scas
bound
mov
loope
jmp
notl
pop
ljmp
dec
iret
nop
push
and
sub
and
inc
mov
mov
xor
or
movsb
mov
add
lahf
pusha
jnp
loope
sti
and
std
sub
nop
push
mov
aam
adc
dec
sbb
xchg
cs
scas
xchg
xchg
pop
clc
pop
mov
dec
cmp
mov
inc
fs
jmp
dec
test
roll
sub
icebp
lcall
lods
insb
pop
cmp
xchg
lds
mov
addr16
cmp
and
test
push
pop
push
pop
ja
jge
cltd
mov
call
and
orl
bound
mov
test
inc
imul
addr16
out
sbb
je
push
and
sbb
fstpl
mov
loopne
mov
add
xor
ror
repz
adcl
andl
mov
imul
sub
xor
in
sbb
movsl
and
or
sub
dec
xor
ret
rep
lods
pop
jne
cli
xor
aas
outsl
mov
adc
daa
push
int3
pop
pushf
jg
inc
bound
addr16
sbb
int
jae
movsl
daa
flds
call
enter
subb
shrl
mov
cmpsl
mov
sbb
test
sbb
int3
cs
mov
aad
mov
daa
jl
es
xchg
sbb
cmp
mov
pop
dec
xchg
js
push
mov
adc
gs
sbb
iret
wbinvd
mov
mov
and
test
and
in
jnp
mov
jne
sahf
jb
lahf
xchg
lock
nop
daa
jg
shlb
push
jp
dec
insl
push
pop
js
repnz
mov
jl
fidivrl
push
inc
cmc
inc
loope
imul
fnstenv
inc
jo
lods
es
mov
fistpll
aam
out
mov
xor
pop
sbb
insb
test
fimuls
fcomp
push
ljmp
or
push
addr16
rcrb
movsb
sub
jo
cmp
cmp
dec
cmpb
movsl
repnz
rorl
in
inc
movsb
gs
mov
or
movsl
mov
jne
insb
pusha
mov
notb
ja
jnp
in
jecxz
mov
cmpl
pushf
ljmp
push
nop
dec
and
pushf
lods
or
xor
les
enter
inc
shlb
sub
fwait
mov
mov
cmpsl
xor
push
cmp
inc
mov
repz
push
or
clc
lods
mov
push
xchg
cmpsl
xlat
jge
push
adc
xor
mov
mov
add
clc
negb
cld
push
data16
xor
dec
lea
pop
push
push
sub
dec
jmp
aas
adc
xchg
aaa
dec
jecxz
add
iret
push
repz
push
jg
sarl
enter
ja
fldcw
pop
sub
ds
mov
mov
test
xor
dec
or
mov
fisttps
out
test
aad
scas
loop
clc
mov
pop
push
arpl
insb
inc
push
or
inc
test
xchg
dec
mov
cmpsl
cltd
popa
push
mov
shr
int
add
orb
andb
dec
ss
das
ret
pusha
mov
push
in
rorb
out
push
aad
jo
mov
and
jge
jl
out
mov
jg
mov
rcr
mov
call
pop
sbb
mov
fwait
lods
jbe
jb
jb
scas
clc
sbb
lea
inc
push
sahf
mov
pop
adc
lea
cmpsb
rclb
sbb
fbld
outsb
mov
sbb
pop
sahf
ficomps
mov
jl
dec
in
lock
fstl
push
imul
mov
notb
pop
mov
pop
sub
xchg
mov
push
mov
xchg
ja
mov
sub
popa
push
fcmovnbe
inc
ret
lods
iret
cmp
sarl
cld
ljmp
pop
mov
imul
pop
sub
outsb
lahf
cmp
hlt
scas
leave
in
mov
in
in
ljmp
mov
out
dec
dec
mov
cltd
loope
jle
mov
sub
jbe
lret
sahf
sbb
rclb
push
jmp
pop
mov
shll
pop
fadd
sbb
inc
jne
xorl
outsb
push
ret
dec
pop
push
pop
sbb
inc
jp
xlat
adc
mov
or
adc
mov
jg
pop
sahf
sbb
rdmsr
jecxz
cmp
aaa
fiadds
mov
imul
js
pop
adc
ret
imulb
jne
mov
push
or
icebp
inc
jl
stos
mov
inc
pushf
bound
imul
push
pop
mov
jle
cltd
mov
pop
lods
insb
pop
cwtl
lahf
data16
test
push
movsb
adc
ret
or
push
xor
mov
out
add
outsl
xor
mov
adc
loopne
lea
and
xchg
lock
mov
mov
cmc
adc
lcall
loop
jl
or
and
sub
es
mov
es
mov
push
jae
inc
sbb
icebp
out
xor
add
dec
cmpsl
jp
andl
js
adc
sbb
loope
jo
mov
dec
loop
adc
pusha
stos
mov
adc
pop
or
leave
inc
fwait
add
call
mov
movsl
ds
mov
push
push
xchg
js
rcrl
movsb
into
push
add
lahf
loopne
scas
jp
jb
mov
sub
or
inc
adc
inc
arpl
ror
adc
or
movsl
xlat
adc
aam
mov
xchg
pop
cwtl
enter
js
jnp
push
out
push
cmp
xchg
clc
outsb
jns
out
or
jnp
pop
pop
xor
push
aam
jne
pop
sbb
cmp
hlt
xchg
jae
iret
xor
dec
test
das
jg
pop
cmp
jecxz
cwtl
sbb
fldenv
test
insl
jg
lret
jge
fcoms
push
clc
mov
repz
movb
repz
jmp
pusha
insb
clc
fs
pop
loop
lock
jp
pop
popa
filds
and
nop
sbb
sarb
xchg
aaa
sbb
fs
test
and
jne
pop
or
aad
stc
sbb
aas
sbb
scas
mov
add
mov
out
js
sbb
or
mov
jg
lret
dec
xchg
jge
cwtl
jnp
sub
xlat
mov
and
or
loop
enter
mov
clc
repnz
popa
dec
aas
fimuls
in
fdivrl
lods
jmp
pop
xchg
stos
lcall
aas
jb
clc
xor
cmp
cmp
xchg
adc
mov
dec
xor
lcall
push
mov
inc
inc
out
lcall
cmp
jbe
pop
repnz
cltd
pop
xchg
push
test
xchg
pop
adc
push
fbstp
cmpsl
sahf
aad
ret
int
aam
jge
jnp
jmp
std
out
pop
push
pop
inc
daa
ss
jb
data16
pop
into
je
xchg
inc
test
cli
jnp
in
lods
sub
jg
notl
pop
push
orb
xchg
fists
loop
or
and
gs
mov
mov
push
mov
mov
cli
imull
sub
jne
clc
mov
test
adc
push
dec
xchg
pushf
jb
ret
daa
pop
ljmp
lods
cld
ficompl
mov
imul
ss
outsl
gs
xchg
outsb
sub
adc
or
shll
cmpsb
ss
dec
insl
xchg
add
pop
bound
sub
faddl
jp
insl
js
pop
cmc
mov
mov
mov
sbb
mov
and
test
jne
pop
jle
ss
xor
pop
xor
cs
aad
xor
idivb
cmpsb
test
jp
add
pop
mov
popf
adc
push
ja
mov
dec
cwtl
add
xchg
sti
out
push
pop
test
xchg
mov
jae
popf
ret
insl
or
cmc
movsb
cmpsb
cmp
xchg
pop
clc
jo
mov
stos
and
lahf
neg
pop
repz
xor
lahf
rcl
dec
mov
xchg
pop
pop
fs
mov
lock
rcrl
dec
sbb
pop
or
mov
mull
cmp
cmpsl
xchg
sbb
or
ljmp
pop
dec
pop
or
std
std
popf
int3
jge
lods
ror
daa
js
pop
clc
or
add
cmp
cmp
into
gs
sub
xchg
and
push
test
fcmovu
mov
scas
ret
out
xor
mulb
sbb
push
dec
jno
bound
xor
xchg
mov
test
inc
sub
dec
push
ljmp
mov
mov
push
stc
jmp
cs
xlat
push
xor
jno
orb
loopne
push
inc
jbe
mov
daa
fs
shr
push
pop
insb
orb
out
sti
lret
sub
leave
or
or
push
add
sti
pop
outsb
loop
orl
addr16
andps
lret
pop
adc
mov
or
in
sub
push
inc
push
and
ja
aad
test
repnz
jmp
aad
gs
clc
dec
insb
shlb
jp
int
loop
cwtl
lret
test
xor
inc
int
mov
arpl
dec
mov
mov
and
add
fs
xlat
cs
repnz
fisttpll
push
ss
xchg
subl
jl
sbb
das
ss
rcr
and
call
sub
mov
testl
lods
xchg
movsl
lret
dec
fs
out
repz
sbb
jmp
jecxz
aam
popf
out
push
ds
cld
js
inc
xor
stos
pop
cmp
cwtl
outsb
add
xor
out
pop
in
mov
loope
sub
sub
mov
pop
out
out
jecxz
xchg
mov
jno
sarb
adc
sbb
in
add
sbb
mov
jb
sbb
lahf
pop
jae
mov
and
fcoms
mov
int
inc
or
jne
mov
and
pop
rol
shr
mov
sub
pop
ljmp
add
jle
adc
loopne
loopne
arpl
sub
mov
adc
push
mov
xchg
mov
incl
or
dec
mov
sarb
push
leave
es
pop
adc
push
add
cwtl
inc
out
aam
mov
mov
push
push
sbb
pop
jnp
fdivs
scas
sub
xor
arpl
loop
mov
cmp
adc
mov
dec
icebp
cli
cmc
mov
fidivs
sbb
sahf
add
or
lret
jnp
mov
ficoml
ret
mov
fmuls
mov
mulb
inc
xor
ss
nop
mov
aam
into
adc
insb
das
rcr
inc
shlb
sbb
pop
xor
andb
loopne
mov
add
xchg
mov
mov
cmc
dec
jl
pop
fstpl
xchg
mov
mov
int
push
sbb
add
mov
jp
lea
sub
pop
sbb
mov
fcmovbe
addb
sbb
int3
out
add
rol
daa
stos
or
popf
ljmp
fsubrl
mov
xor
jge
mov
enter
aas
push
cmpsb
ljmp
pop
mov
inc
je
arpl
idiv
inc
aad
cmpsb
inc
loopne
loopne
adc
nop
sub
sub
sub
cmpsb
jne
shl
dec
inc
mov
pop
push
lret
cmp
push
ret
dec
iret
xor
inc
jge
test
lods
outsl
pop
xor
addr16
sbb
add
mov
test
or
iret
jno
popa
test
lret
fnstcw
cmp
sbb
decl
mov
lret
mov
rcl
test
rorb
jp
inc
test
mov
stc
aam
sbbb
lea
int3
test
insb
mov
dec
xchg
sahf
int3
movsb
xor
dec
clc
out
mov
jnp
pushf
jns
push
pushf
js
into
xchg
stc
mov
mov
sbb
mov
sbb
jo
test
lods
mov
or
adc
mov
daa
inc
lcall
pop
pop
xchg
test
lret
rorl
xchg
popa
xchg
sub
lret
movsl
int3
pop
jo
sbb
loop
xchg
shrl
sub
test
std
or
lret
jle
xchg
mov
push
lret
sub
dec
dec
loop
and
out
das
xchg
out
pop
imul
pop
mov
lods
fidivrl
gs
div
add
xchg
enter
sub
jno
add
jno
mov
mov
fsubl
test
or
dec
int3
pop
sub
stos
hlt
je
in
jg
sub
pop
mov
icebp
pop
mov
inc
ss
jns
xor
bound
lahf
insb
add
rdmsr
inc
cmp
or
shl
cmc
pop
test
fsubrs
mov
jae
ljmp
call
gs
push
jae
imul
subl
or
and
inc
cltd
xchg
push
add
ds
mov
cmp
and
mov
adc
and
daa
ds
cmp
out
std
sar
into
cmpsb
cmp
imul
sbb
inc
int
xorl
test
mov
test
icebp
cs
jmp
pushl
cli
xchg
and
inc
xchg
inc
in
movsb
or
jmp
mov
icebp
cmp
jp
in
xchg
into
xchg
popa
into
sub
aam
repnz
testb
xchg
jbe
icebp
cmp
mov
xchg
cltd
pop
pop
inc
bound
aas
inc
sbb
cld
push
or
in
lret
inc
cs
inc
cli
add
adc
loope
rclb
imul
jg
arpl
sbb
xor
sbb
xchg
lret
scas
mov
pop
in
in
mov
repz
adc
and
xchg
or
and
mov
in
cmp
or
pushf
ja
outsb
xchg
push
cltd
leave
mov
lret
jae
or
jnp
mov
rorl
mov
lds
scas
lods
fmuls
addb
push
dec
push
dec
sbb
dec
adc
sahf
ljmp
pusha
mov
sarl
decl
adc
mov
mov
sbb
int3
add
mov
cmp
sub
sub
push
in
mov
push
adc
cmp
mov
sbb
cld
test
insb
int3
lds
pop
jge
pop
and
jl
dec
into
pop
jecxz
sbbb
stc
subb
fwait
int3
add
loopne
xchg
mov
jmp
pop
push
sub
dec
xchg
fstl
xorb
sbb
in
dec
out
mov
mov
push
mov
xlat
std
xlat
rorb
imul
call
lret
inc
xchg
fimuls
cmp
test
adcb
jp
ss
jmp
cmp
inc
cwtl
pusha
test
stos
lret
in
sbb
mov
mov
and
sbb
cmp
xor
lock
or
push
pop
xor
pop
loope
or
xchg
ret
sbb
push
push
inc
adc
lret
loop
jae
fs
dec
add
imul
mov
pop
loopne
push
cltd
jae
mov
mov
das
mov
scas
jno
aad
loop
push
lock
dec
and
xchg
test
xchg
xchg
test
test
popa
mov
or
xchg
cmp
pop
and
inc
sar
sub
cwtl
insb
mov
xchg
jmp
call
add
fldz
mov
decl
roll
popa
jbe
fcoms
cmp
test
mov
arpl
jl
div
roll
iret
or
stos
dec
inc
mov
push
pop
xor
les
push
icebp
adc
fisttpll
pusha
pop
add
bound
pop
add
cwtl
pop
rorl
dec
movsb
push
or
jle
int
push
imul
xchg
push
fs
mov
sbb
push
push
lods
test
gs
inc
or
js
popf
inc
cli
or
push
scas
pop
mov
lods
enter
test
stos
fldcw
cltd
add
call
add
pop
inc
out
testl
dec
fildl
or
lret
adc
pushf
lcall
push
popa
leave
inc
fimull
cmpl
xchg
push
loop
dec
jl
and
mov
ret
inc
dec
mov
sti
roll
lahf
mov
jle
cmovbe
lcall
js
add
mov
inc
or
decb
icebp
cmp
std
lods
jb
dec
lock
mulb
call
aas
cld
outsl
fbld
cmp
mov
mov
testl
inc
jl
push
imul
les
pop
aas
shll
sahf
gs
jmp
adc
movsb
dec
outsb
sbb
push
mov
and
rorl
fxch
add
push
insl
mov
fistl
iret
bound
call
jae
adc
subl
sarl
push
into
mov
scas
das
sbb
rcll
addr16
imul
push
inc
das
in
or
ds
push
and
xor
ret
jp
mov
adc
dec
sub
push
int3
insl
aas
or
std
jp
mov
pop
clc
iret
or
xchg
sub
jnp
shlb
dec
jecxz
mov
push
aad
cltd
mov
jnp
or
push
jle
xchg
cmc
push
out
or
cli
pop
je
dec
popa
fstl
adc
or
adc
push
arpl
clc
sti
mov
test
out
arpl
adc
mov
testl
xlat
rclb
sahf
jae
aad
pop
cmp
push
jbe
sbb
notl
mov
in
sbb
push
aaa
push
outsb
movsl
mov
data16
or
dec
scas
loop
jb
into
icebp
lock
dec
pop
lds
mov
into
adc
cli
push
insb
mov
cmp
pop
jbe
roll
mov
push
or
arpl
cmp
iret
push
push
xchg
sbb
in
pushf
test
pusha
jae
push
jne
sbb
jnp
ljmp
or
mov
arpl
rorb
loopne
pop
xlat
dec
pusha
and
out
push
dec
sbbb
or
loopne
pusha
xchg
xlat
push
jecxz
fimull
mov
sbb
cld
adc
mov
mov
jnp
out
ficoms
mov
jecxz
cmpsb
push
lods
nop
sbbl
lds
jl
mov
jae
push
xchg
mov
cmc
imul
lahf
shl
cltd
ja
push
xchg
dec
jnp
and
mov
mov
les
xor
gs
sbb
xchg
adc
add
ljmp
shrb
adc
push
in
inc
outsl
push
cltd
inc
jo
jno
mov
pop
lret
stos
adc
sbb
mov
xchg
mov
lods
jns
or
sbb
jb
ja
out
sub
cmp
dec
jle
fwait
inc
jne
test
jmp
push
ja
sbb
mov
mov
ljmp
ss
xchg
in
jae
mov
pop
xchg
jno
mov
insl
out
mov
sbb
jge
push
or
push
jp
insb
orb
mov
inc
jns
adc
add
aaa
cmpsl
pop
cld
push
adcl
mov
and
pop
push
jl
pusha
test
bound
xor
insb
jno
jno
scas
xchg
fidivrl
xor
sbb
daa
xchg
jp
orb
iret
pop
negb
pop
jns
push
rep
repnz
outsl
pop
leave
push
fdivl
sub
or
xchg
sbb
add
mov
pop
aas
fimull
mov
jp
adc
add
lds
icebp
movl
adc
xchg
rdpmc
xchg
and
cmpsb
mov
jb
mov
sbb
and
push
sub
mov
scas
jbe
cli
and
test
cmc
es
mov
jnp
les
fs
mov
data16
cltd
rol
adc
ret
rolb
lahf
pop
inc
add
call
push
aad
sub
adc
negl
and
cs
movsb
sahf
daa
or
clc
mov
jns
in
test
in
adcb
or
dec
mov
inc
mov
int
notb
insl
lods
xchg
xor
scas
popa
rcrl
insl
xchg
hlt
icebp
sbb
xchg
adc
jge
xchg
or
push
sbb
mov
dec
mov
daa
fiadds
ret
fucomi
aaa
cld
xor
push
ret
sbb
jo
cmc
daa
cmp
popf
cli
sub
nop
mov
cmp
sub
aas
loop
jae
push
inc
ret
jl
out
ret
mov
inc
addl
fiadds
mov
jge
inc
push
mov
jne,pn
imul
jp
push
lods
cmp
movsl
fisubrl
xor
in
lret
icebp
sbb
sbb
adc
sub
out
cmp
scas
out
adc
das
sti
mov
pop
dec
or
jmp
pop
mov
jbe
loope
or
xor
scas
cmp
jmp
pop
fs
and
shlb
movsl
or
jnp
test
and
push
jecxz
mov
movsl
inc
jecxz
xchg
xchg
fsubrl
dec
dec
out
jo
adc
and
iret
cmp
rorb
dec
mov
mov
add
kmovb
push
into
sub
push
repnz
aas
dec
push
mov
aaa
pop
xchg
repz
pop
push
hlt
inc
imul
xchg
mov
push
mov
inc
mov
mov
in
sbb
shr
ljmp
add
mov
aad
popa
pop
bound
cmpsl
cmp
mov
test
shll
std
aas
dec
bound
das
push
xor
mov
call
or
pusha
jecxz
sbbl
incb
push
pop
inc
dec
in
mov
jp
adc
insb
mov
into
gs
int3
sbb
xchg
mov
cmp
jae
mov
cmc
mov
fstpl
adcb
aas
adc
mov
dec
mov
scas
cmp
cmp
mov
sbb
repnz
mov
int
popf
cvtps2pd
xor
clc
mov
mov
xchg
xchg
cmp
push
pop
es
jo
shlb
nop
les
popa
lea
cs
jg
push
push
jne
jne
sti
or
stos
or
shll
pop
in
mov
push
inc
and
mov
loop
xchg
adc
or
pusha
xor
dec
jl
popa
push
push
mov
push
and
pushf
mov
jg
mov
cld
call
xchg
sbb
imul
gs
sub
add
jns
xchg
cmp
inc
push
pop
in
stc
cmp
mov
and
pop
arpl
sbb
lods
dec
repz
jmp
jnp
jb
and
data16
mov
cwtl
insb
sub
pop
mov
lock
rcl
iret
pop
in
fisubl
mov
cmp
iret
push
repz
loopne
es
test
std
test
lods
leave
dec
jmp
pop
push
imul
and
lahf
jle
imul
pop
lods
stos
out
test
mov
movl
outsb
push
iret
inc
mov
jns
xor
in
sub
rclb
mul
add
js
subb
cmp
and
shlb
movhps
xchg
gs
sub
xchg
cmp
and
xchg
enter
mov
or
cld
xchg
mov
mov
mov
mov
je
pop
loopne
mov
addr16
add
pop
mov
pusha
adc
mov
push
mov
inc
mov
les
stos
rorl
cwtl
dec
clc
scas
and
mov
movsl
ficompl
add
lahf
and
inc
pop
sbb
aam
test
test
mov
pop
addr16
imul
mov
arpl
sub
pop
and
mov
aam
push
cli
xchg
pop
xchg
sbbl
ljmp
rol
into
out
xchg
xchg
cmpl
pop
insl
cmpb
inc
rorl
pop
add
test
fsubrl
adc
push
sbb
fcoml
iret
clc
mov
dec
mov
or
hlt
das
aad
push
cwtl
cs
cmp
cmp
mov
push
jbe
lea
je
sub
mov
lcall
and
or
pop
mov
xchg
xchg
mov
jl
cmp
xchg
das
or
add
in
loope
dec
push
pop
or
mov
jl
sbb
pop
xchg
or
in
sub
stos
lock
or
mov
sbb
cltd
jbe
jmp
adcl
mov
lahf
adc
subb
adc
sbbb
jle
enter
mov
arpl
push
sbbb
clc
repnz
enter
test
jg
lock
add
cmpsl
jg
sub
in
punpckhbw
cld
cs
inc
push
or
in
xor
fmul
ja
or
mov
sub
gs
popa
clc
call
ljmp
push
sbb
jge
add
lahf
push
imul
test
negb
xchg
imul
and
xchg
loope
or
out
jmp
outsl
sub
xlat
cmpl
scas
shrl
and
jge
adc
xchg
and
fsubrs
data16
xor
adc
int3
adc
xchg
shrb
push
and
dec
add
and
cmc
fdivrl
mov
idivb
icebp
jne
inc
xchg
outsl
loopne
mov
aad
pop
cs
push
sub
jno
dec
fsub
mov
xchg
cld
out
pop
add
and
sub
daa
divl
lea
aam
or
push
or
push
test
xchg
insl
sahf
jle
mov
and
fcoms
das
lcall
repnz
fiadds
sahf
in
jo
mov
pop
fstl
lahf
scas
sti
fwait
daa
fnstsw
repz
xlat
rorb
add
jno
xchg
mov
lea
mov
in
lret
add
test
jmp
jno
jb
lods
testl
push
rcll
push
fs
fdivs
sub
ds
aad
xchg
dec
inc
push
int3
push
sub
cmp
test
imul
pop
ja
aad
cmp
clc
into
jl
mov
and
movsl
adc
maxps
fwait
dec
repz
or
push
cmp
sbb
in
pusha
cmp
sub
cmc
xchg
xchg
pop
mov
mov
push
jno
xchg
into
sti
aam
cmc
popa
aad
and
mov
cwtl
fiadds
xchg
int3
or
mov
inc
cmp
mov
mov
sub
mov
xor
push
ret
jl
mov
push
inc
push
bound
lods
lds
push
lock
fidivrl
cwtl
mov
dec
popf
icebp
push
push
fdivrl
cmc
mov
adcl
xor
push
ret
daa
and
add
mov
xor
xchg
js
sbb
bound
aas
dec
push
xchg
outsl
inc
mov
sbb
push
inc
xorb
xlat
stc
xchg
xchg
mov
push
and
loopne
out
push
bound
and
sbb
cmp
and
or
dec
lds
xchg
fbld
and
mov
call
push
xchg
jno
stos
xor
jbe
in
ja
cs
cmp
xchg
daa
repz
loope
daa
popa
mov
sbb
push
pop
repz
loop
outsl
daa
dec
add
std
inc
and
mov
jmp
jecxz
push
out
loope
push
ret
pop
lods
jno
pushf
cwtl
imul
sub
mov
mov
fstpl
mov
adc
jecxz
adc
pop
idivl
dec
fwait
lahf
arpl
lahf
enter
dec
sub
bound
lcall
xorb
loopne
jno
enter
cmp
arpl
mov
ret
xor
call
and
mov
inc
xor
scas
push
pop
dec
jo
scas
popa
test
lods
adc
mov
aaa
cmp
or
inc
lahf
fwait
sub
cmc
pushf
lock
or
aaa
inc
adc
sub
mov
loop
mov
scas
sub
out
in
rorl
out
loope
cmp
cmpsl
andl
push
jo
adc
js
mov
mov
loop
rorl
addl
sti
add
sub
stos
lock
rcll
out
cs
or
xchg
repz
mov
mov
xor
xchg
push
or
aaa
test
testl
les
psubusb
adc
dec
ret
mov
cmp
adc
pop
inc
lcall
fs
dec
xchg
lods
inc
dec
popa
outsl
das
push
xchg
loop
and
jns
out
add
inc
sbb
mov
scas
fisubrs
adc
scas
push
sub
scas
jae
stc
fcmovnbe
hlt
pop
pusha
xor
xchg
je
shrl
add
dec
imul
mov
mov
mov
test
into
cmp
movsl
paddd
sbb
xchg
xor
xor
aam
lcall
je
cmp
pop
cmc
add
cs
sbb
and
pop
loope
push
pop
mov
or
cltd
mov
or
or
repz
jbe
adc
out
push
push
jg
mov
or
sub
adc
fadd
stos
lret
xor
out
xor
inc
repnz
cld
add
pop
imul
pop
xor
fistps
jecxz
xchg
dec
sbb
sar
jecxz
push
mov
mov
jl
in
popa
and
les
push
cmp
jg
out
add
lcall
cld
adc
scas
sti
out
pop
lods
les
ret
ud0
outsl
dec
pop
sti
adc
call
lahf
out
mov
xchg
mov
sbbl
jge
add
sarl
dec
ljmp
fldenv
adc
add
lret
or
and
pop
mov
sub
mov
adc
addr16
cmp
cld
fildl
push
sahf
lret
icebp
pop
das
fildl
repz
incl
out
push
lahf
cwtl
sub
arpl
movsl
ret
aad
hlt
out
jne
std
push
mov
add
pop
data16
push
ds
inc
int3
repnz
loopne
das
mov
xchg
inc
pop
std
or
xchg
push
sbb
inc
hlt
test
adc
pusha
test
das
mov
sahf
mov
push
or
aas
xor
jp
iret
mov
fs
xchg
ret
add
jo
push
int3
adc
or
in
jecxz
mov
push
push
mov
and
xchg
sub
mov
js
or
adc
ficomps
js
lahf
inc
cmpb
jecxz
push
and
mov
out
cmp
mov
xor
mov
inc
shrb
mov
jne
inc
jb
js
mov
int
ret
outsl
dec
mov
ret
push
cmp
mov
lcall
mov
and
sbb
int3
add
mov
mov
mov
inc
sub
cmpsb
sbb
xchg
fs
dec
jae
xchg
sub
cli
stc
lret
jle
imul
inc
push
popf
xchg
dec
cmp
mov
cmp
stos
rorl
and
rcll
lret
adc
inc
jge
jp
sbbb
mov
cmp
mov
sti
mov
or
mov
cs
sub
cmpb
cld
js
lods
push
shll
adc
jne
adc
mov
adc
pushf
mov
cli
jnp
fdivrl
jns
cmp
movsl
jae
mov
push
mov
mov
or
popf
mov
fnstsw
pop
jle
sahf
mov
loope
out
xor
in
adc
rcr
xchg
testb
ja
jg
aad
pop
mov
dec
mov
stos
add
cmpsb
gs
push
fdivrp
inc
je
jg
mov
dec
adc
cmp
ja
adc
test
mov
push
and
xchg
fidivrs
ret
out
mov
outsl
sub
mov
mov
and
cltd
cmp
cli
mov
push
fidivrs
lret
jp
call
inc
imul
jnp
push
hlt
hlt
stos
inc
or
repz
fcmovnbe
sub
in
orl
push
or
xorb
pop
insb
outsl
fiadds
sub
outsl
push
mov
fwait
dec
in
int3
sub
scas
pop
mov
js
cld
pop
ret
mov
jne
fldenv
cltd
das
pop
lcall
jo
mov
sti
je
int3
jl
repnz
cmpb
cwtd
iret
sub
inc
cmp
popa
xlat
or
fdivrl
mov
loope
sbb
ret
xchg
jp
fidivrl
aam
imul
ss
push
add
aad
sbb
mov
mov
jmp
jo
mov
jbe
loop
in
inc
mov
mov
xchg
into
lea
addb
xchg
in
js
movsb
mov
test
push
mov
test
inc
sub
mov
std
xchg
repz
push
std
movl
cmpsl
ficoms
sub
pop
mov
popf
std
mov
xor
adc
scas
lock
popa
orb
push
fwait
mov
jo
int3
xor
add
sbb
ss
test
sub
pop
pop
and
das
aad
mov
enter
dec
es
mov
add
imul
jmp
pop
ljmp
cmp
aam
rcl
loop
pop
xor
fsts
stos
int
add
cli
mov
jge
sbb
fucomi
out
scas
jno
add
and
rcl
cltd
cmp
push
jl
push
lds
sahf
mov
inc
push
addr16
xchg
jnp
dec
cmpsb
js
push
mov
add
cmp
and
jmp
and
repz
fdiv
dec
pop
jb
mov
fcomp
addb
sti
mov
dec
adc
sbb
xor
dec
jp
xchg
mov
dec
dec
mov
scas
or
jo
stc
lods
pop
fcoms
xor
cmc
aas
sub
f2xm1
cmpsl
cmp
cwtl
int
insl
lds
add
xor
sub
rorb
mov
loop
sbb
enter
mov
pop
gs
js
push
inc
mov
bound
enter
push
imul
repz
add
jno
mov
push
inc
aaa
leave
mov
aaa
xlat
xchg
xchg
inc
add
fisubs
jecxz
jl
xchg
sbb
xchg
push
int
inc
stc
loopne
cs
mov
adc
xorl
test
xchg
lahf
sti
out
xchg
clc
enter
xchg
jae
imul
cmp
mov
add
add
sub
mov
loope
pusha
test
scas
popa
iret
sub
jle
loopne
sub
push
add
lods
or
adc
xchg
sub
add
in
sbb
fs
jle
in
mov
inc
lds
mov
pop
test
sub
fldt
fincstp
jle
jle
pop
aas
fildl
or
mov
add
xchg
pop
outsl
pop
lea
mov
ljmp
dec
imul
ret
cmp
or
jb
ficompl
jnp
inc
je
fucomip
fildll
into
ja
jg
int3
in
cltd
fdivrl
rcll
aaa
cmp
and
mov
out
lahf
shl
in
mov
cmp
jecxz
sarl
jle
push
ja
gs
out
test
inc
popf
pop
clc
jp
rcll
and
lea
pusha
cmp
or
andl
cwtl
stos
aam
dec
pop
mov
push
out
jle
mov
mov
sbb
rclb
in
fbld
jge
mov
and
inc
aas
ret
xchg
xlat
or
popf
sbb
loop
mov
adc
sti
dec
cwtl
jmp
fcompl
dec
in
xchg
xor
fsub
movsb
pop
fld
push
xor
sub
rol
stc
cmc
test
mov
in
dec
je
js
insl
pop
jge
inc
push
cwtl
jne
adc
fadds
je
lock
lock
add
cltd
dec
dec
mov
pop
pop
lcall
vxorps
or
lea
push
movsb
push
lods
xor
popf
cmp
mov
mov
inc
jmp
pop
dec
xor
mov
inc
cmp
push
jge
sahf
dec
dec
or
stos
je
std
shl
ret
push
lret
cmc
loop
push
call
or
hlt
adc
mov
inc
in
push
ljmp
test
sti
roll
jmp
mov
pop
outsb
fistpll
xchg
repz
mov
rcr
xor
pop
les
lods
shll
nop
aam
jge
int
outsl
cmp
inc
jno
push
popf
dec
js
or
call
push
hlt
ret
je
test
aam
fisubl
mov
lahf
adc
lahf
mov
fsubl
adc
cs
jb
xchg
mov
sarb
pop
pusha
jge
or
mov
test
lods
jg
divl
and
jae
push
test
clc
lret
xorl
inc
cmpsb
cmp
add
sub
cmp
sbb
fcmovnu
scas
jae
out
push
addb
xor
push
push
dec
es
test
and
test
les
stos
jmp
loop
gs
icebp
push
jae
test
es
fnsave
and
testl
xor
arpl
jb
sbb
stc
rcll
or
inc
leave
sbb
in
add
dec
mov
pusha
jae
sarl
movl
inc
xchg
sub
sbb
push
ja
daa
aad
es
cmc
test
mov
jns
inc
ds
or
inc
push
icebp
sti
mov
gs
loopne
adc
mov
sub
popa
adcb
mov
add
divb
adc
cli
pop
or
out
cmp
add
pop
clc
loop
icebp
insb
sub
icebp
xchg
mov
sub
push
mov
pop
lds
mov
mov
out
add
fsubrl
and
push
lret
cmp
aaa
pop
xlat
mov
cmpsb
dec
jns
xchg
roll
addb
stos
enter
idiv
or
mov
fadd
jnp
xor
dec
adc
dec
arpl
sahf
inc
in
mov
jb
mov
mov
add
jne
mov
shrb
sub
mov
mov
scas
adc
nop
pop
mov
inc
out
ret
int3
or
mov
mov
jmp
cmp
mov
stos
lock
ret
mov
or
loope
inc
dec
mov
jbe
add
es
or
sbb
lods
xor
add
imul
xchg
test
xchg
inc
in
pop
cld
shrb
push
pop
jecxz
sub
push
outsl
pop
bound
lcall
shrl
mov
cmp
out
in
ret
popa
and
loop
adc
fadds
and
addl
test
inc
push
lret
push
mov
idivb
push
ss
idivl
cli
std
mov
sub
adc
mov
es
mov
repz
add
mov
out
popf
mov
sbb
call
mov
js
sahf
push
mov
cmc
call
repz
mov
pop
shll
dec
or
push
mov
cmp
outsb
call
jmp
out
mov
iret
sbb
bound
cltd
frstor
cld
jg
inc
negl
sub
or
pushf
je
es
lret
pop
pop
fldt
mov
xlat
loope
dec
pop
movsl
push
sub
pushf
push
or
push
pop
mov
push
adc
sbb
adc
sti
fstl
add
inc
and
mov
ljmp
movups
loope
loopne
fcoms
inc
pop
and
loop
dec
addl
push
fcompl
scas
mov
int3
ret
pop
test
popf
cli
in
int
push
mov
adc
stc
outsl
sarb
ja
jo
addr16
iret
in
call
push
movsb
psubb
dec
mov
jl
call
push
shrl
sbb
push
jb
fnstcw
cmp
pop
pop
addr16
mov
jp
ret
push
dec
ja
stc
ret
dec
je
sub
notl
push
out
adc
mov
dec
inc
and
ficoms
fisttpll
insl
cmp
pop
sbb
nop
fcmovnu
xchg
jg
mov
push
sbb
pop
cs
pusha
lds
sub
and
adc
mov
xor
mov
lret
cmp
adc
test
mov
stos
loop
lea
or
fcmovbe
adc
rorb
das
pop
sub
xor
popa
mov
mov
andl
sbb
cmp
mov
dec
es
cld
in
pop
lock
xor
mov
sub
mov
ljmp
mov
fisubs
jb
popf
mov
push
movsb
into
loope
js
push
imul
mov
push
dec
mov
or
add
sbb
sbb
outsb
stos
adc
adc
in
inc
inc
repz
scas
mov
cltd
mov
and
into
or
les
mov
sbb
push
out
movsb
in
shrb
sbb
ja
jbe
sub
or
loop
adcl
mov
hlt
outsb
add
mov
les
das
dec
out
addb
stos
pusha
cltd
or
dec
jnp,pn
adc
xor
cmp
mov
dec
jno
sbb
movsl
adc
imul
dec
cmp
aas
inc
adc
sbb
cmp
cmp
xor
push
jmp
popf
pop
cmp
aad
sbb
test
and
sbb
xchg
lock
shll
dec
or
dec
xlat
push
mov
xor
sbb
movsb
cmpsb
push
dec
outsl
xchg
dec
outsb
add
pop
test
nop
addb
cwtl
mov
gs
cwtl
sub
cmp
lock
adc
inc
sbb
adc
inc
adc
addr16
xchg
inc
xchg
mov
xchg
dec
push
inc
xchg
adc
sbb
fs
ret
jb
adc
lds
mov
or
daa
dec
mov
push
es
imul
stos
rcrb
popw
fnsave
dec
stc
jg
dec
xor
insl
inc
ss
jns
mov
adc
pop
jge
icebp
add
out
stos
repnz
jmp
ds
add
jmp
or
and
daa
fisttps
hlt
dec
xchg
cmp
inc
add
mov
jb
cmpsl
sub
jno
push
andb
pop
add
xchg
lret
mov
xchg
add
mov
mov
outsl
pusha
out
std
out
in
andb
push
add
sbb
xor
jle
rol
in
hlt
fwait
xor
jae
jns
mov
jae
mov
addb
mov
outsl
sbb
ficoms
arpl
add
lret
stos
adc
mov
xor
rol
xchg
int3
test
push
mov
insb
mov
sbb
push
jno
push
addr16
cli
inc
push
mov
add
daa
movsl
xchg
cmpsb
dec
and
mov
sbb
daa
sbb
out
popf
aaa
cmp
rcrl
outsl
pop
fisttpll
hlt
rclb
into
and
or
shlb
jg
fdivl
mov
imul
xchg
sbb
xchg
mov
pushf
cmpb
lods
clc
enter
push
cmpsl
aaa
push
jb
test
xchg
fimuls
int3
testb
lret
push
mov
jbe
cmc
insb
cwtl
out
inc
rcll
inc
nop
push
out
insl
arpl
mov
enter
sbb
jle
inc
mov
and
and
xabort
push
frstor
sub
xor
ret
mov
pop
les
testl
xchg
dec
fdivl
adc
cmp
out
dec
cmp
mov
je
or
mov
jg
addr16
xchg
jo
cmp
xor
cld
xchg
les
repnz
mov
xorb
test
js
stc
in
jns
pop
out
enter
stos
pop
stc
jmp
sub
add
cltd
mov
push
je
or
pop
pop
aam
mulb
out
xchg
clc
leave
outsl
push
jg
aam
and
mov
pusha
test
aam
mov
push
adc
mov
xor
inc
out
mov
int
push
roll
fucomip
and
sbb
stos
adc
jo
sti
in
cmp
stos
add
mov
xchg
dec
mov
imul
mov
pop
fsubrl
movsl
hlt
fidivs
lcall
rcll
int3
shr
cmp
ljmp
cmp
pop
pop
sarb
dec
sahf
aas
sub
ja
and
test
dec
pop
add
mov
dec
es
dec
aas
shl
inc
leave
scas
add
xlat
mov
cmp
mov
clc
aad
sti
bound
or
mov
sub
and
push
mov
sbb
icebp
loope
jns
mov
ret
xchg
mov
jecxz
sbb
pavgw
sbb
push
xor
or
push
mov
shr
repz
sub
jne
fbld
dec
aas
lea
adc
adc
jl
push
or
les
outsb
ret
inc
ds
and
add
cmc
mov
imul
andb
sbb
ds
push
arpl
stc
xchg
imul
lods
in
xchg
pop
addr16
xor
movsb
jge
add
ljmp
scas
cmp
sbb
mov
das
cmpsb
popf
stos
pop
mulb
mov
push
add
jno
das
mov
aam
subb
sbb
and
sub
pop
fmuls
xchg
adc
stos
jge
push
push
lret
fwait
ret
adc
daa
rcrl
inc
ficompl
add
mov
lock
xor
mov
rcrl
aaa
cmc
loop
push
int
mov
dec
cs
dec
lret
or
and
and
and
push
sub
int
adc
stos
dec
push
stos
sub
mov
arpl
repz
xchg
pop
jb
cmp
add
mov
hlt
mov
adc
pop
xor
mov
fsubrl
push
add
push
xor
cmp
xor
insl
imul
sub
push
nop
ljmp
addl
fsubs
adc
jg
cld
xchg
dec
or
lock
cmp
lock
inc
mov
add
fchs
aaa
xor
push
jmp
adc
out
inc
adc
add
stos
push
lret
enter
add
std
mov
jg
mov
adcl
push
mov
xchg
std
lcall
scas
cld
mov
adc
add
push
mov
jmp
insl
cmp
jg
cmp
and
sub
test
adc
inc
cmp
dec
pop
fcompl
int3
pusha
xchg
pop
jl
test
sub
push
mov
adc
cli
dec
mov
or
adc
push
in
push
xchg
loope
sahf
sub
arpl
sarb
sub
lock
xor
push
scas
popf
mov
es
xchg
sub
aad
ret
push
not
mov
data16
dec
inc
push
push
push
cwtl
dec
push
inc
jle
xchg
bound
push
movsb
scas
test
xchg
xor
jmp
sub
or
push
negb
ljmpw
cmc
pop
adc
enter
out
add
loop
out
lret
ret
ljmpw
push
jge
pop
mov
gs
mov
cmp
sbb
adc
repnz
pop
in
add
outsl
aad
repnz
scas
lret
mov
lcall
popa
jno
sbb
pusha
jecxz
les
pop
adc
popa
out
mov
aad
adc
ret
inc
mov
mov
dec
in
arpl
or
scas
clc
sub
outsl
setge
mov
insl
loop
loope
subb
in
fwait
xchg
jbe
or
jl
sub
test
loopne
repz
or
insb
sbb
dec
xchg
insb
rcrb
les
xchg
xchg
mov
test
int
push
push
jg
clc
lods
lea
ss
inc
lock
dec
xchg
or
fists
stc
lcall
aas
xlat
ret
std
adcb
ret
fstpt
push
mov
push
movsb
push
jae
mov
mov
mov
and
in
adc
aaa
cmpsl
lds
cmp
cmp
push
lcall
call
and
mov
pop
insl
lock
and
cmp
xor
sbb
mov
and
lods
jno
out
popa
and
ror
xchg
sub
jno
xor
dec
outsb
inc
arpl
push
pop
xor
mov
add
xchg
das
push
shrb
push
dec
call
out
mov
stos
or
xor
jo
mov
mov
mov
int3
cmp
pop
add
test
sahf
xor
and
sub
cmpsl
push
loop
pushf
out
xor
repz
enter
add
xchg
daa
aad
mov
in
cli
pop
dec
lret
jl
jbe
mov
movsl
fnstenv
push
setp
sahf
lods
fmull
fldcw
pushw
popa
pop
data16
rorb
mov
inc
stos
xchg
push
push
pop
xor
sbb
xchg
jbe
shl
inc
add
and
pop
mov
and
xchg
xchg
ffreep
xor
sbb
mov
xlat
mov
shrl
xor
loope
mov
xchg
jno
mov
cs
test
stos
push
xchg
nop
inc
xor
cmp
xor
add
dec
js
fs
push
insb
ror
or
adc
sub
scas
call
shll
scas
xchg
mov
or
aad
mov
mov
cs
push
cltd
xchg
pop
test
mov
lret
jmp
divl
gs
adc
or
xchg
mov
xor
or
jnp
dec
pop
arpl
shll
mov
mov
pop
mov
mov
mov
imul
sbb
inc
pushf
stos
mov
mov
orl
aad
inc
mov
mov
dec
pop
push
sbb
out
dec
iret
scas
lcall
icebp
cmpsl
lahf
cmp
push
arpl
and
mov
inc
mov
test
mov
aas
sub
out
pushf
sbb
and
inc
jne
jg
scas
imul
jge
das
loop
mov
ret
stos
jno
adc
mov
aaa
mov
leave
dec
popa
sbb
mov
push
add
mov
sbb
xchg
jg
pop
mov
cmp
mov
outsb
dec
adc
sbb
mov
dec
inc
insl
loopne
pushl
dec
test
or
test
sti
fcmovnbe
jg
inc
ds
in
cmp
sbb
std
leave
loopne
lahf
mov
mov
push
cwtl
sbb
icebp
cld
adc
sbb
and
mov
adc
popf
jae
inc
test
enter
push
in
push
mov
jno
push
xlat
gs
jne
insb
aam
jge
jae
xor
and
insl
outsb
add
test
pusha
push
mov
mov
inc
mov
cmp
xchg
xor
pop
mov
or
jg,pn
push
adc
fnstenv
cmp
mov
sub
push
jge
mov
mov
mov
cmp
bound
sbb
or
jle
jecxz
dec
clc
inc
cmp
inc
push
pop
orl
xchg
rcrb
fdivrp
insb
je
add
data16
jge
arpl
iret
fisttpl
jb
mov
adc
xor
mov
inc
fstpl
in
xchg
sbb
out
fucomi
cwtl
in
pusha
push
fdivl
xchg
test
hlt
cmp
xor
insb
mov
adc
or
jne
push
push
daa
cltd
mov
aam
xchg
in
cmp
xor
clc
push
sub
sub
lods
mov
mov
out
pop
cmp
cmp
lcall
rorl
jb
jl
rcl
mov
pop
jl
inc
ja
lea
xor
test
nop
adc
arpl
xor
xchg
push
out
popa
cmp
addb
xor
stc
push
cwtl
ljmp
jbe
jge
les
clc
test
mov
sbb
push
out
icebp
push
mov
aad
insb
mov
dec
popa
dec
call
adc
sub
add
lock
inc
xchg
mov
iret
fcompl
and
dec
xlat
dec
inc
sbb
xor
nop
es
int3
rclb
mov
fists
push
add
or
mov
adc
fwait
xchg
add
inc
outsb
cmp
pop
xor
shrb
jns
pop
and
push
pop
cwtl
lret
xor
in
out
enter
out
lcall
in
inc
pop
inc
ss
mov
retw
pop
push
xchg
in
insl
push
loopne
cmp
loop
sahf
xor
mov
pop
lods
and
outsb
sbb
pop
sub
cmp
adc
bound
sahf
xor
add
xor
jmp
pop
jl
sub
insb
shll
ljmp
jae
pop
js
jns
jmp
sub
cmpsb
outsb
and
adc
ss
insl
jge
jg
mov
xlat
pop
mov
pushf
sub
iret
fwait
or
call
imul
mov
mov
inc
fwait
add
mov
test
push
pop
sub
subl
push
mov
and
fwait
push
lock
jle
mov
scas
sub
scas
mov
test
inc
sbb
repnz
cmp
push
cli
popa
ss
inc
jnp
jno
sub
cli
mov
out
loope
mov
dec
jp
jae
imul
loop
and
mov
movsl
cwtl
popf
ljmp
cmpb
lock
data16
bound
rorb
adc
cmp
inc
or
iret
ret
xchg
lret
insb
xor
mov
jle
cli
je
inc
movsl
xor
lcall
movsl
push
outsl
mov
jl
and
and
in
inc
ret
push
fisubl
xchg
leave
loopne
mov
push
imul
in
ss
test
pushf
xchg
mov
enter
mov
lea
xchg
ds
into
inc
cmp
lahf
sbb
lock
shll
inc
pop
cmc
jno
outsb
dec
and
jnp
inc
mov
ret
in
adc
cmp
stos
shl
cltd
mov
jmp
loop
cwtl
jl
je
push
or
out
push
xlat
inc
inc
fistpl
ja
cmp
pop
and
fistl
push
xor
in
sbb
jno
cwtl
imul
pop
jae
pop
jns
aam
testl
clc
shll
jns
inc
xor
std
cld
bound
push
push
loope
stos
jge
cli
lret
adc
sbb
or
sub
inc
pop
jmp
jge
jle
mov
pop
imul
mov
mov
dec
push
adc
test
push
fwait
icebp
iret
decl
mov
xchg
jg
push
xor
adc
mov
repnz
mov
mov
push
pop
push
adc
xor
add
push
adc
ja
mov
jmp
inc
bound
ror
dec
mov
ret
das
shr
jno
push
test
movsl
arpl
dec
cwtl
xlat
push
pop
pop
jg
clc
xchg
mov
and
mov
in
mov
push
and
mov
fmull
or
or
add
aad
fstpt
lahf
shl
push
ret
aaa
ds
loopne
push
pop
mov
aad
add
gs
cmp
adcb
incb
mov
mov
int
test
mov
xchg
insl
dec
mov
orl
add
scas
mov
mov
cmpl
cmp
adc
and
mov
jp
out
mov
push
orb
std
dec
outsl
lods
repz
sub
test
rorb
js
loopne
jo
cmc
and
aaa
dec
add
ja
repnz
adc
negb
add
xchg
scas
mov
dec
mov
mov
jno
xchg
vcvtsi2ssl
and
sbb
int
testb
sbb
lds
or
es
ss
push
pop
adc
popf
adc
cld
inc
mov
pop
jno
jge
sbb
lds
jg
push
pop
mov
pop
push
arpl
nop
dec
rcl
xchg
jno
cmp
pop
ja
sub
sub
scas
in
scas
sbb
jmp
sbb
cltd
dec
in
jo
mov
xchg
or
data16
inc
add
aas
iret
aad
xchg
aam
je
jbe
imul
and
mov
lahf
mov
mov
in
mov
and
std
and
in
and
mov
xchg
dec
sbb
push
dec
test
push
out
stos
aad
mov
fldcw
shrb
add
pop
xchg
sahf
pusha
mov
test
jecxz
fdivl
lods
jecxz
test
in
nop
pop
stos
cmpsw
jmp
out
pop
insb
push
lods
iret
iret
stc
inc
stc
in
pop
cltd
sahf
jle
xchg
mov
xchg
aas
sbb
mov
sbb
cwtl
and
mov
mov
enter
push
outsl
push
sub
mov
aam
inc
sbb
dec
in
mov
inc
stc
cwtl
fsubr
repnz
xchg
sbb
mov
sahf
pop
lods
adcb
xor
cmp
push
xor
jmp
cmp
movsl
fidivrs
hlt
andl
insb
adc
xchg
addl
inc
iret
stos
fs
dec
mov
ds
mov
cmp
pop
or
sar
xchg
stos
inc
xor
stc
test
jl
out
jg
ja
adc
pushf
mov
mov
mov
mov
test
dec
inc
push
jnp
add
stos
rcr
lds
and
pop
jns
cs
mov
inc
cmp
mov
pop
ret
pop
mov
and
rclb
jb
popa
xor
or
push
mov
mov
sub
orl
arpl
aam
push
aas
call
jle
sbb
xchg
add
or
shl
push
mov
stos
sti
and
push
mov
in
or
pop
mov
enter
xchg
inc
inc
jecxz
lods
out
cmpsl
in
enter
xor
ds
cmp
les
mov
xchg
dec
popf
arpl
jb
hlt
jno
and
add
push
xchg
pop
fdivrl
adc
fdivr
lcall
jl
sbb
and
push
jo
addr16
mov
enter
clc
cmp
ja
jbe
inc
into
pop
cwtl
sbb
cmp
das
cld
push
and
push
lcall
aad
test
sbb
push
pushf
ret
fwait
lods
push
imul
les
push
js
push
pop
dec
sub
pusha
mov
test
jmp
pusha
sbb
mov
adc
inc
outsl
mov
lret
pop
jle
add
mov
xchg
sbb
adc
jmp
push
test
mov
fwait
insb
sub
inc
sbb
les
scas
mov
out
scas
mull
and
les
out
ljmp
sbb
dec
pop
dec
adc
dec
leave
clc
inc
aaa
lcall
test
cmp
fisttps
cmp
ds
into
push
and
adc
push
xor
adc
mov
push
mov
push
pusha
or
sub
sub
mov
xor
and
decl
pop
ja
aam
call
sti
and
inc
scas
cli
ret
mov
jp
adc
mov
or
mov
arpl
cmpsb
test
xchg
inc
pxor
leave
lcall
in
fwait
pop
sbb
in
pop
lods
dec
imul
pop
enter
aad
sbb
adc
fs
or
mov
cmpsb
xchg
sbb
gs
lret
push
out
test
in
xchg
lcall
or
xchg
scas
popa
or
scas
lock
cmpsb
sti
ljmp
sub
scas
xchg
int3
rorb
subl
nop
fsubrl
mov
call
push
fisubs
out
ret
push
jle
outsb
add
inc
scas
mul
cmpsl
imul
les
jmp
mov
inc
sub
sub
xor
jne
flds
lea
hlt
jns
sahf
inc
in
mov
sub
inc
mov
cmpb
rcrb
in
call
push
fiaddl
mov
movsl
repnz
pop
test
cmp
sub
push
divb
push
cmpsb
lock
sub
cmp
inc
jp
ret
test
or
cmp
shlb
push
jl
loop
repz
mov
xor
nop
dec
in
adc
mov
jge
lock
je
test
cmp
outsb
sub
push
dec
into
test
jno
outsb
divb
das
mov
aam
loop
cli
jmp
cld
rol
xchg
dec
add
mov
pop
incl
or
xchg
lcall
push
lcall
mov
dec
mov
xor
fcmovne
xchg
pop
jp
add
sahf
fstpt
dec
adc
sti
negl
nop
sbb
mov
test
pushf
cmc
push
aaa
fnstcw
loopne
sub
mov
out
test
adc
adc
jnp
pop
add
add
insb
mov
hlt
push
popf
jg
push
adc
lds
mov
orl
xor
sbbl
push
jns
add
jne
cmc
xor
xchg
rorl
and
push
repnz
mov
shl
pop
inc
jno
xchg
aad
and
add
fidivrl
inc
sbb
adc
loopne
lret
imul
push
xchg
push
in
sbb
cli
add
cmc
mov
loope
add
pushf
shl
inc
dec
inc
les
test
cmpsb
cmp
imul
pop
inc
xor
sbb
out
lds
lods
imul
test
cmp
shrl
fsubrs
sti
mov
mov
dec
rolb
pop
sbb
sar
fxch
lock
add
mov
imulb
cmpl
jmp
cld
sbbl
cmp
repnz
fchs
pop
cmp
jb
mov
xor
xchg
stos
imul
add
pop
aaa
aad
mov
adc
sbbb
add
mov
or
dec
xchg
mov
subl
mov
outsb
xlat
in
mov
or
hlt
fdivs
push
dec
inc
rclb
dec
xchg
movsl
popf
fs
fwait
dec
sahf
aas
push
adc
loope
pusha
lea
repz
or
in
lods
jl
in
inc
mov
inc
inc
cmp
test
add
mov
outsl
inc
in
inc
aad
test
repnz
xor
dec
adc
frstor
xlat
stos
lods
mov
xchg
repnz
rcrb
lods
push
jmp
repnz
pop
xor
xor
cltd
and
cmp
cmp
or
mov
fmulp
jg
rcrl
hlt
pop
inc
es
pusha
xor
int3
lret
jmp
repnz
jno
fwait
stos
cld
scas
adc
push
push
push
mov
xchg
mov
lret
mov
xlat
sub
out
or
stc
cmc
push
pop
aas
es
adc
or
xchg
test
aas
jg
cs
std
ret
pop
movsb
push
sub
inc
push
jae
add
jne
ret
cmp
jne
lds
fisubrl
scas
fmuls
div
cmp
cmp
or
or
dec
xor
dec
pop
popa
mov
mov
add
dec
imul
into
pop
jo
icebp
and
xchg
or
or
jge
insb
jo
pop
idiv
lcall
fsubrl
insl
shrb
mov
mov
lds
lret
inc
xlat
in
aam
cld
cmp
mov
jl
in
mov
stos
mov
lcall
insl
push
lea
je
iret
push
sbb
out
clc
fdivl
fstl
cmc
cmp
pop
lret
pop
iret
rcr
sahf
cmp
jl
lea
xchg
push
les
pop
add
aaa
add
jl
sbb
rcll
xchg
cwtl
imul
jnp
jb
cmp
notb
mov
insb
xor
sub
xchg
popf
inc
add
mov
movsl
pop
pop
addb
scas
cld
data16
sub
loop
scas
fistpll
mov
les
popa
lea
inc
push
inc
sarl
add
aas
adc
ds
pop
les
mov
jbe
xor
lock
mov
pop
fdivr
or
mov
cwtl
popf
lods
int3
out
mov
xchg
jno
shll
sbb
dec
lahf
test
insl
mov
les
xchg
rcll
lahf
call
xor
lods
mov
cmc
pop
in
pop
mov
or
imul
daa
or
inc
rclb
pop
pop
outsb
push
add
adc
sub
jg
mov
jp
shll
mov
dec
lahf
lcall
adc
xchg
cmp
sub
mov
pop
lods
mov
sbb
das
inc
enter
jge
xor
jbe
push
cmp
xchg
inc
shl
sub
inc
inc
pop
mov
pop
lods
outsl
xchg
bound
add
cltd
inc
mov
stos
ds
push
pop
lods
pop
inc
inc
mov
inc
jmp
lcall
fmull
jmp
push
daa
push
in
mov
rorb
xor
orl
repz
jno
lahf
sbb
add
xchg
xchg
ss
push
outsb
cmp
ss
push
in
dec
loope
jg
push
xchg
jmp
aaa
sub
and
or
sbb
xchg
push
mov
out
test
shll
push
rolb
in
adc
jecxz
sbbb
push
js
mov
mov
and
popf
jno
mov
push
scas
leave
rorb
cmp
mov
dec
leave
leave
dec
popa
sbb
or
cmp
add
out
repz
inc
clc
or
scas
mov
xchg
sbb
pop
jns
js
dec
addb
insl
cld
pop
and
mov
cwtl
or
inc
xchg
mov
jmp
lret
sbb
pop
mov
leave
fimuls
or
outsb
out
xchg
push
fisttpl
mov
inc
cmp
movsb
push
repz
push
xchg
lret
cltd
sbb
roll
cmpsl
jb
outsb
sahf
jno
rorb
push
das
mov
dec
cmp
mov
cmova
cmpl
pusha
loopne
lds
imul
pusha
mov
fldl
push
mov
jne
or
inc
mov
sub
push
dec
scas
xchg
push
and
scas
cmp
in
loopne
or
xor
shll
xchg
int
inc
sti
sbb
das
daa
push
and
lret
test
xor
test
mov
adc
lock
xchg
push
mov
xchg
sbb
jle
insl
dec
cmp
in
push
negl
dec
andl
sbb
mov
jno
leave
jge
aam
loope
sub
dec
rorb
pop
dec
mov
cmp
inc
outsl
out
push
pop
mov
scas
mov
andb
aam
xor
cmp
push
sbb
pushf
mov
push
cltd
fs
add
inc
and
cmpsl
dec
jns
sbb
add
orb
fcoml
xchg
push
test
adc
pusha
inc
stos
ds
push
mov
mov
push
jo
mov
cmp
loope
xchg
sub
xor
mov
pushf
test
jp
mov
xchg
ds
dec
out
adc
shll
lods
mov
fiaddl
sbb
cwtl
popa
cmc
out
and
inc
repz
iret
mov
add
sarb
pushf
dec
xor
mov
int3
out
fwait
inc
insb
bound
movsl
cmp
int3
pop
mov
stos
jne
dec
or
xchg
fisubrl
jge
xlat
sub
xlat
pushf
or
add
inc
xlat
int
inc
imul
sub
jne
aam
jbe
fldpi
lcall
leave
movsl
mov
sbb
int3
mov
fsts
out
mov
in
or
sbb
rcl
in
push
stos
jae
cmp
xor
or
repz
das
repz
push
addr16
insl
call
stc
xor
cs
inc
outsb
inc
outsl
mov
mov
dec
fwait
pop
xchg
jle
adc
out
mov
stos
ljmp
or
fsts
mov
jno
outsb
xchg
out
jne
testb
or
out
push
jmpw
dec
insl
add
outsl
jp
xchg
insb
mov
insl
jb
inc
mov
mov
push
pusha
ss
pop
mov
lods
pop
mov
adc
repnz
sub
pop
cmc
xchg
rclb
test
fidivrl
call
das
sbb
ret
mov
cmpsb
jg
sahf
scas
push
dec
in
loope
pop
nop
jle
cmp
dec
sbb
fiaddl
jecxz
fiaddl
jecxz
fstpt
lcall
push
xchg
pop
or
jnp
xor
icebp
dec
dec
fs
cmp
ss
pop
ss
xchg
push
inc
pop
push
mov
mov
cmp
push
outsl
mov
or
mov
mov
data16
sub
adc
pop
add
mov
in
outsb
jp
fisubl
mov
cmp
lcall
push
lahf
pusha
mov
adc
rcll
and
popl
push
push
push
inc
out
or
mov
fldcw
in
dec
push
mov
mov
jge
adc
inc
mov
jmp
push
js
sub
out
adc
xchg
mov
daa
pusha
enter
xor
aad
fstpl
popf
in
inc
sarl
jns
sub
sbb
xor
add
sbb
dec
pop
aad
cmp
into
test
lahf
cmp
jmp
jne
jbe
jno
jns
stc
cmpsb
arpl
push
scas
dec
fsubrs
cld
push
repnz
inc
jb
pop
adc
inc
adc
test
imul
sti
negl
xor
stos
das
negl
mov
pop
push
push
daa
jp
push
push
push
data16
sahf
cs
js
shll
das
rolb
jns
bound
or
mov
inc
icebp
pusha
or
xchg
cmpl
lods
sub
pop
and
pusha
cmpsl
into
fdivl
mov
xor
out
lahf
std
stc
adc
xchg
mov
pop
sbb
sbb
add
xchg
int
mov
pop
das
jle
out
mov
cmpb
jo
inc
cmpb
ss
or
out
lods
out
test
push
sub
pop
repz
inc
arpl
sbb
call
mov
jg
jle
lret
arpl
sub
fisubs
fildll
dec
std
mov
mov
sub
lahf
hlt
fistl
scas
leave
xchg
add
fnstsw
inc
addr16
sub
daa
lock
cmp
mov
add
cmpsl
fyl2x
outsl
inc
daa
inc
test
inc
sti
mov
inc
mov
sbbb
sub
sbb
sahf
xchg
insb
sub
popa
es
incb
xchg
pop
pop
decb
and
test
cs
and
or
xchg
and
sbb
mull
jmp
push
xchg
popf
push
pop
sub
pop
sbb
pop
sub
mov
lcall
stos
jle
lods
and
fwait
lds
xor
xchg
dec
out
lds
and
or
and
pop
cmp
mov
jae
ficoml
scas
dec
and
cmp
stos
cld
sbb
stos
pop
or
pop
sub
leave
jmp
pop
cmp
cmp
cmpsb
stc
test
lods
push
xchg
fsubp
mov
imul
popa
or
int3
push
dec
aam
icebp
stc
movsb
shll
xchg
test
outsb
add
pop
xor
int
rorl
jle
iret
push
xchg
out
jnp
dec
ja
fldt
mov
ljmp
mov
insb
dec
mov
xchg
jnp
sub
dec
and
cs
lret
sarb
in
lods
stos
leave
push
inc
and
jbe
loopne
cmp
and
testl
aam
inc
jbe
adc
xchg
or
mov
outsl
or
mov
xchg
push
and
int
shr
cmp
xchg
popf
sub
lock
mov
mov
xor
popa
jmp
cmp
leave
ret
rclb
or
adc
cmpsl
out
stos
sub
jb
pop
jno
cli
iret
add
push
imul
cltd
cli
sub
aam
fs
mov
dec
cli
inc
in
popa
adc
nop
sub
sub
sub
int3
daa
imul
sbb
mov
arpl
pop
dec
dec
pusha
into
daa
mov
out
inc
mov
insb
inc
icebp
cwtl
int
and
inc
es
and
cli
xlat
fwait
ret
mov
ljmp
lret
shrl
hlt
push
cs
cmpsl
and
testb
jle
ret
sar
out
dec
and
clc
sbbl
dec
and
xchg
pop
inc
mov
dec
and
scas
mov
rolb
lahf
xor
jo
mov
sub
ljmp
jp
lea
push
arpl
icebp
fwait
and
mov
iret
adc
xchg
stos
inc
sbb
cmp
inc
das
xchg
insb
in
cwtl
xlat
xchg
mov
sarb
mov
fimull
pusha
inc
ja
enter
pop
sub
xchg
and
mov
cld
pop
test
test
add
jmp
repnz
add
jge
xchg
xchg
out
pop
adc
and
js
das
sub
sub
push
in
and
leave
movb
jne
mov
adc
push
ficoms
dec
test
sbb
adc
xchg
psubd
push
dec
xor
mov
stos
sbb
ja
mov
and
jg
add
pop
lahf
loope
outsl
stos
cs
add
cmp
mov
mov
jno
push
mov
bnd
cmp
jbe
ds
or
pushf
lea
mov
add
inc
ret
sub
or
cld
sub
xchg
notl
pop
add
imul
loopne
daa
bnd
push
inc
int3
push
in
js
mov
jge
mov
sbb
outsl
add
push
test
mov
test
add
les
popa
cld
jae
jns
or
jge
addb
aad
xlat
mov
je
xchg
ljmp
xchg
inc
repz
pop
mov
es
push
and
cmp
int
mov
ja
xor
or
sbb
rep
rclb
test
mov
add
mov
incb
ljmp
mov
imul
jne
int3
or
adc
cld
in
inc
stos
push
rorl
lahf
lahf
in
fs
and
imul
pop
adc
xor
gs
xor
mov
movsb
sbb
pop
mov
mov
mov
daa
pop
xchg
xchg
sub
xchg
in
dec
push
pop
jbe
jo
scas
cmc
out
stos
mov
xchg
sbb
lcall
jl
fldt
cmp
sub
xchg
add
imul
inc
push
adc
int
xchg
in
xchg
pop
or
dec
fldcw
push
jl
rorl
cli
fwait
sub
inc
out
xor
into
pusha
or
sahf
lret
and
adc
fidivrl
cwtl
stos
jp
fwait
cmpsl
lds
add
adc
int
movsb
sbbb
inc
inc
movsb
pop
xchg
mov
mov
pop
sbb
out
mov
fdivs
cmp
stos
xchg
into
xchg
jne
push
inc
ljmp
rcll
lds
test
pop
mov
inc
aas
fsts
arpl
stos
scas
inc
aas
dec
jns
dec
or
pop
and
mov
rclb
ja
js
sub
push
insb
or
and
jmp
cmp
sub
sub
jno
sbb
or
je
rcl
je
leave
jmp
and
xchg
mov
out
lcall
jle
sub
push
out
nop
xor
mov
dec
out
add
popa
xor
and
imul
pushf
loopne
out
mov
jns
xchg
int
push
pop
adc
addr16
cmp
jns
fnstcw
inc
jecxz
xor
repz
pop
push
mov
mov
mov
hlt
inc
movsb
push
xor
xlat
outsb
or
jns
dec
fcom
lret
pushf
dec
inc
lcall
outsb
mov
sbb
inc
fisubrs
cmp
sti
mov
mov
cmp
mov
xchg
inc
test
inc
out
aas
cmp
fstpl
outsl
add
add
aaa
fstpl
test
push
mov
and
inc
js
mov
sti
pop
loope
xlat
push
lods
mov
popa
sub
or
sti
outsl
pop
fsubs
adc
pop
into
sub
and
adc
push
lahf
xlat
out
lea
scas
test
ja
or
push
ret
and
hlt
mov
lods
dec
xor
int3
scas
imul
xor
cmc
mov
lahf
cmp
mov
push
sub
xor
cmpl
icebp
sub
dec
jmp
add
add
sahf
sbb
js
cmp
or
js
push
fisubrs
or
jl
fs
sbb
xlat
pop
notb
sti
popa
adc
mov
sbb
mov
or
lods
push
add
add
and
daa
aam
mov
pop
mov
add
xchg
ret
push
repz
sbb
inc
cmp
mov
add
lods
pop
aad
adc
inc
sbb
xchg
sub
mov
jp
xchg
push
rol
insb
cli
test
daa
push
inc
or
cmpl
fcomi
sbb
push
xlat
add
not
xchg
mov
or
xchg
jae,pt
lods
pop
sub
test
arpl
or
mov
lret
repz
push
sbb
cltd
scas
dec
lds
cli
inc
daa
xor
xchg
inc
inc
fmuls
jo
lahf
pop
scas
cltd
jl
test
lds
push
repnz
mov
mov
hlt
adc
dec
das
jbe
mov
stc
shrb
mov
shrl
push
pop
addr16
popa
xor
idiv
enter
enter
test
clc
lods
sbb
mulb
mov
stos
add
dec
lcall
sub
fs
cmp
mov
mov
sub
dec
dec
cmp
lahf
ret
mov
es
mov
ds
loope
xchg
sub
xchg
push
mov
adc
mov
jge
dec
push
xor
add
fidivs
mov
xchg
ja
or
aaa
pop
mov
cmpsb
stos
nop
cltd
push
push
mov
pop
add
pop
pusha
leave
enter
xchg
pop
pop
xor
std
mov
xor
mov
mov
mov
stos
mov
dec
add
push
cmp
push
pop
bound
icebp
leave
dec
and
out
sar
pop
xchg
mov
xor
push
sub
fidivrs
adc
pop
xchg
insl
inc
xchg
mov
xchg
test
sub
jo
xlat
sub
loopne
in
push
nop
or
test
adc
jae
push
jne
fmull
sti
ret
std
sub
push
sbb
fisubrl
jge
cmpsl
mov
clc
xlat
call
jle
pop
in
out
mov
lock
or
mov
and
cli
cld
and
fdivrl
lea
in
daa
cli
insl
pop
rcrl
imul
movsl
mov
movsb
adc
cmp
lret
cmp
and
sbb
or
pop
test
and
mov
xchg
call
ficomps
popa
cmp
or
push
addb
mov
test
rcrb
mov
or
sbb
and
sbb
imul
sub
insb
rcr
sbb
adc
mov
out
jmp
js
lret
out
pop
sarb
xor
faddl
popf
data16
adc
cmc
test
cmp
add
push
dec
adc
aaa
add
cmp
mov
mov
clc
lahf
inc
pop
and
addr16
push
rolb
fstl
int3
enter
fs
adc
les
inc
faddl
sub
adc
push
sbb
pop
leave
das
jl
popl
jmp
mov
sub
out
leave
cmp
repz
mov
test
dec
mov
mov
jg
test
mov
roll
adc
mov
mov
xlat
cmc
popf
lret
jmp
pop
pop
pop
in
xor
stos
jo
push
push
dec
lods
cmpsb
mov
sbb
pop
and
mov
inc
xor
sub
adc
inc
loope
ja
nop
dec
mulb
test
and
nop
arpl
rclb
lret
pop
out
sub
mov
xor
jno
inc
pop
xchg
xlat
sbb
insb
dec
cli
mov
shlb
lret
stc
repz
nop
loop
pop
adc
sbb
test
lcall
dec
add
mov
jne
popf
inc
xchg
popa
js
inc
in
pop
repz
jne
adcb
xchg
data16
js
or
daa
pop
in
scas
and
and
shlb
mov
cli
movsb
push
cmp
xor
lret
or
outsb
jnp
pop
negl
pop
xor
ja
lods
sbb
adc
outsl
int3
push
lods
pop
add
insb
cli
int
jne
repnz
cmp
out
cltd
mov
xchg
cmpsb
jle
cmp
dec
out
jae
jl
xchg
jg
push
movsl
idivl
cmp
nop
dec
lret
push
push
adc
ja
aam
loopne
pop
out
aas
movsb
mov
and
jle
aam
leave
lds
inc
jg
sbb
lcall
aas
cld
or
sahf
jns
mov
push
pushf
daa
int
incl
out
out
orb
aad
mov
sarb
sbb
mov
scas
pop
and
dec
push
sbb
mov
mov
xchg
les
push
mov
inc
dec
popf
out
push
int3
loopne
aam
stos
pop
cmp
bound
cmpsl
mov
lret
nop
push
fwait
sub
mov
push
mov
push
pop
adc
xchg
inc
jae
out
add
addr16
js
jecxz
shr
sahf
add
imul
sub
xor
out
cmp
mov
add
mov
test
mov
test
shlb
mov
ss
sub
call
scas
xor
dec
frstor
loopne
inc
sbb
mov
sbb
mov
icebp
inc
roll
adc
mov
repnz
add
cmpsb
test
lret
push
cmp
dec
je
push
fwait
mov
adc
fcmovne
push
lahf
jnp
pop
int3
lcall
clc
xchg
test
sahf
jecxz
pop
push
ficomps
test
ja
mov
pop
outsl
and
test
adc
hlt
add
bswap
out
repz
mov
mov
adc
loope
xor
xorl
jmp
shlb
aaa
xor
pusha
and
es
fdivrl
sub
jns
dec
push
mov
jbe
dec
jnp
ljmp
push
xchg
nop
nop
pushf
shr
fimuls
out
shrb
jg
mov
test
sub
pop
adcb
sbb
pop
lods
xchg
mov
push
push
pusha
lock
mov
jmp
pop
fdivr
cmp
pop
sbbb
jno
popa
rclb
scas
push
push
push
xor
icebp
data16
icebp
cmp
inc
sbb
xchg
out
push
sbb
out
fdiv
mov
call
inc
popa
dec
xor
negl
xor
sub
aad
stos
fcompl
adc
aad
mov
sbb
add
push
rcl
sbb
jmp
into
sub
push
fbld
jmp
test
mov
sbb
lods
xchg
neg
cmpl
repz
addr16
jb,pt
push
or
and
inc
pop
xchg
int
pop
cli
jmp
stos
mov
cmpb
fld
in
jo
jae
dec
and
sub
adc
mov
mov
mov
xchg
adc
cmp
inc
ljmp
pop
push
jp
das
inc
mul
popf
jl
lods
sbb
xchg
mov
imull
xlat
insb
cs
rol
mov
repz
std
mov
mov
xchg
adc
out
xor
test
outsb
cmp
xlat
xchg
nop
and
sahf
js
dec
and
mov
dec
xor
dec
push
add
mov
xlat
int
jmp
mov
lea
push
je
push
dec
sub
xor
das
lret
pop
lea
lahf
int
aaa
or
mov
mov
jno
push
mov
js
pop
out
add
mov
aas
mov
mov
pop
pusha
pop
mov
mov
inc
lret
call
jbe
sbb
sbb
ljmp
inc
cmpb
dec
ljmp
loop
add
xchg
dec
cli
andb
ss
adc
jl
jecxz
jle
sbb
fs
mov
inc
pushf
jno
mov
sarb
ret
jb
fwait
pop
lcall
dec
jle
xor
aaa
mov
jge
nop
popa
push
push
or
bound
orb
mov
mov
pop
sub
les
sub
sbb
sti
or
jmp
shl
out
jno
fstl
lea
scas
addb
divb
jg
adc
cwtl
sar
ja
xor
inc
pushf
jns
aas
lods
int
out
lcall
pop
adc
xchg
xchg
cmpsb
out
fcmovu
cmp
repnz
orl
cmp
repz
cmpsb
cmc
filds
enter
cmp
lret
or
xchg
mov
inc
inc
sub
js
mov
rorl
orl
popa
mov
xchg
loopne
ss
inc
jge
lea
xchg
jns
nop
pop
jge
mov
xor
sbb
cltd
mov
cmpsl
sahf
rcll
adcl
and
sahf
sub
mov
jns
movsb
sti
sbb
xchg
push
xchg
mov
scas
inc
xor
ret
int
mov
cwtl
jmp
or
sbb
push
dec
mov
clc
pop
cmpsb
mov
mov
je
je
int
cmp
add
sahf
icebp
xor
hlt
in
sti
test
outsl
fs
dec
inc
or
gs
push
mov
mov
rorl
outsl
lret
xchg
insl
dec
ret
and
and
jns
cmc
in
bound
ds
hlt
daa
mov
cltd
popf
pop
mov
or
jb
xchg
sub
cmp
test
push
sbb
outsb
call
lahf
dec
lock
add
pop
fistpll
lock
cld
jae
mov
inc
push
fnsave
and
xor
sub
pop
xchg
adc
adc
lds
xchg
or
xor
jle
es
mov
xor
or
call
out
mov
xor
mov
jge
sbb
or
cmp
fst
mov
xor
rol
pusha
enter
push
out
mov
cmp
daa
pusha
test
add
add
xlat
mov
pop
mov
das
cmpsl
fnstcw
xchg
dec
adc
lea
mov
add
mov
fwait
pop
cmp
test
push
enter
pop
fdivrl
daa
sbb
sub
mov
rcll
jl
pop
add
cmp
inc
pop
rcrl
imull
daa
rol
xor
lret
pop
repnz
outsb
dec
mov
fcmovbe
fs
inc
in
cmp
scas
lods
outsl
nop
push
adc
dec
cmc
movsl
mov
pop
adc
push
cmpsb
into
jecxz
in
pop
aaa
or
mov
push
or
cmp
daa
xchg
dec
scas
sub
sub
aaa
pusha
mov
outsl
mov
push
mov
sbb
sub
rorl
aad
push
cmp
or
mov
push
mov
ljmp
jmp
inc
push
dec
test
dec
call
repnz
mov
sarl
mul
pop
int
push
into
cmp
shrb
sub
inc
pop
test
and
pop
out
push
dec
pop
cmp
fmull
and
add
jns
rclb
and
addb
dec
mov
add
sbb
push
int3
dec
xchg
fwait
jae
lods
dec
shll
imul
cmp
test
push
decb
mull
sbb
sbb
lcall
mov
lods
dec
in
mov
jo
fcomps
xchg
ja
xchg
stos
push
xor
and
ds
aam
or
xor
test
xchg
testb
jnp
sti
jmp
arpl
ja
lock
sub
adc
iret
xor
or
pushl
arpl
iret
cld
lcall
je
movsb
jne
insl
pop
mov
or
adc
cli
jle
iret
push
popf
ja
nop
and
push
adc
xchg
inc
jecxz
pop
push
inc
inc
fwait
cmp
xor
cmpsb
popf
add
adc
sbb
test
sub
stos
mov
push
cmp
ljmp
stc
sarl
mull
sbb
outsl
stos
xorl
mov
push
and
jnp
sub
push
jnp
ss
xor
in
push
and
fdiv
xchg
pop
pop
rol
test
mov
cmp
and
sbb
lods
ja
clc
mov
hlt
mov
cmpsb
xor
sub
aam
sub
test
aas
pop
les
jnp
mov
dec
and
or
lea
jns
sahf
cmp
xor
outsb
test
inc
int
popf
mov
je
cltd
popf
add
fs
push
int
xchg
pop
je
fnsave
or
dec
in
push
dec
jmp
xchg
lahf
sahf
cmp
dec
jle
sbb
ret
popa
stos
pop
dec
inc
ret
pop
jbe
jmp
cmp
imul
sahf
pop
rcrl
fdivrl
jno
faddl
pop
xorl
gs
jecxz
jnp
out
xchg
push
xlat
sbb
cmp
dec
push
andb
repz
decl
cmp
loopne
and
mov
call
jmp
in
jg
in
push
scas
stc
adc
sub
es
or
cltd
pop
push
sub
xchg
xor
pop
pop
cmp
or
cmpsb
jae
lods
push
fwait
bound
insl
mov
or
lret
mov
outsl
jbe
dec
xor
daa
mov
mov
insl
aas
outsl
cmc
mov
in
lahf
adc
lcall
adc
ficompl
jmp
and
xchg
leave
sub
in
fisttpl
cmp
rcrl
jno
sub
mov
les
pop
inc
inc
dec
call
lea
jbe
sti
aad
jge
ss
loop
mov
popa
add
jae
cmp
cli
shll
jge
xchg
adc
add
popf
inc
arpl
ljmp
fs
popa
or
pop
push
pop
push
lods
mov
in
mov
sbb
cmp
mov
test
ret
out
cmp
xor
aaa
lds
shll
mov
sti
jp
jo
jo
pop
cld
xor
dec
test
and
and
pop
idiv
xor
test
cwtl
jle
cmc
lret
dec
das
shll
imul
add
loopne
cmp
and
add
push
jo
popa
xchg
cmpsb
out
jmp
out
jae
pop
sbb
adc
mov
jg
out
mov
jg
insl
mov
hlt
and
jae
inc
mov
pop
stos
dec
mov
xor
pop
push
xchg
nop
push
out
test
sub
addr16
repz
cmp
mov
mov
or
push
xchg
inc
imul
dec
or
add
outsl
ja
push
test
imul
jp
pop
mov
push
enterw
sti
adc
ljmp
ret
pop
add
push
and
xchg
sub
sub
sbb
ret
std
pop
push
loop
scas
jmp
inc
lods
cmp
xor
and
sub
push
in
and
sbb
addl
rol
push
or
pop
pushf
and
fwait
mov
cli
dec
inc
inc
xchg
addb
or
stos
cmpsl
adc
and
out
adc
pop
jge
leave
jp
mov
addb
outsb
rep
nop
arpl
das
lret
ret
mov
adc
fisttpl
mov
dec
pop
xchg
xchg
cs
sub
inc
cltd
xchg
cmpsl
cmp
xchg
hlt
sub
repnz
gs
cmpsl
lret
out
and
out
or
mov
cld
sub
pop
xchg
mov
stc
push
test
std
gs
and
xchg
dec
push
fimuls
jp
adc
push
test
shl
hlt
sub
std
mov
out
outsl
mov
popl
orl
pushf
pop
inc
loope
fwait
das
cmp
pushf
ret
xchg
cmp
fidivl
ljmp
mov
pusha
cmp
jle
cld
lea
sub
cmp
fnstcw
movsb
fisubs
or
push
test
jno
scas
loop
cwtl
cmc
cmp
push
in
mov
enter
pop
and
pop
jl
push
mov
cmpsb
lret
jns
push
cmp
sbb
or
mov
jns
pushf
jmp
sahf
sbb
push
test
adc
sbb
or
add
jle
fs
xchg
jp
adc
js
hlt
mov
add
call
into
dec
sti
sbb
scas
mov
adc
aas
popf
fs
out
std
jo
cmp
cmp
push
cmpsl
inc
fs
add
out
mov
jmp
and
das
leave
gs
das
adc
mov
mov
ljmp
jbe
scas
push
addr16
jae
mov
lret
in
push
push
loopne
aaa
sbb
enter
imul
popl
fucom
push
xchg
fildll
dec
sub
popf
daa
ja
ficoml
pop
push
das
cmp
and
int
push
inc
inc
sub
dec
push
scas
push
in
test
popa
mov
int3
sub
mov
sbb
and
popf
xchg
sub
daa
out
mov
aam
or
jp
cli
sub
nop
pmaxub
outsl
jge
cmp
and
scas
pop
pusha
lods
fwait
xor
into
add
cli
xchg
sbb
test
jne
fstpl
add
fxch
imul
jg
push
das
and
cmp
cmp
push
mov
pop
mov
dec
int
addr16
and
into
xor
pop
push
insl
mov
and
lock
adcl
mov
add
in
or
hlt
insl
je
cmc
xor
cli
imul
aam
xor
rorl
mov
pop
xchg
mov
xchg
js
outsb
clc
adc
clc
sub
roll
lea
ret
push
mov
mov
lods
xor
push
scas
xchg
push
loope
add
loop
and
adc
dec
sbb
mov
add
dec
scas
insb
lock
dec
mov
xchg
pop
clc
out
xchg
std
ja
sarb
sbb
or
pop
ds
test
xchg
aam
subb
dec
sub
inc
clc
popa
dec
xor
jg
fisttpll
dec
test
xchg
fsubl
clc
test
push
fnstsw
enter
jno
fyl2xp1
jb
push
sub
jno
imul
xchg
in
push
jmp
sbb
lahf
sti
scas
or
call
sbb
into
push
stos
mov
cli
es
dec
push
insl
add
pop
lret
mov
mov
cmp
push
dec
sarb
lods
xor
andb
and
fcoml
push
stos
sti
rcrb
ds
jl
cwtl
mov
outsb
fwait
cld
mov
cmpsl
jl
push
mov
mov
jp
adc
xchg
aad
xor
or
scas
int
add
pusha
mull
xor
popa
add
dec
mov
scas
jge
mov
popf
mov
insl
dec
inc
repnz
inc
or
add
pop
stos
cmc
fldt
lods
in
out
mov
aad
es
cmp
sub
gs
negb
push
lods
lods
fisubl
inc
inc
or
inc
xchg
mov
mov
aaa
mov
adcb
int3
mov
pop
sahf
inc
fldl
outsb
scas
ja
les
xchg
test
hlt
mov
or
xchg
int3
sub
ffreep
mov
lds
rolb
aad
fcoms
bound
arpl
test
test
mov
cli
movsl
shrb
push
cmpb
pop
cmc
cmpsl
jmp
insb
push
add
and
fstl
fldl
mov
pusha
pop
imul
das
lods
jbe
popa
ficoml
jnp
cli
adc
dec
inc
aaa
cmp
ret
push
mov
push
add
xchg
aam
pop
cmpsl
and
shl
sub
xchg
sub
mov
xlat
int3
das
xor
jl
nop
mov
fstl
cmp
int3
add
loope
out
imulb
cld
mov
ds
sbb
mov
xchg
mov
ret
popf
into
fisttpl
or
add
sub
iret
add
mov
mov
iret
sbb
cmpl
add
scas
jne
jne
inc
je
call
clc
and
ficoml
fcomp
divl
xchg
out
enter
add
mov
enter
push
dec
or
popf
data16
push
lea
lret
xor
lcall
mov
adc
insb
jp
popf
jns
push
xchg
fnstenv
sbb
clc
je
insl
outsb
mov
roll
inc
shlb
ret
xchg
cli
jmp
push
fstps
icebp
mov
jmp
inc
addr16
add
jl
and
cmpsb
ror
cs
mov
jge
test
stc
jns
out
mov
fidivrl
mov
mov
pop
mov
pushf
push
pop
mov
sbb
pop
dec
clc
test
and
pushf
push
adc
cmpsb
fidivs
dec
enter
cwtl
xchg
ja
or
hlt
pop
or
push
cmp
mov
jnp
inc
cmpsl
mov
inc
int3
scas
inc
out
mov
add
repnz
add
cli
test
xor
sbb
jmp
fwait
xor
push
push
jp
pop
mov
and
je
cmp
das
inc
mov
pop
cld
sub
ret
dec
sbb
cmp
sub
push
cmc
inc
imul
aas
sbb
test
add
adc
rorl
mov
push
mov
dec
shll
out
dec
mov
out
jmp
testl
jmp
add
jo
movsb
push
mov
cs
fidivrl
mov
jmp
aaa
mov
data16
cmp
aaa
xor
mov
sub
jg
fwait
mov
push
call
aas
pop
pop
cwtl
rorb
faddl
lea
ret
or
ret
cmp
adc
add
call
jne
sub
xor
push
adc
or
jnp
adc
adc
aas
mov
popf
scas
jo
fsubs
mov
pop
fwait
push
inc
mov
stos
fdivs
add
in
sub
mov
adc
call
outsl
xor
sub
push
stos
sub
test
inc
insl
frstor
inc
xor
mov
ret
jge
cmpsl
lods
push
jnp
hlt
and
and
lret
mov
cs
sub
roll
push
div
out
mov
or
push
roll
and
adc
dec
xorl
cmpsb
ds
movsl
call
jnp
pop
inc
cmpsb
imul
aaa
mov
push
fdivrl
mov
sub
cmp
roll
mov
in
leave
sbb
outsl
mov
aam
sub
mull
sarl
lock
sbb
xor
xchg
inc
sub
dec
xor
inc
fwait
jp
mov
push
sub
in
fcoms
sti
mov
inc
icebp
xlat
xor
and
sbb
sub
dec
sub
add
mov
push
or
test
mov
int
outsb
fcmovb
mov
sar
out
jnp
jo
loop
out
push
jo
sbb
sbb
or
icebp
test
scas
mov
jge
into
test
push
ffree
xchg
sub
xlat
sbb
cmpsb
iret
cmpl
push
sbb
add
jle
sbb
inc
aaa
xor
mov
pmulhw
add
lods
test
bound
andb
xor
mov
and
lods
push
push
inc
push
xchg
sbb
pop
pop
jo
mov
adc
repnz
jo
das
popf
dec
stos
pop
dec
stos
inc
bound
mov
inc
push
es
sahf
mov
scas
je
or
mov
nop
inc
mov
divb
push
mov
cwtl
pop
mov
enter
pop
jo
jg
push
xor
pop
pop
fadds
cs
mov
fisttps
rcr
lea
stc
dec
fdivr
dec
in
cmp
mov
push
jmp
repz
mov
icebp
std
add
cltd
pop
daa
data16
repz
dec
nop
xchg
or
xchg
pushf
scas
push
and
adc
add
mov
int3
mov
outsb
mov
ss
imul
cmp
push
popa
ljmp
xorb
gs
shlb
nop
push
xor
sub
xchg
je
add
sahf
mov
and
or
fimull
and
lock
daa
sti
add
xor
inc
movsl
push
sub
mov
inc
in
xchg
je
or
scas
mov
aad
rcrb
test
jns
stc
inc
sti
jl
add
add
cwtl
mov
nop
mov
pop
loopne
xchg
xchg
movsl
and
xchg
cmp
add
cmc
sub
mov
popa
xchg
jecxz
xor
shlb
out
sub
std
repz
adc
sti
fstps
fsub
xorb
sti
jl
xorb
jae
in
or
cmp
sbb
mov
scas
aas
cmpsb
int3
shrb
pop
addb
enter
out
push
js
inc
outsl
inc
insb
pop
lret
insl
lcall
adc
dec
sub
subb
mov
inc
outsb
lods
sub
adc
movsb
jmp
xchg
loopne
push
jecxz
xor
adc
mov
andb
pop
and
push
or
ret
jo
xor
lock
pop
into
addr16
push
out
pusha
or
in
xchg
jae
add
adc
in
andb
cmpsb
aas
es
cmp
jo
push
lret
mov
in
cltd
loope
push
in
push
inc
mov
jae
icebp
clc
sub
insl
mov
pushf
and
mov
cld
bound
lock
jmp
pop
ja
mov
jmp
dec
jle
fsubrl
push
mov
mov
mov
xor
clc
mov
rclb
ja
imull
pop
lds
cmc
jnp
decb
cmp
out
in
repnz
or
repz
adc
mov
and
xlat
pop
mov
mov
adc
cmp
popa
sbb
cli
lea
aam
js
and
popf
shll
ret
push
loop
inc
push
sub
mov
jp
push
xor
pop
int
pop
ja
mov
les
test
js
cltd
dec
in
jne
lods
xchg
xchg
cltd
jmp
add
das
inc
clc
jae
imul
sbb
aad
dec
sbb
and
xor
stc
sub
repnz
frstor
pop
outsb
insl
or
sbb
and
xchg
dec
jecxz
xchg
shlb
rcrl
fistpll
xor
daa
adc
push
pushl
cmpsb
or
xor
xor
aaa
popl
xchg
leave
aad
addr16
adc
lahf
aad
arpl
fmull
push
mov
fcom
jnp
and
jmp
jae
mov
jmp
add
sbb
xor
test
jl,pt
fidivrs
inc
cmp
jge
hlt
mov
imul
add
and
pop
negb
inc
jo
scas
mov
adc
int3
fcoms
pop
cmp
fs
adc
iret
add
lret
dec
lods
cmp
leave
jl
in
push
sub
jge
xor
mov
mov
and
nop
xor
jp
mov
push
jmp
or
push
inc
or
adc
sub
mov
or
dec
cmp
jno
ret
hlt
icebp
cwtl
popf
outsl
arpl
xor
push
or
mov
push
push
cmpsl
iret
cmpsl
push
lcall
pop
mov
or
pop
push
dec
mov
jle
icebp
cld
mov
cs
gs
ret
sbb
lods
dec
mov
push
lahf
add
adc
xor
aad
cmp
and
mov
and
repz
lds
or
adc
mov
or
scas
adc
dec
daa
push
sub
lret
push
dec
gs
clc
rorl
xorb
lods
add
jno
mov
ficompl
mov
sbb
leave
adc
cwtl
jecxz
push
jmp
data16
fdivs
fld
lret
jae
jl
imul
test
fwait
ja
inc
arpl
mov
cmp
adc
xlat
mov
push
cmp
in
push
sub
lret
mov
push
std
mov
les
xchg
shl
inc
daa
sti
mov
mov
push
fstl
jmp
dec
lock
inc
and
xor
sbb
call
ljmp
sub
xchg
pop
fwait
xchg
sbb
pop
int3
lea
dec
add
sbb
test
jns
mov
loop
arpl
test
dec
test
rorl
and
xor
fisubrl
stos
sahf
pop
into
out
sub
mov
aaa
push
loopne
cwtl
pushf
xlat
pop
fs
pop
and
mov
je
and
jno
ja
sbb
dec
sub
inc
je
les
jae
testb
or
negb
fistpl
push
popf
rorl
int
adc
jle
pop
pushf
ds
pusha
ret
xlat
pop
je
das
dec
jno
and
mov
iret
jnp
nop
loopne
ret
mov
call
push
pop
and
sub
jnp
push
ret
lcall
pop
push
cmp
fdivrl
or
mov
xchg
inc
pop
adc
inc
push
out
or
in
insl
cmp
movsb
push
and
sbb
cmp
pop
pop
push
cmp
mov
test
or
mov
push
inc
inc
xchg
cmpsl
sub
xchg
cwtl
movsb
ror
lea
je
das
adc
mov
in
jecxz
out
aas
scas
push
aas
loop
lcall
nop
aas
jns
cmp
push
or
jno
arpl
call
sbb
adc
test
jns
jmp
ljmp
and
cwtl
loopne
mov
mov
in
es
adc
mov
nop
or
in
sbb
fucompp
push
scas
sti
sub
jnp
das
js
xor
cld
ljmp
icebp
sbb
aas
mov
scas
adc
pushf
push
xlat
mov
mov
cwtl
das
or
jmp
sub
cmp
daa
lret
ss
icebp
mov
bnd
ror
mov
or
lret
test
or
mov
sbb
ret
inc
stos
add
scas
adc
in
sbb
jne
sbb
repz
shlb
dec
lods
mov
out
push
mov
stos
jno
fmull
add
jmp
add
loopne
sbb
aas
mov
rol
push
cmc
mov
pushl
loop
push
push
fcoml
rolb
dec
lret
pop
sub
les
test
jle
push
scas
fbstp
movsl
mov
jbe
scas
aam
jmp
shlb
cmpl
adc
pushf
pop
fnstenv
mov
daa
or
sub
insb
push
mov
out
xor
xlat
jns
int3
or
sbb
popf
mov
or
imul
pusha
cltd
inc
loopne
out
pop
int3
sub
mov
push
adc
pushf
dec
ret
push
mov
cmp
push
inc
addr16
jecxz
aaa
sti
adc
lret
fdivrs
xchg
pop
sub
or
fisttpl
mov
in
imul
repnz
dec
and
or
mull
addr16
das
popa
aad
test
mov
or
mov
cmp
cmp
insl
adc
je
in
mov
jge
mov
mov
gs
xor
dec
fdivrl
cmp
fimuls
add
stc
enter
push
lret
stc
adc
mov
fidivl
adc
push
addl
into
scas
pop
jg
or
bound
pop
inc
dec
jecxz
inc
fucom
mov
pop
inc
inc
mov
int3
repnz
arpl
sbb
call
arpl
in
add
mov
pop
or
iret
or
jae
int3
js
enter
fists
fbstp
dec
jge
xor
cmp
out
addr16
aaa
enter
pop
lds
xchg
jp
stos
clc
pop
jg
or
inc
jle
xchg
adc
orb
add
cli
lret
mov
sbb
adc
out
pop
mov
adc
test
lods
jns
hlt
scas
mov
insb
cltd
cmp
pop
mov
fsubrp
and
fisttpll
loopne
scas
sbb
push
rcrb
mov
ds
sub
jg
int
in
and
into
jnp
sbb
mov
push
hlt
aaa
pop
lds
pop
mov
jns
push
sub
test
jge
push
lahf
les
dec
mov
xchg
call
cmc
stc
mov
mov
jae
movsl
jmp
faddl
cmpsl
shl
and
repz
jge
adc
cwtl
lods
push
pushl
add
mov
jmp
jl
aas
add
mov
add
jecxz
sub
pop
sti
negb
jg
scas
stc
adc
and
lods
add
push
pusha
imulb
mov
jp
push
outsb
ror
loop
repnz
push
and
cmc
dec
cmp
mov
iret
jnp
jge
ret
lods
and
sbb
je
sub
outsb
push
pop
dec
rol
mov
data16
mov
ret
int
inc
mov
xor
mov
repnz
in
pop
and
cli
fwait
pop
jp
je
or
cli
enter
insl
push
sbb
adc
jae
cmpsl
sbb
loopne
adc
sbb
cmp
gs
lds
subb
out
pminsw
jae
mov
div
das
loop
fadds
das
dec
mov
dec
movsb
sub
xor
pop
cmp
xchg
fsubl
cmp
fnsave
inc
lods
aad
dec
dec
pop
sub
insw
lcall
js
into
mov
test
scas
xchg
jmp
ja
aaa
mov
lock
fldcw
xor
ds
jnp
cld
and
ret
mov
iret
pop
orb
xchg
or
inc
fcompl
popa
mov
aad
subl
mov
xchg
out
repz
sbb
cmp
insb
mov
iret
jg
adc
push
movsl
or
lcall
push
sbb
icebp
cli
jecxz
daa
call
and
or
push
jo,pt
rclb
pop
nop
inc
out
or
les
add
orb
mov
add
shll
mov
cld
jge
enter
outsl
jl
arpl
mov
pop
push
dec
push
mov
inc
jo
ficomps
sbb
jae
jno
inc
push
xchg
je
jae
neg
cmpsb
jl
repz
mov
lret
sbb
insl
xor
imul
aam
sub
mov
out
jnp
add
and
fcomip
inc
push
or
sbb
mov
scas
lods
push
pop
mov
jb
add
cmpb
adc
mov
mov
jge
xchg
fsubrs
dec
jbe
and
les
icebp
loope
and
jmp
cld
xchg
aam
inc
sub
ljmp
popa
loope
lock
sbb
xchg
xor
mov
mov
dec
add
stos
push
add
jl
das
xchg
js
inc
rcl
rcrl
mov
cmp
out
int3
inc
xor
mov
stos
arpl
push
stc
sti
mov
aam
dec
enter
mov
mov
pop
rcr
ss
mov
movl
rcr
pop
or
ret
data16
repz
xchg
sar
popf
test
push
sub
mov
fldenv
push
pushf
daa
dec
cwtl
mov
mov
out
dec
cli
clc
int
test
push
xor
int
nop
repnz
lea
jp
ss
push
cmp
rorl
movsl
cld
add
clc
repz
std
xchg
pop
jge
inc
xchg
and
mov
cli
les
dec
call
pop
add
js
or
sub
and
or
call
cmpsl
cmp
push
jmp
mov
enter
stos
cmp
mov
scas
fcmovnbe
adc
jo
jae
and
mov
vpsubd
mov
or
mov
into
sbb
xlat
sti
mov
cld
sbb
pop
bound
xlat
sbb
aad
pop
in
and
sbb
push
mov
popa
adcl
pushf
in
mov
xor
adc
fidivrs
rcl
push
adc
movsb
repz
cwtl
lea
xor
jmp
mov
fwait
loopne
shl
xchg
movsl
jecxz
js
or
loop
adc
cmpsb
cmpsb
cmpsl
cmp
and
fwait
sahf
mov
mov
cs
int
fisubs
rolb
out
push
pop
cld
sbb
inc
cs
add
sbb
cmp
jge
repz
iret
scas
inc
lret
std
cmp
cltd
int3
pop
mov
xor
cmp
mov
push
add
xlat
outsl
int3
pushf
cmpsl
lods
cmp
add
sub
ds
call
test
and
push
inc
xor
add
inc
dec
fbld
repz
subb
cmp
or
mov
cmc
fsubs
jmp
and
and
dec
stos
or
shrl
mov
cwtl
push
xchg
shr
xchg
cld
or
jbe
clc
adc
mov
mov
fidivs
cwtl
jl
popf
and
mov
subl
repnz
subb
jp
icebp
sahf
or
dec
ljmp
mov
and
shrb
cmp
jb
cmp
movl
mov
shll
pop
cmp
mov
push
or
xchg
lods
pop
sahf
pop
sbb
loopne
pop
rcrb
fmuls
sbb
cmp
shll
jmp
ss
adc
mov
xchg
out
scas
cmpsl
mov
jo
shrb
stc
lret
shl
lds
jg
and
ljmp
or
adc
jl
jecxz
and
adc
pop
mov
mov
mull
inc
push
xchg
push
pop
xchg
mov
int
push
push
xlat
in
cmpsb
ret
sbb
addr16
shll
je
pop
daa
push
ret
icebp
jge
out
xor
hlt
sub
cmp
data16
clc
ja
lcall
out
scas
imul
sub
test
push
sub
cmc
lds
jmp
fidivs
ss
gs
pop
flds
popa
inc
push
test
inc
pop
xchg
pop
es
cmp
push
cmp
push
xchg
sbb
mov
jno
pop
addb
enter
pop
outsb
test
outsb
adc
iret
push
mov
aad
filds
mov
pop
orl
pop
dec
cmp
pop
pop
mov
sbb
and
repnz
lea
rcrl
cmpl
pop
xchg
jo
pop
repnz
jmp
repz
stos
cmp
adc
sub
pop
xchg
xchg
lods
popa
sub
inc
jbe
fisubs
mov
add
lret
popf
fnsave
and
cwtl
je
dec
mov
push
jl
xchg
popa
out
sub
popf
sarb
test
rclb
pop
cwtl
std
sbb
data16
int
cld
mov
mov
adc
sub
add
mov
ss
pop
sbb
popf
mov
or
out
add
fistps
jge
mov
adcl
out
or
gs
stos
xor
inc
into
outsb
jae
sahf
jo
cmp
popa
mov
and
jmp
pop
movl
pop
loope
inc
cmpsl
and
int
mov
shlb
pop
mov
sarb
stos
imul
aas
popf
mov
mov
adc
jbe
mov
sub
arpl
movsl
push
sbb
in
and
test
mov
ljmp
std
mov
and
push
cli
aaa
jmp
cltd
ret
add
mov
xchg
incl
ljmp
int
add
sub
lret
add
jp
and
sub
fwait
pop
add
roll
fmuls
adc
iret
int
add
adc
pop
inc
lods
sbb
xchg
cmp
std
cld
cld
jmp
gs
jbe
stc
mov
dec
je
sub
jo
jno
pop
das
or
scas
mov
jne
cmp
sub
mov
or
xor
xor
orb
sarb
lods
dec
pop
dec
push
jns
fsubr
or
test
xor
sbb
lret
pop
add
mov
repnz
add
ja
xchg
ss
in
push
aas
jmp
mov
cmp
cmp
mov
pop
test
in
ficoml
and
ret
into
daa
outsl
push
les
sub
fistl
adc
push
jmp
pop
or
repnz
xchg
push
movsb
imul
or
adc
push
mov
div
and
loope
add
movsl
jp
fwait
stos
jl
sbb
aad
loopw
movsl
stos
pusha
iret
ficoml
lret
cltd
outsb
jnp
adc
jmp
mov
jne,pn
xchg
loop
mov
outsl
fisttpl
leave
dec
stos
adc
add
mov
je
or
ret
in
jecxz
inc
in
loopne
push
das
sbb
push
clc
neg
cmp
add
call
lock
lret
jae
dec
mov
ficoml
cmpsb
hlt
cmp
inc
sbb
jecxz
xchg
shll
mov
mov
lret
rcrl
mov
pushf
cmpsl
ds
or
xchg
xor
movsb
ret
xchg
adc
xchg
xchg
jmp
cmp
pushf
lods
int3
gs
testb
mov
push
xlat
test
dec
sub
into
adc
mov
in
rolb
mov
push
mov
icebp
nop
in
pop
xchg
xchg
arpl
testb
xor
cmp
lret
sub
dec
int
jmp
add
push
imul
inc
fnsave
inc
inc
inc
out
xlat
test
and
jnp
gs
out
dec
xchg
scas
testl
xchg
push
ds
cmc
movsbl
aam
cmp
sarb
xchg
pop
rorb
pop
lods
imul
xor
and
ret
fstpt
jo
jmp
test
add
repnz
inc
jne
push
jge
add
sbb
ret
pop
xchg
inc
cmp
pop
mov
fiadds
test
cmpsb
in
cli
sub
cmp
push
ja
and
cmc
rolb
mov
push
sti
or
push
xor
adc
sub
lcall
sub
clc
out
mov
jae
xchg
cmp
into
lods
mov
movsl
sbb
pop
adc
pop
push
adc
ror
jg
cmc
shrl
xchg
ffreep
insl
jle
mov
and
jl
jns
rolb
outsb
les
ds
sbb
xchg
jno
bound
dec
aad
repz
iret
xchg
out
cmp
xchg
mov
xchg
out
mov
movsl
or
xor
jle
cmp
mov
jmp
cs
inc
xlat
push
sub
push
sbb
lods
insl
push
stc
adc
push
ret
jp
mov
sub
xchg
jmp
lods
mov
pop
sti
push
lret
mov
in
and
subb
sub
mov
xor
xchg
addr16
lret
test
ljmp
cmp
stc
xchg
add
mov
adc
mov
pop
fwait
and
and
imul
stc
push
push
lods
test
or
mov
xchg
pop
sbb
icebp
inc
push
fidivrs
loop
insl
fadds
int
dec
scas
shl
aas
dec
mov
add
repnz
jl
pop
loopne
sbb
stc
push
mov
adc
imul
fdivl
stc
stos
rol
xchg
sub
pop
ljmp
xor
pop
outsl
scas
rclb
repnz
sbb
scas
fldenv
dec
cld
enter
cwtl
imul
push
enter
sarl
jp
lea
add
sbb
imull
mov
mov
insl
xchg
inc
sbb
test
push
and
out
fisttpll
sahf
sub
andb
sbb
cltd
arpl
inc
shlb
xor
jo
repnz
and
inc
fdiv
pop
sub
cwtl
stos
cmp
lock
push
rorl
jae
add
mov
sarl
mov
rclb
daa
push
pop
mov
fs
mulb
mov
dec
fbld
in
lcall
cld
js
sbb
cmpb
push
xchg
jo
sahf
lods
cmpsl
mov
stos
mov
jmp
aam
cmp
roll
xchg
dec
adc
push
xchg
popf
xchg
cwtl
mov
std
push
sub
add
jb
movsb
adc
push
incl
outsl
mov
rolb
cli
mov
out
cmp
or
je
sub
adc
cmp
cmc
sub
popa
imul
xor
fmul
mov
iret
int3
cmc
adc
shrb
ret
sub
push
jo
fs
inc
rclb
mov
pop
jecxz
push
mov
mov
sub
cmp
sub
test
cmp
sbb
sbb
loop
jns
pop
xchg
test
scas
pusha
jmp
cmp
xchg
rcrl
mov
ret
sbbl
push
stos
jo
adc
or
daa
sub
pushf
aam
ret
xchg
pop
push
push
sbb
ds
fwait
mov
scas
test
repz
cmp
mov
ss
pop
testl
mov
mov
mov
ja
jl
cld
xor
leave
mov
out
xor
cwtl
je
mov
dec
das
fidivs
mov
inc
lods
add
mov
inc
mov
and
mov
cld
pop
dec
movsl
adc
push
cs
fdivr
cmpsb
shlb
push
xchg
imul
ret
mov
les
ret
mov
popa
out
jp
inc
lds
and
push
cli
mov
hlt
out
dec
decb
sbb
jbe
sbb
pop
lret
arpl
movsl
push
addr16
loope
outsl
dec
int3
adc
cltd
jne
adc
jns
fwait
push
pop
into
jle
mov
fmuls
mov
fdivl
ljmp
mov
push
lahf
mov
mov
shrl
mov
sahf
lea
insb
aas
rorl
mov
cwtl
imul
loop
mov
add
pop
sbb
cltd
add
test
jge
pop
and
setns
loopne
mov
fstl
xchg
rcrl
mov
cltd
and
cs
jmp
popa
outsl
stos
xchg
sbb
sub
repnz
dec
lock
or
into
sbb
shll
mov
adc
stos
mov
movsb
fucomp
cmp
aas
lahf
mov
mull
and
mov
pop
mov
insb
jmp
bound
push
cs
inc
sub
jge
loop
arpl
push
movsb
sub
lock
les
movsl
outsb
mov
jae
gs
cmp
or
mov
in
loopne
dec
out
add
jno
leave
fstps
push
xchg
cmp
mov
stos
ja
push
sub
xchg
jge
xchg
dec
xchg
addr16
xor
fcoml
pop
add
aam
jg
sub
ret
fstl
test
jmp
addr16
mov
shr
pop
mov
aas
lods
pop
inc
and
lea
scas
andl
fwait
jmp
add
call
addr16
add
out
test
dec
mov
iret
fildll
ds
or
add
adc
add
fucomi
neg
lahf
sub
xchg
out
xchg
xchg
lcall
or
pop
xlat
xlat
jo
inc
dec
aam
test
fisubl
stc
out
pop
rolb
jmp
repnz
dec
arpl
inc
fmull
xchg
push
imul
or
out
gs
xchg
call
jns
out
and
lcall
push
jae
sub
xor
pop
les
hlt
dec
rorl
dec
pop
test
int
mov
jle
addr16
aas
xchg
out
and
xor
call
mov
cli
xchg
call
and
andb
popf
repnz
leave
mov
stos
test
sub
sbb
mov
inc
shld
scas
testl
push
aad
rcl
cmp
push
mov
lods
push
xchg
mov
and
test
xor
lods
jge
push
push
mov
mov
add
idivb
ret
push
lds
xor
es
dec
mov
sbb
jno
push
push
das
adc
inc
cld
mul
fisubrs
mov
push
stc
aad
push
nop
arpl
loopne
inc
sub
sbb
cli
xchg
jo
add
out
mov
lock
mov
out
mov
bound
jge
idivl
mov
shl
mov
jbe
or
movsl
adc
stos
les
pop
addr16
push
lds
out
pop
push
loop
cwtl
sbb
maskmovq
mull
mov
mov
pop
or
inc
mov
cmp
xchg
dec
lcall
and
dec
int3
cmp
fwait
xchg
pop
xor
pop
adc
cs
loopne
mov
addr16
cmp
or
movsl
pop
rcll
push
adc
lret
push
fwait
sub
jae
inc
adc
sbb
jmp
mov
sarl
cltd
lahf
mov
and
mov
dec
jbe
repz
jg
xchg
out
pushf
sub
mov
mov
shlb
int3
das
leave
cmp
cmp
jg
rcll
mov
xchg
pop
js
notb
lods
in
mov
pop
cmc
jo
inc
cld
rsqrtps
fcomi
lahf
lods
fcmovnbe
movsb
mov
sbb
jae
lock
xchg
lcall
std
icebp
insb
insb
mov
sub
lods
ret
rclb
lock
lods
mov
pop
sti
or
xchg
jle
sbb
inc
das
ss
fmull
cli
les
pop
cmp
pop
ss
stos
int3
xchg
fcoml
pop
jmp
test
cmp
adc
and
shll
aas
jg
sub
push
inc
dec
ljmp
xchg
xchg
lret
inc
aaa
push
jl
push
movsb
pop
mov
push
mov
imul
insb
int3
lods
arpl
lahf
aad
mov
xchg
mov
dec
mov
out
pop
out
add
loope
popa
scas
cmp
shll
jmp
jmp
push
push
daa
push
fwait
lret
std
pushf
sti
out
xchg
dec
inc
jne
aam
cmpsl
clc
imul
aam
lea
pop
and
and
and
pop
pusha
push
pop
or
in
push
in
fs
mov
cmpsl
in
call
popa
and
mov
in
jmp
push
inc
notb
cltd
ret
movsl
xchg
gs
pop
cmp
push
rsm
insb
cmp
pop
fucompp
loop
fs
sarl
roll
xchg
sub
nop
dec
insb
push
sub
push
inc
xor
cs
cmpb
and
mov
stc
imul
jns
nop
xlat
xor
out
cmp
aaa
mov
add
stos
dec
adc
ds
mov
test
pushf
test
jno
sbb
sbb
clc
daa
sub
rep
dec
or
xor
rcr
loop
sti
bnd
jo
dec
cmpsb
jnp
aam
bound
jge
xchg
std
pop
in
mov
or
jo
cld
adc
sub
sbb
loope
sbb
xchg
mov
mov
bound
sbb
sbb
es
loopne
dec
and
cs
out
sub
or
adc
or
push
pop
ljmp
lods
dec
ss
pusha
mov
jbe
mov
gs
add
add
loope
movsb
jo
pushl
in
out
fldenv
fnsave
test
xchg
stc
xchg
mov
push
sahf
push
and
gs
loop
add
jge
pop
mov
lahf
jle
loopne
add
fsts
aam
sub
mov
hlt
adc
shlb
mov
mov
clc
jmp
jmp
lret
jmp
sub
push
in
add
es
push
cmp
test
test
in
arpl
ret
sarb
jle
push
jb
push
lcall
int3
mov
fstl
fadd
push
popa
pop
adc
stc
fistpl
mov
sbb
movsl
ds
imul
xchg
jmp
jnp
jb
inc
mov
xchg
mov
js
mov
xor
pusha
insl
and
inc
lods
and
gs
pop
cmp
mov
enter
and
cs
and
cmp
mov
jo
and
nop
pop
test
leave
and
subb
fstpl
sub
fbstp
or
mov
cmpsl
push
daa
push
sbb
xchg
loope
icebp
test
aad
dec
sahf
or
cmpsb
add
fisubrs
in
pop
repz
out
xchg
pop
mov
and
jge
leave
pushf
mov
shrb
in
shl
vcmpss
fld
sti
fwait
add
pop
iret
dec
mov
cmp
push
shrb
and
jnp
lcall
lcall
enter
fimull
mov
cmp
aaa
adc
test
mov
negb
lahf
call
pop
sub
in
jbe
add
js
or
jl
jle
scas
mov
xchg
out
out
xchg
jno
pop
sub
adc
in
mov
mov
ds
push
ss
jmp
insb
stos
insl
cli
mov
arpl
jns
call
sbb
aad
cmp
mov
push
cmpxchg
sub
push
and
and
or
fwait
shrd
repnz
roll
adc
icebp
mov
fnstenv
std
mov
loope
sbb
dec
lds
ja
ret
or
mov
pop
arpl
das
adc
jle
je
sbb
lahf
shll
sub
addb
loop
xchg
test
enter
ret
xor
pop
fnstenv
cld
xor
mov
ds
mov
lcall
jl
xor
ds
jnp
jp
jb
out
jb
push
adc
pop
sbb
inc
mov
incl
je
mov
mov
mov
xchg
jg
data16
int3
in
clc
sbb
out
mov
sahf
adc
out
into
call
mov
sbbb
xor
sbb
pop
repz
les
jle
add
ret
push
inc
stos
push
push
fsubl
nop
lods
push
jnp
adc
lods
dec
xchg
add
cmp
dec
mov
jl
lea
jecxz
call
shrb
out
inc
jbe
adc
enter
inc
pop
mov
test
add
xlat
adc
xor
aam
dec
xor
cmp
aam
cs
and
xor
xor
pop
xor
push
pop
lret
jae
repz
pop
push
push
jp
or
mov
loopne
fidivrs
dec
cltd
push
and
and
push
call
outsl
popa
icebp
inc
ds
push
mov
insb
jg
xchg
bound
incl
or
outsl
fldl
test
add
pop
cltd
xor
dec
imulb
ret
lock
test
jnp
xor
xchg
cltd
cmp
dec
int
sub
adc
sahf
jbe
adc
pop
mov
iret
sub
mov
lcall
clc
cmp
cmpsb
mov
add
push
incb
push
into
adc
cld
sbb
push
int3
sub
testl
in
int3
outsb
pop
xchg
js
jb
jg
lret
push
lea
pusha
sti
pop
xor
push
das
fwait
xchg
cltd
stos
jnp
sub
xchg
enter
xchg
adc
jmp
fmull
or
scas
pop
jg
dec
out
test
jnp
mov
push
bound
hlt
add
inc
pop
outsb
popa
mov
cmp
jg
adc
pop
shrl
mov
addr16
popf
inc
dec
gs
add
stos
sub
fldl
xchg
dec
movsl
test
cmp
push
jae
scas
and
shrb
inc
xchg
cld
sbbb
push
out
pop
lret
es
ja
adc
loop
pop
sub
push
and
les
ss
jmp
in
ds
push
orl
sub
push
fiadds
cmp
arpl
clc
or
jmp
lds
push
sub
sbbb
mov
call
imul
push
popa
popf
aaa
sbbl
das
jle
and
xchg
pop
lods
cmp
enter
outsb
or
test
rcrb
cwtl
leave
and
add
push
xor
inc
je
jmp
shll
sub
outsb
dec
js
or
sahf
add
mov
adc
dec
mov
das
xor
lret
sub
test
jno
rorl
imul
movsl
sub
mov
inc
cmp
xchg
xchg
jb
aad
loopne
aaa
into
int3
scas
mov
sbb
inc
lods
add
jp
loop
mov
dec
aam
dec
out
int
add
aas
cmp
scas
gs
mov
outsl
mov
fstpl
aad
push
in
loope
jge
mov
subl
add
lods
add
adc
jmp
cmp
out
rolw
cli
dec
sbb
xchg
adc
cmp
xor
pop
cmc
negb
leave
fisttpll
insl
fimull
inc
push
mov
dec
mov
fsub
fsts
mov
adc
cmp
ret
xchg
jmp
xchg
mov
xor
jno
mov
imul
inc
jno
xchg
and
data16
in
out
mov
arpl
sti
mov
inc
mov
fstl
lret
iret
adc
add
add
ss
aaa
insl
sub
jne
sbb
dec
dec
in
push
loop
loopne
stc
icebp
add
jns
arpl
out
mov
mov
inc
xchg
loop
adc
jne
mov
or
sub
pop
dec
sbb
mov
xlat
stos
dec
in
lret
aad
mov
test
sbb
movsl
aad
imul
mov
aas
or
pop
or
lods
lods
jnp
mov
mov
fadds
fsub
flds
sahf
cmpsb
cmp
dec
pop
cmp
add
inc
mov
xchg
rorl
pop
sub
sbb
pop
dec
fiadds
jle
xchg
out
cmp
jo
cli
outsb
adc
out
or
jg
fsts
rcll
add
add
add
sbb
ret
mov
inc
iret
popa
lods
addr16
add
aas
adc
pop
cltd
dec
pop
leave
les
cmpsb
push
fsubrl
xchg
fsubrl
sub
arpl
daa
mov
scas
icebp
push
push
subl
and
aas
hlt
sub
adc
out
rolb
mov
adc
sbb
dec
push
int
inc
lea
dec
and
insb
and
pop
sub
jmp
in
dec
aam
in
dec
add
bound
and
loop
cmpsl
cmp
pop
inc
popa
imul
gs
mov
call
xchg
ret
insl
or
pop
ss
icebp
aaa
cli
and
fs
lods
fistl
cmpsl
popf
outsl
xchg
inc
jb
aam
out
mov
cmc
push
in
aas
scas
enter
cld
outsl
mov
dec
ret
lcall
fsubs
mov
ja
test
stc
les
dec
out
loope
adc
fidivl
fcoms
push
lock
cmp
cmp
outsl
inc
xor
mov
adc
xor
and
xor
push
sub
jmp
adc
scas
xlat
cmc
popf
mov
pop
insb
cmp
xlat
jle
sub
jge
push
ss
scas
sub
jmp
clc
inc
ljmp
hlt
cwtl
jl
jge
mov
out
cmpsl
inc
popf
add
rcrl
add
pop
pop
movsl
xchg
aas
and
or
outsb
jecxz
jb
clc
test
dec
and
insl
popa
mov
cltd
ds
push
mov
mov
and
mov
xor
xor
movsb
repnz
xchg
cmp
dec
dec
adc
inc
add
dec
mov
mov
mov
fsts
sub
pop
xchg
ja
xor
sub
fisttpl
loop
insl
jp
fdivr
and
jecxz,pt
fnstsw
sbb
cmpsl
outsl
imul
stos
pop
jne
mov
dec
dec
pop
leave
mov
jecxz
sbb
sub
fwait
popa
cld
sahf
xchg
mov
mov
add
into
mov
lods
pop
test
xor
jmp
xor
push
sbb
cltd
mov
pushf
add
leave
test
out
lahf
pop
mov
gs
and
sbb
gs
loope
and
jecxz
cltd
jg
add
sbb
push
sbb
fs
into
bnd
push
push
mov
and
mov
pop
inc
aam
in
push
movsw
add
pop
repz
icebp
nop
popa
fdiv
pop
dec
jge
push
sbb
shrb
push
mov
in
daa
mov
mov
ja
push
and
iret
inc
std
cmc
push
es
out
loop
jb
sbb
xchg
in
gs
pop
push
cmpsl
push
adc
pop
dec
divb
popf
mov
movsb
inc
cmc
cmp
imul
sbb
icebp
jle
into
add
addr16
jge
rorl
cld
xchg
inc
out
outsl
gs
fisubrl
cmp
out
pop
and
lods
pop
and
xchg
in
in
fsubr
push
mov
fsubs
js
xor
lcall
cmp
and
das
push
cwtl
xchg
xchg
leave
adc
scas
mov
rorb
adc
inc
cmp
leave
fisubl
fwait
test
xchg
and
outsb
cmp
xor
add
jecxz
mov
sti
push
pop
ljmp
aam
iret
mov
jp
cmp
lret
jecxz
stos
addl
stos
pop
js
iret
out
xchg
rcl
xchg
sub
inc
jb
or
dec
repz
sub
or
xchg
pop
jbe
cmpsl
fisubl
lret
insb
jecxz
xor
xchg
jbe
outsb
or
dec
outsl
or
js
loope
mov
push
mov
push
and
cs
mov
mov
movsl
xchg
sbb
outsl
aad
clc
std
mov
mov
cli
out
pop
lret
inc
movsb
adc
cmp
es
push
popa
xchg
insb
hlt
jmp
add
push
aad
mov
jmp
repnz
pop
ficompl
pop
repz
dec
call
mov
xchg
lods
sarl
push
xchg
rclb
mov
inc
aad
push
jo
cltd
sub
push
push
into
iret
push
addr16
dec
xchg
movsl
cmp
pop
jb
leave
int3
cli
stc
cmpsb
xor
xchg
inc
iret
sbb
pop
mov
sarl
add
cli
push
in
fidivs
lcall
rcrl
or
xor
or
xchg
dec
mov
aad
dec
scas
mov
ds
call
mov
fdivl
insb
push
push
lcall
adc
xchg
fisubrl
mov
xchg
or
xchg
cmp
insl
add
and
call
es
shlb
sub
icebp
push
rorl
sbb
add
push
bound
xor
adc
icebp
test
inc
insl
cli
or
cmp
jbe
sbb
and
mov
push
loopne
add
arpl
test
into
int
dec
inc
adc
cwtl
mov
mov
mov
fdivs
dec
mov
xor
aam
jecxz
sbb
out
pop
and
inc
jae
loopne
add
xchg
adc
inc
aam
jecxz
frstor
popa
lret
shrb
std
lahf
lock
ret
dec
lahf
hlt
xchg
in
fsubrs
das
loopne
ljmp
sbb
or
push
scas
cmp
stos
outsl
and
fmul
push
xchg
pop
aas
movsl
rcll
mov
add
adc
nop
xor
sbb
xchg
lods
test
push
mov
imul
mov
push
cmp
sbbb
push
push
test
xchg
push
mov
jnp
daa
ds
xlat
pop
ss
scas
shll
out
push
jbe
jbe
enter
into
push
sarb
dec
dec
sbb
xchg
arpl
lret
or
jle
test
xor
fcom
aad
mov
clc
call
int
cmp
mov
and
jmp
jne
xor
mov
pop
subl
lock
das
js
push
fmulp
fcomps
sbb
stc
out
xchg
xchg
pop
mov
fidivrs
movsb
jge
sub
negl
ds
mov
inc
dec
addr16
add
mov
pop
test
xchg
jnp,pt
sahf
cmp
xor
into
scas
fnsave
jge
cmp
fimuls
fsubs
cmp
mov
inc
cld
inc
stc
into
jg
mov
jmp
adc
pop
sub
adc
cmp
movsl
pop
mov
xchg
les
out
xchg
dec
popa
mov
add
dec
push
push
xor
sbb
lret
addl
inc
iret
scas
add
mov
jns
call
aas
dec
and
lods
cld
adc
int3
cmpsb
out
fstl
xchg
pop
adcl
outsl
sbb
xchg
outsl
dec
xchg
mov
testb
xchg
clc
and
mov
fmuls
repnz
jl
cwtl
in
adc
or
dec
cmp
push
mov
enter
repz
fbstp
pop
sub
xchg
repz
xchg
jbe
arpl
pop
imul
ss
call
sbb
adc
push
into
fisubrl
ret
sub
mov
cs
mov
js
imul
pop
das
xor
arpl
lds
out
xchg
cmpsb
mov
mov
mov
mov
push
gs
lock
cmpsb
mov
int
cwtl
jb
andl
fistl
iret
xchg
push
insl
pop
mov
lret
and
out
xor
adc
pop
repz
inc
ret
adc
shrb
and
push
out
mov
mov
cmp
inc
jmp
iret
mov
out
or
xchg
shlb
je
xor
xlat
subl
jae
adc
hlt
mov
xchg
dec
mov
loope
mov
adc
fs
adc
sub
sub
ret
repz
mov
pop
popf
movsl
stos
daa
mov
addr16
aad
daa
lea
xor
dec
aaa
xor
out
jbe
insb
je
sbb
mov
xor
sahf
ret
xlat
movswl
jns
mov
or
sbb
rol
xor
add
jmp
fdivrp
mov
jns
scas
cltd
dec
mov
scas
inc
sub
les
call
lods
mov
popf
lcall
push
and
xchg
test
scas
orb
cld
sahf
scas
pop
push
sarl
mov
popf
inc
cmp
mov
subl
je
push
pushf
xlat
push
xchg
rcll
cmp
cld
pop
in
add
outsl
in
pop
es
inc
add
xor
lock
and
jmpw
fldenv
mov
test
out
mov
vmovq
dec
and
lahf
sub
and
mov
enter
jnp
sarl
sbb
jg
push
adc
mov
sub
mov
adc
int
cmp
sbb
iret
or
out
cld
push
test
add
dec
mov
pop
pushw
jecxz
sbb
rol
and
adc
adc
sar
cmp
fistpll
insb
mov
cmp
gs
mov
mov
jl
mov
pop
push
pop
fiadds
inc
mov
sbb
adc
cmp
rcrl
mov
push
cmp
mov
ljmp
nop
insl
mov
jg
rcll
xchg
sub
sbb
pop
mov
fcomip
stos
aaa
stos
cmp
jne
sahf
mov
xchg
add
jb
inc
in
cmp
mov
mov
insl
cmp
test
cmp
repz
sbb
mov
inc
rorl
adc
pop
incb
mov
jo
mov
test
shll
jle
addl
cli
lea
pop
or
aas
jae
pusha
shrb
sbb
fnstcw
and
aaa
ljmp
dec
mov
out
mov
mov
es
test
ret
test
and
adc
or
addl
cmp
ja
sarb
jnp
orl
nop
call
mov
sub
ret
gs
jge
jnp
ss
sbb
divl
xchg
sahf
ja
call
negl
bound
mov
popaw
push
push
cmp
loope
jnp
adc
push
dec
dec
notb
pop
mov
mov
ja
pusha
sbb
and
jp
out
icebp
xlat
xchg
int
mov
xor
add
ja
imul
jnp
pop
testb
jno
cmp
popf
xor
cli
movb
inc
movsb
and
mov
dec
out
insl
std
sti
jo
sbbl
pop
mov
mov
andb
or
pop
daa
loop
mov
movsb
add
sahf
and
sub
cmp
fcmovnbe
sub
cvtpi2ps
jae
pop
mov
cmp
xor
pop
dec
xor
mov
cmc
mov
xchg
add
movsl
icebp
popf
inc
adc
les
stc
sahf
movl
mov
fcoml
lcall
dec
and
lahf
repz
call
or
and
and
mov
adc
xchg
popa
into
js
out
xchg
inc
pop
pop
popa
fdivrs
push
push
and
cli
cld
sub
fs
jg,pn
in
pop
movsl
push
xchg
lcall
cltd
ds
mov
pop
mov
xchg
aam
aad
aas
pop
jnp
out
cld
daa
ljmp
fisubrl
aaa
outsl
pop
adc
pop
pop
cs
mov
sub
xchg
loopne
or
sahf
hlt
ja
add
mov
cs
push
jo
jne
insb
jnp
pop
stos
data16
dec
dec
cli
pushf
xchg
rcl
fidivl
push
lock
fsubr
test
ret
push
mov
pop
xor
inc
dec
repnz
or
cwtl
in
dec
int
cmp
leave
jp
icebp
shlb
data16
test
call
cmp
mov
cmp
fisubl
xor
jp
add
inc
les
fwait
imul
push
shlb
jo
mov
fdivrs
pop
unpckhps
shll
outsb
sub
mov
or
sti
ret
clc
xchg
xchg
add
mov
iret
and
xchg
jo
sti
test
add
jae
js
jmp
insl
jl
sub
cmp
std
pop
ror
and
std
jg
movsb
jmp
int3
jecxz
sbb
xor
stos
fidivrl
sbb
adc
push
rorb
int3
add
or
xor
mov
call
cmpsb
sbb
push
adc
and
repnz
xor
sbb
mov
push
pop
and
and
jo
xchg
in
sub
pop
xchg
movsl
dec
jno
pop
jb
in
bound
xchg
mov
ret
stc
clc
pop
rclb
cmp
mov
sub
xchg
push
mov
jecxz
jnp
inc
in
lret
inc
inc
lds
out
insl
pop
sbb
push
or
scas
ss
out
cmpsl
inc
mov
dec
adc
jl
ffreep
bound
ds
cmp
cltd
push
mov
lcall
pop
add
fdiv
xor
push
push
aam
int3
dec
push
roll
call
outsb
lret
enter
cmpsb
push
sar
mov
insb
bound
inc
sbb
lock
in
inc
sub
sti
cmc
add
adc
mov
inc
aaa
stos
lea
sbb
mov
mov
mov
rcr
push
or
or
adc
adc
fwait
adc
jle
into
push
add
hlt
mov
or
jle
inc
loope
mov
xchg
sub
mov
cmp
fstl
fldl2e
loop
les
and
or
pushf
lcall
xor
lret
andb
daa
pop
jns
test
repnz
xor
jnp
mov
and
mov
push
leave
inc
pop
push
mov
or
sub
pop
fstpt
and
push
and
push
test
adc
into
jecxz
das
mov
aad
jle
sbb
out
xlat
lcall
sbb
shlb
jae
loop
sub
cld
aas
mov
sbb
adc
pop
xchg
je
mov
js
and
xor
or
repz
mov
jbe
jo
les
lods
fsubrs
rclb
push
imul
mov
scas
call
jge
test
loop
jecxz
and
fistpl
lret
mov
push
xchg
mov
jnp
scas
sub
pop
popa
ror
xor
pop
jne
insb
fdivr
popf
repnz
rcrb
ret
subb
test
push
leave
mov
mov
popf
adc
shrl
mov
loopne
sub
sub
shll
cmp
and
cltd
mov
sub
jne
jmp
push
xchg
inc
cwtl
inc
sti
outsb
ret
lret
adcb
dec
lahf
icebp
dec
fcmovnu
pop
sub
std
popa
sbbb
and
sub
sbb
sahf
dec
enter
cmpsl
test
cli
sar
pop
loopne
cmp
sub
arpl
mov
out
fwait
testl
andl
div
stos
mov
fisttpl
out
mov
movsb
fiadds
jne
adc
mov
fs
mov
mov
pop
out
cld
or
dec
out
stos
sub
push
add
adc
iret
xchg
mov
push
sub
jmp
mov
xchg
dec
rcrb
mov
and
xchg
cmc
leave
mov
ret
mov
faddl
or
icebp
mov
testb
cmpsl
test
push
mov
xor
fdivrp
icebp
subb
out
fcomps
xor
xlat
xchg
and
pop
leave
jl
aaa
push
jp
aas
dec
repnz
jbe
jnp
test
sbb
xchg
mov
out
adc
mov
cmc
inc
jae
adc
mov
mov
or
clc
int
fwait
dec
push
inc
and
data16
jb
inc
mov
push
mov
inc
pop
xlat
rorl
dec
insl
into
scas
dec
out
adcl
pop
sbb
or
dec
sub
pop
out
andl
sahf
nop
daa
mov
call
popf
faddl
mov
test
iret
dec
xchg
cltd
jno
and
dec
push
loope
mov
hlt
lret
dec
popf
stc
sbb
int
cld
fwait
mov
pop
sbb
fsubrs
inc
mov
lret
mov
jae
adc
pop
and
mov
aaa
sbb
sub
hlt
sbb
inc
inc
in
incl
jb
loop
xchg
push
fs
sub
xor
xchg
jne
sub
adc
mov
cs
sbb
negb
or
imul
push
fnstsw
pusha
sub
xchg
cli
add
cmpsb
loope
jge
and
lahf
jge
jbe
inc
push
fildll
mov
dec
pop
ret
into
pop
cli
cmpsl
push
adc
dec
stc
jne
sub
mov
lahf
lea
cmpsb
ss
push
loope
lods
push
push
xor
shrb
jl
aad
jmp
push
lea
lea
jne
out
in
push
inc
jbe
out
and
std
and
jbe
mov
into
fdivl
sarl
fsubrp
dec
push
aad
call
sbb
in
rclb
idivb
xor
pop
cmpsl
cmp
lds
sub
scas
sub
xchg
pop
nop
inc
imul
or
xchg
jne
and
xchg
shlb
or
xor
mov
add
xchg
adc
push
lea
sar
inc
mov
in
out
cmc
sub
xorb
add
lahf
mov
fcomps
push
nop
add
or
push
mov
xchg
scas
fcmovne
jge
adc
add
cmpsl
hlt
psubusb
leave
sub
sub
mov
bound
adc
xor
mov
repnz
negb
scas
lock
mov
fcomp
xor
push
in
sbb
pop
sub
push
imul
lods
fsubrp
inc
rcr
loop
pop
sbb
inc
xchg
pop
faddp
ja
mov
arpl
jecxz
push
add
sbb
rorl
inc
test
inc
pop
and
mov
or
es
call
mov
cli
scas
ret
jo
pop
xchg
xchg
dec
data16
sti
adc
mov
adcl
cmp
int
imul
jnp
push
push
mov
push
mul
ja
sub
outsb
dec
jge
jle
add
rclb
ret
xchg
ror
arpl
or
inc
movsl
mov
out
js
scas
lcall
subb
fwait
add
add
push
cwtl
push
jno
xor
mov
repnz
insb
jbe
dec
sti
adc
popf
imul
and
xor
xor
lods
lock
cmp
sub
mov
jns
cwtl
add
xchg
mov
pop
hlt
push
xor
mov
sbb
cmp
add
pop
sub
repz
fwait
shll
sbb
jle
and
rcl
inc
mov
cmp
lea
lret
pop
mov
lods
jne
ret
dec
pop
int3
dec
or
push
loope
xchg
imul
js
lret
push
pop
jg
data16
movsl
jmp
push
and
adc
sti
aad
sti
push
sahf
jecxz
int
mov
imulb
cmp
mov
dec
push
xor
push
cmp
push
std
inc
add
cmp
and
xor
adc
jle
mov
popl
cmp
mov
decl
clc
inc
cltd
out
movsbl
stos
hlt
pop
pop
mov
loopne,pt
movsb
push
sahf
in
adc
repnz
stos
xchg
addr16
push
pop
inc
pop
dec
xor
sahf
rorb
cli
sub
cmp
inc
aaa
fstpl
push
mov
les
scas
cld
stc
sbb
lret
adcl
jecxz
daa
pop
lahf
push
call
iret
jns
and
jmp
aam
pushf
ret
adc
aad
xchg
xchg
rolb
adc
jae
ret
ret
push
ficoml
xchg
popf
imul
mov
hlt
je
adc
mov
mov
mov
adc
push
lcall
fstps
or
sbb
xchg
push
dec
in
aaa
je
mov
xchg
lcall
hlt
loop
jmp
out
dec
fst
pusha
and
ds
andl
leave
cmpl
mov
nop
pusha
pop
mov
add
rcl
andl
ljmp
loop
mov
cmp
inc
jecxz
or
add
clc
fmul
lods
and
dec
cmp
mov
push
push
dec
stos
sub
insl
rorl
aaa
cmp
xchg
arpl
xchg
enter
ds
adc
or
or
stc
jl
pop
dec
xor
jmp
insb
ljmp
in
dec
int3
lcall
movsl
psubsb
pushl
lock
insb
and
test
and
out
outsb
jmp
cmp
sbb
push
pop
int3
pop
mov
sub
aas
js
sbbl
mov
sbb
lods
lods
jno
es
sub
jmp
pop
add
or
pop
out
xchg
xchg
rcll
sti
push
adc
add
and
jp
jae
roll
loopne
or
mov
or
stos
mov
jo
movsb
adc
sub
lock
mov
jl
dec
cmp
and
mov
ret
inc
je
pop
sbb
popa
sbb
jmp
pop
out
test
decb
test
in
push
loopne
icebp
and
cmp
mov
mov
dec
jecxz
sarb
lahf
sbb
cli
adc
loopne
jge
mov
adc
cmpsl
inc
lods
int3
jg
inc
sbb
inc
mov
pop
pop
aad
fdivl
enter
dec
sub
aad
std
sbb
inc
mov
hlt
and
pop
add
cmpl
pop
loopne
pop
stc
test
push
xor
out
stc
dec
sbb
dec
adc
and
dec
mov
hlt
adc
push
or
add
bound
sub
scas
mov
fmuls
push
jne
cmp
popa
in
inc
aaa
xchg
lock
pop
hlt
mov
mov
push
sub
add
jecxz
lret
pop
popf
dec
xor
jne
mov
clc
fistl
in
add
xor
outsl
sub
mov
sub
bound
aad
sbbl
dec
mov
iret
stos
enter
cmp
fisttpll
xor
cs
sbb
outsb
sahf
pop
xor
fndisi(8087
xchg
arpl
pop
cmp
lret
aam
or
add
and
in
xlat
jne
out
je
mov
lods
in
cli
int3
sub
aas
fldenv
sbb
sbb
pop
sti
jp
sbb
sbb
jmp
movsb
push
mov
jnp
push
sqrtps
ljmp
mov
cs
or
inc
adc
fistps
xor
push
mov
lret
pop
cmp
rcl
fisttpll
mov
loope
scas
mov
mov
lret
movsl
inc
inc
fbstp
sti
int
and
push
jnp
ret
and
inc
xchg
and
ljmp
pop
hlt
and
xchg
scas
and
pop
inc
popa
lods
and
popf
insb
cmp
cmp
test
pop
clc
mov
dec
xchg
loopne
adc
repnz
data16
lock
shlb
leave
xchg
dec
sahf
cld
movsb
cmp
fs
loopne
xor
adc
clc
imul
adcb
cmp
mov
dec
mov
scas
xchg
cwtl
push
cli
lea
mov
push
pushf
sub
inc
adc
fsub
jmp
mov
mov
inc
inc
sub
insb
into
jle
xchg
pop
lcall
cwtl
jecxz
push
cmpl
pop
fiadds
sub
jl
sbb
aad
fiadds
or
popa
fisttpl
stos
in
int3
repz
cli
push
sub
sbb
sarl
or
adcl
mov
out
adc
and
pop
xor
sub
gs
lock
cmp
xchg
lea
xchg
xor
adc
jb
add
dec
repnz
and
iret
jo
jae,pn
dec
pop
leave
add
int3
cmp
ror
std
add
sub
mov
jg
inc
test
add
mov
push
outsl
push
sub
dec
mov
mov
test
and
mov
adc
imul
push
dec
in
int
jae
xor
pop
push
insl
jp
out
jle
ss
mov
test
mov
mov
stos
pop
fwait
test
arpl
lock
mov
ja
add
xchg
mov
xor
cli
movsb
or
bound
mov
dec
jnp
xor
sbb
mov
xor
jecxz
mov
lock
pop
or
push
repnz
push
sbb
push
sarl
sbb
in
in
fidivrs
imul
sahf
mov
test
fsubrp
stos
andl
add
and
mov
add
cmp
out
lcall
pushf
mov
adc
push
sbb
add
mov
cli
cmpsb
int3
sbb
mov
into
push
out
xchg
into
sub
icebp
cmp
in
jg
fwait
xor
daa
scas
xchg
cmp
push
sbb
push
mov
fidivrs
xor
mov
lret
aaa
xchg
jae
cmp
shlb
adc
andb
movsb
nop
adc
ret
xchg
mov
sahf
movsb
nop
adc
scas
iret
test
je
arpl
outsl
pushl
mov
jne
sub
ja
mov
cmc
lds
or
and
mov
mov
cmc
adc
xorb
push
cmc
enter
xchg
pop
shl
out
or
xchg
shl
out
xor
push
inc
fwait
xor
cmpsb
pop
mov
ss
dec
adc
add
inc
jo
fistpll
pop
pop
std
in
iret
lcall
in
pop
dec
cmp
inc
int
or
jno
mov
xor
pop
mov
ds
mov
scas
lds
popa
mov
imul
test
sub
dec
push
outsb
mov
cltd
dec
outsl
popa
mov
mov
pop
int
sub
inc
lea
xor
shrb
in
fidivl
and
loope
mov
fsubl
jae
outsb
mov
cld
push
stc
sarl
sar
cmp
xchg
clc
rcr
js
loope
mov
adc
xchg
int
mov
sub
adc
mov
sbb
movsb
js
mov
jne
add
add
jle
mov
pushf
ds
or
mov
ja
cmp
gs
sbb
pop
out
adc
xor
std
xlat
sub
add
pop
in
adc
mov
add
inc
sbb
movsl
pop
test
and
jecxz
xchg
arpl
stc
push
sub
ret
or
inc
push
jns
jne
adc
jecxz
outsl
mov
aaa
xor
aam
sbb
push
int3
mov
popa
jo
push
ror
xorb
push
dec
add
add
gs
icebp
dec
push
mov
jge
mov
mov
aam
int
mov
orb
fsubrl
jmp
xchg
stos
addb
mov
jae
add
pop
mov
scas
mov
xor
dec
cld
addb
mov
mov
adc
push
clc
mov
jmp
inc
inc
mov
mov
xor
clc
das
push
pusha
cmp
and
clc
mov
dec
aad
and
push
std
sahf
stos
outsl
into
gs
cld
mov
adc
popa
mov
mov
sub
cmp
mov
xchg
inc
mov
add
adc
mov
jo
repz
cld
enter
push
addr16
daa
insl
lret
sub
popf
sub
dec
in
sub
shl
xchg
mov
imul
jno
scas
inc
cmp
mov
scas
sahf
lcall
add
cli
hlt
stos
pop
add
jns
mov
in
pop
dec
jb
fwait
lods
in
mov
mov
mov
dec
popa
xchg
fimull
adc
scas
push
mov
jp
pop
rcr
mov
sbb
adc
shl
xchg
mov
sub
icebp
jae
pop
mov
adc
push
mov
sub
fwait
cmp
push
pop
xor
cwtl
test
stos
pushf
sbb
loope
fld
test
stos
idivl
fs
lods
mov
ja
mov
sbb
lea
lcall
test
jno
sub
pop
push
cmp
mov
or
push
mov
cli
push
imul
cld
aad
xchg
and
std
insl
shl
imul
pop
xchg
fistpl
test
xorb
jl
cwtl
loop
xchg
fs
icebp
pop
call
adc
mov
popa
sarb
xchg
jl
or
fs
mov
push
lret
xchg
or
pop
push
sarl
adc
out
add
cmc
movsb
outsb
sbb
pop
stos
aaa
repnz
rorl
add
andb
pop
and
and
daa
sbb
mov
push
ficompl
adc
sub
cmp
jp
xchg
jno
aas
in
repz
jnp
xor
lahf
xchg
cmp
call
mov
stc
out
xchg
lock
cmpsl
je
cs
add
scas
sub
adc
adc
or
adc
add
aad
mov
pcmpeqw
and
mov
mov
and
dec
clc
cmpsb
fsts
lret
xlat
mov
clc
cmpsb
sahf
pop
stos
mov
frstor
cmp
sub
fcompl
ss
push
aas
hlt
stos
sahf
jne
add
pushf
jmp
ja
push
jae
lods
popa
lods
mov
cmpsl
jecxz
xorl
cmp
xlat
subb
stos
shl
aam
dec
xchg
xor
mov
adc
xchg
push
out
xor
iret
mov
test
xchg
repz
cmpsb
mov
sub
int
jns
and
rcr
imul
push
rcrl
cmp
inc
aas
ljmp
cmp
loop
jns
jl
les
sarb
push
int
sub
sub
fwait
sbb
mov
in
or
sub
jp
test
add
or
push
and
xchg
rcll
aas
imul
data16
rcrl
lock
in
addb
dec
sbb
mov
cmp
dec
cmpl
add
sahf
les
popf
inc
fcomip
adc
repnz
cmp
in
mov
xor
xor
mov
mov
mov
popf
lods
adc
cmp
jae
in
stc
xchg
mov
shrl
cmp
fidivl
adc
inc
rcrl
shll
cmp
sar
imul
adc
dec
loopne
bound
mov
scas
jne
and
xchg
iret
push
jecxz
aad
jl
mov
sbb
scas
sub
push
sbb
xchg
in
testb
xor
push
pop
enter
movsl
dec
mov
pop
push
ja
nop
sub
push
sub
ja
and
mov
addr16
mov
repnz
pop
popa
and
test
jbe
or
ror
sub
xchg
insl
add
add
inc
scas
rcrb
enter
xchg
es
ror
out
inc
andl
dec
sub
cmp
scas
push
sub
xchg
mov
fmull
xchg
adc
adc
lahf
sub
push
bound
push
std
js
cmpsb
inc
dec
mov
sub
inc
mov
xchg
lret
sub
in
shll
test
cmp
inc
bnd
fimuls
icebp
and
push
sti
cli
fmul
adc
jle
mov
shlb
mov
in
sarl
lahf
cmp
and
add
jp
jnp
insl
lods
nop
data16
jo
cwtl
or
je
xchg
in
lret
pushf
outsb
les
aaa
or
in
push
or
stos
iret
sti
aam
dec
push
jo
pop
xor
pop
lcall
arpl
in
cmpsb
in
lock
lahf
mov
int
ja
adc
mov
and
xor
cmp
mov
sbb
pop
int3
iret
sahf
call
hlt
pop
mulb
sub
out
xchg
mov
sbb
mov
sub
jb
and
lds
add
xor
pop
xor
mov
xchg
pop
sbb
es
imul
pusha
cmp
mov
or
xchg
cmpsb
and
out
and
add
xor
push
mov
cmp
repnz
movsl
cmp
stos
dec
sbb
dec
sahf
lea
leave
sahf
fisubs
pop
fwait
in
addr16
fs
test
jb
push
scas
jp
movsl
bound
std
dec
rol
daa
mov
mov
xchg
test
stos
pop
dec
push
insb
mov
std
fdiv
out
mov
xchg
ljmp
sub
arpl
dec
leave
lahf
sahf
insl
pop
add
lea
sbb
hlt
jecxz
push
cli
dec
fstl
push
and
mov
and
loop
in
or
shl
pop
loop
test
fists
push
adc
xchg
andl
adc
cmp
mov
sub
add
pushf
sub
ja
shll
imul
add
in
mov
scas
mov
lock
adc
mov
in
enter
sub
push
stos
jmp
aas
cmp
hlt
sbb
xchg
dec
repnz
cmp
pop
mov
push
or
mov
mov
test
push
imul
add
test
add
pop
cli
add
xchg
cmc
xchg
lods
subl
ret
mov
mov
movsb
frstor
sub
jecxz
mov
push
dec
ljmp
sub
repz
loop
daa
aam
xchg
icebp
lock
cmp
nop
aaa
or
push
cld
aad
mull
xchg
jmp
movsb
loop
jge
fldl
sarl
dec
lods
xor
inc
icebp
daa
push
mov
shll
jns
popf
inc
dec
and
nop
add
mov
adcl
inc
mov
aam
int3
sub
add
insb
test
pinsrw
fwait
or
jo
out
enter
shlb
xchg
stc
sbb
lds
ljmp
sbb
sbb
outsl
sub
adc
lods
adc
fidivrs
les
mov
es
dec
inc
jbe
ljmp
rcl
popa
and
push
imul
sbb
or
adc
mov
mov
lret
fists
mov
lds
jne
ret
mov
in
adc
movl
push
nop
pop
repz
push
inc
push
je
or
hlt
xor
scas
adc
inc
filds
jle
jecxz
je
pusha
xchg
add
imul
mov
mov
add
pop
mov
cmp
mov
sbb
testb
mov
push
lcall
xor
leave
push
inc
mov
dec
jle
nop
mov
rorl
iret
inc
in
push
or
xchg
jmp
adc
pop
mov
nop
into
out
sbb
out
or
jl
arpl
sbb
mov
divb
push
xlat
insl
out
adc
iretw
fcoml
fcoms
jle
jl
push
clc
adc
lds
inc
push
repz
sub
mov
ljmp
shll
push
pop
orb
shll
fisubrl
cmpsb
std
add
or
mov
fs
lcall
cmpsb
cwtl
out
push
jns
fcom
js
xlat
jecxz
cmp
push
or
add
jbe
cmp
es
stos
xor
add
pop
and
add
xor
into
cmp
dec
into
add
and
inc
clc
inc
fsubp
inc
and
outsl
add
sub
pop
imul
mov
shlb
mov
dec
mov
add
loop
enter
imul
or
mov
stc
push
cmpsl
aaa
arpl
sbb
push
movsb
daa
xchg
ret
stc
insl
mov
lods
scas
adc
jecxz
js
add
leave
xchg
pop
mov
and
rcrl
add
test
inc
ret
push
and
hlt
ss
or
fdivs
mull
mov
add
stc
xor
dec
aad
push
add
add
adcl
popf
dec
mov
cmp
mov
mov
rcll
ficoms
shll
in
dec
xchg
adc
sub
dec
popa
movsl
push
adc
pop
mov
adc
daa
lcall
nop
xchg
insl
xchg
fcmovb
arpl
test
adc
cmpsb
rorl
scas
xor
and
add
push
push
mov
orl
stos
test
push
or
mov
mov
mov
add
lock
pop
pop
xor
cwtl
inc
pusha
jge
pop
jge
out
test
xor
das
movsl
int
ja
sub
mov
xor
mov
and
imul
pop
aam
je
mov
jge
inc
push
scas
insl
add
lret
or
inc
fcoml
adc
pop
add
cmp
rcll
inc
int
push
push
mov
stc
push
or
xchg
cmp
loopne
out
pop
sub
addr16
pop
xchg
ljmp
outsl
cmp
push
je
jmp
mov
mov
stos
das
movsl
cltd
subl
in
enter
jge
cmp
roll
xchg
daa
lea
cmp
inc
push
push
mov
cs
fisttps
xchg
mov
test
ss
mov
pop
test
mov
xchg
aaa
fsub
in
fldcw
or
jge
into
cmp
jbe
pop
mov
notb
outsl
mov
xor
mov
push
negl
into
lret
out
adc
jno
lret
cmp
mov
cld
loopne
lret
icebp
mov
lods
sub
dec
jl
sahf
enter
xor
test
push
xchg
outsl
or
ret
pop
dec
dec
cmp
jl
cmp
aad
sarb
es
cs
stos
lods
movsb
movsb
out
jmp
ljmp
and
fidivrl
cs
inc
mov
cld
movsb
or
pop
push
lea
mov
in
aas
imul
repnz
dec
mov
jno
mov
in
dec
push
sbb
loop
mov
sub
outsl
scas
int
insl
mov
xchg
test
mov
les
notb
adc
lret
es
fs
arpl
sarb
jp
mov
sub
mov
push
lods
loopne
movsb
pop
in
lret
push
xchg
add
cmp
and
dec
xchg
jnp
sti
adc
shr
jle
sub
ljmp
cmp
es
adc
nop
lods
jno
add
addr16
inc
lds
jmp
xchg
inc
push
xchg
jne
sbb
mov
xchg
ljmp
jmp
std
fs
mov
int
adc
fstpl
push
xchg
mov
push
pop
pusha
inc
or
hlt
inc
jns
loopne
fstl
jb
filds
fldl2t
jnp
mov
pop
pusha
cltd
out
insb
sub
mov
lret
call
mov
sbb
ret
dec
jo
add
cmp
sub
movsl
sub
cmp
add
or
flds
push
xlat
sbb
inc
jp
fs
dec
out
cmpsl
jnp
or
and
inc
inc
das
push
sti
sbb
ret
roll
or
int3
cmpsl
adc
jb
push
loope
cmp
ja
jno
push
lret
fs
sub
push
sti
ljmp
test
outsb
lock
xor
fs
xor
adc
imul
nop
clc
das
adc
mov
jae
mov
shlb
inc
sbb
or
notl
cs
and
push
fmul
lods
cld
lods
lahf
mov
jnp
and
shr
jns
jl
pop
cwtl
or
inc
adc
jae
dec
out
andl
js
scas
iret
stos
lds
push
pop
movsb
gs
or
jns
rcll
dec
mov
push
mov
iret
xchg
test
xorl
jg
mov
ret
xchg
insl
pop
xor
cmp
or
cmp
ljmp
and
scas
cmp
add
sbb
inc
divb
pop
cmp
mov
in
repnz
lods
cs
scas
aam
sti
addr16
mov
xor
aaa
add
cmp
xchg
into
and
outsl
cld
inc
fstl
lahf
aaa
aaa
xchg
cwtl
filds
lret
loop
inc
fstpt
cmp
out
shrl
mov
inc
sub
lods
fst
cmp
iret
into
xor
sub
xor
call
inc
pop
cmc
loop
pop
std
mov
mov
idivl
testl
in
cltd
icebp
dec
das
mov
lahf
pop
and
add
jecxz
shrb
in
jp
jl
outsb
fistpl
mov
xchg
push
fcoms
in
cmpsb
sub
fsubs
hlt
xchg
fs
jmp
in
dec
jl
out
lods
leave
push
arpl
rol
cmp
jne
icebp
xchg
movsl
sub
push
push
mov
lods
xor
jno
inc
aaa
push
xor
arpl
xor
inc
mov
dec
sub
inc
cmpb
mov
push
pusha
adc
fs
sbbb
scas
imul
repz
mov
or
pop
fistl
inc
or
sbb
fdivs
les
loop
push
cmp
jmp
inc
fmul
xor
aaa
xor
imul
cmp
sti
bound
jg
push
jmp
jl
stc
mov
or
pop
xchg
das
jle
jmp
cmpsl
xor
shll
or
mov
cmp
movsb
xchg
lds
adc
pop
cmp
test
dec
dec
shll
jnp
data16
cltd
inc
jg
add
movsl
jecxz
fnstcw
add
mov
lods
sbbb
add
enter
mov
icebp
nop
les
out
hlt
push
adc
test
mov
dec
adc
adc
jl
mov
push
xchg
jo
add
enter
test
stos
clc
mov
and
bound
roll
push
out
dec
jmp
push
scas
das
repnz
in
insl
int3
xor
dec
mov
pop
imul
and
lock
loopne
mov
jne
add
push
push
fistpll
cwtl
add
in
push
sub
fldl
pushf
jns
jle
xchg
bound
out
stos
xchg
inc
cmp
sbb
aas
or
sbb
sbb
push
add
and
xchg
add
imul
cmp
in
fisubs
imull
fsts
or
push
rol
jge
icebp
adc
sbbb
inc
ja
jns
sbb
xor
and
jno
ret
mov
mov
dec
std
jg
loopne
and
ret
push
lret
and
cmp
nop
rorl
pop
sbb
cmp
mov
or
out
cmc
sbb
jl
add
aaa
fsubr
test
shr
cld
lea
fistl
or
xor
push
aad
add
arpl
loopne
lods
sub
push
fs
lcall
fcomi
sbb
enter
mov
std
mov
pop
loop
xor
add
push
pop
add
add
push
popf
add
adcl
pop
lods
je
lret
jmp
pop
mov
add
lea
scas
shrb
addr16
aam
add
push
adc
jns
cmpsl
shrl
dec
push
mov
fcompl
iret
lea
lea
shll
popl
cmpsl
shlb
cmpb
pop
in
lock
mov
hlt
pusha
in
enter
jo
inc
mov
pop
and
rclb
mov
and
in
imul
mov
fistps
dec
jbe
enter
add
mov
sti
mov
ret
mov
sti
mov
stos
jo
dec
lds
and
fldenv
push
jl
cmp
push
fcomps
jbe
jns
push
in
scas
shll
jl
sarl
mov
dec
fwait
mov
sub
sbb
cmp
jnp
mov
testl
outsl
pop
sub
adcb
scas
fldl
nop
test
sbb
adc
mov
push
push
aam
stos
sub
pop
inc
ds
es
rcr
inc
dec
sbb
int3
mov
mov
sub
lret
dec
in
mov
fistps
adc
repz
xor
add
push
popa
repnz
xchg
xor
cmpsl
in
and
adc
push
insl
ljmp
mov
test
lea
inc
lods
jns
push
add
pop
jl
fisubs
xchg
imul
mov
pushf
dec
es
les
push
push
jnp
negb
call
dec
int
loope
imul
inc
xor
pop
icebp
mov
lcall
gs
sub
and
push
ret
and
movzwl
push
xchg
add
out
pop
lret
jae
mov
lock
sbb
adc
xchg
test
dec
rep
fcmovne
leave
in
enter
flds
push
mov
dec
fsubs
es
imull
xchg
leave
out
push
mov
jne
mov
loope
repz
ss
dec
in
mov
jge
dec
fildll
lret
sbb
repnz
dec
stos
popa
jne
and
xor
sub
cmpsl
insl
shll
pop
mov
mov
pop
mov
xlat
adc
xor
cwtl
cmp
dec
push
sbb
clc
imul
ljmp
lcall
cmp
mov
pop
sub
jae
rcrl
div
jne
and
leave
xor
dec
orb
inc
into
jecxz
jne
push
xchg
jecxz
std
out
xchg
push
in
cmc
stos
mov
das
popf
outsb
inc
and
ljmp
fisubl
add
in
push
xor
fidivs
lret
mov
in
cmp
lret
sub
mov
ljmp
mov
inc
das
inc
cmpsb
fdivp
pushf
fchs
ljmp
dec
adcl
sahf
sub
mov
push
iret
dec
xor
rorl
les
sbb
mov
fdivl
pop
adc
cwtl
ret
jmp
push
ficoms
mov
lret
dec
mov
cmc
stc
push
arpl
stc
jge
fdivl
adc
adc
and
pop
sahf
pop
xchg
pusha
xchg
fadds
cmp
mov
mov
pop
adc
addr16
mov
pop
xchg
cmp
notl
filds
and
add
adc
das
aas
dec
add
adc
xchg
push
fcmovnbe
test
or
outsl
xor
mov
push
popa
dec
pmovmskb
ret
mov
icebp
cmpsb
mov
aas
push
js
mov
aaa
xorb
sub
or
inc
adc
fmuls
mov
fwait
stos
mov
dec
mov
push
sub
cmc
insb
xor
add
and
dec
pop
js
ret
setae
std
jne
add
lahf
clc
xchg
or
mov
sbb
mul
gs
mov
xchg
pusha
ss
dec
and
xchg
adc
pop
pop
fdivrp
push
cli
jno
mov
push
fldt
insl
sbb
mov
mov
sub
test
cltd
mov
jno
sti
adc
xchg
repz
pop
jno
or
sbb
clc
outsb
push
inc
nop
je
mov
test
insb
or
ja
movsb
lods
jb
pop
fcompl
aam
push
dec
dec
mov
call
pop
mov
addr16
fisubs
sub
xchg
out
jle
cli
cmp
mov
or
dec
sbb
stos
lcall
push
pop
mov
xor
daa
xchg
and
xorl
lret
pop
jg
add
loope
shlb
inc
repz
test
aam
sub
and
lods
cmp
repz
xchg
fdivrl
insb
test
mov
icebp
fdivrs
mov
push
in
add
push
clc
push
sub
sbb
mov
dec
les
rcrb
fsub
stos
scas
adc
popa
rcrb
inc
scas
movsl
fldl2e
xorb
adc
add
mov
xor
and
cmp
loope
xchg
imul
add
rorl
jl
aam
or
lds
arpl
rcr
xchg
mov
movsl
pop
fstpt
mov
and
test
mov
lods
push
loopne
xor
mov
jno
in
sbb
mov
mov
addr16
inc
dec
lahf
or
inc
mov
ret
pusha
mov
test
xchg
or
xor
cld
mov
xor
repz
call
mov
int
mov
jbe
mov
sbb
sbb
jg
jl
aas
int3
mov
test
fnstenv
test
mov
push
cmc
inc
fnstsw
pop
stos
popa
xchg
dec
or
mov
movsb
mov
lods
xor
or
xorl
cmp
daa
pop
push
stc
dec
xchg
jbe
aas
jb
loope
data16
mov
int3
test
mov
mov
icebp
fsts
and
and
or
xchg
pop
push
dec
sbb
frstor
and
jmp
push
scas
mov
int3
xlat
jne
gs
gs
inc
sbb
or
mov
xor
js
std
add
daa
jb
lods
and
sbb
outsb
gs
xor
mov
jae
in
inc
iret
int3
ja
int3
push
adc
mov
push
jle
js
xor
adc
pop
xlat
movsl
jb
das
mov
pusha
mov
scas
cli
popa
jg
pop
fmuls
sbb
dec
xchg
loope
icebp
gs
sub
ss
xchg
movsl
mov
jmp
cmp
rcrb
pop
inc
mov
mov
xchg
sti
pop
into
sarb
scas
push
insb
jecxz
pop
mov
push
pop
pop
out
adc
dec
dec
sbb
shrl
mov
or
test
ja
pop
xchg
rclb
es
aad
in
out
sar
sub
pushf
stos
adc
mov
or
outsb
sub
jno
fdivrl
adc
ror
cmpsb
xchg
arpl
loope
jge
scas
bound
push
mov
jg
xlat
add
mov
xchg
jle
iret
ret
sub
addb
jnp
sbb
add
dec
sarl
jp
mov
das
mov
xchg
xchg
xchg
insb
inc
sbb
stos
adc
pop
add
xchg
popf
in
in
cli
inc
sub
mov
adc
in
rorb
lea
mov
sahf
test
mov
popf
dec
fwait
sbb
push
inc
push
mov
sub
mov
cs
aam
into
std
stos
mov
and
je
cs
push
dec
mov
clc
cmpsb
add
outsb
sub
loop
sub
jnp
xchg
inc
xchg
mov
inc
lret
sbb
xchg
or
je
lods
adc
lcall
popf
data16
lahf
and
mov
xor
xchg
jns
rcrb
insl
cwtl
pop
jb
lea
loopne
rep
inc
jg
pushf
xchg
and
or
push
sahf
scas
xor
scas
dec
mov
push
add
out
inc
in
mov
icebp
cmp
outsl
jno
fwait
mov
loopne
lret
scas
mov
sub
orb
add
push
rcrb
ffree
popf
repz
lret
adc
inc
push
loopne
push
out
ss
es
xlat
ret
xchg
mov
mov
pop
pop
lahf
mov
jae
push
pop
lds
xchg
popa
nop
lods
xorl
mov
lods
adc
xchg
and
jp
jle
lret
shll
push
iret
mov
shll
xchg
imul
mov
xor
inc
mov
mov
xchg
inc
sti
pop
imul
cmp
sub
sub
out
insb
xor
cmp
lret
hlt
dec
jb
sub
jmp
filds
insb
aam
mov
pop
bound
xor
xor
and
cwtl
sahf
ret
enter
or
ljmp
xchg
ret
mov
and
xor
cmp
out
cmp
sbb
jecxz
cmpsl
leave
or
add
mov
pop
push
jnp
orl
test
mov
fdivrp
adc
test
ja
adc
stos
mov
jmp
subl
jne
push
lret
icebp
test
lods
add
sbb
jbe
push
and
ficompl
xlat
pop
ljmp
icebp
test
movsb
jmp
pusha
cmc
sbb
push
lods
adc
adc
lahf
xor
mov
faddp
mov
or
pop
lret
mov
imul
rolb
xorb
iret
add
pop
mov
sti
and
cwtl
push
cltd
das
fs
push
sbbl
or
xchg
in
mov
lahf
push
fwait
test
jmp
mov
dec
sub
pop
incb
inc
mov
pop
sub
push
fidivrs
stos
fwait
xlat
xchg
xor
push
fbstp
pop
and
push
lahf
test
jg
imul
push
ret
push
pushf
mov
dec
dec
das
out
movsb
repz
xchg
std
imul
cmp
jecxz
mov
add
push
cmp
xchg
fdivrs
mov
rcll
or
lods
rorl
lret
xor
fisttpll
adc
pop
daa
cmc
loopne
sub
pop
and
aas
daa
xchg
scas
add
mov
push
adc
inc
sub
sub
enter
je
xchg
xchg
in
xchg
push
insl
mov
aaa
mov
out
out
sahf
push
cwtl
xchg
aas
iret
mov
sbb
stc
adc
js,pt
inc
adc
mov
push
shl
les
sub
fidivrl
and
outsb
jecxz
sbb
fistps
sti
dec
fndisi(8087
in
loop
and
xor
mov
aas
push
cmpsl
insl
sbb
sarb
ds
mov
dec
cmp
jbe
xor
and
cmp
add
stos
sub
xchg
sub
adc
push
jbe
pusha
or
call
das
mov
mov
in
gs
insl
sahf
ret
lcall
fimull
add
xor
add
daa
ficoml
inc
and
mov
adc
mov
mov
xor
or
popf
fisubs
rorl
mov
sarb
ret
pop
roll
and
fcmovbe
rcrl
inc
lods
mov
imul
shl
or
xchg
movups
push
adc
fistpll
push
bound
adc
add
test
pop
push
push
popf
out
push
cmp
sub
push
mov
push
cmc
push
mov
std
loop
mov
cmp
cli
jne
or
mov
dec
pop
push
in
and
pop
xlat
sbb
sbb
push
psubb
into
mov
xchg
das
dec
mov
add
sub
or
ss
inc
fwait
nop
sub
and
xchg
sub
push
pop
das
mov
idiv
fisttpll
pop
cmp
push
or
leave
cmp
inc
push
icebp
mov
sub
or
xor
add
bnd
push
dec
ja
push
push
push
int
push
dec
jle
fisubrs
jo
mov
data16
ret
fucomp
inc
jmp
xchg
outsl
cwtl
sahf
mov
xor
in
mov
movsb
and
test
or
and
fnstcw
ja
or
rcl
inc
mov
cmp
mov
popa
sub
imul
push
or
out
jo
push
mov
in
jmp
inc
in
leave
lods
dec
scas
xor
shr
mov
pusha
lods
mov
popf
shr
outsb
fsub
data16
dec
loop
test
imul
cs
mov
cmc
shll
pop
sbb
jmp
add
in
jo
sub
push
inc
sbb
mov
aad
xor
das
add
and
data16
cmc
mov
add
jmp
dec
decb
xchg
je
int3
movsl
iret
insl
and
adc
add
cltd
pop
mov
mov
fildll
cmp
mov
in
imulb
pop
inc
mov
add
adc
hlt
dec
ficomps
add
xchg
outsl
jnp
fimuls
and
mulb
push
aaa
inc
jge,pn
dec
inc
pop
sbb
xchg
inc
or
hlt
jmp
nop
adc
inc
mov
dec
sub
fimull
adc
nop
aaa
adc
test
add
cmpsb
add
decb
inc
out
pop
hlt
adc
pop
popf
test
cmp
nop
push
fucomip
mov
jl
jns
dec
notl
jae
cmp
dec
xchg
mov
je
lea
jae
xchg
jp
popa
lods
inc
shll
loopne
push
sbb
jbe
into
sub
sti
xor
aam
out
pop
mov
sbb
fidivl
xchg
shrl
mov
shlb
das
xchg
inc
pop
mov
xchg
sub
fldenv
ret
xor
xor
mov
jge
cmp
iret
scas
aad
sahf
cmpsb
rorl
into
pushf
test
out
movsl
into
adc
jmp
jnp
rcl
inc
insb
sub
push
test
cli
fldt
cltd
ror
ret
adc
dec
out
cli
stos
in
dec
jmp
or
orl
mov
out
leave
mov
cmp
xchg
mov
and
subb
mov
cmp
inc
sub
bound
js
inc
shll
adc
in
jne
mov
sbb
dec
mov
jae
imul
outsb
adc
psubusw
push
xchg
adc
outsb
lea
arpl
push
and
les
test
jle
ja
sarl
mov
dec
nop
scas
jl
dec
sbb
jl
or
leave
sahf
sub
mov
inc
push
sub
xor
popf
cmp
sub
jl
dec
dec
addl
fnop
fisttpll
inc
ret
and
test
inc
mov
mov
loop
lock
mov
add
fbld
fincstp
sbb
mov
sbb
push
mov
rorb
xchg
jne
rcr
cmp
dec
inc
cmpsb
xchg
push
xchg
test
outsb
xor
pop
enter
dec
movsl
push
fnstsw
dec
push
mov
dec
lods
sub
shll
jl
xor
cmp
mov
enter
xor
push
mov
and
pop
xor
push
push
int
fnstcw
push
repz
or
dec
push
fwait
data16
xor
or
lock
rorl
mov
aaa
and
add
in
xchg
mov
mov
insb
out
pusha
pop
jne
pop
lahf
insb
cmpsb
xor
addr16
sub
movsl
pop
sub
pusha
pop
rolb
jge
or
test
hlt
lahf
push
xchg
mov
mov
in
fnsave
add
in
into
in
push
pushf
inc
cmp
sarl
push
test
or
dec
pop
push
enter
inc
mov
popa
jno
sub
push
adc
add
sbb
mov
fcoml
fistl
testl
and
rclb
shrl
add
out
in
mov
mov
xor
inc
inc
cmp
mov
mov
xor
push
mov
mov
sub
cmp
jp
pusha
pushf
call
outsb
xor
rorb
pop
inc
inc
or
imul
sbb
insl
outsl
xor
xchg
and
mov
mov
into
das
nop
fildl
enter
nop
outsl
lods
jle
fsubs
and
push
push
iret
inc
pop
jnp
lcall
repnz
jo
enter
xor
mov
dec
mov
jg
jle
shll
sbb
push
or
test
subb
lea
and
inc
adc
inc
inc
inc
adc
add
and
loopne
jnp
xchg
stc
stos
pop
dec
push
das
iret
add
js
popa
pop
push
push
scas
xor
push
divl
mov
push
sub
dec
sbb
in
mov
lods
jp
shll
insb
test
cmp
clc
mov
push
call
jmp
call
ja
sarb
js
mov
mov
dec
dec
push
mov
dec
out
add
xor
mov
fsubrl
xchg
imul
stos
je
inc
sbb
js
mov
loope
jbe
dec
test
ret
lock
push
mulb
xchg
into
push
jno
sbb
mov
lahf
stc
cmp
mov
sbb
into
jg
hlt
mov
cmp
push
cld
add
adc
ret
ret
mov
mov
xchg
scas
xchg
xlat
test
jle
inc
in
xor
fimuls
xchg
lds
mov
mov
popa
jbe
movsl
ret
xchg
outsl
xchg
cmpsb
mov
jp
add
jp
dec
push
or
mov
jle
insb
iret
xlat
xchg
fwait
mov
mov
mov
push
stos
filds
cmp
sub
fbstp
push
cmp
lea
mov
jecxz
add
sbbb
xor
inc
add
mov
subb
cmp
xchg
inc
mov
in
and
pushf
xchg
aad
jne
jmp
mov
outsb
push
std
adc
sub
jo
and
adc
andb
popa
or
ja
mov
leave
inc
sub
icebp
mov
ret
push
in
mov
cmp
or
and
stos
add
ror
cmp
lds
popa
dec
shlb
fsubl
mov
sub
mov
nop
mov
int3
mov
jmp
call
shrb
insb
or
and
sub
push
xchg
sti
lret
les
mov
es
out
mov
fisttpl
popa
jge
ljmp
push
jne
xor
das
or
test
pop
and
pop
insb
inc
mov
cld
xchg
add
lea
dec
inc
je
add
insb
mov
std
mov
fbstp
jmp
aaa
mov
outsl
loope
adc
out
mov
add
or
mov
sub
dec
xchg
les
int
sub
xor
ret
sti
aam
pusha
add
addb
sub
jle
int
mov
aas
lods
ljmp
jb
xor
push
pop
add
add
stc
xlat
inc
dec
jmp
popf
idivl
adc
aaa
testb
movsl
ret
mov
cmp
add
fwait
lcall
xchg
mov
nop
xchg
dec
je
rorl
lgs
inc
xchg
testb
int
push
inc
imul
pop
test
push
lea
roll
loope
loop
in
ljmp
adc
and
fisubrl
mov
lods
dec
fs
hlt
fs
jno
or
xchg
dec
sub
rcrb
fnstenv
fs
dec
sar
mov
imul
sub
pop
cld
ret
ds
sub
add
xor
mov
xchg
daa
sub
inc
adc
mov
mov
movsl
adc
jnp
inc
xchg
cmp
dec
in
nop
dec
mov
add
inc
push
xchg
iret
mov
cmp
nop
and
or
stc
cmp
stos
sub
adc
mov
xchg
push
fisubs
iret
push
mov
and
hlt
lcall
jae
adc
cmc
and
mov
mov
pushf
sbb
mov
pop
repz
gs
gs
fcmovnu
jo
mov
imul
loope
cwtl
push
rcrb
xor
cmpsb
cli
push
xor
cmpsl
cld
push
out
test
andl
inc
lret
dec
std
lods
sti
imul
aam
imul
lock
pop
sarb
iret
mov
cmp
in
das
in
jmp
in
frstor
int
mov
sti
aas
test
sbb
xchg
fcoms
cmpsl
loopne
jmp
mov
aam
pop
jb
or
aad
and
dec
push
shlb
dec
filds
sbb
dec
leave
add
xchg
insb
nop
mov
sbb
in
push
xchg
es
adc
stc
xchg
mov
icebp
aad
daa
vdivps
ja
gs
dec
or
dec
rcrl
adc
sub
or
in
or
mov
xchg
cs
ret
mov
mov
out
xor
adc
xor
inc
repnz
sub
in
or
mov
dec
mov
mov
xor
data16
cli
test
lahf
aam
pop
cmp
or
add
mov
lods
cli
hlt
rcr
out
icebp
imul
addb
lds
mov
mov
iret
test
fs
xchg
outsb
pushf
and
jl
outsl
mov
mov
fs
inc
xchg
or
xchg
stc
cmp
pop
add
fs
iret
mov
cmp
xchg
mov
or
mov
jbe
adc
loopne
sub
jle
insl
stc
rorb
push
push
inc
push
aam
or
lcall
mov
mov
inc
imul
int3
xor
dec
add
adc
mov
shll
insl
xchg
dec
movsb
mov
dec
pop
jl
and
jb
push
adc
jnp
pop
pop
cmp
inc
sub
push
dec
scas
pop
std
out
popa
fwait
add
and
push
leave
lods
rcrb
mov
dec
testl
jecxz
outsl
or
xchg
pusha
adcl
fdivrl
addr16
fdivs
push
xor
pop
clc
je
adc
push
iret
outsb
mov
cli
out
leave
push
rol
lret
xchg
shlb
dec
pushf
mov
scas
mov
and
cs
iret
and
push
pop
fwait
sub
mov
dec
mov
scas
sub
pop
pop
jg
hlt
jl
test
js
adc
add
jno
rcrb
nop
icebp
dec
fwait
sbb
jns
push
je
lahf
cli
repnz
fbstp
or
pop
cmp
or
lahf
sub
movsl
insl
push
shlb
mov
imul
jnp
xchg
xor
jl
mov
rcll
imul
out
sub
push
sbb
fstpt
testb
push
cli
jno
int
flds
repnz
and
jle
cmp
lds
xchg
out
pop
mov
cmp
sbb
lods
dec
mov
add
cmpsb
jecxz
dec
pop
jno
ret
enter
test
cmpsl
call
push
jns
outsb
andl
aaa
dec
je
aad
add
repnz
sub
or
mov
inc
ja
mov
xor
dec
mov
cmpb
mov
inc
iret
je
shrb
xor
xchg
mov
insb
push
pop
inc
pop
daa
adc
xchg
or
mulb
fistps
or
je
pop
int
pop
mov
das
loope
inc
and
fstl
mov
push
pusha
in
xchg
cwtl
pop
pop
cltd
lret
mov
clc
push
adc
xchg
call
iret
inc
cltd
jge
mov
sbbb
rcl
lods
ss
repnz
mov
mov
mov
nop
xchg
jg
and
les
dec
data16
pop
xor
int
jo
push
idivl
jne
push
push
sub
cmp
cltd
lcall
inc
stos
mov
push
loope
in
push
iret
shlb
ror
int
sub
pop
mov
mov
pause
pusha
inc
insl
repz
in
jg
or
add
xchg
mov
add
aam
test
xchg
lahf
mov
push
mov
push
imul
pop
lea
sbb
arpl
fcompl
and
pop
movb
out
jmp
pop
cmp
or
jmp
sub
add
clc
jo
xor
and
add
adc
cmpsl
mov
jne
push
inc
dec
roll
fcmovb
add
insl
test
addb
dec
xchg
fistpll
dec
inc
inc
sub
sbb
dec
pop
xchg
jl
lcall
fsubrp
in
and
cli
rol
dec
add
dec
ljmp
sub
push
adc
pusha
jecxz
lret
scas
mov
subl
les
mov
push
in
es
push
roll
mov
add
and
sbb
ja
xor
movsl
bound
out
loope
pop
mov
jmp
jo
cmp
sub
push
sarb
rcl
fists
insl
sub
das
lret
or
out
ljmp
pusha
clc
cmp
jno
sbbb
int3
push
or
ficompl
push
sbb
movsb
repz
xchg
mov
jns
xchg
int
xchg
cs
mov
daa
and
cld
repz
mov
sub
lds
add
push
mov
fs
dec
lds
cli
into
push
add
ret
xchg
sahf
mov
sub
sbb
jb
xchg
pop
inc
fdiv
xor
jle
push
jg
cmp
mov
ja
push
out
dec
fidivrs
adc
mov
insl
jle
push
sub
cltd
fwait
sbb
or
aaa
aad
lock
outsb
inc
add
test
xor
xorl
xor
sub
aaa
pop
adc
cmpl
adc
hlt
jl
lods
ret
cmc
les
pop
cmp
cli
testl
and
push
xor
movsl
fdivr
inc
mov
call
sub
mov
out
and
cmp
mov
popf
les
ja
sub
push
scas
push
dec
adc
fiaddl
jmp
pop
dec
xor
add
sub
sti
mov
div
mov
mov
jns
xchg
sbb
je
mov
pop
mov
jns
mov
sbb
divl
pop
leave
loope
adc
fcomi
jne
pop
cltd
adc
jle
test
mov
shrl
nop
inc
mov
adc
push
cmp
leave
mov
mov
cwtl
fsubrl
lock
mov
rol
test
and
jo
test
cld
inc
inc
imul
loop
inc
out
clc
aad
pop
into
outsb
or
jp
sar
sub
repz
pop
jecxz
jae
and
mov
sub
in
out
mov
sarb
sub
outsl
sub
push
add
and
cmpsl
in
ljmp
jo
xchg
fiaddl
add
push
aam
inc
push
cwtl
and
cmp
ror
ljmp
pop
aas
or
or
inc
movl
fs
sbb
les
ret
test
push
mov
lcall
mov
mov
jg
mov
adc
popa
test
sub
inc
adcb
lods
xor
jae
xor
jg
dec
inc
xchg
jmp
movsb
mov
pop
inc
mov
adc
test
scas
out
cltd
jbe
ss
daa
data16
movsl
test
mov
adc
or
sub
adc
mov
lds
orl
lea
xchg
inc
xor
dec
mov
xchg
negb
jp
lret
int
fisttpll
stos
dec
mov
jno
cmp
lds
jno
out
pop
es
pop
xchg
inc
dec
push
ljmp
outsb
sbb
and
int
dec
dec
lret
push
imul
sbb
rorb
mov
and
insl
mov
pusha
pop
aaa
jb
repz
or
xchg
xor
fisubrl
enter
ja
cwtl
cmp
adc
pop
je
xlat
rorb
sbb
push
insl
sub
jne
inc
sub
adc
mov
pop
mov
jnp
jnp
lock
loop
cmp
int3
cwtl
jns
xor
xchg
push
gs
jb
cmp
sub
mov
out
jl
fisttpll
cmpsl
js
lcall
push
xchg
cmp
xchg
cmpsb
xchg
lods
aaa
dec
andl
mov
push
lods
and
insl
cmp
in
add
mov
mov
sbb
cli
mov
sub
test
mov
dec
roll
mov
push
rcrb
decb
clc
in
out
xor
aaa
scas
or
pop
xchg
rolb
xor
push
cmp
bound
dec
jg
popf
arpl
adcb
movsl
movsl
addb
dec
mov
flds
mov
repz
rcrl
or
in
dec
arpl
or
sub
and
push
sub
xchg
repz
hlt
adc
pop
xlat
insb
gs
mov
add
and
mov
sahf
mov
inc
dec
mov
dec
xchg
dec
repnz
rorb
push
movsb
stos
aam
loope
mov
fdivr
and
and
push
icebp
mov
xchg
sahf
or
sub
cld
xchg
dec
adc
sbb
adc
aam
leave
repnz
dec
imul
rolb
pusha
aad
aaa
pop
cld
pop
daa
sub
into
cmp
cld
xor
pop
cli
dec
or
jae
mov
cmp
ret
cmp
jns
pop
mov
imul
push
cmp
cmpsb
sub
cmp
sbb
movsl
clc
pop
inc
push
add
sbb
cld
pop
push
dec
push
or
inc
dec
cld
int
mov
xlat
dec
mov
cmpsb
sub
jge
aam
test
pop
mov
sbb
repnz
stc
dec
inc
mov
call
out
adc
xor
dec
aam
fs
pop
adc
mov
mov
enter
mov
ret
inc
pop
arpl
cmpsl
dec
loopne
imul
inc
mov
dec
ret
mov
mov
test
pop
mov
lret
jno
call
sub
testb
cmp
or
sbb
fisubs
cld
inc
sbb
xor
jae
mov
stc
mov
sbb
mov
xor
sbb
repnz
outsb
and
sahf
adc
popf
cmpl
pop
aam
jns
xchg
pushf
pop
sbb
aas
insb
test
pop
adc
add
rclb
mov
mov
fistps
and
push
out
fs
adc
fcom
aaa
jge
cmp
shr
les
fwait
shlw
dec
add
rcrl
and
jnp
xor
mov
mov
add
add
dec
mov
jb
lahf
or
mov
xlat
pop
test
mov
pop
testl
xchg
push
arpl
fidivrl
sub
push
inc
dec
mov
inc
cltd
enter
scas
mov
fld
icebp
inc
jmp
adc
repnz
cmp
je
jbe
sub
dec
and
not
stc
and
xor
mov
fistpl
xor
int3
sub
xchg
cmp
or
lret
add
xorl
xchg
jnp
mov
xlat
sbb
and
insb
loopne
and
xor
mov
push
push
dec
jge
inc
sti
repnz
nop
add
lret
cltd
inc
sbb
into
mov
sub
lock
mov
lea
push
mov
rclb
in
mov
and
int3
jg
mov
fsubrl
test
push
push
inc
fwait
call
std
pop
inc
loopne
imul
lcall
or
xchg
or
xlat
cmpsl
mov
or
cmp
sub
add
xor
cmp
negl
lods
lret
ja
dec
js
mov
pusha
inc
out
pop
cmp
adc
movsb
sbb
js
je
rcpps
inc
vphaddubw
xchg
or
inc
repnz
in
test
shrl
xlat
fisubrs
push
lcall
mov
daa
mov
adc
inc
fisubrs
dec
int3
mov
orb
add
xor
out
and
cmp
xchg
dec
fildll
push
and
jne
push
test
lret
mov
cmpl
mov
in
addl
sbb
fcoms
push
stos
and
mov
jle
add
and
mov
or
les
mov
outsb
insl
and
sub
in
cs
mov
movsl
cltd
pop
mov
jno
hlt
inc
push
mov
lahf
loop
jb
lret
xor
inc
lock
or
sub
stos
mov
sahf
imulb
pop
iret
sub
imul
xor
push
xchg
mov
inc
filds
jp
movsb
pop
imul
popl
xor
xor
gs
das
cmp
outsb
mov
gs
fs
dec
sti
mov
adc
cmp
dec
data16
lods
pushf
in
ss
cmc
xor
arpl
mov
pop
stos
or
and
mov
push
sub
dec
mov
adc
imul
shrb
mov
cld
movsb
lcall
push
mov
pop
call
fcomps
cmp
jnp
test
dec
shlb
stos
stos
xchg
and
mov
hlt
leave
inc
pop
dec
call
lock
cltd
fwait
or
jmp
push
shl
clc
mov
xchg
int3
and
push
add
pop
push
mov
adc
xor
jecxz
jg
mov
adc
cs
dec
add
cli
aaa
cmp
cmp
ficoms
jnp
or
int
dec
mov
jge
es
mov
rcrl
dec
jno
inc
xor
cmpb
lea
push
cmpsb
mov
das
inc
cmpsl
mov
stos
mov
loopne
arpl
adc
rolb
mov
imul
xorb
cmp
mov
scas
inc
push
pop
arpl
mov
addr16
fistpll
and
fldenv
addl
outsl
mov
gs
jle
mov
rolb
push
add
pop
lahf
add
sub
mov
ret
jge
imul
and
cmp
inc
adc
pop
and
push
add
out
insl
push
add
loopne
shll
loopne
lcall
xlat
sbb
pushf
movsb
jae
cmp
inc
adc
cmp
mov
push
rorb
lock
add
test
shl
roll
and
movsl
cmc
sub
cmp
movsl
jae
shr
bound
xchg
jnp
insl
adc
pushf
jl
pop
mov
jno
aaa
lahf
cld
or
jno
dec
inc
aas
daa
les
push
mov
xorl
or
ljmp
sub
sahf
mov
push
sbb
filds
nop
pushf
mov
and
cmp
inc
dec
out
fwait
cmpsl
mov
jne
mov
jbe
adc
jne
pop
int3
mov
xor
in
mov
out
mov
jmp
inc
sbb
ret
in
sbb
or
lea
and
in
xchg
aaa
mov
test
lret
or
jmp
xchg
or
sub
test
ja
loopne
sbb
insb
inc
pcmpgtd
lcall
pop
pop
out
les
je
add
cmp
outsl
lcall
mov
pop
push
jb
and
jns
fcmove
cmp
fdivl
mov
das
daa
imul
cmpsb
mov
jmp
inc
rorb
and
cmp
xor
ret
aad
js
jle
clc
addb
shlb
ficompl
fildl
cmpsl
jmp
push
or
add
jb
push
fxam
mov
sbb
pop
in
ret
sub
repnz
test
outsb
in
scas
sbb
popf
lret
mov
cmp
test
pop
jmp
arpl
jbe
insl
dec
xchg
add
cmpsl
ror
xlat
push
movsl
pop
popf
es
adcl
push
cmpsl
push
fucomi
and
lahf
pop
mov
pop
stos
sub
or
pop
insl
xor
jmp
dec
lea
mov
lret
data16
cs
aas
outsl
cli
mov
dec
lahf
hlt
mov
imul
jb
or
xchg
aam
adc
push
mov
adc
shl
xchg
and
lret
fidivl
dec
xor
xor
fs
jl
adc
loopne
incb
sbb
mov
cmpsb
sub
ljmp
ret
jge
mov
push
inc
loopne
mov
push
test
in
gs
repnz
cmp
in
fidivl
mov
call
je
pop
in
inc
frstor
fisubrl
dec
adc
iret
push
subl
insl
pushfw
insl
icebp
dec
pushf
mov
daa
sbb
call
les
sub
cli
lret
xchg
popf
ss
fucomi
idivb
or
xor
add
mov
fistl
push
testl
mov
sub
push
ret
inc
inc
adc
int
lret
or
rolb
dec
mov
mov
fsubrs
ja
movsl
mov
adc
enter
inc
sbb
ds
or
fildl
out
ja
mov
xchg
pop
pop
shr
test
dec
pop
andb
shrb
test
sub
arpl
xchg
or
outsb
test
scas
loopne
mov
gs
stos
pop
mov
aam
xchg
and
push
adc
jle
sbb
loop
in
sarb
roll
addb
stos
xchg
outsl
pushl
vpand
cld
xchg
mov
or
insb
andb
cmc
stc
daa
xor
es
lea
jb
cmpsb
sub
mov
data16
test
jae
loopne
icebp
out
jg,pn
jne
pop
inc
lahf
dec
or
xor
popa
jp
subb
jne
js
push
test
aas
push
push
ret
icebp
mov
movsl
leave
inc
inc
push
push
cmpsb
cwtl
xor
add
xchg
sahf
push
sbb
inc
xor
pop
mov
jp
aaa
movsb
lock
mov
jmp
sarb
or
push
push
fidivs
jmp
push
fwait
sub
jle
insb
movsb
dec
sub
or
add
xlat
in
xor
movsl
outsb
or
inc
and
fwait
loopne
pop
shrl
test
nop
jae
pushl
repnz
dec
imul
xchg
push
xchg
dec
mov
jecxz
sbb
sub
mov
xor
popa
sbb
out
test
push
in
loop
xor
pop
pop
stos
pop
and
sub
in
jns
jle
jbe
pop
or
mov
adc
fisubs
dec
cmp
sbb
push
mov
adc
inc
dec
inc
xchg
cmp
xor
lods
sub
jb
out
sub
xchg
pop
dec
xchg
enter
lcall
mov
mov
mov
adc
cmp
inc
aaa
incl
aad
sahf
loop
push
setge
jmp
mov
dec
inc
sar
xor
push
call
test
fwait
imul
add
lahf
out
lret
fwait
mov
out
into
test
mov
in
in
insb
mov
pop
push
sti
jb
and
test
call
sti
mov
jle
daa
xchg
negl
mov
pop
ret
mov
jg
into
mov
loop
movb
push
xchg
outsb
pushl
inc
clc
cltd
clc
xchg
filds
ret
push
test
and
mov
add
dec
scas
or
out
in
cld
aas
push
je
orb
int
orb
inc
rcrl
inc
dec
push
test
clc
xor
cmp
mov
mov
cmp
rcrb
rol
ja
shll
shr
or
pop
test
fcomps
xor
loop
ja
repz
call
shll
lock
push
ret
xchg
and
push
lret
rcrl
js
sbb
push
mov
inc
adc
test
sarl
inc
sar
clc
into
add
out
cld
push
dec
rcl
jge
mov
and
dec
pop
and
xor
inc
cmpsl
and
or
in
dec
movsb
mov
xor
adc
outsb
rclb
sub
mov
ds
mov
mov
push
and
inc
or
test
adcb
mov
stos
ja
adc
jp
adc
lds
call
add
cmpb
lahf
and
xchg
es
cmp
mov
jl
and
ds
xchg
cmpsb
dec
dec
mov
test
jo
nop
inc
fdivs
lock
sbb
int
pop
inc
cwtl
push
insl
addl
cmp
sub
jae
mov
push
xchg
imul
in
ret
cwtl
or
hlt
sub
aam
push
mov
push
mov
and
test
xchg
or
ss
pop
imul
xchg
bound
inc
ffreep
mov
cli
mov
push
sub
inc
rcl
out
arpl
insl
sub
imul
push
xor
push
ret
stos
stos
movsl
test
dec
push
icebp
mov
jge
push
inc
cmp
sahf
dec
dec
dec
jmp
push
cmp
in
mov
addr16
imul
push
xchg
and
or
cmpsl
xchg
rcrb
loope
adc
xchg
mov
movsl
jns
test
iret
dec
xchg
pop
adc
icebp
loope
pop
push
adc
loop
cmp
pusha
pop
cmp
mov
jge
jmp
jg
xor
adcb
cwtl
add
pop
fisttpl
jge
je
jmp
adc
xchg
mov
xchg
xor
fiaddl
inc
inc
insb
xchg
std
or
rolb
push
into
sub
inc
cltd
pop
leave
nop
pusha
insl
call
pop
mov
push
push
gs
xor
xor
cmp
scas
fidivs
pop
cmp
lea
pop
call
bound
or
fisubrs
stos
adc
xor
sub
pushf
inc
push
pop
or
mov
push
mov
ret
out
and
lods
iret
out
pop
inc
xchg
psraw
in
inc
xor
cmp
popa
sub
push
mov
stos
ror
adc
push
clc
andl
cmp
mov
xchg
ret
push
negb
fs
push
xchg
add
mov
mov
pop
stos
fiadds
xor
xor
adc
push
push
sahf
add
adcl
cltd
aad
out
push
sub
js
ja
popf
imul
lahf
rolb
mov
fwait
and
cmpsb
out
sahf
movsb
dec
pop
fisubrs
mov
cwtl
leave
pop
out
ljmp
cmp
sti
inc
outsl
aaa
jbe
in
mov
mov
mov
sbb
jnp
push
cmpb
loope
push
pushf
aaa
fdivr
outsb
inc
mov
fucom
and
sub
mov
adc
pop
mov
addr16
adc
xchg
pop
leave
or
jb
push
sub
sub
outsb
xor
leave
lods
sub
insl
xchg
inc
pushf
mov
cmc
or
jb
mov
mov
cli
stos
imul
sub
push
repz
push
inc
pop
inc
add
clc
add
dec
add
dec
jecxz
mov
repnz
mov
clc
pop
sub
ja
sub
add
ret
lods
negb
aas
or
mov
mov
adc
addl
adc
jmp
aam
test
in
cmp
xchg
or
ss
push
jmp
iret
sub
xchg
testb
and
enter
jne
stc
pop
sbb
aas
sbb
lret
ret
sub
cmp
add
sub
sbb
pushf
lret
sub
fbld
dec
xchg
sbb
pop
loop
xor
in
in
lahf
pushf
and
aad
shl
iret
push
into
xorl
add
mov
aaa
sarl
arpl
sbb
faddl
aam
sbb
jg
and
xor
push
or
repnz
icebp
xor
mov
orb
and
ljmp
mov
mov
mov
cmp
inc
mov
mov
add
jl
outsl
mov
cwtl
popf
push
fildl
push
xchg
push
sbb
nop
mov
mov
test
test
push
jecxz
loop
dec
sbb
jb
push
cmpsl
add
lcall
xchg
or
orb
pushf
clc
cmp
movsb
mov
jecxz
imul
daa
adc
and
xchg
jmp
aas
pop
jecxz
lcall
mov
lods
movzbl
dec
xor
data16
in
nop
mov
add
lret
xchg
jle
xchg
sbb
fisubs
inc
cmc
aad
xor
insl
xorl
sar
lock
daa
flds
hlt
mov
sti
and
imul
add
xchg
negb
push
lret
mov
mov
jo
cmp
adc
or
pushf
iret
aam
inc
lods
add
in
orl
call
icebp
gs
inc
fidivrl
jle
pop
mov
and
sti
push
add
into
cmpl
mov
sbb
loop
add
loopne
ds
xor
jno
adcl
xor
fwait
xor
fdivs
cld
pop
mov
jge
je
xchg
sub
addr16
mov
iret
and
leave
pop
push
adc
es
sahf
dec
pop
jge
jecxz
jns
sub
mov
lds
push
mov
inc
insb
lea
enter
fsubl
jbe
icebp
lds
or
lds
outsb
mov
push
jns
imul
leave
out
xor
mov
stos
mov
lea
or
sbb
mov
mov
mov
mov
mov
adc
sub
fstpt
iret
dec
cmp
mov
pushf
mov
insb
movsb
lahf
movsb
outsl
pop
insl
push
ds
in
arpl
lret
xor
sbb
ja
fsubrl
and
adc
fbstp
sti
push
mull
ret
pop
stc
sub
dec
mov
data16
mov
in
sbb
cld
int3
inc
jp
mov
inc
xchg
scas
test
roll
push
mov
jg
pop
fstps
lret
pop
scas
rolb
popf
es
xor
push
movsl
fcmovne
pop
xchg
lcall
subw
rcr
pop
lcall
xor
inc
push
pop
cmc
pushf
inc
pushf
adc
mov
push
mov
idivl
push
divl
leave
idiv
lea
ss
push
fwait
mov
xchg
jg
movsl
arpl
jge
pop
repnz
ds
js
mov
andnps
or
addr16
or
mov
fwait
sbb
cwtl
lds
jo
jns
xchg
and
add
inc
out
mov
push
loope
loopne,pt
mov
sbb
mov
push
lods
pop
xchg
cld
or
scas
and
pop
or
sub
push
jb
cmp
mov
inc
add
push
dec
out
jno
fldenv
xchg
stc
cmp
push
push
cwtl
mov
lea
mov
incl
loop
icebp
push
stc
mov
mov
pop
pop
jp
sbbb
arpl
mov
into
fidivs
cld
clc
mov
pop
jecxz
pusha
jmp
and
mov
xlat
in
sub
adcb
jle
pop
lock
loope
jbe
int
push
push
pusha
in
sahf
mov
test
lret
and
jbe
xor
insl
xor
ja
or
sub
jns
sub
sbb
jge
enter
stc
push
lret
inc
add
mov
call
in
sub
scas
cld
jle
cmp
jp
dec
add
cltd
sub
adc
dec
mov
outsb
dec
xor
dec
mov
lcall
cld
push
sub
lea
mov
fisubrl
sub
clc
jbe
movsl
sbb
mov
mov
sahf
in
push
std
dec
adc
imul
out
cld
fwait
inc
imul
mov
fwait
mov
jbe
negb
mov
out
cmp
mov
shrl
adc
pop
cmp
push
push
jl
rclb
out
ljmp
dec
pop
call
xor
cmpsb
sbb
pop
rcll
jbe
adc
jg
fcom
outsl
push
arpl
xor
mov
fwait
or
mov
mov
adc
xor
std
mov
ja
xor
mov
repnz
xor
jbe
ror
push
dec
mov
enter
sbb
pop
sub
clc
mov
sub
pop
push
pop
leave
inc
jmp
fldl
pop
int3
int3
dec
push
cli
or
test
mov
mov
mov
xlat
ret
mov
jno
ja
ret
jg
jl
pop
inc
push
icebp
int
in
imul
pop
push
ss
mov
mov
sub
mov
inc
xchg
test
sbb
pop
mov
xchg
xor
dec
sbb
clc
inc
ficompl
xchg
in
jl
mov
fwait
mov
mov
bound
lahf
and
jl
jmp
test
outsb
loop
arpl
push
pop
mov
sub
fistpl
into
dec
pop
mov
movzbl
ret
mov
nop
stos
and
clts
pop
push
js
sub
test
sbb
lods
shll
shrl
sbb
nop
xchg
shrl
xchg
sbb
push
out
int3
aam
xor
iret
mul
std
jne
xchg
push
lret
and
call
inc
cmc
pop
mov
data16
or
cmc
comiss
or
lret
and
adc
fidivl
jge
dec
jge
push
loop
loop
ret
sub
sbb
jge
cmp
dec
int3
jbe
shlb
fnstenv
leave
insb
outsl
lret
xor
mov
popa
inc
pop
cld
imulb
mov
inc
xlat
int3
inc
sub
inc
nop
stos
mov
jl,pt
fdivp
pop
int
mov
movzwl
adc
jge
pop
dec
in
dec
inc
xchg
pop
outsb
cld
push
das
mov
mov
sbbl
dec
rcll
rcll
or
mov
mov
sti
jle
adc
mov
inc
mov
inc
sti
jecxz
call
lcall
push
adcl
jge
pop
add
aaa
dec
push
js
out
inc
stc
loopne
mov
inc
clc
int
inc
std
inc
xchg
pop
lock
fdivp
push
loop
pushf
pop
adc
xchg
sti
or
ret
pop
lea
sub
int
mov
cmp
pop
insl
or
sahf
mov
adc
add
pop
jne
cltd
cmp
jl
sub
add
stc
and
push
adc
imul
stos
cmp
clc
and
mov
adc
push
jbe
cwtl
xchg
pop
push
push
out
jg
movsl
scas
es
imul
adc
or
stos
inc
mov
popa
test
and
jae
dec
and
cmp
jge
dec
int3
daa
pop
push
push
jae
and
pop
jb
lds
xchg
push
outsl
push
rcrb
mov
popf
push
xlat
test
mov
das
es
sub
xchg
dec
sub
rclb
out
or
in
out
xor
pop
sbb
orb
test
ja
mov
push
cli
insb
dec
test
leave
div
jbe
out
das
push
push
xchg
cmpb
lret
adc
mov
in
xchg
mov
mov
je,pt
mov
dec
and
lret
pop
sbb
sub
and
xchg
pop
inc
cmpsl
cltd
shr
sub
jl
jbe
sbb
scas
mov
push
loopne
pop
lret
mov
push
in
pop
push
notb
mov
enter
lea
stc
pop
or
call
mov
push
mov
outsl
sbb
mov
and
aad
mov
push
mov
pop
cmpsb
push
stos
fisubs
filds
push
jmp
jmp
insl
jae
xchg
inc
push
mov
push
cmp
fucomip
jbe
movsl
outsb
cmc
sub
adc
stos
cmpsl
and
dec
xor
push
xchg
and
jp
inc
ret
cmp
iret
pop
push
cltd
mov
sti
rol
fadds
popa
les
pop
dec
shlb
sub
loope
ret
or
test
lds
sbb
repnz
fimuls
jbe
out
adc
lret
pop
sub
xchg
repz
dec
jg
push
in
ja
dec
push
cmp
xchg
popa
adc
push
push
stos
xor
push
xchg
pop
pop
push
xor
jae
xor
xchg
js
lock
stos
in
push
cmp
fs
adc
xchg
and
in
push
mov
dec
jl
out
mov
xor
push
lret
iret
xchg
leave
icebp
cmp
pop
hlt
mov
push
xlat
or
push
xchg
lock
cmp
std
insb
sbb
mov
fistpll
push
movsb
sti
mov
daa
mov
jbe
mov
xor
pop
pop
sub
jp
and
cmp
fwait
lret
mov
mov
jl
add
and
jb
cmp
and
fs
aam
fstpt
lcall
xchg
or
add
test
mov
decl
sbb
loopne
push
adc
mov
pop
xor
add
xor
out
fldl
jp
das
js
jg
xorl
mov
int
cmp
dec
lcall
aas
adc
sbb
cmpb
pop
out
movsl
mov
stos
jecxz
mov
dec
pop
es
jbe
pop
stc
and
xchg
dec
outsl
push
inc
dec
arpl
mov
ss
leave
stc
icebp
or
jbe
pop
add
test
push
add
sbb
arpl
ljmp
pop
pop
inc
add
jl
loopne
leave
sub
int
xor
or
xor
add
iret
inc
mov
inc
pusha
lret
lods
scas
fwait
xor
adc
insb
test
stc
fwait
jecxz
mull
mov
ds
push
inc
or
sub
and
jp
dec
shlb
icebp
pop
add
add
jo
cmp
pop
and
mov
in
inc
pop
arpl
or
sub
mov
add
dec
test
jnp
jge
test
push
and
ja
fdiv
shlb
add
push
sahf
adc
xorl
push
sahf
lahf
jo
pushf
and
push
shrl
adc
sbb
in
fptan
cmpsb
imul
mov
xor
lods
ss
xor
fimull
sub
movsl
mov
sbb
stos
out
stos
jo
xchg
mov
daa
jecxz
push
je
stos
pop
pop
not
jb
jecxz
das
jns
das
jp
lret
mov
scas
push
stos
mov
in
xorl
mov
in
dec
lds
out
imul
push
repnz
cmp
lahf
repnz
ret
mov
push
cmp
jge
sub
mov
mov
jno
dec
cmp
jle
popa
lods
int3
xchg
xlat
sahf
imull
push
lea
mov
push
notb
sbbb
and
jl
cmp
je
push
jnp
jne
mov
in
repnz
mov
mov
ret
push
push
xchg
or
push
jmp
in
ja
sub
out
cmpsb
rcr
ds
xchg
xchg
repz
iret
das
adc
adc
lods
aas
adc
loop
push
divl
fwait
or
mov
leave
mov
mov
jmp
lods
cwtl
ret
fstpl
lahf
mov
and
mov
fidivl
sarl
outsb
xchg
push
xchg
rol
mov
sbb
rcl
cmp
clc
mov
mov
aad
cmp
sar
jle
add
xor
mov
test
sbb
mov
or
fiadds
jl
and
cmpsb
adc
xor
shr
std
xchg
push
sbb
lea
sbb
pop
stos
movsl
dec
sahf
pop
cmc
popa
pusha
mov
call
je
ja
aam
push
inc
inc
add
out
push
inc
lods
ret
push
mov
andb
lock
pop
nop
jl
sarb
add
hlt
xchg
push
dec
in
icebp
or
cwtl
repz
pop
cmpsl
loope
andl
dec
lea
push
jg
xchg
int3
mov
cwtl
cs
mov
repz
addr16
scas
lods
mov
je
and
xchg
and
xor
bound
lds
inc
cwtl
out
lcall
stos
subb
cmp
fbld
test
mov
insb
shlb
in
outsl
mov
mov
add
push
bound
test
push
fmull
mov
out
push
add
ret
xchg
mov
inc
std
and
and
push
loopne
xchg
sub
ror
mov
daa
sbb
pusha
dec
sub
mov
daa
aas
pop
out
fidivl
push
icebp
sbb
mov
incl
test
pop
out
scas
ret
stos
or
in
push
push
pop
xchg
xchg
mov
std
lret
xor
mov
fsub
dec
xlat
push
or
ds
pushf
push
pop
sbb
mov
xchg
repnz
jno
out
xchg
sbb
shlb
push
xlat
outsl
mov
cmc
fldcw
mov
mov
push
mov
or
jb
aad
jp
rcll
xor
ficoml
scas
mov
bound
daa
sbb
sub
hlt
jne
fcompl
inc
mov
test
ds
leave
add
rcrb
cmpsb
je
and
push
scas
ja
pop
mov
xchg
in
frstor
stos
sbb
or
or
push
insl
std
xor
into
mov
mov
pop
in
cmpsb
sbb
push
lods
stc
popf
shlb
jl
cld
add
daa
aas
push
test
cmp
cwtl
push
cmp
pop
inc
push
jecxz
jo
fwait
mov
sub
ja
test
push
push
mov
adc
sbb
jae
arpl
fs
pop
mov
daa
dec
in
ret
ret
and
inc
pop
pop
fildl
add
mov
mov
or
test
enter
clc
sbb
cld
sar
ficomps
adc
jecxz
rclb
pop
scas
rsm
iret
lds
xchg
xchg
mov
jl
or
xchg
pop
notl
pop
mov
adc
inc
add
inc
addb
xor
mov
cltd
cwtl
sbbl
mov
testl
cmc
pop
lcall
int
cwtl
sti
cmp
sbb
inc
pop
jns
insl
stc
es
ljmp
sbb
dec
insl
mov
into
mov
lcall
lcall
jns
cmpsl
jb
outsb
mov
lret
cmpsl
nop
mov
in
stos
mov
ljmpw
sub
loopne
cmp
sbb
in
rcrl
ja
push
leave
stos
rcrb
adc
xchg
pushf
add
das
rclb
cmc
jg
imulb
pusha
stos
pop
add
bound
add
movsl
or
jb
sbbl
mov
dec
subl
aad
stos
divl
and
push
add
mov
and
jno
jmp
jns
call
sub
int3
adc
mov
les
jo
add
je
mov
std
lret
mov
pop
or
sbb
fs
cmpsb
dec
lret
loope
adc
js
nop
or
fiadds
pop
push
and
adc
out
insb
sti
ds
pop
pop
push
dec
lods
stc
adc
rorb
push
ret
fs
es
dec
fnstenv
fisubrl
daa
jp
inc
pop
int3
not
cmp
ffreep
lahf
in
push
ljmp
push
pop
in
stos
fucomp
loopne
jge
lods
mov
xchg
sbb
into
movsl
xchg
pop
dec
dec
in
sub
ss
pop
sti
mov
sbb
js
sbb
out
cmpl
in
test
ret
divb
ljmp
add
xor
and
fmuls
add
repz
xchg
test
adc
mov
fcompl
dec
jl
loop
jp
inc
mov
cmpsl
les
push
inc
orb
adc
pop
jns
and
pop
outsb
push
shr
in
fstps
pop
inc
adc
mov
cltd
mov
jns
lods
mov
inc
icebp
pop
dec
imul
mov
adc
add
repz
mov
fnop
int3
insl
scas
cmp
mov
mov
fdiv
inc
pop
rclb
push
dec
pop
push
push
mov
testl
popf
jb
xchg
dec
or
cmpb
mov
jle
rolb
cmpsb
inc
push
daa
scas
stc
outsb
cmpsl
shlb
lods
push
lret
jo
pushf
out
and
hlt
jae
fs
pop
arpl
daa
pop
mov
inc
or
test
xor
out
cmp
lea
push
dec
push
jmp
sbb
adcl
push
lcall
jbe
xchg
jno
icebp
ja
out
imul
mov
sbb
gs
lods
std
cs
cmp
pop
pop
ret
out
mov
in
xchg
loop
lret
inc
push
jns
add
xor
adc
adc
sarl
push
push
loop
scas
hlt
popa
push
int
lcall
lahf
call
in
push
dec
les
jne
dec
loopne
shll
je
insl
or
adc
jecxz
add
pushf
fimuls
test
out
outsb
pop
add
push
fstp
sub
xchg
lods
dec
adc
add
scas
jp
mov
daa
cmpsb
in
cmp
lret
sbb
xor
fstl
test
jno
or
sub
cmp
iret
push
loope
bound
lods
xor
mov
ljmp
ror
scas
dec
cs
pop
mov
push
inc
xor
pop
sbb
lock
out
mov
roll
mov
push
mov
jo
jp
pop
sbb
dec
test
mov
mov
push
xchg
and
in
adcl
ret
jmp
adc
fnsave
jg
lods
jo
adc
hlt
out
cli
mov
xchg
popa
shlb
rcll
sbb
cli
xlat
adc
cld
add
aaa
xchg
jns
or
mov
dec
jb
adc
sbb
push
cltd
or
mov
cmpsb
and
sub
xor
push
fadds
jge
cmp
fs
inc
inc
inc
aas
xor
insl
or
out
in
push
fisttpll
pop
ja
lock
inc
int
sub
orl
mov
shlb
push
pushf
mov
jno
in
adc
push
cltd
cmp
xor
daa
push
nop
jo
cmpsl
movsb
repz
push
xchg
lds
pushf
test
jp
js
xchg
xor
dec
pop
lds
aaa
and
cltd
push
mov
pushf
jl
pop
cld
pop
out
sbb
fisubrs
adc
push
and
cmp
adc
lods
or
rcll
mov
mov
stc
mov
push
and
sub
cmp
mov
cld
lret
rcr
addr16
jo
loopne
push
test
clc
cmp
pop
fwait
stos
testb
push
lea
aad
lret
leave
std
fcomip
inc
jge
pushf
test
stos
xchg
ss
push
out
loop
stos
jb
and
push
pop
movsl
cmpb
pop
mov
leave
cmp
rcrb
mov
movsb
mov
ljmp
loopne
int3
jle
mov
js
pusha
imul
iret
test
cmova
mov
stos
sub
mov
lods
adc
xchg
cmp
add
mov
gs
mov
mov
push
cli
fisubl
insl
cmpsl
fisubl
and
and
inc
dec
push
jbe
roll
xchg
dec
dec
fldenv
or
popa
mov
addr16
dec
cmp
jmp
and
mov
push
shl
and
sub
jnp
and
lods
or
gs
dec
add
std
repnz
fdivs
cli
aad
xchg
stc
movsb
subl
push
inc
mov
test
sarl
int
xor
push
dec
pop
shlb
xchg
fwait
and
cmp
adc
mov
loopne
in
loop
repz
xchg
jo
hlt
fildl
jmp
in
mov
lods
imul
cld
mov
and
jmp
mov
cmp
mov
les
mov
mov
sti
dec
sub
ret
adc
cld
cmpsl
mov
in
pop
mov
js
std
incl
mov
loop
ret
in
push
pushl
push
jbe
sub
pop
fbld
jnp
lods
enter
fcoms
aam
out
add
sbb
lcall
cmc
cmpsl
lds
in
cs
int
rcrl
stos
test
xchg
mov
mov
in
rorb
sub
push
jbe
enter
mov
out
addr16
lret
fs
out
sahf
cmpsb
dec
aaa
inc
sbb
testb
test
pop
in
cmp
mov
lret
sub
cmpsb
pop
mov
push
push
xor
aad
imul
push
aam
test
push
pop
xchg
push
and
dec
shlb
xchg
cmp
test
pop
insb
aam
mov
sub
cmpsl
pusha
mov
mov
imul
fdiv
dec
dec
loopne
femms
xchg
add
imul
orb
lahf
mov
out
jo
push
cli
out
pop
ljmp
mov
cmp
mov
xchg
mov
or
mov
inc
xorl
adc
fs
add
mov
xchg
push
adc
daa
push
cmp
jp
and
ret
lods
fcoms
jp
inc
out
xchg
mov
jg
mov
push
sbb
aaa
aaa
movd
daa
mov
std
or
movsl
out
addr16
jg
aad
fcmovnbe
mov
iret
mov
dec
dec
sbb
xchg
jle
add
or
inc
mov
mov
dec
shrb
pusha
rcrb
out
sbb
cmp
push
cmp
cli
inc
lock
sub
push
sbb
adc
pop
mov
les
pop
jo
fadds
cmpsl
pop
lcall
sub
stc
pop
aas
lods
jmp
adc
sbb
jno
js
ljmp
lret
mov
xchg
push
jmp
daa
xor
sbb
mov
hlt
lret
cmp
sub
outsb
cmp
popf
scas
test
cmp
cmpsl
sub
xor
mov
or
cltd
leave
fnsave
ss
sar
jno
or
adc
mov
and
xchg
sarl
test
mov
std
in
xchg
push
into
push
and
dec
or
sub
mov
js
test
or
adcb
fs
insl
aam
push
aad
sahf
dec
lock
pop
add
and
addb
jp
lods
jge
push
sbb
das
call
mov
cmc
push
sbb
in
push
aas
lock
fistps
leave
into
xchg
jnp
jno
cmova
fldenv
stos
jge
sbb
pop
push
enter
xchg
cli
rclb
push
push
jbe
mov
cld
mov
pop
cli
fs
mov
das
pop
ljmp
roll
or
and
ficoms
int3
ret
xor
or
out
in
jle
jnp
ret
mov
aad
popa
pop
repz
push
xchg
lea
mov
adc
xchg
sub
sub
pusha
in
jle
mov
pop
aam
and
pop
jb
mov
das
push
and
jmp
in
aaa
mov
mov
imul
cwtl
adc
push
dec
jb
shrl
aad
add
sbb
mov
movsl
pop
xor
cwtl
mov
xchg
pop
jmp
mov
addr16
ret
bound
test
scas
stos
sbb
inc
out
or
pop
xor
rcr
shll
subb
test
jle
or
imull
test
inc
leave
jl
push
jle
pop
add
mov
add
aad
push
jmp
pop
pop
inc
test
mov
addb
scas
dec
popl
dec
rcr
testb
add
adc
movb
bound
test
mov
xchg
or
inc
loope
shl
push
push
bound
xorb
sub
idivl
aaa
xchg
dec
cmp
cmp
sbb
or
shrl
lods
int3
sub
adc
jecxz
mov
lds
push
arpl
sbb
jbe
popa
and
out
xor
adc
push
pop
xor
dec
add
add
pop
mov
stos
loop
jg
out
and
clc
idivl
gs
rol
cwtl
jo
inc
rcr
imul
ljmp
sub
dec
call
movsl
and
test
aam
imul
fsubl
jo
pop
jecxz
mov
sbb
mov
hlt
add
gs
sti
out
imul
decb
mov
dec
push
mov
movsb
lret
or
jno
and
test
out
cmp
adc
shl
leave
pop
pop
dec
inc
test
jle
fcompl
push
mov
and
test
dec
mov
in
xchg
jnp
mov
dec
xor
add
mov
aas
test
jg
adc
fsub
divb
aad
mov
imul
push
or
outsl
in
jae
adc
pop
adc
cmp
mov
push
lret
jp
nop
outsl
aam
pop
sbb
lea
and
repnz
or
les
ret
icebp
hlt
mov
lahf
mov
jmp
sbb
insb
daa
pop
mov
iret
jno
xor
leave
call
lods
jno
pusha
dec
leave
ss
imul
dec
sub
xchg
popa
mov
fs
clc
xchg
jns
sub
test
and
inc
and
push
clc
and
inc
in
imul
pop
inc
adc
xor
outsl
das
lods
push
fcmove
add
inc
cmp
shlb
cs
xchg
js
cmp
xchg
cmp
test
xchg
dec
mov
lock
dec
adc
mov
mov
add
xlat
sbb
cmp
fmull
rolb
ljmp
dec
fldl
idivb
fidivs
mov
and
jmp
leave
mov
or
jae
call
and
sbb
cmp
cli
icebp
or
jns
adc
sbb
ja
sub
iret
dec
dec
aas
inc
jl
pop
inc
mov
repnz
cmpsb
nop
jecxz
push
shrb
sbb
xchg
cmp
addr16
call
xor
mov
cltd
in
int
lea
insl
sahf
aas
icebp
fistl
inc
scas
cmp
sarl
iret
sbb
ds
push
ss
xchg
jo
loopne
loope
mov
inc
add
bound
sbbl
icebp
lret
inc
js
fldenv
sahf
push
divl
out
mov
sbb
repz
sahf
cltd
bound
adc
out
xchg
push
iret
das
jno
popa
fwait
push
or
xchg
scas
push
xchg
test
rcrl
xchg
lret
jecxz
out
xor
adc
jl
pop
lcall
out
dec
in
insl
xchg
dec
int
repz
jne
imul
sub
adc
scas
inc
adc
cli
push
je
mov
loop
sbbb
in
xor
dec
xchg
cli
icebp
inc
test
sbb
cmp
and
sahf
lret
je
loop
scas
outsl
ret
adc
jle
lods
mov
pop
out
and
and
xchg
jo
push
mov
loop
stos
in
push
movsl
add
mov
push
sarb
xchg
mov
shlb
outsb
mov
dec
hlt
sub
int
mov
mov
out
lahf
sub
rorb
shrb
and
repnz
sbb
jmp
fwait
xchg
cltd
cmp
or
mov
loopne
inc
inc
xor
enter
fisubrs
aaa
in
mov
mov
ja
add
push
enter
push
pop
int3
mov
test
es
sub
jns
fidivs
ljmp
popl
cmp
ss
sbb
outsb
ficomps
in
int
jo
in
test
stos
mov
testb
popf
jo
sbb
test
addl
ljmp
pop
mov
cmp
arpl
std
call
cmpb
insl
xlat
rcr
cli
xchg
add
and
js
pop
outsb
jge
add
outsl
jmp
mov
shrl
ret
push
jae
cmp
enter
adc
test
or
test
movsl
xchg
mov
popf
outsl
or
inc
and
jl
mov
sbb
add
loope
mov
inc
fchs
ja
push
loope
push
cmp
dec
imul
mov
roll
mov
andl
stc
outsb
mov
ret
in
or
sub
xchg
and
out
negl
pop
sub
shll
xor
loope
jmp
shrb
clc
dec
push
jge
test
stc
stos
jge
test
popa
pop
pop
xchg
aam
or
add
in
push
jne
mov
dec
mov
xlat
repnz
mov
pop
in
ficoms
sahf
gs
nop
and
and
pop
ret
lea
cmp
stc
push
cmc
mov
mov
and
cmp
lret
xor
adc
xor
or
in
repnz
jmp
and
movsb
adc
and
xor
mov
rorb
lahf
or
lods
pop
aaa
cltd
scas
lret
and
jbe
inc
jns
cmpsl
fistl
pop
cmc
adc
pcmpgtd
mul
cmpsl
data16
xchg
xor
dec
gs
das
add
sbb
faddl
lret
or
test
push
hlt
data16
cmp
lods
popl
mov
pop
add
pop
xor
jbe,pt
inc
or
or
mov
and
js
mov
cwtl
imul
test
fprem
add
jmp
aas
jle
xorb
std
loope
test
adc
test
cmp
jl
dec
pop
cld
push
mov
and
sahf
inc
idivb
mov
lret
push
out
loop
mov
mov
loop
cmpsl
shrl
movd
nop
out
or
hlt
inc
cmp
push
subl
lahf
pop
ja
imull
sbb
mov
lods
pushf
mov
xor
pop
std
mov
repz
push
xor
fcmove
add
fsubs
js
push
mov
jle
hlt
mov
shlb
pop
cmp
imul
sbb
das
mov
mov
fidivs
enter
ja
mov
add
rclb
add
xchg
nop
ret
sub
jecxz
jb
je
int3
cltd
inc
xor
mov
hlt
das
outsl
and
gs
std
adc
adcl
popa
arpl
xor
iret
neg
pop
pop
or
fisttpl
push
xchg
or
cmp
roll
test
jne
mov
sbb
call
mov
shrl
push
jmp
loope
dec
jnp,pn
gs
es
dec
mov
je
dec
xchg
xchg
testb
incl
loop
push
mov
ds
stos
jnp
mov
js
mov
fidivrl
mov
pop
cmp
sbb
or
and
movsl
push
sub
xor
pushf
cmp
pop
mov
in
cs
insb
jge
add
popf
adc
popa
cmp
jns
jge
xchg
xor
add
nop
sub
cmp
rcr
sbb
xchg
mov
pop
pushf
xlat
jbe
shr
dec
dec
dec
sub
jp
js
lods
daa
int
jmp
add
sti
push
jbe
mov
sarb
dec
in
cmp
sbb
scas
xorl
xorb
push
les
adc
sarb
jno
stos
loop
mov
ss
push
mov
mov
jbe
jle
cli
mov
cltd
xchg
xchg
inc
cld
fcomps
stc
out
test
mov
shll
fisttpl
xchg
xor
lahf
and
ret
xor
sub
pop
mov
mov
filds
stos
negb
dec
inc
push
xor
jno
mov
inc
imul
fwait
jo
in
ja
mov
pusha
aad
test
mov
and
lods
jecxz
fidivl
loope
xor
imul
pusha
xchg
icebp
xor
gs
addr16
mov
sub
push
pop
fs
or
loop
xchg
cmp
insb
lcall
inc
or
jecxz
and
pop
and
xor
adc
dec
pusha
jg
xchg
jg
out
popf
jle
sub
sbb
mov
mov
shlb
frstor
and
dec
or
xchg
mov
xor
pop
or
sahf
rcrl
clc
fisubrl
push
shl
pusha
mov
mov
pop
mov
mov
add
push
imul
lods
enter
sub
xor
push
push
sahf
mov
jb
inc
mov
or
loopne
daa
fstpl
mov
push
ret
push
cmp
push
xchg
lods
xchg
mov
push
cmp
inc
aaa
aad
cmp
sub
or
cmp
lcall
in
shll
mov
pushf
es
icebp
pop
push
repnz
xchg
cs
push
adc
xor
jecxz
lock
mov
dec
cmp
xor
mov
add
fsubrl
stc
imul
and
xor
pop
lock
repz
mov
fdivrs
rcll
sbb
gs
ret
xor
loope
or
std
lret
sub
jnp
mov
xor
out
pop
jp
pop
js
fcos
push
fdivrl
xorl
inc
imul
xlat
jmp
jg
frstor
lahf
mov
fsubrl
adc
xor
int
addr16
pop
aam
in
aas
and
push
pusha
mov
and
xchg
pusha
and
insb
dec
dec
adc
and
je
and
sub
aas
or
pushf
inc
shlb
in
outsb
flds
mov
jno
xor
outsb
enter
dec
lea
pop
jg
lods
gs
jecxz
std
ljmp
inc
out
jmp
xchg
stos
sub
in
pop
adc
clc
pop
inc
xchg
rcrb
popf
xchg
dec
lcall
rcrb
or
pop
loopne
sarl
cmpsb
or
stos
mov
adc
mov
mov
lret
or
and
lahf
outsl
jno
dec
incb
and
inc
mov
xchg
pushf
pop
fcom
pop
or
xchg
arpl
test
jl
mov
mov
dec
and
adc
gs
lods
xchg
pop
sub
push
es
imul
cmp
xchg
leave
or
cmpsl
adc
aam
and
jnp
stos
imul
and
dec
mov
addr16
adc
jno
cmp
mov
mov
mov
sti
inc
push
mov
lods
shll
xchg
mov
addr16
push
push
jne
test
in
call
jns
mov
dec
in
daa
aam
test
mov
lret
mov
insl
cmpsb
mov
in
mov
xchg
cltd
or
mov
ret
xchg
jnp
push
fs
or
jns
mov
minps
aas
ss
push
jecxz
push
rcll
nop
in
in
mov
cmc
dec
lods
mov
out
je
sti
dec
leave
insb
inc
xor
lret
cltd
fisttps
imul
cld
push
pusha
scas
xor
cs
shl
mov
lahf
imul
or
int
xlat
xchg
mov
jl
jo
repz
sub
mov
ljmp
dec
jae
inc
sub
test
mull
cwtl
or
jo
and
shl
xchg
jle
bound
lret
fisttpl
pusha
fwait
inc
dec
stc
add
dec
cli
ret
push
cld
loop
in
cmp
cmp
sbb
andb
xchg
cmpsl
lock
stc
inc
stos
movsb
rolb
subb
imul
jmp
xor
xchg
loopne
adc
shrl
xor
out
or
ja
jg
adc
fisttps
mov
aas
cmp
loopne
jge
push
dec
push
dec
aaa
lcall
fwait
fs
sbb
mov
xor
pop
sahf
fwait
ljmp
into
adc
shrb
lds
jo
mov
xor
inc
mov
idivl
ret
pop
and
push
sub
inc
or
xchg
push
cmpsl
cltd
in
jb
into
cwtl
hlt
jge
xor
test
xchg
xchg
pop
add
xor
faddl
icebp
stc
es
movsl
adc
dec
cwtl
loopw
push
je
ror
xchg
divl
inc
mov
fs
sbb
cld
clc
jae
mov
scas
lcall
int3
sub
xchg
sahf
lcall
xchg
pop
cmp
arpl
push
sbb
repz
fwait
jae
xor
insl
or
or
mull
xchg
pop
pop
jp
sub
pop
jp
push
out
outsb
push
gs
dec
fnstenv
shlb
imul
lods
mov
movsl
xlat
mov
movsb
or
enter
movsb
sbb
xchg
push
sub
out
cmp
cmp
or
call
notl
psrad
pop
dec
xor
rcrb
adc
xchg
mov
in
cmp
push
aad
gs
fs
xor
xor
mov
sarb
rolb
xchg
pop
jl
fdiv
mov
push
nop
push
in
pop
fisubrl
pop
hlt
mov
cmpb
pop
push
data16
pop
out
pop
sub
idivb
add
dec
mov
lods
mov
adc
jne
adc
sti
gs
lahf
jle
push
cli
repz
outsl
iret
mov
add
push
xchg
mov
dec
int3
xor
xchg
mov
cwtl
jecxz
into
cmp
aam
mov
je
aam
jp
sar
jg
pusha
jmp
or
mov
iret
jp
into
nop
ret
test
sub
pop
clc
and
cmp
add
cmpsl
loope
jne
mov
ret
into
sbb
imul
add
fadd
or
mov
sub
not
cmpsl
mov
jge
jne
jecxz
jmp
lret
add
fisubl
sbb
movsb
lcall
pop
jo
mov
xor
inc
cmp
inc
adc
iret
rorb
dec
mov
mov
and
das
push
jne
pop
jecxz
mov
movsb
movsl
add
mov
lods
icebp
xchg
or
dec
out
sub
and
pop
push
jl
je,pn
sbb
loop
cmc
xlat
jg
aam
data16
cmp
aad
sub
or
ret
push
mov
dec
push
in
adc
or
lods
jnp
faddl
mov
push
push
in
jge
popa
rorl
push
sbb
stos
push
xor
jmp
stos
mov
lock
testb
jae
jns
cmpsl
inc
mov
or
and
aas
inc
cmp
xor
das
pop
mov
cmp
fcmovnu
mov
pcmpgtw
loopne
inc
aaa
mov
fs
ds
jo
jle
xchg
pop
push
mov
adc
pop
adc
insb
sbb
into
mov
icebp
push
ret
pop
adc
loopne
sub
insl
add
aaa
xor
ja
stos
aaa
sbb
xchg
inc
jge
push
clc
cmpsb
cltd
mov
dec
adc
inc
cmp
or
fiaddl
mov
insl
mov
mov
test
test
cmp
push
xchg
stc
xchg
mov
sub
mov
std
sub
rcrb
negl
adc
dec
dec
repnz
jle
xor
mov
loopne
mov
sbb
mov
test
aad
subl
scas
pop
out
fsubr
jecxz
cli
loopne,pn
add
out
leave
adc
aas
xor
push
pop
movb
xor
data16
xchg
lods
add
stos
mov
rolb
sub
stc
add
xor
mov
jmp
fdivr
addr16
outsl
sbb
xchg
int
adc
loopne
mov
repz
xor
iret
ja
out
xchg
add
adc
in
lret
xchg
inc
leave
cmp
out
and
pop
fld1
iret
and
xor
fiaddl
mov
in
scas
jne
fisttps
mov
dec
fists
sbb
repnz
ss
jp
and
aam
jp
push
xchg
aad
mov
std
into
jl
clc
int3
push
bnd
lds
jbe
pop
std
inc
leave
fimuls
add
sbb
adc
sbbb
sub
xor
dec
push
push
scas
mov
mov
mov
subl
cmp
sbb
and
sub
mov
xchg
popa
lods
sahf
mulb
dec
dec
mov
cld
ljmp
dec
nop
cmp
call
jae
in
xchg
sub
sbbl
and
jecxz
xchg
psrad
push
loop
sbb
mov
sarb
xor
jecxz
pop
stos
imul
cwtl
pop
scas
pop
out
or
repz
loop
sub
test
mov
popa
push
dec
pusha
inc
mov
sub
xor
inc
fcos
dec
jae
pusha
ds
ja
pop
mov
mov
inc
lds
jno
cmp
cmp
add
push
outsl
filds
or
xchg
ret
data16
xor
orb
dec
ret
pop
mov
cmp
cwtl
sbb
or
ret
call
pop
sahf
cmp
fisttpll
outsb
pop
test
das
js
or
sub
cmp
sbb
lea
fidivrs
xchg
lret
insb
xor
rorb
cmp
mov
mov
sbb
mov
repz
outsb
loop
sbb
cmp
fwait
es
sarl
or
dec
test
sub
and
lret
push
rcr
cmp
and
jne
aaa
test
cmp
mov
sub
mov
sahf
divl
sbb
je
adc
loopne
adc
scas
jp
sbb
xor
mov
cmpsb
dec
outsl
push
xchg
orb
loopne
daa
sti
pop
ds
mov
sub
out
aas
and
dec
lods
fists
movb
mov
jle
ljmp
cmp
mov
push
xor
scas
movl
and
adc
and
add
mov
push
in
mov
clc
hlt
fsubrl
pop
aaa
stos
pop
inc
shrl
jae
rol
adc
out
pushf
push
inc
sub
adcl
test
jno
fildl
mov
int3
xchg
or
arpl
ret
push
push
jl
rcr
mov
sub
mov
mov
lcall
cmp
test
xor
dec
push
jo
repnz
mov
dec
pop
testl
out
add
mov
xor
ret
push
cmp
mov
and
addb
in
outsl
pushf
xorl
jo
and
stc
push
out
cli
movsb
pop
pop
jne
sahf
mov
loop
ds
mov
fnsave
aam
sub
repnz
jl
pop
lahf
mov
js
push
imul
shlb
adc
insl
das
cmp
and
jnp
xchg
dec
mov
cmp
jl
cli
mov
add
sahf
clc
pushf
or
aam
cmp
ss
outsl
ja
imul
sar
fnstenv
fwait
addb
fcompl
call
arpl
push
std
sub
inc
or
mov
mov
xchg
out
shlb
pop
cmp
mov
mov
add
or
dec
nop
and
xchg
xchg
dec
xlat
cmc
jno
xchg
popa
test
pop
sti
dec
pop
jne
pop
jae
or
inc
stc
adc
inc
xchg
sub
ret
scas
jbe
scas
ret
pop
test
cmp
sub
mov
xor
ss
fiaddl
add
and
aaa
sbb
or
fstl
ret
xchg
mov
out
aad
call
xchg
jne
test
jg
inc
fbstp
mov
jl
cmp
jae
loopne
test
xchg
test
pop
mov
add
adc
fldt
push
inc
jno
dec
rcrl
sbbb
pop
mov
sti
pop
cmp
sbb
inc
inc
jae
dec
jne
and
jle
cmp
adc
sub
aas
test
cmp
pop
enter
jae
sub
jecxz
jb,pn
jmp
loop
xor
mov
into
in
orb
ss
popf
mov
push
jp
idiv
cli
sub
into
push
loop
cmpsb
fstpt
lahf
int
nop
xchg
loope
mov
xchg
sub
iret
std
pop
dec
xchg
jl
scas
loopne
jb
pop
fisttpll
sub
xchg
push
xlat
pop
mov
das
xchg
cltd
xchg
pop
dec
mov
or
rolb
cmp
daa
call
mov
ret
cwtl
shl
or
cmp
out
out
jnp
push
mov
es
inc
pop
dec
jo
adc
in
pushf
incl
cmpsb
push
rol
popf
sahf
inc
pop
dec
sub
adcb
movsl
mov
cli
sbb
xchg
push
ret
arpl
mov
adc
outsb
pop
pop
int
js
mov
pop
mov
push
test
ret
mov
inc
loopne
faddl
pushf
cli
mov
push
adcb
xor
and
cltd
repz
sbb
mov
repnz
jne
test
sub
in
daa
pushf
inc
icebp
testb
xor
stc
push
inc
icebp
add
xor
dec
jp
fucomp
shll
and
pop
sbb
stos
in
mov
dec
cltd
push
add
out
insb
test
mov
loopne
cwtl
cltd
cmc
pop
loope
lods
pop
int
loop
dec
outsl
ret
or
imul
push
xor
fs
jae
inc
pusha
mov
les
add
aaa
xlat
jge
shrb
or
in
ss
mov
or
leave
push
imul
cmp
loopne
fwait
adc
in
pop
mov
insb
xchg
fwait
leave
adc
out
aam
and
sbb
and
adc
cli
dec
cmp
inc
ficompl
mov
repnz
adcl
pop
out
mov
aas
fs
mov
push
enter
and
sti
mov
loope
aaa
jae
leave
push
cmpsb
test
dec
push
xlat
aad
adc
lods
adc
inc
cmpsb
mov
and
ret
pop
fwait
jmp
inc
pushf
pop
push
push
rorl
adc
lahf
lea
mov
int3
jae
fcoms
test
xlat
fs
outsl
pop
fwait
push
mov
adc
repz
xchg
test
ret
cmp
xchg
ret
mov
xor
dec
mov
cmpsb
push
scas
stos
mov
inc
loop
pop
bound
pushl
push
cwtl
mov
stc
movsl
aad
mov
clc
mov
insl
outsl
cmp
xchg
rcr
mov
scas
lods
sub
jp
pop
fs
mov
xchg
pop
aas
xchg
stos
xor
popf
fisttps
jl
je
push
jns
test
inc
ret
faddl
push
dec
sbb
cs
mov
lahf
and
js
insl
xor
push
orb
mov
arpl
jmp
jge
or
int3
out
inc
xlat
loope
cld
jl
jl
shll
data16
sub
mov
pop
enter
ds
cmp
aaa
lret
in
clc
sbb
in
push
cmc
outsl
push
xor
aaa
sbb
test
cmp
dec
sahf
xchg
repnz
lods
ja
push
jp,pt
stos
mov
out
lds
jl
popf
dec
dec
xchg
adc
xor
rcrl
xchg
or
xor
aam
xlat
sbb
mov
push
or
sub
dec
pop
cmp
push
in
jbe
or
push
mov
sub
loopne
clc
mov
aad
int3
mov
ds
mov
adc
fs
out
mov
jb
adc
mov
mov
shll
push
and
ret
adc
test
sbb
mov
pop
mov
cmpsb
or
lods
rcrb
pop
in
loop
push
mov
gs
mov
cli
es
stos
cld
je
jns
popa
pop
mov
scas
jne
pop
sbb
mov
inc
mov
xadd
mov
sarb
mov
jo
sub
outsb
and
test
je
lods
sti
cltd
dec
jecxz
mov
insl
lds
nop
lds
jp
inc
out
adc
outsb
sub
push
push
popa
fadd
dec
pop
out
inc
movsl
aam
sub
adc
mov
pop
push
mov
xchg
pop
fs
mov
jecxz
scas
adc
dec
cmp
std
pop
pop
sbb
iret
mov
fwait
mov
cmc
inc
out
cmpsb
dec
pop
daa
outsb
and
sub
lret
jecxz
mov
stc
jmp
mov
dec
out
add
xor
lods
mov
xchg
in
out
aas
cmp
cs
outsl
jp
nop
push
out
sub
stos
nop
cmp
stos
cmp
leave
jb
push
sbb
pop
js
jp
shll
xor
xor
pop
loopne
fcoms
push
jo
notb
lock
fcmovnu
push
push
out
xor
mov
dec
daa
in
aas
out
mov
shlb
aam
psubd
push
or
rcl
mov
cmpsl
cmc
mov
shlb
ret
inc
test
mov
jo
je
xor
lret
int3
out
cli
dec
push
xchg
shlb
xchg
icebp
and
repz
jmp
mov
repz
xchg
shr
jns
xor
dec
mov
push
cltd
inc
sahf
pop
leave
lret
fdivrp
in
stos
mov
jmp
sub
lret
add
xlat
sub
es
jo
mov
sub
sar
mov
into
in
and
in
sbb
adc
add
aas
and
out
fsubrs
pop
pop
adc
adc
jg
inc
lock
push
pop
dec
je
cmpl
stc
out
add
les
sbb
dec
lods
cmp
add
mov
xchg
pusha
test
fcmove
je
stc
popf
imul
repnz
je
ds
xchg
imul
pop
or
or
cwtl
clc
ds
aaa
jae
shrb
add
in
in
rcrl
add
dec
pop
dec
lcall
adc
loop
outsl
inc
int3
push
sbb
xor
test
cmp
mov
inc
enter
inc
je
xchg
push
mov
jle
dec
jl
fimuls
sbbb
sti
sbb
mov
pop
push
adc
mov
aas
pop
enter
lahf
adc
push
xor
pusha
iret
icebp
icebp
inc
fnstcw
lahf
xchg
or
es
push
mull
fiaddl
mov
adc
hlt
fwait
pop
fnstcw
sti
ror
aam
mov
cmp
pop
cmp
imul
mov
pop
xchg
xor
aas
sub
jns
imul
lret
outsb
shrb
push
mov
jnp
pop
lret
jecxz
in
std
push
or
jp
cmpl
inc
lcall
ss
adc
jno
movsb
mov
sarb
lahf
xor
mov
pop
sbb
pop
lahf
les
mov
ja
xchg
mov
ret
sub
xchg
mov
jecxz
mov
shrl
shrl
aaa
iret
aam
push
popf
sub
fisttps
popf
fwait
lods
mov
jb
aad
andb
ljmp
fisttpll
push
fs
pop
xor
dec
maxps
in
mov
jl
add
dec
movsl
dec
push
pushf
pushf
mov
pushf
mov
push
hlt
ret
dec
leave
out
sar
fstps
pop
xor
add
push
gs
adc
inc
enter
jns
adc
aaa
adc
push
xchg
shld
icebp
jle
aas
pushf
andb
xor
pop
push
lret
cwtl
cmp
insb
addr16
pop
cmc
and
das
jnp
inc
xchg
mov
insb
std
cmp
mov
nop
push
mov
pushf
jg
iret
hlt
lods
xchg
loope
mov
jecxz
movsb
test
std
cwtl
pop
cmp
popf
xchg
cs
xchg
pop
push
popf
imul
jle
imull
xchg
pop
ja
adc
jns
loope
mov
pop
cmp
ss
jnp
fnstenv
pushf
in
rclb
movsb
dec
imul
cmp
mov
sarl
int3
xchg
lcall
adc
push
xchg
into
loope
adc
and
push
int
scas
mov
and
xchg
jp
xor
xorb
lds
and
pop
cmpsb
subb
lcall
les
jg
pop
cld
cwtl
cmp
jp
xlat
clc
xor
lret
pop
xchg
jbe
pop
push
fisttpll
int3
sub
adc
out
jge
fwait
loop
dec
or
add
setbe
mov
mov
out
pop
pop
pushf
repnz
cmpb
loop
out
outsl
jns
adc
repz
frstor
loopne
enter
out
loope
stc
stos
pushl
sahf
pop
mov
sub
outsl
xchg
mov
roll
xchg
fidivrs
jg
cmpsb
aam
aam
cld
add
inc
jae
shlb
mov
mov
stc
iret
mov
aaa
mov
arpl
push
icebp
jbe
test
sbb
hlt
adc
cmp
fists
inc
testl
mov
jbe,pt
lock
es
adc
cli
sbb
pop
mov
sbb
jp
jae
into
xor
leave
shl
jecxz
sbb
add
rep
jno
dec
lods
in
insb
aad
mov
xchg
inc
mov
jae
leave
dec
and
mov
enter
ret
jbe
xlat
nop/reserved
int
popf
or
cld
inc
ret
sub
pushf
and
je
xor
mov
add
jg
shlb
cmpsl
call
fistpll
cmpsb
add
lcall
and
iret
and
rcl
sub
hlt
movb
in
mov
sub
pop
pop
lret
shll
mov
imul
aaa
imul
and
je
lods
dec
stos
sahf
into
push
mov
lea
call
into
movsb
and
stos
fcompl
mov
add
sbb
std
add
stos
mov
cld
scas
dec
ja
int3
pop
scas
loopne
rclb
scas
sarl
and
push
mov
cmpsl
rclb
lods
mov
addb
or
lret
and
hlt
aas
push
dec
push
xor
ret
cld
cs
cmp
and
stos
or
mov
sbb
jbe
out
outsl
cli
fucomi
stos
lret
mov
push
data16
xor
jo
loopne
xor
xor
push
mov
popf
and
ljmp
out
inc
es
adc
jbe
and
or
push
out
push
ret
sahf
push
sahf
data16
pushl
stc
inc
and
pop
mov
gs
inc
push
dec
push
sub
mov
jo
arpl
pop
lds
dec
test
xchg
jbe
jp
sub
xchg
test
loope
lcall
push
xor
fwait
jnp
pop
add
xorb
xlat
lock
adc
mov
daa
adc
inc
inc
les
outsl
mov
nop
jb
hlt
test
addr16
dec
scas
mov
adc
ja
gs
mov
jo
pop
lods
add
xor
jle
aam
dec
leave
mov
mov
mov
dec
aaa
lret
lock
xlat
mov
pop
mov
cltd
inc
push
jne
insl
sub
lds
dec
and
push
jno
push
cs
push
filds
inc
cwtl
outsl
fldenv
cmp
xor
mov
lds
stc
out
sbb
cmp
xchg
ss
mov
cmp
adc
fisubrs
mov
cmp
pop
jb
sub
lahf
test
push
jae
dec
pop
mov
rcrb
inc
mov
inc
in
test
rcrb
sub
sbb
lret
push
pop
jle
shll
shlb
out
mov
xor
fsts
xorl
dec
pop
test
xchg
pop
push
frstor
sahf
mov
fdivp
fsubrl
aaa
popa
cmp
pushf
and
cs
add
mov
push
mov
aaa
shll
adc
push
aad
jns
mov
cltd
or
sbb
sub
les
in
xchg
lods
or
xchg
sbb
mov
fisubrs
sub
mov
fdivrs
add
jo
mov
pop
xor
cmp
or
outsb
and
sti
push
cmp
subb
pop
inc
pop
pop
popf
cmp
lret
sbb
daa
ret
inc
pop
out
mov
sbb
add
mov
and
mov
jg
adc
int
test
push
sbb
loope
out
mov
pop
xchg
inc
dec
dec
call
cmc
pop
sbb
dec
ja
inc
mov
xchg
negb
into
pop
inc
mov
adcl
wrmsr
jne
movsb
push
adc
jne
lahf
test
ret
xor
pop
fstps
xchg
sub
push
fadds
sbb
pushf
push
pop
push
fisttpl
add
sub
mov
fldt
xchg
scas
mov
and
adc
cmp
dec
push
and
inc
fucomi
xor
mov
lret
add
fcompl
in
sbb
shrl
add
push
pop
nop
imul
cli
dec
cmpsl
xchg
and
dec
cltd
int3
inc
mov
inc
popf
push
int
fcompl
xchg
bound
ret
mov
shlb
lcall
sbb
arpl
leave
addl
mov
cmp
into
cwtl
loopne
notb
lcall
adc
mov
jg
or
dec
cmp
mov
pop
test
aas
cli
xchg
outsl
hlt
ja
sahf
rcrb
mov
nop
sbb
data16
mov
push
outsb
jle
das
or
int3
jge
mov
aam
mov
sbb
out
bound
pop
dec
xchg
int3
cwtl
aad
repz
hlt
scas
mov
out
xor
and
sub
clc
sbb
stos
and
lea
sahf
lret
dec
add
xor
out
mov
gs
ss
popf
cmp
test
mov
pop
into
imul
mov
enter
and
sbbb
push
jnp
sbb
mov
xchg
popf
sti
test
jmp
pop
scas
fs
fnstenv
pop
cmpsl
popf
fs
mov
mov
adc
cmpsb
mov
mov
ret
pushf
lret
ds
push
gs
sub
pop
add
sbb
fmulp
aam
ss
repz
cmp
testb
bound
pop
lds
call
jne
mov
mov
jbe
sub
jno
outsl
xor
fisttpl
push
dec
sub
xor
mov
hlt
jecxz
aad
sub
insl
movsb
into
jecxz
andb
add
xchg
call
push
pop
pusha
into
mov
mov
popa
sbb
sahf
cmp
shlb
leave
sub
or
cmc
pusha
jecxz
and
adc
jns
jg
mov
jno
mov
mov
sub
mov
js
lcall
insl
or
int3
ret
mov
outsb
push
mov
xchg
loopne
jne
aam
pop
popa
pop
push
mov
pop
xor
xchg
mov
mov
mov
mov
or
sub
repz
pushf
ja
push
in
outsl
jge
int
dec
ret
imul
or
push
and
adc
mov
xchg
xor
xor
das
inc
sahf
inc
xor
cld
pop
les
sbb
idivb
lret
add
mov
mov
inc
push
leave
cli
mov
pop
xor
gs
pop
in
jmp
cmpsl
lahf
cmp
sub
xchg
cld
sbb
push
add
mov
aaa
jle
js
inc
pop
or
ja
cld
lret
and
in
pop
push
sub
mov
add
les
sbb
add
stos
lret
in
inc
mov
fimull
pop
adc
pop
stos
cs
aaa
mov
