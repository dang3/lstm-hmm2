sbb
add
mov
dec
test
les
dec
std
ja
enter
inc
or
or
icebp
sbb
sbb
dec
push
jl
shr
stos
ljmp
pop
movsb
aas
mov
dec
pop
sbb
lahf
test
pop
xor
insb
test
sbb
leave
cwtl
outsb
sbb
ja
sahf
adc
pop
cmp
adc
push
pop
aam
cld
jns
pusha
idivl
push
int
test
mov
pop
or
cwtl
test
xor
xchg
lods
mov
stos
add
cld
es
and
clc
nop
rcrb
lcall
popf
clc
or
jo
cmp
or
mov
mov
iret
popf
xor
int3
xor
loop
cmp
adc
ss
xchg
std
cmp
push
in
pop
test
jnp
insb
das
mov
xchg
jbe
loope
ja
and
add
es
es
fiaddl
xchg
and
outsb
push
cld
iret
movsl
stc
jo
sbb
movsb
test
xrelease
lock
pop
inc
and
sbb
mov
popf
cmc
pop
cmpsl
cwtl
std
iret
add
cwtl
jmp
out
and
xlat
jne
mov
mov
jne
ret
sub
sbb
clc
jno
pop
test
and
pop
xchg
icebp
lret
int3
ljmp
add
mov
mov
adcl
fcomps
divl
jbe
pop
les
cmp
fs
shrl
aaa
divl
push
cwtl
mov
or
push
mov
out
fcoml
mov
int3
xor
adc
aas
sub
mov
adc
js
popf
pusha
mov
mov
mov
es
add
xlat
mov
cld
sbb
int3
mov
xlat
jne
adc
jge
lcall
adc
push
inc
and
lahf
jg
xchg
mov
adc
adc
xchg
pop
sub
rcr
das
js
sbb
mov
stos
test
mov
cmp
jb
iret
and
adc
in
add
jae
ljmp
fstl
add
mov
addr16
push
cltd
cmpb
test
mov
xchg
lock
stc
push
icebp
cld
lds
notl
adcb
pop
sbb
dec
jge
andl
mov
loopne
loopne
inc
add
jo
push
pop
inc
cmp
xchg
inc
push
das
lcall
popf
sub
pop
cli
pop
nop
inc
fidivs
in
scas
sub
rclb
flds
cmpsl
popf
pop
std
xchg
call
jae
into
pop
pop
jbe
jnp
cmpsb
stos
jmp
lahf
cli
add
mov
mov
xchg
mov
cmp
inc
mov
xchg
jae
fs
lods
ljmp
stos
scas
loopne
fidivrs
cld
jmp
loope
pushf
imul
sahf
leave
push
mov
add
int
in
and
lods
punpcklbw
mov
mov
es
sbb
inc
fisttpl
in
add
or
pop
call
jle
push
out
sbb
adc
cmc
fmull
mov
xchg
data16
sub
leave
mov
dec
stos
dec
xchg
jb
cld
push
pop
nop
cwtl
repnz
sbb
stos
jge
sbb
test
dec
pop
push
inc
sbb
int
inc
mov
pushl
jns
xchg
add
loope
fstpt
outsb
mov
jnp
mov
daa
add
lea
mov
mov
cmp
stc
shr
jg
ja
push
in
ljmp
adc
mov
ret
mov
icebp
sti
inc
lsl
jmp
stos
mov
cwtl
push
sbb
or
jmp
in
ds
jg
jo
sti
push
mov
lahf
xlat
inc
out
popf
lahf
xlat
pop
pop
dec
sub
adc
les
pop
pop
jecxz
mov
lret
mov
sub
jbe
andb
in
cmp
mov
mov
imul
dec
mov
fwait
mov
jmp
ror
inc
stos
mov
xorb
cs
jecxz
mov
xchg
scas
scas
jae
add
aaa
pop
addr16
in
add
aad
mov
jne
rcrb
lahf
leave
loopne
jle
mov
mov
jg
mov
in
jmp
ficomps
stos
xchg
das
sbb
sub
fcoml
jge
lods
add
or
cmp
xchg
popa
ret
pop
lock
in
adc
pop
adc
push
popa
or
lea
jmp
out
outsl
lret
pop
lea
mov
movsl
xchg
in
arpl
or
dec
mov
fiadds
andb
or
jg
in
movsl
or
add
add
dec
dec
loop
clc
jnp
ret
jg
sub
jne
mov
mov
enter
dec
push
xor
mov
jle
lret
lods
or
mov
cs
add
ja
into
popf
lcall
or
sub
cmpsb
jb
jne
into
push
mov
aaa
fcoml
pop
mov
mov
mov
dec
lock
mov
test
lret
dec
insl
bound
out
imul
xor
je
fs
daa
cmp
dec
setb
cwtl
mov
cmp
fnsave
mov
je
cmp
and
or
mov
sarb
bound
mov
sub
adc
pop
inc
xchg
or
push
sar
or
push
enter
cmpsl
jl
pop
cld
out
push
xchg
inc
js
lea
mov
dec
push
imul
inc
aam
lods
in
add
jecxz
lret
notl
mov
lods
hlt
inc
mov
mov
pusha
ljmp
jne
lret
sbb
sub
outsl
adc
jle
addr16
das
dec
xchg
mov
jne
stos
aaa
stos
dec
jg
sbb
mov
xor
push
sub
sub
cmp
push
daa
gs
out
orl
cwtl
pop
mov
fisubl
fnstsw
nop
ss
pop
sub
jg
jo
rcr
xchg
sub
xor
scas
shr
pop
jle
and
pop
dec
loope
xchg
adc
mov
xchg
aam
fstpt
bswap
movsl
in
pop
ss
into
ljmp
jns
mov
add
rol
insl
mov
push
or
mov
or
push
inc
sqrtps
mov
jbe
pop
std
adc
or
out
push
test
mov
lea
stos
enter
mov
pop
pop
fldcw
dec
out
ret
mov
pusha
cmpsb
or
mov
dec
data16
or
popa
lahf
movsl
out
push
jg
cli
call
push
dec
xchg
movsl
int3
not
or
xchg
mov
mov
mov
arpl
jno
fcmovnbe
inc
jne
stc
sbb
cmp
andb
xor
sbb
sbb
scas
test
jns
xchg
enter
fsts
lds
mov
and
adc
movsl
push
in
push
shl
push
add
loopne
in
pop
sbb
fldcw
mov
xor
cltd
aaa
jp
movb
inc
icebp
adc
xor
test
dec
testb
pop
outsb
ficomps
cmp
mov
rorl
xchg
jecxz
mov
fwait
aas
inc
sbb
adc
fnstenv
push
sbb
xor
mov
ret
or
adc
jge
xchg
sbb
xchg
test
popa
cmp
in
pushf
ljmp
jne
outsb
es
ficomps
mov
ds
push
dec
pop
sub
or
inc
dec
stos
push
aas
xor
jp
mov
fcmovnb
fsubl
shlb
in
leave
imul
out
les
adc
shrb
lock
jmp
fwait
into
fisubl
xor
daa
and
xor
pop
ret
jge
fisttpll
in
adc
xchg
ficoms
mov
scas
dec
mov
adc
sbb
stos
push
adc
in
mov
movsl
cwtl
fidivrs
aaa
mov
push
fwait
rcll
mov
cmp
lcall
jns
lock
mov
push
add
xchg
das
or
jg
inc
jl
cmp
xor
out
or
mov
or
insb
inc
sub
fldt
jle
into
and
push
clc
sbb
enter
mov
fxch
arpl
mov
mov
pop
outsl
addr16
pop
jecxz
in
pop
add
jbe
xchg
dec
cmpl
flds
mov
pop
push
xor
jge
mov
in
dec
cmp
pop
cmp
pushfw
loopne
inc
dec
mov
in
mov
xchg
pop
xchg
jns
js
pop
sub
in
push
cltd
sbb
add
enter
cs
mov
xchg
aad
test
dec
mov
jecxz
in
push
rorb
int3
scas
ljmp
adc
ljmp
adc
dec
sbb
xchg
pop
and
mov
and
inc
push
sub
xchg
cwtl
mov
sbbl
and
btrl
movsb
inc
lea
or
adc
mov
cmp
mov
pop
mov
outsb
dec
push
jbe
xchg
bound
gs
push
das
mov
mov
in
pusha
in
sbbb
add
popf
jo
xchg
icebp
pushf
lcall
jle
pusha
mov
cmc
movsl
outsb
pop
lret
popa
mov
jb
mov
mov
jnp
jg
pop
shrb
sub
and
lahf
imul
jle
imul
mov
cli
dec
jge
inc
daa
and
xchg
aas
insb
and
repnz
imul
lods
das
jbe
enter
mov
jp
iret
add
mov
int3
adc
shlb
nop
arpl
cld
mov
mov
rcll
inc
pop
sbb
pushf
aam
sbb
or
inc
mov
add
movsb
pop
mov
jo
lret
lret
rcrl
lods
mov
mov
xchg
inc
popa
and
jae
sub
pop
ja
roll
cmp
lret
adcl
xchg
and
adc
fimuls
mov
int
test
jmp
fwait
pop
adc
shll
inc
jbe
jp
call
cmp
mov
ljmp
dec
icebp
sub
stos
and
out
xchg
les
sub
test
leave
mov
mov
roll
xchg
pop
mov
pop
sbb
mov
icebp
cmp
fdivp
js
out
test
shrb
add
adc
aam
cmp
push
stos
cmp
daa
int3
shll
and
xor
das
orb
lret
inc
es
push
cmc
xor
adcl
rcr
loope
clc
mov
movsb
inc
mov
xor
dec
or
pushf
test
fsubs
jecxz
pop
aam
jmpw
pusha
cli
aaa
cltd
mov
pop
xorb
pop
movsl
fsubp
loope
scas
mov
mov
adc
shrl
ret
jbe
pop
loope
or
fwait
aad
test
movb
xor
pop
pop
fsubrl
imul
loopne
cmp
inc
sub
mov
rcl
ror
stc
dec
mov
je
pushf
xchg
cmc
add
jbe
aaa
push
or
mov
iret
and
bound
push
flds
mov
and
adc
and
xchg
push
std
shl
sbb
inc
sub
aaa
mov
adc
jp
out
jne
enter
add
sbb
call
mov
pop
cwtl
pop
call
dec
sahf
pop
jae
pop
rep
daa
js
mov
push
xchg
and
aad
repnz
lahf
mov
cmp
mov
mov
mov
sarb
mov
and
bound
out
ret
mov
cwtl
jns
xchg
repz
push
mov
inc
shlb
push
outsl
scas
popf
or
xchg
xorb
inc
insl
inc
lahf
popf
cmp
rcrl
xchg
scas
loope
ss
mov
fdivs
insb
subb
std
loopne
out
enter
mov
mov
dec
cli
fadds
fldcw
or
ljmp
dec
int3
lods
dec
pop
lds
cwtl
jle
inc
or
ret
mov
das
and
or
lahf
aas
xor
cmp
push
mov
mov
and
push
jmp
inc
loope
adc
outsl
inc
lcall
xor
mov
sub
or
test
adc
mov
popa
xchg
int3
cmp
push
dec
xchg
mov
imul
sbb
xor
xchg
mov
daa
mov
dec
add
pop
scas
xlat
or
sti
add
mov
enter
sbb
and
pop
addl
loop
push
pop
js
sahf
call
out
push
xchg
movsl
loopne
in
fmuls
pop
mov
insb
push
outsb
jb
pop
ds
out
xchg
movsb
sbb
jg
xor
or
icebp
test
rcrl
push
lcall
mov
test
jne
int
or
js
push
lcall
aaa
stos
sti
and
nop
push
fucomp
out
xchg
dec
cmp
inc
pop
mov
nop
pop
and
stos
xchg
inc
adc
sbb
je
cmpb
pop
lcall
in
adc
int
daa
mov
jge
in
in
mov
xor
xor
cli
xor
mov
imul
outsb
movsb
or
std
mov
adc
ja
mov
or
gs
aas
scas
jo
mov
inc
hlt
mov
popa
mov
mov
ljmp
fld
sub
nop
push
test
lea
cld
rclb
xchg
js
aam
call
ljmp
inc
add
sub
inc
jo
pop
enter
jo
push
movsb
shlb
pop
stc
mov
ja
loopne
addr16
jae
pop
arpl
lock
loope
xor
adc
xchg
int3
or
mov
sub
cld
mov
fstl
mov
jns
or
sahf
or
fimuls
sub
or
addr16
add
push
leave
ffree
pop
out
xchg
mov
pop
pushf
jno
jle
test
sub
mov
xchg
enter
fldcw
nop
cli
lret
out
inc
cmp
out
jnp
jne
sbb
sub
inc
stos
int3
fwait
lahf
push
inc
sub
jae
push
and
test
dec
pop
imul
int3
dec
cmp
jle
out
and
dec
pop
sub
dec
ljmp
js
movsb
mov
push
iret
sahf
xchg
gs
mov
mov
sub
mov
sti
inc
sub
mov
inc
and
or
int
pop
pop
mov
jnp
jbe
test
and
inc
ret
ljmp
mov
add
and
mov
mov
inc
pushf
adc
mov
outsb
push
cmp
mov
cs
mov
aad
pop
inc
xor
std
in
jb
push
loopne
and
mov
test
in
filds
jg
xchg
adc
adc
xchg
xchg
dec
push
scas
addr16
mov
mov
jnp
js
notb
adc
stos
cmp
mov
lahf
mov
mov
loope
iret
mov
movb
shll
mov
js
inc
xor
insl
mov
xor
bound
jnp
aam
cmp
push
pusha
je
addr16
div
push
test
hlt
cs
push
mov
aam
xchg
dec
jnp
inc
cmp
cld
pop
imul
or
dec
and
loope
sbb
pop
push
mov
test
jmp
fstl
mov
clc
sarb
mov
ds
rcrl
jne
mov
sbb
mov
pop
je
pop
es
cmp
in
push
ss
outsb
cld
cmp
dec
clc
fdivrs
jmp
inc
add
icebp
xor
inc
fbld
push
adcb
or
cwtl
jecxz
xlat
mov
or
cmc
xor
je
in
cmp
xor
cli
mov
sarb
adc
xchg
lods
xor
ret
lods
xchg
fstpt
out
xor
mov
outsb
push
pop
insl
cmp
inc
xor
and
ljmp
jnp
fistpl
mov
sbbb
dec
in
or
push
push
aam
pop
inc
xor
je
mov
es
and
add
pushf
in
cmp
shl
loope
aaa
mov
mov
stos
fs
adc
dec
or
inc
stos
ljmp
sti
cmpsb
pusha
test
and
mov
scas
aam
mov
mov
xor
mov
fs
stc
jecxz
fisubrl
and
mov
and
and
cmp
xor
xor
js
mov
int
or
call
icebp
dec
push
insb
inc
fidivrl
loop
cli
ret
cmp
pop
loopne
imul
and
sbb
out
cltd
mov
popf
mov
add
inc
cld
add
gs
mov
jp
rcrl
rorl
mov
mov
outsb
jbe
and
pop
adc
dec
lret
adc
xchg
sbb
pushf
int3
jecxz
dec
movsb
cmp
adc
or
push
sbb
add
and
mov
ja
loop
rcrb
pop
adc
dec
pop
rcr
mov
sarl
mov
loop
out
mov
mov
or
sbb
in
cltd
and
js
add
aas
mov
aad
jecxz
clc
cwtl
dec
mov
test
mov
test
add
jge
mov
mov
insl
add
cmp
or
adc
aaa
ret
stc
imul
je
mov
or
sub
xor
daa
sub
xor
sbb
loop
add
cmp
movsb
fsubl
mov
add
dec
push
and
int
cli
push
movsb
mov
adc
jbe
cmp
adc
inc
mov
jmp
inc
stc
cmpb
add
sub
ss
cmp
pop
push
adc
adc
mov
popf
mov
push
je
jbe
pushl
icebp
sbb
jb
and
das
mov
or
pushf
and
xchg
cld
push
out
jmp
outsl
iret
call
or
lret
xor
inc
outsb
and
rcrb
mov
cmp
lods
adc
in
push
cld
mov
dec
pushf
cmpb
cld
pushf
movsl
jns
imul
push
cmpsb
adc
inc
cld
mov
push
lds
lea
orb
jp
addr16
popa
and
lock
int
sbb
jo
add
in
popa
mov
outsb
jp
addb
push
idivl
fsubs
inc
stc
inc
jb
inc
mov
cld
mov
xor
mov
fwait
cmp
ljmp
mov
sbb
shlb
sub
loope
lods
cmpl
das
add
dec
movsb
decb
jnp
inc
leave
testl
pop
cmpsb
sbb
adc
cmp
sahf
test
fdivs
in
lods
and
mov
sub
fdivl
push
out
aam
sarl
jp
int
and
inc
mov
cmpsl
insl
or
sub
mov
icebp
add
fs
cld
repz
pop
adc
fisubl
in
cmp
xlat
fdivr
adc
cmc
shr
mov
dec
rcll
and
xchg
cli
mov
popf
pop
in
mov
aam
jg
add
mov
push
xchg
fiadds
in
cmp
stc
call
int
subl
push
lret
cmp
jnp,pn
insb
pop
xchg
cmp
sbb
dec
cmp
sub
rorb
and
adc
insb
xchg
cmpsb
inc
xchg
sarl
and
cmp
or
movsb
loopne
addr16
push
push
xor
sbb
imul
nop
jne,pt
pop
add
adc
mov
mov
sti
clc
hlt
cmp
inc
or
sbb
cmp
lds
add
push
inc
lret
pop
lcall
mov
mov
lea
hlt
loop
pop
xchg
sti
pop
lock
clc
push
jl
ja
push
les
mov
inc
imul
push
jo
jmp
mov
out
xchg
in
enter
ret
mov
daa
sub
ds
aam
add
orb
cli
gs
out
mov
fdivl
dec
jne
cmpsl
mov
jecxz
stc
push
dec
stos
pop
pushf
add
jg
es
js
add
out
push
mov
cmpsl
rorb
sbb
mov
inc
ficoms
pop
fwait
mov
outsl
repz
sbb
cmp
test
mov
es
xor
cltd
mov
std
into
cmpsb
mov
jmp
lods
pop
push
mov
pusha
pop
imul
sub
jmp
lret
sbb
imul
xor
out
sbb
and
inc
mov
sbb
dec
hlt
sbb
stos
add
ret
mov
mov
inc
cs
push
push
es
pmulhuw
pop
js
loope
rorl
or
jecxz
lods
sti
mov
pop
jge
xchg
je
mov
in
lods
pop
scas
pop
leave
xchg
pop
testb
cmp
mov
dec
adc
ficoms
fstpt
xor
mov
or
inc
inc
push
frstor
push
pop
add
or
ret
jne
and
jns
xchg
pop
nop
push
clc
out
xor
mov
adc
push
popa
push
andl
jmp
push
sub
cwtl
lods
or
sti
pop
inc
int3
outsl
lods
repnz
xor
and
pusha
fiaddl
leave
ja
in
inc
pop
mov
pop
rclb
xchg
xchg
or
or
xlat
lahf
insl
negb
cmp
imul
pop
mov
rcr
ljmp
pusha
into
aam
fdivl
push
inc
adc
rcl
cmp
js
mov
or
jge
add
xor
mov
repnz
adc
and
mov
mov
fistps
movsl
xor
inc
ds
sbb
xor
fsubs
adcl
fwait
push
dec
xchg
cs
test
jg
cmp
ds
imul
add
adc
cwtl
push
jnp
cmpsl
sub
into
movsl
cmc
or
lcall
sbb
xchg
aas
jle
shlb
jecxz
or
dec
out
fbstp
mov
mov
mov
es
inc
xchg
sbb
repnz
js
mov
pusha
scas
jmp
testb
add
cmpsb
xchg
add
jo
aad
orl
fildll
std
jo
xchg
jb
mov
outsb
in
or
aad
and
and
jns
ds
add
dec
xor
push
mov
cwtl
outsl
push
mov
cmp
sbb
ror
push
adc
cmc
mov
les
xchg
pop
xchg
out
lods
insl
test
fimuls
cmp
mov
iret
out
sbb
push
pop
dec
outsl
jnp
jg
test
mov
adc
cmpsl
fisubs
arpl
push
mov
sarl
cwtl
and
and
add
jne
sub
push
cltd
mov
xlat
cmp
imul
jne
movsb
add
sbb
aam
or
cwtl
cmc
call
add
adc
leave
mov
sahf
repz
das
imul
jle
sub
xchg
mov
mov
cs
inc
mov
cmp
sbb
repz
stc
outsb
xchg
mov
lds
cmp
mov
shll
sub
clc
popa
fwait
xchg
pop
inc
mov
dec
sub
jl
mov
pop
pop
mov
inc
or
pop
xchg
je
insb
out
xor
stos
sbb
cmp
pop
jne
adc
or
add
pop
lcall
xchg
ret
ret
ret
les
xorl
xchg
cmpsb
fnstsw
insb
dec
imul
push
shll
jo
push
in
lods
jne
aad
iret
out
cmpsl
lock
mov
push
out
sbb
xchg
lock
mov
jo
fstl
loop
mov
cmp
sbb
movsb
cmpsb
loopne
fists
cltd
mov
aaa
sub
mov
jbe
push
in
mov
aad
mov
popa
jne
pop
and
pop
mov
mov
jae
cmp
nop
lods
mov
bound
pop
ficoms
jb
mov
inc
lcall
sub
cltd
sbb
int
les
mov
pop
enter
xor
pop
dec
les
imul
in
xor
enter
dec
cmp
add
dec
pusha
mov
push
jl
aaa
push
sbb
adc
sarb
jmp
jbe
mov
aas
jecxz
sbb
fsubrp
or
jg
cltd
sbb
jb
xlat
mov
sbb
or
jp
enter
adc
repz
outsb
iret
mov
or
push
testb
adc
push
in
ret
mov
or
scas
ror
pop
test
pop
data16
sbb
sar
lock
mov
icebp
mov
pop
lret
out
and
es
insb
push
dec
das
xchg
into
rolb
lret
or
cmp
sarb
mull
mov
mov
ret
mov
dec
cltd
popf
ja
xchg
imul
lret
in
sub
mov
adc
das
pop
lret
cmp
inc
outsl
dec
mov
sbb
mov
test
jno
out
xor
adcl
cli
jmp
rorb
sbb
pop
jae
add
lea
xor
mov
fs
pop
or
ss
aad
xor
cs
adc
sarl
shlb
pop
out
inc
testl
adc
stos
dec
mov
pop
das
adc
sbb
sub
xchg
push
fwait
fs
xor
fdivrs
or
dec
xchg
mov
lcall
dec
js
mov
jl
dec
scas
adc
fs
inc
loopne
imul
pop
cmp
mov
roll
aam
or
pop
arpl
mov
cmp
das
sbb
outsl
mov
inc
scas
les
pop
pop
mov
adc
xor
mov
arpl
dec
sbb
xchg
lret
in
stos
cmp
stos
dec
pop
fsub
lods
int
lods
out
aam
xchg
mov
cmpl
dec
subl
dec
nop
jb
dec
out
test
imulb
xor
push
lods
xchg
xchg
enter
fnstcw
lahf
out
lock
mov
sub
test
rcrb
mov
mov
bound
scas
add
adc
cmpsl
loope
sub
push
pop
iret
jge
and
in
inc
push
stc
inc
adc
cmp
inc
or
popa
in
mov
mov
mov
scas
xor
int3
test
pushf
sub
hlt
inc
mov
popf
imul
aaa
repz
cs
nop
mulb
or
push
movsb
sahf
daa
ja
sarb
push
pop
cmp
pop
pop
dec
cmp
pushf
dec
ret
jo
cmp
adc
in
jne
xchg
lds
xchg
rcl
dec
and
jg
xor
sub
jae
and
dec
sub
xor
inc
addr16
adc
jne
mov
cmc
rorb
mov
push
mov
ja
mov
jle
and
in
movsb
and
je
sub
out
pop
sub
jp
mov
cmpsl
xchg
inc
and
ss
test
fidivs
fimuls
pop
cld
int3
cld
rcrl
xchg
pop
in
dec
jo
xor
push
mov
cmc
stos
push
mov
cwtl
jne
leave
fld1
aad
push
outsl
scas
leave
or
movl
jne
ja
mov
jno
pop
add
lahf
mov
cmp
lret
xchg
outsb
cmp
cmp
out
jae
add
push
sbb
jg
das
cmc
jbe
mov
iret
sub
dec
sahf
adc
sbb
jne
ffree
lods
pop
mov
push
pushf
outsl
mov
sub
adc
pop
inc
adc
jae
or
jecxz
inc
scas
mov
out
jecxz
jne
enter
adc
push
mov
sbb
orl
xchg
adc
in
inc
pop
pop
cltd
arpl
jmp
decb
adc
sub
dec
xor
push
adc
mov
dec
lcall
imul
jg
adc
sub
add
mov
popf
stos
inc
xor
je
jae
sbb
pop
push
mov
ljmp
jne
pop
cli
inc
mov
movsb
push
fs
ret
int
pusha
cmp
mov
xchg
cmp
inc
hlt
rcrb
sahf
or
pusha
das
pop
cwtl
imul
fxch
inc
roll
push
clc
add
sub
dec
dec
xor
xor
iret
loop
or
aam
leave
jmp
xor
in
inc
sub
lds
mov
stc
dec
fildll
inc
mov
adc
dec
mov
lock
add
mov
lret
pop
mov
bound
insb
scas
cmpsb
mov
xchg
sub
hlt
aad
ret
lock
in
sbb
lcall
aam
mov
pandn
cmp
test
jae
idiv
outsl
pop
and
adc
mov
je
fistpll
fs
pusha
jle
cltd
mov
jp
fdivs
aad
nop
movsl
outsl
gs
mov
aam
jae
enter
cmpsl
push
dec
mov
cmp
hlt
jle
mov
test
mov
sahf
lock
cld
rorb
adc
pushf
icebp
fldenv
enter
sbb
and
mov
andl
sub
lods
mov
push
out
mov
roll
fldenv
into
pop
xor
repz
mov
aam
jbe
jne
leave
jae,pt
outsb
pop
xorb
pop
pop
imul
lcall
arpl
rcrb
pushf
negb
cltd
sub
lods
mov
sbb
imul
stos
pop
rclb
fwait
push
setl
lahf
xchg
mov
lea
sbb
stos
lahf
mov
push
fnstcw
add
pop
call
dec
xor
push
stos
or
inc
popf
jnp
addl
jle
ds
scas
lcall
or
nop
in
sbb
dec
xchg
dec
or
shlb
dec
mov
and
iret
jmp
pop
push
sbb
dec
loopne
js
loopne
int
ljmp
push
repnz
cmp
scas
divl
xor
cs
addl
jp
aaa
mull
xor
add
loop
fists
ret
fs
rep
scas
push
rcrb
sti
testl
cmp
xor
dec
out
sbb
pop
fcoms
add
push
sbbb
or
mov
xchg
enter
outsl
jmp
ror
xor
push
cmp
sbb
or
rcrb
jbe
jmp
jne
adc
out
dec
out
mov
cmp
out
push
or
loopne
insl
int3
pop
add
out
sbb
pop
fst
jmp
pop
or
inc
rorl
mov
fidivrl
pop
or
rclb
sbb
pop
cltd
jbe
mov
inc
dec
sub
cwtl
or
aas
std
cltd
js
ds
roll
std
dec
mov
sub
or
mov
outsb
xor
movl
cmpsb
mov
dec
daa
lahf
aad
shll
lahf
or
cmp
or
and
iret
addl
lahf
add
push
xchg
repz
rol
xor
xchg
pop
int3
add
or
jb
or
jp
in
mov
dec
or
mov
insl
sbb
je
jae
sbb
mov
and
mov
inc
loopne
and
test
lea
fidivrl
jge
dec
jg
iret
cld
addr16
ljmp
pop
in
cs
and
sub
or
in
cmpb
cmp
or
test
pushf
sub
xchg
sub
inc
pop
jo
pop
rclb
push
xchg
lahf
call
in
sub
ret
jp
incb
outsb
stc
pop
ret
inc
pop
test
sti
mov
pop
stos
out
xchg
adc
cld
adc
push
movl
xchg
in
in
aam
and
gs
push
pop
rclb
pop
jbe
cld
mov
push
int
ret
popf
sbb
inc
mov
pop
repnz
andl
or
aaa
outsl
sbb
repz
and
sub
es
dec
in
test
adc
pushf
loope
or
dec
fcmovnbe
mov
add
test
shll
cmp
push
data16
loope
sub
cmp
daa
ljmp
xchg
jne
mov
movsl
scas
popl
xchg
and
jmp
mov
push
cwtl
lock
in
int3
scas
lock
xchg
aad
mov
or
fidivrs
add
aad
mov
sar
cwtl
lcall
sub
xchg
hlt
adc
jb
lcall
dec
shrl
mov
and
out
and
mov
imul
cwtl
insb
popa
adc
or
dec
lcall
sbb
enter
xchg
lahf
les
popa
inc
or
jecxz
mov
or
lret
inc
pop
cld
fldt
out
sub
sub
mov
test
dec
or
leave
dec
inc
loop
xor
out
in
int3
push
inc
lahf
lods
push
xchg
sbb
es
imul
call
aas
pop
jle
scas
inc
bound
jmp
rcrl
dec
xlat
lods
pop
sbb
ljmp
push
rep
out
mov
leave
out
push
cli
xchg
adc
jnp
paddusw
pop
popa
and
pop
in
mov
push
xor
repz
dec
inc
mov
and
mov
mov
rolb
leave
inc
and
lods
loop
mov
inc
stos
sub
adc
mov
cs
cmp
scas
mov
cmp
out
adc
add
xor
lods
mov
fdivl
mov
adcl
sbb
out
lahf
loopne
pop
lret
mov
stos
pop
add
js
fidivrl
aad
insb
mov
icebp
hlt
sub
mov
subl
xchg
outsb
sbb
pushf
push
fnstsw
pop
mov
adc
clc
dec
mov
inc
outsl
and
hlt
mov
leave
test
xor
cmp
ficoml
loopne
rorb
rolb
jl
aad
inc
js
and
mov
jecxz,pn
xlat
popa
adc
and
scas
mov
push
jp
out
ret
ss
push
andl
pop
dec
mov
cmpl
push
sub
lods
adc
sbb
scas
mov
aaa
out
dec
pop
subb
xchg
cmp
xor
enter
add
push
mov
push
mov
ja
outsb
pushf
or
mov
loop
sahf
xchg
sbb
movsb
pop
mov
push
mov
repz
jmp
jb
mov
xchg
scas
sub
mov
aaa
ja
loopne
mov
sub
int3
add
pop
or
mov
fidivrl
mov
pop
inc
iret
sbb
test
subb
jns
xor
pop
xor
jmp
call
mov
mov
leave
dec
out
popf
pop
and
insw
arpl
ljmp
mov
or
push
fmulp
mov
dec
xchg
testb
mov
mov
xchg
mov
bound
in
loope
mov
inc
pusha
sbb
add
inc
in
push
nop
in
push
xchg
divb
mov
lods
out
mov
gs
sbb
jge
jns
push
es
subl
pop
fsubl
and
ja
cld
outsl
push
jg
cld
test
enter
sub
test
xchg
pop
xor
push
les
pop
into
inc
pop
cs
add
sbb
dec
lea
pop
int
stc
pop
sub
call
and
out
jmp
imul
mov
inc
dec
aas
push
rorl
pop
in
ret
into
movsl
sub
inc
sar
es
daa
aas
data16
adc
adc
jle
stc
jno
sbb
in
jl
and
push
inc
enter
jge
lea
lret
cs
xor
test
out
in
sbb
dec
lret
sbb
xor
push
and
imul
rcrb
cli
stos
cli
cmpsl
shrl
dec
loopne
aam
test
fs
cld
jecxz
les
pop
jo
mov
push
into
or
fsubs
and
xchg
cmpsl
and
lahf
push
sub
or
or
pop
or
fldpi
mov
inc
mov
add
xor
mov
popa
ja
ret
scas
outsb
inc
sbb
repz
jno
lds
in
jno
lods
in
rclb
lret
xchg
ret
in
iret
arpl
and
sbb
mov
and
xor
jp
aas
lock
int
aam
inc
pop
rcl
pop
rclb
mov
icebp
mov
and
jmp
addb
shll
daa
clc
pop
dec
or
jp
dec
mov
xchg
loopne
inc
scas
cli
mov
rcll
jge
xor
xchg
mov
lock
ror
and
inc
xor
enter
fcmovnbe
rcll
call
stc
cld
cmp
sahf
or
adc
test
push
std
push
push
into
and
add
sbb
and
mov
lds
mov
orl
in
jnp
jae
int
fisttps
xor
xchg
xor
push
out
gs
or
clc
pop
iret
int3
into
clc
fs
push
pop
pop
mov
dec
mov
dec
int3
js
or
scas
fcom
mov
stc
fiaddl
imul
fidivrl
stc
mov
fwait
or
outsb
inc
xchg
ret
jl
jns
xchg
push
mov
and
and
imul
pop
out
adc
mov
aas
pop
mov
mov
bound
addl
imul
adc
int
in
in
mov
aam
int
and
pop
es
mov
push
addl
inc
jae
add
cmp
xchg
stc
in
inc
in
mov
or
fs
inc
inc
mov
lock
popf
icebp
mov
sub
dec
xchg
lea
jb
insb
sub
and
jge
pop
dec
ret
fdivrl
and
add
mov
out
cld
nop
test
stc
lret
mov
xchg
addr16
imul
int
lock
jbe
ja
fildl
daa
aaa
xor
xchg
cmp
dec
in
mov
xchg
mov
fs
ret
pop
mov
insl
adc
das
adc
push
jno
cmp
jl
inc
scas
stc
test
out
stos
in
sbb
imull
xchg
decl
shll
and
pop
xchg
insb
dec
sub
je
movsb
dec
mov
loop
je
ret
dec
jnp
dec
out
bound
ss
lcall
push
xor
ret
mov
jmp
jge
int3
jp
dec
js
inc
push
add
fisttpll
add
jl
xor
mov
mov
mov
sbb
sub
jne
ficompl
sub
cld
xor
lcall
mov
sbbl
jmp
mov
mov
push
push
jp
lret
shlb
and
outsb
shrb
in
mov
scas
jg
cld
fisttpl
add
push
les
dec
movsl
fisttps
aaa
ja
jle
adc
negl
dec
cmp
dec
daa
inc
in
pop
dec
out
cmp
scas
cmp
data16
aaa
aam
movl
and
fwait
sbb
push
jno
push
loop
outsl
fsts
mov
pop
lock
inc
and
fcomip
shl
lods
and
ds
mov
aad
sbb
adc
jg
test
and
sub
xor
lock
test
dec
out
insb
icebp
cmp
inc
mov
pop
movsl
out
imulb
out
sbb
lret
cmpb
dec
pop
mov
decb
or
ljmp
ljmp
icebp
push
adc
adc
lds
andl
std
dec
sub
ds
cmp
test
aas
inc
aam
shll
mov
movsb
and
add
pop
push
call
add
mov
mov
mov
xchg
pop
xor
push
scas
aas
or
and
pop
ljmp
xchg
pop
cltd
lods
push
mov
enter
mov
call
dec
mov
cmpsb
sub
jnp
shrb
in
lcall
push
mov
in
cmc
jmp
cmp
loopne
lret
jne
bound
imul
push
xchg
and
adc
mov
push
push
ss
xor
push
leave
cmpsl
sub
cmp
xchg
jae
decl
cmp
insb
add
fs
loope
popf
sarl
aaa
pop
and
hlt
repnz
inc
sub
xchg
in
aad
mov
stos
jb
lods
js
fldl
mov
cld
lods
or
adcb
push
nop
jns
test
dec
jl
shlb
repz
push
aas
cld
xchg
sub
xor
mov
xor
sbb
shlb
nop
mov
ss
pop
ret
lods
xor
pop
pusha
and
adc
add
push
dec
test
sub
push
add
sbb
mov
cmp
mov
xor
das
sbb
mov
imul
inc
into
jecxz
test
jno
adc
inc
es
popa
mov
aad
cli
push
je
int
and
and
xchg
cmc
push
es
sahf
xchg
inc
sub
dec
inc
cli
ja
push
ficomps
jp
mov
jnp
sub
clc
cmpsl
jecxz
loopne
rcrl
loope
mov
stos
in
out
sub
repz
das
and
je
outsl
pop
clc
mov
int3
inc
ds
daa
leave
xor
in
mov
rcrl
aad
scas
test
aad
out
xlat
jl
sbb
adc
xor
dec
lods
fcomi
insb
mov
adc
pop
shl
push
add
mov
xor
fidivl
sbb
les
xchg
adc
popl
dec
int3
inc
pop
cmp
cmp
into
mov
sub
push
xchg
int
push
push
mov
xchg
push
movsb
fsubrs
repnz
lds
outsb
ss
rcll
bound
dec
xchg
and
dec
inc
je
insb
sti
xchg
xchg
xor
jae
fsubs
shl
pop
loopne
inc
icebp
roll
mov
test
bound
xor
xorl
leave
or
and
aad
jl
mov
xchg
sbbb
mov
or
ljmp
fwait
mov
jne
push
imul
xorb
imul
das
rcll
and
sbb
jae
out
vorps
push
inc
xchg
jne
in
rcr
jl
cmpsb
arpl
ret
ret
iret
and
dec
pop
mov
inc
jecxz
mov
lea
cltd
adc
xchg
sub
test
popa
int3
and
sub
pop
sbb
cltd
xor
push
xor
cvttps2pi
andl
aas
push
lods
jbe
repz
lret
pop
sbb
fsubrs
mov
jge
stc
dec
call
jne
pop
xor
push
les
lds
cmp
dec
dec
inc
cmpsl
jp
flds
scas
call
inc
movsb
jns
ret
in
xchg
mov
fadd
sbb
cld
jecxz
popa
jb
cmpsl
or
ret
cli
out
cli
mov
pop
jb
inc
sbb
jbe
dec
and
add
jmp
or
test
sub
dec
adc
dec
jbe
gs
lcall
loope
mov
stos
sti
inc
dec
xor
inc
stos
mov
andb
xchg
scas
add
sbb
sbb
lret
sub
xchg
repz
mov
push
dec
or
dec
enter
add
je
mov
mov
mov
push
mov
adc
mov
xor
hlt
mov
rolb
cmpsb
sarb
mov
faddp
fdivrp
lods
sbb
add
sbb
mov
test
andb
out
mov
test
stos
lret
into
and
aam
mov
adc
test
and
cmp
push
lret
push
push
fsubrl
es
ds
mov
xor
mov
sub
ja
test
repz
push
sub
popf
hlt
ss
pusha
nop
dec
mov
push
adc
dec
rclb
adc
mov
outsl
aam
sarb
sbb
stos
mov
cmp
xchg
in
movb
jecxz
pop
out
adc
aam
dec
mov
popl
sarb
push
xor
aad
sub
rcrl
sbb
fwait
mov
dec
sbb
sub
jle
popf
dec
enter
addl
cmc
push
inc
mov
and
or
std
sti
xor
cmpsl
ja
mov
cmc
jl
jp
pop
or
sbb
insl
xchg
cld
insb
insl
jno
nop
mov
sbb
inc
inc
sti
and
into
push
sub
imul
xchg
enter
lret
incb
pop
cmp
pop
jns
je
rcr
fstpl
test
jp
cmpsl
ljmp
pop
lods
in
add
add
jno
loop
push
sarb
inc
lahf
das
pushf
sub
cld
cld
add
and
push
and
pop
cmp
cmp
in
aaa
jb
jmp
mov
scas
push
mov
mov
cmpps
nop
inc
pop
push
adc
jl
in
xor
sbb
dec
or
jae
and
mov
fdivr
mov
gs
loop
fwait
aad
adc
inc
cmp
mov
push
push
dec
adc
std
sahf
sbb
shlb
sti
sbb
lret
cwtl
push
sti
and
subl
cmp
add
inc
sarb
mov
out
mov
rcr
ja
insb
cmpsb
and
cltd
gs
ret
test
or
jg
dec
rcr
xchg
loopne
cmpsb
jb
cwtl
push
or
leave
dec
push
mov
fisubs
test
sub
repnz
or
and
scas
pop
xlat
inc
lret
stos
cmp
push
mov
out
mov
cmc
cmc
nop
xchg
sub
cmp
test
cwtl
ffree
rcrl
lds
add
jnp
sbb
push
inc
mov
pop
loopne
sbb
mov
and
cmp
xor
or
mov
out
stc
int3
pushf
add
es
lea
xor
les
movsl
mov
lea
popf
xchg
loop
les
daa
hlt
jo
xor
cli
out
adc
add
roll
std
add
or
not
mov
push
ss
iret
inc
lods
dec
out
pop
adc
ror
icebp
jo
outsb
and
test
nop
push
push
and
fbstp
xor
pop
loope
je
leave
fcoms
add
ds
mov
mov
movsb
jg
in
push
pop
dec
adc
arpl
mov
dec
pop
test
mov
dec
out
lcall
ja
dec
lret
fwait
outsb
push
arpl
rcl
popw
xchg
lcall
bound
stc
mov
push
pop
mov
fidivs
shrl
mov
cmp
dec
mov
outsb
movsl
pop
sub
inc
xor
out
push
xchg
dec
sbbb
pop
dec
mov
and
gs
cmp
jae
add
sub
cmc
pop
lcall
jp
mov
xlat
sahf
add
xorb
xor
loope
lea
push
adc
cmp
jbe
sub
cmp
in
sbb
xor
push
sbb
pop
mov
xor
add
mov
cmp
cmp
pop
jb
pop
cmp
out
pop
jns
adc
push
idivl
sbb
mov
shll
dec
cmp
inc
and
cmpsb
loopne
orl
lret
inc
pop
dec
es
mov
inc
test
jmp
jb
outsb
jge
test
cmpsb
clc
xchg
adc
lock
lds
fwait
jg
fistpl
xor
cmp
add
cmp
clc
sarl
lea
cli
aam
out
dec
roll
repnz
pusha
pusha
adc
mov
cld
push
pop
aas
pop
setno
dec
mov
mov
orb
fcos
xor
je
std
ss
cltd
fcomps
inc
mov
pop
or
cmc
es
push
sub
jno
add
jmp
pop
shrb
ja
mov
mov
sti
dec
cmp
leave
repnz
in
push
sbb
sbbl
orb
jns
push
popf
mov
testb
in
mov
fucom
nop
test
dec
imul
dec
enter
flds
pop
je
xchg
cwtl
hlt
loopne
repnz
mov
pop
sbbl
xor
mov
or
subl
sbb
mov
int3
pop
in
mov
pop
fldenv
inc
roll
out
adc
xor
scas
mov
test
pusha
xchg
push
pop
in
jnp
mov
ret
or
ret
pushf
les
inc
fsts
loop
mov
into
fwait
xorb
fistl
clc
fwait
lahf
dec
ds
iret
ficoms
into
cmp
imul
push
inc
lds
scas
jnp
add
jne
push
pop
jnp
push
dec
fdivs
push
cmp
sub
pop
out
mov
jo
lea
xchg
inc
jl,pn
jbe
and
jg
cmpsb
test
pusha
pop
enter
sti
mov
data16
dec
xchg
ret
and
sbb
pop
fmull
fs
cs
push
mov
stc
and
pop
insl
data16
rorl
out
push
xchg
add
pop
sbb
ret
mov
cmpsl
adc
call
push
mov
push
dec
push
add
stos
pop
ljmp
pop
jmp
sub
dec
pop
movsl
lahf
sti
mov
mov
add
sub
lea
mov
mov
xor
push
scas
mov
fstpl
repz
pop
scas
jns
jnp
pop
dec
xor
bound
or
mov
or
cmp
pop
mov
int
rolb
lcall
movsb
sub
or
sub
in
mov
xchg
xor
clc
mov
push
jno
in
jecxz
lods
or
mov
dec
add
push
test
dec
push
sub
adc
and
add
gs
mov
push
xor
in
outsl
pop
stc
cmp
dec
xchg
lahf
das
fidivrs
sub
orb
loope
jp
movsb
mov
aam
xchg
aaa
ss
xchg
jae
iret
mov
jecxz
into
and
ljmp
dec
sbb
push
push
xchg
jo
int
push
loope
mov
ja
pop
cmp
xchg
pop
jmp
pop
mov
xchg
leave
push
popa
and
andb
and
lds
pop
or
nop
push
dec
push
addl
cmp
push
jo
pop
sbb
cmpsl
add
lret
mov
jecxz
push
push
dec
sti
fisttpll
lahf
mov
lea
cwtl
inc
mov
mov
lods
sbb
std
mov
lock
inc
jl
and
mov
jnp
cmp
mov
pushf
xor
clc
iret
lock
mov
mov
dec
adc
pop
push
incb
ss
sti
test
cld
mov
push
adc
lds
dec
fwait
leave
push
pop
xor
xchg
test
out
repnz
rcr
xor
aam
xor
mov
std
fdivrl
pop
mov
pop
mov
xchg
or
mov
and
add
mov
mov
sbb
inc
ret
sub
ljmp
jbe
rolb
sub
sub
aas
insb
fwait
mov
mov
lods
cmc
cmp
inc
test
push
popf
in
pop
push
and
add
or
cmc
jmp
rcrl
sbb
mov
movl
mov
jne
scas
xchg
int3
push
mov
pop
fidivs
or
mov
inc
ret
outsb
cld
popa
sbb
sub
adc
push
fdivr
out
mov
insl
or
sbb
ljmp
mov
andb
shll
jne
mov
lret
mov
insb
pop
cs
mov
xor
shrb
aaa
cmp
addr16
sub
pop
arpl
out
shlb
add
sub
mov
mov
xchg
andb
fidivrl
das
sub
jp
popf
mov
inc
push
mov
test
iret
aam
pop
xchg
js
and
mov
inc
movsb
pop
shrl
mov
mov
pop
fbld
test
jo
mov
mov
or
push
lds
outsl
push
sbb
sahf
call
xchg
dec
repz
in
ja
inc
loop
sub
xor
test
ds
cli
xor
jp
loop
add
push
mov
xorb
sub
aas
pop
or
les
test
imul
add
loope
incl
insb
jae
lcall
arpl
stos
loopne
xchg
ret
mov
lock
jg
dec
mov
insl
pusha
in
jge
inc
jo
jo
cmp
inc
pop
iret
jbe
mov
cmp
shlb
negb
mov
cmpsb
outsb
rorl
out
xor
insb
pop
pop
cmp
xchg
andl
sahf
xor
cs
loopne
push
cmc
mov
jae
mov
aam
mov
popf
inc
sbb
outsb
inc
xchg
pop
insl
cld
xchg
fstpt
fisubrs
cmp
jmp
lods
dec
aas
repz
int3
ja
mov
dec
push
push
lahf
imul
mov
dec
lods
leave
fisubrl
jae
cs
push
cltd
mov
int3
stos
push
stos
daa
imul
jo
out
pop
daa
sub
add
sbb
out
in
push
ss
xor
dec
push
test
lods
test
outsl
pusha
cli
xor
jl
stos
add
in
subl
aas
sbb
lcall
mov
loope
bound
out
ljmp
cmp
sub
std
arpl
bound
data16
es
mov
sbb
push
test
lds
inc
mov
nop
pop
lods
dec
or
jns
jbe
mov
pop
cmpsb
outsl
in
je
jp
scas
cmp
jl
cltd
lods
mul
pusha
stos
xchg
adc
xchg
inc
sbb
sbb
cmpsl
pop
iret
hlt
xchg
adc
adc
cld
cli
mov
stos
sbb
loope
xor
push
jae
out
and
pop
mov
gs
mov
jne
pop
aad
dec
hlt
in
pop
mov
mov
push
leave
pop
out
mov
loope
adc
sbb
sbb
stc
out
jae
inc
aas
mov
sbb
xor
or
pop
mov
je
cmp
mov
imul
sub
cld
ljmp
fistpll
sub
vmptrld
sub
or
lahf
outsl
aas
mov
out
xor
rolb
jle
mov
cmp
or
pushl
push
jb
dec
scas
inc
lahf
test
xor
jle
push
jne
out
jne
movsl
aad
ret
add
scas
sub
mov
adc
fidivl
jecxz
rorl
aad
push
mov
pop
add
or
adc
jne
mov
ret
add
xchg
pop
cmp
jg
cld
jno
or
movsl
sbb
sbb
inc
shr
stc
jns
dec
and
cwtl
pop
lods
incl
shll
jge
pop
lahf
xor
jmp
inc
jmp
and
cmp
or
pop
xlat
fucom
popa
jle
clc
jno
jo
mov
lea
cwtl
ds
cmp
xor
push
mov
or
out
jb
pop
subb
xor
in
mov
cmpsl
mov
sub
mov
pusha
lahf
and
and
fsubr
mov
nop
mov
es
or
inc
dec
inc
jl
adc
sub
dec
pop
mov
push
pop
lretw
xchg
mov
dec
pushf
jecxz
ja
mov
loopne
or
xor
pop
sti
mov
test
nop
popf
pop
fisubrs
stc
jbe
daa
enter
fwait
movsb
cmpsb
jecxz
push
jne
adc
repnz
out
sti
sbb
cmpl
sbb
rep
mov
xchg
adc
sbb
sbb
push
push
add
leave
jbe
jecxz
enter
loopne
sbb
cmp
push
mov
fidivrl
xchg
pop
xchg
icebp
lcall
fists
fsub
or
mov
fsts
shlb
mov
dec
lods
lret
orb
movsb
call
mov
outsb
adc
imul
inc
loopne
idiv
or
hlt
mov
xor
mov
push
adc
out
mov
xchg
test
mov
mov
dec
call
sub
scas
cli
popf
test
roll
mov
pop
insb
sub
jbe
notb
faddp
xor
and
xor
repnz
dec
inc
adcl
nop
inc
in
mov
in
iret
or
clc
sti
pusha
dec
lahf
xchg
rcrb
adc
lock
js
ds
jbe
cmp
push
nop
add
cmp
push
ds
dec
clc
ret
pop
or
sbb
test
and
rcrl
jle
inc
mov
mov
pop
and
pushf
mov
fldt
cwtl
add
or
mov
inc
xor
xor
dec
xchg
inc
cli
push
dec
scas
xor
or
dec
imul
xor
daa
mov
in
jle
iret
mov
xchg
xorb
pop
jge
movsb
rol
add
sbb
adc
jecxz
popf
pop
push
mov
sahf
out
in
mov
adc
pusha
idiv
add
add
mov
push
repnz
fadds
arpl
shrl
cmp
add
add
dec
sbb
push
lret
xor
cmp
outsb
xor
jne
mov
xchg
jb
je
push
and
mov
jp
mov
lds
pusha
mov
xchg
fcoml
push
inc
lahf
stos
fsubrp
sbb
sbb
imul
sub
pusha
push
mov
andnps
mov
insl
dec
pop
test
ror
loop
popf
outsb
inc
into
xchg
enter
adc
ljmp
dec
mov
add
mov
xor
pop
ret
mov
adc
pop
mov
cmp
rcrb
adc
pop
movsb
inc
stc
mov
fdivrs
icebp
mov
fmul
push
sar
sbb
movb
sbb
call
mov
jne
or
adc
addb
daa
hlt
cmpsl
and
mov
pop
mov
repnz
mov
sub
adc
jl
xor
jmp
aaa
inc
sub
pop
in
in
and
andb
xchg
sbbl
lods
clc
pop
sahf
subl
push
aas
popa
shrl
ja
jo
sbb
scas
cmc
ds
inc
outsb
sbb
push
dec
int
cmpsl
add
xchg
hlt
adc
lahf
divb
repnz
dec
and
lret
mov
arpl
lcall
rcrb
cmp
jae
hlt
cltd
add
aam
fiaddl
jge
or
ret
mov
repnz
stos
int
shrl
mov
sub
inc
dec
mov
ret
insl
fsubl
in
addl
xor
or
enter
inc
push
nop
aas
push
js
mov
pop
mov
jno
lcall
pusha
push
je
enter
out
cmp
push
sub
ror
or
jb
jnp
pop
das
jle
ljmp
push
dec
adc
insb
jecxz
sahf
adc
xorl
xor
sub
mov
test
adc
pop
arpl
stos
lret
sbb
lods
scas
lock
add
adc
cmp
cli
into
es
test
xchg
incl
mov
push
dec
jae
add
loope
sbb
lahf
stc
add
add
sbb
repz
push
insl
in
hlt
out
xchg
and
pop
adc
cmp
mov
mov
jae
inc
pop
pop
mov
sbb
xchg
sti
mov
sub
push
cmpsl
addr16
int3
sub
dec
repnz
movsb
lods
pusha
add
mov
jl
ret
in
insl
sbb
mov
into
or
xlat
jecxz
loopne
mov
adc
hlt
push
mov
fcmovb
std
imulb
ficoms
mov
jle
gs
cs
test
lret
out
loop
mov
xchg
pop
leave
ficomps
sbb
das
lret
icebp
inc
cmp
iret
daa
xor
lock
pop
repnz
lds
mov
add
lahf
jno
popf
jno
pop
ss
jb
dec
push
stc
and
into
and
jge
cld
je
xchg
callw
in
aaa
inc
jge
popa
loop
aas
xor
lcall
xchg
inc
and
dec
mov
mov
xchg
pop
inc
test
xchg
rorl
insb
add
dec
inc
cld
lea
lcall
push
pop
shll
cwtl
jo
cwtl
repz
xlat
popa
jmp
sub
fsubr
dec
es
scas
ds
lods
sbb
or
lock
inc
std
fdivs
fbstp
bound
aas
clc
das
loopne
out
fnstcw
jle
xor
xchg
idivl
cwtl
cli
push
fwait
xchg
cmp
aad
xchg
mov
add
inc
outsb
sahf
inc
push
pop
testb
ret
add
mov
inc
push
xchg
imul
scas
mov
jo
add
xchg
test
dec
jmp
fwait
jne
cmp
mov
cmpsb
push
pop
mov
pop
loopne
outsl
fistps
cld
xor
or
mov
push
jb
inc
leave
sbb
movd
or
loopne
into
jmp
test
lds
ds
mov
jne
add
jmp
push
jae
lea
adc
pop
push
xor
xchg
pop
lret
sbb
testb
inc
dec
rorl
lcall
push
mov
repnz
rolb
pop
add
je
in
and
push
outsb
and
jp
jl
outsl
add
push
push
jle
bound
fists
jl
push
out
jmp
mov
repz
pop
fs
jnp
push
push
movsl
popf
clc
xchg
sarb
stos
ret
cli
sti
js
js
xchg
cs
movsb
bound
jl
jns
test
sub
mov
sbb
jno
test
fmul
push
sub
sub
cltd
sbb
mov
pop
jnp
sti
inc
lcall
jp
insl
int3
ret
pop
push
and
pop
push
jns
mov
shlb
lret
daa
mov
mov
xor
mov
push
push
cmp
push
loope
pop
mov
fisubs
imul
loop
pop
push
in
cmpsb
call
mov
pop
xorb
movsb
mov
js
dec
loope
dec
xchg
cmp
bound
mov
mov
push
loope
inc
jns
int3
cmp
xor
add
and
insl
loopne
mov
rcrb
lret
scas
inc
push
mov
push
out
movsb
pop
xchg
iret
jae
cli
pop
pop
movsb
addb
push
add
xchg
pop
fsubrs
mov
mov
shll
lret
sbb
inc
ficomps
movsl
ss
das
insb
gs
cmp
dec
testl
pushf
inc
sti
cmpsb
push
sbb
xchg
outsl
lods
pusha
cs
inc
sub
imul
into
mov
sahf
out
fsubrl
cli
popf
ss
addb
lods
xor
push
mov
sbb
sbb
mov
jmp
cmp
shlb
pop
or
ret
cmpsb
sbb
xchg
test
xchg
mov
xor
sti
push
mov
xor
add
mov
mov
add
dec
into
xchg
or
repz
sbb
fiadds
sub
lock
jno
test
enter
dec
sbb
mov
jge
mov
push
push
inc
cmp
sbbl
mov
sbb
ljmp
xor
ret
push
cmpsl
jg
cmp
movsl
pop
js
mov
and
add
enter
ljmp
add
into
lock
les
in
movsl
pop
sbbl
test
mov
sahf
jge
cmc
jl
pop
repz
jmp
add
daa
xor
loop
inc
adc
fimull
push
add
loopne
flds
cld
mov
jge
int3
dec
cmp
out
adc
pushf
add
lea
repnz
data16
int3
lds
mov
lods
js
add
add
imul
add
sbb
mov
sbb
sub
inc
inc
mov
mov
jns
push
pop
push
jp
mov
jns
mov
dec
adc
mov
push
cmp
or
lods
mov
cmp
adc
lea
ja
push
sub
mov
pop
mov
rorb
cmp
iret
adc
rcll
shr
inc
fsubl
or
loop
lock
jae
addr16
sbb
xor
adc
pop
jbe
pop
inc
in
mov
movsl
mov
daa
cmp
negb
repnz
adc
aas
stos
inc
dec
push
ja
divl
pop
and
out
aad
jne
xchg
add
xor
repnz
push
inc
adc
mov
orl
adc
jg
push
mov
shlb
push
inc
inc
xor
inc
fwait
jbe
push
mov
sub
and
inc
jecxz
push
call
push
mov
cmpb
sbb
ljmp
roll
shll
adc
repnz
pop
int
inc
cltd
xchg
and
sbbb
addr16
push
nop
daa
dec
scas
cld
mov
scas
add
pop
ret
inc
scas
popf
rcr
mov
or
cmpsl
dec
pop
xchg
mov
ret
adc
bound
sbb
shrb
cli
jno
xor
mov
mov
in
cld
sbb
inc
push
in
inc
mov
pop
loope
and
inc
mov
cmova
add
les
adc
sti
lcall
into
jecxz
rolb
sbb
mov
in
pop
aad
push
xchg
les
enter
aas
loope
mov
ljmp
pop
divl
cwtl
testb
enter
pop
jb
cltd
and
jo
repz
pop
push
and
add
mov
je
lcall
fidivrs
mov
lcall
jmp
inc
pop
into
sbb
mov
lcall
dec
out
mov
adc
mov
mov
sub
lock
dec
cmpsl
repnz
int3
push
jg
adc
loopne
xor
cmpsb
int3
adc
int
aam
xor
jmp
pop
push
sub
gs
mov
lds
repnz
and
jg
jle
ljmp
inc
or
mov
lret
xchg
roll
shll
cmpsb
call
cli
xor
incl
adc
addr16
sbb
mov
imul
addr16
js
sarb
xchg
pop
push
lods
scas
and
jecxz
jbe
xchg
inc
jns
xchg
jecxz
shl
push
xor
in
mov
xchg
cs
imul
xor
pop
lcall
lahf
ret
decb
int3
push
ja
lds
add
push
lahf
fimull
mov
ss
aam
adc
loopne
test
ljmp
jb
std
sbb
fidivrl
addl
cld
xor
and
pushf
sbb
lret
jg
in
and
repnz
daa
sub
xor
mov
jp
jmp
inc
shll
jno
hlt
jbe
add
mov
daa
out
xorb
mov
je
mov
lock
int
pop
push
push
jmp
inc
jo
jg
aaa
in
popw
lods
cmp
xor
fadds
add
imul
loope
sub
sti
aad
out
push
xchg
mov
lock
daa
rorl
inc
xchg
jmp
inc
fsts
inc
fisttpll
rolb
fidivs
fisubs
mov
and
jl
leave
push
aad
inc
mov
js
xor
shlb
adc
leave
jg
ja
xchg
jl
push
inc
mov
lods
mov
xor
hlt
cli
rcrl
push
aaa
xchg
inc
ds
xor
adcl
lock
push
mov
lds
pop
pop
out
popa
cmp
movsl
ret
mov
sbbb
insl
nop
or
or
sub
ljmp
sahf
mov
add
sbb
xlat
pop
dec
mov
mov
in
or
adc
xor
fstpl
ljmp
sbbl
inc
jge
inc
cmp
xchg
jl
mov
inc
mov
add
subb
push
xor
inc
xchg
out
xchg
roll
out
or
stc
mov
iret
pushl
cli
mov
ds
push
sub
cmp
mov
or
pop
mov
adc
fs
inc
out
enter
add
cmp
jg
add
fimuls
push
xor
jmp
cmp
xor
cmp
mov
adc
cmp
out
inc
clc
sbb
leave
fsts
cld
in
fcmovnbe
gs
lock
adc
cwtl
push
jno
xchg
inc
int
mov
mov
sbbl
popf
adc
lcall
add
ret
xchg
adc
into
mov
fdivl
push
bound
subb
aas
jne
movb
test
fisubrl
jle
std
repnz
gs
sarb
adc
in
and
out
add
daa
enter
inc
dec
cli
jo
fsubrs
jbe
push
test
mov
cmp
scas
or
pop
inc
cmp
mov
outsl
aad
test
pop
and
sbb
mov
lea
shll
jmp
jo
pop
xchg
push
adc
dec
cmp
outsl
fisttpll
jns
out
out
aaa
add
insb
or
push
nop
popf
insl
dec
push
test
repnz
lods
or
cmp
jge
xchg
push
jno
je
cmp
pop
fildll
imul
xchg
aaa
clc
mov
test
orl
fsubs
mov
jb
out
mov
xor
lods
leave
pop
sbb
loope
mov
sti
insl
cmp
bswap
jge
pop
jae
cmp
fsubl
in
jmp
sub
dec
lret
es
idiv
cld
sahf
lret
pop
xchg
fs
cs
inc
or
push
out
test
in
stc
cwtl
nop
leave
mov
mov
mov
loope
mov
test
xor
scas
inc
aaa
cmp
bound
inc
cmp
jecxz
add
pop
imul
pop
adc
mov
mov
jae
xlat
je
jb
jmp
inc
lret
fstpt
jns
inc
lret
pop
xor
xchg
sti
pop
add
cmp
nop
jns
test
and
add
adc
add
rorl
je
lret
adc
pop
jns
and
pop
shlb
rcrb
data16
fcmovne
add
pop
jle
mov
mov
sub
mov
xchg
push
call
and
pop
pop
cmp
sbb
fmul
icebp
and
jbe
test
sbb
clc
arpl
inc
mov
jne
lret
xchg
flds
xor
sti
jp
adc
mov
cmpb
cwtl
jmp
inc
addr16
mov
or
shll
mov
mov
mov
aaa
sub
rcrl
inc
lods
push
sbb
pushw
push
subb
sub
sti
shll
inc
mov
jecxz
xchg
push
mov
push
scas
lahf
cmp
mov
fists
pop
mov
sahf
test
lods
out
out
mov
cmpsb
lret
rorl
repz
ja
stos
and
arpl
push
adc
and
lret
stc
repnz
inc
inc
cli
xor
fisttpl
outsl
js
add
es
shrb
lods
fwait
xchg
jle
insl
or
aaa
pop
fdivrl
mov
cmp
mov
in
jae
and
leave
push
fcmovne
pushf
arpl
es
or
xor
push
ficoms
adc
or
outsl
mov
es
cmp
inc
aad
push
mov
jo
xlat
mov
add
sub
mov
mov
mov
cmp
mov
pop
lret
xchg
test
or
fbstp
cmc
loope
xchg
sub
mov
or
push
inc
ret
dec
out
mov
mov
push
xchg
and
jnp
sti
xchg
push
lds
stos
sbb
out
in
fmuls
arpl
jmp
mov
mulb
mov
ja
inc
jl
push
call
ja
mov
fnstcw
pusha
xchg
je
dec
adc
cwtl
xor
stos
add
dec
jnp
popf
ljmp
push
mov
and
out
cltd
loopne
aas
imul
mov
push
adc
notb
arpl
mov
push
mov
mov
or
mov
ljmp
sbbl
insb
xor
out
repnz
test
pop
pushf
test
inc
aam
call
or
and
adcl
jg
les
dec
mov
leave
lcall
adc
lods
push
sarb
adc
mov
adc
call
mov
push
xor
push
cld
jmp
out
pop
mov
inc
jmp
mov
outsb
cmp
add
mov
in
insl
jle
lret
xor
loope
dec
jae
aam
mov
mov
jge
inc
inc
mov
repz
ljmp
or
jbe
dec
xchg
push
test
sbb
dec
in
push
cmp
test
pusha
das
ficoms
paddb
adc
xor
inc
xor
xor
push
adc
int3
loop
cwtl
jp
push
sub
clc
xchg
push
jle
or
stos
xor
cmpb
lock
daa
mov
pop
jbe
mov
jo
mov
arpl
pop
in
mov
mov
neg
push
jbe
loop
xchg
jo
pushf
ljmp
or
mov
push
arpl
xchg
insb
loopne
adc
pop
sub
into
mov
mov
mov
xor
popa
lret
xchg
or
insb
jnp
movsl
adc
inc
pop
cld
mov
test
popa
stos
sub
pop
stos
shlb
repz
mov
jb
std
mov
insl
dec
sub
shr
dec
sub
rcrb
pop
pop
imul
int3
cmc
jbe
fstps
push
jp
adc
sbb
shl
data16
scas
push
sub
test
sub
pop
mov
test
fistps
xor
shl
rcrb
sbb
fsubrs
je
inc
imul
pop
stos
pop
jns
test
stos
cmpsl
repnz
jge
push
xlat
mov
out
ja
loop
call
aad
inc
out
call
aad
xchg
xor
adc
test
shll
sub
inc
fidivrl
test
call
cli
and
push
sbb
idivl
bound
mov
xchg
inc
push
cmp
ficoml
sbb
jne
jge
sub
shrl
dec
sahf
mov
std
ja
insb
mov
fsts
mov
lret
aam
fiadds
mov
xchg
adc
enter
iret
pop
rcrb
jns
push
push
loopne
scas
mov
enter
fdivr
dec
push
lods
notl
cmc
jno
mov
aam
pop
or
icebp
sbbb
scas
ret
xchg
jbe
jge
lahf
ljmp
dec
in
xor
lret
pop
mov
vcmppd
es
jmp
push
mov
dec
lods
add
dec
negl
push
push
cmp
ficompl
filds
push
sub
dec
cli
add
pop
jmp
lds
insl
mov
push
dec
xchg
imul
rol
stos
pop
aad
cld
jno
push
dec
mov
in
in
psubw
xchg
lods
jns
push
jne
push
stos
gs
pop
jge
cmp
ds
mov
into
out
mov
jle
mov
rorb
xor
pop
out
or
daa
mov
popf
cmp
fs
clc
push
push
xor
pop
jnp
out
dec
xchg
fdivp
push
out
call
das
jmp
mov
jmp
pop
jne
push
jns
sub
or
cmp
subb
call
jle
inc
call
cli
int3
xchg
jbe
in
jmp
and
inc
dec
arpl
mov
aam
in
test
push
mov
cltd
icebp
push
sbb
jmp
daa
cmp
sbbb
xchg
mov
bound
adc
push
push
mov
call
and
aam
lds
adc
add
mov
sub
push
add
out
rcrl
push
add
icebp
and
inc
mov
insb
cmpsb
jp
lea
sbb
mov
inc
sbb
mov
jge
fwait
js
ss
out
dec
adc
mov
sbb
ja
ss
cli
ret
das
xchg
cmp
and
pop
pop
in
fadds
divl
mov
ss
ss
and
ror
jmp
lahf
jno
dec
popl
fdivl
hlt
cmp
ljmp
mov
and
cld
jp
iret
pop
std
iret
xor
scas
push
in
repz
mov
dec
dec
movsb
sub
lds
icebp
inc
push
sub
xchg
daa
xchg
leave
jl
inc
daa
stos
xor
aad
mov
into
push
mov
out
mov
adcl
imul
lods
out
xlat
mov
cli
mov
inc
lods
roll
negl
lods
jl
or
jg
pop
xor
movsl
mov
pop
or
fwait
sti
push
mov
int
mov
sub
gs
clc
mov
adc
cmp
inc
lock
mov
scas
jmp
mov
ja
data16
push
pop
dec
mov
nop
std
lods
cmpl
rcrl
add
fimuls
pop
jl
scas
lcall
dec
aad
pop
push
or
xor
jle
lods
cmc
sbb
int
pop
push
int3
pop
jl
ret
pop
push
popa
sub
jne,pn
push
aam
je
push
push
mull
cmpl
inc
add
jecxz
pop
lcall
dec
movb
add
lret
cld
ja
fisubl
cmc
adc
out
cli
xor
es
rolb
movsl
cmpsb
dec
jmp
in
nop
dec
fistpll
movsl
out
or
mov
cld
and
int3
push
mov
dec
cltd
out
out
mov
cli
pop
aam
movl
or
sub
pop
mov
adc
pop
adc
and
imul
test
xor
sarl
les
dec
cltd
mov
push
inc
arpl
xchg
pop
lahf
mov
sub
mov
dec
jg
jg
lods
jo
xor
add
rol
add
push
pop
in
sbb
rcrb
and
jp
xchg
mov
lds
lahf
pop
cwtl
outsb
mov
fs
mov
out
xor
outsl
jecxz
pop
xchg
in
and
in
fwait
inc
and
mov
imul
dec
xchg
outsb
testl
add
dec
and
jb
jne
add
add
jecxz
sbb
enter
mov
movsb
in
in
das
in
lcall
adc
xor
mov
jmp
mov
pop
pushf
rol
inc
push
dec
push
in
mov
push
int
imul
cmpsl
xor
js
push
les
pop
add
and
int3
dec
pop
jmp
movsb
dec
mov
mov
sti
std
les
mov
pop
pop
push
xchg
shll
jg
xchg
aas
sti
and
cmp
jo
add
ja
mov
int
cmp
cli
jp
xchg
or
push
das
xlat
push
xchg
test
jl
or
sti
or
loopne
and
push
int
xor
jae
mov
or
mov
pop
jge
jl
xor
mov
jno
js
xchg
testl
test
pushf
icebp
pop
imul
pop
pop
sub
xor
sub
fcomp
mov
sbb
sub
cmpsb
loop
or
fimuls
insl
cli
mov
or
gs
sub
mov
or
rorb
out
mov
xchg
push
push
or
pushf
gs
movsl
push
xor
cwtl
sti
shl
pushf
stc
pop
insb
mov
insb
sbb
pop
rcrl
xlat
shlb
ja
mov
in
popa
mov
cmp
notl
lcall
fistl
push
mov
mov
call
data16
std
out
imul
subl
out
mov
jo
mov
and
jno
inc
je
and
pusha
sub
in
lea
negb
inc
ja
std
push
clc
pop
fidivrs
xchg
test
cltd
or
and
adc
aam
sbbl
sub
divl
mov
out
loop
mov
cmpsb
mov
lods
jo
mov
dec
rcr
outsb
hlt
sbb
mov
push
jg
adc
lret
dec
shll
pop
inc
dec
lock
mov
jle
jo
std
push
ret
ds
aas
lcall
xchg
jbe
mov
shll
push
out
push
fisubrl
mov
test
jmp
es
xchg
add
hlt
pop
repz
lock
xor
xor
test
add
nop
rolb
ds
sub
mov
das
fwait
xor
popf
mov
adc
inc
shll
ret
addb
leave
aam
pusha
lret
add
ljmp
js
and
popf
xor
and
mov
sarb
xor
pop
sbb
jb
jbe
std
fldpi
cmpsl
pop
mov
lahf
mov
sub
mov
jecxz
ljmp
jmp
push
fs
or
inc
add
jne
sub
xchg
ret
sbb
je
xchg
dec
mov
xor
ret
or
in
je
mov
dec
jb
mov
xchg
stc
inc
aam
negl
psraw
outsl
rcrb
cmpl
scas
imul
daa
pop
imul
mov
xchg
and
add
stos
or
insb
mov
mov
xlat
dec
mov
mov
aad
std
dec
jg
add
push
adc
insb
repz
cmp
push
imul
or
aad
in
dec
adc
dec
stos
jg
adc
jg
fisubs
popa
add
cmp
shlb
pop
inc
sbb
mov
pushl
ljmp
cmp
sbb
lea
cmc
out
andl
stos
cmp
inc
aas
into
adc
psubw
addr16
out
inc
mov
outsl
jae
mov
insb
or
rorl
fsubrp
cmpsl
add
pushf
movsb
sti
mov
outsl
mov
add
push
xor
leave
into
push
call
xchg
jp
bound
jno
inc
mov
mov
and
xlat
stc
fadds
dec
push
sub
add
cmpsl
aam
cli
outsl
push
cltd
push
rclb
cs
daa
negb
jg
out
dec
jne
ret
addr16
repz
sub
imul
dec
mov
ret
ret
sbb
jo
cmpl
jbe
push
pop
adc
push
jle
int
adc
push
leave
or
and
outsb
jecxz
in
push
mov
inc
cmc
aaa
mov
jbe
jno
pop
es
push
mov
push
cmp
sub
addr16
in
push
xchg
inc
cmp
mov
adc
aad
adc
in
jl
jge
cmpsb
cmp
dec
mov
cmp
mov
dec
rorl
test
lock
pop
movsl
xchg
mov
repnz
mov
or
sti
arpl
mov
sbbb
pop
push
or
jae
push
nop
push
dec
mov
rcll
pop
jae
mov
xlat
sub
movb
inc
and
bswap
inc
xor
stos
jae
scas
jnp
add
fcomp
scas
dec
js
rcr
sbb
mov
fisttps
scas
dec
dec
call
cs
je
sub
out
int
fwait
xor
jge
ja
lret
pop
std
xchg
inc
ret
dec
or
clc
xorl
in
fistl
mov
mov
adc
mov
cli
dec
push
movsb
xchg
dec
push
inc
add
js
arpl
sbb
sub
pop
cmp
sub
cwtl
stc
inc
push
mov
push
in
fcmovnbe
jle
imul
mov
push
jno
push
movsb
push
gs
inc
add
loope
ret
mov
sbb
dec
test
iret
std
mov
rcrl
pop
out
cmpsb
xchg
and
cmp
sbb
fwait
mov
test
adc
cld
sub
jb
mov
aam
stc
mov
in
cmp
mov
jno
fwait
outsl
mov
inc
sub
jg
test
jl
jb
sub
sti
sbb
shll
add
jmp
xchg
int3
dec
cmpsb
add
fidivs
das
out
sbb
cld
fs
mov
arpl
fst
sbb
adc
fimull
cmpsb
xchg
out
sub
daa
sbb
in
dec
adc
add
sbb
adc
imul
mov
into
ja
jmp
es
or
fs
mov
gs
push
cmc
lock
push
icebp
xor
xor
stos
into
add
adc
or
jg
push
add
int
mov
imul
cmp
inc
test
aas
xor
in
and
int3
dec
xor
push
mov
xchg
cmpl
out
leave
gs
fiadds
in
sti
xlat
int3
push
adc
gs
mov
cmp
pop
xor
or
cli
cmp
jg
cmp
sub
ficompl
out
push
xorb
leave
adcl
aad
push
orb
out
aaa
stc
add
inc
sbb
imul
mov
sub
sub
add
test
pop
lea
push
or
push
je
imul
adc
sub
insl
xchg
pop
cwtl
insb
sub
lea
cmovo
lret
push
add
negl
imul
xchg
stos
lret
movsb
mov
jb
lods
cmp
lcall
orb
std
mov
movsb
push
cmp
cmpsl
aas
sbb
sbb
int
jo
lret
xor
or
cmp
sahf
adc
arpl
pop
or
pop
hlt
jmp
jbe
push
movsl
and
lret
les
adc
jge
mov
inc
push
es
or
sbb
mov
popf
mov
mov
test
pushf
lahf
mov
and
push
xchg
jp
adc
sub
jae
popf
xor
lret
sarb
inc
ret
pusha
dec
in
adc
icebp
aam
dec
enter
or
push
mov
cmp
sub
lods
jne
lock
imul
xchg
enter
ja
xchg
sub
subb
insb
loopne
pop
mov
addr16
cld
lods
and
shll
or
mov
and
insb
mov
iret
adc
dec
adc
adc
sbb
dec
jmp
das
push
aad
imul
aad
pusha
xchg
jle
sbb
cmp
mov
jno
mov
sbb
or
push
jge
cltd
push
pop
aad
cs
mov
imul
mov
adc
dec
jb
popf
jg
add
in
inc
inc
jle
xor
adc
std
cmp
adc
xchg
jle
sbb
dec
xor
mov
adc
cld
pop
loope,pn
push
lcall
into
insl
arpl
outsl
aad
stc
sub
cmp
fldl
or
sub
and
popa
outsl
cmpsl
scas
xor
mov
cli
pop
sbb
add
xchg
add
sub
dec
sahf
jbe
imul
fstl
push
repz
dec
fucomp
nop
daa
test
jb
repz
mov
cld
nop
and
lods
fistpll
mov
gs
push
mov
mov
rolb
cmp
out
shrb
enter
push
cwtl
pop
sbb
mov
fdiv
andl
hlt
xlat
sub
divl
js
cmp
add
dec
lcall
xor
int3
jae
adc
pop
in
test
inc
sub
popf
xchg
ret
xor
nop
jo
and
xor
xchg
jo
insw
mov
out
in
push
movsb
sub
dec
dec
das
faddp
ds
call
sti
int3
bnd
and
push
aas
mov
cmp
std
dec
int3
mov
and
mov
das
out
xchg
add
out
jg
fs
mov
jmp
dec
jns
imul
and
push
jbe
sbb
mov
das
cmpl
and
mov
push
gs
inc
push
mov
pushf
sti
notl
cmp
xlat
jle
mov
loop
lds
mov
test
nop
rclb
cmpsl
insb
out
jge
xor
adc
cmp
or
or
pop
pxor
xchg
cs
lea
cmpsl
mov
repnz
adc
dec
test
js
and
dec
mov
lds
es
and
pop
sbb
cmp
add
mov
add
add
xchg
dec
aaa
xor
std
cmpsb
xchg
sahf
je
scas
and
inc
pop
std
std
mov
push
aaa
lret
sbb
jae
mov
mov
cltd
call
push
jl
or
dec
push
scas
dec
cmp
sbb
repz
fdivs
inc
out
lret
fistps
sarb
std
inc
cmp
jno
jns
inc
outsl
outsl
stos
sti
mov
into
out
mov
cmp
or
js
cmp
lret
inc
mulb
jo
cmp
test
inc
sbb
inc
sbb
xchg
cwtl
jae
shlb
addr16
lret
into
flds
pop
addb
addr16
mov
adc
test
jne
jecxz
cwtl
ja
jge
xor
sbb
gs
xor
xor
jae
fdivr
or
icebp
inc
in
in
sbb
stos
lock
in
add
add
sar
jge
push
lret
lock
rorb
jecxz
jg
push
enter
into
sub
dec
hlt
fsubs
add
xchg
sbb
sbbb
popf
adc
leave
push
pop
push
dec
dec
cmp
adc
je
int
into
pop
adc
jo
mov
pushf
push
mov
loop
xchg
fbld
lcall
mov
inc
loope
stos
adc
add
jle
mov
imul
dec
loopne
pop
push
out
fs
push
and
aad
cld
xor
scas
test
shl
inc
cmp
mov
pusha
add
fstps
mov
lock
stos
in
into
test
out
lock
cwtl
sub
inc
imul
push
pop
sub
fisubrl
jle
jmp
fisttps
sarb
xchg
push
roll
sbb
jo
dec
aaa
ljmp
push
adcl
dec
push
cltd
js
pushf
mov
cld
sti
arpl
jg
jp
sbb
in
paddb
mov
mov
xor
or
xor
dec
fists
jle
adc
jb
cmpsb
or
ja
imul
add
mov
xchg
mov
sbb
jno
cmp
xor
dec
mov
stos
pop
data16
cmp
scas
call
sbb
mov
mull
push
push
adc
jg
lret
movsb
cmp
les
dec
sub
inc
sbb
addb
mov
std
notb
lahf
aas
aas
test
notb
mov
mov
jge
xor
es
mov
inc
inc
lods
movsb
cmpsb
cli
mov
imul
xor
sarb
push
adc
mov
sahf
sbb
push
sbb
pop
ret
dec
jnp
jge
std
sub
arpl
les
push
and
stos
pop
mov
scas
cmp
lret
inc
push
popl
push
sub
jl,pn
test
jmp
jp
int
cmp
aad
sti
test
sub
arpl
cmp
mov
repnz
sub
add
into
fldt
test
xor
dec
mov
mov
repz
fldenv
mov
js
ret
adc
add
outsb
stc
mov
push
loopne
pop
lret
cmpsb
cmpsl
ja
pop
jl
push
push
fcomi
int
clc
pop
es
cmp
cmp
sbb
in
jecxz
arpl
or
adc
mov
push
sti
adc
scas
pop
cmpsl
lahf
push
in
int3
movsb
pop
test
stc
int3
cltd
ret
arpl
out
daa
push
push
adc
xor
popf
adc
repz
lods
fsubrl
idivb
push
fists
repz
xchg
jbe
sbb
and
push
mov
pop
pusha
rolb
aad
int
jo
cmp
xlat
call
push
rorb
outsb
xchg
dec
pusha
inc
pusha
int3
ljmp
inc
and
pushf
jmp
in
aaa
push
jmp
outsl
jo
rcrb
cli
xor
cmp
shrl
sub
mov
and
sub
add
das
andb
mov
stos
pop
orb
cltd
test
mov
inc
and
mov
xor
shr
mov
cmp
sbb
adc
or
cli
and
popf
sbb
sti
ljmp
mov
push
or
aad
adc
mov
sbb
jbe
int
je
push
mov
push
mov
and
push
mov
mov
neg
fisttps
aam
mov
pusha
dec
inc
mov
gs
push
adc
gs
jb
lods
in
popl
lret
jae
daa
data16
in
push
or
shrl
xchg
sbb
mov
call
add
sbb
js
sbb
inc
lods
add
inc
or
push
push
test
and
mov
add
loope
fnstsw
mov
dec
cmpsl
add
xchg
cmp
int3
dec
xor
push
mov
sub
and
shr
inc
ja
pop
sub
mov
mov
push
setbe
pop
jp
pop
sub
wbinvd
cwtl
es
xor
cmp
jo
addr16
mov
and
add
arpl
stc
in
into
sbb
and
mov
hlt
arpl
cmp
arpl
fstpt
fsubrs
or
rclb
sbb
iret
xchg
pop
mov
inc
push
mov
adc
xchg
imul
mov
imul
lds
mov
pusha
lock
or
dec
call
and
push
xchg
jmp
shl
lret
inc
hlt
add
and
or
pop
xchg
jge
loope
mov
inc
jne
mov
repnz
jmp
ror
xchg
std
adc
push
add
mov
cmp
cld
inc
push
xchg
fs
int3
xorl
xchg
xor
mov
arpl
jle
adc
insl
ret
pop
cs
pop
push
in
enter
leave
add
push
nop
xor
push
bound
mov
mov
xor
cltd
lods
inc
jecxz
cmpsb
ljmp
lods
mov
and
mov
push
jle
scas
or
leave
out
int3
mov
pop
sahf
jo
push
int3
mov
ja
xchg
out
repnz
jmp
shr
insb
and
cltd
cmc
lcall
in
lahf
or
cmpsb
fs
lds
iret
arpl
outsb
cmpsb
movl
lods
mov
lahf
mov
ficoml
icebp
push
mov
popa
ret
inc
stc
mov
ret
pop
xchg
push
cmp
iret
movsl
scas
repz
sbb
cltd
int3
cwtl
mov
xor
fwait
lods
jge
ljmp
xor
sarb
jmp
jmp
jno
inc
xchg
add
mov
shl
icebp
lret
mov
cld
xchg
sub
stc
mov
movsl
aad
pop
dec
inc
mov
out
sbb
sbbl
pop
rcll
or
pop
push
cld
es
or
xchg
or
push
mov
cmp
call
ja
lahf
fldl
imul
jl
xorl
cmc
adc
dec
cmp
push
out
cltd
cmp
lods
fmull
jno
call
add
xchg
bound
sbb
jbe
popf
daa
mov
xchg
lahf
rcrl
inc
inc
push
cmc
fistps
mov
pop
cmp
lods
inc
sub
lods
push
or
pop
mov
dec
adc
xor
outsb
pop
lods
pop
out
jb
cmp
std
xchg
jae
out
rcll
sub
adc
dec
xor
adc
xor
lcall
lea
xor
stos
add
jle
adc
int
aam
xor
add
xchg
stos
lahf
cltd
adc
sbbl
push
pushf
dec
lret
jecxz
sbb
dec
ss
push
sbb
mov
popa
and
sub
push
jge
call
inc
add
daa
inc
mov
add
loopne
sbb
xorb
popa
add
push
push
xor
pop
jg
pop
ljmp
pop
les
aas
inc
lahf
js
mov
lea
jg
bound
iret
sbbb
mov
push
outsb
jl
sub
push
sub
jp
dec
sahf
lock
xor
pcmpgtb
dec
pop
adc
add
mov
xor
ret
sbb
cmp
aaa
adc
push
fistps
mov
pushf
loopne
ret
dec
popf
push
jae
jecxz
pop
inc
pop
jecxz
inc
sub
sub
and
arpl
jl
mov
mov
jl
and
xchg
lds
push
fildl
push
and
or
clc
xor
add
sarl
repz
push
xchg
fisubrl
stos
addb
pop
mov
or
dec
in
fiaddl
out
ja
fidivrl
xor
xchg
mov
xor
lcall
outsb
inc
lea
loope
mov
xchg
cli
test
in
cli
cmp
cli
nop
mov
sub
scas
lret
pop
test
aas
mov
pop
sub
lret
xor
xchg
vpsubw
cmpsb
std
pop
shll
outsb
or
pop
add
sub
test
daa
cld
pop
inc
lret
jecxz
jmp
loopne
ficoms
or
mov
pop
cmp
je
in
ljmp
bound
xlat
test
ret
lahf
test
xor
iret
popf
es
xchg
ljmp
in
aad
pushf
icebp
or
addr16
je
sub
aas
mov
loop
sub
and
in
popa
jo
rcl
push
and
pop
xchg
movsl
insl
stc
in
or
sarb
lods
test
int3
out
stos
adcb
mov
mov
and
mov
xor
lret
pushf
cwtl
outsb
fists
cli
adcb
or
inc
sbb
bound
lahf
sbb
pushf
scas
popf
mov
stos
cld
sbb
in
andb
and
dec
out
aam
mov
scas
mov
std
test
out
aad
inc
daa
sub
add
mov
jp
sarl
lea
push
aad
xchg
pop
ljmp
je
fucom
aad
xchg
cwtl
adc
xchg
pop
fnsave
rcrb
xchg
jb
mov
push
fmuls
sbb
decl
in
popa
lcall
fnstenv
mov
arpl
or
pop
push
mov
adc
js
mov
push
pop
jmp
mov
xchg
in
adc
insl
jecxz
jb
mov
lds
dec
or
adc
xorb
xchg
daa
aas
and
jbe
fs
test
cmp
lret
add
lret
xor
shr
cwtl
jno
popf
iret
lret
sbb
jp
icebp
jge
js
mov
push
mov
test
loope
xor
mov
cmc
mov
pop
ror
test
xchg
test
push
inc
mov
lret
ret
out
cmpsb
jo
test
adc
jo
add
stos
or
adc
xchg
pop
cltd
out
test
into
inc
scas
adc
jl
mov
andl
cmpl
or
sub
mov
inc
and
or
push
jnp
pop
test
stos
pushf
mov
fwait
out
fsubs
cmp
test
cli
or
add
xchg
and
jnp
lret
pop
cltd
and
shrb
mov
bound
inc
inc
int
ret
and
stc
sbb
mov
xchg
std
or
in
shlb
sbb
jge
in
mov
and
mov
mov
xchg
adc
adc
lret
sbb
pushf
cmc
in
dec
dec
pop
dec
push
push
push
ret
cmpsb
enter
addr16
sub
mov
adc
mov
orl
dec
mov
rcl
mov
iret
ljmp
mov
or
dec
in
xchg
pop
js
lret
push
and
fldl
ror
cwtl
cmpl
sbb
add
shrl
and
inc
aaa
xor
outsb
mov
roll
enter
xchg
jp
std
int
mov
sbb
pop
outsb
cmp
cmpsl
fwait
xchg
mov
lret
jp
inc
imul
mov
in
das
xchg
scas
lcall
fdivr
mov
mov
cli
lahf
enter
dec
xor
sub
xchg
mov
cmpsb
in
call
jecxz
dec
pop
jge
mov
mov
adc
rcrl
cmp
clc
orb
subl
adc
fcoms
pop
and
cmpsl
sbb
cli
mov
setno
bnd
push
sbb
and
mov
mov
sbb
nopl
jo
xchg
nop
movsb
lods
lcall
xlat
inc
repz
push
jg
test
jmp
xor
jg
dec
sti
fcoms
lret
subps
cld
dec
push
fcoms
cmp
dec
mov
mov
mov
ret
xor
out
cmp
ja
add
push
lret
inc
pop
jbe
cwtl
popf
lret
sbb
and
sti
jecxz
int3
xlat
cli
cmp
mov
sbbb
pop
lock
das
xchg
clc
push
mov
test
adcl
jmp
fisubrs
sub
cltd
das
outsb
jne
test
jmp
mov
xor
xchg
push
out
mov
js
outsl
fwait
popa
fbld
shrb
and
push
stos
cmp
pop
xchg
pop
scas
cmc
shll
loope
lea
mov
push
add
das
jae
mov
sbb
xchg
icebp
movsl
add
add
and
cmpsb
mov
les
data16
or
pushf
pop
adc
cmp
in
adc
dec
xchg
cmp
fwait
mov
stc
push
leave
or
cltd
iret
mov
pop
cmp
xchg
sbb
repnz
sub
cwtl
cmp
adc
cmpb
and
sahf
cwtl
mov
imul
dec
mov
movsb
shll
mov
loop
cmpsl
fstpl
insl
ret
cmp
mov
ficompl
mov
mov
jbe
mov
ss
add
pop
mov
xchg
push
ljmp
ja
jp
mov
out
cmp
mov
inc
or
inc
into
jns
aaa
or
outsb
idiv
mov
mov
pop
icebp
mov
enter
in
sar
incl
aaa
scas
ffree
imul
xor
add
cmp
inc
subb
stos
movsl
sti
and
cmpb
and
loopne
push
jae
sbb
jae
out
test
push
dec
pop
outsl
cmp
shll
lock
cmp
xchg
aam
mov
fcoms
imul
lret
jmp
js
xchg
lods
adc
pusha
nop
or
ret
outsl
cmpsb
cmp
mov
cmp
das
out
inc
jg
fisubrs
ret
pop
fisttpl
pop
push
push
dec
push
andb
pop
leave
jno
dec
jae
cwtl
mov
shlb
aam
ds
dec
lahf
add
enter
mov
mov
call
dec
mov
mulb
shrl
rsm
jnp
mov
int3
iret
jno
das
outsb
mov
or
mov
push
mov
lea
mov
scas
or
jmp
mov
pop
cltd
loope
dec
mov
lret
insl
xchg
ljmp
sbb
xchg
inc
sbb
push
stos
adc
fcom
mov
cmpsl
loopne
adc
push
xor
mov
shrl
sbb
ss
stos
pusha
test
stc
push
xchg
cmpsb
nop
popa
inc
cmp
sti
add
fs
mov
cld
jnp
ja
sub
and
xor
inc
sbbb
shlb
mov
mov
sahf
mov
mov
cmpsl
mov
jns
add
fdivrp
clc
stos
sbb
pushf
xlat
mov
and
sbb
mov
inc
sbb
lods
out
aas
sub
or
or
aas
jecxz
push
ret
divl
imul
sub
sub
inc
lock
mov
in
lret
out
mov
jb
sbb
ss
mov
ret
lea
push
imul
lock
cld
and
push
sub
xchg
int3
sub
enter
or
add
mov
xchg
je
scas
sbb
mov
vpmulhw
pop
dec
leave
mov
dec
push
das
lds
and
dec
sub
icebp
jnp
jg
xchg
dec
pop
call
ja
pop
cmp
and
mov
pop
add
movsb
cmp
ja
js
adc
push
add
sub
dec
inc
mov
push
out
add
stos
sahf
or
push
gs
inc
sarb
mov
push
push
push
cld
nop
lock
mov
pop
add
sti
stos
push
xchg
scas
call
push
shr
push
xchg
popa
fwait
mov
sub
cmp
cld
cmp
pushf
movsb
dec
mov
jg
mov
add
pushf
cld
xor
lahf
sahf
imul
lock
lods
loope
stos
mov
adc
es
dec
icebp
inc
dec
push
mov
inc
adc
into
ljmp
fwait
push
pop
inc
scas
leave
mov
cmp
and
and
dec
sbb
adc
push
nop
cmpsb
in
bound
aam
xor
cmp
push
mov
jecxz
int
movsb
repnz
adc
lcall
sub
push
xchg
xchg
out
cmpsb
push
push
mov
mov
stc
jmp
addr16
jge
outsl
xor
out
adc
into
mov
pop
jmp
ret
jge
mov
xchg
jle
mov
xchg
pop
je
dec
adc
jns
lea
test
dec
fidivrl
jp
fwait
test
add
mov
mov
test
out
inc
ss
out
dec
divb
aaa
add
mov
fsubl
inc
js
mov
push
subl
jne
and
dec
jle
pop
call
sbb
lret
pop
data16
gs
je
and
enter
adc
int3
sbb
cmp
sar
mov
jmp
sub
pop
cmp
pop
xor
lahf
notl
or
jb
xchg
pop
mov
ret
add
push
xchg
mov
push
xor
jecxz
movsl
lret
lahf
mov
mov
gs
fwait
cmpsb
scas
inc
xchg
sbb
inc
aad
pushf
mov
out
enter
lret
xchg
jecxz
dec
xor
mov
test
push
ds
adc
mov
adc
aaa
cmp
xor
sub
add
mov
or
ja
sub
sub
in
es
inc
sahf
mov
pop
call
jae
push
scas
lods
mov
rclb
cltd
push
cltd
mov
pop
mov
jnp
xor
xor
sbb
adc
pop
test
sbb
pop
pusha
mov
das
jp
sbb
push
add
andl
into
mov
repnz
xchg
andl
fdivrl
mov
cmp
cmpsb
xor
mov
cmp
aas
cmp
sar
and
dec
jmp
into
pop
push
adcl
inc
pop
aad
das
mov
hlt
add
jmp
call
iret
and
jbe
add
mov
push
cmp
popa
cltd
xchg
mov
jge
cmp
int
insb
jns
in
mov
push
movsb
es
call
lret
insb
dec
xchg
xor
jno
dec
decl
jmp
push
ljmp
push
movsb
or
stos
cmp
push
pop
out
mov
lods
cld
cld
push
adc
pop
mov
ret
pushf
mov
sbb
cmpsl
mov
inc
or
fidivs
cmp
loop
repz
imul
dec
nop
movsb
sar
add
sahf
shr
popf
xor
sbbb
test
or
test
je
fisttpll
aad
pop
jb
dec
dec
jp
sub
xchg
sub
add
cmp
in
cmp
stc
and
movsb
push
aam
push
aaa
sub
imul
fdivrs
stos
xor
iret
ds
movsl
imul
cwtl
mov
sub
jb
dec
inc
inc
push
loope
xchg
sub
in
rcrl
ljmp
lods
rorl
scas
aad
es
and
jmp
push
clc
jmp
pop
xchg
push
movsb
into
das
mov
in
clc
mov
std
mov
je
jmp
lock
fcompl
cs
cmc
mov
imul
pushf
xchg
into
repnz
jmp
shlb
or
adc
sub
xor
sub
in
mov
inc
mov
xlat
or
fiadds
mov
mov
addr16
dec
loop
out
cmc
imul
mov
adc
cmpl
dec
pop
arpl
xchg
jae
inc
ljmp
jno
or
test
popf
xor
push
mov
lea
inc
lret
or
mov
leave
mov
cwtl
daa
lahf
test
xor
xlat
in
icebp
ss
repnz
sub
inc
xchg
cli
shlb
iret
aaa
mov
mov
sarl
mov
jnp
jmp
and
cmp
cwtl
push
cmpsl
add
jecxz
iret
inc
or
ds
out
test
sub
xchg
test
jno
aam
xlat
cmp
testb
or
stc
addl
push
test
mov
xor
insb
je
mov
outsl
das
xchg
jecxz
xlat
jnp
dec
pop
jg
mov
adc
lods
movsl
inc
xchg
lahf
popf
sub
xorps
imul
adc
std
mov
dec
mov
in
ja
jp
xor
repz
test
sbb
bound
jo
adc
loop
ret
mov
mov
mov
push
loope,pt
loop
mov
sub
sbb
xchg
push
xchg
push
addr16
dec
cmp
cmp
adc
jmp
filds
popa
call
cmpsl
xor
pop
xchg
mov
mov
cmp
mov
jnp
and
test
insb
pusha
push
es
imulb
and
push
mov
or
or
pop
mov
fstps
fstpt
aas
xor
pop
mov
fucomi
jmp
mov
pop
lds
add
mov
lret
loopne
cmp
adc
add
idiv
and
mov
adc
in
pop
cwtl
lods
jbe
imul
pushl
loope
cmp
jmp
fistl
push
stc
test
outsl
pusha
dec
fisubrs
jmp
mov
std
mov
mov
addl
dec
shll
mov
pop
add
repz
jp
dec
jne
or
pop
xor
lods
dec
inc
or
mov
pop
js
out
dec
out
xchg
int3
faddp
push
popa
lahf
movsl
or
je
insl
add
jno
jno
add
mov
push
lret
imul
xor
push
inc
inc
repz
inc
lahf
pop
dec
mov
push
jp
dec
test
lea
pop
cld
lahf
ret
dec
sbb
pop
loop
in
inc
loopnew
mov
vpxord
mov
outsb
adc
ret
iret
fsubrs
shll
inc
xor
jne
insb
xchg
aaa
inc
rcrb
ds
or
fdivs
loop
outsl
push
jo
faddl
add
mov
daa
adc
in
push
inc
sub
loop
jne
hlt
xlat
sbb
add
call
sub
lret
std
mov
mov
jg
negl
negb
inc
mov
aas
and
or
xor
or
add
sub
cmp
push
andb
and
pop
xlat
adc
inc
icebp
pushf
ja
xchg
loop
xor
cmc
addr16
je
std
lods
dec
lods
sub
sbb
mov
into
negb
xor
mov
addr16
test
sbb
cli
inc
dec
jno
imul
mov
push
xchg
das
ljmp
mov
xchg
xchg
insb
xchg
fidivrs
push
cmp
pop
jne
pop
and
mov
push
xchg
sbb
mov
jno
ret
and
js
pop
in
push
adc
imul
lret
fldenv
push
xor
xchg
ljmp
cmp
jmp
es
xchg
jno
sti
jno
jbe
movsl
mov
jle
dec
test
mov
mov
les
mov
shrl
popa
pushf
push
fwait
mov
gs
and
rolb
pushf
jl
mov
sbbl
sbb
pop
push
fs
repnz
pop
mov
pop
loop
cmp
add
xorl
inc
add
xchg
test
jmp
jnp
lcall
out
jbe
push
pop
insl
jns
repz
cmpsl
xchg
jae
ret
sbb
and
pushf
loop
jg
cmp
adc
adc
icebp
xor
stc
cld
in
pop
or
cli
lret
jns
aas
or
hlt
lock
outsb
xor
pop
outsl
dec
imul
mov
jmp
inc
int3
fcoms
cmp
int
ss
push
iret
lods
stos
push
insb
mov
pusha
xchg
dec
adc
cmp
xlat
cmpsb
test
pop
dec
stos
pop
lret
test
addb
pop
cmpb
inc
pusha
adc
xchg
nop
jbe
fistpll
std
and
fs
add
mov
xor
fists
xchg
mov
rorl
jo
fs
cmp
cmp
cmp
xlat
jae
fisubrl
fdivrl
loope
dec
jnp
sub
push
jae
or
mov
inc
fiaddl
pop
popf
clc
shrb
loop
testb
and
adc
push
pushf
stos
nop
outsl
loope
inc
sub
jo
cli
dec
add
in
cmpl
lret
imul
xchg
jle
es
inc
das
adc
cmp
dec
fsubrs
adc
and
movq
arpl
dec
jno
lahf
mov
imul
jne
jl
fdivl
jge
or
aad
inc
fsts
shrb
jb
add
push
xor
mov
adc
jne
inc
jmp
sub
daa
int3
fidivrs
fs
daa
icebp
mov
jb
pop
xor
je
inc
adc
aad
mov
pop
insb
mov
fdivs
mov
cld
mov
ljmp
test
repz
sbb
lcall
shufps
xor
cmpl
idiv
add
mov
cmpsl
mov
jmp
dec
sbb
mov
les
jbe
push
out
mov
call
faddl
fwait
icebp
pop
stos
roll
xor
mov
shlb
testb
pop
ss
sbb
shll
mov
add
shrb
jge
imul
repz
sub
dec
cld
or
pusha
loopne
rcrl
mov
jg
les
scas
and
fdiv
repz
mov
xchg
jge
xor
sbb
lea
scas
lahf
xor
lods
int3
mov
mov
fwait
in
loop
divl
xlat
jge
and
cmp
inc
sbb
insb
or
imul
mov
daa
ljmp
shrl
add
mov
roll
dec
popf
jmp
add
lods
test
in
ret
xor
ds
jne
icebp
add
jno
inc
jnp
idivb
ss
add
pop
or
and
pop
jae
mov
push
mov
sub
cmpsb
loopne
fbld
sbb
mov
cli
xor
mov
adc
pusha
lea
adc
outsl
and
shrl
and
and
push
sub
jns
popf
sub
movsb
fdivl
xor
jg
sub
cmovns
inc
std
xchg
in
andb
lret
and
idivl
jno
in
dec
or
sbb
push
mov
loope
hlt
jp
pop
dec
insl
and
xchg
test
sbb
or
mov
xlat
fiadds
iret
imul
mov
int
mov
mov
nop
arpl
dec
push
loop
cwtl
inc
mov
xor
adc
xchg
cmp
lds
scas
jmp
cli
add
mov
in
sub
sbb
pop
push
out
aaa
push
addr16
xor
int
mov
das
cmpsl
daa
nop
mov
stos
mov
fdiv
push
adc
and
sbb
mov
fsubr
push
sbb
icebp
add
jl
out
repz
imul
inc
push
and
arpl
sti
inc
and
fstpl
sbb
inc
hlt
sahf
fs
out
gs
dec
pop
fs
call
sbb
bound
xchg
xlat
or
cmc
sahf
std
shll
mov
lock
cmp
xor
push
pop
addb
lock
out
fisubrs
mov
test
add
stos
imul
dec
jno
pushf
and
dec
add
ret
fidivrl
inc
ja
adc
insl
mov
add
imul
mov
or
or
bound
dec
add
and
mov
xor
or
dec
addr16
pop
jo
or
sbb
xchg
xor
dec
lcall
sbb
lret
add
or
clc
ret
push
or
xor
test
mov
mulb
outsl
fldl
mov
add
jbe
mov
dec
orb
push
lds
xchg
shll
cmpsl
dec
jae
push
das
xchg
stc
mov
adc
push
push
jnp
or
jge
fisttpl
fisttps
stos
outsb
or
jmp
das
jg
sahf
add
mov
or
mov
mul
pusha
xchg
cmpb
pop
push
xor
popf
nop
dec
add
mov
arpl
xchg
int3
cmp
imul
or
xor
bound
cmpsb
lret
rclb
mov
call
cmp
mov
mov
addr16
jmp
inc
mov
mov
jnp
mulb
dec
leave
xchg
es
test
adc
scas
mov
or
inc
test
js
sub
jns
jbe
push
or
sbb
out
mov
xchg
rol
cmp
ret
dec
scas
and
scas
out
mov
push
insl
shll
inc
jmp
ficompl
xor
pusha
adc
mov
aas
repz
pop
movsb
mov
push
orps
leave
and
lcall
stc
xchg
shl
loop
add
jns
fsubrs
add
xlat
leave
xchg
jo
lods
ss
insb
and
push
mov
cmp
push
sub
sub
mov
lods
sub
in
xor
dec
cmp
sti
xchg
lret
in
fmull
repnz
mov
push
xchg
loop
jae
mov
cmpsb
xor
push
arpl
ja
inc
push
jmp
push
sub
sbb
gs
sbb
mov
fldcw
lcall
leave
nop
pop
mov
pop
stos
pop
cmp
rcll
push
out
sti
or
push
fidivrs
push
cmp
outsl
xchg
mov
jb
rcrl
addr16
xchg
popa
outsl
ss
loopne
pop
xor
push
jne
sub
xorl
daa
gs
clc
popa
pushf
cmc
dec
mov
enter
mov
pop
cmpsl
dec
add
mov
fisubs
xchg
pop
nop
enter
imul
fstl
fiaddl
in
mov
xchg
bound
pop
fistps
xchg
xorl
jmp
inc
adc
push
dec
mov
push
lods
or
lcall
out
sub
mov
push
pop
sti
icebp
cltd
pop
dec
jg
das
mov
and
pop
insb
adc
inc
dec
pop
pop
mov
or
ret
fcompl
sbb
sub
mov
test
loope
mov
loop
dec
jo
or
jg
sbb
lock
push
int3
xlat
dec
push
xchg
mov
xchg
mov
mov
push
add
gs
mov
jecxz
mov
mov
or
sbb
cld
xchg
mov
ds
hlt
inc
push
push
and
and
stos
ja
lock
inc
call
adc
shl
pushf
add
push
push
xchg
cmp
dec
sbb
rclb
in
cltd
dec
inc
jo
pop
mov
push
jne
sbb
mov
push
enter
add
icebp
std
adc
or
movsb
push
jns
scas
gs
sub
push
xchg
xor
int3
lret
xor
pop
in
addr16
adcb
pop
sub
mov
ss
sbb
fwait
xchg
jg
dec
out
pop
gs
test
test
sbb
iret
cltd
add
adc
jp
push
xlat
cmp
fstps
aam
int
pop
sbb
aad
call
jns
push
xor
push
fcom
sarl
iret
cmpsb
clc
test
repz
mov
and
xchg
cmpsl
rcll
sti
or
xor
and
push
jl
and
aaa
sub
cmp
inc
mov
pop
mov
sbb
ja
mov
cmpb
inc
cmp
int3
mov
call
mov
ss
push
or
loopne
mov
pushf
fisubl
scas
and
pop
bound
push
or
addr16
out
mov
pop
jb
xchg
push
test
aam
popa
adc
lret
push
jne
imul
rorb
pushl
pop
dec
pop
sbb
push
pop
fsubs
fnstenv
ja
sbb
dec
push
mov
dec
or
fdivrs
jae
aaa
leave
in
cmp
cmp
mov
icebp
bound
dec
stc
cmp
cmp
adc
mov
inc
pop
push
dec
add
fsubrs
xor
push
scas
dec
cmp
and
push
gs
inc
add
repz
lahf
lods
or
sub
sbb
mov
and
arpl
data16
fwait
push
aad
jle
push
lock
sub
mov
pop
int
push
ret
jmp
mov
inc
stos
popl
xor
lcall
mov
rcrl
pop
fs
movsl
outsb
push
mov
mov
in
roll
xchg
test
int3
invd
pop
test
jmp
mov
xchg
ret
dec
subl
ret
sub
adc
ret
cmp
lds
out
add
out
mov
sbb
jle
xchg
xor
mov
negb
out
inc
rcll
pop
lcall
cs
popf
push
js
pop
xor
ss
or
addl
cmp
sbbb
sbb
adc
pop
sbb
dec
jge
cwtl
sub
cmp
pusha
pop
inc
hlt
addr16
in
pop
push
sbb
xchg
or
inc
jbe
inc
add
jp
in
mov
push
mov
sub
outsb
jb
xchg
rol
dec
sar
js
mov
daa
out
mov
in
xor
mov
xchg
lahf
sub
sbbb
mov
test
sub
xchg
ss
outsb
mov
cld
ss
xor
cmp
jle
in
ja
sbb
xchg
ret
into
addr16
and
data16
cmp
jg
lcall
imul
outsb
mov
es
inc
mov
lea
xchg
dec
mov
jl
or
and
cld
and
adc
jg
fcmovu
sbb
jecxz
push
mov
mov
and
pop
xchg
inc
pop
arpl
scas
pop
push
push
mov
sub
pop
je
cmp
mov
dec
xchg
xchg
push
pop
sbb
pop
mov
rcl
inc
jb
out
incl
xchg
stos
and
push
insl
inc
and
push
mov
roll
add
and
imul
or
add
mov
push
divl
jne
popa
mov
add
push
dec
dec
and
filds
inc
cld
popa
ret
xchg
jb
pop
es
push
insl
fdivr
xor
and
pop
xor
pop
fwait
mov
sbb
rcrb
movsb
in
xor
nop
arpl
mov
add
enter
mov
add
aas
scas
xchg
mov
in
shl
xchg
sbb
inc
divl
mov
xchg
loopne
push
mov
or
hlt
sub
xchg
jb
testb
lock
test
xchg
inc
fildll
call
dec
mov
lahf
pop
arpl
jno
lock
push
xlat
mov
outsb
cld
les
scas
or
lea
paddsb
pop
cs
aad
push
xchg
sub
jg
mov
push
sub
sub
repz
dec
inc
negb
scas
sub
mov
mov
or
jns
pop
mov
push
cmp
dec
xchg
imul
stc
jge
mov
test
inc
cmovbe
imul
sub
dec
std
push
xchg
sub
inc
mov
leave
cltd
push
je
pushf
bound
or
out
jo
mov
sub
xor
mov
frstor
mov
jmp
sub
shrb
push
popf
jle
and
lods
mov
cs
subl
clc
test
jle
fcmovbe
cwtl
fidivl
fcmovnbe
jae
pop
loope
in
shl
mov
inc
mov
mov
dec
pusha
dec
or
cmp
cli
loope
fdivrs
inc
cmp
es
add
sbb
push
mov
out
lock
push
cmp
mov
hlt
xchg
xor
fwait
gs
mov
push
add
jne
push
and
fnsave
xor
insb
cmc
popf
pop
inc
pop
mov
icebp
pop
in
push
mov
inc
into
and
sub
or
pop
push
xchg
clc
pop
pop
adc
push
push
sub
mov
mov
add
adc
and
cmp
std
scas
adc
cs
fistpl
xchg
cmc
addr16
adc
repz
xchg
mov
jae
rcrb
test
insb
mov
sbbl
jmp
mov
or
sahf
nop
add
loopne
std
xor
aas
stos
addr16
scas
cmp
adc
pop
adcb
add
push
mov
scas
test
popf
mov
cmp
mov
out
repz
mov
mov
adc
pop
out
or
in
add
out
push
cmpsl
jne
loope
std
and
mov
cmpsl
scas
or
cmp
in
add
movsb
fs
sbb
jp
adc
test
push
ljmp
or
cmp
aaa
add
fmuls
cmpsl
nop
pop
js
fisttps
mov
sbb
rorl
fists
ljmp
mov
test
xchg
pop
and
lret
imul
scas
mov
insl
push
popa
inc
mov
pop
lcall
fbld
loope
ljmp
cli
inc
or
push
sub
or
push
addr16
fnsave
popf
and
push
jo
mov
das
fdivr
add
sub
and
outsl
sbb
mov
push
ds
fdivrs
mov
xchg
mov
xor
cli
cmp
pop
mov
in
ror
fistpl
lods
pop
or
test
mov
stos
cmc
push
jg
jo
xchg
add
sarl
push
mov
pop
add
push
insl
loop
imul
lcall
outsl
int3
fxch
iret
sub
les
jbe
xchg
rclb
pop
outsb
cs
pop
adc
call
jmp
xchg
dec
in
push
sub
push
cmp
mov
sbb
sub
mov
adc
and
add
push
nop
or
dec
lods
notl
test
fildl
call
movsl
cmpsb
xor
sbb
lret
adc
or
call
xchg
mov
cld
pop
divb
xchg
ret
bound
das
mov
cwtl
xor
adc
mov
orb
lahf
cmpsl
ss
push
mov
mov
out
call
xchg
mov
mov
push
push
sti
not
pop
and
sbb
cmp
in
sbb
xchg
sub
jle
aad
jae
push
add
cmp
test
popa
aad
lret
xchg
rcrb
or
jge
inc
aam
cmp
jg
jne
or
dec
xchg
inc
loop
and
push
cltd
add
in
xchg
dec
jno
stos
ja
cmpsl
out
repz
ss
cmc
and
and
inc
and
mov
xchg
ljmp
or
adc
cmp
cmpsl
hlt
lahf
xchg
jmp
inc
cld
cmp
test
mov
pop
lds
rorl
xchg
pop
scas
aas
push
push
cmpsb
mov
adc
outsl
imul
sub
sbb
xchg
push
or
pop
mov
push
insb
sahf
xchg
lret
das
dec
add
mov
mov
cmp
xchg
push
xchg
aad
or
sub
xchg
mov
mov
mov
decb
xor
addl
ljmp
cmp
stos
adc
cwtl
in
pop
iret
ja
sub
pushf
lock
pop
shlb
xor
mov
mov
cmp
movsb
nop
outsb
roll
stos
mov
sbb
shll
and
mov
je
shl
and
inc
jg
mov
fs
loop
dec
frstor
jg
inc
inc
or
mov
inc
add
ficomps
sub
roll
pusha
push
repz
jne
mov
hlt
ficoms
pop
outsb
fmull
adcb
cmp
loopne
inc
add
inc
shrl
dec
lods
pop
or
leave
pop
mov
mov
das
mov
nop
ja
cmp
mov
lea
out
xor
xchg
jecxz
xchg
int3
sbb
push
xchg
aam
mov
aas
jle
push
imull
stos
hlt
mov
pop
andl
cs
rcrl
push
shll
ja
js
test
imul
cs
out
lea
add
movsl
je
push
xchg
jb
mov
aaa
into
into
int3
xorl
jle
add
inc
std
in
cmp
movsl
je
and
scas
or
iret
fsubl
movsb
sbbl
imul
lea
xchg
pop
push
xchg
push
sbb
repz
xchg
lcall
mov
push
jp
jae
push
dec
js
sbb
xor
insb
mov
out
mov
rcll
loopne
aas
xchg
lret
call
cmp
jnp
daa
inc
cmpsb
rcll
ss
cwtl
pusha
push
and
add
inc
lret
inc
or
sub
cltd
test
iret
pop
iret
jle
or
push
insb
je
mov
test
inc
jo
mov
addl
xchg
dec
mov
mov
pop
bound
jnp
push
pop
and
xchg
hlt
push
pop
iret
cmc
sub
push
lahf
ja
test
les
ret
xor
xchg
lods
mov
je
xchg
ds
outsl
into
out
mov
push
pop
and
mov
mov
push
adc
pop
pop
xor
pushw
xor
test
mov
inc
inc
lds
insb
fisubs
imul
repnz
cmp
paddsw
hlt
popa
mov
outsl
cmp
adc
fs
inc
sub
xor
xor
icebp
stc
arpl
mov
inc
push
test
sub
mov
cmpsb
and
cwtl
mov
leave
push
outsl
push
es
fmuls
push
fsub
pop
adc
jne
xchg
mov
repnz
lcall
xchg
lahf
in
dec
inc
xor
in
fcmovnu
mov
hlt
enter
and
pop
push
mov
mov
sbb
addr16
stc
je
call
pop
loop
jl
filds
addr16
shll
sti
push
cmpsb
popf
jne
shlb
jno
sarl
xor
mov
pop
shrb
and
repz
fld
mov
loopne
js
dec
inc
sub
leave
jp
and
pop
cmp
cmp
lret
movl
cmp
repz
in
fs
push
and
mov
adc
jp
push
cmc
movsl
fdivrs
jae
icebp
jo
scas
data16
sbb
call
mov
mov
sub
ret
shll
aad
mov
jbe
leave
adc
and
mov
call
in
out
mov
mov
movsl
cmp
cmp
pop
jge
inc
and
out
dec
add
rolb
cmp
inc
push
inc
cmp
or
push
hlt
mov
into
ds
lods
and
cltd
xchg
dec
ss
mov
and
mov
xchg
xor
adc
fsubs
popl
scas
cmp
js
andb
mov
shll
add
rcl
jl
stos
data16
and
xchg
fmuls
mov
jmp
mov
mov
xor
emms
ficoml
je
arpl
sbb
mov
mov
mov
sbb
ret
add
ja
ret
mov
jnp
std
out
cmp
mov
xor
jmp
inc
fs
es
dec
aaa
xchg
inc
movb
fwait
push
add
adc
test
sbbl
nop
xor
jae
dec
mov
adc
jns
mov
add
cmpsb
decl
and
gs
sti
jge
inc
cs
mov
lret
data16
xchg
inc
lock
flds
cwtl
dec
add
xor
loop
bound
mov
ss
test
ret
push
cmp
push
xor
dec
xchg
xchg
adc
test
inc
daa
pop
adc
dec
test
cmp
sbb
mov
sub
outsl
pop
in
nop
xor
decb
sahf
mov
adc
mov
jnp
dec
xor
arpl
sti
int
pop
jg
sub
rcr
xchg
push
adc
fisubs
subl
and
out
cmp
dec
jge
inc
pop
notl
adc
out
and
jl
js
cmp
icebp
pop
into
jl
pusha
xor
cmp
adc
movsb
and
dec
jp
push
push
sti
lods
xchg
add
jmp
mov
ret
adc
mov
sbb
and
pop
lock
add
or
scas
or
xor
fcoms
push
nop
fisttpll
and
and
jno
idivl
dec
push
daa
shlb
aad
sbb
jmp
jg
decb
popa
pop
jg
stc
clc
adc
xor
and
jmp
add
test
mov
popa
push
cs
adc
mov
orb
fsub
xlat
mov
fsubr
mov
adc
sbb
push
ja
sbb
dec
push
imul
and
mov
out
inc
test
pop
imul
jne
hlt
test
add
clc
lea
ja
mov
sub
sub
mov
mov
movsb
mov
loopne,pn
or
sbb
mov
cltd
sbb
jbe,pn
mov
lea
mov
in
jne
sahf
xor
pop
fmull
aaa
pushw
inc
enter
andb
lahf
imul
ja
scas
push
stc
mov
cmp
aad
mov
xor
mov
testb
lret
out
and
dec
inc
movsb
xor
lret
add
lock
cmp
xchg
shrb
xor
shl
xor
je
fnstenv
pop
pop
push
shll
mov
mov
out
sbb
lret
xchg
mov
mov
mov
fistl
fistpll
mov
rorb
cli
mov
sub
filds
js
sbb
jo
lods
int3
adcl
sbb
popf
fiaddl
stc
test
jno
push
jne
test
loope
add
ljmp
adc
cmp
les
push
roll
inc
outsl
clc
pop
lret
push
mov
sub
dec
pop
dec
push
mov
icebp
stos
or
xchg
repz
xchg
mov
les
rcl
xchg
mov
das
cmpsb
jae
cmpsb
sbb
cpuid
negb
testb
ljmp
call
stos
roll
leave
mov
pop
das
sub
popf
pop
sub
xchg
cmp
sbb
ds
js
mov
movsl
or
adc
std
sbb
lahf
imull
cld
imul
xchg
adc
sbb
cmp
test
enter
pop
xchg
out
mull
push
in
outsb
sub
push
loop
loopne
push
or
notl
jne
in
xor
jns
outsl
jns
push
push
and
add
out
les
xorl
lahf
cmp
shll
cmc
or
jge
fnstsw
jmp
bound
mov
test
sbb
popa
pop
mov
jns
into
into
jne
mov
pop
jmp
jecxz
push
xchg
sub
in
fstps
mov
dec
push
xchg
popf
xchg
fs
in
xchg
pop
ds
jmp
xchg
test
push
and
icebp
lods
pop
add
notb
aam
mov
gs
adc
xchg
xchg
or
mov
gs
or
pop
inc
mov
xchg
push
or
out
sub
ss
cmp
inc
jg
lds
jmp
outsb
out
sub
test
fstps
in
in
out
out
xchg
test
cmpsb
cld
jne
repnz
addb
aam
add
mov
rclb
push
pop
inc
jo
xchg
and
sbb
loope
aaa
push
call
bound
mov
inc
jle
mov
mov
fadds
xlat
jge
inc
mov
mov
dec
cmp
jnp
adc
or
sub
aad
xchg
dec
and
mov
nop
adc
pop
mov
leave
pop
pop
imull
sub
jnp,pt
jnp
ret
jb
cwtl
mov
fimuls
mov
aas
cmp
xchg
scas
adc
sbbb
int3
dec
jnp
fcmovnu
in
push
mov
and
popf
in
pop
push
dec
nop
jecxz
test
mov
adc
xchg
mov
push
fwait
out
stos
mov
jnp
in
add
mov
push
scas
sub
sti
sub
adc
lock
out
xor
or
mov
push
jnp
aas
lods
cmpl
aas
int
das
mov
cmp
addps
frstpm(287
cwtl
out
lcall
pop
pop
inc
movsb
sub
popf
ja
lea
or
scas
movsb
add
xor
pop
jecxz
shll
les
scas
mov
divb
mov
int
mov
pop
lds
lea
aas
std
jno
daa
jp
fcmovbe
cmpsl
mov
rclb
int
aam
xchg
addr16
pop
xlat
pop
xor
aam
add
fisubs
jl
mov
sbb
imul
in
mov
aam
or
or
mov
push
jl
aam
and
js
pusha
pop
cmp
mov
cmp
cs
jb
adc
push
xor
jge
jecxz
mov
cmp
push
pop
xchg
inc
mov
xchg
jmp
push
push
mov
lcall
and
jecxz
xchg
jle
jmp
add
pop
jae
subb
mov
and
or
addr16
and
aad
imul
sub
sub
mov
sub
sub
xchg
cmpl
scas
pop
jbe
in
negl
es
xor
or
test
and
dec
jne
lea
pop
shrb
push
out
lock
cmp
mov
push
or
xchg
push
movsl
arpl
ds
pop
dec
addr16
roll
sahf
in
aad
and
sbb
jae
test
fs
xor
push
pcmpgtb
scas
je
fildl
in
inc
lods
orb
and
test
push
js
cli
test
rclb
add
addr16
fld
xor
add
lds
dec
das
in
push
xchg
js
push
jge
into
int3
rolb
xor
inc
insb
inc
add
out
mov
xchg
jnp
adc
jno
jl
nop
in
lds
movsl
inc
and
xchg
fcoms
jne
rorb
inc
cmc
icebp
and
push
sub
mov
xorb
push
mov
cmp
in
and
outsl
pop
mov
imul
loope
sbb
jmp
call
test
adc
pop
or
outsl
aam
jg
cmovp
jnp
leave
add
pusha
pop
mov
dec
cmpb
dec
lret
push
mov
pop
xor
mov
aaa
mov
mov
stos
jns
ret
fnstcw
mov
testb
cs
xor
adc
lea
pop
bound
into
dec
push
int
xchg
cmp
pop
cmc
jo
xorl
mov
ds
mov
xor
insb
mov
mov
sahf
jnp
addl
scas
nop
popa
mov
mov
add
popf
out
test
jns
stc
sub
jno
pop
ja
ret
ja
inc
jnp
or
jmp
inc
xchg
cs
out
int
or
enter
and
mov
decb
mov
xchg
daa
scas
orl
sub
pop
adc
xor
dec
push
int3
adc
loopne
scas
mov
cmp
push
mov
mull
pop
or
jne
ja
lods
js
xlat
sub
cli
add
and
xchg
test
add
sbb
loop
in
movl
or
ret
inc
mov
xchg
mov
das
pop
in
jae
rcrb
xchg
adc
cmp
enter
cld
cmp
dec
repz
popf
fcmove
fisubl
xchg
mov
dec
dec
mov
mov
negl
cld
push
mov
pusha
rol
and
and
pop
mov
dec
push
mov
lods
xchg
or
push
add
cmp
roll
rcrl
and
mov
push
mov
cs
add
mov
aaa
xor
data16
mov
add
fisttpll
or
inc
adc
popa
xor
mov
sbb
inc
popf
sub
xchg
push
fadd
pusha
push
jne
add
inc
push
dec
ret
cmc
mov
xor
xchg
pop
add
adc
push
or
pusha
movaps
xor
mov
cmp
enter
cmp
hlt
lret
addr16
cmpsl
je
int
aad
pop
rolb
insb
cmp
push
fcomi
scas
addr16
sub
push
fs
mov
jnp
xor
lods
cmc
push
add
test
pop
inc
clc
mov
fwait
mov
dec
sbbb
popf
lock
dec
fcompl
pop
subb
addr16
ror
loop
or
xchg
pop
es
cld
loop
or
xor
xchg
sbb
xor
pop
arpl
sub
adc
andb
mov
movsl
mov
test
filds
hlt
fmul
mov
aas
push
gs
test
xor
test
pop
inc
push
sbb
movsb
xor
push
xor
xchg
pop
clc
or
jbe
dec
push
mov
push
xchg
sub
negb
sar
mov
jb
jecxz
xor
sbb
adc
cmp
aad
in
dec
lods
mov
xor
scas
push
xor
cwtl
jecxz
sub
mov
les
loope
pop
push
mov
sbb
cmpsl
enter
sbb
ficoml
nop
or
inc
xor
or
cwtl
and
xchg
cmp
jge
out
call
dec
inc
shr
popf
mov
adc
pop
inc
jns
pop
cmpb
inc
sbb
mov
push
jo
cmp
sub
outsl
loopne
lahf
dec
inc
in
mov
lock
loop
loop
cmp
test
xor
sbb
jge
push
push
jno
sub
aad
add
xor
push
pmulhuw
adc
scas
pop
pop
in
out
or
cmpsb
or
xchg
push
gs
and
aam
outsl
dec
repnz
data16
ss
adc
xor
xlat
ja
ds
mov
cmp
xor
xchg
lret
mov
lods
je
test
insl
in
in
aad
in
push
ret
push
adc
add
iret
and
aad
mov
pusha
call
stos
mov
iret
adc
lds
adc
mov
push
pop
imul
push
or
inc
int
nop
nop
loop
cmp
push
jno
pop
orb
cs
push
inc
xor
mov
mov
aam
and
mov
out
lds
push
test
add
cmpsb
jae
mov
xchg
push
out
dec
pusha
ss
lahf
and
inc
push
pop
sahf
mov
sub
addr16
sarb
and
or
push
call
xor
add
bts
or
cmp
add
cs
jns
ljmp
shrl
out
mov
sti
mov
movsl
sti
inc
divl
cmc
or
inc
or
into
mov
das
pop
jl
fimuls
add
je
clc
push
mov
push
xchg
xor
icebp
sub
mov
imul
ret
movsb
push
cmp
int
fdivrp
and
ror
mov
les
xchg
pop
test
adc
cmpl
mov
mov
bound
or
cmp
dec
das
mov
adc
int
pop
icebp
xor
push
mov
mov
std
aas
call
inc
mov
push
jge
and
testl
ds
pop
rcl
sub
lock
into
sub
pop
lret
inc
pop
add
jmp
push
cmp
div
push
sub
pusha
repz
or
mov
push
inc
fmul
lret
loop
push
xchg
stos
out
das
test
scas
jmp
daa
lods
adc
xlat
aad
and
scas
std
adc
adc
mov
call
rcrl
loope
mov
int3
cmp
pop
jne
mov
lret
sti
mov
dec
lods
out
out
mov
out
or
dec
aas
mov
jecxz
xor
cld
jmp
inc
mov
out
jmp
or
arpl
rorb
test
xor
jl
sub
sub
sbb
lods
test
xchg
dec
ss
fisubrl
test
stos
outsb
out
js
jg
pop
and
xorl
out
jmp
aad
je
adc
ret
pop
xchg
jno
cmp
or
jne
cmp
xor
mov
into
sahf
and
ds
lds
xchg
shrb
mov
lock
sbb
xor
cmc
orb
inc
cmpsl
into
mov
mov
jno
fs
jbe
xor
lret
cli
mov
adc
xlat
shrb
fnsave
test
push
mov
lea
cmpsl
cmpsb
xchg
inc
or
xchg
jae
sti
mov
or
ja
sti
jo
int
mov
sub
inc
ds
pop
pop
sub
inc
aas
fsubl
imul
clc
inc
jo
gs
or
popf
ljmp
out
dec
adc
mov
je
cmc
ja
cs
rcrb
fnstcw
adc
sbb
in
cmp
cmp
cmp
cmp
xor
pop
fisttpll
ss
or
cmp
int
fidivrl
mov
push
mov
ljmp
pusha
add
bound
jge
mov
push
mov
lcall
fistpl
push
xor
clc
popf
lcall
mov
loope
or
fcmovnbe
add
push
xchg
sbb
std
add
push
push
fs
movl
shr
xchg
cld
das
rorb
cmp
pop
sahf
shl
sub
cmpb
loopne
inc
jge
ljmp
mov
xlat
ja
out
das
sti
mov
std
pop
cmp
loopne
xchg
mov
sbb
in
lahf
cmp
mov
sbb
andl
push
xor
cmp
sar
outsb
cmp
es
sub
add
push
lods
movsl
sub
stos
sbb
jae
mov
out
sub
lret
add
jl
subb
dec
es
or
addb
rcr
pop
test
push
push
iret
adc
shrb
pop
xchg
mov
jg
pop
xor
mov
sbb
mov
xchg
das
sbb
cli
insb
cld
mov
jle
pop
sbb
ja
mov
mov
mov
dec
sub
xchg
lock
sub
ret
mov
cli
and
xchg
in
sbb
push
sub
sbb
and
pop
jle
fisttpll
dec
sub
mov
cmpsb
xchg
mov
ret
sbb
jle
xchg
sbb
rclb
mov
jp
aam
add
add
push
add
adc
fistpll
sbbl
insl
sahf
mov
add
and
movb
and
popf
jecxz
sahf
stos
mov
sbb
mov
daa
inc
jbe
push
xor
sub
pop
jne
pop
dec
ror
lea
pushf
imul
jno
lods
fldt
aaa
mov
fildl
lods
out
jg
pop
aas
jmp
xor
testb
adc
pop
mov
or
insl
mov
xchg
pop
mov
push
or
jne
icebp
xor
dec
bound
xlat
into
rcll
xor
cld
xor
adc
or
jb
shll
lret
and
je
popf
mov
sub
rolb
shl
test
add
mov
ljmp
pop
push
mov
pop
jns
add
pushf
and
dec
inc
xlat
das
sub
mov
std
addr16
movsb
jp
cmp
mov
cmpsb
jne
jo
shlb
mov
loope
dec
xlat
mov
mov
movsb
jg
xchg
add
lret
fwait
int3
jecxz
push
pop
lods
push
addb
pop
mov
fs
stos
sub
adc
jg
mov
jno
adc
scas
fwait
cmp
push
imul
xor
mov
pop
cmpsb
lock
fistl
rolb
adc
fmulp
mov
repz
sarb
mov
cltd
adc
sbb
mov
pusha
adc
jle
insb
lahf
xchg
jb
aaa
pop
inc
or
daa
lods
jg
pop
jle
inc
mov
dec
xchg
inc
test
cmp
adc
call
lcall
mov
int
adc
and
mov
adc
pop
mov
and
and
inc
lea
cmp
xchg
cmp
sub
imul
call
sub
mov
dec
mov
and
aaa
jbe
push
jge
adc
dec
push
jnp
add
or
std
scas
cmp
jg
popf
mov
addr16
mov
sbbb
mov
inc
mov
or
xor
movsb
jle
jge
push
stos
scas
cwtl
loope
stos
mov
rcll
push
ljmp
mov
mov
pop
movsb
sahf
inc
mov
mov
gs
add
stos
test
dec
xchg
lahf
fiadds
push
cmp
test
shll
mov
test
out
aaa
xor
jle
les
push
inc
inc
push
cmpsl
or
mov
cmp
mov
mov
mov
sub
mov
pop
pop
lahf
les
sub
add
xchg
fsubl
scas
outsl
adc
out
or
push
add
lahf
stos
loopne
shl
lcall
jg
dec
mov
push
test
insb
negl
out
push
sbb
mov
lock
clc
xor
jae
inc
fbld
mov
ror
or
lds
xor
imulb
repnz
orl
jmp
add
jo
js
ficompl
cmp
add
mov
int3
movsl
push
fiaddl
push
out
sti
inc
data16
jo
sbb
mov
inc
push
inc
outsb
xchg
loopne
jno
shrb
push
imul
shll
loopne
es
sti
pop
mov
into
pop
pushf
aaa
push
popa
mov
stos
pop
xchg
or
test
imul
sbb
rolb
test
std
cli
test
ds
push
xchg
sahf
neg
adc
jmp
jne
sub
xchg
add
pushf
mov
aad
pop
and
pop
xor
js
dec
rcr
sbb
loop
inc
pop
mov
out
mov
jecxz
add
xor
sub
hlt
cmc
fldlg2
mov
mov
shr
push
add
dec
lret
cmpsb
sbb
xchg
out
mov
enter
std
sti
movsl
or
xlat
inc
dec
loopne
inc
sarb
fcomp
out
sti
xor
lock
push
jne
testl
outsb
cwtl
and
loopne
jno
ds
les
jnp
xchg
ret
adc
hlt
and
lea
iret
mov
lahf
lcall
cli
adc
xor
loope
addr16
jb
adc
cmpsl
cmp
cmc
and
addr16
adc
cmp
sub
test
daa
mov
ds
dec
pop
loop
aam
pop
mov
pop
lret
mov
xor
nop
or
inc
cmp
dec
jmp
sub
movsb
daa
lret
inc
push
popa
lahf
lods
adc
inc
add
mov
sub
adc
add
lret
hlt
pop
mov
jbe
sbb
scas
pop
mov
ljmp
jbe
adc
dec
xchg
sub
lret
xlat
xlat
sti
push
add
push
cltd
mov
pop
in
jno
push
shrl
jmp
add
pop
ficompl
cmc
jno
xchg
sbb
xchg
addl
arpl
push
inc
dec
sub
outsl
mov
sub
out
in
in
jge
lea
xor
rcrl
xchg
mov
test
cmpsl
js
faddp
jae
mov
loope
xor
fmull
fs
in
lea
inc
push
xor
adc
push
mov
jmp
push
add
and
jbe
inc
push
cmp
int3
xchg
sbb
sbb
jae
sbb
or
rcl
inc
je
adc
out
fists
gs
sub
add
or
sbb
clc
push
or
ja
lret
push
ficomps
cvtdq2ps
mov
addr16
add
jns
lods
iret
inc
es
fsub
dec
fsubs
jb
xchg
jmp
dec
jb
mov
out
insl
aaa
mov
int3
sub
cwtl
push
into
pop
dec
sub
mov
clc
add
or
mov
sbb
or
mov
adc
or
mov
stos
cli
sub
pusha
lret
imul
adc
push
and
nop
push
fildll
leave
fnstsw
jb
inc
xor
enter
add
call
daa
cld
cs
outsl
pop
xorb
sub
xor
stos
and
mov
jae
mov
cmpsb
ds
je
fistpll
xchg
xor
sbb
sub
mov
add
cs
arpl
jl
mov
out
in
dec
lods
lret
arpl
lret
add
mov
inc
roll
mov
xor
scas
out
push
and
push
push
xchg
sbbb
rorl
mov
enter
push
dec
add
fsubrl
cld
pop
fiadds
sub
in
nop
fwait
jne
aam
xor
in
scas
hlt
mov
ds
mov
inc
push
push
scas
rclb
xchg
inc
sub
adc
inc
xchg
adc
idiv
cs
mov
pop
lods
sub
adcl
mov
lcall
cmp
arpl
loope
mov
loopne
pop
jmp
xor
push
mov
repz
add
ret
data16
ljmp
mov
es
fmull
adc
sub
es
mov
push
or
movd
inc
xchg
mov
sahf
test
shr
rolb
push
mov
clc
rcll
aad
rcrl
ljmp
mov
out
cmp
bound
shl
sahf
mov
lods
imul
push
xchg
dec
mov
mov
mov
stc
add
out
test
jg
movl
mov
fidivrl
lock
test
xchg
push
push
fidivrl
sub
ret
jp
xor
in
addr16
flds
or
mov
scas
loope
data16
repnz
outsb
pop
movsl
xor
in
stc
clc
and
lcall
xchg
fcoml
and
out
sar
out
lods
ret
hlt
mov
jno
in
aas
aam
mov
pop
repnz
push
inc
mov
cld
mov
into
arpl
sbb
arpl
xchg
push
cmpb
sub
fimull
mov
push
outsb
pop
xchg
test
ficoms
aad
xlat
rorb
iret
iret
pusha
aas
xchg
popa
jp
inc
and
mov
repnz
jno
pushf
inc
rcrb
cmpsb
sub
cmp
ds
mov
dec
data16
jae
push
add
xor
cmp
shl
mov
jb
adc
or
mov
jbe
xlat
movsb
inc
nop
lea
cli
push
add
pop
mov
adc
rorl
es
rcrb
push
jae
xor
mov
push
push
jg
fwait
pop
das
xor
cmp
hlt
int
repz
push
cmp
stos
push
sbb
cmc
pop
pop
and
aad
lahf
out
jecxz
rcll
hlt
fcomps
sti
fdivr
and
push
jg
and
loope
or
dec
mov
xor
sub
arpl
stc
mov
inc
mov
int
or
hlt
or
jle
xlat
ret
cli
adc
hlt
mov
adc
stc
dec
push
cld
cmpsb
in
jnp
pop
stc
sbb
add
xchg
pop
push
adc
sbb
dec
dec
xchg
arpl
mov
jmp
push
fisubrl
pop
sar
mov
rorb
fcom
sahf
sbb
mov
pop
add
int
lcall
rol
inc
mov
stos
sbb
repnz
cwtl
mov
push
cmc
and
sbb
pop
jns,pn
ds
stos
sbb
dec
push
sub
outsb
pop
cmp
test
pop
pop
imul
cld
cltd
push
in
mov
xchg
mov
xor
lods
divb
or
outsb
jae
ss
sub
mov
xchg
and
push
xchg
jb
pop
dec
rorb
push
sbb
push
mov
sti
lcall
sbb
mov
xchg
fidivs
mov
mov
mov
pop
daa
std
mul
xchg
push
je
out
mov
cli
outsb
out
adc
mov
scas
movsl
outsl
mov
mov
or
pop
sub
dec
call
cltd
push
out
xor
into
imul
xor
retw
or
shll
bswap
dec
pushf
sbb
xor
icebp
pushf
dec
repnz
add
or
mov
inc
cmp
jne
xchg
bound
mov
insb
cmp
sbb
xchg
xchg
je
pop
adc
sbb
ja
imul
push
xorb
push
out
pop
hlt
jp
imul
cli
movsl
int
loope
subb
add
popf
cld
in
xchg
mov
sbb
popa
call
aad
out
dec
cmpsb
sbb
rcll
jg
push
inc
movsb
adc
jecxz
daa
mov
jg
xchg
sbb
mov
lods
pop
xor
mov
popf
mov
mov
scas
out
jb
add
add
aas
push
dec
dec
enter
movsl
mov
lretw
add
cmp
cld
or
scas
inc
jne
and
xor
gs
sti
popa
dec
cmp
and
in
inc
shll
pop
leave
lods
enter
mov
lahf
popa
pop
pop
sbb
pop
repz
jo
dec
xchg
lods
xor
psubsb
dec
or
shll
in
push
jle
jns
int3
sub
add
repnz
test
xorb
std
mov
pop
dec
adc
pushf
push
js
pop
cld
scas
and
js
sub
xchg
arpl
sub
popa
xchg
jo
test
mov
rcr
inc
xor
xor
mov
sti
mov
or
sbb
stos
movsl
or
xlat
rorl
out
sbb
pop
pop
ss
cmpsl
fistl
fisubrl
mov
mulb
mov
xor
shrl
in
hlt
sti
sub
mov
movsl
hlt
sbb
inc
hlt
test
and
push
mov
or
cld
push
mov
test
ret
sbb
push
loope
lock
mov
push
cmp
xor
fsts
dec
lahf
push
jmp
popf
repnz
dec
cs
xor
cwtl
cmp
sub
jns
mov
outsl
jp
ss
sahf
inc
sub
loopne
jb
xlat
pop
push
loop
outsl
out
mov
ljmp
or
cld
fucomi
inc
cmc
xchg
push
sbb
movsl
xchg
jo
push
ret
mov
sbb
jns
sbb
test
lret
push
mov
push
lea
adc
sbb
push
jb
push
or
adc
loope
out
and
mov
push
sub
std
mov
jle
es
notb
dec
and
and
lret
bound
sarl
xchg
xchg
sbb
mov
pop
push
ja
mov
mov
lahf
pop
andb
ret
or
xchg
inc
xlat
push
jo
cltd
enter
cmpsl
arpl
jmp
lret
lods
daa
or
rcl
pop
fisubrs
out
pop
loop
fimuls
dec
rorb
and
dec
push
bound
movl
ljmp
mov
pop
cs
ljmp
dec
cmp
cmpsb
mov
or
sbb
into
repz
jmp
repz
nop
test
push
sbb
fs
test
inc
jae
cmc
inc
dec
popf
pop
loop
imul
or
mov
jo
push
out
test
popa
push
inc
and
jae
lret
test
mov
mov
xchg
xchg
adc
fs
loop
iret
mov
cmp
jno
enter
xchg
mov
mov
call
sub
lahf
nop
gs
call
mov
jle
imul
and
or
shlb
add
cs
repz
add
int3
cmpsb
mov
mov
test
int
mov
ljmp
pushf
add
xchg
mov
out
adc
mov
fcmovnu
rol
push
fsubrl
imul
xchg
or
jo
mov
and
call
fimuls
add
in
dec
in
or
cmp
adc
and
fiaddl
jg
ret
dec
mov
data16
pop
and
xchg
sti
jle
repz
push
ja
ret
mov
leave
push
xchg
add
testb
cmc
push
in
xor
xchg
push
roll
out
dec
iret
lahf
cmp
inc
xchg
lods
dec
dec
xchg
mov
test
jg
or
icebp
scas
dec
jbe
pop
jae
stc
clc
sub
mov
mov
or
pop
data16
pop
aaa
mov
cld
loopne
std
sub
push
xchg
roll
loope
rcrl
sbbl
mov
rcll
inc
jne
add
hlt
mov
lcall
xchg
inc
mov
xor
mov
push
sbb
add
dec
lods
jp
imul
fcomi
roll
mov
mov
push
es
cwtl
stos
pop
mov
cmp
aaa
cmpsl
cwtl
aad
mov
cwtl
nop
pop
inc
imul
push
in
fldenv
xor
in
test
es
lods
xchg
bswap
ljmp
in
xor
push
imul
adc
mov
dec
loop
mov
orl
inc
inc
xchg
jnp
call
leave
xor
sti
sbb
or
sbb
aas
outsl
adc
sub
ja
jge
out
sbb
inc
pop
adc
pusha
pop
mov
add
jae
cmp
das
aad
and
xor
gs
cmpl
xchg
add
xchg
hlt
jb
xchg
push
inc
sub
pushw
mov
dec
idivb
cmp
bound
adc
aad
mov
imul
mov
cs
mul
test
les
mov
jmp
hlt
pop
les
mov
add
jle
xlat
push
sub
jmp
ja
mov
jae
pop
mov
sub
xor
ss
int3
pop
rorb
mov
and
xchg
out
enter
adcb
push
push
mov
pop
adc
inc
in
daa
shlb
xchg
ljmp
lcall
cli
aaa
jge
push
cwtl
sub
test
pop
pushf
fldl2e
jg
lds
pop
add
add
pop
push
mov
push
xor
pop
jmp
and
xor
push
out
movsl
dec
mov
sbb
pop
push
sbb
mov
xchg
or
xchg
jl
dec
cli
fimull
inc
loop
push
jge
or
xlat
ds
mov
je
xchg
lahf
xchg
sbb
insb
in
std
cli
sbb
dec
xchg
pusha
xor
mov
xor
je
sbb
leave
sti
xor
lahf
jae
mov
repz
testb
xor
and
daa
mov
test
lods
cmpsb
imul
out
daa
std
ljmp
lahf
cli
gs
xchg
das
lcall
push
lock
inc
sbb
xchg
xor
call
push
xchg
pop
loop,pt
iret
stos
subb
adc
push
add
dec
xor
icebp
xor
mov
aaa
dec
xchg
or
cmp
xchg
ds
aam
cld
sub
sbb
sub
es
mov
js
aaa
inc
repnz
cmp
int
std
ror
leave
popa
sti
adcl
out
std
pop
and
sbb
xchg
xlat
mov
jl
pop
scas
das
insb
sbb
mov
jne
cltd
fldl
cltd
cmpsb
jbe
fiadds
scas
pop
movsb
in
or
lds
cmp
sbb
jmp
lret
stos
cmc
int3
enter
pop
das
push
lret
rcr
push
in
aas
or
pop
shrb
adc
xchg
push
pop
stos
scas
xchg
push
repnz
adc
jmp
iret
and
popa
sbbb
mov
mov
inc
imul
fnstcw
rorl
hlt
and
lds
add
sahf
insl
jae
filds
aas
jbe
pextrw
mov
out
sub
dec
mov
push
js
or
push
sbb
sub
mov
or
rclb
inc
push
loope
dec
fmuls
inc
in
fsubr
xchg
cs
cmpsl
out
loopne
sub
mov
push
cmp
sarl
adc
aam
jnp
add
lods
push
mov
outsl
add
jns
rcll
test
jmp
repz
inc
and
dec
ss
into
jae
pop
pop
sar
or
cmp
in
adc
insb
mov
inc
and
mov
insl
pop
sarb
int3
xchg
jo
push
out
ret
dec
sub
jmp
jmp
xor
xchg
jl
icebp
dec
adc
xchg
push
inc
mov
add
lret
out
out
scas
aaa
mov
scas
popf
dec
jmp
sub
mov
aam
jmp
dec
data16
pop
dec
xchg
stos
test
cmpsl
lea
xchg
cmc
in
push
push
icebp
mov
jne
scas
xor
cmp
int3
sbb
pushf
scas
fdivl
aam
mov
pop
ss
test
scas
xor
loope
std
out
jmp
sub
ljmp
cs
jg
cmpsb
xchg
ss
mov
aam
cmp
cmpsb
push
pop
bound
dec
js
out
push
ss
add
fs
push
sub
mov
cli
xchg
ds
mov
jb
stc
jle
pop
mov
stc
sub
dec
imulb
popa
cmp
jae
in
and
mov
mov
ret
mov
and
aam
call
outsb
add
jp
test
outsl
sbb
adc
sub
jbe
pop
scas
iret
fwait
or
nop
adc
rol
dec
lock
push
femms
mov
sbb
push
dec
lahf
inc
inc
out
push
cld
fstp
sub
sbb
jg
xchg
or
out
shr
fcoml
xchg
lea
mov
std
and
jmp
sbbl
testl
jbe
scas
cld
js
imul
jbe
out
jae
jne
cmc
ret
add
inc
mov
pop
dec
jae
pop
daa
sub
and
scas
das
adc
addr16
jnp
repz
popa
inc
inc
inc
roll
mov
push
fsub
dec
adc
dec
cld
int3
testl
movsb
xchg
cwtl
pusha
sub
push
xlat
loopne
inc
imul
cltd
mov
mov
lods
mov
mov
dec
mov
sbbb
sbb
inc
or
rcrl
movsb
mov
loopne
and
add
pop
jg
mov
pop
stos
fwait
push
jo
iret
xchg
sti
sbb
add
mov
push
sbb
add
mov
rcrl
mov
xor
int
popa
cmp
push
or
fstpl
and
ret
mov
xlat
test
cmp
inc
shlb
add
popa
out
pop
test
mov
es
adcb
push
dec
cltd
sub
icebp
rorl
cmp
out
sub
rcll
inc
sub
iret
inc
adc
xor
add
btc
push
in
incl
inc
push
jb
ja
or
jp
cmp
mov
jne
adc
mov
xor
fdivrs
push
hlt
insb
cmc
xchg
add
ja
pop
pop
js
repnz
dec
xchg
mov
int
pushf
adc
push
xor
and
cltd
or
pminsw
addr16
stos
jle
les
pop
jo
in
pop
in
ds
lcall
cmc
jne
lods
clc
movsl
outsb
jge
out
insb
movsb
cmpl
inc
std
clc
jbe
sbb
push
ja
imul
pusha
mov
mov
aas
inc
dec
jb
ss
jle
dec
cmpsl
mull
in
das
aam
lock
mov
sahf
out
add
mov
aas
ds
xchg
mov
add
or
xchg
jbe
dec
jno
add
in
xlat
dec
orl
add
xlat
jg
jb
mov
icebp
idivb
ja
sbb
shlb
or
addr16
mov
jo
and
fwait
inc
xchg
xor
xorb
loop
mov
add
mov
fisubrs
int3
mov
das
fisubs
ret
mov
mov
mov
jl
ljmp
dec
dec
or
jmp
and
jmp
call
es
xchg
xor
jns
test
loopne
push
adc
mov
je
mov
mov
repnz
cs
mov
out
mov
testl
push
push
mov
push
je
enter
cmpsl
adc
gs
lods
test
inc
into
push
or
movsl
cmp
xchg
jb
xor
cwtl
dec
pusha
aaa
in
in
dec
outsb
mov
lret
pop
cmc
clc
lret
xor
mov
dec
sub
in
mov
leave
imul
push
mov
addr16
mov
mov
inc
jle
mov
inc
sub
add
xchg
popa
aaa
mov
xor
xchg
push
aam
sub
mov
mov
das
jne
mov
fsubs
adc
push
push
dec
push
mov
pop
out
loope
pop
mov
dec
dec
int3
loope
mov
mov
call
icebp
xlat
rolb
mov
adc
imul
jae
mov
imul
xlat
cmp
jg
pop
test
add
add
sub
jle
push
jae
jp
out
push
inc
adc
in
loopne
mov
popa
rcrl
xchg
adc
imul
fstpt
cmp
fwait
jle
data16
subl
lahf
cld
xchg
pop
and
push
cltd
es
jae
inc
sti
xor
inc
pop
add
leave
dec
int
dec
or
pop
mov
lods
pop
sub
xlat
sub
add
inc
add
mov
loopne
sbb
push
or
cmp
ljmp
add
mov
sahf
dec
cmp
inc
inc
pop
outsl
mov
outsb
pushl
and
mov
and
popl
pop
sbb
xor
xor
xlat
xchg
hlt
cli
cmp
loope
sti
mov
jae
pop
mov
xor
jl
cmp
sbb
pop
mov
dec
or
cmp
scas
dec
mov
sbb
push
test
lods
fcmovb
push
sbb
cld
cmp
jp
loope
pop
sbb
ljmp
popa
sub
mov
lock
or
mov
shrb
dec
popf
and
lods
inc
cmpsl
inc
sub
orb
jno
add
insb
loopne
adc
or
push
pop
stos
sbb
loopne
push
insl
and
outsl
add
sbb
fdivp
pop
xchg
and
cld
sbb
sub
daa
shlb
jecxz
xchg
mov
jae
loop
push
xchg
iret
loopne
popa
inc
pop
inc
push
mov
xchg
and
xor
xor
or
test
outsl
jno
movsl
sbb
es
mov
ret
sub
add
jp
and
data16
adc
xor
push
int3
addr16
shrl
inc
js
pop
xor
mov
xchg
test
lcall
pop
arpl
int3
inc
fstps
add
jnp
and
out
mov
ds
xchg
sbb
test
jb
jp
xor
sub
sbb
ja
push
xchg
inc
in
and
scas
adcb
in
mov
push
pusha
or
inc
cli
stos
cmp
mov
out
nop
inc
insl
adc
pop
repz
sub
mov
shrb
lcall
mov
fwait
popf
push
and
pop
fadds
jge
adc
std
or
mov
add
fwait
xor
das
mov
mov
push
mov
ds
xor
test
pusha
xchg
and
sbb
sub
orb
mov
fwait
ret
sub
iret
xor
inc
dec
mov
incl
mov
and
scas
sti
lret
pop
cld
mov
mov
pop
push
mov
lea
lea
pop
cmpsl
pop
pop
cltd
bound
lret
in
pop
jmp
call
aas
sbb
mov
sbb
nop
pop
ret
jge
stos
dec
cmpsl
imul
mov
sub
je,pt
test
ja
adc
jnp
xchg
mov
xor
pusha
mov
or
lret
lret
push
fnstcw
xor
xor
dec
fimuls
cwtl
ret
sar
insb
push
and
sbb
push
or
fisubs
cmp
add
inc
pop
xor
xchg
into
push
stc
jge
dec
pop
pop
dec
in
je
imul
add
push
test
insl
lahf
es
in
dec
cmp
ret
cmc
adc
dec
rcpps
and
repnz
in
mov
jne
dec
rorb
es
in
testl
lcall
icebp
lods
stos
jge
sarb
movsb
push
les
cmp
mov
fldenv
and
dec
shll
rcrl
mov
call
jo
loop
mov
mov
pop
push
cmc
push
adc
pop
js
dec
addb
dec
push
pop
fdivrp
into
lahf
push
add
and
pop
add
mulb
and
push
cmovp
lods
scas
inc
and
xchg
push
mov
inc
insl
mov
js
dec
mov
movsbl
push
adc
imull
push
rcr
or
in
imul
icebp
popf
data16
loope
xor
inc
sub
test
sub
xor
or
in
mov
pushf
icebp
dec
repz
inc
mov
and
dec
ljmp
je
fiaddl
jo,pt
nop
xlat
leave
sti
cwtl
or
mov
mov
push
arpl
sbb
jo
jmp
and
push
mov
aas
mov
mov
push
addb
or
jle
jecxz
les
xchg
dec
inc
aam
shll
shufps
out
test
inc
and
sub
lahf
in
mov
mov
sub
sub
out
jle
push
dec
push
rol
mov
sbb
fsts
jecxz
ss
xchg
data16
cs
cmp
sub
inc
inc
cld
cld
mov
sarl
or
add
or
rolb
lea
xchg
push
pop
jg
pushf
sbb
cmpsb
add
or
sbb
repnz
out
lea
adc
jp
insl
lahf
or
stos
cmp
sub
filds
scas
adc
insl
movsb
adc
repnz
sub
daa
pop
fs
subl
lock
addr16
push
enter
xchg
and
fdivrs
xchg
or
popf
pop
imul
or
lcall
sbb
std
cmpl
inc
into
repnz
adc
hlt
push
mov
pop
jge
jno
pop
lahf
adc
cmpsb
push
xchg
pushf
sbb
out
shl
rcll
out
scas
mov
push
mov
andl
out
push
out
pushf
jp
and
jbe
lods
jmp
mov
insl
out
jge
movnti
fsubrs
and
addb
lock
xor
add
xorl
dec
out
mov
pop
out
dec
mov
mov
imul
dec
in
scas
jmp
movb
jb
fnsave
aaa
push
inc
sub
or
add
mov
inc
bound
adc
or
xchg
ficomps
popf
add
sbb
neg
insl
push
loop
fildl
xchg
mov
fbstp
mov
enter
out
stos
lods
add
mov
notb
cmp
cld
xor
out
push
lods
add
adc
sub
sub
pushf
insl
dec
rolb
and
movsl
add
jno
pop
test
mov
push
adc
add
inc
fdivrs
push
mov
es
ja
nop
imul
sbbl
fisubs
test
scas
hlt
notb
xor
cmp
loopne
mov
dec
les
repz
add
shrb
jae
ds
lahf
jae
pusha
sub
and
cwtl
scas
pop
into
xor
inc
mov
loopne
xchg
cmp
sub
jns
fisttps
mov
mov
and
push
adc
cld
add
in
ljmp
lds
dec
leave
add
mov
lea
lahf
in
int
add
clc
mov
cmp
in
std
adc
adc
lcall
test
and
daa
insb
lret
hlt
addl
push
lods
and
shl
loope
jae
push
xchg
std
in
inc
or
sbb
xchg
adc
inc
or
jo
stc
fs
push
cmp
jno
pop
mov
fwait
in
cmpsb
loope
inc
out
xor
pop
or
adc
fistpl
jne
scas
into
mov
or
cmc
xor
data16
cmp
lock
adcb
xchg
popf
sub
cli
push
push
addr16
inc
shlb
adcb
jns
pop
fcomps
fstl
lock
cltd
add
addb
add
or
int3
mov
jns
mov
push
xchg
pop
sahf
lahf
or
inc
pop
push
sub
sbb
mov
adc
and
inc
nop
or
jbe
mov
mov
mov
sahf
sub
lret
xor
sub
loope
push
adc
adc
in
inc
aaa
inc
fidivrl
or
loop
repz
mov
sbbb
sbb
aas
push
lods
dec
lahf
hlt
out
jne
mov
xor
in
mov
xchg
out
fwait
aaa
xchg
fsubs
nop
pop
ret
cmp
add
filds
aad
jae
in
ret
pop
jo
add
pop
scas
cmp
jge
imul
lea
jae
dec
stc
xchg
mov
adc
ljmp
scas
shrl
mov
sbb
jle
mov
xor
es
mov
fstp
jmp
mov
xchg
mov
inc
sbb
cwtl
jne
xlat
js
cmp
loop
xor
das
aaa
push
fs
cmp
adc
dec
pop
je
mov
lcall
adc
pop
daa
jl
into
inc
pop
and
sbb
adc
mov
sbb
popa
lock
push
jl
movsl
inc
fcmovbe
jmp
cmp
jl
cmp
shr
inc
lret
add
stos
ret
xchg
shl
hlt
dec
insl
out
mov
or
sbb
sbb
repnz
adc
jns
gs
sub
stos
jb
sbb
fwait
adc
pushf
jle
adc
jbe
mov
cmp
push
mov
xchg
xor
and
xchg
sbb
adcb
in
or
xchg
adc
bound
aam
js
ret
enter
lret
cmpsl
shlb
das
xor
pop
std
pop
inc
xchg
dec
iret
call
daa
and
pop
mov
testl
pushw
outsl
fistpl
adc
ljmp
push
jl
pop
shrl
inc
xchg
outsl
sub
sbb
adc
mov
or
dec
daa
inc
sub
cwtl
push
jnp
sub
mov
pop
jecxz
int3
outsl
fcmovnbe
es
push
movsl
cmp
cmp
adc
aam
mov
mov
clc
or
cmp
lcall
xchg
cmp
adcb
nop
test
ret
mov
sahf
sti
int3
adc
int
mov
fimuls
and
fbld
mov
push
arpl
neg
and
and
jle
pusha
and
adc
mov
xchg
push
mov
jo
adc
xchg
aas
dec
mov
push
xchg
ds
dec
insl
or
imull
call
idivb
ja
and
fsts
pop
pop
pop
sub
stc
xor
dec
inc
xorb
lahf
loopne
clc
cmp
mov
pop
repnz
push
jp
nop
lods
pop
shrb
xchg
cltd
mov
lods
ret
cmp
loop
or
out
add
lods
bound
jns
out
inc
dec
adc
fcoml
sti
add
mov
xchg
push
jno
outsl
and
int
jle
sub
dec
add
dec
push
inc
pop
fcompl
xor
icebp
lods
loope
or
add
xchg
jmp
xor
push
sbb
push
fidivrl
push
lock
cltd
mov
adcl
xor
cmp
pop
cmp
leave
repz
sahf
adc
and
dec
lret
pop
jge
fldt
xor
subl
push
lods
aam
stc
mov
jmp
xchg
out
mov
cmp
repnz
pop
movsl
jle
sub
push
mov
loop
data16
and
leave
cmp
clc
rorl
add
adc
test
imul
jecxz
jecxz
push
scas
out
popf
cmp
mov
xor
jecxz
sbb
mov
mov
out
and
adc
in
ret
jns
xchg
icebp
fcomps
shl
pop
lock
in
jl
hlt
outsl
jmp
jle
bound
dec
jb
outsb
pop
popf
sbb
xchg
sbb
adc
xchg
in
add
pop
pusha
or
xor
adc
pop
loopne
idivb
sbb
fucomip
mov
in
sbb
mov
in
xor
mov
pop
ret
loope
adc
icebp
and
sbb
xchg
cmp
jp
cli
and
xor
xchg
sub
fldt
shl
ret
sub
jmp
mov
xchg
or
jmp
cmpsl
cltd
sbb
mov
or
mov
test
flds
ret
aas
add
lret
xor
lahf
fwait
test
xchg
mov
add
mov
filds
in
shr
and
andl
mov
dec
scas
pusha
add
dec
lret
cld
mov
loope
cmp
jp
leave
pusha
dec
lret
pop
xor
movsb
fs
adc
add
dec
in
arpl
cmp
fs
out
bound
cmpsl
sbb
mov
mov
fwait
xlat
or
nop
sub
jecxz
push
cmp
pop
adc
cmp
fisubrs
repz
add
fdivrs
jle
jae
mov
jl
mov
cmp
lahf
cmpb
inc
and
cli
shl
xchg
rcrb
je
push
dec
cli
xor
and
adc
notb
add
jmp
adc
or
jae
aad
lret
dec
sbb
insl
loopne
dec
in
or
pusha
dec
fiadds
fwait
out
jns,pn
ret
movsb
jmp
xor
lahf
cmpsl
clc
dec
xor
jb
jns
cmp
mov
push
lea
jnp
pop
addb
loopne
xchg
pop
mov
ret
mov
mov
fwait
repz
insb
dec
mov
enter
gs
inc
push
mov
push
pop
xor
loop
sbb
xchg
int3
sbb
cmp
repnz
pop
mov
call
lahf
popa
sub
sub
adc
sub
mov
sbb
in
es
jb
sbb
jmp
inc
mov
push
aaa
add
mov
bound
mov
push
and
xor
jns
shll
int
shlb
lcall
jecxz
scas
xchg
iret
adc
add
pop
lea
icebp
dec
lcall
xchg
or
cmp
xor
mov
jle
les
mov
or
icebp
pop
in
scas
and
fidivl
xor
inc
mov
mov
xor
and
test
js
stc
jno
inc
jecxz
mov
mov
movsb
mov
inc
mov
dec
cwtl
inc
sbb
aad
pop
and
or
fldl
pop
pop
xor
stc
lret
jno
lcall
in
inc
mov
mov
outsb
inc
lds
push
js
icebp
xchg
cmp
jle
repnz
aam
popf
fwait
sub
xor
pop
push
jle
sbb
adc
mov
mull
test
cmp
leave
andl
cmc
mov
pop
inc
mov
jg
popa
mov
loopne
hlt
sub
jg
lahf
enter
mov
push
out
insl
xor
sub
xorl
fs
call
pusha
inc
inc
push
movsb
fdivrl
jp
pop
rorl
call
int
repnz
movsl
btc
fucomip
mov
ror
fwait
and
and
add
cmp
mov
push
pop
rclb
xchg
pop
cmpsb
mov
stos
sub
dec
das
push
xlat
xchg
dec
icebp
scas
xor
adc
test
outsl
jne
sbb
jle
mov
cs
fmull
mov
adc
aam
mov
stc
pop
cmc
pop
cmpb
mov
add
push
fadds
inc
fldt
fdivr
mov
jne
outsl
xchg
jge
call
push
xor
and
add
xchg
mov
imul
push
sarb
enter
mov
sub
pop
shrl
subl
pop
cmp
jecxz
mov
and
out
push
cs
pop
push
sub
sbb
mov
xor
in
loop
adc
movsl
jno
leave
pop
clc
adc
lds
mov
push
add
mov
les
ja
lahf
roll
xchg
xacquire
movsl
xlat
call
std
outsb
loopne
mov
scas
add
adc
pushf
push
xor
fwait
mov
setae
stos
aas
ret
xchg
addr16
mov
mov
mov
jb
dec
fiadds
fsubrp
mul
pop
inc
cmp
inc
loop
cmpsl
pop
cs
shrl
sbb
es
fistps
repz
fisttpl
shll
dec
sub
lds
pop
aaa
dec
xor
sub
sbb
es
sub
movswl
out
cmp
movsb
xlat
icebp
fldlg2
or
js
ret
test
je
lock
adc
addl
jne
or
jl
or
xchg
std
sbb
insb
sub
adc
xchg
les
xchg
cmp
sub
pop
insb
or
adc
dec
push
xor
mov
pop
into
out
sbb
scas
mov
orb
call
jno
mov
add
out
ret
jg
cld
das
inc
mov
jl
outsl
cmc
push
dec
std
fmul
pop
enter
cmpsl
sbb
fbld
xlat
movsb
dec
mov
add
xchg
loope
cs
pusha
mov
adc
sbb
xor
xchg
out
sbb
fcomi
aas
jo
aad
mov
pop
data16
ficompl
jb
xchg
pop
repnz
mov
add
pop
pop
mov
mov
nop
out
test
push
int
mov
enter
fucom
movsb
and
or
cmpsb
fwait
and
repz
cmpsb
testb
pop
mov
xchg
pop
rorb
push
sub
add
je
enter
dec
out
xchg
add
lea
xchg
jle
lods
arpl
andb
loop
xor
aaa
push
imul
stc
iret
sub
add
ss
daa
and
xchg
rorb
inc
aam
dec
cmp
push
sarl
jns
xchg
mov
jae
lret
mov
and
frstor
mov
jmp
jge
jns
imull
push
pop
push
jp
push
sbb
adc
pop
movsb
inc
jl
enter
or
out
leave
or
pop
push
dec
push
push
or
mov
fimull
fimull
movsl
and
stc
test
and
pushf
dec
stc
dec
xchg
bound
mov
sbb
test
or
movsb
sbb
ret
adc
and
out
shll
dec
push
rorb
xlat
mov
inc
icebp
sub
loopne
push
fsubs
jo
iret
outsl
xor
les
jg
jbe
jae
pop
addr16
sbb
pop
in
sbb
js
inc
mov
jnp
add
mov
imull
int3
push
test
sub
shlb
pop
pop
fldl
mov
aaa
push
xchg
lret
leave
inc
adc
out
adc
adc
stos
test
jle
push
inc
mov
sarl
rol
insb
in
xor
pop
sbb
lods
enter
int3
jns
ss
addr16
jns
cwtl
sbb
jb
adc
xchg
leave
and
push
add
outsl
xlat
add
call
mov
stc
jns
cmpps
gs
mov
push
bound
mov
adc
lods
sbb
mov
push
addr16
or
mov
xor
fwait
cmp
ret
data16
cltd
test
inc
push
sbb
cwtl
sti
and
addr16
dec
stc
sub
fbstp
jbe
fcomip
fsin
inc
imul
insb
rclb
rorb
gs
iret
movsl
fwait
pop
mov
ja
adc
rclb
sbb
and
push
lret
rclb
es
stos
dec
std
rorb
cwtl
test
xor
mov
in
cmp
sbb
in
and
sub
inc
out
push
sub
adc
push
mov
data16
jmp
hlt
insl
shrb
and
mov
push
add
inc
mov
and
pop
add
in
mov
in
mov
push
lea
push
xor
and
daa
add
mov
adc
mov
fs
mov
cmc
rclb
fdivr
ret
inc
mov
sub
xor
mov
push
test
fcompl
mov
dec
cmp
bound
or
mov
xor
add
sbbb
rorl
inc
mov
imul
xchg
mov
push
loopne
jno
mov
pop
xchg
cmp
loope
lcall
in
outsb
push
mov
or
repnz
jp
sbb
push
mov
insb
mov
mov
shl
ss
push
lcall
roll
sbb
push
sub
adc
mov
mov
push
jmp
roll
jae
pop
add
movsl
or
xchg
int3
mov
fistl
rclb
outsb
adc
pop
jnp
xlat
mov
add
fs
out
dec
add
in
das
fldt
cmpsb
jl
fmul
dec
fistpl
or
loope
xchg
das
mov
inc
popa
xor
lret
inc
sub
push
mov
sbb
pop
jmp
aam
decl
push
rol
fcompp
push
pop
into
inc
mov
and
mov
daa
sub
dec
jl
stos
push
arpl
xor
add
into
ret
mov
xchg
outsl
imul
push
mov
test
test
lahf
fidivrl
xchg
cmpsl
jnp
cmpb
push
popf
sub
pop
int3
mov
xchg
callw
push
fnstenv
je
stc
xchg
mov
push
mov
inc
pop
ljmp
imul
add
push
adc
cmp
and
jl
cmpb
jae
jne
inc
xchg
div
push
pmulhuw
loope
movsb
cmpsb
fwait
daa
pop
aaa
adc
nop
pop
xor
xchg
decl
dec
inc
dec
in
test
xor
jge
int3
js
daa
cltd
sar
xlat
fsts
adc
xchg
mov
std
loop
loop
js
fidivrl
xor
xor
or
test
in
fstpt
dec
dec
cld
hlt
in
gs
cmp
aam
push
pop
popa
rorb
lods
test
push
push
cltd
sbb
scas
jecxz
lahf
stc
mov
out
addr16
dec
adc
add
adc
inc
lea
inc
repnz
pop
fcomps
sahf
in
fmull
testb
jb
scas
inc
fistl
filds
or
or
fisttpll
pop
sub
int
fwait
popf
mov
inc
mov
cmp
cmp
cmpsl
lcall
js
shlb
clc
sub
adc
sub
test
add
int
mov
ds
setns
aad
lret
ljmp
cs
stos
imul
lahf
fistpll
cli
roll
int
mov
adc
xor
ljmp
shrl
repnz
push
js
inc
xorl
xchg
clc
or
subl
xor
ljmp
lret
mov
ret
pop
sbb
push
xchg
push
mov
lock
pop
add
cli
pop
xor
push
jl
xor
out
pop
jno
xchg
cmp
mov
cmp
cmc
adc
mov
psrlw
xchg
test
ja
inc
jnp
sbb
xchg
cmpsl
dec
pusha
mov
and
dec
or
inc
aam
pop
inc
popa
aam
or
hlt
push
lea
out
inc
xchg
push
sar
mov
leave
movsl
sahf
movsl
das
xor
push
stos
mov
xor
outsb
shrb
hlt
sub
xor
cltd
push
pop
out
adc
pop
pop
call
sbb
push
stc
or
jbe
mov
add
leave
lods
into
jno
inc
mov
jo
movsb
jnp
pop
addr16
and
js
sbb
and
cmpsb
jae
jg
lea
xor
fildl
pop
inc
jbe
xor
js
divb
xchg
lods
fcomps
or
mov
jnp
mov
cmp
int
cmc
sub
fs
addr16
push
fcoml
and
call
cmp
icebp
test
xchg
stos
cmpsb
xchg
repz
cs
fdivl
cmpsb
stc
add
push
stos
aaa
mov
pop
shll
jle
jmp
in
inc
pop
bound
xchg
add
mov
cmp
leave
movsl
in
xor
mov
movsl
inc
cmp
jge
and
adc
push
jns,pn
sub
add
fisttpll
sbb
xchg
stos
mov
push
mov
jl
cmp
xchg
push
push
call
mov
icebp
cmpsl
lret
mov
jmp
cmp
lods
dec
inc
inc
out
pushl
dec
lret
iret
or
pop
xor
aaa
arpl
lahf
push
pop
cmp
add
cli
xor
cltd
mov
pop
or
jno
jl
icebp
cmp
inc
andl
pushf
cmp
and
cmp
jge
pop
push
push
pop
jae
mov
outsl
movsb
dec
xlat
adc
or
jne
lock
cmp
push
push
inc
jne
xchg
add
pop
popf
push
jp
scas
mov
mov
iret
call
mov
inc
lds
cmpsl
or
mov
frstor
mov
sub
push
mov
cmpsb
or
dec
fbld
jecxz
aad
sbbb
lret
test
adc
dec
sbb
xor
pop
xchg
sub
popw
add
pop
add
inc
or
adc
cmp
stc
shll
pop
jg
add
rcrb
mov
into
mull
cmp
sarb
jle
jp
xchg
inc
or
adc
dec
test
push
or
and
rorl
mov
rol
xchg
xchg
xchg
and
in
lret
push
push
mov
adc
add
mov
rcrl
in
inc
enter
js
shlb
ret
leave
ds
mov
and
mov
cmpsb
dec
push
aas
rcrb
jb
icebp
jb
mov
and
movsl
cmp
pop
xor
sbb
adc
adc
out
test
pop
popf
adc
fs
xor
outsl
in
push
fsubl
jl
xor
xchg
frstor
fisubrl
shrb
jg
adc
push
sarl
leave
ret
jb
dec
mov
popf
mov
push
mov
cmpsb
decb
in
mov
inc
sub
xchg
inc
inc
mov
or
scas
push
xchg
imul
addr16
int3
iret
xchg
adc
or
push
insb
inc
push
mov
mov
cmp
xchg
ds
cmpsl
nop
mov
push
fstpl
xchg
pop
testl
outsb
sbb
cwtl
pop
outsb
dec
sbb
test
cli
mov
and
push
ljmp
es
arpl
adc
and
add
das
xor
push
insl
mov
call
add
push
sbb
test
leave
js
fdivl
cmp
cmc
sbb
mov
rolb
push
push
mov
xor
push
mov
fbstp
mov
push
fstpl
xchg
in
dec
out
fs
adc
ret
roll
and
mov
mov
mov
jle
pop
lock
dec
pop
dec
in
dec
ret
push
mov
adc
mov
mov
sti
out
aaa
push
fimull
rorl
or
ljmp
xchg
dec
mov
shll
int
cmpsl
stos
jne
lds
cmpsl
fldcw
out
mov
test
xchg
stos
fwait
mov
jb
sub
sub
pop
push
fidivs
jno
aad
in
mov
jb
mov
cmp
mov
and
loop
sbb
mov
push
push
scas
rorl
imul
scas
and
loopne
mov
addr16
je
xor
aam
mov
lret
mov
hlt
or
mov
mov
loopne
cwtl
scas
loope
in
decl
rolb
dec
add
repz
es
or
cmp
or
inc
sub
push
sbb
adc
addb
jae
js
out
repnz
movsb
add
aad
dec
popf
sti
movsb
add
push
push
mov
xchg
push
lret
popf
imul
addb
jl
fwait
into
jo
adc
pusha
negl
push
repz
fidivrl
xchg
push
orl
fnstsw
call
ret
fwait
push
aas
jecxz
in
test
inc
cmp
mov
sbbl
popa
mov
insl
add
imul
dec
sbb
jl
daa
mov
or
mov
in
repz
dec
popw
dec
jmp
adc
jmp
dec
jne
rcl
sarl
lds
push
repz
stos
pop
movsb
das
xchg
dec
out
jnp
out
mov
xchg
popf
test
addl
mov
adc
xlat
rcr
movl
movsl
clc
insb
and
movsl
shl
dec
push
push
push
aad
push
pusha
add
mov
pop
adc
jmp
shlb
imul
mov
sub
lods
pop
xchg
pop
inc
clc
xorb
or
iret
xchg
fs
ss
mov
xlat
add
cmpsb
flds
dec
push
dec
jge
add
xchg
inc
xchg
inc
jae
enter
ret
shlb
lds
cmp
gs
fstl
sbb
sahf
leave
cli
out
int
mov
push
test
jmp
inc
imul
fiaddl
add
out
cltd
mov
pop
in
insb
cmpsb
xlat
shrl
or
cli
and
adc
dec
shll
aam
cmp
xchg
cmpsl
push
jp
add
cmp
jne
les
clc
dec
enter
or
out
jb
cmpsb
add
hlt
or
xchg
mov
rorb
xor
aad
out
repnz
mov
xlat
mov
mov
std
sub
push
xor
repnz
dec
sbb
pushf
adc
icebp
adc
pusha
xor
pop
int3
inc
sub
pop
stos
out
fdivp
mov
inc
lret
push
insl
outsb
addl
mov
loope
in
sbb
inc
push
mov
popa
fcmove
mov
cmpsl
sub
mov
sahf
inc
xor
and
fistpl
jbe
mov
insb
cmp
sbb
push
cmpsl
xchg
in
call
jmp
popf
out
lret
loope
mov
je
xchg
movsb
ret
jbe
mov
xchg
xor
dec
cmpsb
lods
pop
push
cwtl
stc
lea
mov
cs
lods
mov
adc
ret
rcrl
xchg
insb
or
mov
test
mov
hlt
add
jb
imul
out
pop
or
rorb
sub
push
xchg
dec
cmp
mov
pushl
in
cld
jne
and
orl
add
cmp
dec
mov
push
pop
outsb
test
mov
dec
push
lret
iret
push
pop
mov
mov
mov
les
aam
hlt
mov
es
jae
insb
sbb
loop
fdivrl
rorl
jle
add
popf
lret
or
xchg
mov
pop
add
lds
or
lods
inc
sbb
mov
or
lods
add
imul
inc
aaa
dec
movl
xchg
das
push
and
xor
push
add
test
insl
je
push
loop
clc
pop
es
xchg
lea
ja
rcrb
jle
push
jg
xchg
pop
jg
jnp
sbb
xlat
leave
adc
int
adc
push
mov
mov
cmp
xor
push
cmp
fisubs
ficompl
push
js
dec
sarb
xchg
xchg
test
adc
lock
jecxz
add
xor
or
jp
add
stos
mov
and
scas
lcall
adc
fdivl
add
je
ret
sbbl
or
or
imul
push
push
push
outsb
cmp
sub
mov
aas
sbb
mov
xlat
push
fsubrl
aad
pop
mov
ret
bound
imul
dec
call
sub
sub
pop
mov
pop
mov
bound
cld
jb
in
cltd
insb
jno
xor
jnp
cmp
pop
jmp
lahf
mov
sbb
pop
in
sub
gs
xor
orb
cltd
test
sti
sahf
in
and
ret
lods
mov
xchg
cwtl
mov
pushw
push
pushf
pop
push
push
icebp
jae
test
cmp
scas
jecxz
cld
dec
pop
push
add
pop
jl
dec
stos
inc
lret
orl
xchg
push
inc
add
insb
inc
xchg
jp
push
mov
push
fiaddl
fisubs
nop
lock
pop
mov
sahf
jge
pop
xor
sahf
jae
xor
roll
subb
jnp
lret
xchg
movsb
aam
aad
dec
add
adc
fmuls
inc
xor
or
dec
or
shlb
aam
arpl
ret
jbe
shrb
mov
xor
dec
sbb
pop
mov
into
jne
pop
push
cs
test
pop
jecxz
jecxz
ret
adc
and
adc
jae
bnd
pop
orb
jecxz
stos
mov
mov
ljmp
scas
xchg
or
jg
push
mov
fidivrl
test
dec
hlt
scas
cli
shlb
xchg
lahf
ja
jp
ja
dec
sbb
out
fldcw
jge
lock
dec
ja
aam
pusha
xchg
jge
repz
out
cmp
in
and
mov
jns
sarb
popf
out
cltd
in
mov
dec
mov
xchg
add
ss
push
xor
sbb
push
xor
sub
mov
insl
jno
mov
push
dec
popa
mov
in
movsb
mov
xor
push
pop
sarb
xor
sbb
std
or
pop
movsl
movsl
sete
and
adcb
out
mov
push
jns
cld
test
adcl
leave
movsl
mov
dec
pop
adc
fs
adc
cmp
sbb
jge
xorl
fs
stc
insl
mov
lcall
dec
and
cltd
nop
push
jne
insl
vhsubps
pushf
popa
push
fs
mov
out
add
jae
push
mov
hlt
aad
mov
or
pop
dec
fwait
inc
add
lock
xor
push
pop
leave
mov
inc
leave
sbb
mov
arpl
out
mov
movsb
cmp
pop
bound
push
clc
call
add
aad
and
mov
inc
xchg
outsl
add
inc
pop
test
mov
fstpt
fwait
stos
fstpt
int3
xor
aam
sub
xchg
mov
jnp
cmp
ja
inc
jo
push
lds
push
mov
scas
sbbl
leave
pop
xor
lcall
insl
dec
imul
sbb
push
aam
and
jle
fnstcw
dec
out
mov
xor
pop
dec
fsubl
fiaddl
pop
aaa
fs
ja
xchg
fisubrl
sub
cmp
mov
sub
into
pop
andl
xor
jmp
push
sub
iret
sti
push
mov
lret
leave
cmpsl
jbe
ret
popf
sub
es
push
and
adc
repnz
leave
out
push
inc
cmp
add
fimull
mov
and
xchg
xor
pushf
and
mov
sti
into
pop
jge
es
jno
bound
out
pop
xchg
call
mov
xchg
push
xchg
sbb
xchg
sub
in
in
push
pop
arpl
adc
dec
scas
std
sbb
sahf
sub
aas
inc
mov
push
pop
pop
iret
lret
jns
cltd
rcll
or
fstpt
into
outsl
and
out
stos
lods
imul
nop
rolb
ja
lods
pop
pop
iret
inc
sbb
dec
insb
scas
lock
inc
mov
js
jo
jne
shll
mov
push
sub
test
lret
sahf
aam
int3
inc
outsb
sbb
push
pop
or
xchg
pop
out
push
mov
jae
mov
lods
xor
inc
ja
mov
test
add
pop
sub
decb
xchg
sbb
dec
sub
lcall
outsl
loopne
es
rclb
mov
insb
ret
pop
ljmp
ljmp
sub
cmp
pop
filds
int3
lods
jne
fidivs
cmp
dec
mov
jmp
lods
adc
push
xchg
add
sub
cli
fsub
addr16
xchg
push
or
dec
push
stos
mov
cmp
push
and
pop
push
jge
xor
cmp
popa
pop
push
pop
arpl
fstps
pop
add
jl
fwait
xor
test
push
addr16
outsb
sbb
ficompl
push
les
fdivrl
sub
xor
sbb
outsl
lea
test
dec
out
cwtl
cmp
jl
sar
sub
xchg
xchg
fcmovb
imul
mov
fs
rorl
out
sti
adc
pushf
cli
pop
jle
arpl
leave
xor
repnz
sar
mov
lcall
sbb
lret
push
ss
dec
pusha
pop
pop
repnz
sbb
imul
add
ret
push
ja
or
mov
into
int3
xor
into
fwait
mov
std
sub
xchg
ret
outsb
movsb
dec
pushf
inc
lods
int3
add
sti
inc
sbb
hlt
in
lret
xor
adcb
or
imul
jecxz
les
adc
notb
xchg
sti
lea
and
int3
mov
imul
mov
jns
xlat
call
lret
mov
jno
stc
mov
dec
and
lea
jne
adc
xchg
push
cs
push
dec
mov
ja
data16
pusha
inc
push
daa
dec
stc
xor
mov
pop
mov
into
outsb
xchg
cmpsb
in
pop
and
fcmovne
sbb
xorb
sub
stos
xor
pusha
and
aad
cltd
push
fstpt
inc
xchg
shlb
jno
fdivl
mov
vpmacsswd
mov
clc
out
inc
pushf
adc
mov
xchg
or
inc
mov
test
ret
sbb
faddl
mov
rorb
fstpl
pop
das
sbb
push
add
dec
dec
pop
out
fdivr
mov
outsb
mov
dec
mov
cs
cmp
lahf
xchg
push
fs
pop
insl
pop
iret
cmc
mov
pop
dec
xchg
push
mov
aas
and
leave
popa
adc
int3
mov
push
enter
xchg
xchg
mov
aaa
movsb
push
lcall
in
out
std
mov
stc
sahf
cmp
addr16
aaa
xor
jmp
pop
loop
ja
into
jae
mov
loope
or
cmp
xchg
xchg
jo
and
int3
xor
into
inc
push
hlt
rorl
rcl
cmp
lahf
dec
add
loopne
sub
ret
cli
adc
cmc
mov
popf
jbe
cmpsb
stc
push
outsl
and
jae
xchg
adc
mov
das
stc
call
cmpsb
lahf
pop
scas
add
mov
pop
push
lea
cmpsl
pop
int3
fldenv
in
sbb
and
add
jmp
enter
xor
pop
iret
xchg
mov
jno
push
sbb
mov
xlat
popf
sub
fs
dec
repz
cmpxchg8b
xchg
aas
cwtl
lret
add
jnp
fldcw
rolb
iret
sbb
and
adc
icebp
mov
dec
inc
xchg
test
or
xchg
inc
mov
pusha
fildll
fisttpll
loopne
sbb
fwait
cmp
out
lcall
xchg
jno
js
out
mov
mov
das
out
leave
mov
fdivrl
dec
xchg
xchg
dec
mov
mov
out
cltd
mov
es
inc
js
adcl
add
inc
pop
stos
outsb
out
insl
ljmp
lds
les
dec
push
push
out
divb
std
jle
xchg
out
jecxz
pop
dec
inc
mov
mov
or
gs
rorl
mov
movsb
pop
mov
mov
sahf
xchg
sbb
insb
push
mov
mov
adc
lds
repz
sub
sub
test
sbb
xchg
sbb
and
inc
mov
xor
xchg
xor
out
insb
repz
sbb
lods
daa
add
stos
dec
xchg
mov
loopne
push
pop
or
fcomps
xchg
movsb
xlat
xchg
std
out
and
sub
nop
mov
mov
push
je
xor
xorl
xlat
and
dec
mov
lcall
aam
lea
shrb
cmp
xchg
or
out
push
sbb
fmuls
add
insl
imul
sahf
jmp
or
xchg
pushf
mov
stos
lds
int3
cmp
fsts
ficompl
or
and
and
cmpsl
dec
jno
pop
xchg
sbbb
inc
stc
rcrb
test
gs
ret
jmp
aaa
push
jno
pop
mov
decl
cmc
cmpsl
mov
inc
into
add
inc
jle
xorl
add
movsb
push
push
inc
mov
stos
add
cmp
mov
arpl
xor
repnz
xlat
sub
fdivrp
out
pop
repz
jle
cltd
bound
cmp
lret
js
sbb
js
sbbb
jmp
xor
imull
scas
test
popf
lods
je
jge
jmp
mov
mov
ficoml
lds
and
xor
out
inc
mov
nop
aaa
jb
in
pushf
mov
out
mov
inc
and
mov
push
xlat
dec
mov
pop
pushf
mov
loope
mov
jae
cli
into
shll
xchg
fcoms
cltd
pop
add
test
or
lods
xor
xor
mov
xchg
push
testl
cli
iret
scas
sbb
cwtl
mov
push
adc
sub
jno
ret
or
xor
movsl
popf
ds
nop
xorb
mov
push
mov
clc
push
cltd
xor
rolb
cmc
cmpw
mov
sbb
xchg
stos
pusha
push
xor
xor
leave
aas
dec
adc
jecxz
hlt
inc
cli
aas
xlat
lret
pusha
and
pusha
xchg
repz
sub
sub
sbb
cmp
mov
nop
inc
cmp
stos
ss
push
and
and
aas
adc
mov
cltd
mov
nop
xchg
fucomp
les
sub
daa
aam
mov
sbb
jmp
outsb
scas
popa
loop
mov
adc
cmpsb
and
add
and
xchg
pop
mov
loopne
cld
call
and
fwait
cmp
and
out
cmp
shrb
fisttpl
sub
fstpt
ss
inc
mov
push
inc
jno
arpl
pusha
pop
into
jae
dec
sbb
and
mov
out
inc
jecxz
rclb
xchg
fucomip
mov
cmpsl
repnz
add
mov
push
jae
insl
std
popf
sbb
popa
dec
mov
lea
bound
arpl
and
dec
aad
leave
leave
mov
mov
inc
addr16
mov
test
push
cmp
and
shlb
adc
out
xchg
xchg
loope
push
sbb
inc
mov
ja
dec
mov
out
add
mov
fnstsw
mov
mov
mov
mov
inc
sbb
mov
mov
pop
inc
pusha
inc
mov
test
in
xchg
mov
or
lea
add
popa
into
scas
fsubrl
xchg
invd
scas
jne
xchg
mov
adc
push
xchg
aas
cmp
inc
add
inc
test
cmc
xlat
inc
adc
mov
mov
ss
in
stos
movsb
adcb
mov
adc
and
sbb
mov
cmp
inc
xchg
push
and
mov
fiadds
or
addr16
or
test
dec
cmp
lock
out
repz
cmp
xchg
xor
mov
push
dec
scas
pop
mov
cmpsb
or
push
outsb
xor
inc
xor
or
pop
cmpsb
lds
push
bound
hlt
mov
outsl
imul
fnstenv
lret
call
in
test
add
fadds
lock
xor
ret
jb
dec
mov
test
in
inc
xchg
scas
dec
sub
inc
call
bound
mov
stos
imul
cmpsb
out
lahf
in
xchg
gs
mov
pop
jns
ror
out
sub
je
les
test
js
std
xor
imul
orb
cmpw
adc
or
gs
push
pop
pop
add
jle
inc
dec
xor
jo
aas
pop
jle
jne
and
repz
add
push
inc
loop
and
jns
mov
das
sbb
xor
pushf
add
pop
idiv
xchg
mov
and
out
sbbb
outsb
add
scas
call
sahf
int3
inc
pop
stc
call
dec
pop
jo
and
int3
fs
es
cmc
pusha
aad
ret
fwait
and
into
jb
xchg
jl
inc
inc
arpl
and
cmp
insb
mov
and
mov
sbb
andl
inc
dec
movsb
pop
pop
xor
add
cmp
cmp
sbb
dec
nop
cmp
loopne
xchg
fbld
orb
sbb
xor
push
adc
lret
mov
or
popa
inc
and
cwtl
mov
jb
ds
push
test
jae
imul
mov
xchg
sbb
fs
repnz
ljmp
add
fistl
out
lods
movsl
cmp
out
sbbb
adc
xor
xor
push
xchg
dec
jmp
sub
out
xor
mov
add
loop
fwait
pop
dec
cld
in
add
adc
in
dec
dec
cmp
inc
ja
jb
out
sub
and
jg
addl
jmp
in
cmc
repnz
push
iret
adc
push
mov
cmpsl
js
mov
sub
inc
jge
hlt
stos
std
xchg
je
fwait
adc
sub
mov
bnd
outsl
and
pop
bound
add
dec
rcrb
lods
xor
inc
imul
or
sub
mov
aas
add
inc
adc
imul
data16
jecxz
xchg
sbb
inc
lock
mov
ficoms
pop
repz
stos
clc
lods
fstl
xor
xchg
xchg
cmpsb
fwait
aam
mov
test
fcoml
stc
mov
jae
movsb
pop
sti
cmpb
movsl
and
in
in
dec
or
push
sarl
push
lods
push
jae
xchg
jae
xchg
xchg
sarl
pusha
mov
pop
daa
mov
int
lret
mov
push
ret
rol
sti
xchg
repnz
lods
adc
cltd
or
loop
sub
xlat
out
shrl
rclb
outsb
sbb
imul
push
cmc
shrb
gs
mov
pop
inc
mov
je
mov
stc
dec
push
stc
loope
je
stos
dec
fisubs
xchg
xchg
mov
or
pop
pushf
and
or
shlb
cs
inc
xor
add
in
les
les
shrb
cmp
push
push
mov
pusha
sbb
gs
addl
jl
leave
jge
ja
out
ficoml
insl
dec
cmp
jne
rcrl
fidivl
mov
cmp
or
dec
push
aad
and
adc
aas
or
cwtl
jl
movb
mov
movsl
and
push
sub
in
clc
pop
mov
add
xchg
push
fnsave
xchg
rorl
or
aas
aam
loope
pop
sahf
popa
add
cltd
xchg
jnp
jge
and
cmp
mov
out
in
inc
roll
popf
push
mov
call
add
push
sbb
out
in
mov
repz
js
dec
and
jne
jge
arpl
lea
ss
mov
into
out
sbb
scas
xor
jge
les
inc
pop
xchg
sbb
push
pop
fiaddl
shl
out
add
fildl
sahf
addr16
inc
pushf
cmp
insl
or
jg
imul
jl
inc
rclb
scas
rorb
jmp
add
movsl
adc
aaa
lea
mov
cmp
mov
ljmp
scas
inc
xor
jl
jl
in
ljmp
or
fcomps
add
stos
mov
and
pop
in
dec
aas
aam
pushf
and
sbb
fistl
and
test
dec
mov
add
dec
fs
das
push
pusha
int3
popf
cmp
jb
sahf
outsb
nop
nop
fdivl
mov
out
fcoml
lods
or
addr16
jne
cmp
hlt
mov
mov
xchg
in
mov
mov
jle
mov
mov
out
dec
xor
pop
sbb
pop
sub
imul
push
add
jp
mov
jmp
ja
xor
push
jg
in
imul
sbb
sub
xor
test
dec
push
cltd
loope
xchg
cmp
xor
std
inc
icebp
jge
aam
adcb
dec
fs
addb
pusha
test
cmp
dec
pop
push
sbb
mov
das
sbb
in
in
jge
xchg
mov
cmp
inc
and
mov
mov
das
mov
mov
adc
jnp
icebp
imul
mov
and
inc
adc
lss
imul
insb
pop
and
push
sub
repnz
out
cmp
pop
cld
popf
mov
repz
sub
xor
addl
es
push
jns
adc
push
jno
mov
lods
ret
aas
mov
insb
inc
std
jmp
enter
or
and
xor
loop
mov
or
mov
fnstsw
fimuls
test
pop
in
outsl
rcrb
loope
xchg
popf
jnp
pop
xchg
cmp
rcrl
push
mov
pop
addb
push
sub
xchg
ja
jmp
sub
sti
movl
insl
ret
call
scas
inc
push
movsb
repz
pusha
cli
jbe
pop
push
outsb
xor
sbb
or
call
mov
inc
enter
dec
mov
lret
ror
lods
push
fsubr
mov
pop
scas
lds
leave
xchg
test
push
addr16
jge
mov
sbb
xchg
mul
inc
xlat
cli
imul
fwait
mov
jle
nop
adc
lcall
xorb
cmp
imul
idiv
pop
es
or
adc
adc
scas
out
rcll
setg
xchg
sub
sub
xor
xor
or
fcompl
mov
cmp
xor
out
outsl
in
pop
cmp
outsl
push
cwtl
sub
imul
sbb
mov
xchg
or
scas
repnz
xor
dec
sbb
jbe
scas
bnd
push
adc
ljmp
mov
adc
xor
inc
outsb
jbe
mov
fsubrs
push
cltd
jno
push
lods
xor
push
aaa
aaa
mov
bound
lcall
mov
xor
xchg
testb
cmp
stos
mov
pop
or
adc
xor
lahf
cmpsl
add
adc
or
addl
orps
dec
dec
stos
movsl
std
leave
lahf
and
and
cmp
sub
shll
jo
mov
or
arpl
cs
add
int3
out
add
cmpl
fnstcw
jle
xchg
fbstp
insl
pop
incl
inc
jg
push
popf
lret
cs
es
rcr
jnp
pop
mov
vmovhpd
int
xchg
xchg
cmp
enter
loope
inc
aam
in
or
push
mov
out
rolb
push
std
pop
mov
mov
call
cmc
push
mov
cwtl
or
and
inc
out
push
sbb
push
in
dec
loope
popf
inc
sub
sbb
imul
add
ficoml
adc
mov
or
cmp
stos
jns
mov
xchg
inc
inc
mov
or
or
xor
adc
js
and
std
and
ljmp
pop
fmuls
jg
push
mov
popf
cmp
pop
xor
sub
lds
jne
orb
jno
inc
lods
faddl
jmp
sbb
push
dec
xor
call
cmp
sahf
nop
rolb
imul
cmpsl
insl
addr16
lea
push
add
add
or
cmpsb
fcoml
pop
stos
fmuls
jmp
rcrl
push
mov
fisubl
pop
inc
in
jnp
out
ds
das
stos
fs
and
popf
fldcw
ret
dec
pop
sub
fisubs
or
or
jo
pop
imul
mov
shll
rcrl
dec
ljmp
mov
and
lods
out
imul
fistps
mov
aaa
pop
jnp
fnstsw
fs
out
inc
xor
xor
xchg
lea
add
orl
add
jne
test
test
call
mov
sahf
sbb
popa
inc
inc
jno
sbb
jmp
sahf
pop
out
adc
mov
push
jb
insb
test
xor
sbb
xor
data16
bound
cmpsb
jp
add
dec
mov
outsl
dec
loopne
iret
jo
and
pop
add
cmp
push
fwait
mov
pop
cmpsb
inc
push
das
xorb
xor
fs
pop
push
mov
jo
sahf
dec
aad
cwtl
or
aam
dec
shll
fucomi
std
notl
subb
jbe
out
stos
into
inc
mov
pand
clc
cli
mov
mov
push
sub
int3
adc
repnz
cli
add
movsb
and
mov
push
aas
pop
or
test
sub
fisttps
push
repz
xor
mov
rcrb
mov
popa
adc
push
add
cmp
fsts
xor
jnp
outsl
test
sub
cli
int3
lods
jle
xchg
insb
push
out
cmp
inc
push
jp
lock
repz
mov
sbb
sbb
data16
jae
pusha
faddp
addl
das
lods
pop
push
push
pop
adc
or
cwtl
fmull
mov
xchg
or
ret
xchg
sub
pop
or
xor
adc
cltd
and
dec
cmp
mov
addr16
mov
xlat
sti
jne
es
sub
aad
inc
pop
xchg
shrb
adc
mov
jmp
test
fimuls
cmp
cs
jmp
imul
inc
outsb
outsl
testb
inc
outsl
lcall
sub
mov
mov
xorb
into
push
loop
rorl
enter
inc
cmp
adc
or
inc
sbb
xor
mov
fistl
adc
and
mov
mov
repz
fnsave
aam
sbb
imul
inc
inc
popf
rcl
sbb
paddusw
es
pop
je
adc
fwait
sarl
push
mov
fs
dec
fs
nop
std
sub
fcmovu
or
cmp
jle
testl
rclb
testb
out
jge
xchg
push
mov
mov
test
sti
daa
shr
les
xchg
outsb
into
xor
pop
icebp
nop
aam
mov
ret
ficomps
push
cmp
mov
adc
int
mov
jbe
xchg
pushf
in
ljmp
xor
stc
add
pop
mov
adc
roll
cmc
enter
outsl
inc
sbb
push
addr16
out
int3
push
mov
popa
or
insb
dec
pop
and
shlb
dec
push
or
jns
ds
adcb
lock
jmp
xor
pop
cld
xchg
out
movsl
xchg
ret
fnstcw
lret
mov
inc
xchg
adc
cmp
sbb
dec
add
push
insl
xor
adc
out
int3
pop
rcrb
xchg
pop
ret
dec
pusha
and
lcall
popa
inc
mov
mov
bound
js
xor
rolb
int3
pop
fsubr
and
pop
aad
dec
int
pop
xor
cmp
insl
rorl
outsb
in
mov
test
dec
neg
or
jno
cmp
loopne
iret
sbbb
outsb
js
out
pushf
or
daa
mov
xor
adc
sub
add
xor
xchg
scas
push
bound
jns
or
call
add
fldl
sub
jns
push
sbb
xchg
sahf
pop
add
fisttpl
outsl
xchg
mov
and
xor
xchg
xchg
stos
xor
cmp
xchg
lock
sbb
mov
inc
popa
or
repz
test
scas
pop
ja
sbb
cmp
push
das
mov
loope
or
fs
outsl
int
dec
sbb
adc
push
out
add
decl
test
add
pop
arpl
or
fimull
test
xchg
sub
cli
xor
inc
scas
stos
adc
mov
push
xlat
repz
xor
aad
cmp
aam
cmp
inc
and
jle
nop
cmpsl
nop
adc
mov
fldl
dec
cltd
cmpsl
cltd
jmp
or
fwait
out
notl
frstor
sbb
cmpsb
mov
je
pop
dec
mov
xor
insb
stos
add
popw
daa
rcrl
ljmp
add
jnp
ret
arpl
mov
inc
leave
js
movsl
mov
pushf
xchg
xlat
sub
adc
xchg
xchg
lea
out
lahf
sbb
outsl
icebp
cmp
pop
out
dec
jne
sbb
pop
mov
popa
mov
daa
sti
mov
shl
jns
or
out
sub
sub
pop
cmpsb
fldcw
cmp
pop
inc
cli
pop
mov
xchg
or
test
cmp
inc
pop
clc
cmp
mov
cmp
adc
inc
and
mulb
daa
mov
xchg
mov
mov
cmp
lods
jmp
fisubl
dec
icebp
scas
leave
xorb
test
jb
ss
nop
mov
or
jecxz
push
ret
pop
and
clc
pusha
fsubrl
or
ljmp
fbstp
nop
ret
push
and
sbb
aas
mov
cmc
call
test
mov
push
and
mov
pop
dec
inc
jmp
pop
sub
and
mov
aas
dec
pop
mov
fwait
jbe
cmc
and
fwait
push
cltd
add
stc
push
imul
outsb
lock
sbb
sbb
repz
cmp
xchg
popf
cmp
movsb
xor
fidivl
pop
mov
ret
out
test
dec
inc
mov
pusha
and
pop
mov
out
mov
in
adc
out
inc
rcrl
jno
bound
pop
imul
pop
insl
je
fidivrl
insl
shrb
add
repz
sub
scas
pop
fidivl
dec
in
adc
pushf
cmc
pop
and
sbb
data16
fistpll
dec
ss
mov
pop
sbb
mov
push
sub
mov
pop
mov
sub
and
mov
stos
test
sub
push
jne
cmp
xor
sbb
and
jo
lcall
out
inc
popf
dec
mov
mov
lods
cmpb
out
add
cmp
sbb
jno
call
and
cmp
sbb
push
xchg
and
mov
mov
popa
repz
dec
cwtl
fcmovbe
repnz
fistpll
sahf
inc
mov
inc
das
pop
inc
jl
dec
xchg
addb
stos
xor
ds
mov
jne
sbb
stos
jge
mov
aam
mov
js
out
inc
cmpsb
ret
enter
adc
pop
add
mov
adc
std
leave
lock
sbb
mov
test
lods
lcall
iret
mov
xchg
add
into
pop
xor
aam
cmp
outsb
stos
mov
bnd
cld
sarl
icebp
leave
fimuls
xor
shrb
lcall
fwait
lock
int
xchg
js
fisubrl
jle
add
cmp
push
jle
out
push
mov
js
push
cmp
push
add
scas
out
loope
sbb
lock
fwait
or
dec
into
sbb
add
jle
sbb
movsb
inc
sub
cmp
hlt
xor
or
jae
mov
dec
mov
add
repnz
inc
andb
lods
mov
scas
clc
imul
xor
sar
and
push
loope
inc
call
pusha
mov
jmp
dec
pcmpeqb
cmp
mov
cmpb
mov
stos
imulb
inc
adc
popl
push
in
xor
in
mov
rcll
pand
pop
sub
test
std
lahf
add
mov
xchg
and
lods
dec
push
push
lods
insl
test
pop
mov
pusha
add
aaa
aad
stc
cs
aas
mov
mov
push
mov
idivb
ret
cmp
sbb
xchg
mov
out
fnsave
scas
jb
dec
pop
fistpll
dec
jg
ret
adc
sub
shl
pop
call
jl
out
push
sbb
jge
mov
sahf
add
xchg
test
bound
and
dec
xor
cmc
mov
imul
sub
cmp
lds
cmp
iret
mov
int
test
cmc
shl
lds
and
clc
out
sub
stos
sub
fidivl
je
mov
inc
sar
mov
mov
sbb
mov
lods
test
sahf
add
mov
or
fwait
mov
gs
loop
aam
filds
repz
outsl
pop
adc
rol
filds
fiadds
xchg
sub
sbb
dec
std
ds
pushf
iret
xchg
xchg
dec
xchg
inc
call
sub
aad
in
mov
cmp
fwait
repz
mov
xchg
stc
stos
xor
xchg
insl
mov
pusha
outsl
ja
ret
sub
jne
ds
seta
jge
fidivrl
xor
loope
insl
jae
sbb
xchg
dec
mov
and
inc
jl
outsl
pop
mov
bnd
lock
push
xor
mov
or
aas
cmc
jb
in
mov
sub
test
mov
stos
mov
movsb
leave
pop
add
adc
sub
mov
xchg
pop
mov
ljmp
lea
mov
pushf
in
outsl
icebp
in
pusha
shrb
out
inc
cmp
into
mov
outsb
push
aas
mov
xchg
jecxz
xor
dec
mov
push
imul
rcrl
out
xor
nop
sbb
js
mov
mov
sub
mov
cld
mov
setbe
test
push
inc
push
sub
jecxz
mov
xlat
pop
and
jno
cmp
mov
pushf
rcrb
jg
pop
clc
pusha
cmc
pop
fcom
addl
ret
into
or
jl
mov
and
jo
stos
cmp
push
fists
jb
mov
jb
push
inc
xor
scas
mov
out
mov
sbbb
xchg
dec
je
scas
adc
adc
out
cmpsl
add
aam
or
jnp
frstor
dec
mov
popf
xchg
js
adc
mov
dec
xchg
push
js
pusha
out
mov
pop
xchg
scas
shlb
mov
pop
test
ljmp
int
imul
jmp
rorb
repz
out
push
xor
and
shlb
mov
ret
repnz
xor
sub
and
iret
sbb
mov
jge
sbb
sub
or
loop
or
push
nop
pop
mull
dec
subl
pop
inc
sbb
rcll
xor
cmpsl
jae
xlat
sub
fnstsw
lods
mov
pop
pop
sub
jbe
xor
xlat
push
pusha
mov
cmp
mov
icebp
mov
scas
pop
push
mov
lret
dec
mov
and
lret
aad
out
or
leave
xor
push
push
insb
in
roll
jmp
aad
icebp
add
xchg
mov
pop
rcl
loope
data16
negb
lds
mov
pop
js
fldcw
adc
adc
pop
in
pop
xor
mov
rorb
andps
lahf
dec
test
clc
loop
in
sahf
outsb
jle
jg
mov
xor
push
pop
testb
loop
and
pop
rcll
in
clc
in
mov
jecxz
in
lods
mov
ret
and
jle
into
icebp
mov
sub
ljmp
adc
out
jle
mov
pop
pop
in
stos
mov
inc
mov
sti
mov
movl
dec
cs
xchg
or
mov
stos
mov
pop
push
shlb
xor
mov
pop
fisubs
test
sub
add
pop
dec
adc
fsubp
sub
cltd
roll
add
out
mov
push
pop
fsub
sti
xchg
ljmp
sub
xchg
mov
jb
mov
aas
fldt
and
mov
pop
pop
sbb
ja
mov
inc
jnp
ljmp
leave
lret
jp
push
push
je
jge
lods
inc
out
and
lahf
jmp
push
inc
pop
lock
mov
push
mov
loop
mov
adcl
aad
imull
shrl
or
aam
test
rcl
std
or
es
testb
push
ja
neg
add
in
push
mov
mov
jbe
int3
fdivrs
push
mov
cmp
cltd
out
mov
and
mov
aas
or
mov
xchg
movsb
mov
movsl
jbe
fmuls
movsb
dec
pop
fisubs
out
or
adc
pop
mov
mov
clc
cmpsb
into
push
movswl
rorl
pop
fsubr
pop
test
dec
pop
lods
in
movsl
lahf
clc
test
ds
cli
imul
test
mov
mov
les
outsl
lea
mov
jno
inc
xchg
in
jg
push
mov
scas
mov
mov
lock
xchg
xor
sub
mov
fbld
data16
push
sbb
test
inc
sub
jnp
arpl
cmpsl
movsl
and
repz
shlb
mov
mov
jge
dec
lret
popf
xchg
push
imul
sub
es
cpuid
clc
enter
mov
cmp
jnp
leave
loop
outsb
aas
xchg
sti
outsb
ret
or
call
mov
and
jecxz
pop
call
out
divb
and
mov
sub
push
push
mov
mov
sub
in
ljmp
inc
mov
push
popa
in
in
cmp
in
repnz
popa
push
dec
sahf
ja
inc
xchg
push
or
ret
push
and
jo
xchg
and
and
fildll
and
jl
in
inc
imul
inc
fwait
jnp
xchg
jge
mov
or
scas
sti
mov
push
int
sbbb
push
ret
and
adc
or
adc
xchg
aad
gs
xor
mov
push
cmp
push
and
adc
mov
mov
jne
lret
add
inc
imul
outsl
jo
aas
xchg
arpl
push
sub
mov
xchg
mov
fdivr
mov
test
mov
or
cmp
and
cmpsl
push
leave
push
incb
fisubrs
cmpsb
pop
mov
mov
and
fstpl
mov
push
or
jae
add
adc
repz
inc
xor
ret
xchg
stos
ret
mov
shll
dec
xlat
cltd
movsb
mov
cmp
xor
and
fmull
push
or
pop
or
mov
xchg
xchg
movsl
dec
in
lcall
pop
mov
fidivrs
popf
cs
sbb
mov
outsl
adc
mov
data16
fdivs
ret
cmp
xchg
push
orb
sub
mov
sub
cmpsb
mov
in
lahf
repz
rorl
stos
in
hlt
pop
iret
and
cmp
popl
or
xchg
cmpsb
mov
icebp
jge
dec
orb
lahf
mov
ret
jbe
sbb
and
mov
and
xchg
inc
push
stos
loopne
pop
test
push
mov
add
xor
les
xchg
loope
ljmp
sub
xchg
popf
sbb
scas
ja
push
repz
lea
daa
push
fwait
mov
shlb
dec
inc
dec
push
scas
pop
push
cmpsl
das
shl
fistpll
out
out
push
jnp
daa
addb
sub
mov
xlat
mov
ja
xchg
fildl
cwtl
mov
push
mov
sbb
add
mov
mov
adc
movsb
je
xor
dec
sahf
sub
mov
xchg
cld
sub
xlat
insb
sbb
mov
out
push
hlt
xchg
dec
ljmp
lret
aam
lods
clc
fldl
sub
push
and
in
adc
dec
sub
into
mov
dec
push
ret
lock
dec
arpl
fnstcw
dec
sbb
mov
int3
sub
jmp
test
loope
and
pusha
cmc
inc
shlb
adc
out
out
movsl
outsl
pop
xor
mov
movsb
add
push
test
lret
ja
adc
int3
inc
int
dec
xchg
mov
cmpsl
lret
pop
xorl
gs
sub
and
daa
mov
sbb
insb
loop
add
stc
inc
add
fs
mov
lahf
xchg
ss
testl
mov
test
mov
pop
es
testl
sub
mov
jnp
ss
inc
outsb
xchg
sub
jl
xchg
and
sbb
dec
insl
jl
stos
cli
sub
cmp
ficoml
xlat
sti
mov
adc
push
push
out
cmp
mov
sbb
pusha
sahf
jae
test
mov
mov
pop
xchg
scas
js
pop
add
rclb
aas
imul
and
cmpsb
lock
push
stos
mov
cs
subb
add
mov
stos
jge
test
lods
sub
xchg
in
dec
iret
xchg
repz
sbb
nop
xchg
jl
cs
pushf
cmpsl
add
loop
loopne
insb
mov
push
and
xor
inc
cs
gs
ja
or
jp
cld
add
or
mov
or
cmp
sbb
daa
jo
and
mov
xor
pop
sbb
daa
jne
in
mov
mov
xor
pop
aaa
cmp
in
btr
adc
dec
mov
lock
and
nop
out
loop
and
test
xchg
adc
sbb
mov
xchg
mov
or
lahf
push
or
mov
lcall
repz
adc
xor
lods
inc
sub
ficoml
cli
pop
lods
adc
bound
rclb
sbb
loopne
inc
push
xor
inc
pop
cmp
loope
cmc
mov
adc
jmp
mov
fsubs
or
dec
xchg
xchg
push
pushf
xchg
decb
add
sbb
or
stc
aad
pop
imul
js
rcrl
ja
lds
dec
jle
mov
and
push
mov
jg
popa
mov
cmp
inc
xlat
mov
std
aaa
in
les
shlb
adc
mov
scas
pusha
test
jl
popf
mov
inc
cmp
hlt
stos
test
orb
mov
pop
shl
mov
pop
dec
cmp
mov
adc
aas
lcall
push
aam
sbbl
mov
lods
fdivr
fcmovnu
add
dec
movsb
mov
cmpsl
test
fdivl
xchg
cmpsb
psrlq
fstl
filds
mov
cld
mov
mov
cltd
jbe
or
inc
fisubs
xchg
sbb
xchg
popf
pop
inc
cmp
push
imul
lock
movsl
mov
inc
ljmp
jnp
sahf
mov
test
mov
sbb
lods
xchg
dec
jnp
cmp
xchg
jp
jb
popa
add
fbstp
cld
neg
sub
mov
subb
or
test
and
dec
lret
int
dec
and
xor
pushf
mov
lods
pop
pushf
daa
ljmp
fidivrl
mov
mov
testl
icebp
mov
lcall
jbe
adc
mov
daa
jmp
mov
or
popf
fcoms
sbb
sbb
push
je
push
xchg
mov
or
pop
sbb
scas
push
xor
push
pop
insb
pop
shrl
add
fidivl
les
mov
into
cmp
das
out
or
stc
mov
mov
mov
jne
cwtl
add
lret
xchg
add
ljmp
add
movsb
negl
shlb
negl
jp
mov
cmp
jae
inc
push
push
movsb
and
xchg
fnsave
push
sbb
ds
leave
jmp
xor
pop
movsb
adc
adc
dec
cmpsb
dec
jae
mov
cld
sub
repnz
push
jl
lods
fldcw
aas
mov
jmp
cmp
sub
aam
add
arpl
xchg
push
fildl
ja
das
popw
sbb
popa
ret
and
mov
jecxz
shl
cmpl
sbb
pop
out
test
test
cmpsl
shl
insb
popf
imul
xor
mov
xor
mov
mov
movsb
adc
icebp
jb
cwtl
pop
fsubl
mov
add
xchg
lods
dec
pop
fcmovnu
cmp
cmc
popa
mov
xor
xor
push
in
cmpsb
mov
fwait
lcall
shll
sub
dec
je
lret
xor
mov
cmp
fstps
mov
mov
inc
push
lods
inc
pop
mov
clc
movl
mov
dec
inc
fcmovnbe
movsl
inc
ret
xor
and
cmpsb
pushf
adc
xchg
pop
xchg
cmp
or
xor
add
sub
mull
in
inc
push
push
das
and
pusha
mov
test
dec
ret
jg
cmp
imul
sbb
into
push
das
cmp
cld
sub
stos
and
jb
jns
jns
in
cmpl
lret
mov
pop
loopne
andl
push
mov
sub
push
pop
add
addb
addb
cmp
shl
adc
inc
ja
inc
test
movsl
pusha
mov
sti
push
stos
setle
sub
loope
aas
mov
cmp
xchg
int
lds
jecxz
fimull
mov
lods
mov
stos
inc
dec
cmp
or
mov
repnz
and
mov
xchg
rcrl
add
lock
jns
xchg
lods
lret
mov
in
clc
or
shl
pop
pop
cmp
sub
sub
sub
mov
imul
pop
out
xchg
cmp
and
cmp
jmp
aad
loope
mov
sbb
stos
lcall
xchg
sub
pop
or
jl
mov
out
xchg
mov
int3
cmp
jecxz
ja
xor
lea
ret
ret
iret
std
sbb
jns
mov
dec
pop
sbb
sub
mov
pop
dec
mov
or
mov
fbstp
and
add
inc
lahf
jl
add
int3
and
arpl
mov
shlb
ret
movsb
arpl
push
cwtl
push
xor
sbb
push
push
out
icebp
shlb
cmpsb
cmp
adc
arpl
mov
loopne
fidivrl
js
adc
shr
stos
fdivrl
push
out
pop
mov
push
cli
jnp
cwtl
jns
dec
js
or
mul
movsl
jle
loope
rcl
pop
sub
add
push
jp
insb
daa
add
and
mov
punpcklbw
movsb
jo
icebp
push
add
xchg
aad
mov
cmpsb
js
mov
jmp
mov
loope
cwtl
xchg
pushf
int
and
and
cltd
and
out
lahf
push
shll
xor
mov
fcomps
and
fmulp
std
in
mov
mov
and
inc
outsl
sbb
cs
mov
iret
cmp
call
xchg
mov
call
scas
cmc
insb
lret
push
inc
shlb
js
sbb
mov
push
addb
insl
repnz
lds
and
pop
je
jno
movsl
lahf
xchg
inc
inc
movsb
rcrl
xor
and
xor
test
popa
into
repz
mov
nop
movsb
xchg
inc
add
jl
ret
pop
lret
jp
rorb
xchg
insl
int3
pop
xor
ds
sub
shl
adc
movsl
lahf
cs
daa
and
xchg
in
call
mov
xor
jne
ja
outsl
data16
xchg
stc
and
inc
movsb
outsl
call
cmp
out
xchg
sahf
push
or
in
push
add
pop
insb
out
ljmp
jge
test
pusha
xorl
and
je
push
adc
test
and
les
mov
fcompl
imul
ljmp
mov
out
sub
addr16
cmp
pop
mov
sahf
cmp
push
mov
test
stos
push
xlat
popa
in
movsb
call
mov
lcall
int
imul
stc
ljmp
add
push
rol
xor
shlb
jge
in
outsb
mov
xor
lahf
insb
clc
sub
cmp
pop
pop
mov
hlt
lret
loope
adc
xchg
notb
dec
add
inc
mov
mov
sbb
ret
loope
mov
pop
lret
mov
fs
aas
rclb
jae
out
daa
mov
mov
and
lods
int
fcmovnu
pop
xor
clc
jge
pop
dec
mov
pusha
or
jg
mov
dec
bnd
sub
xchg
mov
call
pushf
shl
cmp
xor
clc
xchg
push
sti
movsb
icebp
and
loope
je
push
mov
sbb
push
lock
mov
rol
cltd
xlat
out
xchg
sbb
mov
call
mov
loop
movsb
in
out
push
inc
add
scas
and
outsb
aam
dec
inc
mov
mov
mov
mov
mov
mov
jb
loop
stos
out
lods
rorb
cwtl
mov
aam
out
in
cmp
icebp
push
lahf
outsl
pop
mov
mov
clc
and
xchg
lcall
cli
outsl
jecxz
cmp
mov
cmp
xor
cmp
call
xorb
adc
subl
sub
movb
loope
adc
add
sub
jge
mov
fiadds
mov
push
mov
jnp
adcl
fisubs
jle
and
dec
gs
stc
push
and
push
dec
pop
repnz
sub
cmp
dec
xchg
ss
lcall
clc
das
inc
sahf
sbbl
test
jp
xchg
bound
lea
pop
push
bound
xor
adc
sbb
loop
dec
mov
gs
mov
adc
jle
movl
pop
cmp
out
push
imul
int
gs
adc
pop
and
dec
imul
pop
jmp
lea
pop
inc
inc
movsl
dec
jae
push
shrl
add
ret
pop
and
sbb
ror
bound
pop
loope
pop
sarb
insb
cmp
mov
ds
jge
push
lock
lods
adc
and
sub
movups
aaa
mov
or
push
push
fdivp
cmp
pop
jns
aaa
xor
out
mov
enter
mov
pusha
xabort
mov
out
xor
adc
xchg
cltd
or
jnp
bound
outsb
cmpsb
lods
popf
xor
push
sbb
arpl
add
xchg
and
ds
sub
das
pop
pushl
mov
aas
pusha
xor
pop
dec
inc
push
xlat
xchg
adc
or
jbe
sub
add
clc
jecxz
es
xchg
xor
scas
or
stc
fneni(8087
lods
out
fmuls
sti
call
stos
in
adc
lods
nop
ficoms
pop
xchg
out
es
mov
arpl
sub
mov
mov
fs
mov
lret
cmpsl
insb
lock
inc
adc
outsb
cmp
pop
or
aam
dec
xchg
fwait
stos
inc
and
sub
mov
fsin
xor
sub
inc
test
and
movsl
lock
mov
xor
fdivr
inc
push
lcall
jp
inc
fisubs
mov
mov
testb
push
mov
sbb
lea
dec
jns
fsts
daa
lea
shll
sub
je
cmp
cwtl
or
les
fisubrs
sub
sub
daa
mov
test
loop
pop
cmpsb
rcr
cltd
cld
mov
jb
push
loopne
mov
jne
roll
int3
jmp
cmp
dec
dec
inc
cmp
xor
std
ss
rclb
idivb
pop
and
pandn
test
cld
sbb
clc
ss
scas
or
fwait
rorb
pusha
mov
pop
mov
ficoms
xor
push
mov
outsl
dec
mov
lret
dec
cmp
or
outsl
fldenv
imul
cmp
pop
stos
jmp
das
jle
dec
xchg
pop
fwait
iret
lods
sub
mov
adc
xchg
jl
lcall
push
adc
aas
nop
mov
pusha
dec
jmp
das
pop
cmp
bound
adcb
movsl
jb
js
adc
ret
add
lods
fst
ljmp
imul
aam
mov
rcrb
outsb
sub
cld
sbbb
pop
imul
inc
sti
or
rorb
shrb
mov
push
jle
mov
cli
cli
movsb
add
sbb
adc
cmpsb
mov
jecxz
mov
iret
pop
testl
repz
sahf
or
daa
push
les
bound
mov
into
push
int3
lea
cld
int
and
cmc
mov
dec
xorl
or
dec
pushf
pop
adc
sahf
lods
test
or
pop
popf
int
jns
or
or
fdivrl
scas
mov
and
mov
repz
mov
jmp
jo
lock
test
nop
sub
bndstx
or
cmp
add
dec
je
movsl
or
into
push
mov
scas
adc
lea
call
scas
lcall
out
inc
sbb
xor
pop
sbb
jb
or
inc
clc
push
add
and
mov
add
fs
test
cs
mov
in
xor
cmp
jnp
out
push
mov
lahf
adc
xchg
sub
leave
mov
push
sbbl
dec
add
mov
stc
inc
out
xor
out
cmpsb
cmp
pop
and
adc
jb
lret
loope
popf
cmc
in
pop
xor
aad
scas
les
inc
push
mov
ljmp
mov
ljmp
into
inc
jmp
das
cmc
sub
fcmovnu
push
xor
and
jle
sbb
addr16
jmp
in
dec
insb
mov
push
mov
aas
or
pop
outsb
fsubs
scas
icebp
incb
sbb
popa
fwait
loope
rcl
inc
xchg
xchg
pusha
pushl
dec
fnstenv
sub
sbb
or
shll
nop
mov
test
loop
xor
pop
sbb
je
hlt
das
mov
mov
jbe
jmp
mov
dec
xor
shrb
dec
pusha
dec
out
xor
xor
imulb
adc
xchg
les
je
ror
xlat
jmp
addb
jae
mov
addr16
cltd
or
out
xor
mov
dec
jle
into
mov
sub
push
sub
cli
pop
pushf
movsb
mov
sbb
dec
mov
pop
add
sub
insb
pop
jbe
sti
subl
sub
dec
push
pop
aas
xor
add
adc
or
insb
rcrb
sub
mov
cld
test
xchg
mov
popf
mov
mov
push
jle
lret
add
cwtl
pop
repnz
popfw
nop
stos
call
test
push
pop
xor
cmp
lea
inc
shll
adc
dec
std
xchg
or
mov
cli
mov
fcompl
aas
dec
fdivl
adcl
jl
jnp
and
lds
inc
loop
add
jl
jnp
jno
icebp
push
inc
inc
push
out
fwait
or
dec
addb
xchg
hlt
ljmp
jo
call
pop
cmpsl
pusha
xchg
fists
inc
mov
push
leave
roll
orl
lcall
mov
flds
fistl
in
pop
mov
push
adc
cli
roll
dec
jb
iret
xchg
outsb
and
xor
es
xchg
jnp
jle
pop
xchg
mov
and
js
sti
mov
ss
fiaddl
dec
in
bound
mov
sub
aad
sar
xor
insl
and
insb
gs
jae
inc
leave
lods
mov
or
inc
cwtl
xor
inc
std
and
mov
and
outsb
xchg
cli
pop
push
bound
sti
add
jmp
sbb
pop
lock
cmovle
xor
cwtl
shl
mov
std
shll
testl
cmp
mov
fstpl
mov
pop
sbb
push
mov
pop
jmp
lea
and
outsl
mov
mov
test
xchg
cmp
push
fwait
sub
lods
cmpsb
adc
pop
out
dec
mov
xchg
stos
add
add
push
cmpl
mov
mov
sbb
ja
sahf
loop
ret
insl
xchg
imul
mov
fistps
mov
dec
xchg
fbstp
bound
xchg
mov
les
jbe
dec
push
cmp
adc
jne
shrb
add
xlat
icebp
shl
cmpsb
mov
fisttpll
lcall
popa
mov
in
dec
mov
gs
push
inc
jge
negb
in
outsl
add
pop
mov
outsb
fsubrp
mov
cmpb
sbb
idivl
push
mov
jae
xchg
jnp
sbb
outsb
sbb
jecxz
push
imul
ja
in
mov
aad
repnz
loop
dec
test
mov
enter
push
js
inc
pop
cmp
mov
iret
mov
jnp
out
adc
jle
push
lret
ret
mov
xchg
sbb
testb
cmpsb
imul
arpl
and
int3
cmpsl
insl
xchg
insl
cli
lods
out
inc
loop
sbb
inc
dec
rol
rcl
jno
dec
je
lds
jbe
fistl
xchg
inc
or
sub
xchg
cmp
xchg
loope
adc
pop
add
dec
sahf
jbe
add
add
arpl
hlt
hlt
or
adc
popa
xor
pop
in
push
cmpsb
clc
xchg
out
lods
xor
add
shrl
ja
cltd
mov
push
xor
pop
xchg
stc
push
fnstsw
mov
or
aaa
ljmp
hlt
shlb
jecxz
js
lods
pop
les
or
inc
pop
in
add
loopne
inc
loopne
cmpsl
je
mov
jl
pop
inc
add
push
js
or
mov
negl
fisttpll
xchg
mov
mov
jbe
test
xchg
inc
ffree
xchg
mov
jmp
outsl
adc
and
cld
pop
incb
xchg
inc
or
push
dec
push
mov
loop
pushf
out
aas
lret
xor
push
add
movl
in
jnp
mov
rclb
adcl
out
sub
fldenv
or
push
out
adc
repnz
cmp
sub
cmp
js
lods
negl
js
push
sbb
sbb
loopne
push
inc
ja
add
jae
xchg
stos
cmp
xchg
mov
lods
int
fsubs
ds
iret
mov
mov
xchg
mov
clc
push
pop
xlat
int
in
out
lahf
sarl
jle
sbb
xchg
mov
mov
xor
cwtl
xchg
int3
loope
xchg
lcall
or
push
lods
add
fs
dec
dec
std
scas
imul
divb
cmpsl
jp
into
in
add
push
or
sarb
pop
sub
mov
cmp
jecxz
cmc
ret
iret
push
mov
cmp
pop
sbb
jns
in
icebp
xlat
test
test
push
stos
adc
repz
popa
outsl
add
mov
jmp
pop
rcrb
js
jg
mov
inc
adc
mov
mov
loope
xor
add
cmp
adc
add
xor
push
leave
popa
adc
adc
fwait
or
int3
negl
add
stc
mov
fnstsw
dec
gs
adc
jne
popa
test
xchg
movsl
rclb
outsb
mov
and
jns
xchg
cmp
in
stc
loopne
push
pop
pop
shll
lret
mov
dec
stc
and
push
mov
inc
push
cmc
push
xchg
mov
imul
adc
xlat
rcrb
out
mov
jmp
pop
inc
push
push
push
leave
pop
test
imul
sbb
mov
pop
vmread
or
rcrl
pop
mov
les
push
add
pop
mov
pop
push
xorl
out
jno
adc
sub
pop
sub
mov
mov
das
adc
insb
xchg
popa
dec
daa
fldcw
mov
sbb
jnp
and
ss
lock
and
or
test
push
ds
push
fs
xlat
mov
shl
jmp
xchg
sbb
adc
jnp
cmc
mov
cmp
cmp
ret
push
shl
insl
ret
dec
inc
cmp
cmp
insb
add
xorl
aad
xor
arpl
aaa
add
fadds
inc
mov
sbb
dec
push
push
imul
push
cmpsb
inc
jle
enter
enter
sub
cmp
loope
and
in
test
jge
cld
mov
cwtl
pop
cwtl
dec
or
stos
stos
andl
sbb
mov
add
jle
outsl
or
jp
xchg
call
aad
idiv
jo
xor
lock
jp
bound
inc
sub
mov
movsl
pop
xorb
mov
icebp
mov
scas
push
push
in
pop
mov
aaa
leave
ficomps
jp
cmpsb
ficoms
scas
or
pop
jmp
enter
mov
sbbb
add
sar
xchg
dec
in
sbb
out
cmpb
inc
popf
std
imul
cmp
ss
fstpt
stc
push
fsub
cmp
or
fcoms
cmp
xor
addr16
jle
ljmp
xchg
in
cwtl
aad
sub
lahf
add
push
data16
lcall
lods
xchg
mov
outsb
call
cmp
int3
sbb
hlt
inc
pop
pop
div
les
pop
xchg
subb
adc
sbb
and
and
xchg
cmp
or
cmpsb
ljmp
outsb
mov
sub
test
or
out
outsb
cwtl
xor
rclb
sahf
mov
das
leave
daa
fmul
xor
jno
js
popa
test
sub
sbb
orb
xchg
mov
mov
jge
mov
sti
mov
push
xchg
in
cld
je
mov
dec
out
pop
push
divb
aad
adc
jae
loop
out
xchg
into
or
pusha
leave
add
xorb
in
add
sarl
adcb
mov
xor
push
mov
jae
sbb
lods
mov
mov
pop
push
mov
cmc
cmp
dec
xchg
in
in
mov
mov
dec
pop
mov
jmp
push
insl
adc
aas
sbb
sbb
sbb
mov
xor
mov
or
repz
pop
cwtl
shrl
mov
out
lods
mov
daa
lret
or
cmp
push
ret
xorl
popf
dec
inc
cmpsl
mov
jecxz
loopne
inc
or
sbb
std
fbld
jb
pop
fdivs
push
push
cmpsb
stos
pop
add
data16
sbb
lods
and
in
adc
cmc
repnz
add
xor
mov
mov
jnp
pusha
pop
xchg
data16
fisubrs
or
add
test
add
pop
ja
lock
pop
mov
inc
jl
in
mov
and
and
aas
or
pop
xor
sbb
fbld
pop
push
sub
movsl
and
jns
scas
repnz
inc
ret
pop
ss
mov
cmpsl
pop
dec
push
mov
xchg
adc
outsb
pop
mov
rorb
adc
fs
mov
in
push
cwtl
sbb
xor
in
sub
mov
divl
mov
aaa
shrl
sbb
in
xchg
mov
jecxz
fldt
andl
push
dec
and
loope
pop
sbb
daa
inc
xchg
xchg
mov
push
cltd
pop
and
mov
or
lahf
daa
loope
ljmp
out
inc
imul
aas
or
std
or
lahf
and
or
mov
mov
or
pusha
jle
add
mov
mov
cmp
aad
mov
cmp
xor
add
dec
loop
or
xchg
xor
cmc
rclb
sub
mov
dec
pop
sahf
fidivrl
ss
pop
xor
adc
fsubr
imul
je
or
in
test
int
inc
dec
mov
or
cmpsb
lea
into
movsb
lret
enter
xchg
clc
ds
xchg
popa
in
fst
cli
into
das
and
dec
lea
push
fmulp
mov
adc
imul
insl
shrb
xor
push
test
out
dec
push
clc
push
mov
pop
adc
cmp
faddp
xor
sbb
imul
mov
jp
cmc
int
fiadds
cmp
pop
fwait
bound
lret
js
sti
dec
xor
negl
jo
out
mov
push
mov
shrl
sbb
push
jo
cmpsb
aam
and
mov
aas
scas
loope
movsl
arpl
push
es
loop
jp
mov
push
imul
paddsb
pop
sbb
std
cmpsl
mov
lret
fldcw
mov
ret
mov
sbb
push
mov
pop
je
fldl
lds
je
in
js
dec
lahf
xor
fs
into
sbb
adc
sub
out
shrl
push
pop
push
test
jle
xchg
cmp
pop
lret
sbb
je
xchg
addr16
stos
adc
or
dec
bound
sub
mov
push
and
push
lea
repz
rcrl
iret
and
adc
mov
stc
xor
sbb
mov
jbe
sub
xor
sti
mov
fisttpll
mov
push
dec
sub
push
push
cmp
add
les
mov
xor
lods
mov
fistpll
lcall
push
movsl
repz
sti
mov
sbb
jle
test
cmp
inc
mov
sbb
pop
dec
mov
aas
movsb
mov
dec
rcrl
stos
sbb
jmp
jbe
js
pop
movsb
cld
mov
push
leave
pop
jl
pop
xor
and
sbb
push
xchg
stos
add
cmp
xlat
mov
mov
adc
xor
shrl
mov
fistpl
adc
mov
cmp
mov
adc
push
lahf
orb
idivb
cmp
out
sbb
sub
jmp
fisttpl
lods
mov
mov
int
pop
xor
and
je
stos
fmuls
aam
data16
jl
std
adc
cmpsl
push
add
mov
lods
stc
cmpsb
xor
pop
pop
lods
inc
shll
add
jo
push
mov
inc
les
push
ds
jl
ret
jle
xor
mov
sub
mov
aas
into
pop
adc
add
sahf
ret
dec
or
movsl
idiv
inc
imulb
lcall
into
cmp
lcall
lcall
mov
in
lds
push
mov
pop
in
cmp
mov
mov
xor
jmp
fidivs
lret
sbb
dec
lods
inc
pop
in
push
or
push
pop
add
test
sbb
xchg
or
leave
aas
push
add
or
nop
sbb
cltd
insl
fwait
mov
and
mov
mov
sbb
add
dec
rcll
call
call
xchg
mov
xchg
xchg
dec
ja
cwtl
cmp
dec
fdivl
xor
dec
push
add
or
nop
ret
adc
jo
sbb
jge
sbb
bound
out
jle
stos
stos
xchg
dec
andl
jl
xchg
cmp
ret
loop
je
lret
stos
jo
stc
enter
and
mov
xchg
sub
leave
sarb
rcr
cmp
dec
inc
test
lds
mov
push
push
pusha
and
inc
je
mov
stos
dec
pop
cmp
xchg
insb
in
push
jge
cmp
rcr
mov
lods
js
daa
fidivrl
ja
pop
outsb
in
mov
leave
mov
cmp
push
fs
add
into
hlt
mov
fdivs
in
cmpsl
scas
lods
scas
test
std
jecxz
xchg
mov
lock
or
mov
mov
cmp
mov
jae
add
xchg
push
rorb
ret
dec
rcl
cmp
push
pop
lea
jg
out
push
int
mov
mov
fidivrl
sbb
jp
mov
xor
mov
push
scas
data16
out
mov
es
cmp
call
shr
lret
sar
xor
in
inc
stc
in
pop
mov
jg
cmp
push
imul
push
orb
aaa
inc
adc
cmp
popf
inc
mov
push
call
inc
out
pop
nop
cmpb
jecxz
mov
sbb
lods
insl
in
lahf
adc
mov
js
stos
sbb
data16
inc
lods
ss
mov
mov
lea
cli
insb
movsl
shlb
adc
adc
add
xor
push
push
enter
pop
sub
in
rorb
cmp
in
cmc
int
jns
ret
sbb
imul
pusha
pop
inc
push
push
adc
jnp
in
jmp
jb
or
ss
dec
dec
sbb
jnp
add
mov
sub
sbb
hlt
add
sub
ret
pusha
mov
or
stos
jle
xor
xchg
out
xor
mov
cmpsl
iret
out
andl
ror
jns
pusha
into
xchg
add
aad
in
cld
aam
scas
jbe
sub
lods
sbb
mov
jmp
cltd
cmp
stos
dec
xor
or
pop
fucomi
sub
cli
setge
cmpl
add
loope
pop
movsl
xchg
cmpl
popa
cmpsl
xor
ds
test
hlt
dec
lods
aad
push
mov
sbb
mov
sbb
ds
les
adc
xchg
in
cmpsb
scas
out
dec
add
sbb
ja
fcmovnbe
adc
fwait
dec
and
cld
enter
test
pop
or
push
cmp
fstpt
and
mov
jns
and
pushf
jle
push
dec
mov
xchg
or
push
or
aam
ret
dec
ds
add
mov
jo
xor
push
decl
xor
js
test
ljmp
int
fnstsw
sbb
in
out
inc
repz
add
jmp
dec
dec
sahf
imul
fcomp
nop
add
add
out
enter
push
jnp
mov
xchg
sbb
cld
pop
testb
add
adc
add
or
xchg
jnp
adc
mulb
mov
xor
mov
mov
sbb
popf
orb
andl
fcomps
js
add
or
mov
pusha
shll
sahf
push
xchg
jo
adc
fidivl
xchg
cs
fildll
mov
or
addb
push
push
fldl
cmpsb
scas
mov
shll
or
mov
xchg
shll
in
ret
xor
dec
enter
mov
jp
mov
sbb
mov
cltd
mulb
or
stc
inc
jecxz
jecxz
aaa
pop
jb
test
and
adc
inc
into
test
sub
sbbb
push
std
stc
mov
arpl
jnp
outsl
lret
insb
push
sahf
mov
ja
adc
or
insl
mov
fidivrl
jecxz
cmp
cmpsl
out
jns
iret
dec
outsl
mov
mov
and
pop
repz
shrl
pop
cli
pop
cmc
dec
mov
in
sbb
fs
adc
icebp
lcall
sarb
in
adc
loope
out
adc
addl
fsub
push
xor
out
inc
jno
xchg
ret
addr16
cmp
outsl
mov
cwtl
dec
movsl
aad
fistl
cmp
cmp
xchg
xor
push
add
mov
jnp
fcompl
mov
cld
mov
std
popa
stos
int
pop
adc
ljmp
cmpl
sbb
mov
push
adc
sbb
popa
mov
scas
mov
jbe
iret
and
pushf
hlt
adc
aam
xchg
mov
repnz
pop
jmp
cmpsl
xor
outsl
scas
dec
fwait
mov
dec
mov
xor
das
imul
and
pop
jo
fcomps
sbb
push
lcall
pop
in
jl
into
out
mov
dec
or
shl
pop
pop
sbb
fisubrs
inc
push
cli
sbb
jno
pop
lcall
ss
sbb
outsl
add
add
fidivrl
insb
imul
and
adc
out
cmp
jmp
lahf
adc
inc
xor
inc
adc
inc
or
xchg
mov
in
notb
dec
loop
ja
adc
jmp
pushf
adc
imul
cmpsl
xlat
jo
fbstp
int
lods
testl
xchg
cwtl
das
push
les
cli
sahf
movl
scas
int
mov
or
sub
adc
leave
aaa
pop
je
mov
mov
data16
push
in
test
clc
in
loopne
pop
inc
enter
std
outsl
ss
xchg
roll
jp
adc
rcl
mov
jp
cli
out
xchg
ss
inc
or
aad
jmp
or
test
bound
es
jno
adc
idiv
xor
cmp
xchg
outsb
lret
or
jl
jno
inc
mov
addl
insb
ljmp
repz
push
pop
inc
cmp
iret
lods
jp
add
aad
push
fildll
fisubs
mov
andb
bound
je
adc
jmp
mov
pop
xor
adc
shlb
stos
sbb
call
jno
dec
daa
iret
or
inc
xchg
in
fisubrs
mov
sub
in
lds
mov
jb,pt
jns
mov
pop
lret
cmp
leave
jns
sbb
test
mov
fldt
in
lds
lock
pop
shrb
ds
xor
add
xor
mov
movsl
fisubrl
inc
cli
dec
lock
push
insb
test
jmp
sub
sbb
dec
imul
test
mov
inc
iret
mov
pop
mov
shl
lret
jp
adc
inc
ljmp
ret
arpl
cmpsb
enter
adc
icebp
mov
push
sbb
xor
dec
inc
loop
mov
mov
push
push
adc
pop
mov
jmp
jns
push
inc
daa
leave
addl
jns
repnz
jne
add
sahf
push
mov
lods
push
inc
sub
cli
in
out
outsb
adcb
push
inc
inc
xchg
aaa
in
mov
dec
pop
push
xor
mov
sti
or
xchg
jo
incb
out
xchg
popf
cmp
mov
inc
lret
cmp
sbb
rcrl
pop
or
pop
adc
push
jb
shlb
adc
stos
sbb
ja
cli
push
data16
xor
mov
pop
fwait
nop
stc
je
inc
xor
or
fisubrs
cmpsl
stc
imul
xchg
sbb
and
mov
sub
xor
daa
lods
sarl
pop
or
repnz
xchg
push
add
lods
hlt
insl
mov
jle
cmp
orl
inc
sub
aas
shlb
jb
pop
gs
push
fdivrs
pop
repnz
pop
jne
cmp
and
clc
pop
arpl
mov
xor
mov
dec
std
lock
or
dec
adc
adc
movsl
and
je
push
or
inc
push
aam
clc
stos
dec
iret
addr16
cmp
cmc
mov
loop
or
outsb
insl
andl
inc
jbe
es
pusha
xor
xchg
push
shll
sbb
sbbb
xor
adc
jmp
ljmp
or
or
mov
rcrl
push
mov
fldt
cmp
dec
cmp
addb
shrl
mov
or
jl
cmp
mov
or
xlat
shl
cmp
or
std
ret
or
out
js
xchg
insl
adc
jb
mov
or
sbb
orb
sub
insl
or
test
ja
sub
das
pushf
std
sub
sbb
or
dec
or
outsb
add
dec
lds
aam
scas
jb
test
bnd
inc
push
dec
sbb
jg
insl
scas
cld
mov
dec
jp
pop
xor
xchg
sub
sub
in
orl
testl
fistps
lret
dec
fwait
adc
add
js
mov
sub
fcmove
aas
repnz
jl
mov
jo
mov
xchg
mov
and
mov
shrb
call
xor
adc
lahf
inc
xchg
nop
sbb
fcomps
rolb
push
leave
add
cmovs
inc
sub
les
sub
icebp
push
jge
push
xor
test
ret
jle
mov
pushf
mov
imul
lea
pop
psrld
es
push
push
jmp
rcrb
insb
adc
fcoml
inc
jg
add
add
and
cs
mov
icebp
push
cs
mov
lcall
and
int
ret
aas
cmp
jmp
mov
insb
mov
sbb
movsb
jno
push
cmpsb
pop
mov
dec
pop
add
or
push
test
lods
push
pop
pop
aas
sub
add
fsubr
popa
pop
inc
inc
push
add
fmuls
xchg
inc
jbe
orb
ds
sub
fisubl
sub
movsb
or
int3
ficoms
pop
cmp
mov
mov
sbb
std
ret
jg
dec
in
xorl
sub
bound
or
mov
insb
xchg
ljmp
ljmp
sbb
cwtl
or
mov
cmp
addr16
xchg
cmc
cmp
add
cmp
idiv
int
mov
aam
clc
mov
jge
cmp
out
daa
or
iret
jl
xchg
mov
push
fisubrl
popa
jmp
push
addr16
data16
outsb
xor
jnp
lcall
shlb
ljmp
pop
mov
daa
aaa
mov
gs
mov
in
loopne
sub
clc
mov
insl
fdivrs
icebp
pop
or
mov
out
rcl
mov
outsl
pusha
mov
adc
push
movsl
push
or
movsl
xor
cld
sbb
add
jmp
pop
pushf
fdecstp
inc
push
inc
push
adcb
pushf
inc
jne
fs
pop
nop
cmp
xchg
lods
xor
fdivrp
cmpsl
mov
lea
jmp
cli
aaa
inc
inc
cmpsb
shlb
popf
loopne
xor
xchg
xor
inc
scas
add
in
data16
adc
imulb
and
xchg
addr16
pop
sbb
aaa
ss
xor
rcr
repz
jecxz
dec
push
add
xchg
mov
add
mov
add
es
jecxz
cmp
sub
jg
xor
xlat
and
jb
sub
mov
add
imul
lods
scas
push
call
jmp
stos
aad
and
inc
cmp
sahf
out
add
mov
mov
je
inc
and
xor
dec
mov
xchg
pop
fsub
xchg
xor
mov
sub
push
lods
mov
ret
insl
and
jne
inc
fistpll
cmpl
dec
fsubs
fdivrl
pop
popf
loope
xor
mov
sub
jge
cmp
xchg
sbb
jg
add
xor
or
fnstcw
xor
xchg
into
andl
jbe
lret
xor
repz
push
sete
fwait
leave
les
jmp
push
mov
mov
adc
stc
repz
jnp
xor
mov
sbb
and
ljmp
adc
cmp
das
push
lea
and
int
cwtl
fldt
pop
out
add
pop
fnstcw
scas
xchg
into
subl
add
adc
cmpsb
add
les
dec
out
mov
jecxz
push
mov
lahf
fsubl
sbb
jl
lock
pop
mov
icebp
mov
mov
jnp
sbb
and
les
cmc
dec
data16
int
test
std
and
iret
inc
int
outsb
aam
mov
or
mov
jae
mov
xchg
ja
cld
pop
add
in
adc
lds
inc
rcll
sbb
push
mov
mov
mov
mov
repz
in
das
pop
dec
sub
push
shl
xchg
push
cmpsl
mov
jg
loopne
rorl
movsb
mov
daa
out
push
test
sbb
movsb
mov
sbb
xor
xor
aam
mov
and
cld
andb
iret
loopne
pop
mov
outsb
dec
and
dec
cmp
inc
sbb
aas
push
inc
lods
je
fistpll
push
mov
data16
inc
nop
adc
or
inc
pop
fwait
adc
sbb
shl
data16
ror
ljmp
push
mov
jnp
outsl
mov
in
xchg
mov
or
mov
mov
inc
cltd
ds
mov
iret
inc
movsb
int3
xor
push
rcrl
adc
aaa
mov
insl
sub
or
repnz
test
jae
loopne
mov
outsb
or
xor
xor
jge
xlat
add
inc
mov
ljmp
cmpsl
sti
pop
jne
jge
sarb
mov
cs
dec
jmp
loopne
sub
pop
mov
sar
test
flds
rep
ja
test
xchg
xchg
fimull
and
xchg
dec
cmp
loopne
popa
sbb
xchg
lds
and
cmp
mov
call
sbb
movsl
cs
pop
and
insl
ja
arpl
ss
ds
loopne
mov
mov
jne
adc
xchg
pop
xchg
movsl
out
and
xor
shr
arpl
dec
or
lahf
fwait
lods
hlt
repnz
push
icebp
cwtl
jmp
lret
shlb
push
cwtl
add
sbb
out
jo
cmp
lcall
add
dec
pushl
loop
mov
pop
pushf
push
sbb
outsl
aad
inc
adc
adc
loope
cmp
jecxz
sbb
sub
ret
fs
cmpsl
push
jg
sbb
movsb
sbb
push
pop
fiaddl
or
scas
out
push
jne
cld
adc
xchg
push
push
popf
jae
jns
pop
cli
jg
jge
pop
outsb
aam
sbb
mov
gs
repz
icebp
push
sbb
aad
mov
push
cs
in
mov
test
lcall
jle
arpl
pop
enter
in
mov
pop
scas
stos
sbbb
pause
call
out
mov
push
push
scas
mov
enter
out
cmp
mov
and
leave
adcb
cmp
stos
stc
mov
aas
xchg
or
dec
in
pop
mov
xor
inc
push
stos
andl
cmpb
pcmpgtw
mov
loopne
outsl
les
cltd
loope
test
push
cmp
mov
pop
inc
push
inc
cmpsb
dec
pop
mov
or
mov
push
les
out
push
sub
pop
sahf
pop
fucomip
jg
and
icebp
lret
dec
pop
xor
add
lock
nop
jnp
addr16
out
in
sub
fsubrl
addr16
in
pop
inc
ljmp
sarl
xchg
cmpsb
outsb
stos
ret
pop
cmc
in
push
pushf
jg
xor
in
insl
imul
mov
sti
test
mov
xchg
jg
testb
or
loope
xor
cmpsl
sbb
clc
in
dec
dec
insl
add
pop
fildll
mov
es
hlt
xlat
nop
hlt
jns
add
add
fldl
pop
in
test
xchg
aaa
mov
outsl
push
mov
sahf
cmp
stos
mov
inc
rcl
lahf
enter
cltd
xor
rorb
xor
loop
xchg
je
xchg
xor
pushf
das
mov
clc
iret
lock
adc
pusha
int3
pop
call
sub
inc
icebp
and
dec
mov
jle
xlat
in
loope
xchg
dec
inc
out
outsb
arpl
es
push
inc
stc
fisttps
cltd
arpl
stos
sbb
bound
lods
ja
push
push
sahf
jno
xor
push
inc
sarb
in
std
scas
xchg
jp
or
xchg
rolb
scas
lds
pop
inc
in
cmp
inc
in
xor
call
push
addr16
lcall
cmpl
loope
iret
or
adcb
shlb
cltd
scas
mov
out
or
adc
leave
push
xor
and
mov
add
mov
sub
sub
push
or
or
inc
lcall
xchg
rcll
ret
repz
inc
xor
lea
mov
dec
mov
hlt
les
mov
scas
hlt
loopne
mov
jmp
push
ret
aaa
jbe
dec
mov
dec
iret
cmp
inc
das
icebp
or
mov
arpl
ss
pop
int3
xchg
jge
sbb
pop
test
adc
adc
xchg
pop
or
pop
mov
shr
js
add
in
mov
ds
in
mov
mov
sub
push
outsb
mov
pop
sub
jmp
out
xor
popa
mov
jge
push
lea
sbb
bnd
mov
cmpsl
lods
cli
ficoms
jg
repnz
sbb
in
jecxz
out
aad
xchg
out
cmp
jmp
in
adcb
mov
push
mov
xchg
mov
test
in
dec
push
jle
adc
xchg
add
ret
lcall
test
out
xor
fistl
aad
add
sbb
imul
sbb
jno
daa
cmp
movups
pop
mov
or
cmovg
aad
dec
loope
adc
icebp
xchg
bound
lock
lret
mov
stos
dec
pop
shrl
scas
sub
in
adc
lds
and
data16
dec
pop
cs
mov
cmpb
cwtl
xor
inc
or
movl
clc
push
jne
dec
sbb
and
jg
push
xchg
movsb
das
cmpsb
cmp
clc
cmp
cs
fisubrl
insb
movsb
rcrl
jbe
les
adc
push
mov
cmp
sbb
gs
je
and
xor
xor
sbb
ja
les
mov
jno
mov
mov
sahf
cs
test
jg
sub
push
mov
jns
fbld
cli
jnp
mov
and
nop
xchg
jae
cmc
inc
mov
push
repnz
lcall
in
jle
jns
in
mov
test
dec
dec
ds
mov
cli
jo
push
hlt
dec
and
movsb
idivb
push
add
fcmove
or
mov
mov
icebp
mov
mov
or
testl
jp
mov
inc
clc
mov
lahf
xchg
addr16
addr16
out
repz
insl
and
loope
push
cmp
popa
imul
xchg
pushf
jbe
jbe
aaa
xchg
lret
mov
dec
popa
pop
xchg
nop
push
push
mov
sbb
dec
mov
push
add
andb
add
push
rcr
stos
jmp
in
mov
jb
sahf
or
inc
fnstsw
outsb
push
mov
das
xchg
add
push
lret
push
imul
gs
dec
cli
inc
and
scas
leave
or
inc
ficomps
pop
loop
mov
jmp
cwtl
clc
fsubrs
xor
mov
cmpsb
and
out
ficoml
push
push
push
lahf
dec
jne
jecxz
aam
dec
fwait
mov
gs
sbb
inc
inc
pop
shrl
inc
and
cmpsl
imul
cs
pop
mov
xor
sbb
adc
pusha
xchg
push
out
daa
in
cltd
loop
jnp
sbb
arpl
fs
outsb
outsb
dec
out
fsubr
test
mov
push
rol
pop
mov
mov
sbb
xor
add
jle
leave
mov
stos
jecxz
and
movsb
dec
aam
outsb
inc
xor
pop
out
mov
popa
out
inc
push
arpl
dec
push
inc
stos
mov
sub
jae
mov
and
loope
mov
xchg
or
idivl
les
mov
or
int
mov
inc
int
jecxz
negl
xchg
adc
fldl
ja
out
cmp
mov
dec
lock
push
xchg
mov
decl
cld
sub
sub
lret
ffree
aas
inc
jmp
mov
test
pop
jb
in
sub
mov
mov
push
rep
push
mov
xor
inc
arpl
mov
jo
fadds
adc
jae
addr16
imul
jecxz
mov
cmpsl
iret
mov
aad
add
imul
add
idivb
aam
mov
andl
arpl
cltd
dec
movsl
pop
scas
jmp
test
out
ljmp
inc
les
mov
cmc
aam
mov
loopne
pop
xchg
or
clc
test
push
ret
imul
or
jp
push
popa
bound
and
shrb
jg
in
push
adc
mov
je
call
xor
popf
xor
add
and
sets
and
movsb
aaa
push
jbe
cmp
pop
mov
int3
jmp
xchg
out
cmp
and
cmp
adc
pop
jae
fwait
jecxz
jb
xor
mov
stos
cmp
xchg
pop
iret
rcrb
hlt
jp
inc
icebp
jno,pt
out
xorl
movsl
jb
push
add
cltd
fsub
jnp
jne
test
pop
rclb
cmpl
inc
push
adc
jo
lds
cmc
shlb
inc
insl
shrl
push
push
pusha
mov
mov
cwtl
adc
xchg
cmp
jnp
fcomp
stos
test
les
jns
stc
add
push
sub
js
dec
stos
rclb
popa
cmp
ss
jge
mov
jae
pop
stos
rolb
jne
inc
mov
jbe
add
mov
mov
out
pop
adc
std
lea
mov
sbb
fbstp
xchg
aam
or
sti
push
xor
jo
fildl
and
and
cwtl
xor
test
adc
push
mov
test
arpl
rorb
dec
sbb
jecxz
repz
mov
repz
aaa
xor
popa
or
arpl
icebp
loope
cmpsb
fcmovbe
add
aas
mov
or
sub
repz
cmpb
inc
pop
mov
insl
jg
xor
mov
or
sbb
fnstenv
adc
push
lret
lods
cs
mov
les
lret
mov
dec
jp
push
sub
inc
addl
add
dec
xchg
jmp
mov
dec
addb
pushf
les
ret
mov
repnz
jae
push
ss
pop
inc
iret
lret
rcll
xlat
fsts
dec
or
lods
mov
out
mov
adc
or
iret
jo
les
repz
inc
jne
xor
dec
insl
mov
or
repnz
ss
mov
sub
sbbb
nop
in
in
shl
mov
pop
in
sub
dec
fwait
les
dec
sbbl
aaa
inc
add
add
jbe
movsb
adc
and
ret
dec
push
mov
fistpll
xchg
mov
cmc
scas
cld
mov
sbb
xor
pop
jbe
loopne
push
out
sbb
lahf
sbb
cs
fdiv
jae
stos
loop
xchg
add
std
inc
into
movl
fcomps
adc
xchg
movsb
or
mov
pop
push
mov
in
add
out
jno
hlt
inc
and
int3
mov
pushl
cmp
dec
pop
cmp
add
test
rcll
scas
test
add
dec
aam
dec
fidivrl
shll
stos
push
jno
clc
pusha
jbe
cmpsb
push
push
push
mov
push
ror
cmp
mov
out
mov
push
mov
sub
sub
sbb
jns
push
test
test
and
insb
addr16
loopne
lock
popf
lret
mov
mov
adc
add
xchg
out
add
roll
cmc
nop
jecxz
mov
xchg
sub
scas
mov
into
sub
dec
sub
mov
sbb
fsubr
cwtl
lock
xor
cs
shll
jmp
push
push
fcomi
je
and
inc
loop
cmpsb
rorl
cmp
outsl
mov
and
movsb
loopne
pcmpeqb
push
mov
shrl
mov
xchg
fimuls
pop
popf
add
xchg
test
cmp
mov
arpl
push
lods
and
and
stos
mov
call
shll
shr
cmc
add
xlat
xor
jne
scas
movsb
shrb
sar
mov
pop
icebp
pop
jne
mov
mov
jnp
lcall
mov
test
cmp
inc
mov
xchg
mov
add
lcall
push
bts
jecxz
scas
subl
or
push
jg
and
or
repz
ficomps
sti
pushf
lds
int3
cmpl
out
popf
sbb
jg
xchg
mov
sahf
lcall
mov
fcmovnbe
dec
mov
inc
rcrl
inc
lods
cmp
jo
in
xchg
push
test
int
mov
rcrl
stos
cwtl
sbb
cwtl
and
inc
mov
push
xchg
ficoml
dec
inc
mov
int
jnp
mov
lret
and
jg
js
mov
push
xor
pop
or
mov
adc
adc
das
leave
int3
jp
std
ljmp
sub
outsl
clc
aam
imul
push
loop
jne
sub
out
gs
xchg
outsb
mov
xchg
inc
stos
adc
ret
out
jo
adc
cmp
mov
cmp
dec
dec
pop
hlt
jmp
lret
bound
or
mov
sti
push
pop
repz
orb
aas
sub
movsl
mov
push
inc
push
jge
xchg
bound
push
outsl
or
add
add
scas
rcll
fs
mov
jecxz
movsb
sub
shlb
test
dec
loop
add
in
cmp
je
scas
mov
repz
mov
in
dec
arpl
push
xor
jae,pn
popa
push
push
sbb
adc
jb
inc
test
or
mov
repz
hlt
ljmp
dec
shlb
fstl
pop
scas
add
sbb
dec
cmp
movsb
adc
sbb
sbb
pop
dec
fisubrs
dec
jnp
movsl
inc
lret
repz
daa
cmpsl
cltd
jne
clc
iret
sub
or
iret
stos
aaa
inc
mov
cmp
mov
lcall
aad
push
dec
and
xchg
stc
pop
lods
jmp
icebp
es
stc
test
lock
fiadds
adcb
inc
aad
fmul
pop
and
adc
insb
int
sbb
loope
sarl
in
pop
sub
jnp
jnp
inc
sbb
sub
testb
inc
mov
dec
xor
sbb
cmp
adc
fadds
mov
jne
sarb
ret
pushf
xchg
ss
mov
inc
lods
cmpsl
cmc
daa
push
cmp
pop
cmpb
lcall
addr16
es
insb
rcll
and
das
inc
cwtl
inc
and
jp
out
mov
lock
pusha
fdecstp
lahf
scas
out
jg
jecxz
push
notl
xchg
cs
push
pop
popl
cmp
adc
jno
or
adc
xchg
ds
call
mull
je
std
fwait
stos
call
or
les
jbe
xchg
inc
dec
xor
pushf
push
push
ljmp
in
push
push
dec
bswap
pop
sub
jbe
jmp
fists
call
sub
pop
ret
cmpsl
inc
je
loopne
lea
bound
aam
movlps
push
sbb
adc
test
mov
fidivrs
ds
fsts
pop
push
inc
xchg
adc
push
in
sbb
mov
ret
mov
mov
out
inc
js
mov
inc
mov
or
sti
hlt
xor
jmp
in
sahf
cmpb
popa
mov
cmpsl
cld
sbb
scas
hlt
scas
aad
sbb
xor
dec
sbb
in
popa
jno
ds
jns
xor
sbbb
inc
int
aam
or
mov
jecxz
fldenv
cmpsl
jge
pop
mov
fcomps
sub
xchg
adc
mov
lods
push
mov
push
jecxz
loopne
inc
inc
push
imul
push
sbb
push
pop
fimull
imul
push
andb
sti
sub
aam
test
pop
mov
mov
push
dec
or
pop
hlt
lds
jae
xchg
adc
stos
hlt
loop
jp
cmc
inc
cmp
movsl
loop
xchg
and
imul
jmp
iret
adc
add
repnz
pop
mov
adc
icebp
lods
xor
and
int
or
or
aad
je
fprem
lcall
test
push
es
lods
mov
mov
cmp
mov
cs
cs
jle
ror
test
push
ret
repz
add
lahf
lret
aas
adc
jp
call
cmc
sub
rcrb
mov
and
inc
and
push
sub
cwtl
adc
sbb
out
cltd
out
xor
mov
icebp
sar
ss
loop
fs
test
fcmovnu
and
xor
int
push
cmpsb
sbb
xchg
movsl
cld
js
push
mov
movsb
daa
push
jnp
dec
or
and
jae
dec
adc
push
inc
cld
inc
popa
dec
pop
ret
stc
mov
pop
aad
movsl
lock
scas
imul
or
mov
pop
xor
pop
daa
mov
outsb
ja
std
icebp
xorb
stos
push
pop
pop
sub
cmpsl
add
jg
adc
push
popf
lcall
sub
xor
mov
fisttpl
data16
push
rcll
aas
jns
les
lods
scas
test
mov
ljmp
inc
sub
or
addr16
les
mov
adc
push
xchg
out
imul
adc
push
clc
and
jmp
int
xorb
mov
inc
les
jb
pop
cmp
mov
clc
jmp
pusha
pop
mov
cld
jle
pop
aam
and
insl
mov
shlb
mov
jo
jg
mov
aas
fstpt
sbbb
push
jae
scas
lret
out
adc
push
xchg
cmpsb
aam
dec
imul
iret
sti
adc
mov
bound
mov
mov
push
jne
out
fstpl
in
test
vcvttps2dq
xchg
iret
dec
enter
mov
xor
cmp
out
mov
mov
fcmovbe
adc
cli
out
lods
inc
repnz
out
lret
xor
adc
insl
rolb
inc
stos
add
das
addr16
mov
je
std
insb
repz
std
movsb
fucom
jnp
lock
cltd
mov
mov
jno
scas
xchg
imul
test
jnp
pushf
hlt
mov
in
rol
sbb
insb
nop
pop
movsl
insb
jl
cmp
jecxz
adc
orb
push
ljmp
into
push
xchg
into
nop
lahf
sahf
shlb
mov
aam
mov
rorl
loopne
inc
push
or
jbe
dec
sbb
cs
aaa
gs
jmp
jecxz
sbb
dec
adc
push
push
mov
ret
push
clc
sbb
stos
flds
das
and
or
pop
pop
jmp
repnz
fldpi
push
scas
shll
roll
dec
orl
fsubl
or
pop
mov
inc
testl
pop
adc
sbb
or
mov
jle
sbb
pusha
inc
insl
aad
and
iret
mov
mov
test
out
push
dec
jl
lret
mov
ja
adc
jge
lret
pop
aas
dec
ficomps
dec
ret
push
into
les
sub
mov
mov
lock
ret
push
jl
fstpt
push
lock
dec
sbb
dec
sub
add
xor
cmpsl
sub
scas
test
ja
in
imul
in
ret
test
shll
mov
cmp
fs
push
and
mov
aaa
mov
and
fwait
dec
push
sbb
and
int
push
push
decb
push
insb
or
ds
stos
push
mov
inc
icebp
ret
inc
push
fcoml
jno
mov
int
or
pop
dec
nop
jo
push
mov
sahf
testb
sub
mov
mov
sbb
xchg
add
pop
push
fwait
fwait
dec
pop
scas
xor
pop
mov
int
mov
add
ja
jne
inc
test
mov
stos
inc
xchg
test
sub
pop
pop
inc
sbb
add
fmul
test
jo
fcos
aaa
mov
pop
dec
mov
and
mov
hlt
es
sti
mov
or
out
xchg
scas
xor
fwait
notb
ret
sbb
aam
mov
dec
lods
outsl
stos
cmpsl
push
negb
jg
jl
push
stc
dec
or
cmp
clc
scas
movsl
insb
cmp
jbe
mull
cmpsl
add
inc
insl
dec
add
mov
mov
aaa
dec
dec
jmp
xor
jnp
clc
or
mov
test
aam
adc
sbb
shrl
je
fsubrl
sbb
adc
sub
push
ds
call
test
repz
adc
aas
pushf
lcall
ret
or
cmp
mov
aaa
pop
data16
fucomp
mov
cmpsb
mov
divl
adc
push
mov
xchg
pop
movsl
adc
pop
or
out
imul
ret
lock
rcll
dec
enter
mov
xchg
mov
sub
or
fpatan
jl
mull
cmp
in
stc
test
fildll
das
out
into
mov
test
rcrb
or
jp
fisubl
pop
or
daa
fwait
das
mov
lcall
imul
mov
xchg
add
add
sbb
sub
push
inc
push
stc
out
pop
mov
xchg
cmpsl
popa
pop
in
insb
xlat
jg
popa
dec
leave
icebp
xor
into
or
scas
mov
jne
aaa
outsb
xor
jecxz
inc
cwtl
adc
mov
rcrl
cmp
test
pop
fisttpl
xchg
bound
sub
push
into
cmp
mov
inc
jge
jp
rorb
jne
inc
sub
add
nop
sbb
sbb
clc
sub
inc
inc
shl
push
out
mov
aaa
repnz
sahf
lret
dec
iret
jg
loop
insl
sti
sbb
outsb
cmp
stos
cli
sahf
pop
popa
jge
dec
jb
inc
lock
mov
xchg
jmp
js
mov
js
out
inc
pop
and
es
push
mov
outsb
and
out
and
ds
inc
pop
in
dec
iret
push
lea
enter
popf
or
gs
and
adc
jmp
fdivl
in
sti
lds
adc
call
inc
test
stos
nop
sti
sbb
sbb
jno
lock
in
xor
pop
ja
rcll
jle
jl
std
out
adc
add
mov
loop
stos
pop
lods
mov
cmpl
pusha
jo
sbb
xor
dec
movsb
outsl
int
or
in
fstl
test
push
push
sbb
adc
sbb
adc
mov
jecxz
jge
rorl
cmp
cmpsl
icebp
stos
mov
enter
and
add
sbb
add
add
cli
les
inc
jmp
outsl
mov
clc
xchg
shl
daa
loop
orb
pop
jns
insb
pop
xor
jmp
flds
xchg
nop
cmc
fs
cs
imul
fstps
fcomps
pop
dec
jo
stc
sub
cs
mov
mov
std
xor
push
lret
lahf
js
mov
xchg
push
call
push
and
jno
loope
lcall
test
sbb
nop
ss
mov
icebp
dec
xchg
adc
cmp
ja
push
dec
in
fsubr
stos
push
test
shll
shlb
xchg
pop
adc
out
int
dec
adc
gs
jb
push
std
or
psadbw
push
adc
xor
scas
mov
sti
fs
movsl
scas
mov
faddl
dec
inc
ss
pusha
or
sbb
cmc
jo
pand
sub
lahf
loope
xchg
movsl
jmp
cmpsl
in
push
dec
mov
jb
sub
je
lahf
xor
adc
add
dec
and
jns
in
mov
dec
mov
aas
fdivl
aad
push
test
addr16
push
inc
cwtl
pusha
movsb
out
test
cli
addl
jno
add
jne
fst
test
sub
pop
inc
imul
orb
outsb
pop
je
adcb
aad
arpl
pop
rcr
inc
push
mov
jg
call
jl
xlat
shlb
adc
imul
pop
xchg
rorb
sahf
cmp
test
pop
xchg
inc
mov
pop
jns
stos
sbb
xchg
and
or
sbb
push
test
mov
sbb
in
inc
sub
sbb
in
pop
idivl
cmp
xchg
adc
das
sbb
pop
insb
lahf
mov
push
inc
or
or
jl
mov
dec
pop
sub
add
sbb
icebp
xchg
jns
je
out
mov
mov
lea
or
add
shll
scas
popf
inc
mov
scas
dec
pushf
pop
testl
mov
cmp
arpl
test
leave
dec
sbb
leave
and
stos
jo
stos
icebp
xchg
adc
and
xor
sbb
loopne
and
es
test
icebp
and
xor
subl
push
push
lods
or
addr16
insl
ljmp
xor
mov
inc
dec
test
fsubr
popa
push
sub
dec
lods
mov
test
nop
mov
je
mov
add
cmp
test
adc
jmp
jp
push
push
push
sub
pop
sub
sbb
push
outsl
cltd
ror
sbb
pop
jecxz
in
loop
mov
xor
jae
pushf
and
cmp
xchg
mov
mov
pop
pushf
jo
in
lods
or
dec
cmpsb
jbe
in
adc
and
jbe
mov
ret
push
test
mov
mov
cmp
cltd
push
repnz
fildll
cltd
pop
jnp
jg
xchg
in
cld
movsl
jnp
popa
rorl
psrad
std
xchg
int
test
stc
test
jp
and
adc
push
jno
clc
xchg
idiv
into
push
pop
popl
mov
xor
inc
jb
aas
xor
dec
mov
pop
cmc
xchg
xchg
out
and
jae
inc
mov
push
pop
sbbl
push
jge
cmp
int
mov
int3
repz
enter
cs
test
mov
add
jp
pop
xor
xor
mov
lcall
scas
std
add
lcall
mov
jno
out
mov
xor
enter
mov
nop
xchg
mov
adc
es
xchg
push
dec
jg
cltd
push
cmc
les
push
push
test
enter
rcr
loop
pop
lret
mov
aas
insb
stos
sbb
or
dec
mov
mov
xchg
pandn
or
orl
inc
jbe
aam
outsl
xchg
pushf
mov
addr16
loop
xchg
in
ja
imul
aam
cli
push
out
movsb
xor
ror
je
jns
lods
mov
lea
mov
jmp
aaa
adc
scas
jge
inc
stc
sub
sub
lods
mov
jae
repnz
pop
push
xlat
or
mov
jmp
push
adc
sbb
scas
decb
imul
andl
adc
jb
mov
loop
jecxz
xchg
xor
ja
jmp
sub
sahf
test
inc
in
sub
xchg
mov
in
inc
lret
push
xor
jmp
scas
dec
push
jno
xor
mov
sbb
and
outsl
aas
sbb
xchg
arpl
into
xchg
mov
adc
jb
jecxz
lock
mov
mov
sub
and
xor
in
jo
cmp
mov
add
not
aaa
jae
cmp
mov
adc
pop
adc
lret
push
mov
jne
sub
movsl
pop
pop
movl
and
mov
sub
lea
cmp
scas
dec
xchg
mov
fs
test
sub
or
test
lret
xor
or
cwtl
or
out
outsb
test
movsl
inc
xor
push
mov
add
push
sarb
int3
sub
fldl2e
int
mov
sub
fscale
mov
aaa
inc
adc
fnstcw
sbb
sbb
pop
fdivrl
mov
in
fsts
fwait
in
sub
popa
inc
inc
cmp
adc
test
outsb
stos
pop
mov
xchg
xor
je
push
insb
out
scas
push
cmp
push
out
cmpsb
imul
jle
vpunpcklwd
mov
out
sub
repz
imul
cmp
push
and
int
mov
les
adc
repnz
sbb
shlb
ja
subb
lcall
dec
xor
mov
mov
shrb
inc
mov
inc
adc
pop
mov
je
in
mov
repnz
daa
mov
pop
cmpsl
mov
cld
dec
xchg
int
pop
lea
mov
adc
lods
xor
cmp
lahf
shl
cmp
sbb
xchg
and
cwtl
or
mov
mov
incb
pusha
push
lahf
inc
in
inc
mov
push
fmul
loope
stc
movsb
push
incl
cmp
incb
lock
popa
sbb
xor
sahf
jmp
pop
push
mov
inc
add
ja
inc
mov
in
cmp
xlat
and
rorl
enter
pop
rcrb
push
jno
jbe
arpl
xchg
ljmp
and
and
inc
jns
int
ss
jns
jnp
aam
addr16
mov
std
sbb
dec
push
shll
sti
mov
push
aad
pop
andl
cmp
mov
fisttpll
popa
mov
inc
mov
and
jne
cmpl
push
cmp
inc
pop
fwait
sti
ljmp
outsl
out
icebp
inc
inc
leave
xchg
xor
outsl
into
add
fstpt
add
cltd
cs
pop
mov
js
mov
es
in
outsb
xchg
mov
test
in
lods
xchg
and
fdivs
les
inc
test
ss
int3
inc
std
imul
jnp
fcomps
enter
int3
lret
fldl
sti
sbb
cltd
popa
imul
mov
sub
ja
sub
cmp
sub
push
add
ret
sub
add
xchg
dec
inc
rcrb
push
loopne
cmp
inc
or
cmpsl
sahf
inc
add
movsb
mov
cmpsb
lods
cmpb
push
test
mov
fwait
xlat
outsb
cmp
sub
mov
dec
and
lret
pop
push
mov
mov
fs
notb
jecxz
mov
lret
out
jmp
cmp
mov
fldcw
test
and
xchg
xchg
mov
sbb
pop
xchg
es
pop
out
aad
idivb
add
mov
out
inc
mov
xchg
mov
stos
aaa
push
lods
sub
mov
iret
xor
or
daa
xchg
push
xchg
test
call
xchg
cmp
scas
adc
mov
add
test
fcom
adcb
xchg
andl
addl
out
lahf
adc
and
pop
xchg
lock
sahf
scas
cs
hlt
add
add
daa
arpl
fs
inc
loop
sub
lods
push
jae
jle
and
aam
push
sbb
scas
jle
dec
out
or
rcrl
aad
cwtl
xor
add
enter
js
jecxz
add
jbe
filds
sub
test
dec
out
fisttps
fs
enter
aam
pop
jae
mov
outsl
jns
cli
cmp
sub
sbb
sbb
arpl
mov
push
mov
push
jge
dec
imul
jl
stos
sahf
push
and
addr16
sbb
shr
push
je
inc
sbb
icebp
xchg
cmp
ficomps
pop
mov
int3
mov
jmp
fwait
dec
call
jmp
xor
pop
daa
mov
sbb
shrb
add
and
or
inc
pop
adc
push
fldcw
mov
int
lret
ret
push
outsb
add
and
nop
hlt
inc
dec
dec
repz
jae
mov
int3
std
push
in
popa
jbe
notb
sub
mov
stc
jns
push
dec
cmpsl
sbb
and
mov
out
mov
jb
out
push
shrb
lock
cltd
mov
sub
faddl
lea
mov
out
jnp
xchg
inc
shl
rclb
lret
outsb
cmp
xchg
xchg
bswap
jno
push
mov
sub
pusha
aad
fcmovbe
jae
push
aad
inc
or
cmp
cli
out
xor
rol
cmpsl
lahf
lea
xor
das
unpckhps
rol
mov
xchg
add
cmp
sbb
sub
xchg
jp
sub
mov
push
loope
scas
setns
inc
lods
xorl
adc
fdivrl
cmc
es
push
sub
push
mov
add
lret
and
sub
call
into
pop
insb
cmc
mov
inc
lret
popl
sahf
bound
mov
lods
and
lahf
add
aaa
and
or
xchg
in
or
mov
jno
test
xchg
out
and
roll
into
and
call
sbb
dec
xor
mov
mov
mov
xchg
cltd
cmp
movsb
shrb
mov
push
bnd
out
stc
loope
inc
mov
mov
fmul
pop
movsb
dec
jo
mov
pusha
and
fmuls
mov
pop
xchg
incb
xchg
and
push
lahf
test
cs
xor
notb
scas
mov
nop
jns
mov
ljmp
out
push
push
mov
lret
fs
mov
mov
or
out
push
lods
ja
mov
ret
fcomps
lea
mov
bound
cmpb
out
cmc
mov
dec
cmp
mov
mov
jns
outsb
adc
out
sub
sbb
xchg
pop
add
shlb
xchg
pop
xor
iret
pop
sti
es
mov
into
dec
in
js
dec
jle
push
mov
outsl
add
mov
inc
enter
add
inc
xor
and
add
mov
mov
in
add
xchg
test
mov
xor
sub
push
jge
out
sub
jne
test
and
insl
fldl
test
addr16
mov
mov
fists
ja
or
pop
sbb
repz
cltd
test
sub
int3
popf
dec
cld
pop
cmp
mov
lfs
faddp
movsb
test
sub
cwtl
jb
aam
push
xchg
xlat
bound
xchg
sub
mov
or
data16
xlat
gs
sahf
or
push
loope
scas
and
lea
pop
sub
divb
xlat
pop
loopne
jmp
add
mov
test
pop
test
xchg
fnstsw
dec
std
das
fiadds
mov
nop
jp
and
sbb
pusha
xchg
mov
stc
adc
addr16
je
pop
ret
mov
xchg
decb
inc
mov
notl
dec
xor
jp
mov
sub
fldl
dec
nop
in
lret
and
jns
adc
lcall
jo
and
scas
or
es
dec
pusha
pop
andb
cli
sub
sub
mov
or
loop
ss
dec
and
or
xor
pop
call
jmp
test
arpl
cltd
sbb
insl
fs
cmp
jge
xchg
pushf
inc
jp
mov
and
mov
popf
push
xchg
and
fidivs
jnp
mov
xor
pop
xchg
cmp
negl
bound
sbb
fsubrs
cmp
cmp
add
aas
cmpsl
out
jae
aam
stos
xor
imul
imul
popf
push
sbb
push
in
fs
loopne
lea
test
xchg
sub
cs
push
add
xchg
jp
mov
lcall
insl
fbstp
rcll
sti
cwtl
ljmp
movsb
fdivrs
or
mov
and
cs
and
std
or
js
ja
into
inc
mov
sbb
inc
fcomps
imul
push
lock
repnz
jg
subb
push
xor
flds
sub
mov
add
sub
adc
jmp
and
popf
insl
sub
dec
lock
pop
stos
pop
icebp
inc
sub
xchg
xchg
sbb
lods
je
push
nop
insl
or
adc
mov
add
sbb
mov
ret
mov
fistl
dec
notl
data16
jae
cmp
into
scas
std
xlat
out
adc
or
arpl
and
xchg
test
ret
push
fimull
leave
ret
popf
xor
std
test
movsl
pop
fcomps
movsl
mov
out
rorl
mov
xor
mov
dec
mov
test
xor
pop
nop
gs
mov
sbb
xchg
or
pop
add
ss
in
jne
inc
push
ret
mov
mov
js
pop
mov
ljmp
addb
mov
mov
xor
mov
pop
mov
addr16
add
add
and
pop
fnsave
jp
or
mov
jbe
and
xchg
dec
sbb
jae
bound
cwtl
jmp
mov
scas
test
mov
in
mulb
add
add
add
outsb
outsl
js
inc
cwtl
cmp
jns
lret
imul
negl
sbbl
add
mov
mov
jg
mov
sbb
jo
rol
mov
add
or
popf
or
cmp
in
push
in
jae
mov
rclb
stos
xor
dec
xchg
bnd
insb
cmp
push
sbb
das
mov
inc
xchg
mov
es
test
sarb
je
add
jae
sbb
cld
negb
mov
xchg
gs
jg
stos
insl
iret
sub
aaa
ljmp
dec
xchg
xchg
jecxz
das
adc
adc
sbb
in
sub
or
imul
cmc
loop
sbb
fisubl
fcoml
lods
sbb
and
jb
mov
repnz
leave
ret
enter
stc
or
popf
popa
aam
jae
pop
push
mov
jae
or
les
scas
test
pop
sub
push
out
mov
or
jg
out
mov
rcrl
ja
sub
idivb
in
inc
xchg
or
xchg
arpl
inc
xchg
mov
movsb
lock
popf
rolb
cmpsb
stos
xchg
sarb
sahf
mov
add
ret
mov
adc
lret
test
adc
inc
pop
push
lret
or
mov
cmp
out
das
test
arpl
outsb
jle
sub
mov
xchg
pusha
jg
jo
mov
lahf
lahf
push
sub
jmp
jbe
xchg
je
fwait
and
pmulhw
sahf
popa
mov
outsl
stos
or
stos
xor
inc
jp
int3
scas
push
sub
mull
icebp
or
and
dec
jl
pop
jns,pn
shll
xchg
or
push
adc
fst
dec
push
gs
push
xor
xchg
es
lds
or
ret
xchg
and
push
mov
ret
cli
xor
xchg
andl
sahf
test
cmp
xor
xchg
test
test
add
popa
pusha
adc
mov
jo
sub
addr16
movsl
pop
add
movsb
mov
push
xchg
push
cld
adc
mov
clc
in
sbb
std
cmp
call
je
mov
outsl
sbb
out
mov
cmpsb
loope
dec
fdivl
sar
or
out
loopne
es
mov
mov
mov
lock
xchg
add
in
ds
movswl
inc
mov
inc
push
cld
add
sub
or
mov
mov
clc
clc
xchg
add
jmp
ja
xchg
clc
imul
pusha
jb
jp
outsb
add
mov
jle
jp
mov
movsb
cmp
lcall
sti
mov
xor
sub
cli
test
push
mov
mov
inc
cwtl
shrb
or
gs
pop
fnstsw
dec
repz
sbb
pop
outsl
out
aaa
jns
xor
jge
leave
arpl
mov
pop
fmull
imul
int
sub
fisubl
cmpsl
jecxz
or
rcl
cltd
mov
or
jmp
and
mov
jno
out
ret
adc
sbb
sbb
inc
xor
jg
out
xor
mov
loop,pt
mov
decb
jle
xor
jl,pt
add
xlat
cld
mov
xorb
test
shl
xchg
or
push
je
cmpsb
or
leave
cmpsb
nop
shrb
jns
aam
popa
orl
ret
into
test
push
sbb
dec
xchg
xor
mov
iret
or
adc
cmpsl
lods
sub
or
cmpsl
dec
mov
and
and
xor
fsub
push
add
fwait
andb
loopne
push
pop
pop
icebp
push
add
sub
enter
lock
mov
inc
pop
insl
push
or
mov
xchg
inc
jbe
mov
xlat
inc
and
int
xchg
in
mov
mov
in
outsb
insb
jle
mov
ja
jo
js
mov
sub
or
sbb
pshufw
movsl
icebp
sbbl
and
leave
int
mov
or
sub
sahf
popa
in
add
push
xor
daa
jae
or
jno
pop
sbb
push
insl
cmp
inc
mov
lods
sti
jae
jp
sub
adc
dec
jns
sbb
inc
adc
and
jecxz
jg
sti
lea
sub
and
sar
inc
jb
xor
xchg
testl
jge
dec
cltd
mov
push
orb
mov
jmp
adc
lret
cmp
or
in
aaa
test
pushf
mov
hlt
push
scas
out
mov
lret
pop
jge
out
fdivrl
dec
mov
xor
cmp
jecxz
push
adc
dec
lea
jnp
int3
pop
rcrb
scas
xchg
aaa
outsb
push
sbb
or
jno
xor
sarl
add
loopne
inc
insb
sub
jbe
int
loop
cs
sub
jecxz
sar
popf
movsl
test
pop
mov
or
lret
push
dec
mov
rolb
sbb
inc
mov
popf
outsl
stos
fnstsw
cmc
jae
pusha
imul
inc
push
jb
rcll
xor
insb
ds
je
notl
fistl
or
inc
push
jmp
mov
fwait
loopne
stc
rorb
jle
ret
or
xchg
push
fisubs
aam
jno
popf
push
lcall
and
jmp
loop
fdivrl
mov
dec
cwtl
loop
mov
cli
loop
aad
mov
ljmp
enter
jnp
mov
push
fidivrl
sub
jnp
testb
out
sahf
stos
cmp
xchg
mov
ret
mov
ret
cmp
jg
mov
push
faddl
mov
pop
jl
leave
lcall
into
lea
mov
dec
dec
and
and
xor
and
lods
sbb
cltd
push
fists
mov
mov
pop
repz
repnz
mov
sub
sahf
jge
cmc
dec
push
ljmp
fmuls
cmp
pop
mov
xchg
pop
push
pop
cld
es
xor
dec
dec
rorb
int3
in
andl
icebp
dec
add
push
repnz
popa
xchg
xchg
cmp
and
clc
xchg
cmpsb
clc
out
push
mov
jnp
jae
syscall
jle
and
mov
movsl
cmpsl
pushf
movsb
push
pop
ret
push
lods
xchg
sbb
adc
dec
add
stos
fdivrp
pop
neg
addr16
ljmp
mov
bnd
cmp
mov
rcl
cwtl
cmpb
js
outsl
dec
mov
test
jo
cld
or
fnstsw
inc
and
jg
aad
or
xor
addl
sbb
sub
fs
mov
mov
xor
inc
cmp
xor
test
and
cmpsl
lea
in
sbb
mov
dec
mov
jge
mov
jecxz
aam
push
movsl
xchg
cltd
and
cs
fcoml
push
inc
negb
cmpsl
xchg
cltd
rorl
push
fsubrs
jno
xor
icebp
imul
test
jmp
add
cmp
mov
push
jecxz
push
adc
paddusw
imul
mov
xchg
jne
xchg
cs
insl
cmpb
test
jo
mov
jl
mov
test
mov
outsb
stc
mov
into
xorb
jbe
cmc
mov
insb
jns
fldt
ret
pop
loope
test
lds
lds
xor
in
inc
filds
and
es
xor
mov
jns
jb
dec
dec
xchg
mov
add
lods
cmpsb
cmpsb
mov
das
nop
shrl
cmp
ljmp
cli
sbb
dec
and
add
out
sub
cmp
int3
jns
aas
ds
or
in
enter
jnp
mov
bound
jl
cmpsb
jmp
ss
ficoml
xchg
outsl
mov
dec
std
nop
call
aam
push
mov
cmc
loop
pop
mov
jns
mov
daa
scas
aad
mov
in
out
es
add
andl
clc
adc
icebp
fdivl
adc
mov
inc
jg
js
jle
test
ss
stos
adc
push
jae,pt
dec
add
fstpl
and
ds
sti
shrl
and
jns
pop
addl
imul
and
inc
dec
mov
mov
shll
cmc
cmpl
fmulp
add
mov
aas
aam
out
into
nop
mov
outsl
ficoms
iret
sbb
test
xor
lcall
pop
adc
mov
push
xchg
pop
orl
fists
pop
inc
stos
and
insl
adc
loope
mov
or
sub
aaa
nop
pop
iret
addl
daa
ljmp
and
inc
nop
aaa
jbe
nop
lds
out
jecxz
push
repz
add
stos
test
js
push
mov
data16
dec
and
pop
in
fimuls
test
cmc
clc
test
xchg
sti
in
nop
lea
fidivs
push
pop
fbld
lea
jp,pt
test
pop
push
and
mov
dec
cmp
dec
cltd
fwait
in
cmp
imul
das
xchg
stc
adc
mov
cmp
mov
xor
xchg
mov
jge
inc
das
xor
scas
popf
shr
cmp
fwait
loop
or
insl
cli
mov
xchg
in
xor
push
fwait
mov
xchg
loop
je
icebp
and
xor
lods
repz
dec
arpl
xchg
pusha
jnp
ds
sub
cmc
rcr
mov
add
faddp
insl
adc
xchg
in
fisttps
popf
jp
sbb
push
xchg
fs
adc
popl
mov
rcrb
iret
jae
mov
dec
mov
xchg
pop
sub
shr
inc
loope
jle
into
pop
out
mov
inc
mov
enter
inc
xchg
lahf
shll
and
jo
or
inc
mov
fwait
icebp
sbb
sbb
sub
mov
xchg
movsl
xchg
int
sub
lcall
sub
push
sub
and
fidivl
jno
imul
pop
mov
shrb
xor
adc
pop
xor
outsb
pop
jecxz
mov
xlat
dec
idivl
dec
dec
rcl
sahf
fstp
xor
inc
rcll
test
insl
jae
sbb
sbb
lds
in
mov
mov
jg
adc
pop
lret
jnp
sahf
pusha
mov
ds
inc
rcrl
inc
bnd
xchg
xor
fdivl
push
mov
in
stos
daa
je
or
dec
fldt
arpl
jmp
mov
testl
jae
clc
inc
inc
xchg
xor
lods
ret
psubusw
or
and
rep
fidivrs
push
cmpsb
or
mov
into
or
cltd
lods
lods
pop
pop
cli
test
out
or
ret
in
sbb
nop
bound
loopne
xchg
and
and
fldt
mov
xchg
sarb
sbb
cmpsl
aaa
lods
push
xlat
lock
jl
or
pushf
outsl
pusha
mov
leave
mov
repz
adc
aad
insb
shl
mov
int
jbe
sub
add
das
in
loopne
pop
jne
xchg
iret
mov
in
adc
mov
aas
jnp
stc
repnz
in
loop
pusha
cmpsl
stc
jo
testl
add
fidivl
aaa
cmp
andl
fwait
push
dec
xchg
lret
or
mov
stc
imul
cmp
fs
adc
cltd
lds
push
stc
push
xor
mov
cli
add
add
mov
sbb
es
mov
jp
sahf
xchg
push
fsubrl
dec
mov
jp
cmpsb
aas
mov
test
rcll
dec
add
popa
iret
sub
sbb
and
xchg
mov
bound
out
sbb
inc
jmp
int3
popf
sbb
xor
mov
jb
cmc
inc
in
pop
fcomp
pop
xor
fstl
sub
cmp
mov
mov
mov
xchg
fwait
stos
xchg
fisubs
fbld
enter
sub
dec
sub
shlb
pusha
push
pop
cmpsb
popa
sar
mov
dec
fsubr
mov
fldl
pop
hlt
add
add
xchg
sub
pop
add
dec
leave
inc
leave
shlb
cmpsb
add
cmp
addr16
and
dec
fs
mov
sub
and
daa
ucomiss
xlat
mov
cmp
pop
mov
imul
jge
inc
or
xlat
mov
or
inc
or
jecxz
in
lcallw
push
mov
jnp
pop
and
ds
adc
arpl
in
adc
pop
add
dec
je
leave
dec
in
cld
adc
pop
in
jno
shrb
ss
push
ds
pop
insl
sbb
ret
push
lret
mov
jno
mov
cmp
mov
add
test
jns
inc
cmp
repnz
in
fwait
roll
pop
pop
push
sbb
test
xor
xlat
mov
test
sub
xlat
outsb
loope
enter
hlt
loop
mov
call
inc
loop
cmp
mov
xor
mov
in
xchg
lret
xor
loop
std
xchg
mov
sti
scas
sbb
mov
int
mov
imul
cmpb
frndint
fnsave
and
push
pop
or
icebp
adc
mov
cmc
insb
jl
and
js
push
cmpsb
pop
icebp
rolb
int
int3
call
repnz
cmc
add
add
xor
aaa
sbb
jbe
shlb
fwait
aad
jb
mov
stos
mov
adc
addr16
adc
adc
jle
addr16
push
jbe
stos
or
mov
int
dec
sti
cmp
ret
shr
jg
or
fbld
lea
push
xchg
andb
stos
clc
loop
mov
bound
aaa
mov
popf
fdivrl
lcall
xchg
test
popf
mov
test
jp
add
inc
adc
mov
or
jne
push
movsl
add
out
jle
outsl
dec
sub
xchg
jno
mov
lahf
sub
inc
mov
pop
mov
cmpsl
jle
xchg
pop
repz
jb
js
loope
dec
xor
mov
subl
pusha
cmp
mov
pop
or
mov
movsl
fiadds
in
movl
mov
cmc
pop
xor
jno
fiaddl
jnp
inc
mov
adc
daa
fiaddl
pop
inc
inc
inc
jo
mov
mov
jmp
push
lahf
outsl
in
ljmp
std
sbb
push
xchg
sub
insl
scas
loope
loope
out
sub
pop
lods
mov
sub
push
jnp
out
and
js
sbb
mov
pop
push
mov
and
or
xchg
adc
jae
imul
mov
mov
dec
jnp
push
push
dec
xor
in
dec
sti
aaa
imul
adc
sub
std
cmpsb
ja
or
jg
push
xor
cmp
mov
and
orl
push
mov
in
loopne
push
and
adc
inc
mov
sub
pop
cltd
mov
push
xor
jno
adc
lahf
aaa
gs
loop
lahf
repz
pop
gs
add
mov
sub
jb
cmpsl
cltd
sub
sti
loop
fiadds
fidivs
popf
out
mov
scas
push
jg
xchg
dec
insl
mov
dec
jno
jb
fldcw
sar
aad
fstps
jno
sub
out
sub
test
mov
xor
lea
scas
xorb
int
imul
mov
sti
mov
mov
push
inc
arpl
pop
test
scas
dec
nop
add
imul
mov
sub
inc
leave
jle
mov
pop
push
sbb
dec
cmc
fsubrl
mov
add
lcall
movsl
adc
pop
iret
aam
xchg
jge
rcll
lcall
mov
insl
fsubrs
xor
or
add
adc
mov
lock
fcoml
bound
inc
push
cli
shlb
jns
loopne
mov
push
stos
gs
es
and
sbb
adc
test
iret
dec
mov
fidivs
lretw
xlat
xchg
das
dec
sahf
mov
addl
mov
dec
push
or
inc
fistps
repnz
xchg
fldl
mov
imul
rorl
mov
xchg
or
pop
mov
lret
and
enter
scas
and
popa
fdivrp
adc
repz
loopne
loopne
lcall
aas
neg
xchg
and
int3
out
jne
bound
inc
jl
ret
enter
xchg
movsl
call
pusha
jo
xchg
dec
test
test
jge
xor
push
fiadds
and
outsb
fimull
xchg
movsb
add
push
push
xchg
jo
inc
aad
dec
sub
jo
jbe
mov
inc
lcall
fildl
dec
enter
and
pop
ljmp
mov
lcall
sbb
or
or
xor
or
addr16
cmpsb
cwtl
mov
in
adc
adc
mov
js
or
xorb
movsl
jmp
xchg
fcomip
add
out
mov
jo
testl
adc
rorl
cli
iret
lahf
xor
jge
insl
add
push
push
push
inc
nop
fdivrl
imul
repnz
in
mov
lret
bound
fsubs
orl
jnp
popf
sbb
nop
xchg
pop
sahf
fildll
jbe
outsl
jbe
rolb
lock
imul
fimull
repz
jne
lret
mov
dec
and
push
sti
fistl
jp
aad
fidivrs
lock
inc
sub
inc
sbb
mov
xor
nop
aaa
test
cmp
jg
test
arpl
jp
lahf
inc
enter
call
pop
jecxz
out
repnz
iret
imul
movsb
xchg
jecxz
jecxz
adc
cld
mov
jns
mov
punpckldq
jns
lret
sbb
push
lods
jb
ret
jp
pusha
pop
add
cwtl
and
lret
jmp
jg
inc
jge
sti
mov
adc
mov
mov
inc
jl
daa
inc
sub
aas
push
xchg
add
sbb
test
pushf
aas
xchg
mov
dec
xor
test
fs
pop
mov
dec
adc
jns
push
adc
lods
push
xlat
fdivs
fidivl
pop
xlat
jnp
dec
add
jns
add
std
movl
negl
mov
jb
jecxz
out
xor
push
in
or
lahf
inc
outsb
jle
and
mov
sbb
roll
xor
popa
stos
out
adc
and
cmp
xchg
inc
sbb
gs
or
push
movsb
mov
adcl
fldenv
xchg
cmp
mov
cmp
rcll
lea
pusha
cmp
je
in
loop
ja
mov
mov
inc
je
dec
xor
mov
dec
and
aad
adc
dec
mov
cmpsb
adc
scas
add
mov
stos
mov
pop
cmp
out
jnp
out
push
or
jmp
or
mov
nop
mov
inc
mov
lcall
sbb
jo
sbbb
dec
push
mov
dec
lds
sbb
jne
fisubs
popa
lods
jmp
call
addl
xchg
inc
rorl
dec
push
mov
cmp
cli
add
int3
divl
dec
hlt
jp
lods
daa
sti
shll
cmp
stc
lock
es
gs
in
push
or
pop
movsl
cmpsb
cmp
fimuls
mov
loope
jb
cmp
lea
cmpsb
adc
and
in
push
rorl
stos
adc
ret
pop
shrb
je
dec
xchg
pop
and
sub
push
sub
pushf
lods
and
jp
push
int
dec
cmp
and
popa
inc
dec
jae
xor
cmp
lcall
mov
out
rcll
es
in
insb
hlt
sbb
std
jp
dec
fwait
ljmp
repnz
sbb
mov
sub
hlt
push
sub
pop
sti
sub
outsb
xchg
shlb
arpl
cs
leave
pop
jmp
addr16
orb
pop
daa
outsb
fcoms
mov
push
pop
addb
push
dec
nop
sti
jne
negl
xchg
data16
jbe
sbb
sbb
or
pop
xor
cltd
loope
pusha
gs
int3
test
mov
shlb
pop
or
add
in
daa
out
out
xor
aam
sub
inc
xchg
mov
lret
ss
cltd
out
in
xchg
dec
ret
scas
lock
inc
dec
mov
mov
pop
cmc
adc
lret
pushf
push
ljmp
fadds
mull
pop
sbbl
lret
xor
data16
xchg
inc
shrb
aaa
fisttpl
mov
call
test
repz
or
nop
jae
clc
xor
dec
jbe
xlat
cmp
pop
sbb
scas
mov
stc
lods
mov
aaa
pop
cld
sbb
xchg
cltd
xchg
pop
cmp
add
adc
or
mov
push
aaa
ljmp
gs
push
adc
xchg
and
or
insl
cmp
lcall
out
add
pop
int3
es
mov
popf
push
sar
jo
dec
shlb
mov
push
mov
int
or
push
xchg
mov
call
mov
push
mov
xchg
xchg
es
adc
call
movsl
leave
cmpb
fidivl
leave
add
inc
mov
lea
sbb
adc
test
pop
sbb
mov
and
in
push
rclb
inc
xor
repnz
mov
aad
movsl
jmp
dec
clc
mov
lds
jp
jb
push
jnp
xchg
sti
mov
aaa
pop
ljmp
arpl
add
cli
jl
xor
mov
sbb
hlt
inc
push
or
push
dec
lods
jg
cmp
lods
test
mov
mov
add
xchg
inc
sbb
sti
ss
dec
adc
or
sub
mull
push
xor
data16
push
mov
or
sub
push
adc
jae
cltd
jne
stos
cmp
add
std
scas
movl
jp
in
cwtl
mov
rcrb
pop
int3
push
cmp
xor
sub
xor
shr
test
stos
fnstenv
imul
or
inc
jbe
pop
loopne
push
or
gs
push
mov
sti
in
xchg
mov
push
cmp
add
pop
test
aas
sti
and
mov
push
and
cmp
push
pop
adc
inc
sbb
aam
mov
leave
mov
add
lcall
jnp
sub
and
xlat
shll
mov
jb
lahf
out
imull
pop
jp
test
js
aaa
push
jl
ret
movsb
mov
cmp
and
test
or
movsl
ss
xchg
jmp
xchg
mov
jb
js
cltd
call
mov
les
push
lahf
addr16
sbb
addr16
xor
cmc
jecxz
ret
out
mov
mov
out
add
gs
cmpl
cmp
rolb
push
adc
mov
push
jge
repz
cmp
xchg
xlat
mov
scas
add
stos
jmp
dec
inc
fisubl
push
dec
cli
repz
mov
movsl
sbb
cmp
or
add
pop
jbe
mov
push
jno
xchg
shrl
stos
mov
push
negb
sub
lcall
in
sbb
popa
ret
sub
xchg
adc
pop
jg
sbb
xor
push
mov
lret
cltd
adc
inc
sub
faddp
clc
push
imul
movl
mov
aam
and
add
xor
mov
and
pop
test
add
data16
mov
lods
in
push
sahf
mov
jb
std
pop
or
add
insb
repz
inc
out
adc
fisubrs
sub
lods
outsb
push
inc
xchg
fisttpll
in
aam
test
pop
jp
loope
xor
andl
sub
pop
imul
ljmp
psubsw
ja
lods
push
shl
mov
xchg
sbb
hlt
or
pop
fdivrl
out
fsubrl
dec
lods
shl
mov
lret
xchg
cltd
dec
es
daa
mov
shll
or
shl
in
pusha
aas
and
dec
jecxz
xchg
inc
adc
inc
insb
and
push
addl
rorl
je
fidivrl
inc
mov
jns
fisubrl
in
push
xchg
nop
pop
pop
dec
int3
push
mov
cmp
clc
outsb
ret
cmc
xlat
clc
lods
pushl
cmp
loope
jecxz
lds
lds
pop
pop
cmp
out
repz
and
cmpw
insb
shll
xlat
std
mov
repnz
add
add
pop
mov
sbb
mov
mov
daa
push
mov
test
jge
adc
mov
mov
divb
repz
and
add
mov
or
jmp
es
stos
int
out
es
adc
leave
cli
mov
jno
or
push
push
cli
sub
mov
mov
loope
outsb
pop
mov
inc
cmpsl
pop
mov
loopne
clc
xchg
divl
fsub
movsl
xchg
inc
push
shr
mov
mov
push
push
xchg
pop
inc
dec
adc
and
pop
bound
incl
movsb
dec
mov
mov
sar
pop
dec
jle
adc
add
xchg
jns
lods
idivb
sub
pop
lret
push
sbb
push
pop
dec
pushf
lods
in
and
sbb
dec
mov
mov
push
test
lock
in
lea
divb
cmpsl
loopne
inc
sub
cmp
stos
mov
cwtl
fwait
daa
adc
or
scas
movups
sbb
sub
jne
pop
jo
mov
fwait
std
daa
shlb
popf
lret
mov
arpl
dec
arpl
lds
sub
cmpsl
adc
lea
and
adc
jne
cmp
lods
sbb
jbe
insb
jle
pop
imul
pop
inc
and
fisubs
push
cmc
inc
jb
jge
roll
pop
aad
std
pop
sub
lds
repnz
lock
or
loope
cmp
jmp
popa
ret
cmc
std
mov
cmp
out
lds
cmc
testl
fistps
in
sub
xor
stos
and
pushf
aad
add
dec
push
aad
insb
fidivs
push
lods
std
nop
iret
pop
pop
icebp
gs
lods
jle
and
push
xchg
and
add
ljmp
xor
cwtl
and
mov
pop
decb
adc
mov
and
push
fcomip
jmp
sbb
pop
arpl
lods
mov
sti
cmp
jmp
les
mov
jp
andb
cmc
iret
cmp
push
mov
out
inc
inc
outsb
scas
sub
je
fcmovb
jne
pop
mov
mov
xlat
jmp
xchg
aam
xor
test
sahf
std
inc
adc
adc
lret
mov
inc
pop
lods
mov
sbb
mov
cmp
mov
out
cmpb
xor
add
loopne
or
dec
sarl
aas
push
lret
pop
jmp
pop
pushf
add
mov
inc
mov
mov
xor
jns
inc
mov
mov
mov
mov
mov
mul
shll
xor
mov
repz
pushl
mov
in
sub
imul
push
mov
stc
shlb
add
add
cmp
pop
jl,pt
cmp
rorl
cmp
push
stos
test
mov
cltd
jge
push
pop
mov
mov
popa
pop
repz
or
je
je
out
push
dec
or
sbb
push
pop
pusha
xlat
orb
xchg
clc
fildll
pusha
sbb
mov
mov
pop
cld
out
add
rcl
push
in
dec
mov
cmp
popf
repz
jge
mov
insl
jno
ret
lret
testl
add
testl
pop
out
out
xor
sbb
scas
jns
andl
xor
daa
inc
aaa
test
pusha
dec
xor
fwait
outsl
cli
or
cmp
xlat
js
inc
pop
adc
les
scas
mov
xor
dec
pop
push
xor
xor
in
jb
mov
leave
cmp
mov
push
outsl
inc
add
xchg
cltd
xor
leave
shrb
jno
push
cs
cli
cmp
pmulhw
sbb
xor
xlat
fidivs
and
xor
mov
dec
aam
push
pushf
add
jne
jmp
aam
and
ds
outsb
mov
mov
repz
test
inc
loope
inc
inc
and
jo
mov
xchg
mov
adc
dec
sub
cmp
jne
scas
push
add
mov
pop
cwtl
loope
adc
mov
lock
shlb
dec
mov
imul
insl
mov
sub
test
ss
cld
cld
test
in
shll
cltd
adcb
or
xchg
into
xchg
add
sti
cltd
mov
or
mov
in
adc
xchg
xchg
jns
pusha
lods
push
adc
add
xor
dec
xchg
sub
ja
shr
movsb
push
loopne
dec
push
xor
out
mov
test
out
adc
loopne
jle
dec
insl
scas
scas
scas
bound
dec
nop
sahf
pop
mov
jecxz
movsl
pushf
dec
adc
and
push
pop
mov
mov
or
and
dec
cmp
and
mov
lods
imul
bnd
test
pop
inc
stc
and
loope
jmp
and
testl
in
movsb
adcb
mov
cs
movsl
icebp
sub
fidivrl
jae
mov
jo
mov
das
pop
xchg
ucomiss
mov
rcrb
mov
mov
xchg
cmp
cmp
adc
leave
cmp
add
jp
stos
push
int
aas
aas
push
adc
fistps
push
outsb
or
int3
lods
add
icebp
lret
pop
inc
mov
xlat
les
pop
push
sub
lret
notl
fidivrl
bswap
imul
sarb
mov
mov
inc
imul
call
popa
push
int3
mov
call
add
and
pop
push
push
mov
lcall
inc
xor
lods
lods
mov
repnz
jo
jnp
mov
jl
dec
test
test
je
cmp
roll
inc
mov
mov
cmpl
lds
dec
push
inc
out
out
or
jge
xchg
cmp
dec
aas
add
and
stos
pop
fistl
pop
fs
icebp
jbe
mov
lock
xor
sub
mov
nop
ret
je
ret
sti
dec
and
mov
jge
push
add
mov
imul
push
ficoms
or
xlat
stos
jl
shrb
add
mov
mov
sbb
mov
push
push
push
jae
aam
cmp
fs
enter
cmp
fisubs
sbb
jne
into
call
dec
adc
pop
push
mov
in
or
sbb
cs
add
jb
pop
mov
jp
bound
movsb
pusha
push
mov
and
mov
sbb
push
fildll
stos
mov
repz
mov
inc
repnz
sub
cmp
push
mov
and
mov
push
cmp
dec
xor
jbe
push
dec
lret
lahf
sub
cmp
xor
fcompl
mov
ficoms
inc
mov
or
cwtl
xor
lea
mov
shrb
mov
push
lods
mov
dec
test
push
jl
out
in
and
pop
stos
ss
cmpsl
mov
insl
jl
scas
inc
lds
jmp
push
es
cli
mov
mov
test
push
pushf
mov
nop
cmp
lds
rcrl
fldenv
dec
mov
out
pop
cltd
mov
add
pop
pop
popf
mov
cmp
jo
addb
jge
inc
jne
rcll
mov
int3
ret
test
sahf
jnp
inc
dec
cmpsb
mov
stos
jmp
mov
in
out
adc
jg
pop
push
and
xchg
mov
sbb
ret
pop
aas
sbb
pop
and
push
sbb
xor
xchg
adc
jno
rcl
or
int3
lock
mov
into
movsb
scas
inc
add
jb
add
test
aaa
ja
jbe
mov
lods
pop
push
cmp
sub
pop
loope
enter
outsb
inc
jbe
fstl
mov
popf
imul
xor
xchg
into
mov
data16
das
je
and
or
push
jecxz
dec
pusha
shrl
mov
and
mov
mov
mov
dec
roll
mov
popf
pusha
sub
push
jbe
sti
mov
mov
adc
jl
ret
dec
xlat
imul
lret
or
pop
test
idivb
and
repz
xchg
inc
and
rcr
shll
mov
aam
xchg
incl
call
jge
ficompl
dec
rep
sbb
xor
cmp
sbbl
std
xchg
mov
fdivs
dec
ret
jnp
lcall
jnp
push
mov
inc
sub
push
test
dec
inc
add
inc
push
jl
or
dec
push
mov
aad
add
push
lret
adc
movsl
clc
xchg
inc
adc
sbb
mov
adc
shr
push
xchg
les
insb
movsl
mov
fldl
jb
stos
imul
and
mov
cmovbe
pop
jge
push
mov
and
inc
adc
clc
jnp
aaa
cmp
rcrl
push
mov
fdiv
jp
push
inc
sar
add
dec
cmp
clc
lods
lea
xor
push
andb
inc
inc
xchg
jecxz
inc
loope
test
adc
dec
adc
loop
sub
push
adc
aam
push
aad
pop
mov
mov
sbb
in
mov
scas
cmpsb
in
jbe
mov
jg
fsubrl
mov
movsb
bound
push
daa
popa
mov
imul
addr16
shl
xchg
cmp
imul
push
push
mov
xor
call
pop
mov
cli
lahf
lahf
mov
xchg
insl
adc
mov
or
push
pop
or
aam
mov
lret
jge
dec
stc
pop
add
inc
hlt
xlat
addr16
inc
cmp
jb
andb
dec
mov
xor
xchg
cs
sbb
rcll
cmp
addr16
pop
stos
mov
or
pop
xor
sub
outsb
out
mov
ret
sbb
out
outsl
push
aas
adc
aam
imul
pop
jbe
ss
push
and
ljmp
imul
aaa
lea
test
adc
xchg
adc
push
cmc
jle
sbb
push
cwtl
pop
and
mov
aad
push
nop
or
ret
xor
jge
adcl
inc
push
add
fadd
insb
jbe
xchg
addr16
jmp
ss
addr16
repnz
pop
pop
push
out
scas
les
jg
pop
repz
add
test
dec
scas
push
rolb
sbb
daa
fcomps
test
mov
jae
mov
movsl
lock
inc
fmuls
adcb
add
sub
add
test
mov
cmp
inc
mov
stos
cmp
lods
aas
cwtl
jecxz
fisubs
jmp
add
cmpsb
lcall
aas
add
xlat
push
sbb
mov
and
add
cli
and
aad
jge
xchg
sub
pop
push
sbb
lods
and
out
stos
push
pop
add
sbb
mov
jae
mov
jo
mov
mov
das
stos
incb
ret
mov
pop
push
ds
loop
repz
adc
or
mov
mov
sbb
mov
pushf
xorl
xlat
daa
test
aas
out
xchg
push
gs
ss
push
lcall
ret
subl
mov
mov
iret
mov
mov
add
shrb
dec
dec
out
sbb
mov
pop
out
je
push
fists
loopne
scas
cmp
xchg
mov
and
les
loopne
mov
ret
push
pop
iret
pop
mov
jmp
add
lahf
and
jmp
ljmp
ficoml
pushf
inc
mov
push
test
mov
cmp
enter
lret
lret
mov
cmp
cmp
add
sahf
jbe
push
aas
shlb
or
cwtl
or
pop
out
fwait
push
aad
mov
stos
and
jnp
dec
nop
sub
mov
pushl
pusha
stos
ret
fld
loop
cli
leave
int
sub
jge
xchg
je
cwtl
jge
cmp
sbb
cmp
arpl
jne
mov
xor
loopne
pop
popf
std
lret
and
pushf
lock
outsl
sahf
lahf
inc
jbe
pop
popa
cld
jnp
or
adc
cmp
popf
sar
lods
jmp
adcb
jl
loope
push
and
js
ror
jmp
ror
insb
scas
call
push
out
iret
shrl
add
or
divb
jmp
into
xchg
add
dec
mov
or
hlt
push
cld
sub
sahf
ss
jecxz
inc
int
sbb
cli
mov
mov
and
xchg
dec
aaa
leave
mov
loop
fs
outsb
outsl
aad
insl
cmpsb
cltd
sbb
lods
iret
aad
lret
test
cmpl
out
or
imull
nop
adc
jg
mov
adc
sahf
push
or
sub
or
scas
ret
sti
xchg
mov
add
xchg
inc
adc
cli
gs
movsb
add
dec
or
jnp
aas
scas
sbb
mov
pop
data16
imul
out
nop
ret
xchg
outsb
testb
repnz
clc
jbe
push
sbb
adc
and
repnz
cmc
das
jle
push
out
or
pop
mov
lret
and
add
sbb
popf
xor
aas
pop
fs
xchg
mov
add
and
jle
fiaddl
xchg
mov
arpl
mov
out
mov
pop
aaa
xchg
xor
xchg
shrb
test
fsubl
imul
sbb
jmp
out
sub
dec
xor
je
into
bound
movsb
outsl
sbb
jns
stos
push
out
insb
add
fistpll
adc
xor
jge
cwtl
loope
pop
or
push
push
push
cmp
imul
pop
xchg
mov
xor
out
dec
testl
in
pop
sub
jnp
xchg
rolb
outsl
lret
fisttps
adc
idiv
pop
lret
sbb
ss
mov
sub
negl
loopne
sarl
sub
mov
rorl
mov
mov
sub
gs
mov
subl
loop
cld
jnp
cmp
mov
sbb
outsl
aas
scas
cmp
push
icebp
push
mov
hlt
cmp
test
or
lret
and
mov
xchg
movsb
enter
shll
mov
insl
scas
aaa
add
dec
mov
popl
inc
push
jnp
pop
and
add
out
pop
mov
popa
inc
rclb
dec
and
xor
clc
adc
call
fwait
arpl
and
sub
shr
repz
mov
lea
hlt
scas
ret
cmp
xchg
mov
jo
out
xor
popa
fiaddl
add
xchg
aas
or
adc
fpatan
mov
jae
loop
rclb
faddl
imul
jno
mov
jo
test
mov
pop
mov
in
sub
xor
int
mov
pop
mov
cmp
dec
mov
or
mov
pop
dec
inc
stos
jl
or
sub
add
mov
scas
repnz
ss
daa
std
inc
repz
jmp
dec
pop
cmp
cmp
dec
outsl
in
leave
iret
sti
jecxz
and
jge
fistps
push
leave
mov
fisttpl
cld
or
mov
ljmp
les
dec
out
sub
mov
in
test
cld
pop
fwait
inc
and
mov
jg
rol
inc
or
ss
pop
sbb
pop
cmpl
popa
lret
mov
mov
or
dec
loope
fcomps
jg
out
sahf
adc
dec
lea
push
ret
lods
mov
mov
cmp
pushf
movsb
xchg
adc
dec
bound
xchg
push
aam
mov
and
xor
sahf
xlat
in
pop
mov
dec
mov
inc
or
or
add
inc
dec
mov
aas
out
pop
incb
popa
in
cmp
pushw
mov
cmp
arpl
mov
pop
push
push
inc
mov
fisttps
lret
push
cld
ret
fnstsw
pop
mov
push
add
inc
inc
adc
xchg
pop
lds
into
mov
pop
adc
cmpsb
xor
repz
xchg
and
test
in
xchg
loopne
mov
push
shlb
inc
add
push
or
add
cmc
jb
ficoms
lahf
daa
outsb
stos
jns
movsl
and
rol
mov
inc
sbb
in
int
xchg
icebp
pop
add
jo
xchg
mov
jnp
neg
and
in
popf
pop
pop
sub
push
cmp
jb
jl
out
ds
or
push
jno
test
and
xchg
pop
outsb
mov
fwait
es
outsb
std
or
test
imul
cmp
les
lcall
idivb
je
pavgw
into
jg
push
mov
cmp
not
lods
insb
test
mov
rol
out
or
push
xchg
add
and
lahf
jmp
sbb
mov
nop
int
out
inc
pushf
xor
arpl
cwtl
hlt
xchg
jns
or
outsb
sbb
sbb
fdivrs
mov
ds
mov
add
in
add
pop
scas
sbb
xchg
roll
add
pop
xor
scas
lea
dec
sbb
push
xchg
xor
loopne
pop
mov
ss
sti
jnp
outsb
fisttpll
das
js
test
sbb
sbb
cltd
pop
sahf
mov
loope
jb
leave
and
cwtl
lret
mov
mov
sub
xchg
mov
addr16
dec
movsl
insl
orl
push
sub
cmp
cltd
mov
fistps
rolb
rcll
scas
and
pusha
mov
aam
lock
cwtl
cmc
pop
loopne
in
add
mov
jo
loop
cmp
pop
add
xchg
cli
je
jl
sub
xchg
and
pandn
shrl
adc
mov
js
lods
add
mov
add
insl
fnsave
sub
and
mov
jo
ljmp
mov
dec
push
jno
out
xor
cmpb
fstpl
popa
sub
xchg
pop
pop
mov
jecxz
imul
push
mov
scas
and
fs
lock
loopne
cmp
and
jnp
cmp
std
out
ja
cmp
lcall
mov
in
sahf
cmpsb
sbb
sub
dec
xchg
add
xor
scas
mov
mov
movsb
mov
ret
push
out
mov
stos
insl
and
fldl
in
imul
div
jmp
cmpsb
inc
sbb
inc
or
rclb
cmp
sub
mov
test
call
stc
xor
aad
lock
cmpsl
pop
arpl
daa
and
stos
divl
xor
sub
mov
adc
imul
add
xor
pop
scas
movsb
pusha
cwtl
fmuls
inc
gs
pop
addb
out
xchg
jb
push
shlb
fisttps
or
js
mov
test
and
or
push
or
mov
sbb
aaa
imul
or
imulb
fistpl
xchg
xchg
fdivrs
sub
fistpll
fwait
jnp
out
incl
scas
adc
loopne
jno
mov
mov
cs
movsl
mov
sub
popf
mov
lock
jmp
inc
stc
and
inc
pop
xlat
fistps
js
repnz
out
push
dec
cltd
lods
jns
cs
xlat
add
mov
enter
incb
cmp
mov
js
dec
mov
dec
pop
pushf
mov
xchg
cmpsb
push
jns
add
fcmovb
cmp
sub
out
mov
pop
inc
loope
xchg
xchg
cmp
addr16
aaa
and
inc
inc
push
testl
incb
mov
cld
es
sbb
sar
test
and
fimuls
clc
mov
mov
dec
push
xchg
push
sub
push
jmp
add
and
and
pop
loop
les
insb
int
in
cmp
stc
add
sbb
movsb
cmp
int3
xchg
sti
xchg
sti
push
xchg
test
sbb
lods
je
jne
gs
push
cs
add
mov
jmp
mov
lret
xlat
outsb
sub
jo
ret
cmpb
adc
xchg
outsl
test
inc
jb
cmp
cltd
mov
ljmp
lea
ja
jp
xchg
jne
mov
inc
aas
or
ljmp
cmp
mov
movsl
pop
inc
and
movsb
cli
test
shlb
pop
xchg
sbb
nop
repz
stos
outsl
mov
jecxz
aas
jne
lods
imul
dec
or
ret
adc
cmp
clc
popf
or
push
sbb
pop
mov
and
add
shl
mov
sbbb
xlat
sbb
loop
es
mov
add
xorl
fsubrp
push
xchg
stos
dec
notb
fwait
sub
xrelease
inc
dec
or
xchg
pop
jecxz
test
cwtl
pop
hlt
mov
loop
sub
int3
sub
inc
cltd
lods
daa
shlb
mov
addr16
in
mov
pop
push
pusha
mov
mov
cmpsl
test
fnsave
outsb
xchg
cmp
and
hlt
dec
and
lea
fst
mov
sbb
into
sti
push
data16
mov
mov
adc
xchg
cmpsb
push
sbb
dec
cs
mov
add
and
js
mov
pushf
pushf
movsl
scas
xchg
dec
out
pop
push
xchg
roll
rcll
xchg
or
mov
sub
fbld
imul
lods
inc
gs
sub
sbbl
pop
pop
jnp
lcall
ss
dec
cld
aas
push
lods
leave
jle
cli
jns
mov
push
mov
mov
clc
xor
testb
fimuls
and
scas
jbe
pusha
jnp
or
cwtl
xchg
pushf
xchg
loop
inc
cld
icebp
test
mov
and
inc
ret
out
pushf
popl
dec
lret
and
sahf
xor
sub
dec
and
movsb
scas
in
xorb
push
loop
outsl
pop
pop
cmp
sub
movsl
imul
or
fisttpl
popa
out
nop
into
clc
jne
add
in
ss
mov
into
or
xchg
mov
data16
cwtl
repnz
or
jmp
pop
les
add
pop
in
int
dec
xchg
xor
andl
notb
push
shlb
loope
lcall
outsb
or
xchg
popa
lret
test
popa
cmp
jb
in
int
mov
out
in
xor
int
stos
inc
das
adc
test
iret
xchg
test
jnp
push
sarb
add
clc
ret
call
aad
hlt
lds
dec
sbb
inc
fcoml
test
fwait
and
lods
xchg
lahf
fstpt
rorb
jne
ss
inc
fnstcw
fmul
or
dec
xchg
mov
dec
jne
mov
jecxz
jae
js
mov
push
mov
push
jno
adc
arpl
xchg
into
test
flds
cmc
mov
mov
push
push
xchg
cwtl
xchg
jecxz
scas
jmp
cmpsl
dec
filds
mov
lcall
adc
cmpsl
into
mov
sbb
inc
shlb
pop
jg
clc
sub
inc
add
jge
mov
jl
xchg
mov
cmpsb
xchg
pop
xor
xor
fistps
test
adc
add
jnp
adcl
sbb
mov
sub
mov
fs
push
mov
dec
push
mov
movsb
fdivs
jb
in
mov
ret
mov
push
cmp
addr16
dec
and
stos
cwtl
mov
pop
push
jns
sub
or
rorb
aas
mov
push
ja
les
arpl
jno
rclb
lock
sub
imul
scas
int3
insb
sub
dec
fidivs
cmp
fdivr
push
xor
mov
and
insb
adc
cmp
stos
cwtl
lcall
lahf
addr16
jae
sbb
sti
xchg
cmp
adc
jl
cltd
arpl
push
xchg
psrld
xor
ss
aad
in
push
ja
lods
adc
inc
sbb
sbb
icebp
lret
xchg
push
dec
cmp
cmp
xor
mov
inc
rolb
adc
loope
add
inc
mov
add
rol
push
pop
push
xchg
pop
sub
mov
ror
std
pushf
imul
testb
push
mov
outsl
leave
addr16
lods
pop
mov
sbb
jmp
lds
cmp
push
flds
sub
notl
jns
addr16
sbb
jo
ds
lds
mov
dec
outsl
mov
lds
outsb
cmpsb
aas
lahf
xorl
push
push
loope
xchg
cmp
dec
mov
mov
inc
cld
xor
shl
mov
shl
cltd
test
scas
icebp
repz
or
xchg
lret
outsl
xchg
in
push
sub
xchg
xchg
mov
and
nop
cld
mov
sarl
cmp
sbb
cmp
out
mov
xchg
push
xchg
pop
mov
in
shrb
jns
cwtl
int3
fstl
repnz
inc
or
stc
mov
or
pop
in
out
popf
inc
frstor
push
loopne
sti
nop
pushaw
or
push
pop
xor
in
inc
or
fsts
loope
or
sub
adc
mov
push
lret
out
xchg
test
shll
pop
xor
int3
lahf
pop
bound
sub
sub
dec
adc
imul
sub
ret
sub
jno
test
dec
xchg
sub
jecxz
jae
or
fsubrl
push
dec
filds
cs
and
ja
jge
inc
out
sub
into
addr16
push
pop
cmc
je
aas
xchg
movsb
rcrb
inc
lods
add
add
lret
rcrb
push
mov
xor
sub
shr
pop
and
sbb
cs
mov
lahf
pop
es
jg
insb
leave
xor
nopl
test
jae
jecxz
inc
cltd
pushf
int3
lock
push
or
or
mov
adc
xchg
inc
cmp
data16
je
in
cmpsl
int3
jns
loope
jg
cli
int3
sub
cmc
iret
mov
bound
scas
lahf
ficompl
adc
mov
mov
pop
call
xchg
sarl
mov
fwait
inc
dec
repnz
push
adc
ljmp
mov
xlat
mov
mov
inc
or
out
and
addr16
dec
stos
and
ljmp
jge
jae
mov
fstl
pop
jb
xchg
pop
sub
adc
out
xchg
lahf
and
pop
xchg
test
xchg
sbb
cmp
cmpsl
adc
leave
jns
shrb
inc
imul
add
mov
aas
rcll
jo
cmp
cld
add
lea
dec
sbb
in
xchg
mov
jno
lock
frstor
in
test
jp
divl
cmp
sbb
dec
ret
mov
sub
bound
or
loop
fiadds
cmc
pop
xchg
add
fs
inc
push
and
sbb
int
inc
mov
mov
aad
mov
jg
loop
sub
inc
stc
leave
sub
leave
arpl
stos
inc
ja
or
test
rorl
xchg
sub
pop
jge
arpl
mov
sub
jp
mov
xchg
nop
pusha
push
sbb
fidivrs
mov
jno
sahf
push
mov
pop
sbb
or
sbb
jl
fdivs
pop
jns
es
jne
inc
mov
mov
rcll
dec
mov
fldl
stos
cwtl
jae
inc
aad
pop
xor
or
int3
or
subb
mov
push
arpl
jne
mov
imul
xor
imul
push
fs
jmp
rclb
jne
insl
push
cltd
stc
or
cmp
repz
les
fwait
popf
fildl
add
cltd
ror
daa
xor
or
push
pop
cmpl
cmpsl
scas
pusha
push
shlb
xchg
mov
cmp
adc
mov
and
shrb
jo
push
cwtl
leave
iret
scas
daa
cwtl
fsts
mov
jmp
add
sahf
cwtl
jg
and
femms
add
mov
mov
dec
and
cli
in
push
xchg
lret
aas
mov
and
mov
sti
lcall
adc
and
int
mov
dec
pop
dec
iret
and
adc
pop
out
loop
lret
lret
rclb
mov
addb
xor
mov
push
xchg
addr16
cli
in
sarb
jge
fldt
loop
or
dec
jl
icebp
lods
nop
in
fistpl
fucomip
stos
std
test
dec
insb
xchg
push
pop
or
adc
jp
mov
call
lds
in
leave
push
je
mov
in
out
out
xchg
inc
mov
insb
test
bound
test
fdivl
pop
add
cmp
xchg
aaa
pop
adc
jg
clc
xchg
rorb
xor
mov
and
test
jp
jp
sub
sbb
sar
push
out
mov
pop
fucom
lret
mov
xor
repz
jmp
lret
lea
jne
aam
mov
loopne
aaa
sbb
xchg
pop
cmp
lcall
mov
lret
cmp
mov
shll
idivl
jb
sbb
jno
fdivs
sub
inc
add
pop
arpl
test
hlt
fwait
ss
pop
inc
ss
das
sbb
test
int
jl
mov
test
xchg
pop
mov
push
sbb
cmpsl
sub
movsl
lods
push
stos
testb
push
mov
pop
int3
in
mov
adc
lds
or
jmp
and
xchg
sbbl
xorb
mov
loop
test
scas
mov
jns
inc
fisubrs
xchg
push
push
jmp
cmpsl
data16
cmp
xchg
xchg
push
stos
or
xor
repz
repz
dec
out
nop
adc
mov
lret
outsl
jge
and
inc
sub
and
xor
or
push
js
fisubrs
jge
mov
adc
mov
pop
loop
pop
pop
mov
enter
pusha
in
in
jb
pop
xchg
bound
out
mov
lea
add
into
in
fiadds
in
sbb
add
loope
imul
sub
push
outsb
jno
in
jecxz
movsl
dec
xchg
stos
or
sbb
stos
xor
and
mov
sarl
xchg
or
jno
add
repz
jbe
dec
shlb
xchg
push
pop
cld
gs
mov
xchg
or
stc
shrb
push
or
enter
popf
mov
ret
sti
pop
sbb
or
jne
repnz
lahf
pop
fwait
lds
fmul
push
sahf
mov
fbstp
in
push
ja
dec
cmc
jae
gs
xor
insl
adc
fmull
test
mov
adc
shll
out
cmp
push
addl
add
push
push
call
dec
cmp
je
aad
or
bound
icebp
or
lcall
fistpl
dec
in
fldt
adc
or
and
loop
dec
pushf
jp
jno
movsl
cmp
lock
pop
or
sbb
xchg
inc
fimull
mov
push
jle
sarl
test
cmpsb
or
inc
in
jmp
mov
notl
ss
xchg
jne
push
xor
inc
fimull
dec
xchg
mov
hlt
pop
sbb
sarl
jmp
lods
pop
push
dec
sarl
xchg
push
xchg
push
mov
jle
cmp
bound
std
mov
in
dec
and
out
push
mov
psubw
xchg
or
mov
shlb
lea
and
mov
adc
xor
jmp
lret
push
xchg
mov
pop
xchg
xchg
out
inc
stc
dec
jmp
jmp
inc
xor
pop
pop
mov
mov
pusha
fucomp
xlat
sbb
cwtl
cltd
or
popl
mov
mov
lcall
pop
jns
sti
arpl
jp
int3
in
adc
mov
test
push
test
cmp
cmpsl
xchg
sbb
sti
gs
in
inc
or
jp
addb
popa
lahf
lcall
inc
adc
mov
loope
ds
loopne
push
dec
dec
jo
addb
test
gs
lods
xchg
dec
mov
jge
jecxz
sbb
jl
popa
jge
add
aas
xchg
test
fsts
adc
out
insl
nop
xchg
out
xchg
ret
and
sahf
clc
in
dec
inc
jbe
stos
daa
lret
xor
es
in
and
sarb
inc
or
push
inc
mov
mov
and
xchg
scas
pop
negb
xchg
xadd
pushf
or
cmp
cld
and
loopne
mov
and
xor
sbb
xchg
dec
shll
jmp
mov
push
jne
sub
fistl
pop
mov
jne
enter
adc
call
mov
push
out
fstps
lret
xchg
dec
pop
cld
scas
push
movsb
mov
jae
adc
sbb
repz
fcompl
fwait
loop
jp
rcll
out
xchg
cmp
sbb
push
loope
jle
and
hlt
xor
out
cwtl
in
sub
mov
fstpt
popf
test
jg
lds
cli
cld
and
push
jne
xor
aam
movsl
mov
lahf
cmc
or
scas
je
inc
add
or
icebp
add
xlat
bound
int
adc
es
add
adc
fcmovu
sub
sti
fcompl
fmuls
xchg
mov
sub
arpl
xor
scas
mov
fnstenv
incb
inc
shll
add
mov
xor
push
push
dec
pop
je
push
sbb
mov
bound
xchg
add
adc
int
xor
xchg
dec
mov
cmp
rol
sbb
xchg
enter
rcl
stos
sahf
jnp
pop
fdivl
add
sbb
addb
fdivr
roll
pop
jle
mov
inc
in
adc
inc
mov
cmpsl
sub
fs
xchg
insb
fstp
and
inc
mov
test
jecxz
xchg
mov
fwait
xchg
cmp
xlat
mov
adc
mov
std
jg
jne
imul
jecxz
lret
scas
mov
push
push
ja
scas
inc
repz
inc
pop
mov
adc
push
mov
lds
xchg
pop
add
add
xchg
cmpsl
sti
mov
aas
mov
cld
mov
mov
push
xchg
out
xor
shlb
outsb
cmc
cmp
dec
jecxz
sbb
fwait
lahf
mov
mov
aam
imul
push
hlt
fnstcw
ficompl
jbe
ror
inc
pop
xchg
dec
cli
xor
fnstcw
daa
lock
sbb
lods
incl
int3
inc
push
mov
popa
or
cmp
not
pop
sub
subb
call
ret
add
jnp
mov
push
xchg
cmp
lcall
xorl
cmp
fs
sbb
cs
jl
popf
inc
jge
movsl
mov
xor
and
mov
pop
mov
lcall
xorb
int3
lods
sbb
es
mov
loope
xor
cmp
adc
sbb
fbstp
or
mov
mov
or
or
xor
jns
sbb
aad
mov
fdivrs
leave
loopne
push
sbb
fs
leave
std
or
mov
int3
movsl
jl
push
xchg
sbb
mov
aad
test
sub
fxrstor
testl
jnp
and
loop
mov
sub
push
mull
sub
pop
scas
fs
push
popa
mov
int
stos
fidivrs
roll
mov
jmp
cmp
sarl
or
pop
jbe
mov
mov
mov
lret
lret
sbb
mov
mov
imul
mov
xor
sub
repnz
pop
shl
mov
rol
enter
in
into
test
pop
popf
lock
mov
xor
sahf
xchg
das
popa
xchg
cmp
sbb
xchg
or
ja
icebp
mov
pushl
pushf
out
insl
jmp
adc
jae
les
andb
aas
push
shrb
add
or
scas
pop
in
fsubrl
out
jmp
inc
cltd
repz
xchg
daa
cwtl
mov
pushf
aad
dec
xchg
sbb
fidivs
call
insb
stos
sahf
ja
aas
add
cmp
stc
adc
sub
cmp
or
push
xlat
push
in
loope
push
aam
add
hlt
stos
addb
mov
adc
xchg
pop
in
jns
mull
pop
lods
mov
push
dec
mov
pop
pop
mov
jle
mov
and
or
mov
lods
pushf
inc
js
push
jnp
pop
xchg
jbe
mov
pushf
mov
repnz
mov
test
repz
aas
xor
adc
pop
outsl
sarl
jle
adcl
or
xchg
into
or
jnp
pop
pop
loope
or
push
test
sub
add
pop
stos
ljmp
neg
inc
jne
mov
int3
sarl
push
mov
push
sbb
xor
and
pop
mov
or
jmp
pop
test
adc
jnp
add
out
outsb
cmp
mov
ja
out
xchg
test
pop
xchg
mov
nop
shrl
mov
xchg
lods
sub
inc
repnz
int
and
mov
xlat
add
mov
outsb
inc
push
repz
mov
sbb
jbe
push
pop
add
jmp
fwait
mov
mov
stc
jnp
add
leave
mov
and
aas
jge
divl
sub
sbb
shr
pop
shrb
test
inc
and
iret
outsl
dec
mov
push
lods
aam
fcmove
daa
and
and
aad
imul
mov
jmp
jae
std
mov
mov
sbb
dec
xor
mov
mov
xor
pop
lret
aam
pop
inc
std
scas
xor
repz
xlat
jb
push
push
add
add
push
dec
ds
dec
ret
mov
cmpsl
lahf
fidivs
and
into
scas
mov
mov
lock
jle
lcall
aad
fstpt
inc
pop
mov
xchg
add
jne
mov
lods
std
sbb
inc
shlb
popf
insl
xchg
test
fs
add
pop
sub
popf
jge
in
js
adc
jne
cltd
add
jmp
mov
fidivl
ds
imul
pop
loop
xor
repz
xchg
cmpsb
vpaddusw
adc
sbb
xor
cvtpi2ps
mov
inc
sub
mov
movsl
jle
movsb
dec
push
out
scas
adc
push
jb
mov
mov
pop
xlat
inc
adc
imul
in
out
mov
lret
cmp
sbb
popl
mov
add
cs
dec
iret
jo
adc
out
xchg
das
or
ficoml
test
test
repnz
push
xor
shll
jecxz
mov
jmp
push
popf
dec
pop
in
pop
fstpl
xchg
sbb
sbb
lret
hlt
cltd
sub
and
or
inc
mov
ja
pop
ret
fistl
inc
iret
hlt
adc
mov
pop
repnz
test
call
lock
and
mov
out
push
ljmp
jb
push
pushf
inc
loopne
outsb
sub
xor
jbe
lahf
inc
icebp
subb
dec
sarb
xor
jae
cmp
sub
mov
mov
push
shrb
dec
movsl
sahf
cli
pusha
iret
sub
jg
int3
iret
or
filds
mov
testb
cmp
arpl
and
test
add
inc
movsb
adc
fistpl
mov
inc
sbb
xlat
add
ljmp
add
enter
loopne
xchg
imul
bound
cmc
frstor
cld
dec
cli
or
xchg
insb
pop
fiaddl
daa
push
daa
movsl
stc
das
int
pop
or
out
imul
pop
fwait
ja
xchg
pop
call
fmull
loope
mov
add
lds
leave
out
testb
xchg
loop
mov
insb
mov
mov
inc
call
mov
fstp
repz
arpl
out
mov
shlb
push
xchg
and
push
mov
mov
add
out
in
cld
mov
pop
cs
fst
xor
negl
xchg
dec
nop
outsb
dec
inc
fistpl
sub
lea
dec
fwait
rol
pop
mov
dec
dec
mov
popa
mov
out
add
std
sub
push
enter
pop
inc
mov
push
sub
jp
negl
push
imul
mov
ljmp
jne
xor
push
pop
sbb
out
xor
cmp
ljmp
sbb
pushf
dec
js
pop
mov
mov
push
movsl
jbe
ficoms
or
mov
lds
inc
in
int
jl
bound
jecxz
cmp
dec
dec
lahf
fidivrs
in
movsb
pop
movsl
inc
repz
hlt
mov
std
mov
push
faddl
jle
push
mov
fnstcw
outsl
mov
xchg
jecxz
imul
lods
cwtl
fdivrl
pop
sbb
push
fstpt
pop
dec
daa
iret
xchg
movsl
loop
leave
xchg
mov
cmp
sub
jl
cmp
sub
jmp
jp
push
std
icebp
int
push
cmpl
push
and
jnp
xor
insl
daa
mov
sbb
sbb
cmc
xchg
add
jg
repz
jae
push
insl
loope
stos
inc
fisttpll
adc
outsb
cmc
adc
in
jno
ljmp
in
adcb
gs
les
stc
pop
idivb
imul
test
dec
arpl
add
pop
and
xor
or
test
sub
push
cmc
jle
roll
sbb
pop
jge
xchg
xor
aad
jne
or
push
inc
rorb
orb
test
imul
sub
cmc
xor
cmp
lcall
lcall
mov
popa
pop
mov
sbb
pop
sahf
fldenv
jo
mov
lret
add
pop
fucompp
pop
mov
mov
add
filds
dec
jp
mov
push
mov
clc
jmp
sub
nop
in
and
mov
sbb
mov
sub
repnz
repnz
fisubrl
ja
cld
adc
jb
xlat
pop
and
mov
cltd
pushf
adc
push
loop
sahf
ret
dec
mov
dec
les
jns
in
nop
mov
repnz
mov
jb
sub
or
nop
shl
hlt
in
dec
cli
and
in
xor
mov
stos
andl
mov
mov
loope
jg
sbb
xchg
xchg
push
mov
shrb
int
ja
mov
sbb
mov
xchg
and
cmpsl
mov
rolb
dec
cmc
fbstp
aad
dec
rorb
adc
xorb
repz
cmpsl
pop
pop
mov
inc
inc
js
insl
push
rcll
fcmovne
mov
cmp
mov
xorb
adc
pop
jns
cmp
jle
push
cmpl
push
sub
fiadds
jns
mov
fistpll
jo
mov
cmp
mov
sub
xor
mov
imull
cltd
loopne
aaa
sbb
jo
push
cmpsb
mov
icebp
jle
and
push
mov
push
sub
pusha
lods
jp
les
arpl
pop
xor
push
lret
sbb
jg
jo
gs
loop
sarl
in
xor
dec
loope
dec
out
arpl
rcrb
jp
inc
pop
cmp
loope
out
cmp
sub
sbb
shlb
cmp
lret
out
jecxz
repnz
ja
dec
pop
test
or
jg
pop
push
adc
push
lods
sub
mov
sub
sbb
movsl
push
pop
inc
pop
sahf
adc
sbb
bswap
dec
popa
stos
mov
daa
or
add
lcall
sbb
jle
adc
shrb
and
push
cmp
xorb
push
pop
mov
inc
mov
pop
clc
sbb
pop
sbb
mov
pop
ss
cmp
stos
ljmp
xor
sub
lock
fwait
and
mov
js
push
mov
les
negl
out
cmp
in
jns
inc
shlb
xchg
popa
sub
mov
mov
dec
jp
out
lods
aas
xor
rcl
fisttpl
jmp
enter
fcmove
int
lcall
daa
mov
hlt
clc
pop
mov
les
andb
pop
in
mov
gs
test
or
dec
or
xchg
dec
sbbl
les
rolb
lds
jge
mov
cmp
jg
inc
insl
xchg
pop
sub
push
xor
adc
push
cwtl
sub
xor
lods
fcompl
or
inc
test
mov
xchg
enter
stos
je
mov
scas
pop
and
out
mov
xchg
lret
lods
or
add
or
sbb
sbb
imul
lock
xor
out
in
rolb
nop
mov
cmpsb
imul
push
arpl
pushf
add
test
ja
jmp
and
outsb
push
jle
mov
fcomps
cwtl
sbb
inc
rolb
pop
push
xchg
bound
test
mov
jle
push
mov
movsl
xor
cmc
cmc
xchg
ret
aaa
test
insb
insb
aad
scas
pushf
loope
jg
leave
mov
sub
mov
sub
imul
repz
test
mov
movsb
aas
cmp
gs
movsl
ds
sub
popa
aas
xor
jae
ret
xchg
stos
out
push
pop
cmpsb
fldl
pop
push
mov
jnp
add
inc
fsts
adc
out
ljmp
jns
out
cmp
sub
and
iret
add
insb
cwtl
xor
mov
xchg
test
sbb
pop
pop
out
xor
and
mov
mov
jg
outsb
add
pop
pop
cmp
das
pop
mov
andl
mov
movsl
mov
jp
sub
rolb
cmp
mov
popf
aam
clc
and
aas
mov
mov
push
test
inc
xchg
rorl
bound
jg
mov
mov
pop
dec
dec
dec
or
inc
cli
mov
mov
das
xchg
dec
xor
pop
mov
push
jl
or
or
cmp
repnz
das
sub
sbb
mov
cmpsb
rcll
and
into
cmp
pop
pop
lahf
jle
push
mov
add
in
mov
add
insb
cmc
mov
pop
sahf
xor
jg
aas
loopne
dec
or
xor
jo
mov
or
jle
rorb
adc
sbb
mov
inc
sbb
sub
enter
scas
add
xor
aaa
daa
pop
inc
fistpl
or
jnp
outsb
lea
sub
or
pop
pop
call
or
data16
mov
rorb
jb
or
xchg
and
hlt
mov
in
cltd
push
sbb
pushf
in
inc
out
outsb
jge
push
lock
and
mov
jbe
nop
jmp
lahf
jb
or
imul
sub
int
int
dec
xchg
xorl
adc
addr16
dec
push
lret
adc
stos
insb
add
loop
push
mov
repz
jns
mov
je
jmp
mov
or
ljmp
jnp
fwait
or
inc
adc
inc
cmpsl
jecxz
adc
push
xor
push
sub
ret
shrl
scas
js
mov
fwait
ja
les
je
cmc
push
jge
sub
addb
mov
ss
pop
dec
repz
sub
movsl
bound
push
hlt
bound
stos
or
push
cmp
jecxz
aam
fsts
fs
hlt
and
and
xchg
inc
lea
cmp
sub
jns
or
xor
loopne
fimull
cli
cmp
shll
lods
das
mov
pop
inc
pop
movsl
or
popf
imulb
mov
mov
lahf
fs
ffree
iret
test
push
decb
sbb
daa
pop
int
jge
jbe
cmpsl
xor
mov
fsubr
push
mov
dec
sub
pusha
mov
aaa
xchg
subl
es
adc
push
dec
cmc
xlat
ja
mov
aaa
dec
pop
insl
mov
jecxz
ljmp
nop
jnp
sahf
inc
js
cwtl
iret
inc
leave
pop
add
and
and
push
mov
sub
test
out
pop
clc
jmp
dec
inc
inc
pop
fldcw
stos
sti
xor
enter
in
pop
mov
insl
push
and
hlt
or
scas
pop
sbb
xor
xchg
mov
cmc
or
sub
aam
jl
sti
sbb
sub
pop
sub
mov
or
jae
jns
rolb
sub
test
inc
lds
sub
movsl
test
jb
bound
cli
loop
jo
test
leave
mov
pmullw
orl
pop
dec
inc
ds
rcr
in
lods
test
out
popa
leave
sbb
sub
cmpsl
and
or
xchg
push
sti
pop
mov
mov
jno
cltd
in
inc
inc
mov
ficompl
mov
add
out
add
imul
gs
fiaddl
ret
stos
shr
call
les
push
sub
pop
lret
stos
cmp
lea
outsb
lcall
xor
push
xchg
test
cmp
inc
fisttps
sub
call
lret
rcrl
fisubl
in
jg
sub
aas
ffree
std
mov
pop
mov
sbb
cmp
xor
cmp
pop
insb
imul
sub
sbb
push
sahf
add
out
fwait
cmp
or
clc
inc
fbstp
adc
mov
sahf
andb
and
or
cmp
mov
cs
pop
fcmovb
movsl
fisubrl
xchg
xor
out
pop
xor
loope
xchg
inc
insb
push
outsb
in
lock
or
sti
jno
daa
or
imul
inc
repz
es
loop
push
lret
xchg
ds
mov
inc
inc
push
mov
fisttps
xchg
int3
lahf
and
out
pushf
stc
dec
mov
int3
stos
jmp
xchg
xchg
insl
dec
test
xor
outsl
dec
sbb
ret
and
jae
rclb
pop
and
jecxz
repz
cmp
inc
js
inc
mov
sti
inc
pop
pushf
xchg
fimuls
or
dec
and
lret
lea
orl
inc
add
popf
repnz
mov
xor
dec
pop
cli
out
iret
loop
dec
pop
add
or
and
xor
shlb
sub
ds
mov
mov
out
cmpsb
das
stos
iret
std
out
mov
mov
adc
ss
fldt
jge
js
adc
jmp
pop
mov
sub
push
loopne
rolb
pusha
cmp
mov
xchg
shr
push
or
divb
mov
xchg
out
mov
push
mov
inc
dec
shlb
sbb
push
mov
sub
notb
test
dec
xchg
repnz
das
sbb
push
pop
jne
fisttps
clc
sub
shl
push
push
mov
xor
mov
xor
cli
loop
cmp
pop
jmp
lods
enter
dec
cltd
and
out
rcl
or
orb
lea
sbb
gs
inc
pop
xlat
xchg
insl
push
hlt
shll
sbb
mov
outsl
lds
sub
add
xchg
or
sub
cmp
fiadds
repnz
ret
loop
mov
mov
hlt
jmp
jb
std
daa
js
sahf
leave
xchg
adc
mov
fbstp
push
cmp
aas
das
mov
jo
sub
aam
pop
sbb
push
cmp
rcrb
sbb
mov
xor
fnstcw
sarl
and
or
sbb
xchg
shlb
pop
aas
fcoml
mov
std
ja
rcrb
add
in
arpl
test
xchg
mov
add
xchg
shl
sub
jns
mov
in
cmpsl
popa
lods
lds
pop
mov
std
aad
pop
add
inc
sub
incb
and
jo
out
xor
fidivrl
test
dec
xor
or
lahf
lcall
pop
jo
sub
pushf
and
in
std
xor
fadds
mov
xchg
js
fcoml
and
xchg
lcall
sub
js
sarl
dec
sub
jp
shlb
pop
daa
sub
aad
dec
jmp
xchg
adc
lds
mov
inc
out
push
out
jo
sub
and
negl
bound
bswap
out
aaa
mov
mov
push
push
popf
jno
ret
xlat
pop
jo
mov
xchg
push
jg
aam
adc
mov
bound
outsl
andl
sbb
jo
mov
out
dec
cmpsl
jno
and
push
imul
jmp
sub
int
test
inc
and
push
cmpsl
add
push
pop
mov
dec
sbb
enter
and
arpl
sbb
push
mov
or
inc
scas
add
pop
pop
cli
pop
stc
imul
mov
dec
movsb
aad
dec
clc
sub
inc
add
ljmp
pop
mov
inc
cmp
sub
aas
inc
xchg
mov
aad
xchg
lds
xchg
pmuludq
push
out
dec
shl
movsl
pusha
cld
jo
lds
aaa
rclb
sub
xchg
push
xorl
xor
xor
mov
push
and
add
mov
repz
pushf
inc
or
or
add
mov
data16
adc
or
fld
mov
sbb
rorl
cmpsb
rcrb
scas
xchg
jnp
nop
sbb
jmp
mov
xchg
mov
mov
inc
cmp
fsubr
outsl
in
fs
cmp
lcall
out
int
and
dec
pop
into
mov
enter
pusha
mull
shll
popf
cmpsl
xor
jp
testl
shll
push
xchg
movsl
mov
adc
mov
addr16
aas
xor
dec
push
inc
push
xlat
into
das
pop
cmp
mov
and
inc
popa
adc
sub
cmp
lret
test
dec
mov
outsb
inc
or
jnp
xor
pop
enter
fiadds
enter
push
jb
hlt
xor
iret
rolb
xchg
insb
int
adc
xchg
jns
adcb
cltd
pop
insb
mov
mov
mov
dec
xor
inc
pop
cmp
mov
dec
lret
add
dec
ficoml
gs
mov
mov
xchg
int3
test
mov
icebp
shrb
rcrb
dec
xchg
in
pop
fadd
icebp
clc
xlat
push
std
fimuls
xchg
cmpsl
push
jnp
push
fdivrs
mov
dec
cli
loopne
mov
adc
add
inc
idivb
xchg
in
and
sbb
xchg
push
sub
xor
xor
hlt
inc
inc
sar
out
pop
xlat
and
dec
jge
xchg
rolb
xchg
add
jbe
mov
in
and
and
outsb
lods
lcall
ret
push
aam
mov
push
into
insl
subl
ror
ficoml
andl
mov
sub
or
or
pop
cmp
mov
clc
mov
jns
lret
cwtl
jg
aaa
into
data16
lods
es
xchg
mov
pop
call
xor
movsb
pop
loopne
int3
loope
pop
xchg
sub
lds
pop
adc
mov
pop
lret
push
loopne
mov
repz
sbb
outsb
xor
xchg
push
xor
out
lret
dec
repnz
lods
dec
mov
cmp
ficoml
xor
xchg
xor
or
sbb
ljmp
dec
int3
inc
sub
repnz
lcall
cld
push
dec
push
mov
cmp
mov
mov
inc
pop
push
xadd
out
xchg
pop
mov
cmp
cmp
jnp
test
ss
cs
dec
mov
adc
fimuls
or
lahf
mov
stos
imul
icebp
pop
out
mov
and
ja
jg
add
int
in
mov
mulb
fcmovnb
xor
and
nop
outsl
mov
dec
push
in
enter
mov
in
mov
lds
fmul
lcall
and
ret
movsl
dec
and
dec
jl
push
pop
cltd
movaps
bound
test
adc
inc
repnz
fcmove
aam
mov
ds
pop
or
or
and
int
and
leave
into
sbb
rclb
dec
insl
add
and
in
xchg
and
push
mov
lods
inc
hlt
lret
and
adc
push
pushl
add
xchg
push
mov
mov
pushf
insl
lods
jmp
shll
or
mov
xchg
cmpsl
mov
jmp
in
fcomp
pop
mov
pop
sbb
add
jge
nop
cmpb
adc
in
mov
sub
fxch
rcr
faddl
or
notb
add
lea
pop
adc
ret
mov
sbb
shlb
or
repz
lds
or
cmp
xor
leavew
mov
cmp
xor
pop
cmp
xchg
jl
jl
pop
aaa
sbb
cmpl
mov
adc
dec
daa
sbb
fstpl
jbe
shrb
adc
stc
loope
mov
adc
fistl
xchg
loop
add
push
call
lds
dec
jmp
les
sub
mov
cwtl
int3
in
stos
push
ja
pop
dec
jmp
mov
int
fnsave
add
push
sbb
inc
aaa
shl
xchg
sub
lret
push
ror
movsl
xchg
fnstenv
sbb
ljmp
lcall
scas
and
inc
fsubl
int3
leave
dec
packsswb
out
pop
dec
add
mov
add
lret
loopne
sub
gs
push
mov
dec
shll
nop
shlb
and
cli
loop
pop
add
jne
push
mov
xor
dec
hlt
mov
ret
xchg
pop
jns
in
stc
cltd
add
sbb
push
pop
sub
inc
sub
repz
inc
adc
pushf
mov
cwtl
out
test
repnz
out
outsb
mov
dec
fimuls
push
ja
jns
ret
rorb
jne
jno
filds
mov
rcl
stos
cli
jbe
shl
jnp
test
lods
mov
je
mov
dec
jecxz
mov
not
lret
sub
mov
test
rol
or
call
push
cmc
aas
in
cld
adc
hlt
jno
outsb
jbe
jbe
imul
loope
sbb
gs
lahf
sbb
adc
jmp
daa
int3
idivl
lock
popa
mov
pop
mov
adc
mov
mov
lcall
ret
adcl
sub
das
add
fisubrl
inc
jno
or
and
jge
or
dec
pop
out
push
dec
mov
xor
fmuls
pop
aas
mov
cmp
or
pop
in
rcrb
jo
fildl
mov
inc
lds
stos
xchg
jl
sub
mov
and
jmp
inc
fiaddl
fisttpll
cmp
or
cmp
dec
adc
cmp
cmp
mov
mov
fadds
subl
jp
cld
pop
lock
and
incl
dec
es
xchg
xor
jge
aam
call
mov
mov
or
add
mov
mov
mov
cmp
jp
leave
mov
lahf
clc
xchg
or
dec
jnp
pop
hlt
icebp
cwtl
sub
inc
mov
and
cmp
cmpl
movsl
loope
adc
scas
pop
pop
jo
dec
rcr
xorb
jge
daa
xor
mov
cmp
inc
mov
cmc
push
pop
lds
fs
daa
pop
add
pop
fstps
inc
pusha
fxam
bound
xlat
and
movsl
mov
pop
std
or
lret
mov
arpl
pop
popa
push
pop
cmp
xor
test
mov
in
mov
adc
cmp
jbe
imul
inc
mov
mov
mov
cmc
sbb
inc
jecxz
jp
test
adc
dec
push
sbb
cmp
push
test
cmpb
sub
or
push
sahf
int
mov
mov
lods
xor
push
xlat
movsb
sub
mov
and
outsb
cmp
jb
sub
mov
fsqrt
inc
mov
jns
fldcw
jo
lcall
mov
nop
loop
nop
mov
jmp
cmp
adc
and
pop
popa
leave
movsl
jl
ja
loop
mov
aad
cmp
inc
mov
je
popf
cwtl
hlt
call
dec
fistpll
les
cmp
icebp
jno
lds
xchg
xor
dec
in
cltd
test
cmp
sbb
sbb
push
push
inc
push
cmpsb
movsb
loop
cld
mov
dec
or
adc
add
jg
mov
hlt
push
mov
pop
imul
bound
jae
nop
faddl
cmp
inc
sahf
aaa
js
in
cmc
repnz
aaa
addr16
stc
aaa
mov
into
int
in
or
and
out
idivb
cmp
mov
jne
adc
adc
pop
and
loope
psllq
xchg
xchg
ret
adc
inc
add
inc
or
dec
and
cmpsl
mov
es
sub
sbb
int3
stc
dec
dec
push
lds
out
jle
sar
mov
inc
jmp
jmp
js
enter
sub
decl
mov
cmpsb
push
push
addr16
aaa
fwait
lahf
lods
push
ljmp
pop
mov
pushf
jb
in
pop
and
xor
das
or
sbb
cmp
mov
inc
addb
pusha
push
movsb
dec
adc
mov
iret
movsl
aam
dec
stos
out
nop
mov
lods
pop
test
lret
mov
std
mov
or
xor
sbbl
xchg
loopne
out
nop
jns
decl
adc
adc
sbb
lods
push
shl
iret
inc
test
dec
pop
movsb
ja
movsb
mov
imul
adc
test
adc
stos
add
arpl
xor
xor
cmp
mov
mov
pop
push
mov
arpl
js
push
stc
in
add
popf
mov
xchg
icebp
xor
test
or
xchg
in
icebp
or
jge
ja
xchg
lea
pop
mov
imul
faddl
mov
roll
fimull
push
dec
inc
fbld
pop
in
idiv
iret
xor
testb
test
jb
fisubl
fs
pop
lods
pop
cs
movsb
aas
jno
add
lds
bound
and
cmp
rcl
sub
rcll
inc
sbb
or
scas
fidivs
enter
sub
add
sarb
inc
loope
les
jge
add
aaa
and
mov
dec
pop
and
fisttpl
scas
fadds
popa
leave
add
insb
mov
and
mov
in
inc
sti
cmpb
dec
pop
xchg
push
xor
xchg
mov
xchg
pop
bound
mov
repz
cmp
dec
das
push
inc
mov
dec
mov
loop
das
sbb
pop
int3
xchg
sbb
cmp
cmpsl
test
add
pop
outsl
in
mov
test
sbb
mov
jns
pop
jmp
sub
lock
ljmp
xchg
and
cmpb
jge
out
in
scas
test
jbe
sbb
add
add
aaa
fsub
pusha
mov
mov
push
fcomip
jecxz
rcrb
scas
and
cmp
adc
xor
hlt
jg
les
jbe
xchg
aad
xlat
push
vmovhps
and
adcb
test
movsl
leave
daa
pop
popf
cmp
pop
jl
imul
stc
nop
loope
imul
notb
push
cmc
call
and
jmp
lock
pop
out
aaa
out
sub
out
ret
and
nop
mov
daa
inc
mov
mov
imul
push
enter
in
movsl
std
fucomi
addr16
aaa
aaa
inc
pop
popa
push
sarl
push
xlat
jl
pop
out
and
leave
mov
mov
insl
mov
aaa
in
testb
clc
push
popa
sarb
outsb
ds
xor
xchg
les
movsl
popl
icebp
dec
popf
lods
jg
shlb
dec
fldenv
repz
or
es
mov
push
outsb
cmpsb
and
outsl
add
popa
mov
daa
push
xchg
adc
stos
out
mov
dec
jo
insb
cmc
sbb
aad
sub
outsl
sub
add
into
pop
loope
es
addb
icebp
cmp
bound
push
rcrb
cmp
mov
jge
insb
mov
stos
xchg
stos
dec
in
leave
enter
addr16
mov
or
sbb
movsb
aam
pusha
sub
testb
es
sub
hlt
dec
orb
or
pop
rol
sbb
xor
sub
rcrb
xchg
jmp
pop
sbb
mov
rorl
cmpsb
push
cmp
test
lahf
scas
jb
out
int3
mov
mov
shl
nop
xchg
dec
adc
ljmp
sahf
pop
pop
out
lcall
mov
in
xor
xchg
xrelease
push
jnp
jno
sub
gs
mov
loop
notb
mov
aas
ret
into
sarb
adc
dec
cltd
cmp
xchg
add
cmp
andl
into
cs
jmp
in
xor
hlt
jnp
xchg
jns
push
jle
jmp
xchg
sub
cmp
iret
test
push
xchg
pusha
jmp
xchg
imul
ret
pop
xorb
inc
adc
incl
lret
pop
push
pop
icebp
adc
adc
jae
xchg
lock
out
pop
xchg
inc
incl
enter
lcall
and
mov
mov
push
adc
and
sahf
lahf
mov
jne
popf
adc
aad
push
incb
movl
fbld
fdivs
pushf
and
mov
mov
scas
fcmovne
jge
dec
adc
jbe
leave
loop
sbb
and
sbb
push
insb
testb
lea
mov
dec
sbb
in
mov
popl
add
imul
aad
dec
push
cmp
xchg
aaa
dec
inc
jno
and
enter
fcompl
adc
rol
in
std
push
jmp
push
sub
imul
call
out
jp
jno
mov
dec
jmp
cmp
pop
inc
stos
sbb
mov
enter
rep
stos
idivb
sbb
push
mov
sub
call
cli
scas
int3
sub
adc
xchg
and
mov
jle
mov
gs
ds
mov
adc
pop
inc
mov
loop
shll
scas
repnz
shlb
sbb
xchg
add
inc
inc
jae
in
shlb
cmp
mov
jae
mov
pop
lods
and
les
adc
mov
fistl
sub
test
fadd
in
and
adc
jnp
lret
mov
adc
and
insb
addb
adc
int
xchg
imul
dec
lods
push
jnp
xlat
shlb
ret
dec
pusha
ret
fmull
cmp
cmp
pop
sbb
movsl
lds
unpckhps
repnz
daa
or
aaa
and
lahf
sub
sahf
lea
mov
jmp
cli
mov
outsl
or
push
clc
push
inc
aaa
mov
mov
fcomps
les
andb
jae
das
std
cli
push
or
int3
lds
or
fcmovnu
xchg
daa
push
pop
fisttpl
popf
push
push
pop
sub
dec
test
cmp
pop
mov
mov
xchg
push
int3
fisttpll
push
rorb
pop
mov
js
mov
cmp
sub
insb
dec
xchg
dec
js
loopne
adc
jecxz
jo
and
not
jge
mov
jno
cld
movsb
int
mov
stc
scas
popa
stc
inc
out
sbb
jns
pop
lods
in
lock
xchg
scas
rclb
gs
dec
stos
mov
fwait
in
cmp
push
cmp
js
mov
gs
outsb
je
pop
pop
push
imul
ja
xchg
popf
cli
or
jmp
add
fwait
adc
andl
mov
pop
cli
push
pop
das
shll
ds
or
mov
outsl
scas
pop
adc
outsb
int
arpl
jo
inc
daa
mov
sub
insl
or
mov
jo
insb
push
inc
les
jns
lahf
cs
out
inc
sub
cli
stc
push
cmpsl
dec
out
aaa
cmpsb
jbe
dec
cmp
and
or
lock
cmp
pusha
mov
sbb
rol
jmp
xor
mov
pop
cmpsl
jae
adc
lea
outsl
mov
adc
fldcw
pop
and
out
aas
movsb
mov
sbb
xchg
int
andl
xchg
xchg
stc
mov
and
cmp
add
cwtl
jmp
mov
push
int3
test
sbb
xor
sbb
call
je
aad
add
jmp
cmpsb
jb
mov
iret
xor
popa
xor
das
cmpsl
call
imul
ret
or
ljmp
push
cld
je
roll
mov
repz
lea
ja
scas
sbb
aam
mov
shll
cmp
and
int3
loop
fimuls
cwtl
push
out
bnd
pop
and
scas
mov
jae
jns
mov
cmp
xchg
xlat
mov
jae
loope
ss
mov
rcl
mov
sub
pop
dec
daa
cwtl
push
fs
das
mov
or
jle
mov
sub
push
inc
push
jg
dec
lock
jecxz
shrl
jl
cmp
mov
and
inc
repz
ret
aad
mov
popa
sub
pop
insb
mov
mov
mov
or
fstps
je
add
sarb
loop
push
in
into
bound
lds
lock
rcl
lds
jbe
lret
aad
minps
adc
xchg
adc
rol
sbb
sbb
inc
testb
outsl
lods
or
ror
push
xor
stos
into
fs
xchg
mov
add
inc
jmp
flds
jae
sti
data16
fdiv
jns
lcall
and
jb
inc
xchg
repz
imul
cwtl
sub
adc
jl
cmpsl
sbb
repz
fdivl
jge
adc
or
daa
xchg
iret
loopne
push
sub
stos
aas
pop
pop
jmp
cs
fisubrs
fidivs
ljmp
xchg
mov
mov
adc
nop
outsl
mov
push
aad
aas
pop
push
ljmp
push
dec
sub
movsb
pop
xlat
dec
mov
cmpsb
dec
aad
and
and
jecxz
fstpl
mov
movsl
jp
fimuls
jb
scas
rcr
call
mov
pop
mov
ret
mov
lcall
rolb
aad
scas
push
inc
test
cmpsl
mov
dec
and
dec
fucom
adc
mov
mov
push
jb
int3
mov
mov
fdivl
in
mov
xchg
xor
push
enter
adc
mov
neg
dec
lcall
fwait
push
and
rcrb
jo
inc
popa
out
dec
dec
pushf
pop
pop
sbb
inc
in
sub
movsl
insb
xor
sub
adc
or
pop
sub
mov
cwtl
popf
and
int3
push
sbb
scas
jb
xchg
xchg
js
adc
lret
mov
xlat
jns
xor
jo
push
mov
mov
inc
inc
mov
dec
stos
pushf
test
inc
inc
jae
aaa
int3
lret
notb
mov
iret
das
mov
in
pusha
jl
scas
lret
inc
bnd
add
test
enter
xchg
inc
sub
sbb
scas
jns
int3
adc
stos
outsb
push
cltd
push
sub
push
daa
mov
add
mov
lret
dec
daa
xorl
aam
popf
mov
test
xor
lock
sub
lods
negb
loop
dec
sbb
add
pusha
pop
jp
imul
jnp
outsb
jle
jmp
inc
fimuls
loopne
jl
arpl
rcr
xlat
adc
or
and
sbb
loope
push
mov
mov
mov
push
inc
cmpsb
jno
clc
in
dec
out
and
jno
jl
nop
mov
add
shrb
jnp
xchg
lret
cltd
jge
bound
jg
mov
sbb
jnp
cmp
cmpl
insb
mov
lahf
cmp
xor
pushf
jmp
mov
or
adc
rorb
lea
adc
dec
mov
adc
fsqrt
inc
pop
stos
xchg
dec
and
xor
repz
inc
sub
ficomps
loope
in
fnsave
fsubrl
out
sbbb
adc
sub
orb
les
xchg
outsl
pushf
aam
fisttps
add
push
pop
pop
sub
cmp
dec
into
sbb
mov
cmp
inc
mov
push
push
mov
arpl
aad
mov
stos
in
push
xchg
push
cmp
push
insl
pop
dec
rorl
stc
fdivs
testb
leave
jp
stos
insl
sub
addr16
mov
outsl
out
mov
pop
mov
loopne
xorl
jmp
inc
ja
cs
daa
sbb
push
xor
pop
movsl
fldcw
mov
xor
orl
jnp
add
es
xor
lahf
popa
mov
sub
xchg
mov
xchg
stc
rorl
cmc
leave
fwait
add
popa
fcoml
daa
push
outsl
arpl
xchg
inc
mov
inc
gs
lahf
rorb
sub
outsb
jbe
stos
jl
mov
sbb
sbb
push
mov
out
jb
pop
mov
xor
jge
in
cmp
mov
filds
dec
mov
mov
pop
sbb
cwtl
shrb
inc
push
xchg
subb
and
push
cwtl
cs
xchg
stc
push
jle
leave
lcall
pop
dec
adcb
xor
and
icebp
lods
out
sub
fldenv
jle
inc
in
test
adc
je
jl
aaa
test
mov
jnp
call
repnz
inc
jne
xchg
vandps
insb
cmp
mov
jecxz
and
add
jecxz
cltd
inc
jecxz
push
pop
mov
mov
stc
mov
push
jle
push
sbb
and
jge
xchg
jg
fwait
in
cmp
or
jl
lock
xchg
cwtl
pop
lret
adc
es
jnp
mulb
jl
addl
or
lret
cmp
lea
push
mov
dec
push
and
sbb
mov
sub
jg
stos
mov
into
sahf
pop
in
lcall
arpl
xor
pop
cvtpi2ps
adc
jb
sbb
mov
rorb
insb
dec
adc
aam
out
or
push
inc
add
mov
push
movsb
sub
fisttpl
movsb
jae
cmp
gs
jg
inc
dec
dec
xchg
inc
cmpsb
cmp
xor
or
fsub
jp
xor
and
jle
or
cmp
shrb
push
scas
mov
decl
jmp
mov
pop
cli
xchg
leave
mov
aaa
cmp
jb
leave
in
loope
push
in
mov
fs
js
cmpsl
mov
fcompl
cmp
sahf
insb
add
push
fisubrs
pusha
addr16
rdtsc
mov
jp
mov
mov
icebp
jge
mov
hlt
adc
or
lahf
negb
aaa
mov
loope
cmp
mov
rcll
lds
push
movsl
sbbb
jns
test
pop
cmp
jne
clc
sbbl
xor
bound
adc
ret
add
rolb
cmpsb
mov
fsubrl
mov
popa
imul
add
sbb
mov
shl
fldl
pop
sar
adc
xorl
add
test
adc
push
and
cmc
in
sub
jbe
ret
dec
inc
jle
inc
mov
gs
or
jp
mov
or
mov
jp
sbb
mov
outsb
sub
jo
test
or
jecxz
cmp
out
das
fdivl
ljmp
leave
stos
inc
xchg
cmp
mull
popa
aas
inc
ja
das
xlat
popf
dec
dec
jge
icebp
inc
pop
repz
dec
push
or
cmp
lcall
aaa
stc
or
leave
cmpb
adc
or
or
inc
lcall
mov
ret
jo
iret
adc
mov
neg
daa
mov
pushf
jno
pop
rcrl
adc
cmp
data16
movl
popl
ret
sub
pop
cli
ljmp
daa
nop
leave
lods
and
clc
fiaddl
sti
daa
cmpsl
mov
nop
jne
add
cli
sbb
inc
out
mov
popa
xor
shrl
pop
frstor
inc
xor
sbb
xlat
sbb
xchg
jg
outsl
lret
cld
outsl
mov
or
or
or
cltd
sbb
xor
lahf
je
test
pop
test
xor
adc
mov
xlat
inc
jle
pop
adcb
push
dec
in
dec
xor
je
sbb
negl
sbb
sbb
or
push
flds
sub
jae
aad
inc
repnz
arpl
cmpsb
fisubs
and
out
sub
addr16
arpl
stc
mov
icebp
sahf
js
cmp
pop
sbb
fdivrl
fildl
stc
jge
lods
xchg
clc
pop
and
adc
mov
or
adc
and
sbb
gs
stc
pop
adc
divl
add
xchg
sbb
pusha
sbbl
cwtl
cmpsb
imul
lret
jmp
inc
push
mov
call
pop
ret
ds
lds
in
mov
jle
push
sub
add
push
insl
add
fistpll
adc
sbb
inc
ja
aam
movsb
mov
lock
mov
jmp
lock
or
cs
pop
inc
shll
imul
push
rep
dec
mov
or
lret
aam
mov
movsl
pop
fs
pop
bound
into
mov
jo
rorl
sbb
push
sub
and
test
cwtl
cmp
fcompl
adc
das
inc
icebp
or
sti
fiadds
repz
adc
inc
cmc
ret
jmp
mov
das
int3
inc
mov
aaa
xchg
sbb
lcall
mov
into
or
aas
fcom
xchg
cmc
and
adc
sbb
daa
jge
mov
test
repz
mov
and
inc
push
fxch
iret
notl
leave
lcall
loop
es
call
stc
jp
cmp
dec
push
xchg
stc
sub
inc
push
jp
dec
daa
testb
pop
jbe
sub
sub
sub
jmp
int
push
jns
add
xchg
stos
sub
add
lret
je
repnz
push
jb
je
and
call
jb
inc
push
lret
cwtl
les
mulb
xchg
push
xor
fucomi
hlt
jo
insb
jo
arpl
inc
jne
pop
or
lds
sub
pop
mov
add
adc
rcll
in
sub
push
fildll
mov
adc
jnp
cwtl
insl
dec
scas
push
test
mov
jp
mov
mov
push
pop
sbb
pop
scas
sub
das
mov
stos
into
popa
clc
xchg
jmp
aaa
insl
jnp
outsb
lahf
mov
mov
cmc
repnz
cld
cmp
inc
sub
adc
rcrb
lret
mov
mov
jle
test
into
test
cmp
or
sub
out
and
or
mov
sti
jecxz
fldt
ret
inc
out
and
lods
mov
inc
lret
in
sub
add
xor
sub
pop
or
outsb
mov
stc
and
subb
dec
pop
xor
test
and
dec
rcl
das
dec
bound
xorb
loopne
sub
lret
or
cltd
aaa
adc
fadd
xchg
cli
fsts
lret
stc
xchg
adcb
inc
shrl
adc
xchg
fcomps
cld
lock
nop
outsb
dec
or
cmp
rcr
fwait
lret
add
nop
dec
divb
lods
mov
sbb
out
clc
jno
sti
inc
and
add
loopne
and
mov
sahf
cmp
and
in
ret
out
ja
inc
arpl
dec
add
mov
xor
ss
cwtl
outsl
cmp
xchg
fs
enter
dec
xchg
imul
inc
xor
sbb
pushf
mov
adc
jmp
xchg
push
lret
adc
pop
inc
xor
xor
and
je
pusha
fbstp
leave
es
mov
jmp
jnp
pop
stos
insb
mov
mov
test
pop
shl
pop
and
scas
push
cmpsl
inc
sti
mov
mov
addr16
inc
xor
pop
xlat
adc
outsb
dec
pusha
shrl
cli
mov
fstpt
inc
mov
jo
xchg
pop
aas
mov
sub
cwtl
or
pusha
repz
xchg
xchg
mov
mov
add
and
pop
xchg
push
xor
call
mov
mov
bound
mov
shll
das
repnz
lret
mov
pop
or
xchg
add
test
mov
sbbb
add
fiadds
pop
cmpsb
and
cmp
mov
pop
les
jb
jmp
repnz
xchg
subb
push
jle
sub
push
int
ret
shl
int
dec
cwtl
fstpl
push
rcrb
adc
jnp
inc
sbb
lret
pop
dec
mov
mov
cmpb
xlat
imul
pop
fidivrl
and
shll
mov
movl
or
and
mov
ficoms
dec
pop
add
dec
xchg
das
fisubs
xchg
sbb
cwtl
jae
xchg
push
inc
jle
xchg
lock
mov
fs
out
adc
jle
pop
inc
xor
sbb
push
cmp
adc
mov
aaa
dec
ffreep
lea
pop
lods
enter
ljmp
out
faddl
inc
sbb
insl
mov
div
in
mov
gs
ficoms
push
mov
mov
jo
mov
add
push
into
test
fildl
call
lcall
data16
adc
adc
pop
push
fcomi
or
pop
cmp
out
mov
mov
mov
sbb
and
clc
shll
xchg
fists
sub
add
movsl
jne
mov
fistl
ljmp
cmp
cmp
rolb
sbb
shl
das
aad
pop
mov
dec
xchg
test
pop
lods
sbb
setl
ret
sub
or
call
pop
sub
addl
cwtl
iret
in
call
adc
loop
adc
js
pop
mov
arpl
popf
cmp
push
jmp
sti
les
out
loope
xor
mov
pop
pop
sbb
popa
mov
ljmp
xchg
dec
cmp
adc
pop
imul
leave
inc
sti
xlat
mov
sub
dec
loop
clc
sarb
mov
inc
xchg
xchg
mov
cld
mov
add
aad
adc
jl
add
pop
mov
les
out
jmp
test
adc
adc
inc
gs
addr16
notb
add
movsl
jle
xor
loopnew
popl
adc
jmp
jp
out
and
fbld
mov
mov
lcall
xor
lods
hlt
es
mov
sbb
inc
or
call
xor
out
nop
and
xchg
inc
or
pop
jbe
rclb
dec
inc
mov
push
test
lret
je
lahf
loope
inc
aam
pop
or
out
dec
ret
les
cld
outsb
enter
std
lret
fiaddl
rclb
fwait
stos
or
pop
sti
mov
das
enter
das
jge
pop
enter
mov
in
xchg
cmp
push
imul
push
push
mov
cli
xor
pusha
xor
sub
roll
test
test
push
jp
or
out
adc
xchg
cwtl
insb
shlb
fwait
inc
jg
push
cmc
jnp
mov
inc
pop
mov
into
test
cmp
add
cmp
gs
aas
xor
push
add
pop
int
roll
mov
jp
jg
push
into
sub
sub
int3
loope
jmp
jo
repz
ficompl
cmp
lods
cmpsb
xor
adc
faddl
aad
cmp
loopne
jns
popa
push
mov
sub
and
test
sti
bound
je
lcall
loope
cmp
push
rcrl
push
or
xchg
imul
mov
mov
out
lahf
push
pop
pusha
popf
loopne
clc
sahf
jae
xor
stc
aaa
cmp
loope
cli
fistpl
mov
lret
inc
xor
mov
add
inc
fadds
out
aaa
or
jnp
mov
push
jb
insl
lcall
xor
leave
fimull
gs
gs
inc
das
lock
mov
add
pop
jmp
cmc
sub
cltd
inc
pop
movsl
mov
call
adc
sub
jmp
in
stos
sbb
cmp
aam
xchg
lock
imul
leave
popa
movb
pop
out
mov
data16
mov
or
sbb
roll
mov
dec
shlb
gs
cmp
adc
stc
xchg
lds
and
hlt
mov
jmp
sbb
fs
into
subb
cs
or
rcrl
imul
mov
xchg
xlat
fcomip
mov
xchg
test
lahf
sbb
ficomps
ja
inc
in
mov
bound
leave
orl
loop
out
xchg
xchg
pop
fsubrl
xor
lahf
jnp
or
cmp
and
push
mov
rcr
sub
push
cmpsl
inc
push
into
js
je
dec
subb
std
pop
stos
inc
adc
inc
int
xchg
pop
mov
cmp
sub
inc
int3
mov
ret
scas
pusha
stos
scas
cli
fwait
popf
ret
out
mov
mov
testl
frstor
jae
shrl
movsb
test
fstpl
mov
int3
test
ljmp
mov
or
lret
mov
into
pop
pop
push
adc
xchg
lds
inc
pusha
aad
or
faddl
pop
into
mov
push
lea
sub
or
stos
jne
fwait
enter
push
add
push
or
adc
aaa
into
cmp
mov
jge
int3
push
es
dec
mov
repz
mov
xchg
sbb
sbb
pushf
gs
loopne
shrl
enter
adc
mov
mov
jge
jbe
sub
sbb
sbb
jmp
push
xor
in
cmp
inc
cmp
rclb
inc
in
mov
call
sub
test
ret
and
stos
mov
push
mov
add
dec
push
cli
pop
cwtl
xor
insl
clc
mov
stc
call
mov
xchg
xchg
pop
cmpsb
ljmp
lock
out
fmull
mov
aam
clc
fimull
ss
dec
lods
mov
cmp
int
arpl
and
sbb
or
mov
popf
sub
sahf
mov
in
dec
jne
int3
mov
inc
lret
xchg
jb
lods
ret
fmuls
lock
mov
mov
dec
adc
lcall
sub
mov
mov
sub
cmp
scas
jmp
inc
aad
stos
sbb
ds
mov
cmp
testl
push
cmpsb
jmp
lahf
inc
push
int3
out
mov
or
adc
push
xchg
insb
or
mov
adc
add
push
leave
out
enter
sbb
sub
mov
movsl
push
dec
in
cmp
pusha
ljmp
and
insb
xlat
xor
push
shlb
ja
scas
cli
dec
cmp
add
outsl
sahf
or
jb
imul
js
mov
loope
int
js
ja
leave
cmp
pop
inc
mov
jl
lods
mov
xchg
out
jg
cmp
mov
mov
sbb
push
bound
adc
dec
sarl
and
xor
ja
repnz
mov
in
into
adc
popa
sub
and
pop
jl
ficoms
dec
mov
int
test
mov
push
sahf
shlb
pusha
mov
fwait
pop
dec
mov
adc
adc
adc
mov
pop
cmp
pop
mov
lahf
push
pop
movsb
stc
mov
inc
cmp
stos
in
out
pop
iret
pop
js
mov
test
or
jl
add
mov
mov
ret
ja
ss
daa
aaa
and
add
test
movsb
addr16
xor
jecxz
sub
repnz
out
cmp
xor
dec
mov
cs
jmp
jb
xchg
jae
popl
xchg
sub
cmp
cmp
sbb
pop
mov
sti
inc
ret
popf
adc
sub
xor
dec
jle
pop
movsl
daa
ja
jns
lds
rep
xchg
xchg
dec
popl
push
ret
xor
xor
xor
sahf
sti
adc
mov
aad
mov
push
cmp
mov
out
enter
out
cmp
sbb
daa
arpl
loop
and
fs
push
and
aad
xchg
cli
popf
lret
out
cmp
scas
clc
outsb
mov
mov
arpl
sub
sbb
sti
cld
xor
mov
in
rorb
mov
ja
fs
and
inc
mov
push
xchg
out
mov
je
js
cmp
mov
repnz
test
pop
fwait
iret
cld
jge
xchg
cwtl
lock
loope
add
ror
stos
push
repz
pusha
add
mov
fbstp
cmp
test
inc
inc
cmpsl
pusha
adc
pop
test
mov
pushf
push
les
es
add
pushf
lds
idivl
inc
dec
movsl
sbb
xlat
jmp
sarl
mov
xchg
inc
mov
push
xor
iret
pusha
stos
mov
jmp
test
test
jge
dec
sbb
insb
cltd
add
mov
popf
outsb
subl
cmp
add
dec
or
out
out
push
aam
dec
or
jle
mov
aam
xor
cli
scas
test
das
call
dec
sub
inc
cmp
push
sahf
jo
mov
js
push
pop
fwait
sbb
fisubrs
and
xor
mov
dec
cmpsb
dec
push
out
lahf
out
stc
int3
push
sbbb
je
andl
mov
dec
mov
in
incb
ja
mov
mov
mov
leave
sbb
aad
jecxz
mov
push
imul
cld
repz
call
push
mov
enter
rorb
inc
mov
nopl
stos
adcb
outsl
outsb
add
neg
mov
inc
aad
mov
scas
dec
add
jo
sub
shll
add
or
xlat
or
xor
or
popa
fistpl
mov
in
int
pop
dec
jl
add
mov
aaa
and
clc
aam
popa
pop
push
cld
mov
fwait
xor
aaa
loope
add
cmpsb
cs
xor
cmp
sbbl
cmp
mov
ds
cmp
sub
adc
or
mov
enter
fcoml
orl
cmp
fs
push
and
xorl
push
mov
call
lods
push
test
jp
add
js
ljmp
mov
repz
stos
loope
mov
add
mov
jbe
in
mov
adc
testb
add
mov
lds
sub
adc
sub
jmp
jnp
std
xchg
or
adc
loop
aam
inc
outsl
cli
jmp
adc
mov
jmp
mov
add
cmpl
pop
add
dec
jne
jno
mov
insb
or
shl
inc
xor
leave
mov
das
mov
mulb
mov
fimuls
push
cmp
jns
sbb
pushf
ja
mov
xor
sbb
ja
dec
sub
pop
sahf
sub
inc
out
mov
add
fsubrl
lea
xchg
rcll
rcll
push
add
pusha
outsl
loop
flds
adc
pop
jle
cli
xor
push
mov
fnstenv
adc
mov
mov
movsl
dec
pop
inc
mov
test
mov
in
scas
jle
adc
pop
dec
ret
hlt
push
sub
stc
fwait
adc
sbb
clc
push
hlt
mov
test
call
pop
int3
lods
mov
inc
sub
loopne
sbb
icebp
sahf
aaa
inc
pop
push
xchg
mov
xor
and
mov
xchg
add
test
xchg
add
ret
mov
sarl
sub
cmc
std
clc
stc
cmp
jl
lret
mov
aaa
add
je
dec
in
subb
mov
mov
sub
jecxz
loop
jecxz
xchg
out
addb
arpl
inc
dec
mov
jmp
popf
push
push
mov
les
or
sbbb
mov
dec
dec
push
lea
mov
lret
int3
outsl
cmp
or
mov
faddl
jp
mov
insb
orl
mov
shlb
mov
dec
xlat
data16
or
int3
mov
mov
cmp
in
daa
mov
sbb
movsl
dec
lret
cmpsb
inc
jmp
movq
mov
mov
out
loop
mov
jo
push
pop
adc
mov
loop
int
xor
jnp
popf
mov
imul
sbb
mov
mov
mov
xchg
lock
loop
mull
xor
lcall
jmp
mov
and
cmpsl
outsl
insb
dec
ljmp
push
shl
adc
mov
repz
sub
mov
dec
cmp
xor
xchg
pop
sbb
rclb
int3
push
xchg
push
pushf
pop
sbb
jnp
or
clc
jbe
gs
inc
test
gs
or
xor
adc
subb
pop
cs
dec
in
roll
jg
mov
jp
ja
jns
dec
std
paddsb
add
sti
dec
idivl
dec
lahf
add
and
sbb
push
mov
lods
cmc
loope
aad
dec
scas
aaa
ljmp
cmp
sub
outsl
jmp
cmpsb
aam
pushl
sub
sbb
push
push
enter
jo
insl
push
pop
inc
push
loopne
inc
sub
mov
arpl
movsb
push
adc
imul
pop
pop
add
lods
cld
outsl
xlat
inc
movsl
mov
outsb
dec
or
pop
in
xchg
mov
sub
ss
mov
pop
push
mov
jne
pop
out
mov
outsl
xor
les
call
in
xchg
daa
mov
testl
das
jle
ljmp
and
shll
inc
dec
cmp
jnp
cmp
into
push
pop
mov
jmp
fistpll
xorl
pop
rclb
push
push
fldl
stos
jns
enter
cmpsb
aaa
jb
jb
les
insb
roll
in
dec
xchg
ss
dec
mov
sub
or
lcall
lds
jmp
jle
ret
cmp
std
enter
lock
ss
adc
pop
into
bound
and
and
mov
xchg
ret
fs
ret
lods
mov
les
out
bound
mov
insl
icebp
std
xor
mov
movsb
scas
ljmp
loop
stc
or
mov
lods
fadds
cld
xchg
stc
dec
negl
out
push
add
pop
jnp
das
insl
or
inc
repnz
sub
jo
movsl
mov
rcr
or
dec
mov
fisubs
shl
lods
jne
leave
pop
mov
xchg
sub
loope
add
adc
mov
imul
scas
sub
push
or
lahf
sbb
lcall
pop
adc
mov
insl
adc
arpl
sarl
mov
lods
dec
pusha
dec
lret
stc
sub
imul
mov
jbe
enter
es
and
repz
mov
test
out
xlat
xor
dec
inc
insb
ret
xchg
adc
mov
fldl2t
dec
outsl
mov
insb
test
rclb
cmpsb
cli
jns
xchg
push
jns
dec
adc
push
fnop
ret
pop
adc
test
test
sti
sbbl
mov
jmp
rol
insb
ja
sarb
push
pop
xchg
dec
repz
dec
inc
sbb
int
clc
mov
dec
cmp
lcall
xor
stos
repnz
pop
and
jl
out
and
std
idivl
dec
scas
jae
adc
add
ja
test
int
push
int3
sbb
inc
arpl
add
mov
sti
fcmovnu
call
ss
mov
push
xor
cmp
or
inc
insb
jg
scas
sub
xor
mov
imul
push
push
xor
inc
outsb
or
inc
fiaddl
xlat
push
je
add
ljmp
pop
cmp
lret
loop
mov
fwait
mov
sarl
cmp
push
sarb
sub
ds
das
test
ret
dec
mov
inc
cmc
cmp
add
sbbb
movl
adc
lcall
or
mov
dec
mov
pop
inc
wbinvd
jns
jne
roll
jns
add
outsb
cmpsb
or
subl
push
pusha
xchg
popa
bound
mov
mov
sbb
xor
es
or
mov
ret
in
out
xchg
loop
je
mov
gs
jmp
sub
stc
dec
repz
adc
daa
mov
mov
sub
inc
adc
jne
in
pop
rclb
iret
push
lret
or
ljmp
dec
addb
loop
mov
add
shlb
mov
xchg
hlt
and
mov
sbb
scas
push
je
scas
jb
iret
xchg
fistpl
pop
mov
push
mov
mov
hlt
mov
in
out
ljmp
inc
insl
push
or
mov
arpl
jle
ja
ret
cmpb
test
inc
std
out
pop
js
data16
rcll
pushf
inc
in
inc
loope
iret
scas
inc
ror
js
cmp
mov
or
inc
test
pop
fadd
jg
mov
ret
daa
iret
cwtl
mov
ja
lods
jbe
or
sbb
sub
outsl
sub
pop
mov
lea
aam
imul
fiadds
lcall
cmc
jno
test
movsb
mov
dec
data16
pop
cmp
sub
fdiv
loopne
shl
rorl
jle
cli
pop
andl
push
or
rcll
ljmp
and
pushf
rol
push
addr16
aaa
xchg
ret
mov
cmpl
mov
in
adc
cmpsl
ret
out
rcrb
inc
mov
in
cmp
dec
xchg
stc
pop
in
rorl
repnz
icebp
stos
push
js
mov
mov
mov
pop
jg,pn
lods
cs
ja
test
xchg
mov
out
aaa
mov
push
stc
roll
jne
inc
js
jle
xchg
inc
out
test
clc
lcall
lret
xchg
dec
mov
mov
insb
aam
push
cmpsb
test
inc
daa
push
mov
stos
mov
cmp
enter
or
icebp
sbb
rcl
clc
or
sbb
outsb
dec
pop
pop
mov
xchg
lods
lods
leave
ret
jg
push
jl
pop
mov
test
mov
add
or
push
mov
push
leave
negl
adc
jne
adc
faddl
mov
adc
push
mov
flds
cmpsl
jecxz
int3
jp
push
xor
sbbb
and
rcr
xchg
push
jl
cmc
push
popa
cmp
fdiv
hlt
add
hlt
aad
sbb
stos
decb
jo
pop
add
jge
nop
orb
aas
lods
xor
pop
repz
repnz
and
arpl
int3
ss
cmp
daa
out
insb
sarb
sti
fists
push
stos
and
popa
lock
mov
sub
sub
in
call
pop
xchg
ss
loopne
sub
xor
ds
movsl
dec
xor
lret
adc
mov
push
into
mov
pop
pop
cmp
stc
pop
loop
out
dec
rcll
mov
ja
fmull
sbbl
xchg
rcll
adc
ret
mov
jle
or
jo
imul
stos
push
mov
dec
cmpsb
mov
dec
fisttps
dec
aad
sub
mov
push
daa
not
outsb
inc
rclb
dec
or
pop
test
push
mov
stos
cmp
pop
mov
push
lcall
push
sub
cmp
push
add
fnsave
dec
insl
cmp
jp
js
in
cmp
cmp
jle
add
lock
sub
pop
jmp
dec
jmp
pop
stos
aaa
fisubl
lods
outsb
mov
mov
jge
sub
xchg
lods
and
mov
pop
imul
loop
adc
jecxz
repnz
clc
xchg
subb
lds
push
jmp
les
cmp
mov
xor
adc
int
add
add
iret
cmp
pushf
in
cli
xor
enter
jne
and
mov
sar
and
mov
rclb
adc
adc
pop
and
sbb
ja
mov
lcall
jb
or
jge
xor
fldenv
sub
fs
andl
int3
add
pop
jo
fwait
int3
lock
push
adc
mov
insb
adcb
cld
mov
xor
dec
xor
fsts
pop
xor
sbb
xchg
and
xor
mov
jns
jae
xchg
xchg
cmp
imul
gs
icebp
xor
cmp
push
imul
inc
or
fdivs
mov
movsb
popa
stos
loop
sbb
push
outsb
test
mov
xor
outsb
mov
jb
jae
aad
sub
mov
or
push
fwait
in
push
stos
jl
push
dec
sti
sti
sub
lds
pop
shlb
mov
andb
mov
mov
inc
stos
adc
fucomi
cmc
int
fwait
cld
and
stc
xor
push
xchg
push
mov
arpl
xchg
lods
or
jo
cmpsl
xchg
mov
lods
imul
aas
das
test
out
btr
ss
xor
out
lea
testl
pop
incl
in
xor
xchg
stc
push
xor
fbld
xor
mov
pop
stc
dec
call
leave
and
fdivr
icebp
xchg
in
or
push
mov
hlt
call
mov
nop
shrl
cmp
sbb
mov
int3
xlat
mov
or
jnp
mov
jbe
inc
lcall
jbe
mov
sarl
xchg
inc
jg,pt
fidivrl
add
jl
jb
nop
jecxz
xchg
lcall
xor
pop
dec
mov
mov
test
lcall
aaa
jmp
das
cltd
and
or
mov
and
push
rorl
mov
dec
mov
mov
add
mov
icebp
stos
sbb
push
inc
dec
pop
cmc
pop
xor
inc
in
movsb
xchg
cmp
add
push
push
negl
aas
dec
cltd
decb
insb
pop
addl
dec
popf
icebp
stos
inc
cmc
push
mov
int
push
mov
dec
lahf
mov
sub
ja
in
xor
and
sbb
mov
cmc
xchg
push
inc
int
adc
loop
dec
pop
mov
sbb
adcb
xor
jp
insb
push
or
out
cmc
cmc
imul
test
mov
inc
jp
aam
stc
stos
dec
outsl
out
pusha
lcall
or
inc
mov
sub
mov
hlt
fiaddl
jnp
cmp
fldt
push
mov
loop
dec
sbbl
add
dec
and
adc
into
sbb
lcall
jecxz
sarb
addr16
out
pop
idivb
jbe
sbbl
and
dec
out
insb
add
bound
cs
push
xor
add
lea
test
jmp
and
test
push
punpcklwd
das
lahf
jae
cmp
inc
shll
push
pop
sbb
sub
aas
repz
push
cmp
or
lds
xchg
mov
stos
imul
add
add
xlat
adc
add
sub
xor
lcall
inc
xchg
inc
aas
and
nop
mov
adc
cmpsl
sub
adc
pop
and
xor
sbb
or
mov
ror
cmp
in
pop
popf
and
shr
fwait
add
packsswb
out
cmp
test
push
pushf
lock
dec
adc
add
insb
cli
sbb
icebp
push
lahf
jl
stos
mov
jns
das
inc
jp
negb
insl
cmc
ret
mov
imul
jp
inc
fwait
xor
clc
xchg
adc
fcoms
pusha
jbe
cltd
out
mov
fcomi
and
aad
xchg
mov
mov
pop
mov
xchg
test
mov
and
or
inc
dec
pop
adc
nop
in
pop
push
dec
rorl
jg
stos
je
icebp
push
fidivl
push
lods
int
mov
cmp
outsb
jmp
js
nop
jg
jnp
mul
mov
call
sbb
inc
aaa
sbb
push
jno
sbb
or
jmp
dec
into
cmp
je
add
or
add
mov
xchg
dec
test
jb
sti
lds
inc
mov
pop
adc
leave
xchg
pop
popf
sbb
loop
mov
xor
push
cmp
arpl
inc
pop
insb
sub
es
push
push
ja
sbb
push
jmp
sub
repnz
mov
or
sbb
push
push
dec
insb
mov
in
sbb
sub
dec
cmp
mov
inc
dec
enter
sub
jge
lea
push
test
mov
xchg
call
fcmovbe
lock
cmp
mov
jmp
push
pop
push
add
add
jns
sub
in
add
inc
sti
pop
imul
inc
cs
push
sahf
xchg
xchg
js
fnsetpm(287
das
cmp
dec
lahf
out
cmp
push
fdivrl
mov
cli
xchg
mov
data16
popa
sub
and
rorb
sbb
push
pop
lret
pusha
xor
mov
pusha
sarl
jne
fdiv
loope
icebp
and
sbb
adc
fcompl
pop
mov
fwait
xchg
std
paddsw
into
jnp
aas
cmp
mov
test
bound
ljmp
dec
cmpsl
inc
mov
mov
sbb
addr16
cwtl
ret
shll
or
stos
cmp
out
lcall
fninit
je
sub
out
std
out
ret
xchg
mov
push
push
fwait
mov
data16
imul
addr16
add
mov
test
jp
sub
and
dec
cmpsl
aad
xchg
mov
repz
jnp
shrl
add
sti
mov
dec
jge
stos
imul
mov
scas
cmp
aas
cmpsb
int3
cmp
cmp
jnp
add
and
mov
add
test
mov
out
scas
fnstenv
cli
rorb
insb
mov
sub
dec
push
repz
add
shrb
cmpl
jmp
cmc
add
popa
push
and
and
pop
imul
frstor
je
xor
daa
je,pn
leave
data16
std
pop
lods
cwtl
cs
loope
push
jmp
and
cmp
cld
ficompl
je
out
mov
xorb
xchg
lods
mov
inc
mov
push
imulb
xchg
add
cmpb
testl
mov
cmp
or
cmpsb
mov
jle
xor
add
cmc
cmp
inc
dec
pop
push
adc
ret
mov
fnstcw
mov
pop
and
sbb
shll
sub
mov
or
repnz
push
rorl
jne
pusha
mov
mov
repz
ffree
test
out
fwait
sti
das
sbb
ja
out
and
popf
roll
pop
jmp
mov
xor
shrb
imul
xor
int
aam
push
pop
xchg
mov
ret
xchg
xchg
cmpsb
mov
mul
pop
addr16
mov
sbb
adc
fiaddl
add
cmp
push
mov
pop
gs
loopne
fbstp
push
test
in
fbld
les
xor
add
mov
stc
imul
xor
pop
bound
jge
cmpsb
push
je
push
rorl
fs
es
fs
cmc
sbb
subl
jmp
mov
pop
popa
sub
push
js
iret
sbb
loop
fnsave
or
pop
pop
shlb
dec
jns
pop
pop
popa
mov
xchg
aas
sbb
sub
ss
mul
inc
into
ss
mov
aad
adc
jmp
les
xchg
ljmp
repz
pop
into
out
hlt
stc
inc
pop
fiadds
aaa
jle
mov
test
lret
in
std
stos
sub
imul
push
test
dec
mov
inc
xor
mov
insb
add
mov
loopne
das
ja
adc
cltd
scas
lods
inc
cmp
mov
cmp
test
and
jp
adcb
or
and
pop
mov
xchg
filds
dec
cmp
test
aas
mov
test
xor
mov
ret
and
imul
jmp
push
jbe
sub
fcompl
pop
jnp
jge
sahf
aad
fwait
sub
sub
mov
lods
push
adc
mov
pushf
mov
fistps
pop
aam
ffree
dec
cld
mov
and
mov
xchg
fwait
gs
mov
sbb
push
movsl
mov
and
inc
pop
inc
push
mov
xchg
inc
push
rcl
xchg
adc
mov
sti
adc
pop
lcall
cmp
sbb
and
lds
xchg
jns
add
xorl
mov
add
ret
push
jne
mov
sti
mov
dec
imul
rep
loop
dec
mov
insb
outsl
or
jg
dec
test
stc
sbb
sbb
aam
xlat
fsubrl
pushf
clc
pop
cmpsb
dec
mov
mov
jns
ljmp
jge
mov
sar
pop
sbb
jg
into
cmp
inc
lret
xchg
xor
sarl
rcrl
int3
add
cmp
fiaddl
fistl
int
ja
lods
sbb
js
mov
mulb
pop
dec
dec
fdivrl
add
in
lret
dec
fistl
push
fcoms
ret
int3
popa
int
mov
add
shll
push
xor
lods
lret
aaa
inc
sbb
subb
stc
fisubs
pop
cmpl
mov
bound
in
jno
popa
sti
push
gs
jae
fdivl
lret
push
repnz
fwait
lret
test
or
lret
xchg
push
fldenv
dec
aas
pop
and
outsb
add
lret
and
or
gs
push
add
imul
xchg
ss
sbb
sub
mov
inc
mov
mov
in
into
fsubl
add
inc
xchg
xchg
fiadds
pop
add
ljmp
fstpt
xchg
mov
xor
jno
pop
push
in
daa
push
enter
mov
xchg
jnp
pop
test
std
adc
add
inc
adc
sti
mov
loopne
aas
fwait
inc
leave
aas
filds
xor
xchg
dec
fnstenv
inc
fidivl
insl
mov
lods
jle
lods
jo
inc
nop
push
cmp
cmp
sbb
mov
imul
add
or
and
fidivl
movsb
pop
sbb
sbb
nop
adc
push
push
jae
cmp
enter
aad
das
mov
fsubp
push
mov
jne
pop
mov
xlat
insb
jno
call
dec
into
cmp
movsl
dec
jmp
xchg
stos
or
fadd
cmc
adcl
in
dec
sub
stos
stos
cmpsb
mov
inc
loopne
std
leave
push
sub
enter
mov
movsb
adc
in
cmp
cli
mov
xor
lods
xchg
adc
xchg
fcompl
std
or
filds
mov
lds
jl
movsb
sub
popf
aas
out
pusha
mov
pop
loop
sbb
shrb
lret
pop
call
cmc
push
lock
call
inc
hlt
js
fwait
and
ljmp
pop
cmp
aas
repnz
or
mov
fwait
push
jmp
dec
jl
aad
ret
adc
jo
or
dec
fcmovbe
into
pop
rorb
cmpsl
das
mov
adc
cmovge
pop
call
fistpl
dec
mov
cmp
dec
push
fldcw
mov
mov
xchg
push
sbbl
xchg
inc
imulb
imul
mov
add
and
in
dec
add
clc
aad
xchg
push
les
dec
inc
xchg
fisubrl
push
mov
call
fnstenv
pop
push
inc
testb
mov
xchg
faddl
loop
jns
fcom
jmp
shlb
js
pop
daa
in
arpl
insb
xor
mov
push
mov
pop
cld
test
scas
xor
xchg
inc
imulb
xchg
stos
arpl
loope
mov
addr16
ret
mov
jb
movsl
add
lea
xor
jmp
ret
cmp
adc
insl
xor
jns
sub
filds
jl
adc
arpl
mov
arpl
pop
mov
je
fbld
in
add
loop
pushf
pop
cmpl
dec
xlat
js
xor
xchg
cld
and
ds
aad
xchg
fnstcw
mov
push
pusha
insl
hlt
lcall
dec
lea
jb
outsl
lret
jb
loop
pop
xchg
pop
repz
cmp
cmp
aas
out
push
int3
lret
rclb
ds
xor
mov
jno
js
xchg
mov
cmp
mov
aas
xor
stos
aaa
xchg
push
lret
sub
xchg
xchg
inc
sbb
add
lret
mull
xor
push
fs
jmp
movsl
add
lock
leave
stos
into
repz
lret
test
shrl
jl
mov
cmp
fwait
loope
push
pop
mov
jecxz
cmp
mov
js
sub
xchg
loopne
pop
push
fisubs
fsubl
hlt
movsb
mov
jge
pop
xchg
mov
add
xor
dec
push
dec
lcall
mov
adc
aas
xor
js
imul
mov
pop
mov
cmp
xchg
jnp
sysret
fisttpll
dec
add
sbb
push
push
and
add
aam
ret
pop
outsl
inc
outsb
mov
sub
pop
mov
enter
dec
mov
push
pop
mov
pop
lret
jle
ret
push
pop
ret
outsl
mov
mov
andb
lea
and
inc
icebp
jl
pop
scas
cmp
lock
clc
add
dec
mov
fcoms
inc
mov
sbb
xchg
fcoms
xor
adc
mov
jne
into
cmpsl
jmp
decl
notb
xchg
cli
cmp
cmp
fwait
popf
loope
mov
xor
pop
add
ss
dec
test
cmp
add
jmp
sbb
rorb
and
rclb
sbbl
jae
cld
adc
out
mov
xor
pop
jo
push
int
dec
aad
push
xchg
mov
cmp
repz
add
add
test
and
sub
push
lods
les
or
pop
and
in
push
shrb
inc
icebp
add
data16
cmp
inc
stos
rcll
mov
clc
aam
popa
das
mov
or
sub
push
insl
add
inc
sahf
lea
hlt
and
push
lcall
nop
and
xchg
daa
bound
or
fisubrs
cmp
mov
aaa
daa
cli
addl
aam
orb
and
mov
shl
data16
mov
ljmp
sub
dec
loope
mov
imul
movsb
lcall
je
sbb
ss
insb
jbe
sub
les
mov
shl
pop
sub
inc
sub
leave
xor
sarb
or
shrb
fninit
or
dec
push
out
pop
test
and
or
andl
sub
xor
add
cmp
cltd
mov
jb
sbb
sub
inc
push
lret
loopne
repz
test
mov
mov
cli
inc
shlb
rorl
dec
sahf
cmp
and
mov
mov
mov
or
in
std
mov
jns
divb
add
fstpt
xor
pusha
xor
inc
cmc
iret
adc
loop
and
mov
mov
push
movsl
xor
movsl
sub
push
xchg
mov
sarl
leave
mov
testl
inc
fwait
ret
pop
rcr
in
je
and
fists
int3
jp
push
xorl
js
mov
sub
mov
rclb
les
xor
dec
adc
adc
pop
cwtl
pop
and
jns
or
into
xchg
sbb
or
push
xchg
test
fucomip
xchg
lea
sub
push
adc
in
sbb
mov
sub
inc
mov
pop
repz
int
sub
fs
out
xor
data16
cmpb
in
cs
mov
stos
icebp
add
add
cmp
or
movsb
add
or
dec
adcb
xor
jg
lods
mov
icebp
in
sbb
adc
arpl
aad
mov
popf
push
pop
add
inc
mov
xor
dec
inc
pop
insl
fwait
xchg
addr16
xchg
lret
or
inc
mov
jb
popa
adc
jl
push
fnstenv
movsb
std
test
les
mov
add
into
xor
int3
sbb
xlat
push
ret
mov
jo
in
roll
js
sub
sbb
push
rcrl
push
icebp
lds
ss
repz
sbb
dec
dec
lret
pushl
xor
push
cmp
js
test
dec
leave
inc
mov
es
pop
fnstcw
addr16
xchg
insb
pushf
mov
sub
xorl
mov
out
movsb
or
jecxz
sub
jmp
and
test
push
push
dec
in
orb
ljmp
test
mov
and
pop
mov
mov
and
popa
inc
xchg
ret
pop
movsl
imul
or
xor
jge
popl
cmp
pop
and
or
cmp
push
aas
scas
dec
pop
dec
pop
fwait
in
jb
pusha
mov
daa
and
rorl
pop
push
mov
jb
cltd
nop
and
pop
pushf
fadd
mov
xor
pop
rcl
outsb
sub
push
mov
fs
inc
neg
outsl
aad
pop
cmp
or
imul
xorb
fsubs
lret
int3
bound
adc
out
sbb
test
jmp
loope
lret
aas
enter
js
repz
mov
test
inc
enter
hlt
jg
mov
push
mov
xchg
rol
dec
inc
xlat
loopne
leave
cwtl
mov
fimuls
mov
out
fnstcw
jo
inc
xor
or
js
add
sub
mov
cltd
or
jl
stc
icebp
mov
adc
fisubl
repz
mov
mov
jp
sub
lock
into
xchg
int
cli
lcall
rorb
pop
mov
xchg
dec
aaa
xchg
in
pop
enter
insb
and
and
aam
cmp
sub
sub
xchg
adc
loop
jle
adc
ret
cmp
dec
jae
cltd
outsb
sarl
es
cltd
bound
testl
xor
movsb
rorl
push
cmpb
cmp
and
sbb
lea
xor
push
mov
jl
loop
xchg
ret
mov
sbb
inc
test
xor
movsb
out
pop
fs
pop
adc
mov
adcb
repz
mov
leave
lods
stc
jle
xorw
pop
sub
ret
sbb
mov
in
mov
push
cmp
xor
push
or
push
dec
add
mov
mov
and
fsubl
cwtl
rorl
std
sbb
test
push
das
repz
lds
jno
sub
mov
popf
out
mov
stos
repnz
or
lods
cmp
aam
mov
mov
mov
out
mov
or
movsb
sub
fldt
mov
cs
push
test
clc
out
ror
sub
push
sarb
rcrl
outsb
xchg
xor
dec
jmp
mov
sub
leave
enter
mov
pop
jo
cmp
loopne
jbe
hlt
push
and
addr16
xchg
imulb
xchg
or
jns
push
add
mov
adc
pop
add
pop
mov
sub
inc
xor
fsubrl
cmpb
cmp
scas
push
pop
mov
jns
scas
add
scas
insl
push
lea
adc
sub
mov
mov
push
aas
xchg
pushf
aam
or
mov
and
jmp
int
jg
pop
movsl
cmc
pop
call
fnstcw
stc
inc
fcompl
mov
bound
arpl
cld
add
jl
xorl
mov
mov
mov
loop
in
jo
adc
pop
xchg
enter
fistl
stc
test
pushf
out
fs
and
out
lods
adc
pop
jecxz
js
adc
js
js
shl
gs
ja
repnz
dec
mov
lock
dec
aas
lcall
adc
mov
and
cmp
gs
shlb
push
pop
mov
xchg
iret
xchg
fiaddl
outsl
inc
sub
ret
xchg
int
ja
cmp
mov
inc
ljmp
shlb
add
sar
sub
xchg
loope
xor
movb
loop
imul
lret
stos
fnstenv
pop
mov
jno
imul
in
push
pop
mov
jne
pop
push
inc
daa
ds
iret
cmpsl
mov
mov
inc
popa
mov
mov
sub
cmpsb
and
insl
stc
adc
repz
cmp
or
adc
loopne
mov
adc
pop
jnp
mov
mov
mov
iret
push
ror
hlt
push
inc
and
adc
es
jmp
push
out
movsb
fisubl
cwtl
mov
xchg
push
loope
jmp
rorb
cmc
and
movsl
in
ja
stc
testl
mov
add
push
into
sub
fldcw
das
es
fdivp
push
adc
test
add
bnd
stos
push
inc
mov
pop
aaa
std
inc
aam
or
adc
imul
push
xchg
pop
xchg
aas
out
idivb
es
jae
fnstenv
sbb
fstps
jle
push
fisubl
or
inc
push
fildll
mov
pop
movb
repz
inc
mov
popf
or
adc
gs
testb
sub
ficoms
adc
and
mov
and
cmp
in
dec
or
sub
jmp
cmpsl
mov
fcmovnb
insb
mov
and
loopne
lds
lcall
sahf
popa
in
mov
cmp
push
push
inc
cltd
and
es
rcll
aas
jp
and
mov
pushf
xchg
fwait
mov
ja
jne
mov
xchg
cs
push
and
adc
or
cmp
loop
sbb
shrl
xor
push
mov
sub
scas
mov
out
fsubrs
pop
ret
dec
jge
out
or
mov
dec
repz
inc
dec
mov
rorl
push
jg
xor
outsb
adc
push
dec
mov
adc
xchg
les
fwait
setl
lea
in
int3
xor
sub
sarb
rcll
mov
nop
leave
and
in
mov
xor
bound
sbb
bswap
xchg
js
dec
lock
pop
lret
into
cmp
mov
hlt
out
sub
ficomps
out
jbe
lret
lahf
jb
cli
push
pop
inc
pop
pop
xorb
push
pop
xor
mov
scas
shlb
pop
or
gs
out
scas
dec
test
mov
push
enter
cmpsl
insb
sub
cli
lds
ss
call
inc
mov
jle
inc
fsubs
out
jmp
xchg
mov
mov
and
enter
sub
inc
testl
mov
inc
adc
ljmp
cmp
xchg
mov
lds
cmp
aam
subb
cmpsb
dec
fcom
fcoml
jbe
xlat
cmc
xchg
es
pushl
fs
push
notb
fcmovne
and
test
xchg
mov
popf
add
jecxz
pushf
imul
xchg
cmp
les
adc
xchg
or
es
sbb
mov
xchg
fcmove
shl
in
loopne
and
test
sub
xor
rorl
cmp
fidivrl
dec
xchg
jge
loop
inc
mov
push
or
pop
or
iret
mov
jecxz
push
mov
cmp
adc
mov
mov
jecxz
fadds
ficoms
cwtl
xchg
inc
dec
sahf
and
mov
mov
lcall
push
cmp
jg
cmpsb
call
gs
dec
xor
xchg
in
stos
lods
push
scas
mov
cmp
or
xchg
insl
dec
das
fdivrl
jmp
popf
call
in
push
addl
sbb
push
in
xchg
mov
pop
or
icebp
in
fstpt
push
mov
push
jo
add
push
aam
scas
arpl
sbb
push
das
test
or
or
idivl
mov
and
les
pop
stos
ljmp
fwait
imul
mov
jo
in
lret
outsl
enter
mov
and
inc
inc
and
data16
mov
push
stos
in
xor
ljmp
push
cmpsl
dec
inc
xor
and
ja
mov
ss
ret
push
jnp
test
and
fstpl
jns
leave
adcb
out
icebp
jp
mov
out
inc
pop
sbb
mov
sbb
out
mov
pop
cmp
bound
push
gs
int
jle
push
xchg
sub
jo
push
orb
adc
outsl
fwait
push
xor
ja
bound
sbb
pop
adc
test
test
rcrb
adc
pop
movsl
insl
sbb
imul
fistl
daa
je
cli
das
and
cmp
ret
cmp
test
add
cmp
popf
push
xchg
sbb
mov
out
sahf
ficompl
std
sbb
and
int
enter
pop
outsl
sbb
mov
imul
adc
cmp
int3
ficompl
push
negb
dec
mov
jnp
aaa
dec
shlb
or
pop
push
inc
or
xor
pop
cmp
mov
dec
lcall
repnz
fs
jo
add
pusha
jnp
in
or
mov
jbe
xchg
stos
xchg
push
jge
and
jge
subl
pop
adc
cmp
mov
inc
push
xchg
repnz
aas
add
xchg
sahf
cmp
lock
mov
outsb
jns
sbbb
rcr
cld
iret
test
arpl
je
push
int
cmp
lock
mov
fs
test
ljmp
pop
sub
stos
add
and
or
sub
imul
outsb
int3
or
mov
aad
insl
jns
xchg
mov
inc
and
arpl
xor
inc
movb
fwait
lods
push
or
xchg
add
jne
sbb
jnp
ret
mov
mov
mov
mov
loop
test
cmp
mov
cmc
pushf
pop
stc
sub
inc
orl
mov
xchg
bound
add
pop
sbb
pop
dec
pusha
das
dec
in
scas
negb
out
xchg
xchg
ret
xor
leave
mov
fs
fwait
shll
notl
jp
out
movsl
aas
xor
fldl
cltd
and
and
das
adc
cmp
sub
push
cmp
enter
mov
cmp
icebp
xchg
xchg
push
jns
jo
add
adc
add
push
mov
xor
or
xor
out
sub
pop
iret
or
fistpll
stos
hlt
add
cli
dec
xor
cmpsb
xchg
imul
and
push
jo
cmc
std
jbe
mov
pop
mov
inc
adc
jmp
test
std
repnz
push
popf
outsl
sti
mov
call
inc
push
fdivrs
and
pop
jo
lcall
mov
pop
dec
mov
movsl
xchg
popa
lret
cli
mov
pop
je
mov
lahf
jb
add
xchg
enter
push
in
fisttpll
mov
or
leave
ficoms
clc
dec
imul
fstpl
out
jnp
push
push
mov
adc
ljmp
stos
leave
rol
fsubr
mov
je
mov
vmaxsd
sti
mov
aas
js
addr16
ljmp
dec
pop
mov
sbb
jmp
btr
cmpsl
movsl
test
fwait
shlb
inc
mov
add
test
jnp
cmpsb
movsb
nop
test
adc
in
xor
sbb
add
adc
push
mov
inc
add
jl
mov
pop
and
xchg
sub
inc
cmp
fnstcw
das
push
int3
sbb
mov
jecxz
pop
cmp
sar
mov
or
sbb
cmp
xor
int
inc
mov
jmp
jb
fdivrl
sbb
xlat
stos
test
and
xor
lret
scas
movsb
adc
lcall
stc
xchg
scas
clc
sub
xor
lea
cmp
ror
inc
loope
push
mov
dec
fildl
jp
lcall
std
stos
outsl
arpl
push
xchg
cltd
addr16
ja
jo
mov
mov
shll
lds
in
sub
mov
inc
xchg
data16
icebp
adc
loope
xlat
std
add
cmp
jge
rorb
daa
push
xor
push
mov
loop
ss
mov
add
gs
int3
adc
imul
pop
scas
pop
inc
test
or
push
std
sub
inc
sub
jo
and
mov
setg
fmulp
jp
imul
mov
in
sub
imul
mov
xchg
in
add
mov
xchg
popf
fistl
movsl
in
addr16
sub
jle
cs
out
mov
lods
jo
mov
cmp
mov
loop
pushf
popa
cli
push
outsb
stc
adc
out
int3
fbld
pushf
cld
fisubl
out
fwait
lock
jl
sbb
or
lret
fcoms
mov
loopne
shrb
xchg
inc
pop
inc
int
cmp
jl
jne
inc
js
mov
lods
cmp
mov
cmp
dec
mov
add
mov
outsb
jecxz
negl
push
cltd
fbstp
hlt
out
into
mov
push
lods
jg
lea
pop
cmp
int
xchg
ljmp
adc
dec
cmp
test
ds
xor
mov
out
sbb
inc
sub
das
add
lods
push
lea
cltd
push
adc
pop
imulb
negl
movsb
mov
aam
imul
jl
and
mov
enter
icebp
lret
push
push
mov
insb
add
mov
or
xor
push
aad
mov
aam
xor
mov
mov
outsl
cmp
push
jno
lret
xchg
notb
pop
push
jbe
xchg
gs
xchg
test
cwtl
enter
inc
call
sub
dec
sub
imul
je
mov
mov
inc
rcrw
in
pop
int3
mov
sub
sbb
rorl
fwait
dec
pop
push
cmpsl
mov
scas
imul
mov
adc
insl
in
mov
das
lret
push
scas
fsubr
or
cmp
int3
loopne
lahf
mov
mov
pop
in
cmp
xor
add
scas
ljmp
outsl
call
vaddps
or
adc
das
bound
or
mov
push
sub
ficompl
fsubs
imul
dec
and
push
pop
lods
sub
pushl
sub
mov
push
push
adc
xchg
adc
and
aad
xor
push
testb
or
inc
rcrb
in
popa
pop
into
hlt
inc
nop
lock
or
iret
and
pop
std
push
scas
gs
cwtl
cs
and
jo
sub
fsubs
mov
inc
mov
dec
adc
call
adc
mov
sbb
decb
xor
xchg
cwtl
jmp
xor
bound
lds
setge
push
lock
sbb
mov
rcrb
xchg
mov
pusha
jmp
or
jp
cwtl
pop
fdivs
push
dec
adc
cmp
sbb
inc
and
sbbl
into
aaa
add
rcrb
cmpsl
jge
out
dec
cmp
aad
push
add
adc
lock
jo
cmp
dec
in
pop
movq
mov
lahf
inc
sub
test
pop
adc
xchg
jb
dec
cs
adc
inc
bound
sbb
fildll
insl
push
mov
sbb
jbe
jecxz
fstpl
jno
add
push
in
jle
daa
push
mov
adc
inc
lods
je
sbb
pop
ret
iret
inc
mul
xor
cmp
push
xor
or
js
out
cmp
or
add
mov
outsl
push
mov
jne
ret
or
push
push
lea
test
sub
push
in
dec
jb
enter
pop
fcoml
fnstenv
fs
test
inc
loope
push
ret
test
ds
in
pop
jb
cmc
xchg
inc
jnp
jge
loop
xor
sti
outsb
and
leave
xchg
xor
xchg
rcr
insb
adc
pushl
sub
cmpsb
std
popa
dec
mov
popa
daa
sub
and
dec
sbb
pxor
jbe
xchg
les
sub
icebp
cmp
mov
imul
inc
and
insb
fnsave
pusha
or
lahf
call
clc
test
or
lods
jae
mov
dec
mov
movd
outsl
jg
jle
subl
pop
imul
aam
cmp
stos
jg
mov
insb
xor
mov
iret
outsb
mov
sub
dec
insb
push
adc
rorl
mov
xchg
fs
xor
adc
in
loopne
std
data16
std
or
cmpb
sub
es
mov
adc
mov
cmp
ret
push
and
scas
xlat
add
shrl
aad
or
pop
rol
pop
dec
inc
dec
mov
in
cmpsb
clc
jae
xchg
inc
xor
jmp
and
and
repnz
pop
xchg
pushf
fwait
sbbl
adc
inc
aam
mov
repnz
sbb
lcall
orl
and
mov
ret
loope
jnp
in
shrb
fisttpll
loopne
mov
cli
sbb
jg
lahf
xor
jae
sub
mov
mov
pmaxsw
or
adcb
fcoml
push
pop
mov
mov
jge
in
jg
hlt
xor
gs
out
jb
les
fildl
stos
xchg
xchg
cmp
xor
sahf
dec
out
xchg
fdivrp
sub
or
push
sahf
mov
dec
jo
sub
mov
addr16
nop
and
fwait
inc
mov
lock
mov
sub
cltd
call
xchg
or
xor
cs
movsb
mov
test
dec
sbb
dec
shr
clc
icebp
das
aad
dec
sub
add
hlt
xor
adc
lret
sub
pop
iret
mov
mov
push
mov
lods
rclb
aad
push
orb
mov
jns
xor
pushf
xchg
push
mov
fldlg2
fwait
enter
fcmovnu
dec
icebp
push
sbb
das
or
das
cmp
mov
dec
xor
mov
sbb
cmpsl
sub
xor
lea
inc
pop
clc
cmp
nop
ljmp
rcl
jmp
cmp
mov
into
pop
icebp
xchg
iret
loopne
push
xlat
clc
adc
dec
cmp
mov
jle
test
add
cmp
inc
cmc
sub
cwtl
data16
sub
repnz
mov
and
dec
inc
out
jl
mov
aas
mov
sti
push
test
sahf
jmp
jbe
push
cmpl
mov
inc
push
jg
loope
inc
mov
cwtl
outsb
ficoms
lahf
imul
ffree
pushf
inc
mov
dec
pop
scas
scas
mov
mov
jp
ljmp
in
adc
xchg
repz
mov
lahf
push
jne
sub
mov
inc
sbb
xchg
popa
or
jge
enter
pushf
mov
je
dec
xor
xchg
inc
movsb
xchg
insl
lahf
mov
fwait
sbb
sbb
mov
xchg
ljmp
mov
cmp
sbb
adc
cld
gs
dec
xlat
dec
shl
cmp
cmp
xchg
into
sbb
imull
cmp
ja
inc
sub
jno
cli
push
pop
clc
lahf
nop
movsb
dec
cmp
jnp
test
fbstp
out
add
rolb
out
test
inc
dec
sahf
mov
adc
pop
sarl
pop
and
in
mov
clc
pop
adc
test
std
inc
push
sub
scas
mov
sbb
lock
aas
and
imull
jp
xor
rcrl
dec
pushf
add
lret
in
std
fsubrl
push
and
sub
fwait
xchg
lods
adc
mov
repz
adc
pop
mov
mov
dec
jmp
xor
pop
shll
lock
cmp
std
rol
fsubl
leave
sbb
sbb
stos
push
push
fsub
fmull
lret
sub
adc
cli
shl
lret
push
mov
es
std
inc
nop
mov
mov
pusha
sbb
iret
xchg
jbe
mov
sub
jl
mov
add
jge
unpcklps
jbe
leave
lahf
jbe
ds
out
inc
addr16
dec
add
cmp
lahf
dec
js
fcomp
lods
xchg
outsb
outsb
sbb
and
lret
jmp
lods
fildll
inc
cmpsl
sub
stc
inc
stos
movsl
call
xchg
cmp
jp
inc
sbb
divl
aas
aaa
das
test
call
jns,pt
test
lods
xor
jnp
repnz
les
out
mov
sub
sub
jb
xchg
les
lea
xchg
fcmovnbe
xor
js
data16
and
push
scas
call
ret
push
nop
adcl
or
or
push
lods
mov
jb
inc
mov
lods
shrl
out
lcall
shrb
fwait
lea
out
sbb
test
fwait
sub
cmp
aad
sbb
sbb
push
repnz
xchg
out
xor
mov
into
sub
mov
hlt
insl
mov
clc
xchg
das
adc
jge
push
adc
sbb
sub
lret
aaa
stos
jno
lods
lods
mov
push
add
cwtl
mov
pop
cmp
adc
cmp
mov
in
xchg
and
test
int3
sub
aaa
insb
xchg
push
out
rol
je
cmp
in
fists
into
stos
ljmp
xchg
test
lods
mov
inc
adc
arpl
xlat
mov
nop
mov
mov
mov
pop
push
fdivl
pop
lock
mov
repz
dec
repz
push
clc
jp
loope
xor
pop
pop
xor
fimuls
dec
jmp
outsl
js
mov
stc
pop
scas
in
dec
sub
leave
lret
pusha
xchg
rcl
popa
arpl
sbb
dec
pop
adc
sti
jecxz
rcll
mov
jnp
inc
lock
scas
or
sub
inc
push
xchg
repz
data16
dec
mov
mov
pop
mov
stos
aad
cltd
mov
sbb
add
imul
inc
xchg
hlt
dec
insl
push
cwtl
imull
and
xchg
push
cmpsb
xor
cltd
add
jp
insl
les
cmp
out
orl
mov
cmp
test
sbb
insl
lock
mov
pop
jnp
sub
cmp
movsb
xchg
imul
adcl
iret
leave
stos
mov
fxch
rclb
xor
inc
test
in
add
mov
aas
adcb
aad
pop
cmp
xchg
stos
cmc
cmc
add
xor
roll
fs
mov
sbb
or
enter
dec
aaa
in
das
arpl
lods
push
push
mov
in
pop
clc
data16
lret
das
add
mov
cs
xchg
popa
xchg
inc
pop
jnp
into
push
das
inc
inc
je
jg
or
sub
jne
fistps
push
adc
dec
mov
adc
inc
or
or
jle
push
push
cmpsl
jg
jne
mov
mov
int
jle
cld
mov
int
mov
cs
and
jno
push
push
mov
mov
push
dec
push
or
mov
add
sbb
and
jp
mov
cmp
mov
mov
adc
pop
jmp
lods
pop
mov
jae
pop
mov
cmp
inc
addr16
jns
divl
mov
cmpsl
jge
pop
cmp
nop
ljmp
push
mov
pop
jne
cs
mov
pop
repnz
fbstp
clc
adc
test
out
nop
adc
out
mov
dec
dec
scas
rorl
rolb
push
ljmp
repnz
js
push
loop
aad
imul
dec
and
or
or
dec
cwtl
pop
inc
xchg
mov
xor
out
pop
jmp
pop
inc
enter
push
imul
call
sub
dec
adc
ret
push
je
out
push
shl
addr16
loope
addr16
add
lahf
ss
cld
aaa
adc
cmp
movsl
cmp
mov
xchg
fnsave
in
imul
sbb
aad
xchg
mov
stos
adc
std
xchg
dec
push
fcomp
rep
mov
or
fmull
sub
mov
loop
sub
dec
lea
xchg
push
sub
cmp
movsl
adc
cltd
fisubrs
and
in
movsl
push
fnstcw
nop
cmpsl
mov
jns
mov
jp
jb
lock
shlb
sub
dec
shlb
aam
cmpb
and
push
loope
and
repnz
xor
pushf
push
decb
ret
or
mov
sarb
push
out
arpl
data16
addr16
test
xchg
lods
pusha
fstpt
fsubrs
dec
mov
or
mov
icebp
jge
mov
add
pop
xor
mov
xor
inc
inc
les
dec
and
jae
xor
push
jae
pop
mov
mov
out
iret
out
test
repz
push
push
xchg
dec
xlat
mov
sbbl
pushf
add
cmpsl
lret
xchg
int3
cmp
std
mov
sahf
jb,pn
push
mov
ja
jae
fsubs
icebp
or
ret
inc
jg
loope
sahf
rorl
push
sbb
aas
imul
adc
fimull
adc
in
push
xor
xchg
mov
and
jne
pop
mov
adc
cmp
addb
or
sub
push
cmpsb
aaa
xchg
xlat
jg
aam
push
into
xchg
push
mov
push
mov
cmp
pop
xor
jge
outsb
sti
lret
mull
cmp
mov
sub
fmuls
push
lret
mov
push
fwait
jl
outsb
mov
out
movsb
push
jp
or
lea
xchg
xchg
add
sub
xor
je
xchg
xchg
mov
cmp
mov
dec
pop
and
sbb
mov
pusha
dec
and
pop
mov
xchg
and
in
sar
iret
stos
lds
loop
sub
and
lcall
stos
sub
pop
push
orl
test
add
sti
arpl
ret
and
and
sub
insb
addr16
jle
mov
mov
ret
ret
xchg
imul
adc
movsl
stos
lods
dec
push
sbb
inc
dec
adc
lods
jne
pop
sarl
pop
xor
push
push
push
add
imul
call
push
inc
add
in
cmp
jne
adc
repnz
ljmp
daa
cmp
dec
mov
cwtl
dec
pop
ja
les
outsb
je
cmp
jbe
adc
ds
clc
mov
out
loop
xor
sbb
inc
lret
mov
mov
cwtl
mov
xchg
pop
cmp
xor
nop
mov
ds
mov
add
cli
fs
push
pop
pop
data16
fimull
popf
push
ja
insb
inc
inc
dec
lcall
xchg
aad
hlt
mov
add
leave
sbb
push
jmp
push
and
aaa
je
add
cmc
loopne
pop
sbb
jbe
mov
inc
cld
scas
mov
shrl
sarb
or
ret
andb
fwait
sub
cmp
sbb
cmp
loope
dec
push
ret
jb
cmp
xchg
enter
cltd
pop
push
mov
adc
add
xchg
jnp
xor
or
and
fs
mov
jo
outsb
pop
cmc
lahf
pop
fmull
push
in
push
js
add
clc
ss
mov
gs
xlat
popf
data16
mov
mov
inc
fsubrs
push
clc
clc
sbb
arpl
dec
lret
or
mulb
mov
cmp
in
xchg
jne
bnd
or
jnp
xchg
xor
ljmp
push
mov
jo
cmpsl
sar
xchg
pop
xchg
pop
test
mov
adc
add
sub
push
add
jb
mov
inc
sarl
out
mov
jae
lcall
frstor
pop
pop
mov
addb
repz
mov
pusha
adc
push
jns
ds
adc
mov
add
popa
mov
jg
test
aam
lods
mov
xchg
std
std
loop
aaa
addr16
push
inc
out
or
lahf
mov
sbb
fidivs
sbb
stos
lods
xchg
int3
fadds
stos
mov
fadds
imul
pop
mov
fwait
mov
and
inc
cmp
xor
int
int
out
data16
enter
push
test
jg
aaa
pop
adc
repnz
or
push
ror
stc
movsb
push
push
stos
sub
sub
cmpsl
mov
push
push
rorl
and
sti
iret
pop
sti
inc
aaa
in
pop
jbe
adc
lret
xchg
and
es
repnz
cld
mov
dec
call
xor
insb
insb
in
jmp
xchg
in
outsb
insl
push
orl
mov
loopne
push
add
jnp
or
test
add
pop
shll
lcall
lret
mov
push
dec
enter
dec
add
inc
sbb
cmp
adc
mov
aaa
sbb
mov
cmp
ds
movsb
pop
mov
inc
mov
sbb
inc
xchg
out
lock
popa
xor
cmpsl
dec
sub
cmc
xor
pop
insb
jmp
rcr
mov
xor
notb
sub
pop
adc
and
bound
sbb
jnp
add
dec
ret
xchg
rcrb
mov
sahf
gs
pop
sbbl
jmp
lods
inc
inc
xchg
xchg
add
sub
or
testl
mov
lods
or
ret
adc
xlat
jle
jp
pusha
repnz
mov
test
aam
xchg
mov
pop
test
adc
push
mov
push
and
dec
jmp
stc
leave
fcmovnu
in
jl
fs
cmp
sub
and
push
and
addr16
and
push
stc
fs
gs
subb
lret
hlt
mov
jmp
fistpl
dec
jb
stos
out
mov
sub
mov
push
mov
mov
daa
inc
jp
int3
sub
ret
jae
fs
call
ljmp
inc
xor
loop
inc
mov
insb
sub
aam
xor
nop
xchg
insl
push
mov
in
xor
testb
std
xchg
fldcw
pop
fistpl
out
xor
cltd
push
repnz
mov
orb
mov
add
pop
psrlq
ficomps
icebp
minps
jo
dec
ret
cmp
pop
cmpb
inc
lods
ret
cwtl
pop
es
xchg
dec
mov
mov
movb
xchg
cmp
repz
inc
inc
mov
divb
xchg
nop
ljmp
inc
sti
push
dec
push
outsb
test
push
clc
ret
es
pop
fdivl
int
lahf
mov
cltd
loope
push
test
pop
push
lock
add
mov
add
out
jmp
push
or
sbb
push
inc
push
jne
lods
push
stos
int3
daa
cmp
daa
rcrb
pop
int3
pop
push
xchg
rcrb
mov
lret
push
test
cli
inc
push
push
mov
adc
inc
shr
leave
leave
sar
stos
in
mov
pop
jo
dec
ret
mov
subl
sub
aad
imull
cmpsb
dec
movl
gs
into
xorl
mov
mov
dec
lcall
jns
orl
xor
push
xchg
and
or
xchg
and
inc
add
xor
push
xor
sbbl
mov
cmc
pop
mov
adc
cmp
nop
sub
ret
mov
adc
xchg
idivb
pop
dec
push
mov
xchg
or
gs
lods
in
dec
add
pop
testb
dec
mov
xlat
lods
xor
mov
and
ret
jp
je
hlt
or
aaa
adc
mov
scas
sbb
xor
dec
test
ret
jbe
test
inc
adc
out
bound
or
ljmp
enter
enter
rcrl
and
jo
push
scas
fsub
pop
rclb
call
lret
ret
dec
addr16
mov
and
das
setae
adc
call
pop
push
lcall
and
xor
adc
shll
das
add
mov
push
std
in
test
fwait
les
push
adc
mov
shll
pop
push
sbb
lock
jmp
pop
mov
arpl
rolb
jns
out
test
pop
lea
ret
cltd
sub
and
pop
jno
ret
bound
shll
ja
adc
adcl
dec
jmp
mov
sub
add
pop
jb
add
ss
jg
push
mov
pop
push
push
xchg
inc
push
cli
mov
fisubrs
xor
cwtl
pop
mov
outsb
inc
lahf
push
xor
push
xor
out
into
mov
jl
sbb
insl
mov
xchg
cmpsb
test
push
dec
cmp
jb
cs
into
imul
out
pushf
pop
cmp
push
shlb
adc
cmp
mov
js
xchg
outsb
add
js
jae
push
enter
add
jb
mov
imulb
loope
inc
js
pop
movsl
into
mov
push
sub
aaa
cltd
jne
into
dec
loope
loopne
jle
in
adc
xchg
adc
jns
fwait
das
push
cs
cmp
pop
add
mov
adc
xor
test
lret
dec
out
adc
pop
lcall
ss
mov
push
jp
jnp
mov
sbb
and
xor
jge
mov
jb
sub
shl
adc
jb
adc
xchg
repnz
xchg
scas
lret
cmpsl
and
cmp
mov
outsb
adc
or
jmp
es
insl
fs
test
jb
aas
inc
out
dec
jecxz
cmp
pop
mov
rorb
fidivrl
es
daa
test
stos
add
addb
jl
mov
sub
fisubrl
fstps
inc
int
mov
stos
not
scas
and
dec
mov
jbe
mov
scas
ds
xlat
xor
adc
movsb
test
sahf
out
xor
mov
rol
xchg
adc
pop
stc
sub
jne
jo
pop
fcomp
adc
sbb
push
out
pop
jb
sbb
adc
je
test
jp
dec
lea
jo
ret
cltd
cmpb
cmovg
xor
adc
xchg
or
movsb
fistps
dec
cli
jge
fwait
lret
pop
pop
push
call
pushf
mov
lcall
inc
dec
jmp
xor
xor
fbstp
cli
call
insl
out
xchg
and
or
inc
cmp
popf
int3
pop
aam
std
jb
das
inc
mov
inc
xlat
inc
pop
imul
cltd
xor
insl
dec
push
dec
int
cwtl
pop
mov
std
xor
mov
push
jns
inc
movsl
dec
inc
les
ret
jg
cli
pop
adc
pop
stos
mov
mov
dec
mov
xchg
sub
sub
mov
addr16
sar
push
mov
dec
cmpsl
sbb
fmuls
sub
fcomps
inc
iret
cs
lock
fldl2t
movsl
mov
jnp
gs
les
mov
jl
rol
outsl
in
out
out
pop
fsubs
loopne
ffree
nop
cmp
xchg
mov
cmp
je
pop
leave
and
stc
sahf
imul
dec
adc
adc
shl
dec
jmp
push
movsb
aas
out
rcrl
and
subb
pop
mov
cmp
jl
fisubl
xor
aad
sub
or
clc
xor
mov
lahf
mov
mov
cmpsl
in
dec
ret
inc
stc
cmp
mov
shr
jecxz
test
xchg
leave
jbe
mov
xor
jmp
jbe
pop
cs
outsb
xchg
mov
dec
or
stos
test
add
sti
adc
sub
ljmp
shll
push
pop
in
jns
push
test
inc
pop
sbb
jle
mov
xor
sub
cs
push
push
xchg
fwait
ljmp
cmpsb
test
hlt
inc
dec
sbb
pop
xchg
sbb
jg
or
mov
mov
dec
fisubrs
ss
ss
push
int3
mulb
scas
sbb
lods
lods
loop
fidivs
jb
fildl
outsb
dec
lcall
lret
fadds
sbb
push
insl
or
arpl
shlb
icebp
pop
mov
pop
xchg
stc
or
dec
push
pop
jp
pop
test
xchg
lods
jmp
lods
xor
xor
movb
xchg
mov
in
jle
test
pop
jge
fwait
push
push
adc
int3
cmp
imul
sbb
mov
or
arpl
push
icebp
mov
arpl
mov
inc
pop
gs
es
cltd
inc
testl
inc
out
mov
int
aaa
iret
mul
les
sbb
out
push
ds
roll
popa
dec
sub
xchg
stc
push
test
std
lcall
xchg
xlat
sahf
clc
sti
mov
jmp
arpl
xor
xchg
pop
imul
stos
leave
fdivl
scas
and
xor
fstps
and
je
cs
mov
or
jmp
loop
add
mov
push
xor
in
bound
xor
loope
xchg
jne
or
loope
dec
mulb
enter
stc
adc
or
xchg
dec
negb
cld
sub
xor
pop
dec
aas
sarb
mov
fwait
xchg
out
fnstenv
pop
loopne
mov
pop
push
adc
lcall
mov
push
mov
daa
jecxz
pop
int
pop
in
inc
push
fs
enter
and
out
jbe
test
push
add
repz
leave
mov
dec
push
xchg
loop
popa
jp
gs
loop
das
pop
rorl
or
out
push
incl
shlb
inc
icebp
lock
dec
movsb
icebp
mov
jns
testb
mov
fwait
sub
mov
int3
add
or
inc
adc
enter
dec
fsubp
jnp
cmp
ds
movl
pop
sti
mov
xor
jmp
or
xchg
adc
popf
jmp
stos
out
ljmp
cmpb
test
imul
or
outsb
pop
or
into
clc
jo
repz
cmp
in
out
sub
or
add
pop
dec
cli
iret
push
inc
in
cmp
xchg
jmp
andl
cmp
cli
daa
adc
pop
ljmp
pushf
adc
test
in
lret
push
rcrb
jns
xor
aad
dec
repz
add
and
lds
daa
sub
inc
testb
ret
dec
mov
shrb
mov
std
in
push
add
xor
xchg
clc
sub
pop
scas
incl
clc
arpl
negb
sbb
xlat
fidivl
mov
or
repnz
mov
inc
hlt
push
mov
call
xchg
pop
addr16
cld
pop
movl
xchg
mov
lds
pusha
ljmp
imulb
sarb
xchg
mov
fdivs
sub
push
adc
pop
jo
mov
mov
sbb
pusha
push
aad
jg
dec
pop
mov
mov
lret
inc
lahf
cmp
loop
aad
pop
sub
jl
or
xorl
clc
xor
push
inc
mov
mov
push
jmp
imull
inc
adc
insb
mov
and
adc
aam
pop
fidivl
nop
lods
mov
icebp
pop
mov
mov
and
cmpb
push
rorb
aad
out
idivl
gs
jne
in
xchg
lret
adc
jb
mov
push
mov
mov
ja
jmp
loop
repz
pop
adcl
jl
outsb
cmp
jo
xchg
int3
bound
mov
andl
mov
pushf
std
test
cwtl
cmp
cld
test
jo
fwait
iret
sbb
ja
add
lock
sub
cmp
lock
scas
call
loope
mov
mov
mov
pushf
jmp
rcrl
push
adc
clc
nop
mov
pop
lods
test
shll
mov
cmpb
stos
loope
mov
rorl
cmp
push
repnz
push
mov
push
arpl
push
xchg
sub
leave
cmc
dec
call
or
nop
mov
cmp
loop
repz
pop
inc
or
pop
xchg
pop
ljmp
clc
lock
pop
push
push
pop
xchg
sub
push
dec
mov
jmp
push
stos
pop
out
xchg
sub
xor
dec
std
mov
push
gs
mov
cltd
stc
push
cs
insl
pushf
push
in
pop
jns
fwait
addr16
adc
mov
jle
mov
mov
or
jnp
adc
sub
jg
js
xor
out
cmc
push
cmp
pushf
je
xor
adc
repz
pusha
mov
fsubrs
sti
mov
xor
outsb
das
jns
cli
lret
xchg
inc
xor
mov
fcomps
mov
stos
sub
loopne
sub
fiaddl
jno
mov
test
lret
inc
jb
movsl
sub
pushf
icebp
or
add
in
jbe
cmp
dec
cmc
fsts
in
dec
fnstenv
inc
into
imul
loope
xor
mov
out
mov
pop
pop
movsb
dec
outsl
iret
cmpsb
pushf
dec
lret
scas
cmpsl
fnstsw
rcrb
push
push
push
inc
jnp
jae
or
and
inc
fbld
or
aam
imul
mov
or
mov
clc
test
and
mov
dec
out
or
sti
mov
in
test
nop
das
mov
push
mov
mov
js
mov
cmp
mov
push
lock
daa
xor
ljmp
adc
cli
jb
pop
sub
xlat
lock
into
ja
lcall
xor
add
mov
mov
adc
push
or
push
sub
xchg
das
imul
rcll
in
jne
cmpsb
fidivl
push
fimull
mov
rorb
and
dec
mov
sbb
and
xchg
and
or
fildl
cmpb
xlat
call
int3
push
rolb
repz
mov
jle
adc
adc
mov
ds
je
mov
int3
push
fwait
and
pop
fwait
sahf
pop
mov
mov
in
push
rcll
mov
loope
cmpsb
push
mov
push
lcall
mov
cmpsb
sbb
mov
xchg
mov
xlat
cmc
stos
pop
stos
or
xlat
bound
mov
adc
ret
sub
mov
ret
daa
cmpsb
aam
pusha
fistl
jb
jle
adc
sub
xchg
mov
and
adc
decl
pusha
fmull
dec
xchg
cld
in
repz
mov
cld
fldcw
pushf
add
mov
nop
xor
call
in
xchg
hlt
je
into
adc
mov
int3
push
jbe
js
push
jo
mov
mov
mov
je
xchg
loop
and
dec
shl
xor
cmp
cmpb
sbb
mov
sbb
jmp
fmuls
or
push
addr16
mov
xor
mov
sbb
adc
stos
sar
ja
das
mov
dec
xor
rcrl
lahf
cltd
aas
fdivr
repz
outsb
inc
pop
fwait
ret
lds
js
call
push
js
jle
popf
or
sbb
aas
dec
notl
jbe
push
repz
push
mov
mov
pop
loope
mov
lods
mov
cltd
add
cld
jns
and
addr16
test
jecxz
add
pop
into
enter
cmpsl
aas
dec
mov
sub
shrl
sarb
stc
aam
xor
inc
push
jecxz
test
lret
test
mov
cld
test
push
jmp
dec
outsl
xlat
dec
out
lcall
popa
adc
pop
ljmp
xchg
mov
lds
adc
es
mov
or
pop
cmp
rol
xor
jecxz
jnp
mov
pushf
lret
gs
pushf
and
in
mov
lret
or
stc
cwtl
sub
sub
lods
push
push
cmpsb
aaa
cli
xchg
fnstsw
and
xchg
les
cltd
xchg
dec
sub
mov
pop
or
test
mov
xor
jp
es
inc
fwait
mov
dec
dec
push
mov
int3
jp
scas
std
xchg
out
and
jmp
and
movsl
or
and
xor
xchg
stc
aas
mov
push
leave
xchg
loope
mov
mov
sbb
mov
pop
sbb
stc
push
fcoms
push
push
jg
out
adcb
inc
addb
push
jle
fs
outsl
out
leave
das
push
add
inc
incb
scas
adc
lcall
cltd
sbb
lea
pushf
adc
lock
xchg
add
add
in
or
adc
leave
pop
jp
pop
lret
lock
pop
daa
xor
mov
into
popa
push
jb
mov
inc
and
rcll
add
repnz
aaa
shl
mov
cwtl
mov
loop
pop
sub
push
lcall
inc
fnstenv
jns
mov
pop
xor
lahf
or
outsl
sub
sub
aam
xlat
rcl
fwait
push
xor
xor
outsb
adc
push
cmp
test
into
inc
jnp
push
and
outsl
aad
fistl
fcomps
popa
xchg
out
mov
aas
movsb
sbb
push
cwtl
or
push
cmc
xchg
xor
pop
rclb
ret
mov
xchg
aad
sub
cld
pop
sbb
inc
testb
enter
repnz
fwait
out
add
test
les
sbb
insl
and
inc
cmp
subb
sub
inc
sbb
push
inc
cmc
pop
inc
or
inc
jle
lds
pop
test
out
ljmp
or
aas
adcl
push
shrb
adc
xor
movsl
add
aaa
adc
mul
sub
xchg
push
add
cmp
into
mov
es
ret
pop
push
test
push
pusha
or
lds
bnd
sbb
pop
push
push
cmp
xchg
add
out
push
lret
sti
test
cmp
addb
lea
std
out
fistpll
add
mull
mov
mov
scas
ret
imul
cld
int
mov
xor
or
cmp
out
xchg
repnz
dec
shrb
rcrl
push
addl
das
mov
sti
scas
dec
jle
es
sahf
mov
mov
inc
cmp
push
insb
lret
pop
clc
daa
mov
mov
test
sbb
sarl
bound
add
xchg
push
sbb
out
sbb
leave
cld
popf
fwait
orb
jecxz
out
inc
xor
in
daa
sahf
lods
leave
ret
rcll
add
sbb
or
loop
sbb
mov
in
mov
outsb
stc
pop
and
jmp
push
ret
cmp
scas
out
fsubrl
cmp
cld
repz
mov
mov
ja
in
xchg
cli
cwtl
xchg
sub
pop
test
jmp
mov
loope
dec
lcall
lret
sahf
test
ss
movsb
insl
xchg
jp
aad
inc
insb
out
scas
ja
in
lods
or
xchg
movl
dec
das
jl
stos
fidivrl
mov
add
lahf
jne
test
mov
add
inc
loope
sahf
std
sarb
inc
adcl
pop
sahf
test
push
sbb
clc
pop
repz
adc
mov
movsl
ret
sahf
cmc
ret
mov
arpl
adc
pop
scas
sahf
fnsave
clc
pop
loop
repz
std
jmp
cmc
notb
add
sub
dec
icebp
movsb
cmpsl
arpl
dec
and
push
fdivrl
das
mov
pushf
jno
movsl
adc
sar
add
xchg
mov
and
adc
es
imul
mov
mov
xorl
cltd
les
and
mov
inc
mov
aad
js
sahf
bound
xor
push
aam
notb
sub
out
cmp
push
and
sub
xchg
sarb
inc
adc
and
icebp
popf
mov
jno
mov
cli
bound
or
inc
sub
xor
sbb
ret
mov
lods
push
ljmp
push
enter
popf
sub
xor
cmpl
mov
testb
insb
xor
shll
mov
mov
and
in
call
adc
test
nop
test
add
pop
push
cli
repz
lock
repnz
pop
cmpsb
mov
mov
jns
jmp
inc
sarb
add
or
mov
pushf
add
stos
jb
test
pop
push
or
jg
adc
loop
adc
test
adc
sub
jle
addr16
adc
cmp
xor
lods
cmp
aam
stc
rclb
aas
mov
addl
xchg
mov
out
ja
into
mov
andb
inc
insb
sti
jge
or
lret
sub
mov
inc
and
into
or
dec
sbb
lahf
xor
add
pop
push
sbb
out
xchg
jb
iret
sbb
jae
das
enter
iret
iret
mov
xchg
into
in
jecxz
idivb
popf
sbb
test
fimull
add
dec
add
jb
sbb
orb
mov
aas
push
xor
cli
xchg
nop
cmp
test
xchg
jae
push
les
sbb
repz
mov
cmp
push
push
adc
cmpb
loopne
outsb
push
adc
mov
js
jns
cmp
cmpsb
cmp
and
lcall
lock
sub
test
xchg
xor
mov
outsb
inc
enter
mov
push
pop
push
out
gs
or
push
into
iret
inc
mov
repnz
jae
dec
push
das
add
enter
icebp
pop
push
loope
cli
outsl
out
xor
add
scas
mov
pop
jmp
rclb
in
test
cmp
aas
jg
cmpsb
push
lock
mov
mov
mov
cli
mov
sub
sub
mov
mov
cmpsl
lret
loop
xorb
repz
ds
inc
mov
lahf
fimuls
pop
fnstsw
mov
call
mov
movsb
test
dec
lea
int
pop
bound
mov
pop
imul
out
clc
repnz
sbb
fisubs
icebp
sbb
insb
adc
loop
and
or
push
fwait
repnz
mov
mov
test
js
daa
sarb
bound
mov
sub
push
pop
ret
fucomip
mov
pop
jmp
jmp
repz
or
dec
sub
cmp
icebp
jnp
cmpsb
sbb
nop
xchg
jmp
pop
addb
mov
inc
mov
mov
in
mov
mov
jno
repz
mov
xor
stc
xor
dec
and
mov
sub
fnstcw
fisubrs
int3
inc
cmpsb
mov
xor
cli
push
mov
or
scas
popa
popa
in
and
push
lahf
rorl
jo
mov
add
movsl
lret
push
sub
daa
out
das
int3
loopne
hlt
or
int
pop
in
rclb
gs
daa
les
les
push
or
movsl
lods
pop
push
rcrb
adc
xchg
or
push
jo
xchg
lahf
mov
loope
aaa
sbb
stos
mov
or
lret
dec
or
jmp
cmp
or
lock
xchg
movsb
sbb
fs
shlb
xchg
adc
sub
data16
push
pop
daa
add
jmp
sub
rorl
cmp
test
sbb
insb
inc
mov
xchg
xchg
xor
xchg
mov
shr
add
aam
sub
xchg
dec
cmp
cmp
jl
dec
add
jmp
mov
xor
dec
loopne
hlt
adc
orb
push
add
leave
push
jbe
or
inc
jmp
fsubl
stos
jg
rcrl
pop
inc
out
cmc
cmp
jo
mov
jg
sbb
cltd
xchg
pop
lret
push
push
addr16
dec
or
loopne
fs
sbbb
pop
in
push
fs
jnp
lcall
mov
mov
and
add
ds
cvtps2pd
fidivl
mov
mov
test
insl
xchg
cwtl
fstps
sbb
loop
adc
and
jb
pop
scas
fwait
sub
jmp
jmp
jo
pop
aaa
cli
ret
out
pushf
dec
mov
test
mov
xchg
cmp
and
ljmp
xchg
mov
push
in
shrl
pop
adc
inc
adc
pop
daa
mov
scas
fdivs
das
cs
pop
jo
mov
shlb
ljmp
jg
iret
arpl
jl
mov
xchg
fisubs
out
sbb
push
pop
and
in
out
xchg
inc
push
cmp
test
cmc
xchg
sbb
inc
dec
inc
sbb
sub
pop
or
mov
imul
adc
ficoms
jg
sbb
inc
fdivrl
decb
test
push
imul
fnsave
out
addr16
mov
mov
ljmp
dec
and
or
test
or
movsb
popf
pop
cli
jb
imul
imul
push
jo
xchg
std
stos
xchg
sub
jp
mov
inc
das
movsl
pushf
lret
in
or
and
add
adc
push
lock
cmp
and
out
loope
subl
je
xchg
loopne
xchg
jg
dec
push
leave
jae
or
lods
rcr
mov
aad
fwait
inc
xor
hlt
test
jne
ret
imul
cwtl
enter
mov
push
push
and
out
pop
sub
pop
movsl
pusha
mov
inc
push
fdivs
jno
icebp
mov
aaa
je
lock
ljmp
std
adc
fimuls
sbbb
fimull
cmp
and
lret
jmp
and
cmc
movsl
out
out
xchg
jnp
adc
lods
cwtl
call
sbb
lea
icebp
push
int
pusha
je
and
shr
lcall
adc
addl
fistpll
mov
pop
cmpb
es
std
xor
jp
push
lahf
pop
mov
xchg
aad
inc
movsl
ret
push
pushf
xchg
or
adc
mov
mov
sub
and
mov
movsl
dec
xlat
ror
mov
add
popl
mov
clc
cld
pop
ds
aam
mov
sbb
cli
ret
mov
mov
and
test
and
push
in
xchg
cmpb
pop
xchg
cld
push
jnp
dec
mov
xor
outsl
mov
inc
cmp
ja
inc
sbb
add
test
or
out
mull
xor
adc
std
gs
push
mov
pop
jns
mov
daa
pusha
mov
pusha
dec
pushf
test
ss
jecxz
cmp
mov
adc
dec
add
sub
cmpsb
adc
loope
sbb
outsb
test
jmp
or
xlat
cmp
xchg
and
add
or
add
push
pop
int
jg
mov
and
rcll
int3
fildl
pop
pushf
jle
xor
pop
dec
sub
int3
mov
jmp
icebp
hlt
daa
mov
daa
inc
jo
mov
stos
jne
iret
sub
mov
pop
dec
mov
loope
shl
in
insb
out
xchg
sbb
inc
xor
xor
mov
insl
add
dec
rclb
clc
outsb
fistl
mov
or
sub
xchg
jae
dec
mov
iret
push
mov
add
mov
xchg
ljmp
lret
jne
sbb
sub
les
jo
or
mov
rorl
or
push
std
scas
xor
in
mov
and
mov
xor
mov
pop
repnz
bnd
repz
jmp
outsl
insb
add
lock
push
out
mov
int3
sub
scas
mov
mov
push
and
dec
daa
imul
or
fdivrs
adc
sbb
pop
jo
out
push
mov
xchg
dec
jle
cmp
dec
mov
icebp
out
push
stos
mov
xchg
ret
or
rcrl
dec
fimuls
or
divb
adc
pop
mov
jecxz
lock
sub
mov
cmc
lret
jnp
lret
cli
mov
outsb
aam
inc
mov
cmp
clc
mov
in
inc
aaa
jecxz
adc
lods
stos
sub
popf
gs
cmpsl
add
repnz
mov
add
and
cwtl
icebp
cmpsl
mov
pop
sti
loope
sub
insl
jns
loope
movsl
push
cmp
adc
xor
rcrb
jnp
repz
lea
dec
and
lock
mov
jmp
or
pop
cltd
xchg
and
lods
sub
lods
mov
bound
xor
mov
pop
dec
scas
lock
xor
outsl
or
fprem
mov
mov
cltd
add
mov
or
xchg
in
mov
mov
adc
mov
or
sub
sbb
xchg
cli
rcrb
iret
in
push
test
data16
xchg
jo
dec
lret
or
cwtl
add
pop
jae
sub
or
xchg
jnp
sbb
data16
push
stos
cmc
sub
lock
xor
mov
leave
add
movsl
cmp
push
and
pop
push
pop
inc
test
ljmp
aam
jmp
xor
repz
pop
jbe
lret
xchg
les
call
inc
stos
pop
cmp
std
pop
or
or
insb
mov
adc
and
xor
nop
push
pop
js
sub
mov
lock
jno
pop
out
push
mov
xor
pop
aad
cmpsb
jg
fsts
insb
jnp
jbe
push
xchg
xchg
mov
xchg
pop
xor
cmp
cmpsb
ret
xchg
cmp
lea
loopne
pop
cwtl
movsb
leave
pop
out
dec
ja
leave
sub
mov
lahf
pop
bound
push
push
adc
xchg
dec
or
add
out
lock
and
jmp
mov
test
or
loop
sub
dec
js
mov
add
imull
in
pop
adc
imul
stc
adc
or
inc
mov
cltd
ret
mov
mov
inc
jg
jecxz
adc
sub
jge
add
xchg
int
std
jp
popa
bound
sub
popf
test
add
cmp
inc
jnp
mov
pop
add
sub
mov
cs
mov
out
add
leave
mov
out
fmul
roll
sbb
push
sub
xchg
sbb
push
js
sarl
cmpb
pop
and
jnp
les
dec
sbbl
es
push
inc
pop
aad
jne
pop
in
cmp
fwait
dec
mov
mov
pop
mov
dec
and
push
fs
pop
mov
adc
pop
std
mov
and
xchg
mov
lock
cmpsl
add
je
nop
push
cmp
int3
cmp
stos
jbe
enter
into
mov
add
xchg
popf
jge
sub
or
popf
xor
sbb
iret
push
push
leave
in
cmp
stos
dec
fcomip
pop
sub
js
imul
sub
jmp
pop
inc
push
lods
push
dec
testb
loop
sbb
dec
cmc
pop
pop
xor
mov
and
add
xchg
mov
xchg
sbb
test
xchg
ljmp
jmp
in
mov
test
fnstsw
mov
adc
inc
cmp
mov
dec
and
cmp
fdivp
mov
addl
enter
repnz
in
xchg
sbb
cmp
subl
dec
not
or
aaa
jg
stc
push
test
fidivrs
sbb
and
lret
divl
jno
xchg
nop
movsl
loope
or
sbb
ret
mov
mov
jb
int3
jo
push
mov
mov
push
outsb
xor
mov
cmova
mov
mov
icebp
push
or
push
pop
lret
jae
adc
sbb
outsb
xor
aaa
mov
test
mov
mov
shlb
xchg
jns
push
push
lcall
dec
test
mov
cmp
bound
ret
cmp
repz
xchg
adc
mov
std
mov
mov
faddl
mov
sub
es
mov
pop
lahf
adc
mov
jno
jbe
outsb
push
mov
dec
addr16
mov
inc
xchg
xorl
sbb
inc
add
pop
stc
cmp
jmp
es
xor
push
sbb
fsubl
pop
scas
add
jae
sbb
inc
sahf
stos
les
xor
jecxz
mov
and
shll
lea
xchg
cmp
cmp
pop
inc
sbb
jge
and
shll
jmp
dec
sbb
test
push
lods
xor
mov
push
jo
nop
push
stos
into
mov
xchg
mov
push
xorb
add
sub
clc
pop
or
mov
sub
setle
pop
mov
dec
dec
adc
shlb
add
out
mov
dec
xchg
aas
mov
sti
inc
fmuls
fisubrl
lret
ja
fmul
dec
push
dec
or
pushf
mov
push
sub
arpl
or
add
mov
inc
mov
sbbb
push
aam
dec
scas
jnp
or
test
loope
or
adc
aaa
in
stos
out
mov
insl
ror
icebp
cs
adc
push
test
mov
ret
icebp
cli
ror
pop
push
add
enter
aaa
imul
sub
and
lods
fisttps
mov
mov
fimuls
mov
mov
popf
mov
mov
stc
xor
add
test
xchg
xchg
lods
iret
in
dec
push
push
rcrb
cltd
test
mov
fmuls
pop
repnz
rorl
stc
and
xchg
add
lahf
notl
shrl
sbb
ret
pop
es
cmp
fstpt
cs
popf
mov
fldl
push
pop
xor
mov
jae
push
stc
and
cmp
or
popf
add
mov
pusha
notb
or
dec
xor
icebp
roll
pop
jnp
mov
cs
popa
add
loopne
mov
imul
pop
xor
mov
les
stc
jl
loope
xchg
xlat
adc
push
jp
cld
push
push
pop
les
mov
dec
mov
scas
int3
xorb
rclb
jno
cltd
std
pop
in
arpl
pop
sbb
or
shlb
les
inc
mov
dec
rolb
fucom
mov
daa
repz
ds
cmp
sti
in
cld
scas
call
sarl
pusha
lods
mov
mov
cs
add
dec
pop
loope
mov
call
ret
adc
pop
scas
clc
add
jmp
test
popa
adc
cmpb
js
adc
jl
pop
and
xchg
aas
sub
mov
lahf
cli
and
adc
xor
int
stos
lahf
mov
xchg
scas
sbb
push
mov
mov
inc
jb
insb
les
shll
mov
fdivl
pushf
push
aas
hlt
lret
sbb
fisubl
cltd
mov
fadd
mov
mov
out
loopne
call
shlb
pop
sub
jae
in
in
pop
xor
jb
sarl
dec
int3
sbb
sub
ss
jp
dec
outsl
leave
clc
scas
fwait
out
lret
les
inc
sub
mov
insl
push
xchg
or
aad
push
pop
push
sub
ljmp
mov
daa
jge
inc
shlb
mov
lods
adc
xor
mov
scas
je
cltd
mov
dec
scas
enter
data16
xchg
xlat
dec
push
xchg
roll
mov
loope
repz
pop
in
ret
pop
sarl
sub
xchg
mov
enter
pop
aad
enter
loopne
push
int3
std
sub
and
cmp
mov
int3
ss
inc
setp
push
sbb
out
sub
push
and
repnz
add
imul
outsl
pop
adc
fs
sub
les
sbb
test
loope
int3
cs
xor
in
jl
adc
pop
and
mov
add
daa
lcall
cmp
mov
mov
rol
sub
stos
push
xchg
das
push
add
xchg
jnp
xor
call
mov
jnp,pn
shll
jns
xor
inc
jg
mov
add
aam
je
xchg
scas
inc
xor
xor
lea
mov
sbbl
movb
jge
mov
lret
loope
pusha
ja
sbb
stos
dec
enter
add
repz
and
fidivl
aad
xor
inc
hlt
les
out
xchg
iret
push
ret
jns
add
sbb
pop
out
sub
dec
fiadds
cmp
push
clc
pusha
jl
test
jns
mov
jmp
out
xchg
xor
mov
jmp
mov
test
in
push
mov
mov
sub
mov
outsb
movsl
roll
aam
or
lret
xchg
pop
int
sbb
pop
mov
das
inc
fldl
ficompl
enter
ret
mov
jae
stos
dec
test
inc
cs
sub
xor
jl
jmp
mov
leave
fs
lds
lret
stc
std
adc
rcr
js
push
and
shl
inc
leave
fwait
pop
je
stos
fwait
int
add
xchg
in
out
in
aad
mov
lret
add
fstl
push
iret
xor
push
sub
add
out
push
sub
dec
xor
xchg
icebp
adc
das
scas
mov
xor
push
push
mov
dec
mov
sub
pop
xchg
or
aam
rcrb
fimuls
xchg
rclb
rorl
int
ficoms
push
insb
add
jge
je
lret
mov
or
ja
push
jnp
pop
mov
jmp
sub
add
cmc
mov
xlat
cli
inc
icebp
enter
rcll
in
push
rorl
xchg
mov
movsb
enter
sarl
fisubl
ss
xor
sar
add
imulb
loope
push
jns
in
aaa
out
sub
xor
dec
push
les
aam
loope
idivb
int
xor
scas
in
dec
add
stc
sbb
bound
inc
xor
dec
test
loopne
xchg
and
cltd
add
xchg
jl
push
pushf
mov
stos
push
lret
jno
push
sbb
pop
sbbb
mov
add
push
jae
dec
push
inc
enter
cs
aad
mov
xchg
stos
stos
subb
mov
std
je
jg
push
add
fwait
dec
in
mov
or
xchg
push
inc
xrelease
adc
cmp
xchg
fcompl
dec
mov
out
popa
in
pushf
in
nop
push
cmp
bound
mov
cmpsb
out
in
fldenv
jns
cmp
jae
or
hlt
aas
stos
mov
stos
mov
push
xchg
pop
pushf
loopne
mov
jle
shlb
pushf
lmsw
dec
mov
inc
out
and
repz
xchg
sub
mov
out
in
mov
and
clc
sbb
inc
enter
lret
aad
fstps
xor
adc
mov
xchg
push
hlt
js
sub
xor
sub
pop
cs
sub
mov
adc
nop
sub
outsl
fs
jno
in
sub
sbb
gs
repz
xchg
stos
aam
call
adc
stos
mov
aam
mov
iret
mov
nop
cmp
jo
loope
jne
call
mov
add
and
pop
iret
scas
testl
imul
jl
dec
lock
aam
inc
mov
xor
push
dec
push
lods
fs
inc
repnz
fisubrl
decb
cmp
add
add
into
pop
xchg
mov
shl
xchg
jae
push
adc
jb
push
repnz
std
mov
imul
dec
pop
scas
fs
xchg
cs
cwtl
mov
fisubrl
negb
leave
xor
clc
push
std
call
loop
mov
sub
mov
mov
and
sub
loop
cmc
int
cmp
xchg
sub
fdivp
add
call
xor
sub
dec
dec
and
cmc
std
or
in
test
clc
mov
lahf
jmp
xor
mov
sub
push
jp
cmp
adc
test
inc
sbb
out
xchg
ret
sbb
popa
sub
in
dec
mov
adc
rcll
cltd
lret
or
fistpll
and
or
and
pop
out
gs
scas
xlat
jae
push
shrl
dec
les
sbb
mov
cmp
dec
sub
xchg
push
mov
and
adc
lods
stc
xor
jns
negl
push
push
inc
bound
inc
lds
xor
mov
push
icebp
out
sub
sbbb
cmp
push
out
lods
sti
push
popa
push
cmpsl
push
je
imul
cmc
popa
cmp
loopne
lock
int
push
mov
lret
pop
cmp
push
inc
pop
inc
dec
or
or
xlat
jbe
inc
pop
out
sub
hlt
add
or
mov
xchg
subb
lret
or
gs
outsb
jg
inc
in
cmp
or
mov
lahf
stc
and
jbe
test
cmp
jmp
std
xor
mov
jge
in
inc
jg
std
xor
in
movl
loop
sbb
fmuls
mov
aas
in
cli
or
sbb
mov
mov
mov
push
test
dec
sbb
gs
pop
movsb
push
cmc
xchg
push
ret
mov
jl
faddl
xchg
push
shrb
call
lock
insl
xor
sbb
outsl
xchg
xor
in
cmc
sbb
lds
orl
adcb
mov
adc
xor
gs
lds
inc
aaa
sub
scas
jbe
sub
push
ja
sti
movsl
mov
cmpsb
inc
xor
add
std
sbb
and
and
nop
cmp
lret
adc
sbb
mov
jno
insb
loop
jae
mov
pop
sub
adc
sub
push
dec
out
sub
lea
test
mov
push
add
cmp
sbb
pop
push
jmp
leave
add
jo
dec
sbb
imul
adc
cwtl
fidivrs
pop
mov
pop
pop
xchg
sub
inc
cmp
in
shrl
xor
pop
or
dec
aaa
arpl
mov
xchg
xor
insb
ja
xor
aad
xchg
jne
ja
dec
inc
jl
jmp
fists
arpl
int
pop
pop
clc
sti
fisttps
and
inc
adcb
ds
push
jg
aam
push
push
add
and
push
inc
movsb
in
ljmp
in
pop
andb
push
aas
or
push
xor
push
mov
push
mov
lcall
inc
jg
pushf
jecxz
ljmp
adc
pop
fistpl
or
sahf
add
sub
gs
mov
xchg
sbb
xadd
mov
outsb
push
out
addr16
and
pop
sti
inc
push
cltd
or
adc
arpl
jmp
movsb
mov
stos
stc
jnp
lock
js
inc
test
jb
xlat
out
mov
daa
push
xchg
sahf
push
add
cltd
mov
in
xor
or
and
ret
cmc
inc
add
and
and
dec
pop
dec
mov
adc
aas
or
dec
aam
jp
mov
sub
aas
arpl
or
shrb
jp
rclb
mov
sbb
xor
dec
push
pop
jle
imul
shrb
scas
push
dec
aad
jne
mov
pop
push
test
mov
pop
inc
ds
test
pop
inc
ja
test
shlb
shrb
xchg
gs
in
incb
orb
sti
add
add
ds
outsb
int
notl
push
divb
pop
dec
pop
movsb
into
and
adc
push
push
inc
xorb
rol
push
repz
xor
rcr
sbb
sbb
cmp
mov
or
push
movsb
test
jp
mov
fidivl
push
dec
adc
mov
mov
mov
sahf
mov
out
lds
pop
jmp
push
sahf
xor
cmp
jne
das
jne
rorl
push
mov
xchg
addb
sub
sarb
ja
push
sbb
jbe
jl
fldenv
cltd
test
sbb
andl
sbb
addr16
mov
insl
lret
sub
sbbb
mov
rol
lret
add
lahf
sub
push
add
lock
xor
xchg
or
in
aas
xchg
inc
fs
mov
out
fsubl
push
pop
int3
cmp
gs
fcmove
dec
jnp
call
mov
or
enter
rclb
jnp
ss
mov
je
push
aad
ret
aad
mov
imul
cltd
mov
rorl
sub
mov
sahf
mov
mov
pop
aaa
adc
sti
stos
adc
pop
ficoml
dec
aad
and
inc
or
cmp
insl
xchg
or
pop
pusha
lret
sub
or
iret
std
arpl
mov
adc
cmp
push
lret
bound
outsb
push
xor
jl
or
cltd
sahf
fucomi
test
cmp
cmc
dec
aam
adc
mov
sub
iret
mov
mov
xchg
jno
scas
into
test
jnp
cmpsb
sbb
loopne
hlt
in
ret
fiaddl
and
add
add
mov
vmwrite
lods
lods
imulb
inc
inc
mov
lahf
mov
aad
imul
and
push
push
xchg
call
and
daa
sbb
loope
ret
rcrb
lock
mov
pop
loopne
push
xor
mull
lods
int
push
mov
popf
add
xor
xor
pop
sub
dec
and
sub
ror
andb
cmc
add
test
movsl
enter
je
std
repnz
loop
std
testb
sub
sbb
loopne
cmpsb
fbstp
pop
movsl
rcl
inc
test
adc
inc
faddl
adc
cmp
adc
jae
xchg
ret
gs
xacquire
xor
xchg
pop
movsl
sub
stos
xor
ja
push
leave
add
mov
jecxz
out
xchg
adc
adc
sub
lret
sti
inc
sahf
pop
mov
js
mov
jge
shl
lahf
mov
or
out
mov
xor
push
cmp
cli
pushf
cltd
scas
xor
test
xor
pop
xlat
rcl
iret
cmpsb
mov
pop
outsl
dec
pop
insb
dec
mov
adc
dec
aas
or
repz
mov
cmp
jns
sbb
cs
scas
movl
cmp
outsl
jmp
and
xor
icebp
std
cmp
ljmp
pop
sbb
aas
lahf
addr16
dec
mov
xor
in
mov
jne
std
imul
xchg
sub
iret
add
sti
xor
jecxz
sahf
aas
scas
rclb
hlt
andl
sti
inc
push
jno
ja
jg
push
mov
push
sbb
sub
sahf
mov
jge
mov
icebp
push
outsb
out
add
jecxz
inc
inc
push
popf
lahf
scas
dec
lret
mov
mov
std
mov
fmull
dec
sarl
lea
mov
adc
sbbb
nop
inc
in
gs
icebp
les
ljmp
add
into
xor
aam
pusha
or
es
inc
leave
sub
std
addr16
mov
ja
push
add
sub
or
loop
fsubrs
cwtl
add
pushw
and
addl
cmc
ret
test
adc
mov
popf
test
jecxz
pop
mov
incl
loope
pusha
jg
pop
fmul
xchg
add
movsl
gs
cld
sbb
ret
mov
jae
and
je
push
les
addr16
in
and
jno
ja
push
cld
jnp
fistps
bound
mov
pop
shrb
pop
sahf
adc
xor
fildll
fs
cmc
jno
add
xchg
loopne
loope
out
out
adc
jmp
jb
movsl
aaa
mov
or
lcall
jo
mov
adc
xchg
fldl
or
lods
mov
xor
cmc
int
out
xor
and
lret
cs
sbb
sub
ss
clc
jno
cmpl
pop
clc
es
and
lods
xchg
add
inc
jne
pusha
ljmp
push
xor
mov
lcall
adc
sahf
jmp
stc
aaa
rcl
js
in
call
loopne
push
pushf
xchg
lahf
or
and
xchg
push
cmp
xchg
adc
ja
popa
std
mov
in
sbb
into
mov
sbb
outsb
fs
sbb
fwait
and
test
rorb
dec
or
pop
jmp
jp
jl
xor
daa
xlat
mov
dec
mov
jge
jb
add
nop
ja
pop
loope
push
pop
pop
std
pop
jp
inc
rorl
xchg
test
call
jg
dec
lret
rcll
data16
insw
imul
xor
jbe
lea
mov
cld
lret
add
popa
add
addr16
in
push
jmp
xchg
jne
mov
stos
sub
inc
mov
daa
xchg
push
mov
push
add
dec
xchg
push
or
jo
lret
mov
ja
sbb
sbb
rclb
cld
scas
in
inc
testl
cli
aam
push
adc
push
rcrb
pop
jge
lea
cli
imul
pushf
dec
int3
xchg
mov
out
mov
mov
bound
fnstsw
sbb
xor
sbb
enter
movsb
mov
xor
adc
pushf
insl
fwait
mov
xor
mov
test
mov
icebp
inc
shll
icebp
orl
shll
and
add
adc
inc
add
and
outsb
and
and
hlt
jno
push
mov
call
stos
mov
xchg
mov
adc
and
inc
or
inc
adc
lret
dec
and
adc
nop
inc
mov
cld
and
in
repz
mov
push
les
arpl
mov
mov
lcall
and
fidivs
xor
xchg
cld
lods
cld
push
outsb
xchg
ret
xchg
loop
test
inc
mov
mov
jg
out
jbe
add
and
out
cmpsb
jecxz
leave
loopne
cmpsb
adc
adc
sub
lock
js
loopne
jl
fs
mov
adc
nop
shll
push
sbb
jno
push
sub
dec
lcall
push
xor
xchg
or
push
test
mov
mov
mov
inc
std
pop
aad
xchg
stc
scas
rorb
sub
cld
mov
jns
adc
mov
lods
jmp
mov
xchg
ret
pop
xor
int
and
fimull
sub
mov
lahf
rorl
add
push
jae
xchg
test
push
in
xor
adc
inc
lahf
shr
ret
sbb
mull
sti
mov
xlat
adc
pop
sub
sarb
js
repnz
mov
lods
cmp
cmp
pop
ficoml
cmp
xchg
pop
rcrb
loope
cmpsb
test
in
pusha
mov
mov
adc
cltd
sarl
cmpsl
mov
xor
cmp
out
faddp
xor
std
imul
pcmpeqw
xor
fisubrl
push
xor
xchg
scas
repz
sbb
push
cmpsl
cmc
mov
mov
inc
shl
xorl
ret
lock
ds
arpl
lods
fcomip
pop
fimuls
pop
mov
mov
push
mov
lcall
or
push
push
adc
cmp
adc
mov
add
insb
fldenv
gs
pop
mov
insb
push
mov
arpl
pop
movsb
xor
push
arpl
insl
aam
negl
out
adc
xor
std
xor
mov
pop
fdivs
xor
into
pop
xor
mov
mov
outsl
ds
ljmp
int3
mov
xorl
add
mov
std
dec
mov
inc
dec
add
pop
inc
or
decl
out
push
xchg
inc
dec
xor
inc
repz
fisubs
stc
aas
add
xchg
aas
repnz
test
mov
fcomps
bound
jno
cwtl
shrb
cli
jbe
hlt
pop
rcrl
mov
icebp
fstpl
xchg
dec
and
out
mov
sbb
inc
cmp
loopne
mov
add
add
jg
rcr
jle
sti
add
xor
mov
imul
xlat
and
mov
popa
adc
mov
sarl
inc
in
test
imul
pop
f2xm1
enter
addr16
lcall
xchg
sbb
cmp
xchg
loopne
mov
or
aas
jmp
push
add
pop
inc
es
inc
sbb
mov
mov
mov
icebp
ret
je
sub
test
mov
mov
clc
fsubrs
icebp
fsubl
dec
inc
pop
scas
lret
jne
cld
cmp
js
mov
adc
mov
lret
cld
mov
push
shll
in
pop
or
mov
mov
sbb
lahf
out
adc
call
inc
dec
or
mov
movsb
int
pop
xchg
aas
fistl
adc
or
outsl
out
inc
mov
fldcw
fdivr
std
rcrb
aad
and
aad
ret
mov
inc
testl
insb
ljmp
leave
addr16
das
cltd
daa
lods
jp
in
adc
xchg
sub
icebp
xor
jno
aas
sti
js
out
cmpsl
insl
adc
mov
pop
aam
test
outsl
add
mov
lret
inc
sub
setl
insl
pop
pusha
cli
in
sbb
loopne
xlat
dec
clc
and
or
cmpsb
and
rclb
add
jae
andb
mov
cmpsb
stos
xor
shl
mov
test
repnz
xor
pop
aas
add
xchg
cltd
sahf
icebp
push
lods
pop
iret
lea
repz
fildll
lcall
loop
fbstp
or
stos
mov
and
lds
mov
sbb
mov
ret
add
dec
sbb
leave
dec
shl
cmp
xor
lcall
pushf
or
iret
rcrl
in
aas
dec
adc
rorl
add
test
dec
fcmovnb
jecxz
pop
or
cmp
dec
xor
sub
push
mov
jge
mov
push
js
sbb
push
out
dec
scas
cltd
dec
xor
mov
xchg
mov
or
icebp
mov
cwtl
fcoml
dec
imul
jg
sbb
loopne
mov
dec
jne
iret
insb
pusha
loopne
mov
mov
fsubs
pop
pop
dec
adc
mov
inc
mov
daa
bound
pop
sti
cmp
ljmp
aad
pop
dec
inc
xor
adc
inc
or
push
mov
pop
addr16
cmpsb
fs
pop
push
lcall
pop
sti
movsl
or
insl
inc
jp
inc
sub
pusha
jmp
dec
mov
fwait
xchg
cwtl
jb
in
inc
imul
fwait
mov
add
test
in
mov
push
push
in
add
inc
mov
mov
repnz
jecxz
add
jp
into
fcoms
mov
sarb
ret
sbb
out
insb
and
jo
scas
ljmp
mov
sbb
xor
std
bound
cmp
dec
mov
adc
xlat
mov
decl
inc
sub
ljmp
test
push
push
mull
cltd
sbb
jmp
ljmp
gs
ss
mov
add
mov
push
shl
pop
hlt
jb
shll
push
dec
jmp
mov
dec
inc
jmp
and
mov
push
xor
dec
xchg
dec
cmp
add
jecxz
mov
sub
xor
mov
sarl
push
cmpl
xor
sbb
xchg
xor
push
inc
sar
xchg
test
xor
mov
push
cmpsl
sub
push
aad
adc
xchg
adc
pop
xchg
sbb
popf
addl
jns
xchg
loop
aas
scas
out
mov
mov
xchg
loop
les
lock
dec
or
adc
mov
fistl
sarb
outsb
stc
mov
aam
shll
int
test
mov
sbb
mov
aad
cmpsb
ret
ret
insl
lds
pop
cld
mov
mov
push
sti
ficoms
pop
add
scas
sbb
adc
cs
mov
push
jl
cs
movsl
push
jmp
loopne
insl
out
repnz
push
xchg
js
cltd
roll
jns
adc
xchg
jnp
in
mov
fdivl
mov
cltd
mov
out
lcall
es
in
movsl
adc
in
sahf
xlat
rsm
fstpt
mov
and
push
js
xchg
loopne
and
adc
mov
fsubrl
das
cmpb
jns
mov
pop
in
pop
pop
in
xor
lret
lock
pop
sbb
dec
sti
aaa
enter
jmp
or
loop
iret
xor
popa
mov
sbb
inc
mov
pusha
lret
les
imul
imul
mov
mov
mov
ret
xlat
jmp
sti
aaa
notl
inc
adc
addl
call
stc
mov
call
xchg
jns
cltd
scas
jbe
mov
cmpsb
push
fstpl
or
add
mov
push
sbb
jle
inc
stc
mov
lret
in
fsqrt
pusha
mov
pop
dec
pop
and
in
push
cmp
jo
test
ss
xchg
dec
push
out
lds
fs
lods
stos
dec
sub
pushf
insb
jo
and
push
xchg
mov
shlb
dec
pop
xchg
xchg
gs
dec
cmp
fwait
push
pop
pop
sbb
lcall
cltd
mov
fisttpl
adc
lds
sti
clc
push
test
mov
out
lret
dec
ja
xor
mov
int3
lds
dec
jp
dec
int3
jns
dec
pop
ljmp
inc
pop
jg
scas
stc
pop
mov
mov
xchg
jecxz
push
ljmp
rclb
movsl
jno
lahf
cmp
into
insb
ja
es
jg
sbb
idivl
data16
rorb
inc
sbb
mov
imul
mov
xor
sbb
int
push
push
sub
ffreep
mov
sub
dec
fldenv
add
dec
dec
imull
or
xor
mov
pop
push
push
nop
lahf
push
or
fdiv
add
push
xchg
inc
xchg
xor
jg
call
cmc
nopl
push
mov
jo
xor
loope
dec
cmp
push
push
fwait
dec
jno
ficoml
lock
push
nop
pop
aad
ss
lods
shrl
xor
mov
fxch
test
adc
js
in
mov
in
xlat
pop
push
and
mov
adcl
xor
imul
pop
xor
ffree
arpl
jae
inc
iret
les
dec
push
dec
lock
adc
add
inc
fnstenv
mov
repz
into
cli
add
lret
push
xchg
mov
xchg
iret
and
adc
add
push
adc
jnp
sub
and
ja
mov
mov
mov
dec
repz
xchg
sub
test
inc
xchg
fisubl
xlat
out
enter
jmp
clc
push
out
pop
lods
movups
mov
sub
mov
or
inc
fcmovne
in
fldl
lock
and
mulb
orb
push
sub
xchg
and
mov
pop
pop
nop
xor
negb
sub
dec
push
adc
dec
pop
out
lods
mov
shlb
out
jbe
sub
push
cmp
fadds
jp
cld
adc
or
loopne
push
mov
mov
arpl
dec
or
sub
fsub
jae
sbb
fwait
mov
sub
lret
push
mov
mov
scas
ds
mov
out
mull
aaa
lret
imul
and
mov
mov
pop
xor
lcall
in
pop
or
push
loope
stos
loopne
jle
push
ss
jb
mov
jp
xchg
sbbl
jnp
push
js
push
js
in
call
hlt
int3
mov
popa
pop
xor
mov
mov
xchg
cmp
mov
ret
int
fnstsw
xlat
shr
pushf
add
int3
xchg
in
shll
jae
mov
arpl
call
pushf
inc
xchg
sti
inc
imul
xchg
lods
lds
add
jno
scas
sti
testl
mov
imul
fnstsw
movsb
add
pop
lods
loop
inc
lock
mov
lock
pop
dec
adc
jl
jge
pop
lock
jp
out
mov
mov
das
adc
js
fisubs
jle
inc
mov
ret
mov
movsl
test
rcrl
cs
or
inc
inc
inc
das
test
jge
mov
inc
in
cmp
loop
sbb
push
ret
bound
movsb
cmp
lret
jnp
andb
rcrl
fisttps
sbb
lea
or
push
inc
xchg
and
or
aam
jmp
sub
outsl
push
mov
cld
es
push
jl
sbb
sub
icebp
pop
mov
das
sbb
inc
shrd
ret
mov
pop
sti
fsubl
mov
cmp
loope
mov
fmuls
inc
adc
add
popf
adc
jle
cli
push
add
fadd
dec
adc
pop
sbb
inc
rcr
negb
mov
roll
scas
xor
lahf
lcall
pushf
push
xchg
xchg
in
imul
dec
add
pusha
es
and
jnp
cmp
xchg
mov
movsb
mov
stos
xchg
jge
xchg
pop
loopne
xchg
jo
add
ss
mov
rorl
stos
lods
mov
jp
xchg
test
mov
pop
cld
xchg
inc
adcl
jmp
cmp
jl
loopne
dec
lods
das
out
push
xlat
inc
adc
sbb
sbb
cwtl
sbb
clc
inc
push
in
jbe
dec
cmp
push
pop
mov
ljmp
adc
and
inc
je
sbb
cmp
mov
cltd
push
jp
add
lods
xchg
sbb
popf
push
jg
mov
dec
mov
rcr
mov
xchg
inc
popa
cmp
dec
mov
sub
pop
mov
scas
add
nop
sub
push
inc
sub
das
mov
and
popa
mov
sub
sub
mov
push
adc
out
jae
je
jb
jno
fldenv
gs
mov
pop
xor
call
hlt
fbstp
cmpsb
cmp
movsb
rcl
lods
mov
aas
add
shl
sbb
rorl
rcll
pop
pop
enter
xchg
cmp
jbe
or
mov
sbb
cli
ret
sbb
inc
mov
dec
jb
cmpsl
fs
mov
insl
repz
adc
cmpsl
sbb
inc
cs
push
xlat
loop
pop
cmp
in
dec
or
negl
xlat
pop
into
hlt
iret
cmpl
popl
adc
fdivl
add
mov
lahf
mov
adc
pop
and
orl
iret
orb
cmp
jae
adc
fisttpl
xor
or
pusha
outsb
or
mov
sub
add
int
and
pushf
out
mov
in
fs
jle
pop
mov
jg
addr16
and
dec
mov
les
xor
rolb
mov
sub
mov
inc
mov
mov
in
fcompl
jle
pop
js
cmpsl
insb
xor
pushf
int3
lock
ss
cs
jne
ret
xor
push
push
fnsave
repz
aad
cmp
inc
or
pop
and
in
ja
aaa
sub
jno
sti
cmp
repz
popf
test
js
sti
xchg
push
in
lcall
xlat
gs
out
sbb
sub
mov
xor
push
push
hlt
and
xor
lcall
xchg
jb
mov
dec
xchg
das
mov
mov
xchg
out
fcmovnb
push
inc
sbb
inc
jge
scas
push
jbe
mov
add
call
lods
sub
lret
jge
outsl
inc
push
repz
push
ss
push
or
mov
insl
mov
jae
inc
add
add
cmpsb
stos
add
test
addr16
popf
inc
inc
out
jo
imul
fdivrs
xor
iret
xorb
mov
daa
fcmove
push
jns
sahf
ror
imul
add
cmc
cmp
mov
int
mov
inc
pop
mov
mov
pop
mov
outsl
lock
arpl
imul
push
sbb
psubusb
jp
or
add
sbb
mov
imulb
std
mov
insb
iret
cmp
loopne
sbb
shlb
fwait
and
jl
ret
sahf
or
push
mov
outsl
xchg
cld
cs
lods
repnz
push
jp
pop
add
mov
dec
sti
jge
imulb
jp
mov
out
mov
cli
add
int3
add
adc
jl
std
adc
mov
lret
sar
sub
sbb
rolb
jb
icebp
jbe
cmp
ja
call
xchg
dec
mov
aaa
add
in
sbb
jns
mov
xor
sbb
in
jno
fistps
fisubl
fildll
movups
pop
jecxz
sub
pusha
ja
sub
cmp
gs
sbb
jmp
xchg
ja
mov
dec
mov
mov
pop
pop
dec
or
sbb
lret
mov
mov
adc
sub
das
or
imul
cmp
rcrb
inc
jl
sbb
mov
push
aaa
fnsave
iret
cwtl
ret
dec
or
pop
hlt
cmpsl
dec
aas
mov
ret
inc
mov
adc
jo
aaa
push
mov
lods
movsl
pop
pop
outsb
cmp
sub
push
or
and
call
ret
push
dec
loopne,pn
shl
xchg
cmpb
cmpsb
pop
jae
sub
mov
sub
inc
push
adc
adc
cmpsb
mov
std
in
enter
in
xchg
sbb
dec
test
xchg
bound
sahf
add
loop
xor
inc
lret
pop
es
iret
jle
push
js
mov
push
ja
jle
cltd
in
idivb
mov
je
stc
fstl
dec
in
aam
or
mov
and
lea
adc
xor
adc
adc
lods
sahf
movaps
into
addr16
ljmp
out
out
outsb
or
outsb
add
cmc
or
gs
jle
push
lea
push
loop
andl
cmp
insb
cwtl
adc
or
mov
cmpsb
and
outsb
in
or
jl
mov
ss
icebp
jl,pn
movsl
inc
pop
add
into
mov
jp
push
mov
xchg
xchg
mov
dec
lahf
fwait
sbb
inc
in
ljmp
lret
mov
xor
dec
nop
adc
pusha
js
mov
clc
stc
popa
out
jmp
sbb
mov
in
nop
jecxz
scas
mov
ds
adc
fstps
xor
inc
and
push
sti
fisubrl
mov
jecxz
jle
mov
adc
cwtl
jp
out
movsl
mov
xchg
bound
dec
jp
cmc
or
dec
mov
fmulp
stos
aas
inc
mov
test
sbb
push
cmp
test
push
clc
in
adc
xor
incb
sbb
leave
inc
pop
and
jge
fsubr
push
mov
jl
mov
and
or
mov
enter
lods
sub
das
push
cmc
inc
cmpsb
cmp
xchg
movsb
loope
xor
sub
cld
mov
ja
mov
fidivrl
pop
inc
cmc
push
push
outsl
inc
bound
mov
xchg
les
push
lahf
lret
xorl
xchg
ja
mov
js
gs
jmp
lahf
and
adc
std
mov
add
xor
cli
test
cwtl
hlt
lcall
cs
inc
adc
xchg
add
lret
jo
cltd
xchg
movsl
mov
sub
cmp
jg
cmpsl
xchg
stc
fmul
cld
and
repz
movsb
xchg
push
mov
xchg
stos
sarl
outsb
inc
test
mov
push
inc
dec
int3
cmp
adc
sub
lret
int3
xor
cmp
insb
push
pop
test
dec
inc
ret
mov
in
mov
push
mov
push
imul
rol
pop
dec
mov
jl
inc
pop
and
sbb
adc
sub
push
popf
outsl
ds
cmp
movsb
cmp
cmp
fbld
ss
movsl
mov
or
jmp
out
push
or
add
fdivl
rcrl
push
dec
push
mov
jnp
push
dec
inc
jne
dec
es
cmp
pminsw
dec
lods
lock
cmpsb
mov
call
leave
outsb
arpl
stos
lea
dec
scas
outsb
xchg
fwait
mov
mov
sar
cltd
les
mov
xchg
sahf
iret
jg
call
xor
loop
popf
cmpsl
and
mov
enter
xchg
aaa
out
mov
pop
cmp
push
add
pop
and
outsl
inc
insb
mov
jp
jle
push
ret
mov
xchg
sbb
mov
insl
cmc
cwtl
xchg
pushf
cmp
sub
data16
cmp
dec
and
arpl
mov
lret
mov
lock
scas
rol
mov
xor
lahf
out
push
cmc
cs
mov
push
push
int3
mov
leave
nop
cmp
pusha
clc
fs
test
int
mov
xor
mov
ret
ljmp
ljmp
xor
fnstenv
fsts
mov
out
mov
cmp
jle
mov
jno
repz
cmpl
xor
ja
aad
dec
stos
or
lahf
xor
call
bnd
pop
or
test
mov
out
mov
aad
inc
and
aas
fadd
pusha
mov
scas
sub
jae
xor
xor
dec
jno
dec
mov
push
mull
mov
aad
jo
jecxz
and
loope
jo
js
push
inc
jle
cmp
sysexit
outsb
ja
or
and
pop
rolb
aas
dec
jb
cltd
jmp
jl
lret
jg
mov
outsb
jle
cwtl
and
or
jae
js
adc
sub
mov
fimuls
addr16
mov
sub
jecxz
roll
inc
orb
adc
xor
adc
popa
hlt
inc
test
not
gs
insb
pop
xor
push
je
mov
jmp
pop
xor
fdivs
jae
aad
insl
rorb
scas
insb
das
stc
or
jecxz
rcll
outsl
sarl
data16
pusha
or
sbb
and
mov
mov
mov
xchg
shr
scas
mov
lods
xchg
and
push
bound
cmpsl
sbb
dec
mov
popf
push
subb
sbb
jne
in
test
mov
daa
aas
cmp
cld
fldcw
dec
mov
std
imul
inc
clc
inc
dec
mov
rcrb
loope
lcall
inc
and
inc
push
mov
fscale
mov
pop
sub
loope
push
ret
and
mov
xor
test
push
mov
into
repnz
or
mov
lds
stos
jne
or
xlat
jae
loope
outsl
pushf
aam
mov
test
push
fistpll
ja
add
add
and
or
addr16
test
sub
or
ljmp
jno
xlat
sbb
shlb
xor
sub
dec
push
adc
jne
xchg
fstpl
repz
push
aas
pop
push
dec
mov
push
xchg
pop
fldcw
dec
sbb
jecxz
inc
sti
inc
jle
adc
xchg
add
ss
xor
sahf
ja
add
dec
mov
sub
pop
div
fldenv
push
sub
cwtl
sub
jp
repz
xchg
adc
jmp
lret
movsl
xor
aaa
bound
pop
lcall
xor
adc
mov
jle
mov
lods
push
call
shrl
fs
sbb
iret
xchg
out
mov
pop
mov
repnz
sti
pop
test
pop
mov
and
jne
out
lock
inc
xlat
inc
cmp
xor
mov
pop
lods
aaa
movsl
cmp
mov
push
into
cmp
jae
stc
outsl
into
enter
mov
jb
xchg
add
cmp
mov
xor
dec
int
fldcw
cs
lds
mov
dec
jne
pop
inc
lods
cs
jae
xor
ret
iret
repnz
push
dec
and
fstpl
push
shl
insl
repz
shll
mov
repnz
mov
pop
mov
jge
jns
xchg
fistpll
loop
out
or
cmp
andb
loop
repz
int3
jae
pop
mov
xchg
sub
add
ja
int3
or
push
pop
push
jno
or
enter
push
mov
add
mov
sbb
and
adc
outsl
push
popf
or
sbb
fcomip
push
and
decb
inc
mov
aas
adc
out
jns
ljmp
daa
arpl
fisubs
push
or
add
adc
cli
jl
arpl
jns
fcmovnbe
push
sbb
lcall
rcl
inc
adc
inc
cmp
pop
sub
fidivl
into
mov
lret
jno
popl
sub
add
and
inc
xchg
push
mov
push
repz
cwtl
ja
gs
mov
pop
cmpsb
mov
ja
insl
jno
xor
lds
push
dec
cmpsl
movsb
and
inc
xchg
mov
jle
cmpsl
fcompl
std
push
fisubrl
sbb
shrb
jge
adc
stos
shrl
jo
push
push
sbb
adc
in
pop
sub
sbbl
adc
push
in
aam
sub
iret
test
lods
inc
pop
shlb
shll
incb
or
mov
jle
out
movsl
jb
stos
mov
push
leave
loope
jmpw
xor
inc
pushf
cmp
movsl
shll
ljmp
insl
dec
hlt
repz
pop
jbe
and
xchg
loope
cwtl
mov
or
fsubl
xor
popf
lock
ljmp
inc
sar
out
pop
pop
mov
mov
inc
pop
push
arpl
cwtl
faddl
lock
mov
adc
nop
in
scas
and
loopne
cmp
pop
nop
dec
out
xor
pop
push
mov
pusha
clc
in
rcll
data16
pop
xor
and
sahf
push
nop
cmp
push
stc
mov
cmpsb
fistl
adc
jmp
sbb
jns
inc
imul
test
adc
loop
inc
sarb
dec
iret
push
enter
aaa
add
xchg
dec
mov
jae
dec
or
rcrb
mov
outsb
pop
iret
push
stos
sti
xor
in
out
add
mov
mov
ret
scas
int
out
xor
and
notl
and
mov
or
cli
push
shl
hlt
push
cld
xor
cmpsl
icebp
je
sbb
mov
dec
or
int3
lods
in
jne
popa
in
jle
push
push
dec
xor
fnstcw
push
mov
fwait
mov
outsb
fwait
enter
push
pop
inc
mov
frstor
out
adc
out
aaa
adc
divb
lods
movsb
mov
mov
add
mov
or
xchg
ficompl
push
inc
dec
push
mov
dec
ds
outsb
mov
ret
fimuls
push
pop
mov
sahf
add
ljmp
test
adc
fxch
rclb
jle
mov
pop
pop
cmp
push
setnp
dec
dec
mov
push
repz
les
bound
addl
push
or
xor
inc
jne
dec
xlat
jmp
lock
sub
pop
sub
sub
jle
adc
test
int3
pop
popa
in
inc
cmpsl
cmc
xor
out
add
or
rcrb
mov
lds
inc
xor
adc
xchg
mov
cltd
stos
rol
stc
out
out
aad
push
xchg
repnz
out
outsb
push
and
pop
cmpb
push
mov
add
insb
outsb
lcall
out
push
mov
mov
add
icebp
out
inc
pop
jb
cmpsl
push
mov
leave
dec
inc
sahf
addr16
xchg
test
mov
ljmp
sbb
ret
push
xlat
xor
jo
es
dec
mov
imul
jmp
push
mov
sub
lret
idivl
xchg
les
loopne
iretw
push
fs
and
test
jge
and
pop
cmc
rolb
mov
push
mov
loop
inc
lds
out
jno
out
xor
or
or
inc
call
imul
adc
loop
ret
sub
cli
pop
mov
data16
mov
jp
jae
loopne
mov
jle
rcrb
cmpsb
jo
ret
add
sbb
xchg
and
rorl
or
clc
orb
adc
int3
ret
pop
cmc
cmp
jbe
cwtl
pop
into
sub
cmp
cmpsb
inc
sarl
outsb
xor
outsb
cmp
jecxz
push
dec
test
jecxz
or
int
ljmp
out
insl
sbb
mov
pop
dec
mov
pop
fidivl
jns
loope
xchg
cmovo
sub
popa
outsb
dec
loopne
and
mov
xchg
out
es
outsb
subb
add
out
or
cmp
lods
mov
loop
mov
clc
sbb
jns
cmp
fcmovb
imul
push
pop
xchg
inc
dec
dec
loop
test
xor
lods
inc
xchg
sbb
sub
ss
and
xchg
mov
das
jl
mov
cmpb
push
sub
movsl
sub
cmp
or
push
mov
adc
dec
add
adc
xchg
cmp
ss
hlt
les
xchg
inc
and
lret
cmc
mov
fistps
iret
adc
hlt
popa
std
dec
sub
mov
lret
movsl
sahf
push
add
add
add
mov
shlb
stc
and
pop
jmp
sbb
insl
lahf
sbbl
test
es
push
add
jp
aad
test
pop
and
add
aad
and
cwtl
jecxz
rolb
xor
xchg
cltd
call
mov
jbe
pop
xor
or
rcll
mov
imul
imul
push
jae
push
sbb
sarl
bnd
jecxz
cltd
fstl
pusha
pop
pop
pop
sbb
lods
shll
push
dec
xor
outsl
lret
push
lds
loop
scas
rorb
inc
not
cmpsl
jp
iret
mov
push
cs
xchg
in
ret
into
es
fidivl
add
or
sbb
popa
in
pop
mov
test
int3
or
push
aad
hlt
add
jp
mov
jno
or
jno
in
pushf
in
rorl
or
hlt
bound
test
jb
cltd
adc
xchg
dec
xchg
je
cmp
push
nop
sahf
push
push
mov
push
aad
daa
mov
xor
xchg
insl
mov
mov
arpl
rolb
pop
popf
pop
dec
mov
pop
es
mull
pop
adc
scas
or
pop
push
jb
push
and
ja
cltd
mov
subb
call
cmp
xchg
xlat
or
test
in
sub
in
mov
int
cmc
enter
mov
mov
shl
cmp
shlb
mov
les
cmp
arpl
aad
inc
popf
leave
ffree
ja
push
pop
mov
mov
aad
into
pop
jb
jmp
ljmp
jb
adc
test
push
leave
int
rolb
cmp
add
inc
push
pop
and
lahf
add
repz
jae
pop
xchg
repz
jl
stc
mov
sbb
dec
aas
push
popf
xor
xor
fwait
sahf
aam
das
adc
mov
test
lcall
xchg
mov
outsl
cmp
negb
int3
cmp
clc
pop
xchg
add
pop
cmp
mov
cmp
pop
pushf
sbb
xchg
xor
in
xlat
ja
xchg
in
arpl
mov
aam
dec
push
int3
cmp
fstl
mov
jbe
aas
dec
adcl
push
sbbb
icebp
mov
call
test
xchg
gs
loopne
std
cmc
daa
pushl
aaa
subl
jb
dec
and
repnz
pop
xchg
adc
inc
xchg
lret
mov
fldenv
and
into
push
enter
cmp
inc
dec
out
push
add
ret
push
jl
push
mov
cmp
fs
imul
or
cmp
pop
call
neg
test
jmp
pusha
test
es
sahf
cmp
mov
or
mov
out
pusha
cwtl
mov
add
push
xchg
popa
mov
pop
iret
arpl
outsb
and
sbb
mov
sahf
xor
outsb
xchg
cs
jb
scas
imul
xchg
mov
cwtl
sub
inc
or
sbb
out
mov
mov
inc
mov
mov
movb
gs
mov
sbb
or
gs
jl
mov
push
out
push
repnz
sbb
mov
hlt
adc
test
sub
mov
adc
dec
push
and
mov
dec
xchg
test
emms
pop
das
add
je
sbb
fwait
imul
xor
imul
call
push
lret
jge
icebp
mov
aas
rcrb
sbb
pop
fimuls
jp
dec
cmp
dec
mov
ficoml
xor
sbb
dec
int
pop
ljmp
movsb
fistl
cmp
xchg
in
mov
jmp
leave
aas
xchg
sub
les
mov
sub
mov
xor
xor
dec
xchg
leave
andl
sub
mov
cmp
mov
mov
lahf
xor
pop
ljmp
out
pop
lret
minps
sub
inc
xchg
inc
std
cli
cmp
dec
mov
xor
mov
ljmp
adc
lcall
cmpl
data16
sbb
mov
decl
sarl
cltd
fisubl
fmul
fstpt
and
adc
imul
cwtl
jl
out
fwait
cmpl
mov
dec
cli
cwtl
fwait
sub
cwtl
mov
mov
sbb
call
jb
das
mulb
or
or
insb
repnz
sub
pop
push
lods
out
je
stos
dec
andb
addr16
inc
push
jg
lret
pop
int
push
pop
dec
push
jnp
cmp
in
dec
pop
push
xlat
and
dec
jb
push
out
or
outsb
pushf
pop
cli
xchg
test
xor
inc
ljmp
std
mov
ret
mov
out
inc
addr16
and
jp
pop
daa
jnp
subl
mull
test
addr16
and
xor
je
fwait
shll
rol
jecxz
push
and
xor
and
fwait
jne
inc
push
adc
mov
and
dec
sbb
push
adc
cmc
mov
hlt
cmp
jne
ficoml
shrl
je
jo
xchg
mov
dec
test
int
mov
mov
jb
add
scas
mov
xchg
push
sub
rcl
mov
shll
cli
inc
and
out
rorb
int3
jae
xchg
pop
sahf
mov
xchg
aam
int3
inc
jns
pop
fcoms
cmpsl
ss
dec
adcw
aas
mov
mov
outsl
mov
sbb
in
mov
subl
leave
add
notb
test
pop
jge,pt
or
enter
and
mov
pop
lret
push
popa
or
sbb
xorl
inc
dec
mov
jnp
pop
ret
ret
inc
push
cmp
push
inc
int3
test
js
mov
js
mov
loope
int
dec
inc
outsb
or
cli
mov
lret
movl
shll
aad
mov
ret
cs
fwait
jae
scas
pop
mov
and
dec
dec
pop
pop
push
mov
rcrl
movsb
sub
es
js
push
xor
pop
hlt
xor
xor
sbb
mov
sub
int
pop
aad
into
test
out
mov
jne
popf
sarl
fsubrl
call
cmpsl
hlt
cmp
ret
pusha
jb
shll
pop
call
mov
mov
cmp
xor
push
lahf
jb
shrb
mov
adc
lret
scas
stc
incl
push
xor
call
add
mov
mov
mov
cmp
adc
out
icebp
sbb
adc
jbe
or
pop
push
lahf
sub
jnp
jmp
or
popf
or
push
popa
inc
nop
add
add
and
jbe
pop
sub
or
fmuls
roll
push
movsl
pop
subb
fildl
outsl
pop
lret
pop
movb
sub
fwait
push
cmp
inc
stos
pop
ss
or
sahf
sarl
mov
lods
push
push
in
shrl
ss
pop
psadbw
nop
lret
and
nop
cltd
sub
cmp
sub
lods
rolb
mov
mov
push
cmp
sbbb
inc
xchg
pop
lea
or
sub
iret
inc
mov
loope
cmp
aas
xchg
stos
pop
push
and
movsb
in
pop
into
lea
popf
sbb
outsl
push
mov
repz
int
jo
sti
inc
rclb
jne
repz
mov
mov
jno
sti
dec
dec
das
shll
lods
test
int3
xchg
inc
pushl
mov
mov
cli
mov
push
fcomps
leave
adc
mov
sub
xor
rolb
pop
into
test
je
fldcw
cmp
sbb
mov
cmc
pop
shlb
pop
aad
les
dec
lock
dec
scas
movsl
jb
sub
mov
sub
leave
sbb
jl
mov
outsb
xchg
push
in
push
jo
and
cld
pop
test
mov
push
jne
mov
pop
dec
scas
movsb
jge
inc
int3
ljmp
push
inc
inc
mov
jecxz
cmp
movsb
mov
cmp
lret
jae
mov
stc
aas
decl
sub
fdivs
push
jmp
ret
fisubrl
sbb
cmp
sbb
mov
push
bound
cmpsb
loop
push
outsb
jl
shlb
mov
fwait
adc
push
cmp
lock
sub
jo
jp
test
int
mov
add
push
push
jmp
repz
dec
pop
cmp
jl
pop
repz
mov
popf
fsub
mov
xor
push
adc
adc
push
mov
xchg
sub
mov
icebp
dec
ljmp
sti
jmp
inc
push
xor
cwtl
xor
pop
pop
push
fucom
mov
inc
insb
xor
inc
pop
and
fnstsw
pop
sbb
and
es
sbb
sub
xchg
sub
clc
cmp
sbb
ret
inc
pop
mov
or
sub
pusha
dec
cmp
mov
cmpsl
xor
jp
xchg
push
push
mov
dec
jle
and
xor
xchg
cli
push
les
jmp
iret
jp
push
cld
call
jae
aaa
pop
lods
cmp
dec
loopne
push
or
and
lea
imulb
sub
ret
fucomp
mov
lods
insb
rorl
nop
pop
ja
hlt
mov
fisubs
popa
push
mov
lock
xor
movsb
mov
xor
lock
xlat
sarl
fstl
or
lods
jmp
mov
ret
outsb
pop
ss
sub
adc
aas
mov
mov
jle
push
xchg
aas
fstpt
repnz
and
adc
xor
add
dec
mov
icebp
aad
inc
xor
bound
inc
addr16
loope
dec
pop
pop
insl
inc
pushf
sub
pop
lock
fstps
cmpsl
and
mov
imul
orl
jecxz
cld
cmc
adc
cmc
or
sub
cmp
in
mov
int3
mov
inc
enter
add
mov
imul
fwait
repz
jnp
je
movq
pop
repnz
add
push
dec
addb
fcmovbe
test
addb
lods
xor
fsubs
lret
outsl
push
or
xchg
mov
aad
mov
mov
psadbw
mov
lods
push
sbb
les
mov
inc
stos
adc
and
and
cmp
inc
cld
add
xchg
pushf
fstpl
loope
adcb
push
push
mov
in
test
icebp
fisubs
sarl
inc
and
jle
inc
cmp
addl
and
das
lds
dec
pop
jg
sbb
and
adc
enter
sahf
leave
or
inc
dec
adc
clc
mov
aas
dec
jb
or
xor
push
cltd
rorb
addr16
out
imul
lahf
push
outsl
inc
mov
xlat
mov
add
inc
lcall
subl
arpl
cli
adc
sub
repz
adc
not
mov
mov
int
push
inc
xor
and
or
xlat
push
pop
mov
push
stos
mulb
sbb
movsb
sbb
orb
pushf
scas
mov
and
clc
fmulp
mov
mov
mov
xor
outsb
sti
xor
xor
aas
nop
xchg
push
inc
xor
popa
popf
mov
cmpsb
xchg
scas
ja
aam
dec
push
insb
rcl
repz
mov
mov
inc
cmp
mov
data16
xor
dec
scas
add
push
mov
push
insl
pop
add
mov
mov
insb
lret
inc
rolb
xchg
sub
mov
pushf
rclb
lret
testb
lret
xchg
flds
mov
inc
stos
jp
test
test
pop
pop
mov
and
mov
insb
pop
jl
sar
lahf
add
repz
mov
jle,pt
cltd
mov
push
xchg
and
repnz
jp
out
into
mov
xor
outsb
std
iret
lcall
repnz
clc
push
jne
mov
push
sbb
and
jecxz
cmc
imul
jg
out
sub
dec
dec
dec
push
fidivrl
dec
rolb
out
xchg
xorl
out
aas
jno
xor
cmp
and
or
imul
xlat
stos
stc
mov
into
scas
cmpsb
sbb
xchg
or
repnz
test
getsec
and
sub
jmp
adc
pcmpgtd
push
cli
shll
mov
jne
lahf
inc
jmp
xor
dec
jno
clc
or
jb
popa
cltd
jle
cmp
sub
jb
mov
hlt
bound
les
and
scas
out
sub
scas
test
and
sbb
test
testl
or
sub
adc
fdivrl
sub
sti
jge
clc
cli
jbe
cmpsl
repz
cs
aaa
and
xchg
pop
pop
push
daa
outsb
inc
lahf
sarb
es
and
fadds
jg
addb
push
int
push
call
stos
mov
lahf
push
push
jle
icebp
mov
cli
dec
push
cmc
jb
jnp
pop
dec
or
movsb
mov
dec
sub
fimuls
adc
mov
popf
xor
fadd
pshufw
lock
cld
mov
lds
mov
fcompl
pop
ljmp
pusha
lahf
inc
stc
inc
scas
inc
divl
mov
daa
lods
mov
loope
jmp
sub
sarb
dec
stos
inc
gs
int3
push
enter
jne
pop
mov
or
xchg
cmp
hlt
in
ljmp
arpl
inc
pop
mov
or
loopne
fcmovnbe
into
lcall
jns
cli
movl
neg
adc
jecxz
xchg
iret
push
jmp
in
es
pop
stos
rol
fistpll
or
into
das
adc
mov
add
mov
push
fwait
jb
test
or
jg
dec
dec
adc
mov
or
popf
sbb
stc
insb
sbb
and
jl
xor
cli
xchg
rorb
hlt
xchg
lret
test
mov
js
sub
jg
dec
rcr
aas
ja
sub
out
lret
sbb
jbe
jae
inc
or
js
repnz
sub
mov
fnsave
test
movsl
push
mov
sti
cmp
add
fstl
jbe
js,pn
fildll
mov
repnz
jae
test
mov
mov
xchg
push
pop
cmc
jg
xor
les
mov
mov
cwtl
lds
into
ljmp
dec
add
or
xchg
jbe
iret
dec
loop
dec
mul
sbb
xchg
pop
jge
push
test
mov
xchg
stos
mov
test
push
mov
call
repz
scas
xchg
and
clc
push
pop
ja
scas
push
pusha
cmc
jge
xchg
mov
lods
sbb
repnz
cmp
mov
rep
shlb
repnz
mov
push
aam
repz
add
popa
cld
ret
cmp
mov
push
mov
popf
mov
negl
push
jp
dec
loop
aam
lea
loope
inc
pop
or
push
sbb
lahf
lods
loop
movsl
pop
or
sbb
mov
xor
imul
stc
in
filds
inc
xchg
push
shlb
int3
sarb
cld
xor
push
hlt
enter
jecxz
cmc
gs
push
int
and
push
subl
or
testl
daa
stos
dec
sub
inc
outsl
adcl
push
stc
xlat
sbb
mov
sbb
sub
rcrb
xchg
js
mov
lret
xchg
outsl
xchg
idiv
int3
or
aam
ret
scas
sub
xchg
ds
mov
rcrb
into
xor
sub
push
cs
inc
addl
or
cmpsb
es
int
jo
xchg
lock
mov
imul
pop
rcr
push
call
push
jg
xchg
pop
rorl
test
insb
pop
test
and
jge
cmpsl
fs
dec
mov
xchg
lods
mov
mov
jno
xor
sbb
arpl
lahf
sbb
dec
cmc
lea
test
xor
das
popf
lock
insl
mov
imul
outsb
and
push
daa
ficomps
mov
xchg
divl
das
pop
sbb
add
ss
sbb
mov
inc
rcrl
xchg
icebp
push
cmp
sbb
int3
push
adc
cs
jle
in
sub
mov
enter
jg
test
xlat
in
or
inc
daa
adc
int
xchg
pop
sub
push
xor
ficoms
stc
and
cmp
xchg
in
mov
aas
jbe
mov
and
add
popw
xchg
sbb
imul
or
lret
lds
popa
jns
push
jnp
push
cmp
std
int3
jbe
or
xchg
inc
xchg
mov
daa
les
lods
in
xchg
ret
cmpsl
push
push
je
imul
sub
mov
lcall
pop
fiadds
or
sbb
push
mov
dec
js
popf
lret
rol
pop
sahf
jbe
in
dec
pop
fcmove
fcoms
xor
pop
push
inc
jl
adc
mov
dec
or
test
pop
mov
sbb
mov
in
addr16
pop
mov
and
das
and
lds
push
je
xor
mulb
js
jae
jp
movsl
imul
es
and
mov
add
repnz
adc
clc
rcr
dec
push
aas
setne
xor
push
psrad
lahf
leave
cmc
insl
sub
notb
ret
sub
jnp
dec
mov
adc
inc
sbb
arpl
nop
test
adc
lcall
ret
aas
sub
push
add
out
mov
cmp
or
insb
xchg
mov
cmpl
mov
roll
mov
movsb
and
fmul
das
ret
cmp
subb
fistpll
call
ficoml
add
push
loope
push
push
xchg
out
fistps
lock
aad
cmpl
repz
mov
nop
xchg
xlat
xor
pop
mov
ljmp
fsts
mov
xor
aad
inc
jno
adc
or
mov
out
mov
loope
xor
out
or
jb
repnz
cmpsl
mov
dec
cmpsl
pop
mov
mov
loope
cmp
inc
inc
mov
pop
movsl
in
mov
or
mov
and
cs
mov
mov
xchg
cmp
lds
sbb
mov
cmp
dec
mov
jb
imul
jp
ret
add
scas
xor
mov
imul
or
hlt
scas
mov
pop
test
xchg
shlb
nop
jecxz
mov
icebp
lret
sub
add
hlt
shr
mov
test
aad
dec
or
call
inc
fisubrl
rol
cmpsl
pop
bound
xor
jae
into
clc
pop
mov
sbb
mov
stc
xchg
mov
and
push
fadds
inc
mov
inc
xchg
or
ret
or
loop
imul
cwtl
inc
dec
sub
inc
ds
sbb
xor
cmp
lods
cltd
dec
pusha
push
or
cmc
inc
pop
pop
lahf
pop
push
lea
push
cmp
imull
jmp
push
in
xchg
mov
lods
jns
outsb
or
repz
fwait
mov
and
pop
lret
cltd
mov
aaa
xchg
mov
ds
xor
or
jg
jnp
mov
stc
out
ljmp
inc
pusha
pop
jp
jo
or
cmp
cmp
add
cmp
test
pop
fnstsw
daa
pop
push
es
cmpsb
ficompl
or
fiadds
insl
mov
lods
fsub
push
xor
xchg
jl
or
push
mov
sub
aad
sbb
or
xchg
das
icebp
in
jl
mov
ljmp
loope
cmc
push
lret
mov
cmpsb
lock
stos
xor
inc
and
dec
test
data16
jne
es
cli
cmpsb
mov
fistps
push
mov
xchg
inc
call
and
sbb
fcoms
add
adc
repz
std
fisubl
lea
inc
fdivl
jo
into
mov
jp
mov
imul
addl
sbb
cmp
jl
xchg
icebp
jae
rcr
std
xor
pop
adc
sub
repz
test
mov
das
gs
sahf
out
sarb
fisttpl
test
sti
jno
fs
aas
fwait
cmp
sbb
pusha
jp
add
movsl
call
add
aaa
and
pop
outsl
fisubl
pop
inc
inc
mov
out
ja
out
and
call
pop
inc
xchg
mov
inc
es
xlat
cwtl
test
mov
stc
repnz
jns
jmp
lock
mov
lahf
xor
int3
push
std
test
pop
scas
iret
arpl
ljmp
rorb
cmp
loop
rcl
lcall
and
inc
xor
popa
inc
fldl
testb
insl
sub
mull
or
sub
sub
mov
iret
fdivrl
lods
add
std
xchg
xchg
xor
xor
sbb
mov
fists
ds
xor
xchg
jecxz
fildl
movsb
movsl
sbb
loop
jo,pt
cmp
fs
arpl
cmp
xchg
test
add
imul
data16
pusha
cmp
jne
pop
into
xchg
pushf
sti
scas
push
inc
cmc
adc
movsl
push
data16
adc
add
jns
jbe
add
dec
mov
push
dec
popa
jmp
mov
icebp
cmpsb
inc
lahf
sbb
ljmp
dec
repnz
or
cld
adc
popf
cmpsl
sub
test
enter
adc
jne
shld
in
add
dec
push
jle
mov
dec
pop
push
xchg
loop
dec
mov
fidivl
push
and
dec
imul
in
ja
lahf
and
ds
dec
sub
push
jmp
jbe
dec
cmp
cmc
stos
and
les
mov
sub
sbb
call
dec
or
push
lock
jg
adc
inc
add
sub
inc
inc
mov
xor
inc
push
inc
testb
fistpl
xor
aas
and
cmp
pop
or
mov
jecxz
mov
jp
or
mov
adc
dec
popa
adc
pop
bnd
in
xchg
mov
pop
outsl
sti
cs
mov
xchg
sub
fsubrs
fcmovbe
fs
stos
push
mov
sbb
push
sbb
pop
jae
sub
add
sub
fdivrs
inc
out
push
mov
push
sbb
jno
mov
cmpsb
add
ret
aaa
fstpt
dec
mov
mov
int3
lret
scas
jb
stos
jg
pop
inc
jmp
ret
jne
xor
out
mov
or
xchg
dec
push
aas
sub
hlt
mov
sub
xchg
mov
mov
into
sbb
mov
ficoml
pop
jno
sub
mov
fdivrs
cmp
or
jo
sub
pop
push
xchg
or
fs
jg
pop
sbb
mov
icebp
jge
mov
pop
mulb
xchg
stos
lds
jmp
mov
dec
sarb
or
or
int3
out
adc
insl
fwait
xor
sbb
dec
xchg
or
lds
adc
movsb
ret
iret
insb
ficoml
inc
sti
pop
inc
movl
push
ljmp
and
mov
or
rcrb
pop
hlt
dec
push
mov
daa
dec
fidivl
jns
add
jb
cmc
mov
pop
cmc
lret
mov
jae
sahf
inc
or
rcll
cmpb
leave
push
add
mov
mov
and
mov
push
ficompl
imul
push
sub
jl
mov
push
or
cmc
scas
pop
xchg
lods
mov
pop
pop
test
xchg
xor
incb
xchg
mov
xlat
jl
cmp
and
jmp
repnz
loopne
test
xchg
jns
xchg
mov
rcl
stos
pop
sbb
jmp
repz
xchg
into
arpl
push
inc
es
jge
pop
call
stc
rcr
or
xchg
push
cmc
lea
xor
fnsave
cmc
notb
mov
mov
push
mov
in
lret
jo
pop
sahf
testb
mov
testl
jbe
dec
hlt
outsl
aam
sbb
cmp
outsb
sub
sub
test
pop
fisttpl
sbb
jns
jle
ret
pop
or
push
pop
dec
insl
mov
pop
mov
push
push
push
jmp
jge
mov
aas
dec
daa
adc
inc
out
stc
mov
and
sub
dec
sbb
notb
fwait
pop
sbb
push
sub
jg
mov
fbstp
or
xchg
loop
or
lret
adc
jbe
movsb
in
pop
stc
sarb
test
rclb
nop
inc
loope
and
daa
rcr
jne
add
iret
pop
inc
xchg
xlat
inc
sbb
pop
ret
test
xchg
fisttps
lret
push
sti
outsl
fadd
cmpsb
adcl
rcr
jne
iret
xchg
andb
xor
stos
pop
test
ja
sub
in
sub
dec
mov
mov
jecxz
clc
or
mov
cmpsb
cmp
stos
inc
mov
cmp
inc
dec
add
test
jp
in
add
mov
iret
and
stc
jo
lock
mov
jmp
mov
sub
leave
lea
testl
out
rcrb
imul
xor
stos
add
or
cmpsl
mov
push
mov
in
dec
and
add
inc
in
popf
lahf
mov
popf
inc
pop
mov
jno
pop
add
mov
daa
imul
bound
les
scas
movsl
adc
push
out
dec
or
insb
js
dec
and
inc
cli
adc
sub
outsb
sbb
jg
sahf
jge
int
outsb
mov
test
cmp
mov
xchg
inc
sub
mov
daa
dec
sbb
adc
mov
sub
arpl
mov
insb
or
jl
mov
fimuls
and
xchg
pop
jo
sub
push
stc
fnstenv
push
jbe
mov
imul
int
in
add
movsb
xor
out
call
jmp
pop
and
adc
into
test
mov
push
jo
popf
cwtl
clc
sbb
jb
or
adc
xor
aam
sub
or
mov
and
dec
mov
add
lds
cmp
dec
or
icebp
in
lret
mov
std
fs
loopne
and
lcall
cmpsl
cmp
repnz
or
test
addl
cmp
or
subb
mov
mov
fwait
add
sub
pop
loope
inc
xchg
cmpsl
sbb
jne
or
pusha
xchg
mov
es
das
out
or
sahf
sub
lock
xlat
testl
jnp
pop
dec
and
es
mov
mov
in
add
push
mov
mov
xchg
pop
out
fs
push
add
add
insb
mov
dec
movsl
outsl
jns
fidivl
ret
dec
push
mov
clc
aad
je
cmp
sub
int3
scas
dec
mov
xor
fildl
xor
or
aaa
stc
icebp
xchg
mov
or
iret
fidivrs
mov
dec
insl
ret
adc
leave
movsb
dec
xchg
push
movntps
test
shlb
xor
jno
or
aaa
js
xchg
ljmp
push
in
fidivl
jl
inc
ds
pop
arpl
je
enter
imul
outsl
pop
mov
rolb
dec
mov
aam
lea
adc
cmp
or
jnp
mov
xor
add
mov
aaa
or
and
mov
out
mull
aaa
pop
test
inc
lea
mov
popa
pop
mov
and
scas
int
loopne
loop
addb
mov
cmc
mov
sub
cmp
outsl
pop
pusha
adc
pop
lret
cmp
pushf
cmp
aas
xchg
xchg
add
out
sti
mov
jno
repz
add
in
push
lret
scas
mov
dec
dec
pop
out
pushf
fldenv
cmp
push
push
outsl
mov
push
jge
push
das
jp
and
xchg
add
jb
mov
hlt
add
sub
repnz
pop
jb
mov
mov
stos
lea
mov
loopne
cli
mov
aaa
jp
insb
push
mov
aas
aaa
sbb
in
loopew
sbb
pop
push
adc
adc
btr
jno
ja
pushf
sub
test
shll
add
fnstsw
loopne
xchg
xchg
jecxz
mov
add
lret
jmp
call
and
data16
lret
ret
negb
pop
dec
lcall
int
xchg
or
popf
add
pop
jns
xor
cmpsb
cmp
mov
fiadds
mov
stos
fists
lea
pop
iret
dec
nop
iret
sub
cld
jmp
lahf
sub
jo
pop
shlb
lea
or
mov
fs
aad
xchg
ss
jnp
mov
jecxz
aam
xor
mov
add
sbb
adc
mov
sbb
or
fldenv
push
mov
add
xchg
mov
mov
dec
pop
mov
cmp
mov
xchg
inc
mov
push
cmp
dec
repz
mov
rorb
inc
test
loopne
jle
dec
aad
into
dec
xlat
inc
negl
push
inc
mov
jge
mov
out
lret
movsb
and
or
xor
sbb
mov
popf
push
in
mov
cmc
sti
or
dec
sub
lahf
mov
or
jo
call
imul
xchg
fmull
xor
aas
scas
mov
leave
xchg
sbb
mov
bound
push
jae
out
cmp
icebp
inc
and
iret
sub
pop
mov
jecxz
add
in
inc
adc
test
jg
sete
push
lods
orb
add
outsb
lods
rcrb
and
add
pushl
stos
test
lcall
je
mov
cmpsl
fwait
inc
cmp
push
nop
add
imul
mov
or
mov
lock
push
inc
jno
sahf
jbe
xchg
xchg
test
add
movswl
mov
adc
shll
mov
inc
xchg
insb
mov
movsb
lods
and
xlat
sub
cmp
imull
test
les
pop
shrl
leave
cmpsb
in
cmp
out
idivb
adc
int3
rorl
cmp
pop
pop
cmp
stos
add
sub
inc
rcl
int3
rcll
dec
out
cli
pop
sbb
inc
aam
mov
cmpsb
rcl
sbb
jmp
jno
hlt
push
bound
fcmove
pushf
push
xor
mov
xor
imul
cmpsb
cmpsl
adc
sbb
jb
ja
sahf
subl
dec
push
jb
out
mov
adc
orb
aas
xor
mov
mov
adc
or
xchg
xor
sub
adc
lods
in
pop
push
lock
cmp
inc
rep
insb
pop
dec
mov
and
mov
and
mov
sub
daa
sub
dec
push
xchg
cwtl
add
out
mov
ss
lods
icebp
mov
dec
faddl
mov
mov
sti
inc
je
cltd
imul
ja
sbb
outsb
fwait
lcall
xchg
pop
push
dec
aad
call
in
arpl
lds
ljmp
int3
mov
mov
push
and
push
lahf
je
or
jo
repz
inc
mov
sti
sbb
xchg
cmp
in
pop
or
push
cmp
repz
xchg
mov
dec
rcr
outsb
insb
std
xchg
mov
jp
pop
pop
mov
ret
mov
cwtl
adc
inc
and
repz
mov
mov
cli
xor
inc
adc
push
jmp
in
imul
xor
mov
inc
popl
sbb
arpl
jno
cli
sbb
out
lcall
xor
popl
push
pop
test
insb
sti
sbb
arpl
gs
pop
inc
cmp
loopne
mov
jg
push
pushf
and
movsl
test
mov
enter
jle
in
mov
pop
add
or
mov
mov
adc
adc
clc
pop
dec
ret
outsb
cmp
push
sbb
rol
sbb
ror
mov
aad
pop
jl
mov
inc
repz
jns
mov
sbb
xchg
sbb
call
jns
fdivrp
sbb
mov
imul
cmp
or
lds
lret
stos
or
push
mov
dec
insl
icebp
xchg
in
add
divb
int3
shrb
into
cmp
xor
roll
in
pop
adc
stc
xor
push
xchg
xor
and
test
jne
test
sbb
mov
rorl
cmc
andl
adc
sti
into
outsl
mov
cwtl
jecxz
scas
cmp
push
rolb
fisubrl
and
loope
mov
pop
push
and
sub
mov
out
aaa
mov
push
inc
stc
bound
sub
push
jnp
inc
mov
mov
xor
out
add
popa
pop
dec
mov
cmp
out
data16
clc
fimull
into
aas
mov
mov
sub
scas
mov
push
frndint
nop
xor
es
cmpsl
dec
xor
pop
sbb
push
mov
nop
push
fdivl
sub
xor
call
jecxz
scas
decl
mov
popa
or
es
std
orl
and
cld
faddl
in
loopne
lcall
lods
push
scas
or
mov
pop
jmp
pop
movsw
sbb
mov
repz
jle
mov
cmp
mov
or
clc
add
cltd
or
cwtl
inc
mov
push
rorl
inc
add
dec
and
ds
aaa
push
ja
xchg
popa
iret
lret
rolb
mov
jg
imul
arpl
sar
js
cs
cmp
adc
or
lds
mov
rcll
xchg
xchg
add
pusha
ss
cs
fiaddl
leave
lret
add
and
adc
daa
clc
das
cmp
push
add
xor
test
aaa
test
dec
or
pop
stos
lret
pop
mov
or
popl
aas
js
fisttpl
push
iret
xor
mov
jl
outsb
outsl
hlt
mov
outsl
fwait
mov
sub
mov
popa
inc
pop
mov
aam
pop
inc
push
inc
into
pop
and
scas
pusha
sahf
dec
xor
pop
mov
inc
nop
jae
inc
jecxz
dec
push
mov
dec
inc
outsl
push
es
mov
pop
xchg
int3
es
lret
ficoml
push
cwtl
xchg
enter
sbb
xor
shrb
test
imul
and
aas
mov
jmp
outsb
jge
cmp
cmc
mov
pop
mov
movsb
loope
std
bound
and
pop
fdivs
out
bound
hlt
rorl
add
es
call
xchg
icebp
repz
sbb
mov
and
ret
jb
pop
dec
jbe
and
das
ds
mov
in
mov
xor
and
loop
lcall
stos
ljmp
shr
or
mov
xchg
and
cmp
add
rol
lret
fwait
dec
insl
ss
cmpsb
sub
jno
mov
cmp
push
cmp
jnp
sbb
xchg
inc
arpl
js
sarb
inc
movsl
js
add
mov
xchg
ljmp
and
addr16
and
sub
insb
add
push
mov
inc
cmpsl
cmp
lcall
test
cli
leave
aad
add
dec
mov
pop
filds
adc
pop
or
inc
mov
and
cmp
push
iret
movb
push
add
add
pop
scas
ja
pop
fisttpll
insl
lret
cmp
sbb
shl
add
mov
add
xor
scas
pop
clc
lcall
push
or
mov
xchg
lahf
into
cmpsl
dec
insb
sub
xlat
push
xor
aaa
das
jae
jmp
inc
test
lock
cmpsl
jl
cwtl
js
ss
lahf
lods
repz
lcall
cmp
cmovne
pop
outsl
fiaddl
xchg
cmpsb
loopne
in
shll
dec
je
xor
inc
les
data16
sub
sub
popa
mov
adc
insl
cld
jne
je
dec
gs
fcomi
push
shll
push
pop
leave
ja
cmc
flds
cmp
xor
in
rol
and
repz
call
xor
repnz
scas
lret
xor
mov
daa
insl
and
fcmovne
inc
cmp
add
mov
jp
push
xor
repnz
mov
rorl
jnp
sub
fidivl
jge
push
xor
into
js
bound
ret
push
dec
push
add
mov
sbb
push
ret
cmc
jo
push
out
aam
fucomi
ficoml
and
cmp
inc
insl
pop
and
jns
pop
xchg
mov
out
jnp
mov
popf
pop
jl
stos
scas
adc
cmc
mov
bound
imul
jae
out
adc
jae
jle
jmp
inc
jne
jge
cmp
cmc
adc
or
lea
rcll
and
and
ret
frstor
fstl
pop
in
outsl
mov
stos
adc
mov
ret
pop
test
jb
xor
sub
cmp
pop
inc
push
dec
cs
adc
pop
fisubrs
inc
sbb
outsb
mov
inc
mov
imul
out
mov
int3
cmc
addr16
mov
sbb
hlt
mov
ds
out
mov
inc
push
jle
pop
rorb
pop
sub
fiadds
fcoms
fadd
mov
pop
pop
cs
mov
jmp
and
ror
push
fidivl
loop
push
cmc
lcall
push
shl
shl
rcrl
test
push
inc
jbe
push
cli
pop
mov
iret
imul
popa
mov
fbstp
push
icebp
ss
xchg
xorl
xor
lcall
mov
out
adc
int3
loope
mov
or
xor
dec
sbb
xchg
xlat
inc
push
ljmp
decb
cmp
xor
pop
aam
orl
mov
xchg
lds
xchg
mov
push
mov
add
jmp
js
jecxz
mov
nop
xor
inc
lahf
ficoms
xor
pop
test
cmp
ret
mov
or
imul
jns
mov
mov
push
incb
cmp
leave
inc
cmpsl
aad
cmpsl
les
xchg
lods
popf
mov
push
dec
sbb
jo
int3
lret
int
shld
mov
in
mov
xor
ss
pop
sub
push
in
ja
fidivs
imul
addr16
cltd
popf
sbb
mov
mov
pop
lea
and
je
aas
into
dec
jmp
inc
and
stc
repz
sbb
test
xorl
xchg
repnz
sti
and
and
inc
call
in
cmp
pop
xchg
add
ss
dec
sbb
js
xchg
ds
mov
sbb
pop
push
jnp
test
and
jge
insl
mulb
dec
xchg
xchg
popf
in
adc
ja
lret
jge
push
dec
jmp
mov
scas
xor
in
out
movsl
test
add
push
test
mov
add
loopne
aas
xor
das
push
mov
xlat
fisubrs
dec
cmpsb
pop
xor
lret
cmc
xor
sbb
sub
test
dec
add
hlt
lret
cld
stc
pop
fwait
outsl
inc
push
test
add
or
es
mov
ret
and
in
vminsd
cmp
clc
cmp
in
pusha
enter
imul
push
leave
xchg
cltd
mov
subb
rcrl
mov
ds
movsb
push
jae
test
dec
lods
cmp
in
hlt
lahf
test
mov
push
lahf
jnp
dec
cmp
iret
jo
iret
inc
lea
in
and
sti
push
popf
rorb
adcb
add
sub
cmp
xor
jno
test
inc
fidivl
add
adc
stc
outsl
rcrl
push
jg
sub
shll
and
cmp
in
mov
push
mov
push
mov
pop
packuswb
xchg
add
dec
sbb
mov
pusha
mov
mov
dec
jmp
leave
jo
fisubrs
pop
cwtl
mov
mov
jbe
xor
imul
popl
test
sbb
mov
xor
and
jp
sti
cmp
repz
imul
fnstcw
xor
pop
ja
and
stos
and
enter
mov
lds
sbb
nop
fisubrl
mov
sub
push
push
in
inc
test
pushf
cli
mov
pop
mov
sub
pop
test
inc
pop
mov
sub
mov
dec
fucomi
cmp
xchg
push
test
cmc
xchg
in
fildl
xchg
mov
mov
sub
dec
xchg
mov
sub
push
imul
mov
or
aam
lods
int3
daa
mov
xchg
mov
mov
mov
repnz
sub
pop
out
xor
push
pop
push
mov
push
clc
mov
icebp
push
arpl
or
sub
js
data16
xchg
pop
addr16
ss
add
sti
cmp
cwtl
xchg
or
movsl
and
jns
fcmove
xor
dec
je
ret
jl
jb
jae
and
aad
imul
ds
scas
jns
repz
paddw
cli
mov
pop
daa
push
dec
testb
pop
hlt
jmp
mov
ljmp
cmp
sbb
mov
jl
push
inc
rol
pop
inc
sbb
sub
push
push
sahf
vsqrtpd
inc
cmpsb
fldenv
fs
inc
dec
stc
push
push
and
cmp
fstps
adc
and
mov
rorl
jmp
aaa
adc
sbbl
inc
mov
je
mov
mov
aam
ficomps
push
stc
shrl
test
sbb
jle
mov
dec
xchg
pop
enter
and
mov
push
xchg
fdivrs
int
jnp
sbb
sahf
xchg
je
ljmp
sbb
add
test
pop
jmp
imul
dec
jne
mov
inc
mov
push
add
notl
sti
mov
addr16
xor
cli
cmp
scas
in
push
fwait
jo
pminsw
push
fbld
or
xchg
mov
add
imul
mov
pop
push
pop
push
cmp
mov
xrelease
mov
insb
dec
dec
in
movsl
lcall
fsts
inc
push
and
jmp
leave
cmp
sub
cmp
aas
push
rorb
inc
lods
out
mov
cmp
mov
mov
ds
mov
push
cmp
mov
dec
sbb
xchg
outsb
test
test
outsl
mov
fbstp
rolb
xchg
cltd
or
aad
movsb
cmp
lret
rcll
mov
sub
mov
movsb
insb
inc
cmp
cli
jl
and
clc
jmp
jae
push
aam
inc
icebp
fisttpl
push
std
jo
and
rorl
jae
mov
xor
mov
enter
xor
call
jge
push
xor
clc
inc
ja
mov
mov
xchg
sahf
xor
subb
negl
mov
lods
cmpsl
frstor
pusha
or
push
mov
fnstsw
mov
cmp
sub
inc
pop
adc
push
pop
test
sbb
imul
xlat
lods
pop
jmp
leave
addr16
mov
xor
xor
inc
aas
je
data16
cmp
mov
cs
out
sbb
push
hlt
jb
pop
rorb
push
sbb
and
add
int
cmp
inc
aam
aas
pusha
inc
mov
jnp
pop
sub
sub
es
insb
xchg
mov
daa
mov
xchg
mov
or
es
push
orb
mov
and
outsb
xchg
adcb
mov
add
ds
and
sbb
cmp
pop
pop
cs
jge
scas
xchg
cmp
jge
popa
ret
repnz
dec
lret
ljmp
fbld
ja
push
cmp
fs
enter
in
pop
hlt
cwtl
mov
imul
fcoml
stc
adc
pop
dec
jae
mov
std
xor
jno
lea
out
popa
add
mov
test
xor
xchg
pusha
test
and
add
repnz
jae
clc
sub
shll
loope
mov
test
pop
pusha
cmp
addr16
call
sbb
xor
stos
out
rcrb
ret
mov
test
pop
movsb
or
mov
hlt
mov
or
test
insl
loopne
sbb
sbb
imul
push
add
pop
push
mov
inc
adc
cmpsb
fld
lods
sti
lods
mov
mov
mov
mov
add
in
cli
mov
jmp
pop
xchg
movsb
stos
and
mov
add
sub
jp
mov
cltd
cmp
or
xchg
mov
xchg
jmp
pop
jbe
aas
and
adc
js
mov
adc
ljmp
or
pop
repz
fildll
fistps
push
mov
add
jbe
or
ficoms
sti
lea
cli
lds
jmp
or
sbb
sub
mov
dec
push
mov
cmp
iret
lock
xorb
mov
insl
xchg
inc
cmp
shr
inc
clc
hlt
push
int
dec
in
dec
adc
mov
add
out
mov
rcll
mov
cltd
inc
dec
shrl
xor
mov
xchg
cwtl
js
out
cmp
subb
cmp
js
inc
inc
mov
movb
push
jns
mov
mov
push
push
int3
adc
mov
pop
pop
lods
xchg
pop
orb
subb
xchg
cmc
mov
or
xor
sub
push
and
je
cmc
into
int3
cmpsb
out
imull
enter
lods
outsl
jg
outsl
inc
jno
dec
and
dec
sar
xchg
ja
je
loopne
imul
gs
outsl
dec
mov
adc
jo
scas
dec
or
stos
scas
sbb
mov
ljmp
mov
aas
xchg
pop
out
call
jle
je
or
aam
sbb
enter
cwtl
sbb
mov
andl
jmp
or
test
cmp
ljmp
int3
pop
jp
xor
not
fstpt
outsb
dec
insl
xchg
xor
push
loope
imul
lcall
push
out
scas
fstpt
jns
movsl
pushl
bound
cmpsl
outsl
int
fldenv
daa
or
jecxz
push
mov
mov
xchg
push
or
mov
cmp
jg
insb
jbe
sub
xchg
mov
add
loope
mov
imul
pop
pop
mov
dec
pop
pop
ja
fsubrp
sti
and
xor
cmp
add
sbb
or
pmulhw
dec
jo
adc
out
inc
mov
lds
mov
sub
outsb
imul
sub
jp
cwtl
adc
fadds
inc
sub
mov
icebp
mov
fidivrl
dec
ffreep
xor
jns
mov
imul
pop
js
pushf
pop
popa
xor
add
pop
xchg
lock
in
pushf
adc
sub
or
pop
cmp
dec
pop
add
in
jne
mov
jne
out
repnz
mov
pop
imull
and
pop
sbb
push
pop
xor
aaa
adcb
rol
cmpsb
jg
fdivrl
push
lret
cmp
sahf
cmp
jno
push
popf
mov
cmp
mov
rcll
push
lea
cmp
xchg
or
jb
mov
bound
push
mov
push
or
insl
addb
fiaddl
leave
scas
cmp
and
pusha
xorl
insb
mov
jg
mov
pusha
or
or
mov
mov
jmp
adc
adc
cmc
mov
pusha
pop
dec
cmpsb
mov
or
jne
clc
cmp
and
cmpsb
jp
lret
loopne
push
pop
dec
mov
in
aad
scas
rol
les
or
pop
add
add
stc
js
sbb
xchg
ss
cmp
adc
pusha
lds
inc
clc
push
insl
mov
outsl
jmp
movsb
dec
dec
jmp
add
lods
bound
hlt
push
xchg
popa
int
lret
insl
mov
inc
repnz
xor
pop
pop
push
fidivs
mov
pop
adc
push
cld
mov
xchg
jg
inc
xlat
mov
jnp
pop
and
mov
popf
and
jge
cmp
jecxz
mov
mov
jg
sub
mov
jns
inc
ja
push
in
add
add
cld
or
lret
aaa
cmp
cmp
ret
das
outsb
mov
js
out
bnd
in
pop
loop
fildl
adc
mov
in
scas
je
addr16
int3
insb
or
fwait
addr16
and
push
cli
lds
popf
add
aam
sub
js
dec
mov
mov
std
xor
cs
rcl
xchg
push
xchg
in
repnz
mov
inc
fistpl
negl
inc
je
push
or
loopne
addb
out
mov
push
rolb
dec
cs
mov
mov
jecxz
es
pop
xchg
aaa
mov
mov
push
cmpsb
mov
hlt
dec
aas
or
cs
dec
xor
inc
test
pop
mov
mov
ja
orl
xor
jmp
add
mov
inc
ss
int
ret
push
sbb
arpl
ljmp
pop
sbb
add
cmp
xchg
std
inc
sub
xor
mov
loopne
js
mov
dec
or
int3
pop
push
push
add
nop
mov
ja
jbe
adc
adc
sub
push
adc
orl
add
stc
je
out
in
dec
lcall
mov
xchg
sarl
pop
and
movsb
mov
stos
xchg
sarl
in
fstpl
insl
aaa
dec
divps
sub
mov
int
out
ja
sti
xchg
aam
adc
test
je
fwait
out
pusha
popa
inc
shlb
lcall
xchg
sub
fisubrl
imul
lret
imul
mov
inc
jp
movsl
add
sub
out
ret
adc
sahf
daa
cmpsb
xor
repnz
cmc
inc
addr16
pop
inc
pop
or
sahf
pop
subb
mov
mov
mov
daa
cmp
and
nop
call
stc
das
push
ja
sub
xchg
inc
mov
dec
fwait
test
icebp
push
js
repnz
shl
dec
mov
dec
jecxz
or
jno
xchg
shll
int3
sub
adc
and
test
rolb
es
flds
or
shlb
cwtl
add
movsl
sbb
dec
into
andl
mov
pop
sub
mov
adc
and
pushf
jno
aad
jae
mov
insl
dec
mov
xchg
fsqrt
dec
arpl
and
jns
xchg
xchg
test
jmp
inc
pop
fsubl
dec
dec
pop
rcll
and
adc
sbb
test
stos
popl
insl
mov
jnp
mov
into
xchg
jnp
mov
lods
movsb
sub
les
dec
dec
out
aaa
orl
mov
xchg
leave
ds
add
loop
repz
push
stos
cmc
mov
neg
int
mov
scas
cmp
and
rclb
fs
cli
mov
cmpsb
loopne
dec
fcmovnu
scas
scas
sbb
imul
jle
movsw
mov
cltd
mov
jecxz
shll
sub
outsb
xor
cmp
xchg
lcall
subb
out
outsl
movsb
call
xor
pop
jne
inc
add
jmp
adc
ret
imul
mov
adc
xchg
cli
jno
pop
xor
outsb
sbb
ret
add
ret
mov
leave
call
jge
das
lods
adc
loopne
out
ja
mov
imul
mov
adc
sbb
push
bound
sbb
dec
and
adc
outsb
jnp
and
call
mov
icebp
ss
sub
fsubrs
mov
sub
adc
loope
arpl
add
push
das
pop
cmp
push
jne
fsub
jbe
pusha
inc
or
adc
lea
xor
push
cltd
push
add
mov
xlat
or
incb
mov
or
sbb
gs
mov
in
or
jns
das
sar
ja
testb
jl
daa
xchg
lock
mov
adc
fs
popa
addl
cmc
jp
mov
inc
into
in
mov
mov
xchg
fwait
je
ja
mov
out
dec
pop
test
mov
into
loop
push
fsubs
add
sbbb
cmp
add
cld
sahf
fimull
push
dec
push
xor
xor
fsubs
cmp
imul
fwait
jle
repnz
fndisi(8087
mov
and
jb
sub
ds
leave
xchg
mov
cmc
mov
mov
push
pop
jge
inc
lods
loope
hlt
in
popa
xchg
sub
dec
xor
test
dec
jmp
push
nop
pop
inc
mov
xchg
out
in
push
sar
les
nop
ljmp
sbb
push
xor
incl
int
cltd
adc
mov
sahf
mov
mov
jmp
divb
sub
xchg
pop
xlat
int
es
leave
ja
add
pop
aad
into
xchg
cld
xchg
rcrl
js
loope
das
outsb
inc
mov
out
push
bound
jmp
rorb
sahf
inc
or
test
jl
popa
add
push
sub
std
cmp
xor
pop
and
lods
enter
andb
fdivr
rorb
sbb
add
pop
sti
jbe
inc
and
sub
inc
adc
cld
test
gs
dec
xchg
push
pop
out
in
xchg
repz
movq
int3
insb
pusha
lret
mov
bound
cld
movsl
stc
repz
pop
mov
rcl
in
xchg
mov
clc
adc
cmc
adcb
loope
rcrb
lds
test
ret
pop
mov
pusha
mov
xorps
fisubrl
nop
mov
and
test
jmp
push
cld
jl
dec
aaa
fwait
ja
scas
cwtl
adc
xor
jb,pt
rcl
and
or
divl
jbe
sub
jmp
pusha
mov
inc
or
out
cbtw
pusha
test
aam
nop
test
out
adc
dec
or
sahf
add
stc
adc
aaa
push
lds
nop
icebp
pop
fldl
add
mov
cwtl
push
aad
lds
mov
adc
push
loope
fstpl
dec
fs
inc
add
pop
movl
mov
or
xchg
jp
adc
adc
mov
fildll
adc
rclb
in
jns
fwait
outsl
jne
push
and
xchg
int
sub
rol
pop
inc
aaa
mov
xchg
fwait
in
stos
enter
lcall
push
dec
mov
clc
mov
enter
sbbl
sbb
js
inc
sub
sbb
fistl
dec
daa
jbe
loopne
pop
push
cmc
addl
or
sar
and
add
loope
cmp
roll
dec
sbb
sub
xchg
mov
roll
push
out
mov
sbb
stos
dec
in
inc
js
notl
adc
test
js
in
cmp
mov
ss
outsb
jl
cmp
pop
add
vorps
movsl
sahf
pop
xchg
mov
scas
push
push
call
xchg
adc
mov
xchg
ljmp
imul
pop
sub
fisubrs
xchg
ljmp
pusha
xchg
scas
scas
mov
jno
mov
aam
cmp
adc
adc
lahf
aaa
xchg
int3
cld
sarl
jnp
dec
xor
and
adc
out
fnstsw
mov
lret
and
loopne
push
mov
ret
fisttps
pop
mov
enter
mov
xor
test
or
add
pop
mov
mov
ss
xchg
push
sar
shll
rol
loopne
and
xor
lods
dec
adc
xchg
pop
jbe
xor
pop
push
enter
test
push
sbb
movb
cmp
lods
movsb
stos
sbb
aam
mov
xchg
fcoms
pop
inc
repnz
pop
je
out
cmp
scas
stc
pop
inc
pop
je
sbb
sub
daa
in
or
jnp
add
push
sar
mov
frstor
xor
xchg
mov
outsb
in
in
adc
jl
fisubl
cltd
lret
imul
inc
test
fxch
xor
inc
imul
lock
lds
out
iret
ja
inc
pop
call
pop
incb
xor
sub
add
call
dec
out
es
outsl
add
mov
add
mov
sbb
pop
sub
push
lods
push
pushf
jmp
mov
and
xchg
xchg
bound
mov
or
sbb
or
adc
push
or
xchg
mov
cmp
jg
cmpsl
inc
aas
lret
sbb
in
mov
insl
cmp
sbb
in
or
int
push
sbbb
cmpsl
mov
add
test
aad
pop
int3
mulb
js
cli
adc
inc
jl
and
push
leave
outsb
push
into
addr16
incb
jb
sbb
andl
pop
loope
and
iret
pushf
add
mov
pop
dec
loope
cmp
xchg
adc
dec
add
roll
or
out
cmp
xor
repz
sti
jo
xchg
xchg
cwtl
mov
push
das
inc
mov
aas
int3
cmp
xor
daa
or
mov
or
int3
push
xchg
leave
nop
mov
adc
inc
xchg
jbe
ljmp
arpl
add
int3
lahf
notl
jo
outsb
hlt
cmp
mov
jnp
cmc
push
cltd
je
pusha
jae
loope
dec
sbb
add
inc
fs
cmp
pop
jae
mov
jnp
pop
andb
mov
das
push
cmp
gs
xchg
xorb
adc
stc
leave
loop
jecxz
mov
add
mov
pop
add
insb
add
or
mov
jle
in
mov
outsb
shr
mov
mov
fs
adc
das
out
movsb
mov
int3
mov
sti
fucomip
inc
mov
aam
dec
mov
push
arpl
push
or
mov
inc
push
sub
mov
std
popa
test
xorl
mov
sbb
rorb
imul
aaa
test
push
xlat
aas
pop
sti
push
jle
or
push
jb
rcl
subl
pop
popa
movsl
js
dec
pop
out
dec
out
lock
data16
adc
or
dec
fwait
xchg
jne
pushf
jnp
pop
mov
bnd
loope
inc
scas
fnstenv
das
lds
sbbb
scas
inc
xchg
cld
xchg
dec
jo
in
push
jnp
lods
push
cmp
pop
inc
push
ds
fadds
sub
out
popf
mov
clc
cmp
scas
cs
jae
les
cmpsb
jp
and
fwait
shlb
arpl
sbb
xchg
lods
aam
leave
scas
call
mov
jae
cmp
mov
sub
jp
cmp
lods
push
add
fidivl
movsl
inc
push
loop
fisubl
cmpsl
jb
inc
hlt
add
ret
cmp
jne
int
mov
and
fsub
sbb
cwtl
repnz
jb
pop
pop
insb
arpl
sbb
pop
inc
mov
negb
or
sub
push
pop
jle
bound
outsl
jne
rorb
push
mov
cld
negb
add
sbb
lret
xchg
sbb
or
jne
jnp
mov
or
fstpl
and
lahf
push
pop
mov
push
push
add
sub
or
adc
add
sub
fnstenv
or
mov
push
xchg
lret
adc
mov
xchg
movsl
cltd
xor
sbb
cmp
cmc
jnp
frstor
stc
stos
dec
imul
fiaddl
insb
xchg
dec
shl
pop
imul
fsubrs
rcrb
fcomip
loop
call
jae
cltd
repnz
mov
jmp
and
xchg
pop
imul
add
inc
lret
das
mov
gs
fcmovnu
jns
scas
stos
push
xchg
push
mov
and
mov
testb
fstps
push
fadds
mov
xor
xchg
sub
cwtl
xor
push
js
pop
and
decb
or
es
shr
inc
fiadds
sub
mov
jbe
push
adc
notb
adc
mov
gs
clc
inc
xchg
imul
xorb
jnp
xchg
subb
cli
adc
adc
inc
arpl
dec
xchg
add
add
dec
mov
jg
fs
cmp
push
mov
ret
loopne
push
xchg
mov
rcrl
mov
pop
cmp
and
ret
xchg
sub
cmpsl
mov
js
add
idivl
cmp
das
insb
cmp
pop
xor
jb
ja
ret
add
dec
push
fxch
push
je
bound
mov
adc
adc
outsl
add
addr16
push
xor
jbe
and
mov
mov
or
fnstsw
cmp
es
sahf
rclb
fsts
aam
pop
out
push
aaa
shlb
cwtl
cmp
loop
mov
mov
mov
mov
mov
fdivs
loope
mov
nop
scas
pop
leave
das
loope
mov
sub
fdivrl
cmp
loop
push
fwait
dec
das
push
out
mov
loopne
dec
add
out
iret
test
rcrb
fxch
testb
out
inc
or
das
out
jb
subl
xchg
fwait
scas
das
mov
xchg
mov
enter
mov
jo
pushf
mov
cld
stos
xchg
jb
sbb
and
and
fdivl
or
cmp
mov
aas
arpl
pop
adc
pop
lods
bound
in
pop
dec
imul
insb
sub
jae
fdivrs
sbb
in
jae
mov
leave
cmp
mov
sbb
int
aaa
push
dec
inc
repz
mov
ss
adc
or
xor
cli
lahf
insl
inc
xchg
mov
dec
popa
scas
rcll
fcmovnbe
ret
fstps
test
and
cmc
inc
negb
pop
mov
pushf
adc
push
inc
dec
jle
dec
mov
movsl
mov
jecxz
or
push
pop
xor
lock
shlb
lret
mov
enter
das
inc
push
jns
add
sub
xchg
pop
arpl
sub
mov
jns
mov
hlt
aaa
xchg
xor
adc
mov
adc
pop
andl
movsl
and
inc
lret
cltd
dec
mov
test
add
imul
add
and
sbb
nop
jnp
push
push
popf
rclb
mov
sbb
rclb
int3
outsl
ret
movsl
stos
sarl
add
mov
mov
mov
popf
xchg
push
sbb
sbb
push
mov
jb
xor
cmp
subl
cltd
test
push
inc
std
int
inc
shll
cmp
push
insb
push
xchg
insb
cltd
cld
xlat
inc
xchg
xchg
negl
sub
xorl
xor
aam
sub
call
push
xchg
hlt
or
insb
lahf
stc
dec
lds
insb
sub
xor
lret
in
inc
jp
pop
dec
pop
imul
in
push
mov
fwait
shrl
lret
sbb
fdivr
lea
or
fwait
mov
rorb
or
xchg
mov
insl
les
test
std
sub
or
mov
dec
or
inc
jno
pusha
xchg
pop
jo
sbb
push
push
dec
jne
stos
stos
repz
iret
lds
enter
ret
or
outsl
xchg
or
adc
cmp
in
cld
jne
mov
mov
fmulp
mov
sub
test
xor
repz
lcall
repz
xchg
mov
in
mov
cld
push
adcl
scas
cld
cltd
lds
test
cmp
jg
sahf
sub
lea
and
test
test
pop
mov
cmp
push
sub
cmpsl
bndldx
cltd
mov
mov
add
dec
jp
hlt
cmp
sub
lods
push
xchg
and
addr16
mov
movsb
lret
jg
aad
cmp
bnd
push
mov
and
xchg
cmp
addr16
dec
pop
popf
pop
cmp
mov
mov
fwait
gs
and
xchg
jo
cltd
jg
call
ret
mov
cwtl
and
icebp
inc
and
bound
popa
dec
repz
pushf
outsb
aad
push
roll
xchg
outsb
imul
and
adc
adc
dec
and
sub
movsb
sbb
in
subb
jns
pop
je
stos
es
ds
pop
or
mov
pop
xor
xchg
add
cmp
divb
or
in
push
cmp
in
add
rolb
or
xor
mov
lds
add
cltd
adc
outsl
lods
shl
leave
inc
cwtl
mov
xchg
sbb
jp
sub
sarb
dec
cmp
mov
imul
test
ret
push
les
hlt
inc
dec
dec
lock
and
push
mov
xchg
mov
or
mov
sub
popf
mov
fsts
scas
je
ljmp
mov
or
add
or
cmp
ret
pop
nop
popf
addb
mov
ljmp
pop
or
inc
and
mov
sub
mov
rolb
shl
fiaddl
mov
cmp
mov
lods
lock
pushf
les
test
cmp
xor
or
dec
dec
xchg
lock
das
in
mov
xor
rolb
sbb
std
call
jmp
sbb
icebp
add
aaa
mov
fimuls
mov
loopne
mov
jo
mov
ret
dec
insl
inc
push
in
repnz
sbb
xor
mov
mov
mov
jmp
xchg
inc
test
or
jnp
jnp
mov
lret
cld
loopne
jb
test
fsubp
and
mov
addr16
mov
data16
or
and
inc
aad
outsb
loopne
shr
popaw
push
inc
push
dec
sarl
sbb
mov
adc
and
ja
pop
and
xor
dec
arpl
push
cli
push
rorb
xchg
inc
jb
shlb
mov
ljmp
loope
adc
cltd
adc
es
mov
mov
push
lds
int3
lods
imul
mov
sbb
ja
dec
xor
and
enter
shl
aaa
add
xchg
repz
cmp
cli
xlat
test
out
mov
pmaxsw
jecxz
lret
fnstenv
rcrl
lods
sub
je
and
sub
jno
mov
jp
adc
in
jg
push
insb
pop
mov
idivl
sbb
shll
das
mov
sbb
fisubs
cmp
clc
mov
jb
dec
push
int3
xor
mull
addr16
inc
pop
ljmp
mov
in
andl
lret
fsub
dec
pop
cmc
ss
movsb
jp
sbb
xor
das
daa
inc
xchg
jb
movsl
dec
jmp
mov
and
orb
scas
push
dec
inc
dec
jne
mov
cmp
xchg
test
or
inc
lock
jecxz
std
inc
movb
mov
mov
lret
lahf
in
push
mov
sub
or
movsl
mov
sarb
cltd
nop
inc
add
ret
xor
ds
das
xchg
movhps
xchg
add
sti
fmuls
adc
aas
stc
repz
pop
push
lock
sbb
hlt
imul
mov
lods
lret
mov
outsb
cli
in
test
mov
mov
dec
inc
ret
gs
in
jb
push
andl
fdiv
jmp
hlt
xor
jb
pushf
clc
inc
imul
sub
sbb
mov
pop
mov
and
jb
jne
fmull
mov
int
mov
dec
outsb
repnz
hlt
mov
lret
xlat
mov
shl
xor
xchg
lret
xchg
xchg
lods
inc
push
xchg
nop
sub
sub
clc
xor
outsl
ja
jno
jge
test
sub
add
mov
add
mov
sbb
jne
lret
mov
data16
ror
dec
inc
add
jg
push
add
cltd
sub
jecxz
xchg
inc
sub
xchg
fisubrl
jno
mov
ss
int3
inc
iret
lods
mov
sub
or
push
mov
cmpsb
xchg
insb
ret
adc
jmp
and
sub
xchg
test
push
push
test
xor
xchg
hlt
shrb
xchg
divl
bound
add
pop
mov
push
daa
insb
cmp
push
jmp
add
jmp
outsb
or
aaa
addl
jmp
push
add
popa
sbb
mov
ficompl
dec
lods
repz
movsl
imull
mov
push
inc
cmp
pop
push
test
dec
fsubrl
fnstcw
cmpb
adc
repz
nop
jl
xor
ret
sub
js
xor
js
out
pop
mov
sti
scas
loope
xchg
and
sub
aaa
or
mov
push
lock
mov
imul
add
cli
sbb
dec
lds
dec
jb
std
cld
lret
iret
push
stc
pop
call
std
in
loope
mov
mov
je
std
inc
sub
pushf
cli
lret
jl
inc
push
push
xchg
adc
in
leave
mov
inc
sub
dec
add
aas
fldl
mov
loopne
xor
out
dec
or
inc
cs
push
fsubrl
lock
mov
cmp
inc
mov
push
xlat
sbb
ljmp
pop
int3
pop
clc
sub
mov
add
jns
shrl
push
inc
lret
xor
pop
inc
popf
in
in
cmp
xor
push
mov
xchg
test
sbbl
cmp
xchg
lahf
push
sub
loope
inc
mov
out
enter
out
lcall
test
stos
in
or
filds
sub
popf
mov
test
or
xor
add
jl
mov
cmpsb
fs
iret
xor
push
sti
repnz
jg
mov
scas
ret
mov
pop
jge
movsb
popf
cmp
sarl
dec
mov
pusha
add
sbb
jg
out
adc
jl
mov
into
cld
outsl
xchg
fisttpl
fistl
ljmp
in
sahf
mov
mov
iret
push
aad
std
sbb
xchg
mov
xchg
dec
call
jmp
adc
aad
push
add
mov
add
xchg
mov
mov
loopne
push
sbb
push
cmp
jns
sahf
add
sub
inc
jmp
jae
pop
push
push
xchg
or
je
cmp
mov
adc
add
pushf
jecxz
mov
loopne
les
push
sarb
mov
mov
mov
mov
ret
push
mov
mov
mov
imul
test
jo
cli
dec
ja
pop
cld
iret
les
fnstsw
icebp
out
icebp
shll
loopne
lock
movsl
push
scas
add
add
push
jmp
lcall
cltd
fs
mov
test
xchg
dec
mov
dec
pop
cwtl
mov
ret
fmull
fcomip
out
mov
mov
xor
mov
aad
into
dec
cmp
jns
pop
sbb
mov
add
or
pop
outsl
iret
mov
cmp
jne
addr16
mov
inc
lret
repz
sub
xor
adc
leave
and
jns
in
in
es
xor
sub
push
fsubrl
es
xlat
pop
push
adc
and
mov
xchg
push
pop
mov
push
mov
or
inc
lahf
sub
xchg
sti
lock
cltd
iret
cltd
sti
stc
push
sbb
push
in
hlt
dec
sarb
inc
ds
ja
shl
mov
cld
push
mov
sahf
popf
jae
ja
push
in
fdivrl
adc
shlb
push
push
push
cmp
fmul
out
aas
cmp
notl
test
sub
js
aam
int
test
outsb
and
mov
mov
push
aas
out
jae
pop
sbb
jnp
fisubrl
adc
inc
jg
popf
fdivr
loope
or
mul
add
jg
mov
pop
mov
jl
adc
fsubs
inc
das
push
cld
mov
inc
add
and
dec
jbe
sub
insl
pop
iret
sub
std
fcmovbe
dec
cmpsl
insl
mov
mov
pop
into
mov
adc
int
adc
dec
push
cmpsb
adc
xchg
enter
or
shrl
ljmp
sbb
pop
jmp
mov
cmp
adc
sarl
inc
sarl
jecxz
mov
cmp
test
clc
mov
push
mov
in
push
icebp
dec
push
sub
out
lret
mov
in
movsl
bound
daa
lds
mov
aaa
push
cltd
test
jl
test
mov
psrad
pop
int3
add
mov
sub
mov
mov
out
pushf
mov
push
sbb
les
mov
mov
gs
mov
mulb
jb
inc
xor
and
subl
std
dec
jle
and
int
jmp
mov
push
test
bndstx
xlat
repnz
mov
std
xor
push
outsl
sub
jecxz
xor
sub
movb
inc
push
test
cmp
dec
mov
inc
scas
push
repz
xor
fdivr
mov
ds
das
outsb
out
pop
in
cs
in
jg
es
repz
jae
xor
aas
add
cmp
popa
decb
nop
clc
cmp
movsb
hlt
sbb
xchg
jl
add
add
dec
arpl
push
repz
repnz
jo
pop
popf
orl
jns
cld
insl
das
mov
pushf
stos
jb
popa
rorl
inc
push
test
addr16
lahf
ja
mov
daa
xchg
and
sbb
cmp
cwtl
in
jnp
lock
sub
and
mov
or
rorl
fcoml
cmp
add
or
sahf
in
cs
es
mov
data16
fwait
push
xchg
in
ja
mov
dec
dec
sub
jle
mov
movsb
or
or
aam
sti
cmp
push
out
lods
cs
adc
ljmp
inc
pop
pushf
addr16
ds
shlb
mov
lcall
adc
cmpb
fsubrl
xor
mov
mull
js
adc
test
sbb
shll
into
insb
xchg
lcall
pop
mov
lret
jmp
popl
aas
lods
outsb
jo
dec
lret
stos
or
push
mov
sbb
jnp
cli
cmp
ds
mov
frstor
xchg
add
or
gs
jle
into
cmp
shll
or
movsb
jecxz
cmp
dec
cltd
sbb
fisttpll
mov
fcompl
imul
mulb
aam
and
push
mov
clts
out
pop
icebp
pop
cmp
cmp
gs
xor
incl
xor
mov
mov
xor
sub
dec
pop
lods
mov
sub
out
outsb
mov
dec
scas
and
xlat
and
adc
adc
mov
ret
out
fnsetpm(287
xor
lods
xchg
out
roll
xchg
and
dec
push
push
mov
in
pop
sbb
fadds
ljmp
xor
ss
xchg
adc
push
fcoml
cmc
mov
xchg
test
xchg
cmp
loop
fs
sub
fildl
and
das
subb
push
mov
sub
std
push
aaa
pop
rcl
inc
pop
mov
pop
cmpsb
and
scas
lods
xlat
int3
stos
pop
or
in
loop
frstor
ret
lea
add
mov
mov
jno
mov
inc
push
mov
lds
ja
jae
push
stos
frstor
and
enter
jmp
push
mov
inc
push
xor
sub
ret
push
loope
sbb
fldcw
filds
adc
lcall
lret
add
xlat
cltd
sbb
or
into
out
and
jp
flds
dec
sub
mov
cltd
xchg
stc
cmp
sbb
mov
adc
cmpsb
pusha
xchg
mov
sub
or
mov
arpl
aas
mov
dec
aas
rorb
rol
sbb
cmpl
int3
movsb
shlb
rcll
jecxz
outsb
pop
mov
pop
xchg
int3
mov
push
add
inc
mov
dec
xchg
enter
jns
dec
orb
push
lea
jnp
imul
int3
in
aas
cwtl
xchg
jno
xor
jb
dec
inc
inc
data16
pop
ds
std
in
bnd
and
jo
lret
or
call
lcall
mov
fs
loop
mov
mov
adc
cmp
mov
adc
or
add
or
inc
push
test
fsubrs
add
push
sahf
inc
pop
int3
xchg
ret
or
sbb
inc
mov
mov
or
lahf
mov
sub
jb
pop
data16
iret
rcrb
pop
adc
and
ss
rol
imul
inc
pop
je
or
sahf
flds
test
sub
mov
inc
adc
jmp
xchg
dec
xor
push
lcall
cmp
ret
aas
add
orb
jecxz
clc
sbb
out
mov
repnz
outsl
cli
inc
add
and
cmpl
jp
ret
pop
inc
and
add
xor
les
ret
sti
mov
sbb
xor
div
sub
adc
jmp
inc
jne
mov
rolb
sub
repnz
imul
add
cltd
jl
out
add
jbe
cmp
lcall
xchg
lahf
and
lods
push
and
add
lahf
mov
mov
or
dec
cmp
rcll
das
movsl
sbb
jnp
fsub
ss
xchg
call
pop
jne
pop
pop
out
leave
xchg
mov
or
xor
xchg
fcomip
xchg
fcmovnb
mov
aaa
or
fdivr
xchg
cmc
stos
rorb
cmp
bound
loop
mov
call
shll
mov
fstl
inc
mov
test
mulb
scas
mov
add
movsl
daa
add
jne
fwait
or
mov
dec
fld
movsb
incl
clc
ds
jbe
and
mov
xor
inc
shr
or
add
dec
cmc
cmpsl
jae
jecxz
clc
jl
mov
incl
mov
add
push
fildll
xor
mov
pop
jo
mov
dec
xchg
fadds
stc
xchg
lds
dec
mov
movsb
mov
xchg
jb
pop
orl
push
sti
ljmp
sub
into
jg
cli
add
enter
xor
adc
lds
push
sbb
push
xor
mov
divl
cld
sbb
lret
adc
fcmovbe
push
das
push
int
sbb
mov
pop
pop
mov
outsl
mov
sub
push
and
mov
and
jp
int
idivb
shll
push
inc
mov
jbe
iret
pop
sub
and
xor
mov
pop
jle
in
loop
and
outsl
stos
dec
mov
hlt
clc
in
mov
call
clc
aad
negb
mov
inc
fcmovne
xchg
and
pop
not
test
imul
icebp
cmp
jle
pop
sbb
insb
ss
jno
aas
adc
int
mov
cwtl
int3
push
sbb
icebp
imul
pop
fstl
sarl
sub
out
shll
cmp
adcl
jmp
mov
and
dec
aaa
addb
rorl
add
xlat
xchg
jno
vmwrite
mov
adc
movsb
mov
add
stos
cmp
pop
push
push
mov
dec
in
sub
cwtl
mov
cmp
cs
adc
xchg
rcll
cld
xor
hlt
das
pop
adc
jno
int3
jmp
scas
cmp
mov
mov
add
dec
mov
sti
push
jl
divb
inc
lret
ljmp
movsb
adc
inc
mov
push
push
cli
add
add
or
pushf
fnsave
andl
sbb
jmp
push
push
cmp
inc
test
jg
pop
loop
sbb
sti
aam
push
shlb
adc
cs
inc
mov
sbb
stos
dec
cmp
adc
jle
jmp
insb
mov
xchg
dec
pop
fbstp
cwtl
cmp
lret
leave
add
into
inc
mov
mov
mov
pop
mov
jb
push
mov
call
imul
pop
xor
fadds
insl
sub
sbbb
sub
cmp
ja
int3
push
shll
pop
inc
or
lea
xchg
sbb
push
jge
or
and
sbb
mov
add
mov
lods
fdivs
mov
inc
jmp
add
or
mov
xor
jge
repz
cmp
mov
ret
inc
hlt
push
loope
pushf
jge
test
enter
out
lcall
mov
add
movsl
mov
fwait
jbe
fnstsw
fs
jae
mov
mov
mov
les
dec
in
imul
mov
xchg
push
cltd
sub
stc
stc
pop
int3
fimuls
mov
lods
dec
test
dec
sub
test
jle
ret
and
ljmp
stc
pop
es
orl
fldt
aaa
xor
dec
test
outsb
push
jge
mov
inc
in
fwait
sub
clc
jo
incb
clc
xor
rol
outsl
pushf
shlb
shlb
jg
xor
xchg
mov
jge
mov
cmpsb
pop
xchg
fsub
arpl
and
cmp
push
imul
insb
loope
sahf
inc
lods
jle
inc
fs
or
mov
repnz
push
out
and
sbb
mov
cmc
push
add
add
push
aam
mov
popa
add
adc
popa
scas
pop
int3
xlat
and
sub
jno
imulb
fcmovbe
pop
mov
loop
lods
jbe
adc
xchg
daa
lds
or
icebp
int
xlat
in
test
adc
mov
push
sti
inc
pop
xchg
mov
mov
nop
dec
adc
and
adc
fstps
adc
or
divl
jl
sub
test
sbb
add
mov
ljmp
fwait
rcll
sub
scas
xchg
rorl
out
ret
jns
jecxz
adc
inc
jbe
mov
scas
push
push
xchg
lahf
sarb
cwtl
fadds
jo
jle
jns
jg
xor
in
ret
cwtl
lret
ret
push
dec
cmpsl
pusha
sub
arpl
pushf
push
dec
inc
jg
mov
mov
shrl
add
mov
mov
push
testb
sbb
sub
mov
fisubrs
js
outsb
cli
cmp
mov
lds
outsb
lcall
mov
dec
add
bound
jae
push
mov
repz
xor
adc
faddl
filds
push
ja
es
insb
add
xchg
leave
adc
jae
clc
nop
int3
scas
js
mov
mov
out
cmp
mov
sub
push
into
ds
and
or
and
add
xchg
mov
xchg
or
xchg
aas
and
xor
daa
sahf
mov
insb
mov
ja
sbb
xchg
pop
push
incb
sbb
pop
test
mov
jle
in
fidivs
mov
lcall
mov
fs
addr16
lea
pop
mov
adc
xor
sub
shl
cltd
out
sub
rcr
adc
ss
clc
dec
repz
aad
fsubrl
sub
repz
dec
inc
mov
push
sar
adc
cmpsb
shrl
pop
mov
sub
jl
xor
outsl
mov
cwtl
pop
inc
mov
not
jp
popa
mov
stos
and
jecxz
xchg
test
sbb
test
cld
mov
cmp
rcrl
sbb
test
sti
cmp
mov
cmp
jb
ljmp
scas
mov
test
xor
mov
mov
pop
rol
das
mov
xor
sbb
fs
cli
add
lock
mov
adc
rcrl
adc
vmread
inc
mov
int
or
xor
imul
sahf
pop
mov
aaa
or
sub
int3
out
aas
mov
movsl
sbb
popf
mov
add
jmp
sarb
sbb
jge
vpaddd
rol
jg
cmp
mov
xor
sahf
cmc
je
inc
pushf
pop
and
fisubrl
leave
aad
sub
es
jp
scas
jge
imul
inc
aam
hlt
cmpsl
loope
pop
cmp
adc
faddl
push
adc
xchg
js
mov
xor
sbb
bound
add
adc
cmp
stos
jno
mov
inc
adcl
add
pop
jg
mov
cmp
test
jmp
insl
cmp
insl
decl
jle
sbb
mov
mov
out
push
push
add
cmp
xchg
push
xor
int3
inc
cmc
fisubl
insl
in
leave
in
aas
fdivrp
inc
jne
or
int
std
in
mov
std
xor
sub
xchg
test
sub
mov
dec
mov
sbb
cmp
fldcw
out
mov
jo
cmp
out
cmpsb
shll
sti
push
sbb
testb
jne
jnp
enter
xchg
inc
in
cmc
out
fs
mov
cmp
filds
jbe
inc
push
fimull
lret
fs
push
xchg
cmp
push
and
and
lock
mov
push
test
neg
fists
ss
inc
xchg
test
inc
mov
sub
cwtl
leave
xlat
mov
lock
cmc
in
dec
mov
popw
push
filds
add
repz
mov
daa
lahf
xor
stos
movsl
ds
mov
imul
inc
repnz
clc
std
adc
push
test
cwtl
std
jne
addl
or
or
fidivs
mov
dec
stos
clc
ror
out
test
pushl
mov
imul
xor
add
cmp
fwait
std
pop
popa
aaa
mov
test
push
idivl
or
lret
sbb
cmp
sbb
fisttps
xchg
push
cmovp
mov
mov
leave
test
and
pop
cmp
xor
pop
mov
fstpl
push
jl
xor
rcr
sarb
inc
sbb
pop
stos
pusha
adc
out
pop
aas
sub
in
es
adc
jnp
testb
push
testl
flds
stos
jg
mov
orb
cmpsl
push
sub
sbb
push
pushf
sbb
cli
mov
fsubr
ljmp
cld
test
neg
test
popf
arpl
pushf
lahf
mov
pop
xchg
dec
out
push
lret
sarb
testb
sub
dec
cmp
mov
dec
mov
fs
pop
pop
sub
sbb
xchg
mov
or
in
mov
mov
int3
popa
xchg
out
mov
and
lret
sbb
test
mov
inc
sub
xor
out
sub
pop
bound
in
ja
add
inc
ret
clc
push
cmp
test
cmp
add
test
xchg
adc
and
add
xchg
add
sub
mov
sbb
mov
and
scas
inc
mov
cld
std
imul
iret
scas
jmp
or
xchg
sbb
mov
clc
sbb
cmp
lret
push
push
sti
xchg
xchg
outsl
in
dec
pop
hlt
mov
aaa
jb
pop
xor
ds
push
xorl
jp
sti
cmpsb
push
cmp
dec
aaa
lods
rorl
pop
in
adc
push
sbb
cmpsb
push
cmpsb
mov
shlb
cmp
out
enter
out
mov
cmp
xor
insl
fisttpll
jg
mov
popa
sbbl
das
jbe
and
add
in
sub
push
ret
int
pop
je
jge
scas
xchg
pop
xor
dec
cmc
imul
xor
rcrl
inc
jne
aam
pop
inc
xchg
pushf
lret
xlat
sub
and
vaddsd
outsb
es
mov
cli
inc
popf
dec
loop
imul
push
call
inc
in
cld
jmp
lea
pop
jp
mov
pop
ss
pop
repz
add
xchg
pop
scas
adc
lcall
ss
adc
mov
mov
mov
mov
movsl
adc
xchg
xor
test
aas
sbb
nop
pop
cmc
sahf
push
fisubs
xor
sub
add
jl
and
mov
frstor
lret
addb
negb
sub
clc
mov
in
icebp
lret
add
enter
jbe
xchg
jae
ret
in
ss
adc
div
mov
outsl
push
insb
and
sbb
fildl
inc
dec
jns
cltd
popa
seta
sbbb
mov
pusha
mov
out
add
lock
aam
jne
mov
nop
outsb
cmp
ljmp
mov
dec
fwait
inc
test
mov
dec
pop
rorl
jne
pop
sub
inc
ret
pop
rcrb
add
jns
pop
or
fsubr
sbb
pop
out
push
les
repz
out
fsubr
mov
mov
sahf
push
ret
xlat
inc
arpl
lcall
ja
repz
jg
les
push
push
mov
ja
xchg
mov
fdivrs
mov
xor
push
stos
cmp
push
or
std
popa
int
xchg
mov
mov
test
fwait
or
in
and
mov
sbb
pop
pop
mov
fwait
jecxz
pop
cmp
dec
adc
adc
push
xchg
jmp
test
add
divb
shlb
popf
movsl
push
jle
fildl
arpl
xor
fldz
xor
inc
mov
pop
mov
insb
jg
mov
or
adc
cmpsb
pop
out
xchg
movb
jae
jno
cld
int
movsl
jge
sbb
dec
pop
test
xlat
outsl
inc
pop
sub
xchg
subb
divl
inc
shlb
test
ljmp
xlat
mov
jecxz
imul
push
push
jecxz
out
pop
and
push
fidivrl
decl
sbb
mov
idivb
jae
inc
test
sub
lahf
xor
inc
mov
mov
pop
in
dec
int
stos
aaa
and
add
adc
jg
arpl
fildl
cmp
or
cltd
add
adc
xchg
lods
ret
leave
loop
pop
push
hlt
je
dec
mov
cmpsb
fwait
inc
push
or
mov
shrl
ja
repz
stos
into
hlt
out
jge
movsl
jnp
xchg
mov
inc
sub
fwait
sbb
mov
arpl
and
mov
stos
push
aaa
and
push
in
mov
push
std
scas
lret
lret
push
movsb
sbb
mov
lcall
out
rol
sbb
or
or
dec
jnp
in
bound
sbb
or
lods
shl
or
or
add
push
sbb
mov
cld
lahf
jmp
ja
mov
jb
pop
popa
test
cmp
rolb
cmp
fidivl
aaa
dec
sub
ja
push
call
mov
arpl
push
push
xor
adc
cs
into
or
xor
sbb
inc
and
aaa
test
ljmp
push
fmuls
sub
jmp
or
dec
jb
mov
push
fstpt
xchg
sbb
or
xorb
xchg
xchg
or
push
add
in
scas
rolb
cmp
sahf
cld
imul
iret
ja
mov
fwait
mov
cmp
add
out
jecxz
pop
adc
push
mov
shl
setge
sbb
or
mov
pop
pop
push
cwtl
xor
mov
lock
or
lcall
sbb
in
icebp
pop
and
add
add
push
nop
clc
mov
mov
hlt
lods
sub
jle
jbe
push
pop
pop
gs
lods
mov
inc
inc
adc
adc
and
cmpb
notl
jmp
insl
pop
lcall
mov
iret
add
in
push
cmp
xchg
mov
sbb
cli
insl
imul
push
xor
lock
mov
daa
pusha
ljmp
mov
sti
clc
sub
push
mov
mov
xor
out
int3
imul
cmp
xchg
sub
ret
cmc
jns
popf
imul
ret
stc
mov
call
lds
in
mov
shl
cmc
xchg
imul
in
rclb
mov
aad
test
xchg
inc
sahf
out
mov
andb
pushf
dec
or
pop
dec
das
mov
ret
mov
jns
and
bts
out
outsl
imul
call
lods
addr16
jle
fucom
popa
lcall
dec
dec
fsubrs
add
pop
test
xchg
loopne
sarl
jne
adc
lcall
jne
pop
clc
and
rcll
in
jo
or
es
mov
add
pushf
sub
les
pop
mov
sbb
shl
clc
fcmovbe
mov
add
adc
clc
std
xor
mov
or
pop
jnp
add
and
push
loopne
nop
mov
dec
hlt
mov
cmp
rorl
xor
sub
or
filds
adc
std
push
xor
repz
sub
stc
mov
lods
adc
fs
xchg
lds
add
aas
xor
cmc
push
aas
fsubrl
jge
aam
fdivl
call
pop
push
xor
jb
mov
adc
mov
push
xchg
xchg
xchg
insb
sbb
mov
test
or
lcall
orb
sub
dec
mov
cmp
xlat
out
movsl
sti
arpl
jecxz
adc
push
aad
inc
insb
adc
jbe
or
outsb
test
push
insb
lods
mov
ljmp
insl
xlat
data16
sub
mulb
enter
cltd
xor
sbb
cmpsb
lcall
push
ret
hlt
add
pop
addr16
mov
cmpb
cli
movsl
int3
add
mov
fiadds
daa
repnz
jae
bound
enter
sbb
int
mov
jecxz
xor
aas
call
je
pushf
lods
cmp
cmp
jbe
push
into
mov
and
pushf
sbbb
jmp
add
gs
push
stc
inc
xchg
push
push
cmp
jg
add
rcrl
jns
pusha
loopne
outsl
insl
push
pop
lods
cmpsl
adc
adc
fs
loope
fidivrl
sbb
push
mov
fimuls
aas
cltd
sti
ljmp
imul
lahf
icebp
outsl
fistl
insl
jb
les
pusha
test
cmpsb
popf
mov
push
dec
repnz
xor
int3
aad
int3
fdivs
sti
jbe
loopne,pt
call
insl
cli
mov
sub
add
xchg
cmpsb
jne
jg
icebp
nop
aam
lods
hlt
sbb
outsb
cli
std
lret
nop
mov
adc
in
lahf
hlt
cltd
pushf
lret
pop
sbb
ret
cli
and
cmp
pop
sbb
icebp
in
or
outsl
movsb
mov
jmp
fcoml
inc
cltd
cmpsb
insl
xchg
or
addr16
gs
or
mov
stc
inc
cmp
ret
inc
stos
stos
outsl
dec
cmp
jg
jae
stos
and
ss
ret
fistl
dec
mov
stos
data16
inc
in
cmpsl
inc
mov
fcompl
cmp
pop
ret
mov
xor
inc
or
cmp
adc
jo
cmc
cli
movsb
loop
xor
adc
pushf
sbb
addl
fs
scas
shlb
pop
add
dec
sub
aaa
aaa
lcall
sahf
cmp
lods
mov
dec
lock
loop
xor
sub
dec
push
addr16
gs
adc
or
leave
mov
sahf
jno
shl
mov
inc
sarl
push
sub
outsl
jnp
adc
xchg
jb
push
mov
sbb
test
in
inc
mov
push
idiv
and
inc
dec
add
aaa
pop
test
out
test
aad
cli
jp
push
jmp
out
or
scas
out
sbb
cwtl
pop
push
xchg
pop
inc
or
test
push
mov
and
aam
sub
shrb
daa
push
aas
adcb
fs
sub
pushf
mov
shrl
xchg
popa
and
lds
mov
adc
adc
xor
xchg
jne
mov
sub
inc
cmc
adc
mov
cwtl
inc
or
mov
add
sti
xchg
dec
push
addr16
cltd
in
pusha
sbb
scas
fcmovnb
nop
test
hlt
inc
cmpsb
jmp
in
adc
mov
repz
jns
and
inc
add
fdivrp
fcmove
adc
push
les
out
hlt
push
ficomps
or
pop
fdivrp
int
cmp
sahf
push
or
xorl
repz
sbb
jecxz
call
loop
mov
sar
sub
dec
mov
dec
call
das
xchg
xor
mov
pop
push
sbb
add
je
pusha
sub
nop
xor
xchg
pop
and
int3
cmp
jno
or
pop
adc
xlat
lret
push
sbb
movsl
rclb
cltd
xchg
mov
xchg
das
inc
out
sbbl
mov
inc
pop
push
push
lahf
pop
stc
push
sub
mov
add
push
outsl
shrb
xchg
std
int
popa
mov
stos
dec
mov
xchg
mov
cmc
incl
shrb
rcr
stos
jae
call
mov
lret
mov
test
adc
sub
in
sbb
mov
sbb
lret
mov
pop
mov
mov
cmp
add
loopne
mov
mov
nop
enter
lea
aaa
jns
sbb
and
sti
insb
cmpl
repz
add
les
imul
mov
jle
xchg
mov
mov
push
and
std
shrl
pop
loop
push
test
mov
jnp
ljmp
stc
inc
pop
and
dec
add
inc
or
mov
cmp
pop
pop
mov
pushf
mov
out
mov
int
fwait
in
pop
nop
mov
mov
pop
cmp
jns
repnz
or
nop
jge
clc
sub
xchg
leave
int3
les
sbb
frstor
push
mov
xor
push
xorl
fidivl
les
jg
mov
shlb
cmc
inc
scas
xchg
xor
sub
sbb
rcll
push
stos
push
sbb
aad
inc
xor
fwait
clc
data16
aas
cmp
lods
sti
push
imul
jp
mov
cld
fyl2x
jp
test
cmp
data16
pop
loop
out
pop
pop
jp
xor
out
jmp
ss
iret
scas
out
and
adcb
repz
add
rcl
and
mov
mov
sbb
test
pushf
mov
incb
dec
pop
xchg
jmp
push
mov
stos
jg
xor
popf
or
sarl
in
mov
test
or
ss
repz
iret
rolb
cli
std
andl
out
fnstcw
outsb
jge
xchg
das
lret
pop
mov
add
xchg
mov
pop
sub
pop
pop
test
adc
sahf
popl
movb
pop
arpl
inc
loope
jmp
cld
insl
dec
lods
add
rcl
mov
popf
gs
mov
movsb
xchg
dec
out
adc
mov
loop
movsl
jne
jnp
xor
push
dec
adc
mov
in
mov
insl
dec
mov
mov
ficompl
sub
dec
cmc
pop
test
in
cli
out
sahf
inc
jg
jns
sbb
test
add
mov
sbb
pop
jo
shrb
fmull
sbb
mov
lods
sub
clc
aaa
pop
push
cld
aad
xchg
rcrl
sub
filds
out
jae
or
sub
and
xchg
lods
add
pop
mov
push
push
test
or
mov
push
and
and
jecxz
test
mov
fwait
jl
outsb
jl
mov
adc
inc
and
jg
cli
test
lahf
inc
mov
ret
fwait
or
scas
shrb
test
xlat
jmp
andl
mov
into
push
and
out
push
xlat
push
ret
movsl
int
ret
inc
cs
iret
daa
push
test
shll
ljmp
mov
out
fcmovbe
jbe
push
adc
ret
cwtl
xchg
dec
mov
jno
popa
sub
jns
push
add
inc
jae
sub
push
cmp
xchg
or
mov
lock
cmp
inc
lock
dec
jnp
mov
inc
pop
ret
mov
add
and
pop
pop
push
xchg
sub
stos
imul
sbb
fucomip
add
je
imul
mov
aam
pop
mov
popa
dec
jmp
jo
sti
adc
and
mov
inc
ret
and
subb
inc
pop
pop
int3
call
leave
xchg
mov
xor
xlat
test
jne
pop
and
sub
divl
adc
push
cmp
aam
arpl
ret
aas
mov
mov
add
pop
aaa
sbb
jle
pop
pop
dec
sub
xor
inc
push
sbb
xchg
mov
push
dec
and
cltd
loope
scas
push
es
mov
jb
outsl
sti
mov
push
das
ljmp
popf
push
pop
push
cmp
sahf
xchg
out
addl
cmp
xchg
push
es
stc
or
lds
fwait
sti
shlb
outsb
jne
js
bound
inc
test
dec
mov
stos
lret
in
and
out
inc
push
fs
jae
dec
fists
jns
sbb
out
loop
outsb
xlat
pop
mov
cmpsb
mov
xchg
mov
loope
xchg
mov
mov
push
fimull
daa
mov
sahf
mov
pusha
pop
rorb
cmc
inc
hlt
add
loopne
pop
push
data16
xor
sarl
loope
push
mov
cmp
lret
sti
sbb
nop
and
and
int3
test
push
fisttps
movsb
hlt
call
clc
mov
pop
sub
inc
mov
fs
jo
mov
test
cmp
subl
cs
xor
mov
pop
test
mov
sbb
mov
mov
push
lahf
inc
mov
aas
clc
and
add
stc
xor
and
movsl
or
out
xchg
sbbb
inc
sbb
and
test
push
test
test
testb
fadd
loope
sahf
sbb
add
shl
lcall
jae
fstpt
lds
pushl
clc
in
insl
and
test
sbb
mov
lret
mov
lret
dec
pop
testb
jp
cwtl
sub
adc
jae
fstpt
mov
pcmpgtw
adc
inc
push
iret
and
stos
icebp
loope
divb
daa
cmc
je
mov
ljmp
pushf
pop
pop
mov
in
pop
xor
ss
frstor
loope
xchg
pop
add
test
enter
xchg
pop
pop
insl
sarl
adc
sbb
sbb
sub
insl
int3
mov
sbb
testl
test
stc
sub
adc
sub
fdivrp
inc
movsb
mov
fld
push
inc
add
xchg
inc
fildll
push
pop
mov
hlt
clc
push
das
or
cmpsl
mov
jno
js
pop
and
jae
mov
xchg
push
pop
daa
daa
mov
pop
sub
mov
pop
jns
xchg
int3
pusha
lcall
jmp
inc
jmp
or
es
jns
in
xor
hlt
lea
or
pushl
mov
pop
stos
shrl
sub
ret
fsubrs
mov
adc
inc
xor
jb
jns
lahf
cld
sbb
dec
push
push
int
mov
sbb
icebp
fdiv
aaa
jbe
mov
sbb
and
divl
lods
push
pushw
dec
sub
outsb
pop
nop
mov
push
mov
inc
sub
jnp
xlat
cwtl
call
scas
movsl
std
sbb
mov
jb
xchg
out
lods
pushl
out
fs
dec
or
movsl
je
mov
aaa
adc
inc
lcall
cmp
sbb
pop
out
popf
pop
and
pop
bound
iret
aas
aam
movsl
dec
xchg
insb
test
repnz
adc
add
cmc
rorl
cwtl
test
mov
xor
dec
lods
jb
arpl
sahf
mov
sbb
or
cmp
inc
test
mov
push
lcall
sarb
dec
pop
dec
leave
shl
mov
sub
call
sbb
dec
sub
mov
xorb
out
dec
nop
stos
rclb
call
mulb
mov
clc
cmp
cld
jle
push
sbb
xchg
dec
cmp
bound
js
mov
jl
das
in
jecxz
lds
out
sub
movsl
or
adc
call
aad
cli
out
push
ret
out
xchg
adc
aaa
cmpl
je
mov
sahf
jo
lahf
lret
push
dec
mov
fistpl
xchg
and
mov
dec
pop
cmp
jmp
cmovge
jp
and
pushf
or
imul
inc
xchg
pop
ljmp
inc
stos
sbb
nop
mov
nop
pop
cmp
mov
movsl
xchg
jmp
mov
in
popf
test
movsl
dec
push
insb
je
ja
jb
push
xor
js
cmpsb
jbe
inc
fidivs
arpl
stos
add
cli
xlat
stos
test
or
mov
pop
daa
mov
mov
call
xor
aas
lods
push
jge,pt
rcrl
mov
jns
push
shll
popa
vpunpcklqdq
jle
out
jle
pusha
mov
cld
insb
bound
fnstcw
pop
inc
jae
xor
dec
ds
cwtl
push
inc
add
add
adc
xlat
sti
loope
cmp
push
xor
pop
xor
repz
xchg
in
mov
cltd
stos
xlat
push
imul
out
and
mov
jmp
xchg
push
xchg
rorb
or
jecxz
jmp
mov
or
lea
loopne
dec
aam
cmp
cmpb
pop
and
cmp
cmpsb
pop
cli
inc
pusha
mov
bound
cli
cmp
mov
jge
int
shlb
or
test
imul
or
loopne
in
xchg
jecxz
loop
rcrb
inc
sub
shr
sti
pop
sbb
lods
pop
mov
jp
rol
jb
jg
in
in
xchg
push
jmp
test
insl
cmp
popf
sti
xchg
xchg
push
scas
das
aad
ljmp
enter
xchg
pop
adc
sbb
mov
into
xor
jns
sti
mov
lcall
jb
int
jnp
push
call
insb
mov
loop
xorl
sub
add
sarl
jo
sbb
cld
out
inc
sub
je
cld
mov
sub
daa
aam
leave
pop
mov
mov
add
xor
or
popa
roll
shl
sbb
add
testl
sub
sbb
and
mov
out
xchg
push
pop
nop
loop
pop
jge
sub
outsb
in
pop
push
stc
jle
data16
loop
jp
pop
xor
test
ret
push
push
movsl
adc
pop
add
pop
pop
aaa
or
and
arpl
jmp
dec
mov
cmp
mov
adc
lods
shr
fsubrl
aas
subb
jbe
xor
outsl
xor
mov
in
pushf
ret
clc
sbb
jg
jge
ret
movl
leave
and
and
das
inc
mov
sub
adc
enter
mov
jmp
xor
mov
push
xor
xor
inc
mov
or
les
iret
sbb
fstps
jno
outsl
mov
in
cmp
icebp
loopne
out
xchg
cmp
cwtl
pop
inc
fdivrp
cmpb
ret
dec
movsb
lcall
push
test
sbb
inc
fcoms
and
aad
cmp
int3
push
xchg
out
cmp
pop
insb
addr16
rorl
js
xchg
ficoms
mov
mov
push
ljmp
les
data16
dec
push
out
pop
sarb
lods
lods
addb
in
cmc
jmp
xlat
adc
pop
jge
out
inc
and
add
pusha
mov
inc
adc
jo
adc
mov
add
mov
push
lock
aad
mov
dec
aas
mov
cmc
repz
xchg
mov
sbb
xchg
cmc
arpl
xor
cmc
fimuls
pop
sti
clc
xor
in
xchg
cmp
mov
cltd
push
xchg
mov
fcompl
cmc
mov
cmc
add
lods
leave
js
jo
mov
xchg
mov
pop
cmc
fucomip
xor
jmp
pop
js
mov
inc
lret
aaa
inc
sahf
mov
pop
push
xchg
and
call
push
push
mov
stos
push
push
lea
lods
pushf
lods
in
fst
ror
cmp
maskmovq
negl
outsb
pop
or
dec
dec
mov
mov
outsb
call
and
xchg
pop
popa
rorb
out
or
cld
andb
std
xchg
inc
cwtl
xchg
call
dec
xchg
mov
pop
inc
cld
repz
cmpsb
data16
loope
popa
jbe
pop
cwtl
dec
and
mov
jae
jp
inc
mov
push
or
subb
jge
jg
in
je
insb
push
and
mov
pusha
loop
popa
xchg
imul
movsb
cld
cmp
xchg
xlat
jno
xchg
cmc
add
jge
shlb
inc
cmp
ret
shrl
je
insl
or
xchg
mov
dec
adc
push
cmp
jle
testl
inc
fsts
xchg
lcall
je
in
push
cmpsl
add
or
jge
and
cmp
push
imul
call
mov
or
clc
lea
push
sahf
mov
lret
cmp
data16
stos
cmp
push
inc
push
in
fcmovnbe
push
inc
mov
ja
fs
shll
push
decb
loop
mull
pushf
es
push
jecxz
jae,pn
insl
fs
lret
andb
ss
jnp
movsl
sbb
shrl
pop
or
scas
xor
add
scas
xchg
adc
xchg
cwtl
aam
lcall
fdivs
push
add
test
inc
out
enter
add
shll
fwait
xchg
loop
sub
and
jge
inc
cltd
mov
add
dec
ds
cmp
sbbl
aam
inc
mov
mov
or
test
push
addl
int
dec
dec
push
outsl
call
test
mov
xchg
inc
aam
filds
mov
lahf
shlb
jecxz
pop
xchg
inc
out
test
pop
dec
fsubrl
mov
sub
push
sub
fwait
mov
or
lock
mov
test
lds
mov
iret
jae
mov
xor
sub
pushf
or
cwtl
stc
push
pop
scas
jae
iret
cmp
test
hlt
mov
or
jge
mov
push
stos
sbb
cs
cmp
adc
jecxz
push
fisubrl
sbb
sahf
jae
imul
hlt
adc
xchg
jmp
mov
mov
nop
and
sbb
dec
and
mov
dec
call
jns
cmp
out
mov
xchg
ret
mov
xor
inc
jbe
mov
xchg
jae
fcoms
iret
into
fimuls
cs
psubusb
divb
js
inc
pop
push
test
out
push
test
pop
daa
sub
inc
lret
mov
xchg
out
jle
popf
movsl
and
insl
push
fildll
ljmp
jg
scas
outsb
inc
movsl
push
cltd
dec
sbb
mov
imul
adc
pop
mov
aas
loop
aaa
icebp
xchg
jg
push
or
jge
mov
repnz
rorl
loop
lock
in
cs
adc
push
jb
stos
xchg
lcall
cmpl
mov
dec
jmp
or
rcrb
and
out
hlt
mov
scas
add
add
fnstcw
mov
mov
cltd
push
loopne
int
jmp
cmpsl
jbe
jecxz
inc
push
pop
xor
arpl
mov
pop
jbe
mov
mov
pop
fwait
jnp
dec
je
pop
mov
repz
pop
ficomps
mov
pop
outsb
fcmove
pusha
and
loope
adc
xchg
arpl
cltd
xor
or
jp
fsubrl
fs
push
cltd
inc
sub
sti
mul
daa
pop
push
mov
leave
mov
sub
cld
js
pop
dec
movsl
cli
sbb
outsb
fldl2t
add
mov
lret
aad
lods
bound
ret
shlb
cmp
jmp
int
pop
cltd
inc
inc
sub
pop
push
xor
lds
lahf
es
xor
jnp
mov
pop
rcll
push
loope
outsl
icebp
pop
lods
or
xor
xchg
aas
sub
jle
jbe
and
mov
repnz
aad
cltd
leave
mov
arpl
add
and
and
pusha
cld
and
pop
or
sub
push
dec
jecxz
pop
xchg
movl
jbe
bound
test
dec
cmc
pop
lret
nop
fmuls
cmp
jb
int
fnstenv
xor
leave
fbld
es
gs
jbe
lcall
xchg
push
add
pop
lods
lods
lahf
adc
pinsrw
ja
xor
dec
insl
xchg
sbb
stos
fdivl
jno
inc
mov
fs
in
fisttpll
add
xor
or
cmp
mov
push
mov
xor
dec
sarl
and
fs
fcom
jge
dec
rcr
fs
ror
aam
mov
jnp
jle
pop
pop
js
dec
xchg
cmp
push
es
add
or
mov
mov
jb
fs
test
jl
jno
lods
sub
sti
das
pop
dec
mov
mov
cli
xor
push
cwtl
or
mov
imul
scas
push
push
mov
pushf
push
loope
lret
sbb
outsl
pop
and
fmull
and
adc
mov
sbb
ficompl
addl
jmp
das
out
push
and
call
in
lret
fidivrl
div
fsubs
test
bound
loopne
adc
loope
lea
cmp
arpl
ficoms
fsubs
inc
pop
jmp
mov
jae
pop
fistpl
jno
jno
mov
popa
dec
fucomi
out
emms
sub
lea
cmp
cmp
xor
sub
push
cmp
jmp
loopne
inc
fisubl
jb
mov
insb
lds
subb
sbb
test
repnz
push
xchg
mov
and
cmp
cli
stc
mov
push
cli
dec
loope
scas
mov
sub
dec
xchg
out
and
mov
and
dec
iret
pop
push
inc
push
pop
mov
pop
add
mov
mov
dec
mov
out
mov
and
inc
and
mov
jle
lahf
addr16
mov
nop
jns
jno
enter
insl
push
sti
dec
sub
cltd
sub
and
lods
add
out
cmc
cmp
pushl
mov
jo
cmp
loope
mov
imul
cld
cli
repnz
jns
pop
mov
jb
movsb
pop
xchg
xchg
add
jmp
sub
mov
jmp
in
mov
sub
int3
subl
mov
pop
out
inc
ds
xchg
dec
push
xchg
repnz
fucom
or
pop
rcr
pushf
pop
and
or
ljmp
push
call
push
mov
frstor
cmp
clc
in
mov
inc
adc
jo
out
xlat
push
cmp
mov
fcmovbe
loope
orb
arpl
inc
adc
pop
mov
aaa
jb
insl
mov
nop
std
mov
nop
mov
cld
in
jb
repz
test
or
push
cmpsb
mov
and
dec
sub
stc
addb
jmp
subb
dec
pop
push
fildl
pop
mov
loope
aam
sub
insl
leave
cmp
enter
jg
test
call
out
inc
dec
cmp
pop
dec
mov
xchg
ja
mov
sub
es
pusha
add
sbbl
shl
mov
data16
jecxz
dec
mov
or
add
xor
dec
es
out
jbe
pop
mov
cmpsl
xchg
jae
xchg
mov
xchg
xchg
es
imul
or
rol
xor
imul
imul
inc
hlt
jmp
orl
out
or
loop
sti
mov
mov
mov
aas
xchg
or
push
pop
aas
fnstsw
push
push
jo
jp
pop
outsl
test
xchg
cltd
xchg
adc
cmp
addr16
jns
adc
gs
mov
dec
inc
in
loope
inc
pavgw
mov
out
ret
jb
loop
inc
inc
or
jo
stc
and
arpl
cltd
xor
lods
cmp
push
cltd
dec
rorl
dec
dec
cli
inc
stc
mov
pop
push
push
in
fwait
or
clc
nop
int3
lea
hlt
loopne
jae
arpl
pop
inc
adc
mov
testl
scas
sub
fnstsw
fsub
xchg
sub
push
mov
aad
sub
lcall
sub
stos
mov
push
arpl
sbb
cwtl
pop
lahf
or
jmp
call
out
rorb
cld
fstps
add
inc
test
adc
jecxz
add
cld
out
int3
lcall
jne
repz
sbb
cmp
in
pop
or
shrb
lret
ss
pop
fiadds
andl
or
cmp
sub
and
inc
shr
fsubr
xchg
add
push
push
jecxz
pop
or
shlb
jmp
xchg
dec
in
pushf
icebp
insl
in
jg
pop
pushf
inc
pop
pop
mov
adc
scas
push
imul
sbbb
and
mov
dec
xor
xor
daa
inc
adcl
adc
xchg
pop
popf
adc
xchg
and
scas
dec
es
enter
mov
test
push
sub
dec
xor
dec
mov
add
mov
sbb
repz
fdivrs
xchg
js
xor
or
out
in
jbe
xchg
sahf
out
scas
mov
mov
scas
sub
mov
idivb
xor
pop
sahf
rclb
inc
lds
or
outsb
je
cmpsb
pop
mov
pop
mov
add
xor
sahf
mov
subl
pop
adc
adc
repnz
cmp
pop
incb
mov
sbb
xchg
stos
xchg
cmp
jno
inc
fdivs
inc
repz
jle
stc
mov
leave
mov
ja
popa
mov
test
jae
shrb
fnsave
inc
xor
jo
aad
fidivl
jle
stos
cli
jbe
xchg
mov
jns
pop
mov
inc
out
movsl
inc
sbb
or
jl
jne
mov
push
fdivrl
cltd
jge
mov
hlt
push
push
mov
pushf
lock
int
pusha
and
mov
rclb
arpl
aad
addr16
pusha
fstps
and
mov
or
push
lcall
out
in
orps
sti
ret
testl
and
xor
mov
sti
inc
xor
cmc
xor
sbb
stos
push
mov
push
std
inc
cmpsl
push
add
adc
jl
test
push
cmp
push
sub
pcmpeqb
cmp
cltd
aaa
mov
shll
aaa
dec
mov
frstor
add
sti
stos
xchg
bound
mov
xchg
or
pop
mov
fsubl
enter
pushf
pop
fmull
in
sub
sbb
pop
xchg
in
jne
adc
cwtl
mov
cmp
cmp
mov
push
sub
outsl
push
notl
lahf
nop
imul
aas
imul
push
xchg
mov
mov
popl
xor
add
add
shll
pop
pop
push
jg
cmpsl
mov
push
stc
cmp
dec
mov
mov
sbb
cltd
add
adc
in
fsubs
addr16
loop
cmp
xchg
or
xor
and
mov
ja
cmp
push
push
ss
test
push
addr16
pop
roll
pop
add
cmp
sbbl
sub
dec
xor
xchg
out
dec
sub
insl
icebp
sbb
in
push
in
xchg
in
mov
xlat
cmp
subb
cs
sbb
or
ret
cltd
loop
inc
insb
push
les
mov
and
mov
or
cmp
cmp
jnp
sbb
subb
adc
sub
dec
add
imul
xchg
mov
out
rcll
lods
lods
gs
movsb
aad
nop
mov
push
sbb
mov
fwait
cmp
xorb
ss
loop
mov
pop
inc
xlat
cmp
in
add
pop
jnp
test
mov
pop
aas
mov
mov
int
enter
subl
aas
mov
lret
xor
repnz
sub
xchg
int
and
xor
loopne
xor
xor
mov
mov
mov
mov
movsb
jg
lahf
push
ss
and
outsl
inc
stos
add
push
jbe
addb
outsb
lock
jecxz
in
pop
cmpsb
push
das
sbb
fcoml
fsts
je
in
in
pop
fs
sub
and
iret
cmp
cmp
ss
shrl
push
push
pop
int3
test
enter
xor
call
mov
stc
push
cli
jg
outsb
jo
fbstp
cmp
fwait
in
lods
es
cmc
push
mov
push
aaa
pushf
push
jecxz
push
ja
sub
mov
sti
aad
mov
clc
add
shll
in
cli
stos
adc
sahf
inc
lcall
jae
ds
lods
mov
xchg
loop
int3
sbb
xchg
inc
push
push
cmpsb
out
sub
push
loop
in
sbb
rcr
sbb
movsb
add
push
mov
add
xchg
popf
or
cwtl
shll
ss
xor
es
sub
dec
push
sbb
xchg
push
adc
push
adc
inc
or
fidivl
mov
jle
mov
mov
movsb
lods
ret
jbe
sub
jg
adc
sub
negl
das
jnp
mov
nop
icebp
jo
cmp
mov
into
lret
fwait
sbb
push
add
dec
mov
mov
lods
sbb
dec
rcrb
mov
mov
cmp
push
addr16
je
lret
sbb
xor
roll
inc
cmp
mov
mov
mov
ret
ror
mov
dec
mov
gs
mov
lret
vphaddbd
mov
xor
add
inc
cli
adc
push
push
xorl
adc
xchg
movsb
ret
or
stos
mov
popa
jp
ret
les
outsb
aas
inc
jns
push
dec
out
rcll
idiv
push
clc
jb
in
test
outsb
push
or
push
push
push
outsb
cmp
in
xor
cmpsl
add
cld
mov
retw
hlt
xor
mov
ret
pushf
pop
pop
lods
sahf
mov
adc
pop
add
movsl
shl
xchg
jecxz
xchg
xchg
or
into
sahf
jle
imul
cs
dec
cld
pop
cmp
in
movsl
xorl
adc
das
mov
outsl
orb
int3
dec
mov
shlb
pop
lea
or
clc
cmp
sbb
inc
sbb
stos
xchg
adc
cld
jno
lea
add
and
popf
arpl
pop
in
pop
not
pop
pop
pop
mov
lahf
cwtl
dec
arpl
mov
cmp
jb
imul
or
and
mov
ret
add
fildll
sub
and
sbb
or
xchg
sti
pop
aam
fsubrs
outsl
push
add
loopne
std
test
fistpll
cmpsb
repz
fwait
int3
push
stos
inc
sbb
jge
mov
sub
or
jecxz
scas
inc
adc
mov
js
js
sbb
push
push
fmuls
jg
add
and
push
lcall
nop
xchg
adc
out
pop
arpl
adc
lahf
stos
fiaddl
inc
xor
adc
div
out
mov
add
lods
outsb
lds
cmp
mov
stos
fidivrl
std
imul
loop
and
inc
dec
push
mov
es
sbb
out
aam
push
mov
or
sub
imul
cmp
and
push
mov
mov
sub
sbb
or
mov
out
inc
cs
imul
jl
or
nop
mov
cs
mov
out
adc
push
sbb
xchg
insl
push
loope
cmp
dec
rep
movsb
cmp
push
xchg
mov
xor
jl
test
xchg
clc
or
xlat
rcrb
push
push
aas
xchg
out
xchg
pusha
or
xchg
daa
inc
adc
out
jno
stos
cld
cmp
jg
clc
les
push
leave
jl
xchg
imul
mov
dec
cmp
and
sub
scas
test
adc
add
pop
repnz
addl
xchg
xchg
test
sarb
popa
xchg
cmp
daa
sbb
mov
js
xchg
push
pop
sbb
hlt
cmpsl
daa
in
cmp
sahf
inc
sahf
xor
pop
scas
lods
and
ret
jnp
mov
adc
cmpsl
data16
sub
adc
cltd
insl
sbb
jns
hlt
jle
mov
into
jg
das
mov
cmpsl
inc
adc
jmp
int3
roll
sub
loop
cs
arpl
sub
aad
pop
std
mov
mov
daa
repnz
les
int
aas
push
ror
xchg
adc
mov
out
insb
or
in
sahf
lret
popf
mov
repz
iret
ret
adc
lods
insb
mov
ja
into
xor
je
in
pop
ss
mov
pop
mov
rorl
adc
test
dec
test
cmp
rclb
mov
mov
outsl
shlb
shlb
arpl
cmp
out
xchg
hlt
es
mov
sub
lea
pop
cmc
sahf
mov
jns
mov
or
add
repnz
cmpsl
jae
imul
add
push
add
adc
je
cs
sbb
fwait
lods
jle
int3
jg
repz
cmp
mov
iret
push
mov
sub
dec
imul
bound
out
sub
jl
das
mov
ja
dec
movsb
insl
test
stos
mov
test
sub
jns
inc
add
fs
ficompl
enter
pop
dec
sub
lea
xchg
xchg
jnp
mov
adc
fsub
adc
push
xor
outsl
je
stos
cmp
icebp
dec
mov
mov
sub
cs
xchg
xor
add
rclb
dec
mov
push
jae
push
cmp
pop
repz
out
scas
pop
xor
ret
mov
loopne
stos
mov
stos
lret
sbb
jno
jmp
mov
test
lock
orl
aas
loopne
dec
in
hlt
push
mov
adc
je
and
xchg
inc
add
add
lock
and
fcoms
pop
adc
add
repz
movsb
and
push
jecxz
arpl
in
add
rolb
xchg
mov
cmc
jbe
inc
xor
jge
jp
enter
jno
xchg
sbb
mov
mov
shlb
xchg
inc
or
and
inc
sti
stos
mov
aas
das
cltd
inc
xor
mov
imulb
in
cmpsb
inc
ret
test
leave
movsl
jmp
icebp
push
insb
loopne
adc
inc
add
test
int3
jg
lods
and
in
ss
aas
push
add
imull
test
push
ret
add
pop
repnz
aas
stos
jo
lods
popf
or
add
es
test
ror
dec
popa
cwtl
mov
adc
xchg
xor
pop
insb
jno
inc
push
jmp
out
xchg
or
stos
hlt
sub
sbbb
int3
popa
aad
and
clc
mov
sti
or
cmp
rolb
jp
xor
pop
and
mov
loopne
mov
mov
mov
sbb
repz
xor
jnp
shrb
repz
test
dec
sbb
fldenv
dec
dec
fs
mov
iret
pop
push
inc
mov
call
fcomps
cmp
fstps
outsb
cli
or
test
jecxz
dec
pusha
lock
add
mov
lods
cmpsb
arpl
in
or
out
xor
cmp
into
arpl
jae
mov
scas
inc
jno
adc
call
call
test
or
push
mov
push
dec
cmpsb
add
add
adc
sarl
je
ljmp
imul
jne
ss
cmpsb
push
in
inc
sarl
ret
pop
in
mov
jbe
movsb
mov
push
xchg
dec
add
popf
enter
jmp
and
aas
fldt
xor
add
dec
jbe
pop
dec
fsts
addb
and
ljmp
in
in
cmp
mov
in
testl
or
adc
pop
inc
pusha
scas
sarl
push
mov
push
push
sub
popa
mov
lods
sbb
pop
cwtl
fcoms
shrl
ljmp
iret
gs
pop
mov
sbb
test
dec
popa
std
inc
ljmp
jb
fisubrs
sbb
in
pop
adc
and
mov
mov
xchg
les
cmp
sbb
lock
subb
jnp
push
imul
mov
cli
cs
jno
adc
jb
popf
mov
ss
push
movsb
mov
and
dec
pop
mov
jbe
mov
stos
repz
test
out
lods
int3
scas
aam
aaa
jle
ja
xchg
inc
popf
sbb
sbb
dec
test
xchg
test
repnz
fnstcw
shl
add
inc
and
cwtl
lods
out
inc
push
and
int3
add
sub
mov
mov
pop
cmp
iret
std
pop
ljmp
dec
mov
int3
add
fdivs
or
jb
stos
inc
xor
inc
sbb
xchg
cmp
pusha
adc
lods
in
scas
arpl
sbb
insl
sar
out
pop
daa
xor
jge
xchg
adc
mov
ljmp
xchg
mov
lds
std
sub
cmp
out
aaa
dec
comiss
stos
in
mov
pop
je
arpl
jp
or
test
ret
mov
cmpb
lds
decb
nop
pop
inc
xchg
dec
mov
sbb
fs
sbb
sub
mov
jb
mov
nop
sbb
cmp
es
jmp
dec
fistpll
lret
lods
and
adc
ljmp
or
leave
incb
out
aaa
push
or
out
pop
mov
xchg
out
int
fbld
mov
cmp
movl
fildl
mov
push
xor
ret
sbb
push
and
in
jl
adc
repnz
insb
stc
insb
xchg
cmp
sub
sahf
mov
out
jmp
and
cmpsl
gs
test
xchg
sub
pusha
in
scas
jnp
out
je
inc
lret
lret
pop
filds
dec
or
lods
lret
std
and
clc
in
adc
scas
xchg
xor
or
inc
mov
bound
scas
cmpsb
enter
push
xchg
lret
in
or
xchg
jo
test
mov
and
xor
and
data16
jbe
mov
incb
mov
movsl
cli
or
push
xor
push
pop
adc
jae
xchg
and
clc
push
xchg
dec
and
and
cmpsb
jp
ret
paddb
mov
repz
inc
pop
imul
lret
xor
mov
jae
sub
or
insl
pop
add
cs
inc
push
cmp
xor
jnp
std
sub
jmp
aam
lods
stos
push
jg
mov
ret
insl
movsl
movl
out
xlat
iret
dec
loop
aas
inc
lds
or
arpl
scas
cmp
fistpl
out
pop
rcll
cmp
add
call
or
cwtl
into
imul
jbe
loope
sbb
fldl
dec
cmp
out
add
dec
jnp
stos
mov
int
adc
fstpl
pusha
icebp
outsl
leave
add
mov
andl
je
pop
jmp
inc
push
outsb
dec
xor
xor
mov
sbb
xchg
imul
movsl
push
and
mov
das
sbb
insl
jge
dec
jno
mov
loop
xchg
sbb
mov
pop
cmc
xchg
stos
daa
add
mov
cwtl
jb
add
roll
test
aaa
xor
nop
pop
xlat
pop
jae
or
dec
jp
add
and
mov
lods
sbb
add
insb
cmp
xor
jmp
fwait
mov
pop
push
aam
mov
adc
push
shl
or
repz
push
xor
adc
out
fwait
dec
shrb
xchg
xorl
xchg
scas
pop
push
jge
cmp
and
ss
xor
mov
mov
loope
mov
cmp
je,pn
loope
stos
mov
xchg
pusha
pop
imulb
cwtl
mov
scas
jle
push
mov
rorb
outsl
cmp
mov
mov
sub
inc
ja
inc
shrb
or
leave
into
rcl
jmp
cmp
lret
scas
jge
mov
cmpsl
unpckhps
inc
adc
call
mov
mov
pop
sub
cltd
push
xchg
sub
lock
insl
popf
insb
lods
in
repnz
ret
xchg
ss
imul
jg
or
pop
mov
push
cmovl
test
sbb
mov
pop
in
lahf
bswap
psubw
subl
or
insb
into
clc
mov
std
inc
jae
sbb
jne
push
pop
scas
pop
xor
sbb
in
add
cmp
push
enter
scas
arpl
mov
out
pop
aas
jg
and
add
cli
scas
sti
inc
and
lds
int
push
push
hlt
pop
push
gs
ss
cli
ljmp
sti
mov
mov
mov
push
jo
inc
inc
xor
lods
push
adc
popa
popf
adc
mov
inc
inc
insb
leave
paddb
fdivrl
cmc
sbb
cmpsl
mov
stos
sub
daa
hlt
mov
sub
test
adc
inc
mov
shlb
cmp
jb
pop
push
mov
mov
or
iret
push
sbb
ret
sti
or
mov
lahf
scas
jns
xchg
xchg
adc
cmpsb
into
add
movsl
hlt
dec
testl
lock
out
ret
inc
repz
aas
jecxz
adc
mov
jecxz
xchg
ja
push
shlb
mov
fdivrs
fwait
lret
xor
add
mov
add
call
into
mov
je
xchg
not
push
imul
sub
sub
pusha
dec
jns
or
sub
jnp
je
popa
add
push
iret
addr16
cld
fadds
jecxz
mov
addr16
jg
pop
repz
jns,pt
cmp
sbb
dec
mov
sbb
mov
movsl
data16
popf
jno
pop
dec
sub
xor
pop
xchg
jmp
mov
dec
dec
pop
ret
xor
notl
jbe
mov
push
add
daa
xor
mov
hlt
push
incl
mov
orl
push
bound
in
mov
test
sub
daa
mov
xorb
mov
xor
pop
jne
inc
lds
scas
push
mov
mov
pop
repnz
mov
pop
jmp
dec
sub
test
ret
mov
sbb
push
adc
das
insb
mov
fnstcw
jge
into
or
enter
fldcw
mov
mov
pop
add
into
pusha
movsb
jmp
inc
or
mov
into
pop
xchg
mov
push
in
lods
fwait
push
inc
sbb
mov
xor
xor
sahf
dec
lahf
insl
in
sub
sub
cmp
imul
and
adc
mov
popa
cmp
nop
into
cltd
outsl
xor
add
xchg
clc
rclb
xchg
mov
push
mov
lods
arpl
mov
pop
aas
sbbl
add
scas
imul
leave
push
sub
out
or
jl
lock
jb
loope
or
xchg
jge
add
sub
sbb
ja
mov
stos
jle
cli
jbe
sbb
inc
mov
or
cmp
int
sub
mov
fildl
mov
dec
inc
sub
jle
sbb
mov
and
push
pop
enter
fcompp
cs
jb
jbe
std
add
push
xchg
addr16
stos
ds
cli
pop
cld
dec
loope
pop
gs
insb
fdivp
sbb
jl
movsb
je
out
and
stos
out
imul
ret
stos
mov
jl
dec
sub
enter
repnz
rclb
and
scas
inc
push
sbb
sub
mov
or
mov
pop
out
sbb
dec
fcomi
insb
ret
es
jno
add
in
dec
aad
decb
call
pop
jge
loop
fwait
subl
mov
sub
cmp
lret
jp
inc
insl
cwtl
mov
mov
sti
xor
jb
push
rcll
and
dec
and
and
push
cmpsb
and
aam
mov
mov
jmp
jb
push
xor
sbb
xlat
std
jns
add
cltd
and
push
daa
push
inc
lods
jp
mov
pop
pusha
sahf
dec
into
jb
mov
mov
mov
pop
push
xchg
sub
cs
mov
shl
in
xlat
mov
inc
cmpsb
xor
jns
lcall
mov
push
inc
adc
jle
inc
fxch
test
xor
cwtl
pop
dec
xchg
pop
bound
mov
and
mov
dec
mov
daa
mov
subl
insb
aam
mov
cmpsb
in
testl
fnop
push
xlat
test
push
adcb
mov
mov
mov
aas
pop
scas
in
sub
mov
add
stc
inc
cmp
xchg
int3
jae
packuswb
testb
outsb
daa
adc
arpl
adc
bswap
call
imulb
data16
loopne
je
outsl
or
fnstenv
cmp
scas
sbb
fsubl
sbb
filds
jl
adc
mov
dec
cmp
fstl
jbe
movsl
movsb
mov
inc
push
scas
jecxz
sub
aam
or
std
loope
lods
push
loop
fdivrl
stos
or
jl
scas
imul
js
or
pop
xchg
lods
int
in
nop
xor
call
movsb
das
adc
pop
in
push
aad
jbe
insl
mov
mov
xchg
jmp
and
scas
sbb
pop
je
lahf
scas
xor
and
lea
aam
cmp
mov
add
dec
shll
arpl
push
mov
mov
scas
push
push
cltd
mov
addr16
jg
loop
aam
das
mov
sbb
push
mov
dec
mov
pop
and
sub
mov
pop
inc
inc
inc
das
enter
jp
push
test
into
inc
jb
xchg
sbb
xchg
jmp
push
sbb
sbb
push
sbb
aad
aad
std
sbb
jno
inc
fcompl
fmuls
xchg
xchg
inc
cmp
pushf
push
jne
aaa
imul
popa
mov
ret
ret
jp
fdivr
stos
cwtl
lds
sub
inc
inc
lods
xor
sti
insl
inc
sbb
pop
cs
xor
sub
xor
cmp
dec
cltd
mov
out
dec
pop
test
arpl
dec
dec
lds
jg
sbb
dec
mov
add
xchg
adc
outsb
pop
push
andb
iret
pop
lods
adc
xor
cmp
push
cwtl
aas
aam
shll
mov
sub
int3
lcall
cmp
fadds
push
mov
push
dec
mov
ret
dec
addl
dec
in
mov
cmp
filds
dec
sahf
add
mov
mov
pop
or
cmp
mov
stc
mov
jo
bound
arpl
jno
test
mov
clc
xchg
jnp
sub
daa
lret
out
icebp
push
and
xchg
sub
pop
ret
and
daa
jb
int
subl
xor
jae
inc
jnp
fidivs
pop
sbb
jne
adc
adc
les
insb
nop
mov
scas
jge
mov
cmp
cli
test
mov
popl
and
nop
push
pop
mov
cmp
cli
roll
lret
data16
cmp
pushf
testl
inc
fiaddl
mov
cmc
stos
dec
mov
sbb
call
jecxz
lcall
or
subl
add
je
push
jmp
hlt
inc
sti
sbb
lahf
enter
mov
cmpsb
lds
nop
nop
mov
inc
movups
loopne
lods
cmc
lods
das
or
pop
jmp
movsb
sub
inc
loope
out
jb
adc
push
sahf
and
es
sub
push
mov
shll
mov
jns
jns
stos
mov
pushl
pusha
push
mov
adc
fsts
fdivl
jne
movsl
call
adc
cwtl
sbb
repnz
jne
dec
call
jmp
mov
jbe
xor
cwtl
data16
loope
push
push
pop
negl
push
lret
movsl
dec
mov
cmpsl
xchg
out
lret
xchg
int3
or
sub
cmp
outsb
aad
rcl
mov
inc
jecxz
out
mov
lea
push
test
pop
or
pop
aaa
sbb
and
shlb
push
jo
push
xchg
ret
push
imul
xchg
jae
dec
stos
shrb
lcall
inc
in
cltd
dec
ljmp
mov
sbb
insb
and
mov
mov
out
in
add
bswap
xchg
jno
test
jp
cmp
std
pop
pop
lds
jge
movsl
dec
jge
add
dec
mov
repz
jp
push
test
loopne
adc
mov
outsb
neg
pop
adc
repz
sbb
inc
in
ror
or
dec
xchg
shl
loopne
ljmp
lock
dec
test
mov
dec
out
jno
mov
pop
xor
jge
adc
xchg
mov
aas
lret
mov
xor
xor
test
pop
arpl
add
ret
filds
dec
lods
add
loopne
adc
and
fadd
mov
cmp
test
jb
xor
jnp
cmp
das
rcll
dec
fidivrl
pop
sarl
fisubrs
mov
inc
inc
scas
xchg
lret
test
in
shrl
inc
loop
arpl
cmp
pop
dec
cmp
js
and
mov
xor
test
insb
lods
and
std
xchg
int3
sbb
pop
xchg
mov
int3
aad
js
mov
subl
jbe
xor
push
lock
cs
jmp
addr16
add
sbb
mov
aas
mov
int
xor
repnz
pop
int
inc
sub
in
mov
fidivs
sbb
insl
xor
jb
pop
xor
add
mov
test
add
jge,pn
mov
or
arpl
popf
dec
add
mov
je
pop
ljmp
lret
xchg
sub
add
hlt
mov
mov
add
jle
add
push
dec
dec
fwait
cs
jge
xchg
mov
push
out
mov
jge
dec
dec
sti
mov
adc
jmp
test
sbb
mov
gs
sbb
adc
lcall
ljmp
movsb
gs
and
jbe
mov
loopne
nop
dec
or
les
jns
jno
movsl
in
cmp
call
mov
jbe
movsl
adc
jne
mov
lock
sub
std
cmp
lret
jl
repz
mov
repz
lahf
test
push
xor
add
mov
pop
inc
dec
mov
mov
xchg
mov
into
mov
sarb
sarl
imull
inc
push
dec
jge
seto
and
pusha
jl
cltd
sahf
lea
push
sbb
jmp
cmpsb
stos
add
mov
add
inc
adc
push
mov
push
cmp
popf
mov
sbb
fidivrs
and
clc
enter
xor
frstor
inc
adc
lahf
and
gs
int
nop
stos
test
cs
in
or
dec
jge
xchg
in
icebp
jle
cmp
mulb
push
imul
mov
and
sub
mov
inc
loop
push
movsl
cmpsb
test
mov
outsl
in
repnz
jb
mov
inc
fs
fimull
scas
jo
js
mov
push
xchg
xchg
fildll
int
sahf
dec
sub
sub
mov
notl
push
hlt
mov
cmp
sbb
subb
mov
sbb
add
scas
sbb
stc
insb
out
lahf
sub
xor
push
and
lret
jecxz
loopne
mov
jp
xor
mov
push
loope
scas
xor
fwait
sahf
aad
mov
sbb
inc
int
xor
sarl
mov
into
or
leave
mov
sub
mov
test
xor
stc
xor
add
test
es
push
sar
std
mov
mov
ret
fldcw
mov
inc
dec
jge
fcoms
enter
mov
push
sbb
in
xorb
xor
pop
add
add
lahf
push
xor
sub
mov
hlt
inc
cmp
pushw
lds
ret
mov
mov
xor
mov
js
mov
xchg
dec
rolb
mov
jbe
popa
add
outsl
out
into
ret
sbb
scas
inc
dec
hlt
lahf
xchg
std
or
or
nop
sbb
sahf
iret
rolb
jg
xchg
xor
sti
popf
js
adc
jnp
leave
xchg
in
jae
movsb
adc
xor
insl
xor
jecxz
jp
in
mov
xlat
aam
mov
lret
mov
rol
mov
pop
cmp
cmp
in
adc
xchg
test
mov
mov
ljmp
jge
adc
cmp
cmp
leave
sub
mov
stos
push
push
xor
lods
lcall
sbb
dec
call
xchg
mov
jecxz
mov
mov
fwait
test
addb
adc
add
shl
cmp
loopne
rcrb
dec
loop
or
mov
rclb
out
mov
fldl
xor
xrelease
fmuls
push
mov
and
orb
aas
outsb
mov
pushf
pop
mov
jp
sub
add
hlt
js
push
repz
lret
xchg
mov
outsl
scas
sbb
adcl
std
mov
repz
jb
mov
ret
rcrb
add
jle
jle
mov
pop
xor
mov
or
or
adc
pushf
pop
fisubrs
and
mov
push
lcall
cmp
sbbb
test
push
mov
es
sbb
mov
mov
in
push
mov
add
gs
xchg
mov
and
daa
mov
sbb
mov
insb
je
pushf
mov
mov
rcrb
inc
stc
movsl
insl
jle
aas
movsb
sarb
dec
add
cli
dec
mov
push
das
cmp
cmp
in
inc
dec
xchg
jmp
xlat
xor
xor
push
adc
jae
and
jp
aaa
popl
icebp
fs
adc
ret
sbb
mov
shrb
outsb
jo
sub
int
negb
and
jmp
add
and
sub
daa
fucomip
out
mov
daa
inc
or
and
pop
add
fs
pop
jns
mov
xor
call
cmpsb
xor
stos
cmp
cltd
pop
inc
mov
push
lods
dec
loop
sub
sbb
movsb
faddp
jl
mov
test
repz
inc
mov
push
jae
pop
imulb
addl
test
mov
cld
mov
add
stos
in
mov
add
inc
cwtl
inc
adc
adc
mov
cmp
add
push
adc
mov
orl
stos
je
or
inc
fmull
pop
adc
add
cmp
pusha
mov
ljmp
filds
pop
mov
or
xor
dec
je
mov
push
aam
dec
shlb
sub
dec
dec
mov
pushf
bound
push
mov
fsubl
cmp
xor
test
ljmp
xchg
je
adc
int
dec
lds
out
arpl
jp
adc
and
shlb
add
mov
mov
dec
add
outsl
jmp
cmp
pop
loope,pn
pop
in
les
mov
shlb
data16
mov
cmpb
jne
cli
lea
inc
in
repnz
inc
les
test
sti
push
sub
aas
insl
imul
iret
pop
jmp
or
lods
mov
out
push
gs
xor
and
or
fs
push
dec
jle
dec
mov
xchg
lcall
and
adc
test
mov
cltd
xchg
fisubrs
cmpb
mov
jl
jno
roll
add
rcl
fnsave
scas
rcr
testb
stos
sti
aam
insl
jl
add
addr16
cltd
sbb
mov
loopne
and
xchg
or
dec
xor
mov
shlb
in
sub
sar
pop
mov
nop
in
fnstsw
aad
test
enter
mov
mov
mov
xchg
loop
popf
sti
data16
imul
mov
xchg
inc
dec
and
stc
insl
lock
xchg
mov
jmp
or
push
xchg
sub
rcrb
dec
mov
cmc
xor
ficomps
pop
and
js
popa
rcrb
ja
aam
xor
and
mov
mov
fadds
mov
cmp
xor
insl
outsl
nop
ret
jge
xor
lcall
mov
push
mov
sti
push
lock
sub
and
loopne
movsl
shl
xor
add
aas
jmp
and
bound
sub
mov
fcompl
cmp
push
sti
mov
sahf
mov
cmp
test
inc
ds
into
cmpsl
mov
push
lds
push
aas
mov
inc
pop
sahf
imul
imul
xchg
test
add
mov
jb
xor
adc
mov
mov
add
xor
lods
mov
xchg
pushf
popaw
aad
aas
push
mov
test
popa
loop
stos
dec
cmp
insb
add
fnstsw
in
jmp
icebp
pop
inc
sahf
mov
xor
xlat
sbb
fsubl
jnp
test
lret
and
add
sbb
jmp
xchg
das
pop
js
sahf
ljmp
int
cmc
stos
mov
mov
aam
ss
sbb
mov
dec
loopne
xchg
sub
lahf
inc
dec
ljmp
loope
pop
andb
out
lods
dec
in
xchg
ja
addl
ficomps
cmc
addr16
dec
lfs
iret
es
pop
inc
lret
or
or
xchg
ret
insb
rorl
jae
cmp
cli
jl
mov
sbb
push
cmp
icebp
or
and
push
cmp
aas
inc
or
into
cs
in
xchg
mov
sbb
movsb
test
sbb
fisttpl
scas
data16
push
es
mov
or
mov
stc
sbb
shlb
fwait
lahf
int
sub
aaa
ja
adc
cmp
add
fwait
mov
scas
jo
sub
pop
sbb
sbb
inc
stos
bound
push
xor
or
ficoml
in
xchg
repz
mov
sub
mov
mov
sub
xchg
pop
dec
mov
mov
jmp
leave
dec
jbe
stc
cmc
dec
and
je
mov
icebp
fisubs
sub
decl
andl
rclb
daa
add
aam
lret
fldt
mov
lcall
inc
movsl
sbb
movsl
xchg
and
nop
cli
mov
pop
cmp
adc
rorl
or
sbb
xor
hlt
dec
inc
sub
call
mov
xor
inc
push
and
sti
int
popa
aam
ret
fs
lret
test
sbb
lea
sbb
pop
xchg
dec
inc
mov
jmp
pop
push
pop
push
pop
push
xor
and
inc
stos
inc
add
fcomp
and
jae
jp
adc
adc
jo
mov
insl
sti
cmp
inc
jp
jmp
notl
pushf
jmp
inc
pop
xchg
cmp
sub
push
or
mov
pop
ss
stc
and
push
dec
imul
inc
fdivrs
inc
and
xchg
inc
in
scas
aam
and
cltd
into
lahf
pop
int
jle
loopne
jmp
mov
aam
adc
fistpll
or
stc
fdivrl
or
test
fildll
dec
jl
lods
shrb
jno
outsb
stc
jg
push
fdivp
jg
andb
movsb
js
mov
jl
outsl
outsl
mov
aad
lea
push
test
and
cltd
dec
aad
mov
jmp
dec
xor
add
xchg
push
inc
scas
ljmp
std
mov
xchg
inc
pop
js
push
cwtl
and
mov
daa
sbb
sahf
insl
and
xchg
dec
or
mov
pop
out
xor
pop
push
ret
mov
push
pusha
rclb
aaa
das
sbb
pop
dec
lret
clc
das
test
iret
fisttpll
mov
sbb
cli
inc
js
loop
movsb
add
and
imul
inc
inc
fwait
pop
inc
jle
jne
pop
int3
shrb
or
roll
in
dec
faddp
or
das
js
jno
adc
sbb
push
mov
loop
imul
arpl
movsl
cmp
pop
out
pop
loope
jp
fistpll
inc
sbb
add
xor
pop
or
inc
stos
sub
leave
jp
lock
cmpb
inc
mov
mov
xchg
adc
fs
faddl
xchg
ret
out
imul
hlt
inc
sub
cli
push
pop
pop
fisubs
cmp
mull
jb
cmpb
in
inc
and
pop
inc
mov
mov
or
push
dec
enter
jne
sub
inc
cmp
pop
dec
aad
and
xchg
cli
js
in
testl
mov
les
xchg
gs
jne
sahf
sti
jns
aaa
sbb
pop
ds
xbegin
addb
les
imul
or
cmp
rorl
std
out
aaa
xor
mov
jnp
dec
jbe
or
stos
push
fadd
jae
icebp
sbb
fldcw
sbb
mov
xchg
stc
cmp
sbb
add
fbstp
add
movlps
pop
int
add
iret
adc
mov
out
int3
xor
shrl
cmpsl
jns
out
pop
fidivrl
out
pop
addr16
mov
loope
jo
sbb
insb
popl
lods
ret
repnz
aaa
dec
xor
xor
mov
xor
scas
sbb
cmc
in
mov
jg
add
stc
movsb
bound
ljmp
and
sub
imul
cmp
add
idivb
fidivl
jge
push
xchg
mov
mov
mov
mov
rcll
cwtl
mov
das
stc
or
adc
ret
outsb
inc
sub
mov
cmp
mov
mov
cmpsb
xchg
addr16
out
js
icebp
vpsubusb
icebp
pop
mov
sbb
cmp
imul
xor
dec
ss
sar
ret
les
dec
ret
bound
xor
rclb
mov
mov
sub
mov
inc
push
xchg
xchg
inc
jo
out
lods
popf
jmp
cld
cmp
sub
divps
push
ret
fs
or
xchg
in
and
dec
mov
outsb
dec
push
xlat
psrlq
ror
xor
loopne
and
call
aas
jecxz
xchg
out
sti
aas
clc
int3
xchg
lahf
push
dec
hlt
lret
test
push
jp
repz
cmp
mov
enter
add
out
push
mov
jo
adc
push
je
popa
lds
sbb
and
sahf
ret
in
cmp
adc
inc
adc
push
or
fwait
and
ja
jnp
mov
xor
cmp
mov
cmp
das
fdivs
mov
cmp
cli
dec
jno
ror
inc
popf
js
out
cmpsb
mov
inc
or
insl
dec
stos
pop
in
cmpl
mov
mov
xor
inc
push
and
jp
std
out
mov
lea
aam
gs
mov
push
rorl
test
cmp
mov
lahf
dec
push
fwait
lret
outsl
outsb
insl
or
add
jne
iret
adc
add
rclb
sub
adc
lret
fwait
cmp
xchg
jbe
fwait
pop
rorb
icebp
adc
mov
bound
js
in
sbb
inc
fldcw
jbe
cmpsl
and
fstpl
dec
int3
mov
stos
push
sub
fstl
into
lea
sbb
nop
cmc
stos
sub
add
popa
cmp
scas
inc
mov
pushf
jb
pop
pop
dec
aad
pusha
je
fisttps
lods
cmp
jnp
mov
scas
in
arpl
jae
ss
jle
popa
sbb
push
mov
mov
das
inc
add
stos
les
int
movsl
lods
pop
dec
je
test
cltd
mov
cmp
xor
sub
enter
or
pop
outsl
andb
or
rcll
ss
jbe
cli
test
mov
sbb
dec
test
in
outsb
xchg
mov
testb
je
pop
in
sbb
sti
arpl
lahf
sub
sbb
and
mov
pusha
aas
fucomi
inc
inc
dec
fwait
mov
xorl
xchg
ja
stos
xor
mov
bound
popa
inc
jnp
imul
mov
and
insl
scas
and
pop
test
loope
mov
lock
clc
inc
cltd
movsl
enter
pop
or
and
pusha
aaa
out
stos
mov
xchg
inc
push
cmp
in
incb
push
sub
push
or
addb
push
cmp
lock
jge
xchg
jo
adc
mov
add
and
mov
mov
clc
xchg
aam
or
lcall
lea
ud1
inc
aaa
das
dec
or
fcoms
sub
pop
adc
test
xchg
push
pop
loope
scas
jle
jnp
test
pop
cmp
dec
sub
scas
jp
data16
int
fstpl
shll
verr
repz
aam
loop
pop
cmp
xchg
and
add
dec
mov
lahf
jb
cmp
iret
dec
stc
jnp
rcr
rcrl
stos
lcall
add
aad
adc
jns
xchg
into
and
jns
int3
movsb
ja
jae
mov
xchg
push
imul
scas
push
imul
jae
btr
adc
sub
pusha
fwait
cmp
std
loope
fistpll
add
in
add
adc
bound
push
sar
xchg
adc
into
cmpsl
push
cmpsl
sub
mov
push
push
sub
fisubl
mov
mov
push
add
pop
sarl
push
sahf
sti
mov
repz
fnstsw
ds
adc
jmp
and
repz
pop
push
and
fmuls
popa
mov
sbb
add
rcrl
out
adc
nop
nop
cmp
jecxz
sar
pop
inc
mov
push
xchg
or
sub
pop
movsl
mov
aaa
jge
fistpll
cmpsb
lret
loop
xchg
cmp
jmp
mov
sahf
int
sub
adc
sarl
and
xor
movsl
cli
jmp
lods
in
mov
inc
out
enter
add
push
int3
sar
cmp
jb
cwtl
lock
fwait
lock
xlat
aad
or
aaa
bound
imul
outsb
dec
jp
mov
mov
and
cltd
cld
out
mov
lret
nop
pop
push
daa
pop
push
stc
lahf
iret
lret
adc
sbb
popa
push
dec
adc
in
addr16
push
icebp
mov
jp
mov
popa
cs
mov
aas
xor
or
xor
dec
and
pop
lret
fisttpl
cli
mov
adc
shlb
call
pushf
scas
xchg
xor
and
cmpsl
or
and
adc
shrl
mov
jbe
scas
mov
fisubrs
adc
xorl
add
xchg
pop
outsl
mov
outsl
jbe
add
mov
xchg
jp
xchg
adc
and
mov
test
mov
data16
mov
jge
push
rcl
mov
mov
out
mov
jl
fstp
int3
jecxz
jmp
xlat
jmp
shlb
pop
jecxz
mov
cmp
push
dec
pop
call
ss
lret
and
cmp
lea
mov
sbb
mov
mull
lahf
dec
and
sub
mov
mov
push
lcall
aas
mov
xor
aas
push
dec
lea
mov
xchg
arpl
push
out
sub
adc
mov
fiadds
mov
in
sbb
jns
dec
add
fbstp
push
mov
lods
leave
negb
pop
mov
in
addl
or
inc
jne
xchg
ret
xchg
cs
in
push
add
mov
cld
inc
push
mov
cli
lock
pop
adc
in
mov
rcr
xor
lret
pushl
fdivl
mov
mov
out
inc
mov
adc
inc
sub
pop
cltd
test
test
idivl
xchg
out
and
mov
daa
add
shrl
jnp
jmp
repz
xlat
stos
pop
test
xlat
cmp
mov
out
mov
jg
push
hlt
test
mov
mov
mov
mov
jp
mov
jns
fistpll
mov
clc
jge
lret
sar
je
faddl
sbb
mov
cltd
cmp
stc
add
mov
clc
int
sub
lock
or
repnz
cs
outsl
sub
lods
cmp
add
mov
push
and
dec
dec
push
push
push
adc
and
aad
or
add
cmp
push
pop
repnz
dec
jo
push
jns
xchg
andl
mov
adc
or
cmpsl
sbb
dec
pop
pushf
dec
mov
aad
mov
ret
lock
les
push
aad
pop
or
push
sbb
jno
push
out
add
inc
les
mov
push
pop
xchg
xchg
adc
nop
jecxz
jecxz
xchg
sub
mov
les
shrb
pop
mov
mov
mov
in
lods
rclb
jnp
jmp
xchg
pop
lcall
cmpsb
push
cmp
in
push
test
lcall
jae
nop
add
xlat
scas
test
push
popf
loope
mov
ret
out
lahf
mov
jns
out
add
int
movsb
sub
mov
fwait
insl
mov
jp
mov
fiaddl
and
cltd
cmp
jo
jo
je
fisubrs
clc
fisttpl
ljmp
cmp
add
pop
inc
in
sbb
daa
sub
cmc
xchg
call
xchg
mov
iret
clc
lods
mov
int3
xor
cli
jle
and
lcall
jbe
dec
test
mov
call
sbb
and
mov
mov
mull
push
inc
call
sub
sbb
push
psrad
pop
jge
inc
test
sti
mov
add
xor
std
cmp
arpl
pusha
es
pusha
xor
mov
jge
testl
jp
lahf
or
cmc
fwait
stc
in
sub
mov
outsl
shlb
inc
adc
mov
mov
inc
mov
test
es
scas
movsb
dec
mov
ja
cld
cmp
insl
ret
add
and
mov
xchg
cmp
jns
mov
mov
push
pop
mov
mov
mov
dec
stc
arpl
std
les
push
push
fcoml
or
in
pop
stos
and
roll
cmp
push
clc
incb
push
adc
shlb
xchg
push
fadds
into
movsb
pusha
lds
daa
mov
shl
sahf
movsl
xchg
imul
cmp
push
sub
jl
or
out
cwtl
jo
mov
and
repnz
push
test
sbb
in
test
dec
mov
orb
pop
jmp
sub
jbe
mov
push
cmpsb
in
das
mov
or
fcmovb
aas
and
loopne
dec
inc
lret
cmp
fwait
or
jno
notl
rorb
pusha
aad
jge
insl
mov
cmp
adc
push
push
cmc
adc
mov
sub
sbb
test
mov
dec
popf
addr16
fimull
mov
lret
pop
dec
scas
dec
fstpl
adc
push
popf
pushf
mov
mov
xor
dec
inc
ds
call
jmp
lret
inc
mov
or
xor
pushf
xchg
stos
out
jl
lods
sub
mov
fisubs
adc
push
add
pop
pop
bswap
pop
cmc
xchg
jns
cltd
mov
fs
add
xchg
ret
xchg
insl
out
lret
out
inc
popa
lea
fistl
test
sbb
dec
sbb
cmc
lahf
popa
push
add
dec
push
push
rcl
pop
pop
loope
mov
xchg
fbld
aas
out
enter
push
jge
mov
cs
jl
pop
gs
cmp
pop
inc
push
decl
adc
xchg
and
adc
xor
sahf
mov
pop
lock
mov
loope
nop
add
dec
sbb
aam
xchg
jo
out
mov
stos
inc
push
lea
or
outsb
rolb
mov
into
das
sbb
adc
test
sbb
jp
inc
rcr
cmpsl
pop
add
xchg
cmc
mov
pop
fst
xor
filds
cmp
mov
sub
sub
sbb
inc
testl
jbe
iret
insb
jl
pop
sub
fldt
sbb
push
shrb
push
cmp
lea
aad
subl
inc
mov
scas
aam
lods
cwtl
daa
push
rcrl
loope
into
mov
sarl
popa
jmp
mov
sbb
std
std
icebp
add
inc
add
pop
shl
jae
sti
cmpsl
adc
and
fwait
hlt
add
aad
aad
mov
cmp
mov
push
cli
mov
int
jmp
iret
fidivrs
sub
pusha
mov
pop
inc
xchg
mov
flds
mov
sub
lds
mov
pop
inc
xchg
jmp
and
inc
in
mov
addr16
cmp
gs
mov
ds
nop
aaa
fwait
bound
test
je
or
sub
lds
jge,pn
sahf
fcoms
jmp
dec
lods
xchg
mov
dec
xor
je
leave
int3
sbb
les
fidivs
pusha
push
xor
pusha
lods
mov
pop
in
sub
sbb
sbb
push
iret
and
mov
rolb
pop
push
xchg
aad
inc
mov
test
mov
mov
sahf
lds
mov
and
dec
and
mov
push
xchg
pop
into
es
cmpsb
adc
xchg
and
fwait
push
lcall
cmp
push
mov
pop
dec
xchg
in
inc
ret
and
int3
addb
test
inc
sub
in
and
out
jne
rcrb
sbb
cmp
mov
cmpsl
xchg
sub
int3
xchg
loopne
jnp
add
mov
out
cltd
pop
pop
outsl
aam
negb
jo
sub
sub
cmp
int
mov
aad
jle
sbb
xor
bound
push
jo
dec
cmc
xor
push
push
lret
sbb
enter
or
cmp
adc
xchg
cmp
xor
dec
xor
push
pop
push
das
stos
cwtl
in
xor
push
cmp
dec
mov
stos
mov
push
les
testb
mov
insb
xchg
pop
dec
out
insb
jge
mov
shlb
xchg
popf
lds
inc
outsb
xchg
stos
dec
fimuls
ret
fdivrl
in
fdivl
fst
xchg
lret
notb
lahf
sub
ret
popf
leave
inc
int3
push
jne
jg
mov
mov
jl
loopne
cmpsl
cmpsl
mov
xchg
call
xchg
pop
mov
sub
xchg
push
push
and
mov
mov
cmp
repnz
push
push
mov
xorb
dec
pop
out
mov
cmp
movsl
inc
cld
out
into
aad
cmp
push
cmpsb
stc
je
push
cli
leave
inc
scas
xlat
call
jmp
dec
ret
sub
push
insl
pushf
jnp
arpl
dec
xor
push
adc
cs
cli
add
gs
sbbl
leave
jae
popf
lret
and
popf
popa
int3
xchg
roll
jns
fsub
cwtl
mov
bound
push
or
push
roll
jmp
xor
dec
scas
cltd
aam
xor
add
mov
lods
pop
or
movsl
mov
test
dec
xor
and
pop
je
std
jbe
jge
cmp
xchg
jbe
hlt
les
cmpsl
mov
sub
popf
insl
pop
dec
scas
fs
int
enter
mov
and
pushf
xor
lcall
mov
fwait
xor
jae
mov
push
cwtl
mov
cld
daa
push
test
out
aad
scas
jle
cmc
xor
insb
fisubs
push
mov
sub
push
es
imul
in
pop
mov
iret
fidivrl
dec
sub
mov
push
dec
xor
mov
xchg
push
jo
add
adc
cs
js
cmp
mov
jle
rcll
mov
mov
push
loopne
arpl
push
jecxz
aaa
fadds
cli
add
inc
jb
dec
loop
xor
into
bound
sbb
ss
test
add
dec
imul
dec
push
and
je
pop
dec
loope
int
cmp
inc
rolb
push
fnstsw
outsb
jp
inc
sbb
mov
arpl
inc
mov
fstp
stc
jns
into
mov
aam
insb
or
inc
popf
add
fistpl
rorb
lods
mov
test
out
lea
vpcomuw
fisttpl
outsl
je
add
dec
add
scas
shl
rol
or
mov
xor
jno
cli
adc
dec
jo
inc
aas
pop
loopne
add
out
add
mov
jae
movsl
rcr
lds
xchg
add
adc
and
sub
addr16
icebp
aaa
sbb
shr
xchg
cmpsl
jae
cmp
add
fcoms
sahf
mov
testl
ljmp
fstpt
lret
jl
sub
pop
ss
xor
sub
inc
ds
mov
movsl
jo
pop
dec
xorb
in
adc
add
jnp
inc
push
js
mov
ds
push
sbb
mov
imul
and
xchg
adc
call
sub
push
fisubs
adc
xchg
cltd
insb
push
push
ret
mov
dec
jmp
push
in
adc
adcl
sbb
data16
inc
cltd
mov
fcomp
ljmp
addr16
and
inc
shlb
popa
pop
std
jle
and
xor
lahf
movsl
jg
push
rorl
shrb
fcmove
push
scas
scas
mov
xchg
pushf
cmp
pop
fdivrs
push
or
scas
scas
ja
sub
sbb
xor
testb
inc
aas
cmp
ss
cmp
rcrb
push
mov
lcall
pop
push
pop
in
bound
mov
pop
test
in
lods
scas
in
push
lock
sbb
loopne
jne
rcr
sbb
clc
pop
push
push
repz
dec
mov
or
andb
fmull
gs
xor
loope
pop
faddl
inc
fwait
les
insl
or
test
mov
push
lea
mov
mov
push
pop
fldcw
push
mov
mov
repnz
and
xor
stos
pop
add
dec
adc
add
lea
das
lds
int
out
and
jo
jp
push
subb
mov
inc
sub
xlat
pop
sti
jns
xor
fimull
cli
in
sbb
inc
mov
orb
nop
xor
cmp
lret
mov
shll
push
cmp
imul
xchg
hlt
imul
mov
inc
loop
sbb
mov
out
jmp
movsl
into
xchg
pop
sub
pop
jg
adc
movsb
test
iret
or
pop
sub
push
mov
insb
dec
jnp
insl
jmp
cltd
sbb
imul
icebp
xor
imul
sub
icebp
cs
xchg
in
adc
ret
cmpsb
mov
repz
subb
push
mov
add
sarb
pop
int3
sbb
test
mov
lea
icebp
pop
and
mov
lcall
inc
jle
movsb
repz
aas
not
enter
lret
out
bound
js
xchg
popf
lret
idivl
jo
js
sti
pop
jne
and
inc
test
in
and
dec
pop
lret
adc
cmp
lock
xchg
xor
sub
jmp
jbe
dec
dec
dec
dec
push
and
inc
mov
test
and
insl
insl
sbb
jmp
dec
dec
lds
insb
iret
addr16
sub
pop
jp
inc
sub
xor
inc
les
mov
fistl
negl
push
imul
inc
push
lahf
pusha
icebp
aaa
mov
fcomps
mov
or
xchg
je
arpl
repnz
jne
or
addr16
stos
sub
mov
mov
jecxz
xor
sbbb
pop
mov
addb
cld
add
test
imul
filds
rol
push
fstpt
dec
pop
jae
cwtl
pop
loop
mov
mov
aad
or
adc
push
nop
xlat
sbb
cwtl
inc
xor
and
pop
sbb
addr16
dec
lods
scas
and
cld
pushf
or
add
enter
popl
gs
push
in
xchg
or
sub
cmpsl
fs
ret
test
fucomi
jbe
mov
ss
pushf
les
inc
mov
dec
lods
jle
jmp
dec
dec
mov
jl
add
sub
mov
jg
xlat
movsl
pusha
fisttpl
jl
cmp
aam
sbb
add
xor
push
rcrb
jle
sub
std
or
outsl
dec
movsl
pop
rclb
test
nop
pop
push
cmp
in
out
add
dec
aad
or
xlat
and
dec
and
cmp
cmp
jg
jns
jle
mov
lahf
test
dec
out
pop
xchg
xchg
add
xchg
pushf
hlt
fs
ljmp
or
or
lahf
sahf
test
and
push
fildl
das
inc
xchg
scas
mov
pop
ljmp
rcrl
fcmovnu
test
push
jle
jo
jae
cmpsb
shlb
inc
jle
push
dec
fisubrl
inc
in
sti
gs
sbb
aam
popf
ljmp
mov
xchg
dec
pop
iret
xabort
fiaddl
lret
pop
mov
stos
loope
push
jae
pop
xorb
jb
jg
shrl
mov
stc
rcrl
add
add
push
lea
sbb
in
jb
stc
ss
xchg
ja
sub
cltd
fsubs
jl
mov
enter
push
adc
cmpsb
lds
sbb
inc
push
sub
jecxz
inc
cmp
loopne
jbe
cmpsl
inc
dec
sahf
mov
mov
mov
sti
dec
incl
jmp
jae
jge
or
xchg
lods
in
dec
sbb
lcall
jno
mov
mov
mov
sub
push
scas
pop
clc
dec
ja
cld
fcomi
lcall
fnstenv
fimuls
mov
or
jle
subb
pushf
adc
adc
inc
lcall
fdivl
test
pop
add
xchg
scas
adc
dec
out
mov
jge
pop
ljmp
int3
jge
adc
dec
movsl
cmp
jl
negl
cmp
xchg
cmpsb
int3
sahf
pop
scas
push
mov
inc
jmp
jmp
stos
js
dec
dec
pop
mov
sub
mov
lods
mov
cmp
xorl
clc
daa
lods
add
xorl
in
cli
sahf
inc
xchg
dec
pop
pop
jmp
es
add
mov
lock
push
inc
pop
das
mov
insb
pushf
popa
mov
std
dec
test
xor
mov
fildl
sbb
jle
mov
bnd
inc
jae
mov
or
fsts
fadds
mov
imul
repnz
je
dec
dec
adc
pop
push
outsb
dec
mov
outsl
cwtl
add
rorb
fnstenv
icebp
imul
and
loopne
pop
imul
pusha
or
out
inc
sub
mov
mov
inc
iret
mov
faddl
fsubl
jle
xchg
or
add
mov
add
into
add
jnp
je
movsb
mov
out
std
jo
sub
pop
stos
cmp
fiaddl
xchg
paddb
mov
xchg
mov
xor
adcb
xor
loop
cmp
ljmp
cmp
cld
movsb
daa
cmpsb
mov
dec
push
xor
test
iret
adc
icebp
jno
out
dec
sti
or
jno
iret
stc
mov
cmp
mov
sub
mov
aam
adc
lcall
pop
mov
jmp
and
mov
xor
mov
ret
cmp
divb
pop
add
and
jnp
fwait
pmaxsw
dec
sbb
cmp
push
mov
cmp
mov
push
add
push
fisubl
fildll
pop
xor
cltd
xor
sahf
dec
xchg
fwait
sbb
icebp
push
sub
clc
das
rolb
fcomp
cmp
push
jg
xchg
or
scas
and
mov
push
out
stc
rcll
sahf
lcall
xor
ss
cmc
add
fmuls
cld
mov
xor
mov
sub
mov
and
inc
mov
cs
jnp
push
ja
fistl
mov
mov
cmc
pusha
push
int
inc
sub
orb
imul
and
cmpsl
js
inc
mov
std
or
dec
jo
pop
pop
pop
addr16
sbbl
mov
add
cmpsb
ja
lret
pop
test
repnz
out
mov
or
outsl
mov
pop
aas
jns
sub
dec
pop
adc
mov
push
fwait
cmpsb
xor
lcall
rol
push
mov
shrl
push
sub
leave
je
out
mov
in
mov
jae
xor
xchg
pop
or
aas
dec
setp
push
jns
enter
cmc
in
push
out
xor
ljmp
push
sub
pop
xchg
push
mov
sar
push
scas
fwait
popf
xor
push
ret
sbb
sahf
xchg
mov
test
or
sub
das
pushf
lcall
call
dec
scas
out
inc
adc
and
call
adc
addr16
or
or
inc
push
into
mov
inc
inc
pop
sbb
fidivrl
push
cmp
mov
rcl
shll
push
inc
jbe
lock
pusha
and
dec
cmp
popf
and
in
aam
fbld
jp
mov
cmp
lea
adc
sbb
push
leave
in
dec
test
addr16
dec
push
ja
daa
in
sub
mov
adc
pop
lahf
lock
ret
imul
sbb
notb
mov
mov
rcll
xchg
sbb
or
fldenv
mov
xchg
mov
xor
xorl
dec
or
inc
insl
jge
dec
push
and
pop
sar
pop
loop
aad
test
mov
in
jecxz
je
outsl
arpl
cmpsl
cld
xor
or
dec
and
xchg
insb
ss
mov
sahf
cmp
push
xchg
xor
in
add
xor
mov
mov
push
sub
sub
dec
fwait
xchg
jle
mov
ret
inc
xor
mov
out
imul
adc
fxch
pop
mov
push
loopne
pushf
fistpll
es
inc
cmpsl
int3
fnstsw
xchg
mov
loopne
jecxz
mov
lods
or
cmp
mov
inc
push
movsl
and
jne
xchg
ja
mov
sti
push
cmpsb
insl
lods
in
mov
sbb
loopne
xchg
clc
push
mov
mov
nop
mov
lods
clc
hlt
nop
sbb
cmpsb
fcoml
popf
sub
cs
pop
cld
jl
add
test
inc
stos
jns
cmpsb
sub
fldcw
popa
pop
sbb
sub
popa
dec
es
imul
dec
mov
out
ret
xchg
lcall
inc
mov
jmp
jge
xchg
rcl
inc
cmp
fwait
mov
fisttps
xor
test
sbb
inc
xor
bound
jae
xor
daa
pop
sub
dec
lods
rol
sbb
sbb
pop
repnz
xor
jle
pop
lea
lcall
mov
aad
push
pop
mov
stc
jno
insl
dec
es
ret
fdivs
xor
in
pushf
cld
call
inc
inc
pop
nop
sbb
popa
rorb
cmc
inc
std
int
out
es
and
cmpb
xchg
jno
jb
jg,pn
test
fistpl
andl
les
jbe
cs
mov
sbb
test
cs
xchg
mov
out
jl
lock
xchg
outsl
ss
in
pop
shrb
js
fwait
dec
or
jo
mov
rolb
inc
je
mov
pop
das
dec
fimuls
mov
pop
inc
mov
fnsave
insb
ds
push
mov
and
mov
jg
mov
sbbb
adc
jge
push
and
lods
fwait
push
cmp
cwtl
insl
lds
insb
and
xor
out
inc
es
imul
pop
test
mov
pop
out
ds
push
cs
gs
sub
movsl
sbb
pop
pop
jmp
jmp
leave
fnstsw
mov
aas
adc
out
mov
jle
cltd
adc
shrl
pop
ljmp
pop
mov
movsb
test
loopne
adc
scas
xchg
jge
lock
jnp
enter
push
push
aam
rcr
xchg
fwait
sbb
lock
lods
loop
xchg
lea
and
add
and
push
stc
jne
mov
rcll
jecxz
pop
push
sbb
cmp
loopne,pn
out
xor
inc
and
and
pusha
movsb
mov
cmpb
sub
cmp
or
lods
inc
imul
bndstx
sub
or
sub
sarl
sub
int3
daa
mov
inc
or
jge
ret
test
xchg
jns
out
add
cmp
ret
push
push
leave
cmpsl
mov
test
mov
pop
push
pop
jl
add
cmpsb
loop
inc
repnz
pop
add
out
mov
cmc
lods
push
sub
inc
mov
mov
mov
movl
stc
push
dec
mov
sbb
cmp
jno
addl
pop
push
inc
ds
test
xchg
imul
daa
outsb
add
es
icebp
popf
daa
icebp
test
push
dec
bound
sbb
cmpsl
cmpsl
lcall
sub
adcl
scas
and
sbb
lret
adc
das
sub
mov
pushf
xlat
out
sbbb
lret
movsb
or
sub
in
decl
adc
sbb
and
in
and
test
outsb
and
loopne
or
adc
sub
gs
or
insb
out
sub
popf
push
shll
dec
dec
into
cltd
out
dec
and
ljmp
cli
adc
ja
je
ja
jo
out
js
push
xchg
clc
bnd
mov
mov
jge
cltd
outsl
adc
fs
addl
in
int3
ss
add
dec
test
or
cmpsb
and
jo
mov
lods
call
inc
and
cmp
test
mov
xchg
and
sahf
hlt
and
and
and
or
mov
push
mov
jo
xchg
mov
scas
gs
jns
dec
fildl
jmp
les
sahf
pop
pop
cmp
cmpb
cmc
nop
sbb
ja
negl
arpl
mov
adc
lods
pop
dec
pop
xchg
imul
xchg
pop
pop
mov
push
add
and
jns
adc
outsl
test
or
roll
jmp
or
pop
add
ds
jge
fisttpll
push
fisttpl
icebp
shrl
fsubl
push
cvtps2pd
movb
push
xorl
mov
mov
nop
lods
or
ret
mov
sti
aam
cmp
ret
sbb
fwait
push
pop
jle
sar
andb
cli
cmpl
movsbl
orl
push
frndint
inc
movsl
jne
loope
cli
jo
mov
and
ret
pop
jge
cli
and
movsb
jle
mov
pop
dec
and
jp
inc
cltd
mov
inc
adc
std
icebp
jecxz
sub
std
fdivr
in
fsubp
in
add
mov
rcrb
mov
repz
add
ds
push
out
popa
ficoms
popf
in
pop
frstor
dec
push
aaa
scas
dec
sub
adc
inc
out
jno
leave
pop
shl
mov
ja
stc
xchg
shlb
enter
insl
sahf
sub
mov
fldcw
mov
out
push
imul
cmp
sbb
mov
fs
jbe
rcll
push
add
movsb
sbb
mov
lds
or
mov
fxch
sub
pop
bound
mov
enter
jecxz
mov
into
in
daa
mov
sub
or
out
push
rcl
andb
andb
xchg
mov
sub
mov
xor
rcrl
icebp
pop
test
mov
and
ja
sbb
jae
popa
or
xchg
icebp
leave
jbe
push
sti
mov
cli
aaa
sub
mov
fdivs
push
mov
pop
mov
jg
pop
fdivr
add
sub
ret
ror
cmp
mov
jecxz
loope
push
sarb
sub
xchg
xchg
xorb
cmpb
cmpsl
orl
rorb
cwtl
hlt
cmpsl
es
mov
sub
insb
sub
nop
push
jbe
lods
mov
jecxz
iret
cmp
aas
icebp
cmp
cmc
sub
fiadds
xchg
ds
sti
imul
push
lret
pop
push
stos
mov
mov
adc
pop
enter
push
sub
add
stc
jns
pop
sbb
lock
mov
mov
pop
push
insl
inc
sahf
jbe
xor
mov
pop
ss
xchg
sub
into
js
dec
lea
sub
in
push
push
inc
cli
mov
add
dec
rolb
pusha
push
test
jmp
addr16
push
xchg
mov
sbb
std
das
mov
les
and
dec
testl
lahf
out
adc
dec
lods
int
mov
adc
and
loopne
jg
mov
icebp
xor
xchg
movsl
lret
and
out
lds
or
cmp
jmp
add
rcll
int3
jbe
fwait
rol
xchg
insl
cmpsb
in
mov
arpl
sbb
mov
insl
push
cs
or
cmp
jmp
xchg
icebp
lds
stc
jne
fimull
stos
dec
jmp
push
mov
and
es
lea
icebp
jae
push
out
dec
adc
cmp
xchg
sub
inc
es
cmp
and
mov
mov
stc
jle
aaa
xor
aas
sbb
lea
mov
shlb
pop
lcall
add
das
jg
xor
jbe
sub
out
mov
mov
xchg
imul
std
mov
push
sub
imull
mov
pop
jp
adcb
in
cmp
std
outsb
stos
loopne
jnp
push
inc
mov
pusha
dec
inc
add
or
xor
outsl
popa
f2xm1
push
jle
test
fcomps
push
and
sti
orl
int
enter
jp
add
clc
add
mov
int3
lea
xor
fistpll
pop
inc
inc
test
insl
push
andl
jle
ret
jp
addr16
xor
cmc
cld
popa
sub
in
xchg
adc
into
sbb
jp
cmp
lcall
dec
push
mov
pusha
test
scas
dec
out
or
rcll
xor
popl
mov
add
out
pop
sub
sbb
inc
xor
adc
jmp
dec
por
jae
or
dec
mov
roll
or
jg
pushl
push
rorb
push
les
adc
jge
daa
xchg
fstps
sub
xor
je
std
scas
push
sbb
add
cltd
mov
add
push
adc
mov
inc
in
jne
shrb
loop
and
int
aad
xchg
push
addr16
roll
in
imul
stos
mov
add
stos
stos
mov
pop
cmp
cmp
out
lret
mov
addr16
push
xchg
ljmp
out
pop
pop
repz
jns
mov
cwtl
inc
imul
into
repz
mov
movsb
sub
call
adc
pop
pop
fmul
outsb
dec
jg
and
arpl
fstps
nop
aas
sub
sub
daa
test
lret
out
jns
sbb
test
cmp
icebp
or
jmp
pop
imul
inc
pop
scas
mov
inc
leave
in
mov
fdivl
jl
xor
xchg
inc
or
and
popf
jo
test
popa
rorb
push
outsb
repz
repnz
push
movsl
cld
enter
pop
das
xor
mov
cwtl
lret
movsbl
inc
push
cs
or
jle
in
jne,pn
fildll
loopne
fistpll
ljmp
mov
rolb
loop
arpl
or
adcl
test
inc
push
push
inc
and
pop
repnz
inc
cmp
sub
adc
jno
jg
add
repnz
jne
dec
popf
loope
mov
push
ret
sub
cs
jno
jecxz
jle
cltd
movsb
out
test
cmp
out
adc
or
cmp
pusha
mov
rcrl
loop
push
lret
fwait
push
pop
lds
jecxz
xor
fcoms
push
lahf
adc
aam
pop
leave
xchg
jmp
cmp
xor
xchg
testl
push
lahf
inc
sub
mov
add
in
popa
push
aad
roll
outsl
les
pop
stos
jg
add
xchg
mov
push
xchg
ljmp
fs
nop
int3
ja
cmp
popa
iret
aaa
or
and
jg
sbb
mov
shlb
pushf
lds
cmpsl
xor
das
notl
add
sbb
daa
addr16
pop
movb
sub
les
aas
xor
pop
lods
into
idivl
lea
inc
inc
mov
aad
arpl
mov
nop
and
push
push
sub
cltd
cli
inc
cmc
and
int3
imull
jo
xor
lea
es
mov
jno
or
ljmp
fdivp
add
jae
cmc
push
pop
jge
sbb
push
fbld
into
mov
lds
sbb
jge
in
ret
sub
sbb
lock
sbb
notl
mov
inc
int3
xchg
inc
pop
sub
rorb
test
mov
adc
mov
mov
aaa
icebp
cmp
inc
add
jo
fistpl
sub
popa
push
sbb
jmp
test
repnz
aaa
aas
std
jbe
sub
pop
xchg
movsl
pop
jns
pushw
mov
mov
rorb
mov
lea
sbb
xchg
aad
aad
mov
jns
clc
mov
leave
dec
enter
lock
cld
mov
js
hlt
sbb
repnz
sub
ja
pop
xchg
sarb
cmp
mov
or
lods
mov
xchg
mov
bound
adc
cli
test
cmpsl
xchg
sbb
xor
insl
icebp
loope
adc
setb
and
aad
bnd
cmp
ffreep
aaa
mov
and
add
adc
cmp
xchg
imul
or
mov
out
icebp
decl
sbb
jle
ss
enter
push
push
cwtl
fbld
dec
movsb
mov
or
push
out
sbb
mov
cmc
add
xor
and
mov
pop
jl
int
xlat
xchg
lock
aas
pop
inc
dec
divl
inc
cmp
in
lahf
mov
pop
push
enter
test
iretw
pop
and
aas
loopne
add
nop
cli
insb
data16
int
movsl
jne
movsb
dec
popa
jbe
lret
ljmp
lock
pop
xorl
leave
inc
popf
mov
mov
stos
xchg
fsub
mov
jge
clc
cmp
mov
into
icebp
test
testl
test
add
orb
xor
push
adc
xchg
inc
cmp
cltd
sbb
pop
xlat
shll
cmpsl
in
enter
cmp
incb
or
hlt
push
clc
insl
jl
fidivs
pop
xor
iret
scas
xlat
cmpsl
mov
in
ds
testl
in
push
sbbb
insl
xor
leave
repz
adc
sub
push
addb
pop
lret
xchg
jb
fnstsw
pop
push
cwtl
aad
shll
cs
dec
jnp
cwtl
jae
fcmovbe
mov
incl
popa
adc
das
in
jae
and
push
pop
sbb
shlb
pop
jae
and
adc
sbb
push
lods
push
mov
pushl
aas
inc
loope
mov
iret
int
sar
inc
fnsave
or
iret
stos
xchg
rolb
dec
mov
fsubs
addl
outsl
xor
mov
or
lahf
je
dec
push
dec
inc
adc
xor
mov
or
ja
xor
jle
pop
mov
jp
js
cmc
je
test
clc
decb
icebp
fstpt
idiv
cwtl
mov
push
inc
dec
cmp
inc
out
or
pop
fisubrs
shl
mov
stos
aad
jle
mov
lret
addr16
incb
sbb
mov
or
add
jno
ds
xor
rolb
cmp
ss
cmp
mov
int3
cmp
push
lock
mov
jmp
mov
xchg
fdivrl
lods
hlt
adc
fldenv
jnp
pop
lret
test
dec
add
inc
mov
das
or
sbb
jno
xlat
cltd
push
mov
aaa
dec
das
clc
push
movsb
sbb
mov
mov
xor
imul
scas
shlb
cmp
in
lret
xor
mov
clc
lods
or
xor
rep
into
popf
mov
pop
push
jl
jmp
fisubs
and
mov
inc
daa
adc
jne
mov
sbb
push
mulb
ljmp
movsb
inc
jno
xchg
imul
lahf
sbb
popf
jno
dec
adc
xor
push
xchg
testb
lahf
push
mov
je
pop
ret
dec
lods
mov
int3
xor
adc
add
js
inc
adc
rcrb
mov
repnz
or
inc
mov
sub
ds
shlb
and
arpl
and
int
cltd
lcall
divl
rcll
inc
test
fstl
cld
or
push
dec
jecxz
test
fwait
dec
dec
push
adc
jo
sub
fs
outsb
test
lahf
or
scas
arpl
inc
dec
icebp
mov
push
dec
dec
or
clc
shll
idivl
in
cli
lods
test
nop
or
xchg
lret
adc
cmpsb
pop
inc
ret
cmp
cltd
hlt
mov
pop
sbbb
lods
pop
push
or
imul
aam
cwtl
xchg
fsubrl
inc
cmc
mov
inc
icebp
sbb
and
inc
adc
sbb
mov
xchg
mov
xor
std
mov
or
adc
xchg
dec
sub
adc
in
jmp
sub
adc
fisubs
mov
mov
call
inc
mov
dec
stos
lcall
add
mov
push
xchg
ret
dec
or
insl
clc
mulb
inc
or
roll
or
and
lcall
mov
mov
and
pop
stos
add
loopne
popa
pop
sar
icebp
pop
into
cld
jno
sub
rcrb
and
mov
add
xchg
mov
aam
add
or
mov
mov
and
xor
or
lcall
movsl
xchg
inc
inc
add
sub
je
es
or
xor
dec
inc
xchg
xlat
popa
lret
and
imul
lea
scas
sbb
cmpsb
call
dec
xlat
cmp
xor
push
jmp
and
mov
push
jg
ds
jle
jns
int
push
jge
and
lock
xor
addr16
hlt
mov
stc
cmp
in
ja
add
push
lds
sbb
inc
dec
xor
imul
ret
clc
lret
pop
ds
fstps
jl
fsubs
inc
jne
cmp
les
and
mov
push
addb
mov
jae
sbb
push
mov
pop
mov
cwtl
or
imul
push
popa
dec
aad
std
inc
push
jle
icebp
push
jb
mov
fs
mov
inc
dec
push
mov
iret
insb
rorb
insb
popf
adc
rorl
movb
mov
adcl
outsb
lcall
or
xlat
sbb
nop
mov
aam
push
mov
pop
mov
lret
sub
aas
leave
xor
xor
es
std
xlat
or
inc
push
xchg
roll
adc
rclb
loope
adc
adcl
ljmp
xchg
inc
mov
adc
int
addr16
orl
or
mov
adc
insl
nop
cltd
jmp
cmp
int3
mov
xchg
out
mov
mov
pop
in
fcmovb
push
mov
mov
push
mov
mov
cmp
pop
jae
arpl
pop
rorl
call
cs
cmp
repz
rcrl
pop
aas
xchg
ljmp
imul
push
cmp
and
or
and
daa
rolb
test
mov
sub
xchg
inc
loope
loopne
cmp
push
xor
aas
mov
imul
jl
fisubs
mov
sub
cld
mov
push
jg
push
sub
push
test
mov
repnz
add
adc
int3
push
push
mov
mov
mov
sbb
shll
add
push
inc
test
cmp
shl
loop
dec
hlt
loopne
aaa
mulb
and
fldl
clc
and
xor
iret
lds
push
jns
outsb
push
xchg
jo
cmpsl
push
std
mov
mov
fisttps
rcl
cmpl
or
xor
jbe
lds
insl
cli
imul
scas
loopne
shll
adc
adc
scas
daa
mov
aam
imul
sub
cmp
add
aam
pop
leave
out
lds
scas
lods
mov
or
aas
cmp
scas
mov
int3
or
jno
and
into
push
loopne
xor
mov
popa
jo
jecxz
sbb
inc
jge
pop
lret
xor
adc
mov
xchg
sub
adc
xchg
add
push
lock
das
enter
push
cwtl
arpl
out
mov
dec
sbb
ljmp
movsl
pop
popa
sbb
push
lcall
insl
or
pop
jno
mov
sub
add
push
loop
out
es
sar
and
incb
in
in
add
movsl
xor
jo
mov
mov
mov
lock
dec
hlt
xchg
pop
push
lods
jns
cmp
fimuls
inc
shlb
push
add
push
xchg
jne
xchg
lahf
pop
fsubs
pop
cmpb
adcl
add
adc
out
push
sub
adc
test
mov
cmp
pop
pop
mov
fdivrs
mov
int
jae
mov
dec
jne
mov
mov
inc
mov
hlt
dec
repnz
sbbb
cwtl
mov
inc
xchg
imul
ja
cmp
mov
pop
pusha
adcb
mov
mov
dec
pop
hlt
out
js
pop
mov
fidivs
leave
aam
pusha
mov
rcr
daa
cmovns
cmp
add
stos
pushf
pushf
cs
cmpsl
xor
or
mov
fistps
mov
add
xor
outsb
push
jecxz
pop
sbbb
inc
pusha
lds
aad
sbb
cmpsb
call
cltd
insb
sub
dec
lcall
mov
cmp
daa
pop
inc
ljmp
mov
sub
outsl
lahf
data16
push
mov
outsb
cld
xchg
dec
pop
pop
aad
push
in
mov
add
xor
xorb
and
inc
adc
add
lahf
and
cmp
or
out
das
or
xor
jge
mov
pop
push
cmp
inc
push
or
pop
mov
mov
jb
je
int3
jo
push
and
inc
sub
or
push
push
mov
or
fnsave
lcall
icebp
dec
pop
scas
lods
insb
call
mov
cmp
dec
adc
cmp
dec
push
pushl
popa
inc
inc
sub
ljmp
inc
iret
jecxz
mov
cwtl
push
movsb
data16
mov
scas
jmp
add
mov
les
mov
minps
movsl
mov
jle
and
cs
jecxz
sahf
imul
or
aas
sbb
dec
ds
mov
sti
out
lcall
lds
ja
adc
sub
jp
mov
mov
paddsb
pop
mov
cltd
leave
cmpsb
out
dec
cmp
lods
mov
es
sahf
mov
cld
lahf
test
ficompl
repnz
push
das
out
push
pushf
mov
das
jnp
sub
popf
xchg
and
inc
js
mov
mov
aad
mov
lods
mov
jle
jb
aas
ret
mov
mov
cmp
or
stc
fs
rolb
insb
jmp
xchg
aam
inc
add
add
push
and
orb
pushf
and
or
mov
shr
pop
jo
sub
or
xor
lahf
ljmp
cmp
fbld
jb
push
push
mov
jns
add
cmp
mov
xchg
scas
inc
fwait
jle
xor
jno
sbb
stos
imul
inc
out
jae
sub
mov
scas
push
push
push
mov
data16
daa
loopne
adc
sub
inc
pop
and
mov
inc
es
out
jp
daa
scas
or
iret
xchg
and
leave
imul
xor
mov
or
inc
dec
dec
lds
sbb
mov
mov
jb
add
xchg
arpl
sarl
shll
and
fists
xchg
push
mov
add
jno
xchg
inc
shl
loope
xor
stc
das
dec
loop
jp
ds
jle
je
cs
mov
movsl
scas
dec
lahf
idivl
or
insl
mov
lock
scas
sbb
decl
leave
dec
push
push
xor
jg
cmp
in
xor
mov
fldcw
xchg
dec
loopne
test
or
lcall
cmc
dec
imul
adc
ljmp
jnp
pop
and
aaa
sbb
mov
insl
pop
sub
pusha
data16
rcll
and
lods
inc
dec
sbb
loop
adc
int
and
jle
in
sahf
cmpsl
popf
and
mov
adc
adc
push
filds
mov
and
mov
lea
repz
and
cld
mov
jae
dec
lret
test
stos
fs
in
loope
xchg
add
dec
out
push
mov
mov
xchg
fildll
pmovmskb
insl
in
shll
stc
outsb
cmc
or
add
cmpsl
repnz
orb
push
or
pushf
in
push
int3
ljmp
clc
rcrl
push
jnp
push
sub
lea
gs
pop
pop
pop
insb
ret
pop
mov
inc
jg
mov
xor
lret
cmc
xchg
mov
jmp
push
decb
enter
ret
cmp
cltd
mov
pop
fucomip
ja
popf
imul
dec
inc
inc
sbb
pop
and
inc
xor
dec
fisubl
insb
into
fists
or
jmp
and
fstl
insl
add
in
xchg
sub
mov
je
add
insl
hlt
jl
sub
je
cwtl
sbb
popa
mov
in
fsubl
rcl
cli
inc
jp
test
push
out
shlb
xchg
loopne
movsb
add
test
lret
mov
inc
xchg
push
fdivrl
sarb
dec
mov
sbb
lea
shll
rorl
sarl
pop
shll
mov
mov
jp
sbb
hlt
loop
pushfw
push
stc
pop
xchg
lods
push
xor
in
test
dec
xchg
cmp
push
fidivrs
out
xlat
sbb
cmp
cltd
adc
test
and
jg
cmp
push
imul
iret
fisubrl
cli
push
mov
aaa
mov
jbe
or
inc
out
jg
std
fnstenv
imul
cmp
xlat
adc
push
movsb
int
in
or
mov
stos
sarb
ds
leave
ja
dec
mov
mov
loop
sbb
mov
in
adc
sub
mov
mov
and
lahf
push
les
xor
ja
sub
out
stos
dec
outsl
push
push
pop
mov
sub
cmp
xchg
fbld
push
nop
in
loop
dec
cmpsl
addr16
movsl
or
or
sbb
pop
mov
or
hlt
and
in
push
in
das
mov
jnp
fsubs
or
jo
jb
sbb
fwait
les
movsl
inc
sbb
add
pop
jnp
jb
ds
jecxz
in
pop
mov
push
sub
fstl
orl
lds
aad
stc
fsubrl
scas
js
lret
push
ret
jbe
xorb
jg
xlat
aaa
lahf
inc
adc
out
dec
lds
mov
in
sahf
add
inc
mov
add
bound
inc
sbb
adc
ja
in
adc
jae
aam
mov
sbb
mov
add
jmp
pop
xor
rorl
jmp
unpcklps
inc
je
jecxz
push
sbb
fcmovnb
and
or
and
cmp
and
in
cmp
arpl
fldt
sahf
aad
out
xchg
dec
xor
pop
sar
int
pop
addr16
popf
cltd
jbe,pn
fcoml
pop
mov
inc
in
push
inc
jmp
dec
xor
adc
pop
xchg
lret
stos
loopne
outsb
and
sub
dec
sti
jbe
rorb
adc
je
frstor
xchg
xchg
mov
rorl
and
inc
enter
add
mov
sbb
arpl
jmp
fldcw
repnz
jo
out
scas
mov
push
lods
data16
xorl
jp
pop
push
aas
sub
pop
push
mov
mov
sub
pushf
cmp
mov
cmove
mov
mov
pop
pop
mov
insb
das
fisttpll
cmp
fcmovb
cmp
dec
insb
jle
nop
push
sbb
sbb
pusha
pop
fdiv
shrl
inc
scas
and
test
jae
mov
lahf
push
lcall
arpl
mov
aaa
loopne
lods
stos
outsb
jnp
pushf
push
shll
in
pop
mov
jno
sahf
cmpsl
add
mov
mov
leave
push
in
mov
add
adc
hlt
aad
push
mov
fwait
xor
insb
inc
std
jne
mov
ffreep
mov
imul
mov
jge
or
sbb
gs
pop
sti
in
sbb
inc
into
int
mov
sbb
xchg
xorb
fwait
insb
bound
add
inc
push
ds
mov
or
cmp
fstpl
push
hlt
xchg
mov
pop
dec
mov
inc
repz
xchg
mov
fildl
push
sbb
es
in
aad
fcoms
cmp
inc
inc
test
ret
addl
and
rorb
das
lea
sbb
cmc
int3
loope
xor
add
dec
push
fisubrs
mov
repz
movsb
push
mov
mov
ja
jl
push
fisttpl
pop
ret
pop
pop
repz
sahf
cs
pop
mov
xor
push
adc
add
xor
cwtl
inc
lret
cmp
inc
lods
xor
jo
push
jmp
rcrb
popf
in
aas
jecxz
mov
xchg
mov
sysexit
cmpsb
mov
hlt
outsb
and
mov
or
out
pushf
cmp
loopne
mov
in
lods
lock
lock
adc
dec
out
xor
push
popf
les
clc
and
jno
ficomps
push
add
sbb
leave
test
xchg
mov
xchg
cli
ret
dec
mov
add
in
les
mov
xchg
mov
pop
ljmp
pop
in
or
cmp
dec
xchg
shll
xor
jne
pop
pop
xchg
in
dec
into
aad
rcll
inc
sub
js
cli
xor
les
or
sti
jmp
inc
cld
in
jg
popa
mov
pop
mov
xor
mov
fisttps
bound
or
mov
inc
in
gs
jb
dec
popa
xor
pop
cmp
jnp
cmp
mov
les
mov
sar
mov
js
inc
fwait
in
lods
add
fldcw
leave
scas
int
push
popf
cmpsl
cmp
aam
out
push
push
xorb
xchg
pop
repz
stc
xchg
mov
mov
add
push
hlt
mov
push
xchg
repz
es
sub
aam
jmp
fs
repnz
nop
add
mov
fstps
in
cltd
cs
das
inc
hlt
mov
and
cmp
scas
pusha
popf
lods
or
push
loop
roll
jnp
mov
or
fucomip
loope
push
stos
pop
mov
mov
mov
negl
xlat
adc
jg
or
xchg
pop
jl
cmp
push
test
and
sub
loop
int3
inc
mov
push
dec
pushf
pop
out
das
push
dec
dec
je
push
pusha
pushl
pop
bound
leave
gs
pop
inc
out
cmp
int
fnstenv
pusha
lret
and
cmc
frstor
test
add
push
adc
mov
ds
inc
aaa
mov
shll
adc
cmpsl
jecxz
lds
cmp
and
shrl
xorb
inc
push
cmp
dec
repnz
les
push
push
lahf
icebp
dec
add
lret
push
neg
adc
cmpsb
cmp
add
ljmp
insb
jecxz
add
into
mov
mov
lret
adc
inc
aad
sbb
repz
das
adcb
in
daa
jecxz
jno
pop
out
dec
arpl
or
jae
mov
arpl
in
stos
mov
hlt
lods
mov
adc
inc
mov
out
push
sbb
movsb
aas
inc
push
imul
add
cltd
addl
lods
ss
push
and
push
sbb
pop
jae
stos
push
sbb
dec
shll
adc
add
idivl
pusha
cltd
mov
jp
lea
lret
push
ds
mov
in
inc
jns
push
push
jge
mov
lcall
pop
aam
or
xchg
adc
mov
scas
or
xor
sti
cmpsb
nop
repnz
ret
mov
cmpsl
test
pop
outsb
js
lods
lods
inc
xchg
and
jecxz
jbe
in
std
push
mov
lsl
sub
push
mov
leave
mov
mov
adc
or
pusha
push
xlat
mov
add
lret
rolb
xor
and
pop
mov
daa
pop
xor
cmpsb
cmp
clc
inc
jnp
outsl
ds
jle
rorb
data16
div
pop
lea
adcb
jmp
push
popf
push
sbb
and
out
jle
stos
sub
mov
adc
jl
outsb
lret
sub
push
cmc
xchg
cld
test
push
mov
test
js
cs
add
loope
sahf
pop
jl
ret
sbb
dec
popa
out
fnstcw
add
xchg
adc
or
dec
shrb
test
leave
test
movsb
jle
loopne
cmp
sbb
push
gs
pop
cmp
gs
iret
dec
cmpsb
xchg
pop
insl
out
ret
popf
xchg
addr16
outsl
ret
cmpsb
out
and
pusha
push
mov
sub
and
dec
xchg
mov
push
cmp
pop
and
mov
and
in
in
imul
lret
cmc
les
pop
in
test
cld
dec
loope
sub
psubb
dec
xchg
add
pop
shl
or
push
clc
or
lret
xchg
loope
outsl
mov
ret
and
inc
mov
ds
add
cmp
mov
jae
sub
mov
call
push
pop
lods
dec
aas
push
mov
xor
jg
sbb
stos
pop
jae
xlat
fiadds
insl
shll
push
outsl
push
iret
fwait
popf
mov
sti
lahf
mov
xchg
sbb
int3
pop
jne
sub
mov
imul
mov
mov
pop
jnp
dec
push
sbb
loopne
xchg
icebp
mulb
add
popa
addr16
rclb
je
scas
repnz
out
lret
les
dec
clc
push
mov
cmp
sbb
xlat
jns
movsl
out
mov
and
les
je
sub
mov
sub
movb
pop
lret
cmp
cmc
mov
call
mov
mov
icebp
xorb
jbe
nop
les
pop
loope
sbbb
and
lahf
stos
adc
sbb
jecxz
fdivs
std
js
pop
cmp
xchg
loopne
sbb
sbb
fbld
mov
cltd
test
xchg
hlt
xor
cmp
out
xor
stc
imul
push
das
lret
lods
ss
xchg
mov
xor
mov
and
cmp
sbb
mov
repnz
cmpsl
push
or
and
adc
xor
pop
ret
aam
mov
cs
xor
scas
dec
test
mov
push
stc
inc
mov
rcrl
hlt
and
inc
xchg
and
jg
lahf
lods
shrl
xchg
push
out
pop
fistpl
mov
sbb
sub
loopne
push
push
inc
jbe
aam
lods
bound
sbbl
pop
mov
in
loope
cltd
std
call
inc
out
push
dec
aam
xchg
mov
jo,pn
xrelease
ja
stc
xchg
stos
cmp
pop
lods
lods
or
fwait
arpl
orb
in
push
add
sti
push
out
inc
je
es
cld
test
inc
test
mov
mov
arpl
lea
mov
icebp
mov
mov
push
or
test
lret
mov
lcall
jmp
call
or
int
mov
dec
lahf
sub
lahf
and
scas
aas
repnz
jl
sbbl
out
jbe
cltd
mov
xlat
cltd
cmp
pop
dec
sbb
hlt
lret
ja
aas
fsubl
sub
fidivl
scas
push
scas
test
pop
mov
xchg
add
jns
cmp
and
inc
mov
pop
and
jns
clc
lcall
sub
fsubrs
jb
sbb
add
add
jns
xchg
aas
xlat
pop
stos
popf
mov
xchg
inc
cmp
cmp
in
mov
test
leave
cwtl
adc
jo
mov
dec
les
sti
pop
xchg
addr16
jmp
jns
pop
lcall
sbb
sbb
pop
jns
mov
into
out
adc
jb
cmp
fisttpl
xor
inc
test
sarl
int
scas
imulb
xlat
sbb
repz
loop
pop
daa
sub
mov
push
mov
mov
fidivrs
aad
imul
inc
sub
loopne
cmp
imul
jg
fstps
je
mov
and
pop
jno
cmp
imul
fidivrs
std
sbb
cmpl
nop
push
push
cmpsl
jecxz
pop
sub
mov
data16
cmp
cltd
mov
loopne
loope
and
stos
mov
add
in
sbb
add
dec
divb
je
arpl
mov
movlps
les
sub
je
arpl
repz
negl
lahf
daa
sub
inc
mov
inc
pop
mov
xchg
clc
xchg
mov
lcall
lea
push
cltd
stos
cltd
cmc
clc
pop
inc
xchg
sub
sbb
dec
fists
cmp
mov
mov
push
int
lods
cmp
xchg
inc
pop
das
clc
pop
adc
leave
mov
add
dec
loopne
fucom
out
or
in
jp
fcmovne
mov
loopne
pop
aas
push
fst
dec
test
mov
in
fsubl
xchg
or
dec
and
lahf
xchg
dec
xchg
dec
or
inc
xchg
lea
rorl
jmp
movsb
iret
in
test
rorb
insb
mov
or
bound
lods
add
scas
jns
add
add
sahf
imul
mov
add
scas
shl
outsb
ljmp
inc
ror
xor
mov
rcll
aad
inc
frstor
and
sahf
stos
sub
call
and
mov
fimull
or
dec
jecxz
pop
fnstcw
int3
aas
push
je
sub
std
and
mov
or
test
repnz
in
cmpsl
icebp
in
std
sbb
push
jp
pop
jb
fists
pop
dec
cmp
loop
xchg
fwait
imul
js
stc
ret
push
adc
lds
jecxz
bnd
adc
icebp
push
out
mov
jg
cld
jns
mov
lods
ljmp
iret
inc
xor
sub
outsb
cltd
mov
xor
mov
sub
int3
sbb
imul
repz
orb
inc
xchg
stos
sbb
cmpsl
scas
rcll
out
jne
arpl
push
add
mov
insl
leave
out
lahf
adc
mov
inc
lods
sbb
dec
lret
jmp
jecxz
sbb
es
in
out
sbb
scas
inc
push
xor
in
pop
je
out
cmp
cmpsb
cltd
xchg
pop
popf
push
jmp
icebp
sub
and
inc
dec
adc
mov
iret
cld
cmp
mov
cmp
push
leave
pop
je
out
push
xor
dec
leave
push
pop
cmp
je
lock
fs
sub
push
inc
mov
out
xorl
cmc
pop
je
scas
sti
pop
imul
sbb
sbb
sahf
daa
xor
call
cmp
adc
dec
sbb
imul
fsubr
push
das
test
sarl
or
std
mov
jo
dec
jb
jmp
adc
xorl
scas
fstl
or
jg
jne
mov
icebp
jl
gs
out
dec
test
lea
std
sub
aam
adcl
mov
xor
out
pop
or
and
jnp
and
sarb
add
shrb
repz
xor
sub
mov
inc
rclb
cltd
sub
jno
pusha
fldt
in
arpl
adc
out
es
or
pop
bound
adc
insl
xlat
xor
add
aam
lret
fcmove
mov
adc
addb
xchg
vunpcklps
pushl
test
testl
clc
dec
ret
mov
cld
sbb
inc
out
lods
decl
pop
int
popf
cwtl
cmc
fcoml
xchg
aas
mov
insl
push
dec
or
jge
je
sbb
or
mov
int3
imul
cmp
fptan
dec
lods
mov
add
push
sarb
push
pop
inc
xchg
push
insl
inc
outsb
sahf
shl
aam
dec
inc
push
pop
les
ljmp
movsb
sub
ret
icebp
or
sub
popa
jae
pushf
jb
imul
mov
sarl
out
cmpsb
mov
sbb
jmp
js
vmwrite
stc
xor
lret
inc
push
lods
jmp
stos
inc
push
mov
test
mov
nop
sub
popf
andl
nop
loope
ret
push
rorb
add
cwtl
pushf
arpl
jno
stos
iret
push
and
in
add
adc
adc
data16
pop
jbe
test
ljmp
fsubl
cltd
es
mov
inc
or
add
mov
dec
fdivl
mov
sub
dec
sbb
int
cmp
jl
pop
inc
addr16
mov
bound
xor
lock
leave
cmpsl
test
jno
jne
xchg
pop
lahf
fists
adc
xor
mov
push
clc
pop
testb
sbbb
xor
and
mov
test
mov
push
mov
push
jae
mov
sbb
jmp
mov
nop
popa
cmp
xchg
lret
dec
shlb
in
jmp
fyl2x
push
fwait
add
push
xor
aaa
int3
xchg
mov
cmp
int
mov
jle
or
stos
dec
add
fdivr
outsl
and
movsl
scas
pop
cmpsl
and
rorb
ret
jg
xchg
inc
fbld
stc
or
inc
inc
pop
icebp
mov
push
fs
mov
xor
jecxz
in
int3
aaa
aam
push
push
sbb
sbb
ljmp
popl
test
adc
movsl
in
xchg
fiaddl
mov
push
push
andl
and
fisttpll
and
push
sub
dec
fimull
cwtl
in
lea
iret
mov
inc
int
iret
ss
xchg
jmp
xchg
xchg
into
cmc
in
das
push
and
mov
mov
mov
push
inc
mov
push
repnz
push
arpl
sbb
nop
test
jno
clc
iret
cmc
in
pop
adc
sbb
and
out
dec
xchg
add
and
push
xchg
push
push
insl
and
or
push
sbb
cmp
add
xchg
push
cmp
adc
mov
aas
shll
xorb
pop
loope
jmp
ja
lret
es
cmp
cmp
call
pop
mov
cs
push
stos
rol
mov
aas
xchg
lds
pop
scas
jg
sub
mov
dec
pop
inc
mov
test
mov
hlt
xor
in
jae
je
int
lea
std
dec
sbb
insb
or
mov
xchg
dec
cmp
xlat
add
aad
shr
popa
sar
dec
shrb
xor
mov
jecxz
std
mov
lock
dec
loop
push
xchg
fisubl
xor
sbb
test
insb
les
push
stc
out
outsb
in
inc
cmpsl
xchg
enter
or
jno
das
push
push
cmp
addb
aas
jbe
stos
into
movd
bound
mov
xor
fstp
pop
pop
out
or
arpl
and
mov
int3
iret
cmpsl
sub
xchg
clc
mov
in
ret
sub
loop
mov
jne
iret
movsb
xor
xor
mov
pop
rcll
push
mov
sub
inc
pop
xor
ds
mov
outsl
pop
repz
sbb
lret
jl
dec
sub
test
xor
shl
or
pop
cmp
cwtl
jg
int
add
icebp
inc
pop
jmp
xchg
mov
cmp
pop
cmpsb
xlat
add
dec
adc
and
mov
data16
sbb
mov
jp
push
out
mov
lahf
rorb
iret
das
jge
dec
dec
daa
xchg
call
inc
and
add
mov
dec
adc
mov
leave
and
int
adc
cmp
imul
cmpsb
in
cmp
lcall
mov
movsl
pop
and
adc
cmpsl
jno
mov
orl
les
outsb
fcomps
mov
mov
in
sub
arpl
mov
add
pop
sarl
cmp
jl
cmp
lods
mov
insl
repnz
mov
mov
jmp
push
cmc
push
push
mov
and
push
push
leave
stos
inc
pop
xchg
sbb
and
pushf
mov
cltd
mov
mulb
inc
or
ja
cwtl
xchg
mov
fwait
pop
pop
dec
inc
clc
or
outsb
mov
shlb
lock
loopne
mov
push
lods
and
push
add
adc
popa
adc
jnp
loopne
std
adc
jg
js
int
dec
add
aas
xchg
mov
jo
jne
addb
xchg
icebp
js
mov
outsl
addr16
in
hlt
add
pusha
jo
repnz
shrl
sahf
dec
and
xor
lds
adc
sbb
andb
loop
cmp
adc
aaa
cmp
test
pop
jecxz
push
dec
fisttpl
aas
sbb
mov
and
dec
cmp
bound
push
or
inc
sub
cmp
rcll
or
mov
aam
idivb
sub
xor
jbe
sti
jp
inc
mov
pop
mov
pop
adc
lret
iret
clc
roll
inc
pop
out
shlb
mov
adc
pop
push
ret
mov
out
add
jp
cmp
jge
cwtl
idivl
loop
pop
add
mov
aam
pop
lds
push
scas
jbe
insl
pushf
and
popa
adc
push
sub
inc
pop
inc
in
mov
lahf
dec
xchg
xchg
mov
pop
sti
cli
or
sbb
iret
sub
sbbb
out
xchg
test
fcmovnb
sbb
jmp
mov
adcl
mov
fistl
lods
inc
cmp
ljmp
adc
adc
mov
cmovp
pop
cli
out
mov
out
fsubl
mov
sub
orb
mov
dec
and
stos
jl
inc
mov
adc
out
jne
jge
mov
imul
testl
or
popf
jle
aaa
jge
jae
popa
je
mov
arpl
sub
jmp
add
xor
lea
pop
xchg
dec
adc
mov
imul
in
mov
mov
ss
ss
xor
dec
pusha
push
arpl
inc
mov
loop
test
cmp
out
pop
loop
jg
bnd
add
and
decb
cmp
push
or
fiadds
and
pop
mov
xchg
rcl
addr16
test
pop
test
icebp
add
add
pop
test
gs
shlb
pop
and
and
mov
in
xchg
xchg
mov
pop
arpl
js
xchg
xor
jbe
and
push
insb
iret
popf
outsb
adc
jge
mov
mov
cmp
cmp
data16
hlt
or
mov
or
pop
mov
jae
cmpsl
or
cli
jle
xor
mov
vmovaps
sub
test
jecxz
enter
mov
pop
mov
inc
fwait
cld
dec
ljmp
xchg
mov
mov
mov
cwtl
jbe
sub
sub
inc
test
lahf
jp
jns
sahf
ds
sub
ja
dec
repz
mov
or
xchg
iret
xor
lcall
push
imul
xor
cmpsb
lods
jno
and
sbb
and
dec
fnstcw
cmp
sti
rcll
in
mov
pop
add
or
lea
bound
mov
movsb
xor
pop
aaa
fadds
sbb
repnz
mov
leave
int3
rolb
mov
shrb
add
inc
add
xor
add
xchg
imul
xor
stc
xor
int3
push
cltd
repz
mov
repz
and
data16
cwtl
imul
dec
push
incl
data16
imul
xor
push
out
inc
es
pop
notl
push
mov
test
pop
push
sub
imul
in
into
cld
cmp
out
popa
or
jb
ficomps
es
lock
pop
imul
rolb
subl
push
pop
xchg
lahf
mov
pop
cmp
into
clc
aas
jb
xchg
sub
dec
pop
xchg
cmp
movl
xchg
adc
dec
add
fxtract
fnstcw
sub
mov
pop
jae
adc
xchg
fisubl
std
mov
ljmp
add
pop
push
sub
mov
adc
mov
insb
in
or
or
cmpsl
lcall
loopne
mov
push
shll
inc
jl
fsubs
leave
sub
xchg
xor
push
int
xchg
sub
data16
jbe
and
cmc
lahf
xor
outsb
fistpl
ret
or
mov
popa
cltd
lods
shll
push
xor
mov
add
or
ds
sub
xlat
stos
sub
ret
jp
into
inc
dec
in
cmpsb
lock
xor
jb
fidivrl
rclb
loop
adc
cmp
repz
out
movsb
test
das
insb
std
movsl
cmp
fnsave
mov
aaa
push
fs
fwait
mov
xchg
push
lds
lahf
sub
int3
or
test
notl
into
sti
mov
mov
inc
js
ja
xor
inc
fidivrl
xor
mov
push
jns
ljmp
sub
in
mov
jno
xor
fstps
dec
add
mov
ja
clc
pop
mov
pop
lock
test
ja
sbb
ret
sub
cmp
arpl
clc
pop
and
scas
inc
or
push
lds
jb
shrl
stc
dec
mov
pusha
add
int
in
gs
pop
lahf
lds
mov
scas
cmpsl
jmp
mov
add
aam
popf
xor
or
ret
scas
pop
pop
lock
and
add
lret
sub
inc
in
mov
std
aad
arpl
push
cmc
in
xchg
xchg
mov
loope
icebp
out
inc
and
in
cmp
pop
jl
sahf
pop
cmpsl
jb
xor
iret
fistl
sti
lock
inc
std
fstps
mov
xor
icebp
insb
pop
mov
sbb
imul
add
pop
adc
push
fsincos
movsb
stc
iret
mov
sbb
jbe
dec
mov
mov
test
in
xchg
mov
xor
nop
clc
xlat
mov
push
int3
ret
insb
leave
add
dec
sub
hlt
push
pushf
inc
push
mov
ss
xor
aas
adc
sbb
shll
xchg
mov
adc
mov
mov
sub
sub
out
outsb
in
into
jno
cmpsb
sbb
test
andb
dec
mov
cwtl
and
dec
iret
pop
or
jmp
xor
call
mov
sar
es
iret
sahf
cmp
adc
ret
sub
add
inc
jmp
cmp
jae
dec
lcall
push
or
add
push
cmpsl
call
push
iret
jl
ficompl
lret
adc
push
ret
push
sub
jae
push
out
add
xor
pop
push
into
dec
push
dec
sbb
enter
pop
fninit
js
lds
lods
mov
cld
lds
mov
fs
lods
pop
jbe
cmp
sbb
aad
out
bound
or
jge
lods
inc
bnd
and
adc
add
leave
jbe,pn
notl
sbb
and
ficomps
or
xchg
sbb
stos
cmp
cmc
cmp
pop
cmp
shrb
or
sub
sahf
in
test
mov
loope
adc
jno
lret
xchg
mov
push
and
in
jo
les
jecxz
test
daa
add
add
ds
and
lret
in
orl
sub
mov
bound
lret
loop
push
pusha
jns
and
add
cli
sub
sbb
xchg
mov
notb
leave
cmpsl
pop
mov
icebp
fmul
test
jbe
push
xlat
out
jnp
cmp
ja
sbb
xchg
aas
mov
iret
stos
int
cmpsl
cmp
jmp
movsb
inc
loope
mov
std
cmp
mov
mov
cmp
inc
xor
sti
push
mov
ss
aad
lahf
out
out
aam
jl
dec
frstor
scas
in
mov
idivl
daa
dec
in
jl
push
jl
movsb
sbb
lret
pop
and
cmp
int
inc
movsl
and
repz
or
lods
push
insl
arpl
xchg
push
leave
lods
inc
and
sub
scas
pop
cmpsb
add
xchg
pop
or
push
mov
popf
cmp
inc
in
mov
jo
or
test
ljmp
loope
js
jg
pop
jle
das
dec
jb
fldcw
adc
and
mov
das
xchg
jmp
loope
addl
push
imul
sub
and
addr16
scas
cmp
out
mov
inc
insl
int3
push
and
sbb
test
out
ss
mov
popf
pop
mov
adc
hlt
lea
push
movsb
int
inc
rcrl
ss
inc
stos
jp
outsb
cmp
pop
test
bound
inc
fisubrl
adc
jmp
cmp
pop
mov
repz
sub
sahf
call
inc
test
out
pop
mov
aas
aam
into
loopne
ja
stos
fidivrs
movsl
jle
xor
icebp
sbb
test
cmc
addb
aas
outsb
rorl
inc
push
lds
push
or
pop
sub
test
ss
cli
mov
or
cmp
ret
mov
lea
lret
lea
mov
arpl
push
pop
pop
lcall
push
adc
pushf
ds
mov
or
mov
stos
js
cld
fistpll
in
jnp
movl
call
cmp
test
push
ficoml
int
hlt
push
loop
or
pusha
push
mov
aaa
int
das
pushf
out
add
dec
inc
mov
or
inc
push
xor
lods
testl
dec
xchg
and
das
mov
cmp
lds
rcrb
cmp
test
add
xchg
dec
mov
daa
jns
jle
sbbb
add
push
dec
or
into
sbb
mov
xchg
mov
push
scas
mov
stc
jecxz
cmp
push
adc
cmp
stos
cmp
cld
stos
movsl
xchg
adc
and
push
xchg
pop
xchg
call
repnz
xchg
int3
pop
pop
add
jb
js
mov
mov
loope
push
mov
dec
sub
ror
push
shlb
dec
xchg
lcall
sub
imul
ficomps
mov
rcrl
xchg
and
mov
in
xchg
aas
inc
mov
ds
pop
and
cmc
and
adc
repz
push
into
sbb
sub
arpl
pushf
fmuls
and
loop
inc
sub
je
mov
cmp
pop
in
test
push
sub
loopne
call
sub
stc
xchg
inc
lret
lods
iret
int3
sub
mov
cltd
cmc
push
aam
insl
inc
xchg
pop
or
sub
stos
scas
aas
jnp
clc
inc
out
arpl
xor
cmp
adc
adc
cmp
adc
in
inc
mov
jmp
inc
jne
pop
minps
add
fcompl
pop
add
sti
pop
sub
rcl
sub
in
xchg
lahf
xchg
push
ljmp
mov
mov
imul
and
push
jno
push
xchg
inc
ljmp
aas
mov
add
sub
xor
jmp
push
cmp
clc
or
push
imul
push
ffree
mov
jp
and
out
mov
pushf
dec
push
xchg
push
inc
es
push
aad
fadd
bound
mov
ja
or
aas
testl
dec
out
pushf
push
mov
stos
aas
scas
push
sub
xor
mov
xchg
fildl
xlat
mov
mov
mov
add
fiadds
pushf
data16
mov
adc
xor
icebp
or
add
call
xchg
outsl
psllq
scas
push
sub
jnp
pop
scas
fistps
sbb
pop
add
cmc
lods
movsl
inc
in
arpl
imul
cmp
dec
arpl
in
scas
sbb
cmp
or
push
xorl
dec
sub
fcomps
fdivrl
push
cmp
sbb
xor
pop
fs
fs
out
nop
mov
fistpll
adc
lods
jnp
lret
or
lahf
xor
sbb
and
jp
in
fldcw
mov
in
fwait
das
or
dec
pop
mov
std
push
in
and
adc
sbb
nop
mov
sahf
mov
xor
orb
icebp
pop
dec
jge
pop
push
mov
xchg
fs
xor
mov
in
sti
mov
mov
lret
bswap
pop
pop
test
jns
pop
push
lret
flds
repnz
call
or
mov
out
xchg
push
gs
pop
mov
and
subb
js
mov
mov
pop
shrb
inc
xor
pop
out
repz
mov
loopne
adc
test
popa
stos
pop
xchg
dec
repz
mov
dec
sti
sbb
cmp
mov
sub
es
jp
xchg
enter
bound
or
dec
adc
popf
push
and
fdivrl
push
mov
leave
movsl
sbb
xor
sbb
fsub
stos
mov
mov
fisttpll
jp
mov
hlt
cld
mov
xchg
dec
pusha
repnz
ds
xor
lea
mov
inc
ss
push
pop
hlt
jbe
lods
pop
and
cltd
sbb
xlat
lcall
mov
nop
pop
ljmp
pop
or
adc
ljmp
xor
rclb
loopne
fisttps
pop
loopne
xor
data16
mov
mov
lahf
out
sbb
cltd
int
xchg
cmp
inc
jno
arpl
cmpsl
ja
cltd
or
sub
test
add
cmpsb
imul
loop
test
pop
or
popf
lods
lahf
stc
and
xor
test
jo
dec
popf
sbb
adc
imul
jl
push
add
adc
or
add
xor
jg
lds
push
cmp
das
loopne
add
xor
ret
mov
jecxz
fadd
pop
xchg
pop
push
imul
push
mov
cmpsb
add
cmp
dec
fwait
outsb
inc
lcall
iret
iret
mov
add
lahf
inc
add
jae
mov
inc
stc
pusha
and
xlat
outsl
mov
fidivrs
mov
add
pop
xchg
inc
fnstenv
hlt
mov
outsl
and
dec
out
sahf
nop
outsl
gs
lds
xor
xor
cmp
loope
shll
lock
sbb
cmp
loopne
fucomp
sub
movsl
loopne
roll
mov
push
mov
lcall
mov
psllw
or
sbb
pop
mov
nop
scas
and
divl
sahf
iret
arpl
dec
sub
psubusb
jno
pop
es
leave
rcr
arpl
js
stc
scas
lods
fmuls
sub
imul
std
call
pop
add
mov
imul
andl
jge
jb
fists
sub
or
rolb
and
movsb
sub
mov
jo
sbb
cmp
mov
repz
cli
ja
lds
sub
xchg
andl
push
ret
mov
sbb
orb
xor
addr16
pop
arpl
sbb
xchg
jle
or
outsb
loope
in
add
mov
cltd
mov
mov
xor
add
pop
add
inc
add
cld
adc
fistpll
mov
les
pusha
sbb
out
or
stos
and
jle
and
aam
xor
rcl
stos
in
mov
mov
ss
push
rorl
in
sahf
sbb
cmp
fsubrp
sbb
scas
add
lret
fnstsw
add
mov
mov
mov
in
dec
jo
sbb
mov
movl
mov
leave
pop
push
jmp
fmuls
lret
mov
call
in
push
not
loopne
outsb
adc
call
inc
fiaddl
test
cmp
ret
inc
mov
jl
mov
fldl
call
xor
nop
das
inc
and
jne
rolb
mov
and
nop
inc
fs
repz
or
cwtl
negb
cltd
fnstcw
cmc
fldenv
fbld
es
sbb
push
lret
xor
cmp
lods
pop
outsw
shrl
into
or
xchg
ss
leave
push
lcall
out
daa
jmp
popf
stc
lds
mov
mov
fistl
roll
inc
gs
popa
aas
pop
notb
mov
cs
xor
inc
test
mov
inc
lods
daa
jno
jne
daa
int3
ret
mov
dec
lds
sti
xor
mov
lret
andl
bound
lea
push
pop
stos
xchg
dec
xchg
xchg
lds
mov
jo
jb
aas
outsl
push
aad
in
and
cmc
stos
sahf
enter
ss
or
xchg
pop
cmp
popf
mov
sti
pop
lcall
stos
loope
push
jnp
jns
inc
les
mov
push
jl
stc
inc
mov
push
sub
outsl
add
shl
leave
jl
ret
mov
push
andb
or
cmp
inc
aad
ja
inc
nop
jecxz
add
mov
mov
repz
cld
pusha
cmp
mov
mov
hlt
lods
out
insb
add
mov
addr16
or
jle
ljmp
push
mov
add
aas
xchg
add
shll
into
jp
ds
mov
cmp
push
aam
xchg
adc
stos
mov
sbb
mov
in
stos
ljmp
pop
pop
cmp
filds
jmp
add
dec
push
jmp
repz
mov
insb
mov
push
sbb
and
pop
loope
xchg
std
push
je
cmpsl
sub
mov
push
insl
pop
nop
push
lahf
imul
or
out
cmp
das
aad
mov
sub
xchg
mov
jno
add
stos
sub
pop
mov
shll
and
stos
mov
in
push
outsb
or
fucom
fmuls
xor
pop
push
test
mov
cmp
in
jl
jecxz
int
mov
jo
dec
fisubrs
into
xor
cmpsb
sub
repz
cmpsb
test
stos
push
jnp
pop
bound
rcr
push
rclb
popa
repz
sbb
xor
cld
xchg
mov
push
fdivrs
xchg
dec
push
lods
mov
stos
xor
jae
xor
add
and
xchg
loope
fs
loopne
mov
leave
lods
subl
or
inc
jbe
ss
cmc
push
xchg
movsb
jg
inc
daa
jmp
fistps
or
push
and
jmp
test
ret
nop
repnz
aad
lods
add
ficoms
sahf
push
mov
clc
lahf
addl
jmp
xor
pop
sbb
in
call
jae
test
push
lcall
push
fdivl
orl
or
idivl
mov
jne
lret
sbb
stos
into
push
in
adc
inc
mov
and
jg
jbe
sbbl
mov
and
or
push
sub
mov
mov
push
and
test
ret
pop
data16
adc
das
xchg
or
fwait
push
mov
aam
and
push
xchg
adc
enter
sbb
mov
mov
sub
mov
hlt
jecxz
mov
push
jmp
sub
or
mov
or
ret
push
icebp
sub
dec
and
fsubrl
or
sub
out
jl
sahf
imull
imul
jle
int
mov
dec
test
loop
mov
mov
mov
js
movsl
out
shl
out
loopne
xchg
push
aam
jae
and
stc
jb
xchg
fldl2t
jg
xor
inc
shll
outsl
nop
outsl
cmpsl
inc
inc
testl
dec
xor
movsl
loopne
sbb
mov
pop
lea
inc
nop
push
xchg
cli
dec
sub
xchg
enter
lahf
or
cmp
mov
fdivs
gs
out
enter
inc
scas
rcr
stos
icebp
or
cmpl
jo
lea
or
rclb
test
dec
divl
adc
into
adc
push
sbb
dec
push
adc
xorb
leave
cli
daa
rolb
xor
mov
sbb
push
add
lahf
ds
inc
lea
ja
scas
mov
lock
out
dec
cwtl
jle
repnz
pop
scas
adc
cld
lock
adc
or
mov
inc
std
imul
ja
mov
xor
sub
imul
movsb
lret
insl
nop
xchg
out
lret
daa
test
inc
push
xchg
inc
fcoml
iret
or
pop
aaa
es
int3
les
push
lret
jo
push
addb
push
lock
add
cmpsb
xlat
in
iret
lock
sub
xchg
mov
push
lea
gs
imul
int3
pop
data16
or
data16
add
push
xor
mov
ja
sbb
idivl
dec
jge
enter
mov
or
lea
pusha
jmp
xor
cmc
pop
or
and
daa
push
repnz
repz
jmp
das
pop
loop
fsubrs
inc
filds
sbb
cld
ret
adc
lea
mov
adc
rorb
sub
mov
in
pushf
jno
or
fisubs
cmc
das
lods
or
rcrl
leave
bound
xor
cmp
jge
push
cmp
push
adc
and
dec
or
and
sbb
cmpsb
gs
xor
pop
push
stos
xchg
push
lea
fbstp
les
jg
jo
aaa
mov
jnp
mov
fdivrl
mov
add
adc
pop
sti
js
repz
shlb
out
int
in
fwait
push
hlt
xor
cli
rcr
movsl
lods
andb
dec
clc
dec
iret
push
cltd
push
xor
stos
cmp
in
pushl
sub
mov
iret
xor
or
sbb
ret
jp
xchg
and
mov
jle
ljmp
popa
cmp
xor
cmpsl
pusha
and
jnp
sahf
jge
insb
scas
push
int3
imul
mov
int3
mov
leave
cmp
dec
pop
rcll
or
aam
out
fldcw
test
pop
mov
sbb
rcr
je
in
pop
mov
and
fldcw
adc
into
push
xor
lods
imul
push
pop
mov
jmp
mov
js
push
pop
mov
mov
fnsave
mov
adcl
or
mov
cltd
repnz
xchg
loopnew
add
loope
mov
xchg
ret
inc
das
and
or
imul
les
inc
add
ret
jge
mov
sahf
mov
je
iret
push
pop
push
popf
or
push
jnp
pop
sbb
and
imulb
dec
arpl
sub
mov
add
gs
fmuls
inc
int
xchg
sub
repz
popf
xchg
push
imul
in
inc
out
inc
jecxz
outsb
dec
lea
cmp
inc
mov
add
rcll
loope
lret
sbb
arpl
pusha
xor
push
sbb
mov
push
mov
xchg
pop
popf
sbb
add
ja
stos
mulb
das
stos
icebp
out
in
jle
xlat
sar
adc
movsl
fisttps
fnstenv
pop
into
mov
sub
add
scas
cmp
lods
or
or
or
xor
sbb
push
dec
sbb
es
pop
jmp
push
movsl
call
roll
leave
mov
ja
mov
subl
mov
mov
add
shll
adc
pop
adc
mov
jb
std
or
hlt
pop
push
aam
sbb
cmc
iret
cmpsl
inc
mov
imul
cmp
pop
cmp
sbb
lret
mov
leave
add
mov
push
hlt
mov
mov
sub
dec
push
xlat
cmpl
mov
ret
and
pushw
mov
and
test
inc
pop
rorb
lock
jmp
xlat
movsl
jbe
popa
sar
out
add
xor
sub
sahf
mov
repz
outsb
mull
popf
mov
aam
cmp
mov
paddb
in
sub
jmp
movsb
mov
cltd
pusha
pop
jne
popaw
stc
mov
adc
mov
xor
sub
sbb
in
cmpsl
mov
push
imulb
loopne
dec
jmp
out
loope
nop
sub
jne
clc
xchg
icebp
push
shr
sub
jb
add
cmp
imul
dec
xchg
jbe
inc
sbb
fstpl
lret
in
xchg
adc
dec
std
fs
lea
cmpsl
pop
jmp
inc
sbb
push
popf
gs
jno
jae
or
enter
int3
fdivl
sub
push
out
lds
xchg
or
xchg
mov
ja
scas
pop
ret
sbb
ss
lret
ss
jns
pop
popf
dec
cmp
inc
xchg
adc
ds
push
dec
push
ficomps
mov
push
mov
mov
xor
in
or
cwtl
jae
mov
sub
dec
mov
aad
mov
jl
inc
jno
add
iret
dec
inc
hlt
aaa
int
stos
inc
jg
mov
roll
xor
aas
push
rcl
popf
test
sbb
push
fisubl
sbb
sub
ret
cli
ss
xchg
lret
and
or
jno
jb
push
lock
out
mov
jmp
mov
in
mov
scas
sub
mov
push
lods
cs
hlt
adc
jg
push
pop
cmpsb
mov
jae
mov
in
lods
inc
xor
neg
jge
lods
sub
sub
inc
dec
inc
mov
mov
inc
in
ret
std
fisubs
in
dec
xchg
stos
stos
gs
mov
mov
xchg
adc
sbb
lods
push
xor
mov
div
jo
inc
addr16
push
jae
dec
loopne
sbb
outsl
or
sub
ficoml
xor
insl
mov
cld
inc
testb
and
ja
and
push
or
adc
xchg
dec
push
sbb
pop
rorl
outsl
sti
xor
mov
mov
loop
inc
cmp
dec
hlt
push
mov
stc
outsl
lret
add
repnz
adc
sub
loope
sbb
or
dec
aad
sbb
scas
in
jns
imul
dec
mov
push
jae
sahf
sbbl
cmp
lods
lret
ret
icebp
jle
scas
sbb
mov
mov
insl
mov
jns
stos
notl
xor
data16
jmp
test
mov
int3
xchg
pop
loopne
sub
xor
ficomps
aaa
into
pop
cmp
xchg
inc
sub
mov
scas
mov
xchg
ss
aas
and
or
stc
or
pop
int
mov
inc
sub
aam
test
mov
xchg
dec
mov
push
fcom
cs
bound
or
xlat
daa
inc
das
adc
xor
mov
shrb
xchg
fwait
cli
mov
pushf
and
mov
cmp
cli
in
clc
fidivrs
stc
mov
repz
into
cmpsl
mov
loopne
inc
fdivl
out
lret
jnp
ficompl
inc
or
pop
fcompl
lods
mov
sbb
adc
inc
add
jo
sub
test
xchg
pop
sub
sbb
notb
sbb
jmp
into
pop
sbb
sub
and
aaa
outsl
repnz
mov
push
shl
test
pop
cmp
aam
aas
ljmp
sub
add
jne
rcrl
adc
stos
jno
or
into
in
xchg
rorb
cvtpi2ps
sub
rcr
pop
ljmp
mov
stos
rorb
sub
jb
add
dec
sbb
ret
mov
adc
and
sti
mov
adc
negb
push
popa
test
movsb
cmc
ss
inc
push
rclb
pop
lds
ljmp
decb
scas
mov
inc
add
jmp
xor
icebp
add
sub
cmp
cmp
push
dec
push
repz
mov
stos
repnz
adc
out
and
jbe
test
xchg
lgs
cmp
xchg
xchg
dec
loopne
arpl
xchg
in
jmp
jbe
jecxz
push
les
add
imul
xchg
std
xchg
cmpl
insb
sahf
add
aam
fidivrl
push
insb
sub
leave
pop
or
cltd
popa
in
cmp
inc
nop
push
lock
outsb
mov
enter
jae
popf
pop
stos
sbb
pop
out
ficoml
pop
movsl
sbb
rcrl
xorb
es
lahf
xchg
cmc
and
xchg
cmp
inc
jo
jb
repz
cmp
inc
ja
fiadds
add
popa
jne
invd
sbb
clc
dec
xchg
pop
in
pop
add
out
and
cmp
xchg
addr16
push
gs
and
arpl
les
ljmp
and
push
dec
shll
lcall
mov
sub
ret
dec
shl
je
insl
int3
cs
pushf
ret
dec
ja
push
and
js
and
push
stos
dec
pop
add
insb
mov
or
jb
xchg
jg
pop
imul
or
imul
shll
ljmp
sbb
jmp
xor
ds
rcrl
loopne
inc
pop
repnz
cmpsl
ss
pop
adc
lret
pop
cmp
fcmovnu
clc
mov
aaa
fistl
je
inc
jg
dec
shrb
outsl
xchg
mov
ds
dec
jns
rorb
scas
pop
and
xchg
ror
nop
pop
push
sbbb
cld
jns
pop
mov
jno
pop
jne
add
movsb
sysret
test
jb
xchg
les
add
fyl2x
mov
outsl
repz
xor
adc
sub
lret
out
push
adc
les
subb
wbinvd
push
inc
scas
pop
out
sub
pop
je
inc
cli
fcmovne
dec
pop
nop
or
inc
or
xor
pop
xchg
xor
stos
jb
dec
sahf
js
rclb
ret
rcll
inc
ljmp
insb
sbb
enter
jne,pt
insb
jo
mov
add
add
ret
cmp
subl
dec
or
adc
sbb
xorb
or
pop
inc
test
xchg
jne
dec
adc
pop
enter
out
push
or
mov
fwait
dec
mov
xor
rorl
lock
adc
mov
shll
shr
inc
cltd
sub
dec
pop
adc
push
pushf
icebp
xchg
mov
push
gs
push
xor
jne
xor
leave
add
fsubl
mov
test
lea
std
or
mov
ja
movsb
push
mov
into
imul
dec
lret
movsl
out
or
jge
fldcw
mov
mov
jbe
mov
fsubl
loopne
or
xor
mov
push
sahf
mull
mov
rcl
xchg
adc
fwait
or
sbb
int3
jp
daa
mov
imul
pop
push
mov
clc
mov
scas
xchg
inc
cli
mov
jg
cmpsl
in
jns
cmp
pusha
inc
add
mov
inc
out
test
cmp
leave
inc
jnp
or
lock
push
sarl
into
and
arpl
outsb
stos
cmp
in
and
repz
popa
xlat
sbb
repnz
pop
xchg
insb
out
pop
mov
into
pop
cmp
lret
out
loopne
fidivrl
and
push
aam
arpl
jnp
xchg
clc
fsubrl
fildll
mov
addr16
lret
add
jg
stos
pop
loopne
sub
sub
call
dec
add
mov
pop
test
xchg
jge
fisubrl
pop
add
and
cwtl
inc
mov
jo
xor
mov
lcall
dec
in
int3
arpl
jo
jns
dec
sti
cmp
cmp
je
xchg
js
adc
xor
jmp
popa
imul
push
adc
add
dec
scas
dec
pop
push
cmp
jecxz
add
in
sarl
ffree
test
inc
pop
push
sub
mov
xchg
cld
hlt
stos
add
mov
mov
lods
jnp
popf
mov
scas
ret
ret
mov
int3
fidivs
cld
mov
movsl
add
jmp
lods
push
push
cmp
dec
adc
cmp
call
mov
daa
push
aam
xor
and
fisubrs
pop
mov
test
mov
orl
mov
xchg
jmp
mov
mov
lods
inc
test
mov
loope
and
or
outsb
mov
repz
outsl
cmpsb
mov
mov
cmc
add
iret
shl
inc
inc
xor
cmp
or
pop
push
lcall
mov
call
or
xchg
imul
mov
pop
xor
aad
lret
add
xor
pop
mov
notl
inc
lret
jg
jmp
dec
sahf
popa
push
cmc
outsl
out
pop
fs
mov
inc
jg
inc
mov
pop
scas
cmpsb
mov
dec
popf
push
sbb
cltd
daa
int
mov
fs
lahf
in
pop
loope
add
or
je
and
fstl
mov
data16
adc
add
sbb
jmp
inc
std
fiaddl
shrb
sub
add
sbb
insl
lahf
iret
pop
cld
fs
out
ja
sub
mov
xchg
sti
push
mov
xchg
xchg
mov
lcall
push
and
sti
aad
pop
clc
mov
stos
or
mov
repz
repz
bswap
test
and
movsb
inc
loop
rcpps
stc
pop
stc
int3
adc
xchg
jne
pop
insb
mov
cmp
jae
rclb
std
call
mov
mov
in
insb
sub
mov
pop
call
push
insl
push
or
fs
sbb
pushf
xchg
movsb
add
sahf
fwait
or
jl
jb
repnz
into
mov
fstpt
xor
xlat
fistps
les
les
pop
push
lret
xlat
sbb
cmp
test
sti
dec
push
sbb
imulb
jo
add
jg
std
sbb
adc
int3
lods
clc
adc
sahf
sbb
xchg
sbb
and
pop
mov
aam
iret
dec
and
jmp
mull
pop
cwtl
xchg
movsb
or
out
aad
sub
mov
push
rcll
enter
inc
push
nop
mov
mov
loope
or
cmp
mov
in
addr16
jae
pop
and
loope
aam
sub
pop
sbb
rcll
das
hlt
outsl
push
shrb
push
loope
sbb
jae
pop
das
cwtl
out
mov
add
xchg
pop
dec
pusha
cmpb
dec
jmp
dec
sub
and
cmp
test
push
cmovle
jo
popf
lods
adc
mov
idivb
adc
shll
bound
jne
cmp
xchg
pop
stos
pop
int3
or
or
js
jno
mov
outsb
lea
sbb
xchg
out
repnz
adc
cs
sub
cli
jle
imul
cmp
and
icebp
dec
and
stos
mov
scas
jbe
mulb
adc
cld
mov
nop
in
js
mov
mov
or
jae
adc
mov
dec
jb
dec
lods
sbb
mov
ljmp
testl
cli
cwtl
in
data16
insl
ret
mov
mov
ja
lcall
or
daa
lar
xchg
nop
cmp
mov
or
xchg
test
icebp
out
push
insl
mov
mov
dec
jbe
mov
xor
jnp
inc
dec
adc
dec
orb
pushf
sbb
push
sub
fcoms
lods
xor
ret
jg
inc
js
adc
push
cli
push
push
lock
mov
lcall
fdivrs
jl
pop
insb
jnp
ret
call
dec
es
push
pop
dec
push
sbb
xchg
push
and
push
shl
sub
pusha
es
pop
subl
popa
push
and
jmp
dec
jne
loop
mov
mov
leave
jns
push
lcall
xlat
outsl
int
xchg
leave
sub
in
xchg
popa
imul
in
inc
push
shl
jno
push
add
iret
sub
pop
dec
jnp
ljmp
mov
sbb
inc
test
xchg
add
lods
enter
jbe
jb
sub
xor
ds
les
je
jl
lret
fimull
push
mov
test
fwait
xchg
cmpl
pop
mov
inc
sbb
dec
cmp
cltd
pop
sbb
imul
je
sub
out
xor
popa
cmp
cwtl
ss
xorl
cmp
int3
mov
gs
out
xorb
fcmovb
sub
cmp
jo
fwait
xchg
sub
adc
mov
xlat
xor
bound
in
jg
cmp
or
xchg
nop
push
mov
mov
xchg
push
idivl
outsl
inc
sub
insb
cmpb
jecxz
cld
sbb
int
repz
lds
or
xor
fisttpl
lods
pop
xchg
sub
cmp
lret
subl
jo
xor
cmp
pop
repz
add
movsl
inc
clc
rcrl
dec
jno
sub
notb
in
rclb
fistl
xchg
cmc
outsl
lds
push
sub
inc
jge
rolb
mov
dec
lret
std
add
and
orl
clc
xlat
xchg
push
lods
rolb
jo
sbb
push
jecxz
adc
loop
jl
add
mov
pusha
je
sub
fnstsw
or
dec
dec
sub
ljmp
cld
rol
inc
lock
jae
in
push
adc
push
jg
push
sbb
lods
xor
mov
call
xor
inc
out
inc
xchg
inc
xchg
mov
insl
add
leave
and
leave
dec
fwait
or
shll
mov
out
sbb
xor
int3
lods
mov
xor
in
jno
cmpl
xchg
push
xchg
jle
pop
push
mov
jae
in
or
cvtps2pd
addr16
test
push
or
cmpsl
jne
scas
and
in
inc
les
popf
pop
dec
xor
fistps
ja
enter
add
dec
mov
loope
idivl
das
fdivrp
xor
jl
xchg
cs
loope
mov
mov
adc
sqrtps
cld
mov
xchg
sbb
jae
clc
jmp
mov
jno
test
fsubl
adc
and
pop
push
dec
inc
push
cmpsb
mov
inc
inc
aas
adc
mov
pop
movsb
adc
fistps
ret
pop
xchg
add
fcompl
dec
out
and
sub
or
push
add
jmp
pop
mov
roll
cmp
xchg
add
mov
adcl
mov
xor
les
dec
mov
clc
mov
jo
lods
jo
sub
sbbb
jmp
jbe
js
jmp
push
adc
nop
inc
sahf
vmwrite
mov
xchg
pop
mov
sbb
shll
mov
idivb
lea
mov
xor
dec
test
scas
dec
jge
mov
sbb
bound
in
imul
mov
pop
sbb
pop
mov
fidivrs
pushf
or
jp
imul
addr16
std
jle
in
inc
push
fyl2xp1
adc
sarb
xorl
in
and
dec
push
out
dec
cmpl
divb
mov
aam
cmc
and
imul
rol
push
enter
ret
adc
push
pop
repz
mov
jbe
mov
adcl
mov
jge
jne
pop
ret
jns
xchg
mov
test
and
xlat
xchg
mov
xchg
and
xlat
or
bound
jecxz
push
pop
fcmovu
fwait
mov
sbb
pop
or
inc
xor
icebp
inc
jp
pushf
dec
push
inc
adc
xchg
sub
dec
fdivrs
mov
fdivs
jl
stos
add
adc
xchg
mov
pop
lods
mov
sub
popf
xchg
pop
sub
shlb
ss
mulb
jne
fcompl
call
out
xor
repz
mov
ds
sub
and
and
sbb
and
rclb
pop
add
dec
out
mov
jge
imul
sbb
fnstenv
das
dec
imul
push
jmp
sbb
dec
in
xchg
mov
pop
int3
test
push
adc
cmp
jo
push
push
or
std
aad
les
test
add
or
or
mov
test
inc
push
mov
inc
dec
jmp
and
xor
inc
push
or
repz
jmp
cmp
iret
mov
sub
jmp
faddl
call
je
and
int3
mov
fistpll
js
fisubrl
out
xchg
cwtl
jl
push
inc
stos
inc
sub
pop
inc
lods
je
push
lock
lds
inc
sti
mov
lea
add
pop
mov
adc
jecxz
int3
mov
movsl
jnp
jl
sbb
inc
pushf
or
cmpsb
out
inc
jmp
fnclex
out
xchg
inc
and
xchg
gs
movsl
out
and
cmpb
popf
sub
sahf
movsb
std
mov
cwtl
nop
stos
mov
xor
mov
inc
repnz
das
mov
mov
jl
sub
stos
aad
push
daa
inc
add
loop
mov
lods
mov
notb
xor
cmp
and
mov
dec
cmp
in
hlt
mov
cmp
xchg
jb
aaa
lret
ret
pop
stc
push
mov
fldcw
inc
idivl
add
xchg
mov
xchg
lret
out
sub
enter
fistpll
jne
mov
and
andl
aaa
inc
stc
dec
or
fisttps
jns
add
jmp
sarb
or
stos
mov
inc
pop
xor
pop
iret
insb
stos
xchg
in
mov
sub
loopne
jl
add
lods
es
sahf
dec
mov
xchg
in
imul
jb
sbb
jmp
xor
xor
pusha
mov
cmp
pop
fbstp
call
cmp
dec
mov
or
jno
sbb
xchg
or
les
pop
dec
out
rcl
or
push
sbb
lock
nop
cli
add
bt
pop
cmp
outsb
and
out
outsl
push
lods
cmpsl
clc
dec
jmp
and
shl
mov
xchg
inc
mov
pop
push
movsl
cmp
mov
ljmp
dec
jbe
cmp
out
dec
mov
call
ficompl
aas
dec
and
jmp
fyl2x
push
stos
mov
inc
xor
inc
test
fcomp
test
pop
addr16
cmpsb
adc
ret
out
jge
addl
cmp
pop
cmpsl
push
enter
adc
movsl
vpcomuq
adc
lcall
popf
push
xchg
sti
push
mov
aam
xchg
sahf
and
pusha
push
sti
xchg
dec
and
lods
jo
roll
jbe
cmp
imul
adc
jnp
cwtl
mov
lock
repz
cmp
sub
enter
lcall
mov
and
inc
pop
mov
hlt
aas
mov
xor
adc
rol
or
out
mov
in
or
pop
and
cmp
push
dec
int
hlt
and
and
inc
adc
jmp
push
pop
sbb
pop
dec
out
dec
or
fbld
jecxz
and
sar
lret
xor
test
movsb
mov
xchg
mov
rcl
mov
cmc
nop
js
push
data16
leave
movsl
adc
add
popa
fisttps
pop
fnsave
nop
fwait
sbb
or
push
jle
push
xchg
lods
xchg
arpl
mov
shl
jmp
fiadds
fsubrp
xor
mov
std
dec
adc
and
push
in
mov
dec
xor
and
int
fwait
sbb
dec
inc
ror
xor
shlb
jge
rcrb
sub
fdivs
mov
pop
jae
aam
aam
mov
jnp
pop
addl
shrl
cmp
pop
sub
repnz
inc
xchg
lods
mov
lret
pop
dec
mov
call
out
repz
ja
aaa
and
loope
addr16
sub
jbe
sub
mov
jb
sbbl
add
neg
fnsave
xor
clc
out
push
jne
mov
mov
and
aaa
and
jecxz
add
add
xchg
test
lock
or
sarb
hlt
stos
or
fcomp
sub
pop
jno
ret
sub
je
mov
enter
mov
stos
cwtl
add
adc
lods
lret
inc
and
push
mov
cmp
and
bound
adc
mov
je
or
nop
dec
and
cmp
jb
out
pop
and
push
jp
xor
sbb
icebp
dec
push
nop
push
mov
push
popf
addb
in
rorb
adc
stos
insb
xor
popl
inc
inc
inc
lcall
jnp
dec
mov
stos
push
outsl
add
inc
sahf
or
or
and
jne
push
jp
jg
loop
jnp
gs
jnp
pop
sarl
dec
jbe
or
push
mov
jge
dec
or
mov
int3
mov
cmp
jns
add
cmp
js
repnz
idiv
inc
dec
lcall
movsl
scas
mov
fbld
inc
popf
pushf
fmuls
cld
dec
ja
and
imulb
dec
mov
and
xor
xorb
dec
adc
xchg
inc
pop
int3
in
add
fnstenv
scas
and
test
dec
push
incl
rorb
lret
mov
lods
and
imul
mov
stos
add
aam
xor
icebp
mov
popa
jbe
pop
out
dec
cmpsb
repnz
jmp
pushf
xor
mov
fisubl
or
mov
pop
fistl
pop
mov
pop
pop
push
movsl
mov
repz
negb
movsb
adcb
jl
sub
sbb
pop
lds
test
ja
or
test
mov
clc
mull
push
add
hlt
call
pop
mov
leave
cld
jmp
lds
jnp
ret
xchg
aad
pop
cwtl
bound
xor
jno
mov
popa
popf
stos
xchg
dec
adcl
lea
movsb
aaa
loopne
sub
scas
insb
jnp
popf
push
adc
mov
jb
inc
pop
test
mov
jle
fwait
push
shl
aaa
mov
stc
insb
pop
cmp
vxorps
pop
aaa
ljmp
ret
sti
rcll
lret
mov
iret
ljmp
or
pushf
jne
jecxz
in
add
lret
xor
dec
daa
in
in
fistpll
imull
cli
mov
cmp
sbb
imul
xor
fdivrl
xchg
loopne
xor
mov
fwait
mov
add
ljmp
ss
lret
leave
fmuls
roll
jnp
mov
jns
lock
add
scas
and
xor
testl
stc
jle
inc
lock
cmovo
mov
push
movsb
pop
xor
xchg
or
clc
iret
jns
repz
stc
div
fiadds
int3
mov
pushf
nop
sub
je
sbb
mov
inc
xor
clc
test
js
andb
inc
test
imul
in
roll
shrl
rcll
shlb
mov
into
pop
adc
stos
pop
jb
push
push
cmpb
push
andl
adc
sub
dec
dec
pop
mov
mov
sub
mov
imul
lods
js
jae
rcrl
cli
jl
mul
loop
int3
add
or
dec
jnp
repz
fisttps
jnp
imul
xchg
in
dec
xor
jo
in
cmpb
bound
inc
push
mul
fnstsw
shll
mov
pop
sub
in
repnz
or
dec
pop
add
test
mov
mov
dec
or
leave
or
shrb
insb
lods
or
lods
das
aas
adc
add
adc
dec
or
out
push
cli
leave
daa
xchg
scas
pushl
lds
push
xchg
or
fistpl
out
and
fisubs
popa
repz
adc
imul
xchg
and
or
or
lahf
cmpsl
out
push
mov
and
int
loop
sub
mov
subl
out
push
add
jno
xor
je
pop
lahf
pop
push
inc
dec
mov
dec
cmp
outsb
insb
inc
fidivl
pop
push
leave
xor
mulb
push
lods
test
shl
loope
cmpsl
ljmp
xchg
inc
sbb
scas
imul
clc
ds
mov
cwtl
xchg
pop
mov
test
mov
clc
lods
stc
mov
inc
mov
cli
cmp
test
clc
cmovae
bound
repnz
pop
adc
lods
fsubrl
pop
scas
fld
jae
out
or
shll
iret
sahf
sti
fs
movsb
dec
cmp
jo
ds
ljmp
xor
out
push
fadds
inc
add
arpl
and
cltd
lods
push
in
test
mov
cmp
jne
dec
xchg
jbe
jns
cli
push
pop
sbb
dec
add
int
sbb
lret
aaa
daa
sbb
sahf
rol
scas
clc
shrl
test
repnz
mov
in
sub
aas
in
cmp
fnstenv
inc
mov
mov
out
leave
test
test
notl
ss
mov
sahf
pop
cmp
ljmp
loopne
jne
dec
shll
and
jo
ds
mov
push
test
fs
fwait
ror
notb
inc
xchg
out
ja
and
jge
daa
or
jmp
ja
lock
mov
adc
shlb
and
inc
ret
mov
ss
fldl
and
addr16
leave
mov
push
inc
cmp
cmc
shr
int
add
imul
cmp
divb
leave
pop
jle
adc
push
mov
shll
std
js
mov
jg
mov
xorl
leave
in
imulb
je
andb
cltd
xchg
cmp
pop
inc
xor
fidivrs
out
or
mov
aad
add
jl
lods
mov
jnp
repz
dec
into
push
idivb
dec
iret
adc
sub
aaa
add
jns
sub
test
jno
or
pop
cmp
cli
mov
leave
outsl
cwtl
in
jg
jle
sub
push
bound
jne
clc
pop
std
xor
xchg
dec
xchg
jmp
xor
pusha
das
pop
add
jecxz
fsubl
fwait
inc
or
imull
lds
je
fdivs
push
and
xor
jb
xor
jbe
mov
out
aaa
mov
pop
xor
in
xchg
iret
pushf
jne
pop
fcoml
sbb
inc
cmp
subb
mov
push
sub
adc
jp
mov
mov
xchg
scas
jg
push
xor
xchg
insb
sub
add
push
cmp
sarb
sarl
shll
dec
and
ljmp
pop
mov
jg
in
jbe
xchg
stos
adc
adc
mov
mov
push
cmpsl
jae
sbb
lea
adc
inc
fisubrs
je
pop
pusha
xchg
adc
pop
rcrb
inc
jno
das
fwait
les
fistps
jb
lods
inc
pushf
xchg
jl
xchg
cmp
int
mov
outsl
cld
mov
lds
mov
ret
or
push
mov
push
mov
outsl
pop
popa
lock
push
lret
xlat
jg
xchg
stos
fists
sbb
scas
daa
mov
pop
cmpsl
mov
repnz
pusha
jmp
inc
push
push
inc
mov
fdiv
sbb
jg
int
pop
subb
hlt
test
pop
stos
xor
mov
clc
cmp
push
mov
add
mov
sbb
data16
push
or
ja
cmp
pop
xor
mov
dec
pop
cli
or
stos
cwtl
repnz
push
movsb
incb
and
sbb
add
mov
sbb
sbb
pop
jmp
xor
pop
jl
ds
inc
jg
adc
in
jmp
iret
ds
ror
loop
outsl
jecxz
fidivrl
inc
mov
sahf
test
mov
mov
loope
mov
iret
push
fisttpll
stos
es
int
movsl
and
push
dec
lods
int
addl
jae
jne
inc
mov
arpl
sbb
xor
pop
add
dec
jp
inc
jmp
popa
add
push
lahf
subl
fsubrl
cmp
dec
out
and
push
sahf
rorb
mov
fistpll
xor
mov
pusha
sbb
cs
js
dec
call
out
adc
mov
jae
or
sub
add
xchg
pop
bound
pop
loopne
cwtl
cs
insb
sub
stos
or
or
cs
outsl
and
out
in
ds
xor
jae
mov
rdmsr
pop
xchg
outsb
imul
mov
sub
ret
mov
push
adc
xor
pop
mov
dec
js
jl
xorl
jb
sub
cmpsb
and
mov
das
sub
aam
lea
inc
mov
xchg
jl
push
jmp
inc
xchg
pop
jge
adc
out
mov
mov
add
imulb
ds
jb
mov
cmpsb
addr16
call
imul
sbb
adc
in
mov
mov
jmp
cmc
shlb
add
sbb
mov
lea
mov
addb
mov
jo
jle
pop
pop
arpl
or
mov
xchg
jo
fmuls
notl
cmp
mov
aas
push
xchg
and
dec
aas
adc
mov
sub
xchg
or
cmp
mov
mov
mov
jge
pop
xchg
adc
add
icebp
lock
hlt
out
xor
xor
push
mov
std
pop
fsubrl
or
or
jmp
mov
ljmp
aam
insl
mov
loope
push
sbb
faddl
ljmp
les
je
dec
lods
mov
push
push
mov
movsb
cld
fs
lods
push
ret
push
cmpsl
call
xor
xor
xchg
int
mov
jmp
mov
xchg
xchg
mov
mov
gs
mov
cmp
hlt
mov
lea
mov
adc
lahf
cmp
loopne
js
and
mov
movsb
push
pushw
jae
mov
xchg
pop
cmpsl
sti
push
fwait
dec
inc
add
es
fcomp
xlat
adc
pop
ljmp
aad
inc
xor
mov
scas
mov
dec
xchg
sahf
and
jl
adc
ljmp
mov
xchg
jbe
or
jmp
mov
mov
pushf
push
out
aas
dec
or
pop
cs
cmc
inc
dec
imul
push
adcl
or
dec
ds
adc
test
pop
pop
push
pop
ljmp
adc
lahf
jp
xchg
hlt
fnstsw
iret
and
xchg
sahf
pop
inc
sbb
jp
insb
xlat
rol
outsb
loopne
test
adc
pusha
xchg
sahf
cltd
out
fs
adc
insb
ljmp
pusha
aas
lds
call
pop
inc
xor
shrb
ja
jg
call
mov
xor
das
pop
aam
xchg
jns
push
aad
xor
push
mov
in
shr
mov
inc
clc
push
jae
mov
mov
int3
jb
cwtl
lcall
cmpsl
dec
inc
lcall
dec
and
dec
jle
ret
add
mov
fwait
and
popa
mov
mov
inc
shrb
imul
push
sti
repnz
andb
push
test
push
push
lea
dec
dec
cld
jbe
icebp
incl
and
es
pop
mov
shrb
hlt
ffreep
pop
ds
cmp
repnz
pop
cli
shrb
cmp
in
nop
test
pop
cmp
adc
cmpsl
icebp
idivl
push
in
fsubl
or
inc
push
in
mov
dec
popa
mov
sub
fdiv
sbb
mov
push
pusha
rolb
aam
inc
sbb
cld
repz
lahf
and
sti
xchg
pop
mov
sbbb
xchg
popa
test
flds
out
dec
mov
xchg
dec
push
jbe
inc
imul
dec
pop
pop
mov
repz
adc
adc
xchg
inc
push
aad
mov
xor
popf
xchg
push
mov
in
lret
mov
mov
push
sbb
shrl
lret
pop
sbb
lahf
mov
pop
clc
add
mov
bound
pushf
lret
jnp
mov
push
add
and
outsl
movsb
jecxz
fmuls
shl
aaa
std
adc
call
pop
or
push
lahf
sbb
mov
gs
lea
mov
xor
or
mov
jns
or
jbe
xor
or
dec
mov
xlat
push
fimull
ljmp
inc
dec
mov
sub
dec
popf
inc
cmc
repz
mov
icebp
es
dec
mov
mov
sub
mov
push
pop
xchg
inc
mov
inc
fcomip
cld
mov
ss
inc
xor
cli
push
xchg
mov
clc
push
cmp
cmpxchg
pop
add
mov
movsb
es
mov
test
dec
hlt
cmpsb
sahf
pop
or
or
dec
call
cmpsb
sbb
or
mov
cmpsl
jge
stos
mov
cmp
add
sub
cmp
xlat
lea
add
inc
iret
or
mov
xchg
cmpsl
pop
xor
mov
xor
push
mov
test
pop
inc
pop
jne
jo
push
mov
push
out
jb
xchg
in
jl
mov
aam
xchg
push
mov
push
call
insl
andl
mov
xor
cs
or
outsb
ret
cmp
mov
sbb
jmp
divb
inc
cmpsb
cmpsl
add
hlt
and
mov
xchg
fs
mul
outsl
pushf
pop
push
ror
pop
loope
sbb
arpl
lods
xchg
fmull
movsb
imul
inc
sti
iret
or
sub
mov
inc
push
xchg
out
imul
pop
pushw
sub
jns
mov
ficoml
or
jne
xor
add
dec
xlat
dec
sti
icebp
lods
dec
mov
jmp
xor
rcrl
pop
insl
inc
or
in
and
repz
icebp
cmp
sub
dec
fs
dec
inc
sbb
push
inc
fnstsw
test
mov
and
and
adc
push
sbb
or
iret
pop
scas
movsb
mov
xchg
xchg
mov
jecxz
bound
mov
or
mov
cli
rorb
out
icebp
push
xchg
mov
ficomps
cmp
sbb
aam
add
rcpps
add
xchg
dec
push
sub
js
ja
test
sub
out
mov
add
int3
dec
sti
cmp
in
das
not
pop
adc
cmp
dec
cltd
jmp
mov
jns
jo
enter
mov
popa
sbbb
or
sbb
lds
xchg
shlb
cmp
or
mov
push
jge
lcall
pop
dec
enter
xor
aam
aas
cmp
inc
pop
shl
sub
clc
fnsave
sbb
pop
stos
or
in
dec
hlt
xchg
lods
repnz
cmc
fdivrs
xor
shlb
call
fdivp
and
fwait
pop
mov
add
repnz
int
daa
jo
mov
push
aas
jbe
inc
sbb
fwait
insb
fsubrl
or
insl
js
scas
mov
out
sbb
jnp
jle
add
push
inc
sbbb
test
sub
ljmp
xchg
shlb
enter
and
fstpt
ret
pop
adc
pop
cmc
dec
pop
pop
gs
and
gs
mov
jae
inc
addr16
sbb
lret
push
sub
movsb
cmpsb
xchg
xlat
add
sbb
lahf
cli
jg
and
mov
ss
push
incb
lds
mov
sbb
call
out
or
and
loopne
sub
xor
mov
fsubrl
xor
ficoms
cwtl
sub
add
call
hlt
push
js
jp
jmp
cwtl
xor
out
and
ljmp
mov
inc
dec
jno
push
fsubrp
in
xchg
mov
imul
xor
and
mov
out
mov
dec
push
sbbl
inc
lret
imul
call
sahf
xchg
jg
xor
pop
popa
jo
jae
xchg
mov
push
lock
pop
frstor
sub
loopne
add
fisttpll
inc
and
imul
jge
cmc
in
sbb
scas
dec
add
pop
push
xor
fidivrl
lcall
mov
mov
push
loopne
mov
sbb
ds
inc
fisubrl
insl
push
push
add
push
imull
mov
iret
add
add
xchg
ret
jmp
adc
lods
addr16
outsb
call
stos
gs
je
jg
sub
jne
xchg
push
aaa
repnz
cwtl
push
jnp
push
ds
out
sarb
int3
mov
and
xor
and
std
movl
ret
dec
sub
fldt
mov
or
iret
sub
xorl
scas
div
adc
jno
idivl
fsubrs
jecxz
fidivrs
mov
cmpsl
pop
adc
incb
fwait
pop
fidivrl
mov
push
std
and
push
or
adc
add
cwtl
es
fmull
fdivrp
cmp
mov
xor
movsl
inc
les
outsl
xchg
sbb
sahf
cmp
jns
mov
stos
out
cmpsb
lret
arpl
xchg
inc
xchg
cmc
jmp
enter
mov
xchg
inc
stos
insb
jle
iret
idiv
push
or
and
fldcw
cmc
adc
fisubrl
lds
fildl
mov
dec
leave
jno
shlb
pop
push
lock
pop
xor
punpcklwd
sbb
xchg
lods
test
repnz
pop
into
stc
inc
push
ret
inc
sahf
enter
sub
xor
ret
add
in
push
fwait
mov
cmp
cmc
inc
or
subl
adc
pop
ds
jg
in
dec
sbb
aas
test
fs
ljmp
fadds
mov
dec
cmpsb
stos
sbb
dec
mov
push
in
mov
jno
loopne
mov
hlt
ret
jnp
mov
inc
add
leave
in
or
push
or
dec
add
dec
adc
psubusw
loop
popf
into
out
pushf
adc
insb
fwait
into
insb
repnz
ds
repz
jbe
xchg
out
xchg
xor
clc
inc
sbb
outsb
cmp
test
pop
imul
push
jne
icebp
add
fidivrl
adc
je
inc
adc
aad
mov
mov
int
xor
insb
mov
xor
mov
xor
in
frstor
js
cli
dec
mov
rol
daa
jae
sub
pop
cli
gs
daa
mov
sbb
mov
add
pop
jae
dec
repnz
test
dec
aaa
pushf
ljmp
ja
inc
xorb
dec
or
in
lods
ja
push
xchg
cmpsb
push
mov
lcall
or
popf
sub
push
push
pop
icebp
imul
movsb
into
mov
jge
addr16
xchg
xchg
add
or
ret
inc
jno
push
sub
pop
sarl
xchg
std
fisubs
xorl
cltd
xchg
or
mov
inc
cltd
ja
fimull
stc
cs
ss
mov
fcmove
into
ja
out
or
cmp
call
fisubs
xchg
imul
pop
popf
xchg
adc
bound
loop
xchg
outsb
in
dec
popa
jmp
je
xchg
shlb
loop
cmp
xor
mov
out
add
dec
dec
xor
adc
imul
test
add
in
ficomps
or
out
inc
push
dec
movsl
inc
dec
cmp
mov
xchg
pop
rcll
mov
push
ret
test
loop
cmp
xor
lds
cld
inc
mov
dec
mov
out
cmp
add
xor
aaa
pop
mov
sbb
and
in
jle
data16
ffreep
xor
loope
in
aad
jb
in
xchg
loop
cltd
lea
dec
fucomip
mov
sbb
rclb
mov
call
or
add
pmullw
cld
dec
iret
sarb
mov
mov
nop
sbb
fmuls
int
fcoms
in
cmp
xchg
pop
sbb
ror
gs
cwtl
syscall
inc
test
cwtl
icebp
jb
iret
ror
inc
icebp
icebp
jne
inc
fsts
sub
xor
dec
out
dec
test
je
add
dec
adc
lret
lods
dec
cmp
movsl
int3
outsl
lds
call
js
sbb
jae
imul
sbb
push
mov
adc
mov
ficompl
add
stos
inc
pop
js
xchg
mov
xor
dec
jno
mov
mov
mov
nop
jp
sub
lods
dec
les
insb
mov
popa
inc
inc
pushf
shrw
xor
mov
jl
into
mov
data16
mov
and
adc
xchg
add
sbb
leave
jmp
dec
aaa
repz
mov
mov
cmpsb
push
divb
inc
xchg
lret
push
jo
pop
jbe
clc
add
dec
leave
push
push
xchg
aaa
in
mov
cmp
pop
insl
mov
gs
mov
inc
add
jmp
gs
xor
push
sub
icebp
outsb
rcrl
in
pop
into
xor
or
xorl
pop
or
sbb
xor
bound
pop
popa
and
lds
cs
or
arpl
imul
aam
inc
jmp
addr16
mov
out
pop
mov
push
cmp
add
jmp
jbe
or
pushf
jne
jne
or
call
jg
mov
pop
xor
iret
xchg
lock
adc
xchg
xlat
sub
cs
dec
jae
and
out
scas
lods
inc
inc
jbe
push
pop
sbb
or
std
jb
cmp
sub
adc
push
mov
push
sub
mov
aad
mov
loop
dec
sbb
inc
mov
inc
scas
dec
mov
xor
ficomps
push
add
cltd
icebp
rcrb
shrb
mov
pusha
xchg
test
std
xor
shl
mov
shlb
inc
adc
inc
pop
out
sarb
push
jnp
testb
insl
lahf
push
mov
sub
mov
mov
mov
xor
adc
mov
shrd
bound
imul
out
leave
leave
xchg
lock
jae
add
adc
std
popf
aas
sub
divl
cld
jle
loopne
dec
push
jno
jmp
jnp
arpl
incl
fwait
shlb
mov
cmp
hlt
and
mov
push
xchg
mov
sbb
shl
mov
mov
scas
xchg
and
push
jne
push
mov
jle
add
test
in
sbb
mov
sahf
sbb
dec
jmp
mov
mov
int3
stos
pop
int3
inc
mov
lahf
and
stos
filds
pop
mov
aaa
xor
lds
jb
lods
push
mov
cmp
xor
arpl
jb
pop
iret
ret
cld
cmp
pop
js
ja
rorl
xor
dec
leave
fisttpll
and
push
sub
dec
pop
sub
les
bound
flds
xlat
lods
sarb
movsl
filds
int3
xchg
pop
and
sbb
in
subl
jns
cmpsb
mov
adc
xor
mov
push
out
mov
inc
test
flds
test
dec
outsl
cmp
les
mov
pop
cli
add
inc
ja
pop
mov
push
push
jmp
rcl
gs
inc
adc
cmc
lods
jb
jp
sbb
inc
sbb
lds
movsl
and
cwtl
cmp
iret
push
mov
mov
mov
and
out
leave
sti
sub
sar
jp
scas
js
shlb
hlt
leave
pop
xchg
test
mov
lea
and
cmc
push
mov
js
cmp
fdivr
inc
xlat
xchg
jno
mov
test
inc
lods
sbb
xor
inc
popf
xchg
cmc
adc
js
jg
cmc
pop
aas
sti
cmpsl
add
adc
inc
out
shrb
jmp
push
push
mov
mov
movsl
addr16
insl
hlt
loope
jnp
rol
loop
cmp
lret
notb
sub
cmp
jg
dec
add
icebp
fsubs
stc
lea
ja
fwait
and
divl
in
int3
leave
xchg
idivl
fstpt
fnstenv
mov
adc
sbb
int
inc
push
mov
mov
cmc
js
sbb
andl
fs
and
inc
mov
movsl
jecxz
shll
jmp
lret
mov
jge
pop
test
fimull
cmp
cmp
insb
jnp
outsb
data16
jns
jmp
adc
nop
das
xchg
subb
cwtl
mov
mov
mov
or
aad
pop
xchg
jbe
subl
aam
cmc
jne
mov
ljmp
imul
pop
outsb
enter
dec
jb
adc
and
xchg
dec
pop
or
inc
inc
adc
divb
stos
pusha
push
arpl
pop
shl
jmp
mov
and
xchg
out
mov
pop
pop
jno,pt
cwtl
shlb
ljmp
bound
out
xor
imul
popl
mov
repz
aaa
insl
mov
int
lods
repz
ror
or
nop
pop
rcr
xchg
dec
mov
fwait
push
add
fdivrl
push
fdivs
sahf
imul
xlat
mov
pop
xchg
sbb
inc
push
cld
adc
in
mov
mov
mov
fisttpl
movsb
push
nop
dec
test
cmp
and
lds
hlt
outsb
js
jmp
test
pmullw
int
cmp
mov
sub
repz
lahf
push
mov
je
sub
mov
mov
cmp
movaps
cs
ret
cmp
out
pop
outsb
mov
mov
mov
stos
rcl
aam
enter
inc
andl
push
dec
push
add
ss
mov
cmpsb
dec
pop
xchg
add
aas
mov
call
loop
leave
orl
mov
push
sbbl
xchg
sbb
add
decl
ds
jb
cmp
repnz
inc
pushw
rcrl
pusha
mov
add
push
das
inc
movsb
pop
test
adc
sbb
xchg
sbb
leave
or
data16
lds
xchg
sbb
and
mov
lret
test
cmp
das
cld
jl
ljmp
sbb
pop
push
out
ja
adc
stos
mov
rolb
inc
sbb
and
rorb
or
jb
mov
cli
clc
mov
pusha
sbb
and
sub
mov
dec
mov
add
ss
cli
xor
roll
scas
rolb
sub
inc
loop
cltd
lret
mov
dec
push
mov
xchg
dec
inc
jb
jo
in
iret
rclb
in
sub
out
inc
mov
cmp
jge
xor
iret
inc
popa
push
push
cli
cmpsb
std
xchg
insl
bound
push
shlb
lock
and
adc
das
xchg
popf
sbb
call
and
repnz
and
xor
mov
sub
pop
pop
sub
sbb
adc
jb
jmp
aad
sub
mov
mov
mov
dec
mov
mov
xor
sbb
movsb
xchg
out
clc
cmpsb
dec
imul
mov
and
push
les
mov
mov
insb
dec
mov
aas
out
adc
cli
ljmp
addb
repz
lahf
mov
mov
stc
icebp
lret
imul
test
ret
mov
enter
sub
mov
outsb
jp
pop
and
dec
xchg
xlat
negb
in
pop
and
cmp
leave
mov
pusha
movsb
xchg
sbb
ss
jno
popf
fninit
mov
test
scas
ss
iret
mov
les
cli
add
std
les
add
imul
adc
in
pusha
mov
inc
mov
add
inc
cwtl
mov
mov
mov
cmp
test
pop
int
mov
mov
push
mov
xor
jnp
pusha
add
imul
mov
sub
fs
xrelease
pusha
pop
push
shrl
leave
mov
popfw
dec
iret
or
cmp
push
cmc
adc
les
add
not
inc
inc
and
pop
imul
mov
push
jae
xor
pop
xor
xchg
add
in
sub
les
push
pop
lahf
jb
push
lods
shrb
cs
xchg
gs
sbb
sahf
ret
dec
xchg
push
xor
bsr
or
xor
jno
mov
xor
xchg
sahf
push
jg
pop
sbb
in
cmpl
pop
pop
scas
repnz
cs
mov
mov
sbb
hlt
lahf
loop
cli
fwait
mov
and
popf
xor
mov
jmp
adc
pop
cmp
pop
mov
test
mov
push
movsl
cmc
int
sub
jne
jae
aad
test
jecxz
adc
mov
rclb
xor
adc
lcall
ret
repnz
push
pop
ds
pop
push
dec
or
adc
insb
in
outsb
lock
pop
mov
dec
fiadds
aas
lahf
loop
in
test
sub
aas
fisubrs
scas
inc
pop
loope
xor
jg
dec
fneni(8087
dec
or
jne
pop
hlt
insl
jle
mov
dec
fnstsw
js
pop
add
cli
adc
and
add
jecxz
pop
cmp
and
sub
mov
lret
and
or
in
sbb
test
jb
cmp
xor
imulb
cwtl
xchg
jne
inc
subb
cmp
xchg
pop
cs
jne
lds
xor
mov
test
cmovns
xor
cmp
sbb
and
arpl
and
decl
std
mov
push
imul
adc
outsl
cmp
dec
rcll
push
jle
jo
and
cmp
fwait
mov
sti
mov
push
mov
add
scas
shl
inc
lock
sub
sub
push
xor
inc
inc
mov
outsl
arpl
adc
sub
adcb
mov
clc
nop
push
loopne
mov
adc
mov
loop
mov
inc
xchg
cmp
or
cmp
xchg
aaa
sti
popa
ljmp
imul
int3
mov
push
ds
sbb
cwtl
testb
cmpsb
xchg
xor
in
fdivl
aaa
inc
out
mov
jno
mov
dec
jne
stos
xorl
push
arpl
dec
push
sti
and
cli
adc
push
push
pop
fmul
test
stos
fists
cmpsb
mov
push
test
jno
sub
aas
push
fld
bound
mov
popa
leave
inc
add
dec
inc
jb
mov
push
inc
iret
and
push
inc
lock
cmp
xchg
cwtl
dec
and
outsb
lret
inc
nop
adc
cmpsl
push
and
sahf
fidivs
mov
sbb
cs
mov
pushf
jo
adc
xor
mov
inc
mov
repz
lea
into
adc
je
outsl
sub
fimull
out
and
jle
jl
pop
dec
and
cmp
call
imul
sbb
lds
loop
mov
xchg
inc
lods
shl
movsl
nop
jo
jge
xor
dec
mov
stos
enter
in
mov
push
xor
dec
or
adc
ret
hlt
mov
cmp
lcall
rcrl
mov
into
std
xchg
xchg
std
xchg
dec
xchg
push
jecxz
xchg
lahf
loopne
in
sub
je
push
clc
xor
test
mov
pop
add
mov
outsl
shll
mov
pushf
rcll
popf
mov
and
mov
and
dec
push
inc
movsl
jbe
in
ret
js
xor
add
imulb
sub
dec
mov
jns
jbe
jno
in
scas
in
les
and
jno
arpl
pop
dec
fists
test
int
insl
xchg
int
push
loope
sub
or
jae
mov
pop
cmp
ds
andl
adc
mov
pusha
out
mov
subb
or
fiadds
jo
xchg
pop
pop
adc
leave
mov
insb
sub
xchg
popf
pop
pop
xor
adc
iret
insl
cmc
push
movb
das
sub
inc
inc
inc
sbb
arpl
mov
add
dec
pop
ret
lcall
add
loopne
repnz
in
stos
in
fcmovnbe
fimuls
leave
inc
test
mov
mov
je,pn
fs
pushf
jge
out
lahf
or
push
pushl
out
ja
dec
sbbb
enter
clc
cltd
sbb
dec
cmp
out
icebp
stos
add
xchg
fs
jno
nop
or
mov
mov
divb
iret
loope,pn
outsl
mov
add
mov
mov
jbe
jmp
sbb
or
pushf
sti
add
es
pop
int3
dec
int3
fsubrs
adc
dec
push
repnz
sub
xor
mov
test
mov
int3
roll
xchg
mov
fs
adc
out
mov
sti
lock
mov
popf
jmp
les
cmp
lea
lret
push
das
repnz
ljmp
mov
xchg
dec
loope
jp
cmp
dec
dec
pop
mov
xor
repz
cmp
das
jae
cltd
mov
lahf
mov
jmp
sub
rolb
add
repz
pop
negb
xchg
hlt
inc
mov
fdivrl
cmp
ljmp
mov
push
test
mov
mov
je
sub
fisubl
loope
mov
xchg
push
mov
cmpsb
dec
adc
mov
cmpsl
inc
rolb
xchg
xchg
movsb
sbb
in
sub
loop
cld
jnp
inc
xchg
push
loop
fcomps
jecxz
jmp
dec
xchg
arpl
cli
lret
mov
inc
cmpsb
push
xchg
push
das
lods
iret
pop
mov
mov
sbb
xchg
xor
lds
or
popf
gs
fisubrl
gs
add
sbb
aas
sub
pusha
inc
mov
scas
clc
mov
xchg
das
test
shlb
cltd
lods
lret
das
mov
das
and
and
outsl
in
mov
sub
jno
dec
jg
pushf
lret
ret
outsl
shll
popa
mov
cmp
inc
pop
push
adc
lods
fs
add
and
rcll
pop
xor
ds
lods
pop
loopne
mov
cmpsl
push
cli
out
xchg
outsb
cmp
push
jecxz
inc
pop
shlb
ljmp
repz
clc
jno
cmp
add
jne
cltd
daa
pop
ret
std
xor
cmp
int3
pop
cmp
fidivrl
jo
push
leave
or
adc
inc
cmp
and
add
or
vpunpckldq
mov
mov
mov
dec
dec
xchg
jl
and
mov
fs
test
mov
adc
ret
sbb
test
push
dec
cwtl
ja
out
rcrb
cmp
jl
movsb
add
jne
adc
inc
xor
jge
pop
mov
stc
into
popa
repnz
mov
jle
pop
inc
pushf
flds
lahf
cmpsb
push
repz
decl
in
idivl
lods
movsl
cmp
pop
ss
and
or
fmull
or
aam
mov
int
add
add
and
addr16
imul
sbb
inc
cs
add
xlat
mov
mov
arpl
cld
and
sub
dec
xchg
insb
mov
ret
sbb
outsb
out
rol
push
filds
mov
jle
or
push
mov
or
pop
mov
push
push
cmp
sub
jmp
xchg
fistps
std
clc
loope
aas
rcr
leave
aas
mov
testl
push
jae
sub
jns
dec
roll
cmpsl
shrl
push
add
dec
mov
jmp
xchg
lods
cmpsb
pop
lret
gs
adc
imul
ljmp
mov
out
idiv
cmc
in
xor
add
sti
pop
mov
adc
add
mov
dec
push
adc
sbbb
addr16
jo
roll
ss
subl
call
repnz
xchg
test
push
fistps
cwtl
fdivr
outsl
aam
mov
pop
xchg
xor
lds
out
fildll
mov
xor
xlat
xor
out
mov
mov
lods
sub
mov
pop
cwtl
in
push
xchg
or
add
testl
loop
jbe
scas
out
sbb
mov
xchg
pop
adc
loop
bound
into
fs
xchg
xchg
jge
dec
jp
dec
js
push
or
sbb
cmp
mov
pusha
sub
dec
fbld
pop
mov
mov
xor
mov
or
and
outsl
mov
and
push
dec
and
or
or
fidivs
dec
cmpsb
jge
lods
lretw
stos
aaa
imul
lods
xchg
stc
sub
sub
mov
sbb
stos
push
pop
jecxz
pop
adc
cmc
or
add
pop
dec
or
lock
insb
sub
je
divl
jae
add
cmp
mov
lods
xor
loopne
lret
lds
stos
les
xchg
repz
addb
scas
aas
sbb
push
xchg
mull
fidivs
arpl
jbe
cmp
dec
lods
clc
inc
rcl
jnp
in
jno
dec
mov
or
pop
bound
sbb
xadd
xchg
test
loope
pop
andl
movsb
sahf
outsl
adcl
in
out
jle
test
mov
mov
xor
ret
xor
xlat
jl
subb
movsl
cmovno
jb,pt
sbb
mov
stc
aad
out
pop
xchg
aas
pop
sub
lock
in
in
and
stos
jecxz
ret
sbb
lret
pop
mull
dec
pop
jmp
sub
lds
fidivs
mov
add
in
es
jns
repnz
jo
dec
inc
in
hlt
pop
sub
push
ret
sub
push
jo
xchg
jns
lcall
xchg
stos
and
loope
or
aas
es
or
rorb
or
mov
push
dec
movsl
mov
cmp
jbe
mov
jns
arpl
rcrl
dec
push
mov
scas
fidivrl
scas
and
adc
xor
push
jl
js
je,pt
add
adc
mov
jbe
test
sub
adc
jb
es
jne
push
add
xchg
push
pushf
xchg
jge
push
inc
adc
je
inc
sub
out
mov
push
pop
push
or
notl
sub
out
dec
sahf
std
test
and
out
nop
push
push
shll
pop
cmp
inc
inc
inc
cmc
mov
mov
jp
and
sbbl
cld
mov
dec
lock
les
push
shl
sbb
outsb
das
mov
repnz
stc
add
pop
and
push
add
ret
cwtl
mov
or
loop
clc
loope
fldenv
mov
sbb
cltd
divl
or
rclb
push
ror
fdivrl
lcall
orl
loopne
pop
xchg
or
mov
and
push
int
cmp
shrb
mov
cmp
outsb
and
pop
call
loopne
das
imul
out
ret
and
push
cmpsb
cltd
xchg
scas
imul
lods
jecxz
jno
sbb
lea
xchg
sti
cmp
mov
add
inc
mov
scas
xor
xchg
arpl
nop
daa
sbb
and
fnsave
rolb
sarb
das
fxch
jecxz
adc
xor
idivl
in
mull
cmpsb
int3
adc
sub
inc
arpl
lods
movswl
adc
imul
mov
repz
test
mov
xor
and
pop
mov
jg
inc
nop
jge
and
push
jl
leave
test
sti
lods
pop
add
add
jae
jbe
and
insl
or
jmp
repz
dec
test
pop
stc
pop
int3
fnstcw
fmull
test
xor
and
in
test
jb
les
lea
insb
xchg
push
mov
movsl
fstp
push
mov
mov
int
jbe
mov
and
pop
lods
push
arpl
test
lahf
test
pop
pop
mov
pop
mov
xchg
aad
jge
push
adc
div
sti
adc
and
cmp
arpl
mov
lcall
insl
xor
sub
mov
out
xor
and
inc
mov
fucom
push
mov
xchg
scas
and
ret
push
jns
fildll
fwait
lods
call
mov
filds
jae
call
add
in
aaa
xchg
data16
mov
repz
pop
test
daa
pop
push
xchg
cmpsb
cmp
cwtl
aad
cmp
data16
in
int3
cli
pushf
cmpsl
xchg
jg
jne
fisubrl
gs
inc
ret
movsb
loopne
cmc
pop
popf
inc
nop
dec
shlb
jno
inc
sbb
mov
in
ret
xor
adc
push
pop
mov
les
fcoms
jne
frstor
std
sahf
jmp
aam
insb
and
daa
fxch
leave
incl
into
inc
push
shll
decb
jmp
ret
mov
xchg
cmp
imul
xor
in
sti
movsb
imul
mov
cmc
add
call
enter
cmc
mov
lcall
cli
repz
call
push
mov
sbb
jge
push
xor
fs
cmp
jno
dec
pop
add
or
inc
xor
insl
jo
dec
xlat
aam
mov
adc
lock
mov
stos
sbb
cmpsl
inc
pop
enter
push
inc
mov
inc
inc
stc
push
sbb
mov
xchg
pop
mov
lds
jb
inc
lds
mov
test
js
sub
pop
add
mov
dec
dec
cs
pop
mov
and
cmp
sub
dec
movsl
or
mov
mov
fidivs
xchg
jl,pt
cmp
andb
sbb
js
outsl
iret
gs
mov
lods
dec
xor
xchg
jbe
pxor
test
and
inc
mov
sub
xchg
in
cli
inc
in
imul
push
jbe
outsb
dec
xor
outsb
adcl
sub
xchg
pop
aad
or
cmp
std
sbb
div
and
sahf
xchg
dec
pop
jmp
cs
sbb
jl
into
sub
loope
dec
xchg
dec
jnp
sti
clc
or
push
data16
pusha
mov
imul
ret
loopne
lret
inc
push
pop
out
out
in
xchg
lds
stc
or
mov
mov
sarl
pop
mov
sub
mov
insb
out
cmp
push
and
dec
jp
jbe
sub
push
sbb
or
and
lret
test
popf
jp
or
inc
lahf
cmpsb
pop
fldl
ja
movsl
xlat
fisubrl
jl
cmc
in
adc
lods
mov
aaa
dec
xchg
mov
push
outsl
mov
and
jmp
push
ljmp
test
push
notb
add
jnp
jb
push
and
add
cli
xlat
in
and
add
sahf
mov
test
push
test
hlt
outsb
mov
mov
sbbl
addl
sahf
jl
adc
std
push
call
cmpsb
adc
in
jae
cli
adc
sub
push
movl
or
xor
pop
jmp
aas
scas
mov
jns
mov
mov
scas
daa
lds
mov
sbb
outsb
test
or
sbb
sub
pop
and
int
adc
ficoml
mov
xor
push
push
out
iret
or
cmp
sbb
sub
adc
push
aad
idivb
ret
arpl
fidivrs
push
mov
mov
es
pop
iret
xchg
mov
lahf
rclb
inc
or
gs
xor
mov
addr16
cmc
jp
push
sbb
into
addb
mov
fisttps
icebp
cmpb
push
adc
push
add
dec
pop
xchg
cmp
mov
loope
jecxz
pop
sbb
pop
test
push
sbb
dec
test
ja
and
js
and
subb
mov
mov
mov
jns
push
scas
rclb
in
and
dec
mov
and
scas
popa
inc
addr16
inc
pop
icebp
mov
sbb
xchg
and
in
pop
popa
push
mov
sahf
push
das
jno
and
lock
sbb
mov
jo
ljmp
dec
jnp
mov
movsl
or
in
rol
push
pop
mov
std
pop
mov
idivl
dec
push
shll
shlb
popa
dec
push
int
dec
in
je
out
icebp
pop
or
or
in
lcall
rclb
push
leave
inc
cli
jg
pop
test
mov
cs
lcall
adc
adc
in
dec
xor
xchg
stos
ret
pop
xor
adc
pop
sar
cwtl
stc
and
push
fwait
iret
call
mov
adc
addl
add
cwtl
push
stos
mov
adc
orl
pop
loopne
call
sti
lods
test
mov
inc
flds
lds
jle
aam
xchg
je,pt
out
aad
int
div
pop
fcomip
cmpsl
insb
repz
jne
and
mov
dec
ljmp
gs
xchg
insb
push
lds
pop
push
sbb
lret
sbb
sbb
ss
pushf
aad
cmpsb
sub
mov
add
pop
fisubrl
cmc
into
lock
dec
imul
imul
bound
ljmp
ret
aas
ret
rolb
aaa
pushf
sti
and
lods
outsl
add
test
sbb
popf
ljmp
dec
fisttpll
push
rorb
es
into
push
lret
mov
hlt
outsb
jns
test
xchg
lock
and
dec
dec
sbb
iret
mov
xchg
in
mov
arpl
adc
lahf
push
clc
jmp
jg
cmpsl
out
push
test
adc
addb
add
cmp
aam
cmc
push
nop
mov
insb
xlat
scas
jo
call
hlt
les
mov
rcrb
stos
or
xor
popa
push
jg
jno
pop
xchg
mov
or
out
and
mov
nop
sub
ret
sub
add
pop
xchg
jle
push
shll
lds
insb
push
or
pushf
cmpsl
pop
sbbb
jne
mov
aam
es
push
jnp
xlat
gs
popa
stc
imul
ja
sbb
out
push
loope
stc
mov
inc
cli
enter
pop
mov
fadd
movb
cld
lret
subl
jb
repnz
mov
mov
icebp
movsb
sbb
sysret
ret
out
cld
jmp
mov
jne
cwtl
decl
sbb
mov
push
stos
test
pop
mov
dec
push
les
fiaddl
sub
xor
cwtl
out
and
flds
test
cmp
fld
or
in
and
cmp
ret
dec
imul
or
aaa
into
dec
out
dec
in
fstp
repnz
scas
mov
loop
fprem
add
mov
and
dec
mov
mov
sahf
hlt
mov
pop
push
jb
xchg
jo
mov
mov
push
sub
pop
or
dec
shl
jg
es
stos
call
js
mov
lret
fisubrs
xor
aas
jp
or
loop
ficoms
push
or
ss
sub
mov
adc
cmp
outsl
jb
test
add
test
jecxz
mov
out
jmp
stc
sbb
dec
inc
adc
loope
xlat
push
rolb
mov
inc
stos
jne
jb
jg
repz
pusha
idivl
dec
and
nop
inc
testl
cmc
mov
rol
mov
mov
xchg
jne
popf
mov
push
inc
pop
jle
jbe
pop
dec
popf
daa
es
scas
pop
sahf
inc
test
pop
into
adc
push
arpl
or
adc
aaa
inc
or
mov
adcl
lods
sbb
mov
push
inc
out
movsb
mov
das
mov
xchg
pop
mov
pop
call
cmp
sub
xlat
xchg
mov
xor
sar
jecxz
pop
push
insl
mov
lods
push
xor
mov
xor
imul
mov
sti
enter
push
cmpsb
push
push
and
lods
dec
std
out
arpl
movsb
xlat
lea
lret
lods
int
dec
aas
pop
in
in
leave
sbb
lods
in
fwait
enter
fwait
xchg
lock
mov
adc
jp
js
lods
repz
xchg
les
mov
leave
sub
jo
mulb
pushf
cmpsb
cltd
rolb
pop
cmp
movsb
adc
rclb
loope
enter
mov
pop
cmp
mov
pushf
cmpl
mov
add
cmpb
adc
push
mov
popa
xchg
in
mov
aad
mov
fwait
cli
iret
insb
push
xor
xor
iret
xchg
xchg
sbb
inc
adc
or
jg
inc
pushf
dec
shrb
push
and
notl
les
inc
jne
loope
cmp
jge
add
mov
mov
lock
aas
jo
mov
sahf
imulb
sub
add
xchg
lods
and
xchg
int3
or
sti
ficoms
dec
add
inc
xchg
inc
ljmp
test
jae
cld
jmp
pushf
inc
jnp
mov
jge
pop
cltd
add
inc
leave
fs
xor
inc
push
frstor
xchg
push
je
scas
aam
adc
dec
lahf
lock
add
lret
ss
push
into
test
xchg
or
stos
sub
xchg
lock
cmp
enter
mov
mov
or
mov
sar
jno
pusha
out
xchg
xor
insb
inc
inc
jbe
adc
movsb
orl
mov
sbb
cld
adc
cmpsb
aad
scas
cli
mov
ds
push
lea
or
jp
push
lods
inc
mov
aaa
or
or
loope
xchg
sbb
push
mov
cmp
xor
orl
mov
jg
xchg
xor
test
fistpll
shll
or
mov
sbb
xchg
dec
pop
xchg
or
and
aad
sbb
cmp
out
rclb
insb
clc
adc
test
jmp
cmpsb
mov
adc
jb
fsubs
push
mov
xchg
jae
cwtl
adc
adc
sbb
sub
fistpll
or
movsl
pop
xor
push
sahf
and
jl
fs
loope
push
dec
fdiv
shlb
bound
mov
lcall
test
cmpsl
lock
xchg
mov
mov
cmp
mov
data16
frstor
lret
sbbw
xor
jecxz
cmp
pusha
gs
adc
test
insl
mov
test
mov
dec
test
pop
in
inc
xchg
sbb
jnp
or
inc
std
add
outsl
push
fistpll
mov
cld
push
or
pcmpeqd
ljmp
push
xor
popa
pop
mov
inc
add
or
and
outsl
mov
loop
test
xor
add
test
inc
push
insl
jl
clc
add
dec
xchg
add
push
jp
out
push
mov
stos
xchg
mov
int3
inc
or
xchg
add
jns
add
jbe
xor
pop
mov
fs
movsb
pop
xor
dec
mov
inc
xor
and
test
imul
in
jns
mov
les
pop
insb
mov
cli
inc
jnp
icebp
ja
je
xchg
jbe
loop
insl
ja
negl
mov
mov
inc
cmp
out
nop
mov
pop
adc
jbe
push
roll
call
sbb
sub
sbb
pop
xchg
iret
sub
imul
sub
icebp
std
pop
test
lret
sub
les
popa
adc
dec
test
jb
dec
push
sub
xor
push
lea
fistpll
movq
dec
sbb
decb
inc
roll
ljmp
pusha
lods
push
pop
dec
fdivr
scas
jne
sbb
aaa
dec
pop
outsb
mov
sub
add
jg
icebp
negl
bound
cltd
and
cli
pop
shrl
pop
or
adc
in
adc
push
jge
and
xor
and
jp
int3
out
fistl
fwait
cltd
repz
inc
pop
mov
pop
and
jns
pusha
in
xor
stos
jo
jge
pop
clc
shlb
outsl
mov
inc
jnp
out
xorb
xchg
sbb
add
daa
jle
push
out
mov
add
cmp
cltd
jg
cwtl
jbe
mov
cmpsb
imul
sub
sbb
mov
lea
pop
xlat
xor
mov
mov
pop
add
bound
mulb
ljmp
scas
or
sbb
out
and
insb
pop
sub
divb
jno
lock
mov
fisubl
icebp
icebp
fldenv
push
push
outsb
or
je
sbb
sub
cmc
fcmovbe
inc
add
push
mov
int3
sahf
mov
xor
idiv
ljmp
jbe
insl
xchg
stos
xchg
jb
and
imul
inc
leave
add
jl
sub
shlb
lea
call
cmp
mov
xchg
fcmove
pop
cli
ret
push
lret
pop
fisubl
xorb
push
mov
addl
dec
jns
sbb
aaa
inc
mov
jmp
mov
mov
add
movsb
ljmp
inc
sbb
sbb
decb
pop
inc
jbe
inc
enter
jmp
pop
lods
push
fstps
sub
mov
mov
lock
dec
cmovp
je
xchg
outsb
loope
bnd
jo
jg
mov
nop
and
jecxz
test
mov
ret
stc
inc
shll
movsb
push
cmpsb
push
jns
adc
push
cld
lret
insl
mov
jg
or
out
xchg
les
je
and
ljmp
insl
cmpsl
adc
xchg
xchg
gs
pop
jl
cmp
push
lock
movsl
arpl
jecxz
lods
dec
push
cmp
jle
jg
decb
pop
mov
inc
ljmp
leave
ret
cmp
mov
sti
add
lds
jl
int3
test
jnp
clc
or
dec
mov
movsl
decl
dec
push
add
xchg
popf
jecxz
cs
repnz
mov
lods
jns
mov
mov
mov
test
ss
mov
addr16
jb
jmp
pop
inc
pop
scas
sub
xor
mov
enter
in
xchg
push
es
aaa
cmp
mov
xor
out
notb
out
cli
fwait
push
xor
jge
add
sbb
mov
dec
lock
inc
into
xor
lret
pusha
pop
jg
and
enter
push
test
adc
sarl
iret
sub
or
inc
vmread
pop
out
xor
add
sub
xchg
pusha
and
ret
test
lods
call
mov
and
push
jo
pop
sub
adc
pop
mov
dec
or
cwtl
lock
and
mov
and
lret
xchg
and
push
sbb
int3
mov
mov
adcb
pop
xor
shll
out
leave
jns
loop
jmp
or
pop
push
pop
fldenv
cmp
call
mov
jp
dec
pop
cmp
mov
mov
and
jno
jg
std
in
dec
sub
push
cwtl
fwait
pop
sub
push
cmc
sbb
inc
imul
mov
aas
xchg
data16
xchg
pop
lcall
pop
scas
scas
fnstenv
xchg
arpl
xchg
push
mov
cmp
or
addr16
les
adc
gs
int
inc
jb
sub
fistl
shl
jo
xor
insl
inc
inc
sub
fistpll
sbb
aad
push
xchg
lods
shll
mov
inc
mov
add
lock
jne
pop
dec
lahf
xchg
cmp
push
and
sub
in
rorl
push
addl
ja
mov
stos
ficomps
inc
or
gs
out
cltd
push
div
repnz
dec
xor
and
sbb
xchg
loopne
insl
mov
and
inc
in
add
lahf
es
nop
gs
xchg
mov
push
jb
repnz
int3
outsl
push
mov
addr16
push
inc
and
data16
xor
sbb
test
stos
jne
scas
dec
je
xchg
xor
jae
sets
test
mov
nop
imul
in
and
jle
push
dec
gs
sbb
jne
xchg
sub
push
stc
icebp
xor
call
mov
pop
sarl
add
and
jg
xchg
cltd
inc
popf
test
stos
xor
lock
loop
out
bound
fsub
xchg
cmp
dec
sub
je
and
pop
insl
sub
mov
inc
nop
or
cmc
cmp
sbb
cwtl
mov
mov
test
fmulp
psrld
call
addr16
out
or
loopne
sti
cwtl
pop
loope
push
or
push
jns
mov
pushl
push
loopne
mov
ss
cmp
push
and
add
mov
xlat
pop
adc
enter
lds
pop
jns
xchg
test
mov
add
xchg
test
sti
fcomps
cld
mov
add
sbb
int3
xor
lds
in
fnstcw
outsb
test
sub
xchg
std
ljmp
mov
adc
mov
sbb
jl
push
lea
lea
push
rclb
pop
or
mov
adc
mov
les
dec
sbb
movsb
pusha
xlat
scas
cli
aad
mov
loopne
jle
push
xchg
lods
insb
ja
mov
je
xlat
and
fs
xchg
or
bound
push
add
icebp
movsb
mull
dec
insb
dec
xchg
outsb
jno
xchg
aaa
xor
jo
jnp
out
mov
or
sub
push
or
inc
inc
outsl
push
std
jecxz
fstl
addr16
in
mov
les
or
loope
sarb
fnstsw
test
mov
pop
ja
xchg
cmpsb
jg
xor
call
mov
movsb
xor
cmc
faddl
pusha
aaa
cmp
cmpsl
add
adc
mov
jge
shl
mov
mov
inc
shrl
cwtl
fsub
addr16
pusha
mov
loop
push
test
das
out
add
pop
loopne
movsl
mov
int3
in
mov
xchg
or
testb
insb
lea
mov
push
jno
movsb
sub
push
jg
push
ret
add
or
lret
inc
add
dec
push
xchg
dec
cmp
jns
push
push
clc
dec
lcall
inc
pop
xchg
add
jnp
imul
cmp
repnz
sbb
movsb
pushf
fs
push
sbb
xchg
xor
jbe
push
xchg
loop
sbb
fildl
jecxz
test
std
push
add
push
mov
fstps
sub
sub
cmp
shlb
repnz
jae
adc
ss
rolb
xor
mov
cltd
dec
data16
dec
out
sbb
inc
mov
xor
sti
cmp
loopne
scas
mov
sahf
xor
jp
xchg
push
enter
rorl
push
insb
dec
push
mov
adc
movsb
in
xchg
cmp
insb
dec
bnd
pop
data16
lret
xor
dec
fs
pop
mov
mov
add
aam
pop
dec
mov
fsubrs
rorl
sahf
inc
or
mov
scas
adc
es
bound
les
inc
imul
test
pop
outsb
or
mov
int3
push
xchg
jl
shlb
insb
add
push
stc
dec
icebp
scas
icebp
add
and
sbb
addr16
inc
and
xor
enter
popf
add
xchg
mov
xor
loop
pop
aam
je
lcall
xchg
xor
mov
out
movsb
push
jl
mov
divl
fdiv
cli
xchg
mov
outsl
outsl
mov
out
jnp
outsl
hlt
mov
push
mov
lcall
push
data16
mov
ds
xchg
fs
jmp
xchg
xchg
or
mov
gs
aam
fdivl
fs
mov
pusha
hlt
sub
lcall
idivl
out
cltd
pop
aam
xorb
in
xchg
vpsrlq
inc
pushf
mov
testl
xlat
imul
je
jl
int3
pushf
addr16
cmp
or
pop
adc
xlat
sub
int3
loope
test
xchg
negb
lret
insl
inc
pop
sbb
popa
xchg
pop
sub
cltd
jns
push
es
fwait
mov
sbb
fnsave
mov
and
mov
mov
inc
rorl
lahf
jge
add
es
daa
ja
fstpl
jno
xchg
or
jle
in
xor
popa
out
aas
into
sub
pop
test
divb
fidivrl
mov
sbb
popa
outsl
movsb
mov
jmp
inc
ret
lret
dec
jno
fadds
inc
adc
js
push
loop
movsb
adc
add
insl
adc
and
mov
mov
cwtl
sbb
pop
jo
push
aas
jmp
mov
fnstsw
push
es
dec
sbbl
xchg
pop
lret
pop
daa
and
adc
pop
xchg
adcl
mov
mov
inc
fxch
pop
xchg
dec
or
mov
rep
sbb
jl
mov
adc
push
andl
jbe
mov
lds
fisttps
xor
scas
stos
xor
fnstcw
mov
pop
in
jnp
movsl
adc
adc
cmp
loope
movsb
sbb
rcl
rolb
jns
aaa
fisttpl
pop
ds
jns
rcrl
aaa
out
lods
cltd
jbe
insl
xor
lahf
inc
inc
mov
test
adc
inc
jl
xchg
psubq
ret
shll
jns
jb
jle
mov
pusha
fimuls
cld
cmp
pop
adc
in
jp
imul
ds
xor
lock
mov
cmp
stos
xor
mov
mov
pusha
mov
jg
dec
sub
or
int
fadds
ja
mov
push
jmp
pop
xchg
xchg
rcll
inc
stos
pop
jbe
outsl
push
hlt
jnp
inc
sub
xor
pop
int
jle
mov
scas
shl
mov
lcall
shl
inc
adc
jl
into
pop
inc
sub
divb
jne
stc
loope
jmp
or
sbb
clc
into
or
cwtl
inc
popa
bound
add
into
pop
ds
ffreep
in
jno
fdiv
hlt
inc
bound
nop
js
out
int3
icebp
add
or
mov
sbb
fisttps
movsl
pop
sarb
xchg
sbb
xchg
and
mov
in
rorl
mov
inc
dec
pop
lds
mov
in
mov
sub
inc
mov
jo
pop
jae
mov
sub
pusha
and
leave
js
ss
aam
arpl
pop
dec
inc
jae
sub
dec
addr16
scas
push
inc
xchg
xchg
lret
pop
scas
push
mov
or
cmpsl
aam
cwtl
test
add
arpl
sbb
insl
stos
aad
or
shl
mov
pop
push
out
rcrl
dec
mov
jo
repz
sub
jb
cmp
inc
add
fcompl
push
jmp
std
xchg
imul
push
xor
std
daa
dec
adc
mov
out
push
cmpsb
js
dec
icebp
bound
notb
fwait
xchg
aaa
dec
data16
xor
xlat
push
out
fdivr
push
ljmp
adc
or
dec
les
push
mov
dec
mov
dec
ja
cltd
or
leave
fwait
lods
and
int3
in
lock
dec
rcl
jb
mov
mov
in
daa
cmpsb
cmpsl
xchg
hlt
or
mov
pop
sub
mov
xchg
pop
cmp
xchg
dec
out
and
xchg
jmp
into
pop
in
sub
outsb
sub
adc
inc
shrl
mov
adc
add
inc
mov
cli
arpl
xor
jp
xchg
dec
jne
mov
cmp
sub
frstor
testl
scas
sahf
cli
xchg
js
into
dec
fstpl
jns
cmc
fwait
xchg
jl
stos
jmp
cmp
mov
cmp
pop
imul
mov
adcb
loopne
aad
pop
xor
or
test
and
mov
or
idivb
dec
mov
in
or
movsl
mov
xor
lods
fucomip
pop
stc
enter
cmp
mov
cmc
adc
fildll
cwtl
inc
or
xor
pop
std
ss
adc
mov
adc
push
ss
xor
pop
ljmp
add
lods
iret
mov
mov
lds
jbe
test
mov
push
fstpl
data16
xchg
or
cmp
roll
mov
loopne
jmp
mov
mov
out
or
xchg
pop
stc
test
mul
pusha
push
sub
stos
cs
mov
push
pop
sub
outsl
lds
sbb
into
push
cs
adc
pop
imul
push
mov
mov
cmp
xlat
out
and
not
push
xchg
jp
and
push
jecxz
loopne
add
xchg
push
lea
lds
sub
mov
hlt
clc
mov
mov
aam
push
sbb
in
mov
xchg
clc
iret
ret
mov
adc
add
push
mov
lcall
push
cmc
shl
lea
cld
icebp
div
and
stos
xchg
sub
cmp
xorb
jne
push
dec
pop
flds
cwtl
scas
or
push
int
lahf
and
daa
mov
push
dec
mov
xor
div
pop
fadds
lret
mov
ret
xchg
lcall
in
lock
mov
jge
aaa
rcl
mov
xor
sub
push
lock
dec
xor
stos
je
xchg
xor
lahf
sub
addr16
int
lea
jp
cli
cmpsl
xchg
aaa
xchg
and
sbb
sbb
fscale
loope
mov
cmp
rcr
pop
adc
sbb
sub
xchg
push
cmpsb
mov
scas
mov
das
jnp
sub
xchg
sub
pop
cltd
hlt
popa
repz
leave
push
mov
fldt
pop
mov
loopw
ret
and
sub
push
out
scas
cli
fsubrl
push
add
mull
stos
xchg
pop
in
pop
pop
xadd
mov
jmp
adc
out
stc
mov
scas
sub
movsl
out
cltd
mov
in
repz
sub
loope
int3
or
movsl
sbb
aad
ds
movsl
pusha
jns
adc
insb
cmp
xchg
frstpm(287
xchg
jge
fs
cwtl
cmp
push
mov
mov
call
dec
call
xchg
push
xor
sbb
mov
mov
push
pop
dec
cmpb
cmp
cmp
mov
out
mov
mov
sbb
or
and
jp
inc
or
repnz
pop
addr16
xor
xchg
mov
pushf
sub
xchg
cmp
scas
out
icebp
push
cmpsb
imul
icebp
int3
mov
popa
cmpsb
and
push
xchg
mov
push
pop
adc
loope
ret
fsub
sti
fs
fcmovne
bound
xchg
daa
push
movups
and
push
add
test
fmull
xlat
std
mov
and
out
mov
jl
xchg
imul
sarb
in
or
mov
xchg
cmpsb
into
lea
mov
orl
jo
mov
into
adc
clc
jns
mov
cmovp
sbb
das
jp
int
jno
dec
daa
add
stos
push
inc
les
in
mov
decb
xchg
xchg
jns
aad
push
mov
cmp
xor
sbb
add
jmp
enter
call
bound
xor
cltd
or
stos
adc
and
pop
and
addr16
loop
cmp
scas
jl
jae
sub
push
pop
mov
in
pop
jmp
jb
pop
loopne
cmp
call
ret
rolb
cmp
popf
sbb
leave
cld
xchg
pop
into
imul
pop
cmp
js
stc
and
mov
sarl
sub
addr16
pusha
stc
cmpsb
fmul
inc
cmp
fistpll
jae
sbb
lret
in
cli
pop
push
pop
stc
cld
push
mov
shlb
cmpsb
xor
push
cltd
cld
arpl
mov
mov
test
loop
mov
jnp
fnstcw
enter
push
inc
jl
xchg
inc
mov
dec
adc
cmp
pop
mov
cwtl
and
push
push
add
and
xchg
inc
push
inc
mov
out
incl
push
pop
iret
cmp
push
push
jp
jge
enter
sti
cmp
ja
pop
pop
jg
mov
xor
aaa
mov
data16
lret
and
ret
sahf
xor
pop
orb
test
and
aam
inc
adc
loop
xchg
pop
in
xor
sub
imul
jo
int3
push
inc
loopne
fwait
ljmp
xchg
cld
stos
negb
stos
mov
bound
sub
push
ret
mov
push
inc
scas
lods
pop
push
ja
pop
stos
outsb
lock
popa
pop
xchg
dec
stos
popa
cmp
sub
out
or
hlt
mov
push
pop
in
push
add
sub
sti
adc
adc
stc
add
test
push
dec
mov
loope
aad
jnp
cmpb
sbb
push
fidivrl
xor
xor
dec
sub
addl
push
or
div
into
addr16
push
pop
jg
out
fbstp
mov
inc
jns
int3
sbb
into
inc
lock
jo
adc
sub
mov
notb
int3
call
test
cmp
adcb
and
cmpsb
push
add
into
aaa
mov
fstpl
add
mov
mov
mov
out
lods
xchg
mov
aad
loop
adc
test
sub
cld
testb
addl
jns
notb
add
mov
dec
iret
sbb
add
in
add
addr16
sarb
retw
insl
popa
mov
push
les
cltd
lds
mov
data16
lds
inc
mov
sar
movsb
jecxz
arpl
in
nop
lret
jae
stos
das
aam
sti
test
enter
mov
or
orl
add
push
fidivrl
inc
sbb
push
pop
jecxz
lret
fsubl
push
repz
and
scas
ds
clc
fldl
leave
cmpl
or
leave
push
nop
or
xchg
dec
or
lret
push
pop
push
in
inc
adc
aas
testl
jbe
mov
scas
cmpsb
sbb
xor
clc
xchg
pusha
scas
loopne
inc
test
in
lods
xor
jae
mov
shll
cld
cli
mov
rcrb
or
jecxz
mov
pop
mov
stc
lock
ja
bound
cmp
or
or
scas
insl
add
mov
cmp
inc
push
adc
mov
mov
inc
adc
dec
pop
and
jns
sub
mov
push
xor
in
insb
cmpsb
jbe
sahf
lret
in
into
cld
dec
scas
popf
mov
mov
jmp
pushf
xchg
push
jno
jns
sbb
sub
ror
hlt
in
insb
sarl
push
cmp
adcl
data16
rclb
dec
cmp
lock
fcompl
outsb
pop
rcll
sub
orl
jo
inc
outsl
sahf
inc
sbb
test
add
ja
or
lock
test
xchg
pop
lahf
das
dec
cmpl
in
adc
add
jmp
dec
out
xor
into
xor
mov
fs
mov
inc
xor
mov
adc
add
lock
add
int
mov
testl
shll
add
push
inc
sbb
mov
pusha
mov
pop
cmp
rcrb
push
icebp
cmp
jge
or
daa
cmc
popa
test
test
pop
sbb
lods
xchg
lahf
cmpsb
mov
push
adc
and
push
aas
idivb
test
push
aas
inc
scas
push
jge
mov
data16
clc
lock
jns
daa
inc
lret
sub
clc
ja
and
decb
add
push
or
scas
insb
sbb
les
test
inc
insb
and
dec
scas
and
xor
ficoml
xchg
pop
inc
in
sbb
lods
xchg
nop
loope
lock
push
popf
sbb
das
clc
cmp
mov
movsb
sbb
add
mov
pop
or
cmp
jb
shl
fistpl
sub
ss
fcomip
jne
jle
pop
or
cmpsl
decl
sar
pushf
pop
fadds
cmp
lcall
mov
cs
insb
sbb
hlt
mov
test
loope
cltd
testl
xchg
dec
xchg
outsl
insb
jnp
dec
xor
mov
dec
xor
or
sub
ret
leave
jo
cmpsl
in
cmp
fcoms
sbb
xchg
enter
add
fisubl
mov
loop
mov
or
and
push
cmp
mov
dec
xchg
push
adc
cmp
lods
ljmp
pop
dec
and
ror
pop
adc
in
rcrl
jmp
xchg
xchg
in
add
ss
inc
push
lret
dec
xor
dec
mov
inc
rorb
test
idiv
cltd
pop
fs
mov
repz
daa
aam
sbb
cli
xchg
mov
dec
mov
jecxz
inc
sub
mov
sub
lods
cmpsb
rclb
sbb
jae
pop
std
pushf
insb
lcall
rcl
xchg
sahf
scas
int3
rolb
xchg
xchg
xchg
mov
cltd
out
xor
pop
mov
pop
pusha
imul
adc
fs
ss
pop
jp
push
repnz
das
jbe
mov
scas
icebp
and
pop
pop
pop
addr16
add
or
push
out
and
dec
ljmp
jge
pop
into
shrl
scas
xor
jp
inc
fdivrl
test
push
gs
dec
cmp
xor
pop
stc
testb
sbb
nop
xchg
and
pop
and
adc
sbb
dec
sbb
inc
mov
outsb
cli
adc
iret
xor
movsb
out
xor
jl
mov
add
insl
push
ret
movsl
xchg
test
push
mov
add
fs
stc
jecxz
xchg
stos
repz
cmpsb
add
adc
sbb
xor
sbb
popf
enter
mov
and
push
jmp
inc
out
out
int
jne
xor
pop
jnp
out
mov
aad
insl
into
cmp
sbb
push
xor
sub
inc
out
xor
fnstenv
xor
xorl
dec
bound
jp
fstpl
int3
nop
or
jmp
aaa
gs
xchg
js
cmpsl
shrb
lods
adc
lods
imul
pop
nop
int
jge
jnp
test
sub
and
mov
sbb
stos
add
stos
dec
mov
insl
rcl
mov
mov
pop
movsl
repz
imul
fmulp
push
lahf
add
inc
and
clc
ja
adc
mov
rorb
test
inc
ds
loop
lea
push
sbb
sub
jg
fwait
jge
pop
mov
aad
mov
add
ret
into
xchg
xchg
iret
adc
mov
inc
mov
pop
mov
repnz
outsb
aaa
lret
ss
add
mov
adc
int
loopne
shl
aam
cmc
movsb
xchg
lret
fs
or
mov
lock
xchg
ss
xchg
popf
sbb
out
rcrb
jecxz
xchg
dec
mov
outsb
or
hlt
pop
or
jge
sbb
aas
xor
stos
inc
mov
xlat
pop
adc
fucomip
cmpsl
mov
pop
aaa
jmp
xor
inc
jo
or
jmp
das
and
rcl
sbb
out
lea
fstpt
hlt
jmp
mov
popf
or
xchg
cmp
dec
or
dec
xlat
pop
and
pop
xchg
repnz
fcoms
inc
push
mov
testb
popa
push
pop
gs
ret
lret
sub
push
adc
jle
scas
mov
jge
pop
jg
insl
add
stos
sbb
dec
ror
fwait
jns
test
or
mov
sbb
mulb
push
std
sub
fidivrs
push
pop
jno
xchg
push
daa
arpl
cmp
lods
fbstp
mov
push
loopne
int
mov
dec
hlt
or
add
adc
dec
cmpsl
lcall
bnd
jb
stc
dec
cmp
imul
and
pop
pushf
roll
cmp
ficomps
xor
int
pushf
mov
inc
push
fidivl
adc
push
fwait
hlt
mov
xchg
add
fisubl
jmp
mov
ficomps
push
mov
ljmp
dec
push
cwtl
aam
in
cltd
aam
out
mov
and
lds
repnz
hlt
and
loope
mov
pusha
push
je
add
cs
or
jp
jb
jo
clc
les
sahf
push
jge
lods
and
xor
orl
dec
cmp
mov
ja
xchg
cmp
add
int
ret
cmp
and
xor
mov
aas
clc
jle
imul
add
mov
adc
pop
aad
sbb
mov
mov
cli
mov
icebp
push
faddl
ss
aaa
loopne
sbb
ds
aad
cli
out
xbegin
cmp
push
push
loopne
dec
icebp
jp
pop
out
mov
loopw
hlt
or
nop
fsubl
scas
aas
fwait
cs
popl
data16
jle
mov
cmc
cltd
pop
sbb
ss
lods
add
gs
out
cmc
popa
adc
bound
mov
mov
adc
fmul
inc
adc
sbb
loopne
jae
jne
mov
push
inc
jo
mov
shrb
or
sub
dec
dec
in
aaa
out
shlb
cwtl
repnz
sti
insl
jnp
leave
mov
jns
pop
test
dec
sbb
loope
mov
andl
pop
popf
icebp
or
aad
add
sub
leave
mov
add
xor
daa
fwait
rcl
jns
add
shl
jmp
xchg
mov
mov
adc
lods
push
jmp
pop
mov
call
jbe
sbb
or
jns
push
mov
dec
dec
sbb
xor
std
loope
push
ljmp
out
lock
or
decl
popf
and
or
fldt
enter
sbb
or
test
js
pusha
cltd
xchg
sub
dec
mov
inc
and
lock
add
push
fcmove
xlat
ret
rcrl
lods
aad
jge
mov
js
and
inc
pop
cltd
add
mov
fs
fsubrl
cwtl
std
and
inc
xchg
jne
arpl
jg
add
xor
cmp
sbb
dec
jbe
xorb
leave
aad
push
lea
imul
jae
cmp
cld
jae
test
and
jns
inc
dec
outsl
and
andb
xchg
aas
bound
mov
cmp
imul
aad
loop
inc
ffreep
cmp
push
mov
sub
jno
lea
int3
sub
sub
cld
ret
mov
test
mov
dec
rorl
in
movsl
repz
mov
sbb
popf
out
cli
add
and
or
push
frstor
leave
sbb
sbbl
xor
sub
jbe
lods
push
mov
mov
icebp
outsb
ss
add
lock
leave
xchg
and
dec
das
cmp
adcb
jb
or
mov
das
pop
outsl
push
inc
mov
push
fidivl
jno
xchg
test
dec
jns
aas
aas
xchg
inc
xor
leave
xchg
jmp
fsts
in
or
push
les
adc
add
jl
dec
xchg
jne
aam
sti
addr16
and
lods
insl
pop
jp
je
inc
fiadds
inc
negl
imul
mov
push
mov
orl
pop
or
mov
pop
pop
pop
das
jnp
lock
and
pusha
fldt
push
push
add
out
push
js
inc
pop
aam
enter
push
push
push
outsb
movl
sbb
mov
sub
jb
popf
adc
mov
jle
aaa
xor
jp,pn
jg
jge
and
in
sbb
scas
push
pop
xor
arpl
jbe
push
or
xor
adc
sbb
and
inc
mov
sbb
adc
push
dec
inc
insb
sbbb
mov
aad
ret
ret
mov
int3
pop
cmp
mov
cmp
stc
xor
cmp
cmpsb
xor
in
out
mov
push
stc
arpl
pop
jle
outsl
mov
pop
lock
push
cmp
pop
pop
cmp
das
inc
mov
pop
mov
jns
out
pop
or
hlt
hlt
sub
push
or
add
mov
cltd
divl
sbb
lcall
int3
jg
aam
vmread
pop
xor
and
enter
cwtl
pop
mov
push
int
in
jae
test
sbb
jl
cld
push
rolb
mov
aad
inc
xchg
lods
cmc
push
xor
xchg
andb
xchg
dec
test
out
mov
scas
clc
add
pop
adc
loope
mov
cmc
xchg
shrb
sbb
adc
cwtl
inc
testl
cli
xchg
bound
push
inc
mov
mov
icebp
xchg
call
xchg
push
enter
je
xchg
in
cli
xor
sub
mov
outsb
mov
pop
repnz
and
add
movsl
loope
popf
sti
jnp
fwait
mov
in
sub
inc
mov
dec
out
push
push
or
sti
out
dec
push
pop
pushf
xacquire
pop
lcall
cmp
dec
xor
out
rolb
mov
pop
mov
aad
sbb
mov
into
xchg
aad
sbb
cmc
sbb
int
sti
jmp
xchg
xchg
xorl
lahf
sahf
mov
lds
arpl
xor
ficomps
mov
rol
dec
loope
sub
jae
loop
es
adc
sub
rorl
arpl
lret
cli
push
aam
mov
inc
inc
lret
pop
jp
pop
mov
or
fsts
adc
push
inc
rcrb
adc
xor
or
fistpl
repz
jae
add
adc
pusha
pop
mov
jmp
hlt
ljmp
mov
mov
sbb
je
jnp
stos
mov
and
xor
mov
sub
insl
lret
pop
dec
mov
inc
cld
mov
fnsave
push
addr16
gs
adc
lahf
sbb
test
cmp
jb
jg
cmp
shll
jl
outsb
sbb
insl
repz
or
popf
shr
cmp
scas
lret
cld
xchg
aam
adc
nop
imul
mov
push
fistpll
push
scas
inc
je
jmp
xchg
je
pop
lods
xor
call
mov
xchg
xor
inc
cmp
aas
jle
mov
and
mov
test
loopne
add
outsl
pop
sub
cmp
in
lea
dec
rcll
es
or
mov
scas
bound
adc
pusha
in
popf
mov
and
scas
into
loopne
mov
not
outsl
mov
dec
js
sbb
and
popf
fnclex
push
and
outsb
pop
xchg
ficoml
in
loopne
mov
outsb
pop
shld
daa
loopne
add
lret
jno
lret
int
inc
jle
sbb
jnp
adc
xor
outsl
xchg
push
xchg
rol
dec
mov
into
mov
and
and
fbld
adc
xor
jno
aad
mov
fstl
aas
pop
das
insl
dec
cmpsl
push
mov
daa
or
dec
out
or
or
sub
sbb
jae
and
pop
cmp
sbb
or
or
mov
jno
outsl
sbb
dec
mov
fs
in
add
dec
jno
xchg
sub
add
adc
xchg
dec
mov
addr16
jnp
jbe
jmp
mov
mov
jl
or
cmpsb
cs
pshufw
sbb
aas
mov
xlat
cli
or
lods
pop
cmp
push
push
mov
popf
jle
cli
push
mov
imul
sbb
pop
mov
addr16
sub
dec
mov
in
cmp
mov
daa
movsb
mov
cmp
adc
out
aam
inc
sarl
daa
mov
adc
movsb
adc
push
pop
stos
push
adcl
cmc
adc
cld
fucomp
push
jae
sub
clc
jl
or
call
in
jo
inc
addr16
mov
in
loopne
mov
insb
loope
pop
sub
out
and
fbstp
mov
movsl
loop
sub
repz
les
ljmp
int3
adc
sbb
ret
dec
or
xchg
mov
jae
jo
jle
jo
jl
sub
loop
popa
cmc
xor
insb
sub
sbb
mov
cld
imul
lods
adc
shl
sbb
jo
inc
std
ljmp
mov
cmpsb
push
int
cli
or
leave
stc
divl
xchg
or
mov
inc
xor
cld
jg
lret
mov
mov
ss
repz
xor
cmp
jecxz
out
mov
loopne
inc
sbb
aam
call
sti
inc
push
xchg
imul
insb
or
push
or
sbb
mov
hlt
rcl
fwait
mov
push
or
or
xchg
cwtl
mov
adc
fwait
leave
out
cmp
sbb
pop
xchg
inc
nop
jb
popa
cmp
loope
push
insl
xor
dec
fldt
fadds
in
fyl2xp1
jle
scas
scas
cs
sub
mov
jl
push
ficomps
jg
and
xchg
push
pusha
cmpsl
fs
test
sub
div
mov
cmp
outsl
xor
testb
add
pop
cmp
movsb
xor
xor
and
dec
mov
jb
push
mov
jb
xchg
xor
dec
mov
hlt
and
ja
mov
push
jo
inc
xchg
jecxz
repz
or
xchg
xchg
cmp
cwtl
jg
sbb
jmp
aas
repnz
push
cmp
fnstcw
adc
or
scas
mov
and
jnp
cmp
jne
dec
mov
lahf
sbb
out
popf
pop
outsb
adc
mov
mov
cmpsl
imul
into
dec
cs
rdtsc
xchg
pop
adc
pop
push
pushf
cmp
mov
lret
add
xchg
or
mov
test
cmp
jge
xchg
lret
add
push
inc
dec
ret
lods
jns
loope
movsb
push
cmp
dec
mov
daa
add
in
test
sbb
mov
imul
jo
or
dec
daa
and
loop
jle
sub
shll
add
es
paddusw
jbe
and
addr16
ret
fisubrs
popa
adc
xchg
mov
xchg
sarl
popf
or
push
cwtl
xchg
sub
lea
ljmp
inc
push
es
mov
cmpsl
adc
aaa
sbb
pop
sbbl
dec
sbb
or
push
jnp
test
add
fwait
test
popf
sub
les
outsb
sbb
stos
and
xchg
xor
xchg
cld
jns
pop
clc
xor
rorb
xchg
adc
lock
dec
lods
pusha
daa
sbb
inc
sbb
stc
ljmp
inc
mov
or
aas
cmp
cmpsb
addr16
and
ja
or
repnz
sub
adc
hlt
push
test
addb
inc
mov
mov
pop
adc
cmp
and
push
dec
cs
clc
gs
gs
sarl
xchg
xchg
sbb
cmp
inc
lods
test
int
adc
xor
add
pushf
sbb
adc
sbb
pop
inc
adc
or
mov
cmp
pop
scas
xchg
loop
in
adc
movsl
adc
clc
test
test
add
jp
sarb
arpl
lock
jl
shrl
cs
dec
in
push
mov
fs
out
sub
outsl
or
xchg
aas
cmp
aam
fsubrl
jnp
dec
mov
sbb
cld
push
pop
sbb
les
mov
pop
pop
pop
push
in
jge
daa
in
fnsave
jns
dec
nop
mov
jl
pusha
xchg
fwait
sti
push
add
push
mov
or
mov
sub
push
inc
outsl
lcall
push
mov
and
jmp
cmpsl
xchg
sub
dec
jbe
ficoms
pushf
or
imul
negb
dec
insl
push
addr16
es
xchg
mov
mov
idivb
jnp
or
push
add
jnp
cmp
xchg
pusha
hlt
mov
fnsave
cmp
jg
mov
call
lcall
dec
fisubrs
rcl
shl
dec
shl
xlat
cld
lret
insl
sbb
xor
fidivl
cmpsl
adc
adc
adc
xchg
mov
lret
sahf
stos
popa
pop
push
and
out
pop
cmc
ss
dec
insl
jmp
sahf
stos
call
hlt
loopne
jp
aam
push
movsb
lock
fbld
xor
lret
out
fld
and
aad
adc
in
mov
or
out
xor
popf
lcall
repz
mov
fimuls
imul
cs
and
sarb
jg
mov
out
mov
xor
cmp
mov
mov
cmpsl
xor
stos
icebp
mov
ds
ljmp
cmp
sarl
ret
push
cs
mov
mov
adc
mov
inc
sbb
in
xor
push
es
pop
popl
bswap
adc
data16
xor
xchg
hlt
adc
pop
mov
mov
cmp
xchg
sub
jnp
or
out
cld
cmp
mov
inc
pusha
mov
cli
mov
mov
and
jno
dec
test
int
lods
data16
inc
rolb
lcall
jae
clc
xchg
adc
pop
xor
into
fisubs
aam
push
cmp
shll
inc
dec
mov
addl
xchg
rorb
arpl
sbb
add
in
lock
arpl
mov
inc
jl
sbb
adc
out
jo
push
adc
mov
adc
inc
ss
mov
lret
jge
jbe
stc
pop
lock
vucomisd
or
mov
add
lods
jnp
pop
idiv
push
jl
movsb
fcmovu
xchg
leave
and
sub
movq
popf
mov
push
mov
enter
test
cs
xor
jmp
std
int3
cltd
pop
push
sbb
mov
mov
int
ljmp
jl
sub
gs
cmc
inc
leave
mov
fstpt
mov
jg
aad
jp
pop
out
ret
mov
cld
add
lock
je
cwtl
jmp
cs
mov
mov
rorb
imul
fisubrs
lcall
inc
xor
add
inc
cmc
mov
loopne
pop
mov
cmc
sub
orb
in
ja
inc
push
xor
sub
sbbb
push
pop
aaa
movsl
andb
mov
and
aam
dec
pop
leave
decl
fisttpl
ss
rcr
cli
xor
aaa
das
sbb
ds
ljmp
loop
jo
mov
adc
jbe
cmp
loopne
jecxz
jb
xchg
mov
inc
add
lea
dec
cmpsl
shlb
jle
push
or
or
das
xchg
xchg
idivl
sbb
iret
add
sub
out
jge
repnz
cmc
mov
popa
in
jnp
aam
in
inc
pop
push
into
fisubl
or
mov
lods
and
out
sub
mov
bound
inc
push
inc
mov
mov
lods
xchg
imul
ret
mov
mov
lret
test
int3
and
jae
call
mov
mov
das
cmp
icebp
inc
in
pop
daa
add
leave
cwtl
in
in
xor
adc
sub
fcompl
dec
scas
bound
jmp
int
nop
mov
aam
inc
sub
movl
rcl
xor
nop
mov
and
inc
repnz
daa
jge
movsb
jne
or
scas
and
cs
pop
testl
add
popl
cmp
outsl
stos
lea
popf
ds
sub
pushw
and
xchg
out
aad
adc
pop
jp
outsl
inc
sbb
pop
push
icebp
int3
cwtl
ficomps
push
mov
std
outsl
je
mov
xchg
fwait
pop
test
addl
jle
adc
jns
mov
test
xor
jbe
pop
shlb
lock
ret
xchg
ljmp
xchg
jnp
jge
test
push
imul
mov
mov
lcall
fcomp
push
sti
in
bound
sub
xorl
in
jp
mov
xor
arpl
outsb
test
add
lods
in
lcall
insb
sub
dec
fisubs
add
sarb
inc
mov
cmp
mov
int3
dec
push
and
add
and
add
outsl
mov
xor
xchg
mov
mov
inc
jmp
aaa
cwtl
or
repnz
out
or
mov
inc
or
mov
fiaddl
jno
pop
or
enter
adc
mov
sub
add
je
push
push
xor
pop
cmp
addr16
and
xchg
lods
test
jne
mov
mov
push
pop
test
mov
dec
aad
stos
call
test
rcr
outsb
push
sbb
and
cli
popa
inc
movsl
pop
insl
xchg
pop
leave
dec
sti
outsl
or
negl
add
xlat
movl
mov
cltd
pop
enter
mov
je
push
push
js
mov
daa
lds
adc
xor
rolb
insl
push
inc
ss
xchg
cs
popa
aaa
add
and
fcomi
int3
mov
jl
xchg
es
sub
lcall
mov
loope
xor
dec
adc
add
push
xchg
cld
jnp
fistpll
sbb
jecxz
pop
or
pop
ljmp
insl
lods
in
jno
sub
sbb
out
cmp
stos
jno
jbe
aas
jg
fdivrs
mov
cwtl
xchg
sbb
jbe
adc
imul
mov
je
in
mov
cmp
xchg
out
in
push
out
scas
add
xchg
cmpsb
out
outsl
dec
mov
call
adc
mov
test
pop
sbb
popa
rorb
or
xor
rclb
cmp
rclw
into
push
mov
out
xchg
inc
movsb
jge
mov
mov
pop
scas
imul
sbb
adcl
test
fwait
ljmp
test
arpl
stos
loopne
mov
jne
mov
mov
insl
imulb
jecxz
es
push
ljmp
roll
in
sub
cli
mov
into
inc
or
stos
iret
inc
lods
iret
call
scas
leave
push
negb
xor
dec
pop
sbb
xor
fisubrs
mov
jg
test
bound
adc
int3
orb
sub
js
push
push
popa
popa
xchg
adc
jg
mov
xor
into
ds
push
xchg
into
fs
fsubl
push
in
loope
xorl
inc
sbb
cmp
popf
dec
mov
or
das
nop
dec
mov
mov
pop
push
cmp
out
lret
pop
sbb
pop
leave
xchg
add
mov
jb
dec
stc
out
fisttpl
insb
mov
xor
imul
xor
dec
xlat
xchg
xchg
xchg
sub
nop
xchg
ljmp
sar
loope
lcall
cmp
xor
or
push
sub
mov
and
movsb
scas
xchg
negl
push
pop
push
and
or
push
jo
jle
jne
mov
dec
out
inc
mov
sbb
jnp
mov
inc
into
inc
rep
add
dec
shll
js
cmp
or
insl
in
adc
clc
bnd
pop
adc
movsb
lods
bnd
mov
pop
setnp
movsb
pusha
or
adc
xor
lods
in
xchg
xchg
cld
arpl
push
mov
push
fiadds
cmp
mov
lods
and
dec
mov
cmp
fs
addr16
pop
cmp
or
in
das
sbb
push
daa
adc
push
fadds
or
sub
shll
fwait
cs
cmp
pop
lock
cmpsl
ret
frstor
pop
js
cs
xchg
ret
or
jo
out
push
call
addr16
inc
repnz
in
addr16
xchg
xchg
jle
pushf
cwtl
nop
arpl
and
shl
les
cmpb
xchg
sub
xor
mov
adc
iret
push
dec
cmp
cmp
mov
mov
fcmovbe
out
mov
mov
and
xchg
and
pop
roll
faddp
fwait
cld
mov
push
stc
sub
cmpsb
mov
jo
lret
subb
pop
test
mov
mov
adc
in
and
xchg
pop
or
xchg
out
cld
adc
ret
imul
icebp
rcll
add
subl
sahf
adc
or
clc
push
jns
lret
push
jb
mov
dec
into
xchg
xchg
cmp
nop
hlt
lcall
movsl
out
pop
ret
xlat
repnz
gs
nop
shll
dec
or
and
dec
pop
dec
pop
sub
js
pop
jmp
sub
ret
or
adc
xchg
data16
idiv
and
sub
fdiv
sub
add
cmp
cmp
dec
test
dec
mov
jmp
enter
push
cld
jne
mov
leave
out
ljmp
sbb
ficompl
cmpsb
xor
cmpsb
rcr
in
pushl
pop
ret
inc
add
ret
xchg
arpl
clc
icebp
sbb
jns
leave
sub
cwtl
clc
xor
or
mov
fistpll
scas
dec
pop
push
lahf
inc
in
dec
adc
dec
addr16
mov
and
xor
movsl
push
aaa
into
sbb
mov
pop
icebp
sub
in
std
insl
imul
inc
pop
iret
fcom
int3
dec
cli
fcoml
imul
jmp
es
jle
sub
jp
daa
stos
xchg
and
cli
or
ja
incl
dec
mov
adc
js
and
jg
or
jmp
test
hlt
adcb
adc
jb
popf
loop
insb
stos
lret
push
hlt
iret
ljmp
add
stc
jne
pop
nop
push
jmp
cmp
add
jns
pop
xor
mov
adc
dec
cmpsl
pop
out
cld
push
scas
popa
shll
adc
pop
sbb
shufps
mov
out
xchg
jmp
icebp
sti
pop
insb
sbb
pop
test
pop
fdivs
dec
or
leave
and
loopne
and
insb
inc
pusha
jecxz
out
push
in
popf
stc
popa
aam
mov
mov
in
stos
fucomi
cmp
inc
xchg
test
faddp
inc
jg
jbe
mov
xor
add
xor
rcrl
cltd
push
shrl
or
test
subl
jmp
sbb
dec
insl
rorb
mov
lea
stos
in
bound
cmp
push
pusha
mov
std
lock
lock
pop
cmpsb
mov
sbb
in
inc
xor
mov
out
add
fidivs
sbb
cmp
addl
dec
sub
add
sbb
inc
movsl
lock
gs
cmpsl
xchg
mov
daa
inc
jg
mov
outsl
xchg
ret
mov
sbb
jae
inc
xchg
ja
or
leave
test
in
dec
add
in
and
cmpsb
cmp
loopne
push
xor
push
and
clc
scas
pusha
add
push
dec
mull
bound
sub
data16
push
adc
jmp
xor
add
cwtl
xor
fisubs
mov
adc
out
and
inc
insl
in
jle
or
dec
dec
out
sahf
mov
cmpsl
lcall
pushf
mov
icebp
pop
movl
incl
jp
test
sub
js
xchg
xor
fstps
xor
inc
rcrb
pop
scas
jb
cmpsb
dec
and
push
divl
fs
mov
out
loope
adc
mov
loopne
pop
fsts
xchg
lret
and
int3
pop
add
jns
mov
stos
aad
xor
hlt
stos
push
mov
cmpsl
add
test
mov
inc
mov
in
push
xchg
jmp
rcrl
or
jo
mov
inc
js
popf
pop
mov
dec
and
loopne
mov
ss
lret
push
jp
aaa
xlat
xor
lods
subb
psadbw
out
gs
pop
repz
xchg
sub
iret
lock
ds
ds
mov
xor
ljmp
ret
add
lahf
scas
jnp
mov
cld
cmc
mov
cmp
scas
mov
push
pop
push
sub
mov
jg
jge
mov
push
adc
mov
sub
arpl
sub
jge
outsl
rcll
inc
mov
fidivl
lcall
pop
js
lock
jne
dec
pop
std
sub
jp
addr16
jne
icebp
dec
mov
push
jae
addr16
repnz
fcompl
test
mov
inc
movsb
inc
inc
int3
loope
outsb
call
stc
inc
dec
mov
mov
jns
adc
and
or
decl
cmpsl
and
cmp
or
xor
adc
jns
dec
cmp
mov
dec
dec
out
leave
fs
inc
mov
push
cmp
mov
xor
sub
out
addr16
out
in
test
nop
dec
and
inc
and
test
cwtl
and
lock
and
mov
decb
mulb
push
movsl
iret
cmp
fidivrs
in
jp
gs
inc
jmp
out
xor
pop
imul
dec
insl
lea
in
xchg
into
pop
pop
sub
stos
mov
mov
jno
mov
pushf
add
out
cld
add
jmp
adcl
orb
jmp
inc
aad
and
cmpsl
jns
lods
add
scas
addb
lock
jp
xorl
jbe
fs
loope
sub
lea
add
xor
xchg
push
cwtl
mov
ret
xlat
sub
fwait
mov
aaa
fcmovnb
es
cli
pop
push
movsb
fcomp
ss
fs
mov
mov
and
add
hlt
mov
ffreep
adcb
xchg
fsubr
adc
push
adc
pop
aas
enter
data16
pop
mov
xchg
sbb
imul
pop
nop
adc
lcall
inc
dec
sub
gs
mov
in
pop
xchg
pusha
mov
xchg
sub
aam
pusha
cmp
movsb
int
cmp
stc
push
aas
xor
mov
in
outsl
push
cmpb
xchg
dec
in
pop
sub
pop
inc
lret
test
cmpsl
inc
cmp
or
aad
shl
inc
rolb
and
jae
mov
test
test
adc
arpl
jmp
inc
mov
pop
inc
mov
icebp
dec
xchg
mov
pop
inc
push
jbe
sahf
inc
pop
and
xchg
in
nop
shlb
out
pusha
pusha
ljmp
mov
mov
xor
cmp
icebp
cwtl
mov
jecxz
and
cli
test
cmp
scas
enter
lock
ds
and
mov
jmp
xor
cmc
lds
add
or
mov
mov
test
shr
mov
and
mov
dec
dec
testb
cmp
insb
jne
stos
ds
sub
and
xor
cmp
rcll
inc
rolb
xor
cmp
leave
jle
push
rorl
cmp
sbb
clc
pop
inc
adc
dec
es
dec
fnsave
mov
or
cmpsb
imul
dec
mov
in
ss
jge
outsl
loope
repnz
loope
push
pop
pop
push
stc
mov
lahf
lcall
pop
popf
push
jmp
sbb
in
movsl
sti
out
mov
sub
adc
sub
rcl
jnp
sub
imul
aam
cmp
aaa
fwait
test
push
mov
xor
mov
xor
sbb
pop
push
add
lcall
in
or
mov
popw
and
pop
mov
pop
mov
sbb
mov
addr16
mov
imul
frstor
xor
pop
xor
jmp
xchg
leave
pop
dec
movsl
rol
pop
pop
pop
enter
and
jb
xchg
jl
ret
mov
dec
lock
adc
mov
lock
outsb
imul
xchg
cmc
das
sahf
push
sbb
sbb
mov
sbb
jno
fwait
lcall
sub
mov
sbb
xchg
xchg
jp
int
mov
inc
sbb
or
scas
jnp
sbb
mov
sub
es
push
out
fidivl
mov
and
loope
dec
out
test
aam
leave
adc
add
fdivrl
push
mov
sbb
cmc
lcall
fnsave
imull
lock
andb
pop
scas
ja
out
cs
sub
test
mov
fdivl
pop
aaa
and
in
dec
xor
push
nop
jmp
enter
notl
std
xor
mov
cmp
adc
jp
lods
sub
jne
lret
test
sub
std
cld
je
dec
ret
shll
call
cmp
lea
jle
roll
iret
adc
stos
sti
push
sub
mov
mov
shll
out
btc
sbb
adc
fcoms
push
add
jae
xor
je
xlat
inc
sti
mov
xor
pcmpeqd
mov
sbb
pop
lods
test
pop
lcall
sbb
lds
test
orb
inc
cmp
adc
push
and
xor
and
sub
lock
pushaw
bound
push
inc
dec
addr16
pop
aas
lock
inc
xchg
popa
adc
adc
stc
push
adc
xor
in
adc
cmpsl
repz
addr16
pop
insb
xchg
push
scas
shlb
fs
push
outsb
jle
mov
push
push
enter
dec
mov
mov
lds
sti
mov
sti
rcr
xor
push
mov
mov
imul
jnp
scas
cmc
lahf
jno
dec
cmp
pop
lret
pop
push
out
aas
xor
rol
stc
test
or
push
imul
sub
mov
mov
faddl
sbb
leave
jmp
mov
dec
sti
push
fdivs
pop
pop
in
cmp
movsb
dec
lock
aad
cli
fimull
dec
or
or
out
mov
mov
cmp
adc
enter
push
fsubrs
into
xchg
mov
scas
addr16
push
inc
enter
sbb
add
lock
xchg
stos
inc
pop
sarb
add
popl
jbe
xorl
push
mov
fsubl
jge
add
dec
ja
sarb
mov
cltd
and
shrb
sahf
das
xor
stos
mov
jp
inc
pushf
ds
add
xchg
pop
adc
push
jbe
lods
lods
lea
test
add
ja
cltd
cmp
dec
out
fs
jne
mov
aas
xor
mov
cmp
repz
dec
aaa
into
add
insb
fucomip
scas
stos
cmp
inc
mov
popw
sti
inc
jge
jge
push
addl
xlat
sub
ja
xor
je
imul
xor
lods
cmpsl
clc
imul
sahf
or
xor
cmpsl
lret
push
pop
mov
ljmp
leave
pop
mov
and
mov
ret
push
adc
mov
ja
test
ficompl
inc
dec
fcmovnu
scas
adc
rclb
mov
arpl
mov
inc
es
sbb
std
aam
push
xchg
mov
lret
test
xchg
inc
push
xchg
xor
fcomps
and
inc
lahf
faddp
test
lds
outsb
stos
or
mov
sarb
shll
cmp
cmp
add
lcall
mov
push
repz
fbstp
ficompl
pop
mov
sbb
stos
sbb
pop
sub
and
sahf
or
aam
aad
test
shll
adc
and
in
mov
fneni(8087
fs
xor
or
bound
jl
stc
mov
aaa
jmp
inc
popa
push
pop
in
push
xchg
mov
jne
mov
lahf
or
dec
sbbl
push
inc
dec
inc
cli
test
dec
les
dec
or
in
js
dec
stc
cmc
xor
xchg
test
push
mov
dec
test
dec
dec
and
test
cltd
sbb
xor
sub
jmp
sti
jmp
inc
cmp
inc
and
cwtl
loope
sub
cmp
pop
int
adcb
ds
jge
sti
dec
lock
xchg
push
scas
aad
rcll
lds
sbb
or
clc
jb
in
scas
mov
jg
push
pop
cmpsl
sub
divb
and
test
mov
negb
xor
or
push
cs
xchg
xchg
jne
leave
sub
jno
aas
dec
push
jl
cwtl
jp
xor
pusha
dec
inc
test
scas
mov
push
add
xchg
icebp
pop
jae
xor
mov
or
cmp
push
imulb
push
xchg
arpl
lcall
dec
and
repz
ds
xchg
push
clc
sub
mov
pop
and
cvtps2pd
lea
sbb
fwait
clc
mov
and
rorl
pop
adcl
xchg
xchg
ret
sarb
push
adc
imul
jns
scas
rclb
stos
fdivs
xchg
rcrl
repz
pop
mov
inc
xchg
repz
outsb
aam
ja
outsb
dec
cmp
daa
sbb
pusha
enter
dec
sarl
add
and
xchg
xor
add
mov
shll
test
enter
inc
add
or
stos
in
or
pushf
or
shl
mov
jle
cmp
jo
loop
mov
into
mov
out
lock
pop
dec
insl
in
daa
imul
xchg
and
jmp
mov
dec
sub
inc
push
stc
dec
mov
mov
movsl
in
shlb
push
jno
or
pop
test
scas
gs
or
sbb
add
cli
push
or
dec
sbb
jns
mov
xor
fwait
push
and
pop
int
cmp
dec
mov
dec
adc
adc
ror
mov
mov
xchg
andl
shll
out
int
shrl
dec
mov
testb
ss
jmp
movsb
push
add
jne
popf
and
jae
inc
push
js
cmc
nop
nop
sub
inc
out
scas
scas
mov
add
jo
movsl
mov
movsl
mov
sar
xchg
or
xor
adc
test
ret
inc
les
push
inc
mov
test
sub
daa
add
sub
lock
fnstcw
mov
push
ret
shrb
xchg
jecxz
cmp
push
sti
jp
push
mov
pop
xor
mov
clc
xor
jl
aad
cmp
xor
popf
out
sahf
dec
imul
imull
clc
lods
lds
cmp
xor
data16
pop
outsb
nop
das
inc
mov
cmc
jle
jb
inc
xchg
daa
sti
or
addr16
mov
xor
pusha
fildl
add
jns
adc
scas
pop
inc
lds
and
out
push
inc
jcxz
test
jp
jnp
aad
push
subl
sti
loopne
push
imulb
stos
int
test
xor
adc
cs
sub
outsl
loopne
inc
daa
ljmp
cmp
inc
clc
dec
loopne
push
fisubrl
xor
pop
jnp
fstl
movsb
mov
inc
cmc
adc
andb
lods
xchg
fisubrs
or
adc
popf
jne
in
je
sub
adc
not
lods
ss
andb
mov
test
inc
mov
cmpsl
repz
ljmp
inc
mov
int3
lahf
std
call
ja
rol
pop
pop
int
es
hlt
movsl
mov
ss
dec
popf
cs
outsb
pop
cmp
fimull
jns
mov
push
stc
rorb
jb
pop
pop
and
andl
cmp
cltd
or
push
cld
lcall
insl
pop
sub
lods
pop
fst
out
adc
loope
pop
fsubr
outsl
movsl
jg
and
mov
cmp
or
sub
mov
jo
sbb
repz
enter
enter
mov
pop
pusha
orb
mov
lods
sub
add
cmp
add
sahf
and
adc
lahf
mov
sub
insb
pop
sub
pop
lock
shll
jne
jnp
pop
jo
inc
cmpl
mov
mov
jo
cltd
jns
scas
bound
pop
pop
cs
xlat
pop
mov
mov
lea
push
int3
nop
jbe
cltd
or
mov
iret
pop
xchg
adc
or
dec
dec
inc
inc
pushl
shrl
or
sub
or
arpl
mov
clc
inc
cmp
dec
cli
or
shrb
xchg
lds
or
cmp
jo
pusha
je
scas
addl
pusha
aaa
jo
enter
pop
push
or
insl
fs
insb
in
scas
mov
hlt
ret
cmpsl
or
int3
ret
pop
cmp
jg
stos
stc
pop
push
jns
call
es
pop
ret
inc
fistl
mov
test
cmpsl
addr16
jge
adc
fsubs
aam
sub
inc
xchg
xchg
dec
and
cli
movsl
notl
cs
aas
push
popf
pop
adc
inc
jo
lcall
mov
mov
push
dec
outsl
icebp
imul
or
and
shll
cmp
cmp
pop
mov
int3
out
mov
icebp
jmp
shrl
sbb
out
out
or
dec
mov
xchg
pop
xor
and
xchg
movl
or
push
in
scas
inc
xchg
test
push
sub
fisubl
mov
fsts
inc
data16
mov
cmc
mov
push
les
push
mov
fs
sbb
movl
int3
in
fs
scas
lret
add
pop
clc
shl
mov
sub
and
mov
int3
and
xchg
and
test
add
dec
ja
push
sub
jns
je
ficompl
bound
in
gs
and
add
cmp
pop
xchg
movsb
nop
cmp
add
out
call
fistpll
in
scas
sub
mov
imul
sti
adc
gs
cmp
pextrw
movsw
adc
cmpsl
jge
cmp
repz
add
adc
xchg
scas
and
test
clc
pop
add
dec
jecxz
popaw
xchg
lock
mov
imul
leave
xor
cmp
ret
mov
insl
mov
scas
iret
ljmp
bound
shrl
pusha
pusha
mov
outsl
push
push
cld
sahf
popf
mov
sti
sti
mov
pop
push
xor
xor
fcoml
out
sti
sub
leave
mov
gs
xchg
pop
push
leave
jb
cs
cmpsb
out
roll
xchg
xchg
clc
sbb
lock
icebp
dec
or
push
sub
mov
inc
sbbb
addr16
ljmp
inc
mov
cmpsb
insb
pop
lret
xor
add
mov
sbb
es
mov
jno
inc
pop
pop
rcll
in
or
mov
jge
pop
and
mov
scas
add
sub
lahf
mov
add
pop
aas
rclb
jbe
pop
sub
lea
cltd
xor
jg
cmp
testb
imul
sbb
add
or
lods
pop
pop
mov
sub
fcmovu
lret
out
iret
push
test
lock
push
nop
and
clc
sub
dec
cmp
mov
dec
jge
mov
ja
notl
push
jnp
add
cmpl
cmpsb
in
mov
mov
movsl
sub
cltd
les
movsl
test
addr16
add
pop
rcrb
fadds
adc
or
lret
push
data16
push
and
in
pop
mov
pop
popa
es
add
dec
adc
ja
pop
mov
or
scas
gs
ljmp
push
dec
bound
inc
in
mov
and
ret
dec
jg
dec
retw
sbb
push
add
ds
cmp
add
jl
jle
je
jae
push
js
mov
mov
or
lods
lret
sub
pop
xor
sbb
mov
xor
dec
test
mov
ficomps
push
cmc
jge
leave
xchg
add
cmp
sub
mov
xchg
xor
in
cmp
mov
daa
mov
shll
jp
xchg
stos
pushf
out
mov
add
scas
inc
inc
cmp
jnp
cmpsb
cmc
and
mov
lcall
pop
idiv
jo
adc
add
mov
xchg
mov
xchg
pop
cmp
xchg
xorl
adc
mov
jg
sub
xchg
notb
jae
xchg
pushf
jne
and
pop
cmp
inc
enter
jnp
cmpsl
movsb
repnz
mov
and
dec
push
sbb
lahf
in
addr16
mov
stos
add
out
inc
push
sub
jae
jp
arpl
inc
jecxz
sbb
je
add
jb
xchg
push
js
dec
sarb
nop
push
test
push
cwtl
jno
sbb
sbb
imul
push
stc
push
mov
sub
push
iret
cmc
push
xchg
mov
adc
leave
clc
and
mov
push
cmpsb
shr
repnz
sub
stc
adc
je
mov
stos
cmc
add
ja
inc
enter
mov
inc
inc
in
pop
dec
adc
in
xchg
addr16
push
jl
sbb
xor
add
popa
scas
gs
xchg
pop
sbb
cmp
adc
push
cmc
sti
fsubrl
jge
bound
aad
in
ss
jns
out
adc
outsl
cmp
dec
sbb
or
mov
insl
shlb
cmp
jno
jae
or
das
lods
clc
push
pop
stos
adc
test
mov
mov
pop
insb
ror
xor
out
flds
or
xor
adc
adc
jg
cmp
xor
pop
dec
pop
test
pop
sahf
dec
pop
jb
call
outsb
xor
cmp
add
ds
lahf
dec
cmp
es
pop
aam
ret
xor
jbe
xor
mov
add
sbb
mov
mov
sub
jnp
xor
iret
jbe
das
pop
push
stc
in
push
push
movsl
push
stos
mov
cmp
insb
jno
incb
loope
scas
cmp
pop
sub
cmp
sbb
mov
aam
add
mov
stos
mov
mov
loope
jno
cltd
test
add
cld
loopne
lds
cmc
loope
sbb
lea
aad
shll
data16
insl
lcall
es
fs
and
mov
adc
je
sbb
sub
xor
cltd
out
test
or
add
imul
insb
fistps
jle
inc
rorb
or
fwait
mov
lock
shrl
xchg
out
dec
push
add
js
pushf
push
gs
mov
sub
pop
or
movups
xor
cli
pusha
jle
lahf
sar
stc
mov
out
xchg
ja
add
cmpsb
sub
pop
or
fnstsw
fisubrl
mov
xlat
outsl
jo
fiadds
mov
mov
addr16
js
or
lahf
push
outsl
and
rcl
xor
mov
lret
sub
popa
enter
xor
gs
cmp
xchg
and
jl
popl
push
jle
aad
loop
xor
sbb
sar
jp
rol
in
xchg
xor
add
or
ljmp
mov
xlat
xchg
movsl
jg
in
dec
inc
out
add
shll
pop
pop
xor
add
xlat
and
pop
cmp
xor
mov
aaa
push
add
shll
mov
cs
mov
xchg
ljmp
mov
iret
jecxz
fimuls
stos
loope
push
jle
fwait
lods
mov
jmp
ret
test
dec
je
lcall
enter
ljmp
leave
fisttpll
push
dec
jmp
popa
lds
cmp
rdmsr
inc
in
sbbb
ret
push
aaa
xchg
xor
mov
stc
ljmp
loope
das
fisubrs
lcall
fistpl
push
add
jnp
adc
jne
pop
jns
pop
test
jmp
jbe
pop
loopne
lahf
fnstenv
push
pushf
leave
rcrb
in
mov
roll
or
daa
sbb
add
adc
or
cs
jmp
lcall
sbb
push
idivb
aam
les
mov
lods
or
lahf
into
stos
mov
aaa
xchg
divb
nop
int
sbb
cs
mov
leave
test
mov
dec
sbb
sahf
cli
and
jbe
cmpsl
sub
sbb
ror
jl
mov
dec
push
cmp
popf
dec
cmp
xor
lahf
jge
nop
dec
lcall
cmp
xor
cmpsb
push
inc
lods
ds
rcll
push
adc
pushf
movsl
or
scas
in
faddl
shl
insl
fwait
popa
lods
sti
sbbl
push
cmp
jno,pt
add
and
xchg
nop
nop
test
jbe
in
push
mov
frstor
ret
or
and
inc
ret
mov
xor
mov
out
add
clc
sub
bound
lret
test
cld
add
sti
cmp
les
xchg
mov
in
lds
repnz
sbb
add
clc
stc
andb
xchg
adc
mov
subb
test
xchg
sub
jle
fimull
pop
jp
into
or
mov
xchg
add
clc
fcom
aaa
aas
inc
movsl
inc
bound
pushf
lahf
fcomps
mov
jmp
cmp
xchg
jg
mov
movsl
imul
insb
mov
shrb
xchg
fsts
sbb
fnstenv
dec
mov
pop
cmpb
mov
and
sbb
scas
xorb
sub
cmp
push
cld
out
data16
inc
sbb
push
cltd
push
inc
dec
stos
ret
mov
mov
or
fadds
and
int
pop
mov
sarb
sub
pop
adc
lcall
mov
mov
sahf
in
mov
subl
adc
out
xlat
data16
sub
xlat
out
and
mov
es
lahf
cmpsb
adc
adc
mov
fnstsw
aas
cmp
add
insl
sbbl
lock
sub
cmp
inc
sub
sub
aas
aam
les
loopne
jnp
xchg
enter
or
or
mov
shlb
inc
not
loopne
mov
pop
pop
adc
jmp
adc
fdivrp
mov
dec
pop
xor
jp
ror
mov
or
repnz
aas
lods
imul
je
imul
and
jb
sti
jbe
fdecstp
lods
pop
pop
and
das
js
pop
mov
int
mov
pop
xor
mov
mov
xor
imul
xchg
inc
fdivp
sbb
ds
sbb
imul
shlb
dec
inc
dec
loop
int
cmpsl
mov
inc
inc
inc
movsl
sub
push
pop
cmp
and
jnp
inc
movsb
dec
dec
out
sbb
pop
xchg
sub
dec
or
daa
lock
out
and
cld
push
movsb
dec
es
test
add
push
mov
mov
pop
push
les
xchg
xor
push
pop
mov
faddl
xchg
cwtl
loop
dec
inc
sbb
xchg
xchg
add
inc
int3
xchg
jae
mov
les
call
pusha
std
xor
jg
out
pusha
stc
inc
mov
and
ret
xchg
jns
mov
pop
dec
xor
push
add
in
inc
jne
and
aaa
insl
outsb
cmp
xchg
insl
or
nop
cmpsb
testl
mov
and
imul
or
sub
test
lea
pop
shlb
mov
jg
aad
cmp
int
js
jl
test
push
cmp
xchg
sub
addl
pop
rol
in
int3
mov
inc
mov
popa
int
icebp
mov
inc
mov
adc
and
les
mov
sbb
push
mov
out
dec
dec
lods
int
xchg
int
repnz
fwait
and
test
hlt
mov
mov
aas
adc
inc
fwait
mov
cmp
sub
mov
lock
loope
sub
sbb
dec
sbb
or
addb
movsb
lcall
inc
mov
mov
mov
push
mov
pop
fwait
dec
add
scas
lods
and
or
int3
jns
mov
subb
sub
xor
cmp
popf
je
jle
lea
inc
pop
les
test
sbb
mov
jae
fcmovb
lds
adc
je
jbe
enter
adc
sub
ss
psubd
loopne
or
stos
fcompl
insb
daa
stc
mov
add
enter
addr16
imul
sub
fs
xchg
int
mov
imulb
sub
xor
push
pop
aad
dec
imul
mov
cmpsb
and
out
sbb
data16
pop
fwait
movsl
mov
and
pop
jp
imul
mov
push
pop
or
mov
xor
roll
push
sbb
dec
iret
add
fnstenv
xchg
push
mov
loope
adc
dec
test
pop
push
dec
test
clc
push
push
lods
mov
idiv
and
pop
insl
mov
xor
mov
jae
mov
out
add
aad
xchg
sbb
pushf
rclb
sbbb
sbb
ljmp
pop
jo
movsl
ret
pop
sub
push
inc
fcomip
inc
fcomp
sti
mov
leave
sahf
mov
xor
push
sbb
das
mov
imul
jle
jmp
js
popf
faddp
imul
mov
or
cld
jge
leave
out
shl
mov
insl
mov
or
pop
cmc
push
xchg
lcall
popa
out
pop
and
out
adc
scas
sub
ljmp
aam
imul
gs
fsubrs
subl
out
xor
xchg
int3
mov
push
lea
loope
mov
adc
xlat
addr16
int3
or
rorl
arpl
ljmp
sbb
daa
je
cmp
iret
push
cmp
or
divb
xchg
inc
fstpl
int3
lcall
popf
mov
pushf
pop
in
daa
fwait
push
push
scas
mov
pop
das
xchg
add
push
data16
sub
jo
pop
std
out
mov
lahf
sahf
or
inc
jge
jp
mov
sub
dec
pop
sbb
je
sarb
hlt
fs
push
stos
int3
sub
add
in
and
mov
test
mov
and
pushf
loop
test
add
les
nop
push
jmp
aad
fwait
loopne
jp
lret
outsb
daa
add
adcb
test
xchg
mov
pop
ljmp
out
leave
loop
add
add
inc
movsb
notb
cmp
fstpt
mov
dec
mov
aam
pop
lods
mov
adc
subl
mov
loop
push
jle
ret
out
jmp
adc
shl
pop
jg
cli
inc
cmp
push
popf
push
fildll
adc
mov
xlat
sub
jbe
imul
jb
cli
jo
out
jnp
adc
xor
adc
or
dec
jle
push
clc
test
dec
les
jne
ljmp
sarl
hlt
xchg
outsb
fisttpll
aas
pusha
xor
cwtl
jno
fwait
aas
push
into
pop
and
popa
mov
filds
mov
insb
or
je
les
cmpsb
ret
mov
cmpsb
outsb
scas
inc
repnz
ss
rclb
imul
call
addr16
xchg
aaa
jnp
xchg
cmp
sub
neg
imul
inc
js
inc
rclb
push
add
push
adc
aaa
imul
mov
jno
push
cld
cld
push
push
popa
pop
addr16
hlt
xorl
push
testl
mov
pop
xor
mov
push
sahf
fwait
sahf
in
sub
pop
sbbl
clc
pop
std
jmp
scas
push
jmp
push
mov
sub
lock
pop
in
icebp
sbb
iret
nop
mov
fisubrs
lods
mov
mov
popf
mov
lret
fnsave
and
xlat
add
pop
jl
shl
out
popf
lret
xchg
pop
inc
or
lret
dec
insb
testb
lcall
mov
ficomps
int3
lret
shll
pushf
aas
aam
lcall
fnsave
mov
insl
xor
cmp
xor
int3
inc
nop
xchg
xorb
mov
shll
push
jnp
jo
xchg
jmp
fcomps
stc
gs
sub
lret
rolb
cmp
dec
jae
push
in
movsb
cmp
jge
jecxz
push
enter
cli
shll
xor
inc
negb
sbb
out
pop
lret
mov
jecxz
pop
jmp
inc
dec
jecxz
push
stos
mov
push
xchg
popa
scas
int3
xor
xchg
ret
inc
sbb
xor
pop
mov
sbb
sti
cmpb
and
fwait
xchg
mov
push
test
es
push
pusha
jp
shld
jle
clc
test
ljmp
xor
pop
dec
jne
pop
cli
jmp
mov
push
icebp
add
rolb
and
and
lret
xor
inc
into
rorl
pusha
stos
ret
sbb
stos
mov
mov
pop
subb
add
add
or
icebp
adc
mov
cs
mov
daa
mov
test
fisttpl
cmp
adc
lods
mov
pop
ss
fdivr
xchg
xchg
popa
out
testl
out
dec
mov
int
int
push
add
int3
out
loope
sbb
mov
sbb
jle
mov
push
rol
daa
jne
hlt
mov
cmp
mov
ds
divb
mov
clc
shr
fwait
push
sub
aam
out
popf
sbbl
sbb
pop
call
adc
adc
jle
mov
sbb
dec
cltd
pop
pop
fs
sbb
incb
adc
stos
mov
mov
push
insl
js
jl
mov
adc
dec
rcrb
rcl
cli
adc
dec
ss
xchg
in
pop
and
jno
clc
rsm
mov
les
sub
mov
xlat
mov
push
popa
mov
jg
sahf
xchg
stos
cs
cli
dec
in
xchg
xchg
xor
push
mov
mov
es
daa
fadd
ljmp
xor
or
and
cmp
cmc
out
jnp
mov
sub
sub
dec
loopne
or
les
adc
jecxz
inc
enter
and
mov
sbb
pop
ret
or
int3
roll
mov
push
push
test
pop
sti
sub
dec
cld
cmc
ss
into
lret
xor
stc
sbb
aaa
or
dec
mov
int3
jl
and
push
ja
incb
or
mov
pop
add
or
add
mov
xor
mov
setg
rcrl
out
push
insl
adc
cld
lods
test
xchg
cmc
faddl
and
mov
sbb
lock
call
and
push
pop
stos
aaa
sub
jmp
jnp
or
pop
push
mov
ret
inc
mov
scas
enter
das
mov
bswap
rorb
pop
jne
xor
inc
mov
in
mov
int3
sbb
mov
sub
test
call
xlat
mov
insb
dec
sarb
int
outsb
icebp
in
adc
cmpsb
sub
and
sahf
ret
mov
xor
or
mov
mov
adc
dec
add
and
subb
stos
push
lea
dec
test
xchg
adc
pop
test
inc
test
mov
sub
loop
jne
inc
push
dec
call
push
jnp
insl
lcall
dec
in
inc
jnp
insb
mov
in
dec
mov
mov
popf
dec
ja
xlat
testb
dec
push
xchg
lcall
pop
jecxz
pop
cmpsb
pop
sbb
adc
ss
inc
stc
sarb
mov
mov
lods
insb
mov
movsb
les
inc
dec
push
push
cmp
mov
in
lods
rol
xlat
pop
jg
sahf
aam
mov
out
sub
mov
and
icebp
into
push
push
adc
ret
mov
iret
subb
es
add
inc
fwait
hlt
sub
lods
push
lods
shrb
jae
aas
pusha
movsl
sub
jnp
ja
adc
pushf
cld
add
je
jg
ss
das
call
xor
sahf
fsts
js
jne
push
mov
loopne
jl
inc
and
jno
ret
nop
and
popa
mov
push
push
adc
fs
xlat
popl
cwtl
sbb
nop
ds
lcall
repz
popf
mov
jb
mov
push
jle
mov
fisubrs
inc
fs
mov
rolb
mov
pop
and
dec
jno
icebp
fimull
cmp
sub
mov
xchg
jne
lcall
push
cmp
xchg
cvtps2pi
xor
adc
mov
or
dec
pop
jne
mov
lds
pop
mov
sub
cli
aam
scas
pop
push
ret
push
fidivrl
mov
sbb
sar
sub
cltd
or
clc
xor
sahf
and
adc
das
jnp
dec
sub
pop
jmp
push
xchg
fsts
add
pop
test
jp
push
sub
adc
pop
hlt
adc
mov
mov
sahf
xchg
adc
cltd
mov
xor
fsubrs
pop
or
mov
xor
outsl
outsl
xchg
lock
mov
or
mov
clc
dec
jge
jnp
test
dec
inc
int
in
sbb
gs
push
inc
add
imul
sub
mov
push
les
jne
daa
or
jge
sbb
je
gs
lret
sahf
xor
push
loopne
or
ficompl
aas
push
pop
int
mov
cs
outsl
jg
pop
or
call
scas
sub
fstpt
sarb
cmc
out
xor
cwtl
xchg
mov
add
dec
enter
cmp
xor
mov
dec
aas
outsb
and
adc
lcall
push
jne
sarb
aam
adc
push
add
add
add
dec
and
xchg
or
dec
xchg
je
mov
cli
inc
dec
imul
xor
or
and
mov
stos
and
xlat
stc
je
xchg
in
mov
stc
rcl
push
add
cmpsb
inc
dec
inc
jo
cmp
inc
adc
xor
mov
push
in
imul
add
sbb
decl
mov
add
ds
scas
xchg
cld
int3
add
mov
xor
notl
pushf
es
adc
inc
mov
out
cmp
or
fwait
mov
cmc
dec
or
vmovapd
out
es
push
pusha
cmp
cmc
dec
popf
outsl
pop
ficompl
jle
dec
sub
jecxz
fxch
fwait
jbe
jbe
inc
popf
xchg
stos
jl
fdivrs
add
inc
jp
and
fisttps
pop
mov
bnd
mov
aaa
or
popf
jae
scas
fmull
lahf
cwtl
cmp
jo
cli
sub
jl
mov
lret
or
mov
adc
ret
stos
and
lret
pop
mov
xchg
movsb
std
stos
in
cmpsl
int
into
push
sbb
clc
js
fndisi(8087
mulb
or
pop
jmp
imul
aas
fsts
popf
xlat
jb
cs
js
adc
jae
add
mov
jge
pusha
test
pop
enter
cli
js
push
add
sbb
or
mov
dec
enter
mov
int
dec
xchg
cmp
pushf
daa
mov
test
mov
mov
cmp
test
ljmp
adc
push
loop
cmp
test
push
out
pop
cmp
lcall
mov
mov
call
insb
jg
pop
sbb
sbb
mov
pop
mov
cs
adc
cmpsl
addr16
or
adc
icebp
test
pushl
insl
add
ljmp
pop
xchg
int3
cld
out
cwtl
icebp
add
and
or
ret
xor
jmp
mov
push
xor
in
stos
xor
test
mov
push
mov
rcrb
call
dec
testb
cmp
push
dec
lcall
push
xor
mov
mov
adc
push
sub
or
stos
xor
enter
jb
xchg
aas
push
adc
xchg
xchg
lret
fcomps
mov
loop
xor
dec
incl
cmp
jb
cmp
add
adc
dec
push
outsb
aad
or
imul
pop
pause
hlt
flds
mov
sub
sbb
imul
adc
dec
push
lret
test
in
jnp
dec
lcall
hlt
inc
jl
lock
subb
cmc
pop
out
mov
les
push
dec
cmp
lds
arpl
pushf
mov
sub
mov
mov
frstor
sub
mov
pop
push
not
iret
xor
cmp
int
dec
aam
and
cmpsb
sub
xchg
aas
mov
add
pusha
nop
insl
xchg
std
lods
shlb
pop
mov
cltd
cld
push
stos
push
lcall
inc
lret
push
xchg
mov
pop
jae
mov
test
add
subl
sub
repnz
fimull
out
mov
addr16
aad
mov
pusha
sub
add
push
add
dec
push
es
sub
dec
in
or
pop
pop
lds
lock
dec
mov
lock
pop
in
sub
pop
dec
sub
inc
sti
lcall
clc
mov
xorl
dec
pop
aas
jns
mulb
cmp
sub
jmp
jne
out
je
fbld
and
or
cmp
pop
in
aad
jge
pop
jg
dec
fdivr
inc
cmpsb
aaa
out
jns
test
or
mov
push
jo
mov
pop
xlat
xor
dec
push
pop
inc
out
les
in
dec
rolb
mov
xchg
and
sub
push
fldl
inc
dec
aad
les
movsb
push
orl
gs
js
mov
inc
cmp
movsl
lret
push
inc
cltd
adc
mov
jnp
sbb
mov
mov
pop
mov
scas
and
ficoml
mov
inc
inc
inc
xchg
or
or
repnz
push
mov
je
pop
mov
stos
mov
push
add
icebp
inc
push
pop
adc
sbb
sarl
mov
xchg
xchg
mov
test
or
lret
movsb
or
ljmp
jns
pop
push
sbb
xchg
inc
inc
in
fimuls
sarl
sti
es
mov
loope
fwait
ret
testl
cwtl
jno
pop
sahf
sub
mov
adc
and
movb
in
dec
gs
in
push
in
xor
and
add
addr16
or
cmp
out
lahf
fsubrl
fnstsw
add
mov
loope
jns
pop
sbb
cmp
jno
jle
push
lods
push
mov
dec
dec
cld
fisttpll
xchg
mov
lcall
push
fistl
mov
ss
inc
push
xor
outsl
mov
mov
fs
das
xor
ljmp
xor
test
shll
pushf
in
stos
push
out
rcrb
sub
fmull
outsl
dec
aam
imul
testl
mov
or
je
fadds
add
lods
bound
aam
test
xchg
mov
nop
ljmp
or
sbb
and
sub
mov
cmp
shl
inc
and
or
clc
sahf
int
xor
mov
notl
sbb
push
stos
repz
incl
rcrl
sub
cmp
sub
fstpt
dec
xchg
cwtl
mov
or
inc
jl
push
loope
std
mov
add
pop
cmp
loopne
addr16
push
mov
and
xchg
mov
stos
nop
out
sbb
sub
imul
cs
sarl
sar
hlt
fidivs
sub
repnz
mov
mov
sbb
das
clc
out
aas
and
aad
lods
nop
mov
and
mov
push
roll
jecxz
sub
push
neg
add
pop
cmp
sbb
movsl
sar
inc
and
aam
jecxz
adcl
cmc
jo
mov
je
ljmp
mov
push
or
mov
mov
xlat
push
frstor
xchg
scas
xchg
xor
mov
push
mov
jo
sti
test
adc
sbb
mov
or
inc
test
bound
inc
incl
pop
shll
and
mov
adc
jmp
popf
cmp
fs
or
add
pop
sarl
pushf
pop
xchg
mov
jns
fdivrp
mov
clc
and
xchg
mov
add
sti
cli
mov
and
sub
inc
pop
std
lahf
mov
imul
insb
xchg
outsl
dec
hlt
mov
cmc
push
push
pop
xchg
mov
mov
pop
and
or
jo
mov
fs
adc
call
cmp
pushf
mov
mov
mov
scas
inc
inc
mov
mov
jno
mov
fdecstp
hlt
out
xchg
out
xchg
js
lret
arpl
dec
dec
push
daa
pop
sbb
pusha
lock
mov
aaa
mov
xchg
loope
stos
fsub
cmpsl
test
adc
test
mov
cmp
movsb
dec
mov
stc
gs
das
mov
mov
push
in
shl
cmp
fs
sbbl
stos
fisubrl
int3
in
ja,pn
mov
sub
mov
mov
push
xor
clc
mov
mov
test
xchg
aad
stos
xchg
adc
sahf
push
adc
adc
cmp
xor
scas
jns
xchg
mov
lods
sub
pop
mov
push
lds
shrl
adc
xchg
icebp
mov
repnz
es
pusha
movsl
dec
rorl
in
pop
shlb
in
pop
dec
xor
outsb
or
mov
mov
leave
xor
movsb
mov
call
pop
xchg
push
orl
ror
test
hlt
mov
mov
icebp
iret
cmp
adc
sahf
hlt
push
fildl
cmc
xchg
int3
dec
xchg
adcb
scas
xchg
orb
test
mov
xchg
push
in
adc
insl
mov
inc
xor
cs
popfw
test
sbb
or
lcall
gs
test
push
pop
mov
sub
mov
and
mov
push
mov
dec
pushf
mov
nop
fwait
dec
insb
or
cmp
fs
xchg
mov
mull
mov
out
pop
mov
xchg
xchg
in
in
aaa
das
loop
in
cmpsb
jp
push
mov
cwtl
and
shlb
decl
push
or
ja
push
outsb
sub
pop
out
xchg
sti
mov
ljmp
sub
sbb
or
xlat
lock
mov
dec
xchg
or
sahf
jmp
cmc
addb
rcrb
clc
push
xchg
xchg
mov
cmp
sub
iret
xchg
xchg
sub
aas
and
stc
xchg
pop
stc
sbb
mov
pop
mov
hlt
jmp
in
andl
jle,pt
lods
push
jecxz
rolb
fisttpl
lahf
mov
add
jnp
ret
dec
jl
pop
mov
ud1
sub
call
dec
jg
or
scas
cmp
data16
pop
call
sub
loopne
inc
or
lret
lods
pop
cmc
sbb
cwtl
arpl
push
out
push
int3
sub
sub
cmpsb
psrlw
in
repz
scas
sbb
inc
cmp
xchg
gs
ret
push
pop
pop
pop
sbb
sub
and
mov
push
bound
dec
imul
pop
dec
int
sbb
sbb
and
mov
mov
jge
nop
orb
outsl
daa
in
out
inc
or
xchg
and
jle
sub
add
imul
and
in
rorb
sahf
mov
mov
popf
push
xchg
les
daa
mov
jno
adc
mov
lahf
daa
xor
push
jmp
insb
mov
cltd
push
and
sub
inc
push
test
into
fcmovu
movl
repnz
pop
and
jb
jns
hlt
push
mov
rcrb
or
jecxz
push
xchg
push
push
xchg
sbb
stos
imul
mov
lods
clc
inc
inc
push
inc
cmp
sub
mov
or
adc
cli
xchg
mov
cmp
or
jne
mov
mov
sbb
repz
dec
sbb
ljmp
cmp
cmp
in
dec
sbb
pop
and
in
jb
lea
mull
je
fdivl
lahf
pop
in
xchg
test
andb
push
xchg
xchg
xchg
or
add
ret
loop
pop
mov
stos
cmp
xchg
pop
and
sub
test
sub
mov
movsb
clc
lret
push
cmpsl
lea
aas
adcl
push
dec
out
mov
addr16
push
fistps
pop
out
leave
mov
enter
pop
mov
xchg
jns
adc
cmpsl
inc
xchg
movsl
xor
sub
fs
xchg
pop
mov
loopne
in
hlt
mov
pop
jl
push
fisubrl
xchg
aad
ret
repnz
pop
mov
shl
add
sub
mov
push
sbb
inc
gs
pop
fistps
mov
cmp
sbb
rcrb
js
pop
cltd
pop
ja
push
aad
mov
mov
movsl
cltd
out
add
lret
push
add
lock
cmp
and
ficoml
jge
dec
xor
inc
mov
out
out
stc
xchg
pop
sub
movsl
test
pop
enter
hlt
inc
or
lds
frstor
ja
jge
std
jp
shll
cli
mov
cmp
negb
imul
jnp
push
out
movsb
and
je
int
rcr
stos
jae
fldenv
xor
aaa
dec
scas
cmpsb
pop
and
or
aam
xor
adc
xchg
sbbb
mov
mov
and
outsb
pop
ret
popa
test
cltd
xchg
pop
mov
pop
xchg
jb
loopne
out
ror
bound
pop
pop
jno
mov
mov
out
push
adc
adc
cmovp
pop
out
jle
adc
loope
jg
cmc
jnp
mov
cmp
cli
sbb
dec
pop
insb
push
adc
lcall
mov
cmc
mov
stc
lds
cmp
imul
cmp
push
xchg
shlb
push
lret
test
jp
push
sarb
pop
lock
arpl
lock
xchg
data16
sub
std
dec
or
stos
divb
outsb
cmp
mov
cwtd
mov
inc
push
mov
mov
jne
or
cwtl
pop
imul
jge
inc
in
stos
pop
push
adc
movsb
sbb
imul
ret
shrl
rorb
xor
cmp
xlat
mov
test
cwtl
and
xlat
xchg
xor
inc
out
inc
repz
mov
sbbl
aad
push
movb
jl
iret
fisttpl
sbbb
scas
fcmove
movsl
es
sbb
cmp
insl
std
ret
push
mov
imul
cmpsb
inc
inc
test
repnz
imul
sub
hlt
aam
xchg
cmc
cld
xor
je
mov
imul
out
icebp
dec
dec
ds
test
lea
repz
xor
jbe
and
mov
inc
gs
mov
lock
sub
sbb
fisttps
or
mov
pop
movsb
sbb
sub
push
popa
mov
or
outsb
jg
aad
stos
inc
stc
xlat
stos
jmp
dec
iret
ds
xchg
xchg
fs
jae
push
es
out
cld
cmp
or
outsl
data16
jb
xor
push
mov
addb
test
adc
xchg
lahf
mov
cwtl
aaa
jno
pop
dec
xchg
sahf
sub
inc
in
or
hlt
mov
out
test
pop
loopne
arpl
jl
popf
lret
in
xchg
data16
mov
popa
movsb
inc
fstps
negl
mov
xor
inc
sbb
mov
push
xchg
pop
or
mov
call
mov
sbb
xchg
into
and
mov
mov
push
inc
movsb
ret
loopne
jo
xor
jge
xchg
test
xadd
cmp
pop
sub
lret
mov
imul
outsl
cld
lea
push
dec
pavgb
sbb
jecxz
ficoms
mov
outsb
insl
xlat
jo
sarb
loope
mov
fs
stos
pushf
stos
hlt
xor
outsl
pusha
in
jle
int3
and
fdivr
add
stc
mov
or
dec
pop
fldz
xor
and
dec
lods
jmp
sarl
popa
repnz
pop
push
mov
jmp
aad
daa
rorb
call
pop
jo
mov
mov
ds
repnz
test
lock
jo
repnz
scas
pop
pop
rolb
xor
lods
xchg
push
inc
or
lea
jle
xchg
stos
rcrl
pusha
fldcw
cmp
push
mov
cld
xchg
or
ror
pop
lock
jo
jne
add
sbb
lock
lods
repz
pop
sbb
loope
mov
xor
cmp
icebp
mov
xor
push
les
jle
aam
je
dec
into
ror
and
es
push
jp
sbb
sbb
mov
cmp
mov
cwtl
xor
nop
sub
insl
rol
fs
fidivrs
shll
jbe
jae
ret
inc
pushf
xor
ret
pop
pop
push
cmc
cmpsl
in
dec
push
push
inc
mov
mov
adc
loopne
mov
jne
inc
ret
or
dec
ss
fsubrs
jl
cwtl
push
mov
pushl
sub
mov
xchg
sar
inc
mov
jmp
jle
xorl
cmpsl
jo
stc
pop
dec
fcoml
pushl
adc
sbb
mov
pop
test
xor
push
mov
sbb
push
dec
adc
mov
inc
push
mov
add
test
or
jle
aas
fdivrs
andl
das
and
cmp
mov
rclb
add
cwtl
adc
jle
mov
xchg
dec
push
jne
push
dec
gs
lret
cmp
xchg
adc
fs
rcr
push
mov
xchg
arpl
icebp
stos
fsubp
and
jge
xchg
mov
mov
mov
push
inc
into
imul
ds
dec
cmp
rcrb
lcall
aas
cmp
xor
add
imull
pusha
rorb
jb
xchg
into
mov
and
leave
pop
sub
pop
int3
and
push
js
jno
jge
push
arpl
imul
xor
push
rorb
xor
ffreep
push
jmp
out
pusha
xchg
dec
cmp
rcll
dec
push
jno
or
repz
roll
and
xlat
push
mov
xchg
or
jg
cli
pop
sbb
decb
inc
sub
ror
mov
mov
andl
push
adc
and
fsubs
loope
dec
xor
mov
in
add
orb
loop
mov
sub
mov
xor
aam
jae
movsl
lahf
aam
and
mov
fcmovnb
xor
js
les
dec
shl
lret
ja
adcb
or
pop
adc
cltd
or
mov
xchg
dec
cmp
add
lea
movsb
inc
inc
mov
pushf
jae
add
movsb
lahf
mov
dec
xchg
cmpsl
push
and
in
lods
push
mov
xor
fs
dec
fbld
mov
mov
dec
adc
clc
lods
push
pop
mov
inc
inc
and
test
and
inc
sarb
popa
std
push
movsb
sbb
nop
cli
cmc
nop
mov
outsb
jl
push
rcl
rol
pusha
dec
push
repnz
outsl
daa
mov
or
in
push
mov
dec
xchg
mov
adc
inc
dec
sbb
mov
in
lds
and
sub
lea
ficoml
pop
sub
sub
sub
mov
adc
fists
je
sarl
or
cmp
pop
test
pop
fcmovb
ror
jmp
repnz
ss
sub
mov
xchg
lods
ret
mov
and
je
adc
mov
xchg
scas
xor
cmpsl
ja
mov
shlb
adc
fcompl
lods
es
stos
xchg
lock
out
rorl
inc
xchg
jecxz
push
leave
mov
cs
and
mov
notl
insb
fidivs
out
aaa
mov
sbb
jb
cmp
test
fldl
out
loop
fwait
out
jl
mov
sbbl
fwait
dec
pop
and
push
mov
fs
mov
rol
popf
imul
nop
adc
call
xchg
bound
lahf
jp
and
pop
pop
lea
or
inc
rol
or
ss
mov
dec
aam
mov
insl
sub
lock
push
jmp
jae
adc
push
rcrl
sub
mov
jno
push
or
mov
mov
loope
jp
and
fsubrs
fisubl
cmpsb
add
arpl
fidivl
sbb
enter
xor
in
cmp
aaa
stos
inc
ret
adc
lock
sbb
out
sub
rol
pop
idivb
or
pop
aaa
sub
imul
leave
ja
inc
cmpb
cwtd
adc
inc
push
mov
mov
or
and
dec
test
push
sub
aaa
jmp
push
add
cmc
gs
into
insl
sti
ds
sbb
cwtl
aas
or
cs
cmp
insb
sub
or
pusha
je
int3
and
or
sti
ret
out
cmpsl
dec
inc
adc
push
test
iret
out
enter
xchg
add
addl
pop
cli
int3
push
clc
adc
scas
pushf
mov
cmp
xchg
mov
scas
fisubrl
ja
ss
int
stos
or
testb
xchg
adc
sbb
sub
stos
jmp
outsl
lock
call
inc
add
pusha
jp
sub
sub
jne
daa
into
sbb
and
fucom
mov
repnz
sbb
pushf
repnz
in
fwait
pop
rol
and
xchg
sbb
gs
lock
jo
mov
mov
outsb
pop
cwtl
aas
aam
lcall
adcb
loopne
mov
popa
cmc
jb
sub
dec
cltd
cmp
mov
and
xchg
fnstenv
and
scas
repz
dec
shll
sbb
mov
clc
add
popa
adc
cmp
jb
jle
mov
add
adc
loopne
insl
pop
in
repnz
sub
in
add
mov
and
mov
mov
mov
add
dec
jbe
lea
jns
rcrl
and
icebp
fisttps
mov
xchg
cs
mov
sahf
notl
mov
xchg
rcrb
nop
lea
leave
dec
push
aad
pop
cmpsb
dec
mov
ret
test
pop
insb
push
jle
mov
push
mov
shlb
mov
roll
scas
shr
mov
aad
push
call
sbb
adc
int
js
and
push
mov
or
mov
mov
int3
movb
inc
pop
or
insl
imul
outsb
mov
call
fsubrs
fimull
ljmp
jne
add
ljmp
cs
nop
xor
cltd
cmp
fists
shl
clc
jns
add
xor
inc
dec
xor
pop
or
add
jmp
pop
orb
mov
pop
lods
lods
push
divb
jno
cmp
xor
pop
mov
inc
icebp
inc
xchg
fnstenv
mov
inc
cmp
in
or
daa
jae
into
inc
test
push
nop
testb
lret
push
mov
popa
subb
imul
js
icebp
test
lods
enter
mov
inc
xchg
xor
inc
dec
jle
mov
jg
or
xor
movsl
lods
mov
in
fwait
rcrb
xchg
aaa
dec
fs
pop
inc
rorl
cmp
sub
push
sbb
lret
xor
xor
mov
hlt
sti
sahf
jnp
and
int3
lret
mov
cltd
es
or
dec
xchg
mov
aad
pop
push
out
mov
and
xor
stos
aam
mov
push
mov
jae
jmp
subb
bound
inc
inc
adc
lods
test
faddl
rorb
sub
xor
jae
in
ja
bound
jge
adc
scas
outsb
mov
jmp
mov
test
sub
shlb
cs
int
or
push
add
cmpsb
mov
push
push
jne
mov
hlt
push
mov
pop
loope
sub
xchg
add
shll
imul
sar
xor
pop
aas
push
xor
mov
xchg
or
insb
int3
leave
jo
out
call
dec
and
iret
mov
push
dec
sub
push
int
inc
and
movsl
add
lret
cli
out
mov
mov
dec
xchg
mov
outsb
adc
sbb
clc
push
stos
or
fs
jg
push
or
fidivrl
and
push
push
sub
fcmovnb
cmc
mov
and
sub
aas
jmp
pop
jne
mov
cmp
cmp
nop
bound
leave
add
push
bound
bnd
outsl
xchg
insb
or
insl
popa
adc
scas
jmp
adc
push
and
mov
and
stos
xchg
addr16
sarb
xchg
daa
fistl
iret
add
sub
jmp
shrl
lods
ja
lods
aas
out
jne
lods
cmpsl
jo
mov
xchg
ret
xchg
sbb
push
bound
push
pop
push
xor
insb
fwait
push
loopne
adc
add
loopne
insl
hlt
push
mov
insl
pop
scas
imul
imul
divb
ret
mov
mov
mov
pop
test
cmc
cld
xchg
pushf
sbb
push
cwtl
imulb
addr16
test
xchg
mov
cli
int
mov
push
ja
push
dec
stos
lods
orl
xchg
movsl
pop
add
mov
jg
rorl
inc
sub
jo
adc
cmpsb
fs
mov
mov
aam
sar
push
rolb
fildll
stc
push
call
xor
add
mov
addr16
js
out
fbld
loop
jb
bound
ret
addr16
mov
cs
ja
push
in
cmp
loopne
cmpsb
cmp
movsl
adc
lods
mov
or
pop
jmp
fs
and
inc
jg
and
vcvtps2dq
jl
xlat
negl
das
std
out
dec
adcb
mov
add
in
xor
cmp
or
push
jae
sub
test
xchg
mov
inc
cmpl
mov
data16
jecxz
enter
ss
add
mov
lock
xor
add
jge
sub
out
or
mov
mov
xchg
adc
gs
mov
andl
fdivs
movsb
dec
dec
inc
in
cltd
mov
add
fsubr
inc
cltd
xchg
cmp
cli
orl
xor
ljmp
int
mov
dec
in
or
sub
stos
and
xchg
jmp
cmpsb
lahf
xchg
and
push
sub
add
jg
sub
xor
js
shlb
sbb
in
push
jb
mov
ja
adc
daa
cmp
in
jg
xor
aaa
repnz
fisubrs
pop
sbb
lods
mov
mov
push
rcr
sti
mov
push
jmp
mov
js
fld
shlb
adc
lock
cmp
add
mov
scas
call
sbb
and
stos
aad
mov
rcrb
icebp
loope
xor
sbb
inc
inc
ljmp
inc
lret
mov
cmp
mov
enter
mov
pop
insb
pop
push
jo
gs
sbb
push
sti
data16
hlt
and
movsb
ret
jo
push
lret
les
nop
cld
xchg
int3
or
clc
rorl
adc
out
test
arpl
test
push
dec
adc
lea
rcl
adc
mov
stos
insl
mov
cmc
stos
push
push
rorb
loop
stos
popa
hlt
sarb
stc
xor
addr16
pop
xor
in
cmp
adc
cld
dec
jnp
and
push
aam
push
shll
imul
xor
lret
mov
or
push
cmp
addr16
dec
adc
repnz
ficomps
mov
push
mov
xchg
inc
mov
jecxz
xor
and
push
mov
push
inc
pop
sub
mov
pop
aam
push
xchg
jge
enter
and
gs
loopne
pop
pop
out
add
ja
stos
clc
insb
dec
add
cmp
es
cmp
in
push
push
sbb
sbb
in
sti
test
sbb
mov
sub
jl
lret
scas
js
push
fnstenv
test
cmpsl
aad
pop
push
cld
dec
inc
or
outsb
xchg
push
lods
jl
sub
jmp
fildl
call
int3
test
adc
push
cmpb
mov
mov
cltd
scas
add
insb
popf
cmp
push
or
out
xor
divl
pop
mov
add
dec
insb
push
and
and
add
xor
push
push
add
adc
pop
or
add
push
lea
mov
mov
shr
mov
out
pop
lahf
sub
rcrb
push
movl
test
out
lods
fsubr
push
pop
cmp
xchg
lods
outsl
clc
dec
mov
xchg
add
jb
mov
cli
dec
fists
fnstcw
mov
inc
xchg
xor
int3
cmp
xchg
cmp
sub
xlat
cld
cli
outsb
mov
arpl
daa
adc
mov
sub
int3
les
mov
fsts
mov
loope
or
sub
popf
stos
sbb
cmp
mov
mov
and
out
sbb
scas
in
dec
mov
js
rorl
out
mov
push
sbb
mov
leave
je
addr16
or
mov
out
adc
lock
jge
xchg
stos
insb
roll
in
cmp
out
sub
dec
cmpsl
into
pop
jmp
sub
or
repnz
aad
mov
shr
cltd
aad
dec
lea
sbb
or
mov
and
pop
mov
xor
or
out
iret
inc
jmp
imul
add
in
scas
sub
inc
inc
xchg
popf
inc
xchg
jl
cwtl
xchg
sub
and
inc
sbb
roll
dec
jecxz
pushf
cli
push
sbb
cli
mov
push
fcmovne
cmp
insb
and
cld
leave
test
inc
xchg
fmul
sub
dec
mov
mov
ret
std
clc
shll
xchg
cli
mov
cltd
xor
cwtl
fcomps
inc
xchg
push
sub
rcrb
jb
in
and
cwtl
xor
stos
int3
adc
adc
cmovbe
je
cmpsl
jecxz
jmp
lcall
notl
insb
test
cmpsl
lods
mov
or
cmp
sbb
or
xor
leave
je
adc
pusha
adc
jbe
pop
mov
pop
xor
cmp
js
adc
movsl
inc
in
icebp
jb
push
mov
iret
adc
mov
insb
pop
add
dec
mov
cmc
xlat
and
jno
loopne
insb
mov
in
xchg
sahf
push
lret
rcll
lret
scas
pusha
in
lea
movb
mov
gs
leave
mov
sbb
jb
cli
mov
out
fnstsw
out
loopne
and
xchg
jg
sbb
cmp
adc
mov
rclb
adc
add
push
jle
mov
push
fwait
movsb
push
repz
or
mov
xchg
je
sbb
cwtl
sahf
mov
mov
adc
pop
jae
mov
and
js
jns
cli
dec
pop
lods
xchg
pushf
mov
cld
add
adc
jg
mov
pop
push
jb
aam
or
test
mov
fdivs
dec
jnp
xchg
pop
shl
insl
sub
push
xchg
shlb
loope
xor
mov
gs
test
insl
cmp
add
js
mov
push
xchg
call
xor
test
shr
fildll
pop
and
inc
pop
adc
inc
xchg
mov
xchg
sbbb
mov
lods
ja
divb
adc
out
int3
inc
sub
aad
movsb
dec
pop
test
icebp
mov
outsb
pop
aam
outsb
lock
adc
pop
adc
jae
aam
mov
in
jmp
js
gs
jne
aad
aaa
jp
mov
mov
add
push
iret
push
loope
inc
mov
adc
stos
jecxz
push
and
xor
xchg
in
ljmp
mov
lds
mov
adc
scas
pop
or
int3
xlat
test
xchg
push
and
xor
sarl
sbb
push
push
sbbb
repz
cmp
addr16
inc
or
sti
int
aas
mov
adc
xchg
mov
fistl
jl
dec
jg
inc
loop
jge
addl
sub
rcr
add
dec
aad
lret
mov
lods
mov
cmp
negb
loope
test
shlb
mov
push
xchg
jnp
les
push
lock
xchg
aaa
sti
xlat
je
push
int
daa
aad
adc
or
aam
dec
mov
stos
jge
popa
shll
mov
jno
pop
fidivs
mov
in
sbb
arpl
mov
sub
mov
pop
mov
inc
xchg
add
mov
jecxz
fidivrs
xchg
or
and
push
jno
mov
ud2
and
cmp
mov
mov
scas
in
repnz
xchg
jp
and
sarb
or
clc
push
fsubrs
sbb
aas
shrb
test
out
adc
outsb
fmul
add
mov
xchg
xlat
sub
push
and
mov
xchg
push
fnstenv
aas
push
in
push
xor
loopne
frstor
adc
jg
ret
in
mov
cli
addr16
inc
into
jmp
push
cld
lea
inc
jne
cltd
mov
inc
push
inc
fisttps
ja
and
xor
push
and
xchg
lahf
das
aam
sbb
outsb
pushf
push
jp
and
inc
out
jg
xchg
shll
pushw
sub
stc
fadd
shr
int3
push
or
ja
fmull
cs
frstor
or
dec
std
or
cmpsb
mov
push
pop
out
mov
mov
imul
in
mov
adc
mov
mov
push
out
add
pop
in
test
popa
add
push
jae
fsub
pop
or
outsb
and
std
xchg
mov
cmpsl
add
push
pop
negb
lods
mov
movsb
stc
push
aam
and
les
stc
or
and
mov
mov
nop
push
pop
iret
jge
adc
pop
sub
jns
push
movsl
cmp
repnz
xchg
nop
jl
mov
cmp
jmp
jge
pop
movl
popa
js
pop
outsb
int3
mov
adc
mov
aad
jp
test
cmpsb
dec
hlt
and
hlt
out
jb
shrl
pop
mov
shrb
and
rcrb
stos
rclb
pop
in
jbe
arpl
inc
dec
pop
subl
iret
and
cmpsl
mov
push
mov
pop
push
in
mov
std
lods
test
mov
adc
loope
loop
jbe
roll
ret
gs
and
out
mov
rclb
popa
jle
cmp
xchg
aam
enter
mov
cmpsb
sub
int
fidivs
mov
outsl
icebp
pop
lahf
ficoms
jo
test
cs
scas
sahf
xchg
dec
mov
xor
pop
mov
bound
dec
sub
push
jns
shlb
xor
gs
pop
inc
fnstenv
loope
pusha
lea
or
and
js
rorb
stos
mov
sar
movl
stos
mov
out
jbe
arpl
cmpsl
cmp
imul
int
dec
jl
outsb
cmp
sbb
xchg
fldcw
mov
xor
adc
sbb
sub
out
xchg
cmp
xchg
mov
mov
sub
jecxz
mov
stos
loop
lds
sub
fsubrs
jg
or
xchg
je
pop
mov
xchg
int3
call
movl
mov
inc
xor
es
adc
lcall
cld
cmc
cltd
add
loope
out
inc
mov
push
jle
cmc
pop
rolb
or
pop
adc
sbb
jo
jbe
inc
das
out
and
loop
fbld
or
shlb
mov
add
xchg
ret
jl
fdivr
pop
dec
push
xor
imul
js
insb
cmpsl
gs
out
mov
pop
popa
popa
or
jbe
inc
test
mov
test
adc
insb
lea
push
inc
push
adc
stos
xchg
push
ljmp
sbbl
mov
fsubrl
cltd
and
jne
xchg
scas
push
mov
jg
xor
dec
push
jno
push
pop
repz
sub
js
cmp
jp
xchg
mov
aas
int
pmaddwd
xor
fmull
cmp
push
ret
and
and
movsl
mov
xor
cltd
nop
pusha
mov
push
in
repnz
shr
stos
push
adc
mov
mov
mov
mov
out
or
push
dec
inc
test
mov
data16
jmp
std
dec
sbb
fldcw
xchg
ret
jle
jae
or
insl
inc
pop
mov
mov
shrb
mov
sub
int3
adc
out
fwait
inc
pop
aam
cmp
inc
sbb
ss
and
imul
push
lahf
dec
jo
pop
mov
fistpll
popa
mov
popl
out
fdivrs
mov
mov
dec
inc
mov
lea
mov
fisubrs
cwtl
jne
or
adc
insl
arpl
jp
push
cmpsl
mov
push
mov
push
mov
jns
fnstenv
inc
add
sbb
testb
cld
xchg
and
jo
xlat
fs
mov
pushl
jae
xor
xlat
call
daa
sbb
and
mov
dec
lods
js
mov
cmpsl
cmp
cld
mov
cmp
push
sbb
data16
sbb
shlb
enter
jae
dec
insl
imul
or
push
rorb
push
dec
pop
sbb
pop
clc
movsb
mov
push
stos
sbb
jg
sub
sub
inc
hlt
or
dec
xchg
fidivrl
sbb
dec
jb
in
or
call
ret
jne
insl
or
ret
push
cmp
not
int3
rcr
adc
popf
ja
and
inc
outsl
call
mov
mov
push
inc
or
les
mov
mov
xchg
or
mov
int
in
sti
mov
and
push
ss
aam
jle
ficoms
jl
bound
mov
fs
inc
xchg
fisttps
lock
jae
stc
inc
scas
pushf
arpl
pop
filds
fsubrs
mov
fisttpll
push
push
les
sub
jbe
jbe
sbb
lahf
in
jle
jge
dec
jg
jbe
dec
or
jmp
mov
push
int
xchg
fbstp
insl
xlat
pop
pop
rolb
sub
pop
pushw
std
and
int3
xchg
dec
fidivl
icebp
fsubrs
in
pop
jnp
cmpsl
sbb
cmp
test
ret
xchg
mov
ja
std
xor
pop
in
mov
int3
enter
int
mov
jns
sbb
xchg
addr16
push
xchg
addr16
inc
repz
je
mov
cli
sub
sub
mov
xor
push
dec
bound
cli
aas
stos
push
jmp
sbb
shll
push
mov
push
scas
dec
or
in
aas
inc
sbb
push
test
dec
les
dec
leave
out
jne
cmp
add
out
fs
push
push
js
inc
in
enter
sbb
and
into
shr
shrl
cmp
xor
sarl
sar
into
test
and
lret
push
cmp
cwtl
iret
negb
xor
xor
lods
lahf
cld
push
add
into
or
pusha
rorb
aaa
mov
mov
or
stos
mov
sub
pop
repz
into
cmp
movsb
mov
in
or
fdivrl
xchg
push
dec
int
push
rorl
in
inc
sbb
sub
mov
cwtl
inc
imul
mov
inc
pushf
sbb
mov
lods
test
push
in
loopne
fndisi(8087
xor
jp
aad
adcb
or
fcmovnu
jb
aaa
test
or
adc
cmp
call
in
sbb
je
mov
cmpsl
push
push
loop
push
lret
lea
xchg
xchg
inc
ficompl
or
in
ss
mov
dec
cld
pop
jns
popa
movsb
rcr
sub
mov
negb
test
bound
dec
cs
sarl
inc
xchg
sbb
lods
or
sbbb
icebp
call
pop
test
sub
xor
add
dec
cmpsl
insb
pop
or
pop
data16
cmp
int3
mov
cmp
add
sbb
jb
out
fmuls
mov
dec
clc
cmp
jge
jl
inc
lret
lahf
mov
xor
rolb
xchg
push
arpl
scas
mov
inc
or
mov
cltd
inc
inc
insl
dec
or
arpl
and
sbb
lcall
adc
mov
xor
mov
and
addb
pushl
pop
xor
inc
out
sub
dec
pop
imul
sub
scas
fcoml
dec
or
jne
into
iret
mov
push
sbb
in
mov
jge
in
fs
test
pop
add
in
adc
stos
and
aas
mov
mov
nop
movsl
stos
push
or
sub
dec
fildll
jnp
mov
out
and
mov
xchg
fiadds
mov
adc
aas
add
push
mov
punpckhwd
test
shlb
in
jae
cltd
xchg
xor
divl
rorb
test
imul
sub
pop
test
inc
ja
outsl
lods
in
lods
out
je
in
add
lods
movsl
mov
dec
movsl
mov
lods
push
xchg
clc
cmp
xor
insl
ret
pop
pop
fcomps
push
sub
popf
inc
ja
jne
sub
dec
dec
stc
adc
in
fdivrs
sbb
add
outsb
xchg
mov
mov
lret
leave
enter
push
mov
mov
mull
dec
ret
or
mov
aam
inc
pop
repnz
xchg
andl
jp
push
test
lahf
sbb
push
push
data16
and
sahf
clc
sub
inc
jmp
cmp
sub
js
int3
stos
jno
out
outsb
xor
add
outsb
into
jg
aad
add
pop
jmp
mov
push
lods
test
push
nop
or
fisubrs
out
roll
cli
pop
pop
xchg
jo
or
jb
lods
int
mov
adc
int3
insb
test
mov
fmuls
lods
popa
testl
int
divb
adc
sub
inc
call
fwait
repnz
test
xchg
push
hlt
in
fcmovne
push
ss
fwait
add
push
jmp
lods
adc
rclb
lcall
sbb
ficoml
xor
or
pop
pop
fwait
dec
adc
jne
aad
or
mov
mov
mov
imul
data16
cmpsb
xchg
nop
and
movsb
js
xor
cmpsb
mov
lahf
sub
sub
mov
call
xchg
add
pop
push
pop
bound
std
xchg
loopne
cmp
aam
cmc
jl
enter
cwtl
sbb
out
jb
push
out
adc
push
mov
ss
ds
push
js
cmp
sbb
stos
xchg
ja
mov
sbb
cmp
dec
cmp
xor
arpl
pop
out
repz
inc
enter
sti
roll
or
xchg
xor
jecxz
fisubl
add
sti
or
jmp
repz
inc
xchg
lea
cli
dec
fs
push
mov
mov
stos
stos
icebp
addr16
push
aam
pop
and
and
xor
leave
mov
fistpl
xchg
sbb
nop
lds
sbb
movsl
push
jne
loopne
push
push
rclb
push
imul
pop
into
and
leave
xchg
inc
or
and
ret
xchg
in
cmp
inc
test
inc
into
add
lea
jae
nop
ret
test
cli
xchg
fwait
sub
fnstcw
sub
adc
cmp
insb
lods
jno
cltd
jl
orb
jnp
int3
movsb
mov
pop
out
adc
lret
sbb
incb
push
jp
pop
nop
test
jo
shll
inc
xlat
std
cmp
jl
fdivrs
and
into
xchg
test
jns
dec
and
int3
sbb
movsl
fidivrs
xchg
jae
fdivs
jb
mov
stos
jo
in
idivl
leave
sub
sbb
repnz
sti
xchg
sbb
test
rcrb
inc
push
sarl
mov
inc
mov
shrb
inc
mov
ja
dec
mov
or
out
pmulhw
nop
les
lock
inc
out
call
xchg
js
cmc
adc
std
or
adc
adc
and
mov
ret
ret
data16
out
iret
xchg
adc
fiadds
jb
fcoml
rolb
jp
jl
cmpsb
iret
loopne
jbe
nop
jge
lret
pop
ljmp
adc
fwait
cmp
pop
pop
orl
mov
inc
jmp
mov
or
lods
stos
push
sbb
dec
mov
ss
mov
nop
pop
rol
shlb
lcall
out
sti
jb
mov
mov
hlt
cmp
std
and
adc
sbb
lods
jl
sub
out
ret
test
clc
inc
adc
aaa
and
xchg
dec
adc
popa
dec
xchg
mov
or
jp
pop
inc
cs
inc
leave
jb
xchg
out
bound
jo
out
inc
or
shll
pop
dec
andl
mov
xor
and
mov
sub
lahf
dec
add
jno
jae
mov
jb
mov
outsl
lds
int
add
push
fdiv
pop
jae
pop
rorl
popf
in
and
sarb
xor
jbe
stos
jns
repz
imull
push
out
mov
or
sbb
add
scas
outsb
lods
mov
cmpsl
adc
pop
roll
push
jg
ficoml
jge
pushf
mov
mul
int3
arpl
xor
pop
adc
mov
push
add
mov
inc
mov
xor
mov
sub
push
daa
or
jmp
cs
sbb
xor
int
xchg
jl
addr16
orb
jp
stos
mov
mov
sub
nop
and
sub
pop
test
rcll
xchg
adc
out
outsb
decl
stos
push
push
stos
mov
and
adc
push
mov
nop
movsb
repz
cmpsb
jae
jmp
dec
jecxz
add
xor
fwait
mov
out
cmp
sahf
mov
adc
cli
sub
xchg
cwtl
xor
pop
cmp
nop
shlb
jo
dec
dec
insb
lds
enter
in
int
ja
mov
stos
jmp
inc
and
into
push
std
add
scas
call
test
cwtl
ds
sbbb
test
mov
jmp
pusha
jbe
jo
rorb
nop
loope
fwait
adcb
add
adc
loopne
push
jecxz
fwait
mov
js
inc
jae
incb
int3
dec
mov
mov
aam
stos
outsb
add
mov
xchg
bswap
into
shlb
mov
cli
scas
fcomps
mov
les
inc
shl
sbb
ja
pop
add
pop
icebp
stos
lods
mov
clc
mov
in
add
or
jbe
mov
xchg
and
add
jge
jno
loopne
dec
or
mov
dec
mov
and
sub
jno
test
lea
push
fs
xor
mov
inc
sbb
pop
xor
pusha
lahf
es
or
xlat
push
mov
cmc
sbb
xchg
out
cmp
fwait
lahf
imul
push
mov
add
adc
in
scas
movsb
mov
pop
aad
and
lret
inc
cmc
cmpl
rcll
xor
lahf
loopne
addl
test
pop
outsl
inc
lea
sti
loop
sub
pop
adc
mov
cmc
enter
mov
jb
xchg
jbe
push
xor
mov
out
scas
insl
jge
mov
and
ret
lock
xor
mul
jbe
rol
aaa
add
mov
or
push
loopne
sub
adc
cld
pop
data16
mov
icebp
sub
cmp
arpl
push
je
or
into
icebp
jnp
mov
ret
or
sub
or
call
rorb
or
in
and
sahf
mov
pop
ret
mov
cwtl
rcr
inc
xor
add
cmp
pop
lret
pusha
inc
dec
in
dec
jecxz
sbb
cld
data16
xchg
ficoms
add
fisttps
xchg
xor
adc
es
push
dec
or
dec
mov
cmpb
adc
ret
movsl
mov
sub
mov
fisttpl
or
das
orl
fisubl
push
cmpsl
push
and
ds
mov
stos
pop
shll
xlat
inc
pop
jp
xor
cli
jae
movsl
mov
scas
jecxz
mov
rorl
mov
dec
adcb
subl
lea
push
pop
lahf
popf
hlt
lods
push
scas
insl
and
xlat
fidivl
and
inc
cmp
outsl
in
inc
pop
test
inc
mov
into
fcompl
sbb
or
ljmp
jge
jbe
loop
jbe
gs
inc
pop
je
icebp
xor
or
iret
and
mov
pop
cmp
das
mov
pop
push
pushf
xor
or
lea
adc
xchg
loope
rcll
jo
xchg
or
mov
pop
add
fwait
mov
fwait
xor
adc
push
cmp
hlt
push
cltd
dec
jp
addr16
insb
mov
jbe
xor
inc
scas
pop
jo
leave
les
or
adc
and
sub
xor
imulb
or
bound
mov
loope
lret
popa
xchg
and
ret
std
in
mov
testb
ffreep
test
pop
out
repz
movsl
sbb
cs
jns
jmp
xor
ret
popa
push
xchg
cmpsb
cmc
sub
imulb
xchg
push
push
inc
in
xchg
aad
scas
xchg
mov
in
imul
sub
test
sbb
or
jb
sub
rcr
dec
imul
addr16
mov
xchg
stc
or
fiadds
adc
push
jmp
adc
sahf
in
jno
imul
aas
pop
cs
sub
pop
sbb
out
jmp
lret
int3
mov
adc
call
pop
xchg
in
lods
dec
mov
sub
jp
push
sub
shl
subl
xor
xchg
mov
into
or
xchg
into
mov
add
mov
cmp
test
sbb
cld
add
and
push
mov
cmc
mov
jl
xor
dec
sbb
push
fcmovnu
dec
ljmp
mov
pop
inc
mov
mov
add
mov
call
lds
mov
pop
loope
push
lock
loop
mov
sub
sub
mov
fwait
iret
dec
mov
adc
and
test
adc
mov
cmp
or
aad
and
sub
test
mov
stos
push
dec
je
mov
inc
pop
mov
ss
cmp
mov
dec
push
notl
and
and
xchg
sub
push
ss
dec
sahf
and
cmp
frstor
andb
pop
imulb
xorb
mov
stos
jmp
cld
das
stos
in
call
dec
jbe
ret
xchg
imul
hlt
ljmp
pop
xlat
das
jge
cmp
test
sub
sti
inc
adc
adc
xchg
inc
mov
and
inc
clc
nop
pop
addr16
jo
xlat
cwtl
pop
mov
pop
hlt
fstps
mov
call
pop
push
cmp
das
clc
cmp
lret
push
aad
jb
xor
and
lahf
or
repnz
sbb
jg
stos
stos
repz
push
ja
hlt
das
aam
cmpsl
stc
mov
mov
adc
test
test
jg
iret
adc
xor
pop
jbe
outsl
jg
sub
mov
xchg
cli
insl
imul
jp
ret
or
adcl
dec
ja
cmp
ror
and
imul
xlat
jns
les
cld
adc
test
pop
push
scas
fs
fwait
xchg
mov
jecxz
sbb
pop
xlat
jecxz
adc
aas
stos
mov
inc
ficompl
idivl
pop
xor
jg
js
aas
imul
sarl
icebp
outsb
xchg
mov
pusha
mov
mov
daa
scas
jge
xchg
pop
mov
xor
sbb
loope
xor
mov
fwait
inc
lods
ret
rolb
mov
add
add
dec
xor
nop
mov
les
hlt
jle
xchg
imul
add
dec
sbb
repnz
adc
rol
push
jle
ljmp
xchg
lcall
sbbb
call
int
int
mov
out
push
sbb
std
sbb
inc
xor
ds
imul
mov
and
push
addr16
pop
fcomps
les
jns
test
mov
and
in
in
daa
mov
loopne
jl
cmp
dec
inc
or
sbb
cltd
leave
loopne
mov
dec
add
out
pushf
mov
jnp
pop
jbe
jge
mov
dec
sti
push
mov
daa
dec
mov
sbb
push
and
das
push
inc
mov
mov
es
sbb
fildl
dec
pop
sbb
fbld
mov
sub
pop
je
fucomip
xchg
sbb
pop
lods
fdivp
mov
rcll
sbb
jne
outsb
xchg
inc
imul
mov
xchg
inc
xchg
add
int3
adc
iret
jns
xchg
clc
dec
push
ds
pop
push
std
pop
call
push
cld
adc
sbb
das
or
outsl
sbb
cmp
inc
or
add
inc
mov
jge
add
leave
test
adc
movsl
das
insb
pop
cmp
inc
fwait
lcall
inc
lods
fsub
pop
jns
sbb
cmp
ret
scas
das
enter
inc
loopne
xlat
repnz
insl
stos
and
pop
jno
je
xchg
sbb
sub
jbe
fxch
jns
sbb
inc
xchg
pop
test
popf
sbb
add
insl
dec
xor
or
xor
sbb
xchg
add
adc
popf
push
pop
pop
jmp
adc
mov
xchg
or
mov
lea
or
lret
aaa
cld
rcrl
roll
loope
popa
pushf
xor
push
int
cwtl
fs
ficoml
daa
in
rorb
loop
dec
jmp
leave
hlt
out
daa
push
dec
and
scas
inc
or
add
test
lods
cmp
mov
scas
inc
xchg
mov
xchg
adc
inc
aam
cmpsb
rorl
lretw
dec
fwait
jb
fcmove
add
addl
cwtl
mull
loop
imul
aam
out
outsl
jo
push
gs
test
mov
dec
cltd
stos
popf
cmp
pop
js
leave
cmp
fscale
test
lret
sub
out
insl
lcall
inc
mov
enter
mov
outsb
adc
outsl
mov
out
rcl
gs
adc
aad
mov
cmp
mov
cmp
pusha
jecxz
inc
jmp
adc
cwtl
lcall
in
aam
and
in
add
sub
fdiv
push
jecxz
pop
xor
fsubl
pop
pop
bnd
scas
push
add
jl
dec
imul
push
jmp
sub
sti
push
rorb
jmp
mov
sti
adc
xchg
dec
mov
fwait
or
cld
push
jbe
and
pop
or
dec
xor
or
xor
aam
jno
push
xchg
and
cltd
pop
mov
js
addr16
push
sub
and
mov
push
lds
push
lret
daa
pop
outsb
xchg
clc
lahf
int
cmp
xor
jbe
cmp
data16
pop
pop
sub
xchg
out
push
mov
fisttpll
lock
sbb
jo
enter
pusha
jp
and
fsub
adc
test
aas
test
jg
ficoml
test
sbb
nop
sub
mov
push
push
int3
fcomp
sahf
rcr
push
fmuls
pop
inc
movsl
pop
or
add
or
or
cmp
repnz
lea
mov
iret
aad
mov
sbb
cmp
jmp
std
repz
ficomps
adc
mov
addr16
mov
mov
in
in
jno
inc
xchg
push
mov
repz
cbtw
lcall
fs
fstl
jae
dec
push
aaa
sub
sub
lods
stos
icebp
scas
sbb
mov
adc
adc
mov
mov
cmp
and
xor
imul
dec
or
xor
andl
and
lea
push
test
in
in
mov
adc
jo
push
shrl
sbb
arpl
mov
xchg
jb
xor
mov
push
jl
lods
add
adc
inc
mov
loope
mov
jns
push
ret
fsubrp
or
ret
in
orl
dec
jecxz
xchg
mov
aas
pop
fnstcw
xor
js
in
fdivr
mov
lahf
lds
bound
sti
inc
mov
int3
push
in
movb
pop
lods
xchg
sbbl
inc
das
jo
shl
fldt
inc
setg
jg
mov
push
mov
inc
push
out
loop
xor
or
popf
in
outsb
push
xor
loopne
ror
popa
cmp
jecxz
aad
scas
dec
scas
mov
fwait
or
jmp
rolb
test
jmp
pop
cmp
jae
dec
fbstp
cmp
add
adc
vpsubb
es
and
adc
jns
js
out
test
push
inc
dec
mov
jge
cwtl
fldcw
lods
scas
add
mov
std
popf
hlt
hlt
std
scas
sub
xor
and
cmp
push
mov
inc
aas
outsb
mov
xchg
fnsave
xchg
jg
mov
xlat
push
pop
ret
icebp
sbb
add
mov
subl
repz
pop
and
rcrb
dec
adc
cmc
cmpsb
test
push
pop
cmc
inc
sbbb
fldt
mov
stos
sbb
sub
in
push
popa
pop
dec
lea
pop
addr16
das
int
lods
mov
cs
mov
mov
in
xchg
sbb
js
sti
ret
scas
push
push
add
cltd
das
out
inc
push
xor
cs
test
mov
sbb
aam
dec
insb
push
int3
sbb
icebp
jmp
mov
xor
mov
inc
dec
jmp
inc
and
mov
xor
dec
out
pushf
test
cmpsb
xchg
ret
pop
sbb
mov
or
jae
jmp
xor
pop
loopne
sub
sbb
and
inc
mov
mov
rorb
dec
add
test
iret
mov
push
pop
jmp
lods
loope
or
lret
sub
mov
pop
fcompl
cli
jno
mov
mov
imul
and
dec
cltd
mov
negb
jns
and
imul
mov
jne
cmpsb
adc
cmpb
dec
aad
roll
inc
xor
xchg
lret
push
xchg
adc
pop
pusha
je
loopne
fwait
or
test
jae
sbb
movb
sub
inc
mov
cmp
sub
scas
sbb
sbb
xorl
outsb
mov
adc
sbb
xchg
lock
sbbl
mov
mov
mov
stc
dec
dec
inc
push
mov
pop
sub
push
jbe
fists
mov
call
add
dec
sbb
mov
fildl
sbb
push
adc
xor
mov
clc
fdivs
push
push
cmp
cmp
pop
dec
adc
out
into
icebp
sub
pop
test
cmp
jnp
addr16
fisubrs
jecxz
insb
mov
inc
and
jp
jecxz
adc
fsubp
roll
push
mov
mov
cltd
push
mov
stos
idivl
inc
pop
test
lea
sbb
clc
in
cltd
aad
movsl
call
repz
in
jne
dec
int3
fs
xchg
or
xor
pop
fstl
lods
mov
mov
push
aam
sub
cmpsl
xchg
pop
mov
insb
insl
mov
stos
adc
scas
aam
mov
cmpsl
scas
movsb
pop
js
cs
mov
inc
bound
bound
and
insb
mov
xor
pop
rcl
mov
jbe
mov
shll
je
sahf
js
subb
test
sub
enter
icebp
stos
pop
mov
and
mov
adc
xor
or
push
movsb
cwtl
cmpsb
stos
jp
mov
movsb
xchg
test
aam
pop
imul
xor
clc
xlat
ret
add
pushf
inc
add
mov
loope
dec
or
insl
fiaddl
mov
sbb
lods
ja
lret
sub
sub
mov
xchg
aaa
pop
jae
loopne
adc
test
pop
stos
adc
mov
popa
ss
push
xlat
int
inc
repz
imul
repz
cwtl
stc
cld
aas
push
inc
push
mov
cmp
mov
std
loope
pop
mov
mov
fmull
pop
adcl
add
loop
loope
sbb
repz
testl
adc
push
xchg
mov
mov
jge
mov
icebp
mul
dec
repz
aam
lahf
push
mov
outsb
mov
inc
mov
adc
leave
pop
push
out
and
add
inc
sub
jne
xchg
push
mov
add
pop
aam
inc
inc
cld
adc
pop
fdivrs
out
enter
fsubrl
cwtl
mov
sti
lcall
and
int
shl
outsl
or
sti
mov
addr16
sub
mov
addr16
sub
cmp
mov
bound
cmp
pusha
push
out
popa
aam
sub
xchg
lods
jbe
sub
jae
mov
insb
xor
xor
inc
xchg
pop
push
inc
mov
jecxz
push
aaa
ror
cmp
xchg
in
xchg
leave
and
jp
int3
pop
iret
sub
sbb
mov
dec
dec
sbb
adc
and
sub
or
pop
dec
mov
mov
into
push
inc
js
xor
mov
or
repz
adc
int3
sar
sub
mov
mov
push
mov
pop
movb
push
in
xchg
lcall
test
sub
arpl
mov
jns
popf
js
adc
ds
in
xchg
in
out
xchg
mov
pushf
cmpsl
xlat
xor
cmp
loop
arpl
mov
mov
sub
js
lret
cltd
cld
jecxz
lcall
xor
cmpsb
addr16
lret
addr16
into
push
xchg
test
out
gs
lock
ss
mov
sub
movsl
or
aam
xor
or
and
ret
sbb
mov
pop
popa
stc
test
push
mov
lds
xchg
cmp
jns
into
adc
mov
sub
pop
add
sub
xchg
push
pop
decb
adc
push
repnz
adc
sub
scas
jl
sub
inc
adc
add
cmp
add
aas
sbb
roll
jae
xchg
rolb
test
pop
sbb
std
call
movsb
je
xchg
cli
and
push
cmp
jo
outsl
ret
movsl
les
movsl
mov
stc
inc
insb
mov
arpl
cmp
add
xlat
xor
fisubl
mov
andb
iret
test
pop
mov
adc
mov
outsb
or
call
in
or
and
and
add
outsb
loopne
inc
dec
sub
jl
push
addl
jbe
or
inc
push
adc
mov
inc
cmp
aas
add
test
xchg
sar
movsb
cmp
inc
movsb
das
sbb
jl
mov
incb
mov
scas
jb
or
mov
in
pop
mov
inc
popf
imul
arpl
fcmovnu
xor
inc
adc
or
cli
sub
sbb
jg
fmuls
add
shrl
cmp
inc
insb
sbb
and
in
fs
cs
pop
sub
into
inc
jp
ja
aad
cld
mov
in
or
jle
adc
lret
dec
push
leave
inc
mov
mov
fistps
int
ds
ret
dec
add
jl
int3
ljmp
mov
jno
inc
out
cmp
add
outsb
aam
sub
mov
aad
inc
addr16
jle
adc
hlt
jl
mov
or
pop
mov
loope
adcl
jb
cwtl
xor
adc
jp
clc
lods
lock
test
cmpsl
and
loop
test
loop
xchg
stos
xor
bound
push
mov
mov
incl
jge
imul
idivl
jns
add
inc
ret
adc
or
mov
add
mov
cmp
mov
cli
adc
fwait
adc
mull
xchg
jae
pop
mov
mov
orb
mov
cmp
sbbb
cmp
stos
or
mov
adc
scas
push
jp
or
jecxz
xlat
mov
jo
cwtl
es
adc
or
shl
xor
dec
mov
into
mov
into
sbb
rorb
jns
jo
jb
fdivl
jecxz
jae
fimuls
xchg
pop
stc
push
add
loope
push
or
pop
xor
out
xor
inc
lods
mov
mov
aaa
mov
xor
lods
stos
xchg
mov
mov
or
lods
jp
in
mov
pushf
test
ja
mov
cli
sub
jg
pop
and
fs
mov
cmpb
test
pop
xchg
inc
int3
add
mov
add
out
scas
mov
push
mov
rcll
push
push
mov
popf
cmpsb
mov
sbb
in
movsb
jle
lea
jmp
and
clc
adc
jb
jmp
push
xchg
testl
cs
pop
fucom
in
add
repnz
sbb
mov
scas
dec
es
mov
push
cmpsb
std
nop
nop
jle
fildll
push
int
mov
push
lea
insl
mov
push
dec
jg
int
aaa
mov
sub
cmp
je
shr
repnz
push
scas
dec
sahf
dec
pop
cmp
fst
push
test
out
dec
dec
popa
xchg
pop
sub
int
pop
mov
int
stc
jbe
adc
dec
xchg
dec
imul
inc
add
stc
push
lret
clc
mov
movsl
inc
dec
fadds
mov
push
addr16
xor
jp
and
mov
jno
dec
mov
mov
pop
stc
ljmp
ret
inc
clc
xor
sub
sub
cmp
jno
and
xor
jl
rorb
repz
cmp
or
test
ja
mov
pop
jge
mov
mov
sub
pop
ficomps
or
mov
cmpl
scas
ret
shll
fadds
jne
stos
pop
push
inc
lahf
sbb
int
es
adc
in
or
cmp
cltd
jg
repnz
push
sbb
fists
fwait
clc
xchg
notb
fcompl
loop
xor
or
scas
pop
sti
jnp
mov
sub
adc
or
cmp
cmpsl
xor
mov
mov
dec
dec
jmp
bound
jmp
cmp
and
rcrb
pop
or
adc
test
dec
and
or
xor
inc
push
js
push
push
lods
cmpsl
or
loop
mov
fiadds
iret
xchg
stos
mov
adc
or
and
pop
mov
pop
daa
testl
push
jns
add
xchg
lea
dec
movsl
lea
mov
jp
pop
in
xchg
ret
fstps
sub
mov
sub
loop
mov
mov
cmp
xchg
aad
inc
ja
sarl
and
mov
and
pop
cmpsl
scas
cmc
fs
mov
shll
or
cwtl
fldl
fistpll
jnp
das
scas
cli
mov
ljmp
jle
daa
outsl
mov
das
aad
fs
cmp
out
mov
sbb
subb
test
jb
cmc
and
inc
push
lods
es
daa
mov
or
cmp
addl
pop
lahf
inc
ljmp
xchg
lock
sub
mov
inc
sbb
cmpsb
stos
addb
cld
stos
aaa
or
cld
mov
sub
or
sti
jno
aam
nop
in
test
or
sub
leave
shl
mov
scas
in
call
es
out
push
sub
inc
cmp
lods
cmpsb
cld
js
pop
test
mov
xchg
mov
lea
or
push
pushf
mov
mov
pop
inc
arpl
stos
dec
out
movsl
mov
mov
cmpsl
xor
mov
inc
jmp
int3
inc
mov
cmp
test
cmp
clc
stos
test
es
and
in
dec
in
into
add
aas
inc
push
cli
mov
fdivrs
mov
and
cmp
in
insb
inc
lock
jnp
jp
ds
andl
xchg
mov
sbb
rcrl
loope
mov
and
lret
fsts
ja
sbb
push
sub
pop
pop
jne
mov
add
or
cwtl
inc
sbb
ss
ret
outsb
adc
xchg
test
out
push
xor
rolb
xchg
shlb
mov
repz
mov
cmp
adc
dec
dec
and
push
pop
outsb
inc
nop
je
out
mov
sbb
les
ljmp
faddl
mov
movb
pushf
adc
mov
out
mov
scas
push
dec
imul
jmp
dec
inc
jp
xchg
adc
inc
pusha
fadd
inc
mov
and
jns
lea
xchg
mov
jne
cli
pop
in
addb
sbb
push
push
pop
movsl
xchg
add
in
cmpsb
cli
lcall
clc
fld
into
jno
imull
je
jae
outsl
dec
loopne
jb
rcrl
and
inc
loope
sbb
fldl
xor
into
popa
scas
sbb
mov
jmp
jae
add
adc
mov
or
pop
cmovbe
sub
popf
mul
and
loopne
mov
ficoms
mov
cmp
out
push
inc
into
mov
push
sbb
push
inc
mov
cwtl
sub
outsb
push
pushw
sub
ja
mov
jns
push
cli
pop
pop
push
cmpsl
jecxz
jg,pt
repnz
call
push
jg
popa
inc
pop
fwait
outsb
or
jl
pop
sub
out
clc
pop
andl
mov
mov
cli
das
sbb
inc
arpl
pop
and
dec
jg
add
jg
push
push
cmpsb
sbb
aad
jo
or
int3
in
jo
push
push
jg
inc
or
mov
add
or
cmp
fidivrs
mov
aad
out
mov
sub
xchg
xchg
mov
stos
aam
or
mov
inc
inc
mov
adc
test
mov
cmpsb
sub
dec
adc
int3
mov
pop
cmp
std
cmp
adc
repz
mov
adc
jg
lods
test
inc
enter
ljmp
dec
and
psrlq
cltd
imul
addr16
in
mov
cmp
xor
nop
in
adc
testb
stos
loope
scas
mov
pop
sub
add
inc
idiv
testl
leave
mov
outsl
xor
jle
sbb
sbb
aaa
cwtl
retw
lahf
dec
mov
push
add
sbb
dec
call
inc
push
and
out
out
xor
jbe
and
pushf
push
add
cli
fcompl
insl
in
adc
repz
sub
cmp
test
dec
mov
xchg
inc
imul
sahf
mov
mov
sub
or
inc
stc
ret
sub
movsl
add
mov
int
fstp
xchg
sub
and
in
mov
sbb
cmpb
push
cld
cs
pop
lds
pop
aaa
fidivrs
pop
test
cmpsl
imul
add
push
push
cmp
fs
in
pop
stos
stos
lret
push
enter
dec
jo,pn
das
jae
cmc
and
pop
cli
in
mov
mov
cmpsl
adc
loop
ret
or
xor
mov
jge
outsb
cmpsl
cmpsb
add
mov
jge
jnp
inc
xor
xor
cmpsb
rorl
cmp
xchg
jae
mov
or
mov
pop
inc
and
stos
cld
nop
pop
mov
int3
jae
jmp
imul
js
inc
popf
sbbb
jo
cwtl
xchg
xchg
lods
aam
fbstp
aad
xor
ret
mov
sti
jle
push
js
mov
ficomps
xor
loop
and
cmpsl
in
inc
cld
lock
and
push
outsb
or
imul
sbb
or
lock
pop
sbb
adc
icebp
sub
les
movsb
ret
mov
add
rcpps
movsb
loopne
sub
mov
ds
push
sbb
movsb
jno
cmp
adc
out
push
mov
mov
std
adc
adc
mov
xor
xor
call
or
push
pop
inc
das
cli
iret
jns
popa
scas
pop
push
and
pop
inc
lock
inc
sbb
xor
xor
faddp
sbb
clc
into
lret
mov
mov
adc
jb
mov
mov
shl
sub
jl
imul
xchg
fildl
test
inc
sbbl
xor
push
push
pop
adc
loopne
xor
dec
cs
in
out
loopne
jne
xchg
rcr
mov
pop
iret
shrb
or
cs
std
subb
sbb
pop
fs
cmpsl
push
stc
mov
dec
loopne
in
cmpsb
and
pop
and
adc
fidivrl
std
test
cmp
je
cmp
jnp
pop
andl
shll
outsb
in
loop
movsl
xorb
pop
std
addr16
pop
cli
xchg
outsl
cmc
int3
mov
stos
fcmovnbe
icebp
pop
mov
mov
stos
or
aaa
push
jo
inc
pop
xchg
int
xor
mov
push
jle
outsl
mov
insl
popa
or
mov
out
pop
cwtl
rcl
jae
rclb
jne
xor
mov
dec
mov
xor
sbbl
jle
jnp
int
stc
lcall
add
push
mov
push
int
sub
push
mov
mov
outsl
mov
fisttpll
jg
loope
xor
sub
jae
frstor
mov
or
pop
xchg
dec
shl
jmp
enter
mov
push
pop
xchg
pop
mov
pop
iret
push
into
add
mov
pop
push
dec
loope
xor
dec
pop
dec
dec
inc
add
jecxz
add
lock
aam
and
push
jno
cmp
and
adc
inc
mov
mov
fstpl
sbb
leave
cmpsb
push
fistl
jle
fs
jmp
dec
dec
add
sbb
pushf
in
jb
xor
movsb
ja
test
xor
jl
in
arpl
pop
adc
cmp
inc
lods
test
mov
mov
xchg
mov
addl
and
cld
xorl
roll
das
dec
mov
jns
aad
xor
jecxz
loope
cld
jge
or
imul
aas
push
cmc
add
adc
imul
dec
outsl
bound
js
push
xlat
hlt
pop
ss
cmp
or
mov
fstpl
push
dec
pop
cltd
mov
jmp
pop
add
mov
adc
dec
xor
xor
jno
add
or
sub
popa
aad
cmpsb
pushf
lret
fstpt
pop
adc
sahf
xor
dec
loop
adc
push
je
jb
jmp
gs
and
int
cmp
cmp
sub
sar
xchg
ss
lret
or
mov
mov
pop
idivl
pop
daa
enter
lahf
jge
int3
jmp
xor
sub
pop
sbbl
mov
pop
push
add
repz
insl
or
jne
xchg
cmp
sbb
or
call
lahf
daa
sub
sbb
dec
lret
insb
dec
lret
xchg
mov
cmp
int3
jge
shll
enter
divb
inc
rclb
addr16
xchg
dec
sbb
test
mov
cltd
std
das
out
insl
shrl
js
sarl
ljmp
cmp
push
xchg
dec
mov
sti
or
sbb
mov
insl
scas
mov
das
xchg
jge
push
mov
and
mov
out
enter
sub
ret
cmp
orb
jb
cmp
shl
and
push
sar
out
lret
sti
push
or
add
and
push
xchg
mov
push
outsl
xchg
xchg
cmpsl
dec
cmpsl
fcmovu
lods
fnstenv
sbb
notl
ret
hlt
jmp
xchg
push
xor
out
pop
cmp
data16
jmp
push
adc
fs
mov
das
xchg
ja
clc
pop
cmpsl
pop
push
mov
popf
xchg
xchg
movsl
lock
ret
add
pop
jo
mov
andb
adc
iret
in
push
cmp
pop
jns
mov
jns
inc
mov
jnp
inc
or
outsl
xor
xchg
or
outsl
lret
push
mov
mov
adc
pop
push
cltd
imul
xchg
outsb
sarl
out
inc
loope
jg
cmpsb
or
xchg
jmp
cmp
and
loope
mov
xchg
hlt
daa
aam
sbb
ret
xorb
out
aad
xchg
and
mov
jle
enter
pusha
mov
test
arpl
mov
lea
jmp
test
inc
jno
jno
lods
popa
mov
int3
inc
and
xchg
jo
sahf
into
jle
fidivl
sbb
inc
jg
push
or
repz
lods
loope
insb
push
mov
mov
sub
inc
cwtl
iret
xchg
jb
xchg
cli
mov
arpl
lea
or
pop
xlat
clc
jg
sub
inc
mov
pop
push
andps
cwtl
mov
js
test
int
jns
in
imull
mov
imul
jae
aad
mov
pop
add
push
outsl
loope
add
fldl
inc
insl
inc
jmp
in
cmc
mov
cmp
cmp
xchg
sub
push
into
movsb
bound
dec
in
xor
in
mov
sub
and
lcall
mov
addr16
loopne
inc
mov
mov
or
popf
das
ja
push
jge
jg
ret
mov
pop
cltd
fsubl
mov
dec
lock
cltd
lcall
mov
xor
or
fidivs
mov
cmp
dec
xchg
sub
jl
mov
testb
cld
push
out
sbb
mov
sbb
ljmp
scas
imul
push
lcall
loope
cli
imul
cmp
fs
and
add
stos
jno
inc
cmp
icebp
jo
add
fcmovbe
jb
push
mov
rorb
aaa
jecxz
xchg
and
ds
mov
rol
push
jae
int
lock
in
jns
xor
jo
lahf
pop
out
or
and
dec
leave
mov
xchg
mov
add
imul
mov
dec
out
push
and
xor
push
or
push
dec
or
jbe
jae
adc
mov
fwait
sub
sahf
xor
add
xor
jge
inc
mov
pushf
jecxz
rorl
sub
dec
or
sbb
pusha
xchg
fldt
dec
xor
faddl
mov
hlt
je
dec
cmp
pop
pop
xchg
aas
xor
lcall
das
in
add
mov
lret
mov
add
aaa
nop
int3
icebp
pop
pushf
test
push
mov
adc
and
arpl
test
sub
xlat
les
and
stos
jle
ljmp
sbb
cmp
subl
out
pop
ror
cwtl
sbb
cmp
lahf
movsl
int3
ss
popf
adc
ljmp
fs
daa
push
inc
nop
movsb
jle
mov
fists
xor
push
test
adc
out
sarb
imul
fwait
out
iret
lret
jp
jle
in
pop
inc
push
jl
sub
imul
jo
out
xlat
repz
loopne
mov
lods
push
dec
mov
insb
adc
call
sbb
mov
into
cs
cmpsb
outsl
push
jnp
dec
cmp
pop
inc
add
inc
fsubr
sbb
subl
jp
in
mov
outsb
enter
mov
mov
cmc
mov
out
ret
out
push
stos
cmp
sbb
pop
loope
jl
adc
mov
pop
and
rorl
dec
mov
dec
lcall
cmpsl
out
clc
scas
fdivrs
std
ss
popa
mov
cmpsb
cmc
sbb
imul
pop
pushf
cmc
js
pop
sub
dec
inc
stos
mov
cmpsb
mov
jne
out
or
in
pop
xor
loop
mov
shl
jecxz
iret
in
repz
push
xor
out
scas
adc
sbb
leave
mov
cltd
lods
test
pop
dec
jo
jbe
movsl
into
shlb
imul
mov
loope
sbb
xchg
das
or
xchg
mov
insl
mul
insl
pushf
mov
mov
aas
int
fs
aas
inc
cld
out
or
rcll
jne
xor
or
mov
enter
push
mov
enter
push
xchg
cmpsl
data16
stos
jle
mov
jl
push
arpl
fcoms
push
and
mov
std
inc
sbb
add
test
imul
jecxz
mov
cmp
imul
and
cmp
jl
test
pop
stos
lret
pop
mov
mov
mov
cmc
dec
jne
loope
push
jmp
pop
stos
outsb
cmpsl
js
xchg
mov
inc
jo
fwait
xor
in
adc
push
sbb
push
push
pop
jbe
lret
addr16
cmp
jb
bnd
mov
and
mov
sbb
and
add
test
pop
mov
xchg
xor
imul
or
inc
sbbl
sbb
js
inc
inc
mov
movsb
cmc
fstl
dec
adcb
fcomps
bound
mov
pusha
into
add
aad
sti
stos
push
dec
adc
cltd
cmp
outsb
ja
outsb
les
inc
dec
xchg
xchg
mov
aad
dec
jp
push
pop
cmpsb
lret
insl
dec
decb
cltd
daa
dec
std
inc
jns
cli
mov
lcall
mov
scas
lcall
cs
or
xchg
iret
xor
in
aas
sti
push
scas
dec
xchg
mov
movsb
fnstcw
cmp
mov
out
sbb
stos
mulb
sub
int
mov
cltd
cs
inc
mov
add
lods
xchg
sub
pop
inc
fcomps
mov
cmp
pushf
xor
xchg
pop
pop
jge
xor
adc
loop
pop
loop
sub
loop
pusha
dec
mov
mov
icebp
iret
and
dec
test
jecxz
loop
add
aaa
jg
js
push
fsubp
decl
ljmp
push
loop
shl
mov
adc
in
arpl
inc
xor
dec
push
inc
mov
testb
pop
cmp
sbb
sub
adc
loopne
and
hlt
cmp
sbb
push
sti
mov
mov
and
mov
icebp
mov
add
xchg
dec
xor
pop
arpl
add
ss
xor
ljmp
push
add
jns
scas
leave
push
or
mov
std
xor
adc
jge
aaa
jo
sahf
fcomi
lds
stos
sti
stc
jno
jl
inc
jmp
mov
dec
inc
andl
out
enter
xchg
and
lock
sbbl
mov
shlb
aaa
sub
jecxz
cmpsl
ss
mov
jnp
dec
push
adc
xor
push
insb
sti
adc
cmp
fs
repz
xor
sbb
sbbl
inc
mov
jne
mov
and
aas
mov
fs
mov
in
or
lods
mov
je
mov
loop
xchg
out
adc
loopne
lea
stos
cmp
mov
mov
mov
pushf
cmp
fimuls
pusha
jecxz
xchg
sub
psubb
cld
sub
cltd
fst
lahf
sbb
and
fldt
add
mov
fwait
inc
sbb
jp
push
or
test
daa
and
nop
adc
outsb
and
or
lret
fnsave
dec
dec
push
and
mov
out
adc
push
push
pusha
mov
test
add
push
pop
fwait
push
add
adc
jb
sub
mov
scas
addb
not
addb
rclb
pcmpgtd
jl
fstps
mov
mov
insl
outsb
push
xchg
test
insl
cli
stos
je
cli
mov
mov
xlat
aaa
jo
outsb
pop
xchg
nop
aaa
or
mov
push
cmpsb
lock
test
sub
imul
imul
jnp
or
cmp
cli
aad
jne
dec
inc
rcrl
inc
incb
inc
and
pop
stos
and
jle
ret
mov
cmpsb
addr16
stos
stos
je
xchg
rep
cmc
sub
enter
mov
xchg
shl
cmpsl
xchg
xchg
inc
sub
lods
addb
daa
sbb
out
cli
test
dec
inc
aam
imul
cli
pushl
cmp
popa
leave
ja
push
xor
pusha
xchg
xor
fidivl
iret
repz
int
out
pop
mov
mov
aam
mov
dec
pop
int
les
int
enter
mov
stos
xchg
jo
test
sub
imul
mov
sahf
es
sti
xor
popf
sub
sbb
insl
lret
sub
icebp
test
std
or
clc
outsl
fdivp
scas
ffree
mov
insb
rcr
data16
aad
add
adc
mov
subb
push
push
rcrb
nop
push
sbb
orl
scas
mov
outsb
sbb
int
jmp
mov
in
cltd
sub
push
popf
dec
movsl
adc
xchg
mov
pop
repnz
and
ss
pop
jecxz
adc
rcrb
cmp
push
std
into
sar
int3
jae
mov
xor
push
mov
xchg
fwait
sub
dec
pop
inc
or
je
adc
sub
mov
jnp
push
xchg
dec
sbb
negb
pushf
mov
mov
xor
sub
shrl
xchg
jl
mov
call
pop
and
std
inc
ficompl
fwait
das
shrl
ljmp
pop
imul
adc
mov
sti
add
loope
mov
jecxz
mov
jnp
jne
aaa
filds
push
out
mov
or
inc
push
testl
shll
shll
loope
or
cld
mov
adc
divl
inc
pop
sub
lea
inc
xchg
in
insb
icebp
adc
fildll
dec
jo
jge
in
add
lahf
inc
rcll
and
inc
mov
inc
or
adc
fisttpl
dec
mov
test
dec
out
mov
adc
xchg
pop
insl
pop
cmpsb
and
jb
jecxz
es
push
push
faddl
out
test
xlat
cld
sub
adc
int
mov
fwait
jnp
sbb
mov
and
fidivs
adc
repnz
xchg
je
test
pop
out
push
xor
stos
cmc
jo
jle
out
sbb
nop
cmpsl
ja
mov
xchg
pop
fwait
pop
and
int
inc
inc
push
in
mov
test
dec
int
cmp
mov
mov
ljmp
sbb
mov
rol
jno
pop
cmp
imul
mov
mov
or
xor
fwait
cmp
xchg
mov
and
adc
push
mov
test
jle
adc
sub
in
sbb
mov
inc
cmp
add
cmc
adc
and
dec
dec
js
lock
clc
imul
fldenv
gs
sbb
into
jg
std
mov
pushf
mov
xchg
sub
xchg
sbb
shr
insb
mov
insl
jbe
in
xchg
jle
mov
pop
sbb
mov
or
cs
stos
xor
cld
inc
and
shlb
aad
shl
sub
aaa
push
cs
nop
ret
dec
in
or
push
and
and
in
jl
xchg
fcmove
or
popa
mov
mov
pusha
insl
fwait
push
push
imul
xor
xor
aaa
in
xlat
ds
aas
out
add
mov
data16
cmc
and
or
xchg
xchg
xchg
inc
xor
cmp
sahf
mov
cmpsb
mov
testb
or
sarb
movsb
cs
lods
movsl
sub
and
mov
cmove
les
dec
popf
pushf
insl
mov
sti
aaa
test
cmpsl
aas
push
mov
into
hlt
lods
add
hlt
sbb
cld
aad
add
jno
insb
jecxz
imul
push
out
lret
les
adc
test
call
or
mov
aam
ficomps
pop
stos
push
mov
jl
loop
xchg
inc
fs
and
dec
lcall
jecxz
jnp
subb
ror
jp
sub
mov
add
ljmp
jb
test
xor
and
or
std
test
sbb
pop
mov
mov
jne
mov
mov
icebp
jbe
and
adc
push
xchg
dec
xor
enter
xor
or
inc
lcall
and
rcrb
adc
cltd
mov
cmp
popa
push
add
mov
mov
add
xor
mov
jb
fimuls
jg
pop
lahf
push
test
xlat
dec
lret
scas
jnp
dec
hlt
xchg
add
lret
ret
divb
leave
out
clc
insb
or
mov
aad
mov
push
enter
shll
jno
out
fs
xor
jp
sarl
popf
imul
cmp
imul
ja
push
fwait
adc
push
cwtl
push
adc
add
cs
mov
xor
xchg
std
popa
mov
in
or
mov
dec
das
xchg
cmp
fidivl
and
popa
xorb
jmp
je
mov
add
jbe
les
cmpsl
test
xchg
pusha
mov
pusha
jge
xchg
adc
add
jg
lods
xchg
insb
imul
repz
into
jmp
cmp
imul
leave
mov
aam
xor
test
mov
enter
sub
mov
pop
sbb
dec
mov
in
add
mov
cmp
inc
int
push
and
dec
ja
adc
mov
or
xor
test
or
pop
cli
enter
aam
adc
ss
outsl
sbb
or
pop
ds
xchg
jmp
xchg
fadds
adc
sub
loop
dec
aad
push
sub
repnz
ds
pop
xlat
je
add
mov
out
jnp
mov
cmpsl
or
xchg
inc
rolb
test
loopne
out
fisttpl
pop
jae
mov
out
addr16
insl
sbb
test
mov
call
clc
xor
mov
sbb
in
inc
jo
fdivrs
aaa
fisttps
insl
mov
add
lea
jp
push
in
sub
je
paddsw
out
adc
xchg
or
jo
lahf
inc
shlb
push
xchg
js,pn
sub
popf
aam
popf
leave
jno
fst
jmp
sub
inc
push
jb
xor
jmp
je
mov
and
push
mov
fists
fwait
mov
xor
mov
mov
mov
popa
cld
bound
inc
jno
popa
xchg
lret
mov
outsb
nop
xor
lahf
xchg
inc
dec
gs
enter
jmp
or
xchg
rcrl
aad
xor
pop
nop
in
push
sbb
mov
and
mov
jmp
and
outsl
sub
inc
xchg
and
mov
aas
dec
jns
test
mov
outsl
or
loopne
push
adc
inc
sbb
sbb
sbb
sbb
daa
xor
xor
dec
dec
pushf
ret
fistps
mov
cmpsb
mov
aas
bound
pushf
cmc
ljmp
xchg
or
repz
mov
push
mov
inc
lcall
mov
cmp
or
loopne
enter
test
pop
xchg
push
jle
dec
mul
nop
adc
cli
pop
xor
adc
in
aad
xchg
cmpsb
push
fiaddl
in
jmp
pop
dec
pop
sub
cmp
pusha
add
adc
std
cld
and
or
lcall
aad
nop
fsubrs
xchg
es
fdivrp
cmp
xlat
movsb
jle
dec
push
fcompl
jle
adc
sub
jb
sbb
push
not
insl
push
xlat
xor
xor
popa
inc
lock
xor
insb
mov
pop
or
mov
in
ja
push
fistl
movsb
insb
cmpsl
jmp
andl
cmp
fldcw
jno
adc
std
jae
sbb
jno
pop
mov
jbe,pt
and
adc
push
jb
orl
xchg
mov
push
mov
test
inc
fldt
xchg
in
fldt
xorb
mov
paddusw
fnstcw
dec
mov
int
shll
sub
dec
sub
mov
mov
pop
jle
ffreep
clc
or
pusha
loope
mov
xchg
pop
jnp
mov
dec
in
jae
movsl
mov
or
mov
adc
cmp
xchg
or
xchg
mov
mov
pop
mov
test
or
mov
loopne
pop
sahf
mov
addb
fsts
les
and
sub
rclb
mov
leave
loopne
out
mov
ret
cltd
sub
js
jae
outsl
sub
cld
out
mov
push
pop
and
push
loope
xlat
dec
dec
lock
shll
pop
repz
imulb
add
jmp
and
jp
cmpsb
sbb
adc
mov
sub
jp
jmp
lret
rclb
in
or
test
in
cmp
dec
fdivr
lret
into
pop
fsubp
and
popa
xor
mov
scas
pop
fmull
push
sub
and
xchg
sbb
pop
into
mov
lds
dec
cli
mov
fisttpll
mov
mov
sbb
xchg
repz
jmp
mov
lds
pop
cmc
inc
scas
dec
imul
mov
ja
push
icebp
aad
dec
or
cmp
sbb
hlt
push
mov
repz
inc
add
adc
arpl
pusha
jl
ret
movsb
les
mov
and
sub
lahf
inc
notb
rcrl
arpl
int3
inc
mov
jbe
mov
mov
sub
popa
int3
cmp
xlat
rcrb
push
or
pop
rclb
pusha
ror
mov
inc
enter
add
xor
arpl
and
test
ret
xor
pop
dec
negl
cli
and
add
xlat
xchg
sti
or
push
push
arpl
xchg
fsubl
dec
sti
pop
das
fcomps
sbb
lcall
clc
pop
int3
cs
jg
dec
pop
sti
jg
leave
outsb
test
xor
xor
jg
pop
aad
imul
jle
inc
shll
cltd
inc
imul
clc
and
sahf
sahf
repnz
jo
pop
movsl
sub
push
mov
sub
dec
cmc
mov
lods
cli
dec
ror
push
and
push
pushf
dec
mov
inc
lahf
push
mov
dec
sub
dec
ljmp
mov
jecxz
test
shrb
ja
out
popf
popf
xchg
in
and
pop
popf
cmp
mov
push
sub
fists
inc
clc
das
mov
imul
mov
out
clc
lahf
dec
dec
mov
arpl
scas
add
addr16
xchg
lret
addb
push
and
jp
pop
mov
or
mov
in
lods
add
outsb
stos
lds
in
lds
int3
mov
mov
repnz
ds
into
cmp
fwait
idivl
iret
lea
jns
mov
or
clc
jp
xchg
jno
pop
out
mov
movb
jno
std
cmp
stos
hlt
loopne
movsl
add
jmp
jg
icebp
sub
ja
lcall
jl
push
rolb
and
rep
dec
movsb
xor
pop
js
out
jl
lock
out
addr16
mov
cmp
out
adc
mov
outsl
lahf
pop
mov
int3
nop
jbe
and
jbe
xor
shlb
cmp
hlt
dec
mov
stos
sub
jb
sar
bound
cld
xchg
pop
jno
xchg
or
pop
or
je
cmp
aad
sbb
jmp
cmp
stos
add
jecxz
popa
test
ret
scas
stos
int
stc
mov
insb
and
andb
call
xchg
jl
push
or
das
das
dec
sbb
fstl
js
icebp
xlat
dec
cld
xor
pusha
adc
mov
inc
stos
jns
cmp
mov
ljmp
out
bound
ja
push
into
cmp
mov
push
fwait
shll
fstl
push
in
sbb
test
sub
rorl
jecxz
mov
sbb
or
cwtl
movsb
ret
and
mov
dec
in
and
xchg
ffree
aam
arpl
inc
add
not
xchg
sub
and
mov
mov
pop
in
push
jae
sbb
push
sbb
leave
mov
and
push
mov
les
jl
mov
or
push
jno
repz
repnz
aad
jae
jno
jo
or
add
add
ss
scas
or
test
lret
stos
xor
ss
js
enter
addr16
dec
jecxz
jmp
fnstsw
lret
mov
lea
test
cmp
cmpl
mov
test
sub
std
xchg
gs
xor
les
rcr
or
mov
out
sti
push
dec
mov
test
popf
mov
mov
std
sub
jb
nop
or
test
cmp
cmp
pop
int3
in
cmp
stc
pop
fs
xlat
inc
sub
jecxz
xor
mov
pop
lcall
mov
pop
mov
testl
cmpsl
push
or
pop
adc
or
pop
push
xchg
push
inc
mov
rcrb
stc
cs
addr16
ret
jne
xchg
adc
and
mov
or
or
sub
mov
das
push
enter
and
xchg
cmp
dec
fwait
jp
shrl
mov
test
dec
mov
daa
mulb
add
dec
fldt
sub
ret
fwait
add
jge
push
mov
aas
into
mov
jl
je
inc
sub
loope
vmovhpd
mov
clc
push
xchg
inc
es
sub
sbb
shlw
xor
inc
dec
push
adc
loope
stc
out
mov
sbb
xor
add
das
jnp
sbb
or
sahf
and
adc
popa
xchg
out
std
and
lret
call
inc
jl
pop
jmp
mov
pop
out
mov
jecxz
cmp
filds
cmc
pop
adc
scas
mov
ss
aad
mov
dec
out
or
jl
cwtl
movsb
fiadds
sbb
mov
xchg
add
iret
std
cmp
sub
inc
pusha
shlb
lods
mov
xlat
inc
pop
lea
bound
je
fisubs
mov
rolb
adc
cmp
mov
xchg
lea
push
lcall
ljmp
ret
popa
xchg
sub
stos
imul
xchg
iret
fsubs
rolb
movsb
mov
adc
out
mov
pop
sub
arpl
sbb
cs
das
negb
xor
sbb
leave
in
orb
cmpb
stos
dec
or
daa
xchg
je
aam
pop
pop
int3
ret
xor
cwtl
xor
dec
and
sbb
xor
and
push
mov
mov
movsb
test
cs
pop
mull
fptan
or
arpl
leave
stc
flds
lret
adc
sbb
fcmovnu
shr
xor
pop
mov
mov
sbb
or
imul
cmp
or
pop
lcall
cmp
in
push
add
incb
mov
mov
mov
mov
movsb
cltd
lahf
inc
stos
popa
scas
push
xchg
adc
pop
iret
fwait
gs
sub
adc
cmp
popa
repnz
int3
repz
or
xchg
ja,pt
cmp
in
decb
xor
dec
out
xor
dec
and
jle
scas
shl
repnz
cli
pop
add
mov
add
xchg
jle
and
shlb
or
or
xchg
ret
mov
gs
sub
mov
ja
or
mov
mov
xchg
jb
pop
xchg
pop
inc
mov
test
fidivs
inc
mov
lret
fsub
ss
dec
mov
dec
repnz
add
sub
test
rcll
dec
cmp
xchg
push
pop
enter
rclb
aad
ljmp
testl
mov
push
inc
loopne
imul
inc
mov
push
mov
leave
inc
ret
and
divl
sub
outsl
pop
jbe
xchg
and
mov
ja
and
movsl
lea
ror
rcl
movsl
inc
sub
sbbb
mov
insl
dec
push
stos
mov
test
inc
daa
push
mov
xchg
into
loop
mov
fistl
mov
and
lret
adcb
enter
clc
mov
fcoms
lods
inc
ret
scas
dec
lea
mov
leave
xor
stos
dec
clc
arpl
push
push
fldl
pop
negl
cwtl
lahf
push
out
ss
clc
ss
repz
jo
call
mov
mov
leave
das
scas
imul
into
jmp
push
pop
movsb
mov
lea
inc
inc
mov
shrl
and
push
ljmp
scas
adc
adc
lret
pop
movb
adc
inc
pop
jle
xor
popf
sahf
fdivrs
inc
sbb
test
es
ja
push
test
add
ds
jge
pushf
xchg
jecxz
mov
in
addr16
dec
adc
xor
dec
sub
or
mov
sbb
jbe
mov
shrb
add
sub
clc
fwait
mov
jge
or
sbb
xchg
jb
imul
mov
mov
mov
xorl
pop
ds
out
aam
mov
popa
ret
test
lahf
push
inc
sub
imul
dec
or
testb
pop
es
xor
sbb
push
dec
and
xlat
jmp
pop
xor
outsl
pop
mov
shl
or
in
jnp
lcall
repz
jo
mov
ret
push
sub
push
stc
pop
or
cmp
mov
jnp
jb
or
cmp
imul
add
ds
cwtl
cltd
mov
iret
in
mov
mov
mov
mov
test
and
call
adc
shrl
test
lcall
dec
pop
dec
xor
mov
sbb
sub
fcmovu
sub
jge
push
sbbb
push
loope
lret
pop
push
mov
bound
cmpsl
mov
loope
int
xchg
and
test
repz
adc
addl
mov
ljmp
cmpsb
jle
into
out
jmp
pop
arpl
adc
jo
adc
jecxz
ss
cs
sub
pop
xchg
int
mov
addr16
jle
push
mov
pop
ret
xchg
imul
jg
push
pop
jno
jmp
vpunpckhdq
adc
scas
inc
stc
ret
dec
mov
jl
outsb
dec
das
lods
mov
loopne
xchg
loopne
outsb
out
out
jae
data16
mov
lock
mov
out
popf
push
test
out
daa
movb
push
inc
jae
pop
jae,pt
addl
xchg
xchg
pop
mov
pop
cmc
dec
jbe
out
sub
jne
inc
push
and
bound
insl
dec
inc
cmp
cwtl
mov
pop
pop
sub
ljmp
popf
add
push
add
mov
gs
mov
lods
or
adc
shlb
add
mov
je
sub
lock
pop
sbb
cmpsb
push
into
movsl
adc
dec
out
jmp
jp
fisubs
lods
es
pop
rcrb
mov
test
cmpsb
cmp
and
mov
aad
jmp
rcrl
iret
dec
adc
add
and
inc
in
cmp
inc
or
and
pop
cli
nop
lea
stos
and
jge
dec
adc
out
add
lahf
pop
insb
ja
adc
test
jmp
mov
imul
andb
mov
aas
mov
int3
aam
adc
lds
out
xlat
stos
adc
mov
jne
jmp
dec
ss
jmp
sbb
lret
xchg
movsb
push
adc
jne
push
enter
sbb
mov
setns
mov
pop
movsb
js
inc
cld
or
stc
inc
ds
mov
iret
sahf
idiv
in
arpl
out
cs
cmp
pop
cmp
push
add
out
movsb
cli
fst
int3
sub
inc
push
daa
jp
mov
ja
scas
decl
sarl
nop
add
ret
imul
imul
adc
mov
xor
add
mov
xchg
adc
in
ja
sbb
xchg
or
inc
push
push
mov
jge
test
dec
leave
ret
xor
dec
mov
arpl
xchg
inc
dec
imul
out
mov
popf
cld
cmc
inc
cmpsb
ja
pop
xchg
imul
clc
pop
lahf
and
pop
or
inc
pop
adc
fmull
pushf
rcrb
or
sub
scas
lock
je
pop
pushf
sbb
bnd
push
push
popf
lahf
jb
outsl
fs
mov
and
pop
into
mov
lock
mov
ja
repnz
je
mov
enter
ss
leave
sub
rcrl
inc
inc
mov
jl
xchg
lods
or
nop
fpatan
insb
movl
icebp
push
cmp
movsb
gs
aad
stos
test
arpl
cmpsb
out
sub
jmp
inc
dec
adc
popl
and
fucom
cmp
aaa
mov
jnp
adc
psubusb
lcall
inc
pop
add
in
mov
std
mov
adc
add
push
sahf
shr
test
leave
gs
lock
movsb
cmp
aaa
add
push
icebp
or
clc
inc
loopne
clc
sub
das
pop
rcrl
scas
movsl
and
call
sbb
cld
sarl
xchg
inc
pop
out
ljmp
or
mov
mov
xlat
cmp
or
mov
cmpsl
les
xor
ja
out
inc
sbb
cmovns
sarl
xchg
xor
sub
mov
mov
sub
ja
sbb
daa
xchg
sub
mov
loopne
pop
sahf
je
add
and
and
aad
cld
pushf
mov
pop
scas
or
mov
xchg
addr16
xchg
ljmp
outsb
shll
sahf
out
divb
sbb
cmpsl
mov
js
std
in
sbb
push
stos
and
mov
push
inc
jo
xor
xchg
push
sbb
pop
adc
insl
push
push
test
xchg
jmp
mov
data16
insl
sbb
int
dec
add
mov
mov
xlat
push
dec
xorb
mov
imul
sub
ljmp
test
push
and
mov
lock
nop
adc
dec
sbb
in
movsl
ret
fdiv
xchg
push
inc
pushf
mov
push
inc
cld
mov
ljmp
pop
cmp
sbb
icebp
idivb
and
frstor
inc
test
notl
and
lods
pop
in
pop
iret
les
and
cmp
or
mov
mov
out
cmp
cmpb
xchg
js
cmp
mov
inc
add
xor
pop
dec
jmp
jo
fsubr
sub
aas
xor
leave
into
jmp
call
mov
lret
cmpsb
and
dec
and
mov
std
jb
jne
and
repz
jp
cmp
cmp
xchg
sbb
movsl
test
imul
mov
mov
in
jno
mov
cmove
icebp
gs
push
xor
fwait
ja
push
lahf
xor
ficompl
pop
in
inc
mov
fdivs
or
adc
push
rcrb
inc
sbb
inc
jecxz
mov
jno
iret
test
adcl
jle
insl
add
jno
leave
add
inc
data16
les
inc
pop
xor
iret
inc
cmp
xchg
push
cs
lahf
and
mov
out
jne
in
insl
xchg
or
lcall
cmp
hlt
out
sbb
and
or
jp
pusha
divl
jbe
shl
cmpsb
nop
mov
inc
add
jp
pusha
fisubl
cmp
pop
push
scas
and
out
aas
mov
adc
mov
ret
stos
clc
inc
enter
aaa
outsb
int
push
pop
adc
cmpsl
mov
xchg
mov
mov
xor
cmc
xchg
test
stos
rol
popa
dec
es
or
sbb
add
test
stos
adc
or
popa
add
sub
mov
cmp
mov
pop
cmp
fwait
cmp
dec
stos
jne
and
and
xor
bound
mov
cltd
xor
es
cwtl
push
clc
out
sbb
mov
lret
inc
adc
jge
js
xor
cmp
int3
dec
sub
cs
lods
insl
cli
pop
push
test
push
pop
ljmp
test
callw
hlt
cmpl
mov
iret
iret
adc
pop
pop
xchg
imul
fimull
push
push
sbbb
ret
cltd
jmp
movsb
jecxz
and
out
sub
int3
xchg
inc
and
inc
mov
bound
push
or
into
adc
pop
lret
adc
add
aas
xchg
in
lret
push
adc
mov
popa
mov
jmp
xchg
es
mov
and
repnz
adc
movl
mov
pop
jg
jg
addr16
add
and
mov
push
push
shrb
out
out
movsl
les
adc
jle
jg
or
loopne
arpl
sub
or
repz
jns
outsl
out
je
pop
enter
orb
loope
dec
orl
lret
ds
sbb
pop
jne
or
imul
int
inc
sub
add
sub
xor
mov
lcall
push
orl
and
gs
jp
bound
lock
rcrb
sub
mov
adc
push
ja
cmp
push
adcb
jp
mov
xchg
push
mov
out
and
aad
fidivs
lea
mov
movsl
sbb
testl
jno
ljmp
jecxz
test
pop
insb
jg
push
cmpb
imul
mov
cmc
arpl
imull
push
jp
mov
and
repnz
mov
jecxz
adc
inc
cmp
adc
xor
ds
mov
outsl
jae
fidivrl
jne
dec
inc
mov
and
cmp
jecxz
xchg
lods
lods
stos
test
stos
jae
pop
xor
sarl
mov
sub
jb
push
push
or
xchg
add
mov
aad
jne
inc
out
cmpsl
loope
pop
or
sub
shll
jo
ljmp
mov
mov
ljmp
leave
mov
xchg
outsb
repz
xchg
hlt
test
repnz
pop
or
xor
inc
pop
dec
orb
das
xchg
push
xor
dec
mov
mov
movsb
cmp
lock
cwtl
inc
pusha
std
rcrb
and
add
push
daa
test
lea
fisubrl
push
add
sbb
popf
lea
rcrl
lret
outsl
inc
jmp
stos
jae,pt
pop
push
je
push
iret
jnp
push
test
xor
imul
inc
scas
loopne
add
jae
out
xchg
je
mov
push
hlt
xchg
std
ss
std
dec
loop
cmp
jge
push
rorl
ret
push
cltd
ss
adc
lods
inc
loop
sub
iret
scas
jo
scas
inc
pop
les
push
jecxz
sbb
xor
mov
sub
cmc
xor
mov
xor
jle
push
lcall
jne
sbb
inc
lock
movntps
jae
dec
sahf
lds
mov
stos
es
jb
mov
pop
inc
fimull
sbb
sub
ja
cmpsl
leave
lock
iret
mov
xor
mov
add
xorb
cmpsb
jle
push
shrl
clc
lcall
mov
sarb
icebp
divb
push
inc
shrb
arpl
pop
sub
dec
stc
xorb
pop
or
jmp
call
push
cmp
data16
and
xchg
jg
out
xchg
push
pusha
push
inc
testw
lods
xchg
xor
mov
gs
cmp
insb
mov
or
pop
or
lret
fidivs
hlt
xchg
popf
or
das
js
and
shrl
orb
mov
push
mov
jne
fdivrl
lds
addr16
mov
test
rclb
sub
mov
dec
shll
mov
jns
repz
mov
faddl
push
jle
js
pop
sbb
push
mov
adc
int
push
dec
dec
pop
fcmove
stos
inc
test
sbb
loop
inc
cs
adc
cltd
and
nop
insb
clc
mov
pushf
into
push
cwtl
jmp
movsl
jp
inc
push
in
lock
imul
and
daa
ret
cli
cwtl
scas
xor
dec
adc
pop
push
out
daa
movsl
dec
pusha
dec
or
fisubl
inc
insb
stos
cwtl
fsubl
les
enter
and
and
jg
cs
push
xor
ret
push
mov
sub
push
dec
insl
mov
aam
push
pop
test
iret
stos
aaa
jge
fldcw
dec
ret
mov
in
call
sbb
fdivl
xlat
lahf
xlat
mov
cmpsl
mov
and
lret
cmp
sbb
mov
sti
jnp
mov
jl
sub
ret
int3
or
jl
and
inc
stc
rorb
sahf
jns
mov
push
inc
mov
cli
push
test
jno
jo
jb
jl
xchg
adc
inc
mov
mov
adc
jmp
js
sbb
push
lahf
cmp
out
sub
sub
inc
out
jne
add
mov
push
and
cmpsb
sub
pop
push
add
xchg
gs
cmpsl
repz
xchg
cmpsl
xchg
mov
in
or
mov
inc
cs
or
out
adc
mov
mov
push
and
ljmp
cwtl
cmovle
repz
stc
or
aam
mov
mov
mov
inc
les
cmp
sub
sub
jle
out
adcb
sub
mov
push
rorl
jae
adc
cmp
clc
aas
aaa
jb
mov
jmp
push
imul
mov
or
or
rcll
pop
mov
and
das
fstl
call
mov
bound
out
movsl
and
fmull
insl
xor
nop
cmpsl
dec
pop
int
js
scas
sub
lock
lea
inc
push
je
push
mov
or
mov
fcmove
and
ror
sbb
lods
inc
sub
dec
cltd
mov
mov
sub
pop
mov
les
int3
call
jp
cli
inc
test
jae
inc
jge
fisubs
jge
sahf
in
push
adc
or
pop
add
das
inc
lock
repnz
rorb
sbb
add
mov
leave
mov
mov
mov
incb
xchg
stos
cmp
fs
push
ss
cltd
xchg
mov
adc
movsb
lahf
lods
les
aad
mov
sub
or
mov
aad
inc
pop
daa
add
aad
push
imul
xchg
nop
aas
mov
mov
fisubrl
movl
ret
inc
movsb
adc
xor
pop
mov
mov
inc
xor
mov
loope
stc
stos
arpl
dec
test
or
fcmovne
les
or
rcrl
push
es
adc
dec
ds
jle
jle
clc
imul
mov
addl
and
lahf
sbb
push
das
mov
inc
cwtl
mov
dec
pop
sbb
mov
fcmovnb
lret
push
sub
shrb
add
mov
pop
inc
aas
push
inc
es
ret
les
repz
stc
das
ret
sub
scas
mov
or
mov
stos
xlat
fsubrs
xchg
push
mov
mov
pop
aam
jb
cli
mov
push
add
out
jns
jmp
xor
push
insb
fildl
enter
addr16
add
cwtl
cmp
in
lcall
shrl
inc
rclb
or
ret
shl
out
xlat
mov
xor
arpl
ds
mov
add
in
mov
insl
dec
sahf
mov
fwait
clc
xchg
mov
fwait
in
sub
movsl
pop
out
dec
outsb
mov
les
mov
mov
add
and
push
mov
inc
ret
in
sbb
adc
push
lds
xchg
add
andb
push
pop
imul
adc
cmp
mov
cmc
sub
mov
xor
push
andl
movsb
mov
xor
scas
out
sbb
or
cmpsb
xor
inc
stos
cli
mov
push
mov
jp
pop
scas
push
fs
outsb
jne
daa
addl
das
xor
scas
aas
imul
push
ljmp
sbb
fwait
push
std
subb
mov
xor
xchg
leave
test
int3
lds
lahf
cmp
or
lahf
sub
ficoml
adc
gs
pop
subl
add
rcrl
lds
sarl
js
movsl
outsb
or
stc
inc
mov
or
lods
adc
loop
loope
in
out
and
out
int3
out
add
js
sub
add
into
std
add
sahf
pop
add
nop
popa
sub
push
mov
cmpsl
fmull
and
int
xchg
cmpsb
mov
ss
mov
mov
hlt
fidivrs
out
aas
and
je
push
pop
cmp
scas
lcall
push
cmpsb
call
xchg
cwtl
add
ss
adc
stos
movsb
test
ja
jecxz
xor
leave
jge
and
test
xor
imul
fldenv
sub
int
push
or
ret
aas
or
stos
pop
sub
leave
jmp
mov
les
push
fadds
cmpsl
idivl
bound
jle
outsb
jl
cmc
mov
dec
mov
mov
fidivs
data16
jbe
test
ss
pop
inc
xchg
ret
pop
lock
jecxz
push
mov
add
cmp
ffreep
leave
sahf
jbe
cli
sbb
mov
repz
imul
cli
les
mov
repz
pop
push
pop
pop
ficompl
and
stos
das
add
pop
cmp
sub
xchg
data16
pop
fmul
lods
mov
data16
push
xchg
xor
test
push
fiaddl
call
pushf
push
popa
push
pop
ja
pop
daa
cmp
jmp
cwtl
mov
call
mov
ret
enter
push
out
and
out
jb
push
push
insl
and
mov
jb
jge
sbb
sub
lods
jne
cmpsb
ret
adc
jb
enter
enter
data16
lcall
aaa
es
arpl
dec
icebp
mov
adc
inc
lcall
pop
mov
cmp
nop
pop
and
pop
add
add
aaa
mov
fildl
in
xchg
xor
popa
push
rep
lret
push
xor
lods
mov
pop
cli
fs
jnp
mov
daa
mov
lret
xchg
or
jmp
sahf
movsb
cmp
jns
jmp
dec
pop
inc
inc
sub
sbb
jecxz
or
cmp
jecxz
aaa
push
pop
jmp
adc
push
int
icebp
cli
negl
fnsave
scas
push
inc
inc
mov
xlat
sysret
dec
decl
pop
je
outsb
adc
xchg
rol
mov
xor
ret
pop
and
aad
dec
ljmp
sbb
and
mov
das
lods
mov
jg
stc
fcmovb
jecxz
cmc
icebp
pusha
inc
test
lahf
dec
pop
ja
jnp
mov
scas
pop
cli
inc
fildl
je
add
fmull
imul
mov
sarl
lea
push
xchg
sti
pop
adc
pop
push
imul
stos
sbb
hlt
lds
xchg
adc
jns
inc
push
das
mov
cmp
sub
cmp
lods
sahf
xchg
test
cld
inc
pusha
inc
mov
xchg
pop
insb
ss
incb
sub
stc
jl
add
test
daa
in
lcall
ja
sub
inc
jle
push
gs
sbb
push
mov
fmuls
aad
push
fisubs
out
or
push
push
cmp
arpl
shlb
mov
mov
lahf
pop
in
and
jmp
cmp
push
push
clc
lds
cli
imul
inc
dec
pusha
aam
fimuls
jle
mov
lahf
xchg
repnz
cmp
push
xchg
imul
mov
cmp
mov
lcall
push
popa
push
daa
push
lret
sub
pop
out
inc
test
inc
pop
push
pop
xor
mov
shr
negl
sbb
lods
out
adc
test
idivb
outsl
mov
push
les
sub
mov
inc
cmp
add
and
shr
in
aam
pop
mov
sub
sbb
xchg
mov
sub
xchg
fmuls
rcl
je
cmp
and
lds
adc
cmpsb
push
sbb
dec
pop
andl
insl
push
pop
iret
lds
scas
jle
rep
cmpsl
sbb
jae
inc
icebp
inc
cmpsl
imul
out
xchg
and
cwtl
pop
xor
and
insb
add
mov
jmp
repnz
xor
push
frstor
push
shrl
fnstsw
sub
mov
cmp
mov
inc
addr16
add
loopne
into
xchg
mull
sbb
pop
arpl
push
mov
mov
mov
add
pop
or
or
sbb
dec
push
xchg
add
ss
in
jp
xchg
movsb
add
and
hlt
jno
cmp
mov
push
fadds
cli
or
out
daa
pop
cmp
ret
fwait
mov
cmp
push
jl
xor
pop
jno
in
fisttpll
xor
mov
or
icebp
dec
rol
jp
mov
test
fs
inc
cmovs
and
mov
sub
mov
jnp
out
insl
mov
adc
add
cmc
imul
cld
movsb
push
data16
in
dec
stos
out
dec
cmp
push
aad
xchg
dec
and
int
xor
push
es
sub
jp
cli
stos
jg
sub
sahf
lret
jle
cmpsl
flds
mov
sub
pop
xchg
int3
fcompl
mov
push
movsl
bound
xchg
jo,pt
int
mov
stos
cltd
xor
push
inc
and
repz
jmp
jno
fisubs
or
imul
cmpsb
pop
ficoms
pop
jbe
test
test
mov
and
mov
lret
sbb
outsb
mov
push
movsb
jmp
jnp
xorl
cmp
pop
adc
jne
mov
adc
adc
lock
or
and
daa
sbb
ficoml
jge
in
cmp
xchg
add
cs
xor
push
std
sbb
cmc
leave
lds
and
xchg
and
aas
push
xor
in
shlb
push
push
lods
sbb
and
mov
out
mov
and
xor
xchg
call
fnsave
ret
mov
inc
and
popa
push
in
orl
dec
and
or
addr16
bound
or
inc
cltd
pop
fndisi(8087
dec
jns
inc
lret
jno
xchg
adc
dec
dec
mov
into
les
icebp
lea
pop
push
loop,pn
adc
lcall
and
mov
int3
and
adc
push
mov
mov
movsb
rol
and
repnz
test
scas
mov
sahf
mov
jle
mov
loop
dec
push
lods
popa
or
outsl
test
xor
out
fucomp
insb
jb
pop
pop
aad
and
inc
mov
inc
inc
rolb
push
mov
rclb
insl
mov
sbb
xor
and
sbb
push
push
push
xchg
jg
and
test
mov
pop
lods
mov
mov
adc
and
lret
out
bound
daa
fnstsw
lret
scas
pop
jo
jp
test
cmpsl
fcmovb
fistl
dec
test
pop
or
je
outsl
out
rcrl
mov
sahf
push
aas
enter
cltd
fstpl
pop
mov
pop
mov
xlat
jl
adc
bound
enter
addb
out
mov
call
mov
lods
sarb
xor
jb
inc
movsl
pop
popf
ret
push
mov
arpl
push
inc
push
les
sti
sub
xchg
push
pop
jo
add
icebp
loopne
xor
inc
xchg
sbb
dec
jecxz
in
and
mov
int3
or
mov
and
sbb
dec
pop
ret
add
sub
notl
int3
addr16
sar
jge
repnz
pusha
adc
rol
mov
and
sub
and
cmpsl
mov
add
sub
pop
enter
jmp
mov
fistps
enter
xor
fdivr
add
sbb
mov
sbb
cmc
lret
cmp
jge
loope
aaa
repz
data16
out
xor
mov
push
pop
out
jno
lret
inc
lret
rorl
dec
jecxz
xor
lock
cld
push
hlt
cmpw
pop
popf
pop
clc
cli
jp
adc
dec
cmp
mov
xor
sub
pusha
dec
pop
imul
sti
mov
dec
out
enter
sbbb
add
jne
inc
push
cmc
push
lods
jecxz
dec
jnp
dec
popa
adc
cmpsb
xchg
mov
popf
movsb
shll
inc
xchg
push
scas
ja
pop
pop
cmp
adc
cmpb
pop
xlat
jecxz
adc
mov
cmpsl
cmc
ds
sub
pusha
push
adc
incl
inc
sub
nop
lahf
mov
loopne
pusha
sub
mov
xchg
mov
mov
and
mov
or
outsb
jno
lret
or
hlt
jnp
aaa
decb
pop
xchg
inc
pop
mov
mov
xor
adc
dec
scas
iret
out
cmp
pop
in
inc
out
xchg
jle
dec
mov
push
and
bound
push
sub
mov
push
pop
xchg
clc
mov
into
add
mov
ljmp
inc
dec
mov
and
js
add
push
pop
xchg
sti
mov
sarl
out
mov
das
mov
popf
inc
scas
and
lock
xchg
xchg
xor
aas
cmp
xchg
lret
and
jno
dec
pop
add
movsb
lahf
xchg
jp
mov
cmp
test
int
ds
mov
sbb
in
aaa
add
ljmp
roll
mov
roll
leave
adc
stos
ret
mov
mov
lcall
push
add
sub
aam
mov
xor
lret
xchg
jge
lret
aas
mov
mov
jne
rcrl
dec
cmp
into
ficomps
stos
frstor
or
pop
inc
nop
stos
rorl
fnstsw
ror
dec
mov
pop
aas
cmpsl
push
fisttpll
pop
cmp
or
lods
adc
add
addr16
push
neg
lock
jmp
or
jecxz
imul
flds
adc
les
push
push
or
in
iret
jle
mov
inc
add
ds
outsb
mov
jl
cmp
xor
jl
inc
xchg
xchg
sub
test
pop
icebp
inc
xchg
test
pop
pusha
scas
jge
sbb
sbb
outsb
dec
jno
inc
call
dec
mov
mov
and
insl
in
mov
inc
pusha
cltd
cli
int
dec
mov
aam
inc
push
pusha
push
nop
fwait
sub
lcall
mov
pop
fldcw
gs
dec
cmpsb
pop
xchg
push
add
cwtl
adc
ss
je
mov
pop
into
fldcw
ss
sbb
add
mov
loope
pop
sbb
mov
mov
dec
jg
push
pop
addr16
mov
sbb
std
add
push
in
dec
sbbl
out
inc
xchg
dec
mov
lods
inc
out
fmull
addb
mov
sahf
stc
shrb
jp
pop
mov
jne
pusha
mov
mov
sbbb
in
insb
adc
dec
jp
insb
jle
xchg
or
ja
push
cmp
js
sub
push
call
andl
mov
sub
testb
cmp
push
test
and
sub
leave
or
push
push
int
sbb
fucomip
test
ss
int3
cmp
daa
ds
mov
out
rol
dec
xchg
adc
adc
jnp
loop
and
dec
push
mov
out
loopne
mov
jp
mov
js
popa
pop
mov
aad
js
xor
pop
push
hlt
pop
mov
icebp
sbb
push
sti
jl
xchg
in
mov
or
in
xchg
out
lahf
pop
jno
dec
add
jnp
call
lcall
mov
insl
ljmp
loope
xor
mov
loope
xchg
jb
or
je
lcall
push
in
pop
dec
aad
and
rcll
movsl
dec
xor
cmpsb
xlat
stos
cmpb
sbb
aas
pusha
out
and
stos
test
push
push
pushf
bound
fwait
cwtl
add
cli
mov
jno
lods
out
add
or
xchg
gs
fidivl
jg
dec
daa
or
add
int
xchg
lahf
mov
out
std
adc
pop
sub
and
pop
mov
mov
inc
addr16
mov
and
inc
inc
mov
test
adc
push
jmp
das
gs
or
fmuls
out
outsb
filds
pop
push
lahf
push
and
add
ret
or
dec
dec
jo
ret
pusha
in
jg
jle
dec
std
push
xchg
xchg
xchg
pop
xor
mov
testl
inc
or
lea
or
jg
in
cld
adc
inc
loope
xlat
aam
call
dec
les
xchg
inc
and
mov
dec
mov
cli
mov
pop
fs
in
mov
ret
sub
lcall
sub
xor
in
je
push
push
xor
jg
cmp
lahf
inc
bound
mov
jno
xchg
jge
sahf
cmp
adc
outsl
sahf
js
enter
fucom
jmp
jp
ljmp
xor
dec
mov
loop
mov
or
pop
aad
ja
orl
mov
xor
lea
fistps
mov
rcl
adc
xchg
push
leave
sub
fisttps
xor
loope
adc
mov
push
push
add
data16
add
jo
rcrl
cmpsl
jo
clc
fwait
sub
jle
push
pop
in
push
jle
and
adc
fmull
mov
sub
or
dec
ficoml
es
push
push
fwait
mov
daa
pop
arpl
jp
test
nop
inc
lahf
cmp
leave
aad
mov
add
ja
roll
inc
mov
cvtdq2ps
jo
xlat
push
mov
and
push
add
xor
add
sbb
add
imul
lahf
dec
push
push
cli
sbb
out
fmul
jae
lret
mov
ret
jns
xchg
and
stos
add
popa
cmpsl
mov
aas
nop
pop
dec
idivb
inc
rolb
test
jns
addb
mov
jno
int
movl
add
mov
jmp
xchg
int
inc
lods
adc
dec
pop
cmpsl
test
jns
adc
mov
pop
stc
loop
sbb
arpl
aad
mov
dec
pop
pusha
scas
sbb
add
iret
and
popl
pushf
pop
xlat
mov
jl
cltd
or
push
xchg
jno
arpl
mov
mov
mov
xorl
fisubrs
jne
mov
push
pushf
jb
or
add
or
sub
xchg
sbb
cmp
cmp
xor
les
pop
popa
add
jp
psubq
les
jae
sbbb
test
push
or
cmpsl
mov
stc
fimuls
jb
loop
mov
sub
pop
fs
cmp
enter
shrl
push
cld
filds
pop
ja
and
scas
jp
or
sti
mov
je
daa
mov
xor
loope
es
inc
jg
mov
mov
insl
std
insl
idiv
out
cld
mov
cmc
cmpsb
mov
push
fidivrl
addr16
lods
imul
adc
pop
fldl
sti
faddl
xchg
jle
jl
pop
lock
inc
fiadds
int
out
jns
mov
inc
mov
adc
mov
xchg
pop
aad
dec
call
sub
fdivp
jno
mov
sbb
and
movsb
jp
popa
jnp
rcrb
shrl
xchg
fimuls
test
pop
lcall
sbb
mov
adc
mov
mov
pop
mov
cs
inc
aaa
aas
pop
mov
ret
aam
lods
insl
xchg
lret
ud2
inc
loop
inc
sub
jnp
lret
mov
lcall
popa
push
popa
cmp
jp
outsb
imul
cmp
or
rcll
mov
dec
xchg
nop
mov
dec
mov
sti
pushf
mov
xchg
inc
int
js
ja
lahf
popf
adc
nop
sbb
shrb
in
jbe
ret
test
inc
popl
dec
adc
add
push
stos
cmp
cmpsl
fcoml
push
lods
xchg
mov
and
push
in
xor
loopne
adc
shlb
loopne
push
xchg
mov
or
and
push
pop
push
pop
andb
pop
lahf
inc
mov
and
rorl
cmc
leave
dec
ds
repz
ja
inc
scas
jae
inc
xchg
std
test
pushl
push
fwait
icebp
mov
pop
mov
mov
mov
mov
in
mov
pop
jg
jle
int
scas
dec
outsl
push
mov
mov
loope
mov
inc
jp
mov
push
hlt
out
popf
inc
shl
repz
dec
jmp
sbb
call
adc
out
shrl
xor
jno
jb
mov
xor
movsb
shrl
and
inc
int3
daa
or
cld
dec
adc
gs
inc
faddl
cmp
adc
std
xchg
jp
lahf
bound
loop
mull
fcomps
divb
jmp
mov
icebp
pop
lods
lea
push
sub
or
out
push
xchg
iret
push
adc
jmp
call
xor
and
or
pushf
test
ds
mov
jne
mov
pop
mov
lret
lret
and
cltd
je
movsl
inc
outsb
pop
das
jbe
cltd
push
daa
sbb
out
cmc
out
arpl
mov
dec
out
out
test
xor
cld
ss
or
sahf
inc
arpl
mov
push
fbstp
lock
mov
mov
je
mov
ret
mov
dec
sarl
mov
dec
lret
and
push
mov
out
xchg
add
movsl
mov
rcrl
mov
add
call
jle
movsl
mov
clc
push
mov
lcall
inc
test
jb
ds
sbbl
mov
xchg
in
pop
dec
out
lds
out
scas
or
push
mov
jnp
sbbb
mov
xchg
mov
xor
cmpb
mov
xor
xlat
lahf
out
or
lcall
mov
stos
dec
enter
scas
mov
stc
js
aad
lcall
xchg
test
sarb
pop
mov
sub
or
xchg
mov
mov
popa
lods
pop
or
cmp
add
or
jb
mov
shrb
pop
movsl
sub
cld
das
jne
and
mov
rorb
push
push
mov
cld
inc
xchg
and
cmp
adc
ljmp
mov
je
jl
jnp
test
in
shlb
imul
das
push
lret
jecxz
adc
scas
out
pop
subl
mov
gs
sub
mov
push
sub
pop
xor
out
xchg
aad
mov
outsl
inc
inc
sahf
out
pop
mov
mov
push
jle
ret
push
mov
mov
jmp
loope
inc
add
in
xor
add
in
int
push
sbb
dec
mov
ljmp
pop
loope
adcl
mov
test
jne
push
scas
or
repz
test
mov
pop
mov
outsb
lret
jae
mov
ljmp
xor
add
mov
les
lret
xor
mov
push
sub
sbb
fs
fstp
movsl
pusha
pusha
jo
dec
je
adc
xchg
xor
imul
sbb
adc
movsl
fistl
lahf
in
push
dec
mov
hlt
test
lret
push
out
sbb
add
ret
sti
es
loop
adcl
xchg
mov
jno
or
incl
inc
mov
jle
aad
scas
sbb
sbb
int3
push
mov
push
sub
jne
or
add
es
push
scas
adc
adc
and
mov
cmpsb
xor
cld
pop
into
out
dec
lods
adc
mov
jae
pop
xchg
and
cmp
push
add
xchg
pop
gs
pop
lds
mov
push
hlt
enter
push
dec
test
xor
popf
inc
add
scas
pushf
and
sarl
mov
cmp
jp
mov
arpl
or
arpl
cmpl
mov
aaa
jno
cltd
jp
das
popf
adc
es
mov
rcrb
mov
push
xchg
aaa
dec
xor
ljmp
test
pop
mov
dec
fs
mov
cmc
scas
mov
jle
mov
out
int3
sbb
adc
mov
push
sbb
xchg
lock
sahf
adc
jge
fwait
xor
cmp
bound
insl
rcrb
or
subl
pop
xor
out
sahf
xor
sbb
out
jmp
fstpl
and
dec
cmpsb
fmull
sahf
enter
xor
and
mov
pusha
mov
cli
cmp
insl
dec
mov
add
xlat
mov
mov
clc
xlat
jo
lods
mov
dec
popf
push
sbb
fsubrl
mov
popa
sbb
cmpb
insl
cltd
mov
ss
inc
or
les
test
movsl
decb
xlat
pushf
sub
sub
sub
rcrl
cmp
or
mov
xchg
xchg
call
mov
cld
push
in
sbb
sbb
sub
mov
ds
adc
xorb
add
or
add
mov
lods
cmc
xchg
ds
jbe
sub
inc
sbbl
je
cmpsl
cmovs
mov
xchg
sub
mov
stc
adc
or
fs
fimull
int3
or
cmp
shrb
pop
push
mov
dec
dec
mov
notb
jne
shlb
es
cmc
adc
sub
mov
pop
aam
loope
or
adc
lahf
mov
mov
sar
enter
jno
ffree
adc
ret
frstor
fwait
pop
sub
pop
add
mov
roll
jbe
cmp
enter
cmp
mov
enter
xor
andb
andl
cmc
sub
es
fucomip
cmpsl
xor
inc
cmp
ja
sarl
or
dec
testb
iret
xchg
divps
pop
mov
and
push
or
fsubl
lcall
and
xor
iret
or
dec
mov
xor
dec
in
cmp
mov
into
sub
push
xchg
lods
aam
mov
sbb
bound
icebp
ret
jl
mov
into
stos
pop
popa
in
pushf
lret
subl
repz
or
dec
mov
adc
mov
mov
jo
inc
stos
push
jmp
pop
or
and
push
fwait
xchg
cmpsb
vpcmpd
inc
xchg
test
mov
dec
mov
out
ret
xor
ljmp
aam
js
push
popf
roll
xor
pop
jne
ficoml
fdivs
push
stos
in
add
ljmp
xchg
fcompl
pop
mov
in
jns
loop
and
mov
push
pop
imulb
push
rcll
xor
lahf
mov
minps
push
movsl
enter
test
rolb
xor
push
sub
cmp
out
popf
mov
xor
adc
mov
sub
mov
fwait
je
or
jge
filds
test
dec
push
xor
xlat
mov
xor
xorl
popa
outsb
cs
sbb
adc
lods
lcall
cld
cs
inc
or
push
mov
or
out
out
inc
adc
outsl
mov
bound
xlat
jno
mov
sbb
js
sub
repnz
ljmp
pusha
mov
ds
cmp
cli
jmp
inc
rorb
cmp
dec
mov
imul
inc
mov
fdivp
jge
adc
lret
movsb
daa
xor
xorb
icebp
fimuls
pop
into
insb
cmp
xchg
sti
loop
js
in
addr16
cwtl
pop
adc
pop
push
fdivrs
dec
or
fwait
or
bound
cmc
daa
rorl
add
dec
dec
popf
bound
xchg
ja
fs
repz
mov
xchg
xchg
mov
or
loope
jb
and
jb
jo
xor
loopne
sbb
ds
sahf
jl
or
inc
push
mov
adc
lds
pop
or
jnp
mov
inc
aaa
jl
push
xor
repz
xchg
sub
lret
stc
pop
xor
jae
sbb
je
pop
inc
inc
xor
inc
inc
test
mov
sbb
inc
nop
mov
ja
cmpl
xor
mov
test
jo
push
jno
nop
fs
icebp
sub
outsl
dec
outsb
cmpb
add
fcoml
cmpsl
stos
adc
imulb
cltd
jge
pushf
xor
test
or
dec
test
cs
sbb
nop
nop
lret
or
inc
lock
js
movsl
fs
pop
push
es
ret
cmp
mov
pushf
or
or
icebp
inc
inc
shl
cmp
leave
out
mov
rol
add
rol
test
arpl
in
cmpsb
jmp
sbb
mov
out
lds
movsb
mov
xchg
je,pt
sbb
sub
pop
mov
call
cmp
rcll
jbe
ficomps
pop
incb
test
xchg
xchg
popf
data16
cltd
cs
mov
test
jns
pop
scas
stos
jg
lods
sub
mov
or
cmp
addr16
movl
sub
clc
mov
into
cltd
imul
push
push
fbstp
add
mov
daa
pop
call
or
sub
cmp
aad
and
inc
hlt
mov
mov
jmp
into
stos
sbb
dec
aaa
inc
movsb
imulb
dec
mov
cmc
les
jmp
js
jnp
push
and
inc
mov
add
dec
add
je
ds
jne
mov
scas
andl
jo
or
mov
lods
test
ja
or
inc
mov
sub
xor
sub
sub
clc
cmpb
lcall
or
push
cmp
cs
xchg
jp
cwtl
pop
jl
aas
ljmp
push
sub
std
lcall
mov
xorb
insb
cmp
ret
jmp
cmp
or
jne
dec
sub
mov
jecxz
fiadds
jbe
dec
cmp
repz
inc
dec
mov
jbe
mov
movb
mov
lahf
fldl2e
enter
cmp
lock
dec
and
xor
lds
cltd
ds
mov
push
cmc
add
sub
jg
loopne
cmp
sub
cli
cmp
push
sbbb
mov
inc
hlt
lds
pop
fists
mov
push
repnz
jns
out
push
inc
test
and
cmpsb
dec
xchg
fcmovne
aad
cltd
jne
sub
test
iret
stc
push
aaa
ss
pop
lock
loop
test
push
add
push
movsb
mull
mov
std
ss
xchg
into
outsl
fldcw
scas
mov
rcr
das
mov
clc
inc
mov
dec
jecxz
fs
out
pop
adc
out
addl
mov
xchg
jl
cmp
fisttpl
ret
adc
dec
into
lret
stc
loop
fildll
and
sahf
fnsave
pusha
sub
in
test
mov
mov
in
push
mov
mulb
bound
cmp
add
add
xor
or
out
sbb
dec
cs
push
insl
push
pop
imul
pop
dec
cmp
icebp
and
repnz
inc
ret
pop
pusha
xchg
mov
mov
xor
lock
dec
and
imulb
nop
mov
cld
inc
test
sbb
adc
sbb
mov
pop
stos
cltd
push
push
popf
ja
movsb
jo
imul
rolb
lcall
ss
fistps
fs
add
inc
lret
icebp
pop
iret
jl
sahf
leave
push
leave
negb
lea
pop
cld
stc
push
out
push
idiv
clc
test
dec
push
das
add
test
fucom
out
js
push
push
popa
sbb
adc
repz
rolb
jmp
enter
cmp
inc
mov
subb
test
cltd
push
xor
rclb
jb
fs
xchg
push
in
popa
pop
mov
ljmp
inc
jb
xchg
push
xchg
xchg
sub
xlat
mov
sub
and
pop
xchg
mov
cmp
sbb
into
sub
cmp
pop
dec
pusha
cmp
incl
loope
jae
es
movb
or
lahf
adc
xchg
jp
inc
fldt
stos
fs
lods
lahf
mov
or
mov
jnp
insl
adc
inc
out
xchg
ss
movsl
inc
icebp
mov
mov
sarl
jle
mov
push
mov
mov
mov
jnp
mov
xor
jno
dec
and
sarl
or
mov
inc
push
outsl
sub
and
lcall
movsb
cmpsb
mov
jbe
sbb
mov
cmp
jnp
leave
jb
lcall
jae
ficoml
dec
mov
push
xor
mov
dec
mov
sbb
push
jae
in
mov
out
icebp
lahf
lods
mov
in
adc
aam
cmpsb
pop
mov
jns
test
leave
out
shlb
jmp
inc
inc
adc
arpl
cmp
insb
outsl
aaa
ficomps
jg
add
push
cmpsb
mov
sbb
mov
nop
or
push
jb
xchg
jmp
fsubrp
mov
lea
mov
lret
mov
add
cs
and
mov
adcl
jp
pop
mov
outsl
dec
adc
push
mov
pop
mov
shr
inc
bound
cmp
mov
sub
es
pusha
push
in
add
cmp
mov
movb
sub
call
dec
add
enter
int3
stos
cli
js
sub
mov
xlat
pusha
les
sahf
daa
movsb
lods
jecxz
cmpsb
mov
lock
stos
hlt
pop
push
dec
jl
xchg
loop
pop
xchg
push
int
fstl
scas
movsb
and
sbb
mov
or
add
mov
sti
jbe
clc
cmpsl
lock
pop
add
pop
and
jecxz
outsb
dec
cmpsb
cmp
negb
mulb
test
adcb
icebp
xor
xor
jp
push
das
push
pop
mov
pop
paddusb
fwait
xor
out
xchg
add
aaa
pusha
jo
mov
enter
out
push
iret
sbb
inc
cmp
push
or
mov
cmp
fldl
flds
mov
push
pusha
sbb
pop
sti
sbb
sar
pop
in
mov
arpl
mov
pop
adc
into
sahf
or
xchg
or
mov
add
fnstenv
lock
mov
iret
sbb
std
push
dec
or
cmpsb
dec
xor
lcall
mov
in
icebp
dec
or
sbb
adc
leave
inc
sub
out
jbe
loope
out
loope
test
mov
ljmp
cmc
or
mov
rol
xor
iret
pop
stc
inc
or
mov
and
dec
adc
movsb
or
adc
mov
aas
lret
loope
cmp
bound
pop
mov
mov
in
add
and
lahf
test
call
ja
subl
mov
movsb
fsubrs
push
xchg
cwtl
jl
sbb
loop
add
pusha
add
inc
test
fs
inc
mov
mov
inc
out
loope
or
pop
iret
xorl
adc
push
mov
add
or
cld
shlb
cwtl
mov
or
xchg
dec
nop
add
lods
pop
or
insl
fld
ret
enter
arpl
shll
jge
bound
sbb
dec
fs
in
stos
and
cmp
mov
shrb
dec
setnp
repnz
sbb
push
inc
pop
sbb
and
lea
jns
fisttpl
pop
and
ret
add
sub
adc
jns
sub
je
jns
mov
dec
mov
cwtl
into
fldl
mov
inc
xor
sub
fnstsw
sub
clc
push
outsb
adc
mov
add
and
cmp
sub
cmp
inc
adc
int
add
ror
jb
fisubl
popa
add
iret
icebp
or
stos
xor
sub
sub
dec
push
rorb
ret
cmp
or
aas
push
jne
lret
xor
jno
lahf
sbb
addl
out
aad
dec
aad
test
mov
and
sbb
test
out
leave
scas
call
pop
mov
pop
rcl
rorb
lods
je
push
jb
hlt
mov
lcall
pop
adc
test
fistpl
aas
test
jbe
adc
cmp
fisubrl
cld
ret
ret
sbb
sar
cmc
orb
cmc
cmp
mov
jge
pop
cmp
mov
insl
in
push
jg
inc
cmp
test
ret
add
inc
xor
mov
lret
flds
loope
rcl
gs
mov
and
pop
mull
adcl
mov
test
sahf
insl
fwait
insl
mov
push
cwtl
int
fistpl
fistpl
fidivrl
cmpsl
xor
pusha
cltd
cld
cli
push
hlt
out
cmpsb
je
cmpsl
mov
stos
int3
in
jbe
push
sti
movsl
decl
mull
fmuls
push
mov
push
mov
inc
mov
sub
nop
xor
pop
or
scas
xlat
int3
push
add
sub
jecxz
dec
and
adcl
sbb
lds
cmp
or
jne
mov
dec
test
outsb
hlt
loopne
iret
add
fiadds
sbb
adc
das
and
insb
xchg
inc
arpl
ja
sub
popf
inc
filds
cmp
popa
inc
mov
shl
repz
push
mov
lahf
into
jno
sub
lea
loop
xchg
lcall
mov
std
xchg
outsl
sub
and
xorl
and
call
or
adc
std
inc
mov
notb
mov
cmp
leave
sub
xchg
xchg
into
mov
mov
sbb
pop
and
sub
jge
sub
sub
xchg
cs
mov
pop
cwtl
test
movsb
jo
and
jo
add
popf
xor
and
repnz
arpl
sub
pop
mov
jle
cwtl
imul
jae
push
and
outsl
sub
lcall
int
cltd
and
jle
int3
imul
pop
sub
ja
in
dec
push
mov
call
sub
sub
test
mov
cmpsl
jp
push
adc
and
mov
mov
inc
ret
xlat
sbb
inc
orb
adcb
aas
orb
pop
mov
movsb
popa
push
dec
negl
push
stc
sbb
pop
push
xor
lret
movsb
lret
sub
stos
mov
sbb
jg
loopne
xchg
jecxz
jmp
cmp
aad
mov
or
mov
scas
xchg
int3
xor
mov
imul
mov
lret
xor
ficoms
xchg
or
fidivrs
xchg
jge
jp
mov
clc
mov
cmp
push
push
lds
into
mov
jo
mov
mov
sub
dec
jp
outsl
jns
sarb
jl
imul
xor
mov
aaa
aam
stos
fistpl
cmpsl
stc
icebp
out
xchg
jmp
add
scas
in
or
cmpsb
out
addr16
push
icebp
jb
mov
sbb
js
nop
mov
ss
cwtl
outsl
enter
leave
xor
lret
or
rcrl
sbb
shlb
test
mov
adc
ds
lock
jne
outsl
pcmpeqw
stc
inc
enter
stos
scas
mov
mov
pop
leave
outsb
add
movsb
sub
lock
fs
mov
stos
hlt
mov
or
add
mov
sbb
pop
pushf
add
mov
rcrb
add
push
ret
mov
nop
jg
sahf
movsb
lea
lock
cmpsl
ret
lret
imul
ljmp
leave
jo
outsb
iret
push
xchg
sub
cmp
dec
hlt
loope
or
pop
dec
mov
mov
mov
sub
jb
push
mov
stos
inc
jge
mov
insb
jmp
cmp
cmp
cwtl
mov
enter
movsb
int3
in
insl
adc
xchg
clc
push
inc
fiadds
and
test
outsb
jo
movsl
std
je
pop
jns
leave
jae
leave
jg
jno
cmp
inc
sub
sub
cli
addr16
dec
int3
test
xchg
adc
pop
sub
mov
pushf
pop
mov
inc
cld
pop
loop
mov
fstpt
in
stc
bound
sub
jl
loop
mov
mov
rorb
xor
lret
adc
dec
clc
pop
mov
dec
mov
sbb
lret
ja
in
jo
int
mov
nop
mov
fisttps
mov
lret
jge
xchg
insl
jo
mov
aas
imul
adc
lea
adc
daa
stos
xor
dec
cmp
outsb
pop
shlb
imul
sti
popa
xchg
cmpsl
mov
imulb
dec
ja
jle
out
xchg
fmulp
and
jmp
push
pop
mov
in
fwait
outsb
xor
push
or
out
mov
lods
pusha
pop
sti
daa
in
stos
push
push
xchg
dec
dec
inc
push
push
mov
fcmovbe
dec
adc
pop
cmp
nop
mov
cmp
icebp
mov
jmp
leave
addr16
jne
sbb
jecxz
and
or
mov
push
inc
push
or
pop
scas
inc
xchg
mov
add
sbb
cmp
or
js
outsl
jg
insb
jl
lret
pop
push
dec
fwait
jge
adc
xor
test
adc
inc
dec
fistpl
push
sbb
or
xor
or
das
aam
pop
aas
dec
pop
insb
loopne,pn
and
inc
cmp
dec
or
pcmpeqw
push
pop
rol
repz
pop
sub
mov
sbb
pop
jecxz
gs
cmp
filds
stc
jge
jnp
out
pop
inc
mov
mov
out
neg
push
xchg
outsb
jnp
xorb
bound
rcll
push
scas
inc
mov
push
in
or
mov
jmp
add
dec
enter
dec
adc
imul
sbb
dec
outsb
mov
mov
mov
push
inc
xchg
dec
stos
sti
nop
inc
cmp
and
sub
dec
addr16
add
pop
fdivp
cmpsl
sbb
add
add
imul
das
push
push
mov
and
cmc
arpl
out
pop
dec
mov
repnz
stos
loop
xor
dec
pop
mov
test
inc
mov
jmp
mov
imul
nop
or
sub
jnp
mov
xchg
lds
mov
les
andb
adc
mov
leave
sbb
sub
push
cltd
lds
adc
inc
adc
push
mov
bound
inc
sbb
nop
sub
inc
xchg
cld
enter
mov
push
xor
mov
int3
xor
sbb
cmp
pop
mov
jmp
add
lds
mov
sbb
sahf
jns
int3
cmpl
pushf
out
sahf
out
imul
jbe
aad
mov
shlb
mov
dec
test
jo
and
mov
jecxz
sbb
imul
inc
pop
shll
shlb
sub
fwait
jg
movsb
mov
subl
push
mov
dec
xchg
lcall
xchg
lret
sbb
dec
lods
out
cmp
push
inc
xor
mov
pop
aad
fisubrs
lret
stc
aas
mov
jnp
push
notb
fcmovne
std
jo
pop
aas
push
and
mov
int3
mov
and
aas
jg
push
insb
sub
fs
sub
rcll
mov
test
cmp
push
std
pusha
das
adc
inc
xchg
test
and
call
xchg
int
sahf
jmp
mov
frstor
cmc
mov
xor
jmp
sti
test
cmpsb
das
push
out
addr16
dec
jne
jp
rol
jg
lcall
and
scas
cmc
je
lret
pushf
call
and
jmp
xchg
dec
out
cwtl
repnz
push
pop
pop
sbb
xchg
inc
out
lods
jecxz
roll
pop
mov
sub
fdivrp
into
stos
mov
popf
dec
adc
add
mov
cwtl
shrl
stc
pop
pop
gs
inc
sub
mov
scas
add
xor
pop
add
pushf
movsb
in
std
xor
call
out
pop
add
xchg
add
stos
xor
sbb
inc
push
fildl
cs
mov
je
les
insl
lcall
shlb
ljmp
insb
lock
push
jbe
das
add
push
add
push
and
fildll
jge
mov
or
jns
xor
out
lret
mov
xor
loop
jo
xchg
imul
arpl
adc
pop
rcr
pop
mov
sub
pop
adc
cmp
in
and
nop
es
mov
cmp
aaa
outsb
pop
sbb
mov
sub
cmp
mov
and
jmp
or
jecxz
mov
jno
pop
mov
pop
cld
aad
aas
push
push
cmp
pop
cmp
je
fnstsw
ds
sar
lcall
ljmp
mov
stos
add
movsl
scas
jle
dec
inc
mov
shl
addr16
jmp
xor
jbe
call
xchg
add
xor
in
mov
push
loope
mulb
xchg
jecxz
mov
mov
decl
dec
sub
push
scas
cwtl
ljmp
cmp
cltd
xor
push
cwtl
in
push
pop
ja
pop
out
cmp
fcompl
hlt
mov
and
fisttpll
stos
arpl
jne
in
shlb
xchg
pop
xor
cli
sarb
pop
mov
mov
shrl
lea
add
nop
push
sub
aaa
aaa
aam
pop
aaa
jecxz
mov
outsb
add
adc
aad
or
int3
jnp
dec
pop
push
sbb
mov
out
cs
mov
mov
pop
cmp
rolb
add
ds
adc
add
inc
divl
xchg
dec
test
xchg
scas
inc
push
and
jnp
jnp
and
jns
fsub
rcr
mov
lds
mov
gs
adcb
imul
dec
and
pop
push
mov
mov
repnz
pop
xor
fnsave
and
sub
inc
ret
cmp
shl
adc
insl
loop
rolb
aam
mov
push
aam
lret
add
mov
xchg
mov
pop
ljmp
cmp
inc
nop
jle
mov
sub
dec
add
and
aam
adc
fwait
dec
clc
in
es
adc
add
shrl
mov
je
aam
fadds
pushf
hlt
sbb
int
mov
int3
sbb
enter
popf
sbb
stos
push
pusha
and
out
dec
jp
or
popl
test
test
push
addl
in
shl
jge
cltd
loop
or
cwtl
sbb
int
push
iret
sbb
outsl
dec
ret
and
push
mov
push
inc
pop
inc
xor
loope
daa
loopne
adc
pop
xchg
pop
mov
and
fmuls
popa
andl
pop
jns
jecxz
add
jb
enter
xchg
sbbl
scas
hlt
popa
inc
mov
aas
fsts
incb
sub
xchg
rcrl
or
sbb
inc
std
jnp
mov
div
cmp
leave
pop
test
inc
add
je
rolb
sahf
leave
inc
cmpsb
mov
lods
xlat
mov
cli
sti
shrl
lock
xor
pop
jno
jb
mov
call
insl
int3
dec
jae
sub
push
jl
into
idivl
mulb
xchg
or
repz
sarl
bound
mov
daa
inc
test
aas
test
push
or
das
inc
jne
lods
sbb
mov
popl
nop
mov
cmc
add
mov
bound
imul
out
cmp
inc
or
jnp
dec
int
sti
add
test
add
les
mov
pushl
lds
cld
push
stc
mov
sahf
outsl
and
movsb
inc
popf
inc
aam
pop
icebp
sbb
cmp
iret
jbe
in
adc
call
loop
mov
mov
pop
test
mov
inc
jno
shlb
fisubrl
movsb
sbb
loope
dec
push
mov
loopne
push
mov
lods
orb
lahf
jp
cmp
mov
sub
add
sti
lds
xchg
mov
daa
jg
int3
and
push
jnp
push
je
xor
adc
fisubrs
push
lcall
inc
daa
or
jnp
notb
les
loopne
lock
mov
mov
imul
fsubr
iret
sub
sub
and
mov
pop
in
fnstcw
pop
insl
cmp
loope
push
lods
js
pop
xchg
mov
dec
sub
je
and
outsl
lods
cmp
arpl
js
inc
sti
push
push
jecxz
shrb
cmp
daa
jmp
mov
jns
insb
xchg
jp
push
into
jb
mov
das
aas
push
in
and
jecxz
arpl
nop
xor
sbb
leave
xor
mov
sub
les
lods
imul
mov
jno
loope
jmp
movsb
jno
cltd
inc
aaa
or
fmuls
or
cwtl
xchg
pop
out
jbe
out
adc
mov
shlb
or
sti
and
add
mov
dec
ret
dec
mov
mov
jne
pop
mov
or
fiaddl
hlt
fucomip
push
push
in
in
cs
dec
cmp
aaa
xchg
pop
push
outsl
adc
call
cmp
push
popf
inc
ljmp
jle
aaa
mov
adc
outsb
stos
xor
and
mov
pop
mov
dec
xor
iret
mov
out
aam
pop
fwait
mov
mov
adc
push
cmp
and
mov
jb
lcall
lock
mov
adc
add
into
push
int3
aas
enter
fildl
sub
stc
aad
inc
fisubl
insb
pop
xchg
xor
sbbb
stos
adc
jae
and
hlt
pop
and
and
sub
std
push
insb
xor
cmc
in
cmc
shlb
ret
pop
or
sub
push
jo
dec
jecxz,pt
incl
inc
sub
cmpsl
jnp
out
shll
into
adc
lret
in
mov
or
xchg
sub
bound
jns
rcll
dec
dec
jns
mov
mov
jle
mov
in
pop
popl
fdivrs
mov
mov
or
cmp
pop
push
lds
pusha
adc
pop
mov
adc
call
iret
dec
xor
iret
decl
ret
dec
jb
add
ret
repz
repnz
inc
mov
jl
pop
push
testl
je
add
cld
adc
push
sbb
inc
mov
lea
jb
test
fadd
push
and
xor
sbb
sarl
mov
mov
push
add
jnp,pt
sbbb
mov
xchg
pop
push
mov
jge
mov
ja
das
xchg
imull
lret
fwait
cltd
test
xchg
jns
sbb
xlat
pop
sbb
sbb
jle
into
pop
ret
pop
mov
or
jge
and
mov
int3
and
add
mov
xor
adc
ret
adc
arpl
dec
or
inc
xchg
jge
mov
decb
mov
adc
jle
push
sbb
in
repz
sub
pop
ficoml
cmpsl
scas
out
pushf
jno
mov
push
mov
push
or
xchg
add
dec
icebp
jg
cltd
rcll
inc
lds
outsb
pushf
xor
jno
lcall
push
rcrb
mov
dec
rcll
jmp
add
outsb
adc
jo
jo
gs
adc
mov
mov
xchg
cmpsl
pop
pop
xchg
xor
jl
ret
je
jbe
adc
vmovaps
idivb
mov
pop
push
or
sbb
cmp
inc
add
mov
dec
lcall
inc
ficoml
jmp
dec
mov
insb
pushl
test
test
add
pop
popa
and
ffree
cmp
mov
push
mov
jo
int3
and
test
mov
out
or
fwait
clc
cltd
push
divl
imul
dec
sbb
adc
mov
aas
inc
push
or
jge
js
push
push
jae
xor
test
and
popa
scas
mov
ja
sub
call
mov
mov
jp
lcall
pop
pop
mov
lahf
push
dec
icebp
dec
cmp
or
mov
mov
fsubrp
and
test
and
xor
clc
adc
push
adc
dec
add
xor
outsb
and
push
hlt
adc
dec
js
push
cmp
sub
push
dec
mov
xor
mov
pop
and
mov
sub
and
orl
mov
outsb
int
ficompl
das
stos
scas
push
lock
cltd
dec
loopne
lahf
sbb
hlt
shr
dec
inc
xchg
pop
mov
and
stc
jno
inc
shrb
pusha
and
int3
mov
pop
mov
arpl
adc
out
adc
jle
adc
lods
push
cwtl
out
sbbb
mov
push
clc
neg
test
pop
cld
in
and
pop
enter
clc
lahf
jl
scas
add
in
data16
cmp
sbb
lods
aaa
rcrb
ret
inc
stos
cmp
pop
xchg
movsl
xchg
aam
mov
mov
jp
scas
add
adc
cmpsb
cmp
xlat
ficoml
les
ds
in
repz
and
jnp
cmpsb
xchg
mov
cmp
xor
mov
xchg
lods
dec
and
sahf
dec
xor
lret
flds
testl
gs
stos
frstor
aas
mov
dec
push
cltd
push
jg
mov
hlt
mov
sub
lahf
adc
pop
cmp
mov
enter
inc
push
sub
std
pop
adc
out
test
dec
ret
mov
add
shll
push
popa
jg
in
mov
loop
push
adc
imul
inc
mov
ret
test
cmpsl
inc
xchg
daa
js
daa
out
popa
fmuls
xchg
or
pop
jnp
jg
cmp
rcll
push
int3
fld
push
push
in
inc
fcoml
loope
push
lea
outsb
imul
cmp
pop
sbb
int3
and
das
test
adc
daa
inc
mov
and
sub
or
inc
mov
mov
inc
repnz
inc
stc
jb
jns
jecxz
or
daa
push
fnsave
mov
rcll
cmp
push
sub
cmc
and
jmp
xchg
call
and
jge
jne
push
outsl
push
mov
push
movsl
aam
xor
aas
inc
add
insl
adc
inc
push
not
mov
mov
stos
push
and
jg
sbb
test
jne
push
ds
popa
ljmp
push
testb
cmp
push
subb
or
sti
out
xor
es
push
inc
jne
mul
shld
stos
leave
lods
xchg
adc
or
fwait
cld
adc
scas
enter
gs
in
movsb
add
fcomp
sarb
test
xor
std
jo
ds
sbb
dec
or
mov
sub
aam
sub
xchg
into
insb
mov
imulb
pop
push
iret
in
testl
and
add
loop
jmp
nop
ljmp
popf
mov
add
int
fsubl
mov
leave
sub
testb
repnz
bnd
ret
test
sarb
std
pop
or
xchg
movsl
adc
and
bound
dec
push
les
pop
jmp
fstl
psubusw
mov
fidivrl
sub
cmp
cmc
sub
outsl
mov
iret
fstpl
inc
lods
mov
xchg
std
cmp
jb
add
or
bound
fwait
iret
lret
inc
dec
xchg
or
insl
sub
cmpsb
test
push
or
or
or
bound
sbbl
mov
push
movsb
addr16
into
nop
push
xchg
pushf
les
mov
or
inc
stos
andl
inc
xlat
pusha
cmpsl
repz
loope
pop
cmp
xchg
push
push
xchg
add
imul
mov
lcall
fsubrs
daa
inc
dec
pop
adc
cmpsb
cwtl
loopne
jle
and
add
hlt
xor
mov
dec
test
sbb
pop
cli
mov
ljmp
sbb
clc
sbb
sbb
adcb
fildl
lcall
xlat
cld
ja
push
shrl
mov
or
fstpt
movsb
stos
cmp
or
clc
jne
push
shll
add
int
ljmp
lds
sarl
sub
and
jne
sbb
xor
push
jg
and
rcrb
sub
in
xor
lcall
les
shlb
pop
test
enter
sbb
xchg
mov
sahf
inc
or
sbb
ja
repz
outsb
or
aas
pop
mov
rcrl
movsb
stos
stos
xor
add
es
and
sbb
ja
mov
addb
cmc
addr16
int3
cmpsb
pop
hlt
and
mov
arpl
push
movsl
pop
es
fldenv
int
add
xchg
sbb
and
xchg
sub
sub
je,pt
das
cmpl
test
push
or
ja
dec
xchg
cwtl
cmp
xchg
mov
nop
out
mov
adc
sbb
cld
sub
xor
ljmp
adc
ja
cmc
add
jae
or
push
sbbl
rcr
or
popa
dec
pop
inc
xchg
leave
xor
lods
dec
xchg
or
xorl
cmp
mov
pop
push
addr16
jle
lret
jmp
ljmp
xlat
out
mov
xor
mov
iret
push
lods
cmp
mov
jle
mov
out
push
and
insl
sbb
jb
mov
push
insl
clc
or
mulb
imul
and
sbb
incl
es
and
cmpsl
in
lods
push
cmpl
sub
sahf
sbb
add
push
push
jbe
xchg
pusha
leave
fsts
add
in
ja
pop
ss
xor
mov
test
jl
xor
into
jmp
aaa
mov
cmp
int3
lahf
rol
js
clc
loope
xor
fwait
push
cmpsl
xor
sbbb
mov
test
cmpl
push
mov
or
cmp
xchg
cltd
call
in
push
sbb
push
out
shrl
or
jne
js
fstps
inc
sbb
lret
popf
xor
loopne
stc
das
fmull
xor
xor
sbb
fwait
lock
sbb
cmp
and
ss
push
daa
xor
jg
sbb
xchg
pop
pop
repz
es
pinsrw
sbb
cmp
inc
test
cli
int
push
pushf
add
xor
loop
or
daa
sub
inc
ds
mov
push
and
fnsave
xor
popf
sti
int
popa
and
inc
ljmp
loop
out
sbb
sbb
mul
jg
fidivs
dec
cmp
iret
arpl
xlat
cmp
and
mov
xor
das
repz
cmp
in
mov
sti
pop
mov
clc
xchg
mov
aaa
jb
pop
mov
cmp
in
mov
fs
aas
cmpb
xor
test
test
xchg
jle
dec
test
inc
push
stc
mov
pushf
rcrb
mov
jp
pop
jmp
adc
and
or
inc
filds
mov
rolb
ss
arpl
bound
dec
or
cltd
mov
in
mull
std
mov
ret
mov
std
inc
pop
jb
push
pushf
pop
mov
jae
push
mov
sub
imul
popa
mov
hlt
xchg
shr
xor
cmp
jmp
dec
mov
xchg
xchg
test
jg
pop
subl
mov
dec
or
xchg
push
push
cmpsl
lock
cmc
js
pop
mov
hlt
pop
es
xchg
sub
out
dec
and
lret
pop
push
fcomp
test
and
lods
mov
cli
sub
icebp
sti
imul
jno
sahf
mov
inc
leave
mov
or
popa
lcall
sbb
notb
mov
shrb
lret
adc
imul
jmp
fdivr
cmp
mov
and
movsb
cld
lret
aam
shll
xchg
mov
addr16
sahf
in
pop
outsb
pop
addr16
xor
std
stos
test
mov
and
adc
cmp
pop
test
imul
aam
roll
or
inc
push
je
outsl
sbbb
pop
mov
jmp
jbe
mov
and
push
or
fwait
jb
dec
adc
pushf
inc
adcl
test
into
inc
test
pushf
pusha
js
or
jp
loope
into
mov
jp
das
and
and
arpl
dec
sub
mov
divb
push
xor
push
mov
movb
mov
lret
dec
jae
mov
adc
inc
rolb
imul
push
roll
and
pop
pop
std
je
outsb
jnp
mov
fmul
outsl
or
repnz
mov
xchg
loop
dec
out
jne
lods
mov
les
ja
pop
imul
lds
dec
out
pop
mov
pop
ljmp
addr16
sbb
jnp
nop
insl
ljmp
cmp
int
mov
cltd
add
sub
cmp
mov
adc
mov
lret
ror
dec
loop
jb
xchg
insl
sahf
cmp
mov
test
push
and
adc
adc
sub
dec
stos
mov
lcall
movsb
mov
call
rclb
fmul
outsb
inc
mov
push
mov
out
jne
dec
add
push
sub
fcompl
mov
pop
adc
xorb
inc
dec
pushf
fisttpl
in
vpcmpgtd
adc
or
cmp
xor
insb
cmp
lock
test
repz
xchg
sub
out
mov
repnz
jb
mov
cmc
fnstenv
sub
sbb
cltd
data16
cmp
imul
xor
imul
lret
lret
dec
rclb
aas
mov
test
into
lcall
lret
jle
pop
sarb
lcall
ror
adc
jbe
in
movsl
mov
fbld
adc
xchg
inc
fisubrs
fistpll
out
addr16
sbb
adc
sub
fistps
mov
sub
or
das
cmp
inc
lahf
test
xor
test
add
adc
cld
jl
arpl
pop
jae
fucomip
sub
pop
fnstsw
movsb
mov
lcall
jg
lds
mov
inc
imulb
inc
inc
movsl
jmp
mov
adc
pop
mov
jne
add
adcl
fidivrl
mov
pop
test
push
idivb
scas
gs
gs
js
scas
sbbl
xchg
and
int3
jno
cmpsb
sub
add
jmp
and
sar
loope
lds
jns
adc
dec
sbb
iret
mov
lahf
xchg
iret
in
adcb
push
adc
arpl
pop
pusha
push
sahf
ss
push
orl
dec
ljmp
sahf
sahf
daa
push
je
sti
fcompl
insl
inc
fidivl
mov
push
aaa
shl
stc
add
mov
jl
fidivrs
clc
movsb
mov
imul
fimull
xor
jge
imul
cli
into
pusha
mov
pop
add
xlat
jnp
mov
leave
mov
mov
inc
dec
jno
imul
mov
lods
ja
int3
popa
hlt
push
clc
xlat
sub
dec
or
cmp
mov
or
cmpsb
lcall
jge
pop
loope
jg
sarb
inc
sub
pop
lcall
loop
mov
subb
mov
fdivs
pushl
push
cmpsl
ss
add
cmpsl
xchg
iret
imul
dec
popf
lock
pop
mov
lock
push
and
adc
and
icebp
divb
and
in
ja
fimull
leave
stc
shrb
das
mov
test
repz
mov
cmp
andb
xorb
or
mov
fists
addl
lret
mov
xchg
or
sub
lods
andl
push
mov
aam
rcll
xchg
pusha
ret
sub
push
je
adc
jae
shrb
pop
xlat
data16
adc
mov
inc
dec
adc
inc
cmp
push
and
adc
pusha
test
push
jb
sbb
pop
cld
xchg
pop
lcall
xor
xchg
movsb
jecxz
fdivrs
sbb
sbb
pop
cs
sahf
push
fucomi
xchg
or
push
popf
mov
outsl
addb
sbbl
ljmp
fcos
outsl
inc
sti
inc
inc
cmp
pushf
movsl
sub
xchg
addb
mov
add
mov
jecxz
mov
xchg
test
mov
hlt
outsl
push
adc
sub
dec
jle
mov
fadd
push
movsb
jg
xchg
imul
add
iret
je
arpl
enter
mov
fdivrs
xor
sbb
pop
out
push
jge
in
pop
lock
insb
iret
xor
je
rcr
lods
cmp
sub
push
fnstsw
xor
dec
pop
repz
pop
mov
dec
divb
ret
push
xchg
pop
push
in
outsl
movsb
je
jbe
push
repz
cmp
scas
sub
xlat
mov
or
pushf
popf
pushf
xor
sti
jecxz
mov
outsl
and
dec
xchg
or
movsl
in
in
aad
addb
add
insl
add
dec
xchg
pop
mov
sbb
add
dec
outsb
data16
jmp
movsb
sbb
jle
jl
push
cmp
and
sub
inc
cmc
movsb
inc
xchg
in
xchg
es
std
pop
and
or
inc
aaa
xor
dec
mov
push
and
sbb
cmp
lret
movsl
rcrl
dec
jg
push
pop
arpl
rol
mov
inc
cmp
mov
lock
roll
jb
xchg
clc
dec
in
mov
ret
cmp
jns
xchg
sbb
lds
push
mov
push
sbb
out
push
xchg
adc
xor
insb
shl
test
popf
addr16
mov
ret
mov
insb
push
jns
pushf
and
hlt
dec
add
xor
test
mov
arpl
outsl
mov
fnstcw
jmp
adc
pop
xchg
ret
inc
je
and
mov
xor
test
hlt
mov
addr16
push
out
adc
repz
jg
scas
pop
xor
imul
sbb
into
subl
ja
push
stc
out
lcall
mov
jne
test
mov
test
push
rcr
cwtl
add
je
xchg
bound
mov
int
divl
rcl
fsubs
mov
subb
addr16
sar
int3
lds
mov
mov
cmp
push
adcl
pop
lret
fisubs
rcrl
or
xlat
mov
jne
mov
mov
lcall
and
mov
iret
and
jbe
xcrypt-cbc
cmpsl
rcrl
cwtl
mov
stos
inc
dec
push
or
jbe
sbb
inc
sbb
mov
add
lcall
push
ja
pop
addr16
push
and
int3
stc
cmpsb
out
push
cmp
pop
sbb
pusha
mov
rclb
cltd
lret
mov
js
cld
out
neg
fiaddl
sub
sub
jnp
stos
mov
xor
aad
mov
cmp
jnp
dec
sbb
push
jmp
jb
ds
lret
inc
cmc
lret
mov
push
enter
sbb
pop
adcb
mov
cmp
jo
mov
mov
jecxz
insb
push
lods
loopne
sub
mov
xchg
add
xchg
test
push
mov
aaa
mov
lcall
fwait
pop
ja
fisttps
adc
insb
and
mov
fs
adc
push
adc
jb
rorl
out
nop
std
inc
sub
add
in
jecxz
or
jg
aaa
xchg
dec
mov
mov
stos
pop
ja
push
dec
dec
inc
sahf
je
js
fs
iret
repnz
pop
adc
call
mov
or
add
in
pop
out
inc
xor
out
lret
xor
test
nop
and
jb
inc
out
ja
mov
aaa
sub
call
jb
fcompl
les
push
leave
sub
push
mov
inc
pop
roll
pop
ja
cmpb
dec
adc
or
or
xchg
test
mov
insl
dec
xor
xchg
aad
sub
cli
or
inc
lahf
cmpsl
xchg
cmp
push
sbb
stos
adc
nop
sbb
out
hlt
lds
xor
add
sbbb
call
pop
and
pop
cmpl
push
imul
outsw
movsb
ss
sub
dec
stos
cltd
mov
jmp
insb
sbb
pushf
jecxz
sbb
rclb
movsl
xchg
test
dec
std
pushf
jbe
dec
repz
xchg
push
fsubrl
pop
loop
adc
es
mov
mov
je
push
into
test
ss
dec
mov
adc
sub
cmc
adc
or
sbb
dec
popf
out
fiaddl
mov
leave
jb
cmp
mov
sub
out
adc
rep
lock
mov
inc
in
jle
testl
std
popf
sub
dec
cmpsl
arpl
xchg
mov
mov
icebp
push
call
shrb
aad
cmc
idiv
and
cld
xor
jbe
into
shr
mov
mov
add
adc
mov
pop
jecxz
cmc
inc
mov
or
push
pop
inc
sub
aaa
push
sbb
jmp
adc
jmp
push
sub
sbb
ja
loope
mov
inc
xchg
fcos
shrl
lret
jp
or
mov
adc
or
or
fld
mov
lods
popf
lret
inc
xor
fwait
cmp
loop
pop
lcall
loopne
pusha
inc
scas
clc
or
or
js
enter
push
sbb
sub
mov
or
add
inc
pop
xchg
clc
mov
loopne
movsb
shrb
mov
adc
mov
addb
mov
sub
adc
ret
bound
push
arpl
and
sti
aaa
mov
call
pop
clc
xor
dec
xchg
pop
mov
push
add
mov
mov
xor
fdivs
incl
mov
cmp
ljmp
lods
lcall
arpl
and
cli
dec
je
pop
push
repz
pusha
sbb
push
ret
adc
movsb
jge
cmp
push
inc
or
ret
mov
add
cltd
inc
sub
aam
adc
mov
and
add
xor
hlt
loope
xchg
cmpsb
cmp
aam
lahf
mov
adc
or
outsb
xchg
test
or
pop
sbb
sbb
jae
call
das
lret
insb
stc
lock
cmpl
aaa
mov
adc
loope
jge
aam
icebp
jae
hlt
sub
pushf
lret
sub
aaa
ret
mov
fs
sbb
mov
mov
or
jp
ret
dec
pop
imul
repz
xchg
cli
stos
clc
sbb
iret
xchg
sarl
lock
in
js
std
popa
clc
shl
xchg
ljmp
clc
movsb
jnp
lret
roll
enter
mov
jo
mov
nop
xor
data16
mov
lret
cmp
jmp
fistpll
add
rcrl
sbb
daa
pop
add
mov
xchg
mov
ds
arpl
pop
adc
rol
in
push
repz
cmp
pop
iret
jo
mov
shll
mov
rcr
mov
hlt
repnz
fiadds
and
ret
sarl
dec
xorps
cld
mov
or
mov
lret
lds
rcrb
push
mov
in
les
xor
daa
ljmp
sub
mov
or
mov
pop
out
pop
scas
pop
int
mov
add
cmc
repnz
loopne
pop
addr16
mov
ds
push
adc
clc
xchg
sbb
adc
add
sub
movsl
push
and
ljmp
jae
inc
fcompl
sub
stos
nop
int
lea
mov
jecxz
fcomp
call
cs
jmp
jmp
fwait
lods
cmc
xor
ficompl
stc
pop
loope
jo
lahf
pop
pop
xchg
divb
in
mov
pop
mov
fisttps
data16
std
in
movsb
mov
hlt
lcall
clc
mov
lret
jge
jmp
cld
dec
sub
loopne
rcll
mov
push
enter
imul
gs
jmp
sub
sbb
cltd
push
pop
orb
mov
fsubrl
aam
dec
ljmp
rdtsc
sub
mov
inc
fldt
xchg
sti
pop
mov
mov
fs
add
sar
sub
dec
sbb
inc
and
stos
pop
sahf
push
aad
lret
mov
rorl
rol
inc
xchg
adc
lret
ja
lcall
jmp
mov
mov
or
scas
dec
test
and
mov
stos
and
xchg
stc
arpl
xorl
push
push
jns
sbb
pop
repnz
insb
jmp
les
mov
lods
mov
push
sbb
add
push
loope
or
push
cltd
ret
loope
mov
mov
rcr
fwait
loope
sysenter
popf
push
or
pop
jecxz
outsb
incl
outsb
into
inc
push
sub
loope
fs
adc
out
xlat
add
dec
icebp
push
fmul
stc
popa
scas
fstpt
lea
mov
jns
push
ljmp
faddl
in
fdivl
pop
and
into
clc
push
sbb
inc
sub
inc
fimuls
dec
xor
push
adc
inc
std
iret
cmpsl
loope
mov
or
aas
bound
mov
test
test
imul
push
pop
inc
xchg
fs
sub
jbe
lods
je
adc
testl
jp
pop
jmp
out
push
mov
xchg
idivl
pushf
sub
ficomps
add
add
mov
lahf
sarl
test
ror
mov
jnp
sub
pop
and
icebp
pop
sti
addr16
in
cmpsb
push
adc
sar
icebp
push
and
xor
lret
adc
mov
adc
ljmp
xchg
std
ret
cltd
pusha
pop
imul
imul
xlat
test
cli
push
inc
jae
mov
lret
jno
test
xor
mov
js
fcmovu
aaa
mov
xchg
imul
inc
ljmp
daa
movsl
sbb
lods
iretw
dec
call
inc
ret
imul
xor
stc
or
cli
xchg
mov
and
sbb
sub
mov
add
jl
mov
jle
mov
lock
jae
or
inc
test
push
mov
push
jns
mov
push
je
in
in
or
je
pop
leave
mov
inc
cmp
add
into
test
jbe
and
push
push
push
or
sbb
xchg
inc
or
popl
mov
fxch
sbb
cmp
repnz
mov
sbb
sub
mov
ljmp
jmp
cltd
cmp
dec
jbe
aaa
subb
loope
pop
ss
out
sbb
dec
mov
roll
jmp
push
adc
clc
loop
icebp
xlat
jg
mov
mov
push
push
scas
add
cltd
pop
or
scas
and
pop
insl
pop
lock
inc
outsl
sti
cmp
adc
sub
dec
fldenv
jge
mov
mov
mov
fidivs
mov
inc
dec
dec
aas
push
push
xchg
sub
adc
adc
xor
dec
fsubl
popa
adc
out
ss
repnz
sub
hlt
or
xlat
pusha
int
hlt
je
popl
icebp
and
lcall
dec
sub
jae
call
jae
inc
push
mov
les
and
jo
and
sbb
lahf
aas
xchg
pop
mov
insl
lret
in
shrb
xor
clc
fnstenv
pop
mov
push
adc
lods
sbb
dec
mov
push
and
mov
pop
pop
loope
gs
popa
stos
inc
lods
sub
adc
xor
add
test
mov
aaa
mov
in
ja
andb
pop
cltd
enter
shll
daa
repz
pop
movsb
dec
pop
scas
pop
mov
imul
stc
jnp
dec
ja
bound
pop
push
push
out
dec
repnz
pop
insl
jne
aad
mov
test
push
pop
xor
adc
push
sbb
aas
gs
push
dec
loop
mov
cmpl
loope
mov
dec
outsb
mov
pop
adc
jne
mov
loope
repz
lock
adcb
inc
cmpsb
add
add
cmp
mov
rcrl
lret
rclb
scas
push
leave
js
cmp
call
fwait
xchg
int
xchg
jl
sub
mov
shl
add
pop
daa
int3
mov
sub
mov
out
inc
popf
pusha
mov
ret
iret
scas
sbb
test
xchg
mov
cmc
xchg
jg
fmulp
cmp
aad
clc
lcall
xchg
outsl
mov
mov
in
mov
cld
xchg
mov
fs
loop
mov
sbb
xchg
xor
call
add
leave
jae
inc
mov
es
aad
pop
mov
and
pop
aad
mov
mov
hlt
outsl
int3
sbb
mov
push
sbb
je
out
test
xchg
imul
enter
jmp
add
jns
pop
std
int3
stos
jp
or
test
repnz
push
enter
insb
dec
adc
popf
and
int3
sahf
mov
mull
enter
js
test
dec
mov
pop
dec
in
jle
push
and
pop
ja
scas
stos
enter
gs
dec
jge
cli
and
push
fwait
jl
inc
dec
adc
mov
pop
out
stos
fs
push
scas
add
sub
inc
push
pop
jae
push
and
pop
in
addl
aaa
mov
add
outsb
pop
jae
in
or
aaa
push
mov
ss
xchg
xchg
mov
fcom
pop
mov
ljmp
fistpl
push
add
loop
int3
scas
push
and
lea
jnp
gs
inc
push
leave
xor
mov
faddl
rol
push
cmpsb
aad
pop
jns
cmpsb
push
inc
mov
es
inc
adc
cmp
aas
or
aaa
lcall
xorb
sbb
pop
sbb
mov
sarl
clc
sub
jbe
mov
in
test
lock
mov
test
adc
and
movsb
mov
mov
psubw
mov
dec
cld
jb
test
sti
inc
adc
cmc
cld
mov
add
push
das
mov
sub
cmpl
scas
push
pop
cmc
cmp
lods
loope
loop
sbb
mov
inc
mov
jp
jg
add
mov
adc
mov
mov
mov
push
icebp
je
mov
and
inc
aad
push
loop
test
dec
cmp
arpl
push
test
xor
xchg
cltd
or
repnz
dec
cmp
cmp
test
or
adc
adc
xor
pushf
dec
jg
rorb
push
popf
loope
stos
push
jns
xor
mov
add
pop
jns
iret
sbb
xor
data16
leave
cs
push
xor
jb
xor
mov
outsl
jp
sti
jb
or
out
push
adc
inc
push
xor
mov
addr16
and
xor
xchg
inc
lds
push
fisubrs
inc
fisubrl
rcll
cmp
mov
sbb
ret
ja
jnp
daa
test
sbb
inc
orb
sti
adc
xor
loopne
sbb
sub
xor
loop
xchg
sahf
mov
aaa
and
clc
movsl
adc
popa
pop
pminsw
sbb
xor
jno
mov
sub
lds
add
sbb
ljmp
xchg
mov
jns
inc
les
jp
xchg
and
xlat
rclb
cmpsl
xor
fidivrs
movsb
and
adc
sbb
lret
xlat
lds
rorl
xchg
daa
ffreep
out
adcl
cmpsl
addr16
xchg
jp
sbb
neg
push
sub
addr16
mov
ds
and
sub
call
dec
movsl
inc
mov
xor
jp
jo
popa
repnz
in
rorb
loop
cmp
mov
mul
pop
inc
adcl
stos
rorl
push
ds
lahf
push
cwtl
in
mov
jmp
sbb
mov
jae
cmc
jmp
and
mov
mov
pop
das
mov
in
sbb
imul
mov
push
jae
pop
xchg
shlb
in
jg
pop
push
sub
cmpsb
xor
jns
out
imul
out
lods
pop
pop
fistpll
pop
sbb
add
xchg
cmp
into
inc
imul
outsb
push
aas
add
cltd
and
data16
push
cmpsl
add
outsl
jbe
push
pop
push
shlb
push
ret
pop
jl
mov
push
xchg
fstpt
fld
mov
xor
push
mov
jg
mov
pop
pop
das
bound
xor
add
inc
dec
pop
out
xchg
test
jo
loop
cmp
popa
mov
mov
adc
in
xor
ret
and
into
mov
sbb
xlat
xchg
out
je
cld
add
imul
dec
mov
testb
aad
pusha
jg
mov
out
cltd
jno
cmpsl
in
dec
cli
inc
adcb
scas
in
fsubs
pop
imul
or
push
push
sub
add
sub
bound
jg
push
andl
dec
jecxz
add
and
cld
and
daa
mov
leave
fstl
sub
mov
inc
sub
iret
or
or
inc
inc
jns
add
mov
test
icebp
mov
pop
dec
cmp
leave
mov
mov
adc
into
adc
inc
or
inc
or
iret
xchg
test
mov
push
push
pop
mov
pop
sub
xchg
sti
xchg
stos
sub
add
aad
test
xor
or
push
leave
mov
pop
or
stos
mov
movsl
repz
lahf
leave
push
cs
lret
mov
xchg
or
cmpsb
fcoms
les
jecxz
xchg
adc
shrl
jnp
call
fstps
adc
popf
cmp
call
mulb
mov
cld
jle
pop
jno
dec
cmpps
std
inc
sub
imul
xor
daa
das
jge
and
pop
stos
aaa
das
mov
test
nop
out
and
or
mov
jns
and
add
pusha
out
in
je
push
or
orl
fwait
pop
popa
cmp
das
mov
cli
out
add
das
loope
push
mov
or
sahf
jnp
ja
filds
test
dec
jae
jns
xor
arpl
or
lret
out
and
es
jg
movsl
adc
imul
stos
push
enter
stc
mov
pop
lods
mov
mov
sbb
mov
test
mov
mov
mull
lret
add
shrl
or
movsl
adc
fstps
mov
popa
mov
adc
gs
fs
sbb
jb
mov
xchg
pop
push
ret
in
cmp
adc
pop
andb
ret
and
jg
xchg
std
andb
jg
or
push
pop
sbb
and
sbbl
clc
mov
stc
push
in
jns
push
repz
out
jmp
pop
add
int
repnz
pop
push
mov
cmp
mov
lods
cmpsl
movsb
in
out
sarb
pop
test
jecxz
out
int
mov
pop
lret
push
aas
adc
add
adc
xor
imul
xor
push
adc
loop
shlb
repnz
mov
xlat
mov
pushf
out
cmpsl
mov
xchg
popa
aaa
mov
xchg
ljmp
xchg
add
adc
sub
out
fsubs
clc
mov
daa
pop
or
push
pop
lods
ret
scas
out
insl
aad
jge
lahf
inc
pop
pushl
push
sbb
mov
pop
loopne
xchg
repz
das
push
jne
movsl
push
sbb
in
sub
fcmovne
push
xchg
into
daa
cmp
jb
cmp
test
and
fdivr
sbb
call
test
jl
cld
inc
fcomps
repnz
sub
and
testb
xchg
mov
roll
dec
push
lods
pop
pmuludq
mov
loope,pt
int
in
rorl
adc
pop
lock
shl
ss
xor
sub
inc
mov
repnz
cwtl
push
rclb
adc
out
push
subl
adc
out
out
pop
xchg
cmp
or
add
mov
scas
cli
cmpb
std
push
mov
aas
mov
or
pop
fldt
adc
leave
sub
sti
xchg
pop
jno
cli
cld
mov
jmp
mov
fldl
aaa
lea
in
xchg
mov
repnz
lahf
cmp
ljmp
xchg
pop
jmp
cmp
in
pop
push
mov
fsubr
and
icebp
in
fldl
inc
adc
jb
jae
pop
inc
leave
lcall
loop
dec
pushf
jbe
fsts
dec
fists
mov
orl
jge
xchg
jne
mov
xor
adc
mov
sbbb
xchg
lret
mov
inc
icebp
test
jo
iret
outsl
ss
jno
sbb
test
mov
mov
xchg
jno
mov
fistpl
push
mov
pop
mov
aam
jmp
lock
rorl
mov
std
xchg
sti
mov
jne
in
in
lret
inc
rclb
sub
je
mov
out
lahf
push
mov
push
inc
ljmp
testb
sbb
fmulp
inc
lret
fstl
sbb
adc
cmp
dec
push
data16
sbb
dec
and
add
fstps
fildl
adc
dec
ret
mov
adc
push
jg
test
push
mov
aad
push
jns
insb
cmp
mov
sbb
cmp
jl
nop
imul
and
pusha
fisubs
dec
xor
fcompl
add
repz
aas
xor
test
pop
loopne
push
inc
ss
mov
push
cs
outsb
sbb
inc
add
outsl
and
orb
lock
in
mov
add
jg
pushf
out
fwait
mul
pop
out
pop
in
repz
pop
addr16
repnz
jmp
lods
dec
dec
negl
push
pop
inc
fisubrs
mov
scas
pop
imul
lahf
pop
sbb
shr
sub
mov
xor
loopne
adc
inc
jge
pop
pop
insb
adcb
fiaddl
les
out
push
or
nop
pop
mov
loop
ja
add
movsb
inc
cmp
movsl
ljmp
adcb
mov
adc
fstpt
in
pop
sub
aam
sbb
pop
test
cld
push
or
ds
scas
sbb
push
fs
mov
push
cmp
cmpsl
movsl
mov
ret
roll
cmc
sub
lods
inc
jge
adc
sbb
test
mov
lods
test
loope
dec
jo
adc
popf
insb
sub
ret
adc
lods
pop
xchg
mov
jne
inc
jp
ret
inc
icebp
es
jge
mov
push
scas
mov
in
xchg
pop
stos
testl
in
push
cmp
sahf
cld
mov
push
xor
adc
ret
test
mov
jecxz
insb
stos
xchg
lret
popa
jnp
or
fists
popf
fdivs
nop
xchg
enter
xor
clc
xchg
sbb
jb
xchg
rcrl
sub
xor
adc
or
or
jmp
pusha
mov
ja
jge
add
or
sbb
push
or
adc
mov
call
test
outsl
in
xchg
rcrl
std
xchg
mov
xor
in
daa
xchg
xor
sbb
push
adc
or
call
mov
sbb
lret
test
call
mov
test
in
mov
lea
aam
loop
mov
ret
scas
rorb
mov
test
cmp
iret
pop
lcall
jbe
stos
outsb
fwait
or
cmp
lea
push
fnstsw
mov
mov
sub
lods
repz
ret
data16
mov
scas
jmp
jno
in
cli
mov
mov
ljmp
sbb
mov
sub
sub
sub
fisubs
es
mov
push
outsb
dec
push
loopne
xor
gs
mov
jg
ljmp
clc
dec
outsb
imul
jle
xchg
iret
mov
inc
xchg
push
mov
pop
lahf
dec
outsb
mov
push
and
fwait
mov
imul
jae
std
js
pop
lods
lahf
push
daa
orb
std
mov
test
inc
out
or
mov
lods
pop
arpl
pop
mov
mov
pusha
setl
xchg
aam
cmpsb
jmp
xlat
jle
enter
cmp
insl
stc
cmp
insl
outsl
cmp
xchg
push
imul
mov
lahf
ret
leave
int3
leave
sub
out
sahf
icebp
mov
mov
fimull
sti
cmpsb
iret
imul
sbb
adc
sbb
push
repz
adc
stc
mov
cmp
int
leave
das
sub
stc
pushf
mov
popa
repnz
dec
repz
inc
dec
je
shlb
pop
adc
ficomps
jg
mov
lods
test
mov
mov
sbb
xor
mov
push
jge
mov
mov
add
dec
push
jle
or
insb
xor
rorl
aas
mov
nop
jmp
stc
das
leave
test
sbb
cmpsl
dec
daa
je
clc
aad
lret
clc
jno
int3
lahf
add
addr16
mov
xlat
in
inc
idivl
movsb
aas
push
sti
adc
and
in
mov
mov
jns
hlt
jmp
push
pop
stos
jp
imul
adc
pop
lcall
cmp
jne
add
jmp
mov
imul
push
rcll
pusha
mov
movsb
push
jecxz
jno
fiadds
add
sbb
mov
ret
pop
inc
inc
add
mov
add
mov
pop
cmp
push
dec
in
pushf
pop
and
inc
mov
flds
jb
popf
and
popf
sub
push
jp
repnz
adc
cmp
aad
imul
pop
ljmp
adc
movsb
xchg
lret
xchg
ret
fnsave
push
and
leave
lock
bound
dec
mov
cltd
jmp
sbb
into
and
fisubrl
push
mov
xor
mov
loope
sbb
inc
jl
or
jne
decb
in
xor
shrl
ret
xor
popf
xchg
sbb
or
jg
adc
inc
test
aaa
and
bound
pop
pop
stc
fstps
or
add
test
cld
mov
xorl
arpl
cltd
gs
loope
mov
scas
clc
inc
xor
test
jge
sbb
mov
test
aaa
insb
out
sbbl
arpl
lahf
jbe
out
mov
cmp
mov
dec
rolb
rcll
jmp
divb
outsb
popf
mov
jl
mov
xchg
mov
divb
jg
std
jno
bound
or
fs
lret
push
ljmp
push
stc
or
pop
add
daa
lods
push
dec
fs
or
aam
sub
sbb
sub
shlb
push
cwtl
sbb
scas
mov
stos
xor
mov
insl
mov
outsb
xor
loopne
xchg
or
xor
int3
addr16
or
test
inc
cmovs
ljmp
ss
loope
sub
cs
movsb
push
rorl
sahf
cmp
jne
rcr
fmuls
xlat
in
stos
xor
dec
jle
shrl
xchg
xlat
lods
test
xorb
bound
bound
test
int3
or
dec
xor
sub
data16
ror
inc
pop
add
add
cmp
clc
call
pop
push
mov
mov
jp
push
shll
push
add
mov
jb
sub
sbb
dec
push
mov
pop
nop
inc
test
in
outsl
mov
add
adc
cmp
rol
dec
mov
incl
inc
or
xchg
sbb
push
insb
cmp
mov
jmpw
fdivrs
call
xchg
lock
pop
cmpsl
imul
sahf
ljmp
addr16
xor
add
in
outsl
xor
push
lcall
js
out
xchg
xchg
push
in
ja
inc
mov
mov
pop
xchg
ret
daa
mov
push
jg
fisubl
insl
ret
cli
mov
mov
xor
movsl
out
pop
add
cmp
test
or
dec
xor
jne
test
leave
dec
test
lcall
hlt
stc
or
shr
cltd
out
test
in
push
push
out
adc
ds
flds
inc
repz
in
push
shll
stos
pop
and
rcll
mull
jmp
cmp
sbbw
cmpsl
cmc
dec
aaa
fnstenv
mov
mov
inc
jmp
fidivrl
mov
imul
or
imul
test
lret
jl
push
lcall
sub
gs
ds
cmp
dec
les
lret
jge
cld
inc
jmp
mov
gs
mov
push
stc
xchg
mov
adc
cmp
jns
pop
adc
and
in
mov
hlt
inc
inc
push
mov
sbb
sub
xor
rclb
ja
cwtl
fildl
cmc
dec
cmpsl
add
xchg
setae
jbe
inc
sub
dec
xchg
gs
lods
pop
in
movsl
dec
or
lret
imul
push
pop
out
jp,pn
push
and
jl
ja
fs
cmp
in
out
outsb
push
inc
cmp
leave
imul
jo
shll
fidivs
sub
xchg
mov
sbb
and
cltd
and
fwait
jnp
push
add
xorl
sbb
xlat
xor
bound
lret
push
adc
xchg
adc
int
sbb
jbe
xor
pop
daa
cld
pusha
je
cmp
xchg
mov
pop
xor
push
daa
jge
jecxz
fdivrl
adc
mov
in
testb
push
cmp
movsl
mov
xchg
pop
adc
bound
inc
jge
subl
lea
and
shrl
or
fcompl
or
sub
mov
cmp
mov
xorb
xchg
repnz
clc
in
int
cmpb
pop
or
loopne
aam
add
les
incb
mov
pop
cmc
mov
imul
test
jbe
or
insl
incb
je
shll
dec
pop
mov
dec
pop
mov
into
add
es
inc
push
aam
pushf
adc
cli
int3
movsl
inc
add
mov
jge
in
lods
sub
mov
cmp
mov
and
ja
inc
mov
mov
sub
gs
movsb
push
and
cli
in
inc
cmc
out
xor
loop
add
mov
mov
and
xchg
jnp
dec
push
dec
xor
mov
xor
sbb
sbb
std
pop
incl
es
nop
sbb
fdivrl
jl
pop
adc
pushf
xor
cwtl
jno
mov
fs
insb
outsb
sub
mov
ja
imulb
or
lods
mov
lret
dec
jns
sbb
incl
mov
or
mov
xor
mov
dec
lret
push
jo
xchg
popf
or
pop
test
or
mov
xchg
and
sub
xlat
scas
mov
mov
push
xchg
scas
pop
xlat
dec
or
ljmp
sti
in
loopne
out
fs
pop
inc
mov
aad
xchg
adc
mov
push
sub
fisubs
setl
aaa
mov
mov
xchg
in
push
jae
pop
sbb
xchg
testl
mov
adc
dec
int
enter
pop
in
dec
movsl
pop
out
or
stos
aad
lahf
or
addr16
popf
js
xchg
pop
push
aam
inc
adc
outsb
jmp
das
ljmp
loopew
sti
add
mov
sbb
cmc
lret
add
shrb
pushf
xor
inc
sbb
adc
mov
lds
inc
push
fbld
jecxz
arpl
lret
and
into
cmp
outsl
or
jmp
adc
bsf
sub
mov
outsb
pop
ss
insb
rorb
mov
in
sbb
pushf
aaa
enter
dec
inc
arpl
test
lods
mov
xor
aad
pop
lds
cmp
adc
repnz
fs
adc
into
icebp
je
mov
add
fimuls
orb
cmp
aad
sbb
pusha
jne
adc
ja
fwait
insl
inc
cld
cmp
push
push
mov
shr
insb
dec
loop
sbb
mov
lcall
sbb
inc
ds
psubb
push
jmp
push
mov
or
jle
push
in
pop
rcrl
mov
in
shr
iret
roll
inc
cli
cmp
fildll
test
push
hlt
into
and
push
aas
pop
adc
cmpsb
or
pop
mov
out
mov
pop
jb
pop
adc
push
scas
push
mov
addb
push
xchg
mov
jmp
mov
dec
aaa
in
mov
aaa
movsb
outsb
mov
dec
imul
inc
cmp
xchg
xor
cmp
or
jle
sbb
cs
popa
pop
mov
test
ret
xchg
scas
push
mov
fcmovnbe
dec
stos
loop
mov
popa
je
inc
and
sub
sub
adc
test
call
push
xor
js
sub
sub
adcb
inc
cmp
mov
stos
add
hlt
jns
out
inc
add
loop
dec
mov
sbb
rolb
cld
pop
sahf
jne
push
sbb
daa
add
popf
push
sbb
data16
roll
add
or
dec
lcall
add
xchg
sub
push
cli
imul
stos
dec
mov
push
scas
or
cmp
add
jecxz
dec
inc
jno
cmpsb
addr16
cmp
pop
pop
sub
notb
movsl
fmul
add
nop
sbb
shlb
lret
inc
jae
push
rorb
outsb
pop
popa
inc
mov
test
mov
jl
fstpt
out
mov
push
jp
call
scas
mov
les
jp
xor
outsl
mov
xor
mov
sbb
in
pop
jno
sbb
testl
mov
dec
fists
je
daa
in
sbb
sbb
mov
gs
es
jge
mov
mov
mov
popa
fnsave
inc
adc
mov
fs
dec
scas
xor
incl
mov
or
nop
in
add
or
xchg
mov
out
test
sar
mov
loope
fwait
pop
call
add
aam
mov
push
lock
movsl
sub
cli
inc
mov
dec
sbb
mov
mov
dec
mov
push
leave
loopne
or
jge
xchg
pop
les
mov
std
mov
lcall
mov
inc
enter
jns
cmp
mov
push
push
xchg
or
imul
ret
sub
fisubl
cmc
dec
or
adc
inc
xchg
shll
xchg
xor
fldenv
sbb
or
scas
dec
add
cmp
movzbl
mov
or
clc
mov
push
mov
fwait
mov
xor
call
push
pop
jnp
jp
addb
xor
mov
rorb
xchg
jbe
imul
and
fists
add
cwtl
loop
mov
mov
cmp
jg
in
xor
add
dec
sbb
push
cmp
rcl
sub
sub
sub
or
push
fcmovb
out
adc
pushl
mov
loopne
add
test
test
imul
jne
mov
xchg
rcrl
lea
xor
test
push
test
out
std
pop
loop
add
cmp
pop
cmc
or
out
inc
jmp
fstl
jge
mov
pop
mov
or
icebp
pop
imul
rcrl
xchg
and
jns
fbld
scas
xlat
aam
and
addr16
lock
shrb
lcall
addr16
jecxz
fstl
inc
in
cmp
pop
cmp
mov
push
jg
iret
sahf
cli
adc
sbb
jbe
mov
je
sbb
insb
ss
stos
popa
lods
sub
sti
sar
push
fs
pop
cmp
jne
pop
or
sub
out
dec
xorl
nop
nop
in
adc
add
or
xor
jmp
pop
cmpsb
lds
outsl
fmulp
jmp
mov
popf
les
push
inc
add
mov
and
lea
cmpsl
xorl
test
js
cld
xchg
xlat
aam
popf
fidivl
pop
cltd
cmp
test
fmull
aaa
mov
sbb
and
jbe
fdivrl
and
mov
cli
pop
sahf
rclb
pop
and
outsb
fmuls
jbe
adc
sub
lcall
mov
pop
push
mov
push
mov
xor
push
lret
mov
pop
mov
cmp
sbbl
pop
out
or
aam
sbb
call
fwait
loopne
fcmovu
fcompl
insb
sbb
push
aam
mov
or
xchg
das
cmpsb
pop
cs
iret
dec
pop
sub
pop
jl
mov
mov
mov
scas
pop
xor
or
fimuls
cmpsl
xor
into
mov
inc
ret
inc
adc
js
pop
dec
ret
lahf
dec
jp
adc
sub
gs
inc
push
cs
jp
aas
mov
addr16
fdivrl
push
out
pop
mov
xor
pop
xchg
sub
mov
aad
dec
lret
divb
out
dec
jge
inc
jae
mov
sub
je
mov
push
xor
out
mov
enter
test
adc
xchg
xor
mov
lods
xor
or
sub
mov
or
jo
sub
movsl
ljmp
adc
out
or
scas
push
add
pop
cmp
adc
mov
inc
jge
mov
les
jle
hlt
or
push
jg
xor
mov
clc
xchg
xor
pop
sbb
inc
in
jo
faddl
sub
pop
and
xchg
mov
mov
add
rol
loope
mov
test
jne
jge
add
jnp
dec
cmp
or
ja
and
mov
mov
xchg
int3
mov
pop
pop
cmp
cmp
ficoml
adc
mov
rcrl
and
adc
mov
leave
daa
fisttpl
add
jmp
clc
xchg
jno
fsub
or
int3
jb
pop
xchg
fisubrl
add
mov
dec
cmpsb
push
mov
fistpll
imul
fwait
bound
mov
in
orb
js
cwtl
xchg
mov
scas
xchg
je
jg
xchg
or
add
in
pusha
cmp
inc
jl
and
pop
stos
pop
call
mov
sbb
sub
mov
xor
jg
ds
xlat
adc
out
arpl
or
icebp
mov
pop
mov
loope
xor
inc
or
lods
imul
jno
mov
stos
jne
lea
iret
jnp
test
cmc
mov
imul
scas
xchg
inc
inc
jp
scas
sahf
lods
sbb
jb
sbb
cmpsb
xchg
imul
movsb
cmp
sub
addr16
fstps
pop
lods
adc
nop
or
ret
cli
repnz
dec
cmp
repz
push
inc
cmp
imulb
xor
mov
ss
pop
mov
sbb
pushl
in
mov
iret
sbb
insb
or
or
xchg
leave
cmpl
orb
js
je
pop
not
cmp
pushf
and
xchg
inc
or
pop
cs
xchg
cmpsb
jg
push
cwtl
xlat
pushf
push
jbe
jbe
idivl
out
jo
loope
adc
lds
mov
ret
mov
int
out
ja
dec
arpl
test
or
push
lret
adc
mov
xlat
jb
int3
mov
jbe
lds
rclb
rcrb
nop
push
push
and
popw
decl
fiaddl
stos
inc
imul
stc
mov
mov
cmp
sub
jae
insb
mov
mov
mov
fstpl
lock
mov
mov
out
add
and
jmp
and
add
in
hlt
icebp
push
cmp
test
mov
mov
in
pushw
cwtl
or
mov
loop
push
sbb
out
iret
jae
sarb
xor
cmp
lds
ja
jae
in
dec
pop
push
dec
in
jmp
sub
pop
stos
jmp
pop
xchg
fcmove
sbb
sub
sbb
fdivrs
ret
and
mov
dec
cli
out
fwait
jg
and
push
mov
mov
push
lods
xchg
jl
push
popa
clc
mov
push
xchg
xor
stos
fsubp
push
fs
sbb
adc
jo
filds
xlat
xorb
ficomps
pop
fldenv
pop
sub
fstl
clc
fwait
dec
loope
mov
inc
push
les
or
mov
outsb
into
push
inc
mov
ret
push
and
sbb
shlb
sbb
mov
mov
fimull
cmp
pop
inc
imul
xchg
add
xchg
dec
cmp
pop
mov
mov
fiadds
stos
or
pop
adc
xchg
mov
mov
dec
enter
fildll
insl
adc
or
sahf
xor
ds
mov
lahf
rcll
xor
add
sbb
insl
loope
mov
testb
movsl
int3
mov
mov
mov
call
and
pop
mov
and
xchg
mov
sub
mov
icebp
xor
jmp
lock
dec
jb
or
int3
or
shll
mov
into
jecxz
mov
repnz
add
jo
jbe
push
push
mov
fs
stos
sahf
inc
subb
cwtl
sbb
cmpsb
push
inc
test
adc
sub
imul
adc
or
pop
shlb
lods
add
add
cld
jle
pop
jp
pop
or
cmc
repnz
loopne
add
jecxz
mov
repnz
jo
testb
dec
cmp
ret
bound
sti
js
subl
jecxz
pop
shll
bswap
mov
sub
int3
insl
das
adc
mov
adc
jmp
push
pushf
and
stos
cs
in
inc
sbb
daa
mov
fiadds
dec
push
sahf
dec
cmp
push
xchg
xor
in
frstor
scas
and
mov
in
mov
push
cmp
mov
dec
sub
cmp
int3
jns
sub
ror
lods
mov
sbb
insl
and
aas
fsubl
push
mov
test
arpl
insb
cmp
or
jbe
int
addr16
pop
mov
or
xchg
pusha
xor
test
stos
data16
jge
adc
outsl
push
ljmp
ret
aad
lds
mov
sbbb
jecxz
movsl
scas
nop
imul
sahf
addr16
cmp
xchg
lret
mov
in
dec
pop
fidivrs
cmpsb
jo
xorb
sahf
and
xchg
sahf
int
lret
pushl
mov
lcall
aam
xlat
pop
call
jge
pop
flds
sbb
popf
out
inc
ret
dec
cmp
ja
inc
inc
outsb
sub
inc
dec
mov
or
in
aas
nop
mov
xor
lret
mov
jle
nop
pop
mov
addr16
aam
fisttpl
mov
or
pushf
gs
cmc
ret
cmc
ret
jmp
loopne
ds
sbb
pop
push
mov
cltd
stos
aam
cmpsb
pop
movsb
lret
or
mov
dec
or
xor
push
fidivrs
jle
jb
adc
leave
add
xchg
pop
aam
lds
jno
cmp
dec
out
adc
test
call
adc
mov
xor
sub
mov
cmc
or
xor
outsl
in
je
out
mov
loop
les
sarl
push
jg
iret
cmp
rclb
loope
jge
xchg
jnp
sbb
addb
push
rcl
sarb
stos
mov
fildll
jbe
cmc
adc
ljmp
and
inc
add
sbb
repz
scas
jmp
stc
mov
inc
inc
sub
push
pop
or
pop
xor
jmp
jmp
add
test
jae
fwait
dec
push
clc
int3
pop
popa
jo
loop
sub
inc
testb
ljmp
imul
xchg
ficomps
cmp
inc
sbb
testl
pushf
addr16
das
pop
rcl
push
lods
inc
mov
push
sarb
daa
and
mov
ljmp
or
pop
cmpsb
push
lds
test
mov
adc
cs
mov
addr16
inc
cmc
mov
data16
fld
les
aas
mov
mov
ds
shlb
sahf
pop
cld
rcll
adc
push
mov
dec
mov
jle
sbb
push
aam
stc
xchg
pop
fldt
sub
jge
mov
inc
push
bound
addb
mov
movsb
mov
cmc
jns
adc
xor
aad
jmp
test
incl
in
jge
xchg
fs
push
dec
std
push
adc
je
shl
and
pop
inc
pop
fiaddl
jo
leave
cmc
xchg
pop
stos
call
sub
or
fs
dec
push
mov
in
push
inc
mov
dec
mov
es
pop
and
inc
loope
lods
jp
add
lcall
imul
out
dec
lcall
pusha
outsb
push
lods
push
cmp
rol
sub
add
or
mov
push
push
aad
mov
xor
fiaddl
test
mov
std
decb
js
gs
les
add
and
fwait
push
push
pop
jge
in
in
push
add
xchg
cmp
inc
out
cmp
xchg
int3
jmp
mov
in
jecxz
test
adc
je
std
bound
lret
mov
jbe
xchg
rclb
and
daa
mov
icebp
and
sti
inc
add
push
jae
fstl
nop
add
mov
outsl
dec
testb
rolb
popa
mov
cmp
xchg
xchg
test
cmp
mov
adc
sub
add
sti
mov
fstpl
dec
xor
mov
sub
jecxz
ret
mov
mov
pushf
fmul
outsl
sti
push
ret
pop
repnz
dec
insb
and
or
push
and
dec
repz
stos
mov
mov
pusha
pusha
and
push
lds
test
popf
pop
xor
rcrb
aad
sahf
push
out
fldenv
jecxz
loope
or
or
xchg
jns
loop
rclb
negl
xchg
inc
mov
mov
jne
imul
pop
pop
mov
sbbl
mov
loop
icebp
das
cld
rol
xlat
mov
iret
xchg
gs
add
xchg
inc
fsubs
filds
decb
mov
loopne
gs
push
or
iret
pop
xor
jp
arpl
in
mov
xchg
xchg
out
cmp
incb
roll
jns
push
lahf
fldenv
adc
and
ljmp
insl
es
pop
call
mov
lahf
jmp
leave
adc
cmpb
fcmove
jbe
sahf
or
xchg
pop
outsl
xchg
push
mov
js
dec
cmp
jne
inc
orb
fnstsw
fnstcw
or
cwtl
iret
daa
pop
mov
xchg
push
subb
scas
stos
xchg
ds
lods
scas
sar
jmp
dec
int
ret
xlat
push
repz
mov
les
mov
sbb
test
jns
or
pop
xor
sahf
mov
lea
and
sbbb
xchg
cmp
sub
push
lods
shll
divb
xchg
mov
mov
cmc
inc
in
sbb
jp
gs
enter
jns,pt
add
pop
ds
roll
xchg
jg
out
fwait
or
fiaddl
or
mov
adc
stos
addr16
mov
sbb
push
cmpsl
mull
add
test
negl
popf
mov
outsl
lcall
inc
es
pop
add
push
lds
cmpsl
jno
cs
inc
shl
sbb
test
je
cmc
xchg
jle
imul
adc
es
lock
lret
mov
jb
push
jle
xchg
icebp
hlt
int3
pop
stos
adc
inc
mov
cmp
ret
lret
pop
shll
outsl
icebp
scas
hlt
jge
scas
loop
cmc
jb
stc
test
mov
scas
dec
insl
inc
xchg
push
lds
ljmp
insb
lahf
mov
jbe
jb
sbb
out
fisubl
les
hlt
cli
cmp
mov
mov
lods
nop
popf
mov
or
sub
adc
adc
pop
push
into
add
imul
or
outsl
arpl
cld
test
mov
push
mov
mov
pop
mov
aad
inc
sub
lods
inc
loopne
push
mov
repz
xchg
mov
sub
je
das
repnz
dec
bound
lds
int
lds
mov
adc
pop
imul
test
dec
mov
ficomps
dec
inc
loopne
lret
loop
shll
jge
jae
jno
pop
fwait
mov
inc
mov
in
add
xchg
adc
cmp
out
mov
mov
sbb
or
ss
movsb
and
mov
imul
test
lret
in
inc
sti
xchg
push
pop
jecxz
push
sbb
or
xchg
ds
xchg
lods
xchg
out
inc
or
pop
add
sub
inc
cmp
sub
arpl
push
push
cmp
mov
fildll
fcoml
sbb
loope
je
cli
pop
sbbl
mov
or
sbb
add
and
les
mov
enter
insl
ss
add
xor
test
and
push
sarb
adc
adc
sbb
sarl
leave
sub
xor
mov
jae
xlat
cwtl
pop
iret
iret
ret
lock
xor
in
dec
sbb
into
lcall
mov
mov
aad
mov
adc
adc
push
mov
popa
sbb
fmuls
adc
sti
mov
cmp
sub
xor
test
add
inc
push
push
push
test
dec
ds
push
cs
mov
dec
add
pop
shr
cli
shl
push
dec
call
mov
add
idivb
mov
adc
imul
sub
jp
pop
pushf
mov
fisubs
sub
fsubl
dec
rcll
xchg
push
jo
or
inc
data16
and
sbb
sti
stos
jmp
add
jne
add
sub
das
ret
dec
gs
movb
push
fcoml
mov
add
clc
fistl
out
ret
adc
mull
sub
mov
pop
mov
aaa
sub
iret
sub
fiaddl
jne
imul
data16
out
repz
add
outsb
cmpsl
mov
out
imul
mov
bsr
mov
std
bound
mov
and
xchg
arpl
or
dec
fmuls
in
stc
in
sahf
test
arpl
add
and
mov
dec
push
loop
jmp
std
lret
jns
and
subb
sbb
addr16
aas
xchg
arpl
ds
inc
iret
andl
mov
sbb
sahf
stos
adc
push
jbe,pn
flds
lea
ss
arpl
insb
leave
in
stos
or
fsts
lahf
mov
js
movsl
test
pop
test
push
xor
xor
dec
jge
jbe
push
fstpt
or
mov
sub
mov
jle
add
nop
jmp
add
xor
push
jp
adc
addr16
xchg
adcl
xchg
pop
andl
lcall
cmp
adc
dec
cmpsl
inc
je
push
scas
imul
rcr
and
pop
loopne
inc
aam
repz
std
inc
xor
sbb
dec
pop
push
pop
add
cld
inc
or
sub
scas
fistl
in
test
dec
test
cltd
enter
push
add
mov
and
and
xchg
lds
mov
and
xor
into
inc
test
gs
sbb
shr
je
xchg
cs
lock
xchg
lock
cmp
xchg
cmp
jns
cmp
lret
stos
and
imulb
mov
mov
mov
movsl
xor
ja
sub
add
and
jmp
mov
cmp
cmp
aam
lods
into
and
jle
or
inc
shlb
cmp
ds
mov
loop
push
jp
mov
mov
xchg
adc
imul
inc
inc
xchg
mov
orl
adc
adc
mov
add
test
jb
rorl
pop
imul
cmp
jl
repnz
and
xor
rcrl
pop
negl
lret
roll
loopne
jmp
jl
mov
fisubrl
in
jl
sbb
roll
push
ljmp
repz
pop
loop
inc
mov
mov
aad
mov
fnsave
leave
push
aam
xor
sbb
cltd
push
sbb
push
mov
loopne
orb
and
pop
cmc
xchg
mov
lahf
movsl
jo
cmp
scas
rcrb
adc
bound
jecxz
fcmovnb
xchg
addb
outsl
inc
xor
daa
or
add
lea
pop
scas
cmp
push
insb
mov
jb
sub
adc
xlat
xchg
or
mov
in
shll
mov
jg
and
push
fcomps
pop
iret
cmpsl
dec
mov
loopne
inc
wbinvd
mov
xlat
ljmp
pop
mov
xchg
out
or
sub
inc
fistl
in
hlt
and
lock
mov
mov
jp
cli
cmc
in
xchg
outsb
lcall
ss
ja
stos
cmp
lods
cld
mov
je
push
jg
inc
repnz
cmp
cmc
popf
adcl
push
and
pop
enter
clc
inc
lcall
inc
repz
shlb
imul
repnz
fsts
or
cmp
add
xor
sub
lods
jge
jne
add
xchg
movsl
fisttps
dec
mov
fs
xchg
insb
bound
ja
mov
inc
xorb
call
lods
test
jo
or
jmp
add
idiv
jb
lds
xor
subl
push
and
loopne
inc
add
mov
imul
mov
popf
popa
xor
fbstp
clc
insl
mov
pop
lods
fxch
fs
jno
insl
dec
mov
stc
daa
sbb
rcrl
inc
push
or
fidivrl
jge
stc
shrl
fcom
sbb
jno
std
lahf
jmp
inc
xor
xor
and
jp
stos
jae
test
cmp
jae
adc
mov
jecxz
inc
loop
inc
sahf
mov
mov
add
push
test
xlat
repz
loope
subl
test
popl
jne
jno
sub
jnp
lds
lcall
pop
xor
test
dec
pop
xor
test
sub
pusha
sub
or
mov
cmp
dec
popf
fdivrl
cwtl
cs
mov
mov
xchg
je
jae
pop
jle
out
cwtl
xchg
rclb
push
mov
xor
bound
inc
lahf
je
std
xor
repnz
and
nop
and
sbbl
push
gs
lret
sub
sbb
adc
mov
xchg
aam
rcr
cld
sbb
lods
cli
sar
cmp
pop
out
add
cmp
icebp
stc
mov
dec
xor
push
add
push
leave
es
hlt
mov
dec
inc
cmp
inc
jnp
push
mov
inc
cwtl
push
pop
add
popf
in
int
jecxz
out
popa
cmp
jecxz
sub
adcl
inc
jmp
mov
fwait
xor
mov
xchg
push
loopne
mov
mov
data16
imul
jecxz
sbbb
test
jb
ja
jmp
sub
inc
stc
decb
sub
xchg
pop
scas
out
mov
icebp
pop
or
pop
repnz
int3
cmp
push
add
test
mov
stos
push
cmp
push
dec
cltd
sub
pusha
pop
clc
add
xlat
xchg
sbb
mov
pop
mov
mov
lahf
sbb
leave
inc
ja
in
pusha
outsb
ljmp
popa
es
mov
sbb
arpl
pop
loop
inc
test
data16
xor
dec
in
push
pop
inc
subl
lcall
loopne
rol
loop
out
sub
outsl
enter
fwait
push
xor
cld
mov
push
sbb
ljmp
mov
lds
or
loopne
pusha
lds
sahf
mov
pop
hlt
lock
inc
bound
push
adc
or
adc
lock
and
sub
push
jp
clc
aam
mov
enter
sub
xchg
in
lea
es
test
fsubl
into
push
ds
mov
push
ja
loop
lea
test
xor
mov
out
loope
inc
sbb
in
hlt
lods
subl
mov
rcl
imul
and
je
push
ret
in
iret
inc
and
push
inc
clc
jbe
pusha
and
stc
out
les
into
lret
jge
aas
mov
pop
xchg
repz
push
dec
and
jecxz
jbe
jns
shll
cmp
push
cmpsl
cmc
push
jno
pop
jecxz
sti
jp
inc
mov
rcrl
lods
mov
mov
xor
pop
xchg
inc
xchg
hlt
push
imul
repnz
adc
fiadds
push
out
ss
xchg
sbbb
leave
pop
jmp
xchg
fists
push
sbb
ds
push
pop
or
scas
rcr
xchg
sub
jo
pop
addr16
and
jecxz
mov
pusha
dec
pop
lock
fcompl
add
mov
xor
gs
sbb
pop
mov
lods
stos
pextrw
ds
xchg
dec
lcall
push
sbb
aas
outsl
psubusw
pop
adc
sbb
pop
rclb
push
ret
mov
xchg
push
inc
es
rolb
testl
and
shlb
and
cs
out
push
sahf
daa
mov
clc
ret
repz
pop
cmp
mov
jecxz
mov
stc
pushf
leave
or
push
imul
push
push
xor
jne
xchg
imul
popa
test
adc
mov
lcall
add
inc
repnz
ja
test
lds
lock
lcall
pop
insl
stos
insl
mov
and
mov
sbb
out
sub
repz
int3
sbb
arpl
out
outsl
out
push
call
jbe
sbb
xor
sbb
push
iret
ret
test
fwait
pop
jg
ja
imul
aam
mov
sbb
push
lret
aaa
jmp
cmp
fistps
mov
fwait
test
mov
mov
pushf
mov
cmp
ja
pop
ret
test
int
js
sub
xor
cmp
outsb
and
push
and
push
dec
jp
enter
cmp
pop
dec
iret
adc
mov
adc
testb
or
push
inc
and
push
mov
outsl
pop
push
fisubl
or
cs
xorb
mov
sub
roll
hlt
sti
sub
sbb
jp
leave
loope
fmull
pop
xchg
mov
xor
icebp
push
test
push
test
jmp
mov
fld
ret
movb
mov
cmc
shlb
sti
in
int
xor
push
imul
cmp
jae
filds
xlat
jge
jbe
fisubs
int3
call
cmp
lods
push
loope,pt
unpckhps
sub
aam
mov
outsl
gs
ja
xchg
push
mov
jg
into
js
stos
add
loopne
sbb
mov
pop
hlt
repnz
pop
pop
adc
cs
add
lods
insb
test
lahf
push
jmp
mov
jo
jmp
dec
inc
enter
jns
push
sbb
out
mov
les
cli
lahf
mov
cltd
sbb
pushf
jnp
cmp
inc
mov
lock
push
shlb
and
jne
iret
icebp
int3
push
jnp
imul
mov
ja
lods
cmp
pop
lahf
sub
outsl
and
dec
je
push
shr
stos
je
inc
jno
inc
push
popf
jb
loopne
hlt
push
pop
mov
push
xchg
or
or
in
ljmp
movsb
aam
loope
xchg
push
mov
cmp
or
inc
lcall
dec
in
add
add
insb
xor
aaa
cmpsb
roll
inc
fwait
data16
stos
xor
jae
lea
xchg
jmp
sub
mov
pop
sbb
int3
pop
ficoms
mov
scas
stc
cs
loope
inc
fistpl
imul
jmp
mov
cs
jl
push
je
xor
push
push
cmc
pop
jns
aas
mov
popf
adcb
repnz
jb
xchg
xchg
dec
mov
dec
xchg
cs
ja
sbb
and
lcall
push
lods
ja
dec
dec
cld
aas
mov
fcompl
sbb
xchg
fdivrs
in
push
sarl
roll
enter
adc
mov
das
xor
push
sbb
int3
push
push
mov
mov
fildl
fisubl
jecxz
lds
insl
mov
pop
jmp
stc
cmp
fcmovu
mov
cld
stos
cmp
lcall
lret
mov
xchg
daa
loopne
cmp
jmp
enter
loope
dec
pop
ret
rolb
aaa
cmp
mov
lret
pop
call
shrl
pop
outsb
mov
xchg
jo
lods
push
rcrl
and
or
movsl
imul
loope
and
cmp
test
adc
dec
fidivs
mov
fdivs
sahf
pop
lahf
mov
int3
daa
mov
sbb
lods
scas
vpunpckhbw
jle
sbb
pop
pop
jle
pushf
lods
repz
cltd
cmc
pusha
shlb
push
sbb
add
scas
xchg
aad
xchg
xchg
clc
jnp
cmpsl
das
cmp
cmc
cltd
push
mov
loopne
lcall
sti
sbbl
dec
mov
decl
mov
xchg
mov
repz
lret
mov
and
xchg
dec
dec
into
push
out
xorb
cltd
push
mul
lods
jge
xorb
mov
fmuls
adc
add
fucom
je
addb
cmpsb
or
fists
xor
clc
lock
add
loope
lret
jae
mov
std
jnp
mov
and
ret
leave
js
cld
rorl
jg
cmpsb
xchg
lahf
arpl
mov
repz
cmp
mov
push
jg
rorb
dec
and
or
and
xor
iret
sbb
int
scas
sbb
std
js
stc
xor
shrb
fchs
push
adc
pop
mov
cmp
ror
ret
inc
push
mov
daa
mov
xor
mov
lea
mov
out
repnz
mov
cmp
mov
inc
xchg
cmp
test
xchg
adc
out
outsl
subl
mov
repnz
xchg
jae
dec
out
testl
jb
pop
out
pop
sahf
cld
les
jg
leave
cld
movsb
fcmovbe
pop
movsb
mov
dec
jne
subl
movsl
adc
jno
push
pop
lods
push
push
mov
sbb
int
cmp
xchg
lahf
xchg
mov
mov
cmp
sub
fcompl
add
data16
sti
dec
and
notb
xchg
stos
insl
xchg
aad
pusha
mov
adc
outsb
ret
xlat
add
ds
and
jno
jl
adc
sbb
ja
scas
xchg
xchg
add
mov
rolb
test
dec
xchg
mov
xchg
or
lret
add
xchg
cmc
in
mov
adc
movsb
xchg
cmp
mov
mov
mov
dec
dec
enter
jp
or
inc
imul
push
ret
dec
es
mov
xchg
sub
rcll
pop
sti
mov
fucomi
adc
daa
push
cs
jmp
jo,pt
repz
roll
cmp
mov
xor
popa
andl
push
cmp
pop
sbb
sbb
or
ret
aad
das
in
xchg
dec
jg
mov
adc
xor
mov
mov
inc
rclb
jo
fildl
divb
into
xchg
gs
lcall
movb
cmp
out
int
jmp
inc
loop
push
mov
mov
adc
xor
mov
inc
pusha
adc
xor
xor
push
lods
js
out
push
sbb
jns
cmp
inc
mov
ss
lods
out
jmp
adc
xchg
and
cmpsl
mov
fiaddl
mov
in
es
dec
dec
cmp
cmp
pop
movsb
cs
xchg
pop
subb
mov
fbld
sbb
cmpsb
in
and
add
or
aam
loope
out
cmpsb
or
push
cld
inc
cmp
push
push
stos
lret
jecxz
out
mov
mov
pop
cld
das
int
jp
test
loop
aam
ret
rcrb
insb
push
mov
inc
jp
xchg
cmc
shrl
aaa
cmp
outsb
inc
cmp
shll
lret
xchg
adc
lods
xor
adc
or
cs
adc
pop
out
and
nop
data16
jp
mov
es
les
mov
xchg
shr
jg
aaa
out
leave
cmp
add
sub
and
jnp
lret
lods
jo
call
inc
aam
sbb
popa
sub
push
rcrl
mov
mov
and
push
cmpsb
jl
into
frstor
mov
xchg
cmpsb
js
jbe
subb
out
enter
mov
cmc
out
mov
test
dec
call
and
int3
ljmp
fisttpll
aas
sbb
xor
cmp
sbb
lods
xchg
call
or
hlt
popa
nop
outsb
jbe
sub
cmpsl
jae
movl
in
stos
cmpsb
sarl
push
ja
fstp
dec
sarb
mov
and
lods
gs
notb
xor
dec
sbb
jno
fidivrs
sub
sarb
mov
dec
int3
loopne
xor
addr16
adc
inc
cmp
mov
push
arpl
addr16
or
shlb
sbb
mov
dec
testl
fidivl
xchg
sub
inc
or
fcomps
loop
dec
or
mov
jge
push
add
aas
lcall
out
pop
mov
jp
shl
int3
incl
or
xchg
jne
mov
loope
sbb
lret
mov
jp
mov
js
xor
cli
je
adc
jge
push
push
rclb
outsb
jle
add
push
xchg
and
push
pop
push
in
sbb
mov
mull
and
xor
sub
jg
and
mov
and
xchg
and
push
mov
outsl
mov
inc
pmaddwd
pushw
int3
push
or
outsb
in
pop
jl
mov
int3
orb
loope
sub
imul
outsb
pop
in
push
add
jge
hlt
imul
sbb
fstpt
push
inc
test
and
ss
enter
pop
adc
pop
sub
out
mov
aam
ljmp
outsl
sbb
push
aad
jl
mov
cmp
jecxz
dec
adcl
cmpsl
shlb
aam
loopne
sub
ljmp
loope
push
repz
cmp
orl
mov
pop
inc
jge
into
lock
cmp
sbb
or
mov
push
pop
or
lahf
in
js
sub
ja
xchg
movsb
pop
jne
mov
mov
add
sbb
sub
nopl
xchg
adc
or
arpl
xor
inc
es
pop
jnp
inc
dec
mov
cltd
sbb
push
mov
scas
add
in
out
jne
push
jp
add
mov
sub
scas
add
cmp
cmpsl
mov
jecxz
ds
dec
xor
pop
xchg
lea
jnp
mov
rcll
pop
mov
pop
xor
loop
jg
test
sbb
mov
jne
testb
cmpsl
lds
ret
mov
xchg
xchg
call
jl
in
mov
dec
jae
arpl
inc
sbb
cmp
popa
ret
mov
and
ljmp
enter
out
push
adc
ss
jb
mov
ljmp
sbb
rcr
int
sub
leave
dec
loope
pop
adc
add
jg
lds
push
scas
dec
shll
gs
inc
jg
sbb
bound
xchg
cmp
and
ja
and
fidivrl
jl
fsubl
adc
repnz
pop
jno
popf
lods
rcrl
sub
adc
mov
cli
adc
push
and
and
mov
cmp
jnp
mov
jmp
or
fidivs
cmpsl
mov
shll
xchg
sar
ror
pop
fisttps
xchg
data16
mov
hlt
fisttpll
push
es
rolb
sub
cmp
sbb
mov
mov
mov
jecxz
push
jle
cmp
inc
xchg
xchg
or
pop
push
ljmp
cs
pushaw
mov
out
xor
push
mov
cmp
repnz
lods
mov
xchg
idivb
fistps
cld
xchg
stc
sahf
xor
pop
mov
pusha
popa
xor
dec
cwtl
fwait
stos
ret
cmp
pusha
sub
jle
and
dec
cmpsb
add
cmpsl
adc
sbb
and
jb
sub
cmp
push
fs
enter
lret
push
ficompl
push
xchg
subl
push
shlb
cld
pop
push
std
or
movsl
enter
out
add
das
shll
push
adc
repz
mov
mov
jno
xchg
xchg
cmp
add
cltd
mov
lcall
jp
les
adc
fldt
and
pop
mov
mov
xchg
in
xor
pop
mov
enter
ljmp
out
outsl
mov
jno
or
mov
sqrtps
aas
xchg
jnp
test
xor
mov
sub
push
jp
inc
mov
rcr
loope
jnp
and
sbbb
add
iret
cli
pop
sub
mov
lahf
jne
lcall
out
pcmpeqd
loopne
pop
and
out
add
adc
orl
test
fsubr
jmp
jg
or
mov
sbb
imul
mov
negb
lret
sbb
mov
sbb
in
stos
cmc
mov
sub
out
dec
loop
inc
rcll
sahf
es
xchg
inc
inc
fidivs
jle
aam
in
ljmp
lret
scas
icebp
in
ja
ficoms
jp
jne
out
xchg
pop
push
lds
xor
mov
icebp
jle
push
cmpsb
fwait
mov
fisttpll
rcrl
test
cmpb
int
movsl
movsw
cmovb
test
lahf
mov
push
das
into
push
push
push
scas
and
inc
insl
inc
loop
jns
loopne
lret
mov
xchg
cmc
ss
loope
xchg
decb
cld
jle
fnstcw
jnp
cmc
or
mov
rcl
push
sub
dec
scas
out
xlat
bswap
jnp
add
jo
or
push
mov
testl
adcl
stos
cmp
xchg
jecxz
push
mov
sbb
pop
inc
fsubl
lods
bndstx
push
test
cmp
push
inc
pop
loope
cmp
enter
ret
and
insl
insb
adc
repz
dec
cmp
jb
pop
fcom
sbb
test
jecxz
sub
inc
cmc
dec
and
nop
mov
call
add
sbb
add
push
push
xchg
xchg
inc
mov
insl
aad
test
fpatan
cmp
in
mov
sbb
dec
scas
mov
sbb
inc
jge
sub
repnz
scas
adc
pop
dec
out
sub
jbe
clc
hlt
jp
or
aad
ret
pushf
inc
outsb
dec
pop
sub
mov
xor
sahf
cltd
int
sbb
in
and
loope
cmp
push
pusha
xor
xchg
aas
sub
mov
mov
push
roll
test
sub
js
sahf
mov
into
cmp
add
out
and
and
xor
add
pop
loope
adc
test
jne
clc
mov
ss
xchg
test
mov
jge
ficomps
js
lea
jl
test
dec
sbb
outsl
daa
push
mov
mov
call
addl
cmp
inc
pop
cwtl
movsb
repnz
inc
jmp
pop
cmp
mov
jae
pop
scas
mov
add
dec
jl
or
inc
repz
push
arpl
repz
nop
push
pusha
fs
icebp
loope
jecxz
add
lock
mov
or
lock
xor
dec
nop
hlt
mov
in
sub
dec
push
sub
pop
sbb
adc
imul
filds
sbb
mov
ja
test
idivb
jl
movsl
push
int
rol
call
push
pop
ljmp
pop
jecxz
andb
sahf
pop
adcb
mov
sarb
nop
or
sub
sbb
shlb
loopne
jb
lods
push
dec
outsl
loop
push
sub
cld
cli
aas
dec
in
or
scas
sbb
xchg
shlb
in
or
popa
fists
in
xchg
daa
xchg
int3
xor
cmp
shl
fwait
loope
pop
inc
gs
imul
std
in
sbb
std
jnp
and
and
popf
stos
sbb
ja
sbb
or
jne
mov
pop
cmp
jb
cmp
fs
in
push
insl
xor
mov
fldenv
jmp
mov
cwtl
jge
loopne
sbb
sub
movsl
xchg
push
mov
in
jbe
pop
sbb
out
xchg
pushf
bound
xchg
aaa
in
andb
and
xor
into
fwait
pop
call
sub
inc
fs
roll
mov
test
test
notb
inc
ss
insb
mov
lods
adc
stc
xchg
jno
jb
inc
add
mov
jo
pop
call
imul
outsl
lock
or
dec
or
ss
cli
jo
mov
sub
pop
and
push
pushf
adc
insl
dec
pop
lock
xchg
inc
pop
dec
inc
sbb
orl
add
add
hlt
mov
mov
inc
sbb
es
popf
lea
mov
mov
mov
shll
fisttpl
addr16
pushf
lods
cld
je
inc
sub
jge
and
in
dec
insb
addr16
pusha
cltd
push
mov
fistpl
add
mov
mov
inc
mov
stc
call
lds
cmp
jns
and
test
dec
cmp
xor
and
push
daa
mov
mov
jb
aaa
push
loope
sahf
sahf
insl
add
adc
cltd
icebp
js
repnz
dec
pushf
mov
leave
mov
popf
cmp
xor
dec
or
enter
sbb
sbb
add
ret
test
fsts
and
dec
pushf
sti
mov
mov
or
mov
stos
sub
shlb
hlt
shlb
fidivs
mov
sarl
sbb
inc
xor
mov
mov
inc
pop
ror
mov
xchg
test
push
sbbl
inc
xchg
dec
fisttpl
mov
jle
imul
daa
lret
inc
das
rol
sbb
xchg
clc
lahf
dec
mov
test
dec
mov
mov
inc
fmull
stc
mov
pop
xchg
lock
ljmp
push
gs
xor
jnp
lcall
xchg
cltd
inc
push
dec
xor
jge
and
mov
cwtl
push
fs
lret
xor
scas
pop
jp
or
cmp
mov
fdivs
add
aad
lock
pop
jl
stos
ror
mov
outsl
mov
jmp
sbb
ja
sbb
sti
dec
adc
adc
jo
xchg
ret
xchg
frstor
popa
les
out
and
sbb
push
xchg
cmc
or
fcmovu
cmp
addr16
mov
divl
sbb
or
pop
dec
fcompl
or
xor
dec
imul
out
hlt
mov
push
jne
xor
icebp
mov
insb
js
outsb
fnstenv
cltd
sub
and
call
add
dec
mov
inc
pop
leave
rcrb
xchg
lcall
imul
imul
int
and
push
jb
cmp
dec
loopne
add
dec
insb
rcrb
outsl
out
mov
cltd
fidivrl
mov
ljmp
or
mov
pop
cmp
inc
mov
movsb
sahf
stos
lahf
dec
pop
cld
mov
mov
pusha
fisttpll
icebp
jns
adc
nop
pop
jge
mov
xor
jbe
testl
loopne
xor
std
push
mov
stc
dec
loope
mov
jge
aas
pop
and
stos
test
cmp
in
roll
stos
test
pop
test
push
loopne
repnz
ds
add
ret
push
imul
cs
iret
jo
fnsave
sbb
lock
pop
jge
lahf
jl
das
ss
aam
lcall
outsb
inc
push
add
or
dec
je
pop
pop
sub
into
out
cmp
mov
ret
mov
fsubl
or
cli
mov
imul
add
mov
subb
xchg
xor
xchg
xor
and
mov
xor
xchg
xchg
pop
in
sarb
lods
test
xchg
jns
jae
xchg
adc
adc
lods
scas
push
idivl
mov
mov
inc
adc
mov
mov
lods
aas
iret
out
and
out
add
nop
xchg
push
push
ljmp
add
fadds
insb
mov
sub
mov
add
cmp
aam
adc
rcl
dec
and
ret
flds
je
sub
cmp
add
mov
jle
fisttpl
and
adc
popa
ret
cltd
mov
jl
push
jecxz
sub
jl
mov
and
push
sti
add
pushl
xchg
gs
les
or
es
lcall
mov
es
mov
jle
ret
icebp
push
aaa
pop
icebp
test
fisubrl
subb
cli
jno
call
add
movsl
cmpsl
fwait
testb
push
add
mov
sbb
xor
fdiv
fldl
xor
sub
insl
je
and
imul
test
data16
arpl
xchg
jne
sbb
xor
adc
int
add
mov
jb
jae
xor
out
cmp
pop
lea
add
arpl
ficompl
insb
lret
or
cs
dec
push
dec
mov
ficomps
jg,pn
leave
push
fwait
ret
ljmp
push
push
mov
push
jnp
notb
cmp
subb
notl
scas
cmc
addr16
and
lcall
xor
pop
cmp
popa
clc
cmp
mov
repz
sub
dec
mov
fadd
dec
pop
or
nop
push
xchg
xchg
pop
push
rcrl
pushf
sbb
mov
or
dec
or
pop
push
lret
sbbb
cltd
and
mov
idivb
js
or
or
stc
push
jmp
inc
in
pop
aaa
dec
and
pop
xchg
mov
iret
ds
pop
xchg
les
popf
loopne
push
mov
outsb
jge
and
enter
andb
xchg
out
lea
test
mov
movsb
leave
movsl
pusha
and
ljmp
pop
xorb
jl
jne
jns
rorl
sub
test
lret
sbbl
bound
adc
or
dec
movsb
divl
pushf
mov
ja
loopne
outsb
icebp
fcmovnu
cs
or
dec
inc
mov
jmp
sbb
cmp
lcall
clc
imul
lock
mov
push
scas
dec
hlt
pop
das
clc
pop
push
clc
inc
lods
sbb
das
cmpsl
sahf
das
or
mov
rcll
pminub
add
jb
je
aas
fstps
mov
pop
enter
pop
adc
dec
lret
push
popf
jmp
daa
or
repz
dec
xor
js
xchg
push
lahf
stos
punpcklwd
inc
scas
das
int3
xor
lods
or
or
lahf
xor
add
push
and
jge
xor
aaa
fsubs
mov
dec
mov
decl
cltd
inc
sub
movsl
cmp
jne
inc
popa
inc
sub
arpl
fldenv
imul
gs
insb
xchg
mov
hlt
inc
xchg
mov
aad
cmpsb
mov
inc
popa
test
inc
mov
not
or
mov
xor
jmp
enter
push
push
or
imul
add
ret
sbb
sbb
in
adc
mov
jmp
lds
aaa
dec
call
iret
icebp
push
push
lock
pop
and
pop
int3
or
or
or
xor
roll
mov
cli
sahf
fcoms
ds
pop
test
push
push
inc
mov
movsb
in
push
cmp
cli
out
lods
push
imul
mov
jecxz
cmp
iret
and
loope
nop
adc
int
loope
mov
lret
jl
jmp
enterw
and
mov
jmp
jb,pn
loope
stc
mov
adc
cmp
movsl
or
adc
fisttpll
icebp
or
jno
mov
cld
in
sarb
incl
xchg
out
xor
lea
jno
inc
inc
movsb
xchg
dec
pop
jge
lcall
and
ret
mov
jns
inc
push
cmp
in
mov
fwait
push
jecxz
push
test
or
jnp
mov
mov
cmp
subb
aaa
std
xchg
sbb
sahf
add
insb
lds
lret
mov
in
jge
in
push
push
inc
add
and
mov
dec
mov
dec
cmc
pop
movsb
es
pop
inc
lcall
cltd
imul
xchg
out
rcrl
outsb
iret
adcl
xchg
pop
push
pop
sbb
sbb
inc
orb
pop
aad
iret
lea
sarl
movsb
scas
mov
cmc
adc
mov
sbb
xor
das
imul
xor
aas
cs
rorl
xchg
push
ret
aad
testb
daa
repz
iret
dec
mov
xor
call
push
jg
xchg
sub
je
jp
mov
inc
pop
rcrb
jno
test
push
or
pop
inc
jns
insl
push
jnp
cmp
enter
or
js
cmpsb
addr16
out
in
das
frstor
adc
ret
in
push
mov
aam
ja
fidivl
ja
daa
or
shlb
mov
dec
cld
in
stos
dec
sub
in
adc
pusha
inc
push
aas
pushl
inc
call
push
adc
lret
or
push
and
sahf
lock
lret
sbb
ret
je
xor
shll
mov
inc
fidivrs
fwait
xor
cmp
addr16
sub
dec
mov
mov
pop
aad
repz
sbb
movsb
inc
stos
and
out
je
repnz
inc
add
sub
fmul
dec
aaa
mov
lock
jbe
pop
adc
js
and
cmp
push
movsb
mov
lock
test
mov
cmpsb
mov
sarl
cmpsl
cmpsl
pavgw
lahf
sbb
mov
orb
rolb
cmp
lea
and
jmp
mov
add
mov
in
arpl
pop
shl
cmp
and
xchg
mov
adc
stos
or
sbb
pop
sub
dec
jno
and
cmp
popa
dec
lods
and
push
mov
jns
cmp
push
jbe,pt
cmp
lahf
fisttpll
mov
and
xlat
xor
rcrb
sbb
jg
ss
icebp
and
mov
jbe
push
sub
mulb
nop
mov
ljmp
push
push
call
call
mov
sar
sbb
idivb
popf
sub
leave
shrb
aam
icebp
loop
pop
std
out
leave
sub
sbb
cwtl
stos
lods
out
mov
add
sarl
call
and
and
mov
sbb
jbe
adc
pop
mov
leave
imul
inc
das
xorl
js
addr16
cmp
xor
xchg
orl
jl
add
sbb
ffreep
fcmovb
scas
pop
push
imul
mov
pop
cwtl
divl
jae
dec
sbb
lcall
sarl
push
inc
pop
dec
out
leave
or
push
inc
mov
pop
faddl
aaa
std
test
or
adc
cmpsl
pop
sbb
mov
and
mov
in
je
pop
cwtl
repz
loopnew
shrl
add
jne
lds
dec
jecxz
xchg
push
mov
cwtl
addb
fdivrp
sub
mov
fdivrl
stos
sub
lahf
in
stos
lahf
or
stc
xor
push
jne
pusha
test
and
mov
fidivl
push
hlt
push
or
or
mov
jecxz
mov
fs
fcoml
sub
push
sbb
jmp
inc
sahf
mov
mov
out
jbe
push
outsl
push
mov
outsl
in
cmp
push
xor
mov
mov
popa
rorb
push
cmp
mov
xchg
adc
mov
fsubr
andl
lock
xlat
inc
jns
arpl
inc
sarb
or
add
cmp
mov
mov
mov
divl
insb
xorl
xchg
cmp
push
fldl
mov
add
insl
mov
ljmp
push
andb
dec
push
loope
push
popa
fdiv
adc
cld
cmp
mov
les
ljmp
xor
mov
out
in
xor
lret
movb
and
in
sbb
cmc
xchg
mov
rorb
jge
sub
fcoml
adc
rcll
push
push
sahf
stc
shll
rclb
and
repz
test
movsb
mov
inc
leave
push
ret
test
inc
jmp
cmp
mov
mov
test
xchg
jl
in
into
jnp
mov
rcrl
jne
stos
and
sbb
xchg
je
fs
inc
xlat
fwait
mov
push
pushf
stc
cmp
lods
in
mov
xlat
daa
lret
and
xor
dec
jg
adc
inc
gs
sbb
fwait
lods
mov
xchg
or
push
repnz
inc
mov
mov
sub
cmpsb
out
cmp
scas
cli
xchg
mov
mov
mov
push
mov
adc
aaa
idivl
or
or
adc
sbb
adc
nop
mov
inc
cmp
xor
xchg
lcall
inc
cmp
pop
frstor
inc
stc
cmpsb
icebp
cmp
leave
cmc
int
call
fs
jmp
scas
push
and
fcompl
ja
sti
push
hlt
popf
sub
shrb
add
add
addr16
testl
add
into
in
imul
mull
pop
jae
push
rorl
dec
loop
mov
loopne
push
test
lret
mov
je
aaa
jle
out
int
lcall
fistpl
add
push
arpl
fidivrl
mov
aas
cwtl
ljmp
je
mov
cld
adc
add
add
sub
gs
lods
cltd
lods
xor
aam
push
pop
dec
rolb
mov
pusha
inc
pop
dec
bound
jno
cmp
mov
int3
sub
pop
push
pop
push
out
aaa
es
fisttpll
add
cmpsb
adc
iret
adc
pop
dec
and
cmpsl
popa
xor
outsl
add
or
bound
sbb
jno
push
sbb
popa
repz
adc
inc
arpl
andb
andl
sub
adc
push
ficompl
out
mov
adc
jp
ljmp
js
leave
push
push
inc
out
test
adc
mov
rorl
adc
or
mov
call
es
rcl
and
mov
cwtl
add
xor
sbb
mov
js
jmp
in
sahf
add
jg
mov
mov
pop
fucomp
cmp
or
xchg
shr
xchg
ss
lret
iret
xchg
dec
mov
rorb
aad
dec
repnz
movsb
and
sbb
iret
insb
aam
jns
cmp
test
dec
mov
dec
push
aam
test
and
mov
fsubrp
add
js
cli
sub
mov
lock
fisubs
aam
hlt
cmp
mov
into
jge
cltd
pop
in
mov
add
and
push
inc
fsubs
jae
push
sarb
mov
mov
dec
pop
mov
scas
lahf
xchg
insb
arpl
bound
push
inc
movsb
aas
aam
popa
sar
ljmp
sbb
jnp
scas
push
push
mov
outsl
mov
xlat
dec
dec
adc
mov
push
mov
out
rcrb
daa
or
add
or
cwtl
sahf
ret
push
mov
push
mov
std
lcall
dec
test
or
jg
xchg
icebp
call
dec
dec
sti
mov
fmuls
and
add
add
mov
adc
enter
push
out
cltd
sub
and
xor
repnz
jo
enter
mov
mov
mov
cwtl
dec
and
add
xchg
test
or
or
mov
addl
inc
and
mov
je
lcall
ret
roll
push
test
mov
sub
jo
jecxz
enter
adc
mov
mov
clc
add
sbb
mov
mov
jmp
leave
mov
push
mov
rcr
aam
dec
scas
mov
out
jl
lock
push
leave
pop
push
xchg
scas
mov
sahf
in
mov
gs
adc
xor
divl
daa
orl
xor
ret
loop
rcll
das
jecxz
jo
nop
add
push
sbb
and
mov
adc
cli
xor
jb
cld
inc
call
or
repnz
out
cmc
pushl
pop
rcl
push
mov
dec
sub
sbb
xor
xlat
fisubs
inc
mov
arpl
imul
push
cmp
push
imul
push
or
cmp
filds
xor
jnp
push
insb
xchg
mov
dec
cmpl
lods
stos
or
pop
pusha
sbb
cli
rcrb
loope
cmpsl
aad
push
push
dec
addr16
in
pop
jg
xchg
xchg
lcall
mov
out
fldcw
jmp
jg
fwait
std
xchg
rcrb
xchg
inc
mov
or
mov
sub
int3
mov
inc
jbe
pop
sbb
pushf
cmpsl
or
test
inc
push
push
add
or
xchg
mov
push
sbb
idivl
jmp
popa
pop
ljmp
sub
fs
test
fistps
jle
push
js
mov
mov
inc
out
mov
outsb
xchg
cmpsb
pop
mov
stos
mov
mov
repnz
push
fwait
das
cltd
jmp
xor
mov
sub
add
imul
push
dec
bound
icebp
ret
cmp
or
movsb
mov
mov
mov
adc
or
ja
test
xor
cmp
lret
adc
call
or
jne
mov
and
int
imulb
inc
push
xlat
jecxz
xchg
cltd
rorl
jnp
or
roll
xchg
shll
or
add
mov
sbb
pop
pop
test
adc
pop
or
cld
lret
xchg
test
scas
dec
sbb
test
pushw
mov
pop
push
lahf
dec
or
jnp
push
xor
xchg
aam
sub
push
add
mov
pop
movsb
dec
adc
sub
je
scas
mov
bound
outsl
jno
xor
xorb
and
imul
jp
icebp
fcoml
out
jmp
std
lock
out
rcrb
js
rcrl
sub
inc
adc
sbb
mov
scas
jmp
mov
andb
adc
inc
cmp
cmpsl
bsr
out
jb
mov
mov
test
mov
shlb
dec
xchg
outsl
xchg
movsl
enter
push
push
incl
mov
hlt
addr16
ds
mov
jg
or
sub
jno
outsl
cmp
stos
mov
jbe
scas
das
xlat
out
ja
sbb
popf
in
rorl
ret
pop
adc
enter
sti
pushf
xlat
dec
pop
lods
mov
sub
divb
int
and
inc
cld
pop
mov
adc
sbb
add
dec
in
or
dec
popa
inc
sarb
pop
scas
mov
fisttpl
scas
or
lret
lods
ss
sbb
mov
dec
jns
xchg
mov
int3
mov
pusha
add
or
test
jno
fldcw
adcl
mov
xor
and
mov
pop
jmp
pop
dec
dec
adc
imul
pushl
addl
es
inc
push
inc
das
mov
shrb
add
pop
rorb
jns
out
fs
or
aaa
ja
clc
or
in
in
loopne
push
es
or
lret
or
add
push
lods
cmc
call
les
cmp
dec
stos
repnz
popa
lret
test
hlt
pop
pop
shll
push
int3
ficomps
xchg
jle
jg
xchg
mov
daa
movsbl
and
ret
pop
sub
jo
in
fsubs
jbe
xor
push
pop
push
test
outsl
insb
xor
sub
and
inc
cmp
cmp
shrb
shll
sbb
sbb
and
push
sub
imul
fmull
js
inc
les
xchg
jo
and
pop
or
xor
aas
test
inc
in
test
push
dec
bound
lea
jbe
fiaddl
mov
cmpsl
push
jmp
dec
pop
in
ret
mov
mov
enter
add
and
mov
xor
lea
pop
mov
movsb
pop
cmpsb
paddb
aas
pusha
lret
stos
popa
cmpsb
push
dec
rclb
cmpl
jbe,pn
out
adc
and
ss
lds
jns
jno
inc
lods
add
insb
mov
xlat
xlat
xlat
fcmovbe
xchg
mov
sub
push
icebp
cmp
jbe
outsb
adcb
jns
rcrl
inc
push
sbb
imul
jne
xchg
sbb
mov
mov
inc
shll
popf
mov
notb
test
add
popa
out
lods
adc
dec
clc
fs
adc
aaa
dec
mov
test
stc
push
movsb
push
aaa
mov
aam
fwait
jmp
lds
pop
push
xchg
inc
xchg
lock
mov
adc
imul
xchg
mov
leave
negb
lcall
sbb
pop
adc
iret
sub
xor
sub
mov
cmpsb
push
pop
std
adc
fdivrp
cmp
mov
das
xchg
mov
jb
jno
mov
aas
or
mov
adc
push
pusha
stc
daa
les
and
push
lret
in
in
insb
jl
bound
je
mov
aad
cltd
inc
fldenv
sbb
out
lret
shll
lret
mov
push
cs
testb
jmp
cmp
test
insb
aad
pusha
shrb
xchg
mov
dec
rorb
fsts
idiv
jge
cld
push
lods
pop
lcall
lea
or
mov
js
mov
aam
outsb
mov
cmovo
call
je
js
mov
bound
add
sbb
push
popa
mov
sbb
pop
ss
mov
fsubr
icebp
pop
fadds
push
inc
idivl
cs
mov
dec
xchg
negb
add
fwait
jmp
mov
and
cmp
mov
push
cltd
mov
lock
sub
mov
ss
push
push
int3
leave
mov
in
pop
int3
mov
mov
xor
fistl
sub
daa
pop
aas
adc
pusha
pop
loope
pop
cmp
aad
lock
mov
xlat
lret
xorl
lds
imul
out
cmp
inc
push
in
add
dec
out
inc
ret
repnz
sub
push
test
test
std
push
arpl
aaa
xlat
adc
push
mov
xlat
cld
dec
mov
jns
sbb
testl
push
dec
lods
dec
pusha
dec
sbb
pop
or
lea
push
loop
test
sahf
loop
push
add
mov
in
push
loop
cmp
mov
xor
or
mov
mov
shrl
xlat
pop
add
insb
pop
cmp
jns
push
sub
int
ds
inc
adc
pusha
xor
dec
mov
testl
mov
sub
dec
xchg
pop
mov
push
cmp
and
dec
insb
pop
leave
ficomps
aad
push
xchg
push
mov
cmpsb
aam
mov
addr16
lds
aaa
fsts
std
lods
lcall
sbb
sahf
repz
and
jns
lahf
loope
and
clc
mov
fucomi
add
arpl
xchg
pop
inc
lods
rclb
aad
lcall
push
mov
xor
rclb
push
cs
lods
jo
push
adc
cwtl
out
lods
lahf
mov
pushf
fisttpll
lret
lea
pop
xchg
or
mov
int
adc
xchg
xor
dec
add
andb
pop
shrl
mov
cmc
add
lea
mov
cmpl
out
inc
and
and
jmp
mov
loopne
or
addb
adc
mov
rolb
sbb
js
ljmp
popa
push
cmp
push
mov
jp
dec
mov
push
xor
sbb
pop
bnd
insb
jle
pop
mov
adc
or
mov
shrl
addr16
or
or
sbb
scas
xor
jae
mov
out
or
lret
mov
mov
mov
mov
daa
test
fisubrl
loopne
nop
adc
sub
xor
xchg
aad
divl
inc
pop
aam
dec
test
mov
xor
mov
inc
push
cmp
movsl
xor
cmp
jmp
dec
imul
in
xor
mov
nop
testl
int3
jmp
cmp
int3
repnz
mov
loopne
add
pop
mov
inc
insl
push
imul
mov
adc
jge
push
sti
fildll
ficompl
pusha
addb
arpl
ror
test
inc
or
jge
stos
dec
inc
int3
nop
rcl
cmp
test
pop
sti
sub
das
push
xchg
in
in
jnp
scas
cld
cmp
in
sub
sbb
jb
and
outsl
sti
daa
mov
shll
cmp
cltd
push
call
push
pop
jmp
flds
cmp
bound
inc
inc
iret
call
data16
inc
gs
mov
fwait
add
add
xchg
call
mov
xor
push
out
ljmp
popa
add
xchg
imul
jo
mov
sarl
xlat
ja
mov
jae
idivb
je
sbb
aaa
call
xchg
and
mov
mov
jecxz
pushf
sub
rcll
push
nop
les
daa
rcl
out
mov
popf
sti
push
jmp
scas
fstpl
mov
jnp
push
int3
mov
pushf
adc
in
pop
pop
out
shrb
or
xchg
jno
xorl
adc
imul
push
jb
cmp
add
push
xchg
int
sbb
cmp
and
fwait
and
and
rorb
mov
dec
hlt
jp
dec
mov
pop
loopne
push
push
ficompl
lahf
test
mov
ss
imul
out
xchg
stos
cwtl
and
test
mov
popa
in
push
sub
mov
sti
mov
hlt
ss
out
jae
jmp
push
std
cli
mov
sbb
fs
lds
es
mov
xchg
push
ret
jns
pop
xchg
adc
movsl
mov
lds
in
adc
push
mov
sbb
daa
xchg
mov
das
out
lcall
iret
cmpsl
je
jle
inc
sbb
fwait
jnp
mov
int3
adc
je
push
andb
sub
insl
aad
mov
mov
and
repz
mov
jo
aaa
sub
stos
pop
in
test
mov
sbb
clc
jb
jl
ss
inc
jns
cmp
scas
arpl
filds
cwtl
roll
scas
and
shr
jl
lods
pop
jne
jb
jno
inc
repnz
mov
aas
aas
mov
jmp
xlat
pop
mov
sbb
push
pop
adc
outsb
xchg
xchg
adc
out
mov
fistl
dec
or
repnz
movsl
fcomps
dec
stos
cli
push
adc
jno
push
mov
jb
xor
int3
xchg
mov
adc
popa
pop
mov
into
cmpsb
lods
and
decb
lock
negl
mov
cmp
cmp
jecxz
lcall
call
aad
jmp
adc
ficompl
fwait
mov
sbb
mov
pop
in
lahf
enter
xchg
mov
cmpsl
ljmp
lret
pusha
shrl
pop
cmp
les
int
insl
imul
jl
loop
lret
out
xor
xchg
push
sbb
out
cmpsb
pop
add
sub
int3
add
dec
inc
cmp
xor
pop
adc
dec
test
mov
imul
add
add
fcmovb
imul
sub
rorl
sbbl
and
mov
cmpl
lock
xor
and
jns
fisttpll
xor
test
xchg
sbb
cmp
int3
xorb
fsubrs
idiv
inc
mov
addr16
or
pop
inc
inc
pushf
mov
sahf
sbb
xchg
cmp
jmp
cld
outsb
test
mov
jmp
outsb
cld
push
into
xchg
pop
in
pop
pop
movsb
rcll
daa
popf
lret
cld
mov
out
mov
into
pop
mov
scas
imul
and
sub
push
imul
mov
xchg
push
subl
mov
ficoml
push
outsl
pusha
aas
xorl
push
fyl2xp1
pop
adc
js
mov
loope
jb
in
sub
ja
xor
adc
iret
rcll
mov
pop
fimuls
shll
mov
adc
shlb
jns
xor
inc
xor
iret
lret
sbb
in
movsb
loope
les
xchg
mov
push
jmp
and
mov
jnp
jnp
loope
dec
js
xor
add
jb
test
pusha
mov
mov
js
dec
mov
mov
inc
sbb
xchg
sti
sub
xchg
jg
hlt
pushf
js
sti
fisttpl
mov
jno
adc
dec
mov
and
orps
lods
jo
orl
push
inc
or
clc
testb
mov
shl
push
out
push
dec
jge
jo
adc
or
cltd
pop
rclb
dec
bound
addl
fnstcw
imul
ss
sahf
iret
pop
cld
mov
lcall
inc
rolb
cmp
hlt
mov
push
lret
lahf
xchg
ret
cmc
sub
rclb
and
sbbl
jno
xchg
out
jle
or
fidivl
sarl
mov
cmpsb
ds
sub
push
add
push
mov
test
lret
in
psubw
adc
cmp
mov
mov
jo
movsb
lea
ljmp
sahf
outsl
push
mov
cmc
sbb
fs
mov
sub
ret
addr16
mov
jle
mov
aam
push
sub
movsl
jb
mov
loope
ret
jmp
outsl
mov
fwait
sbb
pop
pop
movsl
mov
iret
stos
fsts
and
push
dec
push
xchg
je
pusha
fidivrl
dec
cmpsl
shr
mov
push
cmp
adc
ret
sbb
xchg
add
test
aaa
sbb
lods
push
jle
or
xchg
es
push
or
or
stos
repnz
mov
fimuls
jno
xlat
popf
fucomi
or
hlt
icebp
adc
mov
subb
cmc
cmp
jne
fadd
add
xorb
mov
mov
push
lock
and
mov
push
jb
arpl
ret
in
cmp
aas
pushf
mov
push
pop
mov
mov
mov
data16
daa
jo
outsl
ror
shl
add
repz
orl
pop
or
arpl
dec
or
stc
xor
sbb
aam
nop
cmc
jns
std
xchg
jnp
mov
mov
clc
xchg
aam
insl
clts
jo
jns
jnp
add
add
ror
sub
sub
mov
sub
push
mov
push
sar
nop
xchg
nop
jnp
inc
icebp
dec
hlt
test
jl
iret
lcall
jg
lret
fwait
push
hlt
or
sub
or
xchg
push
xor
aas
mov
pop
sub
ficoml
rorb
jge
push
jns
daa
adc
pushf
adc
or
mov
jo
imul
mov
add
loopne
adc
popl
xlat
rcrl
jo
leave
push
lock
jg
jo
or
mov
jbe
and
fldt
lods
mov
subl
fcoms
adc
daa
stc
adc
js,pt
xchg
in
sbb
inc
movsl
sub
fwait
lret
xchg
mov
jge
xorb
ljmp
stos
repz
pop
cmp
test
in
adc
inc
xor
push
stos
lods
roll
jecxz
push
rcr
xor
sbb
jg
jae
in
inc
push
addl
fsts
nop
push
sub
cwtl
dec
cmp
inc
js
sbb
sub
jle
orl
dec
inc
add
dec
outsb
repnz
repnz
and
mov
ds
cs
or
inc
test
pop
or
notb
sarb
or
ret
imulb
insl
out
rcrl
out
mov
mov
mov
sbbb
cmp
out
sbb
sbb
arpl
mov
ss
addb
push
mov
test
sbb
subb
sub
out
adc
in
and
lret
fcomps
scas
xor
pop
dec
cmp
push
cs
data16
pop
jl
cmpsb
scas
das
outsw
movb
lahf
addr16
xor
cmp
xchg
cld
testb
cmpsb
jo
pop
popa
mov
jmp
jmp
xor
ljmp
imul
fdivl
test
ret
sbb
test
lret
jge
xchg
mov
jns
fs
pusha
out
or
clc
jb
iret
fldcw
int
gs
fs
lock
loopne
inc
in
lock
sbb
sub
hlt
adc
push
sti
or
cmpb
test
into
push
add
lea
and
movsb
sbb
fucomip
bound
aad
sub
sti
sub
movsl
pushf
test
aaa
and
aas
sub
jecxz
xor
data16
rorl
stos
enter
scas
outsb
mov
outsb
or
lar
xor
jbe
in
mov
mov
sbb
std
repz
cmp
cli
mov
in
inc
push
sti
call
xor
mov
mov
jno
push
cmpsl
movsb
pop
jmp
pop
cltd
jb
mov
es
sub
je
mov
jo
pop
test
sbb
cmpsl
mov
in
jl
enter
xor
das
mov
lahf
cmpsb
xchg
scas
movsb
mov
inc
jmp
call
js
cltd
pop
sbb
mov
inc
mov
insl
inc
loop
inc
fmuls
jne
stos
cmpsl
push
fldl2e
popf
inc
stos
dec
dec
mov
xchg
dec
lret
out
scas
sbb
xor
pop
xchg
nop
nop
daa
fwait
mov
loope
test
dec
mov
ds
addr16
ds
mov
addb
jecxz
shrb
out
cmp
stos
cmpl
and
jle
mov
jbe
jge
jmp
lods
test
xchg
xchg
inc
loop
mov
jp
in
gs
pop
cmp
fidivs
cmp
ja
loop
push
enter
inc
fidivrs
push
dec
or
cld
hlt
arpl
jmp
ja
add
loope
xor
xchg
pushf
cmp
push
lret
jle
xorl
bound
and
test
pop
sti
lret
cwtl
push
cmp
lea
shll
dec
aas
repnz
ret
test
lahf
or
jbe
or
xor
repnz
jns
arpl
xor
jbe
call
in
imul
cltd
fisttpl
jecxz
test
out
dec
cmc
mov
mov
dec
dec
push
ds
mov
xchg
xorl
outsl
or
jbe
rcll
dec
add
lea
cmp
bound
rorl
ljmp
outsb
pushf
mov
xchg
xchg
fucomp
aam
adc
xor
call
lahf
imul
xchg
jb
cmpsb
outsl
iret
das
pop
cwtl
cmc
sbb
iret
scas
push
inc
push
cmp
vpaddd
popa
adc
xor
push
add
mov
lret
mov
test
cmp
cwtl
shlb
mov
jns
sbb
jno
cmp
adc
cmc
inc
aas
mov
call
adc
push
mov
mov
filds
scas
mov
xlat
jmp
fbld
adc
in
xchg
ljmp
sti
bound
and
push
pop
repnz
int
push
pushf
push
mov
lds
mov
pusha
incl
aas
mov
shll
std
jae
adc
or
sub
mov
jmp
out
arpl
mov
mov
cmpl
cltd
scas
insb
pushf
and
sbb
pop
mov
lods
push
push
inc
xchg
sub
dec
repnz
sub
xchg
sbb
sub
je
xor
test
jmp
jae
repz
pop
nop
jae
test
mov
push
imul
xchg
mov
shrl
imul
cli
out
adc
addb
inc
pop
imul
push
js
sti
push
ss
js
cs
or
mov
int3
adc
mov
mov
jmp
lret
ret
jp
lds
mov
lret
iret
imul
jmp
clc
in
jge
out
mov
jae
inc
insb
ds
pop
adc
aam
jnp
cli
into
jb
ret
les
ret
cmp
cmpsb
sbb
xchg
pop
push
adcb
lods
stc
sub
shll
loope
fcmovnbe
data16
dec
mov
and
lods
cld
add
repz
das
mov
push
faddl
cld
mov
fsubrs
fdiv
dec
push
sbb
ret
jmp
in
mov
orl
and
add
inc
fldt
dec
jne
cmp
je
xchg
leave
cmp
lret
das
inc
scas
sub
pop
call
daa
mov
xor
les
mov
jmp
cltd
imul
adc
mov
mov
popa
push
outsb
mov
pop
xor
mov
addr16
mov
lea
mov
xor
adc
inc
sbb
or
daa
sahf
int3
in
push
jns
mov
ret
divb
std
pop
shll
mov
scas
xor
hlt
mov
jl
test
sbb
push
cmp
cmp
addr16
pop
test
jne
push
js
int
cmp
seto
xchg
xchg
cmp
fcoml
fcmovne
roll
pusha
push
fsts
dec
testb
sub
mov
dec
hlt
sbb
jle
xchg
subl
ret
movsb
lods
push
inc
and
and
sbb
stos
xor
mov
push
jl
cli
ds
inc
sub
movsb
test
lcall
add
jecxz
cmpsb
xor
inc
fnsave
pop
mov
mov
jo
movaps
mov
add
daa
cmc
les
dec
stc
aam
push
popf
cmpsl
jecxz
addr16
subb
pushf
out
jg
pushl
sbb
xor
jns
inc
std
in
lock
push
leave
xchg
xor
jne
ljmp
iret
shll
jnp
push
and
adc
inc
ret
test
stos
inc
mov
add
or
xchg
adc
cmp
cmpsb
fisttps
xchg
out
push
sub
inc
dec
daa
sbb
mov
mov
xchg
jbe
adc
scas
gs
add
movl
lods
mov
push
or
cs
push
pusha
out
cmp
loope
add
xchg
adc
mov
xchg
subl
ds
sub
xor
jle
ljmp
pop
pop
pop
cmp
push
loope
insb
pop
xchg
dec
or
pop
cmp
jmp
test
cmpsb
xchg
and
nop
adc
mov
mov
jp
mov
lock
pop
push
divl
pop
stc
or
out
inc
rcrb
adc
jmp
enter
inc
sub
xlat
or
xor
push
and
inc
xchg
fmuls
pop
adc
and
hlt
add
bound
sbb
pop
lea
jmp
jle
mov
push
push
and
lds
xor
pop
insb
ret
mov
test
cs
hlt
subl
ret
jle
jle
ljmp
in
or
movsb
fcoms
push
ljmp
xor
scas
fimuls
sub
sar
cmpsb
push
cmp
cmp
lcall
or
cli
push
cltd
lret
adc
stos
xor
fldt
subl
fadds
xor
push
cmp
and
das
aad
test
pop
push
jl
enter
jne
xchg
mov
push
xchg
xchg
fsubrs
pop
pop
adc
mov
int3
mov
xor
and
in
jp
adc
adc
mov
mov
xor
mov
dec
subl
or
mov
and
xchg
inc
inc
mov
lods
adc
popa
mov
icebp
add
fildll
in
sbb
cmp
outsb
dec
xor
in
xchg
sbb
xor
in
scas
push
ds
push
repz
jl
iret
adc
cmp
push
jge
or
loop
fadds
dec
mov
mov
cmp
mov
sub
fucomi
dec
adc
cmp
and
loop
mov
mov
testb
leave
dec
aas
scas
test
add
aaa
cmp
or
xchg
mov
in
mov
imul
popa
xchg
and
add
js
jnp
push
aam
add
in
out
fldcw
testb
int
call
ret
stos
in
rorl
out
aad
push
cwtl
xor
sbb
pop
inc
rolb
cmp
pop
pop
and
hlt
mov
push
xchg
mull
mov
jg
loop
mov
adcl
sbb
and
dec
sub
mov
pop
adc
sub
jbe
add
push
addl
mov
lcall
pop
dec
in
fwait
mull
xor
xchg
jp
in
lods
test
xor
dec
cmp
mov
lock
pop
xchg
mov
pop
cmp
daa
rcr
jbe
sub
xor
dec
orl
sub
shlb
shlb
or
movb
imul
pop
lret
stc
sub
mov
pop
ljmp
mov
cmp
shl
xchg
jle
sub
mov
mov
add
sarl
jecxz
and
adc
jns
push
adc
add
pop
sbb
sub
cmp
xor
cmp
sbb
dec
sbb
repz
std
dec
mov
xchg
nopl
or
jno
andl
aaa
dec
cli
and
dec
jnp
sbb
push
mov
dec
sbb
bsf
out
sti
sahf
jo
push
cs
add
in
mov
xchg
pop
add
adc
jecxz
fisttpl
sub
repz
push
pushf
pop
push
imul
mov
xchg
mov
adc
test
orl
mov
cmpb
cmp
mov
add
dec
jl
mov
aaa
xchg
int
sub
lods
dec
les
std
movsl
ret
mov
or
mov
mull
cld
jnp
pop
dec
cs
rclb
ret
movsl
bound
outsl
push
cmp
clc
mov
fisubrl
xorl
je
pop
in
mov
sub
fdivs
sysret
xchg
out
aaa
and
push
bound
leave
inc
nop
sub
sbb
lds
sahf
jmp
sti
and
xor
pop
cli
dec
push
mov
xchg
dec
icebp
pop
dec
pop
inc
fcoms
sbb
or
sub
mov
dec
sbb
shll
dec
sbbb
push
xchg
jmp
jecxz
inc
cli
push
and
sub
jecxz
mulb
lahf
ljmp
jo
cmc
out
xor
push
sub
sbb
and
in
push
or
int
out
xchg
lcall
push
insl
adc
cld
inc
fdivs
dec
fmull
xor
cmc
mov
or
rolb
pop
nop
sbb
push
stos
arpl
gs
ds
fnstcw
lcall
gs
xchg
es
mull
push
adc
xchg
mov
hlt
outsb
inc
fmull
sbb
sahf
sub
sub
shl
sbb
and
add
pop
jbe
mov
xchg
lcallw
cmp
jp
nop
jmp
mov
popa
xor
popf
aaa
out
outsb
scas
test
inc
stos
push
lods
ss
lock
insb
aaa
ljmp
dec
hlt
xor
pop
clc
dec
mov
sub
jg
cs
in
inc
insb
out
test
cwtl
add
iret
in
inc
fdivrl
in
sub
dec
add
jg
adcl
fisttps
mov
add
dec
fnstenv
push
mov
push
idiv
nop
jno
jb
fwait
test
fidivs
gs
mov
inc
fs
xchg
fcoms
xor
les
push
mov
xor
shrb
sahf
rcrb
cmpb
push
incl
data16
movsl
or
int3
lret
fisttps
mov
mov
out
inc
js
mov
test
pop
xchg
jp
xchg
dec
jne
cmp
pop
adc
mov
out
cwtl
mov
mov
ljmp
xor
sbb
les
xor
sbb
test
add
negl
inc
xchg
xchg
sub
loop
mov
xor
fdivrl
xchg
pusha
add
mov
loopne
arpl
aad
cmp
push
repz
mov
jg
mov
bound
test
mov
mov
test
jl
mov
mov
sbb
jb
jg
mov
shll
stos
test
cs
dec
ja
jg
pushf
imul
xchg
loop
test
gs
out
push
sbbl
dec
add
sbb
xor
das
ds
inc
jno
in
outsl
dec
add
cwtl
adc
sarl
jbe
into
aam
out
xorl
dec
push
ret
insb
jnp
movsl
push
out
aas
mov
dec
data16
adc
lds
out
fists
pop
mov
jecxz
outsb
mov
cmc
mov
mov
push
xchg
sub
test
sbb
gs
in
adc
mov
stc
jae
nop
jno
jno
dec
js
les
cld
mov
xchg
mov
es
out
mov
mov
shl
mov
daa
popa
add
push
cmp
pusha
in
dec
jno
dec
mov
in
push
xchg
mov
repz
inc
pop
cmp
sbb
jp
icebp
rolb
ds
sbb
fdivs
inc
mov
stc
mov
push
out
in
add
inc
inc
mov
sbb
outsl
jo
xchg
mov
int3
jb
cmp
sbb
mov
push
data16
loopne
dec
sbb
pushf
ja
adc
push
add
hlt
adc
jge
out
testl
popf
cmp
inc
adc
fdivs
cmp
or
decl
test
dec
and
clc
ljmp
pop
jmp
sarl
cmp
imul
daa
sti
cmc
std
loope
hlt
ljmp
ljmp
stos
dec
stc
ret
leave
or
xor
jbe
sub
add
mov
add
les
pop
mov
sbb
dec
jno
mov
cmp
sbb
aas
std
pop
push
push
cmp
xchg
push
outsb
or
push
jno
ja
cmpsb
xchg
bound
adc
sub
pop
push
pop
stos
xchg
pop
xchg
xchg
cmp
lds
xchg
cmp
xlat
jmp
aam
inc
rcr
std
xchg
mov
sbb
sub
mov
cli
mov
inc
xor
push
mov
leave
in
pop
mov
push
mov
mov
mov
int
sbb
test
mov
xor
pop
sbb
cmp
loop
arpl
mov
mov
push
subb
dec
pop
adc
sub
mov
in
xor
cmp
mov
shll
cmp
mov
jecxz
jl
push
and
in
cmp
inc
mov
cmp
xchg
jbe
sub
subl
into
xor
push
leave
pop
adc
jp
ds
cmpsb
pop
adc
push
dec
sub
stos
add
add
xor
adc
dec
pop
mov
imul
out
cmp
cmp
jmp
ja
sbb
inc
push
sti
cmp
scas
push
outsb
lret
fimuls
push
dec
lcall
inc
xchg
shrl
cli
mov
push
inc
in
es
movsl
mov
cs
jae
into
in
cmpl
movsb
push
scas
push
aam
dec
scas
mov
jae
adc
pop
loopne
jmp
std
pop
xchg
jns
xlat
sbb
loope
add
cmp
dec
pop
xchg
adc
shrl
adc
adc
scas
sub
aas
addr16
adc
fcoms
or
lock
sbb
sbb
in
xor
adcl
push
sbb
ja
mov
cmp
push
in
mov
mov
push
add
sbb
pop
stc
imull
xchg
or
mov
sarl
pop
call
or
xchg
xchg
or
scas
cmpsb
roll
bound
jb
push
xor
hlt
and
inc
in
lds
ret
lea
bound
rol
cmp
and
shl
mov
or
aam
and
in
mov
cld
adc
mov
mov
mov
or
aam
dec
cld
in
mov
push
or
mov
movsb
test
addr16
aaa
cmpsb
mov
out
repz
cltd
push
mov
pop
xchg
movsb
rcr
cmp
paddb
mov
cmp
sub
sti
push
pop
aam
sub
add
mov
cld
decl
xor
jns
fs
sub
loope
dec
pop
dec
mov
jge
sbb
jnp
scas
push
cmp
add
cli
ja
mov
xchg
sbb
mov
add
add
jo
jge
fsubr
testb
adc
out
fnstcw
mov
lock
lret
cmovp
aaa
lods
in
adc
rorb
cmp
xor
test
inc
iret
jno
inc
jmp
add
outsl
rcrb
sub
enter
cli
xor
push
sbb
call
and
lcall
push
aam
ret
insb
dec
inc
lret
inc
dec
clc
inc
mov
inc
es
dec
xchg
outsl
je
in
stos
push
xchg
mov
test
test
sbb
in
sbb
add
idivl
arpl
cmc
push
cltd
cmp
insb
test
push
stc
xchg
mov
or
cmp
mov
cmp
jno
mov
jmp
stos
mov
out
ja
sbb
lock
stc
push
mov
shll
pop
cmp
movsl
dec
mov
cmpsl
pop
pop
lcall
fcomps
sub
jecxz
outsl
testl
aas
push
mov
popf
mov
xor
mov
cmp
std
adc
in
dec
xor
mov
dec
popa
sub
fdivs
in
out
negb
dec
movsb
ret
fidivrs
clc
test
jnp
sbb
push
xchg
movsl
scas
pop
cmp
js
jl
pop
pop
shll
mov
ljmp
pusha
ja
mov
inc
insl
fdiv
loop
pop
adc
loop
shl
fs
aad
push
dec
xor
push
stc
or
cmp
mov
xor
leave
push
clc
adc
in
jb
into
addl
push
repz
ljmp
mov
scas
inc
rolb
dec
repnz
adc
push
sub
cmpsb
adc
imul
push
jecxz
cmp
jmp
sub
lahf
jle
outsl
mov
lods
pop
and
fmull
push
das
pusha
xchg
rcrb
imul
and
andb
xchg
inc
bound
lahf
add
mov
mov
lret
add
mov
aam
js
decb
insl
data16
mov
add
outsl
mov
mov
subl
shll
inc
movl
in
push
or
pop
xchg
dec
xchg
pop
sbb
fs
popa
mov
mov
jle
popa
or
loope
xchg
loopne
popl
jg
pop
push
pop
lahf
inc
sti
mov
jecxz
mov
lret
jle
stos
mov
add
lock
push
fisubrl
mov
lock
sbb
adc
psrld
push
scas
mov
add
nop
neg
arpl
pop
jo
mov
push
mov
lods
cmp
jnp
icebp
in
mov
or
mov
mov
imulb
sbb
and
enter
loopne
mov
mov
mov
mov
and
dec
in
and
mov
mov
dec
sbb
jns
dec
repz
call
push
out
pop
pop
data16
push
test
test
sbb
inc
jbe
movsb
stos
sti
mov
lcall
stc
sub
jecxz
xchg
jl
or
not
xchg
cmpsb
push
lcall
fcmovnbe
xchg
ror
xchg
and
cmpsb
repnz
jbe
adc
fs
and
jecxz
lahf
int3
adc
jno
scas
xchg
loope
fwait
nop
pushw
mov
cmc
fldt
daa
sbb
cli
test
xchg
fstl
ljmp
adc
lahf
lret
dec
out
repz
push
push
fisubrs
cld
out
ja
ds
test
popf
add
gs
aam
pop
sbb
clc
mov
mov
sbb
jne
mov
hlt
inc
mov
test
mov
inc
jnp
in
mov
lahf
add
scas
adc
roll
test
add
jbe
jno
push
inc
pop
shrl
push
add
mov
sbb
stc
jno
mov
cs
xlat
rolb
dec
xor
fdivp
nop
pushf
repnz
hlt
stos
int
pop
scas
mov
inc
cwtl
fcoms
adc
mov
testl
push
dec
out
xchg
inc
fisubl
fldcw
daa
addl
orl
jle
add
pop
push
scas
jp
cmp
outsl
pop
or
mov
outsb
and
stos
scas
imul
ds
imul
xchg
mov
mov
push
dec
xor
push
add
xchg
cwtl
cltd
aas
test
xchg
sub
add
and
loope
mov
push
mov
pop
jo
dec
sahf
jg
jne
addb
cli
dec
sub
lods
jb
push
dec
fcmovnbe
pop
inc
mov
xchg
sbb
xor
mov
insl
lods
test
lods
stc
jmp
inc
js
std
or
push
les
pop
mov
je
mov
out
dec
out
repz
ljmp
das
xor
std
inc
xlat
add
jno
mov
hlt
jmp
es
jle
mov
subl
sbb
sbb
rorl
add
push
ljmp
mov
jg
lcall
mov
jbe
mov
jns
mov
xchg
test
lock
shrb
mov
or
popa
inc
shlb
xchg
jne
in
out
cmp
sub
sbb
ja
jo
mov
lock
and
popa
mov
mov
xchg
shl
mov
inc
adcb
push
lock
mov
repz
xchg
mov
push
dec
loop
fldl
fs
cmp
push
rep
xchg
mov
xchg
fnstcw
into
add
add
out
inc
shll
sbb
int3
ss
test
clc
or
cmp
jno
fildl
dec
sti
je
jne
dec
out
inc
int
mulb
add
mov
sub
push
pop
sub
xor
adcb
lret
mov
roll
stos
movsl
sar
cmpsl
adc
outsb
notl
pop
xor
cmp
adc
mov
stc
dec
lods
sub
or
pop
xchg
daa
xor
mov
push
fld1
mov
xchg
mov
xor
mov
cmc
js
xchg
cmpsl
ds
push
aad
pop
mov
mov
pop
enter
pop
jne
lahf
pop
cmp
jo
jg
ja
cmp
xchg
in
rolb
mov
outsl
mov
ljmp
pop
jmp
in
jnp
and
xchg
lret
sub
pusha
xor
add
loope
mov
xor
lret
push
jmp
ljmp
je
jno
xor
mov
sbb
dec
icebp
fildl
push
lret
out
pusha
lret
mov
ljmp
mov
mov
les
xor
jmp
add
loopne
sub
or
xor
push
or
xchg
in
icebp
jne
xchg
jle
sub
clc
shrl
pop
mov
cmc
into
insl
test
sbb
loop
lock
xor
xor
inc
mov
gs
mov
cmp
fstps
jecxz
test
cmpsl
sub
sbb
xchg
loopne
adcb
nop
sub
jecxz
fs
popa
pop
and
cmpsb
jbe
adc
jg
mov
sbb
mov
and
push
sbb
hlt
enter
inc
or
adc
push
fcoms
xchg
shlb
xchg
ficompl
xchg
stos
ljmp
hlt
jg
mov
loopne
mov
adc
out
or
scas
xor
inc
pop
nop
cmp
or
jbe
mov
mov
mov
pop
cld
push
push
stos
imul
xchg
stos
lcall
add
insb
into
mov
mov
push
ds
scas
fcmovnb
aas
lods
or
cmp
mov
jnp
xchg
adcb
xchg
test
aam
das
mov
ljmp
dec
pop
mov
shlb
cmp
and
xlat
jno
dec
scas
imulb
scas
cmpb
and
shl
ds
pop
xchg
pop
loope
cmp
inc
mov
sbb
push
jns
cmp
mov
cmp
fxch
cmp
lods
or
add
daa
cmp
jns
inc
lds
fs
push
inc
mov
mov
push
fs
and
pop
pop
sub
fs
popf
inc
add
mov
push
xchg
dec
mov
pop
cmp
sub
pop
subl
lahf
out
push
add
pusha
xchg
push
out
adc
dec
movsb
lret
test
insb
xchg
clc
jae
fnstcw
or
mov
jecxz
sbb
xchg
mov
and
addr16
lods
xchg
scas
movl
test
mov
inc
inc
fcoms
pop
mov
loope
cs
inc
push
cltd
cmp
call
dec
call
test
movsb
jle
xor
in
insb
cmp
outsb
mov
jae
mov
shrb
mov
popf
popa
mov
addr16
xor
mov
imul
aad
gs
pop
xchg
pop
pushf
pop
pop
mov
jae
out
imul
repz
jle
cmp
mov
out
scas
addr16
ja
sahf
cli
push
in
push
cmpsl
add
xchg
xor
enter
dec
cmp
sbb
pop
gs
shrb
mov
bound
jno
jmp
std
jb
jne
stos
clc
popf
mov
ja
mov
fidivrl
or
fnsave
jb
lcall
out
add
pop
repnz
pushf
fnsave
mov
lahf
iret
push
jns
xchg
mov
push
test
wbinvd
jne
cs
lods
inc
mov
cmp
dec
scas
and
sbb
dec
inc
andl
lds
dec
mov
mov
inc
cmp
std
xor
xchg
mov
test
or
adc
in
outsl
fildll
fstp
xchg
scas
adc
idiv
push
scas
in
jne
test
pop
and
call
push
jg
dec
addr16
dec
int3
mov
out
loopne
cltd
cld
mov
cmc
mov
pushf
movsl
adc
xchg
xor
cltd
leave
neg
mov
mov
mov
rcrb
data16
idivb
js
mov
pop
fists
dec
mov
es
sbb
call
push
ds
adc
sarl
xor
inc
enter
xor
inc
and
or
lret
aam
mov
icebp
lcall
add
push
or
ja
push
addb
arpl
push
adc
add
insl
pop
je
or
or
xchg
mov
mov
setge
call
std
ss
repnz
inc
adc
inc
add
scas
scas
xchg
test
idiv
ljmp
cltd
and
imul
adc
and
xchg
add
add
scas
pop
je
sbb
rcrl
add
xchg
ja
daa
adc
xorl
cltd
movsb
cmc
enter
fdivrl
dec
ficoms
mov
out
in
inc
add
call
std
rcrb
mov
imul
js
sub
lods
jo
mov
or
sti
mov
bound
and
or
and
pop
mov
add
pshufw
addr16
and
jnp,pn
cmp
stos
lcall
arpl
cmp
movsb
loop
push
cmc
les
mov
insb
and
inc
fdivrl
mov
movswl
xor
fsub
adc
add
outsl
push
cs
jo
loope
stc
enter
fiaddl
sahf
jle
sar
adc
iret
mov
int
mov
int
pop
test
scas
xchg
pusha
fwait
sub
dec
ja
lcall
push
xchg
dec
sub
sub
fsubrs
movsb
movsb
loope
jnp
pop
xchg
inc
adc
pop
aam
push
mov
sub
fstps
inc
push
repz
fs
scas
popa
stc
push
ja
mov
in
mov
mov
int
sub
mov
sbb
imul
inc
jae
inc
ret
imul
outsb
push
and
sbb
jae
pusha
pop
xchg
cmp
iret
dec
insl
adc
dec
sti
pop
pop
jmp
sub
mov
arpl
aas
pop
adc
add
sub
cmp
es
push
outsl
mov
popa
or
stos
adc
fs
mov
mov
mov
pushl
sbbl
cltd
push
and
sub
push
pop
pop
call
repnz
aas
pop
out
aaa
movsl
xchg
jge
iret
out
imul
pop
pusha
xchg
test
fsubl
add
xchg
imul
test
inc
in
filds
outsb
dec
and
cld
cmp
enter
cmc
dec
xchg
xchg
fisttpll
faddp
xchg
in
call
ja
insb
sub
addr16
int
pop
and
mov
pop
repnz
mov
lock
popf
push
mul
rorl
out
lret
adc
push
and
push
shrb
js
in
ret
xchg
clc
mov
fwait
repnz
xchg
enter
mov
cwtl
sub
test
adc
adc
and
jg
inc
enter
lahf
in
jg
mov
cli
or
adc
out
mov
insl
les
pop
aas
and
int3
inc
aaa
fyl2xp1
and
adc
lret
mov
out
aaa
adc
cmp
stos
push
stos
fwait
and
es
subb
push
fistpl
test
push
cltd
mov
jb
divl
mov
jb
sbb
fcomi
or
ja
out
lret
sub
stc
arpl
and
int3
mov
int3
xor
inc
sub
fadd
sbb
sub
pop
jns
push
fnstsw
bound
dec
push
cmpsl
cli
test
add
adc
jbe
dec
inc
iret
jo
or
jns
jge
sti
in
pop
rorl
add
pop
xchg
inc
jmp
sbb
cltd
outsb
mov
add
lods
test
xor
iret
add
cmc
cltd
xchg
adc
rclb
adc
and
push
fcmovnb
negb
pop
es
lods
and
mov
jnp
or
int
out
sarw
inc
add
in
in
sbb
and
inc
jae
rorl
xchg
cmpsb
add
scas
pop
das
mov
push
lea
mov
test
aad
mov
mov
testl
xchg
lahf
cmp
cmp
sbb
loope
cmp
test
scas
mov
sub
jecxz
push
jb
sub
mov
cs
mov
mov
inc
imul
mov
xchg
cmpsb
inc
mov
out
subl
loop
push
in
jae
out
pushf
mov
repz
mov
js
les
dec
pop
in
int
inc
jo
adc
bnd
popfw
jbe
mov
daa
pop
or
xor
dec
and
iret
xchg
lcall
jle
jmp
out
pop
cwtl
pop
jno
call
mov
xchg
jne
push
rol
nop
jo
sbbb
stos
and
jns
sbb
lea
enter
pop
sbb
sbb
pop
mov
fs
cli
cwtl
out
push
mov
push
js
out
push
add
jae
loop
lcall
clc
imul
scas
sarb
pop
add
inc
in
out
dec
out
pop
jg,pt
fidivrs
cmc
insb
push
dec
test
xchg
loopne
adc
inc
pop
pop
and
jg
adc
pop
adc
sahf
mov
dec
or
inc
jp
push
xor
pop
cmp
leave
add
or
daa
lds
das
int3
int3
pushf
mov
jb
mov
adc
iret
test
xchg
pop
std
add
add
and
xor
and
inc
push
je
nop
popf
lea
cmp
mov
ss
push
movsb
mov
dec
sub
mov
pop
in
inc
xor
push
stos
mov
test
outsb
xor
in
inc
or
pushf
or
fsubrl
scas
jne
sub
cli
sbb
pushf
iret
lret
or
test
or
cmp
mov
aas
insb
pop
xor
ss
lahf
push
mov
pop
ja
mov
dec
into
int3
push
out
sub
sbb
mov
cli
xchg
mov
dec
mov
arpl
xchg
push
lret
xchg
dec
pusha
mov
sub
cs
xor
fwait
sub
stc
js
push
push
cld
xchg
in
lea
in
incb
cmp
insb
mov
cmp
mov
mov
add
jp
xor
sarl
push
cli
adc
lods
or
inc
lret
sbb
jp
cltd
mov
cli
inc
mov
xor
hlt
push
cmp
jg
dec
mov
pop
clc
sbb
push
add
add
mov
imul
adc
mov
lret
aam
add
xchg
dec
pop
hlt
push
aad
pop
add
inc
jmp
xor
test
or
inc
fbstp
jp
sub
data16
iret
movsb
cmp
loope
push
jg
cmp
mov
dec
xchg
dec
pop
test
pushf
push
mov
adc
cmp
sbb
dec
xchg
xchg
adc
shld
xlat
mov
sub
pop
in
hlt
inc
dec
inc
shlb
push
mov
pop
jp
sbb
subl
stos
mov
or
dec
out
cmp
nop
cmp
push
int3
mov
or
push
dec
out
push
aas
adc
bound
inc
mov
imul
in
fs
addb
xchg
fs
lock
cli
fcompl
fistps
sbb
push
push
cmp
frndint
push
sub
dec
mov
sbb
push
pop
mov
mov
andb
iret
xlat
inc
lcall
lds
fmuls
fdivl
outsb
fwait
xor
pop
gs
jae
mov
pop
adc
mov
push
mov
sbb
ret
fs
cmpsb
sbb
sahf
jmp
and
inc
mov
lret
rcrl
push
mov
and
xor
je
gs
mov
pop
xchg
pop
inc
jge
xchg
jnp
adc
xchg
mov
popf
mov
lods
aam
xlat
inc
jp
mov
inc
pop
inc
mov
ficompl
xchg
and
or
test
sbb
pop
xlat
jb
inc
nop
imul
jno
inc
jo
pop
test
fcomi
mov
icebp
das
inc
aad
ljmp
xchg
roll
xchg
mov
in
mov
adc
addl
cmpsl
mov
inc
or
mov
enter
sub
xchg
pop
jle
cs
aas
push
jle
cmp
jo
fst
xor
pop
and
out
push
push
dec
add
out
movsb
fstl
xor
test
int
pop
mov
and
jmp
mov
and
sub
es
test
pop
fwait
aaa
daa
jg
jns
addr16
add
mov
mov
shrb
dec
mov
pop
xor
sahf
sub
arpl
inc
lods
add
cltd
lret
add
sar
andb
pop
sti
rorl
imul
inc
add
daa
add
insl
test
dec
cmpsb
xlat
push
cli
pop
loope
mov
push
jbe
push
or
es
out
push
fucom
mov
sbb
lock
pop
pop
dec
push
imul
or
gs
jb
insl
fidivrs
shlb
sti
shlb
mov
fnstsw
xchg
mov
sub
movsl
ss
mov
xor
ud1
clc
sub
pop
imul
loope
cmp
loop
jmp
lcall
or
inc
dec
mov
or
or
hlt
inc
mov
idivb
jl
fistps
inc
test
mov
popf
sub
mov
aad
repz
push
adc
xchg
sbb
stos
adc
ret
out
inc
push
pop
daa
mov
add
mov
xor
pop
xlat
sub
inc
push
xor
lahf
loope
sbb
fdivrl
cs
stos
push
hlt
cs
cmp
mov
jmp
mov
xchg
jnp
aaa
dec
aas
or
ss
ds
xchg
bound
jno
gs
into
out
in
jae
jns
imul
add
dec
adc
inc
dec
leave
sbbb
mov
subb
xchg
mov
sbb
adc
movsl
data16
loope
popf
fwait
cmp
ror
loope
jne
aad
pop
testl
sub
push
iret
push
rcrb
lahf
push
daa
pop
je
out
jmp
adc
ss
fisubrl
push
idiv
mov
jge
jg,pn
sbb
ror
test
sub
ljmp
inc
into
aam
and
outsb
icebp
jge
add
xchg
shlb
dec
aad
dec
push
mov
and
aas
scas
push
pop
testb
loopne
adc
sbb
in
js
hlt
and
les
into
push
ljmp
popf
sbb
xchg
dec
test
out
sbb
jmp
mov
jb
add
adc
cmpsl
pop
arpl
pop
sbb
into
imul
or
fdivrp
add
push
and
and
test
or
pushf
les
popa
fists
lcall
fimuls
aam
jmp
sti
push
mov
mov
mov
fmuls
clc
insb
test
xor
int
mov
sbb
movsb
sub
std
stos
mov
fildll
lods
pop
fildll
in
mov
or
adc
jge
xor
lahf
orb
adc
jp
cli
or
rolb
aas
sub
adc
mov
cltd
dec
pop
xorb
mov
getsec
les
fiadds
mov
push
pop
js
mov
cmpsb
adc
cmp
lods
ret
add
push
out
stos
subb
shlb
xor
lock
mov
daa
pushf
xchg
or
push
daa
push
sub
push
jge
mov
dec
les
mov
scas
mov
dec
lods
jae
nop
enter
and
or
pushl
in
mov
call
icebp
ret
jae
rolb
test
scas
xor
subb
mov
dec
jbe
mov
push
cld
ret
add
adc
xchg
mov
xor
mov
loopne
mov
pop
pop
and
push
scas
mov
inc
jmp
in
sar
scas
sub
cli
or
clc
add
dec
cmpsb
hlt
scas
pop
stc
out
cs
cmp
jae
insb
push
hlt
add
add
out
out
insb
sbb
pop
add
stos
mov
sti
into
ds
xlat
arpl
or
pop
pushaw
lret
ja
xlat
jle
scas
test
xor
imul
jae
xchg
repnz
imul
lahf
xchg
pusha
xchg
out
rclb
nop
sbb
fsqrt
jg
cmpl
flds
mov
push
sti
cmp
xchg
loopne
stc
setae
xchg
inc
outsb
cltd
mov
adc
es
loopne
mov
ja
xchg
mov
sub
movsl
pop
scas
add
movsb
cmp
jg
jle
mov
test
scas
push
bt
bound
push
dec
loop
fwait
imulb
dec
mov
movsl
mov
mov
fwait
mov
jbe
cli
aad
xor
scas
dec
inc
mov
jle
in
mov
mov
in
mov
pushf
ljmp
fistpl
lock
cwtl
popf
dec
xchg
in
out
add
push
mov
divl
adc
cmp
jb
test
aam
mov
dec
sahf
jno
cmpl
or
xchg
adc
shlb
hlt
outsl
das
popa
sbb
pop
xchg
pop
ds
ds
hlt
mov
fidivrl
xchg
clc
or
shrl
mov
movsl
inc
push
mov
sub
adc
xchg
mov
mulb
ja
mov
sub
repz
mov
lods
pop
cwtl
adc
test
dec
push
popa
xchg
mov
xor
ja
les
fsub
xchg
push
mov
jl
mov
sub
inc
mov
repnz
dec
mov
push
pop
adc
int3
in
mov
out
cwtl
push
test
lret
lods
sub
jmp
and
jb
pop
jecxz
int3
gs
loope
into
push
fsubr
adc
jbe
mov
inc
push
sbb
or
push
push
mov
ja
adc
jmp
les
flds
cmp
lea
or
in
pop
mov
pusha
rcrb
daa
lahf
mov
xchg
pop
mov
lods
sub
push
inc
mov
mov
fisttpll
mov
sarb
iret
mov
repnz
pop
jl
jne
scas
out
mov
push
stos
jle
pop
jb
dec
sbb
ja
mov
pop
dec
jnp
sub
xlat
push
pop
inc
mov
jo
sub
sub
pop
js
lock
js
mov
xchg
adc
add
jo
fs
pop
data16
push
inc
lret
data16
mov
inc
stos
dec
hlt
xchg
into
vmread
insl
je
pushf
sbb
or
xorl
jp
xchg
fldcw
sub
jne
movsb
cmp
loopne
sub
pop
inc
fstl
aam
mov
xchg
rcrl
xchg
mov
lock
jg
scas
jmp
dec
and
loopne
xor
cli
dec
adc
pop
adc
jmp
sub
sub
xchg
stc
hlt
mov
imul
les
pop
adc
xchg
lock
xchg
xchg
add
scas
push
pop
fwait
cltd
insb
leave
cwtl
and
push
sub
push
push
pop
sbb
loop
incb
rcrl
and
loopne
fcomps
adc
add
adc
adc
clc
cmp
insl
fstpt
pop
jp
insb
shlb
inc
cld
movsb
cmp
aas
mov
in
mov
adc
xchg
or
in
cmp
lods
xchg
xor
mov
stos
test
and
mov
call
or
negb
add
aaa
sahf
pop
adc
push
jae
lret
cmp
adcb
mov
jmp
xchg
dec
in
gs
add
shl
inc
pop
fdivrl
shll
mov
repz
aas
lock
or
mov
test
aas
or
xchg
xor
lcall
jne
lret
lods
or
movsb
je
in
dec
xor
cmp
jb
jnp
cli
testb
push
xor
pop
xor
fisttpll
sub
jnp
fsts
push
test
mov
add
aad
and
mov
xchg
push
sub
stos
orb
aas
dec
pop
std
jmpw
sub
adc
mov
enter
iret
mov
xor
fs
dec
pop
xchg
add
adc
adc
pop
pop
cmpl
cmpsb
jne
inc
stos
jnp
movsb
fidivl
arpl
mov
or
mov
jecxz
fs
enter
icebp
xchg
mov
cmpsl
sub
xor
push
xchg
or
push
pop
repnz
lock
aad
inc
mulb
rcr
loope
scas
sbb
movsb
insl
js
push
mov
dec
jmp
add
cmpsl
add
enter
cmpb
adc
sbb
out
cltd
xor
and
lretw
fstl
repnz
mov
jl
divb
mov
stos
or
imul
jns
jns
fisubrs
cmpsl
js
lods
push
pop
pusha
inc
push
lret
fsub
outsb
add
leave
cld
sbb
ljmp
out
iret
ja
mov
out
cmp
push
xchg
sub
test
rcrl
imul
lcall
lret
and
push
inc
in
pop
xor
pop
inc
push
shr
test
xor
daa
stc
push
stc
leave
xor
ss
andb
adc
jmp
pop
inc
push
jns
cmp
cmc
std
lret
xchg
lds
rclb
pop
out
push
ja
lods
xchg
rcrl
leave
outsl
inc
push
in
or
fs
fisubs
mov
mov
cmpsl
sar
pop
xchg
or
xor
sub
push
std
mov
jo
jg
gs
xor
cmp
pop
lret
cmpsl
mov
ja
and
in
inc
adc
jle
sub
cmp
pushl
xchg
cmp
dec
mov
aad
sub
test
lods
sahf
outsl
mov
add
scas
push
jnp
fcompl
cmp
es
out
es
fucomip
xor
xor
dec
push
inc
sub
lods
in
popa
pushf
stos
out
pop
ffreep
movsl
fistps
iret
cld
imul
mov
inc
sub
fisttpl
push
dec
call
lods
push
psubusw
cmp
cltd
inc
ds
pop
lods
sti
jns
scas
mov
adc
dec
iret
push
mov
push
sbb
enter
gs
or
inc
mov
mov
inc
int
jl
mov
push
adc
push
add
pcmpeqw
fcmovbe
sub
cmp
adc
sbb
and
outsl
mov
fisubrl
dec
push
imul
inc
inc
sbb
inc
push
xchg
mov
sbb
int3
pop
add
cmp
adc
shrl
in
mov
cmp
adc
ds
out
scas
add
sbb
imul
add
hlt
adc
jne
mov
prefetch
jge
lods
pop
or
arpl
mov
push
inc
out
cmp
mov
rcll
insb
mov
and
inc
inc
in
stc
sub
leave
push
add
xchg
loop
and
push
sub
add
sbb
xchg
lret
add
dec
xchg
test
inc
and
inc
in
jns
sub
inc
push
jnp
mov
pusha
sbb
nop
mov
sub
mov
sahf
idivb
xchg
pop
fs
clc
iret
pop
test
out
enter
mov
cmpb
or
cmp
cmp
jl
lods
movsb
pop
jecxz
mov
lds
lods
scas
fcmovbe
and
push
mov
movsb
jge
test
adc
cmp
cmp
and
mov
push
mov
out
imul
adc
mov
shrb
dec
xchg
mov
arpl
stc
xlat
js
pop
sbb
xchg
and
ss
test
inc
push
push
popf
fidivl
in
in
loop
aam
cmp
sbb
std
add
mov
adcl
adc
lds
das
mov
xchg
jno
inc
inc
or
pop
adc
adc
add
ret
clc
push
push
and
mov
push
fisttps
jae
jno
jp
movsb
mov
cs
push
sub
outsl
jle
sub
adc
cld
ret
jbe
mov
clc
add
lods
push
sahf
and
mov
ja
nop
cmp
jg
adc
xor
mov
push
jmp
in
jae
sub
lahf
data16
mov
loope
cmpsl
adc
push
fisttps
push
add
xchg
jmp
pushf
stc
add
cmp
fbld
sbb
mov
insb
and
inc
or
lods
mov
mov
fcompl
les
and
lods
test
push
jmp
jl
adc
mov
bound
push
les
adc
xlat
cmp
push
mov
pop
imul
test
pop
call
pushl
mov
xchg
ja
pop
push
dec
call
mov
mov
pushf
and
fst
test
xor
nop
mov
mov
mov
loop
out
push
jle
jp
and
mov
scas
inc
imul
mov
pop
cwtd
xorb
inc
push
xchg
or
outsl
lods
mov
mov
mov
arpl
fadd
dec
outsl
or
mov
jo
nop
decb
ret
mov
negl
xor
into
loopne
aas
push
push
dec
xchg
popa
jecxz
and
imull
mov
adc
pop
aas
dec
xchg
mov
outsl
pop
sub
mov
mov
pfmin
inc
es
add
ficoms
pop
enter
sbb
fsts
pop
daa
lock
mov
aaa
scas
mov
sbb
mov
stos
mov
xchg
xor
aad
mov
jns
jnp
les
push
out
mov
dec
dec
cs
imul
inc
cmpsl
xor
jecxz
adc
ja
scas
mov
dec
cmc
lock
daa
jo
dec
xchg
mov
test
js
add
aaa
mov
subl
push
mov
xlat
adc
outsb
pop
mov
push
nop
cmp
inc
dec
xchg
pop
jl
sbb
cs
sub
push
lahf
dec
add
mov
outsl
sub
and
sbb
lcall
jp
test
inc
push
sti
adc
iret
xor
movsb
mov
adc
dec
sbb
add
inc
xchg
scas
jge
and
mov
fsubrl
or
movsl
sub
xor
push
adc
xchg
loope
roll
mov
es
test
mov
jl
test
mov
outsl
xchg
data16
mov
cmp
lods
lock
mov
orb
mov
bound
fsubs
popf
mov
inc
pushf
and
mov
in
cmp
pop
sub
push
mov
imul
mov
fidivl
xchg
jns
xor
nop
scas
int3
imul
inc
lock
iret
sbb
std
movsb
cmp
dec
ds
bound
adc
aam
notl
mov
test
das
sti
cmpsb
sub
movsb
jnp
ja
inc
es
add
dec
fcoms
aaa
mov
xchg
mov
ds
testl
stc
pop
gs
push
daa
je
sub
push
add
lea
loope
sub
out
dec
fldenv
xchg
add
cmp
divl
shrl
fcoml
xchg
lods
call
sub
dec
movsl
andb
int3
adc
jb
sbb
ret
mov
xorl
cmp
in
movsb
mov
fs
or
test
xchg
movsb
in
jl
cmc
push
jnp
orl
ljmp
pushf
or
sbb
mov
add
in
js
movsl
sbb
ret
clc
push
push
outsl
movsb
or
ja
add
mov
xchg
cltd
push
mov
and
fisttpl
movsl
inc
aaa
aas
insl
dec
dec
dec
and
pop
dec
jb
mov
and
rcl
cmp
dec
add
sbb
in
sub
adc
je
cltd
mov
xchg
ret
dec
lahf
popf
rorb
nop
mov
js
ror
and
jns
int3
or
mov
sbb
cmpsb
fldenv
pop
xchg
mov
ficoms
jno
fsts
cmp
adc
gs
cmp
sbbl
and
stos
push
mov
dec
sbb
adc
mov
adc
xchg
ss
mov
movsb
int3
push
aaa
mov
adc
sbb
jo
cmpsl
arpl
out
mov
sbb
js
arpl
lods
mov
lahf
inc
push
pop
push
in
mov
cmp
out
pop
xchg
xor
popa
xchg
fldt
sbb
mov
mov
xchg
inc
jns
test
jnp
adc
push
push
xchg
sub
mov
fadds
lods
fiaddl
in
cmp
dec
xchg
cmc
xorb
and
jp
mov
xor
dec
aas
push
adc
xor
mov
sbb
subb
and
fcoml
aad
roll
add
or
test
outsb
ljmp
mov
mov
leave
test
and
jg
test
xchg
sbb
in
pusha
xchg
popf
fwait
imul
push
aas
lea
cmpsl
mov
lahf
sub
cwtl
into
sbb
dec
out
or
xchg
imul
pop
inc
arpl
push
jns
xchg
ja
lds
lret
test
mov
mov
test
push
cs
movsl
push
clc
mov
loop
mov
sti
ret
sbb
cltd
test
int3
inc
xchg
lret
enter
push
jns
xchg
push
inc
lcall
lock
or
mov
push
jecxz
loop
push
subl
pop
push
mov
cmova
mov
sub
adcb
adc
mov
imul
dec
dec
loopne
mov
aad
xchg
adc
pop
jo
scas
adc
hlt
popa
cmp
aaa
mull
imull
cmp
mov
mov
lds
outsb
test
xchg
fs
repnz
push
xor
cmp
mov
push
shlb
jg
sub
cmp
scas
and
inc
out
xor
xchg
lret
dec
test
mov
xlat
mov
outsl
repz
rorl
jp
add
push
push
push
test
aaa
movsb
xor
mov
out
pop
faddl
mov
dec
cmp
fwait
les
jle
push
jge
inc
push
push
xor
lods
pushf
adc
outsb
mov
push
cmp
mov
push
sbb
dec
xor
sbb
adc
push
sub
mov
insl
mov
mov
pop
cmp
or
in
cmp
add
loope
testb
lods
sub
or
add
jge
sar
push
inc
pop
lea
push
mov
out
lods
insl
push
outsb
fmull
aam
bound
addr16
stos
dec
push
dec
pop
int3
mov
addr16
lea
aaa
outsl
xchg
and
jle
xchg
push
dec
add
dec
sbb
dec
jnp
mov
test
cmpsb
ja
hlt
popf
add
hlt
mov
jno
in
inc
cs
pushf
dec
rol
mov
sub
mov
iret
lods
inc
lret
rclb
jg
jb
mov
mov
add
in
pusha
movsl
loope
adc
add
cli
adc
dec
dec
add
ds
push
mov
sti
inc
lret
ficoms
fsts
pop
jno
roll
sti
jmp
xor
cwtl
mov
adc
fdivl
out
jbe
arpl
popa
into
lret
enter
mov
leave
mov
jl
nop
push
mov
add
icebp
dec
scas
std
cwtl
inc
xor
inc
mov
sub
aad
jae
js
mov
aad
xchg
mov
sub
jae
pop
lock
pop
bound
jne
adc
rcll
fs
xor
cmp
xor
add
insb
loope
push
imul
fdivs
adc
mov
sbb
add
and
and
xchg
movsl
adc
scas
inc
xor
out
jecxz
adc
push
jp
push
shrb
lock
inc
xchg
xor
pop
push
push
imul
mov
dec
inc
cmp
cmp
xchg
pop
inc
or
mov
dec
cli
xchg
mov
ss
jge
adc
dec
fisubl
lods
movsb
test
jl
dec
test
lock
shll
or
out
mov
mov
sbb
xchg
xlat
into
sbbb
push
sbb
int3
outsb
push
pop
insl
lret
cld
adc
push
or
lods
xchg
roll
inc
xchg
dec
jo
push
scas
cmp
rclb
mov
popa
cmp
fstpl
mov
nop
xchg
and
sbb
lahf
inc
xchg
and
push
ret
sub
pinsrw
xor
rorb
in
aam
jecxz
rorb
lahf
insb
imul
jle
sar
jg
or
mov
popa
rcrb
push
push
add
sarl
cld
dec
mov
push
fsubrp
mov
dec
xchg
aam
mov
and
lock
and
mov
or
mov
xor
insl
inc
lds
js
stos
insb
cmp
ret
sahf
mov
inc
lea
sbb
cmp
or
movsl
sbb
cmp
xchg
xor
push
mov
inc
cmpsb
rcrl
xchg
xor
dec
cs
xchg
push
lods
push
mov
jns
cmpb
add
icebp
mov
outsb
lcall
dec
adc
cmpsl
mov
lcall
rcrl
loopne,pn
adc
rcll
jno
mov
adc
jge
in
orb
jl
js
xlat
xor
daa
xor
add
pop
and
inc
out
add
mov
hlt
das
sub
mov
lahf
cmp
pop
adc
fistpl
mov
inc
cmpl
negb
stc
push
xchg
jb
jns
mov
sub
imul
or
pop
adc
out
in
mov
je
sbb
outsb
cmpl
xchg
sub
mov
scas
mov
sbb
mov
outsb
stos
and
pop
jle
pop
push
leave
add
es
mov
popf
mov
negl
pop
std
out
xchg
imul
in
insl
je
add
cmpb
aad
fdivl
mov
sub
sub
or
int3
ds
cmp
push
fstl
outsl
in
mov
outsl
xchg
add
pop
cmp
sti
inc
ds
movsb
dec
adc
push
mov
adc
adc
sbb
cmp
mov
dec
add
sbb
adcl
lret
out
in
dec
xorl
mov
cmpsl
call
mov
xorb
daa
and
ds
psrlq
imul
mov
push
and
cmp
into
and
mov
jg
xor
inc
repz
test
sbb
sti
rorl
nop
hlt
xchg
cld
sub
mov
cs
mov
cld
sbb
or
out
dec
shll
jne
fistpl
push
mov
jecxz
push
sub
and
scas
xchg
sub
mov
push
pop
xchg
scas
sub
and
repz
push
or
ror
xlat
sub
test
cmp
push
cmp
fidivrs
jl
pop
les
adc
jno
xor
push
pop
int
xchg
pop
shll
inc
pop
das
inc
push
cmp
fs
mov
gs
pusha
movsl
xchg
jge
jb
adc
rcrb
ret
inc
in
jl
scas
je
nop
or
and
bound
pop
fwait
cmp
mov
dec
jecxz
jno
sub
sub
and
sub
mov
or
ret
loopne
pop
repnz
gs
adc
jb
insb
mov
jbe
xor
loope
xorl
stos
test
push
scas
xchg
lret
addr16
orl
into
xlat
mov
es
adc
lcall
inc
aad
out
test
arpl
xor
add
xorl
sbb
mov
sub
call
mul
mov
lret
insl
cwtl
mov
in
movsl
mov
out
xchg
repnz
cmp
jle
mov
rorl
xor
ljmp
sbb
popf
mov
ret
bound
cmp
in
jp
cltd
and
sbb
mov
sbb
lods
sub
pop
loop
push
mov
push
xor
add
arpl
mov
jae
and
adc
shll
push
mov
adc
sbb
mov
in
cmp
fs
mov
jno
mov
pop
aam
loopne,pt
bnd
push
lea
mov
aam
cld
cmp
test
pop
pop
in
push
mov
sbb
and
ficoms
xor
clc
roll
in
ja
fists
pop
jg
sub
aam
mov
scas
dec
popa
jge
dec
xchg
movsb
test
jno
jae
push
sbb
xchg
ljmp
icebp
ja
and
jmp
leave
adc
les
mov
mov
jbe
jne
hlt
inc
inc
incl
xchg
gs
add
pusha
cmp
lea
cmp
pop
inc
pop
sbb
enter
scas
mov
insl
pushw
test
inc
sub
lret
dec
mov
fimull
lods
pusha
clc
or
add
bound
jo
xchg
xchg
xor
xchg
ficoms
jnp,pn
in
scas
dec
and
aad
jmp
dec
push
hlt
cmp
add
popa
or
push
dec
cs
inc
push
jmp
push
shll
mov
and
pop
shr
push
or
xlat
inc
dec
pop
cmpsl
mov
push
pop
mov
out
lock
add
leave
pop
mov
insb
jg
jae
test
pop
fdivrp
lahf
cmpsb
out
pop
mov
call
add
pop
ret
jo
jge
cs
inc
xchg
mov
sbb
aad
ret
xchg
stc
mov
push
sub
mov
loope
cmp
push
ljmp
loop
sub
pop
test
aam
sub
out
sbb
push
iret
setne
icebp
cmp
clc
jge
stos
movsb
pop
mov
mov
icebp
insl
cmpxchg
dec
adc
add
inc
bound
outsb
cmc
out
and
stc
rcrl
push
ret
insb
adc
stos
xchg
fs
scas
jne
and
out
inc
xchg
push
movsb
mov
inc
mov
xchg
add
jb
fcmove
mov
fs
fs
inc
and
pop
adc
add
dec
into
decl
pop
push
stos
jmp
cltd
or
sbb
daa
aam
sbb
xor
mov
mov
mov
data16
mov
pop
mov
popa
fwait
xlat
hlt
inc
sub
lret
push
popa
xchg
outsl
or
cmp
mov
dec
inc
xor
xor
xchg
cmp
data16
cmp
add
push
jle
scas
pop
mov
fdivrl
xchg
shr
cmpsl
stos
jecxz
cmp
add
inc
dec
sbb
sahf
dec
fisubrs
sbb
xchg
scas
inc
ss
xor
mov
dec
xchg
je
scas
out
mov
mov
inc
out
ret
push
sbb
push
jp
daa
xchg
inc
ret
sub
mov
inc
decl
sub
imul
or
adc
ja
gs
js
push
clc
sub
loope
mov
cmp
mov
mov
data16
mov
pop
xchg
cmp
inc
mov
pop
andl
lret
mov
inc
outsb
inc
xlat
fisttps
mov
aam
dec
and
or
rclb
push
mov
clc
clc
scas
dec
ret
mov
cmp
jg
lcall
mov
pop
dec
add
std
jno
xor
rcrl
std
nop
mov
shlb
mov
fsts
mulb
je
push
pop
push
pop
loopne
inc
and
ss
push
js
sub
sbb
nop
aam
xor
inc
inc
mov
fists
cmp
stos
add
out
dec
popa
aam
js
adc
hlt
adc
add
sbb
xor
xchg
rol
add
xor
dec
dec
and
loope
jmp
adc
add
mov
push
or
add
div
mov
mov
mov
mov
push
mov
loope
mov
cmpsl
lods
inc
popa
pushf
jge
clc
jp
insb
mov
into
rclb
pop
jecxz
sbb
ljmp
das
clc
gs
ja
ss
or
push
cmp
jnp
dec
mov
jae
xchg
add
roll
or
push
xchg
push
clc
jmp
dec
imul
adc
xor
sbb
pop
add
jge
pusha
mov
mov
shrl
lea
add
stc
test
push
scas
push
cmc
lret
rcll
xchg
adc
sub
into
add
pop
cld
fmull
lea
cmp
aas
stos
in
cmp
ja
mov
jp
adc
cmp
add
jnp
clc
jae
ja
jl
jne
into
dec
stc
mov
ficoms
cmp
dec
push
cmc
dec
hlt
popa
insl
inc
clc
add
hlt
test
jb
cmpsl
mov
xchg
aaa
aas
movsl
iret
pop
sub
jle
loop
adc
iret
insb
xchg
aam
cltd
jg
stos
mov
dec
xchg
jb
adc
pop
mov
cmp
inc
xchg
mov
adc
sbb
dec
fs
cmc
lret
in
sbbb
fcmovu
lcall
movnti
add
push
out
push
jns
mov
mov
mov
pusha
xor
aam
cltd
push
mov
mov
daa
mov
cmc
pop
xchg
mov
mov
mov
push
jb
pop
pop
test
inc
inc
pusha
xchg
mov
mov
sbb
xchg
xchg
fs
jae
js
jne
ret
subl
aas
xchg
gs
xor
cmpsb
daa
add
or
pushf
enter
pop
shlb
sub
int3
lods
imul
aas
pop
ret
jo
xchg
inc
in
cmp
stos
aaa
in
loopne
mov
sub
or
and
sbb
mov
in
jae
xlat
mov
cmpsl
sub
add
popa
push
mov
neg
lret
dec
mov
xchg
pop
cld
adc
push
imul
adcl
int
dec
outsb
andb
or
xchg
add
push
lea
sarb
mov
cld
cmpb
lret
push
test
jge
jno
mov
push
push
xchg
outsb
xchg
lods
inc
rclb
and
out
popl
in
shrl
lret
in
mov
cmp
jae
mov
xor
hlt
dec
sahf
in
push
dec
insb
push
sbb
test
jo
or
mov
out
decb
mov
push
decb
addr16
addl
data16
push
addb
mov
cmp
out
js
add
add
mov
adc
int
lret
lods
cmp
shrb
dec
pop
scas
dec
in
dec
ja
pop
or
xlat
mov
cmpsl
jle
adc
fdivrp
push
loop
int3
ja
push
cmc
pushf
or
in
cwtl
and
xchg
pop
push
xlat
jbe
jb
dec
orl
nop
out
lds
fwait
stc
movb
mov
inc
xchg
out
xchg
mov
ljmp
mov
sub
pop
mov
cmp
lds
lret
jbe
pushf
pop
push
stc
fcmovu
fisttps
push
cli
aas
mov
andb
xchg
dec
pop
mov
sub
subb
xor
mov
push
mov
mov
in
sbb
scas
mov
or
mov
in
and
fwait
hlt
add
pop
cmpsl
repz
lahf
sbb
cmp
addb
test
imul
stos
cmpsb
sbbb
pop
xchg
mov
data16
dec
mov
movsb
inc
insb
pop
pop
aaa
xchg
cmpsl
xor
cwtl
hlt
push
xbegin
add
lret
push
sub
aam
sbb
in
data16
imul
nop
std
mov
add
ret
sbb
fwait
mov
fst
cmp
int
adc
adc
int
fstpl
push
mov
xchg
mov
jne
test
leave
movsb
sub
pop
jnp
push
sub
mov
lret
ja
inc
lcall
cmpsb
je
std
sub
push
hlt
fwait
xchg
xor
pushf
xor
sub
cmp
rcrb
inc
out
pop
stos
repnz
dec
movsb
in
pushf
testb
loope
loopne
test
cmp
gs
adc
addr16
or
fisttps
dec
daa
mov
and
adc
test
testb
push
lods
iret
inc
adc
lcall
imul
fistpll
lea
shrb
cmpb
scas
shl
add
inc
push
addr16
sarl
inc
jl
xchg
or
orl
leave
inc
daa
fisubl
mov
in
out
sub
dec
stos
cmp
jg
cwtl
nop
loopne
cld
pop
cmp
xchg
mov
scas
xor
stos
xchg
pop
sub
inc
or
out
add
push
cmp
sub
push
cs
repnz
cmp
jno
addl
mov
cwtl
pop
fdivr
fisubrl
cld
ret
xchg
pop
mov
push
outsl
negb
loop
gs
sbb
xor
ficompl
add
lds
jecxz
shlb
xor
jmp
push
nop
mov
sub
push
mov
or
and
cmp
mov
lret
fists
fsts
mov
jmp
scas
push
out
ret
icebp
sbb
sbb
fstpl
fsubl
jmp
cld
xchg
ret
mov
outsl
add
shl
scas
and
push
in
xor
inc
test
push
mov
pop
fistpl
sti
pop
cmc
or
mov
ret
idivb
leave
mov
mov
pusha
pop
jecxz
dec
push
inc
dec
in
pusha
and
jg
and
mov
mov
or
shll
arpl
lods
sbb
rolb
mov
ljmp
mov
fldenv
inc
push
cmp
jb
dec
add
fsubr
dec
out
add
add
or
dec
insb
lcall
cwtl
pusha
xchg
jbe
pop
mov
leave
orl
stos
movsb
push
sub
aad
xor
lahf
bound
sbb
mov
sbb
adc
neg
iret
xorl
out
xchg
ljmp
push
stc
outsl
mov
negl
cmovb
or
adc
mov
loopne
xor
lret
inc
xor
mov
sub
cmpsb
fstps
rcl
mov
stc
sbb
add
ficomps
out
out
sbb
les
jge
sbbb
outsb
cmp
hlt
mov
scas
cmp
push
xchg
jmp
adc
dec
cltd
push
gs
movsb
in
jg
lahf
mov
jge
bnd
scas
enter
loope
iret
out
lahf
out
sbb
jnp
or
jns
scas
jno
mov
inc
fistpl
add
call
repz
cmc
mov
aaa
sti
xchg
and
pop
push
imul
fstpl
test
dec
jo
cltd
pop
ret
into
or
sub
out
mov
sub
mov
mov
popa
mov
pop
loopne
sub
test
jnp
xor
sbb
adc
call
pop
lahf
fadds
pop
add
mov
out
inc
fcmovu
mov
enter
jo
dec
cmpsl
hlt
dec
ja
mov
addb
jp
dec
nop
cmp
lds
sub
mov
sub
mov
nop
inc
pusha
mov
mov
ljmp
and
repz
push
out
arpl
imul
add
shl
xchg
outsl
repnz
addr16
mov
insb
jo
and
push
push
ds
mov
or
add
pop
lcall
pop
popf
ror
push
mov
stos
stos
and
push
adc
add
push
push
ds
adc
in
cli
outsl
pop
or
inc
xchg
stos
push
and
jp
fsubp
xchg
sbb
shlb
pop
pop
dec
call
das
neg
notb
lcall
lea
inc
adc
sbbb
cmc
rcrb
test
dec
das
ss
inc
inc
xchg
subb
in
xlat
shrb
dec
jns
jle
loope
inc
in
push
pop
push
dec
test
je
or
add
adc
sub
dec
or
cmp
push
rcr
xchg
mov
adc
out
das
and
add
dec
jp
mov
lds
xlat
shll
fists
mov
adc
lea
mov
lret
roll
pop
jnp
roll
lea
jne
mov
pop
leave
out
data16
or
movl
jge
xor
fcomps
xor
sarl
jle
xchg
ret
idiv
roll
mov
jnp
clc
adc
inc
mov
and
jl
adc
xorb
cmp
mov
scas
ss
pop
pop
sahf
xor
in
mov
adc
cmp
cld
push
test
cmp
incl
lret
lahf
movsb
roll
inc
inc
rclb
and
add
mov
xchg
mov
fsubrl
mov
mov
sub
push
adc
sub
jnp
mov
inc
jnp
push
inc
mov
dec
dec
xor
rcll
push
cs
ficomps
pushf
mov
mov
xchg
mov
xchg
fistl
mov
rorl
rcrb
shlb
hlt
inc
enter
stos
in
and
and
test
sbb
xor
jmp
sti
fbstp
push
cmp
loope
mov
sbb
subl
mov
jg
push
mov
push
notb
or
push
cmp
imulb
and
xchg
arpl
mov
dec
xchg
xchg
xor
mov
cwtl
and
pop
inc
mov
in
ja
mov
dec
mov
or
idiv
inc
xchg
push
or
mov
mov
std
or
push
pop
roll
fisttpll
sar
push
pushf
mov
shrb
sbb
out
or
xchg
cmp
fwait
icebp
or
sub
mov
jae
sbb
sbb
adc
push
inc
icebp
adc
test
push
mov
inc
add
jge
filds
fisubs
dec
adc
mov
pop
mov
mov
sahf
inc
sbb
fstpl
adc
imulb
and
xchg
stos
adc
or
xchg
rcl
rcl
mov
popf
pop
fs
cmp
lock
add
mov
mov
loopne
dec
lret
mov
sbb
jge
insb
cs
jle
lods
mov
out
incb
mov
mov
icebp
in
sbb
loope
pop
inc
pop
inc
andb
pop
and
sbb
stos
jnp
mov
push
dec
or
adc
shll
mov
xor
or
xchg
push
xchg
pushf
imul
cmp
fwait
xor
cmc
sub
cmp
dec
push
sti
mov
cmpsl
xchg
addr16
fists
aam
inc
mov
stc
jns
das
insl
int
xor
jmp
aam
test
mov
orb
sbb
pop
mov
push
andb
cmp
iret
pop
or
pop
fidivl
add
adc
mov
ljmp
fsubrl
jbe
jno
out
adc
cmp
aaa
pop
pop
aad
mov
aas
andl
scas
lret
and
sub
mov
cmpl
push
and
xor
rorl
repz
repz
push
fsts
xchg
xchg
jmp
mov
and
add
data16
mov
mov
data16
addb
movsb
add
jo
scas
jle
sbbl
dec
or
adc
aas
mov
stc
sbb
sbb
and
outsb
out
ss
sbbl
jno
enter
xchg
sub
or
xor
push
lock
inc
pop
imul
in
cltd
scas
add
sbb
push
ja
std
bound
or
cwtl
pop
leave
pop
enter
adcb
pop
xchg
dec
test
insl
mov
test
out
pushf
pusha
pop
in
hlt
sub
xor
or
xchg
popf
dec
dec
add
in
add
xor
js
jo
test
js
push
mov
xchg
push
in
popa
mov
push
mov
iret
sahf
push
mov
cli
xor
cmc
sub
xlat
aad
mov
dec
stc
push
push
xor
dec
jae
imul
sbb
mov
adc
sub
loopne
and
les
jge
hlt
jl
mov
int3
lods
clc
cwtl
aad
push
gs
adc
stos
repz
out
xor
sar
stos
rcll
jmp
push
bound
cld
pop
bound
sahf
or
fs
cmpsl
in
cmp
repnz
add
xor
jp
mov
mov
pusha
xor
pop
fisttpll
mov
lret
jecxz
adc
rcl
dec
pop
movsb
loop
dec
arpl
pop
mov
js
aas
ja
lahf
add
mov
outsl
pop
fadds
pop
cmp
or
fwait
ss
fdivl
popf
push
out
shrl
sbb
imul
fimuls
pushf
mov
ss
and
jle
sti
test
aas
mov
mov
mov
inc
inc
pop
leave
test
jl
push
pop
hlt
loopne
pop
ficomps
fldt
xchg
sub
push
mov
push
adc
aam
xchg
cmpsb
or
jle
mov
lret
push
xchg
pop
xlat
push
pop
mov
es
and
xchg
lahf
incl
mov
enter
dec
dec
mov
sub
mov
lea
cmc
mov
clc
lret
mov
mov
sti
jns
cmpsb
jle
add
fildl
inc
mov
dec
fdivrl
mov
jae
add
ja
pop
test
insl
push
iret
pop
add
imulb
pop
bound
fwait
cltd
sti
sbb
xor
inc
aam
stos
scas
pop
jns
dec
lcall
mov
es
mov
adc
push
clc
jb
popf
gs
scas
mov
fwait
jge
xor
arpl
ficomps
mov
sahf
rcrb
addb
out
ss
enter
pop
lds
dec
sarb
or
xorb
inc
push
mov
sbb
and
pop
pop
add
in
fwait
inc
xchg
cmc
adc
push
shrl
inc
sub
lahf
lea
push
lock
jle
fstpl
addb
dec
test
pushf
adc
lret
push
mov
addr16
push
ficompl
push
inc
dec
cmc
mov
rcl
dec
add
cmpsb
jns
inc
lds
sbb
imulb
and
dec
dec
out
pop
lret
loopne
out
push
in
cmp
mov
mov
ss
or
out
adc
leave
xlat
adc
cltd
and
jge
cmpsb
aad
in
push
push
gs
out
loope
mov
mov
test
inc
xlat
pusha
ret
jp
fisttpl
je
arpl
popf
pop
dec
mov
ret
fwait
mov
stos
pop
mov
je
dec
addl
cwtl
jne
and
cmp
mov
dec
xor
lea
dec
pop
rcll
cli
ret
sub
jle
xchg
jbe
insl
aaa
in
pop
jl
xchg
push
data16
add
ja
sbb
jns
mov
or
ficoms
call
lahf
dec
aad
pop
pop
idivb
xchg
fildll
push
mov
adc
cld
adc
mov
add
repz
enter
xchg
stos
es
push
lock
cli
jbe
lcall
cli
out
push
inc
mov
sbb
adc
cmp
jmp
jg
pop
push
fwait
jp
sbb
dec
arpl
mov
dec
mov
xor
testl
out
mov
mov
hlt
mov
pushf
lods
dec
push
inc
cmc
xor
sbb
and
out
inc
jnp
cmp
sub
inc
inc
insl
imulb
jae
sbb
jno
popa
in
push
or
sbb
cmpsb
insl
repnz
in
mov
xor
das
pop
and
xorb
test
mov
push
aam
and
pop
jae
xchg
dec
xchg
fildll
pop
or
add
shrl
js
inc
push
fcomi
les
test
sub
cmpsl
xor
inc
pushf
dec
insl
rcl
dec
enter
cli
cmp
and
sarl
jbe
mov
inc
icebp
xor
mov
sbb
add
mov
mov
jno
je
fisubl
jge
out
ljmp
mov
aaa
push
lcall
xor
lahf
fscale
push
xor
dec
das
push
inc
mov
adc
dec
pop
lahf
hlt
rdtsc
ret
adc
daa
adc
adcb
iret
adc
sbb
ss
inc
jmp
adc
and
jl
inc
xor
popa
pop
sub
xor
cmpsb
scas
xor
dec
std
jle
mov
cwtl
mov
mov
aam
insb
ds
pop
xor
sbb
xor
mov
leave
addb
dec
sbb
mov
cltd
sbb
lret
sbb
mov
xchg
inc
cltd
sahf
addb
into
jmp
push
or
cmpl
daa
jp
adc
mov
imul
adc
xchg
jmp
popa
dec
mov
push
lret
ljmp
movb
outsb
imul
and
jmp
pop
or
cltd
call
and
jb
stos
lock
imul
sahf
inc
sub
jb
sub
mov
xor
adc
mov
jle
push
ss
pop
dec
cld
xchg
xchg
into
enter
jg
dec
mov
std
out
or
out
mov
push
pop
out
jmp
mov
push
and
icebp
sub
mov
and
test
inc
fildl
sub
or
xchg
mulb
data16
cwtl
sub
mov
popf
repz
jne
es
xor
cmpsb
pop
xorl
lds
inc
loope
inc
popf
imul
filds
cmp
int3
sbb
jge
xchg
ret
outsb
loop
sub
add
cmpsb
mov
popl
jne
jl
mov
and
and
push
sbb
mov
sub
popf
ss
fprem1
dec
jb
xor
pop
or
les
int3
rol
ljmp
lds
xorb
jne
loop
imul
ficoms
inc
and
fsub
sub
mov
push
mov
movsb
pop
sti
xchg
xchg
lcall
xchg
mov
cmc
shrb
fwait
iret
push
fdivl
xchg
mov
cli
subl
cmp
lods
in
or
fs
push
push
mov
addr16
jl
inc
jae
aad
push
xor
aad
mov
pop
lds
jmp
movsl
scas
fldl
inc
add
scas
dec
mov
inc
pop
and
add
pop
push
lds
mov
sub
test
lods
pusha
cmp
and
or
pop
mov
test
or
ja
xor
outsb
icebp
lds
push
adc
test
in
add
ljmp
out
cwtl
xchg
jb
daa
pop
enter
nop
add
outsb
loop
jmp
mov
ja
std
push
cld
not
push
icebp
repz
jmp
stc
sahf
mov
dec
arpl
fcmovbe
jmp
dec
cwtl
scas
dec
in
add
and
imul
xor
add
sar
pushf
sub
ljmp
pop
sbb
jnp
push
xchg
repz
fcompl
pushf
mov
enter
sub
inc
icebp
push
divb
pop
pop
jnp
gs
pop
push
mov
push
stos
je
and
sub
pop
imul
cmp
shl
cld
sahf
clc
outsb
in
lods
mov
xchg
fcomps
out
in
dec
dec
shrl
scas
cwtl
and
iret
addl
in
jnp
mov
push
jbe
insb
gs
push
out
rcrb
xchg
sbb
inc
inc
fwait
iret
cmpsb
adc
shrb
popa
jo
mov
or
je
es
sub
fidivrl
lea
stos
dec
jo
lea
push
sub
push
movsb
std
push
xchg
inc
test
leave
xor
ret
pop
mov
sbb
add
add
xchg
mov
push
lret
insl
pop
adc
mov
imul
mov
sub
push
xchg
aam
negb
pop
push
sub
push
inc
addl
std
cmp
xor
sbb
lods
arpl
dec
xor
push
pop
or
ret
js
sbb
incl
xor
xor
xchg
adc
cmp
sarl
pop
and
pop
push
stos
mov
ret
push
push
in
movsl
dec
mov
shlb
insb
ljmp
repz
mov
or
mov
add
dec
mov
and
or
mov
call
mov
aas
cmc
and
sub
addb
pop
pop
shlb
nop
fdivl
or
lods
stos
std
sub
fbstp
das
mov
mov
gs
xchg
push
xor
loopne
add
adc
jns
mov
in
push
mov
sbb
std
mov
or
stc
ljmp
cs
out
dec
xchg
hlt
jl
or
push
cmp
scas
aad
aas
in
jg
pop
roll
pop
push
in
or
fmuls
jbe
xor
xor
fdivrs
cmp
jne
repnz
ljmp
push
cld
add
stos
pop
xchg
sub
jo
inc
imul
insb
ret
imul
cmp
loopne
inc
mov
daa
pushf
mov
jecxz
mov
xor
mov
jb
push
sbb
cmp
push
sbb
cmpsb
xchg
cmc
cltd
mov
inc
fdivrs
les
cmp
mov
cmp
fwait
sbbl
aad
add
mov
sub
les
pop
add
psllq
cmp
dec
push
iret
pusha
mov
inc
fidivrl
mov
mov
sbb
mov
pop
sarb
pop
and
dec
movsb
aam
cmc
cmpsb
jns
lret
std
ljmp
jp
cmpsb
inc
cmpl
pop
inc
stos
jns
xor
out
je
ret
daa
dec
movsl
xor
sbb
pop
cmpsl
push
out
outsl
fwait
repz
and
mov
sti
in
jb
arpl
jp
xor
mov
xchg
push
enter
scas
mov
xchg
sub
and
mov
inc
ljmp
xchg
lcall
ss
adc
and
mov
lods
push
xor
add
lret
adc
scas
push
cmp
lods
xchg
push
out
mov
or
push
lret
clc
inc
in
andl
cmc
sbb
mov
and
imul
mov
mov
mov
scas
loopne
push
jbe
std
mov
fs
and
ret
add
les
mov
mov
shl
out
jns
pop
mov
mov
movl
cltd
push
xchg
out
sti
push
ret
pop
in
or
sbb
or
jb
imul
sub
adc
jmp
incl
xchg
and
jnp
sub
jae
lret
scas
jle
jge
cmp
inc
pushf
scas
fs
orb
dec
loope
mov
data16
loope
imul
sbb
lds
fimuls
xchg
or
dec
test
jecxz
mov
push
jmp
and
ds
inc
cmp
and
outsl
and
in
fcomps
xchg
cmpb
mov
shll
sub
mov
push
push
data16
xor
ficompl
in
pop
push
and
repnz
push
stc
pop
adc
xchg
dec
push
sbb
xchg
push
into
test
iret
ljmp
push
js
and
pop
scas
mov
jbe
add
popa
mov
push
lret
shlb
mov
decl
mull
push
rcl
jns
add
sbb
rorb
xchg
sub
sub
ret
cmpl
or
hlt
lret
out
push
hlt
lret
ret
out
add
jl
insb
mov
in
popf
das
sbb
lock
jg
sbb
shll
mov
sub
xor
nop
repz
lds
insb
pop
cmpb
lds
les
jecxz
inc
sti
dec
push
or
loope
test
loopne
lea
popa
add
pop
int
or
insl
dec
movsb
add
push
xchg
dec
jecxz
aas
xlat
ds
mov
stos
and
aam
lcall
xchg
aas
jno
mov
xor
lahf
push
adc
fcomps
add
mov
movsb
jg
enter
and
add
mov
lock
mov
xchg
mov
lods
lea
shll
shrl
fisttpl
ds
insb
daa
cmp
xor
mov
addb
add
test
lds
imul
jns
lret
stos
sti
and
jp
inc
sahf
mov
scas
pop
or
loop
loop
notl
jne
dec
sub
sub
xchg
lds
mov
xor
push
push
pop
sti
fadd
test
mov
repz
jmp
lahf
hlt
int
movsl
adc
mov
aas
test
test
sbb
pop
mov
inc
js
sti
pop
cmp
ret
mov
mov
xor
cmp
aaa
cld
inc
mov
inc
in
mov
push
movsb
mov
insl
jecxz
lea
xor
jae
inc
push
sbb
push
lock
mov
gs
sub
cmp
rcrl
jb
pop
imul
mov
or
sbb
or
sahf
sahf
shll
out
pusha
and
push
jmp
push
and
adc
push
xchg
mov
dec
popa
pop
std
fdivr
ljmp
lret
cmpl
pop
dec
pushf
aas
das
xchg
nop
call
jl
in
mov
or
fcoms
shlb
leave
inc
xchg
loopne
jo
mov
pop
test
imul
or
xchg
adc
adcb
lock
push
roll
xchg
sub
scas
mov
imul
into
mov
inc
mov
or
mov
imul
mov
in
xor
xchg
mov
call
pop
jne
pushf
out
sti
movb
adc
sbb
jnp
xchg
mov
movsb
pop
pop
in
sbb
fadds
in
jne
mov
mov
xchg
cli
je
call
mov
pop
callw
push
inc
xor
push
fiaddl
fwait
cmpsl
push
rorb
int3
mov
addr16
xchg
stos
cld
dec
faddl
jle
jl
cmpsl
mov
adc
mov
in
or
fistpll
sub
mov
pop
fwait
inc
popf
idivl
or
pop
paddb
and
mov
and
pusha
pop
lea
xor
cltd
mov
aaa
pushf
mov
popa
inc
xchg
inc
xlat
push
or
mov
dec
mov
adc
out
xor
jno
fwait
xchg
lahf
lds
xor
xlat
sbb
inc
jl
arpl
fidivrl
arpl
adc
add
mov
add
loope
cmp
xchg
push
xchg
xor
into
out
jbe
dec
das
push
push
add
outsb
mov
aad
aas
movl
xchg
or
ficompl
test
int
push
sub
and
mov
roll
test
add
xchg
sbb
ss
subl
xchg
faddl
aaa
sub
aas
pop
pop
adc
mov
mov
mov
jl
in
aaa
jge
jb
cwtl
repnz
jg
jmp
jnp
mov
and
sub
mov
pop
bound
icebp
xor
mov
and
xor
add
rorl
iret
mov
aas
int
stc
cmp
out
cmc
xchg
clc
daa
mov
mov
mov
push
mov
xor
and
test
and
pushf
icebp
mov
jmp
cmp
inc
ret
mov
or
cwtl
or
outsb
lret
jb
jle
jmp
daa
pop
mov
mov
inc
stos
cmpsb
xor
and
jb
mov
pop
aaa
inc
pop
lahf
pcmpgtd
adc
in
popf
scas
inc
test
fimuls
sub
in
incl
cmpsl
cmp
mov
pop
mov
push
lret
pop
sub
cmp
or
cs
popa
sub
es
push
bound
xor
sub
mov
les
inc
sbb
sub
lds
shrl
stos
xchg
mov
rcrb
js
xchg
xchg
subl
xor
xor
pop
fsubrs
dec
jg
orb
or
out
add
add
pop
mov
mov
mov
sub
dec
clc
fcompl
bound
int3
mov
dec
movsl
jecxz
clc
xor
push
dec
xchg
out
int3
mov
or
xchg
inc
and
mov
sub
popa
test
jae
loope
jp
adc
pushf
push
out
mov
push
dec
sub
pop
add
adc
jb
test
xchg
mov
or
push
sti
repz
pop
les
inc
bound
adc
inc
int3
push
icebp
push
rorb
push
ret
imul
outsb
aas
fisttps
cmp
lcall
add
pop
dec
les
data16
add
in
cwtl
mov
xor
mov
and
nop
bound
fnstsw
sbb
out
fs
pushf
test
jbe
scas
jecxz
sub
inc
or
xor
pop
mov
xchg
es
fadds
stc
mov
push
mov
ljmp
mov
sbb
jne
push
imul
stos
pop
push
cmp
push
dec
push
push
leave
bound
adc
repz
std
add
add
pop
jo
negl
mov
and
push
fnstenv
loop
pushf
mov
jle
or
mov
test
outsl
push
repz
test
or
lahf
cmp
push
inc
sbb
je
adc
xchg
mov
mov
or
divb
dec
sub
outsb
push
add
xchg
orl
xchg
imul
rcll
and
xor
sbb
scas
mov
adc
loop
sbb
je
sbb
sbb
adc
mov
sub
xchg
sti
lods
enter
js
mov
xor
xor
cmc
orl
iret
mov
sti
pop
cwtl
mov
mov
pop
push
nop
hlt
sahf
push
mov
sahf
lods
xchg
mov
aad
int3
scas
pushf
sbb
cmp
mov
incl
lods
or
jecxz
jbe
jbe
dec
call
dec
cmp
inc
call
or
ret
pop
hlt
push
jae
rcrb
stos
xchg
lods
cmp
xchg
and
imul
mov
les
dec
jle
xchg
stc
cmpsl
scas
sub
cmp
mov
lods
clc
lds
lods
xchg
in
inc
or
dec
dec
fbld
aas
stos
out
push
push
cld
or
xor
adc
mov
pop
pop
loope
pusha
sbb
sub
rcll
out
mov
jmp
test
pop
les
adc
inc
ljmp
or
das
mov
aas
mov
leave
and
mov
lea
or
jae
xor
mov
lret
inc
cmp
cmpsl
pop
jae
inc
shll
sbb
out
pop
add
add
xor
push
cmp
fdivrl
jmp
mov
jmp
xor
adc
orl
xor
mov
test
push
mov
movsl
push
pop
clc
xchg
jne
mov
nop
cli
mov
adc
mov
ds
inc
dec
data16
data16
lret
cmpsl
mov
cmp
mov
sub
lds
cmpsl
adc
gs
loop
jmp
adc
sub
inc
aad
jno
mov
pop
lret
xorb
or
sub
push
pop
and
cli
and
push
fmuls
out
cmp
xchg
arpl
xchg
js
push
mov
add
repnz
fnsave
cld
jl
into
aam
mov
inc
add
sar
leave
test
imull
cld
aad
push
sub
mov
adc
bnd
imul
lret
mov
xor
add
add
pop
mov
sahf
mov
mov
cmp
filds
jne
dec
int
faddl
lea
adc
jns
sbb
cs
jns
push
lds
sbb
cmp
sbb
addr16
je
cmp
sub
sarl
xor
push
test
dec
outsb
xor
in
nop
add
sbb
push
int
xchg
sub
jmp
and
and
imul
ljmp
jmp
cmpl
pusha
xor
std
in
jbe
fsubl
iret
push
dec
movl
inc
xchg
aas
lods
mov
cmp
xor
fstl
mov
jmp
fmull
pop
test
xor
inc
or
es
sarl
sbb
popf
js
roll
std
xor
je
sbb
mov
lahf
pop
pop
jae
fistpl
mull
movsl
mov
sbb
out
loope
cld
push
xor
ja
push
nop
int
fiaddl
shll
into
fcmovnbe
pop
in
mov
rorb
adc
out
test
push
test
out
fdivl
xor
out
loop
stos
aam
sub
cmp
pop
push
lahf
jb
out
leave
sub
jns
cli
mov
jle
sarb
and
adc
ljmp
rolb
int3
pop
fs
pop
rorl
adc
out
sub
xor
jge
movsl
sub
leave
pop
arpl
adc
jl
roll
inc
shl
shll
xchg
les
in
mov
mov
adc
int
sbb
mov
jg
call
daa
negl
mov
fucom
mov
leave
xlat
hlt
mulb
cmpb
inc
sahf
ljmp
xlat
out
jg
cs
push
push
js
jne
xor
mov
dec
das
dec
sbb
mov
push
xchg
dec
aas
fcoml
ficomps
shlb
cmp
addr16
insb
mov
inc
or
cmc
sbb
dec
movsl
daa
mov
movsl
out
push
lcall
aad
clc
jg
dec
ds
mov
enter
movsb
dec
fcmovb
loop
and
jl
imul
adc
xor
fnstenv
inc
push
insb
fistpll
stc
shr
addr16
push
sbb
daa
sub
je
ret
xor
bound
adc
stc
in
je
loop
jecxz
xchg
xor
lock
and
cwtl
std
jl
mov
out
les
in
cmpl
ret
pop
jp
fsubs
xor
mov
lret
push
cs
pop
lahf
aad
cmp
inc
cwtl
pop
mov
subb
in
cmp
push
xchg
jle
push
mov
mov
addr16
pop
sbb
cmp
mov
mov
add
inc
fnstenv
mov
xor
pop
ljmp
pop
test
jnp
clc
mov
jle
adc
cltd
sub
or
movsb
adc
cmc
lahf
pop
cmp
stc
repz
xor
and
mov
sti
out
shrl
add
add
pop
call
mov
in
in
outsb
xor
jbe,pt
shll
push
cmp
push
push
mov
rolb
push
push
xor
lcall
mov
pushf
lds
mov
loop
add
mov
pop
inc
sbb
daa
les
pop
int3
mov
mov
rcll
inc
sbb
jecxz
popf
pop
cmpsb
lret
dec
and
jns
push
jmp
mov
enter
jno
ljmp
loop
lret
leave
jbe
popa
je
aaa
pop
pop
loope
std
sub
sahf
jne
mov
xor
sub
jnp
mul
lock
jne
arpl
out
or
jg
mov
out
out
inc
sbb
mov
test
cmp
call
and
pop
subl
add
add
xor
testb
cmp
inc
mov
cmp
in
mov
adcl
imul
test
push
addb
jmp
cmc
jmp
mov
pop
lret
pmullw
xchg
mov
sub
mov
aam
mov
fsubrs
lock
bound
in
jmp
cmp
mov
add
fimull
enter
jnp
inc
push
jno
mov
jne
or
or
pop
les
repnz
mov
pop
fisubrl
inc
pop
outsb
dec
inc
inc
jae
push
insb
sub
scas
lock
fildl
cmp
fwait
mov
add
pop
cli
add
test
adc
mov
lret
fdivrl
ret
cmp
mov
mov
shrb
add
icebp
or
lret
cwtl
push
push
jae
and
int3
push
out
mov
lret
jge
jle
iret
ror
mov
and
clc
mov
inc
xor
ss
dec
cltd
mov
popa
push
inc
xor
xchg
cmp
lods
mov
cmp
mov
dec
mov
or
pop
adc
jae
or
fadds
cmpsb
xor
sub
mov
mov
pop
inc
dec
popa
or
or
adc
push
jle
pop
stos
xchg
mov
inc
bound
mov
mov
cs
dec
mov
lea
pop
jmp
add
movsl
les
movsl
pop
mov
pop
xchg
add
loop
orb
mov
xor
and
imul
adc
xchg
and
loope
jbe
repz
outsb
aam
les
aaa
out
and
ds
jns
inc
dec
inc
adc
jnp
sbbl
test
mov
ss
add
xchg
stos
push
sub
inc
rolb
fs
into
push
xor
lods
fmull
jnp
clc
cmpsb
push
xchg
out
mov
in
adc
jle
fwait
add
repz
popa
sub
and
xor
cmpsl
mov
jp,pn
mov
notb
test
sti
loope
mov
sub
test
shlb
jno
sub
xor
scas
fimuls
jmp
and
xor
ds
pop
adc
aam
push
xor
pop
ljmp
in
rorb
mov
mov
rolb
and
je
test
rorl
mov
push
fs
les
mov
xor
lret
cli
repnz
fildl
fidivrs
bound
loope
loop
mov
cmp
ret
fisubrs
xchg
fcomi
cvttps2pi
xchg
pop
sbb
imul
mov
pop
push
fnsave
mov
iret
cmpsl
xchg
jp
pop
jo
sar
dec
jg
out
pop
orb
les
adc
add
jmp
sti
iret
adc
hlt
pop
xor
adc
xor
stos
ds
shrb
mov
adc
fcompl
inc
xor
gs
jl
jmp
in
test
clc
movsl
hlt
sub
stos
dec
roll
xchg
pop
dec
ret
pop
hlt
inc
lds
push
hlt
sbb
xor
outsl
idivl
adc
mov
push
jge
arpl
sub
aas
cmp
jg
fisubl
cmpl
scas
mov
cmp
inc
dec
mov
and
push
test
push
pop
mov
inc
mov
mov
idivl
mov
and
fnstsw
cmpsl
sub
ss
into
cmp
lds
es
jmp
xor
sub
dec
pop
inc
add
lods
lret
outsl
gs
sbb
mov
in
movsb
aad
cld
add
fnstenv
mov
pop
mov
out
dec
outsl
push
mov
push
mov
jle
je
shll
fnstenv
adc
jnp
and
jp
test
and
test
sbb
lds
xor
in
mov
es
fwait
cwtl
shrl
cld
test
push
aas
pop
adc
xchg
sub
jle
xor
xchg
push
cmp
mov
mov
mov
jns
sbb
jns
fs
xchg
enter
xchg
addb
les
stos
insb
sbb
in
cwtl
mov
mov
rcr
cmp
dec
mov
xchg
shrb
sbb
lcall
iret
mov
out
jo
call
int3
movsb
ds
test
dec
xchg
imul
ss
stc
mov
inc
movsl
xor
push
jg
push
cs
mov
roll
add
push
dec
dec
sbbl
pop
add
lods
and
jmp
inc
test
cmp
addr16
out
push
repnz
icebp
lret
into
inc
mov
lds
mov
cmp
jl
add
lea
xor
jb
push
test
loop
sub
in
sbb
ret
ret
repz
cld
lds
dec
test
inc
in
jg
outsb
jnp
adcl
xor
out
scas
fdivl
pop
imul
sub
popa
and
addr16
sbb
cmp
adc
fsts
stc
mov
in
xlat
in
fcoml
mov
pop
xchg
addl
in
sub
inc
xchg
xchg
and
iret
pop
sti
mov
outsb
jge
aad
popa
inc
inc
sbb
mov
add
pop
outsl
repz
dec
cmc
daa
push
or
mov
xchg
mov
mov
out
rcrl
out
cld
insb
in
sub
inc
push
ds
xchg
outsl
xchg
cs
cmp
in
and
jle
or
data16
lds
jb
loope
jg
pusha
pop
aaa
dec
mov
push
pop
inc
xor
movl
fcoml
enter
xchg
shlb
adc
mov
pop
adc
and
gs
adcl
dec
mov
fs
pushl
xchg
xor
cmp
stos
testl
jmp
add
jns
or
pop
fidivs
jl
ret
jns
adc
xchg
inc
push
andl
and
xlat
jg
push
dec
and
jo
push
push
or
jo
xchg
movsb
push
insl
pop
push
xlat
mov
and
test
cmp
xchg
cmp
dec
pop
or
mov
lret
icebp
repnz
mov
nop
out
sti
fsts
pop
mov
stos
lret
jmp
test
push
ljmp
cwtl
popa
dec
adcb
addr16
adc
nop
enter
jecxz
push
into
push
mov
push
mov
jb
pop
iret
iret
xor
cwtl
add
lock
shlb
lcall
sbb
xchg
mov
dec
fcmovb
xchg
xchg
sub
test
mov
popf
call
loopne
imul
xchg
in
push
sbb
mov
lahf
daa
add
mov
xchg
fs
out
xchg
jp
std
outsb
aam
cmc
xchg
inc
aas
mov
xchg
pop
pop
pop
ret
fmuls
push
pop
pop
inc
iret
lret
dec
sbb
nop
pop
loope
scas
dec
das
pop
jno
fldl
sbbb
dec
jmp
out
jge
cmpsb
cli
dec
adc
outsb
push
ret
jge
push
adc
test
inc
or
cli
divl
inc
inc
cwtl
inc
mov
outsl
vpmacsww
dec
push
imul
adc
in
mov
mov
cmp
cld
or
fwait
imul
xchg
sbb
mov
into
xchg
xor
xor
push
hlt
sub
pop
jmp
inc
pop
roll
add
inc
pop
xlat
xchg
ret
add
mov
clc
test
adc
cmpsb
add
cmp
mov
stos
fidivrl
dec
out
insl
push
data16
mov
adc
es
pop
cmpsb
cmp
dec
ja
jbe
sub
loopne
push
pop
mov
outsb
mov
mov
xor
repz
lret
fildll
mov
lahf
cmp
mov
dec
lea
lds
adc
pushf
addl
sub
cwtl
push
fcomp
sbb
imul
sub
lock
adc
push
jns
and
loop,pt
repz
ljmp
sub
xlat
mov
imulb
std
lods
mov
push
push
scas
mov
xchg
fsubl
pop
sub
rorb
xor
lea
push
ljmp
imul
lcall
sbb
shlb
pop
popa
sub
testl
push
xchg
pop
cmp
cmpsb
inc
movsb
sbb
cmp
enter
sbb
xchg
push
cs
mov
sub
mov
dec
int
xor
add
test
xlat
pop
mov
int3
outsl
stc
sbb
andb
movsb
cmp
mov
stos
mov
add
mov
jnp
imul
jl
lea
or
les
xchg
dec
push
cmpsb
repz
adc
stos
icebp
lret
popf
cmp
fs
inc
dec
push
aam
test
pop
mov
loope
pop
js
jl
push
xchg
lcall
out
cmc
push
insb
mov
xchg
addr16
sub
in
and
push
lea
dec
pusha
xchg
sbb
fcmovu
fdivs
es
lock
mov
cmp
inc
out
mov
adc
mov
push
rorb
cltd
inc
sar
imul
rorb
fisubs
popf
cmpsl
stos
imul
sbb
xchg
adc
neg
push
iret
mov
pop
xchg
repz
dec
sub
mov
push
outsb
lcall
dec
cld
imul
fnstcw
aam
aaa
add
mov
dec
ret
shlb
dec
adc
dec
imul
movsb
jns
daa
mov
movsl
out
nop
mov
add
repnz
mov
xor
sbb
mov
lret
cmp
loopne
xchg
xorb
sbb
ds
fidivrl
adc
in
pop
push
lock
push
jmp
push
movsl
push
add
jns
mov
fwait
scas
pusha
or
aad
in
cmpsb
movsb
push
jmp
pop
sbb
aam
jae
lcall
mov
xor
imul
leave
aas
or
lea
jle
cmp
lock
out
jbe
fldcw
mov
push
xor
dec
xor
adc
dec
jns
mov
fsts
xchg
pop
push
out
jg
pop
pop
lret
loop
mov
int
xor
fistps
fwait
sbb
sbb
enter
inc
inc
mov
or
frstor
jns,pt
orb
add
gs
fistps
movsl
mov
ffree
test
arpl
jbe
sahf
aaa
notl
inc
xor
arpl
stos
mov
pop
movsl
push
cmp
add
insl
mov
pushf
mov
andl
xor
and
dec
xchg
pop
xchg
cmp
ljmp
jle
mul
and
xchg
lock
add
jl
jns
mov
imul
notl
sbb
mov
pop
mov
into
cmp
mov
imul
jge
xor
lea
push
mov
lcall
jge
push
push
loop
test
dec
push
and
and
or
mov
insb
adc
push
and
jecxz
fwait
pop
aad
fwait
ret
jo
jbe
cmp
rorb
add
and
adc
std
cmp
cmpsl
imul
jb
jnp
jnp
cmpsl
aam
jg
aam
pop
mov
pop
mov
sarb
xor
gs
clc
aas
incl
xlat
sahf
dec
pop
scas
pop
das
gs
jo
jecxz
push
neg
add
pop
and
icebp
mov
adc
ret
icebp
aas
stc
into
in
lds
sub
add
and
insl
loopne
adc
movsl
das
imul
mov
in
out
cmp
cmp
cli
repz
cmp
add
mov
adc
or
shlb
stos
fcoml
das
or
stos
add
fadd
xchg
outsl
xchg
sarb
and
test
add
rol
divl
jp
pop
xchg
push
aaa
cmp
clc
js
dec
add
sbb
and
push
jnp
cmc
sahf
cs
xlat
pop
xchg
push
out
mov
jne
inc
test
push
rcrl
cli
pop
or
or
or
add
addr16
jo
insl
push
jg
xchg
mov
or
push
inc
shll
pop
jo
pushf
pop
jmp
push
cmc
push
adc
int3
movl
xchg
jns
sbb
push
xchg
or
test
shr
nop
or
lcall
xor
dec
rcl
fsubs
clc
lahf
dec
lret
filds
adc
jle
dec
aam
ds
outsl
cmpsb
ret
int
inc
rcl
movsb
sub
or
sub
daa
xchg
sub
nop
xchg
ljmp
xchg
jo
mov
cmp
or
mov
push
shlb
dec
jmp
dec
js
cmc
xor
pop
jae
out
dec
or
mov
adcl
int3
or
dec
cwtl
add
fsubl
adc
pop
or
inc
aam
push
push
or
mov
loop
xor
adcl
icebp
lds
adc
jecxz
push
and
xchg
jmp
mov
add
std
sbb
or
loope
sbb
mov
fiaddl
cmp
test
xchg
test
aam
sbb
add
jl
jo
pop
lock
mov
fildll
enter
mov
lods
mov
mov
mov
add
pop
jecxz
jo
popf
and
pushl
mov
and
add
jnp
jle
sbb
fidivrs
adc
test
mov
lds
pop
pop
shll
xlat
test
or
inc
jmp
hlt
fwait
pop
or
jo
mov
xchg
lahf
mov
sbb
std
xchg
push
enter
sahf
popa
xchg
mov
and
mov
jmp
hlt
cwtl
push
shrw
cmp
add
shl
xchg
push
cld
mov
les
int
xchg
xchg
mov
sbb
jnp
vshufps
cmp
push
inc
push
fcomi
imul
and
outsl
mov
insb
xor
xchg
lds
xchg
mov
mov
out
test
int3
imul
or
push
sbb
js
add
push
or
inc
nop
cmp
dec
cmp
mov
adc
push
mov
mov
mov
sub
jbe
and
mov
into
out
dec
push
leave
ret
dec
das
cmpsb
jae
cld
and
dec
lret
outsl
imul
imul
and
lea
rcrl
mov
jmp
pop
cmp
mov
aaa
cwtl
and
pop
xchg
lods
xchg
dec
inc
aam
das
jmp
push
cwtl
lock
or
pusha
aaa
xchg
inc
adc
dec
int
stos
jns
or
dec
mov
dec
jbe
push
aas
add
hlt
mov
mov
jmp
inc
xchg
fs
pusha
sub
test
cmp
add
jle
push
popf
lods
mov
mov
pop
movsl
out
shll
enter
cmc
and
lret
push
dec
mov
push
and
fwait
add
push
int
pushf
sbb
inc
cltd
cmp
xor
dec
test
andl
push
sbb
mov
jns
idivl
lods
push
das
ds
pop
jle
mov
mov
shrb
sub
std
decl
call
adc
insl
mov
jbe
mov
push
ret
xchg
push
and
mov
mov
nop
push
iret
out
ret
sbbb
pushf
out
push
add
pop
rol
arpl
dec
inc
adc
sub
xlat
jge
pushf
sbb
xorb
xor
out
dec
inc
sub
fstl
and
mov
push
sti
mov
adc
or
fs
enter
fiadds
lock
mov
sub
sub
in
push
loopne
dec
popa
lret
inc
ficomps
mov
or
stos
sub
push
out
lret
inc
leave
pop
lcall
lahf
sbb
pop
and
jo
mov
in
sbb
lahf
cld
cmpsl
pusha
out
std
ficompl
pop
and
pop
repz
cli
pop
mov
push
fmull
hlt
enter
jne
pop
lods
add
mov
ret
push
push
lahf
fsubs
xor
fldl
aas
stos
jmp
push
pop
ret
lock
mov
fwait
movsl
gs
mov
sbb
jae
shld
popf
mov
mov
xor
sbb
mov
int
pop
mov
mov
jnp
or
lret
push
leave
adc
ficoml
sub
xor
nop
dec
stc
cs
fdivr
out
sbb
rcll
shrl
fisttpl
add
sahf
shl
fs
outsb
mov
insl
or
scas
test
stos
push
sbb
sbb
mov
pop
adc
mov
jg
sub
popa
mov
push
shll
in
jnp
std
fdiv
or
cmpsl
pop
ficomps
and
xchg
insl
add
pusha
sarb
sbb
dec
arpl
mov
sbb
lds
xor
iret
jbe
clc
add
push
dec
sar
pop
and
sub
sub
lret
out
loope
xchg
xlat
pop
lds
add
stos
fdivrs
test
cltd
push
orb
pop
dec
psubb
lret
push
clc
shrb
adc
std
repz
test
and
mov
addr16
sbb
adc
xchg
aas
sbb
rolb
cmp
adc
sbb
xlat
and
sbb
movsb
aas
lret
adc
sbb
ss
xor
mov
aam
mov
insb
push
shrb
scas
out
mov
lods
mov
jne
xchg
aas
xor
sarl
insb
xlat
xchg
or
xchg
in
jg
fwait
aam
adc
fdivs
or
xor
rolb
dec
mov
push
fdivr
pop
movsb
insl
sub
int
cmp
jmp
cmp
sbb
je
sbb
ja
aas
cmpsl
and
sbb
jl
dec
psubd
xchg
test
inc
push
lods
inc
and
scas
cli
hlt
mov
mov
mul
int
pop
rcrb
inc
stc
inc
lcall
addr16
jne
sub
dec
cmp
push
and
pusha
sbb
mov
jbe
dec
xchg
inc
jns
daa
and
adc
aam
dec
xor
stos
lds
clc
jl
mov
or
lock
inc
jl
add
mov
add
or
dec
sbb
fwait
bound
pop
adc
sahf
cmc
dec
inc
loopne
fisubs
dec
lock
inc
outsb
mov
push
xor
jecxz
pop
pop
dec
fnstcw
je
cmpl
lret
add
push
xor
push
js
fldenv
inc
mov
or
xchg
dec
stc
shlb
and
jl
test
inc
and
pop
or
mov
xchg
iret
in
push
stc
int3
or
push
leave
inc
sbb
repz
and
jno
add
or
jno
xchg
add
cmpsl
lret
pop
sub
fwait
loop
mov
sbb
jae
inc
mov
or
push
rcrb
lret
popf
pop
sbb
and
inc
and
popa
out
jmp
inc
loopne
cmp
jl
add
and
stc
mov
push
call
mov
and
cli
clc
xlat
and
jne
cmpsl
sti
out
test
inc
dec
and
aam
stc
mov
inc
out
mov
inc
sub
mov
sbb
arpl
andl
adc
xchg
dec
dec
popa
xchg
sbb
pop
in
stos
fistpll
mov
dec
repz
dec
dec
gs
cs
shlb
jb
add
and
in
jp
xchg
mov
sbb
sbb
xchg
inc
pop
sbb
movsl
push
push
repnz
mov
rcrb
bound
es
mov
inc
js
addr16
and
inc
cmc
jmp
pop
shrb
ret
jmp
fs
jbe
ficomps
and
jle
out
daa
cmp
ficompl
lret
or
mov
push
cwtl
out
add
add
lret
jbe
mov
or
call
sub
or
jg
cmc
out
aas
pop
mov
jg
hlt
mov
push
addr16
push
loope
inc
sub
mov
sub
adc
mov
and
inc
fstpt
sti
ficomps
fs
fistl
mov
dec
hlt
jp
add
inc
dec
and
pop
mov
adc
mov
xor
or
inc
mov
lahf
imul
call
imul
xchg
cwtl
ficoms
jne
mov
sti
dec
cli
mov
fwait
xchg
cmp
mov
adc
pushf
xchg
mov
sbb
push
add
data16
rcr
in
xorb
xchg
pop
loop
mov
addr16
jbe
jo
cmpsl
push
shlb
pop
push
and
push
aas
jp
lds
jl
sub
mov
dec
lods
jp
sub
jo
xor
add
or
sbb
arpl
les
sub
outsb
and
cmp
mov
cmp
clc
lret
pusha
out
dec
mov
test
sub
std
dec
mov
test
scas
pop
or
fwait
dec
pop
dec
outsl
icebp
dec
pushf
out
jl
or
scas
mov
and
int
pop
loopne
mov
xor
mov
dec
jnp
add
mov
out
mov
xchg
or
mov
add
add
mov
jl
test
mov
in
push
dec
xchg
cmp
in
ss
scas
scas
leave
xorl
fmull
dec
cli
jns
push
add
dec
pop
lock
cmp
fs
push
icebp
in
cmp
xchg
inc
scas
cmp
call
ret
add
xor
cmp
shrb
test
inc
push
insb
in
std
adc
inc
mov
scas
sahf
sub
and
aam
subb
xor
push
dec
sub
icebp
sbb
or
out
mov
sarl
scas
sbbl
mov
lret
add
xor
push
cs
ret
divb
cmp
mov
push
clc
xor
push
and
xlat
adc
pop
lock
sub
sub
mov
dec
int
cmp
rcll
stc
mov
jle
fistps
add
jecxz
push
adc
push
sbb
adc
inc
push
pop
fucom
cmp
sti
adc
ret
jae
clc
js
push
ret
mov
add
jns
aas
ror
hlt
mov
xlat
jmp
inc
and
dec
fsubp
es
idiv
shll
pop
push
rcrb
orl
xsave
nop
cmp
loope
bound
fld
lds
mov
popf
in
mov
jns
scas
aas
xchg
andb
xor
inc
subl
jo
cmpsb
jg
mov
ja
push
mov
shr
xchg
js
jae
fcoms
sbb
mov
aas
xchg
add
in
jne
test
scas
sahf
loop
stos
test
movsb
shrb
std
cmp
xchg
xor
jbe
sub
pop
push
and
and
xor
mov
lret
popf
jl
jo
push
dec
outsl
into
push
xor
pop
adc
inc
xor
cmp
push
mov
sub
push
lds
icebp
mov
jle
sti
push
mov
jne
lock
push
popa
cmp
test
imul
pop
repz
push
ret
dec
mov
or
ret
and
jno
shlb
es
mov
call
cld
test
or
jmp
sub
movsl
inc
cltd
mov
out
push
xor
popa
popa
pop
dec
loopne
icebp
jg
cmp
or
pop
push
clc
aam
sbb
and
movsb
cmp
cltd
fidivrl
es
push
pop
or
adc
dec
cmp
lcall
cmp
pusha
ss
pushf
es
jecxz
cmp
jmp
push
test
test
push
pop
test
jo
jbe
insl
push
lea
sbb
jl
outsb
add
lods
sti
dec
mov
aam
fwait
sbb
bsr
jmp
subb
ss
popa
push
xor
bound
roll
xor
outsb
lahf
jmp
repnz
out
dec
cmp
sarl
sbb
pop
cmp
ficomps
push
hlt
test
aam
in
mov
xchg
cmp
mov
sub
inc
inc
jmp
ja
mov
or
sub
mov
mov
movsl
nop
ja
mov
and
or
je
inc
cmp
xchg
lahf
add
inc
push
movsl
jg
bound
loope,pt
in
sbb
pop
out
push
hlt
test
push
lock
sub
xorw
out
cmc
or
paddq
sar
and
pop
dec
icebp
mov
in
add
and
and
dec
mov
push
xor
repnz
pop
outsl
outsb
outsb
fiaddl
push
hlt
sbb
pop
pop
push
or
dec
fisubs
xor
daa
pop
out
repz
sub
enter
or
xor
mov
xchg
cmp
push
loope
cmp
jg
inc
rcrl
aaa
sti
idivl
clc
push
leave
cmp
repnz
shll
icebp
scas
adc
sub
push
and
mov
jns
cmpsl
mov
subl
pop
jne
fcoml
int3
gs
out
pop
das
mov
hlt
stos
ds
xorb
adc
fmuls
scas
or
addl
das
movsb
out
cmc
jbe
icebp
mov
jecxz
push
aad
js
rol
inc
rclb
cmpsl
fidivrs
push
ja
and
push
ljmp
xchg
popa
cmp
fwait
dec
and
mov
movb
pop
out
addr16
sbb
dec
xchg
das
jle
cwtl
adc
jae
jnp
fcmovu
adc
lods
ds
xchg
stos
xor
sbb
int
iret
or
cltd
push
pop
frndint
pop
push
negb
lret
pop
pop
and
dec
mov
sbb
bound
pushf
mov
movb
sti
sbbl
jno
or
lret
cmp
xchg
fsts
iret
lcall
sbb
push
push
pop
xchg
mov
outsl
adc
cs
cmpsb
xor
dec
add
inc
lahf
mov
lds
sbb
cwtl
test
hlt
daa
and
mov
and
divl
data16
popa
xor
leave
cmp
fsubl
fisttps
fcmovnbe
cwtl
mov
ss
adc
push
jl
jecxz
pop
mov
xchg
in
inc
push
leave
fwait
mov
data16
shlb
inc
pushl
pop
push
dec
stos
sbb
js
out
nop
sub
int
mov
fidivrl
or
cmp
sub
mov
cwtl
repz
cmp
xor
sbbl
fiadds
add
lods
cld
pop
xchg
mov
ffree
sub
outsb
iret
test
sbb
mov
ljmp
xorb
mov
inc
jne
testl
fists
out
mov
ds
pusha
jl
xchg
jo
adcl
pop
pushf
jbe
pop
les
push
outsl
pop
lods
mov
jns
fmull
pop
call
and
nop
aas
sub
dec
jle
adcb
sub
shll
test
mov
lcall
sbb
loope
sti
out
test
xor
pop
arpl
inc
fucom
inc
inc
pop
cmp
pop
mov
nop
rorb
push
or
pop
inc
adc
lds
pop
fcomps
sub
fsubs
test
ds
int3
adc
js
inc
pusha
or
cmpsl
push
xlat
adc
add
in
jnp
xchg
loope
mov
pop
add
mov
orl
fldl
int
xor
rcr
sub
pop
dec
mov
sub
mov
mov
or
dec
add
pop
sbb
loop
inc
jb
cwtl
ljmp
adc
gs
sbb
push
cli
or
mov
shrl
dec
xchg
shl
cmpsb
popf
or
dec
sub
fdivrl
push
pop
xchg
loopne
arpl
jb
xchg
ror
pusha
shl
lods
sub
inc
lock
push
xor
mov
sti
pop
addr16
push
mov
jbe
fldenv
mov
jge
xchg
jne
cld
lahf
mov
fisubl
scas
dec
mov
outsl
nop
mov
and
lret
sub
fimull
jle
enter
mov
dec
daa
add
cmc
pushf
pusha
outsl
mov
lret
mov
ss
ds
xor
jmp
es
stos
sbb
movsl
xchg
in
fcomip
iret
xlat
aam
xchg
out
out
pop
xchg
ret
push
mov
test
adc
mov
mov
cmpsb
es
xchg
js
nop
cmp
stc
rclb
cmp
stos
out
mov
xor
mov
fadds
jge
xor
push
adc
sub
sbb
xor
rcrb
jae
aas
dec
lds
jp
push
idivl
jno
lahf
jp
inc
inc
xor
sbb
dec
mov
pop
mov
std
fwait
jbe
xchg
xor
jecxz
xor
mulb
stc
insl
push
roll
jo
mov
movups
or
sbb
scas
mov
shrb
xor
add
and
mov
int
mov
xor
push
insb
cs
gs
mov
xchg
scas
mov
pop
cmc
clc
in
add
cmp
in
aaa
js
push
int3
adcb
call
sbb
stos
daa
sbb
dec
xor
outsb
cmpsl
enter
stos
sbb
repnz
jae
cmc
shr
jmp
mov
inc
test
imul
xchg
pop
and
mov
cmp
mov
lret
inc
lea
rcrl
jecxz
nop
imul
pop
or
push
adc
add
sbb
icebp
ret
cmpsl
add
xchg
jb
loop
pop
popf
loop
add
sarl
add
mull
cmp
aaa
enter
jecxz
stos
pop
out
lods
dec
xlat
in
xchg
out
dec
mov
in
cld
test
push
jb
jb
addr16
negb
loop
lret
or
mov
subl
lods
inc
mov
stos
aad
lock
push
xchg
pop
mov
or
ret
mov
mov
inc
push
inc
fimull
xchg
cltd
dec
and
xor
xchg
ljmp
xor
aas
lcall
out
mov
iret
lods
dec
dec
hlt
mov
xor
adc
mov
rclb
fcoml
push
shrl
or
gs
push
xor
sbb
xchg
mov
loopne
movsb
jnp
inc
cli
pop
add
push
add
sub
subl
sbb
btc
inc
jno
addr16
xlat
dec
les
and
mov
arpl
dec
loop
or
push
mov
testl
imulb
add
mov
test
add
and
aad
jl
jle
sahf
jle
sbb
je
and
xchg
outsb
pop
xor
push
add
out
inc
gs
int3
fs
popf
mov
xlat
cli
out
mov
cld
lds
arpl
shl
inc
and
fcomps
mov
inc
xor
mov
lock
mov
mov
in
cmp
das
dec
into
add
add
ljmp
jae
call
dec
leave
jno
push
push
xor
xor
out
popa
in
mov
test
push
scas
daa
or
push
pop
aam
icebp
jno
and
rcrb
sbb
cwtl
pop
dec
inc
clc
push
mov
mov
xchg
stc
lea
and
cmp
out
int3
xchg
adc
sub
jl
icebp
out
jle
call
xchg
das
add
aaa
addr16
cli
add
outsl
test
jnp
pushf
das
dec
ret
repz
fstpt
inc
lret
in
xchg
pop
or
clc
and
jno
stc
lea
imul
lds
mov
mov
xor
leave
cmp
add
in
cmp
ss
mov
push
js
xchg
mov
jo
cmp
daa
lahf
push
pop
sub
adc
gs
nop
push
fisubrs
cs
test
stos
icebp
inc
loope
out
add
aas
inc
jge
ret
fcoms
aas
pop
or
imul
mov
sahf
lret
mov
in
dec
mov
outsb
cmp
xchg
jns
scas
add
lea
push
call
cmp
scas
cs
jnp
dec
cld
rcrl
loop
clc
pop
iret
in
lahf
out
mov
sub
jno
jo
pop
mov
movsb
push
ja
fistpl
orb
xor
and
fidivl
fiaddl
fisttpl
adc
mov
hlt
adc
lea
xor
xorb
jmp
and
mov
fldt
fistpll
arpl
jb
dec
enter
aad
sub
mov
into
cmp
mov
xor
std
mov
rol
sub
push
push
mov
lock
dec
xor
push
pop
pop
jbe
pop
movsl
imul
mov
pop
hlt
es
push
ficompl
inc
lret
and
push
push
movups
je
push
push
sub
fdivrl
pop
hlt
sub
adc
into
mov
pushf
repnz
pop
int
add
pop
and
sarb
lods
imul
daa
or
rol
sub
insl
pandn
leave
cli
negl
cmpsb
and
jmp
or
insb
or
xchg
pop
jmp
aas
stc
js
inc
mov
je
and
popf
scas
xchg
mov
and
outsl
pushf
sbb
outsl
cli
xchg
xchg
enter
in
sbb
loopne
fstl
test
repz
adc
scas
xchg
fidivl
jg
inc
mov
xchg
mov
int3
sbb
mov
fs
or
mov
cmp
or
ds
outsb
mov
push
lahf
fisttpll
loope
xor
sar
xchg
sarl
push
or
xor
sub
lret
lock
scas
out
xor
dec
lods
pop
jbe
pop
lret
adc
ret
lret
and
pop
cwtl
daa
jge
xor
xchg
addr16
stos
in
mov
add
and
dec
cmp
aaa
orb
push
cmc
dec
aad
pop
jae
jge
in
adc
cmp
aas
call
movsl
sub
les
test
inc
mov
cmpl
pop
mov
mov
scas
xchg
sub
decb
fcomip
xorl
into
sub
daa
les
pop
rorb
sbb
jmp
xorb
mov
loop
adc
aas
pop
lea
movnti
xor
jl
mov
pop
loop
lcall
push
push
mov
cs
lahf
loope
add
mov
add
adc
movsl
fistps
adc
hlt
jge
hlt
xchg
or
nop
icebp
jg
fnstenv
cmc
ds
pop
cmc
sbb
adc
xor
lods
jno
fs
dec
mov
call
inc
cmc
das
in
incl
cmp
sbb
lret
loopne
in
std
lods
addb
xchg
insb
outsb
lcall
int
data16
repz
add
in
out
mov
fwait
pop
fbld
mov
mov
jo
sti
andb
pop
leave
push
xchg
stc
mov
loope
movl
adc
sti
stc
mov
cltd
jno
ljmp
xor
adc
out
xchg
lock
aaa
cmc
ljmp
jmp
add
dec
or
hlt
cli
ja
ljmp
xor
add
sbb
ds
mov
lods
adc
loop
pop
push
cltd
cvttps2pi
test
cmp
dec
pop
loop
mov
popf
and
add
sbb
in
pop
cmp
popa
cmpsb
shll
ret
int3
je,pn
sti
sarl
xchg
adc
inc
mov
mov
in
lret
pop
cmp
mov
pusha
imul
cs
inc
das
stos
lods
js
jl
xchg
xchg
jge
mov
repnz
xchg
pop
repz
enter
outsl
dec
imul
rol
cmpsb
dec
inc
adc
enter
ret
sbb
inc
add
rcr
daa
adc
mov
int3
test
mov
cmp
xchg
push
loop
in
out
xchg
push
jno
xchg
jb
lret
dec
ja
mov
fiaddl
mov
mov
mov
push
mov
mov
cmc
mov
cs
enter
outsb
andl
and
inc
sub
ret
pusha
dec
int
scas
jmp
or
mov
or
hlt
mov
mov
adc
and
pop
adc
shlb
sti
fs
jecxz
dec
add
lret
mov
dec
cli
xchg
or
lahf
pop
xchg
in
sbb
lea
daa
fildll
adc
loopne
inc
stos
dec
nop
mov
mov
nop
mov
xor
pop
mov
mov
daa
pop
fwait
in
sub
pop
pop
pop
push
in
std
xor
sarb
call
and
loope
imul
bound
cmp
insl
jmp
pusha
xor
push
add
mov
dec
pop
dec
ss
call
mov
nop
repnz
mov
rorb
pop
xchg
call
test
jo
stos
add
insb
popw
xchg
mov
or
pop
rcr
cmc
xor
cltd
xchg
push
addr16
jmp
mov
mov
inc
mov
push
js
xor
int
cmp
sub
sub
inc
out
xchg
pushf
fstl
mov
add
pop
test
mov
mov
add
in
push
in
sbb
push
pop
jp
ljmp
cltd
aas
push
push
sub
xor
int3
cmp
pop
lods
jmp
loope
adc
stos
cmpsl
and
jmp
mov
je
fwait
out
mov
arpl
cmpsb
out
sub
sub
push
decb
pop
mov
clc
inc
rcrl
js
fs
sbb
ret
push
mov
adc
insb
rclb
rcl
ret
inc
scas
pop
sub
lea
mov
dec
sub
arpl
jle
jns
dec
test
scas
bound
loopne
rclb
mov
outsl
mov
call
sbb
fcoms
sets
mov
xchg
out
jge
push
cltd
jmp
mov
push
repz
or
test
pop
daa
scas
icebp
add
mov
dec
push
and
or
mov
clc
dec
and
inc
and
jne
fidivrl
data16
adc
outsl
xor
faddl
scas
pop
or
shrb
cmc
push
insb
movsb
xor
jmp
mov
scas
lods
jg
std
mov
incb
xorl
mov
mov
lret
mov
pop
xor
sarl
imul
fchs
cmp
adc
push
test
push
pop
aad
adc
add
mov
inc
or
int
rorl
xor
mov
notl
jns
sub
or
fcomp
pop
add
shlb
daa
testl
cli
shlb
out
test
test
into
rclb
addr16
mov
daa
mov
mov
lret
dec
mov
mull
push
mov
sbb
push
lea
pop
inc
shrb
add
popf
shll
mov
add
sahf
cmp
pop
mov
jns
add
inc
test
pop
push
jp
mov
mov
inc
inc
jecxz
push
cmp
stc
and
lcall
ds
adc
movsl
dec
push
mov
mov
push
pop
mov
pop
lds
jns
xlat
outsb
and
out
stc
mov
sbb
add
inc
add
jno
cmc
ja
push
dec
inc
sbb
int3
leave
ljmp
jns
xor
out
lods
add
mov
stc
xchg
push
test
dec
mov
lret
mov
shl
out
sbb
or
in
push
jnp
arpl
fdivp
scas
lods
xor
jae
lret
push
mov
push
mov
cmp
popf
jne
pop
inc
and
mov
fdivrl
jp
pop
adc
pop
xchg
dec
lock
das
popa
adcb
cmp
cltd
cmc
sbb
pop
dec
out
pop
repnz
lret
cmp
fs
xlat
lods
fsubs
std
push
inc
insb
inc
clc
cmpsb
fstp
or
dec
add
push
outsl
lea
xchg
movsl
jns
ret
and
fstpl
inc
das
cmp
aas
and
mov
sbbl
negb
mov
add
and
cmp
cs
inc
pminsw
gs
popa
dec
xchg
jl
popa
add
shlb
jge
ds
cmp
xor
hlt
sub
loope
xlat
in
inc
add
push
sarb
std
dec
inc
outsb
fists
xlat
mov
inc
pop
or
dec
sub
dec
mov
notb
outsl
fcomps
ss
xlat
push
push
test
sub
jnp
cmc
mov
loop
jp
nop
out
lcall
test
test
cs
clc
add
pop
mov
stos
dec
mov
imul
pop
mov
popf
popf
outsb
insb
inc
in
shrl
adc
sub
pushf
out
movsb
jecxz
stc
stos
test
cmp
lock
sbb
nop
add
test
fcom
int3
pusha
jo
cs
pushf
sub
push
dec
inc
push
or
sbb
mov
popa
add
push
push
mov
push
or
dec
xchg
jns
pop
mov
fiaddl
add
sahf
enter
add
scas
mov
push
scas
daa
jne
jl
int
cmp
push
or
mov
mov
insb
push
mov
xchg
cmpsl
mov
dec
cmpsb
sub
xor
adc
cmpsb
mov
rcrl
fiadds
jle
not
out
lret
mov
subb
add
jae
roll
xlat
pop
dec
inc
jle
shr
jge
pop
xchg
mov
aas
add
xchg
pop
add
xor
imull
sub
test
push
inc
adc
cmpsl
sbb
inc
repz
inc
inc
push
adc
aam
dec
sahf
adc
fwait
jne
je
orb
out
js
in
dec
fcoms
xorb
aaa
stos
xor
rol
out
lret
cli
ljmp
inc
xor
out
jbe
stos
scas
es
inc
js
sbb
adc
add
and
push
rcll
sbb
inc
and
icebp
pop
mov
lahf
mov
or
fwait
pop
mov
lea
xor
jmp
xor
sar
mov
cmpsb
pop
lcall
sub
mov
hlt
in
imul
cli
repnz
test
inc
pop
loopne
mov
inc
lds
adc
je
inc
xor
loope
cmp
jecxz
into
mov
lods
outsl
push
pop
push
mov
jl
aas
pop
dec
aad
sub
loop
inc
inc
loopne,pn
jo
addr16
or
mov
div
daa
loopne
mov
push
pop
jae
jo
lds
and
std
mov
roll
xchg
pop
sub
or
sti
jne
clc
dec
xor
flds
or
add
daa
add
sbb
mov
fdivs
stc
rolb
xchg
imul
popa
arpl
dec
jl
cmp
aas
mov
frstor
dec
out
fs
push
or
imul
les
dec
adc
adc
mov
xchg
add
xchg
inc
arpl
outsb
push
mov
sbb
int3
loope
push
jo
adc
push
push
cmp
fistps
int3
xchg
mov
adc
pop
mov
dec
dec
fwait
sbb
orl
into
cwtl
inc
hlt
gs
roll
sub
mov
popa
into
lods
push
shlb
cld
fwait
cmp
jl
mov
ret
fucom
adc
pop
inc
movb
or
ss
into
jns
inc
xchg
cltd
mov
xchg
fwait
inc
jmp
sbb
push
push
cmpsb
arpl
loope
jns
sahf
cld
dec
and
dec
insl
bswap
aas
inc
fstpl
push
out
mov
pop
cmp
cwtl
pop
lods
lds
push
call
loope
pusha
jae
adcb
push
xor
jmp
push
add
cmp
js
sbb
add
adc
jl
clc
cmp
and
push
pop
mov
cld
imul
dec
test
repz
shrl
idiv
jge
decl
cmp
shll
mov
sbb
insb
adc
mov
dec
push
ret
int
int3
popf
ds
jb
add
jmp
pop
jmp
sub
mov
add
int
inc
mov
cwtl
mov
scas
mov
leave
sub
fstpt
mov
jae
push
sub
add
subb
sbb
ds
ja
ja
mov
ror
into
lods
decl
inc
popa
jp
mov
push
or
cli
cmpl
mov
mov
add
inc
pop
lds
cwtl
mov
gs
cmpsb
divb
jnp
cmpsb
test
pushl
out
sti
jo
sub
ja
xchg
aas
xchg
dec
arpl
fisttpl
push
xchg
outsb
push
jl
mov
push
mov
lods
add
sub
insb
adc
repnz
cmp
jp
and
ja
cmp
out
outsl
push
call
ljmp
js
cmpsb
lret
or
mov
pop
lret
rcll
enter
lahf
inc
fisttps
and
sub
rcr
add
das
mov
cmp
in
dec
aam
push
and
pusha
sbb
push
aam
jmp
sbb
ret
lret
pop
mov
das
and
incb
inc
xchg
pop
cmpsb
xchg
mov
jae
xor
xor
dec
ret
cs
cmpl
mov
jno
adc
mov
push
lahf
out
sub
add
sti
mov
xor
adc
js
lock
pop
add
mov
sbb
fwait
test
push
in
lods
dec
pop
popf
lcall
push
pop
mov
or
mov
sbb
xchg
mov
sbb
xchg
ss
pop
xchg
sbb
mov
push
popf
pop
sbb
stos
pcmpgtw
fcoms
dec
sbb
sti
inc
sub
imul
adc
scas
or
lea
call
stos
mov
sbb
lods
outsb
loope
in
inc
pop
or
sub
cwtl
repz
mov
mov
jg
sub
cs
hlt
addr16
outsl
xor
lea
push
test
mov
fwait
jae
movsb
aaa
mov
scas
sbbl
xlat
inc
ja
and
iret
xor
push
out
mov
roll
mov
sub
daa
inc
repnz
stc
pop
sub
pop
icebp
inc
jge
push
mov
cmp
fs
out
push
stos
sti
mov
sub
dec
cmp
das
lahf
rcll
movsl
adc
in
jo
pop
mov
cmpsb
push
adc
dec
xlat
lret
pop
mov
movsb
and
inc
loop
xchg
sbb
add
movsb
mov
fidivrs
popf
into
adc
fcompl
cmp
pop
cmpsb
xor
add
ss
add
xlat
push
add
mov
stos
mov
dec
lock
fadd
js
jge
jnp
shr
lea
testl
cwtl
xor
fcmove
pop
mov
fldenv
cs
push
sub
or
jmp
or
popa
out
push
es
mov
dec
xchg
test
lcall
mov
call
sub
add
inc
das
outsl
insb
mov
clc
push
pushf
in
mov
cvtdq2ps
lods
cmp
sbb
das
shrl
bound
je
idivl
and
cmp
lret
aad
xchg
or
loope
add
movsl
cmp
sbb
je
jecxz
cmp
insb
orb
jl
gs
push
stos
mov
jns
jo
popa
daa
cmp
push
out
ud2
cmp
in
out
mov
and
call
sbb
out
mov
test
push
adc
and
lahf
daa
cmpsb
into
aam
int
inc
jbe
sbb
xchg
mov
adc
sbb
push
mov
lret
leave
and
pop
shr
lahf
shrb
jbe
dec
cmc
push
imul
mov
aad
mov
roll
xchg
xchg
cli
push
nop
add
cmp
aas
and
sub
and
ficoms
std
sub
add
adc
sub
pop
ret
mov
fdivrs
push
out
loopne
xorl
adc
pop
jp
jp
and
jno
fnstsw
repnz
lods
cmp
fcoml
pushf
sub
xchg
pop
shll
xchg
imul
stos
push
or
rep
cld
and
mov
jge
fcoml
fnstsw
jp
out
lock
mov
jne
cmpl
repz
add
mov
dec
sub
xor
and
xchg
pop
das
sysexit
movsb
fs
jno
fbld
jle
dec
popa
arpl
dec
jno
stos
cmp
sub
fstpt
fimuls
add
xchg
jns
stc
mov
add
sub
lds
cli
or
ret
nop
push
fsubl
push
inc
xchg
jp
inc
inc
sub
adc
in
pop
mov
repz
cmp
xor
mov
movsl
xlat
popa
push
push
fisttpll
aad
lods
mov
inc
pop
xchg
out
out
sbb
pop
xor
cs
push
push
insb
fistps
and
mov
in
loope
repz
jg,pt
in
cmp
mov
pop
push
movsl
sbb
lret
jne
mov
out
lock
popa
inc
sbb
xor
in
mov
sub
test
inc
repnz
lcall
push
xchg
int3
mov
out
sub
test
cmp
push
push
mov
or
aam
jb
mov
cwtl
cmpsl
movsl
out
cmp
add
mov
sbb
sbb
mov
jae
mov
mov
into
dec
movsb
mov
cltd
pop
cwtl
inc
cmp
faddl
push
xor
jl
push
aaa
xchg
inc
dec
fmulp
dec
hlt
test
xchg
push
adc
push
lahf
or
icebp
imul
pop
in
push
mov
jl
or
push
in
cld
jecxz
lea
cli
push
and
jmp
adc
arpl
insb
fs
jno
inc
mov
sub
cmp
mov
or
jecxz
dec
mov
inc
adc
orl
push
pop
xchg
rcr
mov
inc
inc
call
mov
imul
mov
out
std
fdivs
aam
push
outsb
inc
fcomps
xor
jecxz
jnp
add
and
cmp
add
lret
fwait
js
push
fcmovnb
cmp
fmuls
repz
cmc
mov
sub
testl
push
call
pop
pop
lret
mov
popa
push
sahf
out
ljmp
pop
push
lea
outsb
lods
inc
out
mov
sti
rolb
jmp
xor
sarb
mov
add
mov
pop
lcall
mov
js
xor
ja
push
enter
imul
inc
jns
or
mov
lahf
inc
daa
fisubs
push
mov
in
vcvtsd2ss
neg
jnp
jne
cmc
inc
sbb
lret
jmp
lret
add
cmpsl
mov
sbb
decl
clc
filds
or
xchg
movsb
jle
paddusb
mov
adc
xor
cmp
cmpsb
rcll
mov
lret
xchg
push
addb
test
jno
cmp
jle
lods
xor
adc
dec
fdivr
inc
xchg
adc
std
jmp
inc
rcrb
mov
jo
subl
fs
test
iret
dec
mov
inc
addb
mov
lret
in
xlat
mov
and
test
inc
cli
push
or
push
pop
lds
sbb
in
jge
or
xchg
loopne
repnz
jge
sub
cmp
jne
shrl
cli
pop
sub
cmp
fwait
test
push
sbb
inc
xor
mov
stc
cs
push
xchg
ret
pop
mov
dec
pop
popa
inc
sub
in
xchg
imul
cs
sbb
jo
cmp
int
xchg
mov
ljmp
scas
sub
aas
cltd
pop
sbb
mov
xor
dec
sbb
dec
cmp
andb
pop
add
ds
pushf
jmp
jbe
push
adc
mov
or
imul
les
movsb
add
mov
push
pushf
cmp
pop
jle
cmp
cmp
jbe
loope
push
jne
insb
mov
lret
negb
xchg
xor
bound
jmp
and
xor
push
jae
imul
cmp
mov
cli
sub
or
cmc
arpl
in
xor
push
outsl
and
dec
movsb
cmpb
roll
dec
mov
inc
cmp
mov
sub
lds
dec
add
add
pop
test
mov
fs
xor
stos
jge
data16
and
or
out
imul
pusha
inc
mov
mov
das
je
lods
andb
scas
in
pop
jl
daa
nop
inc
nop
insb
lods
shlb
cld
xchg
pop
insb
repz
pop
jbe
xor
and
lcall
or
dec
adc
scas
or
lea
movsb
repnz
mov
imul
jmp
mov
iret
aas
dec
roll
pop
pushf
adc
lret
jecxz
jl
xchg
adc
add
and
ljmp
mov
inc
xor
pusha
mov
or
xchg
adc
xchg
loop
mov
adc
scas
je
dec
pop
in
in
jg
fidivrs
movsb
pop
xchg
sahf
mov
push
and
dec
fnstsw
lcall
divb
das
test
dec
dec
cmp
sub
jo
xchg
jb
rcl
cmp
xor
rcll
nop
push
inc
dec
xor
ja
inc
and
push
test
in
or
addl
jnp
outsl
jecxz
sti
lods
xor
dec
loope
call
mov
jno
scas
mov
lret
cli
jmp
cltd
adc
or
iret
in
dec
mov
xor
ljmp
add
popf
repz
jg
push
or
out
nop
adc
pop
cwtl
and
stos
ljmp
cmp
jae
inc
sbb
pop
addb
aad
popf
xlat
pop
or
cs
std
xor
in
cmp
fdivl
test
fwait
add
jecxz
lods
push
cmpsl
dec
in
xchg
mov
shr
jnp
xchg
mov
aaa
add
or
ficompl
sbb
sub
push
mov
stos
js
rorb
push
lret
les
xor
add
leave
es
aam
addr16
scas
rclb
cmp
fadds
add
push
inc
imul
into
cld
lcall
imul
mov
mov
inc
mov
aad
shll
iret
adc
xchg
lcall
aaa
jg
adc
mov
insb
and
pushf
cmp
loop
orb
leave
movsb
mov
out
cmpsl
pop
je
pop
xor
int3
jmp
lods
pop
sbb
lock
movsb
adc
loope
mov
popf
stc
pop
into
inc
xor
mov
sbb
imul
cmc
dec
cmc
test
hlt
les
in
pusha
mov
repz
outsl
in
add
push
push
mov
out
push
jnp
cmp
inc
or
pop
mov
push
or
push
nop
mov
cli
push
xor
movsb
pop
out
adc
rcrb
sar
ljmp
pop
in
daa
mov
sqrtps
jo
sbb
xchg
rol
sti
testl
inc
shlb
add
jmp
test
jecxz
fs
pop
lahf
out
ljmp
dec
jo
sbb
mov
cmp
dec
fldenv
xchg
nop
pop
inc
loop
or
fidivrl
mov
das
repnz
stos
leave
xorb
pop
scas
jbe
arpl
scas
repnz
push
jge
pop
insl
cmp
push
inc
std
scas
popa
mov
mov
fdivr
xchg
add
popf
push
and
scas
jmp
push
test
icebp
mov
mov
mov
adcb
es
jo
xlat
jo
int
fisubrs
pop
mov
aas
mov
push
cmpsl
test
xchg
or
stos
mov
or
cmc
sahf
mov
or
push
jo
and
pop
into
sub
stc
popa
cmp
pop
push
push
adc
fs
repnz
fsubrl
pop
pop
pop
test
mov
dec
xchg
inc
pushf
es
lods
mov
sbb
sahf
imul
sub
sub
mov
pop
aam
pop
andl
push
xchg
mov
dec
arpl
int
loope
xchg
mov
mov
inc
ljmp
dec
pop
out
cmpsb
cmp
inc
and
mov
test
ret
mov
insl
clc
or
test
xor
faddl
imul
push
jnp
fnstenv
adc
outsl
push
add
ljmp
test
aam
int
divl
fcmovb
sbb
inc
push
mov
loopne
cmp
jo
adc
dec
mov
aad
xor
es
imul
loopne
or
fsts
inc
ja
lret
ficompl
adc
aaa
sub
mov
or
xchg
pop
cld
adc
nop
aad
mov
and
add
adc
rcrb
movsb
pushf
sahf
cwtl
stc
xchg
pop
add
sbb
icebp
add
icebp
pop
jg
rcr
leave
xchg
popf
pop
mov
bnd
std
clc
loopne
fsub
adcb
fcomps
push
mov
jno
cli
std
add
xchg
mov
cwtl
push
andl
sbb
rorb
mov
lds
mov
sbb
xchg
arpl
push
daa
aaa
mov
movsl
xchg
mov
xor
leave
insb
or
pop
dec
or
inc
fmull
mov
cli
scas
sbb
or
inc
out
test
mov
outsl
stos
jns
cmp
sub
add
push
and
test
sub
sbb
xchg
fs
jo
jae
xchg
outsl
cltd
pop
pop
push
in
cwtl
insl
cli
cld
mov
flds
sbb
and
mov
mov
int3
xchg
cld
pop
inc
xchg
fistpll
fisubrs
and
pop
lods
movsl
mov
nop
stos
adc
ja
pushf
hlt
xor
xor
loope
aad
sbb
in
mov
or
mov
in
rcll
outsb
test
xor
dec
xchg
jo
dec
xchg
into
idivb
or
sbb
mov
adc
inc
dec
jne
in
mov
mov
lock
and
mov
fwait
ds
hlt
push
ljmp
or
popf
cmpsb
pop
stos
push
data16
pop
movsl
orps
pop
pop
push
xor
inc
dec
mov
cmp
es
pop
jmp
cltd
mov
imul
inc
fdivrs
jae
lahf
jns
shll
cmc
dec
mov
repnz
or
ficoms
icebp
add
syscall
insl
pop
sbb
test
jp
inc
jl
es
test
fsubl
jecxz
push
insl
ja
jge
ret
fsubr
mov
mov
sub
jge
sahf
out
sbb
jnp
ret
mov
mov
call
dec
add
lret
test
fs
ss
mov
mov
push
sub
inc
shlb
cli
xor
iret
mov
lods
mov
fnstcw
xchg
fsub
inc
ret
dec
xchg
mov
lods
dec
mov
lret
outsl
sub
or
jl
jge
shrb
mov
push
aas
orl
aam
test
mov
mov
ja
pop
mov
and
or
stc
cmp
fsubrs
jae
inc
jno
mov
jmp
push
cmp
push
cwtl
adc
or
dec
jo
cmpsb
lock
scas
in
mov
xchg
jne
xor
enter
and
les
in
in
cli
xor
jg
in
std
add
repnz
push
or
bound
les
lea
into
push
pop
dec
or
fcmovnu
das
rorb
push
into
pop
test
hlt
ds
or
js
bound
call
mov
outsb
inc
insl
ss
xchg
out
fs
add
inc
mov
inc
sub
shrb
jmp
nop
shll
push
mov
adc
loopne
addr16
mov
rcrb
adc
xor
dec
xor
cltd
loopne
mov
sub
jge
xchg
jl
inc
ss
ds
lods
test
mov
xchg
es
addr16
icebp
sub
in
in
fldenv
fmuls
cmp
scas
icebp
add
test
jle
xchg
test
sahf
mov
rorb
dec
jbe
push
xor
add
test
stos
sarl
es
mov
fwait
push
int
xchg
xor
inc
and
xchg
cs
emms
imul
daa
outsl
fists
int
mov
sbb
ja
lds
or
fisttps
sub
mul
and
movsl
ret
xor
call
push
rorl
sub
int
sub
pop
mov
clc
fcomps
inc
inc
and
out
inc
fdivrs
in
imul
cmp
hlt
insl
push
jp
dec
cwtl
mov
xchg
inc
addr16
push
adc
andl
dec
in
adc
push
ficompl
add
addr16
and
cmc
cmpsl
add
or
insb
pusha
sub
push
pop
pop
std
cmpsl
or
sbb
mov
inc
jns
hlt
pop
rcrl
pop
inc
nop
ljmp
push
popa
sbb
xor
lods
or
rcll
xor
popf
andb
cmc
and
addr16
inc
mov
add
and
bound
xor
lods
inc
pop
clc
adcl
popf
sbb
or
pop
scas
or
lock
and
loopne
pop
adc
cli
xlat
xchg
aad
insl
lods
xor
sbbl
daa
roll
xchg
idivl
push
mov
sub
clc
stos
movl
push
in
fcomps
jp
inc
jmp
xor
rclb
arpl
lds
in
js
inc
int3
fdiv
loopne
adc
fsts
sub
and
stc
arpl
aas
or
js
cmp
addr16
test
fisubrl
test
inc
mov
cmp
cmp
mov
jns
sub
aas
mov
clc
xor
inc
ljmp
dec
cmp
out
clc
add
insl
repz
xor
adc
sub
sbb
mov
scas
out
fs
call
mov
leave
cmpsl
jns
push
inc
popf
mov
fidivs
leave
leave
lahf
and
cld
mov
and
mul
call
lds
decl
in
pop
mov
sahf
mov
pusha
movsb
sti
sti
in
fsubrl
mov
or
add
pop
mov
icebp
icebp
push
ds
push
mov
scas
jmp
fcmovnu
in
mov
scas
add
jo
testl
pop
aas
mov
jne
lret
or
mov
mov
je
xchg
lea
xorl
sub
in
xchg
xor
fwait
scas
popf
xor
and
xlat
cli
xor
fiaddl
dec
pop
sbb
push
pop
cwtl
mov
and
pusha
je
cwtl
xchg
movsb
sti
aaa
cmp
cmp
aad
pushf
sti
and
inc
jmp
pop
ss
push
aaa
xchg
and
cmp
shl
push
fnstsw
loopne
or
push
bound
pop
div
aas
popf
dec
xor
loopne
mov
mov
pusha
loope
sbb
adc
cltd
test
add
xchg
faddl
into
leave
aaa
sbb
and
addr16
jl
inc
lcall
sub
cmp
xor
cmc
xor
fstps
in
les
fcmovbe
in
jecxz
repz
xor
repnz
lret
call
mov
adc
push
jo
push
fadds
mov
int3
out
dec
daa
int
adc
sub
xorl
out
mov
lock
fwait
cmp
fidivs
fdivl
addb
aas
arpl
repz
bound
lds
xchg
xlat
pop
xor
mov
sub
scas
in
sub
push
popf
push
aad
fistl
add
push
scas
lret
inc
aad
pop
cmpb
daa
sbb
pop
pop
pop
mov
icebp
aaa
aam
stos
add
cmc
pop
add
es
icebp
es
mov
into
paddq
jo
inc
cli
push
inc
imul
ds
je
dec
mov
hlt
into
icebp
das
stos
mov
lcall
std
call
xchg
adc
xchg
cmp
push
pop
xchg
das
sbb
fbld
jmp
movsb
pop
jnp
xchg
test
xlat
push
mov
jmp
xchg
mov
xor
or
inc
in
stc
rorl
push
cs
pusha
ret
jle
test
push
enter
aam
dec
push
subl
xlat
push
cmc
xchg
dec
or
in
popa
rcrb
cmc
mov
and
shlb
int3
rolb
xchg
jae
mov
jg
jge
out
push
cmc
push
cmp
imul
add
mov
add
cmp
imul
arpl
stos
mov
add
stos
lahf
dec
scas
push
and
jb
fcoml
push
cmpsl
xor
sbb
add
dec
movsl
jno
movsl
movsb
and
add
int3
pop
stc
pop
and
mov
inc
jo
repz
out
cs
imul
jg
push
cmp
mov
lea
inc
fwait
adc
inc
add
dec
jl
or
data16
cmp
sub
imull
sbb
and
test
mov
adcl
cld
cmp
pop
xor
push
int3
imul
xor
sub
nop
sbb
andb
daa
jo
push
js
sbb
nop
pop
out
mov
xchg
mov
sbb
int
lret
adc
sbb
scas
lods
mov
xchg
cmp
and
push
pop
dec
and
dec
dec
scas
arpl
cmp
sbb
pop
add
push
add
mov
jle
out
push
js
jle
mov
das
jbe
ficoms
pop
aad
or
adc
sub
and
xlat
sbb
inc
push
mov
cmpsb
test
jno
add
pop
push
repnz
mov
jne
into
jle
shl
or
add
fstl
or
je
ljmp
jns
subl
mov
mov
add
mov
xor
mov
push
jo
fwait
lods
out
jns
inc
fisttps
push
pushf
lret
dec
enter
dec
inc
sbbb
sub
add
sub
aaa
add
ss
scas
arpl
fst
scas
in
mov
aad
inc
pop
jae
repz
je
xor
add
and
repz
adc
js
cld
adc
arpl
and
xlat
dec
push
mov
ret
bound
add
mov
mov
cmp
addr16
decb
loop
stc
loopne
pusha
mov
cmp
aaa
or
lock
xor
cmp
inc
pop
jle
lret
loope
lods
mov
mov
gs
cmpsl
loope
push
loop,pt
lds
idivl
mov
pop
or
adc
adc
mov
or
dec
fs
aam
sbbl
int3
jmp
inc
shl
fildl
in
out
les
jns
stos
pop
jne
scas
in
xor
jle
leave
sbbb
mov
rcrb
xor
or
lods
mov
xchg
rolb
jl
xor
addr16
xor
test
hlt
lock
test
loop
lods
iret
lahf
in
scas
xchg
add
jns
dec
xor
rcrl
loope
subb
sti
push
in
in
inc
sbb
rcl
sahf
adc
aam
pop
imul
testl
and
xchg
and
cmc
or
gs
xor
inc
data16
mov
add
push
mov
xchg
jno
popa
sub
push
inc
dec
adc
cld
lock
cmp
sub
sub
sbb
xchg
mov
add
jbe
jecxz
jg
pop
lea
les
lods
mov
loope
movsb
jl
or
jmp
adc
mov
adc
adc
idivb
sbb
sarb
sub
outsl
js
xchg
mov
jle
in
jle
in
jae
mov
out
push
inc
iret
sbb
adc
aas
jge
cmp
jle
out
neg
and
xchg
jns
xchg
dec
rorl
sub
fsubr
push
sub
and
ret
test
repz
movsb
push
cmp
movsb
inc
shl
pop
and
int3
and
mov
jmp
aaa
pop
lea
add
rcrl
add
pop
sub
rcrl
cli
arpl
pop
adc
inc
push
or
das
sub
in
adc
sub
sub
sub
nop
mov
jae
xor
adc
mov
mov
sbb
in
jg
out
lea
repz
icebp
mov
jl
ret
pusha
lcall
call
enter
dec
push
movb
int
std
imull
xchg
pop
jno
push
sbb
xor
ds
xchg
push
dec
push
add
or
orl
xchg
aam
lock
pop
test
scas
call
cs
or
dec
ja
cmp
pusha
adc
cltd
std
fmull
xor
pop
push
scas
sbb
mov
data16
jno
cltd
and
sarl
mov
xor
lcall
mov
sbb
adc
loopne
push
and
jge
add
xchg
xor
pop
mov
test
dec
aaa
mov
ja
ficoms
fstpl
jo
sub
clc
push
push
push
lahf
sbb
in
dec
in
cmpl
movsl
repnz
cmp
push
sub
or
mov
xor
cmp
insb
push
lcall
leave
js
fldcw
dec
rep
push
push
loope
lods
cmp
dec
lds
push
xor
inc
hlt
mov
lock
insl
sti
xor
rcrl
mov
xchg
pushf
lahf
jg
inc
sub
int
fldt
dec
push
and
les
and
lahf
add
dec
cld
cmp
add
fnstsw
imul
aaa
jg
pop
rclb
test
xchg
cmp
shl
in
icebp
mov
call
mov
xchg
dec
dec
mov
es
mov
dec
jb
cmp
cmp
dec
mov
aaa
mov
or
lret
pop
jge
inc
cli
push
mov
or
stos
sub
adc
mov
hlt
push
push
pop
add
lods
cli
jge
push
scas
outsb
arpl
movb
mov
xor
fadds
lret
bound
jle
fiadds
pop
jb
mul
daa
rcr
repz
sbb
idivb
imul
gs
into
sbbl
lret
fisttps
push
and
xor
ja
stos
stc
test
data16
mov
je
dec
pop
mov
fmull
leave
cmpsb
gs
xor
push
loop
sar
adc
fdivrp
jne
stos
or
fidivl
xor
push
ja
ljmp
es
adc
insb
scas
and
rorb
push
dec
push
out
jp
xchg
xor
cmp
sbb
xchg
repnz
repz
pop
es
push
insl
or
mov
cmp
mov
dec
pop
lea
shl
mov
dec
push
push
repz
pop
lods
or
pusha
adc
popl
outsl
sub
mov
lods
adc
ljmp
mov
dec
ja
mov
lds
push
pop
push
inc
push
inc
xor
hlt
xorb
shrb
lods
popa
xchg
or
out
xchg
mov
and
out
adc
sub
pop
test
data16
aam
add
pop
mov
test
jp
pusha
cli
push
sub
jne
pop
adc
repnz
icebp
xchg
xor
or
jmp
pop
or
imul
das
adc
call
daa
cld
push
mov
adc
lret
bswap
out
push
stos
div
in
dec
xchg
mov
filds
sti
ret
jb
cmc
push
adcl
dec
xlat
aad
sub
fisubs
imul
push
push
hlt
stos
push
fsubs
jl
das
out
dec
jp
cmpsw
jnp
enter
cmp
mov
inc
cmp
nop
mov
imul
popf
test
push
inc
pop
add
fwait
sbb
sbb
xchg
aas
test
jg
sub
aas
ljmp
daa
outsl
gs
mov
cmpsb
fidivl
jp
xchg
jp
inc
std
mov
pop
xchg
mov
rclb
cmpsb
sbb
stos
roll
dec
sub
inc
push
and
sub
pop
adc
sbb
fwait
jg
mov
loop
call
fmull
mov
and
and
mov
lahf
xor
ret
call
lock
xor
movsl
into
ret
or
inc
mov
imul
inc
or
jbe
push
imul
scas
jle
jbe
ficompl
dec
jl
mov
nop
adc
jae
pop
ljmp
arpl
adc
or
pop
dec
push
es
loopne
dec
push
stos
push
mov
arpl
mov
mov
and
sub
adcl
icebp
push
scas
sub
lcall
inc
xchg
sbb
imul
push
sbb
outsb
into
jne
fisubrs
addl
stos
cltd
das
inc
inc
mov
jb
aaa
adc
fdivs
les
mov
add
xchg
fcmovnbe
xor
std
push
mov
xchg
xor
lods
mov
leave
outsl
movsb
adc
test
mov
cmp
insb
shufps
repnz
jp
pushf
loop
cmp
or
ja
xor
mov
rorl
sub
mov
jno
sbb
hlt
adc
frstor
xchg
lock
xchg
dec
jno
mov
push
push
dec
nop
repnz
jno
mov
out
mov
cli
pop
lods
and
add
out
push
push
lods
xor
mov
rcrb
jb
insb
xchg
mov
sahf
mov
dec
pop
repz
ret
adc
fadds
lret
or
andl
mov
test
je
mov
popf
roll
mov
insl
xor
inc
dec
icebp
jo
ret
or
leave
out
pop
int
dec
inc
mov
inc
shrl
push
popa
ficomps
or
fcmove
sbb
jae
out
shlb
or
into
movsb
faddp
push
xor
pusha
jae
sub
mov
ret
je
or
pusha
jmp
icebp
data16
aam
cld
push
or
mov
or
lods
loop
pop
shl
pop
dec
mov
loope
pop
inc
stos
call
push
cmc
jle
xchg
xchg
int3
cmp
jnp
cli
push
loop
mov
lret
cwtl
or
cmc
adc
or
in
aam
int
pusha
lock
mov
mov
cmp
adc
stos
sub
dec
arpl
cmp
dec
dec
pop
push
sub
mov
test
jo
and
cwtl
int
jb
jmp
and
sbb
or
pop
test
mov
cmp
dec
inc
mov
les
mov
or
notl
push
jl
mov
lods
sub
dec
mov
push
out
sbb
movsl
rcr
xchg
adc
adc
shlb
leave
mov
jne
es
inc
jle
shll
test
outsl
stos
mov
dec
mov
outsb
in
add
movsl
add
les
mov
and
mov
adc
and
jnp
pushf
inc
inc
loop
xchg
ja
jmp
stc
lcall
add
sbb
xor
rclb
jo
fsubl
lret
scas
in
outsl
sbb
sub
xor
inc
insl
mov
bound
add
mov
call
add
mov
mov
outsl
dec
idivl
xchg
test
cwtl
cmp
movsb
xchg
mov
push
loopne
inc
inc
popa
shlb
push
test
inc
mov
mov
mov
test
xchg
das
lods
shlb
adc
mov
daa
rcrl
sub
mov
fiaddl
sbb
movsb
inc
push
and
xlat
mov
orl
push
jle
in
dec
and
rcr
pop
mov
jmp
mov
xchg
fmull
rol
mov
out
mov
stos
xchg
sub
push
xor
rcll
jge
xchg
shlb
pop
and
push
outsl
jns
ret
mov
mov
and
addl
inc
add
cltd
fdivs
cmp
pusha
xchg
push
mov
pop
mov
adc
adc
fsubrs
je
mov
sub
sar
jns
lea
sub
test
int3
mov
loop
fldt
xchg
sbb
cmp
es
int
mov
mov
sbb
xorl
rcr
xor
jle
dec
and
daa
dec
scas
xchg
sbb
mov
int
daa
or
mov
or
shlb
push
dec
or
inc
dec
leave
incl
cmp
and
xor
and
sbb
pop
fnstenv
out
xor
add
xchg
xchg
xchg
leave
xor
xchg
out
lret
mov
inc
mov
movsb
add
pop
push
icebp
out
push
xchg
pop
cmp
sti
mov
das
in
sahf
fimull
lea
icebp
push
xor
lret
jp
mov
dec
fidivrl
addr16
and
lods
adc
mov
nop
popa
mov
in
test
icebp
in
pop
sbb
cs
inc
cmpsb
mov
sbb
aaa
mov
inc
xor
sub
int
sti
dec
lock
adcl
jne
int3
mov
mov
xchg
push
cli
cltd
test
repnz
dec
mov
roll
shrb
xchg
dec
jmp
mov
les
test
cmp
iret
leave
lods
cmp
fs
sub
push
std
sbb
push
sbb
jbe
lock
lods
pop
test
fnstenv
les
add
fisttpll
jge
lods
arpl
push
sbb
lods
ljmp
adc
dec
loopne
jo
adc
sti
add
push
jbe
pusha
in
pop
sbb
jbe
les
fs
test
inc
incb
clc
xor
push
adc
lock
test
push
xor
lock
inc
push
jb
cltd
mov
imul
cli
mov
adc
jbe
and
xchg
pop
arpl
pop
idivb
enter
add
jo
and
mov
in
sub
pop
fwait
xchg
inc
bound
mov
repz
sub
fsubr
ss
arpl
addr16
stos
ror
pop
and
jb
sbb
pop
sub
inc
sbb
push
test
or
out
adc
adc
dec
mov
ds
jle
mov
cli
ret
mov
aas
push
push
stc
push
cmp
mov
mov
dec
repnz
jg
adc
adc
and
push
fiadds
adc
imul
out
addl
cmpsb
xchg
and
sub
mov
adc
jle
lock
subl
insb
mov
inc
lahf
sub
aad
jae
in
sbb
adc
mov
test
cmpsl
repnz
sub
mov
shl
jle
jb
mov
xchg
fnstenv
cltd
sahf
jo
fistps
jp
std
movsl
outsl
and
cmp
sbb
cmp
and
bound
and
push
lcall
xor
jo
and
ss
movsl
repnz
je
cmp
add
sti
lds
adc
es
out
call
xchg
js
cwtl
sub
lret
stc
push
xchg
mov
idivb
popf
insl
adc
push
xor
jge
enter
add
stos
subb
xor
inc
push
dec
xchg
inc
jg
mov
fnstsw
mov
pushf
mov
nop
xor
imul
dec
nop
add
dec
divb
mov
jge
mov
fwait
mov
data16
add
mov
or
arpl
jmp
repz
pushf
mov
and
shld
bound
dec
fsubl
xor
loop
stc
orb
jo
lock
stos
arpl
insb
test
push
dec
popf
seto
shl
lds
dec
leave
ficoms
mov
pop
lret
dec
lret
cmc
clc
std
push
adc
inc
dec
xor
fwait
jmp
mov
pop
xchg
sub
scas
pop
sarb
inc
xchg
cmp
test
sbb
add
add
jmp
negb
mov
std
inc
shrl
flds
out
push
fistl
or
stos
mov
push
lcall
mov
jo
pop
pop
mov
adc
cmp
aad
adc
mov
aas
pop
mov
leave
mov
mov
orb
movsl
fwait
jg
sahf
scas
pop
push
mov
xchg
add
mov
or
sub
jg
sti
insl
push
or
fnstcw
xchg
adc
es
dec
test
insl
inc
sub
sbb
imul
mov
aad
dec
int
inc
add
inc
xor
nop
in
ret
int3
inc
and
insl
shrl
cld
dec
mov
jl
sbb
jb
mov
pop
negl
add
push
add
dec
mov
lods
fiadds
and
push
push
xchg
imul
out
stos
mov
faddp
lods
movsb
and
jo
or
cli
imul
repz
pushf
or
mov
pop
ja
push
adc
outsl
data16
rcrb
pop
and
mov
sbb
sbb
or
pop
mov
faddl
in
jno
subb
test
mov
lret
sub
rol
jg
and
int3
scas
popa
lcall
lods
outsb
jl
sbb
aas
popa
in
test
mov
jge
cmpsl
into
cli
fildll
xchg
cwtl
mov
push
int
iret
popa
pop
add
xchg
inc
es
dec
and
scas
push
or
and
inc
sbb
hlt
push
fs
ss
push
out
bound
clc
ds
push
std
jns
pop
fcoml
cmp
fstpl
and
leave
iret
inc
sub
mov
ds
shlb
jp
pop
lock
adc
lea
pop
and
mov
icebp
mov
outsl
mov
mov
or
incl
loope
fsubs
scas
clc
pop
xor
mov
mov
push
pusha
inc
sti
jl
push
push
dec
lahf
push
mov
push
ss
es
loope
lods
mov
jns
in
adc
add
mov
fisubrs
or
mov
add
mov
popl
jmp
test
movsb
adc
mov
insl
popf
inc
cmpsb
leave
call
mov
and
inc
push
push
mov
pop
jno
inc
jle
iret
mov
inc
sbb
push
push
subl
sarl
mov
jbe
out
pop
add
fdivp
ret
dec
stos
lret
test
ja
sub
lret
out
cmp
xchg
cmp
jge
out
push
dec
cmp
and
pop
loop
in
outsb
movsl
mov
popf
cmp
mov
std
push
ret
outsl
insb
push
xchg
mov
xchg
lock
adc
jns
leave
test
dec
addr16
cwtl
mov
xchg
dec
dec
sbb
aam
or
pop
push
scas
std
bnd
or
cmp
outsb
sub
aam
and
mov
pop
enter
call
push
jno
in
mov
add
mov
or
mov
xchg
movsl
shr
pop
in
or
sub
cmpsl
push
xor
movsb
or
mov
and
inc
fs
mov
ss
lahf
push
xchg
ss
aaa
data16
out
add
push
insb
clc
and
or
inc
mov
push
add
nop
jmp
mov
mov
dec
lret
push
jmp
mov
dec
nop
cli
mov
insb
pop
and
dec
stos
pop
fwait
rol
je
fs
dec
rorb
xchg
lea
dec
fcomp
fs
push
push
ficoms
rorl
cltd
insb
arpl
repnz
sbb
or
dec
push
rcrb
jecxz
mov
rorb
pop
insb
aam
outsb
pusha
mov
sub
fsub
outsb
in
fisttps
jbe
push
lret
xchg
sbbb
nop
mov
sahf
push
lds
xchg
add
sbb
data16
inc
add
in
cmp
aas
inc
jle
push
imul
insb
or
aas
dec
jo
dec
mov
sbb
movsl
lds
sub
dec
cmp
and
sbb
jle
and
outsb
adc
faddp
into
sub
mov
jmp
push
push
shll
add
sbb
aam
int3
push
jmp
add
jp
enter
test
cmc
add
mov
jge
arpl
ss
add
es
fisubs
icebp
jmp
sbb
repz
lods
push
insb
add
gs
xor
pop
and
loope
xlat
jmp
mov
gs
stos
add
and
xor
imul
lods
xchg
xchg
adc
cmp
adc
adc
lds
mov
and
cwtl
jge
cmp
dec
xlat
scas
icebp
scas
push
ds
addr16
repz
pop
cmp
xor
popa
inc
mov
ds
sub
lcall
dec
lods
adcb
sbb
sahf
leave
cli
out
imulb
mov
push
ljmp
cs
inc
mov
filds
jge
xchg
test
and
rol
dec
mov
fcoms
pop
daa
sub
pop
mov
cmp
and
aas
push
push
or
dec
pop
stc
shll
push
in
call
jecxz
jnp
arpl
sbb
inc
or
lods
pushf
frstor
mov
xor
push
popf
cmp
sub
sub
inc
outsb
mov
out
push
mov
out
insl
cwtl
lods
hlt
adc
push
jle
mov
add
aas
inc
xchg
inc
pop
hlt
sub
pop
sub
cmc
shr
imul
scas
inc
add
pushf
mov
jmp
fisttpll
aad
mov
add
es
add
and
push
icebp
jns
xor
lods
cli
scas
fidivs
adc
adc
clc
jge
pop
inc
aam
test
mov
mov
data16
cmp
mov
pop
push
push
sahf
leave
sbb
fwait
xor
mov
pop
mov
and
lcall
clc
mov
es
cmp
xchg
push
mov
xor
fstl
movsl
fsts
pop
push
cld
int3
sbb
std
clc
aad
push
repz
in
mov
jno
ret
push
adcl
and
mov
jle
pop
les
mov
ds
pop
add
sbb
sub
rorl
test
ret
sub
and
scas
mov
adc
aaa
repz
hlt
fadds
ljmp
loope
mov
pop
jg
daa
mov
ljmp
nop
fdivr
xchg
push
daa
rcll
pop
mov
jmp
mov
andb
xorb
popf
cs
call
cmp
mov
mov
mull
adc
pop
popa
push
data16
dec
sbb
in
scas
jmp
adc
loope
push
xor
sub
shlb
cmp
pushl
jmp
pop
iret
std
jne
hlt
push
xor
incl
jmp
fdivs
adc
pop
push
pop
pop
push
xlat
sahf
jp
repz
jo
enter
pop
out
jmp
adcb
push
and
and
std
out
fs
sub
jl
jb
roll
inc
sub
xchg
test
lea
sub
rorl
popf
rorb
inc
mov
push
sbb
jg
mov
scas
loop
pop
imul
lea
mov
ss
mov
repz
jnp
js
dec
pop
les
adc
jns
adc
movsb
ljmp
fs
pop
aam
and
and
xchg
pushf
aad
ja
mov
test
lods
bswap
sbb
fsts
and
xor
cwtl
mov
test
lret
loop
clc
jbe
push
or
stc
mov
adc
sub
mov
sub
pop
test
jae
jno
in
inc
outsl
call
popf
xchg
scas
mov
adc
out
push
fidivrl
push
adc
test
div
hlt
mov
lret
out
mov
pop
cmpsl
xor
inc
xor
adc
mov
out
add
movsl
xchg
test
aam
addr16
mov
stos
sub
inc
loop
stos
fs
test
out
lea
xchg
nop
jp
in
out
mov
pop
push
pop
imul
mov
daa
xor
inc
call
std
cld
lods
push
das
scas
push
test
das
mov
fldcw
add
js
add
loopne
icebp
mov
sub
stos
inc
or
std
mov
push
mull
rorl
fs
mov
pop
adc
dec
pop
cmc
imul
adc
lahf
adc
push
out
lods
ds
call
hlt
scas
test
jg
jecxz
cmc
push
enter
lea
fcoml
pop
and
mov
pop
inc
sahf
subl
mov
lods
dec
fwait
inc
dec
les
xchg
dec
xchg
insl
mov
push
fistpll
inc
jnp
inc
imul
sbb
int
xchg
xchg
lea
and
or
ret
push
fwait
sbb
mov
fstpl
sub
test
sub
mov
shll
xor
movsb
mov
xchg
dec
lds
adc
hlt
sub
cmpsb
or
xchg
push
test
inc
aas
fisubs
push
jno
popf
sub
push
dec
xchg
es
mov
push
test
movsl
imul
scas
lcall
in
mov
jle
jp
daa
sti
cs
iret
jo
cmp
sub
inc
fldcw
cmp
jl
sub
cli
iret
cmp
push
push
mov
xor
jl
jle
daa
popf
dec
test
mov
icebp
xor
out
mov
ja
cmp
and
pop
jg
lcall
xor
xor
call
inc
gs
jecxz
ss
sub
cmp
daa
dec
xchg
pop
sub
pop
scas
mov
push
lsl
pmulhw
xlat
inc
adc
fidivs
jbe
cwtl
mov
or
mov
aas
stos
ja
push
xor
or
in
adc
sub
add
test
fnstsw
dec
mov
fldt
cltd
imul
sub
leavew
jne
fmul
mov
popf
inc
or
loop
push
cmp
sub
aaa
pushf
aaa
icebp
int3
icebp
push
sub
inc
aas
fmuls
pop
mov
sbb
xchg
out
or
dec
and
pop
lea
test
and
sbb
push
loope
mov
mov
in
lods
neg
jle
std
pop
push
out
int
xor
mov
add
test
pop
or
jb
fisubrl
adc
fisubl
cmpl
push
sub
loopne
in
jo
sub
mov
sti
adc
or
insb
add
sub
bound
xor
pop
mov
jmp
pop
cmpsl
sub
mov
pushf
and
pusha
pop
pop
add
mov
outsl
jb
hlt
mov
pop
dec
add
add
dec
or
mov
sub
cltd
shrb
jle
mov
cmpsb
lds
inc
xchg
shll
jno
stc
adc
lods
in
dec
sub
cmc
xlat
fucomi
adc
out
or
inc
repz
xchg
pushf
call
in
fwait
push
add
ljmp
stos
loope
stc
dec
cltd
xchg
and
lods
imul
lcall
sub
jmp
inc
dec
test
xchg
xor
and
mov
push
pop
clc
sbbl
scas
mov
or
outsb
mov
or
or
adc
dec
mov
and
loopne
mov
jecxz
jne
test
shrl
dec
mov
jle
daa
xor
test
mov
adc
cmpsl
mov
adc
outsb
adc
push
mov
dec
popa
adc
and
or
test
loope
sahf
ja
negl
jl
enter
popa
cmpsb
mov
xor
cmp
jl
fdivs
in
fdivrl
faddl
fwait
xchg
jmp
mov
repz
cmpsb
pop
scas
xchg
push
and
or
add
into
dec
rol
dec
xor
xor
jno
je
cmp
cld
das
mov
mov
test
fdivrs
jb
jp
out
and
repz
aad
sbb
inc
mov
in
and
rcrb
cmp
cmc
jb
mov
adcb
imul
pusha
stc
push
loopne
stos
mov
sbb
mov
fiadds
iret
xor
sbb
in
inc
in
std
sbb
sahf
cmp
lret
add
ret
ljmp
jno
mov
xor
aas
cmp
adc
aad
adc
mov
xlat
aam
pushl
ds
shr
inc
nop
cmpsl
in
pop
pop
push
jb
out
pusha
cmpl
into
mov
mov
nop
mov
dec
sarl
pop
pop
mov
je
shrl
imul
daa
in
shr
jns
fistl
icebp
aad
jae
jns
dec
push
xor
inc
sti
add
add
dec
lods
or
mov
test
inc
xchg
or
mov
cmp
sub
adc
sub
push
data16
sbb
inc
cmp
fildl
dec
rcr
sbb
or
and
xchg
mov
xchg
lea
mull
pusha
or
jns
mov
jecxz
hlt
and
pusha
add
cmp
hlt
dec
mov
insl
push
lcall
repz
lcall
sbb
out
mov
insl
lret
test
xchg
mov
mov
leave
call
jnp
xchg
hlt
push
sbb
inc
ja
fs
cs
xor
cltd
dec
popa
aad
sub
test
sahf
sub
dec
adc
movsb
adc
or
jne
movsl
outsl
icebp
or
fadds
repnz
jecxz
cmp
insb
les
jecxz
pop
pop
mov
daa
cmpsl
push
fists
xchg
and
mov
iret
cmp
stos
lahf
daa
jnp
and
in
pop
jbe
fcoml
shlb
js
xchg
dec
mov
mov
loopne
push
mov
cli
cli
loopne
les
nop
adc
icebp
mov
xor
push
cmpsl
movsl
cmpsl
adc
adc
mov
cltd
insb
test
adc
lods
mov
cld
and
dec
loop
or
adc
mov
outsl
jecxz
stos
out
xchg
divb
mov
out
inc
aam
dec
dec
sub
xor
jp
sub
xor
xor
xor
ja
mov
xchg
std
mov
sub
scas
sbb
mov
sbb
pop
loope
aad
dec
and
push
add
and
jb
mov
xor
std
xchg
pop
nop
or
fcmovnb
bnd
imul
icebp
and
addl
aam
sti
cmp
orl
imul
adc
pop
movsl
fists
aam
jge
and
inc
pop
lret
pop
cmp
data16
negl
add
push
loope
clc
cld
jb
adc
je
sahf
mov
mov
mulb
test
xchg
jecxz
fnsave
stos
cli
jg
ret
mov
out
dec
es
fsubs
inc
jecxz
mov
iret
fwait
lret
dec
xchg
xchg
xchg
imull
lock
shr
sub
stc
inc
and
test
jo
inc
imul
arpl
dec
inc
shr
dec
loop
add
loop
cmp
ja
cmp
xor
insl
ficomps
hlt
js
inc
aas
adc
stos
mov
mov
adcb
push
add
es
push
push
sahf
mov
and
adc
into
sbb
xchg
sub
pop
pop
add
rolb
out
test
fsubl
inc
into
inc
aaa
rolb
loope
mov
in
mov
cmovbe
ja
into
xchg
sbb
fisttps
push
testl
add
out
mov
cwtl
fadds
adc
cltd
in
clc
ret
ret
mov
sbb
push
loopne
sbb
repz
fsts
mov
mov
mov
test
xor
and
test
inc
add
mov
and
xchg
push
sbb
cmp
dec
pop
xor
pop
or
dec
daa
adcb
pop
mov
xor
iret
test
xor
stos
push
arpl
push
pop
andb
push
inc
enter
lods
add
xchg
dec
dec
popf
mov
cmp
mov
lds
push
lods
mov
and
adc
push
int3
out
incl
xor
ret
dec
test
and
mov
lods
div
sbb
push
insl
pop
add
mov
jne
xchg
jae
test
push
movsb
dec
jnp
shr
xchg
hlt
cmc
push
xor
aad
std
pop
pop
xchg
into
sub
mov
adc
mov
add
push
lea
lret
inc
mov
push
sqrtps
mov
scas
jbe
jmp
sub
mov
and
and
cmp
shll
mov
dec
shrb
fistpl
jge
push
notb
ret
xor
enter
shlb
jge
sub
les
adc
cld
js
mov
sbb
or
pusha
sbb
mov
push
out
popa
jns
xlat
jne
cmp
cmp
sbb
push
push
mov
ja
loope
lcall
mov
mov
push
cmp
xor
jle
mov
mov
xchg
int
pushf
or
mov
icebp
sahf
mov
pushf
leave
jae
shlb
or
inc
loope
xor
fldl
ret
fdivr
push
stos
cld
insl
divl
pushf
test
lret
cmp
ret
roll
movsb
xchg
mov
sub
fdivs
push
sub
jl
lahf
std
test
jecxz
aaa
fs
or
inc
push
push
dec
lock
add
adc
xor
inc
xor
adc
sbb
jo
enter
xor
ret
inc
filds
lods
xchg
pop
pop
or
aas
les
fnstcw
push
ja
xchg
lock
loope
xor
and
in
inc
dec
xchg
stos
in
mov
inc
mov
repnz
jmp
pusha
sarl
mov
mov
mov
fistps
gs
ret
jae
mov
pop
jp
sbb
add
mov
inc
pusha
push
gs
sar
xchg
popf
lock
lret
cmpsl
ffreep
bnd
jne
cmp
std
mov
jmp
mov
adc
add
or
dec
xchg
lahf
or
lret
mov
in
jmp
push
insb
in
stos
inc
faddp
dec
jnp
jmp
fdivrs
sub
out
cmp
repz
xchg
mov
test
sbbb
imul
xchg
mov
jmp
stos
rcrl
cmp
xchg
movsb
and
mov
xor
nop
je
sbb
or
xor
adc
movsb
and
lret
out
add
cmpb
stos
mov
fs
lret
ret
popf
or
cmp
hlt
jns
jge
push
push
pop
jle
mov
out
popa
shl
ss
out
cmc
insb
inc
leave
jns
xor
and
mov
mov
fisubs
rol
cmc
mov
repnz
mov
sbb
fs
dec
js
xchg
pmulhuw
data16
loopne
insb
les
mov
dec
lcall
into
push
subl
imul
sub
xchg
push
lahf
shl
jle
inc
dec
pop
lock
pop
add
inc
outsl
inc
xor
sbb
jns
push
ret
stc
movsb
add
les
or
sbb
mov
mov
sub
inc
or
sub
add
loopne
idiv
lock
daa
sti
sub
stos
xchg
inc
jae
loope
add
cmp
bound
out
es
mov
dec
mov
test
cmp
pushf
xchg
cmpsb
es
inc
in
fcomps
inc
fxch
sub
sub
mov
add
xor
shrl
add
xchg
mov
repz
and
lret
fs
adc
lea
mov
xor
test
insb
fmuls
out
call
mov
in
in
ret
cli
test
int
fcompl
jge
iret
xchg
mov
pop
cmc
fistpll
jp
sbb
fistl
push
in
xor
sbb
mov
pop
clc
inc
xor
pop
lcall
addr16
flds
lcall
iret
jmp
iret
orl
into
mov
push
int
adc
mov
push
in
stc
dec
push
jae
inc
enter
push
outsl
das
cmpsl
pop
inc
out
nop
jnp
pop
divb
sbbl
push
imul
in
push
adc
and
xchg
inc
das
mov
sub
push
sub
push
dec
dec
aas
or
mov
test
push
add
jnp
bound
push
sbb
xchg
and
ror
sub
pop
ss
ret
adc
rclb
daa
push
loope
jae
scas
cs
xchg
mov
mov
mov
sub
mov
iret
mov
iret
mov
push
inc
add
xor
daa
test
mov
int3
frstor
rep
mov
jno
scas
mov
std
push
mov
mov
mov
sub
push
sub
imul
inc
sbb
cmp
adc
sub
push
in
add
adc
aad
test
rorb
mov
sahf
inc
and
push
cmp
shll
fcomi
nop
pop
and
and
inc
loop
imul
mov
int
es
fs
fstl
pop
xchg
add
pop
xchg
repz
or
push
cmc
add
inc
cwtl
int
jo
lret
xorl
mov
jne
mov
cmc
pushf
xchg
push
pop
mov
sbb
leave
xchg
xchg
fists
int
adc
hlt
in
fiadds
dec
arpl
xchg
stos
mov
jae
shlb
sbb
inc
hlt
loope
insb
fcoml
cs
push
int3
sbb
or
sti
pop
lods
lcall
or
adc
insb
adc
cli
pop
push
add
les
call
jle
pop
das
pop
jle
jb
icebp
cmpsb
fisubrs
outsl
pusha
ret
xchg
shrb
mov
sub
das
jmp
fistps
sbbl
int3
inc
push
mov
aas
or
dec
mov
pop
add
xchg
jp
push
ret
testl
test
shl
adc
inc
push
aas
mov
out
mov
xor
xchg
dec
mov
push
shl
cmp
pop
fsts
popa
and
inc
jns
sbb
popa
pop
mov
cmc
inc
mov
mov
jno
test
fcompl
cmp
sbb
repnz
mov
xchg
ficomps
inc
das
mov
stos
pop
xor
inc
movsb
hlt
mov
fsubr
or
cmpsl
xchg
mov
adc
sbb
mov
jle
pop
call
insb
fstpt
rcrb
or
dec
jne
in
jno
cltd
xor
imul
xchg
sti
cld
mov
stc
jb
clc
ret
mov
jb
sub
ret
add
inc
dec
pushf
nop
add
aad
outsb
sti
cmp
repz
insb
icebp
clc
pop
inc
rorb
add
jl
pop
and
xchg
adc
frstor
push
les
mov
lret
loop
push
xchg
mov
ljmp
adc
mov
xlat
enter
cmp
inc
cmp
lret
cmp
lea
movsb
scas
out
insl
mov
les
sbb
pop
pop
sbb
les
stos
in
xor
pop
add
xor
push
iret
xor
jecxz
sti
sub
inc
movsb
faddl
lahf
es
and
scas
icebp
adc
mov
inc
ja
pop
in
out
jl
xor
sbb
aaa
lahf
test
jbe
mov
je
pusha
int3
mov
movsl
cmp
je
dec
push
sub
imul
inc
clc
cmp
arpl
jae
inc
out
outsl
cmpsb
pop
shrb
call
stc
mov
xor
and
or
xlat
add
cwtl
mov
outsl
push
movsl
fmull
and
push
pop
push
sbb
fs
jmp
ja
mov
mov
arpl
push
rcll
lea
fisubrs
push
subl
mov
push
pusha
in
scas
dec
mov
or
or
and
and
js
or
leave
sub
aas
mov
jno
sub
aam
jne
test
inc
and
push
or
push
test
sarb
aad
repnz
mov
or
sbb
dec
push
sbb
outsl
iret
or
loop
adc
in
mov
insl
xchg
jns
fcomp
rcrb
and
xchg
mov
pop
dec
mov
mov
dec
jge
imul
or
rep
xor
or
int3
imull
dec
xor
mov
lret
jb
mov
or
pop
arpl
arpl
clc
jmp
dec
fistpll
addb
mov
hlt
push
adc
cld
xor
sbb
out
leave
push
aad
fcomi
mov
adc
jo
jecxz
out
stc
pushf
jmp
mov
xchg
cmp
cmp
mov
decl
pop
jmp
es
xchg
adc
mov
push
aaa
sub
cmpsl
shll
dec
aam
mov
xor
or
xor
das
adc
xchg
subb
pushf
add
sbb
xchg
out
adc
repnz
inc
mov
lea
scas
or
and
or
aas
jne
cmp
and
pop
inc
xlat
lret
xchg
roll
int
dec
xchg
fildll
xchg
lods
out
sti
aaa
out
mov
imul
xor
sub
xchg
push
or
push
into
sets
pop
lods
aam
cwtl
dec
lcall
inc
pop
test
xchg
fs
icebp
cmovb
mov
cmp
test
sbb
and
push
push
dec
int
js
mov
repz
shlb
rclb
sub
jg
gs
xor
lcall
cmp
and
mov
push
cmp
mov
adc
lret
and
fadd
data16
lock
inc
cwtl
js
pop
pop
rcrb
data16
rclb
popf
cwtl
mov
xor
mov
clc
iret
popl
mov
or
cmpl
mov
pop
xchg
mov
mov
xor
sub
pop
sub
push
call
dec
xor
or
xor
push
xlat
mov
jnp
fdivrs
pop
into
mov
sbb
arpl
push
cmp
or
mov
or
and
push
or
push
add
mov
cmp
negb
imul
or
cmp
mov
cmp
pop
mov
or
mov
pop
add
and
xchg
imull
sbb
and
ja
or
inc
fisubs
in
insl
out
mov
push
scas
cmp
in
inc
sub
push
mov
dec
clc
into
outsl
adc
dec
mull
lahf
mov
insl
pop
rol
push
add
sub
pop
mov
fdivr
pop
mov
ljmp
sbb
pop
orb
or
cmpsl
shlb
nop
pop
add
call
cli
and
jecxz
nop
mov
xchg
outsb
call
adc
cmp
pop
mov
pop
ds
stos
pusha
cld
add
insl
mov
or
jae
mov
pop
out
cmpb
cltd
sbb
jge
clc
xor
cmp
fcompl
bound
cmpl
mov
filds
mov
push
mov
ljmp
adc
lods
fwait
add
stos
mov
out
jno
fwait
enter
loopne
je
cmpsb
mov
jns
rorb
add
fisubl
jecxz
mov
add
mov
lcall
pop
push
popf
push
mov
xchg
fnsave
push
xchg
mov
test
add
outsl
ljmp
and
xlat
test
mov
push
xchg
jnp
xchg
sbb
sti
xor
mov
data16
mov
loope
push
xor
pop
add
fwait
or
jecxz
dec
rolb
mov
or
or
sub
mov
push
jne
stos
push
mov
xlat
and
cld
xor
add
icebp
shlb
dec
fcomi
cmp
cs
in
lods
lods
cmp
add
mov
inc
mov
xchg
xlat
jbe
jp
pop
fisubrl
xor
xchg
sub
mov
repnz
adc
cmp
shrb
jae
dec
add
divl
lods
movsl
cli
add
sarb
add
std
xchg
sub
mov
test
gs
arpl
ja
push
or
arpl
enter
rcrb
clc
xchg
mov
outsb
and
inc
add
fiaddl
scas
cmpb
leave
cld
mov
xor
xor
xlat
xor
out
dec
repnz
lahf
push
stos
cmp
xchg
int
cmp
je
shl
mov
stos
push
test
out
jb
cwtl
xor
push
cmp
push
adcb
shl
sti
jl
jle
sub
fdivr
outsl
mov
push
xor
lret
or
hlt
pop
inc
add
lods
addr16
sbb
lret
repz
sub
sbb
pop
data16
cwtl
inc
mov
pop
push
mov
nop
inc
out
and
into
fs
push
in
mov
or
call
iret
xchg
jmp
lods
iret
lret
out
test
adc
shl
mov
fnstsw
xchg
test
daa
pop
test
mov
cli
pop
or
rcll
mov
inc
jge
ror
lock
and
jnp
push
adc
adc
push
and
add
xor
xor
pop
cld
mov
aaa
dec
sbb
jmp
out
cmp
insb
xor
insl
or
icebp
push
addb
stc
pop
int
lods
test
adc
inc
test
rcrb
jnp
lret
stos
lahf
sub
fwait
bound
or
iret
pop
dec
inc
sbb
nop
mov
divl
leave
dec
les
inc
push
mov
aas
stc
dec
cmp
add
push
jnp
xor
and
ret
xor
inc
aas
in
rclb
sbb
and
lret
or
mov
cs
cmp
in
cmp
data16
rcr
aas
mulb
or
ficomps
stc
add
add
mov
sbb
js
mov
in
sub
scas
jge
cmc
lret
fdiv
fisubrs
hlt
mov
jecxz
insb
dec
jmp
pop
rcll
add
dec
jnp
jb
xchg
add
jle
inc
out
ljmp
lods
js
cmp
je
mov
mov
ret
dec
xlat
ds
ficomps
cmp
jp
mov
mov
jne
and
pop
cmp
ret
mov
dec
cs
out
xchg
push
mov
das
jo
sbb
mov
out
or
cmp
leave
sub
pop
ret
sub
or
popa
inc
test
popf
test
push
hlt
add
xchg
mov
adc
pop
popf
cmp
and
mov
jmp
inc
or
shld
inc
in
or
lods
mov
pop
lock
daa
pop
enter
and
sbb
push
xor
insl
jle
sub
mov
icebp
xor
sbb
jo
cld
cs
mov
sbbl
imul
aam
adc
push
daa
iret
mov
mov
movsb
test
and
adc
shlb
stos
cmovle
sub
idivb
add
mov
mov
push
jecxz
aad
inc
js
aad
test
xor
pushf
clc
fstpt
mov
mov
push
inc
cmp
in
lcall
cmp
js
jnp
pop
inc
mov
ficompl
loop
mov
lds
test
jae
sti
icebp
aaa
mov
or
cld
ds
out
sbb
je
or
sti
sbb
jecxz
in
xor
popf
mov
clc
ljmp
stc
mov
jg
mov
out
pusha
hlt
inc
rcr
xor
push
mov
push
test
jnp
fsubrp
lods
imul
insl
push
xchg
out
hlt
scas
jle
pop
dec
inc
push
xlat
test
ljmp
ss
push
jae
dec
jge
out
or
adc
xor
pop
out
sub
cwtl
stc
frstor
addr16
pop
out
cmp
push
dec
test
bound
inc
jge
pop
out
aas
out
gs
xor
je
push
mov
or
xor
push
fdivr
test
xchg
ja
or
dec
mov
cmpsl
fnstsw
jge
pop
pop
dec
movsb
mov
cmp
cli
sar
jbe
out
or
dec
popa
testl
mov
dec
add
push
sti
pop
cmp
aad
pop
outsl
sbb
aas
out
cwtl
cmp
mov
gs
int
ret
mov
bound
stos
aad
negb
andl
pop
fcmovnbe
cs
cltd
push
clc
sbb
mov
push
mov
js
insl
cwtl
dec
push
jmp
mov
loopne
mov
sub
and
cmpsb
xor
push
fbstp
push
fistl
in
sbb
ja
push
jg
sbb
addl
push
cmpsb
add
lds
loopne
cmc
mov
xor
cmp
push
xchg
xor
sbb
ja
cltd
loope
repz
add
sbb
inc
xlat
and
cmp
sahf
fs
sbb
mov
test
loope
jecxz
cmp
cmp
int3
jmp
adc
lock
push
lahf
pop
sbb
sbb
cwtl
mov
les
xchg
xor
mov
sub
mov
xchg
popf
lcall
or
imul
out
xlat
fcoms
aad
movsb
rorl
scas
mov
inc
test
dec
mov
or
sub
cltd
loope
push
leave
cli
mov
jle
mov
in
lea
pop
push
dec
xchg
ljmp
or
adc
cmp
test
mov
sub
sbb
dec
out
dec
test
in
jg
and
add
fwait
mov
push
testb
in
or
sahf
xchg
pusha
rorl
in
testb
pop
int
lods
pop
or
pop
sub
fsubrs
std
scas
test
das
xorb
xorl
xlat
mov
xchg
cwtl
addb
add
je
push
scas
lcall
mov
mov
popa
mov
add
std
xchg
cmc
push
pop
out
out
jp
fadds
test
pusha
cmp
std
ja
pusha
add
xchg
push
lahf
loope
lcall
sub
sub
pop
add
mov
mov
popl
push
lods
ljmp
stc
add
stos
xchg
ljmp
stc
pop
in
lods
lret
jmp
loop
lahf
mov
insb
insl
or
subl
xchg
test
fstps
ret
cmp
sbb
dec
test
pop
and
push
jne
mov
cmp
sbb
pop
inc
mov
stos
xchg
jb
adc
loop
pop
lds
jle
sub
mov
add
mov
test
push
mov
mov
inc
test
adc
dec
push
test
notl
mov
or
and
leave
and
stos
or
add
fildl
push
ror
push
pop
cmp
dec
sbb
pop
jp
or
jnp
cmpsl
jno
xchg
sub
pop
fsubs
clc
pop
xchg
test
cmpsb
insb
mov
cmp
mov
sub
push
rorl
and
push
stc
push
xor
mov
fucomp
imul
pop
push
out
sub
sbb
dec
mov
mov
inc
fadd
jge
in
idivb
jmp
xor
mov
sub
and
inc
dec
loopne
push
lea
jle
sub
cmpsb
int
cmc
push
or
and
bound
sub
lock
outsb
adc
or
lea
dec
jno
sahf
mov
loope
inc
movsl
inc
clc
aas
sub
das
fldl
test
xchg
sbbb
lock
sbb
adc
pop
and
movsl
orb
xchg
rorb
xlat
loope
and
adc
sti
sarl
gs
cld
clc
in
inc
imul
xor
cmc
mov
stos
and
cmp
pop
pop
popf
outsb
sbbb
adc
push
sbb
fcmove
cmp
imul
mov
push
lds
or
je
cltd
adc
cli
adc
push
jmp
iret
dec
test
push
ljmp
cmp
test
iret
push
nop
cmpsl
sub
push
aad
out
popf
popa
dec
std
mov
xlat
lea
sbb
rcrb
in
mov
fsubp
mov
std
adc
test
loopne
je
and
inc
push
mov
mov
adc
popf
mov
cmp
outsb
xor
sub
dec
add
lret
movsl
push
je
xchg
ficomps
jbe
jg
and
test
dec
ljmp
movsb
les
sub
dec
cmp
outsl
cmpsl
xchg
hlt
inc
pushf
out
loop
and
xor
dec
into
xor
cmpl
mov
ljmp
push
fistpl
or
or
fwait
adc
jecxz
xor
into
inc
popf
enter
stos
xchg
out
jae
enter
es
loope
xor
out
cmpsl
mov
ja
movsb
pop
inc
cwtl
adc
adc
scas
push
cmp
in
adc
loop
fcmovbe
or
insb
push
inc
jle
out
adc
jb
stos
test
cmp
lcall
dec
mov
sbb
add
add
lcall
icebp
fnstsw
xchg
sbbl
lock
cmp
jmp
outsb
add
xlat
adc
xor
sub
repnz
push
or
xor
push
cmpsl
mov
addr16
insb
pop
fs
mov
jo
dec
scas
filds
jg
ret
lcall
sub
add
or
push
sub
movsl
andl
jmp
insb
enter
mov
fstps
notl
arpl
mov
push
sub
inc
out
dec
je
rol
cmpsb
jmp
lods
pop
adcl
xchg
inc
int
out
xchg
xor
add
sub
adc
mov
push
in
and
sub
loop
test
mov
xchg
int3
push
in
pop
dec
dec
enter
cmp
ret
pop
add
daa
popf
popa
lods
inc
sub
xor
xchg
dec
dec
pop
cmp
cmp
mov
out
repnz
and
out
mov
add
pop
scas
in
push
stos
xchg
jl
jle
mov
das
call
scas
rolb
mov
add
sbb
stc
ret
xchg
std
cld
or
mov
fadds
jg
icebp
xor
es
xchg
sbb
mov
adc
popa
dec
xchg
mov
aam
dec
loope
jbe
stos
or
outsl
mov
pop
mov
in
or
aaa
lea
jbe
pop
pop
cltd
xlat
cmpsl
fbstp
mov
pop
add
lods
push
mov
push
pop
jbe
mov
pop
clc
test
pop
into
ret
shlb
jb
dec
leave
scas
jl
daa
aad
shrb
inc
into
cwtl
jne
insl
or
aam
pop
int3
jle
mov
test
leave
cmp
insb
movsl
jno
js
clc
loopne
movsb
jecxz
sub
adc
cmp
inc
or
mov
and
outsl
mov
mov
outsl
insb
and
sti
repnz
lods
cmpsb
test
frstor
lret
jge
fcmovnbe
inc
hlt
daa
iret
std
adc
jg
mov
inc
mov
or
cmc
pop
pop
xlat
pusha
inc
jno
push
dec
push
push
insl
push
adc
jo
push
jg
mov
cmc
mov
xchg
dec
mov
pop
outsl
mov
loop
or
rcll
mov
mov
and
add
pop
jb
xchg
stos
clc
test
mov
jne
stc
shll
fadd
xchg
das
ror
movsb
adcl
shlb
popa
movsl
sbb
dec
sub
sub
push
mov
lcall
mov
movsb
sbb
aas
pop
inc
cltd
sub
xchg
xchg
outsl
adcb
les
loope
mov
adc
aaa
xchg
inc
sbb
in
int3
adc
add
loopne
xchg
pop
fdivr
xor
push
cltd
popf
aam
mov
cmp
dec
ss
negl
cmp
mov
fnsave
sbb
sub
jl
out
es
jnp
out
das
dec
lea
xchg
movsl
or
push
xchg
inc
mov
stc
ss
cmpsl
dec
cmp
dec
push
pop
aas
dec
pop
shrl
jmp
sub
jge
xlat
pusha
sbb
sub
ret
nop
or
jnp
push
stos
add
addr16
js
or
ret
xchg
jle
into
stc
inc
dec
arpl
aam
jle
ss
popa
inc
mov
fs
mov
ret
mov
jo,pn
pop
icebp
or
scas
pop
jo
pop
mov
iret
rol
and
jbe
jmp
orl
lcall
push
jb
xchg
pop
inc
pop
sub
lea
insb
in
cmp
lret
mov
inc
push
xchg
cmp
add
jl
inc
shlb
mov
cmpsl
les
rclb
in
xchg
jg
out
sbb
sub
xchg
push
das
call
enter
jo
mov
loope
mov
jns
into
inc
test
testl
lret
xor
enter
sub
test
cmp
insb
inc
aad
add
mov
cmpsb
mov
stc
clc
ja
imul
jae
and
and
shl
pop
mov
insl
lret
ret
bnd
into
xchg
shl
xor
jl
call
xchg
shrl
fadds
jae
and
push
testl
add
mov
sbb
xor
ljmp
mov
and
xorl
clc
mov
sub
test
push
mov
lock
and
inc
in
inc
gs
pop
decb
stos
addl
icebp
push
fyl2x
popa
je
into
fldt
mov
inc
add
enter
lcall
or
jnp
aam
sbb
repnz
mov
xchg
bnd
lcall
in
cld
andl
rol
mov
rcrl
mov
push
add
dec
xchg
loop
sub
psrlq
lcall
xchg
mov
sub
mov
ljmp
and
xor
fcmovnu
data16
adc
mov
insb
mov
out
mov
push
test
stc
inc
inc
pop
loope
imull
xchg
cmp
pop
jb
aam
xchg
add
fs
je
xorl
insl
cmp
push
inc
xor
clc
not
jge
mov
mov
cmp
das
mov
push
cmpsb
xlat
das
fwait
or
movsl
icebp
push
cmpsl
jo
jo
data16
fidivl
add
stos
pop
mov
xchg
stos
xchg
leave
jae
add
mov
cmp
loopne
lods
cwtl
pop
mov
sahf
mov
inc
adc
sbbb
mov
hlt
add
xchg
mov
cs
adc
test
nop
mov
jbe
dec
les
push
dec
daa
and
adc
insb
shlb
push
pop
cmovbe
sbb
xchg
lods
popa
xor
sub
pop
mov
and
call
add
dec
pop
inc
dec
inc
in
jle
inc
out
int
xor
das
fs
cmp
adc
dec
imul
mov
cld
sub
add
mov
mov
mov
imul
jecxz
aaa
cld
dec
test
push
inc
lea
cmp
lahf
cmp
out
mov
pop
cwtl
es
arpl
xchg
mov
pop
or
mov
jg
mov
fs
mov
mov
aaa
stc
and
jle
push
sbb
scas
jl
scas
cltd
lods
in
sbb
scas
mov
out
jp
xor
imul
push
int
int
xchg
sbb
mov
fldl2e
bound
rcr
add
ss
fwait
sti
aad
jecxz
iret
out
shrb
xchg
call
fneni(8087
nop
jo
fsubr
hlt
in
sub
movsl
dec
lahf
mov
dec
fldl
aam
pop
lds
jo
push
adc
lcall
addr16
add
xor
xor
leave
inc
loopne
out
mov
outsb
in
jle
test
cmpsb
iret
pop
aad
insl
repz
cmp
mov
pop
stos
xchg
fldcw
xchg
mov
mov
dec
ficoms
add
jno
frstor
scas
push
jp
sbb
bound
mov
xchg
jle,pt
mov
in
shrb
test
or
add
test
and
lss
pop
int3
and
xchg
sub
rcll
pop
xchg
sbb
test
sbb
mov
or
stc
pop
mov
xchg
jnp
pop
loopne
add
pop
push
repz
push
jns
xor
xchg
push
popa
fcoml
push
int
and
add
sbb
xlat
dec
adc
jge
sbb
jbe
pop
pusha
rorb
or
lods
sahf
enter
jae
jl
mov
fs
mov
mov
push
js
jbe
pushf
jmp
es
and
lret
setge
sahf
movb
or
cmpsl
cmp
dec
mov
and
or
je
sbb
cmp
iret
jg
loopne
daa
xor
push
xor
jno
dec
ret
pop
inc
addr16
jge
cmp
movsl
sbb
and
push
mov
mov
imul
mov
inc
lahf
stos
xchg
or
lret
push
ja
leave
push
stc
inc
jno
add
jns
int
aad
jmp
and
into
and
pop
push
repnz
out
inc
pop
loopne
iret
clc
mov
dec
in
ja
sbb
mov
push
iret
pushf
or
fsubl
push
sub
sbb
pop
sub
pop
inc
test
in
push
lret
loop
mov
dec
push
rcrb
movsb
into
cwtl
addr16
jne
imul
test
pop
lcall
sub
push
std
gs
cwtl
sub
or
es
jecxz
std
mov
loope
xchg
push
xchg
outsl
cwtl
mov
jmp
inc
push
jmp
cltd
mov
in
add
pushf
leave
pushf
outsb
add
adc
push
in
aaa
pop
xchg
hlt
addb
sahf
xor
insb
enter
cmp
mov
je
fwait
pop
jae
mov
dec
ja
dec
in
or
mov
fisubrl
jbe
test
andb
sbb
popa
push
jecxz
cmpsb
nop
push
mov
in
aas
jecxz
in
and
adc
iret
mov
sahf
dec
inc
cli
lock
aaa
ret
imul
add
negl
mov
and
cmp
je
dec
add
rclb
movsb
adc
dec
push
rcrl
sahf
fbld
add
xchg
xor
cmpsl
pop
xchg
dec
mov
mov
out
imul
or
fildl
jae
sub
sub
adc
stc
dec
adc
fstpt
jg
lret
jnp
int
leave
xlat
pop
xor
repz
pop
mov
sub
jl
in
cs
dec
cs
jns
and
and
push
es
mov
mov
pop
lea
and
ret
das
sbb
andl
mov
dec
aam
mov
loopne
push
dec
dec
jb
xchg
mov
ret
rclb
mov
aam
push
xchg
cld
jle
push
ret
and
cmpsb
lods
bswap
jle
out
fwait
pop
mov
cmp
xchg
jns
sti
pushf
fwait
xor
ret
add
lcall
jo
sahf
jl
cltd
adc
pop
adc
mov
push
aaa
cmp
out
pop
inc
fwait
shlb
out
xor
cwtl
push
into
cltd
jb
rcl
xchg
adc
cmpsl
nop
mov
xor
adc
cmc
out
or
push
in
fisubrs
xor
pop
mov
inc
aas
insl
dec
rolb
andb
dec
aad
pop
push
out
cmp
adc
aad
push
leave
xor
inc
push
or
pop
pop
mov
fsubs
cmpps
arpl
push
or
subb
or
arpl
cmp
adc
or
gs
xor
mov
movq
fisttpl
push
jnp
mov
jb
outsb
jmp
test
and
adc
jo
sub
jo
out
mov
ss
popa
or
push
daa
hlt
ret
fcoml
aaa
cltd
push
and
testb
mov
pop
cmpsl
subl
in
imul
xorb
cli
insb
mov
mov
shr
pop
push
out
add
sbb
inc
stos
cwtl
fisubrs
out
push
sub
sub
push
fwait
rolb
addl
mov
mov
adc
pop
dec
add
imull
fsubrp
fld
pop
mov
sub
clc
push
mov
mov
cmp
mov
int3
pop
jmp
adc
adc
insl
cmp
push
loop
iret
in
lahf
mov
mov
jo
stos
fidivrl
mov
add
stos
ftst
shll
iret
xchg
fwait
mov
add
into
xor
lods
push
testl
pushf
sti
sbb
sub
lds
int
push
jns
pop
xchg
or
inc
movsl
inc
repnz
vpsrad
outsl
and
lcall
js
jae
insb
push
cmp
add
pop
push
mov
out
js
mov
xchg
jns
cmpsb
jmp
or
in
xchg
orl
call
iret
test
subl
fcoms
arpl
mov
cld
pop
fwait
ret
adc
push
cmp
out
jo
mov
fisubs
xor
inc
sbb
test
dec
xor
scas
push
push
cmpsl
cwtl
in
imul
ja
in
je
hlt
inc
pop
out
ret
adc
adc
scas
gs
test
pop
lods
jno
sub
loopne
cmp
and
or
dec
fnstsw
push
or
dec
call
inc
cmp
mov
andb
dec
or
mov
out
push
lret
fsubr
rorl
mov
adc
xchg
and
call
mov
pusha
test
das
out
ljmp
and
adc
xchg
repz
lock
add
sbb
rorb
jl
inc
out
es
shll
mov
mov
jae
mov
dec
fidivrl
leave
subl
sub
adc
inc
inc
mov
out
lods
jg
xor
xchg
adc
imul
scas
push
mov
pop
sarl
mov
gs
int3
incb
in
adc
fcomps
decl
cmp
mov
xchg
or
or
mov
xor
cwtl
push
and
outsl
jp
lods
daa
add
sub
sub
fwait
test
leave
pop
lds
push
scas
mov
and
enter
mov
stc
jl
pop
xor
push
jp
fcom
xchg
sub
inc
xchg
push
repnz
mov
pop
jle
mov
mov
cmp
jb
enter
sbb
xchg
cmp
js
cmpb
push
pushf
movsl
sub
cwtl
jbe
adc
cwtl
push
insl
push
js
dec
sub
pop
insl
push
xchg
dec
aas
jo
adc
test
repnz
and
push
dec
jp
sub
shl
ret
bound
add
xchg
dec
and
mov
push
movsl
jge
push
pop
aam
xor
in
sbb
ret
adc
loope
jl
dec
jge
lods
or
cmp
jp
jl
and
or
mov
push
insl
push
ss
sti
adc
sub
shlb
popa
jmp
stc
inc
or
test
mov
pop
jl
sub
fwait
add
test
lcall
loop
loopne
loopne
and
mov
adc
mov
add
cwtl
pushf
push
popa
mov
mov
sbb
pop
aaa
add
imul
pop
loope
lret
icebp
add
xchg
clc
adc
movsl
dec
adc
jge
loop
xchg
xchg
mov
jmp
ds
iret
lods
and
pop
mov
add
pop
dec
adc
mov
mov
pusha
int
inc
daa
fidivrs
jl
in
push
int3
aas
jge
mulb
out
cmpsb
pushl
addr16
fistps
push
add
mov
fmuls
out
dec
or
dec
xor
pop
dec
xor
jecxz
mov
je
xchg
out
and
add
push
jne
into
int3
push
and
and
je
jae
sbb
fdivl
or
stc
scas
jl
cmp
fs
inc
test
icebp
outsl
fcoml
xchg
in
out
andb
mov
ficoml
inc
pop
mov
inc
or
pushf
xchg
push
xchg
push
std
mov
fyl2xp1
subl
sub
sub
jns
push
adc
mov
mov
idivb
jb
aam
cli
je
xchg
or
clc
mov
pop
jmp
sub
dec
rol
add
insl
cmp
inc
xor
pop
cmpsl
mov
test
sub
call
inc
jno
jne
add
jne
pusha
shlb
lahf
adc
sti
test
xor
cmp
icebp
iret
jo
pop
or
jb
test
sbb
pop
xor
xchg
cmp
inc
inc
movsb
mov
test
xchg
rcrl
fldenv
lret
inc
mov
out
stc
enter
mov
inc
cmp
sbbb
mov
mov
aam
or
xlat
push
lock
adcl
imulb
loopne
mov
mov
pop
cmpsb
add
push
sahf
mov
inc
enter
xor
ret
lods
out
in
xlat
mov
je
outsb
push
in
aad
data16
or
sbb
dec
add
jmp
sub
out
lret
cmpsb
pushf
fists
mov
and
movsb
inc
and
push
sbb
jecxz
xor
gs
dec
jno
or
xchg
cltd
mov
adc
or
stc
scas
ljmp
fidivs
lret
nop
mov
in
jg
sarb
loop
mov
jo
and
add
mov
in
mov
ret
push
sub
and
xchg
or
pop
je
aad
add
test
mov
int
ljmp
cs
sti
cmp
add
jecxz
les
cmp
dec
ss
mov
daa
sbb
xchg
roll
icebp
jmp
repz
push
xor
roll
sbb
and
pushf
imul
jb
adc
inc
out
mov
loop
adc
rorb
sbb
pop
stc
jbe
sub
rorl
cmpsb
or
imul
push
into
push
les
dec
mov
push
inc
ljmp
je
lea
sub
mov
adc
fwait
daa
nop
cs
xchg
push
ret
neg
mov
jae
je
repz
fwait
mov
push
jl
pop
stos
imul
mov
and
scas
pop
adc
stos
stc
pop
iret
cld
mov
xchg
or
dec
xchg
test
xchg
adc
mov
les
adc
inc
aam
fisubrs
jnp
jmp
push
push
jbe
mov
inc
jae
jg
cmp
sbb
in
pop
gs
imul
lcall
pop
pop
lock
or
cltd
cmpsl
in
pop
xchg
repz
and
mov
push
mov
daa
mov
std
mov
cltd
call
shll
mov
out
je
fmuls
daa
aas
clc
sbb
cmpsb
pusha
xor
jecxz
and
dec
aaa
mov
pop
xchg
imul
je
ds
sbbl
inc
bnd
test
xor
pushl
sbb
mov
es
adc
push
pop
push
adc
cmp
call
mov
gs
ds
fildl
std
pop
arpl
mov
xchg
test
sbbb
repz
mov
das
aad
lods
pop
cmpsb
test
adc
xor
xor
das
lods
mov
cmp
cmp
mov
jne
movb
adc
add
out
sbb
xor
and
fwait
enter
xchg
inc
or
xchg
aas
adc
cmpl
or
or
in
in
stc
xor
mov
dec
inc
test
sub
xchg
cmpsb
test
dec
lret
push
test
imul
les
sbb
sub
fmuls
lods
rorb
or
add
push
fidivrl
mov
in
shlb
outsb
push
shll
fs
sub
pop
in
jg
xor
pop
or
dec
dec
enter
inc
jle
fiadds
hlt
xchg
mov
cli
enter
loop
mov
pop
repnz
adc
xchg
lods
test
add
fisttps
or
xchg
xchg
jbe
pop
lret
sub
mov
ss
xor
cmpsl
fcoms
imul
in
sarb
mov
mov
bound
or
rcl
out
rcrb
push
out
fstp
iret
push
hlt
inc
pop
jle
cld
fldz
dec
lret
push
or
dec
fwait
stos
roll
cld
cmp
and
into
filds
call
pop
adc
pop
xor
cli
pop
clc
into
aad
loope
mov
mov
push
pop
out
clc
pop
cmc
push
mov
out
inc
out
xor
xor
push
jno
shll
jae
decb
xor
xchg
push
dec
and
inc
repnz
add
imul
mov
jmp
push
or
and
mov
gs
add
jg
pop
popf
xor
or
and
xor
and
xor
aaa
cmp
push
rcll
sbb
sub
adc
push
repz
dec
lods
jmp
xor
pop
push
cmp
sbb
imul
jb
unpcklps
pop
inc
loope
mov
mov
loope
andl
add
sahf
movsl
add
call
into
jne
aas
fldenv
jns
sbb
lcall
outsb
mov
xor
rorl
adc
in
jmp
xchg
andb
dec
pop
pop
fidivs
imul
sti
jmp
push
adcb
lds
dec
mov
mov
cmpsl
cld
cltd
ret
or
leave
mov
inc
insl
cmpsb
nopl
xchg
mov
xor
out
or
sub
shl
jg
jae
std
dec
mov
jbe
out
jp
jae
xchg
push
fs
adc
adcl
inc
scas
adc
iret
ds
lret
mov
out
adc
jge
psubq
ljmp
xchg
pop
push
mov
xchg
lahf
mov
add
cmpsl
std
aam
lret
jp
or
push
xor
xorl
iret
loope
hlt
mov
mov
out
xor
lcall
es
aaa
inc
mov
leave
cmp
xchg
aas
mov
push
iret
mov
clc
stc
insl
notb
shr
add
mov
mov
mov
cld
call
fcomps
pop
push
pop
push
mov
sub
mov
mov
std
xor
in
jmp
scas
clc
cmpb
imul
inc
bound
movb
dec
mov
gs
push
jo
aas
jo
sti
push
cltd
lret
movsl
into
incb
xchg
int3
movsl
cmc
lods
and
sbb
jb
cmp
dec
arpl
push
xchg
dec
clc
scas
or
xor
mov
std
mov
pop
adc
cld
pop
aad
mov
mov
pop
mov
inc
sti
cs
jae
shll
push
stc
leave
push
pop
out
cld
cmpsl
dec
lahf
outsl
mov
adc
es
sbb
jno
stos
lods
jne
jp
imul
pop
ret
mov
mov
xchg
arpl
add
adc
sub
push
enter
xchg
jp
ret
std
and
sti
lods
push
pop
and
cmp
mov
mov
inc
pop
xchg
xor
popa
jnp
mov
pusha
sbb
xor
adc
mov
xchg
xchg
fildl
hlt
push
or
push
push
std
rorb
push
in
push
xchg
outsl
stos
scas
fwait
insl
mov
inc
cmp
dec
lods
cmp
jne
inc
les
xrelease
dec
call
enter
pop
pushf
xchg
inc
adc
insb
stos
sub
out
js
andb
xchg
mov
add
jne
inc
mov
sub
xor
mov
lea
jbe
loope
test
push
and
in
lock
push
and
or
dec
arpl
lock
fs
sub
dec
add
imull
pushf
ja
sbbb
pop
mov
sub
xor
dec
push
sub
xorb
cmp
cmpsb
cmp
xchg
into
out
push
into
mov
in
xchg
jl
lods
jbe
movsl
jbe
les
jae
iret
and
dec
cmp
call
stc
fs
and
cmpsb
sbb
jmp
cmp
loop
mov
scas
adc
out
push
or
pop
pop
fidivl
lods
xorl
std
popa
adc
mov
cltd
movsb
leave
pop
dec
bound
inc
int
aad
or
jne
mov
xchg
push
incl
mov
divb
and
lods
lcall
xchg
mov
test
ljmp
sub
lahf
and
mov
stc
cltd
lcall
movsb
pop
out
mov
and
outsb
xchg
xor
xor
icebp
ss
adc
jl
inc
adc
adc
out
jns
aam
mov
nop
mov
xor
subb
adc
cmp
mov
adc
std
push
jp
dec
lock
sbb
into
clc
lahf
pop
mov
gs
or
and
dec
sbb
pop
xchg
jmp
cmp
cmpsb
mov
test
mov
insb
dec
faddl
xor
dec
sahf
lods
adc
int
and
dec
inc
adc
out
arpl
xchg
aam
sub
dec
push
mov
jge
mov
les
sub
mov
arpl
fmuls
out
add
ja
addr16
mov
dec
shr
ljmp
cmp
jb
mov
push
stos
push
test
push
pop
lea
pop
cmp
sti
fistpll
adcl
mov
mov
hlt
inc
loop
ljmp
das
faddl
mov
enter
push
gs
add
fistl
aas
sbb
cmp
sub
cmp
push
sbb
movsb
fwait
and
mov
cmp
xor
movsb
test
gs
jl
push
cmp
and
dec
sbb
in
mov
in
push
cmpl
push
xor
mov
in
mov
cwtl
mov
fs
lret
sahf
stos
ljmp
jno
fimull
pop
mov
push
and
pop
mov
pop
dec
sbb
popa
xchg
push
adc
shl
push
pop
mov
enter
scas
out
or
mov
loopne
add
out
pop
lods
push
pop
push
sub
out
jl
pop
pop
rcl
movsl
xchg
js
xchg
mov
lea
xchg
divb
and
mov
pop
push
push
xchg
fcmovb
jl
dec
ss
in
movd
rcll
mov
rorb
mov
out
inc
and
mov
mov
test
mov
jo
jns
aad
daa
jae
pop
or
sub
xor
es
jecxz
sub
cmp
icebp
dec
aaa
sbb
fisttpll
mov
std
lds
movsl
sub
in
popf
iret
cs
pop
cld
test
lret
inc
sub
cmpsl
mov
notl
lahf
mov
js
sub
loope
cmp
xor
shll
movsl
xor
and
rcl
mov
mov
jmp
dec
mov
mov
jecxz
cmpsl
mov
sub
jo
icebp
pop
cmp
xchg
push
rcrl
mov
popf
push
out
mul
adcb
lods
mov
or
outsl
sub
adc
fistpll
out
inc
mov
push
pop
push
push
jle
int3
xchg
add
int
push
clc
pop
lahf
mov
shr
rorb
cmp
hlt
lret
into
inc
jmp
and
scas
ja
jp
jg
enter
and
imul
test
xchg
pop
scas
add
dec
push
push
mov
mov
in
scas
xor
jae
lcall
outsl
loope
lods
pushf
scas
mov
push
nop
or
lcall
fwait
push
fwait
shll
ja
or
jecxz
mov
fldl
iret
in
repnz
adc
adc
adc
adc
in
in
cmc
scas
sbb
sahf
xlat
sbb
xlat
rorl
add
adc
mov
enter
dec
jp
inc
lcall
pusha
xor
pop
loopne
mov
mov
sbb
stos
and
fadds
adc
adc
scas
imul
shl
call
adc
and
sub
shll
scas
std
pop
mov
cld
dec
insl
sbb
in
scas
pushl
dec
jnp
data16
pop
popa
push
xchg
ret
push
jmp
decb
xor
and
mov
add
inc
jns
rclb
roll
xchg
pushf
mov
or
dec
adc
xor
jns
push
test
insl
cmpsl
mov
push
mov
mov
test
cwtl
jb
add
enter
inc
icebp
jb
sahf
rcll
sub
xchg
insl
xchg
sahf
lret
xorb
dec
mov
mov
inc
loopne
inc
sbb
xchg
and
cwtl
jo
push
pop
cmp
pop
inc
mov
jns
roll
mov
in
iret
adc
movsb
in
xchg
lret
or
or
rcll
movsl
arpl
inc
mov
popa
pop
filds
push
scas
or
push
jg
pop
mov
test
sbb
lods
dec
dec
jb
mov
xor
push
dec
cmpsb
push
insl
aas
adc
push
bnd
fisubs
rcll
and
call
push
mov
jg
test
iret
mov
ficoml
sbb
sbb
push
aaa
pop
xor
mov
sti
pop
lds
leave
lods
push
test
dec
mov
aam
sbb
fsubl
cmp
mov
das
mov
adc
adc
xor
dec
jae
mov
cmpsl
dec
sar
lcall
xor
sbb
pop
int
stc
insl
cld
or
nop
out
outsb
sub
mov
insl
ret
cmp
sete
add
in
cwtl
lret
ss
dec
xchg
es
push
jge
scas
xlat
call
mov
adc
and
mov
cmp
and
sbb
das
push
into
jle
inc
xchg
xor
in
movsl
sti
popa
cmc
pusha
mov
lea
in
pop
cwtl
cmp
mov
inc
sarb
out
leave
mov
jl
scas
xor
or
divl
hlt
cmp
add
negb
insl
or
jle
sahf
xor
jp
sub
xor
push
mov
xor
dec
imul
mov
inc
cli
movsl
addl
mov
and
pop
push
add
ret
jae
mov
mov
push
stos
jmp
mov
sti
jnp
mov
aaa
jmp
jle
mov
or
repnz
fstpl
icebp
pop
cmp
cld
add
mov
sbb
or
sub
sbb
adc
out
aaa
push
sbb
sub
jle
xchg
push
fsubl
movsb
repnz
adc
push
out
testl
fcomip
adc
idivl
xor
dec
popf
mov
mov
stc
pop
cli
and
lods
mov
rolb
mov
arpl
push
jmp
xor
aaa
je
add
push
rcrb
push
stc
lahf
fildl
in
cwtl
ror
cmc
cmp
mov
loopne
mov
test
in
insl
arpl
pop
nop
push
shl
outsl
inc
lret
lds
sbb
lcall
xchg
int
sub
repz
xor
xchg
mov
sbbb
adc
lret
stc
mov
mov
cmpl
inc
jp
add
rcll
or
push
jb
scas
shlb
fwait
movsb
lret
fistpll
adc
mov
pop
mov
lock
setg
xchg
dec
scas
aam
pop
cltd
inc
pusha
xor
push
cltd
jns
mov
mov
add
std
xchg
mov
in
flds
movsb
inc
frstor
and
shlb
ficoml
dec
sbb
push
rcl
mov
sbb
cmp
jg
out
xor
add
aaa
jnp
and
out
mov
out
push
out
int3
data16
js
mov
or
js
ljmp
jnp
sub
inc
pop
mov
loop
add
push
int
lods
ja
nop
fnstenv
xchg
xor
enter
jae
lgs
test
xlat
rorl
cld
push
rolb
and
mov
rolb
cltd
stc
add
addr16
stos
or
outsl
push
jmp
sbb
dec
fadds
and
jns
fwait
dec
imul
push
sbbb
xchg
sub
jle
push
popa
xchg
popa
or
cmp
pop
or
jne
cmp
hlt
dec
jns
and
mov
loope
imul
aad
rolb
inc
scas
sbb
push
adcb
xor
inc
imul
push
xchg
dec
push
lock
cmc
roll
aas
js
std
sbbb
dec
cltd
or
xchg
add
pop
push
and
das
lds
pop
fdivr
movsb
cmc
int3
addb
or
sub
fistl
call
sub
rolb
inc
lret
rorl
lock
and
mov
cli
cmp
lahf
lret
in
cmc
push
add
xchg
sbb
pop
cmp
mov
jecxz
test
mov
xchg
jns
jbe
lret
rcrb
imul
outsl
aam
cld
outsb
aad
lcall
pop
mov
jmp
push
dec
fldt
int3
dec
scas
or
adc
xchg
ret
test
loop
cmpsl
lods
or
hlt
jo
mov
xchg
stos
lods
into
icebp
xlat
add
scas
rol
sub
cmp
add
mov
test
xor
sub
mov
lret
ds
shrb
push
outsb
or
xor
sbb
adc
out
ret
bnd
cmc
mov
xor
jo
cmp
push
jb
dec
mull
repz
jl
pinsrw
dec
mov
movsb
push
sub
sub
rcl
and
dec
jp
in
or
scas
and
out
xchg
movsl
mov
jmp
pop
and
mov
mov
loope
arpl
int
fs
inc
roll
mov
cmp
inc
aaa
int
cmp
or
xchg
mov
ljmp
lods
insb
rorl
or
fwait
jp
xchg
dec
cmp
cmp
jp
loop
xchg
clc
pop
mov
sbb
cld
sti
mov
ja
or
push
inc
pushf
push
cs
mov
lcall
gs
or
sbb
imul
testl
daa
cmpsl
jmp
cwtl
add
xorb
imul
movsl
mov
lcall
std
lret
push
movsl
mov
mov
and
std
arpl
lahf
sub
push
rcl
out
jbe
fucomp
mov
or
lods
jo
pop
cmp
ja
ds
jle
ficoms
in
in
mov
fsubs
rolb
in
xchg
pop
mov
jae
or
lahf
jae
lock
mov
test
stos
imul
mov
mov
sarb
es
cld
or
loopne
jmp
les
sub
push
mov
ret
movsl
lods
and
add
stos
xor
iretw
push
imul
pop
ret
or
mov
lahf
shl
mov
or
lods
enter
scas
jge
xlat
mov
add
nop
push
pushf
push
adc
lahf
imul
mov
mov
arpl
mov
gs
outsl
mov
mov
dec
shl
xchg
lahf
jmp
and
sbb
push
sbb
pop
in
in
add
fistps
addr16
arpl
popa
jl
cmpsl
sbb
inc
dec
mov
stos
int3
and
movsb
push
cmp
mov
mov
test
adc
aad
sti
ss
xchg
pop
test
ret
daa
pop
fs
fwait
cmpsb
test
repnz
fstpt
in
lock
movsl
fcoms
leave
iret
jnp
mov
outsl
pop
pop
dec
and
loopne
pop
ret
add
mov
mov
lds
xchg
and
fdivrl
out
ret
mov
ljmp
and
fnstsw
sbb
adc
mov
pusha
test
push
push
jl
pop
add
adc
testb
mov
jmp
fs
jg
dec
mov
cmp
nop
sub
fnsaves
cmp
jmp
jns
mov
fdivl
arpl
in
movsb
in
push
mov
mov
jno
dec
repnz
cmpsl
inc
adc
push
pushf
in
lcall
sbb
out
pop
dec
mov
mov
stos
pop
jecxz
mov
push
cmp
std
add
call
cmp
or
dec
popf
shrb
mov
inc
lock
repnz
xor
adc
popa
xchg
aaa
int
imul
in
mov
jmp
or
push
sbbb
loopne
dec
dec
out
xor
outsb
sub
call
and
sarl
dec
pushf
in
lret
sarl
bound
loope
sbb
lock
sarl
push
daa
jbe
xchg
jmp
mov
add
fnsave
popa
icebp
dec
mov
out
jno
adc
cmpsb
pop
xchg
jg
xor
in
mov
pop
fisubs
in
sti
nop
mov
inc
or
push
push
mov
popl
xchg
mov
idiv
xor
add
pushf
push
out
and
scas
in
lret
add
xor
jp
mov
in
xchg
sub
mov
sahf
xchg
xor
and
jae
pop
stc
lcall
push
mov
pop
jmp
shll
xor
cmp
sub
dec
add
inc
jne
xor
aaa
int
inc
jo
push
xor
out
lock
adc
or
out
mov
adc
or
mov
cmp
test
popf
ret
scas
adc
xor
jbe
sbb
dec
aas
push
or
out
cltd
dec
iret
shl
sub
popf
mov
or
int3
add
imul
dec
adc
daa
pop
fnstcw
mov
xor
je
fiaddl
into
xor
push
inc
xchg
xchg
shll
incl
jmp
xchg
int
cld
lock
mov
imul
ss
mov
mov
dec
fldenv
mov
jnp
aaa
adc
rol
test
sbb
mov
cmc
jecxz
xchg
imul
xchg
and
pop
jo
jae
push
pop
push
cmpsl
rcrb
aaa
notb
push
lret
push
je
leave
cli
insb
xchg
and
adc
test
adc
aaa
cmp
testl
cmpsl
mov
andl
rclb
std
lret
pop
mov
push
xor
div
mov
jl
or
bound
dec
jle
jge
xlat
cmpsl
mov
lahf
sahf
xlat
inc
xchg
mov
pop
outsb
fidivl
out
and
repz
ja
dec
sub
jne
fwait
inc
sub
mov
and
mov
jmp
inc
mov
sbb
aaa
fmull
and
sbb
sub
icebp
loop
das
stos
and
loopne
iret
fldl
xchg
and
stc
add
mov
adc
sti
in
rclb
xor
aam
adc
push
mov
ljmp
jo
jg
pop
call
push
dec
pop
mov
ficoml
mov
ret
or
stc
out
add
ja
sbb
pushf
sub
xchg
jns
jno
lea
aas
into
stos
xchg
sub
sbbl
dec
sbb
loope
cmpb
in
sbb
int
pop
gs
jecxz
fistl
outsb
fbld
cmpsl
adc
ret
inc
push
shl
stos
xchg
cmp
cld
mov
loop
mov
pop
jns
push
inc
mov
dec
mov
int3
cmp
jg
pop
inc
pushf
and
push
sub
mov
insb
sbb
jmp
mov
int
xor
jl
xor
or
pop
scas
imulb
add
icebp
std
rclb
es
sub
mov
pusha
sub
xor
dec
cwtl
push
lods
sub
testl
jb
stos
ja
adc
pop
aas
movb
aad
sbb
xor
lahf
xor
adc
jno
and
sbb
mov
lods
jbe
sub
fldcw
shll
cmp
pop
xchg
jbe
and
sub
add
mov
mov
xor
aam
popa
lcall
sub
cwtl
pop
sub
mov
jne
es
call
test
test
cmpsb
andl
pop
add
pop
push
scas
loop
sbb
negb
pusha
das
xorb
sub
cwtl
lea
fwait
xchg
and
outsl
leave
cmc
xchg
shlb
in
sbb
ljmp
addr16
ret
iret
add
ljmp
mov
mov
sub
jae
dec
push
jmp
push
sbb
shrl
add
lock
in
jb
aam
mov
mov
loope
sub
clc
and
outsl
sub
jp
pop
dec
in
arpl
mov
aaa
add
and
pop
adc
jp
imulb
les
dec
ja
inc
pop
sti
sub
pushf
fcom
lret
scas
testb
push
mov
xor
inc
jp
cmp
mov
fcomip
mov
cmp
sarl
or
pop
lock
leave
adc
out
loop
sarb
dec
lods
adc
ja
insb
sub
aam
jecxz
imul
cld
inc
pop
lds
popf
mov
xchg
aas
push
lret
shll
pop
push
imul
and
stos
push
popf
cmp
stos
push
pop
inc
icebp
push
pop
add
dec
sarb
mulb
pop
jmp
lds
mov
int
rcrl
xchg
sbb
mov
cli
fstps
orl
push
ljmp
insb
inc
jecxz
jl
add
sarb
cld
xchg
fdivr
jbe
jns
mov
stos
cmpsb
xor
dec
jbe
insb
aaa
jbe
sbb
inc
int3
daa
sbb
add
shll
push
fidivrs
mov
shrb
out
sub
incl
inc
out
mov
mov
aas
mov
pop
aaa
leave
scas
call
pop
out
icebp
sbb
mov
mov
push
mov
into
ds
popa
sbb
push
inc
push
mov
movsb
fildl
cmp
rclb
sub
xchg
imul
xchg
sbb
sub
xchg
aaa
decb
cltd
sbb
mov
incb
lock
push
test
je
imul
cmp
or
les
inc
sti
lret
lods
icebp
mov
cs
popl
sbb
push
dec
and
mov
add
xchg
and
int
jecxz
lds
fs
mov
inc
imul
mov
inc
imul
clc
pop
pop
movsl
mov
ret
adcb
sbb
mov
lret
or
jecxz
pusha
xchg
jb
insl
sub
vunpcklps
sbb
test
cmp
outsl
mov
fisubs
jnp
jne
add
out
enter
xor
std
pusha
int3
mov
lahf
or
pop
jo
fisttpl
inc
mov
pop
addr16
movsl
adc
pop
cmp
xor
mov
pop
test
mov
ljmp
out
adc
jnp
fwait
rorl
cmpxchg
pop
addb
sbb
jne
int
fcoms
testl
mov
popa
mov
mov
fldt
xor
jno
mov
add
mov
jno
js
push
dec
adc
inc
cmpsb
mov
adc
rorl
ss
or
clc
mov
sarb
loope
pop
add
movl
xchg
jmp
loopne
lret
and
mov
lcall
mov
mov
sarb
sbb
lods
jp
in
mov
xor
or
inc
mov
mov
fwait
cwtl
mov
ret
imul
cltd
sbb
xchg
mov
or
dec
pop
outsl
add
js
add
mov
rcr
inc
push
cmpb
sbb
insl
cltd
icebp
icebp
xor
incb
stos
pushf
or
pop
lock
movsl
pop
mov
dec
push
mov
dec
ficoml
mov
jne
inc
cltd
fidivrl
es
lret
push
clc
out
mov
outsb
inc
dec
pop
bound
hlt
dec
adc
jne
adcl
ficomps
rcll
cmp
cmp
xchg
in
cmp
stc
jl
aam
inc
imul
inc
js
mov
cmp
mov
pushf
loope
mov
or
xchg
out
cwtl
jnp
mov
mov
fstp
cmp
mov
jne
fmull
punpcklbw
sbb
cmpb
xorb
in
popa
insb
mov
mov
push
jo
mov
clc
xchg
mov
jnp
fs
mov
int3
push
sub
and
add
enter
in
pop
je
mov
inc
push
mov
cmp
inc
cmpsb
stc
mov
fnstenv
call
enter
enter
fs
xor
jle
sub
testb
sub
xlat
aas
jae
lcall
or
mov
xor
jbe
pusha
xchg
rcrl
addl
lret
pop
addb
cmc
jbe
dec
aad
gs
dec
adc
lods
push
dec
push
mov
and
ljmp
cmpsl
or
xor
out
aad
clc
ja
sti
and
jo
inc
pop
pop
cmp
leave
out
cmovns
dec
pusha
in
iret
mov
movb
or
sub
mov
add
jmp
into
adc
pushf
fnstsw
icebp
mov
sub
leave
push
and
int
mov
xchg
push
loop
inc
pop
dec
ds
sbb
ds
cmp
jae
cmp
sbb
pop
loope
loop
inc
xlat
cmp
into
stos
pusha
cmc
sbb
pop
dec
jge
xor
push
jnp
in
popa
cmpsl
push
rcll
pop
sbb
sar
jo
xor
ret
pusha
cmp
mov
pushf
repz
cmpsb
leave
sbb
pop
lods
pop
push
cwtl
push
aad
pusha
fiadds
andl
loope
xor
aas
jno
push
mov
lret
mov
cmpsb
frstors
cmpsl
aaa
out
mov
iret
fwait
mov
mov
mov
cmp
stc
xchg
inc
data16
pop
dec
movsl
mov
stos
or
mov
sahf
mov
into
xchg
xorb
in
lds
cmc
jmp
fs
mov
cli
jbe
xorb
mov
push
aas
cmp
jl
imul
jae
inc
add
je
in
jne
cwtl
test
fs
sar
icebp
pushf
mov
enter
sbb
imul
inc
jge
jecxz
mov
test
insb
test
out
movsl
idivb
cmp
test
push
sbb
jbe
lods
mov
cld
push
fdivl
dec
rcrb
loop
dec
add
and
dec
xchg
mov
bound
fstpl
loope
out
jo
mov
ds
ds
call
pop
jmp
out
movsb
mov
cmc
lods
cmpsb
inc
out
scas
ret
and
jecxz
xlat
scas
xor
add
hlt
scas
popf
pushf
pop
sbb
jo
cld
out
mov
push
enter
dec
negb
push
sub
cli
push
cmp
int
outsb
sub
data16
add
mov
mov
stc
push
inc
pop
lret
mov
cwtl
clc
adc
aad
cmpsl
push
jl
dec
push
loopne
cmpl
sahf
sbb
lret
and
or
loop
cmp
rorb
xor
mov
push
jp
xchg
pusha
pusha
loop
rol
not
mov
mov
pusha
pushf
rolb
inc
mov
mov
fadd
inc
pop
mov
push
dec
cld
xor
jmp
dec
enter
jle
call
jl
xor
mov
movsl
jmp
and
pop
mov
mov
mov
dec
scas
repz
or
mov
stc
inc
rcr
ds
push
adc
shrb
in
push
pop
gs
push
enter
pop
movsl
clc
sarl
add
lock
pop
outsb
bound
rclb
aam
and
sti
clc
push
pop
out
mov
negl
pop
int3
push
pop
frstor
test
popf
dec
aas
jns
fisttpl
std
dec
cmp
test
sub
mov
pushf
or
mull
add
pop
mov
test
test
mov
nop
xor
outsb
pop
jmp
lret
push
jns
mov
gs
adc
jae
ret
inc
push
sbb
push
insb
jne
mov
jo
mov
mov
and
shl
xor
fisttpl
sub
adc
xchg
push
shlb
shl
cmpsb
test
scas
daa
add
jp
mov
sbb
or
mov
xorl
or
out
cld
adc
push
sbb
inc
mov
sbb
iret
movsb
out
cld
mov
ficompl
jle
int3
data16
push
das
dec
js
sbb
std
repnz
push
mov
call
loop
xchg
push
push
add
repz
test
mov
jl
cmp
mov
in
repz
test
test
jl
push
xor
in
xchg
inc
ficompl
imul
mov
cmc
lods
sub
gs
pop
popf
out
shlb
int3
shlb
clc
fbld
filds
sti
mov
mov
fcmove
std
insb
rolb
decb
mov
sbb
push
or
insl
pop
sub
fldenv
push
inc
dec
mov
dec
in
ret
dec
mov
leave
insb
je
and
mov
shl
push
mov
lods
test
into
pop
outsl
xchg
mov
xchg
ret
or
adc
scas
into
jp
push
pop
es
dec
jp
cmpsl
adc
add
shlb
cltd
addr16
and
cmpsl
xlat
mov
lds
test
pushf
jmp
xor
mov
jo
xlat
mov
jne
jae
or
and
bound
notl
jl
mov
push
lret
sub
fstps
adc
dec
ljmp
jp
mov
push
shll
and
test
stos
adc
sahf
xor
addr16
cs
pop
repnz
mov
jge
lods
push
mov
lret
mov
mov
push
pop
mov
in
popf
test
cmp
cld
ret
dec
loopne
mov
mov
jmp
push
jl
iret
dec
xchg
scas
sahf
pop
xchg
mov
data16
xor
sub
ss
pop
cmpsl
sub
mov
test
ret
jb
out
popa
cmpsl
insb
call
pop
sbb
jmp
push
lahf
sarl
push
jns
mov
gs
in
std
pop
push
ret
add
hlt
fidivrs
and
out
popa
test
std
cmpsl
mov
lcall
add
xchg
and
dec
sub
out
xchg
cmpsb
push
fsubr
mov
stos
sbb
cld
mov
jecxz
mov
stos
xor
push
push
mov
inc
jns
pop
sub
fmuls
fcmovbe
inc
or
gs
add
jge
dec
push
inc
cmp
inc
cld
inc
shrb
mov
fsub
dec
jo
aaa
loop
inc
xorb
adc
pop
pop
loope
and
xchg
out
or
out
cltd
jno
iret
mov
dec
dec
and
outsl
mov
sbb
and
jno
or
je
cmc
iret
sbb
sbb
outsb
pop
in
daa
in
pushf
adc
or
mov
pushf
sub
xchg
stos
xchg
sbb
lea
dec
dec
mov
jbe
pop
and
mov
fimuls
xorl
jno
add
push
ficomps
test
pop
aaa
lods
lahf
add
and
and
mov
pop
data16
fwait
cmpsl
or
fxch
rcr
cltd
xchg
push
and
test
sbb
xchg
jns
lods
test
xor
call
xchg
push
gs
scas
xchg
fmull
mull
scas
add
out
pop
cld
mov
aam
pop
mov
cmc
cmp
or
sub
outsb
arpl
sub
sbb
test
out
mov
or
js
push
mov
mov
mov
sbbb
mov
or
sbb
shll
jae
popf
or
jo
shl
test
push
lret
push
lret
jp
cmp
sti
mov
test
inc
pop
sarl
push
mov
scas
cwtl
insb
sub
or
or
int3
roll
push
les
adcl
add
pop
adc
movsb
add
sarl
inc
inc
out
rep
jl
insl
bound
xor
mov
push
cwtl
mov
scas
dec
xchg
sub
pop
sbb
adc
adc
fs
pop
or
inc
add
fld
stos
fsubl
jecxz
mov
mov
vcvtdq2pd
insl
add
xchg
mov
mov
sbb
add
jle
xchg
jp
stos
movl
pusha
mov
xlat
push
mov
mov
pop
arpl
xchg
mov
arpl
sbb
cmp
sub
mov
push
in
adc
inc
shl
fisubl
iret
ss
xchg
aas
pop
jg
mov
mov
decl
cmc
pushf
cli
jg
pop
popa
lret
int
sbb
inc
sti
mov
scas
imul
lods
in
pop
pop
in
stc
es
push
inc
jo
outsb
ljmp
mov
and
xchg
mov
insl
jp
mov
jae
push
ficoms
push
lret
jb
jl
adc
andb
ljmp
lret
mov
lcall
mov
dec
testl
ret
xchg
ror
cmp
enter
int3
mov
xchg
notb
xchg
repnz
mov
add
rorb
and
push
into
push
mov
and
pop
sarb
loopne
icebp
lcall
cmpsb
lret
push
insl
lods
lods
les
push
call
lock
in
add
imul
test
pop
or
add
lahf
int3
sub
scas
mov
pop
test
in
inc
ficompl
scas
ja
jbe
sbb
cmp
loopne
repz
and
aas
fstpl
loopne
loope
outsb
mov
add
mov
inc
mov
xor
jns
aas
xchg
cwtl
in
cmp
fstps
pop
cmp
gs
adc
dec
jo
insb
adc
jmp
jg
sub
fisttpll
clc
dec
mul
dec
popf
jle
cmp
add
sub
cli
pop
roll
int3
test
pop
cmp
cmp
ror
sti
xchg
clc
aam
shlb
js
aaa
fs
pushf
push
sub
repz
enter
imul
cmp
pop
sbb
scas
out
jns
mov
imul
das
insl
push
pop
in
add
test
jns
xor
and
outsl
repnz
mov
mov
loope
and
insl
pop
pop
or
sbb
xor
insb
insl
daa
pushf
push
bound
xchg
xor
sbbb
imul
int
sarl
lods
lods
ljmp
outsb
loopne
or
xchg
fisttps
xor
push
movsb
sub
pop
gs
popf
adc
cmc
paddw
es
subl
fsubr
sbb
xor
data16
popl
in
aad
outsl
aaa
ljmp
xor
pop
add
fistpll
jl
push
ljmp
mov
es
sub
push
pop
mov
test
add
xor
nop
adc
test
sub
ret
mov
fistpll
test
cmp
xchg
or
cmp
jl
loopne
xadd
ljmp
daa
fstp
addr16
push
mov
xor
pop
jle
mov
mov
int3
popa
jg
fistl
cmp
pusha
sub
dec
or
mov
add
fnstcw
lahf
mov
lret
sbb
mov
int3
lret
rorl
mov
inc
jb
push
pop
sub
jae
daa
jecxz
scas
in
or
loop
imul
lods
or
aam
pusha
mov
push
mov
mov
enter
and
sbb
adc
add
adc
pop
jns
into
xchg
cs
popa
jmp
adc
xacquire
es
push
bound
pop
int
adc
mov
pushf
dec
pusha
movsb
inc
mov
cmp
ret
pop
sarl
dec
repnz
xchg
out
xor
jns
fwait
pop
shrb
stos
fdivl
or
pop
cmp
fstl
ud2
pop
mov
dec
test
mov
icebp
ficomps
fimuls
lahf
xor
cmp
pop
aas
xchg
pop
mov
and
test
xchg
adc
add
and
add
nop
pop
fadds
sbb
mov
sahf
lret
xor
sbb
fucompp
pop
nop
je
sub
repz
sub
push
sub
out
add
add
push
out
mov
stc
xor
gs
xor
lods
add
out
mov
in
jp
mov
test
mov
sbb
idiv
pusha
fisubrl
sub
enter
test
mov
adc
dec
jo
sbb
stc
cmp
or
or
xchg
jo
mov
lock
inc
test
imul
mov
andl
mov
add
adc
ss
lds
add
and
mov
xor
cmp
xor
andb
pushf
xchg
scas
push
clc
mov
or
sub
les
nop
xlat
adc
adc
icebp
lods
inc
dec
mov
addr16
inc
and
pop
into
fsubr
jp
bound
stc
sub
cmpsb
hlt
out
or
fildll
add
into
test
sub
leave
popf
loop
faddl
pause
gs
jne
cltd
testl
jmp
sub
push
jle
adc
pop
mov
sbb
inc
insl
dec
out
data16
inc
stc
pop
dec
stos
lahf
leave
sbb
ds
je
notl
stos
push
es
xor
es
ss
data16
inc
mov
mov
push
mov
lods
out
push
mov
fadds
lods
sub
cmp
sbb
mov
mov
or
push
and
pop
pusha
dec
das
add
mov
out
fstl
jp
mov
test
sar
fwait
sub
out
aas
imul
test
pop
popa
iret
int3
pop
shr
popf
lea
clc
imul
mov
inc
mov
jno
jl
pop
mov
sub
fs
daa
xchg
cwtl
push
sub
add
dec
subb
and
mov
and
js
imul
mov
mov
scas
adc
or
sahf
xchg
jnp
cmp
inc
and
dec
mov
lcall
ret
pop
movsl
inc
stos
push
test
pop
add
gs
jne
jnp
push
out
pushf
shrb
aam
lods
ss
sub
push
test
lcall
lds
mov
xor
fwait
xchg
popa
xchg
xchg
lcall
pop
pop
xchg
pushf
rorl
ljmp
mov
loop
mov
frstor
imul
shlb
sub
inc
xor
adc
push
mov
jmp
cmp
sub
icebp
fsubs
add
imul
xor
inc
leave
xor
rcll
int3
les
lea
push
les
or
insb
pop
xor
test
pop
aam
cmp
add
dec
in
fbld
icebp
jb
cmpsl
add
or
mov
push
popf
imul
sub
add
test
mov
bound
mov
lods
out
lret
mov
sub
ret
jb
mov
int
mov
aaa
mov
fwait
cmpl
mov
push
fmuls
xor
pushf
arpl
repnz
in
xchg
data16
shr
movsl
addr16
dec
jmp
lret
popa
out
jo
dec
mov
ret
ljmp
adc
mov
jbe
mov
pshufw
aaa
xor
mov
fbstp
pop
stc
inc
aam
scas
adc
je
aad
cwtl
and
and
clc
jl
pop
cmc
mov
mov
fwait
jb
xchg
push
inc
out
cmp
icebp
xor
add
inc
mov
not
cmpsb
call
xorb
lret
push
test
in
rcrb
test
push
lret
sub
sub
xchg
sbb
xchg
mov
sbb
outsb
jg
test
jbe
or
add
jmp
adc
test
xorb
cmp
cmp
scas
pop
nop
aam
inc
and
push
jns
imul
add
mov
add
mov
or
loopne
push
ror
xor
xchg
mov
mov
fcompl
test
aas
jl
stc
xchg
xchg
daa
add
mov
mov
mov
stos
shl
into
orl
loop
pop
cltd
lahf
aaa
jge
xor
jmp
cli
pop
jne
sub
add
fisttps
push
pop
mov
push
mov
jne
out
mov
dec
movsb
adc
aaa
mov
pop
push
aaa
mov
mov
sub
sub
inc
mov
cmp
push
dec
shrl
pop
cmp
out
dec
mov
mov
fimuls
std
in
test
lock
vcvtsd2si
loop
jecxz
add
shrb
dec
outsl
lcall
push
push
xor
movsb
std
pop
xchg
sti
lea
pop
push
or
push
push
push
fadd
push
pop
fildll
enter
out
lahf
push
mov
insb
sub
or
and
push
ret
add
psllw
rcll
push
pop
mov
jle
sub
jl
aas
lds
cmc
inc
mov
aaa
jle
xor
dec
jne
xchg
lret
add
int
push
inc
cmpsl
sbb
sub
rol
push
icebp
sbb
scas
pop
sub
imul
divb
es
aad
andb
mov
dec
jmp
pop
sahf
cmp
xchg
setp
jl
and
mov
pop
sbb
cwtl
xor
xchg
mov
imul
dec
fsubrs
pop
enter
pop
jb
in
popa
lahf
sbb
mov
pusha
or
jge
mov
je
push
insl
push
outsl
push
fstps
sarl
jne
add
test
mov
mov
lret
add
fsub
test
call
sub
mov
mulb
mov
jge
mov
rolb
ljmp
or
test
aam
jo
imul
cmp
das
in
push
push
mov
jge
movsb
aaa
push
popf
pusha
xor
inc
and
insl
cmp
imul
adc
int
and
fisubl
xlat
pop
cmpsb
add
jnp
xlat
pop
xchg
cmp
mov
nop
fsubrl
dec
mov
lds
mov
stc
clc
into
mov
pop
loop
sbb
or
mov
jnp
shrb
pop
mov
xchg
push
ret
das
mov
fistpl
xor
xchg
sbb
push
xor
aaa
or
xor
pop
sub
adc
mov
mov
push
sahf
and
out
insl
inc
out
or
push
push
lret
js
add
and
cld
pop
fstps
test
add
cmp
mov
adc
xchg
mov
or
stc
nop
scas
or
mov
scas
adcb
loopne
lods
pop
sbb
xchg
popf
out
cltd
xchg
js
xor
xor
iret
shl
jo
repnz
cmp
inc
sub
test
jecxz
lock
rcrb
notb
xor
mov
cmp
jae
jbe
lock
inc
add
xorl
js
mov
and
cld
shrl
ja
mov
adc
jns
fdivp
xor
push
mov
sbb
xor
jl
xchg
dec
dec
lds
adc
into
jmp
lock
addr16
in
xchg
mov
xchg
aad
dec
jbe
or
mov
push
lret
popa
in
addr16
aas
push
inc
pusha
out
inc
inc
pushf
jbe
movsb
leave
inc
xor
das
imulb
sbb
adc
movlps
outsl
lock
scas
cmp
jns
mov
fldl
fs
xor
call
out
cwtl
inc
dec
ret
dec
shrb
shlb
mov
or
sbb
repnz
cmp
hlt
fldt
pop
adcl
inc
iret
in
popa
pop
insl
xor
imul
pusha
xor
daa
mov
mov
loop
sub
inc
or
stc
aam
dec
sbb
push
stos
sbb
xchg
and
cltd
lea
xorb
xor
hlt
aad
rorl
pop
add
mov
mov
push
lods
adc
sbb
js
pop
in
push
sub
mov
xorl
movsb
push
fwait
dec
inc
cmp
lret
mov
cmc
sub
push
mov
jg
adc
insl
dec
xchg
imul
mov
testb
rcrb
add
mov
mov
aas
dec
dec
das
push
add
xchg
nop
cmp
cs
imul
dec
nop
addr16
mov
or
xchg
sub
or
xchg
push
lods
jo
in
add
mov
jae
outsl
ss
pop
bound
dec
xor
mov
dec
dec
cmpsb
adc
test
mov
and
movsb
mov
sbb
pop
or
add
sbb
enter
add
jae
push
mov
sub
mov
xchg
mov
mov
mov
test
mov
sahf
sbb
xor
adc
pop
and
inc
clc
xchg
xor
repz
loopne
or
add
inc
mov
xorb
test
popf
push
mov
jnp
mov
int3
repz
pop
mov
mov
mov
add
fistpll
call
aad
xchg
push
pop
gs
mov
pop
add
test
ficompl
andb
and
jno
mov
adc
pop
xchg
call
mov
imul
dec
ret
call
jle
and
cmp
ret
daa
les
cmc
add
adc
sbb
fstpt
sbb
mov
dec
xchg
fcmove
adcl
shll
xor
iret
fidivs
mov
mov
pop
data16
inc
and
sbbl
jbe
xlat
mov
cld
lods
outsb
mov
push
insl
lods
sub
inc
lods
gs
in
xor
push
rorb
xchg
cmp
test
rorb
int3
jno
mov
sbb
mov
cli
stos
pop
leave
inc
xchg
ret
cltd
roll
popf
cmp
enter
inc
or
push
pop
cmp
add
pop
mov
fsubrs
ds
inc
and
enter
sbbb
push
int3
rcl
sub
loop
inc
push
aaa
notb
xor
or
inc
mov
xchg
scas
lcall
xchg
cmp
jae
add
jecxz
aam
mov
cvtps2pd
sarb
add
adc
imul
fmull
sub
dec
test
mov
shll
jle
inc
cmp
bound
sbb
inc
nop
mov
into
inc
fs
pop
jae
xchg
call
test
fcompl
add
jl
mov
dec
mov
in
lea
or
sbb
int
xor
insl
cmpsb
imul
out
mov
mov
pop
cmpsl
xchg
bound
decb
xchg
sbb
cmpsb
in
das
xor
and
lahf
out
xchg
push
lods
mov
icebp
fdivrs
xor
ret
dec
xchg
sbb
mov
fisttpll
fildll
fdivrs
int3
fwait
js
push
shrb
in
and
xchg
adc
movsb
cmp
sub
dec
sub
repnz
pop
test
pusha
mov
pop
cmp
mov
xor
mov
mov
cmpsb
mov
mov
pop
arpl
fs
xchg
jl
mov
push
nop
sbb
pop
out
rcr
ret
pop
mov
out
pusha
in
pop
cmp
cmp
add
and
mov
out
cwtl
adc
pop
pop
adc
push
and
scas
mov
popa
pusha
repz
popf
pop
ret
mov
sub
out
decl
sub
loop
push
scas
lock
repnz
mov
cmpl
shr
add
js
dec
pop
daa
adc
push
test
mov
int3
repnz
sarb
aam
xor
dec
inc
or
jg
mov
loop
adc
mov
lea
jg
pop
dec
fidivl
sbb
cwtl
hlt
adc
add
push
flds
xchg
loopne
jnp
push
lea
cld
rolb
gs
sub
repnz
mov
out
rorl
mov
icebp
clc
sahf
mov
aas
jmp
shlb
and
les
orb
test
inc
xorl
jns
enter
in
cmp
and
adc
mov
cli
jno
addr16
sarl
mov
cwtl
out
xor
ss
imul
loope
mov
fstps
push
enter
arpl
outsb
filds
or
xchg
ficoms
jle
or
inc
jecxz
jns
pop
xchg
cmpb
outsl
mov
dec
aas
shr
ja
jns
fsubr
fwait
loopne
xchg
fisttpl
rorb
jae
insb
div
std
mov
mov
test
popf
cmp
lods
cmpsb
cmp
ret
push
push
ret
mov
pop
sbb
cmp
mov
xchg
sub
sub
sub
inc
leave
icebp
negl
cwtl
or
add
adc
clc
lods
xchg
aad
jl
or
dec
mov
dec
add
adc
inc
jne
pop
mov
lods
jmp
in
enter
lods
and
clc
loopne
lahf
js
sbb
cmc
test
mov
push
dec
sahf
imul
bound
inc
pop
xlat
inc
mov
lcall
xor
aam
jns
xchg
xor
ficoml
mov
ror
adc
pop
cli
loopne
jl
mov
fisubl
sbb
or
data16
sbb
lret
lret
ds
mov
dec
cmpsb
mov
mov
cmp
inc
movsb
mov
int3
xor
push
fld1
push
xorb
and
push
inc
jb
jb
inc
inc
imul
adc
test
jb
aad
stos
pop
repnz
pop
out
ds
ret
xor
test
lahf
dec
mov
xor
pop
pop
rclb
cld
push
jns
push
out
mov
lods
adc
cmp
hlt
add
xor
adc
cmp
arpl
jp
ret
adc
xchg
mov
xchg
pop
xor
lds
sub
aas
insl
leave
cmpsl
pop
cmp
sub
fsubrl
add
push
cmp
sbb
pop
addl
fiaddl
fs
pop
mov
andl
add
enter
pop
cmpsl
lcall
sub
dec
inc
pusha
cmp
adcb
sahf
hlt
sbb
call
mov
sbb
xchg
insl
and
dec
cmpsl
push
mov
or
and
gs
iret
add
test
ficomps
mov
xchg
fmul
movsb
and
cmp
add
mov
cmp
stos
add
lcall
jge
mov
jp
sbb
mov
sub
ss
xorb
repz
addr16
in
pop
cs
jg
leave
mov
in
mov
fs
dec
les
movsl
stos
loopne
lock
dec
push
sub
insb
and
sub
inc
mov
pop
into
ljmp
imull
add
ja
scas
and
xchg
sub
gs
dec
fstpt
repz
nop
addl
adc
add
adc
xor
mov
mov
movl
fistps
mov
dec
aad
inc
imull
es
sbb
cwtl
sbb
fbld
xchg
jmp
into
push
in
mov
mull
mov
mov
in
mov
xor
aad
dec
push
xchg
dec
adc
jbe
dec
sub
scas
daa
xchg
iret
mov
push
pop
or
ret
pop
add
movsl
xor
dec
fwait
pushf
jbe
sarb
movsb
nop
inc
cmpsl
push
in
pop
cmpsb
insb
mov
or
dec
cmpsl
fisubrl
jg
push
xor
shll
les
mov
inc
or
idivb
rdtsc
sub
lahf
les
test
pop
scas
sub
lds
in
test
xchg
fs
dec
lds
xchg
popa
mov
pop
jecxz
xchg
or
int
cmp
mov
jo
cmc
rcrl
pop
stc
jns
addr16
loope
gs
dec
push
xor
leave
or
sbb
lcall
sub
jns
jne
lock
sub
je
fdivrl
push
inc
movsb
je
js
mov
push
xchg
cmove
sbb
mov
int
add
xchg
mov
mov
sub
and
ret
and
mov
cmp
ficoms
lods
mov
std
xchg
lods
movsl
sbb
jno
xchg
or
xor
and
aad
push
je
out
pop
xor
movsl
mov
out
aas
dec
mov
mov
jno
std
push
mov
test
imul
dec
sub
or
mov
fcmove
xchg
jbe
cmpsl
adc
lret
mov
or
cs
movsb
ds
xchg
xlat
xor
push
les
cmpb
data16
xchg
loope
je
lret
push
xchg
in
jmp
cs
stos
outsl
sbbl
or
jne
pop
jl
cmp
xlat
mov
mov
push
les
test
inc
das
mov
sub
jle
fidivrs
pop
insb
fdivr
fwait
arpl
sub
pushf
loop
and
sarl
into
push
cmpb
insl
sarb
ret
inc
ror
test
dec
cmpsl
movsb
fistpl
fstl
movsb
push
inc
mov
repz
mov
adc
shlb
cmp
ret
lcall
sarb
dec
dec
jle
gs
faddl
dec
mov
orb
xchg
mov
popa
addr16
push
pop
xor
cmp
dec
test
jg
xor
bound
shlb
les
adc
sarl
jp
ret
inc
mov
push
scas
lret
subl
repnz
or
ficompl
mov
push
push
dec
dec
jl
shll
sub
inc
das
mov
mov
out
inc
rcrb
mov
mov
pusha
test
inc
pop
imul
jge
xchg
xlat
shrl
mov
inc
cmp
ret
cmpsb
mov
add
push
jne
xor
mov
sbb
dec
out
push
sbb
js
loope
push
mov
in
jl
cli
adc
test
fmull
mov
mov
imul
and
lds
push
hlt
mov
or
or
in
xchg
dec
mov
dec
dec
into
push
mov
xor
cmp
jle
int
adc
dec
xchg
test
into
mov
cld
adc
pop
lahf
mov
mov
sbb
cltd
xor
add
sub
lret
cwtl
xchg
lods
cs
rorb
repnz
jo
xchg
lods
dec
xchg
adc
cmp
adc
sub
mov
mov
mov
jl
or
dec
adc
imul
sarb
jle
cmc
and
ss
dec
andl
insl
sbb
fisubl
into
stos
pop
fdivrl
xchg
sbb
adc
dec
mov
cmp
jb,pn
add
jmp
jecxz
mov
pop
test
dec
stos
dec
in
fmul
lods
mov
mov
push
outsl
movsb
into
fs
mov
mov
pusha
sub
pop
jg
movsb
ss
dec
call
add
mov
adc
ret
and
cmp
mov
testl
dec
adc
fisubrs
les
jae
mul
lock
scas
mov
xchg
ss
xor
sub
xor
push
inc
data16
or
scas
cmp
dec
mov
cmp
mov
cmpl
ds
or
sub
and
ret
js
push
pop
in
insl
mov
xchg
scas
xchg
xor
mov
arpl
aam
adc
xchg
sbb
arpl
push
cmpl
in
push
mov
out
cmpl
mov
leave
jnp
stos
addr16
xchg
shrb
fsubs
cmp
xchg
sbb
push
mov
xor
jo
dec
cmp
cmp
cmp
ret
dec
mulb
subl
insl
scas
sbb
cwtl
stos
mov
mov
adc
jge
lock
cld
add
mov
push
icebp
cltd
outsb
inc
imul
lret
arpl
test
fcoml
xchg
out
les
and
lea
mov
shl
inc
popa
sbb
mov
xlat
lret
mov
add
adc
pusha
fidivrs
sub
sbb
mov
mov
mov
fwait
mov
and
inc
int3
mov
push
cmpsl
int3
inc
adc
push
cmc
xor
in
outsl
out
rorl
lods
xchg
in
pop
call
xor
out
aam
pop
and
cli
jne
sub
insb
mov
adc
or
mov
xchg
aas
jae
adc
imul
mov
shrl
mov
mov
ret
push
push
pop
lea
push
mov
fwait
movsl
jl
es
inc
addl
sbb
flds
sub
xchg
add
pop
test
xlat
xchg
jecxz
sub
dec
mov
out
loop
push
mov
xchg
test
pop
mov
inc
popa
mov
sub
cmpsb
fcomi
cmp
mov
lds
dec
aam
push
mov
into
stc
nop
xchg
xor
mov
div
push
pushf
dec
stos
fnstsw
addr16
shlb
imul
mov
fimuls
mov
dec
jmp
rclb
cs
sti
add
repz
ret
les
ljmp
std
add
push
sbb
nop
fs
sub
jmp
fsubrl
xchg
iret
andl
sub
mov
dec
cli
ja
arpl
aaa
pop
adc
mov
push
test
sbb
push
fsubl
lods
pop
jge
sbb
loopne
lret
mov
popa
sbb
in
inc
sahf
xchg
mov
sarl
mov
sub
sub
inc
pusha
mov
fidivrs
lret
or
add
mov
out
pop
lods
cmp
xchg
clc
popf
repz
out
pop
push
inc
push
dec
xor
xchg
sbb
mov
test
xchg
lock
movsl
pop
lahf
mov
outsb
fistpll
pop
or
mov
cld
orb
dec
lock
insl
push
mov
and
std
mov
xlat
add
pop
mov
mov
mov
jge
popf
push
mov
push
ret
test
js
daa
in
inc
mov
cmpb
fstl
gs
or
fisttps
jmp
popf
push
aaa
cs
push
imull
mov
adc
adc
adc
xchg
insl
adc
pop
sbb
cmp
or
jl
inc
mov
push
repnz
push
loop
fisttps
mov
pop
je
into
push
sbbl
ljmp
iret
ds
fsub
xor
test
ret
mov
lods
adc
xchg
push
cmp
dec
movsl
mov
add
out
in
inc
popa
ja
or
sub
pop
add
jbe
push
nop
xchg
pop
je
lcall
jbe
xchg
mov
and
push
dec
mov
cmp
shll
xlat
and
lret
adc
mov
mov
xchg
repnz
stc
shrl
in
sbb
repz
test
dec
dec
test
mov
out
fisttpl
xchg
out
movsb
jle
loopne
stos
cmc
sub
test
mov
mov
divb
push
test
jl
in
arpl
push
pop
sub
imulb
rcll
popf
popa
and
je
ds
into
cli
cld
leave
jno
sbb
mov
ds
mull
pop
das
aas
sti
daa
scas
aas
divl
jae
inc
mov
or
add
dec
or
xchg
cmp
or
and
sub
pop
push
movsb
cmc
sub
cmpsl
jmp
addr16
mov
shr
repnz
inc
lods
ret
sub
sub
and
push
push
mov
aaa
mov
inc
jp
scas
lea
aam
or
enter
dec
cmp
stc
xor
jno
dec
xchg
cltd
lret
add
xorps
popa
fisttps
daa
aas
push
xchg
mov
test
cs
movsb
sub
in
int
sbb
dec
lea
push
movsl
cld
shrb
lcall
dec
ljmp
push
adc
inc
mov
imul
loopne
mov
pop
imull
arpl
add
add
sbb
cs
jecxz
ret
loop
add
es
mov
add
std
jge,pn
xor
cmc
pop
cs
popf
jmp
cmpsl
mov
inc
shr
sbb
push
xchg
scas
cmpsl
lock
jnp
push
mov
sub
out
push
fsubrl
stos
das
notb
jno
stc
ret
xchg
movsl
sub
test
lret
daa
fldl
outsb
jmp
sbb
divb
mov
jg
or
add
push
jo
push
xor
out
mov
and
shl
adc
imul
inc
nop
into
popf
cmp
inc
sbb
cmp
popf
jbe
fcompl
inc
sbb
rclb
loopne
fildll
mov
mov
test
repz
call
sbb
jmp
std
and
jecxz
or
jae
les
test
jne,pn
rclb
mov
push
sbb
inc
cs
xchg
or
jae
cmp
xor
aad
mov
xlat
sub
mov
push
fucomp
das
jmp
pop
mov
out
push
xlat
mov
xor
ja
pop
sub
subb
mov
inc
cld
addr16
xor
cmp
dec
jmp
and
mov
daa
cmp
aaa
dec
gs
mov
jle
idivb
xchg
inc
and
and
cmp
data16
jns
out
push
or
sub
je
pushf
sub
add
cmp
xchg
or
xchg
out
das
out
add
outsb
lock
pop
sbb
rorl
and
or
test
dec
psubsw
add
jge
pop
mov
popl
inc
into
into
in
mov
adc
lock
fcompl
imul
pop
in
mov
icebp
xchg
dec
out
lods
roll
jecxz
mov
sarb
and
xchg
scas
sbbb
adc
scas
inc
icebp
xchg
stos
mov
aas
ret
pop
add
sub
jmp
xchg
test
xorl
cld
cmp
sysexit
jecxz
cmovs
aaa
mov
sub
pop
push
jl
loope,pn
inc
int3
or
cmp
inc
ret
pop
jmp
inc
es
dec
cmp
das
js
or
inc
out
lods
pop
adc
add
aas
cmp
pushf
insl
push
push
xchg
inc
cs
adc
dec
jae
mov
push
sub
enter
sbb
and
test
adc
aam
test
sbb
ss
lret
pop
popa
fnsave
sbb
imul
inc
mov
mov
mov
jl
and
jmp
add
scas
inc
test
jge
leave
addr16
shl
pop
push
ljmp
shlb
jmp
lret
in
cld
sti
mov
lds
inc
je
sub
jnp
mov
sbb
mov
call
jno
cmpsl
cmp
mov
push
mov
lods
mov
add
sar
mov
push
movsl
mov
cli
lret
xor
js
mov
push
xchg
mov
jp
nop
popf
sub
sub
xchg
jg
xor
sbb
lret
xchg
cmpl
adc
lods
addr16
add
je
or
add
cmp
mov
testl
and
lret
popa
push
icebp
lret
inc
lahf
cmp
sbb
or
mov
fwait
and
adc
adc
jg
rcl
pop
scas
add
int3
pop
in
inc
dec
add
pop
imul
inc
mov
jb
mov
cmp
jb
incb
cltd
loop
je
mov
add
lods
ljmp
out
xchg
lock
ja
loope
push
cwtl
pop
adc
or
mov
lock
shrl
cltd
iret
push
mov
xor
idivb
orb
add
xor
or
cmp
in
adc
mov
not
push
cli
inc
sbb
enter
cltd
cmc
cmp
mov
jl
data16
xchg
push
and
adc
xchg
jg
popf
pop
push
movsl
test
lcall
outsl
pusha
lea
ljmp
and
adc
insl
scas
mov
rol
sbb
int
sub
xor
dec
dec
cmp
xchg
push
pop
outsl
jmp
or
iret
cld
jge
aad
cmp
xor
mov
fldenv
enter
xchg
jo
leave
leave
je
adc
push
jl
dec
jae
das
inc
fmuls
loope
fnstsw
loop
and
mov
arpl
mov
xchg
jb
fwait
mov
cmp
dec
cs
dec
lea
in
repz
nop
pop
dec
cmp
lea
hlt
xchg
aam
xlat
pop
aad
loop
lret
xor
cmp
xchg
imul
in
dec
or
pop
js
sub
adc
inc
outsb
sub
sbb
arpl
addr16
lret
xor
lods
xor
stos
cmpb
lock
lds
xchg
xchg
inc
push
in
dec
push
or
fdivp
and
dec
push
clc
push
cmp
push
pop
xchg
xor
cltd
add
xor
scas
lea
call
negb
dec
test
add
push
pop
dec
add
lds
dec
jnp
cld
and
adc
mov
js
rcl
sbb
mov
lock
sbb
mov
std
xlat
shl
cmp
or
lret
leave
fwait
push
daa
mov
ret
xchg
mov
int3
scas
or
fdivl
scas
add
inc
xchg
jbe
call
rcrl
sub
adc
fisttpl
xor
ja
dec
sahf
push
daa
cmc
fnstsw
sub
fadd
repz
xchg
cmpsl
and
loope
push
test
stos
in
in
cmpsb
pop
sbb
fistpll
fistps
scas
dec
pop
adc
sub
adc
cs
pop
out
lods
in
stos
cmp
nop
push
aam
inc
stos
lea
or
push
scas
push
xchg
arpl
xchg
lds
sub
repnz
fldt
ret
dec
fbld
loop
out
js
or
adc
mov
lret
push
movsl
mov
push
mov
sarb
call
mov
mov
sbb
popa
in
xor
dec
ffreep
adc
std
movq
dec
movsl
xor
cmc
xchg
push
xorl
jg
pop
and
lret
and
push
jns
lock
lods
sbb
ds
and
cmp
push
cmpsl
lret
mov
shrl
jp
inc
pop
add
lods
sbb
sub
sahf
jo
pop
inc
test
add
jae
daa
repnz
sbb
jp
mov
add
mov
sbb
scas
nop
adc
or
bound
or
dec
xchg
pop
sub
pop
jp
mov
lods
imul
jl
jne
call
icebp
data16
clc
stos
inc
cli
jbe
shll
lock
loopne
icebp
jno
mov
or
subb
insl
or
and
jno
dec
inc
std
imulb
pop
into
mov
and
cmpl
push
sub
fwait
lock
adc
imul
test
mov
movsl
jmp
out
inc
sbb
add
outsb
push
aam
lods
and
mov
cmp
addr16
jbe
mov
mov
inc
add
xchg
pushw
lods
outsb
movsb
adc
loop
clc
sbb
jo
imul
iret
mov
iret
jmp
and
cwtl
inc
inc
iret
loopne
add
mov
xor
xchg
in
int3
ja
daa
outsb
fstps
push
mov
jmp
lea
dec
mov
fxch
mov
outsl
clc
cmp
es
sub
mov
stc
jge
xchg
cmp
cmpsl
sbbb
adc
mov
and
out
jge
sub
adc
popa
int
mov
aam
inc
daa
cmp
fisubs
les
dec
cs
xchg
sub
cltd
shrb
cwtl
hlt
pop
add
cltd
mov
test
xchg
sahf
sub
das
lds
push
fstpl
pushf
pop
add
and
mov
mov
add
mov
stos
nop
push
mov
jnp
fldl
dec
faddl
in
jge
adc
out
rorb
iret
cmp
adc
mov
std
std
stos
fidivrl
cmc
xor
cmp
test
xlat
mov
sub
sti
and
popf
mov
inc
dec
mov
sub
jbe
inc
adc
jge
in
cmp
cwtl
add
cmp
pop
jae
sahf
testb
push
les
inc
xor
stos
cltd
fmuls
sub
jle
hlt
jp
enter
cld
adc
push
fwait
xchg
add
push
xor
icebp
xchg
mov
mov
cld
push
push
or
es
mov
in
jno
cmpsl
mov
jnp
push
test
pop
cmp
jnp
repz
mov
xlat
shr
rcrb
dec
mov
movsl
in
xchg
frstor
pop
mov
ljmp
mov
mov
in
pusha
fiaddl
adc
jae
loope
xchg
adc
xchg
cmpb
cmpsb
ret
cmp
pop
sub
cmp
dec
xchg
and
or
xchg
inc
add
or
xchg
lods
cmc
scas
out
sahf
mov
pop
sbb
roll
xor
out
lret
mov
sub
dec
sub
jecxz
push
mov
cmp
outsl
imul
pop
aam
sub
pop
sahf
enter
xor
ret
pop
shlb
pop
sbb
and
inc
jge
push
or
test
faddp
add
inc
aam
mov
lock
fdivr
inc
xchg
test
jecxz
cs
les
insb
dec
sub
inc
xlat
xor
frstor
dec
adcb
pop
in
pop
in
dec
cmp
jns
cmp
push
fwait
jo
sub
test
and
repz
shrb
push
repnz
push
add
add
lds
pop
shl
fs
push
xchg
and
and
or
enter
out
pop
dec
adc
jmp
out
mov
in
lahf
xor
add
inc
outsb
sub
and
test
stc
insb
cmp
push
add
xchg
cmp
aaa
dec
inc
popf
and
pop
imul
rcr
or
xchg
cltd
and
or
rclb
or
repz
jg
mov
subb
inc
fisttpl
fwait
in
clc
sbb
push
sbb
outsl
mov
jbe
ds
pop
leave
pop
sbb
mov
fstpt
dec
or
sarl
sub
fisubs
adc
lods
and
les
xchg
pop
js
stc
stos
xchg
jmp
jbe
enter
xor
jecxz
mov
mov
sub
inc
jns
cmp
nop
jg
sar
mov
push
jns
iret
ret
jne
aas
mov
and
daa
cmpsb
xchg
pop
scas
cmp
mull
movsl
fs
movsb
enter
xor
cmp
ret
fsubl
scas
lods
mov
sbb
or
out
xchg
rorl
xor
arpl
popa
popa
roll
jno
loop
adc
add
cmp
push
inc
inc
push
push
or
dec
mov
lock
jae
add
in
mov
xor
jnp,pt
out
mov
pop
jno
std
inc
sub
mov
in
scas
xchg
callw
rorl
push
das
fs
adc
xchg
dec
push
loope
dec
mov
adc
js
cmpsl
sarb
insb
xchg
pop
ljmp
mov
imulb
jns
lock
add
mov
or
movb
sub
pop
xor
xor
push
xchg
pusha
inc
lods
hlt
mov
xchg
jno
jo
pusha
outsb
mov
adc
mov
fldt
fnstcw
add
adc
aad
sarl
cmp
lcall
or
popw
jmp
shlb
lcall
in
pushf
sub
cmp
sbb
and
cmpsl
rcr
jo
sbb
lret
loopne
mov
mov
push
rol
call
inc
push
and
sahf
add
imul
push
cmpsl
and
push
ret
rcrb
inc
imull
notl
jge
lret
jae
xchg
xlat
cs
insb
mov
jb
push
cld
ljmp
movsl
push
and
rcrb
mov
or
inc
sahf
jbe
fisttpll
xor
jle
cmp
hlt
cmp
std
out
ljmp
dec
lods
or
repz
inc
cld
dec
inc
xlat
inc
aad
jecxz
xchg
push
jmp
pop
add
dec
testb
xchg
mov
mov
test
or
mov
addr16
movsb
out
cmp
jne
int3
cmp
daa
out
adc
sbb
enter
icebp
repz
mov
or
inc
or
inc
inc
xchg
aas
jl
repz
clc
mov
repz
and
cmpsl
push
dec
pop
inc
push
lds
popa
mov
jmp
xchg
pop
sub
or
and
dec
divl
lret
sub
sbbb
fcoms
inc
inc
mov
ffree
jno
jbe
stos
pop
cs
adc
adc
pop
jne
lods
addb
ss
push
mov
pop
lcall
pushf
negb
addr16
inc
adc
cwtl
adc
loope
push
pop
js
fiaddl
mov
aaa
mov
push
pushf
mov
out
push
and
movsb
in
add
push
mov
punpcklbw
incb
test
stos
pop
sbb
dec
xor
fnsave
lods
dec
mov
cmp
jmp
cwtl
lods
pop
outsl
test
cmp
es
sub
push
xchg
faddl
mov
xchg
fsubl
shlb
mov
scas
ja
and
ja
cmpsl
sub
xor
jns
outsb
xor
inc
push
cmp
in
sub
jo
xchg
mov
jae
ret
loop
arpl
cmp
popf
pop
gs
jno
sahf
mov
cli
jle
cmp
cmp
mov
int
cmp
xor
lock
fwait
lret
xor
pop
pop
ljmp
lcall
sbb
mov
in
push
cmpl
mov
jne
cmp
shl
clc
daa
pop
sub
dec
mov
mov
mov
lcall
push
adc
cmpsl
pop
jecxz
push
lret
jle,pn
mov
mov
aam
or
and
mov
les
arpl
fcomp
daa
pop
cmp
fidivrs
mov
mov
pushl
dec
in
cs
dec
mov
and
lret
inc
push
jno
lcall
jo
std
out
test
adc
andl
lahf
adc
xchg
inc
cmp
das
jmp
push
inc
std
dec
out
mov
ss
pop
inc
sub
sbb
mov
inc
adc
std
clc
add
push
into
sub
or
in
hlt
xchg
sbb
adc
xor
xchg
test
jge
sub
or
jecxz
pop
inc
lret
test
scas
jp
in
inc
lds
scas
mov
inc
daa
call
call
push
and
jmp
jmp
or
in
adc
out
scas
pcmpgtw
dec
mov
jmp
cmp
pop
and
sub
pusha
fs
jle
jg
jns
push
cmp
xchg
stc
add
cmovo
bound
push
ljmp
pop
fstpt
mul
jno
call
neg
hlt
jae
sbb
mov
mov
inc
jno
cmpsb
inc
jne
fcmovu
mov
xchg
cld
adc
stc
mov
cld
mov
jecxz
test
xchg
fsubs
ja
into
xlat
xor
fisttps
hlt
sbbl
jmp
or
ret
mov
xchg
and
mov
icebp
aas
aaa
dec
add
mov
sub
or
jecxz
shlb
add
rorl
jo
mov
in
cmp
jmp
mov
loope
and
lea
int
pusha
jne
in
sahf
push
dec
cmc
jnp
push
mov
cltd
ret
popa
cmp
xchg
cmpsl
leave
cli
aaa
call
fistl
jns
push
fnstcw
pop
pop
nop
xchg
loopne
lock
fidivl
add
mov
add
incl
adc
push
mov
scas
mov
inc
xor
push
push
lret
mov
sbb
sbb
mov
pop
lods
insb
mov
rclb
test
inc
rolb
nop
push
repnz
dec
add
and
adc
cmpsb
pop
jle
out
inc
inc
aaa
lret
jnp
test
jbe
jmp
call
or
js
cmp
xor
push
inc
es
ret
test
lods
sub
push
cmc
ja
inc
cs
lods
daa
push
rcll
fisttpl
nop
ljmp
test
xchg
cmp
cld
fdivrs
aam
cli
gs
cmc
lods
xlat
xchg
nop
insb
xchg
pop
and
or
loop
dec
lock
aad
fdivrp
lock
lods
fld
ret
scas
xchg
mov
sbb
notl
orb
les
stos
movsb
ljmp
into
jmp
jno
test
pop
xchg
pop
sbb
mov
sbb
stos
dec
push
and
fcompl
push
jb
aam
cmp
lahf
sbb
bound
roll
xchg
mov
dec
ficomps
sub
and
sbb
repnz
lods
adc
pop
repnz
sub
push
and
clc
sub
mov
mov
fisttps
imull
addr16
sub
stc
mov
and
cs
jge
inc
rcrl
and
cld
jae
adc
mov
cmp
fyl2x
ljmp
stc
cmpsb
push
cli
sbb
sbb
cmp
lahf
test
mov
loopne
stc
mov
test
cmpsb
subps
iret
inc
repnz
aad
test
dec
int
daa
aad
std
adc
push
and
jmp
mov
sbb
and
pop
mov
insl
mov
pushf
scas
and
jp
cwtl
int
rorl
cwtl
mov
repz
add
xchg
adc
mov
or
jo
clc
nop
dec
xlat
xchg
mov
orl
push
sti
outsl
or
fdivrs
test
xchg
fs
js
jecxz
cwtl
cmp
std
xchg
outsb
dec
pop
pop
nop
mov
lcall
xor
arpl
iret
add
addr16
mov
mov
jne
je
cmp
xor
les
out
bound
xchg
popa
xchg
aad
sbb
mov
pop
jne
out
xor
aad
outsb
lret
pushf
adc
push
jmp
lods
dec
sub
add
mov
or
inc
add
xchg
pop
scas
neg
mov
push
idivl
nop
imul
out
jle
inc
jae
lahf
fisubl
xor
pop
dec
aam
popa
inc
push
cmp
filds
mov
out
fistps
js
roll
xchg
adc
nop
push
mov
push
test
dec
mov
outsl
cltd
sub
xchg
mov
sub
push
daa
into
int
popa
cmp
jne
pop
mov
mov
push
mov
sbb
out
push
ss
mov
xor
mov
mov
inc
fsubl
cmp
rcll
push
fcmovnb
cmpl
sbb
mov
cmp
scas
xor
out
and
or
or
xorl
pop
push
andl
sar
mov
in
mov
fwait
loope
mov
push
js
inc
xlat
lods
or
jl
or
jo
sub
push
shl
call
rcll
jae
data16
scas
leave
into
imul
and
xor
mov
jmp
xchg
sbb
fimuls
in
insb
fidivrs
push
fwait
test
push
ss
int3
loopne
hlt
out
popf
or
cmpsb
scas
cmc
jge
repnz
mov
xorl
cld
mov
mov
add
jge
out
mov
xchg
jge
add
sub
add
xor
push
xchg
mov
mov
jbe
lea
rorb
adc
cmp
arpl
and
outsb
lret
cwtl
lock
mov
cwtl
adc
pop
cmpb
stc
sub
inc
outsl
xchg
mov
pop
cmpsl
inc
cmp
sbb
aaa
jb
notl
dec
cmc
push
adc
and
jnp
ds
hlt
fbld
sbb
add
mov
xor
arpl
int
lcall
add
ret
mov
leave
test
push
rcll
mov
rorl
xor
cmc
test
call
mov
insl
sbb
push
test
lahf
enter
daa
ficoml
mov
cmp
in
lock
rorl
and
inc
repnz
shl
nop
movsl
test
mov
push
cwtl
sub
pusha
adc
dec
mov
pop
idivb
out
jl
pusha
sbb
cmpb
jb
push
mov
jno
pop
nop
mov
iret
sbb
pop
add
jb
pop
ljmp
xor
ret
adc
push
shrb
jecxz
lret
pop
in
hlt
push
push
xlat
and
cmpl
daa
jmp
jo
enter
dec
dec
add
scas
and
sub
jge
or
aas
mov
and
fstpl
and
iret
outsb
negl
add
add
movsb
repnz
pop
mov
adc
lods
shlb
adc
mov
or
mov
outsl
push
int3
pop
daa
mov
repz
mov
adc
adc
xor
xchg
cmovno
sbb
jnp
in
popf
out
cmpb
mov
push
and
ljmp
add
xchg
mov
and
push
xchg
cmp
dec
jp
xor
mov
in
mov
add
pop
and
xor
mov
and
mov
pop
or
cmp
jmp
es
mulb
mov
stos
popf
fs
cmpsb
leave
xor
aam
imul
jbe
cld
cwtl
shlb
xchg
imul
mov
cld
dec
hlt
ja
xor
gs
jmp
xor
mov
cltd
dec
fdivrp
sbb
nop
mov
iret
in
cmpsb
pop
lret
shlb
lret
gs
subl
nop
jo
sub
push
movsb
xor
push
movsb
lcall
or
push
xchg
mov
fstp
jle
ja
subl
sub
sbb
xor
pop
xor
or
push
aam
iret
xchg
icebp
fistpl
mov
outsl
cmp
mov
inc
pop
scas
add
push
push
scas
ret
jmp
into
mov
fwait
push
or
stc
sarb
cmpsl
sbb
lods
pusha
sbb
jecxz
out
mov
ret
repz
xor
inc
ret
fimuls
and
and
cmpsl
sbb
push
enter
insb
fistpl
cltd
inc
mov
xor
push
inc
clc
dec
popa
ffree
shrb
loop
stos
test
dec
push
call
lret
dec
imul
pop
ret
lcall
mov
scas
addr16
push
mov
inc
cs
out
gs
lea
cmpsb
shll
and
xor
lret
and
call
sbb
or
fnsave
cmp
jle
adc
jae
push
data16
mov
rcrb
imul
dec
mov
test
dec
test
dec
lahf
outsl
mov
cld
lock
hlt
andb
pop
shrl
shr
adc
bound
inc
jno
jmp
jns
fdivp
scas
dec
or
push
stc
repz
and
fs
or
push
jns
and
mov
mov
lods
sub
dec
hlt
or
adc
push
js
sub
bound
xchg
xor
lcall
mov
sbb
mov
aaa
insl
adc
and
cld
out
pop
mul
mov
sbb
notl
outsb
fwait
in
mov
pop
mov
out
test
je
xorl
sub
pop
aad
add
ss
test
imul
xchg
in
pop
adc
cmp
mov
rorb
xor
pushf
das
add
sbb
mov
lahf
sti
lret
cmovb
cld
inc
into
and
outsl
or
daa
pop
leave
int3
lods
add
aam
push
bound
mov
enter
mov
adc
dec
scas
dec
inc
mov
das
out
jnp
xchg
lods
ss
or
fnstcw
cmp
rolb
aad
cmp
in
push
mov
inc
xorl
mov
mov
outsb
pushf
outsl
cmp
jno
insb
fwait
clc
cltd
outsl
sub
ss
push
sbb
out
fcmovb
push
idivl
dec
jne
sbb
and
sbb
aaa
test
mov
or
and
es
pop
psrad
testb
and
sbb
lods
push
sbbb
jb
test
fdivrs
into
dec
dec
and
inc
push
ds
out
push
mov
add
jne
or
movsb
clc
call
mov
rcrl
sbb
test
xor
movsb
dec
into
xchg
jmp
push
or
sahf
dec
shr
sub
cmc
cltd
lock
js
pop
dec
xlat
inc
into
loope
in
push
push
pop
mov
cli
jge
cmpsb
mul
fdivl
pop
xlat
push
in
push
lock
pop
out
clc
sub
xchg
cltd
inc
pop
push
gs
movb
dec
cld
push
loopne
push
sti
repnz
xchg
or
jg
dec
sub
stos
sub
and
mov
mov
push
mov
pop
shll
test
mov
push
inc
pop
lds
into
or
lret
je
rorl
fsubrs
clc
aaa
xor
in
test
insl
fldenv
xchg
shll
popf
call
push
xchg
mov
xchg
negl
clc
xchg
sbb
pop
lcall
pop
mov
xchg
adc
lret
mov
out
loop
inc
adc
aaa
mov
xor
add
mov
pop
sbbb
mov
pusha
mov
test
inc
xchg
mov
aas
fbstp
push
jbe
fildl
pop
mov
sahf
and
push
or
push
cmc
xlat
faddp
int3
mov
fucom
pop
jae
pop
jns
mov
loope
add
js
add
cmp
imul
fsts
or
inc
dec
sbbb
popf
and
and
or
repz
xor
pop
out
lds
jmp
fstl
in
pop
xchg
std
or
push
cs
jns
pop
jnp
nop
xchg
lcall
aas
into
dec
sbb
dec
sbb
jnp
add
test
pop
cmp
or
pop
cltd
cmp
lret
pop
inc
pop
mov
enter
daa
popa
mov
je
test
fists
fisttpll
pop
lea
jae
shr
repnz
mov
xchg
sbb
arpl
xchg
xlat
ja
dec
push
jle
xor
icebp
jp
mov
ss
pop
xchg
outsl
pop
in
pop
push
orb
mov
repnz
inc
arpl
push
sbb
mov
daa
push
jle
stos
push
and
fs
fidivrs
cltd
push
push
mov
rcrl
xor
test
iret
mov
insb
mov
sbb
mov
pushl
fisttps
and
jecxz
jl
incl
sbb
or
insl
inc
out
push
push
mov
std
pop
mov
jg
inc
jge
mov
pop
out
sbb
bound
ljmp
popf
popw
xchg
fnsave
pusha
cmpsl
push
rolb
mov
fwait
push
pop
xor
jmp
clc
fs
cvttps2pi
inc
ljmp
idiv
xchg
stc
mov
mov
xchg
mov
jae
mov
je
push
mov
adc
or
mov
jno
lahf
mov
mov
xchg
jnp
or
testl
xchg
adc
sub
or
pop
loope
adc
popf
push
and
mov
pop
or
xor
inc
jecxz
cmpb
add
in
stc
scas
clc
mov
xchg
js
adc
push
xchg
cwtl
sbb
mov
out
jns
sbb
adc
ret
enter
inc
loopne
enter
mov
add
lods
call
fwait
in
loop
lods
clc
cmp
sub
call
shlb
stc
mov
dec
int
aam
ret
push
fistpll
dec
pop
sub
pop
into
xor
push
in
lahf
pop
ret
out
lds
adc
sbb
aam
insb
jbe
pop
es
lods
mov
jbe
adc
pop
sub
call
aas
rol
inc
sub
add
into
dec
sbb
cmp
jg
mov
popa
push
fadds
inc
and
push
pop
sbb
cmp
push
cmovnp
or
ret
push
adc
jle
sbb
mov
push
sar
adc
repz
xchg
fcmovnb
hlt
adc
jae
or
cs
rclb
inc
mov
dec
and
xor
jle
orl
das
xlat
iret
push
xchg
adc
push
movsb
sbbb
idivl
xchg
cs
test
sub
imul
in
lea
push
je
lret
idiv
in
jmp
aad
mov
mov
adc
pop
inc
cltd
mov
es
push
test
test
pushf
sbb
lods
aad
in
mov
pop
cmc
xchg
pop
mov
and
insl
shr
sti
stos
stos
mov
daa
in
test
andl
adc
mov
imul
adc
push
jbe
pop
cmp
std
inc
mov
in
dec
and
xor
nop
push
mov
xchg
fs
mov
adc
add
pop
in
shrb
mov
xor
dec
mov
js
cmp
popl
pop
add
cmpsl
mov
push
into
push
adc
pop
jns
mov
in
fsubrl
pushf
pop
sbb
fdivr
and
mov
fimull
jmp
sub
lahf
insl
push
cmp
test
jmp
push
mov
lret
sbb
mov
pop
push
jmp
pop
in
dec
hlt
push
lret
push
mov
or
nop
jno
in
add
or
adc
mov
aas
sub
leave
xor
cmc
leave
leave
scas
fs
add
add
fwait
add
out
int3
push
pusha
cmp
int3
fldenv
xor
insl
outsl
sbb
push
and
mov
mov
mov
jecxz
std
cwtl
out
out
ljmp
lcall
cltd
mov
lods
mov
jo
xchg
mov
mov
in
fucomp
jbe
pop
aad
add
mov
pop
ficoms
dec
cmp
jo
int3
jmp
icebp
add
sub
imul
push
enter
iret
sahf
mov
cmp
push
add
xor
lods
loop
cmp
inc
aad
or
jne
test
mov
adc
mov
jnp
jae
ljmp
ret
repnz
std
adc
pushf
cmc
xchg
cmp
out
movsl
mov
test
test
pop
imul
rcrl
push
and
mov
cmp
jbe
mov
lret
aam
adc
xor
clc
adc
test
dec
fmuls
dec
cmc
dec
pop
dec
loope
test
pop
cmp
xchg
pop
notl
jbe
shr
outsb
enter
out
inc
cmp
daa
sbb
push
cli
enter
inc
mov
xchg
mov
rcrl
addr16
fidivrl
mov
je
xor
push
inc
dec
pushf
mov
sub
jge
mov
cltd
scas
leave
mov
push
jne
out
int3
cmpl
push
pushf
xlat
pop
sbb
rcll
jno
je
push
xchg
mov
push
ds
lock
ds
cmp
mov
cltd
mov
aaa
sub
mov
add
xor
imul
gs
add
lret
shlb
sub
lret
aad
in
add
in
adc
add
mov
adc
dec
pop
ja
in
repnz
cld
adc
in
xchg
shlb
bound
jae
addr16
les
mov
adcb
out
ja
inc
jnp
mov
lret
dec
mov
insl
jnp
in
jmp
test
mov
scas
shlb
shll
cmp
and
mov
mov
inc
scas
enter
jge
leave
cmp
inc
jp
jp
xor
inc
sbb
out
fwait
add
std
fcoms
mov
push
shl
invd
mov
int
adc
out
mov
and
imul
jmp
xchg
mov
cwtl
jns
loopne
jle
cmp
cmp
int3
add
adc
adc
jg
jns
mov
leave
in
mov
mov
lret
insb
mov
sub
clc
aas
jns
and
rcrl
pminsw
jge
or
xchg
test
push
daa
into
rolb
jns
sbb
inc
jp
popa
pop
jnp
mov
in
hlt
or
daa
mov
xor
ss
into
or
mov
stos
sbb
mov
add
sub
pushf
sub
inc
inc
daa
cmp
or
pop
cmp
or
mov
daa
insw
xlat
pop
stos
mov
mov
shl
add
test
mov
add
std
call
add
pusha
push
or
data16
or
sahf
cs
mov
repz
push
mov
leave
in
pop
pop
add
cmp
mov
enter
rcr
pop
jg
mov
mov
in
pop
cmp
adc
gs
shll
inc
int
jae
pop
std
sub
int3
sbb
dec
jmp
jg
cld
add
sub
adc
dec
pop
mov
mov
lret
imul
xor
imul
adc
mov
cmc
aaa
icebp
aam
mov
popf
in
xchg
mov
lret
fsub
mov
call
jnp
mov
mov
adc
in
add
push
mov
mov
pop
lock
mov
push
xchg
into
mov
push
mov
pushf
and
inc
movsb
mov
ss
daa
mov
outsl
jmp
mov
cmp
push
sub
outsb
mov
mov
push
sbb
xchg
xchg
dec
dec
mov
xchg
xor
add
inc
xchg
mov
movsb
ljmp
mov
xchg
push
and
jg
sbb
test
dec
pop
sahf
stc
rolb
stc
pop
pop
mov
cmp
cmp
adc
mov
sub
pop
imul
jbe
in
and
push
push
jge
sbbb
sti
push
push
aas
push
mov
sub
mov
call
add
gs
mov
sahf
setge
mov
xchg
sub
mov
iret
cld
stos
dec
ss
sti
mov
xor
xlat
xchg
mov
cltd
pop
pop
add
in
mov
stos
in
out
inc
js
je
mov
fcoms
jmp
in
inc
test
insl
clc
loopne
loop
lea
popf
ss
nop
jmp
sub
jp
dec
cli
sarb
xor
xor
pop
sub
mov
or
jecxz
mov
cmp
cld
int
ds
and
mov
sub
iret
push
out
dec
xor
xchg
jl
dec
sbb
push
dec
jae
and
push
sub
mov
pop
rorb
or
test
jp
sub
and
cli
dec
stos
adc
mov
adc
sarl
bound
in
add
insl
lret
dec
dec
mov
enter
pusha
jecxz
arpl
xchg
aam
leave
xchg
sti
pop
adc
jne
std
mov
sub
wbinvd
test
out
mov
or
xchg
leave
and
or
or
stos
jb
jmp
mulb
sti
or
leave
add
push
sbb
mov
pushf
es
xchg
std
push
das
jo
add
xchg
cmp
adc
sahf
add
jp
push
outsl
jbe
cmp
mov
jnp
int3
xor
js
lret
xor
cmp
ja
pop
push
jb
mov
push
insl
test
dec
lcall
and
into
addl
mov
pop
inc
xchg
pusha
mov
push
pop
mov
mov
pop
data16
pop
pop
jns
push
pop
mov
shl
loop
je
mov
dec
ret
xorb
push
es
enter
mov
sub
dec
dec
stos
jmp
orl
add
mov
push
jns
push
icebp
enter
arpl
outsb
mov
pop
repz
fdivs
dec
clc
sbb
icebp
mov
leave
or
rcll
aaa
insl
loope
rolb
jne
imul
pop
mov
dec
sbb
mov
mov
bound
repz
or
xchg
fucomip
cmc
or
push
stos
sub
cli
insb
sarb
mov
jns
cli
mov
rcrb
dec
jp
or
push
jns
pop
or
in
lcall
int3
es
xor
fld
test
ljmp
ss
ds
mov
sarb
inc
jb
fstpt
pop
mov
mov
push
imul
cwtl
dec
dec
xor
out
mov
sub
pusha
or
mov
xor
ret
sbb
sbb
sub
mov
aas
je
jb
arpl
cld
xchg
adc
lods
insl
lock
jno
push
ret
and
les
sbb
lock
clc
lods
add
cmpsl
push
push
in
jo
nop
shll
jb
xchg
scas
in
lods
add
or
mov
mov
shll
stos
mov
pop
xor
insb
mov
inc
daa
test
les
sub
push
addb
imul
mov
test
icebp
mov
je
cmp
dec
es
mov
test
sub
test
lea
ja
aas
xlat
or
xor
out
std
push
mov
mov
iret
and
movsb
jg
add
ret
push
fnstsw
mov
xor
xchg
inc
push
test
mov
pop
sub
or
fcmovbe
mov
jl
jnp
xchg
mov
push
mov
inc
jne
push
sub
mov
and
jg
jge
sub
dec
cmp
pop
lahf
dec
sub
push
pop
pop
or
xorl
push
sub
outsb
mov
cmp
fists
add
insl
sbb
les
jge
insl
xchg
mov
repz
lock
mov
add
lcall
xor
cltd
js
jb
lret
lods
add
shll
add
adc
xchg
lods
inc
jo
les
xor
jle
mov
pop
jnp
jecxz
mov
inc
jb
or
inc
iret
stos
bound
mov
out
adc
fstl
adc
push
mov
jbe
xor
pop
repz
loopne
adc
or
and
sbb
loopne
ljmp
mov
sbb
fs
sbbb
in
xchg
daa
adc
xchg
shlb
stos
xchg
sbb
pause
sbb
xchg
jmp
clc
add
loop
aam
jae
and
push
push
mov
stos
ficoml
mov
outsl
add
cmc
mov
mov
mov
jbe
cmp
ljmp
mov
out
sbb
sbb
lock
std
fwait
insl
xor
ss
adc
je
dec
xor
stc
jle
pop
out
push
lods
clc
test
cmp
ret
popf
or
cwtl
and
test
xchg
sub
push
and
ljmp
or
mov
clc
sbb
xchg
xor
out
lahf
jns
adc
xchg
push
cmp
leave
mov
pop
sub
lahf
loope
int
ret
stos
adc
cmp
sub
xchg
test
dec
adcb
loope
ret
outsl
jl
mov
sti
mov
fcomps
loope
and
and
push
add
sahf
sub
sahf
lret
aas
cmpsl
and
sbb
dec
enter
dec
adc
dec
mov
xchg
pop
test
sub
mov
std
and
dec
push
pop
and
aas
ljmp
dec
in
ret
dec
and
scas
bound
mov
fwait
ret
cmp
cmp
inc
fldl
popa
or
gs
mov
and
in
cltd
jmp
pop
inc
lds
push
jl
std
cmp
outsb
fisubl
add
scas
adc
mov
sub
decb
add
push
sbb
test
lea
jbe
and
icebp
or
sti
mov
addr16
in
arpl
jnp
mov
lods
adc
aam
cmc
xchg
inc
sub
lods
imul
mov
bound
icebp
mov
fldl
jge
adc
mov
cmp
jmp
add
or
lahf
fcmovu
cmp
add
xchg
lock
fsubrs
out
jp
bt
aas
nop
stos
int
sbb
loopne
dec
ret
mov
push
test
cmp
sti
jb
mov
jns
lds
xchg
jle
push
cmp
cmp
jg
ja
or
loopne
jle
pop
dec
pop
mov
sahf
hlt
inc
data16
testl
test
lret
daa
loop
cmpb
in
pop
test
jb
aaa
pop
xchg
pop
mov
leave
cwtl
lret
pop
sbb
jge
in
lods
mov
dec
push
cli
jns
xorl
mov
pop
pop
mov
mov
jne
iret
mov
push
loop
mov
fadd
call
push
rclb
sbb
and
mov
out
mov
or
mov
sbb
xchg
adc
roll
ret
jae
fisttpll
mov
mov
scas
stos
fisttpl
lock
ds
jo
adc
stos
lret
idivl
ret
out
push
mov
adc
mov
loope
filds
mov
add
movsl
and
sub
mov
movsb
ret
sub
and
mov
popf
mov
add
sub
into
adc
mov
mov
mov
sub
mov
sub
outsl
jae
mov
repnz
lods
mov
pusha
adc
dec
int
fdivr
push
lcall
fildll
in
dec
adc
inc
xor
dec
jb,pn
mov
popf
scas
add
popa
leave
out
pop
aas
es
fisubrs
sub
sub
adc
mov
les
mov
lcall
out
das
inc
in
mov
mov
cmpsb
xchg
lret
dec
and
scas
ljmp
push
inc
les
and
nop
gs
andb
xchg
or
push
xor
out
shlb
dec
dec
dec
pop
dec
adc
or
loope
mov
stos
jae
and
in
cld
and
sti
cmp
adc
mov
scas
add
cmpb
xchg
add
sahf
hlt
cwtl
push
jbe
ss
adc
sbb
lcall
les
ja
cli
push
fcmovbe
push
xor
cmp
movsb
pop
dec
push
and
imul
mov
adc
and
dec
pop
aad
mov
scas
fistps
xchg
stc
mov
sarl
out
or
sbb
in
popf
xor
lods
call
mov
imul
rclb
fsubs
jmp
aaa
and
stos
movsl
cmp
cmp
test
in
andb
hlt
mov
rclb
stos
rcll
jge
sbb
or
mov
mov
cmp
and
or
xchg
or
jb
lods
cmc
inc
cmp
pop
inc
sbb
mov
and
fxam
mov
or
adc
mov
insb
push
mov
mov
data16
xchg
testb
sbb
int3
pop
popa
sbb
add
fwait
ret
roll
mov
pop
sti
push
xor
lds
rolb
pusha
fiaddl
fidivrs
xchg
xor
and
sbb
cmp
push
ds
add
psubd
cmp
test
daa
xor
cmp
mov
pop
push
xor
mov
xor
mov
fnstcw
mov
cli
sbb
subb
sbb
les
cltd
sbb
mov
call
and
cmp
sbb
inc
aaa
pop
rorl
mov
stos
inc
push
adc
mov
or
sub
mov
dec
ds
sub
add
pop
mov
imul
lods
inc
data16
mov
push
push
fnstenv
outsb
cmp
pop
outsb
sbb
scas
inc
and
sbb
ja
aaa
inc
enter
push
mov
pop
add
dec
and
lock
mov
mov
add
aad
outsl
xchg
jbe
data16
jge
popa
push
mov
xchg
scas
outsl
sbb
and
icebp
pop
mov
inc
loop
je
lret
daa
into
cmp
sub
sbbb
inc
or
ss
imul
adc
xchg
rcll
jbe
dec
fcoml
ret
mov
repz
insl
mov
ljmp
adc
xor
xorb
repz
fs
sbbb
push
cmp
jae
ficompl
xchg
or
jbe
in
movsb
xchg
pop
std
roll
or
filds
rcll
push
fcomps
inc
mov
inc
pop
mov
enter
lcall
sbb
and
pushf
mov
sub
mov
test
shlb
pop
out
mov
fiadds
jne
add
inc
sbb
xor
xor
sub
repz
mov
out
sub
inc
push
arpl
dec
aaa
fildll
push
in
pop
fimuls
adc
cli
xchg
imul
jo
lret
jl
stc
pusha
enter
cltd
dec
dec
and
testb
loop
cmp
cmp
add
loop
jns
push
sub
mov
scas
mov
loop
sbb
stos
dec
test
out
clc
xlat
mov
adc
incl
mov
mov
rcr
outsl
insl
flds
xor
mov
ljmp
mov
sbb
inc
dec
imul
in
aam
push
jbe
int
or
jl
ret
sahf
aas
mov
mov
push
mov
mov
jb
ss
adc
incb
das
out
xchg
ljmp
xchg
into
cmp
dec
adc
cmp
and
sbb
dec
jecxz
push
ss
lret
std
jne
push
aaa
and
ja
pop
dec
shl
stos
ret
add
jle
mov
jmp
jecxz
mov
lds
or
push
stos
hlt
jno
pop
add
jge
rcrl
inc
dec
sbb
or
xchg
pushf
scas
xor
aam
xor
iret
pop
addl
cmp
inc
std
iret
mov
jmp
cli
notl
mov
orb
das
pop
jb
popa
pop
jl
xchg
add
scas
jmp
shlb
mov
clc
xlat
push
mov
mov
fbstp
push
push
mov
adc
jno
sbb
aam
adc
ds
call
inc
mov
adc
aad
aam
or
xor
jno
add
cltd
mov
stos
mov
mov
std
rorl
adc
cmp
mov
inc
mov
or
sbb
lock
jne
lahf
sbb
add
jne
sbb
jl
std
aas
mov
int3
adc
lret
pop
xchg
sub
lea
sub
jb
push
cltd
xchg
mov
lret
iret
dec
fwait
add
adc
push
cmpsl
lret
mov
test
or
lds
jns
xchg
push
pop
mov
movsl
stos
mov
cmpb
inc
sub
mov
lret
sbb
jno
mov
jns
icebp
inc
push
lret
jge
cmp
pop
jl
push
xor
cmp
jecxz
test
aaa
call
rorw
in
lds
sub
sub
adc
rcrb
movsl
mov
pusha
sbb
ss
cmpsb
divl
in
adc
mov
ror
pushf
mov
shll
fidivrs
cmc
lahf
mov
cmpsl
inc
fildl
loop
xlat
test
outsl
fiadds
and
call
dec
xlat
aaa
push
sub
pop
dec
and
imul
mov
xor
in
push
stc
lcall
xor
cs
xor
pushf
sub
fwait
mov
pop
and
lss
cmp
addr16
mov
js
rcrl
cmp
xor
cmp
pop
lea
jae
cvttps2pi
stos
xchg
mov
and
push
cltd
pop
ret
es
fnstenv
in
jne
dec
fwait
into
dec
push
daa
and
mov
arpl
sbb
sub
and
imul
in
ss
mov
push
lea
rolb
jecxz
ret
fsubp
jb
insl
add
js
inc
mov
mov
jns
stc
iret
xchg
not
into
int3
daa
aas
insl
fyl2x
dec
mov
mov
mov
or
jp
push
mov
lret
fisttpl
fsts
movsb
orl
xchg
pop
xor
into
cwtl
push
sbb
sti
in
mov
xchg
inc
in
jo
pop
xor
call
data16
loopne
nop
dec
mov
adc
adc
into
xor
pop
lret
into
std
loop
shrb
idivl
adc
sub
js
mov
fidivl
and
test
fisubs
fadds
mov
and
insb
popa
inc
inc
mov
loop
fimuls
ffree
inc
lret
push
adc
ror
cmp
mov
enter
jg
movsl
stos
xchg
cli
jnp
mov
mov
ja
ljmp
ret
fwait
xor
dec
push
and
mov
ljmp
fisubs
jno
movsl
mov
cwtl
pop
sub
pop
loop
push
sarb
jecxz
out
add
cmp
imul
push
inc
push
aad
add
outsl
pop
mov
out
and
addr16
rcrb
loopne
imul
adc
xchg
mov
add
cmp
cmc
dec
pop
into
add
xchg
sub
shrl
mov
filds
shrb
pop
cmc
dec
xor
loop
cltd
pop
sahf
and
in
testb
das
rcrl
or
add
addr16
cmp
lahf
pop
std
sbbb
jg
add
in
mov
push
cmpsl
xchg
xor
inc
mov
fcoms
orb
mov
rorl
add
add
or
push
push
pop
jg
test
stos
jmp
dec
and
pop
test
and
add
jnp
mov
test
mov
cs
in
pop
mov
jecxz
daa
xchg
insl
mov
xchg
sub
inc
je
sub
add
sbb
aas
mov
adc
sub
cmp
push
push
xor
das
mov
stos
pop
inc
addr16
stc
scas
mov
outsl
lret
cmc
adc
cltd
aam
nop
in
daa
adc
fdivrs
mov
and
mov
mov
out
mov
sub
xor
push
lock
in
popf
add
imulb
inc
xor
xchg
sbb
xor
hlt
fbstp
test
mov
jo
loop
popa
and
push
popf
xor
push
cmp
in
fsubrl
mov
add
mov
pop
sbb
jno
sbb
cmp
inc
add
push
and
dec
mov
mov
add
ss
mov
jmp
lock
gs
scas
jecxz
mov
sub
jne
popa
gs
into
ds
inc
jb
fdivrl
mov
add
outsb
loopne
sub
sbb
insl
stc
pop
iret
fxch
sub
push
jbe
push
inc
daa
lahf
jae
popf
xlat
ret
js
movsb
inc
cmp
or
jp
mov
pushf
loopne
xchg
sub
inc
mov
add
sub
xchg
sarl
sti
leave
xchg
mov
sahf
iret
and
xchg
lret
jle
test
shll
std
jne
scas
mov
loop
jecxz
push
int3
add
out
loop
pop
pop
lds
jmp
or
es
leave
and
jge
pop
xor
xor
adc
pop
add
push
sub
movsb
outsl
sub
dec
call
mov
popa
mov
dec
pop
add
and
dec
insb
mov
aam
jg
rclb
adc
sub
and
popf
pusha
lock
push
test
aaa
or
popa
dec
inc
test
popl
fwait
pop
stos
adc
add
cmpsl
or
test
push
lcall
hlt
addr16
outsl
stos
fsubs
dec
stos
jne
and
mov
push
out
cwtl
jne
outsl
or
jbe
cmp
sub
pop
jle
lds
roll
sbb
adc
fildl
mov
cmp
lret
sub
or
mov
mov
jp
dec
xchg
xchg
into
gs
inc
imul
insl
jbe
and
jb
or
iret
push
add
xchg
and
mov
inc
ret
js
das
cld
popa
popa
out
mov
lret
popf
xchg
in
lods
lcall
adc
rcr
push
mov
pop
xor
data16
popf
push
sub
sti
push
out
scas
sbb
in
jo
adc
lahf
sub
xchg
cmp
mov
adc
ret
lret
lcall
adc
xchg
div
xor
sbb
in
mov
imul
push
cmp
repnz
nop
xchg
sub
test
inc
add
jge
fisttpll
ret
int
out
ss
addl
aaa
lods
mov
loopne
push
test
xchg
dec
aas
jle
or
dec
adc
jecxz
dec
push
mov
ljmp
into
test
mov
mov
mov
rcrl
and
das
jbe
or
jle
negb
push
mov
xor
mov
das
loop
aad
imul
or
xchg
mov
loop
xor
pushf
out
add
pop
out
dec
int3
imul
xchg
adc
cmp
mov
arpl
lret
cmpsb
ljmp
mov
insb
adc
mov
mov
xchg
mov
fistps
sbb
add
in
mov
push
and
mov
sub
es
mov
or
push
push
in
test
rep
cmp
fadds
mov
insl
push
push
dec
jo
leave
fiaddl
sbb
call
arpl
out
push
arpl
jl
incl
pop
movsl
insb
sarl
mov
mov
jecxz
pop
and
sbb
fwait
xor
add
and
clc
fidivrl
xchg
mov
fisubrs
sarb
call
inc
push
cmp
dec
and
sbb
int
lret
fists
je
add
data16
rcl
xchg
std
xchg
push
lock
sub
sbb
inc
int
test
out
jbe
pop
pop
imul
dec
xlat
jl
je
rol
inc
cmc
test
pop
inc
subb
and
push
enter
aam
adc
push
sub
idivl
inc
add
ret
testb
cmp
xchg
sub
mov
aam
push
mov
add
sbb
mov
ja
mov
jle
jle,pn
cmc
hlt
cmp
jo
fwait
loop
cmpsl
arpl
enter
push
fscale
add
loope
sti
jecxz
test
dec
test
jo
addr16
cmp
stc
jb
xchg
in
ds
mov
fists
cmpsl
jns
inc
mov
and
pop
mov
jg
stos
push
or
push
rolb
dec
sub
add
repnz
sahf
mov
and
loope
aas
sahf
push
hlt
mov
pusha
test
das
push
aad
icebp
inc
sbb
jne
and
les
dec
mov
mov
lods
lods
xor
add
shrl
jnp
xor
mov
enter
jp
cwtl
inc
dec
jle
cmpsb
inc
aas
es
cld
pushf
push
fcompl
stos
or
push
nop
fisubrl
testl
cld
cli
lret
out
inc
cmp
ficompl
test
aaa
lods
fmul
mov
mov
inc
rcrb
addr16
xorl
pusha
xchg
movsl
enter
pop
outsl
fidivrl
pop
outsl
loop
in
dec
in
aaa
push
jle
pushf
mov
and
gs
or
jo
jle
daa
fdivrp
cmp
mov
cmpsb
icebp
lret
rol
popa
or
cmpsl
in
jo
mov
xchg
mov
les
rcl
cs
jns
jno
inc
sub
xor
xchg
mov
mov
xchg
adc
add
xor
mov
cbtw
or
pusha
mov
in
stc
call
repnz
nop
leave
xchg
jo
sarb
push
jne
xor
jl
mov
int3
ss
sbb
ret
das
cltd
cwtl
adc
mov
or
adc
mov
je
pop
lcall
movsl
rcrb
dec
sbb
cmc
or
lds
subl
inc
dec
push
xor
add
jl
mov
mov
imul
scas
out
out
jno
pop
or
cmp
les
push
daa
cmp
addb
aam
jo
lods
test
pop
and
cmp
cs
xor
dec
jge
mov
or
adc
push
out
popa
and
mov
and
jno
adc
cmp
sarl
int3
push
cs
ljmp
cltd
inc
xchg
adc
sbb
lock
dec
xor
mov
in
adc
inc
adc
mov
jle
mov
std
enter
inc
sub
push
or
xchg
sti
cmp
sbb
lss
lcall
jge
lods
xor
inc
bound
bound
pop
mov
xchg
xchg
ffreep
pop
push
mov
xor
dec
sbb
insb
nop
js
push
ljmp
test
jns
xchg
adc
les
orl
mov
dec
dec
addr16
mov
jmp
pop
mov
jle
mov
sub
scas
mov
repnz
jge
jne
gs
gs
mov
push
xchg
in
xor
pop
std
iret
mov
pop
test
sahf
pop
sti
push
push
mov
mov
and
mov
popf
pop
int3
call
sub
xchg
and
lods
hlt
cmp
cld
jnp
cltd
imul
int3
aaa
inc
mov
push
loopne
cmp
inc
lcall
subl
push
sub
cmpsl
aad
repz
lods
fbld
pop
adc
nop
pop
test
out
pusha
mov
xor
mov
repnz
add
jmp
fidivrs
shrl
xchg
jnp
lods
xchg
xchg
pop
shld
inc
roll
push
pop
loopne
test
sbb
xchg
mov
mov
or
fs
xor
inc
push
mov
arpl
mov
xor
shlb
mov
pop
mov
push
mov
subb
sbb
out
jmp
leave
fdivs
inc
decb
jnp
add
xchg
or
rorb
dec
adc
test
cmp
lahf
lahf
sub
mov
dec
lcall
aaa
mov
popf
loope
jp
xchg
icebp
outsl
es
mov
or
inc
aas
aam
sub
call
aam
add
movsl
xorb
push
jae
inc
loope
loope
sbb
mov
adcl
dec
cmp
and
mov
sarl
pop
add
mov
mov
mov
dec
ds
add
hlt
cmp
test
xchg
fs
hlt
inc
mov
xor
push
iret
out
in
popf
xchg
in
cwtl
out
dec
jnp
cmp
sub
insl
inc
test
xchg
push
lods
xor
bound
jecxz
cmp
lods
movsl
jne
jne
mulb
xor
mov
sbb
push
and
pop
add
push
adc
movsl
push
out
lcall
shlb
dec
or
cltd
pop
cs
rclb
adc
arpl
dec
cli
cmp
lds
adc
add
mov
jbe
jmp
cmpsb
xor
xor
hlt
sbb
testb
outsl
and
popa
rolb
sar
xor
test
rolb
mov
or
cmp
pusha
cmpsl
mov
sbb
movb
jb
add
jg
int3
pop
leave
loope
mov
cltd
xchg
mov
xchg
lock
pushf
inc
or
pop
daa
pop
adc
sbb
xchg
xchg
cmc
sbb
or
jg
or
mov
addr16
dec
pushf
inc
cmp
dec
shll
jbe
rcrl
scas
out
mulb
popf
add
xlat
mov
or
mov
or
jl
popa
adc
lods
das
push
jne
xor
cmp
scas
xchg
push
xor
mov
inc
pop
nop
push
cmp
iret
rcr
xchg
int
dec
xchg
les
add
cmp
lret
enter
fiaddl
cmp
ds
cltd
jbe
cmp
mov
cmp
add
mov
sbb
mov
adc
std
jg
sub
inc
fwait
cmp
inc
sbb
out
test
roll
mov
fdivs
pushf
jle
xchg
inc
xchg
in
xchg
cs
sbb
dec
mov
andb
push
lret
subb
arpl
lahf
add
loop
hlt
mov
ss
jae
fs
call
dec
xor
xchg
cmp
mov
in
cmp
xchg
fnstsw
imul
je
jns
jmp
filds
xchg
add
jbe
sbb
call
mov
iret
std
jl
cmp
cmp
fstl
push
jne
rcrl
ja
jno
adc
xor
pop
enter
out
push
push
pop
add
adc
ljmp
xchg
xchg
in
jb
mov
pushf
mov
xchg
sub
mov
sbb
fwait
jb
xchg
sbb
dec
sti
push
jge
ja
pop
in
lods
xchg
or
and
inc
inc
pop
sbb
mov
fiadds
insb
ljmp
add
mov
cmp
test
lret
and
cmpsb
lcall
jns
jne
dec
in
add
xchg
inc
mov
xorl
fsubrl
rcll
dec
pop
shlb
rcr
lods
push
and
shrl
fdivrl
xor
dec
icebp
push
ljmp
sbb
add
pop
cmp
inc
insl
jecxz
sub
jno
xor
push
sub
and
jp
cmp
movsl
ret
push
repz
mov
out
xchg
cltd
imul
inc
loopne
ret
dec
ljmp
and
and
repz
lds
ja
and
mov
pop
in
pop
mov
jbe
pop
cmpsl
bnd
mov
mov
adc
jbe
ja
sbbb
outsl
xor
enter
in
jmp
outsb
pop
stc
push
pushf
test
sub
test
jg
jg
jae
sub
stos
out
mov
inc
fstpt
gs
lcall
iret
inc
jns
pop
inc
ljmp
xchg
mov
xor
mov
mov
and
fstl
ficomps
push
leave
ss
mov
xor
repnz
movsb
loop
iret
pop
jp
dec
popf
xlat
mov
jnp
out
lock
jnp
fmull
and
pop
jno
in
add
loope
dec
adc
sbb
cmp
iret
in
lods
push
xor
mov
roll
ljmp
add
mov
cmp
jb
repnz
xor
cmp
dec
in
jo
in
daa
decb
in
xor
cli
addb
xchg
add
cltd
adc
pop
dec
aas
xchg
repz
xor
or
and
lods
inc
imulb
lret
es
sti
mov
repz
fidivl
pop
push
les
test
mov
out
and
aas
lods
enter
fs
add
jl
out
mov
ljmp
xchg
lods
shlb
jge
sub
lahf
mov
clc
fisubrl
mov
pop
aaa
cld
inc
xor
lret
bound
arpl
or
sti
out
xchg
cmp
mov
cmp
std
stc
test
mov
stos
ret
push
scas
fisttpl
add
sub
loopne,pt
xchg
or
xchg
push
shlb
mov
mov
push
add
mov
fists
incb
and
xchg
add
addr16
add
cmpsl
loop
stc
lahf
jecxz
ret
or
push
stc
test
push
pop
cmp
hlt
sub
mov
pop
lds
mov
xlat
les
cmp
jne
xchg
je
mov
and
lret
pop
xor
int
repnz
inc
arpl
mov
jne
outsb
jb
pop
cli
inc
int
cmc
rcr
mov
mov
or
aas
xchg
fidivl
inc
icebp
dec
aaa
mov
fucom
jne
xor
outsb
pusha
or
pop
into
dec
push
jecxz
or
or
lock
mov
push
lret
pop
cs
jbe
xor
mov
into
ja
inc
nop
stc
stos
push
jl
jnp
jle
mov
adc
ret
pusha
mov
jmp
pop
pop
loopne
rcrb
and
cmp
repz
cwtl
lahf
ds
and
call
mov
or
mov
pop
xor
pop
lds
ds
cld
fmuls
dec
daa
ljmp
adc
loope
push
jge
and
mov
mov
push
sub
mov
cltd
sub
or
xor
movsl
push
leave
push
aam
inc
mov
aad
jb
sbb
jnp
push
fisubl
repnz
jo
stc
gs
imul
popa
ljmp
add
aas
xchg
push
push
add
es
mov
sub
sbb
mov
mov
jns
mov
mov
loope
bound
dec
cld
jne
ljmp
and
js
les
mov
add
cmp
or
jns
pop
or
test
call
ljmp
std
movsb
dec
xchg
outsb
dec
push
insb
xchg
cmp
clc
lock
or
outsb
stos
push
push
aas
inc
das
inc
sbb
push
push
into
xchg
sub
lods
mov
sub
push
insb
pop
and
jl
sub
mov
jmp
pop
cmp
push
cwtl
sub
fimull
addb
mov
xor
sub
lds
xchg
mov
and
sub
mov
fwait
push
pushf
mov
aaa
mov
xor
push
jge
popa
imul
sbb
push
mov
push
mov
aas
out
dec
ja
jg
xor
pop
cli
or
sbb
pop
mov
pop
scas
add
and
xchg
dec
cmp
cmp
lret
add
push
mov
loope
test
dec
dec
mov
gs
push
mov
and
scas
stos
and
push
imul
cwtl
push
icebp
pop
hlt
cwtl
dec
xchg
out
aaa
xor
fimuls
or
ret
adc
scas
fcmovnbe
ljmp
xchg
ret
mov
cs
daa
out
dec
test
lcall
adc
dec
movswl
dec
aam
adc
jo
jns
hlt
arpl
aam
inc
pop
mov
push
rorl
push
jge
sahf
imul
cmpsl
lock
icebp
xchg
fisttpl
das
cmp
fdivrl
push
imul
fwait
lcall
xorb
test
stos
mov
test
fwait
into
loop
xchg
pushf
sahf
mov
pop
fs
repnz
add
pop
outsl
test
idivb
jne
fsubrp
int3
das
and
sbb
xchg
mov
movsb
mov
add
adc
sbb
push
dec
ss
cmpsb
ficoml
sbb
adc
and
mov
dec
cmpsl
jmp
sarb
arpl
loope
adc
mov
lahf
jecxz
shll
enter
hlt
stc
pop
fadd
sub
stos
in
inc
out
xor
lcall
jae
sub
in
xor
ficompl
fnstcw
push
pop
into
into
repnz
inc
mov
loopne
cmpl
push
mov
push
and
jnp
sbb
push
or
push
addr16
cltd
adc
pushf
scas
cmp
mov
pusha
inc
mov
mov
jg
lock
js
jne
movsl
xor
or
ljmp
shll
out
cld
leave
push
in
mov
push
adc
or
jge
roll
pop
xor
loope
in
fildl
pop
call
aaa
loope
imul
sbbb
popa
hlt
test
add
xchg
inc
lret
inc
outsb
jne
or
mov
cmp
aaa
push
pop
lret
out
into
cli
jne
mov
fwait
cmp
ret
pop
test
cmpl
bound
les
xor
pop
cmp
sahf
lds
je,pn
bound
daa
or
jb
loopne
jp
sbb
mov
pop
jl
leave
cmp
mov
fwait
inc
mov
mov
fwait
sub
popa
adc
or
cld
std
and
jae
icebp
jns
lods
mov
call
int3
pusha
insb
xchg
xchg
cltd
jg
add
cmp
add
addl
lret
stos
inc
insb
loop
mov
ret
xchg
ss
ss
and
cli
icebp
scas
cs
push
jp
sbb
adc
jge
das
test
pop
mov
shll
loope
shl
adc
mov
xor
loop
push
daa
lock
in
es
jb
mov
cmpsl
fmull
or
fstpt
xchg
stc
dec
lahf
sbb
mov
mov
fwait
cmp
mov
sub
xchg
test
test
push
test
lcall
test
pop
push
lret
mov
jne
jb
movsl
sub
xchg
sti
jne
pop
scas
mov
iret
xchg
add
pop
iret
mov
push
cli
les
jae
jno
decl
ret
mov
lret
gs
and
sub
test
jne
push
test
hlt
in
int
push
sub
jae
je
pop
arpl
or
fsts
pop
test
adc
sbbl
orl
mov
shlb
jo
mov
cmpsl
das
inc
test
dec
dec
ljmp
mov
and
out
adc
pop
aad
test
fwait
jl
gs
test
adc
pop
mov
mov
jo
mov
lock
sbb
mov
and
lret
sub
adc
mov
and
insb
std
inc
push
jmp
push
cmp
pop
jae
inc
cld
mov
cmpsl
xchg
test
inc
les
adc
lods
test
fisttpll
mov
sahf
lret
std
ret
enter
aad
pavgb
scas
push
and
enter
add
add
scas
mov
std
mov
call
xchg
xchg
mov
std
pop
repz
add
ljmp
xlat
scas
stos
adc
mov
push
push
into
xor
mov
mov
or
sahf
test
out
testb
pusha
inc
dec
es
arpl
loop
pop
mov
sub
inc
dec
sub
lock
push
jno
in
push
sahf
pop
or
cltd
push
out
dec
arpl
pushf
mov
loop
add
xor
or
insl
fidivrs
mov
imul
clc
imul
jne
inc
fsubr
out
cmp
icebp
xor
cmpsl
and
ficompl
jg
in
out
or
sub
push
xchg
xchg
fcomp
pop
push
or
push
dec
into
icebp
out
pushf
cmovs
les
aas
adc
pop
pop
jg
cs
test
adc
test
les
add
insb
ret
mov
mov
jmp
test
pop
pushf
mov
push
cmp
jae
push
es
cmp
mov
push
cmp
nop
movsl
sbb
inc
repz
push
xchg
fmul
jae
pop
xorl
xlat
shl
mov
sbb
push
xchg
push
jmp
fs
lret
aam
mov
shl
jmp
popf
inc
push
xchg
jmp
add
push
ljmp
jns
mov
loop
dec
call
cmp
setnp
in
push
inc
cld
push
frndint
aaa
push
push
add
xchg
in
fidivrs
les
mov
outsl
ret
in
mov
sbb
push
pop
xor
cmp
mov
popa
push
insb
pop
mov
out
inc
out
push
cld
cmpsb
inc
out
jns
ss
fwait
xchg
mov
mov
cmp
or
clc
das
fistpll
iret
inc
xor
dec
inc
xchg
rorb
push
xor
pminsw
insb
cmpsl
xor
or
lret
or
mov
cli
dec
stos
and
xor
icebp
or
mov
mov
in
leave
int
xchg
push
sub
xchg
add
icebp
and
mov
or
mov
jmp
aam
mov
divb
dec
mov
pop
inc
xor
lea
push
xor
sbb
mov
filds
into
xor
lods
push
mov
add
xchg
outsl
ret
inc
sub
jo
jg,pt
arpl
adc
fnsave
or
push
ja
or
and
out
out
pop
sbb
inc
incb
mov
fsts
cmp
mov
ret
rorb
jne
shl
dec
push
lock
sahf
dec
into
xchg
inc
inc
adc
popa
xchg
inc
add
pop
cmpsb
hlt
aaa
and
movsl
push
lcall
xchg
nop
sub
pop
mov
les
les
and
mov
inc
mov
mov
push
les
or
js
les
fs
mov
in
adc
dec
mov
test
js
or
sbb
in
lds
mov
sbb
lods
enter
push
rcrb
mov
mov
orb
rorb
pop
pop
mov
or
cwtl
push
imul
fldcw
es
mov
sbb
jnp
sub
lcall
rcr
adc
sub
mov
jbe
or
xchg
jne
in
inc
call
sbb
lods
fcoml
shrb
mov
das
or
ds
mov
test
push
sub
jbe
sub
mov
es
in
cmp
pop
les
icebp
repz
iret
cmp
mov
push
xor
lds
cmp
push
sti
cs
mov
in
sub
out
ret
or
std
adc
jnp
pop
test
clc
cltd
notb
push
movups
inc
pop
xor
lea
sbbl
loope
ljmp
mov
mov
mov
xchg
jg
xor
jmp
pop
mov
icebp
fcoml
push
push
mov
cltd
add
or
lock
push
ja
jecxz
ss
out
in
stos
test
xchg
cmp
sub
add
push
add
fnstsw
inc
mov
xchg
dec
dec
fdivrs
clc
cltd
and
test
inc
pop
fisubs
jge
push
repnz
or
jno
push
pusha
and
loope
sti
pop
imulb
or
aas
xchg
pushf
mov
mov
sti
adc
ror
fucom
sub
loope
lahf
jno
ret
cmpsb
ret
repz
out
dec
stos
out
mov
xchg
push
leave
mov
cmp
rclb
out
idiv
or
fucomip
sub
inc
scas
add
lods
fucomp
xchg
fstpt
jns
fidivrs
sahf
shrb
xor
popf
insb
xor
jno
es
inc
rorl
lret
mov
xor
xlat
pop
adc
push
and
inc
cmp
icebp
jecxz
and
pop
push
cmp
mov
dec
add
xchg
push
outsl
loop
jno
insb
fdivrl
out
push
test
dec
lret
inc
pop
pop
cmpsb
out
jne
jl
add
sub
decb
cmpsl
sbb
xchg
cli
mov
jno
gs
scas
test
popf
fwait
in
jge
stos
and
pop
jg
int
push
sub
jmp
aas
push
repnz
mov
lret
das
shlb
dec
pop
popl
fldt
adc
enter
bound
jbe
fdivrs
rcll
jne
xchg
push
ret
sbb
push
mov
shrl
jmp
jl
flds
mov
add
cld
pop
push
aad
dec
mov
es
mov
jg
test
xor
mov
lock
xchg
test
xchg
enter
mov
fbstp
int
repz
cltd
xor
mov
repnz
jl
scas
enter
sahf
aad
inc
sub
dec
dec
ds
adc
sbb
in
repnz
and
fildll
mov
js
nop
or
adc
xchg
lret
xchg
cli
repz
jg
shrb
pop
cmp
mov
negb
sarb
test
loope
push
inc
sbb
ficomps
sbb
hlt
mov
xchg
cli
mov
leave
arpl
stos
movsb
enter
dec
pushf
jle
inc
sub
xlat
push
insb
mov
and
repz
in
imul
jle
jp
jns
push
rcrl
or
enter
add
cmp
adc
mov
add
xlat
addl
xor
enter
insb
rcrl
cld
ficomps
aad
leave
js
in
fistpll
outsb
fwait
mov
or
daa
outsl
lret
dec
cmp
mov
cltd
sbb
cmp
pusha
loop
add
mov
inc
std
test
fprem1
mov
mov
bound
sub
ja
jmp
xchg
push
and
loop
incl
test
fwait
stos
es
rcrb
lds
lds
fbld
popf
pop
andb
leave
daa
mov
dec
fucomip
enter
out
scas
scas
adc
sbb
ss
addb
mov
mov
mov
daa
rcr
enter
fdivrs
add
add
lret
cld
and
dec
mov
repnz
rcll
inc
cmc
mov
push
cmpl
adc
aas
ds
ret
cmp
rcr
fistpl
and
out
dec
in
dec
mov
add
fs
popa
clc
mov
in
loopne
pushf
test
fsubs
pop
or
sub
and
lahf
cmp
imul
mov
sbb
inc
xchg
cld
ret
mov
mov
and
sbb
lret
fsubrp
jns
pop
push
scas
and
jge
xchg
cs
xor
pusha
mov
call
dec
divb
cs
xchg
cmp
inc
inc
jb
ror
int3
int
mov
lcall
adc
or
sti
mov
leave
sub
mov
jecxz
sti
orb
cmp
test
jge
test
lods
mov
jno
sbb
fists
xchg
pop
hlt
xchg
pusha
lods
jns
jnp
rorb
cmp
cmp
lret
and
enter
cmp
xor
cmp
dec
xchg
call
inc
push
imul
push
add
jno
add
cs
fmull
jecxz
in
push
insb
push
sub
dec
and
xor
fidivrl
cld
outsl
xchg
pop
pop
lret
mov
outsb
push
pushf
out
fldt
lret
out
and
jecxz
lods
in
scas
movl
nop
pop
mov
push
mov
and
xchg
mov
pop
popf
add
mov
dec
enter
nop
ret
mov
fsubrl
cmp
fisubl
dec
cli
pop
rorb
jae
gs
adc
and
push
and
ss
out
push
faddl
ljmp
add
or
sbb
jnp
sbb
fisubs
enter
pop
int
stos
aad
cltd
mov
out
mov
sbb
shl
push
pop
jb
cs
pop
enter
divl
cld
adcb
ja
pop
es
pop
jg
roll
test
test
repz
mov
je
loopne
dec
ljmp
ss
xchg
or
scas
popa
adc
dec
push
ja
cmpb
fisubs
xchg
mov
sbb
jbe
mov
push
scas
dec
push
push
push
repz
xor
push
inc
lods
fldenv
inc
push
insl
mov
xlat
jmp
mov
or
lcall
int
cld
je
dec
add
pop
mov
sub
les
mov
push
movsb
movb
jns
enter
nop
xor
pusha
lret
les
shlb
jmp
enter
dec
movsl
dec
adc
fs
sahf
ss
jne
mov
test
mov
fwait
popa
es
adc
enter
push
xor
cwtl
mov
xor
rclb
daa
and
lods
push
pop
mov
inc
test
dec
cli
in
out
je
mov
cmp
shrb
jns
invd
out
repz
push
cmc
cmpsl
aad
rorl
inc
aaa
sub
adcl
push
mov
pop
fbstp
test
pop
jecxz
cld
shlb
roll
sbb
repz
cmp
and
add
mov
dec
adc
cltd
inc
lahf
sub
cltd
fstps
sti
dec
pusha
add
mov
pop
adc
and
movsl
repz
push
xor
xchg
stos
pop
jmp
movsl
adc
add
nop
stos
js
cmpsl
cli
push
cmp
mov
mov
ja
sbb
call
outsl
in
insl
repz
in
push
inc
push
xorl
jno
cmp
xchg
dec
xchg
into
inc
mov
inc
add
rcrl
sub
repnz
cmp
es
movl
in
insl
push
push
cltd
jo
cmp
xlat
or
or
loope
out
and
aas
in
int3
or
push
test
push
out
sbb
xchg
inc
inc
mov
jg
scas
pop
adc
or
data16
subl
pop
fsts
cmp
or
mov
ficoml
das
add
decb
jno
sarb
lret
pop
pop
in
gs
pop
ds
out
aad
loope
shlb
xchg
nop
cmpsl
shl
mov
out
add
dec
aad
adc
jmp
sbb
arpl
push
out
loop
pop
inc
pop
enter
mov
jge
fs
flds
inc
aas
fisttps
xor
cmp
nop
movsl
mov
filds
pop
dec
mov
clc
imul
jb
jo
pop
fdivs
int3
ds
in
push
cmp
dec
sbbb
fcompl
push
sbb
dec
inc
and
add
loop
xor
lret
imul
xor
out
adc
movsb
cmp
inc
cli
insl
sub
sahf
lock
inc
je
adc
test
sub
inc
xchg
mov
and
push
push
into
push
inc
xchg
sub
push
push
stc
mov
adc
and
ss
cmp
xchg
xchg
and
push
aas
cmp
imul
aas
cmp
into
push
mov
loope
enter
push
add
and
fcompl
adc
xor
xchg
sbb
xor
cld
mov
test
icebp
stos
iret
lods
sub
les
movsl
inc
xchg
mov
xchg
xchg
mov
clc
loop
lock
pop
pop
xchg
ret
ljmp
or
sti
adc
push
ds
pop
dec
cmpb
jne
xor
add
ja
iret
ljmp
movsl
test
mov
ljmp
ret
pop
aad
sarb
mov
imul
mov
cmpsb
or
imul
subl
negb
push
pop
lds
add
jmp
inc
lahf
fisttps
lock
sub
jb
push
cltd
xchg
insb
ss
mov
cli
add
sbb
and
and
add
out
jg
adc
cmp
and
movsb
or
movsl
ljmp
inc
mov
xchg
pop
icebp
mov
dec
cmovns
aaa
in
xorb
iret
and
rol
and
rcr
jp
sub
orb
xchg
or
xchg
inc
mov
push
insl
fmuls
in
mov
icebp
xor
mov
incb
cmp
adc
dec
or
pop
xchg
xor
cmp
and
mov
lods
add
icebp
dec
mov
sbb
xlat
cmp
xchg
push
out
cmp
ja
stos
cmp
les
xchg
xchg
or
gs
lods
and
aam
shll
push
rorl
pushf
pop
mov
cld
out
lods
adc
ja
xor
lcall
addl
sbb
xchg
mov
xor
add
out
mov
out
mov
in
out
or
push
fisubl
push
sub
mov
xchg
or
frstor
mov
or
inc
inc
into
jo
dec
or
inc
imul
xchg
lods
dec
lcall
lods
popa
repz
push
or
js
out
test
fldcw
rorl
and
push
mov
fnstcw
sub
movsl
das
dec
ljmp
idivb
push
pop
and
das
jae
clc
daa
xor
imul
jg
loop
sbb
push
pushf
ret
mov
in
js
xchg
out
out
pusha
jge
pop
loop
fldcw
push
inc
cmp
testb
inc
test
adc
movsl
xor
add
lods
pop
dec
push
stos
pusha
push
xor
lods
mov
cwtl
ret
sarb
add
pushf
mov
mov
push
xor
scas
popf
in
lret
pusha
lret
inc
sub
inc
icebp
das
push
stc
mov
or
inc
loope
mov
ret
repz
jecxz
adc
test
and
aas
scas
mov
dec
cmp
xor
movsl
ljmp
add
pushl
out
jmp
iret
in
ja
xlat
and
jb
cmp
jmp
mov
or
inc
in
fsubrl
mov
ret
cwtl
shl
outsb
mov
jge
enter
pop
test
push
daa
out
js
loopne
and
inc
cli
or
lcall
jb
push
sti
clc
jo
push
fst
jne
push
jle
mov
cmp
lret
adc
test
dec
sub
jmp
push
cmpsb
and
dec
nop
cmp
dec
mov
aaa
mov
popa
ja
fcomps
dec
jno
xchg
sub
rcll
call
push
imull
stc
xor
sub
dec
pop
fsubp
push
cmc
mov
in
or
jge
cmc
add
into
push
cltd
movb
mov
scas
jb
xchg
mov
enter
fidivrs
add
cld
movaps
daa
movsb
dec
mov
pushf
std
outsb
lahf
dec
into
jg
je
repz
stos
cmp
xor
sti
or
add
adc
loope
icebp
fidivs
jb
ficoml
mov
insl
xor
cwtl
sub
jns
ja
inc
and
jecxz
out
xor
mov
hlt
sbb
cmc
dec
sbb
mov
xor
lret
pop
pop
pop
push
or
mov
push
pushl
outsl
fistpl
outsl
ret
push
mov
jl
inc
mov
sahf
stos
xor
add
jmp
lods
jmp
push
fst
cli
out
inc
in
mov
sub
inc
jno
and
mov
lret
cmc
add
sub
dec
sub
mov
sti
dec
jl
incb
fistl
mov
ret
leave
sbb
outsb
inc
outsb
mov
jno
in
icebp
push
inc
or
dec
call
mov
pop
jno
sub
fs
mov
addl
loopne
cmp
cmp
mov
outsb
cs
adc
int3
xchg
adc
sbb
dec
lds
nop
xor
jecxz
daa
sahf
jle
and
movsl
or
push
xchg
xor
bound
out
sbbb
arpl
inc
cmpsb
xchg
dec
push
sub
pop
ss
cmp
dec
popa
pop
addb
jmp
fcoms
mov
sbb
aad
sub
test
mov
out
repnz
imul
mov
gs
mov
out
leave
aaa
jne
aam
test
daa
jns
push
data16
movl
add
aaa
out
add
xchg
imul
jns
leave
pushf
hlt
imul
movsb
jnp
add
pop
lcall
out
cmp
dec
mov
dec
rol
sub
and
mov
hlt
add
ret
pop
xor
cmp
loop
loopne
loop
rolb
push
xor
xchg
push
ror
xor
repnz
aad
dec
dec
repz
sarb
xlat
and
pop
repz
aad
jmp
pop
dec
jo
shrl
ror
decl
jle
stos
cmc
pop
or
cmp
cmp
sbbl
or
mov
aad
adcb
icebp
das
js
sub
fbstp
or
xor
add
mov
mov
stos
push
int3
jae
sub
push
mov
popa
fmuls
repz
inc
aad
call
popf
mov
or
das
mov
sbb
sub
icebp
sbb
ficompl
or
or
mov
mov
adcl
xor
pop
dec
ret
push
or
push
insl
inc
cmp
cs
test
pushf
addl
lock
xor
sti
shlb
ss
cld
hlt
add
rclb
cmp
fs
ljmp
mov
inc
divl
push
cmp
and
and
mov
test
aad
out
in
arpl
negb
adc
mov
sub
lret
push
push
xchg
aam
movsb
stc
lock
pop
jno
filds
jne
xchg
sbbl
adc
test
inc
fs
jmp
cli
out
or
test
mov
cmp
enter
push
and
xor
repnz
ja
cltd
sbb
stos
cld
pop
ja
fwait
inc
jbe
pusha
vsqrtps
jb
add
mov
shlb
add
mov
fld
adc
sbb
fldl
dec
mov
mov
jge
inc
pop
mov
mov
in
in
add
jb
fstp
in
mov
inc
xor
fiadds
stc
int
xchg
jbe
pop
mov
movsl
xor
adc
push
stos
loop
add
cmp
jb
aam
dec
out
and
add
stc
outsl
push
sbb
or
inc
push
test
ljmp
add
cmc
test
nop
mov
inc
adc
xchg
sub
xor
shl
and
or
rcrl
pop
push
pop
xor
mov
roll
lock
jge
mov
pushf
outsl
xlat
int3
or
pop
mov
data16
pop
push
xorl
lds
mov
adc
cltd
jecxz
cmc
lock
cs
or
xchg
pop
sbbl
movsb
add
cmp
xorl
dec
xchg
jle
in
jae
popf
out
push
cmp
mov
imul
lcall
jmp
xchg
int3
jno
lea
xchg
out
movsb
cld
cmp
sub
aaa
js
shlb
bound
dec
pop
psubsw
inc
mov
scas
mov
mov
sub
scas
sbb
push
insl
cmp
ja
bound
inc
fucomip
icebp
xchg
loope
or
js
adc
les
je
clc
imul
std
push
add
out
add
adc
mov
repnz
lods
in
adc
inc
xchg
cs
ds
mov
vmovntpd
sub
lcall
pop
sbb
lret
jmp
arpl
das
xor
or
loopne
xchg
mov
scas
mov
jbe
test
jge
dec
and
aaa
out
imul
inc
into
addr16
jg
js
inc
loop
sub
mov
out
cs
and
es
movsb
es
fwait
adc
cmpl
fdivrl
test
mov
mov
xor
or
in
cmp
inc
rcll
rorl
in
sarb
mov
add
mov
mov
mov
xchg
xor
imul
mov
std
add
xor
ret
roll
cmc
js
mov
mov
mov
jno
outsl
adc
fdivrl
popf
fists
testl
orb
cmp
ret
ja
scas
testb
xor
push
cmpsb
ja
je
add
cmp
xor
xchg
hlt
loop
add
mov
push
filds
inc
inc
call
lret
cmp
ljmp
in
cmp
pop
add
cmp
xor
movsb
lods
jo
sahf
int3
pop
xor
xchg
inc
out
mov
mov
dec
and
push
addr16
repnz
ja
push
rorl
inc
ss
xchg
jmp
insl
mov
mov
xchg
popl
push
rclb
dec
mov
push
dec
jns
insl
in
andb
mov
cmc
sbb
push
gs
sbb
jno
push
fdivrl
sti
xor
jl
subl
out
das
ds
add
dec
in
mov
lahf
inc
out
mov
push
rcrb
jbe
push
aaa
in
pusha
out
cmp
pushf
mov
fs
shl
lock
adc
es
mov
lret
inc
add
mov
aad
jno
in
mov
xlat
adc
testb
popa
mov
lret
ret
inc
cmp
or
in
rcr
mov
lret
push
mov
add
add
es
xorb
fidivrs
in
push
jle
add
pop
int3
mov
test
lock
inc
mov
mov
stos
out
icebp
xchg
inc
int
jne
inc
leave
mov
js
out
pushf
inc
mov
iret
stos
inc
adc
adc
sub
mov
insb
sub
mov
mov
dec
fstl
mov
and
ljmp
push
push
pop
jmp
push
out
ja
gs
cmp
and
inc
loopne
int3
mov
sbb
fbld
mov
test
lods
fstl
xor
mov
sbb
mov
jae
pop
aaa
pop
or
lock
cmp
repnz
stc
jecxz
hlt
mov
sub
mov
push
mov
xor
xchg
add
cmpsl
pushf
pop
call
insb
imul
insb
adc
pop
xor
fbld
pop
in
fucomi
pop
cmp
imul
and
sub
loope
pop
xor
xchg
push
vpshufhw
int3
sub
mov
repz
bnd
xchg
out
adc
lds
idivb
andl
fsubs
mov
test
daa
cmp
adc
jne
movsb
xchg
iret
sbb
arpl
mov
es
add
scas
jmp
test
add
push
pop
xchg
adc
mov
aad
sti
ljmp
in
daa
data16
jge
fidivl
and
enter
fldl
popa
loop
push
pusha
shlb
xchg
jle
sub
push
and
outsb
cwtl
lret
and
xchg
ja
xorl
pop
cmpb
mov
sti
or
pop
int3
jmp
add
dec
orb
loopne
jge
push
jmp
lret
fsin
adc
push
jg
js
inc
fildl
or
xorl
jg
cmp
push
xor
pushf
xchg
push
fimuls
jo,pt
mov
hlt
dec
dec
mov
aaa
ffree
dec
xchg
jp
inc
shll
pop
loop
scas
xorl
adc
andb
insb
push
push
loop
out
jae
add
xor
sbb
je
or
lods
add
jo
out
lds
shl
cmc
inc
cmp
dec
dec
addr16
xchg
cli
dec
in
out
add
inc
in
mov
dec
adc
add
mov
stos
dec
or
push
sub
xchg
jbe
or
push
ss
sbb
or
mov
hlt
mov
adc
inc
pop
clc
sbb
sbb
sahf
negl
mov
push
xorl
fs
pushf
das
es
shlb
idiv
and
inc
mov
fstpl
fistpll
fs
mov
lods
gs
push
xchg
lahf
inc
out
cli
lds
inc
xchg
fsts
cmc
sub
setp
sub
repz
add
cmp
gs
hlt
xor
and
loopne
lret
jns
movsl
in
or
jo
xchg
cs
pop
mov
je
push
ds
jge
movsl
sti
sub
jp
scas
mov
dec
lock
mov
or
scas
imul
fnstsw
rol
and
cs
sbb
inc
loop
test
ret
call
xlat
sti
add
rolb
fidivrs
stc
jo
test
push
xchg
jne
out
cs
jp
rolb
cmc
lcall
jnp
imul
sbb
dec
pop
mov
scas
push
sahf
push
pushf
sub
addr16
mov
insb
sub
cltd
push
adc
test
inc
push
lock
and
into
sbb
mov
mov
adc
cmp
addl
sbb
cmp
gs
in
pop
ret
into
movsl
roll
pop
out
inc
push
mov
dec
mov
add
push
sbb
sub
xor
xchg
xchg
cs
push
xchg
jnp
xchg
test
inc
mov
addr16
or
repz
jno
mov
aaa
dec
jno
mov
mov
inc
test
test
test
ja
or
xchg
in
mov
adc
mov
jmp
jecxz
jno
xor
jp
test
mov
out
mov
mov
stc
outsl
lds
shll
cli
jns
outsl
sbb
stos
push
out
mov
sub
mov
fcomip
jl
and
cmp
pop
lods
lock
cmpsl
jno
push
jmp
xor
mov
mov
repnz
jl
rorb
int
movsl
sub
jns
inc
aaa
xor
outsl
setnp
das
or
ret
dec
inc
push
jbe
aam
xchg
xchg
hlt
push
xchg
sbb
int3
ret
cmp
jmp
or
inc
rol
aam
stos
push
push
stos
fisttps
or
je
jmp
mov
loop
or
rcrl
ljmp
xchg
in
mov
inc
call
sbb
std
mov
sbb
sub
adc
loop
adc
adc
int3
and
inc
shl
inc
xrelease
dec
lcall
mov
add
push
jmp
insl
sqrtps
or
in
jne
add
jmp
sub
std
jle
les
lock
push
outsl
mov
movsb
jns
inc
inc
out
lds
lds
inc
ffreep
adc
mov
mov
adc
in
inc
leave
out
sub
inc
frstor
jmp
cmp
int
in
jmp
cs
add
repz
loope
cmp
push
test
xor
inc
dec
mov
sbb
jb
arpl
rcrb
cmpsb
or
std
xchg
sub
out
loope
or
hlt
jne
nop
push
ss
lahf
sbb
lret
push
dec
adc
jae
xchg
cmpb
sbb
jl
hlt
xlat
dec
inc
add
cltd
into
popf
xchg
xchg
mulb
lret
or
fstps
inc
imul
and
xlat
push
xchg
fdivrs
scas
sub
insb
ljmp
xchg
ds
xor
or
cmp
in
pop
jmp
mov
mov
ljmp
scas
stc
xchg
jp
or
in
int
jmp
mov
cwtl
or
cli
mov
jg
std
es
iret
push
out
rcr
or
aad
pop
jnp
push
inc
pop
ja
or
stc
js
push
lock
xchg
jmp
movsl
jbe
cmp
dec
mov
in
es
ret
sbb
sbb
stc
fbld
sub
and
mov
or
popf
imul
js
ret
loop
cld
fdivl
arpl
sbb
jae
cmp
cmp
js
push
push
scas
lods
je
mov
pop
xor
aad
adc
push
xchg
mov
popf
sbb
icebp
mov
and
incb
xchg
push
push
scas
int3
jge
cli
mov
and
mov
dec
jns
movsl
jnp
mov
xor
dec
jmp
xlat
pusha
movl
xchg
and
adc
xor
and
push
data16
or
pop
int
enter
xor
add
cmp
and
jne
xor
dec
mov
or
outsw
loop
xor
js
fs
add
scas
push
jmp
mov
lods
push
cli
inc
movsl
sub
add
das
pop
nop
inc
roll
or
lods
loop
pop
xor
inc
sub
clc
mov
lret
jge
shrb
es
je
loopne
mov
jae
xchg
iret
int3
inc
out
iret
cltd
scas
mov
xchg
cmp
ss
ds
cmpsl
addl
and
mov
xchg
repnz
int3
mov
mov
or
sub
sub
jmp
ja
or
adc
jle
mov
out
xchg
adc
jne
ss
jp
ret
sbb
ret
sbb
les
es
mul
rolb
mul
mov
mov
add
pop
adc
call
icebp
lahf
ljmp
pop
or
sub
pop
aaa
cmpsl
sbb
nop
xor
sbb
sub
iret
call
mov
out
mov
push
xchg
mov
fsubrl
adc
mov
out
lds
cwtl
pop
scas
mov
cli
aam
pop
mov
aad
mov
mov
leave
ret
addb
dec
sbb
push
cmpl
xchg
leave
mov
xchg
outsl
mov
shrb
jg
je
js
scas
inc
arpl
pop
inc
push
jmp
pop
lcall
fs
jns
adc
sbb
out
push
imul
test
add
mov
stc
mov
mov
push
jle
xor
inc
adc
test
fst
sbb
push
aas
pavgw
push
pop
repz
cwtl
dec
imul
pop
jno
loop
add
add
fwait
pop
mov
cmc
pop
sub
add
shlb
pop
call
inc
fidivs
mov
emms
mov
jmp
or
incb
mov
fistpll
mov
sahf
or
pop
add
add
jne
dec
xor
xor
sbb
dec
daa
mov
lods
outsb
inc
sbb
shll
cmpsb
rcll
jno
or
adc
vpaddusb
cmp
mov
inc
dec
jbe
jns
push
int3
dec
popf
jb
cmpsb
push
inc
loopne
adc
sub
subl
cltd
rcrl
out
bound
xchg
ljmp
lds
mov
add
push
jmp
push
add
popf
mov
lea
and
push
sub
push
or
repnz
xor
fdivrp
lods
shl
push
inc
js
adc
das
out
in
fwait
jp
out
adc
fsts
push
lds
pusha
xor
in
mov
xor
ficoml
fistps
in
std
jmp
out
lahf
pop
stc
add
loopne
popa
or
sub
jb
sub
push
dec
popw
fdivl
cwtl
aas
lcall
jl
pushf
jno
pop
hlt
bound
push
iret
hlt
pop
cmpsl
cwtl
adc
cmp
filds
mov
enter
mov
mov
dec
ds
jmp
push
jp
dec
leave
push
stos
idiv
lret
add
les
cwtl
push
popf
dec
jbe
mov
xchg
out
sub
roll
cmp
pop
mov
dec
out
cmpsb
or
inc
mov
mov
gs
ret
xor
movsb
sub
addl
and
mov
jno
addr16
xor
movsb
jbe
inc
dec
pop
sub
aam
mov
adc
fsubrl
push
mov
aad
xlat
cmovae
sarb
push
lds
clc
mov
pop
xor
in
jne
insb
cli
leave
out
roll
jp
pop
mov
mov
aaa
clc
cmpsl
clc
xchg
push
adcl
cld
in
scas
movsl
pusha
pop
pushf
fcomp
mov
jge
jne
mov
pop
mov
dec
int
insl
mov
sbb
jae
jmp
pop
je
mov
adc
push
pusha
stc
loop
movsl
ficoms
lds
dec
dec
mov
add
clc
stos
cmp
pushf
cs
pop
xor
mov
cmpsl
cwtl
xchg
cmp
int3
rcr
sar
or
lods
arpl
loopne
pop
fnstsw
je
ljmp
out
jb
push
popa
movsl
xor
add
addb
filds
sub
inc
mov
dec
sub
mov
mov
imul
xor
dec
dec
ret
sub
mov
std
dec
testl
adc
pop
mov
sbb
mov
mov
enter
insb
test
inc
mov
rcrb
push
pop
pop
sbb
xor
inc
aam
and
jbe
shll
mov
ffree
xor
xchg
fidivrl
mov
xor
jb
inc
mov
cld
jmp
ljmp
faddl
iret
push
mov
cmpsb
test
daa
jns
push
mov
xchg
lods
sbb
push
sar
scas
aam
jns
int3
les
push
cmpsb
cmp
mov
mov
aad
mov
addr16
sahf
mov
xchg
xchg
sub
push
notb
pop
les
ljmp
outsb
pop
xor
scas
icebp
inc
popf
xor
sahf
sbb
sub
sbbb
lock
jbe
lret
xchg
cmpsl
sbb
ret
add
jge
adc
repz
divl
pushf
fwait
sub
ss
xrelease
lcall
mov
jle
xchg
mov
ds
pop
int3
mov
and
ret
fdivl
and
pop
xchg
and
inc
or
or
pushf
movsb
scas
or
test
mov
lret
adc
lock
fcoms
out
push
lock
pop
rcr
insb
push
lea
lret
xchg
xor
mov
mov
push
adc
sub
fnstsw
in
sbb
add
pop
sbbl
test
adcb
pop
pop
cs
and
jns
add
mov
push
fisubrs
stos
xchg
cmp
dec
add
fdivs
out
fldcw
fldl
xchg
out
push
sub
add
sbb
push
jnp
mov
mov
fstl
scas
imul
ljmp
jae
inc
pop
and
cwtl
or
mov
mov
sub
pop
jl
jno
in
daa
in
inc
fwait
push
out
lret
clc
push
std
bts
mov
std
mov
int
lret
lahf
insl
ffreep
dec
sar
rcl
push
dec
sti
mov
test
ret
shlb
adc
pop
push
adc
or
test
adc
dec
loope
sbb
leave
pop
jne
add
out
mov
inc
adc
add
test
shrl
push
mov
in
mov
pop
js
jge
in
hlt
dec
jb
inc
add
sarb
js
cmp
sub
adc
out
mov
imul
xorl
pop
sbb
add
int3
je
imul
lods
xchg
jns
in
mov
stos
in
shlb
outsb
loope
xor
insb
jb
retw
mov
jmp
jg
push
insl
jno
sub
lods
inc
inc
in
cmp
imul
repz
pop
adc
xor
and
repnz
gs
aas
ss
and
jp
imul
inc
sbb
and
lds
mov
fs
sbb
ret
scas
sbb
inc
add
insl
sbb
add
pop
scas
jns
xchg
subl
adc
inc
and
addb
shl
add
adc
sub
or
cltd
rcr
aad
cmpsl
pop
insl
lahf
sbb
adc
mov
cmc
fstl
lods
imul
stc
mov
rorl
inc
pop
jb
mov
cmp
fnclex
fdiv
dec
sub
repz
push
fstps
pop
push
pop
and
imul
imul
cltd
cmp
lods
jle
hlt
scas
lret
inc
mov
cmp
in
jne
pop
jl
inc
mov
jl
mov
leave
stos
outsb
xchg
sbb
loopne
xor
lret
push
fbstp
adc
lahf
imul
mov
sbb
cmp
and
scas
inc
adc
add
or
sarb
pop
mov
or
in
cmp
pop
cmp
jle
cmpsl
std
enter
inc
add
xchg
mov
mov
lods
push
addr16
sub
test
imul
or
jecxz
roll
cmc
fiadds
dec
in
pop
mov
push
jne
cmp
push
popf
push
mov
dec
pop
shl
jb
mov
lods
inc
sbb
jbe
in
mov
pop
int
rcll
push
arpl
movsl
adc
jge
out
jecxz
ljmp
dec
cmp
jo
aaa
cmpsl
fsub
stos
test
out
rcll
loop
mov
loop
push
add
je
cmp
pop
cli
xchg
aad
stos
mov
test
fsubl
pop
ja
je
jne
pop
fiaddl
mov
mov
lods
push
out
cli
aad
int
sar
jp
arpl
and
inc
mov
pushf
inc
pop
lea
push
lock
mov
mov
fcoms
xorb
xor
gs
shll
lahf
or
inc
pop
shr
out
loop
and
pop
pop
sbb
push
add
pop
stc
xor
xchg
inc
into
insb
call
aad
jl
outsl
adc
lock
cld
aas
xchg
in
frstor
insl
lock
push
ljmp
sahf
addb
popl
hlt
loope
sahf
sbb
or
push
in
test
xchg
or
dec
subl
adc
out
xor
pushf
push
push
shrl
es
inc
xchg
mov
shll
pop
fs
mov
cmpsl
in
sbb
pop
cltd
mov
xchg
pop
and
jo
inc
sarb
js
mov
sbb
outsb
and
inc
jg
outsb
push
addl
xchg
and
ds
js
xchg
adc
xchg
mov
mov
shll
add
cmp
add
mov
inc
mov
add
mov
or
dec
pop
cmpsb
mov
push
xchg
daa
ret
insb
add
jp
jmp
int
pop
inc
nop
xchg
xchg
and
mov
xor
and
outsl
mov
cmc
inc
jge,pt
call
scas
nop
lcall
sub
ds
pushf
clc
cld
addr16
insb
lcall
dec
cmp
subl
clc
pop
inc
addr16
push
orl
scas
dec
or
inc
pop
and
adcl
mov
std
and
negl
add
lds
loopne
fistpll
mov
fcmovu
push
add
idivl
lds
fstl
push
mov
js
or
adc
stos
sti
sub
sub
aam
add
andb
das
add
scas
js
xlat
cmp
dec
sbb
push
add
fsubs
fs
xchg
xchg
in
push
push
stos
ss
jg
adc
jl
xor
ss
scas
call
insl
stc
pop
cmp
cld
and
repz
push
add
shrb
in
dec
movsl
mov
cli
lods
pop
xor
jg
out
push
cld
out
fbld
or
xchg
mov
sbbb
test
fildll
push
sbb
imul
roll
scas
ret
jnp
xor
aaa
scas
sarb
add
sub
add
push
sub
mov
nop
mov
pusha
mov
sub
fsubl
pop
xor
jl
adc
adc
movb
aad
mov
pop
test
sbb
mov
sub
add
add
out
mov
push
nop
add
shrl
fmul
shrb
lret
lcall
push
int
pop
fidivs
xchg
dec
jnp
add
sub
fldt
fcomps
xchg
or
pop
mov
xchg
je
in
into
sahf
addr16
lea
push
and
pop
dec
sbbb
lret
aad
jmp
xor
insl
mov
cli
repz
pushf
adc
xchg
push
dec
xchg
mov
mov
stos
popa
xlat
je
add
in
imulb
aaa
xchg
iret
pop
push
int
out
and
jae
mov
fprem
outsl
pop
into
jbe
push
pop
in
hlt
in
imul
pop
idivl
mov
push
das
fdivrl
adc
std
shlb
push
sbb
pop
lock
adc
mov
dec
aaa
mov
sub
xor
inc
inc
inc
mov
and
push
sub
sbb
xorb
mov
dec
mov
inc
out
shrb
rol
add
or
or
sbb
les
mov
or
or
jl
pop
fstpt
inc
cmp
in
das
xchg
int3
and
lock
test
imul
addr16
aad
ret
add
aam
sbb
leave
ja
lea
cmp
push
bound
mov
sbb
push
inc
fildll
or
mov
fidivrl
push
int
or
imul
push
adc
mov
xchg
negb
push
iret
sarb
out
jecxz
in
fwait
jbe
sarl
mov
cmpsl
outsl
or
pop
lahf
repz
jecxz
scas
dec
popa
add
cmpsb
jmp
orl
outsb
push
mov
lahf
pop
mov
incl
or
imul
mov
out
inc
lahf
adc
mov
xor
popa
cli
sbb
dec
jg
dec
push
push
cltd
mov
and
or
push
lods
addl
push
aad
dec
int3
clc
call
cmp
bound
sbb
int3
add
adc
sbb
test
add
or
or
pop
xchg
dec
hlt
hlt
jb
ret
push
sbb
hlt
fcompl
dec
imul
xor
cmp
push
shlb
loop
dec
gs
lods
push
inc
xchg
mov
mov
push
pushf
out
cmpsl
addr16
cmp
aam
sahf
cmp
out
aad
popf
dec
pop
inc
jg
mov
cli
push
xor
loop
hlt
ret
ss
ret
lods
pop
lret
vmovapd
mov
xor
mov
sti
fmuls
mov
roll
cli
mov
cmp
cmpsb
sbb
sub
and
adc
inc
jl
addb
loope
ret
push
push
or
push
scas
aas
in
ret
hlt
jle
dec
lret
fwait
leave
inc
inc
je
nop
and
cmp
imul
jmp
mov
loop
sbb
stos
or
repz
dec
sbb
jp
lods
fbld
cmp
or
outsl
jns
outsl
mov
enter
push
mov
int3
rorl
insb
push
or
or
movups
push
cmpsl
mov
xor
adc
xchg
iret
cwtl
push
bound
inc
push
mov
pop
inc
lret
pushf
sbb
mov
test
arpl
xlat
jno
out
mov
add
xor
push
iret
idivl
mov
cmpsl
mov
or
push
lds
and
not
pushf
mov
jmp
xorl
adc
add
scas
clc
jmp
pop
insl
popf
and
leave
mov
outsb
or
inc
pop
lea
aam
adc
adc
dec
jl
mov
sbb
fwait
xor
cwtl
popa
inc
arpl
mov
adc
push
mov
sub
jmp
es
int
and
mov
in
xchg
sbb
in
or
ror
lcall
add
push
ss
add
cmp
push
mov
out
sbb
adc
mov
cmp
sbb
in
lahf
xchg
lahf
roll
js
or
and
cld
xchg
out
inc
int3
loopne
sub
ficoms
mov
mov
cld
xchg
out
std
adc
xor
inc
movsb
scas
inc
dec
adc
dec
gs
mov
test
stos
adc
movsb
pop
lds
sbbl
inc
js
push
roll
orl
andl
cmc
or
ss
mov
xchg
std
mov
stos
movsl
mov
add
neg
std
adc
push
jp
bound
lds
cmp
jae
sbb
adc
and
inc
sahf
dec
test
dec
adc
cli
xor
insb
cs
out
and
sti
cltd
shll
bound
ja
sbb
stc
inc
pop
xchg
fldpi
mov
jbe
lock
sbb
movsb
adc
xchg
fsub
addr16
xchg
jge
ret
mov
inc
aas
cmp
jae
enter
daa
outsb
mov
or
mov
andl
push
mov
mov
add
jge
push
gs
mulb
push
mov
add
in
xor
fisttpll
ljmp
mov
ds
cmpsb
les
dec
push
loop
and
test
dec
jne
in
jge
or
sbb
jb
leave
or
jge
out
push
jae
mov
push
repnz
mov
ljmp
adc
sti
dec
sub
aad
inc
lods
sahf
outsb
out
sbb
add
sbb
add
xorl
cld
shrb
inc
pop
aad
and
mov
and
cmp
fidivrs
das
lahf
cwtl
shll
nop
pop
xor
cli
into
ficomps
jecxz
int
fs
shll
inc
repnz
rorb
clc
lods
in
mov
aam
push
xchg
iret
cmp
fldt
es
addr16
insl
stos
movsl
pop
push
sbb
dec
inc
test
sti
popf
add
and
push
mov
cmp
pop
dec
mov
insb
inc
push
xchg
add
add
jge
push
or
push
or
in
data16
cmp
xchg
jnp
incl
pop
mov
push
clc
sahf
xor
sarb
sbb
ret
insb
dec
xorl
cmp
test
sbb
cmp
xchg
pmaxsw
in
mov
add
fildl
and
jbe
add
jmp
cmp
stc
pop
adc
lahf
aaa
xchg
iret
out
mov
push
lcall
testb
or
push
mov
inc
pop
pop
mov
ret
scas
xlat
lods
enter
in
mov
inc
dec
shlb
iret
lea
incl
xor
lods
sbb
or
push
cmp
fs
stc
jnp
cmp
inc
pop
fcompl
push
sarb
mov
idivb
pop
jb
or
data16
xor
rorl
push
push
es
xlat
sti
icebp
sbb
pop
jl
shl
shrl
inc
inc
inc
ror
sub
aas
adc
xor
stos
out
sahf
xchg
mov
in
dec
enter
mov
into
mov
and
mov
xchg
bound
cs
adcl
or
push
sbb
lret
xchg
sbb
sub
jmp
pop
lods
lods
icebp
xchg
rcrb
inc
dec
pop
ret
popa
sub
add
cmpsl
push
shrb
in
mov
sti
fcos
xor
xchg
pushf
ljmp
inc
mov
imul
in
inc
pop
rcl
and
data16
movl
sub
outsb
cmp
imul
adc
dec
fisubs
jo
loope
inc
xchg
sub
xchg
pop
dec
hlt
cmp
or
add
pop
inc
mov
xchg
xchg
lea
cmp
sub
aad
and
mov
sbb
adc
push
lea
and
mov
add
pop
sti
test
inc
movsb
rcrl
aad
jnp
out
sahf
dec
addr16
xchg
and
and
dec
pop
lcall
scas
insb
add
xchg
lock
sbb
lret
stos
and
mov
ljmp
adc
push
das
inc
cmpsl
xchg
xor
cmp
cmp
rclb
mov
sarb
addr16
sbb
jg
repnz
mov
insb
lcall
std
mov
and
push
cwtl
cli
push
push
xchg
or
pop
sbb
ds
ljmp
lahf
lret
inc
std
jp
je
pop
and
push
add
out
stos
xchg
mov
stos
dec
inc
mov
iret
lea
ss
jmp
mov
jecxz
in
jg
clts
inc
cmp
iret
sub
outsb
cmpsl
add
int
ret
cmp
pop
mov
mov
pop
jp
mov
out
or
lea
ret
dec
ds
xlat
pushf
xchg
lret
and
and
inc
push
pusha
decl
mov
inc
inc
mov
out
adc
popa
outsb
jl
mov
jae
fstpl
iret
sub
mov
adc
shrl
xchg
xchg
popa
aas
lret
cmpsl
ret
in
jo
pushf
shrb
mov
bound
les
push
inc
ret
jle
jp
cmp
cwtl
enter
pushf
dec
hlt
ficoml
cmpsb
sub
pop
outsb
fs
lahf
push
sbbl
mov
pop
push
jb
or
adcl
ss
testl
test
bound
xchg
out
mull
mov
or
ficompl
pop
or
mov
mov
dec
insl
loop
push
das
xchg
js
repnz
ds
jg
mov
sti
lcall
in
pop
inc
push
sbb
lret
cmc
mov
addr16
shlb
inc
lods
mov
out
push
movsl
rol
sub
mov
xchg
ret
divb
jg
jp
cmp
pop
rcrl
dec
and
push
pop
sub
mov
orb
cmp
cwtl
into
jge
cmpsl
lock
push
insl
gs
adc
arpl
add
xchg
jp
dec
mov
mov
arpl
out
dec
cmp
pop
inc
das
in
rclb
movsl
gs
filds
imul
stos
xchg
in
rcrb
insl
scas
testb
fadds
iret
stos
and
fwait
dec
loope
cwtl
lds
popa
icebp
xor
dec
ficoml
xlat
lods
sub
test
and
test
mov
ljmp
out
andb
cmp
mov
das
dec
pop
dec
or
mov
aas
cmp
xor
pop
in
out
xor
les
mov
dec
shlb
and
int3
cltd
test
shr
push
sbb
xor
adc
ret
int3
pop
jbe
pop
loope
das
sbb
int3
pop
into
jne
nop
or
andb
ficompl
cmp
leave
xchg
adc
xor
or
mov
ljmp
loopne
pop
sub
test
cld
mov
mov
dec
pop
lods
sbb
outsl
cld
cmp
nop
int3
xchg
sbb
sti
xlat
pop
push
fidivrs
mov
outsl
push
inc
out
or
fcomps
pop
out
into
cmp
or
scas
or
enter
pop
xlat
sub
push
in
jns
test
sub
push
or
scas
push
lcall
push
ds
out
fstl
cmp
adc
rcrb
mov
jmp
pop
inc
repnz
js
sbb
insl
dec
mov
xor
add
inc
out
xchg
add
cmp
lds
sbb
and
into
jg
popf
loope
and
cwtl
shrb
push
test
fdivrl
enter
in
or
pop
bound
cmp
adcb
hlt
scas
mov
jg
cmc
aaa
xchg
and
add
cmp
pushf
fnstsw
xchg
test
std
jo
and
das
mov
lcall
arpl
mov
cmp
dec
push
add
xchg
insl
push
sub
mov
cli
mov
dec
mov
mov
rcrb
xor
pop
outsb
cmp
and
testb
rcll
sbb
popf
jbe
pop
addr16
xchg
mov
sti
outsb
into
add
imul
aaa
lcall
dec
cmpsl
xor
roll
inc
mov
jnp
daa
dec
in
sti
sub
and
xchg
pop
aam
mov
aam
clc
add
scas
jo
and
divb
jno
inc
inc
loope
in
lods
mov
and
inc
inc
in
cmp
nop
xchg
add
movsb
icebp
div
mov
mov
mov
addr16
repz
jb
subb
mov
xor
fstpt
jne
cmp
sub
arpl
push
add
call
jno,pt
testb
sub
insb
bound
das
ds
push
shll
cmc
loop
inc
mov
sbbb
mov
fcmovne
es
sub
ja
adc
out
fs
xchg
push
push
test
adc
jp
jne
aad
lcall
mov
jecxz
dec
in
loop
pop
sub
push
push
mov
pop
mov
hlt
push
cld
add
mov
mov
pop
sbb
push
cltd
mov
lret
cs
shlb
adcb
xchg
and
mov
cwtl
mov
cmc
mov
mov
xchg
mov
imulb
cmp
movsb
decl
mov
or
mov
cltd
clc
mov
test
dec
add
les
or
aaa
lret
loopne
cs
mov
je
dec
dec
loop
add
cs
lea
out
ss
lret
jae
sbb
loope
orl
lods
out
mov
dec
sahf
inc
adc
lea
push
inc
xchg
jnp
inc
adc
mov
mov
daa
inc
repz
fisubrs
dec
and
in
jecxz
add
test
and
popf
outsb
arpl
popf
adc
aaa
lods
lods
add
pop
jmp
comiss
shrb
jno
and
insl
and
adc
loope
iret
test
lds
push
xchg
or
cli
xchg
and
xor
sbb
aam
jg
jmp
sti
and
into
dec
xchg
push
out
jl
mov
cmp
or
addl
xchg
mov
shll
test
push
or
into
xor
cmp
xor
and
or
add
lret
lcall
cmpsb
mov
pop
dec
sahf
rcl
in
out
push
loop
add
lret
jle
mov
push
add
xchg
pop
or
adc
mov
cmpl
flds
push
dec
sub
nop
rclb
xchg
push
xor
ret
pop
add
push
push
icebp
fsubs
jmp
movl
in
in
jbe
jae
mov
mov
lds
sub
loop
and
cmpsb
jge
xchg
lods
mov
pop
xchg
ficoml
sbb
and
loop
sbbl
fstl
fstpt
insl
stc
mov
xchg
out
popf
sbb
out
das
rorb
lret
adc
dec
mov
es
repnz
arpl
push
jbe
mov
xor
popf
insl
ljmp
ret
push
jge
fcmovu
xchg
lea
popf
into
faddl
sahf
mov
test
mov
scas
dec
pop
out
fsubr
pop
push
cmp
repz
daa
sub
jmp
jae
mov
mov
movl
mov
pushf
add
sarl
clc
insb
push
icebp
iret
cmp
sbb
repz
sbb
cmc
jns
jl
jns
ljmp
jb
mov
loop
mov
dec
inc
test
sarb
push
xchg
popf
rorl
xchg
cmp
fcom
dec
dec
jg
mov
dec
lea
cmpsl
xchg
jns
dec
jbe
pop
mov
in
je
in
xchg
flds
sub
add
shlb
mov
add
int
adc
mov
push
sbb
int
pop
xchg
mov
leave
push
dec
inc
push
daa
rclb
sbb
js
testb
mov
inc
lret
jecxz
xor
pushf
push
fdivr
cwtl
sbb
mov
test
mov
shlb
test
xchg
sarb
sbb
lcall
and
outsb
ljmp
std
scas
movsb
loop
cmp
jl
dec
dec
sbb
out
scas
sbb
add
lret
lds
movsb
pop
dec
fnstenv
mov
rcrl
push
cmc
shlb
xchg
lds
xorl
popf
add
in
das
std
add
popf
pop
leave
or
movsl
pop
je
mov
mov
in
lret
mov
repz
insl
jns
pop
jmp
pop
iret
leave
clc
sub
mov
pop
xchg
mov
sbb
sub
push
out
cli
out
arpl
dec
push
mov
jle
jno
adc
aam
ffreep
fwait
loop
inc
jne
in
rcrl
push
mov
je
fadds
int3
push
sbb
push
out
dec
pop
scas
leave
test
jae
xor
pmulhw
or
mov
fs
cmp
ficoms
mov
es
mov
mov
or
nop
xchg
xchg
pop
sbb
stos
adc
mov
cltd
stos
std
mov
jbe
mov
mov
xchg
jno
adc
leave
pop
push
fwait
fwait
adc
lret
mov
shl
imul
xor
repz
fidivrs
xchg
repz
inc
jmp
ja
xchg
aaa
mov
jnp
lret
enter
and
dec
mov
xchg
dec
cwtl
xor
push
xlat
mov
sub
pop
cmc
ss
xor
jle
inc
ljmp
mov
cmp
in
bound
jl
push
nop
push
and
test
das
or
push
mov
cmp
aam
ljmp
addr16
mov
jmp
cld
mov
fldln2
test
sbb
mov
xor
inc
jmp
jns
pop
dec
daa
xchg
cli
ljmp
stc
pop
gs
dec
inc
dec
dec
dec
mov
pop
and
xchg
add
adc
and
orl
sarb
idivb
aad
mov
pmaddwd
ror
cmp
nop
or
adcb
cmc
cs
cltd
fisubrs
repnz
rcrl
shll
push
push
inc
arpl
add
mov
push
and
xchg
mov
jns
push
jb
lretw
xlat
nop
es
jb
xchg
mov
enter
dec
loopne
repnz
test
insl
aam
jo
loop
push
push
leave
or
fistpl
sub
popf
mov
mov
outsl
mov
cltd
aam
add
cli
cs
add
les
xor
xor
fcmovnu
fs
pop
add
outsl
dec
jge
dec
int
sub
repnz
cmp
sti
mov
xor
imul
movb
loope
movsb
sti
imul
mov
adc
mov
mov
mov
xchg
sarl
push
dec
adc
loope
mov
sbb
xor
in
inc
xchg
xchg
into
and
mov
je
push
test
pusha
inc
dec
and
call
push
ss
into
pop
lods
cmpsb
fcmovbe
pop
ret
mov
add
inc
xchg
push
xor
cltd
or
in
fsub
iret
mov
jl
xchg
clc
lahf
lcall
test
mov
mov
sbb
push
lds
or
sub
in
imul
dec
in
ja
mov
inc
adc
and
mov
xor
mov
cmp
cmp
jp
xor
lods
add
cmpsb
xor
sbb
mov
fisttpl
xor
push
and
jmp
lret
inc
xor
fwait
es
add
cmpsl
mov
jge
mov
xor
pop
es
add
mov
les
push
mov
cmpsb
xchg
pop
pop
repnz
push
mov
jge
stos
mov
lds
mov
mov
orb
lret
sbbl
dec
mov
addr16
outsb
and
popf
in
nop
in
rol
jmp
and
push
shl
icebp
les
push
mov
std
jle
lods
mov
es
imul
mov
push
adcb
mov
gs
mov
in
lahf
and
pop
out
pop
mov
jl
lahf
dec
jecxz
xchg
nop
jge
adc
daa
shlb
pop
rorl
clc
outsb
dec
gs
sub
xchg
dec
aad
xchg
jle
ja
das
leave
cmp
sahf
mov
es
push
and
push
xor
pop
pop
sbb
fadds
push
pop
push
push
fildll
or
pop
pop
in
in
push
scas
cmp
sub
sbb
fs
sbb
and
inc
imul
outsl
xchg
pop
jle
or
xchg
and
mov
dec
or
ljmp
fcoms
fcoms
mov
jmp
dec
popa
popf
or
inc
inc
lahf
mov
inc
dec
or
jg
addl
popa
push
shl
jne
dec
xchg
push
sub
cmpsl
out
dec
dec
icebp
jle
xchg
pop
das
cmpb
fimull
inc
sub
mov
gs
or
adc
lods
fcomi
or
adc
into
cmp
adc
jp
adc
lcall
fadd
ror
adc
mov
and
push
in
or
jns
jg
fnstenv
je
pop
dec
and
fisubs
loope
aam
cmpsb
add
into
jbe
mov
inc
rolb
cmp
dec
push
pushf
movsb
out
popl
aam
addb
sub
mov
test
scas
dec
xor
imul
ja
dec
cmp
jbe
test
imul
in
insb
popa
mov
jg
in
xchg
mov
and
stos
in
push
popf
rorb
push
nop
xchg
insb
imul
adc
add
test
pushl
cmp
push
fnop
dec
iret
inc
push
cs
sarb
cli
adc
push
adc
pop
popf
jecxz
ljmpw
dec
jp
mov
fisttpl
pusha
sbb
mov
sbb
std
in
sbb
add
ret
push
jmp
stc
popa
ljmp
cmc
das
repnz
and
pop
push
aad
fst
push
sub
cmp
mov
jg
sbb
add
sahf
in
mov
pop
fldenv
xchg
mov
pop
fisttpll
movsl
mov
push
ljmp
pop
loopne
xor
sub
stos
pop
hlt
sbb
pop
ja
aad
enter
xchg
pop
mov
cwtl
sub
pushf
in
out
rcrb
cmc
cmovl
es
fcmovne
jle
mov
data16
aaa
les
mov
push
cmpsl
rolb
in
inc
sbb
orb
fdivrl
xchg
scas
test
fmull
mov
push
xor
mov
xor
jns
sub
lods
dec
iret
inc
mov
pop
stc
lret
std
mov
dec
outsb
mov
xchg
in
in
inc
mov
dec
fdivrs
sarb
or
and
push
in
insb
mov
ljmp
jb
inc
and
push
cli
ret
ds
dec
push
in
adc
int3
lret
addr16
xchg
mov
push
in
ds
stos
das
pop
les
rorl
mov
jb
mov
inc
into
xchg
lahf
clc
mov
pop
mov
fwait
inc
in
jmp
xchg
mov
mov
xchg
jne
xor
xchg
inc
popa
fldt
hlt
ss
dec
je
outsl
cmpsl
dec
jns
jnp
dec
test
aam
push
dec
in
jb
iret
hlt
push
shll
movsb
outsb
or
push
insl
mov
xor
fistps
cmp
push
xor
add
add
sub
add
cmp
jle
outsb
cli
fcomps
and
cmpsl
cli
sbb
mov
aad
in
add
mov
fcom
fsincos
int
mov
notl
enter
shll
in
or
jns
imul
push
xchg
mulb
cs
add
into
fcoml
cld
repnz
or
mov
push
xor
xor
xor
pusha
jb
or
cmp
adc
popa
mov
mov
mov
or
cli
mov
pop
jp,pt
repnz
repnz
xor
js
xor
cmpsb
int
sbbl
cmp
adc
lret
add
inc
clc
mov
and
mov
mov
cmc
lret
out
std
shll
xor
int3
bswap
pop
jne
pop
mov
call
stc
fdivrs
cmp
call
in
or
dec
jae
repnz
fidivl
sbb
enter
mov
mov
stc
insb
xor
mov
arpl
xchg
addb
into
movsl
or
int3
mov
enter
mov
xor
ja
pusha
fs
idivb
notl
mov
sbb
jnp
adc
jmp
loop
and
ss
push
clc
sub
es
cwtl
popf
cli
loope
imul
dec
popa
loop
mov
in
adc
xor
or
mov
cmp
cmp
pop
out
mov
loope
mov
dec
add
xor
into
mov
xchg
leave
cli
scas
push
mov
cmpsl
or
inc
loope
push
jnp
es
adc
sti
int3
dec
ss
in
pop
popf
rclb
mov
test
mov
push
dec
popw
loopne
pop
or
pop
push
mov
repnz
xchg
push
or
lea
test
cmpsl
mov
sahf
xchg
jo
popf
shll
outsl
xor
sub
outsb
das
shll
add
push
loop
mov
jp
call
mov
pop
sti
jne
test
mov
mov
lods
adc
fwait
mov
std
sarl
pusha
js
sbb
mov
adcl
cmp
add
push
cld
mov
ds
fisttps
mov
adc
sub
or
push
and
scas
cli
dec
lods
fisubrs
fbstp
xchg
sbb
in
int3
push
mov
or
cmc
and
shr
sub
dec
sbb
sbb
shll
in
mov
dec
sti
push
inc
outsb
cltd
dec
inc
mov
bnd
cli
xor
mov
outsl
pop
pop
cmp
xchg
pop
pusha
int
out
jns
xchg
adc
scas
sbb
iret
xchg
packsswb
or
xor
push
out
inc
iret
jno
insb
fsubrl
sbb
xchg
inc
loope
imul
cwtl
push
lret
arpl
iret
sub
fs
sbb
push
sbbl
push
dec
mov
and
jecxz
cmp
mov
mov
add
mov
or
jp
insb
lods
sti
sti
jne
xor
sub
and
add
dec
pop
or
lods
ret
jg
fdivr
xchg
stos
daa
inc
lods
cmp
jle
popa
inc
xchg
sbb
test
lret
push
mov
or
dec
lock
lahf
or
outsb
mov
mov
sbb
bound
dec
xor
insb
xchg
jbe
xchg
call
xchg
mov
pushf
lds
adc
es
je
xchg
outsb
hlt
adc
test
mov
pop
cmpsl
sbb
rolb
cmc
scas
mov
mov
ficoml
movsb
out
out
in
loopne
adc
sbbl
push
dec
inc
xchg
jae
sub
call
or
mov
cmp
jno
mov
iret
pop
mov
pop
pushf
lock
out
call
jmp
pop
sbb
mov
repnz
push
cmp
sub
les
pop
jbe
or
xor
in
mov
lcall
adcb
or
sbb
lods
sbb
fdivl
lcall
int
rorl
fistpl
xchg
mov
mov
pop
mov
cwtl
add
mov
pop
jge
shll
xchg
dec
insb
xor
out
mov
stos
inc
test
jns
stos
add
push
mov
pop
les
dec
hlt
mov
mov
shrl
mov
mov
flds
dec
pop
dec
jl
outsb
dec
addr16
je
xchg
push
in
dec
out
leave
xor
sbb
je
es
jle
jb
roll
pop
jbe
mov
mov
cmp
int
add
push
jmpw
push
xchg
cmp
test
ret
repz
scas
push
in
push
fisubrs
xor
adc
cltd
in
stc
int3
push
pusha
xor
cs
adc
stos
gs
and
mov
enter
clc
shll
and
or
mov
leave
dec
sbb
cmp
scas
scas
imul
ret
push
repnz
movsl
or
xchg
cmp
mov
mov
dec
pop
push
out
cmp
leave
test
mov
jl
clc
stos
cmp
xchg
int3
pushf
and
push
ret
inc
js
xchg
adc
sub
ljmp
push
leave
lret
cmp
mov
inc
flds
xchg
scas
push
sbb
xchg
push
hlt
sbb
xchg
push
jmp
in
out
cwtl
in
cld
jp
mov
jbe
and
call
fcomi
andps
gs
inc
rolb
fstl
adc
xlat
sarl
jg
bound
in
cmp
mov
and
dec
icebp
data16
mov
or
cmpsl
pop
rol
cltd
sub
mov
ret
imul
push
subl
notl
rorb
mov
pop
and
fs
jnp
mov
mov
out
fbld
dec
outsl
test
sbb
or
sub
in
dec
cmp
punpckhwd
in
fsubrp
mov
pop
pop
push
sbb
xor
repnz
mov
js
testb
cmp
je,pn
pop
xchg
mov
out
or
sbb
rcrl
mov
push
out
les
out
inc
or
in
add
jne,pn
aaa
repz
clc
loope
push
out
sub
dec
cld
jbe
les
ljmp
fstp
mov
mov
or
inc
fs
in
popf
icebp
add
sti
push
cmpl
sbb
pushf
pop
popa
and
mov
jl
mov
adc
or
mov
and
test
lcall
mov
stc
xor
xchg
push
shlb
xchg
pop
lahf
mov
lods
mov
dec
mov
in
cmpl
push
inc
jb
or
fadds
adc
int3
pusha
fisttpl
lret
lret
push
mov
mov
add
inc
lret
frstor
aad
mov
push
clc
imul
pop
test
mov
test
fmuls
cmp
push
outsl
sar
pop
jb
arpl
push
cmp
push
add
fistl
dec
ret
mov
add
repnz
adc
rorl
inc
dec
jp
jbe
dec
mov
out
loop
inc
lods
imul
dec
sbb
push
aad
pop
mov
aam
sbb
inc
and
ja
stc
aas
sub
or
loop
pushf
mov
popf
cmc
in
add
mov
jp
mov
hlt
loopne
mov
cli
faddl
outsb
fnstsw
jne
lods
lea
inc
lret
test
pop
push
xchg
mov
lahf
imul
xchg
mov
dec
jmp
lcall
and
jp
stos
pushf
mov
mov
fsubr
push
xchg
xor
out
push
mov
repz
jne
fistl
std
lcall
popl
gs
xchg
stos
pop
mov
fcoms
clc
adc
pop
xchg
daa
mov
add
push
xchg
lcall
dec
xor
xchg
pop
xchg
mov
test
sub
jae
pop
jg
jge
cltd
fisttpll
and
cmc
mov
mov
cmp
bound
test
add
push
pop
icebp
push
push
insl
les
adc
xchg
imul
adc
stc
jge
loop
mov
cltd
lret
sbb
and
test
dec
and
insb
xor
mov
outsb
aam
mov
sbb
cmpsb
pop
push
mov
add
jns
aas
mov
pop
aaa
sbb
sub
scas
mov
dec
mov
inc
lcall
lret
mov
lods
enter
cmp
xor
test
sbb
cs
imul
pop
shl
test
mov
add
cwtl
jmpw
push
in
sbb
inc
jbe
shlb
jb
stos
lret
xor
test
mov
pop
or
movsb
lahf
xlat
xlat
fwait
xlat
fidivs
es
push
lret
xor
xchg
mov
add
filds
mov
idiv
dec
imulb
lock
hlt
mov
outsb
add
hlt
inc
lods
push
jle
jns
or
sub
jne
pop
xlat
or
sahf
ret
rcll
dec
aas
lahf
fistpll
pop
fsts
lret
mov
outsb
std
je
scas
sahf
pushf
sbb
outsl
jne
cmp
and
cs
adc
cmc
mov
iret
push
es
push
mov
pop
inc
movsl
jg
outsl
and
push
roll
or
das
loop
pop
stos
je
stos
dec
icebp
leave
xchg
test
pop
sbb
sbb
cld
add
push
enter
jl
pop
or
push
pop
in
sbb
fs
in
cs
hlt
scas
cmp
add
movsb
fcomi
pop
imul
mov
push
xchg
test
jge
cmp
ficompl
cmp
xor
repnz
push
mov
pushf
fcoms
clc
mov
aaa
testl
add
orb
sbb
sti
inc
mov
call
pop
ds
cltd
loop
sbb
popf
out
repnz
cmp
dec
jo
pop
inc
or
sbb
adc
fld
push
stos
add
test
pushf
fisubl
fucomip
enter
aad
fstl
enter
pusha
mov
adc
leave
xchg
shll
fucomip
xor
xchg
lock
push
sub
mov
daa
pop
frstor
les
push
repnz
dec
std
inc
push
adc
jmp
int3
and
fmulp
jmp
inc
adc
mov
pusha
call
and
sbb
bound
repz
adc
sub
xor
lock
mov
dec
imul
into
pop
fcoml
or
hlt
out
bound
xchg
and
popa
fdiv
aaa
flds
pop
jmp
push
arpl
jb
out
cmp
mov
daa
cmpsl
lahf
mov
mov
xor
mov
adc
lds
testb
aad
sbb
push
lea
and
sub
add
aaa
lea
push
sarb
in
pop
inc
push
repz
divl
sub
inc
mov
arpl
daa
lods
add
mov
dec
inc
lret
sbb
cmp
in
xlat
data16
aad
cwtl
repz
rolb
popa
cs
fwait
idiv
rorl
pop
adc
sub
in
fnstcw
push
je
xor
out
jb
imul
das
sub
push
bound
cli
mov
mov
mov
cmp
mov
jns
xchg
pop
mov
arpl
jecxz
daa
or
mov
iret
fsubs
leave
xchg
sbb
adc
rcr
test
shlb
ds
sub
cmpsb
enter
test
daa
fimull
adc
scas
jl
jle
dec
sbb
mov
into
js
mov
xor
add
sbb
push
mov
gs
outsb
aaa
adc
pushf
insl
push
sub
mov
sbb
cmpsl
jnp
aad
add
cmp
es
push
jl
pop
xor
sub
addb
cltd
xchg
mov
sahf
jle
push
xchg
movsb
loope
leave
push
mov
adc
lret
cmp
add
jmp
cmp
xchg
push
mov
ret
sbb
fs
hlt
in
lahf
das
mov
mull
cmp
or
es
or
xor
xchg
lahf
inc
jg
clc
sub
lret
mov
or
pop
mov
cmp
ljmp
cmpsb
ficoml
pop
add
out
mov
dec
pop
add
enter
insl
mov
loope
xor
div
sub
mov
lods
push
cld
jbe
hlt
inc
inc
push
pop
mov
stos
pushf
xor
filds
push
xchg
out
insb
filds
repnz
push
sub
mov
xor
addr16
mov
inc
pop
inc
out
push
add
rol
pop
ret
mov
sub
das
dec
mov
and
jg
fsubs
insb
dec
adc
repz
cmpsb
dec
aam
cmc
xlat
sbb
adc
rorl
sub
out
sub
out
cmp
lds
es
mov
and
cltd
mov
lea
jmp
loop
cltd
dec
push
in
lods
rorl
dec
js
pop
cmp
mov
cmp
nop
inc
push
js
ljmp
xor
mov
inc
mov
stos
adc
mov
inc
in
lahf
xchg
clc
mov
lcall
push
out
cmpsl
xchg
gs
mov
cmpsb
push
push
mov
outsb
pop
or
dec
dec
mov
out
hlt
fwait
xchg
loopne
cltd
mov
xchg
mov
jbe
xlat
imul
enter
jb
ds
sub
adc
outsl
add
mov
inc
or
dec
incb
aad
mov
or
les
mov
lds
mov
xchg
outsb
ffree
mov
sahf
enter
sbb
test
stos
jne
pop
inc
push
arpl
push
xchg
jb
mov
mov
inc
in
cmp
lods
call
repnz
dec
loopne
jmp
mov
das
push
push
sbb
adc
out
xchg
pop
sbb
stos
inc
jbe
adc
xlat
hlt
xor
jns
hlt
das
mov
insb
or
dec
sbb
mov
sahf
mov
insl
mov
scas
mov
or
es
stc
xchg
pop
add
mov
mov
cmp
mov
adc
icebp
sbb
fidivl
aam
out
xor
inc
sti
pop
mov
out
mov
push
es
sbb
and
loop
ja
fldl
mov
aaa
fsubrs
std
loop
xadd
loope
mov
push
dec
and
scas
fs
lcall
aam
xchg
sbb
imull
js
mov
lods
call
adc
loop
ljmp
aaa
mov
ficoms
leave
pushf
sub
or
jns
int
inc
shll
cmc
and
dec
popf
xchg
aaa
lea
stos
mov
fsubs
imul
inc
das
fwait
les
sbb
sbb
int
and
xchg
insb
insb
fsubrs
add
sti
jge
mov
int3
sub
jmp
push
adc
adc
jb
push
adc
pushf
mov
iret
fistps
dec
sub
fucomi
push
pop
test
sahf
add
insb
and
mov
lahf
cmp
faddp
push
mov
jl
dec
cmp
inc
jae
xchg
decl
cli
add
cwtl
pop
test
iret
inc
sti
add
leave
scas
pop
notb
insb
adc
pop
inc
pushf
jmp
repz
xchg
and
xchg
out
jmp
sahf
into
rclb
addr16
in
sub
imul
dec
fnstcw
repz
jecxz
fucomip
out
dec
xchg
andb
or
push
lods
mov
or
out
push
ret
pop
in
dec
inc
iret
jno
adc
mov
arpl
xor
movsb
pop
movsl
ja
jno
mov
sbb
lea
shl
mov
pop
in
pop
xor
jge
mov
and
pop
xor
mov
pop
adc
xchg
iret
sar
cmpsb
dec
cltd
xchg
pop
movsl
in
pushf
bound
in
mov
in
jns
mov
inc
and
shl
add
shll
repnz
fisttpll
xlat
mov
stc
push
test
xchg
or
lock
sti
cmpsb
pop
sub
lods
mov
xor
jmp
inc
aas
dec
sub
inc
and
call
mov
xor
cmp
sbb
push
std
aam
test
mov
xorb
addr16
in
mov
addr16
daa
jle
adc
imul
mov
movsl
pop
or
outsl
fnstcw
and
pushf
sub
das
jnp
cmp
lods
int
dec
sbb
aas
jecxz
push
push
in
add
mov
call
inc
mov
scas
lds
mov
jns
cmc
or
sub
push
xchg
cmp
push
cltd
pop
aad
pop
mov
push
push
push
std
pop
sbb
jb
pusha
xchg
jge
mov
mov
popa
fwait
adc
push
mov
in
and
outsb
addl
dec
mov
ljmp
adc
lds
or
inc
pop
in
or
into
cmp
bound
mov
into
out
fildl
xchg
scas
lret
sbb
shl
cmpsb
test
fimull
mov
and
repnz
and
jb
popf
insb
xor
mov
cmp
pop
cs
or
mov
mov
popf
adc
pcmpgtb
push
fcom
call
mov
stos
or
insb
and
stc
xchg
lods
in
in
outsl
lock
xor
xchg
mov
test
cmp
jns
inc
xor
mov
xor
sub
pop
mov
pop
hlt
mov
sbb
xor
or
scas
push
and
jno
outsb
in
int
mov
ja
inc
loope
inc
loope
fadds
shr
push
cmp
pop
mov
inc
lds
sarb
pop
pop
adc
lret
aam
mov
aad
sti
js
cwtl
stc
xchg
fwait
hlt
daa
sbb
cld
popf
loopne
stos
leave
sti
cmp
aad
push
push
mov
addr16
sahf
dec
or
inc
fwait
mov
cmp
xlat
cmc
cld
je
sbb
out
sbb
jae
xchg
sbb
or
and
clc
push
incl
enter
mov
test
outsl
and
stos
test
push
mov
pop
adc
mov
and
fs
stos
fstp
in
or
popa
add
and
aad
out
mov
xchg
and
ja
clc
cwtl
ds
mov
or
mov
add
pusha
adc
icebp
mov
mov
inc
or
add
or
push
test
adc
cmp
inc
mov
popl
dec
test
jle
or
adc
xor
xchg
rorb
dec
fldcw
push
pop
cmc
pop
shlb
fwait
and
int3
push
jns
stos
jnp
dec
ljmp
lock
jae
or
lcall
icebp
or
popf
jle
inc
mov
call
xchg
inc
sbb
push
jno
or
imul
mov
push
adc
cli
loope
roll
fwait
or
cmp
mov
std
les
mov
out
jbe
loope
pop
out
inc
xchg
das
dec
je
jne
loop
cmp
dec
inc
popa
sti
cmp
add
jg
add
mov
sar
mov
fisubs
and
xchg
hlt
addl
repz
adc
lods
xor
cmp
aas
notb
xchg
adc
xor
out
or
jge
xorl
jl
dec
jecxz
xor
sbb
cwtl
leave
xor
lock
and
pop
lret
jo
xor
or
clc
inc
popf
cli
inc
incb
pop
decb
ret
adc
fmul
inc
mov
movb
pop
ss
movsl
fxch
ret
cmp
mov
loopne
test
add
xchg
push
push
sbb
sub
inc
jb
cltd
daa
in
sub
lds
xor
rolb
out
xchg
ret
pop
sbb
jp
or
outsb
data16
and
addb
cltd
add
inc
test
enter
lcall
dec
mov
mov
std
rcrb
out
inc
notl
int3
lods
lcall
outsl
rcl
in
shl
mov
popf
xchg
and
cmc
movsb
mov
cli
mov
dec
push
push
inc
es
mov
jecxz
adc
xchg
pcmpeqw
or
std
movsl
xchg
idivb
in
xchg
loopne
mov
imul
pinsrw
bound
lret
adc
hlt
push
mov
fucomip
es
arpl
cltd
cs
lods
cmpsb
fwait
sub
pop
loop
mov
popa
or
add
jecxz
pop
ret
ret
add
gs
fcmovbe
rclb
mov
cmp
jge
mov
cmp
jge
ret
stc
mov
sub
sbb
xchg
dec
xor
adc
mov
or
xchg
lret
and
mov
orl
push
sub
out
call
popf
es
clc
cltd
sbb
jbe
mov
mov
push
roll
push
mov
mov
or
sbb
std
aam
dec
mov
push
mov
shl
xchg
inc
adc
cmc
imul
ja
icebp
rcrl
and
ret
daa
adc
push
test
nopl
ret
fs
lock
out
xor
or
jns
jecxz
sbb
and
pusha
cmc
test
mov
add
cmp
ret
mov
pop
je
loop
lahf
pop
xor
dec
pop
in
test
or
hlt
icebp
insb
outsl
dec
mov
ficoms
push
cmpsl
imul
and
movsb
inc
xor
jb
pop
outsb
data16
inc
or
fnsave
aad
push
jmp
out
sti
int
dec
faddp
inc
rolb
add
insl
pusha
ds
ja
inc
cmp
rol
cmp
call
loopne
jb
push
lret
rorl
subb
cmp
adc
lods
inc
test
fs
les
insl
dec
or
pop
jae
filds
popa
and
test
fdivrs
hlt
sbb
adc
add
popf
jno
xor
pop
gs
jge
push
mov
add
push
cmp
dec
sbb
sahf
jle
cwtl
lods
shrl
cmp
je
orb
inc
xlat
xchg
popf
fidivs
add
fsubrl
iret
test
mov
sub
mov
lahf
aas
pusha
fwait
pop
out
pop
dec
lahf
popa
cmpsl
shr
scas
std
inc
and
mov
push
out
or
lret
push
pop
shlb
xchg
cltd
lea
pop
adc
js
mov
cmp
inc
hlt
nop
mov
ficoms
jg
cwtl
das
or
test
loopne
jl
pop
out
jle
and
cmp
pop
sub
stos
and
sbb
scas
rorb
in
xor
addr16
cmp
div
stos
ja
mov
dec
push
or
jge
mov
int
inc
test
int
xor
call
or
scas
adc
ret
mov
inc
test
stos
mov
push
sub
inc
test
int
es
dec
mov
xor
leave
hlt
fistpll
sub
cltd
je
adc
cld
sbbl
jge
ja
inc
or
enter
xor
stos
ljmp
dec
pop
cltd
inc
jns
notl
cmp
lods
ds
lock
or
mov
or
clc
dec
into
shll
mov
adc
pop
cmc
push
inc
pop
jmp
mov
push
aam
push
xchg
mov
cwtl
sub
cmc
lret
out
roll
lock
ret
xor
mov
push
jbe
pop
je
repz
mov
das
xor
imul
call
cs
and
dec
fiaddl
test
sbb
mov
int
xchg
aaa
pop
or
and
cwtl
sub
jb
out
pushf
pop
mov
rorl
sbb
dec
and
hlt
inc
inc
aaa
andl
or
jnp
test
jg
inc
inc
add
cmp
xchg
lret
add
push
mov
push
imul
adc
enter
imul
add
mov
movsb
fcomp
dec
jg
inc
popa
pop
adc
jmp
jmp
popa
cli
call
mov
mov
dec
sub
xchg
xor
add
mov
push
mov
cltd
icebp
testb
jnp
or
mov
inc
or
cmp
sbb
cwtl
dec
dec
lret
inc
aad
dec
test
icebp
mov
adc
jecxz
mov
jmp
or
mov
pop
dec
mov
test
xlat
xor
stc
orl
rorb
mov
jl
clc
mov
push
andl
mov
adc
sub
inc
xchg
inc
or
or
pop
lret
js
jne
lock
jl
sub
incl
loope
lods
pop
push
outsb
or
mov
xchg
repnz
adc
rcrl
adc
stos
jmp
inc
dec
xor
mulb
rcl
and
add
test
mov
pushf
jmp
add
xor
mov
mov
ficompl
adc
mov
or
push
pop
mov
push
cltd
pop
pop
xor
imul
outsl
xlat
notl
add
call
cwtl
insb
xchg
and
nop
inc
cmp
mov
fcomps
fidivrl
jmp
xchg
push
sbb
xchg
in
sub
ds
stc
mov
add
andl
inc
lret
jmp
lcall
cpuid
push
lods
fnstenv
das
mull
icebp
int
mov
mov
push
mov
push
push
cmp
shlb
ja
cmc
cmpsl
push
xchg
pop
sbb
xor
out
mov
xchg
sbb
or
mov
push
cmp
mov
fimull
repnz
or
arpl
outsl
add
std
lret
loopne
mov
mov
cmp
pop
pushf
inc
push
xor
aaa
lods
cmp
test
outsl
mov
pop
mov
fwait
xchg
jne
in
xor
mov
ljmp
mov
xor
stos
adc
or
sub
mov
jnp
pusha
adc
jmp
sbb
xchg
xlat
mov
mov
pushl
mov
aam
loopne
jnp
add
dec
or
dec
ror
sub
mov
ljmp
fdivr
mov
cmp
mov
test
xchg
fcoml
add
jg
notl
and
pop
push
cmp
outsb
and
mov
repnz
movsb
mov
sbb
or
leave
mov
ss
mov
and
in
xor
das
and
fnstsw
into
inc
mov
cmp
hlt
mov
pushf
fimull
orl
cmp
xchg
scas
inc
xor
add
out
mov
xchg
pop
add
stos
sbbb
push
jp
mov
pop
xchg
clc
lret
lea
sub
and
add
test
adc
test
inc
pop
xchg
and
movsb
or
dec
in
jmp
dec
shrl
pop
fisttpl
bound
repz
adc
leave
das
fisubrl
fists
jp
mov
pop
inc
lcall
jmp
sahf
add
cs
in
ljmp
fiadds
jge
jmp
xchg
scas
cmp
sub
loopne
xchg
cmp
push
shll
movsl
pop
add
cwtl
mov
pop
aaa
cmp
mov
dec
xor
mov
push
mov
adc
sbb
cmp
arpl
hlt
dec
jae
sbb
hlt
mov
nop
jl
push
int
mov
push
in
push
sub
fimull
inc
test
clc
addr16
cli
into
repnz
mov
rol
cld
dec
insl
mov
sbb
scas
mov
mov
in
jns
pop
sbb
mov
dec
cmp
clc
imul
or
jb
push
nop
add
mov
and
out
push
mov
push
aam
imul
push
xor
and
les
inc
push
inc
mov
pop
inc
inc
lods
xchg
rcl
les
add
popa
jnp
fisubrs
pop
mov
sahf
mov
loopne
push
add
sbb
jge
jle
push
jb
aad
lcall
mov
cmp
add
xchg
je
in
and
loop
jl
cmp
sub
push
sbb
xchg
adc
in
ljmp
cli
mov
add
lock
cmp
and
cmp
sub
popf
pop
inc
pop
pop
inc
jge
daa
or
fwait
and
push
mov
mov
icebp
adc
jnp
fs
sub
fxch
lock
push
sub
int3
add
jnp
mov
jecxz
sbb
inc
mov
out
test
out
push
xor
pop
sbb
mov
pop
and
jnp
sbb
or
aad
inc
popf
iret
jmp
push
idivl
mov
push
pop
ja
out
dec
sti
xorb
sub
add
xor
push
jns
push
xchg
nop
push
xlat
cmp
adc
mov
mov
or
cmpsl
xor
inc
out
imul
shlb
add
iret
push
lret
mov
enter
js
lds
stc
adc
and
xchg
adc
mov
or
mov
pop
je
or
xchg
mov
dec
das
int3
jle
into
int3
pop
pop
xchg
adc
leave
mov
mov
xchg
mov
cmp
push
test
and
jp
lea
out
add
lret
pop
lret
mov
movsb
inc
adc
test
mov
in
or
es
jno
mov
cmp
pop
sbb
out
mov
sub
mov
and
in
cmc
mov
rcrl
jbe
imul
dec
scas
pusha
mov
push
pop
sbb
cmp
ljmp
faddp
rcll
sbb
sub
jmp
insb
popf
push
popa
iret
ffreep
mov
fidivrl
push
and
test
ret
aad
sub
push
push
jnp
scas
arpl
int
clc
ret
mov
add
sub
fiadds
fidivrl
lds
pop
ljmp
cs
push
lock
push
mov
cltd
xchg
sbb
dec
and
fwait
xor
mov
aas
fcompl
bound
xor
mov
and
xlat
cmpsb
nop
scas
or
sbb
ror
sbb
aas
scas
mov
or
mov
gs
cmpl
jnp
xchg
es
adc
cli
pushf
sub
dec
cmc
repz
movsb
sub
insl
sub
loopne
cmp
sbb
stos
fcompl
sbb
std
sub
push
popf
outsb
inc
pushf
inc
scas
push
push
mov
rorb
sbbl
sub
cmp
xchg
lcall
je
xor
fsubrl
shlb
pop
lret
ljmp
stos
negl
bound
cmpsl
in
lods
pop
jp
mov
aas
shl
in
or
push
call
js
stc
xchg
clc
fiaddl
sbbl
dec
pop
cmp
add
mov
icebp
jbe
dec
addr16
adc
push
loope
popf
jl
add
jl
decb
in
mov
arpl
mov
push
aaa
sub
pop
cmp
testl
loop
sub
or
stos
mov
pop
pop
cmpsl
cli
aad
jnp
in
mov
aaa
testl
int
and
or
shrl
xor
add
push
movsb
sbbl
outsl
cmpl
call
jbe
xchg
cmp
imull
jmp
mov
mov
add
cmp
mov
lahf
ss
in
inc
xlat
adc
cmp
jbe,pt
js
jg
sbb
sti
and
adc
sahf
filds
insl
pop
sub
sbb
add
pop
jecxz
push
and
xlat
xor
lds
cld
hlt
mov
mov
inc
iret
xchg
push
xor
lods
mov
jle
stos
mov
in
cmp
pop
jge
jne
sbb
lahf
dec
into
sbb
or
mov
ss
cmpsl
out
ljmp
shll
jl
jae
fsubr
xor
cmp
scas
adc
dec
cmp
pop
sub
adc
jb
jp
out
subl
outsl
xchg
movb
dec
sub
and
sbb
mov
mov
mov
das
adc
nop
inc
cltd
inc
adc
cmovbe
inc
dec
insb
std
push
jge
pop
iret
das
test
inc
dec
mov
idiv
or
pop
aas
xchg
lss
mov
ret
inc
mov
mov
mov
addl
mov
popa
lcall
repnz
sbb
inc
enter
push
das
xchg
pushf
loope
xor
adc
cmpb
push
push
ss
dec
je
jg
sub
mov
add
clc
aam
xor
sub
fs
test
pushf
xor
pusha
idivl
pop
xchg
sahf
adc
sub
push
aaa
xchg
inc
fdivr
add
adc
das
ljmp
sub
adc
lcall
lods
jg
fs
rcr
or
je
sbb
xor
mov
pop
int
cs
stos
xor
inc
sub
cmp
push
subl
in
xchg
ljmp
sbb
push
rol
cwtl
mov
adc
xor
xchg
add
sbbl
ss
or
insl
sbb
inc
je
jecxz
fst
and
sub
or
jmp
in
jle
jmp
sarb
dec
out
inc
xor
std
sbb
jns
lods
cmpl
xchg
push
jle
mov
outsl
sub
fcomi
sub
jmp
and
adc
inc
outsl
lahf
push
stos
push
data16
xor
xchg
jne
and
rcrl
adc
fstl
adc
cld
out
push
arpl
int
push
pop
bound
arpl
scas
sbb
ret
add
mov
dec
mov
inc
adc
dec
in
add
xchg
jne
jae
arpl
inc
push
sub
pushf
push
rcrl
or
xchg
scas
cmpsl
dec
out
out
sbb
cmp
push
js
cltd
test
xchg
mov
dec
cmp
shll
and
jno
mov
push
dec
push
loope
fadd
xor
pop
clc
fmuls
clc
cmpsb
je
and
mov
arpl
hlt
mov
sub
jmp
int3
mov
insl
bound
xchg
sub
lret
inc
mov
mov
sub
or
xchg
cld
fsubr
aam
or
push
and
pop
adc
xor
iret
cwtl
jne
adcl
insl
mov
cwtl
cmp
sub
pop
push
fmuls
out
das
loope
mov
decb
jb
pop
pop
push
dec
pop
or
jge
test
loopne
and
mov
push
push
dec
jmp
xchg
pop
sub
aad
sub
adc
inc
inc
xchg
jmp
sub
rclb
mov
pop
shll
inc
cld
rclb
xchg
mov
leave
cmp
pop
subb
out
les
cld
aaa
dec
push
test
or
out
loop
pusha
mov
cmp
out
pop
sub
aad
dec
loopne
sbb
xchg
xchg
test
mov
mov
aam
cs
inc
out
jp
lock
pop
push
faddl
mov
push
repnz
xchg
stos
arpl
push
fstpt
xor
jne
mov
outsb
xor
dec
xor
lea
xor
mov
xchg
unpckhps
sahf
in
in
fidivrs
adc
push
mov
sbb
add
mov
lods
in
or
mov
mov
dec
mov
andl
jo
ret
push
pop
test
jecxz
int3
arpl
popa
ds
mov
jno
and
xor
adc
rcrb
shrl
insl
imulb
jns
adc
lods
xor
shrl
add
jnp
repz
out
imul
and
push
adc
ljmp
xor
dec
das
and
bound
cmpsb
movsb
insb
insb
push
mov
pop
cmpsb
jg
dec
sbb
add
mov
in
mov
int
xchg
adc
fs
hlt
cmc
outsl
shll
repz
cmp
test
movsl
in
stos
sub
jge
pop
fldenv
jb
push
adcb
xchg
lcall
and
or
push
cmp
jp
cmp
stos
mov
invd
cld
rcl
sbb
lcall
push
jne
lds
inc
and
or
daa
jno
ret
pop
mov
mov
je
push
sbb
sbb
xchg
add
pushl
pop
pop
sbb
cmp
jl
filds
sbb
out
mov
inc
lods
enter
mov
shll
sarl
dec
mov
and
mov
mov
ss
clc
inc
call
or
pop
dec
lret
add
inc
test
sbb
adc
mov
adc
out
lds
xchg
jne
mov
dec
inc
pop
mov
pop
gs
repz
nop
cwtl
insb
jecxz
stos
fadds
movsl
stos
jb
xor
lret
enter
mov
mov
loopne
popa
mov
fcmovnu
fildl
xlat
out
je
xchg
rcll
xchg
dec
fwait
jnp
add
xor
mov
and
daa
shr
push
pop
inc
test
mov
iret
rcrl
jmp
rcll
andl
fmull
stos
frstor
shll
movsl
out
enter
add
aam
test
cmpsb
cmp
jg
xchg
in
pop
push
push
add
mov
add
or
xchg
aad
xchg
rcll
insl
dec
xchg
inc
push
lods
rorl
ret
dec
mov
xchg
or
jmp
fisubrs
xor
and
loope
sub
in
pop
sbb
out
jmp
shr
mov
mov
push
hlt
jmp
fucomip
pop
sbb
sbb
jnp
add
bound
inc
dec
xchg
lods
push
inc
mov
fs
js
bsf
sub
aaa
pop
fiaddl
jbe
pop
xlat
mov
mov
lods
and
mov
fwait
in
cld
leave
lcall
sbb
cmpl
jecxz
fwait
mov
sbb
cltd
add
fmul
cli
add
add
xchg
inc
push
cmpsl
xor
cli
cmpsl
add
inc
jns
aaa
scas
lahf
imulb
add
adc
out
nop
lret
movsl
pop
mov
enter
test
pop
push
adc
das
sahf
in
sub
ds
aam
xchg
mov
bound
rorl
ja
sub
lds
or
cmp
ret
mov
sub
push
shll
je
jle
pop
xchg
shrb
das
and
cmpb
sub
and
gs
and
pop
and
dec
jecxz
mov
add
ljmp
pop
cmp
xor
jl
inc
pusha
pop
jne
or
pop
pop
movsl
push
push
jb
mov
sbb
clc
xor
lods
fwait
sahf
sub
fcoms
dec
mov
pop
mov
int
hlt
fbld
out
movsl
into
pop
inc
push
add
cmp
stos
xor
aaa
push
pop
add
mov
push
enter
paddsw
nop
sbb
mov
bound
test
inc
fisttpll
cmpsb
cmp
lea
xchg
xor
jns
cmp
push
dec
dec
adc
jmp
adcb
movsl
fimull
jbe
cmp
addr16
and
insl
shl
and
gs
mov
mov
push
ss
push
mov
adc
pop
or
ret
pop
loopne
hlt
or
dec
xor
mov
jns
pop
sbb
aam
cmp
out
xor
push
xchg
inc
insl
adcb
or
sbb
hlt
xchg
fdivs
xor
fwait
xchg
and
cmc
xchg
and
in
ss
movsb
outsb
xor
gs
fwait
out
mov
das
adc
dec
fisubrs
xor
push
mov
roll
add
fildll
fistps
dec
imul
fwait
loop
ret
fsubrl
mov
scas
and
pushf
inc
xchg
in
leave
imul
and
jle
pushf
jno
pusha
and
in
movl
mov
push
sub
mov
mov
pop
jne
cmpsl
loopne
fimull
xorl
sub
xchg
mov
sub
mov
jbe
mov
sbb
xchg
and
sbb
ljmp
movsl
movl
div
cli
adc
mov
push
cltd
xchg
mov
scas
sub
movsl
pushf
out
jo
pop
stos
push
inc
jns
dec
pushf
aas
loopne
xchg
je
fxch
cs
mov
jne
fcomip
ficompl
sub
pop
js
jecxz
fcmovu
adc
mov
jl
push
pop
shrb
inc
xchg
or
sbb
test
cmp
mov
adc
push
stos
dec
pavgw
movsl
rclb
adc
rcr
out
shlb
lds
push
or
ds
sbbb
sub
imul
jecxz
leave
fldcw
add
daa
sub
adc
inc
xor
inc
aaa
dec
lret
cli
cwtl
add
clc
mov
push
icebp
cmpsb
mov
jbe
js
cmp
sbb
xchg
mov
fiaddl
mov
push
jbe
leave
xor
sbb
lret
add
repz
jo
mov
jl
xchg
lcall
loopne
rol
test
frstor
stos
sub
or
push
int3
jns
mov
jl
cmp
push
call
inc
xchg
or
pop
jp
pop
sbb
push
imul
and
push
test
xchg
idivl
cmp
jae
and
adc
mov
jge
out
sub
push
ret
stos
fstpl
es
mov
dec
jb
leave
lcall
add
add
mov
shll
ljmp
stc
sbb
dec
fcoml
pop
outsl
fucompp
mov
lea
aas
or
into
push
and
insb
js
fwait
jecxz
add
push
cmp
dec
push
jmp
push
mov
bound
pop
inc
cltd
cli
pop
cs
std
jle
hlt
cmpsb
ds
pop
xchg
sarl
push
test
and
and
sbb
xchg
push
daa
fiaddl
sbb
fadds
add
jecxz
out
es
int
add
out
xchg
out
dec
loop
scas
out
frstor
daa
cmp
lcall
cmpsb
mov
repz
and
je
aaa
mov
add
daa
xor
loopne
adc
cmpb
dec
andl
rep
pop
mov
pop
flds
rorl
pusha
mov
mov
out
sbb
cmp
icebp
cld
shll
dec
mov
xchg
insb
cmp
xchg
jnp
test
xchg
sbb
test
and
gs
test
mov
adc
and
pop
mov
arpl
push
cld
hlt
dec
cmp
fldcw
mov
lods
fs
lcall
rclb
dec
andl
sti
fwait
xchg
and
mov
enter
push
mov
fmuls
dec
pusha
aas
cmp
push
xchg
jge
fs
inc
ss
sub
pop
ss
push
bnd
test
stc
xchg
push
mov
dec
test
jg
es
mov
fwait
jge
adc
mov
add
xchg
aaa
clc
stos
pop
xchg
cmc
in
cmp
pusha
mov
xchg
cmp
lcall
scas
jne
add
cli
mov
std
xchg
lds
sahf
nop
push
mov
push
loop
jge
das
sti
fwait
jnp
test
mov
div
ficoms
fimull
shlb
push
pop
sbb
stc
xchg
jge
orl
xchg
jnp
mov
into
repnz
divl
push
ficoms
aad
jp
jmp
cmp
lea
mov
inc
and
addl
rclb
jmp
scas
cld
stos
idiv
mov
mov
dec
pop
lret
roll
mov
jns
xor
mov
mov
test
data16
mov
cld
test
rorb
xor
pop
and
xor
cmp
test
dec
sbb
fdivrl
lock
mov
ret
xchg
sbb
xchg
popa
jns
repnz
and
add
mov
neg
iret
fs
pop
ds
cmpsl
adcb
mov
sti
pop
sub
mull
dec
push
loope
jbe
mov
cwtl
pop
das
icebp
andl
push
out
xor
in
mov
xchg
clc
mov
xor
enter
std
les
fptan
adc
cmp
repz
jo
and
inc
shrb
sub
iretw
loopne
jl
push
pop
decb
mov
jnp
cmp
mov
js
jl
add
arpl
xor
or
rcr
jle
xor
nop
mov
stc
mov
jecxz
pop
push
adc
addr16
fimull
lods
ss
and
cmp
pop
push
in
sbb
ljmp
pop
arpl
mov
lret
fidivrl
jmp
mov
cmp
inc
cli
lahf
xchg
clc
jp
test
shlb
jmp
stc
fucomp
stos
pop
aas
daa
lods
loop
scas
lret
das
mov
dec
push
outsb
int
int
add
ja
sub
adc
mov
mov
dec
push
lods
fbld
gs
enter
and
hlt
adc
aad
cmp
xchg
push
cmp
mov
fdivr
cmp
jmp
mov
in
jbe
fists
pop
push
mov
mov
in
test
push
cwtl
dec
lcall
lds
fwait
cmpsb
test
push
outsl
jo
pop
movsl
cmp
jne
shll
jmp
mov
lahf
imul
pop
and
inc
sub
dec
cmc
pusha
adc
cmp
into
xor
and
filds
mov
ds
push
cltd
lea
or
cmp
repz
cmc
mov
mov
sahf
sub
cld
push
cltd
add
pushf
pusha
xlat
sub
hlt
int3
das
push
stos
add
lods
in
outsl
xchg
pop
into
or
pop
dec
movsl
out
xchg
test
daa
and
dec
jb
addr16
sub
scas
leave
dec
push
inc
clc
pop
addr16
stos
hlt
lret
aad
rorl
stc
sbb
fidivl
es
nop
fdivl
test
popa
sbb
or
movsb
inc
out
add
pop
push
js
pop
inc
insl
xor
mov
sub
fwait
dec
inc
mov
out
shl
lret
cmp
pop
adc
es
leave
bound
mov
mov
xchg
dec
or
xchg
inc
or
push
mov
jno
popa
mov
hlt
inc
pop
bound
arpl
push
fcom
lock
cmpsb
in
ss
test
mov
jns
out
outsb
in
push
dec
or
arpl
add
jnp
lds
jge
ret
dec
adc
cmpsb
pop
imul
sbb
insl
xor
jno
cmpsb
fstl
and
scas
daa
mov
or
mov
test
jbe
imul
cmp
jae
cmp
or
loopew
push
xchg
out
mov
sahf
jne
outsl
xchg
leave
xchg
push
in
out
adc
xlat
scas
cmpsb
rcrb
xchg
fucom
loop
scas
adc
push
insb
stc
and
add
adc
fidivrs
lret
or
repz
mov
ret
or
lock
lock
loope
fsub
jle
loopne
adc
jg
cmpsb
push
sub
cmp
push
mov
sbb
inc
pusha
into
xlat
andb
subb
inc
fsubs
fsubs
test
mov
dec
and
cwtl
pop
pop
add
pop
das
int3
or
lahf
mov
xor
sub
adc
mov
add
sbb
fbld
inc
cmp
das
xor
xchg
jno
arpl
xchg
outsl
pop
das
into
inc
pop
dec
pusha
lock
add
xchg
jno
xchg
and
and
ds
jae
sbb
cmp
dec
decb
xlat
sahf
outsb
jmp
xchg
adc
mov
xchg
popa
cmp
xchg
fisubrl
add
das
sbb
rcrb
mov
sub
mov
jae
sub
mov
and
mov
or
jnp
push
mov
mov
cmp
mov
out
and
js
je
mov
ret
sub
or
adc
lds
dec
fldt
imul
decb
mov
mov
je
sub
xchg
fdivrl
adc
inc
mov
push
mov
loopne
insl
add
rclb
in
test
inc
adc
add
les
jne
mov
cwtl
int3
into
adc
xchg
outsl
data16
cmpsb
int3
in
add
xchg
push
ror
mov
loop
pop
xor
ljmp
or
jmp
pop
ja
lcall
sub
lods
add
loop
xchg
inc
mov
lea
pushf
inc
inc
add
mov
jge
pop
or
call
cmp
xchg
rcrl
adc
or
jp
lods
in
adc
push
fldenv
jp
or
pop
fdivrp
cld
cmc
int
nop
mul
in
in
pusha
mov
adc
and
xchg
jno
or
xchg
dec
sbb
add
or
xor
ss
ja
mov
push
mov
stc
outsb
xor
nop
push
jmp
xchg
repz
jge
stos
push
xchg
xchg
jns
orl
jnp
scas
jmp
lock
or
outsb
sub
in
sarl
jo
mul
data16
mov
aas
jb
mov
nop
bound
pop
sbb
push
push
sub
xchg
sub
push
ret
inc
ret
pop
rcrb
mov
push
shl
loope
out
push
cmp
adc
in
push
pop
fs
outsl
int3
push
fs
adc
inc
ss
call
push
cmp
jne
sarb
in
xchg
xor
push
inc
mov
pop
push
inc
aas
sub
cmp
ja
jne
ret
scas
push
in
mov
push
sub
cmp
sbb
imul
xlat
add
nop
mov
movsl
insl
hlt
adc
les
push
loop
js
xchg
test
out
dec
jmp
mov
lea
add
mov
arpl
push
sarl
sbb
or
cmp
dec
loope
or
xor
adc
mov
repz
into
loopne
mov
pop
jle
sub
sbb
push
adc
leave
shll
call
sti
inc
and
lret
jmp
pop
cmp
fisttpll
fcomip
jne
ljmp
cwtl
loop
dec
popa
xor
outsl
mov
int
iret
push
xor
ja
daa
leave
fdiv
repnz
ja,pn
and
and
cmc
pop
shl
adc
ljmp
inc
aad
dec
pusha
add
outsb
movsl
cmp
cwtl
inc
rcll
lahf
add
pop
jecxz
mov
out
subl
push
cmp
jb
je
mov
dec
cli
ds
xchg
adc
pop
push
xor
addr16
cld
jp
adc
rorb
mov
scas
xchg
ss
lock
xlat
in
mov
fildll
add
test
and
std
dec
or
jne
adc
sbb
or
movsb
pop
push
mov
and
and
inc
jo
xchg
push
pop
xchg
and
jl
aas
xor
dec
jne
lret
mov
mov
cmp
int3
pop
mov
test
or
push
mov
daa
pop
mov
pop
mov
loop
pop
pop
clc
lds
or
movsb
scas
add
dec
arpl
dec
loop
shrl
adc
mov
fstps
sbb
add
lea
std
jne
xor
arpl
cmp
push
add
push
in
cmp
jae
psubq
mov
hlt
cmp
in
adc
ds
push
sbb
sbb
lods
loope
nop
bound
imul
add
xchg
subb
sub
add
cmp
in
xor
test
loop
hlt
and
stos
in
imul
mov
std
jo
sbb
adc
test
in
xor
das
call
mov
fdiv
lea
rorl
mov
fldl
xchg
jle
fiadds
cli
ljmp
xchg
xor
loopne
mov
cmp
xor
cld
test
pop
xchg
int3
sub
pop
arpl
pop
daa
fwait
sbb
dec
shrb
aad
and
ffreep
cli
push
jno
popf
insb
add
cmp
and
outsb
xchg
cmp
dec
xchg
add
jb
dec
das
adc
adc
ja
mov
lahf
mov
fsubs
cwtl
pop
dec
int
lock
add
das
add
push
imul
and
and
jb
mov
add
mov
dec
sub
inc
iret
sbb
xor
ljmp
push
xlat
clc
fwait
outsb
into
lds
pop
ljmp
lea
ret
idivl
and
mov
icebp
jbe
push
in
xchg
sub
xchg
in
pop
test
repnz
and
iret
cmc
dec
ret
jp
jecxz
rclb
movl
shr
push
mov
mov
or
inc
mov
jle
or
mov
lods
jmp
add
inc
xor
outsb
sub
out
inc
out
mov
jb
sub
jbe
int
in
jne
fwait
nop
fsubrl
jg
cmpsl
addr16
stos
fs
cli
or
pop
popa
mov
div
adc
add
xchg
fwait
mov
divl
lods
adc
fdivrs
adc
push
test
std
popf
sahf
pushw
pop
xchg
int3
pop
jmp
adc
bound
add
in
imul
fs
sbb
adc
inc
hlt
mov
cmc
dec
lcall
xchg
shl
movsl
sub
in
in
mov
iret
dec
mov
xor
repz
stos
jae
xor
ss
ja
adc
fstl
xor
pop
ja
pop
pusha
sub
mov
test
lahf
loopne
xchg
repz
pop
jne
nop
imul
push
adc
or
fdivs
in
mov
inc
ffree
repz
lock
xchg
cwtl
mov
les
xorb
xor
shll
outsb
ja
popf
push
or
xchg
xchg
les
fisubrs
int3
xor
mov
jb
sbb
lods
roll
ficoml
or
xor
dec
add
adc
int3
cmp
and
repz
jns
loop
cmp
jg
orb
shlb
or
add
mov
xchg
imul
fwait
scas
and
out
cs
xchg
add
pop
mov
mov
sti
jge
push
call
sub
call
nop
inc
dec
popa
arpl
mov
roll
push
popa
xchg
daa
mov
rcrl
mov
nop
pushf
cmp
jle
sub
push
ds
mov
xor
inc
pop
lahf
stos
adc
jae
and
repnz
iret
xchg
sbb
cwtl
jmp
mov
push
jl
cmp
cmp
imul
iret
sbb
ss
cmp
cmp
ljmp
mov
gs
rcr
or
cwtl
cs
jmp
push
pop
jmp
sbb
xor
ds
aaa
sub
inc
xor
push
aaa
ret
sahf
cli
jae
fmuls
dec
mov
jp
out
scas
sub
jb
into
jb
lods
ja
jge
nop
cmp
inc
int3
adcl
outsl
lock
aam
cmp
das
mov
jl
insb
insl
sub
sbb
imul
push
inc
pop
fsubl
int
daa
xor
nop
out
in
xchg
mov
imul
sti
jbe
or
or
jne
outsb
mov
mov
adc
lret
adc
repz
in
ja
xchg
js
inc
sub
mov
lods
imul
xor
jg
mov
mov
and
rolb
cmp
nop
icebp
xchg
pop
int
xchg
lds
mov
sub
xchg
inc
das
dec
cmp
fsubs
adc
dec
inc
lea
add
in
push
fsubr
push
aaa
out
push
cmc
push
daa
and
pop
test
out
ret
xlat
cmp
das
or
and
es
outsb
xchg
push
jl
sub
loope
xchg
cmp
pop
cmc
movsb
and
dec
imul
xor
imul
outsb
in
stos
pop
sub
in
jno
lods
mov
cld
mov
xor
inc
mov
shll
xlat
xchg
fdivr
ds
mov
or
xor
jmp
divb
sub
jg
mov
fnstenv
loop
js
xor
inc
push
mov
sub
adc
push
sub
pushf
push
insb
and
loop
sub
dec
mov
loop
cwtl
push
mov
sbb
cmp
sahf
sbb
pop
mov
or
sbbb
jmp
jns
and
xor
lods
mov
xchg
fidivrs
xchg
and
nop
in
test
cmpb
aas
test
dec
nop
xchg
adc
dec
stos
icebp
cs
mov
adc
in
fldcw
loop
sub
cmp
jle
jnp
pop
loop
stos
mov
mov
je
ficompl
imul
push
push
add
and
jnp
push
loopne
sub
mov
stc
loop
ret
imul
lock
dec
pop
or
push
mov
add
xchg
xchg
data16
arpl
scas
pop
mov
or
outsb
mov
mov
pop
pop
cli
call
jmp
stc
mov
sub
aad
inc
lods
jmp
push
outsb
scas
jno
jmp
ds
jp
pop
and
testb
mov
push
jae
lret
insb
jnp
cmpsl
jl
push
push
sbb
push
dec
jbe
loopne
orb
or
mov
sbb
sbb
ret
sub
pop
add
bound
sub
sub
stc
inc
adc
lcall
cmp
int3
test
lock
pop
and
pop
lods
adc
pop
mov
daa
mov
push
push
dec
cmpl
or
cmpsl
jp
adc
jl
jecxz
jbe
jae
fwait
mov
cmp
adc
fdivrs
cmpb
testb
adc
lods
pop
sbb
rclb
mov
adc
mov
xchg
push
cmpsl
xor
cld
mov
lret
xor
cmp
jo
pop
stos
inc
fcom
sar
arpl
lahf
sub
loopne
fildll
and
repnz
sbb
pushf
int3
cltd
xchg
xor
stos
and
mov
cmp
out
sahf
push
andl
stc
addl
dec
js
aad
out
arpl
dec
jnp
add
sub
sbb
notl
shll
lea
repz
push
enter
stos
or
inc
out
pop
fcmovne
dec
push
xor
mov
adc
adc
test
fcoml
or
sub
ret
jno
imull
cmp
repz
jae
push
jae
xlat
inc
ret
popa
out
add
jmp
movsl
aaa
mov
jl
jae
pusha
test
mov
sbb
add
aam
mov
loopne
inc
mov
cwtl
jno
push
xchg
idivl
jno
lods
mov
cmp
hlt
insb
shll
sub
outsb
xchg
hlt
mov
fadds
mov
iret
js
or
je
push
cmp
cs
sub
loope
les
daa
jo
adc
add
dec
lcall
xor
fdivs
fisubrs
mov
dec
ja
push
int3
cli
add
aam
gs
int
test
mov
sahf
out
mov
dec
popa
push
push
cmpl
push
push
fiadds
mov
cmp
stos
dec
out
fidivs
lods
push
mov
cmp
and
popa
loop
cmpsl
pop
pop
mov
int
mov
fnstcw
mov
fildll
adc
repnz
cwtl
push
into
lods
mov
xchg
hlt
outsb
pusha
mov
sar
adc
mull
fcmovnu
pop
cmp
xor
dec
pop
mov
aas
popa
ds
pop
test
jge
test
insb
cs
adcl
sti
movsb
mov
pop
and
ret
sbb
arpl
popa
insb
xor
or
fidivs
sti
jle
imul
lock
and
sarl
dec
push
mov
push
cmpsl
jp
xchg
sub
dec
lods
xchg
push
cmp
mov
xchg
sbb
pop
int3
push
fst
add
daa
rclb
xchg
inc
out
mov
push
mov
mov
cld
push
xchg
push
adc
sbb
daa
cmp
sbbb
mov
pop
rorb
or
outsl
jecxz
pop
dec
push
xchg
mov
out
sarb
adc
nop
rol
dec
dec
add
lods
cmpsl
sahf
pop
mov
aam
push
fcoml
xchg
lret
push
jp
into
sub
mov
mov
mov
xchg
add
and
xor
inc
aam
loope
shr
mov
xchg
and
push
fs
mov
int3
lods
insl
xlat
popf
faddl
add
sbb
cmp
stc
in
add
lcall
xor
sub
outsl
mov
std
xor
ja
repnz
fdivp
mov
xchg
jo
fildl
in
daa
lret
mov
loopne
mov
xor
push
dec
jo
jne
imul
enter
jo
add
sub
and
in
mov
jle
push
and
adc
inc
sbb
das
lea
fcomps
sbb
fldl
jo
xchg
mov
push
xchg
popf
dec
sahf
out
add
xor
mov
icebp
enter
push
xchg
pop
xchg
mov
sub
jg
cli
and
leave
scas
mov
imul
dec
pop
sti
gs
mov
je
pop
fidivs
imul
mov
and
mov
es
out
add
out
push
add
push
lret
mov
push
dec
sbb
jno
into
loopne
outsl
adc
rcrb
mov
ljmp
xchg
inc
mov
mov
daa
inc
popf
add
in
xor
cmp
mov
jecxz
outsl
out
divb
pop
mov
push
lods
arpl
push
mov
hlt
mov
xor
dec
fstl
lcall
scas
loope
mov
xchg
jmp
das
fidivl
repnz
imul
cmpsb
shrl
cmpl
clc
mov
imul
clc
xchg
hlt
fucomp
and
pop
dec
repz
mov
loope
push
cmp
nop
adc
mov
fsts
les
mov
inc
jecxz
xchg
push
int3
jle
pop
mov
sti
out
inc
sub
push
add
mov
jmp
popf
pop
push
in
xchg
lds
mov
repz
decb
cmp
mov
add
xchg
pop
cli
jnp
rep
lods
ror
jne
cmp
push
popa
ficoms
cmp
adc
mov
mov
cmpsl
aaa
xorl
dec
popa
pop
pop
mov
orl
pop
pusha
jnp
gs
fiaddl
paddq
and
lret
sahf
and
js
ja
loope
repz
pop
adcb
add
xchg
mov
adc
sbb
cli
mov
arpl
cwtl
imul
lock
adc
sub
repz
gs
fwait
mov
cmp
mov
jbe
int
rolb
clc
into
adc
mov
cmp
sbb
cmp
sub
sub
fstpt
es
pushf
fs
inc
adc
std
dec
pop
push
pop
inc
dec
out
add
xor
push
je
sub
int3
mov
cltd
sub
test
leave
cmp
sti
mov
fstpt
faddl
ficoml
push
add
adc
sahf
sti
mov
push
das
cmpl
movsb
mov
pop
icebp
ss
mov
orb
gs
adc
out
imul
movsl
sub
je
jns
fdivl
sbb
insb
pop
mov
leave
inc
sbb
add
xor
and
rorl
mov
or
ret
mov
icebp
jle
adc
in
in
jbe
insl
jo
mov
testb
arpl
xor
sub
add
or
imul
fdivl
cwtl
testb
addl
pop
push
pop
insb
out
push
mov
int
js
xor
int
es
out
loopne
jecxz
push
dec
sbb
fcmovnbe
in
cmp
popf
and
mov
testb
orl
scas
dec
mov
cmp
loopne
lock
add
dec
jp
or
dec
lret
test
ret
adcb
lret
push
jecxz
dec
pop
call
pop
hlt
popf
mov
or
jp
inc
or
add
in
enter
stos
scas
enter
and
mov
adc
fwait
push
pop
and
mov
mov
sbb
add
insl
inc
scas
sbb
pop
test
out
jp
pop
mov
pop
push
flds
hlt
test
gs
sub
shl
enter
sbbl
mov
add
xor
test
movsl
cli
cmpsb
popf
jl
lcall
xor
push
or
dec
cmpb
mov
push
jmp
in
jae
cmp
and
sbb
jbe
inc
or
aad
int3
mov
xchg
cmc
cmpsb
int
aad
pop
roll
clc
adc
add
sti
imulb
in
ljmp
pop
mov
lcall
jle
dec
lret
adc
test
mov
sbb
cli
insb
daa
or
cmp
stos
dec
jno
mov
sbb
or
scas
mov
sbb
mov
repz
inc
stc
lock
push
cmp
jmp
lods
ljmp
lret
sub
int3
jg
or
jnp
pop
insl
xchg
xor
sub
arpl
out
jmp
sbbb
out
jg
cld
daa
adc
dec
test
adc
adc
jg
mov
add
sub
xchg
and
cmpsl
aad
push
and
jmp
cs
insl
loopne
mov
or
push
pop
sarl
lea
mov
das
cs
pop
aad
sqrtps
sbb
fiaddl
pop
pop
sbb
inc
xchg
sub
xlat
mov
dec
mov
mov
mov
rorb
jp
repnz
outsl
mov
push
gs
push
inc
dec
xchg
xadd
pushf
push
sub
lock
bound
jge
lock
icebp
fcompl
push
dec
clc
insl
pop
stos
push
je
jmp
dec
or
cmp
push
xchg
xlat
adcb
pop
xor
adc
loope
mov
xor
and
data16
mov
int
pop
aam
inc
jge
mov
or
addr16
cld
pop
inc
jne
popa
lcall
pop
outsl
add
pop
mov
cmpsl
jg
pop
pop
cld
ja
and
push
xor
iret
sbb
test
jno
jo
or
popa
or
lret
sti
test
mov
push
mov
adc
inc
mov
inc
cmpsl
lret
aad
leave
or
hlt
mov
mov
lods
mov
addr16
pushf
arpl
aas
int
pushf
leave
bswap
in
sahf
and
int3
mov
mov
xor
outsl
push
lods
int
popf
or
adc
ss
dec
scas
hlt
sbb
lahf
stos
sub
pop
mov
mov
lcall
enter
scas
mov
mov
popf
xor
fbstp
jns
pop
mov
jge
loopne
out
pop
popf
das
add
mov
xor
jle
xchg
push
push
std
movsl
mov
inc
or
sub
mov
daa
mov
mov
xor
popl
jmp
insb
xchg
jb
dec
lahf
test
cmp
cmpsb
cmp
pop
pop
mov
loopne
fistps
xchg
inc
lahf
mov
iret
test
lods
xor
jge
aaa
dec
fldl
push
cmp
mov
rorb
out
cmp
inc
jmp
add
data16
pop
xor
movb
xorb
loopne,pt
sub
mov
sub
jne
fdiv
ret
in
stos
jbe
rorb
repnz
lea
and
cli
sbbl
enter
repz
cltd
ficomps
mov
test
cli
or
clc
pop
push
mov
and
incl
pop
ret
in
push
sub
jmp
mov
or
addl
in
aaa
push
sub
sarb
mov
jecxz
jae
xor
in
push
movsl
add
jns
enter
add
mov
mov
adc
xchg
test
add
pop
sub
cmpps
sti
jns
frstor
subb
xor
rclw
xor
push
mov
test
mov
pop
das
loop
push
mov
fdivl
popf
int
out
inc
jge
mov
cmp
jg
lret
mov
cli
inc
int
mov
arpl
jge
shrl
daa
cmpsb
cld
cmpsb
push
mov
ss
xchg
lret
mov
lock
shl
les
mov
aas
lds
and
cmp
cld
clc
mov
lock
pop
pop
inc
gs
or
test
int3
pusha
lcall
divl
cmp
sub
sub
in
sbb
or
cld
fimuls
ds
incl
outsb
push
jecxz
out
pop
add
mov
outsb
xor
jp
dec
and
or
in
mov
jecxz
mov
adc
mov
cmp
das
push
inc
imul
stos
mov
adc
iret
icebp
ret
xchg
popa
xor
jmp
adc
out
xchg
jo
jns
or
addl
test
lock
mov
or
or
inc
popa
test
sbb
lock
sub
mov
sti
inc
pop
inc
bound
pop
xor
or
ss
fwait
inc
sub
movsl
xchg
out
mov
inc
sub
push
inc
lahf
inc
xchg
push
adc
push
repz
shll
fstps
lret
cmp
insl
bound
fbld
mov
call
call
adc
mov
mov
lds
fs
xor
dec
mov
push
add
xchg
xor
adc
xor
jae
fstpl
lret
test
jo
fisubs
jg
mov
scas
cmpsl
loope
arpl
jnp
call
in
xor
jmp
fdivl
lret
push
pushl
mov
push
or
inc
or
cmpsl
mov
andl
popa
mov
jg
nop
push
sub
inc
insb
lcall
mov
jecxz
mov
xor
inc
cs
repnz
data16
rcll
add
fdivr
mov
out
dec
sbb
mov
icebp
xchg
mov
lea
into
mov
sbb
and
test
push
xor
mov
mov
imul
adc
mov
mov
pop
enter
movsb
cmp
xchg
mov
je
push
sub
jmp
dec
jnp
mov
cmp
add
push
xor
jmp
mov
or
or
mov
sub
jg
push
enter
int
mov
sbb
mov
mov
inc
mov
pop
xor
test
std
mov
lods
lcall
loopne
rolb
adcl
mov
das
in
mov
in
xor
jmp
fstpt
aad
push
push
mov
cld
loopne
es
sub
and
in
hlt
enter
out
cmpsl
pusha
and
or
ss
xchg
mov
cmp
inc
xor
pop
sbb
cmp
lods
aam
out
push
and
repz
xchg
das
daa
jl
test
mov
cmp
push
shll
mov
std
inc
push
pop
arpl
sbb
decb
push
loope
mov
push
sub
cli
sbb
jb
dec
add
scas
push
sub
dec
movsl
pop
mov
push
mov
cmp
mov
push
mov
les
scas
pop
mov
mov
mov
in
inc
xor
xor
lea
lods
divb
cmp
add
cmp
movsb
mov
push
pop
lahf
mov
sub
rolb
inc
jnp
inc
jne
paddusb
fcoml
mov
test
push
ds
aad
ret
sarb
pusha
dec
lds
movsl
jp
jno
sub
mov
icebp
out
test
mov
scas
test
push
dec
scas
pop
shrd
stc
into
mov
and
jle
lret
fsubrl
push
sbb
sbb
pop
ja
lahf
scas
jae
mov
sahf
jb
sbb
dec
into
push
mov
jbe
mov
fwait
push
adcl
jl
push
loop
in
sti
int3
sub
shlb
jno
pop
xchg
push
or
jle
or
lea
and
adcb
pop
and
stos
adc
or
xchg
stos
out
jae
push
mov
push
lds
fwait
sbb
cmp
shrl
sbb
xor
je
outsb
dec
out
in
jg
lods
imul
pop
xor
std
adc
data16
xor
imul
or
mov
jbe
shrl
fnstsw
dec
aaa
push
push
imul
adc
test
test
cmc
mov
jmp
jae
enter
jmp
testl
mov
insl
pop
add
pop
or
orl
pop
ds
lods
dec
sti
das
das
add
aaa
inc
mov
mov
inc
cmp
sbb
ja
out
mov
cld
push
sti
data16
leave
imul
cmp
test
jns
cs
aas
lcall
stos
outsb
lret
fdivrs
lret
rol
or
repz
pop
stos
rclb
sbb
add
dec
xchg
and
cmp
mov
js
movsl
out
call
fwait
bound
call
xchg
sbb
icebp
cmp
mov
dec
insl
sbb
leave
sbb
sti
andb
in
int3
loope
filds
imul
js
or
fildl
repz
in
inc
shrb
inc
sbb
jg
cmpsb
jo
pop
xchg
addb
js
dec
imul
xor
fdivrs
addr16
int
xor
test
jmp
jbe
pop
push
mov
xchg
rclb
ljmp
mov
shl
outsl
mov
adc
fwait
mov
scas
test
out
flds
into
out
mov
fldt
daa
inc
and
and
and
push
xchg
outsb
xor
stos
mov
push
fstl
pop
imul
stos
sub
movsb
xchg
dec
sbb
rclb
lods
stos
fwait
push
xor
lahf
stos
mov
imul
inc
mov
loop
or
pop
adc
aad
bound
jmp
lret
push
lret
dec
stos
out
test
cmp
nop
out
ret
pop
daa
xor
lods
dec
jns
out
jp
fimull
cmp
sbb
mov
lret
pop
movsb
adc
mov
lods
movsl
mov
sub
inc
adc
inc
out
es
or
ret
add
outsb
fiaddl
and
in
cmp
pop
pop
enter
xchg
mov
arpl
mov
lahf
cmpsb
mov
lcall
flds
xchg
pop
dec
cmpl
sbb
sub
lods
push
dec
mov
test
outsb
clc
xchg
lahf
inc
addr16
inc
test
fnstcw
jmp
xchg
idivb
add
aas
mov
mov
hlt
bound
icebp
push
lahf
pop
jmp
push
arpl
clc
lahf
dec
int3
add
roll
dec
fisttps
shl
and
add
loop
dec
sub
pop
aas
sub
lods
cmp
xlat
lds
mov
xor
xor
mov
cmp
xor
out
cmp
dec
and
mov
mov
aam
ror
lea
add
push
movsl
shl
ljmp
mov
inc
pop
add
int
push
inc
add
int3
or
fs
insl
sbb
lock
lea
das
subl
sti
jp
subb
iret
rorl
into
adc
inc
adc
fxch
je
mov
jnp
das
imul
mov
jo
andb
rcrb
repz
ja
inc
movsl
popa
popf
repnz
sti
popa
and
shl
aas
lods
inc
das
jecxz,pn
sub
sahf
pop
insl
pop
xor
insl
or
pop
hlt
adc
mov
fildl
movntq
pop
or
jle
negl
xchg
jb
dec
xchg
imul
xchg
adc
punpckhwd
push
jecxz
mov
mov
jno
sub
lahf
cmp
mov
bound
shlb
push
mov
jo
dec
fisttps
cmp
sub
mov
sahf
adc
jb
mov
cld
inc
jo
cmp
repnz
stc
dec
push
inc
mov
popa
int
das
rorl
ja
popa
out
xor
pop
xchg
test
pop
jns
adc
push
mov
adc
and
pop
pop
adcb
xchg
xor
ljmp
adc
push
sti
test
mov
sub
sbb
fildll
or
shrb
cmpsl
pop
jp
xchg
scas
lcall
adc
adc
out
sbb
sbb
rcrb
jg
adc
sub
jae
pusha
bound
sub
jnp
insb
cltd
mov
and
sbbl
adc
bound
dec
xor
xchg
mov
test
shrb
stc
cmc
cmc
jne
cmpsb
hlt
dec
jecxz
cmp
push
fwait
xlat
push
rcr
and
fsubs
inc
jg
adc
jo
sub
dec
pop
xor
fisubrl
add
jl
test
and
fldt
popa
push
fwait
decl
mov
sbb
jno
insl
sbb
lods
xor
aam
arpl
cmp
adc
popa
xor
adc
es
sbb
mov
fs
sub
bound
sub
popf
cs
adc
or
push
call
icebp
cmp
push
lret
imulb
and
adc
mov
add
icebp
mov
pushl
enter
lods
jb
inc
int3
and
xchg
mov
inc
clc
xor
push
adcl
movsb
out
jbe
push
aas
lret
sub
out
repz
outsl
lods
aam
xchg
xchg
cli
cli
mov
lock
jle
loop
sub
pop
xor
ljmp
int
pop
stc
push
repz
xor
mov
sub
push
mov
je
testb
movl
test
call
icebp
xor
lea
add
adc
cmp
out
mov
sub
test
sub
mov
jmp
lock
out
fisttpl
jmp
insl
mov
sbb
ds
mov
fwait
lcall
or
mov
push
dec
jl
mov
xlat
inc
lret
jg
or
sarl
ds
jge
pop
into
push
dec
outsl
pop
aas
mov
xor
mov
jp
addb
pop
mov
rcrl
popl
in
sub
jbe
imul
inc
mov
dec
in
test
les
adc
aad
jns
repnz
sti
fstps
push
inc
hlt
or
popa
xchg
les
mov
int
xchg
lea
mov
xor
push
sub
dec
add
or
mov
repnz
bswap
sub
in
pusha
inc
arpl
mov
cmp
mul
cmp
push
xchg
xor
enter
cmp
xchg
pop
push
je
and
imul
lods
inc
push
mov
out
add
ret
and
or
imull
movsl
cltd
fstl
sub
inc
pop
xchg
add
test
call
dec
add
dec
mov
push
movsl
sub
xor
xchg
push
cmp
mov
in
insb
push
sbb
push
clc
ljmpw
jns
mov
cs
ljmp
imul
aad
mov
fidivl
lods
lcall
aas
aad
cmpsb
test
in
iret
clc
cmpsl
mov
cld
mov
movsl
add
scas
sbb
ds
call
cs
pop
movsl
mov
sbb
movsl
test
iret
and
arpl
orb
dec
aam
adcb
cmp
mov
push
dec
imul
in
aam
mov
push
in
sbbb
in
cwtl
xchg
lahf
mov
xchg
outsl
inc
push
enter
ja
xchg
or
add
mov
out
lcall
push
cld
sarb
out
sbb
das
popa
lret
mov
lds
lcall
in
pushf
out
mov
and
insb
arpl
ficoml
mov
push
jns
mov
out
xchg
dec
xor
hlt
pop
jo
jns
xchg
add
jnp
aam
add
inc
adc
sbb
lea
dec
cmp
jbe
ret
aad
loope
mov
addr16
enter
push
fstpt
in
sbb
pop
sbb
jg
dec
dec
xor
imul
insb
les
test
test
mov
add
push
int
jo
inc
adc
lods
call
push
hlt
je
popa
mov
sbb
pop
and
or
pop
push
mov
movsl
or
std
pop
pop
movl
mov
mov
outsb
and
xor
fwait
call
push
inc
mov
xchg
push
xchg
xchg
clc
mov
adc
sbb
sti
into
insb
jbe
leave
call
sbb
push
bound
cmc
test
imul
std
lock
fdiv
in
mov
push
ja
in
mov
push
inc
and
cmp
dec
xlat
divl
pop
add
push
cmp
call
cmp
or
fidivl
scas
lods
sbb
dec
std
ss
in
push
insb
rcrl
adc
mov
addr16
cmpsb
mov
dec
into
into
bound
lods
mov
add
cmpsl
jecxz
jns
call
lret
jbe
bound
mov
addr16
adc
inc
mov
not
jb
push
or
outsl
ds
fstpt
xchg
lcall
add
or
adc
sbb
enter
loop
pop
pop
or
cmpsb
push
adc
adc
gs
sbb
mov
xchg
dec
xor
mov
fwait
or
sbb
mov
sub
dec
gs
jl
xorl
int3
mov
ret
bound
mov
jae
flds
mov
jmp
cmp
ret
das
popa
lods
lea
cmpsl
mov
int
nop
xor
add
cmp
scas
jo
fistpll
xchg
push
rorl
add
add
pop
add
add
mov
stc
shrl
outsl
loope
mov
scas
jbe
jg
mov
fs
stos
aas
imulb
ja
popa
and
pop
aas
int3
and
int3
add
sub
notb
sub
and
mov
or
insl
aam
pop
icebp
lcall
xchg
xlat
ljmp
test
movsb
mov
or
jno
pop
dec
movsb
cmpsl
jnp
mov
fs
stos
sbb
jle
inc
stc
push
jae
add
push
pop
daa
inc
icebp
mov
cmc
push
mov
push
test
mov
es
enter
test
ret
adc
xchg
mov
fimull
jae
inc
add
stos
add
rcll
mov
cltd
pop
push
lret
lret
and
loope
sbb
push
nop
sub
mov
testb
add
addr16
xor
jbe
pop
pop
repnz
or
xchg
out
rorb
insl
hlt
fisubrs
je
or
push
and
mov
and
sub
outsl
jg
sbb
xchg
ret
loop
mov
or
in
orl
sbb
outsb
subl
lret
sub
lods
inc
pop
mov
in
ljmp
sub
js
in
popa
push
jnp
sbb
cmp
not
mov
addr16
jbe
add
fldenv
orl
nop
cmpsb
cmp
fldcw
jno
inc
pop
cmp
dec
loopne
dec
mov
or
out
xchg
insb
inc
xor
xchg
test
push
cmpsl
adc
incb
ficomps
ret
mov
lret
jl
mov
sub
jle
bound
std
fdivrs
in
nop
push
test
lcall
bound
sub
cwtl
mov
adc
jecxz
int
mov
jmp
in
add
int
sbb
add
je
sbb
sarb
jne
pop
ror
bswap
fsubrl
in
incb
fldcw
mov
inc
cmp
loope
rolb
xor
cmp
sti
lret
jns
mov
pop
xor
dec
insb
loopne
mov
rcrb
insb
daa
add
cmp
pusha
cmp
aam
cmpsb
push
imul
pop
xchg
lcall
rcrb
cmp
mov
jbe
cmp
negb
pop
jae
leave
ror
jns
nop
in
loop
pushf
jno
inc
addl
jb
mov
xchg
bt
xor
xchg
xchg
mov
das
cmp
sub
jbe
icebp
xor
out
xlat
or
jns
cld
aaa
xchg
sub
xor
data16
popf
xlat
das
mov
fwait
mov
mov
aaa
mov
dec
sub
mov
out
or
push
mov
in
cmp
test
push
aas
adc
mov
fs
jmp
mov
or
mov
fildll
je
sub
fdivr
sahf
sub
mov
sbbl
orb
js
fildll
inc
dec
or
adc
jnp
jo
and
xchg
mov
outsb
addr16
mov
lcall
iret
mov
add
sub
testb
div
jle
mov
mov
jb
jl
mov
popf
stc
mov
ljmp
out
popa
test
in
dec
or
sti
push
cmc
sbb
out
stos
icebp
cwtl
lods
push
push
inc
sbb
add
mov
pusha
cmp
mov
xchg
imul
or
fwait
mov
jae
xor
pop
dec
je,pt
roll
and
hlt
cs
ds
test
sbb
mov
in
jge
push
inc
jae
sub
xchg
jge
cmp
arpl
stos
mov
mov
jl
mov
xchg
cmp
and
lods
sbb
mov
inc
push
push
imul
js
out
sbb
push
push
ret
clc
jns
and
pop
pop
imul
xor
jbe
cmp
idivb
or
outsl
pusha
scas
je
fucomip
lret
xor
push
sub
in
cmp
mov
inc
outsl
mov
leave
jmp
or
sti
shll
jge
int3
arpl
sbb
mov
cmp
xchg
std
out
sub
in
sbb
and
adc
mov
cmp
cs
rcl
stos
or
sub
or
cmp
sbb
dec
mov
out
sbb
out
pop
fcomip
out
test
ss
or
jo
push
dec
cs
lds
mov
mov
inc
push
jmp
rclb
lds
cmpsl
cmp
add
arpl
mov
cmp
push
sbb
cltd
aas
sbb
cmp
pop
shll
cli
leave
jmp
mov
cld
lods
fwait
add
test
mov
mov
mov
and
ss
mov
js
icebp
mov
fs
movsb
mov
mov
jb
or
and
in
push
dec
nop
jne
inc
fbstp
daa
dec
int3
mov
push
pop
inc
shrb
shlb
stos
xchg
test
outsb
mov
xchg
and
mov
xchg
jmp
lret
call
mov
mov
mov
int
incl
ja
cmp
mov
adc
jns
jbe
outsb
dec
mov
xchg
outsl
cmp
mov
outsl
cmp
bound
pushf
jle
daa
mov
jmp
add
xor
add
lods
push
xchg
pop
push
sub
xchg
jae
ficomps
hlt
adc
adc
ret
icebp
ja
push
icebp
aad
inc
mov
or
push
stos
xlat
adc
inc
fcoml
jl
or
lea
mov
sbb
mov
and
es
inc
mov
repnz
fsubrs
mov
lret
pop
cmp
pop
outsb
pcmpeqd
mov
pop
push
mov
lret
dec
shll
sub
pop
pop
mov
scas
fnstsw
inc
xchg
out
mov
sub
test
xor
dec
cmp
inc
sbb
mov
cmp
call
lcall
aaa
int3
dec
mov
nop
cmpsb
stc
add
int
insl
sub
ja
and
int
sub
add
mov
push
push
jns
pop
jl
xor
jmp
loopne
stc
rcr
sahf
push
add
out
and
loope
cmp
stos
xor
cmp
mov
roll
mov
call
insb
fdivl
mov
xchg
fnstcw
ds
test
int3
les
bnd
mov
jmp
cwtl
add
sahf
lea
mov
dec
test
shlb
mov
jl
ljmp
and
mov
int
sbb
sar
adc
jae
sbb
xchg
daa
lahf
cmpsb
mov
dec
xchg
xchg
fbld
enter
add
push
xor
outsb
in
loopne
out
mov
inc
mov
adc
add
test
push
loop
mov
call
push
dec
loopne
rolb
jne
sbb
dec
sbb
in
sbb
into
pop
cltd
push
mov
mov
stc
and
call
xor
xor
aad
loop
inc
ds
dec
in
gs
cmpb
xchg
push
aam
pop
mov
push
mov
mull
lret
push
lret
mov
xlat
add
dec
pop
xchg
pop
dec
mov
inc
mov
leave
push
mov
and
adc
mov
sub
out
mov
std
es
xor
out
test
cwtl
lods
sti
push
jnp,pt
loop
test
mov
je
sub
adc
pusha
dec
dec
sarb
aad
xlat
mov
stc
shll
mov
dec
adc
sbb
pop
sbb
jp
loopne
push
lret
xor
loopne
insl
adc
pop
push
into
pop
inc
push
sub
push
sbb
sarl
sub
rcl
outsb
mov
push
jo
out
push
push
jo
das
inc
mov
cmpsl
idivb
pop
add
test
arpl
inc
cmpsb
loop
pop
loopne
add
xor
aaa
inc
lock
ret
sbb
cmp
and
add
jb
test
mov
dec
mov
icebp
js
out
mov
and
cmp
rol
pop
cld
and
push
mov
out
insl
dec
inc
rcrb
jmp
sbb
and
xchg
lods
test
lods
mov
dec
push
hlt
push
inc
cmpsl
shrb
shrd
jbe
cld
repz
inc
dec
add
mov
add
mov
add
mov
iret
xor
lods
inc
ficoms
mov
fiaddl
sub
mov
push
inc
dec
mov
pop
clc
mov
and
and
or
icebp
lret
pop
xor
sbb
adc
fstl
lods
dec
adc
js
out
rorl
dec
inc
adc
push
xor
push
and
mov
insl
insb
daa
dec
inc
ds
movsl
adc
outsb
int3
push
bound
jo
clc
push
jge
inc
xor
dec
data16
stos
xchg
jns
xor
adc
mov
dec
ds
pop
into
pop
xchg
xor
fwait
out
dec
lods
inc
js
push
sub
es
fstpt
fs
out
addl
nop
repz
das
stc
jl
and
fwait
add
in
lea
and
cmp
sbb
pop
movsb
stos
push
push
dec
xor
xchg
jbe
pop
mov
inc
xchg
hlt
xchg
xor
mov
mov
rcrl
and
adc
pop
push
sbb
pop
sub
xor
mov
lahf
mov
push
repnz
test
add
pop
dec
mov
push
push
xchg
jg
mov
lret
in
mov
imul
andb
dec
fstp
cmpb
fidivs
pop
cli
jo
cmpsb
test
xor
xlat
enter
icebp
and
dec
cmp
cmpsb
lds
popa
pushf
and
out
sbb
add
dec
in
or
fbstp
insb
out
sub
jg
xchg
mov
xchg
jle
sbb
push
stos
ret
mov
inc
mov
pop
or
mov
sbb
stos
sub
test
xor
orl
sti
jbe
pop
or
arpl
ljmp
fs
push
jae
jnp
or
adcl
add
fs
mov
sub
loope
repnz
jge
lds
xchg
aaa
inc
out
lods
sub
insb
sbb
xchg
mov
lods
orl
add
pop
pop
icebp
test
jbe
add
loop
xor
xchg
in
adc
mov
cwtl
adc
push
shll
stc
mov
cmp
call
mov
pop
sub
cld
aaa
push
repnz
repnz
xor
sbb
popf
add
pop
out
xchg
adc
inc
push
mov
popf
lcall
aad
mov
jae
mov
or
xchg
fwait
mov
gs
adc
inc
ret
aas
sbb
mov
imul
std
rcrl
mov
mov
adc
mov
cmp
sub
adcl
sub
je
push
and
pop
adc
add
mov
lea
repnz
call
jbe
push
mov
daa
add
xchg
test
and
jp
pop
cmp
and
sti
adc
stos
in
ret
movsb
mov
incl
sbb
dec
jnp
sbb
or
add
sub
outsb
inc
imul
lret
sub
hlt
in
subl
mov
fiadds
das
mov
mov
stc
cmp
xor
rol
icebp
or
sub
sub
mov
out
push
test
in
push
sub
jp
mov
js
test
sbb
lods
push
inc
iret
dec
jnp
xor
imull
test
sub
stc
arpl
shll
mov
mov
and
imul
adcl
aad
inc
mov
aam
inc
cmp
or
push
scas
mov
into
out
repnz
iret
pop
loop
xchg
adc
jo
in
mov
imul
push
movsl
repz
shlb
cli
dec
mov
mov
sub
bound
fcmovu
jmp
pop
cmp
lret
jbe
or
in
rolb
cld
scas
cld
dec
stc
or
lock
jecxz
xor
sbb
add
fwait
or
outsl
fdivr
rcll
icebp
cs
fisubrs
mov
mov
lods
adc
repnz
bound
push
arpl
inc
stos
mov
das
dec
push
sbb
jne
mov
cmp
cs
push
inc
hlt
addb
push
jnp
mov
dec
mov
xor
fucomp
jmp
push
outsl
insl
lcall
ljmp
dec
insl
sbb
sub
clc
ret
sbb
sbb
xor
mov
int3
sub
cmp
in
mov
push
dec
fstp
es
popf
movsb
cmp
mov
fnstsw
push
sub
icebp
sub
cmp
xchg
outsl
lock
sti
jo,pn
mov
push
fimuls
rorl
fstps
jl
aad
jp
mov
xor
add
repnz
mov
dec
jbe
xor
jo
mov
adc
mov
jb
rcll
mov
jle
arpl
push
dec
inc
mov
pop
cmp
jne
push
push
pop
jmp
bound
clc
xchg
lcall
aas
js
into
pop
mov
lock
shlb
mov
sub
clc
inc
test
lahf
and
lret
inc
and
hlt
stc
add
pop
icebp
jge
lds
out
aas
imul
test
xor
mov
ljmp
jl
pop
xchg
jg
je
data16
popa
fidivs
pop
or
xchg
roll
push
pop
jns
hlt
mov
xchg
and
jp
jne
es
insl
xchg
jl
adc
and
xor
jns
roll
inc
cmc
mov
sbb
cmp
jge
lods
insb
xchg
les
fisttps
mov
or
scas
sbb
mov
adc
aaa
sub
inc
cmp
and
pop
sar
or
mov
sub
sbb
pop
jnp
loope
xchg
iret
inc
push
std
or
int3
mov
inc
cmp
xor
mov
out
pushf
insb
dec
rclb
and
cmpsl
mov
fnstsw
mov
push
incb
inc
pop
push
or
jbe
xchg
mov
sbb
and
pop
arpl
fisubs
add
aas
sbb
iret
and
xchg
cmp
mov
jns
shrl
mov
clc
xchg
cld
xor
xchg
adc
cmp
roll
insb
jo
xchg
mov
mov
cmp
adc
jg
lahf
invd
xor
cmp
sub
js
or
popf
out
aad
mov
insl
pop
push
ret
js
mov
add
pop
xchg
push
into
sti
fdivl
mov
in
pop
adc
test
xor
loop
fisubrs
insb
add
clc
movl
add
adc
test
leave
out
es
movsb
cmpsb
fstpt
call
jns
stos
sbb
jne
aas
lahf
mov
movsb
rcll
adc
lods
adc
mov
mov
adc
outsb
scas
cmc
jmp
sbb
dec
lock
mov
dec
mov
push
inc
inc
aaa
inc
repz
movsl
hlt
mov
decb
or
cmovp
out
and
stos
negl
mov
int
test
dec
xor
xchg
scas
jmp
jmp
push
and
add
cli
push
lock
lcall
sbb
xchg
cltd
rorb
test
imul
clc
mov
cmp
jl
mov
dec
test
cmp
insl
cmpsb
add
scas
rcrl
inc
js
jns
imul
xchg
enter
movsb
mov
push
and
mov
je
fwait
sub
iret
cmpsb
adc
stc
push
mov
js
jae
add
cmc
sub
sub
mov
xchg
jbe
stos
fisubrl
adc
xor
ljmp
dec
out
or
dec
sti
mov
mov
inc
pop
sahf
mov
sbb
sub
sub
mov
cli
cwtl
jnp
xor
sbb
dec
xor
fnstcw
gs
jg
push
movsl
add
xrelease
out
out
insb
jg
popf
adc
or
lcall
and
out
in
xor
jp
jo
push
or
outsb
jne
pop
pop
xchg
jmp
movsl
out
jo
mov
pop
jp
out
scas
sbb
pusha
mov
insl
imul
sbb
cmp
cs
adc
test
lea
jno
pushf
rorl
add
shrl
push
bound
ja
sbb
hlt
into
scas
in
sbb
aaa
sbb
imul
pop
pop
js,pt
push
xlat
xor
cmp
mov
add
movaps
pushf
push
addr16
xchg
mov
fbld
mov
fistl
mov
sub
jmp
xchg
loope
cmp
rcll
ja
jnp
push
fsts
in
jmp
lock
cld
sbb
add
adc
dec
mov
lcall
lahf
xchg
mov
mov
fisubrs
cld
scas
std
sbb
xorl
pop
jle
lods
fidivrs
xchg
jmp
inc
fisttpl
sbb
aad
ficompl
mov
jno
fstl
mov
inc
or
fidivrl
nop
pop
dec
lcall
repz
or
andl
shl
mov
push
adc
push
ds
or
icebp
push
add
dec
icebp
sbb
test
mov
movsb
cmpsl
add
in
mov
xchg
mov
lods
pop
or
xchg
jo
inc
push
aaa
inc
push
nop
pusha
testb
in
sub
repz
jnp
push
call
sbb
push
aad
xchg
dec
lcall
imul
mov
aam
fisttpll
inc
shlb
push
or
mov
not
sbb
jge
or
inc
cmp
fisttpl
mov
loope
popf
repz
js
js
and
in
mov
and
movnti
jecxz
lcall
adc
xchg
mov
and
loop
inc
push
jnp
pop
fistps
xchg
rorb
jno
out
push
mov
sbb
sub
jae
cmp
je
movhps
movsb
cltd
push
push
sub
aas
dec
or
stos
pop
call
fcmovnbe
xchg
mov
mov
adc
fcoml
xor
lea
and
cli
pop
div
aam
mov
movsl
mov
adc
mov
and
push
push
sbb
enter
jae
popf
insl
inc
and
mov
out
clc
cmp
inc
or
pop
fnstenv
mov
jl
cmp
out
pop
dec
dec
daa
jg
shrl
adc
fmul
mov
pop
in
mov
mov
push
into
push
and
lahf
mov
and
and
movl
mov
das
mov
push
lods
pop
rolb
sub
cwtl
pop
add
sub
adc
in
in
dec
mov
loop
or
add
cmp
jle
xor
adc
mov
xchg
in
jb
jp
or
mov
bound
mov
fstpl
add
aam
xchg
mov
fists
xchg
aas
and
fmuls
sbb
mov
pop
das
pusha
xor
sbb
and
fldcw
fwait
stos
push
push
mov
aam
mov
ss
add
hlt
ss
movsl
xor
xchg
mov
xchg
movl
inc
add
sub
and
jmp
sbb
fcomps
push
rcrl
mov
stos
in
cmp
mov
jg
lahf
into
pop
and
inc
mov
mov
hlt
push
inc
es
outsl
dec
push
and
adc
add
mov
dec
icebp
inc
xchg
lods
mov
popa
fsts
xchg
push
pop
les
out
shl
out
sbb
mov
mov
lods
in
int
jae
int3
rorl
popf
cli
in
imul
jae
adc
inc
inc
mov
mov
inc
int3
ds
mov
cmp
dec
fmull
xchg
ljmp
adc
and
jmp
addr16
mov
adc
enter
jge
sub
sub
mov
inc
cmc
or
cmp
sub
sbb
pop
and
inc
mov
or
or
push
cs
popf
repz
fcoml
cmpsl
loopne
push
out
cmpl
and
imul
nop
repz
and
cmp
cmp
mov
iret
xchg
scas
push
push
mov
movsb
and
jno
fs
xlat
fidivrs
ljmp
dec
daa
mov
pop
sarb
js
pop
push
sbb
inc
mov
rcrl
mov
mov
push
cwtl
imul
imul
lea
dec
push
adc
movsl
pop
sbb
das
pop
xchg
jae
sahf
lret
push
add
sub
aam
push
scas
flds
aaa
out
or
jns
push
lods
lcall
fxch
aad
dec
lcall
add
in
dec
inc
and
mov
nop
in
xor
push
adc
in
dec
movsl
setp
xor
movl
aas
sub
xchg
xor
lcall
adc
and
je
mov
ret
push
aas
int
orb
into
and
xchg
aas
push
mov
adc
adc
bound
testb
inc
js
add
adcb
lret
cltd
out
lea
test
out
lea
jb
dec
adc
sbb
lret
push
int3
gs
xor
xchg
insl
lret
jmp
pop
lock
pop
adc
adc
push
sub
or
pop
dec
or
lea
test
push
or
add
dec
push
mov
add
xor
rolb
mov
clc
out
dec
stos
das
lahf
sbb
rcr
aas
inc
sahf
repnz
mov
pop
daa
xor
shlb
or
xor
xchg
in
test
jle
and
inc
scas
lret
in
adc
addb
sub
sbb
lahf
iret
movsb
test
mov
mov
in
sub
jl
push
jle
call
xor
test
fimull
fiaddl
inc
push
push
cmp
sarb
or
outsb
arpl
adc
sarl
out
cwtl
fwait
shlb
test
shll
iret
cmp
inc
std
push
cmc
mov
push
push
and
dec
imul
call
arpl
in
in
in
shrb
lret
inc
outsb
push
aas
jne
mov
and
or
jecxz
mov
and
pop
idivl
dec
mov
add
jnp
fsubrl
mov
daa
cmp
shll
and
mov
leave
shlb
pushl
jmp
add
icebp
and
inc
push
clc
jae
and
gs
sbb
mov
push
cmp
testb
ljmp
ret
and
sub
push
fs
add
rolb
or
dec
stos
jo
lret
fs
xor
adcb
mov
rol
pop
or
addr16
test
xor
inc
cld
je
adc
push
or
mov
cmpsb
mov
pop
dec
je
jnp
cmpsb
adc
loop
mov
dec
mov
sbb
lock
lock
js
out
rcll
or
xchg
add
addb
aad
lds
lahf
mov
xchg
jg
cmp
inc
fistpll
in
daa
or
cmc
je
shlb
insl
ret
movsl
mov
jns
mov
addr16
add
push
lods
int3
iret
push
popa
xchg
jno
dec
out
inc
xchg
adc
fdivl
or
mov
arpl
cmove
pop
mov
xchg
or
add
mov
vmwrite
push
lea
jg
pop
cwtl
jno
aaa
dec
ljmp
sub
push
fdivl
and
dec
scas
ret
dec
dec
dec
repz
sbb
pop
xor
fistpll
stos
ret
or
mov
fildll
add
aad
and
clc
movsb
rcr
push
jecxz
inc
out
xor
clc
inc
ds
jne
xor
or
mov
add
cmpsl
std
fcomps
std
mov
or
lods
or
lds
int3
jne
insl
jl
xchg
dec
popf
pcmpgtw
cmp
ret
push
mov
fldenv
imul
and
adc
or
jb
sub
mov
mov
hlt
and
inc
push
das
xor
out
movb
add
jge
iret
outsb
cld
xor
cmc
popa
mov
push
mov
sub
sbb
mov
push
inc
mov
mov
jmp
add
shl
das
dec
mov
adc
sarb
mov
pop
pop
mov
xlat
test
push
xchg
stc
xchg
pop
add
push
xor
xchg
mov
fbld
stos
lret
add
fsts
ss
lret
fs
push
ja
loope
cmc
pop
sti
lcall
aas
sbb
mov
push
and
sub
inc
mov
mov
inc
sarl
jnp
cld
sub
pop
test
popa
jb
shll
lods
xlat
dec
mov
pushf
pop
xor
or
movsb
mov
loope
idivl
in
pushf
das
mov
ja
mov
xor
pop
adc
xchg
dec
lock
jp,pt
mov
repz
mov
mov
in
or
push
xchg
and
stc
imul
idivl
das
push
mov
lahf
push
inc
xor
popf
mov
mov
stos
clc
das
lds
push
and
cmp
stos
in
pop
inc
enter
xor
push
mov
jns
jb
xchg
bound
jo
sub
dec
dec
xchg
mov
adc
shrb
mov
outsl
jge
ret
clc
aad
sbbb
push
mov
add
in
jl
cmp
push
sbb
enter
insb
mov
add
idivl
mov
push
adc
in
mov
lret
or
cmp
test
jmp
and
pop
sub
or
repnz
pop
imul
test
jle
fcoms
push
and
or
or
xchg
aam
mov
inc
into
mov
nop
imul
xchg
adc
xor
push
in
jne
and
jne
subl
ret
xchg
dec
and
lods
lds
popf
jl
xchg
sti
outsl
pusha
imul
gs
xchg
push
sbb
jae
or
fistl
jno
les
into
loop
mov
lods
pop
pushl
mov
xor
pusha
in
fstps
lds
loopne
xor
stc
scas
daa
mov
das
mov
pusha
repz
filds
movsb
xor
pushf
jo
pop
add
in
div
push
call
int
mov
inc
xor
adc
xchg
lds
inc
vmovntps
mov
es
fabs
lret
fcomip
in
ljmp
and
pop
jl
aaa
mov
imul
test
jp
sub
test
cwtl
xor
adc
push
xchg
and
or
in
fwait
push
jb
not
mov
mov
arpl
inc
ret
push
push
lret
ljmp
cmp
cmc
pop
pop
fstl
adc
xor
dec
sbb
and
stc
and
xor
sbb
dec
or
insl
sub
lock
push
adc
imul
xlat
sbb
in
mov
enter
xchg
cmpsl
testb
mov
mov
fs
lret
outsb
sbb
add
cld
jmp
mov
jne
je
inc
xchg
fisttps
xor
sub
loopne
bound
cmc
fs
jmp
push
inc
in
mov
mov
std
mov
push
or
mov
insl
sti
ljmp
sarb
push
test
jnp
or
outsb
and
hlt
and
and
jle
js
add
stos
adc
ljmp
jp
sub
pop
jo
ret
roll
outsb
inc
add
inc
arpl
add
push
ret
or
mov
add
testl
adc
lret
mov
jbe
inc
cmp
mov
push
pop
sbb
mov
fnstsw
mov
cwtl
cmp
cltd
sbb
or
notb
or
imul
gs
jmp
mov
pop
mov
mov
aas
and
mov
popa
shl
fwait
adc
insl
idiv
lret
mov
pop
ss
pop
jnp
xchg
pop
stos
xchg
mov
cs
dec
xor
mov
adc
lcall
lods
mov
jecxz
lds
lock
sbbl
or
jb
in
fxch
xchg
lea
and
popa
ljmp
jb
mov
mov
pop
adc
lahf
and
aam
sub
in
repz
jo
jle
outsb
call
in
pop
lea
xor
out
mov
out
mov
push
mov
jle
ffree
inc
adc
ret
sub
repnz
imul
jnp
xchg
mov
dec
fiadds
gs
lock
jmp
in
shll
out
add
jl
adc
mov
fistpl
adc
faddl
cmp
js
pop
mov
mov
adc
pop
mov
and
dec
fisubrl
imul
mov
popf
cmp
inc
loopew
add
xor
mov
aas
negl
push
and
faddl
cld
dec
jge
ljmp
xchg
les
cwtl
jb
cmp
pushf
inc
mov
iret
je
jg
lahf
call
fs
sub
mov
mov
xlat
and
mull
mov
sbb
pop
loop
mov
insb
std
and
xchg
push
adc
dec
rolb
xchg
nop
std
xchg
or
aad
mov
testb
mov
push
mov
jge
in
mov
into
pop
pop
das
fidivrs
dec
ljmp
inc
fldenv
int
sbb
call
lds
ljmp
push
mov
mov
fwait
or
pop
fimuls
jecxz
adc
mov
jp
hlt
mov
hlt
in
dec
jno
insb
inc
out
insl
jg
filds
sbb
call
cmc
push
cld
inc
push
cmp
xchg
jge
xor
xchg
cmp
xchg
outsl
xor
stc
xchg
lret
inc
sub
dec
mov
sbb
cmc
xchg
mov
out
add
or
in
in
lret
or
ss
mov
std
push
inc
inc
ss
jp
out
pop
hlt
or
mov
inc
mov
inc
repz
out
cmp
mov
jae,pt
hlt
or
pushf
inc
and
mov
lret
mov
mov
xor
add
popf
jns
push
cltd
mov
lock
jns
in
cld
js
sbb
xorl
pushf
xor
mov
adc
insb
or
bound
mov
pushf
movsb
adc
lock
dec
pop
or
test
fsubr
mov
add
mov
movsb
movsb
stc
push
lds
out
data16
xor
rcrb
push
idivl
push
cld
movsl
mov
fwait
sarb
not
mov
cmp
dec
or
pop
mov
push
scas
icebp
sarl
mov
dec
rol
push
repz
inc
push
sahf
ds
jl
movsb
cmpl
mov
mov
adc
mov
hlt
mov
in
popl
push
movsl
add
xor
aas
stos
fcmovu
xor
jns
enter
xorb
sub
nop
mov
in
inc
xchg
mov
mov
fwait
lcall
int
xor
aad
ljmp
mov
cmp
mov
mov
xor
jbe,pt
pop
dec
sbb
add
inc
clc
push
mov
mov
pop
or
or
sbbl
fistpl
fcomps
xchg
and
les
or
shrl
sbb
nop
add
cmpsb
iret
fists
mov
repz
push
sub
xor
push
out
xor
inc
rcr
pop
jae
test
lcall
leave
jno
in
xchg
iret
gs
xchg
out
and
sbb
sbbl
add
pop
adc
ja
outsl
sbb
sub
pop
pop
jbe
jge
loope
or
sbb
fwait
dec
iret
mov
pop
dec
lcall
fdivrl
mov
fcompl
lret
sbbb
iret
test
leave
dec
out
jle
scas
test
and
les
inc
gs
ret
xor
add
incl
cmp
test
inc
xchg
insb
test
jne
pop
cmp
cmpl
fisubs
ret
and
test
pop
jo
outsl
je
push
ret
jg
call
sti
inc
mov
addb
stos
mov
push
pushf
aad
and
mov
mov
mov
cmc
mov
and
lock
sahf
lret
cmp
add
in
mov
xchg
outsb
fidivrl
loopne
mov
adc
je
pop
lret
fnsave
ficoml
dec
mov
jne
mov
jbe
mov
adc
jnp
and
jmp
mov
loopne
adc
and
dec
fadds
std
mov
iret
hlt
mov
pop
int3
xchg
fldenv
shrd
inc
jl
addb
sub
mov
fcompl
loop
mov
lahf
mov
je
jbe
cmp
push
pop
push
mov
addr16
cltd
mov
rclb
cmp
pop
mov
pop
sbb
pop
stos
xchg
sbb
inc
outsl
repnz
aam
dec
stos
sbb
mov
test
mov
mov
jmp
popa
movl
jno
outsb
fcoms
jl
xor
movsl
inc
lret
push
cmp
or
sbb
lcall
lcall
jge
out
or
in
fbld
jo
pop
lret
divl
cli
hlt
xor
hlt
les
lret
inc
hlt
push
subl
lds
js
xchg
or
int3
pop
push
jns
test
sahf
ret
cmp
lods
xor
mov
std
jbe
xchg
imul
filds
xor
lock
mov
shlb
push
inc
mov
popf
jle
and
xchg
or
jne
hlt
adc
sarb
ret
mov
je
mov
cmp
je
lods
or
pop
mov
sub
or
popf
push
std
inc
ss
loope
arpl
sub
cmp
or
jmp
bound
icebp
adc
xchg
sahf
ret
sti
or
int
pusha
clc
out
in
mov
sbb
adc
add
dec
xchg
int
push
mov
pushf
add
cmpsb
int3
push
pop
in
mov
popa
xor
movsl
push
inc
scas
cmp
movsb
nop
dec
sub
out
idiv
ret
bound
or
push
nop
mov
daa
sti
or
pusha
arpl
and
push
inc
pushf
flds
scas
lret
xchg
les
xchg
sbb
sub
lea
mov
add
test
repz
jp
dec
test
sbb
mov
inc
outsl
cmp
inc
daa
adc
jl
mov
aaa
mov
xchg
mov
push
mov
hlt
adc
and
fadd
pushf
sti
push
imul
adc
rclb
fwait
in
jno
mov
gs
out
push
mov
movsb
lea
add
shrl
jno
mov
xchg
dec
fstpt
adc
shl
push
inc
jns
scas
jecxz
pop
scas
or
shrb
sbb
cmp
mov
xchg
inc
fsts
pop
movsb
lahf
push
dec
aam
in
jg
test
pop
fwait
jmp
insb
negl
add
orb
and
pop
or
push
dec
into
or
insb
dec
xchg
and
jp
mov
aas
stos
or
out
pop
jbe
inc
jae
add
push
add
xchg
cwtl
xor
lahf
push
daa
stos
push
mov
lock
aaa
lock
pop
xchg
addr16
loope
mov
sub
push
cmpb
jle
push
sbb
cs
cmpsl
imul
sub
pop
shlb
ret
sub
push
sub
xchg
xchg
out
cmpsb
xlat
mov
leave
adc
dec
ss
call
xor
cwtl
lret
sbb
fildll
stos
pushf
jo
pop
push
je
jnp
jns
xlat
fisubrl
popa
or
jle
mov
mov
fadds
stos
jo
loopne
xchg
or
jae
xchg
punpcklwd
insl
sub
aas
sbb
sub
jno
add
std
movsb
pop
jb
mov
adc
adc
movsb
lock
xchg
int
jecxz
imul
popf
addr16
inc
sbb
mov
fidivrs
rclb
inc
inc
add
push
or
in
lcall
cmpsl
xor
jns
stos
int
sbb
rorb
daa
lahf
icebp
xchg
mov
ljmp
pop
pop
pop
adc
xor
aad
push
ja
push
xchg
ljmp
aaa
mov
xchg
loopne
int
imul
mov
sbb
es
dec
mov
je
leave
mov
lds
adc
mov
ljmp
in
xor
fcom
ffree
enter
bound
sbb
fwait
cmp
bound
ret
xchg
out
test
rorl
lods
repnz
decl
call
pop
iret
ljmp
jne
lods
shll
ret
cli
push
cltd
insl
xor
int3
xchg
inc
xorb
sub
out
andl
mov
loop
xor
cltd
push
and
enter
subl
and
or
pusha
and
ret
inc
outsl
cltd
push
dec
push
sub
shrl
xchg
aaa
jns
fisubrs
das
add
jle
mov
cmp
mov
scas
jle
jmp
pop
ja
jo
ret
and
aas
mov
jle
jns
aam
roll
and
add
es
leave
in
xor
jmp
aam
push
cmp
push
sarl
jne
ret
ljmp
push
mov
sahf
cmp
xor
add
lea
shlb
xor
dec
in
dec
lcall
and
cli
dec
es
and
repz
shlb
mov
sub
xor
cmp
test
mov
ds
sbb
in
iret
mov
divb
fmull
pop
fidivl
push
les
pop
mov
rcr
xchg
or
add
hlt
xor
or
inc
mov
lock
sbb
jg
mov
xchg
dec
leave
push
enter
std
out
lahf
stc
jle
mov
jae
xor
arpl
sub
lahf
hlt
inc
mov
pop
xor
add
xchg
lret
sbb
ds
movsl
push
stos
test
imul
mov
loopne
mov
dec
fimull
loop
fs
dec
xor
mov
mov
mov
sti
rorl
das
dec
fiaddl
test
icebp
jns
and
enter
lock
outsl
out
fwait
xor
mov
hlt
shl
pop
int3
outsb
rclb
leave
fimuls
movsl
jnp
popa
cmp
cld
bound
test
xchg
xlat
mov
aad
inc
jbe
loopne
repnz
lods
mov
imul
inc
mov
loopne
pop
shr
jge
popa
test
add
sbb
mov
int3
cmpsl
jge
shlb
lods
adc
mov
mov
push
sbb
jle
popf
push
mov
flds
sbb
fdivrl
jmp
xor
sbb
inc
stc
inc
lcall
in
add
mov
into
test
sbb
outsl
mov
in
pop
sbbl
adc
cmpl
add
jmp
rclb
mov
dec
test
xchg
ja
repnz
inc
jae
cmp
fnstcw
xlat
xchg
jmp
clc
adc
test
jno
pusha
xchg
addr16
add
cld
shrb
pop
cmp
jns
out
js
adc
out
dec
mov
push
out
mov
pop
repz
arpl
repz
aas
or
cmp
jnp
cmp
ja
dec
sub
add
shll
leave
inc
cmpsl
inc
mov
jo,pn
mov
cltd
int3
xchg
stos
lret
pop
int
js
cmp
dec
jp
and
adc
imul
shr
mov
inc
shrl
fwait
and
push
mov
nop
inc
pushl
mov
jp
ljmp
adc
jecxz
cmp
jno
out
aaa
inc
outsl
xlat
push
dec
out
cmc
dec
sbb
push
inc
test
fcomp
mov
xlat
daa
pop
sub
sbbl
test
outsb
cltd
sbb
ret
roll
arpl
adc
push
mov
pop
sbb
dec
push
repnz
sbb
aas
jbe
sub
mov
stc
mov
mov
mov
cmpsl
test
ret
call
incb
jmp
inc
xchg
jo
subl
dec
lods
into
call
push
dec
imul
lds
cmpsb
or
movsb
scas
sbb
xor
mov
jne
repnz
mov
xchg
or
xor
iret
xchg
ds
not
iret
and
fwait
das
xchg
stc
daa
sbb
pop
mov
mov
adc
out
sbb
mov
sub
xchg
repz
dec
int
inc
sbb
stc
int3
rcl
add
bound
push
inc
dec
cmc
fwait
bound
jns
aam
xchg
xchg
fisubs
push
and
mov
dec
sbb
mov
icebp
mov
pop
lods
into
push
jae
adcb
dec
sub
and
test
hlt
in
movsb
push
mov
ja
mov
cmpsb
daa
repz
pop
in
ds
das
testl
adc
leave
popf
das
adcl
sub
adc
outsl
out
dec
in
nop
mov
mov
arpl
pop
mov
jp
xchg
mov
cmpsb
fs
dec
ror
xchg
mov
test
out
push
movsb
fmull
xor
add
test
test
push
jmp
or
jnp
mov
cli
jl
addr16
mov
dec
sahf
outsl
xlat
fstpl
pop
in
sub
jne
cmp
cmpsb
push
inc
hlt
movsb
adc
jecxz
pop
outsb
repnz
and
sbb
out
addb
sbb
mov
adc
and
sahf
cmp
test
mov
push
addb
cmp
push
jae
jae
inc
lahf
xchg
cltd
dec
add
mov
sub
push
pop
dec
mov
pop
dec
dec
dec
test
mov
push
cmp
pop
arpl
shll
iret
aas
sub
cmc
inc
inc
push
mov
icebp
mov
rol
jmp
jmp
inc
add
xchg
and
cmp
xchg
popl
fsubs
lock
sahf
and
daa
addr16
add
push
push
mov
lcall
test
mov
xchg
dec
or
xchg
js
pushf
jg
sub
jl
cmp
push
jecxz
jne
iret
lret
aad
cwtl
xchg
outsb
xlat
invd
adc
add
xor
movsb
adc
jne
mov
sbb
insb
push
and
dec
cmpsb
loope
pop
das
adc
inc
dec
jnp
testb
sbbb
in
xlat
out
pop
cmp
xchg
icebp
cmp
mov
inc
dec
bound
sub
into
jge
outsl
dec
fidivrs
add
mov
jae
add
and
lret
push
push
js
sbb
sub
or
out
dec
mov
mov
push
add
mov
inc
cmpsl
or
pop
and
ret
sbb
das
movsb
sub
sbb
mov
sbb
mov
mov
add
xor
loope
leave
or
mov
dec
push
sub
jno
jne
lods
out
dec
lods
or
rclb
mov
sub
loop
fwait
jo
mov
fstps
and
out
dec
adc
cwtl
dec
push
imul
shlb
and
mov
sub
ja
or
in
jnp
ret
push
setp
out
and
into
add
jns
dec
cs
and
lret
lods
pop
cld
in
mov
int
loop
sbb
xor
add
dec
insb
adc
repnz
adc
dec
push
je
pop
xor
mov
pop
mov
push
mov
popa
sbb
repnz
add
or
jne
pusha
push
dec
addr16
sbb
fcmovnu
iret
imul
jecxz
cmp
fsubr
les
jmp
mov
or
dec
xchg
aas
loop
popa
jecxz
xor
push
mov
sub
mov
jmp
mov
mov
clc
adc
stos
xor
loope
push
cltd
mov
cmp
data16
fwait
call
test
dec
dec
in
dec
sbb
ljmp
jp
xor
call
aaa
int
int3
rcrb
pmulhw
xlat
ss
lods
jb
or
fdivrs
cmp
jb
repnz
sarl
xchg
out
out
cmpsl
and
dec
fsubrs
jge
mov
push
xchg
lea
stos
out
gs
femms
mov
das
mov
add
mov
fistpl
aad
insl
fdivrl
inc
mov
scas
cmp
icebp
rclb
cmp
and
pop
clc
dec
out
push
movsl
mov
loop
shlb
lcall
clc
int3
ss
jns
adc
cmp
inc
pop
add
push
jns
sub
cmp
loop
sbb
test
popf
cmp
cmp
lock
and
jmp
daa
or
bound
sbb
jno
push
shr
push
ret
pop
leave
mov
xchg
dec
sub
cmp
cmp
rcrl
sub
ss
push
out
lret
out
lcall
push
mov
in
inc
ljmp
in
shl
xor
push
xor
cmpsl
in
dec
mov
dec
std
loope
pop
loope
sbb
or
sub
sub
jbe
mov
mov
pop
sbbl
sar
jmp
lcall
xlat
insl
movsb
jno
scas
add
pop
mov
shlb
inc
push
into
out
lahf
rorl
pop
ds
and
aad
jnp
pop
sub
fdivrs
mov
dec
jle
into
xchg
mov
adc
mov
mov
aas
sbbl
sbb
pop
out
into
int3
imul
or
mov
in
sti
hlt
sub
stc
pop
lods
inc
adc
sbb
xor
sbb
in
and
xor
xchg
jge
lret
or
loope
mov
jns
xchg
push
dec
imul
xchg
xchg
push
sub
sbb
adc
mov
outsl
call
fwait
xchg
int3
out
mov
or
stos
push
pop
cltd
pop
mov
out
push
repz
cmpsl
mov
push
or
mov
outsl
in
hlt
xchg
xor
inc
cld
popa
jb
pop
andl
and
ss
and
jae
xor
int3
sub
push
sub
imul
xchg
cmpsl
lods
stos
push
cmp
ja
and
int
inc
ffreep
fdivrl
adc
hlt
int3
int3
aas
insl
lods
addr16
cmp
nop
in
fisttpl
jl
daa
inc
inc
nop
push
and
orl
dec
sbb
push
xor
push
int3
ljmp
loope
mov
ret
xor
mov
xchg
xchg
mov
popa
pop
test
xor
mov
shl
stos
decb
loopne
addl
fsubs
dec
mov
xor
xor
or
inc
scas
pop
cmp
lahf
jne
cmp
xchg
mov
out
and
es
cmp
ds
mov
jnp
orb
sub
mov
mov
mov
scas
popf
jns
xchg
cmp
mov
push
mov
push
fbstp
mov
stos
decb
loope
cs
mov
ja
insb
std
clc
pop
adc
jmp
addr16
dec
sbbl
repnz
adc
dec
shrb
out
out
fildl
js
lea
sbbl
cmpxchg
xchg
add
xlat
ret
inc
push
jno
add
int3
cmpsb
pop
ds
mov
xchg
or
xchg
sub
or
adc
sub
repz
mov
xor
data16
daa
mov
fsubrl
and
inc
fs
out
cld
inc
inc
mov
out
jo
ljmp
pop
aas
jmp
push
lahf
fdivrs
in
xchg
mov
mov
cwtl
adc
mov
lods
cld
scas
or
xchg
iret
mov
adc
inc
mov
push
aam
out
ja
sbb
jmp
das
adc
mov
xor
cmp
rcrb
out
clc
imul
dec
movsl
inc
out
or
rcrl
sahf
ljmp
push
sti
jp
push
xchg
and
rclb
pop
jo
or
std
stos
mov
or
push
add
dec
jmp
insb
mov
daa
jbe
scas
ja
mov
adc
stos
push
dec
rep
cmpsb
sbb
aaa
cld
adc
xchg
out
xchg
inc
scas
add
mov
mov
and
dec
dec
cmpsl
xor
add
mov
pop
mov
test
loope
popa
pop
push
lret
lods
jns
lods
les
inc
mov
call
popf
pop
push
and
sahf
push
mov
stos
dec
loopne
outsb
das
popf
xchg
sahf
mov
pop
pop
int3
jb
mov
add
push
lcall
leave
dec
lods
mov
xchg
rolb
in
lods
sbb
rorl
jmp
inc
cmpsl
call
ljmp
std
test
and
adc
ficomps
icebp
push
in
dec
out
fnstcw
and
fbstp
xchg
shrl
dec
inc
xor
aam
sahf
mov
inc
xlat
jg
sub
cs
jnp
aad
push
nop
mov
xlat
bnd
popa
test
cli
dec
mov
xlat
mov
jo
cmpsl
fldl
cmp
mov
xchg
mov
dec
pop
je
cmp
or
insb
imul
sti
mov
jecxz
mov
cld
popa
push
add
mov
add
stc
push
mov
inc
pop
arpl
sub
push
fcomp
sbb
pop
imul
popa
mov
dec
movsl
cmp
mov
jo
jns
out
and
jnp
cmp
mov
sub
call
mov
push
hlt
ja
aad
jne
xor
cmc
pop
lock
push
lahf
xchg
lock
mov
add
test
jg
cmp
adc
sti
pop
xor
je
rorb
fcomp
xchg
jne
sub
pop
dec
mov
imul
push
mov
jne
repnz
sbb
xor
dec
hlt
adc
push
jb
into
cmpsl
sbb
shll
lods
adcl
inc
sbb
cmpl
cmp
mov
cmpsb
jbe
pushl
mov
mov
ds
pop
push
pop
lods
push
sub
mov
add
dec
arpl
mov
sub
es
lcall
push
xor
jmp
call
lock
stos
mov
jmp
pop
icebp
pushf
mov
pop
test
shlb
pop
pop
inc
ds
lods
fs
testl
cmp
imul
mov
push
int
imul
pop
in
mov
ljmp
inc
andb
mov
pop
icebp
push
hlt
xchg
movsb
les
into
fidivrs
test
fwait
leave
inc
add
aam
mov
xor
loope
popf
sbb
mov
and
xchg
fadds
mov
xchg
in
out
push
fdivrl
pop
add
sub
pop
stos
repz
mov
fstpl
rclb
adc
inc
lret
and
stc
leave
xchg
adc
xchg
lret
sbb
xchg
dec
push
mov
inc
sub
movb
cmp
xchg
pop
shrl
xchg
add
fsincos
mov
jmp
loope
inc
pop
dec
ret
shrl
dec
sahf
cmp
lahf
mov
fiadds
cmp
popf
xchg
movsl
dec
mov
shrl
mov
iret
rep
sbb
gs
or
fldcw
mov
out
inc
shl
jns
mov
lock
pop
sub
jl
adc
addr16
adcl
ret
jl
loop
sbb
jl
loop,pn
xor
jns
in
push
mov
push
test
xchg
lcall
shrl
adc
fcmove
xlat
and
in
jb
fs
mov
pop
sbb
orl
ljmp
inc
arpl
leave
sub
stc
adc
cmp
aas
into
xchg
pop
pop
mov
fmul
out
jl
mov
inc
xchg
adc
out
mov
pop
sbbb
scas
dec
cmp
dec
mov
sub
mov
stc
in
ljmp
and
push
dec
fcomi
xor
add
and
cmp
push
fcomi
aaa
loopne
mov
lods
pop
cs
out
mov
jb
add
xchg
sub
jae
cltd
je
jecxz
mov
out
cmp
sbb
test
fwait
sbb
or
mov
cli
add
pop
std
jmp
aam
push
sub
leave
sti
xchg
lock
jg
and
cmp
imul
xchg
int
daa
dec
movsl
bound
roll
cmp
je
or
dec
pop
loop
lea
iret
sbbb
push
and
sarb
sbb
iret
in
orb
xor
dec
lds
lods
pop
cmp
je
outsl
mov
aas
add
cmp
testl
sbb
mov
clc
sub
ljmp
loop
fwait
dec
cwtl
and
cmp
cmp
push
out
rcll
xor
xlat
cs
adc
jl
out
pop
dec
adc
inc
adc
orl
lret
jmp
xchg
push
test
fnsave
insb
mov
mov
sti
jns
mov
mov
sub
xor
inc
loope
xor
mov
jmp
xor
lmsw
cmp
mov
rclb
repz
mov
mov
fiadds
push
js
mov
pop
imul
adc
push
add
jg
in
push
lea
add
add
adc
push
das
pop
loope
shr
sahf
shll
aas
arpl
jae
gs
xor
gs
lret
mov
add
mov
out
lret
lcall
shll
adc
jo
pop
push
call
mov
adc
sub
adc
mov
ficoml
aam
int3
or
in
clc
jmp
int3
punpcklwd
mov
pop
jmp
adc
sahf
and
xor
add
or
subb
xchg
jl
es
into
jno
mov
mov
fidivrl
jns
dec
xchg
push
or
pop
test
pop
mov
adc
pop
into
lods
fmuls
dec
cld
popf
push
out
jge
xor
popf
sbb
into
or
into
test
out
cwtl
std
test
lahf
imul
push
sbb
dec
pop
sbb
jecxz
mov
dec
sub
mov
rclb
ret
mov
loopne
lds
dec
jns
jne
negl
stos
add
nop
xchg
mov
mov
cmpb
mov
js
imul
pop
stc
mov
mov
pushf
and
push
mov
test
pop
pop
pop
addr16
inc
xchg
cli
insl
gs
mov
loop
adc
mov
lea
movsl
push
xor
int3
cli
mov
cmpsb
jns
xchg
shrb
sub
cmp
or
hlt
jb
push
pop
in
int
add
ja
stc
push
push
fisubs
mov
lods
sti
stos
push
xor
into
inc
mov
out
jmp
mov
lret
cmp
cwtl
mov
jl
jle
stc
fdivp
mov
repz
or
mov
jmp
mov
leave
cld
mov
add
mov
adc
mov
mov
popa
addr16
out
movsb
mov
push
lock
and
in
or
notl
iret
cmpxchg
push
movb
xor
stos
rorl
cmp
adc
fistpll
sbb
ret
imul
scas
mov
fs
sub
sub
jo
aaa
jnp
sub
daa
scas
sub
inc
inc
xadd
jge
mov
gs
aad
cmpsb
sbb
sbb
and
das
aas
cmc
nop
add
add
imul
cld
cmp
push
ljmp
inc
jge
fdivr
add
push
mov
hlt
mov
mov
repnz
cmp
aam
mov
and
inc
jo
pop
pop
lcall
fmul
sub
dec
jbe
je
add
sti
inc
inc
lret
inc
push
sti
pusha
xor
and
ljmp
jbe
jno
jp
nop
inc
xchg
add
jmp
sbb
outsl
xchg
sarb
into
popa
sub
imulb
sbb
fisubs
lret
outsl
mov
xchg
jmp
nop
in
cmp
inc
lods
mov
into
inc
inc
pop
or
pop
jge
push
in
jmp
and
xor
pop
jecxz
push
adc
pop
mov
jbe
pop
sbb
and
nop
es
iret
popa
fs
jno
xchg
pop
xor
clc
sbb
push
mov
or
aas
jo
inc
pop
add
mov
pop
dec
adc
ja
enter
lcall
arpl
jp
dec
arpl
fucomip
xor
push
pop
add
inc
push
test
jnp
push
mul
aad
and
mov
and
mov
inc
and
add
xlat
fsubr
pop
pop
and
sbbb
and
mov
arpl
aam
cltd
loopne
bound
loop
sahf
ljmp
cwtl
pop
mov
lcall
push
bound
gs
jp
cmp
add
pop
mov
mov
rcrb
int3
aas
les
xor
adc
mov
jp
lea
pop
adc
jle
flds
mov
dec
cmp
loop
enter
cmp
fs
pop
xchg
and
xchg
sbb
pop
push
push
sub
pop
xchg
js
in
pop
pop
pop
scas
js
into
dec
out
fsts
push
jo
mov
push
aas
int
mov
aam
fisttpll
push
cmp
or
roll
sbb
adc
add
push
jnp
outsl
xlat
sbb
push
cltd
aam
lock
fnstsw
std
aam
pop
push
sub
add
xchg
cmpsl
cli
xchg
je
ret
test
mov
and
rcll
sbb
negb
cmpsl
lcall
or
leave
mov
pop
je
adc
xor
inc
xchg
dec
add
adc
pop
movsl
push
and
jbe,pt
rcll
fidivl
jae
ret
add
or
fcoms
enter
and
and
or
or
imul
pop
inc
loopne
ret
out
cs
and
scas
cmp
xlat
push
cmc
cld
fimuls
sti
mov
xchg
xchg
mov
fsubrl
sti
mov
pop
insl
inc
xor
ds
mov
xchg
pop
shrl
and
inc
pop
jmp
push
cmp
xchg
sub
filds
and
xchg
dec
sub
and
stc
push
js
dec
pushf
loop
sub
dec
dec
xor
mov
div
mov
adc
mov
sub
stos
rol
inc
fidivs
out
sbb
sti
jge
push
sub
adc
xchg
add
sub
pop
push
aad
test
push
call
mov
adc
or
fcomps
lds
sub
sub
les
pop
test
nop
mov
inc
adc
add
mov
jmp
sub
cwtl
lods
jmp
fimull
jb
ss
out
out
mov
out
ret
jmp
xor
mov
jae
fcoml
jbe
jecxz
xor
or
insb
adc
addr16
call
flds
ss
pop
xchg
loopne
lods
rorl
xchg
cmpsb
xchg
adc
xchg
and
dec
xor
jnp
ret
jb
imul
adc
in
ret
push
stos
add
fwait
or
and
dec
xor
dec
outsl
adc
out
push
aam
fbld
aaa
xor
mov
xor
xor
mov
movsl
outsb
loope
adc
nop
movsb
leave
pop
cmp
mull
roll
pop
jno
add
push
sub
mov
fldcw
pop
lods
adc
mov
in
sub
sti
ds
test
sbb
enter
mov
fsubp
cmpsb
inc
fistl
mov
and
mov
push
fwait
leave
in
mov
ljmp
push
ret
xor
mov
add
ret
test
arpl
js
call
cmp
cmc
cvtpi2ps
push
mov
push
dec
add
test
je
jle
or
push
mov
das
mov
aad
xor
cmp
mov
or
lods
imul
rorb
and
mov
addb
mov
clc
mov
hlt
lret
push
and
shll
aad
lcall
divb
xchg
flds
imul
cmpsb
imul
jb
sub
fcmovnu
cmp
cli
cs
cmp
pop
add
std
xor
scas
or
aam
fcom
gs
scas
jns
out
push
and
jg
outsb
std
ret
adc
sub
xchg
stos
std
insb
dec
cmc
lods
xor
lea
subb
cmp
or
sub
ss
sub
xor
pop
repnz
fldcw
dec
data16
into
fsubl
out
lock
daa
popf
push
pusha
loop
or
sbb
mov
jp
push
mov
out
scas
mov
imul
dec
sbb
push
insb
inc
clc
jae
in
add
lods
xchg
sub
int
pop
mov
sarb
cmp
add
rcrl
adc
pop
push
pusha
cmp
loope
lds
cmp
mov
call
inc
fistps
or
xlat
mov
cmc
out
mov
mov
mov
push
mov
mov
jge
stos
jo
into
lahf
cwtl
cmc
shl
or
and
arpl
push
stc
xchg
dec
popf
jge
xor
push
data16
pop
in
push
fists
and
mov
adc
push
sbb
lret
movsl
cmp
sbb
push
pop
cli
add
andl
xchg
sub
adc
sbb
pop
and
jb
data16
mov
add
ror
xchg
fistps
jno
iret
fisttps
lods
gs
stc
jno
jns
pop
jno
movsl
jecxz
out
mov
add
and
xchg
nopl
fs
cld
mov
arpl
add
lds
aam
adc
movb
aad
roll
test
add
sbb
cmp
mov
scas
dec
dec
pop
sbb
fwait
cld
pop
mov
movsb
jl
pop
sub
pop
jbe
mov
aaa
xchg
xlat
and
inc
mov
xchg
loop
xchg
fistps
jo
sbb
jae
xor
das
xchg
mov
mov
fimuls
int
mov
mov
xlat
enter
andl
imul
stos
fwait
repz
xlat
iret
cld
lcall
push
push
clc
dec
adcb
icebp
roll
test
xchg
dec
mov
sbb
rcll
ljmp
add
loopne
fnsave
cmc
aad
dec
jecxz
cld
mov
rcrb
cmpb
aaa
mov
aam
clc
cmp
je
setg
jmp
imull
aaa
fimull
lret
fcoml
sub
pop
std
dec
stos
mov
pop
shl
fistpll
adc
xchg
je
orb
nop
pop
mov
xlat
js
xor
out
repnz
ds
repz
or
sahf
fadds
pop
addb
orb
cmp
sub
leave
cmp
cltd
iret
jmp
xor
xchg
mov
sbb
push
mov
movsl
test
neg
dec
sbb
jb
jp
pop
dec
and
int3
dec
test
stos
or
repz
push
mov
mov
hlt
push
lret
inc
sahf
sub
in
lret
mov
dec
pop
scas
es
xchg
je
pop
xchg
push
pop
popl
sbb
and
mov
ret
xor
sub
scas
scas
cmpsb
inc
add
jle
xchg
adc
inc
pop
and
and
fcoml
sbb
out
aaa
out
mov
inc
call
scas
sbb
adc
sub
ja
les
inc
push
out
pushf
mov
mov
xor
lahf
pop
jg
lods
and
inc
mov
push
sub
xchg
mov
insb
pop
and
dec
in
adc
lahf
sub
dec
jg
xor
and
xchg
sub
xchg
cmp
scas
mov
dec
outsl
pop
aad
stc
inc
shl
sar
sub
cmp
in
jge
add
mov
xchg
add
sti
inc
pushw
mov
fidivs
movsb
loop,pt
lret
mov
and
fwait
jo
gs
leave
inc
sub
mov
or
outsl
mov
orl
dec
xor
out
in
scas
pop
aad
out
fucomi
ss
mov
xchg
or
adc
jnp
and
adc
into
popa
mov
je
ficoml
inc
data16
inc
aad
jbe
push
lahf
add
imul
inc
stos
dec
stos
xchg
sub
jg
nop
sub
dec
rol
xor
out
pop
in
out
mov
movsl
std
cwtl
roll
inc
jmp
add
pusha
jno
enter
push
jge
jmp
jg
addr16
imul
sbb
dec
dec
fldcw
scas
push
add
cwtl
out
pop
stc
arpl
pusha
ret
add
sbb
mov
push
sub
mov
gs
push
sbb
cmp
push
sub
fstp
jl
push
mov
sbb
sbb
lahf
jnp
scas
fisubl
or
xchg
arpl
iret
mov
imul
sub
lret
xchg
or
mov
adc
sbb
push
jle
and
js
std
pop
out
hlt
fwait
ss
hlt
lret
inc
lock
pop
jno
sub
jp
shrl
add
mov
iret
jmp
mov
pop
push
adc
add
inc
fs
pop
rep
mov
lret
mov
in
sbb
push
sahf
sbb
out
jno
lock
mov
pop
aad
adc
pop
fs
mov
mov
jb
dec
scas
icebp
jo
lret
add
jge
shrb
jne
pusha
nop
stos
lods
mov
sti
shl
rcl
mov
pushl
jne
pop
out
dec
gs
mov
fiadds
xchg
jge
mov
or
xor
dec
push
notl
adc
cmp
or
pop
insl
mov
daa
int
xchg
retw
adcb
and
mov
aam
mov
adc
daa
add
std
loope
sahf
jne
scas
jmp
sub
lret
cltd
push
mov
jecxz
ret
mov
hlt
loope
adc
xor
mov
mov
xor
pop
imul
les
pusha
pop
and
lea
push
loopne
jo
xchg
mov
pushf
mov
iret
aas
jmp
fwait
popf
mov
ss
mov
enter
lock
cmc
push
sbb
pop
jb
and
enter
mov
sbb
push
adc
ds
mov
movaps
xchg
push
push
pop
mov
int
pop
add
enter
or
hlt
jnp
cld
stos
cmpsb
mov
and
mov
xchg
rorl
xchg
jmp
addr16
push
imul
mov
fadds
int3
dec
push
pushl
cmp
sarl
cmc
push
testl
inc
test
lds
out
cmpb
push
out
mov
mov
out
mov
imul
xchg
outsw
dec
sbb
aaa
stos
daa
or
and
mov
test
jae
arpl
mov
mov
out
aam
sbb
adc
call
call
sahf
xor
insb
test
pop
in
les
or
or
popf
push
mov
cmpsl
add
stos
in
insb
xchg
sahf
or
add
dec
add
xchg
mov
hlt
ret
add
cmp
or
add
repnz
or
sbbl
sub
add
mov
mov
xlat
mov
adcb
in
insb
cld
mov
and
dec
loopne
xor
mov
daa
xchg
cli
hlt
mov
je
imul
inc
cli
add
rclb
lea
jno
popf
in
push
sbb
push
lds
aad
or
cmp
xlat
xor
scas
out
bound
int
aam
xchg
mov
insb
in
shll
fwait
or
movsl
jns
test
and
pushf
rclb
jae
mov
sbb
or
cmp
add
lahf
lret
insl
sub
in
inc
jecxz
lea
rclb
push
enter
pusha
mov
inc
jnp
lea
jp
sahf
gs
enter
ja
and
je
push
mov
ljmp
jle
in
aad
loope
pop
dec
xchg
aam
dec
add
or
mov
movsb
daa
xor
jns
loop
pop
jno
dec
mov
in
cmp
nop
lods
cmpsb
ss
pop
pop
test
cs
cmpsl
int
dec
and
fstl
ds
mov
fwait
cmp
mov
psllw
popa
push
xchg
xchg
flds
xchg
xchg
sbb
movsl
movsb
mov
sbb
adc
jp
js
loope
int3
xchg
movsl
in
or
jae
fmuls
and
and
sahf
dec
or
sbb
lret
xchg
out
dec
sahf
adc
inc
pop
lock
push
sbb
push
cmp
xchg
int3
jae
bound
gs
ss
call
xchg
jmp
and
adc
dec
subb
xchg
cmp
addr16
fsubrl
popf
jns
outsb
mov
dec
es
sub
sbb
jle
into
mov
dec
and
push
jo
push
adc
xlat
sbb
jno
add
sbb
leave
jecxz
ja
sarb
lds
pop
test
mov
les
test
ja
sub
lret
sub
aad
sub
fwait
push
fstpl
push
rcrl
push
lret
ror
popf
popa
cwtl
cmp
fdivrl
enter
or
dec
in
out
popf
dec
test
stc
xchg
inc
push
test
or
sbb
sbb
xor
or
shrb
out
rol
xchg
int
jmp
subb
pop
sbb
pop
jne
xor
shll
inc
mov
sbb
mov
cmp
mov
push
ret
rcr
pusha
push
adc
stos
mov
xor
lahf
push
sub
adc
data16
xor
ja
out
xor
mov
ljmp
mov
scas
mov
mov
pop
dec
or
mov
adc
aad
push
push
movsb
push
stc
jmp
mov
es
inc
or
gs
xchg
pop
mov
fnstenv
push
mov
lock
sti
int3
jb
jle
mov
sub
add
pop
jb
std
and
or
push
mov
xor
call
testb
inc
andb
push
pushf
jmp
or
nop
mov
add
int
sti
add
ljmp
jnp
jb
push
ds
popa
dec
arpl
mov
stc
push
jo
push
mov
shlb
das
mov
and
aas
inc
adc
test
inc
fnstenv
std
or
cmpb
mov
cld
push
push
movsb
ret
ljmp
loope
mov
mul
leave
scas
mov
push
or
push
popa
sbb
jnp
mov
lods
pop
xor
mov
inc
mov
push
aad
loopne
fs
repz
sti
sub
dec
or
out
repnz
int
mov
mov
addr16
inc
add
imul
or
sub
icebp
mov
movsl
adc
adc
xchg
push
lret
scas
in
movb
push
sbb
pop
adc
inc
mov
pop
icebp
cli
pop
cmp
ja
bound
push
jecxz
push
popf
add
mov
pop
adc
xchg
jae
data16
je
push
xor
pop
adc
outsl
fimuls
sub
add
cld
dec
imul
sbb
jmp
movsb
lret
fldenv
punpckhdq
cltd
cmp
adc
sbb
adc
je
adc
stos
roll
cmc
mov
shrl
cld
outsl
jno
or
xchg
xor
xor
lahf
sbb
pop
imul
imulb
dec
lea
inc
stc
enter
out
jmp
test
lods
scas
push
lret
pop
test
insl
es
pop
ljmp
sbbl
sbb
sub
adc
mov
sbb
mov
jne
mov
mov
in
mov
pop
pop
jl
mov
jo
dec
pusha
in
sbb
jmp
sbb
out
inc
dec
or
dec
sarb
add
repnz
insl
aam
or
push
push
or
inc
cmp
add
or
mov
repnz
cmpsb
mov
loop
xor
sub
or
stos
mov
repnz
inc
mov
dec
testl
sbb
sub
sub
add
loope
mov
dec
or
xchg
or
jmp
push
mov
sub
mov
push
xchg
popl
cmp
push
in
push
repz
popf
lea
sub
je
dec
jo
fwait
push
mov
inc
sub
dec
add
or
rcrb
inc
mov
add
leave
xor
cmp
dec
rcl
push
movsb
ret
lock
cmp
outsl
std
xchg
jg
arpl
in
cmc
data16
push
les
or
mov
mov
cmpl
cmpsb
mov
xor
xchg
arpl
pop
pop
aad
inc
inc
daa
test
push
test
rorb
jae
sub
dec
mov
cmp
mov
stos
out
jbe
movsb
adc
insl
es
dec
mov
push
mov
mov
scas
movsl
sub
loope
jb
leave
fmuls
mov
mov
js
adc
clc
js
mov
aad
xor
pop
shrb
cmp
insl
in
scas
test
aad
fists
fwait
andb
pushf
mov
mov
xchg
outsl
hlt
jg
jne
push
or
fwait
jp
sub
push
outsl
mov
into
jl
cmpsl
jecxz
xchg
or
call
arpl
push
pop
fidivs
xor
dec
in
mov
sbb
test
fmul
cmpsb
xchg
insl
mov
lock
and
or
pop
stos
adc
mov
dec
pop
inc
in
fdivrl
xor
lds
addr16
int
cld
push
push
sub
jg
jae
xchg
rorb
lock
in
jecxz
shrb
ds
add
sub
jb
sbb
fdivl
pop
dec
icebp
pop
insl
cli
lret
jle
mov
mov
lds
ficompl
loope
adc
rcl
lcall
or
in
xchg
mov
outsl
or
adc
lods
and
test
je
sbb
sbb
bnd
int3
ja
in
and
movsl
mov
sbb
push
mov
lock
cwtl
popf
xor
adc
jns
pop
or
jg
mov
inc
xor
xor
pop
add
stos
xchg
mov
movb
push
dec
xchg
xchg
rorb
test
inc
inc
enter
sub
lret
mov
sti
or
pop
scas
xor
subl
mov
mov
into
inc
bound
jmp
xor
dec
in
rclb
pop
loopne
ds
cmp
imul
or
test
into
inc
sahf
pop
adc
inc
pushf
test
rclb
daa
fs
and
xor
jbe
sti
stos
lea
pop
fwait
adc
scas
jae
out
inc
repnz
jp
dec
mulb
insb
add
jg
xchg
push
mov
pop
aad
jecxz
push
mov
sub
or
sahf
sub
mov
fnstenv
pop
loopne
movsl
add
mov
lea
shrl
stos
test
sub
inc
adc
fidivs
xor
repnz
xor
popf
ljmp
xchg
outsl
out
add
push
out
adc
in
lock
stc
lret
jmp
scas
test
sbb
lcall
cmpl
pop
pop
push
adc
dec
adc
shll
mov
int
cld
in
dec
roll
out
mov
sti
fsts
mov
adc
lcall
inc
cmp
xor
les
sub
imul
nop
daa
rol
jne
cli
je
or
xor
sub
push
inc
popf
dec
adcb
inc
dec
sub
cmp
lock
pop
pusha
dec
lret
push
test
dec
pop
jns
js
cmp
xor
mov
dec
xchg
or
adc
aaa
dec
push
xchg
lcall
icebp
sub
add
or
mov
fistps
jp
sbb
add
fimull
out
mov
cmp
push
es
inc
pop
pop
fcmovbe
push
dec
mov
mov
sbb
mov
pusha
jmp
ret
adc
lods
rcrl
hlt
cld
lret
lock
sub
hlt
pusha
pop
mov
add
or
cmp
xchg
imul
dec
insb
stos
das
add
push
or
push
xor
outsl
addr16
stos
das
leave
fmuls
sbb
add
dec
add
pop
lock
mov
fs
dec
cmp
add
mov
ret
in
xlat
stos
cmp
fiaddl
add
and
test
jb
sahf
jmp
dec
in
fstl
or
mov
testb
inc
inc
push
jae
sti
mov
lea
fidivrs
in
cmp
mov
lock
loop
enter
sub
in
lock
sarl
in
jl
push
daa
jge
daa
lahf
rcrl
or
add
pop
in
dec
xchg
push
data16
jle
icebp
mov
dec
pop
shrb
call
rolb
inc
dec
lods
fs
js
dec
mov
jg
mov
pushf
inc
sarb
sbb
call
lock
mov
or
cmp
push
sahf
cmp
cmp
sti
call
sbb
jecxz
mov
repnz
adc
add
sarl
aaa
into
sbb
clc
dec
popa
pop
or
and
scas
xchg
dec
xorl
mov
fadds
jmp
cs
push
loopne
rcrb
sub
dec
jecxz
xchg
pop
negl
neg
imul
pop
rcrb
lea
hlt
aad
int
shlb
adc
pop
out
push
pop
mov
fsubs
push
insl
fucomi
out
stc
movsb
negl
pop
xor
or
sbb
xchg
in
xchg
daa
imul
inc
or
les
push
mov
or
cmp
adc
jae
scas
mov
loop
pop
cmp
lods
dec
fnsave
mov
loop
insl
push
mov
cs
sti
push
lock
cli
outsl
push
pop
mov
adc
inc
cld
sub
lahf
pusha
mov
lea
dec
xor
sub
sbb
pop
pop
std
cli
pop
inc
and
insb
loop
sub
xor
and
test
mov
pop
dec
inc
push
cld
push
roll
pushf
mov
sub
sbb
add
xchg
jae
or
pop
and
sub
and
pop
pop
insb
sub
mov
push
and
sahf
hlt
mov
adc
mov
jae
int3
mov
dec
mov
adc
fimuls
adc
xchg
jns
repz
xor
leave
sbb
hlt
rorb
xchg
pusha
leave
ja
push
jnp
dec
push
subb
scas
cmpl
or
insl
sbb
test
add
repz
add
mov
nop
pop
inc
push
les
push
or
les
xor
xor
jl
cld
pop
mov
sbb
adc
scas
push
or
cmp
xchg
out
add
pop
rorl
test
and
inc
mov
outsl
inc
mov
popa
into
sbb
js
test
stos
sub
sar
aam
pop
dec
and
out
das
shlb
mov
push
or
cmp
mov
bnd
mov
iret
cmp
pop
mov
mov
xchg
iret
mov
mov
pop
outsl
lods
out
jg
xchg
test
cmp
cli
mov
jnp
test
jae
js
jno
sbb
jbe
inc
mov
pusha
push
and
xchg
xchg
mov
inc
mov
imul
adc
mov
inc
bound
pop
fists
aaa
push
lret
imul
mov
in
dec
add
pusha
cld
dec
jns
rcll
sub
adc
jne
fildl
jnp
mov
popf
push
sub
aam
adc
mov
cmpsl
xchg
idivb
mov
jo
pop
jmp
pop
jecxz
mov
idivl
stc
rcll
ret
xchg
mov
and
xor
pop
sbb
jb
push
dec
push
not
enter
movsl
mov
mov
push
xchg
in
clc
lock
ret
inc
cld
cld
test
frstor
cmc
cmc
imul
stc
fnstenv
mov
ja
js
or
sbb
mov
cmp
push
push
repz
push
in
rorl
add
repnz
or
lcall
ja
inc
cmp
movsb
or
inc
stos
stos
fs
push
rcll
js
and
hlt
aam
push
subl
sbb
repnz
push
arpl
test
xchg
mov
mov
and
or
ds
cs
xchg
mov
jp
sub
fimuls
xor
fcmovbe
ficompl
add
mov
bound
jge
mov
mov
fs
cs
mov
lcall
cmp
adcb
add
arpl
and
inc
sbb
mov
frstor
icebp
cwtl
push
filds
aad
push
decl
rol
sbbl
pop
mov
in
inc
and
fisttpll
mov
and
push
mov
dec
jecxz
and
jmp
adc
in
aas
mov
cli
lock
dec
movsl
mov
dec
sub
addr16
push
jb
addb
jnp
jo
into
ja
shl
mov
jns
sbbb
jnp
in
dec
lods
das
adc
lret
ret
ss
push
pop
imul
jbe
adc
inc
sahf
fs
rolb
and
jmp
add
mov
inc
ss
and
xchg
fisttpl
mov
shrl
lods
mov
lods
adc
mov
enter
subl
sub
in
xor
fisttpll
gs
sbb
pop
mov
fildl
test
and
xchg
andl
push
or
int
lods
test
rcrl
fnstcw
ljmp
aaa
je
mov
hlt
test
adc
mov
xchg
rcll
push
mov
lcall
mov
repz
dec
testl
add
rcrb
inc
mov
jb
jp
sbb
xor
addr16
add
cmpl
fwait
test
dec
fimuls
sbb
or
sub
cmp
in
sub
int3
mov
push
pusha
loop
frstor
cwtl
jle
push
test
jg
lods
pop
insl
xchg
lret
mov
fldl
mov
xor
adc
mov
mov
cmc
or
or
in
pop
movsb
pop
test
loope
dec
sub
mov
sub
push
lods
sahf
mov
out
pop
icebp
rcrl
int
rcr
outsb
mov
pop
push
nop
jo
xchg
pop
mov
jmp
mov
jno
imul
orl
adcb
ret
in
int3
cmc
sti
test
mov
add
jp
add
ret
ljmp
jmp
jb
mov
movsb
lahf
fstpt
gs
sbb
insl
test
mov
lock
cmp
cmpsl
mov
push
and
in
stos
arpl
inc
ss
pop
scas
dec
loop
mov
sbb
sbb
mov
xchg
jne
pop
repnz
jmp
mov
idivb
outsl
stos
sahf
test
sub
insl
push
das
pop
lock
xchg
popf
pop
ficompl
mov
filds
stos
imul
pop
dec
sbb
popf
xchg
push
xor
xchg
cmp
and
popl
loopne
mov
push
push
in
or
pop
mov
pushf
sub
jb
or
adc
cmp
xchg
sbbl
mov
popa
fs
stos
cmp
loope
xchg
stc
pop
subb
mov
pusha
mov
adc
inc
sub
pop
sbb
imul
or
adc
and
je
or
jge
stos
sub
ds
inc
data16
jmp
pop
js
jp
xor
jge
mov
scas
inc
mov
ret
cmp
adc
test
inc
fistl
or
out
lea
add
lcall
mov
jmp
xor
mov
xor
mov
cmp
cld
js
aad
jmp
movsl
leave
insl
mov
pop
cltd
mov
test
aad
fst
mov
mov
mov
push
jmp
rcrl
xchg
rcrb
pop
outsl
shrb
jne
mov
cwtl
dec
sti
lcall
insl
imul
add
out
lahf
add
cmpsb
cmp
sbb
pop
jb
lea
sar
push
lcall
std
push
lea
mov
outsl
negl
testb
xchg
das
movsl
push
or
shlb
fwait
or
cld
mov
cmpsl
jle
xor
cmpsl
push
fldcw
int3
mov
jns
jno
or
mov
testl
cmp
sbb
subb
mov
clc
int3
es
dec
inc
stos
test
test
out
and
les
in
dec
mov
out
mov
pop
sub
dec
rorb
dec
test
or
inc
pop
rcrb
test
enter
mov
jmp
push
int3
fnstsw
ljmp
sub
cltd
xor
not
jnp
aas
jns
xor
pop
test
in
push
jno
imul
cmpsl
rorl
xor
xchg
add
xchg
inc
into
xchg
and
cmc
or
lret
pop
pop
xchg
divb
inc
mov
rol
jae
stc
dec
and
jns
cs
cmp
mov
or
jbe
scas
sbb
adc
rcrl
xor
daa
push
mov
or
jl
ljmp
mov
lods
dec
clc
or
ds
dec
addr16
scas
pop
mov
adc
lea
xorl
or
xchg
or
jg
push
lret
inc
out
repz
fiadds
mov
add
in
add
icebp
jecxz
testb
push
jo
imul
jne
movsl
xor
mov
adc
imul
jmp
in
test
test
lock
smsw
or
adc
push
fisubrl
mov
lock
icebp
pop
ss
sbb
push
js
call
out
pop
inc
clc
lods
push
mov
out
sub
pusha
dec
jle
mov
subb
popa
or
mov
xor
push
mov
lds
ja
adc
fisttpll
pop
jmp
xchg
jne
xchg
lods
pop
mov
adc
fsubl
pop
xor
cwtl
xor
pop
lcall
jg
sub
fidivrs
sbb
repnz
repnz
add
loopne
pusha
add
inc
dec
test
push
jp
imul
sbb
lret
add
mov
in
cmpb
test
inc
pushf
mov
rcrl
and
fwait
stos
fcomip
mov
mov
outsb
dec
lcall
adc
adc
sti
mov
ljmp
sub
mov
psadbw
sti
les
out
adc
ja
repz
mov
push
test
mov
divl
int
pop
jle
inc
lock
pmullw
fisttpll
dec
xchg
out
adc
out
popa
mov
dec
mov
stos
xor
or
xchg
or
lods
inc
adc
out
add
sti
stos
test
mov
icebp
add
mov
roll
add
inc
je
iret
stc
aad
mov
or
in
stc
lods
mov
aaa
mov
fmuls
rolb
mov
add
ss
dec
jp
iret
ret
xor
inc
mov
es
cmp
or
jo
mov
jb
xor
pop
mov
pop
fwait
es
mov
imul
ss
test
lcall
sbb
scas
lods
jno
mov
sub
hlt
adc
inc
cwtl
mov
in
fldcw
mov
cmp
dec
push
incb
test
dec
fisttpl
ret
in
cmp
inc
lret
jecxz
loope
xor
cmp
daa
lea
mov
push
popf
xchg
sub
mov
push
mov
jbe
test
dec
hlt
jle
aaa
pop
mov
test
inc
std
add
es
push
jne
out
cld
fbld
push
ror
lods
xchg
mov
popa
inc
sbb
insb
in
lret
push
jne
push
into
push
js,pt
sahf
sub
cmpsl
dec
jle
xchg
pop
dec
push
pop
into
xchg
push
js
adc
mov
imul
sub
sbb
nop
adc
pop
xchg
imulb
adcb
sbb
out
xor
repz
call
sub
aas
adc
repz
xchg
clc
mov
lret
test
xor
daa
add
jns
xor
andb
mov
push
fiadds
daa
je
xchg
jae
push
out
test
lock
xor
adc
xchg
int3
in
testl
mov
or
inc
sub
out
adc
ds
mov
fwait
cmp
lcall
push
test
push
mov
dec
and
adc
loop
mov
and
stos
arpl
es
sti
pop
mov
mov
or
push
jp
andl
xor
inc
push
jp
shll
mov
icebp
jnp
and
add
repnz
jl
mov
loopne
and
adc
stos
lock
je
sub
cmp
cmp
aas
push
lods
and
mov
cmp
rolb
inc
popf
xor
cwtl
pop
or
hlt
div
add
sahf
fdiv
fldt
add
adc
mov
rcrl
sbb
xor
dec
dec
pop
stos
push
pop
adc
dec
mov
cmp
pop
sbb
or
inc
sub
out
xchg
in
sub
jp
push
fdivrl
loope
sbb
push
push
push
add
and
stos
iret
stos
fisubs
loop
mov
pusha
adcb
jp
mov
push
pop
sub
sbb
sti
out
in
push
data16
or
call
aas
rolb
rcrb
popa
adc
in
pop
mov
push
into
mov
inc
sbbl
ljmp
fistl
leave
outsb
fs
hlt
data16
aaa
int
sbb
popa
arpl
mov
push
mov
cmpsb
out
pop
lahf
imul
sub
and
stos
cmpsb
out
dec
adc
add
add
pop
movsb
pusha
out
shrl
loope
lcall
jae
leave
or
movsl
and
push
stc
das
mov
jge
push
in
test
bound
pop
and
sub
nop
int
pop
dec
enter
fwait
mov
jle
sub
or
mov
scas
xor
stc
mov
ds
test
dec
mov
dec
orb
cmp
inc
sub
inc
cmp
mov
bound
pusha
out
rorl
mov
adc
and
mov
lock
cwtl
jmp
sbb
jecxz
test
inc
insb
dec
pop
les
cli
stos
into
push
popa
lock
popf
data16
pushf
mov
xchg
popf
test
popa
mov
mov
loope
ret
inc
inc
or
ret
jno
mov
add
fdivrp
xchg
rclb
aam
adc
mov
inc
out
push
jbe
dec
mov
shll
sbb
imulb
lods
adc
add
loope
adc
shlb
lret
cmpl
add
shrl
pop
testb
fildll
shlb
repz
fldt
ret
xor
mov
testl
mov
cmp
xor
in
mov
xor
je
ret
cmp
sbbb
pop
jae
xchg
inc
jg
dec
insl
mov
jl
imul
adc
add
test
mov
push
mov
adc
sub
icebp
and
ljmp
sahf
adc
mov
insl
mov
push
in
shll
sti
sub
ds
mov
lock
and
fwait
dec
incb
mov
push
cmp
ljmp
xchg
push
xor
dec
bound
cmpsb
cmp
mov
pop
out
push
cld
test
dec
pusha
cld
pusha
daa
arpl
mov
sub
shl
dec
jns
mov
fmuls
mov
in
faddp
or
adc
popa
mov
mov
and
mov
or
test
dec
inc
movsl
push
pusha
movsl
aad
jno
mov
or
divl
xchg
movsb
push
movsl
sbb
add
adc
ret
rclb
jle
js
rolb
lret
push
and
mov
out
imul
shlb
xor
jb
ds
mov
push
icebp
in
cwtl
lods
cmp
pop
cs
gs
iret
mov
jge
mov
call
mov
ret
inc
das
mov
mov
pop
cs
pop
add
iret
mov
iret
dec
push
xchg
out
gs
lcall
xchg
xor
ljmp
lret
and
into
pop
fs
pop
lods
addr16
fdivp
jnp
or
pop
xchg
pop
pop
inc
or
pop
rcrb
js
lock
pop
lret
cmp
jnp
xchg
inc
mov
dec
cs
cmp
pop
scas
inc
popa
popa
mov
icebp
test
mov
inc
cwtl
je
dec
push
dec
mov
dec
mov
sub
cli
lahf
imul
push
sti
pop
outsl
fwait
and
and
inc
and
pop
jp
bound
xchg
jl
mov
pop
data16
mov
imul
orb
in
cmc
jg
icebp
sbb
adc
cmp
pop
cmc
cmp
les
fisubl
xchg
mov
xchg
es
mov
stos
mov
mov
in
jbe
iret
xor
pop
lock
mov
fwait
test
es
adc
cmp
jg
arpl
mov
xchg
addr16
iret
mov
mov
sbb
lret
aam
std
dec
xchg
sarb
mov
cli
shrb
inc
inc
xor
adc
cmp
out
inc
into
stos
pop
xchg
and
out
mov
ss
push
push
push
jmp
cmp
scas
xchg
or
jne
jae
add
push
jb
std
int3
cs
pop
sub
icebp
and
pop
mov
insb
inc
jnp
inc
cmp
xor
scas
push
pop
out
in
pushf
inc
cmp
test
xchg
fldl
dec
sub
add
xchg
into
js
and
push
push
add
jbe
inc
cltd
cmpsl
leave
jl
lds
add
sbbl
repz
aam
sbb
sbb
fimuls
sub
mov
and
mov
sub
xor
jne
insb
rorb
dec
add
sub
test
and
fldcw
sahf
iret
je
stc
adc
movl
jo
cmpsb
push
adc
xchg
add
lcall
stc
pop
jg
push
ljmp
lcall
push
push
sar
push
enter
gs
or
roll
add
cli
jb
clc
test
mov
cld
call
jb
sub
stos
cmp
lods
adc
mov
mov
sbb
stos
mov
int3
addl
bswap
jns
mov
loop
scas
adcl
dec
fldl
testb
fdivrl
mov
or
rol
stos
lahf
daa
sub
repnz
enter
push
loopne
arpl
addl
jp
ret
xchg
int
sub
xorb
sub
negb
mov
adc
imul
xchg
jne
call
call
cwtl
push
xchg
mov
testl
in
lahf
mov
pop
imul
push
hlt
push
mov
pusha
ja
mov
fwait
in
push
sbb
push
dec
stc
mov
js
repnz
mov
sbb
jl
loopne
loop
push
adc
inc
repz
subl
sub
push
aas
xchg
out
out
aas
lcall
into
mov
jle
ret
mov
lods
add
sahf
add
push
xchg
xchg
cld
inc
xchg
jmp
leave
lds
sti
mov
movsl
pop
daa
inc
xor
xchg
cltd
leave
mov
pop
les
dec
mov
in
cmp
lods
enter
movsl
add
repz
dec
inc
push
push
sbb
cmpsb
add
sahf
xchg
or
cmpl
mov
jbe
mov
fnsave
addr16
bound
fsts
inc
cmp
shll
xchg
fldl
push
sahf
int
inc
xor
xor
push
lods
push
rep
inc
or
sub
dec
addr16
pop
lret
test
test
lock
lcall
push
mov
imul
mov
sti
aas
daa
and
movsb
cmp
jle
sbb
sub
test
dec
xchg
stc
aam
ds
dec
pop
dec
bound
rcl
les
out
cmp
movsl
xor
loopne
sbb
inc
push
xchg
leave
and
pushf
movsb
sub
push
gs
and
xchg
pop
push
sbb
out
pushf
mov
add
lods
inc
shlb
aad
or
pop
popf
sub
adcl
mov
movsb
and
insb
mov
mov
movsb
test
xor
sbb
stc
or
mov
cmp
cwtl
push
scas
xchg
mov
jg
lods
cli
push
ret
add
mov
insl
push
mov
popf
xchg
add
xchg
enter
and
in
ror
adcl
xchg
lahf
aas
orl
test
adc
or
xor
add
int
data16
mov
fwait
outsl
or
fisubrl
pop
or
popf
jno
xor
fs
adc
jmp
mov
sub
cmp
leave
xchg
pop
fisttpl
mov
add
fneni(8087
mov
lods
aaa
mov
sub
pop
or
mov
cmp
les
fdivs
sbb
mov
adc
sub
xchg
dec
jle
lds
xchg
idivb
out
inc
loope
and
aas
dec
inc
std
jae
jecxz
and
or
mov
mov
and
call
xor
lods
sub
cltd
rcll
outsl
int3
fdivrs
mov
lods
movsb
aam
push
movsl
add
stos
icebp
push
mov
iret
pop
lcall
or
lcall
push
js
jmp
jno
icebp
inc
insb
in
and
jg
in
lret
nop
ret
cld
mov
cld
sbb
lret
xchg
sar
pop
outsl
or
out
leave
sub
in
enter
mov
and
inc
lock
xor
ret
lcall
push
push
loop
stc
sub
test
pusha
out
adc
jg
lea
ja
add
ds
pop
jns
ret
or
mov
shl
sub
mov
call
dec
cmp
dec
outsl
out
stc
subb
rcr
mov
add
nop
mov
adc
test
pop
pop
ja
and
jno
and
test
hlt
xchg
addr16
addr16
adcl
lods
jecxz
mov
pop
enter
loop
mov
mov
adc
inc
xchg
ljmp
in
mov
movsl
mov
sbb
nop
in
cmp
fcompl
xchg
mov
leave
jno
xchg
cmp
add
jp
jl
cs
data16
pop
aas
sbb
lret
rcr
jecxz
xchg
inc
adc
pop
insl
xchg
mov
mov
xor
loop
mov
stos
ror
imul
mov
push
loopne
push
stos
and
xchg
push
push
insb
jg
into
enter
xor
jb
into
lcall
stc
popf
sub
cmp
push
lahf
jl
inc
pop
addr16
cld
aad
pop
sub
and
xor
lea
jmp
adc
das
rolb
inc
out
lahf
mov
ds
add
frstor
sbb
sbb
mov
ret
fcmovne
lods
adc
inc
dec
insl
outsl
cmp
nop
into
dec
cmp
insb
pop
js
cmp
push
cwtl
fiadds
fwait
mov
jle
int3
fcoml
out
inc
xor
pop
je
rcl
jp
adc
push
jae
lock
lods
mov
pop
fs
lods
mov
jmp
ret
aas
lods
lock
iret
and
mov
test
fsubl
add
cmp
add
or
insb
sbb
inc
xchg
adc
in
in
dec
sub
push
xor
loop
fsubp
imul
adc
imull
sahf
int
jns
dec
and
mov
xor
push
pop
adc
push
cmp
jle
cmpsl
pop
test
aam
int
mov
call
out
jmp
push
incl
push
loope
push
addl
xor
cli
adc
outsl
jne
xchg
mov
inc
mov
push
dec
push
out
aam
cwtl
mov
into
leave
fwait
icebp
test
inc
jmp
ss
je
dec
jmp
adc
fwait
push
and
push
add
sub
mov
scas
shrb
mov
push
aaa
and
push
push
cmpsb
push
pop
pop
enter
mov
sbb
and
sub
inc
test
mov
data16
inc
icebp
in
fists
aam
out
daa
arpl
adc
fnstenv
xchg
xlat
xchg
push
xchg
pop
fmul
xchg
sub
lret
inc
sahf
jae
dec
js
js
cmp
in
xchg
movsl
leave
sbb
fmulp
sarl
out
push
fbld
pop
repz
hlt
lret
mov
into
outsb
scas
pop
shrb
mov
mov
shlb
sub
dec
ljmp
mov
js
jge
cmp
rcll
push
adc
mov
adc
push
out
mov
sbb
jecxz
lods
sahf
push
loope
or
dec
dec
fs
jo
dec
jne
pop
jnp
shrd
rorb
data16
rcrl
add
test
fbstp
lds
jg
mov
or
jp
stc
insl
xor
mov
inc
xchg
jp
jp
dec
loope
inc
jbe
xor
ss
orl
in
or
inc
mov
dec
adc
ss
int
jp
outsb
sbb
mov
shr
xchg
repnz
sub
popa
and
push
aad
lss
add
and
ret
xchg
pop
mov
sbb
out
insb
aaa
jg
fimull
xor
aas
sti
aam
aas
movsl
push
dec
xor
and
ret
enter
in
jae
mov
decb
inc
and
mov
mov
shlb
in
in
adc
mov
int3
cmp
ljmp
and
jge
mov
jne
pop
movsl
mov
xor
xor
dec
ja
scas
cmp
or
std
outsb
outsb
jecxz
js
sarl
adcb
in
mov
mov
cmp
es
lahf
aad
pop
xchg
mov
out
shl
ja
mov
lds
leave
ss
mov
pop
push
out
ss
bound
and
fs
xchg
mov
push
movsl
jbe
lds
jb
data16
mov
dec
lret
mov
orb
xor
repz
in
fs
mov
jmp
je
mov
fdivrs
inc
jle
test
movb
mov
sub
out
or
lods
add
je
jae
mov
mov
pop
jbe
or
mov
xchg
push
jle
cwtl
jb
test
cltd
or
loop
sub
jo
push
xor
jb
aad
in
mov
xor
sbb
out
pop
jne
fadds
or
mov
pop
sbb
repnz
cmpsb
in
cmp
movsl
aam
adc
jno
adc
mov
ss
lods
dec
jmp
cltd
leave
fistpll
fmulp
mov
push
xchg
int
test
into
in
mov
push
xor
stos
add
das
sub
imul
mov
jb
loopne
xor
je
repz
or
jno
popf
pushf
insb
lea
add
or
test
in
xchg
pop
mov
sub
orb
sahf
or
mov
cmp
xchg
call
movsl
push
es
inc
lcall
cld
fwait
dec
mov
int3
loop
loope
hlt
pushf
fidivs
sarl
sub
js
mov
fs
adc
cld
xchg
call
dec
cld
scas
adc
lea
js
lods
cmp
xlat
jae
fwait
ja
loop
cmp
mov
popa
xchg
inc
mov
cmpsb
mov
cs
pusha
mov
sbb
dec
cmp
mov
call
inc
cmp
aas
pop
outsb
mov
bound
inc
sub
imul
add
ds
sarb
mov
jecxz
scas
les
pop
dec
data16
lods
bound
cmp
fnstsw
gs
mov
push
jp
jl
push
add
movsl
xchg
data16
jns
pop
jge
sbbb
cltd
mul
xor
lahf
push
push
in
or
bound
aad
pop
ljmp
jo
popa
std
fwait
cltd
fisttpll
pop
and
lods
push
cmp
sub
iret
pop
xlat
adc
notl
cmovbe
inc
and
imul
stos
addr16
je
es
outsb
jmp
incl
and
adc
ja
rorb
add
clc
and
es
push
and
insl
adc
or
adc
ljmp
mov
nop
fisttpl
and
lret
scas
mov
inc
test
fnstenv
jbe
sub
inc
test
and
pop
test
jecxz
sub
leave
adc
test
xchg
cli
ljmp
cmp
leave
cwtl
loop
fs
gs
mov
add
test
aas
es
dec
les
mov
pop
lcall
mov
icebp
xchg
mov
scas
test
into
sub
cltd
mov
mov
cmpsb
aas
scas
sbb
clc
ja
adc
and
inc
not
fadd
jnp
fs
pop
and
pop
out
push
dec
movsb
clc
iret
in
test
jae
xor
add
clc
insb
outsb
aam
clc
push
dec
pop
xor
gs
xchg
in
jo
popa
adc
mov
jle
shlb
xor
inc
pop
mov
imul
xchg
ror
sub
adc
icebp
or
arpl
inc
fwait
lea
test
clc
mov
jbe
or
out
sbb
mov
js
jne
sbb
or
rorl
pmullw
pop
fsubr
xchg
adc
mov
movsl
xchg
lds
jmp
mov
pop
out
jae
or
shl
repnz
jp
pop
adc
or
ss
mov
ret
outsl
fsubrl
cmpb
and
jg
jmp
pusha
add
imul
sub
scas
adc
adc
mov
push
neg
pop
aaa
sub
cmp
sbb
lret
in
push
test
push
add
cld
cltd
cmp
fwait
insl
xor
insb
push
lret
negb
mov
xor
pop
sbb
mov
js
xchg
add
jecxz
sbb
sbb
leave
dec
jp
ss
push
or
add
scas
out
in
push
cwtl
shlb
adc
enter
jno
jnp
push
test
push
dec
mov
fists
rclb
push
pop
fldl
jl
out
cmp
gs
dec
and
fbld
ret
dec
lds
mov
stos
pop
sbb
loop
pop
dec
sbb
mov
hlt
adc
enter
lds
push
adcb
fcmovnbe
in
daa
push
adc
imull
clc
fidivrs
ret
push
mov
and
jle
jo
test
arpl
out
inc
mov
pop
js
aaa
dec
pop
dec
test
dec
xchg
dec
fwait
or
add
call
jl
outsb
aam
test
shrl
push
roll
fists
push
popf
or
outsl
aam
adc
xchg
fisubs
jecxz
adc
rorb
in
bound
ficomps
push
jae
add
jp
xor
daa
sub
pop
scas
std
adcb
sbbb
aam
adc
popa
push
push
loopne
fldt
mov
movsl
push
inc
inc
mov
cltd
out
ss
adc
pop
popf
xor
clc
push
int3
add
mov
shll
adc
sahf
adc
ja
imulb
and
or
pop
ljmp
arpl
cwtl
inc
cmp
insl
mov
add
cmpsb
xchg
sti
or
rolb
jb
mov
add
nop
mov
sub
cmp
jbe
jg
or
dec
mov
pop
neg
xchg
add
aas
mov
pushf
jg
aad
adc
mov
jge
test
cwtl
push
mov
les
mov
pop
mov
mov
stc
loop
xor
or
aad
ljmp
sti
xor
test
ss
cltd
cmp
popa
mov
rclb
and
popf
and
mov
jno
scas
aaa
popa
jmp
int3
mov
mov
outsb
jnp
jae
in
xor
jmp
rorb
jmp
jae
aaa
out
cli
test
jle
out
mov
or
dec
mov
ds
dec
xchg
lds
mov
data16
pop
jne
gs
xchg
jnp
cwtl
or
add
dec
add
ja
or
ret
mov
xchg
hlt
addr16
outsl
shr
push
xor
das
pcmpeqb
pop
push
lds
and
clc
add
je
loope
scas
daa
xor
pop
je
mov
outsl
sub
fdivp
movsb
or
xchg
sbb
jp
sbb
xchg
cmpsl
push
lret
pop
sub
test
gs
cld
add
fisttps
inc
sub
push
mov
das
push
fsubr
or
dec
ret
out
dec
xor
lea
rolb
mov
loopne
sbb
lods
inc
call
pushf
imul
cmpsl
lods
mov
adc
xchg
mov
mov
dec
fbstp
fldcw
sub
popa
lea
push
daa
incb
out
push
cmp
out
push
lds
call
jbe
rcr
outsl
jae
ret
add
jecxz
test
cmp
into
pop
pop
mov
movsl
fsts
aaa
sbb
fsubrl
imul
test
stos
pop
push
ret
out
mov
popf
in
repz
jno
movsb
jmp
in
cmp
out
mov
or
out
mov
insl
mov
into
stc
cmpsl
in
fisubl
test
sub
mov
addr16
push
add
iret
rorl
sbb
loopne
jmp
mov
dec
dec
jl
test
adc
mov
add
jne
stc
sbb
mov
jp
dec
add
mov
inc
xor
mov
sbb
aad
dec
int
fistpl
adc
xor
adc
mov
mov
cmp
cmp
mov
dec
pop
sbb
sub
sbb
jbe
aaa
std
add
dec
outsl
je
and
in
push
dec
int
dec
repz
sub
pop
pop
aaa
xchg
push
xchg
xlat
fisttpl
xchg
cmp
pushf
pop
xchg
cmpsl
push
xor
push
cld
mov
push
andb
inc
push
inc
sahf
adc
mov
mov
fidivrs
outsl
shll
mov
int3
sbb
jbe,pn
popf
movsl
rcl
sbb
idivb
test
stos
aam
neg
xor
push
mov
in
cs
or
xchg
inc
sbb
int3
jmp
cltd
mov
push
sub
test
daa
int3
icebp
jmp
adc
xchg
sbb
pop
inc
int
lret
test
scas
mov
pcmpeqd
daa
mov
outsb
push
xor
insl
cmp
dec
or
and
xchg
sub
cmpl
clc
xor
jp
dec
mov
xchg
cmpsl
push
adc
pop
xor
and
mov
xchg
xchg
xchg
jno
add
jns
and
push
xor
xor
ljmp
xchg
in
cmpsb
mov
dec
sbb
mov
xor
add
ja
xor
mov
cmp
push
push
lcall
clc
fldenv
cwtl
and
shr
mov
jle
jmp
jne
ljmp
cld
dec
in
push
hlt
lret
scas
aas
sbb
xchg
repnz
fistpll
inc
mov
jmp
imul
shrb
lret
fidivl
in
xchg
mov
orl
xor
jg
cmp
mov
in
jo
mov
xor
inc
push
lret
stos
xchg
jne
mov
dec
pop
mov
jo
cmpsl
pop
add
scas
fadds
cwtl
leave
int3
pushf
add
cwtl
mov
or
js
xor
xor
jl
sbb
movsb
je
adc
sbb
jmp
or
cmpsl
xchg
pop
pushf
cmp
cmp
jne
xchg
out
scas
test
icebp
sbb
lods
scas
cmpb
in
loop
das
les
aaa
jno
shll
add
sub
repz
xor
lock
fimuls
push
add
mov
pop
cmp
pop
and
lds
aaa
jg
sbbl
mov
sbb
pop
stos
sub
mov
jle
push
fldt
mov
xchg
jl
push
cmpsb
loope
dec
into
inc
mov
rcr
lods
das
es
repz
test
sbb
fs
xor
mov
push
insl
xchg
push
rcrb
cmp
jge
imul
cltd
outsb
or
pop
aam
fidivrl
jp
test
roll
test
jecxz
mov
mov
sub
cmc
pop
jno
in
ficompl
inc
push
mov
jg
xchg
imul
out
movsb
pushf
push
xor
pop
pop
ficoml
lret
xlat
lret
popf
sbb
sbb
pop
sub
out
rcrb
xchg
fstl
repnz
sbb
dec
add
outsb
push
movsl
in
outsl
cmpsl
inc
mov
aas
setl
jne
mov
mov
loopne
iret
leave
jae
inc
xor
ljmp
push
jne
mov
push
inc
add
sbb
and
cmpsb
jg
stos
lret
mov
sarl
mov
add
xor
add
sub
outsb
jmp
das
sub
sub
push
cwtl
bound
jb
adc
push
inc
cs
icebp
arpl
jbe
add
mov
sub
scas
add
cmc
dec
adc
push
je
and
mov
sbb
push
mov
or
add
pop
mov
jnp
fldcw
xlat
call
push
adc
and
loopne
mov
std
mov
inc
scas
inc
aas
stos
repz
sbb
inc
icebp
pop
mov
jmp
push
mov
int3
pushf
call
data16
shlb
ja
imul
shll
paddb
or
aad
xor
flds
insl
xor
faddl
push
cmp
lods
loopne
in
ljmp
popa
ja
out
mov
sarl
push
aad
cmovno
andl
push
in
cmc
add
hlt
or
insl
inc
cmpsb
leave
adcl
mov
add
iret
and
lret
dec
jae
pop
mov
sahf
jns
pop
stos
xchg
mov
bound
jg
out
jns
pop
shrb
cmpl
movsb
push
mov
icebp
add
add
lret
cmp
jnp
and
push
jmp
inc
movsb
fwait
jl
rclb
subl
mov
cmp
popf
je
pop
cltd
mov
scas
and
fistps
dec
rolb
xor
push
add
in
sbb
jnp
mov
cld
bound
int
test
repz
push
cmp
sbbl
jecxz
inc
sub
push
mov
lcall
lcall
fistpl
stos
fs
jl
add
movsl
push
out
push
xchg
jns
mov
xchg
test
mov
pusha
cld
sahf
and
scas
cmp
enter
push
mov
pushf
xor
mov
lea
lret
and
jae
repz
pushf
xchg
pop
notl
loop
cltd
xchg
mov
push
mov
dec
mov
jbe
sbb
jns
lret
sbb
jnp
cmp
daa
xor
mov
jecxz
push
jno
push
imul
arpl
jg
mov
jp
mov
sub
mov
xor
js
enter
mov
lock
lret
dec
xchg
repnz
pusha
es
int3
ss
xchg
popf
sub
pop
and
dec
xor
jb
adc
xchg
push
pusha
xchg
push
mov
scas
ret
push
push
pop
fld
inc
ja
icebp
push
pop
leave
mov
dec
mov
xadd
pop
lods
adc
mov
stc
daa
and
cs
test
dec
sub
scas
out
adc
testb
fsubr
xorb
dec
lcall
add
dec
adc
out
movb
xor
cmpl
push
mov
jo
sub
and
and
pop
fcom
paddsb
xchg
testl
ret
popf
aad
push
jle
xchg
sbb
lock
push
push
fiaddl
push
cltd
lret
sahf
repz
push
pop
mov
aad
cli
xchg
mov
sub
inc
jo
fs
scas
test
js
insb
mov
loop
in
mov
cmp
out
mov
mov
mov
repnz
int
leave
push
xchg
ja
pop
popf
mov
lcall
ljmp
dec
jecxz
movsb
cld
mov
repz
fs
cmp
add
inc
in
stos
aam
hlt
xor
lods
xchg
xchg
les
pop
sbb
ljmp
jg
push
inc
enter
or
add
ds
xchg
pop
adc
dec
sbb
out
push
sbbl
jp
pop
dec
sub
cmpsb
fstl
sti
pop
lret
dec
mov
cli
add
call
lods
add
mov
ja
das
mov
jl
lock
in
fwait
test
scas
in
js
cmpsl
ja
pop
lock
and
popa
repz
cli
popf
andb
fs
inc
outsb
xor
lea
sbb
sar
in
cmc
hlt
push
pop
testl
scas
or
xor
and
subl
dec
out
mov
hlt
pop
xchg
sub
lret
cmp
insl
sub
sub
nop
lods
pop
or
roll
mov
roll
out
jecxz
test
inc
imul
add
data16
jne
test
sub
sbb
pop
sarb
add
in
ja
jns
test
or
xchg
push
imul
shl
or
push
pusha
or
pusha
addr16
xchg
and
lods
adc
jmp
imul
or
fcompl
int3
sbb
shll
sbb
fdivl
jecxz
xchg
aaa
inc
sbb
es
jns
and
cmp
movsb
in
mov
aas
jb
jns
jno
xlat
repnz
xorl
inc
or
loope
ljmp
push
ror
arpl
test
call
cld
lock
pusha
fistps
and
nop
sbb
and
movsb
sub
cli
lret
add
adc
inc
test
femms
pop
out
mov
or
pusha
xchg
inc
scas
mov
or
lea
xchg
push
rcl
int
push
xchg
cmpsb
pop
mov
cmc
sub
cmc
sbb
fildl
mov
jb
pop
in
jg
movsl
inc
lock
and
push
jae
out
mov
scas
mov
push
or
push
mov
dec
jl
cmc
dec
aam
scas
stos
mov
outsb
jle
pop
out
adc
and
aad
mov
pop
mov
cwtl
xor
jbe
outsb
dec
imul
in
ficoms
daa
jge
negb
in
and
aas
cmp
push
xchg
fwait
push
in
adc
call
test
mov
movsb
sarb
xchg
cmpl
cmc
mov
mov
scas
rorl
decl
out
xor
fadd
inc
mov
cmp
or
and
ret
or
xchg
jl
hlt
mov
out
pop
lods
xchg
aam
sub
mov
cmpsb
ljmp
test
mov
mov
jmp
xor
sarb
ret
mov
xor
mov
mov
cmp
inc
inc
push
xchg
sub
lea
mov
push
xchg
push
rcl
fwait
dec
cmc
xor
xchg
adc
mov
stos
xchg
inc
push
dec
mov
out
int3
jne
mov
or
mov
push
sbb
add
cltd
push
pop
push
fldenv
aas
mov
mov
pop
ja
aad
dec
mov
mov
mov
add
aam
hlt
push
pop
out
push
adc
jne
pop
pop
mov
ret
jp
sbb
xor
icebp
adc
mov
lods
int3
push
sub
aas
dec
leave
push
xorb
sti
add
pop
xchg
int3
bound
pop
xchg
dec
push
fisttpl
xor
fcoml
pop
mov
subl
add
icebp
dec
fldenv
jle
in
inc
mov
sahf
push
nop
and
int
xorb
sub
loope
test
adc
pusha
inc
bound
andl
mov
aaa
sub
inc
sahf
mov
mov
iret
push
sbb
xchg
inc
movsl
push
or
push
xor
rcrl
or
cmp
jo
jge
fmull
push
lret
sub
mov
mov
leave
shlb
jno
xor
push
js
loopne
mov
jge
dec
jnp
and
into
outsl
and
or
out
movsb
sub
stos
pop
loope
xlat
mov
mov
mull
test
sar
mov
xor
ret
xchg
pop
es
std
les
les
xchg
and
push
adc
or
jne
push
fs
stos
bound
fs
stos
ljmp
inc
sbbl
inc
xor
pusha
movsl
test
movsl
add
jl
movsl
je
add
lret
add
add
cmp
cld
pop
icebp
jmp
les
sti
and
jb
and
mov
dec
xchg
adc
insb
dec
mov
sub
and
gs
outsb
inc
stos
mov
push
cmp
scas
pushf
push
mov
inc
cwtl
cmp
dec
xchg
fadds
push
dec
in
iret
sub
dec
icebp
iret
loop
in
jnp
adc
test
xor
lods
dec
sarl
xchg
add
icebp
mov
out
ficompl
dec
mov
adcb
xlat
xchg
and
bnd
test
inc
scas
mov
enter
not
pop
inc
daa
fadds
cmp
loopne
pop
repnz
lods
and
or
inc
mov
loop,pt
loopne
push
push
mov
popf
lahf
or
jg
aam
mov
xor
dec
sahf
js
aad
mov
cwtl
jb
push
xchg
push
dec
nop
lret
dec
popf
xchg
mov
gs
leave
ja
jnp
pop
cmp
ret
lock
pop
test
insl
leave
pop
cmpsb
test
into
xchg
mov
gs
mov
sarl
daa
or
lcall
ret
jne
inc
gs
out
mov
fcomip
inc
mov
pop
iret
mov
push
insl
cmp
mov
mov
or
mov
jge
dec
pop
add
add
xor
cld
int
dec
xor
sbb
jmp
and
in
jp
pop
dec
push
add
int3
mov
cmpsl
aaa
icebp
repnz
mov
bound
xchg
jmp
fcompp
call
add
mov
mov
lret
or
lods
mov
push
sti
imul
xchg
das
push
clc
rcrb
insb
gs
movsl
cmc
std
sub
cmp
sub
enter
sub
jo
pop
mov
xchg
imul
push
xor
or
mov
in
xorl
push
cmpsl
orb
cmpb
loop
in
xor
in
mov
or
mov
imul
pop
xchg
xor
mov
fldcw
pop
fxch
movsl
inc
out
insb
fwait
popa
sahf
mov
and
or
jecxz
jl
shlb
les
xor
daa
mov
lahf
push
cmpsb
cmp
xorl
push
ja
in
sbb
imul
lods
nop
push
xor
cmpl
fsubp
pusha
inc
in
xchg
fisttpll
ficompl
idivl
ss
mov
xor
mov
jne
lds
cmp
jnp
lods
cmp
adc
xchg
ja
jnp
out
xor
add
aam
imul
pop
mov
mov
xchg
cmp
lods
dec
cmpsl
mov
xor
sbb
aaa
out
sub
bound
stos
out
test
mov
arpl
ret
hlt
or
pop
mov
popf
jb
lret
mov
cmp
push
pop
mov
jecxz
fidivs
and
inc
loopne
into
adc
inc
pop
inc
sahf
xor
inc
lds
insl
shl
xchg
shlb
or
roll
scas
in
arpl
fstl
inc
inc
mov
mov
dec
xchg
in
fiadds
pop
stc
outsl
lret
sub
cmc
in
dec
imul
jmp
fisttpll
lods
jno
mov
ljmp
lcall
lcall
cmp
mov
xlat
into
outsl
inc
int
shll
icebp
push
leave
shr
cld
mov
cmp
xlat
lret
mull
pop
mov
jg
pop
gs
cmp
outsb
mov
rorl
mov
add
ljmp
aam
lods
lds
es
movsl
add
in
lods
mov
xchg
imul
divl
mov
rcrb
dec
jl
jae
out
sbb
insb
push
arpl
sbb
popf
jge
pushf
add
out
stos
push
jae
mov
add
std
xchg
in
sbb
lods
jb
and
roll
push
mov
push
insl
mov
das
inc
cltd
popfw
aas
pop
mov
add
cmpb
jo
imul
pusha
dec
insb
jns
push
mov
mov
cmp
lea
mov
sahf
sub
lods
jb
nop
das
lahf
xor
scas
rcll
push
nop
test
fprem
fs
shrd
icebp
insb
sti
loop
mov
jmp
imul
mov
xchg
rolb
mov
inc
pop
push
enter
mov
adc
gs
mov
cmc
pop
in
iret
push
test
lahf
xor
clc
xchg
mov
cmpsb
ljmp
addr16
jno
dec
jle
shll
pusha
jb
cwtl
icebp
or
inc
mov
mov
ss
mov
daa
mov
iret
popf
xor
mov
jbe
xor
jmp
dec
repz
imul
jne
fistps
int
jl
sub
push
bound
es
add
aad
pop
inc
mov
mov
mov
sub
cwtl
adc
xchg
out
and
xlat
cmpsl
nop
mov
gs
out
ja
adc
adc
pop
xchg
mov
sbb
es
mov
repz
aam
and
xor
dec
fcoml
jns
test
xchg
rorl
es
popa
adc
push
decb
mov
notb
cmpsb
push
cli
cld
mov
in
fnstcw
inc
roll
test
repz
jge
dec
mov
loopne
xlat
pop
andb
out
xchg
fiadds
or
xchg
into
inc
jge
mov
xor
ja
push
and
rclb
mulb
sub
cmpsl
xor
stos
add
jle
xchg
std
psraw
cmc
adc
mov
aad
sub
push
mov
jb
and
xchg
repz
repnz
xchg
mov
dec
repz
xor
push
jae
leave
leave
cmp
test
idivl
out
das
mov
sarl
pusha
push
std
cwtl
push
aad
test
push
xor
jmp
cs
push
in
cmp
in
push
mov
mov
inc
sbb
data16
stc
popf
dec
xlat
push
sti
xchg
push
add
rorl
rorb
mov
or
adc
sub
repz
push
cmp
jns
lret
stc
push
push
cmp
jp
movsl
push
fsts
and
push
jecxz
ret
cmp
mov
ret
test
push
jmp
add
sbb
int3
push
mov
xchg
stos
loopne
dec
jnp
aaa
stos
clc
arpl
push
mov
dec
mov
and
repnz
faddl
aam
test
sbb
pusha
roll
and
loopne
fildl
mov
dec
inc
addr16
stos
pop
inc
cmp
mov
lock
das
icebp
xchg
stos
jmp
mov
dec
in
cmp
fsubr
orl
xor
cs
xchg
dec
dec
out
inc
lret
dec
adc
jmp
inc
bound
jo
add
push
mov
pop
scas
mov
insb
pop
sub
inc
mov
dec
dec
out
loopne
je
divb
xchg
sbbb
outsb
arpl
push
es
jp
cltd
cmp
scas
fadd
int3
insb
lods
xchg
test
mov
add
mov
adc
iretw
insl
addr16
lock
push
add
inc
aaa
cmpsb
push
inc
lcall
jne
fcoms
stos
mov
sub
popa
push
pop
dec
shll
jmp
imul
insl
lods
pop
add
xor
xor
and
jb
shll
pushf
movsl
mov
repnz
es
popf
jmp
pop
sbb
ret
jo
sbb
pop
cmpsl
sbb
pop
cmpl
cmpsl
dec
ror
leave
add
adc
mov
push
movsb
loopne
icebp
fimuls
jecxz
jmp
mov
data16
adcb
sar
xor
cld
mov
cmc
xor
or
bound
and
mov
mov
inc
push
xor
cmp
add
inc
insl
mov
movsl
jl
hlt
or
mov
scas
push
mov
cmp
ror
xor
repz
and
jbe
mov
jbe
call
push
xor
sbb
sub
int3
mov
outsl
xor
inc
and
shrl
mov
jo
sub
inc
inc
mov
mov
subb
ds
xor
imul
cli
add
xchg
hlt
stos
xchg
pop
mov
ja
jnp
push
xlat
xor
and
adc
aad
leave
xchg
sbb
mov
leave
inc
and
arpl
mov
xchg
inc
lock
and
imull
movsb
testl
mov
fdivr
pusha
push
cmpsb
and
lcall
adc
mov
imul
dec
push
into
push
mov
fsts
ljmp
xchg
int
and
or
push
jmp
sub
in
mov
lcall
popf
xlat
fcmovu
sbb
adc
pop
pop
pop
dec
dec
sub
mov
je
pop
je
sbbb
adc
xchg
or
in
cli
push
xor
pop
scas
out
aas
add
lahf
xor
mov
and
dec
pop
inc
jl
data16
pop
jl
negb
jne
pop
push
das
jl
mov
jge
ret
loope
jle
mov
mov
mov
inc
pop
xchg
add
jns
je
repz
jl,pt
mov
or
adc
push
sub
mov
icebp
cmp
cmpxchg8b
into
push
and
sbb
pusha
mov
cwtl
mov
push
and
xlat
cmp
lret
mov
xor
inc
ljmp
dec
cmp
je
loope
jmp
lret
or
push
mov
xor
cld
pop
xchg
inc
adc
push
mov
cld
xchg
inc
sahf
jno
shll
imul
mov
and
scas
test
mov
lahf
aad
lret
mov
pushf
sbb
push
jecxz
jo
cmpsb
lret
rcrl
or
mov
and
sbb
mov
sub
xchg
movsl
mov
in
xchg
sub
aaa
sub
in
push
in
sub
shll
fdivl
repnz
into
xchg
inc
sub
jne
jno
cmp
dec
lods
cmp
repz
sub
mov
mov
push
jmp
push
or
je
pop
mov
pop
test
push
mov
fldl
loopne
push
shll
cmp
add
daa
ss
lea
enter
into
jo
rcrb
push
mov
rcll
popf
jno
sbb
incb
jg
dec
xchg
jmp
push
fnstenv
push
aas
scas
inc
xor
mov
xchg
mov
xchg
nop
xor
movsl
sub
cmpsl
lods
out
je
scas
pop
inc
pop
rcr
add
popa
nop
aam
lcall
ljmp
xlat
pop
add
add
inc
sahf
mov
ss
mov
into
push
fld
inc
mov
xchg
xorl
aas
icebp
jmp
xor
dec
inc
clc
in
jbe
pop
cmpsl
inc
or
xchg
sbb
cmp
xor
jne
mov
adc
pop
cli
imul
xchg
or
pop
pop
lods
not
outsb
mov
dec
pop
addr16
fsubp
mov
push
ss
outsl
notl
lods
inc
sarl
pushf
and
jge
jae
sbb
or
bound
mov
test
push
mov
jmp
push
lods
ret
ret
lds
jae
adc
mov
outsb
dec
sbb
mov
call
cs
psraw
lahf
sbb
imul
mov
iret
push
add
daa
sub
mov
adc
shlb
test
mov
dec
mov
pusha
mov
and
or
dec
cmp
mov
mov
stc
push
and
mov
or
mov
sbb
les
clc
dec
jae
idivb
push
pop
jle
aaa
icebp
test
and
mov
cli
mov
xor
idivb
bound
cwtl
mov
ljmp
aam
call
fld
add
aad
cmpsb
insl
sub
clc
scas
shrb
add
cs
cmc
push
pusha
xchg
mov
jge
test
mov
fisubrl
mov
push
mov
in
imul
xor
inc
test
mov
sub
jae
xchg
jecxz
icebp
mov
insb
cmp
in
xor
js
ds
and
dec
mov
xchg
arpl
xlat
xchg
xor
dec
ds
mov
lods
ret
sub
sub
aam
and
mov
mov
mov
add
pop
push
pushf
call
adc
adc
xor
jns
mov
into
enter
aas
loope
add
dec
cmc
sbb
out
fldcw
aam
fwait
andl
jo
dec
jle
pop
test
sbb
add
adc
xor
rorl
int3
xor
or
inc
cmp
js
andb
mov
pusha
pop
sub
cmpsl
movsb
push
push
adc
or
jecxz
sbb
arpl
ja
inc
xor
sub
and
lret
cmp
sub
and
adc
pop
xor
or
xchg
xchg
dec
mov
sbbl
or
aad
into
mov
xorl
ss
rclb
orl
cmp
pop
test
sub
jge
inc
sahf
cli
cmpb
push
push
inc
mov
insl
sbb
popf
inc
mov
add
sub
jbe
bound
int3
push
xor
out
xchg
xor
xchg
jo
mov
sbb
js
je
mov
push
lret
jo
mov
loope
adc
jg
imul
mov
cmpsb
push
in
add
lock
adc
loope
ja
loop
in
dec
push
jbe
daa
pop
aad
pop
lea
xorb
in
inc
fucomp
xchg
push
inc
jo
pop
fdivrs
stc
notl
aam
scas
pop
aaa
push
iret
stos
or
repnz
cli
push
shrl
inc
sbb
jl
enter
lock
xchg
dec
int
mov
pop
stos
mov
cmp
pop
in
dec
xor
stc
jecxz
sahf
ficoml
aad
jb
out
pop
mov
push
and
or
ret
paddsw
ficomps
push
ja
in
lods
add
jl
cmp
movsb
loopne
xchg
and
test
iret
mov
xchg
mov
sub
mov
cs
xlat
es
test
xorb
scas
jg
add
mul
lods
mov
xchg
and
mov
pushf
icebp
out
fmul
stc
mov
cmp
mov
cmc
jne
test
fsubl
jnp
mov
sub
jge
mov
aas
add
aaa
orl
jp
mov
loop
lret
fsubr
das
or
std
cltd
in
pop
mov
into
ficoms
lret
popa
dec
dec
jno
ljmp
mov
lcall
and
dec
jecxz
or
fsubl
hlt
sub
iret
int3
ss
aad
jb
mov
movsb
into
fisttpll
jg
mov
shlb
mov
pop
test
sub
test
aam
ss
into
lods
mov
jnp
mov
cmp
in
adc
jmp
ljmp
in
dec
pusha
ljmp
out
jnp
xchg
inc
outsl
int3
imul
out
xchg
mov
push
cld
mov
cmc
dec
sub
cmp
loop
xor
loope
mov
fwait
adc
xchg
cld
ja
shll
adc
imul
enter
cmp
add
loopne
xchg
mov
filds
gs
scas
cld
out
andl
add
ljmp
fcmovb
subb
iret
cld
shlb
cmpsb
push
rclb
and
aad
jge
aam
push
ret
push
jne
xchg
pop
jp
xchg
popa
dec
pusha
out
leave
enter
insl
add
test
out
lcall
fiadds
subl
xchg
lcall
jg
icebp
cmp
jnp
push
icebp
sbbb
std
or
mov
imul
enter
pop
push
mov
sbb
pop
stos
cs
adc
cs
mov
clc
iret
popa
cmpsl
arpl
les
cld
pop
mov
push
pop
pop
add
rorb
and
fbstp
imul
push
test
or
sbb
xchg
fs
fdivl
adc
pop
les
gs
dec
push
and
push
clc
das
stos
std
fcmovnbe
adc
in
jne
inc
sbb
shll
jge
xorb
sbb
lock
fwait
dec
or
outsb
std
push
inc
fucomi
nop
cmpsb
inc
stc
adcb
pop
shrb
and
mov
nop
cmp
testb
mov
test
push
cmp
mov
fstps
clc
das
jae
lea
dec
stos
pop
push
inc
js
rclb
dec
mov
ret
cli
adc
popl
add
das
mov
cli
jne
cli
outsb
push
addl
aaa
inc
std
aas
hlt
shr
jb
adc
icebp
dec
repz
pop
jmp
xor
dec
ss
and
fs
dec
mov
mov
push
mov
test
aas
arpl
jns
xchg
mov
loopne
or
ret
int
mov
out
add
in
sub
in
bound
lods
push
test
sbb
pop
out
push
hlt
cmp
test
xor
cmp
loope
pop
cmp
dec
lcall
mov
jae
adc
roll
jne
rorl
lods
rorl
pushf
jmp
lahf
dec
xchg
repnz
daa
rcrb
and
stos
dec
inc
push
dec
add
mov
ret
ret
popa
popf
leave
std
mov
test
or
icebp
mov
sub
pop
idivb
stc
mov
sbb
lock
pop
or
pop
pop
into
and
andl
test
cmc
insb
lods
mov
aaa
xor
test
adc
inc
popl
cld
xlat
es
push
xorb
or
jg
test
xchg
jmp
cmp
shrb
test
lcall
fsubrl
mov
cmp
cltd
into
jns
mov
clc
insl
jge
loopne
jae
fdivl
out
and
lahf
cs
mov
lods
pop
adc
or
xchg
jbe
add
ja
sbb
aas
xor
rcll
inc
cmp
jg
inc
addb
test
addl
aaa
call
pop
inc
cmpsb
mov
lret
lahf
xor
push
xorl
xor
insb
dec
jne
mov
jecxz
xchg
lds
movsl
aas
jp
in
cmp
xchg
sbb
ret
rolb
aad
lods
lds
xchg
sub
movsb
aas
out
jmp
pop
cmp
xchg
inc
xor
cmp
lcall
insb
mov
into
inc
or
sub
pop
mov
stos
inc
fdivrs
ljmp
xor
stos
cmp
lds
iret
adc
shll
jecxz
in
sbbb
jecxz
sub
pusha
sub
or
dec
add
pushf
add
rclb
cmp
and
and
aaa
je
in
fwait
and
jp
int
repnz
mov
jp
push
nop
sbb
inc
dec
jae
popa
sbb
pop
test
dec
cmpsl
xor
and
fisubs
push
andl
daa
sub
ds
or
jecxz
inc
sub
out
sti
mov
aaa
pop
scas
cmpsb
aam
xchg
cmp
push
ret
mov
mov
push
fildl
iret
cmp
jno
les
ss
mov
daa
xchg
test
mov
mov
stos
cmpsl
push
mov
sahf
in
leave
dec
pop
jbe
pop
jbe
popf
sbb
inc
mov
push
pushf
lcall
push
sti
loopne
movsl
adc
lods
xchg
pop
xchg
pop
xlat
jnp
cld
xchg
insl
sbb
sbb
out
and
fildl
into
ret
add
push
insl
push
cmp
push
outsb
sbb
cmp
xlat
iret
sarl
cmp
push
lcall
or
adc
outsb
ret
cmp
rcll
fmuls
jmp
sbbb
jge
andb
bswap
push
mov
and
add
mov
cltd
mov
mov
xor
and
inc
add
mov
and
or
xlat
in
sub
mov
sbb
mov
popa
mov
jno
fistpl
shll
js
loope
movsl
arpl
std
test
call
mov
shlb
dec
or
mov
pushw
cmpsb
mov
sti
cmpsl
bound
pop
es
adc
or
pushf
scas
xor
adc
mov
xorl
dec
cli
xchg
aaa
and
and
mov
sahf
fsubrs
sbb
jne
inc
xchg
sbb
adc
in
xor
mov
fstps
addb
imul
cltd
pop
aas
movsb
movb
les
add
mov
divb
adc
inc
pushf
and
shll
jbe
movsb
or
adc
pop
leave
xchg
pop
bound
or
psllw
xor
lea
jns
and
shll
dec
and
jge
cmp
shll
xorl
mov
jp
xchg
add
mov
push
das
arpl
jmp
sub
and
push
or
cmp
scas
sbb
fcoml
call
sub
nop
mov
add
xchg
into
dec
jne
icebp
call
stos
aaa
rolb
jne
in
jae
sbb
mov
inc
ret
add
cmp
or
aam
jge
incl
cmp
adc
std
inc
cld
adc
jle
popf
stos
inc
rcrl
in
icebp
add
mov
aas
and
out
jg
xor
int3
cld
insl
and
cmpsb
pusha
lret
jbe
ret
cld
ja
mov
test
jns
bound
mov
jns
fcmovnbe
addl
pop
cmpsl
call
scas
adcb
stos
jp
jp
aam
cli
cmp
sbb
out
js
add
lret
repz
sub
push
dec
cmp
mov
je
and
mov
daa
mulb
ret
or
scas
xchg
add
test
mov
sahf
enter
sbb
pop
jo
das
sub
int3
rorl
xor
je
push
in
adc
pop
shll
dec
sub
mov
adc
or
cmp
dec
int3
xchg
andl
mov
cwtl
call
mov
addr16
or
jae
sub
cmp
nop
stos
movsb
pusha
dec
rorb
jmp
add
push
ret
mov
mov
sub
add
mov
out
lret
cmp
push
cmpb
decl
sub
call
xor
sub
bound
sbb
ret
leave
mov
test
orb
push
loope,pt
mov
push
inc
daa
jecxz
push
mov
push
inc
adc
aaa
leave
dec
xchg
xor
jl
jmp
jne
push
and
shl
inc
mov
adc
loop
add
icebp
and
imul
jno
or
out
and
xor
and
pop
add
mov
das
or
fidivrl
jae
adc
imul
ficompl
or
jns
or
mov
xor
xchg
adc
inc
cmc
mov
fistpl
shrb
fildll
cmp
fistl
dec
inc
lea
add
push
popa
ret
ret
out
in
inc
roll
iret
xchg
push
mov
daa
adc
fucomp
push
data16
push
fmuls
xchg
inc
shll
fwait
outsb
ljmp
mov
pushf
push
lret
gs
int
mov
lahf
push
repz
ret
cli
jge
int3
in
mov
mov
cmp
mov
mov
push
dec
jmp
into
ljmp
mov
mov
dec
jae
mov
dec
cmpsl
sbb
inc
dec
dec
jb
mov
jnp
movsl
or
insl
mov
les
pop
and
inc
sahf
mov
xor
pop
lret
daa
or
rcrl
adc
ss
daa
and
outsb
ja
push
inc
pop
mulb
sbb
mov
push
test
cmc
call
dec
movsl
pop
aaa
dec
jge
in
xorb
and
push
xor
dec
cmpsl
imulb
daa
pop
call
lret
cs
rorb
shl
imulb
fs
mov
mov
jle
clc
mov
jle
std
mov
or
inc
pop
fwait
outsb
cli
lds
inc
dec
inc
pop
pop
movsl
in
xchg
fnsave
or
jmp
bound
pop
in
and
mov
ds
sub
shr
out
pushf
pop
push
xchg
sbb
loopne
jl
data16
addl
sbb
fwait
or
daa
jo
out
popa
filds
ds
lock
sub
sti
dec
adc
aad
testl
gs
roll
push
or
ljmp
sub
push
les
push
mov
jg
push
fstp
mov
mov
rcrl
addr16
and
mov
cmp
call
out
lods
cmp
sbb
jl
cltd
xchg
xchg
lret
jns
add
jge
mov
adc
mov
cwtl
outsl
pusha
in
xor
lret
ss
dec
mov
dec
movsl
movsl
sahf
fwait
push
pusha
xchg
cmp
icebp
adc
repnz
jne
adc
fstpl
push
add
movl
push
mov
cmp
cwtl
mov
mov
pop
mov
lock
cli
xor
cwtl
push
cmp
das
jge
cmp
lock
aaa
ds
hlt
and
mov
sub
add
sub
call
mov
aaa
lock
inc
shrb
arpl
push
mov
in
pop
leave
out
enter
mov
into
push
sub
mov
and
scas
dec
mov
pop
push
add
dec
mov
and
and
pushl
pshufw
lods
mov
inc
push
test
fwait
fwait
int
movsb
jnp
data16
fnstenv
sub
icebp
cmp
or
cmp
int3
adc
xchg
dec
ret
fucompp
popa
add
in
pop
sti
and
test
rol
sub
mov
subl
test
ret
fidivrs
mov
dec
inc
test
xchg
push
cmp
push
dec
ljmp
cmp
movsb
xchg
mov
sub
adc
int3
mov
adc
test
lret
cmp
repnz
aas
enter
in
lret
fmuls
call
das
cmp
pop
mov
incb
js
fnstsw
int
dec
cmpsl
mov
adc
fistpll
adc
int
sbb
push
push
sub
sbb
push
aas
mov
xor
xor
call
xchg
cmp
push
movsb
pop
aas
mov
dec
gs
cmp
lret
and
lock
loopne
negl
into
push
xlat
insl
idiv
test
out
xchg
sahf
cmp
mov
imul
mov
rorb
or
xchg
ret
sub
adc
fwait
stos
dec
daa
cmp
xchg
rcr
int
lcall
imul
ds
call
ret
in
jo
je
daa
mov
xor
out
scas
and
jl
xchg
xchg
and
stos
sub
xorb
xchg
xlat
mov
pop
add
adc
sbb
cltd
jp
fisubrs
mov
pop
aas
cmpsl
mov
cli
out
xor
ss
cwtl
test
push
notb
push
and
arpl
jne
push
push
imul
lods
stos
insl
jle
mov
mov
sub
imul
mov
push
lret
cmpsb
dec
fistpl
push
mov
cld
fstps
lret
jmp
pop
test
lret
movb
push
or
insl
and
sbb
jnp
mov
js
pop
jle
rolb
fmul
dec
pop
movsl
sub
pop
pop
push
sub
jg
das
jbe
sub
sar
outsb
pop
push
scas
fs
cmp
data16
fstl
xchg
push
into
pop
lahf
push
cli
mov
add
sub
enter
lods
rcrb
jle
in
mov
jnp
cmp
push
lods
out
sbb
mov
xchg
test
mov
fists
cltd
cmpsb
sub
xchg
mov
jmp
mov
sahf
mov
les
inc
mov
ret
mov
roll
and
add
cwtl
xlat
add
fdivs
sub
ret
jns
ja
xor
out
cmp
hlt
push
push
or
bound
call
out
iret
outsb
mov
mov
push
adc
out
xchg
insl
mov
mov
adc
mov
adc
mov
mov
add
mov
jb
xchg
test
sbb
dec
dec
push
sub
leave
inc
lret
lea
test
pop
mov
add
xchg
das
jne
push
test
sbb
xor
lds
sub
out
sbb
mov
lds
repnz
sub
sbb
daa
jne
addr16
xchg
lret
push
mov
lock
sbb
mov
test
test
test
jge
loopne
sub
pandn
inc
adc
mov
mov
xchg
push
push
fcmovu
cmp
xchg
fdivrl
pushf
lock
fdivs
stos
mov
js
shlb
push
mov
test
enter
in
popf
jmp
jle
icebp
xor
inc
or
xor
mov
or
mov
neg
call
push
cmp
fldt
outsb
push
dec
in
fdiv
js
int3
outsl
lret
les
lret
fnstenv
test
cli
inc
push
sbb
add
or
adc
lock
movsb
nop
xchg
aad
and
jge
mov
and
mov
test
push
filds
in
fidivs
cmc
or
pop
mov
pop
push
dec
mov
push
mov
push
cmp
lcall
xchg
xchg
cmp
mov
scas
sub
pop
xlat
out
sub
mov
and
push
pop
add
imul
dec
mov
mov
movsb
scas
jns
ss
push
test
ds
jle
cmp
sub
stc
out
mov
fldt
and
sub
dec
loop
in
in
cmc
cmp
les
xchg
inc
mov
fmull
orl
fwait
cmc
fwait
lahf
cmp
pop
jge
cmp
mov
jl
inc
add
jns
or
push
push
addb
aaa
xchg
sub
push
scas
insb
push
pop
icebp
inc
push
xlat
xor
inc
insb
imul
dec
js
std
stc
fstpl
enter
pop
fs
stc
fsts
xor
adc
les
or
das
insb
mov
dec
shll
fcoms
lcall
insl
out
jns
fincstp
add
xchg
dec
dec
ret
mov
xchg
adc
lds
int3
cld
test
cltd
leave
repz
mov
out
stos
sub
push
sbb
repz
jns
in
sti
in
ret
cmp
pop
sub
pop
cltd
fldl
shrb
jnp
inc
mov
das
push
and
lahf
sbb
ret
push
sub
push
pop
outsl
arpl
lcall
xchg
inc
or
jecxz
iret
les
inc
pop
jns
and
cmpsb
into
lds
faddp
popa
pop
hlt
cmp
lds
add
cmpsl
cmp
cmpb
adc
inc
fptan
adc
cmp
stos
dec
fists
pop
loopne
jne
mov
pop
imul
pushf
clc
fsts
daa
fs
test
mov
cwtl
jbe
mov
leave
jbe
vpshufd
or
jg
sbbb
dec
fldl
mov
int3
inc
mov
cmpsb
rorl
dec
sub
in
loope
test
scas
push
cmp
xor
cmp
fstpl
inc
in
mov
push
inc
adc
daa
push
stc
inc
inc
sbb
lret
test
adc
mov
jne
jb
adc
add
inc
inc
ds
lahf
and
fstl
or
push
jge
scas
jbe
repnz
mov
ja
and
pop
xorl
es
aad
xchg
andl
push
imul
test
push
js
add
lea
adc
lahf
std
data16
dec
lcall
mov
dec
cld
sub
or
jge
mov
in
mov
shrb
pushf
push
mov
aaa
inc
mov
cmp
dec
inc
or
xor
cmp
cwtl
fstpl
mov
pop
cmc
or
out
subl
xor
je
jns
sbb
out
or
cwtl
ficoml
fildl
push
jmp
fstl
outsl
or
add
rorb
sahf
mov
push
fcompl
in
mov
xchg
pusha
sbb
int3
stos
or
bound
sbb
push
adc
flds
jge
inc
arpl
scas
add
jg
adc
mov
sbb
dec
inc
mov
insb
fisttpl
dec
lahf
dec
mov
sub
and
loopne
xor
xchg
mov
rorl
push
aaa
push
sub
mov
ret
into
mov
cmp
jns
enter
loop
push
xor
push
pop
add
sahf
in
mov
ret
imul
mov
imul
mov
lret
dec
leave
ljmp
mov
xchg
test
inc
sub
lea
imul
ret
pop
std
inc
push
sbb
push
push
pop
je
xchg
negl
xchg
stos
cmpsb
jge
jnp
mov
in
ljmp
rclb
push
fmuls
mull
jmp
push
dec
jmp
pop
add
cwtl
pusha
in
loope
mov
jmp
imul
xchg
mov
pop
mov
inc
test
loop
push
mov
push
dec
pop
repnz
or
and
sub
jno
push
imul
test
sub
mov
mov
fwait
mov
push
loop
out
xor
gs
inc
jle
push
inc
mov
out
fists
lds
mov
inc
sbb
jb
push
aam
mov
push
push
jg
hlt
sarl
or
js
hlt
or
cmc
or
dec
mov
pop
mov
dec
pop
mov
xchg
adc
push
sbb
stos
mov
rol
xchg
push
insb
pop
dec
hlt
adc
xor
xchg
shll
rclb
adc
popf
xchg
into
stc
cltd
pop
sub
sarb
stos
js
adc
out
xor
dec
mov
leave
or
sbb
xchg
pop
roll
hlt
lock
mov
addr16
pop
out
jne
xchg
popa
xor
loope
out
ds
jo
pop
test
add
pop
or
adc
cmp
pop
int
cwtl
cmp
pxor
lock
dec
inc
mov
arpl
sbbb
out
and
sub
imul
adc
lret
hlt
insb
push
test
int
push
lret
call
pop
scas
mov
jg
lds
mov
or
push
popa
lea
inc
push
mov
push
lods
mov
adc
xchg
mov
mov
shr
inc
mov
push
stc
fildl
cwtl
out
lahf
movb
hlt
fsubrs
push
decb
sbb
push
lods
pop
out
sub
pop
repnz
and
pop
push
pop
dec
pop
cmp
sbb
adc
rolb
add
add
or
sbb
sub
add
imul
jge
and
xchg
or
cs
sbb
cs
lret
sbb
jge
ret
testl
or
pop
aam
push
repnz
jge
push
fnstcw
in
mov
xchg
mov
mov
cmpb
and
mov
movsl
mov
lret
pop
sahf
lds
mov
mov
inc
xor
sar
arpl
cwtl
lock
and
jbe
cltd
aas
arpl
dec
nop
mov
rcl
lcall
mov
xor
data16
or
jg
add
xchg
insl
add
iret
ret
sbb
fldcw
push
jg
pop
mov
cld
rcrl
pop
mov
mov
cltd
pop
mov
mov
out
mov
jmp
shll
imul
jle
out
cmp
sub
daa
sub
jbe
clc
adc
test
int
push
arpl
mov
adc
hlt
xlat
loopne
pop
sbbb
mov
xchg
aas
add
adc
xor
imulb
xor
loope
inc
leave
dec
jg
bound
jmp
testb
mov
ret
mov
fmuls
xchg
into
push
add
cmp
pop
pushf
lret
jecxz
adc
dec
sti
sub
cmpsb
movsb
imul
cmc
xchg
pop
dec
cmp
aad
jmp
xchg
andl
mov
outsb
pop
xchg
aaa
adc
xor
mov
das
jne
rcr
enter
fcomp
and
mov
lea
lods
int3
loope
decl
push
cmp
dec
hlt
out
sub
dec
xor
loope
js
push
into
cmp
scas
pop
sub
sahf
jecxz
dec
jg
icebp
fmull
pop
or
je
sub
dec
shrl
jp
add
repnz
fisttps
inc
adc
mov
push
mov
dec
or
dec
call
stos
add
jae
les
add
sbb
mov
outsl
jns
loope
or
loop
inc
mov
sub
push
test
test
sarb
loopne
dec
mov
adc
in
out
mov
cmpsb
and
popa
xor
push
imul
pop
or
mov
mov
lods
loopne
ds
insb
add
rol
in
xlat
or
push
xchg
pop
testb
jmp
add
in
mov
ret
mov
pop
pop
lret
jg
push
ja
in
negl
mov
fimull
xchg
pusha
je
mov
fildl
or
mov
sub
hlt
jge
inc
pusha
in
xchg
sub
pop
test
mov
and
mov
lds
mov
cli
ja
sti
loope
push
lock
loop
lcall
test
add
sbb
push
pushf
pop
mov
in
adc
xor
or
fists
cmp
push
mov
in
mov
push
pushf
addl
arpl
dec
jecxz
sub
xor
xor
pushf
pop
fdivr
shlb
lock
fwait
mov
mov
int
push
stos
loopne
nop
xlat
lcall
pushf
aas
icebp
inc
xchg
add
pop
sbb
cmp
mov
push
or
sbb
fwait
lahf
inc
sti
dec
pop
xchg
adc
push
push
or
pop
xchg
jno
or
jae
sub
test
and
inc
xchg
lds
adc
ljmp
test
in
outsb
iret
bnd
fwait
hlt
movsl
dec
xchg
sbbb
jo
xchg
xor
lds
mov
jg
insl
cmp
cmp
pop
andl
bnd
xchg
mov
add
aaa
xchg
adc
cmc
dec
imul
sub
js
jl
mov
jmp
push
movsl
iret
xchg
add
jo
pop
lds
sub
stc
cltd
sbb
in
jo
cwtl
or
mov
aam
adcb
rcr
adc
xchg
cmp
sbb
lcall
test
out
pop
or
jno
add
cmp
lret
jo
add
movlps
dec
addr16
cmpl
std
test
dec
xor
cmp
jbe
imul
pop
inc
sahf
cmpsb
xlat
add
pop
sahf
mov
dec
test
dec
sbb
sub
lods
clc
adc
lret
cmp
xor
adc
popf
mov
std
inc
lea
adc
es
aam
push
xor
inc
mov
pop
mov
push
sbb
rclb
dec
xchg
imul
mov
dec
cmp
push
ds
mov
mov
pop
jne
xchg
test
xchg
fwait
ja
and
ret
cmc
inc
xor
dec
mov
push
and
pop
xor
ja
aad
adc
pop
adc
sbb
push
inc
sub
adcl
lods
aas
je
mov
add
in
roll
mov
cmpsl
pop
scas
les
jge
xchg
int
push
scas
test
or
ret
mov
outsl
mov
fisubs
xchg
jle
test
cs
push
lods
decb
movsl
ja
cmc
xlat
mov
cmp
imul
mov
in
lret
leave
mov
aas
pop
adc
mov
sbb
pop
mov
mov
jns
cmp
icebp
repnz
adc
movsl
or
je
stos
fdivl
dec
sbb
je
and
xor
call
xor
adc
call
aaa
lock
jnp
sbb
jb
and
ret
cmp
inc
inc
cmp
loop
pop
push
mov
mov
xorb
shrl
or
sbb
out
test
add
mov
jno
jmp
pop
push
push
or
jle
dec
jne
pop
insl
bound
nop
adc
dec
lret
pop
pop
lods
daa
rcrl
inc
lahf
xor
or
in
and
xor
mov
lret
out
in
call
mov
mov
je
xor
jg
xor
sbb
cmp
lea
add
mov
inc
les
xchg
stos
mov
nop
ds
test
or
popf
arpl
jno
lcall
dec
mov
jne
insl
pop
int3
pushf
pop
out
cld
xchg
dec
inc
mov
gs
cmc
out
add
mov
mov
mov
or
inc
and
pop
dec
jg
dec
inc
sbb
fbstp
jns
sub
or
jl
push
int3
push
ljmp
daa
mov
adc
push
rcll
cmpsb
js
int3
fmull
std
loopne
test
add
sbb
out
test
pop
mov
mov
sub
movsb
mov
pushf
push
pop
out
cmp
cmp
adc
push
jae
ja
cwtl
xor
xlat
imul
xchg
jp
daa
lret
or
test
adc
push
mov
loopne
lcall
or
pushf
mov
aam
fistl
sub
arpl
movsb
out
dec
mov
fwait
sarb
imul
int3
pop
xchg
mov
xor
mov
fistpll
mov
std
hlt
sub
sub
lret
pop
subb
pop
dec
outsl
insb
mov
xchg
mov
mov
pop
xor
jg
mov
mov
xchg
inc
stos
xor
mov
loopne
orl
daa
or
call
dec
jl
lea
sub
test
stc
add
mov
ss
xchg
icebp
fmull
sbb
mov
pop
push
outsl
sbb
add
cmp
call
ljmp
lock
les
mov
or
in
fildl
mov
xor
fadds
popa
and
jl
sbb
ret
out
inc
sub
xor
inc
loop
dec
sbb
loop
jb
adc
daa
clc
imul
fmul
inc
mov
inc
add
cmp
mov
inc
std
and
sub
pop
pusha
mov
shr
enter
mov
aas
popf
jae
lret
repz
xchg
xchg
and
pusha
mov
inc
cmpsb
test
repz
jno
aad
cmp
pop
xchg
push
adc
inc
in
adc
sbb
push
jbe
scas
mov
mov
pop
inc
js
cltd
inc
dec
cmpl
leave
jbe
mov
hlt
inc
popa
arpl
popa
mov
mov
in
adc
cmc
out
rcrb
push
mov
inc
mov
test
jnp
lret
mov
icebp
fs
add
xchg
and
jbe
clc
lods
adc
sbb
and
xor
jbe
jp
pop
hlt
repnz
repnz
out
scas
cmp
push
jge
push
lea
mov
adc
adc
inc
pop
sub
pop
xchg
add
ds
lahf
shll
dec
adc
rorw
movsb
inc
cmpsl
sbb
push
xor
outsb
stos
push
mov
scas
out
xchg
add
jne
add
lock
jg
cs
lcall
dec
ret
jbe
jecxz
push
repz
mov
fdiv
sub
mov
fbld
pushf
or
shr
jle
mov
movsl
sbb
xchg
dec
and
dec
ret
fsubrs
fiadds
jne
mov
ret
pop
pop
cli
ds
push
cltd
lret
jg
push
es
ja
in
dec
sahf
inc
rol
iret
loopne
lea
ret
lock
rdpmc
bound
test
ds
pop
jmp
test
mov
mov
outsl
rolb
int
dec
ret
int3
xor
leave
fwait
adcl
imul
cwtl
orb
fldcw
pop
sbbb
gs
add
enter
jmp
sbb
ss
push
mov
add
pop
add
fwait
xlat
push
inc
out
inc
bswap
ret
outsl
xchg
pushf
push
xlat
cs
enter
cmc
fimull
negl
adc
fildl
imul
push
test
dec
push
xor
and
xchg
pop
jbe
and
fbld
test
or
shrb
daa
movntq
out
mov
lea
test
int
je
xor
mov
dec
lds
aas
test
cmp
cmp
mov
sarl
xchg
insl
adc
sub
dec
dec
sub
pop
movsl
jae
add
and
mov
fcompl
pop
jl
sub
or
and
fdivrs
cmp
adc
cld
xor
cmpsl
mov
cmp
inc
add
mov
in
sbb
data16
add
cmc
cltd
and
sbb
pop
cld
sub
add
out
shl
mov
mov
std
iret
jae
arpl
shll
pop
jmp
mov
push
push
pop
push
js
xchg
mov
push
add
xor
sub
push
rorb
fistpll
sarb
add
cli
cmpb
lcall
out
mov
jg
mov
mov
pop
jne
pop
outsb
ret
push
add
mov
sub
pop
lret
mov
data16
fsubr
test
pop
mov
int3
cli
daa
jp
mov
lahf
jl
sbb
sub
cmp
adcl
or
or
xor
shlb
andl
addr16
in
scas
scas
enter
add
push
xchg
cmpb
pop
mov
dec
sahf
out
daa
cltd
jnp
pop
bound
inc
lea
sbb
cs
jo
pop
fs
lock
adcl
shlb
push
dec
pop
das
andb
out
cs
scas
lea
ret
das
cmc
ds
inc
jb
and
popf
cld
sahf
cs
mov
pop
test
mov
inc
mov
cmp
xchg
adc
int
pushf
enter
js
nop
sbb
fisubl
mov
sahf
sbb
mov
in
les
jno
mov
xchg
mov
fwait
push
sub
mov
imul
mov
addr16
mov
scas
xchg
lock
inc
pop
add
cmpsb
lea
test
fisttpll
push
icebp
sti
lea
pop
movsl
leave
mov
mov
lea
push
es
mov
cmp
inc
mov
sub
test
sbb
push
sti
pop
or
out
in
xor
call
mov
aad
cs
in
jge
mov
outsb
fistl
loope
lods
pop
call
das
dec
jmp
shlb
and
in
xchg
jns
scas
push
mov
mov
xor
imul
and
popa
sbb
enter
fadd
lock
movsb
mov
adcl
and
out
fstl
test
jae
test
ja
xor
xchg
push
xorb
fnstcw
out
call
rolb
jne
cmp
in
push
xlat
pop
lret
jns
mov
pop
mov
xor
ja
je
cmpsl
mov
dec
test
inc
pop
insb
ret
js
fmulp
pop
lcall
jo
addr16
push
shl
mov
adc
mov
mov
lods
push
pop
repnz
sub
pusha
push
int
hlt
jmp
mov
add
idivl
jnp
xchg
js
mov
aas
pushf
scas
mov
hlt
imul
aad
in
sbb
sub
sub
insb
adcl
cmp
xor
out
aad
mov
cmpsb
cmp
clc
push
mov
mov
jmp
dec
fwait
ja
sahf
lock
leave
out
pop
add
out
enter
sbb
lahf
imul
mov
std
push
and
fsubrs
mov
add
fmull
loopne
sbb
fimull
inc
push
add
cwtl
push
stc
mov
ret
mov
push
inc
dec
out
xlat
or
pop
movsl
sti
imul
pop
dec
in
out
xchg
mov
xchg
nop
inc
pop
push
sbb
test
test
mov
pop
mov
xor
icebp
dec
lcall
fst
out
imul
push
nop
pushf
bound
xor
mov
repnz
in
push
pop
dec
add
test
mov
in
jno
lahf
stc
jae
fdivl
out
fmul
aas
jecxz
xor
daa
fisubrs
dec
jecxz
ret
inc
mov
cmc
push
cmp
fwait
shl
fimull
in
scas
jb
gs
mov
fcmovu
ds
mov
aam
xchg
adc
shlb
pop
out
dec
dec
out
ficomps
nop
shr
lcall
xchg
stc
cmp
mov
xchg
jns
sub
insb
shlb
das
arpl
and
test
scas
mov
cmp
xlat
xor
fistpll
dec
mov
mov
mov
sub
enter
xchg
sti
and
pop
jbe
sub
mov
mov
sbb
fadds
pop
nop
xor
pop
inc
aas
scas
mov
sbb
fisubs
sbb
cltd
pop
pop
mov
mov
mov
add
adc
mov
arpl
rcr
jge
clc
pop
notl
push
dec
les
pop
push
jae
bound
dec
push
pushf
jbe
adc
push
ror
cs
andl
inc
pop
and
xchg
adcb
sarl
mov
cs
mov
outsb
lds
lods
cmp
push
test
leave
or
fisubrl
jg
jmp
push
and
push
popf
iret
adc
add
mov
jb
lods
fldenv
int
imul
and
and
add
repz
js
jge
pop
xlat
jg
jmp
fs
mov
mov
movsb
mov
test
int3
or
and
pop
mov
and
pop
test
push
scas
add
cmc
aaa
nop
loopne
inc
popf
sub
out
shl
lret
push
dec
dec
ret
pop
xchg
mov
xchg
cld
in
out
cmc
xor
nop
imul
inc
mov
push
sbb
mov
fisttpll
dec
test
out
xchg
xchg
inc
push
and
lock
sbb
dec
cmp
rcrb
sahf
xchg
mov
cmp
inc
in
movsl
mov
or
out
lret
sbb
mov
and
scas
incb
fs
lret
jecxz
aad
push
test
lods
xchg
jecxz
jle
add
mov
xchg
sbb
add
aaa
pop
mov
or
dec
ss
adc
mov
pop
mov
cmpsl
aas
movsl
xor
loopne
idivl
pop
xor
sbb
sub
in
repnz
dec
mov
out
sbb
mov
xchg
data16
jae
mov
shll
xor
shll
adc
inc
popa
pusha
cmp
xchg
mov
fidivrl
bound
push
pop
mov
out
sub
icebp
push
push
cld
in
sub
sbb
and
out
add
sub
jmp
cmpb
lods
imul
dec
pop
mov
fsubrp
and
mov
inc
adc
push
jp
adc
repnz
sbb
push
dec
cltd
icebp
ret
cs
sbb
cltd
xchg
lcall
mov
xchg
imul
shl
sbb
cmc
arpl
or
pop
enter
inc
lock
leave
test
xchg
xor
das
push
notb
push
clc
pop
mov
mov
fistps
mov
adc
lcall
fsubs
adc
enter
jmp
jbe
push
pop
mov
fstsw
test
ret
xor
jl
cmp
dec
das
inc
repz
or
push
mov
jnp,pn
nop
push
add
fiaddl
ja
xchg
fsubrs
jge
into
mul
pop
das
fwait
add
inc
fwait
jno
lea
jns
fistpll
cmpsb
iret
cmp
mov
sar
or
pop
je
xor
cmp
dec
cli
cs
mov
shll
stc
lea
fs
inc
leave
lods
cmp
cmp
imull
stos
jp
in
push
aaa
pop
jb
cs
inc
lods
mov
jp
loopne
sub
inc
push
jmp
cmpl
arpl
xlat
ljmp
lret
movsb
mov
in
subl
clc
fnstsw
dec
fistps
or
imul
sbb
in
mov
aaa
mov
ds
popf
mov
bnd
repnz
xchg
mov
lods
push
out
xor
aaa
nop
call
addb
dec
fdivs
call
cli
int3
nop
enter
jns
inc
mov
cltd
cmp
scas
sub
clc
fcoms
andb
shlb
pop
cltd
inc
loopne
jg
adc
popa
mov
mov
jp
inc
int
pop
xor
xor
ja
in
sbb
cvtdq2ps
push
test
mov
cmpl
imul
jns
outsb
push
test
ret
mov
pop
and
and
or
jecxz
ret
sar
stos
xor
insl
aaa
ss
ret
ljmp
or
mov
xor
lahf
cmp
inc
hlt
in
adc
xchg
xor
fwait
adcb
push
pop
push
lahf
mov
sbb
push
mov
in
push
cmp
int
mov
inc
pop
cs
cltd
in
mov
mov
jmp
xchg
xchg
push
add
movsb
and
push
std
fsubp
arpl
jmp
mov
iret
rcrl
mov
es
fimull
int
xorps
and
ja
fwait
aam
pop
rolb
repz
test
or
sbb
xchg
mov
scas
imul
scas
adc
sti
mov
ret
aam
imul
jp
xor
or
adc
push
js
cmp
in
adc
cmp
out
sub
popf
pop
movsl
sub
insl
ljmpw
sub
dec
xchg
pop
xchg
inc
outsl
mov
and
and
mov
jge
popf
gs
dec
xchg
lcall
cs
xchg
lods
xlat
mov
arpl
inc
xchg
dec
aad
ret
and
int3
cmp
and
test
cmp
scas
cmp
cmp
lods
and
or
cmp
sub
testb
sub
adc
fiadds
cld
mov
mov
jo
fisubs
mov
jmp
test
dec
andl
cmc
fwait
sub
dec
cs
lods
sub
add
push
dec
mov
sti
je
sti
cmp
dec
out
into
add
in
adc
jne
pop
adc
dec
arpl
loop
repnz
mov
xchg
ss
int
popf
mov
mov
jmp
testl
imul
xor
adc
cmpsl
loop
das
ficomps
aaa
sar
frstor
outsb
pushf
or
shll
shll
pop
xlat
push
pop
or
sub
lret
in
ljmp
sbb
mov
sub
xchg
xorb
xorl
dec
push
roll
inc
insl
fwait
sub
test
leave
arpl
push
inc
cld
gs
nop
iret
mov
scas
sbb
pop
sub
pushf
out
rcll
cmp
jns,pn
jg
filds
fmul
cwtl
aad
outsl
scas
nop
cmpb
sub
sbb
cmp
insb
inc
dec
and
int
sbb
push
push
sbb
popa
sbb
adc
add
push
mov
pop
inc
dec
xchg
xor
sub
pop
fidivrl
mov
adc
repz
push
enter
add
dec
inc
pop
mov
push
mov
inc
inc
fildl
push
mov
xor
lods
aam
mov
call
lock
or
push
cmp
repnz
push
sub
in
dec
fisubrl
outsb
xchg
pop
adcb
andl
outsl
stos
sbb
fld
jae
inc
into
dec
jbe
aas
mov
imul
rol
pop
in
mov
insb
mov
dec
stos
aad
adc
add
and
pop
push
call
mov
lret
popa
popf
and
ret
insl
rcrl
cld
add
lods
sbb
inc
repnz
sub
pop
dec
sub
xchg
sbb
les
mov
adcb
inc
adc
arpl
jne
addr16
jl
xchg
dec
or
pop
mov
fs
mov
lcall
loope
or
add
mov
nop
or
popa
inc
addl
add
addr16
in
std
hlt
add
cmp
or
sahf
mov
inc
ljmp
cld
lret
fwait
cmp
mov
pop
roll
test
mov
lret
push
ss
sub
out
mov
aas
xor
push
imul
sarl
dec
ficomps
adc
cmpb
adcb
sbb
xchg
add
fdivr
inc
xchg
mov
stos
cmp
adcb
pop
or
cli
push
in
or
jge
jne
lock
cs
pop
nopl
les
xor
das
mov
sbb
jno
loop
xor
ret
or
cs
mov
jo
fcoms
jle
inc
add
sbb
dec
jns
pop
cltd
push
pop
ret
adc
mov
push
out
mov
xor
adc
enter
inc
dec
dec
mov
xlat
xchg
xchg
mov
stos
push
mov
xor
add
out
cmp
gs
andl
jp
inc
gs
lds
sub
leave
js
bound
sahf
adc
push
sub
push
inc
jnp
pusha
xchg
adc
mov
fmuls
pushf
js
or
scas
fistl
mov
icebp
or
cld
daa
mov
loop
jecxz
mov
sub
andl
bnd
cmpsb
popa
fwait
jp
lock
and
inc
stos
xor
xor
inc
sub
ja
push
mov
icebp
and
jge
or
push
inc
add
das
stos
adc
inc
or
shlb
dec
ja
sub
hlt
in
xor
or
jecxz
repz
ljmp
sti
mov
scas
movsb
cld
push
push
push
add
xchg
std
mov
jnp
dec
lret
sbb
mov
pushf
jp
adc
fcoms
stc
mov
jg
sub
aas
in
dec
fisttpll
mov
mov
testb
repz
jns
repnz
dec
xor
outsl
pop
jmp
cmp
ret
push
cltd
mov
pop
xor
shrl
or
gs
loopne
mov
pop
push
cli
mov
cmp
movsl
andl
movsl
nop
fisubl
jmp
jp
xchg
popf
call
call
cmp
push
sub
mov
cmpsl
cmc
add
les
les
int
pop
mov
xchg
push
push
push
rcrb
lret
sub
sbb
sub
std
lds
adc
push
mov
mov
xchg
cmpl
cwtl
push
cmpsl
movb
mov
push
cmp
ret
mov
inc
pop
addr16
pop
or
xchg
loope
cmp
es
ret
pop
jle
out
xchg
dec
mov
popf
jmp
fstpt
or
adc
mov
outsb
jo
ja
mov
sti
jae
cmp
and
mov
loope
mov
jb
xchg
or
sub
stos
test
cmp
popf
scas
adc
jo
and
orl
shll
cld
push
add
fildl
test
xchg
mov
in
movsl
push
mov
fstpt
cmp
adc
fistl
and
mov
loop
or
gs
inc
pop
jecxz
xchg
je
push
loopne
bound
daa
and
inc
mov
mov
push
xor
jnp
ret
lcall
fcoms
mov
add
movsb
hlt
sbb
cli
inc
jbe
and
sub
xchg
out
imul
mov
xor
bound
jae
movsb
mov
mov
sbb
jecxz
sbb
lock
dec
ja
cmpsb
mov
jmp
push
jg
icebp
dec
aas
xor
nop
aad
hlt
fwait
repnz
push
jge
dec
icebp
mov
loop
mov
dec
cli
push
insl
cmpsb
dec
mov
add
mov
in
dec
in
sti
stc
mov
sub
jno,pn
cmp
jmp
sbb
xchg
push
push
adcl
push
in
stos
dec
outsl
or
dec
lods
pop
push
insb
add
ficoml
mov
xor
adc
dec
les
cmc
insb
cmp
lret
mov
in
lret
and
sub
cltd
test
mov
xchg
into
sbb
dec
pop
dec
movsb
call
in
ljmp
push
sbb
pop
mov
push
sub
stc
push
jp
mov
dec
sub
add
mov
push
iret
stos
mov
lods
icebp
dec
movsb
idivb
lret
icebp
jae
pushf
mov
xor
daa
lcall
mov
adc
jne
mov
sub
pop
inc
sarb
insl
es
xadd
jle
ja
fistpll
xchg
sti
ds
cs
cwtl
jp
push
aaa
inc
jle
pop
jno
add
arpl
mov
in
and
inc
cltd
les
mov
or
cmpsb
jno
push
lretw
jp
fdivs
ja
jo
sub
movsl
xchg
mov
leave
xchg
mov
into
daa
dec
push
xor
mov
mov
mov
pop
push
pop
iret
in
not
mov
mov
fld1
fistps
mov
cmpsl
outsb
popa
sti
in
push
lret
arpl
data16
xchg
push
push
popf
xor
fisubs
jb
addl
adc
addr16
cmp
add
push
ds
xchg
fldl
or
outsb
pop
xchg
jbe
lods
xchg
mov
sbb
dec
push
sub
jns
mov
out
mov
push
mov
jns
cwtl
insb
xchg
or
mov
cmpsb
mov
jmp
ret
arpl
les
mov
sbb
mov
mov
popf
mov
call
inc
xchg
test
mov
xchg
out
dec
clc
movsl
xor
sbbl
dec
sbb
sub
jl
cld
xor
add
jno
sub
push
je
jg
ja
lods
lds
mov
xchg
inc
popa
sbb
fwait
cli
pop
loopne
wbinvd
sbb
pop
sub
daa
dec
pop
mov
int
fldcw
test
repz
and
lret
dec
pop
xchg
rcll
mov
in
imul
jecxz
popa
sbb
insl
push
mov
addl
sbb
outsb
test
shrl
xor
adc
mov
dec
push
lret
mov
inc
and
dec
popa
xchg
sbb
cmp
and
sbb
lea
push
cmp
lds
and
das
fimuls
and
jae
mov
shrb
jp
dec
lahf
fs
sahf
out
jb
lods
cld
icebp
test
iret
dec
xlat
ljmp
push
mov
mov
cmp
adc
xor
sbb
movsl
fstps
inc
sbb
cmp
cmc
sahf
mov
cmp
lea
mov
jbe
sub
pop
lahf
add
xor
out
sbb
and
sub
push
cmc
xor
out
mov
cmpsl
loopne
sub
mov
mov
cmpsb
adc
lods
ljmp
mov
idiv
pop
mov
or
pop
adc
xor
mov
push
cmp
pop
mov
imul
pop
mov
push
sub
stc
or
mov
or
decb
aas
sub
push
fsubp
sbb
in
sahf
cmpb
inc
pushf
xor
pop
mov
mov
scas
add
xor
and
adc
mov
push
idiv
aaa
imul
dec
bound
xor
xor
cmc
jb
inc
in
outsb
mov
mov
aas
vmptrld
adc
pop
mov
in
sbb
daa
lahf
into
push
dec
int3
and
cmp
mov
fldl
fwait
in
fiadds
aad
cmp
jae
inc
add
ret
sbb
push
dec
insl
mov
add
fidivl
int
icebp
jo
outsl
std
loopne
repz
dec
pop
scas
sub
out
mov
repnz
xchg
leave
aad
push
adc
mov
pop
rorb
jle
insb
scas
pop
xor
mov
dec
pop
sbb
js
test
fimull
push
in
xchg
lods
js
inc
mov
lahf
and
std
pop
mov
rcrb
add
dec
lahf
add
xorl
mov
adc
pusha
xor
dec
xchg
mov
push
mov
cmc
stc
push
loop
mov
adc
mov
jmp
jmp
or
stc
or
das
insl
adc
sub
shl
fistpll
in
mov
push
add
add
xchg
arpl
sbb
jecxz
cmp
sub
cld
lea
sti
dec
test
jns
mov
mov
ret
pop
xchg
pop
fisttpl
test
mov
mov
rorl
testb
push
inc
push
sar
push
fildl
add
out
fcmovne
ljmp
in
add
mov
push
xor
or
mov
xchg
mov
icebp
cltd
mov
testl
rcrl
jb
int
cltd
sub
push
lods
add
fs
scas
xchg
lods
adcl
and
int
cmp
push
or
pop
inc
cmp
cmc
ficoml
shr
mov
jns
dec
sub
xor
or
ss
mov
pop
sbb
popf
cld
adc
sbb
data16
mov
cmp
jecxz
fwait
mov
adc
adc
pusha
push
pop
pop
cwtl
js
popa
int
imul
lods
aad
arpl
jnp
mov
xchg
rcr
fcoml
cmp
jle
cmp
mov
fadds
xor
mov
arpl
mov
out
add
lods
outsl
loope
lea
mov
add
lods
dec
inc
pushf
adc
in
arpl
or
push
in
mov
cs
ja
pop
mov
adc
dec
and
xchg
pop
and
push
lods
testb
dec
inc
sub
jae
movsb
out
mov
mov
mov
and
fldenv
jecxz
lret
mov
and
sbb
outsb
mov
push
pop
leave
hlt
test
cli
add
adc
add
cmp
pop
dec
jno
shrb
dec
xchg
cmp
jg
je
inc
sbb
push
cmp
mov
lret
cmp
jle
pop
push
inc
jge
shlb
sub
jae
xchg
mov
adc
dec
mov
and
mov
jmp
and
push
shrl
jecxz
cmp
cld
hlt
movsl
or
lcall
mov
add
lea
es
addr16
int3
mov
xchg
jg
xor
xchg
fdivs
inc
mov
xchg
insb
popf
cmp
into
dec
ffreep
int
xor
or
inc
std
inc
and
lcall
dec
pop
sub
cmc
and
ss
pop
test
adc
mov
lahf
jl
or
aas
jg
jbe
cmc
iret
mov
sarb
xor
push
mov
testb
inc
jno
les
unpckhps
mov
ret
aam
sbb
movsb
push
dec
scas
lea
out
xor
mov
xor
cld
insl
cli
xchg
out
sbb
fwait
mov
push
push
xchg
xor
dec
add
fistpl
fcomps
mov
sub
and
mov
push
in
notb
jle
push
xchg
leave
push
dec
sahf
jmp
mov
adc
mov
sbb
cmp
lcall
ljmp
push
and
aam
lcall
xlat
mov
cmp
adc
in
outsl
jb
ss
xchg
dec
mov
inc
jb
fiaddl
adc
fsubr
cmp
inc
das
imul
lea
or
sub
in
aad
jo
push
test
ja
xor
insl
mov
or
fwait
rclb
int
mov
xchg
pushf
xor
pushf
jnp
adc
jo
cmp
enter
push
cmp
icebp
out
es
or
repz
cmpsl
in
les
js
cmpsb
loope
inc
jmp
mov
fidivl
inc
inc
ret
repnz
push
cs
sbb
es
xor
in
add
rorb
scas
sub
ror
icebp
and
rorl
repz
std
out
push
lcall
xchg
push
lcall
ss
cld
xchg
cmpl
clc
rol
les
xor
fsubrl
xchg
pusha
popa
mov
in
out
inc
subb
xchg
mull
adc
cmp
jecxz
rclb
test
sbb
test
mov
leave
push
mul
xchg
mov
cmp
mov
cmpsb
xor
jmp
or
mov
dec
push
jg
mov
mov
push
mov
sbb
lds
mov
push
clc
jae
sbb
sbb
stos
loope
cmp
cli
dec
test
clc
push
aam
mov
outsb
arpl
mov
addr16
lods
dec
pop
and
test
repz
adc
mov
fnsave
cmc
andl
daa
pop
lock
mov
dec
inc
pop
aaa
push
fcmovu
mov
sbb
xchg
and
clc
xchg
jle
je
std
outsb
mull
and
add
enter
testb
lods
xchg
sub
mov
xlat
dec
mov
or
xchg
add
jmp
lock
in
jne
clc
jp
sbb
add
bound
sbb
ja
push
cmp
or
lea
ret
in
das
addr16
fwait
mov
clc
gs
cmp
insb
pop
inc
sub
mov
insl
inc
lock
sbbb
sahf
mov
jno
mov
dec
js
mov
mov
bound
jle
popa
xor
cld
cmpsb
ja
dec
ret
insb
daa
push
dec
aaa
loope
ja
call
add
jge
xchg
mov
leave
std
mov
xchg
mov
mov
cmp
xlat
fwait
xor
fdivs
test
mov
mov
movsl
in
pop
das
mov
cld
adc
es
sbb
movsb
and
dec
sub
mov
daa
inc
push
add
cmp
push
fidivrs
jle
je
stc
das
sahf
push
push
dec
int3
sbb
adc
or
cmp
imul
int
xor
nop
push
xor
fildll
fiadds
outsl
xor
jbe
mov
ret
add
cmp
and
push
ret
icebp
jnp
pop
cmpsl
dec
out
jno
jecxz
mov
cltd
lahf
push
enter
ret
ljmp
daa
push
xchg
push
mov
ljmp
dec
mov
add
sti
pop
cmp
xor
das
push
jnp
xor
cmp
pop
mov
jg
std
adc
mov
or
push
sbb
cmp
dec
leave
popf
jp
pusha
movsb
push
push
daa
jp
out
jl
pusha
pop
mov
test
hlt
xchg
jge
into
sbb
fstl
push
sub
lds
dec
jae
jle
lock
loope
and
push
pop
jbe
outsl
pop
cwtl
aam
add
xor
xchg
test
fistps
arpl
push
sar
or
jae
push
aaa
dec
inc
lret
cmp
daa
jo
lds
adc
push
stc
jns
mov
cmp
push
mov
inc
call
test
mov
xor
nop
les
outsl
int
pop
loopne
dec
lea
sub
mov
jae
cmpsb
shll
adcb
jecxz
jp
xor
fistps
ret
jne
aas
mov
push
add
rcl
stos
sbb
loop
sti
pop
cmp
and
or
fs
inc
xchg
push
pop
push
clc
push
cmp
mov
pop
lock
sub
in
movsl
in
adcl
loop
lcall
lahf
dec
fisttps
sbb
test
xchg
out
push
sbb
xchg
aaa
scas
es
xchg
mov
imul
mov
pusha
test
lret
hlt
lods
loop
or
sub
inc
xchg
and
sbb
mov
add
outsl
sbb
aas
mov
xchg
movsl
lcall
das
lods
icebp
int3
fimuls
pop
ficoml
lret
insb
test
repz
push
lods
jbe
or
into
jp
test
repnz
push
fdiv
data16
cmp
scas
and
ret
das
lahf
mov
stc
push
jae
and
or
push
pop
enter
mov
push
jg
inc
xchg
dec
gs
xchg
stos
mov
repnz
ret
cld
das
dec
mov
loopne
subl
clc
or
js
mov
stos
cmp
out
jae
adc
mov
outsl
cwtl
sub
dec
sahf
iret
repz
popa
push
mov
int3
inc
psubd
es
add
test
cmc
call
xlat
xchg
out
adc
xor
and
aam
cmp
dec
std
or
stc
lcall
popf
xor
insb
xchg
jmp
xchg
shr
jmp
jecxz
xchg
mov
push
sub
cli
test
loopne
shl
test
gs
jns
stc
fstps
adc
es
mov
jle
push
fs
iret
push
pusha
xor
das
psrld
jl
jnp
rcrl
cli
ret
bnd
pop
mov
mov
shrb
cmp
dec
stc
lret
mov
or
dec
andb
cmp
xchg
xor
iret
into
cmp
int
fs
rcrb
aad
std
sbb
imull
push
pop
je
dec
mov
push
xchg
gs
stos
or
mov
fxch
repnz
fs
inc
jmp
and
mov
test
fisubs
push
outsl
push
ljmp
push
cwtl
sbb
mov
adc
fadd
mov
std
push
inc
into
mov
repz
int3
jl
leave
pop
test
xchg
pop
adc
xchg
fstp
adc
add
jae
inc
or
iret
xor
mov
sub
mov
jne
inc
fdivrl
cli
dec
subb
push
push
inc
mov
out
arpl
xchg
mov
xor
sar
in
or
ror
add
push
push
dec
shr
movsl
sbb
mov
xchg
dec
mov
fincstp
sub
pop
in
test
cld
out
or
jbe
mov
or
sub
sub
negb
testb
cli
bound
aaa
sbb
sarb
lret
dec
adc
sbb
jle
ljmp
cmpsb
sti
out
jle
push
hlt
jecxz
ret
sbb
push
inc
xchg
fisubrs
xchg
push
ljmp
ret
sub
add
ja
or
mov
pusha
dec
push
mov
repz
xchg
shl
or
repnz
push
push
push
aad
and
cwtl
xor
test
addr16
adc
jbe
cli
mov
pop
mov
adc
and
bnd
sarl
mov
jo
int
push
add
mov
inc
aam
rcrb
mov
iret
cmp
mov
insl
sub
subb
repz
sbb
or
mov
ss
shlb
inc
ficoml
or
sbb
fs
and
imul
std
add
mov
std
xor
and
imul
mov
or
mov
in
add
addr16
imul
add
imul
aas
sarl
fwait
pushf
adc
add
popa
addr16
bound
pop
push
fistl
cmp
or
mov
ljmp
push
xor
cli
mov
jae
test
imulb
int
clc
cwtl
movd
mov
mov
in
iret
sub
movsb
icebp
xorb
ret
es
push
lea
insb
dec
int3
and
mov
jne
xchg
and
mov
enter
cmp
push
push
inc
aaa
clc
sub
fwait
shll
bound
xchg
cmp
mov
pushf
dec
lock
inc
loop
loope
and
mov
xlat
neg
fldenv
sti
das
sub
fimull
stos
xor
mov
out
outsl
and
scas
imul
leave
mov
mov
mov
jmp
lret
movsb
into
xor
inc
enter
sbb
sub
pushf
imul
out
shll
push
outsb
int3
mov
xchg
mov
push
jg
pop
add
and
jg
inc
cld
ljmp
gs
cmpsb
popa
pusha
insl
push
stc
icebp
push
aaa
sbb
daa
xlat
mov
sbb
inc
pop
js
lret
call
fnstcw
pop
mov
sbb
or
cmc
sbb
movb
xor
jo
repz
scas
mov
push
dec
adcb
fwait
push
fnstcw
cltd
lret
jmp
mov
cmc
inc
scas
xchg
sbb
mov
pop
xorl
data16
repz
imul
jns
int
mov
pop
jecxz
fcomi
mov
stos
insb
mov
leave
mov
ror
xchg
mov
hlt
pop
test
fcomps
sub
xchg
ret
lods
xchg
and
je
addl
adc
ss
dec
lds
int
sub
leave
mov
mov
pop
push
jg
add
lea
popf
testl
stos
fcomi
cmp
sbb
incl
pop
cmp
aad
fldenv
mov
ror
jp
out
popf
and
loope
dec
rclb
xchg
lock
dec
fs
jnp
xchg
mov
popa
lods
push
pushf
into
mov
inc
je
jno
lods
sahf
mov
jle
stos
out
nop
or
cmp
insb
imul
dec
fstpl
fcmove
jae
jge
sub
add
sbb
and
mov
jno
icebp
lahf
repnz
push
xchg
jo
pop
pusha
or
cli
popa
fimull
push
jns
mov
or
fdecstp
iret
jnp
sti
imul
cmc
add
sub
xchg
sbb
in
lret
imul
adc
inc
push
lock
inc
testl
jo,pn
cmpsl
xorl
dec
jge
xlat
dec
jbe
adc
push
iret
sub
lea
mov
cs
clc
pushf
xor
mov
inc
mov
mov
adc
aam
inc
daa
fisubrl
clc
adc
pop
mov
sti
xor
xchg
pop
jae
sub
sub
icebp
repnz
cmp
mov
fldt
mov
aas
sub
pop
inc
adc
pusha
push
sub
mov
fisubrl
inc
loope
jno
divl
pop
or
xor
dec
xchg
fldt
fldcw
and
mov
jns
fidivs
out
cmpb
mov
mov
das
movsb
jnp
int
push
hlt
mov
loope
outsl
repz
xor
nop
pop
push
push
xchg
lret
mov
iret
add
push
pushf
jecxz
push
shlb
fs
lahf
mov
mov
pop
xchg
xchg
push
xor
sub
and
dec
in
sahf
push
xchg
xor
xchg
sub
push
mov
fldcw
ljmp
ret
or
insb
inc
pop
je
push
jo
aad
imul
fimull
scas
jecxz
in
fsub
lods
cmpsb
mov
mov
add
mov
adc
loopne
pusha
adc
and
push
dec
push
fmuls
js
mov
push
mov
add
outsl
xor
jae
lods
icebp
mov
lods
sbb
add
mov
push
dec
mov
mov
lods
mov
hlt
mov
repz
cmc
or
orb
and
mov
les
mov
lods
into
pop
jge
push
test
aam
in
lds
stos
divb
addb
repz
mov
cwtl
xchg
sbb
xor
cld
cli
arpl
cmp
xor
fcoml
les
imul
or
aad
popf
cmp
push
push
jl
shr
bound
sbb
sbb
shrl
add
add
dec
out
push
rcrb
inc
and
cld
push
dec
inc
outsl
movsl
push
ljmp
ljmp
jns
out
cmp
xchg
pop
das
neg
xchg
jne
stc
rcl
loope
inc
push
cwtl
mov
clc
lret
pop
mov
js
mov
je
or
xchg
loop
mov
or
xchg
jp
sub
in
addr16
and
cmpsl
mov
jb
in
jae
popa
adc
daa
jecxz
pop
dec
mov
and
and
mov
mov
mov
jno
adc
mov
leave
pop
shrb
sub
mov
pop
sub
xchg
hlt
mov
dec
stos
mov
mov
add
fldcw
test
arpl
xchg
lods
sbb
xchg
pop
test
ret
sub
loopne
popa
fs
inc
push
xor
stos
lret
push
push
icebp
fs
insb
jmp
jmp
lds
mull
idivl
andl
jb
or
ja
sbb
roll
cld
mov
push
int3
scas
dec
sti
jae
addb
cmp
ret
jmp
pop
jns
rorb
stos
dec
jns
mov
setge
insl
nop
mov
repz
jp
out
push
jge
or
ret
pop
jl
jno
xchg
mov
lret
fcomps
je
jecxz
cmpsb
aaa
and
call
xchg
fdivl
mov
add
fcoml
xchg
imul
sbb
add
push
pop
enter
inc
aad
aam
push
pop
or
lods
mov
pusha
test
sbb
mov
in
sbb
jg
pop
cmp
sub
sub
movsb
shlb
das
cmp
mov
jg
xchg
fisttpll
insl
adc
add
lods
push
cmp
lret
js
dec
insl
fistl
ret
cmpsb
push
jl
cli
jns
mov
dec
sbb
sub
jl
inc
pop
sbb
data16
sti
mulb
jno
pusha
out
inc
add
aas
inc
xchg
outsl
mov
ljmp
pop
out
jae
xor
and
gs
mov
repz
xchg
jae
lods
adc
lret
inc
sub
std
shll
xchg
dec
ret
pop
and
pop
hlt
cmpsb
or
leave
nop
stos
gs
inc
bound
xor
jge
dec
mov
out
mov
fwait
cmp
cmp
sbbl
gs
mov
cmp
call
push
aad
out
stc
mov
jle
aam
sbb
sarl
adc
cltd
dec
repnz
sub
das
lret
daa
dec
popa
js
out
clc
and
ret
jno
cltd
pusha
mov
test
add
adc
fwait
imul
pop
add
ja
and
lods
add
pop
fistpll
outsl
pop
or
cmp
or
inc
cmp
xlat
aad
stos
push
popa
test
imul
pop
cwtl
arpl
jmp
mov
outsb
fstp
lods
sbb
std
push
dec
jmp
push
out
ficoms
push
out
push
ljmp
cmp
inc
lock
mov
push
int
push
in
or
mov
xchg
push
cmp
lret
xchg
xchg
push
cmp
mov
xlat
inc
xor
pop
sbb
pusha
scas
push
clc
and
test
scas
in
cmp
rcrb
jmp
xchg
cmp
or
pop
sub
push
jge
cld
imul
cmp
jbe
rclb
pusha
imul
cmp
push
pusha
aam
andl
jmp
sti
out
mov
scas
dec
dec
sub
mov
inc
and
lds
jle
cld
iret
add
je
dec
mov
mov
out
std
dec
in
clc
inc
or
addr16
popf
pop
push
jp
rcl
sbb
nop
sub
add
cs
cmc
push
stos
scas
out
sub
out
outsb
repz
adc
push
mov
inc
mov
inc
push
sbb
je
add
cmp
pop
add
mov
std
mov
jo
insb
fildl
jle
cs
sub
sub
sahf
dec
add
sti
pop
testl
cwtl
mov
cltd
loop
aad
insl
popa
inc
sub
fisttpl
outsb
out
setne
xor
xchg
fisubl
or
rcrl
cmp
inc
les
or
push
repnz
js
cmp
shlb
and
dec
sub
es
ret
xchg
out
and
cmp
ja
xchg
mov
fwait
dec
pop
in
push
mov
xchg
nop
mov
jne
add
sbb
pushf
and
jnp
xor
repz
push
xchg
or
int3
cmpsl
inc
push
in
cmp
push
xchg
je
pusha
sub
sbb
fucomp
xchg
clc
jne
jmp
mov
pop
mov
sub
dec
inc
sahf
imul
xchg
test
adc
je
faddl
pusha
dec
ds
aaa
mov
adc
sbb
pushf
ret
int
decl
cmpl
push
jp
inc
jp
mov
dec
stos
sub
cmpsl
jbe
arpl
fs
adcb
aam
mov
inc
lret
dec
pop
rclb
adc
push
fptan
pop
mov
stc
and
in
mov
push
insb
push
lds
fs
stc
xor
or
jo
sbb
cwtl
in
fcmovne
add
loope
push
sbb
cmp
pusha
mov
fdivl
aad
je
sub
lods
pop
cmp
xor
imul
gs
cmp
ficoml
dec
sub
les
mov
shrl
mov
push
cwtl
insb
mov
loopne
fucomip
xchg
aaa
insb
lcall
or
dec
pop
add
aad
sahf
pop
cmp
push
pop
mov
mov
add
dec
sbbl
mov
inc
nop
stos
and
aas
int
dec
xlat
adcb
jb
push
cltd
jg
mov
add
xor
nop
xchg
in
jp
mov
pushf
sbb
inc
outsb
stc
stos
in
jmp
test
mov
in
push
xchg
xor
mov
repz
frstor
stc
in
inc
sub
mov
sub
or
xchg
add
cwtl
imul
sti
mov
aaa
stos
scas
adc
subb
in
fldl
xchg
push
adc
and
pop
icebp
mov
inc
sub
jne
mov
jnp
mov
jl
cmpsl
add
inc
repz
or
cmp
insb
jne
fidivl
jo
mov
and
pop
xor
stos
xor
movsl
mov
pop
push
clc
int
xor
int3
pop
mov
xchg
testl
lcall
mov
je
ja
mov
pushf
pop
std
mov
adc
cmp
pop
push
mov
mov
pop
push
cmp
adcb
sub
gs
sbb
push
mov
xchg
or
sbb
mov
sbb
shr
js
push
les
shlb
mov
push
or
jnp
aaa
or
shrl
jno
in
mov
xchg
leave
jnp
das
sbb
mov
cmp
pushf
jle
add
ret
loope
and
mov
mov
inc
sbb
add
in
test
insl
pop
sbb
out
xor
andl
mov
cs
and
inc
add
cs
cmp
or
insl
xchg
dec
mov
xchg
fwait
mov
pop
mov
xchg
and
es
push
andl
stos
test
xchg
sub
aam
mov
adc
outsb
ror
push
movmskps
movsl
cmp
mov
es
stos
jb
das
add
dec
sub
cwtl
mov
cmc
ja
add
hlt
xchg
mov
adc
aad
imul
popf
cmpsb
lret
jbe
divl
adc
xchg
push
out
je
sti
js
add
mov
dec
push
repz
xchg
aaa
rolb
mov
cmp
jle
sbb
mov
orl
ljmp
xor
rorl
jo
std
js
lock
push
fsubrl
adc
aaa
cmp
sti
xchg
xchg
sahf
inc
pop
insb
fbstp
fists
adc
cmp
sbb
mov
popa
mov
scas
in
lods
sbb
ffree
add
sbb
push
mov
rorb
mov
or
inc
sub
imul
and
cmc
sbb
or
push
aam
sub
mov
xchg
jmp
add
jo
icebp
addr16
mov
mov
xchg
xor
jge
jmp
mov
cmpsb
lret
sub
leave
pusha
sarb
jecxz
lds
addr16
push
and
xchg
push
lret
cltd
add
aad
daa
mov
icebp
jno
pop
mov
rclb
insl
mov
jl
mov
ret
mov
insb
outsb
jb
js
jbe
mov
pop
xchg
orb
subl
rcll
cmp
or
mov
or
outsl
inc
sub
dec
cmp
push
fstpt
xchg
dec
imul
add
test
sbb
xor
imul
aas
mov
and
nop
pop
mov
das
xchg
cmc
add
xor
push
dec
mov
mov
pop
push
jnp
int3
dec
mov
add
sub
jle
and
into
bound
mov
lock
sub
lcall
out
cmp
sti
cltd
sub
call
movsb
fwait
jae
pop
sti
loopne
mov
mov
jmp
rorb
jnp
daa
xchg
push
jp,pt
add
lods
adc
pop
mov
jle
cmp
cwtl
not
hlt
pop
pop
pop
sub
test
fs
add
cmp
test
cs
scas
xor
push
sbb
xor
sbb
push
divb
inc
jb
cs
fs
push
jne
jns
incb
mov
or
pop
cwtl
fldt
test
jne
push
or
sti
fisubrs
scas
cmp
sbb
roll
inc
jmp
shl
popa
sub
push
out
out
inc
dec
ucomiss
cmp
cmc
add
inc
and
jmp
pop
and
fnstenv
add
out
sahf
lods
add
cmp
out
lret
les
dec
inc
cld
in
call
or
pop
xor
insl
stos
out
pop
sbb
leave
loop
lds
inc
or
or
into
jl
inc
mov
adc
jg,pn
lret
inc
sub
push
out
push
dec
cltd
sub
in
clc
test
dec
mov
repnz
repnz
sbb
rolb
enter
jmp
jmp
sub
inc
gs
xorb
mov
aam
pop
fbld
popf
xchg
push
fldenv
ja
int3
in
std
adc
sarb
daa
stc
stos
jnp
aaa
mov
inc
xchg
xor
and
sbb
adcb
aam
mov
xchg
imul
jo
sub
or
aaa
ret
jo
jae
or
dec
xor
stos
lea
adc
fistpl
in
scas
cli
sbb
dec
pop
dec
jnp
test
aas
xor
cli
pop
enter
dec
movsl
and
or
jno
push
sub
mov
enter
les
inc
push
aam
imul
sahf
mov
xchg
inc
js
neg
mov
and
ljmp
and
into
xor
ss
jge
mov
gs
push
jmp
sub
test
mov
ror
lret
sub
sbb
inc
rcll
mov
mov
inc
mov
mov
or
and
je
fimull
cmpsb
xchg
push
pop
push
iret
scas
adc
jbe
bound
sub
pop
lea
out
cltd
mov
arpl
lock
test
add
cmp
dec
xor
sub
loop
jbe
jl
xchg
adc
mov
imulb
push
lea
loopne
xchg
lret
sub
xor
pop
sub
xor
ret
xor
addr16
lret
mov
daa
ss
push
and
or
and
ror
insl
int
rolb
lods
push
pop
cltd
addr16
jns
outsb
rcl
arpl
dec
jo
leave
mov
ret
pop
dec
out
push
pop
sub
dec
cmp
or
and
or
cmp
das
mov
lods
cmp
xchg
and
imul
rcrl
add
jl
int
adc
arpl
xchg
adc
outsl
subl
addr16
imul
das
sub
cmp
js
outsl
clc
mov
ljmp
in
mov
dec
jg
jo
push
subb
push
jno,pt
imul
adcl
orl
cmc
mov
cmp
or
pop
sub
arpl
add
gs
push
cmp
out
pop
fwait
lahf
test
sbb
or
in
pop
pop
rolb
mov
imul
xchg
inc
mov
rcrb
push
int
push
in
stos
pop
out
jmp
and
test
scas
cmp
shlb
push
pop
push
mov
sti
sub
loop
inc
sti
mov
push
and
lods
out
sub
jns
cmpsl
mov
mov
fstl
das
loop
and
mov
pop
inc
jns
test
pmuludq
dec
insl
cmp
sub
es
movsl
push
mov
rcrb
test
push
adc
sbb
xor
xor
push
pop
pop
mov
cmpsl
out
xchg
das
dec
imul
lods
iret
rclw
xchg
xchg
adc
lods
addr16
inc
ljmp
or
adc
xchg
pop
fidivl
cmp
mov
add
xchg
shll
addl
pop
mov
testb
lret
pop
push
shlb
jo
jno
int3
xchg
mov
bound
int
fistl
mov
lahf
je
addr16
cmp
fiadds
push
ficoms
inc
sbb
js
sub
push
push
ljmp
rorb
cmp
sbb
sbb
lret
mov
xor
and
adc
cs
mov
mov
xchg
int
mov
or
icebp
movsb
sbb
mov
cmc
mov
or
inc
cli
cmp
xor
call
adc
sahf
push
push
testl
inc
dec
pop
and
dec
clc
sbb
inc
mov
pop
xchg
fdivrs
fldenv
push
and
daa
stos
add
xchg
cld
outsb
testl
cltd
pusha
adc
jo
lods
jecxz
fstpl
mov
mov
mull
fsts
repnz
mov
or
sub
stc
mov
sub
cmp
sti
mov
lret
subl
loop
daa
sub
sbb
popf
jnp
jae
cli
faddl
lahf
divb
jns
fcmovu
jbe
inc
inc
inc
and
insl
jns
fnsave
sbb
in
adc
stos
jp
sub
ret
test
shrb
lret
pmulhw
test
shlb
roll
jp
into
xchg
js
and
cmp
mov
popf
movsb
repz
dec
adcb
test
or
insl
pop
daa
jnp
sarl
lock
je
cmpsl
jg
shrb
add
iret
jae
clc
lret
inc
ds
int
mov
add
and
loopne
in
cmp
push
push
aas
jae
xchg
aad
hlt
repnz
jg
in
mov
sbb
leave
add
xrelease
out
call
jmp
flds
cmpl
fnstsw
scas
cs
addl
pop
fbld
aaa
cmp
shrb
imul
push
xchg
ret
jbe
mov
cmp
sahf
nop
xlat
ret
rcr
mov
jecxz
mov
jne
fs
add
xchg
xlat
popa
xchg
iret
jecxz
lcall
xchg
addr16
jns
push
xchg
int
sbb
jge
dec
or
rcll
mov
xchg
sub
mov
fwait
lcall
or
lcall
stc
out
inc
icebp
cld
pop
xchg
insl
stc
lock
adc
lods
lock
push
mov
std
fidivrs
ret
add
stos
mov
sbb
mov
scas
mov
push
mov
add
cmp
mov
mov
push
add
sbb
pop
sub
adcl
pop
es
jg
pusha
cmpsb
shll
lret
cld
mov
out
cmpsb
xchg
fimuls
rorb
sub
or
xchg
icebp
arpl
fcmovbe
loopne
rol
mov
shrb
icebp
popf
es
movsl
rclb
mov
mov
ficompl
aas
pop
ret
int
jge
loop
fildl
mov
aas
bnd
fstl
xchg
push
pusha
cli
fmull
mov
out
adc
and
sbb
ss
loope
and
cmpsb
add
nop
hlt
cmp
jbe
push
shlb
pop
xchg
mov
outsb
fsubrs
add
aas
inc
outsb
daa
push
data16
pop
jl
jle
sbb
add
mov
mov
loopne
stc
lock
dec
xchg
sti
and
in
jne
outsb
push
pop
add
sahf
fisttps
jno
daa
mov
loope
xor
cmpsl
jmp
cmp
fdivl
add
mov
mov
cwtl
cmp
adc
push
in
nop
lcall
outsl
loopne
cli
or
inc
enter
cmp
jle
out
icebp
int
fistps
pop
mov
test
fisttpl
fld
or
popa
xchg
inc
lock
lods
ljmp
pop
test
add
mov
xchg
int3
fldt
push
and
shll
jp
inc
lret
idivb
inc
imul
pop
stc
iret
imul
mov
ret
cli
loope
jp
sbb
dec
arpl
inc
mov
adc
insb
pop
arpl
add
loop
icebp
cmp
cmp
fucomi
in
repz
dec
sub
lods
fdivrs
jle
rcrb
sbb
jo
sbb
mov
sbb
movsb
mov
xchg
das
dec
fwait
push
adc
pop
lret
push
mov
add
popf
add
xchg
js
dec
sbb
jp
xchg
xor
vmaxps
iret
push
clc
lods
pop
nop
xor
and
fsubrl
shr
ja
call
adc
ret
lds
push
lock
aaa
in
pop
je
shrb
stc
push
hlt
pop
sub
std
sbb
adc
or
je
sbb
dec
sub
popa
sahf
movsl
ret
loope
int3
sti
inc
and
lcall
subb
shlb
xchg
sbb
mov
inc
fildl
fisubs
xchg
mov
outsb
sbb
cli
jmp
cwtl
pop
pusha
icebp
ja
outsb
mov
cmp
xor
or
sub
xchg
test
in
cwtl
jmp
pop
mov
push
push
loop
in
cs
push
out
popa
pop
or
pop
imul
enter
in
or
xor
sub
sbb
jnp
xor
out
mov
cmp
aad
pushf
push
adc
dec
bound
rorb
cltd
loop
and
test
in
push
sub
rcrb
outsb
push
sbb
and
jmp
aas
dec
cmpsb
fwait
cmp
nop
std
and
int
and
movsl
adc
iret
sbb
mov
jo
loopne
cwtl
cmp
xorl
lret
into
mov
std
push
lcall
jns
inc
or
addl
test
les
pushf
cmp
call
stos
mov
cwtl
pushf
dec
xor
add
xchg
mov
xchg
aam
scas
pop
dec
pop
sbb
fdivr
push
push
test
cmp
in
repz
scas
sbb
cmp
ja
xchg
mov
sbb
push
lcall
shl
les
popf
mov
sbb
movsl
ret
or
fwait
jg
fdivp
dec
jnp
mov
and
jbe
jne
mov
repnz
mov
ljmp
adc
subb
sbb
mov
lret
adc
xchg
shrb
xor
add
cwtl
mov
movsl
dec
clc
aaa
cmp
adc
push
mov
pop
lret
mov
out
mov
inc
filds
sahf
xchg
lret
repnz
mov
cmpsb
inc
fsubrl
aad
or
jmp
pop
roll
call
mov
orb
mov
gs
push
adc
es
aam
fstp
mov
sbbb
lea
sbb
pop
lret
scas
mov
fstp
pop
adc
bound
test
push
movsl
scas
cmpsl
mov
movl
fistl
xor
pop
mov
sti
int
ja
lock
mov
in
mov
rcll
xchg
xchg
cmc
mov
mov
ret
aaa
jno
and
mov
stos
xor
pop
jle
adc
push
fyl2xp1
in
sbb
pop
rcll
xchg
pop
lea
cltd
pop
cmpsl
sbb
push
xchg
push
cmp
adc
and
movsl
scas
stos
sbb
pop
test
scas
xor
or
call
clc
dec
test
pop
and
cwtl
movsb
stc
nop
sub
add
sub
sub
cmpl
cli
cwtl
cmp
or
int
imul
imul
dec
mov
jle
out
loop
divl
cmp
imul
mov
jns
or
inc
mov
outsl
std
addb
out
loop
push
rol
or
fldenv
inc
adc
push
or
add
icebp
scas
scas
dec
fidivs
outsl
iret
hlt
es
cmp
cmp
jmp
imul
test
push
aas
adc
inc
es
sbb
mov
fnsave
mov
mov
sbbb
jo
or
inc
xor
or
pop
je
mov
mov
dec
push
dec
mull
lds
subl
mov
in
out
mov
dec
in
or
mov
rcl
scas
dec
lods
repz
jnp
xchg
lret
sub
addb
in
fisttpl
xchg
push
cmp
iret
insl
test
das
or
add
jb
adc
jmp
leave
test
outsl
or
je
call
pop
int
adc
push
es
sub
movsl
xchg
mov
jp
push
sbb
add
push
sub
xchg
jbe
pop
dec
cld
jp
or
xchg
or
xchg
push
leave
imul
cmc
sti
pop
and
mov
mov
test
jno
test
sbb
jb
jge
inc
mov
pop
neg
jg
or
shlb
in
xchg
cmp
aam
cmp
mov
push
lods
mov
popa
and
inc
jge
sbb
inc
inc
das
les
or
push
test
mov
test
or
ret
out
std
in
xchg
jne
mov
je
xchg
and
into
xorb
mov
int
les
pop
jb
push
in
arpl
sbb
dec
cld
test
cmp
mov
xorl
push
add
add
popa
mov
inc
sbb
or
sub
test
je
out
xor
loop
es
xchg
repnz
mov
and
adc
jg
into
dec
inc
xor
jns
outsb
pushf
sub
loope
aaa
xchg
cwtl
das
pop
fmuls
jle
pop
stos
pop
mov
push
in
add
lahf
in
sbb
adcb
adc
dec
cmp
fwait
adc
mov
push
sbb
mov
out
mov
jecxz
pop
cs
jbe
popf
push
lea
mov
stc
adc
inc
jnp
push
sub
dec
stos
push
nop
xchg
insl
add
stc
jo
pop
repnz
scas
mov
dec
or
adc
ss
dec
int3
jge
or
notb
lcall
lods
cmp
repnz
aad
inc
jbe
sub
mov
jb
data16
dec
or
jb
movl
sbb
cmp
repz
push
jne
incb
pop
inc
jno
data16
arpl
test
lcall
cmpsb
jnp
xchg
cld
pop
xor
cmp
ficoml
push
mov
mov
icebp
into
fwait
les
or
aad
fdivl
push
ret
cmpsl
adc
sub
cmp
rcrl
aam
xchg
push
and
cmp
xchg
in
dec
stos
sub
test
push
mov
pop
out
ja
push
push
lahf
or
out
dec
xchg
movsl
adc
xor
mov
icebp
cmpb
xchg
fdivrs
mov
inc
cmp
jns
xor
sub
mov
sti
insb
test
and
mov
pop
fldl
repz
inc
or
or
sti
adc
je
insl
shll
out
dec
sbb
cltd
mov
cld
push
hlt
andb
push
pop
mov
cld
push
call
pop
jge
jo
add
and
lea
sub
repz
gs
fcomps
iret
lock
push
push
mov
adc
sahf
cmp
lods
pop
pop
push
dec
sub
sbb
mov
cld
fisubrl
out
mov
jp
stos
mov
push
mov
nop
add
push
dec
lock
jl
push
push
ljmp
xchg
jo
dec
imul
jo
fwait
fs
sub
sub
cs
push
imul
push
imul
call
jbe
push
mov
sbb
scas
xchg
inc
pop
dec
pop
jl
mov
fldt
lcall
mov
lret
mov
xchg
insl
xor
js
push
xorl
jns
daa
aas
inc
sub
or
pop
or
ljmp
jo
push
xor
adc
or
jp
jns
jne
cwtl
push
out
pavgw
pop
je
lock
push
xlat
negb
cs
dec
ror
xor
push
jp
mov
dec
nop
addl
repnz
popl
xor
mov
lret
push
aas
sti
sbb
cmc
stos
sbb
push
xor
stos
loop
imul
cltd
pusha
add
xor
and
push
or
inc
incb
push
mov
push
xor
daa
mov
out
add
push
pop
sti
mov
xchg
jp
rol
mov
pop
fldcw
xchg
xchg
inc
or
aam
xchg
addb
fadds
inc
mov
sbb
nop
in
ja
gs
and
movsl
sbb
into
int3
mov
pop
popf
xchg
xor
ret
dec
pop
adc
push
testb
mov
mov
dec
xchg
inc
andb
or
iret
xor
jmp
jl
push
push
jb
test
icebp
sbb
ret
pop
cmp
or
cmp
popf
jo
icebp
and
je
iret
mov
push
mov
scas
mov
push
cmpsb
lea
inc
adc
in
xchg
sbbb
cmpsl
pop
xchg
add
adc
imul
mov
sbb
push
adc
lahf
mov
sbb
sahf
bound
sub
mov
sbb
xchg
xchg
out
sahf
loopne
rcrl
scas
cmp
insl
pop
inc
dec
adc
fwait
or
dec
push
lea
inc
inc
arpl
push
adc
cmpsl
xchg
pop
sub
and
push
clc
fldenv
stc
test
mov
cmp
push
repz
dec
push
and
mov
jp
xor
aaa
inc
push
cmpsl
lock
cmp
jno
xchg
mov
cmp
in
fsubr
nop
ss
std
arpl
ror
or
sbb
out
lea
push
mov
cli
mov
jmp
mov
cmp
inc
scas
pop
cmp
jae
ficompl
outsl
mov
mov
mov
outsl
loopne
cmp
rol
add
pop
repz
icebp
out
jecxz
mov
test
arpl
scas
leave
push
les
adc
lods
mov
jo
jge
stos
pop
out
dec
aam
js
push
pop
pop
jbe
and
xor
loope
push
jbe
cmp
data16
test
clc
mov
pop
cmp
repz
lret
xchg
jp
aam
jb
pop
and
ret
or
pusha
repz
jecxz
frstor
int
push
pop
imul
push
fnstsw
daa
jecxz
test
out
or
lea
lods
jne
dec
pop
out
xor
dec
adc
mov
cmpsl
fnstsw
xorl
lahf
and
lret
test
xor
das
shlb
mov
or
push
test
push
mov
scas
sbb
xor
jne
loope
jmp
dec
imul
lret
divb
xchg
fisubrs
push
data16
mov
aaa
addb
and
pop
sti
rcrb
stos
notb
das
lret
loop
in
ss
mov
int
ljmp
cli
insl
test
std
mov
hlt
inc
scas
fnstcw
mov
or
jne
loope
sbb
rclb
testb
cmp
pop
jnp
inc
push
cmc
mov
xor
pop
out
int3
mov
mov
adc
jmp
push
ja
pop
out
mov
inc
jo
scas
loop
mov
add
inc
xchg
imul
shlb
xchg
xchg
sbb
lea
pushf
push
int3
sarl
mov
testb
sbb
sub
das
bound
mov
nop
popa
sbb
lea
jmp
and
mov
mov
push
sub
pop
push
dec
and
mov
lret
neg
rcrl
jge
xchg
int3
call
in
call
pop
popf
hlt
sti
shrl
push
cmc
xchg
and
stc
and
pop
test
mov
push
lahf
pop
pusha
jecxz
sub
fstp
jae
sti
sbb
jg
or
mov
loopne
inc
inc
jp
pop
dec
jecxz
pop
mov
add
ret
mov
add
ret
adc
stos
or
sub
push
push
pop
xchg
fdivrl
xchg
aad
sbb
jbe
jmp
jle
andl
fsubrl
add
popf
push
das
es
stc
ret
stos
sub
lahf
punpcklwd
stos
push
call
int
sub
jnp
push
cltd
push
fsubrs
lods
in
pop
ja
je
das
pop
into
adc
mov
push
mov
es
or
shll
mov
mov
cld
out
mov
fisubl
fucomip
sub
dec
lods
shll
pusha
jp
movsl
xchg
and
popa
rolb
ljmp
ret
in
fists
popa
or
mov
idivb
mov
mov
fstpl
jb
add
inc
pop
pop
mov
adc
mov
cmpsb
into
clc
gs
jecxz
cmpsb
movsb
or
pop
xor
sub
mov
xchg
outsl
sbb
and
not
leave
repnz
cwtl
pop
jnp
adc
insl
push
pop
xor
xor
xor
or
push
pop
xchg
sbb
xchg
popf
dec
jb
js
fstl
in
pop
cs
push
lcall
cmp
push
adc
cmpl
mov
test
movsl
add
adc
scas
cld
push
outsl
jmp
out
int
hlt
add
sub
mov
mov
xlat
subl
jb
xchg
inc
int
inc
jp
adc
xlat
jns
or
aad
dec
fimuls
test
push
xchg
test
mov
out
leave
enter
shlb
aad
jmp
dec
and
test
mov
cmpsl
repnz
out
test
shll
or
push
idivb
dec
mov
fxch
mov
test
inc
shrl
dec
lea
movsl
fisttps
pop
jno
call
push
scas
dec
adc
sbb
jg
sub
push
dec
push
xor
adc
mov
push
push
inc
pop
test
and
push
push
cmp
fs
inc
sbb
or
loope
jmp
and
stos
sbb
jne
cmpsl
hlt
or
push
pushf
xchg
adc
pop
in
push
ficompl
iret
mov
lea
andb
add
idiv
arpl
out
mov
mov
pop
nop
repz
xlat
lods
in
aaa
jge
pop
jp
cmpb
jcxz
xlat
pop
xor
push
xor
and
mov
push
xchg
aas
and
fdivl
inc
daa
test
mov
sbb
add
int3
sbb
shll
iret
lea
out
out
xor
inc
std
mov
mov
sbb
movsb
imul
mov
call
and
stc
out
inc
cmp
adc
data16
xchg
imul
inc
adc
dec
repnz
in
je
mov
sub
lods
leave
lret
xchg
aam
prefetch
or
test
nop
arpl
xchg
lods
stos
scas
lea
mov
sub
mov
scas
ret
cmp
aas
aam
push
xchg
dec
loope
sahf
dec
cld
shll
fisubrs
call
add
pusha
jl
loope
data16
add
mov
movsb
sarl
xchg
mov
pop
or
push
or
jne
mov
loopne
and
mov
adc
lds
push
popf
test
xchg
aam
sub
sbb
pop
dec
inc
mov
pop
or
out
mov
repz
adc
out
dec
aam
scas
mov
mov
pop
cltd
adc
mov
lcall
outsb
push
sarb
and
nop
mov
push
mov
rclb
xchg
jmp
test
rcll
pushf
in
outsl
pop
clc
dec
inc
hlt
imul
cmp
xor
cmpl
lret
in
mov
mov
in
leave
sub
mov
mov
pop
roll
lea
fbld
clc
stos
mov
mov
sub
dec
or
mov
sub
fdivrs
mov
jne
xchg
lret
icebp
movsb
popf
cltd
fdivrl
adc
push
add
hlt
xor
mov
call
aaa
pop
mov
int3
loop
cs
loope
mov
mov
mov
out
or
jl
mov
cmp
adc
icebp
jno
ja
mov
out
lahf
call
push
sarb
inc
xchg
test
popf
je
fstpl
and
push
insb
jns
cmpsb
not
pop
jmp
add
jle
mov
pusha
mov
cli
and
divb
loop
xchg
gs
lahf
jecxz
adc
inc
and
push
mov
movq
pop
mov
jae
comiss
sbb
incb
data16
dec
in
dec
cmp
pavgb
mov
cmp
cli
jb
popa
xchg
leave
dec
pop
push
xchg
imul
mov
jb
sbb
cld
addr16
out
push
jbe
pusha
insb
jl
xlat
sub
adc
mov
shll
sbb
ss
cmp
cld
outsl
aas
adc
push
xor
movsl
push
test
dec
jo
xor
jg
cmp
inc
inc
adc
cs
jmp
pop
and
xlat
jno
popa
mov
dec
sbb
push
jle
sub
out
inc
shl
pop
mov
adc
fidivrs
movsl
push
push
push
adcl
lahf
jno
or
pop
mov
push
sbb
mov
add
mov
lds
cmp
orb
ljmp
pop
sbb
xchg
sbb
movsb
in
dec
rcrb
adc
xchg
loopne
in
push
sbb
adc
mov
scas
into
shrl
inc
js
in
call
jecxz,pt
mov
xlat
mov
fcomps
xlat
fisubrs
dec
push
push
xor
iret
movsl
aas
imul
xchg
sub
fisubs
loope
sub
add
repz
mov
mov
jge
adcb
jne
or
xchg
jle
mov
test
xlat
mov
fmull
ret
add
xchg
cmp
sbb
cld
xchg
outsb
adc
aas
bound
imul
mov
or
test
mov
ja
rcrb
xlat
test
add
jne
and
flds
sbb
cwtl
mov
mov
cmpsb
ljmp
lock
xor
jecxz
mov
mov
imul
mov
jecxz
cli
add
mov
dec
movsb
sbb
mov
lahf
add
popf
daa
xchg
scas
dec
mov
add
pushf
cld
dec
jbe
call
cmpsb
shl
sbb
pop
pop
and
xchg
lcall
repz
push
test
xorb
jecxz
addr16
mov
and
sbb
ds
bound
fwait
mov
adc
ja
push
adc
lock
fiadds
out
and
sub
dec
pushl
fisubs
xchg
fucomip
lret
std
and
mov
jb
ljmp
outsl
ja
fsubrl
lcall
clc
cmpsb
sub
adc
aam
mov
dec
aaa
or
sub
cltd
cmpsb
push
lcall
adc
dec
or
adc
pop
or
mov
ss
xor
mov
mul
cmp
loope
or
fs
outsl
sbb
mov
lock
mov
mov
jns
test
lret
or
pop
or
stos
adc
std
xchg
mov
test
int
pop
add
xchg
hlt
mov
imul
pop
aas
mov
pop
sbb
cmp
in
or
je
ja
lret
inc
mov
je
xchg
fs
jl
dec
and
adcb
sbb
mov
inc
addl
stc
data16
test
or
and
dec
loope
adc
adc
imul
and
stos
push
xchg
sarb
xchg
mov
pop
fiadds
int
cmp
mov
sbb
mov
mov
pinsrw
in
and
push
push
inc
scas
sahf
data16
jecxz
movsl
xor
movsl
push
enter
jmp
fsts
aaa
lret
lods
and
sbb
pop
xor
add
cmpsb
out
inc
jl
inc
aaa
sbb
mov
dec
fnstcw
mov
sbb
push
stos
xchg
mov
lahf
repnz
xchg
xchg
adcb
arpl
movsb
rclb
addr16
mov
pop
dec
les
pop
adcl
push
lea
stos
fdivs
or
push
push
ja
iret
mov
sub
out
sub
inc
jg
xchg
pop
push
add
scas
and
or
mov
fcoml
fisubl
mov
fists
mov
movsl
pop
ss
lock
add
aam
faddp
xor
xchg
sahf
inc
xor
nop
in
adc
mov
fimuls
mov
daa
scas
xor
popa
out
inc
adc
lods
lds
les
jae
xor
call
popf
fdivrs
pop
add
xor
in
push
imul
jle
jbe
mov
int3
in
sbb
fwait
xchg
jb
repz
into
mov
flds
fisttpl
add
inc
daa
fwait
and
rcl
aas
xor
negl
dec
sbb
stos
and
cmp
cmp
adc
lahf
mov
incl
sti
jmp
pop
xor
jmp
les
pop
test
scas
sub
pop
add
mov
xlat
sub
test
clc
and
ret
rorb
notb
int
mov
inc
pop
jp
test
aam
stos
jecxz
mov
ret
push
inc
cli
xchg
sub
inc
push
and
insb
push
imulb
fwait
shr
repnz
jmp
fimuls
aas
mov
xor
push
push
outsl
lret
or
shll
mov
xchg
mov
xorb
out
jl
stos
push
daa
pop
aam
pop
call
and
adc
xchg
rcll
ret
cmp
and
sub
in
mov
hlt
cmp
cmc
mov
rcrl
dec
pop
not
fucomip
mov
rolb
mov
cmpsl
pop
scas
push
sub
clc
fs
scas
jecxz
mov
lahf
push
loopne
adc
addr16
jmp
in
mov
test
sub
or
sbb
lea
mov
into
pop
pop
loop
ret
mov
pop
pop
inc
iret
jl
fildll
or
push
mov
sbb
mov
inc
push
scas
add
fxtract
outsb
out
sub
mov
arpl
push
push
adc
push
sbb
addr16
and
std
mov
stos
nop
push
ret
cmpsb
js
sub
pusha
hlt
and
fstps
push
out
xorl
test
push
ljmp
xchg
sub
cwtl
push
and
into
and
dec
fdivs
add
inc
cmpsb
das
adc
imul
pop
pop
inc
push
fs
movsb
loope
fldl
adc
sbb
out
adc
or
orl
loope
inc
cmp
cld
add
xchg
mov
cltd
nop
js
dec
dec
imul
scas
hlt
jbe
dec
aas
push
clc
leave
les
sti
and
jne
or
shll
hlt
aas
fnstenv
push
repz
push
mov
sbb
dec
fwait
mov
popf
mov
push
xchg
out
fsts
cmp
dec
arpl
and
cmc
or
inc
cmp
test
mov
leave
lcall
add
mov
dec
dec
loop
cmp
loop
inc
mov
xchg
xchg
xchg
movsl
cltd
aaa
repnz
es
dec
pop
adcb
fstps
mov
insb
mov
jl
sti
aas
jp
mov
pop
mov
dec
cmp
add
pop
cli
and
lods
jne
sahf
loopne
mov
bound
add
inc
add
push
jne
in
push
xchg
jae
repnz
dec
ja
inc
fcompl
aad
adc
movsl
lret
sub
stos
push
adc
jg
jmp
add
dec
fsts
xor
movsl
jmp
mov
lds
stos
add
mov
inc
lods
jg
aas
push
inc
add
xchg
sub
or
xor
inc
xchg
mov
adc
inc
cmp
addr16
add
ljmp
lods
std
cmc
push
inc
dec
xchg
nop
ret
sub
mov
inc
call
cli
es
adc
shll
addl
movsl
std
imul
sub
sbb
add
pop
orb
or
and
lcall
cmpsl
sub
adc
sub
data16
jns
push
lcall
shrb
fistpll
fbld
jl
sub
pop
lods
mov
mov
bound
sub
cmc
out
push
inc
mov
sti
rol
mov
mov
and
jle
mov
cmp
jbe
jg
bound
mov
lods
scas
loopne
jl
push
cs
sti
xor
sbb
jns
iret
test
and
xor
mov
mov
jns
fistl
adc
xorb
lahf
ret
jnp
and
sbb
push
jp
cmpsl
push
sbb
in
add
insb
xchg
add
lea
std
xor
popf
jb
jle
iret
test
std
mov
mov
aad
mov
outsl
dec
int3
ss
and
je
inc
les
pushf
xchg
xchg
mov
mov
jae
bswap
adc
pop
aad
incb
insl
loopne
testb
ds
in
clc
sbb
push
mov
lock
or
popf
lods
repz
fwait
aaa
adc
stc
icebp
hlt
lcall
rol
test
jae
jmp
mov
insb
pushf
xor
nop
mov
sub
xor
and
add
and
mov
sar
push
jno
pop
fidivs
iret
shlb
sbb
xor
cmpsb
in
lods
loope
ja
mov
cs
mov
out
cltd
fistpll
mov
je
gs
loop
xchg
out
push
sub
test
dec
dec
ret
lret
dec
push
sub
enter
or
sbb
xchg
test
jb
testb
fsubs
test
cli
xchg
inc
insb
or
inc
xorl
aam
into
pop
ja
adc
add
ret
jecxz
leave
or
xor
mov
repnz
lods
lea
popl
jno
repz
test
out
sbb
inc
add
gs
outsl
or
push
adc
dec
fwait
stos
sbb
jne
sub
fcmovne
lret
shll
mov
pop
pop
in
jb
movsl
test
jle
jg
aas
loope
mov
and
dec
mov
sbb
sub
mov
add
push
call
ss
lahf
lea
pop
cmp
ud1
std
mov
int3
cltd
jle
enter
inc
lods
aam
repnz
mov
add
pop
cmp
mov
pop
pop
aad
xchg
cltd
ret
cmp
dec
add
insb
mov
cmp
movsl
jbe
xchg
sbb
gs
clc
add
lock
xchg
or
and
pop
or
aas
push
dec
xchg
dec
fcmovnu
jno
jb
push
neg
popf
sti
xor
je
fs
push
in
xchg
sahf
test
mov
imul
mov
lods
jp
pop
aam
inc
je
jp
movsb
jle
dec
int
jb
push
imul
sarb
sub
nop
pushf
insb
outsl
popf
je
pusha
mov
das
mov
loopne
jecxz
lods
popf
js
out
stc
or
pop
add
mov
testl
rcll
lcall
fidivl
inc
lret
mov
lds
es
int3
add
cmc
pmaxub
xor
adc
cmp
sub
push
pusha
inc
mov
idivl
inc
ret
mov
mov
and
sti
sub
ret
int
mov
lcall
aas
fwait
xlat
or
cmp
mov
push
imul
push
movsb
push
push
mov
enter
cs
mov
cwtl
clc
cld
add
repnz
xor
sub
fisubl
in
lret
and
push
sti
stos
push
push
ds
push
ja
into
in
pushf
push
xchg
adc
dec
push
jge
inc
sahf
call
fcompl
enter
jge
pop
mov
adc
xchg
or
push
xchg
lods
push
ds
and
sarl
xor
imul
dec
dec
cmp
js
adc
cmp
dec
ss
nop
jmp
push
cmpsl
arpl
lods
test
cld
mov
ds
xor
mov
sub
aas
nop
sbb
inc
sahf
mov
loope
push
test
jb
pop
fucompp
mov
inc
dec
inc
sub
sbb
and
insb
push
loop
ja
xchg
popf
inc
sbb
cmp
xchg
fs
arpl
xor
xlat
iret
pusha
test
jge
push
rcrb
enter
or
sahf
paddsb
mov
xor
subl
pop
dec
mov
jg
outsb
repz
jne
or
jmp
mul
adc
add
xorl
cwtl
lret
pop
dec
sbb
xchg
movsb
hlt
xor
test
ds
data16
xlat
adc
sbb
push
sbb
xchg
push
in
pop
jne
fs
clc
punpckldq
jnp
stc
adc
movsl
dec
insb
stc
xor
dec
mov
pop
aam
stos
xchg
jno
repnz
mov
dec
pusha
test
mov
sbb
gs
insl
mov
add
mov
dec
or
and
out
icebp
inc
inc
cmp
mov
mov
mov
mov
aad
add
sub
push
shll
jge
mov
pop
mov
xchg
mov
out
xor
scas
push
stos
cmpsl
shrb
mov
aas
gs
mov
aad
fisubl
sbbb
xchg
and
sbb
orl
and
rcrb
mov
sbb
mov
out
mov
push
sub
mov
fidivs
mov
fwait
mov
sub
mov
adc
push
dec
out
test
dec
fdivrs
jno
xor
pop
cmpsb
in
jae
rorl
add
xor
adc
repnz
addb
insb
cwtl
enter
pop
cmp
mov
cmp
or
jbe
jmp
push
jmp
ss
pop
ret
jle
stos
mov
lea
or
out
pop
outsl
sub
cmp
jbe
dec
sub
arpl
sar
push
and
inc
lret
gs
dec
cmp
leave
sti
jno
inc
jg
addr16
or
aad
push
or
shll
aas
lds
movsb
imul
or
sarb
add
adc
sarl
mov
rolb
les
pop
mov
lods
push
jae
outsl
xor
out
xchg
cmp
cmp
aad
ret
call
cmpsb
rcr
adc
sahf
mov
xor
test
mov
popa
jp
sarl
lods
xchg
push
scas
cli
mov
lock
push
push
sbb
inc
pushf
push
sub
es
movsb
ficompl
sarl
rcr
xchg
sub
cmpsl
sub
test
sbb
push
fs
mov
notb
mov
arpl
ja
cmp
jns
add
das
arpl
pop
mov
push
pop
in
add
mov
nop
jo
rcr
ja
sbb
pop
and
add
call
mov
sbb
sbb
lret
stos
mov
push
push
leave
or
inc
cs
or
mov
pop
adc
mov
adcb
xchg
add
orb
into
push
push
mov
sub
inc
jp
mov
mov
fwait
adc
sub
cmp
xor
pop
outsl
aam
pop
clc
add
pusha
cmp
xor
or
ljmp
push
push
xor
sahf
fwait
leave
push
imul
imulb
jne
adc
icebp
mov
or
mov
pop
lret
cmp
and
mov
dec
jge
mov
adc
push
imul
dec
repnz
ds
std
test
add
or
xchg
and
mov
cli
or
xor
dec
adc
test
xor
jno
faddl
mov
int
popa
push
repnz
push
scas
cmp
subl
mov
cmpsb
adc
ds
sub
aad
jmp
repz
sub
adc
neg
pop
popa
inc
jl
ret
jno
sarb
xchg
in
lret
stc
clc
jecxz
xor
mulb
stos
mov
cmp
mov
fs
mov
in
adc
insb
test
hlt
into
ss
cltd
mov
push
cmpsl
divb
pop
dec
inc
lcall
push
idivl
mov
lock
lret
imull
dec
jne
insl
repnz
inc
movb
xor
jns
sbb
scas
gs
loopne
mov
mov
jmp
bound
pop
inc
mov
lret
aas
push
sbb
popa
or
test
adc
mov
mov
mov
lods
push
inc
shrb
shrl
bound
pop
nop
cld
rol
aaa
pop
js
nop
dec
mov
mov
adc
int3
das
cmp
inc
ret
or
enter
inc
mov
xchg
jecxz
pop
subb
cs
insb
imul
jl
stos
xor
xor
inc
or
std
inc
jne
or
pop
scas
incb
or
stos
xchg
xor
movsb
dec
lods
dec
cltd
pop
xchg
das
sub
pushf
cmp
imul
push
mov
add
xor
data16
cmp
pop
mov
cmp
inc
pop
pop
imul
inc
gs
ret
mov
xor
mov
push
fs
and
push
mov
sbb
sbb
popf
xor
adc
mov
leave
push
adc
mov
mov
dec
inc
fucomi
xchg
jb
dec
fwait
nop
mov
mov
roll
shll
out
push
push
jo
into
xchg
cmp
push
sbb
mov
xchg
jl
xor
sbb
xor
mov
mov
ljmp
cmpb
pop
call
inc
ja
sub
nop/reserved
jne
mov
sub
bound
xorb
cmc
sbb
into
int3
and
test
test
loop
pop
mov
sti
sbb
mov
push
in
adc
fs
inc
jle
add
arpl
dec
enter
push
test
inc
pushf
adc
dec
es
movsl
orps
lods
in
outsb
gs
cmp
jmp
inc
jl
dec
out
cli
xchg
dec
stos
xchg
out
lock
inc
bound
lahf
mov
xchg
cmpsl
sub
mov
inc
xor
push
mov
and
addr16
ss
pop
pop
sbb
sbb
and
mov
lods
fbld
add
mov
fs
dec
sub
dec
call
repnz
and
lods
aaa
mov
jns
ljmp
sahf
cmp
pop
leave
bound
dec
mov
jne
mov
and
popf
hlt
sub
lret
xor
test
mov
jns
cmp
fidivs
out
lahf
cmpsl
inc
sahf
xor
adc
insl
aam
pop
gs
popa
adc
inc
dec
cmp
pop
int
cli
mov
or
push
frstor
push
adcl
jae
mov
mov
push
stos
jmp
push
fwait
pop
and
add
xchg
fcmovnb
mov
inc
push
and
add
mov
test
xchg
adc
shll
mov
daa
je
jl
aad
test
xchg
addb
pop
add
les
nop
jp
call
xor
mov
xchg
jmp
ss
rorb
lret
loope
push
mov
xor
mov
xor
jne
orb
mov
aas
aad
mov
in
cmpsb
mov
xor
cmpsl
fstl
lret
mov
clc
arpl
ds
push
and
add
stc
fsubs
jbe
ret
and
mov
cld
addr16
mov
xchg
xchg
jle
adc
and
pop
ret
pushf
xchg
sub
or
mov
xor
xor
scas
sti
xor
push
adc
adcl
lods
cmp
and
fsubrp
in
push
test
sub
insb
hlt
adc
jo
icebp
cmpsl
ret
orb
sub
push
or
push
and
scas
pop
jbe
adcl
inc
jne
lock
arpl
out
push
movb
cltd
or
daa
pop
adcl
xchg
pop
jnp
xor
aad
mov
push
sbb
sti
sbb
dec
ljmp
in
sub
jge
jmp
js
sub
xlat
aaa
dec
xlat
arpl
outsb
mov
jg
xchg
mov
loopne
jnp
std
adc
or
insb
inc
ud0
cld
add
aas
jns
es
push
sbb
push
rolb
sub
ret
orl
repnz
fldenv
fisttps
inc
sahf
scas
icebp
xor
aaa
icebp
sub
push
or
add
xlat
out
fidivl
xchg
std
imul
jns
dec
jno
mov
add
lods
scas
in
fld
add
pop
inc
test
xchg
dec
and
adc
sbb
mov
clc
aas
je
xor
xor
in
push
cmp
int3
mov
push
mov
mov
add
jge
popf
lods
jecxz
cwtl
push
cmpsb
ret
mov
mov
andb
push
loope
bound
lds
jl
add
stc
jg
frstor
add
xorl
jno
xchg
data16
repnz
cmp
pop
mov
shll
pop
add
aaa
filds
adc
incb
dec
cwtl
xor
test
outsl
in
leave
repz
sbb
xor
enter
push
imul
cmp
mov
mov
addl
push
mov
jns
xchg
lock
clc
xchg
cmp
rcrl
adc
or
push
mov
pop
popf
lock
ret
sbb
aas
and
jns
call
pop
pushl
clc
add
pop
aad
clc
dec
jo
pop
inc
inc
pop
loopne
dec
cmp
and
mov
mov
shl
jmp
mov
in
jmp
xor
inc
pop
aas
call
sub
jle
aam
nop
stos
dec
jbe
cmp
dec
stos
pop
mov
sub
pusha
loopne
inc
sub
mov
adc
std
jg
repnz
lds
enter
int3
inc
sarb
icebp
mov
pop
xchg
sbb
orps
pop
xchg
adc
and
clc
and
mov
cmp
mov
fnstsw
dec
adc
nop
pop
inc
aad
sub
inc
pop
incl
sub
test
cltd
or
fwait
xor
fdivrp
lock
push
sti
xor
mov
jmp
mov
cmp
or
dec
mov
push
jb
or
adc
in
adc
and
adc
jnp
outsl
push
mov
leave
cmp
aaa
pop
rclb
nop
pop
addr16
or
stos
dec
and
inc
fnsave
ret
mov
cmp
pop
xor
adc
inc
data16
pop
cmp
pop
je
outsl
movsl
jl
adcb
dec
jnp
ret
cmp
ljmp
inc
mov
gs
mov
mov
sahf
or
clc
sbb
adc
cmp
pop
fsubrs
mov
xchg
sub
loop
adc
push
jnp
jns
addl
xchg
movd
cmpsl
out
lcall
lcall
pusha
sarl
ljmp
fildll
xchg
adc
xor
jns
pop
add
repnz
testl
scas
fcmovnbe
pushf
loop
inc
repz
mov
bound
xchg
cmpsl
mov
push
add
jge
pop
mov
call
stc
insb
test
jne
dec
lcall
nop
pop
add
arpl
in
cmp
pop
gs
adc
inc
rorb
insl
scas
or
jg
pop
jnp
and
adc
jbe
mov
adc
jo
js
push
jae
mov
lcall
iret
jle
std
and
mov
lret
dec
fwait
nop
ja
loop
xchg
sub
push
clc
adc
arpl
push
shlb
cmp
insl
mov
mov
or
jne
sbbb
sahf
je
dec
jge
or
daa
stos
sub
jmp
xchg
xchg
mov
push
jno
vpshad
adc
fiaddl
nop
pushf
xor
inc
fstpt
pop
stos
fdivp
xor
rcrb
or
sub
shll
xchg
jge
jl
adc
xor
jg
pop
sbb
int
fcompl
pop
lret
movsb
test
loope
lea
in
outsl
dec
ret
jmp
adcl
pusha
push
cs
ss
fadds
cmp
or
ficoms
jge
mov
or
sub
add
scas
movsb
xchg
dec
pop
fistpll
rcrb
add
dec
adc
jns
push
xchg
cmp
pop
stc
out
fildll
sbb
xor
shlb
or
hlt
pushf
daa
enter
push
pusha
int3
hlt
js
mov
mov
bound
out
lret
xchg
clc
jmp
push
mov
pop
add
shll
jae
hlt
sarl
pop
push
mov
pop
cmp
in
nop
shll
push
adc
loopne
push
sub
nop
cmc
fldl
movsl
dec
cmpsb
mov
pop
mov
ds
push
test
mov
and
and
lret
pop
sub
jb
or
dec
mov
popa
pop
je
das
mov
mov
jns
popf
orl
and
fs
or
call
aad
mov
xor
out
xchg
inc
jo
mov
mov
movb
movb
dec
es
pop
bound
pop
dec
orl
xor
or
sbb
jg
scas
addr16
js
mov
jg
mov
inc
pop
xchg
sbb
out
dec
jle
jg
xor
scas
and
shrl
ja
mov
sub
cmp
pushf
pop
ret
sub
push
lcall
inc
and
mov
adc
test
lret
aam
sbb
xor
push
fildl
ret
push
sbb
sbb
pop
lret
or
adc
call
lret
and
dec
pushf
fcoml
bnd
xor
xlat
js
call
outsb
xor
xor
add
arpl
mov
sbb
add
adc
das
es
mov
and
dec
cmp
mov
subl
in
push
test
inc
jp
mov
and
sbb
lret
jecxz
and
fisttps
mov
mov
out
xchg
cli
add
dec
sti
xor
cwtl
fcompl
sbb
iret
sub
nop
movsl
decb
dec
xchg
ret
mov
movsl
test
mov
sub
sti
aad
lret
mov
test
xor
data16
inc
test
jecxz
sarb
loop
mulb
pusha
and
aad
jge
mov
scas
adcb
pop
cmp
jae
cmpsb
in
cwtl
les
rol
adcb
rolb
dec
push
sub
pop
lahf
jne
aas
fs
test
cli
jge
aam
fsts
scas
scas
lcall
scas
mov
sub
push
sarl
inc
xchg
mov
push
mov
xor
mov
movsb
sub
cmpsl
sar
iret
and
mov
aaa
data16
mov
scas
mov
pop
inc
bound
jecxz
pop
xchg
jne
rorl
fsubs
or
fsubs
imul
push
or
inc
xchg
mov
adc
xchg
insl
xor
push
add
mov
jnp
xchg
and
add
in
dec
pop
mov
cwtl
sti
out
push
int3
jo
lret
mov
inc
sbb
and
arpl
mov
mov
pop
and
fs
test
out
imul
shl
mov
sub
std
jbe
xchg
xchg
cmp
outsb
jle
rcll
or
jmp
mov
shll
dec
jecxz
mov
mov
addr16
cmc
jmp
cwtl
jle
dec
add
in
fcmovu
jmp
jno
lahf
sub
mov
loop
sbb
std
push
ficompl
aas
bnd
jecxz
mov
test
pop
cmpsb
arpl
std
or
jmp
pop
mov
pmaxub
inc
popf
cmp
cli
xor
sbb
lds
in
sub
ret
xchg
filds
add
rorb
leave
mov
jne
sub
jl
xchg
aas
enter
loopne
cmp
scas
cmp
std
lods
mov
pop
jle
jne
hlt
push
imul
xor
rcrl
in
inc
repz
mov
les
lock
xchg
es
mov
mov
xor
push
sub
out
mov
jnp
or
xchg
out
adc
push
test
add
lods
insl
dec
cmp
mov
add
fdivrl
sub
pusha
mov
xchg
inc
call
jecxz
jmp
cmp
xor
arpl
mov
lods
cmp
xor
stos
mov
xor
dec
lahf
add
inc
outsl
inc
rcrb
ss
cmp
dec
sbb
jne
shll
stos
jl
out
adc
sub
mov
xchg
inc
jo
nop
lea
repz
test
mov
add
mov
loope
mov
lret
stos
add
in
mov
lea
clc
scas
and
pop
mov
ret
out
jecxz
shlb
jge
or
popa
mov
daa
repnz
push
outsb
mov
fimull
adc
push
notb
dec
xlat
jo
add
sbb
xchg
gs
shl
rcrl
cmp
dec
ret
mov
pop
icebp
jno
and
adc
test
mov
pushf
jns
repz
popa
mov
pop
or
cmp
fsubs
mov
enter
push
xchg
xor
push
or
mov
int
pop
ja
insb
loopne,pn
xor
lea
adc
xchg
mov
jp
cmp
cli
mov
inc
divb
xor
pop
sub
loope
ror
faddp
outsl
jae
leave
imul
pushf
push
jmp
loope
lcall
incl
push
leave
mov
pop
ret
iret
rorl
cmp
mov
inc
adc
loope
mov
jp
sbb
es
adc
sub
inc
scas
fdivl
std
jb
jne
mov
scas
mov
test
fstps
lds
inc
or
gs
pop
inc
test
adc
inc
ja
mov
sub
enter
out
jno
out
fsub
fs
cmp
mov
mov
je
push
in
fiadds
dec
cs
xchg
ja
into
mov
push
leave
imul
jnp
mov
or
adc
lcall
inc
incb
movntq
out
cmp
mov
inc
in
fcompl
and
adc
repnz
fs
jb
sub
das
in
push
out
stc
fs
stc
aam
sub
pop
jnp
nop
mov
rcl
scas
rorl
sarl
mov
dec
xchg
dec
mov
or
int3
popf
rcll
mov
int3
pop
aas
and
sbb
test
ds
fsubrl
popa
mov
outsb
lds
outsb
cmp
dec
ds
stc
jne
jl
mov
cmpb
mov
mov
ret
imul
jns
lahf
repz
inc
inc
mov
push
sub
enter
mov
sbb
dec
aam
xor
leave
loope
lock
cmc
mov
negl
imul
sbb
inc
fdivrs
add
stc
fwait
loope
sub
or
sarl
sub
push
xor
xor
sub
inc
scas
xor
int3
ret
movsl
jle
scas
mov
scas
fdivrs
cmp
and
add
inc
leave
das
stos
cltd
pusha
jge
xchg
inc
mov
dec
sti
iret
sbb
dec
or
push
fldl
mov
mov
nop
ret
rol
das
adc
pop
lcall
sub
mov
cltd
imul
loop
lock
inc
fimuls
or
lret
movsb
lods
scas
aas
lret
inc
insb
push
addb
mov
hlt
scas
jmp
leave
mov
mov
cmp
or
xchg
int3
aad
in
hlt
add
fsubr
cli
mov
mov
lahf
inc
mov
sub
xor
sbb
subb
push
aaa
lret
rcll
lock
mov
mov
xchg
cs
or
fs
int3
or
loope
xchg
jbe
sbb
stos
jns
je
cmp
nop
mov
ds
pop
or
loope
fisttpll
int3
out
in
xlat
lods
dec
adc
je
pop
sub
lret
push
lret
stc
jns
repnz
test
mov
hlt
shrl
jle
leave
stos
cmp
mov
mov
dec
outsb
xor
ja
hlt
sbb
mov
sarb
mov
fwait
test
shll
jge
sarb
pop
sti
sub
sub
push
test
cs
push
je
push
and
sub
xor
dec
repnz
jmp
push
icebp
push
jne
in
rcr
scas
inc
ja
sti
cmp
adc
jmp
push
adc
xchg
loopne
pop
sbb
ja
add
pop
mov
mov
mov
imul
jge
or
popf
repz
mov
sbb
add
sbb
leave
inc
cmpsl
mov
out
inc
mov
push
ds
pop
cmpsl
xchg
icebp
jecxz
sub
sbb
mov
sbb
cltd
in
ds
sbb
cmc
insl
push
pop
mov
mov
fs
fcoml
push
call
push
lods
pusha
ljmp
xlat
mov
stc
mov
add
inc
fstl
and
xor
popf
inc
imul
xor
hlt
pop
stos
fsubrs
mov
dec
mov
into
js
dec
pop
pop
dec
mov
out
push
popf
jno
adc
xchg
xor
mov
les
cld
sbb
movsb
mov
int
cmp
mov
nopl
std
add
stos
sbb
or
pop
cwtl
push
jecxz
cmp
mov
jmp
inc
dec
mov
or
cltd
xchg
loope
mov
faddl
int
daa
movb
sub
cmp
icebp
xorb
outsl
jno
scas
xchg
repnz
nop
add
mov
rcrl
fcomps
pop
insl
mov
xor
xchg
sbb
xchg
subw
dec
ret
push
fidivs
lret
sbb
jle
sar
imul
or
push
jge
cli
mov
faddl
dec
cmp
mov
lods
or
sub
xor
jb
pop
xchg
aad
lret
mov
pop
lcall
idiv
test
mov
jb
add
hlt
jo
add
mov
imul
dec
fadds
mov
cmp
adc
adc
je
pop
dec
mov
jno,pn
cld
cmp
andl
nop
push
out
sti
sbb
mov
add
test
mov
push
mov
loop
shlb
iret
mov
into
xchg
push
xor
jns
je
inc
movsb
push
lods
les
shll
dec
push
jbe
and
std
adcl
mov
add
int3
pop
lock
mov
pop
mov
addb
mov
jb
fdivrs
iret
aas
mov
jl
or
stos
xchg
leave
add
cwtl
xor
rcrb
pop
loop
lods
fstpl
dec
dec
aad
cwtl
dec
rcrl
leave
mov
jg
test
push
dec
push
adc
subl
pop
test
icebp
or
lret
mov
inc
inc
dec
add
pop
xchg
add
inc
sahf
lret
pop
dec
inc
pop
dec
test
inc
sbb
push
mov
or
popf
mov
xchg
jp
test
js
inc
mov
fwait
cwtl
cmp
cmp
nop
mov
xchg
pop
jbe
push
jecxz
and
jge
ret
call
jmp
sbb
movsl
rclb
lea
loop
inc
bound
pop
ljmp
xchg
mov
push
push
sti
pop
and
lahf
aad
xchg
test
or
sub
je
sarl
pusha
cwtl
push
cmpsb
sub
lret
js
scas
test
out
outsl
lods
outsb
xor
in
push
jecxz
nop
pop
cmp
cmpsb
add
std
cmpsl
fucomp
mov
int
adc
outsb
xchg
and
jmp
or
dec
cmp
push
faddl
mov
rcrl
xchg
scas
xor
cmc
ds
cmp
jno
xor
and
es
fwait
sbbl
mov
gs
movsl
push
iret
or
mov
pop
arpl
enter
out
mov
jmp
push
dec
sub
call
enter
movsb
leave
in
cwtl
cmp
pop
fmul
fistl
pop
mov
outsl
scas
lret
jl
rolb
xor
xor
jne
add
sbb
sbb
mov
cmp
dec
ret
pusha
stos
movsl
inc
inc
rorb
leave
call
cmc
int
lahf
int3
imul
outsb
add
inc
cli
lods
adc
adc
mov
pop
out
movsl
leave
jb
adc
pop
jmp
jb
xor
push
mov
fsubr
inc
jp
nop
push
dec
pop
lcall
addb
mov
repnz
repz
inc
cmovp
and
mov
or
das
lock
ss
fwait
sub
adcb
pusha
in
lcall
mov
es
test
push
mov
int3
fwait
lods
or
rclb
or
loopne
ret
add
icebp
xchg
mov
mov
adc
arpl
out
push
jp
pop
fyl2x
stos
and
jne
and
inc
xchg
cltd
pop
push
mov
bound
push
lcall
xchg
jno
mov
addr16
les
sbb
xor
arpl
je
lcall
idivb
xchg
into
je
lret
lock
stc
movsb
xor
je
push
mov
notl
sbb
cld
je
push
mov
mov
jb
dec
leave
daa
iret
pop
roll
xchg
sub
stos
or
leave
dec
cmp
push
mov
test
adc
popa
push
jo
out
adc
jae
aas
dec
and
fidivrl
adc
mov
inc
mov
push
pop
jno
popl
pop
xchg
lahf
xchg
ja
xor
out
jno
and
in
pop
mov
adc
cmp
pop
dec
inc
adc
int
scas
pop
push
enter
sarb
outsl
outsb
jp
fildll
das
stc
scas
insb
ficomps
icebp
dec
jb
sti
cltd
cmp
adc
mov
mov
pop
and
lea
inc
push
popa
and
repnz
xchg
dec
outsb
test
js
sbb
lds
int3
test
xchg
sub
dec
stos
bound
push
push
rcrb
adc
aas
icebp
cmp
cmp
mov
cwtl
sub
test
inc
mov
fdivp
je
cmp
ficoml
jecxz
inc
adc
lods
and
cli
fisttpll
adc
adcb
and
xchg
movsb
pop
and
mov
mov
sub
jmp
and
jno
cwtl
lret
clc
bound
pusha
push
jnp,pt
sub
pop
fcoms
jo
mov
cmp
push
or
sbb
cmpsl
dec
loope
push
bnd
mov
jge
lcall
ss
and
ja
push
add
dec
sbb
xlat
jns
sahf
sub
shl
and
push
push
xchg
gs
shlb
adc
lea
inc
dec
jmp
push
pop
xchg
xchg
mov
shrb
ljmp
mov
sub
mov
sti
add
mov
pushf
stos
mov
push
fdecstp
xchg
scas
lea
mov
lea
sbb
mov
xchg
push
lods
cwtl
leave
leave
js
loop
and
pop
sti
shll
jp
out
mov
jb
sbbb
add
fisubs
mov
popf
scas
insl
and
fisubrs
fwait
mov
mov
add
icebp
int3
xor
jg
push
mov
jmp
stos
pop
pusha
push
cmp
xor
sbb
sub
cmp
shll
xchg
xor
push
lods
mov
push
push
dec
inc
lret
bound
pop
pop
push
dec
icebp
add
mov
and
std
mov
push
and
mov
jae
inc
adc
adc
addr16
fldt
rcll
sub
aas
pop
pushf
jne
lahf
mov
push
jns
in
leave
adcl
sub
lahf
mov
movsl
push
mov
and
jbe
mov
pop
jmp
pop
xor
repz
mov
xchg
iret
orb
or
and
xor
jnp
mov
out
adc
cmc
jg
incb
int3
or
and
cmp
outsl
cli
nop
push
push
add
andl
cmp
out
fisubrl
dec
ljmp
stos
fsts
popl
lcall
movsb
sahf
inc
jne
sub
cmp
jbe
clc
mov
mov
icebp
mov
insb
push
pop
out
les
addl
inc
sub
cwtl
outsb
pop
adc
push
loope
sbb
jmp
scas
pop
ss
adcb
jl
inc
ds
fcomp
sbb
push
sbb
scas
lret
orb
jmp
cltd
movaps
mov
adc
add
push
call
and
fwait
test
cmpsl
stc
js
and
pop
shl
inc
movsb
jmp
xor
lock
test
adc
and
inc
insl
mov
repz
or
jl
push
cmp
and
dec
bound
cmpsb
xchg
scas
sbb
inc
pop
imul
mov
ds
push
daa
sbb
inc
push
cmp
lock
lods
mov
add
mov
push
je
pop
imul
push
rcll
adc
and
mov
popf
dec
cmp
sbb
leave
xchg
cld
sub
jbe
jp
xor
lret
mov
imulb
lcall
or
jno
cmpsl
pop
mov
repz
popw
sub
clc
ja
jl
jne
ja
jo
jo
cmp
push
iret
mov
repnz
push
mov
pop
movq
gs
cmp
scas
cmp
or
push
xchg
push
or
pop
cmp
sbb
scas
jns
ret
cmp
cs
imul
cltd
out
mov
idiv
aas
jecxz
stos
xchg
flds
xlat
clc
adc
shlb
adc
cwtl
adc
dec
sarb
dec
cld
sub
enter
add
adc
leave
mov
dec
sti
inc
or
cmpsl
stos
mov
js
jb
bound
dec
mov
pop
inc
cmpsl
adc
stos
scas
mov
pop
or
cmp
mov
push
je
mov
cltd
and
mov
cli
pop
xor
inc
sarb
imul
xchg
fidivrs
adc
add
inc
adc
xor
addr16
sbb
icebp
in
rorb
mov
stos
std
stos
cld
shrb
in
sub
loop
test
nop
je
cwtl
shll
popa
lahf
aas
mov
pop
jns
scas
jecxz
stos
sbb
sbb
cli
lret
push
je
sahf
pop
add
imul
cs
mov
jp
repz
xchg
mov
pop
inc
fisubrl
push
cmp
lret
cs
sti
sarb
lahf
inc
mov
or
inc
cmp
xchg
je
aas
lcall
out
push
sbb
adc
fwait
mov
arpl
or
and
loope
lret
jge
pop
mov
inc
add
aad
fwait
sbb
nop
sbb
inc
lods
lds
mov
dec
jmp
outsb
adc
ds
lock
jl
sub
cmp
sub
xor
sub
in
inc
imul
scas
out
adc
dec
or
arpl
mov
clc
pop
aad
mov
leave
sbb
sub
fdecstp
ficompl
jb
enter
addr16
jne
xchg
into
lcall
inc
scas
cmp
xchg
dec
lock
lcall
cmp
call
jo
stos
mov
cmp
and
roll
cmc
dec
je
or
xchg
xchg
je
mov
rcrb
scas
faddl
addr16
mov
pop
lea
mov
into
js
cmpsb
lods
xchg
adc
testb
loop
ret
cmpsl
rcrb
sub
sti
mov
cmp
int
das
or
inc
or
out
pop
fiadds
lock
ret
int
add
lret
stos
pop
insb
ds
shll
dec
aad
in
aaa
fstpl
aas
cmp
jae
or
stc
jae
xchg
stos
sbb
push
scas
pop
gs
ret
jns
xchg
jne
repnz
and
pop
psubusw
jmp
mov
loopne
xor
sub
cmpsl
leave
outsb
and
jns
int3
aaa
fidivl
xlat
xchg
das
mov
and
insb
jmp
mov
or
mov
nop
daa
pop
cltd
xor
jns
mov
stc
out
nop
nop
cld
adc
cmpsl
lods
push
aam
mov
pusha
push
es
jle
ficomps
add
cmp
mov
rcrl
cmpsb
mov
sbb
mov
inc
outsl
dec
pop
pop
lret
or
mov
and
jns
mov
negb
bswap
cmp
jmp
inc
bound
adc
lret
lock
cli
and
xor
sub
hlt
adc
add
jl
jp
or
bound
ret
add
in
dec
lods
lahf
xlat
adc
negb
jge
mov
push
fdivs
push
mov
cld
iret
addr16
or
xor
add
mov
mov
mov
cmp
push
ret
imul
xchg
mov
jmp
mov
mov
out
fsubl
cwtl
pop
mov
sbbb
xchg
fstl
idivb
mov
inc
dec
pop
push
jbe
ja
mov
cld
stos
nop
xor
sbb
sub
int3
push
movsb
lret
rolb
or
add
mov
jl
jecxz
xchg
stc
pop
pop
jecxz
adc
ret
shrl
dec
push
mov
pop
push
test
or
pop
in
or
jbe
lods
jge
xchg
xchg
inc
aam
push
movsl
cmp
pop
mov
outsl
fcoml
cli
xchg
popl
mov
adc
cmp
ror
jmp
jns
mov
sub
mov
adc
mov
pop
pop
jbe
dec
or
loope
mov
mull
or
lock
mov
mov
push
jle
test
sbb
lahf
scas
pop
scas
out
pop
add
roll
aad
jnp
and
addr16
fdivrs
ds
pop
jne
imul
fstpt
sub
lods
lods
cmp
inc
dec
jl
xor
ret
mov
jle
jnp,pn
xchg
popa
fstpt
leave
imul
pop
cmp
lock
push
das
sti
add
inc
sub
ja
lret
inc
fstps
shrb
ljmp
push
fcoml
stos
movsb
mov
inc
lcall
or
adc
int3
sbb
cli
lcall
loop
pusha
inc
loopne
dec
imul
fistpll
inc
pushf
in
leave
daa
dec
mov
xchg
loop
pushl
scas
pslld
jge
movsl
pop
mov
jl
sbb
jbe
fcmovu
jne
cmpsb
xchg
ss
and
ret
std
mov
imulb
sbb
mov
cltd
and
xchg
gs
xchg
push
adc
and
and
inc
or
arpl
mov
mov
dec
inc
int3
loope
sub
adc
and
mov
pop
movsb
pop
loopne
push
repz
xor
push
cwtl
aas
xchg
inc
xchg
pminsw
cmpsb
nop
cmp
add
mov
je
scas
ret
std
scas
jge
insb
sbb
jns
and
out
in
outsb
dec
dec
fidivrl
das
loope
es
sub
aam
mov
pop
pop
js
dec
fs
shr
push
cwtl
xor
mov
adc
add
imul
and
outsl
call
add
mov
push
xchg
insb
jecxz
out
push
pusha
sahf
std
cld
mov
in
lds
jl
inc
push
daa
loopne
or
subl
sbb
mov
icebp
xchg
mov
adc
cmp
xor
leave
repnz
popf
push
lods
push
arpl
decl
jae
insb
es
mov
hlt
insl
jmp
shrl
les
xchg
cmp
mov
and
std
cmp
push
movl
push
aad
xor
ljmp
push
xor
movsl
lcall
and
mov
xchg
jl
pop
icebp
imul
mov
mov
in
jno
test
and
pop
aas
push
pop
xor
adc
fsubl
and
dec
jge
cmp
loopne
pushf
movsl
xorb
fidivrl
mov
fsts
test
mov
cmpsb
inc
je
idivb
out
mov
mov
sub
mov
test
lret
addl
rolb
scas
lahf
add
mov
das
gs
xchg
hlt
pop
mov
pop
mov
mov
xchg
fwait
mov
sub
movsl
jmp
pop
or
jecxz
ret
test
in
xchg
sbb
fstpt
scas
arpl
loop
pop
cmp
dec
sbb
fs
mov
pop
xchg
lds
insb
mov
add
sbb
sahf
fdivl
xor
adc
rorl
xchg
insb
sbb
insb
pop
cmpsl
ds
jnp
pop
imul
pop
sub
cmp
fsubrp
mov
scas
fucomp
inc
aad
ss
fdiv
xchg
enter
push
jg
stos
jnp
push
adc
stos
add
cli
push
sbb
sti
adc
lods
xchg
cmp
and
les
jns
sub
inc
es
into
inc
call
aad
push
out
jle
jmp
repz
std
sbb
cmpsl
push
inc
mov
test
inc
mov
sbb
mov
movsl
sbb
add
repnz
mov
add
daa
cld
cmp
xor
mov
je
xchg
adc
dec
fcomi
mov
push
sbb
in
bound
dec
sbb
push
push
daa
cmp
fdivl
mov
adc
stc
iret
pop
imull
push
faddl
xchg
mov
stc
mov
clc
cmp
mov
cwtl
das
sbb
cmp
sbb
inc
pop
lret
pop
lods
lock
mov
sbb
cmp
mov
mov
lods
xorb
mov
out
enter
repz
inc
test
movsb
leave
andl
cmp
shl
sbbl
idiv
jno
out
test
sub
xchg
rclb
sti
int
push
xchg
lahf
call
or
divb
xchg
cmc
lret
cs
dec
aad
repz
stos
push
fwait
stos
popf
imulb
jle
ret
dec
int3
lock
add
sub
scas
movsl
repnz
add
sub
mov
pusha
fcompl
out
push
fwait
clc
jns
mov
jmp
mov
rolb
bound
xor
lcall
fistl
mov
ljmp
or
sub
xchg
lcall
arpl
mov
inc
lret
in
inc
js
sbb
sahf
xchg
roll
or
dec
and
mov
mov
push
push
dec
test
push
sbb
inc
pop
and
mov
mov
jg
fcoml
and
add
mov
fistpl
xchg
aaa
pop
lcall
stos
iret
fcmovnb
adc
sbb
repz
in
push
mov
imul
xor
push
pop
std
xchg
jl
or
or
imul
lcall
mov
lahf
repnz
pop
mov
fiaddl
mov
pop
and
lret
add
inc
jp
jl
insl
pop
cwtl
mov
stos
fucompp
mov
pop
or
push
mov
mov
cwtl
mov
sub
scas
adc
out
pushf
jle
movsl
sahf
sub
xor
insl
add
loope
jne
xchg
jle
popa
mov
ljmp
lock
mov
mov
push
cmpsb
adc
jno
mov
dec
add
xchg
cltd
xchg
xchg
push
ret
mov
aam
in
lahf
stos
fs
pop
xchg
xor
sbb
inc
xlat
aad
push
daa
pop
xchg
sub
sub
jne
ret
lret
dec
cmpsb
sub
in
loopne
inc
sub
cmpsb
mov
mov
add
xor
adc
inc
jae
stos
jns
jecxz
mov
and
call
shlb
in
mov
push
stos
lret
dec
mov
arpl
add
jmp
lock
aam
inc
and
js
aas
leave
icebp
pop
jb
mov
in
push
xor
es
ljmp
ljmp
inc
inc
sub
xchg
dec
sar
dec
ja
test
clc
or
out
cmc
sbb
dec
into
mov
and
xchg
fucomp
das
fucomi
or
aaa
int3
mov
or
mov
mov
outsl
js
pop
sub
lock
daa
push
push
pcmpeqd
dec
mov
lods
adc
push
adc
test
xor
scas
cmc
fcmovb
mov
das
inc
adc
xchg
ss
sub
test
cmpl
mov
js
je
jne
daa
clc
cli
jmp
adc
gs
int
jle
loopne
mov
cwtl
or
xchg
lahf
aas
ljmp
in
not
stos
fdivl
add
jmp
cmpb
pop
add
loope
sbb
out
pop
sbb
js
icebp
push
sbb
out
pop
push
int3
rorl
sub
popf
test
xchg
xor
sub
mov
and
aad
fistpll
jp
cmp
adc
je
enter
sbb
dec
sahf
push
sbb
mov
and
pop
dec
xchg
daa
cmp
enter
movsb
mov
test
outsb
jl
mov
fsubrs
aas
or
outsl
jbe
lds
sub
loop
std
mov
call
scas
xor
and
popa
test
push
and
lods
push
or
not
in
mov
jns
jp
cmc
loop
mov
jmp
mov
pop
pop
jbe
push
cmp
xchg
sahf
adc
cmp
and
mov
add
xor
push
lcall
dec
push
pop
in
fists
cmpsl
add
jle
dec
lds
fistpll
jg
test
push
pusha
not
jb
sub
pusha
daa
pop
xor
cltd
adc
jb
cmp
call
sbb
and
loope
add
dec
add
xor
ret
add
lea
sbb
inc
inc
rorb
mov
fwait
and
fdivr
stos
dec
lods
insl
lret
js
fiadds
sub
addr16
cmp
test
xor
adc
mov
fsts
stc
and
std
xchg
sub
cmp
push
sbbl
mov
xchg
cmp
push
push
leave
fdivl
scas
data16
addr16
iret
loop
scas
sub
out
cmpsl
test
cmpsl
idiv
shll
jmp
pop
cmp
fidivs
movsb
add
insb
mov
repnz
mov
rclb
aam
fwait
mov
ret
std
adc
and
in
fmuls
jge
dec
xchg
out
adc
movb
fbstp
div
add
out
and
jns
mov
mov
lret
adc
pop
in
cwtl
push
hlt
inc
sbb
and
sub
sub
and
rcll
xor
push
xchg
mov
dec
mov
inc
mov
outsb
cmp
out
cmp
in
xchg
aad
lahf
sub
mov
xor
sub
or
scas
inc
sub
adc
mov
or
jo
dec
lahf
pop
insl
adc
addr16
movb
jnp
xchg
adc
ljmp
fwait
stc
cmp
fidivs
and
dec
mov
mov
ss
jb
xchg
mov
xor
jmp
xor
shrl
pop
lods
jae
jns
es
outsl
and
enter
sub
cltd
outsl
cmp
inc
loope
dec
mov
dec
sbb
je
hlt
jle
push
adc
xchg
psubsb
inc
xor
mov
adc
aas
or
sbb
js
inc
adc
jns
cmp
icebp
stos
push
mov
shr
push
push
fildl
cltd
xor
xor
aas
sub
fists
cmp
in
xor
scas
mov
pushf
adcl
or
lret
push
mov
dec
shr
or
in
push
sub
or
push
std
in
mov
and
xchg
lock
pop
out
dec
and
loopne
test
sub
pop
mov
xchg
mov
popa
repz
xchg
inc
out
in
inc
mov
loop
mov
sbb
xchg
and
pop
rorl
aam
lods
cmp
inc
adc
outsl
lea
push
xchg
imul
xor
in
or
adc
andb
in
push
pop
mov
mov
clc
out
insb
xchg
rolb
or
ret
clc
pop
inc
sub
jae
mov
arpl
push
fistpll
mov
jns
pop
or
cmpsb
dec
push
jl
popa
sbb
push
aas
inc
insb
push
push
pusha
push
aaa
rclb
enter
xchg
sub
dec
jae
pop
jle
jno
or
adc
cmp
es
jnp
push
pop
or
push
fnstcw
fcomps
mov
lret
insb
adc
in
enter
leave
dec
mov
in
dec
lea
outsb
lret
repz
xor
mov
nop
sub
mov
lods
mov
mov
subw
repz
xchg
xchg
lods
arpl
pshufw
sbb
adc
movsl
outsl
sub
fsubr
call
lods
aaa
mov
imul
mov
in
lcall
sahf
push
cld
enter
mov
fldenv
out
jl
sub
popf
pop
xor
lret
mov
mov
loope
jmp
sub
pop
stos
aam
gs
popa
movsl
aam
add
cmp
sbb
ror
and
push
push
jp
insl
xchg
adc
mov
stos
jge
mov
shrb
inc
rolb
gs
test
dec
add
sbb
mov
das
xlat
cmpsb
mov
xlat
jmp
stos
rorl
mov
mov
subl
cmpsb
mov
mov
jg
std
testb
inc
add
adc
out
push
adc
and
popf
mov
movsb
xchg
or
ds
jne
scas
mov
and
aam
mov
out
rcrb
pop
mov
iret
in
int3
pop
cmp
or
pop
mov
js
lea
fiadds
pop
sbb
dec
add
dec
cmp
pop
std
mov
int3
sahf
int3
mov
pop
les
scas
xor
xchg
rclb
daa
xor
adc
jmp
adc
test
jnp
test
aaa
pushf
push
cmp
sub
xlat
cmp
sub
adc
insl
sbb
pop
pop
push
fdivrs
add
jb
mov
pop
adc
jg
mov
mov
mov
adc
inc
in
sbb
push
sbb
or
mov
movsl
cwtl
sbb
sub
call
fcoml
cmpsl
addr16
xchg
loope
test
ret
jns
popa
adc
out
fbstp
and
mov
aad
lods
pop
dec
fstps
dec
lds
icebp
or
jmp
dec
gs
adc
pop
cmc
jnp
push
es
fmull
inc
push
mov
or
push
shrl
out
add
dec
ret
dec
pop
xchg
jno
jae
adc
lods
dec
scas
popf
jo
pushf
dec
test
bound
and
lcall
outsb
mov
ret
pop
lret
nop
dec
bound
inc
inc
hlt
loopne
lcall
pop
sub
or
jle
popf
fsubl
bound
testb
cli
xor
mov
mov
sbb
imul
or
and
andb
js
xchg
aam
in
jnp
sub
cmp
adc
jb
adc
ror
cmp
test
sub
cmp
mov
mov
adc
push
mov
mov
jp
popa
xchg
mov
in
push
sbb
dec
ljmp
jle
xor
sbb
mov
cmp
bswap
or
flds
jne
fcomps
pop
xor
mov
insb
shlb
adc
pop
xchg
xchg
js
inc
xchg
loop
sbb
sub
pusha
sbb
ja
std
mov
aas
or
or
jp
push
add
mov
cmpsb
pop
jmp
cmp
hlt
out
jb
push
rorb
lods
and
mov
ret
and
loopne
int
jno
xorb
out
dec
add
or
pop
pop
je
push
push
inc
shr
shlb
xchg
gs
pushf
das
ljmp
cmc
cld
or
stos
dec
fistpl
pop
int3
or
lahf
push
sub
jbe
scas
insl
iret
pop
enter
aad
mov
xor
pop
aas
and
pop
lahf
xlat
cmp
mov
or
insl
push
mov
mov
sbbl
sub
dec
xor
aaa
inc
in
test
lea
dec
fs
mov
out
sub
mov
ja
sbb
inc
mov
jbe
fimuls
int3
xchg
rorb
xorl
les
into
and
fucomip
in
lcall
push
shl
sub
mov
or
and
adc
push
sahf
jb
roll
adc
fiadds
xchg
dec
add
enter
xor
pop
dec
icebp
js
movsl
jno
leave
cwtl
mov
arpl
pop
sbb
or
sub
push
addl
xchg
cmp
cmp
mov
or
dec
iret
push
sbb
inc
ja
dec
loope
xor
xor
imul
cmp
sub
push
xor
daa
sub
cmp
fistps
cmp
push
stos
sbb
in
and
fadds
cmp
jl
je
adc
std
sahf
add
xchg
and
loope
sbb
mov
push
lock
jb
shlb
inc
clc
aaa
js
pop
repnz
outsb
adc
adc
mov
movsb
into
push
xor
movsl
cli
aad
rcll
sbb
out
inc
inc
sbb
std
jge
jecxz
push
mov
sub
call
enter
sub
mov
inc
fsubrl
adc
pop
mov
mov
push
fcmovb
jl
mov
add
lds
ret
mov
adc
leave
push
sbb
out
or
inc
sbb
inc
loopne
repnz
push
sub
jae
jg
dec
negb
inc
adc
sbb
xor
or
jecxz
add
xchg
in
xlat
add
rorb
lea
cmp
ret
fwait
orb
pop
lods
lcall
or
jp
add
pop
notb
xorl
push
inc
xor
outsb
rorl
mov
push
adc
mov
icebp
mov
xor
mov
and
mov
ds
imull
pop
cmp
jmp
out
repz
xchg
mull
cmpsl
jge
xchg
or
push
addb
into
jmp
stos
jnp
and
sbb
pop
faddl
insb
inc
adc
mov
sub
jbe
xchg
std
sbb
imul
bound
push
mov
push
dec
and
arpl
popa
aam
dec
roll
push
push
rclb
add
lahf
pop
cmpsb
mov
mov
jp
stos
push
push
subl
outsl
scas
daa
and
sbb
std
sbb
mov
adc
je
inc
mov
lds
les
mov
insl
stos
outsb
out
xor
push
sub
adc
lods
movsl
jno
sub
adc
stc
mov
or
inc
stc
rorl
mov
jbe
les
ja
jne
mov
or
lret
mov
and
shll
inc
and
mov
jno
mov
pop
xchg
dec
insl
push
out
adc
lret
leave
test
mov
mov
lea
pmaxsw
pop
movsl
addr16
dec
pop
inc
jmp
push
arpl
push
test
shlb
inc
jmp
pop
xchg
push
xchg
xchg
push
xchg
test
ret
movsl
cmpsl
adc
push
fcmovb
and
test
imul
mov
cmpsb
jmp
mov
inc
stos
jecxz
fisttpl
sub
rcrb
imul
arpl
mov
push
adc
push
xchg
add
dec
cmp
loopne
cwtl
mov
mov
xchg
fidivl
cs
leave
outsl
jae
das
xor
cs
jmp
sub
test
aad
shrb
cmp
sbb
sbb
mov
call
adc
ret
xchg
mov
jecxz
xor
jg
push
cld
xchg
in
mov
inc
sbb
cltd
adc
push
repz
mulb
push
or
adc
and
fs
jns
call
inc
inc
jns
lock
push
pop
push
jnp
bound
cmpsb
jno
out
add
shrb
fstl
xchg
test
xchg
mov
stos
sahf
jns
cmpsl
test
or
jle
or
sarl
ss
push
repnz
jl
ss
and
fimuls
or
mov
mov
mov
mov
mov
loope
iret
fsubrs
xchg
xorl
push
hlt
jecxz
fcoml
mov
add
push
fs
cmp
mov
push
addb
inc
lret
mov
aad
sbb
mov
decl
cmp
dec
xor
adc
in
call
in
mov
movsb
pop
flds
xchg
jns
xchg
inc
les
fnstcw
jo
xor
stos
inc
lret
jb
push
lods
sbb
mov
ret
movsb
xor
or
gs
jns
pop
add
idivl
lock
pop
aas
push
lret
shll
xchg
icebp
movsl
jmp
xchg
pop
cmp
insl
fistpll
push
xor
paddsb
ja
in
cli
jecxz
sbb
ret
inc
inc
jnp
bound
pop
rclb
mov
sub
addb
dec
jns
pop
mov
icebp
pop
ss
daa
mov
lret
push
mov
push
pusha
or
add
jns
xchg
outsb
adc
push
mov
mov
aam
int3
test
jbe
jb
cwtl
fiadds
xor
sub
inc
imul
test
adc
fmulp
lahf
stc
xchg
adc
push
cltd
ficomps
insb
das
dec
push
test
lods
in
repnz
mov
jns
sti
mov
js
and
jle
mov
xchg
imul
adc
aad
sarb
pop
iret
or
mov
scas
pop
push
outsb
and
ds
mov
push
cltd
in
ljmp
scas
cmp
enter
popf
sbb
cmp
mov
lcall
pop
sarl
mov
je
movsb
enter
mov
mov
lods
fst
push
popa
adc
mov
arpl
mov
or
aas
cmp
repz
in
xchg
insb
cmp
adc
pop
cmc
pop
mov
fistps
adc
push
adc
cli
pop
mov
mov
jge
aaa
adc
or
cltd
dec
mov
inc
enter
insb
dec
and
pop
jmp
dec
mov
inc
or
mov
ss
xor
stc
dec
cmp
movsb
loop
mull
into
les
nop
ja
xlat
stos
loope
push
mov
popf
les
add
fs
mov
notb
lods
dec
rol
dec
sbb
jle
lock
or
cmpsb
imul
cmpsb
mul
out
fidivrl
cmc
or
dec
sbb
cmp
fstpt
cpuid
mov
inc
inc
mov
or
cs
sti
test
pop
inc
out
js
cmpb
out
test
fstl
fnstcw
xor
mov
es
decb
insb
clc
outsb
pop
sbb
icebp
test
push
and
jecxz
das
in
adc
push
orl
mov
push
test
mov
int3
cmp
adc
sub
add
jae
push
jns
pop
clc
ficoms
bnd
push
xor
xor
xchg
test
adc
add
jp
leave
icebp
mov
and
rorb
or
adc
or
jno
mov
imul
lods
cmp
test
xlat
ja
sub
jno
lret
stos
push
ja
and
cmp
mov
sahf
xorl
mov
mov
inc
fld
mov
xchg
dec
ficoml
pop
mov
push
daa
ret
cltd
jns
inc
adc
pusha
mov
pop
enter
aam
shrb
or
aaa
push
pop
xlat
out
test
lds
adc
jp
mov
jbe
add
nop
in
fbld
loopne
mov
sbb
ss
adcb
inc
xchg
mov
lods
xor
cmp
lahf
xchg
sarb
pop
cltd
inc
dec
fsubrs
push
inc
cmp
pop
pop
imul
pop
div
filds
jae
call
and
xchg
pop
sub
mov
hlt
and
daa
jecxz
ret
lcall
leave
stos
add
inc
inc
test
inc
scas
pop
imul
xchg
xor
pop
cmp
aas
fs
mov
hlt
ret
mov
pop
mov
pop
dec
scas
mov
adc
std
or
fstl
rcl
stos
stos
sbb
xchg
fcoms
push
test
mov
sbbl
or
test
fwait
shll
xchg
shll
in
sub
mov
test
push
std
mov
sarb
out
inc
shlb
or
aaa
or
aaa
popa
and
sub
mov
push
xchg
rolb
aaa
xchg
ds
pop
aaa
movsl
mov
les
cmp
lds
xchg
es
loop
inc
sti
pop
xor
sbb
inc
stos
mov
outsb
add
fildl
push
lahf
cwtl
bound
mov
or
fwait
dec
sub
sti
sub
and
int
mov
loope
xchg
sbb
cli
imul
cwtl
call
sub
adc
imul
and
or
or
imul
mov
mov
and
stc
push
cli
lds
daa
xchg
push
ret
jge
mov
xchg
or
sbb
into
inc
push
cmp
mov
mov
cmp
mov
jle
cmp
add
daa
repnz
cmp
mov
lods
adc
test
cmc
jnp
in
adc
in
repz
lods
sbb
add
adc
jecxz
cmp
sub
sbb
inc
mul
push
xchg
push
shlb
adc
mov
lcall
lahf
xchg
inc
dec
imul
add
mov
jge
scas
aaa
mov
add
js
inc
dec
ret
jmp
pop
inc
shll
push
inc
clc
jecxz
add
movsl
nop
push
std
mov
push
fsts
int
xchg
ficompl
or
ss
push
mov
enter
xor
in
nop
nop
cmpsb
insl
imul
leave
ret
jae
jmp
out
xchg
mov
lret
outsb
shrb
jb
jmp
jg
xor
mov
addr16
dec
fsubrp
daa
out
mov
sbb
dec
addr16
out
mov
je
adc
sub
lods
movl
mov
loope
shr
inc
dec
scas
or
into
mov
xor
fucom
mov
popa
pop
mov
add
xor
dec
adc
fsubr
mov
or
xor
rol
cli
sub
mov
idiv
sub
outsl
aam
cwtd
enter
push
jo
cmc
jp
mov
pop
lods
push
scas
push
mov
popf
inc
movl
inc
sub
xor
push
inc
jns
add
stos
sub
adc
lret
push
ret
std
or
cltd
or
sbb
xchg
fnstcw
mov
repz
mov
popa
push
cmp
cmp
xor
ret
pop
loop
and
mul
lds
lcall
cwtl
popf
lock
insb
sbb
inc
pop
out
sbb
test
jg
mov
inc
xor
inc
out
pop
mov
ja
cmpsl
cli
hlt
femms
xlat
xor
pop
imul
jle
shrb
negb
jecxz
mov
jl
pushf
push
xchg
or
xchg
push
pop
sahf
lods
data16
dec
loop
cmp
std
push
lds
pop
movsl
aad
lret
int
mov
inc
int
sbb
in
insb
hlt
push
dec
es
pop
loop
xor
pusha
sbb
push
push
orb
sti
push
inc
mov
or
push
enter
xchg
xor
hlt
or
sarb
ret
jo
or
adc
and
bound
xchg
pushf
xchg
lea
lcall
adc
xchg
js
std
sub
inc
aaa
and
insl
mov
test
inc
mov
mov
into
test
inc
xlat
add
mov
adc
mov
shll
push
lahf
mov
lea
bound
lea
push
mov
out
mov
sarl
add
adc
push
loopne
std
or
in
mov
jle
cmp
in
push
test
sarl
sub
dec
xchg
ds
cs
int3
and
cltd
and
pop
add
mov
mov
je
dec
inc
mov
loopne
call
pop
and
and
hlt
out
jle
jl
adc
mov
xchg
int3
movsb
pop
mov
mov
cltd
sub
rep
inc
xchg
mov
arpl
add
mov
push
push
inc
rcrl
and
ret
adc
mov
jp
lea
aam
pop
insl
iret
pop
jge
in
stc
cmovo
insl
repz
and
mulb
stc
stos
fistpl
sbb
lods
in
cmp
stc
call
scas
movsb
jle
sub
push
and
sbb
and
dec
inc
cmpsb
push
fucom
iret
push
shl
pop
xor
sti
adc
clc
xor
cmp
icebp
add
lods
cmpsl
xchg
popa
movsl
add
sbb
dec
sahf
ja
flds
xor
insl
mov
das
pushf
xchg
insl
cmp
lds
add
push
les
jbe
pushf
icebp
dec
xchg
sub
lock
sub
jge
sbb
xlat
or
cmpsl
jmp
enter
stos
cmc
lret
out
pop
fwait
mov
aam
lahf
cs
icebp
and
cmpsl
incl
xrelease
pop
lea
ret
shlb
cs
and
push
dec
jge
push
ret
ljmp
insl
mov
addr16
push
pushf
jg
mov
test
xchg
push
daa
test
out
dec
in
cmpb
mov
fldenv
jae
lods
popa
lret
jb
add
dec
loope
dec
into
testb
mov
xlat
mov
or
cld
xor
fyl2x
or
loope
test
mov
jne
lcall
ret
subb
ret
mov
push
mov
sub
mov
mov
dec
stos
test
pop
sbb
in
cwtl
jge
hlt
les
xchg
adc
inc
nop
cld
leave
mov
push
or
in
fwait
mov
push
jl
sbb
std
pop
stos
xlat
jmp
adc
or
idivb
fwait
cwtl
mov
aam
psllw
fimuls
cmp
jecxz
mov
cmpsl
ss
pop
mov
mov
imul
imul
sar
lret
mov
mov
fdivs
fnstcw
repnz
pop
xabort
or
mov
int3
push
pop
leave
addr16
iret
mov
daa
mov
jbe
cmp
cmpl
jmp
jl
inc
mov
add
jge
imul
lahf
call
pop
jns
adc
cmpsb
add
das
fistpll
pop
mov
dec
stc
or
lahf
ret
movsb
int3
add
lret
or
mov
sub
ss
popf
adc
repz
loop
leave
mov
repz
test
cmp
sbb
scas
sbb
les
cmp
adc
add
fnstsw
xchg
mov
lods
cvtps2pd
add
fidivs
push
and
mov
dec
pcmpeqb
pop
stc
cmp
and
jecxz
je
aad
cmp
icebp
add
scas
ficoms
sbb
xchg
or
and
cmpsb
mov
push
fmuls
xchg
test
mov
dec
mov
mov
in
sub
add
mov
xlat
pop
pop
add
out
push
and
jbe
cmp
addr16
xchg
sbb
adc
scas
cmp
nop
dec
test
mov
inc
insb
jb
mov
insb
testl
rol
ret
fwait
push
fstl
cld
outsl
inc
or
lret
stos
repnz
outsl
push
jle
in
push
bound
sbb
or
jb
in
adc
mov
push
pop
and
cmp
lahf
and
add
sahf
out
jb
push
fsubs
pop
and
push
xchg
nop
jo
adc
testb
push
sbb
sub
shrb
dec
arpl
cmp
mov
rorb
inc
add
rorb
mov
movb
or
push
cltd
stc
cli
jbe
cmp
je
je
xor
or
mov
repz
jg
ljmp
pop
insb
sbb
int
push
push
pusha
push
insl
fidivrl
xchg
pop
pop
or
adc
fs
xchg
ja
lahf
or
xchg
cmpxchg
xchg
lock
mov
push
sbb
test
dec
popa
mov
sbb
les
clc
and
fmull
xchg
fiaddl
jno
jp
arpl
cmp
out
mov
outsb
add
mov
xchg
fs
push
push
mov
faddl
shll
xchg
out
cli
pop
pop
je
sub
xrelease
xlat
lret
and
mov
xor
dec
in
xchg
movsb
pusha
fsubr
pop
sbb
faddl
insl
mov
jnp
out
jmp
rcr
mov
dec
xchg
frstor
xchg
mov
cli
out
in
xchg
xchg
pop
scas
les
sbb
in
stc
xor
rclb
push
scas
enter
out
jmp
pop
mov
sarb
adc
inc
pop
std
adc
in
sbb
pop
daa
add
rorb
fcmovu
lock
jns
xchg
adc
pushf
cmp
sbb
sbb
aam
xchg
mov
insb
push
flds
popa
std
sub
push
shll
push
push
icebp
xchg
or
jp,pt
mov
loope
mov
push
jne
addr16
je
and
xchg
js
lds
daa
loop
push
or
addr16
pop
add
jo
rolb
es
idivb
int3
mov
xchg
add
loope
fisttpl
popf
rorb
rclb
repnz
xchg
sub
fcoms
mov
cli
in
ja
pop
and
mov
shrl
stos
sahf
aam
pop
lods
pop
dec
pop
adc
inc
lods
inc
mov
push
mov
dec
rclb
popa
data16
jae
mov
add
push
sbbb
int3
pusha
xlat
or
mov
cmpsb
push
jge
loope
sub
adc
jle
jnp
and
cmp
in
adc
xor
mov
shll
pushf
mov
movsl
pop
dec
mov
push
mov
dec
cmpsl
cmpsl
cmp
adc
addr16
hlt
add
jle
je
inc
sbb
xor
push
mov
sahf
int
or
mov
out
mov
jecxz
xchg
cwtl
inc
daa
test
pusha
mov
sbbb
pop
out
popl
sub
clc
imul
neg
inc
mov
pusha
insl
loop
xchg
out
push
dec
cld
dec
and
sahf
shl
test
adc
gs
or
movsl
or
xor
cs
clc
xor
enter
aam
shll
std
clc
ret
arpl
xchg
fisttps
inc
or
ret
pusha
mov
fisubl
push
je
cmp
add
push
mov
mov
xchg
push
mov
iret
pop
add
aas
mov
xlat
fcompp
jecxz
insl
daa
test
aaa
jb
pop
stc
aas
mov
mov
or
cmp
aam
jp
mov
xor
loop
stos
into
or
adc
or
xchg
cli
jno
bound
insb
inc
out
jle
sbb
inc
mov
sahf
lea
btr
jg
loope
ffreep
lds
les
cmp
mov
xchg
pop
mov
mov
mov
xlat
mov
js
mov
lcall
addb
xchg
popa
dec
cmc
dec
jge
ret
and
sbb
mov
lret
mov
mov
sarl
imull
mov
mov
adcl
cmpsl
add
arpl
adc
adcb
push
pop
leave
scas
sti
pop
sbb
inc
push
stos
jb
push
std
dec
shll
push
out
mov
cld
jns
mov
out
push
mov
stos
sub
fsubr
fisttps
mov
push
pop
test
adcl
push
and
movq
xchg
inc
lret
xor
sahf
sbb
negb
push
mov
mov
fistpll
aas
test
mov
ljmp
rcl
ljmp
mov
fwait
pop
stos
and
ljmp
jmp
sub
mov
mov
cmpb
sbb
lahf
js
into
push
or
pop
popf
popf
jmp
push
pop
lcall
popa
cltd
fs
add
shll
or
scas
scas
stos
in
sub
in
cltd
stos
cmp
sbb
repnz
push
dec
sbb
dec
nop
out
or
mov
jo
insb
or
lahf
daa
xor
ds
pop
les
mov
lods
outsl
movsl
insb
jb
sti
mov
jmp
mov
lret
dec
xchg
iret
pop
cmp
dec
mull
int3
adcl
jle
xchg
xor
int
test
push
and
stc
lds
out
jl
push
mov
dec
not
scas
mov
sbb
and
notb
fistpl
sub
clc
adc
adc
xchg
es
outsl
sub
adc
aad
jmp
loopne
and
mov
sbb
jae
sbb
cmp
or
jmp
cmp
cli
incb
out
push
inc
sub
scas
xor
jmp
pop
adcl
mov
int3
movsl
adc
fistpl
sbb
clc
push
shlb
fiadds
shll
lock
jb
int3
mov
bound
jns
movb
adc
stos
cmp
pop
movsl
xor
packsswb
jne
stos
sub
lret
mov
and
std
pop
gs
je
arpl
cmpsl
imul
jg
shlb
daa
test
mov
push
clc
popf
sub
daa
mov
test
pusha
cmp
adc
adc
add
inc
mov
shr
mov
cmp
mov
shl
jb
call
adc
mov
xor
in
mov
popf
mov
addb
scas
cs
pop
call
mov
inc
push
sbb
push
sub
mov
jbe
dec
pop
rorl
mov
sbb
xor
in
lock
sub
fdivrs
out
add
lods
mov
xchg
clc
push
xor
push
call
push
pushl
dec
xor
out
mov
pushf
push
inc
cld
repnz
xchg
gs
movsb
sub
xchg
xor
ja
mov
or
sbb
pop
sub
or
adc
jbe
icebp
jl
nop
push
movsl
enter
cmp
dec
ja
pop
rcl
add
xor
aad
fcompl
mov
mov
lcall
test
pop
cmpsb
aas
setg
xchg
or
sahf
cmp
repz
int
xchg
sahf
pop
nopl
pop
shll
mov
dec
aad
aaa
orb
and
cmp
mov
cmp
push
push
sub
pop
pop
popf
push
jmp
lcall
movsl
sti
adc
repz
mov
sarb
cs
xchg
and
pop
inc
pop
loope
mov
popa
decl
loope
aaa
dec
gs
xchg
mov
enter
cli
push
mov
dec
mov
enter
dec
lret
or
loop
xor
mov
xchg
or
dec
lret
jecxz
jg
imul
jl
pop
lock
sub
scas
stos
mov
mov
daa
roll
xchg
jae
push
fnsave
imul
or
cmpsl
shlb
or
sub
aam
inc
cli
test
mov
fdivl
cmovg
jb
scas
cld
cmc
xor
loopne
bound
pop
add
and
stos
popa
sub
jg
movsb
ret
pop
imul
mov
daa
dec
pop
pop
push
lahf
adc
sbb
jg
lods
fadd
xchg
stc
loopne
mov
jl
pusha
pop
xchg
mov
scas
out
lahf
cwtl
aas
mov
lcall
push
adc
jge
lret
adc
push
xor
mov
pop
and
mov
cmc
sbb
xor
test
add
cmp
mov
xchg
fadds
add
leave
ljmp
cmp
repz
lock
mov
jno
mov
mov
dec
mov
jne
stos
jmp
ds
call
scas
mov
cs
adcb
lret
sbb
dec
add
ret
push
cwtl
sub
sbb
ljmp
gs
pop
xor
ret
outsb
pop
mov
out
xor
xor
adc
xchg
nop
std
push
aam
das
fistl
cli
push
push
js
jp
dec
dec
sub
roll
push
cmp
outsl
dec
jmp
inc
jmp
lret
dec
push
imull
push
jo
hlt
lock
dec
test
flds
lods
orl
iret
mov
sbb
loopne
dec
xor
adc
imull
or
adcl
imul
cld
mov
mov
and
push
decl
and
pop
icebp
cmp
out
aad
pop
cltd
bound
or
pop
repz
mov
jb
nop
jb
ljmp
into
lret
outsl
aaa
ja
sbb
cmp
icebp
mov
pop
adc
dec
out
cmp
aaa
cmpsb
inc
lds
lods
stos
or
cs
xchg
xchg
jecxz
mov
dec
mov
fcmovu
sub
call
sbb
sbb
fisttpl
fldl2e
daa
sgdtl
lret
lods
jnp
imul
mov
adc
or
xchg
cwtl
out
test
jg
push
rorb
xor
into
and
adc
jmp
xor
push
mov
in
fs
int3
pop
sbb
and
fiadds
mov
adc
cmpsl
jns
mov
pop
loopw
dec
lods
lods
outsb
fs
mov
cmp
add
mov
dec
add
sarl
rorl
push
mov
sub
mov
cli
pop
xchg
and
xchg
ret
dec
mov
loop
js
adc
cmp
adc
testl
mov
or
pusha
push
cmp
jp
pushf
xchg
sbb
stc
pusha
sbb
or
enter
push
mov
dec
gs
ds
jb
inc
mul
aad
xor
ret
iret
pop
lcall
pop
jmp
cmp
enter
fbld
push
jp
sub
imul
roll
test
movsb
enter
imul
sub
in
cmc
dec
jg
xchg
shll
mov
sbb
mov
pop
pop
mov
jle
cmp
cmpsb
inc
mov
xchg
rcrl
sbb
add
imul
push
jmp
add
fsubl
xor
pushf
dec
jno
push
in
fwait
cmpsb
dec
xchg
subl
add
shr
adc
dec
jl
jmp
mov
sbb
faddl
aas
je
rcrl
mov
mov
cli
cwtl
fmul
repz
pop
push
ret
imul
popf
lahf
push
add
es
sub
fildll
jno
inc
xchg
jbe
outsl
jecxz
xchg
lods
sbb
and
xchg
push
loope
push
nop
in
dec
shlb
cmpsb
mov
add
std
fidivs
inc
pop
imul
jmp
aad
in
pop
cmp
dec
lods
pop
rcr
dec
jle
mov
push
cmpl
dec
shll
or
mov
pop
adc
jno
sub
test
jp
roll
xchg
es
aam
xor
xor
jmp
push
pop
dec
rclb
insl
ljmp
cs
or
stos
jb,pt
cli
sbb
mov
int
mov
pextrw
addb
or
mov
inc
dec
sub
dec
mov
pop
xchg
mov
and
pop
adc
pop
out
ljmp
insl
cltd
pop
or
pop
das
dec
xor
mov
adc
dec
in
cld
pop
mov
inc
mov
inc
movsl
into
orl
adc
xlat
test
lock
adc
popa
cmp
outsl
jmp
mov
mov
mov
out
or
add
add
sbb
and
dec
test
push
xlat
incb
bound
xor
sahf
sar
push
mov
dec
mov
cmp
pusha
out
cmp
enter
dec
dec
and
cmp
aaa
and
lret
icebp
add
xchg
mov
es
cmp
aas
clc
repz
out
xchg
lock
cmpsl
cmp
ss
jmp
push
fsub
lcall
in
mov
dec
jle
leave
clc
fsubr
mov
jno
or
mov
cli
lret
sub
cmp
add
and
mov
pop
mull
pop
push
xchg
call
lcall
cwtl
mov
jp
adc
scas
into
cltd
into
dec
pop
jge
sahf
cmpsl
add
inc
jg
ss
sarl
jb
jmp
repz
mov
cli
out
stos
jnp
lret
ror
xor
and
outsl
in
jg
shrb
xor
les
mov
jns
mov
push
pop
pop
shll
add
and
cs
inc
push
clc
stos
in
push
mov
or
ja
dec
sub
outsl
pop
cltd
mov
xchg
testb
aas
subb
imul
mov
xchg
and
mov
repz
adc
jno
or
push
pop
jle
xor
je
fstps
or
sbb
daa
call
sub
sbb
xchg
outsb
jecxz
fsubl
cmpb
outsl
fimuls
hlt
outsl
xor
sub
pushf
outsb
repnz
jno
repz
sbb
pop
mov
and
xchg
dec
mov
repnz
xchg
call
fwait
push
cmp
or
dec
push
mov
sbb
mov
es
mov
dec
in
inc
lods
loopne
push
nop
fnsave
adc
add
dec
cmpsb
int3
cmp
or
xor
lea
xchg
mov
or
sub
sahf
adc
sub
pop
pop
fldl2e
mov
cwtl
cs
lret
cmp
lds
mov
out
cmp
xor
push
mov
shll
test
aaa
popf
sbb
in
int
cs
inc
and
loope
sbb
in
xor
outsl
push
scas
cmc
jecxz
mov
test
rcr
jg
xor
sbb
mov
jbe
mov
cmp
lcall
mov
jp
dec
insb
inc
xchg
stos
mov
xlat
adc
or
stc
jne
pop
sbb
js
cmp
shrl
int
xchg
lods
scas
mov
xchg
addr16
xchg
or
cmpsl
mov
insl
in
dec
pop
std
mov
pop
mov
mov
mov
lods
les
jnp
es
outsb
push
ljmp
dec
iret
movsl
jecxz
sbb
js
lahf
jnp
and
loop
jecxz
push
sbb
fiaddl
mov
pusha
into
mov
fiadds
dec
fstpl
jp
fwait
ret
inc
scas
stc
div
addb
xchg
xchg
fnstcw
cld
mov
dec
fsubrl
out
jmp
out
ret
dec
out
outsb
std
jp
scas
pop
sbb
lods
xor
out
lods
mov
stc
sbb
leave
pushf
lds
xchg
jbe
sarb
in
pop
notb
fisttpl
add
adc
xor
nop
dec
inc
aam
jge
or
or
or
pop
xchg
lea
shr
iret
pop
xchg
and
mov
dec
sarl
jp
xor
into
xchg
lcall
xor
inc
mov
mov
loopne
mov
jbe
fstpl
adc
mov
lahf
sbb
pop
mov
cs
jns
arpl
mov
push
ret
mov
cmp
pop
xchg
nop
out
mov
pop
mov
clc
fwait
inc
ja
dec
in
and
repz
pop
popa
mov
pop
inc
shrl
jnp
leave
xchg
daa
pop
xor
cmp
out
push
sub
loope
pop
sbb
xorb
pop
mov
loopne
and
fdecstp
jge
dec
jmp
scas
call
shlb
ss
cli
sub
lds
leave
jge
pop
pusha
adc
aad
aas
pop
or
cmpsl
xor
dec
mov
xlat
clc
in
fsubrs
pop
cltd
cmp
lock
jae
jmp
jo
inc
in
inc
out
data16
xlat
dec
pushf
inc
insl
int
icebp
scas
insl
ret
mov
pop
inc
inc
jmp
das
and
fwait
adc
cmp
or
int
lods
sbb
sub
in
jp
cmpsb
pop
sub
mov
dec
cmpsl
xchg
jg
push
sbb
aam
fimuls
call
push
mov
lock
cli
xchg
jecxz
ja
es
mov
push
and
jbe
xorl
dec
mov
lcall
jl
aad
push
stos
mov
inc
hlt
fisubs
jno
push
in
mov
dec
and
or
repz
sub
test
movsl
ret
pop
in
xor
adc
mov
int
push
xchg
jecxz
test
mov
inc
mov
out
fdiv
xchg
push
js
andb
dec
lcall
mov
adc
inc
jne
cld
lods
or
jg
sarb
cmp
mov
stos
daa
imul
je
lock
jl
push
sub
cmp
xor
repz
push
loopne
imul
push
mov
xor
mov
int3
aam
push
fiadds
push
jle
sub
sbb
cmp
xor
inc
pop
inc
push
loope
into
dec
push
aam
and
cli
xchg
vmovlpd
pop
xchg
scas
dec
das
xchg
adc
jb
movsl
cltd
ret
in
cld
sarb
push
cmpsb
mov
xor
cmp
adc
ds
cmc
cld
addr16
push
and
lret
lods
pop
subl
icebp
js
loopne
icebp
in
scas
loope
ret
mov
jp
xlat
jp
out
mov
js
popa
pusha
out
cmpb
and
mov
flds
mov
mov
adc
inc
inc
enter
mov
test
or
mov
movsb
jp
insl
into
out
jle
cmp
lods
mov
pop
pop
mov
or
inc
pop
pop
out
mov
frstor
adc
cmp
out
sub
and
inc
in
adc
jae
mov
pop
outsl
mov
lds
inc
insb
jge
addl
cmp
jg
mov
dec
leave
dec
loopne
add
insl
fdivr
xor
dec
adc
and
jmp
mov
cltd
or
out
fiadds
and
sub
sub
or
xor
xchg
orb
jmp
outsl
movsb
pusha
mov
mov
sub
push
cli
sti
mov
dec
jmpw
push
jb
push
mov
jle
cmp
pop
not
ljmp
push
andb
mov
add
lahf
daa
stos
test
push
xchg
inc
les
mov
cmp
pusha
lea
and
shll
jge
pop
push
fsub
jae
cltd
mov
sbb
or
rolb
test
and
or
jno
int
inc
lods
adc
adc
jbe
mov
jo
js
and
and
insl
scas
lret
inc
dec
xlat
add
cmp
loope
jns
repz
sub
lock
das
jns
push
loopne
xor
pushf
rorl
stos
sub
stos
jb
sti
imul
xor
mov
lcall
push
jle
rcrb
push
cmp
push
jecxz
pop
and
add
push
aad
sub
sbb
sar
je
adc
iret
aad
notl
push
xor
mov
mov
bound
xorl
rclb
mov
push
mov
enter
push
mov
jae
pop
xlat
xchg
mov
mov
push
popa
nop
movsb
test
add
jmp
xchg
xlat
jne
dec
jns
inc
shll
pop
mov
xor
out
daa
scas
adc
addb
pusha
pop
sub
inc
movsl
dec
adc
push
ds
les
cmpsb
scas
test
test
popf
pop
adc
push
je
mov
das
out
in
pushf
shll
lds
js
mov
push
dec
dec
std
imul
shrl
inc
inc
or
cmp
mov
movsl
out
pop
mov
or
sti
jmp
daa
cmpsb
or
idivl
les
out
jns
incl
xchg
inc
repnz
fidivrl
sub
sub
jecxz
sbb
pop
icebp
or
lds
pop
outsl
xchg
sbb
jecxz
add
push
les
loopne
pop
leave
pop
fcompl
mov
hlt
and
arpl
call
in
inc
pop
inc
ss
mov
sub
adc
sub
jmp
scas
adc
cld
test
pop
and
adc
fwait
pop
sbb
dec
sub
divb
lods
imul
mov
and
outsb
inc
jbe
dec
lock
stos
xchg
loop
dec
shrb
int3
test
push
inc
jb
dec
xchg
notb
cmpb
xchg
jl
or
sub
cmpsb
and
insb
leave
push
dec
or
cmp
or
jl
jne
cli
xor
bnd
xlat
mov
jo
popa
adc
cltd
pop
ljmp
enter
adc
cmpsl
stc
jg
insl
xchg
shll
outsb
cmp
mov
sbb
rcl
in
outsl
dec
fidivs
or
jae
mov
mov
fmuls
sub
sbb
mov
sbb
adc
sarl
cmp
xor
repnz
push
xor
loop
je
push
pop
adc
push
lret
pusha
mov
insl
push
or
out
dec
or
in
outsl
sub
mov
adc
cmp
push
jns
or
xchg
sub
sub
push
sub
sbb
xchg
lock
xchg
scas
aaa
mov
xchg
push
orb
pop
cwtl
lds
mov
push
and
pop
int
cmp
adc
sub
repnz
mov
jo
pop
sbb
or
dec
gs
inc
dec
xlat
imul
add
movsb
xchg
je
js
cmp
dec
int
fsub
fptan
addr16
mov
fnsave
mov
stos
xor
call
cmp
in
inc
cs
test
add
mov
in
sbb
inc
icebp
cmp
xchg
inc
fstps
pushl
mov
bound
sbb
cmp
lods
adc
mov
les
pop
pop
mov
fs
dec
ficoms
or
or
add
add
mov
into
ret
cmc
mov
cmp
xor
xchg
cmp
xor
pop
insb
orb
lret
aam
push
xor
or
adcl
dec
mov
push
lock
insl
dec
mov
aam
cmp
add
dec
jae
mov
mov
aam
shl
fnstsw
jecxz
scas
xchg
movsb
add
stc
jnp
xor
inc
jge
mov
dec
in
aam
dec
sub
cmp
mov
pop
inc
mov
pop
cwtl
clc
cmp
dec
xor
bound
mov
lods
sbb
es
clc
or
mov
sbb
jg
out
pop
xchg
aaa
mov
cli
dec
xor
mov
sbb
mov
xchg
sub
pop
or
and
sub
push
xchg
sub
sub
cmp
push
dec
gs
sbb
mov
cmp
pop
xor
xchg
cs
pop
fsubrl
ja
pop
and
adc
cmp
ret
scas
pusha
mov
stos
outsb
ret
jbe
fst
or
dec
sbb
add
idivl
call
mov
mov
push
xor
lea
out
sbb
out
mov
or
mov
sbb
lahf
mov
xchg
les
mov
arpl
cmp
in
out
xchg
add
lea
fisubs
ja
xor
clc
adc
cmp
mov
and
xchg
rolb
mov
popf
addr16
in
scas
cmc
ret
hlt
mov
mov
sarb
lret
loopne
lds
mov
push
ret
mov
xchg
mov
or
mov
mov
mov
xor
ficompl
mov
outsb
xchg
xchg
imul
push
cmp
int
outsl
xor
sub
xchg
inc
jge
addb
add
add
mov
add
in
movsb
mov
les
cwtl
das
cld
mov
mov
stc
fcomp
push
sub
inc
push
push
mov
jno
jecxz
aas
adc
loope
mov
cmc
mov
push
sbb
orl
pop
cmpsl
not
dec
cvtps2pd
push
lock
sub
inc
pop
js
dec
add
cmc
movsb
jle
sbb
cmp
xor
adc
pop
inc
loopne
adcl
inc
xchg
add
stos
fcomp
call
mov
xchg
rclb
dec
jge
in
stc
sub
ljmp
daa
mov
xchg
imul
pushf
fcomps
fcmovnu
mov
fisubrs
fdiv
dec
jp
xor
xchg
sarl
aad
sbb
gs
fwait
xor
and
jmp
xor
popf
cmpsb
or
fdivr
adc
je
lods
mov
cltd
adc
cld
push
mov
pop
mov
sti
rol
cmp
or
fs
dec
xchg
or
or
into
jmp
xchg
testl
push
sbb
in
cltd
pop
push
bound
es
or
dec
pop
outsl
leave
fsubr
mov
cmpsb
mov
loope
out
jno
stos
mov
sub
adc
jg
jmp
stos
jmp
in
sti
andl
decl
jp
test
aas
or
lcall
lahf
cmp
mov
push
push
in
decl
fadd
imulb
repz
out
mov
jg
shl
hlt
and
and
dec
jecxz
jo
cmpsb
xchg
inc
or
pop
nop
mov
cmpsl
sbb
insb
mov
movsl
mov
push
out
inc
cwtl
mov
mov
push
xor
inc
sub
pop
icebp
push
daa
pop
shrl
divb
out
and
jle
sbb
in
push
mov
xchg
imul
stos
fwait
pop
mov
sahf
daa
mov
inc
xchg
call
and
jmp
or
jp
xchg
aaa
push
mov
push
cmp
scas
jns
cmpsb
into
jle
fs
pushf
rorb
mov
pop
gs
and
cld
mov
sub
scas
addr16
jle
pop
xor
shll
push
jmp
repz
push
fmulp
sbb
into
inc
inc
ds
pop
mov
cs
aas
ds
inc
jl
jmp
call
mov
add
sub
dec
sbb
pop
or
adcl
aad
lret
pop
ljmp
cmp
loope
aaa
into
dec
mov
dec
test
insb
jg
mov
lea
push
stos
shll
fmuls
icebp
inc
out
cmpsl
cltd
sub
xchg
inc
adc
test
ss
pop
nop
mov
cmp
mov
cwtl
adc
cmp
sub
push
scas
push
gs
enter
mov
int3
pmaxub
mov
popa
test
test
in
lea
popf
fistpl
out
pusha
sub
cmc
push
xor
xlat
fbstp
lea
sub
or
fcmovnu
jle
arpl
cmp
jecxz
dec
jnp
insb
xor
shl
rorl
jns
loopne
mov
sub
cmp
repz
aad
xchg
fistl
bound
stos
inc
mov
pusha
mov
or
lea
xor
pop
arpl
loop
ja
cs
jle
xlat
ds
lret
jmp
call
dec
ror
repz
push
movsb
push
and
pop
pop
in
out
ss
std
push
push
pop
loop
pop
sub
adc
js
roll
jb
dec
iret
cmpb
sbb
add
or
mov
add
sarl
pop
adc
add
inc
fistl
mov
and
add
dec
fcmovne
jmp
ds
mov
sahf
push
imul
jbe
push
push
add
fcmovnbe
pop
xor
call
add
push
push
imul
mov
cmp
pop
cmp
into
cmp
add
xchg
call
mov
mov
and
iret
cmpb
adc
pop
jns
lret
and
push
nop
pop
les
sbb
xor
jnp
push
dec
jnp
jecxz
std
cmp
fldcw
dec
push
push
rorb
sub
pop
test
pop
xor
sti
adc
ficoms
push
out
les
mov
cmp
mov
in
push
cltd
xchg
lock
adc
out
sub
bound
add
mov
or
mov
stos
pop
inc
popa
mov
and
arpl
mov
mov
cmp
fcompl
pop
test
fisubs
mov
lret
inc
pop
iret
test
cs
das
mov
push
mov
adc
and
lea
rorl
sub
xchg
into
aam
jle
jne
xor
jp
cmpsb
clc
or
pusha
ficoml
pusha
lret
xor
mov
adc
xchg
call
pop
js
xchg
js
and
push
xor
xchg
imul
mov
sub
shrl
loop
fs
sti
fistpl
cmc
and
call
xor
les
inc
mov
ret
scas
adc
daa
sahf
sbb
enter
ja
or
xor
push
arpl
sbbb
sbb
inc
xchg
int
inc
cld
pop
popl
sub
inc
mov
roll
dec
lea
cltd
inc
rorb
scas
stc
adc
pop
ljmp
xchg
ss
iret
stos
push
mov
sbb
bound
mov
repz
mov
rcrl
sub
loopne
jg
lret
cmp
pop
pop
push
add
or
and
sbb
inc
pop
lahf
inc
mov
or
mov
icebp
movsl
and
sar
insl
icebp
cltd
dec
pusha
or
scas
fisubrl
lcall
stos
js
xchg
add
pop
stc
and
fs
cli
jnp
push
push
mov
fs
sbb
push
sub
cmp
xor
pop
and
sti
jle
sbbb
cmp
push
imul
mov
mov
fwait
xchg
leave
or
fsubrs
cs
or
pop
out
jae
outsl
mov
cld
jnp
mov
add
in
jb
lret
jnp
lcall
pop
mov
dec
lods
xor
je
xchg
or
rcrl
cs
xchg
or
push
jb
xor
xchg
cs
mov
push
mov
clc
or
movsl
dec
lods
and
je
imul
dec
mov
dec
mov
pop
mov
push
fs
xor
jns
lea
es
popa
jmp
test
add
int
or
imul
loopne
push
and
cmpsb
fildl
mov
and
add
xor
hlt
jno
setl
cmc
jmp
jge
push
push
or
adc
lahf
scas
stc
add
cmp
pop
inc
push
pop
jnp
mov
insl
sbb
mov
push
sbb
shl
aad
sbb
jo
ret
push
mov
or
sub
fdivl
pop
mov
out
add
roll
cmc
sbb
xchg
push
jl
or
and
popa
shr
fstps
orb
and
repnz
call
lret
rcl
dec
out
fisttpl
push
inc
test
adc
xor
push
lret
nop
dec
push
and
clc
cmpsb
ficomps
cmp
add
scas
mov
mov
pop
mov
scas
cmp
test
repnz
mov
dec
int
test
cmpsl
push
notb
sbb
or
mov
stos
cmpsb
cmpsb
rcrb
icebp
fildll
mov
xchg
xchg
mull
xor
fdivp
aam
push
mov
jmp
mov
arpl
adc
addr16
adc
lock
and
cli
roll
iret
loop
cmc
xchg
or
push
pop
adc
pushf
in
dec
mov
in
xor
lcall
in
mov
out
add
fimuls
out
cmp
je
aas
xor
sbb
adc
dec
push
icebp
fsubs
call
fmulp
pop
mov
out
or
orl
mulb
outsl
xchg
shll
es
mov
cmp
push
and
jmp
mov
das
or
subb
jmp
repz
cvttss2si
pop
adc
xchg
add
jb
sarb
mov
inc
sahf
sub
aas
mov
sub
adc
cs
jbe
xchg
sbb
mov
inc
adc
adc
stos
pop
xchg
repz
cs
int
push
fstl
data16
xlat
mov
jns
jecxz
xchg
pusha
repnz
divl
clc
cmc
repz
mov
and
in
inc
xor
jo
dec
sarl
jmp
or
fisubl
je
lods
test
frstor
mov
pop
xlat
out
mov
data16
mov
ds
jae
inc
pop
shll
xorl
scas
addr16
adc
push
fldcw
push
push
pusha
xchg
outsb
in
repnz
sbb
out
push
jns
int3
cmpb
lds
add
xchg
fisttpll
push
pop
sbb
mov
mov
mov
repz
mov
js
sub
push
lret
daa
add
jno
add
popa
mov
mov
into
cld
xor
xchg
shll
sahf
adc
dec
xor
ret
add
cli
push
pop
or
sbb
cmpsb
shrb
pop
insl
adc
mov
int3
adc
cld
push
pop
push
mov
mov
test
dec
xlat
fwait
xorb
mov
inc
sbbl
in
cmp
mov
incl
mov
or
nop
pop
movsl
mov
inc
out
mov
js
imull
mov
fbstp
clc
dec
xor
dec
fdivl
mov
in
or
or
test
mov
dec
pop
adc
xorl
pop
dec
inc
outsl
cltd
ljmp
cmp
sbb
sbb
mov
jle
lret
and
dec
mov
jno
mov
sub
cmp
daa
dec
mov
loopne
out
out
mov
pop
inc
mov
mull
jecxz
mov
sub
jns
stos
xor
int
and
pop
cs
test
lock
push
jae
out
pusha
push
sti
fucompp
push
jbe
jle
fnsave
test
lss
arpl
jno
cmpsb
jae
cmp
lahf
loopne
adc
std
and
out
std
pusha
dec
out
and
testl
mov
arpl
insb
xchg
bnd
sbb
or
movsl
fs
mov
outsb
repz
mov
popf
scas
fistpll
mov
dec
cmp
jae
pop
adc
pop
cmp
cmp
sahf
rcrb
pop
mov
cmc
push
nop
test
sbb
aas
xchg
xor
pop
inc
and
mov
int3
jbe
cld
subb
pop
test
cmp
push
or
incl
test
add
push
outsb
add
pop
xchg
jns
outsl
popf
lods
aam
sti
rcll
xor
add
orb
or
fistpll
lds
sub
fidivl
adcl
mov
jg
sti
jne
pop
repz
in
paddd
popf
leave
ljmp
cmp
out
inc
in
stos
lcall
faddp
pop
jb
mov
or
dec
stos
dec
pop
adcb
push
push
les
inc
mov
js
cmp
adc
push
jno,pt
push
push
aaa
or
xchg
jge
into
ficompl
mov
pop
subb
mov
out
mov
repnz
sbbb
sub
push
lret
mov
lcall
mov
clc
cli
jmp
xchg
data16
sbb
pop
pusha
in
mov
out
imul
mov
pop
mov
cltd
adc
xchg
js
fcmovnu
dec
push
lods
sti
or
push
pop
rolb
sbb
fildl
jae
pop
dec
xchg
push
in
mov
dec
arpl
icebp
cs
or
fisubrl
inc
dec
fiadds
lret
cwtl
andb
adc
leave
sub
sbb
arpl
adc
cld
test
dec
shll
mov
pop
test
hlt
shlb
mov
imul
idivl
rcll
mov
jb
negl
inc
lret
jg
xchg
in
push
mov
hlt
xchg
adc
cvtps2pd
inc
push
pop
xchg
push
xchg
cmp
loope
push
push
pop
cmp
stos
push
enter
mov
inc
lods
mov
pop
xchg
aam
pop
push
fldcw
into
js
mov
pop
bound
push
mov
call
lock
fdivrs
mov
in
pusha
adc
and
add
mov
sbb
push
jle
push
pop
dec
xor
aad
dec
rcrl
push
jge
gs
xchg
add
mov
movsb
dec
dec
push
cli
cmpb
or
add
push
call
jae
inc
mov
lcall
sbb
cmpsb
rclb
iret
jnp
dec
outsb
add
mov
inc
fsubs
pop
sbb
rcrl
or
rcl
inc
xchg
push
xchg
cmpsl
ret
or
cmc
sbb
les
sub
dec
add
inc
xchg
aad
test
sub
addr16
inc
jge
lahf
inc
pushf
pop
pop
outsb
dec
sbb
test
jo
nop
push
mov
insl
sub
iret
dec
lahf
mov
xchg
dec
ljmp
stos
ljmp
xchg
ljmp
addl
or
popa
sbb
in
and
mov
jns
push
dec
or
outsl
sub
xor
jecxz
adc
push
xchg
out
lret
xchg
mov
lods
stos
pop
iret
inc
sbb
or
mov
ss
push
ficoml
adc
jge
jo
cmp
out
cmp
enter
or
les
cmp
cmp
rcll
popa
jbe
xor
fsub
cmp
or
mov
into
jnp,pt
test
scas
cmp
jecxz
jb
rol
mov
jae
iret
out
inc
loop
movsb
sub
push
or
addb
popa
sbb
add
xor
jbe
negl
fnsave
lods
pop
test
xor
ret
sub
movsl
add
push
push
lahf
arpl
lods
push
fisubl
scas
mov
sahf
cmp
mov
inc
hlt
lock
add
add
gs
xor
call
and
dec
dec
dec
jne
and
lret
in
inc
mov
loope
sbb
or
cmpsl
mov
out
aad
add
in
push
push
testl
push
xchg
ljmp
inc
cs
iret
clc
js
push
cmp
test
push
loopne
fucomip
inc
ret
pop
pop
fwait
push
mov
mov
inc
test
cmpsb
out
sub
or
iret
or
fs
dec
pop
aad
mov
push
sub
setns
pop
mov
push
dec
iret
dec
add
aad
test
outsb
cli
mov
pop
xchg
add
mov
add
js
cld
mov
scas
xor
pop
movsl
sar
pushf
mov
mov
outsl
add
and
push
xchg
ficompl
mov
sahf
loope
mov
in
cmp
aaa
out
cmp
cwtl
inc
lret
lcall
or
mov
pop
mov
ljmp
mov
nop
xchg
aas
fnstenv
mov
orb
jns
cmp
xlat
inc
lret
into
pop
jg
mov
lods
pop
xchg
outsl
jne
dec
pusha
leave
pcmpeqw
xor
push
xor
insl
mov
adc
jne
xlat
outsb
enter
stos
lret
sub
mov
cld
lcall
int
repnz
jmp
lahf
push
xor
out
rcrl
mov
iret
sub
sbb
lcall
and
push
dec
sbb
pusha
and
js
stos
push
cmp
addr16
inc
xlat
xchg
jp
mov
or
negl
adc
xor
fsubs
adc
xor
ljmp
outsl
ljmp
bound
sbb
jns
mov
lods
pop
jg
sbb
inc
add
fmuls
push
orl
xor
mov
mov
frstor
mov
jl
in
inc
xchg
xchg
into
addl
hlt
daa
inc
jp
incb
movsb
or
and
adc
lcall
mov
mov
fwait
les
pop
lods
out
rorb
flds
cmp
cltd
lods
lgs
pop
mov
lahf
dec
hlt
rorl
sbb
es
xchg
inc
sub
test
xor
fbstp
add
dec
pop
adc
cmp
xor
movsl
in
outsb
inc
push
dec
int
pop
in
add
xchg
jo
mov
aas
push
pop
xchg
xor
pushf
test
sti
inc
adc
gs
sar
pop
sub
mov
mov
pop
cwtl
jle
out
popl
inc
bound
fidivs
jns
or
mov
fistpll
sub
gs
sub
pop
ss
iret
stc
mov
lods
cmpsl
test
stos
fldl2e
in
lahf
hlt
shrb
test
sub
add
cmp
shl
mov
je
outsb
jae
pusha
cmp
leave
pop
dec
fidivl
cmp
clc
sub
out
inc
out
fdivl
xor
pop
sti
jo
repnz
movsl
or
ja
inc
lcall
inc
lods
xchg
insb
pushl
pop
js
xchg
fildll
rclb
cmc
mov
lcall
sub
das
fildll
daa
orl
fsts
cmp
sbb
add
roll
test
inc
jp
push
fdivl
inc
repnz
pop
loop
dec
push
sbb
nop
xor
cmpl
decw
or
jle
test
andl
ds
lods
negb
cli
loop
stos
popf
subb
mov
pop
mov
imul
fsub
adc
rol
jp
cmp
push
lock
fwait
jmp
dec
mov
sbb
loope
and
mov
lods
xlat
mov
xor
mov
dec
mov
lds
out
sub
mov
jb
or
push
adc
xor
mov
xor
fldl
ficomps
mov
inc
or
push
pop
xchg
gs
ljmp
aas
lret
dec
fdivr
adc
ret
ds
dec
push
dec
rcrb
addl
aad
pop
aaa
push
xor
pusha
outsl
orl
pop
es
adc
mov
fildll
mov
shl
pop
ficompl
lret
push
repz
cli
pop
sahf
sahf
cs
lods
lock
push
fstp
test
enter
jp
mov
aam
pop
jmp
aam
pushf
nop/reserved
lods
xlat
test
enter
add
into
push
addr16
sbb
imul
cmpsl
fldcw
in
ljmp
mov
mov
push
mov
jecxz
in
in
pop
jnp
xchg
xor
js
mov
push
sub
jae
scas
cmp
fstpl
mov
jbe
add
je
add
push
pop
xchg
mov
cmp
cmpl
ret
mov
xchg
repnz
mov
xchg
or
dec
in
or
lea
cs
sbb
xor
dec
cmp
stc
sub
jbe
mov
sub
xchg
jg
xchg
push
mov
cmp
lret
repnz
jl
scas
shll
add
add
add
jp
lahf
sahf
pop
hlt
inc
inc
mov
inc
pop
dec
cmc
scas
nop
imul
sbb
and
aas
inc
mov
sbb
lds
mov
sbb
push
fiaddl
push
cmp
sbbb
adc
cmp
out
jp,pt
jns
cmp
pop
cmp
out
cmp
inc
lahf
push
or
es
mov
sbb
or
push
jae
or
adc
imul
ret
pop
imul
cld
sbb
or
sarb
pop
jae
adc
rorb
mov
inc
andl
adc
aam
movl
insl
shlb
fwait
inc
fiaddl
aam
pop
int3
jg
xchg
inc
test
push
icebp
imull
push
xchg
movsb
inc
lret
fistps
push
and
scas
dec
or
push
insl
mov
ljmp
ret
arpl
jl
movsl
popa
mov
fildl
adc
mov
mov
test
nop
adc
cltd
insl
lcall
and
jl
rcrb
adc
cli
push
aas
inc
pop
cmp
jno
mov
lods
out
pop
test
mov
or
dec
dec
outsl
sbb
sub
adc
xchg
das
lds
push
jmp
inc
pusha
clc
and
cltd
mov
mov
cmp
push
or
sub
and
xchg
mov
inc
jmp
lahf
and
sbb
and
sbb
cmc
jg
mov
movsb
xchg
aad
jecxz
mov
push
fimuls
hlt
and
add
pop
xchg
mov
aaa
or
sub
ret
daa
jae
push
or
lds
mov
inc
iret
sub
push
jge
mov
shrb
dec
dec
push
jb
push
pop
divb
mov
xchg
cltd
xor
sbb
push
push
mov
je
ljmp
jge
adc
pop
icebp
je
movsl
fcoms
inc
nop
sbbl
mov
and
mov
sar
sbb
dec
adc
pop
insb
and
insb
cmpsb
jp
cmpsl
call
daa
lea
or
nop
jle
das
out
clc
call
adcb
daa
stos
dec
and
ret
mov
or
push
mov
in
in
xchg
sub
clc
int3
mov
out
cltd
jge
in
sbb
cmp
ss
cmp
jno
add
xchg
push
cwtl
jnp
mov
cmp
out
push
test
mov
push
xor
mov
sbb
shlb
dec
int
lods
addr16
cmp
mov
bound
sub
jle
push
adc
and
xor
mov
mov
icebp
pop
subb
lods
mov
stos
mov
shrl
inc
xlat
fistpll
sub
mov
cmp
bound
mov
fistpll
pop
lods
icebp
andb
cld
or
aas
push
sbb
xchg
lods
pop
lods
mov
je
cwtl
add
popf
ss
mov
das
ret
jno
imul
stc
loopne
push
mov
lea
rcrb
inc
pop
sub
cmp
imul
sbb
sbb
jo
sbb
xchg
rcr
cmp
dec
mov
out
mov
clc
push
ljmp
test
mov
repz
and
arpl
gs
jb
loop
dec
push
and
bswap
or
aas
lcall
and
adc
mov
mov
sbb
int
data16
std
les
add
dec
cmpl
aad
mov
adc
xchg
xchg
and
pop
mov
xor
in
jo
ss
push
inc
cld
repnz
aas
lock
push
stc
adc
dec
xchg
mov
repz
cs
adc
push
cli
dec
pop
shlb
icebp
jno
mov
outsl
mov
xchg
shlb
loop
inc
ljmp
add
cmpsl
lock
cmc
cmpsb
push
inc
jo
add
ret
and
xor
and
test
rcrl
sarb
adc
xor
or
lret
test
jge
adc
pop
cmp
add
rcrl
gs
mov
das
xor
push
mov
push
inc
mov
push
xor
dec
ret
sub
inc
push
fisubrl
cmp
scas
pop
leave
or
out
repz
and
sbb
in
loopne
lods
xchg
xchg
pushf
lret
imul
sub
push
mov
and
sahf
sbb
fstpl
arpl
inc
push
pusha
adc
jle
mov
pop
jnp
adc
movsb
mov
inc
adcl
sbb
push
fwait
nop
cs
pop
pop
xchg
or
xor
test
xchg
xlat
dec
or
sub
mov
mov
pusha
mov
pop
aam
mov
cld
sbb
insl
mov
or
adc
in
rcr
popl
adc
sub
rcll
insb
iret
out
and
mov
imul
int3
xchg
pop
and
dec
imul
invd
sub
sti
cs
xchg
roll
stos
out
xchg
ret
popf
xchg
sbb
add
xchg
in
ret
xchg
mov
sub
cli
test
pop
int
fucomp
or
jns
lcall
mov
scas
mov
fists
ljmp
sub
outsl
out
inc
out
adc
push
or
imul
jo
or
or
imul
xchg
mov
stos
stos
ret
pop
int3
jns
or
lods
leave
les
xor
sbb
je
stos
mov
dec
push
lcall
out
jb
or
pop
sub
jecxz
cmp
cmpsl
jecxz
insl
dec
inc
stos
sbb
xlat
mov
std
daa
jae
stos
mov
xor
repz
push
dec
das
pop
xchg
movsl
add
mov
inc
loop
faddl
fbld
cwtl
int3
aad
int
iret
dec
imul
ds
outsb
mov
pop
out
repnz
xor
fwait
xor
lea
add
inc
mov
inc
lods
cli
xor
sub
dec
xchg
outsb
out
test
adc
add
movsl
daa
xor
jle,pt
pop
add
xchg
into
jns
iret
mov
xchg
insb
or
popf
sarb
mov
mov
imul
in
xor
xor
lods
mov
fisttpl
cltd
xlat
cmp
add
lds
mov
pop
sti
ja
incl
ror
push
mov
xor
aas
xor
stos
scas
pop
repnz
xchg
imul
mov
adcb
aad
jns
add
aam
jne
xor
jae
push
add
inc
aad
pop
mov
xor
cld
daa
adc
xchg
mov
xor
sbb
push
push
sbb
pusha
popa
out
mov
add
pop
sub
add
out
push
push
ret
push
push
push
cmp
loope
les
scas
lods
xchg
ror
imul
fistpl
ficoms
sbb
out
stos
pop
iret
leave
mov
outsl
lock
xchg
repnz
mov
xor
sbb
icebp
or
pop
inc
mov
je
or
das
jecxz
push
stc
pop
outsl
inc
dec
nop
fsub
push
test
rol
xchg
lret
inc
adc
cmp
popl
add
mov
jecxz
mov
sub
imul
mov
jo
ss
xchg
sbb
test
test
call
pop
repz
dec
clc
jle
pop
in
jnp
adc
hlt
mov
sub
outsb
fstpl
push
fcomi
add
mov
stos
pop
sub
mov
sub
test
inc
je
pop
add
mov
push
and
cmpsb
or
lcall
xor
mov
je
mov
adc
sbb
int3
add
jb
enter
xchg
mov
push
adc
shll
movsl
mov
adc
loop
addl
jb
adc
js
cmpsl
and
pop
dec
addr16
ss
cmp
mov
in
or
dec
adc
arpl
cltd
mov
xor
and
daa
or
daa
rorl
mov
int
mov
and
sub
mov
sbb
push
mov
push
pop
inc
test
sbb
outsl
ret
incb
lods
xor
or
pop
jb
mov
inc
jo
jge
and
mov
fisubl
add
adc
lcall
inc
lret
cli
cs
ja,pt
fcmovu
push
fs
outsb
push
fisubrl
notl
xchg
mov
js
mov
add
jp
mov
mov
mov
cltd
xchg
mov
sti
insb
jo
jle
mov
repz
jp
outsl
mov
mov
or
and
sub
mov
sbb
mov
adc
popf
inc
stos
mov
jae
ret
and
mov
cwtl
cmc
rcrb
jle
jl
mov
in
in
jecxz
mov
inc
push
fstps
lea
aam
std
mov
in
add
xchg
jno
aam
sub
cmp
jns
out
xchg
jns
out
fisubrs
sub
mov
mov
out
xchg
stc
mov
or
iret
pop
fsubrs
daa
cmp
pop
fs
insb
adc
xchg
fcmovu
mov
jne
xor
mov
mov
xchg
pop
mov
push
or
loopne
push
sti
divl
sahf
mov
pop
xlat
sub
xchg
pusha
mov
adc
fcmovnb
mov
int
rcl
fbld
push
mov
jns
fstl
outsb
nop
or
loop
sub
loop
arpl
add
in
fmul
pop
mov
lock
cmp
stc
cmp
mov
loope
jb
push
inc
cli
cmp
mov
or
imul
sbb
enter
xlat
cmp
das
int3
ret
cmp
idiv
scas
dec
push
and
push
inc
test
lea
jle
jae
dec
into
dec
pop
push
push
xlat
stos
bound
lcall
jnp
and
mov
and
into
mov
cmp
shlb
sbb
insl
mov
mov
int3
lret
inc
push
jnp
pop
mov
pop
shrb
es
pop
or
negb
movsl
mov
dec
lcall
enter
data16
push
mov
push
push
mull
cmp
int3
xor
out
iret
mov
xor
sub
push
mov
jns
dec
enter
pushf
je
test
pop
rorl
mov
int3
mov
or
out
sub
iret
jecxz
test
xor
in
xchg
repz
jne
and
movsl
dec
scas
imul
sbb
xchg
cld
sbb
shll
jmp
insb
out
bound
or
in
js
push
jns
xlat
nop
mov
inc
cmp
js
sbb
pop
xchg
into
adc
stos
jne
lock
adc
jmp
nop
inc
jae
orl
mov
stos
in
lcall
test
mov
rolb
sub
inc
sbb
rorl
mov
rcl
ret
hlt
pushf
stos
inc
cmp
stc
mov
jg
insb
dec
jnp
lret
fs
jecxz
dec
into
lret
cmp
inc
inc
cmp
push
lock
inc
nop
out
inc
das
xchg
jmp
cmp
jmp
add
lods
inc
adc
lret
ret
loopne
ja
pop
loope
dec
mov
jns
clc
test
push
gs
mov
push
imul
xor
sbb
pop
jp
jmp
insl
sub
sbb
test
sti
mov
sub
fxch
xor
in
xor
add
inc
pop
sbb
fldenv
cmp
mov
fisttpll
les
jns
or
adc
cmpsl
mov
pop
aaa
or
popf
fstpl
out
jns
dec
movsb
insb
out
sbb
test
fsubs
mov
inc
addr16
bound
xchg
test
push
inc
fwait
dec
xor
push
cmpsl
mov
mov
outsl
cmpsl
into
out
xchg
das
std
xorl
mov
out
cmp
in
in
orl
mov
or
add
daa
push
mov
insb
daa
rclb
mov
rclb
inc
and
setge
mov
int3
int
das
movsl
loopne
movsl
or
or
adc
cs
jmp
sbb
sbb
rcll
popa
jne
inc
pusha
xor
mov
das
ds
daa
dec
dec
iret
test
or
xor
fimuls
xor
scas
mov
pusha
push
sub
add
popa
faddl
sub
jl
repz
xchg
mov
loope
xor
mov
xchg
insb
sbbb
xchg
leave
sahf
adc
fisttpl
test
ficompl
mov
inc
out
into
mov
enter
cmc
jmp
sub
mov
ds
aad
jne
sbb
aad
popf
out
hlt
mov
das
test
jnp
scas
cmp
mov
pop
repnz
pop
scas
dec
leave
mov
bound
pop
cmp
mov
mov
cmp
pop
pop
mov
cltd
and
sbb
sub
loopne
or
js
mov
decb
popf
or
imul
aas
lods
fsts
cli
and
sub
lods
insl
xchg
xor
cmp
jb
cmpsb
in
pop
fadd
test
in
je
scas
jno
dec
shlb
cmp
jo
push
lcall
das
add
sti
push
int
outsl
hlt
add
pop
imul
mov
push
mov
das
mov
xor
js
sbb
sbb
dec
sub
dec
cmpsl
and
adc
jae
mov
testb
icebp
test
ljmp
aaa
leave
or
aam
sub
inc
sbb
push
jge
lea
xchg
int3
pop
outsb
into
nop
adc
clc
pushf
movsl
ret
dec
sbb
xchg
aaa
cmp
ret
ret
sbb
rclb
xchg
pushl
sub
or
dec
jnp
outsb
sbb
pop
dec
inc
enter
das
xbegin
mov
mov
cmpsl
xchg
mov
add
push
ror
popf
mov
fnstsw
mov
push
gs
je
jp
cmpsb
loop
cmp
xlat
testb
adc
notl
repz
popa
mov
fwait
fwait
mov
mov
pop
lods
and
in
scas
push
push
jl
sbb
data16
inc
jge
data16
xchg
mov
pop
fwait
xor
jecxz
std
ficoml
out
in
mov
cmp
fwait
and
repz
enter
hlt
test
mov
sbb
lea
subl
inc
daa
repnz
mov
stos
or
xchg
loope
cmp
dec
sbb
add
call
fidivrl
rep
mov
dec
cmpsb
sbb
sahf
mov
push
arpl
xor
or
into
dec
testl
cmp
and
mov
adc
in
lds
cwtl
mov
mov
out
arpl
cmpsl
inc
ss
and
jo
xor
xor
pusha
test
js
jge
cmp
adc
movsb
sub
rol
ret
push
jl,pt
gs
mov
fistpl
mov
jno
add
fmuls
xor
data16
sbb
arpl
inc
or
add
cld
nop
test
dec
mov
ja
inc
fbld
adc
ret
fdivrl
stos
dec
sbbl
add
sub
aam
ret
and
inc
inc
or
xchg
pop
fcomps
mov
cmpsl
enter
aam
sub
cmp
mov
adc
jg
adc
jne
daa
popa
sub
jbe
test
sbb
adc
lods
pop
daa
cld
sbb
push
mov
ds
es
sub
xchg
mov
shll
orl
daa
inc
lret
cmp
pop
vfmadd132sd
and
dec
lcall
push
inc
pop
sbb
push
lret
sarl
mov
inc
loop
in
lods
mov
push
inc
lcall
loop
inc
js
mov
and
mov
stos
cmp
dec
shll
or
or
out
outsb
adcl
repz
or
stc
std
mov
xchg
jns
jl
mov
inc
xor
lock
dec
mov
cltd
bound
mov
icebp
or
xchg
gs
outsb
in
mov
imul
insb
sbb
mov
add
inc
add
push
pop
inc
mov
fs
fadd
sbb
arpl
push
xchg
lock
sbb
loopne
xchg
push
fidivs
loope
das
mov
lahf
pop
in
pop
aas
adc
sbb
insb
push
and
shr
xchg
test
sub
es
rcrb
int3
mov
cmp
inc
jae
shrl
pop
xchg
aaa
outsl
movsb
mov
mov
ret
lret
adc
pop
push
lret
jae
fcmovne
mov
cmp
inc
push
mov
sti
fisttpl
or
mov
xchg
jge
insl
and
dec
sub
test
in
fmull
fstpt
adc
pop
adc
pop
add
and
je
pop
sbb
lcall
add
pop
enter
xchg
sbb
or
ljmp
pop
jbe
inc
inc
in
and
dec
jne
dec
lcall
lcall
push
arpl
ret
cmp
jns
fwait
push
scas
andb
je
jp
syscall
sbb
int
stos
aad
ret
pop
out
jnp
call
cmpsb
jno
xchg
cmc
sahf
and
xor
adc
lods
clc
lea
test
cs
outsl
fwait
xchg
in
mov
sbb
xor
sub
sbb
int3
dec
aam
ja
sar
js
mov
stos
call
insl
adc
jecxz
sub
mov
in
sub
test
scas
push
mov
adc
adc
push
outsl
xchg
leave
push
xor
fldln2
jge
imul
and
push
xchg
mov
or
ss
jns
mov
push
fcoml
push
ficompl
ja
out
lock
and
arpl
mov
sbb
xchg
mov
hlt
mov
add
ficoms
dec
rcll
pop
inc
jecxz
cmp
xchg
mov
sbb
lds
cmp
roll
shl
iret
imul
xor
call
dec
mov
sub
or
pop
and
sarb
inc
xlat
jne
push
inc
ss
stc
into
int
das
xchg
js
stos
cmp
arpl
mov
pop
xor
cwtl
dec
jmp
push
push
xor
sub
repnz
pop
mov
adc
repnz
into
enter
mov
push
loopne
cmp
push
inc
fucom
xchg
push
or
je
mov
je
fstpt
insb
inc
and
jmp
mov
dec
jle
rolb
daa
or
adc
imul
cmpsb
hlt
xorl
cmp
nop
jge
xor
jae
in
xchg
in
lods
cmp
ja
loop
and
ja
outsb
imul
daa
jecxz
ret
add
ss
call
out
push
inc
or
mov
cwtl
aas
lahf
cmp
scas
mov
xchg
inc
dec
scas
inc
pop
ror
dec
or
aas
mov
sbb
out
dec
and
test
pop
lock
mov
clc
and
and
inc
test
mov
rcll
push
mov
aaa
push
and
inc
pop
mov
shlb
or
int
pop
sub
sti
test
int
lcall
or
pop
lcall
jle
ss
cmpb
cmp
addr16
cmp
sub
add
push
mov
aam
adc
sti
cmp
push
adc
lcall
mov
orb
cs
movsb
sar
aam
pop
adc
loop
std
aaa
inc
or
mov
into
jge
rorl
aaa
mov
pop
sbb
push
add
xchg
ss
jp
pop
in
sbb
jmp
sub
cld
fwait
xchg
inc
lea
sbb
mov
jne
dec
mov
mov
lods
insb
cmc
mov
idivb
mov
inc
sbb
out
xor
dec
cld
fcmovnb
cld
lret
call
inc
cmc
loopne
and
push
daa
pushf
int3
or
shll
mov
clc
fdivs
pop
cwtl
push
leave
jb
std
sub
lods
sub
cmp
cmpsl
mov
lret
divl
jmp
mov
je
test
shrb
stos
inc
xchg
push
jbe
push
fsubrl
sbb
xchg
mov
sub
pop
ss
adc
cmp
sbb
adc
jae
pop
test
popf
lods
sub
mov
dec
push
pusha
cmp
or
or
jnp
jo
call
jmp
add
lea
popf
push
sahf
ficompl
or
sub
enter
jbe
fdivr
dec
pop
xchg
jno
push
iret
in
cld
loopne
mov
cmp
dec
pop
imul
mov
xor
adc
adc
lret
movsb
push
push
jno
ret
mov
rcll
inc
jns
xchg
jne
xorl
into
push
sub
pop
rorl
cwtl
sub
adc
adc
mov
fistl
jae
out
xchg
fists
add
iret
lahf
xchg
lret
movsl
sbb
mov
ss
add
lahf
xor
in
cmpsb
leave
sub
jg
cmp
cmc
dec
sub
mov
push
nop
sbb
pop
mov
and
inc
icebp
repz
or
mov
inc
test
aam
movsb
inc
cli
decl
aaa
push
cmpsb
pop
sbb
jbe
inc
sbb
mov
dec
shll
mov
insw
ror
push
cmp
shlb
test
inc
cld
cmpb
sub
testb
pop
hlt
rclb
jb
adc
movsl
mov
out
mov
sarb
pop
mull
outsl
stc
xchg
mov
mov
adc
ljmp
xor
repnz
push
push
mov
enter
and
or
xchg
out
loopne
or
dec
loopne
fldenv
std
sub
cmpb
jmp
stos
out
les
les
mov
pop
lret
add
hlt
movsl
push
push
mov
call
mov
cmp
in
xor
push
sub
inc
mov
imul
pop
or
mov
xor
stos
jle
mov
sbb
lcall
imul
pop
add
dec
fsubrl
loope
push
adc
sbb
nop
das
push
sub
mov
or
adc
cmp
repz
in
push
pop
and
lcall
mov
addb
testl
adcl
fs
fstpl
push
inc
sbb
test
fs
or
xchg
repnz
mov
xlat
lods
push
stc
insb
sub
inc
mov
sub
mov
xchg
inc
mov
sti
sub
dec
loopne
scas
filds
mov
sahf
fcom
into
push
or
mov
dec
push
inc
inc
xchg
sub
rcll
movsb
mov
loopne
rorl
scas
enter
sub
mov
mov
test
into
stc
out
sub
out
jne
or
cmp
sub
pop
pop
imul
fwait
sub
pop
in
popa
xchg
loop
cmp
dec
pop
js
mov
push
mov
xchg
xor
movsl
lods
cwtl
in
lods
dec
arpl
and
jbe
int3
pushf
scas
mov
ficoms
dec
sbb
mov
mov
stos
dec
aam
loope
jecxz
push
jns
in
and
das
pusha
sbb
in
xchg
lds
movsl
push
and
push
adcl
jbe
pop
test
adc
jg
mov
dec
jmp
pop
rcll
inc
dec
dec
std
fldl
mov
cmc
push
push
xor
inc
and
loopne
mov
pushf
mov
cmp
ficomps
push
jns
inc
or
adc
jmp
aad
add
cmp
fsub
or
sahf
pop
cld
cmc
pop
xchg
sub
sub
mov
jp
nop
adcl
inc
dec
push
fdivrl
push
jmp
mov
fisttpll
sbb
sub
es
cmp
mov
push
loop
xchg
in
lods
stc
pop
stos
lret
mov
push
dec
mov
pop
push
pop
and
dec
fs
sub
int3
shrb
push
jo
push
fcoms
cmp
roll
cmp
mov
jecxz
adc
mov
mov
std
and
dec
xchg
fisttps
add
ja
mov
jge
cmpl
fstpl
jnp
mov
pop
mov
sbbb
addr16
icebp
mov
mov
push
jne
pop
xchg
pusha
lcall
xchg
mov
enter
lret
nop
imull
es
inc
cmp
cld
pushl
sub
xor
ret
push
mov
jne
mov
out
sbb
sbb
pusha
pop
das
pop
mov
fmull
inc
out
sub
fistpll
ja
cmpl
in
filds
loope
xchg
cmp
repnz
push
adc
xchg
and
jns
and
movsb
arpl
hlt
mov
cmp
es
iret
cli
push
stos
in
sub
in
jno
clc
jo
xchg
test
fcomp
xlat
xor
or
inc
lret
inc
std
pop
pop
dec
cmpsb
jl
bound
ja
and
dec
push
frstor
xor
fabs
stos
dec
loope
es
sbbl
rcll
jnp
jmp
jb
add
out
xor
mov
adc
xlat
cmp
ret
jbe
test
cmp
btr
daa
pop
sub
mov
lds
dec
or
leave
mov
out
repz
sub
jmp
scas
orl
test
test
xor
jecxz
adc
jbe
sub
xor
sbbl
pop
ret
mov
sbb
in
inc
pop
jo
mov
xor
cmpsb
pop
lcall
dec
nop
dec
jge
dec
pop
das
adc
sbb
roll
mov
or
cmp
sbb
mov
jmp
cmp
sbb
sbb
add
jb
int3
lret
aaa
jle
mov
xchg
mov
sub
or
scas
add
and
pop
mov
mov
push
lahf
mov
pop
enter
xor
loop
lea
push
push
test
mov
push
clc
lcall
xlat
out
mov
mov
roll
xor
mov
sbbb
jg
cltd
jp
and
es
nop
shll
daa
pop
jge
stos
shrb
loop
in
adc
mov
mov
cld
and
jl
repz
movsl
pop
sbb
scas
daa
sub
scas
or
scas
push
test
pusha
mov
mov
mov
sub
iret
mov
push
adcl
int3
call
mov
jo
out
outsl
sub
loopne
out
adc
or
data16
faddp
push
sarb
add
cltd
fs
sarl
ret
jb
test
add
pop
shll
and
pop
dec
xchg
cmp
push
std
xor
clc
dec
lods
into
xchg
cltd
sbb
aaa
pop
mov
stos
aad
loopne
addr16
jl
scas
int3
push
out
lret
movsb
cmp
sarb
jecxz
in
popf
inc
or
aam
cmp
mov
jle
shlb
out
cwtl
lret
outsl
test
mov
mov
sub
xlat
mov
daa
mov
imul
pop
lock
cmpsl
mov
lods
sub
stc
incl
jbe
mov
lods
adc
aam
call
jne
jl
pop
inc
in
iret
jl
aas
inc
loop
add
sub
movsl
ja
mov
cmp
loop
push
cli
push
movsb
sub
adc
into
xlat
dec
sub
cmp
scas
xchg
je
lods
shlb
cmp
jmp
rcr
pop
or
mov
fsubrs
int
cmp
add
cmp
push
jp
jno
dec
into
iret
aam
ss
or
and
and
ja
mov
cmp
mov
or
stc
pop
jl
pop
stos
or
in
add
and
xchg
cs
pop
in
pop
inc
add
mov
test
arpl
sbb
daa
nop
enter
add
je
adc
loope
xor
lock
imul
cmp
push
inc
xchg
pop
movsl
sbb
xor
add
int
movsb
xor
mov
aad
rorb
lcall
pop
mov
sbb
add
inc
push
es
inc
insl
out
jb
sar
add
std
mov
xchg
xchg
or
cmp
in
sahf
scas
push
dec
dec
sub
or
aaa
push
icebp
sti
fnstcw
rcl
and
cmpsb
inc
mov
mov
jp
and
cwtl
clc
mov
add
shll
and
les
arpl
pop
aam
sub
lahf
andb
icebp
xor
xor
xchg
stos
out
cs
rolb
scas
sub
paddb
ret
xchg
pop
enter
mov
js
in
dec
dec
cs
scas
mov
jle
push
shr
inc
rcrl
shlb
pop
jp
fmuls
adc
movsl
popf
ljmp
push
jns
lahf
cmc
pop
or
cmc
fdivs
pop
lds
sar
xor
test
and
xor
in
mov
out
sbb
stc
orb
inc
std
out
adc
icebp
mov
daa
mov
mov
test
out
sahf
pop
push
sub
test
push
sbb
mov
mov
iret
jbe
orl
xchg
mov
sub
aad
lcall
shll
popf
scas
xchg
jne
or
xor
hlt
sbb
aas
push
test
xchg
rcll
rol
hlt
xchg
mov
cltd
xchg
stos
inc
lret
mov
pop
or
mov
ljmp
lods
in
rorl
adc
lret
push
dec
cwtl
orl
sbb
dec
lcall
push
mov
pop
cmpsb
leave
jo
xchg
loop
mov
sbbl
pusha
pusha
and
rcr
dec
shl
jmp
xor
repz
push
mov
adc
into
sti
and
mov
jb
jb
or
adc
cmp
mov
in
xchg
enter
ljmp
pop
lahf
aaa
jns
cmp
outsb
scas
or
scas
in
mov
movsl
pop
adc
push
dec
rclb
lods
dec
pop
es
loope
pop
and
daa
std
mov
adc
loope
aas
je
add
add
dec
pop
lock
outsb
xchg
out
jbe
pop
pusha
jge
sub
sahf
mov
inc
jecxz
push
inc
push
cwtl
ret
inc
movsl
das
inc
mov
scas
xchg
lcall
add
das
popf
xchg
je
push
xchg
jl
mov
mov
jbe
sub
mov
sub
inc
test
jg
or
or
xlat
mov
dec
add
add
movsl
sub
jnp
stc
pop
dec
pop
js
cli
xchg
push
adc
and
test
mov
int3
sub
xchg
in
shlb
jno
outsl
inc
push
jmp
insb
dec
ret
das
dec
jl
aam
mov
cmpsl
mov
sbb
lret
cltd
add
out
in
mov
js
ja
pusha
add
das
test
or
leave
push
outsl
add
in
das
add
mov
loopne
cmp
repnz
xor
dec
fucomip
sub
jnp
xchg
xchg
notl
bound
push
sarl
jno
nop
cli
xor
aad
inc
outsl
iret
sub
lock
pop
fcoms
out
mov
mov
data16
repz
push
xor
sti
xor
shlb
push
sti
push
xorb
addb
fcomps
push
enter
xchg
and
ds
pusha
inc
sub
out
data16
mov
and
dec
jbe
jne
popf
out
cmpxchg
ret
lret
xor
inc
lret
sar
ret
mov
jb
mov
xchg
push
repnz
mov
mov
ljmp
dec
xchg
dec
call
sbb
lea
test
ror
push
adc
mov
jle
mov
inc
dec
jge
lods
mov
mov
or
xor
fisttps
xchg
xor
mov
push
bound
adc
lahf
dec
ficomps
test
or
mov
mov
xor
js
lret
lea
fcom
jg
rclb
leave
adc
lods
leave
add
sub
pop
xor
cs
inc
aam
push
mov
xchg
fnsave
adc
imul
sbb
sub
jg
je
pop
out
pop
test
xchg
push
jnp
push
pop
mov
es
aad
cmp
push
lods
cmp
ljmp
xchg
mov
mov
push
test
mov
fnstcw
add
pop
movsb
cmp
loopne
mov
or
push
out
insl
std
repnz
test
les
rcpps
movsl
pop
enter
dec
in
mov
xchg
xchg
outsb
dec
dec
mov
sbb
mov
jnp
pop
jmp
sbb
inc
je
mov
shlb
xchg
arpl
je
dec
or
jns
cs
pop
xchg
push
fidivrl
es
fsubrs
fisubrl
fwait
push
add
addr16
mov
cmp
iret
imulb
or
mov
jo
pop
mov
and
lea
xchg
jge
add
sub
pop
fnsave
test
pop
jmp
adcb
cwtl
pop
call
ja
and
jae
dec
rorl
js
fidivs
dec
test
jp
aam
sub
xor
outsb
and
mov
insl
jns
dec
sub
sbb
push
in
in
pop
sbbl
ja
ficoml
psubw
pop
testl
clc
cltd
or
enter
sub
xor
mov
test
push
int
push
dec
shrl
into
adc
mov
sub
int3
dec
pshufw
cmp
outsl
mov
lods
pop
adc
ffree
test
push
jb
xchg
jne
cmp
mov
es
ja
mov
xchg
cwtl
clc
cmpsb
sbb
jb
xor
jne
add
dec
and
pop
ffree
and
cmp
add
call
dec
hlt
pop
mov
sub
push
int
push
dec
cmc
out
jecxz
insl
ss
lods
jp
jmp
mov
setg
pushf
popa
sbb
jmp
mov
lret
repz
arpl
ja
jns
sub
xor
inc
mov
dec
mov
aam
pop
pop
hlt
inc
loop
inc
xor
cmp
jp
sbb
adc
sbb
xchg
into
arpl
jecxz
push
jle
dec
mov
ficompl
test
sbb
sub
orl
outsb
sub
aaa
jne
sti
mov
sub
ds
enter
icebp
ret
into
and
jg
inc
fsubrs
rolb
roll
xor
shrl
arpl
std
pop
xchg
mov
pop
fs
movsb
add
add
mov
ljmp
xchg
leave
pop
inc
cmp
jnp
jns
push
dec
test
js
add
push
out
popa
or
mov
out
cwtl
lcall
lcall
mov
loop
and
mov
push
and
nop
sbb
inc
dec
das
test
cmp
xlat
jl
test
or
pop
in
loopne
mov
mov
xchg
jl
adc
pop
imul
lcall
dec
push
aam
add
cmp
inc
cmp
sub
jne
enter
insl
out
xor
jb
les
inc
rclb
repz
jae
pusha
shl
bnd
jb
loope
aaa
jmp
or
mov
inc
push
ds
leave
ljmp
jg
pop
fidivrl
sbb
push
jo
cmp
incl
mov
fstpl
je
jmp
push
loope
push
mov
push
pusha
sub
bound
mov
int3
or
inc
outsl
icebp
aaa
jo
adc
or
cmc
repnz
adc
mov
pop
xor
inc
mov
je
loope
xchg
inc
dec
xchg
xchg
inc
cmp
filds
jns
sbb
testb
inc
ja
jl
scas
aam
add
arpl
cmp
mov
and
sarb
test
insb
into
into
push
sbb
lock
mov
stc
sub
sbb
shrb
les
cltd
hlt
mov
push
mov
data16
xchg
out
xchg
push
shll
and
idivb
lcall
mov
jae
fwait
dec
testl
dec
leave
adc
aas
shl
ret
pushf
sbb
dec
mov
ja
lods
pop
loope
pop
out
push
leave
adc
sbbl
or
lods
inc
movsb
or
loop
nop
or
push
lea
push
fistpl
mov
movsl
scas
outsl
add
dec
jp
ja
add
js
or
xlat
push
lahf
push
inc
nop
cmp
cmc
jns
or
jle
push
dec
pop
rol
test
jns
cmp
jmp
loope
stos
sti
mov
dec
cmpsb
nop
cltd
push
or
push
add
or
jmp
mov
out
lods
or
test
adc
lret
mov
add
test
inc
jae
ja
dec
sarl
ret
inc
jmp
pushf
jb
into
aas
test
xchg
jl
cmp
into
test
mov
mov
sub
pop
repz
jo
aad
pop
inc
push
sahf
fs
mov
mov
xor
bound
inc
leave
gs
fldenv
bound
out
arpl
leave
dec
dec
test
popf
sub
sbb
pop
fsubrs
clc
in
xchg
jae
shrb
sbb
sbb
dec
fimuls
cmpl
add
ret
frstpm(287
call
je
aaa
popa
clc
outsl
dec
adc
sbbb
cli
lahf
inc
jl
mov
jg
sub
sub
or
ret
pop
outsl
jno
push
push
ret
lret
push
xor
shll
or
push
mov
pop
ret
inc
sub
pop
xchg
shlb
push
jns
addl
ret
xchg
dec
ret
dec
and
or
xchg
adc
pop
addr16
push
insl
gs
add
ret
shl
sbb
je
imul
fsubl
int3
push
mov
sub
scas
sub
mov
and
mov
mov
out
jo
mov
jg
out
cli
rol
jle
xor
mov
mov
loopne
inc
and
aad
int3
arpl
test
xor
nop
mov
call
outsl
faddl
mov
xchg
insl
jmp
test
mov
popa
add
push
aad
into
and
loopne
fcoml
ja
js
sbb
xchg
mov
cmp
adc
lret
pop
cmpl
scas
loope
and
adcl
insl
movsl
jbe
cvtdq2ps
mov
test
jns
and
mov
dec
mov
mov
xchg
jae
icebp
push
mov
or
mov
pop
cwtl
test
or
jge
imul
test
in
int3
test
call
mov
stos
in
inc
xchg
mov
mov
xor
or
jl
jo
jnp
stos
or
enter
lret
jle
out
mov
xchg
jp
incb
lret
ja
movsl
jg
xlat
inc
pop
scas
fsubrs
jo
movsb
push
fisubrs
arpl
xchg
loope
pop
push
push
jle
in
push
clc
add
lahf
adc
mov
insb
out
adc
ja
cwtl
incl
jle
fwait
mov
mov
repz
dec
mov
lock
pop
rorl
push
fmuls
add
les
add
out
jnp
jns
and
ret
clc
push
xor
test
jb
mov
and
es
fldz
jno
xchg
jns
fisubrl
push
xor
sbb
or
enter
sarb
cmp
adc
inc
test
test
and
cmp
jmp
cmp
out
cmp
inc
test
int3
out
ret
xchg
mov
add
xchg
and
inc
in
dec
aad
sbbl
xor
xchg
and
or
sub
inc
insb
les
xor
fldl
mov
fildll
sub
xor
mov
in
xor
loopne
add
or
mov
cli
jo
mov
sub
insb
call
pop
mov
sbb
rorb
dec
daa
xlat
pop
xchg
adc
xchg
jo
sbb
addr16
icebp
out
out
dec
add
pop
js
dec
xchg
cs
push
xor
sbb
xchg
mov
aas
jne
dec
xor
jne
stos
mov
pusha
inc
mov
rcll
fidivrs
sahf
outsl
fistpl
fdivrl
ds
xor
mov
jbe
xchg
adcl
arpl
scas
dec
icebp
int
fwait
loope
leave
js
ss
movsl
cmc
pop
adcb
pushf
je
std
les
mulb
cmpsb
hlt
mov
pop
xchg
inc
es
cmpsb
gs
inc
cmp
scas
mov
jecxz
fsubrl
or
or
loope
mov
ds
addr16
xchg
mov
xor
lret
mov
and
mov
aaa
cmp
jne
lahf
ret
jo
jge
int
fdivrl
and
stos
daa
sub
pop
add
and
adcl
lock
ror
push
jmp
sbbl
pop
rclb
pop
jnp
and
jnp
lret
out
adc
out
aas
or
int
jmp
test
in
incb
jne
xor
leave
loopne
push
call
sahf
push
push
cmp
stos
mov
lock
jmp
cmp
sub
jo
push
int3
jg
inc
lods
mov
sbb
shll
cmp
js
sbb
push
push
mov
aad
xchg
and
inc
xchg
lret
lret
enter
arpl
and
pushf
fs
jne
push
outsb
in
lret
or
bound
push
clc
mov
xor
sub
in
test
pop
out
adcl
repz
jmp
sahf
fwait
add
iret
mov
in
pop
sub
mov
iret
ret
incl
add
jne
test
ds
pop
mov
mov
or
push
call
pop
sbb
popf
lods
popf
xor
cld
mov
ret
pushf
inc
addr16
movsb
imul
repnz
mov
mov
das
cmp
pop
inc
sbb
push
cmpl
loope
and
dec
test
lret
icebp
cmp
aam
sbb
mov
cmpb
inc
mov
addr16
aam
popa
popa
jbe
popw
xor
out
mov
cmp
gs
lea
add
out
insl
sbb
push
mov
push
sbb
xchg
push
nop
ljmp
sbb
jecxz
push
mov
notl
out
xchg
adc
rcll
dec
xor
sbb
mov
cmp
stos
sub
mov
mov
cmpsb
push
or
mov
lcall
ror
lock
std
push
call
xchg
xlat
into
imul
arpl
lock
imul
jnp
in
push
xchg
out
pusha
push
push
leave
sub
les
cmp
das
outsb
lret
scas
push
sarl
ljmp
test
loope
adc
xlat
insl
cld
lahf
add
shl
data16
stos
or
dec
shl
xchg
mov
int
in
or
sub
jno
into
jnp
adc
jnp
cwtl
mov
pop
pop
add
fidivrl
jmp
xchg
xchg
idivl
inc
dec
jmp
lds
fdivrp
sti
xchg
adc
cmp
add
mov
js
cmp
flds
test
xchg
pop
repz
out
divb
mov
adc
in
jo
lods
pusha
mov
sarb
aad
adc
ficompl
test
bnd
inc
cltd
jae
dec
fmull
rclb
test
add
jmp
mov
in
popf
out
adc
daa
push
inc
adcb
cmp
aaa
push
adc
orb
xchg
push
iret
xchg
sub
and
jno
insb
out
sahf
cmp
mov
fwait
push
dec
shr
xor
ret
inc
bound
xor
roll
les
mov
xlat
push
cmp
xchg
lods
out
pusha
inc
popa
iret
fisttpl
in
xchg
out
dec
or
test
lods
sub
sub
xchg
inc
fstpl
mov
add
int
lahf
xchg
arpl
hlt
fsubr
test
outsb
js
idivl
js
imul
xchg
dec
mov
xchg
push
out
outsb
xor
cmpsb
gs
mov
sub
test
lahf
lret
iret
lcall
pop
pop
andl
inc
lret
pop
aam
lock
and
clc
popf
popf
xchg
das
ljmp
dec
test
push
cmc
and
mov
inc
cltd
dec
jbe
pop
sbb
xor
pop
xor
sbb
dec
cli
lahf
pop
or
into
cmp
pop
outsb
lret
popa
andl
fisubl
out
dec
jp
adc
push
lahf
pop
arpl
stos
push
je
push
inc
mov
andb
into
add
fstpt
dec
push
dec
in
mov
out
and
add
int3
inc
xor
leave
fwait
mov
jnp
inc
cmc
in
xchg
mov
clc
shrl
shlb
out
out
js
mov
mov
dec
imul
mov
xor
push
int
pop
jbe
cld
test
mov
pushf
shrd
pop
fwait
sub
sbb
lods
adc
fildll
cld
adc
adc
add
pop
pop
add
dec
out
ret
adc
popa
pop
inc
ret
and
jmp
jmp
add
pop
push
rcll
sti
mov
daa
enter
ficomps
test
pop
sbb
leave
adc
fisttpl
xchg
jmp
loope
mov
arpl
jo
push
dec
int3
subb
sub
lea
sub
cmp
cmpb
mov
fwait
inc
mov
cmp
pop
std
cwtl
jle
sub
cmp
out
daa
fadd
cmpsl
or
lock
lea
dec
sub
sbb
call
and
fstpt
arpl
jae
fsubp
pop
mov
scas
ror
les
popa
xor
daa
cmp
mov
insl
and
cmp
cmp
lods
or
aad
cmp
and
pop
and
xor
jb
rcll
push
imul
or
push
aaa
jge
mov
fisubl
iret
lcall
push
xchg
in
dec
inc
outsl
and
lea
imul
test
jmp
fwait
mov
popf
out
inc
rcrl
and
sbb
sbb
pop
fsubrs
fsubs
out
cmpsb
test
and
out
push
mov
dec
or
push
push
iret
cs
popa
push
fidivrl
mov
push
ret
inc
mov
movsl
icebp
das
sub
jg
cltd
cmp
pushf
mov
out
pop
xlat
pusha
and
cli
in
out
push
xor
jo
dec
sti
mov
lahf
pop
or
fucomp
and
outsb
xchg
hlt
or
add
mov
movsb
pop
orb
subl
ficoms
pop
mov
out
scas
xor
xchg
mov
lods
addr16
test
mov
push
mov
nop
inc
loop
out
dec
mov
repnz
hlt
fidivl
inc
pop
lret
test
imull
add
mov
mov
adc
ret
add
or
loopne
int
mov
jo
out
or
cmp
xchg
cmpsb
pop
les
sbb
push
in
daa
mov
scas
into
shrb
popa
into
in
cmp
out
push
lods
les
cmc
add
outsb
std
imul
sbb
xchg
jno
mov
mov
xchg
fdiv
add
push
sarb
dec
mov
in
js
ljmp
fnstsw
out
dec
stc
je
jg
sbb
cli
inc
repz
mov
or
pop
cmpsl
adc
fs
xchg
sahf
mov
outsl
sbb
mov
mov
sub
incb
adc
pop
mov
mov
jne
or
inc
outsb
dec
inc
addl
into
adc
call
jge
adc
call
enter
jle
das
cs
and
mov
mov
loop
xchg
push
xor
arpl
rclb
push
xor
cmp
gs
adc
or
daa
xchg
rcll
mov
sbb
push
add
adc
loop
lods
imul
inc
add
adc
adc
jl
xlat
sub
stos
shll
mov
daa
fdecstp
shll
jge
addr16
fmul
popa
pop
mov
pop
leave
push
adc
or
inc
fldenv
cmpsb
or
pop
jle
std
adc
cwtl
sti
out
cmpsb
das
adc
ds
dec
or
sub
jae
or
fistl
cmpsl
xlat
insb
fistpll
aad
push
jmp
jns
xchg
xchg
fucomi
lods
jmp
push
jbe
mov
enter
or
test
mov
ljmp
mov
int
jecxz
iret
inc
pop
in
dec
or
mov
pop
push
adc
mov
adc
sbb
sub
xor
movl
sbb
repnz
adc
jp
xchg
add
mov
movsb
pop
dec
push
push
sbb
leave
mov
jmp
xchg
push
js
gs
aaa
lret
test
fs
xor
and
insl
fsubr
inc
adc
sub
fwait
add
int
xchg
sti
in
lock
push
fcomi
lea
fadds
jo
dec
mov
mov
das
imul
sbb
pop
push
pop
and
sub
ds
adc
popl
mov
ret
dec
mov
sahf
push
cwtl
xor
inc
mov
rcl
or
out
jo
rcll
rcl
lahf
adcl
data16
push
lahf
imul
sahf
mov
and
pop
and
in
mov
add
jmp
xchg
fsts
lahf
int
fmul
pop
cmc
aam
stc
push
imul
pop
inc
ret
xor
inc
or
ror
and
setnp
sub
jmp
mov
movsl
movsb
repnz
cmp
dec
je
adc
into
lods
ret
cmpsl
pop
jmp
add
mov
pop
mov
test
fwait
js
inc
mov
pop
xor
outsl
mov
pop
add
movsb
pusha
aad
rol
pushf
sub
sarl
xchg
add
mulb
add
fiaddl
jmp
jb
repnz
out
std
sbb
push
and
loop
out
cmpsl
movsl
jbe
repz
hlt
inc
subl
jb
push
add
pop
sahf
imul
loopne
fdivl
or
or
aam
xor
fists
stos
lea
vpavgb
cwtl
insb
popa
and
mov
scas
mov
mov
mov
or
loopne
cmp
out
pop
mov
mov
stc
xchg
xchg
mov
and
arpl
adc
les
mov
dec
pop
add
arpl
inc
sarb
mov
sbb
jbe
mov
lods
pop
int3
sahf
push
push
push
adc
pop
xchg
out
push
xor
lods
mov
cli
cli
jmp
pop
imul
fiadds
in
ficompl
mov
cld
pop
arpl
cltd
data16
adc
xor
pop
push
fwait
rclb
jp
dec
inc
inc
fs
adc
fsubp
xchg
or
cmp
cmpb
adc
rcrl
imul
push
ljmp
or
leave
add
popf
sti
xor
fbld
out
xchg
and
xor
pop
jle
xchg
add
or
outsl
sbb
jge
lret
mov
mov
std
xlat
xchg
je
lret
or
mov
add
ja
scas
out
inc
pusha
mov
xchg
add
mov
mov
fmuls
or
jp
data16
jg
test
adc
out
mov
dec
dec
inc
and
scas
mov
push
jno
pop
inc
mov
push
cltd
lock
fdivs
push
push
imul
inc
dec
mov
call
dec
lods
dec
outsb
jbe
das
in
adc
inc
cmp
cltd
jnp
cwtl
data16
jecxz
jle
fsubrl
enter
add
nop
in
sbb
cmc
test
xchg
adc
jge
test
cld
inc
incb
arpl
mov
push
rorl
insl
push
int
mov
out
push
cmp
fadd
xlat
xchg
xor
inc
cmpsb
push
sub
lcall
inc
sub
or
es
dec
mov
pop
mov
xchg
fdivrs
insb
clc
mov
and
mov
cmp
mov
lcall
loope
sub
sub
pop
mov
xor
test
mov
addl
daa
push
decb
movsl
sbb
aaa
sub
icebp
jne
sub
insb
push
faddl
jp
mov
loop
jne
xchg
mov
jl
cmp
mov
ret
xor
fcomp
mov
sub
mov
jp
mov
ja
mov
xchg
arpl
in
jp
js
loopne
jle
loopne
test
cs
stos
push
leave
adc
adcl
in
pop
out
adc
mov
stos
cltd
repnz
or
sbb
jae
mov
fsubrs
dec
arpl
mov
push
fs
imul
cld
xchg
sbb
fstpl
cmp
sub
repnz
dec
les
sti
scas
push
in
push
test
mov
mov
sub
xchg
cmp
orb
mov
push
xchg
fwait
gs
jmp
and
pop
insl
xor
sub
aad
in
aas
mov
scas
fisttpl
ret
mov
adc
push
call
lcall
fdivs
arpl
mov
mov
push
mov
xchg
xchg
shl
jno
out
sbb
and
inc
push
incb
adc
xchg
push
popa
in
in
xchg
data16
mov
pop
and
sbb
pop
dec
loop
out
lock
rorb
add
addr16
jno
mov
mov
rcll
rorl
scas
mov
outsl
ljmp
pop
sub
jl
jl
lcall
jne
jns
xchg
sbb
aas
ds
adcb
out
es
xor
ret
inc
shr
and
jnp
pushf
es
aaa
scas
and
xor
int
xchg
or
jge
into
push
push
pop
mov
addl
stos
sub
jecxz
push
lods
incl
push
cmpsb
data16
mov
sbb
jmp
ja,pn
call
cmp
mov
arpl
loope
addb
outsl
mov
insb
cltd
cmpsl
outsl
in
mov
rorl
lock
add
xchg
loopne
push
mov
jge
inc
aas
lods
clc
mov
jbe,pn
je
int
adc
mov
dec
dec
adc
adc
aaa
sub
enter
mov
sub
lret
lret
popa
inc
cmp
mov
aam
jge
adc
pop
dec
mov
je
std
pop
push
xchg
add
and
fstl
pop
cs
inc
sbb
cmp
aas
jo
mov
ret
in
ljmp
ror
addr16
lods
movsb
out
shrl
sarl
addr16
inc
mov
pop
lret
xor
pop
cmp
insl
inc
fcmovu
cmp
xor
das
int
rcll
inc
jmp
fidivs
lret
jg
jp
push
push
nop
mov
int3
sar
or
popa
cmp
out
daa
xchg
jmp
sbb
out
sbb
inc
ficoms
stos
or
push
aas
add
cli
jmp
add
orl
adcl
jnp
push
icebp
bound
xchg
mov
aam
js
sub
add
adc
hlt
sahf
test
push
faddl
ss
test
sbbl
and
repz
and
incb
adc
xor
ss
loop
pop
and
add
xchg
pop
outsb
mov
lcall
fidivrs
push
cmc
aam
ret
je
pop
xor
sahf
rorl
and
mov
cmp
mov
sub
add
xchg
lret
mov
sti
subb
push
data16
xor
or
dec
mov
pop
fcompl
mov
cmp
inc
xchg
lahf
mul
loop
mov
and
mov
push
out
movsl
leave
out
xor
xchg
xchg
cltd
orl
add
sahf
clc
push
sub
jge
pushf
imul
pop
fbld
popf
push
nop
sbb
mov
cld
mov
pop
or
stos
andb
mov
fsubrp
push
sub
lods
into
addr16
jmp
push
movsl
sti
test
add
xchg
dec
in
sub
cmp
xchg
testl
stos
mov
stos
stc
imul
test
repz
push
xchg
ret
xchg
in
cmpsl
into
orb
fcomip
pop
push
cmp
xorl
jae
fwait
push
test
cmp
std
loopne
icebp
or
push
jb
pop
jbe
ret
mov
pop
jg
cmp
mov
imul
pop
in
fcom
sbb
push
jp
mov
nop
xchg
aaa
sbb
int3
jmp
in
jl
out
fcmove
rcrl
jle,pt
xchg
adc
fwait
mov
fwait
sar
sbb
and
ss
cmp
xchg
jg
popa
sub
lods
sbb
mov
mov
scas
bound
or
dec
lahf
mov
mov
mov
xchg
stos
jg
dec
xchg
jae
mov
std
mov
orps
mov
lds
sbb
fnsave
insl
addl
int3
repnz
loope
fidivl
dec
push
mov
cld
ss
mull
xor
jo
repnz
loopne
or
adc
cltd
push
dec
push
test
shl
xchg
mov
mov
sahf
in
lock
mov
mov
sub
test
mov
daa
xchg
fincstp
add
xor
loope
and
dec
shrb
sahf
fidivrl
mov
cmpsl
aaa
outsb
fwait
enter
mov
popa
or
cmpsl
mov
fbstp
xor
aam
and
dec
push
sub
push
mov
pop
add
xchg
ljmp
sahf
mov
or
rcl
notb
mov
leave
ljmp
out
mov
mov
cli
sub
pop
das
and
xor
push
pop
inc
outsl
mov
dec
das
sbb
xchg
mov
cmp
imul
cmovge
fiadds
add
popf
mov
stc
or
mov
arpl
xchg
xchg
sti
sub
cmpsb
mov
cwtl
adc
fcomps
dec
movsl
aas
and
sub
mov
push
jns
es
sub
xor
pop
lret
xchg
pop
jle
sub
push
mov
loop
out
mov
inc
cmpsb
ret
push
fcmovnbe
jnp
mov
je
xchg
jmp
clc
jae
adc
clc
pop
rcrb
out
jle
and
ja
pop
sbb
test
in
bnd
es
xchg
xchg
sub
or
push
mov
movsl
mov
lcall
mov
movsl
jp
stos
mov
out
movsl
sbbl
repnz
inc
push
sub
cmp
into
mov
repnz
push
popa
inc
or
jnp
pop
out
outsl
js
mov
xchg
fisttps
out
sbb
imul
cmp
mov
cltd
aaa
out
arpl
cmp
mov
int3
sbb
jbe
je
push
cmp
and
pop
mov
or
sahf
andb
cmp
bound
adc
xor
push
fidivrl
mov
rcll
push
xor
fstpt
push
mov
push
cli
mov
xchg
xor
sub
jae
int3
sbb
pusha
jp
in
inc
fwait
lods
testb
sub
add
cmp
push
jbe
stos
and
mov
stos
data16
mov
push
jo
or
adc
add
cli
lahf
sbb
push
mov
sub
pop
cmp
add
es
cmp
jb
adc
lret
mov
dec
lcall
fidivrs
dec
fadds
test
nop
jbe
insb
sub
and
lret
push
leave
and
mov
add
popa
sti
in
xchg
sbb
and
aas
jl
enter
jl
std
xchg
xor
and
mov
lret
fadds
call
aad
or
pushf
in
and
out
mov
aas
insb
and
jae
lods
pop
jbe
movsb
fxch
call
push
xor
ja
mov
mov
sub
push
fidivl
xchg
lret
addb
cld
gs
ljmp
fidivrs
mov
mov
out
sub
xchg
inc
daa
adc
add
push
test
inc
mov
outsb
xor
or
ljmp
inc
enter
pop
jo
into
sbb
xor
jge
or
mov
jno
xchg
jp
pop
sub
dec
adc
cmp
test
aaa
ljmp
testl
xlat
mov
idivl
sub
push
js
pop
in
pop
loopne
and
mov
fcoml
push
fmull
mov
decb
lret
jle
in
and
test
xor
enter
ds
movsl
jno
in
into
lea
pop
push
push
xchg
leave
add
ds
pop
addb
es
pop
iret
xchg
push
mov
div
js
cmpxchg
adc
or
fisttpl
add
movsb
test
loopne
pop
sti
sub
xor
push
in
out
in
in
mov
dec
into
pop
rolb
insl
lods
in
hlt
mov
dec
add
and
dec
sub
aas
xor
jbe
dec
ror
int3
and
and
cmp
or
jle
cmp
jge
outsl
xchg
mov
push
dec
sbb
adc
pop
insb
out
lcall
test
jp
pslld
dec
push
or
sub
mov
dec
xchg
inc
xchg
and
cli
cld
popf
jo
mov
dec
insb
push
inc
inc
mov
mov
shrl
cmp
push
ret
mov
cmp
push
adc
data16
mov
out
and
inc
es
dec
dec
test
sbb
cli
not
lods
pop
push
pop
das
mov
add
adc
cmc
push
dec
mov
pop
jb
cmpsb
aad
daa
outsb
jne
xor
jb,pn
dec
jo
sbb
inc
push
xor
sbb
inc
sub
aaa
mov
add
fcomps
rclb
push
xchg
add
pusha
sahf
outsl
fcompl
adc
cwtl
ja
lret
xchg
hlt
cmp
adc
mov
mov
pop
mov
cmc
push
mov
push
clc
pop
ja
ret
push
and
dec
push
adc
outsb
push
mov
push
xlat
pop
jmp
jecxz
xor
imul
adc
mov
pop
adc
mov
jp
ror
push
push
stos
repz
repz
inc
fadds
sub
push
call
inc
and
pop
cmp
loopne
mov
cmpsl
mov
inc
mov
cltd
test
movsb
dec
lret
push
sub
testl
mov
js
test
inc
je
pop
test
test
cli
shrb
push
push
inc
cli
fadd
push
aaa
test
scas
pop
push
in
pop
mov
dec
fwait
das
cli
xchg
mov
mov
shlb
mov
jecxz
fldenv
shr
and
add
mov
push
outsl
inc
adc
push
jno
add
ret
xor
testl
lcall
mov
je
jo
xchg
lcall
mov
orl
mov
adc
fidivrs
les
ret
adc
cmp
out
lret
dec
and
pop
cs
push
cmpsb
int
stos
or
and
cli
ljmp
or
nop
or
test
push
into
loopne
jg
ljmp
sbb
imull
test
inc
dec
cmpsb
jb
or
icebp
and
test
loope
iret
cli
jg
ds
sub
jg
or
fnstcw
jns
inc
lods
add
lods
xor
in
dec
pushf
lea
mov
mov
sbb
dec
add
aaa
aaa
into
call
clc
mov
loop
or
lods
cmp
xorb
lds
and
cmpb
pop
shlb
fwait
add
adc
scas
sbb
jne
adc
pop
pop
or
leave
aaa
mov
jp
dec
iret
cmp
sub
adc
push
popa
push
push
pop
mov
and
pop
cmpsl
inc
sbb
sbb
fwait
or
loope
adc
stos
shll
xchg
aam
lret
sti
mov
mov
negb
outsl
adc
mov
push
push
lods
pop
mov
lods
sarb
xor
imul
stos
in
flds
icebp
js
rcl
hlt
mov
pop
and
xchg
ret
cmc
pop
mov
outsb
sbb
push
jno
jge
jmp
sub
stos
mov
shll
mov
push
insb
daa
pop
mov
dec
scas
push
int3
cmpsb
mov
les
adc
xor
cmp
xor
popa
xor
shll
repnz
nop
push
scas
mov
test
leave
addr16
sbb
xor
je
dec
in
in
cmp
mov
shlb
cmp
scas
xchg
jecxz
add
dec
cmp
xor
aam
adc
jne
stos
out
push
dec
and
data16
mov
repnz
popf
push
push
push
xor
xchg
mov
sbb
loop
lods
out
ror
cli
mov
into
xor
sub
jge
sar
push
adc
xchg
push
rolb
les
in
mov
cmpsb
adc
je
add
mov
add
pop
fldenv
ret
rorl
push
js
sub
mov
push
or
add
mov
insl
mov
add
or
cmc
sbb
js
lea
cmp
sub
fsts
inc
outsl
stos
mov
add
push
jl
jle
xchg
test
xchg
dec
cwtl
cwtl
mov
aad
mov
or
stc
sbb
pop
inc
lods
xchg
push
fldcw
shll
push
or
dec
shl
sarl
sbb
shll
subl
xchg
rol
xchg
cmp
xor
call
inc
fists
outsb
out
cmp
push
notb
test
out
sbb
lcall
aad
sub
fldenv
dec
cmp
out
rcll
divl
iret
test
cmc
xchg
dec
pop
mov
jno
out
push
in
call
or
add
testb
rorl
mov
pop
sub
cld
lods
push
add
stos
push
xchg
xchg
pushf
xchg
out
inc
add
push
in
cmp
xor
aam
insl
xchg
inc
sbb
mov
jno
cmc
cltd
jle
loopne
or
in
les
or
or
push
xor
sahf
stos
push
push
outsb
stos
mov
adc
sub
insb
push
arpl
jl
test
cmp
sbb
xor
mov
xchg
nop
in
nop
arpl
push
inc
mov
mov
cs
je
and
jae
dec
or
loop
mov
xchg
pop
sub
cmp
mov
sti
das
ss
pop
pop
ss
std
adc
fisubrs
outsb
sbb
scas
js
test
or
jbe
test
cmp
lret
aad
fwait
movsb
mov
mov
add
jmp
sub
dec
adc
push
push
dec
insb
xor
negb
fisubs
xchg
jmp
mov
aad
or
test
cs
pop
push
xchg
jno
sbb
jbe
ljmp
sbb
sbb
movsl
push
subl
inc
test
add
hlt
cltd
add
push
mov
and
or
shr
xlat
or
xchg
or
int3
cmpsl
les
test
mov
xor
mov
movsl
jp
xor
mov
and
fisttps
cmp
cmpsb
push
push
cmp
lret
es
push
xor
and
loope
adc
sub
sbb
into
fisttpl
or
cld
xor
rclb
pop
lock
out
pop
dec
aas
push
jae
cmpsb
mov
mov
push
jae
popa
lcall
jmp
dec
sti
and
insb
cwtl
cmp
lret
and
ljmp
cmp
arpl
mov
or
pop
pop
push
pusha
aas
cmpl
sbb
pop
std
je
mov
cwtl
pushf
movsl
addr16
xchg
repnz
mov
push
xor
mov
add
inc
int3
push
or
pop
mov
sbb
sub
xor
lock
xchg
inc
cli
cmp
adc
jns
lds
pop
mov
push
sbb
in
inc
ljmp
xchg
repnz
aaa
pop
arpl
pop
lock
lock
push
push
leave
rcrl
inc
repz
popa
pop
inc
mov
es
rolb
test
sub
push
mov
ss
hlt
loop
ficoml
xor
fnstenv
sbb
cmp
jecxz
iret
mov
cmp
pop
test
xchg
test
sahf
xor
int
pop
push
dec
negb
cmp
sbb
sub
testl
idivb
in
leave
adc
jmp
test
and
dec
adc
aaa
push
ss
dec
xchg
dec
cwtl
cmp
movsl
push
pop
shrl
jnp
daa
fs
aas
in
mov
in
mov
sbb
or
mov
cmp
pop
hlt
mov
and
aas
ret
scas
adc
clc
popl
pushf
in
jb
lds
roll
jg
orl
sbb
and
jbe
and
xor
inc
icebp
pop
ja
std
adc
lahf
ror
rorl
push
push
xchg
leave
and
pop
test
or
in
out
sub
imul
int
mov
or
inc
dec
lods
dec
add
hlt
adc
hlt
repnz
pop
pop
fnstsw
sahf
stc
cmp
and
or
cmp
pop
xor
bound
sbb
into
clc
dec
lock
pop
lret
cli
jne
loopne
push
and
jbe
ljmp
aaa
sbb
jle
mov
pop
or
sbb
inc
mov
cmp
mov
jbe
sub
addr16
gs
inc
jp,pn
fldt
pushf
push
mov
lock
outsb
xor
repnz
das
cs
mov
cli
adcb
lock
int
idivl
or
in
out
inc
das
ror
mov
pop
and
test
mov
pop
test
repz
aaa
stos
and
jae
into
sbb
outsl
testb
mov
mov
jbe
imul
daa
sub
les
mov
mov
push
cmp
add
stos
cmp
mov
lahf
inc
mov
jae
arpl
outsb
cltd
jne
jno
movsb
mov
cmp
add
dec
cmc
add
dec
aam
adc
clc
lret
jno
or
mul
cld
jo
xor
xor
sub
jl
xor
push
popf
into
pushf
stos
xchg
pop
fwait
adc
bound
cs
popa
pop
scas
xlat
out
add
daa
jbe
and
add
xor
mov
xor
pop
sbb
push
filds
outsl
mov
xor
pop
sub
mov
inc
leave
or
jns
in
sub
sbb
loope
cmp
out
inc
repnz
push
jge
shl
enter
popa
xchg
aas
addl
sbb
leave
lret
insb
fistpll
pop
pop
je
cmp
mov
and
lea
cmp
xchg
mov
fcomps
iretw
or
mov
sbb
pop
les
mov
and
lods
frstor
int
daa
popa
dec
dec
cli
xchg
mov
mov
fwait
out
outsb
add
jmp
mov
movw
xchg
xchg
mov
mov
push
sbb
sub
js
sbb
fwait
xchg
sahf
dec
dec
xchg
mov
aas
lock
xchg
mov
ljmp
cs
inc
test
or
and
xchg
push
mov
pushf
mov
flds
add
lock
adc
pop
add
and
flds
clc
ljmp
je
sub
sub
fwait
out
aas
mov
mul
jns
xchg
mov
dec
aam
mov
lods
je
xchg
imul
fwait
add
pop
loopne
mov
lods
in
hlt
mov
mov
dec
ss
fs
add
movswl
lea
mov
shlb
or
add
jno
cs
addr16
jg
movsl
jge
lock
fsubrs
aaa
scas
cmpsl
fs
xorb
or
outsl
dec
dec
movsl
jae
int
xchg
push
jae
ret
lods
daa
sub
shll
jl
data16
repnz
jp
push
fistl
xchg
dec
push
xor
aaa
jns
mov
xchg
jno
lods
loop
scas
pop
cmp
sbb
insb
mov
stc
imul
cmpl
stos
jo
pusha
stos
cmp
dec
icebp
scas
mov
loope
and
inc
shl
push
xchg
sbb
std
lea
ds
repnz
push
mov
cmp
jnp
repz
jns
cs
int3
adc
sbb
mov
imul
test
cmp
outsl
imul
stos
cmc
dec
aad
aas
lret
mov
je
stos
rorl
cmp
mov
ret
inc
mov
iret
clc
hlt
pop
out
sbb
inc
push
dec
lret
xchg
insb
fsubrs
hlt
repz
mov
aaa
pop
lret
mov
mov
adcl
les
dec
fidivrl
push
fstpt
push
nop
lret
push
mov
push
xchg
push
clc
dec
sub
cmp
js
fcompp
bnd
daa
lock
decb
imul
addr16
ss
fcom
push
push
outsl
scas
xchg
das
sub
les
iret
leave
mov
arpl
mov
pop
add
sti
rol
test
xor
out
push
jo
mov
sub
addr16
and
lock
pop
cwtl
push
lahf
cmpsl
sub
outsl
xchg
xchg
cwtl
shr
xchg
repz
adc
js
push
enter
xor
xor
pushf
lcall
rol
xchg
jns
sarl
mov
call
mov
adc
mov
inc
lds
and
mov
mov
addr16
lret
loop
xor
test
outsb
imul
rcrl
push
data16
mov
xchg
pop
inc
or
jnp
adc
pop
adc
adc
push
iret
mov
in
es
sub
je
fcoml
popa
mov
mov
popf
clc
inc
jo
push
es
lods
cmpsb
scas
mov
mov
mov
push
dec
in
repz
fwait
lcall
lods
sub
xor
leave
mov
fiaddl
nop
jb
clc
xchg
leave
outsb
add
fisubl
andl
fucomi
mov
mov
xor
sbb
shl
push
cmpsb
dec
insb
shlb
mov
lea
movsl
das
loope
xor
mov
fs
lds
xor
adc
insl
xor
mov
aas
jno
into
arpl
mov
daa
pop
cld
stc
jb
xchg
loop
inc
jno
fucomip
roll
ret
xlat
pmulhw
je
ret
jg
inc
jecxz
fldl
test
push
cmp
or
icebp
xchg
xor
adc
cmpsb
call
bnd
lret
pop
fsubrs
rcrb
fistps
adc
sbb
cli
sbb
mov
cld
inc
jmp
and
std
adc
jmp
xchg
fidivs
jp
pop
adc
movsb
popa
imul
mov
jmp
shrl
push
roll
movl
in
pop
stc
icebp
rclb
cmc
and
daa
jno
in
jg
pop
xchg
cs
xchg
sbb
cwtl
ljmp
adc
hlt
push
fidivl
lods
iret
sub
or
xchg
sub
stc
aaa
sub
test
mov
jne
push
adc
pop
repz
jp
jecxz
incl
sub
aad
add
dec
push
subl
xor
pop
sbb
jle
subb
adc
pop
loop
stc
popa
int
or
mov
fmull
out
or
daa
scas
popa
add
scas
test
or
or
popa
xor
inc
ja
inc
cmp
bound
in
imul
xor
inc
daa
loop
aaa
inc
add
mov
mov
cwtl
fldenv
adc
and
push
add
cld
pop
out
push
dec
push
test
jecxz
popl
mov
add
mov
ret
mov
mov
xor
imul
fimull
dec
jbe
das
xor
nop
icebp
inc
or
jmp
add
aad
fldt
mov
pop
mov
dec
fucom
leave
or
data16
xchg
lcall
jno
out
inc
cmp
jg
inc
cmpsl
push
mov
pop
cmpsb
dec
inc
adc
cmpsb
jge
xor
je
dec
fwait
data16
cltd
sub
and
fidivrs
adc
repz
jns
lods
gs
and
pushl
jae
and
int3
xchg
jl
int
lret
rol
mov
push
pop
push
rol
fldcw
push
xchg
rolb
aad
scas
rorl
int3
imul
pop
rcrb
fbstp
cmp
sub
repz
mov
fst
ret
mov
and
cmp
mov
or
stos
insb
aad
test
js
mov
pop
test
adc
sbb
dec
enter
test
dec
xor
cmpsb
repz
lds
xchg
mov
and
cmp
xchg
cmpsl
or
bound
repnz
mov
dec
insl
pop
popf
das
icebp
mov
pop
push
dec
adc
cmp
popf
mov
cmp
push
arpl
insb
mov
sbb
aad
dec
jmp
fcomp
sub
mov
mov
inc
cmc
ja
stos
aaa
repz
sub
ss
subl
xchg
sub
nop
sbb
adc
cs
xlat
mov
inc
arpl
mov
xor
popf
dec
xor
inc
push
mov
lahf
or
in
pop
lods
fchs
or
mov
mov
mov
out
call
mov
faddl
cmp
sub
push
or
inc
mov
out
lahf
adc
movsl
sub
rcrb
stos
cmp
cld
pop
clc
push
mov
xor
adc
sbb
adc
iret
xchg
dec
iret
cmp
pushl
insb
insb
dec
outsb
dec
sbb
add
xchg
loop
mov
std
sub
aaa
arpl
cmp
sbb
fwait
jmp
inc
call
es
arpl
or
push
ret
pop
and
add
xor
push
fildll
xchg
and
nop
fdivs
lock
aas
sub
jg
fcmove
fldcw
or
out
jp
test
dec
clc
ret
call
jne
ret
lock
mov
hlt
lds
loop
je
mov
lret
push
int
js
mov
test
jb
clc
pop
xchg
dec
xchg
lock
ror
push
mov
arpl
jb
sub
sub
out
div
cmp
inc
bound
lods
sbb
lahf
lahf
das
push
sbb
lcall
sub
mov
fmuls
sub
or
dec
mov
xor
cltd
out
pop
cmpsb
out
cmp
inc
push
out
or
pop
cmpsl
sahf
sub
mov
je
mov
mov
inc
sbb
loop
mov
push
fistl
or
cli
lock
test
push
mov
fstps
add
jns
idivb
mov
ret
int
inc
pusha
imul
or
outsb
fs
inc
xor
mov
pop
mov
adc
push
cs
sti
adc
mov
xor
mov
gs
lock
hlt
fwait
mov
xchg
in
iret
mov
shrl
and
xchg
sbb
sub
xor
xchg
add
or
repz
mov
sbb
loop
mov
or
repnz
nop
mov
lahf
packsswb
jb
and
jl
add
adc
fadds
cmp
daa
mov
xlat
imul
and
sbb
aam
jl
cmp
pop
push
jns
loope
xchg
or
and
adc
movsl
cld
push
mov
jb
jg
push
inc
ljmp
ja
push
into
xor
mov
and
sbbl
xor
push
leave
mov
and
sarb
data16
enter
xchg
pop
sub
loop
adcb
jnp
adc
sbb
push
xchg
scas
sub
mov
aaa
pop
call
sti
dec
mov
fs
add
sbb
mov
push
aas
inc
insb
lods
or
hlt
aas
std
mov
jo
xabort
int
lock
adc
fs
cmp
cmovo
xchg
push
movsb
popa
shrl
and
faddl
dec
lds
lahf
sti
clc
jns
out
sbb
push
or
in
out
in
pop
and
nop
fsubl
sahf
dec
test
jl
ljmp
xchg
fdivs
xchg
std
loop
sub
push
jae
popa
jg
lods
les
push
mov
in
dec
mov
xor
sarb
jnp
test
jle
stos
pop
out
xchg
aad
inc
xor
in
test
les
ljmp
adc
push
mov
js
test
loope
inc
jns
jne
imull
fiaddl
jo
jnp
insl
push
in
lahf
mov
jecxz
jmp
dec
push
divb
sub
in
stc
outsl
pop
mov
mov
pop
or
aam
adc
pop
mov
shlb
mov
pop
cmpl
or
mov
xor
sub
ljmp
xchg
lock
ret
sti
jg
adc
aaa
movsb
scas
fcmove
mov
add
cmp
enter
gs
cmpsb
cmc
test
pop
enter
aam
add
sbb
inc
cld
int
add
icebp
jge
lea
pop
movsl
sub
xor
lods
aaa
sbb
fs
push
xlat
dec
xchg
or
out
movl
out
jbe
aad
fadds
js
cmp
and
cmp
adc
mov
inc
or
mov
dec
mov
sbbb
jg
pusha
jg
lret
mov
repnz
mov
lret
js
xchg
cmp
lea
ss
mov
rorb
gs
lcall
loop
mov
add
dec
mov
enter
pusha
pop
sarb
sub
and
sub
test
insl
inc
add
xor
jle
mov
lods
mov
push
xchg
icebp
push
cmp
inc
lds
add
mov
cli
adc
daa
cmp
or
addr16
clc
dec
outsl
xchg
scas
xor
int3
push
fimuls
push
sub
fmul
das
add
fisubrs
fadd
xor
pusha
add
out
loopne
pop
loop
test
mov
adc
jo
push
fstpt
shrl
js
adc
fimuls
bound
adc
and
lea
add
pop
or
lret
and
ret
dec
jo
mov
mov
aam
dec
insl
fistl
mov
mov
mov
subl
test
sub
cmp
add
dec
sub
push
icebp
jl
mov
outsb
shrb
imul
mov
pop
xchg
adc
jns
push
and
xchg
and
add
notl
call
js
fbstp
push
imul
mov
stos
dec
outsb
nop
mov
xchg
cld
and
ficompl
fldt
popa
and
adc
pop
pop
insl
outsb
pop
hlt
cmp
xchg
lods
add
pop
imul
xchg
and
imull
leave
or
incl
jmp
int
sbb
add
fwait
jnp
loop
test
push
sbb
sub
mov
rclb
fsubrs
loop
cmp
fmul
or
test
xor
in
jp
pop
add
out
lret
aad
icebp
mov
jp
ja
daa
fisttpl
adc
icebp
fs
push
and
arpl
into
mov
xlat
imul
sub
test
je
addl
test
aad
and
popf
leave
inc
mov
fwait
lret
jae
pop
jl
xorl
popa
popf
nop
mov
jno
sub
jl
lret
jmp
mov
ljmp
clc
jnp
es
imul
jl
and
movsl
cmpsl
negb
cmp
lods
mov
jmp
cs
mov
movsb
xchg
fdivrs
mov
out
mov
pop
pusha
movsl
xchg
ror
nop
xchg
adc
xchg
sbb
pop
test
mov
jb
inc
jg
es
jge
je
push
dec
ja
movsl
iret
rorl
pop
loop
pop
xchg
pop
fisubl
mul
xchg
push
mov
cmp
mov
fwait
jb
pop
adc
in
lods
enter
iret
jne
push
fnstenv
mov
xor
mov
imul
mov
add
int
sub
sub
xchg
hlt
or
push
sub
clc
lahf
mov
add
into
fstps
insl
xor
pop
mov
add
sbb
jne
shl
mov
or
pop
addr16
sbb
movsl
jbe
mov
and
loope
push
inc
cs
or
mov
or
fisubrl
stos
mov
mov
adc
sti
and
dec
imulb
xor
int3
mov
out
mov
leave
pop
ror
jb
stos
leave
leave
xor
rcrl
cli
scas
cmc
aad
xchg
or
incl
xchg
es
adc
out
mov
inc
jo
dec
push
or
push
xchg
ret
insl
inc
xor
push
xor
pusha
insb
or
orb
dec
aam
test
cmp
sbbb
pop
cwtl
inc
jmp
mov
adc
enter
aas
aad
mov
mov
fstl
sarb
cli
cli
out
xchg
pop
call
int
mov
imul
mov
cli
mov
ret
test
mov
leave
jnp
out
movsb
mov
cs
sbb
mov
iret
shl
mov
in
lock
xchg
cltd
outsl
sub
icebp
das
push
push
or
outsb
dec
daa
sub
imul
rclb
ffree
out
into
pushf
push
mov
int3
sbb
push
add
dec
xchg
inc
mov
fwait
inc
xor
imul
xor
insl
lods
or
push
sub
aam
add
sbb
bound
scas
mov
in
inc
jbe
mov
fs
xor
rcl
mov
lds
rcrl
adc
lods
lea
mov
sbb
in
sbb
ret
push
push
insl
adc
das
mov
lods
pushf
inc
scas
dec
mov
gs
push
xorl
mov
sbb
pop
pop
adc
add
rcrl
aaa
call
es
outsb
es
ds
fsts
fmulp
mov
jg
xor
and
pop
sub
jg
js
shl
jbe
or
mov
adc
sbb
test
lret
loopne
call
pop
aam
mov
pop
rorb
imul
xor
insl
cwtl
mov
idiv
push
sub
pop
decb
push
in
mov
stc
ror
dec
add
mov
lahf
cmp
or
and
sub
mov
ds
fdivp
popa
lods
inc
sbb
fisubs
or
rorl
lcall
push
mov
xlat
inc
push
push
add
cmp
jno
js
mov
fistpll
lret
in
xor
and
pop
push
js
imul
loop
xor
jbe
add
xor
leave
lods
pop
xchg
dec
in
js
stos
sarb
adc
and
movsl
adc
aad
xchg
mov
mov
adc
push
lcall
addr16
xchg
enter
inc
test
cmp
in
insl
ret
cmp
push
xor
aad
sbb
xchg
ds
and
mov
enter
push
inc
gs
and
sub
or
sub
paddsb
mov
push
mov
out
xchg
lods
in
fcmovnu
ds
sbbl
and
or
out
add
in
lret
push
das
xor
jne
std
xchg
cmp
dec
test
sbb
inc
xchg
repnz
insl
mov
iret
in
jo
push
lret
mov
out
cmp
xchg
xchg
xchg
and
jg
push
ja
cld
mov
mov
xchg
iret
mov
xchg
dec
mov
xor
mov
xor
sub
inc
mov
divb
and
lds
mov
orb
shlb
and
sub
sub
push
xchg
in
stos
mov
notb
fwait
das
bound
jns
push
and
fidivrl
mov
pop
and
loope
ss
sbb
mov
sub
adc
pop
popf
les
std
push
lret
daa
outsl
jmp
fisubs
stos
or
lods
stos
xchg
xchg
or
and
xor
sub
mov
mov
loope
lret
dec
pop
push
out
adc
push
jb
fdivrp
inc
jle
test
mov
out
xchg
call
cmpsb
xchg
lock
rol
adc
mov
adc
pop
cmpsl
std
lret
sub
dec
pop
sbb
dec
pushf
ss
pop
inc
call
lret
pop
loop
addr16
inc
addr16
stc
stos
out
mov
mov
or
out
hlt
into
cwtl
or
hlt
mov
dec
jno
aad
xor
repnz
mov
scas
dec
sbb
mov
shll
push
push
into
mov
adc
inc
cli
popa
xor
jmp
pop
test
out
xor
add
pop
add
jno
push
add
repnz
insl
leave
push
add
sbb
mov
sub
scas
add
lahf
mov
dec
adc
gs
pop
push
cs
fxch
mov
shrl
mov
or
pop
test
int
dec
in
lahf
dec
sarb
test
lods
mov
push
rol
clc
mov
jmp
cmp
mov
or
or
pop
sahf
fstps
ja
jmp
inc
adc
data16
addr16
add
in
add
jmp
and
mov
fwait
lods
stc
jmp
sbb
inc
repz
sti
sarl
xor
xchg
push
iret
jns
gs
sti
out
sbb
pop
lods
pop
add
fdivrl
add
int3
mov
gs
bound
cmp
jmp
cwtl
scas
adc
sub
jno
test
test
dec
call
bound
inc
add
imul
clc
sub
lcall
test
mov
lcall
cwtl
mov
sbb
lods
cmp
je
dec
fcomi
cmp
pop
push
pop
fisubrs
jo
push
out
jb
lahf
rclb
imul
xchg
ret
push
imul
fadd
inc
xor
add
loopne
dec
jo
or
icebp
ja
adc
lods
cmpl
push
clc
push
cld
jmp
xchg
add
xchg
sub
mov
pop
int3
cli
push
sub
ja
enter
nop
jo
notb
cltd
pop
pop
int
mov
xor
jle
jl
xor
xor
push
inc
push
shlb
jge
insb
push
test
stos
mov
xor
movl
sbb
sti
push
xlat
outsl
arpl
and
add
mov
es
add
jbe
std
testb
stos
popf
int
sti
push
mov
cmpb
adc
or
inc
pop
mov
jb
pushf
adc
sub
jb
inc
mov
jno
dec
jbe
in
ja
imul
inc
jns
pop
jl
xchg
mov
or
xor
orl
mov
or
iret
mov
lcall
daa
icebp
psubw
or
mov
sub
mov
adc
xlat
push
jge
ret
jns
std
and
div
leave
pop
imul
and
int3
pushf
out
lods
fnstsw
jl
cltd
dec
test
adc
mov
test
pusha
adcb
shlb
in
ds
mov
mov
pop
inc
test
jecxz
xchg
pop
rorl
into
push
aad
xchg
mov
inc
xor
sbbb
out
ljmp
mov
xor
mov
mov
cmpsb
test
enter
fiadds
inc
inc
mov
in
js
dec
movsl
and
jl
shll
inc
loope
lahf
cmpsb
data16
pop
je
movsb
push
roll
mov
fmul
dec
pop
pusha
push
pushf
sub
push
cmpsb
adcl
mov
imul
sti
pop
xor
imul
jno
loope
fwait
inc
rcrb
ret
inc
adc
adc
mov
cmp
sub
imul
loopne
adc
jno
inc
aam
daa
adc
add
outsl
repz
push
sahf
mov
divl
push
push
mov
inc
sub
and
xchg
in
mov
stc
mov
shrb
negl
pop
or
pop
cmp
dec
push
xor
std
ret
adc
sti
xlat
jno
add
xlat
and
fcomps
pop
xchg
push
jbe
push
sub
xor
dec
add
sbb
xchg
imul
inc
sti
xchg
adc
ret
fidivrs
adc
fyl2xp1
xor
mov
push
out
hlt
pop
pop
fidivrs
cmp
ficomps
fisubl
or
inc
cs
psrad
push
push
inc
mov
in
cmc
mov
popf
or
xchg
push
cs
pop
loopne
adc
adc
sbbl
jb
sahf
push
idivb
les
sub
popa
nop
jmp
aaa
push
sbb
cmpsl
jg
mov
fs
movsl
sub
mov
test
pushf
roll
pop
or
sahf
jle
inc
out
mov
adc
inc
add
fwait
xchg
lret
lcall
xchg
mov
js
rol
andl
jo
nop
xchg
pop
cmp
push
or
add
testl
fs
nop
incl
out
xchg
add
and
or
and
adc
js
pop
dec
mov
leave
lods
icebp
adc
dec
pop
xchg
shr
cmp
leave
in
inc
div
outsl
and
ds
pop
mov
gs
mov
roll
adc
in
and
enter
es
pop
xor
cmp
push
iret
mov
test
inc
jne
out
mov
enter
aad
movsl
out
push
lret
lret
sub
jge
mov
gs
cmpsl
sbb
bound
sbb
sub
pusha
adc
push
mov
push
cmc
ds
iret
rclb
push
sub
jae
adc
aam
shlb
add
mov
push
adc
cmp
imul
negb
xor
sbb
in
mov
jbe
jo
in
pop
ljmp
cltd
shrd
xchg
andb
jb
mov
pusha
int
push
mov
sub
scas
nop
stc
icebp
popf
pop
movsb
jmp
add
js
mov
lods
push
xorb
lea
jg
repnz
sbb
push
stos
pop
xchg
clc
movsl
enter
xchg
mov
test
push
push
ds
sbb
ljmp
sub
ss
out
dec
jmp
imul
leave
mov
xlat
jle
add
fmuls
pop
jecxz
and
mov
inc
fsubl
subl
addr16
ret
mov
fs
add
mov
pop
bound
pop
loop
aad
mov
lret
scas
imul
and
rolb
cld
mull
pop
pop
sbb
jnp
xor
nop
pop
sbb
xor
jne
dec
mov
dec
dec
std
test
sub
mov
sbb
ljmp
cs
fs
ja
loopne
les
adc
xor
les
jle
das
mov
mov
aas
and
dec
push
in
cmp
adc
cmpsl
cmp
push
dec
mov
mov
je
lea
adc
mov
imul
sbb
enter
jmp
popf
sbb
ds
mov
xchg
ss
ljmp
sub
pop
orl
bound
jnp
sbb
mov
add
sub
or
jns
test
or
rcr
dec
enter
outsl
jg
add
xor
adcb
mov
adc
das
scas
sbb
loop
xchg
xchg
xor
xchg
cmpsl
out
add
into
insl
xchg
and
mov
insl
in
pop
mov
test
push
inc
jae
dec
add
mov
lret
sbb
pop
pop
jnp
dec
mov
sbb
out
lock
add
movsl
adc
sahf
fprem1
xor
jbe
fs
in
dec
dec
stos
jae
push
test
repz
xchg
fdivr
aad
cmp
stos
dec
out
xchg
and
xor
lret
dec
iret
pop
push
jno
leave
or
ret
notl
jns
gs
in
in
push
mov
jno
jge
push
jnp
cmp
popf
cmp
adc
jecxz
pop
shrb
and
mov
pushf
sbb
mov
lods
insl
add
daa
xchg
adc
test
mov
push
inc
lret
dec
or
mov
and
iret
mov
and
sbb
push
sub
imul
out
ja
sbb
sub
imul
movsb
ret
pop
push
cmpsb
scas
les
cmp
jne
mov
mov
pop
imul
jge
nop
cli
sub
imul
jo
push
popa
ljmp
cmp
mov
movsb
aad
mov
push
and
and
cld
push
dec
sarb
imulb
movsl
fbstp
cwtl
out
arpl
popa
enter
cmp
mov
movsl
xor
xchg
jb
xchg
jne
or
outsl
pop
es
xchg
mov
xchg
adc
arpl
out
fiaddl
test
xor
add
xchg
xor
jmp
rolb
mov
mov
and
xchg
lea
jp
xchg
pop
xchg
push
inc
lea
nop
popa
inc
sbb
cmp
loope
mov
enter
push
shl
cmpsl
pop
dec
cld
and
push
xchg
in
cmp
lret
imulb
sub
les
mov
push
aaa
mov
ja
push
pop
lods
jnp
addr16
inc
dec
roll
scas
xor
push
std
test
push
add
fisubrl
or
sub
or
push
inc
cmpsb
cld
es
sub
insb
dec
xchg
test
fists
je
xor
jne
icebp
add
es
bound
lock
push
adc
push
mov
or
mov
and
xor
mov
bswap
or
std
and
push
lahf
inc
sub
lret
mov
add
lods
and
pop
outsl
add
jbe
mov
add
pop
xlat
scas
idivb
xor
push
loop
inc
mov
inc
inc
jl
sbb
inc
lret
add
sbb
in
mov
int3
int
fsubr
jbe
in
adc
sbbb
add
lcall
pop
xchg
bound
mov
adcb
pop
push
bound
pop
stos
movsb
xchg
or
pop
xchg
clc
int3
lds
dec
lret
sbb
lods
mov
sub
add
add
lcall
and
xchg
outsb
cmp
mov
dec
sar
xchg
jl
fbld
popa
sub
xlat
dec
rorb
jnp
xorl
in
aam
sti
push
jmp
jl
cmp
out
mov
or
cmp
leave
jecxz
bound
xchg
stos
jo
out
inc
ja
in
inc
int
out
into
mov
push
pop
push
sub
movsl
push
mov
dec
lea
sbb
fwait
sbb
mov
leave
aam
fisubl
inc
push
pop
or
add
or
int
insl
adc
and
push
xchg
js
add
aas
push
popf
fidivs
sti
cmp
and
dec
inc
rcll
sbb
or
dec
shll
jno
mov
sahf
push
rcr
fildll
mov
and
lahf
or
outsb
sub
mov
lahf
out
insl
ljmp
mov
inc
pop
lahf
fldl
jmp
fsubs
sahf
jge
sbb
fdiv
cmpsb
jl
movsb
fisttpll
mov
lahf
xchg
push
fistps
clc
xchg
enter
inc
and
xchg
push
into
mov
ja
adc
sub
lock
jbe
fsts
cmp
scas
sti
insb
fwait
push
add
stc
or
push
cmpsl
mov
mov
seto
add
in
inc
mov
pop
mov
push
and
sahf
stos
mov
fwait
js
jnp
mov
fucom
clc
add
push
nop
mov
push
xor
xlat
jg
jl
mov
iret
sbb
cltd
adc
dec
xchg
mov
mov
or
pop
orb
mov
add
mov
add
jae
pushf
and
loop
sbb
mov
mov
test
inc
mov
hlt
sub
aam
adcw
fisubs
pop
fsub
mov
mov
add
outsl
or
mov
into
icebp
ror
dec
insl
clc
in
and
test
arpl
push
fimull
repnz
sbb
lcall
pop
out
and
pop
mull
cli
adc
pop
addr16
or
jbe
shrb
mov
jne
rcrb
aaa
hlt
push
xchg
out
rorb
aam
fwait
out
out
pinsrw
dec
lea
jge
pusha
mov
add
xchg
sub
leave
ja
mov
lods
mov
inc
orl
int
adc
adc
std
repz
add
fldcw
mov
add
lahf
das
mov
xlat
pusha
push
dec
and
orb
int3
imul
enter
sbb
adc
ficompl
or
jnp
out
lret
pop
cmp
into
jmp
cltd
ljmp
push
pop
push
add
fcomps
in
fcoml
jge
adc
mov
mov
xchg
mov
loope
movsb
mov
jno
push
fldt
nop
ret
fcmovnb
rclb
push
out
lods
popl
mov
int3
sub
mov
in
jae
js
or
push
sbb
cmp
adc
jle
xor
dec
xlat
cltd
stos
psubd
xchg
outsl
jmp
mov
stos
jns
mov
div
imul
outsl
mov
push
and
ljmp
sub
roll
add
int3
dec
pusha
pop
dec
push
or
sub
loope
add
xor
inc
sbb
pop
mov
pusha
pop
inc
ja
sarb
mov
fcoml
pop
pop
repnz
xor
push
add
clc
jle
adc
in
in
ljmp
xor
pop
rcrb
out
adc
outsl
in
repnz
in
out
or
mov
jns
dec
sbb
fisubrl
mov
cli
daa
dec
cmc
cli
or
lea
push
sbb
xchg
push
daa
inc
mov
mov
insl
xor
syscall
mov
push
jge
pop
test
adc
xor
dec
sub
leave
xchg
mov
addr16
mov
cmc
mov
outsb
or
dec
lea
xchg
xchg
cmp
xor
leave
scas
bound
sub
pop
xchg
shrb
pop
cltd
imul
stos
pop
call
adc
lods
testb
or
lea
jno
push
test
leave
pop
jge
int3
inc
in
dec
iret
stc
xchg
push
inc
popf
cmp
push
out
ret
and
pop
stos
insb
or
mov
inc
outsl
pop
mov
mov
sub
call
movsb
das
jnp
push
or
mov
jmp
adc
mov
add
stos
xchg
dec
lret
jo
test
sbb
out
push
add
sbb
jmp
stos
mov
std
xorb
mov
pop
mov
stos
push
lods
mov
pusha
incb
aam
lret
xor
adcl
jae
cli
lds
sub
xchg
push
and
lea
mov
loopne
jns
lock
ds
mov
sbb
lods
dec
or
aam
in
rcrl
mov
pop
lret
mov
cmp
mov
jae
adc
shlb
or
cs
aaa
inc
adc
pop
test
bound
add
pop
adc
xor
push
fsubrs
cltd
cltd
dec
xchg
mov
pop
jnp
xchg
rclb
ss
shr
test
jg
int3
adcl
adc
dec
out
cltd
xor
push
cmp
mov
or
in
fwait
pop
lods
mov
cld
pusha
xor
mov
and
jle
dec
lds
fldt
jb
into
ret
je
sarb
cmpsb
shll
add
adc
cmpsb
loope
mov
fsub
ja
jae
add
test
or
adcl
mov
push
mov
mul
fists
int
or
ror
fwait
mov
and
add
xchg
pop
pop
movsl
sub
xchg
and
xorl
add
jmp
xchg
pop
jecxz
sbb
movb
xchg
scas
imul
cmc
adcb
into
nop
xlat
mov
inc
fistpl
xlat
lea
aas
fsqrt
hlt
out
push
mov
sbb
enter
or
inc
and
mov
inc
push
push
in
cmc
imul
ja
pop
aam
dec
sbb
jg
mov
adc
int3
jg
mov
mov
dec
xchg
lock
out
mov
je
cmpsl
mov
fbstp
in
cmp
push
inc
pusha
xchg
arpl
sbb
dec
int3
push
jns
xchg
pusha
jle
or
mov
lahf
add
xchg
mov
mov
pop
jo
sqrtps
jecxz
mov
cmp
sub
cs
and
adc
add
in
mov
jbe
inc
inc
pushf
shlb
cltd
filds
test
pop
xlat
or
inc
push
push
enter
sub
bound
nop
loope
mov
jecxz
mov
loop
aas
mov
dec
test
jne
out
xchg
dec
and
scas
and
div
xlat
push
jp
add
inc
pop
fcoms
pop
xor
cld
jns
adc
jno
orl
adc
xor
mov
jne
adc
decl
mov
xchg
add
lea
ret
and
xor
repz
and
pop
stc
cmpsl
aaa
gs
cli
fs
daa
and
rcll
lock
arpl
addb
xchg
mov
and
mov
and
sahf
loop
in
jb
sub
incl
mov
cld
repz
pop
loope
popl
shlb
or
add
jg
movaps
clc
xchg
xchg
fimull
xchg
test
stos
or
xchg
xor
xor
sbb
into
dec
and
and
push
mov
ja
and
sbb
jmp
and
shlb
shlb
jl
or
xor
inc
jmp
shrb
cmp
cmp
adc
sbb
add
cs
or
adc
adc
fnsave
enter
mov
dec
fcompl
sbb
mov
xor
mov
stc
aad
repnz
rcrb
es
inc
shll
push
or
cmpl
pcmpgtd
cmc
add
addr16
xlat
sbb
push
inc
cmpsb
data16
push
add
jno
ljmp
ja
ja
test
jge
push
jo
in
loope
loope
xor
cmp
mov
xor
fidivs
std
out
mov
add
push
xchg
add
loope
shrb
add
cmp
mov
inc
jle
stos
fisubl
out
popf
lea
mov
cmp
xchg
cmc
jl
lds
pop
xlat
mov
adc
dec
mov
or
push
mov
pop
aaa
push
popa
jmp
repnz
dec
das
add
dec
inc
mov
push
test
mov
mov
pop
mov
fistpll
sbb
dec
cs
jns
add
cmp
xchg
mov
add
test
add
xor
pop
lahf
mov
and
lret
fs
or
sbb
add
ljmp
cmp
je
je
pop
mov
sub
sbb
movsb
jae
idivb
stos
mov
cmp
add
jp
jle
adc
andnps
jmp
push
xorb
or
inc
adc
test
imul
daa
imul
pop
shrl
idivl
lret
mov
roll
stos
aam
fsubl
inc
movsl
lcall
nop
jnp
push
rcl
in
mov
xor
inc
mov
xchg
jae
stos
sbb
sub
bound
xlat
dec
dec
dec
stc
das
mulb
mov
xchg
mov
clc
adc
mov
push
xchg
ja
xor
mov
xchg
popf
clc
je
scas
xor
cli
cmpb
jns
pusha
data16
inc
out
cld
mov
sbb
push
push
clc
data16
fsubrs
js
inc
xchg
xchg
or
ljmp
rorl
inc
inc
es
sub
push
adc
xchg
dec
les
outsb
or
loope
lods
fbld
lods
push
adc
cmp
ret
sub
mov
fsubs
sub
sti
cltd
loope
imul
cmpsl
jnp
stos
mov
es
setne
clc
inc
dec
jecxz
pop
jecxz
cmp
mov
adc
lds
test
mov
shl
rcrl
ljmp
sbb
subb
fistpl
movzbl
adc
add
loop
rep
test
xchg
xchg
pop
enter
popf
xorl
inc
lods
xor
or
les
stos
mov
adc
add
mov
out
jg
pcmpgtd
jb
inc
xchg
mov
clc
mov
or
push
bound
xor
les
scas
jae
mov
cmpsl
sti
xchg
fisubrl
sbb
mov
pop
stos
mov
pop
sti
jb
popf
out
int3
icebp
cli
sbb
add
push
mov
insl
js
mov
outsb
add
aam
add
mov
aad
push
insl
jecxz
push
sti
adc
mov
push
dec
notl
inc
sbb
xor
xor
das
or
add
std
imul
sbb
lret
xor
sbb
mov
sti
xlat
jo
push
nop
or
arpl
addl
pop
lods
sbb
bswap
pusha
decl
aad
mov
mov
mov
xor
std
adc
and
add
aaa
xor
repnz
das
test
xchg
outsl
gs
push
pop
jg
cmp
in
fsts
push
aaa
dec
jbe
and
push
xchg
adc
xchg
shlb
cmpsb
mov
push
cltd
pop
fldl
mov
hlt
jmp
lea
repnz
pop
pop
jmp
mov
dec
inc
cmc
repnz
or
jl
fldt
aam
mov
inc
dec
adc
notl
xchg
mov
sahf
jp
jo
or
scas
push
xor
inc
loope
in
movsb
inc
adc
cmp
mov
jbe
xor
mov
cmc
iret
push
iret
cs
int3
adc
add
mov
inc
outsl
test
mov
xor
in
adc
sub
out
aaa
outsl
into
imul
sub
aad
orb
jne
rcrl
sar
jno
std
pop
js
repz
stc
fcmovnbe
int
aad
hlt
mov
mov
mov
dec
dec
pop
popa
jno
dec
push
adc
xchg
pop
mov
mov
hlt
ret
or
cld
jmp
mov
push
jb
clc
push
xor
and
lcall
popf
jo
lcall
iret
xchg
cmp
jno
mov
mov
pop
jmp
mov
dec
scas
addr16
dec
je
stc
push
xchg
xchg
enter
add
std
pusha
std
pop
aas
repnz
add
adc
lods
dec
inc
fisubrl
test
pop
adc
je
ja
cmc
xor
cmp
push
ds
lds
adc
pop
xchg
btsl
push
jb
insl
xor
xchg
imul
sub
adc
icebp
cmpsl
ret
stos
gs
or
lret
mov
fwait
hlt
mov
jp
and
xchg
jg
stos
or
scas
loop
setno
std
cmp
mov
filds
cmpsl
mov
setl
mov
test
sahf
push
mov
xchg
out
jns
incb
les
inc
mov
and
push
jp
das
dec
cmp
xchg
xorb
fwait
xchg
sahf
cs
sarb
xlat
adc
xchg
mov
cs
in
sarb
adc
dec
pop
xor
sti
pop
into
mov
test
push
scas
mov
mov
xor
mov
jle
xchg
int3
sti
or
js
mov
add
jmp
jg
fdivrl
mov
mov
mov
aaa
js
push
sub
in
add
lds
in
in
iret
icebp
aam
xor
in
inc
gs
pop
pop
xchg
test
stos
push
mov
daa
sahf
stos
jl
mov
pop
xor
jbe
jmp
jns
or
jg
fs
or
rorl
sbb
pop
ret
pop
clc
push
stos
sbb
imul
int
mov
roll
into
mov
js
cmp
les
fadd
ja
jns
ror
leave
fmull
dec
adc
xchg
in
stos
rclb
adc
mov
sub
fdiv
movsl
inc
and
fidivrl
out
sbb
lcall
aam
int
rcll
lret
out
jmp
jg
std
jp
popf
test
mull
cltd
mov
and
adc
js
dec
sub
fldcw
shr
cld
hlt
in
sbb
lcall
jb
inc
pop
jno
add
dec
flds
mov
sbb
notl
loopne
in
fldenv
sbb
dec
xor
sbb
pop
mov
outsl
int
mov
addr16
mov
dec
push
push
push
mov
or
inc
mov
je
pop
idivb
adc
cli
jno
adc
mov
shl
mov
scas
loope
loopne
aaa
cltd
imul
mov
loopne
push
sub
imul
subl
mov
jno
mov
mov
push
insb
push
cmp
shll
ret
lret
fistl
inc
xchg
sub
xchg
stc
cmp
push
clc
shrb
mov
subps
mov
pop
testb
ficoml
inc
outsl
mov
loopne
movsb
and
xchg
dec
and
sub
das
push
sbb
sub
fcmovnu
mov
pushl
adc
in
pop
test
enter
push
fistps
ja
pop
dec
or
mov
xchg
data16
push
mov
push
push
stc
fdiv
dec
mov
adc
bound
pop
mov
in
rcll
mov
cwtl
pop
cld
repz
aad
add
ret
popa
adc
sbb
fdivrp
mov
repz
outsb
leave
push
pop
xchg
sub
mov
nop
ljmp
mov
imul
xchg
xchg
xor
sbb
inc
mov
mov
testl
mov
bound
jo
lahf
je
and
insl
jle
jle
scas
lea
push
dec
ss
push
cmp
clc
ret
fwait
mov
adc
cld
stos
mov
out
repnz
and
jle
cmp
leave
divl
xchg
sub
movsb
inc
mov
shll
mov
jns
not
add
sar
cmp
popl
lret
push
ja
dec
cltd
mov
xchg
xor
inc
dec
inc
sub
insl
pushf
movsl
push
push
sti
mov
inc
mov
sbb
jbe
xorl
mov
jmp
mov
cmpsb
cmpsb
pop
jmp
and
push
push
iret
add
push
scas
mov
sub
xchg
sbb
and
rcrl
push
jb
inc
fsubs
mov
pop
hlt
sub
jp
cmp
out
push
add
mov
jg
sub
jns
cmp
cmc
lds
jg
mov
fldl
xor
xchg
or
inc
in
scas
add
inc
jo
fisubrs
mov
or
push
rorb
sbb
stos
push
jno
xor
jae
dec
push
pop
ds
dec
scas
add
pop
push
out
insb
cwtl
lods
dec
fucomi
sub
pop
jle
dec
loop
std
mov
sbb
std
xchg
andb
mov
add
stc
cmpsl
sbb
push
push
outsb
sbb
rcrb
test
push
lods
hlt
push
or
insb
call
xor
mov
ret
xor
add
push
fistpl
xchg
inc
inc
xchg
xchg
test
push
inc
vmovmskpd
out
push
sub
daa
xor
cli
ljmp
cmp
pusha
mov
cmpsb
jb
mov
scas
mov
mov
mov
ret
push
mov
sbb
mov
mov
ret
stos
fisttps
filds
pop
sbb
adc
loopne
leave
or
leave
xchg
push
mov
cmove
inc
sub
dec
add
clc
xchg
shr
sti
jp
jecxz
and
enter
add
cmp
outsb
clc
jp
mov
lret
xchg
xchg
stos
push
ss
push
jno
xchg
adc
cmp
popa
testb
dec
cmpsl
and
xchg
pop
je
mov
pop
mov
xor
mov
mov
ror
mov
inc
and
xchg
ret
insl
xor
adc
push
icebp
leave
in
push
test
or
mov
ja
mov
dec
mov
pop
in
or
jae
cmpsl
arpl
or
and
repnz
mov
dec
daa
xor
loop
dec
divl
repnz
sbb
adc
je
inc
and
fisttpl
scas
pop
sub
in
cwtl
enter
xorb
add
sub
cltd
test
xor
iret
enter
push
sarl
cmc
mov
test
ret
ds
aad
cmpsl
repnz
push
shlb
dec
jge
jne
popf
or
push
xchg
jbe
stos
xlat
test
cwtl
jmp
push
mov
das
std
pop
imul
popa
push
pop
popa
jb
push
scas
cmp
and
inc
jle
lock
dec
add
mov
mov
loopne
int
stos
mov
adc
cmp
mov
hlt
xlat
xchg
jne
fucomp
enter
fsubrp
or
cltd
xchg
cmp
popa
jae
mov
call
imul
stos
xchg
inc
xlat
mov
ret
mov
dec
inc
and
pop
data16
mov
call
stc
jl
aas
and
pop
inc
add
add
stos
push
mov
mov
jg
cmp
pusha
ja
sbb
mov
into
mov
repz
fsub
insl
ss
push
add
pop
cs
test
jge
jbe
cwtl
or
mov
xchg
incl
sub
xchg
sbb
sbb
rcl
and
lret
dec
int3
ret
mov
outsb
mov
xchg
xchg
faddp
nop
adc
pop
xchg
ds
jle
mov
sbb
mov
xor
out
mov
in
aad
xor
sahf
fisubrs
mov
fs
inc
dec
jg
enter
push
push
dec
push
xor
or
pop
cmp
xlat
cmp
mov
jg
jns
xorl
repz
add
dec
or
iret
gs
mov
enter
push
mov
and
pop
popf
scas
jbe
xchg
xchg
or
test
test
dec
out
test
clc
cmpsb
mov
int
rol
inc
mov
mov
xor
in
pop
lock
imul
adc
ljmp
inc
jb
or
call
push
mov
mov
popa
cld
xchg
push
mov
mov
inc
mov
cmpps
sahf
nop
dec
das
and
fisttpll
fs
push
jle
pop
adc
sub
sub
lfs
frstor
addr16
sahf
pop
dec
inc
cmp
movsl
cmp
push
test
jmp
push
dec
je
or
and
inc
sub
stc
inc
sub
cmp
cld
adc
pop
pop
ret
adc
dec
xor
hlt
outsl
sub
shrb
push
out
stc
loop
sub
loopne
stc
jge
sub
xchg
xchg
pop
mov
out
cltd
sub
stos
int3
rorb
cwtl
mov
insb
das
in
xor
jo
shl
mov
or
test
aad
sub
bound
mov
add
sahf
pop
pushf
pop
mov
cmpsb
inc
and
push
push
sti
inc
jp
and
test
xchg
push
pop
std
add
sub
sub
mov
daa
lret
clc
decl
xchg
nop
pop
lcall
jns
pop
add
xchg
fs
adc
cmp
aaa
fcoms
insb
adc
push
outsb
mov
push
jae
push
dec
std
into
faddl
inc
add
insb
add
fimull
sub
dec
pop
sbb
je
sbb
shl
insl
pop
xor
xchg
jo
pusha
call
insb
sbb
int3
mov
call
xchg
out
in
inc
fnstenv
mov
mov
cmp
clc
mov
mov
or
push
mov
mov
mov
int
ret
xchg
xor
mov
in
fcmovnu
out
xchg
adc
fcmovu
sub
cmp
pop
push
xchg
daa
fs
sti
out
push
push
lcall
fsubrl
divb
sbb
jle
stc
xor
jbe
push
in
inc
xchg
jle
nop
call
cmpsl
add
out
adc
pop
repnz
mov
pop
nop
dec
dec
xchg
or
and
mov
fdivr
dec
cmc
popa
cmovae
mov
stc
shlb
pop
cmp
rcrl
or
jo
aaa
and
cltd
sbb
fadds
mov
into
dec
mov
lock
addl
pop
aas
push
sub
fwait
cmp
xor
jle
cmpsl
test
jp
mov
add
data16
loope
call
stos
sti
daa
xlat
ljmp
js
popf
sarb
sbb
jmp
dec
cmp
mov
pop
add
notl
and
sahf
int
insb
inc
call
and
repz
xor
insb
aas
jmp
xchg
sbb
mov
loopne
lret
mov
idivl
lods
lods
jle
cs
mov
push
outsb
or
adc
in
or
xchg
pushf
frstor
add
popf
inc
pop
xchg
inc
cmp
push
push
pop
sub
adc
pop
fidivs
dec
xor
adc
cmp
cmp
pop
loope
aaa
mov
jmp
arpl
cs
jno
xor
push
mov
sub
jnp
xor
mov
xchg
in
lock
popa
or
push
movsb
and
imul
push
outsb
imul
or
test
dec
sbb
pushf
sbb
rolb
dec
pusha
sti
xor
test
shlb
rcr
leave
push
push
and
shrb
movb
sbbb
in
incb
mov
int3
cld
xchg
inc
fmuls
push
ja
ss
addr16
fincstp
ss
mov
and
pop
rclb
hlt
xor
mov
mov
out
lods
mov
or
movsb
push
xchg
aas
rcll
pop
nop
mov
imul
push
loop
fsubr
sbb
mov
test
test
inc
push
mov
dec
test
shll
sbb
xor
movsl
ret
push
mov
jmp
int3
and
xchg
xchg
or
inc
jae
inc
add
cli
mov
jns
mov
out
and
cmp
and
mov
test
movsl
aaa
je
dec
lock
fildll
notl
int
pop
pushf
jmp
fsubrs
cli
ficoms
pushf
adc
bound
fwait
push
leave
adc
sbb
add
inc
and
out
or
dec
cwtl
mov
push
filds
xchg
xchg
mov
xor
cmp
pusha
or
xorb
pop
xor
pop
jle
jg
lahf
data16
in
mov
xchg
dec
test
iret
pop
push
seta
fidivrs
sub
jno
test
mov
out
pavgb
mov
push
inc
add
mov
xchg
mov
xchg
adc
sbb
mov
and
xor
pusha
add
push
in
stos
shrb
xor
sti
int
nop
xor
repz
adc
xchg
cltd
adc
jecxz
xchg
mov
shrl
jb
sbb
mov
repnz
mov
mov
mov
sahf
and
fst
aad
mov
imul
push
mov
cmp
lahf
xchg
sbb
cltd
test
cmp
into
mov
fmuls
push
aaa
pop
movsl
inc
sbb
inc
sub
pop
ljmp
popa
mov
fldt
mov
pop
xchg
jno
scas
lods
xchg
dec
pop
test
xlat
push
push
add
popf
mov
test
pop
lret
into
cwtl
push
mov
loop
push
sbb
faddl
pop
pushf
sbb
jl
pop
xor
xor
into
int3
das
mov
xlat
stos
jbe
push
popf
repnz
fistpll
and
or
push
fs
adc
push
sbb
movsb
dec
mov
gs
sarb
aad
inc
cmc
pop
pop
imul
mulb
pop
sbb
repnz
sar
sub
add
and
test
imul
cmpsl
mov
mov
pusha
clc
rcr
inc
sbb
loope
cld
lcall
stos
push
dec
cltd
and
fsubr
jae
sub
aad
ljmp
insl
dec
movsb
mov
scas
xor
fidivl
sarl
inc
fnsave
inc
jg
xchg
pop
outsb
cmpsb
ja
or
sub
daa
mov
mul
pop
add
es
and
or
jl
inc
aam
cmpsb
push
inc
dec
sarb
mov
adc
add
inc
xchg
add
ljmp
in
inc
movsl
testb
pop
shrb
push
mov
lahf
stc
and
xchg
mov
nop
mov
es
add
testl
mov
pop
mov
push
mov
in
adc
int
mov
daa
sub
and
sub
mov
sbb
je
mov
cmp
addr16
sub
clc
int
jae
jb
inc
popf
out
imul
call
pop
gs
insl
or
xorb
mov
sti
and
fwait
repnz
cld
cmc
aas
or
mov
in
or
jmp
add
jne
push
push
or
or
mov
pop
mov
jge
test
pop
cmp
push
inc
fsubrs
push
xchg
ficompl
mov
pop
insl
ja
out
ss
stc
pushf
jmp
sti
inc
jae
and
inc
jmp
insl
xchg
cli
push
xor
dec
insb
bound
push
shll
enter
jo
mov
xchg
into
adc
or
adc
dec
sbb
scas
inc
lret
int
push
add
out
orl
insb
stos
pusha
or
insb
or
jnp
stos
mov
inc
inc
or
xor
lock
sahf
pusha
sbb
pop
or
jo
sub
inc
cmp
leave
mov
insb
add
lods
mov
inc
addr16
adc
aad
adc
cmp
mov
fcoms
inc
jle
xlat
sbb
xor
push
pop
xchg
cwtl
popf
pop
adc
mov
jl
mov
xchg
neg
push
shlb
scas
out
cmp
or
mov
jne
adc
inc
jno
fistl
jnp
lods
rcll
mov
jb
xor
fwait
cmc
cmp
xchg
cmp
inc
addr16
pusha
ret
ja
imul
cmp
out
fwait
push
in
xchg
push
fwait
in
leave
cmp
cwtl
pop
sub
xchg
aaa
add
popf
push
xchg
sub
xchg
xchg
xor
out
push
and
xor
fdivrl
pop
inc
cld
daa
outsl
ss
or
repz
scas
xchg
jo
jo
add
sbb
or
adc
sub
enter
push
sub
push
push
clc
cld
inc
jno
add
fdivrl
pushf
and
sbb
pop
mov
test
pop
jp
stos
lods
arpl
loop
mov
mov
jecxz
mov
inc
pop
or
jge
pop
lret
notl
jno
mov
fildl
adc
push
lock
xchg
cmc
repz
stc
arpl
loop
mov
add
jle
mov
mov
dec
mov
xor
aas
jecxz
or
insb
add
sub
xchg
sbb
pop
nop
out
es
mov
jb
xor
inc
jae
xor
mov
mov
addr16
xor
movsl
rcll
lahf
push
ljmp
sub
jle
and
xchg
sub
sbb
ss
orl
call
mov
mov
push
pop
adc
sbb
mov
pushf
mov
cld
sarl
and
mov
idiv
jns
mov
mov
cmp
mov
cld
push
iret
out
mov
cld
add
cmpsb
out
xor
sti
clc
ret
lods
cmp
dec
pop
lds
sbb
ljmp
fisubrl
dec
mov
push
loop
insl
js
mov
bound
addr16
ror
cmp
mov
stos
hlt
mov
int3
mov
push
jnp
stos
mov
aas
pop
in
fstps
lcall
sbb
arpl
cmp
pop
xchg
and
clc
xchg
sbb
mov
push
adc
stos
push
orb
jg,pt
fabs
pop
mov
insb
xor
push
in
in
cltd
popf
adc
mov
punpcklwd
push
jge
rcrl
imul
clc
mov
jl
imul
iret
mov
inc
ret
and
repz
push
adc
aad
insb
mov
enter
movsb
push
in
sub
and
or
mov
push
and
and
sbb
or
icebp
or
fidivs
sub
ds
clc
fdivrl
mov
inc
shrb
test
idiv
push
cs
iret
or
and
sbb
les
movsb
or
mov
addr16
xchg
test
clc
pop
les
cmp
pop
add
mov
cmpsb
push
daa
cs
je
add
je
push
je
bound
xorl
dec
lahf
mov
or
lahf
es
rclb
jmp
dec
cmpsl
or
mov
dec
pop
sti
test
adcb
mov
and
rclb
repnz
xor
mov
xchg
and
out
leave
mov
test
rcrl
addl
jle
sbb
adc
lahf
push
mull
cltd
mov
fbld
test
xchg
loopne
arpl
sbb
jp
push
or
push
pop
pushf
or
int
dec
jae
in
int
push
out
int3
cmp
je
mov
push
arpl
or
push
xchg
movsb
push
add
sub
lds
mov
repnz
js
push
dec
inc
xor
loopne
cmpl
test
pop
arpl
xor
mov
incb
aas
in
jge
jo
mov
add
xor
push
out
adc
les
mov
or
pop
hlt
std
pop
fldl2t
push
sti
in
adc
sub
dec
xchg
jne
in
jno
add
cmc
jp
mov
jecxz
pop
es
or
inc
pop
xlat
outsb
and
jae
fcmovnb
fstp
dec
pop
ja
lea
adcb
push
cmc
cmp
mov
cwtl
or
push
int3
int
leave
dec
xor
pop
lret
jnp
inc
aaa
jo
aas
cltd
repnz
or
mov
jge
mov
add
inc
cwtl
in
push
dec
jle
icebp
or
jns
dec
adc
mov
sbb
pop
and
or
fxch
sarb
enter
cmc
call
int
ret
bound
test
addb
or
aas
repz
and
adc
ljmp
lods
mov
aad
incb
mov
push
dec
and
sbb
sbbl
std
out
test
ret
jle
stos
cli
stc
lahf
pop
test
mov
and
xor
or
syscall
ret
push
test
sahf
out
shll
mov
pop
sbb
push
sub
icebp
test
push
dec
xor
xor
or
adc
sti
ret
jb
aad
lahf
je
dec
insl
mov
sbb
cmp
mov
pusha
dec
jecxz
clc
es
pusha
or
and
push
dec
pop
adc
ss
mov
mov
inc
push
and
mov
mov
cmp
pop
pop
xchg
mov
jbe
mov
mov
mov
xchg
jo
test
iret
dec
cmpsl
jl
rorl
ljmp
adc
mov
cmp
ret
cmpsb
notl
push
je
push
mov
adc
test
sarl
pop
inc
mov
pop
sbb
push
xchg
pop
cmp
cmp
jmp
dec
xor
lods
sub
xchg
jns
mov
out
adc
ret
xor
push
in
mov
mov
mov
cmp
lret
pop
lret
mov
jo
mov
js
in
mov
and
movsb
xor
xor
mov
leave
aad
xchg
sarb
mov
jo
icebp
or
shr
rclb
sub
negl
mov
mov
aad
jbe
mov
adc
cmp
imul
adc
out
bound
outsb
sbb
jg
testb
cmpsb
aaa
jnp
popa
imul
rcrl
jge
sub
xchg
aas
fsubrs
pop
jnp
cmp
sti
movsb
adc
in
mov
pop
shlb
shlb
sub
dec
mov
mov
mov
orl
jge
jns
ret
bound
jns
cmp
dec
cmpsl
pop
imul
mov
jb
cmp
pop
push
mov
test
ja
adc
lcall
pop
sub
pop
out
cmpsl
scas
imul
stos
xchg
pop
mov
outsb
xor
inc
xor
pcmpeqw
push
and
adc
sbbb
mov
push
and
push
dec
repz
fs
mov
shlb
push
pop
sub
push
add
stc
aas
shll
mov
imul
iret
push
mov
fs
insb
mov
xchg
add
or
sub
enter
subb
test
sub
cmp
jl
scas
add
mov
or
mov
rorl
inc
add
push
je
cmp
xlat
out
adc
sbb
imul
push
inc
mov
cli
aaa
aad
loopne
push
or
pop
cltd
aaa
ret
and
ss
pop
lcall
pop
les
jp
xlat
xchg
xor
xorl
add
out
jb
add
loope
cmp
add
add
jg
js
jb
push
jbe
mov
adc
sbb
or
insb
stos
movl
push
call
nop
iret
ret
iret
or
sub
jae
ret
fiadds
or
loopne
sbb
ficoml
and
andb
insb
sbb
mov
and
pop
push
scas
inc
jae
xchg
stos
push
dec
mov
hlt
cltd
cmp
cmp
fnstcw
lods
out
or
sub
std
jno
std
je
shrl
mov
xlat
sbb
fstpl
popa
les
push
xlat
xchg
int3
pop
fwait
ja
imul
gs
scas
pop
pusha
and
push
fisubs
xchg
repz
call
in
int3
jecxz
movsl
in
lods
out
lods
dec
jmp
inc
xor
lret
aas
lds
push
mov
fdivrs
insl
adcb
sbb
mov
les
leave
add
jae
push
jo
lea
xor
mov
stos
or
pop
pushf
testb
xchg
movsb
add
lret
cmp
or
mov
dec
jge
js
and
xchg
in
xchg
movsl
or
sub
xchg
xor
lods
push
je
ds
daa
jg
test
pop
lahf
dec
mov
fwait
mov
inc
xchg
insl
sbb
and
cmpsl
sbb
fcomps
lret
popf
pop
or
and
shlb
pop
hlt
cmpsl
push
lock
push
mov
add
cli
xchg
int
mov
pop
xchg
stos
sub
push
sub
mov
mov
mov
inc
and
out
sbb
mov
fwait
or
outsl
cmp
stos
ja
cmp
ljmp
out
inc
pop
dec
and
mov
gs
jecxz
idiv
jg
test
adc
sbb
jmp
in
inc
icebp
mov
insl
fidivl
hlt
inc
mov
cli
xchg
inc
data16
repz
cmp
lret
divl
fwait
ja
out
ret
popa
cs
nop
cld
jae
jns
loop
outsl
xlat
push
filds
shl
mov
xchg
dec
test
dec
cmpl
sbb
xchg
cltd
sub
int3
push
shrl
subl
mov
lret
xchg
xchg
addr16
clc
pop
inc
les
mov
sub
jge
push
pusha
pusha
movb
xor
dec
xor
jae
push
xchg
mov
xchg
sbb
or
sub
or
dec
cmp
sub
add
cmp
cld
xor
das
xor
add
cmp
lea
sub
xchg
sub
jo
and
out
dec
cmp
stc
jbe
icebp
push
mov
sbb
xor
test
lods
divl
es
call
dec
pusha
cltd
jb
mov
rcl
mov
mov
lret
daa
or
mov
dec
ja
add
mov
pop
cmp
test
int3
les
mov
mov
sub
sub
cmp
outsb
stc
mov
inc
rcrl
mov
jmp
in
out
inc
dec
lods
inc
lea
dec
pop
iret
outsl
or
push
shll
icebp
push
das
dec
repnz
mov
fsubrl
cmpsb
jle
cmp
and
cmpb
xchg
push
stc
imul
insl
fiaddl
and
and
mov
orb
sbb
lock
ss
cmp
cmc
sub
mov
stos
xor
incb
cli
push
popa
ss
aas
cmp
mov
in
sub
push
fidivrs
mov
or
dec
shl
stos
leave
int
dec
cmp
fnstenv
testb
test
fisubrl
inc
xor
jecxz
adc
into
xor
aaa
int3
imul
icebp
dec
and
das
sub
xor
repz
scas
inc
out
or
pop
test
cmp
popf
sti
pusha
cli
xchg
inc
xchg
mov
jbe
pushf
dec
add
lds
mov
push
loope
or
or
idivb
and
dec
cmpsb
sub
jecxz
push
in
stos
sub
push
addr16
xchg
mov
or
je
mov
cmp
jecxz
push
xchg
je
mov
jmp
outsl
jg
cmpsl
outsb
icebp
jne
xor
mov
and
adc
lahf
xor
push
adc
nop
jge
stc
mov
xchg
and
insl
decl
mov
hlt
or
or
or
repnz
out
pushf
pop
jle
stos
lods
ja
icebp
subb
fbstp
les
xor
mov
xor
iret
inc
jp
pushf
call
fnsave
outsb
inc
enter
sarb
xor
mull
mov
pop
push
repnz
or
xorl
movsb
xorl
lret
mov
cmp
loopne
jo
cld
enter
mov
jl
sub
fsubrs
pushf
nop
test
lods
add
adc
cmp
and
stos
int
hlt
adc
push
dec
roll
int3
std
mov
and
dec
xchg
push
jo
shrl
cmp
xlat
mov
movsl
ss
mov
stos
push
daa
movsb
push
sarb
mov
mov
lock
xchg
mov
repz
and
push
out
gs
add
inc
shl
out
loop
sub
dec
pushf
addb
je
cmpsb
inc
stos
add
sub
cmp
jbe
leave
jb
iret
cld
stos
sbbl
ret
std
adc
mov
sub
mov
popf
stc
sti
pusha
mov
or
mov
push
sub
inc
mov
jnp
xchg
jno
cmp
adc
rcrl
mov
xchg
xor
lods
xor
mov
int
cmp
sub
mov
jb
in
pop
ret
outsb
pop
mov
jp
sti
mov
std
in
pop
and
dec
xchg
mov
mov
int3
int
mov
ret
adc
mov
push
stos
pop
jo
adc
imull
scas
mov
jae
jge
mov
icebp
or
jae
xchg
insl
mov
cmp
xchg
test
or
inc
mov
sahf
sbb
mov
movsl
adc
cs
lock
cmp
jne
fcmovnbe
sbb
sub
pop
jns
mov
push
call
sub
popa
ret
sbb
mov
sbb
popa
and
mov
sub
lret
lahf
dec
add
stos
jo
mov
and
cmpsb
adc
aaa
loope
shrb
ja
cwtl
push
pop
rorb
mov
dec
dec
add
xlat
enter
xor
stc
inc
leave
jmp
outsb
ja
mov
out
popl
pop
aaa
xchg
sub
mov
adc
rolb
mov
mov
out
pop
js
rdtsc
pop
mov
fdivrl
push
xchg
push
or
nop
jns
sahf
sub
popf
mov
push
mov
sbb
fbstp
add
adc
mov
movsb
mov
ja
std
cwtl
popa
ds
ljmp
or
into
into
push
fistpll
js
adc
mov
int
and
mov
repz
in
dec
test
sbb
loope
mov
push
sbb
cmp
mov
add
push
jmp
rcr
inc
out
bnd
mov
jo
sbb
xchg
xchg
mov
mov
lret
in
mov
cmp
shr
or
jg
xchg
loop
xchg
xor
xchg
outsl
out
pushf
nop
sub
daa
in
movsl
inc
push
lock
lcall
jg
mov
int
fists
cld
jmp
sub
push
add
faddp
jl
sti
out
pop
push
in
dec
incl
shrl
enter
pusha
sti
movsb
push
xchg
mov
inc
movsb
mov
cmp
mov
ja
jp
add
sbb
jns
iret
scas
jl
jne
fcompl
dec
je
and
cld
inc
or
mov
fs
pop
jmp
lret
inc
ja
sti
testl
push
jg
mov
mov
stos
lea
adc
sbbl
fdivrl
sub
adc
mov
adc
rcrl
popf
iret
xlat
lock
sarb
loope
adc
push
pop
mov
je
je,pn
imul
push
rcl
and
ljmp
fsts
stos
shrb
das
dec
push
mov
jns
stos
cmp
leave
xchg
mov
and
sbb
repz
inc
cmp
int3
push
inc
jb
add
lcall
fstps
or
adc
inc
sbb
push
jp
xor
lds
push
fldenv
xor
ret
or
aas
mov
and
push
lea
cmp
fdivl
test
test
jnp
in
and
xchg
fstpt
aad
repz
daa
negb
jbe
movsb
pushf
test
add
adc
jle
lods
sti
loopne
and
sbb
mov
push
push
jge
imul
push
xor
mov
clc
lock
xchg
bound
ljmp
add
out
or
ds
mov
popf
push
dec
aad
fcomi
int3
fnstsw
cmp
mov
jno
call
cld
cwtl
pop
mov
lcall
outsb
scas
sbb
push
mov
rcll
cs
push
stos
repz
mov
addr16
shl
inc
push
mov
cs
mov
jmp
pop
lret
jp
cmp
jecxz
xor
lods
loope
push
jno
sbb
data16
and
outsl
push
stos
test
movsl
jmp
add
xchg
pushf
xlat
cwtl
pushf
jge
or
ss
call
mov
lds
add
loope
or
das
jp
mov
popf
loop
fisubl
cmpsb
mov
inc
pop
iret
hlt
mov
aaa
and
xchg
faddp
or
sub
rcr
add
xchg
loop
lea
jae
mov
cmpsl
adc
jmp
adc
and
stos
fisubl
ja
mov
xchg
cmpb
imul
movl
insb
or
mov
inc
jmp
and
shlb
pop
cwtl
fisubl
shr
aas
call
icebp
ja
dec
xor
sbb
pop
mov
push
enter
es
cmp
and
pop
mov
mov
pop
jbe
sbb
movsb
jmp
jp
gs
mov
cmpsl
xchg
mov
test
movsb
push
mov
cli
cmp
rorl
sbb
pop
cld
std
sbb
sbb
mov
xchg
xor
fwait
mov
out
popa
push
push
xchg
sub
mov
or
fwait
sub
inc
mulb
ss
mov
cmp
lods
leave
jmp
cmpsl
aam
aad
mov
shlb
adc
lcall
jecxz
jae
pop
loope
cli
cmp
into
loopne
sbb
aam
pop
push
pop
fimuls
mov
les
dec
sbb
lahf
cs
sub
test
xchg
data16
mov
adc
inc
fnclex
lret
icebp
push
inc
pop
jae
loopne
pop
or
icebp
movsl
cvtpi2ps
xchg
pop
test
pushf
mov
mov
mov
fs
out
jecxz
in
and
adc
arpl
cltd
sbb
adc
and
mov
popa
dec
addr16
jo
jbe
mov
add
xor
lea
dec
test
nop
jb
scas
mov
pop
adc
rol
test
xchg
sub
dec
insl
inc
aas
sbb
and
sub
xchg
inc
lds
std
or
pusha
mov
add
aam
pop
jae
sbb
adc
popf
jl
in
jb
nop
jg
lods
cmp
pop
stos
fldl
outsl
ds
stos
arpl
imul
cmp
or
sarl
pop
inc
cwtl
fcoms
sub
stos
fstpt
xchg
aam
jl
jecxz
std
ja
push
js
or
inc
push
ror
fisubs
ja
mov
aas
loop
loop
sbb
push
mov
fdivl
cld
outsb
test
imul
mov
scas
cli
repnz
lcall
push
xlat
add
js
arpl
addr16
cmp
xor
fsubrl
test
mov
mov
fs
mov
inc
sbb
arpl
jge
mov
int
xor
jae
clc
scas
ret
and
jns
sub
xchg
push
and
and
rcr
in
jp
bound
cmpsb
inc
sti
sbb
adc
sub
adc
xor
fmul
ds
std
push
cmp
push
mov
dec
mov
inc
mov
push
lahf
inc
sub
outsl
mov
lret
jecxz
adc
dec
pop
ret
mov
sbb
push
jle
sbb
or
sbb
ss
lcall
xor
cmp
lods
lds
sub
pop
cmc
icebp
add
and
aad
mov
push
mov
popa
js
lods
aas
adc
cmpsb
push
daa
inc
cmp
mov
daa
js
sub
in
jae
inc
mov
pop
sbb
cmpsb
inc
or
shll
jecxz
in
jg
inc
pop
mov
clc
ljmp
mov
mov
push
inc
cmp
out
nop
push
inc
dec
mov
andl
cmp
hlt
gs
adc
lcall
push
pcmpgtb
or
mov
dec
push
repnz
test
roll
das
inc
das
jge
add
mov
popa
mov
lods
int
sub
push
mov
mov
mov
jne
mov
das
leave
iret
aad
daa
adc
fisttpll
pop
cmp
stc
int3
jmp
and
push
fwait
cmp
xchg
jmp
fidivs
stc
jae
jno
mov
std
bound
xor
hlt
ret
test
fcoml
and
inc
movb
in
xor
insb
sbb
mov
lret
dec
mov
loopne
cmp
mov
je
xchg
xorl
cmc
out
xor
pop
ror
mov
sbb
and
andb
cmpsl
popf
outsl
add
mov
movl
push
pushf
jg
pop
xchg
lods
xchg
xchg
ds
jmp
xlat
xor
sbb
add
xchg
xor
insl
push
out
jae
mov
adc
inc
dec
push
mov
testb
pop
je
add
outsb
add
push
int3
push
cmp
sbb
mov
loope
aad
jecxz
imul
or
ret
lods
xchg
mov
pushf
jp
or
addr16
add
and
and
xchg
mov
add
test
jb
pop
test
movsb
stos
insb
xor
cld
nop
aaa
sbb
jae
add
mov
loope
imul
scas
and
popa
jae
push
pop
cmp
adc
jae
iret
in
fcomps
mov
xor
jl
mov
shlb
cltd
test
mov
hlt
cmp
iret
lcall
mov
lcall
out
aam
pop
imul
shrb
or
push
cmp
push
insl
mov
rcll
dec
mov
xor
xor
and
lods
or
sti
sub
sti
stc
rol
notl
scas
push
jo
cmp
push
rolb
add
cmc
pushf
adc
cs
add
dec
xchg
repz
mov
enter
sbb
mov
xor
imul
pusha
push
sbb
je
sub
in
xchg
mov
pop
dec
push
push
repnz
sbb
fmuls
lcall
mov
inc
xchg
pop
leave
movsb
ss
inc
fdivrp
cli
rcrb
mov
mov
lods
add
add
mov
pop
movsl
push
mov
outsl
in
inc
call
in
sub
aad
fs
in
hlt
pop
xchg
dec
adc
mov
pop
icebp
loope
or
xchg
cmp
out
test
cmpsb
mov
mov
lea
xchg
pop
or
mov
mov
repnz
stos
and
hlt
lds
rcl
xchg
push
mov
and
sbb
out
jmp
pushl
xchg
xor
pusha
pop
scas
mov
mov
lret
subl
sbb
pop
inc
cmp
and
jg
cmp
and
xchg
scas
push
or
roll
fstl
pop
add
xor
xchg
loopne
push
sahf
dec
fdivrs
mov
fidivrs
stos
adc
insl
xchg
mov
xchg
stos
dec
popa
jge
sti
dec
fldenv
aad
loopne
mov
adc
les
pop
ficoms
cld
call
jge
mov
stos
inc
mov
adcl
adc
adc
shrb
inc
dec
sub
lcall
push
imul
shll
gs
or
xor
inc
es
daa
lcall
push
inc
pop
sub
pop
stos
movsl
orb
in
shlb
cmp
pop
lds
ret
in
mov
jno
lods
and
mov
or
dec
test
mov
shlb
jb
mov
add
mov
jbe
filds
and
pop
sub
cmpsl
pop
je
loopne
cmp
adc
mov
icebp
mov
rcrl
push
dec
mov
out
scas
xchg
sbb
loop
loope
pushf
fbld
mov
cmp
icebp
fists
movsb
mov
scas
adc
iret
cmp
sbb
rcll
stos
insl
shlb
mov
jne
lds
adc
adc
cmpsl
push
and
out
shll
xchg
xor
rorl
mov
adc
cmpsl
addr16
cmp
lods
fdivrs
sbb
ret
lret
jecxz
sub
fmuls
cld
pop
out
outsb
js
mov
add
movsb
pusha
aaa
adc
dec
and
sbb
pop
inc
cli
enter
push
jge
pop
lcall
push
subl
mov
popf
fisttpl
or
dec
scas
or
xchg
adc
cmp
mov
fiadds
repz
mov
mov
push
pop
push
sbb
cmpsb
out
and
je,pt
int3
fidivl
in
sbb
and
test
test
mov
scas
loope
icebp
adc
lds
xor
orl
jp
sub
jp
mov
fs
jae
repz
mov
mul
add
sbb
add
es
mov
xchg
mov
js
inc
shrb
jmp
scas
push
xchg
jl
xchg
and
leave
push
mov
lahf
fiadds
cmp
loop
outsl
les
xor
aaa
sbb
in
cmp
cltd
ljmp
xchg
ss
out
jg
clc
mov
incb
inc
in
cmpsl
out
jle
inc
mov
and
pop
cmp
xor
aad
inc
cmpsb
jb
out
pop
push
das
cmpsl
int3
int3
cmp
push
push
add
mov
sbb
inc
xor
arpl
mov
cltd
fcmovbe
subl
lcall
push
cmpsl
insb
xor
pop
arpl
pushf
xlat
mov
mov
imul
mov
iret
add
ljmp
mov
or
mov
dec
test
shll
xlat
dec
xchg
push
mov
xchg
stc
xchg
aas
cmp
xor
add
addr16
mov
imul
dec
out
sbb
lahf
lret
sbb
pop
popf
rorb
movsb
mov
add
je
mov
adc
pop
sahf
int
iret
or
mov
or
leave
jb
mov
dec
push
faddl
lret
xchg
sub
lret
pop
dec
popa
and
gs
stos
notb
push
mov
insb
and
dec
adc
js
pop
cli
mov
jo
push
leave
or
leave
or
insb
rolb
jno,pt
aam
movsl
popf
jge
pop
das
iret
adc
or
mov
mov
xor
outsb
or
mov
ljmp
mov
test
dec
or
pop
js
xchg
adc
jae
cwtl
fistpl
and
dec
jmp
jl
int
out
or
enter
insl
and
add
fildll
cmpsb
sbb
cltd
loope
add
push
ret
push
jbe
fisubl
loopne
out
pop
bound
loopne
les
add
out
test
add
jo
sub
sbb
sub
xor
inc
arpl
loopne
xor
push
ret
or
repnz
xor
lods
test
sbb
sub
cmp
xchg
ja
inc
shl
aaa
orb
jnp
jbe
outsb
adc
pop
shrb
stos
lods
dec
or
jp
pop
mov
mov
test
push
fcmovnu
leave
sahf
add
repz
aas
jbe
push
jmp
pop
gs
daa
stos
xor
dec
cmp
inc
and
mov
ret
sbb
aam
decb
and
movsb
push
mov
shrb
iret
rorb
xchg
notl
mov
mov
inc
push
daa
push
add
test
enter
pushf
add
std
outsl
sbb
test
inc
stos
pop
insl
jae
pop
test
sarb
imul
adc
ljmp
fsubrl
sar
orl
mov
dec
pextrw
pop
aad
dec
sbb
imul
repnz
rcl
ljmp
cmp
push
enter
and
sbb
jnp
dec
mov
adc
jg
jne
pushf
test
mov
cmp
dec
mov
adc
fisttps
and
mov
int3
jp
cmp
std
loopne
or
loop
and
fidivs
test
dec
movsl
lods
pop
push
push
repz
mov
ljmp
and
mov
fidivl
mov
cli
xor
xor
cli
push
mov
inc
movsb
jae
inc
xchg
push
or
je
sbb
mov
nop
pop
xor
pushf
orl
mov
mov
xor
jbe
out
outsb
dec
mov
mov
sub
mov
mov
outsb
aas
fildll
test
shrw
iret
xchg
leave
cmp
jl
sbb
dec
pavgb
pop
mov
pop
cmpb
xchg
fcomps
and
test
jmp
negl
sbb
fiaddl
lcall
add
icebp
repz
in
rorb
mov
aad
xor
add
xchg
push
jns
out
jo
xor
iret
data16
inc
pop
fmuls
push
xchg
in
mov
scas
in
mov
lcall
cs
pop
inc
mov
jp
les
and
pop
inc
enter
test
push
mov
xchg
sbb
mov
add
xor
or
sbb
mov
xchg
jg
push
mov
pop
mov
xchg
enter
dec
xchg
inc
mov
iret
xor
push
pusha
xchg
addr16
enter
imul
jecxz
rcrb
fsubs
mov
scas
sbb
lea
adc
mov
iret
loope
out
jnp
cmp
aad
imul
add
and
push
scas
cmpb
push
test
add
jge
shlb
pop
fmulp
mov
test
scas
test
fwait
dec
sarb
mov
xchg
and
mov
xchg
pop
mov
jbe
jb
push
mov
test
mov
in
and
xor
lods
aam
jo
mov
addl
cli
test
rorl
push
insb
das
aad
stos
movsl
les
push
sbb
mov
mov
mov
pusha
add
push
xchg
data16
cmc
shll
add
lock
cltd
cmp
pop
adc
mov
and
fnstsw
loop
adc
jle
mov
and
in
idivl
pop
lret
jae
vpsubq
aad
mov
aas
mov
nop
lahf
jmp
rcll
in
adc
inc
mov
je
cltd
sbb
or
push
jb
jmp
das
stos
xchg
das
adc
xor
addb
pushf
ret
test
fdivrl
lahf
popf
movsl
push
sub
popl
outsb
dec
cli
xchg
frstor
cld
add
dec
mov
pusha
dec
jae
xor
orl
xor
pushf
inc
pop
lret
mov
mov
std
test
dec
push
fisubl
adc
bound
sbb
or
addr16
call
pop
jl
sbb
orl
xor
dec
and
and
cli
mov
pop
call
dec
pop
mov
pop
fmull
push
jle
or
adc
fcoms
repz
push
adc
movsl
popa
icebp
mov
stc
xchg
test
negb
outsl
or
mov
hlt
xchg
iret
adc
jnp
cmpsb
cmpl
lahf
movsb
insb
xchg
cmc
mov
lods
neg
insl
jbe
mov
pop
repnz
jle
adc
pop
mov
cs
mov
and
int
jp
push
shrl
cltd
add
test
shl
lret
mov
aas
mov
pop
mov
sub
mov
arpl
mov
outsb
mov
jmp
xchg
adc
cmp
cmc
and
rclb
fidivrl
dec
cmp
nop
std
sbb
pop
roll
lock
mov
mov
test
ficoml
sbb
leave
fisubs
jae
sahf
pusha
sahf
cli
add
inc
jne
xchg
invd
xor
loop
scas
out
jg
mov
or
xor
aam
push
xchg
lods
scas
inc
cmp
scas
lea
mov
fldcw
xor
sbb
jl
and
cmp
pop
push
sbb
adc
iret
sbb
aaa
xlat
dec
mov
lds
xorl
mov
rolb
das
add
dec
aas
xor
aas
adcl
scas
dec
loop
dec
add
push
pop
add
sbb
add
rdmsr
xchg
push
jae
scas
lahf
pushf
inc
mov
filds
mov
loopne
mov
mov
lds
or
sub
sbb
adc
jae
nop
es
shl
sub
das
test
cltd
push
fbstp
shl
and
lret
xor
push
or
mov
ret
lds
leave
int3
insb
addr16
cltd
rcl
pop
jbe
pop
stos
and
js
sub
xor
mov
mov
roll
add
mov
or
das
lcall
fwait
push
lahf
add
test
test
xor
adc
inc
fidivrs
xchg
pop
pusha
cmp
test
das
rcll
jo
fstpl
add
mov
mov
fmull
popa
aam
xor
mov
loope
add
hlt
in
inc
pusha
mov
xor
sub
push
xchg
sbbb
aam
stos
lea
or
cmc
mov
aad
dec
in
test
and
push
je
jg
sub
add
dec
mov
push
jecxz
outsl
stc
cmp
inc
shlb
dec
xor
fmull
adc
dec
fistps
cld
xchg
mov
cmp
sub
int
or
xchg
sarb
pop
in
inc
cmp
scas
pop
jo
je
dec
insb
jp
idivl
mov
pop
fwait
cmpsb
mov
mov
arpl
jne
fadd
mov
mov
push
mov
push
pop
fdivrl
int
dec
sti
pusha
push
push
dec
and
dec
inc
mov
fimull
pop
jbe
invd
daa
sub
in
inc
add
dec
addl
dec
lret
lahf
movsb
mov
xor
in
dec
push
sub
mov
mov
call
dec
aam
add
in
jl
xor
jg
out
insb
cs
insl
lcall
xchg
cmp
push
or
mov
inc
jbe
and
push
jo
out
add
mov
cmp
push
stos
add
cltd
and
or
pop
lcall
loope
adc
xchg
shrl
mov
adc
lods
mov
jb
mov
aaa
jge
movsb
clc
or
sbb
jg
xchg
dec
fdivrl
push
inc
call
mov
mov
cmp
sarb
frstor
je
aaa
push
rcrb
imul
sub
pop
mov
add
fmuls
sbb
in
jae
mov
lea
ret
sub
clc
cmp
hlt
jbe
and
jnp
je
lock
adc
pop
or
sub
test
xor
xchg
pop
add
mov
in
out
aam
dec
push
push
or
add
or
inc
sti
fists
out
pop
repnz
repz
sbb
pop
mov
or
jbe
rcl
movsl
cwtl
aam
jp
cmc
dec
mov
inc
ret
mov
cmp
movsl
idivb
mov
in
dec
push
loope
fsubs
mov
vpaddusw
lcall
mov
std
cmp
mov
loopne
leave
jnp
push
sti
and
mov
int
gs
rcl
and
jge
cmp
jns
in
and
pop
adc
rclb
ret
cmp
inc
push
and
mov
jp
mov
mov
cmp
inc
add
push
mov
jge
jmp
sbb
scas
lcall
push
popf
or
fistl
jp
pop
imul
and
inc
cmpsb
xor
pop
in
js
jge
lods
and
out
mov
test
ret
dec
flds
popf
or
mov
cmp
pop
or
xchg
push
push
xor
ret
ljmp
jecxz
mov
jmp
mov
lea
into
hlt
incl
mov
pop
mov
leave
call
repz
adc
pop
clc
cwtl
test
fisttpll
xor
xchg
ds
sahf
dec
pop
and
xlat
outsl
nop
repz
xor
push
lret
sub
jg
stc
imul
dec
into
sub
add
mov
add
aas
sub
mov
sbb
int3
inc
mov
call
inc
pop
pop
push
addr16
xlat
and
in
mov
lcall
add
scas
sbb
cmp
xor
fs
ja
es
adc
sarb
sub
fisttpll
fildl
sbb
xchg
xor
mul
sub
mov
mov
mov
idivb
clc
and
insl
ss
rorl
in
push
mov
xchg
jmp
orb
push
mov
in
jae
mov
and
inc
xchg
and
repnz
subb
outsl
jbe
mulb
std
loope
jne
lods
inc
cld
push
repz
mov
cli
jo
or
cli
movsb
add
mov
inc
loop
jne
insl
and
ret
sub
inc
test
scas
movsb
pop
push
xchg
pop
mov
jns
aas
push
mov
fdivr
in
hlt
aad
mov
push
and
lods
mov
fldenv
icebp
adcb
jne
pop
stc
outsl
stos
mov
insl
mov
add
or
ret
dec
mov
inc
pop
inc
out
ror
jnp
das
pop
test
pop
cmp
pop
sub
mov
aas
cmpl
pusha
jb
cltd
mov
adc
ud0
add
sbb
sub
repnz
mov
pop
lods
xchg
stos
mov
outsb
inc
gs
dec
ficomps
js
lcall
or
or
sahf
push
mov
mov
loope
inc
add
sub
sub
cmpsb
daa
rcrb
jp
push
cmc
repnz
cs
test
test
mov
push
inc
mov
sub
or
adc
ljmp
pop
ds
pop
dec
mov
push
call
inc
add
xchg
divb
ret
inc
pushf
mov
out
data16
inc
loopne
leave
pop
mov
push
jae
rcrb
repnz
push
sub
fs
jne
and
popa
push
fimuls
scas
add
jb
sub
lcall
pop
int3
dec
cmp
daa
and
lahf
sbb
daa
pop
pop
xor
or
inc
rorb
mov
mov
jbe
enter
push
pusha
test
mov
inc
cwtl
bound
jne
mov
jo
fsts
sti
addb
push
mov
lcall
dec
call
cmp
jno
mov
leave
xchg
mov
das
mov
xor
mov
push
or
ret
hlt
and
imul
adc
and
enter
lahf
or
jne
out
mov
es
or
ds
xchg
nop
sub
lds
repnz
cld
fstpt
sub
mov
data16
pop
pop
lret
sahf
jle
xchg
mov
rorl
imul
and
push
pop
xchg
inc
es
shll
mov
push
les
or
jge
pop
popa
cld
lahf
or
sub
pushf
mov
aaa
stc
sub
mov
in
pop
sub
add
adc
out
push
push
dec
cmpsb
xor
adc
out
imul
xlat
fsubl
mov
pop
bound
add
mov
cmp
jecxz
in
lods
pop
xchg
js
xor
push
cmpsl
mov
jnp
xorb
nop
dec
notb
popf
xchg
fldcw
mov
fsubrl
xchg
pop
subb
orb
movsb
stos
xor
imul
cmpsb
jmp
add
into
cs
cltd
imul
cltd
inc
mov
xchg
dec
sub
test
lcall
jns
jb
jbe
aam
cmp
pop
in
clc
scas
mov
and
pop
jmp
push
jmp
outsb
icebp
loope
jbe
add
xchg
jmp
scas
or
mov
dec
xor
lds
bound
mov
ljmp
test
jecxz
fcoms
cmp
xchg
xor
ja
and
ret
add
test
xor
xor
hlt
xorb
popf
fwait
dec
filds
ds
mov
int
mov
std
mov
das
aam
and
push
pop
popf
push
mov
adc
cmc
and
mov
mov
in
ja
jno
push
fisubs
int
xchg
dec
inc
fiaddl
je
mov
mov
jmp
sub
iret
pop
xchg
ds
adc
inc
subl
scas
cmpsl
xor
jb
mov
js
mov
cmp
pop
push
xor
pop
mov
lcall
sbb
in
test
pop
clc
stos
in
xlat
js
cwtl
or
lods
loope
push
lea
pop
jne
push
ja
sbb
orl
push
or
sub
mov
sub
jecxz
xchg
and
dec
and
out
arpl
sub
shll
test
nop
mov
aam
xor
mov
insl
mov
stos
cmc
sbb
test
xchg
pop
aas
xchg
cmc
test
subb
rcll
mov
inc
popa
inc
sbb
jl
mov
pop
test
dec
add
mov
push
pop
adc
test
mov
testb
sub
fcomip
xchg
cmp
out
or
or
js
jb
add
xchg
fcmovnb
mov
insb
push
jnp
nop
mov
mov
popa
add
xor
cmc
rcrb
inc
loop
aad
sbb
pop
sbb
test
mov
xchg
negb
bnd
pop
inc
sbb
call
mov
jl
inc
lret
dec
fildll
lret
inc
jl
jl
fistl
insl
push
xchg
nop
and
pop
pop
imull
in
pusha
push
je
lret
cmpsl
push
xchg
and
mov
notl
mov
je
mov
dec
mov
xor
sub
clc
push
rorb
mov
sbb
sbb
fxch
in
test
rcll
inc
popf
test
ja
jns
pop
mov
rorl
shrl
aas
shll
xchg
loopne
pop
movsb
xchg
mov
cmpsl
and
cmp
mov
and
testl
adc
loop
cmpsl
mov
mov
ja
mov
mov
xor
ljmp
xchg
cmpsb
dec
push
sub
xchg
pop
adc
inc
imul
test
pop
adc
adc
and
ljmp
add
hlt
jecxz
push
ja
and
push
or
pop
outsb
adc
and
je
xor
add
sub
dec
cli
jns
lods
lods
xor
push
inc
fnstcw
insl
adc
or
inc
pop
xchg
mov
imul
and
cmp
mov
xor
cmpsl
pushf
xchg
add
mov
clc
mov
stos
sub
cmp
icebp
mov
mov
or
push
dec
jo
shlb
or
push
inc
or
lds
fcmovnb
loopne
les
hlt
ds
mov
addr16
xchg
out
loop
mov
lret
les
in
outsb
cmpl
push
mov
imul
fisubrl
popa
les
insl
addr16
hlt
pop
adc
movsl
ret
sahf
pop
mov
adc
gs
mov
mov
add
fstl
sti
pushfw
sub
cmp
sahf
cltd
loope
leave
aaa
mov
mov
pop
iret
jnp
aas
mov
xor
popf
mov
test
pop
pop
es
xchg
sbb
sub
jg
pop
mul
jecxz
shll
lcall
cmp
xchg
scas
fwait
sbb
sbb
push
shrl
loope
pop
test
pop
ret
inc
inc
mov
shrb
pop
sub
pop
inc
jb
syscall
fsubr
fwait
lea
inc
or
aad
out
push
sbbl
pusha
push
test
dec
out
aam
out
mov
inc
leave
int
movsl
lods
popa
ljmp
xchg
bound
movl
sbb
mov
inc
insl
mov
fadd
loope,pt
sbb
sbb
mov
mov
mov
dec
lea
es
in
arpl
xchg
sub
cli
sub
fs
xchg
xchg
mov
popl
stos
dec
cmp
add
dec
enter
xor
xchg
push
mov
lret
cld
inc
ss
stos
aas
shl
pusha
jno
xchg
dec
lea
push
int3
jp
xchg
test
shlb
and
inc
out
jo
push
mov
in
xchg
icebp
push
call
pusha
push
xchg
cmp
icebp
das
sahf
repz
add
stos
inc
out
in
in
rol
in
addr16
cmpsb
imul
imul
ljmp
sub
sbb
dec
mov
aam
fwait
cmp
pop
xchg
fs
mov
xor
mov
mov
and
sbb
incb
popf
data16
jmp
enter
test
cltd
lahf
hlt
imul
fidivs
xchg
imul
pop
shrl
mov
mov
push
bound
inc
dec
sarl
add
and
xchg
sahf
and
daa
cmpsb
nop
enter
xchg
mov
jno
out
adc
imul
lock
inc
adc
push
sbb
sahf
popf
pop
in
jb
pop
test
fsubr
sbb
xor
ljmp
adcb
movsl
push
js
push
arpl
xchg
ds
mov
xor
dec
fdivl
xlat
jo
and
or
dec
push
movsb
xor
insb
add
test
fcmovne
rcr
inc
mov
mul
push
lods
ja
shr
stos
out
std
mov
mov
inc
pop
jecxz
ja
icebp
lods
push
int
rcll
fwait
mov
mov
xchg
push
sub
add
aas
cmpsb
sub
cmp
xchg
mov
fstp
je
outsl
lods
xor
mov
popf
mov
repnz
adc
push
add
or
in
cmp
lds
popa
jb
cltd
imul
ljmp
dec
fs
out
mov
pop
and
in
jo
test
loop
adc
cmp
pop
mov
shld
xchg
js
jno
mov
fldenv
in
test
andb
cmp
sub
shlb
jl
ds
nop
icebp
out
outsb
es
sbb
mov
loopne
movl
xor
adc
ret
hlt
xchg
adc
cmp
cld
or
lods
mov
mov
xchg
dec
sub
xchg
push
int3
pop
jmp
fimull
sub
int
pop
xor
xchg
insb
xor
adc
aas
or
push
mov
jne
dec
jbe
testl
fwait
insl
and
out
cmp
inc
pop
adc
js
imul
jmp
cmpsl
call
sub
mov
push
mov
aas
xor
or
sub
cmc
mov
pop
das
xor
inc
roll
cmp
and
nop
sub
or
xor
imul
cwtl
loope
cltd
frstor
mov
ja
clc
test
push
mov
scas
pop
pop
xchg
dec
call
and
imul
jb
lcall
push
pop
lcall
ja
pop
xchg
push
lock
xchg
xchg
jae
push
jle
and
mov
movl
add
jns
pop
nop
push
inc
inc
cmp
test
xor
sbb
pop
or
xchg
adc
lcall
sub
jnp
cmp
in
xchg
add
ljmp
xchg
pop
popw
mov
stos
mov
inc
jb
out
insl
aad
push
push
ja
jmp
stc
bound
dec
pop
inc
or
hlt
and
inc
dec
iret
nop
mov
cmp
and
pop
repz
lds
sbb
pop
outsb
inc
or
mov
jno
jl
add
or
push
mov
ret
test
psubw
test
inc
fidivrl
pop
and
mov
arpl
xchg
daa
add
cwtl
cmpsb
xor
sbb
inc
iret
mov
mov
fidivrs
cwtl
repz
hlt
aas
in
scas
xor
fwait
mov
les
sub
pop
out
testb
inc
movsb
mov
in
sub
add
jle
xchg
inc
inc
xlat
xchg
jl
in
inc
jg
aas
into
data16
xchg
stc
adc
or
test
cwtl
xchg
adc
cmp
ja
mov
aaa
ffreep
xor
xor
jno
test
mov
dec
cld
clc
fstpt
mov
sub
add
sarl
sub
jo
and
in
lods
xor
test
mov
push
push
fadds
fstps
sahf
and
lret
pop
ficompl
mov
jge
mov
jns
scas
in
sbb
sahf
cmpb
add
leave
int
jle
push
jno
scas
inc
mov
jno
jmp
push
ret
or
aas
pop
jmp
mov
lea
add
jne
adc
jne
mov
xchg
sbb
aad
idivb
mov
out
addr16
push
push
lret
test
sahf
imul
or
cmp
push
arpl
enter
dec
fstpt
rorl
in
jle
and
negl
jne
popf
repnz
mov
push
pop
mov
pusha
pop
xor
adc
mov
xchg
addl
adc
ficompl
andps
mov
addr16
cs
and
cmp
cmp
mov
pop
jb
xor
sti
xlat
loope
popl
lret
mov
or
push
fldcw
sbb
dec
push
lock
je
negl
xorb
push
xchg
iret
mov
addr16
cmp
aaa
cmp
sub
cmp
add
pusha
stc
and
orb
xchg
dec
out
enter
sbb
test
clc
divl
fisttpll
cltd
push
fidivl
push
xor
lods
push
mov
add
sbb
jo
dec
cmp
out
or
aad
enter
aaa
cmp
scas
xchg
sub
nop
dec
in
pushl
mov
push
mov
sarl
cmp
and
aaa
sbb
mov
jecxz
or
xchg
sbb
orl
sub
out
dec
repz
lahf
mull
add
or
lods
lods
add
loopne
pop
cmp
movb
mov
ds
jbe
cmp
mov
xor
cmpsl
mov
dec
movl
inc
loop
push
push
in
mov
movsl
dec
mov
dec
xchg
out
cmp
cli
inc
mov
lods
sbb
push
mov
in
aaa
mov
icebp
pop
aam
cld
xor
or
fcoml
xor
hlt
out
mov
jp
and
dec
adc
pop
mov
xchg
in
or
mov
or
lret
ja
lahf
je
out
fdivl
ljmp
adcl
or
mov
stos
or
je
popf
and
icebp
rcl
mov
outsb
push
std
xor
rcll
sub
xchg
jle
dec
movsb
jle
call
jo
adc
inc
shlb
jle
fisttps
js
sahf
imul
pop
lea
mov
ret
mov
mov
mov
and
testl
sti
sbb
cmpsl
sti
or
fwait
into
roll
sbb
test
xor
faddp
aaa
out
and
into
sbb
xchg
rclb
das
aad
shrl
lods
pop
xchg
push
insl
xchg
inc
xor
fwait
roll
or
pusha
mov
pop
and
ror
pop
dec
insl
shr
fdivrl
sbb
mov
dec
mov
ret
sbb
xchg
sbbl
push
clc
adc
mov
test
push
scas
cmpsl
andl
mov
out
loopne
popa
mov
sub
nop
jo
jmp
inc
mov
pop
fidivrs
stc
xor
dec
shlb
loope
test
fsubp
daa
dec
mov
scas
in
inc
cmpsl
stos
push
lods
sbb
jmp
xchg
pusha
out
or
add
loope
mov
ret
and
add
ss
pop
cmp
push
cltd
adc
xchg
sbb
pop
xchg
sbb
lock
sahf
cmp
int
shl
pop
ljmp
inc
mov
scas
mov
push
fucomp
xchg
and
cmp
mov
hlt
pop
push
in
repnz
in
data16
hlt
daa
dec
ficomps
popa
mov
roll
fidivrl
daa
inc
or
pop
lret
and
ror
icebp
iret
xchg
cmpl
pop
lods
call
sub
and
cld
sub
addl
addb
jmp
cli
iret
and
inc
pop
pushw
sub
rcr
insl
inc
pop
ljmp
mov
pop
pushf
mov
xchg
std
pop
sbb
xlat
les
push
jge
pop
add
enter
cs
jnp
mov
pop
and
xchg
aam
xor
xor
insl
add
es
shll
add
adc
arpl
les
mov
stos
fbstp
subl
push
mov
xchg
jmp
cltd
imul
dec
jb
mov
lods
mov
and
aas
shrb
imul
sbb
mov
inc
in
jno
pop
pusha
push
xchg
fisttpll
fsubl
cwtl
pusha
cmpsb
mov
mov
mov
mov
fmull
stos
xchg
xor
mov
imul
and
subb
pop
adc
inc
adc
jns
pusha
cld
and
xor
fidivl
lods
mov
outsb
std
loope
jp
mov
sti
pop
mov
cli
das
mov
pop
or
xorl
ljmp
loopne
out
pop
adc
aas
xor
and
mulb
in
pop
add
addb
cmp
ljmp
je
loop
add
ss
push
add
incb
dec
stos
je
xchg
es
and
xchg
lods
pop
ja
test
push
sbb
xchg
jl
lret
je
dec
lods
jmp
xor
adc
push
pop
mov
sub
pop
insb
repz
decl
fdivl
scas
mov
pushf
outsb
fs
data16
jne
pop
inc
inc
in
cmc
lods
jno
aad
push
pusha
sahf
xor
mov
cld
mov
out
pop
adc
in
jp
dec
adc
aam
adc
paddsw
add
fucomp
or
adc
fistpl
xor
jmp
push
jmp
call
push
jp
decl
jb
sub
repz
cmp
test
inc
mov
cmp
bound
inc
add
cmp
call
stos
fstps
jp
or
mov
pop
push
test
mov
ja
inc
xchg
sbb
lea
pop
test
jge
add
je
mov
mov
fstpt
mov
pop
mov
jge
or
fisubrs
pushf
and
leave
push
out
or
mov
pusha
dec
mov
push
push
add
ret
outsb
ljmp
pop
repnz
jmp
inc
int3
in
mov
pop
mov
xchg
mov
sub
xchg
inc
cmpsb
mov
repz
sbb
mov
fbld
stc
xchg
and
add
bound
push
fistpll
lods
jmp
lods
test
mov
adc
cmpsl
jo
and
pusha
lds
push
sti
xchg
mov
fnstsw
std
js
inc
cmp
imul
scas
xchg
xchg
add
sub
mov
sbb
sbb
lcall
sar
gs
loop
lea
cmp
insb
pop
cmp
pusha
jbe
cmp
adc
mov
sbb
mov
lret
cmp
dec
jle
mov
aad
loopne
lods
dec
je
jne
mov
xchg
sbb
cmp
data16
ja
stos
jmp
jb
xchg
adc
inc
cmp
xor
dec
clc
cmp
mov
mov
and
scas
cmp
repnz
dec
sgdtl
sti
or
sti
adc
mov
lods
inc
imul
xor
mov
xor
push
addr16
xor
xchg
fadds
cmp
mov
int3
int3
jmp
jbe
ds
notb
add
xlat
or
xchg
xchg
int
icebp
jle
inc
mov
push
jl
xlat
mov
gs
shl
adc
cmp
enter
push
popf
dec
pop
jo
and
adc
fcmovne
adc
pop
aas
mov
xchg
sbb
xchg
test
xchg
loopne
jp
xor
cmp
fists
add
xor
test
xchg
es
loopne
shl
lret
push
test
jecxz
dec
aas
inc
in
jg
jnp
in
sub
stc
jb
adc
int3
jge
jne
cmp
jb
fistps
mov
gs
mov
lcall
les
into
add
aas
mov
xchg
in
xchg
pushl
scas
hlt
shlb
roll
sbb
push
dec
lcall
jbe
jge
out
insl
lods
shrl
ret
inc
arpl
clc
cmc
mov
ja
xor
sti
jbe
ljmp
mov
gs
jg
cmp
xchg
push
mov
in
add
fnstenv
loopne
mov
mov
mov
shrl
faddl
movsb
cmp
jl
out
push
cmp
add
sbb
mov
sub
adc
add
cli
dec
push
xchg
cmpsl
lock
or
xchg
clc
pop
dec
in
or
pop
xchg
fistl
sbb
lock
xchg
jg
pop
xchg
stos
js
lret
mov
pop
jl
or
or
mov
or
inc
mov
sbb
sbb
or
push
mov
and
add
leave
rolb
arpl
mov
dec
sbb
inc
pop
sbb
sbb
lret
loopne
loop
mov
mov
add
xorb
arpl
test
pop
lret
mov
popa
vcvtsi2ss
sar
sub
outsl
jno
mov
and
push
pop
xchg
mov
repz
loope
aad
jb
or
sub
dec
jmp
pop
loope
fwait
in
in
push
cmpsb
sub
arpl
dec
scas
arpl
mov
sti
jg
inc
rorl
pop
bswap
xor
adc
in
vhaddps
adc
std
sbb
add
mov
dec
push
jl
mov
add
notl
cmp
mov
dec
popa
pop
test
mov
pop
xor
mov
shrl
mov
sbb
mov
imul
imul
xor
push
lret
jmp
scas
das
cmp
sahf
pop
jmp
push
add
rorl
fmull
add
in
lds
xorb
test
stc
addr16
into
dec
jecxz
pop
jnp
push
aad
push
sub
jle
movsl
lods
ljmp
arpl
or
xor
mov
cmp
aas
addr16
clc
pushf
xchg
iret
fidivl
inc
xchg
scas
arpl
pop
pop
fiadds
jg
inc
mov
sbb
inc
or
out
xchg
xor
push
cmp
ljmp
mov
dec
fmull
dec
jbe
sub
or
lods
fwait
outsb
mov
mov
xor
cmp
outsb
jmp
or
scas
adcb
xor
aaa
push
push
outsl
sub
inc
lds
push
dec
lods
std
dec
mov
mov
xchg
popa
mov
and
imul
shlb
mov
rcll
in
push
or
and
and
popa
sub
xlat
mov
fs
or
adc
mov
stos
sarb
sbb
jmp
std
xor
jb
pusha
out
and
jmp
sahf
cs
insl
ds
repnz
pop
lcall
test
xchg
cmp
sbb
out
lock
inc
mov
inc
xchg
fmul
shl
out
popa
push
sub
or
cli
push
cmp
shl
outsb
in
pop
cwtl
cwtl
pusha
stos
mov
xor
push
jge
lds
xchg
jnp
mov
jge
jbe
mov
jle
dec
sub
mov
repz
popa
pushf
jge
int3
push
adc
sbb
pop
popf
mov
sbb
in
sub
and
fildll
imul
push
xchg
jp
cmp
aad
aad
or
xor
popa
mov
inc
in
nop
outsb
les
insl
cmp
inc
test
clc
jb
aas
mov
and
xchg
dec
lahf
dec
dec
inc
repnz
push
jl
mov
pusha
pop
and
outsb
in
imul
mov
or
aas
int3
dec
aas
xchg
adcb
xlat
adc
std
jge
or
xchg
arpl
lahf
and
gs
sbb
push
mov
or
inc
imul
add
cmp
in
mov
mov
mov
push
out
testl
inc
iret
popa
push
mov
pop
out
mov
inc
out
je
outsb
ret
mov
push
dec
int
xchg
insb
ficompl
jb
mov
adc
cs
test
aam
ja
out
xor
inc
mov
mov
cmpsb
xor
sub
jl
pop
pusha
out
sub
aaa
push
sub
test
mov
jb
jno
std
orl
lahf
scas
test
sbb
mov
xchg
add
data16
sub
cld
xor
lret
push
loope
leave
mov
adc
ficoms
lret
test
mov
push
and
inc
or
mov
mov
lcall
mov
xchg
jno
xchg
in
cmp
dec
ficoms
fisubs
cmpsl
data16
cmp
ds
or
ds
cmp
loope
add
cmp
lahf
pop
mov
and
imul
xor
and
or
outsb
and
outsl
lahf
fldt
xchg
aaa
pop
add
xor
and
inc
push
test
mov
sub
adc
jns
and
adc
dec
mov
cmpsb
in
scas
xchg
push
test
repz
sarl
add
faddl
dec
repnz
int
xor
xchg
push
and
and
sub
shlb
cli
jmp
loopne
pusha
add
outsb
fs
insb
cmpsb
arpl
test
push
call
loopne
and
addr16
cmc
repnz
outsb
aad
xchg
shrb
fidivrs
xchg
std
cmp
mov
aas
test
cltd
and
shrl
dec
cwtl
lret
out
fildl
fadds
in
push
outsb
cmp
add
es
daa
and
imul
mov
mov
mov
xchg
bound
out
cmp
int3
dec
fdivrl
jle
push
xor
mov
cwtl
add
cmp
cli
cmp
pushf
inc
mov
int3
inc
or
cmpsb
imul
mov
loopne
xchg
mov
les
xorb
cld
dec
adc
ja
sahf
jne
mov
cli
mov
repnz
ss
and
repnz
repz
dec
insl
ficompl
add
mov
leave
dec
out
je
hlt
icebp
cld
dec
sub
mov
push
adc
add
mov
mov
inc
xchg
and
inc
xor
repnz
aam
popa
call
pop
lods
add
ficompl
stos
movsb
int
sbb
stos
adc
mov
jl
addr16
jnp
and
inc
icebp
jne
shlb
jo
nop
pop
mov
jno
mov
fwait
mov
icebp
xchg
push
pop
sub
stos
cmp
mov
shl
mov
cld
cmp
xor
movsb
insl
jne
stc
outsl
dec
push
test
test
ret
cld
adc
out
mov
or
mov
mov
mov
add
notb
sarl
sbb
lds
mov
repnz
fsubl
xchg
dec
xor
clc
into
cs
cmp
out
sbb
inc
sub
cmp
adc
mov
cmp
and
xchg
pop
aas
xchg
fsubrs
or
stc
pop
push
pop
dec
popa
mov
aam
testl
pop
jle
push
shlb
mov
lret
idivl
cmpsb
cmpsb
cmpsl
add
push
sub
sub
scas
jne
jno
lcall
push
push
xchg
insl
imul
push
and
add
mov
lcall
inc
fwait
fs
dec
mov
xchg
shl
sub
cld
movsl
jmp
or
pop
ljmp
hlt
mov
stc
outsb
int
xchg
aam
fists
jbe
outsb
mov
lods
das
adcl
pop
or
rclb
jae
imul
cmpsb
shll
jo
cld
xlat
das
rol
nop
outsl
lret
lcall
nop
push
dec
subl
mov
cmp
mov
dec
cmp
data16
fmuls
repnz
sar
loope
adc
push
sbb
andb
test
outsl
in
xchg
xchg
dec
ret
pop
loop
jecxz
mov
add
daa
push
popf
sub
mov
cmp
loopne
popa
stos
cmpsb
or
imul
fwait
sbb
stos
cwtl
mov
ja
movsl
sbb
dec
sub
fwait
aas
fstps
adc
mov
sbb
jecxz
in
imul
sbb
rcrb
mov
and
adc
push
jp
jb
adc
mov
movsb
mov
cmpsb
jecxz
mov
clc
test
out
add
bound
shlb
daa
and
xchg
jb
fwait
cmc
mov
push
ficomps
call
sub
pop
sub
fwait
aas
lods
add
mov
out
sub
fadd
test
les
fwait
mov
inc
cmp
inc
int3
mov
mov
push
adc
inc
ret
or
movsl
cmp
mov
mov
fistl
and
lock
icebp
stos
and
cmp
xchg
adc
xchg
or
and
xchg
rcr
loope
dec
mov
add
fsubs
inc
gs
out
bound
xchg
movsl
mov
pushf
rorl
out
pop
in
jecxz
push
pop
sub
sub
mov
std
in
and
sub
xor
sti
and
xchg
xchg
insl
xlat
xchg
dec
push
add
and
jns
mov
or
outsl
insb
cmc
mov
pop
sub
adc
daa
adc
sbb
shll
pop
mov
jmp
add
nop
push
pop
lcall
dec
cmp
mov
and
sbb
stc
psubsw
aaa
sbbl
adc
dec
aaa
mov
outsl
outsl
cwtl
lea
clc
xlat
pop
scas
sti
std
add
pop
das
push
push
and
jbe
push
imul
adc
xchg
iret
pop
bound
add
outsb
or
cs
or
jmp
movsl
aas
add
pop
or
pop
pop
xchg
pusha
mov
jge
sbb
ret
fidivrs
mov
test
pop
sbb
addb
cmp
ja
xchg
xor
mov
lcall
sti
jae
mov
ror
jae
jge
jb
scas
cmp
or
and
icebp
sbb
push
out
mov
lret
call
movsb
test
rcrb
adc
pop
cmp
loopnew
je
add
push
stos
lods
or
mov
test
jns
add
inc
mov
fldenv
inc
adc
mov
in
xchg
sub
xor
sbbl
test
jmp
das
adc
push
mov
stos
test
jp
lea
test
xchg
mov
xchg
dec
xchg
int
xchg
sbb
loop
push
int
xlat
jns
lea
xchg
mov
adc
call
xchg
mov
add
jmp
pushf
jmp
psrlw
and
js
xor
jo
popl
and
mov
rcl
aaa
dec
mov
mov
jo
repnz
out
push
ret
mov
mov
lea
icebp
arpl
loopne
push
clc
push
call
adc
mov
jge
iret
aaa
mov
or
addr16
insb
test
xchg
out
pusha
cwtl
imul
stc
aam
lahf
dec
push
arpl
mov
shl
adc
lods
inc
outsl
scas
and
testb
mov
adc
js
sub
sarb
inc
lds
or
mov
cmc
xlat
movsb
sarb
sub
mov
subl
lret
xorb
dec
stos
pop
jge
xor
hlt
insb
hlt
and
xor
inc
mov
pop
xchg
out
mov
or
in
sub
lret
loop
test
lods
movsl
scas
mov
or
sbb
dec
inc
adc
ret
xor
test
cmc
sbb
add
nop
mov
cwtl
add
test
or
lock
imul
adc
je
femms
jl
vpcmpeqd
mov
lret
pushf
jp
and
clc
mov
das
sub
je
fisttpl
pop
xchg
clc
mov
into
cld
stos
xor
or
fisttps
scas
pop
add
loope
xchg
fildll
aam
les
dec
lret
mov
push
iret
jns
mov
fwait
mov
sub
inc
xchg
push
fdivrp
test
push
or
dec
xchg
fcomip
mov
pop
fmul
int
mov
daa
popa
lret
fildll
lods
mov
sti
push
outsl
jo
push
mov
fidivs
cmp
cs
lcall
xor
repz
mov
jnp
out
or
add
jl
pop
xchg
push
lods
mov
push
mov
shlb
pop
addr16
xor
cld
mov
dec
repz
insl
sbb
or
fisttpll
sti
mov
inc
negl
dec
fstl
bound
mov
lret
gs
push
ss
loope
ret
lret
inc
jbe
cmc
xor
sbb
mov
mov
adc
fdivrl
out
outsb
inc
test
xchg
inc
or
xchg
fucomip
arpl
jns
sbb
outsl
fstpt
push
ss
and
stc
jno
mov
jmp
jnp
jno
pop
dec
xchg
cmp
hlt
mov
rolb
xchg
jge
sbb
jae
sahf
aad
dec
lcall
cmp
test
int3
ret
xchg
cld
xor
dec
xchg
test
ljmp
pop
in
cmp
repz
lret
ret
pop
mov
mov
data16
leave
jge
mov
outsl
cld
or
popa
rclb
xor
adc
lret
mov
pop
adc
sbb
cmp
jge
and
cli
into
xorb
pop
inc
push
adc
movsb
add
or
adc
dec
lods
cli
bound
orb
loope
or
ret
jmp
xorl
out
lahf
or
aas
mov
xchg
pop
arpl
scas
add
pop
cmp
scas
pop
jbe
addr16
pushf
flds
aam
mov
xchg
pushf
xchg
or
sub
push
or
pop
cmpsl
popa
pop
fs
dec
inc
or
fmuls
push
push
rolb
lahf
in
sti
filds
mov
jle
mov
rorl
xorb
insl
out
jecxz
fcoms
icebp
pop
inc
push
loopne
jo
pop
xlat
mov
mov
nop
push
or
lret
dec
scas
sub
aaa
or
les
pop
adc
xlat
mov
sarb
mov
push
dec
insl
andl
dec
adc
scas
pushf
cwtl
popa
js
mov
sbb
ror
or
fstpl
jle
movsb
push
sub
es
lret
inc
insl
rcrb
push
mov
adc
ljmp
outsb
and
lea
xchg
ficoms
mov
mov
inc
repnz
pop
adc
arpl
push
aad
pop
lods
data16
fldcw
les
push
shr
and
xchg
aas
mov
or
sub
mov
insb
ljmp
pop
lds
test
into
add
xchg
cmp
mov
sub
jo
mov
sbb
sti
jg
xchg
push
pop
mov
jp
push
inc
roll
movb
fsubrs
out
popl
loop
inc
std
in
pop
pop
insl
call
jae
cmp
jns
cmpsl
jae
mov
mov
cmp
mov
jae
pop
push
mov
inc
movsl
mov
jge
adc
in
jle
dec
push
and
in
out
inc
imul
dec
icebp
iret
loope
mov
insl
pusha
inc
dec
cmp
cmp
jge
imul
fs
xchg
clc
in
rcrb
mov
xchg
jp
mov
test
fcmovnbe
int3
insb
imul
inc
fcomp
pop
push
ja
mov
jp
cli
cwtl
dec
lret
lret
and
aad
lods
mov
int
ret
mov
cmpsl
xlat
ds
push
aam
adc
pop
jo
dec
out
shlb
mov
decl
pop
imul
or
insl
mov
subl
call
jle
je
sub
outsl
pop
mov
jl
lret
mov
inc
push
or
cwtl
fnstenv
adcb
inc
int
or
iret
repz
lret
stc
cmpsb
mov
push
decb
adc
imul
and
mov
inc
rcl
pop
aad
xor
aad
dec
std
push
push
js
shlb
jo
jns
stos
xor
pop
mov
sub
stos
mov
fildl
ret
das
fildl
xor
mov
inc
into
aad
or
xchg
xor
insb
xchg
cltd
out
lods
mov
movsl
icebp
sbb
out
xor
and
sarb
lcall
mov
testl
cmpb
rcr
pop
dec
adc
inc
movsb
cmp
movsl
mov
xchg
jns
sub
in
out
jbe
lods
add
mov
std
adc
insl
ja
fucomp
lods
pushf
test
push
rclb
mov
add
pop
cmp
jp
xor
scas
mov
je
cld
jge
sti
ret
push
mov
mov
add
pop
lret
lret
mov
xchg
dec
jae
sbb
inc
cmpsl
jle
xchg
add
mull
push
shrb
cmp
mov
and
addr16
jl
and
stc
int
mov
push
orb
inc
mov
mov
mov
dec
pop
stos
mov
int
xor
push
shr
cmpsb
cmpsl
ja
dec
iret
aas
add
xlat
dec
or
jne
and
inc
mov
lahf
add
or
ds
aaa
fdivl
adc
jb
inc
pop
mov
xchg
sbb
and
sbbb
pop
outsb
out
aaa
ss
or
sbb
inc
push
pop
cmc
aad
popa
push
cmp
bound
push
dec
ret
fucom
cwtl
repnz
cmp
lcall
cs
jo
pusha
repz
jp
sar
push
xorb
in
popf
cmp
xor
mov
xchg
push
mov
shrl
pop
addr16
fwait
dec
loopne
pop
test
je
aad
arpl
mov
out
cwtl
sub
xchg
aam
lret
je
or
xchg
xor
in
dec
divb
jge
cmpsb
mov
xchg
call
iret
jns
mov
mov
rcll
jns
adc
xchg
movsb
mov
fstp
mov
cmpb
call
add
xchg
sub
aas
inc
push
pop
mov
jge
sub
loop
push
xor
aad
incl
js
cli
sti
push
fildl
jnp
or
mov
pop
mov
sbb
leave
or
ljmp
cmc
in
in
arpl
mov
aam
cmp
xchg
cli
add
mov
cmp
shl
xchg
pushf
fisubrs
fisttpll
ss
inc
mov
add
es
push
lds
jae
mov
jmp
pop
lock
inc
mov
rcl
pop
pop
lods
inc
adc
fstps
add
mov
arpl
loope
ror
add
inc
jbe
jmp
lods
popa
xor
rcl
insb
fs
push
jnp
std
out
sbb
add
sub
mov
dec
xor
hlt
jl
scas
dec
inc
push
pop
pop
pop
std
and
jecxz
dec
cmp
cld
sbb
xor
pusha
loop
dec
scas
out
jno
xchg
pop
push
jmp
and
jne
aas
fnstenv
push
adc
and
jb
lret
add
or
push
mov
push
shrb
pushl
in
adc
stos
inc
lcall
pop
setne
pop
xor
mov
cld
outsl
aam
bnd
dec
mov
sub
push
movsl
enter
insl
imul
inc
test
fldt
jl
aam
addl
aaa
stos
mov
daa
or
setbe
aas
rolb
pop
popf
mov
popa
cmp
or
jbe
mov
cmp
dec
dec
inc
mov
fwait
pusha
inc
mov
or
push
push
dec
test
in
mov
jle
insl
xor
inc
mov
mov
cmp
and
icebp
mov
je
mov
cs
cmp
data16
es
out
cmp
fadds
imul
cmp
jl
bnd
dec
mov
pop
sbb
adc
and
leave
sbb
out
cmp
pusha
xor
cmc
xchg
push
sahf
push
pop
mov
mov
push
stos
mov
lret
mov
bnd
loopne
mov
jne
fisttpll
cwtl
pop
rolb
adc
lock
xchg
pop
adc
dec
rorb
cmp
xor
rorl
jl
pop
imul
xchg
mov
xchg
std
pop
dec
shlb
inc
scas
repnz
orl
push
scas
and
sbb
xchg
mov
dec
and
mov
fwait
add
xor
jnp
jo
rcll
arpl
adc
xorl
inc
ss
mov
push
xor
sub
pushf
arpl
nop
inc
arpl
shlb
xchg
cltd
pop
out
popf
fisubs
cmp
shlb
sbb
jnp
lret
and
and
fisubs
add
lret
xor
lods
repnz
xor
mov
leave
jne
loopne
hlt
push
cmp
xchg
mov
roll
cmp
lea
xor
cmp
push
bound
inc
mov
movsl
fs
es
dec
mov
adc
mov
or
sub
fucomi
imul
pop
sbb
out
scas
jae
adc
ss
es
js
jbe
xchg
int3
outsb
and
int
xchg
push
inc
xor
cmp
pushf
add
inc
sbb
dec
shr
pop
stos
push
mov
fmuls
idiv
xlat
jl
or
in
xchg
pop
rcr
push
xlat
lret
sbb
add
jo
mov
cmpsl
inc
lret
or
pop
incl
mov
cmp
mov
mov
inc
stc
dec
mov
and
add
hlt
int
push
loope
das
push
call
inc
dec
xchg
popf
fdivs
mov
jg
cmc
cmc
loopne
cmpsl
pop
out
push
inc
addr16
stos
mov
push
sarb
add
dec
ss
cmp
aas
xor
aas
mov
fsubl
dec
ret
ret
xor
xchg
jb
outsl
das
and
iret
push
add
aad
repz
stos
cmpsl
loope
stos
leave
xchg
jl
jmp
mov
inc
push
je
test
pop
in
cltd
cmc
je
adc
mov
repnz
pop
ss
lock
sbb
and
cmp
push
scas
aam
adc
subb
fists
sub
outsb
jb
cli
mov
dec
dec
add
dec
push
xor
pop
mov
jle
inc
das
js
jbe
mov
loopne
xchg
jns
ficoml
push
mov
decb
rorl
js
pop
mov
jp
add
loopne
xchg
in
dec
push
je
lahf
pop
ffreep
in
jle
jnp
mov
dec
or
add
adcb
xchg
and
fsub
pushl
leave
hlt
cwtl
cmp
sbb
push
fldln2
xchg
icebp
pop
xor
push
mov
adc
stos
push
es
add
in
mov
les
sub
into
pop
adc
push
sbb
ja
in
push
xchg
jl
pop
add
imul
movsl
jns
ja
arpl
sub
in
pop
mov
data16
pushl
sahf
pop
pusha
mov
push
insb
mov
inc
fs
mov
into
dec
out
cmp
sbb
pause
adc
jnp
ffreep
cld
ljmp
pop
cmp
aam
mov
outsb
adc
push
daa
sub
sarb
outsl
aas
repz
jg
jnp
scas
mov
mov
and
push
gs
sub
jl
les
sub
fstpt
out
pushf
inc
adc
aad
popa
js
scas
add
mov
stos
gs
or
inc
loop
cmpsb
nop
jge
sub
jmp
pop
or
stos
imul
adc
jg
cmp
test
mov
jmp
cmp
sbb
push
adc
das
negb
xchg
inc
hlt
sbb
mov
js
pushf
jb
mov
adc
mov
loope
pop
nop
outsl
stos
dec
push
jmp
jmp
xchg
jle
xchg
test
mov
mov
jge
jle
lret
sub
insl
add
test
bound
push
xor
dec
cs
mov
shl
or
cs
xor
push
mov
jbe
jne
lcall
enter
dec
and
out
lds
in
jl
and
sbb
jl
lods
stos
dec
loope
arpl
mov
xor
pop
sub
sahf
es
rorl
sub
lea
dec
push
rcl
and
jb
daa
stos
andl
mov
add
inc
repnz
jnp
mov
clc
or
fsubr
jge
mov
add
push
xor
fnstsw
movb
out
xchg
test
lock
rorb
pushf
dec
mov
aaa
sub
push
and
aad
dec
dec
in
add
adc
push
xchg
mov
pop
in
inc
mov
pusha
push
gs
cwtl
mov
pop
cmp
repnz
pop
sti
jmp
fbld
jge
pushf
ljmp
dec
adc
notb
aaa
rcl
xor
inc
dec
ja
push
fsubl
push
add
push
xchg
ret
shll
aaa
adc
jge
xchg
ret
out
fwait
out
mov
xor
mov
int
inc
lret
mov
cmp
xor
icebp
js
fidivl
rcrb
jp
sbb
mov
and
popa
and
cmp
jg
lods
jecxz
jnp
mov
and
popf
fisubrs
jno
or
xacquire
movl
cmpsb
sbb
cmp
and
mov
pushf
out
mov
sbb
leave
or
xchg
jae
mov
and
lcall
sub
andb
imul
ss
out
dec
pop
stc
mov
pcmpgtb
popa
int
inc
andl
cli
or
shrb
aam
subl
jp
and
fiadds
addl
jb
pop
xchg
dec
movsl
mov
push
shll
sbb
addb
sub
imul
loop
jmp
dec
xor
and
inc
mov
add
xrelease
fneni(8087
shll
in
mov
lret
cwtl
nop
add
in
xchg
push
push
jbe
icebp
lcall
adc
test
push
shr
or
inc
sbb
push
repz
or
jbe
loopne
loope
xchg
imul
push
mov
fsubrl
cmpsb
in
pusha
jae
cmp
jne
add
je
xor
in
ds
cmp
sbb
and
jecxz
pop
pusha
pop
jg
sbb
lcall
movsb
pushf
or
cmp
mov
test
jl
frstor
lret
mov
mov
inc
ja
jl
fsubs
repz
inc
jmp
insb
aam
addr16
fwait
cmc
js
imul
in
js
push
cwtl
mov
dec
jle
scas
das
pop
lods
int
popa
xchg
push
pop
nop
lret
stos
neg
sub
sti
scas
xchg
cs
mov
test
pop
stos
pop
arpl
or
enter
xor
mov
jo
push
imul
inc
int3
icebp
mov
mov
or
pop
ret
xchg
push
lret
fidivl
cmp
mov
and
popa
xchg
stc
aaa
es
mov
rolb
adc
in
xchg
sbb
jbe
in
inc
roll
mov
dec
jnp
or
rclb
in
out
js
movsl
movsl
sub
imul
mov
push
sbbb
les
dec
mov
push
cs
in
pop
pop
notb
inc
push
outsl
fcmove
adc
jp
xor
rcll
stos
fildll
leave
fnsave
daa
jge
in
push
dec
loopne
pop
pop
inc
aas
pop
push
add
in
add
push
jo
dec
jl
imul
imul
adc
xchg
mov
add
adc
outsl
iret
notl
imul
mov
xchg
push
or
jno
pop
jp
aaa
fldl
imul
adcl
xor
push
mov
push
jge
add
ljmp
sub
js
and
out
adc
cmp
cwtl
mov
fidivl
fs
sahf
roll
scas
ret
scas
xor
dec
mov
stos
inc
sbb
add
push
xor
adc
jne
push
test
jbe
or
jns
push
shl
rolb
insl
jbe
mov
add
movsl
inc
inc
add
stos
xor
dec
dec
les
add
inc
cmpsl
sbb
xor
cmp
jae
or
mov
or
jle
lods
rorb
mov
dec
push
lahf
in
push
xor
add
in
mov
cmp
cmpsl
jl
xchg
and
fdivs
fs
scas
jp
jnp
ret
nop
add
push
pushf
jmp
jbe
out
xor
and
mov
loope
mov
scas
cmc
cltd
add
mov
ds
rol
and
jns
inc
movsb
sub
lret
xor
inc
xchg
iret
repz
inc
lahf
loopne
push
adc
xor
mov
js
movl
fcompl
pop
shl
data16
lahf
test
dec
repz
popf
mov
or
sub
xor
je
repz
sti
out
push
add
popf
lcall
cltd
adc
pushf
jnp
xchg
sub
push
leave
sti
mov
dec
fsts
aam
lcall
inc
adc
xchg
mov
rorb
inc
adc
hlt
lock
dec
xchg
mov
nop
add
mov
out
add
movsb
inc
sti
imul
mov
aaa
mov
pop
mov
inc
inc
shr
and
push
push
sub
nop
push
push
mov
xchg
sbb
sahf
and
xor
mull
daa
jno
inc
lea
test
int3
push
and
cltd
mov
ret
int3
repnz
cmovno
or
cmp
cwtl
aas
sub
out
add
xchg
call
imul
pop
daa
jmp
lcall
mov
addb
xchg
rol
fxch
andb
jg
daa
jne
push
cli
add
fwait
test
mov
sub
and
loope
sub
cmpsl
sub
movsl
or
add
sub
fldcw
in
add
mov
sti
xor
inc
addr16
push
fcomps
pop
shlb
shlb
inc
mov
push
mov
mov
andl
aas
sbb
pop
or
inc
adc
pop
and
push
les
jno
pop
cmp
adc
inc
mov
mov
stos
fwait
mov
std
jnp,pt
mov
aam
jb
dec
dec
cli
or
imul
les
jae
sbb
and
adc
cmpsb
pushf
daa
mov
sbb
xchg
sti
mov
or
adcb
jle
fcomi
add
pop
fidivrs
sbb
data16
inc
fs
out
nop
xlat
roll
fsubs
push
xor
fildll
push
lock
or
outsb
mov
outsl
inc
lods
mov
les
mov
aaa
pop
out
loop
cmp
jns
mov
cmp
outsb
mov
lods
mov
or
into
mov
js
aaa
or
sub
mov
jb
xchg
icebp
test
das
std
nop
stc
mov
loope,pt
arpl
dec
cmpsb
or
scas
or
fnstcw
fcom
or
cs
sbb
lock
dec
imul
inc
xchg
orb
push
icebp
sbb
cmp
or
xchg
into
addl
xchg
add
mov
test
xchg
out
icebp
test
nop
jmp
xchg
jno
bound
inc
xchg
hlt
jge
ljmp
ret
ror
push
xchg
push
in
push
mov
xchg
dec
les
js
cmc
idivl
sbb
arpl
fstps
mov
loopne
push
loopne
or
add
add
sahf
nop
or
adc
repnz
out
das
and
in
pop
roll
cmp
lea
or
push
mov
int3
add
cmp
mov
in
dec
and
xor
and
movsl
cmc
mov
cmc
sub
or
jge
fnstsw
lock
aam
xor
dec
push
fldl
bound
stc
idiv
dec
xchg
lret
sub
in
fnstcw
adcb
orb
adc
xchg
fdivl
stos
xor
cmp
pusha
push
sbb
cmp
subl
sbb
or
cmp
out
push
adc
into
pushf
add
pop
out
icebp
cmp
ljmp
mov
std
ror
or
jno
mov
ret
rorl
pop
ret
out
push
inc
ljmp
cltd
xchg
test
push
fisubs
imul
fidivrl
xchg
cs
das
repnz
fs
cmp
add
xchg
and
lods
pop
je
jne
or
fxch
cmp
mov
add
idivl
push
out
fldt
push
sbb
test
arpl
shlb
notb
push
pop
mov
cmpsl
popa
into
faddl
data16
hlt
sti
fldenv
mov
cs
jae
pop
and
lret
mov
xchg
mov
jb
shll
movsb
data16
adc
bound
pop
hlt
mov
or
mov
mov
lods
add
cs
out
jg
cmc
in
inc
test
jle
jns
mov
cmpsl
ret
cltd
fidivs
pop
inc
mov
std
ret
js
stos
lcall
xchg
and
js
idivl
mov
add
roll
push
stos
sub
and
jo
test
test
enter
cmp
rorb
out
mov
pop
pop
dec
js
pop
jbe
les
popf
mov
shrl
inc
xor
gs
scas
xlat
clc
lock
or
cld
jne
sarl
jnp
je
je
sbb
or
sub
pop
inc
inc
add
and
add
and
push
sbb
push
inc
adc
shrb
cmp
aam
mov
mov
lock
mov
pop
les
mov
in
shlb
mov
pop
mov
and
and
loopne
lock
test
mov
inc
and
jb
cmpsl
xor
mov
rorl
inc
push
xchg
orb
mov
shlb
sub
mov
das
adc
pop
mov
rolb
push
enter
push
lahf
int
sub
stc
loope
adc
jge
mov
outsl
rcrb
mov
lret
inc
dec
scas
out
cmpsl
clc
mov
cmpsl
scas
outsb
iret
mov
testl
cmpsl
mov
pusha
shlb
dec
xchg
arpl
repz
dec
mov
or
and
int3
cmp
mov
inc
test
pushf
pop
cs
pop
mov
pop
mov
jo
pop
rol
and
data16
mov
shrb
xchg
push
jl
fimull
idiv
xor
leave
jecxz
out
sbb
add
mov
mov
daa
in
jae
inc
aaa
movsl
dec
jp
push
test
sub
popf
in
xchg
pop
push
adc
dec
xchg
cmc
iret
fcoms
mov
cmp
cmp
movsl
or
ss
test
sub
aaa
dec
mov
test
dec
mov
rcll
es
and
ficomps
ret
int
dec
xor
push
in
ljmp
add
mov
jmp
lahf
sub
xor
dec
ljmp
mov
add
inc
pusha
out
push
test
test
out
sbb
xor
dec
addl
pop
mov
xor
movsb
stos
xor
sub
push
adcb
xchg
mov
xchg
lahf
lock
adc
insb
pop
mov
cmp
adc
inc
cmpsl
adc
call
decl
insb
pop
mov
mov
push
adc
push
pop
fs
adc
push
and
push
nop
inc
mov
xlat
mov
push
fidivs
cld
dec
rorb
mov
mov
dec
lret
sub
jp
cwtl
sar
test
pop
ret
and
fisubrs
mov
sub
pushf
stos
out
mov
sbb
add
cmp
test
pop
fsts
mov
inc
scas
push
mov
and
hlt
les
mov
dec
testb
push
pushf
vcvtss2sd
and
fs
xchg
sub
sbbl
pop
pop
int3
xor
cmp
cmp
lcall
loop
xchg
add
fnstenv
and
push
adc
inc
add
test
xchg
push
hlt
iret
dec
lock
les
mov
ret
xchg
add
sbb
xchg
mov
jmp
lock
rcrb
stos
fs
lock
outsl
xchg
dec
push
cltd
cmpsl
pop
push
xchg
dec
mov
je
nop
cmp
lock
out
pop
iret
imul
dec
push
fwait
aad
push
loopne
sub
test
adc
inc
in
ficompl
lods
adcb
jmp
scas
add
inc
sbb
mov
pop
mov
fildll
and
enter
inc
mov
lret
add
push
jecxz
sub
bound
ret
jge
adc
shrb
mov
push
xchg
push
add
xchg
int3
ja
mov
cmpl
pop
mov
ret
rcrb
rorl
jb
mov
pop
xchg
xchg
dec
push
movsb
mov
mov
leave
sti
xchg
xlat
mov
and
inc
out
out
xchg
in
popa
jmp
es
fidivrs
in
mov
test
sbb
lea
pushf
add
sub
pop
inc
dec
push
std
xchg
xor
xor
shrb
dec
decl
pop
push
cmp
mov
cmp
xor
mov
pop
jge
sbb
push
setns
lods
mov
es
aad
xchg
xchg
sub
push
and
add
add
sub
add
xchg
mov
push
cmp
lcall
shl
lds
aaa
jnp
sbb
or
das
movsl
iret
push
dec
xlat
fsts
jmp
adc
push
out
jle
pop
pop
cmp
shufps
mov
sub
cmpsb
xchg
lcall
mul
pop
add
sti
push
xor
mov
loop
jae
push
push
push
outsb
jmp
jb
int
jl
dec
mov
push
dec
movsl
inc
repnz
add
push
mov
pop
cmovl
mov
adc
loopne
jecxz
inc
cmpsl
hlt
pop
popf
aaa
xchg
mov
push
popf
mov
test
pop
lea
insb
xchg
mov
push
pop
adc
mov
add
outsl
mov
sub
mov
loope
cmp
mov
jno
aaa
sti
nop
pop
or
inc
stos
es
push
sahf
lea
lcall
dec
movsl
sbb
cld
or
add
ja
push
mov
inc
imul
shlb
push
ds
shrl
jmp
bswap
xlat
adc
cmpsl
into
add
in
test
push
ficompl
jle
stc
sub
cli
dec
jp
adc
in
out
pop
lea
scas
sti
lret
rcr
ja
inc
sub
aad
insb
pop
imul
or
repz
jnp
or
cmpsl
js
and
sub
sti
pusha
insl
mov
mov
inc
loope
ljmp
xor
jle
mov
xchg
andb
inc
pop
jae
test
fstpt
push
loope
mov
fiadds
lea
push
xchg
jp
call
push
inc
shll
and
das
dec
fdivrs
inc
pinsrw
mov
out
lahf
add
clc
xlat
xchg
cmp
cli
or
out
out
rorb
add
popa
cmc
jl
add
xchg
clc
dec
je
or
sub
rol
scas
bound
cmp
popf
push
push
pop
pusha
in
rcrb
push
cmp
fistl
mov
and
adc
lods
dec
push
xchg
inc
or
xchg
mov
sbb
mov
dec
cmpsb
push
stos
loope
mov
addr16
cs
gs
inc
adc
cmp
stos
adc
push
cmpb
aad
add
lock
cmp
rcl
cmc
lret
xchg
dec
dec
lods
inc
push
clc
xor
jnp
test
mov
pop
dec
xchg
add
je
lahf
xchg
lret
cld
sti
incl
outsl
dec
xor
popf
mov
lret
xchg
cmpsl
cmc
icebp
shl
add
jb
data16
repz
mov
inc
je
adc
and
inc
or
jns
sbb
push
sbb
dec
xor
iret
scas
cmpsb
and
lcall
les
lret
cmp
push
dec
scas
movl
dec
sub
popa
nop
pushf
lds
xchg
cmpsl
addr16
adc
dec
xchg
sar
jno
jno
mov
ret
testb
pop
and
scas
or
add
out
fistl
in
pop
imul
cltd
adc
or
dec
imul
or
lods
pop
cmpsb
cld
pop
test
sbb
loope
adc
addl
pop
cmpsw
jo
mov
adc
lret
adc
fs
sub
xor
sbb
fdivrl
in
cmp
sub
sbb
insb
mov
stc
andb
int
or
lret
int3
out
or
jno
push
pop
sbb
cmp
int
and
mov
xchg
cmp
out
or
jle
jp
xchg
dec
push
xchg
cmp
psrlw
mov
ret
mov
test
cmp
aam
std
or
outsb
sbb
push
push
adc
mov
mov
mov
push
sbb
mov
xchg
sbb
mov
stc
xchg
add
ljmp
lcall
sbb
mov
fisubl
jecxz
lods
push
jmp
shl
inc
xchg
inc
xor
adc
jae
sub
mov
fcmovb
repz
mov
out
adc
je
or
sub
push
sbb
add
scas
lods
xchg
push
popf
pop
and
adc
xchg
mov
push
popa
addr16
jbe
xchg
sti
inc
pop
cmpsb
cs
sbb
mov
cmp
ss
push
mov
push
jo
ljmp
cli
movb
dec
cwtl
movsl
push
jae
mov
insl
and
mov
xchg
xor
pop
xlat
xchg
or
dec
mov
lret
dec
imul
fdiv
mov
push
stos
mov
int3
adc
pop
mov
sbb
sbb
lahf
aam
mov
sbb
push
iret
shrl
xor
adc
sbb
roll
outsb
fst
cli
dec
arpl
pop
push
iret
and
fs
int
xor
pop
call
out
daa
jl
pop
std
ret
and
inc
and
mov
andb
mov
pop
mov
push
add
decl
or
xchg
inc
clc
cli
nop
xchg
pop
scas
mov
ret
cmp
jge
int3
and
mov
xchg
xchg
xor
std
test
es
scas
scas
sub
lods
cld
pushf
addr16
lock
inc
or
cmpsb
or
sarb
pushf
mov
daa
and
push
mov
scas
or
les
rclb
fwait
sub
outsb
fnsave
test
loop,pt
mov
loope
out
mov
lods
icebp
loop
mov
into
insb
inc
mov
pop
stos
cmp
scas
es
aam
mov
and
loop
xchg
add
xor
or
loopne
insb
fs
repz
popa
js
mov
outsl
xor
inc
inc
das
cmpsl
adc
jl
cmp
jo
mov
daa
push
cld
jbe
mov
and
add
jle
mov
push
fcmove
in
aam
lret
imul
xchg
xor
xchg
cmp
int3
lcall
or
cld
push
in
fs
push
js
dec
sub
inc
movsl
jecxz
popl
adc
jbe
xchg
push
mov
adc
xorl
adc
imulb
or
les
mov
push
cmc
xor
icebp
pop
xor
popf
dec
add
xor
in
subl
pop
mov
lret
mov
mov
adcl
inc
aad
xchg
xchg
sub
sbb
leave
rcll
adc
aas
jmp
daa
rclb
dec
sbb
in
pop
mov
je
in
jmp
outsb
test
xor
mov
nop
sub
cmpsb
repz
mov
jge
movsb
pop
pop
pop
dec
sub
pop
sahf
mov
arpl
jp
or
repz
inc
mov
push
push
jbe
mov
inc
repz
mov
mov
ret
mov
in
adc
mov
aas
mov
xchg
adc
mov
lods
mov
andl
add
cs
ret
dec
lret
movsb
mov
sbb
stc
xchg
test
pop
xor
add
ljmp
sbb
stos
inc
pop
cmp
lods
cmpsl
scas
jnp
aam
shlb
mov
cmp
adc
jecxz
movsb
push
cli
mov
imul
xor
cmpsl
pop
popa
sub
push
insb
mov
push
and
sbb
lcall
icebp
cltd
xor
sbb
sub
and
push
jp
shlb
out
mov
pop
mov
pop
out
loopne
notl
add
mov
stos
fildl
mov
push
jne
lds
dec
jge
mov
mov
lret
je
insb
out
jb
fwait
adc
imul
sbb
xor
test
xor
into
pushf
sahf
sbb
pusha
xchg
movsb
inc
subb
add
lea
outsb
mov
mov
pop
push
xor
or
pop
ljmp
jecxz
into
mov
and
fcmovnb
aad
cwtl
lods
mov
iret
inc
lods
xor
loope
aas
mov
sbb
leave
xor
repnz
outsb
sbb
iret
adc
push
jmp
add
jnp
cs
mov
mov
out
addr16
mov
or
lock
pop
repz
fcomi
xlat
into
cmp
stos
xchg
loope
and
add
dec
mov
lods
imull
test
test
mov
fcomps
js
ljmp
xor
xchg
ja
pop
cmpsb
inc
lock
jno
mov
stc
push
mov
and
cmpsl
rcrb
sbbb
xor
mov
and
test
mov
in
mov
xor
shlb
dec
dec
push
testl
icebp
mov
sub
or
pop
pop
gs
cs
sub
or
insl
hlt
and
jne
int3
lods
ja
lahf
imul
xor
fiaddl
xor
mov
mov
in
pop
fwait
inc
mov
push
lret
mov
pop
mov
mov
lcall
loope
shlb
jnp
push
jg
xchg
jmp
pop
cli
test
out
inc
in
testl
addr16
fwait
jmp
mov
addr16
cmp
xchg
mov
negl
leave
push
call
or
stos
sub
leave
cmpsl
lea
scas
je
add
sub
fistps
xlat
pop
or
lods
les
xchg
fnstenv
sbb
test
jl
js
or
cs
scas
push
push
das
xchg
mov
xor
lahf
cmc
mov
and
jg
inc
loope
push
aaa
out
test
gs
xor
movsl
mov
push
xor
scas
xor
lret
shll
repz
jbe
pop
dec
mov
mov
pop
mov
pop
lahf
jmp
in
lret
jae
fst
pusha
lea
mov
jnp
fstpt
push
in
cld
xor
lds
ja
sub
xlat
jmp
xchg
ss
and
inc
pusha
test
dec
ret
arpl
aad
sub
lret
fcoms
js
outsb
jns
out
push
mov
pop
cmpsl
sbb
ds
xchg
jle
or
adc
inc
leave
add
pop
mov
inc
pushf
in
in
popa
cmp
mov
push
xor
xchg
mov
in
jo
jmp
push
jp
lcall
aam
cmp
push
cwtl
outsl
lds
dec
lret
pop
cmpb
and
mov
and
hlt
mov
push
lret
cmc
rorl
popa
sahf
loopne
inc
mov
into
jmp
mov
add
fwait
mov
xor
inc
fcmove
push
inc
aad
fists
push
loopne
andl
cltd
aaa
ds
sbb
pop
leave
sbb
out
jae
mov
mov
stos
dec
jp
jae
mov
nop
stos
gs
repnz
xlat
stc
data16
or
mov
inc
cmp
mov
fcmovnbe
or
aad
call
jne
xor
push
cli
inc
ror
lods
jl
sbb
mov
push
mov
sub
mull
mov
mov
jl
xor
sti
xchg
rcll
mov
gs
stos
andl
push
xlat
or
call
cmp
inc
cs
sbb
xor
arpl
push
popa
dec
int
addr16
cmp
adc
mov
repz
xor
inc
sub
pop
jno
je
push
aam
xchg
ss
sahf
mov
test
xchg
mov
in
pop
xchg
mov
inc
cmpsb
push
xchg
cmp
xchg
jns
push
or
into
stos
jge
sub
in
fs
call
push
lea
scas
lcall
outsb
jecxz
enter
in
mov
dec
push
js
jae
xchg
clc
lret
mov
pop
jne
jmp
jne
jecxz
je
repnz
jns
in
das
cmp
mov
sti
xor
scas
hlt
pushf
jge
add
pusha
fstpt
xchg
ja
dec
and
out
fstpt
xor
adc
mov
push
xor
mov
stos
mov
es
jne
loopne
mov
mov
lret
xor
and
jle,pt
adc
xor
stos
mov
jb
xor
addr16
test
cmp
in
gs
ljmp
les
push
xor
imul
insl
imul
xchg
add
outsb
jbe
fmull
cmc
clc
sub
pop
lret
in
adc
adc
int3
in
xor
fwait
cmpsb
mov
mov
rorb
add
inc
inc
icebp
cld
push
clc
mov
and
jle
fwait
addb
inc
sub
dec
sub
mov
lods
leave
addr16
rcrl
xchg
movsb
mov
ja
lret
fdivl
sub
add
out
testb
mov
xchg
dec
negl
mov
scas
pop
xchg
aam
inc
lods
ljmp
movsl
mov
lock
shll
cwtl
insl
push
pop
xor
nop
adc
cmp
xchg
gs
lret
stc
int
lods
repnz
fstpt
cmp
aaa
imul
mov
loope
lcall
pop
mov
iret
rcr
rorb
cmp
cmc
insl
hlt
add
or
mov
cmpsl
pop
in
enter
push
pop
sbb
jecxz
and
cmc
xchg
jno
mov
or
pop
movsl
mov
mov
push
jns
jp
imul
adc
and
test
or
add
add
adc
jge
sti
inc
mov
sub
ret
cltd
jb
xchg
jo
push
add
sub
rcl
dec
movsb
ficompl
cmp
and
popf
pop
mov
mov
mov
sub
data16
rorl
mov
dec
cmp
mov
insl
inc
popa
adc
add
sub
sbb
cmp
pop
cmp
pop
xchg
mov
mov
popf
inc
cmp
outsb
pop
cmpsb
jnp
mov
mov
ds
xchg
in
mov
iret
addr16
jns
popf
add
mov
dec
lcall
jno
scas
cld
push
xor
sti
mov
sub
mov
mov
xor
jmp
sub
mov
ja
cld
dec
mov
mov
xor
add
or
mov
dec
jb
mov
or
xor
cs
push
int
sbb
andl
pop
data16
xchg
rcll
mov
call
mov
out
inc
push
sbb
mov
xlat
int
cmp
mov
std
repnz
mov
dec
mov
xor
adc
sub
mov
adc
gs
mov
call
mov
jb
jg
movsb
adc
nop
loop
or
rcr
pusha
and
push
test
add
mov
je
in
jg
inc
cltd
or
and
insl
data16
out
dec
flds
shlb
jle
stos
repnz
subl
negl
mov
cld
outsb
daa
dec
test
gs
inc
rorl
lcall
mov
pop
push
sub
pop
xchg
inc
push
sub
and
stos
lock
push
cwtl
push
push
inc
pop
andl
popf
push
dec
pusha
push
mov
mov
cmp
xchg
sub
cmc
cwtl
xor
repnz
outsl
push
mov
jne
add
scas
ja
pop
hlt
push
jbe
sarb
mov
ss
mov
movsl
lock
xor
mov
cli
std
cmpsb
add
ror
into
dec
and
lock
mov
divl
push
adc
data16
int
and
mov
pop
cmp
insl
adc
mov
iret
jo
int3
inc
xchg
shlb
lock
or
lea
sub
mov
mov
sbb
call
mov
leave
imul
mov
or
mov
push
nop
and
ss
test
mov
cmp
mov
andl
lock
loopne
jne
inc
jl
out
push
adc
enter
add
icebp
jmp
and
test
xor
out
jecxz
dec
test
pop
mov
jmp
or
sbb
repnz
adc
mov
inc
sbb
xlat
jb
divb
dec
mov
and
inc
pop
xlat
lock
insb
jbe
push
mov
mov
outsl
stc
push
push
mov
outsl
cltd
call
out
jge
add
jne
inc
ror
pop
fs
fs
lods
cli
hlt
mov
jge
jbe
fistl
std
jo
nop
xor
xor
xchg
pop
lcall
pop
jo
cmp
in
mov
ljmp
dec
fists
mov
xor
or
pop
add
jb
divl
sub
sub
or
test
push
and
push
andl
fsts
sub
mov
insb
movsl
xchg
data16
cmp
scas
pop
std
jecxz
aaa
lret
sub
hlt
call
fstpt
mov
rol
mov
pop
xchg
je
sbb
mov
xor
xchg
fbstp
push
xor
or
enter
test
lods
aas
jbe
fsts
loope
movsb
push
jae
insl
es
lds
adc
inc
add
sarb
scas
loopne
fdivrp
cmp
mov
std
filds
dec
repnz
sbb
roll
mov
add
sub
xchg
imul
adc
je
push
bound
push
test
jmp
in
xor
loope
add
out
ss
cmp
or
std
lds
mov
xchg
mov
insb
mov
pop
popf
mov
xor
dec
sbb
leave
loop
push
ljmp
mov
lret
mov
add
mov
frstor
mov
xchg
lcall
xchg
mov
cmpsb
push
push
mov
icebp
ret
loop
out
insl
cltd
fildll
adc
jmp
cmp
push
or
jns
inc
in
dec
cmp
dec
xchg
xchg
lahf
arpl
mov
mul
sbb
cltd
add
jp
cmp
or
xlat
fidivrs
mov
mov
int
shrb
mov
and
pop
or
popf
cmp
lods
xor
xchg
shrl
addl
lds
fadd
mov
cmpb
loopne
and
into
add
xor
movsl
arpl
dec
lods
xor
pop
jbe
mov
hlt
cltd
divb
mov
shrl
out
cmc
insl
stc
pop
push
dec
les
jg
and
mov
aad
lods
outsl
stos
jns
jno
xor
es
cmp
arpl
pop
cwtl
mov
adc
xchg
rorl
inc
arpl
iret
dec
cmovno
xor
js
popa
xor
or
pusha
loop
aad
shrl
iret
sbb
enter
fists
mov
js
aaa
inc
xchg
aad
mov
cmp
xchg
bound
test
stos
sbb
loope
xor
sti
out
push
mov
xchg
into
dec
std
sti
mov
dec
jnp
cltd
je
pop
push
pushf
jno
mov
push
loop
push
dec
popa
xor
cs
dec
aad
mov
lods
repz
push
and
xchg
lahf
ret
mov
xor
push
or
cmc
cmp
dec
mov
push
lret
pop
dec
xchg
shrb
dec
call
xchg
stos
das
fs
repz
cmp
jmp
es
or
push
test
sub
imul
cmp
cmp
push
pop
std
fistpl
xor
into
out
pop
andl
insl
sub
xchg
sub
movsb
and
cli
cmp
out
dec
cmc
sbb
push
adc
xchg
scas
jge
sub
mov
std
cmpsl
pop
lret
iret
inc
out
inc
mov
enter
jle
xchg
sbb
scas
fdiv
dec
adcl
dec
xor
leave
cli
or
ss
and
repz
test
stos
mov
pop
es
sarl
aam
dec
es
insl
inc
or
jo
shrb
clc
mov
ret
sti
cmp
inc
jmp
push
pop
dec
jmp
lret
xor
scas
std
jecxz
sbbl
in
pop
lahf
ret
jbe
rcrb
sub
in
mov
or
mov
cmp
cmp
xchg
inc
mov
xor
aad
std
int3
dec
push
push
pop
cmp
cmp
adc
insb
cmpsb
sti
jmp
mov
mov
jl
sbb
cmp
outsb
dec
pop
sbb
mov
cmp
add
fwait
push
aaa
repnz
ja
repz
lcall
pushf
mov
std
int
scas
jns
je
test
cmp
sbb
rcrl
shll
mov
ret
imul
bound
jle
xchg
mov
push
pop
adc
push
mov
adc
add
push
enter
dec
mov
pusha
inc
cmp
adc
outsb
in
cmp
adc
aad
es
mov
ret
or
push
mov
cmp
mov
fisubl
mov
push
dec
stc
mov
xor
push
dec
mov
pusha
xor
popa
mov
inc
cmc
or
mov
in
orb
dec
mov
sub
jmp
push
push
jbe
testl
pop
dec
xor
xor
imul
stos
aaa
rclb
mov
rclb
sarl
fildl
faddl
ret
inc
movb
clc
cmp
clc
repnz
jmp
cmpsl
and
adc
add
std
lret
push
sub
lgs
mov
jecxz
mov
xchg
aam
cmp
mov
or
or
fadd
test
lods
sbb
arpl
fbstp
sbb
sbb
mov
bound
dec
aaa
fs
iret
sub
es
sbb
ret
aad
pop
int3
icebp
outsb
lret
mul
mov
lret
inc
mov
pop
out
mov
push
pop
std
in
dec
ss
mov
jbe
and
add
push
mov
push
cmp
pop
mov
cmpsl
cmp
rorb
mov
in
enter
sbb
es
inc
xchg
cmp
xchg
cmp
stos
cmp
hlt
repnz
in
ret
fs
adc
sub
adc
adc
cmp
push
pusha
loop
jb
neg
scas
movsl
std
cwtl
mov
sar
push
es
dec
pop
inc
imul
pop
loope
ljmp
jne
aas
fwait
jp
orl
aaa
xchg
std
sbb
push
loop
aam
and
inc
xchg
arpl
insb
mov
repz
inc
mov
in
adc
insl
cmpl
xchg
insb
movl
mov
dec
ss
jg
and
lcall
in
scas
ret
mov
shr
add
movsb
int
xor
mov
out
sbb
mov
jp
movsb
push
cmp
ljmp
mov
and
mov
ja
cmp
aam
dec
repnz
adc
cmpb
pop
das
enter
int
loop
enter
xchg
add
mov
jmp
fstl
adc
jno
or
cmc
sbb
in
imul
or
cli
push
cltd
icebp
mov
or
rcll
push
jmp
jb
aad
je
push
cmp
sbb
arpl
xchg
inc
std
add
push
and
insb
adc
rorl
cmp
fisttpl
mov
push
mov
scas
jbe
fidivl
testl
std
daa
movsb
notb
mov
jmp
pop
addr16
inc
orb
and
lea
clc
popa
cmp
sahf
pop
aas
cmp
test
push
xor
in
lret
push
xchg
sarb
aad
lret
cmovno
loope
cli
lahf
mov
les
sbb
lcall
sub
add
dec
lahf
push
std
inc
mov
outsl
inc
bnd
movsb
es
arpl
pop
lcall
pop
data16
dec
inc
pop
dec
imul
sub
cmpsl
loopne
xchg
in
pop
int
lock
adc
popa
add
lret
fsubs
lds
aaa
repnz
ja
icebp
xor
lods
pop
jmp
leave
xchg
sahf
inc
loopne
jb
enter
inc
jl
leave
cmc
pop
lds
jne
push
movsl
jae
cwtl
push
outsb
pushl
mov
lea
fidivrs
fwait
icebp
scas
or
adc
sbb
int3
jle
cmc
inc
call
in
test
cmc
xchg
fcmovu
mov
test
cmp
ss
in
and
je
or
cmp
dec
scas
adc
fmuls
xchg
in
push
in
pop
xlat
jle
outsb
sub
mov
stc
stc
pop
sbb
dec
aas
push
out
std
pop
dec
pushf
insl
dec
popl
loopne
add
sbb
sub
enter
sti
xchg
pop
sub
mov
inc
pop
jnp
cmpsl
mov
push
dec
sahf
pop
sbb
mov
jbe
push
jl
add
stos
xchg
stos
imul
add
int3
movaps
test
dec
repnz
mov
cmp
rorl
loop
sbb
mov
mov
mov
repnz
xchg
mulb
cmp
jmp
jns
push
lds
loope
inc
and
sub
jno
daa
or
and
jae
fwait
dec
cmpsb
lock
inc
mov
sbb
cli
push
sub
arpl
popf
adc
jae
sub
dec
xchg
cmp
shrb
mov
jae
hlt
out
movsl
push
and
add
fs
loop
je
mov
fiadds
xchg
jge
push
jg
in
mov
xchg
arpl
pop
movsb
js
or
fnstsw
inc
push
or
add
xchg
jb
ss
sbb
cs
pop
aam
add
es
and
inc
cmp
and
sbb
aad
dec
ljmp
mov
jns
dec
stc
dec
xor
adc
push
scas
dec
sbb
data16
cmp
scas
dec
mov
mov
adc
outsb
mov
fildl
or
add
push
sbb
xchg
push
dec
mov
inc
insb
dec
push
xchg
out
pusha
js
in
clc
pop
or
mov
in
in
mov
aaa
mov
int3
fdivs
shlb
inc
push
ror
icebp
popf
xchg
mov
repnz
loopne
push
sub
xor
repz
std
test
mov
mov
bound
cmp
inc
movsb
mov
sub
cmpsl
mov
mov
fdivl
popa
dec
bound
dec
insl
clc
push
sub
xchg
jle
xchg
cmpsl
push
repz
push
xchg
fbld
pop
iret
lock
loopne
ds
arpl
ss
pop
popa
sbb
insb
push
cmp
shr
jo
rorl
fwait
mov
adc
lea
inc
fs
xchg
sub
mov
adc
xlat
cltd
enter
push
out
pop
js
sbb
adc
inc
decl
ret
aam
out
outsb
dec
push
adc
sbb
pop
add
dec
jle
pop
jl
add
cmpsb
sahf
les
movsb
pushf
cmp
lret
in
iret
addr16
xor
bound
mov
es
xor
pop
das
cmc
test
mov
inc
push
icebp
mov
stc
cli
and
out
pop
mov
insb
mov
in
mov
pop
jl
fisubl
ret
cmp
mov
push
arpl
test
mov
push
into
mov
adc
daa
xchg
pop
mov
sub
xchg
mov
add
in
insb
ja
fs
add
pop
push
pop
pop
aad
pop
adc
cmp
addr16
test
movsb
add
icebp
jo
in
xchg
xchg
inc
or
xchg
ds
mov
mov
jmp
cmpsl
mov
mov
jecxz
and
shlb
add
pushl
cmp
jg
stc
jge
add
xlat
popa
dec
jbe
xchg
outsl
mov
sub
lahf
jnp
fwait
psubq
call
enter
fdivrl
and
ds
mov
mov
fildl
and
rclb
xchg
add
stc
rorb
lahf
sub
rcrb
mov
fucomip
outsl
or
mov
add
pop
and
imul
mov
and
mov
dec
mov
inc
lock
adc
aaa
movsb
stc
loopne
les
add
insb
rorl
lds
repnz
mov
or
fidivl
call
int3
pop
pop
xorb
sbb
mov
jge
add
push
fs
ffreep
imul
push
stc
pop
adc
jne
fwait
sub
xchg
jl
rclb
dec
adc
or
out
out
sub
clc
sub
xchg
jmp
sub
movsl
sarb
iret
dec
jle
push
arpl
push
mov
ja
out
push
ljmp
lods
cltd
scas
dec
shlb
inc
cmpsb
nop
cmp
mov
push
imul
lock
dec
mov
xor
mov
aam
jge
iret
mov
cmp
adcl
sbb
popf
inc
jge
push
sti
push
sarb
les
or
aam
adc
jg
lods
out
outsl
xchg
push
test
insb
pop
xor
cltd
loop
shlb
arpl
orb
and
ret
nop
mov
je
stos
cmpsb
sub
push
add
stos
push
fs
mov
sar
sbb
jp
and
sub
cld
cmp
dec
or
mov
dec
xchg
not
and
popa
adc
movsl
xchg
cmc
cmp
iret
and
adc
dec
jo
pop
cmp
mov
sub
rcrb
xor
int
mov
add
js
std
push
jecxz
cmp
or
mov
fnstcw
inc
inc
push
jle
jl
imul
inc
sub
gs
push
push
nop
mov
arpl
or
add
scas
mov
push
ds
rolb
fs
sub
inc
jp
call
pop
stc
in
std
insb
outsb
and
adc
jne
sar
das
clc
ret
pop
push
mov
cmpsb
stc
push
ds
mov
and
pop
sub
dec
sbb
stos
out
mov
xchg
rolb
idivb
rcr
jl
repnz
addr16
lea
mov
movsb
mov
ret
imul
ret
dec
ret
iret
fcmovbe
add
test
inc
dec
cmp
mov
insl
xor
mov
or
mov
mov
jo
lock
repz
xor
mov
push
ret
lds
in
lahf
test
mov
xorl
mov
in
and
jne
mov
inc
cmp
add
mov
aad
xor
xchg
sahf
imul
mov
dec
dec
gs
and
mov
mov
dec
insb
xor
pop
mov
es
pop
or
add
repnz
test
dec
dec
or
pop
lds
cmpb
popa
xor
out
mov
into
sub
pop
adc
or
repz
in
popf
adc
mov
adc
xchg
xchg
fsubl
pop
mov
jb
loop
pop
jl
int
fsubl
pop
imul
sub
jecxz
and
adc
in
mov
in
jne
cmp
in
jnp
gs
cmp
out
pop
pop
mov
push
mov
xchg
cmpsb
xor
cmp
mov
fistl
inc
pop
fisttpll
dec
and
cmc
call
dec
jecxz
sbb
int3
arpl
xor
rcrl
xchg
sbb
xor
outsl
test
add
sub
ja
pop
pushf
test
int3
adc
rclb
mov
repnz
arpl
mov
aaa
inc
jecxz
add
push
dec
or
notl
push
or
sub
insl
sub
imul
and
lret
or
or
adc
sarl
je
push
lcall
mov
and
mov
xchg
insb
and
push
cmpb
jg
test
push
in
or
dec
push
mov
mov
adc
arpl
mov
cmc
cmp
fs
outsl
mov
fnsave
daa
gs
je
test
mov
or
xchg
pop
int
cmc
cld
push
or
xchg
cmp
hlt
or
pusha
xor
xchg
cld
pop
incb
cmp
sbb
mov
jg
jmp
xchg
sub
or
inc
int3
lret
ret
mov
xor
cli
sbb
pop
add
scas
scas
out
ret
stos
inc
fcomps
mov
gs
mov
cmp
xor
sub
outsl
jb
fimuls
jbe
in
inc
dec
mov
movsl
pusha
jmp
xor
movsl
repnz
push
fwait
inc
adc
jns
cmp
jmp
addb
leave
add
cwtl
mov
cltd
mov
lea
add
aam
mov
jge
sbb
js
jb
push
fs
xchg
mov
imul
inc
dec
xchg
mov
test
int
or
sub
cltd
and
mov
in
ljmp
lods
inc
movsl
or
shl
pop
sub
mov
dec
push
xchg
in
scas
idivl
nop
xor
lods
and
or
inc
std
fimull
mov
fucom
fmuls
in
xchg
mov
xchg
mov
pusha
jo
mov
fidivrl
sbb
mov
in
je
data16
out
pop
test
iret
cmp
add
cld
push
mov
test
clc
mov
test
adc
lea
divl
jnp
lods
cmp
lock
jns
push
outsb
jle
xchg
dec
icebp
mov
push
loop
imul
push
cmp
dec
enter
out
fs
dec
inc
aas
add
adc
jp
dec
gs
mov
mov
mov
or
into
mov
push
lret
or
jge
mov
cmp
sub
andb
mov
adc
jecxz
pop
orl
cli
sbb
lods
fadds
mov
shr
and
push
mov
jg
jecxz
push
jl
inc
inc
jbe
fsts
push
test
and
sub
pop
xchg
out
leave
sbb
insb
pop
sub
xlat
jl
pop
outsb
cld
lock
leave
loopne
push
mov
scas
and
and
sub
andl
jnp
mov
lea
dec
rcll
popf
add
sbb
xchg
pushf
js
pop
nop
mov
in
je
sbb
fucomi
andb
mov
mov
inc
xor
push
add
jno
pop
and
or
cli
fstpt
push
imul
pop
xchg
push
xchg
jo
pop
cmpsl
das
fildll
sysret
xchg
add
jae
mov
mov
mov
dec
sub
xchg
add
test
push
push
out
aas
scas
xchg
jae
in
inc
mov
cmpsb
es
push
push
jmp
ljmp
inc
mov
sub
scas
es
lds
sub
dec
iret
mov
sbb
xor
aad
fs
ljmp
clc
js
scas
pop
pop
dec
out
lret
dec
lock
push
sarb
pop
add
or
pop
jl
scas
or
shrl
out
sbb
call
mov
movsl
pop
xchg
or
shlb
adc
push
sub
shrl
out
cmp
lods
push
lods
insb
mov
decb
lock
int
mov
xchg
in
jb
adc
pushf
xor
daa
leave
cmp
jne
jl
fwait
mov
mov
cs
xchg
lods
popa
cmc
ss
mov
int
push
push
mov
xor
ljmp
xlat
and
push
jno
das
shl
lcall
stos
xor
pop
das
add
lret
lods
hlt
xchg
lock
loope
cmp
sbb
dec
sbb
fs
insl
insb
jle
das
inc
mov
inc
enter
shrl
pop
jl
jp
push
aam
pop
icebp
jge
sbb
lock
sub
daa
cld
fiaddl
sahf
sub
test
outsl
mov
les
cmpsl
mov
pop
fcmovne
fisttps
jnp
cmp
push
jp
adc
ret
jge
adc
out
stos
sarb
lret
jb
or
or
mov
jmp
insl
loop
and
pop
aaa
cmp
and
and
sbb
and
pop
mov
xchg
pushf
push
mov
xchg
sbb
xor
int
adc
std
mov
inc
sbb
xchg
lret
test
adc
leave
dec
jmp
cmp
out
jp
xor
fisubs
test
dec
jo
push
add
push
pop
les
or
loope
divl
jbe
clc
out
jecxz
pop
adc
sub
popa
sbb
mov
mov
pop
xor
jmp
mov
mov
cld
mov
stos
bound
sbb
push
fdivl
int
loopne
ss
jns
ljmp
pop
xchg
test
mov
jo
das
push
xor
outsl
rol
in
or
divl
pop
incb
sub
xor
adc
and
ret
test
cmp
mov
adc
inc
jmp
repnz
jno
imul
cli
mov
jmp
add
dec
and
mov
mov
rsm
pop
or
mov
jecxz
sbbl
cld
push
push
test
filds
loop
stos
dec
into
mov
mov
or
mov
shlb
push
push
jae
cmp
inc
mov
pop
mov
push
push
movsb
movsb
loop
das
or
pop
adc
call
fs
std
fsubr
scas
in
add
pop
pop
mov
lock
fs
lret
mov
sbb
scas
scas
mov
subl
fwait
cld
cmp
mov
xchg
mov
pop
pop
daa
lods
cmp
ljmp
cmc
aad
pop
pop
leave
test
lds
mov
inc
fidivl
pop
sbb
push
or
shl
jle
dec
arpl
test
lods
pop
out
jmp
jno
fstpt
fldl
mov
aad
punpckhwd
xor
int3
push
ja
mov
lea
dec
adc
arpl
in
inc
dec
cmp
dec
addr16
leave
test
jo
fs
xchg
xchg
sbb
in
int
push
xchg
xlat
adc
xor
icebp
ret
insl
or
sbb
cmp
data16
mov
fsubrl
cmpsb
fmuls
gs
fidivl
out
jnp
add
cmp
mov
sbb
addr16
sbb
xor
mov
sub
jbe
push
addb
fwait
mov
push
fwait
dec
ljmp
pusha
fisubrl
pop
inc
idivl
test
ret
jo
fists
fiadds
pop
sub
mov
lret
mull
das
sbb
fnstcw
pop
test
and
or
repz
push
xor
lea
push
cs
mov
icebp
stos
sbb
imul
fldenv
inc
stos
inc
inc
movsl
dec
adc
out
push
addr16
shrl
sbb
orl
cmpsl
ljmp
insl
cld
pushf
push
pop
sbb
mov
add
jecxz
enter
push
ss
dec
sahf
dec
jmp
imul
add
mov
mov
imul
mov
fnsave
icebp
jge
stos
jae
lret
andb
and
mov
sub
call
or
int
jb
mov
fisttpll
pop
lahf
outsb
aaa
mov
sbb
rcr
popa
pushf
sub
sub
imul
push
push
pop
imul
xor
pop
fs
dec
arpl
neg
jns
xchg
fs
in
pop
leave
mov
xchg
xchg
daa
scas
or
mov
mov
mov
jecxz
jo
xchg
dec
mov
add
or
add
sub
or
fsubrl
push
add
int3
bound
pushw
or
ffreep
sbb
dec
ljmp
and
adc
and
sbb
mov
sbb
cmp
xchg
push
push
daa
or
jmp
enter
inc
ds
ds
xor
sahf
movsb
es
push
arpl
xor
mov
divl
inc
cmpl
jle
jl
int
cmp
ret
stc
scas
sub
xchg
sbb
jno
xchg
jp
daa
in
stc
push
adc
insl
repz
mov
inc
pop
cli
sub
xchg
aad
jae
rorb
sarb
std
repz
jmp
aas
xor
dec
in
hlt
push
mov
in
xor
sub
cmp
adc
xor
fmul
dec
mov
xchg
inc
insl
dec
push
inc
loope
dec
ret
xor
inc
mov
mov
cli
out
in
repz
lret
imul
dec
mov
pusha
cwtl
aas
mov
adc
insl
aad
jge
lea
gs
and
fnstcw
aaa
scas
inc
inc
jg
xor
insl
pop
sub
pop
or
cltd
ljmp
push
in
int
mov
dec
cli
adc
sti
pop
inc
lock
or
pop
jno
push
aam
imul
ljmp
test
repz
inc
insl
fsubrp
jnp
dec
test
xchg
or
imul
inc
sarl
xchg
inc
cmpsl
data16
jecxz
adc
sub
je
dec
scas
ds
adc
outsl
cwtl
push
mov
mov
test
jecxz
mov
es
mov
dec
jmp
outsb
sub
jb
movsl
xchg
xor
inc
inc
xor
adc
sahf
fiaddl
pop
loope
enter
adc
or
push
ljmp
mov
lcall
je
dec
test
pop
mov
aad
inc
xchg
mov
mov
sysenter
popf
cltd
inc
adc
jns
in
inc
inc
cmp
idivb
fsqrt
sub
aad
mov
mov
test
xchg
or
xchg
jle
out
jecxz
mov
roll
adc
insb
bound
out
sti
sarl
shl
mov
mov
cld
jb
test
and
sbb
gs
mov
js
sarl
cltd
fcoms
xor
mov
dec
loop
add
add
sbb
jb
cmp
loopne
fimull
jecxz
jo
outsl
mov
mov
pop
dec
xchg
pushf
movsl
sti
stos
jmp
add
gs
pop
in
sti
jg
pushf
fs
xor
or
pop
mov
mov
jbe
mov
push
cmpsb
inc
and
xchg
pop
add
test
cmp
inc
sub
dec
ret
mov
cmp
es
xchg
orl
pop
dec
inc
out
movsl
mov
cmpb
xor
xchg
push
cmp
mov
dec
cmp
mov
adc
cmpsb
dec
test
mov
pushf
inc
std
test
inc
out
adc
fwait
ljmp
daa
push
decb
and
ljmp
jl
xchg
and
pop
jne
cmp
cmp
sub
add
out
cmp
mov
clc
inc
aas
inc
jge
push
mov
and
dec
jp
cmp
mov
pop
jg
pop
scas
xor
daa
data16
jb
test
jnp
lcall
mov
jno
repz
pop
cmpsl
pop
xlat
inc
outsl
dec
add
add
adc
cmp
xor
jg
xchg
mov
aas
int
out
push
cmp
push
xor
ret
andb
std
sbb
xchg
cmpsb
xchg
jns
xor
xor
inc
mov
inc
push
sub
insl
je
cmp
pop
imul
das
lods
movsl
push
imul
cwtl
mov
daa
movsl
std
pop
rcrl
gs
adc
sub
out
lock
imul
test
push
jge
mov
sub
cmp
dec
loopne
hlt
fidivs
jb
adc
fs
hlt
jno
and
sub
mov
fwait
and
jp
sbb
inc
int3
repnz
bound
movaps
mov
mov
sar
into
test
cmpb
push
addb
or
mov
add
shll
inc
dec
jle
fimull
test
fcmovnb
or
jmp
mov
and
add
aas
sub
adc
mov
jbe
sbbl
fwait
push
loop
sbb
xchg
notb
repz
sub
inc
dec
aad
and
push
popa
and
or
sbb
pusha
or
ret
outsl
leave
sbb
clc
jle
bound
or
pop
ljmp
and
pop
sbbb
cltd
outsb
or
xchg
pusha
data16
les
fdivl
add
js
sub
or
adcb
inc
dec
jne
inc
es
or
aaa
pop
jp
loope
outsb
inc
xor
xor
scas
or
cmpsl
adc
lahf
mov
cmp
js
in
sub
iret
add
out
mov
cltd
mov
cmc
xchg
ja
jne
xchg
bound
pop
loopne
clc
adc
out
xchg
mov
popf
jnp
mov
fimuls
pusha
xchg
pop
mov
push
out
sbb
inc
out
mov
adc
jle
rcrl
add
or
scas
movsb
sub
rorl
xor
xchg
push
enter
mov
pop
pop
and
lret
fsubr
dec
test
test
subl
sub
in
js
cmp
sahf
les
pop
loope
mov
dec
addr16
fnstenv
dec
int3
dec
ficoms
fsubs
pusha
or
jnp
cwtl
mov
popf
mov
jmp
cmpsl
nop
and
or
sahf
aad
daa
mov
pushl
jb
push
outsb
xor
xchg
xlat
xor
ret
sbb
push
cwtl
mov
push
cmp
sbb
jmp
mov
out
leave
mov
inc
mov
aam
cmpb
xchg
aad
or
xlat
jle
sahf
adc
stos
jge
ja
pop
xchg
cltd
movsb
mov
mov
je
test
test
loope
lahf
xor
dec
jl
outsb
mov
lret
arpl
jns
pusha
popf
subb
loope
hlt
jbe
xchg
dec
cltd
xlat
push
mov
aam
sub
stos
cltd
dec
jno
fucom
in
xchg
testl
dec
sub
lock
clc
lock
add
sub
jno
rorb
lods
xchg
andb
dec
aad
addr16
jne
jecxz
int3
dec
daa
loopne
pop
sbb
mov
iret
and
mov
std
mov
cmpsb
cltd
sbb
fwait
sbb
inc
fcmovb
iret
pop
popa
inc
les
popf
cmp
and
lret
adc
xor
iret
xchg
mov
mov
xor
jmp
mov
adc
or
xchg
sub
sbb
inc
shll
adc
pop
les
mov
inc
mov
into
mov
and
scas
and
inc
xchg
popl
negl
and
and
repz
test
dec
or
xchg
mov
adc
pop
lock
dec
clc
xchg
mov
stc
das
pminsw
cli
pop
mov
nopl
mov
fnstenv
jnp
lea
adc
leave
dec
mov
sub
sub
mov
dec
push
mov
cltd
xchg
call
rcl
cmp
jge
movsl
mov
in
int3
addb
clc
js
adc
loopne
cmpsb
fldcw
leave
test
aam
aas
or
lret
jno
inc
mov
sbb
mov
roll
jne
insl
out
fdivl
push
mov
dec
cmpsl
loope
dec
dec
pop
aas
mov
push
or
movb
sbb
out
jb
lods
sub
fs
sub
sub
mov
out
out
loop
loope
cltd
or
pusha
mov
sbb
sub
xor
mov
fisubs
test
movsb
jecxz
or
push
mov
fistps
addl
aas
jp,pt
sbb
testl
ret
out
aas
ret
es
scas
fstpl
xor
jae
xor
mov
fldt
xor
push
inc
ljmp
inc
mov
and
es
sahf
cmp
in
jg
shll
lods
xchg
push
lahf
fisttpll
aaa
mov
push
ficompl
out
sub
ret
cmp
jg
jo
xchg
adc
and
cmp
mov
test
add
and
test
jecxz
nop
ja
push
mov
or
sbb
fadds
jmp
mov
test
inc
insl
xrelease
stos
repz
inc
cli
adc
xor
xchg
jp
aaa
je
and
scas
add
outsb
xchg
mov
push
fmul
jnp
xor
test
ret
mov
xchg
out
push
add
push
iret
cmp
sub
xor
lahf
push
pusha
pop
pop
add
mov
out
xchg
pusha
and
xor
loope
adc
rorb
pushf
jp
adc
sbb
sbb
movsb
dec
iret
outsl
sbb
mov
rdpmc
stos
ljmp
add
sbb
xor
add
sahf
inc
xchg
stc
push
xor
jae
movsb
ljmp
xor
sub
dec
subb
ljmp
ljmp
hlt
push
or
cmp
lods
mov
rol
lea
jge
pop
fs
cli
and
fimull
cld
add
outsb
pop
push
push
dec
and
mov
push
or
and
or
inc
lret
push
jb
enter
add
or
outsb
pop
imul
jno
jae
jmp
decl
mov
xchg
pop
repnz
adc
dec
dec
je
sub
jns
scas
push
cmpl
mov
jle
adc
es
xchg
in
mov
or
cltd
fbstp
movsb
mov
pop
jbe
cmp
pop
cmpsl
xchg
adc
iret
movsl
sbb
sti
insb
ret
shr
test
jle
sbb
out
jnp
and
or
adc
mov
ds
daa
fstps
insb
and
out
orl
std
and
xorb
inc
jg
es
ja
adc
in
cld
nop
ret
mov
shlb
outsl
sbb
outsl
lcall
add
in
push
cmc
pop
outsb
mov
cs
int3
mov
mov
icebp
xor
sub
mov
add
sti
xor
add
inc
inc
xchg
push
imul
iret
fpatan
cmp
sahf
sbb
nop
ljmp
cmp
popf
push
loopne
mov
adc
fs
mov
pusha
sub
xchg
daa
aas
clc
stos
pop
and
aad
sarl
push
adc
pusha
jns
mov
inc
mov
flds
xchg
add
lahf
sbb
jb
jl
pop
mov
pop
mov
push
inc
push
push
push
imul
outsl
call
push
jno
fwait
xor
in
insb
out
mov
or
clc
jns
mov
lcall
sbb
ss
inc
cmp
popa
popa
push
aaa
in
adc
popa
and
sbb
mov
pop
push
bnd
mov
dec
cmpsl
ret
repz
sub
pop
gs
adc
jo
adc
stc
sbbb
sbb
dec
aad
sub
movsb
test
shlb
ret
mov
imul
outsl
inc
dec
sbb
test
and
sbb
cmc
loopne
ret
cmp
arpl
push
daa
add
sbb
movsl
aad
pop
push
jae
repz
jae
or
xchg
shll
mov
and
push
ss
movsb
loope
inc
negl
jl
adc
mov
je
lea
movsl
sub
shll
and
loope
sti
jns
jnp
and
xchg
wrmsr
mov
sti
es
scas
inc
call
stos
sbb
mov
fcmovnu
cli
push
jl
mov
les
cld
cmp
je
dec
mov
jmp
xchg
mov
sahf
stos
lahf
ret
js
dec
sub
add
push
stos
aad
mov
pop
or
jbe
or
ljmp
aaa
pop
cltd
incb
pop
cmc
sub
mov
shlb
and
lods
sbb
in
and
imull
orl
jle
and
push
push
pop
out
insl
imul
inc
enter
pop
push
movsl
enter
std
cmp
test
shrb
lcall
scas
push
insl
mov
xor
daa
mov
push
stos
xor
jnp
nop
jl
xchg
cmp
cwtl
cmp
mov
pushf
dec
ret
sbb
jb
push
mov
lcall
cmpsb
add
mov
push
insl
pop
inc
cmpsb
mov
je
fbstp
sahf
sahf
popa
shlb
mov
mov
test
aas
cli
xchg
adcl
femms
data16
sub
pusha
push
xchg
xor
sti
icebp
jbe
or
fcmovbe
loop
nop
out
mov
fnstcw
and
fisubrl
insb
push
fimuls
mov
inc
mov
sarl
leave
pop
addr16
subb
push
pop
sti
pop
fcoms
inc
fidivl
outsl
push
jbe
pop
into
cmc
or
jno
cmpb
dec
or
pop
sti
lret
mov
mov
lahf
loope
sbb
mov
jmp
ja
outsl
adc
jnp
sbbb
aam
dec
sbb
fisubrs
push
test
sbb
aas
or
shrl
js
sub
add
cld
sub
sub
sbb
or
loop
pop
pushf
popf
das
rcll
movsl
add
ds
je
sarb
std
mov
add
mov
push
mov
test
mov
inc
pop
fstpt
fisubs
jae
fisttpl
pop
daa
mov
fs
std
lret
jle
ret
pop
cmp
pop
dec
xor
adc
inc
sub
jnp
xchg
insb
pop
fxch
adc
lret
lahf
mov
insl
dec
and
pop
xchg
stc
test
adc
adc
sub
sbb
mov
lret
mov
dec
repnz
pop
orb
decb
mov
lock
cltd
aaa
and
lahf
mov
movsb
pop
mov
inc
mov
jb
std
or
jae
mov
mov
xlat
cmc
fmuls
push
dec
or
sub
pop
iret
xlat
loop
mov
rclb
jecxz
pusha
jmp
imul
pop
aam
imul
xchg
jns
adc
dec
jnp
and
leave
das
iret
cli
rorl
inc
cmpsl
lahf
mov
push
lret
or
push
cs
lods
fsubrs
pop
dec
mov
iret
test
and
cmp
sbb
xchg
adc
and
icebp
lcall
rorb
je
inc
loope
sbb
pop
push
xor
insb
cltd
or
nop
pop
adc
mov
into
scas
xchg
rcrl
cld
and
icebp
dec
pushf
imul
jb
dec
mov
mov
pop
jb
andl
int3
lret
mov
sub
icebp
mov
loopne
lahf
arpl
dec
mov
cmp
sbb
adc
jg
stos
out
mov
cmc
dec
popa
xor
pop
clc
push
add
in
push
adc
les
jmp
bound
mov
adc
mov
jnp
cmp
jge
hlt
dec
loope
pop
lcall
pop
das
mov
je
out
adc
out
add
ret
scas
cwtl
call
loopne
or
outsl
lds
cmc
enter
mov
or
andl
mov
sub
insl
test
leave
jecxz
sub
test
or
or
pusha
pop
outsb
ja
or
jno
mov
push
pop
js
insb
pop
ret
call
xor
sub
inc
or
cwtl
cld
cs
incb
js
int
cltd
mov
mov
mov
repnz
push
int3
pop
or
jl
dec
dec
push
inc
pop
out
notb
imul
test
aad
add
hlt
sbb
out
ret
popf
mov
cmc
xor
pushf
shl
loopne
lea
or
in
cmpsl
int
jnp
inc
cmp
mov
jnp
pop
lock
addl
push
arpl
js
inc
push
es
std
faddl
sbb
decb
jo
adc
loop
ja
mov
sub
iret
fstps
or
mov
xchg
mov
je
push
mov
inc
int
push
adc
push
or
inc
outsb
jb
ror
ja
sbb
pop
jecxz
add
pop
inc
push
sbb
fldt
sahf
sub
ja
outsl
fidivrl
les
aaa
dec
in
outsl
cmp
inc
idivl
pop
fs
push
mov
mul
arpl
mov
dec
mov
pop
add
xor
sbb
es
sti
xor
sti
or
mov
push
inc
cmpsb
in
jo
push
xor
addr16
aam
pop
mov
cmpsl
inc
xchg
imul
outsl
sbb
out
lock
arpl
pop
xchg
out
mov
repnz
xor
pop
mov
xchg
jecxz
imul
scas
fisttpl
repnz
add
jle
inc
xor
pop
sub
jns
sbb
lock
mov
lcall
cltd
xor
in
lods
xchg
lahf
pop
ret
in
mov
fldl
fsincos
out
xchg
xor
stos
das
jl
imulb
sub
sub
pop
leave
xchg
cmp
xor
enter
call
test
imul
add
adc
pop
push
lret
loope
jmp
dec
fsub
loope
jno
mov
or
xor
iret
add
mov
sbb
adcb
add
ss
fiaddl
aaa
inc
arpl
imull
cmpsb
loopne
xchg
pmulhw
jo
fwait
inc
dec
in
mov
lods
stos
inc
inc
pop
lds
sub
fwait
mov
sub
mov
outsl
scas
or
imul
loope
sub
ret
bound
lcall
insb
dec
lock
adc
push
aaa
push
cmp
xlat
cmpsb
test
pop
ss
test
scas
inc
pop
outsb
cwtl
pushf
popf
xchg
lcall
or
shll
lds
insb
add
scas
jnp
icebp
inc
jge
xchg
xchg
xor
mov
mov
subb
pop
add
fidivrs
outsl
mov
mov
cld
ficompl
shll
sbb
shlb
loop
rcr
dec
loopne
mov
pop
lods
scas
cltd
dec
and
adc
sbb
jge
addr16
dec
xor
dec
add
xchg
jmp
pushf
hlt
jp
gs
pop
lret
xor
push
inc
imul
pop
ret
jle
xlat
das
jmp
add
sarl
and
sbb
data16
insl
imul
cmpsl
mov
dec
xchg
data16
mov
cmp
xchg
lea
sbb
rolb
mov
outsb
imul
sub
sbb
jns
aas
mov
add
push
mov
push
sbb
icebp
sbb
inc
mov
xchg
pcmpgtw
xchg
mov
imul
xchg
or
dec
push
and
scas
scas
aad
rclb
mov
mov
ds
aaa
mov
testb
pop
mov
inc
mov
mov
imul
dec
decl
jp
push
aas
inc
enter
out
stc
das
cmpsl
xlat
cwtl
stc
mov
xlat
das
sub
mov
into
test
and
pushl
shrl
jns
lds
stos
aam
push
mov
cli
mov
push
sub
jae
icebp
xor
pop
push
dec
fdivs
xchg
pop
add
repz
call
jae
pop
cmp
es
daa
insl
fs
mov
cli
push
pop
testl
mov
data16
pop
xchg
cltd
cmc
pop
xor
repnz
push
sbb
sbb
mov
jae
dec
mov
mov
xor
loop
jae
lock
mov
out
pop
pusha
fidivrl
filds
sub
mov
adc
test
cli
jg
sbb
in
add
lcall
test
ljmp
mov
dec
jae
lret
inc
push
dec
mov
or
inc
mov
mov
into
fimuls
pop
add
add
mov
sub
das
mov
fistps
into
frstor
jnp
xchg
cmp
mov
testb
inc
fsubrp
call
sbb
or
sbb
dec
jmp
adc
or
mov
btc
push
leave
add
and
lea
aaa
mov
jg
data16
sti
pop
rol
dec
xor
negb
loopne
mov
fmul
mov
adc
xchg
mov
adc
cli
sbb
ret
jb
adc
fs
movsl
shrb
jl
cmp
rcrb
stos
jmp
xchg
insb
clc
outsl
mov
cmc
cmp
dec
std
frstor
sub
jmp
popf
iret
mov
sbb
rcll
loop
cmpsl
cmp
xchg
jge
push
dec
pop
sub
add
pop
and
sbb
fldenv
or
xchg
daa
xchg
and
adc
pop
aad
pop
lock
xchg
push
leave
test
or
cmp
test
mov
cltd
jmp
test
or
clc
jle
pop
test
mov
lock
rorl
xchg
test
inc
sbb
push
icebp
or
ret
jp
xlat
nop
dec
mov
aam
dec
cmpsb
aad
fisubl
out
mov
js
sahf
out
in
daa
lcall
mov
pushf
sbb
aam
or
inc
stos
jecxz
in
cmp
shrl
dec
jecxz
add
add
sub
and
jae
mov
imul
popf
sbb
gs
test
sub
dec
mov
xbegin
mov
aam
fsts
repz
ret
pop
pop
mov
call
outsl
sbb
push
sbb
xchg
arpl
jbe
or
iret
psubusb
cmp
adc
jecxz
pop
rcrb
cmp
neg
and
test
pusha
out
sbb
inc
inc
call
outsl
add
lahf
fsubs
loope
mov
dec
pop
sti
in
push
lods
jno,pn
imul
stos
ss
stos
mov
xor
pushl
jge
data16
sub
in
and
adc
mov
and
sbb
fildl
lods
repnz
dec
test
lods
addr16
out
ss
cmp
dec
inc
das
scas
sbb
dec
push
jo
fdivrl
adc
cmp
xchg
add
mov
pusha
inc
or
stos
fs
jle
dec
scas
insb
fstl
jno
outsl
sub
ret
lret
mov
cld
mov
sti
rcr
xor
das
jmp
cli
mov
lcall
stos
int
add
std
xor
jge
int3
andb
lahf
xor
pop
dec
sbb
call
test
lods
mov
pop
pop
repz
pop
mov
sub
iret
int3
cmp
push
xor
ja
out
popf
push
sbb
mov
jo
jp
push
ljmp
call
push
imul
pop
cmp
orl
jns
xor
push
subl
orl
pop
push
cli
mov
mov
xchg
sub
fsubrp
mov
xor
decl
dec
mov
push
cmovge
cmp
xchg
xor
test
jecxz
mov
hlt
sbb
sub
dec
ss
xchg
adc
mov
icebp
ljmp
les
push
je
cli
dec
add
mov
cmc
pop
out
jns
aaa
mov
push
push
aad
popf
cmpsl
add
cmp
gs
dec
dec
lock
fistps
std
and
hlt
das
jo
dec
xchg
or
scas
sub
mov
push
xchg
mov
adc
add
cmpsb
jnp
addb
fcmovb
pop
cmp
test
in
xchg
adc
cmpl
int3
sbb
add
xchg
jecxz
rolb
xor
add
and
dec
jae
shrl
xor
sbb
inc
out
movsb
imul
aam
pop
pusha
test
rorb
icebp
out
xor
ds
xor
fnstsw
arpl
add
inc
xchg
xchg
sahf
jmp
call
mov
shrl
jns
xchg
push
xor
repz
jecxz
push
add
cmpsl
pusha
adc
and
dec
cmp
adc
outsl
popf
mov
loop
mov
daa
xor
divl
cmp
and
ja
inc
popf
jp
out
fildll
xchg
sahf
inc
movsl
mov
dec
pop
call
arpl
ret
pop
cmpsb
dec
adc
pushf
dec
popf
lods
fidivrl
push
repz
les
aaa
dec
jae
jnp
add
or
loope
or
mov
fcomps
hlt
cld
push
ficomps
arpl
int
mov
cld
adc
loop
jp
pop
xlat
comiss
mov
push
stos
mov
xor
inc
mov
loop
jge
jge
lret
jge
jne
rcrb
sahf
jmp
imul
mov
jne
movsb
sahf
push
mov
decb
cmp
lret
fwait
mov
push
gs
andl
push
movsl
ret
scas
cmp
imul
xchg
gs
iret
and
movsl
insl
push
sub
pop
adc
mov
fidivrs
adc
or
notl
stc
inc
fs
sub
aam
les
lock
test
pop
insl
jp
jbe
dec
sub
or
fisttpl
daa
xor
mov
lcall
test
cmp
test
lahf
aaa
push
stc
fs
aaa
cmp
aas
loope
fs
lahf
stos
mov
cmp
fs
jecxz
scas
lds
popf
movsb
and
xor
enter
cltd
repz
inc
cmp
test
cmc
add
cmpsl
hlt
mov
adc
pop
scas
aas
pop
sub
inc
inc
sub
ja
movsl
orl
sti
push
repnz
loope
pop
loope
cmpsl
enter
cmpsl
mov
movsl
push
xchg
add
mov
fldt
mov
cmp
sub
xor
or
or
jl
inc
cmc
arpl
sbbl
lock
jmp
das
add
mov
pop
push
pushf
and
sbb
and
jno
sub
sahf
jp
lods
lcall
stc
hlt
into
push
inc
inc
lea
out
add
push
popf
outsl
mov
push
or
outsb
and
dec
dec
shll
rcrl
je
arpl
pop
insb
aam
cld
xorb
mov
mov
mov
int3
xor
jno
lods
inc
sbb
push
scas
lahf
imul
out
cmpb
jmp
cmc
mov
call
into
fildl
jns
sub
xor
dec
dec
cmpsb
push
test
out
and
jnp
pop
das
cmpsl
mov
jl
pop
sub
add
scas
loope
mov
add
loopne
icebp
adc
ret
mov
cld
int3
xchg
ret
or
sahf
in
inc
jbe
pop
into
push
add
inc
sbb
mov
fidivrs
cwtl
outsb
cwtl
push
loopne
je
jle
das
sbb
in
insl
jne
bound
sub
xchg
inc
stc
mov
cmp
pop
faddl
leave
inc
ljmp
xor
jb
cvttps2pi
pusha
lret
sub
iret
loopne
xlat
in
ss
int
pop
je
lret
loop
mov
push
xchg
mov
jb
imul
shll
test
mov
adc
jg
dec
imul
fs
sub
les
jo
sub
int3
add
pop
mov
pop
dec
xchg
in
cmp
ds
mov
jp
dec
jnp
aas
or
test
je
ljmp
cltd
xlat
lods
fcoms
jge
xor
inc
out
sub
shl
or
mov
push
dec
jnp
mov
imul
mov
test
mov
pop
lcall
inc
pop
dec
or
adc
adc
inc
mov
lret
cmp
add
jb
iret
push
mov
and
jg
shll
dec
scas
idivl
push
or
adc
call
ja
sub
insl
int
push
mov
or
cmp
mov
dec
jl
jge
es
jo
push
rcll
jo
dec
jge
inc
sahf
push
pushf
pushf
lret
xor
rclb
fnstcw
xchg
push
cmpsb
in
mov
cmp
push
insl
repz
loopne
mov
int3
pop
pop
cwtl
sub
mov
xor
push
cli
dec
adc
stc
jne
lret
jae
leave
push
stos
inc
and
rolb
mov
push
cmp
lret
mov
add
xchg
outsl
and
stos
mov
pop
push
lret
ja
add
lcall
mov
or
mov
mov
cmpsb
push
fdivrs
hlt
jo
shlb
int
cmpsl
sub
test
and
pop
xchg
mov
repnz
int3
ret
mov
mov
sub
inc
jo
jecxz
pop
inc
cmp
and
push
cmpsb
adc
jecxz
push
notl
mov
pop
orl
mov
jnp
adc
aas
lds
xchg
adc
mov
and
mov
insl
leave
cmpsl
pushf
inc
lret
push
jecxz
test
pop
inc
push
cmc
pop
scas
sbb
stc
imul
jg
pop
daa
cld
dec
xchg
pop
fbstp
pop
rorl
sbb
add
int3
jle
outsl
out
sarl
and
push
sar
xchg
push
cli
sarb
rorl
fisubrs
lahf
icebp
icebp
pop
scas
mov
mov
xchg
movsb
movsl
lock
dec
push
ret
xor
mov
lds
ja
pop
mov
push
shrb
sbb
mov
pop
mov
adc
aam
pop
sbb
or
in
out
mov
jmp
cmp
gs
cmp
mov
dec
bnd
int
repz
adc
mov
test
fistl
mov
pop
sbb
lock
insb
jle
adc
pop
lea
int
add
push
cmp
idivb
inc
es
cld
sbb
dec
cmp
insl
negl
xchg
dec
pushf
cwtl
mov
fcompl
sti
dec
sbb
pusha
sbb
enter
aaa
movsl
sub
movsb
outsl
xchg
ret
jge
ja
mov
mov
xchg
ds
ret
out
push
cwtl
or
mov
fcoml
xlat
mov
or
popa
aas
in
loopne
mov
jbe
cmp
lret
outsb
push
pop
repz
stc
pop
push
iret
lret
dec
pop
jle
jg
add
mov
lret
inc
and
hlt
outsl
jecxz
sbb
inc
xchg
ss
push
inc
fwait
jp
mov
cmpsl
push
add
lret
xor
xorb
stc
and
outsl
sbb
cmp
push
call
mov
jns
imul
pop
out
jmp
in
mov
test
repnz
mov
cmpsb
rclb
and
dec
out
fistl
nop
mov
std
je
mov
mov
call
xlat
mov
lahf
mov
in
in
std
adc
mov
cmp
fiaddl
cmp
push
mov
pusha
addr16
dec
push
add
push
arpl
iret
bound
fidivrs
pushf
test
clc
cmp
mov
jno
popa
repnz
inc
and
scas
addr16
pop
subb
sbb
add
sub
lahf
adc
cmp
out
ss
pop
cmp
aas
out
scas
cmp
shl
clc
sub
pop
mov
mov
pop
repnz
rclb
xor
rorb
or
mov
rorl
mov
mov
and
adc
enter
outsb
push
and
shrb
inc
pushf
lret
jp
push
xchg
in
ds
adc
std
add
xchg
leave
lcall
int3
adc
cwtl
push
js
mov
lock
test
out
dec
jno
jle
push
inc
bound
dec
inc
movsb
mov
ja
ret
xchg
mov
mov
fnstcw
outsl
inc
out
mov
call
addl
or
mov
sub
cli
jae
add
add
xchg
xchg
es
mov
lods
xor
jg,pt
fistps
jno
inc
push
adc
dec
push
xor
and
fistl
jle
popl
test
mov
mov
mov
ljmp
popa
cmp
or
das
mov
adc
jb
test
bound
jecxz
mov
dec
mov
sbb
dec
xchg
fldl
or
pop
cmp
iret
xchg
loope
sub
pop
loop
gs
xlat
rcl
add
mov
add
push
stos
aas
push
insl
cmp
mov
xor
xchg
stos
push
add
inc
lods
lods
sar
xor
leave
xchg
lret
add
fdivs
mov
dec
in
adc
jge
out
adc
ret
scas
xchg
jno
xchg
lods
adc
mov
mov
mov
jb
fisttps
fsts
js
and
xchg
push
mov
mov
data16
cmp
xchg
push
sbb
scas
and
ja
lahf
inc
mov
fstpl
les
xchg
or
aad
shrl
cmpsb
push
push
pusha
imul
ljmp
add
xor
sbb
shrl
and
lret
mov
cltd
and
mov
fsubrl
lds
sbbl
pop
scas
add
jae
repz
and
cmp
in
mov
inc
loope
jecxz
mov
iret
pushf
push
jb
imul
pop
bound
outsl
out
into
jg
pop
or
adc
push
pop
push
dec
loop
add
mov
mov
lret
icebp
cwtl
xchg
or
cld
pop
mov
dec
push
fbld
mov
push
cmp
jno
mov
mov
push
push
pop
mov
xor
js
mov
fs
mul
add
test
dec
inc
rcrl
and
ror
add
xor
jns
pop
repnz
loope
sub
or
push
or
mov
mov
ret
dec
in
mov
adc
pusha
daa
xchg
fcmovnb
jecxz
das
int3
mov
enter
sub
xchg
add
dec
inc
js
data16
push
cs
hlt
addr16
and
es
repnz
aaa
push
lret
and
movsl
mov
push
stc
cld
adc
pushf
sbb
lea
adc
fnstenv
dec
add
mov
lods
jne
lcall
dec
pop
pop
rol
adc
add
inc
stos
es
pop
push
push
test
insb
cmp
lds
and
mov
push
pop
mov
dec
xor
into
mov
adc
sti
dec
test
push
push
xchg
push
jb
and
pop
icebp
das
jge
mov
clc
jnp
cmc
mov
adc
mov
das
popl
incb
sub
pop
mov
and
mov
clc
mov
daa
in
jmp
scas
push
jmp
jnp
sub
int3
push
ss
xchg
push
insl
sarb
leave
jo
cld
jle
xchg
or
ljmp
bsr
xorb
mov
mov
das
subb
loop
jmp
pop
inc
sahf
sub
pusha
bound
and
mov
add
xlat
dec
faddp
push
sarl
dec
arpl
in
test
or
sub
pop
jbe
in
and
ja
in
adc
es
mov
mov
addr16
bndldx
push
mov
push
mov
stos
sbb
inc
inc
cmc
xchg
adc
out
dec
mov
mov
xchg
sub
fists
add
rcl
mov
pop
dec
cmpsb
test
fwait
jecxz
sbb
aaa
cmovo
and
hlt
add
jne
and
andl
shlb
shrb
test
test
mov
push
cmpsb
sub
daa
xchg
sub
aas
push
inc
div
je
int3
in
call
jo
lea
cmp
xchg
sbb
sub
ret
je
cmp
jecxz
sarb
stos
dec
cmpsl
mov
adc
and
cltd
iret
pop
mov
int3
xchg
pop
hlt
jne
aas
fs
and
push
sbb
in
mov
popa
notl
inc
cmp
jae
cltd
pop
bound
pop
movsb
enter
add
push
pushf
inc
test
dec
push
mov
aad
inc
popa
adc
enter
jle
movsb
mov
and
mov
orb
stc
out
xchg
out
dec
or
pop
loope
fisubrl
add
in
add
xor
rcll
lods
inc
dec
or
mov
popa
add
xor
push
aad
scas
fucomip
aad
mov
fldenv
fs
xchg
loopne
dec
test
lcall
lds
mov
inc
fwait
adc
jmp
inc
out
movsb
scas
adc
or
and
push
fildl
mov
ljmp
jo
fstl
inc
out
adc
xchg
cmpsb
adc
xchg
ds
repz
xchg
sub
loope
outsb
icebp
lahf
daa
inc
rol
mov
in
lds
push
mov
out
or
mov
nop
or
je
mov
push
jp
in
add
mov
enter
pop
clc
addl
adc
sub
fcomp
clc
cwtl
push
xorl
xlat
pusha
sub
adc
jle
outsl
iret
jb
sub
or
dec
jle
cs
mov
jge
movsl
jne
mov
lea
sub
or
mov
xchg
xchg
fadd
pop
mov
repnz
push
mov
stos
aam
pop
mov
xor
cmp
aad
aad
add
xor
sahf
fimull
stos
into
cmc
rolb
jnp
fmull
cmp
movsl
push
fdivrs
ljmp
mov
xor
pop
push
imul
mov
push
mov
mov
popf
fsts
dec
aad
arpl
fbstp
ret
and
pop
xor
mov
or
mov
dec
test
daa
inc
lods
push
addr16
fwait
sbb
out
sbb
shl
popa
or
dec
mov
outsl
push
iret
and
cmpsl
not
dec
dec
cmp
lcall
dec
fmuls
sub
xchg
dec
jnp
push
mov
sub
xor
lock
cmp
cmc
out
push
sbb
es
cmpb
add
mov
mov
call
scas
bound
cmp
xchg
pop
xor
mov
pop
test
add
stos
jp
cli
add
mov
and
push
mov
lds
dec
sarl
sub
jmp
mov
push
aaa
push
out
push
xchg
out
das
call
inc
popa
mov
sub
inc
jno
sub
rcrl
jae
dec
mov
jge
and
inc
pop
xor
jmp
andl
in
push
xchg
push
rcrb
xor
jle
fstpl
cmp
aam
fstpt
daa
sahf
mov
push
adc
xchg
lahf
mov
das
mov
ret
sbb
jno
dec
mov
test
cmpsb
sti
outsb
jmp
and
imul
stc
sub
orb
xchg
dec
adc
jns
and
call
movsl
ss
fldpi
inc
sub
cmp
sub
xchg
mov
test
sbb
mov
pop
cmp
test
mov
push
pop
lcall
mov
jno
jne
loope
cmc
jae
imul
pop
inc
mov
scas
repz
outsb
out
cmpsl
push
push
rcl
popf
pusha
gs
xchg
and
xchg
or
das
je
pop
test
mov
mov
scas
out
jo
leave
sbb
dec
outsl
pop
cmp
aad
adc
enter
and
sub
jbe
push
popf
loope
adc
outsl
mov
cmp
mov
ss
std
imul
push
movsl
es
pop
leave
in
insl
mov
int
stc
js
push
test
out
xchg
inc
pop
xor
lock
sahf
add
arpl
or
pop
imul
jmp
cmpsl
or
inc
sub
xchg
clc
inc
lock
cwtl
out
mov
jns
out
lea
loope
int
and
push
adc
sub
ret
cmpsb
sbb
cltd
aad
leave
movsl
dec
xchg
stc
out
out
push
sbb
addr16
add
mov
movsl
ljmp
push
in
adc
push
stc
movsb
sbb
adc
pop
clc
push
inc
jae
inc
and
sub
mov
and
aaa
ds
scas
imul
jp
sub
cmpsb
pcmpeqb
lock
mov
or
push
cmc
mov
mov
jne
jnp
mov
sbb
inc
stc
aad
mov
add
sbb
add
mov
mov
xchg
dec
jg
cmpsl
mov
xor
fwait
xor
mov
add
hlt
scas
out
stos
ss
lcall
mov
sbb
xor
fcmovu
mov
les
stc
dec
inc
insl
std
roll
xchg
dec
and
imul
and
scas
sub
nop
enter
pop
jp
jmp
jmp
mov
lds
and
ss
inc
frstor
adc
xchg
mov
or
lret
gs
jbe
lods
xchg
push
repnz
xchg
scas
dec
aas
mov
xor
mov
jg
mov
outsl
mov
mov
sbb
dec
xchg
leave
push
push
jno
pop
repz
adc
cmp
lret
outsb
mov
lea
dec
cli
stc
lret
test
leave
push
adc
add
addr16
mov
icebp
add
push
add
adc
sarb
sub
mov
or
andb
shr
sbbl
or
loope
mov
xchg
sub
or
lcall
lods
adc
jl
cmpsl
lock
fwait
xchg
test
scas
pop
cmovns
xchg
mov
arpl
dec
inc
jg
insb
xlat
pop
push
popa
outsl
sub
not
icebp
mov
imul
clc
cwtl
xchg
pop
pop
inc
popf
je
inc
add
push
fidivrl
inc
dec
scas
push
sbb
arpl
or
test
xlat
cs
int
push
shrb
mov
inc
jae
movsb
push
lds
jg
mov
cli
sbb
shlb
imul
fsubrl
push
or
inc
ja
shrb
aaa
int
sub
jecxz
mul
cmp
or
lock
arpl
sbb
sub
mov
push
dec
insb
in
pop
ja
repz
out
pop
jmp
das
xor
stos
dec
jmp
jo
imul
xchg
imul
or
mov
scas
adc
pop
jnp
aam
sahf
dec
cmp
inc
cmp
aad
fwait
imul
arpl
push
insl
xchg
lret
mov
mov
inc
xchg
xchg
mov
out
aam
stc
and
lea
daa
cmp
movsl
push
test
mov
lahf
out
aad
cmpsl
or
mov
xor
mov
call
lods
adc
sbb
addr16
pop
mov
xchg
cmpsl
sub
std
pop
and
arpl
mov
ljmp
xchg
scas
dec
imulb
mov
data16
fstps
mov
cltd
cmpsb
aaa
pop
lret
ret
sti
push
dec
jne
pop
mov
dec
popf
sarl
std
push
add
and
add
in
mov
xor
lods
fwait
inc
mov
popa
adc
inc
outsb
sahf
and
sub
jp
incb
mov
adc
dec
in
out
popf
lods
test
add
mov
adc
bound
repz
adc
out
cwtl
mov
repnz
out
into
std
mov
fs
xchg
sub
jle
lahf
pop
adc
sbb
inc
jp
je
and
xor
and
nop
insl
and
push
mov
jmp
ret
data16
icebp
xor
jae
pushf
in
repz
xorl
int3
mov
adc
out
cmpsl
sti
adc
imul
fcomps
sub
fs
out
inc
sbb
mov
clc
ror
das
out
ds
cld
fs
lcall
dec
fnstcw
call
out
rcrb
aaa
push
mov
rep
lret
lcall
mov
or
add
sub
test
sub
subl
inc
ja
mov
cmp
jnp
in
jle
pop
mov
or
fmul
push
inc
insb
jle
pop
mov
cld
xchg
push
sub
ret
sti
and
xchg
inc
add
stc
push
test
xchg
jne
jbe
inc
push
xchg
mov
pop
xchg
lods
lret
shrd
out
aas
out
cltd
mov
stos
jnp
mov
ficompl
popa
ret
mov
xor
xor
or
ds
pop
xchg
ret
adc
orb
gs
cwtl
andb
or
outsl
cmc
sbb
mov
pop
sub
xchg
ret
icebp
mov
cltd
add
jns
sar
sub
pop
mov
push
xchg
jp
or
loopne
pop
xor
xchg
stos
pop
mov
popf
int3
pop
repnz
ret
fwait
inc
shlb
js
push
mov
add
mov
outsb
xchg
notl
lods
lock
popl
out
mov
fisubl
cld
xchg
cmp
insl
cld
dec
jo
jb
jg
enter
fs
lea
daa
add
ljmp
pop
dec
or
ret
ds
add
add
cmp
shrl
mov
aas
mov
rorl
lret
out
mov
int3
lods
sbb
lds
sub
daa
insb
cmpsb
jb
ja
out
push
movsb
les
dec
sti
test
mov
pop
sub
loope
xor
loop
sub
enter
xchg
sbb
enter
stos
faddl
push
stc
icebp
lds
cmp
or
mov
loope
leave
push
fstl
mov
xchg
mov
mov
in
cmp
rorb
xchg
dec
loop
adc
sbb
fdivs
js
arpl
and
imul
and
add
ret
lods
pop
mov
fwait
int3
enter
lcall
xor
and
and
das
cs
ja
add
rolb
in
frstor
sbb
mov
aas
cmc
pop
ja
in
jg
add
xchg
xor
xor
ja
fwait
sbb
mov
out
cwtl
pusha
and
mov
mov
stc
adc
jge
je
pushf
adc
scas
outsb
lahf
lret
cmp
adc
or
inc
stc
inc
repz
addr16
push
les
lret
inc
dec
mov
jmp
cmc
inc
movb
out
outsl
lock
in
shll
popf
inc
jl
mov
adc
test
xchg
outsb
popf
sbb
fs
jbe
mov
in
push
adc
cmpsl
cmpsl
cmc
sar
clc
imul
sub
int3
shll
fsts
scas
mov
inc
cmc
lcall
pop
inc
xchg
rorl
inc
mov
jne
iret
popf
mov
dec
dec
jne
adc
cmp
jl
mov
fimull
sub
fldenv
sti
into
enter
movsl
cmc
sbb
sti
xor
aam
ret
daa
pusha
xchg
je
push
xchg
push
es
mov
mov
out
pop
iret
test
mov
int
push
fsubrp
out
das
aad
sbb
pop
fiadds
xlat
xor
ds
inc
cltd
int3
push
leave
push
push
loope
xlat
test
push
aad
dec
pop
lcall
in
js
rolb
inc
adc
push
xchg
sbb
mov
mov
in
popf
jne
pop
jns
push
cmpl
mov
ljmp
lret
inc
add
or
dec
jg
pop
push
adc
mov
mull
iret
enter
mov
into
mov
mov
mov
mov
pop
xchg
mov
jp
stos
xchg
and
dec
adc
add
push
call
pop
pop
stos
jmp
shl
and
sub
sub
dec
or
out
cmp
push
jne
inc
mov
aas
out
mov
mov
sahf
cs
jge
or
mov
xchg
push
mov
std
dec
xor
mov
mov
jge
imulb
hlt
sahf
mov
negb
mov
movsb
inc
dec
xchg
ja
sub
or
pop
in
adc
int3
xchg
jge
ja
add
xor
cwtl
push
sbb
fdivr
jnp
fwait
or
out
jns
subl
ljmp
pop
or
je
mul
cmpsb
daa
lahf
aad
inc
loop
das
and
adc
loope
mov
mov
imul
shlb
jno
adc
aad
sub
icebp
into
mov
cmp
icebp
pop
popa
scas
mov
lahf
cmp
cmpsl
add
andb
movsb
dec
test
add
fs
pop
xchg
cmpb
andb
scas
scas
sti
stc
xchg
xchg
mov
jnp
lret
mulb
clc
mov
out
pop
inc
lret
sarb
lods
push
arpl
xchg
cwtl
cwtl
lods
jnp
xchg
pop
sahf
lar
add
xchg
or
pop
call
or
jecxz
and
pushf
ret
pop
jb
pop
jnp
mov
dec
pop
push
push
adc
cmp
xor
xor
pop
jnp
adc
testl
data16
das
lds
das
mov
and
jb
cli
arpl
rclb
push
inc
jmp
cmp
loop
enter
nop
jnp
push
sti
push
cmc
lret
pop
push
in
push
sub
imul
aad
sub
dec
push
cmpb
pushf
js
jecxz
xchg
repz
add
or
and
cmp
test
int3
mov
dec
mov
xor
xor
jns
jmp
jmp
inc
outsb
adc
sbb
cmp
sub
mov
pop
cwtl
outsb
bound
test
sahf
stc
dec
call
xchg
js
sub
enter
xchg
das
fistpll
rol
pushf
fldcw
xchg
cmp
mov
ss
mov
test
xor
jo
dec
movsb
mov
lock
pop
jb
addr16
jo
xchg
mov
adc
in
mov
shlb
jno
jge
ss
stos
insb
imul
ja
xchg
dec
mov
mov
lret
mov
lcall
imul
fwait
imul
shl
aam
pop
xor
or
movsb
pop
hlt
mov
test
cltd
or
pop
sahf
rclb
push
loop
aad
cld
outsb
or
pusha
xor
in
mov
loopne
pop
adc
mov
sub
xchg
jnp
or
fldcw
xor
mov
dec
popa
jge
adc
fstps
fdivs
lcall
xor
popf
outsb
lret
mov
mov
ret
dec
cltd
loopne
loop
sarb
pop
bound
sti
sbb
jno
sbb
mov
pop
clc
jg
jnp
loop
inc
loope
mulb
pop
cmp
mov
ja
xchg
mov
jae
jge
dec
mov
out
scas
dec
or
and
das
dec
adc
inc
stos
add
aam
aad
sbb
push
pop
out
jl
adc
js
sbb
jo
or
in
pushf
popa
pop
inc
fldcw
xchg
pop
out
xor
inc
xchg
sub
push
pop
add
inc
lock
push
sub
jno
nop
jo
cmp
mov
xchg
into
xchg
jmp
pushf
mov
lret
into
lods
fisubl
cmpsl
mov
fdecstp
enter
fwait
sahf
loop,pt
loope
xchg
xchg
cltd
sub
fsubp
jmp
pop
mov
into
push
sub
int3
int
jo
dec
xor
dec
lods
sub
std
mov
insb
lds
xor
jo
in
flds
mov
lcall
mov
and
pop
jl
std
leave
and
or
ficoml
and
or
les
push
ljmp
inc
jle
scas
in
ffreep
daa
pop
sarl
outsl
xchg
cmpsl
scas
hlt
in
ja
xchg
adc
insb
jmp
xlat
insl
xchg
mov
and
jle
pop
xchg
push
stos
and
inc
inc
loopne
mov
xchg
sbb
hlt
es
jb
xchg
push
daa
movsl
mov
lds
les
inc
mov
inc
in
mov
push
pusha
movsb
jp
add
hlt
test
or
pop
adc
xchg
sbb
and
jecxz
fisubl
adc
jnp
mov
push
leave
js
push
push
ds
les
add
pop
inc
push
add
inc
cmp
sub
popf
in
push
xor
clflush
push
push
mov
sbb
les
or
add
xorb
sub
jb
das
popf
fstpl
in
dec
push
mov
xor
sbb
insl
push
fs
popf
bsf
enter
sbb
dec
popa
cltd
data16
test
ja
mov
mov
lock
imul
mov
xchg
mov
adcb
xchg
xor
rcrl
jbe
add
jp
add
jae
and
and
pop
mov
xchg
jl
xor
mov
loop
push
lcall
pop
cmp
mov
sub
fistps
xchg
inc
sbb
sbb
rcrb
outsb
loopne
inc
inc
sbb
dec
mov
es
fwait
push
mov
push
pop
mov
insb
push
outsl
cmp
xor
movsl
inc
loopne
mov
in
sbb
js
fs
adc
and
push
sub
std
cld
std
sahf
pop
bound
fwait
jne
mov
cwtl
repnz
cmc
jbe
push
mov
and
idiv
and
call
repz
testb
sbb
imul
shlb
cmpsb
jle
cmp
xchg
pop
jno
dec
xchg
fidivrl
punpckhbw
cltd
mov
mov
or
test
xchg
push
mov
shr
adc
sub
inc
pop
inc
out
add
xchg
push
mov
cli
insl
xchg
inc
xlat
loopne
xor
pop
jns
repz
mov
in
xchg
jns
dec
outsl
mov
and
test
shufps
call
inc
lret
push
iret
cmp
mov
mov
jns
sub
xor
jns
fsub
aas
sbb
mov
xchg
push
cmp
insl
mov
mov
repz
imul
cmp
arpl
cmp
push
dec
icebp
test
imul
mov
mov
cmp
mov
sti
bound
mov
rol
ss
cmc
inc
jge
jns
add
hlt
dec
xor
clc
add
push
push
out
shlb
push
loope
mov
mov
test
ret
dec
mov
and
pop
fstpt
add
push
gs
mov
and
repz
inc
pushf
cld
jae
xlat
leave
je
les
imul
cmp
pop
mov
fs
fwait
arpl
jle
je
dec
push
add
scas
lods
notl
push
mov
inc
xchg
inc
add
stos
addr16
mov
ret
mov
inc
pop
dec
dec
or
adc
sarl
push
daa
add
inc
push
repz
mov
jecxz
sbb
popa
mov
adc
mov
ret
push
pop
adc
mov
pop
lods
imul
add
jg
push
adc
cwtl
mov
test
cmp
mov
jl
inc
pop
lds
std
nop
inc
xchg
fs
cltd
rcl
mov
dec
mov
adc
xchg
sti
repnz
mov
div
xchg
pop
jle
mov
scas
arpl
dec
cmc
pop
adc
daa
add
xchg
cmc
mov
mov
cmpsb
aad
xor
pop
scas
jmp
cmc
jl
push
push
pop
das
sarb
sub
dec
lret
nop
add
cmpsb
int
out
ret
test
push
mov
sbb
or
xchg
enter
repz
stos
jo
jnp
in
out
cltd
bnd
roll
popa
je
ljmp
std
data16
cld
arpl
mov
popf
aad
sbb
cmc
jns
or
jae
lods
imul
or
std
and
je
pop
cs
imul
lock
cwtl
jg
cwtl
lea
lea
dec
popa
sbb
jp
fwait
je
dec
testb
int
inc
repnz
incl
jne
mov
inc
xchg
sub
add
cli
nop
test
mov
mov
mov
sbb
push
adc
sarb
adc
rorb
fcompl
dec
cmp
int3
repz
and
cmpsb
mov
add
mov
or
inc
enter
icebp
adc
adc
dec
or
andb
mov
pop
add
repz
into
push
xor
es
push
loopne
addr16
nop
outsb
arpl
mov
push
push
into
or
push
fisubrl
lock
int3
inc
rcrl
pop
pop
jg
inc
cwtl
out
mov
mov
rcrb
aam
clc
cmp
ss
mov
data16
dec
pop
mov
fwait
mov
outsb
sbb
neg
and
mov
bound
push
enter
sub
push
int
fdivl
mov
jae
sahf
rdtsc
adc
into
sub
out
fs
pop
aaa
nop
jle
test
fwait
mov
insb
lea
jae
aad
push
and
call
dec
cld
ja
cmp
mov
scas
inc
mov
xchg
push
movsb
sub
jp
stos
sub
and
xor
dec
mov
filds
pop
rorl
repz
test
mov
or
and
push
add
and
add
aam
fadd
lret
rorl
adc
and
dec
sub
ds
adc
push
cmp
popf
inc
in
inc
add
ret
push
mov
and
mov
shll
jl
pop
je
mov
aas
push
std
lea
les
aas
inc
ljmp
xchg
jmp
adc
out
jns
mov
test
sahf
faddl
dec
dec
test
xchg
mov
xchg
jae
jo
add
jg
add
out
std
add
cmp
inc
push
clc
mov
xor
jae
fistl
arpl
aaa
mov
mov
mov
ds
call
std
push
out
into
loopne
movsl
xor
adc
ffreep
xor
mov
add
mov
pop
push
jl
mov
icebp
stos
jle
and
inc
stos
mov
out
mov
sub
mov
add
mov
fdivp
pushf
ds
push
mov
mov
adc
inc
push
mov
jp
xchg
mov
mov
push
pusha
mov
lock
jl
sbbb
inc
jmp
daa
xor
mov
adc
int3
subl
leave
xor
pop
popa
dec
int3
clc
loop
sub
shl
in
xchg
mov
call
pop
push
pop
fwait
pop
or
push
sbb
push
inc
jnp
in
cs
cmc
in
add
rol
or
out
add
jb
push
jg
movsb
or
push
movsb
mov
sub
cli
orl
mov
inc
pop
push
in
push
jmp
fisttps
push
or
aas
les
ss
int3
jp
pop
xchg
divl
nop
rolb
lcall
outsl
mov
nop
and
mov
icebp
sub
in
icebp
pop
push
sbb
es
movsb
scas
push
or
sub
add
push
es
addr16
add
lock
mov
iret
mov
sahf
fdivrl
mov
fbld
cltd
mov
pop
std
push
xor
and
xchg
mov
inc
sub
dec
xor
xor
mov
imul
in
pop
mov
scas
jo
loop
fisubs
xor
xchg
xchg
adc
in
pop
inc
icebp
jp
popl
rcrb
xchg
in
or
stos
xchg
mov
cld
pop
add
sbbl
cmpl
popf
mov
into
lock
xchg
ret
enter
adc
push
rolb
jmp
incb
pop
cli
lret
nop
lcall
addr16
loop
fs
lret
nop
ret
xorl
cmp
out
cmp
lcall
and
hlt
insb
inc
pop
add
pop
xchg
cmpsl
jmp
cwtl
sti
ret
jp
jle
pop
mov
aas
xchg
cmp
in
and
in
push
xor
dec
jne
adc
lret
pop
mov
sbb
es
cmpsl
loope
mov
sub
dec
xchg
into
inc
jmp
aaa
cmpb
adc
fidivs
xchg
pop
es
pop
jae
in
adc
sub
shlb
mov
popf
jne
jno
cmpl
daa
popf
test
test
push
and
mov
cmp
mov
dec
mov
out
mov
xchg
jno
leave
lods
aas
out
mov
lods
sbb
jge
int3
setae
incl
std
mov
sbb
add
ret
aas
jmp
out
push
cmp
sbb
dec
imul
lret
dec
mov
pop
or
and
sbb
or
jle
cmp
xor
not
cmc
jns
pop
mov
test
out
fldcw
lods
jnp
fwait
xchg
lods
fucom
pop
cmc
sub
insl
leave
sub
shll
ss
das
pop
inc
jno
pop
mov
popa
int3
int
jle
jmp
dec
pop
push
pop
insl
insl
cmp
out
sbb
inc
imul
roll
cmc
adc
test
bound
movsl
mov
sbb
add
inc
pop
ss
pushf
ja
cs
aad
xchg
jle
loope
jge
aam
pusha
cmc
aas
cmp
scas
fs
mov
repnz
add
rolb
adc
nop
mov
fwait
inc
pushf
and
push
call
mov
lock
adc
dec
dec
add
imul
push
jb
scas
fs
stos
pop
jmp
pop
out
mov
gs
xchg
jg
mov
fstps
ss
push
ret
in
jo
leave
and
pop
ret
enter
jnp
mov
ficoml
mov
popa
mov
ret
and
mov
lods
aad
adcl
iret
add
cmp
mov
imul
sbb
sub
fcmovnb
dec
mov
jmp
jb
iret
push
lods
xor
jle
mov
and
lret
push
arpl
repnz
add
cmpl
fwait
dec
cmp
sub
cmpsl
std
int3
nop
jbe
add
cltd
adc
aam
dec
jge
vcvtps2dq
xor
push
sub
add
and
ds
xchg
mov
add
insb
fwait
xor
inc
call
std
test
into
push
psubusw
mov
adc
cmpsb
xlat
xchg
lahf
gs
xchg
ret
sub
xchg
cwtl
xchg
imul
cmp
in
jl
pop
sub
add
mov
mov
das
out
push
add
stos
push
and
dec
xchg
cmp
ja
int3
inc
in
in
and
pop
fstp
cli
daa
enter
pushf
fsts
mov
push
cs
in
out
add
mov
data16
outsb
mov
fstl
fwait
sbb
sub
mov
pop
rorb
sub
push
inc
idiv
int
out
jle
jmp
jo
jae
fildl
ss
pop
ds
ret
xchg
lods
dec
mov
fcmovnb
jne
xchg
icebp
cmp
insb
inc
mov
push
into
fnstenv
pushf
sbb
jo
jg
pop
nop
cmp
into
bound
les
arpl
push
clc
sbb
jbe
fstpt
adc
test
cmp
push
or
fdivs
imul
add
ret
mov
ljmp
mov
xchg
jecxz
xor
pop
xchg
movsl
add
insl
sub
fdivl
pop
dec
and
mov
inc
out
mov
jne
nop
aas
loope
rol
xor
jecxz
xlat
fldl
roll
movsl
fst
insl
inc
sub
sub
xor
inc
pop
pop
movsl
cld
and
sbb
call
movsb
stc
in
jo
sar
in
cld
lods
pop
cmp
dec
out
scas
mov
inc
andl
cmp
nop
push
sub
mov
cmpl
ret
mov
or
loopne
push
dec
into
std
inc
js
movb
aam
xchg
sub
add
pop
stc
inc
pop
pop
shlb
ljmp
xchg
leave
mov
loopne
mov
or
gs
out
cmp
xorl
outsb
dec
in
jnp
pop
arpl
xchg
push
push
inc
fwait
xchg
popf
bound
jle
add
fisubrl
inc
pop
in
dec
es
ret
loop
or
je
xchg
mov
or
jo
mov
dec
mov
push
inc
pop
mov
lea
popa
pop
jmp
repnz
ret
or
imul
mov
stc
push
push
add
shrl
or
out
je
and
daa
add
mov
hlt
pop
test
mov
inc
jns
mov
pop
dec
jb
push
push
sbbb
sbb
and
pusha
pop
mov
aas
adc
addr16
cli
sub
cltd
cmp
add
cmpsw
lods
into
sbb
fisttps
add
cmc
cmpsl
mov
mov
jmp
repz
jge
push
push
dec
push
or
scas
dec
push
pushf
ss
std
mov
insl
jo
sub
mov
and
xor
lods
aaa
jno
jne
imul
mov
adc
in
xchg
xor
std
stos
stos
jne
cmp
loopne
out
adc
inc
jo
shl
sub
pop
sub
fldenv
je
xchg
add
ljmp
insl
xchg
fnstcw
insl
jb
xchg
leave
xchg
out
sub
fstpl
xor
pop
cmc
shrb
jmp
push
mov
xchg
nop
dec
enter
addr16
test
sti
dec
add
and
pop
push
cmp
aad
and
xor
fsub
xchg
cmp
andb
push
dec
mov
pushf
xchg
fildll
jmp
in
jae
jns
ret
imul
sub
and
cmp
mov
or
nop
mov
cmp
inc
int3
sbb
clc
inc
mov
clc
ljmp
add
pushw
arpl
lea
movsl
jecxz
stc
mov
inc
es
repz
sub
inc
ja
test
fadds
pop
xchg
imul
push
popf
pop
std
jnp
mov
lcall
pop
test
mov
mov
cld
loope
pop
xor
xor
pop
ljmp
mov
mov
aas
aas
push
jecxz
jno
test
sahf
cmpb
inc
iret
clc
xchg
sub
push
nop
xchg
loope
mov
xchg
popa
xor
xor
sub
xor
test
test
out
mulb
push
outsl
ffree
repz
xor
in
idivl
pop
xor
movsl
inc
repz
aaa
mov
sbb
cmp
hlt
adc
addr16
shrb
pop
xor
inc
test
fisttpl
adc
and
arpl
fstpl
loopne
cmp
scas
repnz
adc
inc
imulb
cld
loop
js
cli
adc
shll
adc
push
pop
jg
enter
je
iret
mov
push
imul
push
je
ljmp
xor
stos
aam
adcb
pop
out
out
cmpsb
sbb
mov
push
lea
out
xorl
add
mov
sbb
jmp
je
pop
insb
dec
jmp
or
jae
fs
inc
mov
xchg
jo
mov
push
xchg
adc
jne
loopne
push
dec
sbb
adc
cld
popf
pop
lods
add
loopne
fldl
lock
test
aam
jnp
jb
or
test
dec
jge
fucomp
cmp
xchg
test
shll
add
into
sti
push
mov
or
rcr
sub
repnz
mov
lds
addr16
insl
mov
xor
adc
dec
mov
sahf
sbb
or
outsl
or
xlat
cmp
shlb
xor
lods
fldt
mov
shrl
xchg
mov
mov
mov
add
mov
cmp
sbb
jge
shl
ret
or
je
stos
mov
and
inc
cmpsl
loop
cmp
outsl
cmp
adc
fcomip
sbb
add
mov
int
outsb
stos
push
dec
movsb
lock
mov
inc
test
sbb
jmp
xchg
stos
mov
cld
out
add
mov
inc
mov
loope,pn
xlat
sbb
orl
leave
call
repz
out
pop
insl
or
cmc
jle
add
jo
insl
in
int
push
pop
dec
movsb
stos
insl
lods
adc
xchg
rclb
in
xlat
mov
loopne
and
mov
xor
shl
and
int
lock
sub
je
lods
in
les
pop
dec
addr16
dec
inc
int3
mov
push
add
jno
mov
jo
lcall
stos
add
divps
xor
push
cmp
lds
push
sbb
daa
mov
mov
out
or
xchg
in
xor
fdivr
xchg
jne
mov
cmp
sbb
outsb
jle
and
arpl
and
hlt
shlb
sbb
cltd
sbb
cmpl
xor
je
jno
xor
sub
xchg
mov
pop
repz
jbe
out
push
mov
das
inc
mov
les
and
or
push
in
cmp
lock
or
jae
mov
mov
ljmp
mov
out
ja
ds
cmp
pop
repnz
loopne
xor
movb
xor
shll
adc
mov
cmc
sub
push
pop
adc
xchg
mov
lock
and
pop
sbb
lcall
push
sahf
fidivs
jecxz
and
mov
push
push
pop
push
sbb
cmp
rcl
mov
outsb
push
xor
jae
or
orl
arpl
imul
pop
scas
mov
adc
into
mov
cmp
xchg
cli
test
scas
scas
ror
cli
ja
xchg
xchg
call
add
pop
movsb
mov
or
or
mov
ds
push
and
sub
dec
pop
lds
push
fisubrs
push
xor
sbb
stos
in
mov
cmp
lea
outsl
mov
jns
pop
fisttps
scas
test
testl
xchg
pushl
daa
mov
dec
into
pusha
sahf
fisubrs
loope
dec
in
mov
fcoms
cmp
mov
cmp
push
cltd
push
mov
fcompl
fcmovb
sbb
outsl
xchg
dec
xor
les
rcr
ja
pusha
push
lcall
in
inc
nop
mov
and
fidivs
cmp
cmp
ljmp
adc
push
dec
cmp
sbb
imul
jne
sbbl
mov
sub
mov
sbb
jg
xchg
fiadds
out
aad
sbb
cwtl
or
movsb
jp
sbb
in
inc
movsb
xor
sub
cmpsl
inc
pusha
hlt
repnz
fs
fwait
or
inc
movsb
out
rclb
clc
cmp
sub
jmp
dec
or
movsl
push
mov
pop
ret
jnp
rclb
pop
push
daa
jmp
dec
jl
and
cmp
std
orb
dec
xchg
sbb
std
or
jns
mov
sahf
or
mov
inc
es
scas
or
lahf
je
mov
aaa
xor
dec
or
cmp
or
lds
pop
stos
aas
xor
pop
lret
pop
rcrb
dec
xor
xlat
cmc
inc
or
stos
in
aas
cltd
int3
jns
inc
push
fsubrl
mov
cmp
cmp
sbb
xchg
in
or
or
mov
in
and
loopne
outsb
movsl
testb
jmp
fs
notb
icebp
and
xchg
or
push
cmpsb
dec
push
inc
insb
mov
push
movsb
pop
add
mov
jle,pn
arpl
pop
inc
ds
and
test
jmp
nop
or
sbb
push
push
and
imul
cmp
or
push
jl
dec
adc
imul
push
mov
inc
or
je
xorb
pop
lock
mov
imulb
mov
jg
mov
xor
nop
je
mov
dec
test
hlt
mov
inc
inc
dec
call
lcall
or
adc
pop
xchg
fcmovnu
inc
aas
jmp
sub
loopne
in
push
adc
shrl
or
jb
insb
or
add
stc
loope
rclb
mov
sub
jbe
loopne
sbb
pushf
push
and
sub
and
ds
pushf
imul
in
pusha
xchg
xlat
adc
outsl
cmp
add
mov
adc
cmpsb
xchg
aas
adc
cmp
test
ret
cmp
mov
pop
pop
mov
jnp
sarb
or
stos
cmp
pop
shll
pop
gs
fs
mov
inc
pop
jl
movsb
pushf
add
mov
sub
pop
dec
pop
xchg
dec
inc
sbb
mov
pop
leave
jbe
inc
jbe
or
push
sbb
rol
test
into
lds
gs
repnz
adc
cmpsl
xchg
repz
fsubrs
pop
scas
pop
pushf
xchg
hlt
ss
cli
outsl
in
aaa
ret
sar
sbb
jae
pop
out
je
loopne
scas
dec
mov
orl
leave
test
add
pushf
sub
arpl
push
in
sub
clc
jge
add
and
push
lret
pop
cmpsb
pusha
lods
enter
mov
add
and
xor
mov
jmp
add
and
push
nop
xor
sub
mov
or
mov
inc
adc
mov
movsb
loop
cltd
out
enter
and
push
jg
fiaddl
call
jno,pt
add
mov
imul
outsb
or
sahf
xor
mov
inc
les
icebp
adc
fs
mov
pop
cmp
mov
add
and
and
repnz
ljmp
leave
sub
or
cmc
and
stc
and
dec
or
xor
out
mov
mov
lock
in
cs
cmpsl
xchg
sbb
sub
aam
int
sub
addr16
sbb
and
push
xor
mov
dec
inc
jb
push
out
ret
dec
lods
shll
xor
add
cmp
mov
xchg
lods
ja
flds
xor
inc
adc
sbb
cmp
leave
shrb
ficoml
sbb
pop
je
sbbb
push
sti
cwtl
dec
mov
mov
lods
pop
fists
jns
pop
push
stos
outsb
test
mov
adc
stos
stc
sti
jb
lret
mov
inc
xchg
loope
test
stos
and
xor
sub
or
mov
add
cmpsb
add
or
cmpl
adc
xor
movsl
sub
lods
stc
jns
imul
cs
add
sti
lods
mov
bnd
jecxz
pop
mov
pop
test
pushf
pop
jno
mov
cmp
dec
imul
fwait
push
inc
mov
and
bound
mov
test
lahf
dec
fnstcw
stos
lock
fiadds
out
loop
dec
adc
dec
lods
dec
pop
add
sbb
sub
jle
repz
dec
xchg
or
adc
jp
mov
dec
cli
push
xor
imul
dec
push
movsb
jo
or
add
add
repnz
lret
les
pushf
in
mov
mov
in
fisttpl
push
sbb
push
adc
add
xor
push
loope
cmc
pop
xchg
arpl
adc
adcl
mov
in
movsl
sub
adc
xor
push
sarl
xor
addr16
inc
fistps
jnp
cmpsl
sub
or
xchg
in
sbb
ret
adcb
in
daa
push
call
mov
cwtl
push
dec
bound
inc
leave
mov
pop
pop
pop
adc
scas
cld
gs
testl
inc
divl
dec
stos
jmp
jb
cmpsb
ljmp
jg
iret
jb
xchg
xchg
mov
movsl
scas
mov
push
stos
mov
dec
fsubl
shlb
pop
je
fadd
arpl
inc
test
adc
mov
je
sub
push
lock
or
fiaddl
xchg
inc
ljmp
mov
push
imul
test
cmpsl
sbb
insb
out
xor
xor
mov
or
mov
movsl
stc
arpl
pusha
dec
rep
js
mov
cmp
dec
xchg
xchg
outsl
arpl
and
add
sbb
cwtl
inc
shl
lock
mov
lcall
ja
int3
dec
sub
xchg
das
mov
addr16
sbb
rorl
shlb
or
mov
aaa
xor
jge
rep
imul
or
or
jne
mov
bound
clc
stos
jl
mov
pop
cmp
push
pop
xor
mov
sbb
pop
lods
scas
gs
mov
pop
adc
or
vmaxpd
jb
rorl
inc
dec
leave
in
je
jb
ds
mov
mov
in
xor
jecxz
sbb
sbb
xchg
std
or
push
popf
repnz
adc
sahf
and
shrl
jne
jne
sti
mov
mov
test
outsb
in
pop
xchg
add
jp
sub
jmp
mov
leave
jno
xor
loop
xor
inc
stc
xor
pushf
add
sbb
and
mov
lea
and
or
loop
ret
fildl
sbb
add
mov
cs
std
mov
mov
xor
movups
jo
lods
add
sub
pop
into
stos
jno
jb
mov
imul
push
aas
inc
cmpsb
cmp
inc
mov
in
mov
out
mov
inc
cmpsb
add
loop
sbb
push
cmp
xchg
adc
sub
lret
xchg
aaa
fdivs
cmp
mov
in
scas
push
test
daa
sub
or
jmp
shl
xchg
dec
push
jle
lea
das
lods
out
inc
pusha
mov
mov
gs
test
mov
jmp
sbb
push
push
and
push
lods
decb
jle
movsl
or
xor
loop
pop
ret
ret
outsl
push
jnp
ja
jg
mov
leave
inc
cs
int3
mov
jnp
push
repnz
mov
add
and
mov
or
popf
loopne
or
dec
xchg
mov
pop
mov
and
push
mov
or
mov
and
sbb
sub
adc
stos
sub
sbb
int
add
mov
mov
sbb
add
test
fld
add
dec
movsb
fwait
push
fcmovnbe
mov
repnz
subb
xchg
pop
mov
xor
sub
push
js
pop
inc
jne
push
sti
clc
fcomp
dec
mov
mov
popf
mov
push
push
in
mov
or
mull
and
scas
test
adc
adc
test
gs
cmp
sbb
shlb
push
dec
inc
sti
dec
inc
imul
adc
test
sarl
insl
and
popf
pop
inc
lret
lea
inc
clc
fldenv
mov
mov
hlt
idivl
cld
mov
mov
add
jle
or
xor
sub
cmp
mov
test
ret
jne
mov
clc
clc
sub
int3
sub
xor
fstps
lea
test
xor
xor
test
icebp
dec
cmpsl
outsb
xchg
jae
stos
mov
fistpl
jno
int
pop
leave
pop
dec
mov
push
shll
push
or
push
loop
rcl
dec
addl
mull
in
jns
adc
mov
stos
inc
jno
idivb
into
fwait
inc
and
sub
cmp
in
cmp
mov
pushf
or
jl
out
pop
pop
mov
sbb
cmp
jp
hlt
mov
add
cmpsb
adc
shll
mov
sub
and
inc
mov
daa
xlat
insl
add
mov
iret
jnp
jne
and
mov
xchg
jecxz
and
xor
push
sbb
pop
xchg
int3
xor
sar
out
push
iret
loope
rorb
mov
push
or
or
add
and
xor
lods
mov
push
je
pop
mov
inc
sub
xchg
cmc
push
hlt
cltd
push
jne
inc
popf
imul
push
lret
and
icebp
and
je
dec
bound
add
out
std
mov
xor
andl
std
push
iret
ja
xchg
or
sbb
adcl
add
clc
stc
std
stos
stos
dec
cmp
xchg
mov
mov
dec
push
push
lods
les
push
mov
hlt
push
cmp
mov
int3
iret
push
sti
sbb
fldenv
cmp
add
pusha
je
movsl
jmp
fsubrs
pop
inc
sar
imul
cmp
add
vcomiss
mov
in
aad
xor
xor
clc
or
lret
les
dec
cltd
cwtl
inc
cmp
fmull
movl
enter
mov
daa
or
mov
hlt
cli
mov
adc
pop
push
xorb
sti
add
nop
cmpsl
lods
jns
int
xchg
pop
popf
addb
or
cmc
ss
mov
mov
mov
push
fs
sbb
sbb
lea
movsb
or
idivl
cwtl
mov
addr16
mov
ja
adcl
in
dec
cmpsl
sub
sbb
sbb
inc
sti
sarb
pop
lock
pop
cmpsl
out
popf
mov
pop
cs
cmp
es
aad
mov
ret
mov
iret
mov
mov
aaa
imul
pop
mov
sti
addl
mov
sub
mov
dec
add
mov
rorl
add
adc
adc
pop
cmp
add
add
inc
aas
inc
and
andb
push
iret
push
push
aaa
mov
movsb
mov
add
or
loopne
shll
in
aas
cs
adc
inc
push
add
or
push
xcrypt-cbc
cmpsl
mov
sahf
pop
inc
xchg
cmp
push
push
icebp
sar
loop
xlat
jmp
scas
nop
inc
inc
test
inc
adc
sbb
call
sub
adc
js
call
out
imul
xlat
cmp
dec
aam
movsb
or
or
add
neg
sub
pop
pop
adc
inc
pushf
pushf
fucomp
mov
idivl
lds
arpl
fsubrs
xor
mov
mov
xor
call
mov
cmp
cld
push
mov
mov
mov
cmp
add
mov
or
stos
lock
mov
icebp
ja
push
mov
adc
sbb
inc
sbb
jp
mov
add
adc
stos
jbe
dec
in
mov
sbb
pusha
sub
movsl
nop
stos
or
cltd
pop
mov
mov
or
mov
xchg
push
stc
sbbl
std
pop
mov
loopne
xchg
add
dec
lret
sbb
outsl
cltd
pop
push
cld
mov
xor
loop
dec
add
shrb
rorb
clc
int
mov
or
add
mov
aad
enter
jecxz
pop
pop
lar
lods
dec
shrl
fmull
iret
dec
imul
arpl
jbe
cmp
pop
xchg
add
inc
jb
and
loop
sub
cmp
adcl
pushf
out
fisttpll
jmp
mov
mov
lods
xchg
or
int
mov
test
dec
ljmp
sub
pushf
insb
jnp
adc
dec
cli
insl
hlt
aad
pop
mov
push
or
lea
test
pop
jp
adc
in
out
mov
xchg
cli
sti
les
mov
push
shrl
or
bnd
dec
fiaddl
cmp
icebp
pusha
jae
xorl
es
adc
loop
iret
xchg
repnz
lahf
icebp
add
in
cmc
rcrl
mov
movsl
sub
xchg
fnstcw
aam
lret
mov
push
out
cmp
jns
fmulp
testl
sub
ficompl
sarl
ljmp
stc
int
inc
aaa
aam
je
xorl
xchg
sub
jno
je
xchg
je
loop
jle
add
sbb
repz
push
jle
add
and
cmp
dec
jl
pushf
or
pop
dec
xchg
sbb
mov
fldcw
push
repz
lret
mov
mov
jmp
dec
test
push
out
push
cmp
shrb
out
mov
testb
pop
in
in
jae
iret
rclb
in
sbb
fsts
xor
mov
out
in
mov
pop
cmpsb
pushf
nop
mov
or
lock
cmc
xor
repz
dec
pop
dec
adc
ret
in
mov
jns
push
pop
jns
out
rcll
add
psrlq
popa
and
pop
add
adc
hlt
and
sub
add
sbb
adc
fldl
xchg
out
lret
in
das
call
and
cmp
or
add
xchg
lcall
sub
inc
mov
cld
pop
add
mov
inc
xor
enter
mov
jbe
adc
icebp
out
add
cmp
jecxz
mov
dec
shrb
push
jno
cli
cmp
lret
mov
fildl
icebp
dec
aaa
dec
mov
jecxz
rcr
push
ret
icebp
les
and
enter
in
xchg
jmp
adc
push
enter
inc
mov
push
dec
sub
in
sbb
mov
xlat
inc
repnz
mov
inc
in
push
iret
das
mov
fists
shll
ja
xchg
ret
pop
rcrb
push
roll
ret
leave
ja
adc
mov
sub
fisttps
or
mov
movsb
mov
cld
adc
js
xchg
inc
pop
and
jg
hlt
ja
sub
mov
icebp
inc
mov
push
inc
cmc
jns
push
mov
out
insb
test
ret
lgs
enter
ds
cmc
push
fists
dec
dec
scas
stos
outsb
arpl
and
add
inc
std
cmp
sar
jb
pop
jp
nop
nop
lcall
mov
test
jge
pusha
mov
mov
aas
frstor
adc
pop
pop
push
or
sbb
dec
add
test
repz
into
neg
lods
js
int
ss
mov
mov
pop
mov
push
aaa
cmp
jl
sub
sub
mov
shlb
fst
sarl
fwait
xchg
fisttpl
ret
movsl
mov
jle
jns
fistpll
mov
rcrb
mov
adc
mov
jmp
cmp
sbb
mov
cmp
jne,pt
add
arpl
mov
add
xor
test
xchg
jecxz
sti
pop
fs
mov
loope
mov
jno
mov
gs
add
adc
xchg
sbb
imul
inc
adc
mov
call
xchg
sub
xor
shrb
sbb
add
dec
out
arpl
sbb
dec
icebp
cli
xchg
dec
adc
or
xor
mov
cmpsb
dec
les
int
fidivl
imul
bound
cmp
and
sbb
add
cmpsl
addr16
mov
sarl
push
xchg
mov
loope
lock
in
sbb
xchg
mov
mov
cmc
out
pop
jecxz
inc
outsl
cli
push
cwtl
xchg
in
outsb
jge
into
push
cmp
insl
jle
jno
loop
imul
inc
int
sti
jl
and
or
xor
clc
repz
nop
lods
lea
fildl
xchg
cmp
adc
add
mov
and
cmp
cmp
ljmp
xchg
in
lods
push
cmp
jg
inc
mov
jae
xor
and
add
popf
jb
push
ja
jp
sub
or
jno
sti
movsb
dec
fmulp
sti
or
inc
or
data16
jle
aas
xchg
dec
sub
mov
fnstsw
repz
fwait
ja
cmp
pop
xchg
aam
jo
pop
jmp
add
jge
jge
sbb
cmp
shll
xchg
lahf
pop
pop
sar
loop
jne
pop
shlb
fidivs
fsubrs
sbb
xor
mov
fsubrs
mov
push
fsts
in
daa
mov
stos
imul
or
movsl
pop
jmp
in
mov
adc
add
bound
fnsave
cmp
sub
inc
dec
in
out
mov
mov
mov
inc
insl
add
mov
gs
hlt
jae
rorb
dec
scas
mov
mov
mov
or
loope
cmp
and
or
mov
mov
lret
icebp
mov
loopne
add
scas
out
push
lods
adc
lods
sbb
xor
leave
pushf
mov
mov
dec
inc
adc
jl,pn
pop
xchg
inc
aas
mov
lret
sbb
clc
outsl
add
jb
cld
sub
mov
adc
sti
imul
sbb
jg
mov
sbb
xchg
cmp
je
ss
cmpsl
mov
pop
adc
fmuls
add
adc
das
xchg
imul
and
out
sub
push
stos
jo
cwtl
cmp
cltd
test
fucomp
arpl
add
inc
mov
idivl
data16
ficomps
rcr
lret
xchg
cmp
sbb
lods
xchg
xchg
imul
stc
mov
mov
sub
ret
les
roll
sarb
or
xchg
cmp
fwait
xlat
mov
dec
shlb
iret
fdiv
adc
mov
bound
mov
dec
xor
xor
adc
leave
xor
push
push
sbb
es
fiaddl
mov
xchg
call
aaa
fwait
xor
cmp
fisttps
jo
cmovle
movsb
adc
dec
cmpsb
mov
aas
or
fsubrp
mov
jecxz
jge
idivb
mov
in
ds
jbe
subb
xorl
movsb
ja
mov
jl
pop
push
imul
inc
rcrb
jno
popa
sbb
aam
inc
ret
setbe
arpl
daa
es
dec
or
xchg
jecxz
fsub
sarl
fsubl
lret
jmp
fwait
adc
in
cmp
sahf
mov
push
sub
mov
imul
sub
ds
das
sub
xlat
pop
pop
ret
pop
in
xchg
push
fs
xchg
fdivp
inc
in
push
xchg
mov
icebp
add
dec
pop
repz
dec
add
push
mov
push
and
push
push
push
cmp
pop
xchg
push
mov
jne
mov
into
cwtl
mov
in
ljmp
test
jnp
das
sub
cmp
and
xor
subb
dec
ja
fisubrl
call
xchg
inc
inc
ljmp
xorl
rorl
and
nop
mov
mov
popf
test
sbb
xchg
gs
xorb
shlb
sbb
std
ror
fs
xchg
flds
pop
adc
leave
loop
and
out
add
sub
jle
rolb
sbb
arpl
int
loope
mov
daa
fstpt
loopne
gs
mov
cmp
addr16
cmp
int
or
iret
pop
popa
sub
mov
ljmp
into
das
xlat
xchg
push
xchg
xchg
lcall
movsl
mov
and
and
lret
lods
push
pop
sbb
out
adc
push
inc
outsl
sbb
leave
xchg
xor
aaa
cmc
jmp
adc
sub
pop
jp
test
popa
pop
ret
aaa
gs
add
jnp
ja
aaa
testl
push
sub
shr
cwtl
inc
lahf
mov
stos
popa
pop
or
outsl
loopne
mov
sub
jae
pop
pop
popf
adc
cmp
shl
daa
scas
fs
mov
inc
lret
call
sarb
std
inc
imul
ljmp
adc
les
mov
jnp
add
xchg
lret
rcrb
test
inc
int
rdmsr
repz
bound
test
inc
push
popa
stc
add
sub
pop
test
cmp
scas
lock
cmpsl
aas
arpl
mov
ja
sti
call
mov
pop
popa
stos
jmp
adc
out
movsb
ss
mov
jnp
jge
xlat
jecxz
fidivs
jge
leave
test
push
out
jl
push
pop
sbb
fnstsw
jmp
icebp
imul
enter
mov
movsl
pop
push
xchg
mov
xor
jnp
int3
add
dec
dec
inc
popa
push
lea
mov
cmp
popl
or
pop
sbb
lods
fadds
incl
aaa
std
xlat
movsl
test
cmp
pop
mov
mov
aas
cs
mov
cmc
lds
mov
jg
xchg
int
add
and
push
and
push
nop
stos
cwtl
sbb
and
dec
scas
cs
mov
jo
movsb
shll
js
or
sbb
decl
mov
shll
gs
mov
inc
les
fildll
xor
push
adcb
cmp
pop
jne
push
icebp
fstl
daa
mov
popa
jg
clc
jns
jnp
adc
dec
xor
and
shll
pop
inc
xchg
enter
xchg
mov
and
or
das
aas
pop
jl
sahf
dec
xor
aaa
repz
adc
orl
cmp
cmpsl
loopne
adc
mov
pushf
adc
jp
cld
rorl
sti
xor
ljmp
xchg
mov
scas
dec
inc
aam
int
je
je
ret
mov
mov
in
cmc
imul
mov
lret
pop
nop
pop
xchg
cli
mov
aad
pop
xchg
push
and
jle
fidivl
sub
sbb
stc
inc
pop
sti
data16
shlb
mov
subb
loopne
push
leave
fisttpll
mov
lea
cmp
test
push
jmp
mov
das
in
add
rorb
dec
cmpsl
sub
sub
sbb
cmpb
push
adc
imul
sahf
or
add
sbb
sarb
fisubrl
testl
test
in
into
adc
pop
into
sbb
or
jmp
add
jnp
add
rorl
fnstcw
fldl
ss
adc
sbb
pushf
add
pop
sbb
push
jg
outsb
dec
jg
daa
lock
clc
call
push
inc
mov
fmull
cmpl
sbb
sbbl
cli
jmp
adc
jmp
adc
mov
mov
xchg
sti
stos
xchg
mov
jp
mov
mov
test
lds
cltd
push
push
jne
mov
outsl
ja
pop
bnd
in
std
jge
mov
lahf
xlat
mov
xor
nop
jne
sub
arpl
pop
mov
mov
jb
shll
cmp
rcr
inc
aas
xchg
mov
dec
fildll
nop
lret
rclb
js
sti
or
cs
addb
sahf
test
mov
mov
mov
inc
push
nop
xchg
icebp
enter
enter
enter
mov
push
pop
xchg
sti
push
jne
and
out
ljmp
cmp
shr
xor
mov
sti
or
mov
cmp
inc
stos
pop
cmp
adc
rclb
push
scas
dec
hlt
lahf
je
adc
notl
xchg
iret
and
je
xchg
nop
jge
sub
imul
lods
stc
idiv
adc
pop
test
mov
outsl
push
repnz
enter
insl
pop
sbb
repz
jae
pop
pushf
outsl
or
or
xor
mov
pop
lods
loop
xor
dec
fdivrl
sub
inc
lods
ficompl
mov
stos
in
inc
xchg
std
std
and
in
add
movsl
loopne
out
or
xor
clc
das
push
inc
sub
sbb
fnsave
mov
stos
lock
push
sub
pusha
incb
pop
addr16
pop
pop
insb
cwtl
xor
in
push
jno
pop
das
and
ret
test
stos
pusha
imul
jle
inc
dec
jg
push
aam
dec
mov
subb
sahf
popa
std
test
pop
pusha
icebp
hlt
std
fimuls
mov
enter
push
hlt
or
sahf
mov
loope
in
mov
gs
push
xchg
out
pop
xlat
dec
orb
add
out
sub
jp
or
jnp
xchg
jae
popa
lret
test
push
xor
push
mov
and
cmp
cltd
mov
push
xchg
roll
stc
xor
xorl
xor
shlb
xor
dec
add
xchg
loopne
sub
cltd
sub
or
pop
in
popa
les
mov
inc
lods
inc
adc
test
or
shl
into
daa
xchg
mov
dec
and
pop
xchg
fldl
fisubl
push
mov
or
insl
xchg
xorb
sub
pusha
xor
push
xchg
xor
adc
jo
add
stos
push
fistl
shll
mov
lds
loop
rolb
ror
arpl
cmp
push
jle
lods
nop
lahf
fidivs
ret
into
je
push
cmp
mov
sub
insl
sbb
pop
lods
pop
or
aad
and
pop
fisubrs
push
and
and
outsb
pop
mov
jnp
mov
not
subb
in
inc
test
fwait
ret
mov
popl
into
fcoms
hlt
lahf
mov
pop
mov
xor
xor
out
add
push
push
subb
cmp
jp
das
adc
xor
test
sbb
repz
mov
mov
mov
dec
adc
jp
lods
aad
xor
sbb
rolb
leave
das
xorl
jmp
sbb
cwtl
jne
in
xor
out
inc
jge
inc
xor
std
sbb
push
outsb
xor
call
push
cli
cmp
sahf
int3
loop
popf
push
pop
inc
insl
mov
aas
inc
sti
cwtl
xor
xchg
test
push
pop
jae
movaps
and
adc
cmp
cmp
pop
rcrb
cwtl
cmp
sub
cwtl
cmpl
dec
rcrl
push
xor
les
jmp
inc
leave
stos
stos
xor
adc
xchg
lahf
jecxz
mov
je
lret
adcl
mov
shl
out
in
xor
mov
inc
or
pusha
inc
jae
push
mov
and
rcll
shrb
stos
sub
jns
fstp
mov
cmp
in
je
mov
popf
shlb
js
testl
push
stc
aaa
mov
test
xor
xlat
dec
les
push
push
cmp
mov
jnp
nop
popa
mov
pop
mov
pop
jecxz
mov
pop
shll
insb
sub
xor
mov
or
sbb
or
inc
shlb
cmp
outsl
jmp
xchg
pop
cli
enter
adc
push
fsubrs
push
push
and
into
adc
push
loop
in
ljmp
sub
adc
je
insb
pop
adc
inc
pop
push
push
int3
jae
mov
pop
inc
sbb
repz
sub
iret
xchg
xchg
jge
mov
pop
loope
pop
cli
int3
dec
mov
sub
mov
xor
popf
push
xchg
dec
gs
je
popa
mov
rolb
push
cld
or
and
or
xchg
orl
out
mov
fnop
dec
jecxz
arpl
scas
mov
insb
insl
dec
sbb
mov
das
sti
and
cmp
into
cltd
lock
std
push
fdivl
les
dec
xchg
scas
dec
ret
xchg
lock
ds
inc
getsec
lret
mov
sahf
arpl
aaa
and
jns
or
jmp
cmpsl
cmp
or
nop
inc
imul
mov
sbb
pop
dec
lods
adc
cmpsb
roll
enter
popa
aad
hlt
mov
in
xor
mov
dec
je
mov
mov
in
cli
in
and
outsl
or
add
sbb
cmc
enter
dec
mov
fimuls
insb
clc
out
jns
cld
cmp
pusha
bound
imul
int3
and
dec
mov
dec
sub
je
cmc
sahf
es
add
int3
ret
mov
mov
in
jno
xchg
dec
or
shlb
mov
mov
mov
in
inc
shlb
stc
mov
sti
outsl
popa
mov
imul
xor
push
ja
lret
mov
mov
test
add
mull
or
pop
xor
rol
mov
push
pop
dec
sub
inc
mov
dec
cmp
lods
dec
mov
mov
aad
ljmp
pop
into
outsl
jecxz
pop
mov
pop
cmc
iret
lcall
in
fimull
pop
jae
wbinvd
push
les
pop
cld
add
nop
jo
bound
jb
test
cmp
aad
or
mov
sets
mov
or
jge
inc
mov
pop
sbb
movsl
push
shrl
or
push
sbb
sub
js
jecxz
leave
enter
ret
xor
ds
ret
hlt
jns
jnp
mov
pop
inc
dec
add
or
xchg
fisttpll
nop
in
lret
pop
sub
jp
jbe
fstpl
mov
dec
jb
sub
xchg
xor
jae
sbb
clc
inc
sub
inc
jge
pop
std
xorl
dec
push
lret
movsl
sbbb
mov
ds
leave
mov
jns
mov
cwtl
inc
add
out
jne
mov
inc
or
ret
dec
push
into
inc
jle
icebp
std
icebp
int3
fnstcw
stos
dec
inc
das
outsb
rclb
mov
movsl
aam
andb
push
andb
sbb
arpl
ret
cmc
mov
in
and
insl
imul
adc
sub
sbb
dec
add
cmp
lods
inc
adcb
push
push
mov
popa
adc
jl
ds
xchg
xor
push
gs
test
mov
dec
inc
jns
leave
mov
inc
stos
mov
mov
insb
pop
imul
push
js
insb
cmp
mov
cmp
fistl
push
lret
outsb
jnp
data16
js
inc
or
cld
or
mov
repnz
inc
and
cmp
leave
jmp
inc
das
in
cltd
xor
frstor
add
inc
mov
or
jno
nop
xor
mov
push
aaa
ret
pop
mov
mov
leave
xorb
cli
frstor
cli
mov
jmp
inc
jecxz
xchg
lds
imul
jg
fstpl
mov
sub
ret
adc
mov
push
xor
imul
inc
push
jnp
fdivp
rolb
out
mov
jp
mov
jae
add
lods
mov
jl
out
call
ds
push
mov
sbb
cltd
push
jmp
pusha
adc
dec
sti
loop
test
mov
and
ja
inc
int3
dec
rcll
add
daa
mov
jmp
fnstenv
cmp
test
cwtl
test
lea
mov
out
or
mov
sub
mov
dec
or
xor
ror
fistps
popf
repz
inc
push
cmove
rcrb
and
rcrl
sbb
dec
or
cmpl
std
jmp
mov
lahf
lods
js
ja
lock
movsl
pop
pop
stos
ss
dec
stos
out
push
xor
mov
pop
mov
fcmovb
mov
test
cltd
mov
pop
ret
jg
leave
cmp
mov
jmp
mov
cwtl
mov
sarl
daa
mov
test
jmp
outsb
mov
int3
mov
cmpl
sbb
sbb
arpl
aaa
pop
pop
inc
add
push
cmp
je
adc
jg
repnz
icebp
mov
leave
sbb
lahf
fwait
dec
xchg
lds
xchg
add
pop
push
dec
stos
push
cmp
mov
divl
inc
inc
pushl
mov
add
sbb
repz
aaa
ficoml
sti
or
push
pop
sbb
test
jmp
outsl
jns
mov
call
cmpsl
hlt
lret
lret
scas
js
jge
pop
inc
shr
mov
sub
dec
push
mov
cli
insb
xor
dec
xlat
sbb
dec
xchg
test
icebp
fisttpl
fwait
and
inc
into
scas
sbb
cmp
cld
mov
aaa
lods
add
nop
out
mov
jns
roll
xor
lds
dec
mov
test
sahf
mov
subb
daa
xchg
and
dec
das
mov
outsb
sub
out
daa
mov
aas
lret
pop
cmp
xchg
outsl
mov
std
nop
outsl
loopne
jae
testb
sar
adc
jns
add
jae
xor
xchg
jp
mov
inc
jnp
cmpsb
and
xlat
dec
push
pop
icebp
pusha
xchg
jns
lods
or
sub
rcll
push
cli
lret
iret
sub
ret
in
pusha
sbb
sbb
dec
mov
mov
sub
cs
adc
jae
cli
fidivs
shlb
mov
jo
xchg
jg
push
xchg
es
xchg
sarb
inc
add
push
into
repnz
cs
jecxz
les
lods
fnstsw
in
mov
ljmp
mov
mov
mov
and
nop
jecxz
lds
loop
inc
jo
push
movsb
test
dec
std
xchg
fidivs
adc
jl
scas
cmc
adc
cmp
dec
sbb
ds
inc
cmpsb
aad
ret
pop
es
ficoms
popf
push
cmp
int
les
adc
out
leave
pusha
mov
stos
xor
loop
and
addr16
insl
push
xchg
in
pop
cmp
dec
pop
sahf
sub
les
jmp
outsb
aas
ret
cmpsb
jne
and
fpatan
sti
idiv
mov
nop
idivb
ret
je
inc
pushf
flds
outsb
xchg
adc
inc
push
mov
pop
push
xor
add
dec
jp
addr16
adc
dec
outsb
lahf
int3
mov
out
cld
pop
jb
je
test
inc
pop
push
ljmp
rol
and
inc
cmp
and
cmpsb
mov
aam
sbb
lds
inc
test
lret
pop
add
push
aaa
test
sub
dec
dec
movsl
sbb
lret
adc
hlt
das
fs
movsb
aaa
call
or
in
push
out
and
shl
lcall
test
out
mov
xchg
sub
js
xor
cmc
fisubrs
cmpsb
mov
push
jmp
xlat
pop
fsubl
adc
and
ljmp
cs
in
mov
lea
or
dec
inc
cmp
xor
mov
fisttpl
jmp
mov
out
sti
fldcw
mov
dec
addl
fcmovb
out
insl
stc
push
shll
fwait
pop
sub
test
in
add
das
sahf
fisubrl
and
in
rclb
mov
sbbl
xor
pop
and
jbe
mov
fsubs
xchg
ds
mov
xor
cmp
pop
sub
lret
cltd
inc
fucom
popa
xchg
mov
adc
in
sbb
test
or
test
adc
hlt
ss
mov
gs
les
mov
rcr
inc
pop
push
and
test
sbb
imul
inc
lods
sbb
xchg
lcall
cld
xchg
fdivrl
lcall
mov
aam
stos
jmp
or
mov
into
or
sarl
cmp
lods
add
mov
in
cmp
pop
dec
aad
cltd
aad
scas
inc
test
ljmp
aam
inc
test
mov
hlt
and
xchg
dec
jb
sub
repnz
hlt
mov
jb
mov
adc
int
mov
jno
adcl
lret
lods
pop
dec
in
nop
pop
lret
mov
pop
hlt
iret
inc
jg
test
in
adc
dec
inc
push
push
add
stos
sbb
cmc
test
add
cwtl
shlb
aad
push
lcall
enter
insl
loop
test
into
out
push
rorl
mov
popf
dec
dec
nop
dec
inc
outsb
std
imul
inc
and
pop
and
aaa
mov
sub
ljmp
jecxz
push
ret
jbe
imul
pushf
shll
cli
cld
ficoml
pusha
arpl
cwtl
daa
sahf
inc
rorb
push
adc
fnstenv
repz
add
sbb
ret
xchg
and
nopl
clc
andb
sub
pop
icebp
or
dec
adc
out
mov
pushf
xchg
mov
sbb
inc
stos
aas
in
outsb
push
inc
dec
shrb
mov
fisubs
mov
adc
pop
loopne
loopne
pop
xchg
pop
jmp
fiadds
cmp
cmpsb
add
rcrl
mull
leave
mov
int3
stos
mov
or
insl
repnz
adc
je
mov
jle
repz
out
test
aaa
dec
dec
les
enter
xchg
and
leave
mov
adc
cmc
push
or
sub
mov
daa
mov
add
fdivrs
adc
jns
cmp
or
xchg
jecxz
popa
cmp
ret
sub
sbb
sub
test
cld
add
mov
outsl
xor
or
push
call
pop
arpl
pop
cmp
mov
rorb
jb
pop
out
ficompl
inc
and
movsl
fcomps
mov
sbb
jmp
fbstp
out
outsl
clc
push
movsb
subl
push
push
push
insb
lods
call
test
es
repnz
xchg
fs
jae
cwtl
sbb
in
ljmp
or
push
adc
dec
leave
pushf
jb
fdivl
fidivs
jle
xchg
int3
cmc
cmpl
sbb
push
ret
pop
out
mov
test
lea
xor
movl
cmp
ret
cltd
fldcw
mov
mov
ffree
movsb
or
mov
adc
fisubs
adc
adc
sub
mov
cmc
pop
fwait
in
inc
stos
scas
stos
xor
xchg
insl
jnp
mov
or
stos
pop
fwait
pop
fidivrl
mov
xor
movsb
in
fcoms
gs
and
lods
push
hlt
pop
data16
mov
loop
aaa
ss
lcall
push
dec
jns
fmull
push
inc
mov
sub
mov
gs
push
pop
jecxz
fnstsw
incb
xchg
cmp
jae
std
sti
stos
push
mov
or
adc
xchg
pop
xor
cmpsb
repnz
xchg
inc
lods
shlb
je
fcomi
ret
or
out
cmpsb
xchg
pop
push
xchg
daa
sbb
push
inc
sub
xor
loopne
xchg
lret
mov
xchg
dec
outsb
outsl
dec
cmp
add
andl
pop
pop
ljmp
or
lds
push
imulb
pop
fwait
sbb
pop
sbb
in
lea
imul
mov
mov
in
rorl
inc
push
lods
bound
xchg
popf
ja
arpl
rcl
outsl
jge
jnp
mov
subb
xchg
int3
sub
jmp
stos
mov
insl
iret
or
or
mov
imul
jbe
lret
push
or
scas
jne
pop
in
cmp
out
xchg
pop
aas
mov
jp
push
pusha
call
and
or
out
jp
jmp
push
in
xchg
and
rclb
add
sub
and
outsl
jmp
pop
xchg
fiadds
dec
push
xor
adc
mov
repz
sbb
fwait
loope
sub
loopne
imul
jbe
movsl
push
xor
mov
xchg
repz
xchg
jecxz
inc
xor
mov
dec
rcrl
push
pop
not
dec
lret
add
lcall
xor
dec
daa
icebp
scas
xchg
cmc
xchg
leave
test
stc
adc
aaa
or
xchg
xchg
les
daa
cmp
cli
adcl
push
push
sbb
rolb
sub
test
or
mov
ret
movsl
push
push
rorl
sub
mov
in
stos
scas
clc
cltd
jns
sbb
add
sbb
imul
inc
insb
mov
loopne
lods
subl
cmp
adc
into
in
mov
xchg
sbb
mov
mov
mov
pushf
or
xchg
jge
sbb
lds
xchg
xchg
test
sbb
arpl
add
faddl
jg
lahf
cwtl
int3
je
stos
adc
cmp
sub
or
pop
aad
xchg
xchg
cmp
cmp
inc
pop
sub
clc
pop
mov
cmp
mov
add
loop
xor
pop
jmp
cmc
cmp
loopne
mov
sub
sub
mov
movsl
mov
aas
pop
scas
shl
fisttpll
dec
incl
jg
dec
mov
pusha
ja
aad
pop
mov
lea
stos
adc
mov
icebp
cmp
addr16
mov
add
divl
iret
xchg
enter
push
mov
pop
jae
and
test
or
sbb
jno
pop
lcall
sti
pop
lret
mov
pop
fidivrl
xor
push
pop
lahf
in
jmp
lahf
or
arpl
rcr
pushf
shlb
and
dec
stmxcsr
cli
fs
adc
adc
idivl
repz
push
push
sbb
sbb
sub
jge
lock
imul
sbb
or
lock
pop
jb
xchg
jle
jbe
or
sti
xorb
stos
xchg
xchg
lahf
xchg
int3
fldl
xchg
fisubrs
fsubrs
mov
lock
jnp
ret
or
pop
sbb
movsl
cltd
loope
mov
ja
test
xor
add
pop
stos
stos
in
jecxz
add
out
into
jmp
mov
sbb
sbb
fmull
mov
fwait
xchg
cltd
fs
sub
mov
fwait
rcr
inc
xchg
lret
out
repnz
out
mov
call
mov
jns
jbe
push
ret
mov
inc
sbb
testl
jge
xor
outsl
arpl
andnps
cmpb
les
lcall
sub
cmp
sbb
imul
lock
sub
sahf
mov
pop
js
push
into
outsl
stos
add
adc
lea
pop
mov
les
loope
jle
addl
ja
outsb
add
jp
jp
or
xchg
mov
bound
subl
push
and
sarl
testl
adc
imulb
pop
and
inc
inc
daa
stos
push
or
xchg
repz
repz
fsubrs
dec
aam
nop
mov
js,pt
xchg
adc
sub
data16
sub
push
fnstenv
adcl
mov
cmp
ret
fcomps
insl
insb
pusha
in
inc
shll
in
push
ret
sarl
enter
clc
out
rcr
cmp
xchg
push
pop
xchg
jp
cltd
scas
dec
int3
xchg
leave
jne
inc
aam
xchg
mov
out
rclb
or
xor
cmp
cmp
lds
mov
movsl
push
lea
pushf
ss
andl
fmul
xchg
in
adc
sub
imul
xor
adcb
sub
sub
cltd
xchg
cwtl
loopne
or
test
cli
jl
mov
mov
or
fimull
add
aas
call
iret
cmpsb
adc
je
test
or
pop
addr16
sbb
xor
and
addr16
jge
pop
pushf
jge
rorb
jge
jbe
pushl
mov
xor
mov
shlb
movsb
push
push
mov
lret
and
ja
call
xchg
addb
ljmp
in
mov
aam
lods
sbb
rorb
dec
inc
jb
mov
push
loope
add
push
cmc
cmc
add
lock
fs
inc
cmpsb
push
and
mov
inc
push
loope
sbb
adc
mov
mov
push
fbld
into
js
fidivrl
and
pop
iret
cmp
sbb
fisubl
nop
andl
insb
mov
aam
dec
pop
div
and
pop
outsb
rorl
or
xchg
dec
idivb
push
mov
lret
xchg
jmp
mov
xchg
mov
jl
push
leave
mov
sbb
pmaddwd
adc
stos
pop
pop
testl
mov
jp
cmp
dec
bound
fwait
movsb
sub
es
fstpt
or
aam
cli
addb
jle
cs
and
loopne
rcll
addr16
into
sti
stos
enter
imul
and
and
sahf
in
repnz
ds
pusha
aam
push
cs
jle
pop
cli
aas
js
xorl
dec
adc
mov
inc
xchg
inc
push
cld
fwait
adc
popf
dec
shll
sbb
icebp
xchg
cmpsb
xchg
xchg
and
in
mov
shlb
lea
pop
div
mov
inc
scas
jb
sub
fs
inc
icebp
xor
inc
push
scas
std
adc
ss
dec
insl
and
xor
fs
or
ds
test
in
cmpsl
mov
push
sbb
daa
xor
sub
jns
adc
repnz
add
cmp
mov
inc
cs
push
mov
inc
cmp
cld
mov
mov
cmpb
dec
jbe
jnp
popa
leave
leave
adc
sub
xchg
jns
push
iret
adc
cltd
in
add
addr16
sub
fldcw
cmpsl
mul
pop
push
jge
adc
adc
mov
imul
mov
addr16
in
jb
cmp
fsts
sbb
shl
rcll
cltd
out
fbld
hlt
fs
insl
test
and
jmp
leave
pop
and
les
dec
enter
clc
sti
roll
push
es
rcrb
pushf
cmpsb
cli
stos
aad
jbe
ret
in
std
cmpsl
mov
sbb
iret
pusha
sub
lods
sbb
and
cmpsl
add
push
cmc
cltd
lods
ret
sbb
mov
shrl
sub
jp
cmp
les
mov
pop
push
fwait
imul
xor
cmc
or
icebp
mov
jo
push
and
loop
xor
iret
add
xchg
and
xchg
sbb
mov
outsb
xor
clc
loopne
inc
testl
jnp,pn
cli
pusha
pop
addr16
sub
fnstenv
jp
dec
int
ret
lock
jecxz
inc
push
add
cmp
orb
mov
push
shl
arpl
jp
sahf
sub
pop
lea
push
hlt
inc
jbe
in
add
inc
in
mov
xchg
inc
repz
xor
test
push
inc
fildl
push
movsl
dec
push
and
dec
inc
leave
jbe
cmp
leave
jmp
xorb
cmp
out
adc
mov
cltd
inc
push
xchg
sbb
pop
push
lods
je
cwtl
mov
ror
mov
mov
fimuls
jecxz
js
or
repz
pop
test
nop
mov
es
mov
xor
clc
call
ret
stos
cwtl
inc
xor
stos
test
cwtl
mov
pop
je
mov
adc
mov
cmc
pop
stos
mov
hlt
or
adc
test
sub
mov
jp
stc
adc
jno
sbb
adc
pushw
cmp
dec
lcall
adc
shl
push
sbb
mov
cmpb
mov
and
jae
and
or
in
test
cmp
jecxz
mov
mov
je
mov
in
sbb
clc
jl
xor
mov
ret
pop
mov
cmp
scas
jbe
lods
int3
mov
pop
xor
in
out
push
lret
repnz
push
inc
cs
xchg
hlt
and
or
push
test
ss
push
lret
lcall
mov
push
or
outsl
aas
outsl
inc
movsl
fdivrs
push
pop
xor
imul
outsb
out
inc
cs
es
insl
mulb
movsb
sub
push
incl
sbb
loopne
scas
add
dec
in
jne
leave
pop
jp
or
pop
push
in
pop
xor
fdivl
or
loopne
cmp
dec
jno
icebp
les
push
fsubrl
imul
pop
mov
imul
inc
cmpb
ljmp
mov
insb
or
jg
imull
mov
mov
push
add
andl
jg
popa
lcall
cli
sub
and
push
cmp
or
add
in
outsb
ja
out
pop
push
cmp
insb
mov
inc
scas
mov
insl
lahf
push
pop
add
lds
mov
xchg
sub
pop
cmp
lret
and
pop
sub
adc
adc
xchg
jnp
icebp
out
and
cs
mov
pop
cmp
cmp
fdivl
popa
xor
nop
imul
pop
mov
dec
pop
je
push
mov
adc
ficoml
jl
orl
xor
out
aas
push
fadds
jb
shrl
inc
mov
pop
cmp
inc
cmp
lahf
dec
cltd
mov
xchg
inc
dec
adcb
lret
sub
ret
push
adc
scas
cwtl
lea
push
add
shlb
fbld
jg
fisubrl
sub
pop
cs
hlt
xor
sahf
mov
sub
data16
mov
push
iret
cmpsl
jbe
repz
fwait
sub
mov
out
pop
or
fisubrl
sub
jbe
scas
jge
mov
mov
aad
std
cli
inc
xchg
int3
adc
mov
cwtl
dec
and
push
pop
inc
push
sbb
sub
fptan
mov
and
cs
add
dec
xchg
jo
ja
scas
int
or
shrb
or
testl
mov
push
std
pop
mov
cmp
mov
and
pop
dec
mov
jle
test
jle
out
sub
mov
stc
das
in
jno
mov
out
dec
ss
sbb
pmuludq
pop
inc
ja
lods
pop
xlat
stos
or
outsb
fnsave
push
lcall
stc
jmp
mov
mov
xchg
push
popf
cmpsb
lret
jo
or
aad
inc
cmp
in
xchg
ljmp
les
sbb
or
add
inc
leave
jle
sbb
jmp
or
es
loopw
inc
inc
push
idivb
adc
sbb
pop
stos
iret
insl
lds
icebp
and
fucomip
dec
movb
and
pop
out
pop
leave
xchg
lds
pop
xor
add
movsl
inc
stos
nop
sbb
mov
mov
mov
mov
fnsave
lea
inc
cmp
pop
pop
jl
hlt
push
movb
mov
and
pop
mov
fildl
mov
jbe
pop
outsl
ret
jl
jl
ds
push
push
sub
push
cltd
fdivrs
std
pop
pop
movsb
int
sar
repnz
inc
xchg
xor
xchg
aam
jmp
jae
sbb
adc
ror
stos
cmc
lahf
inc
adc
test
sahf
in
mov
jnp
jo
sub
enter
test
lahf
and
or
and
adc
pop
out
pop
repnz
pushf
inc
jmp
std
ret
repnz
push
cltd
shrb
int3
xchg
jne
inc
mov
mov
push
mov
add
ret
mov
scas
mov
faddp
fidivrl
xchg
cmp
aad
xchg
cli
call
xlat
inc
add
mov
adc
jp
fwait
int
mov
sub
mov
push
dec
adc
loope
push
test
sahf
movsb
repnz
loopne
push
pop
inc
nop
xchg
xor
xor
add
mov
aam
inc
mov
sbb
aaa
or
xor
jle
jl
cld
adcb
in
xor
fiaddl
cs
cmp
and
fcmovbe
and
add
outsb
cmp
scas
jmp
fnstcw
jns
push
scas
loop
aad
inc
inc
pop
adc
test
insb
cmc
sahf
out
loope
push
inc
les
in
sbb
or
adc
aas
sbb
or
pop
cli
sbb
rcr
out
xor
sahf
fnstenv
cmc
sub
or
or
dec
dec
mov
inc
cmpb
adc
fldl
cmp
inc
popf
addb
fwait
imul
push
loopne
call
xlat
sahf
sahf
fsubs
sub
test
loopne
imul
int3
inc
mov
out
in
imul
mov
push
adc
sti
sahf
outsb
sub
xor
or
jmp
push
lret
jb
mov
aas
xchg
cwtl
dec
push
jp
nop
dec
jmp
clc
dec
xor
jo
out
pop
mov
pop
jge
out
cmpsl
test
clc
lock
xor
mov
jne
cmpsb
adc
stos
inc
pop
test
add
test
movsb
cmp
mov
enter
jecxz
aam
sub
mov
aas
add
ss
test
xor
or
xor
push
arpl
push
sbb
movsl
push
inc
aas
fucomp
adcb
pop
add
mov
xchg
adc
aaa
mov
insl
bound
mov
or
test
fs
cmpsl
xor
or
loopne
xchg
loop
cli
in
mov
loopne
mov
xchg
jmp
lahf
test
fcoml
and
ret
mov
int
das
mov
xor
jecxz
mov
xchg
xchg
es
outsl
int
sarb
pop
imull
jno
dec
testb
dec
jbe
jbe
pushf
ss
sub
mov
sub
cmp
mov
lcall
xlat
sahf
psubsb
xchg
std
mov
lea
push
and
leave
pop
jecxz
out
pop
push
mov
inc
lret
mov
lock
mov
loopne
repz
push
insb
in
jmp
dec
repnz
loope
xchg
sub
inc
inc
out
sub
jp
orb
shrl
pop
clc
jmp
dec
insb
mov
frstor
adc
pusha
adc
loop
arpl
mov
push
int3
insl
int
jbe
movsl
mov
fbld
pop
mov
jmp
int
movsb
push
mov
mov
and
or
pusha
sbb
js
loope
fwait
and
mov
xchg
cltd
je
cmp
outsb
jbe
mov
dec
sub
jge
int
in
fwait
shll
adc
dec
mov
inc
or
push
mov
push
xchg
push
roll
inc
movl
int3
int3
dec
outsb
repnz
imul
sbb
or
mov
xchg
bound
cs
xor
jecxz
fdivrs
sub
inc
mov
xchg
push
jl
jmp
and
and
dec
fisttpll
dec
dec
shlb
js
mov
nop
les
cmp
loopne
push
adc
leave
dec
fldt
pusha
lahf
dec
sub
or
call
mov
lods
jno
pushf
xchg
pop
outsb
pop
add
or
pop
push
es
mov
repnz
into
shlb
xor
push
pop
call
or
mov
nop
push
loop
pusha
dec
jnp
rorb
loope
fimull
push
insl
lods
stc
sub
mov
xchg
push
push
add
andl
sbb
les
aad
mov
sbbl
mov
inc
or
xchg
ss
das
stos
popf
sub
xor
mov
push
shll
sub
je
fldenv
aam
adc
test
mov
data16
icebp
lret
or
adc
call
sub
jecxz
bound
pushf
push
insb
jmp
aas
nop
ss
xchg
and
ja
pusha
xor
call
jbe
jp
dec
scas
rcll
cmp
lret
jns
lret
sti
in
push
cmc
adc
fwait
rclb
adc
jmp
push
dec
xchg
lahf
loop
jg
sub
xchg
sbb
sbb
adc
fmul
addr16
fildl
adc
pop
xchg
test
insl
ret
adc
rcl
sbb
push
aaa
out
xchg
lret
in
dec
and
rclb
dec
fiadds
lea
ret
test
cmp
jno
nop
add
mov
cwtl
xchg
pushf
fimull
push
dec
add
push
imul
sub
stos
lock
lret
mov
fldcw
testb
ret
aam
inc
jl
lods
mov
cwtl
xchg
lock
adc
arpl
int
sbb
cmc
dec
notl
add
sub
sub
jne
fldl
xor
inc
xchg
sbbl
and
enter
xor
fdivrs
or
add
movsl
and
mov
cs
jp
pop
jmp
js
adc
dec
jmp
into
xor
inc
xchg
ret
push
or
xchg
sub
sbb
push
mov
or
mov
sub
adc
fdivl
cld
xor
sbb
daa
dec
adc
adc
sbb
jo
in
cmc
dec
cmpsb
ds
mov
dec
jmp
flds
in
stos
shll
scas
xchg
mov
lods
mov
mov
je
lock
rclb
bound
shl
or
sbbb
jge
lret
repz
add
push
cld
cli
add
inc
lret
xchg
mov
jp
fstpl
cmp
fnsave
mov
inc
movsl
or
xchg
pop
or
out
ja
testb
and
push
ror
in
xlat
shll
sub
fdivl
divl
dec
addr16
loop
bound
add
lods
dec
fsubl
inc
push
inc
sub
cmp
sub
xchg
sbb
lods
outsl
adc
or
repz
mov
push
je
jae
mov
mov
inc
stos
jae
mov
movsl
add
and
pop
cmp
ljmp
mov
jmp
pop
push
adc
call
and
leave
pop
stos
mov
pop
or
sub
jg
or
xor
out
pop
sub
xchg
jle
add
adc
xor
or
in
sbb
cmp
cmpsb
test
js
xchg
jb
mov
cmpsb
adc
test
pop
jo
int
jge
or
arpl
sbb
mov
rclb
pushf
sbbl
dec
out
mov
jmp
mov
sarl
imul
aad
adc
jle
fwait
dec
sbb
jmp
data16
mov
shl
push
cmc
fstpt
lods
xchg
in
and
sbb
fcompl
pop
mov
jns
xchg
push
cmp
push
lods
pop
mov
movsb
sarb
shrl
sti
pop
cltd
mov
les
xor
insb
adc
push
xchg
js
ret
pusha
dec
lret
mov
sbb
xor
vxorpd
and
xchg
outsb
inc
inc
mov
loopne
sbb
jns
fwait
jb
lret
xor
mov
cli
rcrl
sub
xchg
jg
push
inc
lds
test
lret
outsl
in
pop
xchg
flds
cmpsl
push
out
movsl
test
sub
pop
ss
mov
out
xchg
es
js
jo
xor
lret
push
xchg
mov
sub
adc
dec
pop
jne,pn
push
stos
pushf
or
xor
scas
pop
testb
sahf
movsl
sbb
pop
xchg
lret
pop
mov
sub
adc
lahf
test
cld
inc
jae
inc
sbb
stos
add
shlb
rclb
adc
les
inc
cmp
sub
pop
inc
sahf
xor
mov
push
xchg
push
cwtl
push
shll
push
shr
inc
rcll
test
push
imul
inc
aas
stos
cmp
adc
fsubrs
cmp
scas
mov
insb
jnp
mov
scas
add
addr16
test
inc
xor
jno
jmp
repnz
add
adc
xchg
jo
and
or
and
in
xchg
inc
fildl
sub
pop
aad
mov
inc
pop
push
das
out
mov
inc
stc
jge
fidivrs
pop
mov
dec
mov
push
ret
push
sub
sub
shll
cmp
stos
or
or
jo
iret
mulb
and
les
int3
mov
insl
xlat
adc
xor
sarb
pushf
outsl
adc
loope
jbe
xchg
pop
outsl
hlt
mov
out
and
push
test
aam
int
ret
mov
adc
loopne
mov
subb
add
push
outsb
mov
aaa
cmp
push
inc
into
pop
flds
xchg
ja
stos
jg
adc
jne
sub
lcall
pop
ficomps
sub
xchg
lcall
pop
test
xchg
sub
dec
inc
rcll
fwait
cmpsl
adc
imul
ret
cmp
jg
mov
loope
out
xchg
aam
jmp
pusha
loop
aaa
mov
inc
sti
movsb
call
out
mov
cmp
add
ljmp
adc
inc
ljmp
aaa
mov
movsb
push
adc
insl
mov
lret
or
and
test
xor
pop
lret
shrl
call
inc
push
das
out
or
pop
xorb
push
fisubrs
lods
loopne
js
and
fiaddl
out
fwait
stc
loop
call
pop
fwait
dec
xchg
push
in
into
subb
dec
xor
mov
popfw
fwait
cs
adc
push
jmp
lcall
notl
pop
popf
mov
cmp
mov
inc
mov
cld
or
sub
push
test
cli
sbb
loope
test
pop
out
fistl
mov
loop
fs
call
and
xor
sub
call
xchg
push
std
mov
mov
cli
loope
fildl
testb
push
pop
and
cs
movsl
push
data16
mov
jo
lcall
push
sub
hlt
cmp
pop
dec
pop
mov
imul
mov
fwait
cmp
ss
testb
xchg
dec
movsb
mov
in
sbb
je
mov
mov
and
push
aam
adc
jnp
movsl
adc
sub
jo
pop
sarb
push
xchg
out
imul
popf
jmp
es
xchg
push
mov
xor
push
xchg
out
test
cltd
sub
test
add
ret
fildll
jg
dec
enter
call
shl
cmpl
movb
lock
sub
rcr
je
inc
jnp
pusha
lret
cmpsb
xorl
test
repz
dec
aam
xchg
ret
xchg
dec
dec
enter
rcl
mov
inc
lahf
jae
cmp
cmpsb
mov
scas
adc
push
mov
fldcw
jle
xor
movsb
imul
jnp
mov
test
push
repnz
mov
flds
cli
or
gs
rclb
mov
inc
cmp
and
leave
sahf
sbb
sbb
pop
cld
and
dec
mov
lock
in
icebp
or
mov
ss
pushf
mov
es
add
sbb
stos
mov
scas
mov
push
add
addr16
dec
iret
adc
adc
mov
mov
mov
cs
stos
aad
ja
movsl
andb
xor
jg
dec
imul
bound
fdivrs
push
xchg
fwait
outsb
lret
mov
pop
sub
xor
loope
lcall
sbb
or
mov
mov
pop
aas
repnz
mov
imul
push
rorb
inc
movsl
movsl
add
xchg
dec
mov
jns
mov
sahf
out
imulb
dec
out
out
sbb
idiv
mov
iret
inc
mov
push
aas
aas
ja
ja
lock
loop
add
cmp
mov
mov
mov
dec
test
pop
dec
ret
inc
dec
rcrl
jns
cmc
mov
adc
and
pushf
std
xor
dec
inc
lock
push
pop
dec
pop
adc
ret
mov
add
sbb
adc
pop
push
inc
movsb
cmc
push
or
fdiv
pavgw
lahf
xchg
sarb
inc
sbb
mov
pop
sbb
movsb
lock
inc
mov
add
ss
test
jecxz
inc
je
cld
pop
cs
subb
xchg
aas
loopne
inc
lods
sub
data16
dec
lret
iret
out
into
push
cmp
out
scas
sarl
jae
xchg
aas
cmp
mov
lcall
fistpl
sub
iret
pop
xchg
pushf
jnp
daa
adc
or
add
xor
xor
mov
lock
sub
mov
cmp
jns
js
movsl
xchg
mov
rclb
xchg
fidivrs
dec
add
or
idivb
pcmpeqw
pop
fisubrl
stos
cmp
mov
test
pop
pop
dec
addr16
mov
mov
je
outsl
and
add
cmp
lods
and
scas
addr16
enter
pop
xchg
push
xchg
mov
cmp
test
mov
mov
mov
pop
pop
gs
ret
bound
mov
arpl
push
add
pushf
int
fwait
cmpsl
stc
mov
aad
mov
cmp
rcrl
add
outsb
adc
imul
fsubl
in
jo
mov
pop
add
scas
push
inc
sbb
jb
or
test
int3
daa
jno
xor
stc
add
adc
mov
ficoms
hlt
mov
dec
add
sub
inc
jl
xchg
imul
imul
roll
and
test
aas
imul
pop
aam
out
and
add
sbb
test
outsl
jmp
leave
mov
into
add
adc
gs
pusha
push
jmp
pop
push
adc
push
xor
lcall
push
sbb
into
testb
scas
mov
in
xchg
push
dec
jmp
dec
inc
adc
data16
adc
test
ja
sbb
jmp
xchg
bound
push
xchg
inc
jno
add
add
arpl
push
imul
inc
rorb
mov
jge
xor
inc
lret
dec
push
sub
mov
xchg
lds
cs
fidivs
gs
sbb
insb
add
mov
test
pop
push
lea
mov
aas
adc
adc
cmpsb
xor
je
mov
add
aaa
adc
adc
adc
xor
cmp
mov
cwtl
in
and
das
jae
cltd
sbb
lods
das
cmp
jg
jg
fldcw
mov
loopne
jnp
into
push
dec
aaa
pop
sahf
jge
and
sub
push
xor
mov
lret
push
pop
test
loopne
cmp
pop
xchg
sbb
iret
or
ffreep
mov
int3
iret
mov
dec
jbe
pusha
fsubp
and
stos
mov
das
arpl
jp
adc
stos
jne
mov
add
ret
dec
js
int
scas
adc
jecxz
jnp
mov
mov
push
cltd
loopne
pop
cmp
test
lret
jmp
xor
cld
int
outsl
ret
jp
xor
jmp
push
popa
fcmovu
jae
inc
call
scas
push
xchg
loope
add
in
or
sbb
jle
aaa
icebp
push
cwtl
xor
lret
or
fstps
lods
cs
push
sbb
sub
jecxz
lahf
testl
sbb
add
icebp
pop
sbb
sbb
mov
out
sahf
je
lock
icebp
fdivs
mov
pushf
fbstp
push
fnsave
fadds
sub
ret
adc
sbb
mov
iret
cmpsl
sbb
mov
and
dec
cmc
mov
jp
scas
fstpl
inc
or
mov
jg
jns
jbe
adc
aam
enter
fs
inc
popa
out
xor
add
jnp
pop
pusha
out
mov
xor
pop
std
test
push
adc
add
and
dec
popa
out
je
ret
mov
push
ljmp
pop
scas
sub
pop
test
mov
scas
push
and
xchg
adc
ja
je
ljmp
push
mov
adc
and
sbb
es
js
mov
aad
es
rep
movsl
pop
xchg
or
push
sub
iret
cmc
mov
ss
out
add
in
stos
sbb
aam
cmpb
jno
jl
rclb
pop
cld
pop
insl
inc
inc
add
sub
xor
cmp
mov
adc
cltd
xchg
clc
imul
jp
outsb
cmpsl
daa
pushf
in
push
mov
mov
je
pop
loope
aaa
mov
cmp
cmpsb
push
mov
add
cmp
xchg
sub
pop
mov
push
pop
jp
mov
ljmp
adc
jno
out
push
add
jle
xchg
push
jb
icebp
sub
push
xchg
jo
int3
out
jp
jp
xchg
xlat
imul
add
loop
out
movsl
pop
out
int3
scas
push
mov
subb
inc
popa
dec
cmp
mov
les
nop
adc
cmp
mov
mov
jns
adc
rolb
int
iret
in
inc
adc
push
adc
cmp
notl
adc
jnp
shrb
add
out
or
loop
jae
idivl
mov
ljmp
mov
das
int
mov
or
mov
xchg
push
addb
xchg
pushf
xchg
xchg
rol
xchg
xchg
cmc
cld
mov
or
std
call
mov
into
jmp
call
push
push
pop
cltd
test
fsubs
inc
xor
test
mov
sub
adc
push
scas
sub
add
mov
sub
lock
test
jge
push
in
imul
ret
mov
jle
jb
xchg
mov
mov
pop
filds
shlb
and
divb
xchg
test
jle
sbb
mov
dec
aas
jle
aad
insl
in
bound
outsl
cwtl
std
int
orb
xorl
div
dec
lcall
mov
adc
push
push
dec
adc
imul
sbb
adc
add
xor
js
inc
and
pop
xor
xor
je
daa
clc
cmp
ficompl
mov
or
shlb
js
add
iret
sub
test
mov
pop
sub
addb
add
add
ret
dec
mov
clc
std
cwtl
in
push
sbb
sahf
jmp
sub
in
fsubl
push
inc
cmp
pusha
cltd
fdivs
popa
jg
sub
idivb
add
loopne
mov
roll
sbb
mov
dec
mov
mov
jecxz
or
in
mov
xor
imul
push
test
sbb
fldl2e
jge
loopne
dec
xorb
mov
subb
in
ljmp
xor
push
into
dec
movsb
enter
repz
jbe
mov
out
pop
in
pop
lds
push
jno
xor
xchg
sbb
ss
outsb
in
dec
jae
xchg
testb
add
pop
addl
out
aam
rcr
test
mov
sbb
mov
push
mov
in
or
pop
addr16
dec
add
stos
and
ss
push
jmp
xor
loope
xlat
jb
pop
cmp
mov
mov
dec
xchg
mov
mov
ss
in
sbb
lahf
adc
sub
pop
test
fldl
push
movsb
sub
inc
stos
repnz
imul
outsl
out
gs
add
mov
sbb
xor
arpl
adc
sub
popa
or
ss
inc
jo
sbb
insl
ds
sbb
adc
jmp
es
and
ja
addr16
std
mov
push
test
pop
ds
sub
es
shrb
mov
subb
lcall
sbb
outsl
std
fcmovu
cmp
leave
out
cmpsl
or
add
dec
mov
add
jge
push
ret
push
call
orl
in
rcll
or
rclb
sbbb
jp
cltd
xchg
or
xor
lcall
jno
sub
aam
push
cmc
cli
sahf
pop
sbb
xchg
sub
call
cltd
mov
loop
cwtl
lret
inc
sbb
pop
sbb
jo
jb
add
repnz
cmpsb
add
and
mov
add
neg
mov
cmpsb
fdivs
cli
ljmp
imull
push
cld
stos
hlt
add
arpl
jl
pop
inc
mov
jb
repz
pop
sub
clc
lcall
out
push
shl
xor
jmp
mov
mov
cmp
cmp
leave
insl
mov
add
dec
test
leave
bound
and
sbb
xchg
mov
adc
push
lret
xor
lds
std
ljmp
adc
dec
mov
in
mov
push
sub
outsl
mov
push
stos
and
xchg
cli
test
rorb
mov
dec
mov
xor
push
das
cmp
jmp
dec
adc
and
xor
data16
stos
push
push
xlat
add
mov
xor
mov
out
mov
jmp
mov
rcrl
jmp
and
bound
stos
sub
repz
mov
xchg
push
push
mov
outsb
adc
and
shrb
mov
adc
daa
mov
or
cmpsb
loop
jge
push
les
mov
test
push
jae
sahf
and
mov
rcl
pop
jbe
into
pop
loop
adc
xchg
push
aaa
cmp
fwait
dec
int3
mov
xchg
adc
orl
test
aas
loopne
sbb
xchg
mov
pop
je
or
sti
xchg
cmp
pop
push
lds
rcrl
cmp
jne
stos
leave
fnstcw
scas
ds
aam
pop
repnz
and
sbb
sahf
jbe
flds
addr16
dec
insl
adc
fnstcw
push
out
out
mov
imul
mov
pushf
aas
xchg
ret
dec
push
and
fildl
pop
test
sbb
mov
inc
pop
test
pushf
mov
sub
inc
and
hlt
cmpsb
dec
out
pop
stos
dec
cmpsb
fisubs
fimuls
ret
cwtl
cli
dec
add
fwait
jnp
add
mov
leave
and
xor
jmp
and
inc
xchg
and
or
xchg
mov
and
cmpsl
jns
inc
cld
cmp
popf
pop
bound
sbb
fcom
movsl
adc
gs
fs
adc
inc
sub
adc
aam
imul
inc
cmp
arpl
ja
orb
stos
xor
in
xchg
xor
lea
xchg
dec
push
popa
cmpl
movsb
pop
fs
fs
aaa
push
cli
lods
ror
xchg
sbb
mov
push
add
jnp
add
mov
out
repz
mov
stos
xchg
adc
ja
cmp
fdivrp
push
aad
xor
enter
adc
adc
mov
xchg
push
jbe
es
xor
idivb
sbb
out
das
dec
sub
pop
stc
sar
data16
mov
fwait
cs
xor
cs
jmp
xor
push
jmp
push
xchg
push
add
lea
xor
cmp
push
pop
dec
out
loopne
dec
imul
or
adc
pop
dec
cltd
sbb
mov
mov
adc
fisttpl
shr
orb
push
adc
mov
out
mov
or
cmp
cmp
shrl
cmc
out
stos
mov
aam
out
inc
outsl
out
ret
fmull
sub
or
loope
cmpsb
in
mov
inc
sub
or
adc
dec
push
xchg
cmpb
into
loopne
jb
cmp
push
mov
xor
call
mov
inc
mov
cmp
push
sbb
cmp
lods
pop
push
jmp
mov
and
sub
rcl
fiaddl
popf
xor
repnz
mov
jecxz
jge
loopne
pop
lods
jae
aas
fnstsw
add
jle
jmp
xor
out
sub
xchg
mov
lock
lret
and
xchg
imul
mov
inc
pop
cmp
jg
mov
mov
orl
dec
out
cmp
pop
sarb
cmpsb
sti
jns
insb
test
mov
push
xor
xor
xlat
push
sbb
add
sub
mov
out
mov
push
jne
xchg
loop
adc
aas
lret
lds
clc
pop
dec
jp
xchg
dec
pop
sbb
enter
and
out
test
mov
xorl
adc
das
ja
xor
loopne
sub
adc
inc
sbb
mov
xchg
mov
aas
mov
or
mov
arpl
ja
push
movsl
sbb
movsl
xchg
push
jl
mov
jg
push
aas
outsl
push
rclb
cmc
mov
xchg
mov
and
xchg
sti
enter
int3
push
jb
imul
hlt
jecxz
mov
xchg
mov
in
or
int3
mov
push
movsl
js
lds
rcrb
cli
js
pop
movsl
sbb
and
sbb
add
adc
and
add
loop
shll
inc
mov
mov
out
push
cmp
jle
dec
inc
pop
xlat
aam
test
pushf
in
mov
sub
stos
mov
lock
xor
rolb
clc
or
in
insb
push
mov
cmp
dec
push
dec
orl
jbe
andl
adc
or
nop
push
cmp
mov
fildl
xor
test
xchg
push
jo
mov
sub
jge
xlat
and
push
icebp
xchg
imul
xor
xchg
mov
scas
add
imul
sub
xorb
iret
xchg
ss
divb
lahf
pusha
insb
loopne
mov
inc
xor
mov
dec
lret
lock
pop
xor
or
jns
cli
push
add
shll
jmp
call
loope
lea
sbb
pop
cmpsl
shll
sbbb
mov
loop
and
popa
inc
es
outsl
jnp
adc
xchg
jp
cmp
sbb
test
xor
pop
inc
mov
mov
cltd
call
sub
loopne
pop
pop
in
xor
inc
lds
sub
xchg
in
mov
xor
insl
lret
adc
jg
in
cmp
out
pop
xchg
subl
add
adc
dec
imul
mov
movsl
imul
mul
pusha
jp
movsb
stos
add
clc
in
xor
inc
push
or
or
call
or
cli
ds
mov
dec
fnstsw
insl
jne
scas
mov
es
fbld
xchg
push
push
arpl
push
inc
fisubrl
lret
adc
lods
or
pop
cwtl
adc
clc
addr16
push
or
int
jns
pop
mov
xor
jo
and
dec
pushf
hlt
iret
test
lret
or
stos
loope
pop
js
jecxz
rorl
xor
adc
xchg
mov
pop
and
pop
inc
xchg
sbb
jmp
xor
je
xchg
cs
mov
lds
sub
je
inc
sahf
pushf
inc
sub
das
repz
add
jns
pusha
lds
scas
push
aaa
icebp
dec
lret
pushf
sbb
dec
adc
sahf
xchg
mov
pop
adcl
xchg
jno
or
or
and
xor
orl
or
jmp
jno
aas
stc
fbstp
loop
mov
inc
mov
cmpsl
sahf
test
test
jp
pop
lret
mov
xlat
outsl
xor
scas
push
les
and
in
mov
dec
jle
or
jae
aam
pop
cmp
pop
mov
jp
popa
xor
adc
outsb
mov
stos
sub
neg
lds
ficomps
les
das
jecxz
jle
movsb
or
adc
mov
in
imul
fisubrl
shlb
insl
arpl
mov
outsl
aam
sub
call
inc
mov
jmp
cli
push
mov
push
inc
bound
jae
and
xchg
pusha
test
out
mov
mov
jns
mov
mov
xchg
or
loopne
cmp
roll
call
icebp
dec
adc
cld
sbb
inc
ljmp
js
sub
sbb
ja
xor
movsb
adc
fs
jb
cmpl
sti
movsb
mov
call
test
loop
push
xor
mov
cmpsb
add
iret
cwtl
xorb
cwtl
xchg
push
xchg
cmp
ja
xor
mov
lds
cs
xlat
cmp
outsb
inc
lock
pop
mov
adc
fdivrs
popa
mov
cli
ret
sbb
shlb
and
push
movsl
jne
roll
cmp
movsl
inc
std
cwtl
sbbb
lock
and
sbb
cltd
mov
mov
mov
adc
ss
fwait
sub
cs
clc
adc
out
jnp
add
xchg
lcall
bound
dec
leave
fstpl
js
cmpsb
movsb
lods
pop
flds
cs
sub
adc
mov
insl
es
rolb
scas
fs
repnz
jne
pop
sbb
sbb
outsl
stc
push
imul
cmp
jno
add
ret
lods
jns
mov
xchg
mov
add
int3
arpl
in
inc
stos
push
lahf
fstl
popa
pop
mov
mov
hlt
sbb
outsl
test
das
add
add
xchg
push
lds
adc
aas
mov
and
add
sub
xor
fistpll
outsb
xor
insb
pop
ja
les
test
inc
popa
test
movsb
and
je
mov
fnstenv
arpl
inc
inc
test
gs
xchg
jl
xor
mov
push
push
or
inc
mov
push
das
push
sbb
mov
push
daa
cmc
shlb
sbb
mov
popf
dec
out
in
fistps
loopne
mov
lcall
inc
push
popf
pusha
push
ficompl
lret
push
pop
in
sbb
je
outsb
cmpl
out
fldenv
and
dec
std
jle
mov
xchg
push
clc
in
call
aas
or
add
test
pop
mull
jmp
orl
bound
sarb
xchg
fimuls
mov
inc
sbb
xchg
out
cmpsb
mov
loopne
lret
pop
daa
mov
jno
mov
pop
dec
push
jb
icebp
pop
icebp
push
sbb
and
or
and
aaa
xor
nop
ficoms
ja
jb
bound
adc
adc
mov
cld
sahf
loopne
out
aad
jp
mov
inc
jbe
push
inc
lea
or
les
mov
lods
push
rorl
adc
setae
repnz
faddl
or
je
mov
add
inc
push
scas
fs
std
adc
hlt
push
xchg
icebp
adc
xchg
mov
jns
in
sbb
xor
icebp
mov
sub
jl
nop
push
test
mov
mov
rcrl
jae
inc
xchg
popa
das
pop
ret
adc
jmp
xchg
push
or
jl
jg
xchg
lcall
mov
cmc
loope
mov
push
xchg
inc
repz
mov
push
js
xchg
dec
adc
pop
lahf
mov
out
addr16
fsub
stos
mov
dec
outsb
aam
rcrl
adcl
cmp
mov
or
adc
clc
mov
or
mov
fcoms
xchg
jge
mov
cli
add
test
xchg
jg
or
add
jge
fidivs
in
push
or
sub
mov
lds
daa
outsb
and
or
loope
push
mov
sbb
sahf
and
xor
test
repnz
xchg
mov
xor
jecxz
arpl
mov
lcall
pminub
xchg
fists
push
xorb
mov
aaa
in
scas
test
jge
js
adc
inc
rcrb
ret
sub
loop
iret
imul
or
lret
cld
ja
xor
gs
js
in
and
jecxz
sbb
jo
call
aaa
push
or
sbb
mov
sub
cmp
jae
stos
add
pop
adc
cli
xchg
lds
inc
das
mov
cmp
popf
mov
js
popf
add
jbe
mov
les
mov
xor
push
xchg
pop
mov
sub
lds
fistl
je
sub
add
dec
sahf
loope
add
ret
jno
xor
sub
dec
mov
jg
push
jecxz
mov
xchg
dec
iret
nop
or
push
faddl
mov
jle
hlt
push
mov
inc
and
xchg
das
pop
or
push
mov
xlat
add
adc
mov
or
pop
faddp
pop
inc
jecxz
addr16
mov
mov
sub
jbe
fistps
nop
jl
xlat
faddl
movsb
fisttpl
lret
push
jo
loopne
cmpsl
insb
insb
cmp
cmpsb
push
inc
adcb
call
cmp
mov
insl
push
in
mov
aas
xchg
imul
out
movsl
cmpsb
mov
xor
out
in
cmc
sbb
or
or
adc
test
mov
cmp
push
hlt
fisubrs
pop
xchg
fildll
push
imul
cmp
inc
adc
sub
fistpl
mov
mov
mov
cmpsb
idiv
lret
mov
leave
fisubrl
rclb
pop
sub
out
notb
xchg
sub
jge
int3
pop
dec
lods
adc
aaa
dec
pop
movsb
sar
stos
xor
mov
fstpt
jecxz
test
pop
cltd
je
add
pop
inc
mov
test
jbe
lods
jbe
jb
cli
lret
fwait
inc
testl
mov
out
je
or
jno
jne
mov
sarl
pop
sub
iret
adc
pop
pop
fistpl
mov
push
mov
sti
jb
test
in
gs
lret
mov
jmp
xchg
or
mov
pop
repz
add
hlt
testl
inc
adc
fcoms
push
mov
jo
sti
outsb
and
sbb
xor
cmp
adc
push
negl
out
cmp
iret
hlt
adc
es
mov
xchg
push
xchg
stc
xchg
aas
aam
push
mov
ret
sti
push
cmpsb
fstl
push
imul
jmp
push
mov
xor
jmp
and
insl
ljmp
mov
push
fcoms
xlat
ss
xor
inc
addr16
into
cld
and
xor
call
fldl
cmp
fsubl
js
loope
fwait
daa
push
mov
mov
xchg
mov
out
aam
nop
aam
ja
xor
add
cmc
enter
bound
hlt
lret
nop
and
out
inc
mov
fwait
xchg
aad
fistpl
cld
testb
cmp
addr16
js
jecxz
cmp
sbbl
outsl
out
push
xchg
xor
jp
shll
push
movl
xlat
iret
arpl
ss
jge
shll
enter
lock
popa
mov
clc
mov
out
xchg
cld
xor
and
jp
rorb
repnz
imul
mov
sbb
sbb
sub
cmp
xchg
add
add
popa
mov
es
and
std
shrl
mov
scas
sti
js
fists
push
inc
cmp
or
pop
push
add
push
xchg
pop
mov
mov
mov
int3
lret
insl
sub
cwtl
adc
or
xor
sarl
dec
inc
sbb
ss
mov
xchg
std
test
pop
daa
into
mov
and
out
xor
sbb
popf
dec
mov
and
dec
cltd
pushf
loopne
shll
mov
pusha
push
mov
or
sub
mov
pop
ss
sub
gs
clc
ret
sbb
pop
les
cmpsb
xor
push
dec
in
gs
aam
push
jmp
mov
ficompl
and
cs
lds
pop
mov
xchg
imul
cmp
in
int3
mov
sub
fiaddl
in
xor
rorl
in
xor
daa
in
scas
ja
jo
jo
add
add
in
jp
cmp
dec
mov
out
les
and
addl
rcrb
cmp
or
sbb
out
cmp
mov
add
fcmovnu
test
aam
jo
sub
addr16
into
pop
mov
jg
inc
push
cmp
es
int3
out
icebp
outsb
adc
idivl
push
xorb
stc
mov
insl
sahf
adc
pusha
xchg
mov
xchg
push
nop
iret
stc
mov
inc
scas
dec
mov
mov
js
jo
adc
jno
or
lock
call
loopne
mov
inc
clc
cld
or
inc
push
xchg
gs
inc
push
stc
and
cmp
ds
fcmovnb
test
push
mov
dec
insb
inc
lds
lea
das
pop
aaa
ret
fwait
push
dec
arpl
out
out
dec
imul
jle
fisubs
and
sbb
adc
or
xchg
pop
jo
testb
fildl
sbb
xor
repnz
daa
mov
mov
mov
xor
mov
mov
xchg
mov
mov
xchg
and
cmpsb
add
inc
flds
mov
add
xor
data16
in
ss
push
jl
inc
mov
outsl
aad
jnp
fdivrl
test
cmp
lods
mov
neg
notb
rorl
ror
jne
adc
cmp
in
call
outsl
dec
push
push
xchg
imul
dec
push
arpl
jne
jae
fidivrl
jle
cli
js
xor
lcall
mov
int
fwait
mov
cltd
imul
loope
mov
pop
or
jp
sub
or
cmc
adc
mov
outsb
bound
adc
add
mov
inc
in
xor
adcb
shll
add
das
xchg
mov
neg
lcall
cmc
outsl
popa
mov
lcall
das
addr16
cmp
push
push
adc
fadd
jns
dec
mov
movsl
pop
or
fiaddl
pslld
aam
push
outsl
add
lea
ds
or
mov
sti
inc
pop
mov
sbb
adc
and
dec
in
testl
mov
jae
push
iret
push
push
lea
inc
mov
xchg
inc
data16
sbb
or
adc
ficompl
insb
sub
xchg
ss
jle
push
loop
ret
jnp
std
inc
push
mov
mov
rcrl
shll
pop
nop
jae
adcl
push
xchg
adc
les
lret
sub
xor
or
jg
mov
fcoml
cltd
cmp
xchg
shr
cmp
jo
pop
lods
push
add
out
mov
insl
cmp
push
mov
cmpsl
into
cwtl
fcomps
mov
or
cmpsb
rcr
in
mov
add
frstor
mov
inc
lcall
lahf
test
pop
fimuls
sti
fildl
pop
mov
jbe
insb
push
xor
test
stc
test
les
dec
sub
dec
sbb
enter
rcrb
into
aaa
bound
shll
push
divb
out
jl
dec
shll
test
aam
cmpsb
ret
scas
imul
push
mov
push
xchg
int
sub
sub
pop
pop
ja
sub
sub
je
push
or
por
orb
pop
jns
arpl
cs
cmp
cmp
sahf
mov
dec
xchg
xchg
mov
add
into
pusha
out
jp
fdivrs
shlb
arpl
mov
leave
xor
aad
xchg
repnz
ror
xchg
test
sub
ljmp
sub
ljmp
inc
cli
jecxz
mov
aaa
mov
xchg
sbb
gs
clc
aaa
sti
inc
inc
fldl
fs
popa
and
mov
shll
push
and
jmp
xor
orb
pop
cmp
sahf
rclb
ds
cwtl
and
imul
mov
rcrb
je
wrmsr
bound
sub
das
cwtl
sbb
jmp
out
add
imul
sub
mov
inc
jbe
pop
jne
loope
jns
pop
stos
test
xchg
faddl
add
enter
cmpsb
and
sar
pop
cmpb
into
pop
int3
aas
push
push
push
jne
cmpsl
jle
popa
dec
sub
andl
bound
jecxz
mov
push
pop
xchg
mov
fdivl
xchg
jns
insb
cli
shlb
jmp
jnp
in
pop
jge
movl
lock
lret
mov
ss
cmp
movsb
sbb
sti
push
mov
sub
mov
or
add
and
fistps
clc
inc
adc
pop
subb
repnz
out
out
test
popa
mov
ret
pop
test
jo
jge
mov
cmp
sbb
xchg
ljmp
inc
jb
pusha
push
push
mov
jbe
iret
test
inc
inc
inc
fs
mov
dec
lahf
pop
pushf
mov
and
xchg
dec
lea
push
mov
and
mov
enter
lret
and
inc
addb
inc
xchg
imul
xor
sti
mov
inc
outsb
xchg
loopne
mov
xor
pop
andb
sub
cs
imul
out
mov
ss
jb
xchg
addr16
xor
stos
stc
dec
or
gs
popf
icebp
mov
int3
pcmpeqd
sbb
add
stos
stos
insb
stc
js
lahf
faddp
and
jns
aam
and
add
popaw
shll
lock
and
xor
ljmp
push
test
imul
pop
add
loop
in
loop
mov
and
push
pop
dec
dec
xor
dec
inc
xor
shrb
lds
push
fcomp
dec
jle
std
repz
push
sbb
sbb
or
loopne
jno
push
dec
mov
lret
fbstp
mov
pusha
cmpsb
mov
int3
addl
lods
lea
outsb
xlat
jl
orb
mov
sbb
dec
push
sbb
pop
jmp
sarl
mov
inc
and
in
xor
mov
cld
fst
jle
bound
jae
lock
jnp
inc
inc
mov
arpl
fwait
jae
sub
daa
push
sbb
mov
cmc
stos
icebp
cmpsb
dec
int
les
out
in
int3
inc
cmp
xchg
sub
dec
mov
jecxz
loopne
test
das
out
sbb
mov
iret
xchg
popf
test
mov
cmp
lcall
stos
lods
into
es
insl
mov
cwtl
popl
fstl
jmp
repnz
out
and
cmc
jnp
add
jp
in
movsb
sahf
cltd
push
sahf
pop
loopne
mov
and
push
add
scas
fisttps
sarl
lret
cmp
jo
mov
mov
adc
inc
into
shll
and
es
xchg
fisubrs
js
or
aad
int
xor
icebp
push
enter
fdivrl
mov
aam
push
in
push
icebp
pop
loope
in
pop
jge
xchg
aas
into
dec
nop
popa
cli
lcall
cmovle
lock
cwtl
cltd
dec
mov
shlb
adc
push
sti
xor
shlb
pop
sbb
sub
pop
push
adc
std
push
jae
push
ret
cmp
sti
sbb
dec
mov
sarl
xchg
sti
rolb
incl
cmp
adc
aaa
call
mov
mov
sub
clc
cmp
leave
es
daa
sub
fldenv
fiaddl
xchg
xor
sbb
dec
jecxz
push
mov
or
or
mov
inc
int3
mov
into
insb
add
fwait
cs
ret
lahf
int
lods
pusha
je
movb
pop
mov
dec
out
and
sbb
cmpb
or
adc
mov
ljmp
pop
push
and
jl
inc
and
gs
xchg
out
mov
ss
inc
and
test
repz
pop
out
or
ret
or
xchg
fmuls
pop
out
mov
push
pop
add
mov
repz
fcomp
push
pop
cwtl
dec
inc
movsl
movsb
call
mov
jp
test
sub
sub
jmp
insb
jno
aam
and
repz
or
aam
push
jl
movl
dec
push
pop
jb
shrl
je
repz
sbb
or
rorl
cltd
adc
lcall
sub
out
adc
mov
rcrl
xchg
mov
loopne
push
into
test
xchg
cmp
int3
inc
xchg
push
popf
cld
mov
lock
adc
jge
fs
lods
sbb
fisttpll
mov
enter
mov
out
mov
sbb
loop
pop
out
das
push
test
add
sub
fstps
idivl
add
arpl
pop
fsubl
test
mov
sbb
sbb
dec
loope
jmp
push
int3
lods
sahf
fists
stos
int
lock
test
loopne
fstpl
push
dec
and
sbb
sbb
in
mov
xorl
out
sbb
int3
push
push
pusha
xchg
cmpsb
pop
adc
imul
out
gs
sbb
lods
xchg
in
daa
ficoms
pop
adc
leave
cmc
sahf
les
mov
popa
and
push
mov
mov
mov
mov
jl
mov
lcall
fwait
stos
int
ja
pusha
loop
icebp
andb
sub
adc
data16
mov
mov
bound
pop
nop
push
lahf
pop
or
sbb
xchg
insl
mov
arpl
xor
test
jle
cmpsb
ret
push
jae
sub
repnz
dec
xor
adc
in
outsl
sbb
push
lret
lds
imul
jne
add
xor
or
pop
and
mov
mov
pop
loopne
jl
ret
out
xor
outsl
cmp
mov
outsb
xchg
into
mov
add
stc
mov
sbb
aaa
push
int3
mov
rolb
add
out
inc
or
mov
add
inc
in
cmpsl
mov
add
jae
lds
imul
cmp
adc
jnp
call
cmp
sbb
enter
mov
mov
jle
push
cmc
iret
sub
mov
mov
lock
mov
notl
mov
arpl
jb
and
in
aaa
push
outsb
push
jge
cwtl
or
pusha
xor
fdiv
call
and
pop
jae
out
in
and
pop
pushf
add
mov
mov
sets
xchg
add
lea
popa
push
insb
and
push
popf
and
xchg
ja
cmp
repnz
xor
popf
cmpsl
loope
jne
mov
mov
sub
push
sub
dec
xchg
cmp
and
inc
out
dec
jbe
fldenv
dec
sbb
rcrl
or
addr16
sbb
testb
rolb
mov
mov
cltd
adc
cli
shr
push
sbb
mov
lret
shlb
lods
ficoml
or
xor
lret
test
sbbl
or
mov
pop
shr
lret
in
sbb
rorl
shll
xchg
dec
inc
adc
pop
mov
mov
test
mov
dec
adc
aas
movl
ljmp
push
mov
push
xchg
mov
xor
fcoml
add
gs
mov
in
xchg
fwait
add
sub
sti
test
out
xchg
mov
dec
fbld
pushf
rcl
lret
lahf
cmp
and
pushl
sbb
hlt
shl
ret
es
je
inc
mov
stc
jg
xlat
push
icebp
out
std
mov
sub
mov
adc
fildll
out
xchg
dec
in
inc
inc
out
sub
loopne
and
in
sub
insl
xchg
or
jo
dec
pop
popa
adc
sbbb
jp
arpl
fsubr
fwait
sub
jle
sbb
push
lods
jb
popa
or
stos
jo
or
cmpsb
mov
push
sub
sbb
xor
fcmovu
lock
and
call
shlb
lock
in
loop
add
test
mov
aam
imul
mov
arpl
jo
flds
mov
nop
sbb
xor
stos
pushf
pop
jns
out
scas
lahf
push
subl
adc
mov
ret
mov
loope
test
jmp
addr16
in
mov
icebp
in
mov
push
repnz
dec
mov
fadds
add
xchg
into
or
shr
sbb
jmp
mov
mov
cs
fildl
imul
pop
in
mov
xchg
movsl
xor
mov
jae
sub
xchg
lods
jno
jecxz
or
subl
inc
rorb
dec
or
popf
test
cmp
lods
gs
add
or
dec
mov
in
xchg
leave
in
pusha
inc
push
shll
inc
jg
cmp
cmp
iret
loopne
dec
jbe
repnz
fsubs
sub
dec
mov
push
mov
and
mov
sahf
jle
in
inc
pop
jno
stos
daa
out
mov
add
shll
and
out
hlt
mov
mov
add
fisttpll
popa
xchg
push
scas
mov
jb
xchg
xchg
notb
inc
orl
add
clc
mov
popf
push
ljmp
cltd
pushf
rcr
jae
xor
sahf
mov
mov
xchg
stos
outsb
inc
outsb
scas
jle
pmaddwd
outsl
in
rcrl
arpl
das
add
cltd
popf
xor
imul
subb
inc
xchg
xchg
mov
aaa
dec
cli
mov
cmp
push
fidivl
les
push
rcrl
enter
test
mov
xchg
das
or
out
out
insb
and
insb
cli
enter
shlb
add
pop
cmpsl
sti
adc
arpl
mov
and
fdivl
ss
outsb
fcom
out
in
adc
test
cmp
cmpsb
xchg
mov
add
push
hlt
mov
aam
pop
push
xchg
in
incl
pop
sti
fwait
adc
inc
lret
mov
popa
mov
push
pushf
mov
mov
jg
cld
sbb
mov
pop
jno
sbb
dec
adc
xchg
stos
std
stos
or
adc
and
outsb
pop
insb
in
lahf
mov
mov
ret
jb
in
inc
dec
xorl
cmpsb
mov
mov
lret
mov
inc
inc
test
fmuls
divl
cmp
jb
push
nop
xor
lods
scas
andb
rolb
dec
cmp
stos
xchg
or
add
dec
mov
cmpsb
cmc
jp
outsb
mov
cmpsb
stos
push
sti
pop
xor
pop
cmp
xchg
shlb
add
sub
xchg
mov
jl
push
in
stos
xchg
xchg
sahf
cltd
push
jnp
fmuls
call
mov
data16
mov
add
or
mov
and
repz
cmp
jg,pn
pop
mov
sbb
fisttpl
shlb
inc
pusha
fsub
add
rorb
std
mov
push
icebp
cmp
sub
test
sbbl
in
rclb
repz
sbb
and
inc
insl
sub
scas
shll
push
sbb
xchg
repnz
into
pop
mov
sub
mov
out
or
dec
mov
fnstsw
or
push
cmpsl
fs
push
out
lahf
lds
ret
inc
call
in
jno
adc
fucomp
jnp
mov
ja
icebp
mov
fmull
adc
ficoml
sbb
xchg
subl
int
pop
mov
mov
dec
and
lcall
sbb
inc
test
rcrl
pushf
mov
lcall
inc
test
cmp
fs
scas
sahf
jbe
pop
insl
js
add
xchg
arpl
xchg
cli
nop
insl
movsb
inc
lahf
and
and
mov
outsb
jne
dec
mov
lds
or
push
jp
add
icebp
sarb
pop
sub
or
sub
xor
dec
mov
pop
test
das
inc
aaa
or
xchg
or
push
addb
xorl
cmp
push
cwtl
or
orb
mov
dec
loop
out
or
enter
xor
dec
push
jo
lcall
sbb
out
hlt
mov
or
xlat
add
sbb
xor
fs
adc
pop
sbb
xor
jns
loopne
push
push
adcb
jne
out
jp
cmp
push
pop
mov
xor
sub
icebp
mov
shr
and
sbb
mov
xchg
mov
loope
jnp
sub
fs
loope
icebp
cmc
dec
dec
das
ss
daa
arpl
xchg
xchg
sub
dec
cmc
dec
sar
mov
jo
xchg
fistps
loope
adc
push
shl
xchg
and
mov
pop
or
out
xchg
mov
push
mov
sub
nop
enter
inc
inc
pop
xchg
xchg
repz
sbbl
push
fstpl
inc
repz
ljmp
pusha
push
pop
xchg
add
pop
add
or
mov
add
xor
sub
xor
das
sbb
out
jns
imul
dec
loopne
shrl
push
lahf
adc
or
test
inc
lods
cmc
pop
jnp
dec
pusha
sub
adc
movsb
xor
cmp
insb
mov
mov
or
pop
sub
xor
fwait
mov
test
fwait
fwait
pop
sahf
in
stos
jne
cmp
rcl
lock
lahf
sub
cmp
aas
insb
mov
pop
bound
lea
es
sbbb
fwait
imul
jo
addl
in
mov
sbb
outsl
stc
fistps
xor
shlb
sub
lea
sti
es
in
adc
xchg
cmc
hlt
pushf
add
sub
inc
inc
add
xor
xor
or
push
popf
shll
je
ds
mov
adc
adc
ds
ret
bound
hlt
cmp
inc
outsb
or
jge
mov
xchg
out
in
sbb
jl
jae
mov
or
lahf
xchg
icebp
gs
orl
pop
mov
pop
stc
outsb
fmuls
aas
aas
dec
lock
inc
jecxz
arpl
mov
inc
clc
push
mov
popf
mov
push
xchg
xrelease
inc
ds
movsl
out
mov
adc
push
pop
jle
or
pop
mov
dec
loop
aad
repz
mov
ss
push
push
dec
je
lret
cs
jecxz
js
mov
add
hlt
ljmp
mov
xchg
jmp
xor
inc
mov
stos
imul
cltd
lret
push
imul
pop
xchg
lock
cmp
inc
cli
or
xchg
mov
adc
add
loope
adc
sbb
aad
loope
cmp
data16
inc
lods
lds
mov
imul
inc
call
je
or
or
cmp
testl
and
push
jecxz
swapgs
out
mov
cli
lcall
mov
xor
mov
mov
imul
adc
xor
add
mov
fcomps
clc
je
mov
scas
gs
xchg
push
pop
data16
push
ja
xor
cmc
ret
lret
mov
divb
out
mov
sub
jmp
jne
repnz
test
shl
dec
insb
push
and
inc
add
jl
ret
inc
cltd
fs
pop
mov
mov
dec
stc
push
stos
cmp
addr16
pop
xchg
push
xchg
adc
jo
xor
ret
clc
es
cmp
dec
out
mov
push
jae
in
jmp
xor
dec
push
ljmp
xchg
mov
in
lahf
push
pop
push
jbe
or
mov
repz
leave
and
bound
and
dec
aas
sti
cmc
xor
jns
xor
xor
out
lret
xchg
js
xchg
test
popl
xor
jb
push
jecxz
lcall
fstl
push
lods
in
xchg
in
and
jns
rol
add
pop
xchg
pop
mov
and
mov
stc
or
dec
xchg
sub
or
xlat
out
dec
mov
sbb
xlat
add
cld
jmp
xor
iret
mov
fnstenv
dec
das
mov
xor
clc
aam
data16
push
sti
rcll
add
inc
int
inc
pushf
dec
jno
dec
repz
enter
pop
dec
sbb
cmpsl
das
cmp
jb
dec
in
stc
dec
cmp
paddd
cmp
xor
cmpsl
and
dec
push
outsb
das
fidivs
or
dec
xchg
xchg
cmpsb
push
loope
sub
stos
push
ljmp
sahf
loop
aaa
pop
adc
aas
shlb
mov
call
popa
aam
das
dec
mov
in
cmp
jle
adc
bound
scas
mov
into
stos
out
fs
repnz
xor
cmp
sbb
addr16
mov
loopne
xchg
cmp
xchg
std
push
sahf
lods
xchg
cmp
aas
xlat
test
repz
daa
mov
push
dec
call
icebp
mov
fists
inc
xorl
push
sub
dec
inc
popa
test
cmpl
lods
test
lods
dec
mull
mov
test
and
pop
inc
popa
shll
cli
setbe
mov
mov
jbe
aam
inc
ss
enter
ret
fdivrp
arpl
cmc
or
test
loop
adc
cltd
sub
aad
push
lret
aam
inc
pop
outsl
mov
lock
jecxz
lea
jo
sbb
movsb
das
jne
aas
add
mov
lret
push
aam
aad
sbb
push
aas
mov
add
mov
loop
fisttpl
inc
out
and
xchg
push
scas
cmp
data16
jnp
or
xchg
pushl
xor
add
imul
repz
shlb
and
sbb
pop
mov
lods
push
das
popf
or
xlat
or
insb
jb
pop
addb
mov
mov
loope
adc
or
mov
mov
jle
insb
mov
mov
ret
fs
sub
and
stc
cmc
dec
cmp
int
movsl
in
insb
fmull
mov
sbbb
jb
leave
sti
outsb
ret
xchg
mov
sbb
pop
add
shlb
insb
mov
sahf
push
fidivl
cltd
gs
pop
scas
jo
mov
mov
fistpl
pop
les
sbb
mov
xor
call
adc
xor
xchg
call
mov
hlt
mull
into
pop
outsl
or
repnz
jbe
repnz
xlat
jecxz
mov
out
inc
dec
clc
fnstcw
lret
jp
test
ror
cli
dec
ret
cwtl
lods
push
mov
and
dec
mov
out
sbb
dec
push
clc
ljmp
and
aam
pop
add
pushf
stos
in
icebp
sahf
push
jmp
cld
xor
mov
ljmp
clc
or
mov
jbe
dec
out
stos
sbb
cwtl
pop
in
lret
rorb
pop
inc
mov
shrb
outsb
imul
mov
sbb
or
mulb
adc
and
mov
or
dec
sub
test
pop
aas
aam
js
cli
loope
in
mov
in
jae
jo
roll
push
cmp
push
outsl
fxch
out
mov
adc
jge
call
lahf
adc
jge
mov
pop
fcompp
seto
scas
js
sti
mov
rorb
cli
mov
bound
icebp
sti
fdivr
mov
daa
lods
pop
scas
or
add
or
adc
fisubs
out
xor
dec
pop
adc
xor
dec
aad
fistl
jge
mov
ds
cmp
push
pop
mov
out
xlat
inc
sbb
jmp
inc
and
testb
clc
dec
jo
mov
repz
inc
inc
adc
shlb
adc
les
dec
test
mov
shll
test
icebp
cmp
mov
cmp
cmp
mov
jecxz
dec
jbe
fstpl
rcrl
loopne
icebp
mov
or
inc
mov
add
cli
jmp
push
ficoml
loop
imull
les
data16
shrb
sbbb
mov
popl
iret
pop
out
dec
dec
mov
xchg
cmc
into
scas
int3
xchg
fwait
mov
mov
sub
fs
popf
add
sti
or
xchg
inc
lock
xchg
sub
mov
out
add
pop
mov
or
rcrl
int
add
mov
mulb
jae
inc
pop
and
jecxz
jbe
or
push
mov
pop
inc
xor
mov
loopne
push
adc
mov
xor
pop
nop
mov
push
mov
es
dec
pop
xchg
imul
xchg
es
inc
push
xchg
mov
xchg
in
pushf
hlt
stos
lods
int
mov
sub
setle
push
lahf
xor
dec
dec
daa
andb
xor
dec
or
cltd
fmuls
xor
cs
sbb
jo
dec
and
sti
inc
fsubrs
outsb
add
adc
mov
xorb
mov
xchg
mov
xchg
pop
mov
push
and
push
jecxz
outsb
movsl
xor
jge
fwait
stos
inc
minps
mov
cmp
icebp
xchg
sbb
sub
jne
iret
out
test
pushf
add
cmp
imul
fmull
test
cmp
das
pop
add
jno
pop
xchg
mov
sbb
inc
add
mov
lret
outsl
ds
sahf
push
imul
mull
in
pop
sub
jge
jno
sti
lret
or
adc
xchg
ret
dec
shlb
mov
aaa
cld
sub
pop
xor
ja
iret
fs
mov
cmpsb
inc
inc
cmp
aas
inc
inc
out
insb
add
xor
inc
adc
mov
cli
ret
xchg
fdivrl
sub
and
jb
xor
push
into
mov
into
sbb
and
mov
ret
cmp
dec
push
stc
jge
repz
jae
cmp
adc
jb
jbe
cli
dec
cmc
clc
mov
lret
icebp
test
fisubs
inc
adc
cmpsl
insl
xchg
ss
aaa
cmpsl
lea
pop
push
cmp
dec
mov
inc
jle
pusha
cmp
pop
lret
testb
arpl
hlt
subb
sbb
popf
lcall
dec
or
mov
inc
scas
imul
push
sbb
mov
mov
xchg
sarb
mull
adcb
push
pop
xor
je
lods
loope
jnp
shrl
inc
hlt
push
shrl
cmp
sahf
mov
mov
dec
imul
mov
mov
mov
out
xor
xor
xchg
push
xor
xor
push
aas
rolb
xchg
pandn
or
in
in
daa
daa
repnz
xchg
xor
xchg
jg
xor
addr16
fs
in
jl
xor
cltd
adc
test
andb
cld
jb
aad
and
testl
xor
daa
ret
pusha
shl
xchg
sub
xor
stc
and
int3
inc
mov
imul
xchg
sub
scas
mov
mov
jle
sub
inc
adc
push
frstor
push
or
fisubl
movsb
test
sbb
xchg
mov
adc
cmp
sbb
fwait
in
and
rclb
sub
enter
add
inc
dec
repnz
mov
pusha
out
push
mov
dec
jb
les
xor
ljmp
sbb
sbb
xchg
push
lods
shlb
xchg
stos
cmp
jbe
incb
dec
mov
adc
and
dec
in
stos
xchg
das
ja
cmpsb
lods
fstl
into
and
xchg
aas
lret
push
loope
and
jns
xchg
sarb
mov
sub
cmp
push
mov
divl
popf
in
nop
movsl
loopne
and
jg
adc
cwtl
repnz
je
adc
shll
inc
mov
jge
adc
lds
rcrb
dec
cmp
and
mov
mov
lcall
insb
mov
pop
inc
xchg
xor
repnz
mov
push
popf
lock
cwtl
test
mov
add
arpl
icebp
aam
pop
sbb
fnstsw
add
mov
jge
sbb
stos
pop
jnp
rorl
sub
dec
test
lret
stc
xchg
sub
stos
imull
jmp
pop
jl
sbb
inc
jge
push
cli
fbstp
sbb
ret
dec
lds
loopne
push
lds
jae
push
inc
mov
jb
loop
xorb
adc
dec
lret
mov
stos
mov
hlt
push
loope
jo
mov
sbb
add
pop
jbe
sub
add
movsb
stc
dec
test
push
xchg
mov
or
jecxz
gs
xchg
into
lea
push
fidivrs
cmc
jne
xor
cli
jmp
fsub
push
fwait
cmp
lods
sahf
popa
sub
dec
fnop
out
lods
rclb
push
mov
mov
call
mov
pusha
dec
cmp
vrsqrtss
subb
inc
js
mull
cmp
psrld
jno
fisttpl
push
pop
dec
mov
cmpl
push
out
cmc
in
dec
add
mov
in
jmp
or
lea
add
cld
mov
push
movsl
sbb
cmp
jp
cmp
dec
inc
movsl
pusha
jle
jns
sahf
icebp
popa
shlb
aam
add
shrl
or
stos
xor
fimuls
cmp
jecxz
pop
test
cmp
and
mov
in
ljmp
push
add
ret
xchg
repnz
jnp
mov
dec
cmpsl
push
push
cld
cmp
repz
jl
push
xchg
lahf
add
cli
cmp
fstpl
mov
sub
mov
push
pop
sub
push
adc
push
add
xor
mov
inc
cld
daa
jl
mov
mov
push
mov
mov
jo
out
jg
imul
cli
inc
in
je
repnz
jecxz
xorl
cmp
fnstsw
clc
fidivrl
shlb
cld
clc
xchg
sbb
cmp
lods
rorb
inc
mov
jle
out
or
jmp
or
int3
sti
sbb
mov
add
sbb
sub
push
cmpb
rcll
call
pop
sub
outsl
jo
ret
popf
call
cmp
adc
xor
sahf
pop
cltd
sbb
mov
int
cmp
mov
mov
dec
mov
movsb
fisubs
bound
repz
jb
inc
movsl
pop
push
pop
rclb
lcall
jmp
fiaddl
fs
mov
lea
faddp
dec
sbb
scas
add
subps
adcb
rorl
insl
xchg
aam
sub
std
enter
inc
sub
dec
aas
adc
pmaxub
xchg
sbb
inc
pop
jnp,pn
test
into
and
mov
jge
lret
dec
and
lods
jne
cmp
ret
add
mov
jno
sti
lds
in
sub
jns
jle
jae
stos
push
xchg
xchg
pop
stos
xchg
push
jl
cli
inc
xchg
aas
and
inc
shlb
clc
cmpb
mov
jo
dec
fdivs
aad
inc
or
cmpsl
adc
jle
rorl
in
shrb
dec
jns
nop
repnz
cmp
jbe
jne
fisttps
jg
xchg
test
shlb
movsb
jecxz
cmpb
sbb
imul
fstps
mov
inc
mov
dec
in
nop
mov
in
mov
add
insl
jno
cmp
adc
ret
push
inc
xchg
lds
jg
adc
nop
sub
sahf
sub
sahf
xlat
add
iret
ss
rolb
out
in
jnp
std
out
stos
push
pop
mov
mov
xchg
xor
pop
or
push
lret
cltd
mov
enter
imulb
out
push
insl
fistps
nop
mov
pop
mov
and
push
mov
and
int
and
jo
and
mov
and
insl
loope
insb
mov
insb
xor
xchg
jnp
pop
mov
sbb
cmpsb
inc
inc
xlat
addb
and
pop
inc
and
push
jl
jmp
sub
xchg
cmp
cmp
xor
lods
xchg
cmp
mov
mov
push
sarb
je
inc
call
xchg
mov
push
daa
aam
iret
jge
push
and
pusha
ffreep
jecxz
push
push
hlt
add
fstp
mov
mov
cmpsb
mov
push
shl
in
into
sub
xchg
lret
jo,pt
inc
sahf
rol
lds
pop
inc
cmpsb
ja
cmp
pop
fdivrl
mov
mov
jp
or
test
ficoms
sbb
popa
out
mov
sub
jp
add
mov
sbbl
add
test
cmp
sbb
test
jmp
ret
sub
inc
std
jns
out
mov
fisttpl
inc
or
lret
dec
dec
cmp
jp
mov
push
push
das
sbb
jns
out
and
ret
int
ss
bound
out
adc
push
jle
dec
dec
xchg
hlt
cs
shl
notl
mov
dec
test
adc
icebp
icebp
push
mov
rclb
fnsave
and
rclb
cmp
stos
and
subl
jl
movsl
jecxz
cwtl
push
clc
or
ljmp
xchg
adc
int
push
jmp
jno
test
test
sub
es
divl
incl
adc
push
xor
sub
mov
les
lock
mov
imul
incl
adc
jae
mov
loop
push
xchg
sub
dec
jle
xchg
inc
in
push
hlt
pop
loopne
ds
mov
les
inc
int
jne
push
push
jo
and
add
inc
out
xchg
movsl
sbb
sbb
ss
fwait
push
pop
jno
orb
int3
lds
jl
inc
enter
addr16
loopne
popf
xor
xchg
sbb
pop
js
pop
repnz
mov
jae
push
ret
push
inc
or
mov
mov
fdivrl
mov
sub
mov
popa
enter
clc
movsl
pop
into
push
lods
pop
xor
mov
repz
fsubs
xor
inc
mov
cmp
stc
mov
dec
add
aad
test
adc
inc
lret
inc
pop
jnp
aam
sbb
inc
cs
dec
dec
in
lds
adc
aas
cs
dec
mov
js
sub
xchg
inc
push
xor
jnp
test
outsl
ljmp
cmp
and
push
cld
hlt
lahf
iret
cmpsb
xor
xchg
or
add
adc
je
bound
fisubrs
mov
lret
mov
jge
lods
fwait
jo,pt
aad
push
movsb
ss
test
push
outsl
shll
cmp
dec
mov
les
nop
icebp
add
enter
xchg
push
add
es
xchg
enter
xor
mov
mov
cmpsl
out
fsts
fsubrs
inc
cld
in
pop
gs
push
cmp
add
cmp
inc
sub
hlt
cld
pop
jae
daa
pop
mov
outsl
or
pusha
or
bound
jmp
inc
scas
pop
add
loope
xchg
pop
cwtl
daa
xchg
out
mov
fadds
add
mov
shl
int
das
add
inc
imul
in
test
push
mov
pop
mov
loope
bound
inc
mov
imul
sub
aas
jne
add
inc
aaa
cmp
imul
in
hlt
mov
leave
in
inc
lcall
and
push
test
sub
add
bound
inc
mov
jnp
inc
pop
dec
mov
faddl
sbb
xchg
add
out
mov
int3
cmp
sbb
cmpsl
pop
push
add
add
push
mov
pop
fcomps
sub
mov
xor
call
mov
mov
xchg
call
stos
popa
repz
inc
mov
or
pop
test
ret
mov
mov
addl
sbb
sbb
xchg
popl
outsb
jno
in
repz
pop
xchg
cmp
movsb
inc
in
rolb
or
out
push
xor
fiaddl
loopne
out
push
jno
sbb
in
jae
divl
xchg
out
sbb
out
stos
fldlg2
inc
jle
mov
loope
fimull
mov
shlb
dec
rcl
adc
mov
loop
fsubrp
rcrb
jno
push
push
out
xchg
mov
lods
sbb
sahf
mov
loopne
pop
aaa
lock
sbb
cmovne
je
imul
push
sub
mov
js
dec
lods
addr16
inc
adc
mov
mov
pop
loop
inc
jae
pop
jbe
pop
rcl
stos
fs
mov
lds
cltd
les
cmp
push
jl
shll
inc
add
das
dec
inc
jno
adc
cmpsb
jns
es
cmp
hlt
jb
mov
sub
jne
insl
leave
and
movsl
movsl
pop
inc
mov
adc
mov
in
je
xor
xchg
mov
sub
insb
pop
popa
ljmp
pop
das
negl
mov
fisubrs
cmp
push
mov
pop
in
mov
push
in
cmp
sarb
xor
clc
dec
clc
pop
inc
cltd
inc
gs
xor
mov
sahf
std
xor
sub
pushw
shll
adc
mov
mov
loop
imulb
push
push
push
xchg
jne
push
push
pop
lods
rcrl
shrl
xchg
adc
sbb
dec
jo
add
scas
sar
dec
fsubs
pop
mov
sbb
andb
pop
sub
mov
mov
loopne
xor
movsl
jg
mov
add
cmp
adc
mov
sbb
jecxz
addr16
sbb
sub
sub
mov
lods
out
push
aaa
adcl
mov
cwtl
add
jp
or
les
sbb
mov
xor
mov
inc
jns
mov
out
fwait
lret
mov
push
pop
sbb
and
adc
jecxz
jle
push
add
mov
fs
nop
sbb
or
out
lods
mov
idiv
cmc
sbb
in
outsb
mov
sarl
mov
jns
xchg
or
push
jmp
and
inc
gs
shll
ja
out
sub
or
mov
inc
xchg
sub
rorl
mov
mov
lret
adc
mov
inc
cli
and
shlb
mov
push
shll
add
or
jmp
pop
cmpsb
stos
fs
loopne
and
movsb
enter
jg
add
sub
jg
stos
mov
fildl
pop
jb
or
jecxz
dec
adc
ror
popf
dec
ret
aad
sub
cmpsl
shll
push
inc
stos
inc
idivl
call
gs
jecxz
movsl
lret
pop
jmp
enterw
pop
xor
mov
fldl
ss
das
aad
dec
addr16
cmp
xchg
pusha
mov
xor
or
aam
dec
xor
rcrl
push
adc
fcoml
jmp
jmp
insb
and
push
idiv
pop
jb
or
rolb
push
inc
repz
dec
pop
or
pop
sbb
repz
jmp
lds
cmpsl
mov
inc
mov
mov
fs
mov
dec
jo
mov
hlt
fcoms
int
add
int
push
xchg
std
jmp
pop
dec
sbb
lcall
je
std
jecxz
das
jp
idivb
fistpl
sahf
pushf
pusha
jbe
xchg
mov
jmp
mov
rcrb
iret
je
push
in
inc
xor
inc
lea
inc
or
and
repz
jge
into
add
xchg
cwtl
clc
mov
mov
push
push
jae
sub
jmp
dec
call
aaa
mov
mov
cmpsb
lods
sub
push
stc
dec
loop
aam
adc
lcall
pop
jae
jne
std
scas
addr16
jg
sar
adc
nop
popf
mov
lahf
cmp
es
out
add
inc
inc
dec
mov
push
dec
shl
fwait
cmp
xlat
mov
iret
cwtl
int
mov
cltd
pop
dec
push
enter
fcoml
mov
push
or
xor
mov
divb
hlt
es
sbb
subl
call
and
adc
push
pop
rorl
and
cmp
mov
in
xchg
add
jo
push
sbb
setle
xchg
fwait
mov
and
sub
rclb
loope
popf
mov
pop
add
andb
jge
xor
arpl
mov
xchg
mov
imul
cmp
rolb
stc
pop
ror
sbbw
xchg
je
mov
hlt
sbb
fiaddl
push
xor
notb
push
test
fcomps
push
mov
adc
xor
sbb
imul
adc
icebp
dec
call
insl
rorb
and
or
lock
xchg
adc
mov
movsl
insl
aad
rcl
mov
sbb
sbb
adc
repz
add
jge
xor
jmp
ret
mov
jae
push
dec
mov
ljmp
adc
sbb
xchg
js
sbb
sahf
loopne
xchg
push
mov
inc
std
insl
ljmp
int
rclb
or
inc
cmc
push
jge
stc
xchg
sbb
mov
movsl
int3
xchg
cld
sub
adc
lcall
je
outsl
rol
xchg
popf
or
sti
inc
test
jns
or
fnstsw
xchg
pop
dec
push
mov
cmpsb
fidivl
outsb
gs
scas
lahf
add
mov
xor
xor
jo
pop
xchg
cmp
cli
scas
mov
adc
in
jg
cmp
inc
mov
pop
test
lahf
push
add
daa
cwtl
jmp
pop
add
add
loope
sbb
sub
mov
mov
sub
test
imul
adc
ljmp
shll
inc
cmpsb
xchg
xlat
sahf
dec
inc
popa
outsl
clc
sub
mov
mov
pusha
push
pop
add
push
aaa
dec
scas
mov
test
mov
sbb
out
mov
pop
cli
add
testl
lock
inc
es
cmp
and
das
xor
das
jmp
rcr
adc
test
push
jl
in
xor
cmpsl
pop
ljmp
fcmovbe
out
inc
lods
mov
sbb
mov
fsubp
jge
loopne
ja
out
xchg
mov
jb
int
mov
mov
dec
int3
pop
jo
loope
popf
data16
dec
cmp
fcompl
pop
out
mov
cmp
xchg
pop
rolb
ret
lods
lods
lods
push
lods
mov
rorl
inc
out
ljmp
inc
icebp
mov
dec
sbb
xor
sub
mov
jmp
jbe
int
adc
jg
xor
jno
sbb
xor
xchg
xchg
mov
jge,pt
dec
in
lea
ss
les
sub
cld
sarl
pop
stos
movsl
ds
daa
frstor
arpl
pop
lock
and
and
push
movsb
mov
mull
fidivl
aam
push
aad
xorb
repz
nop
inc
or
add
fwait
bound
dec
pop
mov
or
iret
insb
mov
loopne
sub
and
xor
push
dec
arpl
rorb
or
jae
scas
imul
dec
mov
cld
pop
push
into
scas
test
fisubs
fldcw
xchg
das
aas
push
push
add
mov
test
lods
inc
cli
dec
das
hlt
cmpsl
mov
mov
imul
lds
inc
cwtl
cmpsl
add
rcrb
push
push
adc
adc
xor
push
dec
lds
sbb
outsl
sbb
cmp
push
mov
push
xchg
jmp
ret
inc
jp
mov
mov
push
insl
inc
push
and
cwtl
mov
or
mov
out
cmpsl
push
cmp
imul
mov
or
fwait
test
mov
lahf
mov
aaa
jecxz
push
mov
in
jne
ja
add
fbld
insl
jecxz
je
push
je
mov
popa
jle
adc
jmp
int
test
mov
icebp
jle
and
popf
addr16
jmp
movsl
cmpsb
mov
daa
out
xor
mov
pusha
out
inc
push
jns
and
in
loop
xchg
adc
inc
cmp
push
scas
mov
mov
arpl
out
pop
jge
fadds
daa
xor
int3
sbb
fs
out
sub
ss
mov
inc
jp
inc
push
xor
add
and
lahf
cmpsb
fldcw
xchg
or
push
sbb
or
mov
inc
mov
add
frstor
inc
xor
ret
fwait
dec
int
test
push
mov
xor
int
in
fnstsw
inc
addl
add
inc
dec
cmp
jo
inc
ljmp
leave
adcb
lret
gs
push
je
pop
xchg
jne
pop
xchg
aas
scas
pop
or
stos
inc
inc
mov
aad
sub
adc
mov
or
or
push
mov
fwait
mov
cmp
jae
rol
andb
push
xchg
fnstenv
or
xchg
xor
cltd
or
scas
sub
inc
inc
loop
sub
xor
lahf
sahf
ja
sbb
nop
dec
mov
dec
inc
jge
mov
cmp
pop
mov
push
dec
push
mov
push
ss
out
dec
xchg
cmpsb
sbb
jo
outsl
sarb
lret
notl
scas
xchg
aas
mov
or
ret
scas
adc
sub
stos
cltd
push
int3
mov
push
xor
or
xchg
outsb
clc
js
xor
in
lods
dec
je
out
push
dec
fistpl
aaa
ljmp
imul
pop
jae
pop
cmp
pop
loop
cwtl
scas
push
dec
int
or
aad
mov
mov
jle
rcll
cmc
sub
insb
out
lret
test
push
lds
jecxz
vmptrst
cmp
psubusw
jb
clc
sbb
sbb
movsb
loop
add
push
shrl
sbb
inc
push
cli
sub
inc
jmp
pop
in
push
orb
or
cmp
xchg
insb
push
daa
clc
jnp
push
sti
adc
cmp
dec
push
push
int
leave
rcr
push
cmp
sbb
stos
pop
icebp
pop
lahf
lea
sub
pop
sub
lods
jns
push
sarb
outsl
cmpl
mov
dec
add
mov
jb
mov
fldcw
sahf
and
dec
or
xchg
pop
out
aad
pop
mov
das
loope
xchg
lcall
mov
cmc
sbb
jbe
xor
and
jo
add
test
jbe
push
xlat
push
add
outsl
and
stos
mov
clc
xchg
es
xchg
xchg
imul
push
leave
mov
add
and
mov
ljmp
inc
and
mov
rcll
negl
test
inc
mov
mov
cwtl
pop
std
push
push
loope
mov
xchg
or
and
jmp
aad
jge
mov
lods
mov
out
cwtl
testb
mov
add
inc
icebp
jle
xchg
jne
test
js
xchg
dec
fidivl
loop
jp
push
xor
in
int3
sub
bound
lods
adcb
jge
ret
sub
addb
or
lock
push
rcrl
cmovge
data16
scas
xor
sbb
scas
xlat
lret
xchg
mov
ja
xchg
rcrl
scas
mov
jl
and
or
dec
fisubrl
mov
inc
in
jecxz
inc
pop
inc
jle
cmc
push
leave
xorb
pop
gs
out
dec
cs
sub
xchg
insl
repnz
cmovp
push
outsl
and
rclb
gs
adc
push
pop
xor
ss
add
add
stos
mov
mov
xchg
in
lret
stos
imul
add
jne
cmpsb
sti
jmp
clc
addr16
push
sbb
fnsave
fadds
push
outsb
xchg
icebp
adc
in
xor
xchg
repnz
push
scas
mov
jns
mov
add
mov
stos
shrl
add
out
xchg
or
sub
lret
fcomps
and
rorb
cmc
xor
std
mov
cmpsl
dec
dec
cmp
cmp
and
push
js
dec
adc
iret
or
sbb
jl
sub
cmp
inc
xor
add
sub
inc
imul
aam
movsb
clc
or
add
pop
pusha
and
sub
fs
mov
mov
cmpsl
scas
lahf
mov
mov
shll
std
sub
ljmp
fnstsw
add
mov
cmp
xchg
loope,pt
dec
mov
xchg
je
cmp
test
sub
add
and
dec
adc
push
pop
aas
sbb
xlat
jge
jp
mov
inc
add
loopne
push
int
int3
adc
add
sbb
repnz
xlat
imul
xor
sarb
xchg
jle
lcall
addr16
cmp
bound
mov
fnstcw
pop
adc
dec
sbb
mov
xor
cmpsb
mov
mov
inc
mov
cmp
lods
mov
shrl
stos
jp
jmp
adc
mov
dec
adc
fmull
pop
jno
add
jno
outsb
xchg
sbb
mov
loope
mov
in
xor
jae
cmp
cltd
fs
sub
test
scas
out
add
pusha
sub
js
fs
push
inc
sub
test
xlat
stos
es
stos
lds
xor
mov
div
stos
inc
test
pop
mov
add
fstps
push
loopne
fdivrl
jmp
mov
cmp
mov
pop
xchg
loope
mov
scas
and
mov
daa
call
adcl
data16
jo
cmp
lret
or
cli
cmp
cmp
mov
adc
cmp
dec
sbbl
mov
pusha
shll
push
loop
mov
sub
ss
inc
subb
inc
sbb
mov
jno
sbb
loop
scas
lock
mov
jle
inc
cmpl
divb
inc
inc
mov
lds
pop
adc
jg
fs
jg
jns
push
pop
mov
xlat
jmp
in
aaa
mov
sub
insb
dec
sub
insl
push
rorb
loop
test
mov
cmp
scas
cmpsb
cwtl
shl
repnz
mov
inc
ljmp
xchg
sbb
fnstsw
loopne
sub
xor
mov
cmovp
cmc
in
frstor
adc
nop
fdivrl
pop
shll
daa
jo
sbb
cmp
sub
xchg
scas
pop
aam
clc
outsl
movsb
push
mov
inc
mov
into
pushf
jl
ss
pop
push
mov
dec
add
push
pusha
push
in
arpl
movsl
repnz
mov
inc
insb
neg
adc
pop
andl
mov
xor
jnp
dec
sbb
leave
inc
inc
pop
sub
mov
mov
loopne
pop
jnp
inc
sahf
aam
or
sar
and
pop
xchg
cltd
sbb
pop
mov
sbb
inc
lods
mov
jp
call
lret
repnz
sub
mov
mov
pop
push
pop
aas
dec
jmp
adc
and
mov
int
push
outsb
pop
dec
jl
sbb
out
push
lods
popf
aaa
mov
cmp
test
gs
frstor
ss
xchg
lds
mov
xorb
rcr
nop
lahf
dec
mov
mov
cltd
or
xor
popf
inc
lret
and
dec
sahf
inc
dec
into
add
jnp
insl
jo
push
pop
enter
pop
pop
inc
and
gs
xor
clc
lahf
sbb
mov
enter
adc
imul
gs
push
mov
outsl
xor
movsl
test
test
sub
cmpsl
je,pn
mov
cld
sbb
fcmovne
lcall
loope
xor
popl
sub
xchg
xlat
in
add
lods
push
sub
mov
inc
idivl
sbb
imul
icebp
int3
dec
sub
pop
sti
icebp
mov
push
push
cmpl
cs
mov
jnp
stos
ss
mov
clc
dec
outsl
divb
mov
or
int
dec
ds
out
and
es
imulb
je
sbb
lcall
and
sar
xchg
or
dec
mov
in
mov
pop
jl
test
jb
jnp
mov
inc
or
icebp
jl
mov
mov
sbb
cmp
out
sbb
mov
aam
push
mov
insl
gs
orl
cmp
cmpb
push
pusha
sub
lahf
sbb
cmp
pop
fst
out
pop
movsb
jp
and
stos
cs
add
and
mov
mov
xor
in
adc
imul
push
add
scas
clc
pop
js
fdivs
adc
test
xor
loopne
push
in
adc
cmc
mov
push
pop
mov
movsb
push
iret
imulb
push
mov
mov
js
loope
out
inc
and
adc
add
lds
jl
xchg
mov
loopne
mov
push
dec
cmp
rcpps
lods
mov
jp
cs
lds
cmp
sub
xchg
test
nop
lods
das
fs
add
rcrb
sub
or
fiaddl
mov
idivl
mov
jnp
cltd
dec
pop
sub
das
pop
hlt
push
adc
pusha
shlb
sbb
mov
repnz
xor
movsl
push
xor
pop
add
stc
add
mov
gs
jns
push
push
pusha
std
inc
sbb
jb
add
jmp
and
loop
sub
enter
push
mov
int3
add
sub
and
scas
jge
roll
leave
in
js
fldcw
lcall
mov
in
lods
test
inc
testb
sub
jecxz
push
xor
js
lds
xor
jl
leave
popa
dec
or
pushf
addb
lcall
outsb
mov
outsb
repz
cmpsb
inc
pop
jns
clc
jl
push
sar
icebp
cld
xorb
stos
pop
adc
sbb
lods
jns
ss
dec
into
scas
add
sub
fs
cmp
jbe
insl
neg
adc
dec
jae
inc
cmp
in
pop
into
xor
cmp
jmp
inc
es
or
movsl
ds
mov
cs
sbb
sbb
xor
dec
ret
mov
xor
or
lock
cmp
cmp
les
pop
mov
popa
js
cmp
jne
push
lea
decl
and
fcoms
pop
insl
int
stos
mov
cmp
ficoms
jg
add
mov
xor
iret
jge
nop
pop
push
fisttpll
mov
pop
pop
scas
xchg
mov
into
les
outsl
fsubrs
inc
adc
rcrb
jae
insb
mov
or
inc
cmp
outsl
mov
or
loop
mov
fcomps
and
outsb
mov
aam
lea
pop
mov
xor
xchg
daa
adc
out
mov
cmp
shl
pop
repz
negb
jo
dec
fs
pop
sub
mov
fistpl
dec
push
stos
outsl
xor
loopne
adc
cwtl
pop
clc
xor
loope
xor
mov
pushf
add
in
fimull
dec
imul
test
or
test
sbb
sbbl
and
push
test
div
mov
bound
jnp
xor
xchg
pop
or
dec
mov
push
scas
loopne
sahf
leave
out
bound
mov
cmpsb
pop
mov
jmp
or
in
push
das
sub
rorb
insb
repnz
rcrl
and
dec
jb
repnz
lret
push
faddl
pop
pop
jmp
dec
fwait
unpckhps
inc
jp
test
mov
inc
cmpsl
aas
sub
xchg
add
scas
sub
incb
outsl
pop
jecxz
fs
adc
sbb
into
cld
bound
hlt
pop
dec
ljmp
fcos
aam
mov
mov
mov
and
cmpl
icebp
leave
jae
adc
nop
mov
movsb
and
gs
mov
xor
rcrb
daa
mov
shrd
xor
or
leave
divl
addl
shrb
xchg
neg
cwtl
mull
pop
mov
sbb
mov
xchg
cmc
cmpsb
dec
addr16
push
jae
sbb
jmp
js
and
dec
xor
lcall
sbb
mov
cs
jle
rcr
popf
cwtl
push
mov
mov
add
je
prefetcht1
pop
pop
and
jl
pop
xor
into
cmpsl
lret
in
cmpsb
and
jo
sub
mov
lods
rorl
shrl
sbb
bound
sbb
ret
inc
sbbb
lock
test
lods
push
add
lret
movsl
das
rcrl
mov
incl
sbb
int3
adc
push
movsl
push
je
aam
test
push
pop
or
mov
jae
fucomp
dec
js
fs
ret
andb
movsl
jmp
dec
cmp
cmpsb
mov
push
int3
pop
mov
inc
jo
ds
aaa
cmp
les
mov
xor
pop
cmpsb
mov
inc
and
aas
pop
sbb
imul
sbb
loop
imul
lds
outsb
sbb
or
jns
push
fidivs
loope
out
jmp
or
adc
imul
out
jmp
setp
shrl
pop
in
loop
adcb
jo
imul
scas
mov
sbb
nop
jbe
add
mov
movsb
cmp
pop
add
push
jecxz
mov
cmp
xor
dec
cmpsb
andb
jge
stc
dec
in
or
outsl
popa
dec
outsb
out
add
roll
pop
lcall
and
mov
lock
inc
pushf
adc
jae
in
pop
sbb
cltd
push
add
into
cmp
insb
orb
adc
sub
xchg
pop
sarb
push
outsl
sub
add
dec
pop
push
mov
es
and
add
xchg
stos
cmovg
push
push
jg
in
xlat
xchg
xor
movl
inc
push
jno
orl
jns
ficompl
mov
adc
and
in
xchg
jne
jp
jbe
cmp
cmp
movsl
gs
jb
sub
add
xchg
das
xor
xor
sub
std
test
loope
or
pop
push
lods
or
inc
into
ja
xchg
test
cmp
jns
cmp
iret
gs
jnp
ljmp
cld
test
popa
jns
lret
clc
rorb
sbb
lods
ds
dec
xor
jbe
lods
fsubs
shll
adc
in
sbb
adc
mov
pusha
js
icebp
mov
fists
pop
andl
dec
in
frstor
jl
xchg
mov
fistpl
mov
cwtl
xchg
pop
sbb
xor
scas
jbe
test
call
mov
repz
insb
data16
mov
mov
cli
hlt
test
mov
sub
imul
mov
push
add
mov
mov
sahf
mov
inc
dec
mov
shr
outsl
jecxz
and
mov
inc
cmp
fwait
or
gs
sbb
sbb
push
sub
loope
adc
shll
mov
andb
xchg
dec
mov
mov
xlat
and
daa
lret
mov
imul
fdivp
jbe
test
cmp
scas
adc
jge
scas
fldl
data16
arpl
jg
sar
mov
inc
stc
fmull
xchg
hlt
pop
sub
inc
pop
push
negl
subl
xor
cld
xchg
mov
stos
imull
xor
xchg
mov
sbb
rcrl
add
dec
mov
pop
fldl
loopne
leave
adc
push
cmp
jns
scas
mov
add
test
andl
out
mov
fistpl
js
inc
clc
mov
out
cs
adc
clc
and
mov
dec
addl
cmp
dec
or
pop
xor
or
repz
push
scas
fildll
rep
lret
pop
mov
shrl
push
lret
sbb
stos
and
shl
hlt
insb
or
pushf
push
roll
mov
or
jo
and
testb
pop
out
stc
or
push
xor
fucom
into
or
addl
das
cltd
adc
mov
sahf
sbb
scas
mov
or
repnz
jl
ficoml
jno
fwait
mov
jecxz
movsl
adc
test
ja
bound
xor
mov
xorl
add
mov
lret
adc
fld
fnsave
mov
cmpl
cmp
stc
jp
jne
pop
add
inc
movb
mov
hlt
and
in
ret
sbb
iret
lods
sub
mov
and
inc
mov
inc
loope
mov
out
or
and
ja
jne
adc
adc
sub
aas
mov
ds
add
jmp
imull
jnp
sub
or
or
imul
popf
and
pusha
scas
loop
sub
insl
fwait
inc
movsb
out
pop
mov
and
movsb
sub
pop
inc
ljmp
push
movsl
sbb
rclb
pushf
popa
arpl
mov
fimull
jnp
mov
loopne
sbb
in
fsubr
push
call
sbb
dec
cmp
dec
xor
lods
add
data16
sbb
insl
cld
xchg
inc
mov
insb
test
pop
test
add
fcomi
dec
push
fs
or
out
out
cmp
jo
cmp
mov
neg
scas
push
xchg
decb
add
pop
mov
xor
lods
fs
xor
inc
sti
popa
xlat
mov
xor
mov
push
scas
adc
js
pop
mov
ja
lcall
mov
xchg
mov
ds
inc
add
dec
stos
lods
idivb
push
xchg
or
scas
loopne
add
pusha
mov
jl
popa
sub
shll
and
lods
mov
inc
or
js
imull
jmp
popf
pop
xor
xchg
fwait
lods
js
stc
jmp
xor
xchg
jl
cmp
fadd
cmp
xor
push
and
push
xchg
pop
lret
and
and
pop
inc
in
sbb
and
adc
mov
arpl
cmpsl
sbb
sbb
jg
sbb
in
lret
sahf
xchg
adc
outsl
fmulp
and
cmp
mov
sub
mov
cmpsl
sub
and
push
add
pop
pop
jmp
fnsave
lods
jg
cmpl
ror
mov
mov
push
xchg
stos
call
cmp
fsts
mov
repnz
cli
push
fmull
jne
dec
into
mulb
hlt
add
pop
pop
mov
js
rol
sbb
push
jl
in
js
lea
into
mov
jle
ficoms
lea
idivl
shll
jecxz
add
jmp
mov
and
push
sbb
outsl
sbb
arpl
xchg
cmp
pop
inc
rolb
add
sbb
xlat
out
leave
mov
loop
pop
sbb
cmc
pop
rolb
outsl
icebp
rolb
leave
add
aas
jle
nop
sub
inc
aad
sub
aam
sti
gs
mov
inc
mov
mov
mov
pop
test
lock
jl
mull
add
lods
xchg
jae
push
add
jns
ret
sbb
nop
sub
scas
data16
mov
xlat
jne
mov
scas
mov
scas
lds
mov
xor
lret
xchg
mov
dec
cmpsl
mov
mov
and
clc
push
inc
lahf
movl
rorl
sub
and
imul
pop
cli
xchg
lea
push
popl
nop
popa
pusha
cld
rclb
daa
sbb
cwtl
stos
inc
push
xor
sub
mov
sub
sbb
movsb
mov
jl
mov
adc
loopne
jg
mov
pop
pop
xor
stos
jno
js
mov
inc
stos
sbbb
loop
xchg
iret
xor
adc
psubsw
xchg
mov
rcrb
jmp
or
insl
popa
mov
gs
aas
add
pop
pop
dec
cmpsb
icebp
outsl
adc
inc
inc
sar
mov
aaa
shlb
sbb
adc
xor
lea
bound
fistl
cli
sbb
popf
scas
pop
pushf
dec
pop
call
cltd
adc
in
cs
cmp
rcl
jnp
out
sbb
int
testb
movsb
fwait
iret
push
filds
dec
mov
sti
mov
pop
push
xorb
sbb
dec
or
and
aaa
cld
insl
test
cmp
aam
jbe
push
addr16
jne
cwtl
dec
push
xchg
mov
mov
inc
repz
dec
push
sbb
inc
dec
pop
mov
jo
push
mov
addr16
lahf
stos
dec
hlt
ds
sbb
stos
dec
mov
and
in
sub
sahf
aas
sbbl
lahf
jb
cmc
es
push
mov
fists
mov
push
arpl
xchg
jl
pop
sti
cmp
fistl
outsl
jb
dec
movsb
xlat
rcl
fdivr
mov
xchg
cli
out
xchg
lods
and
add
pop
mov
xor
adc
cli
in
add
cltd
mov
sbb
lea
or
sub
jbe
add
and
push
mov
push
adc
cli
cld
js
std
lahf
rolb
push
mov
fadds
stos
sahf
jbe
ss
sarl
sub
into
out
int3
mov
pusha
dec
or
and
stos
push
jle
repz
shr
dec
fnstsw
pop
fisubrs
adc
lret
or
sub
jnp
mov
test
arpl
test
mov
dec
add
dec
sub
mov
or
inc
inc
pop
pop
or
loope
jo
int
dec
xlat
repnz
int
stos
cmp
in
inc
daa
mov
mov
insb
xchg
jl
push
xor
mov
rorl
sub
fcomps
out
es
sbb
xor
sub
adc
jns
cmp
mov
push
sahf
inc
cld
push
or
jle
les
stc
push
vmulsd
xor
ja
or
push
or
mov
test
into
int
dec
stos
bound
rcl
adc
sbb
mov
scas
pusha
xchg
jmp
pop
jmp
pop
and
int3
mov
fsub
into
cltd
cmp
cli
shlb
cmp
sbb
mov
movsl
or
jle
test
fdivrp
xor
aam
push
mov
stc
adc
dec
punpcklbw
lahf
cld
shlb
ds
cwtl
insl
xor
pop
jl
cmp
nop
dec
insl
ja
mov
cmp
shrl
pop
loopne
mov
loopne
dec
in
outsb
jb
push
jne
push
jb
lods
adc
cld
jne
ds
xchg
push
jmp
adc
test
jge
fists
das
aad
sbb
jmp
je
int
push
and
inc
lods
cmp
lock
in
lds
jecxz
push
aad
sub
outsl
stos
int3
ljmp
andb
icebp
es
dec
jmp
pop
or
loop
xchg
into
mov
sbb
dec
out
in
stos
lods
idivb
sbb
ds
add
stos
mov
push
cmp
call
pop
mov
jmp
lcall
inc
cmp
pop
in
icebp
inc
mov
lcall
pop
jp
xlat
jb
push
add
lods
das
xor
jmp
test
fwait
cs
les
mov
mov
dec
cmp
inc
xorb
xchg
cmpsb
add
adc
fisttpll
add
test
xchg
clc
fwait
outsl
add
sub
in
mov
push
mov
and
sub
cmp
dec
es
pop
aam
in
mov
mov
dec
mov
clc
push
xor
xchg
mov
stos
rcrb
lahf
jb
dec
cmp
ljmp
push
or
add
mov
xlat
xchg
dec
test
and
aas
jle
or
mov
add
add
ljmp
cmpsl
aas
jo
lahf
cmp
loop
clc
inc
inc
stos
sahf
push
push
test
shr
and
mov
mov
in
je
test
xor
and
sub
push
ss
push
test
sbb
in
mov
jnp
inc
or
sbb
cmpsb
sub
pop
shrb
sub
cmpsb
xchg
ljmp
sbb
inc
cli
in
cmp
fildll
xchg
push
cld
mov
pop
pushf
adc
and
popa
in
sub
sbb
xchg
fistpll
in
fcmovnb
mov
fcom
fstps
popf
push
xchg
movsl
mov
mov
mov
push
and
mov
jg
pop
loop
lahf
insl
pop
jnp
shl
out
sar
mov
inc
fstl
or
and
loop
jge
mov
cmp
xchg
and
mov
mov
or
push
stos
xor
pop
dec
js
push
mov
or
cmp
xchg
or
mov
frstor
dec
jg
dec
pop
add
stos
mov
ds
movl
mov
js
sahf
xor
rcl
loope
stos
push
pop
cmpb
adc
ret
dec
inc
mov
or
movsl
inc
adcb
sub
xchg
mov
inc
mov
popa
decl
jb
sbb
dec
sbbb
sub
dec
dec
mov
sahf
or
movsl
repz
pushf
fstps
mov
inc
or
je
roll
rcrl
dec
in
or
pushf
lds
cmp
fnstenv
shl
shlb
pop
stos
shll
xor
call
or
pop
fbld
addb
faddl
jns
pop
push
decb
scas
gs
xchg
cmp
negb
xchg
cmc
ja
andb
aas
fsubl
je
cmc
cld
push
imul
sub
sti
and
outsb
sub
lock
sbb
mov
pop
xchg
pop
ret
in
cmc
aad
outsl
xor
jecxz
lds
in
arpl
cwtl
adc
aad
pushl
andb
sahf
mov
jns
das
roll
xlat
loopne
imul
xor
ljmp
repnz
mov
ljmp
dec
jl
push
cmp
jnp
pop
jbe
adc
int
push
pop
out
and
rcrl
mov
or
hlt
mov
xchg
xor
insl
call
jmp
adc
add
cmc
call
sub
cmp
xchg
ljmp
mov
andl
outsb
rolb
fnstsw
fisttpl
mov
xchg
pop
push
icebp
inc
or
ficoms
rorl
enter
insb
dec
mov
pop
push
and
cli
test
pop
notb
popa
jmp
lahf
je
cmp
pop
sub
fwait
inc
movsb
inc
xor
jnp
aas
cwtl
adc
push
xor
lods
xor
lods
faddl
and
mov
jne
mov
or
cld
sti
mov
jns
xlat
pop
mov
movsb
inc
in
cli
inc
mov
lcall
xor
icebp
loope
sbb
aam
loopne
inc
dec
xchg
icebp
mov
xchg
in
sub
pop
and
roll
add
bound
jo
hlt
cmc
mov
fsubp
pop
xchg
or
int3
inc
xor
or
push
mov
cs
cld
ror
loopne
nop
sub
fidivrs
test
outsl
adc
cltd
dec
pushf
sbb
imul
cmp
inc
ljmp
enter
aad
ds
sbb
or
sbb
mov
insb
shl
push
in
jp
fs
in
mulb
and
je
add
mov
scas
cld
jge
loop
pop
inc
jne
xchg
decl
xchg
add
dec
adc
int
enter
clc
jnp
cmp
add
sbb
mov
adc
add
rorb
fcmovnb
push
jp
mov
mov
shrb
mov
cmp
sbb
pop
scas
nop
dec
data16
rorl
cltd
push
repnz
pop
xor
aam
out
mov
fldcw
fisubrl
sbb
pop
outsl
arpl
les
sar
jl
pop
add
pop
cmp
xor
cmpl
mov
cmp
lds
mov
js
add
mov
cmp
cmpsb
aas
in
xor
xchg
insl
je
xor
repz
fmull
xorl
push
sbb
mov
cs
lret
adcb
cmp
push
and
or
mov
adc
pusha
addl
pop
add
fadd
out
sbb
iret
js
int
mov
or
inc
je
rcrb
insb
lea
xor
cmp
or
mov
sub
movsb
cltd
add
test
or
push
test
dec
cmpsl
mov
movsl
ret
cmc
push
fcomps
adc
fimuls
mov
jecxz
pop
dec
sbb
push
cs
dec
leave
xchg
lods
push
aaa
sbb
add
popa
scas
bound
pushf
lret
outsb
mov
mov
popf
inc
sahf
leave
repz
mov
mov
lock
sbb
imul
iret
xchg
cltd
cmp
pop
add
std
adc
and
jae
adc
and
jmp
mov
aaa
sbb
test
xchg
mov
test
inc
and
mov
in
aad
mov
jmp
ljmp
pop
mov
sub
insb
xor
push
push
push
call
xor
in
fdivs
notl
xlat
push
dec
pop
insl
jmp
jcxz
aad
mov
loop
hlt
jg
dec
roll
addb
mov
inc
stc
scas
incl
inc
cmp
cli
lods
ja
outsl
push
and
scas
loope
aad
pop
lods
and
into
insl
ja
outsb
add
sti
fwait
jg
in
mov
push
adc
fcmovu
pop
scas
push
xor
shrd
loope
test
mov
xchg
push
add
in
push
add
out
fs
jecxz
jg
out
mov
and
insb
sbb
mov
fistl
fnsave
out
cmp
mov
push
mov
jbe
stos
add
jg
cmp
icebp
sahf
std
and
into
jb
iret
stc
mov
dec
pop
rorl
or
subb
sahf
jnp
mov
mov
push
out
xchg
dec
aad
xchg
int3
jmp
aas
and
add
or
stos
jne
inc
or
in
jb
rcr
xor
fisttpl
adc
pop
aaa
pop
cld
mov
xchg
lcall
je
xor
xlat
push
call
pushf
pop
jge
cs
sub
test
push
inc
movb
adc
add
enter
push
filds
fisttpl
movsl
pop
mov
out
dec
mull
mov
cmp
cltd
insb
push
cli
sbb
cmp
sti
and
inc
dec
inc
movsb
test
pop
mov
push
mov
mov
cli
lahf
xchg
mov
into
add
and
int3
jl
and
mov
and
lea
rcrb
sbb
insl
je
cld
int
lock
jns
mov
test
call
push
or
sahf
popf
into
fstp
icebp
push
adc
mov
fdivs
inc
hlt
mov
push
jbe
ljmp
ljmp
push
jns
fnstcw
ret
mov
jns
inc
inc
adc
sub
jl
ficoml
lods
and
mov
out
pusha
ficoml
sub
jmp
cltd
mov
xor
cmp
leave
in
shlb
pop
faddl
insl
lds
xchg
sub
mov
cmp
sbb
arpl
mov
jo
leave
push
shll
and
mov
clc
add
jle
loope
ljmp
sbb
ffreep
sarb
in
add
lret
and
xchg
das
subl
stos
push
clc
inc
adc
inc
roll
pop
popa
jl
add
pusha
adcb
adc
xor
in
popf
sbb
aam
cmp
cmp
filds
sbb
dec
outsl
adc
sub
xor
sbb
push
jae
sub
or
sub
and
sub
movsl
dec
dec
pusha
dec
xor
out
jbe
push
cmp
lret
push
mov
mov
roll
jo
mov
pop
ret
dec
mov
mov
push
jmp
into
popa
out
outsb
aas
loopne
cmpsl
xchg
fs
inc
subl
mov
cld
xchg
or
and
leave
not
push
xlat
push
push
cltd
push
cmp
rcr
mov
mov
lret
xchg
ret
xor
adc
pop
jno
mov
lds
jo
lods
cs
pop
pop
dec
inc
mov
mov
mov
data16
negb
inc
ret
lahf
mov
jb
jb
push
mov
cmp
xor
mov
sub
push
movl
or
insl
stos
and
xchg
ret
cltd
jnp
sbb
jo
xchg
sbb
std
and
and
pop
adc
push
dec
dec
xchg
popf
xchg
jl
and
mov
das
adc
adc
ror
or
push
jae
xor
in
enter
lds
mov
inc
dec
adc
jns
cmc
cmp
sbb
mov
movsb
pop
icebp
adc
arpl
mov
icebp
outsl
push
and
mov
jo
testb
out
xor
pop
das
and
mov
gs
or
setno
mov
add
add
mov
sub
loop
sub
jl
jae
test
test
clc
ret
adc
mov
movsl
push
mov
pop
ljmp
repz
jae
push
lcall
dec
stos
in
or
cmp
mov
pop
add
stc
sbbl
cmp
loop
popf
sbb
pop
jno
std
xchg
leave
movsl
in
inc
mov
push
rorb
es
hlt
add
sbb
sub
insb
pop
mov
cmpsb
outsl
mov
dec
mov
mov
xlat
jmp
test
xchg
cwtl
fbstp
int3
and
jge
mov
data16
pushf
iret
fdivrs
and
push
sti
dec
dec
mov
lods
nop
insb
mov
movsl
pop
mov
fdiv
xchg
dec
sbb
pop
inc
hlt
mull
mov
jmp
mov
popa
xchg
notl
mov
jnp
xchg
aad
imul
ds
inc
scas
adc
cmovbe
in
jne
addr16
jmp
adc
jne
lea
cmpsb
repz
mov
lods
ja
xchg
rorl
nop
rclb
cmpl
mov
push
out
aaa
or
pop
imull
mov
rolb
rolb
int3
lret
bound
sarb
arpl
fildl
dec
mov
xchg
pop
pop
cld
imul
dec
dec
xorl
mov
xchg
incb
lods
adc
mov
mov
es
nop
leave
xor
in
cmpsl
stos
sahf
fists
sbb
push
sub
adc
movsl
adc
pop
jno
mov
pop
iret
dec
jnp,pt
xchg
inc
out
jnp
fldl
bound
int
cmpsl
pop
cld
icebp
fs
int
sbb
jle
cwtl
sub
mov
jl
cwtl
aas
stos
int
xchg
and
addb
mov
mov
push
push
push
mov
iret
lcall
jl
xchg
mov
ja
in
push
leave
loop
push
add
lock
mov
ljmp
dec
add
jle
jne
pcmpeqd
adc
jo
xor
call
insl
leave
out
leave
dec
jg
lahf
idivb
cmp
js
inc
inc
daa
mov
int3
out
mov
js
lds
mov
pop
je
pop
push
shl
or
xor
cmp
sub
stos
aas
mov
xchg
cmp
shl
and
xchg
pushf
sbb
adc
sahf
pop
push
jmp
pusha
std
mov
into
lret
mov
sub
frstor
sub
negl
inc
pop
push
or
xchg
mov
push
jecxz
jo
xor
mov
ljmp
and
jb
loope
jg
mov
js
sbb
inc
mull
test
add
mov
cli
xor
movsb
mov
inc
divl
jl
sbb
mov
cmpsl
and
out
loop
repnz
aad
outsb
sbb
and
sbb
cmp
es
clc
cmpsb
stos
sbb
aam
add
jb
lods
popa
cmc
and
ljmp
and
jg
call
or
cmp
lret
popf
ljmp
and
jne
andb
ret
sbb
mov
popa
jnp
sahf
in
push
mov
stc
enter
movsb
pop
mov
add
dec
push
add
mov
test
test
push
ja
mov
data16
rorb
fiaddl
and
push
jo
pop
out
test
mov
imul
adc
jbe
mov
data16
das
imul
push
mov
push
fnstenv
dec
enter
push
shl
sbb
adc
xchg
jo
imul
xchg
fiaddl
push
pop
adc
cmp
stos
nop
nop
cmp
jle
bound
enter
repz
movsl
test
icebp
pop
jl
pop
mov
push
jo
mov
dec
mov
call
insl
test
ret
add
adc
cmc
enter
add
cmp
adc
sub
and
ds
out
or
test
xchg
test
iret
or
push
mov
ret
push
pop
movnti
jp
pop
mov
adc
movsb
loope
pop
fcoml
test
xlat
or
mov
push
cltd
addb
pop
xor
cmp
dec
dec
dec
xchg
inc
xor
sub
push
aad
push
mov
hlt
jns
js
scas
jl
testl
repz
xchg
stos
xlat
lock
loop
lds
std
popf
sbb
arpl
sub
loopne
addr16
and
push
in
adc
ja
add
pushf
into
push
xchg
mov
inc
push
xor
adc
cmp
mov
cmp
in
xchg
clc
jge
mov
inc
test
stos
sti
arpl
addr16
repz
insb
push
sub
push
inc
outsb
into
pusha
mov
gs
adc
outsb
jnp
lret
inc
or
mov
out
xchg
mov
loop
test
gs
fwait
and
sbbb
jno
out
push
inc
add
sbb
bound
gs
mov
mov
adc
daa
or
mov
cmc
mov
mov
es
add
fldl
pusha
dec
jns
add
jb
stos
xchg
ljmp
jmp
push
pop
pop
or
or
mov
cmp
divl
lock
and
notl
ret
xor
mov
mov
sub
fwait
lock
jp
or
leave
pushf
cld
mov
hlt
cli
xor
mov
xchg
jl
and
xchg
adc
mov
int
jle
sbb
mov
dec
aam
aad
or
or
fwait
jo
rcl
ret
pushf
mov
fistpll
or
pop
mov
xchg
imul
push
test
inc
push
test
mov
mov
adc
or
cs
pop
sbb
jb
or
inc
xchg
lds
pop
inc
push
jne
sarl
mov
lea
aas
sub
sar
cli
call
xor
xor
jo
push
aam
iret
xor
shrb
jle
outsb
aad
rorb
fsubl
enter
test
addl
mov
and
adc
and
adcl
scas
add
ret
xchg
ret
pushf
mov
dec
lret
popa
dec
ret
mov
movsl
in
idiv
mov
push
stos
xchg
inc
dec
and
test
leave
inc
out
out
out
loopne
mov
sub
mov
das
ljmp
xchg
pop
sbb
mov
mov
dec
ja
sbb
sub
push
and
jle
or
sbb
dec
movsb
imul
push
add
out
or
in
movsl
jne
xchg
adc
subb
push
clc
stos
clc
jno
lahf
pop
mov
test
push
jg
das
sub
mov
inc
and
pop
ss
push
ljmp
jp
jecxz
cmovs
scas
pop
orb
daa
in
fiadds
pop
push
inc
aad
xor
out
fidivrs
fsubrs
cmpsb
push
daa
imul
adc
iret
xchg
cli
xchg
sub
stos
dec
daa
divb
out
add
fnstsw
xchg
dec
movsb
clc
push
ja
in
sbb
adc
mov
inc
push
dec
inc
addr16
jp
adc
or
xchg
xlat
ret
sub
jle
iret
jnp
stos
insl
dec
xor
xor
sub
std
ljmp
lods
popa
mov
sub
fstl
in
xchg
push
test
xor
jb
ss
xchg
movsl
dec
mov
enter
or
jg
fiadds
mov
stos
das
jmp
mov
xchg
xchg
push
xchg
repnz
jp
jb
cmp
sub
mulb
inc
mov
lea
addr16
xchg
fwait
add
mov
std
push
push
inc
mov
xchg
push
sub
scas
loope
aaa
inc
das
xor
jmp
add
and
scas
jmp
xchg
pop
pop
dec
adc
ret
mov
frstor
push
ficoml
hlt
in
push
lret
repz
add
add
mov
inc
lds
xchg
jb
mov
push
cwtl
add
pusha
and
movsl
add
pop
xchg
shr
ret
sarb
decl
lahf
push
adc
mov
aad
loop
loope
and
sub
int3
xor
adc
movb
test
fmul
aad
inc
mov
pop
stos
push
inc
add
sub
daa
hlt
stc
rorb
lcall
cli
div
inc
push
cwtl
jns
jno
xchg
sbb
out
mov
es
jbe
pop
cmp
mov
mov
mov
shlb
sti
div
sbb
cltd
push
outsb
mov
rcrb
jmp
out
out
jnp
rclb
in
xchg
sbb
mov
push
mov
jecxz
push
cmp
loopne
ret
jb
call
xchg
and
cmp
xchg
adc
movl
jae
pop
or
jmp
push
ds
jne
sub
add
cmp
mov
mov
or
sub
xor
hlt
cmpsb
std
mov
enter
sub
mov
fnstenv
sbb
loope
xchg
mov
xor
ret
fst
and
scas
test
cmp
scas
pop
in
jb
sbb
les
in
xchg
sbb
mov
sbb
sub
arpl
xor
frstor
fisubrl
mov
mov
inc
jnp
pusha
xchg
mov
xchg
imul
sbb
lcall
or
and
sub
pushf
or
mov
rol
pop
loop
jmp
lods
xor
lock
add
mov
cli
das
dec
jmp
cs
call
push
mov
jno
fs
mov
sub
mov
out
sbb
or
int3
cmp
inc
ret
pop
fidivs
xor
inc
xchg
pop
scas
xor
push
jmp
push
call
rcrb
xchg
stos
push
jmp
sbb
mov
or
test
sub
enter
cld
jne
dec
sub
pop
adc
cltd
scas
adc
cld
inc
xchg
ficomps
lret
or
aad
popa
inc
mov
out
add
add
int
notl
loop
xorb
test
xor
jbe
mov
mov
loopne
pop
jmp
and
sub
outsl
scas
ficoms
xchg
testb
stc
popl
push
dec
jnp
popa
jg
repnz
pop
divb
jmp
int3
fiaddl
jl
mov
repnz
ja
inc
lcall
mov
cmp
xor
mov
and
and
stos
arpl
mov
mov
and
push
lret
xchg
add
mov
movsb
ret
cld
mov
xchg
scas
pop
aas
stos
sub
adc
pop
pusha
pop
jle
fmuls
inc
xchg
xor
cmp
mov
negb
push
jle
add
cmp
or
mov
imul
imul
jp
in
idivl
frstor
or
enter
add
je
in
mov
push
rorl
aam
xchg
jne
div
in
fwait
test
sbb
sahf
mov
cltd
out
push
daa
lret
xchg
sub
jne
ss
push
sub
add
mov
xor
inc
and
push
icebp
int
push
inc
test
sbb
test
inc
push
mov
lahf
pop
pop
push
les
movsl
lahf
nop
pop
je
xchg
cmp
shll
or
jns
mov
xchg
xor
loop
xchg
roll
cmp
push
lods
lret
nop
scas
sub
mov
movsl
lret
mov
mov
mov
sub
mov
sub
in
loop
icebp
cmp
iret
lock
mov
adc
lret
adc
fwait
cmpsl
pop
or
add
imul
inc
clc
jbe
lret
cmp
cli
fwait
push
inc
cmc
cmp
enter
mov
mov
fisubl
div
mov
mov
fnsave
push
xchg
repz
fs
cltd
push
int3
jbe
lods
mov
mov
lods
les
pop
fisubl
sbb
insl
adc
mov
aaa
out
pop
jl
sbbl
out
dec
std
xlat
fisubrl
stos
xchg
je
mov
mov
and
push
pop
jge
nop
add
xor
fsubrl
jge
or
insl
daa
pop
cwtl
or
daa
push
or
je
mov
sbbl
cmp
stc
sarb
mov
notb
roll
sbb
sahf
je
cmpsl
push
mov
dec
add
xchg
dec
mov
mov
jg
push
je
dec
push
add
clc
pop
sub
cmp
outsl
mov
xor
xchg
std
jl
popa
dec
inc
and
sarb
fs
mov
pop
negl
ljmp
scas
fnstsw
cmp
mov
mov
dec
xchg
or
mov
cli
mov
sub
es
or
les
pusha
push
pop
push
or
sahf
xor
cltd
xlat
push
pop
lahf
fnsave
add
iret
movsl
in
sahf
mov
jl
xor
add
add
xor
adc
addr16
fdivrs
sub
sbb
inc
cltd
stc
inc
movsb
pusha
jae
push
jl
jg
xor
cmp
lods
jb
sub
push
sahf
stc
adc
aam
loopne
lretw
subb
jecxz
fs
iret
movsb
adc
mov
jo
lret
and
push
lret
xchg
xlat
xchg
mov
lret
clc
std
pop
cmp
pop
mov
xchg
out
ljmp
mov
out
lock
cmp
add
out
mov
negl
loope
sbb
addr16
xchg
imul
jle
mov
in
adc
push
out
jl
shlb
je
push
stc
inc
dec
push
test
dec
adcb
adc
inc
pop
flds
push
orl
rol
xchg
lcall
cwtl
dec
jnp
mov
xor
push
jo
faddp
int3
bound
jl
enter
sarl
dec
jl
fwait
loop
sbb
mov
adc
sub
cltd
movsl
lock
jno
cmp
cmp
stos
mov
negl
in
xchg
out
add
test
pop
xor
les
mov
inc
mov
pop
cmpsb
push
lock
cmp
cs
dec
js
lret
and
sub
push
mov
xchg
test
pop
lahf
mov
jae
cli
mov
daa
xor
es
repz
arpl
pop
hlt
adc
dec
incl
dec
insb
jae
push
aam
cmpsb
push
mov
das
or
rcrb
mov
pop
xorb
addb
imul
iret
mov
fmuls
or
and
test
movsl
inc
add
in
jnp
inc
in
idiv
xchg
cmp
mov
adc
sbb
or
add
sahf
cli
imul
push
das
jbe
jbe
inc
rorl
mov
and
xchg
imul
adc
jge
adc
and
lods
fs
sbb
fidivl
addl
cmp
in
andl
mov
jecxz
pusha
mov
out
mov
mov
mov
out
cwtl
inc
clc
mov
push
add
sahf
mov
jl
adc
imul
insb
sbb
sbb
xchg
cmp
and
es
out
push
cmpsl
loop
ret
lahf
aas
xchg
mov
test
sti
xchg
pushf
jecxz
pop
mov
imul
jb
xlat
sub
dec
out
lahf
push
into
popf
scas
dec
cld
push
xchg
mov
cld
je
into
mov
cmpsb
ret
inc
stos
mov
and
mov
fmull
pop
xor
jo
mov
dec
or
dec
dec
sti
and
cmpsb
stos
idiv
sti
adc
jl
cmp
fsubrl
ljmp
sbb
add
sub
xchg
add
fcoms
add
push
jne
addl
lahf
add
lcall
mov
stos
fistpll
repz
mov
lret
aad
jno
fisttps
xchg
dec
cmp
dec
rep
jo
sub
xor
daa
jp
sar
and
cmpb
lds
loopne
lcall
sub
loope
aas
sub
pop
or
fnstenv
push
rcrl
mov
nop
mov
xor
repz
adc
sahf
test
add
xchg
fsub
sti
mov
cmc
or
cltd
out
push
dec
jecxz
popa
adc
mov
add
push
rcrl
sbb
ja
xor
in
fists
fwait
mul
lods
mov
in
js
test
add
mov
push
cmp
sar
push
aam
push
add
negb
int3
fsubp
add
and
cmpsl
in
inc
inc
hlt
mov
inc
mov
or
cmpsl
jp
xor
sub
cmpsl
pop
jb
gs
outsb
cmp
push
mov
sub
cmp
gs
push
iret
dec
xor
add
jnp
mov
push
sub
mov
add
sub
out
test
popa
cmpsb
rcll
enter
jbe
dec
cmp
add
mov
popf
clc
ss
pop
push
jnp
inc
icebp
arpl
jb
and
shlb
movsb
lods
ficoms
mov
mov
and
xor
push
rcr
add
mov
clc
xchg
mov
pop
aas
pop
ret
cmc
lock
fldt
add
dec
movsl
clc
pushf
jecxz
mov
vandps
repz
inc
shlb
adc
movl
bound
sub
addl
mov
jno
adc
inc
mov
das
sub
incb
sub
jmp
cmp
xchg
in
lcall
mov
sub
aas
imul
push
andb
int3
jmp
fidivrl
push
imulb
lret
pushf
loopne
cltd
and
mov
mov
xor
and
sub
push
cli
ds
pop
push
scas
fcmovnb
aas
notb
jns
mov
inc
leave
sbb
mov
and
testl
fdivrp
push
lret
cmp
jns
mov
mov
cwtl
outsb
enter
jle
or
push
es
lcall
lods
pop
mov
cmp
faddl
push
jo
lret
dec
outsl
js
movsl
jne
ror
push
shl
lock
jmp
pop
in
inc
adc
mov
dec
push
jecxz
ds
push
and
into
test
dec
sbb
ja
rol
in
mov
mov
lods
xchg
cltd
ret
out
lcall
inc
fistpl
in
orl
inc
enter
lock
cltd
jnp
mov
push
xor
stos
xchg
out
mov
lahf
subb
mov
inc
xor
lcall
sbb
mov
pusha
jg
mov
inc
mov
loop
mov
xchg
sbb
imul
fcomp
pop
push
push
daa
pop
fisubs
cmpsb
dec
and
mov
je
xchg
adc
xor
fcmovu
push
incb
sbb
or
dec
sti
into
mov
mov
cli
sbb
cmp
mov
insl
testl
xor
pop
bound
add
or
out
push
mov
and
test
cmp
jno
mov
xchg
lret
andl
idivl
xchg
sahf
sahf
and
mull
aam
mov
adc
jmp
mov
push
mov
cmp
sbb
out
xchg
test
lea
in
sub
pop
jnp
int
jne
adc
and
pop
xor
inc
cmp
stc
sub
jo
out
add
popa
cmp
and
addr16
mov
mov
cmp
out
stos
lret
pop
mov
adc
inc
adc
jne
scas
scas
fucomp
inc
outsl
mov
rorb
lcall
sahf
in
mov
mov
pushf
xchg
jge
mov
cmpsl
arpl
ja
and
pop
pop
cwtl
hlt
fstp
fucomp
mov
fcmove
jns
dec
mov
add
push
repnz
pop
xor
cli
pop
adc
in
dec
test
sbb
mov
sub
ret
add
rcll
sbb
movsb
mov
jmp
xchg
cmp
rorb
faddl
xchg
aaa
cmp
cmp
lods
imulb
xchg
rcrl
clc
push
jge
mov
test
push
and
mov
leave
test
call
push
scas
jns
insb
pop
jecxz
sub
xchg
inc
mov
mov
and
repz
jl
in
pop
pop
hlt
xchg
and
loopne
sbb
std
sub
mov
cmc
pop
push
sar
push
lds
sbb
jmp
iret
xchg
mov
out
rcl
int
xchg
cli
fisttpl
and
dec
mov
addl
ljmp
sub
fmul
rcll
lea
loope
addr16
es
cmc
jmp
mov
push
enter
aad
nop
leave
test
add
cmpsb
mov
shlb
xchg
sub
xor
idivb
adc
and
pop
int3
test
lret
outsl
imul
pop
xchg
js
insb
inc
test
jge
inc
push
jns
xchg
mov
leave
cwtl
pop
cmp
push
mov
in
out
sbbl
insl
arpl
pop
dec
fidivrl
pop
movsb
bound
imul
test
add
sbb
xor
cmpsl
pop
xor
push
insl
xchg
sti
dec
jp
mov
pop
pop
in
pandn
call
inc
fs
scas
loope
xor
add
in
scas
or
xor
mov
inc
jmp
cli
and
imul
lods
mov
mov
insb
sbb
jnp
pop
inc
in
push
clc
push
jl
leave
es
and
lods
cmp
sub
scas
push
push
movsb
pop
or
cld
imul
addr16
mov
lock
rolb
leave
in
insl
jnp
lcall
repnz
into
cmp
roll
add
push
aam
jno
add
das
mov
or
jno
stc
and
lret
test
adc
bound
pop
cwtl
cltd
ret
out
add
push
fidivl
lret
cmpsl
cmp
cltd
dec
mov
shrl
adc
cmp
jo
int3
cmp
ja
iret
ret
int3
cmc
or
push
stos
adcb
or
add
pop
std
push
into
add
out
ucomiss
into
das
stc
rcrl
cs
out
in
xor
lock
mov
jp
arpl
sub
sub
int
jnp
sbb
lcall
xor
push
or
insb
inc
fsubl
lahf
dec
fnstenv
jne
into
push
inc
fwait
enter
jp
cmpsl
repz
test
pusha
xchg
sbb
sbbb
jecxz
out
xorl
call
or
adc
cs
mov
xchg
cmp
push
jge
mov
and
xor
sahf
xlat
xchg
mull
push
cmp
inc
ja
sbbl
inc
xchg
lods
hlt
push
mov
es
lret
ljmp
mov
mov
daa
mov
xchg
das
insb
jae
xchg
lret
add
cmp
daa
mov
subb
rolb
adc
out
pop
es
adc
dec
jne
sbb
pusha
mov
xchg
inc
pop
jge
adcb
loope
ror
cmp
iret
loopne
or
pusha
mov
mov
add
mov
xchg
cld
sub
mov
lods
test
xchg
lods
xchg
xor
inc
dec
dec
dec
mov
decl
adc
cmpsl
xchg
push
jno
sarb
lahf
leave
outsl
rsqrtps
movhps
sub
aad
jp
mov
popa
fsts
and
and
or
out
add
push
loopne
add
into
xor
xchg
ljmp
and
shlb
popf
mov
cmp
test
xchg
adc
pop
jg
xchg
mov
mov
mov
pop
push
out
mov
movl
and
mov
or
arpl
test
cwtl
inc
jne
ret
xchg
jecxz
nop
sub
hlt
cmpsb
rcll
push
outsb
into
push
cmp
fsubrl
jmp
jecxz
sbb
cmpsb
and
mov
and
enter
push
inc
rcll
dec
xchg
pop
in
addr16
loop
xchg
popa
inc
push
pop
xor
aad
adc
sub
cmpb
or
in
pop
cmp
cli
mov
popf
enter
popf
mov
cmp
rcrb
adc
and
test
addr16
push
cmp
pop
idivb
sbb
add
inc
icebp
jle
cmp
add
test
data16
not
roll
mov
std
icebp
mov
xor
mov
and
sub
cmp
push
dec
mov
push
mov
pop
idivb
jae
aam
jno
clc
sub
jo
stc
arpl
push
xchg
cmp
cmp
xchg
dec
je
pop
in
xor
dec
mov
mov
bound
hlt
sbb
aam
add
addr16
call
pop
arpl
jecxz
dec
in
cmp
aas
into
dec
cmp
sahf
test
orl
lcall
push
js
cmp
mov
lret
sahf
mov
aaa
fdivrl
out
les
in
aam
pop
xor
jb
xor
imulb
jns
loop
cli
das
mov
lds
adc
or
xchg
dec
das
movsl
sub
adc
or
sbb
sbb
and
lret
adc
ret
cmp
mov
clc
dec
out
into
insl
movsb
es
dec
jno
xor
mov
bnd
std
sub
subl
outsb
dec
mov
xchg
lock
mov
imul
jb
mov
loop
arpl
lea
mov
mov
sbb
mov
add
push
in
xchg
dec
lea
popa
roll
sbb
mov
xlat
je
shrl
iret
mov
xchg
mov
adc
jg
ror
cmp
out
lods
mov
mov
mov
int
cmp
addl
mov
mov
jns
orb
addb
scas
mov
jecxz
pop
pop
movsb
jecxz
ret
push
push
inc
xchg
pop
ds
in
repz
enter
xchg
mov
rolb
or
mov
bound
adc
adc
out
nop
xor
mov
and
push
inc
insl
mov
mov
adc
call
xor
add
sbb
test
or
repnz
jnp
push
jp
mov
push
lock
sbb
enter
mov
icebp
out
in
jle
add
push
ljmp
mov
jno
stos
pop
aam
cmp
shlb
mov
dec
les
arpl
mov
inc
lret
jg
out
jl
adc
sarb
xor
in
leave
iret
and
bound
pop
cmp
sub
mov
push
jb
ljmp
movsb
iret
dec
xor
pushf
int
and
dec
fcoms
mov
inc
fstpt
jecxz
fildll
cmpsl
cmc
ljmp
sbb
js
std
or
add
push
mov
pushf
jne
outsl
sahf
loope
pop
cmp
test
jae
cmp
lret
repnz
and
ret
lahf
arpl
and
add
cwtl
or
rcrl
xchg
and
mov
mov
imul
call
jecxz
icebp
push
mov
sbb
xchg
mov
mov
pusha
rol
sarl
shlb
imul
inc
jmp
lds
repnz
jnp
shl
je
xchg
arpl
outsl
std
adc
clc
rolb
push
xchg
lcall
loope
jp
das
push
scas
ror
sbb
aam
sub
iret
repz
sahf
jns
jmp
outsl
inc
cmp
pop
cmp
pusha
sub
mov
push
dec
filds
lods
jns
jle
in
arpl
push
ret
nop
cld
mov
imul
neg
pop
adc
sub
push
push
push
pop
dec
lea
inc
cmp
sti
push
inc
out
ret
loopne
lret
xchg
popf
lahf
loopne
pusha
fwait
jle
movsb
scas
data16
and
dec
jg
push
pop
jno
jg
xor
sbbl
movsb
in
repz
out
push
add
adc
adc
movsb
dec
lret
outsl
xor
mov
adc
mov
adc
push
adc
sbb
out
push
cmp
xlat
int3
dec
call
loop
aaa
subl
arpl
mov
out
dec
mov
mov
iret
cmp
stos
int
xor
test
andps
pop
mov
das
mov
in
inc
or
lret
loope
ret
mov
xchg
cmpsb
or
add
mov
test
pop
push
push
loopne
lret
or
js
pop
pop
adc
dec
cmp
mov
cmp
mov
push
out
rcrb
inc
push
jne
xchg
out
lds
bswap
sub
fxch
stc
pop
cltd
nop
fwait
mov
outsl
and
jge
sbb
xchg
push
inc
mov
into
mov
adc
lcall
mov
sti
maxps
mov
insb
in
pusha
add
push
mov
in
cld
jns
fcomi
ja
or
shll
test
out
cmp
daa
lahf
shll
lds
mov
jbe
out
jmp
and
mov
inc
push
loop
pop
lds
mov
xchg
pop
in
jbe
enter
cli
adc
fidivrs
push
xchg
mov
jbe
aaa
inc
push
jnp
imul
andl
outsl
lret
jle
mov
scas
mov
adc
dec
add
sub
jbe
jo
mov
adc
iret
out
lock
xor
push
js
pushf
addr16
push
sub
nop
push
in
xchg
test
fcompl
cmp
ficoml
jae
sub
ror
adc
jns
int3
nop
stos
pushf
sub
and
or
imul
nop
push
xor
pop
fst
cmp
push
addr16
mov
add
cmpsl
cmpsb
add
adcb
push
pop
sbb
sbb
pop
rcll
stos
dec
add
scas
aad
xchg
mov
rorl
and
fsub
xor
xchg
jno
repz
inc
and
mov
imul
mov
popa
adc
negl
mov
out
aam
mov
mov
or
mov
sub
ficoml
jno
add
jge
and
adc
lods
mov
jbe
inc
mov
inc
push
adc
or
jns
lcall
mov
cwtl
testb
int
dec
arpl
sti
dec
and
ljmp
pop
cmp
in
data16
adc
inc
orl
cmp
mov
cmp
call
popa
lcall
cmp
pusha
mov
or
nop
fucom
out
out
push
sbb
sbbl
test
in
adc
aam
cmpsl
mov
es
loopne
jne
mov
test
popa
and
or
lods
xor
fcomps
add
icebp
cmp
testl
jb
pushf
fadd
in
nop
mov
aam
negl
adc
mov
stos
and
test
aaa
mov
dec
push
xor
cmpsl
push
pop
sbb
sbb
mov
data16
ret
addr16
in
pop
xor
xchg
cmpl
fwait
lds
arpl
dec
scas
cmp
dec
push
or
sbb
sbb
push
das
push
cmp
ds
pop
cwtl
hlt
cli
pop
arpl
cs
cmp
adc
xacquire
mov
aas
xor
or
loope
add
jns
fistpl
dec
in
jb
adc
pop
pop
push
flds
jno
dec
adc
or
xor
das
cmp
fistpl
ja
xor
inc
sub
cmp
push
inc
lret
stc
xorl
mov
mov
out
lock
cmp
sub
or
mov
push
push
movsb
xchg
and
movsl
or
add
pop
mov
or
push
es
mov
sahf
pushf
mov
push
outsl
test
js
fwait
push
fwait
scas
std
jnp
mov
aad
inc
in
sub
minps
push
outsb
cltd
and
jnp
cs
movsl
ds
cmp
dec
mov
dec
lods
ret
in
pop
push
sub
div
add
inc
fnsave
aaa
sbb
negb
in
jo
std
addr16
in
gs
iret
or
cmp
adc
cmp
jmp
mov
push
xchg
sbb
cmp
inc
cwtl
pop
xchg
inc
jns
mov
ret
into
or
mov
pop
inc
fucomi
jo
fnsave
test
xor
xor
cmpl
jns
xchg
push
loop
mov
enter
js
push
jno
xlat
neg
in
fmuls
insl
mov
gs
push
xchg
sub
mov
lahf
dec
dec
or
xchg
inc
jnp
dec
lods
bound
shll
mov
jmp
gs
jp
test
int
and
cmp
mov
inc
stos
push
fbstp
cmp
xor
pop
stc
jmp
cmp
mov
jae
push
adc
jge
mov
mov
pop
mov
stos
and
sub
sub
repnz
sbb
subl
loope
sbb
sbb
cld
cmc
or
and
add
adc
idivl
rcl
mov
decl
pop
jl
fwait
inc
lods
shrb
adc
leave
pusha
pop
inc
fs
pop
mov
loop
inc
rclb
cli
jg
adc
lods
icebp
or
loope
mov
push
pop
mov
loopne,pt
add
fwait
jne
pop
notl
lret
xor
imul
popf
mov
sub
lea
mov
inc
daa
adc
mov
daa
insb
rolb
mov
sti
xor
sahf
inc
mov
fistpll
jge
repz
std
mov
mov
inc
mov
add
pop
lret
dec
jle
ljmp
mov
add
inc
sbb
add
sbb
jnp
mov
jecxz
xchg
pop
or
jle
fwait
adc
mov
and
mov
cld
dec
lock
and
xlat
mov
cld
ja
dec
pop
aad
lret
pop
fwait
mul
test
and
jecxz
fsubrp
push
insb
fstps
movsl
out
add
fwait
bound
mov
mov
xor
cmp
sarb
mov
xor
xchg
lds
add
cmp
and
call
add
sbb
cmpsb
xor
xor
push
rorl
mov
into
enter
scas
mov
rolb
outsl
aad
add
xlat
or
mov
mov
lds
ja
out
adc
cwtl
push
jecxz
cmp
test
stc
mov
lock
push
stos
jbe
sub
imull
fldenv
adc
cld
mov
push
loop
mov
ficompl
decb
das
and
fcmovb
dec
jle
and
stos
adc
fisubl
push
cmp
les
sub
fcoms
sbb
pop
dec
mov
and
mov
es
cltd
pop
fwait
out
lock
sarl
sbb
inc
dec
lret
push
xchg
stos
xchg
hlt
arpl
out
mov
xchg
mov
pop
add
fwait
sbb
es
dec
scas
sti
inc
cmp
or
mov
xchg
dec
dec
mov
roll
out
inc
mov
es
ret
xchg
shr
adc
js
and
and
icebp
push
lret
in
repz
jg
je
stos
enter
mov
jbe
xchg
jecxz
pop
push
loopne
add
loop
cmp
jo
jno
fmull
cmc
mov
adcb
je
fiaddl
and
or
daa
mov
lahf
jge
mov
push
mov
aaa
dec
mov
and
clc
ss
aas
call
out
adc
xchg
gs
push
rdpmc
mov
mov
cmp
fnstsw
cmp
add
inc
dec
push
pop
insb
cmpsl
jmp
lahf
mov
add
add
in
adc
sbb
mov
mov
lret
inc
sbb
fbstp
xor
add
jle,pt
xchg
stos
iret
cmc
sbb
mov
add
popf
in
in
scas
add
adcb
lcall
lret
sub
sbb
add
xchg
push
in
fsubrp
out
mov
mov
js
loopne
xorl
mov
pop
mov
adc
pushf
test
shlb
je
add
fdivs
xchg
aas
adc
or
add
jg
sarb
inc
cmpsl
adc
out
sbb
pop
popf
inc
jp
push
and
int3
xlat
xchg
inc
and
jns
pop
dec
xchg
push
mov
lea
fwait
iret
stos
div
aad
stc
jl
push
inc
jle
ret
sbb
push
scas
xchg
pop
test
inc
pop
enter
out
daa
call
mov
outsb
sub
shll
xchg
sbb
xchg
les
and
roll
push
jb
dec
out
enter
mov
sub
sub
mov
das
fmull
and
ds
jo
pop
dec
mov
repz
fprem
jecxz
xor
aam
je
pop
push
xchg
test
cmp
push
rclb
scas
aaa
mov
aad
shrb
dec
gs
pop
add
lods
or
cmp
aad
pushf
clc
xor
push
xor
jge
in
pop
cmp
fimuls
movsb
mov
pop
xchg
xor
push
adc
sub
sbb
call
cmp
jnp
popl
int
sbb
lods
inc
adc
into
xor
mov
mov
or
out
mov
ss
or
jl
adc
xor
imulb
mull
xchg
add
sbb
sahf
mov
out
inc
and
insb
lret
cltd
fidivrl
mov
mov
sbb
mov
outsb
sub
sbb
push
xchg
sbb
dec
jmp
lret
lods
imul
cmpsl
int
push
pusha
adc
bound
add
xor
pop
popf
cli
popw
filds
mov
ljmp
jbe
pop
ret
cltd
xor
fsubrs
mov
ss
data16
subb
xchg
call
in
out
rcl
ljmp
push
iret
cwtl
adc
scas
jnp
hlt
push
pop
cmc
push
add
out
les
mov
cmp
ret
out
outsl
js
xchg
and
jmp
das
pop
sub
stos
int3
jb
fistpll
inc
pop
jno
insl
cs
xchg
pop
lret
jl
jnp
mov
enter
imul
adc
pop
js
jns
test
leave
dec
jno
shll
sti
int3
add
xlat
aad
jg
call
xor
xchg
adc
in
push
adc
or
and
jmp
push
mov
cmp
notl
pop
aas
xchg
push
pushf
mov
movsb
sub
and
ljmp
mov
inc
and
rolb
ret
mov
test
aas
loope
dec
mov
dec
inc
sbb
stos
pusha
jp
adc
stos
mov
and
daa
sbb
insb
insb
jnp
dec
rcrl
lahf
jecxz
push
leave
or
and
ret
xchg
jo
cmpb
lods
pop
fisttps
inc
and
fbstp
pushf
mov
enter
or
ficomps
pop
jo
xchg
lcall
push
in
cmc
rcll
das
pushl
dec
dec
fdivrl
mov
or
stos
mov
adcb
xor
adc
mov
and
and
cmp
in
pushf
orl
add
inc
fnsave
mov
add
xchg
roll
scas
push
push
loop
sub
cmpb
cmp
xlat
mov
rclb
jo
into
pop
iret
ret
fcomps
sub
cwtl
jns
std
in
in
push
mov
les
pop
mov
popa
push
push
push
inc
out
adc
cmp
cmc
or
lods
fdivp
mov
repnz
jnp
pop
repnz
bound
add
insl
or
dec
mov
std
and
cmpsl
sbb
movsb
negl
add
test
pop
mov
inc
fsubl
push
mov
mov
jmp
mov
sbb
cmpsl
outsb
mov
ret
jae
mov
mov
mov
sbb
pusha
xchg
pop
mov
iret
movsl
sbb
inc
shrb
jge
xor
incl
stos
repnz
xor
xor
xchg
mov
fcomps
js
xchg
and
lock
stos
or
jbe
xchg
imul
mov
xor
scas
add
inc
jge
aas
sbb
shl
mov
test
sar
mov
sbb
or
pop
fucomip
mov
mov
sub
mov
cmp
dec
mov
sbb
arpl
aas
mov
pop
and
mov
jns
loop
jnp
or
mov
mov
pop
pop
das
sbb
mov
pop
negb
pusha
jge
fdivrl
movb
sub
lods
sub
adc
hlt
adc
pop
fnsave
fdivrs
test
imul
or
mov
scas
pusha
add
inc
and
jb
imul
mov
mov
iret
xor
jl
shrb
cli
or
mov
or
jle
in
aam
jbe
sub
or
jae
mov
or
aaa
daa
mov
cwtl
shll
das
mov
sti
xor
mov
jge
nop
mov
nop
mov
fwait
int3
ret
sub
inc
add
jle
push
add
mov
push
in
cmpsb
push
mov
shrb
mov
in
test
roll
inc
aas
xor
loope
fdivrs
loope
mov
add
repnz
sub
pop
hlt
jne
cld
push
inc
jb
sar
xlat
fsubrp
pop
mov
sbb
xchg
sar
pop
ret
and
sahf
lds
push
aad
stos
push
sub
or
dec
inc
ret
out
fnstenv
loope
xor
call
or
mov
push
stos
inc
out
fwait
incb
cmp
in
xchg
test
pop
subb
loope
test
mov
mov
out
xchg
sub
cmc
scas
mov
mov
mov
sub
data16
xor
xorb
sti
ret
clc
nop
cmpsb
xor
stc
and
ret
cld
push
xchg
inc
ljmp
lret
jno
dec
mov
outsb
mov
sbb
and
je
shll
push
jno
jo
mov
lea
jp
pop
into
es
je
jmp
loopne
cmp
dec
mov
call
add
and
addl
sbb
imul
movsb
xchg
movsb
iret
inc
mov
push
mov
ret
jp
mov
cltd
lds
fildll
test
outsb
ret
jle
pop
rolb
fdivl
xchg
lock
aaa
stos
out
xchg
mov
or
insl
cmc
loop
mov
pop
jb
add
insb
hlt
stos
cmc
in
es
xchg
loopne
mov
inc
fiadds
lcall
xor
iret
pop
sub
adc
cmp
lock
inc
fsubs
subl
mov
mov
inc
fcom
or
test
pop
mov
push
cltd
push
mov
addr16
sbb
and
shl
pop
add
pop
pop
fnstenvs
adc
lock
ret
fdiv
daa
insl
lcall
push
mov
xor
gs
into
adc
subl
fisubl
pop
jge
outsb
add
push
repnz
cmpsb
dec
push
add
jge
jecxz
inc
outsl
mov
test
ficoms
outsb
mov
sti
cmp
push
inc
sbb
sbb
sahf
in
push
stos
pop
arpl
jp
movb
push
fs
popf
push
sub
inc
or
mov
xor
mov
push
std
pop
xlat
jl
mov
ljmp
stos
xor
ds
les
fisubl
dec
inc
mov
ret
xor
push
mov
adc
push
dec
pusha
sub
pop
push
jno
int3
and
or
cmp
je
shl
or
jnp
mov
icebp
in
and
inc
inc
movsl
jp
jb
out
inc
dec
or
aad
mov
push
fwait
sub
sub
add
ret
pop
adc
inc
jge
mov
mov
lods
pop
or
fs
or
adc
jmp
mov
call
pop
hlt
test
inc
and
xor
lea
cmp
mov
jnp
dec
outsl
jle
xor
fnstsw
dec
xorb
sbb
sub
imul
filds
push
pop
jle
or
scas
push
mov
stc
jp
inc
rcll
das
or
lock
ljmpw
imul
out
lahf
fbld
pusha
jne
inc
and
clc
sti
ds
lods
push
shrl
and
or
pusha
setne
dec
pop
sub
stos
popa
jg
aad
mov
pop
icebp
mov
inc
rorl
adc
imul
and
xlat
ss
push
xchg
adc
lds
cmp
insl
push
adcl
fcomps
test
sbb
xor
mov
mov
jg
mov
push
mov
mov
or
dec
dec
int
push
cld
fucompp
pop
push
mov
jns
in
imul
sbb
in
nop
lahf
in
cmp
iret
out
lds
sub
das
arpl
nop
loope
repz
das
push
mov
in
sub
repz
iret
dec
mulps
jb
cmp
addr16
inc
and
dec
push
ret
sub
push
or
sarb
push
nop
mov
push
push
add
dec
rorl
cmp
add
lahf
movsb
sub
lods
es
push
cmpsb
int
cwtl
loope
mov
xchg
icebp
sbb
dec
dec
add
imul
das
mov
insl
jno
ljmp
mov
mov
push
out
jl,pn
lods
jmp
adc
shl
sub
jnp
sub
pop
insb
mov
rcll
dec
out
pop
cmp
rorb
pop
sahf
sti
movsl
das
ficoms
mov
dec
in
js
mov
mov
ds
int3
dec
repz
sbbb
mov
mov
movsb
add
push
mov
dec
push
xchg
js
jp
and
mov
dec
jo
lock
sbb
in
in
xor
pextrw
dec
inc
outsl
test
push
ja
fsubrl
push
push
pop
xor
bound
jno
jbe
ds
lahf
inc
sar
cmp
jmp
nop
pop
xchg
sub
dec
shl
sub
mov
jns
pushf
fildll
mov
jnp
icebp
pop
fidivrs
fidivl
mov
and
or
add
adc
xor
xor
jle
pop
push
je
ljmp
add
nop
stc
adc
in
pop
add
mov
daa
rol
xorb
bound
pusha
ds
lods
and
fs
clc
mov
adc
jne
shll
flds
xlat
fmuls
push
lret
ret
and
xchg
mov
push
push
pop
inc
xchg
rorl
push
sub
sbb
cld
xlat
out
add
iret
adcl
push
cmp
jbe
lock
pop
push
fdecstp
jns
mov
aas
icebp
jbe
aas
hlt
nop
cmp
pop
cmpsb
dec
cmpsl
hlt
cmp
sbbb
mov
xchg
movsl
adc
add
lahf
add
jae
push
rclb
iret
fidivrs
subb
test
or
sbb
sbb
pushl
xchg
xchg
jp
jnp
sbb
and
add
sub
jb
stos
leave
inc
mov
stos
inc
out
push
dec
imul
sbb
imul
adc
jecxz
lcall
mov
pop
push
sbb
sbb
push
jb
sahf
testb
cmp
mov
ret
and
mov
fcoml
pop
jne
shrb
pop
popf
sbb
fdivs
sti
and
mov
shl
lret
jecxz
xchg
jle
subb
stos
movl
outsl
push
gs
notl
aad
fisubrl
les
cmove
iret
xchg
xor
mov
fsubs
mov
lods
je
adc
mov
mov
shll
dec
iret
inc
loop
fs
adc
loope
test
xor
mov
xor
mulb
lock
loopne
push
scas
xchg
mov
jb
aaa
rcl
inc
adc
mov
enter
push
rcrb
push
and
adc
daa
fsubr
enter
fst
xor
add
leave
bnd
mov
and
sub
stos
loop
add
mov
ljmp
outsb
inc
jns
pop
sub
lret
or
ja
xor
add
fistpl
mov
scas
mov
dec
test
pop
daa
cld
add
repz
decl
insl
mov
lds
dec
jle
movsb
pushf
fistpl
and
in
cmp
mov
jmp
sbb
rolb
inc
xchg
int
ljmp
push
jecxz
or
mov
inc
inc
shlb
popa
out
arpl
ficoms
jg
in
adc
push
jno
daa
dec
iret
xor
cmp
cmp
jno
or
and
mov
jb
or
loop
and
paddb
sub
cld
push
cwtl
adc
lret
into
test
stos
inc
scas
jecxz
inc
adc
jecxz
push
ficompl
loope
iret
lea
rcrl
jg
or
jnp
lods
test
push
sti
lods
test
inc
mov
dec
in
mov
dec
push
cld
xchg
les
fnstenv
cs
aas
jle
xor
inc
mov
mov
popa
push
xchg
aaa
out
fwait
or
inc
adc
mov
cmp
sub
mov
ss
in
inc
xor
pop
or
popf
into
push
cmp
mov
add
std
in
sub
fwait
pushf
jecxz
dec
dec
sub
mov
test
stos
adc
sti
mov
pusha
pop
stos
dec
mov
push
mov
dec
std
jg
push
mov
movsl
icebp
adc
stc
dec
out
adc
sub
insl
jb
pop
sbbb
stos
adc
insl
pop
fnstsw
je
test
pop
pop
sub
cltd
ja
adc
and
and
lahf
cmp
dec
adc
mov
cmc
pushf
gs
add
mov
notl
jno
xor
lds
jle
dec
lcall
imul
xchg
cmp
int
push
lods
push
dec
icebp
jge
dec
mov
orb
xor
dec
pop
xor
rcrb
stos
aaa
mov
lret
push
mov
mov
stc
mov
add
sbb
lds
ficoms
rcrl
test
xlat
jp
jecxz
cs
iret
inc
jo
xlat
mov
fnstsw
outsl
mov
pusha
cwtl
xor
jl
cmp
scas
cld
push
adc
test
adc
shlb
sub
mov
inc
jmp
mov
leave
call
push
test
cmp
clc
jbe
dec
pushf
fidivrs
push
pushf
xor
pop
pusha
ret
pop
xor
out
and
movsb
sbb
lods
dec
cmp
jge
cmp
xor
nop
jl
mov
repz
outsb
in
sub
mov
pop
in
sub
push
inc
dec
push
idivb
aad
addr16
insl
jecxz
add
sbb
sub
in
mov
sbb
lds
dec
mov
repnz
test
jae
imul
outsb
int3
fildll
inc
iret
pop
mov
cmpsl
jno
inc
cmp
hlt
imulb
cmp
stc
out
das
rorb
sar
cmp
scas
insb
dec
cs
in
jne
iret
sarl
mov
xor
scas
sbb
sbb
dec
sub
stos
icebp
lods
fwait
mov
push
ljmp
mov
jle
popf
xchg
mov
fwait
cld
add
rol
mov
mov
xor
pop
mov
sbb
jnp
outsl
add
aam
rcrb
fwait
cmpl
cmp
jl
push
cmp
dec
dec
loope
and
or
fcomip
or
lea
jb
mov
fbld
cmp
jns
sbb
push
das
das
lods
lcall
mov
jno
insl
mov
nop
push
cmpsb
sub
lods
dec
inc
fwait
fwait
jmp
mov
mov
push
imul
jbe
outsb
shlb
jno
idivl
push
jg
sub
call
xchg
es
push
divl
mov
lods
test
fnstenv
ds
cmp
repnz
movntq
imul
imul
push
adc
push
xchg
pushw
scas
jnp
cmp
aam
fisttpl
in
mov
mov
inc
hlt
mov
mov
cwtl
push
into
jne
sub
add
in
mov
jecxz
add
lock
add
cs
and
dec
and
clc
in
jmp
cmp
mov
shl
pop
popa
sbb
icebp
xchg
scas
add
cmpsb
shlb
int3
sub
mov
aam
lahf
mov
push
arpl
and
cmp
sarl
jle
push
pusha
add
cmp
pushf
fwait
cmp
scas
scas
mov
cmp
in
mov
mov
inc
push
inc
arpl
or
lea
imul
aas
add
mov
repnz
push
lock
outsl
adc
sti
add
xor
aaa
shr
jmp
in
insb
push
fwait
xchg
inc
inc
or
xor
xor
repz
lea
adc
stos
aam
jo
mov
mov
out
mov
fistl
sub
in
popa
lcall
shrb
imul
sarl
or
push
mov
out
xor
lods
mov
pop
xor
mov
mov
inc
sbb
cmp
ljmp
outsl
push
insl
push
pop
sahf
mov
sbb
cmpsl
mov
cmc
lcall
fsubs
jmp
insb
iret
xor
pop
xchg
pop
xor
insb
lret
insb
xchg
ret
and
lahf
aad
fcmovbe
add
mov
xchg
sti
fs
add
cmp
pop
adc
jle
and
push
sub
fwait
or
mov
bound
pop
loope
jnp
lds
dec
es
es
gs
pop
iret
movsb
loop
inc
adc
rolb
int3
cmp
imul
push
int
in
adc
mov
cmpsb
jge
fadd
adc
bound
aaa
mov
ss
and
xor
push
jbe
jno
push
adc
addr16
xchg
lock
mov
pusha
push
aaa
movl
mov
cmp
cmp
xlat
adc
aam
lea
dec
adc
jbe
xchg
lahf
adc
pop
data16
iret
test
or
sti
mov
notb
pop
into
cwtl
cmpsl
test
sbb
cmp
mov
daa
hlt
jp
xchg
movsl
ds
mov
push
scas
push
cmp
in
sbb
mov
fldcw
cmp
adc
sahf
push
cmpsl
pop
fadd
in
arpl
clc
pop
push
or
test
sarl
mov
xor
and
adc
inc
sarb
xchg
xorl
jbe
dec
fmull
call
mov
call
enter
inc
inc
rorb
leave
xor
push
mov
arpl
dec
mov
call
fildl
xorl
xor
and
push
daa
popf
add
rclb
das
pop
and
inc
mov
iret
jbe
push
dec
subl
cmpsb
out
fsubrl
fwait
ret
xchg
aam
test
and
js
fstpl
sbb
repnz
out
xchg
cld
push
xor
dec
jno
dec
je
cli
mov
jae
aad
orb
lea
les
addr16
mov
mov
outsb
dec
mov
and
inc
push
insb
rorb
xchg
jnp
adc
inc
push
sbb
cmpsb
sub
inc
jmp
push
push
mov
mov
orb
and
cli
cmp
add
cwtl
jg
xlat
cmpsb
sbb
fidivs
and
jp
in
xchg
sub
subb
sub
jge
mov
fists
test
push
cltd
loop
adc
hlt
lret
outsb
push
dec
pusha
dec
lcall
sarl
out
cmp
cmp
lods
dec
inc
xchg
stos
frstor
mov
dec
rclb
mov
notb
sahf
cmp
cmc
xor
out
push
movsl
or
mov
pop
lcall
fdivp
mov
in
scas
jae
sti
fidivrs
ljmp
das
push
test
arpl
outsl
and
shlb
int3
xor
xor
xor
enter
testb
call
xlat
cmp
jmp
cmp
fbstp
hlt
mov
jns
pop
fmuls
scas
aas
push
jae
xor
mov
testl
outsl
add
jnp
cmpb
inc
cwtl
xchg
movsl
pop
in
xor
add
and
adc
inc
or
lods
in
cmp
xor
and
sbb
dec
popl
ficomps
divb
sbb
add
push
xchg
adc
mov
and
mov
ljmp
mov
or
mov
addb
outsl
cmpsb
push
popf
mov
mov
inc
lods
mov
fwait
jmp
and
cmpsl
jo
xchg
xchg
pop
and
push
mov
shlb
js
sbb
clc
pop
push
push
outsl
inc
add
and
sub
cmp
std
lcall
mov
out
cmp
movsl
xchg
sub
sarl
inc
or
lock
pop
clc
xchg
in
xchg
bound
aam
ret
mov
cltd
insl
sar
fiaddl
mov
pushf
sbbl
adc
rcl
shrb
ret
add
mov
repz
dec
or
mov
repnz
int
and
loope
fsubl
out
nop
out
and
mov
sub
sbb
or
fdivrs
xor
adc
mov
call
push
fmul
mov
pop
icebp
pusha
fwait
mov
imul
ja
mov
inc
mov
pop
fmuls
xor
ja
dec
js
cltd
lea
arpl
xor
jmp
add
das
push
imul
sub
pop
pop
xor
jl
sub
iret
outsl
imul
mov
sub
pop
push
mov
int
jmp
sbb
mov
incb
cmp
mov
hlt
adc
in
mov
pop
xchg
jo
xor
test
pop
cli
pushf
jl
adc
rorl
push
hlt
xor
push
addr16
xchg
xchg
addr16
push
sbb
inc
pop
out
adc
lods
lock
test
loop
int
bound
add
lea
cs
popf
ja
ljmp
mov
mov
std
adc
dec
dec
outsl
dec
inc
adc
xor
scas
xlat
hlt
sti
fidivrl
lahf
mov
adc
mov
sbb
rclb
adc
insb
push
push
or
pop
push
xchg
cs
xor
jno
pop
nop
dec
inc
add
mov
xor
repnz
cli
enter
mov
cltd
jo
rcl
inc
stos
sub
lds
jl
dec
lea
add
mov
or
lcall
cld
pusha
cmp
sbb
ficoml
fbld
orl
cmp
imul
jnp
push
ret
and
pop
pop
xor
and
cld
scas
call
and
dec
mov
cwtl
dec
sub
fdivrs
xchg
push
and
roll
mov
cmp
hlt
std
out
cwtl
cmp
ja
lcall
fistpll
fstps
fmuls
inc
mov
lock
or
xchg
je
jle,pn
fimull
cltd
xlat
push
scas
adc
pop
pop
cmp
in
lret
push
ret
mov
lcall
jo
fnstsw
in
out
and
shll
dec
mov
loope
rorl
and
hlt
mov
mov
int3
test
std
mov
xchg
mov
in
push
dec
add
mov
cmc
pop
push
icebp
mov
push
jl
leave
sub
aad
sbb
test
sti
scas
xor
mov
or
addb
int3
cmp
int
sbb
cmp
add
movsb
dec
in
jne
popa
xchg
sahf
mov
ret
pop
cmp
outsb
push
adc
mov
rorb
mov
add
pop
cmpsl
pop
in
dec
enter
jp
divb
xchg
leave
push
mov
scas
out
dec
dec
mov
mov
and
dec
test
inc
push
jge
add
movsl
cmp
sub
es
loop
mov
xchg
and
mov
pop
mov
ret
lea
push
inc
dec
push
inc
jne
mov
adc
pop
ds
inc
dec
testl
lret
lret
or
inc
jmp
mov
dec
ror
cmp
ret
call
ss
lahf
jcxz
call
pop
push
mov
loop
scas
mov
imul
push
jb
and
push
cmp
pop
gs
int
pop
or
cmpsb
dec
out
sahf
rorl
jle
push
roll
mov
pop
popa
movsl
lcall
cwtl
cmp
and
popf
in
sbb
mov
sub
out
bound
push
fisubrs
mov
inc
inc
scas
jb
popf
sub
cmpsl
mov
and
test
imull
mov
inc
xor
xor
sbb
fmul
mov
cmc
sbb
das
mov
jl
ljmp
jne
and
addr16
lret
inc
xor
rol
das
xor
push
loope
jle
jae
repnz
scas
sub
sub
jnp
lcall
push
mov
push
loop
outsl
cmc
movsl
cmp
mov
xchg
cmpsb
or
out
mov
subl
fcomps
pop
ljmp
sbb
mov
and
rcrb
sbb
out
icebp
pop
xor
shrl
cmp
mov
icebp
fwait
out
sbb
mov
roll
in
and
loopne
popa
fwait
mov
pop
cmp
andb
movsb
push
add
push
mov
inc
mov
iret
sahf
dec
push
rclb
stos
imul
dec
rorl
cmp
out
ss
movsl
push
jp
lret
mov
out
ds
adcl
pushf
fcomp
dec
rcll
xor
push
dec
rol
mov
int
adc
fcompl
fwait
in
shrl
dec
stos
sub
out
bound
aam
and
sarb
fwait
jp
stos
push
adc
push
addb
outsb
icebp
jp
fstps
adc
dec
and
mov
test
pop
mov
aaa
mov
xor
push
es
lods
push
xor
int3
fstps
shlb
xorl
aad
sub
jp
outsl
pop
pop
pushf
push
jae
loopne
out
xchg
test
adc
lods
hlt
mov
mov
push
loop
sarl
je
stos
in
ret
lahf
xchg
mov
mov
add
cmc
aad
neg
jnp
inc
lahf
push
test
fwait
push
fcmovnu
xchg
arpl
pop
jmp
sti
enter
dec
dec
in
push
ss
aaa
or
sub
lahf
sub
pop
data16
sbb
sbb
inc
and
pop
inc
sarb
add
in
adc
mov
pushw
adc
imul
xor
xlat
jnp
je
jb
enter
pushl
test
movsb
imul
and
les
daa
mov
dec
cmovbe
das
cmp
and
ds
mov
ljmp
push
es
dec
mov
pop
fstpt
mov
dec
jno
xchg
ret
loope
gs
pop
push
out
sbb
push
or
cltd
repnz
stc
push
mov
sbb
mov
push
lret
xchg
mov
push
fistps
mov
mov
outsl
arpl
mov
rcll
xor
les
cwtl
ja
outsl
mov
mov
jo
mov
adc
roll
mov
mov
test
and
or
aaa
movsl
movsl
push
xor
sahf
and
ja
dec
xchg
adc
stos
mov
movsl
pop
mov
ficomps
lea
push
pop
add
test
std
in
loope
xchg
push
setbe
sub
test
xlat
jle
rcr
and
add
pop
jecxz
cs
insl
pop
mov
rdtsc
mov
mov
insl
xor
stos
cmp
mov
xor
jecxz
jne
shlb
cmp
mov
mov
into
jno
sub
int
arpl
and
rol
cmp
mov
sub
ljmp
addl
out
push
mov
xchg
pop
cli
jb
jmp
sub
mov
idivl
ret
add
adc
pop
clc
push
jl
lock
mov
push
stc
int3
lcall
push
les
das
dec
adc
test
movsl
loop
adc
aad
push
sbb
mov
or
cmp
mov
inc
imul
adc
loop
jg
inc
jae
push
repz
scas
and
xor
sub
and
cmp
mov
insl
stos
shl
test
aam
mov
fwait
sbbl
sbb
or
fidivrl
cmpsb
js
fidivl
xor
inc
out
fstpt
push
jbe
xchg
or
decl
xchg
and
jge
push
mov
push
jmp
sbb
push
dec
repz
jb
test
cld
mov
ret
ja
ret
andl
out
cmp
xor
mov
add
inc
pop
and
push
and
das
jnp
scas
jno
in
push
cmc
push
jmp
in
cmp
jne
loopne
sub
jae
sbb
jns
mov
clc
xor
sbb
lcall
daa
ss
pusha
ds
insl
push
or
xchg
pop
je
pushf
mov
add
inc
pop
sbb
es
or
ret
insb
insl
test
mov
rcl
data16
mov
aas
fdivrs
lcall
mov
push
je
cmp
fldl
gs
xchg
iret
adc
jbe
push
iret
push
cmp
les
pop
pop
jge
int3
cld
inc
subb
push
cmpxchg
sti
mov
movsl
enter
inc
mov
sar
call
inc
nop
and
dec
cltd
cs
mov
mov
push
icebp
fldenv
stos
aam
jne
std
fdivl
sub
mov
cmp
iret
movsl
mov
xchg
jns
jns
test
fwait
test
mov
pop
data16
or
add
add
outsl
jmp
adc
xor
insw
cmpsl
shll
dec
dec
repnz
adc
jmp
cmpsl
push
mov
gs
out
in
push
add
or
int
sub
shrb
mov
fnsave
jnp
sbb
sbb
fwait
pop
std
add
clc
push
xor
sbb
mov
cmp
inc
mov
inc
popa
cmp
mov
mov
xor
gs
cmp
jmp
jecxz
addr16
aaa
ret
jnp
xchg
push
sub
sbb
dec
out
pop
dec
in
es
fidivrl
pop
cmc
aad
test
jb
inc
inc
test
adc
mov
add
movsb
add
shrb
insl
shlb
notb
or
nop
mov
pop
xor
push
rcl
notl
push
ss
scas
pop
sub
xor
mov
xor
aaa
les
dec
testl
jb
jge
mov
sub
je
push
loop
das
xor
je
push
jb
push
outsl
and
jae
loop
movsl
call
push
das
cli
jnp
inc
test
mov
cmpsl
movsl
loop
inc
xchg
in
and
sbb
repz
lret
mov
jecxz
and
xchg
mul
jecxz
add
sub
pop
pop
mov
mov
dec
sti
es
call
call
mov
notl
in
into
cli
daa
into
push
jge
sbb
int3
push
stos
ja
jge
arpl
outsb
cmp
mov
cltd
fisttps
cwtl
out
fcmovnu
cltd
aaa
mov
pop
dec
lahf
mov
lds
jmp
hlt
push
xchg
movsb
xchg
sbb
xlat
orb
or
das
and
rorb
sbb
or
push
cmc
loope
cld
lcall
xchg
inc
mov
mov
loopne
xor
fildll
out
call
mov
pop
stos
push
imul
enter
lods
adc
daa
push
leave
mov
repz
and
sbb
rcl
jns
adc
sub
movsl
clc
jle
loope
js
and
cmp
pop
or
data16
std
pop
aaa
repnz
cltd
lret
add
rorb
dec
mov
pop
stos
int
jmp
xor
inc
jne
lods
repnz
xor
pop
popf
adc
adc
out
nop
subb
mov
mov
push
insb
clc
stos
incb
loop
mov
rol
enter
xor
nop
rcll
push
inc
xchg
cli
inc
xchg
dec
imul
in
or
pop
shlb
mov
pop
into
pop
adc
add
pop
lret
adc
icebp
int
inc
add
or
inc
add
push
mov
mov
mov
and
and
or
adc
aam
mov
and
lahf
pusha
jno
jle
push
xchg
ret
pop
cmpsb
cmp
mov
push
add
stc
mov
into
add
xchg
enter
test
lret
cmc
pop
stos
mov
mov
mov
and
scas
rol
fucomp
jno
popa
sbb
push
cld
or
popf
movsb
out
aam
je
lret
pop
sub
fisttpl
loop
xchg
inc
inc
mov
sahf
loopne
lcall
or
pop
jnp
adc
mov
mov
loopne
adc
rcrl
jb
jg
push
les
or
mov
cmp
push
push
mov
shll
cmpsb
lahf
pop
call
dec
jno
pop
mov
mov
push
dec
jl
dec
xchg
pushf
js
pop
mov
sbb
pop
popa
jg
in
in
xlat
in
pushf
std
xor
push
push
xorl
jge
sahf
inc
inc
pop
fs
adc
add
inc
stos
aas
stos
jmp
sbb
sbb
add
je
and
mov
push
xlat
cmp
sbb
lods
sub
imul
movsl
inc
jge
add
inc
mov
inc
xor
js
adc
cmp
jnp
nop
dec
data16
call
xchg
jno
xchg
loopne
mov
mov
adc
aad
stos
xchg
jg
fsubl
sub
fsubrl
je
push
out
mov
loop
mov
push
push
in
mov
fidivrs
cwtl
ss
mov
hlt
mov
dec
jmp
pushfw
cmp
stc
jbe
mov
addr16
jb
arpl
xchg
dec
enter
cmp
sbb
fidivrs
and
jno
mov
jmp
inc
ficomps
leave
sub
je
or
pop
rcrl
jbe
in
jle
xchg
ss
cltd
inc
in
in
sub
shrl
shll
imul
inc
pop
push
fsubrs
add
mov
xchg
popf
repz
xchg
jl
sub
add
leave
mov
aad
mov
out
aad
sti
cmpl
int
pop
xor
scas
outsl
jmp
pop
mov
adc
jb
ror
int
xchg
adc
ds
or
mov
jae
fimuls
push
mov
in
mov
imul
roll
fcoml
mov
dec
pop
push
lock
scas
add
insl
es
inc
inc
nop
inc
dec
insb
dec
loop
dec
js
cld
data16
sbb
repz
cmp
xchg
testl
pushf
push
cmp
and
movsb
jl
hlt
pop
xchg
dec
ja
inc
mov
lods
adc
mov
pop
out
inc
mov
jo
sub
xchg
lds
xchg
mov
sbb
dec
sahf
addb
clc
cmp
jmp
add
mov
call
mov
sbb
adc
push
ds
pop
pop
test
cmp
insl
addr16
cltd
call
or
lea
leave
fxam
or
mov
notb
adc
arpl
push
push
sub
movsl
loop
cmpsb
mov
pop
pop
insl
ficompl
mov
pusha
or
enter
lock
lods
pop
mov
pusha
inc
push
xchg
push
add
mov
dec
push
outsl
cmp
icebp
cld
mov
xor
incb
gs
and
loopne
pop
cltd
gs
bound
lret
int
test
adc
adc
and
inc
push
push
and
dec
xor
add
xor
dec
stos
mov
aaa
dec
movsl
cmp
sarb
loope
lods
addl
xchg
test
mov
orb
xchg
cmp
test
xor
hlt
imul
xorl
ret
adc
insb
insl
imulb
leave
add
loopne
ds
imul
or
ljmp
xchg
xchg
mov
push
pop
aaa
push
aaa
imul
jmp
cmpsl
xor
lahf
ss
xor
pop
jnp,pt
push
xor
daa
mov
or
and
push
ss
dec
cmp
scas
push
xchg
or
icebp
scas
push
loopne
out
movsl
mov
loop
sub
mov
nop
out
or
jmp
icebp
adc
sar
orl
add
mov
loop
out
icebp
sbb
test
outsb
jg
movl
push
int
clc
and
push
xor
cmp
mov
aas
or
xchg
xchg
insb
or
inc
pop
sbb
out
sti
mov
xor
sti
inc
and
inc
jecxz
cmc
push
sti
lods
imul
sbb
pop
add
inc
push
movntps
push
fld
pop
mov
add
fildll
pop
mov
sub
std
dec
stos
aad
lahf
push
dec
mov
insl
aad
test
dec
lods
jp
ret
jnp
cmp
int3
add
lea
sbb
sub
cmpsl
inc
or
cltd
push
jne
and
stos
dec
add
gs
scas
out
call
popf
aam
rcrl
ja
and
mov
in
sbb
inc
inc
xor
sub
nop
xlat
in
inc
dec
mov
pop
mov
push
pop
or
clc
out
xchg
dec
js
sbb
faddl
inc
mov
mov
insb
mov
xor
insl
les
bnd
sub
inc
outsb
dec
imul
imul
cmc
jnp
rorb
loope
push
adc
test
lds
call
or
xchg
dec
mov
lcall
inc
mov
cmp
mov
push
jecxz
mov
add
xor
stc
aaa
jl
mov
negb
lods
mov
cmp
sbb
outsb
lretw
mov
pop
xchg
mov
testl
mov
in
sbb
nop
mov
std
mov
cmp
cwtl
add
shrl
stos
pop
nop
xor
dec
stos
push
hlt
addb
ficoms
dec
movsl
mov
pop
mov
jecxz
push
or
leave
xchg
imul
and
in
xor
repnz
mov
jae
inc
mov
das
shlb
fsubrl
lock
jecxz
adc
iret
jnp
mov
mov
dec
cmp
fdivr
cmp
push
adc
mov
push
shlb
popf
xor
dec
pop
out
into
mov
scas
mov
mov
test
int
ds
pop
and
inc
mov
jp
xor
insl
sub
inc
mov
out
push
or
xchg
popf
shlb
mov
cmp
mov
aaa
jg
add
dec
gs
shrl
push
subl
shr
in
mov
loopne
pop
mov
mov
xchg
bound
into
mov
test
ss
mov
adc
xor
rcr
popf
in
ret
stos
fnstsw
mov
adc
cltd
mov
lret
push
mov
jecxz
fwait
int3
loop
inc
sbb
push
dec
xor
adc
jns,pn
mov
xlat
imul
je
push
scas
aad
lahf
adc
sub
jns
icebp
mov
lea
xchg
gs
addr16
in
lcall
cmp
shlb
dec
ss
cmp
aas
or
push
mov
adc
into
mov
pop
stc
inc
fsubr
xor
jns
sbb
add
imul
cwtl
mov
add
ficomps
sbb
mov
int
test
sub
stos
fdiv
sbb
call
sbb
popf
sub
inc
mov
xchg
or
nop
test
pop
iret
daa
mov
adc
sub
pop
fnstcw
lcall
cmp
in
mov
nop
add
outsb
mov
idiv
mov
dec
and
sbb
cld
xor
pop
ss
fsubl
xchg
es
sbb
mov
or
jns
jl
xchg
mov
mov
dec
loop
sarb
xchg
xor
jne
fstps
outsb
sahf
dec
fcomp
lods
fisttps
and
mov
or
xchg
adc
lret
fxch
lret
in
mov
or
scas
test
or
stc
cmpsl
mov
outsl
enter
push
cmp
xor
push
or
daa
xor
jns
loope
and
ljmp
stc
jl
dec
and
xchg
push
aas
scas
mov
inc
int
adcb
jns
ss
mov
inc
lcall
aas
outsl
enter
xchg
inc
clc
xchg
outsb
cli
pop
xchg
dec
loopne
sub
lea
xchg
jp
inc
rorb
mov
xchg
mov
gs
pop
aaa
test
xor
cmpb
aas
fcomip
jns
mov
jns
insl
and
nop
jns
dec
mov
pop
pop
jg
sbb
dec
dec
pop
push
test
cmpsl
stos
push
into
int
jns
out
les
cld
pop
fimull
mov
push
lods
pop
fnstcw
aad
jo
out
popf
and
pop
jo
int3
xchg
lcall
push
xchg
pop
ret
pop
in
mov
xchg
add
xor
testb
testb
push
adc
cltd
cmp
add
dec
add
push
sub
loope
dec
mov
pop
mov
movl
pop
mov
dec
jae
inc
push
aas
jno
pusha
push
cmp
insl
imul
push
push
jmp
divb
adc
add
outsl
xchg
int3
fsubs
mov
movsb
ja
pop
or
add
lea
xchg
repnz
imul
xchg
insb
push
roll
addl
cltd
sahf
mov
sbb
xor
dec
or
pop
adcl
push
icebp
cmp
mov
ja
sbb
aas
mov
jl
inc
addb
lock
mov
movsb
das
and
cmp
mov
lret
in
add
adc
ss
imul
fadd
or
js
mov
push
cmc
push
sub
hlt
cmp
mov
mov
mov
dec
nop
test
cmp
or
mov
xor
mov
cmpsb
loope
imul
mov
pop
pop
lods
inc
stc
cs
int
fwait
sub
es
dec
pop
adc
stos
xchg
mov
pop
ss
lods
lahf
cmp
mov
mov
nop
sarl
xchg
cltd
mov
push
cmp
pop
pop
adc
mov
dec
adcb
xchg
dec
sbb
dec
insl
ljmp
mov
aas
jl
jecxz
inc
pop
add
int3
cmp
mov
loopne
dec
pop
lret
cmp
sub
or
stos
enter
lock
mov
daa
rolb
jns
mov
xchg
sbb
sbb
std
cmpl
adc
add
mov
and
nop
rcl
das
loop
adc
pop
cld
cmp
test
enter
mov
add
in
cs
pusha
loop
mov
sahf
jno
and
mov
fbstp
xor
jp
fucomip
ss
cmp
jb
scas
add
jns
mov
push
shlb
leave
xor
nop
mov
sbb
xchg
xchg
fcompl
sbb
pop
fs
cmpb
pop
xchg
mov
out
mov
xchg
jmp
popa
push
test
loop
fdivrs
cmp
imul
ljmp
dec
or
sub
leave
stos
xchg
jno
add
xchg
jae
push
add
sub
lret
ljmp
ror
pop
sbb
rolb
in
js
inc
ss
test
stos
iret
mov
psubb
jo
mov
inc
testb
jl
jno
cli
adc
xor
pop
and
cs
pop
das
jge
adc
sub
inc
add
or
push
push
mov
jle
gs
cli
push
inc
push
jmp
fistps
sub
adc
pusha
inc
addl
mov
in
sub
fdiv
mov
aaa
popa
aam
aaa
mov
into
or
sbb
dec
cltd
mov
sub
pop
in
iret
xchg
aas
cmp
les
push
inc
xchg
fisubl
sahf
mov
push
mov
fs
xchg
xchg
cmpsl
bound
or
iret
in
or
mov
jb
cld
mov
data16
inc
test
sub
dec
lea
and
add
ja
mov
and
xchg
inc
pop
jno
pop
mov
pop
int3
sbb
adc
insl
lret
fiaddl
cmp
lods
mov
mov
fs
sub
jo
cmpl
roll
sub
inc
add
int
pop
inc
iret
inc
adc
insl
xchg
out
enter
xchg
mov
mov
sbb
inc
jb
sub
sti
xor
pusha
out
jl
insl
adc
inc
dec
jl
lds
aam
push
mov
ret
hlt
mov
rorl
sub
push
or
loop
jecxz
pushl
cltd
enter
aam
mov
pop
imul
pop
and
hlt
mul
clc
mov
xchg
mov
mov
jnp
mov
dec
and
jp
sub
fisttpll
mov
popf
jne
push
and
mov
sub
insl
dec
das
xchg
das
xchg
dec
jb
adc
imul
jge
repnz
xor
test
mov
stc
inc
sub
jne
aas
mov
jmp
xor
lcall
add
dec
pushf
push
pop
into
pop
pop
cs
pop
rclb
jae
dec
es
insl
and
dec
loope
out
cmpsl
and
inc
push
cmp
or
cmp
lret
mov
aad
jno
mov
dec
push
ret
mov
sarl
dec
les
jecxz
lcall
cmp
aas
inc
cmp
sub
andl
adc
lret
das
enter
aam
mov
push
arpl
adc
lods
rcll
int
sub
and
and
push
mov
inc
jo
lret
iret
nop
in
jbe
fistl
nop
pop
dec
mov
mov
aad
push
adc
jl
pop
jae
cmp
push
push
into
popf
push
shrb
push
jl
or
fwait
cli
mov
stos
loope
rcl
mov
jae
imul
leave
iret
pop
stc
fs
outsl
sbb
call
mov
xchg
and
out
rcrl
sti
and
pusha
out
iret
js
int
nop
aam
jg
lods
lods
scas
movsl
mov
rcll
cmpsl
mov
pop
cmp
push
inc
inc
divl
faddl
inc
xor
dec
mov
add
stos
inc
inc
mov
mov
roll
mov
mov
push
in
lret
mov
xor
adc
std
lods
jecxz
sbb
ss
xchg
addr16
and
or
sahf
adc
andb
shll
not
xchg
inc
pop
push
xchg
jge
fwait
aaa
les
aad
inc
cmp
enter
sbb
mov
mov
mov
lea
mov
leave
jns
jnp
sub
cmp
mov
sbbb
mov
xchg
inc
std
sbb
dec
mov
outsl
sahf
fadds
sbbl
ss
mov
aad
adc
dec
cld
ja
adc
iret
jp
xor
flds
cmpl
xor
push
shlb
xor
jle
add
cmp
fcmovnb
mov
mov
jmp
call
jp
ss
leave
jge
push
jne
jns
mov
dec
mov
outsl
push
adc
push
jmp
incb
ret
pop
cmp
pop
scas
push
loope
dec
cmpsl
insl
inc
movsb
repz
and
pop
or
loop
push
lret
mov
into
sbb
and
inc
xchg
cmpsl
push
or
jno
push
cmpsl
push
lds
ret
fisubl
cmp
inc
cmp
fists
sub
pop
push
stos
pop
mov
adc
mov
fnstsw
adc
jns
add
loop
sbb
xor
leave
pop
mov
xor
leave
outsb
inc
inc
test
lcall
dec
push
push
lea
cmpsb
xor
pop
repnz
and
adc
mov
cmp
dec
lock
or
mov
shl
pop
cli
jne
sbb
xchg
xchg
das
arpl
mov
cmp
and
icebp
mov
cmp
cmp
les
sub
cmp
jl
xchg
dec
fwait
jp
dec
fstl
mov
aam
fpatan
pop
sub
sub
ds
data16
in
jbe
mulb
push
ja
xor
adc
and
fstl
int
clc
pop
orl
inc
ret
cli
lea
ret
fisttpl
loopne
and
fwait
xorb
out
sub
inc
jno
pop
pop
mov
ret
addl
rorb
mov
pop
push
inc
lcall
mov
add
lock
sub
scas
push
insl
ficompl
push
jmp
mov
pusha
or
pop
test
pop
cmp
ret
repnz
sahf
cmc
push
lods
pop
fcmovnbe
aaa
and
mov
inc
insb
sahf
out
jnp
mov
and
lcall
stc
scas
push
sbb
pusha
dec
mov
pop
sub
sahf
push
xor
xorb
fs
out
mov
pop
add
xor
shr
inc
sbb
sbb
fisubs
ljmp
pop
push
sbb
aad
js
ret
mov
mov
push
mov
stc
push
rolb
or
fadds
cmpsb
cmc
shll
aas
jae
xchg
cltd
or
jnp
cmp
inc
rcrb
add
jo
xor
sbb
ret
or
pop
test
xchg
or
lock
leave
pop
mov
lcall
data16
xor
scas
adc
fcomps
outsb
loopne
sahf
pop
mov
xchg
call
test
cmp
insl
insl
jbe
dec
mov
sti
jb
push
popf
std
outsb
hlt
into
push
or
adc
push
or
mov
out
mov
xor
lock
xchg
fimuls
in
dec
pop
sbb
jmp
test
rolb
mov
repz
in
xchg
je
sbb
lcall
pop
lret
hlt
add
fnstenv
ret
loop
aas
ror
insl
dec
adc
cli
das
les
jbe
mov
add
mov
pop
in
add
notb
daa
stc
mov
xor
rcll
and
pop
lret
push
dec
or
call
mov
dec
js
push
mov
movl
mov
jmp
and
mov
pop
mov
mull
sub
scas
scas
loop
mov
xchg
lea
mov
into
adc
imul
repnz
call
jp
mov
cld
fmuls
loop
rolb
lahf
imul
sbb
and
ror
add
mov
insl
repnz
fidivrl
mov
out
fwait
inc
aaa
leave
andl
popl
jmp
loopne
stos
aam
out
inc
loopew
fcomps
loope
in
fdivrp
in
aaa
popf
mov
mov
aad
je
bound
lock
pop
loop
out
outsb
sub
cld
push
pop
add
icebp
xchg
div
push
and
adc
push
addb
add
or
mov
adc
mov
es
in
dec
ror
das
ret
lea
int3
enter
xor
mul
cli
insb
jecxz
jg
dec
jbe
sub
pop
lock
pop
loopne
add
dec
test
mov
dec
popf
setne
lods
fcmove
push
xorb
cli
aam
in
pand
mov
and
out
push
in
adc
mov
sbb
and
dec
mov
push
aaa
nop
pop
jl
incb
lahf
cli
lret
fsts
and
sbb
imul
pop
push
mov
xchg
add
adc
ficoms
int3
push
sti
rsqrtps
jns
mov
in
sahf
insl
xchg
and
lods
mov
xor
push
push
fucom
jae
add
dec
jnp
mov
mov
hlt
push
daa
leave
pop
aam
bnd
call
dec
mov
add
adc
pop
rorl
lret
shll
leave
and
arpl
and
mul
jmp
sbb
and
mov
mov
push
mov
mov
pushf
sub
pop
pop
push
inc
pop
out
sbb
test
push
mulb
push
cs
mov
js
cmc
or
aas
mov
jae
aam
repnz
xor
and
mov
fs
mov
and
mov
fildl
cmp
mov
movsb
mov
inc
mov
dec
out
dec
call
das
ljmp
sbb
jo
cmp
inc
mov
outsb
outsb
push
rorl
mov
xlat
stos
mov
iret
pop
sbb
loopne
sub
xchg
stc
dec
shrb
fistpll
pop
pop
out
mov
push
and
mov
dec
js
jecxz
sahf
jne
fmuls
inc
xchg
mov
fdivrl
cmp
sarb
popf
adc
lea
mov
xchg
test
add
lahf
push
cltd
cmp
xchg
add
sbb
add
pop
mov
mov
jp
inc
xor
clc
insb
xchg
mov
add
pop
pop
psubsw
jg
aam
pop
lcall
call
pop
daa
int
dec
push
pop
dec
popf
sbb
push
jp
jae
sub
push
dec
dec
xchg
fsubrs
arpl
fbstp
loopne
outsl
push
test
sub
rorl
outsl
dec
mov
repnz
inc
mov
sbb
setl
fdivrl
inc
adc
mov
test
in
in
je
pop
xchg
frstor
pop
cmp
or
mov
xor
xchg
xor
jnp
out
cmpsb
sbb
ss
icebp
mov
xchg
sbb
mov
popa
dec
mov
scas
call
idiv
and
jmp
sbb
sbb
mov
outsl
mov
inc
test
fs
fstl
lcall
xor
ret
jp
inc
popa
pop
lea
and
mov
sarb
mov
gs
scas
lods
mov
inc
les
stc
out
push
jnp
cmpsb
jp
into
dec
push
les
xor
out
jne
imul
mov
mov
push
add
sbb
insb
testb
cmp
andl
sti
pop
mov
sbb
fwait
xor
push
mov
cltd
fs
test
xchg
repnz
faddl
dec
push
arpl
xchg
cltd
cmp
pop
xchg
cwtl
stc
fdivrs
pop
inc
imul
dec
fisttpl
jle
cmpl
mov
mov
add
int
cld
test
mov
das
xor
and
push
cmp
out
and
and
pop
pop
fincstp
js
cmp
mov
xchg
jp
es
and
mov
or
jbe
push
shrl
mov
mov
sahf
adc
lcall
and
mov
aas
dec
add
pop
and
mov
lret
or
rorl
cmp
sub
mov
icebp
adc
iret
jl
pushl
jb
daa
iret
add
inc
jg
lahf
repz
cmpsb
inc
ss
pushf
xchg
xchg
jl
mov
fdiv
inc
sbb
std
push
hlt
xor
hlt
inc
sub
push
adc
pop
mov
xorl
stc
sahf
ja
mov
leave
movd
pop
lds
cs
ljmp
pusha
pop
sub
jmp
inc
rorb
aad
leave
in
nop
es
pop
sub
inc
movsl
xor
inc
xchg
xchg
mov
in
popf
add
or
push
stos
shl
ret
push
dec
out
iret
popa
add
ret
ret
add
lcall
pop
add
data16
push
and
ds
mov
arpl
cmc
xchg
and
leave
add
cmp
ss
int3
jno
scas
push
sarb
shll
xchg
cli
sub
or
jle
sbb
sub
scas
js
mov
imul
mov
mov
or
outsb
sub
add
sti
rol
pushf
test
sub
pop
loop
lock
sub
neg
adc
jp
xchg
xorb
jo
fnsave
ss
loop
mov
inc
gs
cltd
mov
sub
out
imul
insl
adc
cmc
je
push
adc
mov
mov
jmp
cs
stc
pushfw
adc
xchg
or
dec
dec
xchg
mov
inc
clc
sub
mov
int3
mov
push
std
and
ficoms
xchg
dec
imul
mov
nop
dec
jmp
imul
popf
pop
shl
xchg
pop
mov
test
xchg
add
xchg
lods
push
scas
mov
pusha
cmc
sub
fcoml
pop
lods
or
pop
sahf
stos
jg
jmp
je
stc
sub
inc
add
flds
mov
es
sub
orl
dec
in
push
shll
mov
xchg
adc
push
adc
addr16
dec
test
inc
and
xor
mov
js
dec
dec
jbe
hlt
ss
mov
and
ss
outsb
push
adc
mov
stc
icebp
ljmp
sub
or
shlb
insl
xchg
inc
popf
inc
sub
and
in
inc
jge
sahf
lcall
push
jl
add
mov
pop
xor
std
rorb
insl
cmp
test
iret
pop
fbstp
pop
jl
das
lret
mov
jge
mov
push
sub
cmp
out
push
fwait
insl
call
push
sbb
psrlw
call
jns
mov
sahf
dec
cmp
scas
out
sub
pusha
js
cmp
ss
ljmp
pop
mov
lds
int
pusha
push
mov
add
sbb
popf
jle
jl
jle
scas
mov
xchg
out
rcr
push
mov
or
add
lds
sbb
insb
cmpsl
mov
roll
test
es
lds
sahf
mov
dec
sub
outsl
xchg
popa
sahf
insl
mov
cli
push
jg
mov
aaa
sbb
mov
pop
std
nop
and
xor
lods
push
mov
cld
test
in
add
sub
sbb
orb
add
outsl
call
sub
jp
in
pop
jle
xchg
pop
lods
push
adc
rcll
push
sbb
mov
adc
fs
sub
cmpsl
lods
inc
mov
std
loopne
fsubs
scas
mov
lds
push
movsl
xor
mov
jo
push
sub
cmp
stc
fdivl
inc
shrl
push
pop
inc
fwait
shrb
dec
in
lds
push
or
cmpl
fs
inc
or
mov
add
pop
int3
imul
adc
mov
add
mov
cmc
repz
sahf
ficompl
fstpt
push
aaa
lahf
loopne
xchg
dec
jno
in
inc
and
pop
dec
jmp
xchg
pop
imul
push
inc
out
and
call
lahf
push
pushf
add
mov
outsb
or
ret
popa
pop
cmp
in
jno
stc
out
jle
mov
fildl
dec
mov
iret
push
fucomi
cmp
cmp
and
aaa
cli
pop
mov
and
xor
lds
or
jp
popa
hlt
jb
and
pop
push
aaa
fists
jne
push
mov
sub
inc
jecxz
inc
dec
leave
mov
mov
pop
mov
lods
jmp
sbb
aam
push
leave
lock
enter
mov
add
xor
add
jg
cmpsb
ja
fldl
pop
bound
adc
sbb
pop
xor
clc
xchg
scas
sub
int3
test
dec
movsl
pcmpgtd
sbb
fstpl
pop
sub
or
or
popa
mov
inc
mov
inc
inc
add
lahf
popf
fidivrs
jg
mov
add
or
add
sub
data16
inc
mov
xchg
sti
sbb
adc
cld
leave
xchg
jbe
leave
rorb
mov
mov
add
jae
aaa
cli
mov
xchg
and
cmpsb
add
loope
pop
lock
test
pushf
jbe
movsl
and
lret
jl
je
mov
fldcw
out
jo,pt
or
out
mov
jnp
bound
push
int3
cltd
bound
jbe
ja
pusha
push
cmp
xor
pop
scas
xchg
aas
xor
aas
arpl
jmp
sbb
xchg
adc
or
xlat
pushf
sub
add
movsb
shll
rclb
ds
mov
xor
cs
add
or
jns
cmp
into
pop
arpl
xor
out
fiadds
xchg
and
into
adc
or
mov
dec
int
imul
popf
push
out
cmp
push
pop
adc
sbb
fs
and
add
add
aam
pop
push
mov
imul
ds
cld
lds
sbb
xor
xor
inc
hlt
daa
or
adc
rcll
xchg
sub
hlt
jmp
dec
xchg
fildl
mov
lahf
stos
call
push
dec
sub
insl
ror
add
ret
mov
cwtl
je
shr
cld
jne
dec
aas
shll
gs
loope
jb
imul
jne
popf
sbb
dec
cmp
ficoml
xchg
addr16
into
int
aad
in
gs
adc
cwtl
jmp
fstl
pop
out
fsubl
js
pop
mov
cmpsl
addr16
lret
or
adc
scas
mov
fsubrl
cld
in
sti
out
and
icebp
ret
out
std
mov
xchg
xchg
sub
jo
shrl
xchg
xlat
mov
cmp
jmp
inc
pop
add
inc
sub
mov
jno
pop
or
and
xchg
dec
dec
or
lcall
sbb
adc
mov
bound
mull
pop
sub
aad
and
ret
xchg
aas
sub
push
pop
cld
mov
aam
xchg
inc
ja
mov
mov
imul
pop
mov
mov
sbb
in
jp
xlat
and
inc
lock
inc
mov
popf
cwtl
add
sbb
in
cmpsb
push
mov
pop
in
ficomps
test
cmc
inc
fldt
movsb
or
rorb
ret
scas
arpl
pop
shlb
inc
cmp
in
cmp
leave
imul
mov
lahf
into
add
incl
push
leave
add
sub
je
mov
dec
push
adc
xchg
xor
imull
add
lret
mov
test
xor
and
shlb
and
xchg
dec
adc
sub
mov
shlb
lret
jno
sub
repnz
stos
pop
rorl
shrl
fidivs
push
testl
mov
inc
es
push
dec
dec
cmc
dec
pushf
fadds
xlat
movsl
xor
and
jge
aam
and
daa
dec
pop
mov
inc
shrl
xchg
pop
enter
jle
lret
adc
cwtl
ret
cmp
mov
pop
aaa
mov
cmp
and
nop
add
mov
mov
loope
cmp
mov
gs
dec
ret
push
dec
xchg
xor
pop
out
push
sbb
pop
pop
int3
pop
xchg
jnp
mov
scas
test
adc
mov
negb
test
mov
fsubl
cmp
xor
jo
or
lret
insl
mov
daa
lds
cmpsb
mov
outsb
out
cmp
and
pop
sbb
icebp
and
push
out
pop
imul
lods
pushf
sub
fbld
rep
pop
arpl
and
push
lcall
data16
xorl
dec
mov
in
shl
adc
pop
adc
call
leave
sbb
xor
mov
jno
push
ljmp
and
mov
push
shlb
loope
ucomiss
push
imul
loop
xchg
in
lea
add
lods
outsb
or
xlat
dec
add
adc
mov
xor
andl
cmp
jae
inc
ja
add
dec
rcl
xor
mov
into
imul
decl
ret
arpl
sub
mulb
mov
imul
into
xchg
jne
clc
insl
mov
sbb
cwtl
push
inc
and
mov
push
sbb
arpl
arpl
mov
scas
cmp
outsb
aad
dec
fldlg2
imul
scas
or
jg
mov
shrl
mov
jmp
dec
pop
jnp
popf
jb
mov
push
add
insl
jecxz
add
jne
and
pop
push
push
ret
inc
movsb
js
jne
jl
jnp
push
pop
cmp
lds
sti
mov
dec
mov
cmc
adc
pop
mov
test
xor
adc
cld
aam
mov
lahf
mov
push
sub
inc
lret
or
mov
push
into
add
aaa
xlat
ret
sub
xor
xchg
xor
dec
and
imul
mov
data16
idivb
add
xlat
dec
push
cmp
mov
cmp
repz
sbb
fucom
js
jge
js
or
inc
lods
mov
inc
mov
and
mov
mov
je
pop
push
mov
shll
test
popa
mov
icebp
shll
in
adc
dec
sbb
mov
and
addr16
adc
and
inc
mov
jge
mov
push
out
das
mov
xorl
xchg
jb
repz
arpl
or
lods
add
xchg
sti
aad
arpl
ds
xchg
mov
or
btc
pop
pop
cmc
fists
imul
inc
test
xor
loop
daa
rcll
dec
fsubs
add
loopne
cmp
nop
mov
fstpt
out
push
inc
loope
imul
add
std
out
adc
mov
dec
and
inc
lret
je
mov
aaa
fsts
dec
aam
jo
jmp
sbb
cld
js
stos
lock
pop
icebp
add
xchg
dec
dec
mov
add
mov
test
push
sub
pop
jmp
lock
fwait
sbb
je
add
xchg
loope
aaa
jne
pop
and
int
xlat
push
push
les
iret
imul
sahf
fistps
aad
fsubl
add
pop
xor
mov
mov
add
xlat
sti
inc
stc
or
and
hlt
add
into
xor
push
xlat
testb
out
cmpb
and
push
icebp
xchg
in
mov
and
pop
jne
jle
xor
jo
xchg
into
pop
cmp
aad
in
dec
ficomps
data16
lods
mov
scas
mov
pusha
shrb
xchg
or
scas
scas
pop
mov
cmp
aad
pop
pop
mov
rcrl
mov
mov
xchg
add
ss
pushf
ret
std
iret
call
aas
shll
inc
cmc
inc
xor
pop
cmp
cmpsb
or
push
lods
stos
les
mov
mov
or
in
je
loop
dec
pop
pusha
sub
daa
out
movsb
int3
jle
lret
mov
pop
addb
push
pop
sbb
and
adc
cwtl
push
pop
xlat
sbb
xlat
es
adc
in
arpl
xchg
inc
aas
int
arpl
inc
mov
mov
movsl
push
pop
shll
push
inc
xor
stos
push
jp
test
cs
lahf
cmp
dec
aad
stc
push
inc
push
repnz
cmp
mov
pop
cwtl
ja
lods
sub
ret
mov
adc
ljmp
aam
lea
and
push
in
scas
mov
and
jg
sti
pop
mov
mov
in
aaa
xchg
sbb
mov
test
xchg
cmp
stos
rcr
test
ljmp
popa
jne
push
int3
xor
or
lret
lcall
in
mov
adc
mov
xor
shll
inc
mov
leave
lds
mov
cld
xchg
xor
jmp
inc
enterw
outsb
or
fcmovnu
loopne
pop
cltd
notl
fisubrl
sub
inc
aam
pop
xor
mov
inc
pop
cltd
test
fcomps
adc
or
push
out
mov
sti
push
xchg
dec
and
lcall
mov
pop
jecxz
add
mov
and
lret
std
arpl
sbb
pop
xor
sub
xor
ficompl
fadds
adc
int3
push
mov
and
in
jge
dec
add
cmp
loopne
pop
add
jl
stos
cmp
push
or
jl
cmp
shrb
add
mov
mov
pop
jl
inc
jmp
cmpsl
xchg
fdivr
push
jb
pushf
sahf
push
fsts
neg
sub
cld
fmul
dec
ja
push
mov
sub
das
push
call
stos
sub
cmpsb
int3
inc
rorb
mov
aam
cmc
mov
sarl
xor
stos
adc
dec
lret
mov
cmp
mov
iret
adc
lds
push
pop
mov
and
test
mov
mov
mov
xchg
imul
cmp
insb
fbld
dec
cwtl
lcall
stos
pop
aam
pop
in
cmp
adc
rcrl
adc
add
mulb
fstpl
jmp
xor
pop
jecxz
xor
lahf
insb
adc
add
pop
add
mov
push
cmpsb
xchg
adc
shl
scas
lcall
adcb
or
push
fldl
sbb
les
das
aad
dec
sub
pushf
loopne
inc
pop
testl
and
cmpl
mov
pop
fucomip
mov
js
cwtl
inc
sbb
fldenv
lock
nop
or
adc
test
cmp
dec
jge
add
xor
ficompl
push
jne
or
mov
cmpsb
pop
addr16
sub
dec
push
pop
popf
pop
sub
mov
mov
cmpsb
push
test
jo
jno
leave
pusha
adc
rcl
mov
adc
add
or
fidivl
dec
jns
push
popa
and
inc
push
roll
adc
mov
xchg
outsl
sahf
insb
adc
push
pop
movsl
push
push
inc
lds
or
mov
mov
dec
inc
sbb
inc
inc
fidivl
xlat
adc
iret
cmp
ss
fmuls
push
js
xchg
pop
call
mov
inc
adc
mov
fidivs
ret
xchg
sub
dec
popf
loope
mov
adc
fbld
leave
lea
in
fstps
inc
popf
cmc
pop
xchg
inc
hlt
cmp
pop
push
xor
std
mov
fs
mov
aad
rorb
lods
mov
dec
jle
clc
cltd
test
adc
cmc
mov
dec
mov
adc
mov
insl
mov
js
out
dec
adc
cmp
aad
popa
aam
idivl
inc
icebp
or
push
add
push
repz
and
pop
and
inc
xchg
loop
call
loopne
cmp
mov
aam
push
hlt
sbb
jnp
into
popl
mov
mov
pop
inc
sub
popf
mov
mov
add
pop
fucomip
pop
xchg
mov
add
inc
xchg
xor
imul
mov
out
bound
lock
test
push
fisubl
sbbl
bound
dec
jmp
xchg
sub
adc
lds
dec
xchg
sub
pop
jno
in
jnp
adc
jmp
mov
aad
inc
inc
daa
add
jb
jae
lcall
adc
cmpsb
test
jo
jae
cmp
dec
xchg
inc
pop
or
mov
rorl
sahf
int3
xchg
adc
sbb
cmp
mov
lret
aas
dec
ss
mov
pop
push
imul
icebp
or
inc
leave
cmpsb
or
pop
xor
pop
sub
rorb
sub
push
jbe
loopne
cmp
cltd
xchg
adc
loop
loop
dec
sub
nop
mov
mov
add
sub
inc
push
cmpl
xor
jns
outsl
add
in
or
shlb
test
jecxz
sub
pushf
adc
push
jno
mov
fsubrs
and
mov
les
sbb
test
lret
nop
sbb
mov
out
jo
aam
test
aad
jno
and
imul
jns
push
nop
and
ror
clc
lahf
push
cld
scas
cwtl
jnp
mov
push
imul
mov
outsb
sbb
mov
or
test
jb
mov
dec
jp
inc
lret
sahf
add
addr16
nop
dec
inc
in
fstl
dec
outsl
jle
xchg
insb
movsl
push
dec
xchg
and
jns
test
mov
push
xor
enter
sbb
and
lock
gs
pop
stc
add
movsl
dec
sub
mov
clc
push
xchg
dec
mov
jl
mov
adc
inc
cmp
push
bound
movsl
xchg
push
cmp
inc
mov
push
mov
loopne
xor
fdivr
cmp
lcall
jl
dec
ja
call
in
popf
fmuls
fisubl
popa
pop
dec
adc
and
cld
nop
sbb
mov
or
fs
stos
mov
imul
mov
inc
and
test
or
dec
dec
mov
cmp
lods
inc
aaa
xchg
lret
cltd
scas
push
push
enter
popf
test
out
daa
mov
imul
enter
imul
xchg
xor
daa
ret
cwtl
ds
in
cmp
lock
dec
mov
mov
jns
xor
fstl
jmp
inc
or
pop
push
lds
outsl
mov
in
shrl
int3
cli
andb
xor
aam
adc
mov
mov
mov
push
xlat
sub
xchg
pop
sub
mov
pop
repnz
push
rolb
add
xor
adc
fidivrs
loopne
fidivrl
shrl
ja
cmp
pop
cmp
adc
test
ret
imul
mov
sbb
arpl
push
push
mov
cmp
sub
aas
inc
data16
test
mov
inc
sarl
negl
pop
lds
ja
aad
divb
call
add
jle
and
dec
fbstp
imul
mov
les
xor
rcrl
shll
or
lahf
jno
cmp
mov
jnp
sub
outsl
aaa
in
insb
imul
jge
cltd
dec
push
add
sbb
fdivl
fwait
in
jnp
scas
xor
mov
or
mov
and
xchg
insb
adc
not
ret
xchg
stc
jmp
subb
js
adc
fildl
sbb
pop
rorb
fwait
lahf
push
cmc
into
cli
paddsw
movsl
mov
push
xor
jo
mov
or
dec
jle
jp
inc
xor
std
mov
std
pop
and
or
pop
xor
out
insl
fs
fcomps
cmc
xchg
jmp
les
lret
pusha
push
inc
subb
sbb
fiadds
fwait
insl
jnp
stos
inc
or
mov
and
ljmp
and
mov
scas
lods
jmp
lea
iret
xorb
or
sbb
push
jmp
scas
aas
popf
sbb
mov
leave
ret
aas
dec
hlt
adc
xorl
popf
add
movsl
dec
rcl
aas
fimull
or
int3
mov
shrl
test
sub
push
xchg
mov
cmp
and
adc
dec
aam
test
pop
push
shld
mov
ficoms
into
add
cmpb
aad
jne
icebp
pop
cmpsb
repnz
lods
fld
sub
mov
loopne
or
ds
rcrl
lds
cld
pop
cltd
repz
cld
sub
inc
inc
push
cmc
dec
sbb
cs
test
or
or
pop
gs
pop
outsb
fwait
mov
les
xchg
call
jmp
mov
inc
repz
imul
and
rorl
das
aad
cld
out
call
jg
aam
iret
xor
mov
mov
test
pusha
outsl
aaa
sbb
test
iret
repz
dec
test
mov
loopne
fwait
inc
dec
xchg
call
mov
xor
adc
adc
fs
add
shr
jo
ficomps
pop
push
icebp
mov
push
dec
jg
mov
or
xchg
scas
and
cmp
sub
leave
adc
adc
in
mov
loope
adc
mov
xchg
stos
jo
popa
inc
cmp
lds
rdtsc
push
and
fstpl
dec
lcall
mov
stc
mov
hlt
mov
stos
inc
mov
sub
add
mov
hlt
and
lret
imul
je
inc
dec
adc
mov
dec
inc
cmp
call
nop
add
shll
aam
sub
adc
test
cvttps2pi
rcll
adc
inc
xor
mov
andl
scas
xlat
cmp
jo
or
js
js
xor
test
leave
and
sbb
lcall
or
aad
dec
lret
loope
pop
jae
xchg
adc
dec
jo
movsb
data16
xchg
pop
sbb
pop
jmp
push
mov
lret
fwait
dec
mov
mov
divb
mov
mov
mov
mov
fstpl
pushf
or
cmp
gs
dec
fs
xchg
sbb
sti
aam
pop
test
push
dec
rorl
jle
lods
mov
fs
mov
xor
shrl
mov
lock
push
lahf
fdivrl
push
xchg
cltd
nop
shrb
in
fmull
xchg
push
mov
cmp
push
loop
and
xor
mov
ror
sahf
push
fisubs
cmp
xchg
loop
and
lea
enter
out
pop
cld
push
jl
in
cmp
xchg
push
in
nop
mov
hlt
jne
xchg
lods
sti
xor
idiv
pop
inc
push
faddl
cltd
fistpll
call
insl
jmp
es
xchg
inc
inc
sub
and
sub
mov
rorb
icebp
push
rorl
inc
shlb
mov
or
xchg
push
mov
mov
xchg
and
jge
incb
pushf
js
je
in
dec
fdivrl
inc
jo
adcb
loopne,pt
es
dec
jne
test
int
adc
js
jnp
int3
int3
fldl
mov
xor
cli
popa
hlt
mov
js
test
xor
lcall
sub
fs
mov
repnz
out
sbb
fdivr
rorl
hlt
es
sbb
add
inc
xor
xchg
pushl
pop
push
pop
xchg
in
add
test
test
sub
lock
in
lahf
leave
pop
push
xor
gs
fistpll
jb,pn
rcll
repz
shrb
mov
mov
mov
in
into
jns
shll
xlat
xor
jae
sbb
push
pop
cs
sub
jae
les
lea
mov
ljmp
xor
fiaddl
fnsave
lret
push
jg
inc
ret
loop
lret
addr16
mov
mov
dec
adc
mov
add
adc
shll
das
dec
jo
mov
lcall
cltd
adc
adc
repnz
or
popa
idiv
out
pop
xlat
inc
lahf
mov
sti
pop
and
test
cwtl
and
dec
add
mov
cltd
xlat
inc
mov
test
scas
imul
ret
and
repnz
and
jg
sbb
ret
ja
js
mov
loopne
pusha
sub
test
adc
mov
push
jb
imul
fildl
and
mov
dec
xlat
loopne
or
loopne
adc
decb
add
and
inc
sub
out
xor
imul
add
cli
insl
jmp
fstpt
leave
and
repnz
xchg
into
or
pop
jmp
xchg
lods
adc
cmp
iret
dec
add
sub
sbb
sbb
rcrl
push
insl
xor
push
add
push
or
enter
push
lret
mov
fwait
xchg
and
jb
ja
push
lcall
mov
jp
and
mov
not
jmp
ljmp
jne
popf
lea
and
incb
xchg
mov
adc
mov
inc
es
jp
jmp
addb
neg
fndisi(8087
sbb
daa
in
out
xor
add
mov
lcall
dec
dec
ret
lcall
jne
sub
test
pop
xchg
movsb
inc
mov
cli
inc
adc
js
lds
mov
cltd
sub
pop
popf
sbb
js
sbb
cmpsb
cmp
add
mov
mov
ss
int3
push
lds
lcall
lahf
or
push
jno
hlt
jae
ret
xchg
dec
inc
sbb
mov
into
je
sbb
adc
sbb
call
xor
fsubs
mov
inc
xchg
sahf
mov
sub
pop
sbb
mov
xchg
xchg
fsts
popa
in
sub
fidivs
outsb
sub
mov
and
adc
mov
fistpl
pusha
icebp
adc
add
outsl
iret
jno
nop
xor
jno
dec
cwtl
out
fwait
or
dec
and
sub
repnz
loopne
imul
adc
and
mov
out
add
pop
das
es
sub
and
add
test
jo
arpl
or
jp
pop
daa
inc
aam
mov
neg
dec
push
fimuls
dec
ficoml
out
icebp
or
pushf
daa
adc
dec
jno
scas
lods
dec
pop
jb
lods
jb
leave
pop
sbbb
jl
add
sbb
and
cmp
adc
leave
or
jle
mov
std
mov
xchg
push
repz
add
popf
mov
push
xchg
pop
pop
out
rorb
adc
jmp
jae
lea
sub
lret
or
int
pop
push
cwtl
ljmp
push
ja
pushf
inc
jae
mull
arpl
mov
setge
cmp
sub
jae
mov
pusha
xchg
addr16
cmpsb
cmpsb
xchg
jns
dec
out
fs
mov
mov
push
jecxz
out
fdiv
movsb
jno
ret
outsb
push
imul
add
in
jae
mov
dec
mov
sbb
inc
sti
push
test
fcmovb
pop
cmp
lods
mov
lret
cmp
and
mov
imul
mov
sub
mov
repz
xchg
adc
repz
lcall
mov
outsl
leave
mov
mov
sub
pop
mov
hlt
cmp
pop
lret
sub
in
xor
xchg
pop
or
mov
je
lret
out
imul
jp
xlat
pop
out
lea
cmpsb
imul
mov
mov
ljmp
jns
mov
mov
push
dec
movsl
xchg
test
and
call
xchg
rcll
push
ss
shlb
or
movsl
xchg
lahf
sbb
and
fimull
mov
mov
xchg
insb
mov
lcall
xor
jnp
imul
pop
xchg
loope
clc
mov
or
inc
movb
outsb
pop
jbe
faddl
sbb
lret
add
fsubl
fldt
ret
sahf
cmpsb
mov
or
nop
adc
or
cld
popa
pop
aam
pop
pop
lods
insb
out
push
mov
or
sti
rorl
sahf
loopne
pop
cmp
push
in
je
xchg
mov
and
in
lahf
pop
jecxz
lahf
inc
outsl
jbe
push
or
add
mov
or
out
or
hlt
jecxz
xchg
inc
xor
mov
or
jns
xlat
sti
adc
fisttpl
movsl
into
lds
cmpsl
ljmp
mov
test
push
mov
out
rcl
xchg
faddl
stos
shlb
scas
push
cmc
and
jnp
push
mov
shlb
xchg
xchg
jle
sbb
loope
sub
fcom
sub
or
jecxz
jg
jns
icebp
mov
jb
testb
sysenter
fisubrs
pop
int3
orl
mov
pusha
jmp
or
out
cmpsl
lahf
sar
mov
sub
sahf
aaa
fs
mov
sub
fnstenv
loop
fildl
insb
das
addr16
mov
lret
ljmp
clc
scas
fcoml
pop
cmp
xchg
iret
loop
adc
data16
fcmovbe
hlt
cltd
fimull
mov
mov
data16
data16
mov
jg
sahf
out
inc
xchg
push
mov
hlt
rcrb
cmpsb
ror
push
add
pop
loop
xchg
inc
xchg
xor
xchg
sar
cmpsl
lahf
pop
arpl
sub
jmp
add
sub
jae
into
push
push
mov
movsb
jge
xor
dec
jnp
push
dec
dec
push
vfnmaddps
jns
outsb
bound
xchg
adc
xchg
loopne
mov
test
ss
out
das
mov
outsl
and
jle
cli
xorb
inc
xorb
cmpsb
fs
dec
aaa
lret
jnp
testl
in
mov
mov
lods
push
cmp
lcall
mov
and
fldenv
xchg
decl
imul
jne
sbb
jecxz
push
and
pop
sarb
imul
mov
fxch
inc
jle
cmpb
sbb
or
or
lds
xchg
jecxz
mov
sub
cmpsl
or
mov
aam
pop
inc
hlt
mov
addr16
ljmp
aad
loop
movaps
or
repnz
sarl
cwtl
rorl
lahf
dec
xor
call
das
ret
fldl
xchg
and
mulb
js
mov
shrl
adc
xchg
fmul
dec
mov
push
or
inc
mov
insb
sbb
mov
dec
into
pop
rorb
add
xchg
pop
jb
mov
mov
mov
es
pop
in
cmp
add
mov
sbb
jle
fs
or
es
xchg
adc
ret
mov
jae
pop
mov
push
add
xchg
insb
movsb
fcmovb
movl
xor
sahf
and
lds
xchg
and
aas
rcr
push
or
ds
in
popf
mov
imul
mov
xor
and
dec
daa
scas
fildl
add
out
iret
icebp
push
pop
sub
and
jns
adc
sti
daa
stos
xorb
push
add
clc
mov
ljmp
jne
loopne
js
push
mov
cmpsl
out
inc
xchg
daa
pop
jae
adc
mov
xor
stos
adc
test
mov
adc
sahf
and
xchg
push
sub
sbb
idivl
outsb
xchg
push
sarb
pop
sub
leave
nop
scas
jo
dec
xchg
inc
mov
ror
push
cmp
enter
stos
fildl
subl
lret
mov
mov
lahf
adc
push
lret
mov
out
inc
add
pop
mov
xchg
in
fnsave
in
xchg
sarl
daa
insb
or
dec
cmpsl
enter
pusha
imul
insb
xor
add
mov
pop
das
jnp
mov
xchg
sub
pop
push
insb
pop
dec
push
insb
je
add
cmp
in
in
jo
or
xchg
dec
int
dec
sub
dec
js
pop
xchg
rcrl
mov
enter
je
pop
mov
daa
mov
cmpsl
push
imul
lds
in
orb
and
out
subl
sub
sbb
bound
add
pop
push
stc
rcr
mov
fptan
loopne
or
xchg
adc
je
in
xlat
sbb
subl
jl
sbb
setno
dec
mov
fstl
pop
cmp
in
fs
or
or
aaa
mov
out
mov
mov
xchg
sub
test
mov
pop
std
cmpb
inc
or
cmp
ret
jae
pop
enter
push
arpl
sub
sbb
nop
mov
pop
pop
mov
dec
jnp
test
in
ljmp
cmpsb
cmp
hlt
mov
mov
in
scas
dec
xor
lds
xchg
ret
mov
jns
repz
shll
mov
jl
xor
pop
pop
push
repz
mov
fscale
inc
arpl
xor
fstpl
mov
sti
aas
xchg
xor
loop
push
pop
mov
gs
and
push
mov
push
out
fimull
dec
icebp
xchg
fstpl
jle
addr16
push
subl
js
imul
inc
mov
sbb
ljmp
test
aam
cmp
fstl
es
call
mov
sbb
outsl
aaa
subb
cmpsb
push
aas
add
shlb
mov
loope
xor
ljmp
out
mov
ficomps
push
data16
and
and
inc
aaa
pop
pop
cs
popa
cwtl
mov
mov
out
pop
lahf
jge
mov
sbb
movsb
inc
sti
mov
iret
add
cmp
cmp
sub
int3
inc
mov
lods
pop
push
dec
es
inc
cmp
mov
out
pop
das
and
adc
push
pop
sub
lret
cmp
jnp
dec
xlat
int3
sub
adc
and
lcall
outsl
xchg
mov
sar
sbb
push
mov
cmc
ja
mov
fwait
cmp
dec
mov
mov
mov
rcl
iret
sub
out
jl
insl
popf
das
sub
scas
or
loop
and
scas
xor
nop
dec
lock
orl
ss
repz
xchg
cmp
xchg
pop
in
lods
push
adc
fidivrs
mov
ja
mov
outsb
xor
in
addb
mov
sub
dec
xor
dec
arpl
les
sbb
sbb
leave
loope
push
enter
mov
cmp
mov
mov
push
or
xor
icebp
inc
add
outsb
shlb
cmp
test
insl
mov
jg
push
sbb
imul
jmp
bound
mov
inc
int3
adc
jb
ficomps
gs
cs
out
cwtl
arpl
jbe
in
push
aaa
pop
fcomps
jg
hlt
mov
nop
pushf
ljmp
inc
lods
fistl
scas
inc
in
clc
xchg
mov
dec
jbe
gs
int3
sbb
inc
xchg
lods
sub
sub
mov
xor
lods
push
mov
mov
shl
popa
popf
inc
andb
jns
out
hlt
in
pop
and
pop
cmp
in
aas
sarl
lahf
pop
fsts
in
loopne
movsl
dec
push
adc
mov
out
cmpsl
mov
mov
aaa
mov
xchg
addr16
xchg
js
je
out
or
mov
js
das
les
cmp
xchg
push
adc
ret
xchg
xlat
hlt
mov
out
and
into
jbe
daa
add
push
and
or
add
xor
rcr
imul
jp
xchg
popf
shr
inc
and
xchg
jp
push
jecxz
sbb
aas
icebp
xchg
call
or
scas
fcomp
hlt
inc
push
cli
fnstcw
jmp
lods
sbb
jge
dec
jae
inc
xchg
cmc
adc
sub
mov
int3
cmpsl
jne
ljmp
push
add
stos
adc
dec
dec
test
and
out
bound
push
and
and
test
cmp
and
cmpb
fistpl
push
ss
loopne
rorl
mov
inc
mov
xchg
mov
pop
or
inc
loope
lock
loop
aas
stc
repnz
push
jb
mov
out
aad
mov
sub
enter
mov
pop
and
jae
cmp
data16
push
lret
leave
and
sbb
lret
out
fdivl
cmp
fnsave
shrb
fcoms
xor
jo
dec
sbb
push
mov
out
movsb
add
add
fs
mov
shll
mov
stos
xor
sti
fmuls
push
and
ret
mov
mov
cmp
xor
push
cmpsb
orb
pop
fwait
inc
xlat
js
lret
ja
xchg
cmp
xor
bound
push
out
fwait
sarl
sub
ret
das
push
push
pop
scas
icebp
sbb
cmp
xchg
les
imul
or
les
sub
into
push
imul
sub
mov
js
movsl
ret
and
out
sahf
xchg
bswap
sub
sub
mov
scas
popf
scas
sbb
or
cmp
sbb
mov
cltd
fiaddl
es
das
jnp
or
adc
xor
dec
insl
push
movd
cli
int3
and
cmp
pop
adcl
clc
mov
rcrb
pop
xor
pop
jnp
in
cmp
mull
mov
outsl
imul
sbb
dec
or
jp
lret
push
xor
iret
pusha
or
stc
cmpsl
jns
lret
cmp
jb
fwait
arpl
lods
ljmp
fistpl
adc
pop
arpl
movsbl
jg
cmc
stos
add
pop
int
lea
xor
xchg
or
mov
push
out
push
xchg
push
out
rcl
mov
mov
mov
imul
and
ret
push
or
push
popa
mov
popa
dec
add
or
loope
inc
mov
fldenv
add
cld
push
jnp
into
add
push
and
in
push
test
mov
mov
mov
sbb
sub
insb
iret
sbb
call
dec
adc
mov
aaa
arpl
inc
lea
repnz
sqrtps
gs
adc
adc
mov
xor
mov
es
add
ljmp
mov
dec
es
or
fisubl
movsl
push
lret
repnz
mov
xchg
xor
cld
mov
mov
popa
push
nop
pop
jbe
pop
ja
mov
cwtl
gs
scas
sar
dec
incb
mov
movq
test
or
xchg
daa
xorl
leave
push
adc
test
xlat
xor
fildl
call
add
inc
leave
std
adc
insl
out
or
js
popf
fldt
mov
idivb
add
adc
xlat
and
jmp
daa
call
xchg
test
inc
bound
loope
ljmp
and
cmp
ds
add
dec
bound
mov
bound
mov
mov
xor
sar
mov
xchg
xchg
mov
and
sbb
pusha
loope
or
outsl
cmpb
icebp
cmp
clc
jmp
cwtl
jo
dec
cmp
pushf
aas
loop
mov
mov
cwtl
clc
lret
faddp
and
push
xor
or
mov
icebp
aas
push
cmp
mov
mov
outsl
dec
and
and
rolb
xchg
cs
xor
or
cmp
cmp
mov
adc
icebp
std
pop
cs
cmpsb
push
pop
cwtl
in
push
and
dec
inc
bound
pop
dec
leave
sti
fsubp
inc
mov
jl
jae
inc
dec
xor
xchg
and
lods
sub
or
movsl
mov
adc
jae
popa
ret
cli
cmc
cs
mov
dec
test
cmp
xchg
sti
sbb
xor
fidivrl
sbb
mov
insb
sbb
lods
mov
fs
pop
vmovhpd
mov
jecxz
sub
mov
jne
mov
outsb
cltd
mov
push
and
mov
aas
popa
pop
jo
ljmp
mov
iret
cmp
xor
fwait
lahf
adc
sbb
sub
int3
add
pop
pop
outsb
test
out
push
sub
adcl
in
jg
enter
lret
add
shll
jmp
sbb
rolb
and
aam
push
out
cli
sub
dec
jbe
adcb
jg
cltd
sbb
fsubl
popf
sub
in
or
xchg
push
insb
and
and
push
in
out
popf
jmp
loopne
mov
xor
lock
adc
dec
idivl
sti
rcr
pop
push
mov
or
call
xor
adc
or
inc
in
add
loope
out
fnstcw
addr16
or
pop
and
push
test
stos
dec
jne
jbe
pushf
shll
repnz
loopne
adc
into
push
and
enter
mov
jne
cli
xchg
das
mov
pop
bound
ds
repnz
sbb
out
jmp
testb
insb
shll
cmpxchg
clc
leave
xor
pop
repz
xor
roll
mov
jge
xlat
mov
push
js
aaa
mov
outsl
and
fnstsw
andl
add
and
imul
lock
push
pop
xor
mov
pop
aas
cmc
in
clc
stc
xchg
js
xchg
xor
mov
int
add
inc
subl
pop
mov
sub
test
lret
aaa
sub
mov
ss
ret
xor
sbb
cs
or
dec
push
inc
cmpsb
jp
dec
jge
cmp
jns
outsl
lods
subb
cmpsl
fidivrs
cs
int3
ss
inc
orb
sub
movsl
repz
xchg
lret
mov
sub
in
jb
sub
and
fcoml
xchg
and
and
aam
imul
inc
sti
and
sub
lret
mov
lods
sbb
xchg
jne
adc
sarl
hlt
out
sbb
xchg
mov
mov
jg
inc
xorps
push
in
push
iret
shlb
sub
fcmovbe
push
nop
addl
aas
scas
rcll
orb
xor
jecxz
aam
mov
cmp
sbb
mov
addl
sbb
push
subl
ss
sbb
or
dec
or
or
and
fadds
lahf
lods
roll
mov
and
xchg
and
test
pop
mov
xor
cli
and
add
es
and
insb
out
push
dec
aad
push
and
test
arpl
fstps
sbb
pop
adc
xchg
push
sbb
sub
daa
gs
or
lock
out
adc
pushf
xchg
and
adc
test
lcall
stos
lret
andb
jnp,pn
cltd
push
sub
cmp
lods
pop
jo
lahf
pusha
cmpsl
push
inc
les
leave
scas
rcr
rclb
mov
jns
aam
sbb
dec
add
sbb
xor
aam
mov
inc
mov
adc
xor
cmpsl
inc
cmp
inc
out
aas
fstpl
jmp
insb
mov
xor
clc
aaa
mov
out
dec
xor
movsl
jbe
stos
push
stc
cmp
cmp
jae
xchg
sub
icebp
add
xchg
popl
dec
nop
ljmp
cmpsl
inc
add
push
cmp
sub
mov
push
mov
sbb
inc
inc
xchg
das
jp
out
push
fldl
sub
or
fistpll
stc
icebp
sub
fidivrl
pop
test
fists
add
push
mov
xor
inc
fisubs
shld
addr16
ss
adc
aad
movl
int
or
fiaddl
outsl
stos
stos
sbb
in
scas
add
int
aam
xchg
fsts
in
pop
fidivrs
popa
daa
or
xchg
icebp
mov
mov
add
fndisi(8087
cmpl
pop
xor
pop
sbb
je
inc
ja
lcall
pop
push
cmp
rcll
bound
daa
sqrtps
jg
fidivrl
pop
dec
pop
adc
ds
dec
or
push
adc
dec
dec
mov
mov
push
sbb
sub
jo
shll
xchg
pop
jne
cpuid
or
insb
fisubs
loopne
fmulp
dec
or
adc
add
shll
and
xchg
out
xchg
cwtl
lret
push
pop
fisubl
sub
xlat
cli
or
mov
mov
add
sbb
sub
cmp
jno
shlb
jne
arpl
push
ds
sbb
and
fistpl
rol
hlt
cmp
aam
std
push
and
add
stos
xchg
fs
mov
lea
lcall
popa
mov
mov
add
loopne
mov
cmpl
orb
lahf
cmpsb
inc
dec
movsb
mov
cld
fstps
ret
lahf
rcrb
ss
mov
sub
rorl
test
inc
mov
je
fisubs
fwait
into
xlat
ljmp
pusha
popa
or
out
xchg
fstpl
add
testl
ss
jl
test
je
cmp
push
mov
inc
mov
pop
or
mov
xchg
into
in
stos
into
lds
fwait
xor
sbb
into
push
movd
cld
mov
add
add
push
sbb
xchg
mov
and
mov
arpl
xor
jne
adc
jecxz
xchg
cmp
xor
sbb
xor
dec
jb
popl
lret
mov
or
fcoms
popf
pop
sahf
mov
or
jne
cmp
insl
mov
mov
sub
mov
adc
enter
testl
les
fstpt
sbbl
idivb
movsl
in
jbe
andl
inc
test
dec
orb
jbe
inc
and
push
push
or
sbb
loop
push
push
lret
mov
roll
lods
xchg
push
iret
mov
sub
and
ljmp
and
movsb
dec
and
pusha
cmp
cs
cmpsb
cmp
jns
int
repnz
ret
fiadds
xchg
push
push
pushf
or
xchg
cmp
out
sbb
loope
xor
push
repnz
cmp
push
push
imul
sahf
adc
aas
rep
or
push
repnz
mov
call
les
xorl
insl
mov
cmp
cmp
xchg
fwait
mov
mov
movl
out
pop
push
or
dec
jns
and
push
outsb
adc
dec
stos
push
out
das
arpl
psubw
sbb
sub
std
push
pop
or
pmaxub
dec
lods
inc
mov
mov
dec
and
cmp
cmpsb
lcall
jbe
mov
pop
xchg
incl
mov
jg
in
les
sub
lret
cltd
ja
testl
push
subb
sahf
pop
jle
pop
push
mov
xor
xor
xchg
lods
popa
arpl
mov
insb
cli
out
sub
mov
aad
push
jns
popf
lods
jp
arpl
stc
test
and
es
daa
leave
inc
iret
outsb
repz
call
aaa
xchg
bound
cmpsl
lret
mov
mov
int3
or
popa
fbstp
inc
mov
nop
jecxz
popa
in
test
dec
fs
add
insl
jnp
jo
fists
js
jmp
push
dec
dec
shll
adc
mov
adc
or
fs
mov
jbe
add
dec
add
mov
lahf
xchg
cmpl
dec
lock
mov
pop
add
pop
inc
sub
into
sbb
loopne
inc
sub
xor
pop
sbb
loope
stos
jecxz
loopne
pushf
cmp
pop
mov
push
push
sbb
in
jle
in
loope
add
push
add
xlat
mov
cmc
pop
rorb
repz
inc
mov
into
loop
jnp
cmp
aam
lret
push
fxch
pop
xchg
or
out
loop
pop
iret
dec
dec
push
pop
arpl
sub
jae
xchg
pushf
lahf
push
pop
in
jne
das
in
ret
lret
into
pop
inc
sbb
lea
push
mov
jmp
les
orl
shll
pusha
leave
or
pop
jecxz
sub
jl
iret
stos
xor
das
ljmp
fs
xor
sub
lods
fmull
mov
push
pop
inc
out
lods
test
pop
clc
outsl
mov
mov
adc
sbb
fstpl
dec
xorb
fs
push
scas
mov
push
push
dec
mov
mov
in
cltd
sbb
imull
sbb
shr
popf
lret
movsl
cmp
fildl
push
dec
mov
shr
mov
xchg
fwait
xchg
mov
or
xor
fsubs
pushf
cmp
std
add
jge
pop
stos
nop
xchg
pusha
jno
mov
lret
fdivrs
ss
xor
push
mov
pop
mov
sbb
fmul
gs
and
mov
jl
nop
repz
imul
inc
add
subl
imul
sub
in
addr16
xchg
movsb
adc
aas
jnp
loop
push
scas
adc
push
lock
jge
shlb
xchg
mov
imull
and
das
dec
shl
int
push
and
add
jne
sub
je
mov
mov
xchg
push
push
mov
ljmp
dec
xchg
push
mov
dec
sub
push
cwtl
std
mov
and
push
pop
or
mov
pop
add
outsl
lahf
inc
mov
xor
mov
pop
mov
int
mov
pop
xchg
cli
xchg
push
mov
scas
sub
jl
cwtl
cld
mov
imul
jle
adc
jle
les
stos
stc
and
scas
push
fildl
push
call
jl
stos
outsb
pop
sub
sbbb
mov
lea
fdivs
xor
cli
push
popf
test
cmpb
inc
bound
xchg
push
xchg
in
sub
and
pop
xor
arpl
scas
andb
mov
rcll
inc
pop
fstps
add
push
or
in
fisttpl
pusha
or
leave
out
jle
push
jno
xor
aad
in
stos
addb
imul
dec
div
push
cmp
jbe
je
and
and
test
xor
test
or
in
adc
xor
lcall
sub
push
movsl
jno
inc
xchg
movsl
mov
test
mov
xchg
adc
scas
cmp
jp
mov
jp
ss
outsb
xchg
pop
or
inc
jo
movsb
sub
hlt
int
mov
repnz
push
jl
push
movsl
lods
jmp
adc
jnp
push
sub
jmp
scas
cwtl
mov
inc
ja
insl
xor
int3
jl
push
pop
outsb
sub
mov
mov
call
pop
andl
test
fs
push
ljmp
jl
out
mov
dec
ja
dec
imul
or
jb
and
push
repnz
dec
xor
addr16
stos
hlt
arpl
cmp
out
jmp
xchg
aam
and
popf
xor
ss
loopne
mov
mov
outsb
lods
int
in
push
or
mov
inc
mov
das
mov
addr16
inc
pop
xor
mov
add
dec
inc
inc
push
jo
dec
mov
pushf
push
add
cmp
lar
imul
push
leave
jg
ss
pop
sub
repnz
cmpl
jae
or
push
xor
jnp
fsubs
outsb
stos
push
jmp
add
jns
and
pop
sahf
mov
or
fisubl
sbb
push
mov
repnz
mov
outsb
inc
rolb
cmp
mov
sub
xor
scas
inc
cmp
ja
dec
or
fisttpl
jno
mov
stc
pop
imul
add
fdivrs
pop
cmpb
jnp
cmp
xchg
inc
mov
orb
fwait
mov
faddl
add
dec
xchg
call
push
add
outsl
push
mov
dec
cmp
dec
hlt
mov
sbb
or
loopne
out
sub
xor
lret
inc
push
addl
inc
mov
mov
ss
sarl
jg
and
ror
pop
or
lods
fnstenv
sbb
jns
and
xor
mov
imul
inc
in
pop
nop
jp
mov
or
sub
xchg
out
enter
add
mov
xchg
xor
dec
hlt
inc
test
jns
mov
sub
sub
aam
push
sar
sahf
mov
aam
ss
push
mov
xchg
push
sbb
out
ret
sub
adc
xchg
or
inc
add
cltd
std
aas
out
xchg
push
dec
enter
add
mov
and
add
and
or
fdivr
lds
push
ret
fmull
cmp
insl
add
dec
pop
adc
jno
lods
add
aaa
or
sti
imul
test
and
test
outsb
cmpsb
aaa
and
cmp
cmp
iret
cs
dec
sub
mov
aaa
out
mov
into
mov
mov
in
inc
mov
jno
inc
sbb
nop
lret
mov
mov
fsubrl
mov
mov
inc
jecxz
inc
mov
inc
cmp
cmp
test
cmp
push
cmp
mov
or
sbb
push
ss
loop
push
mov
push
mov
outsb
adc
xchg
sub
mov
popf
jl
flds
xchg
adc
jns
jae
ja
pop
bnd
out
mulb
daa
lods
or
insb
xchg
fstl
xor
push
inc
jecxz
inc
mov
mov
into
inc
push
mov
dec
lds
repnz
inc
mov
or
outsl
je
cli
add
addb
sti
pop
cmpsl
rorl
or
mov
ljmp
test
call
and
outsl
add
outsl
jecxz
mov
mov
mov
lods
hlt
test
mov
jecxz
dec
cmpsb
aas
add
dec
das
push
aam
cmp
pop
ror
bound
addr16
mov
mov
or
cmpsb
iret
xor
js
popf
cmc
data16
cmpsl
inc
push
test
cld
imulb
repz
cwtl
test
and
dec
inc
and
gs
outsb
mov
xchg
mov
sahf
xlat
insl
outsl
sub
bound
add
mov
leave
fmull
adc
idiv
mov
int3
dec
gs
icebp
sub
lret
jbe
cli
push
jmp
pop
inc
cmp
scas
jl
jl
sub
sub
mov
shll
jbe
lods
pop
pop
jae
in
ret
jmp
jbe
clc
xchg
pop
inc
dec
shll
out
loopne
loop
jb
cltd
movsb
xchg
mov
jo
xchg
push
xor
jbe
mov
jno
adc
or
int3
pop
mov
sub
mov
es
int
call
pop
stc
les
jae
inc
mov
dec
sbb
daa
clc
dec
push
scas
enter
pushl
imul
fisubrl
jno
icebp
sbb
dec
clc
lds
mov
mov
lcall
vmread
push
mov
sub
enter
xor
cltd
push
lcall
leave
imul
in
fwait
cmp
fildl
cld
mov
adc
ja
push
xlat
xchg
inc
push
ss
sbb
mov
jge
add
xchg
pop
mov
int
out
pop
test
les
daa
into
mov
jns
add
mov
imul
and
lea
test
cmp
int3
pop
sarb
outsb
lods
or
lock
je
dec
mov
es
ljmp
lock
fcmovnb
cmpsl
and
cmpsl
inc
jno
cmc
inc
popa
mov
popf
stc
movb
lcall
adc
bound
outsl
sub
ret
lods
arpl
mov
mov
ljmp
std
or
out
iret
xor
loop
push
pop
je
mov
push
fxch
mov
jno
jnp
cmpb
or
fdivrl
push
pop
mov
js
or
in
jno
lea
xor
clc
xchg
push
fidivs
adc
movsl
test
enter
faddl
outsl
jmp
imul
rorl
aad
mov
lock
mov
and
pop
cmpsl
pop
int3
push
push
jb
flds
mov
add
xor
xor
data16
lods
lock
in
cmp
sub
int
and
cmp
jo
or
cmp
mov
je
inc
dec
pop
cltd
lds
fadd
sub
xchg
bound
out
mov
cmp
xchg
sti
sbb
lods
push
jnp
scas
ja
jp
add
shll
fldcw
xlat
aaa
push
pop
adc
lret
int3
inc
xchg
ljmp
in
dec
xchg
jl
out
jne
push
xlat
sub
dec
mov
jle
mov
cmp
mov
xlat
and
push
outsl
frstor
xor
test
loop
mov
adc
mov
sub
mov
jp
mov
addr16
scas
es
cltd
subb
fnstcw
ss
outsl
dec
aaa
mov
aad
cmc
fsubl
add
jb
imul
data16
rolb
push
lods
fs
fcmovnbe
lods
sbb
hlt
sub
xchg
inc
and
add
aaa
mov
into
enter
jge
mov
inc
insl
iret
push
or
push
faddl
test
testb
xchg
mov
loopne
xlat
outsb
pop
pshufw
mov
cmp
adc
sub
add
cmpb
pop
cmp
sahf
daa
mov
fisubs
movsb
sub
mov
outsl
sub
mov
sub
pop
sub
sub
shll
ljmp
jge
scas
imul
aam
adc
in
adcb
add
or
fldl
pop
mov
mov
xor
jbe
pop
cmp
jmp
aaa
in
mov
cmp
and
gs
lret
lods
rclb
scas
xlat
mov
movsl
mov
add
loop
cltd
mov
dec
lret
imul
mov
inc
mov
cltd
dec
pop
test
roll
sbb
push
mov
outsl
daa
enter
pop
pop
insl
mov
stc
or
fs
add
ss
daa
popf
lock
daa
and
or
sbb
and
dec
cs
ret
mov
add
xlat
movsb
inc
adc
mov
mov
adc
jg
jnp
cmp
das
add
pop
lock
popf
jb
adc
mov
inc
insb
xchg
inc
sub
and
ljmp
add
jecxz
rclb
inc
clc
lea
mov
jmp
gs
jo
cmp
into
data16
mov
dec
pop
jmp
cmc
das
inc
test
and
push
cmpl
inc
shr
pop
rcll
sub
aas
inc
in
imul
jo
insl
sub
lds
ss
or
pop
repnz
mov
into
mov
push
xchg
mov
mov
sub
mov
ror
pop
leave
push
rcll
sbb
push
pop
pusha
inc
cld
jo
push
enter
call
sar
leave
sub
arpl
gs
addb
inc
mov
sub
sbb
into
mov
inc
mov
mov
shlb
mov
out
lods
out
lds
test
push
outsb
sub
loopne
and
and
les
add
insb
aaa
dec
sub
ss
outsb
pop
lock
repnz
push
cmp
sahf
shrl
fnstenv
jp
aam
out
or
xor
pop
push
jb
adc
int
ret
aaa
xorl
jno
xchg
mov
leave
je
dec
cmp
xor
mov
mov
push
jl
fisttpll
mov
out
xor
add
aas
inc
arpl
jle
outsl
aad
xchg
sub
or
mov
xor
sbb
ret
ror
nop
pop
jb
ja
roll
jb
adc
in
in
lods
mov
push
stos
ja
cmp
mov
incb
pop
notl
ljmp
sbb
push
push
push
cltd
ss
mov
ret
adc
into
js
lock
das
push
mov
orb
mov
aas
push
cmp
pop
lds
add
daa
mov
cmp
adc
out
lret
mov
dec
cs
mov
pop
dec
cltd
fildll
hlt
xor
enter
aas
push
push
repz
pop
sub
mov
inc
cld
xchg
add
jo
clc
or
iret
lds
mov
pop
into
jns
pushl
xor
push
dec
in
ss
push
sub
mov
push
loop
mov
adc
sub
add
insb
pop
jbe
popa
dec
mov
outsl
mov
jae
jne
aam
in
in
push
aam
push
mov
test
icebp
out
imull
xchg
push
mov
cmp
in
mov
movsbl
js
call
sub
int3
push
ret
adc
dec
sbb
lahf
and
dec
and
dec
rcrl
cmpsb
jl
loopne
push
mov
jne
pop
sbb
xchg
ret
jmp
lds
add
mov
xor
push
or
lods
inc
dec
mov
iret
sub
xchg
xor
je
jbe
das
mov
sti
adc
pop
cmp
hlt
int3
adc
pop
add
icebp
popa
sbb
data16
sub
xor
add
imull
add
add
jmp
div
cmc
mov
sub
jnp
jmp
mov
mov
adc
cmp
popf
jb
in
lahf
rorl
popf
adcl
sub
mov
dec
call
in
ljmp
lds
sbb
dec
lret
mov
mov
adc
add
sar
pop
or
push
add
ficompl
inc
loop
ljmp
sub
jmp
jle
movsb
mov
dec
jp
jg
test
insl
jle
push
xchg
inc
dec
adc
rcrb
jecxz
sarl
daa
adc
aaa
and
sub
cwtl
lods
or
ret
xchg
sbbb
pop
add
rcrb
fs
sahf
jmp
test
push
mov
pop
cmp
pslld
push
and
cmp
push
sti
fistpll
push
ss
lahf
jnp
push
mov
cmpsl
inc
jp
push
mov
xchg
loop
out
fcompl
aas
xchg
adc
cwtl
mov
inc
or
addr16
adc
push
out
cmpsl
aad
repz
push
lcall
cwtl
lret
cmpsl
fsubrs
and
xor
xchg
and
push
and
enter
dec
dec
cmpsb
fstpl
mov
push
push
mov
fcmovnu
test
mov
and
lea
ss
jge
jle
faddp
fimuls
jns
jp
dec
sbb
jp
pushf
push
add
clc
xor
add
inc
cld
insl
dec
add
dec
jns
fistpll
cmpl
mov
mov
roll
mov
fisubs
cmpsl
sub
mov
pop
inc
jb
sbbl
adc
sub
adc
inc
jns
insl
push
inc
cmp
inc
add
pop
pushf
cltd
add
fildll
and
cmp
loope
outsl
loopne
out
scas
cmp
and
adc
xchg
mov
mov
dec
jg
pushl
push
das
inc
add
jg
mov
xchg
pop
js
inc
inc
and
or
testb
stos
dec
in
stc
aas
sub
in
pusha
mov
stos
ja
cmp
inc
xchg
inc
inc
cbtw
dec
sbb
cmp
mov
in
adc
push
xchg
sub
js
mov
push
xchg
mov
mov
popf
adc
lea
dec
hlt
dec
or
cmp
dec
repnz
out
jne
pop
adc
push
jno
mov
pop
sub
es
mov
out
loop
pop
dec
fisttps
iret
dec
fwait
lods
push
inc
sub
mov
popa
ss
roll
sbb
xor
push
cwtl
dec
adc
icebp
mov
mul
aas
add
in
andb
adcl
outsl
mov
adc
push
call
leave
mov
jae
mov
and
out
lret
jmp
dec
add
pop
jg
or
fwait
out
sahf
shlb
mov
push
add
pop
xorb
add
add
je
test
out
xor
xchg
lock
inc
cmp
pop
xchg
pop
or
sarb
jns
jecxz
std
mov
test
push
xor
cld
repz
jnp
addr16
jnp
insl
inc
lods
ret
in
xorb
and
mov
adc
hlt
mov
sbb
mov
dec
cmp
pop
shrl
pop
insl
push
ljmp
xchg
sub
inc
xor
xor
cmp
adcl
loope
out
test
mov
sub
test
xchg
jg
pop
push
jnp
aaa
add
scas
and
dec
nop
sub
xor
lock
movsb
cltd
fistpl
or
rcrb
adc
jnp
sub
xchg
push
dec
setp
inc
xchg
out
push
ds
or
std
jecxz
xlat
cs
repz
adc
and
mov
xchg
test
out
xchg
repz
lods
jbe
lret
push
cmp
outsb
orl
fsubrl
mov
ljmp
jo
mov
adc
xchg
xchg
adc
in
ss
jo
push
repz
and
ja
mov
push
rcrl
int3
sbb
mov
xlat
std
fnstenv
pop
mov
mov
mov
jo
in
jg
jp
sub
lret
test
push
xor
loopne
sub
xor
xchg
push
sbb
bound
sub
cmp
jbe
dec
add
mov
mov
xlat
jne
scas
xchg
mov
dec
and
push
aam
fcomps
mov
dec
cld
icebp
add
xchg
jnp
push
jmp
push
or
subb
cmc
add
clc
pop
xchg
lcall
mov
xor
and
add
pop
fcoml
cmp
je
push
int3
dec
roll
fidivl
call
test
pop
cmc
lahf
sbb
ja
daa
in
stc
orb
fcomp
push
mov
add
mov
incb
cmpsb
adc
sub
xchg
outsb
jp
imul
cmp
or
fwait
pop
or
andl
fldln2
mov
outsb
mov
and
repz
lret
lret
push
enter
and
adc
stc
leave
lock
fists
mov
shlb
jno
dec
cld
push
test
adc
pop
dec
mov
mov
pushf
jnp
push
stos
pop
pop
stos
ret
mov
inc
push
jp
cli
std
sbb
mov
inc
mov
outsb
daa
mov
jmp
dec
mov
sbb
aam
sbb
jae
mov
les
stos
xchg
xor
adc
push
xchg
lods
xchg
mov
es
xchg
test
hlt
in
mov
or
jp
incb
xchg
dec
sbb
cmp
add
jge
outsl
mov
lret
sub
ja
in
sub
adc
mov
xor
dec
or
jb
cmpsl
and
jns
cmp
adc
sbb
shrb
lcall
in
or
movsb
pop
or
nop
adc
jo
dec
inc
or
stc
test
inc
lods
xor
movsb
sub
test
jnp
ds
add
fwait
mov
fldz
xor
xor
decb
mov
testl
dec
lret
cltd
mov
sahf
insb
and
cli
lea
std
add
push
and
pop
fdivrl
in
sub
pop
lods
dec
and
xchg
sbb
pushl
mov
inc
mov
popa
cmp
jge
mov
sub
sarl
adc
dec
mov
jns
shll
or
push
jns
mov
subl
and
adc
or
in
or
fisttpll
inc
mull
lcall
mov
cmpsl
leave
lock
out
rcrb
cmp
inc
cmpb
cmp
insb
sbb
stc
dec
fwait
insl
cmp
test
add
or
cwtl
lods
xchg
push
adc
rdmsr
mov
mov
fists
mov
sub
mov
aam
mov
mov
inc
mov
dec
shll
mov
sub
sub
mov
jns
mov
jmp
rcrb
inc
cld
cld
pop
add
dec
inc
add
adc
shlb
jbe
lret
rorl
mov
es
insb
stos
push
lcall
push
out
jp
jo
lahf
test
scas
loope
xchg
jns
jmp
sbb
jae
ds
jp
ss
or
leave
cmp
cmp
mov
cld
pusha
pop
push
mov
cmp
lds
test
fdivr
inc
mov
testl
pop
mov
pop
mov
add
cmp
stos
add
sbb
or
repnz
or
daa
fwait
push
mov
fimuls
lods
mov
testb
addb
orb
cmpsl
xchg
shrl
or
fcmovb
jge
call
pop
stos
xor
addr16
pop
loop
dec
sub
pop
fiadds
cltd
scas
fcomp
pop
jl
mov
mov
mov
out
pop
sub
repnz
or
lods
xchg
dec
inc
xor
ret
lods
call
xchg
out
inc
push
or
and
and
pop
ret
push
nop
add
out
cmp
adc
and
daa
les
sbb
fldcw
mov
and
subl
ja,pt
aad
jae
xchg
mov
mov
mov
test
lds
sbb
add
xchg
fwait
mov
or
cmp
xor
lret
xor
call
jne
sub
and
push
jmp
ds
dec
push
xor
fdivs
stos
dec
mov
fmuls
jecxz
mov
addb
push
ljmp
xchg
sahf
xor
cmpsb
in
hlt
je
in
test
loop
push
xchg
loope
sub
and
xchg
cwtl
push
jp
and
xor
jge
addr16
lods
shlb
push
xor
mov
and
mov
outsl
ljmp
sarl
enter
enter
push
push
pop
xchg
xor
mov
icebp
cmp
out
dec
xchg
mov
and
ret
push
pop
lea
cmp
bound
xchg
jae
mov
inc
fcmovnb
sub
sbb
pop
inc
inc
adc
sbb
xchg
leave
mov
cltd
sub
out
sub
roll
mov
dec
push
sbb
pop
test
sbb
mov
movl
sub
sbb
or
addl
dec
jmp
es
cmp
insl
decl
sbb
lea
inc
sub
pop
or
lods
sahf
mov
movsl
ds
outsb
sub
jmp
cmp
loope
insl
stc
mov
adc
pop
jl
jnp
adc
inc
add
jb
xor
and
cmpsl
inc
dec
xchg
lods
jbe
cmp
je
test
sbb
sahf
xor
push
mov
dec
gs
and
dec
xchg
ds
sarl
dec
es
int3
pop
sti
mov
adc
in
mov
mov
cmpsl
adc
push
mov
cmp
lret
mov
fnsave
mov
mov
sub
inc
repnz
rcrb
rcr
xor
call
data16
test
dec
lock
divb
inc
imul
add
lods
or
mov
push
adc
mov
or
popf
mov
xchg
fnsave
push
fwait
sub
adc
push
call
inc
dec
push
cld
pop
movsl
rcrl
push
test
push
xchg
insb
js
mov
push
lahf
scas
mov
pusha
lret
sub
inc
mov
dec
mov
rcll
pop
in
imul
jg,pt
push
xor
xchg
outsb
punpckldq
clc
jbe
jno
sbb
xchg
xor
test
mov
or
daa
jg
jno
or
rcrb
cltd
jbe
sub
stc
in
jp
bound
stos
ja
inc
jmp
dec
mov
aas
arpl
sbb
sub
mov
aad
sar
push
cmp
imul
dec
out
insl
pop
lds
repnz
pushf
div
jno
das
lret
imul
lods
cwtl
cltd
sbb
cmp
add
cmp
dec
sub
xchg
sti
fdivrl
cmp
lods
mov
mov
add
ss
aaa
dec
fldl
adc
cwtl
fdivrl
test
pop
dec
cmp
movsl
addl
nop
movsl
jl
cld
dec
rolb
adc
push
jl
push
sbb
cmp
xor
adc
addr16
xchg
jl
rcll
push
aad
aaa
int3
add
xorb
xchg
arpl
xchg
jae
pushf
jnp
loop
cwtl
xchg
xor
fimuls
lods
and
jne
jo
xchg
cwtl
outsl
icebp
dec
xchg
mov
inc
jmp
mov
fisttps
es
xor
ret
inc
sarl
in
inc
sbb
and
popf
xor
and
and
pushf
xor
jno
mov
flds
add
inc
or
cltd
lock
inc
push
sbb
cmpsl
push
outsl
or
and
cmp
fsubrl
sbb
sahf
lock
data16
xor
lahf
push
cwtl
push
hlt
cli
popa
fisubrl
lcall
dec
fsubp
add
push
mov
pop
idivl
cmc
das
and
xor
xchg
mov
jae
pusha
pusha
insb
push
or
test
xor
mov
and
movsb
adc
inc
inc
stos
ficompl
mov
pop
daa
pop
pushf
rolb
int3
inc
rcrl
popf
and
ja
cli
hlt
cmpb
mov
mov
xchg
pop
inc
enter
fwait
jmp
clc
nop
cmp
movsb
xchg
jbe
in
stc
and
xchg
loopne,pt
into
mov
add
lock
loope
sub
bound
cld
repnz
sbb
lock
insl
inc
mov
xchg
rcl
mov
test
dec
add
cmp
imul
out
aas
jge
mov
lea
pop
cmp
or
xchg
and
adc
int3
pop
xchg
in
stos
arpl
sub
addb
jmp
xchg
dec
ficompl
jns
pop
ret
sarb
hlt
or
add
int
push
mov
xchg
cmp
or
outsl
adc
xorb
push
std
cli
mov
lret
dec
inc
cmc
pop
insb
xor
fisubrs
cmpsb
push
imul
jmp
jl
test
xchg
push
xchg
push
call
lcall
adc
jno
stc
or
shrl
jge
or
andb
pushf
bound
aaa
pop
xor
mov
repz
jmp
out
nop
shrl
in
aas
jl
imul
in
int
dec
xchg
aaa
dec
jae
aaa
xorb
mov
fadds
and
xor
aad
in
jno
or
cs
aam
adc
fldl
cmp
pop
faddl
sti
adc
loopne
ljmp
cwtl
ljmp
subl
jp
jmp
sbb
mov
jno
sub
adc
sub
sbb
gs
outsl
jl
js
add
dec
push
and
test
std
dec
aad
fsub
xor
xchg
je
scas
int
cmpsb
jno
mov
idiv
sbb
daa
sbb
dec
inc
es
sub
clc
out
pop
out
mov
data16
mov
xor
jmp
mov
das
push
out
sbb
mov
fwait
cli
jo
sbb
cmpsb
jne
lret
scas
xor
xchg
push
mov
sbb
popa
pop
cltd
mov
stc
dec
cli
pushf
not
loopne
insl
daa
sub
lods
out
xchg
test
std
and
outsb
xchg
hlt
cmpsb
push
inc
notb
fisubs
idivl
xchg
ljmp
dec
lret
std
les
jno
dec
pop
outsl
stc
dec
dec
dec
sub
jno
mov
imul
jg
mov
push
aaa
repnz
or
cmp
xchg
dec
hlt
leave
cld
fwait
inc
in
popa
add
je
jae
enter
inc
jmp
sub
lds
and
add
data16
mov
lahf
mov
lods
add
dec
push
mov
bound
sub
pop
out
sub
outsl
and
enter
mov
xor
jl
mov
dec
xchg
jns
lret
cmp
ss
imul
les
sbb
lret
mov
pop
sbb
mov
subl
push
je
cmp
sub
push
adc
mov
imul
inc
stc
aam
xchg
iret
jmp
insb
lret
icebp
add
out
lock
inc
ret
sbb
add
cmpsb
mov
pop
mov
incl
fdivrl
lahf
pop
adc
inc
mov
dec
stos
sbb
sub
iret
mov
inc
push
sahf
inc
mov
call
or
jp
jno
and
push
outsb
rcr
cmp
push
shrl
out
and
mov
sub
mov
stc
mov
orb
xor
xorl
icebp
pop
test
insl
mov
push
cmpsl
pop
out
xor
iret
dec
stc
lods
scas
adc
push
imul
mov
dec
subl
enter
ss
and
push
inc
je
in
adc
out
push
notb
mov
push
sub
ret
cmp
push
mov
jecxz
pop
nop
lds
stos
adc
cmp
fdivrl
inc
xor
dec
xchg
sub
mov
push
stc
into
sahf
xchg
fisubrl
mov
jp
mov
mov
mov
jne
data16
fnstsw
fmulp
test
xor
mov
cmpsb
dec
movsl
jbe
adc
add
rclb
sarb
add
cltd
adc
pop
or
xor
and
or
push
cld
push
pop
ljmp
fnstsw
cmp
jle
mov
lea
int3
rclb
lcall
sahf
adc
xor
mov
mov
pop
add
in
cmp
test
xor
sub
pop
adc
push
aam
bound
sbbl
fwait
or
movsb
ss
pop
out
int3
and
xor
movsl
add
sbb
mov
push
jg
adc
arpl
sbb
push
test
or
lods
and
pop
inc
jns
shl
shrl
sbbl
xor
cmpl
ja
xchg
inc
xchg
sub
ja
cltd
aad
ss
in
cmp
aaa
popa
adc
enter
mov
int
fcompl
pushf
mov
push
dec
xlat
icebp
jl
movsb
dec
xchg
add
outsb
daa
xchg
fdiv
push
rclb
out
adc
mov
pushf
test
jp
dec
mov
xchg
cli
cmp
pop
mov
jg
mov
add
xchg
add
dec
addr16
mov
ds
xchg
fucomp
dec
dec
and
inc
xor
add
push
orb
jmp
cwtl
ljmp
sub
mov
sahf
jmp
mov
cmpsb
xor
and
xchg
or
test
and
sub
fst
mov
push
enter
dec
sbb
arpl
sub
dec
jg
pop
pop
leave
pushf
fsubrs
xchg
aam
push
add
jbe
lea
mov
adc
and
int3
int3
sahf
mov
mov
push
aad
sbb
and
cli
push
pop
repz
lcall
daa
jecxz
movsl
loop
xor
mov
xor
nop
cwtl
push
xchg
pop
jne
sbb
pop
into
out
xchg
xchg
lahf
lret
mov
inc
ficomps
jb
rolb
outsl
aad
push
cli
ds
xchg
cltd
xor
cmp
repz
lock
insl
sbb
daa
out
xor
jg
sub
outsl
aam
mov
jl
gs
add
inc
add
arpl
or
push
lods
inc
je
scas
inc
sahf
es
adc
in
xor
mov
adc
into
fnstsw
jne
orb
in
cmp
scas
adc
cmp
xor
gs
movsb
faddl
mov
or
add
lods
and
xchg
aam
push
es
sbb
or
or
xor
dec
into
or
data16
scas
cmp
test
push
add
stos
in
iret
sub
xchg
push
xor
sub
and
cs
jp
dec
push
mov
jg
mov
stos
inc
jle
jne
pop
jo
and
insl
mov
popa
test
jb
xchg
js
aam
push
aad
out
ljmp
lock
or
int3
cmpsl
ss
roll
cmp
or
or
lods
frstor
jae
cmp
cmp
inc
push
mov
push
cmp
inc
jae
mov
cld
sbb
jle
adc
or
stos
lods
inc
pop
xor
movsl
in
loop
push
bound
sbb
scas
fisttpll
aad
sub
fdivl
push
insl
aaa
push
das
js
cwtl
popf
test
jg
inc
push
test
adc
out
int3
jne
clc
dec
pop
shlb
scas
addb
add
sbb
pusha
mov
out
or
test
mov
orl
in
xchg
arpl
gs
scas
mov
into
jmp
mov
mov
cs
sub
movsl
mul
pusha
and
xchg
std
jge
xchg
mov
xchg
decl
fsts
in
repnz
lahf
cli
pop
pop
test
repz
int3
xchg
fwait
out
pop
imul
sbb
inc
cld
dec
cvtdq2ps
push
or
and
loopne
aas
enter
add
outsl
sub
inc
jle
cld
push
test
inc
push
fwait
cli
xchg
fstpt
dec
dec
xor
mov
add
fdecstp
mov
popa
aad
int3
clc
loope
xchg
jnp
cmpsl
or
sbb
movsl
mov
ljmp
jb
jnp,pt
gs
dec
jmp
add
sbb
pop
aas
push
sbb
xorb
in
je
mov
add
cli
sbb
push
push
cltd
loop
pop
sub
es
add
cwtl
imul
lret
enter
test
or
lahf
push
bnd
mov
cltd
sub
call
rolb
add
push
jo
push
call
lock
or
add
add
sub
mov
shr
jbe
ret
movsl
jecxz
xchg
and
sub
cwtl
pop
imul
xchg
inc
imul
icebp
dec
aad
cmp
or
ret
jns
inc
push
xor
fsubr
xchg
out
mov
lahf
cmp
imul
bound
mov
jb
popa
dec
xchg
push
fisubl
lods
lods
jbe
dec
inc
nop
lea
mov
insb
mov
scas
fildll
inc
out
cmp
aaa
dec
mov
stc
push
mov
jp
fs
out
fistpl
xchg
xchg
gs
sti
sar
add
dec
xor
mov
pop
fdivs
cld
pop
insb
fcmovnb
test
inc
mov
inc
add
mov
push
sahf
xchg
inc
and
fucomi
mov
cmp
mov
call
sub
sahf
pop
adc
insb
outsb
fistps
imul
jmp
push
pop
xchg
mov
pop
pop
movsl
loopne
push
shll
shll
fwait
out
mov
jno
gs
je
push
lods
daa
jbe
es
data16
xor
xor
daa
and
shll
imul
pop
lds
sarb
out
btc
fwait
add
pop
inc
or
ja
or
or
xchg
sahf
adc
xchg
rolb
pop
stos
push
sub
hlt
jg
into
sahf
add
imul
imul
aam
and
daa
jbe
mov
insl
lock
xchg
shll
lret
lock
ja
cli
mov
lds
test
cmp
push
mov
pop
mov
arpl
sub
cld
mov
imul
cmc
mov
cmc
out
or
adc
cmp
leave
adc
pop
cmp
xchg
in
push
push
dec
test
leave
pop
lods
movsl
ret
adc
pop
jg
aas
xlat
stc
and
stos
out
and
sti
mov
cmpsl
or
xchg
xor
dec
xchg
ljmp
rorb
orb
lcall
popa
lods
stc
mov
inc
shl
addr16
scas
adc
or
jmp
or
test
or
sbb
insl
and
push
outsl
cmpsl
add
xor
movsb
sbb
dec
or
aaa
pshufw
push
fwait
jbe
mov
mov
pop
addl
aad
push
mov
jecxz
jo
inc
add
fnstsw
xlat
sbb
dec
shrb
mov
push
dec
hlt
lods
rorb
imul
out
imul
ficomps
lcall
fs
pop
mov
in
xchg
lods
pop
inc
clc
mov
cwtl
inc
daa
ja
ret
outsb
andb
mov
aaa
clc
cmpsl
jne
push
divb
mov
mov
push
movd
js
sbb
aaa
lea
imul
and
add
out
lods
jns
xchg
and
pusha
xchg
nop
push
cmp
adc
add
lahf
push
jnp
fbstp
lods
stc
adc
sub
fnstenv
dec
xchg
sbb
sbb
push
or
jl
cmp
and
jecxz
xchg
push
pop
leave
dec
inc
add
lret
add
mov
dec
movsb
aaa
xchg
stos
jae
ljmp
test
jle
dec
divl
in
mov
arpl
bound
jle
mov
dec
pop
mov
add
imul
fwait
repz
neg
call
out
xchg
mov
jnp
add
sub
fstpt
push
fisubrl
jmp
ds
or
xchg
stos
aad
outsl
add
sbb
fisubrl
movsb
sub
sub
and
insb
add
or
cltd
fcoms
ficomps
in
out
or
insb
outsl
repz
jo
clc
xchg
dec
push
jb
mov
mov
ret
xor
sti
test
jne
ja
arpl
sub
inc
mov
cld
test
cmp
dec
sub
add
lret
xchg
test
inc
xor
fsubs
xchg
jo
roll
mov
jmp
or
jl
mov
cmp
in
cli
and
outsl
mov
jmp
ss
mov
int
dec
sbb
dec
push
adc
add
daa
movsb
jne
repnz
pop
test
xchg
gs
or
inc
xlat
inc
and
dec
mov
sti
repnz
and
mov
js
lods
jg
or
mov
cmc
stos
inc
pop
mov
and
adc
push
lret
mov
stos
nop
xchg
cmpsl
popa
push
cmp
roll
mov
movsb
scas
in
call
xchg
add
mov
fldl
jecxz
mov
arpl
shlb
les
test
xchg
fildll
adc
sub
push
jecxz
xchg
out
sub
addr16
jmp
pushf
bound
mov
iret
adc
and
in
ret
fs
dec
inc
lock
inc
or
mov
mov
mov
push
push
xchg
leave
out
lea
pop
xor
mov
mov
add
mov
cmc
int
dec
ss
mov
mov
stos
call
mov
push
mov
mov
and
adc
lds
sar
xor
cmc
lret
sahf
cmp
cs
adc
cmpsb
ret
repnz
nop
pushf
mov
dec
clc
cmp
and
sub
pop
push
xchg
imul
and
fnsave
xchg
jnp
adc
push
mov
push
repnz
jl
loopne
or
paddusw
cmp
bound
push
inc
jge
nop
and
sub
jno
inc
iret
lock
add
aad
mov
cmpsb
mov
cli
testb
cmp
imul
jl
pop
cmpsl
jmp
in
pop
andl
mov
mov
cmp
add
rclb
stc
arpl
jo
or
test
pop
aam
push
mov
out
inc
push
jno
mov
xchg
inc
xchg
sub
and
inc
ds
pop
xchg
iret
insl
popa
bound
inc
push
sbb
rorb
or
jge
xor
stos
int3
std
xor
jo
sti
and
lret
mov
inc
push
xchg
cli
push
ja
ss
xchg
fists
addr16
outsl
pop
enter
mov
faddl
aaa
test
jl
ret
rol
jnp
sbb
jg
add
mulb
mov
xchg
pop
dec
test
xor
in
lea
or
dec
mov
cltd
scas
mov
mov
addr16
insl
push
repnz
insl
call
mov
push
adc
adc
mov
mov
jge
inc
pop
xor
dec
or
outsb
pop
cmc
push
dec
lea
jecxz
mov
ret
mov
sti
cmp
cwtl
les
dec
or
cli
sub
inc
int
fimull
adc
sahf
xor
push
pop
and
adc
inc
pop
in
fsubs
int
push
mov
xor
fidivrl
jmp
imul
roll
add
rolb
or
sbb
les
cmpsl
mov
pushf
sbb
ljmp
mov
ret
dec
mov
data16
int3
out
cld
add
sbb
add
mov
imul
test
add
call
push
xorl
aam
std
scas
inc
iret
repnz
pop
aam
fcomp
push
sub
add
arpl
jmp
cmp
lcall
in
js
pop
inc
ja
test
adc
aam
leave
pop
jg
sub
faddl
bound
cmpsb
cld
pop
mov
loop
out
jnp
fs
mov
jno
aas
and
push
les
dec
movsl
mov
loop
je
xchg
jmp
push
mov
rcr
into
xor
push
jb
pop
and
in
jle
clc
dec
loopne
push
pop
aas
cli
insb
stos
mov
sbb
cmpsb
sahf
cmp
add
mov
std
fsubrl
ss
dec
jge
out
mov
push
stos
inc
jo
and
ja
dec
pop
lret
inc
push
frstor
pop
mov
pop
mov
hlt
cmp
popa
jecxz
test
pop
dec
imul
out
insb
fldcw
fdivr
sub
xor
test
pop
mov
jecxz
push
sub
push
inc
jmp
test
negl
mov
xor
push
lcall
pop
mov
stc
sbb
fildl
mov
outsl
fsubl
jp
cmp
jg
push
loop
xor
push
or
lret
leave
sub
dec
inc
shr
daa
cmp
jbe
les
push
sub
rcll
rolb
jg
or
inc
shrl
outsl
or
leave
fwait
xchg
add
jmp
jecxz
aaa
sbb
stos
sub
sahf
repz
mov
mov
sub
int3
in
sub
mov
jmp
in
insl
mov
lahf
movsb
rcr
ret
arpl
xchg
stos
push
aas
mov
mov
mov
jno
dec
push
dec
mov
imul
mov
js
mov
inc
or
addb
xchg
adcb
rcrb
and
mov
pop
jp
sbb
popa
mov
iret
dec
repz
ret
shr
sub
jp
dec
cmpsb
xorl
and
repnz
adcl
and
fs
shl
leave
add
adc
fwait
cmp
push
repz
cmp
js
mov
int3
into
pop
pop
add
and
mov
push
and
jl
inc
push
stc
sbb
mov
pop
mov
sbb
addr16
cs
mov
dec
popa
aas
insl
vmovupd
leave
pusha
ss
xor
dec
xor
pop
gs
jp
lcall
cmp
fstpl
mov
xchg
xchg
mov
sbb
cmp
mov
adc
ja
cwtl
jge
icebp
hlt
push
js
gs
add
mov
xchg
sbbb
sbb
int
xchg
ffreep
cwtl
inc
arpl
mov
mov
stos
ret
push
imul
inc
cmp
inc
push
add
cmc
mov
iret
inc
and
fstpl
or
sbb
lock
pop
imul
or
out
mov
es
cmpsb
push
ds
inc
ret
test
add
xor
adc
lock
push
adc
sbb
mov
xor
inc
leave
sbbl
out
push
cmp
je
xchg
jnp
dec
push
cmp
shrb
mov
jne
test
aas
and
dec
mov
not
jo
xor
sub
enter
test
sbb
adc
popa
mov
out
shlb
add
pop
cmp
pop
ds
jne
fnstenv
lock
fimull
mul
lcall
enter
fdivl
stc
adc
setne
icebp
inc
ja
xchg
push
pop
cwtl
mov
dec
jl
bound
in
mov
fucomip
sbb
ror
hlt
or
jle
xchg
lds
push
int
jnp
nop
repnz
and
scas
mov
ret
stos
std
call
push
pop
sub
jns
pop
rep
fadds
cmp
shlb
rep
xchg
inc
pop
in
push
insl
cmpsb
and
xchg
out
movlps
insb
das
nop
es
cmp
out
sub
push
movsb
adc
inc
aaa
jno
sbb
cwtl
jmp
jo
cltd
mov
in
cld
mov
mov
rcrl
push
mov
dec
sub
sbb
sbb
pop
decl
cmp
xchg
sbb
int
js
add
xor
ficomps
jecxz
fwait
dec
jmp
xor
cltd
jle
mov
in
add
mov
pop
jg
nop
test
pop
hlt
test
push
pop
cld
sub
cs
punpckhwd
mov
pop
ds
xor
into
shlb
mov
popa
out
xchg
pop
mov
pop
jae
jmp
gs
test
or
mov
pop
and
mov
xchg
je
lods
cs
inc
adc
jge
fadd
xor
leave
adcl
jnp
jne
insl
add
jae
bound
xchg
jecxz
sub
mov
shll
cmpsl
cli
fidivrs
loopne
or
idivl
ds
js
loope
sub
dec
cmp
nop
xor
add
jne
aam
inc
pop
push
int3
cmpsb
or
cld
ret
mov
pushf
mov
pop
ret
inc
sub
ret
loopne
and
icebp
cmp
mov
daa
scas
lea
sub
fnstenv
mov
lods
jae
mov
test
or
pop
fbld
leave
inc
adc
push
sbb
les
or
cmpsl
sub
shll
roll
gs
add
push
ja
cs
jns
cmp
or
sub
xor
add
outsb
or
inc
inc
sbb
fnstsw
jae
mov
push
cmp
dec
das
and
xchg
inc
pop
mov
or
cwtl
push
rcll
adc
icebp
jb
mov
cs
bound
leave
mov
push
jne
cld
mov
std
lret
cmp
and
enter
mov
call
clc
stos
and
cs
ja
out
int
pop
dec
jnp
adc
lcall
mov
fildll
shll
movsb
add
mov
sub
cmpsl
cmp
aam
push
sbb
adc
mov
jecxz
cmpsb
subb
loopne
lods
push
mov
fdiv
sbb
sbb
add
loopne
jmp
sub
ficompl
push
arpl
fdivs
ret
cmpsl
pusha
push
lret
idivl
iret
cmp
test
and
cmp
lods
push
xchg
cwtl
push
in
pop
outsl
fistpll
ja
jne
xor
jb
pop
test
mov
fwait
cmp
rcll
out
cmc
and
ds
iret
mov
dec
mov
jns
int3
and
jecxz
inc
pop
ja
and
adc
in
ss
mov
inc
adc
cmp
nop
jae
in
ljmp
test
adc
or
mov
pop
ficoml
mov
movsl
jae
cli
sub
add
mov
shll
rcl
mov
cmp
mov
sub
inc
das
fcomps
or
bound
dec
inc
imul
or
pop
jb
mov
mov
push
xchg
mov
shlb
rolb
lea
xchg
aad
fcmovbe
xchg
and
xchg
sub
insb
and
je
cmpsb
std
mov
ror
mov
mov
sbb
mov
loope
cwtl
lcall
lods
cmc
jecxz
enter
jg
outsb
int3
ss
add
pushf
push
xchg
pop
int3
cltd
xchg
cmpsb
out
sbb
sub
into
sbb
leave
test
mov
push
ds
ret
push
add
clc
subl
jge
dec
lods
or
stc
jne
inc
arpl
add
push
push
rorb
enter
mov
mov
jae
dec
in
leave
test
outsb
sub
cmp
ja
lcall
in
sub
inc
or
js
sbb
mov
mov
fisubrl
cld
ss
pop
lea
inc
dec
out
mov
hlt
adc
test
iret
fadds
in
dec
repnz
out
dec
dec
out
fisubl
insl
aad
daa
inc
push
rcrl
xchg
jge
lret
andb
scas
dec
jbe
add
ds
outsb
pop
shlb
push
mov
sub
stos
cmp
cltd
test
fwait
sbb
call
insl
rorl
shl
mov
shlb
adc
int3
mov
mov
andb
mul
and
ja
or
in
es
add
jle
scas
pop
out
xor
test
lods
lock
out
dec
sub
loope
in
mov
lret
cld
in
outsl
pusha
shll
jae
neg
add
pop
mov
mov
xor
adc
hlt
lcall
popf
sbb
push
in
iret
or
into
mov
leave
clc
and
rcll
cmp
push
in
xchg
arpl
hlt
jl
aas
mul
jle
aad
or
xchg
pop
nop
out
push
pop
out
dec
aam
rolb
scas
pop
jmp
push
mov
enter
int
mov
lahf
jne
gs
add
mov
lods
decl
dec
add
pop
mov
or
mov
or
dec
imul
dec
mov
mov
inc
adc
and
ljmp
sbb
ret
loopne
jmp
call
sbb
mov
test
sbb
inc
push
sbb
pop
pop
outsl
out
andl
pushf
shlb
push
mulb
mov
decb
push
addr16
outsl
sub
pop
enter
mov
sbb
xchg
jge
xor
dec
sbb
jl
int3
daa
loopne
imul
daa
mov
fisttps
mov
idiv
cmp
mov
mov
outsl
stos
xlat
lods
adc
cmpsb
push
call
shlb
adcl
rolb
cmp
popa
mov
gs
pop
aaa
jne
mov
xchg
pop
xor
mov
mov
jp
aam
mov
maxps
jb
sub
ljmp
dec
add
push
mov
xor
mov
inc
mov
arpl
mov
les
ret
xlat
jmp
outsl
dec
pushf
loope
cmpsl
dec
ss
cld
cwtl
mov
sbb
clc
out
int3
das
xchg
inc
sbb
cmc
jo
push
xor
sbb
test
add
fnstenv
adc
jnp
mov
add
jp
mov
setns
fbld
jb
jp
pop
pop
mov
mov
shll
dec
and
push
ret
shll
sar
mov
jge
out
aas
inc
sub
jnp
stos
sub
push
fiaddl
mov
outsb
das
sti
mov
in
stc
jne
ljmp
daa
pxor
pop
cs
xchg
jo
call
fists
adc
cmp
jecxz
fpatan
pusha
inc
xchg
in
or
cmp
add
cld
cmp
ja
xchg
inc
and
sub
sbb
mov
mov
xchg
dec
in
mov
sub
aas
dec
out
jo
and
push
xor
repz
insb
movsb
xchg
pop
push
push
movsb
push
xor
jne
add
xchg
push
sbb
ret
inc
mov
mov
mov
push
push
pop
adc
or
xor
stc
jmp
shll
jg
mov
xorb
int
or
sub
xor
sarl
xchg
icebp
dec
test
cmp
mov
sarl
stos
jo
adc
and
xchg
push
fidivl
imul
xor
xor
mov
addr16
iret
push
repnz
ret
les
push
xchg
es
imul
pop
or
lods
mov
jle
pushf
fsub
in
rcll
stc
scas
jo
pop
mov
sbb
cmp
mov
icebp
push
or
cmp
add
aad
test
roll
pop
xchg
xlat
and
jns
inc
inc
aad
hlt
imul
cwtl
stos
cmpsb
lods
movsb
jb
pushf
push
add
iret
mov
outsl
jb
call
loope
insb
arpl
int3
mov
xchg
loop
sub
lret
cli
mov
cwtl
inc
adc
push
lds
cli
rcrb
cwtl
and
sbb
add
ficoml
idiv
in
test
pop
push
jle
jo
jns
xor
cmp
js
sub
cmc
cmovne
jne
fildl
hlt
xchg
daa
push
fldcw
xor
or
rol
sub
test
nop
push
and
lods
mov
andb
cmpl
sbb
shll
jg
sahf
lock
popf
push
xlat
push
outsb
sbb
push
fmull
jl
xor
xchg
or
dec
testl
pop
jg
jnp
pusha
pop
cmp
adc
xlat
adc
mov
fiaddl
scas
stos
cmpb
pop
push
popf
popf
and
or
gs
rdmsr
gs
fs
or
aaa
push
mov
xlat
push
sbb
mov
in
and
stos
out
add
pop
jbe
pop
xor
mov
ret
aad
lock
lcall
roll
int3
nop
fwait
fs
add
or
cwtl
jmp
fbld
xchg
cwtl
push
icebp
loop
cmp
sahf
sbb
fistl
in
mov
dec
scas
sbb
sub
pop
sbb
xor
out
mov
sub
dec
mov
and
sub
add
cmp
in
cmp
sub
pop
mov
ret
inc
pop
repz
cmp
push
or
pusha
mov
mov
jl
pop
and
or
dec
orps
sub
pop
ret
fcompl
popa
insl
andb
pop
push
mov
aad
icebp
cmpsl
push
les
sub
testb
cmp
fcompl
cltd
stos
scas
jb
fsubrs
cli
mov
jo
loop
jmp
dec
cmp
pop
icebp
mov
out
push
cltd
adc
mov
cltd
sbb
xor
mov
sarb
femms
xchg
or
or
cs
fs
or
mov
jne
or
mov
xor
or
stos
test
jo
movsb
jae
xchg
shl
dec
testl
pop
and
mov
jbe
sub
insb
insl
lods
aaa
cltd
add
insb
rol
cmpsb
movsl
pop
ljmp
js
scas
jbe
nop
adc
mov
xchg
adc
lods
bnd
pushf
add
dec
pop
test
mul
andb
or
decl
xor
mov
and
mov
test
jmp
aaa
leave
addb
mov
lahf
mov
mov
jnp
add
jnp
jmp
jb
inc
call
add
pop
shll
sbb
leave
adc
cli
jmp
in
cmp
stos
shrl
jl
jbe
mov
inc
pushf
aam
test
pop
dec
std
push
jp
insl
jp
xor
mov
xchg
xorb
add
dec
cmc
mov
sbb
or
pusha
push
subb
or
push
out
punpcklbw
arpl
stc
shlb
mov
out
mov
out
pop
xchg
mov
mov
test
loopne
lods
pusha
mov
out
xchg
loop
cmc
add
aaa
and
jns
push
scas
mov
aas
in
fisttpl
sbb
add
mov
lret
dec
mov
lret
xchg
inc
push
lahf
faddp
push
pop
repz
ljmp
or
in
jnp
jo
xchg
leave
sbb
pop
cmpsb
loop
pop
mov
rorl
shrb
stc
insl
push
test
lcall
sub
hlt
loopne
lea
cmp
dec
mov
push
mov
or
rorl
mov
imul
fwait
cmp
testb
out
sub
sti
fsubrl
pop
dec
in
sbb
jo
popf
pop
jg
dec
pop
loop
mov
mov
lock
mov
jne
sti
stos
add
dec
jmp
push
mov
xor
push
xlat
into
jae
stos
xor
scas
pop
clc
add
push
lods
dec
and
shl
mov
sbb
ljmp
es
arpl
mov
popa
dec
cmp
mov
cmp
lds
push
gs
jge
pop
push
aam
arpl
les
movsb
popf
lods
jo
jae
idivb
in
jo
imul
add
out
sub
jmp
mov
cwtl
fmul
mov
sub
addr16
mov
pop
push
insb
leave
lahf
rcll
inc
stc
jl
js
pop
es
adc
push
add
popa
or
test
mov
fs
aas
pop
aas
pop
ficomps
sarb
add
xor
inc
pop
lea
cli
ret
and
movsl
fs
mov
addb
std
ret
mull
add
stos
xor
mov
call
loope
sysenter
jnp
ss
jnp
psubsw
faddl
es
push
sbb
sti
jecxz
cmp
cmp
inc
push
add
or
andl
xor
lea
and
push
movsl
xchg
jmp
and
and
sub
inc
adc
xchg
ds
jnp
inc
push
xor
lods
dec
dec
aad
call
sub
out
xor
push
sbb
fwait
hlt
jge
in
cltd
mov
mov
ret
jae
bound
lods
sbb
cmpsb
add
adc
popf
adc
jcxz
mov
sub
xor
and
mov
mov
adc
mov
add
or
arpl
mov
xlat
test
fidivrs
fisubrl
inc
jge
push
pop
and
std
cli
or
jo
pop
test
test
jl
loope
popf
pop
xor
pop
jbe
loope
test
cmp
add
mov
mov
sbb
testb
jae
adcl
add
shr
rorl
cmp
addr16
rcrb
mov
testb
xlat
rcll
xchg
sbb
xchg
pop
dec
les
sub
and
sbb
sub
in
sub
push
scas
cwtl
fisubs
mov
adc
hlt
stos
xchg
add
xchg
scas
sti
xchg
int3
xchg
xchg
mov
je
jno
xor
mov
mov
fldl
movsl
repz
es
push
mov
shll
cltd
xchg
pop
lret
dec
fcompl
mov
clc
cmp
cmp
arpl
sub
add
pop
mov
pop
pop
mov
adc
xchg
lret
sarb
push
lods
outsl
insl
bound
inc
mul
mov
jg
adc
cmp
mov
lods
dec
sub
mov
out
dec
lods
dec
pop
adc
dec
out
xchg
icebp
sbb
sahf
add
sub
lcall
pop
sub
mov
mov
push
jge
cmc
pop
mov
jne
cmp
cmp
dec
mov
imul
adc
aas
pop
push
rorl
add
fisubrs
fbstp
dec
push
xchg
les
and
insb
mov
std
outsl
fidivl
add
sbb
pop
das
in
jo
or
mov
call
jbe
jno
fwait
and
popa
mov
fistps
xor
mov
mov
cli
push
push
xor
mov
aad
add
sub
mov
pop
cmp
mov
clc
in
aas
stos
mov
lcall
pop
sub
out
mov
cmc
or
movsl
push
enter
arpl
call
call
daa
into
ret
stos
cmc
fldenv
xor
scas
sub
outsb
hlt
pop
enter
mov
sahf
jecxz
imul
movl
fwait
or
stos
push
mov
lahf
jge
aas
xchg
push
push
movsb
mov
data16
scas
dec
insb
pop
ret
icebp
aas
loop
pop
bound
inc
stc
imul
insl
std
xchg
mov
aas
adc
jae
lret
pushf
mov
icebp
pop
inc
in
and
xor
rorb
xchg
lods
adc
cld
arpl
enter
mov
outsl
lret
jae
lcall
xchg
jnp
dec
pop
push
scas
aam
mov
cwtl
in
xchg
lahf
mov
repnz
mov
test
popf
sub
js
jp
mov
pop
add
and
mov
clc
leave
mov
shll
and
mov
cmpsb
cmp
jno
stos
jae
xchg
arpl
sub
inc
arpl
or
pop
cmp
jo
xchg
push
outsb
rorl
dec
sub
sti
stc
xchg
pop
fsubs
cmp
mov
sti
jnp
push
xchg
mov
dec
add
jne
js
fwait
movsl
leave
pop
xchg
mov
xchg
push
icebp
insl
dec
and
aaa
mov
adc
adc
adc
gs
xchg
jle
inc
popf
lret
in
jne
aas
sbb
xchg
stos
cmc
mov
dec
sub
ffreep
call
sbb
ljmp
out
lret
lret
push
push
push
mov
outsl
movl
inc
dec
push
sub
pop
int
push
mov
and
fnstsw
imul
push
xchg
xor
mov
mov
and
mov
cmp
sbb
call
insb
mov
addr16
lea
push
xchg
int
lods
sub
inc
adc
in
dec
jp
loopne
movq
test
dec
cmp
xor
pop
icebp
fidivrs
xor
pusha
sar
xchg
add
push
xlat
pop
mov
outsl
sbb
sub
loopne
mov
xor
cli
jg
mov
test
dec
lock
movl
data16
pusha
out
xchg
xchg
lds
pusha
pop
das
jo
jecxz
out
rcr
je
mov
mov
mov
pop
cmp
addl
pop
fwait
jg
mov
mov
into
out
sahf
lfs
adc
push
jae
mov
int3
shlb
aad
mov
push
mov
fcomps
dec
out
mov
sbb
icebp
cltd
mov
mov
or
stc
sub
sahf
fprem1
mov
sbb
icebp
xor
std
lret
lcall
mov
mov
add
cmp
das
jmp
mov
cmpsb
sbb
xlat
mov
sub
es
jae
push
shl
and
inc
fwait
jnp
mov
pop
fwait
stc
and
mov
fsts
push
inc
xor
push
push
add
pop
fadds
test
cld
push
jle
bound
ss
cld
ret
int3
gs
adc
cmp
jae
stc
pop
xlat
xlat
adc
mov
hlt
pop
xor
test
cmc
push
add
loop
movsl
xchg
jb
jae
fistpll
xchg
mov
push
popf
mov
les
in
jb
out
jmp
add
stc
cs
lret
shll
dec
xchg
rcll
mov
xchg
sbb
jecxz
arpl
inc
cmpsb
inc
rcrb
xor
mov
jl
insl
push
xchg
sub
mov
cs
sbb
lret
sti
pusha
mov
add
stos
test
gs
stos
stc
cwtl
aad
add
insb
xchg
hlt
lret
ffreep
rol
xchg
fisubs
push
test
fcoms
jnp
loope
int3
adcb
cmp
loope
call
xchg
xlat
sbb
or
ficompl
or
leave
popa
mov
adcb
jle
pop
ret
pop
adc
jns
mov
imul
scas
mov
movsb
dec
enter
pop
mov
ljmp
mov
shll
imul
outsb
push
pop
loope
fnstsw
jb
cmpl
push
cmc
push
arpl
dec
out
inc
mov
roll
mov
notl
jmp
addb
cmc
add
adc
pusha
inc
push
dec
leave
mov
aaa
jo
jae
loopne
mov
mov
dec
aam
nop
rol
cmp
jno
and
sbb
mov
or
xor
imul
addr16
xor
stos
ss
in
imul
mov
dec
mov
aaa
in
call
inc
adc
iret
mov
retw
jo
les
jae
rorl
data16
sbb
xchg
test
imul
mov
xchg
jo
mov
xchg
sub
aas
mov
rcl
adc
or
call
mov
lock
out
cmpsl
mov
cwtl
jne
scas
push
popa
dec
pop
insl
cmp
dec
int3
daa
imul
push
jbe
out
or
out
jbe
and
test
lods
scas
sbb
sahf
mov
adc
sbbb
mov
adc
ficompl
inc
test
pop
jnp
adc
add
arpl
mov
dec
xchg
cmp
pop
sahf
push
pop
mov
insb
pusha
inc
inc
cmp
pop
aas
or
ljmp
in
movsl
repz
sti
adc
stos
sbb
fwait
add
mov
dec
cld
scas
jecxz
pop
shll
cltd
fcmovnbe
jecxz
adc
enter
xor
cmp
cwtl
sub
or
jle
popa
lret
aam
mov
cli
or
push
xchg
dec
dec
dec
pop
mov
adc
adc
and
inc
mov
add
mov
fnstcw
gs
pop
jle
jge
or
mov
push
or
repnz
fidivl
and
sbb
in
push
cli
mov
cmc
test
and
pop
sub
imul
pop
cmp
mov
inc
push
out
push
pop
das
cs
insb
in
push
adc
inc
fwait
mov
rol
sbb
push
out
xchg
sbb
xorb
mov
adc
jbe
outsl
lret
adc
and
adc
inc
xlat
sbb
jmp
mov
repnz
cmp
nop
push
jb
lods
mov
das
sbb
xchg
push
jno
or
pop
sti
imul
sub
mov
ja
or
and
xor
xchg
inc
and
xor
mov
mov
sbb
pop
ja
scas
sbb
out
ret
insl
and
jo
ficoms
insl
repnz
sbb
dec
es
inc
or
outsl
cwtl
jnp
inc
movsb
push
rclb
mov
pop
shlb
push
mov
cwtl
jae
mov
in
mov
push
roll
dec
push
push
xlat
sbb
inc
and
xchg
maxps
nop
push
rolb
mov
cwtl
xchg
jge
pop
inc
movsl
jnp
jnp
movsb
cmpsb
mov
push
insb
lock
dec
pop
mov
mov
movsl
push
std
outsb
mov
sbb
stos
les
push
or
ss
inc
add
fmul
cmpl
and
jbe
sbb
sahf
hlt
cmp
adc
out
leave
stos
jg
enter
push
xlat
cwtl
outsl
dec
mov
jmp
mov
cli
testl
sar
lret
bound
push
inc
subb
mov
inc
xor
stos
xlat
add
sti
sbb
pop
hlt
push
dec
pop
nop
xchg
gs
push
or
adc
mov
pushf
outsb
jbe
pop
pop
adc
jne
leave
mov
jge
aas
add
pop
mov
jecxz
pop
push
ljmp
inc
mov
fdivrs
lretw
push
imul
insb
fsts
daa
xchg
adc
clc
clc
outsb
loope
movb
sbb
cmp
fistpl
testl
int3
cwtl
mov
adcb
push
mov
adcl
push
adcl
adc
popf
into
cld
mov
pop
inc
jmp
pop
push
mov
lods
mov
xchg
das
mov
jbe
mov
rorl
xchg
std
or
fldenv
nop
mov
inc
sub
mov
push
stc
lods
dec
dec
enter
sbb
lea
outsb
cmpsl
fldt
aaa
or
int
jns
sub
cwtl
jo
imul
adc
int3
sbb
imul
mov
add
loopne
inc
les
or
pop
imul
leave
std
sub
outsl
cmc
push
jmp
xbegin
stos
ds
pop
inc
xchg
sub
cmp
lods
lahf
jnp
je
push
mov
push
inc
insb
leave
test
mov
xchg
ss
fidivl
jmp
std
lea
cmp
pop
cmc
xor
fsubp
push
es
jl
adc
mov
sarl
or
or
js
mov
mov
in
lret
mov
clc
mov
push
nop
cmp
inc
jmp
sub
es
adcl
out
jbe
xchg
clc
iret
xlat
add
xchg
pop
jmp
adc
push
push
addr16
movsl
popa
lea
outsl
int3
test
push
mov
xor
pop
lods
divl
iret
test
push
inc
sub
pop
rclb
cld
nop
jae
insb
push
sub
loop
add
sbb
fwait
out
mov
out
push
mov
aad
add
mov
in
ljmp
mov
xchg
mov
cltd
adc
das
ja
ljmp
adc
mov
arpl
jno
mov
fdivr
xchg
out
fstps
xor
test
pop
cmp
movl
repz
jbe
fwait
adc
aas
mov
cmc
js
adc
sbb
push
pop
push
aas
fdivrl
jb
pop
idivb
mov
xor
cwtl
lret
mov
sub
inc
stos
nop
aas
dec
mov
call
enter
add
movsl
or
mov
mov
div
sarl
mov
inc
or
inc
mov
sbb
fcompl
cltd
fisttpl
jnp
ss
xchg
in
xchg
push
dec
jg
push
popa
pop
imul
jle
shlb
loop,pt
and
xchg
pop
mov
roll
xchg
bound
jge
cmp
sysexit
sarl
addr16
test
rcll
test
sahf
lods
data16
sbb
push
xor
rcll
push
leave
movsb
int
insl
push
pushf
xchg
test
push
add
sub
jae
outsw
mov
aad
ret
mov
jmp
mov
mov
lret
mov
pop
adc
das
dec
adc
pop
fidivs
xor
cwtl
push
enter
adc
add
push
cmpsl
xchg
and
cmc
add
leave
arpl
sbb
loope
xor
aas
cmpl
dec
pop
hlt
mov
jmp
sub
cmp
push
push
insl
sbb
movsb
jb
mov
xchg
sbb
push
adc
push
mov
adc
cld
insb
push
addr16
fnstcw
popf
sbb
mov
adc
adc
fistps
js
inc
xchg
bound
outsb
outsb
cmp
out
test
in
scas
gs
jb
test
mov
inc
pop
push
jno
int
out
dec
out
ret
loopne
mov
int3
mov
lods
or
test
loope
nop
aad
pushf
aam
or
mov
sub
jne
mov
sbb
ret
sub
insl
ret
inc
jbe
popa
andb
cs
sub
pop
add
sti
pusha
sub
pop
add
jae,pn
loop
xorl
mov
fimuls
leave
add
dec
or
xchg
arpl
ret
mov
or
ljmp
out
lahf
mov
mov
cmc
out
sbb
dec
inc
inc
lods
nop
pop
and
jns
xchg
sahf
fwait
test
push
push
sbb
pushf
js
in
orl
je
movsl
imul
enter
jne
lcall
or
cli
daa
jecxz
pop
cmp
mov
adc
nop
mov
movsb
in
sbb
and
call
adc
add
pop
xacquire
pop
shlb
dec
enter
hlt
test
jecxz
incb
in
std
push
dec
sbb
push
test
inc
mov
or
enter
popa
xchg
popa
je
cmpsl
stos
repz
es
xchg
jge
int3
fdivrl
push
add
fdiv
add
cmp
mov
sbb
cld
mov
outsl
xor
pop
fadds
mov
add
test
das
nop
hlt
adc
jns
es
adc
cmp
xchg
pop
inc
les
das
or
xchg
dec
mov
in
fisubs
ficoms
test
xchg
pusha
mov
rol
cmpl
mov
out
xchg
xor
call
add
inc
push
sub
and
push
mov
mov
jmp
adc
push
mov
xchg
repnz
pushf
jge
and
std
pusha
xchg
ljmp
btr
xor
repz
mov
clc
push
mov
fbstp
dec
divl
push
push
fdivs
cmpsl
dec
mov
gs
mov
negb
ficoms
mov
jg
or
dec
jg
adc
aaa
pop
pop
pop
adc
mov
lahf
mov
mov
inc
sub
imul
aas
mov
mov
dec
cli
lods
nop
loopne
repz
inc
subb
pop
pop
xchg
loope
mov
jne
bound
cmp
sarb
ja
mov
sti
lods
repz
sbb
arpl
pop
ret
repz
in
inc
push
hlt
mov
mov
scas
add
and
inc
aas
icebp
and
inc
ss
arpl
stos
cmp
push
sub
ja
ret
sbb
dec
mov
lods
enter
xchg
sarb
les
lock
lahf
fsts
dec
leave
or
add
cs
cwtl
inc
sub
dec
fadds
in
adc
push
stc
sub
lret
mov
jae
shrb
and
jns
out
jge
lea
sub
sbb
push
int3
inc
repnz
jecxz
or
test
jne
add
and
jmp
sub
xchg
and
dec
inc
fistpll
sbb
xchg
pop
scas
fnstenv
dec
push
and
int
push
bound
sarb
push
adc
jae
pop
adc
lret
xor
mov
jo
sub
std
add
aaa
fisubrl
sahf
iret
ds
and
out
pop
add
insl
sbb
push
ret
adc
int3
out
push
jg
test
and
jmp
sbb
clc
cs
ss
pushf
xchg
sbb
ja
lods
decl
sbb
rorb
xchg
fcomps
jno
out
shlb
inc
mov
mov
xchg
jnp
out
xchg
fistpl
test
idivl
sbb
insl
pop
mov
dec
fidivrs
repz
popa
xchg
test
sarb
ficomps
cmp
or
outsl
and
imulb
enter
inc
enter
push
fdivrs
shl
in
in
ds
dec
xchg
cmp
jecxz
dec
cmc
out
mov
js
ja
sbb
popf
sahf
mov
pop
in
sbb
push
xor
or
add
mov
sbbl
fmull
push
jns
clc
shll
xor
jecxz
out
out
cmp
adc
mov
inc
ds
jmp
xlat
fmull
push
or
jno
aas
pop
aas
push
inc
or
ret
push
dec
mov
add
loope
lret
aas
ficompl
ffreep
sahf
pop
mov
ret
inc
dec
mov
idivb
sbb
cmp
mov
cmp
into
fwait
iret
arpl
loopne
push
mov
jmp
xlat
push
mov
lahf
shlb
cld
lds
das
jae
lret
inc
test
sbb
xchg
fstl
les
mov
cmpsl
test
lret
dec
pushf
cmp
negb
les
mov
mov
roll
and
inc
add
jns
mov
mov
inc
and
stc
push
mov
shl
shll
pop
mov
int
ljmp
mov
push
int3
cld
in
rcrb
push
rcll
test
movsl
in
mov
aam
fucom
sbb
ljmp
popf
cwtl
dec
adc
sbb
add
xor
mov
sub
test
sub
xchg
fsubrl
outsb
jns
pop
pushl
mov
sub
push
pop
fnstcw
sbb
sbb
dec
fistpl
data16
stos
and
sti
inc
sbb
andb
xchg
sbb
outsl
out
add
inc
xor
cmp
insl
lods
jb
fincstp
lcall
sub
sbbb
imul
jl
out
fmull
repz
fs
mov
xchg
mov
ds
dec
push
xchg
cs
je
xchg
lods
dec
mov
xor
sbb
test
and
mov
cltd
pop
dec
bound
cmp
adc
mov
std
mov
loop
bound
pop
jbe
jmp
add
aam
mov
mov
jo
mov
push
adc
insl
mov
loope
xchg
rol
insb
dec
lret
push
inc
hlt
popf
push
cld
int
and
pop
jnp
add
pop
mov
rcrb
stos
jns
pusha
in
mov
push
cwtl
sti
fwait
sahf
int
mov
jecxz
cmpsb
dec
sbb
ss
sbb
out
mov
or
and
andl
loopne
or
jae
cmc
fsub
in
mov
aad
outsb
jmp
sbb
push
and
inc
cld
and
insb
jg
cmpsl
fldl2e
jecxz
in
xchg
rolb
dec
stos
or
push
test
aaa
hlt
and
or
rorl
dec
jecxz
cmpsl
aam
mov
adc
mov
sub
mov
bound
mov
ds
jae
test
adc
pusha
loope
les
mov
addr16
jo
cs
mul
pusha
mov
ficompl
jnp
outsl
aam
jnp
xchg
fnstenv
sub
jmp
stos
arpl
push
sbb
sub
pop
cmp
sub
jo
stos
sbb
aas
and
add
jno
xchg
sbb
cli
popf
movaps
pop
fldl
lss
mov
xchg
notl
add
add
fwait
cmpsb
jecxz
sub
pop
jl
ds
pop
cld
sbb
inc
sti
ret
mov
ret
mov
mov
jae
push
lret
into
xchg
ret
std
outsl
xchg
aas
jl
ja
inc
pop
iret
mov
test
es
dec
add
push
jmp
clc
and
ja
pop
inc
mov
or
inc
inc
js
lods
adc
scas
cs
dec
mov
xor
sub
inc
enter
rcl
and
and
fidivs
shrl
jne
mov
xor
sahf
cltd
cmp
loope
mov
lds
aad
lcall
es
repz
sahf
pop
xor
or
mov
bound
jmp
push
fstps
stos
mov
out
push
js
dec
scas
and
dec
mov
pop
loope
xchg
mov
fdivs
or
stc
cwtl
andb
push
or
mov
and
stc
roll
call
aaa
fst
out
test
mov
and
data16
fnstcw
cmc
loope
inc
test
movsb
adc
popf
js
aaa
jge
daa
andl
jae
and
pop
mov
cli
stos
sbb
popa
fld
push
jge
fs
testl
mov
sub
das
or
xchg
xchg
cmp
ss
jl
out
sub
leave
mov
dec
leave
es
mov
push
lods
inc
es
movsb
daa
repnz
loop
pop
inc
fdivrl
jge
test
jle
push
in
jecxz
cmpb
rcl
add
jmp
pop
shl
aam
lock
push
pop
sbb
mov
xchg
fstps
mov
imul
lcall
xchg
mov
les
cmp
mov
movsl
sarl
push
mov
mov
xchg
jle
cmpl
inc
stos
cmp
std
mov
jmp
pushf
rcrl
mov
pusha
and
daa
rcr
shl
cwtl
or
xor
cmp
mov
push
packuswb
ret
xchg
daa
imul
adc
mov
adc
dec
jns
imul
push
add
pop
inc
sarl
mov
pop
fsubp
arpl
xor
imul
inc
test
push
call
aam
jmp
popa
sbb
inc
adc
inc
inc
call
leave
stc
and
pop
xor
push
outsl
dec
add
popa
mov
iret
ret
addl
add
pop
sti
pop
and
in
int3
cmp
jbe
jmp
loopne
std
jno
push
and
jns
out
mov
cmovg
ret
lds
daa
sub
out
cmpsb
and
rorl
sub
daa
dec
stos
ficompl
inc
in
lods
orl
inc
mov
pop
scas
adc
gs
mov
out
pop
or
test
adc
dec
lea
mov
jmp
cwtl
lock
aas
add
or
dec
mov
pop
lock
das
inc
notb
sti
mov
jns
sti
and
gs
cmpsl
mov
or
cmpsb
add
lahf
and
sti
ret
inc
lods
mov
mov
dec
ret
fisttpll
ljmp
testl
and
mov
xor
movsl
aaa
pop
add
mov
fwait
adc
hlt
aad
loope
mov
jmp
cmp
sub
mov
mov
bound
jg
popa
out
adc
push
imulb
pop
push
and
popa
mov
std
xor
push
mov
cmp
push
adcl
mov
push
or
inc
mov
lods
addr16
or
lds
push
inc
pop
test
mov
loop
icebp
scas
in
loope
cmp
pop
jle
lahf
xlat
std
mov
aam
sub
sti
rcll
inc
movl
pop
aam
in
pop
dec
jnp
fisubrs
stos
dec
out
or
popa
sbb
mov
ret
test
lcall
out
clc
xchg
insb
and
outsb
cs
cltd
dec
pop
insl
sub
je
sbb
mov
popf
cmpsl
mov
mov
daa
xlat
repz
xchg
push
imul
xchg
fwait
mov
fs
push
aam
inc
out
shll
xorb
mov
jne
movsb
cmp
scas
notb
fs
sub
cmpsb
insb
add
mov
dec
outsb
mov
lea
xorl
stc
sub
sbb
dec
push
adc
dec
add
lahf
push
push
mov
loop
imull
jb
cs
lods
out
out
and
insb
xchg
lret
push
test
fldenv
ss
jle
mov
fldcw
gs
sub
jmp
mov
jae
inc
movsb
pop
into
add
sbb
lcall
sti
aad
or
cmc
lea
lods
xor
fists
push
cmp
and
in
dec
gs
fmul
aaa
dec
adc
in
push
mov
fadds
in
cmp
xchg
xchg
mov
mov
cmp
mov
cwtl
jp
jne
popa
cmp
imul
fbld
xchg
inc
adcb
and
add
dec
mov
or
shlb
push
aam
adc
cmp
in
das
xchg
in
lret
les
push
test
mov
jno
test
mov
mov
mov
sub
ja
faddl
pop
mov
push
adc
push
xor
push
push
pop
adc
add
mov
mov
pop
test
push
out
push
mov
xor
insb
ret
sub
inc
mov
andl
fadd
push
je
fnstenv
jb
pop
sbb
lahf
cmp
enter
pushf
mov
rorb
xchg
inc
xchg
xchg
inc
pop
lret
pop
cmp
repnz
xchg
add
shlb
cmp
mov
lret
jnp
add
jmp
rclb
jae
jbe
mov
adc
sub
call
nop
xchg
test
cltd
sub
vmaxpd
addl
push
dec
sahf
inc
dec
push
scas
push
in
xor
pop
sbb
mov
mov
pusha
stos
imul
push
insb
xchg
arpl
sub
mov
negb
mov
lock
sub
adc
push
xchg
add
into
iret
push
or
xchg
push
movsb
pop
movsb
jge
pop
addr16
push
dec
mov
addr16
jle
mov
imul
mov
sub
dec
int3
cmpsl
les
sarb
rorl
mov
jg
outsb
jmp
insl
pop
std
cmp
in
cmpsb
xchg
jge
or
test
inc
xchg
cmc
mov
outsb
daa
pop
sahf
pop
xchg
aas
outsl
mov
add
mov
add
cwtl
xor
jl
mov
xchg
mov
lds
loope
sarl
adc
ja
idivl
pop
xacquire
cltd
aas
jae
sub
adc
jecxz
mov
icebp
andl
cltd
sarl
mov
mov
lods
or
loopne
jne
call
jmp
sub
pop
dec
movsl
and
mov
xor
inc
sub
inc
mov
fs
pop
jmp
cmp
imul
fsubrs
aaa
orb
imul
je
mov
cs
inc
cmc
xor
sbb
ret
les
notl
cmp
jl
push
insl
pop
jb
in
iret
xor
mov
fcompl
clc
ds
and
pop
sar
pop
lret
mov
mov
cwtl
push
scas
imul
rorb
sbb
push
jmp
test
iret
arpl
lret
das
sub
test
es
cltd
loopne
ja
roll
mov
stc
insl
mov
add
adc
sti
jg,pt
test
sbb
pop
jp
aam
jno
pop
out
sbb
in
int
mov
or
xchg
and
push
cli
fs
decb
adc
inc
cmpsl
nop
and
xchg
ret
pop
xlat
mov
inc
inc
lcall
or
sti
add
cld
mov
xchg
stos
dec
push
repz
repz
cs
fcoml
adc
cmp
shl
mov
xor
fs
pop
and
subl
push
jne
fmul
lret
packsswb
xlat
ret
push
and
mov
int
loope
dec
test
sbbb
xor
jmp
mov
rclb
cmp
xchg
or
movsl
mov
cmp
mov
mov
fdivrs
sub
mov
lahf
call
out
xchg
jbe
sub
dec
daa
and
pop
or
mov
jge
xchg
pop
lods
jo
and
push
mov
imul
das
das
dec
mov
arpl
fistpll
ja
out
movsb
rcl
cli
and
jge
sbb
shll
popl
lods
pop
jae
inc
loop
sahf
fsubs
push
divl
lea
inc
inc
loope
mov
dec
in
mov
enter
rcll
push
or
pop
dec
push
sub
add
loope
insb
push
cmpsl
das
cmp
push
cmp
cs
stos
cmpsl
add
leave
inc
lods
stos
lods
mov
pop
daa
mov
pop
mov
jl
test
xchg
es
pop
mov
scas
xchg
mov
pop
push
cmc
cwtl
pop
dec
negl
jno
cwtl
jne
xor
jl
jb
scas
clc
sub
divb
inc
das
and
sahf
cmpb
sub
jge
sbb
fwait
je
jmp
leave
movsb
sbb
cmpsb
pop
rclb
loope
dec
lods
mov
lret
sbb
push
pop
rcrb
ficompl
jle
dec
aad
push
mov
jne
add
pushf
imul
inc
sbb
cmpsl
cmpsb
pop
shll
je
adc
push
enter
xlat
dec
sub
fnstsw
or
add
inc
inc
in
pop
pop
jbe
fsubl
and
loop
sbb
adc
int
mov
gs
xlat
stos
cmp
daa
out
or
pop
fs
jnp
mov
jp
sub
aad
sbb
dec
divb
mov
pop
dec
or
mov
mov
sbb
std
xor
jge
inc
outsb
dec
push
cmp
lods
sbb
or
xlat
test
sub
inc
inc
pushf
mov
out
push
push
ret
in
mov
adc
nop
mov
pop
cli
jge
fldl
xchg
or
sub
bound
movsl
into
dec
mov
push
push
jg
jo
lahf
mov
stc
adc
sti
adc
ljmp
adc
incl
cld
mov
push
pop
dec
lods
xchg
xor
ds
dec
sahf
push
add
mov
mov
fstpl
push
add
jb
xchg
push
xchg
push
xor
xchg
mov
sbb
out
bound
ljmp
mov
ljmp
loop
vmread
pusha
scas
out
push
scas
nop
or
test
xchg
in
cmp
cmp
aas
mov
xchg
jae
xchg
inc
add
iret
push
int
fidivl
fs
dec
test
xorl
stc
cmpsl
pop
or
out
in
and
cmp
popa
cmpsl
and
cltd
das
sbbb
mov
lods
adc
sti
jbe
adc
stc
push
testb
push
repz
mov
inc
mov
pushf
lods
aad
insb
and
in
bound
sbb
jl
imul
inc
hlt
lret
xchg
fidivrl
jg
imul
cmp
test
adc
cmp
cmp
mov
mov
xchg
adc
sbb
xor
shrb
clc
add
pop
movsl
dec
sub
mov
jmp
sub
divb
fsubrs
or
cltd
movsb
or
inc
mov
shrb
int3
mov
pushf
lods
in
sar
mov
rcr
add
push
outsb
pop
cmp
sbbl
jb
dec
out
cmp
iret
xchg
mov
rcl
pop
jb
lea
push
lret
imul
xchg
jns
lea
sub
jb
dec
shll
or
shlb
inc
mov
enter
sti
xchg
adc
insl
test
xor
cltd
xchg
test
push
cwtl
enter
dec
cmpsl
in
add
aas
fdiv
je
pop
mov
mov
arpl
xor
inc
inc
push
rcrb
sarl
in
cmp
pusha
pop
outsb
dec
mov
adcb
or
inc
mov
daa
out
fwait
jmp
xor
adc
imul
or
cltd
stos
mov
int3
call
and
out
xchg
xor
push
test
fstpt
popf
push
movsb
jnp
arpl
mov
cmp
rorb
push
push
jne
fcomps
fistpl
sbb
mov
ss
mov
ret
out
jp
ljmp
fimull
adc
lret
xor
test
rorb
cmp
mov
add
inc
sub
pop
jl
xor
adc
in
push
jae
aam
xchg
push
dec
imul
mov
jae
fs
lock
cli
cmpsb
xor
adcb
and
xchg
inc
je
clc
and
adc
inc
mov
pop
add
sbb
addr16
in
inc
sbb
das
jmp
push
ss
adc
xchg
test
ljmp
ficomps
add
fdivr
daa
jmp
stos
pusha
xor
out
imul
push
and
inc
adcl
jae
fsub
jg
enter
mov
fucom
mov
jnp
and
mov
jns
and
xor
je
push
push
push
popf
mov
arpl
cmpb
nop
orb
xor
ljmp
dec
push
or
pop
xchg
pop
dec
sahf
pop
push
jns
jnp
jp
lea
adc
aam
pop
pusha
or
fstl
imul
notb
test
sbb
push
mov
pop
mov
push
sbb
cmp
iret
adc
repnz
jns
divl
je
test
sbbl
xchg
sbb
mov
push
xchg
scas
mov
xchg
pop
gs
and
test
shll
cmpb
icebp
mov
mov
jge
push
punpckhbw
jecxz
fadd
test
lods
dec
jo
and
mov
inc
mov
mov
aad
or
enter
push
es
test
out
in
push
popa
outsl
cmpsl
negb
push
or
xchg
xor
jne
jmp
insb
dec
out
repnz
pop
fdiv
cmp
and
sub
mov
mov
fcmovne
mov
jo
jbe
call
ret
sub
std
jne
add
sbb
dec
jb
pop
adc
movsb
ss
imull
jo
inc
punpcklwd
pusha
loope
out
sahf
ds
mov
cmc
push
push
pop
mov
fsubrl
push
mov
enter
mov
repnz
or
cli
test
incb
cmpsl
inc
loope,pn
push
je
shl
insl
sti
sbb
jg
imul
cwtl
test
shlb
je
pop
cmp
push
push
arpl
jae
sbb
divl
int
clc
lret
inc
movsb
pop
dec
gs
push
ljmp
mov
mov
arpl
cmp
cvtps2pd
ret
dec
sbb
loop
adc
sbb
pop
shlb
jns
inc
call
or
and
xor
xchg
popa
pop
fldt
imul
imul
xor
loope
clc
fstpt
sbb
call
pop
cltd
mov
or
fdivl
xor
js
scas
out
adc
imul
loope
xchg
add
addl
into
push
or
lret
add
mov
ret
dec
jp
inc
lods
std
mov
jne
test
sbb
jno
mov
sub
fs
inc
outsb
imul
lret
pop
js
mov
push
sbb
cmp
xor
mov
push
cli
mov
mov
outsl
xor
negl
or
icebp
xchg
repnz
loop
sbb
mov
je
push
out
sarb
dec
push
icebp
inc
push
int
sbb
xor
test
in
push
ret
repz
add
mov
in
or
mov
inc
or
add
xor
jp
cmp
stos
scas
aaa
insb
rorb
jns
movsl
les
mov
jno
or
jecxz
movl
subb
lret
pop
data16
push
or
pop
popf
popa
mov
in
jle
out
aaa
push
jae
fimuls
xchg
sbb
stc
mov
jbe
mov
sbb
stc
incb
lahf
jmp
mov
jecxz
mov
inc
outsl
imul
mov
stc
mov
dec
push
mov
adcl
test
sahf
sbb
test
stos
into
ds
test
dec
inc
inc
xor
and
mov
outsl
inc
mov
jb
jb
loop
das
adc
or
hlt
fistps
andb
mov
testb
nop
or
and
fwait
cmp
mov
and
mov
sub
cmp
stos
dec
out
pop
loop
mov
stos
nop
and
fwait
xchg
rcll
sub
outsl
bound
in
pop
add
pop
les
inc
cmpsb
inc
mov
aam
lods
adc
fwait
lahf
rolb
imul
loope
xor
testb
adc
ficoml
or
mov
xor
mov
jecxz
sbb
cmp
cmpb
xchg
rcrl
ss
cmp
repnz
sarl
movb
lret
pop
mov
inc
ss
pop
xor
mov
sub
cmpl
stc
adc
adc
sub
add
inc
sub
loope
xlat
into
aad
js
mov
xor
movl
push
mov
inc
and
in
mov
aaa
sahf
add
or
mov
insb
cmp
lret
sti
leave
roll
fcompl
hlt
aaa
xor
arpl
imul
in
inc
or
sub
test
rolb
cmpxchg
pop
scas
repz
movsl
lods
pop
out
mov
test
aas
dec
into
loop
test
add
pop
xchg
mov
mov
and
roll
pop
mov
xchg
dec
repnz
push
mov
stos
outsl
mov
fnsave
out
pop
ret
rcll
mov
add
push
movsl
jecxz
fstl
and
mov
neg
add
je
or
lea
ret
mov
cmpsb
jae
incl
and
cmp
sub
arpl
mov
sbb
mov
jb
notl
pop
test
int
loop
or
and
std
xor
icebp
ss
int
in
jge
insl
notb
add
pop
xor
loop
mov
push
jno
lods
testl
add
fistps
movb
and
push
mov
call
dec
lock
jp
adc
pusha
push
push
push
cltd
fldt
jp
mov
out
out
repnz
xchg
in
rcrb
push
bound
je
stos
mov
mov
xchg
cltd
aam
sbb
mov
out
jo
andl
adc
in
add
mov
daa
nop
push
cs
pop
and
adc
jns
xor
gs
jge
stc
mov
cli
push
mov
xor
xchg
inc
imul
cmp
xchg
dec
dec
and
mov
mov
nop
push
sub
inc
add
mov
loopne
in
or
lret
mov
aaa
xchg
jbe
out
insb
lahf
das
inc
add
movsl
arpl
xchg
dec
mov
mov
imul
imul
push
lock
shrl
inc
gs
mov
hlt
rclb
sub
in
and
insb
cmp
movsb
movsl
or
notb
cwtl
adc
fcoms
ficoms
movsl
ljmp
mov
mov
sbb
sub
lret
outsl
cmp
movsl
or
addr16
pop
mov
dec
jnp
mov
cmp
fbstp
out
out
xchg
into
mov
cmp
adc
sti
rorb
sbb
mov
lea
xor
push
push
fdivrl
add
ljmp
push
ret
sub
xor
sub
lods
stos
push
mov
loopne
mov
and
test
cmpsl
xor
jge
stos
mov
test
xchg
mov
xor
jle
mov
imul
dec
xor
push
rcrb
pop
sub
leave
ja
mov
jae
pop
xchg
pop
loop
mov
add
dec
add
dec
aas
add
cld
and
je
loop
inc
xchg
dec
mov
cmp
mov
sbb
push
inc
arpl
sbbl
pushf
imul
mulb
mov
adc
movsl
push
dec
outsb
in
pop
jecxz
mov
jg
jns
int
pop
pop
mov
push
repnz
popa
mov
repnz
inc
out
pop
rcll
cmp
add
testl
outsb
mov
mov
xor
insl
les
hlt
lods
outsl
xchg
insl
xor
xchg
sub
lcall
mov
in
mov
xor
es
enter
sbb
jb
stos
and
ret
sahf
ds
jno
cmp
sub
ljmp
fld
nop
adc
outsl
sub
loope
in
xchg
fidivl
lock
jle
rclb
jl
pop
mov
frstor
daa
jle
sub
out
out
ret
inc
push
inc
jbe
sahf
fstl
rcrb
mov
outsl
dec
or
fidivrs
push
cltd
dec
jmp
scas
les
pushf
dec
outsb
das
xor
xchg
gs
out
fwait
insb
push
push
add
mov
test
ljmp
mov
ljmp
cmc
cmpsl
inc
jmp
jle
add
negb
call
lods
inc
out
stos
ret
mov
popa
das
daa
lret
lds
hlt
mov
movntq
js
pop
sub
lahf
cmpsl
scas
repnz
add
dec
dec
mov
shlb
cmp
ds
xchg
test
xchg
rcr
jae
push
dec
pop
orb
test
jp
pop
jle
sub
pop
xchg
cli
push
push
in
adc
leave
push
jno
or
push
mov
pop
mov
push
imul
call
pop
repz
fwait
push
mov
and
jns
mov
adcb
sub
push
cmpsb
in
and
mov
add
loopne
movsb
movsb
outsl
and
add
outsl
inc
jg
mov
push
sbb
inc
mov
imul
repnz
mov
ja
loop
stc
or
sahf
movsb
rep
inc
mov
inc
mov
xchg
dec
sbb
daa
dec
adc
jnp
push
gs
cwtl
cltd
and
decl
in
loope
pop
xchg
in
push
in
mov
pop
pushl
lods
cmp
test
add
cmpsb
movsb
outsl
test
cmc
mov
mov
mov
ss
sub
sbb
stos
xor
add
xchg
mov
adcb
inc
dec
out
add
fs
in
fucomip
add
jb
jmp
iret
int3
or
xchg
fwait
bound
sub
ret
loopne
mov
je
lcall
push
cmc
aad
sbb
test
mov
or
jb
nop
push
or
inc
fidivs
mov
mov
call
movsl
imul
and
push
inc
pop
fsubrs
add
sub
cmp
cmpsb
adc
andl
mov
add
lods
and
sbb
pop
in
pop
xlat
jae
dec
andl
add
pushf
aas
test
jmp
fists
sub
repnz
sbb
std
or
arpl
inc
and
lods
ret
lret
mov
lcall
xchg
lods
adc
push
stc
lea
scas
or
call
lret
xor
cmc
adc
aas
xchg
xchg
imul
or
in
pushf
push
imulb
mov
ss
jl
lret
push
add
notl
add
or
sbb
jae
fst
cmp
push
enter
loopne
gs
push
pusha
sbb
cwtl
outsb
mov
xor
pushf
mov
mov
popf
dec
call
shlb
icebp
fcomps
push
dec
cmpsb
push
hlt
cmpb
cmp
mov
aad
mov
sub
imul
mov
and
cli
in
nop
adc
jmp
fwait
or
xor
mov
lcall
and
int3
and
jae
dec
sbb
sbb
mov
pop
aam
loope
ljmp
xchg
push
and
cmp
xchg
mov
fisubrl
push
leave
movsb
out
scas
mov
cmp
arpl
lods
inc
mov
scas
fmulp
nop
add
xlat
xchg
arpl
add
xor
jl
scas
add
xor
out
push
add
movsl
aaa
jge
and
dec
and
pop
mov
ficoml
setg
pop
imul
sbb
jmp
fiaddl
jne
call
dec
mov
int
cmpsl
dec
test
mov
push
enter
fnstenv
add
xorb
stos
sbb
jecxz
and
xchg
hlt
jecxz
jo,pn
fistpll
mov
inc
cld
add
fbld
cmc
jle
cmp
mov
pop
xchg
in
fdivrl
test
xchg
cmpsb
add
sbb
xor
jg
adc
adc
sub
outsb
shrb
jb
push
adc
sahf
mov
mov
push
sbb
imul
and
pop
popa
andb
loope
mov
pop
cltd
sahf
or
enter
xchg
mov
jnp
icebp
push
call
adc
stc
jb
lds
dec
scas
andl
cmc
cmpsl
adc
rcll
loop
gs
imul
cld
lahf
fnsave
add
push
and
int3
jbe
xchg
cs
mov
sub
and
and
fcmove
push
dec
jecxz
aam
push
push
mov
pop
loope
scas
xor
sbb
pusha
jne
mov
lea
adc
mov
jno
jne
or
sub
adc
neg
je
mov
inc
fisttpl
mov
lret
out
icebp
xchg
fcomi
pop
loope
rdtsc
add
jne
xor
jae
mov
clc
ja
jle
dec
and
sbb
es
mov
fs
lds
dec
mov
mov
pop
ss
add
aaa
imulb
adc
lret
mov
out
test
and
je
and
imul
iret
jl
add
jae
mov
lods
cmp
psllq
pop
mov
stos
testl
push
leave
movsb
xchg
jge
mov
fiaddl
mov
push
or
mov
enter
mov
xchg
nop
pop
lods
pop
xchg
mov
cmp
and
xchg
into
ljmp
cltd
jp
pushf
jo
subb
imul
js
pop
ja
out
outsb
out
sub
xchg
push
clc
lds
outsl
inc
mov
mov
mov
je
dec
and
shll
pop
inc
adc
mov
fidivrl
sbb
xchg
bound
fcmove
adc
xchg
mov
add
jmp
push
jb
push
push
sub
pop
adc
push
sub
outsl
add
adc
subb
xchg
lret
std
fisttpll
arpl
and
rcl
mov
and
stos
inc
adc
cmp
lds
jne
push
mov
stc
ret
pop
arpl
mov
sub
mov
es
ja
sbb
mov
inc
push
repnz
adc
push
xor
jb
and
xor
sub
data16
shl
xor
leave
dec
pop
outsl
mov
add
lcall
jae
add
push
hlt
mov
cmp
pop
pusha
in
xor
scas
mov
push
les
aaa
sbb
jbe
mov
fwait
arpl
pop
jbe
fcomp
inc
outsb
xchg
cmp
cs
dec
jo
push
mov
daa
int3
int
out
pop
ljmp
push
les
sub
je
jmp
xor
imul
in
in
jae
cwtl
jbe
les
aam
lods
sub
adc
or
jae
xchg
xor
push
inc
mov
test
xchg
pop
test
cmc
mov
cs
shll
push
fists
xor
cmp
rcrb
jmp
out
jne
or
jnp
mov
adc
and
mov
cmp
outsb
test
mov
jmp
cmp
aaa
jecxz
xor
mov
sarl
stos
scas
mov
pop
xor
cwtl
or
or
lock
in
adc
push
xchg
push
les
mov
adc
jp
push
inc
push
setbe
sbb
inc
pop
js
adc
clc
mov
mov
xchg
cmp
loopne
lods
cltd
push
and
cmp
es
xchg
fcom
test
jne
std
mov
fcomps
daa
shlb
xchg
pop
or
insl
cmp
xchg
fwait
xchg
insl
lods
mov
nop
sub
aam
dec
dec
xor
lea
mov
jmp
scas
sti
cmp
lea
std
pop
mov
push
movsb
and
xchg
push
xlat
add
sub
push
mov
clc
jae
fmull
lahf
out
adc
pop
mov
mov
ror
mov
notb
add
popf
fdivs
aaa
hlt
das
cltd
adc
jne
sti
scas
cld
imul
out
mov
inc
push
or
mov
mov
dec
rcl
stos
shrl
add
jp
rcr
dec
ret
negb
and
lock
push
cmc
cmpsl
push
jp
and
fmuls
jo
pop
sahf
ret
pop
pop
mov
hlt
mov
pop
mov
xor
and
imull
jl
stc
sub
lcall
repnz
dec
aad
jno
push
inc
daa
push
mov
es
xchg
push
daa
jmp
je
jbe
xor
xchg
pop
xchg
js
dec
out
pop
push
push
shl
cmp
in
mov
std
mov
and
ja
add
jge
xor
pusha
div
lcall
dec
xchg
push
inc
popa
sub
sbb
mov
out
shll
int
and
aad
js
mov
aam
add
mov
mov
push
shlb
ds
nop
and
xlat
ss
fcmovu
in
data16
xor
roll
ljmp
nop
xchg
repz
jecxz
pop
test
sti
sub
cmpsl
mov
sbb
adc
in
push
mov
aaa
jge
jge
and
cmp
sbb
enter
shll
in
and
pop
fnstsw
push
nop
sub
lea
pusha
adc
test
mov
faddl
cmp
push
repz
aam
jno
pop
lods
xorl
dec
pushf
cmp
mov
aam
jne
cmp
adc
mov
loop
dec
sub
cs
mov
stos
arpl
pop
push
addb
aam
dec
mov
mov
cmp
insb
lock
hlt
xor
push
dec
cmp
dec
mov
sti
arpl
push
dec
pop
ljmp
pusha
inc
jl
ss
xchg
or
push
mov
adc
aas
pcmpeqd
call
mov
sub
sarb
jo
add
lds
cltd
out
add
add
jmp
push
test
sub
pop
cmp
aas
sti
mov
push
incl
push
fcoms
pop
int3
jbe
mov
icebp
cmc
cmp
mov
mov
in
sbbl
dec
enter
dec
push
push
outsb
jmp
jle
dec
mov
lods
test
sub
adc
dec
loope
pop
push
inc
jp
jp
fwait
es
mov
loop
lret
xor
push
cmp
outsl
jbe
add
aaa
ret
adcl
out
mov
push
add
divb
movsl
dec
mov
mov
fwait
pop
lods
je
or
fisubs
orl
or
mov
movsb
cmpb
call
scas
inc
pop
rclb
fs
popf
sbb
stc
lea
pop
sarl
mov
pop
sub
icebp
mov
aas
in
loop
cwtl
cwtl
mov
xor
cmp
out
xor
pop
adc
xchg
ljmp
mov
dec
dec
inc
movsb
sub
addl
std
xor
aad
mov
add
xlat
push
jge
jp
lock
shrb
mov
mov
enter
mov
clc
frstor
insl
scas
dec
add
sub
idivb
mov
fs
and
pop
mov
ficompl
gs
pop
test
inc
stos
xchg
sub
jne
arpl
xchg
sbb
xchg
inc
mov
jmp
out
rclb
pop
rcrl
mov
inc
pop
idivl
rclb
test
jno
inc
inc
dec
test
mov
xor
inc
mov
aaa
aaa
std
sub
outsb
in
add
cmp
or
inc
pop
inc
lock
rol
or
out
mov
push
jb
fdiv
xor
dec
adc
push
imul
fcmovnb
cmp
and
inc
addl
xchg
sti
popf
iret
jnp
sahf
test
in
sbb
ljmp
adc
xor
add
insb
cli
cmpsl
pop
cwtl
mov
push
push
dec
add
ss
add
lea
ds
pop
adc
es
into
cmp
stos
inc
xor
in
pop
push
jae
sbb
ljmp
stc
adc
inc
pushf
in
adc
adcb
push
jno
scas
into
xor
xchg
fisttpl
sbb
push
arpl
inc
push
push
pop
fcoms
push
aam
pushf
andb
leave
rcrl
mov
hlt
stc
mov
push
inc
adc
fnstenv
adc
dec
aas
lret
or
ss
xchg
mov
jle
sub
xor
sbb
fidivrl
xchg
sub
lcall
je
adc
sub
dec
stc
mov
mov
pminsw
push
lods
push
rcrl
cwtl
ret
inc
test
cmp
sub
sub
mov
xor
cmp
xor
mov
xor
std
dec
jns
lods
cmp
clc
icebp
mov
jmp
es
xor
push
jno
pop
ret
pop
fmull
test
mov
cmpsb
sub
into
mov
mov
or
stos
clc
jns
sub
jle
push
xchg
mov
jl
mov
jns
jecxz
das
and
sbb
ja
mov
xor
or
mov
and
lds
xchg
test
mov
mov
add
pop
sahf
or
adc
pusha
call
fimuls
in
clc
jl
jb
lods
pop
cmc
dec
fsubr
repnz
and
dec
cmpsb
out
pop
jno
call
mov
sub
mov
ficoml
je
shl
mov
inc
push
cmpsl
mov
leave
out
div
mov
mov
sub
sub
call
js
push
sbb
std
adc
enter
mov
xor
sub
sahf
loop
mov
fidivl
xor
or
scas
mov
or
sub
sbb
rorb
shl
add
cli
in
adc
push
mov
pop
mov
fld
nop
cmp
jb
stc
mov
xor
add
cmc
jecxz
mov
jp
jp
adc
in
add
dec
aam
add
cmpsb
or
mov
loop
loopne
push
je
mov
fimuls
mov
xchg
jo
and
sbb
mov
sbb
inc
fcmove
lret
sub
sbb
inc
popa
dec
out
pop
scas
and
xor
cmp
mov
pusha
fsubrl
inc
dec
mov
mov
daa
clc
xor
aas
add
or
int
add
mov
dec
fsub
int3
cltd
sti
inc
sahf
popa
cmpl
fimull
cmp
jl
lods
stos
cmp
mov
inc
mov
adc
mov
int3
stos
cltd
notb
sbb
mov
loopne
nop
fstl
mov
leave
mov
fstps
jmp
jle
in
cmp
cmp
daa
mov
imul
fsubrp
ret
mov
xchg
imul
adc
push
xlat
mov
jns
and
aas
jmp
sbb
push
repz
mov
cmp
pushl
inc
mov
cmpl
in
rcrl
cld
gs
cli
call
mov
cmpl
lds
xchg
cld
xor
dec
push
inc
cwtl
js
mov
leave
adc
jno
iret
mov
das
sti
xlat
adc
mov
xchg
in
lahf
out
fmul
ret
jge
addr16
jp
pop
mov
mov
fwait
testl
test
leave
lds
inc
add
mov
andl
pop
jnp
setge
loope
pusha
mov
sbb
push
mov
vmfunc
addr16
sarl
xchg
aad
lock
outsb
pop
and
idiv
iret
fistps
movsb
sub
fistl
mov
pop
shlb
push
push
cmpsl
pop
pop
lock
sub
add
xchg
mov
push
je
sub
add
and
fstpl
insl
cld
jg
xchg
adc
cmp
xorps
repz
or
rorb
add
ret
or
stos
lods
jne
push
jb
fcomps
pop
ret
mov
jmp
mov
mov
repz
ffreep
jmp
mov
js
dec
push
mov
iret
fwait
das
stc
jb
pop
push
stos
mov
cmp
pop
call
ss
pop
push
test
fnstcw
es
add
cmp
dec
lcall
les
stos
cmp
mov
test
cmp
pop
psllq
xchg
mov
inc
jge
and
test
ror
xor
push
mov
out
clc
push
aam
jmp
repnz
test
or
cmc
push
add
adc
popa
pop
sub
pop
xor
adc
cli
jge
cmp
sub
cmc
and
and
repnz
cmp
inc
mov
push
push
insb
add
jne
push
adc
andl
inc
and
sbb
cs
mov
xchg
adc
imul
mov
in
pop
cmp
test
loopne
sub
mov
out
nop
mov
in
rcll
add
cmp
sti
mov
lret
mov
mov
nop
lods
mov
mov
popf
mov
lds
push
in
mov
mov
or
lods
push
and
mov
rcl
fnstcw
std
stos
xor
call
mov
sbb
into
out
aam
out
lods
sub
mov
loop
daa
mov
inc
inc
rcr
dec
mov
or
daa
xchg
lahf
in
add
adc
fs
and
xchg
xor
repnz
jns
or
xchg
xor
lods
cmp
subb
mov
jg
dec
inc
cmp
push
cmp
push
lret
dec
popf
lds
or
pop
addr16
ljmp
cs
pop
fists
jecxz
push
mov
popa
cwtl
insb
call
out
push
movsl
loop
add
stc
rolb
ds
lea
ljmp
dec
dec
jmp
push
fcmovbe
cmp
mov
jns
cmp
ret
mov
out
dec
pop
fistpll
add
pop
shlb
mov
lods
cmp
in
dec
mov
lret
addr16
pop
pusha
push
daa
jp
lods
lret
aas
jnp
xlat
fdivrs
test
sub
xor
push
adc
rdmsr
sbb
daa
xor
movsl
push
sbb
shlb
sti
push
stc
xor
jg
add
mov
jns
data16
or
repz
push
movsl
filds
adc
push
xchg
test
in
and
dec
jecxz
lcall
mov
iret
dec
rolb
scas
in
rcll
movsb
inc
popa
in
test
hlt
cwtl
cmp
jo
rol
mov
sub
xorb
int
pop
in
scas
add
xchg
sub
out
ffree
dec
mov
xchg
and
je
fcoml
adcl
fistpll
cmp
xchg
stos
sub
mov
lock
ds
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
add
je
inc
adcb
inc
jnp
jl
jmp
or
imul
movsl
and
add
clc
adc
mov
cwtl
sarl
cmc
movsb
adc
and
adc
cbtw
jp
mov
ret
mov
mov
movsb
mov
cli
scas
loop
ss
out
mov
scas
jo
push
jge
xor
sub
insb
ficomps
cmp
movsb
jno
lahf
std
pop
jge
cld
add
adc
push
pusha
jo
xor
xor
add
xchg
or
push
pop
mov
inc
dec
cli
or
xchg
mov
lds
inc
xchg
mov
out
bound
stos
rol
popa
push
cmp
inc
mov
and
out
or
jle
hlt
ret
xor
sub
pushl
mov
scas
sbb
sti
ret
bound
pop
lahf
fnstcw
cmp
loop
push
xchg
xchg
xchg
pop
mov
scas
mov
inc
outsl
into
or
xchg
jbe
mov
pop
notl
xchg
movb
xor
mov
xchg
cmp
insl
mov
outsb
imul
rolb
flds
jae
lcall
jl
pusha
lods
xchg
jp
test
mov
mov
dec
cwtl
push
xlat
xchg
sbb
pop
clc
sti
test
fldl2e
mov
push
mov
nop
sub
fwait
daa
inc
aad
push
out
fxch
xchg
cmp
dec
jmp
inc
inc
in
adc
jg
adc
dec
scas
scas
adc
adc
sub
in
std
int
mov
fwait
adc
inc
lods
mov
xor
lds
les
fimuls
or
mov
pop
jno
jle
loopne
cld
ljmp
ror
and
adc
xchg
addr16
out
fsts
mov
add
inc
add
add
add
add
add
inc
xchg
int3
pop
add
xchg
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
fcompl
