jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
iret
inc
add
or
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
in
inc
add
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
movb
xor
leave
adc
add
nop
add
dec
std
leave
adc
mov
std
leave
adc
add
cwtl
add
jo
leave
adc
mov
std
leave
adc
add
mov
add
cmp
mov
add
test
int3
adc
add
add
std
leave
adc
add
mov
int3
adc
add
int3
pop
mov
std
leave
adc
add
rolb
dec
adc
cmp
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
add
enter
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
adc
int3
adc
add
mov
mov
lret
add
sub
int3
adc
add
int3
in
mov
add
adc
add
dec
pop
int3
adc
add
pushf
in
mov
add
adc
add
push
pop
int3
adc
add
lods
in
mov
add
adc
add
pop
pop
int3
adc
add
mov
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
cwtl
mov
push
lret
add
js
int3
adc
add
nop
cltd
mov
add
in
lret
or
adc
add
sbbb
push
lret
add
nop
or
adc
add
add
mov
push
lret
add
cwtl
or
adc
add
mov
mov
pop
lret
cmp
or
or
or
or
and
or
or
or
or
or
or
or
add
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
lret
add
insb
or
adc
add
mov
mov
lret
add
je
int3
adc
add
dec
mov
lret
add
cwtl
or
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
add
call
cmp
or
or
or
add
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
add
les
int3
adc
add
insb
out
adc
adc
add
rorb
int3
adc
add
pop
out
adc
adc
add
fmuls
int3
adc
add
jl
mov
or
adc
add
loopne
int3
adc
add
mov
mov
or
adc
add
call
add
pushf
out
adc
adc
add
lock
adc
add
lods
out
adc
adc
add
clc
or
adc
add
int3
out
adc
adc
add
add
int3
adc
add
mov
sbb
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
sbb
int3
or
les
int3
adc
add
or
lock
call
or
adc
add
jo
mov
push
lret
add
orb
adc
add
nop
cmpl
add
nop
or
adc
add
clc
xchg
push
lret
add
mov
add
call
sbb
movl
movl
mov
movl
add
enter
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
add
ret
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
add
push
add
add
add
rcrb
and
add
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
inc
add
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
int3
inc
add
cmp
mov
cmp
ret
jno
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
sbb
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
inc
add
or
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
add
inc
add
add
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
dec
test
add
decl
dec
and
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
inc
add
add
add
out
cmp
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
inc
add
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
roll
insb
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
add
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
add
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
add
xchg
adc
mov
dec
and
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
aam
inc
add
jl
je
jl
js
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
add
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
add
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
cs
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
inc
add
test
lock
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
inc
add
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
add
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
add
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
sub
rol
add
add
decl
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
add
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
shld
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
add
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
add
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
add
add
les
fnsave
add
pop
scas
add
jne
mov
add
add
add
movb
push
outsl
add
add
add
add
add
add
jo
add
push
pusha
xchg
mov
add
imul
add
add
add
xchg
jb
jns
in
add
jge
lahf
rcll
notl
mov
fld1
jle
add
add
mov
mov
push
flds
push
ret
add
lret
add
add
add
add
jo
lahf
fs
roll
lret
add
add
mov
add
movsl
mov
add
jge
jp
rolb
test
push
add
mov
loopne
xchg
fisttps
cmpsl
cltd
mov
push
add
insb
test
add
add
loopne
movsl
mov
add
mov
push
in
xor
xor
shl
push
push
lea
push
push
call
into
loop
add
add
add
out
bound
bound
add
add
add
into
lcall
push
scas
in
add
add
fwait
add
add
add
ja
cmp
leave
roll
cmpsl
not
clc
lcall
add
pusha
xchg
add
add
mov
add
jge
mov
pop
test
test
mov
pop
movl
push
push
lea
push
push
push
push
push
call
cld
movl
xchg
jle
ja
mov
lahf
add
out
js
add
scas
add
add
add
cli
cmpsb
imul
out
pusha
add
add
add
add
add
lock
mov
add
xchg
xlat
leave
add
shrl
add
in
mov
mov
lods
jbe
add
add
add
jne
mov
aam
bound
popl
push
push
push
push
push
push
push
push
call
add
js
mov
add
lock
push
int3
ret
js
add
in
movsl
pusha
add
add
add
lods
in
out
shll
insb
scas
xchg
scas
add
jl
add
add
pop
cmpsb
fstpl
lahf
filds
add
add
xchg
lahf
jle
add
pop
add
add
add
xchg
mov
mov
add
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
lret
out
add
jmp
add
mov
out
add
scas
out
mov
mov
mov
ret
jno
rorb
std
call
iret
lds
add
in
add
ja
jle
in
jmp
test
andl
add
xchg
add
add
rcl
push
jne
cmc
fld
arpl
iret
add
add
add
popf
std
mov
add
pop
push
push
call
push
push
lea
push
call
pushf
add
scas
mov
add
addb
mov
add
add
loopne
mov
cmpsb
add
mov
mov
xchg
xchg
enter
clc
add
pop
add
add
add
gs
scas
lds
add
push
stc
stc
mov
add
add
add
out
add
add
out
add
loop
pop
add
xchg
ret
push
cltd
int
add
cltd
popa
movsb
add
add
add
add
mov
lea
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
js
stos
add
into
mov
sti
mov
add
push
std
add
cltd
mov
pop
add
in
sub
add
mov
add
add
lds
std
add
add
ficoms
mov
add
add
add
icebp
rcr
add
in
mov
add
clc
fadds
mov
jmp
in
pop
fisttpl
xorl
mov
lea
pop
push
call
push
lea
push
lea
push
call
xchg
add
add
add
mov
add
les
add
jl
pusha
lds
add
ret
add
pop
fwait
push
xlat
lcall
add
xchg
add
outsl
add
fildl
pop
jns
add
xchg
add
test
rol
aam
jns
pop
sti
ljmp
push
call
add
pop
jmp
ret
push
lea
push
push
lea
push
push
push
push
push
push
call
popa
out
pushf
int3
jl
into
add
add
std
add
push
cmpsl
pop
add
mov
jo
add
out
pop
mov
mov
mov
fidivrs
add
sti
add
loopne
lods
add
cli
addl
add
data16
into
loopne
out
push
imul
add
add
lahf
mov
add
add
bound
add
mov
add
movb
iret
jb
orb
mov
push
push
push
call
jmp
push
add
push
add
add
add
test
jb
repnz
addl
add
push
jne
icebp
add
add
mov
fbld
add
add
lds
add
out
bound
add
pop
pushf
mov
add
add
mov
jae
loope
add
jae
add
add
fs
push
add
cmpb
mov
lea
pop
mov
add
add
push
push
push
push
push
push
push
push
push
push
call
add
add
add
cmpsl
xchg
mov
add
hlt
mov
add
xchg
iret
movl
add
fiaddl
mov
jmp
int3
add
pop
icebp
add
add
add
add
enter
add
add
push
add
incb
add
out
enter
add
jecxz
push
add
test
add
add
add
in
mov
popa
sub
ret
frstor
add
mov
push
call
add
pop
add
cmpsb
lcall
stos
mov
add
add
ffree
add
mov
fucomi
lods
add
add
add
in
push
mov
add
movsb
add
mov
add
leave
pusha
add
mov
add
add
add
add
add
into
push
add
in
add
pop
add
movl
add
add
pop
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
shl
fiaddl
xchg
push
lods
add
add
decb
lds
add
mov
add
int
add
outsl
out
add
lods
add
scas
jecxz
mov
pushf
add
add
add
mov
add
sti
add
testl
pop
add
repnz
fiaddl
popa
add
push
add
jecxz
fldl
icebp
leave
add
mov
into
bound
int3
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
push
in
add
shll
add
mov
test
jl
std
add
int
cld
orb
add
cwtl
cld
fildl
add
jecxz
add
add
add
sti
mov
mov
fwait
in
test
add
lret
pop
movb
xchg
xchg
out
std
int3
mov
in
movsb
add
pop
add
add
add
incb
nop
out
push
pop
xchg
pop
pop
add
add
fmull
inc
in
push
push
lea
push
push
push
call
icebp
push
mov
aad
push
mov
test
add
fcmovnbe
add
add
xchg
add
add
int3
add
insb
cmc
shlb
lock
add
imul
loop
add
push
add
push
cmpsl
add
add
jecxz
fs
clc
add
mov
out
mov
in
ffreep
int3
movsl
cwtl
faddl
add
pop
call
mov
push
push
push
push
push
call
lcall
insb
add
add
rolb
andb
mov
mov
mov
add
add
add
xlat
bound
mov
mov
fwait
add
xchg
js
add
add
shl
rcrb
add
jno
add
rorb
xorb
mov
test
add
add
in
roll
xchg
mov
lea
pop
xor
push
lea
push
push
push
push
push
push
call
add
scas
pushf
movb
add
fistps
pop
fs
add
jae
add
loope
add
repnz
rclb
xchg
out
mov
sti
scas
xchg
push
add
add
test
lcall
xchg
mov
push
jb
ljmp
mov
add
add
add
shl
add
cltd
mov
lea
pop
add
push
push
not
inc
add
add
push
or
not
add
add
sub
not
shr
pop
shr
inc
add
pop
push
push
push
push
push
call
add
add
xchg
mov
pop
jge
test
add
pop
test
je
dec
fnstenv
cltd
fucomi
mov
add
jge
pop
xchg
add
add
sahf
into
add
add
mov
mov
out
add
pop
fiadds
pop
filds
pop
ljmp
bound
clc
add
add
add
add
fstl
nop
test
add
adc
pushl
push
lea
push
push
push
call
pop
mov
add
addl
jp
roll
add
add
mov
out
scas
add
push
stos
add
add
add
add
clc
add
movsl
fldenv
mov
stc
arpl
pop
xchg
ljmp
cld
pusha
jno
add
add
pop
add
add
add
add
ret
push
enter
scas
add
xchg
mov
add
add
xchg
insb
add
pop
add
pop
call
push
push
lea
push
call
aam
add
jge
push
test
mov
add
jb
add
add
add
mov
mov
add
pop
pop
mov
clc
mov
mov
jae
hlt
addb
add
lcall
add
jl
jmp
loope
add
add
add
shll
add
mov
popa
sbbb
add
mov
lea
pop
mov
movl
lea
push
lea
push
lea
push
push
call
add
lret
nop
scas
add
add
mov
aad
add
je
incb
insb
mov
mov
add
add
add
filds
xlat
add
fiadds
add
add
addr16
jmp
into
loopne
icebp
ret
add
movsb
add
push
lea
add
add
add
add
test
subb
cld
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
add
ficompl
add
add
scas
lahf
orl
add
out
xchg
add
cwtl
add
in
mov
lock
add
in
in
out
rolb
stos
add
add
add
add
add
add
add
divl
sar
call
loope
add
push
add
lret
add
jle
sti
into
add
lret
mov
add
fcomip
out
cld
lea
pop
pushl
pushl
call
push
push
push
push
call
pop
imul
lods
movsb
add
arpl
xchg
add
jns
add
add
add
fcmovb
popf
add
add
jge
add
addl
mov
jp
add
add
xchg
into
add
repnz
add
ljmp
add
push
add
add
jge
nop
add
shr
ja
mov
aad
hlt
lea
pop
pushl
pushl
push
push
call
fmull
add
in
add
arpl
add
add
stc
lahf
push
mov
js
popl
ja
rolb
mov
add
xchg
xchg
in
sahf
lret
les
add
lock
add
mov
add
leave
cwtl
jl
jne
fcoms
add
add
andl
add
out
add
ficoml
ret
mov
add
push
add
mov
cwtl
jo
add
pop
call
push
push
sub
push
xor
add
dec
inc
xor
sub
sub
pop
sub
sub
dec
pop
push
push
call
ljmp
mov
add
add
jp
repnz
mov
test
je
add
add
add
jle
add
mov
cwtl
std
add
mov
mov
xchg
out
loop
add
add
nop
add
stc
add
roll
xchg
add
pop
test
test
add
lea
pop
pushl
call
push
push
push
push
push
push
push
push
call
fsubl
addb
int
sarl
loope
pop
jp
add
mov
push
add
add
jecxz
imul
pop
add
mov
add
add
fbld
fadds
add
add
add
push
gs
lods
add
cltd
mov
mov
xchg
add
nop
test
jo
add
add
jl
sbbl
lcall
jmp
add
add
mov
lea
pop
push
push
push
ror
not
shl
push
push
pop
add
not
inc
sub
inc
sub
add
add
not
pop
ror
pop
push
lea
push
call
movsb
add
mov
add
add
jl
push
add
lret
add
roll
add
movsb
add
add
andl
jmp
mov
cld
sahf
cmpsl
add
mov
je
add
fiaddl
add
add
add
mov
int3
scas
add
frstor
mov
add
mov
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
jne
add
add
jns
roll
add
mov
jns
imul
add
jno
cwtl
add
push
test
fiaddl
add
add
cmc
push
add
movsb
nop
test
add
lea
lods
add
lds
add
add
add
fdivrl
add
fisttpll
arpl
subb
mov
add
pop
call
push
push
push
push
call
add
test
mov
jnp
nop
cmc
mov
add
add
hlt
add
jecxz
mov
jnp
mov
mov
add
add
movsl
pop
test
test
add
add
pop
add
mov
sbbl
pop
out
enter
mov
mov
lea
pop
mov
push
lea
push
call
ret
add
pusha
ret
clc
popl
mov
add
add
pushf
lret
addb
lods
test
add
add
add
pop
pop
add
lret
js
add
jp
mov
fadds
fdivs
out
imul
add
xchg
xchg
push
add
mov
add
sahf
add
add
mov
pushf
pusha
mov
les
push
lea
push
push
push
push
push
call
push
mov
add
in
les
add
jno
lods
add
xchg
mov
mov
mov
jo
xchg
add
lods
pop
mov
call
mov
jno
add
mov
clc
movsb
jl
add
add
ljmp
repnz
ja
add
add
movsl
add
hlt
add
add
mov
mov
lea
pop
push
mov
add
push
push
push
push
call
pop
lahf
xorl
push
jnp
lahf
into
push
mov
pop
xchg
into
add
jbe
jae
test
cmc
add
mov
xchg
cmpl
add
mov
jmp
add
loopne
add
xchg
add
add
push
add
mov
test
pop
jns
add
popf
iret
mov
ja
mov
lea
pop
add
add
mov
xor
push
push
push
push
push
push
push
push
push
call
add
out
add
jp
rol
mov
add
repnz
mov
add
stos
add
gs
cld
mov
ret
pop
aad
add
out
flds
mov
add
push
mov
roll
pushf
ljmp
pop
pop
aam
add
xchg
faddl
out
lea
mov
pop
xchg
jno
add
clc
lods
js
outsl
icebp
add
lods
add
add
mov
and
add
push
mov
push
push
lea
push
push
push
call
push
xchg
mov
add
add
fstp
into
movsl
arpl
pop
out
add
fadd
js
jnp
add
fmulp
cli
jecxz
in
add
add
hlt
fs
loop
ja
pushf
add
nop
lcall
push
je
jge
add
add
mov
push
and
jae
add
mov
cli
add
shrl
fisttps
pop
xor
push
push
push
push
push
push
push
push
push
call
jmp
call
imul
push
mov
add
iret
add
mov
add
add
add
xchg
lods
add
add
out
popf
test
mov
mov
scas
scas
add
add
mov
add
movsl
xchg
add
roll
jl
stc
add
cwtl
lea
add
imul
mov
loop
mov
add
push
jle
mov
add
lea
pop
add
push
push
push
lea
push
call
add
add
jne
add
mov
add
je
add
add
add
add
popa
mov
leave
add
add
add
add
filds
call
test
add
iret
add
add
add
lcall
add
test
std
jnp
add
add
jns
data16
std
data16
mov
mov
add
popa
adc
lock
push
push
push
push
push
call
jmp
test
xchg
aam
lret
add
lret
cltd
add
add
xchg
fistpll
out
jmp
jp
add
les
add
push
jae
xchg
lcall
ja
mov
fildl
mov
add
stos
push
xchg
leave
pop
add
fidivs
test
cli
movb
add
xchg
cli
pop
add
scas
addl
sti
add
jp
enter
add
mov
lea
pop
mov
push
push
push
push
call
gs
add
add
imul
mov
add
lahf
push
mov
add
add
pop
push
jge
add
add
incb
add
lea
shlb
roll
add
mov
lock
lcall
add
add
lods
add
add
xchg
jecxz
cli
push
cwtl
jecxz
loope
icebp
loopne
iret
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
mov
add
pop
out
sahf
loopne
xchg
add
iret
movsl
add
add
scas
add
out
ret
mov
jmp
fsts
mov
add
add
into
add
add
add
rol
scas
xchg
add
fldcw
jae
repnz
add
push
ja
push
addb
loope
add
add
add
mov
lea
pop
add
push
push
lea
push
call
enter
mov
test
cmpsl
andb
add
pusha
clc
cmpsb
iret
add
push
add
add
add
mov
add
add
sahf
push
hlt
popa
jle
sarl
mov
add
add
rolb
push
xchg
test
pusha
sarl
push
push
add
cwtl
js
add
ljmp
bound
push
push
push
call
out
je
pusha
movsb
mov
pushf
imul
enter
add
pop
add
pop
mov
add
pushf
mov
movsb
faddl
add
add
iret
int3
les
not
mov
push
add
lods
popa
add
jle
pop
cwtl
stos
mov
rolb
loope
scas
jmp
mov
add
cwtl
add
mov
arpl
pop
mov
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
add
add
sahf
xchg
cli
stc
pop
lret
jge
add
jns
add
xchg
icebp
add
std
call
add
push
add
add
test
mov
imul
jmp
mulb
add
movsl
add
mov
mov
int3
hlt
add
leave
roll
jl
pop
out
add
fsubl
sub
add
mov
mov
popa
and
xor
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
xchg
pop
cwtl
cmc
push
add
mov
pop
ja
add
push
mov
jae
clc
in
jbe
mov
add
hlt
cld
add
pop
add
testb
jge
add
out
add
jecxz
jmp
imul
mov
mov
jp
add
enter
add
mov
mov
add
mov
jge
loope
mov
lea
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
roll
popf
mov
mov
addl
fiaddl
js
add
test
mov
out
add
jle
int3
test
jmp
jle
ret
add
flds
into
fcmovnu
sahf
ret
leave
jno
stc
rcr
loopne
add
jne
add
xchg
test
mov
jo
fldcw
cld
lea
pop
sub
pop
rep
push
lea
push
push
push
push
lea
push
call
addb
int3
add
add
jmp
aad
roll
add
ljmp
lret
mov
add
xor
mov
add
ret
pop
add
in
add
add
add
add
lods
pusha
imul
mov
popf
rolb
add
in
add
jl
ljmp
add
clc
add
add
pop
add
lcall
fucomp
scas
mov
lea
pop
pop
push
lea
push
push
call
jbe
add
xchg
add
add
filds
add
sarl
add
add
add
mov
add
jns
call
add
add
cltd
add
jle
push
mov
cld
add
add
push
imul
lea
add
mov
addl
stos
add
add
mov
add
jbe
in
add
mov
add
loopne
loop
rcr
push
rcrl
pop
mov
push
push
lea
push
call
jmp
jp
push
pop
stos
add
mov
add
add
mov
stos
add
add
add
add
xchg
mov
jp
add
mov
mov
scas
mov
add
jecxz
xchg
add
push
jnp
mulb
add
addl
add
insb
repnz
add
fdivrl
add
in
enter
popa
scas
fiaddl
mov
frstor
hlt
lea
pop
add
push
lea
push
push
call
push
add
cli
mov
fidivl
roll
movsb
add
cwtl
in
add
stos
scas
jge
cmc
je
add
test
repnz
add
mov
fstl
out
enter
addb
test
add
add
cltd
sbbb
add
add
add
add
push
jge
push
add
add
add
scas
add
ret
cld
lea
pop
add
add
mov
push
push
push
push
push
push
push
push
lea
push
push
call
jecxz
call
add
rcll
rcrb
add
cli
add
pop
add
add
lret
add
add
add
testl
add
cli
test
add
ljmp
add
xchg
rolb
add
mov
lea
pop
xor
push
lea
push
lea
push
push
call
int3
jo
les
scas
add
mov
add
pop
in
test
pusha
xchg
mov
add
add
add
ficomps
fiadds
sahf
pop
add
bnd
add
add
jnp
add
in
add
add
pop
out
lret
pop
fsts
add
test
push
mov
cltd
push
in
pop
enter
rorl
add
push
push
push
lea
push
call
pop
mov
js
jae
add
nop
add
add
push
loopne
jecxz
xchg
aam
fld
add
add
lods
fildl
pushf
add
cltd
fadds
stc
add
add
add
add
add
in
pop
insb
loopne
gs
int3
test
insb
icebp
mov
jle
add
out
iret
add
add
pop
mov
push
push
push
push
push
call
orl
fs
jle
faddl
add
add
add
in
add
add
sti
add
out
add
add
ret
add
ja
add
mov
enter
rcl
mov
pop
lea
in
movsb
add
add
add
add
add
add
xchg
out
jecxz
mov
mov
lea
pop
xor
push
push
push
push
push
push
push
push
push
call
mov
addl
mov
add
mov
shl
jb
add
lds
scas
pop
add
and
pop
add
fldl
shll
add
add
mov
add
add
test
cltd
out
add
enter
add
bound
cmpsb
imul
jecxz
jp
mov
add
scas
addb
cltd
into
mov
cwtl
jae
mov
fmull
les
add
push
push
push
push
call
cmpsb
test
push
push
mov
add
cmp
fcmove
rol
add
mov
mov
lods
mov
mov
faddl
lods
out
add
add
cld
add
out
testb
add
fdivrs
outsl
add
add
fiaddl
jbe
les
xorb
add
out
lcall
data16
dec
inc
push
push
lea
push
push
lea
push
push
call
mov
fsubs
stos
clc
bound
std
add
ror
xchg
add
iret
jae
out
add
int
add
call
add
outsl
aad
add
in
add
out
add
jl
call
mov
jnp
leave
xchg
loopne
add
stos
add
pusha
int
arpl
xlat
bound
pop
fsts
pop
add
mov
xchg
add
imul
lea
pop
xor
push
push
push
push
call
jno
cmpsl
add
add
out
push
fidivrs
add
jmp
lea
pop
xchg
mov
aad
movsb
add
add
fistpll
add
bnd
add
mov
add
add
mov
popf
add
std
add
enter
add
add
mov
test
rolb
add
rcrb
mov
imul
add
push
push
push
push
push
lea
push
push
call
add
in
jge
in
add
pop
mull
add
addb
add
movsb
loope
mov
loopne
out
leave
call
jl
add
jo
add
add
add
mov
xchg
stos
jecxz
add
add
popf
sti
fs
fiadds
mov
add
lea
out
add
add
add
lahf
stc
cmpsl
mov
lea
pop
add
push
push
push
push
push
push
push
push
lea
push
push
call
jle
jp
lods
add
out
mov
add
add
orb
iret
jl
add
add
add
into
jl
aad
add
stc
add
xchg
add
jl
ja
iret
push
icebp
add
add
mov
andl
add
jp
mov
imul
add
add
add
pop
mov
push
push
not
xor
push
or
not
add
lea
add
sub
sub
lea
pop
inc
rol
ror
pop
push
lea
push
push
push
push
lea
push
push
lea
push
call
fs
rclb
add
stc
jmp
fsubrp
lods
leave
add
mov
push
add
mov
add
add
mov
test
add
test
add
jecxz
xchg
icebp
push
testl
add
add
out
int3
mov
mov
push
cli
add
fcmovbe
out
add
mov
test
lea
pop
pushl
call
push
push
push
push
push
push
lea
push
push
lea
push
push
call
add
lcall
add
add
mov
imul
add
add
add
mov
jbe
icebp
mov
rcll
jne
push
add
add
pop
nop
mov
jmp
stos
in
imul
jbe
push
mov
lea
jp
jge
into
jmp
stos
xchg
aad
insb
iret
add
add
add
hlt
in
in
add
add
pop
push
push
push
dec
sub
push
sub
add
sub
sub
xor
add
rol
add
pop
dec
add
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
rolb
popl
pop
jno
fadds
add
xchg
mov
mov
jbe
jae
add
add
push
in
add
add
std
add
arpl
jae
shll
data16
add
add
push
add
mov
add
mov
add
in
pop
in
pop
loope
push
fiadds
add
add
fmull
push
call
push
push
push
lea
push
push
lea
push
call
jecxz
add
add
add
add
out
add
xchg
add
add
jecxz
mov
lea
out
add
xchg
popf
into
add
add
arpl
add
lcall
in
jo
xchg
add
add
movb
mov
push
xchg
pop
add
in
add
mov
fbld
shll
jne
mov
lea
pop
mov
push
push
call
jbe
add
push
mov
pop
lret
iret
lds
out
mov
jbe
add
add
add
lcall
add
jb
fisubrs
lcall
xchg
loopne
mov
jo
aam
xor
xlat
add
std
mov
add
add
js
movsl
scas
add
int3
add
cli
add
or
push
mov
push
push
lea
push
call
in
cmpsb
add
add
notl
test
push
add
add
mov
add
add
pop
test
fists
jle
movsl
jl
add
add
cld
outsl
add
add
repnz
flds
push
xchg
add
lcall
add
cld
push
xchg
les
in
add
add
lret
mov
add
xchg
faddl
add
mov
lea
pop
add
push
push
push
push
push
lea
push
push
call
in
add
rcll
add
in
ret
add
lds
subl
add
cli
mov
in
aam
out
pop
out
test
mov
mov
mov
add
add
add
jae
in
add
push
insb
lcall
movl
stos
fsts
faddl
popl
enter
mov
mov
lea
pop
add
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
cltd
insb
testl
add
lods
add
add
mov
test
movsb
add
add
add
lea
add
add
jp
add
add
add
pop
fwait
cld
jns
jle
add
aam
out
add
add
add
add
add
add
mov
lea
pop
add
push
lea
push
push
push
lea
push
call
imul
pop
mov
loope
xchg
add
add
out
cli
add
js
fwait
pop
add
stos
add
in
push
push
mov
out
fadds
add
add
mov
jae
add
jns
loopne
add
cli
into
fldt
pushf
pop
ror
add
add
push
add
add
mov
lea
pop
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
movsl
fidivl
add
icebp
add
add
nop
in
in
mov
loope
pushf
mov
in
into
subb
pop
add
ja
test
mov
mov
add
add
leave
add
add
out
xchg
add
mov
jl
add
hlt
scas
push
fidivrs
mov
roll
mov
xchg
xchg
in
fnstenv
push
add
xchg
jae
cld
lea
pop
xor
push
push
push
push
push
lea
push
push
call
test
mov
lea
jl
mov
add
aad
add
add
rcl
add
add
cld
rolb
add
arpl
mov
add
mov
clc
cwtl
push
mov
add
add
jl
add
mov
add
pop
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
mov
push
add
cmc
movsb
mov
fprem1
into
popf
add
cwtl
aam
std
fildll
std
add
imul
in
call
ret
gs
add
mov
add
mov
add
subl
lods
push
icebp
pop
push
jbe
lods
add
add
push
fimuls
add
sti
add
add
add
push
roll
jne
xchg
test
sub
jne
push
mov
xor
push
push
push
call
add
into
scas
add
jecxz
xchg
mov
mov
jbe
movsb
lcall
add
scas
aam
add
in
aad
add
add
in
push
add
push
add
add
icebp
xchg
jbe
jmp
hlt
movsb
incb
add
mov
fadds
add
add
add
lods
cld
jb
push
add
bound
add
pop
push
push
push
push
push
lea
push
call
add
out
andl
add
cltd
popf
enter
add
add
sti
mov
gs
iret
add
loope
add
add
pop
add
add
andb
add
jns
out
jns
add
add
add
add
sahf
add
xchg
scas
in
add
add
add
add
mov
lea
pop
mov
push
push
push
push
push
push
call
mov
push
cmpsl
mov
lret
add
mov
imul
add
add
jge
hlt
jmp
add
add
je
add
lahf
loopne
add
jnp
enter
lds
ljmp
outsl
add
lret
push
xchg
test
in
lcall
xchg
pop
outsl
add
stc
fstps
push
fldl
popa
out
xchg
into
add
hlt
add
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
cli
imul
loop
add
lcall
fs
add
int
mov
mov
stc
add
cwtl
add
pushf
mov
add
stos
nop
mov
test
lds
add
add
push
stos
jle
scas
add
push
popa
push
cmpsb
add
cmc
push
add
mov
mov
add
mov
int
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
call
cld
ret
add
add
mov
mov
out
movsb
xchg
jae
mov
mov
mov
xchg
add
sti
lods
add
cmc
leave
cmpsb
testl
jp
pop
add
out
add
add
imul
add
mov
add
xchg
cmc
add
add
add
iret
popa
xchg
data16
pop
add
mov
add
jbe
test
negl
add
add
fmull
movsb
mov
xor
push
push
push
lea
push
push
call
cltd
fisttps
mov
mov
cld
mov
add
jl
repnz
push
add
lods
jl
test
out
xchg
jb
add
gs
mov
cmpsl
cmc
add
add
mov
add
pop
mov
xchg
lret
add
xchg
add
add
jbe
mov
lea
pop
or
je
push
push
push
lea
push
push
push
push
push
call
insb
add
fstl
addr16
add
pop
in
ljmp
mov
add
pushf
lret
add
jne
add
xchg
xchg
add
add
mov
shr
arpl
mov
sarl
test
add
popf
add
add
add
xchg
add
add
pop
mov
xor
push
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
xlat
loopne
imull
jae
add
mov
addb
mov
add
add
divl
bound
pop
add
add
add
mov
stc
pop
pushf
mov
jne
lods
data16
add
repnz
add
ret
add
push
add
mov
lahf
add
add
lcall
lods
imul
loopw
rcr
xchg
fdivrs
mov
lea
pop
mov
push
push
push
lea
push
call
sbbl
ficoms
add
add
out
add
shr
add
mov
mov
insb
in
add
jae
mov
aad
pop
add
sahf
pushf
add
add
jnp
add
jge
insb
mov
out
xchg
lea
add
fs
rolb
data16
les
adc
push
push
lea
push
push
push
push
call
mov
je
mov
xchg
add
repnz
add
call
push
add
push
mov
add
sub
add
mul
add
pop
les
add
lret
add
mov
mov
fwait
lds
cltd
mov
lret
fbstp
add
jmp
add
lahf
mov
lea
pop
add
push
lea
push
push
push
push
push
call
icebp
sarb
add
rcll
mov
out
pop
loop
roll
add
cld
add
out
push
mov
add
add
add
fadds
ljmp
add
pop
insb
push
jmp
add
add
sahf
fwait
pop
add
movl
mov
add
stc
add
mov
aam
bound
pop
add
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
imul
mov
mov
mov
mov
add
add
cld
insb
sahf
call
js
dec
mov
add
mov
bound
jne
add
nop
jne
pop
hlt
decb
jp
add
filds
add
in
add
add
add
push
add
add
add
jle
movsb
mov
lea
pop
mov
xor
push
lea
push
call
add
imul
mov
mov
add
mov
add
les
mov
add
jge
out
mov
mov
cld
lea
add
pop
jns
add
jl
add
add
add
mov
add
sti
pop
cld
add
pop
add
pop
push
add
pop
rep
push
dec
rol
pop
mov
push
push
push
call
jbe
add
mov
pop
add
add
pusha
fwait
in
add
fadds
jmp
mov
add
add
sahf
add
jns
insb
popfw
pop
add
add
add
push
jo
mov
xchg
add
lds
bound
add
xchg
out
xlat
push
loope
push
xlat
cltd
push
pushf
fiaddl
scas
fiaddl
add
add
lea
pop
xor
push
lea
push
lea
push
call
push
xchg
cli
imul
add
add
mov
lret
addb
push
subl
outsl
rcr
mov
add
add
cwtl
push
lcall
jge
add
push
add
xchg
loopne
add
jmp
xchg
add
push
int3
mov
add
in
leave
add
add
xchg
imul
fnstsw
add
outsl
jno
icebp
lock
add
les
les
push
lea
push
push
push
call
pop
mov
add
add
roll
movsl
leave
insb
aam
push
xchg
add
add
xchg
out
add
notb
std
push
add
lock
mul
add
push
add
mov
add
mov
add
arpl
jle
add
add
addr16
add
add
mov
jns
int3
lock
pop
add
mov
cwtl
add
add
pop
or
je
mov
push
push
push
push
lea
push
push
push
push
call
cltd
fldcw
lock
jle
add
add
insb
int3
pop
add
pop
add
add
add
xchg
jns
leave
add
cmpsl
add
jno
add
add
aad
add
mov
add
jmp
add
les
fiadds
add
addb
enter
fsubl
add
pop
add
add
push
xor
sub
shl
pop
rep
push
add
pop
pop
push
push
dec
xor
xor
push
push
pop
add
sub
shl
sub
lea
rol
dec
pop
sub
pop
push
pop
pop
push
not
sub
dec
pop
mov
push
add
pop
mov
mov
jmp
push
push
push
push
push
push
push
push
call
add
mov
ja
fisttps
clc
loopne
add
add
cmpsb
jne
add
roll
add
shlb
add
add
add
repnz
nop
testl
add
add
add
jns
add
add
add
jge
add
add
xchg
mulb
add
imul
aam
add
roll
iret
mov
lea
pop
push
push
shl
pop
mov
push
push
call
call
add
jno
add
out
sti
add
enter
movsb
addr16
add
popl
out
loopne
fcompl
cmpsb
add
jecxz
add
imul
add
add
add
push
add
add
add
add
add
mov
fcmovne
stc
add
push
loope
add
into
ficompl
fisttpll
pop
add
push
xor
add
ror
shl
pop
push
push
push
push
call
loope
add
jmp
add
pop
in
add
add
add
jo
hlt
add
out
add
mov
add
add
add
bound
push
incb
sti
ret
test
scas
add
mov
mov
add
add
out
add
mov
ja
loope
add
jnp
add
add
add
cli
push
xchg
int3
lea
pop
push
push
add
rol
add
sub
pop
push
mov
push
push
push
push
push
push
call
xchg
xchg
jecxz
addb
add
push
mov
lahf
add
pop
add
fmulp
insb
add
jp
add
add
gs
test
fadds
enter
in
nop
add
add
enter
add
lods
jnp
add
add
add
sub
addl
call
jb
add
push
add
cli
out
lods
xchg
addb
out
add
add
ja
mov
lea
pop
pop
pop
pop
push
push
call
add
popl
add
xchg
jmp
insb
add
cmp
loop
js
push
add
pop
add
add
push
js
add
add
in
xchg
add
add
lea
lahf
add
add
movb
add
add
lret
stos
mov
pop
lods
push
add
rolb
xchg
add
lea
pop
pop
leave
ret
push
lea
pop
push
push
push
push
lea
push
push
push
push
push
push
call
jecxz
jle
stos
arpl
add
lods
je
add
mov
iret
xorl
out
add
fnsave
neg
cltd
iret
movl
add
add
mov
pushf
mov
lea
gs
insb
mov
int3
mov
rolb
jae
outsl
add
outsl
add
jmp
testb
mov
add
mov
lea
pop
mov
push
add
ror
pop
add
push
add
sub
pop
push
push
lea
push
lea
push
call
stos
add
add
push
pop
add
movsb
sti
lods
add
mov
add
nop
mov
add
imul
rolb
add
xchg
notb
add
add
pop
add
sti
scas
mov
add
push
xchg
lcall
mov
sahf
rcl
xchg
les
add
out
add
lea
aam
mov
xchg
add
pop
push
push
shr
pop
push
push
push
lea
push
push
push
call
pop
add
scas
add
iret
add
stc
push
mov
mov
mov
testb
cmc
add
add
jge
ja
mov
lret
xchg
fisubl
into
mov
test
push
scas
test
add
add
xchg
add
in
in
jp
add
in
add
mov
leave
mov
add
jae
add
add
add
add
pop
add
mov
adc
inc
cld
add
add
push
lea
push
push
push
push
lea
push
push
push
push
call
test
mov
xchg
in
in
xchg
xchg
jb
loope
add
outsl
add
test
mov
add
gs
scas
jo
add
iret
out
stc
jl
cld
mov
int
add
mov
loopne
add
add
add
jb
mov
lahf
imul
cli
add
and
addl
test
je
mov
push
not
add
pop
pop
push
not
pop
pop
pop
push
push
lea
push
push
call
addl
lret
add
addl
push
add
add
lret
mov
test
test
add
fwait
roll
add
xorl
flds
jp
mov
out
jne
add
add
add
jle
push
out
add
xchg
add
fsubrl
mov
int3
lea
pop
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
push
mov
add
add
add
ljmp
xacquire
lock
loop
std
pop
add
add
gs
add
xchg
add
add
je
xchg
add
adc
fldcw
add
jecxz
add
add
jle
pop
add
test
nop
pop
add
add
add
add
add
push
add
add
mov
mov
lea
pop
leave
ret
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
jge
mov
add
mov
clc
in
mov
fs
add
loop
add
add
clc
jno
add
add
jge
addb
leave
insb
idivb
clc
add
add
fiaddl
add
add
add
mov
add
flds
add
leave
add
test
add
add
add
mov
clc
out
xchg
jge
add
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jp
add
mov
xchg
xchg
pushf
add
shrb
jno
add
mov
add
imul
add
testb
add
mov
incb
lcall
jl
jo
fiadds
lcall
add
add
pop
addr16
xchg
iret
push
fisubs
fmull
in
add
push
push
add
sub
pop
push
push
push
push
sub
add
xor
pop
testl
addl
push
push
rol
sub
pop
call
mov
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
lock
add
mov
cmpsb
test
lcall
repnz
mov
out
fadds
push
cmpsb
into
jno
add
cli
xchg
add
call
add
add
add
jmp
add
jae
jle
repnz
ljmp
subb
testb
add
add
fwait
rolb
mov
nop
loopne
mov
lea
pop
push
push
add
sub
sub
xor
pop
push
call
push
rol
rol
sub
pop
cmpl
jne
pop
push
lea
push
call
xchg
xchg
add
add
pop
jecxz
add
pop
rolb
mov
add
add
add
add
add
test
add
xchg
loopne
add
testl
in
out
leave
add
fistpll
test
rcrl
flds
rcrl
sti
stos
mov
add
add
pushf
test
sar
pusha
add
add
add
leave
fcmovnu
int
cld
lea
pop
pop
pop
push
dec
pop
pop
leave
ret
push
lea
push
call
add
add
add
outsl
add
lods
mov
fldl
add
not
add
add
movsl
jle
add
fiadds
stc
hlt
jmp
in
add
ficoms
mov
popa
add
mov
mov
popf
addl
jo
out
add
add
add
lods
mov
scas
push
add
add
add
cli
mov
push
push
cmc
add
add
arpl
pop
push
mov
add
push
lea
pop
push
push
push
lea
push
push
push
push
push
push
call
push
add
jne
add
lret
add
add
push
roll
call
add
lcall
add
ror
xchg
add
add
loop
jbe
test
add
add
roll
out
fistl
add
in
lret
js
stos
mov
jmp
lods
imul
push
flds
test
lret
add
out
addr16
insb
hlt
mov
lea
pop
push
push
push
lea
push
call
nop
add
add
add
add
jbe
add
int
lret
jbe
add
add
mov
hlt
add
add
add
xchg
out
out
add
mov
add
xchg
jo
icebp
fistps
aad
add
fnstsw
pop
test
add
lods
testb
lock
add
cwtl
ror
leave
add
pop
add
call
mov
rolb
or
inc
cld
add
ror
pop
push
call
push
push
push
call
mov
add
xchg
out
push
cmc
int3
call
ljmp
sahf
int
mov
loopne
std
out
add
test
mov
lahf
add
add
jnp
add
cli
add
add
pop
test
shlb
add
add
add
add
lret
scas
mov
addb
fmull
scas
sti
call
enter
test
push
dec
pop
subl
push
push
push
push
push
push
lea
push
call
add
push
add
ja
push
into
ret
lods
loop
loope
into
mov
push
xchg
pop
imul
add
add
lcall
jae
stos
into
add
add
mov
fadd
add
aam
test
shlb
xlat
imul
add
add
cmpsb
add
jmp
add
jecxz
add
repnz
xchg
shl
push
int
add
pop
cmpl
jne
push
shr
dec
lea
xor
pop
pop
push
add
pop
pop
push
lea
pop
pop
push
push
push
push
push
lea
push
call
mov
push
add
pop
add
add
mov
mov
cwtl
sti
add
in
imul
mov
add
ret
mov
add
add
cli
lock
add
mov
mov
imul
add
int3
add
pop
fldl2e
add
test
js
faddl
popf
add
add
push
add
pop
cmpsl
movsb
add
out
push
cltd
roll
mov
lea
pop
pop
push
dec
add
shr
not
pop
leave
push
push
push
push
call
mov
add
pop
add
mov
add
stos
std
lea
add
push
add
lret
test
push
add
add
iret
xchg
mov
pop
add
imul
shll
add
mov
add
add
add
add
arpl
add
add
pop
hlt
push
cmpb
jne
enter
fistpl
push
popl
pop
add
mov
lea
pop
ret
push
mov
push
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
add
jne
xchg
leave
fistpl
add
jo
add
loope
jns
cwtl
mov
jno
add
mov
add
jb
jbe
xchg
push
xchg
popf
add
movl
mov
mov
scas
add
add
pop
in
fsubrl
add
add
add
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
mov
int3
adcl
in
movsb
add
int3
add
jecxz
add
mov
scas
mov
add
data16
fisubrl
xchg
xchg
add
add
add
add
add
pop
add
add
lcall
mov
add
jae
add
add
mov
iret
subl
add
lret
fsubr
rolb
mov
lea
pop
push
push
shr
pop
push
push
mov
push
ror
pop
lea
push
push
lea
push
push
lea
push
push
push
push
push
push
call
fidivrs
add
bound
ljmp
pop
rolb
mov
mov
jnp
add
adcb
mov
add
fmulp
enter
ljmp
add
mov
add
pop
add
in
mov
add
pop
add
add
add
add
mov
jae
lea
add
add
xchg
popa
add
add
add
mov
lea
pop
sub
mov
shr
push
ror
not
add
pop
add
push
lea
push
push
lea
push
push
push
push
push
call
cwtl
jmp
pusha
add
add
in
mov
mov
jae
aad
add
add
add
add
test
push
mov
xlat
add
out
std
xchg
jb
add
add
add
add
scas
mov
fisubs
add
add
rcr
mov
jnp
push
testl
add
bound
mov
mov
loop
clc
mov
add
xchg
add
jp
les
inc
cld
mov
add
push
push
push
push
call
push
roll
add
add
add
cmc
add
xorb
lret
push
ja
frstor
add
into
fimuls
stos
add
push
add
test
add
jns
lret
int
jmp
push
pop
jae
add
in
add
add
add
add
sti
pop
stc
call
nop
cmpsb
addl
jb
mov
add
add
add
pop
add
push
push
push
lea
push
push
push
push
push
call
add
xchg
add
cmc
fiaddl
jmp
mov
out
sbb
add
cld
arpl
add
cmpsl
xchg
xlat
add
xchg
jp
lods
icebp
add
lahf
add
add
lea
mov
cmc
fdivr
add
stos
add
repnz
add
lds
add
add
add
cltd
mov
les
add
mov
imul
jmp
addb
mov
stc
fildl
add
les
inc
add
add
cmp
jne
push
dec
rol
inc
pop
cmp
jne
push
xor
ror
not
dec
pop
mov
push
add
pop
movl
jmp
push
push
push
push
lea
push
call
add
add
add
add
insb
in
add
add
lock
fs
jl
add
lahf
add
add
jp
std
fildl
add
add
fnstsw
jmp
pop
xchg
add
lods
leave
int3
sub
js
add
add
fstpl
fstpt
iret
add
add
pop
mov
mov
push
xor
shr
pop
sub
jne
mov
movl
push
push
push
push
lea
push
push
push
call
je
add
push
add
lcall
std
push
add
add
xchg
add
jae
add
pusha
add
add
mov
push
scas
cbtw
xchg
add
add
add
add
scas
jnp
adcb
movsb
out
fldl
mov
icebp
xorb
enter
addr16
jmp
push
sub
sub
pop
mov
push
push
push
push
push
push
call
add
mov
add
fiaddl
add
add
add
add
xchg
add
add
leave
clc
test
add
out
push
add
add
scas
push
mov
add
add
mov
mov
add
mov
add
frstor
lea
pop
mov
push
not
inc
pop
cmp
jne
mov
push
push
push
push
push
call
xchg
mov
add
iret
idivl
call
jle
cwtl
je
mov
push
mov
jnp
addb
jmp
in
int3
out
add
add
in
add
pop
push
std
push
add
jmp
mov
add
add
incb
pop
sahf
sahf
fwait
fwait
mov
push
mov
xchg
leave
add
pop
add
add
mov
les
add
add
add
ret
add
shr
pop
jmp
push
push
push
call
call
add
xchg
aad
jo
mov
call
add
add
add
add
add
out
in
movsl
stos
add
mov
add
cwtl
jae
add
lret
jl
add
add
add
add
jp
add
pop
jmp
mov
add
push
ret
mov
add
popf
cmc
cli
add
jp
mov
lea
pop
mov
cmpw
jne
mov
push
not
pop
movl
jmp
push
push
push
push
push
push
push
push
push
call
add
add
add
cli
add
add
add
addl
add
add
add
add
add
sahf
mov
lea
push
fwait
pop
mov
sti
outsl
xchg
imul
jne
cli
roll
pop
sbbl
jbe
add
add
xor
mov
add
add
push
scas
mov
pusha
jmp
add
pop
pushl
pop
push
add
dec
pop
mov
mov
mov
push
push
rol
add
push
or
not
add
inc
add
sub
add
add
pop
sub
lea
inc
dec
pop
push
rol
pop
push
call
push
sub
pop
cmpl
je
push
push
inc
push
sub
add
rol
add
not
lea
sub
sub
shl
pop
inc
xor
pop
push
sub
inc
ror
pop
push
push
push
push
push
push
push
push
call
out
cmpb
test
mov
add
add
stos
je
add
jo
add
add
mov
pop
add
add
leave
int
mov
outsl
mov
out
pop
mov
mov
push
add
xlat
add
rolb
f2xm1
add
add
add
add
jmp
lahf
jecxz
enter
add
add
add
pushf
mov
fwait
mov
add
pop
call
cmpl
je
push
push
shl
push
sub
add
shl
shr
sub
inc
sub
shl
pop
add
ror
sub
pop
push
push
push
push
push
push
push
push
call
testb
lods
enter
rcl
add
out
jecxz
flds
insb
add
out
fldl
add
sti
loop
add
icebp
fmull
add
add
add
mov
add
fld1
jo
add
add
sahf
add
data16
in
cmpsl
add
nop
add
test
add
add
add
popf
hlt
flds
mov
nop
pushaw
add
les
call
push
sub
rol
pop
cmpl
je
push
push
not
shr
push
xor
add
sub
sub
shl
pop
rol
shr
pop
push
add
xor
shl
pop
push
push
push
push
call
add
fidivs
add
add
add
pushf
add
cmpsl
mov
jecxz
jo
add
stc
add
add
add
movsl
add
jnp
add
jnp
lods
fdivr
mov
pop
push
test
add
add
add
push
add
int3
push
in
add
mov
lea
pop
call
cmpl
je
push
push
shr
xor
push
or
inc
add
shr
add
sub
shr
sub
inc
pop
pop
push
push
push
call
mov
mov
popa
add
fsubr
imul
mov
movb
add
scas
push
add
lahf
jl
add
pop
add
outsl
pop
add
add
scas
add
mov
add
clc
jle
lods
add
mov
addb
movb
cli
add
push
add
nop
add
mov
lea
pop
push
call
push
push
push
call
xchg
add
add
ret
xchg
jle
data16
pop
popa
icebp
add
add
add
rcrl
add
call
push
lods
cld
mov
shr
ljmp
loopne
mov
add
fildl
cmc
jb
cmc
add
in
loopne
stc
scas
add
out
add
add
xchg
add
lea
pop
cmpl
je
push
push
sub
inc
sub
shr
push
xor
add
add
sub
sub
pop
rol
shl
pop
push
push
push
push
push
lea
push
call
addb
scas
add
mov
add
add
sbb
lods
test
jecxz
add
data16
add
push
mov
add
add
mov
xchg
xchg
add
negb
mov
add
mov
add
add
add
mov
outsl
rolb
jle
lcall
add
mov
lea
pop
push
call
cmpl
je
push
push
rol
dec
xor
lea
push
xor
add
add
sub
add
add
pop
shr
add
pop
push
push
push
push
push
lea
push
lea
push
call
push
add
mov
add
add
mov
fildl
test
ficoms
fmul
test
out
add
int3
add
add
add
test
incb
mov
hlt
movsl
add
mov
add
ljmp
or
testb
fcoms
out
xchg
jb
cld
mov
test
add
scas
xor
loopne
add
fmull
push
ror
pop
call
push
add
dec
dec
not
pop
cmpl
je
push
push
shr
inc
push
push
pop
add
shr
sub
dec
add
sub
xor
pop
rol
add
rol
pop
push
sub
shr
shr
pop
push
push
sub
ror
pop
call
cmpl
je
push
push
sub
sub
lea
add
push
sub
add
add
lea
dec
sub
sub
xor
sub
pop
sub
shl
not
sub
pop
push
shl
xor
pop
push
call
push
rol
not
pop
cmpl
je
push
push
push
or
inc
add
rol
lea
inc
sub
not
dec
not
pop
shl
add
pop
push
ror
xor
pop
push
call
push
push
call
out
add
add
add
add
add
iret
fmulp
aad
mov
add
mov
mov
add
mov
add
mov
add
mov
add
add
stc
mov
int
add
shlb
add
add
add
xchg
pop
add
arpl
xchg
movsb
add
mov
popa
push
popa
or
cmp
test
pop
push
imul
push
push
pop
add
sub
not
not
sub
shr
not
pop
rol
ror
lea
dec
pop
push
push
push
push
push
lea
push
push
push
push
push
call
add
mov
add
xchg
add
jae
test
in
lahf
fildll
cmpsl
jb
mov
mov
jle
shr
pop
lahf
jl
in
xchg
ror
add
roll
add
lock
mov
in
nop
add
in
push
loope
add
lods
add
fs
xchg
pop
jnp
stos
mov
mov
add
mov
cld
lea
pop
push
call
cmpl
je
push
push
rol
push
push
pop
add
add
sub
ror
lea
pop
xor
pop
push
push
push
push
push
push
push
push
call
imul
pop
jmp
imul
addr16
add
jp
cld
add
call
mov
xchg
add
std
add
fldl
addl
add
add
roll
mov
add
add
add
add
xchg
add
lds
add
add
mov
test
add
stos
add
mov
lea
pop
push
push
sub
pop
call
cmpl
je
push
push
shl
inc
push
xor
add
add
not
dec
sub
dec
add
pop
sub
add
pop
push
rol
ror
pop
push
call
cmpl
jne
push
lea
push
push
push
push
push
call
add
add
pop
jl
fcomps
ret
rclb
add
jae
push
add
enter
into
popa
add
movsl
add
add
add
add
stos
add
mov
pop
ret
fdivp
add
js
add
add
nop
add
add
xchg
add
int3
frstor
lahf
add
call
mov
lea
pop
mov
movl
jmp
push
sub
shr
pop
xor
push
push
lea
push
push
push
push
push
push
call
add
pop
addr16
filds
fcmovnbe
push
aad
add
add
js
rolb
or
pop
add
into
fucomp
popa
in
add
mov
in
add
add
add
add
rcl
add
imul
shlb
mov
fldl
fnstcw
shll
mov
test
add
cmpsl
jl
rorl
pusha
and
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
loop
rcr
add
pop
add
jge
add
lock
je
push
faddl
xchg
add
add
mov
mov
add
push
add
jbe
jno
add
scas
push
add
add
add
ror
add
add
add
fcmovnu
mov
add
movsl
add
add
xlat
push
mov
add
pop
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
jnp
add
add
add
xchg
add
mov
mov
jge
add
ljmp
add
add
pop
mov
addl
jne
add
leave
add
jo
jno
fcmove
add
add
int3
add
add
testl
mov
lea
pop
ret
push
sub
dec
pop
push
mov
push
push
push
push
call
stc
add
imul
leave
add
mov
imul
push
outsl
add
aam
pop
add
push
loopne
gs
les
mov
cwtl
int3
add
insb
and
sub
add
push
add
add
cltd
mov
add
add
add
loop
mov
mov
call
fadds
mov
add
pop
add
cmpl
jne
push
push
shl
sub
push
or
not
add
sub
sub
not
pop
ror
lea
pop
push
rol
shr
pop
pushl
push
push
lea
push
call
add
mov
mov
jb
add
add
test
mov
jno
add
mov
add
add
add
roll
std
jp
jb
add
jp
cltd
jne
add
add
add
std
cld
mov
add
mov
add
add
add
iret
call
fldl
add
jecxz
mov
pop
sahf
add
imul
jns
add
add
add
std
add
js
add
push
add
or
call
push
add
dec
add
add
pop
push
call
push
inc
sub
pop
jmp
cmpl
je
push
ror
lea
shr
pop
cmpl
jne
leave
add
push
push
push
push
lea
push
call
mov
pop
mov
lcall
test
pop
add
mov
pop
mov
add
add
cmpsb
add
xchg
add
mov
pop
xchg
loopne
add
int3
rcr
add
fidivrs
push
aam
add
std
lret
les
add
in
stos
ret
push
outsl
add
ljmp
add
mov
push
add
mov
add
mov
lea
pop
pop
push
pop
pop
push
dec
add
add
rol
pop
pop
push
inc
sub
pop
pop
push
dec
dec
pop
leave
add
ret
push
push
push
push
lea
push
push
push
push
push
push
call
cmpsl
jns
mov
mov
push
add
mov
lods
lret
xchg
add
mov
mov
pop
arpl
push
sarb
mov
add
jmp
add
xchg
push
jecxz
jae
add
shll
add
pop
addl
pop
jno
in
lahf
push
out
mov
lea
pop
jmp
cmpl
jne
push
push
sub
rol
push
or
not
add
sub
inc
dec
inc
pop
inc
pop
push
lea
push
push
lea
push
push
push
push
call
enter
add
roll
mov
add
mov
push
push
loop
push
mov
jb
add
add
sti
push
mov
call
testb
add
add
int3
jo
add
loope
jecxz
je
loope
push
neg
enter
std
add
add
pop
loope
insb
mov
add
mov
add
add
loopne
fmull
jne
call
push
shr
shr
inc
shr
pop
push
call
push
push
push
push
push
lea
push
push
push
push
call
add
push
add
sahf
jmp
add
add
testb
add
push
add
into
clc
movb
jmp
add
xlat
in
iret
enter
stos
fldenv
mov
in
mov
add
add
lahf
add
pop
testl
outsl
push
add
data16
add
pop
rorl
int3
lea
pop
jmp
cmpl
jne
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
loop
add
add
popa
mov
pushf
push
fcompl
add
imul
mov
add
mov
add
add
mov
pop
add
jnp
lahf
rcrl
xlat
jb
pusha
add
add
jne
int3
sti
stc
call
incb
mov
add
add
add
mov
pop
mov
push
lea
push
push
push
lea
push
call
add
loope
rclb
add
in
add
add
cld
fildl
stc
outsl
in
les
mov
subb
add
add
add
shlb
add
jge
add
cmc
add
call
xchg
repnz
jo
mov
hlt
push
xorl
mov
lea
pop
mov
jmp
push
lea
push
push
push
push
push
push
push
push
lea
push
call
shlb
add
add
int3
loope
xchg
rorb
add
add
lods
push
add
aad
mov
bnd
idivl
add
movsl
pusha
lret
jl
cld
jne
movsl
jno
pop
mov
leave
add
add
ja
clc
push
add
fs
mov
add
pushf
call
add
add
jno
add
cld
lea
pop
push
pop
dec
jne
push
push
push
lea
push
push
push
push
call
shll
push
scas
fdivrs
fwait
pop
mov
fldl
add
mov
add
mov
loopne
cmpsl
mov
add
stos
int
imul
jo
outsl
mov
test
stos
add
rcrl
gs
pop
mov
hlt
add
les
iret
add
movsl
add
add
test
mov
lea
pop
call
jmp
push
add
lea
dec
pop
call
push
push
ror
push
or
not
add
dec
dec
sub
ror
pop
not
inc
add
add
pop
push
rol
pop
pushl
call
push
push
push
push
lea
push
call
add
add
imul
add
jae
mov
test
call
pop
pushf
out
lock
jb
add
add
fcmovne
add
fwait
push
pushf
pop
fs
cmpl
lea
xchg
loope
stc
fs
add
addr16
mov
outsl
xchg
mov
faddp
scas
jmp
mov
lea
pop
call
push
pop
mov
push
push
lea
push
push
push
push
push
call
movl
movsb
add
clc
jae
xchg
pop
jae
std
je
add
jne
iret
faddl
int
pushf
jo
add
pusha
scas
xchg
add
add
add
xchg
test
fldl
add
mov
movl
mov
in
data16
add
push
add
add
add
bound
add
and
test
pop
hlt
add
add
add
add
lcall
pop
lea
push
push
dec
push
and
add
not
sub
sub
add
add
pop
not
xor
pop
push
push
call
les
jbe
addr16
jo
ja
lock
mov
in
add
xlat
icebp
add
add
mov
mov
int
add
add
mov
lods
mov
test
add
mov
xchg
add
add
jns
leave
icebp
cli
in
popf
imul
add
test
add
xchg
roll
add
fs
mov
lea
pop
pushl
push
push
push
push
push
call
lret
lret
add
js
pop
aad
add
scas
addb
add
jb
add
stos
xchg
add
add
leave
add
pop
popa
lret
add
sbb
ficoml
add
je
ljmp
add
add
mov
add
outsl
into
faddl
mov
leave
push
hlt
add
add
add
adc
call
push
push
sub
sub
xor
pop
call
push
push
rol
lea
push
and
add
add
sub
sub
sub
add
pop
inc
pop
pushl
push
push
lea
push
push
push
push
call
add
jae
sub
pushf
cmpl
mov
pop
pop
out
testb
idiv
add
xchg
add
add
xchg
pop
xchg
fildl
out
addb
add
sahf
testl
sti
mov
add
imul
add
add
add
xchg
aam
add
add
lea
ja
in
out
fmull
jne
add
call
mov
push
lea
dec
sub
pop
lea
push
push
add
add
push
push
pop
add
shr
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
call
out
ljmp
add
xchg
clc
add
add
lret
in
in
add
add
fnstcw
in
add
mov
add
jp
add
rcll
int3
lods
outsl
mov
mov
add
into
add
jecxz
stos
in
scas
popf
push
ljmp
js
mov
mov
out
add
add
add
add
add
frstor
outsl
mov
lea
pop
pushl
push
push
push
push
lea
push
call
add
add
add
lahf
jns
sahf
push
mov
push
in
add
add
add
in
add
hlt
out
xchg
add
xorl
into
jnp
add
fildl
aam
mov
jnp
hlt
in
pop
add
add
test
add
fnclex
pop
lods
movsb
out
mov
add
push
mov
in
mov
lea
pop
call
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
xlat
jmp
addl
add
add
push
cwtl
cmpb
add
xchg
data16
add
add
cwtl
add
push
arpl
add
lret
mov
mov
andl
push
jle
add
lcall
add
nop
gs
jns
add
mov
insb
jo
xchg
push
icebp
pop
add
add
pop
push
push
sub
pop
push
push
pushl
push
push
sub
push
or
not
add
shr
inc
shl
sub
shr
lea
pop
inc
pop
push
shr
add
inc
shr
pop
push
push
sub
shr
rol
pop
call
push
push
shl
xor
rol
add
push
or
inc
add
sub
sub
pop
inc
shr
add
add
pop
push
shr
pop
pushl
call
push
push
push
call
add
add
xchg
add
mov
loopne
add
in
hlt
outsl
add
lods
add
jmp
lea
insb
mov
add
rol
mov
add
mov
loope
out
bound
shrb
aam
mov
into
loop
jae
add
push
js
in
ljmp
add
cld
lea
pop
push
push
push
lea
push
push
call
loope
xchg
mov
arpl
add
mov
mov
ror
add
add
rcr
out
add
sar
jne
mov
lods
xorl
into
add
mov
scas
add
loope
imul
jp
les
add
add
add
mov
test
into
enter
add
push
mov
lea
pop
call
push
push
sub
rol
push
or
inc
add
shr
sub
pop
add
add
inc
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
push
fildl
out
add
jmp
add
add
xchg
lods
add
cmpsl
stc
rolb
mov
add
push
add
add
add
mov
in
add
xchg
add
pusha
add
add
mov
add
add
pop
mov
add
mov
stos
add
ret
lea
pop
pushl
call
push
push
push
push
push
push
push
call
jne
lods
data16
loop
add
add
lock
lcall
imul
negb
filds
add
andb
add
mov
add
add
add
sti
int3
mov
pushf
push
add
sti
add
add
add
mov
mov
add
les
js
add
xchg
in
stos
xchg
add
aam
bound
call
push
lea
push
lea
push
push
call
add
pop
add
add
ljmp
aam
xchg
add
xchg
idivb
je
jle
outsl
add
add
test
mov
add
cmpsb
add
mov
bound
jle
add
jno
mov
add
add
add
cmc
shr
out
xchg
mov
push
add
add
add
mov
out
add
adc
pop
add
add
pushl
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
rcrl
xchg
lds
jo
add
mov
fnsave
add
mov
add
movsl
lea
mov
add
jne
ja
add
incb
mov
mov
push
pop
add
imul
xchg
pop
add
loop
xlat
std
mov
cli
xchg
lea
add
mov
pop
jmp
push
push
not
inc
add
inc
push
push
pop
add
sub
sub
not
sub
rol
add
pop
inc
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
roll
ret
add
shlb
add
add
rcl
adcl
push
add
add
mov
mov
add
pop
jmp
nop
add
cli
add
add
cld
mov
add
mov
popf
add
imul
bound
lret
add
mov
add
popa
rcr
add
mov
int3
lea
pop
pushl
call
push
lea
push
push
call
add
add
add
les
out
add
add
ret
add
out
jecxz
add
clc
add
out
pop
flds
test
push
lahf
pushf
pusha
mov
cld
lea
add
pop
xchg
hlt
rcr
add
add
mov
addl
mov
pop
add
add
test
sti
fcmovnbe
aam
add
je
rclb
mov
push
xchg
mov
push
xchg
pop
mov
lea
pop
push
push
push
push
push
push
push
push
push
call
pop
mov
add
add
add
add
jae
add
add
pop
pop
add
jecxz
lds
add
add
movsl
add
arpl
add
add
add
in
cld
jecxz
rcl
xlat
add
mov
pop
jecxz
add
mov
add
lret
mov
add
pop
call
push
push
shr
push
sub
add
rol
lea
ror
rol
sub
dec
pop
ror
inc
ror
pop
push
xor
not
pop
pushl
push
dec
xor
inc
pop
call
push
push
push
push
push
call
add
fldl
mov
add
mov
add
je
jl
jge
iret
fisubs
outsl
jbe
add
xchg
add
pop
adcl
rcrb
add
mov
add
add
mov
pop
jne
xchg
les
popa
int3
roll
mov
lea
pop
push
call
leave
push
push
call
mov
add
bound
add
add
loope
stos
outsl
jne
pop
xchg
cwtl
icebp
nop
mov
movsl
mov
add
in
fsubrl
addb
jbe
lea
add
add
pushf
filds
fdivr
stc
in
imul
rol
push
hlt
add
add
add
addb
movsb
mov
lea
pop
add
push
inc
add
pop
pop
pop
pop
push
lea
lea
dec
pop
pop
push
push
push
lea
push
push
push
push
call
push
add
mov
add
add
je
add
add
sti
addb
sti
add
jbe
add
cmpsb
add
mov
jbe
jp
les
add
fstps
pop
std
push
add
jmp
nop
out
lret
mov
addl
mul
int
mov
add
add
test
test
call
into
jae
cld
lea
pop
leave
add
push
add
sub
sub
pop
ret
leave
push
shl
shl
pop
ret
push
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
out
jbe
popa
fs
leave
add
add
mov
popa
push
cmpsl
loop
add
xlat
jmp
push
lods
pop
add
push
rol
loopne
jp
add
pop
test
pushf
mov
mov
add
sarb
into
lds
clc
add
add
cwtl
pop
popa
cmc
fisubrs
mov
lea
pop
cmpl
jne
mov
jmp
push
shl
xor
pop
mov
and
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
test
add
add
xchg
push
arpl
push
add
add
cwtl
mov
add
add
xchg
add
add
add
jecxz
fsubr
add
xchg
lods
xchg
add
test
push
add
add
jno
arpl
movsl
test
les
xchg
jnp
jno
add
push
add
add
movsl
mov
add
jmp
mov
lea
pop
xor
xor
push
lea
push
push
lea
push
call
add
aam
out
inc
pop
mov
pop
mov
out
shrb
add
add
add
add
mov
out
add
in
jl
add
rolb
xlat
test
jecxz
add
mov
mov
push
repnz
add
add
mov
add
mov
lret
add
insb
add
add
cmpsl
mov
add
xchg
cmp
adc
rolb
shr
pop
xor
push
shr
xor
lea
pop
dec
sub
push
add
shr
sub
lea
pop
jmp
sub
push
push
push
push
call
out
mov
stos
roll
cltd
shr
lods
add
mov
lds
jno
add
add
pop
push
xchg
add
add
add
add
cmc
push
clc
add
jne
jns
add
cld
aad
lock
mov
stc
add
push
add
shll
jmp
gs
add
push
mov
lea
pop
pushl
push
push
push
lea
push
lea
push
push
push
call
mov
add
xchg
popa
push
add
repnz
test
mov
mov
mov
and
add
mov
mov
jecxz
add
add
add
push
add
shrl
add
mov
add
add
pop
fdiv
aad
add
add
add
pop
jle
mov
lea
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
cld
ficomps
add
pop
loopne
add
fiadds
add
add
add
outsl
mov
push
cmc
jne
add
mov
add
cwtl
add
add
mov
add
jne
add
jno
add
sarb
add
test
add
add
push
in
add
test
pop
mov
and
sub
cmp
jne
push
sub
pop
mov
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
test
jb
add
fiaddl
bound
add
add
stos
pop
mov
add
loope
cmc
mov
mov
add
add
add
in
aam
add
jecxz
push
nop
add
add
add
lcall
add
pop
add
adc
movsb
pop
add
pop
add
pop
les
cwtl
add
jb
add
lea
pop
lea
push
push
lea
push
push
lea
push
push
call
test
popa
add
std
push
add
in
xchg
in
lds
add
popa
pop
add
ljmp
add
add
cli
imul
add
add
add
jge
sbb
pop
add
mov
test
jns
jae
add
add
fcoms
add
sahf
add
add
pop
sub
mov
push
not
dec
pop
shr
add
push
push
push
push
push
push
push
push
push
push
call
addl
mov
mov
push
add
add
cld
pop
lea
xchg
call
add
xchg
add
add
jb
add
mov
add
movb
shl
jge
scas
add
mov
add
jo
push
mov
pusha
add
add
add
mov
ret
rcrl
add
test
add
jle
jmp
mov
mov
lea
pop
sub
push
pop
pushl
push
push
lea
push
push
push
lea
push
call
shrl
icebp
add
mov
add
rcl
add
lret
add
iret
hlt
xchg
add
mov
add
add
add
add
add
fs
mov
mov
insb
xchg
fs
outsl
add
arpl
popf
add
shrl
add
cltd
add
add
add
jecxz
add
ret
fiadds
add
imul
cmpsb
scas
push
data16
mov
jo
test
mov
lea
pop
pop
shr
and
push
push
call
pusha
roll
repnz
fsubrs
push
movl
lods
xchg
scas
add
xchg
sub
add
test
add
add
cld
add
iret
jle
add
push
jp
pop
jl
pop
push
popf
add
add
add
add
lock
add
push
jmp
cld
negb
add
add
jecxz
pusha
add
cltd
mov
jae
int3
lea
pop
sub
push
dec
xor
inc
shr
pop
cmp
jne
leave
ret
push
push
push
push
push
call
hlt
in
frstor
pop
popl
sahf
mov
fdivrs
data16
add
add
rcr
faddl
add
add
pop
add
add
test
xchg
add
add
add
add
mov
leave
add
add
mov
sbb
stos
jo
clc
jb
add
scas
popl
push
cmc
pop
lods
js
add
add
in
outsl
aam
mov
mov
arpl
push
push
add
pop
mov
push
xor
xor
xor
pop
add
push
push
push
rol
add
pop
push
push
not
pop
push
push
mov
push
push
push
push
push
push
lea
push
push
call
mov
int
add
lcall
add
add
xchg
add
pop
add
add
shll
add
push
arpl
scas
jecxz
add
add
andb
arpl
rclb
mov
fdivrl
sti
add
int3
add
add
fiaddl
jne
into
leave
mov
lea
pop
lea
sub
mov
push
add
lea
pop
shr
add
push
ror
pop
mov
push
pop
add
mov
push
lea
push
push
push
push
push
push
call
mov
add
jp
clc
jbe
loop
add
add
scas
pushf
jne
pusha
aam
add
add
jo
xchg
add
mov
sti
add
mov
flds
mov
mov
add
add
sbbb
loopne
ljmp
add
mov
std
std
xchg
jo
add
rcr
std
hlt
pop
mov
lea
pop
add
xor
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
push
leave
arpl
lcall
div
jmp
mov
mov
add
pop
std
bound
sub
add
add
add
add
add
mov
jb
mov
testl
mov
jp
cld
mov
rorl
addl
mov
cmpsl
add
into
xchg
mov
mov
lea
pop
and
call
add
push
push
push
push
call
out
jno
cld
lahf
mov
js
pusha
add
aad
add
jbe
scas
iret
lds
outsl
in
aam
out
popl
fdivr
add
add
popa
add
lea
je
add
add
add
mov
mov
add
push
pop
mov
outsl
addl
add
scas
rolb
add
je
add
add
add
stos
add
mov
lea
pop
cmp
je
add
cmpl
jne
push
add
not
add
pop
xor
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
mov
add
push
jle
add
add
add
add
cli
xchg
mov
popf
add
add
add
jl
xchg
add
incb
mov
add
add
idivb
mov
lods
add
add
test
xchg
jmp
add
add
stos
jle
add
mulb
js
stos
fildl
add
int3
add
mov
hlt
lea
pop
pop
pop
push
inc
xor
not
pop
pop
leave
push
add
pop
ret
mov
push
xor
pop
add
push
push
push
push
call
mov
addb
cli
push
add
mov
mov
add
mov
int3
add
add
popf
loop
add
mov
cltd
push
xchg
jl
iret
add
add
xchg
stos
add
add
test
mov
pop
mov
fwait
add
roll
shll
add
ffree
add
jl
add
fwait
jbe
out
jmp
in
int3
lea
pop
push
push
push
lea
shr
pop
pop
pop
push
not
pop
mov
push
push
push
call
add
into
add
add
add
sti
cld
add
add
xchg
lahf
aam
filds
mov
mov
rcl
icebp
add
add
jecxz
add
add
int3
shlb
lahf
add
bound
roll
add
add
pop
add
lock
mov
add
addr16
add
cli
lcall
add
add
cmpsb
add
mov
pop
push
push
sub
shl
pop
call
push
push
push
push
push
push
call
fnsave
add
fdivrp
pop
add
jecxz
push
icebp
mov
mov
add
jl
add
xchg
rorb
fldl
rcl
jno
xchg
scas
cli
int3
add
mov
cmpsb
add
jge
add
add
cld
fisttpl
insb
aam
out
xchg
add
jp
stos
call
sbb
xor
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
cld
loopne
add
add
mov
in
jns
ljmp
add
add
add
addr16
mov
pop
add
add
add
add
jmp
jbe
add
pop
jne
test
data16
add
mov
mov
call
add
add
je
jge
add
arpl
add
add
add
add
mov
in
fldenv
sub
pop
pop
push
not
sub
shr
sub
pop
pop
pop
leave
push
pop
ret
push
ror
pop
push
push
lea
push
call
mov
mov
je
mov
jge
jns
call
lods
mov
push
xlat
cli
add
jmp
lea
insb
add
mov
movb
add
addr16
roll
addl
jecxz
out
in
add
mov
in
fcmovnb
add
add
add
add
mov
int
add
out
add
mov
add
push
movsb
push
fs
add
add
or
in
add
push
push
push
call
add
add
arpl
jbe
ret
mov
mov
mov
mov
ljmp
add
roll
ljmp
add
add
test
add
add
add
mov
test
add
test
mov
popa
test
jl
enter
add
fwait
add
add
nop
mov
imul
data16
add
mov
lea
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
xchg
add
addl
mov
rorl
add
cld
add
add
xchg
scas
movsb
add
jb
add
lods
shll
add
enter
lcall
xchg
add
ret
fildl
xchg
aam
push
push
add
add
xchg
add
add
jb
add
add
int
add
add
gs
pusha
mov
add
mov
and
push
push
push
shl
pop
push
push
lea
shl
pop
mov
push
dec
ror
pop
push
push
sub
pop
pop
push
push
push
push
push
push
push
call
test
rolb
test
iret
jle
add
lret
cmpb
pusha
add
xchg
movsb
pop
mov
lds
add
leave
mov
test
xchg
jns
std
add
push
add
testb
add
scas
jne
push
mov
test
add
add
add
jmp
add
mov
add
add
lea
pop
lea
sub
mov
push
inc
shr
pop
shr
push
sub
xor
inc
pop
add
push
push
push
push
push
push
lea
push
push
push
call
add
js
add
stos
mov
add
add
push
lds
add
add
mov
mov
add
add
mov
pop
add
ja
jae
addr16
add
push
add
test
add
push
add
jne
icebp
cwtl
add
add
mov
add
push
add
fildl
add
mov
add
bound
mov
push
xor
shr
pop
add
pushl
push
add
dec
pop
popl
mov
add
push
xor
inc
pop
xor
push
dec
add
ror
pop
lea
mov
add
push
add
dec
xor
xor
pop
xor
call
add
push
shr
ror
pop
nop
nop
cmp
je
push
sub
pop
nop
nop
push
ror
rol
pop
inc
nop
nop
push
push
push
push
push
call
leave
rcl
add
imul
jns
enter
out
fs
add
lret
add
mov
mov
pop
enter
imul
pop
add
add
add
add
add
lods
add
add
outsl
test
add
cli
mov
mov
add
add
std
add
add
add
add
int3
loopne
mov
lea
pop
cmp
jb
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
mov
xchg
add
aam
pop
je
nop
cmc
rol
pushf
jge
bound
xchg
pusha
jne
add
mov
push
push
add
movsl
pusha
add
xchg
stos
add
mov
add
push
mov
cwtl
fnstcw
add
jge
lahf
add
lret
add
push
add
add
add
pop
xor
jmp
mov
push
not
inc
pop
add
movzwl
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
jne
add
ja
movsl
scas
add
mov
sti
sub
cltd
enter
test
pop
add
add
in
rcl
add
arpl
xchg
rolb
add
push
mov
mov
in
lds
jno
xchg
add
outsl
pop
addl
out
add
fdivs
add
lret
add
pop
ficoms
xchg
add
in
add
jne
add
add
add
lret
fimull
pop
add
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
call
stos
add
mov
stos
mov
xchg
add
mov
addl
scas
xchg
jbe
add
mov
cltd
push
add
out
pusha
imul
add
movsb
rol
pop
xchg
add
add
mov
add
xchg
popf
add
in
shl
add
add
enter
add
add
je
pop
mov
cltd
pop
out
add
out
scas
push
push
sahf
add
ficoms
int3
lea
pop
mov
xor
xor
push
push
push
push
call
add
add
shl
int
add
gs
fwait
add
stc
jns
repnz
add
add
pop
repnz
lahf
loope
add
add
repnz
mov
sti
fadd
jae
jmp
jecxz
add
icebp
add
stos
add
int3
add
jns
lods
add
mov
int3
lea
pop
shl
push
lea
push
call
pushf
add
lock
pushf
lret
xchg
mov
add
cmpsb
pusha
add
xchg
ret
cld
add
rolb
gs
add
imul
mov
add
xchg
add
jns
cld
outsl
test
mov
repnz
jl
add
scas
add
jmp
mov
addb
add
add
mov
lea
pop
xor
push
shr
inc
sub
pop
shl
xor
push
push
lea
push
push
push
push
push
push
push
push
call
jae
xchg
les
xlat
stos
add
test
mov
add
mov
add
stos
mov
pop
sti
add
imul
pop
add
nop
imul
push
add
gs
out
add
fldl
add
add
jmp
int3
pop
xchg
add
stos
add
pop
add
xchg
fwait
rcrl
popa
sub
loope
xor
mov
push
push
lea
push
call
f2xm1
jmp
imul
xchg
addl
js
add
add
jl
pop
add
add
cmpsb
lock
int3
add
add
mov
pushf
pushf
rcr
cmpsl
lahf
outsl
xlat
out
mov
stc
push
add
popa
add
add
add
add
add
xchg
push
roll
lock
add
imul
add
clc
add
cld
mov
int
add
pop
add
push
dec
pop
pop
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
fwait
leave
loop
fldl
mov
add
lea
add
add
pusha
add
add
neg
add
add
enter
add
mov
lods
mov
ret
lretw
pop
jnp
in
add
add
add
fwait
push
mov
pop
add
jae
test
lcall
add
add
scas
add
add
adcb
add
jle
lret
lea
pop
pop
push
sub
shl
pop
pop
pop
leave
push
lea
push
push
call
movsb
add
cmpsb
pusha
add
in
add
add
add
add
shl
repnz
lea
addl
add
add
add
in
add
add
outsl
jle
mov
add
addl
add
add
add
push
mov
mov
push
add
add
pushf
flds
add
stos
nop
mov
lea
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
mov
add
scas
movsl
push
out
mov
pop
add
add
add
add
pop
add
add
ja
add
add
jo
add
add
rcrl
add
in
into
add
jle
out
cli
mov
add
mov
addr16
popf
iret
add
xchg
mov
gs
fmull
in
push
push
push
call
outsl
jo
insb
in
add
out
mov
add
push
add
add
mov
popf
mov
rolb
out
mov
xchg
add
movsb
add
mov
faddl
hlt
test
pop
add
add
push
fs
addr16
xchg
rorb
pop
add
ret
add
test
jmp
add
add
loope
add
std
sti
add
lea
pop
push
push
push
rol
pop
push
push
lea
push
lea
push
push
lea
push
push
call
add
stos
push
sbb
popa
push
pop
jnp
out
fidivs
add
fiadds
xchg
add
xchg
mov
mov
add
add
add
add
andl
add
add
add
push
push
int
imul
lret
mov
les
lahf
jecxz
call
les
push
not
ror
pop
mov
mov
mov
push
push
push
push
push
push
push
lea
push
push
call
add
ja
movsl
call
add
hlt
pop
add
add
movsb
add
add
push
cmpl
push
fildl
add
add
add
add
lret
fsub
xchg
mov
stc
xlat
add
add
add
add
shll
add
repnz
cld
lea
pop
test
je
push
not
pop
mov
push
push
push
push
push
push
push
push
call
add
cmc
out
add
xchg
mov
cmpsb
add
add
add
sahf
add
fildl
pop
add
je
add
jae
shlb
imul
lods
push
add
jne
add
jns
movsl
cwtl
add
add
add
add
add
ja
add
add
jl
add
add
add
add
imul
mov
mov
arpl
add
mov
hlt
lea
pop
test
je
push
push
push
push
lea
push
push
lea
push
call
add
insb
scas
pop
fnstsw
add
add
out
add
add
xchg
add
jmp
add
cld
cwtl
add
mov
lods
add
pop
out
pushf
icebp
jle
add
pop
add
xchg
push
add
add
movsb
bound
std
fcoml
mov
pop
enter
test
xchg
cli
xchg
lea
fisubl
add
mov
sbb
mov
push
not
lea
not
pop
mov
push
shl
dec
pop
mov
inc
cmp
je
push
lea
pop
test
je
mov
push
ror
pop
inc
push
dec
pop
cmp
je
push
add
pop
test
jne
xor
pop
push
xor
pop
pop
pop
push
add
pop
pop
push
lea
pop
leave
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
mov
add
mov
clc
addr16
flds
add
test
popa
add
add
mov
mov
add
jne
mov
add
std
add
push
add
xchg
add
mov
add
add
subb
add
add
xchg
add
push
add
ja
add
add
fwait
xchg
mov
lea
pop
ret
push
push
push
push
push
call
pushf
add
icebp
mov
add
fildl
xchg
aad
add
add
fstpt
add
clc
add
add
pushf
shl
add
add
add
enter
mov
add
mov
mov
cld
add
add
add
pop
add
add
icebp
push
mov
shlb
add
out
mov
xchg
add
add
addl
add
mov
lea
pop
mov
inc
push
sub
dec
pop
cmp
jne
lea
mov
push
shl
not
pop
test
je
mov
push
lea
pop
add
push
add
pop
cmp
jne
mov
test
je
push
push
push
push
call
add
add
test
add
mov
pop
mov
sbbl
les
add
add
add
add
cmc
mov
mov
ficompl
pop
add
add
jmp
fadds
add
add
add
lcall
std
lea
add
test
add
jnp
mov
jb
imul
add
jl
add
int3
xchg
add
cltd
add
pop
std
mov
lea
pop
mov
push
add
sub
shr
pop
add
cmp
je
jmp
push
push
lea
push
push
push
call
add
add
leave
pop
lcall
add
mov
mov
jnp
popl
add
pusha
push
add
add
add
mov
ja
cld
add
cli
cmc
pusha
jno
loop
mov
add
add
add
add
ljmp
add
lcall
add
outsl
fs
addr16
xor
pop
push
ror
pop
pop
push
add
inc
pop
pop
pop
push
lea
shl
dec
rol
pop
leave
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
repnz
xchg
add
add
pop
add
add
fs
mov
mov
add
add
add
add
mov
add
add
cli
mov
mov
jecxz
add
repnz
lret
ficompl
add
loop
movsl
scas
add
xlat
sub
nop
mov
lea
pop
ret
lea
pop
push
sub
not
pop
pop
push
inc
rol
pop
pop
push
sub
shl
lea
pop
pop
leave
push
sub
pop
ret
push
lea
push
push
push
push
push
call
test
stos
cmpb
xlat
add
add
insb
add
shlb
add
add
mov
mov
hlt
add
add
enter
roll
cmpsb
add
add
add
add
in
loope
add
add
mov
add
out
push
sahf
add
mov
add
add
push
sbb
pop
pop
push
push
push
lea
push
push
push
push
push
call
add
add
scas
fildll
les
add
lds
add
inc
ljmp
cli
add
add
add
std
aam
faddl
lods
mov
mov
mulb
add
mov
add
icebp
xchg
mov
xchg
add
mov
add
cmc
add
add
add
into
mov
shlb
add
jle
add
add
xchg
add
lea
pop
pop
push
push
push
lea
push
call
add
pop
xchg
push
push
mov
add
ljmp
gs
mov
cli
popl
add
flds
add
mov
jl
iret
add
int
jae
mov
add
popf
stc
mov
icebp
add
arpl
out
jo
bound
mov
add
add
add
add
mov
pop
add
lea
pop
pop
leave
ret
push
lea
pop
rol
rol
push
push
push
push
push
push
push
push
push
push
call
sahf
mov
xchg
out
xchg
add
add
cmp
xchg
add
fiaddl
push
add
xchg
rorl
push
add
add
add
add
add
mov
add
add
or
cwtl
rolb
into
xchg
filds
lea
add
add
add
add
mov
add
xchg
leave
push
add
add
add
mov
lea
pop
xor
inc
push
push
push
push
lea
push
push
lea
push
push
call
mov
push
cltd
rclb
mov
les
add
ret
add
int
movl
mov
xchg
jge
add
icebp
std
testb
add
add
add
hlt
mov
incb
add
add
iret
add
mov
add
add
mov
mov
lea
pop
cmpb
jne
push
shl
sub
pop
ret
hlt
nop
mov
sti
movsb
shll
sti
movsb
shll
sti
movsb
jno
sti
movsb
popa
mov
sti
movsb
andl
sti
aam
mov
sti
movsb
sub
sti
pushf
push
mov
add
nop
insl
pop
jl
adc
push
decl
pop
imul
sub
rolb
pop
or
shlb
loope
jmp
push
stc
lcall
mov
or
mov
mov
rcl
xor
inc
mov
inc
xchg
test
jbe
push
fdivl
loopne
jmp
jo
jno
mov
daa
mov
frstor
jecxz
add
inc
rorl
lods
pop
rol
inc
mov
stc
mov
cmc
adc
and
popa
push
push
xor
jp
jb
in
xchg
loop
lret
sub
inc
push
lahf
xlat
mov
das
movsb
mov
ja
test
lea
adc
jb
adc
insb
mov
jp
mov
test
arpl
jmp
push
pop
xchg
in
and
sub
js
jp
popf
push
test
data16
movsb
fsubl
lcall
jbe
movsb
adc
sbb
pop
ret
in
add
mov
cmp
fisubl
loop
iret
push
push
or
repz
je
into
mov
mov
fisubrl
xor
out
sbb
push
cmc
icebp
aam
xor
jb
xchg
add
fmul
push
ret
xchg
mov
xchg
and
je
stos
fisttpll
mov
fisttpl
popl
outsl
gs
je
cld
into
and
mov
fnsave
nop
jecxz
xchg
xor
cs
fsubs
std
jg
inc
mov
ffree
sub
pusha
push
stos
icebp
insl
jge
mov
adc
mov
gs
xor
xchg
cmpsl
mov
fidivs
in
pop
mov
rcrl
pmuludq
int3
stos
xor
adc
arpl
cmc
mov
shr
jbe
add
adc
add
aad
jo
cwtl
das
testl
mov
cmpl
sub
mov
add
xchg
xor
cld
cmp
lret
push
xchg
bound
lcall
mov
lods
test
xchg
dec
aad
xchg
ds
sub
imul
push
popf
push
push
aas
xchg
nop
xchg
insl
mov
push
ret
pop
mov
aaa
inc
adc
stos
or
fldl
fistl
cwtl
push
dec
cltd
mov
lret
pop
adcl
pop
fsubrs
ja
cmp
out
out
adc
sub
adc
test
out
pop
sub
test
stc
je
sub
daa
adc
loope
push
mov
loopne
popf
sti
and
jge
js
nop
imul
sub
mov
in
or
testl
mov
mov
mov
in
push
jmp
stos
stc
add
mov
orl
and
push
and
xchg
lret
rclb
pop
sbb
ret
inc
push
dec
mov
std
aaa
sbb
mov
pushf
sub
sub
push
or
adc
sti
mov
xchg
shrb
mov
pop
jg
cmp
pop
adc
sub
jge
pop
jne
xchg
hlt
pop
dec
sti
xchg
cmp
sti
push
lock
sbb
pop
shrb
outsl
lds
rolb
rol
pop
fimull
pop
cli
loopne
rsm
jecxz
push
mov
jp
outsl
sti
dec
insl
or
xchg
mov
in
into
in
fs
mov
ljmp
xlat
cmp
ljmp
dec
mov
pop
jl
lock
hlt
mov
xor
fwait
and
mov
lret
xchg
pop
in
inc
lods
notl
test
in
dec
jnp
aaa
loopne
imul
jmp
add
inc
mov
push
js
pusha
call
cmpsl
xor
jns
sbb
movsb
mov
cs
lds
or
ds
sarl
sbb
loopne
test
xor
imul
xor
xor
mov
and
push
push
leave
lcall
adc
idivl
mov
push
pop
outsb
and
fimull
mov
jmp
repz
adc
add
mov
js
pop
repz
popf
sbb
mov
add
pop
pop
arpl
in
cli
jb
jge
inc
adc
mov
daa
sbb
jmp
sbb
lds
jbe
cld
aas
test
mov
push
scas
cmp
dec
shl
cli
dec
cwtl
inc
mov
pop
mov
arpl
cmc
add
sub
xor
inc
sbb
enter
push
mov
adc
inc
clc
cmpsl
lret
bound
gs
sbb
inc
sub
loopne
insl
mov
add
aam
int3
mov
mov
fimuls
imull
fsubrl
les
mov
dec
and
outsb
push
or
jge
lods
xor
clc
aad
std
lea
and
lret
nop
push
dec
push
inc
in
dec
in
mov
add
idivl
inc
in
inc
mul
mov
xorb
mov
rcl
add
inc
in
sbb
cmp
jg
xor
call
repnz
adc
fbstp
lahf
add
ds
int
cmpsb
cmp
xor
fistl
fmuls
dec
mov
into
push
pop
push
xchg
push
in
imul
fwait
push
pop
cmp
mov
incb
jge
mov
sarb
jno
push
jbe
shll
jbe
cwtl
scas
adc
xor
das
sbb
into
pop
jnp
rclb
lea
jp
lods
sbb
xor
icebp
mov
mov
pop
push
fwait
add
inc
int
mov
test
pop
clc
ljmp
into
rcrb
pusha
es
adc
pop
iret
cwtl
add
dec
pushf
push
fs
decl
enter
xor
cli
push
adc
push
imul
fsubl
mov
stc
xlat
jb
mov
mov
mov
std
mov
call
mov
mov
lahf
sbb
sahf
jle
fstps
xor
add
pop
add
shl
push
inc
js
xor
xchg
or
adc
or
mov
xchg
push
rcl
or
test
lahf
sub
stc
call
fiaddl
and
add
mov
xchg
sbb
adc
mov
inc
out
pop
lret
mov
mov
lcall
scas
stc
xchg
push
stos
hlt
aad
fidivrs
inc
or
push
addr16
addr16
xchg
notb
js
add
and
aam
out
add
push
mov
push
pop
mov
sbb
xchg
mov
outsl
mov
push
mov
mov
pop
enter
mov
movsb
dec
lret
sbb
out
inc
xor
push
mov
mov
adc
ficoms
sbb
add
fstl
sub
adc
addr16
stos
pop
stos
into
insb
fcoms
mov
out
movsl
mov
sar
jg
insb
xchg
xor
dec
fidivrs
stos
unpckhps
sub
imul
sub
sub
jb
mov
jecxz
pop
xlat
dec
cli
notl
mov
cli
add
incb
fld
cmp
mov
sub
or
test
pop
cmove
js
cmp
loope
xchg
cmpsl
das
fmuls
fnsave
push
hlt
fisttpll
xor
test
mov
inc
loopne
xor
mov
loop
and
in
pop
mov
dec
sub
sub
sbb
sub
jmp
in
push
rolb
mov
mov
lret
stos
adc
orl
fdivrl
scas
out
jno
mov
push
mov
imul
adc
inc
aam
dec
xchg
movsb
repz
cwtl
and
adc
jo
nop
push
cld
in
ficoml
movsl
jmp
pop
icebp
pushf
dec
mov
fisubs
popf
mov
push
cltd
jno
xchg
mov
or
je
pop
mov
lods
jae,pt
xchg
push
outsb
divb
sbb
xchg
fsubrs
inc
popa
push
jne
scas
jg
pop
and
inc
out
fwait
pop
adc
out
outsb
inc
push
ror
add
cmc
pop
jmp
jns
push
pop
call
clc
orl
pushfw
and
je
cmp
sbb
dec
adc
scas
sahf
mov
sub
push
cld
pop
sar
gs
rcrb
mov
push
pop
leave
cs
add
out
mov
mov
shll
or
cld
jno
mov
and
cs
sti
cmp
mov
dec
insl
in
pop
daa
call
mov
arpl
outsb
push
enter
pop
mov
lcall
test
mov
add
mov
push
fbld
pushf
sbb
test
gs
xlat
shll
dec
ljmp
xchg
sub
xlat
mov
xchg
xor
out
push
xchg
aam
imul
inc
icebp
push
nop
fnstsw
mov
movsb
rcll
xor
push
ss
addb
adc
aam
mov
mov
imul
hlt
xor
jns
fnstenv
push
test
int
pop
adc
outsb
les
insl
mov
push
push
aam
xchg
sbbb
jmp
inc
es
dec
data16
mov
or
adc
pop
out
push
push
xor
sarb
out
and
push
jne
imul
ss
rcl
imulb
pop
mov
mov
andl
mov
sti
pop
dec
dec
and
or
aaa
or
mov
mov
mov
lea
jle
les
xor
imul
ja
and
clc
jg
dec
fsubrl
ja
jno
xchg
nop
ficompl
jmp
cmpsl
jb
mov
and
or
outsl
cmp
rcl
xchg
cmpsl
add
mov
call
xor
add
popf
leave
lret
or
inc
jo
xchg
stc
jnp
mov
jns
fiadds
enter
aad
stos
dec
ds
nop
ret
fbstp
fwait
dec
adc
or
icebp
test
or
xor
test
pop
int
daa
into
inc
into
pop
sahf
xor
xchg
test
pop
push
mov
fwait
sub
pop
push
and
push
push
inc
inc
sbb
jmp
ret
xchg
cmp
add
inc
mov
in
xor
add
xchg
sbb
rcrl
pop
push
lock
daa
sbb
int
pop
sbb
int
movsl
jbe
shlb
aad
jbe
jae
aam
mov
jnp
inc
subb
test
add
aas
sub
sbb
and
sub
jo
sub
adc
stc
jmp
int3
jp
pop
xchg
in
test
jno
dec
stos
inc
mov
addb
std
loopne
jge
dec
or
push
test
xchg
call
dec
insl
or
sbb
fldcw
cmp
add
sub
jecxz
mov
sub
das
sti
mov
addl
test
add
leave
out
cmp
mov
negb
cld
std
popa
dec
add
or
add
xor
bound
mov
jle
int
mov
or
xor
out
jg
daa
mov
dec
gs
or
dec
mov
mov
test
bound
cmp
push
or
jl
cmpsl
sarb
mov
and
mov
sbb
lcall
ret
inc
fstl
ja
imul
cli
dec
inc
xchg
das
or
push
repnz
mov
daa
push
insb
cmp
in
in
mov
adc
rcrl
test
cmp
fcmovnu
add
jp
inc
inc
movsl
mov
fisubl
adc
jmp
pop
adc
hlt
fistps
adc
and
sahf
jae,pn
test
jl
ret
mov
aaa
cs
mov
sbb
adc
pop
cltd
rorl
or
xor
movsl
clc
cmc
mov
inc
pop
das
mov
int3
pop
ret
dec
and
into
aaa
and
lret
mov
jge
es
jl
xor
leave
xor
aam
xor
scas
insb
pop
push
jb
sahf
hlt
mov
insl
jo
sbb
hlt
sbb
call
lret
fwait
out
or
out
aaa
mov
inc
ficoml
mov
push
and
jg
pop
arpl
add
test
dec
and
xor
jbe
enter
xlat
out
push
fistpl
xchg
lret
cltd
cmp
pop
in
cwtl
insb
pop
repnz
orb
lcall
jae
sbb
dec
fistps
xor
pop
sahf
movsb
sub
hlt
xor
loope
xor
and
sbb
adc
movsb
cmc
xorb
in
in
scas
adc
mov
in
mov
cld
sbb
mov
mov
sub
or
leave
cli
and
lret
mov
ret
call
mov
into
cmp
cltd
lock
fidivs
inc
mov
outsl
xchg
scas
das
mov
subb
xchg
fcomps
into
pushf
sub
push
add
sub
in
sarb
je
js
ss
lret
in
in
add
and
fadds
int
and
inc
fstps
xor
inc
push
mov
inc
sbb
cwtl
or
and
pop
in
xchg
arpl
dec
xchg
pop
pop
xchg
inc
pop
ret
mov
popa
mov
jecxz
push
test
push
push
lahf
pop
mov
stos
lock
fcmovbe
xacquire
rcll
cmpsl
push
cmp
das
dec
repnz
xor
jb
jne
sti
mov
aad
jge
dec
mov
mov
xchg
sbb
mov
imul
fsubp
data16
push
iret
add
dec
adc
jp
in
add
js
jmp
insb
mov
and
cmp
xchg
imul
cmp
and
add
filds
cmpsb
pop
insb
dec
loop
mov
ljmp
xor
insl
outsl
dec
sub
in
sub
pop
fwait
sbbb
imul
pop
push
push
jp
dec
add
lcall
icebp
pusha
sbb
stos
mov
es
arpl
sbb
push
inc
lea
adc
shrb
jns
and
xor
and
mov
add
push
mov
or
or
test
add
jp
mov
and
jl
sub
mov
cmp
push
sub
test
mov
adc
lock
jb
sub
jno
lds
test
gs
jg
dec
call
lret
and
ret
and
movsb
cmp
scas
and
loopne
pop
dec
jle
sti
adc
sbb
dec
cmp
mov
inc
shl
imul
jg
pop
pop
add
test
push
mov
out
adc
xor
add
sbb
jb
dec
mov
outsb
pop
add
movl
pop
xor
daa
aad
pop
pop
adc
dec
or
arpl
enter
xchg
push
and
scas
and
loope
xchg
or
mov
fwait
pop
das
cmc
inc
iret
iret
lret
out
inc
repnz
mov
mov
sarl
loopne
aaa
jo
rcll
jbe
and
out
imul
out
mov
push
or
lock
lock
fisubs
leave
mov
daa
sub
lock
lods
jmp
pop
mov
out
fnsave
xchg
cmp
dec
xor
adc
push
adc
in
fistpl
mov
push
lcall
mov
sbb
imulb
push
xlat
push
imul
or
xchg
mov
inc
mov
xorps
push
cwtl
sub
xchg
cld
inc
out
sub
mov
cmp
insl
and
clc
sub
xchg
sti
dec
mov
into
out
lds
rcll
jle
lods
mov
adc
add
popl
adc
mov
dec
inc
mov
cmp
jbe
push
fldt
jnp
adc
or
xor
insb
sub
pop
mov
or
aad
sub
sbb
push
rcll
inc
mov
sbb
movsb
pop
push
xor
inc
test
adc
in
pop
in
addr16
sub
push
inc
scas
lret
dec
push
add
mov
pop
mov
add
das
mov
fisubrl
loopne
cmpl
int
cmpsb
lods
mov
mov
sub
xchg
fbld
fcoml
jecxz
aaa
in
inc
dec
mov
out
loop
dec
add
lock
mov
aam
push
mov
and
inc
mov
push
mov
mov
out
dec
pop
dec
imul
shll
cmpsl
xchg
push
jl
xchg
mov
mov
and
push
or
test
insb
insb
pop
push
int3
sub
adc
xchg
inc
xor
aaa
and
mov
inc
jne
jnp
shrb
dec
cmp
call
mov
cmpsl
pop
add
sbb
sub
add
imul
dec
es
inc
das
fiaddl
and
dec
insl
mov
inc
jne
stos
ljmp
jmp
subb
test
fxch
outsl
sbb
loope
cmp
xlat
es
loope
push
sub
mov
jns
in
out
mov
addb
pop
add
jle
jle
jne
mov
push
aaa
mov
or
loopne
cmpl
or
into
in
mov
xchg
pop
das
or
pop
mov
mov
pusha
test
mov
push
stos
mov
mov
rcll
xor
adcb
or
lds
add
fildll
inc
mov
lahf
and
repnz
es
adc
movsb
add
imul
and
movsb
or
xchg
inc
iret
lret
push
loope
scas
cwtl
cli
xlat
shll
sub
scas
int
loope
sub
xchg
inc
mov
fsub
fistpll
jae
fnstcw
jns
pop
dec
ss
cmpsl
divl
idiv
cwtl
or
gs
cmpsl
inc
jb
xchg
iret
stos
mov
fcoms
mov
adcl
jp
je
xchg
xor
adc
mov
push
pusha
mov
scas
rcrb
in
xor
mov
setg
insb
adc
arpl
inc
and
fs
std
push
cli
xchg
jp
sub
lods
cmpsl
test
outsb
daa
adc
scas
loope
aam
xchg
jbe
sub
adc
push
sqrtps
in
mov
push
jp
mov
xchg
sub
mov
cmp
shlb
in
sub
jl
test
mov
leave
cmp
aam
dec
dec
sti
cmp
icebp
xor
adc
outsl
lock
ret
shrb
mov
push
mov
loope
adc
sbb
adc
arpl
dec
out
lret
jg
out
aas
mov
dec
mov
faddl
cmp
push
outsl
out
mov
fistpll
mov
cmc
repz
add
sti
mov
sbb
inc
jl
sbb
testl
jecxz
xchg
lcall
mov
imulb
shlb
popf
cmp
in
shrl
dec
cli
add
jb
dec
and
mov
ss
lea
je
add
sub
or
mov
aam
mov
ret
jle
inc
mov
sub
pop
popf
add
push
fs
cmpsb
cltd
mov
mov
aam
xchg
lahf
inc
mov
testl
cs
in
xor
fcoms
sub
add
test
lea
mov
xor
dec
push
cmpsl
push
leave
dec
lret
mov
push
xchg
test
out
jmp
lods
dec
mov
and
outsl
fistl
dec
or
sahf
mov
mov
dec
leave
gs
sub
ret
ja
mov
mov
mov
inc
xchg
inc
pop
pop
add
pop
cmp
outsb
test
cltd
ret
xchg
add
add
push
dec
in
push
scas
jge
sub
out
neg
outsb
push
push
movsb
lahf
pop
or
pop
loopne
loope
add
cmp
push
sbb
movl
mov
imul
je
xchg
nop
jne
xor
sbb
imul
jg
cmp
daa
aaa
test
sub
jle
cld
in
mov
roll
mov
inc
mov
and
icebp
xchg
add
and
inc
js
cmpsb
mov
add
outsl
loopne
aad
xlat
rcr
lret
int
cvtpi2ps
aaa
or
cmp
movsb
mov
cmpsb
fisubl
fiaddl
push
mov
sbbl
aaa
cmp
sti
test
inc
jp
js
and
jmp
shl
push
call
nop
or
stos
test
lcall
dec
int3
neg
enter
sbb
repnz
sti
or
jmp
movsl
sub
sbb
or
test
shll
imul
mov
lock
lock
pushf
push
pop
fdivrs
adc
xor
push
nop
mov
fsub
sub
or
movb
jmp
or
mov
aas
push
pop
aad
inc
out
inc
pop
push
xor
push
rcr
enter
lea
scas
int3
out
mov
ja
jnp
mov
or
bound
mov
cmp
mov
pop
sti
mov
aas
dec
icebp
or
dec
and
mov
scas
out
rolb
xchg
sahf
or
xor
or
data16
and
ljmp
rclb
test
data16
sbb
jns
inc
jecxz
inc
push
adc
mov
and
cmp
xchg
les
sub
or
pop
in
cmp
jns
sbb
mov
inc
mov
pop
inc
cli
mov
dec
lods
add
and
lret
adc
shll
and
xchg
lret
lds
ljmp
inc
nop
inc
in
ret
fwait
lret
jecxz
xchg
push
sbb
jo
mov
cmp
xchg
jge
fldcw
and
fstpt
movsb
add
cmp
and
hlt
push
and
pop
and
ret
push
cld
movsl
mov
add
gs
test
nop
cmpsl
aas
mov
cmpsl
and
sbb
jecxz
call
inc
jns
ja
mov
dec
add
loop
sub
idivl
inc
mov
ret
xor
jns
lds
cmp
es
mov
addl
pushl
sbb
mov
mov
pop
lods
xchg
pushf
xor
dec
lret
enter
inc
sub
sub
repnz
rclb
push
fsubrl
mov
jo
insl
push
jmp
nop
pop
dec
pop
lods
test
pop
pusha
or
fnstenv
lods
push
int
and
inc
inc
decb
jae
icebp
cmp
xor
or
outsb
mov
cmp
stos
xchg
add
inc
and
cmp
dec
sub
inc
jle
add
xchg
add
sub
sub
pushf
test
jb
scas
add
add
dec
xchg
mov
add
dec
les
add
add
mov
jb
imul
sbb
je
cmp
dec
adc
mov
mov
lods
or
mov
cmp
ss
pop
test
out
stc
loopne
loope
lcall
xorl
add
mov
cltd
push
enter
pop
mov
lea
leave
stos
stc
fs
mov
dec
lret
les
push
daa
leave
jp
out
fdivrp
jge
pushf
xchg
mov
les
test
fiaddl
nop
rorl
lret
inc
cmpsl
aaa
cltd
dec
push
cld
mov
imul
add
pop
shlb
int3
icebp
clc
aam
rep
mov
mov
cmc
dec
je
jo
and
mov
fs
cmp
pop
stc
mov
cs
cmp
mov
addps
das
lret
mul
xor
add
and
lods
cmp
out
nop
iret
stos
and
pop
inc
add
cmp
in
and
leave
jae
lret
sahf
fnstsw
cmp
insb
stc
call
add
out
pop
mov
xor
lods
xchg
iret
xchg
loope
jge
sub
jbe
add
cmc
sub
test
pop
fwait
das
or
not
pop
rorl
dec
jp
call
mov
push
das
mov
es
cmc
ret
sarl
iret
ds
shr
int
xchg
adc
cld
fsubr
inc
sub
jo
xchg
inc
dec
mov
arpl
gs
sbb
sti
into
xchg
out
loopne
xor
out
lcall
int
fwait
cmp
nop
mov
adc
sbb
lock
or
or
je
lahf
out
lods
out
movsb
negl
xchg
loopne
dec
xor
out
xor
add
mov
xor
ljmp
sub
iret
test
repz
ficompl
pop
pop
out
mov
es
push
push
mov
adcb
test
fmuls
add
loop
imul
or
jne
dec
fisttpl
xchg
daa
xchg
adc
lret
lahf
call
int3
aaa
cmp
subl
sub
cmp
int3
pushf
sti
pop
mov
and
dec
in
pop
inc
cmpsl
cmp
stos
mul
cwtl
sub
jae
rcl
inc
lahf
mov
add
mov
das
sarl
outsl
daa
fcoml
sbb
loop
fidivs
mov
mov
in
lea
les
push
fdivl
inc
mov
mov
andl
dec
stos
flds
cmp
dec
loope
cmc
sub
xchg
scas
dec
adc
mov
inc
adc
insl
and
fs
xchg
sahf
xor
test
xchg
sbb
adc
cmpb
mov
mov
test
push
sub
mov
ds
insl
pop
bound
stos
js
jmp
sub
aas
in
mov
addr16
rclb
gs
lahf
pop
test
jmp
pop
loop
adc
movlps
popa
jb
cli
pop
sub
mov
jbe
pop
insb
jne
sbb
loope
push
mov
fstpt
and
sahf
aad
loopne
mov
test
test
ret
inc
or
sub
adc
movsb
push
add
jge
ss
in
popa
std
stc
cli
ret
fidivrs
out
ja
sbb
push
jno
scas
fwait
push
inc
mov
push
push
xor
mov
xchg
inc
aas
lea
stos
adc
mov
mov
in
pop
in
adc
fbld
and
pop
mov
sbb
mov
jbe
fdiv
mov
jg
repz
xchg
jo
leave
test
and
daa
loope
sub
iret
inc
mov
dec
push
push
bswap
jmp
add
jo
idiv
out
popf
mov
arpl
push
xor
or
pop
aaa
enter
inc
mov
cwtl
and
cmp
jmp
mov
imul
loope
mov
inc
outsl
xchg
sub
ret
ss
sti
mov
sbb
jno
ja
movsb
xor
adc
ljmp
ret
xchg
ljmp
mov
push
stos
ret
mov
cs
adc
and
jbe
pushl
inc
jns
add
cwtl
ficoms
cs
sahf
addb
lods
pushf
jae
jp
outsl
adc
mov
pop
data16
jp
cmp
add
xor
pop
cmp
inc
pop
daa
fldt
popf
lahf
pop
into
xchg
and
pop
lahf
add
repz
clc
dec
inc
and
dec
inc
dec
mov
out
or
lahf
jb
iret
jns
stos
jb
movsl
dec
test
xchg
jbe
xor
sbb
sahf
push
cmp
cmpsl
sub
or
or
sub
in
imul
test
lods
inc
adc
aaa
daa
cmp
aas
inc
sti
adc
sbb
cmpsl
jle
inc
cli
adc
or
lock
jp
mov
mov
and
ds
arpl
xor
mov
test
hlt
bound
xlat
mov
adc
mov
push
xor
lods
jmp
loopne
cmp
lods
push
loope
mov
fidivl
lret
shlb
std
cmpsl
addr16
sbb
lods
cmpsb
jmp
lods
push
jno
std
scas
push
cs
sbb
sbb
dec
in
repnz
cmp
mov
ja
cmp
mov
sub
push
inc
pop
jecxz
mov
lods
lock
mov
jb
es
push
jae
add
inc
ret
fadds
lods
adc
aaa
cmp
mov
xor
or
pop
push
jo
push
stc
cmp
inc
push
and
sub
jl
push
hlt
or
enter
adc
xchg
push
in
addl
scas
daa
std
lret
jb
aaa
push
aaa
rcrl
sahf
aas
fldcw
sub
inc
cmc
xor
sahf
xorl
mov
in
addb
movsl
and
push
div
and
leave
push
adc
inc
jo
fstps
fnsave
cmc
cld
lahf
ss
js
clc
xor
or
in
outsl
add
hlt
movsb
insb
lea
inc
rcrb
inc
mov
pop
jle
fmull
sbb
and
sbb
in
nop
push
mov
arpl
lods
sahf
mov
dec
sub
iret
inc
inc
into
jge
out
inc
pop
mov
sub
mov
lods
jmp
xlat
jns
mov
sub
inc
sub
lods
dec
mov
mov
daa
xchg
and
mov
cmp
aam
mov
push
sbb
mov
je
cmc
jb
test
cltd
and
jnp
js
jecxz
ret
pushf
movsl
sti
push
add
adc
lahf
xchg
scas
lahf
cwtl
aas
dec
jl
stos
or
mov
int
insl
jg
aam
lahf
cltd
dec
push
mov
push
dec
add
notb
scas
daa
add
iret
mov
jmp
jmp
addr16
fldt
adc
enter
adc
add
mov
subb
sbb
adc
push
stos
cmpsl
ja
pop
dec
xchg
lock
cmp
fs
shll
or
cmp
rclb
cmp
outsb
aam
inc
jmp
sbb
ret
lds
pop
fdivr
jge
pushf
ja
repz
in
push
daa
fwait
clc
in
or
mov
aam
and
lahf
outsb
fildll
pop
sti
lret
and
or
pop
jbe
push
adc
enter
in
jnp
movsb
mov
lahf
or
dec
or
mov
icebp
pushf
popf
stos
into
popf
jge
cmpsb
and
mov
inc
and
clts
xor
jae
hlt
idivb
jbe
pop
inc
pop
out
mov
aad
push
xchg
jnp
insl
push
sbb
dec
fwait
adc
and
mov
mov
or
push
js
ss
ficoms
in
insl
aam
aaa
cltd
ss
pop
imul
inc
aaa
xor
rorb
xchg
fcompl
insb
push
xchg
add
loope
fldcw
inc
push
push
lods
jecxz
mov
stos
adc
jmp
std
jp
adcb
push
out
stc
jnp
dec
push
popa
adc
out
daa
cmp
or
jp
mov
cwtl
adc
cmp
out
jp
repnz
int
mov
xchg
stos
popl
inc
mov
and
scas
ljmp
pop
pop
stc
pop
loopne
js
xchg
insb
push
fildl
xor
mov
call
xor
sti
sti
pop
inc
push
cli
cwtl
cmpsl
jle
and
jb
divl
cmpsl
and
xor
push
dec
sub
xor
mov
pop
imul
mov
decb
rolb
sub
sarb
dec
leave
cmpsb
int
add
movl
mov
push
cmp
fcoml
cmp
mov
sub
dec
mov
xchg
insb
inc
and
inc
cltd
mov
pop
xchg
scas
pop
cmp
mov
orb
icebp
insl
jae
and
and
jb
xor
push
ss
push
mov
pop
push
push
movsl
push
xchg
imull
pop
mov
mov
lcall
or
les
push
sbb
cmp
pop
xchg
adc
xchg
dec
add
push
divb
xor
mov
push
xor
stc
fs
xlat
pusha
sub
rcll
sub
cli
in
aad
or
jne
in
mov
sub
push
shlb
cmp
es
ja
enter
xchg
xor
test
sbb
in
adc
in
jnp
pop
icebp
dec
jnp
jmp
lret
push
gs
add
cmp
jmp
sbb
xor
scas
mov
inc
cmp
jecxz
test
addr16
jp
inc
nop
rcll
mov
xchg
in
or
stos
je
hlt
mov
jne
mov
mov
pop
pop
and
sub
push
mov
lods
jne
mov
adc
testl
add
pop
sub
popf
ret
mov
mov
cmp
pusha
lcall
xchg
call
enter
cltd
in
sti
mov
and
test
pop
test
in
pop
xor
das
dec
adc
test
mov
jnp
testl
jae
xchg
stc
jbe
jne
test
xchg
fmul
repnz
pop
cmpl
ja
xchg
sbb
sub
inc
movsb
jg
cli
mov
pop
std
adc
fistpll
jecxz
fcoms
dec
shlb
adc
jns
fldl
and
loope
push
pop
mov
mov
sub
cmp
dec
idiv
movsb
mov
push
push
inc
add
fwait
sub
insl
cmpsb
aas
sbb
iret
pop
cld
add
dec
out
insl
rcrl
arpl
pop
lds
in
daa
cmpsl
into
sbb
pop
hlt
and
xorl
in
mov
cltd
jmp
cmp
sarb
or
cmp
out
xchg
andl
jo
ret
jnp
fs
out
dec
mov
mov
mov
outsb
jge
xchg
cli
adc
shlb
inc
jb
mov
add
negb
mov
pushf
adc
xlat
dec
or
add
pop
mov
dec
sub
lcall
fwait
lcall
sub
enter
jns
cmp
push
and
ret
mov
in
jge
stc
mov
hlt
sahf
sbb
xor
jle
xor
mov
adc
cmp
cmp
mov
push
lcall
push
fidivs
mov
pop
jns
cmpsl
std
loopne
enter
lcall
movsl
js
cmpsb
jno,pn
jns
lahf
sub
insl
and
jo
out
mov
push
xchg
inc
pop
push
cwtl
fstpt
inc
mov
jg
test
jg
cmp
push
pop
enter
fists
fmuls
and
push
lret
pop
xor
rcll
mov
add
enter
ret
das
dec
add
lret
and
int3
adc
iret
xchg
jg
pop
lds
jle
dec
popf
xchg
movsb
and
scas
les
or
repz
xor
jo
dec
cltd
push
mov
xor
aam
rclb
pop
idivl
or
xchg
ja
push
into
filds
aaa
or
xchg
xor
sub
xchg
repnz
dec
mov
xor
xchg
jns
sbb
adc
popa
into
add
dec
cltd
cmpsb
sti
push
adc
jnp
mov
aas
adc
cld
lret
aaa
mov
xchg
mov
cmovae
jbe
pop
cltd
insb
push
sbb
mov
and
jne
pop
mov
sbb
stc
fiaddl
mov
mov
jne
fidivrl
add
movsb
jne
jp
and
xor
and
lods
xlat
in
xchg
testb
pusha
sub
jne
out
popf
pushf
clc
insl
cmpsl
shrb
outsl
rorl
inc
inc
out
push
xor
je
popa
mov
dec
loopne
mov
jmp
push
pop
xor
inc
dec
inc
mov
ljmp
mov
out
cwtl
clc
fsts
nop
loop
sub
sahf
popa
push
or
push
icebp
in
dec
mov
push
repz
mov
loop
push
mov
jb
pop
xchg
test
popa
sti
mov
add
add
adc
mov
ret
sub
inc
mov
cmp
mov
cwtl
mov
stos
and
shr
fsubrl
mov
pop
push
adc
pop
mov
rol
sbb
shlb
dec
inc
xor
ficomps
mov
mov
js
jg
jne
cmp
and
sub
and
test
sti
fs
stc
jno
aas
cmp
scas
mov
lret
mov
mov
xchg
xchg
dec
add
jmp
inc
mov
mov
push
ja
sbbl
mov
mov
das
mov
and
notb
pop
in
movsl
cwtl
out
leave
sbb
pop
mov
dec
push
ds
insb
repnz
icebp
push
loope
lock
sbb
pop
xchg
or
inc
push
pop
ljmp
loope
int
sub
stc
scas
dec
xorb
xchg
dec
lea
fwait
push
testl
in
xlat
xor
xor
pusha
inc
mov
arpl
popa
xor
push
jns
fs
lahf
pop
loop
rcr
xchg
ja
fildl
xor
divl
cs
loope
cmpsb
call
cld
loop
stos
cmp
in
arpl
jecxz
mov
dec
out
sub
inc
push
sbb
mov
in
mov
mov
push
mov
in
jmp
rcrl
xor
mov
fucom
adc
int3
aam
in
in
loope
inc
lock
sub
sbb
cwtl
mov
shr
adc
je
pop
aas
jl
add
shl
or
clc
sarl
xchg
ficomps
stos
mov
adc
lds
jbe
sbb
dec
movsl
xor
jno
mov
dec
cmp
mov
xchg
ds
mov
push
popa
adc
insl
les
repz
push
cmp
shrl
xchg
xor
xor
sbb
dec
lods
insl
dec
xor
ja
xor
ss
sub
in
cli
or
repnz
or
fcmovnb
mov
clc
mov
mov
fdivrl
mov
dec
jp
lahf
dec
pop
and
imul
adc
ljmp
push
ds
cld
xchg
hlt
mov
xlat
fcompl
or
lock
push
in
xchg
jl
rcr
jmp
mov
xchg
ds
xorl
ljmp
pop
fsts
scas
pop
mov
ret
ficompl
insb
cmp
mov
sti
in
stos
aad
subl
pop
fldcw
jecxz
pushf
sub
mov
popf
mov
sub
cmp
aaa
aaa
mov
or
mov
mov
add
sub
xor
fs
rcrb
lret
xchg
sarl
inc
jg
fisubs
mov
cmpsl
stc
cltd
cmp
stc
xchg
aam
orl
and
inc
pop
les
mov
jle
xor
scas
mov
sub
cmpb
or
push
xor
cwtl
lods
and
pusha
and
testb
out
jl
or
sub
xchg
subl
jmp
iret
cld
icebp
mov
arpl
loop
cld
mov
movsl
and
and
outsb
dec
jbe
imul
xchg
adc
inc
rcr
stc
cld
mov
ja
mov
mov
mov
mov
jl
add
mov
cmp
jecxz
and
test
add
mov
sub
xor
icebp
dec
out
shrl
int3
out
sub
ret
outsb
dec
aam
mov
mov
int
lcall
fdivp
xchg
icebp
mov
repnz
ret
int
fwait
jge
aaa
mov
mov
andl
mov
out
or
push
pop
add
sbb
mov
std
int
lahf
aaa
xchg
rcrb
sbb
ret
inc
test
push
int
jne
dec
daa
xor
push
js
jmp
loopne
mov
in
sub
jno
mov
or
push
mov
cmp
outsb
int
std
jae
xchg
movsb
out
sti
test
in
or
inc
aaa
and
ds
jnp
cwtl
xchg
subb
mov
lods
call
mov
outsb
jns
adc
jmp
mov
sbb
clc
imull
mov
adc
fnsave
push
adc
notb
sbb
and
add
test
dec
lahf
pop
ret
mov
mov
fisttpll
mov
push
xor
sahf
jns
in
pop
dec
cmp
enter
fbld
cltd
pop
out
lea
push
inc
jbe
aad
test
fs
pop
jmp
sarb
or
push
into
lods
aam
sahf
in
out
mov
clc
ret
mov
nop
out
push
jle
add
lods
dec
jmp
sarb
mov
popa
lahf
fst
aad
clc
inc
xor
or
out
push
add
sti
daa
lds
in
or
fs
mov
inc
inc
arpl
pop
or
adc
rcl
and
push
sbb
out
push
inc
jne
outsb
pop
mov
outsl
repz
sahf
femms
mov
in
jne
dec
scas
nop
in
nop
mov
in
jbe
movsb
jg
mov
mov
dec
js
fiadds
jg
es
shll
cmpsb
pop
xchg
and
sub
xlat
mov
repz
sarb
push
movsb
fwait
les
xor
mov
cwtl
and
inc
jne
sahf
push
xor
or
or
add
enter
sahf
adc
pop
bound
loopne
add
mov
or
xchg
and
out
stos
jb
push
imul
xchg
out
mov
loope
sub
pop
mov
pop
inc
cmpsb
insl
push
or
dec
xor
or
dec
mov
dec
leave
and
cmp
pop
and
sub
call
jp
scas
and
lahf
lds
stos
in
fidivrl
mov
cmp
mov
inc
repz
xchg
in
mov
stc
push
daa
and
sbb
fisubrs
movsb
fiadds
sbb
adc
cltd
sub
pop
aaa
cmc
pop
lods
add
push
pop
push
loop
es
enter
xor
je
or
mov
aam
pop
dec
stc
dec
std
icebp
mov
test
and
dec
stos
sete
push
pop
iret
adc
xchg
repnz
xor
hlt
jbe
iret
orb
popf
cwtd
jecxz
icebp
add
sub
inc
push
cmp
sub
testb
repnz
add
jne
or
and
mov
les
jecxz
stc
push
sbb
rcll
jo
imul
add
mov
shll
not
es
mov
nop
inc
jnp
cmpsl
xor
es
fidivs
sub
jmp
sub
xchg
sub
cmp
clc
xchg
add
out
push
loope
rolb
mov
rcrb
xchg
cli
inc
cmpl
outsb
xor
xchg
mov
xlat
repz
stos
jge
sbb
lea
aaa
mov
jno
sub
inc
xchg
push
loope
push
outsb
lahf
lahf
jbe
arpl
iret
mov
das
icebp
xor
xor
mov
enter
mov
xor
lret
mov
ss
loope
in
or
mov
mov
add
stos
data16
nop
aaa
sbb
daa
sahf
hlt
add
lods
or
xor
sbb
mov
pop
xchg
mov
sbb
lret
cmp
shlb
or
dec
rcrb
ds
xor
shrb
dec
shl
aad
mov
add
cmc
pop
fimull
cmp
jp
sbb
fstpt
mov
jno
cmp
push
aas
in
fucomip
pop
aas
in
jle
mov
int
add
ret
rclb
sbb
jnp
jb
dec
xchg
mov
sub
add
repnz
xor
push
fcomip
test
adc
inc
push
mov
mov
or
fwait
and
addr16
xchg
fistpl
xchg
xor
pop
and
faddp
cmc
orl
jecxz
xor
out
xlat
cmp
dec
rorb
lods
orl
dec
pop
sbb
inc
push
jbe
push
sti
test
cmp
push
sbbl
push
push
inc
jge
cs
mov
mov
mov
mov
idivb
iret
fadds
pop
sbb
cmp
dec
push
push
clc
shll
dec
adcl
mov
bound
inc
roll
rcll
mov
mov
lods
jo
pop
sub
or
jbe
push
ss
lret
scas
sub
enter
mov
insl
test
into
mov
inc
sti
rclb
inc
push
sub
sub
outsb
push
pop
js
sub
sbb
push
xchg
lock
mov
aas
push
addl
mov
cmc
lcall
rorb
ljmp
scas
push
ss
stc
sahf
popa
mov
sbb
fidivs
cmpsb
sti
jmp
rorb
jns
dec
sbb
fsubr
loope
loope
out
mov
stos
push
mov
nop
jo
sbbl
jl
adc
mov
and
mov
xchg
pop
dec
stos
ds
pushl
mov
adc
popa
in
mov
cmpsl
addb
ret
notb
and
int3
imul
insl
mov
push
push
xor
jno
lcall
cmpb
outsl
imul
xor
xchg
sbbl
mov
dec
cmpb
jl
xor
push
imul
cwtl
loope
cmpsb
or
test
dec
mov
std
test
pushf
shl
mov
cs
adcl
mov
ljmp
cmpsl
mov
push
xchg
adc
adc
sti
sar
je
pop
pop
pushf
scas
iret
imul
aam
pop
popf
push
xchg
lret
aas
inc
xor
aas
lock
pop
test
mov
jp
push
repnz
push
sub
mov
call
or
push
or
jnp
rorb
mov
inc
jle
test
out
sub
adc
fwait
cld
filds
or
das
adc
sub
popf
popa
sahf
inc
and
sahf
xor
roll
jo
pop
rcrb
or
out
adc
rcrb
and
scas
in
or
or
mov
pop
imul
nop
mov
add
cli
pusha
push
ds
scas
ss
dec
lahf
pushl
ja
cmp
stos
pop
jg
push
fists
mov
mov
out
xchg
push
adc
dec
push
mov
push
ret
dec
jne
mov
das
add
adc
loopne
mov
outsb
add
or
inc
inc
into
in
xor
pop
jb
lea
rclb
jle
mov
xchg
xor
aam
daa
pop
mov
loopne
inc
lods
xor
jnp
jl
lods
fildll
xor
add
je
mov
dec
mov
dec
repz
int
inc
jl
inc
xchg
mov
cmc
leave
in
jge
push
cmp
mov
ret
add
adc
pop
cltd
cmp
loop
ret
lock
movsl
fisubrs
cmp
int
mov
cmp
sub
push
ljmp
data16
fstl
aam
cmp
or
jp
pop
and
push
jl
scas
aas
sbb
cwtl
or
mov
xor
add
bound
sub
xchg
sub
in
dec
out
int3
aad
call
enter
lods
je
jno
sub
push
pop
or
rcll
adc
popl
mov
xlat
lods
hlt
cmp
or
std
in
pop
icebp
xor
dec
lret
subl
insl
sub
loop
dec
out
imul
and
hlt
test
dec
jecxz
xchg
dec
in
xor
fiaddl
push
xor
push
inc
in
scas
hlt
jmp
pop
adc
and
in
rorb
out
xor
mov
enter
xchg
mov
fcoms
int
xchg
repnz
cmp
lret
cmp
sahf
cs
repz
mov
cmp
cmp
stos
leave
mov
test
bound
loopne
stos
push
mov
cmp
ss
or
pop
cld
add
das
lahf
xchg
push
xlat
sbbl
out
inc
pop
sub
push
mov
mov
cmpl
out
popa
add
sub
repnz
mov
mov
mov
xchg
fwait
rcrb
in
subl
lods
loopne
pusha
sub
movsl
sbb
subb
mov
int
sub
inc
nop
sub
push
int
cmc
bound
add
inc
xchg
sub
xchg
mov
sbb
dec
fidivrl
push
sbb
mov
test
scas
in
cmp
jle
mov
cmpsb
or
lret
or
adc
xchg
sub
mov
pushf
or
leave
sub
pop
movsl
jmp
mov
mov
sub
push
nop
jne
out
or
and
xor
sbb
in
inc
jnp
popa
cmp
sub
or
jmp
in
xchg
test
fstl
xchg
cmp
adc
push
or
cmp
xchg
ja
repnz
dec
push
aas
cmp
mov
adc
fs
mov
pusha
fsubp
push
xor
jbe
nop
xlat
fnstenv
adc
adc
add
insb
inc
pop
in
cmp
and
dec
cs
push
aam
inc
xchg
pop
clc
dec
into
push
lds
into
sti
in
push
adcl
fdivs
in
add
adc
std
mov
mov
push
push
and
iret
inc
and
inc
int
aas
test
pop
sub
imul
ficoms
mov
es
mov
imul
jne
cmpsb
mov
inc
cmpsl
pop
inc
mov
mov
in
add
mov
cltd
sbb
mov
pop
sub
popf
dec
jae
popf
das
imul
outsb
lds
sti
adc
mov
iret
out
cmp
rcll
jecxz
loopne
jecxz
andl
xor
repnz
mov
xchg
shl
ss
add
mov
cmp
mov
and
mov
mov
add
popa
arpl
lret
daa
iret
imul
loopne
mov
xor
cmp
in
pop
enter
and
clc
mov
push
adcb
insl
rorl
or
pop
push
mov
shrl
dec
mov
imul
bound
lret
ja
push
out
push
in
xor
cmp
inc
lods
xchg
mov
lock
sbb
imul
adcb
and
push
dec
js
xor
sub
ss
mov
push
and
cmp
outsb
xchg
xchg
mov
test
xchg
mov
pop
pop
sub
orb
or
push
mov
dec
dec
hlt
pushf
cltd
imul
dec
xchg
lea
mov
and
ljmpw
pop
xor
mov
adc
out
mov
fnstsw
ret
insl
icebp
fiaddl
dec
push
add
aam
jle
loopne
and
mov
stos
lret
push
rolb
mov
bnd
and
les
push
stos
pushf
dec
inc
sbb
data16
xor
std
or
movsl
leave
mov
and
ds
dec
fildl
je
loope
push
xchg
xchg
divb
dec
iret
add
jns
cmp
hlt
dec
sub
inc
jge
sbb
sub
xor
xchg
sahf
xchg
das
hlt
add
jle
mov
jae
add
dec
and
scas
cmp
incb
xlat
cmp
fdivp
out
pop
push
add
sub
jge
jne
aaa
or
xor
jecxz
pmuludq
repz
test
or
or
mov
in
push
fwait
or
fs
pop
cwtl
popa
psubw
add
adcl
pop
adc
ss
fwait
mov
inc
lea
lds
add
js
mov
push
int3
subb
inc
cmp
mov
pop
mov
stos
and
mov
pop
mov
inc
mov
jns
mov
std
sub
icebp
sbb
xor
inc
enter
inc
mov
jge
push
and
lret
fcmovnbe
jb
std
push
fsubrs
inc
test
stc
mov
dec
in
dec
mov
add
mov
mov
aas
jl
mov
mov
loop
loop
cs
iret
les
scas
push
mov
orl
xor
movsb
pop
push
orb
sbb
mov
in
mov
cwtl
xor
fisttpll
inc
cwtl
adc
std
jb
dec
mov
notb
fists
int
fldl
jmp
push
jbe
fcomps
jb
das
push
in
mov
sti
sarl
mov
add
mov
push
push
std
and
je
mov
mov
mov
fdivrp
mov
add
fs
scas
inc
xchg
aaa
mov
mov
add
loopne
pop
fdivrs
mov
fsubl
je
fbld
dec
sbb
gs
pushf
sarl
popa
cltd
mov
lret
iret
cmc
lahf
sub
rolb
adc
push
out
mov
scas
push
xchg
push
jnp
adc
sbb
push
mov
das
add
mov
push
sub
xor
sahf
lret
shll
flds
std
loop
mov
shll
add
cmpsb
test
xchg
or
fnsave
test
xchg
add
xorl
mov
roll
inc
mov
jno
sub
lea
sub
push
jmp
adc
sbb
sbb
push
xor
push
imul
lgs
add
out
pop
jb
inc
jns
add
or
lcall
mov
enter
loop
dec
loope
sub
imul
stc
lahf
inc
adc
mov
outsl
stos
sub
bound
xchg
xorb
xor
inc
popa
xchg
xchg
cmp
es
out
rcl
loop
loope
xchg
sbb
mov
lret
testb
mov
in
ret
mov
pop
inc
sarb
and
or
in
jle
popf
push
cli
popl
mov
mov
lcall
pop
nop
lcall
jl
ljmp
insl
xchg
icebp
iret
lea
sarl
enter
xchg
mov
arpl
push
fsubs
es
lods
push
jmp
js
in
dec
enter
orb
sbb
push
mov
jle
cmp
xchg
sub
and
inc
mov
scas
pop
mov
dec
loopne
jbe
cmc
add
fs
xchg
cs
test
mov
push
adc
mov
push
sbb
inc
and
loope
ljmp
popa
std
loope
pop
inc
lods
push
jne
shr
mov
cmc
push
pop
lea
mov
xchg
push
stc
aad
das
fdivp
in
dec
xor
sub
inc
xor
fdivl
lcall
imul
mov
fcompl
xor
pop
add
bound
and
push
mov
stos
lods
int
push
scas
insb
iret
pop
dec
inc
xchg
mov
jecxz
int3
push
jne
cmpsb
int3
push
sub
pop
jmp
out
xchg
mov
xchg
sbb
jb
leave
push
movsl
jae
mov
loopne
jg
dec
cmc
or
inc
mov
or
repz
adc
pop
pushf
sbb
ret
cmp
into
in
jge
xor
adc
enter
or
out
xor
test
ja
add
shl
inc
lods
ret
pop
insb
sub
jl
jge
adc
shrb
loope
sti
enter
je
outsb
jno
adc
lcall
outsb
mov
inc
movsb
rcll
jnp
mov
test
lock
sub
adc
mov
jae
cld
adc
mov
mov
insl
mov
mov
popf
stos
mov
adcl
pusha
icebp
rorb
lods
shlb
mov
sbb
ss
out
dec
dec
lods
adc
leave
mov
adc
je
rclb
jp
test
pusha
dec
jnp
addb
nop
xchg
push
or
shll
and
mov
sbb
gs
sahf
or
mov
je
wrmsr
jge
cwtl
or
mov
mov
sbb
gs
test
cwtl
fcoml
pop
iret
icebp
lds
nop
add
fwait
pop
shll
adc
mov
int
cmp
pop
out
or
inc
in
pusha
or
mov
loop
fdivrl
add
mov
pop
jg
jns
bound
pushf
adc
inc
and
xchg
lea
xchg
cmp
sub
dec
mov
cwtl
pusha
mov
jb
lret
and
cli
jl
in
movsb
cltd
push
fidivrl
mov
fmulp
xor
jno
fnstenv
jns
dec
push
xchg
out
pop
pushf
sti
jmp
inc
sbb
test
fsubrs
xchg
adc
ljmp
jecxz
inc
movsl
sarl
mov
or
mov
jae
pusha
inc
xchg
or
loopne
add
subb
stc
cmp
flds
je
das
jnp
adc
lds
pop
push
aad
add
subl
sarl
pop
xchg
cmc
xor
mov
jecxz
add
and
xor
test
leave
mov
inc
dec
mov
pusha
movsl
aas
popf
xchg
mov
sub
call
cli
mov
mov
sub
out
jmp
inc
arpl
jp
and
repz
adc
addr16
xor
das
inc
xchg
xorl
and
xor
cmp
divl
leave
mov
lds
inc
movsb
les
into
and
and
cmpl
sbb
scas
pop
push
mov
xchg
mov
js
mov
and
filds
outsb
ret
cmpsl
push
jno
jnp
sub
cltd
mov
xor
sub
xor
in
push
lods
out
or
mov
jl
pop
sbb
xchg
sbb
mov
aad
lods
xor
and
repnz
mov
mov
arpl
loopne
jae
movsb
jbe
adc
les
or
cmp
xor
adc
xor
push
int
mov
arpl
nop
mov
and
mov
mov
jmp
imul
and
in
jmp
ljmp
push
jne
adc
jle
lds
or
insb
jno
aad
and
pusha
push
aaa
jbe
jb
rcll
lcall
cwtl
fidivs
jmp
and
dec
jb
inc
mov
mov
and
cmc
stos
xchg
dec
xchg
pop
push
dec
repz
int
push
adc
stc
mov
outsb
bound
mov
outsb
nop
cmp
in
or
sbb
lea
and
and
mov
adc
xchg
movsb
and
and
pushf
xor
vdivpd
jns
jg
xor
test
pop
fnstcw
mov
sbb
and
mov
loopne
and
xor
imul
loope
aaa
inc
push
sub
mov
bound
sbb
jae
arpl
lds
push
mov
ljmp
xor
jns
xchg
jno
std
mov
data16
out
jp
sub
or
mov
shr
sbb
out
dec
cmc
pop
jle
ja
xchg
out
test
iret
push
mov
xor
sbb
test
ds
inc
fnstenv
popa
addb
sub
mov
iret
lcall
push
shll
aas
mov
dec
sbb
outsb
add
lock
in
xor
xlat
test
xor
xchg
jecxz
jbe
popf
dec
and
or
sub
scas
cltd
add
and
inc
mov
cld
lds
icebp
cltd
fnstcw
insl
dec
adc
and
mov
push
xlat
xor
jne
outsl
cmp
mov
test
stos
pushf
je
fcmovu
mov
mov
mov
dec
and
mov
jbe
xchg
mov
cmp
stos
cmpsb
push
push
add
mov
fldenv
inc
sub
fldcw
xchg
push
insb
dec
stos
jno
adc
mov
sub
mov
icebp
xlat
mov
out
fldt
int
dec
popa
test
xor
repz
push
add
popf
fnstcw
xchg
sub
pop
push
test
sbb
push
cmp
xor
pop
mov
jbe
aad
call
testb
dec
xchg
xor
cmp
outsb
lods
dec
fmuls
inc
pop
cli
popa
sbb
inc
adc
scas
ja
in
pop
mov
add
lahf
loopne
lods
push
shrl
mov
push
aaa
nop
cli
xchg
fldt
sub
dec
sub
adc
ss
outsb
mov
test
hlt
push
cmp
add
std
fwait
pusha
pop
mov
xchg
push
mov
cmp
lds
cmp
ljmp
push
ja
cmp
enter
adc
addb
mov
mov
pop
aam
dec
push
enter
xlat
push
sbb
pop
mov
mov
cmp
sbb
arpl
cwtl
push
pop
cld
adc
in
jle
push
and
scas
push
shrb
fcoml
pop
mov
das
or
jle
mov
out
sub
call
or
push
data16
pop
mov
add
movsl
repnz
movsb
nop
jge
dec
insb
out
inc
jno
fiadds
int
mov
fldt
inc
pusha
and
movsb
das
sbb
xor
mov
repz
sub
adc
sub
ret
popf
iret
add
repnz
flds
add
mov
push
loopne
scas
cmp
adc
adc
test
xchg
clc
mov
int
sub
xor
adc
inc
push
test
or
aad
adc
je
xchg
sarl
shrb
test
scas
out
in
sub
repz
add
and
push
mov
pop
ljmp
jnp
je
pop
dec
sti
in
arpl
dec
dec
jge
mov
jge
movsb
fadds
pop
loope
dec
leave
daa
add
xchg
jecxz
xchg
js
fnstsw
leave
lods
out
pop
ffreep
test
int
inc
addl
andl
xchg
pop
shrl
shll
xchg
xchg
mov
adc
roll
add
and
out
std
cmp
dec
rcrl
nop
xorl
xchg
js
in
xchg
sub
push
addr16
call
movsb
xchg
mov
out
jg
jge
cmp
int3
lahf
dec
mov
or
in
mov
mov
test
imul
jb
or
inc
ss
sub
cmp
push
jge
inc
outsl
jg
arpl
mov
mov
mov
outsb
sbb
mov
inc
jle
pop
popf
lahf
jne
cmp
xchg
imul
push
inc
jbe
jo
add
cmp
xchg
shlb
dec
dec
dec
and
mov
or
arpl
pushl
in
pop
neg
stos
int3
push
sar
add
xchg
xor
imul
dec
cmpsl
and
inc
fucomi
dec
andl
add
sub
out
je
dec
sbb
sub
fs
aam
and
pop
dec
js
sub
push
jecxz
pop
sbb
movsl
cltd
jbe
shl
mov
mov
xchg
push
mov
push
sbb
and
sub
xchg
cmpsw
movsl
xlat
pop
rolb
add
inc
jne
cmc
and
pop
push
sbb
add
xchg
fimuls
dec
cwtl
insl
into
mov
cmovo
lock
mov
in
mov
xor
or
in
jmp
add
les
std
std
int
pop
ljmp
sub
pop
jae
out
mov
shlb
ret
push
es
mov
adc
jl
cld
push
jno
jo
jns
mov
mov
mov
loope
lds
jae
xchg
mov
sub
push
test
mov
loop
repnz
loope
icebp
cld
push
out
cmp
sub
mov
adcl
dec
sbb
add
js
xchg
outsl
mov
js
inc
ja
jl
inc
sbb
jnp
sti
jl
ficompl
enter
shl
cmpsb
call
mov
in
or
in
fs
shrl
test
dec
mov
loope
out
cmp
pop
mov
ss
in
sub
stos
push
out
ret
ds
es
dec
dec
sbb
fiaddl
aam
sub
fldenv
jp
xor
jmp
imul
cmc
outsl
loope
pop
and
lea
mov
xchg
test
lods
in
inc
pop
cwtl
jb
push
mov
push
xchg
jecxz
fbld
xor
std
stc
cmp
and
negb
mov
int3
ret
jl
clc
in
repnz
idivl
xchg
cmp
out
xlat
in
iret
ret
adc
mov
std
add
pop
lret
adc
std
std
rclb
mov
mov
ljmp
fists
jge
mov
lods
adc
lahf
cmp
push
js
cmc
imul
adc
subb
dec
mov
test
cmp
push
sub
jle
cmp
xor
lock
dec
xchg
fstpt
push
and
xor
insb
mov
push
push
or
inc
insl
sbb
repz
cmp
lds
mov
add
aad
hlt
stos
in
out
cmpsl
call
jbe
fidivrl
cli
in
mov
push
push
sbb
in
push
das
or
in
sub
xlat
mov
imul
xor
rcrb
push
fildl
adc
inc
push
dec
aaa
nop
ret
inc
lret
std
popa
jae
add
xchg
sahf
mov
in
push
fstpt
jne
inc
add
xchg
stos
xchg
mov
pushf
dec
imul
xchg
xchg
ret
pop
imul
scas
dec
orl
inc
adcl
and
xlat
mov
mov
push
and
xchg
mov
dec
in
add
adc
cmpsl
pop
push
cmpl
negl
in
ja
push
enter
or
int3
fdivrs
xor
sbb
mov
mov
fidivs
andl
push
mov
jns
out
xor
lods
lock
ljmp
jno
jbe
movsl
xor
xor
sbb
push
push
add
shl
xchg
aam
addr16
xor
gs
xchg
pop
mov
cltd
addr16
adc
sub
xor
das
mov
pop
test
mov
dec
xchg
pusha
rorb
mov
fchs
outsb
insb
pop
lret
mov
mov
repnz
xor
lahf
dec
sub
or
dec
jmp
movsl
cmp
jae
mov
insl
pop
xchg
xchg
shrb
dec
loope
dec
aam
popf
push
sbb
insl
and
mov
loop
push
divb
push
aas
xchg
iret
addr16
mov
jl
sbb
popf
inc
xchg
push
inc
imul
leave
jae
insl
std
push
and
xchg
aas
pop
pop
push
and
stos
push
mov
or
push
in
dec
inc
mov
and
sub
fisubs
rorb
in
insb
mov
popa
movsl
sbb
xchg
jp
mov
in
or
ds
push
xor
clc
rorb
shl
fucomip
push
pop
imul
les
fidivrl
and
sub
pmaxub
or
mov
cmp
jns
push
jne
sbb
clc
xchg
cwtl
fwait
aaa
add
pop
cltd
idivl
inc
xchg
repz
push
xorl
bound
xchg
inc
pop
mov
cld
ds
into
lcall
lea
sbb
cmp
in
fxch
adc
sbb
stos
mov
mov
addr16
lcall
add
push
push
lcall
pop
pop
stc
pop
cmp
mov
pop
fimull
sar
pop
dec
dec
lahf
es
push
xchg
push
in
out
enter
sti
jg
loopne
push
xchg
jb
and
addr16
jl
in
out
lea
pop
es
sub
mov
sub
das
scas
aam
add
cld
xchg
dec
fadd
sbb
mov
int3
rorb
sub
pop
ljmp
pop
dec
pop
lock
xchg
les
mov
and
in
or
sub
lea
pop
mov
push
rolb
iret
mov
aaa
pop
fmul
mov
add
xchg
clc
testl
jmp
mov
sub
sbb
mov
ret
inc
jmp
lods
std
cmp
cmpsb
push
lret
jmp
xor
loope
push
adc
ss
outsl
lret
imul
mov
xchg
loope
shlb
ss
call
dec
dec
xchg
jne
sbb
and
xchg
sub
lret
pop
mov
xchg
dec
xor
mov
sbb
insb
xor
cmpsl
xchg
shrl
xor
adc
pop
push
arpl
fldenv
test
pop
jnp
movb
iret
iret
mov
mov
mov
imul
mov
sbb
mov
test
xchg
mov
inc
xor
hlt
enter
je
pop
test
sub
arpl
or
lods
jg
inc
add
fs
mov
add
push
nop
pop
mov
mov
add
xchg
inc
outsl
xchg
sbb
enter
lods
mov
add
movzwl
and
std
cltd
sbb
add
popf
int
xchg
jp
mov
push
pop
mov
dec
jno
aad
cltd
lock
cmp
subl
mov
xchg
lahf
push
lock
dec
insb
stc
shl
push
cmp
out
mov
and
cmp
loop
insb
push
mov
sbb
jno
stc
dec
push
clc
iret
push
mov
cld
pop
shr
mov
arpl
popf
pop
mov
adc
in
jg
inc
and
pop
pop
push
pop
xchg
pop
test
sahf
inc
dec
dec
lods
cli
gs
mov
push
fldenv
call
popa
mov
nop
daa
stc
mov
mov
lcall
sub
int
jne
mov
stos
add
xchg
sbb
subb
adc
push
push
dec
sub
stc
jno
push
imul
or
jmp
or
xor
mov
test
mov
aas
sub
and
inc
sbb
add
test
filds
in
cmp
shl
mov
vpsubusb
pop
in
inc
and
adc
rcrb
mov
mov
aaa
mov
out
mov
fidivrl
shrl
cmpsl
shrb
inc
imull
pop
or
jno
pop
lds
and
sub
xor
pop
cmovs
lret
iret
pop
int
pop
sbb
leave
xor
movsl
daa
push
xchg
in
jmp
mov
mov
push
inc
mov
hlt
push
int
push
xchg
mov
scas
pop
mov
aam
test
sbb
jae
js
xchg
push
sahf
pusha
push
cmpsl
call
adc
addr16
in
fnstsw
sub
sahf
mov
lds
out
pushf
cli
jl
jle
adc
jb
add
inc
fs
aas
scas
jb
iret
cmp
ljmp
inc
std
sub
mov
ja
shrb
imul
mov
outsl
jnp
repnz
sub
add
or
movsl
aaa
lret
ja
sbb
lret
ja
repz
into
xchg
sub
lock
xor
jno
pop
or
popa
pop
mov
notl
jg
sbb
jo
mov
or
pop
stos
test
test
fstl
mov
neg
pushf
add
fwait
je
and
mov
pop
xchg
lret
daa
in
rolb
imul
dec
dec
cli
add
mov
sbb
pop
xor
adc
cmpsl
sub
adc
rolb
cmc
jne
push
adc
inc
jno
inc
mov
and
sub
cmp
in
aaa
push
ja
cmpsb
lds
cmp
sub
in
shll
loope
push
imul
sbb
push
leave
repz
outsl
int
add
roll
xchg
or
in
cmpb
orl
dec
stos
sub
outsl
das
dec
popf
cmp
rorl
or
adc
repnz
roll
sub
fildll
lahf
lods
inc
add
sbb
sbb
inc
add
sbb
dec
sbb
aas
ds
mov
cmpsl
or
add
xchg
jns
push
pop
fnstenv
adc
shl
cli
sbb
scas
jp
ja
sbb
xor
pusha
ret
cmp
sub
push
cmp
jne
mov
xchg
ss
idiv
or
in
rorl
aaa
in
and
sub
lods
mov
call
mov
dec
idiv
push
scas
pop
lods
add
add
je
leave
xorb
mov
and
sub
jb
inc
push
inc
lcall
mov
jbe
and
adc
xor
out
xchg
inc
sub
into
jmp
adc
out
sbb
jnp
pop
pop
sub
je
dec
push
sbb
mov
add
adc
test
and
sbb
add
and
and
mov
xor
int3
jbe
sbb
jmp
push
stos
insb
inc
loopne
aam
test
push
icebp
mov
lea
and
les
ds
lahf
or
push
repnz
scas
cli
mov
fsubrl
sbbb
lret
cmc
sbbl
pop
sbb
into
mov
daa
pushl
mov
sbb
jbe
ret
aam
pop
je
add
rcr
test
pop
test
ss
test
dec
ljmp
mov
outsl
hlt
dec
xor
jno
push
xchg
jns
pop
popf
fistpll
and
xchg
jle
ret
cmp
fldcw
mov
in
push
sub
xor
pop
or
push
push
in
push
lods
push
rcll
pusha
fisubl
fistl
aas
rorl
out
cmc
fcom
lds
sbb
inc
in
jbe
mov
adcl
dec
add
cmp
and
xor
das
xlat
adc
std
cmpsb
mov
les
sbb
gs
and
scas
sbb
dec
jb
fstpl
ds
in
and
sbb
cld
aad
mov
ljmp
pop
fwait
or
cmc
or
mov
xor
dec
sbb
movl
je
les
lds
out
adc
rclb
add
push
test
insl
pop
lea
mov
arpl
or
jns
jae
and
lds
bound
icebp
loope
bound
outsb
add
and
ret
stos
iret
or
push
pop
jl
adc
lahf
dec
and
sbb
insl
xor
ffreep
mov
or
jbe
lret
mov
jno
frstor
stc
jne
clc
mov
das
push
ret
pop
cmp
mov
loopne
imul
xchg
push
adc
mov
sarb
pop
movsl
jbe
lods
pop
mov
in
gs
mov
lods
mov
je
out
sbb
pop
into
out
lea
pusha
xor
jl
loop
fdivp
mov
cmp
dec
in
loope
mov
ficomps
out
fimull
add
jbe
outsb
push
pop
push
pop
nop
in
dec
xor
rcrl
add
pop
xchg
jns
jno
rorb
fstl
pop
dec
jnp
mov
imul
fs
test
test
lock
adc
xchg
adc
add
jns
or
punpckhwd
popf
mov
fs
lock
andl
movsb
loop
adc
push
idivl
cmc
pop
add
shrl
fcoml
imul
mov
xchg
add
jecxz
loop
fwait
xor
movsb
mov
enter
gs
add
and
inc
or
fcmovb
fidivl
sub
adc
push
test
test
pop
int3
out
sbb
mov
test
movd
sub
mov
ret
mov
pop
or
pop
add
fsts
das
jnp
icebp
sbb
push
dec
fsts
test
jecxz
and
push
sti
and
pop
ja
sub
adc
pop
mov
or
add
icebp
lret
mov
imul
mov
das
adc
mov
dec
icebp
mov
cmp
cs
inc
insb
fs
shll
gs
pop
test
xchg
adc
lcall
jecxz
pop
dec
adc
fld
aas
fdivrl
fwait
scas
pop
jno
push
mov
xchg
push
dec
aad
pop
xchg
jbe
xchg
fsubs
lcall
mov
and
sbb
mov
pop
add
jmp
icebp
outsl
push
jb
cmpl
dec
mov
lret
fsubrl
shlb
int
xchg
rorl
mov
enter
xchg
mov
paddsb
xchg
cmc
jmp
stos
inc
lret
push
popa
xchg
and
jae
inc
or
lret
and
rep
js
outsl
sub
loope
sub
pop
xor
ret
jecxz
stos
test
fisttpll
outsb
out
rcll
dec
or
xor
push
pusha
hlt
imul
push
or
repz
mov
jbe
inc
xlat
popa
and
jmp
addl
xchg
pop
push
and
xor
add
jae
pop
mov
adc
dec
pop
xchg
js
pop
inc
fnsave
xlat
repz
dec
adcl
jnp
rclb
jl
pop
je
pop
ja
sbb
shlb
sti
test
inc
loopne
sub
ljmp
dec
mov
push
lods
jg
and
mov
imul
pop
jo
push
push
xchg
mov
mov
les
pop
loop
mov
leave
jbe
bound
and
cli
daa
enter
inc
or
lods
push
add
lea
bound
pop
add
pop
pusha
pop
orb
clc
fs
cvtdq2ps
jo
ljmp
rcll
jbe
push
sub
mov
sbb
pop
arpl
pusha
lahf
add
pop
push
test
iret
pop
je
lds
and
and
jl
mov
in
sbb
xchg
in
aam
push
mov
and
and
ljmp
adc
lret
je
lea
cmp
xor
pop
mov
ss
adc
pop
jle
jne
stc
push
cs
insl
movsb
mov
cmp
insl
push
data16
xor
xchg
and
repnz
pop
mov
js
aad
cmp
mov
aam
mov
pop
sbb
gs
xor
clc
arpl
jg
mov
inc
xlat
inc
lods
jecxz
and
roll
or
mov
pusha
popa
fistpll
mov
mov
je
repz
jmp
mov
mov
add
sub
hlt
out
aam
sbb
cmp
shll
gs
in
cmpb
ljmp
mov
ds
shr
adc
hlt
leave
or
rdpmc
xchg
das
xor
and
and
or
mov
in
divb
idivb
mov
bound
insl
adc
sub
lea
sbb
adc
mov
dec
pop
mov
fldt
mov
cmc
fsub
mov
mov
add
test
in
jnp
clc
int3
repnz
push
inc
fcmovb
mov
notl
lods
cmp
push
pushw
dec
insb
adc
popa
jns
out
sub
add
aam
sub
sub
lret
push
shrl
dec
int
ss
cmp
inc
les
push
std
dec
or
int3
or
std
or
std
jge
mov
sbb
fdivrp
pushf
mov
jae
call
fmull
jp
mov
test
dec
loop
xor
insb
xor
mov
aad
jmp
rol
bound
fs
push
mov
mov
mov
outsl
fsubl
movsb
enter
sub
sbb
sub
add
cmp
aam
pop
stc
adc
or
loop
std
iret
mov
lret
sbb
enter
sti
dec
mov
or
stos
arpl
aas
fstpt
arpl
mov
ja
inc
xchg
lods
jl
jno
sti
mov
inc
gs
outsb
repnz
push
pop
pop
fiadds
mov
xchg
lock
lcall
jmp
into
mov
cmp
mov
rcrl
cmp
dec
pushl
fiaddl
jg
inc
xchg
incl
jle
and
arpl
cmp
xorb
cltd
loope
inc
cmp
xor
jno
adc
daa
fidivrl
jo
idivl
aaa
fldl
sbb
pop
test
push
dec
bound
push
dec
push
pop
int
aam
mov
mov
imul
cmpsb
scas
adc
mov
xor
and
cmp
mov
outsb
leave
mov
sub
fiaddl
in
fistl
addr16
jl
nop
sbb
and
pop
and
mov
xlat
mov
int3
cmp
sbb
push
cmc
inc
dec
ret
sbb
mov
mov
in
jbe
jle
xchg
and
adc
or
sub
pop
out
popfw
and
shll
data16
mov
lds
inc
dec
cmp
daa
sub
pop
cmp
jp
cmp
pop
movsl
into
fidivs
clc
ss
lods
negb
lds
jbe
xchg
loope
sbb
or
pop
test
lds
addr16
in
in
aad
lea
or
mov
push
cs
mov
out
or
stos
adc
or
jbe
xlat
leave
js
inc
andl
das
and
popf
ret
jmp
mov
mov
jg
push
bound
jne
jg
out
icebp
push
pcmpeqb
shlb
inc
xlat
sbb
pop
aas
inc
add
je
call
inc
lahf
cwtl
lods
js
sahf
cli
out
fidivs
mov
fidivs
std
stc
cmpsl
mov
sub
out
dec
lret
jbe
imul
cmpl
pop
xadd
rorl
pop
inc
cmp
arpl
add
bound
cmp
scas
jmp
inc
xchg
and
lcall
negb
mov
push
pop
sub
imul
sub
bound
or
dec
push
dec
dec
add
and
or
insl
sbbl
dec
enter
xchg
sub
inc
mov
jl
xor
jle
lea
clc
out
out
popa
pop
test
xchg
mov
or
mov
mov
cli
nop
adc
out
test
mov
sub
xchg
xchg
in
fildl
dec
pop
mov
push
shrl
nop
jnp
mov
or
xchg
je
or
orl
xor
pop
mov
scas
xor
mov
cmp
cmpsl
in
lahf
and
shr
mov
jnp,pn
dec
mov
cmp
inc
out
mov
mov
loope
mov
pop
or
dec
xor
inc
hlt
dec
lret
in
xor
inc
xor
pop
adc
sbb
fisttpll
loope
cmp
push
xchg
es
out
cmp
roll
sahf
mov
pop
jl
mov
stos
jae
testl
iret
jns
cli
std
add
xor
mov
push
pop
cmc
adc
pop
push
lcall
jl
cmp
insl
movsl
fdiv
push
cmp
or
xchg
and
cmpsb
popa
cs
fsts
inc
xorb
popa
daa
ss
mov
test
movsb
push
xor
sbb
xor
push
test
les
dec
js
lret
xor
cmp
pusha
sarl
jle
lret
hlt
hlt
sbb
iret
pop
adc
pop
jge
ret
sbb
test
mov
xor
scas
sub
out
or
movsl
pushf
xor
adc
in
cli
xchg
xor
rolb
mov
dec
data16
sahf
lods
sbbb
popf
mov
jmp
add
ffreep
mov
movsb
add
icebp
mov
into
add
outsl
test
mov
je
inc
push
inc
mov
pop
int3
push
cmp
dec
lret
inc
in
clc
scas
out
push
and
mov
in
aaa
iret
or
xchg
mull
addb
push
xor
inc
xchg
fcmovnbe
int3
mov
cmp
popf
push
adc
popa
addb
xchg
ret
dec
cmpsb
jl
mov
inc
push
lock
int3
dec
cmc
xchg
daa
mov
shl
and
rorb
dec
in
and
inc
mov
std
insb
push
rcl
mov
call
sbb
fildl
stos
adc
add
gs
mov
ret
jp
mov
or
mov
push
jno
fbld
lret
dec
mov
outsb
rolb
dec
mov
cmpl
ret
xchg
jne
cmp
push
lods
js
dec
sti
xchg
pop
je
adc
xor
push
pop
push
in
mov
adc
jge
add
add
jg
dec
add
mov
pop
lcall
and
vpackuswb
nop
idiv
enter
push
jp
ljmp
insl
cltd
insb
movb
and
pop
pop
test
das
repnz
sbb
loopne
das
sar
unpckhps
push
jns
xchg
out
cmp
push
icebp
flds
lds
mov
jl
ljmp
fwait
popl
cmp
out
lea
xchg
fs
mov
push
xor
ljmp
add
dec
jns
push
outsl
loopne
popa
mov
nop
int
ds
sar
pop
sbb
inc
sub
push
rolb
cmc
dec
es
and
mov
out
test
sarl
repz
push
mov
xchg
fcmovu
and
mov
xlat
aad
adc
or
clc
fildl
loop
movsl
pop
sarl
mov
add
std
fdivs
ret
jnp
movsb
fcmovnb
fs
cmpsl
and
pop
insb
lahf
popl
lahf
out
cs
aam
arpl
lahf
xchg
setle
cmp
dec
sbb
jno
dec
mov
flds
je
dec
aam
push
add
dec
mov
test
mov
aaa
or
jl
aas
add
aas
nop
je
movsb
sbb
add
rclb
cwtl
add
hlt
inc
les
dec
and
adc
das
stos
into
in
mov
out
stc
xor
mov
pusha
mov
sbb
lds
pop
pop
inc
mov
mov
lret
int3
daa
cmp
and
cld
pop
adc
popa
push
mov
push
inc
stos
repz
add
cmp
sbbl
repnz
sub
jno
test
fmuls
lret
addr16
mov
cmp
dec
mov
xchg
mov
fcmovnb
ficoms
shrb
jg
xor
mov
test
cmpsl
mov
data16
lock
pop
shll
test
std
les
inc
sub
xchg
mov
adc
popa
shll
mov
aas
push
dec
add
push
notb
or
call
sti
push
adc
pop
adc
cld
jl
lods
jbe
cs
adc
test
jbe
xchg
fbstp
movsl
sub
ss
nop
scas
cs
in
jb
pop
inc
add
lods
ret
ds
movsl
mov
popf
pop
loopne
test
into
andl
mov
xchg
dec
out
mov
push
and
push
subb
sbb
xchg
insl
insb
stos
inc
repz
jge
frstor
out
mov
cmp
test
pushf
push
cmp
xor
stos
pop
mov
xchg
loope
jne
sbb
das
out
orl
add
pusha
xchg
test
aam
push
stos
shl
or
sbb
dec
mov
daa
mov
leave
fldl
dec
mov
dec
and
cmc
das
int
iret
xchg
pop
jo
ret
test
pop
int3
mov
xchg
aad
arpl
test
mov
mov
pop
aad
add
aas
dec
loope
sbb
jbe
pop
lods
test
xor
mov
pop
pop
shrb
add
sti
jae
je
mov
jge
cltd
mov
lds
mov
mov
pop
cmc
xchg
divb
in
mov
lahf
jbe
jns
mov
scas
stc
xor
mov
jnp
clc
push
in
jge
push
lods
or
int3
cmp
push
arpl
add
dec
xchg
call
cmp
sbb
stos
sub
leave
push
sbb
xchg
repz
sbb
mov
adcl
push
or
nop
xchg
cmp
sbb
bound
pop
fmuls
pop
add
clc
shlb
push
lods
mov
or
dec
inc
mov
xchg
scas
jno
out
push
mov
in
mov
inc
test
hlt
push
loop
jbe
dec
aaa
es
outsb
adc
prefetch
cmp
dec
mov
leave
or
and
xchg
js
mov
lahf
in
outsl
shll
pop
push
cmp
cmp
and
push
mov
mov
mov
sub
mov
cmp
sti
fnstcw
and
dec
testb
xlat
inc
jl
xchg
adc
dec
cmp
mov
mov
ret
and
lods
test
sahf
enter
mov
jns
adcb
and
or
push
and
or
sbb
mov
mov
and
inc
jp
out
mov
in
xchg
push
xchg
test
out
adc
scas
dec
jns
inc
mov
mov
leave
sub
shl
imul
cmpb
movsb
dec
lods
sbb
lcall
ja
orw
decl
ret
pushl
daa
cmpsb
pop
out
push
inc
and
imul
ja
cmpl
mov
arpl
cmpsl
movsl
mov
cmpsb
les
mov
sbb
dec
das
sub
aam
sub
inc
jno
in
fisubrs
scas
xchg
mov
jg
fwait
inc
into
xchg
inc
in
jl
xorb
outsb
fwait
test
mov
push
xchg
test
test
mov
in
xchg
pusha
je
or
movsb
jno
dec
mov
in
dec
ret
stos
xor
cmp
xchg
xor
cmovne
xchg
ret
fsts
and
cmp
dec
iret
mov
pop
in
hlt
cmpsl
into
xchg
loopne
cli
sbb
lea
inc
jnp
cmp
mov
pop
clc
dec
sub
adc
xor
or
sbb
xchg
mov
mov
int
call
xchg
neg
aam
inc
add
xchg
aas
push
add
jg
js
and
jmp
cmpb
jns
ss
lcall
std
nop
lds
in
mov
xor
adc
aam
fstp
xlat
jne
pop
pop
in
pusha
push
jnp
scas
cltd
fs
sbb
loop
enter
sub
xlat
push
xor
mov
nop
adc
or
xor
mov
rcll
test
cltd
inc
mov
sub
lods
or
jmp
jg
gs
fcomip
mov
fisubrl
mov
sub
sub
mov
outsb
hlt
out
std
xchg
dec
es
nop
into
hlt
lods
jecxz
rclb
cmpsl
nop
xor
jae
push
and
dec
stc
push
out
xor
imul
daa
lock
mov
xchg
xchg
pop
jne
and
xchg
xchg
sbb
pop
imul
or
cmpsl
aaa
sub
xor
out
jmp
pop
and
vxorps
and
push
mov
lret
imul
mov
loop
call
sub
pop
fidivrl
pop
xor
inc
sbb
mov
out
mov
fdivrs
or
jae
adc
inc
hlt
test
mov
jne
adc
mov
fbld
sbb
pop
ret
int3
sbb
add
sub
xorb
cmp
lcall
iret
pusha
push
bound
push
push
aas
ss
adc
mov
mov
and
test
cwtl
cli
mov
pusha
or
inc
inc
in
gs
outsl
ds
shlb
xchg
daa
ja
mov
xchg
test
add
jge
ret
ljmp
popf
sbb
mov
push
sbb
je
jno
add
sbb
daa
cmpsl
mov
sub
outsl
inc
inc
insl
or
push
ret
lods
enter
mov
adc
orl
clc
shll
jp
fisubrl
xor
xor
jne
pop
sub
sahf
mov
sub
ret
int3
icebp
sub
jg
or
sahf
stc
in
sbb
fidivrl
movsl
fdivs
jno
pop
out
dec
inc
add
cmp
pop
lahf
xchg
pop
xchg
cmovge
subl
mov
add
mov
pop
insl
xchg
and
xchg
mov
std
dec
ficoml
aam
xchg
bound
icebp
imul
aam
xor
push
and
or
sub
shll
or
nop
or
mov
scas
dec
fdivl
frstor
fiaddl
rcll
mov
mov
and
inc
xchg
push
xor
mov
outsb
jmp
mov
mov
ljmp
push
xchg
jnp
adc
ljmp
cmp
popa
bound
je
mov
and
sub
mov
sub
inc
mov
flds
insb
cli
imul
mov
cmp
pushw
mov
xchg
jmp
daa
out
data16
push
adc
xchg
scas
dec
push
inc
or
mov
popf
ficomps
xchg
or
mov
sbb
lret
lret
pusha
push
sbb
shr
jecxz
imulb
add
lret
ret
adc
push
aam
inc
outsb
or
in
add
test
pop
iret
sbb
xor
repnz
pop
xor
lods
mov
xor
pushf
std
mov
fcomps
dec
sub
adcl
cmp
adc
in
pop
addr16
xchg
lds
pop
mov
out
lahf
push
mov
adc
loopne
sub
lahf
jbe
icebp
mov
in
daa
xor
js
lock
xchg
or
lret
in
mov
lods
mov
dec
lret
stos
fwait
inc
jne
sbb
xor
jge
das
int3
jl
cmpsb
dec
jnp
xchg
subb
in
fmul
xchg
out
inc
pop
mov
cld
push
push
mov
sub
lahf
jl
stos
mov
mov
lea
aad
inc
lock
xor
inc
mov
cmp
aas
mov
popf
xchg
push
inc
addl
add
pop
jb
xor
fucomp
jp
adc
push
sub
and
aad
fdivrp
shl
jp
xor
add
imul
mov
cmp
push
mov
sub
mov
bound
out
push
adc
packsswb
cmpsl
xlat
and
rol
bound
push
movsb
ret
sbb
repnz
xor
es
mov
mov
sub
shlb
sahf
add
add
movsl
jbe
inc
pushw
mov
xor
test
adc
imul
rolb
push
jne
nop
and
jnp
mov
ljmp
jne
adc
lcall
pop
adcb
add
mov
cwtl
cmp
pop
push
daa
xor
dec
movsl
fnstsw
pop
inc
mov
call
xchg
xor
mov
mov
sbb
and
xor
xchg
cwtl
clc
add
xor
mov
jp
outsl
ja
std
mov
out
push
xor
aas
or
dec
std
mov
div
ds
sarb
ds
xchg
sbb
mov
pop
xor
jl
sti
ss
push
inc
cmp
sub
dec
push
bound
fldenv
int3
iret
adc
push
jns
iret
cmp
call
out
mov
mov
mov
sbb
jl
movsb
fiadds
sub
or
mov
stos
inc
sbb
popf
lds
cmp
mov
lea
xor
lcall
inc
pop
mov
imul
fsubl
int
xor
sarb
ret
pop
xchg
mov
orl
fists
dec
leave
ss
xchg
int
xor
and
mov
mov
add
leave
pop
and
jbe
mov
cmp
or
repnz
fs
fstpt
sarl
inc
ret
fdiv
shr
sub
iret
mov
jp
and
lret
xchg
fsub
mov
jbe
inc
sbb
add
jg
inc
dec
out
iret
mov
mov
pop
xchg
and
cmpsl
sahf
lds
and
rcrl
or
pop
jns
inc
popa
xchg
or
mov
jns
test
in
add
jnp
or
lret
cmp
mov
sbb
jle
push
xchg
iret
icebp
rcrb
imul
out
mov
pop
and
jb
dec
fstl
jg
sbb
popf
xlat
push
testb
push
or
jo
mov
cld
dec
mov
fidivl
hlt
scas
outsl
cmp
pop
mov
cmp
add
and
inc
sahf
fld
inc
xchg
sbb
movsl
pop
fimull
repz
jbe
mov
loope
rclb
popa
mov
push
inc
inc
mov
sbb
xchg
cmc
or
adc
jbe
mov
sub
or
mov
addr16
push
fsubrp
bound
in
sub
ret
mov
andl
push
cmp
stos
push
cmp
mov
cmpsb
dec
or
or
sub
cmp
pop
daa
mov
pop
mov
and
push
fistps
jb
sbb
xor
jbe
dec
sahf
mov
das
pop
jns
sahf
clc
mov
or
push
push
call
orb
adc
test
adc
ret
adc
scas
sbb
jmp
inc
and
or
and
xorl
mov
push
jl
insl
jne
popa
jl
lcall
mov
lcall
pushf
or
xchg
mov
cmpsl
sahf
imul
shrl
mov
scas
out
pop
jo
outsb
out
lock
test
sbb
aad
push
out
push
arpl
cmp
jnp
lds
mov
clc
sub
hlt
inc
rolb
mov
or
xchg
pop
and
push
js
stos
cmp
sub
shl
scas
mov
push
pop
mov
mov
and
fld
dec
lret
sbb
into
rorb
mov
inc
add
mov
cmpb
mov
insb
lret
jnp
adc
xchg
ljmp
sub
mov
dec
outsl
jb
jg
add
movsb
dec
xor
push
ret
ja
add
or
pop
fwait
mov
data16
popa
dec
enter
push
or
ljmp
mov
push
in
mov
lret
adc
mov
xor
cmp
fwait
adc
dec
xlat
or
ror
mov
xor
mov
pop
xchg
stos
mov
add
xchg
dec
popa
lock
sub
pop
jae
sti
aam
outsl
or
jno
or
jg
dec
loope
call
sub
inc
mov
test
in
inc
call
sahf
jle
shll
mov
lds
jbe
pop
das
jp
lahf
pop
in
mov
push
test
test
rolb
loop
jnp
loopne
cmpsb
add
adc
bound
js
pop
add
add
cmp
out
or
js
pusha
lcall
mov
clc
mov
decb
or
push
pusha
or
out
leavew
jecxz
mov
inc
jo
add
dec
or
jbe
loop
add
mov
loope
call
neg
jns
xor
addr16
push
icebp
lds
push
insl
and
flds
fbstp
fsubl
leave
cmp
push
outsb
ja
imul
rorb
ret
sahf
inc
gs
push
xchg
sub
movsb
arpl
xorl
sbb
sarl
inc
pop
imul
inc
cbtw
pop
push
stos
ja
rcr
ds
jl
and
pop
inc
push
and
pop
sub
out
mov
test
jns
xchg
scas
cmp
sahf
rorl
dec
xor
dec
adc
mov
xlat
jnp
rcrb
lock
xchg
mov
adc
fstps
pop
mov
inc
mov
or
cmp
sbb
xchg
add
adc
jno
lret
cmp
mov
rcrl
xlat
mov
movsl
sbb
scas
iret
out
jecxz
lods
cwtl
pushf
lods
push
xchg
lods
push
addb
fmull
orb
push
sub
cmpsl
arpl
enter
mov
call
push
push
test
mov
mov
das
int3
repnz
vdivpd
scas
add
mov
push
push
popa
inc
push
jg
in
cmp
dec
ds
mov
sbb
movsl
fstpt
hlt
in
mov
push
std
dec
aaa
mov
xchg
gs
fwait
add
push
scas
cli
cmp
jb
and
xchg
shlb
cmp
lds
insb
lds
and
cmp
xchg
or
popa
jp
scas
xor
orb
addl
or
ret
dec
or
push
out
inc
push
lret
andl
sbb
pop
fidivrl
add
or
xor
add
icebp
lret
push
push
jne
popa
test
mov
jg
outsb
loopne
stos
mov
scas
jb
push
data16
add
mov
jbe
popa
call
test
push
lods
mov
inc
cmp
xor
pop
sub
into
push
inc
mov
out
nop
lds
dec
call
rep
pop
dec
test
fbld
cmp
jns
jne
ror
lock
add
cmp
pop
mov
dec
mov
repz
inc
add
mov
popf
imulb
in
fdivl
mov
loop
cmpl
jl
ljmp
dec
je
xor
push
or
stos
mov
in
push
test
xchg
bound
js
sahf
or
push
jg
and
mov
int3
call
movsl
outsl
jb
hlt
adc
mov
xor
subb
aad
inc
insb
mov
aaa
out
mov
out
and
cmp
dec
leave
imulb
dec
movsl
add
xchg
fcoms
pop
cmpsl
adc
rolb
imul
and
and
js
fcomps
dec
and
xchg
lcall
push
mov
xor
les
add
cmpl
mov
mov
iret
addb
push
cmp
mov
sub
leave
mov
imul
lea
jbe
je
add
loopne
imul
push
cwtl
mov
inc
lea
xchg
dec
in
gs
fnstsw
ffree
out
mov
orb
push
shrl
jmp
jae
aaa
add
jo
insl
pop
xchg
mov
loop
xchg
pop
out
xchg
pcmpeqb
jbe
sbb
fs
sti
xchg
push
jbe
add
xor
sub
mov
push
sti
andl
and
lar
jp
sub
pop
aaa
int
xor
sbb
add
push
stos
ljmp
mov
mov
sub
dec
scas
pop
sbb
fwait
out
rorb
sahf
in
test
pop
cwtl
ret
mov
std
or
loopne
popl
adc
cli
insb
fisttpl
aam
jmp
xchg
push
jmp
push
adc
add
or
push
push
stos
lret
cmc
call
out
xor
adc
sbb
mov
push
jl
movsb
or
jns
sbb
in
mov
popa
adc
bound
push
pop
jle
andl
cld
pop
sbb
mov
mov
daa
dec
mov
inc
stos
xor
xchg
movsb
in
das
outsb
jne
std
lods
sahf
shll
sbb
pop
pop
cwtl
sub
sbb
pop
and
mov
loopne
call
pop
std
fwait
sbb
sar
sbb
dec
push
lahf
lds
mov
mov
out
mov
scas
cmpsl
mov
stc
insl
push
out
push
pop
and
stos
mov
xor
jl
or
outsl
rcr
push
mov
fs
insl
and
jno
lods
pop
pop
pushf
sub
insb
out
shrb
pop
adc
shll
mov
inc
push
sub
test
dec
xchg
sub
pop
xchg
push
push
sbb
shlb
mov
lock
inc
ficoml
and
cld
xor
outsb
dec
jae
divb
arpl
sub
orb
enter
pushf
mov
loope
inc
push
ret
mov
mov
aam
popf
push
aaa
push
mov
xor
ret
pusha
pop
bound
sub
std
lret
decb
push
xchg
sahf
inc
xor
and
cltd
stos
add
xor
mov
jg
xor
jg
lods
repz
cli
int3
ja
xchg
xorb
xor
fcomps
pop
cmpsb
mov
xchg
inc
or
outsb
cwtl
leave
mov
lds
outsb
cli
push
mov
das
cwtl
pop
mov
sbb
jne
arpl
shll
add
or
movsb
push
sahf
lcall
mov
xlat
sub
inc
js
fisubrl
push
mov
hlt
pop
xchg
aam
mov
xchg
mov
pop
dec
xor
rcll
in
repnz
fadd
cmp
int
and
lods
push
mov
rolb
sub
adc
adc
icebp
popa
icebp
fdivs
pop
sti
cltd
fnstenv
shll
cmp
addl
ljmp
jo
xchg
mov
or
movsl
xchg
in
movsb
sub
imul
mov
push
stc
mov
mov
cld
scas
sbb
push
mov
ja
rol
cmpsl
jmp
rcrb
sbb
pop
add
push
inc
ret
sub
pop
add
dec
dec
popa
daa
fistpl
test
mov
scas
add
sub
cwtl
call
neg
cmpsl
pushf
pop
pop
dec
mov
add
mov
pop
and
mov
add
lar
divl
xor
in
test
shrb
push
in
adcl
ret
and
fnsave
mov
cmp
push
inc
mov
jne
mov
mov
xor
and
push
add
stc
xor
sbb
sbb
arpl
filds
sahf
stos
jle
push
cmc
push
add
shrl
lds
sbb
jae
popf
and
orl
sbb
addr16
xor
cmp
mov
mov
mov
inc
test
mov
mov
xlat
rolb
ret
sbb
inc
xchg
push
xchg
xor
mov
leave
pop
int3
sub
xor
and
sbb
mov
sub
cmp
adc
mov
mov
popf
inc
pop
emms
cld
xchg
adc
jge
push
ljmp
mov
jae
aam
setns
xchg
pop
inc
push
js
les
mov
jmp
cs
cmp
insb
pushw
lret
mov
insl
cmc
pop
addb
imul
insl
pop
imul
pusha
rcl
push
repnz
xchg
pop
mov
cmp
out
or
inc
lock
dec
sarb
adc
xor
jp
jnp
leave
sub
xchg
sbb
mov
fnstsw
arpl
shll
jge
subl
lods
lods
jp
stc
stc
fsubs
push
jmp
je
jg
loop
out
mov
fdivrl
loope
sub
into
fsub
jno
nop
out
dec
pop
sbb
int
and
mov
fadd
stos
je
ds
pop
lock
jne
outsl
fwait
subb
inc
jmp
push
fimuls
xchg
daa
cmpsl
jbe
push
mov
adc
mov
popa
inc
daa
add
push
or
ret
cmp
cli
mov
in
and
sbb
mov
incb
pop
int3
shll
jge
sarb
aas
cli
jmp
xor
sbb
lds
jl
mov
pop
push
in
into
addl
lods
pop
pop
mov
addr16
cmp
jbe
lret
sub
jge
test
jecxz
popf
icebp
cmp
jne
cmpsl
outsl
xor
adc
and
mov
jmp
xchg
push
mov
aas
add
test
iret
push
ror
pop
sbb
sbb
enter
and
js
shlb
jae
cmp
aaa
dec
fimull
rolb
ret
test
or
lret
adc
push
mov
in
xchg
gs
pop
adc
ret
add
xchg
sbb
mov
mov
aas
mov
pop
lcall
jns
dec
subb
and
xor
dec
cmpsb
jnp
xor
dec
xchg
lods
and
int
sbb
int3
inc
mov
and
mov
or
inc
cmp
mov
mov
lcall
repz
pop
sbb
mulb
inc
daa
sbb
mov
sub
movsb
sbb
xchg
cmp
xorb
push
pop
pop
test
dec
pop
mov
xchg
das
in
sti
loop
and
movsb
add
aas
xchg
fnsave
mull
pop
and
das
fimull
ret
mov
mov
aad
cmp
pop
adc
into
faddl
movntq
pushf
in
xchg
out
es
sub
push
cmp
fildl
fld
xchg
push
sbb
aas
repnz
out
movsl
dec
mov
sbb
pop
pop
sub
jae
push
dec
sarb
or
jb
test
repnz
dec
jnp
adc
ja
cmp
and
jle
xchg
insl
fmul
jl
shll
adc
shll
cmp
xor
cmovp
clc
mov
stos
std
or
jg
push
mov
js
mov
jo
leave
push
iret
fs
sbb
adc
cmc
and
icebp
inc
jge
out
mov
fcoms
cmp
mov
cmpb
ja
push
bound
out
add
decb
xchg
push
cwtl
jnp
pop
push
mov
cmc
xchg
sarl
mov
mov
std
jp
jno
mov
in
pop
ret
mov
pop
mov
jle
outsl
sub
imul
dec
jns
cwtl
std
mov
mov
push
mov
mov
ja
jnp
mov
jmp
lds
pop
scas
test
cmpsb
and
stc
cmp
and
lods
mov
fcmove
mov
out
inc
mov
dec
push
and
mov
pushf
mov
jmp
jb
sti
fildll
push
adc
movsl
cmc
mov
mov
aaa
push
xchg
pushf
cmp
test
sub
lock
jnp
loope
nop
mov
push
enter
jcxz
data16
test
and
jmp
push
imul
data16
imul
in
in
loopne
cli
mov
inc
not
add
push
cmp
adc
jg
adc
and
sub
cmp
popa
and
pop
mov
dec
in
pop
fwait
leave
or
jo
push
jmp
cli
xchg
and
lods
jmp
lds
sbb
xlat
pop
add
jecxz
dec
adc
adc
or
bound
test
add
stos
push
xchg
sub
or
adc
fcompl
ljmp
bound
sbb
and
or
sub
pop
xor
ret
mov
divl
sar
pop
movsb
or
pop
mov
stos
xchg
cs
jo
xchg
inc
dec
test
xchg
push
clc
mov
xchg
mov
enter
push
stos
std
and
add
fcoml
lods
daa
cld
push
ret
xchg
jge
fs
mov
sbb
cld
out
mov
call
mov
and
in
adc
addr16
adc
adc
jecxz
inc
iret
ret
inc
icebp
lock
or
adc
xor
xchg
inc
mov
testb
adcb
push
cld
in
cmpsl
in
push
icebp
leave
push
push
dec
inc
jge
jno
dec
mov
lcall
cli
and
sbbl
inc
aad
or
mov
cmp
mov
jae
sti
addr16
pop
xor
je
shll
xor
fists
xchg
add
dec
pusha
sbb
rcl
inc
adc
insb
fsubr
dec
les
jae
mov
sub
or
sbb
stc
xchg
dec
and
sbb
push
xor
cltd
add
mov
mov
ret
ljmp
pop
adc
xchg
inc
lret
outsb
and
pushf
dec
leave
jb
jl
ja
sub
fstpt
loop
adc
xor
dec
jne
lock
stos
or
cmp
popf
xchg
push
jne
in
out
loop
mov
jl
and
and
jge
push
push
mov
mov
sub
mov
out
fcomi
lcall
loopne
dec
jns
int
loop
xor
shr
stos
out
adc
cmpsl
lds
fistl
test
jo
movsb
push
mov
aad
xchg
sbb
insb
in
test
in
mov
xlat
rolb
push
mov
aam
or
push
dec
mov
mov
lret
dec
inc
push
sub
lcall
fcmovne
sub
mov
xchg
mov
cmp
inc
adc
mov
push
inc
and
or
ret
in
lcall
iret
mov
ficoms
mov
cmpb
test
xlat
sbb
pop
pushf
sbb
sbb
mov
jg
call
jmp
push
clc
aam
and
or
lds
and
inc
push
mov
inc
mov
pop
dec
mov
out
mov
rcr
lods
xchg
cmp
iret
xchg
pusha
repz
gs
push
movsl
push
mov
adc
lahf
fmul
jbe
inc
mov
xor
mov
dec
dec
ret
mov
pop
mov
mov
mov
mov
and
aas
subb
jne
cmp
dec
or
pop
negw
adc
mov
into
notb
es
pop
mov
es
sub
pop
mov
int
fildll
rcrb
fstp
cmpsb
push
negl
jno
add
imul
int3
imul
data16
fbld
daa
inc
mov
add
les
repnz
mov
push
add
pop
or
jmp
rorb
shl
mov
daa
adc
xchg
lods
stos
push
scas
mov
jno
pop
mov
inc
pusha
fs
mov
add
dec
subb
cmpsl
xchg
mov
testl
gs
icebp
and
int3
ret
lahf
mov
xchg
fsts
pop
loope
jecxz
jbe
mov
ss
push
mov
pop
xor
int3
imul
or
enter
mov
sub
cmc
and
mov
jmp
or
test
sbbl
xchg
decb
jecxz
ficompl
mov
or
mov
and
inc
adc
mov
out
icebp
dec
adc
sbb
filds
loop
and
pop
push
repz
out
mov
pop
icebp
insb
sub
in
stos
add
or
pop
mov
xchg
mov
data16
sbb
test
addr16
cmp
ja
in
or
pop
xchg
aad
mov
cwtl
test
mov
push
jnp
push
in
add
fistpll
dec
ret
mov
dec
inc
out
xchg
daa
push
lods
into
cmpsb
push
and
push
mov
push
mov
aaa
addr16
in
push
ret
push
and
mov
cmpsl
inc
outsl
mov
stos
imul
mov
aad
addl
xchg
data16
stos
and
pop
mov
fs
xor
inc
xchg
fistps
jnp
mov
xor
pushf
fsts
sar
sub
pop
cmpsb
sub
ret
int
cmp
push
mov
ret
addb
aad
xlat
fstpl
loope
enter
sti
popa
leave
les
fsts
inc
shll
add
popl
es
dec
ret
das
pop
pop
jne
shlb
imul
loopne
mov
loopne
out
f2xm1
dec
stos
xor
es
mov
movsb
jl
stos
aam
out
cmpsl
test
xor
mov
aaa
aam
add
add
push
inc
jg
pushf
and
mov
scas
mov
outsl
es
jno
in
push
dec
gs
and
pop
pop
or
in
fisubs
notl
leave
mov
dec
xchg
loop
inc
sub
stos
lock
and
mov
test
jmp
insl
idiv
xchg
xor
inc
rorl
addr16
sub
push
cmp
sbb
mov
and
cmpsl
mov
dec
push
fisubrl
cmp
out
js
out
loop
dec
mov
ljmp
imul
hlt
out
adc
iret
mov
push
lods
jl
mov
adc
out
aad
lret
mov
cmp
call
inc
scas
je
out
mov
pusha
dec
cwtl
movsb
shl
cli
mov
pop
outsb
maxps
dec
movsl
jmp
repz
cli
adc
test
movsl
fnstcw
jle
into
inc
or
mov
mov
push
stos
and
inc
repz
jl
hlt
std
jns
fdivrs
add
cmp
xchg
shrb
mov
inc
add
inc
dec
jle
fnstcw
dec
inc
dec
inc
loop
shll
into
pop
lock
inc
test
xchg
inc
mov
mov
mov
xor
jecxz
mov
aas
push
icebp
lret
shr
add
popa
dec
nop
xor
and
jns
sub
cmp
mov
rcrl
movsb
xchg
ficoms
jl
out
out
dec
mov
push
mov
out
imul
push
cmp
cli
push
xor
xchg
mov
xchg
mov
push
clc
jnp
enter
sbb
out
sub
inc
int3
je
and
daa
mov
push
lods
mov
imul
int3
mov
in
dec
push
in
mov
xchg
jge
incl
in
ds
or
ljmp
daa
mov
lods
pop
jae
ja
pop
push
inc
fsubr
xchg
inc
sahf
or
mov
inc
insl
in
movsb
in
rcrl
push
test
dec
ss
into
pop
sahf
push
js
sub
popl
push
dec
data16
cmp
scas
dec
stos
inc
aad
jae
and
xchg
aas
mov
loopne
mov
jne
or
out
arpl
fwait
mov
inc
shr
jl
sub
push
mov
adc
cmpsb
test
add
lret
mov
add
movsl
mov
add
push
std
mov
lods
jge
jnp
in
dec
mov
sbb
sbb
xchg
jns
inc
fs
adc
inc
push
inc
adc
inc
adc
lret
insb
push
shll
push
adc
std
test
inc
sbb
cltd
and
cmp
xchg
enter
push
push
dec
jns
cmpsb
lock
and
or
clc
pop
cmpsl
mov
push
push
xor
leave
lds
jno
scas
xchg
dec
ljmp
nop
out
inc
sti
mov
xchg
xor
xchg
repnz
adc
push
std
mov
inc
mov
push
mov
push
ret
in
ss
out
add
cmpsw
or
jp
hlt
imul
repnz
mov
cvtdq2ps
sub
jecxz
add
and
stos
dec
jp
repnz
int3
xor
repz
jo
pop
lock
pop
push
or
push
jecxz
sub
and
mov
dec
ret
xchg
jno
jmp
jns
inc
sar
mov
and
dec
mov
push
push
imul
jb
push
ret
mov
mov
pop
sub
and
cmp
xchg
cs
fsubr
pop
mov
pop
add
add
out
inc
push
sti
mov
adc
nop
nop
test
fisubs
xchg
in
add
mov
std
xchg
testb
mov
test
outsl
cwtl
jp
jl
push
insb
adcl
push
pop
repz
inc
dec
sarb
stos
push
test
scas
adc
cltd
lret
push
mov
mulb
int3
bound
out
popa
gs
push
jns
jp
mov
dec
inc
lea
test
ret
loopne
gs
subb
xchg
out
dec
mov
lock
ja
mov
ret
ds
and
mov
ja
subl
mov
jb
daa
mov
aas
jnp
push
mov
pop
leave
pop
jp
stos
fidivs
pop
scas
mov
js
xchg
and
push
aaa
stos
add
aas
mov
stc
adc
stc
loope
and
sbb
dec
fldl
imul
enter
lods
repz
lahf
gs
cld
inc
dec
mov
cmp
jl
cmp
je
imul
sub
pop
dec
mov
sub
pop
jbe
pop
scas
or
in
mov
fiaddl
sarl
mov
pop
sahf
or
insb
jns
sahf
inc
mov
hlt
push
cmpsb
dec
std
push
shlb
out
dec
adc
pusha
sbb
icebp
push
xchg
movsb
mov
das
cltd
ss
andb
enter
out
jge
jnp
lds
test
mov
pop
push
adc
jecxz
shrb
jns
pushf
or
pop
out
repz
insl
add
aaa
ja
es
and
pop
shrl
or
aaa
push
jle
pop
ret
fwait
push
mov
dec
testl
rcrb
add
add
dec
and
gs
jbe
dec
ss
sbb
ficoml
ljmp
dec
daa
dec
fldcw
mov
xor
mov
stc
pop
adc
push
repnz
cs
or
xchg
mov
xor
into
cmp
adc
xchg
out
mov
enter
xchg
xor
mov
sub
xor
sti
call
or
sub
test
es
jp
and
mov
aaa
mov
push
shr
jnp
xchg
mov
int3
scas
inc
ljmp
bound
nop
pop
mov
lods
xchg
outsb
sbb
in
je
ljmp
adc
cwtl
mov
xchg
push
shlb
fbstp
mov
pop
dec
push
sub
push
addb
loop
push
insb
enter
clc
push
mov
xchg
aas
pop
or
imul
inc
xor
loop
popf
or
loope
je
in
pop
push
mov
lcall
or
cmp
and
jb
push
xchg
dec
xor
pop
jl
cltd
lea
fistl
in
and
push
int
adc
test
in
loop
rclb
add
mov
loopne
adc
sub
test
cwtl
jb
cmpsl
dec
inc
mov
mov
out
arpl
and
pop
pop
out
pop
and
popa
jo
pop
pop
inc
pop
cld
xor
add
in
dec
dec
rcrb
hlt
shrl
dec
dec
lret
js,pn
and
shll
call
inc
shr
imul
cmp
push
pop
pushf
xchg
cmp
fistl
sub
xchg
ja
shrb
dec
inc
fistpll
lea
jno
cli
mov
push
cmp
xchg
loope
int3
es
cmp
lea
xlat
mov
sbb
test
ljmp
adc
jg
jg
sub
sub
or
leave
inc
pop
ja
enter
aaa
stos
sub
sub
mov
jecxz
dec
and
pop
inc
mov
cmp
and
push
jno
add
hlt
cmpsl
lret
mov
fidivs
bound
cmp
ljmp
andb
lret
incl
insl
push
xor
xor
and
fbld
in
inc
cmpsl
aam
push
out
lods
mov
sub
cli
imul
imul
ja
push
rorb
mov
pop
jp
and
or
xchg
dec
sbb
je
jo
cs
divl
pushf
sbb
sub
or
scas
imul
shrl
adc
ja
lods
ror
jbe
rolb
icebp
or
jno
and
cmc
pop
mov
lds
push
scas
cmp
mov
frstor
pop
loop
and
inc
out
push
adc
ss
cmc
mov
cmpsb
repnz
scas
sub
push
in
cmp
or
push
subl
nop
jo
cli
mov
jbe
lods
negl
cwtl
jns
sahf
push
stos
daa
xchg
std
push
ljmp
mov
stc
and
in
jp
loop
mov
inc
or
fcoms
leave
sub
jns
bound
imul
mov
scas
adcl
movsb
insb
push
mov
aaa
or
cld
inc
sub
test
insl
cmp
fstl
push
dec
jle
push
test
js
push
push
insl
push
pushf
push
test
dec
lock
and
mov
mov
pop
outsb
sub
inc
jge
aam
and
les
cwtl
cld
fnstsw
fidivrs
adc
fnstenv
inc
cwtl
sbb
flds
je
xlat
push
pushf
jp
jge
mov
hlt
daa
stos
aam
movsl
ljmp
pop
sub
inc
fs
aaa
xchg
bound
xor
mov
aad
cmpsl
jp
mov
xor
add
pop
cmp
in
rorl
fidivs
push
into
sbb
lret
test
fdivrs
jg
xor
mov
dec
cmp
pop
jns
cmpsl
push
lret
and
sub
cmp
adc
repnz
adc
mov
stos
insl
hlt
xor
mov
inc
cmp
jne
insl
inc
and
sbb
mov
das
cwtl
dec
out
push
inc
shrl
push
mov
jnp
push
pop
ljmp
cmp
mov
jl
mov
iret
cmp
loopne
jno
dec
pop
pop
sub
push
xchg
es
movsb
or
mov
mov
lea
xlat
lea
lods
lods
xchg
popf
out
sub
or
cli
add
push
lds
into
test
dec
push
movsb
and
into
pop
sbb
inc
call
test
stc
add
mov
and
cs
mov
movsl
sbb
lret
mov
lcall
xchg
lcall
xchg
lods
jecxz
pop
mov
and
out
inc
in
sbb
loope
xchg
scas
iret
cmp
jl
mov
xchg
inc
fdiv
sub
pop
inc
repnz
jno
pop
fisttpl
lcall
or
lret
fistps
inc
inc
daa
jmp
imul
popa
in
repnz
ret
pop
roll
jg
call
fidivs
xchg
cs
mov
cmpsl
scas
orl
loop
loope
nop
out
std
sti
sub
pop
dec
scas
push
shlb
jne
mov
push
sub
stos
repz
sbb
outsb
xor
dec
je
push
bound
jnp
xor
jl
out
pop
test
add
lea
or
xchg
pop
adc
rclb
push
jmp
xor
mov
pusha
xor
imul
pop
ss
xchg
test
or
jg
inc
or
dec
mov
les
fisttps
push
dec
push
xchg
push
jb
bound
fsubr
scas
mov
cmp
mov
add
mov
dec
iret
add
push
xchg
mov
jnp
loop
stc
shrb
cmp
add
xor
fdivrl
scas
sbb
in
ja
bound
out
lea
mov
aad
mov
popf
lods
cmp
mov
mov
out
das
jecxz
movsb
lods
mov
or
adcb
and
dec
lret
dec
div
int3
adc
mov
sbb
mov
cld
add
loop
clc
pushf
dec
bswap
mov
arpl
repz
mov
cmpsl
sbb
mov
cmp
push
and
mov
adc
sbb
mov
loopne
dec
mov
push
add
cmpsl
push
or
pop
pop
xorb
mov
push
sub
or
scas
pop
aas
and
xor
mov
inc
xor
ret
push
fwait
test
test
mov
add
pusha
xor
mov
mov
sub
pusha
xchg
int3
mov
mov
mov
lods
push
dec
push
int
fcoml
pop
sub
jge
mov
out
push
jg
inc
dec
out
andl
xor
xchg
call
imul
int
jnp
mulb
xchg
out
sub
scas
sub
mov
scas
add
pop
aam
cmp
cmp
xchg
and
rol
lds
pop
js
xchg
dec
shll
out
cs
mov
int
sbb
cmp
addl
aad
adc
or
xorb
mov
mov
cmp
cltd
add
mov
mov
stc
dec
lock
stos
inc
mov
dec
cli
dec
shrb
inc
and
lods
adc
mov
and
out
push
xlat
fbstp
aad
cmpb
mov
adc
notb
cwtl
int3
add
int3
sahf
push
int3
aas
arpl
sahf
dec
ret
xor
adc
cmp
mov
and
and
je
mov
pop
mov
cmpsb
sarb
push
and
outsb
pop
fs
rcrb
xchg
jae
loop
jecxz
mov
inc
int
mov
int3
mov
jb
inc
jge
adc
add
sbb
xchg
adc
cmp
into
dec
ja
pop
aaa
mov
cmpsl
add
lcall
xchg
mov
add
leave
adc
inc
cmp
dec
repnz
add
adc
mov
or
mov
push
subb
mov
stos
push
jne
mov
js
mov
add
push
dec
mov
mov
cmp
setno
cld
loopne
xchg
popa
daa
ret
cmpb
pop
ret
fdivs
lret
xor
popa
and
jecxz
jecxz
imul
dec
or
push
test
in
mov
fsts
dec
push
imul
insb
ss
sbbb
xchg
enter
xor
jl
push
sbb
xchg
pop
cld
es
mov
jnp
repz
sub
and
jbe
ja
sub
xor
inc
inc
jl
dec
dec
fmuls
mov
stc
mov
pop
test
stc
repnz
sub
sub
ret
mov
je
ljmp
xor
js
inc
xor
mov
xor
mov
shll
pusha
loope
sbb
stos
fdiv
fs
lret
fsubrl
rorb
push
mov
pop
sub
push
push
stos
popf
dec
fs
shlb
xchg
adc
jbe
out
mov
mov
mov
or
push
push
hlt
clc
shlb
jg
out
lret
adc
iret
sub
mov
mov
fmuls
fiadds
pop
pop
loop
inc
dec
xor
xchg
fst
ficoms
dec
test
mov
and
test
orl
int3
lock
xor
xchg
cmp
push
or
jns
cmp
xchg
inc
cmpsb
sahf
lods
cmp
mov
push
pop
or
into
loop
jns
movsl
aas
mov
mov
sbb
sbb
mov
adc
mov
and
dec
mov
stos
mov
movsl
xchg
fimull
adc
cltd
popa
adcl
dec
push
mov
cmp
mov
cmc
scas
mov
push
mov
fldt
ja
lods
inc
lret
in
enter
xor
sub
fistl
xor
idivb
roll
mov
mov
mov
push
inc
and
pusha
repnz
pop
insb
inc
stos
movsb
pop
inc
mov
xchg
lods
mov
mull
push
inc
in
and
lods
and
push
pop
enter
shl
add
mov
rorl
cmc
movsl
pop
jbe
sti
push
cmpsb
clc
cmp
mov
loop
adc
add
sahf
jne
mov
and
shlb
test
imul
outsb
test
in
ret
adc
mov
incl
and
push
enter
outsl
movsl
shr
dec
mov
mov
or
test
mov
pop
mov
ret
sub
ja
cwtl
mov
lret
mov
cmp
pushf
cmc
insl
stos
adc
mov
scas
sub
pop
push
pop
loope
aaa
sbb
add
aad
xchg
xor
loopne
add
adc
hlt
out
push
xor
subl
in
dec
add
lret
test
adc
outsl
push
lret
loop
pop
xchg
arpl
and
ljmp
les
pop
in
aam
sbb
xchg
aas
ljmp
pop
int3
roll
jo
lret
or
jne
xchg
inc
sub
xchg
xor
fs
std
aas
cmp
xchg
xor
in
adc
das
dec
inc
test
pop
scas
loopne
jp
xlat
testb
sub
push
test
inc
fbld
cmp
push
dec
fidivs
mulb
push
jle
outsb
rclb
lock
jp
pop
fsubr
xor
or
xor
cli
adcb
xchg
mov
movsl
lahf
shlb
jns
addr16
aaa
or
add
push
cmp
mov
cli
dec
inc
cld
jb
mov
cld
and
cmp
inc
daa
add
test
jmp
ret
sbb
adc
mov
pop
push
inc
sbb
repnz
add
mov
arpl
xchg
jge
fcomps
daa
sbb
cld
mov
test
jb
xor
movsb
mov
cmc
int
xor
or
stos
orl
shl
pushf
xor
cmpsb
inc
int
in
sbb
je
aam
cmp
int3
inc
jno
data16
inc
or
xchg
insb
xchg
lret
addl
push
inc
jecxz
pop
out
sbb
cmpsb
insl
or
xor
xchg
lds
cwtl
stos
jo
sbb
aam
push
je
mov
and
shr
sub
add
mov
data16
mov
or
mov
lock
shlb
and
repnz
shr
test
jl
dec
ja
insl
aad
daa
clc
mov
sbb
sbb
lock
aaa
movsl
add
xchg
mov
into
push
ds
das
pushf
rcr
aam
cltd
jl
js
iret
cmp
testb
enter
orl
rcl
sub
pop
push
push
xor
xlat
mov
pusha
mov
fwait
or
push
shll
mov
divl
jp
add
cmp
outsb
jg
cmc
cli
xor
jmp
xor
test
js
pusha
ljmp
fidivs
pop
or
jecxz
mov
pop
adc
pop
jl
mov
fwait
adcb
sbbl
jge
imul
mov
loopne
xor
insb
shrb
shr
xchg
and
sarl
into
stc
popf
daa
out
cmpb
outsb
fstpl
jp
jecxz
pop
jb
fsubp
addr16
cmp
stos
jbe
inc
gs
orb
xlat
inc
dec
adc
cmp
mov
mov
loop
pop
lcall
push
es
popf
into
xchg
and
cli
insb
jne
push
fidivrl
mov
idivl
cmp
out
mov
xor
or
in
out
leave
cmp
cmp
jmp
in
mov
mov
stos
push
inc
pop
hlt
pop
loopne
pop
pop
ds
insl
aas
mov
push
mov
push
and
imul
pop
call
or
mov
je
scas
xor
flds
fwait
popa
test
sub
int3
in
and
lahf
push
add
pop
inc
jmp
jle
mov
adc
sub
push
std
rorb
xchg
and
add
pusha
fisubl
mov
cmc
das
sbb
adc
push
pop
pop
inc
outsb
push
mov
pop
call
nop
add
cwtl
adc
push
mov
xlat
mov
jno
fmull
out
mov
pop
mov
inc
xlat
sub
ljmp
and
outsb
xchg
out
sub
lret
cwtl
cmp
sarb
add
mov
mov
sub
push
mov
sub
jae
sub
dec
adc
inc
mov
adc
adc
imul
mov
imul
cli
and
lahf
push
test
pop
cmp
or
and
jle
dec
mov
mov
push
push
shrl
out
sbb
mov
cmp
hlt
adc
das
fcompl
sahf
and
ret
pop
adc
mov
sub
aas
or
icebp
jnp
icebp
insl
jae,pn
ret
data16
pusha
pop
cmp
inc
sbb
bound
imul
jl
and
lods
xor
in
jne
jg
jmp
das
jbe
push
add
es
inc
fidivrs
push
clc
xor
add
add
jg
scas
dec
inc
inc
test
fs
add
addr16
in
and
popa
adc
les
mov
mov
lods
scas
sbb
scas
lods
decl
inc
or
fidivrl
cmpsl
mov
shlb
push
add
jo
sbb
push
mov
adc
xor
outsl
icebp
dec
shll
dec
cmc
and
les
fsubrp
and
and
lods
lock
sbb
mov
aad
mov
scas
mov
icebp
insb
nop
cmp
in
pop
xor
loop
jg
lds
push
incl
xlat
mov
dec
jbe
mov
sub
paddq
inc
and
ljmp
andb
clc
xor
push
out
movsb
sar
pop
push
fmull
sbb
push
imul
inc
ljmp
xchg
and
out
subb
loop
imul
stos
gs
out
xor
iret
or
and
scas
cmp
and
sbb
fwait
adc
daa
dec
test
pop
test
je
jae
pushf
add
add
jae
nop
orb
and
out
clc
call
dec
jge
pop
test
bound
xlat
das
mov
xor
ljmp
hlt
jecxz
xor
xchg
test
scas
push
jp
xchg
or
jecxz
push
icebp
and
sbb
xor
pop
repz
gs
dec
shrl
lahf
sarl
ret
adc
and
pusha
dec
popa
idivb
sub
cmpsb
lret
loop
fadds
jnp
rcl
fnstsw
mov
rcrl
adc
pop
int
jns
push
mov
leave
mov
inc
js
jmp
and
outsl
jo
lcall
xchg
mov
push
lock
or
xor
mov
sub
cmc
test
cmp
out
jmp
or
mov
mov
inc
inc
lret
mov
int3
sub
movl
adc
outsl
mov
mov
cmp
mov
loopne
inc
out
sub
dec
cmp
xchg
xchg
inc
jecxz
cwtl
bound
mov
jae
aaa
and
arpl
imul
fwait
mov
iret
mov
add
out
sub
xchg
outsb
jecxz
mov
inc
or
xor
test
in
arpl
jcxz
adcb
std
aam
xor
cmc
lods
push
inc
pusha
and
mov
mov
leave
push
inc
leave
decl
xchg
or
dec
jmp
hlt
ds
movsb
jbe
mov
xor
xchg
dec
and
adc
movsl
aaa
addr16
push
mov
je
rcrb
push
das
mov
jg
jae
sbbl
jecxz
in
inc
stos
mov
jmp
aam
cmp
sub
and
fmuls
out
in
loopne
adc
cwtl
hlt
mov
jne
xchg
pop
mov
nop
flds
in
int3
aam
sbb
ds
jmp
xchg
adc
clc
inc
inc
lret
pop
ljmp
out
in
in
cmc
cs
fdivs
mov
in
xacquire
lret
cmc
js
mov
jmp
ret
sub
pop
sbbl
inc
outsl
push
cmp
or
stos
negl
popa
out
nop
mov
pop
stc
aam
cltd
popf
cmc
mov
repnz
adc
adc
mov
addr16
jb
stos
mov
xchg
repnz
xor
xor
adc
add
xchg
nop
sub
test
scas
stos
and
pop
pop
lea
in
cmp
es
xchg
pop
xchg
nop
ret
jp
inc
ds
aad
inc
lods
pop
ja
sbb
dec
mov
cmp
or
daa
lahf
dec
mov
nop
jae
decl
mov
jmp
cmp
lea
inc
fisubl
enter
bound
sbb
das
stos
or
xchg
subl
inc
sub
inc
mov
mov
icebp
test
mov
paddq
out
cmp
in
or
xchg
inc
int3
mov
inc
dec
jl
sub
lock
adcb
lods
cmpsb
sbb
loope
xorb
lret
stos
clc
jle
push
add
out
in
and
or
test
sub
rorl
aam
jp
test
imul
int
xor
jle
jle
adc
pop
cs
sti
mov
test
inc
pop
lahf
fwait
xor
dec
ror
or
movsb
and
arpl
hlt
repnz
jecxz
in
bound
ljmp
ja
sub
inc
jno
lods
je
or
ret
push
add
jge
cmp
xor
mov
ret
add
int
movsl
ljmp
adc
add
inc
sbb
imul
test
xchg
push
inc
fidivs
cmp
mov
lcall
adc
push
xor
and
iret
add
xor
xorb
aas
ds
cmp
js
xchg
das
cmp
gs
push
add
es
mov
cmc
xchg
mov
ss
jno
mov
shr
or
int3
and
inc
popf
mov
fcoml
jb
sbb
filds
dec
or
xlat
insb
test
sub
or
jl
les
js
shlb
fs
mov
fwait
jo
mov
out
pushf
inc
scas
cmpsb
and
jl
std
jecxz
sub
or
mov
pop
rol
sarb
xlat
stos
dec
inc
data16
jge
inc
add
add
bound
jp
icebp
and
jb
cld
sbb
fcmovnu
jge
lcall
mov
inc
cmc
sbb
adc
xchg
push
inc
sub
push
pusha
mov
push
and
dec
and
fisubs
mov
add
push
pop
outsb
cmp
bound
loopne
inc
lods
aam
pop
cmp
out
rcr
cmp
sbb
aas
inc
sahf
es
push
xor
or
addb
push
scas
cmpsl
push
loope
and
mov
xor
push
out
sbb
push
cltd
xor
pop
jecxz
incb
repz
cmp
cmpsb
cmpsl
repnz
lods
cmp
cmp
xchg
adc
add
icebp
js
cwtl
or
ja
testb
unpckhps
xchg
shl
or
dec
lea
xlat
stc
jne
mov
insl
and
xor
mov
rcll
xor
or
subl
cmp
adc
movb
cwtl
or
xor
mov
pop
arpl
outsb
add
jmp
or
fstpt
inc
adc
std
push
pop
in
sub
mov
aad
dec
nop
dec
inc
cmpl
dec
pop
fwait
push
std
pop
cmp
in
test
inc
sbb
jae
rol
stc
stos
ret
jo
xchg
gs
pop
and
mov
outsl
sub
push
pop
jns
js
sbb
das
int
sti
enter
inc
mov
fsubl
mov
dec
push
sub
movsl
or
mov
fisttpll
inc
out
cmp
mov
imul
fcoms
jns
cmp
sbb
les
mov
test
sbb
push
into
push
mov
out
nop
push
cld
jb
sbbb
mov
out
push
mov
xchg
rcrl
or
push
mov
dec
iret
sbb
mov
jmp
xchg
adc
andb
mov
push
fimull
mov
push
pop
dec
shlb
xchg
pop
sbb
cltd
push
cwtl
push
xchg
stc
lds
es
lret
pop
cmp
lret
dec
lds
push
cli
imul
adc
lea
mov
sub
jl
adc
or
shlb
mov
loope
jle
push
pop
insb
pop
testl
rcrb
push
lea
into
xchg
scas
mov
sub
pop
ficompl
inc
sahf
or
jno
lock
hlt
push
xor
cmc
mov
xchg
jae
pop
out
in
dec
je
lret
dec
lea
adc
lcall
or
ret
loope
add
and
aad
rcr
loopne
rcrl
hlt
add
sub
jl
into
hlt
popf
mov
or
mov
mov
pop
push
call
fucomp
fwait
xchg
punpcklbw
rclb
sub
fbld
fisubrl
or
pop
clc
fdivrs
mov
popa
neg
outsb
cmc
rorb
sbb
jecxz
jmp
subb
std
ljmp
or
ret
push
inc
jb
xor
cmp
sbb
nop
xchg
mov
pop
fidivrs
bound
adcb
sarl
out
ljmp
jle
fucomp
ljmp
jne
movhps
loope
les
dec
xchg
movsl
jno
jo
into
scas
adc
out
sub
lea
inc
xorl
and
addr16
mov
xchg
lods
jo
inc
pop
push
push
push
xor
or
adc
rcl
sbbl
stos
loope
mov
lahf
ja
inc
dec
xchg
sub
cmp
cmp
ja
sbb
pop
in
fbld
xor
prefetch
scas
in
cs
sub
andb
mov
out
aas
out
aad
jmp
mov
out
mov
or
xlat
or
test
scas
adc
mov
dec
mov
sub
dec
push
sarb
mov
mov
aas
mov
cmp
xor
jno
stos
xchg
mov
aad
test
add
add
pop
mov
loopne
mov
push
shrb
subb
test
in
scas
dec
lret
dec
push
jg
je
sbb
cltd
jl
ror
push
xchg
inc
dec
jne
ficoml
mov
pop
dec
pop
sub
repnz
jecxz
mov
sub
xchg
push
sbb
push
dec
out
inc
test
sub
pusha
cmp
dec
popf
dec
pop
inc
mov
inc
aad
jle
lcall
fldl
mov
mov
leave
jmp
inc
mov
gs
cli
enter
stos
test
sub
test
stc
mov
pop
inc
ja
add
lea
cwtl
add
rcr
pop
mov
sub
lea
in
stos
stos
pushl
std
fnstcw
push
popa
ds
rclb
sbb
ficoml
aam
jmp
sbb
ret
divb
fisttpl
cwtl
cmp
xchg
sarb
shrl
inc
and
pop
cld
jmp
push
jns
out
push
xor
test
push
add
adc
popf
pop
mov
pusha
shrb
dec
dec
bnd
mov
xchg
jp
ret
xor
xor
xchg
sbb
ret
lcall
and
mov
sub
cwtl
not
lods
sub
lcall
aam
lcall
lea
scas
jge
loop
jns
and
pop
or
jl
sub
add
lahf
mov
cwtl
jo
inc
jb
sahf
gs
xlat
call
adc
fwait
adc
and
dec
fwait
pop
cmp
js
outsl
mov
pop
xchg
sub
push
lcall
cs
shl
mov
incb
dec
sbb
fstpt
icebp
lock
sbb
nop
jb
js
pop
data16
fildll
inc
sbb
xlat
jecxz
ret
cwtl
cld
push
sti
hlt
pushl
jge
sub
pop
into
pushf
xchg
push
add
dec
and
fisttpll
and
fcmovne
jns
jno
jne
dec
mov
inc
pop
add
pop
xor
gs
pop
addr16
add
fucomip
pop
pop
std
mov
ss
rclb
divl
add
lods
add
mov
inc
dec
lock
pop
inc
and
mov
int
sbb
xor
adc
xchg
pop
adc
cmpsb
or
les
rorl
xchg
les
or
lods
pop
insb
cmc
idivb
xchg
pop
ds
js
insl
dec
cmp
mov
pop
pushf
outsl
xchg
fidivs
orl
sub
imul
fcmovnu
fcmove
mov
les
ror
popf
mov
imul
jo
popa
imul
mov
shlb
ja
and
into
xchg
xor
sahf
dec
dec
out
inc
mov
leave
sbb
xchg
sbb
ret
sahf
or
push
orl
pop
mov
negb
ja
imul
cwtl
es
dec
or
icebp
stc
lret
dec
lods
add
xchg
je
xchg
mov
iret
fs
inc
xchg
push
xchg
dec
add
loop
push
xor
xchg
fbld
mov
push
incl
jp
and
add
in
lea
jo
sub
xor
stos
inc
and
dec
mov
pushf
push
call
lret
fidivrl
xchg
mov
and
sbb
movsl
mov
adc
push
mov
popf
ret
mov
pop
ret
pop
movsb
jl
add
mov
aas
in
mov
enter
incb
mov
mov
int3
xlat
cmp
sub
or
popf
mov
mov
push
mov
sub
add
fiadds
std
inc
in
pop
or
inc
std
jl
jl
and
add
and
xchg
pop
scas
cmpsl
pop
mov
fisubrs
jno
mov
loope
rcr
mov
das
movsb
movsl
pop
gs
jmp
psrlw
jns
sbb
lds
xchg
rcrb
dec
mov
out
push
sbbb
mov
inc
es
test
jge
je
in
pop
lcall
xchg
jbe
les
push
jg
pusha
mov
adc
leave
inc
push
ret
arpl
rorb
ret
jno
pop
ljmp
aad
mov
xchg
lock
push
ljmp
push
mov
movsb
mov
xchg
test
icebp
inc
nop
lods
jle
adc
and
sti
imul
push
in
mov
pusha
out
pushf
or
repnz
push
cmp
insl
or
push
shll
test
enter
in
xor
sbb
stos
dec
push
pop
popf
popa
mov
loop
cmp
ds
jge
dec
xchg
neg
mov
jp
pop
mov
filds
je
sbb
inc
fbld
outsb
mov
dec
shrl
jno
cmc
xchg
repz
dec
stos
insb
clc
shlb
pop
lcall
inc
dec
lods
ljmp
cmp
idivb
test
outsl
sub
sub
les
pop
ffree
adc
xor
cmpsb
fisubrs
pop
lods
popl
popa
lods
cltd
inc
xchg
adc
in
lcall
int3
mov
insb
arpl
je
jle
jmp
mov
jmp
ss
sub
push
or
rcrl
je
sub
xor
insl
xchg
repz
inc
shl
mov
mov
stos
inc
push
dec
mov
sbb
fcomi
ja
push
push
xor
jp
inc
cmpsb
enter
mov
jnp
inc
jg
aas
add
push
cmp
ret
icebp
ret
dec
xor
mov
inc
mov
adc
mov
mov
enter
sti
stos
shl
xchg
jae
push
rolb
addl
sarb
fistps
test
pop
push
int
mov
xchg
sahf
or
outsl
pop
lret
movsb
jmp
push
lods
xor
sub
das
out
adc
xchg
or
negb
cli
jbe
mov
sti
mov
out
cmp
adc
js
mov
je
es
sbb
sub
push
call
mov
addr16
mov
mov
in
mov
test
dec
pop
mov
and
dec
in
dec
cmc
cs
das
mov
ljmp
fs
insl
inc
outsl
and
jnp
stos
std
cmp
shl
dec
fs
inc
lret
inc
aam
icebp
inc
orl
jns
cmp
pop
sti
sub
adc
mov
push
inc
enter
pop
push
cmp
lret
enter
popf
fwait
icebp
clc
push
loope
pop
lret
cmp
or
out
sbb
adc
xchg
jecxz
or
xchg
fidivrs
stos
lods
vphaddbd
pop
adc
sub
adc
inc
add
daa
ret
mov
leave
stos
jp
sbb
dec
sarl
pop
outsb
mov
xchg
cmc
cmpsb
mov
test
dec
addr16
mov
cmc
inc
mov
cli
jg
push
mov
cmp
test
jno
mov
inc
shll
std
call
xor
test
cmp
jle
xor
or
mov
sub
stos
jge
mov
push
scas
xchg
xchg
repnz
xlat
imul
aam
and
test
pop
xor
in
push
test
dec
leave
lea
jne
ja
sub
or
pop
stos
mov
imul
ja
push
pop
mov
mov
sti
shlb
movsb
cmp
sahf
daa
sbb
ds
sbb
jmp
push
inc
icebp
in
inc
jnp
add
pop
push
and
add
scas
mov
and
subb
in
lcall
sbbl
mov
add
xchg
popa
pop
stc
mov
out
mov
or
mov
add
mov
popl
insb
cmp
ret
sarl
mov
and
inc
flds
shr
hlt
mov
push
jge
jno
mov
xor
xor
sub
cmp
into
xor
push
xchg
or
pop
inc
dec
jg
pop
enter
outsb
addr16
loope
or
test
pop
pop
lock
mov
mov
lret
lahf
mov
mov
add
and
in
outsl
leave
pop
test
and
mov
sbb
scas
mov
push
divb
mov
movsb
xchg
outsl
hlt
dec
jle
push
sbb
jge
mov
popf
and
je
lea
push
lcall
fiadds
js
es
neg
dec
push
loop
mov
jno
ljmp
mov
sub
cmp
jns
dec
jns
push
shrb
sub
jecxz
fwait
and
stc
cs
mov
movsb
mov
aam
lret
insb
inc
sbb
movsb
sub
es
or
jae
lea
stos
lret
and
lods
xlat
ja
dec
xchg
push
nop
lret
aad
and
lret
js
sarl
sub
adc
jb
or
sahf
fdiv
rcl
mov
push
push
mov
sarb
dec
add
je
sub
dec
or
adc
inc
adc
in
iret
inc
jnp
gs
aaa
ss
jecxz
outsb
jecxz,pn
mov
pop
push
sbb
dec
mov
pop
es
xor
aas
xor
in
lret
push
pop
sbbb
sbb
inc
in
jns
mov
outsb
jmp
aaa
dec
pusha
adc
lods
adc
push
inc
stos
dec
pop
rclb
cmp
push
in
add
mov
mov
ret
jle
push
mov
loop
cmpsb
sbb
inc
lret
mov
mov
mov
repnz
lock
jp
add
ret
ret
add
cmp
pop
push
popf
push
adc
xor
in
lock
sbb
cltd
scas
mov
pop
pop
fldl
push
xor
jp
lcall
in
loope
leave
out
cmp
lods
and
jb
and
lret
inc
arpl
xlat
mov
sbb
cmp
rolb
insl
pop
push
inc
and
test
jno
leave
sbb
pop
imul
jg
or
jne
divb
add
sbb
popf
outsl
mov
xchg
je
pop
or
das
dec
mov
inc
mov
jecxz
pop
clc
jle
push
cld
add
dec
mov
mov
mov
in
jb
dec
xchg
pop
cld
mov
jb
mov
mov
pop
sub
dec
push
clc
push
jp
or
push
fidivs
scas
ss
cmp
dec
fdivs
insl
push
fnstsw
inc
xor
cmp
mov
xchg
int
cmp
ret
jecxz
in
inc
ds
lret
ret
cmp
xchg
out
jle
fisubl
mov
mov
and
pop
shll
sub
pop
mov
sbb
inc
push
mov
xchg
repz
lock
add
arpl
push
and
add
clc
mov
push
loopne
leave
enter
out
sub
mov
sahf
stc
testl
jecxz
ds
pop
leave
leave
sub
in
sbb
fwait
push
call
or
pusha
mov
sub
lret
push
push
shll
mov
scas
mov
and
pusha
rolb
mov
out
mov
or
lea
xor
in
pop
cli
in
rcll
mov
dec
shlb
dec
movsl
nop
sbb
inc
xchg
and
pop
mov
and
in
mov
cmp
std
ja
jbe
ljmp
mov
cli
xchg
xor
in
sub
push
xor
fcmovb
sarb
pop
imul
add
mov
sti
xchg
lock
arpl
mov
mov
out
mov
fimull
stos
nop
subb
out
in
xchg
ret
sti
mov
fimuls
mov
out
cmp
jecxz
rcll
add
xchg
mov
xor
push
push
jp
add
mov
rcll
or
inc
jae
xor
rorl
or
test
cltd
lds
add
ss
dec
mov
cmp
jg
mov
sub
jecxz
js
cmp
push
xor
mov
cmp
iret
ja
inc
enter
dec
adc
or
adc
int
loope
push
sti
jne
andl
aam
ljmp
cmpl
rcl
push
sbb
popf
rcrl
jne
in
fdivl
xchg
xor
rolb
bound
jp
addl
sbb
out
push
or
in
adcl
loope
mov
in
xor
sahf
sub
push
sbb
push
jbe
dec
push
xchg
outsl
or
jnp
test
fisttpll
cld
xchg
aaa
lds
xor
out
pop
dec
mov
pop
push
mov
mov
pop
jne
dec
jns
scas
daa
adc
sub
das
pop
jns
and
jmp
mov
push
insb
lods
adc
ja
sti
js
sub
out
sub
or
fs
adc
cltd
popa
push
cs
inc
mov
xor
pusha
xrelease
lret
mov
and
mov
push
xor
xor
movsl
jb
jo
adc
or
dec
add
dec
sub
outsb
or
sahf
jns
iret
mov
fadds
icebp
cmpsl
rcll
mov
jg
jb
jp
and
js
addb
popa
daa
cwtl
leave
mov
sbb
jg
xchg
test
mov
push
jecxz
push
cmpb
rclb
daa
call
pop
inc
or
aaa
test
cmp
push
cmp
popf
cwtl
or
ljmp
leave
or
insb
inc
push
xchg
out
lahf
mov
ljmp
push
push
fistpl
add
pop
mov
loop
dec
cmp
lock
movsb
or
add
jae
mov
fdivs
pop
cltd
sbb
sub
ljmp
pop
mov
loopne
movsb
jle
outsl
or
aas
insl
inc
ljmp
cli
ja
hlt
mov
les
pop
jle
test
jbe
aam
mov
jmp
cmp
popf
jp
or
mov
xor
out
inc
stos
fcom
stos
pushf
flds
cmp
mov
inc
cwtl
mov
sbb
mov
sbb
cmp
jmp
push
mov
testb
mov
and
xchg
mov
add
or
push
repz
or
cmp
pop
jge
sbb
cs
shrb
inc
mov
in
fisubrl
fsubp
fmuls
imul
rcll
aas
mov
ret
jmp
out
in
sbb
and
sub
aad
into
jnp
or
mov
pop
xchg
jns
xor
inc
ljmp
mov
adc
adc
sub
js
cmp
pushf
inc
pop
ffreep
sub
repz
movsb
xchg
xor
in
pusha
fs
dec
adc
mov
xchg
int
xchg
negl
jns
je
mov
pop
ret
sbb
and
daa
xchg
movsl
outsl
pop
push
popa
fcomps
popf
mov
ljmp
mov
push
adc
shl
cmpsb
je
sbb
xor
std
ret
int3
xchg
or
mov
pop
fsubrl
call
cmp
fnstenv
mov
jmp
or
mov
fdivl
int3
add
add
add
out
fdivrl
adc
shl
mov
jge
hlt
inc
loop
fwait
in
insb
adc
jae
add
and
clc
gs
jl
jl
push
clc
in
inc
imul
cs
pop
or
sbb
data16
sbb
push
cs
xchg
nop
fstpl
sahf
out
scas
cmpsb
sub
xchg
daa
test
fistl
in
dec
lea
in
insl
sub
sbb
loop
add
sub
in
subl
loop
pop
inc
andl
mov
add
or
sar
mov
xchg
mov
xchg
push
into
mov
sbb
ljmp
pop
popf
mov
ds
stos
int
imul
cmp
push
fiaddl
xchg
fisttpl
js
xor
test
cmp
in
in
jle
cmp
cmp
mov
subb
sbb
push
andb
mov
mov
cmp
add
mov
pop
cli
test
lahf
lock
icebp
nop
pop
loopne
inc
std
daa
xchg
adc
mov
ret
inc
cli
pop
inc
mov
mov
and
dec
movsb
rorl
lods
ljmp
data16
das
inc
jnp
lds
jne
imul
push
ljmp
pushf
sub
ret
jl
add
dec
lock
pop
pop
arpl
mov
fnstsw
je
or
scas
dec
lds
dec
push
int
fsincos
cltd
or
and
push
lock
decb
ret
adc
ja
in
push
lret
popf
jne
stos
sbb
add
sbb
mov
xchg
mov
pop
pop
jecxz
lds
sti
mov
mov
sahf
pushf
frstor
stc
add
xchg
sub
mov
lcall
adc
sub
loop
cmp
sub
mov
lock
stos
daa
sar
jg
test
cwtl
iret
or
inc
sub
jb
cmp
movsl
arpl
push
jg
push
in
or
cs
sbb
fldt
push
mov
and
dec
lcall
xor
ret
les
frstor
fs
insl
add
mov
lds
xchg
mov
outsb
push
cmpsl
cmc
mov
movsb
xor
or
sbb
jl
cmc
roll
ljmp
sub
xchg
mov
add
imull
decb
daa
mov
and
movsl
sti
mov
das
arpl
insl
xchg
out
jnp
aam
gs
pop
jl
out
stc
pop
sub
dec
add
imul
rcl
in
pop
inc
mov
subb
sbb
pop
inc
fidivrl
or
pop
inc
in
xchg
mov
aad
inc
add
emms
cmpsl
fisubrl
jo
out
das
fs
mov
jmp
inc
gs
push
lock
lods
iret
and
xor
and
push
call
aas
ja
pop
jne
xor
clc
repz
push
pop
xor
jmp
scas
aaa
movl
adc
pusha
jp
call
rcll
xchg
cld
lods
dec
jbe
mov
les
mov
mov
pop
es
push
pop
pop
mov
jecxz
pop
add
shr
jmp
push
xor
jg
adc
pop
pop
inc
jne
or
fwait
or
shrl
stc
mov
push
dec
pop
arpl
aad
aad
sbb
call
push
push
lret
sub
push
or
test
or
in
ss
xor
outsl
cmp
fwait
loopne
mov
xchg
adc
mov
rdpmc
inc
out
jne
scas
sti
orl
ficompl
add
jo
xchg
cltd
add
sub
enter
sahf
push
inc
cmpsb
or
xlat
sub
pop
fildl
push
jge
ret
inc
imul
lret
and
mov
sbb
lret
loope
dec
xchg
or
xchg
mov
jne
mov
in
adc
jge
ds
dec
les
jg
aas
in
dec
adc
sahf
or
cmp
or
out
lods
mov
divb
popa
pusha
cmp
add
inc
sub
outsl
bsf
inc
jg
cwtl
sub
hlt
pop
xor
dec
dec
push
repz
divl
adc
rorl
mov
pop
insl
test
cmp
cmovs
push
xchg
fildll
cmpsl
stc
das
aas
add
pop
mov
clc
and
pop
enter
xchg
mov
cli
out
sti
rcl
out
int
fiadds
fistpll
les
ss
imul
and
js
inc
ret
es
cwtl
stos
and
pop
add
dec
xchg
movsb
adc
pop
fmuls
lods
xor
pusha
orb
inc
mov
push
out
sub
mul
out
in
daa
fs
or
adc
addb
mov
stc
pusha
and
mov
xchg
bound
hlt
xchg
inc
xorb
fcomps
pusha
in
lods
cmp
cmp
or
inc
call
je
lods
mov
sub
fnsave
cmpsb
adc
or
xchg
psrlq
cmp
ja
lock
dec
or
lret
sub
mov
push
int
and
xor
push
adc
xchg
scas
mov
addr16
mov
jecxz
and
or
lahf
sti
dec
lret
pop
imul
mov
cmpsl
into
ret
or
adc
push
and
or
mov
shll
or
lods
lods
in
cwtl
std
mov
mov
sub
sbbl
xchg
stos
adc
sub
jg
xor
push
movsb
stos
mov
xlat
or
shll
inc
mov
mov
xor
test
ja
loop
inc
fdivl
mov
sub
repnz
lret
jbe
mov
and
xchg
jno
mov
lret
sbb
aad
xchg
cmp
aaa
jg
lret
in
push
ret
inc
and
or
sbb
nop
movsb
stos
enter
rclb
adc
mov
push
mov
sub
in
dec
pop
aam
sub
jb
xor
mov
xor
cltd
ret
bound
fs
test
fidivrs
jmp
lret
pop
jb
push
sahf
mov
arpl
outsl
lea
not
ret
lcall
hlt
xor
mov
fldt
andl
dec
rol
mov
sub
notb
imul
ss
loope
pusha
fs
int3
movsb
jo
imul
push
in
shr
shll
dec
loopne
in
jg
and
mov
xchg
jge
dec
in
or
jns
leave
lods
aaa
sub
xor
gs
loope
and
mov
cmp
inc
pop
or
push
jo
dec
daa
mov
pop
sbb
push
jbe
das
mov
lret
cmpsl
test
mov
out
mov
cwtl
pusha
cmc
shll
ror
lahf
push
popa
jnp
pop
std
pop
add
rcll
mov
inc
xor
arpl
cli
or
int3
addb
lods
inc
dec
fidivs
push
mov
jbe
loop
subl
ret
das
xchg
ljmp
mov
mov
mov
pop
jl
adc
sbb
cmp
movsl
sarb
xchg
inc
lods
addr16
mov
adcb
mov
inc
or
arpl
cltd
in
sub
loop
in
pop
ret
sub
inc
add
mov
dec
xor
push
test
jge
mov
mov
fisttpl
or
sbb
lods
or
inc
out
pop
lahf
lds
cmpsb
mov
and
xor
cltd
cmp
mov
je
aas
adc
ret
sub
sarb
cs
ljmp
fsts
mov
rol
lcall
int3
xchg
gs
xchg
jno
jns
push
daa
shrb
cmpsb
fld
in
jp
outsl
or
and
lods
in
pushf
inc
xor
ds
and
lea
dec
sahf
push
in
js
addl
cmp
sbb
xchg
xor
inc
pop
ficoms
and
jo
sti
dec
cltd
je
xchg
in
dec
jno
stos
and
dec
iret
fmulp
mov
js
ds
insl
andl
sbb
idivl
pop
out
cmp
or
nop
rorb
push
lret
cmpsl
enter
lods
data16
sub
iret
mov
ss
jae
fisubs
cltd
inc
mov
or
call
inc
xchg
xchg
xchg
insl
jmp
push
pop
mov
mov
adc
add
pushf
jb
and
imul
cmp
outsl
sbb
adc
xor
or
int
stc
push
add
mov
xchg
hlt
shll
std
adc
mov
inc
stc
mov
daa
call
or
push
or
popa
push
add
pop
mov
sbb
push
xchg
mov
and
insb
fldenv
movsl
xchg
pop
fdivl
rcll
fcmovnu
dec
stos
sbb
ljmp
arpl
addr16
sub
mov
int
and
xor
movsl
pusha
cli
js
pop
dec
fst
xlat
push
cmc
pushf
sub
fnstenv
mov
pop
pop
xchg
dec
lret
lcall
jb
shl
js
cmpsl
mov
xor
test
je
test
lcall
adc
mov
jnp
xchg
mov
jbe
cltd
cmpb
ss
pop
ffree
jmp
test
mov
xor
and
add
mov
lcall
bound
inc
aaa
jp
add
in
adc
divl
aas
inc
push
and
idivl
add
clc
sub
es
adc
jae
fs
push
les
es
adc
lahf
dec
jp
bound
mov
popl
dec
in
sub
loope
adc
push
push
inc
jb
stos
dec
mov
pop
pop
test
std
mov
jl
cmp
push
iret
sbb
jnp
mov
or
in
dec
lea
inc
frstor
push
ljmp
call
sbb
ja
int3
xor
cmpsl
rorl
and
out
mov
push
inc
insl
insl
or
xchg
inc
cmp
inc
xor
in
jp
pop
test
mov
add
inc
mov
jle
es
add
fadds
dec
push
dec
mov
cli
mov
xorl
imul
mov
sbb
sub
fwait
jnp
cmp
pop
xchg
cs
in
dec
insb
pop
pushf
bound
test
pop
mov
push
es
addr16
push
pop
in
call
xchg
les
int
sbb
mov
adc
pushf
ret
lods
sbb
ja
cmpl
sti
mov
mov
jo
rclb
pop
or
and
inc
out
es
stos
dec
push
leave
dec
add
sub
icebp
xor
mov
loopne
mov
sahf
shl
popf
or
rcr
dec
and
mov
fidivs
mov
addb
inc
adc
push
into
aad
repnz
jg
jg
lds
notl
movsl
pop
xchg
xor
fnsave
push
and
or
mov
or
in
pop
xchg
xchg
hlt
jmp
xchg
aaa
decl
jmp
fistl
out
sahf
inc
insl
fs
gs
adc
cmpsl
aaa
shll
ds
mov
fldcw
sub
cwtl
insl
fcoms
push
popa
inc
pop
ret
sub
push
cmp
je
cli
and
mov
subl
jmp
sarl
lahf
xchg
push
sub
in
cwtl
adc
enter
addr16
ljmp
aam
iret
cmp
pop
mov
mov
out
xchg
cmpsl
and
mov
sub
cmpsb
in
mov
in
aam
scas
pop
out
adc
jge
movsb
test
fnstcw
adc
push
rol
mov
inc
jnp
cld
out
pop
sbbb
cmc
push
inc
mov
outsl
mov
jbe
popf
rcrl
movsb
jp
ds
inc
inc
movsl
sbbl
push
ljmp
ss
push
inc
cltd
mov
lcall
push
fiadds
pop
mov
and
sbb
enter
jb
fsubrl
cwtl
imul
pop
hlt
xchg
dec
in
out
orb
pop
jmp
testb
mov
pop
push
sbbb
dec
jnp
and
fsubrl
sub
rorb
jns
dec
lods
push
sub
or
mov
shrl
mov
dec
lods
adc
mov
ret
push
adcb
cmpsb
pop
das
jmp
enter
xchg
xchg
imul
pop
and
shlb
push
popa
jnp
subb
jno
ja
incb
cmc
outsl
fimuls
cs
repnz
and
mov
jae
push
call
movsl
les
sbb
fcomp
push
mov
mov
cwtl
sbb
jecxz
fs
test
or
loope
test
add
inc
subl
dec
jbe
push
sti
xor
enter
jecxz
pop
mov
sub
out
rorb
mov
sub
imul
aam
popf
jo
stc
xor
sub
test
dec
mov
imul
and
jns
jae
in
jecxz
in
ror
mov
ljmp
orl
aam
jp
decl
xor
push
mov
loop
xchg
cmc
lods
lret
pop
add
movsb
fsubrl
push
mov
hlt
test
or
mov
pop
sbb
pop
adc
iret
xor
test
xor
shlb
repz
mov
dec
movsb
cmc
sub
data16
jae
cs
notl
sbb
hlt
push
mov
add
fdivrl
dec
sbb
pop
dec
and
inc
mov
jmp
xchg
enter
or
jns
jecxz
loopne
fs
xchg
loope
aas
xchg
jbe
xor
decl
jae
pop
fstps
test
mov
pop
jb
xchg
add
mov
xchg
inc
or
sub
outsl
jnp
add
sti
aas
jno
jb
and
pop
xlat
iret
inc
push
mov
sub
or
stos
aaa
mov
aad
xchg
jmp
mov
iret
outsb
cmc
or
sub
shrl
std
loopne
jbe
sahf
or
jns
cmp
push
jns
mov
pushf
inc
fmull
addl
inc
hlt
xchg
sub
jns
test
pop
xorl
clc
xor
adc
mov
inc
inc
arpl
cs
jo
jge
add
icebp
mov
sbb
xchg
add
cmpsl
xorl
scas
cltd
adc
push
or
loopne
push
mov
push
mov
imul
sbb
push
dec
je
fdiv
subb
dec
rcrb
dec
cli
movsl
mov
push
xor
outsl
pop
push
dec
aaa
add
std
and
aas
or
push
fs
mov
xchg
les
sub
not
and
xor
mov
test
mov
int3
in
or
lods
je
xchg
stc
inc
inc
lret
int3
addl
outsb
mov
adc
movsb
shr
xchg
mov
out
daa
mov
mov
decl
add
xchg
mov
pop
test
jg
lods
cmp
or
sub
or
test
mov
and
call
hlt
sbb
movsb
sbb
sub
pop
add
ja
sub
mov
mov
pusha
push
lret
mov
insl
mov
mov
inc
pop
cld
cmp
inc
fmull
sub
leave
jne
loopne
repnz
and
mov
cmpsl
dec
fstps
sbb
out
cmp
and
add
lods
dec
dec
mov
mul
or
int
pop
imul
mov
or
fiaddl
aas
and
dec
fisttpl
add
jbe
add
dec
cwtl
xor
jnp
sbb
dec
pop
and
js
adcl
sub
lds
inc
add
mov
fadds
add
and
sbb
enter
bound
mov
scas
mov
mov
int
inc
sti
xor
fbstp
in
sub
fisttpl
dec
and
movsl
sbb
stc
jno
sub
pop
xchg
and
push
jecxz
xor
pop
push
cwtl
clc
mov
push
add
outsb
push
push
in
gs
xchg
cmpxchg
dec
sub
nop
mov
mov
movsb
sbb
pop
cmp
push
xchg
ja
xchg
inc
shr
jmp
leave
pop
loopne
sti
xor
push
in
imul
lock
pushf
int3
outsl
out
cmp
dec
les
mov
mov
iret
ret
cmp
push
fsubrs
and
sub
inc
enter
jl
sub
movsl
sub
xor
jne
addr16
mov
cmp
dec
adc
mov
aad
mull
shrb
stos
jns
movsb
push
fwait
sub
lahf
or
jmp
push
repnz
lods
push
pusha
dec
mov
sbb
add
ret
push
cmp
outsb
test
mov
loope
mov
leave
mov
insb
out
and
stos
cmp
in
add
pop
pop
ljmp
enter
scas
arpl
push
movsl
mov
lock
and
loop
or
mov
mov
dec
into
jns
mov
or
push
xor
adc
das
sti
repnz
fisubrl
ds
clc
dec
fwait
test
dec
adcb
imul
jg
push
and
inc
add
mov
pushf
cmp
and
scas
mov
xchg
aam
push
out
inc
repnz
cwtl
jnp
in
in
mov
xor
sahf
daa
mov
add
repnz
lock
imul
mov
dec
and
sub
lods
pop
cmp
pop
aad
cmp
mov
push
loope
mov
mov
ljmp
testl
sub
dec
mov
jno
scas
fs
dec
jbe
or
mov
adc
xchg
push
lret
pop
jmp
add
mov
fs
outsb
aas
push
add
js
sbb
test
pop
and
mov
jle
pusha
ja
cmp
imul
in
adc
jne
dec
adc
in
out
fisubl
iret
pop
sub
xor
adc
sub
jp
jne
test
xchg
jae
and
jno
sarb
aas
mov
sbb
cli
jmp
popf
lods
bnd
pop
jns
dec
shrb
sub
stos
mov
push
jecxz
jae
rolb
decl
mov
loopne
nop
push
xor
pop
fsub
mov
cmpl
cmp
and
test
enter
jne
shlb
mov
push
sbb
aaa
lods
add
inc
mov
iret
loope
xor
pushf
jl
js
pop
mov
push
xchg
sub
sti
popf
std
inc
out
movsl
mov
out
mov
ret
xor
add
push
jecxz
inc
inc
lds
cli
pop
out
sub
mov
xchg
sbb
loop
in
test
jl
rcl
pop
mov
dec
cwtl
xor
push
sbb
leave
lcall
push
cmp
jl
jno
das
andl
push
lock
sub
inc
imul
cmp
pop
jg
ret
and
jmp
dec
rcrl
pusha
dec
cmp
pop
test
adc
iret
mov
pop
inc
scas
jp
and
mov
lcall
add
adc
and
xchg
add
push
mov
sbb
pop
jbe
mov
and
insl
mov
jecxz
adc
mov
mov
jg
xlat
test
pushf
ret
dec
jmp
dec
push
popa
daa
out
incb
inc
into
imul
jns
scas
dec
mov
fbld
idivl
lahf
dec
pop
sbb
mov
out
cmp
xchg
es
loopne
popa
dec
sarb
cmp
leave
subl
loop
mov
adc
cwtl
inc
insl
shll
add
sarl
cmp
push
jns
cmp
sti
out
loope
mov
call
or
push
xor
sbb
scas
mov
pop
popf
repnz
mov
and
les
pop
jecxz
mov
cmp
and
lret
add
test
sbb
daa
xor
cli
lret
jle
in
lret
mov
sbb
mov
andb
lahf
xchg
les
jg
mov
repnz
cmp
jecxz
push
aaa
mov
inc
bound
cmp
dec
xor
pushf
push
cmc
mov
dec
mov
cmp
or
xchg
pop
sbb
push
les
adc
jg
ds
adc
mov
pop
and
or
push
jmp
repz
out
add
xor
int
incb
sbb
pop
xor
lock
xchg
fistpl
mov
and
arpl
popf
mov
out
jg
jns
xchg
and
fiadds
pop
setle
mov
addr16
call
std
or
or
outsb
js
cli
ja
or
adc
in
inc
ss
push
test
ret
insb
mov
push
test
and
lcall
jmp
and
mov
fisttps
in
jb
add
sbb
loop
jb
inc
lods
cltd
jl
and
fisubrs
inc
mov
cwtl
inc
jge
xor
dec
in
push
ljmp
and
push
xor
xor
sbb
mov
fnstcw
lret
sbb
mov
inc
inc
push
or
pop
repz
dec
mov
xlat
rorl
xchg
mov
and
dec
repz
inc
jg
stos
test
jbe
xchg
add
ljmp
xor
adc
xchg
pop
add
cld
inc
mov
dec
sbb
andb
cmp
dec
lods
cmc
loop
lds
inc
loopne
int
mov
divl
call
mov
adc
stos
leave
orl
jp
hlt
das
movsl
repnz
mov
jmp
adc
cwtl
push
sub
dec
push
push
aad
push
push
lret
push
lahf
jle
push
stc
xor
lock
out
out
push
mov
mov
and
divb
and
jecxz
dec
xor
xchg
std
daa
repz
ficoms
std
lds
int3
xor
push
mov
mov
mov
cltd
adc
push
xor
mov
cmpsb
push
stc
iret
stos
pop
fildll
pushf
inc
daa
test
dec
adc
push
std
lahf
scas
add
insl
out
xor
xchg
es
or
inc
jne
add
add
mov
xor
pop
pushf
es
and
out
fstp
repnz
add
mov
inc
dec
stos
xor
iret
dec
lcall
hlt
or
pop
push
mov
sbb
dec
repnz
clc
shrl
xchg
mov
jge
sub
insb
int
rol
in
lret
mov
arpl
push
stos
ss
testl
iret
push
repnz
sub
ljmp
idiv
fs
push
adcl
sti
dec
std
test
arpl
pop
out
sti
jnp
fs
dec
mov
lret
sbb
and
sub
push
mov
fs
inc
mov
outsl
xor
jle
cld
adc
lock
adc
pop
mov
sub
pushl
sbb
fnstenv
mov
mov
xchg
sahf
out
inc
inc
aam
adc
sbb
fistpl
fs
and
fcomps
repnz
jbe
jne
dec
popa
xchg
fcmove
lahf
jmp
ret
mov
xchg
test
test
and
mov
jmp
mov
cmp
add
or
f2xm1
push
sub
aaa
fwait
ds
push
xlat
mov
cmp
pop
insl
inc
popf
adc
adc
cmp
mov
jb
pop
sub
leave
sub
xor
push
fbstp
dec
rorl
cmpsb
sub
pop
pop
adc
pslld
mov
or
nop
inc
shlb
xchg
mov
std
lock
enter
int
mov
cmpsl
imull
xor
lret
cli
rcll
out
leave
mov
adc
test
xchg
sub
xor
stos
test
mov
sub
xlat
inc
or
jmp
jns
mov
js
das
xchg
iret
mov
cmp
mov
mov
cs
mov
or
push
scas
sub
or
dec
int3
hlt
cmpsb
lods
adc
xor
push
out
hlt
mov
stc
jno
dec
in
fcmovnu
add
pop
scas
dec
or
mov
lods
dec
out
add
popa
addr16
push
dec
pop
mov
lock
jp
out
in
das
js
jg
idivl
scas
or
cmp
fcomps
dec
imul
insb
pop
jmp
lcall
stos
aaa
aaa
xchg
sbb
insb
adc
pop
lea
enter
ret
mov
pop
xchg
mov
push
jl
mov
test
ljmp
and
mov
adc
pop
outsl
stc
lds
inc
cmovbe
mov
das
jnp
repz
pusha
sti
lods
pop
push
cmpsl
mov
arpl
xor
out
in
jns
push
js
sub
repnz
lret
cmp
test
jmp
sub
mov
mov
gs
pusha
adc
je
fs
push
or
jmp
cmpsb
pop
iret
mov
push
mov
mov
test
std
aam
jg
or
mov
fsubrp
cmp
cld
pop
and
cmp
mov
je
leave
xor
pop
mov
stos
js
xchg
or
xchg
ja
xchg
dec
fwait
je
sub
scas
mov
mov
lcall
push
pop
loope
sub
push
insb
adc
xchg
ds
xor
out
push
add
add
push
or
pop
dec
dec
xchg
aad
out
inc
inc
jnp,pt
loope
lret
xor
sbb
idiv
jge
or
in
movsb
mov
call
fucomi
jns
ret
sub
fdivp
cmp
xor
sub
lea
push
xlat
or
pop
dec
cltd
dec
adc
xorb
xchg
test
hlt
adc
popw
xchg
mov
js
mov
adc
fisttpl
xchg
out
xchg
sub
imul
or
addr16
mov
push
sbb
nop
dec
fbstp
jge
xchg
sbb
fcmove
sbbb
aas
aas
stc
shrb
xchg
pop
pop
push
xchg
imul
pop
or
lret
cwtl
test
sub
shrb
xor
add
cmp
lret
xor
mov
fbstp
sbb
pop
adc
clc
sbb
mov
ror
inc
rep
leave
pushf
aaa
shlb
adc
imul
pop
sub
cmc
mov
mov
fs
and
mov
das
dec
iret
mov
jmp
movsb
leave
cld
mov
lcall
subl
pushf
adc
dec
push
imull
sbbb
cmpsl
ljmp
dec
xchg
loopne
or
fs
inc
dec
pop
cli
sub
in
xchg
xchg
push
cli
or
or
scas
add
cmp
push
ja
inc
nop
pop
shlb
sub
mov
loopne
fidivl
pop
pop
das
sbb
mov
std
xchg
pop
outsb
fisubrs
xlat
dec
fistpl
call
mov
test
sub
stos
aaa
and
ja
divl
push
sbb
cmp
fcomps
push
sub
addr16
xor
sub
cmpsl
xor
movsb
sub
sub
mov
push
shll
inc
sbb
mov
pushf
push
cmp
push
inc
sub
mov
fcompl
ret
mov
jnp
and
inc
jae
inc
add
bound
sub
xchg
or
jns
mov
xchg
mov
and
mov
std
movsb
jle
lock
sub
xchg
outsl
cltd
aad
repz
dec
mov
sti
mov
jnp
scas
rcll
xchg
inc
dec
daa
jae
push
sub
scas
mov
mov
mov
dec
test
dec
hlt
scas
xchg
mov
xor
dec
xchg
and
cltd
std
cs
gs
push
mov
arpl
neg
data16
push
add
dec
mov
mov
inc
in
sub
mov
dec
in
dec
aad
pop
push
pop
push
ror
inc
jecxz
pop
repnz
pop
jmp
mov
jmp
aas
and
xor
sahf
out
popf
lock
rorl
je
pop
subb
cmpl
popf
mov
xchg
and
sbb
les
pop
cs
movsl
fisttpl
push
xor
adc
scas
mov
inc
call
mov
mov
fidivrs
xchg
faddl
add
xchg
pop
or
add
cmc
jle
test
cmp
repnz
pop
mov
loop
daa
pop
insl
imul
lahf
aad
mov
les
test
insl
movsl
pop
stos
inc
mov
jae
clc
cmp
cmp
imul
inc
out
popf
mov
and
sti
les
ja
xchg
fstps
aas
xorb
outsl
fwait
cld
imul
popa
aam
add
or
lds
or
lret
lock
jnp
mov
cmpsl
add
loop
push
test
nop
fists
fidivl
mov
xchg
fsubs
cwtl
pop
push
or
sbb
je
xchg
rclb
push
loop
and
out
fidivrl
pop
in
imul
adc
mov
out
jo
sub
scas
sbb
adc
rcrl
leave
das
outsl
and
push
push
or
cmp
push
sub
adc
out
fcoms
mov
xor
out
fwait
mov
cmp
xchg
mov
jle
sub
jp
and
xchg
push
cld
xlat
pushf
lcall
loop
add
xor
inc
je
lds
add
andb
add
or
xchg
cltd
pop
sbb
sbb
cmp
xchg
out
pop
pop
outsb
popa
xchg
sbb
jge
enter
add
std
mov
stos
or
xchg
adc
xlat
int3
cmpsb
clc
dec
clc
xchg
lcall
pop
adc
rcrl
and
sub
sbb
in
popf
xor
lea
mov
test
das
lods
xor
scas
pop
in
jbe
inc
sub
jl
inc
mov
or
rorb
dec
mov
pushf
out
push
mov
gs
sbb
iret
lock
add
aas
cmp
xchg
adc
shlb
add
jnp
lahf
popa
sbb
push
repnz
push
loopne
orl
xor
pop
push
incb
arpl
add
push
jmp
cmp
adc
testb
das
lcall
push
rcl
in
inc
jmp
sub
addl
gs
je
iret
fsub
cmp
lock
aas
and
dec
mov
bound
fadd
push
mov
imul
dec
shrb
clc
stos
xchg
sbb
ret
adc
mov
jge
jmp
test
movsl
push
add
dec
shrl
decl
out
inc
aaa
aad
popl
push
push
pop
negb
xchg
lock
clc
rolb
enter
mov
cld
push
aas
shll
add
dec
pop
data16
and
lret
dec
mov
shlb
push
dec
nop
test
lret
jno
jecxz
sbb
nop
or
fcoms
and
ret
adc
add
cmp
lods
sti
gs
mov
js
jle
in
dec
jae
cmp
mov
adc
mov
gs
push
xor
dec
dec
insl
scas
pop
aaa
imul
imul
cmpsb
and
adc
aaa
mov
cltd
loop
pop
enter
ljmp
sub
fwait
mov
arpl
mov
and
pop
fwait
jl
pop
mov
push
mov
xchg
movsl
sbb
lods
jo
adc
in
inc
bound
out
mov
mov
sbb
sbb
pop
repnz
or
push
rcrl
pop
pop
and
dec
mov
arpl
mov
inc
test
cwtl
cwtd
cmp
test
bound
aaa
js
adc
insl
movsb
push
cli
sub
xchg
lds
pop
add
adc
lods
inc
mov
xchg
insb
xchg
sbb
pop
inc
jmp
incl
xchg
or
in
jb
fisubs
lea
and
pusha
lea
cmp
ret
add
sub
push
int3
add
xor
push
fs
push
ja
ss
push
xchg
imul
jnp
jae
inc
outsl
ds
xor
xchg
mov
jbe
cs
jae
in
xor
ds
cmp
adc
jns
jae
or
xor
test
mov
xchg
cmp
shll
inc
cld
sti
mov
mov
inc
mov
ja
xor
fistpl
push
fcoml
shlb
mov
cmp
add
outsb
mov
push
adc
mov
sub
adc
loope
cmp
inc
fisubrs
add
xor
cwtl
cmp
inc
fdivl
outsb
push
shrb
cmp
in
adc
bound
cltd
pop
loop
inc
xchg
push
jo
mov
inc
xor
cmc
stos
aas
xorb
mov
sbb
mov
sbb
out
mov
and
data16
dec
or
mov
mov
mov
push
sbb
loopne
mov
xor
icebp
mov
pop
lcall
outsb
adc
or
rcrb
xor
adc
fadds
or
imul
and
xor
sub
jo
imul
dec
sub
xchg
arpl
shrb
jno
pushf
js
outsl
sti
test
and
daa
arpl
jo
roll
adc
push
ljmp
std
push
fadds
sahf
bound
mov
jne
mov
lds
rol
or
in
out
xlat
in
in
xlat
insb
jp
xchg
ljmp
nop
dec
lret
or
and
cmp
sbb
add
jae
aam
ret
lock
and
std
repz
insl
sbb
ds
pop
sub
jmp
mov
out
out
jecxz
inc
loopne
xchg
or
push
mov
rcr
fists
mov
dec
inc
test
or
jns
mov
in
cli
pop
clc
xor
sub
jl
popa
movaps
jne
mov
mov
insl
dec
sub
pushf
mov
jecxz
xor
fimull
add
pop
fwait
sahf
mov
mov
dec
add
add
pop
mov
testl
inc
mov
dec
jnp
sub
mov
out
jl
xor
cmpsl
mov
sti
push
gs
jp
xchg
dec
popf
lock
imul
in
sub
xchg
test
mov
mov
shl
fcoml
cmp
xor
and
jbe
pop
in
jnp
push
jne
insb
cmp
addl
dec
fidivrl
out
xchg
cmp
add
popa
and
imul
push
fcoms
subb
jb
fldt
lcall
pop
nop
aaa
stos
push
jns
xor
cwtl
xchg
inc
outsl
cltd
mov
push
add
andb
mov
pop
jp
mov
push
cmp
shr
push
rclb
pop
pop
sub
mov
xorb
aas
rorl
fldcw
test
pop
dec
loope
fs
cwtl
pop
pop
daa
ret
iret
sub
push
insl
push
mov
into
lret
fistl
nop
mov
mov
add
pop
aaa
mov
movsb
das
rcr
inc
adc
sub
call
lret
sub
mov
inc
add
fnstsw
mov
pop
pop
aam
shrb
pop
or
sub
mov
addr16
adc
adc
scas
inc
and
inc
inc
push
ret
adc
add
lret
fcmove
mov
fstpt
mov
rorb
jle
loop
fistps
fs
in
lods
out
ljmp
cmpsl
push
stc
dec
sbb
sub
call
xchg
pop
mov
sbb
jbe
pop
add
sub
fdivp
mov
pop
pop
fnclex
and
mov
dec
mulb
pushf
or
cli
stos
stos
jno
xchg
setg
loopne
pop
jb
das
fs
cmp
pop
lds
sub
sub
pop
push
sub
je
push
sub
mov
cmp
stc
cltd
test
es
cmp
or
pop
pop
xor
mov
aad
ss
cmpsl
jne
data16
inc
xor
outsl
scas
adc
xor
mov
popw
adc
push
cmp
mov
int3
sahf
add
rorb
and
arpl
sub
aaa
movsb
frstor
or
pop
xor
mov
loope
xlat
adc
add
popa
jmp
xchg
in
pop
mov
ret
pop
divl
out
nop
movsl
jae
enter
push
shr
sub
jl
mov
pop
jno
xchg
fcoml
mov
scas
sub
insb
xchg
ljmp
jle
shrb
in
enter
ljmp
add
sbb
push
clc
test
push
and
mov
int3
out
jle
sbbb
inc
dec
nop
or
mov
mov
adc
addr16
testl
stos
dec
fildl
sti
aam
pop
sbb
cmp
lret
sahf
test
sub
or
jbe
fs
xor
push
hlt
shll
shll
leave
aas
lcall
pop
lods
leave
into
dec
mov
shlb
sbb
push
jle
cmp
out
lods
shrl
lcall
adc
fldl
push
gs
xchg
pop
mov
xchg
aam
jg
fdivs
pop
fcomps
mov
loope
ret
nop
addr16
jp
push
cmp
je
call
mov
xor
jecxz
divb
sti
cmpsb
dec
mov
and
lods
fisubrs
pop
cld
sti
test
add
pop
cmp
in
cmp
mov
sbb
sub
ret
arpl
dec
push
xchg
insb
xchg
adc
mov
add
in
sti
cmp
mov
hlt
test
mov
jb
pop
jge
mov
ret
sub
loopne
mov
int
cltd
mov
xor
out
mov
fisttpl
pop
shl
les
ret
in
stos
mov
adc
out
test
or
sub
mov
inc
xorl
xchg
fsin
sub
js
in
fbstp
push
inc
inc
enter
pop
push
xchg
add
aam
mov
ret
daa
sarb
aaa
pop
push
dec
outsl
mov
cwtl
xor
mov
pop
inc
mov
cwtl
iret
sbb
add
pop
repz
cmp
mov
js
inc
mov
push
mov
xchg
or
add
inc
cmp
pcmpeqw
and
daa
adc
dec
mov
sub
xor
cli
inc
and
mov
arpl
imul
jnp
imul
jp
sub
mov
aam
aas
xchg
hlt
sahf
into
mov
mov
cmp
repnz
outsl
lcall
imul
mov
adc
flds
ljmp
fimull
pop
xchg
mov
movsl
push
lahf
cmpsb
test
cmc
mov
xchg
loope
pop
sahf
cmc
jp
cltd
fcomps
jo
out
dec
add
mov
in
in
je
sbb
push
mov
pop
mov
or
cld
test
or
inc
arpl
jg
dec
and
hlt
arpl
or
sub
sub
fisttpl
sub
jmp
jbe
pop
adc
push
repnz
sub
pop
push
sahf
vpshaw
and
cld
shlb
push
push
sbbb
or
in
negl
mov
arpl
divb
int
mov
lock
mov
xchg
push
push
sbb
inc
jmp
pavgb
dec
aam
mov
push
adc
sub
xor
and
jnp
imul
push
or
pusha
inc
outsb
ror
mov
ss
push
xchg
push
and
cs
out
mov
dec
mov
mov
pop
pop
daa
pop
out
mov
mov
push
mov
pop
sub
bound
andl
jbe
add
in
inc
lret
pop
add
stc
jge
les
out
mov
rcrb
xchg
int3
xor
and
hlt
add
mov
arpl
push
fildl
movl
add
pop
xchg
and
and
xchg
test
cs
xor
mov
mov
movsl
sbb
mov
scas
rorb
mov
stos
add
sbb
sbb
sbb
daa
dec
dec
cli
jne
sub
out
xor
inc
xchg
test
mov
fbstp
cmpsl
pop
mov
in
xchg
daa
jle
dec
adc
out
dec
fnsave
daa
xchg
out
dec
dec
adc
or
or
xor
sub
dec
mov
mov
xlat
es
lds
pop
call
sar
mov
xchg
add
subb
es
insb
pop
scas
xor
xchg
pushl
xor
or
jecxz
sbb
push
push
pop
xchg
mov
jno
mov
test
adc
sub
ret
mov
cmpb
pushf
mov
popfw
out
pop
ffree
sub
lea
ds
out
enter
std
cmp
dec
jnp
sub
incb
cltd
ja
or
cli
dec
gs
sbb
inc
inc
inc
sbb
add
cs
jb
sub
loopne
data16
xchg
push
movsb
cmpl
xchg
orb
lock
std
jmp
pop
imul
in
mov
xlat
xchg
pop
test
adc
inc
scas
arpl
sahf
ss
cmc
add
ret
cltd
repnz
sub
jbe
outsb
loop
fisttpl
outsb
jb
or
faddp
cmp
fidivrs
std
lret
add
in
test
sub
adc
adc
out
daa
mov
jge
mov
mov
cli
stos
mov
mov
daa
pop
pop
sbb
xor
ljmp
shlb
sbb
pop
lea
popf
or
decb
shrl
push
fstl
sbb
mov
cmp
enter
cmpsl
insb
insl
cmp
adc
clc
dec
xchg
add
dec
xchg
fiadds
call
xor
je
mov
xor
mov
jle
mov
popf
xor
xchg
mov
xorb
xor
cmc
sbb
dec
mov
mov
out
test
push
leave
stos
jl
subl
fs
cld
and
mov
or
pop
add
pop
pop
xor
pop
pusha
inc
cmpsl
ucomiss
xchg
idivl
ds
aas
push
fdivp
fdivrp
cli
pushf
out
cmp
sbb
arpl
adc
mov
stc
rorb
pop
insl
in
mov
sub
add
ret
jle
sti
xor
mov
cmp
enter
add
movsl
xlat
pop
add
aad
push
test
fisttpl
cld
sbb
rcrl
mov
xchg
sbb
push
jmp
cmp
sbb
mov
jns
bound
pushl
faddl
jo
je
sub
adc
cs
movsb
adc
mov
cmc
mov
dec
ja
sti
loope
arpl
psubd
insl
cmp
mov
adc
iret
mov
mov
lods
add
enter
fisubl
lock
xor
xor
shll
in
aad
and
cli
loop
shr
mov
jne
movsl
inc
fcomps
imul
lret
inc
xor
and
mov
add
pop
or
mov
or
aad
orb
lret
movsb
xchg
xchg
xchg
mov
pop
cmp
adc
mov
imul
lods
test
adc
sar
test
sarl
and
ds
cwtl
xchg
movsl
mov
test
loope
daa
int
push
dec
or
adc
aam
into
xchg
jl
lcall
push
xchg
mov
cs
jae
mov
dec
mov
dec
imul
cli
jmp
negl
jae
scas
mov
add
mov
pop
mov
icebp
mov
je
xchg
scas
dec
push
loopne,pn
mov
pop
in
into
iret
rcr
in
cmp
adc
mov
pusha
into
jbe
outsb
ret
movsb
adc
in
fstpt
sub
cmpsl
jne
loopne
mov
xor
mov
fsubr
mov
xchg
or
lods
jmp
fimuls
jle
cmp
mov
dec
dec
push
cmp
js
jno
and
mov
add
mov
clc
out
jecxz
xchg
push
jno
and
mov
test
mov
sarl
xchg
scas
xorb
test
daa
mov
mov
out
mov
mov
imul
pop
and
inc
aam
adc
stos
jl
pop
rcrb
addl
arpl
cmp
mov
jne
fdivrl
in
loop
inc
and
xor
aam
arpl
xor
movsb
sbb
mov
push
xchg
mov
fs
out
std
sbb
enter
push
div
add
mov
in
out
clc
mov
ror
adc
insb
cli
adc
mov
neg
inc
cmp
popf
repnz
aaa
sub
dec
jg
es
insb
movsl
cltd
das
stos
subb
pop
in
mov
iret
cmpsl
rcll
jne
jmp
jo
out
cmp
fs
cwtl
dec
push
cwtl
cmp
add
dec
daa
and
cld
dec
mov
call
fstpl
push
jg
mov
mov
jne
push
outsl
ret
xchg
jae
jae
xchg
iret
push
in
adc
mov
and
inc
sbb
mov
mov
pusha
lahf
fstps
xchg
mov
xchg
xor
cwtl
dec
mov
addr16
das
nop
int3
mov
pop
xchg
dec
clc
xor
cmc
adc
aaa
fdivrl
or
scas
mov
out
jp
dec
ret
insb
and
mulps
inc
dec
popf
or
cmp
xor
arpl
fs
sbbl
ret
in
repnz
or
cmpsb
xchg
push
mov
insl
add
push
lcall
adc
into
inc
adc
fdivr
or
ljmp
out
mov
in
cli
lods
mov
je
mov
pop
push
mov
fs
mov
mov
add
pop
push
mov
bound
mov
mov
push
mov
subl
jmp
add
xchg
add
aaa
je
pop
and
lahf
mov
sbb
ror
popa
lds
jae
je
push
lcall
mov
fistpl
popa
aaa
push
cmp
jno
inc
dec
fistpll
xor
daa
jb
arpl
test
push
mov
xchg
mov
or
xchg
pop
xchg
inc
adcb
insl
or
pop
sub
dec
cmp
xchg
xor
dec
xor
sbb
dec
jge
scas
popf
ljmp
into
jg
sub
addl
add
pushf
push
xchg
jmp
rol
dec
jns
loope
push
ss
xlat
ds
lods
lods
loope
xchg
mov
xchg
push
xor
mov
inc
ljmp
mov
sti
loope
inc
adc
movsb
gs
cltd
testl
push
mov
movsb
es
adc
rclb
jl
pop
lods
in
lea
mov
iret
inc
out
aam
push
jo
sbb
dec
mov
and
push
insb
std
test
xchg
cmp
aaa
cmp
xor
test
inc
sub
ret
cltd
mov
mov
jp
test
mov
mov
into
sub
lock
pop
fmuls
push
adc
sub
dec
movsb
mov
xor
mov
inc
jbe
lock
out
dec
loopne
add
inc
and
int3
dec
dec
das
test
cli
lock
xchg
push
out
movsl
mov
repz
je
out
je
push
aam
fwait
xlat
mov
inc
inc
and
sahf
lcall
sahf
pop
fimuls
subb
jns
sti
je
test
mov
add
outsb
pop
faddp
push
inc
xchg
enter
test
fmuls
xchg
loop
add
sub
dec
das
add
aas
lock
cmp
and
ficoml
shlb
loope
mov
ss
int3
cli
or
out
int3
xlat
in
sub
pop
pop
ret
lods
bound
cmp
in
or
imul
jb
in
dec
add
in
lahf
notl
sbb
loop
xor
or
cmp
sub
cmpb
pushf
pop
jbe
mov
xchg
adc
clc
decb
lea
pushf
and
xor
inc
inc
pop
or
repnz
mull
jns
mov
and
out
cmp
mov
ret
loop
lret
adc
dec
pop
push
in
outsb
clc
je
fisubl
sbb
add
lock
cmp
sahf
inc
inc
lcall
outsl
push
repz
push
loopne
in
and
inc
sub
jge
mov
out
fiadds
inc
call
aas
mov
out
sub
pop
in
xor
outsl
push
jl
mov
fstps
sahf
repz
xchg
jmp
push
inc
fimull
ljmp
clc
aaa
repz
bound
fs
movsl
loop
or
pop
lcall
push
icebp
dec
or
aam
push
mov
xlat
aaa
xor
cwtl
cmp
rcll
add
sub
stos
dec
ljmp
xchg
enter
stos
cld
add
mov
or
mul
cmc
mov
into
cmp
test
sbb
cmp
repz
stos
jnp
sti
jne
and
dec
divl
das
mov
in
jae
xchg
mov
jp
xor
cmpsl
jge
out
stos
inc
int3
popw
aad
loope
int
cmp
js
inc
push
out
or
pop
sbb
pop
push
or
jmp
inc
hlt
sbb
sub
stos
pop
rcll
add
addr16
std
push
or
push
mov
les
icebp
lods
scas
add
xchg
in
addr16
jae
repnz
mov
out
push
xor
lods
pop
and
mov
dec
add
pop
and
jp
adc
and
xor
mov
bound
loope
jl
cli
inc
sar
icebp
xchg
or
daa
mov
mov
pop
mov
push
cmp
aam
addl
push
push
pop
fwait
out
jl
outsl
jns
add
adcb
negl
fldcw
add
push
daa
outsl
dec
mov
or
js
fsubr
mov
pop
sbb
lds
jle
loop
xlat
insl
ret
lock
imul
adc
fstl
pop
enter
xor
dec
les
fnstenv
dec
push
jl
imul
pushf
les
or
jp
pushf
sti
and
cmovnp
mov
das
mov
inc
pop
das
push
or
lods
pusha
xchg
xchg
and
and
pop
adc
pop
jb
lock
leave
lea
jne
mov
cmpsb
je
lds
jns
cmp
cltd
fs
add
sbb
dec
aam
push
fimull
jl
mov
mov
add
dec
push
jp
jmp
je
pop
ja
outsl
ret
cli
dec
sbb
push
bound
shlb
mov
sub
dec
cli
in
and
pushf
repz
inc
sbb
jmp
inc
xor
loopne
popl
and
shlb
pop
out
jp
jl
fsubr
jno
mov
mov
test
iret
xchg
scas
jp
stos
ja
adc
mov
dec
mov
xor
add
mov
mov
fwait
adc
jne
inc
cmpsb
mov
mov
xchg
lahf
loope
cmp
push
subb
xchg
rclb
repnz
inc
mov
xor
loopne
divl
jg
fwait
cmp
add
aas
sbbb
cmp
lret
mull
mov
sarl
hlt
xchg
dec
cmc
gs
pop
jno
stc
mov
ja
into
subb
gs
pop
xlat
dec
xchg
xor
xchg
gs
outsl
gs
sub
push
ss
sahf
stos
add
popf
ja,pt
loopne
push
test
mov
lcall
shrb
mov
cwtl
lahf
gs
lea
or
fcoml
push
subl
dec
lock
dec
push
cmpb
jge
jecxz
repnz
xor
out
push
jmp
data16
leave
sub
adc
lret
in
push
ja
and
insb
jmp
pop
add
ljmp
insb
add
dec
xor
ret
jl
movsl
dec
bound
fstl
dec
loope
jb
cli
sub
es
scas
mov
nop
into
jns
inc
pop
xchg
xchg
pop
adc
outsl
rolb
scas
test
stc
mov
sbb
jns
fdivs
lock
push
in
adc
mov
cmpsl
and
hlt
pop
clc
ret
clc
push
inc
adc
cltd
decb
jb
inc
sahf
cld
push
icebp
arpl
out
pusha
popf
xor
xchg
faddp
mov
in
mov
mov
push
mov
inc
fcmovb
ljmp
and
push
lds
cwtl
jg
movsl
mov
mov
shrb
push
insl
out
repz
adc
lahf
iret
add
inc
xor
sarb
xchg
jmp
add
les
cmp
inc
imul
or
mov
jmp
and
fldcw
sub
mov
pop
dec
mov
cltd
cmp
cmp
arpl
dec
mov
addr16
ljmp
cmpsb
cmc
leave
movsb
push
xor
xorl
jg
mov
jns
outsb
jle
dec
xchg
enter
jne
and
mov
test
roll
xor
jbe
sbb
clc
xchg
mov
popf
fistps
add
cmp
pop
lcall
add
into
mov
popf
pop
lods
jmp
adc
pop
add
adc
push
mov
xorl
test
jno
shrb
sbb
cmp
adc
pop
xchg
cwtl
out
inc
inc
jg
out
stc
add
push
mov
xor
jge
outsb
dec
cwtl
mov
lods
test
jne
xchg
push
scas
mov
and
sbb
jmp
push
fdivrl
mov
rcll
popf
cmp
popf
mov
mov
sbb
and
std
add
mov
pop
pop
lret
or
mov
loopne
xor
loope
fdivr
pusha
and
mov
inc
shll
jae
ffreep
idivl
test
test
aaa
inc
sbb
call
push
movsb
adc
enter
dec
or
fwait
sarb
mov
dec
jge
mov
stos
inc
in
mov
movsb
cmc
sbb
fdivrl
je
and
pop
lock
lds
and
adc
push
icebp
jae
dec
repnz
cmp
jg
push
or
movsl
ds
test
pop
pop
adc
iret
push
fwait
lods
xchg
fnstcw
adc
in
div
cmc
mov
or
cwtl
cmpsl
xlat
jns
cmp
test
std
mov
lods
rcrl
push
leave
push
xor
adc
jge
jns
nop
test
mov
rclb
mov
ljmp
mov
jmp
jge
je
mov
sbb
mov
xor
inc
pop
and
orps
inc
xchg
sub
pusha
pushf
pop
pushf
enter
cmp
rolb
ljmp
nop
sub
out
sub
and
scas
dec
jae
mov
cmp
push
int3
stos
xor
and
test
ja
and
jecxz
in
lret
and
push
in
aam
push
mov
cmc
jns
insl
push
sti
and
repz
add
sub
sahf
xor
sub
addr16
imul
mov
out
and
mov
xchg
outsb
dec
xchg
or
outsl
dec
mov
shrl
cmpsb
cmpb
xchg
adc
cmpsl
fdiv
imul
test
sbb
in
pushf
cmp
cmpsb
cmp
adc
rorl
add
push
cmp
pushf
push
js
in
mov
mov
out
ficoms
movsb
jb
lret
divb
repnz
ljmp
cwtl
daa
nop
jg
dec
sub
out
mov
inc
in
lds
jo
shl
lods
shlb
fmul
fmull
loopne
and
pop
lret
pop
fisttpl
adc
cs
jecxz
jo
repz
or
xchg
scas
push
cmc
fldenv
je
push
or
mov
xor
test
sub
je
pop
pop
in
pop
mov
or
or
xchg
xchg
cmpsb
mov
repnz
cmc
aam
mov
sbb
and
jb
aad
push
ret
into
mul
lods
xor
outsl
sub
xchg
jmp
sbbb
test
or
mov
mov
js,pn
clc
dec
xor
lret
jle
mov
call
sub
int
ret
mov
sbb
sub
sub
aad
andl
popf
or
in
add
jl
inc
push
pop
sub
jne
in
or
mov
add
fmulp
jne
jae
bound
cld
mov
or
mov
test
pop
or
push
movsb
mov
lret
dec
cmpsl
mov
jmp
push
push
cmp
dec
push
mov
cmp
into
add
popa
packssdw
mov
clc
jg
sar
jle
push
xstore-rng
cmpsl
ret
pop
dec
pop
or
xor
fstpl
loop
int3
daa
adc
pop
loop
ficompl
dec
push
jne
mov
ja
push
adc
leave
mov
cltd
mov
sbb
mov
adc
lock
sub
push
jmp
mov
lret
imul
out
sub
out
cld
aad
xchg
dec
jmp
fstps
mov
cltd
outsl
dec
jae
stc
movsb
inc
fs
sub
mov
test
sbb
ret
add
or
or
ja
subl
cwtl
or
das
loop
cmp
mov
ss
test
fdivs
pop
dec
lock
xor
repz
ja
adc
aaa
jb
ja
and
xchg
aad
and
pop
and
lock
xchg
push
cwtl
jecxz
xchg
xchg
enter
test
jnp
adc
add
or
test
sbb
xchg
mov
movsl
push
in
ret
dec
xor
xchg
les
lods
iret
dec
sub
icebp
push
push
pop
add
push
or
jb
dec
pop
dec
js
xor
ret
push
sar
sarb
pop
lods
lea
cmp
cmpsb
in
xor
dec
fisubrl
inc
inc
push
arpl
add
push
ja
cmp
cmpb
dec
lcall
std
sbb
imul
test
add
fucomp
or
leave
fucomi
or
cmp
icebp
dec
inc
lret
test
dec
add
pop
push
push
out
sbb
add
ret
xchg
test
cmp
adc
and
or
ret
outsl
or
xor
or
inc
insb
cmp
dec
or
insb
push
xchg
test
inc
adc
or
movsl
mov
and
shl
imul
notb
mov
and
cmp
outsl
fsts
pop
jge
pop
mov
int3
stos
mov
int
fld
xor
aaa
leave
loope
lahf
dec
dec
arpl
es
iret
movsl
test
xor
jb
xlat
mov
clc
xchg
xchg
sub
into
cmp
fisttpll
in
roll
and
and
or
imul
adcb
int
movsb
push
add
push
xor
push
jo
cmp
test
and
xchg
popa
les
xor
jl
stos
mov
stos
xor
arpl
sbb
cmp
call
adc
int
aad
data16
or
and
bound
inc
jno
iret
cmp
mov
lret
pop
cltd
sbb
clc
jbe
and
mov
mov
push
mov
repnz
ror
std
rolb
xchg
scas
daa
popa
out
xchg
add
push
mov
sbb
mov
vcvtsd2ss
cmc
adcl
rolb
js
mov
out
xor
lcall
mov
mov
stos
shrb
imul
enter
rcr
sub
cmp
mov
cltd
test
or
clc
adcb
repnz
sub
jno
cmpb
test
pop
cmpl
mul
xlat
mov
ja
jae
sub
adc
inc
dec
adc
cmp
bnd
scas
mov
xor
outsb
daa
loop
aam
xchg
mov
mov
cmp
xchg
insb
mov
mov
xchg
cmp
adc
and
jge
pop
aas
sbb
ret
jp
shufps
jge
jmp
int3
inc
mov
dec
push
lahf
jecxz
cmp
int3
adc
pop
ss
cmc
dec
sarl
push
mov
mov
jg
or
dec
iret
mov
jae
fcoml
push
cwtl
dec
jg
cmpsb
add
hlt
andb
pop
enter
inc
push
push
push
dec
mov
repnz
out
pop
daa
adc
adc
addr16
inc
pop
pushf
mov
in
test
in
inc
filds
push
stos
and
lahf
cmp
jnp
adc
lods
xchg
ret
xor
xchg
rclb
leave
or
mov
ja
movsb
sti
sub
mov
or
dec
or
shlb
cld
mov
adc
cwtl
daa
adc
js
cwtl
call
sub
je
mov
sub
mov
stos
jl
sbb
and
out
mov
jbe
dec
push
lea
out
nop
push
lahf
mov
cmp
pop
cmp
jg
test
add
incl
aad
in
xchg
decb
add
scas
xadd
sbb
or
jo
movsb
xor
sbb
add
and
add
mov
mov
xchg
in
pop
mov
mov
les
ret
xor
xor
icebp
leave
loope
sbb
xor
dec
sti
aaa
out
lcall
cmp
fwait
int3
jge
ret
jl
out
xor
adc
shll
cmpsl
sub
rcrl
jbe
adc
jle
pop
or
cmpsl
mov
xchg
fldcw
sbb
fs
int
mov
mov
cmp
xor
push
jno
mov
cmpsl
sub
pop
jge
cltd
lcall
mov
movsb
mull
aaa
xor
sahf
or
add
lcall
xor
rep
xchg
xor
popa
pop
int
clc
test
add
lret
test
imul
pop
pop
test
cmpsb
ja
cld
mov
adc
fimuls
fisttps
mov
adcl
pop
dec
cmp
xchg
js
fimuls
aam
je
inc
es
adc
dec
clc
xor
lret
loop
mov
sub
hlt
push
pop
or
dec
es
arpl
es
cltd
lea
jl
cmc
pop
xchg
push
mov
jl
stc
push
add
out
arpl
ljmp
es
dec
xlat
js
push
sbb
ljmp
or
stc
andb
xchg
lret
pop
lock
add
jae
out
test
mov
mov
dec
mov
fs
cmp
pop
imulb
sbb
cmp
or
lret
push
mov
mov
and
and
pop
inc
in
jecxz
jo
pop
aas
or
mov
hlt
and
xor
dec
ret
mov
out
xchg
out
sarl
jl
inc
push
stos
pop
jnp
xchg
dec
negl
xor
jnp
in
jno
dec
sub
push
push
arpl
test
xlat
mov
dec
pop
cwtl
test
in
stos
pop
test
dec
dec
std
mov
les
and
out
xorb
rol
fs
xchg
ljmp
jl
cmpsb
out
cmp
cmp
mov
mov
inc
inc
xchg
hlt
stos
adc
pop
xor
xchg
lock
cmp
andl
out
push
mov
dec
out
xor
lock
imul
xchg
push
push
push
sbb
adc
sti
dec
dec
dec
les
jo
push
iret
jle
mov
aam
test
test
je
xchg
sbb
cli
mov
mov
dec
mov
cld
lahf
outsl
add
and
jo
movsb
xchg
arpl
xchg
repz
iret
xchg
dec
out
in
ficomps
xor
pop
incb
sbb
or
adc
xlat
jmp
dec
or
jl
jge
add
pop
add
jge
out
stos
ja
aam
adcl
add
test
mov
jge
push
or
xchg
faddp
sbb
rcll
and
and
cmp
dec
clc
cmpsl
test
jo
insb
push
add
int
popf
cmp
mov
out
jecxz
push
dec
sbb
pop
popa
repz
repnz
jl
pop
cmp
push
inc
pop
es
push
enter
dec
xchg
xor
mov
enter
xor
dec
lret
push
cmc
je
dec
push
mov
jg
xor
xchg
sbb
or
mov
fsubs
and
sub
sbb
call
pop
lods
into
xor
xorb
inc
jb
jbe
sbb
out
xchg
shll
inc
xchg
mov
or
fisubrs
jae
ljmp
sub
xchg
cmp
aam
imul
and
sub
jo
jl
jmp
add
and
subl
ud1
imul
jbe
bound
clc
out
sbbl
stc
pop
out
testb
pop
xor
cmp
push
lcall
mov
ret
jg
cmp
lods
push
in
mov
lahf
cmp
jg
sbb
adc
pop
insb
dec
pushf
scas
push
incl
push
lods
rcrb
das
sti
adc
inc
dec
xorb
jl
cmp
insl
push
jno
shll
inc
in
idivb
inc
xor
lods
leave
mov
xorb
mov
cwtl
jg
movsl
inc
jge
std
out
dec
cmp
dec
js
cmpsb
ret
lods
xchg
mov
nopl
cmp
sbb
out
lds
or
icebp
fcmovnu
decl
push
int
test
mov
cli
inc
les
or
and
add
mov
sub
aad
subl
jno
adc
sbb
jnp
xor
xor
pop
push
or
mov
mov
mov
jmp
adc
sbb
cmp
inc
cmp
popf
rclb
loope
out
fisttpl
mov
add
jmp
bnd
loop
aas
in
jmp
jl
lcall
mov
arpl
lahf
mov
addl
je
xchg
paddusw
div
pop
jl
lret
cmp
test
inc
xlat
add
in
add
inc
mov
and
enter
xchg
adc
mov
aaa
push
fdivs
sbb
lret
jp
mov
xor
mov
jmp
lds
mov
stos
insb
push
jmp
cltd
pushf
pop
ja
push
andl
and
jne
jp
aam
repz
xchg
rolb
push
shrb
test
repz
inc
push
jle
popl
push
mov
aaa
jmp
inc
or
ret
fsubrs
lock
xchg
or
lods
ss
mov
sbbl
in
inc
jns
and
inc
stos
cld
cmp
cmp
fsubrl
addr16
sub
mov
sbb
fbld
mov
cmp
in
in
jns
int
push
mov
mov
dec
mov
pop
mov
xchg
in
lcallw
mov
popf
fists
and
cmp
aad
imul
popa
insl
cmp
push
loope
movsb
daa
push
or
in
into
mov
rcl
dec
mov
lahf
jp
stos
es
push
xor
jno
add
sub
iret
mov
push
shlb
mov
ds
iret
ss
ljmp
adc
pop
cwtl
sub
xchg
push
and
push
fistl
rcrb
adc
invd
shrl
jb
test
xchg
ds
gs
add
and
mov
repnz
adc
stos
mov
or
enter
das
or
loope
mov
movsl
test
jge
lock
and
cmc
cmc
aaa
loopne
mov
add
test
inc
scas
pop
xor
pop
or
cs
leave
jne
lret
test
jo
push
inc
pop
mov
mov
or
data16
add
inc
pop
ja
or
lods
add
mov
sahf
inc
in
adc
lea
idivl
sbb
fisubs
jg
or
xchg
lds
xor
test
mov
cmc
pushf
mov
gs
lock
sbb
sub
subb
dec
xchg
pop
pop
cmpb
jl
sub
sub
lods
adc
or
push
add
push
out
pop
cs
add
std
sub
cmp
test
pushf
xor
mov
lods
imul
adc
mov
xor
int3
mov
pop
test
shl
fs
push
cmp
scas
jb
hlt
movsb
cmp
popf
fisubrs
mov
jle
cwtl
cmp
lret
jnp
arpl
daa
hlt
enter
dec
int
or
lock
xor
aam
jl
testl
ss
jle
std
xor
xlat
adc
test
out
imull
ja
and
push
add
fcompl
out
sbb
iret
adc
repnz
pop
mov
lret
cwtl
stc
into
negb
pushw
inc
cmpb
jmp
dec
sahf
push
lcall
cmp
pusha
mov
mov
pop
push
push
dec
out
outsb
aaa
stos
mov
aaa
inc
and
sti
pop
andl
or
cmpsl
arpl
add
test
mov
dec
std
loope
lret
subb
lods
sarb
xchg
xor
cli
pushf
add
xor
fdivrl
cltd
aad
add
cmp
push
insb
and
out
or
pop
mov
lods
xor
enter
cli
jne
rep
pushf
mov
xchg
xchg
cmpsb
fistpll
sbb
lds
outsl
loop
test
dec
dec
jp
lret
jne
dec
shll
cld
jp
add
in
fwait
mov
pop
or
in
sbb
enter
lock
test
mov
push
cwtl
push
into
lahf
xor
adc
cmp
dec
sub
lea
sbb
aaa
fistl
shll
ret
mov
lods
pop
sbb
adc
daa
dec
in
pop
or
cmp
jbe
cmp
not
int3
popf
addr16
sbb
adc
repz
pop
int
mov
rorb
xchg
inc
xor
fmul
and
push
xchg
mov
pop
or
pusha
adc
jl
push
cltd
xchg
insb
sub
sub
pop
xchg
ja
out
arpl
loopne
pop
rorl
mov
dec
mov
lret
cmp
xor
sbb
ds
mov
lods
mov
or
data16
pop
push
jge
jg
cmpsb
test
or
add
sub
add
rolb
insb
lcall
in
mov
cwtl
ret
xchg
enter
or
rol
push
sub
jne
dec
int3
je
pop
mov
imulb
xchg
imul
into
dec
mov
mov
inc
lcall
xchg
mov
mov
into
fdivrp
add
out
test
dec
testl
push
addr16
outsl
addr16
pop
cmp
cmc
jp
or
dec
sub
xchg
mov
fnstenv
loopne
and
jno
in
test
cmp
mov
pushf
adcl
mov
mov
mov
das
popf
xor
popf
jb
or
outsl
iret
les
ret
xlat
jo
pop
shll
sbb
and
notb
arpl
cwtl
push
out
test
loope
adc
mov
jle
notl
test
dec
out
or
das
push
pop
ror
pop
fwait
es
ljmp
sti
xchg
rolb
dec
adc
and
sub
or
popl
aam
jecxz
mov
pop
dec
mov
orb
dec
scas
jns
inc
pop
dec
jae
xchg
adc
and
sub
popa
test
fwait
lock
popf
lret
and
pop
and
aaa
and
mov
mov
outsb
add
ja
mov
in
mov
pop
fstl
jp
inc
pop
or
add
lds
mov
stc
je
loop
mov
pop
gs
push
mov
in
aas
in
mov
jae
push
outsl
inc
into
add
add
inc
lahf
mov
aas
xor
sub
jecxz
testb
push
xchg
rcrb
lcall
std
sbb
jno
outsb
int
add
ret
jl
dec
int
xor
dec
out
js
loopne
lret
iret
xchg
jb
stos
sahf
dec
rorb
inc
or
imul
sub
into
mov
addr16
dec
data16
popl
xor
inc
mov
test
mov
mov
cmp
ret
xchg
or
mov
and
lret
cltd
mov
je
les
mov
mov
xor
out
dec
push
mov
hlt
mov
or
pop
insb
and
int
jne
sahf
filds
pushf
jnp
mov
sarb
jne
add
mov
cltd
int3
ret
and
sub
cmovge
or
cmp
adcb
repz
aam
stos
rorl
rclb
hlt
pop
jno
cmp
push
inc
ficoml
add
inc
fcomps
je
jo
mov
sub
and
fs
and
sub
test
pop
shr
cltd
add
in
inc
leave
aad
xor
insl
loop
xor
rolb
jmp
xchg
inc
test
and
js
cli
lea
adcl
pop
xchg
push
ret
xor
ja
into
jg
sarl
sub
icebp
movsl
aas
jnp
mov
push
cli
das
mov
lods
aad
rcr
inc
fstpt
or
pop
add
jnp
sahf
xor
popa
out
ror
cmpl
popa
shrb
xor
inc
jge
and
or
cmpsb
or
or
ss
pop
loop
xchg
mov
fisubl
and
mov
repz
add
insl
arpl
inc
or
dec
and
imull
int3
aam
mov
out
js
or
jle
cltd
cld
cmp
push
sahf
notb
jnp
lret
sbb
pusha
pop
pop
jnp
and
cmp
pop
mov
loop
mov
xchg
cltd
popf
inc
or
aas
xchg
push
dec
sub
imul
insl
inc
mov
sahf
rcll
xchg
inc
cmp
cmp
or
lahf
sub
lcall
out
pop
fnstsw
adc
aaa
mov
add
ret
test
fwait
jns
inc
sbb
mov
pop
aaa
sbb
fisttpll
daa
leave
sub
mov
loope
jge
pop
inc
cwtl
gs
inc
inc
cmp
jo
cmp
xor
adc
inc
sbb
sbb
jb
bound
fldl
xchg
cmp
inc
fnstenv
hlt
sub
add
dec
sub
mov
call
mov
mov
and
add
loopne
mov
adc
inc
lds
xor
movsl
addl
lods
dec
cli
outsb
jge
sub
mov
push
lret
mov
loope
jno
aam
mov
mov
dec
fs
daa
arpl
lods
lahf
cltd
outsl
pop
mov
dec
idivb
in
imul
pop
inc
jb
in
jae
sbb
and
cmp
cmp
movsb
rorl
adc
enter
insb
pop
xor
push
and
pop
mov
push
sbb
xor
mov
data16
js
or
repnz
fildll
clc
sbb
dec
test
dec
pop
inc
adc
push
adc
mov
push
sarb
or
fwait
je
cmp
aaa
sub
cltd
adc
movl
sub
imul
inc
push
faddp
push
pushf
jo
popa
sbb
jl
push
cwtl
pop
cwtl
cli
aam
fistl
sarl
lock
shlb
clc
jge
jle
data16
push
xor
inc
addb
jl
mov
es
out
daa
mov
xchg
lret
hlt
mov
int
std
pushf
jnp
stos
add
ljmp
sub
sbb
dec
or
sub
mov
jge
xor
lret
js
mov
aas
xchg
add
sbb
rorb
adc
lcall
movsl
push
xchg
mov
push
adc
rep
leave
dec
addl
pop
clc
jae
adc
jb
xchg
in
and
and
and
and
test
sub
mov
jbe
test
jo
pop
ret
mov
mov
sarl
mov
and
insb
sub
push
and
outsl
popa
jl
lods
test
pop
sub
jae
cmp
addl
pop
stos
ret
push
pop
daa
adc
pop
out
dec
mov
call
outsl
mov
mov
das
xchg
iret
push
clc
mov
mov
inc
xchg
dec
dec
fwait
cs
call
pushf
and
les
mov
add
bound
mov
xor
aaa
sbb
add
cmp
insl
xor
jge
dec
daa
stc
cmp
push
inc
in
imul
ret
mov
and
loope
adc
lods
sub
inc
sahf
int3
or
dec
out
loop
mov
or
push
jl
and
cmp
leave
and
pop
sbb
lds
add
nop
pop
sbb
scas
in
adc
xchg
adc
xor
push
cltd
movsl
or
dec
dec
das
sbb
daa
rcl
popa
jb
mov
ret
adc
int3
cs
popf
mov
sub
ficomps
call
orl
fildll
dec
movsl
mov
out
pusha
addl
lcall
icebp
imul
and
in
pcmpgtd
ds
dec
jl
pop
out
lods
xor
pop
or
jo
out
inc
and
dec
dec
aas
pop
mov
subb
mov
data16
mov
push
nop
arpl
pop
sbb
mov
out
ret
mov
cmp
pop
push
sbb
je
jle
mov
js
andb
mov
adc
nop
push
enter
jp
imul
inc
cs
jle
xchg
sub
cmpb
ljmp
mov
add
ljmp
lods
mov
sbb
push
pop
sbb
clc
add
mov
out
imul
adc
mov
cmpl
test
cmp
test
xor
dec
fnsave
insl
mov
call
xor
ficoml
push
stos
data16
loop
std
dec
xchg
sub
call
stos
sahf
daa
psraw
or
movsl
pop
leave
movsb
lcall
jae
mov
xor
js
xchg
or
adc
in
jb
push
xchg
sbb
fdiv
xchg
push
les
sbb
ret
adc
push
push
clc
cs
push
xchg
daa
mov
sub
xor
and
xlat
or
push
data16
xor
sub
dec
ret
push
fdivl
sti
pop
mov
cltd
push
sbb
icebp
rolb
mov
test
imul
inc
inc
je
cmp
fistl
cli
fstpt
mov
test
jb
pop
or
daa
fmuls
jae
jo
pop
xchg
xchg
daa
jno,pt
lea
out
xor
outsl
push
mov
inc
xor
cmp
mov
imul
mov
and
loope
popl
dec
in
faddl
rcrb
stc
xor
fisttps
in
fcmovu
das
ja
dec
push
add
dec
leave
jnp
adc
mov
rcrl
mov
and
push
cmpsb
mov
mov
imul
mov
shll
sub
nop
sti
fs
cmp
loope
sub
cld
jnp
jge
mov
aam
mov
leave
rol
mov
xchg
xor
add
inc
mov
mov
inc
cs
lret
push
vmwrite
lods
data16
cmp
sbb
inc
sbb
scas
cmp
mov
ror
adcl
jl
in
sbb
xchg
xor
lds
inc
mov
es
popf
test
add
out
mov
sbb
js
add
pop
add
adc
or
ds
cmp
xor
cmpsl
in
jge
ret
mov
and
lret
and
push
enter
xchg
insb
test
push
push
paddsw
inc
in
push
mov
mov
and
or
aad
xor
push
pop
shrl
sub
push
jns
fwait
pop
cld
shlb
stos
mov
mov
aad
pushf
ljmp
or
lods
jno
mov
add
int3
pop
jle
inc
xchg
fisubrl
cmp
mov
rcl
push
jle
out
pop
loope
pop
mov
ret
daa
cmp
jmp
lea
dec
dec
sarb
push
movb
xlat
icebp
push
jns
push
pop
mov
and
hlt
push
in
incb
nop
pop
push
jmp
xlat
xchg
inc
push
and
js
and
xchg
hlt
dec
and
xchg
shl
jmp
insb
jnp
stos
mov
sub
orl
cmp
jle
mov
push
cmp
bound
fsubrs
xchg
jns
mov
cs
mov
fwait
adc
and
js
loop
jnp
inc
lret
in
outsb
out
pop
inc
mov
pop
sarb
cmp
xor
cld
xor
mov
or
add
mov
fiaddl
bound
inc
dec
or
ljmp
xor
mov
pop
dec
imul
mov
lret
mov
ss
cld
xor
sbb
jne
sbb
xchg
mov
jle
lret
or
jb
jo
std
push
enter
das
mov
std
movsl
sub
lds
add
or
inc
mov
cwtl
lret
fcoml
jo
adc
or
adc
int
inc
push
mov
lock
mov
pop
add
dec
dec
jns
in
divl
dec
fidivs
prefetch
or
les
and
ror
or
stos
jg
lds
scas
push
mov
rcl
movsl
or
shlb
mov
mov
repnz
sarl
lock
mov
lea
inc
sub
subb
out
and
outsl
cmp
mov
and
dec
cmpsl
add
or
adc
jb
or
and
push
lea
fdivr
sub
outsb
lock
push
pop
xor
adc
jl
xor
cmc
ds
lea
jno
mov
mov
popa
and
roll
mov
mov
jecxz
and
out
dec
jb
outsl
adc
mov
mov
js
inc
mov
cmp
push
stc
pop
mov
mov
xchg
dec
dec
aaa
hlt
mov
sub
jne
mov
mov
rorl
test
jae
mov
jle
sbb
adc
cwtl
xor
dec
testl
dec
std
jge
mov
cmpsb
or
dec
mov
int
aad
mov
jno
cmp
mov
in
jbe
pop
jecxz
mov
or
cli
push
rcrl
xchg
lret
nop
push
fs
sbb
inc
mov
cli
xchg
or
or
and
cmp
lcall
hlt
cmovl
stos
cmp
and
icebp
mov
out
and
inc
jo
xor
adc
and
cltd
mov
add
and
mov
dec
mov
xor
jl
cmpsl
push
pop
mov
xor
repnz
push
push
hlt
jle
push
mov
pop
lds
or
outsb
xor
and
shlb
cmp
ljmp
inc
into
mov
mov
dec
stos
das
fwait
push
pusha
xchg
mov
mov
test
sub
and
call
jbe
inc
mov
loopne
mov
adc
mov
cmp
adc
fs
addr16
repz
or
adc
ret
clc
xor
imul
and
lea
add
jnp
int3
xchg
lret
clc
xor
dec
leave
and
xor
daa
sub
adc
dec
jecxz
out
xchg
fmul
adc
lds
cmpsl
mov
push
xor
out
jle
rcrl
add
mov
inc
addr16
sti
movsb
dec
gs
and
out
push
rclb
add
sub
arpl
insb
imul
xor
cmp
inc
pop
stc
push
add
mov
cmpsb
adc
out
sub
lods
jecxz
ss
jbe
cmp
dec
lret
out
in
xchg
and
and
mov
jg
mov
rorb
clc
add
pop
test
push
mov
pushf
daa
sbb
sub
mov
popaw
aaa
cmpsb
addl
jecxz
fwait
aad
push
mov
inc
adc
cmpsl
into
stos
jp,pn
rorb
test
sbb
inc
dec
cld
out
fcmovu
inc
add
jne
iret
sbb
imul
out
sub
cld
jp
dec
or
lret
adc
xchg
adc
aaa
flds
out
push
or
sbbb
sub
mov
and
movsb
cmpsl
gs
enter
mov
enter
push
sbb
cmpsb
pusha
js
add
xor
loop
hlt
ficoms
dec
adc
jge
xor
movsl
jmp
test
loopne
imul
xor
add
arpl
imulb
loopne
pusha
cwtl
addb
gs
jecxz
popf
cmp
pusha
imul
out
out
in
out
int
mov
add
mov
adc
test
test
push
cmp
data16
pop
push
pop
cwtl
xchg
xor
fbld
mov
sub
pop
or
outsl
sar
mov
push
test
mov
aaa
sbb
jmp
ret
lret
xor
test
stos
sbb
or
inc
push
iret
push
icebp
mov
addr16
ret
sbb
dec
pop
xor
dec
adc
mov
mov
rclb
jp
dec
xchg
repnz
cmc
jno
sub
cmc
inc
psrad
outsl
push
sbb
nop
jp
jb
fsts
jb
and
inc
ret
and
mov
fsts
dec
mov
in
outsl
stos
rol
inc
push
pop
cli
insl
daa
jle
shl
fwait
ds
repnz
inc
mov
arpl
sarl
enter
ret
je
xchg
cwtl
mov
pop
popf
push
daa
add
adc
cmp
in
sub
insl
mov
int3
ficompl
sti
out
cmp
xchg
in
pop
jp
out
test
sbb
jl
xchg
loopne
add
xchg
ljmp
and
cmp
ja
sbb
in
adc
or
mov
mov
in
adc
das
mov
xor
add
pushf
inc
test
sub
pop
cmpsb
push
inc
jg
mov
sbb
mov
sbb
dec
mov
mov
fldt
insb
sahf
sbb
mov
jb
jae
sbb
and
out
adc
sbb
xchg
call
sahf
xchg
stc
std
jo
lock
sti
xor
out
aad
ljmp
shll
div
lock
adc
add
loop
dec
pop
push
adc
lods
dec
fimull
mov
xor
lock
mov
adc
scas
icebp
mov
fimull
aam
cli
jb
or
push
lret
int3
push
inc
popa
pop
aad
out
sub
add
imul
xchg
es
out
sub
ja
adc
or
orb
push
sarb
lea
push
je
int3
cmp
inc
xchg
and
int
divb
dec
lcall
push
loope
shrl
pop
sub
xlat
xchg
fcoms
icebp
and
lods
xchg
fwait
pop
imul
xchg
adc
dec
mov
aad
ja
mov
lahf
icebp
outsb
inc
je
push
mov
mov
arpl
pop
sbb
fnsave
and
in
pop
das
or
inc
mov
xchg
inc
and
pop
aam
push
ficoms
daa
in
sub
and
inc
mov
xchg
cmp
and
mov
add
mov
push
stos
imul
jo
out
sub
cs
jbe
add
mov
shrb
ljmp
icebp
jle
fsubr
pop
jne
roll
addr16
dec
mov
fsubp
add
pop
insl
fidivs
pop
dec
lahf
addr16
fcmovbe
fistpl
ss
inc
xor
gs
xchg
std
cli
push
push
inc
push
pop
pop
std
nop
icebp
insl
add
xchg
push
pop
push
stos
cwtl
loop
rorb
ss
ucomiss
cltd
out
inc
rclb
push
ret
dec
das
cmp
add
cmpb
cmp
jmp
das
pop
xchg
in
mov
inc
mov
xchg
ss
mov
add
push
sar
inc
jns
fwait
xchg
and
ds
rol
jbe
lods
mov
cltd
es
jo
lods
js
das
icebp
push
jmp
outsb
and
outsl
mov
mov
daa
loope
xor
adc
add
in
sub
dec
mov
stos
xchg
pop
imul
dec
sub
mov
and
sahf
xor
pop
into
mov
jmp
data16
add
push
ja
mov
pop
mov
cltd
nop
test
xchg
fnstenv
jmp
jmp
imul
sub
cmp
or
xchg
xchg
call
cmp
lods
insl
out
inc
clc
xchg
lret
add
mov
iret
ljmp
test
ds
add
stos
push
pop
aam
fcomip
test
hlt
jae
into
mov
mov
repz
xlat
pop
mov
mulb
jge
mov
pop
movsl
mov
lcall
int
xor
cmc
mov
xchg
repz
push
popf
mov
cld
into
mov
ljmp
and
xchg
cmp
dec
jns
fisubrl
gs
xlat
pop
movsb
cmp
pop
pop
and
push
das
insb
sbb
ret
cmp
shrb
inc
mov
out
cmp
pop
mov
dec
loopne
shr
mov
out
cltd
mov
pop
jae
ret
ja
test
clc
xor
sbb
gs
mov
pop
inc
adc
jno
mov
ret
xchg
cwtl
dec
sbb
dec
mov
out
sarl
and
cli
push
fs
mov
popf
aas
movsb
test
push
shll
add
cmc
mov
adc
cmp
popa
cmp
outsb
sti
hlt
xor
push
clc
pop
jge
sbb
mov
xlat
push
fstpl
and
mov
mov
adc
mov
push
mov
vrsqrtss
and
cmp
pop
rcl
movsl
sarb
xor
imul
in
xor
dec
add
mov
push
xor
aaa
push
and
mov
sbb
std
xor
sub
inc
or
nop
rcrb
sbb
cmpb
dec
pop
push
mov
cld
push
outsb
stos
mov
jmp
xchg
out
pop
ret
std
push
ret
sub
daa
or
mov
mov
in
notb
push
and
lret
xlat
out
lods
enter
xlat
cli
xchg
movsb
icebp
mov
pop
sbb
mov
push
push
ret
scas
shld
jle
sbb
xchg
adc
xchg
sar
and
dec
mov
in
test
inc
aam
push
fldl
push
inc
fwait
cltd
cmp
not
sbb
dec
push
les
les
imul
gs
push
pop
in
movsb
pop
incl
mov
shlb
mov
pop
inc
std
test
movsb
daa
ffreep
je,pt
xchg
movsl
popf
ffreep
xchg
test
jmp
xorb
or
pop
negb
insl
cmp
outsl
lea
cmp
popf
xor
dec
addr16
sbb
inc
pop
xchg
jp
mov
int3
adc
cmp
adc
add
jne
ret
out
push
insb
test
lret
xchg
test
inc
sahf
jecxz
dec
mov
daa
add
sbb
sub
inc
mov
movsl
les
sbb
out
xchg
add
mov
cmp
or
aad
stos
xor
clc
push
loopne
xor
in
mov
lret
xor
add
addr16
sarb
push
mov
mov
mov
cmpb
sub
mov
and
sub
mov
sbb
mov
cltd
sbb
cmpsl
xchg
lea
jne
mov
and
sbb
mov
or
push
pop
rolb
ss
ret
push
dec
sbb
daa
idivb
repnz
int
out
fnstsw
dec
test
add
adc
outsl
inc
outsb
dec
cmp
or
dec
or
xor
cmp
adc
out
je
ret
test
xchg
aam
imul
pop
fdivrs
pop
ficomps
jmp
outsb
xorb
pop
mov
cmp
daa
push
mov
into
ljmp
inc
dec
inc
repz
cmp
lcall
and
mov
pop
pop
aad
push
xor
dec
cmp
jecxz
adc
leave
mov
jge
stos
xchg
test
stc
addl
je
sti
cmpsl
adc
jae
mov
jp
clc
and
imul
fadd
or
cmp
adc
fs
mov
inc
dec
cs
out
and
je
xchg
adc
pop
aas
sti
out
cmp
pop
add
pop
mov
ja
ficoms
ljmp
imull
lock
xor
mov
shlb
pop
addl
inc
and
movsl
jmp
rcrl
xchg
inc
sbb
pop
push
inc
mov
leave
push
push
pop
sahf
push
scas
sbb
xchg
mov
out
mov
lods
xor
mov
movsb
sub
cld
sti
fidivrs
jbe
jmp
dec
or
rclb
dec
repnz
les
je
inc
or
clc
int
push
dec
and
cwtl
call
and
lret
mov
dec
sbb
xchg
fucomi
popf
movsb
cli
push
push
lcall
pop
push
hlt
fdivrp
mov
call
leave
std
fs
mov
addb
movsb
decl
cmp
pushf
add
dec
lods
and
daa
push
stc
lret
mov
ficompl
adc
push
icebp
jecxz
xlat
jge
hlt
jg
mov
push
jo
mov
stos
xor
test
push
int3
lods
cmp
xor
lock
fisttps
ffreep
sbb
leave
dec
mov
outsb
sahf
cmp
xor
lods
sti
out
inc
and
out
adc
cmpsl
in
inc
rcl
pop
xorl
pop
in
mov
sub
push
pop
add
mov
adc
sbbl
popa
and
mov
idivl
sub
jle
scas
cmc
pop
testb
adc
jae
pop
dec
pop
mov
push
push
das
mov
cmp
fldt
jg
hlt
and
mov
inc
add
rcrb
pop
dec
add
out
pop
mov
sub
push
cltd
dec
in
inc
pusha
arpl
cmp
pop
mov
xor
or
insb
ret
cmp
pop
call
arpl
cwtl
cmp
jmp
jns
adc
pop
push
jmp
lahf
out
mov
nop
xchg
cltd
sbb
movl
out
cmp
push
mov
data16
aad
cmp
mov
arpl
xchg
push
enter
jecxz
mov
push
das
sub
pop
aam
ret
in
cmp
inc
sbb
pop
cmpsl
scas
cmpsb
push
lcall
stos
int3
lods
aaa
pushl
jb
nop
adc
stc
insl
aas
jp
mov
mov
pop
xlat
loope
sub
fmuls
push
test
imul
cld
jo
addr16
pushl
push
jo
inc
mov
mov
add
push
mov
outsl
test
add
pop
and
in
inc
sub
pop
outsb
shlb
inc
iret
insb
inc
clc
mov
aam
pop
int3
dec
inc
in
adc
aad
js
jp
popf
cld
cs
test
aaa
das
mov
push
test
xor
push
mov
mov
dec
inc
xchg
mov
push
and
dec
pop
xor
pushf
enter
ret
inc
sahf
xchg
and
adc
add
add
stos
push
iret
dec
inc
sub
lods
xlat
in
or
sub
aaa
dec
push
ljmp
clc
lcall
hlt
sarb
repnz
mov
out
loopne
mov
mov
arpl
sbb
incl
shll
negl
enter
std
rcrl
shl
aaa
sahf
mov
jecxz
or
push
and
mov
out
cmp
push
xchg
mov
das
mov
and
pop
pushf
cld
sbb
xor
cmp
shrl
or
les
xchg
sub
lret
dec
or
or
xchg
fs
and
cwtl
pop
add
adc
loop
stc
sar
mul
lea
shrl
in
fstp
mov
cld
pushf
or
sbb
pop
insb
lret
inc
shl
sub
cmpsb
push
scas
rorb
xchg
stc
inc
daa
xchg
xor
and
jns
push
dec
inc
jnp
pop
dec
adc
mov
or
stc
or
ret
mov
jae
push
pop
cmp
sbb
ja
ret
pop
sbb
push
pop
xchg
mov
les
loope
fucomip
cmpb
js
insl
jmp
cmc
pop
xchg
dec
inc
inc
ss
mov
in
leave
std
pushf
vpandn
nop
das
push
std
pop
movsb
mov
cwtl
xchg
loopne
les
jmp
lea
andl
pop
inc
shll
mov
movsl
ret
fisubl
int
or
test
shrb
int3
dec
pusha
push
push
mov
fcoms
jg
out
idivl
pop
and
je
xchg
inc
mov
xchg
test
inc
adc
icebp
sub
mov
outsb
stos
arpl
cli
mov
test
sar
sub
cmp
add
cmpsb
cmc
xlat
outsl
jmp
lea
xor
jecxz
push
mov
sti
and
add
cmp
mov
notl
rcrb
cmpb
shrl
mov
inc
add
xor
lahf
dec
pusha
flds
clc
xchg
data16
jmp
mov
add
jno
nop
sbb
inc
imul
test
or
loopne
mov
add
int
lcall
mov
dec
mov
pop
xchg
cmp
push
mov
icebp
dec
imul
cli
pusha
xchg
mov
data16
mov
fwait
mov
jecxz
in
push
cmpsb
lods
dec
or
in
jge
add
inc
pop
stos
or
cld
mov
mov
loope
mov
into
out
dec
inc
mov
or
mov
cli
popa
and
pop
ftst
cmp
pop
cmpsb
sbbl
lods
cmc
aam
fldt
scas
jle
incb
in
xor
xorb
pop
stc
addr16
test
sbb
dec
jle
movsb
cmpsb
into
out
in
icebp
lods
sub
jl
test
pop
push
sub
add
add
jb
fiadds
pop
pop
shll
sub
jmp
cmpsl
mov
sbb
mov
xor
inc
gs
shrl
jle
dec
in
into
lock
mov
adc
nop
jne
mov
xchg
mov
repnz
pminsw
sbb
and
inc
rolb
xchg
dec
jmp
ror
in
divl
fstpt
out
adcb
lcall
pop
addb
xchg
test
daa
test
push
sti
popf
dec
pop
mov
and
dec
dec
movsb
cmp
dec
xor
add
jo
loop
stos
mov
add
test
mov
outsb
mov
int
out
xchg
ret
xchg
sub
push
adc
mov
stos
movsl
xchg
test
jl
out
mov
fwait
int3
jge
stos
leave
pop
push
jge
shlb
std
inc
test
dec
cli
xor
mov
sahf
clc
pop
and
cmp
mov
ss
pushf
mov
xchg
in
leave
stos
push
gs
cmp
cmp
pop
jno
testb
pop
push
xchg
xchg
in
sahf
stos
ja
mov
mov
data16
test
mov
loop
fisubrl
xor
aad
testb
jns
out
mov
pop
sub
movsb
aaa
cld
popf
xchg
push
dec
gs
sbb
inc
daa
cmp
mov
icebp
sbb
mov
ret
jge
int3
or
cmp
imul
das
dec
or
cld
insl
in
in
pop
icebp
std
cmp
jae
lock
arpl
jo
lahf
push
out
sub
test
loopne
mov
jae
sub
in
inc
pop
jecxz
sahf
imul
and
lods
and
inc
cli
mull
hlt
mov
xchg
lods
bound
jns
mov
mov
xor
fiaddl
adc
imul
adc
cmpsb
dec
add
aad
pushf
cmp
mov
fcmovnbe
dec
insl
fwait
push
cmp
leave
inc
xor
jno
mov
negb
xchg
jns
mov
adc
and
inc
insb
sarl
mov
jnp
daa
xchg
adc
cmp
and
cmc
push
in
sub
push
or
fcmove
mov
cmc
cltd
rolb
in
xchg
lock
mov
push
xchg
xlat
xchg
mov
push
xchg
jecxz
mov
and
ss
add
inc
cmp
add
jg
pop
dec
xchg
mov
mov
pushf
jnp
fcoml
jno
fisubs
mov
mov
ljmp
or
add
addr16
mov
xor
in
xchg
bound
fwait
test
push
cmp
inc
mov
sbb
sub
push
loopne
dec
mov
ds
stc
mull
mov
shr
xor
shl
lock
roll
dec
es
push
add
push
pop
bswap
cli
shrb
pop
mov
inc
mov
fdivrl
adc
xchg
into
dec
xor
sar
imul
fscale
std
sbb
mov
mov
xchg
adc
stos
mov
mov
or
pop
xor
icebp
scas
fmull
xor
fnsave
inc
lret
clc
notl
mov
mov
sub
loop
test
mov
add
in
pop
decb
ficomps
leave
ds
dec
adc
xor
negb
inc
mov
xchg
mov
push
push
mov
inc
adcl
mov
adc
xchg
push
test
xchg
js
pop
mov
sub
xchg
jmp
in
dec
js
jae
jae
testb
and
callw
pop
ljmp
test
dec
ljmp
inc
mov
lcall
jbe
imul
insb
add
shll
test
sbb
and
mov
hlt
jge
pop
or
test
pop
add
jp
jns
jo
adc
movsb
or
sahf
mov
aad
outsl
stc
jnp
pushf
adcl
les
push
popf
pop
mov
xchg
mov
insb
imul
shlb
in
push
ret
into
push
aad
mov
bound
push
and
and
push
in
sbb
xchg
push
jbe
ds
add
sub
cmpl
mov
test
xchg
out
shrl
jns
push
bound
leave
cmp
inc
jo
repz
inc
push
cmp
inc
stc
dec
lea
and
les
rorl
mov
mov
mov
enter
cmp
popf
cs
xchg
and
arpl
icebp
xchg
popf
xchg
adc
nop
loope
js
jl
decl
insl
adc
mov
mov
movsb
push
mov
sahf
xor
add
lea
shll
add
sahf
jb
mov
sbb
std
or
mov
add
mov
dec
pushf
gs
ficoml
cltd
mov
lret
add
cwtl
fnstenv
xchg
xor
jmp
push
adc
xor
dec
xor
xchg
sbb
dec
jmp
mov
rcr
xlat
lods
call
push
push
cli
push
in
jmp
sub
xor
push
fistpl
outsb
inc
roll
lcall
dec
and
mov
add
mov
mov
jb
push
push
mov
ret
movsl
inc
and
jmp
ret
arpl
inc
notb
jb
imul
lods
sub
cmpsl
ja
fcmovb
shll
int3
in
and
repnz
xchg
or
sub
les
mul
dec
xchg
mov
scas
mov
jbe
stos
or
and
scas
dec
pop
pop
add
cmp
dec
jmp
stos
int3
adc
pop
ljmp
notb
jl
jl
push
addr16
mov
in
divb
int
jb
cmp
testl
sti
cmp
pop
idivb
stos
mov
dec
or
sub
dec
out
xchg
fwait
sub
mov
ljmp
xor
mov
stc
loope
adc
mov
jno
mov
std
adc
pusha
cmp
decb
aad
push
jl
movsb
rorl
jg
mov
pushf
and
mov
cmp
leave
or
testb
cmp
mov
adc
adc
fs
cmovs
jl
lcall
push
lcall
sub
mov
push
nop
pop
sub
pop
add
cltd
or
ja
out
fwait
cmovb
inc
xchg
xor
mov
ret
push
lods
mov
add
push
outsl
dec
mov
xor
cmp
es
mov
jns
addr16
inc
dec
pop
out
pop
dec
sbb
fsubrs
test
aad
pop
insb
dec
fcoms
clc
stos
outsb
inc
pop
imul
stc
aaa
pop
in
pop
movsl
loope
dec
pop
lcall
es
ret
cltd
and
mov
dec
fmull
je
insl
out
ret
cld
cwtl
jle
mov
inc
sub
ficompl
xchg
sbb
mov
repz
jecxz
cli
mull
sbb
lods
push
adc
test
pop
sbb
dec
lahf
xchg
adc
xchg
lea
in
jle
xchg
aas
clc
movl
cmp
xchg
mov
popa
imul
test
cmp
fnstcw
jmp
pop
and
out
data16
test
ror
andb
shlb
repnz
imul
cld
sbb
inc
inc
pop
je
or
mov
push
pop
dec
pop
std
shl
stc
xchg
clc
and
cs
scas
inc
xchg
add
pusha
cmp
int
js
clc
cmp
xchg
idivl
je
xchg
out
push
pushf
loope
sbb
fildll
das
dec
xchg
adc
negb
sub
cmp
cmp
mov
adc
jne
inc
push
js
pop
push
out
sub
inc
xlat
add
xchg
fstp
divl
jp
cmp
xor
daa
pop
mov
inc
and
fdivs
bound
add
sbb
dec
loop
add
pop
jp
mov
jmp
jbe
mov
sahf
push
mov
adc
push
aam
filds
xor
adc
push
mov
or
or
sub
mov
cld
pop
adc
jnp
cmp
and
aam
jge
out
int
pop
test
sahf
lea
lds
mov
mov
das
pop
loopne
and
mov
repnz
xchg
jl
aad
fldl
mov
loope
stos
or
out
push
mov
ljmp
jl
fists
test
out
xchg
push
and
out
dec
mov
mov
shll
jo
test
adc
push
mov
cli
repz
mov
inc
outsl
iret
clc
pop
cmpsb
aad
inc
shll
dec
dec
loopne
jbe
cmp
lea
add
cmp
jb
cmc
jle
or
ret
cmp
xor
in
rclb
push
imul
sub
insl
xor
mov
and
mov
leave
xor
jne
mov
jle
das
dec
inc
std
ja
in
addr16
out
mov
pop
mov
fimull
cmp
sub
lahf
cmp
inc
insb
scas
mov
add
mov
xchg
insl
into
iret
and
bound
movsb
inc
mov
inc
ret
lods
mov
push
or
pushf
push
sub
push
loop
pop
mov
push
loope
xor
pop
or
add
push
pop
pop
mov
icebp
outsb
lods
inc
cmc
icebp
ret
inc
sub
sbb
out
lahf
test
popa
dec
adc
pop
fisttpl
pushf
inc
aas
insl
insl
lea
insl
insb
leave
and
mov
dec
int
mov
lcall
jg
or
int
loop
xchg
mov
cmp
or
loop
or
aaa
popa
mov
icebp
popf
les
pop
or
pop
neg
or
nop
xorb
loope
add
push
ja
dec
aas
in
cmp
xor
xchg
cmp
dec
mulb
cmp
or
jmp
mov
loope
ficoms
movsb
cli
pop
pushl
sub
push
xchg
mov
jle
clc
push
sbb
jns
push
pusha
stos
xlat
jb
cvttps2pi
out
inc
xor
dec
inc
popf
cmc
xchg
sub
lcall
repz
shll
and
in
mov
dec
hlt
lcall
ret
mov
cmp
mov
pop
push
ja
add
adc
psubusb
test
jge
lods
pop
lret
add
dec
faddl
ljmp
jg
outsl
jecxz
pop
mov
pop
xchg
jp
ja
adc
and
jo
pop
jmp
aad
cltd
and
clc
add
aam
xor
push
sub
test
cld
in
fbld
push
fwait
dec
push
jb
mov
and
adc
mov
pusha
testl
je
je
fisttpl
stos
and
dec
mov
jae
or
bound
push
popa
mov
sbb
data16
je
jl
clc
rcrb
mulb
insb
lods
stos
push
cmp
add
popf
jecxz
pop
add
xchg
push
pop
addr16
gs
sub
sub
adc
aam
adc
pop
imul
call
or
ss
ret
add
mov
ljmp
xor
pop
fdivr
mov
dec
in
mov
mov
push
lods
test
cli
mov
dec
mov
in
sbb
push
push
push
out
out
shll
fcomp
jmp
cmpb
imul
xchg
fs
jg
test
loopne
enter
in
cmpsl
lock
push
mov
int
cmpsb
inc
push
xor
mov
mov
fcmovnu
fisttps
xor
mov
mov
add
mov
imul
push
addr16
inc
adc
jle,pt
rclb
lock
and
pop
lret
fs
icebp
dec
cmc
or
push
mov
add
or
out
sbb
push
inc
add
ja
std
jmp
dec
jecxz
mov
adc
xchg
cld
ret
fmulp
lock
imul
mov
mov
push
decl
or
mov
and
out
jbe
inc
testl
pop
add
out
test
or
or
cwtl
add
cmpsl
inc
push
fldcw
dec
lods
or
insb
in
out
adc
or
mov
popa
lds
sub
or
pop
dec
lods
pop
lds
into
jg
inc
dec
pop
inc
arpl
pop
inc
pushf
pop
fmull
in
lds
inc
das
test
sbb
nop
mov
jge
outsb
out
pop
mov
lods
cld
lods
rclb
jle
cmp
cmc
stos
test
mov
cs
inc
mov
movsl
sbb
or
movsb
add
jns
sbb
sub
fcoml
mov
orl
pop
inc
movsb
jg
adc
cmp
or
imul
aaa
clc
lods
cmpl
hlt
dec
clc
push
adc
pop
pop
add
in
xchg
adc
fidivrs
lret
xorl
loop
pop
mov
mov
jno
std
dec
jae
lret
pop
fs
pop
mov
inc
lcall
pop
lds
mov
pop
test
mov
dec
lods
out
jae
and
cmp
mov
add
xchg
scas
loop
adc
pop
jle
andb
push
lea
inc
sub
dec
xchg
setnp
add
sti
push
dec
jns
ficoml
xchg
sub
jns
mov
cmp
mov
inc
jns
insl
xorl
fsubr
xchg
fstpt
sub
pop
mov
out
jbe
cld
pushf
fmul
mov
js
lock
pop
cmpsb
test
icebp
mull
imul
cmp
stos
daa
nop
mov
test
fadd
cmp
xorb
push
mov
fmul
test
cmp
aaa
inc
jns
decb
lds
fstps
xchg
ret
jb
arpl
mov
mov
and
lcall
jle
std
outsb
mov
inc
adc
aam
ljmp
inc
icebp
mov
or
cmp
add
scas
xor
in
rcrl
pusha
push
sti
and
stos
gs
add
xchg
pop
aaa
fisubrl
and
push
icebp
aas
rcll
ficoml
loop
inc
aas
decb
in
leave
adc
jnp
fsubrl
sbb
ljmp
adc
lret
enter
inc
lods
cltd
jmp
cs
or
das
and
xor
xchg
sbb
push
xchg
inc
pop
dec
insb
sub
inc
pop
xor
and
add
dec
lods
out
jmp
mov
mov
loop
pop
inc
lret
or
pusha
int3
xchg
and
mov
lret
mov
cmp
int3
or
mov
data16
mov
into
mov
mov
xor
popa
cld
mov
jno
hlt
add
inc
shrb
push
mov
jg,pn
rdtsc
sub
cmp
xor
push
push
lret
hlt
dec
inc
dec
cmp
out
andl
mov
cmpsb
jne
cltd
push
mov
push
mov
cmp
xchg
cltd
and
inc
daa
jecxz
shl
xchg
clc
mov
mov
jae
pop
mov
xor
add
mov
clc
gs
push
push
cwtl
shl
adc
test
adcb
andl
sahf
jbe
sub
outsl
popa
push
cmc
loop
mov
testl
fcoml
push
pop
outsb
sbb
js
insb
mov
or
pop
repz
das
mov
in
cmp
cmp
testb
rolb
inc
pop
outsb
mov
bndstx
push
inc
or
adc
jne
data16
mov
sub
loopne
lahf
mov
lds
mov
imul
xchg
testb
inc
bound
push
testb
stos
and
jmp
dec
insb
sahf
scas
jb
leave
enter
clc
adc
scas
add
mov
test
rclb
mov
pop
scas
and
stos
mov
sbb
insb
daa
push
add
popf
gs
cmpsl
orps
pushf
cmp
in
outsb
mov
inc
repnz
add
or
mov
mov
push
and
clc
gs
push
scas
dec
adc
pop
fimuls
in
dec
and
movsl
mov
xor
xor
repz
shl
icebp
sbb
mov
jg
mov
inc
pop
and
ret
aas
mov
pusha
mov
mov
cmpsb
fisubs
lds
pop
xchg
bound
mov
test
or
xchg
repnz
sub
imul
pop
js
sbb
lahf
in
sarl
pop
imul
enter
pop
push
leave
cmp
andb
push
xchg
sbb
repz
jns
pop
adc
dec
pop
sub
sbb
ds
mov
stc
ds
cld
sub
lahf
jp
mov
push
jns
inc
test
jns
fldl
mov
shrb
sub
int3
scas
sub
sub
add
test
out
out
sbb
test
mov
mov
push
cmpsb
insb
jne
lahf
or
dec
cld
in
insb
pop
int
mov
out
mov
inc
ljmp
add
inc
and
jg
sbb
lods
inc
sub
xchg
stc
xchg
lcall
scas
mov
dec
loope
push
dec
std
xchg
sbb
sbb
pop
dec
outsl
or
xorl
int3
dec
pop
daa
adc
mov
gs
bound
push
das
jae
fisttpll
dec
cltd
xchg
push
icebp
mov
int3
cs
pushf
xor
xchg
in
pop
addr16
jle
inc
pop
mov
mov
mov
add
xlat
push
call
pop
mov
aaa
mov
xchg
jge
add
faddl
inc
xor
leave
cmp
sub
div
mov
cmp
and
lods
stc
push
pop
cwtl
push
jb
xchg
push
int3
dec
or
push
dec
pop
inc
mov
push
or
mov
mov
push
ja
psadbw
and
cmp
push
pop
jne
jle
mov
lret
loop
jns
adc
xchg
mov
cmp
movsl
loopne
in
mov
leave
in
idivb
and
mov
mov
mov
in
test
fwait
mov
mov
mov
mov
outsl
mov
or
arpl
pusha
mov
lods
sti
cwtl
mov
mov
ds
mov
xor
loopne
and
xchg
jbe
push
pop
jns
in
daa
stos
mov
cmp
aaa
rcrl
movsl
clc
or
sbb
and
and
xor
repnz
aam
cli
hlt
das
loopnew
inc
jg
mov
or
and
fs
jmp
out
je
imul
push
loope
jb
fdivl
imul
sub
push
sbb
cmp
push
insb
repnz
xchg
xor
sbb
dec
addl
sti
daa
fnstsw
cli
das
mov
mov
in
insl
call
bound
fdivrs
cmp
cmpsl
jl
mov
cltd
in
cmpsb
int
jg
sub
ds
ror
lods
js
inc
in
pop
xor
and
xor
add
xor
jmp
ficoms
ror
lret
jp
std
cli
std
or
xchg
dec
sti
loope
idiv
xchg
daa
in
dec
jns
adc
mov
dec
sarl
mov
stos
inc
cld
adc
rorl
cmc
nop
xor
pop
and
xchg
mov
add
inc
mov
mov
xorl
test
stc
cs
push
cwtl
arpl
test
notb
test
or
mov
repz
fs
les
fcmovnbe
adc
pop
fnstenv
add
fucomip
mov
sub
sub
cmp
adc
sbb
cmp
cmp
out
dec
sub
pop
addr16
push
sub
filds
jle
xor
pushf
dec
xor
sbb
gs
pop
adc
jb
or
mov
sbb
leave
daa
and
mov
adc
loopne
inc
popa
cmpsl
stc
sbb
insb
sub
je
mov
int3
nop
into
jl
jnp
add
sub
or
mov
fidivs
push
iret
push
js
mov
xor
cmp
sub
aam
jmp
lcall
adc
into
push
cmp
and
xchg
fs
scas
pop
sarb
cmpsl
push
testl
push
rol
lods
dec
cmp
dec
ljmp
push
push
and
mov
and
xchg
sub
inc
add
mov
sbb
sub
aas
inc
hlt
scas
popa
stc
dec
movsl
movsb
shll
inc
cmp
std
adc
pop
lods
xlat
push
inc
or
adc
stc
scas
mov
repnz
aaa
int3
scas
fsubrs
push
or
xchg
push
add
lods
xchg
clc
xchg
ljmp
mov
jno
xor
imul
xchg
std
rcrl
ficoms
and
mov
and
mov
push
std
xchg
hlt
in
div
test
pop
bound
loopne
iret
sub
xor
cmc
imul
xor
or
mov
mov
sahf
ret
sub
pop
gs
xor
out
dec
shll
mov
xor
fldt
jae
pop
jns
outsb
and
imulb
cmp
ret
cmp
add
and
sub
ret
xchg
mov
cmp
inc
cwtl
ja
into
pop
stc
mov
rorl
and
stos
and
movb
mov
xchg
inc
je
pop
cmpsb
testl
mov
fisubs
jle
or
add
imul
cs
mov
test
jecxz
and
fimuls
gs
push
mov
mov
pop
push
jbe
xor
jnp
out
scas
test
mov
pop
xor
inc
jb
or
or
mov
stos
jo
dec
loopne
cmpsb
cmp
sbb
xchg
add
and
lret
das
leave
xchg
dec
mov
dec
inc
test
or
and
ja
xor
cmp
ljmp
iret
or
fucomip
test
inc
sbb
or
xor
inc
ja
mov
test
sub
stc
cwtl
daa
std
rcrl
mov
shlb
sahf
cmp
xor
xor
push
xor
movsl
scas
sub
cmp
les
movsb
mov
adc
addr16
pop
jg
bound
loop
or
xchg
data16
negl
adc
add
inc
xchg
clc
scas
pop
cmp
mov
xchg
mov
ds
rcr
jbe
sbb
vunpckhpd
cmp
mov
cltd
xchg
and
lock
fcmovnu
subb
fdivp
cli
or
aaa
gs
and
test
shll
loope
mov
sbb
jnp
aaa
adc
push
cs
mov
push
xchg
mov
loopne
lret
jae
xchg
cmpsl
gs
rclb
cmp
repnz
sarl
shlb
xor
push
adc
jae
pop
adc
sbb
dec
jo
data16
mov
dec
mov
lods
pop
xchg
and
addr16
sbb
out
pop
out
cld
mov
les
xchg
divl
mov
xchg
bound
mov
mov
cmp
pop
out
sub
hlt
outsl
mov
and
imul
xor
orb
mov
and
fidivrl
and
mov
mov
or
and
stos
fs
sbb
adc
push
fcmovu
jae
loop
pop
out
fs
xor
mov
ja
push
add
sbb
push
and
sbb
cmp
ds
push
jle
ds
movsl
stos
pusha
in
xchg
popf
out
add
xchg
mov
mov
sbb
pop
aam
iret
xor
dec
int3
cli
lods
xchg
add
inc
push
lcall
daa
push
outsb
call
cmpsb
pop
and
push
loopne
pop
pop
mov
pop
push
inc
notb
cmpsb
clc
adc
mov
gs
stos
dec
mov
jae
ss
fmul
mov
std
testb
push
out
inc
sub
and
ja
cmp
ss
jno
jge
insl
jno
shrb
test
cmc
outsb
push
fadds
stc
pop
repz
pop
push
in
rcll
push
cs
outsl
push
cld
ret
enter
add
add
in
mov
jnp
ss
ds
ret
pop
out
dec
mov
out
loopne
sbb
icebp
mov
fisttps
rolb
fisubl
mov
pop
rcrl
adcb
sbbl
shll
nop
and
cwtl
jmp
fists
xor
cmp
shrl
pop
adc
ja
mov
popa
insb
dec
cmc
loop
mov
ljmp
imull
ja
iret
jno
push
mov
sub
adc
or
jo
aam
lret
xchg
lds
int
ficompl
mov
ljmp
mov
or
stos
cmpsl
xor
mov
out
icebp
cmp
dec
xchg
xchg
pop
sbb
je
jne
push
cs
pop
insb
adc
into
inc
lds
mov
dec
mov
pop
hlt
cld
aas
sbb
lds
out
shlb
pop
fbld
ss
sub
jae
cld
dec
inc
sbb
adcl
sti
cli
xchg
iret
push
or
or
clc
jmp
iret
fcoml
push
repz
mov
mov
xchg
push
aam
mov
bnd
sbb
pop
repz
lcall
cmp
cmpsb
pusha
es
xchg
aaa
insb
xchg
mov
jae
jge
mov
adc
insl
ror
fwait
pop
dec
add
or
mov
adc
test
sub
fistps
jle
test
sub
xchg
mov
jne
pop
and
mov
ret
fidivs
int
shrl
xchg
dec
mov
fmuls
test
push
pop
sub
rclb
sbb
add
lods
nop
inc
cmp
mov
xor
jb
jb
or
push
jno
push
add
stc
mov
hlt
and
dec
cs
lock
inc
pop
adc
cld
mov
cld
dec
sti
cmp
loope
fisubl
js
sbb
dec
cmp
adc
jbe
outsb
into
pop
push
add
fstpl
clc
imul
out
movsl
xor
mulb
fisubrs
add
dec
aaa
insb
adc
sub
stc
cld
stc
iret
mov
sbb
or
push
stos
shlb
and
sbb
icebp
fs
into
push
pusha
xchg
daa
dec
dec
sbb
add
dec
pop
push
sbb
jge
mov
push
cwtl
mov
cmpsb
jb,pn
xchg
and
pop
mov
lret
lea
test
in
mov
push
mov
adc
fsubp
push
dec
movsb
stos
scas
jle
dec
rcr
dec
pop
push
or
adc
xchg
jbe
daa
and
cmp
sub
aam
mov
fimull
push
repnz
add
movsl
fwait
pop
xchg
lds
pushf
mov
sub
push
mov
jbe
lcall
mov
cltd
mov
rclb
cmp
mov
pusha
xchg
xchg
pop
cmpsl
pushf
int3
fs
shll
cmp
mov
cltd
mov
mov
sub
cmp
imul
sbb
and
decl
loop
aad
mov
adc
push
test
lret
cs
sub
popa
xor
lahf
push
inc
bound
sub
push
sti
xor
ds
lcall
dec
in
lea
mov
xchg
adc
fistpl
add
jo
xor
fs
sub
arpl
ds
push
imul
aad
incb
js
cmp
lcall
js
data16
mov
cmp
fnstsw
mov
push
xchg
or
push
lods
mov
stc
jns
or
imul
scas
inc
jno
cmp
adc
jns
stos
jle
jg
mov
lret
push
ficomps
and
inc
push
pushf
cmpsl
push
push
bound
dec
test
push
lret
or
out
add
xor
je
pop
shlb
pop
dec
push
imul
fadds
pop
addr16
das
fwait
cmp
inc
leave
xlat
insl
ret
pop
fs
out
lea
push
push
inc
jno
loope
cmc
pop
jnp
mov
ljmp
mov
pop
ja
jge
dec
and
fxch
or
pop
test
mov
add
int
outsl
xorb
andb
ds
mov
adc
and
bound
cmp
neg
adc
movsl
ret
fildll
pop
dec
jbe
in
scas
leave
loope
push
sub
test
cwtl
cmc
in
jp
sbb
enter
dec
mov
pop
mov
jnp
add
scas
and
adc
js
mov
xchg
and
test
sub
andb
lahf
iret
mov
idivl
dec
lds
cmp
push
in
push
cmp
add
sub
sub
mov
movsl
push
adc
scas
push
push
pop
mov
sub
es
sbb
and
loopne
shlb
inc
stc
and
js
pop
and
jmp
add
sbb
cmpl
fbstp
or
mov
mov
jo
fwait
jnp
in
icebp
mov
xchg
cmp
mov
or
push
icebp
movsb
mov
or
pop
daa
add
xchg
jecxz
lea
mov
data16
push
scas
mov
gs
xor
cli
int3
add
lcall
loop
pop
sub
ds
sub
and
std
cltd
popf
add
dec
jno
mov
into
push
bound
outsb
xlat
sub
dec
fisttpl
lahf
xchg
ja,pt
fidivrs
add
push
fcompl
mov
add
and
lcall
push
cmpsl
push
outsl
movsl
add
push
pop
push
cmp
or
ret
xor
add
aas
loop
push
push
fisttps
dec
jmp
leave
pop
ja
cmp
dec
ret
or
and
aad
les
pop
jnp
inc
lret
dec
push
xchg
jp
jmp
iret
cmpsb
nop
xchg
cmp
or
cld
and
fimuls
daa
sahf
test
lret
xchg
jg
fincstp
add
push
xchg
adc
xchg
popf
xchg
addr16
aam
jo
or
xor
xchg
dec
mov
rolb
xchg
sub
push
jb
pop
rorb
sbb
mov
clc
or
lret
xchg
and
inc
and
xchg
cmp
mov
pop
sbb
movsb
sti
inc
xchg
cltd
jne
stos
movb
mov
cmpsb
jo
pop
cltd
push
dec
mov
fistl
into
cmp
stos
les
dec
and
and
sbb
xor
outsb
addr16
int3
xchg
sbb
cmc
add
lret
mov
sbb
cmp
leave
aas
fdivl
add
xchg
cmpsb
scas
imul
xchg
xchg
loop
mov
mov
cltd
iret
and
inc
pop
inc
and
sahf
daa
int3
hlt
test
scas
sbb
loopne
lds
decb
leave
mov
idivl
movsb
jl
dec
and
ror
push
pop
out
stos
jp
pusha
mov
or
outsl
fadds
jmp
inc
or
xor
cmp
fstl
sub
jo
or
js
cli
test
rcrl
cmpsl
mov
inc
adc
lock
lahf
push
stc
cmp
and
mov
sahf
xchg
jne
and
enter
jmp
repz
push
xchg
inc
mov
cmp
mov
and
pusha
inc
jmp
push
inc
cld
xchg
repz
lea
and
push
orb
xchg
fwait
pop
sahf
popf
lods
arpl
andl
inc
or
mov
adc
cmp
cmpb
fbstp
mov
sbbb
or
mov
mov
shll
mov
adc
xchg
sub
decl
lods
mov
aad
push
pop
jae
mov
mov
cmp
dec
pop
outsb
inc
and
mov
lods
shlb
fadd
push
mov
push
lret
hlt
jns
mov
cmp
iret
hlt
mov
dec
das
test
icebp
xor
bound
inc
inc
hlt
push
cwtl
sub
dec
cmpsl
imul
adc
inc
scas
xchg
cmpsl
clc
and
cltd
inc
out
xor
xchg
cmp
jle
mov
xchg
dec
adc
rcrl
xor
xchg
test
movsl
shrl
rcrl
inc
push
cmp
or
cmp
jnp
pop
xor
aad
call
loopne
or
mov
and
fdiv
push
sbb
dec
test
aad
add
pushf
push
xorb
jnp
jl
cwtl
cmp
idivb
loopne
ds
aas
bound
bound
pop
sub
adc
inc
in
test
addr16
mov
and
cs
push
out
or
mov
sbb
adc
sub
pushf
int
faddl
pop
ja
adc
fistps
jnp
rcl
cmp
lods
adc
lret
shl
fimuls
inc
lods
pop
mov
xchg
push
les
inc
inc
out
and
push
cmp
ficoms
inc
loop
scas
adc
nop
sub
add
mov
add
xchg
call
stc
ljmp
adc
ficoms
stos
add
mov
insb
pushf
ja
fidivrs
or
mov
adc
mov
fcmovbe
jo
adc
adc
sti
sub
xchg
adc
ret
and
xor
arpl
sbb
inc
mov
ljmp
xchg
sahf
dec
andb
mov
cmpsb
or
scas
mov
les
mov
loop
cmpsl
test
jns
imul
push
js
scas
out
loopne
jmp
adc
sti
lods
lahf
sub
rcr
dec
jle
add
inc
jne
lea
sub
xor
outsb
daa
lock
cmc
mov
add
jae
and
jl
stos
lcall
and
bound
sbb
push
roll
cmp
jae
ja
adc
mov
icebp
adc
add
adc
das
dec
aaa
mov
xor
out
xchg
aaa
mov
pusha
lret
leave
jno
test
mov
ds
std
dec
sbb
adc
mov
xchg
dec
fldt
sbb
push
jmp
or
popf
in
mov
sub
jne
stos
cmpsl
push
movl
xchg
cmpb
mov
inc
add
xchg
rcrl
mov
iret
nop
cmpsl
sub
fs
and
dec
imul
jmp
pop
scas
hlt
adc
push
push
data16
jnp
push
clc
or
fnstenv
or
xlat
subb
addr16
loope
pop
mov
cmc
movsl
jbe
out
fwait
pop
sbb
jge
inc
cmc
cmpsb
pop
inc
cld
pop
cli
inc
pop
fnsave
popa
hlt
xor
mov
fwait
mov
call
pop
mov
scas
and
rorb
push
loope
sti
mov
dec
lock
incb
div
sub
adc
mov
add
lock
rol
or
jnp
orb
mov
pop
mov
fstps
ljmp
in
or
movsl
je
les
inc
dec
jne
adc
jmp
in
or
enter
roll
inc
movsb
loop
jmp
paddb
movsb
hlt
fbld
mov
test
xor
xchg
aas
mov
stc
ret
lods
xchg
and
lea
imul
inc
or
fucomp
popa
push
add
outsb
fs
lods
inc
das
out
push
lea
test
lea
push
inc
sbbb
cmp
in
sub
lret
jmp
loopne
or
and
not
push
leave
adc
addr16
dec
adc
cmpsl
scas
ret
fidivrl
mov
push
cld
hlt
repnz
inc
je
xchg
inc
fidivl
icebp
mov
mov
adcb
adc
aas
mov
push
add
dec
jne
or
and
ret
xchg
mov
xor
in
mov
xor
fistpll
test
cli
push
or
mov
pop
mov
loop
jle
adc
mov
and
hlt
add
adc
add
sarb
loope
sbb
inc
ljmp
cmp
fnstenv
add
xchg
fmull
ds
cmp
cwtl
stc
pop
insb
add
sbb
jg
inc
popa
sarl
add
int3
andl
jae
lock
mov
inc
aas
mov
in
ljmp
je
jl
lcall
mov
in
das
adc
in
cmp
mov
clc
sahf
iret
and
loop
stos
enter
test
or
mov
xchg
pop
out
aas
push
mov
jns
sub
push
fistl
rorb
movsl
add
pop
and
add
mov
out
int3
adcb
xor
and
sbb
cs
xchg
rorl
push
push
add
dec
or
in
dec
pushf
sahf
mov
jno
pop
or
push
stc
dec
cmp
push
bound
lcall
push
jp
cli
mov
rcll
push
mov
push
adc
stos
xchg
sbb
add
ja
or
mov
lock
enter
sahf
jnp
mov
ljmp
enter
shlb
mov
jae
das
mov
add
sahf
mov
addl
inc
movsl
lahf
sahf
dec
mov
subb
sbb
inc
mov
xchg
sbbl
insb
xlat
das
xlat
push
inc
push
lds
jecxz
jbe
jae
xorl
or
shlb
mov
mov
fbld
test
fcmovnbe
ljmp
insb
dec
mov
or
aaa
sbb
pusha
fidivs
mov
xor
pop
mov
jbe
push
jecxz
sbb
lahf
dec
add
int
cld
sbb
std
jg
cmp
mov
negb
and
cmc
xlat
lods
xchg
decl
jno
mov
sti
repz
inc
jl
jecxz
mov
lcall
dec
mov
xchg
push
insl
sahf
aam
sub
push
push
sub
dec
mov
add
pop
pop
or
aad
test
std
lods
data16
mulb
xchg
adc
add
rcrb
ret
push
cld
sub
lahf
push
mov
cmc
call
and
sti
stc
lret
mov
iret
bound
data16
push
sbb
divb
popf
cwtl
daa
sbb
stos
jnp
into
xchg
xor
cmovae
mov
setp
mov
jns
fs
mov
xchg
dec
jo
sahf
xor
dec
add
outsb
cmp
enter
sti
mov
mov
ljmp
sbb
adc
dec
pop
sbb
ficoml
jbe
divl
scas
dec
subb
test
jle
ljmp
and
mov
out
es
mov
xor
sbb
pop
mov
and
push
xchg
jne
sub
adc
scas
add
call
cmpsb
orb
in
xchg
add
cmp
mov
in
jl
cld
les
out
jg
lds
and
push
jl
ds
ror
mov
popf
mov
lret
mov
push
dec
push
js
loope
cmp
ret
mov
pushl
inc
mov
cmp
mov
and
movsl
add
jle
cmc
leave
daa
mov
add
push
mov
aas
sbb
mov
xchg
xchg
das
push
aad
stc
mov
fisubl
xor
rcll
add
xchg
das
and
in
fnstenv
adc
je
lods
movsb
and
lds
mov
imul
sarb
cmp
xchg
mov
mov
movsl
mov
mov
movsb
sahf
icebp
lret
mov
pop
adc
dec
cwtl
push
add
push
dec
mov
adc
lea
mov
adc
fisttpll
ja
inc
inc
outsb
movb
data16
js
jge
or
push
mov
xor
mov
inc
pop
xchg
repz
dec
adc
loop
inc
std
ret
or
popa
sub
push
stos
test
push
adcl
sbb
filds
data16
nop
stos
rcrb
nopl
mov
ss
sbb
add
iret
mov
fldcw
popf
adc
addr16
mov
sti
mov
lods
inc
lods
test
out
push
sbbb
out
jl
inc
adc
add
and
sahf
mov
ficomps
pop
jmp
sub
sti
xchg
or
pop
fmuls
pop
lret
dec
mov
fnstcw
test
sar
xchg
out
cmp
push
es
idivb
inc
idivl
stos
clc
xor
dec
add
xchg
pop
pop
movsl
inc
insl
push
mov
mov
mov
mov
orl
mov
mov
push
xchg
and
sbb
xchg
test
mulb
inc
ja
test
xchg
stc
push
adc
push
mov
inc
mov
pop
push
out
fwait
inc
mov
add
mov
test
ret
in
sub
mov
sarl
sub
add
push
or
pop
shl
dec
in
mov
push
inc
nop
xor
call
popf
fcomip
out
add
rolb
call
mov
inc
ds
dec
mov
aam
into
dec
imull
mov
jae
mov
push
mov
mov
enter
shll
sub
or
loopne
mov
ret
add
ficomps
add
hlt
xchg
insb
xchg
imul
stos
stos
gs
inc
loopne
pusha
xchg
loope
xor
xchg
movsb
rcrl
or
or
call
mov
int3
cmpsl
mov
push
sarl
mov
jns
pop
xchg
adc
xor
mov
jns
mov
adc
pop
adc
cli
aas
out
out
jo
imul
mov
sbb
add
ss
stos
popf
push
fcoml
nop
xchg
push
cld
inc
ffree
int
sbb
xchg
imul
pop
aam
xchg
add
js
sub
mov
mov
xchg
aad
sbb
dec
lret
jne
in
add
es
scas
cli
mov
fildll
hlt
cs
aaa
iret
enter
imul
mov
sbb
mov
fnstcw
aam
inc
mov
fdivr
popa
js
push
or
or
pop
mov
jg
mov
rcll
std
xchg
nop
cmpsb
inc
leave
dec
cs
ja
mov
stos
ds
adc
sub
xchg
aam
frstor
push
inc
lcall
push
outsb
xor
mov
xchg
jmp
cmpsl
rcrb
out
scas
ljmp
fsubr
or
pop
cltd
xchg
das
cmp
aam
or
sbb
and
ds
pop
jae
xor
rcr
mov
jo
mov
mov
sbbl
push
nop
into
idivb
add
insl
ret
xor
cmp
repnz
cmp
ja
push
pop
lock
pop
mov
loopne
cld
inc
insl
jmp
xor
in
jl
push
xor
jae
push
jge
push
cmp
xlat
clc
jmp
mov
push
dec
sub
shll
mov
mov
orb
sysenter
sub
sahf
mov
or
outsb
mov
ljmp
lret
push
inc
and
rcrl
pusha
inc
sbb
nop
test
les
mov
jb
mov
and
sub
pop
inc
pop
or
sub
stos
push
mov
push
aas
scas
and
push
jo
imul
scas
loopne
js
popl
adc
les
pop
push
clc
roll
or
cmp
inc
test
daa
test
mov
js
lods
mov
rol
out
call
jl
pop
jecxz
jecxz
negb
cmp
out
in
mov
in
push
pushf
pop
xor
inc
sbb
int3
int
lea
add
loope
testl
dec
lret
ja
dec
test
test
nop
js
mov
stos
inc
adc
call
pop
stos
sbb
and
mov
dec
les
shr
int3
or
push
mov
pop
lock
or
and
mov
adc
fmuls
mov
xchg
cmpsb
clc
mov
test
cmc
jnp
cmp
pop
icebp
stc
mov
add
in
xor
clc
stc
xchg
lcall
lods
hlt
push
std
lock
int3
cmpsb
enter
insl
dec
jb
outsb
mov
xor
rolb
jle
cmp
xchg
adc
lods
adc
push
loope
or
xor
xor
aas
and
add
std
repz
pushf
cld
adc
sub
add
push
nop
sub
fdivrl
je
test
mov
cli
out
xchg
out
gs
mov
test
xorl
ljmp
pop
cmp
or
jmp
dec
pop
in
push
das
lret
leave
push
fisubrl
insb
cltd
push
pushf
dec
xchg
popf
pop
jns
mov
lcall
sbb
cli
xchg
sub
movsb
dec
fidivl
lods
mov
dec
mov
pop
xchg
add
out
adc
add
imul
call
sahf
test
inc
or
or
int
sub
add
mov
xchg
dec
xor
addr16
imul
mov
cltd
xchg
pop
push
mov
in
movsl
mov
shll
rol
xor
pop
jmp
mov
adc
and
leave
repnz
jo
or
mov
loope
mov
pop
jge
or
jb
sti
mov
movl
lret
adc
mov
jg
add
pop
xchg
add
in
xchg
mov
jnp
jp
mov
jl
xchg
scas
pop
call
mov
aad
sbb
in
mov
cmp
push
pop
ficoml
jbe
fcmovnbe
or
roll
lahf
cmpsb
jo
sub
push
cld
jno
das
pusha
inc
fnstsw
jnp
adc
jecxz
mov
cmp
bndstx
pop
xchg
xchg
sbb
xchg
adc
xor
cmpsl
lahf
sti
testb
pop
call
push
ja
out
add
stos
push
les
pop
repz
pop
inc
inc
push
inc
aas
fsts
aaa
and
ret
xlat
movsb
test
fidivrl
rorb
adc
and
mov
inc
ja
jmp
gs
push
xchg
mov
subb
notl
sub
fucomp
clc
outsb
lahf
push
insl
lahf
sub
aaa
mov
cmpsb
js
out
mov
loopne
xlat
sub
pop
mov
mov
add
sub
or
push
adc
xchg
adc
arpl
cmp
sti
xchg
mov
lods
gs
xor
data16
sub
nop
or
sbb
adc
ret
xor
nop
fistpll
adc
outsb
mov
fnstsw
sub
sbb
inc
mov
shl
dec
aad
mov
cwtl
ljmp
push
jle
out
mov
ja
mov
or
inc
lea
xor
aam
sbb
dec
in
cwtl
in
mov
sub
rorb
shrl
insb
mov
in
add
mov
fwait
cld
fldl
xchg
pop
xlat
cmc
and
arpl
sbb
imul
std
push
push
gs
inc
pop
adc
mov
xor
and
das
call
and
add
jae
adc
leave
pop
test
enter
and
or
or
and
fcmovnu
cmp
pop
fildll
fiadds
into
aad
testb
ffreep
scas
xor
jge
data16
shll
icebp
jnp
in
xchg
icebp
adc
fistps
ret
std
pop
mulb
add
push
in
and
mov
adc
data16
scas
or
jl
inc
in
in
xchg
pusha
stos
push
add
test
loope
push
rcrb
pop
jne
push
mov
xorl
sub
popa
pop
movsb
inc
xchg
xchg
sahf
cs
sahf
pop
cmp
ja
xchg
cli
xchg
adc
sub
call
or
sti
out
inc
jle
jle
ds
cmp
lods
ljmp
dec
mov
lods
mov
mov
popl
pop
stc
xor
loopne
fisttpll
test
bound
jbe
out
fxch
add
cmp
xor
out
push
sbb
stos
ficoml
push
in
lret
fistpl
pop
cmp
jb
hlt
push
aam
or
adc
pushf
or
cld
adc
es
lods
orb
lock
fnstcw
aad
xchg
jno
and
xor
cli
je
adc
icebp
ljmp
add
push
xchg
repz
insb
pop
mov
xor
enter
in
loope
pop
lahf
sahf
dec
cmp
pop
cmp
inc
add
jle
mov
imul
jge
mov
das
jecxz
std
in
jg
cli
roll
adc
in
loopne
movsb
sub
je
push
mov
or
outsl
loop
pop
stc
je
push
out
lods
sbb
adc
outsl
push
aaa
mov
clc
popa
lahf
popa
dec
adcl
fnstcw
jno
dec
xchg
push
shr
call
jl
nop
mov
les
mov
daa
pusha
push
loop
mov
sahf
jbe
cmp
cmpsb
adc
ror
test
dec
outsb
xor
popa
aas
or
mov
inc
xor
test
insb
jp
or
dec
push
mov
mov
jecxz
cmp
pop
push
test
add
jo
jge
xchg
sub
xchg
xchg
pop
push
jnp
pop
loop
dec
inc
rcr
leave
pushl
mov
test
push
data16
lcall
punpckhdq
faddl
sbb
rcr
movsl
adc
pusha
mov
and
aas
repz
imul
popf
push
int3
aad
cmc
movsb
inc
sub
scas
pusha
inc
cmp
lret
icebp
adc
aad
stos
xlat
dec
sub
das
xor
shlb
cli
and
out
or
add
subl
add
push
loopne
aad
inc
lea
push
push
add
pop
dec
icebp
sub
movsl
imul
xchg
cmpsl
push
testl
adc
subl
mov
je
dec
inc
mov
push
aam
pop
popa
in
or
addl
xor
imul
inc
sahf
mov
icebp
mov
xchg
adc
adc
add
std
jg
imul
outsl
int3
mov
push
push
jnp
clc
mov
shlb
inc
in
push
test
pusha
push
cmp
dec
movsl
shlb
sbb
sub
incb
inc
mov
and
sbb
push
dec
mov
jb
mov
js
pop
sbb
aad
dec
es
aad
imul
outsl
xchg
clc
mov
aaa
sub
call
unpckhps
sub
loope
into
imul
repnz
dec
dec
cs
cmpsb
orl
in
lock
in
cmp
lahf
dec
loopne
movsl
loope
mov
jno
xchg
leave
insl
stc
sub
cmp
test
stos
test
xchg
cld
std
push
jl,pt
push
mov
in
push
or
pop
sarl
xorb
and
jecxz
push
cmp
icebp
mov
jle
jl
mov
sahf
push
pop
jne
loopne
push
cmp
fildll
in
mov
or
fsubrs
into
push
sbbl
cli
add
das
jg
adc
leave
inc
jno
and
pop
outsl
mov
hlt
add
pop
dec
sbb
push
sahf
rol
std
adc
dec
adc
bound
lret
and
lret
sub
test
popf
inc
in
std
xchg
fsubrs
imul
mov
jnp
fs
daa
mov
cmp
sbb
xor
sub
add
jno
bound
inc
loope
mov
jge
aaa
and
push
repz
xor
or
fsub
scas
or
cli
cwtl
aad
fcmovnbe
stc
cmp
or
sub
lahf
sbb
or
call
jb
push
lcall
push
insb
cmp
popa
out
aam
scas
jo
cli
xchg
les
scas
lods
push
pop
shrb
fs
or
cltd
jnp
and
or
xchg
lret
outsb
fs
dec
sbb
xchg
xchg
andb
jmp
loopne
js
mov
flds
mov
sub
add
cmp
pop
xchg
in
jns
mov
sbb
mov
outsl
xchg
mov
aas
std
jle
cmpsb
sub
mov
cmpsl
aam
xchg
loop
arpl
enter
or
or
pusha
and
push
pop
or
cli
sbb
lds
xchg
fdivs
xchg
in
dec
dec
adcb
pop
dec
leave
into
pop
pop
inc
mov
cmpsl
addr16
notb
add
cltd
int3
repnz
stos
hlt
es
insl
mov
ficomps
sub
fisttpll
push
test
lret
adc
rol
jle
push
adc
pop
out
mov
jl
adc
lret
loop
sbb
into
imul
lcall
ljmp
mov
cmp
sbb
inc
std
pop
arpl
xchg
lahf
mov
nop
and
xor
xor
push
sub
pushf
out
xchg
cmpsl
jns
jmp
inc
sub
mov
cli
cmp
notb
arpl
ss
filds
dec
clc
jno
lret
sahf
push
jb
jecxz
xorb
std
dec
pop
pop
and
add
jo
inc
test
inc
mov
cmp
shl
mov
shl
cmpsb
inc
cs
out
mov
add
iret
inc
inc
scas
push
xlat
inc
sbb
scas
out
rorb
push
dec
rorl
mov
and
rcl
call
and
call
mov
push
subb
xchg
pop
sbb
dec
and
cltd
in
test
cmp
cmp
rorl
rorb
stos
xor
mov
adc
pop
mov
leave
in
je
and
jo
sbb
out
cmp
in
jg
sub
cs
dec
mov
fmuls
pop
loopne
mov
mov
shrl
movsl
imul
mov
push
jb
xor
popf
ss
sbb
jnp
mov
es
daa
sbb
call
shll
lahf
loope
cmp
mov
popf
mov
jae
mov
mov
jnp
cmp
lret
push
lds
mov
mov
cltd
jne
shl
insb
xchg
xchg
xchg
flds
sarb
mov
fwait
cli
or
cmpsb
imul
dec
ret
rclb
shrb
add
jp
sti
aaa
cltd
movsb
jnp
xchg
dec
push
scas
xor
outsl
movl
sub
push
mov
arpl
iret
aam
or
faddl
aam
cwtl
lds
cmpsb
cmp
icebp
fsub
pop
inc
mov
mov
test
rorl
test
fmuls
xorl
scas
es
xchg
fwait
pop
aad
shr
fwait
mov
pop
imul
cmp
dec
ret
inc
mov
jb
push
ljmp
and
stos
sub
scas
rol
leave
dec
cmp
mov
xor
dec
sub
stc
lea
mov
push
adc
enter
ret
cmpsb
push
jno
adcl
jne
mov
push
pop
out
mov
xchg
jae
orl
inc
adc
sub
adc
jnp
push
movsl
in
mov
les
sbb
mov
mov
aam
sbb
xchg
roll
call
repnz
call
mov
movsl
and
mulb
leave
sbb
dec
aad
icebp
xchg
push
mov
add
push
xchg
ret
and
aaa
dec
cs
jecxz
cmp
cli
test
mov
pop
mov
adc
mov
adc
push
xchg
adc
cmpsl
and
cltd
scas
sub
add
xor
inc
lea
outsb
adc
outsl
scas
xor
out
ljmp
movsb
push
lahf
lods
jmp
jl
mov
and
mov
push
inc
clc
lock
adc
aas
addr16
das
jns
adc
sub
cli
aas
andb
mov
pop
fnstsw
mov
ss
adc
imul
addl
pop
in
mov
stos
xchg
daa
sub
mov
jle
mov
xorb
add
mov
xor
jl
pop
adc
inc
test
or
push
out
out
add
sbb
xor
lret
jne
sahf
inc
arpl
or
mov
lret
js
mov
jecxz
xchg
fisubrs
hlt
xor
daa
mov
mov
dec
pushf
and
pushf
ja
cmp
mov
sub
mov
std
shrb
pop
fisttpl
int3
adc
sub
addr16
loop
inc
scas
sbb
test
ss
fildl
test
push
pusha
sti
adc
adc
pop
fcomi
out
insb
xor
mov
div
dec
xor
popf
mov
jb
or
in
pusha
cmp
jg
dec
mov
out
fsubp
xor
and
lret
or
fldenv
outsl
and
imul
shll
pop
data16
inc
mov
mov
pop
cmp
data16
or
es
adc
test
pop
mov
dec
or
jne
bnd
fisttpl
add
jecxz
mov
das
inc
cmpsb
push
sbb
scas
lret
add
movsb
pop
stos
pop
cs
fucomip
pop
pop
mov
push
daa
push
hlt
push
iret
add
sti
popf
insl
adc
pop
loope
ret
imul
fstps
mov
jp
loope
xchg
pop
dec
pop
mov
rcll
clc
and
lds
sub
add
std
out
fbld
cmp
sub
lods
and
std
push
jb
iret
jbe
inc
roll
loop
out
leave
lea
dec
push
xchg
pop
cmp
in
cmp
fiaddl
repnz
cltd
sub
stos
jg
sbb
dec
xchg
js
mov
sub
xchg
outsl
jecxz
mov
xor
push
mov
dec
movsb
popf
lahf
pusha
mov
or
cmp
mov
notb
xor
adc
jne
jecxz
in
xchg
and
addr16
push
popf
cmp
inc
movsl
mov
cmp
shr
je
testb
lret
cmp
xchg
enter
nop
mov
push
idivl
sub
xchg
sub
add
icebp
push
mov
lds
bound
or
popa
cmp
inc
xor
mov
xor
and
mov
icebp
sub
inc
lcall
jmp
aaa
out
mov
popf
stos
xor
fcoms
fucomi
inc
mov
xor
cmp
xchg
push
push
or
adc
xchg
inc
pop
cli
jnp
mov
lret
sbb
in
roll
jmp
fsubr
xor
daa
adc
lahf
mov
mov
pop
aas
repnz
fidivl
imul
in
ja
outsb
jg
loopne
fstpl
into
cs
pop
adc
test
mov
add
int
outsl
adc
outsl
stc
cltd
xor
pop
rol
sub
fimull
cmp
add
daa
aam
cmp
mov
out
mov
ret
and
cmp
pop
inc
movsl
adc
or
xor
dec
ljmp
cmp
push
icebp
outsb
xor
adc
dec
pop
fwait
outsb
jno
pushf
cmp
mov
jg
jmp
or
test
sub
cmpsb
adc
shrb
pushf
jle
jo
rorl
inc
jbe
gs
fprem
enter
xor
icebp
sbb
sbb
mov
inc
cmp
xor
pop
xchg
cli
icebp
sub
cltd
ja
xchg
loope
jge
gs
inc
cltd
mov
sbb
sbb
lret
xchg
enter
movsl
push
xor
push
xchg
insb
xor
ds
xchg
sbb
push
xchg
sub
mov
jl
js
lret
sub
jge
push
push
test
jle
and
and
insl
ret
jbe
mov
icebp
sarl
stos
push
cmpsl
int3
mov
lret
sbb
leave
imul
xchg
xor
and
arpl
adc
mov
popf
js
xor
jo
cmpsl
pusha
or
filds
imul
push
xchg
sahf
push
rcl
fidivs
cld
cli
fildll
pusha
aas
adc
xor
adc
stc
popf
mov
push
mov
inc
jmp
mov
pop
lods
sbb
cmpsb
rol
leave
sub
pushf
pop
imul
shlb
mov
test
dec
jge
lret
call
hlt
int
mov
clc
sub
outsl
dec
xor
pop
insl
int
pop
push
fdiv
push
scas
pop
sahf
jg
push
lock
insl
sbb
bnd
mov
movsb
popa
imull
mov
test
in
nop
lahf
fcoms
test
push
xchg
flds
or
dec
stos
in
mov
inc
xor
test
fnstsw
jmp
test
add
lods
lea
sbb
or
je
test
pop
xor
xor
aas
in
leave
adc
add
test
push
cmp
xor
xchg
cmp
repnz
sbb
int3
stos
mov
pop
pop
mov
adc
test
movsl
leave
lret
movsl
sub
stos
aaa
push
sti
xor
mov
or
xchg
push
pop
cli
jo
fwait
sub
daa
inc
cwtl
int
sub
xchg
or
sub
jno
shr
fidivl
mov
out
push
lcall
push
mov
fisttpl
push
out
scas
jae
jmp
in
jno
arpl
xlat
sahf
mov
aas
mov
inc
mov
lcall
xchg
cwtl
jne
lods
xor
or
lds
test
xlat
hlt
mov
inc
outsb
dec
and
cmpb
inc
jecxz
pusha
jnp
push
mov
pop
or
in
arpl
rolb
andb
arpl
jge
adc
lret
mov
je
fistps
jg
ret
xor
jae
jl,pt
and
out
lea
cmp
and
adc
adcl
stos
es
fxtract
jge
daa
andb
inc
push
pop
mov
pop
cmpb
int3
out
sbbb
loop
push
xor
js
push
adc
mov
ljmp
jmp
xor
sbb
sub
cmp
inc
insb
aad
cmp
cwtl
push
sub
mov
dec
pop
or
pop
std
movsl
fisubl
sub
rep
jl
pop
out
push
sbb
cmp
cltd
lahf
mov
mov
fildl
lea
push
dec
jge
or
ljmp
lahf
sbb
int3
sub
loopne
in
icebp
xor
arpl
adcb
arpl
adc
repnz
jg
rcll
push
push
movsb
fwait
lret
pop
shrb
or
cmp
add
jmp
int3
ds
in
addr16
dec
inc
movsb
arpl
cli
cmp
jae
jp
add
dec
sub
movsb
xor
cmpsb
lds
adc
mov
mov
cmp
sub
mov
rcrb
popf
lods
mov
mov
inc
mov
negl
xchg
jle
ljmp
push
add
mov
lahf
sbb
mov
insb
mov
pop
cltd
mov
xchg
pop
push
loop
inc
mov
insl
inc
xchg
fisubs
jno
leave
stc
inc
adc
fidivl
cmp
inc
pop
inc
rcl
cwtl
jecxz
in
insl
lods
pop
or
fsub
dec
not
mov
xor
leave
in
repz
mov
hlt
jmp
xor
sbb
loopne
xchg
inc
cld
js
adc
fwait
pop
nop
pop
sbb
adc
iret
inc
sbb
inc
or
sbb
les
aas
inc
hlt
pop
jp
loopne
shr
daa
outsb
jecxz
daa
cmp
lea
or
cmpsb
jmp
push
int3
or
stos
scas
repz
test
dec
sbb
je
dec
mov
jecxz
sahf
adc
out
in
dec
out
mov
pop
cs
int3
dec
fcoms
push
pop
pop
mov
shll
inc
xchg
in
mov
xchg
fsubrp
push
push
mov
test
mov
sub
jnp
addr16
dec
push
add
pop
cmpsl
cmpsl
fisubl
pop
mov
push
movsb
stc
mov
xor
mov
fidivs
xorl
in
in
mov
fadds
shr
pop
test
fwait
sub
mov
lods
call
call
out
rolb
jmp
pop
inc
insb
insl
jnp
in
mov
pusha
mov
fwait
xorl
imul
mov
nop
adc
dec
mov
mov
popa
add
int3
mov
in
jae
jnp
iret
ret
push
xor
push
or
mov
mov
pushf
test
or
push
mov
dec
xor
daa
daa
push
jae
test
xor
lods
dec
subb
inc
mov
loopne
arpl
pop
dec
insl
fcompl
not
sahf
in
xchg
fxch
cli
jge
xchg
out
sahf
and
and
shrl
or
rcl
jno
push
mov
andb
mov
xor
out
mov
mov
mov
fmulp
jp
orl
jb
dec
call
imul
icebp
fcmovbe
test
mov
dec
fisttps
loopne
ss
inc
push
sti
push
mov
add
nop
inc
xchg
push
sbb
sub
pop
in
mov
jnp
add
das
sbb
dec
test
lods
daa
pop
mov
or
xor
cmpsb
mov
ret
sub
cli
ret
mov
int3
mov
mov
add
loop
pop
push
aam
dec
ja
insb
push
jb
imul
fisubl
xor
sub
and
or
xchg
outsl
popf
pop
stos
mov
push
rorb
push
int
nop
jns
jge
xchg
cmp
imul
cli
xor
pop
adc
daa
sub
xchg
mov
inc
sub
in
push
cmp
mov
test
mov
lret
leave
addr16
dec
subl
std
mov
push
enter
rsqrtps
in
push
je
xor
mov
sti
adc
fsub
popa
dec
aaa
jnp
sub
inc
push
or
fisttpll
cmp
fmull
pop
or
mov
loope
pop
inc
xor
int
push
mov
repz
xor
cmpb
repnz
loopne
arpl
pushf
loop
idivl
icebp
xchg
pop
jp
jne
push
add
push
and
mov
jcxz
fcomps
dec
add
lods
dec
xor
mov
push
push
xorps
xchg
inc
cld
shl
fistl
ficompl
dec
je
fcmovne
sub
in
divl
and
mov
dec
xor
push
fcoml
xor
test
mov
out
xor
subl
or
mov
sahf
jp
xor
stc
incb
shlb
outsl
mov
xchg
sub
leave
xchg
cmpsb
lods
mov
adc
sub
ret
imul
cmpsb
inc
pushf
cltd
mov
sub
mov
lret
fs
in
mov
cmp
js
aaa
jecxz
add
pop
add
lea
out
and
sub
adc
jmp
std
fldenv
lahf
add
cmp
mov
jmp
push
dec
jg
ljmp
lods
aam
lcall
or
fs
sbb
popa
andb
jno
mov
push
icebp
mov
xchg
add
or
pop
in
mov
push
jbe
fists
dec
pop
gs
in
mov
shll
dec
sbb
test
cld
push
adc
mov
test
in
pop
sub
fwait
orb
outsl
push
stos
jecxz
aaa
xor
lods
sub
xor
lock
xor
incl
jge
enter
cmp
add
mov
push
std
insb
adc
push
call
push
es
subl
fldcw
in
inc
mov
mov
mov
stos
sbb
xchg
lea
cmpsb
sub
sub
push
cmp
inc
pop
sbb
mov
and
xor
inc
inc
pop
stos
dec
cs
mov
cs
movsb
push
push
adc
pop
mov
mov
addl
and
nop
mov
dec
mov
xchg
adc
adc
adc
popa
dec
in
jbe
xchg
inc
sbb
es
in
call
xchg
cs
inc
xor
out
stos
dec
cmp
fnsave
out
inc
mov
adc
sti
pop
push
hlt
sbb
in
lret
dec
ljmp
mov
repz
sub
inc
mov
mov
inc
push
fisubs
mov
pop
pop
das
inc
fs
shlb
and
sub
xor
pop
lock
test
push
arpl
jns
testb
mov
mov
ljmp
stc
jnp
push
sub
mov
jp
rcll
repz
or
mov
mov
test
add
movsb
popa
mov
nop
fisubl
pop
sbb
and
pop
jnp
and
lods
fisubs
pop
or
sbb
pop
cmp
sbb
mov
inc
dec
lods
or
in
mov
cld
shll
xchg
testb
or
sbb
cld
mov
dec
mov
repz
jecxz
push
mov
out
in
pop
sbb
jne
call
jge
pop
lods
push
sub
jb
aam
jnp
test
xchg
mov
mov
mov
or
test
lea
or
data16
leave
dec
outsb
sub
sbb
or
cld
addr16
jno
movsl
jno
push
pop
cltd
gs
push
icebp
sahf
aad
sub
cmp
cmpsb
lds
call
nop
mov
mov
cmp
push
dec
push
ljmp
das
sub
lahf
xchg
arpl
aas
out
push
dec
repz
sub
xlat
and
cmp
xchg
mov
ss
mov
in
jmp
push
jecxz
push
xchg
add
sub
add
fadds
data16
scas
scas
and
lret
add
out
out
mov
sti
outsb
insb
mov
scas
pop
std
fisttpll
jge
imul
fcomi
cmp
dec
mov
negl
jbe
inc
movsl
divb
push
insb
mov
pop
daa
xor
mov
sub
mov
dec
fbstp
xchg
push
xchg
leave
movsl
add
sub
icebp
pop
pop
xchg
xchg
jmp
and
rcll
fists
jo
loop
xor
inc
push
stos
push
add
xor
jl
dec
push
xchg
mov
add
shll
hlt
sbb
sub
stos
pop
dec
aam
in
push
test
and
leave
popf
add
jno
mov
sarb
into
repz
call
out
pop
jmp
xlat
fxch
pop
lret
or
lock
fidivrs
les
rclb
inc
push
insb
fs
mov
dec
cmp
pop
es
dec
jns
rcrb
ss
jge
pop
xchg
push
push
adc
jne
popf
sti
aam
sbb
mov
fdivrs
mov
movsb
or
insl
xorl
mov
mov
xchg
jmp
jno
mov
pushl
js
push
stos
inc
and
repz
aas
xor
sahf
dec
and
fsubs
sbb
mov
fs
sbb
mov
inc
jmp
sbb
mov
sbb
aaa
repnz
std
pop
ret
adc
hlt
mov
xchg
ret
push
mov
cmp
pop
mov
or
fidivl
outsl
pop
out
add
cmpsl
inc
mov
iret
ss
mov
xor
push
push
aam
mov
je
fmul
leave
mov
pop
push
sub
int
inc
mov
and
adcl
dec
xlat
ds
push
jge
fistpl
stc
pop
add
sbb
iret
popa
mov
das
add
xor
cmpsb
pop
addr16
and
lahf
fdivp
jnp
int3
outsl
fimull
dec
pop
dec
push
xchg
mov
lcall
cmpsb
cs
fnstenv
fs
test
lods
and
in
pop
outsb
fldt
into
push
pop
xchg
xchg
fnstsw
jge
mov
dec
stos
xor
pop
jge
pop
adc
jg
roll
lods
inc
mov
jae
inc
inc
mulb
popa
xchg
or
inc
push
cmpsb
inc
test
mov
addb
xor
shlb
fiaddl
mov
mov
xchg
inc
js
pop
loopne
sbb
test
adc
xchg
dec
add
cmp
fistps
lds
mov
rol
test
push
inc
xor
insl
stc
cli
aam
xchg
adc
xor
mov
stos
gs
out
inc
jge
repnz
and
movb
push
out
push
mov
inc
adc
outsl
cli
mov
rcrb
push
sub
bound
