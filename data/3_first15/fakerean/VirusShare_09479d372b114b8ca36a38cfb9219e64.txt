push
push
call
mov
shr
push
mov
shl
or
pop
xor
div
mov
mov
push
push
push
sub
shl
mov
sar
or
and
mov
mov
shr
mov
and
push
mov
shl
push
pop
and
mov
sar
mov
sub
push
call
sub
neg
sbb
pop
inc
pop
ret
push
push
call
sub
neg
sbb
inc
ret
push
mov
mov
push
push
mov
xor
sub
mov
and
jns
dec
or
inc
cmp
jne
test
jle
mov
xor
jmp
test
jne
test
jle
mov
sub
mov
roll
inc
inc
cmp
jb
xor
pop
inc
pop
pop
ret
push
mov
call
test
je
xor
inc
jmp
xor
pop
ret
push
mov
push
call
pop
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
push
push
push
mov
push
push
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
andl
andl
push
call
movl
jmp
xor
inc
ret
mov
movl
movl
cmpl
je
mov
mov
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
movl
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
shr
or
mov
mov
or
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
mov
mov
add
add
mov
mov
mov
pop
pop
pop
pop
leave
ret
push
mov
sub
push
push
call
mov
cmpl
jge
push
call
push
push
pushl
push
call
add
pushl
pushl
pushl
call
mov
mov
push
call
push
call
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
add
add
mov
in
test
pop
inc
add
or
mov
dec
add
add
leave
cmpsl
dec
add
pop
add
mov
dec
add
pop
add
jb
test
les
loopne
or
add
add
add
add
pop
adc
invd
imul
inc
adc
pop
inc
add
add
or
inc
verw
imul
adc
inc
mov
add
imul
adc
add
mulps
inc
pop
add
adc
or
or
add
mulps
mov
imul
inc
cmovb
add
or
adc
inc
adc
add
verr
pop
pop
or
or
adc
add
mov
or
and
mov
imul
or
or
mov
or
inc
adc
add
imul
add
and
or
or
add
add
or
mov
adc
add
or
add
add
adc
and
imul
or
pop
mov
imul
imul
mov
adc
or
inc
imul
mov
adc
add
inc
add
mov
or
adc
pop
and
add
mov
inc
add
imul
add
add
pop
add
add
inc
adc
or
inc
add
or
adc
cmovb
adc
add
add
add
inc
sldt
imul
adc
inc
imul
imul
or
inc
pop
inc
add
inc
and
add
or
imul
add
pop
add
imul
pop
pop
adc
imul
or
add
add
or
and
mov
idivl
mov
mov
div
mov
div
mov
mov
idivl
idivl
div
idivl
idivl
mov
mov
idivl
negl
sbb
add
sbb
or
sbb
sbb
add
add
arpl
add
add
add
arpl
add
arpl
add
add
add
add
add
sbb
arpl
add
add
sldt
add
arpl
arpl
add
add
jg
add
add
lock
imul
push
jg
lock
lock
jg
imul
pop
add
jg
pop
lock
add
pop
jg
add
push
pop
jg
jg
imul
lock
jg
jg
lock
lcall
jg
lock
imul
pop
add
pop
imul
imul
lock
add
pop
add
imul
add
lock
cs
incl
jg
incl
add
incl
incl
jg
jg
add
add
add
cmp
pushl
push
ja
add
incl
add
jg
flds
inc
ljmp
jg
push
jg
jg
dec
mov
jg
incl
add
jg
add
add
add
jg
incl
add
push
test
dec
jg
add
ss
test
add
add
sbbb
incl
jg
xchg
incl
add
ud0
jg
movq
add
incl
jg
jg
inc
add
add
jg
call
pop
repz
lcall
lcall
add
jg
lcall
lcall
add
lcall
push
repz
lcall
call
lcall
lcallw
jmp
ja
incl
lcall
call
inc
jae
and
pushf
ljmp
push
jmp
jmp
pushl
pop
pushl
jg
repz
lcall
pushf
call
lcall
mov
lcall
adc
or
call
ljmp
jg
lcall
pushl
or
mov
repz
ja
pushf
jg
cmp
sbb
jg
test
push
jg
bound
dec
sbb
jg
jg
dec
dec
dec
add
add
std
filds
dec
std
add
incl
sbb
dec
add
add
mov
jg
jg
push
sub
lcall
ja
mov
ja
data16
pushl
ja
jg
jnp
add
mov
je
jg
mov
lahf
dec
adc
sub
jg
add
push
mov
fmuls
pop
call
je
pop
cmp
xchg
test
push
jg
lahf
lcall
pop
je
jg
ja
decl
dec
test
dec
test
fisttps
and
xor
ja
mov
push
inc
lock
inc
cwtl
and
ja
aad
imul
push
scas
adc
mov
cmp
pop
shll
adc
and
movb
mov
xor
mov
test
rol
mov
dec
lret
test
test
cmp
or
lea
jnp
shl
cmp
data16
out
pop
xor
outsl
push
push
push
adc
data16
and
inc
nop
adc
pushl
data16
cmp
ja
push
add
or
arpl
shlb
inc
ja
arpl
lcall
and
and
mov
xor
sub
jnp
inc
add
mov
push
dec
outsb
or
imul
lods
imul
push
shlb
sbb
pop
xorl
test
add
es
push
add
push
inc
cmp
arpl
bound
test
ficoml
pop
jbe
movsl
outsl
push
loop
addr16
imul
add
pop
or
add
cmp
push
lldt
sub
xor
mov
call
cmp
data16
adc
xor
push
pop
mov
imul
addr16
loop
rcrb
jg
push
inc
aad
xor
push
or
jg
test
and
cmpsb
push
pop
nop
fsubs
loop
ja
test
loop
jg
jg
push
mov
inc
pop
jmp
lock
push
pop
lock
jg
pop
imul
add
pop
ljmp
sub
jg
jp
test
dec
adc
dec
mov
dec
movsl
sbbl
cwtl
clc
add
test
push
fisubl
and
and
add
pop
inc
pop
add
stc
jg
or
jle
lods
jg
arpl
repz
cmp
or
inc
popa
push
bound
sub
cmp
popf
push
outsl
pop
and
scas
shll
add
xor
test
repnz
and
push
lods
jmp
xor
push
pop
xchg
xchg
sub
ja
mov
jg
add
and
add
scas
ret
test
sbb
mov
lahf
adc
decl
or
test
push
and
push
lods
jb
lcall
push
movl
dec
roll
sub
or
xchg
jp
imul
pop
int
push
add
cmp
pushl
out
incl
jle
data16
pop
add
or
jg
inc
addr16
xchg
jle
pop
icebp
jle
js
jl
pop
xchg
mov
inc
mov
inc
xchg
test
ds
dec
jg
ljmp
scas
imul
icebp
push
out
xchg
pushf
ljmp
jae
pop
repz
lcall
call
pop
call
pushf
inc
call
pop
pushl
jae
data16
jg
pushf
pushl
pushl
push
push
inc
pushl
push
imul
lcall
decl
jmp
and
ljmp
jmp
lcall
repz
inc
incl
mov
pop
jg
or
decl
pop
lcall
and
lcall
lcall
lcall
lcall
jg
repz
push
pop
pushl
jg
decl
decl
inc
jg
adc
lcall
pushf
pushf
and
pushf
ljmp
incl
pushl
pushf
mov
call
pop
repz
imul
incl
call
pop
lcall
jg
lcall
ret
add
jmp
add
ljmp
ja
push
decl
jae
repz
pop
or
pop
pop
pop
push
pushf
pushf
lcall
lcall
ja
pop
data16
pushf
adc
pushf
mov
jmp
pop
pusha
ja
jmp
pop
jg
pop
imul
cmp
pop
pop
jmp
pop
jmp
add
pop
cmp
inc
push
jmp
pop
jmp
pop
lcall
cmp
jmp
pop
jmp
jmp
cmp
call
imul
jmp
pop
imul
pop
incl
por
jmp
jmp
pop
pop
jmp
jmp
pop
pop
cltd
pop
lcall
lcall
pop
pop
jmp
imul
pop
adc
imul
repz
pop
jmp
test
inc
pop
pop
adc
jmp
pop
pop
jmp
pop
imul
add
jg
ss
pop
jmp
imul
por
jmp
pop
imul
add
imul
jmp
pop
imul
jg
pop
xor
cmp
lcall
lcall
imul
cmp
jmp
imul
jmp
imul
test
pop
add
incl
ljmp
pop
mov
pop
pop
imul
add
pop
jmp
pop
imul
pop
adc
add
add
daa
outsl
arpl
arpl
arpl
arpl
add
arpl
sbb
jle
xor
add
add
add
sbb
add
sbb
xor
arpl
pushl
sbb
arpl
lahf
arpl
cmp
sbb
outsl
add
sbb
jg
arpl
xor
xor
add
sbb
add
add
add
arpl
data16
sbb
arpl
add
test
add
arpl
sbb
add
add
add
or
arpl
arpl
add
arpl
add
arpl
sbb
add
sbb
arpl
xor
arpl
jb
arpl
sbb
add
add
into
add
xor
ja
add
add
sbb
xor
add
add
arpl
test
ja
mov
xor
sbb
add
arpl
jmp
mov
pop
pop
pop
adc
pop
pop
jmp
jmp
pop
jmp
pop
pop
pop
jmp
jmp
jmp
pop
pop
pop
pop
pop
adc
pop
jmp
pop
jmp
jmp
pop
pop
pop
pop
jmp
jmp
imul
add
pop
jmp
adc
addb
addb
add
add
addb
addb
add
sbb
addb
add
add
add
add
add
addb
add
in
jg
jg
jg
cs
jg
out
add
add
add
xchg
add
jg
add
ds
test
out
push
jg
add
pushl
jg
cmp
jg
add
add
jnp
adc
add
jg
test
jg
jnp
add
jg
data16
jg
fnstcw
add
or
test
out
incl
add
xchg
cmp
pop
data16
lahf
add
ljmp
pop
daa
jmp
add
out
aad
aas
fiadds
adc
and
mov
jo
rcrb
jne
insb
push
mov
or
mov
iret
in
xor
pop
and
cwtl
sub
dec
mov
outsb
popl
test
mov
push
add
inc
into
push
pusha
sarl
aam
xchg
pop
int
xchg
rcrl
jmp
mov
add
jl
sub
outsl
mov
out
idiv
stos
int3
mov
les
aas
fsubrl
jnp
ret
dec
pop
jmp
xchg
lods
aaa
stos
or
jle
xchg
jmp
cmp
addr16
ret
aaa
inc
pop
fldt
out
pop
cli
xchg
cwtl
fcmovnb
cwtl
mov
xchg
xchg
out
mov
adc
add
hlt
ret
insb
js
and
loopne
lock
popa
jg
sarl
lret
into
or
xchg
loop
in
mov
dec
gs
aam
mov
notb
fwait
xchg
nop
adc
lock
cmp
lea
cmp
ja
cltd
fnstcw
ss
cmp
dec
and
inc
adc
and
in
or
xchg
pusha
xchg
aas
aam
mov
ljmp
sub
ljmp
pop
push
loopne
xchg
cmp
push
inc
push
inc
push
pop
jge
sahf
not
sub
add
insl
popa
cmpsl
clc
shll
das
cmp
ret
fsubr
jb
jnp
repz
push
cwtl
push
pop
out
ss
repnz
lods
mov
cmp
sub
dec
imul
push
mov
pushf
xchg
xor
cmp
adc
adcl
cmp
cmpsl
scas
into
jo
in
cmc
xlat
ret
push
ror
push
mov
test
lods
dec
cwtl
int3
clc
mov
out
jle
pop
movsl
cltd
fiaddl
fmuls
jecxz
fsts
mov
lcall
add
test
mov
out
push
cwtl
and
aam
adc
ficomps
rcr
adc
or
or
in
ja
mov
or
cmpsb
into
jecxz
push
mov
cltd
adc
push
add
push
mov
push
aas
jecxz
add
jg
push
jae
shlb
lret
lods
mov
lds
xchg
lret
dec
mov
in
adc
mov
mov
andb
fsubr
test
enter
movsl
sub
std
dec
arpl
add
sub
xchg
test
adc
insl
cmp
fiaddl
mov
jne
jbe
and
fistps
add
cltd
sub
mov
xchg
and
daa
push
adc
lods
addb
mov
aaa
jbe
jecxz
movswl
mov
mov
test
jl
and
adc
aad
ret
fstpt
pop
xchg
cmp
mov
adcb
iret
outsb
cmp
cmc
mov
xor
int3
dec
jl
leave
push
dec
xchg
rcrl
or
bound
imul
subb
mov
mov
movsl
mov
sahf
push
scas
gs
or
mov
mov
pop
test
lds
cmc
lcallw
inc
jmp
pop
push
mov
pop
scas
mov
adc
mov
xchg
repnz
fadds
jbe
push
mov
push
lahf
inc
inc
jecxz
mov
inc
push
mov
jmp
xchg
jno
push
incb
lret
mov
mov
aam
jmp
fs
paddsb
dec
pop
dec
dec
mov
sar
lahf
sbb
dec
sub
inc
dec
add
cmp
sbbl
shll
stc
sub
mov
fisubl
sub
jle
push
jbe
aas
jbe
sub
rol
pop
push
jno
dec
clc
pop
cmp
adcl
fs
shrb
inc
push
cltd
and
xchg
loopne
fldcw
push
jno
lret
jbe
dec
mov
pop
push
test
xchg
fsubs
add
out
push
cmc
int
scas
cwtl
pop
scas
jl
in
fsubr
jp
sbb
dec
scas
xchg
stos
imul
aaa
inc
rcrb
mov
leave
pop
addl
ja
push
mov
push
repz
xchg
pop
mov
fucomi
cld
jbe
pop
stos
fidivl
push
je
dec
adc
sbb
push
daa
out
add
xlat
lods
lds
pop
adc
and
ror
jno
jmp
loop
pop
outsb
sub
inc
dec
mov
mov
les
mov
mov
push
stos
in
jge
push
cmpb
pop
cmp
mov
mov
lcall
outsl
test
inc
jbe
int
imul
push
sub
imul
pushf
push
or
mov
add
and
cmpsb
push
nop
add
mov
mov
sbb
adc
and
aad
cmp
xor
std
scas
out
pop
ret
aaa
inc
lds
and
and
mov
fidivs
out
jp
lods
add
jmp
inc
aam
loopne
daa
dec
xlat
jge
int
aaa
inc
sbbl
cwtl
sbb
dec
jnp
sbb
jl
popf
cwtl
aad
add
jmp
cmp
xlat
lods
xchg
into
les
pop
push
pop
clc
jmp
cmp
dec
pusha
sub
idivw
ret
cmpsb
dec
add
pop
inc
mov
xchg
dec
push
imul
xor
loopne
jp
enter
mov
inc
sti
xlat
aaa
sbbb
mov
data16
mov
mov
dec
inc
fwait
sub
movsl
fldl
mov
loopne
leave
adcl
cmp
mov
mov
xchg
clc
ret
xchg
std
mov
jne
adc
rolb
hlt
data16
pop
jb
mov
ror
pop
inc
xchg
aas
ja
in
inc
out
rcrb
out
add
jns
mov
and
inc
inc
arpl
jb
fisubs
xor
mov
jecxz
aad
or
mov
sub
sub
ret
fistps
mov
fdivl
or
aaa
jmp
popa
out
mov
repz
scas
push
add
mov
jo
dec
sub
call
lret
adc
mov
cld
test
mov
ret
or
xrelease
stos
cltd
loop
pop
or
mov
clc
push
add
lods
test
push
in
mov
pop
mov
pop
cmp
int
test
and
popl
push
rorl
lret
and
and
repz
icebp
pop
ret
addr16
icebp
xchg
fcmovnbe
mov
jp
lods
pop
dec
in
ja
lds
orl
es
mov
mov
jle
test
dec
xor
bound
std
sbb
xchg
add
pop
lcall
dec
aam
decl
das
jle
mov
notl
push
js
aad
cltd
or
in
xchg
xor
mov
loopne
fidivrs
mov
sbb
add
xor
cmc
xchg
mov
mov
leave
cs
mov
mov
cmp
aaa
out
std
enter
in
cld
sub
mov
lahf
mov
fbstp
add
adc
sub
js
fimuls
jmp
adc
push
push
cmp
inc
push
xor
pop
or
rorb
lret
scas
lahf
cmc
mov
rcrl
push
xchg
movsb
shufps
aad
push
stc
xchg
clc
push
mov
adc
imul
mov
test
sbb
jle
outsl
pop
movsl
sarb
adcb
icebp
sub
fcmovbe
or
or
inc
and
add
mov
loopne
or
cwtl
aaa
mov
out
out
push
add
aam
test
loopne
ljmp
mov
mov
lods
leave
or
sahf
cmpsl
loop
repz
rcr
xchg
xor
adc
add
cmp
or
loopne
repz
sub
test
inc
mov
fldl
aaa
fsubrs
data16
cmp
sub
or
mov
mov
or
jo
mov
daa
rclb
jge
lea
push
je
int3
outsb
xchg
les
fld
pop
icebp
call
fwait
push
xor
sbb
push
sub
mov
repz
sub
data16
jbe
jno
dec
or
push
aam
scas
pop
and
xor
inc
push
or
stos
movsb
jbe
cld
cmpsb
lock
pop
in
icebp
sbb
aas
xchg
or
jg
into
aaa
push
adc
mov
test
xor
cs
in
sarb
dec
xchg
popf
scas
lods
xchg
push
rcl
outsl
sub
out
jle
pcmpeqd
imul
mov
sti
aam
test
cmpb
daa
mov
test
and
cld
out
sub
mov
fwait
pop
lea
repnz
addr16
das
cld
jle
cmp
jno
ss
adc
push
add
jp
jp
call
icebp
mov
jle
mov
inc
jne
dec
incl
and
pushf
inc
int
dec
jge
call
jmp
addr16
shll
inc
cmc
sbb
out
xor
in
sbb
xchg
lea
sub
or
sti
dec
cs
nop
mov
popa
push
gs
divl
or
xchg
jg
ja
cmp
xor
je
out
imull
aad
xchg
rolb
mov
or
push
ss
popa
cmp
push
clc
repnz
or
divl
pop
xchg
mov
jp
adc
xchg
test
cli
jp
xchg
loope
sbb
jg
in
sbb
sahf
cmp
cs
sub
sti
pushf
fstpl
insb
jnp
ret
hlt
dec
push
jg
test
adc
test
mov
int3
fldt
loopne
sbb
cwtl
outsb
push
out
adc
mov
mulb
xchg
xchg
sbb
mov
add
ret
mov
xchg
mov
shr
mov
mov
lcall
out
jmp
or
nop
inc
xor
lret
adc
imul
fwait
add
mov
outsl
negb
mov
stos
in
mov
jo
or
jmp
inc
sbbl
rorl
jns
lods
xor
mov
and
push
push
or
push
inc
dec
pop
jne
stc
das
xchg
add
cmpsl
das
scas
repnz
in
ljmp
pop
push
sbb
mov
test
pop
pushf
sub
outsb
push
hlt
jp
jg
add
sbb
lret
movsl
push
push
dec
xlat
xchg
mov
pusha
fidivrl
lock
cmp
adc
pop
jne
cmpsl
icebp
cmp
outsl
xchg
and
and
push
mov
xor
pushf
out
mov
int
jp
cld
mov
push
pop
ja
xchg
push
jns
addr16
hlt
nop
add
lods
enter
lret
js
pop
nop
out
mov
lcall
push
fistpll
push
fnstenv
ret
out
stos
scas
or
mov
ss
lods
aaa
sahf
sarb
dec
mov
ret
or
repnz
out
rcll
adc
mov
mov
mov
data16
sahf
clc
dec
shlb
sbb
xor
test
out
je
add
pop
xchg
into
incb
mov
pop
sti
roll
jno
add
push
icebp
into
adc
addr16
std
add
push
imul
ret
jb
in
inc
ss
push
filds
not
add
ja
iret
mov
outsb
leave
dec
je
push
das
or
push
cltd
xor
out
andl
mov
push
test
rol
jo
push
fldcw
test
and
call
pop
arpl
call
dec
fmuls
les
jbe
aaa
push
hlt
cwtl
push
imul
xchg
add
sbb
jmp
cltd
cmp
jl
ror
shrl
jb
sbb
ret
inc
cld
nop
js
inc
jbe
push
jmp
lods
ljmp
xchg
push
cmp
ret
fsubs
sti
xchg
mov
sub
jns
mov
lret
cmpl
adc
mov
scas
es
in
std
je
add
push
cwtl
scas
adc
in
jnp
xchg
pusha
and
xchg
int
xchg
inc
inc
jmp
mov
jns
imul
cmp
aaa
sub
sbb
sti
hlt
in
inc
insb
dec
adc
pop
or
xor
sbb
and
insb
xchg
shll
push
mov
push
nop
incb
stos
leave
mov
andb
stos
fwait
and
cmp
mov
lret
xchg
loopne
inc
aad
or
xor
inc
dec
ljmp
ret
arpl
insl
les
mov
sbb
jbe
cwtl
ret
leave
pop
push
ret
mov
cmp
sub
push
fldcw
fisubrs
xor
sub
stc
push
je
xchg
subl
int
icebp
or
stc
add
dec
pop
cmc
lods
cltd
dec
inc
xchg
lods
in
jge
in
pop
xchg
stc
sbbb
int
daa
mov
hlt
sahf
pop
jecxz
lret
sub
out
int3
ret
gs
add
and
pushf
cmp
iret
pop
inc
cmp
mov
repz
out
adc
scas
cmc
mov
lret
and
mov
fucomip
shlb
leave
or
xchg
xor
testl
dec
jb
jmp
xchg
sub
outsl
lods
xlat
repnz
or
pop
dec
or
div
out
and
cltd
push
lods
ljmp
imul
test
add
jmp
dec
or
inc
sbb
add
lcall
xchg
data16
mov
or
dec
cmp
jne
jecxz
incl
lods
mov
ljmp
xchg
mov
add
push
roll
outsl
leave
out
roll
dec
add
cwtl
lods
les
inc
jnp
push
push
xor
push
outsl
in
adc
sbb
sub
mov
ds
inc
jecxz
sbb
push
scas
sub
sbb
push
inc
int
inc
dec
outsb
add
sbb
shr
incb
cmp
loopne
fdivr
mov
adc
or
fwait
pushf
in
mov
jne
mov
push
pop
mov
or
stc
xchg
ret
add
insl
fwait
dec
test
pop
sub
add
dec
cmp
test
and
inc
push
fidivl
bound
add
pop
xlat
int3
jno
andb
sbb
imull
cmp
adc
mov
nop
or
lret
xchg
cmp
sahf
or
sub
lcall
add
cli
gs
jbe
out
in
ljmp
dec
jp
cmc
push
out
jae
inc
mov
and
jnp
movsl
cmp
insb
mov
inc
jae
mov
aad
add
icebp
cmp
mov
inc
add
cmp
scas
inc
jo
js
jae
push
inc
iret
push
ljmp
add
fcompl
mov
aam
cmpsl
lret
popa
mov
push
and
bound
add
or
in
pop
outsb
adc
ljmp
mov
push
rcrb
dec
mov
push
and
adc
adc
addb
jecxz
jbe
or
repz
cli
xor
fwait
sti
mov
jmp
nop
xor
mov
into
imul
cli
insl
mov
mov
pavgb
mov
jg
fs
xchg
adc
adc
inc
lea
popf
jp
popa
pushf
add
and
daa
xchg
out
inc
sarl
fucomi
add
mov
cmp
xor
flds
cld
cmp
lock
or
sub
les
out
adc
push
sahf
js
leave
and
ja
xchg
xor
mov
xchg
cwtl
cmpsl
in
lahf
mov
shrb
lock
or
xchg
sbb
dec
mov
push
sub
adcl
sub
cs
movsl
add
out
push
adc
movsb
cltd
push
int
insb
dec
push
push
add
jmp
mov
out
fcoml
xor
mov
movsl
adc
xor
cltd
inc
pop
sahf
pop
jne
lcall
call
es
and
push
outsl
mov
sub
cwtl
push
add
and
dec
and
lret
outsb
mov
pop
nop
loope
pop
popf
rcr
jg
or
xor
stos
lcall
push
sbb
sbb
pop
or
jecxz
imul
loopne
arpl
nop
pop
push
mov
cmpsl
inc
sbb
push
aad
aaa
fldenv
xchg
add
adc
sbb
xor
cmp
sbb
scas
lss
add
inc
pop
jge
loopne
mov
mov
shl
mov
mov
xorl
sahf
xor
jb
dec
repnz
pop
in
mov
inc
pop
sbb
mov
pushf
jl
jl
xor
adc
xchg
lds
mov
sub
push
nop
xchg
test
das
and
jne
or
inc
mov
sbb
lahf
iret
sbb
lds
leave
jbe
jl
test
jbe
add
sub
loope
clc
cwtl
sbb
adc
jae
dec
mov
out
mov
int3
push
cmp
sahf
js
out
leave
cmp
ja
mov
jmp
add
sub
dec
push
xrstors
push
iret
dec
test
test
cmp
push
insb
sub
inc
push
lea
fwait
add
into
mov
fcmovnu
xor
out
or
andnps
jb
adc
inc
lret
test
push
aas
adc
pop
mov
enter
js
xor
mov
cwtl
adcl
or
add
cmp
sbb
insb
clc
cmp
push
lret
pop
inc
push
mov
xor
test
lds
and
fistpll
ds
fld
inc
js
push
sbb
pop
lds
les
pop
adc
cwtl
add
push
loopne
and
jg
sub
push
pusha
test
popa
sub
ja
push
das
or
fucom
rolb
rclb
ja
insb
jb
sub
outsb
sbb
arpl
xchg
or
inc
xchg
adc
arpl
or
cmpsb
xor
aaa
lods
jg
mov
or
pop
or
call
sub
js
movsl
les
les
push
mov
shrl
data16
mov
es
add
or
push
ja
inc
test
pop
inc
mov
sub
push
push
into
mov
xor
mov
mov
icebp
cmp
xchg
call
push
bound
negl
inc
adc
jnp
in
xchg
xlat
into
xchg
inc
scas
inc
lahf
fsubp
sub
stos
ljmp
and
insb
add
sbb
lods
popf
int
dec
jecxz
insb
mov
jmp
nop
jne
xchg
ss
aad
popa
cmpsb
inc
jl
out
out
add
call
stos
mov
dec
pop
sub
mov
sti
xchg
lcall
sub
repz
inc
dec
shrl
loopne
pushf
jbe
sub
lock
xor
inc
and
mov
cli
in
add
mov
out
inc
pop
cmp
dec
scas
daa
les
push
int
dec
mov
xor
xchg
cwtl
xor
sahf
cmpsb
out
sbb
outsb
das
mov
add
sbb
and
mov
mov
outsb
pop
sahf
and
push
dec
mov
mov
pop
stos
dec
jmp
push
mov
lock
jle
mov
out
out
lahf
jecxz
push
inc
lods
jb
and
xor
mov
push
ss
pop
ss
add
js
add
adc
mov
dec
or
pop
sbb
sub
jb
es
mov
fmull
jno
mov
loopne
scas
test
and
lods
jmp
cmpl
push
xchg
mov
insl
es
push
xor
addl
jne
xchg
out
ficoms
mov
rolb
push
pop
enter
mov
jb
xchg
cmp
xchg
aad
lods
pop
pushf
and
add
aaa
adc
jmp
cmp
xor
dec
lods
das
adc
rcr
cmp
repz
mov
lea
cmpsl
hlt
insb
test
and
cmp
pop
ds
test
imul
push
aam
push
push
sbb
fstpl
les
mov
stos
xchg
cmp
cmp
mov
mov
mov
in
leave
fsubrs
stc
arpl
adc
jae
or
mov
jmp
inc
jnp
ljmp
mov
xor
int
dec
inc
jns
mov
xchg
icebp
shlb
dec
jo
fwait
sub
xor
mov
scas
outsl
cmpsl
rorl
addr16
ds
cli
out
and
mov
add
pushf
jge
mov
scas
loop
mov
sarl
xchg
test
adc
sbb
loop
adc
mov
addr16
jb
mov
push
xor
fsts
mov
rclb
fsts
in
xlat
ds
jns
pop
insl
cmpsl
scas
cltd
cltd
cmp
add
in
aad
mov
xchg
mov
push
push
jae
cld
mov
adc
lods
xlat
shlb
test
mov
in
sub
xchg
arpl
in
mov
imul
push
mov
push
int3
mov
push
or
mov
in
mov
pop
cwtl
cmp
test
xor
dec
insl
cmp
and
xchg
stos
push
push
sarl
xchg
add
lods
jnp
lods
in
jbe
pop
push
adc
push
xlat
rclb
mov
sbb
out
sbb
sahf
jle
cmp
int3
pop
call
pop
jnp
dec
cmp
frstor
scas
call
std
jae
jg
mov
enter
aaa
call
lock
mov
jecxz
sbb
and
arpl
push
mov
push
dec
repz
scas
aam
pop
punpckhbw
stc
push
shll
mov
scas
mov
repz
sqrtps
inc
lods
pop
xchg
xchg
ljmp
and
and
test
sub
bound
push
sub
inc
cli
jp
mov
int3
or
jo
jl
sbb
jmp
inc
pop
ljmp
aam
fsubs
test
cmp
push
or
mov
test
jb
repz
lret
xchg
subb
cli
cli
jge
push
and
jp
cld
hlt
jl
mov
pop
data16
xchg
loopne
cwtl
cmpsb
leave
xlat
call
sarb
out
jno
andl
inc
shrl
mov
insb
scas
mov
in
aad
movsl
int3
push
mov
xor
dec
xchg
cmpl
mov
sbb
jnp
jp
sbb
sbb
mov
sti
dec
xchg
xchg
test
daa
fbstp
add
scas
incb
pop
dec
xor
mov
sahf
sbb
jmp
in
jnp
cwtl
test
pop
shrb
adc
cmp
sbb
inc
push
fsubrl
loopne
mov
in
dec
pop
add
pop
dec
push
xchg
jle
imul
imul
mov
xor
insb
jecxz
pushw
mov
pop
outsl
push
push
testb
cltd
xchg
stos
or
add
int
pop
test
xor
push
adc
das
popf
push
imul
jne
push
pop
xchg
push
xchg
outsl
cmp
jge
fbld
adc
mov
push
int3
push
movsl
lock
inc
lds
repz
and
ret
add
jmp
mov
pop
pop
dec
xor
loop
ja
dec
ficompl
pop
push
dec
loop
xor
imul
std
sbb
jl
and
xchg
mov
mov
dec
lds
in
mov
fldl
rol
nop
test
and
lods
xchg
fldcw
fucomp
push
mov
out
or
es
bsr
imul
insl
arpl
mov
xchg
mov
cmpl
adc
pop
hlt
xchg
pop
aaa
sub
push
and
mov
out
fimull
mov
fidivrl
je
cmp
js
xchg
pop
jmp
jae
data16
testl
icebp
xchg
loopne
xchg
mov
outsl
fincstp
jbe
gs
inc
adc
pop
sub
stos
and
in
mov
pop
cmpsb
sbb
dec
sub
cmpsb
rcl
push
clc
sub
dec
rcl
pop
inc
xchg
addr16
ljmp
mov
xor
mov
mov
shll
xchg
insb
cmp
push
out
jle
add
jge
movsl
inc
xchg
jo
andl
mov
and
lods
add
je
fidivrs
pop
fcoms
jmp
and
inc
test
dec
mov
notb
xchg
mov
jae
xorb
pop
cwtl
shlb
and
xchg
xchg
pusha
xchg
dec
sbb
mov
pop
push
fdivl
inc
negb
outsb
xor
or
out
aad
inc
pop
mov
cmpl
hlt
shrb
outsb
test
int3
int3
dec
test
aad
mov
lcall
mov
in
insb
push
jns
jno
xchg
inc
call
mov
jmp
in
xor
sub
into
jmp
aaa
push
rcrb
sbb
and
or
cmp
push
in
mov
sub
loopne
or
jae
sbb
jl
jns
movsb
sbb
cld
lods
push
ret
jo
cwtl
jne
jp
jne
jecxz
test
in
pop
pop
or
call
aaa
rorl
mov
and
or
dec
inc
dec
or
aas
push
movsl
sub
jae
sar
xchg
hlt
adc
lcall
sub
nop
mov
pop
ljmp
pushf
shlb
inc
xchg
aam
les
stos
scas
arpl
cwtl
aad
cmp
in
cli
xchg
adc
gs
icebp
push
sahf
xchg
aaa
maxps
inc
sub
iret
cmp
or
out
push
add
jp
test
or
inc
xchg
int3
adc
mov
or
sub
test
jecxz
imul
clc
xchg
test
and
and
sub
sub
ljmp
add
and
adc
adc
adc
das
jecxz
loop
mov
mov
xor
jno
aam
xchg
and
jge
incl
mov
and
in
movsl
push
cmc
out
mov
das
jno
xor
cwtl
sub
dec
mov
aam
sub
push
mov
cmpsl
cmp
mov
dec
adc
push
adc
cmp
jo
mov
jae
dec
lcall
std
lods
lea
add
adc
lds
mov
iret
cmp
rclb
dec
push
and
add
repz
outsl
xchg
mov
jne
test
pop
mov
sbb
jp
movsl
ljmp
sbb
leave
das
test
mov
test
jp
inc
out
mov
cld
or
dec
or
jg
cs
push
loope
inc
mov
jge
and
push
mov
leave
cli
and
push
push
daa
pop
insl
lock
pop
add
idivl
rcr
movsl
in
jg
shrb
add
sbb
and
add
dec
pop
push
aas
dec
out
int
jmp
xchg
jp
jbe
int3
in
jecxz
xchg
ljmp
lock
xchg
pop
push
lea
rcr
jmp
pop
add
mov
sbb
addl
cmp
cmp
pop
or
xchg
cs
mov
stos
and
mov
insl
and
xchg
imul
mov
outsl
movsl
jnp
adc
add
stos
rcl
pop
inc
mov
mov
imul
cwtl
pop
inc
insb
sub
das
jo
in
mov
inc
nop
add
push
clc
add
mov
ficompl
movsb
sbb
xchg
test
dec
jmp
arpl
in
jge
mov
dec
jno
add
mov
mov
sbb
fs
or
pop
sub
sub
pop
mov
add
ljmp
sbb
jmp
pop
aad
sbb
roll
fcomps
push
add
lcall
scas
dec
or
and
je
xlat
fisubrs
adc
scas
ds
repnz
fsubrp
lods
pop
sbb
popf
adc
lods
mov
mov
jl
xor
loopne
dec
scas
rol
js
movsb
mov
or
adc
fcom
or
ror
cmp
jns
mov
mov
adc
mov
mov
jbe
adc
lea
mov
dec
push
mov
cltd
or
xchg
mov
push
adc
inc
jbe
cmp
xor
xlat
leave
pushl
adc
xor
inc
fstpt
inc
popa
es
xor
mov
aaa
cmp
push
gs
in
fcompl
mov
sub
ljmp
mov
pop
inc
test
je
sub
fisubrl
pop
mov
addr16
bound
sub
xchg
mov
xlat
sub
repnz
outsl
scas
repz
push
ljmp
sbb
and
push
mov
xor
pop
jo
popf
outsl
mov
test
in
pop
test
mov
dec
sbb
pop
push
jle
outsl
js
adc
repz
sbb
nop
jae
mov
imull
adc
cmpb
xor
repnz
pop
push
or
jb
mov
mov
leave
aam
cmp
mov
cmpl
mov
add
stos
ds
mov
jl
into
sub
jg
into
jecxz
sbb
mov
and
dec
lods
lea
inc
or
hlt
xor
xor
sbb
pop
aam
test
insb
out
cmp
dec
pop
repz
imul
lret
ret
dec
and
dec
sub
mov
sub
outsl
jae,pn
sub
mov
sbb
pop
sub
push
jmp
ja
imul
mov
jae
mov
ret
jnp
cmp
adc
cld
mov
lock
enter
mov
pop
and
out
test
movsl
out
push
add
push
sarb
push
popf
or
push
push
call
test
mov
lea
ja
mov
dec
add
push
push
jno
mov
pop
cmpsl
cmp
jp,pt
mov
mov
push
not
pop
xchg
out
cs
jno
mov
mov
push
nop
or
mov
test
xor
ja
out
and
pop
jmp
cltd
cmp
outsl
cltd
orl
popl
push
dec
sub
int
push
lods
and
cmp
cmp
cltd
xor
jmp
daa
push
dec
outsb
stos
outsb
in
lods
mov
add
iret
js
xlat
incb
pop
stos
hlt
pushf
dec
out
pop
cld
xchg
ljmp
adc
jmp
dec
inc
je
out
fmull
mov
pop
movsl
pop
scas
and
cmp
cmc
negb
lret
sbb
and
test
dec
into
pop
fdivrs
mov
mov
sub
xchg
jmp
xlat
mov
inc
dec
xchg
neg
inc
inc
cmp
std
xchg
mov
int
push
push
aam
push
pop
lea
xchg
xor
jne
mov
out
pop
nop
cmp
fsts
pop
mov
mov
cwtl
rcrb
dec
jle
fdivs
insl
mov
pop
and
mov
push
scas
movsb
test
pop
jae
clc
dec
in
push
add
jnp
adc
jb
jmp
cli
dec
loop
fucomi
cmp
inc
adc
adc
fwait
ljmp
push
jle
jmp
rolb
imul
fisttpll
ss
xchg
inc
inc
dec
jle
xchg
sbb
push
mov
xor
test
pop
pop
sbb
cmpsl
insl
dec
pop
insb
xlat
inc
lock
out
rorb
or
fsts
inc
cmp
adc
mov
mov
fwait
or
cld
bound
dec
inc
mov
ret
stc
and
sub
mov
rcrb
mov
in
ja
out
ret
push
mov
mov
sub
arpl
sub
cmpsl
aaa
push
jecxz
out
pop
loopne
lret
mov
xor
pop
mov
and
ret
cmpsb
and
sub
cmpsl
leave
add
mov
iret
xchg
aaa
lods
xlat
lock
or
mov
pop
cld
xchg
div
pop
xchg
push
aad
popf
mull
mov
outsl
movsb
and
mov
ror
pop
mov
and
out
mov
or
scas
sub
loope
je
jnp
xchg
scas
fs
dec
jo
add
arpl
inc
push
je
and
xchg
stos
faddl
fcoml
stc
xchg
mov
inc
mov
pop
icebp
and
cvtdq2ps
dec
push
cmpsl
ror
jmp
sbb
es
sarb
out
inc
lcall
adc
fisubrs
mov
test
xor
jg
adc
in
adc
jp
outsb
movsl
cs
outsb
fwait
xchg
ss
in
ljmp
stos
icebp
xor
cld
fildl
sarb
ja
dec
mov
popf
sahf
and
mov
jge
mov
lret
xlat
jae
scas
neg
hlt
enter
data16
adc
jg
test
sbb
push
and
sbb
inc
test
pop
test
jmp
push
stos
mov
pop
iret
fs
out
cs
fstl
pop
jg
cmp
fcoml
in
es
repnz
lea
mov
repz
add
mov
movsb
inc
mov
cmpsb
adc
loope
fsubrl
xchg
lods
xchg
test
pop
xchg
jecxz
ja
mov
push
sub
add
sub
dec
push
add
negl
sbb
pushfw
and
push
pop
frstor
filds
pop
fwait
xor
sbb
pop
pop
add
jno
xchg
cmpsb
sub
sub
fwait
in
rcrl
adc
je
pop
jp
incl
mov
movsl
push
or
pusha
or
sbb
cmp
add
cmp
cli
je
cmp
lds
dec
xchg
out
lock
and
cmp
mulb
outsl
cmc
out
out
ljmp
sbb
pop
stc
sti
fbstp
fisubrs
popl
repz
mov
sub
mov
sbb
push
mov
psubd
nop
arpl
mov
jmp
out
ja
shrl
add
mov
dec
std
pop
sub
movsl
addl
adc
push
mov
push
xchg
dec
jno
or
pop
xorl
jge
xchg
push
mov
loopne
imul
hlt
cmp
jecxz
roll
hlt
dec
test
xlat
mov
mov
ret
ret
push
sbb
pop
add
lea
or
lds
outsb
ljmp
out
notb
gs
and
adc
stos
xchg
sub
cmp
pop
jge
loope
mov
daa
mov
inc
lahf
xchg
mov
dec
jne
outsb
dec
xchg
imul
stc
jle
test
iret
scas
add
outsb
sub
jae
inc
bound
aam
sbb
js
jne
sbb
push
push
or
pop
dec
rcrb
dec
in
repnz
rorl
stc
jp
sub
mov
daa
jecxz
ljmp
dec
mov
aaa
pusha
sub
into
insb
jno
imul
push
inc
mov
cmpsl
cmp
mov
or
add
call
or
stc
int3
filds
shlb
or
jge
hlt
mov
lods
pushl
orl
out
jne
in
add
stos
cmp
dec
mov
cmp
mov
loope
jbe
hlt
cmpsb
rclb
test
insl
pop
fcoml
push
and
pusha
inc
lock
faddl
lret
out
mov
rcrl
aas
pop
lock
lret
in
xor
or
aas
fbstp
sbb
push
add
dec
adc
orb
pop
pusha
es
push
xchg
jne
dec
push
hlt
repnz
sbb
add
data16
or
mov
fdivrs
or
cmp
jp
fnstcw
add
mov
in
movsb
jae
icebp
mov
pop
movb
add
jl
mov
js
das
add
xor
aas
jg
add
stc
sbb
xchg
and
xchg
mov
lcall
outsb
mov
in
cmc
call
test
popf
push
mov
stc
ficoml
pop
ljmp
aam
sub
ret
gs
dec
pop
sub
ror
xchg
sbb
mov
in
inc
std
test
mov
loop
adcb
rcrb
aaa
jno
scas
push
or
lods
test
add
mov
mov
out
js
add
clc
pop
mov
mov
mov
jmp
test
mov
jle
xchg
xchg
shrl
imul
and
daa
cmp
sti
stc
arpl
jo
in
out
imul
out
sbb
sub
add
mov
mov
sahf
icebp
adcb
add
cmp
mov
mov
and
xor
jne
enter
jle
addr16
test
mov
lret
jge
jo
push
fdivs
daa
cwtl
jo
test
test
mov
outsb
out
shr
mov
adc
rolb
jmp
loopne
stos
cmp
pop
inc
mov
xchg
stos
out
sarb
lods
jb
test
mov
cwtl
lret
int
lock
mov
in
pop
aad
push
loop
or
fldt
nop
sub
mov
mov
mov
cmp
cmpsb
aad
xchg
sbb
fimull
das
inc
lods
andb
pop
outsb
push
add
mov
push
add
or
xor
inc
notl
repz
mov
insl
jp
pushf
mov
sub
dec
in
cmp
ljmp
imul
inc
xor
test
pop
push
notb
daa
rcrb
insb
mov
enter
mov
mov
ret
mov
int3
xor
aam
lods
xor
test
inc
jnp
lock
lcall
add
dec
lock
push
mov
pusha
sbb
fs
or
xchg
loopne
pminsw
cmp
lret
mov
in
pop
sbb
push
fcoms
pop
jnp
cmp
xor
jae
dec
or
inc
sub
jno
movl
adcl
bound
lret
adc
adc
add
or
lods
sub
fists
in
test
sbb
hlt
negl
out
mov
aas
cs
lds
inc
gs
fs
fmuls
jmp
mov
movsl
adc
add
lea
ss
add
jbe
mov
enter
mov
pushf
xchg
pop
fwait
mov
outsb
shl
popf
out
in
mov
xchg
pop
xor
add
adc
jg
push
jno
cld
cmp
loop
add
scas
pop
lret
out
cmc
fucomi
or
push
pop
lds
out
add
iret
sbb
in
test
fidivrs
loop
xor
xchg
mov
fcmove
lods
out
sub
sahf
jne
idivb
adc
in
into
jnp
lods
das
cmpsl
mov
or
jecxz
loope
arpl
pop
or
lcall
and
ret
jo
xchg
lds
outsb
lret
cwtl
inc
stos
fcmovnb
movsb
mov
fstpl
call
sbb
outsl
inc
fdivs
mov
in
mov
cmp
shll
loopne
fcmovu
pop
xor
jnp
mov
mov
inc
cmp
pop
mov
lea
mov
pop
es
jmp
mov
mov
inc
pop
push
not
test
xchg
inc
cli
insl
mov
mov
jnp
fistpll
pop
fsubl
push
adc
adc
fcoms
xor
xor
sbb
dec
leave
data16
lahf
sarl
inc
mov
add
cmpb
ja
rcl
sub
adc
mov
inc
dec
cmc
mov
adc
fadds
lock
mov
aam
pop
repnz
insb
ds
ljmp
insb
pop
inc
cld
pop
mov
and
shll
sbb
jge
je
xchg
pop
dec
imul
insl
inc
mulb
out
test
out
xor
and
jae
inc
ret
add
jnp
mov
xor
push
lods
dec
xchg
hlt
mov
mov
lcall
cmp
or
vpmulhw
inc
push
fcomip
cltd
jo
cld
mov
pop
lcall
testl
push
push
inc
jecxz
fs
enter
add
mul
loop
ds
dec
add
call
sbb
mov
js
dec
or
jecxz
test
mov
and
clc
dec
pop
les
inc
lret
stc
nop
repz
mov
pop
push
sub
in
negl
jns
jo
movsl
movsb
mov
mov
mov
inc
cmp
jge
fdivr
enter
xchg
or
xchg
or
lock
lret
sub
jo
or
push
adc
arpl
icebp
fsts
cmp
sahf
filds
mov
jbe
cmp
sbb
leave
xlat
lret
push
push
pmaxub
rol
in
pop
or
mov
add
jno
sbb
pop
das
push
cltd
frstor
pop
push
in
pop
or
into
pop
out
jns
pop
mov
std
lret
stos
aam
adc
dec
mov
lret
sub
pop
and
test
jl
arpl
xor
into
ret
and
xor
in
iret
xchg
call
add
popa
fnstsw
lds
fidivrl
lock
adc
cmp
mov
pop
mov
repnz
push
loope
repz
xor
push
cli
and
pop
push
sub
adc
inc
xchg
test
inc
cmc
popl
push
lods
lret
movb
push
mov
imul
xchg
adc
nop
jle
movsl
lea
cmpsb
cwtl
pop
mov
test
outsb
addb
adc
pop
sbb
cmp
les
jl
mov
xchg
je
pop
mov
xor
and
bnd
push
jge
je
cmpsb
cmp
in
pop
pop
addl
iret
popf
shl
fbstp
cli
fwait
loopne
shlb
movsb
or
in
pusha
mov
notb
repnz
xlat
insb
add
mov
incl
fisubl
lret
insb
nop
test
fcmovne
or
mov
and
or
jae
in
mov
popa
push
xor
test
movsl
cli
sbb
pop
adc
je
push
clc
movb
inc
inc
add
addps
xchg
js
scas
jnp
jbe
repz
sbb
fistpll
mov
daa
or
je
data16
popa
xor
cli
inc
test
inc
push
pusha
sbb
sbb
push
xchg
loopne
cmp
xchg
stc
rcll
repnz
adc
mov
sub
call
bound
out
dec
xor
js
push
jg
cltd
rorb
arpl
outsb
add
stos
sub
jb
in
sbb
nop
push
and
test
dec
test
imul
jbe
xor
gs
lret
shl
jne
dec
data16
mov
cmp
les
push
and
mov
xchg
mov
sub
gs
jmp
push
or
push
sbb
sbb
pushl
addr16
jne
sahf
into
les
jmp
push
and
popf
jbe
xchg
add
out
das
add
mov
inc
dec
enter
cmpsl
add
mov
aas
popf
and
insb
jne
mov
mov
inc
addr16
jecxz
pop
jne
or
dec
scas
ja
fsubs
or
jg
add
xchg
aas
sub
inc
mov
mov
or
in
mov
xchg
cltd
ja
sub
and
daa
push
cmp
fcoml
adc
int
dec
sub
imul
sti
add
or
mov
shrb
or
sbb
xorl
push
outsl
xchg
jno
pop
andl
adc
inc
push
xor
scas
or
addr16
std
xorw
or
aam
testl
cmp
xchg
call
shl
cmp
sub
mov
jbe
mov
inc
cmpb
dec
std
push
popf
adc
into
inc
pop
or
rcrb
fildl
imul
je
push
inc
xlat
xor
mov
call
cmpb
popa
adc
inc
inc
bound
out
je
fistpll
aam
shrb
cmp
push
orl
xorb
mov
insb
rcrl
dec
ljmp
das
repz
xchg
xchg
push
and
cmpsl
jmp
std
fsub
rolb
push
pop
jmp
sub
loopne
aaa
hlt
sti
and
xor
mov
pop
lock
scas
dec
cmc
sbb
loopne
popa
jp
pop
inc
cmp
insl
push
ret
add
or
jnp
and
sbb
mull
adcb
cmp
sbbl
mov
aas
outsl
scas
xchg
and
pop
adcb
mov
add
mov
es
fs
dec
mov
xchg
sub
sbb
mov
xchg
shl
cmpsb
scas
or
outsb
mov
cs
cmc
mov
test
mov
jmp
push
cmp
inc
pop
push
pop
lcall
ret
je
and
pop
arpl
in
pusha
popa
inc
push
push
testl
sahf
sub
lret
mov
cmp
mov
mov
inc
ficompl
fmuls
and
das
mov
jae
pop
cmp
aam
add
daa
ret
pop
mov
mov
add
faddl
and
out
adc
aad
fadds
sbb
xchg
addr16
cs
mov
and
xor
and
test
and
adc
lcall
fmul
cmp
mov
dec
inc
jecxz
in
pop
ret
sbb
cmc
repnz
cltd
pop
daa
push
and
mov
fsubrp
dec
test
add
sub
mov
xchg
jmp
out
out
inc
jl
pop
arpl
pop
adc
push
fmulp
jmp
inc
adc
jb
fwait
xor
jge
jns
push
les
dec
ret
dec
xchg
je
scas
repz
jecxz
je
xchg
fwait
shlb
pop
cmpsl
mov
mov
aad
imul
fnstsw
in
dec
movsl
imul
mov
dec
mov
mov
xchg
and
pop
inc
loope
aam
mov
or
push
jo
loopne
lret
lods
sub
ret
dec
sub
inc
addr16
sbb
jbe
and
loop
inc
and
shrl
and
fistpll
ja
cmpsb
repz
jb
in
sbb
add
cmpsl
insl
fists
xchg
test
movsb
loopne
pop
mov
push
ret
jae
lret
outsb
movsb
sub
in
inc
mov
or
jmp
sbb
sti
loope
mov
lret
push
shll
fs
sub
fwait
js
sub
movsb
lcall
fwait
pop
sbb
cmp
testb
mov
xor
inc
xor
je
cltd
xor
mov
popf
leave
loope
in
ljmp
pop
cmp
add
enter
pop
repnz
call
in
lcall
push
xchg
mov
loopne
inc
mov
and
pop
cs
mov
test
test
sbb
or
inc
repnz
jbe
ljmp
and
dec
sbbb
mov
out
sbb
popf
mov
nop
mov
adc
pop
mov
and
out
push
add
stos
xor
mov
xchg
in
mov
cltd
sbb
and
insl
icebp
out
arpl
popa
push
pusha
in
mov
insl
insb
adcb
test
cmp
dec
out
data16
pop
mov
dec
sub
lds
cltd
xchg
lods
and
pop
mov
imul
es
shlb
jne
pop
mov
test
hlt
pop
mov
test
fucomp
dec
sti
cmp
ljmp
pop
push
mov
inc
mov
addl
jne
loop
inc
adcb
push
popf
xchg
cmp
adc
lods
rorb
repz
mov
cld
clc
icebp
cmp
fcmovne
mov
xchg
gs
mov
adc
jnp
fsubrp
dec
movsb
icebp
mov
cmp
mov
incl
notb
outsb
jno
dec
jne
mov
dec
cmp
push
aad
adc
sub
lea
ret
out
xor
xor
or
ret
clc
popl
divb
jmp
subb
add
dec
inc
movsb
sub
push
inc
mov
mov
fimull
ja
fisubrl
int3
inc
pop
loope
xor
ret
inc
adc
pusha
test
test
lock
inc
mov
and
lock
lret
jbe
pop
sbb
xor
ja
push
mov
pop
std
add
lods
js
jg
mov
cmp
add
stos
cmp
mov
pop
push
cs
imul
dec
xchg
xchg
loope
xor
testb
mov
stos
xlat
ds
cmp
inc
and
stc
notb
fs
xor
hlt
mov
push
sbb
scas
dec
cltd
sub
in
push
mov
mov
cltd
cmp
dec
mov
mov
cmp
dec
stos
jmp
shll
mov
dec
inc
daa
cmovno
dec
fwait
inc
jl
loope
pop
mov
xchg
jge
and
popf
out
out
jne
lods
lcall
movl
or
dec
jo
xor
dec
fcompl
mov
and
xchg
std
hlt
mov
sbb
ds
sub
jnp
mov
popf
test
push
inc
imul
cli
pop
xchg
add
mov
leave
sub
call
arpl
faddl
and
iret
or
push
mov
mov
outsl
sub
jo
mov
shll
das
fidivrs
and
xor
mov
mov
ds
jl
outsb
sbb
in
decl
rolb
sub
mov
xor
cltd
mov
jl
stc
jp
lahf
sbb
dec
and
add
rcll
pusha
mov
pop
ja
pop
js
lahf
adc
addr16
jne
push
ret
sbb
pop
adc
push
mov
divl
sysenter
mov
mov
in
out
test
sub
das
jns
aas
mov
lcall
arpl
or
mov
gs
popf
and
fbld
push
aam
and
xchg
jno
xchg
inc
aas
jo
aaa
mov
lock
loope
repz
lds
push
ja
cld
mov
sub
test
int
cli
clc
repnz
fsubs
test
jo,pn
push
mov
add
xor
sbb
rclb
dec
lcall
cmp
adc
mov
push
mov
cmp
inc
xchg
popa
and
outsb
mov
cmp
sub
sahf
test
aaa
push
int3
sbb
inc
cmp
mov
or
fnstsw
mov
lods
mov
mov
pop
and
xor
cmpsl
push
lods
dec
mov
push
pusha
js
add
sub
fstl
sub
sahf
fs
pop
js
shlb
lcall
insl
std
enter
sar
icebp
and
sbb
test
stos
cmc
movsb
mov
push
push
aas
mov
dec
sti
dec
mov
or
sar
dec
dec
pop
xchg
lret
mov
jnp
xchg
lock
nop
jnp
pusha
pop
xor
mov
inc
sub
sti
push
mov
lods
mov
test
imul
ds
int
or
cmp
jle
mov
popf
shll
out
cltd
imul
data16
jno
jae
or
ljmp
xor
cmp
push
sahf
xor
cmp
jecxz
jno
sub
and
test
cwtl
fldcw
xchg
fcomps
or
stos
push
mov
xchg
push
push
add
sahf
das
andnps
jbe
scas
outsl
mov
xor
pop
sbb
mov
lret
sti
je
mov
mov
mov
sbb
in
movsb
push
sbb
and
int3
lods
xchg
sbb
mov
hlt
int
ds
ljmp
mov
lea
mov
stos
or
icebp
jo
std
popa
adc
sbb
stos
leave
or
into
pop
cmp
rorl
adc
lret
sub
iret
rcl
xor
out
data16
xor
pop
push
cmc
test
out
jle
pop
lahf
movsb
cmp
sbb
ldmxcsr
hlt
std
arpl
loope
push
xor
adc
rcl
and
and
into
xor
cmc
cmp
or
out
ljmp
sbb
push
add
pop
dec
pushf
out
dec
inc
or
les
jmp
pop
in
and
rcl
clc
mov
mulb
mov
and
push
push
imul
xchg
js
lahf
xchg
fnstsw
mov
lods
dec
add
js
adc
push
mov
mov
cs
pop
push
enter
les
add
outsl
push
movsb
popf
dec
xor
hlt
jl
sbb
leave
iret
pushw
xchg
jo
pop
lea
out
shlb
lret
push
stos
or
ficompl
and
loope
inc
cmc
decl
hlt
mov
mov
sub
popf
push
xchg
rcr
arpl
mov
dec
repnz
adc
pop
pop
rorl
mov
mov
pop
mul
sub
add
inc
orb
inc
daa
loopne
or
push
add
js
adc
push
das
shrl
push
cmp
mov
out
adc
call
jne
push
fisttps
sbb
or
fwait
and
mov
push
pop
sub
xchg
or
xorb
out
xchg
push
cwtl
sbb
fbstp
lcall
enter
in
xorl
scas
fildl
sbb
loopne
pop
jae
push
xor
test
loope
mov
inc
lcall
mov
out
gs
jg
jbe
ret
push
dec
push
daa
lods
pop
push
scas
xchg
inc
mov
inc
mov
jle
mov
cmpsb
mov
pop
or
add
or
sbb
xchg
mov
leave
xchg
mov
dec
ljmp
add
test
add
push
jno
ljmp
sbbb
pop
cltd
mov
jb
cmp
push
mov
sahf
push
in
idiv
loope
test
pop
cmp
push
push
pop
adc
xor
mov
lods
or
incb
sbb
outsl
test
jmp
mov
cld
xchg
lock
pop
mov
mov
jbe
adc
rclb
mov
jo
mov
sbb
popf
stc
and
scas
mov
xchg
ficomps
out
mov
aaa
dec
dec
jb
insb
pop
test
mov
cmc
jecxz
in
inc
lea
out
add
jge
in
sub
ss
jl
sarl
hlt
ret
ss
cmp
icebp
lds
iret
insl
pop
js
lock
jo,pn
mov
fldenv
fcmovnbe
repz
sub
dec
mov
pop
push
inc
xchg
std
lea
add
mov
mov
mov
inc
sahf
popa
push
jo
les
dec
mov
push
jg
mov
push
sbb
mov
xchg
bound
lcall
out
or
bound
xor
stc
in
pusha
mov
daa
cmpsl
sub
sbb
cmp
add
mov
xlat
sbb
jp
pop
jo
mov
ss
pop
push
jae
test
adc
jmp
jns
mov
outsb
out
xchg
loope
jmp
mov
les
movsb
jno
lods
in
mov
mov
and
sbb
sbb
mov
ror
clc
cld
xchg
mov
mov
and
xchg
xchg
jp
ficoml
loope
push
cwtl
or
jle
orb
out
sbb
popa
cmp
sbbb
mov
fldl
icebp
pop
fsubs
xchg
adc
mov
dec
inc
bound
cwtl
sbb
inc
fildl
mov
sbb
fdivrl
and
sub
clc
mov
push
in
std
movsb
mov
repnz
in
and
int3
adc
xchg
sub
mov
daa
cmp
mov
lret
dec
test
cmpsl
dec
loope
mov
les
jnp
sahf
or
sub
mov
adc
dec
call
addl
add
sbb
movsb
lea
jb
bound
or
out
inc
dec
dec
dec
dec
repz
mov
and
fisttpll
popf
jb
mov
imul
sbb
cmc
mov
nop
push
mov
xchg
mov
mov
and
or
cs
dec
push
hlt
xchg
xchg
sub
popf
shll
cmp
andl
push
and
push
cmc
jg
lahf
inc
add
hlt
mov
sub
stc
daa
cli
mov
test
inc
cmc
aas
mov
xchg
in
or
jge
out
sahf
pop
mov
dec
ret
pop
xor
add
in
sbb
adc
call
mov
add
mov
adc
cmp
lcall
lds
fidivs
jl
push
xor
aas
cmp
lock
outsb
cs
out
jnp
stos
pop
nop
add
cmpsb
stos
mov
shlb
dec
mov
out
or
jnp
stos
add
test
pushw
leave
adc
repnz
mov
adc
jp
filds
sub
scas
ficoms
mov
mov
cs
jbe
push
add
lcall
mov
adc
mov
push
sbb
and
adc
push
dec
mov
sbb
mov
dec
leave
cld
pop
stc
push
cmp
lret
fdivl
enter
add
repnz
outsb
and
fdivrl
hlt
and
into
pushf
push
jecxz
cmp
bound
lcall
inc
mov
jmp
ja
adc
daa
fdivl
mov
rcl
inc
or
jmp
sbb
call
aad
dec
cmpl
pop
in
nop
jo
xlat
push
xchg
or
into
mov
pop
jecxz
mov
sub
jg
or
jl
iret
dec
movsb
xchg
cmp
sub
dec
arpl
dec
cmpl
adc
mov
ret
sahf
sub
jno
in
sub
add
shrl
adc
pop
xchg
push
push
aad
jne
inc
test
les
sub
orl
fdivs
xor
les
mov
add
inc
mov
popl
das
fidivs
jge
inc
nop
mull
xchg
sub
jae
cmpsl
jecxz,pn
mov
jae
in
sbb
loop
xor
idivl
cs
mov
xchg
push
jne
ja
aam
xchg
aaa
rorb
push
pop
jmp
adc
cwtl
add
stc
movsl
das
je
pop
mov
rclb
icebp
mov
ljmp
stc
mov
push
sub
pop
out
xor
adc
cli
add
xchg
daa
xchg
jnp
and
xchg
mov
mov
clc
mov
xor
inc
fsubrl
inc
in
push
cwtl
pop
fdivrs
add
les
jecxz
sbb
mov
inc
push
test
sbb
jno
add
in
sub
mull
lock
or
rcrb
and
push
and
mov
and
push
sbb
movsl
mov
lds
gs
jecxz
cmp
rolb
dec
ficoms
inc
cmc
xchg
sub
cmpsb
fildll
and
das
dec
mov
mov
jmp
and
das
sub
and
enter
push
int3
outsb
jl
and
lock
in
and
cmp
pop
mov
and
js
mov
imul
xchg
icebp
xchg
add
ss
aas
mov
add
sub
int3
sbbb
or
pop
xchg
push
fsubl
scas
inc
incl
movl
inc
sub
stos
or
lret
fs
mov
mov
aaa
fsubrl
mov
xchg
or
xlat
pusha
cwtl
xchg
jecxz
and
inc
mov
push
cmc
and
mov
movsb
mov
dec
cs
lahf
mov
push
movsl
insb
mov
inc
subb
out
ja
mov
jbe
sti
pop
cmp
daa
fisubrs
inc
idivl
dec
pop
movsl
or
lea
adc
and
push
dec
mov
sbb
push
test
mov
push
ljmp
and
add
or
mov
sub
fwait
fs
add
fists
mov
jno
jp
xorl
in
mov
dec
test
in
inc
push
mov
mov
leave
xchg
mov
sub
inc
roll
mov
push
mov
pop
inc
ret
mov
xor
mov
lock
jmp
pop
xchg
loope
sbb
and
sti
and
mov
lcall
dec
fcompl
loopne
outsl
enter
cmpsb
orl
gs
sbb
lcall
push
pushf
jp
mov
inc
dec
pop
pop
xor
popf
das
mov
push
ja
jne
push
sbb
fstpl
loope
sub
pusha
cmpsb
aam
jbe
jo
mov
or
lea
sbb
xor
fcoml
lods
cmp
scas
push
inc
out
enter
push
and
in
rorl
pop
mov
ret
xorl
mov
add
adc
add
test
xchg
addr16
pop
mov
pushl
enter
iret
popa
aam
movb
mov
pop
sbb
fxch
imul
js
in
dec
mov
cltd
push
fs
or
sbb
jns
jb
or
add
pop
insl
ret
lcall
arpl
and
push
adc
inc
pop
push
outsl
push
iret
push
cmp
push
bound
aad
mov
loop
cmp
fisubrl
pop
or
shlb
les
lock
cltd
mov
jne
out
pop
xchg
add
sbb
cwtl
cmc
mov
rcll
jbe
jo
inc
jge
sbb
dec
inc
inc
test
or
ds
mov
adc
jne
adc
lret
and
mov
pop
outsb
shll
sbb
test
pop
sub
sti
mov
jmp
faddl
stos
nop
enter
mov
aas
dec
flds
lds
std
dec
int3
in
insl
mov
cmp
mov
mov
adcl
ret
shll
sahf
aad
sub
fs
movsl
sar
mov
and
faddl
sub
popa
and
out
inc
push
insb
movsl
leave
in
sbb
ljmp
jae
or
xor
in
faddp
push
add
out
push
inc
ds
popf
enter
sub
mov
fcom
rclb
or
jmp
jle
pushf
lds
jg
dec
jnp
ret
pop
inc
add
stos
mov
mov
cld
aad
jbe
lods
inc
dec
mov
mov
stc
fwait
pop
rcll
adc
and
sub
adc
stos
outsl
insb
mov
inc
mov
sbb
add
xor
out
outsl
es
insl
pop
inc
xor
in
push
mov
insb
outsb
add
xor
in
xchg
loope
xor
sub
idivb
dec
and
jns
xlat
je
xor
push
mov
sub
xor
insl
frstor
push
jmp
pop
sbb
addr16
cmpsl
cs
cli
je
push
in
loop
mov
jle
sbb
mov
icebp
push
leave
or
test
xchg
jp
dec
in
hlt
push
mulb
mov
push
nop
bound
mov
aad
pop
xchg
lahf
jl
repz
xchg
out
into
lahf
xchg
mov
xchg
ss
aad
loope
push
pusha
inc
sahf
fcmovb
int3
push
cmc
mov
inc
incb
pop
repnz
mov
pop
adc
popa
xchg
not
dec
cld
es
pop
dec
cltd
pushf
push
stos
sahf
and
pushf
jge
lahf
cld
stos
pushf
inc
cmp
jnp
mov
jecxz
cmc
add
dec
adc
or
hlt
fdivs
jmp
pushf
pop
sbb
push
inc
cmpsl
data16
pushl
ret
cmc
nop
addb
lock
pushf
inc
lea
add
mov
fnsave
jge
scas
sahf
cs
jecxz
mov
xlat
stos
mov
sbb
xor
mov
jecxz
adcl
out
adc
test
nop
inc
mov
lahf
ret
sub
inc
lods
add
jp
dec
xchg
loopne
sbb
call
mov
adc
lods
mov
mov
mov
mov
pop
mov
adc
push
mov
jl
pop
repnz
and
xchg
or
mov
xchg
lock
mov
sub
jecxz
inc
mov
aaa
inc
outsb
sbb
les
add
jne
add
push
scas
mov
test
dec
popf
inc
cmpsl
push
sti
dec
es
cmc
mov
push
xchg
push
mov
add
lahf
pop
enter
jb
xchg
xchg
loope
popa
pushf
aam
out
and
sti
test
cwtl
sbb
sbb
insl
dec
push
pushf
jbe
xor
fidivs
cld
inc
cli
jne
mov
mov
push
adc
dec
jns
xor
loop
andl
aas
or
ljmp
cmpl
fwait
int3
add
dec
and
dec
outsb
ror
dec
test
cmp
push
or
mov
xchg
daa
inc
mov
mov
frstor
jl
sub
jnp
xchg
adcb
add
add
shrb
mov
rcll
push
and
sub
or
pushf
push
mov
idivb
sub
cmpl
fstps
cltd
mov
repz
add
adc
repnz
sarl
aaa
outsb
daa
mov
xor
fstl
rcrb
stos
and
popa
clc
lcall
inc
or
sub
inc
es
ret
mov
mov
test
lcall
add
test
out
loop,pn
imul
ja
dec
inc
dec
sub
leave
mov
rorb
jae
pop
push
mov
inc
hlt
ret
stos
mov
sbbl
test
fldt
and
in
xchg
adc
scas
cmc
mov
adc
mov
outsb
jmp
adc
sub
fwait
push
adc
scas
jle
xor
sti
xchg
add
roll
mov
ljmp
mov
ffree
jb
mov
jae
rclb
cmp
dec
es
popf
sub
hlt
and
out
add
jns
sbb
mov
mov
add
push
fdivrl
rorb
shl
dec
pushf
jp
jmp
push
sub
loopne
das
dec
sbb
mov
popa
xchg
mov
add
mov
lret
pop
xor
out
aaa
iret
mov
aam
mov
xchg
mov
add
cli
add
dec
insl
jbe
jno
ja
cmp
ds
test
jns
xchg
mov
push
or
pusha
sbb
fistps
push
mov
rorl
imulb
add
inc
jmp
lock
insb
ret
fbld
pop
clc
jne
mov
scas
xchg
adc
pop
ja
stos
popa
push
lcall
fimull
in
jb
sbb
jmp
push
sub
sub
cld
and
sub
mov
jno
inc
mov
loopne
inc
xchg
les
ret
les
jp
mov
dec
add
xchg
repnz
insl
fcom
or
mov
mov
mov
out
imull
jmp
jl
lods
ss
repnz
mov
leave
xor
jecxz
sbb
sub
jnp
mov
sub
ja
jp
shlb
jmp
leave
push
std
add
push
mov
xchg
repz
jl
add
cmp
xchg
adc
fwait
mov
outsb
jecxz
test
push
push
int
setle
or
mov
aad
rcrl
jb
cwtl
lock
lcallw
add
mov
jp
cwtl
xor
pop
sub
mov
daa
pop
jo
addr16
inc
cltd
dec
inc
repnz
pusha
sbb
mov
sub
call
cmpsl
dec
stos
adc
and
pop
jge
imul
lcall
mov
or
lds
stos
test
adc
mov
push
in
nop
arpl
loopne
mov
stos
ss
lods
mov
popa
mov
inc
notb
in
fidivrs
pop
dec
andb
pop
jl
into
fldcw
dec
mov
aaa
and
pop
xor
movsl
xchg
cmp
ja
sub
push
push
loop
mov
sbb
xor
mov
mov
or
or
aaa
and
rcl
pop
xchg
lods
dec
dec
cmp
test
push
stos
cmp
stos
loop
lret
mov
pop
sahf
out
cltd
and
mov
ds
fsubrp
leave
jns
dec
jg
mov
lcall
cmpsb
rcll
sti
dec
xor
repz
in
add
and
pusha
mov
sbb
add
adc
lret
mov
addr16
jg
pop
add
jae
stos
aaa
lahf
idiv
fsubrp
jne
xchg
jecxz
mov
cwtl
stos
pop
pop
notl
cmp
mov
cwtl
jp
cltd
dec
clc
cmp
inc
sbb
into
mov
into
ret
flds
jg
ficomps
fsts
bound
fwait
push
inc
jne
inc
pop
adc
add
push
insl
andl
test
rclb
imul
into
data16
cmc
or
rclb
test
lds
je
and
into
fistl
out
lock
movb
mov
push
add
xchg
mov
mov
xchg
xor
jg
fadds
sbb
and
xchg
add
xchg
jne
inc
inc
sarl
scas
and
push
repz
ljmp
cmp
inc
inc
test
dec
cmpsl
or
scas
xlat
sti
rcrl
inc
sub
scas
sbb
scas
xchg
dec
push
divl
sub
pop
and
gs
enter
mov
inc
and
ret
mov
ds
movsl
inc
xchg
mov
shrb
sub
daa
lret
int3
sbb
cmp
mul
adc
mov
sbb
aam
and
sub
cmp
xor
fwait
pop
mov
push
and
jae
int
ficoms
mov
cmpsb
hlt
gs
inc
cmp
sbb
das
scas
gs
mov
or
cltd
lock
add
in
stos
rcrb
ljmp
repz
sbb
sbb
dec
jne
cltd
cld
lret
movsb
ror
adcb
aaa
xchg
or
std
pop
mov
or
mov
dec
ja
shrl
mov
addb
push
xchg
pop
xchg
mov
mov
scas
or
mov
rcrb
mov
inc
mov
aaa
in
add
movsl
jmp
jns
mov
int
pop
cwtl
aam
cmp
jno
push
mov
mov
rcll
xor
dec
sub
mov
lret
dec
ret
add
mov
mov
test
fnstcw
leave
cmpsb
hlt
mov
push
in
jno
shr
mov
stos
call
popa
out
gs
gs
scas
fsts
hlt
ljmp
bound
dec
cmp
or
add
mov
js
fs
sarl
stc
adc
mov
test
xlat
out
sahf
or
xchg
clc
lahf
or
xchg
inc
cmpsb
adc
mov
mov
je
inc
dec
out
and
stc
jecxz
movsb
sti
lret
std
jb
dec
lret
aad
or
hlt
test
stc
sahf
loop
iret
jbe
mov
andb
ret
and
fs
or
fsubl
das
cmpsb
sub
sbb
inc
mov
call
mov
dec
lcall
movl
lock
adc
xchg
dec
push
mov
cmc
mov
xor
gs
jb
sbb
call
mov
xchg
push
lret
mov
ss
mov
sbb
mov
mov
xchg
fsubr
pop
enter
and
sbb
mov
cmp
lcall
lods
aaa
in
add
movsl
xchg
mov
sbb
inc
lret
xchg
push
aad
push
lcall
push
cwtl
sahf
mov
mov
sbb
mov
push
in
jp
jl
out
inc
pop
lahf
xchg
sub
js
push
add
adc
lock
jp
int
xor
and
imulb
add
add
stos
push
repz
cmp
lcall
inc
int3
push
adc
mov
xor
sbb
mov
sbb
xchg
roll
pop
add
cld
mov
pop
or
test
incl
xor
mov
push
test
jbe
and
jmp
mov
mov
jo
popf
loopne
subl
dec
xor
into
or
inc
lahf
cmpsl
lds
es
and
ficompl
add
push
mov
sbb
cld
mov
sbbb
cltd
sbbl
mov
push
jno
aad
lea
xchg
mov
adc
sub
mov
adc
sahf
push
in
enter
pop
fcomi
lods
mov
jl
ret
jo
jle
mov
nop
out
ljmp
adc
stc
sbb
stc
xchg
sti
dec
or
dec
add
dec
enter
cmp
pop
jmp
xchg
lret
push
mov
bound
fiadds
mov
pop
jno
subl
imul
dec
sbb
or
mov
in
cmp
push
xor
aam
and
lret
into
push
test
test
stos
xchg
mov
jg
pusha
cmp
adc
adc
xor
in
jnp
arpl
mov
hlt
mov
int3
sub
into
nop
sbb
push
insl
test
add
jl
adc
scas
cmc
add
jg
mov
add
cmp
add
xchg
mov
shr
mov
sbb
ja
out
xchg
add
cmp
sub
dec
mov
sub
ljmp
out
sbb
imul
imul
jnp
xor
mov
add
test
sbb
ss
je
sti
mov
jns
je
jnp
aad
clc
dec
outsl
mov
adc
xchg
cwtl
xor
lret
lahf
fcom
lods
sbb
dec
or
xor
jmp
stos
lods
pop
and
and
sub
pushf
data16
mov
push
clc
mov
push
stos
and
fldt
dec
mov
lods
les
lods
jne
inc
jno
jb
sub
shll
lret
pop
cmp
xor
xchg
mov
xlat
fisttpll
insb
add
cwtl
es
pop
shrl
mov
out
int
gs
add
mov
stc
fadds
in
dec
cmp
arpl
lret
jmp
in
imul
sbb
pop
out
clc
lods
pop
pop
mov
out
add
xchg
movsb
addb
cli
andl
sub
push
js
ljmp
fadds
dec
sysret
data16
jle
push
lcall
bound
dec
xor
insb
push
dec
jecxz
out
testl
xor
jns
addr16
mov
or
add
sub
sub
pop
aam
jp
xchg
test
lahf
and
jne
mov
enter
pushf
dec
adc
xorb
iret
testl
sub
mov
test
pop
incl
jbe
aas
mov
dec
lods
push
pop
out
xchg
and
push
inc
and
std
push
xor
mov
sub
dec
fs
mov
inc
lcall
mov
fwait
mov
insb
stos
out
fsts
dec
adc
aas
sbb
in
int
fucomp
mov
pushf
out
popa
or
es
iret
adc
push
jae
sbb
cmp
xlat
lret
ja
or
adc
pop
pop
jb
or
addr16
enter
xchg
xchg
ss
mov
jmp
add
out
push
fldl
dec
notl
cmp
sub
sti
cld
push
fdiv
pushw
pop
incl
test
mov
shll
das
push
adc
fdivs
out
test
dec
xchg
pop
cmp
lea
dec
cmc
cmp
in
test
sbb
jns
lods
cmp
aas
xor
ret
fildl
push
ljmp
push
mov
sub
and
and
adc
push
sarl
sub
enter
daa
loope
mov
mov
out
pushf
cmp
loopne
arpl
sub
call
fimuls
add
mov
rcl
adc
push
lods
mov
lods
add
push
xchg
mov
jbe
rorl
dec
stos
xorl
inc
adc
popa
fcoml
dec
lcall
pop
mov
xchg
leave
les
sub
pop
xchg
pop
call
fst
test
popf
inc
xor
incb
dec
xor
shll
adc
loope
jo
sbb
test
mov
jo
std
mov
xor
gs
lds
adc
adc
clc
test
int
and
gs
jmp
daa
xor
xor
stc
bound
push
lahf
or
dec
ret
push
xor
cli
ret
fs
dec
adc
shrb
add
jge
popa
clc
addr16
jg
cld
and
dec
mov
push
lods
push
mov
dec
popf
ljmp
mov
push
pop
adc
rcrb
cmpsb
mov
push
je
dec
ret
std
movsl
idiv
xchg
adc
lock
xchg
dec
movb
push
idivl
lcall
test
cmpsb
sbb
pop
aad
shlb
jecxz
pushf
sbb
mov
sbb
pop
mov
pushf
lcall
stos
push
cmp
jge
cwtl
mov
or
cwtl
jg
jle
or
or
xchg
push
jne
jae
or
shll
adc
and
mov
inc
mov
and
shrl
imul
loop
push
out
mov
aas
push
inc
int
pop
divb
dec
test
xor
je
pop
xchg
scas
sbbb
jle
or
fwait
imul
ja
enter
cmpsb
adc
dec
push
repz
popf
sub
add
jp
or
lret
sbb
push
pusha
sbb
and
push
gs
nop
cltd
ret
addb
out
jae
push
rcll
mov
lock
addb
insl
mov
lahf
push
pop
xchg
and
lret
fs
repnz
mulb
shlb
call
inc
cwtl
imul
in
lods
pop
sbb
mov
or
insb
or
and
adc
dec
mov
push
push
inc
repnz
adc
and
data16
jae
jecxz
in
outsb
daa
addr16
jbe
add
adc
pop
lcall
icebp
dec
jbe
push
xchg
repnz
mov
lock
cmpl
repz
ss
push
sbb
mov
mov
xchg
aaa
das
xor
jl
add
jae
sbb
add
add
push
faddl
pop
push
insb
xchg
scas
dec
xorb
add
jb
enterw
call
in
inc
jnp
push
jecxz
sub
inc
mov
mov
mov
aam
sbb
lcall
xlat
ret
mov
repnz
cmp
push
gs
mov
paddusb
or
dec
xor
lock
mov
push
pop
out
bound
lds
jecxz
lods
mov
cmc
iret
sbb
adcl
ljmp
inc
rolb
inc
cmp
clc
out
stos
adc
arpl
jbe
outsl
std
nop
jmp
dec
jp
pop
dec
fs
test
mov
mov
dec
nop
dec
lds
cmpsb
mov
call
xor
and
imul
js
mov
or
scas
jp
je
push
daa
aaa
jg
sar
or
cmovle
iret
push
in
dec
cmp
daa
enter
pop
or
cmp
imul
adc
or
push
hlt
repz
icebp
fmul
lds
mov
pshufw
jb
lock
call
lds
inc
push
or
stc
mov
adc
dec
and
pop
das
repz
pop
dec
loope
lock
pop
mov
or
jno
push
mov
stc
adcb
push
arpl
add
mov
mov
fucomip
push
xorl
jmp
lahf
clc
mov
add
jge
cmp
push
sahf
sub
scas
sbb
cwtl
scas
pop
jbe
xchg
inc
push
bound
push
cmp
cmp
dec
out
lcall
rorb
adc
int
mov
scas
push
or
lahf
and
mov
adc
cld
adc
add
rorb
sub
and
xor
mov
jge
das
mov
cmp
imul
addr16
clc
adc
push
inc
push
mov
inc
push
mov
pop
imul
incl
inc
ja
add
rcrl
repnz
xchg
cmpsb
into
inc
dec
loopne
cmp
inc
dec
clc
imul
iret
call
ss
clc
cmpsb
rcl
and
hlt
jbe
gs
add
insl
cli
test
adc
test
add
adc
pop
cltd
cld
cltd
test
push
xor
fsubrs
jbe
xor
xor
sbb
test
push
scas
das
jecxz
popa
stc
insl
sub
jo
sti
jbe
mov
adc
and
xchg
test
cli
pushf
inc
rorb
or
pushf
pop
lcall
movsl
inc
scas
push
lcall
iret
inc
popf
and
testb
jle
iret
ret
xchg
inc
stos
jmp
xor
divb
stos
mov
pusha
sbb
ds
les
add
push
add
adc
cmp
fwait
cmp
scas
mov
or
sub
xor
jge
jg
lds
dec
mov
decl
cmc
popfw
cmp
push
sub
mov
ja
aas
loopne
pop
add
iret
dec
mov
cmova
in
sbbl
pop
clc
fcompl
push
dec
test
cmp
xchg
sub
mov
repz
add
mov
fsubrs
mov
dec
stos
add
xchg
and
sbb
inc
idiv
mov
jecxz
out
outsl
dec
aam
jl
dec
xor
dec
sub
repz
bound
mov
xchg
in
xor
ljmp
xchg
push
dec
push
js
sbb
pop
jno
mov
pop
pop
dec
xchg
lods
lea
in
insb
mov
jns
test
dec
jmp
jne
stc
push
shrb
xchg
cmp
mov
nop
leave
push
int
add
enter
push
loop
popa
lret
fnsave
int3
mov
sub
xchg
mov
mov
into
in
sub
mov
jb
pop
xlat
sub
aas
mov
inc
stc
pop
sti
xlat
inc
xchg
push
out
int3
sbb
out
push
pusha
push
xor
cwtl
stos
pop
int
or
push
sub
popf
movsb
push
fwait
seto
cmp
bnd
or
ret
mov
mov
or
addl
mov
data16
lahf
sarl
inc
aas
faddl
std
lods
mov
lea
in
sub
das
sbb
in
xchg
pop
insb
outsb
mov
xor
sub
es
pop
or
jle
mov
subl
inc
mov
mov
aam
pop
repz
movsl
and
dec
push
or
xchg
mov
jo
mov
fisubs
xor
push
jp
movl
movsl
sbb
imul
das
inc
ret
fucomi
clc
xchg
push
dec
pop
sub
mov
push
int3
negl
or
xchg
inc
btc
mov
cmp
sti
fisubs
sbb
lret
aad
push
mov
inc
outsl
or
jg
imul
and
xor
xchg
xchg
test
mov
pop
ficoml
adc
or
mov
cld
push
in
dec
add
jmp
pop
dec
cltd
ret
adc
xor
push
xchg
outsl
and
dec
sbb
xor
jb
pop
popf
sub
mov
repz
sub
call
in
ljmp
push
pop
xchg
outsl
ja
xor
test
fwait
lahf
lock
jae
or
ljmp
sahf
pop
and
mov
fnstenv
sbbb
push
int3
adc
sbb
push
icebp
mov
scas
and
mov
push
sub
scas
jo
cmc
push
call
push
push
sub
js
adc
mov
jle
push
mov
cli
nop
int3
and
call
scas
push
pop
pop
dec
mov
setns
inc
pusha
mov
or
jmp
pushf
dec
adc
xchg
mul
loop
outsl
inc
arpl
xor
cmp
inc
xchg
or
mov
sbb
les
shlb
dec
xor
mov
rolb
addr16
jmp
dec
mov
xchg
insb
or
loopne
mov
jne
cmc
das
ret
sub
inc
and
cli
pusha
pop
gs
lods
cmpsb
push
int3
ljmp
out
cmpsl
sbb
lock
jge
iret
xor
push
mov
mov
dec
jge
cli
push
jp
call
in
inc
enter
push
jl
mov
mov
daa
aas
imul
stos
push
xchg
pop
jmp
arpl
aas
push
jae
jnp
sarl
mov
out
leave
adc
std
sub
push
adc
std
gs
inc
push
jl
out
addb
mov
dec
sub
dec
mov
xchg
gs
pop
pop
xor
fistpll
xor
or
ret
sti
xorb
push
rcrb
xchg
push
mov
ljmp
inc
adc
sub
jl
mov
insb
rolb
dec
mov
mov
arpl
jmp
push
xor
shlb
jl
jo
or
andl
adc
lret
mov
push
das
or
push
int
jno
sub
add
sbb
jae
cmp
lret
xchg
es
fnstsw
push
xchg
mov
fdivrl
jl
mov
push
fimuls
dec
ljmp
push
lret
fistl
in
sub
adc
imul
sbb
fnsave
mov
divb
repnz
in
push
call
xor
fsubrl
xor
jno
js
dec
repz
sbb
inc
out
sbb
repnz
sub
jnp
pop
enter
dec
hlt
push
fsubs
mov
mov
int
sub
adc
addl
push
pop
mov
mov
lock
dec
cmp
push
mov
xchg
dec
test
mov
jge
jne
push
std
cmpsb
jl
pop
inc
mov
sub
push
jae
jecxz
cmp
xor
add
or
mov
xor
lahf
cmpsb
push
iret
ret
scas
stos
push
dec
mov
inc
xor
add
repz
sub
daa
xchg
push
jo
or
pop
lea
test
data16
cmpsb
jae
jmp
dec
jb
add
sbb
inc
add
mov
popl
int
loopne
pop
add
xchg
fwait
add
mov
notb
pop
jle
ret
inc
movsb
inc
out
or
xor
jb
cmp
stos
js
dec
push
jo
push
jno
sbb
in
pop
test
fmuls
leavew
mov
rcrl
test
mov
shrb
insl
pusha
mov
mov
or
negl
cli
adc
mov
push
inc
iret
xchg
jecxz
lods
les
or
mov
mov
xor
mov
aaa
imul
mov
xchg
fists
push
jecxz
push
pop
xchg
inc
xchg
gs
test
cmp
adc
dec
ljmp
mov
push
mov
jne
outsb
push
in
jle
mov
push
sub
das
nop
push
sub
outsb
jb
cld
inc
xchg
test
jbe
inc
xchg
mov
rcr
data16
stos
repz
or
pop
loop
xor
jnp
jl
cmp
rcr
push
lea
mov
inc
cwtl
out
add
cld
xchg
and
loope
push
mov
sub
loop
jns
insb
stos
mov
mov
mov
mov
mov
fistps
repnz
rcrb
dec
frstor
push
pop
jbe
adc
pop
cwtl
mov
adc
loopne
dec
stc
xchg
add
shl
rcr
sbb
test
mov
pop
movsb
jge
out
dec
arpl
and
cmc
cli
pusha
lcall
in
push
rcl
imul
xor
daa
imul
sbb
test
mov
or
lahf
push
pop
inc
outsb
or
in
jne
jno
xchg
pop
adc
dec
fisubrl
add
mov
movsb
and
sbb
cmp
dec
jl
ss
mov
add
scas
scas
push
push
fwait
aas
or
loop
adc
pop
icebp
xchg
pop
mov
shl
testl
cmc
movsl
cmp
mov
enter
jnp
mov
nop
dec
lock
add
mov
mov
outsl
dec
in
out
scas
imul
inc
mov
aad
dec
out
test
xor
mov
mov
daa
add
push
push
stos
clc
aaa
insl
ret
push
lds
dec
xor
add
dec
dec
jmp
inc
adc
stc
xchg
or
ret
xor
pop
pop
xchg
je
jle
mov
add
fucomi
sti
shl
dec
mov
sub
filds
cmp
sbb
push
pusha
daa
jl
cmp
xchg
mov
int3
xor
stc
clc
xchg
lcall
lods
cmp
pop
and
ljmp
lods
dec
shrl
mov
dec
enter
mov
pop
aas
int3
pcmpeqb
mov
outsl
and
pop
rorl
cmp
das
fs
dec
sub
sbb
cli
and
rorl
jmp
mov
sbb
or
dec
cmp
ret
mov
or
pop
jb
imul
iret
test
push
and
dec
div
pop
out
jg
jbe
inc
jecxz
mov
jg
in
adc
add
dec
dec
add
pop
stc
push
iret
sub
and
sub
scas
rclb
inc
ljmp
add
dec
sbb
test
mov
dec
dec
movsb
add
pop
arpl
lods
cwtl
or
and
lret
mov
or
ljmp
push
fildl
mov
jnp
stos
rorb
jg
lahf
mov
add
mov
push
orb
movl
jne
pop
icebp
movsl
dec
sub
sbb
jnp
jb
xchg
mov
shrl
or
xchg
mov
add
int
or
insl
ljmp
jge
push
mov
and
movsb
cmp
and
outsl
insl
adc
lret
sbb
mov
inc
mov
outsl
negl
aam
xor
push
inc
repnz
hlt
lea
ljmp
ret
loopne
jae
data16
fcmovbe
push
gs
outsl
xor
dec
xlat
jmp
shll
mov
mov
pusha
cmc
in
scas
jne
push
jbe
mov
fwait
mov
cmp
andl
push
aad
out
aad
pop
sti
adc
cmp
shr
icebp
test
push
cs
pusha
add
xchg
add
lds
das
or
mov
mov
in
inc
add
inc
inc
aas
cmpsb
cmp
xchg
jno
les
pop
add
arpl
add
daa
movsb
pop
daa
shlb
mov
push
stc
and
cmp
adc
nop
incb
aam
imul
mov
idiv
daa
subl
and
dec
out
inc
jecxz
repz
cmpl
mov
enter
add
mov
sbb
iret
inc
test
mov
jge
mov
adc
add
sub
add
and
je
or
cli
popf
inc
ds
and
push
in
lss
push
lret
push
sub
jbe
xor
out
fwait
movl
out
sub
loop
mov
cmpsl
push
divl
push
rorl
imul
jl
fwait
repz
push
decl
or
xor
mov
dec
clc
repz
adc
and
shll
push
repz
add
mov
popa
jne
movsb
mov
mov
notb
jmp
lret
dec
sub
gs
xchg
lea
cmp
data16
jne
sbb
ficoms
adc
sub
sbb
xor
pop
push
leave
fsubl
pop
pop
in
gs
cmc
adc
and
idivl
dec
pcmpgtw
lret
jmp
inc
imul
inc
fisubrl
fsts
jb,pt
in
stc
cs
mov
cs
out
aaa
shrl
jnp
arpl
into
imulb
addl
mov
loopne
enter
jb
scas
xchg
bound
mov
imul
imul
leave
mov
xor
xchg
stc
adc
mov
push
out
or
ja
lods
sub
mov
push
aas
scas
and
sub
xor
fimuls
push
push
out
inc
add
pop
stos
inc
sbb
add
popa
pop
mov
adc
fs
jge
jl
lret
xlat
imul
jns
mov
std
ficoml
pop
dec
ret
mov
push
mov
pop
adc
push
or
pop
pop
xor
pop
inc
jns
stos
jp
inc
sahf
cltd
in
mov
jne
dec
mov
add
sti
ljmp
and
cmc
test
dec
inc
je
loope
lods
lods
lods
test
insb
mov
inc
lret
aaa
jns
sti
mov
sub
jb
shll
push
xor
test
pusha
and
divb
xor
mov
orb
cli
frstor
testl
test
test
outsl
rcll
mov
mov
hlt
ja
jns
inc
add
mulb
mov
fdiv
ret
adc
dec
sbb
and
int
xchg
mov
jl
pusha
inc
add
or
les
fsts
loopne
aad
or
sbb
adc
shrb
insb
mov
mov
insl
in
adc
push
or
cmpsb
cld
cli
and
inc
aaa
lea
push
rcrb
std
or
mov
mov
outsb
in
jle
add
sti
lcall
stc
out
sahf
sbb
fildl
mov
test
enter
xchg
jns
test
inc
fucomp
rol
mov
jbe
sbb
or
mov
fcomp
shll
faddl
cmovns
dec
jp
or
test
scas
aas
sub
daa
adc
int
jle
lahf
pop
lods
loopne
cmc
lock
in
lds
dec
cmc
mov
xchg
adc
cs
add
and
out
or
movsb
mov
fidivrs
out
mov
je
pop
std
rclb
or
add
jo
mov
loope
jle
fwait
js
jb
xchg
xlat
cmpsb
push
roll
push
jp
inc
ljmp
mov
cmp
ret
shrb
add
movaps
shll
aam
push
in
fisttpl
cmp
icebp
push
aas
and
or
in
call
xchg
cmp
xchg
hlt
lret
aad
shl
cmp
test
sbb
fnstenv
lods
leave
repz
cmp
jp
xor
fwait
nop
push
sbb
mov
add
fldcw
push
and
cwtl
and
mov
sbb
mov
add
das
mov
jnp
xchg
jo
jns
add
ret
cmpsb
aam
sub
or
aaa
mov
repz
mov
or
and
push
pop
xchg
xchg
push
mov
cld
jl
sbb
cs
pop
data16
pushf
xchg
mov
test
cmpsb
stos
and
sbb
out
out
sub
imul
mov
shl
adc
pop
mov
fucomp
shrb
inc
dec
testb
jle
or
inc
repz
lods
push
loop
stos
sbb
jnp
ds
out
and
xchg
call
cmpsb
lcallw
xchg
pusha
popa
jle
lods
mov
daa
jecxz
cmc
jle
shrb
int3
xchg
xchg
pop
rcll
push
aas
fldenv
cmp
into
mov
mov
das
lret
incb
lcall
stos
push
cmp
dec
sahf
into
fiaddl
push
mov
fmull
sti
push
sbb
xor
sub
mov
pop
mov
in
in
add
stos
popa
cmp
stos
inc
fwait
mov
sbb
cmp
lock
jge
push
aaa
roll
sti
call
cmc
sub
fisttpl
std
xchg
cs
add
pop
mov
mov
ja
or
mov
imul
jae
repnz
xlat
aam
push
jmp
sti
xchg
lea
sub
cld
push
jl
xchg
neg
and
loopne
ss
fwait
mov
push
dec
sub
cmp
adc
push
xor
push
hlt
gs
jg
or
mov
lock
mov
mov
cmp
outsl
mov
jb
xor
jp
mov
scas
push
sbb
sub
add
inc
in
cmp
xchg
mov
and
pop
push
xchg
fistps
int3
out
jno
sub
jl
arpl
into
notl
pop
icebp
popa
jmp
pop
inc
sbb
lods
dec
mov
cltd
ja
inc
or
and
je
jb
ret
in
xor
lock
sbb
inc
xchg
cmp
jnp
or
add
loopne
movups
mov
test
jb
dec
in
or
cmc
pop
scas
jl
pushf
sub
sahf
jl
aas
dec
out
and
dec
push
mov
je
gs
pop
imul
cmp
imul
add
xchg
sub
add
push
or
repnz
lods
cmpsb
addr16
lret
jmp
mov
rorb
clc
repnz
leave
lods
cltd
cmp
jb
jp
in
cmpsb
pop
adc
les
ds
or
sti
xchg
adc
mov
or
fldl
inc
int3
pop
jb
arpl
cmpsb
insl
cmp
ja
imul
sub
pop
lea
les
test
xor
pop
les
xlat
pop
call
jp
shlb
inc
xor
das
mov
pop
das
pop
mov
loop
hlt
jo
adc
and
fisubl
mov
mov
mov
mov
test
ret
dec
xor
jo
scas
mov
sarl
cmp
jp
jae
fadds
mov
and
inc
pop
fstpt
mov
xchg
pop
adc
sbb
jmp
popa
test
leave
inc
mov
jmp
fldcw
mov
adc
xchg
sub
aad
pop
inc
adc
push
int3
fwait
das
repnz
jne
aam
xlat
loope
fwait
in
jae
add
out
jl
aas
and
test
pop
cwtl
shlb
xor
and
enter
clc
sbb
sbb
add
jae
jecxz
push
push
fdivrl
dec
jmp
shrl
movsl
push
xlat
sub
mov
mov
mov
mov
push
xlat
cmp
hlt
hlt
stc
and
mov
adc
lea
pop
es
fimull
cs
add
push
repnz
into
push
sbb
stc
sbb
adcb
cld
xchg
idivb
dec
cmpsb
arpl
divl
jb
pop
daa
mov
jb
fstl
xchg
sub
frstor
movsl
jae
jne
ljmp
loopne
sahf
out
mov
ljmp
inc
dec
push
jge
aaa
or
jb
jecxz
les
addr16
mov
mov
inc
xchg
xchg
xlat
data16
bound
xchg
addb
das
daa
xchg
xchg
aas
mov
push
stos
leave
mov
cs
ds
cmp
nop
sub
repz
loopne
add
sub
xchg
and
jg
rcl
mov
pop
fwait
dec
mov
out
stos
leave
movsl
mov
scas
push
pop
or
fistl
call
loopne
lret
mov
addr16
fisubs
lahf
sub
pusha
js
pop
push
mov
xchg
in
sub
lock
xor
push
je
add
shlb
fldl
xchg
jge
or
mov
ret
xchg
pusha
fs
ja
jbe
arpl
jmp
repz
out
pop
test
flds
movsb
and
add
sar
mov
dec
xor
cmpsb
jo
clc
mov
hlt
les
mov
repnz
rorb
xchg
dec
fstpl
pop
rcll
sbb
mov
fisttps
mov
pop
imul
addr16
mov
lea
repnz
je
movsb
sub
push
jns
ss
cltd
icebp
cmpsb
jbe
aaa
shrb
in
add
insl
mov
mov
std
inc
cwtl
sub
lret
jb
fistl
dec
adc
lds
xchg
mov
std
adc
inc
jno
mov
pushf
or
hlt
andb
pop
and
jne
filds
mov
pop
add
std
sub
mov
pop
jae
in
and
arpl
cmp
es
dec
cld
add
inc
xlat
nop
or
sbb
pop
out
inc
dec
mov
dec
mov
pushf
mov
int3
inc
test
fisttpll
test
inc
xchg
mov
sub
push
fists
scas
mov
jb
mov
jo
adc
or
adc
imul
mov
sub
cwtl
cltd
sub
icebp
stos
stc
sbb
aas
cs
aaa
mov
lods
insb
add
movsb
pop
enter
sub
push
test
xor
gs
xchg
sub
stc
lret
insl
mov
adc
fstpl
xchg
dec
in
ss
or
sbb
add
xor
xlat
stos
mov
and
loop
pop
cli
jbe
cld
pop
lcall
arpl
push
mov
test
enter
lods
nop
test
mov
xor
inc
icebp
xor
or
filds
mov
xchg
sbb
dec
adc
cmp
add
mov
adc
out
jb
push
test
ljmp
inc
nop
shlb
pop
xor
ss
in
imul
xlat
mov
adc
je
push
mov
std
rclb
push
mov
dec
cmp
fidivs
ss
movsb
xor
mov
fsubl
mov
or
xchg
inc
popf
cmc
imul
sub
mov
pop
popf
lods
sbb
mov
inc
mov
aam
xlat
aad
das
lahf
mov
dec
dec
sbb
adc
arpl
jg
in
cmp
test
loope
pop
cli
sbb
mov
outsl
mov
test
xor
in
test
shlb
outsl
fdivp
ljmp
std
ljmp
inc
cs
loop
pusha
push
push
mov
ss
cwtl
cmp
push
xchg
mov
les
fcomip
call
popf
inc
in
in
jne
pop
pop
adc
cmp
mov
add
push
inc
lods
xchg
adc
xlat
pop
push
dec
dec
arpl
rorb
fnstenv
dec
jae
or
into
stc
adc
or
shlb
pop
cmp
pop
test
inc
mov
insb
jle
adc
jle,pt
stos
in
loop
cmp
sub
add
fdivrs
ljmp
lret
cs
xor
in
or
incb
or
jle
pop
cmp
dec
inc
adc
and
sub
jl,pt
sbb
inc
lret
daa
or
or
insl
sub
out
jmp
cmp
cmp
mov
leave
push
fwait
sub
jne,pn
adc
test
les
data16
aaa
cmp
sub
popa
bound
lahf
mov
scas
rsqrtps
loope
adc
xchg
out
mov
and
xchg
push
das
pop
into
pop
ret
or
xchg
pop
xchg
push
lock
add
adc
clc
add
inc
data16
out
mov
and
dec
add
jge
xchg
repz
pop
inc
xchg
pusha
hlt
loop
pop
or
mov
cmp
pop
movsb
mov
add
mov
mov
addl
lahf
push
incl
and
add
loope
mov
mov
cmp
mov
add
dec
lret
jne
imul
pop
lret
inc
lret
aam
aas
cmp
jo
adc
push
sahf
inc
fidivs
mov
cwtl
mov
mov
pop
lret
in
sahf
outsl
test
daa
cltd
xor
dec
loopne
pop
rolb
repnz
push
cmpsb
loope
pop
mov
repnz
mov
push
shlb
sub
jne
adc
mov
inc
or
add
mov
stc
movsb
xchg
std
rcll
inc
mov
push
add
jp
divps
xorb
pusha
mov
sbb
leave
hlt
lods
xor
adc
sub
dec
dec
out
lods
bnd
mov
ds
sbb
loopne,pt
xchg
push
pop
insl
inc
dec
xchg
sub
jne
push
sbb
out
lcall
sahf
loopne
stc
adc
add
fstl
popa
filds
sysret
cmpsl
sub
lcall
push
add
loope
stos
ret
lea
sahf
pop
sbb
stos
int3
dec
loope
shlb
data16
mov
fs
dec
int3
sahf
push
into
pop
test
shl
cmc
jns
sbb
ret
sbb
mov
mov
push
pop
int
mov
test
and
dec
loope
ficoms
gs
inc
punpckhbw
testl
pop
loop
mov
jo
in
imul
mov
hlt
sub
gs
data16
js
xchg
mov
pop
dec
push
push
jb
inc
push
push
inc
bound
mov
cld
mov
mov
mov
lods
jge
mov
incl
push
aaa
mov
xchg
push
rorl
rolb
out
stos
popf
xor
dec
stos
push
mov
xchg
inc
mov
frstor
imul
mov
push
xchg
mov
or
int
pop
adc
dec
mov
movsl
inc
ja
lds
push
xchg
dec
sub
sbb
sar
push
push
xchg
add
imul
xchg
sbb
das
dec
or
inc
dec
lea
mov
frstor
and
daa
jnp
daa
mov
jbe
or
cli
in
lds
xchg
mov
mov
arpl
add
jno
or
jmp
add
add
add
dec
push
enter
popa
inc
imul
dec
fdivl
out
jecxz
icebp
xchg
mov
push
and
pop
pusha
jp
push
push
mov
xor
jg
imul
addr16
mov
cmp
sbb
mov
dec
fdivrp
adc
movsb
jg
push
add
xchg
mov
add
scas
in
cmp
popf
mov
test
sub
or
adc
push
mov
shl
pop
movb
sub
daa
dec
mov
in
cmpl
jp
push
mov
jae
sub
push
pop
fcompl
xchg
cmp
outsl
dec
push
and
cwtl
dec
stos
fbld
sbb
cmp
ljmp
sub
decb
inc
xor
and
and
mov
in
jns
andl
sahf
jno
insl
rcrb
jecxz
aas
out
push
or
call
mov
aam
incl
push
push
push
and
mov
out
dec
in
push
inc
cli
xchg
mov
std
dec
lods
shr
adc
dec
mov
push
adcb
mov
fiadds
inc
cs
les
cmp
enter
mov
pushf
clc
std
jp
mov
xor
mov
xor
xlat
repnz
mov
cmp
push
or
mov
push
xlat
fs
add
jae
mov
mov
je
popa
popf
iret
xchg
data16
clc
mov
xchg
and
out
sbb
mov
lea
adc
out
sbb
ficoms
xor
popf
aas
int3
push
shl
in
and
push
or
xchg
xchg
pushf
scas
notb
sub
push
adc
cmp
add
cmp
inc
adcb
mov
xchg
cwtl
cmp
shll
insl
loop
stc
mov
push
lret
mov
or
int
push
lods
pushf
pop
mov
pop
sub
outsb
add
daa
xchg
int3
repnz
and
xchg
push
jp
imul
cmpsb
xor
loope
repnz
adc
xchg
iret
adc
xchg
adcb
sub
aas
sti
shll
and
and
push
cmp
jecxz
enter
pop
pusha
jnp
fs
roll
rcl
pop
mov
sahf
pop
xchg
lcall
xchg
mov
xsaves
mov
mov
pop
fnstenv
xchg
out
out
sbb
and
in
je
adc
mov
pop
fists
nop
cmp
jecxz
popl
js
mov
icebp
xchg
xchg
xchg
dec
sahf
pusha
jp
xor
movsb
pop
push
popf
mov
jge
and
es
fadd
ror
dec
out
xor
mov
or
dec
nop
popa
jl
xor
imul
out
fbld
cmp
outsl
cmc
movsl
lcall
and
add
and
adc
incb
xor
add
jmp
xchg
movaps
pop
insl
mov
ret
test
imulb
xor
movw
sub
loopne
fidivs
fs
rclb
lcall
mov
lea
adc
xchg
or
or
adc
aas
mov
mov
push
mov
inc
arpl
mov
aam
sub
mov
cmp
xor
es
ds
shrb
xchg
ljmp
insl
xchg
ret
rcrb
pop
fildll
xchg
pusha
adc
or
ja
add
sub
punpcklbw
int3
fisubrl
inc
stos
xlat
pop
sti
sbb
jno
pop
jbe,pn
jecxz
testb
add
or
mov
iret
jb
xor
push
repnz
push
cmp
jmp
outsb
inc
cmpl
and
lods
insb
leave
xchg
and
pusha
or
push
in
mov
int3
or
pusha
jae
dec
xchg
cmp
ja
dec
xor
inc
pop
cs
xor
jg
out
or
sub
add
sub
lret
iret
cmpsb
lds
pop
test
and
int
or
sarb
sub
mov
cmp
mov
shll
cmpsb
jo
testb
adc
sbb
xor
cmpsl
jne
cmc
out
xchg
adc
jno
lods
jl
test
pop
fwait
cmp
pop
in
sub
mov
jbe
xchg
sbb
movsb
xchg
ss
loop
and
xchg
je
add
js
push
dec
imul
dec
in
cld
add
push
je
cmc
subb
push
dec
push
daa
in
ds
xor
in
js
stos
fildll
out
pop
inc
repz
pushf
or
adc
test
jp
lahf
sub
test
xor
sub
cmp
imul
xchg
pop
scas
jge
adc
loope
faddp
popf
or
xorb
xor
lods
inc
mov
sub
call
add
pop
mov
out
add
rorb
xchg
imul
lret
xlat
ss
notl
pop
pushf
pop
mov
divb
jecxz
mov
mov
repz
aaa
mov
ret
mov
pushl
int3
loop
dec
daa
ljmp
sbb
cmpsb
sub
or
test
sbb
jo
lds
push
movsb
cmc
mov
cmp
push
cmp
cmp
push
les
dec
xchg
pop
movsb
jnp
pop
sbb
inc
daa
sub
pop
pop
fwait
mov
cmp
aaa
push
sub
fstl
mov
fsubl
lods
imul
inc
cwtl
adcb
pcmpgtw
test
lahf
movsb
sbb
daa
std
addl
clc
xchg
pop
inc
mov
stos
std
in
or
les
inc
fistpll
iret
xchg
mov
mov
scas
dec
pushf
clc
leave
fwait
shll
ja
adc
inc
push
adc
adc
sahf
cwtl
popa
pop
imul
adc
add
and
or
imul
xchg
jp
inc
addr16
popa
shlb
aaa
sub
loop
das
ja,pt
mov
adc
mul
or
pop
mov
pop
xor
stc
sbb
fcomp
test
mov
repz
or
mov
out
push
pop
sbbl
inc
fsubrl
cmp
sub
cli
test
ret
pop
pop
dec
adc
fildll
shll
lea
inc
push
std
aam
xchg
pop
fsubrl
push
inc
sbb
xchg
or
add
mov
test
and
cmpsb
jne
inc
lcall
jb
add
xor
aam
pop
out
xorl
mov
mov
fwait
dec
cmpsb
cmp
data16
ljmp
mov
inc
fistpl
inc
and
mov
fstl
xchg
mov
fcoml
andl
xlat
fsub
mov
daa
or
push
je
out
in
mov
mov
mov
sbb
out
int
fwait
mov
scas
push
ljmp
cmp
movsl
dec
sbb
leave
inc
inc
pop
popa
bound
mov
sbb
stos
icebp
mov
sahf
addr16
fmuls
mov
and
push
popa
inc
ss
lahf
in
int
out
pop
fs
aad
and
loopne
pushf
mov
jle
cmp
stc
jno
mov
mov
int3
loope
ja
fsubp
mov
roll
adc
adc
mov
push
dec
inc
push
xchg
push
enter
sbb
dec
out
adc
pop
jnp
test
test
cmpsl
daa
pusha
dec
pop
cltd
dec
ss
sub
data16
xchg
and
daa
xlat
and
xchg
or
stc
cs
test
fiaddl
mov
nop
or
ds
push
arpl
jbe
or
incb
push
mov
std
pop
out
fdivl
add
aaa
mov
adc
insb
cltd
negb
jne
jo
cmp
andb
hlt
mov
mov
mov
mov
out
add
out
cmp
xor
pop
movb
adc
mov
sub
ret
loopne
push
xor
xor
add
cmc
cld
push
int
ljmp
shll
jge
push
mov
int
mov
pop
loop
add
pop
xchg
inc
in
fisttps
aad
shll
add
and
cmpb
or
les
lods
cli
fidivl
aaa
and
fidivl
aas
fmull
aad
test
pop
lret
and
dec
int3
cmp
or
es
xor
loope
add
push
cmp
xchg
jecxz
mov
push
insb
aad
outsl
lds
fcmovnu
and
fisubl
inc
add
fnsave
cltd
scas
jb
mov
sbb
pop
sub
popf
sub
inc
jne
xchg
aam
xchg
mov
push
cli
or
xor
add
insl
jns
xor
les
push
leave
sbb
mov
push
in
mov
or
sbb
add
sub
loope
adc
in
sbb
fisttps
ficompl
icebp
dec
outsl
mov
jge
cmp
mov
in
or
inc
jne
in
dec
push
mov
in
sbb
and
cld
fsubs
add
repnz
repnz
mov
mov
cmp
dec
mov
cmpsl
pop
cmp
mov
cld
ljmp
inc
jp
xchg
xchg
lcall
popa
cmpsb
jecxz
jmp
mov
xchg
xchg
std
or
add
cmp
aad
xor
sahf
mov
lahf
cmp
sbbb
out
add
inc
andl
fmull
pop
arpl
lods
out
push
sbb
ficompl
xchg
stos
dec
sbbl
inc
xchg
int
pop
jb
negl
jae
cltd
add
pop
jg
and
mov
pop
push
mov
pusha
lret
repz
lea
fldenv
dec
push
aad
push
outsb
sbb
setbe
repnz
gs
testb
jo
scas
movsb
outsb
das
lods
lods
pusha
subb
roll
bound
cmp
out
jecxz
xor
ret
and
insb
sub
cmp
pop
mov
mov
add
pushf
out
mov
imul
mov
fnstenv
and
cmovge
mov
and
xchg
inc
insl
out
mov
dec
mov
aam
pushf
mov
cld
flds
lds
ret
jmp
ds
lahf
xor
int3
out
xorl
ficomps
xor
xchg
xchg
add
in
add
rcr
or
aam
add
loope
out
mov
sti
lret
jb
fldenv
das
cltd
ret
or
adc
jb
mov
scas
jbe
aaa
xor
mov
jmp
aam
int
xchg
insb
jle
push
insb
shlb
filds
je
and
test
pushf
gs
adc
adc
and
jbe
loopne
divb
lea
inc
or
leave
in
pop
pop
pop
cmpsl
pop
lahf
cmpsl
dec
imul
cmc
movsb
inc
aam
imul
jae
add
movsb
ljmp
ss
sbb
xor
fisttps
xchg
add
sarl
dec
dec
addb
cld
ljmp
adc
cmp
push
lock
test
sahf
mov
addr16
inc
mov
adc
in
xchg
movsb
test
xor
test
loopne
mov
loop
or
inc
xor
loop
pop
cltd
fldz
xor
fs
jp
mov
inc
decl
xchg
jle
add
adc
push
popa
aam
add
cmc
jne
enter
scas
lahf
and
jg
fstps
sahf
orl
in
adc
ret
pop
xchg
adcb
ror
xor
mov
in
push
out
rcrl
mov
cmp
xchg
pop
call
pop
fstl
fistps
adc
jp
call
mov
lock
inc
xor
shrb
mov
ljmp
xor
mov
hlt
ljmp
andb
mov
xchg
pop
jmp
cltd
add
js
shlb
mov
enter
stos
mov
sbb
push
cmpb
xor
mov
and
hlt
mov
addr16
cmp
outsb
rcll
pop
out
jmp
testl
xor
dec
cmp
and
out
ljmp
xchg
mov
outsb
ret
xchg
xor
icebp
fcoms
inc
push
js
loope
push
sbb
dec
push
nop
adc
fwait
add
sub
outsl
jb
inc
aam
and
pop
push
iret
adc
mov
xchg
pop
xchg
sbb
pop
push
nop
mov
sub
add
cmp
ffreep
mov
pushf
push
mov
ds
sbb
add
mov
inc
pop
inc
rcrl
mov
shrl
mov
or
aad
jle
sbb
or
fs
mov
loopne
pop
jo
je
xchg
stc
and
js
psrlw
xchg
rcr
data16
out
jno
bound
sub
subl
ljmp
fadds
xchg
lret
fcompl
dec
dec
cmc
out
ret
or
cmc
repz
leave
pop
pop
inc
rcrb
pop
xchg
outsb
pop
xor
gs
push
fwait
lods
movsb
pusha
in
popf
dec
fdivs
divb
mov
aad
pop
lock
sbb
loope,pn
inc
add
jg
sahf
std
mov
push
xchg
mov
push
stc
loop
mov
xchg
cmp
xor
jg
pusha
push
push
push
adc
add
cwtl
push
in
jecxz
fldcw
xchg
jnp
inc
or
jo
pushf
shll
bound
fs
dec
cmpsl
push
cli
jl
cwtl
adc
push
xchg
jbe
cltd
mov
mov
pop
xor
mov
clc
add
cmp
stos
cmpsb
jle
mov
mov
incl
movsb
data16
xlat
mov
xchg
js
pop
xchg
imull
outsl
das
mov
xchg
es
shrb
pop
int3
pop
xchg
cmp
mov
mov
cli
lret
mov
jo
ret
jge
test
int3
xor
mov
mov
ds
dec
dec
xchg
inc
lods
sbbb
mov
addb
addr16
pushf
lcall
or
das
ljmp
or
aas
lgs
cmp
xlat
fucom
add
and
jmp
inc
js
adc
cmpl
fadds
push
outsb
adc
cmp
xor
fwait
cltd
shrl
jecxz
iret
push
loope
shr
lock
dec
leave
add
pop
dec
adc
hlt
mov
fidivs
adc
mov
mov
jmp
push
mov
and
mov
and
cwtl
or
sub
or
adc
or
xchg
cs
fstps
repnz
xchg
jne
loope
cwtl
mov
sahf
cmpb
aam
in
aaa
or
jp
push
stos
mov
pushf
sub
mov
adc
scas
push
xor
jle
lret
out
or
or
or
jns
lret
mov
pop
arpl
jbe
arpl
mov
push
mov
jne
rolb
sub
clc
and
divb
out
adc
add
fiadds
mov
aaa
std
inc
aam
insl
push
or
mov
xchg
xor
mov
nop
outsl
xor
out
lahf
stos
cmp
and
ss
cmp
xor
repz
rol
dec
ret
mov
or
dec
sub
dec
sub
hlt
jecxz
repz
loopne
les
fst
xor
sub
push
fstpt
mov
hlt
mov
push
mov
xor
xchg
or
mov
jb
cli
fldenv
inc
sahf
cltd
mov
gs
push
icebp
sub
loopne
push
dec
pusha
add
mov
mov
sbb
sahf
jmp
adc
pop
dec
xchg
inc
mov
pop
mov
pop
inc
pop
nop
or
arpl
lret
push
fs
jns
push
into
nop
aas
and
cmp
hlt
pop
pop
es
mov
in
xor
test
adc
xchg
jns
es
jmp
lock
add
pop
add
lds
sbb
mov
inc
and
pop
xchg
outsb
dec
cmp
mov
jecxz
inc
xor
xor
and
adc
xchg
dec
popf
aam
fisubl
in
into
std
popf
mov
mov
adc
dec
push
fisttpll
lods
adc
mov
mov
pop
or
xchg
cmp
daa
or
pop
push
pop
sub
scas
insl
add
and
cwtl
mov
xor
xchg
fwait
inc
loope
jb
fcoml
popf
jae
dec
push
ret
xor
ljmp
sbb
inc
dec
shll
jnp
pop
bound
cs
xor
testl
test
mov
mov
mov
jmp
add
adc
fwait
add
cmp
dec
rcr
sbb
xchg
inc
testb
in
inc
xchg
sahf
inc
in
popf
lret
lahf
adcb
mov
xchg
bound
cmpsl
ja
jbe
mov
lcall
and
adc
mov
clc
adc
cmp
and
shlb
mov
lea
inc
stos
mov
add
xor
adc
data16
mov
inc
xchg
dec
add
dec
pop
clc
aam
jne
and
pop
aaa
xor
push
iret
je
lea
fsubrl
and
pushf
ficoms
cmp
dec
push
push
cwtl
mov
ficompl
sub
cmc
xor
pop
sbb
insl
jne
or
mov
jp
mov
cmp
pop
jne
fisttps
lods
mov
cmpsl
pop
and
data16
jge
jmp
inc
nop
mov
lock
push
js
lahf
ret
orl
jle
pop
xorb
pop
shrb
insb
mov
mov
jnp
add
mov
jns
mov
shll
ret
push
int
jns
ljmp
addr16
and
jns
daa
push
mov
adc
out
ret
mov
ss
lock
mov
rcrl
outsb
adc
movsb
stos
lds
mov
push
enter
dec
jo
das
repz
cmp
test
push
xor
dec
not
mov
mov
icebp
movsb
xchg
and
jae
mov
sub
cmc
mov
jp
lcall
jmp
js
sarb
cmc
mov
addr16
jne
cmp
testl
mov
movsl
in
cmp
and
jmp
jle
int3
inc
sub
aad
add
lock
idiv
dec
cmc
imul
cmp
adc
jg
repnz
dec
pop
jnp
sahf
frstor
popf
or
cmpsb
xor
xlat
fwait
jbe
and
movsb
sub
cmp
mov
lods
test
mov
or
cld
and
adc
ret
push
mov
bound
hlt
sbb
shll
test
xor
add
outsb
cmpsb
std
into
and
jecxz
scas
adc
adc
cmp
and
mov
aas
push
icebp
xabort
lea
inc
push
pop
jp
xchg
orl
jns
call
icebp
ja
and
aam
rcl
mov
outsl
pop
mov
xor
jg
inc
sbb
sti
pop
inc
xor
lahf
pop
inc
outsl
imul
dec
int
data16
xor
push
adc
fsub
jo
xchg
lret
inc
push
or
or
iret
imul
outsb
and
gs
push
lret
add
pop
xchg
push
andb
mov
mov
test
test
repz
fdivr
push
lahf
mov
dec
cwtl
insb
pusha
or
dec
mov
mov
xchg
call
xchg
hlt
lea
subb
popa
scas
mov
loopne
bound
ljmp
add
mulb
jmpw
jbe
aam
cmpsl
sbb
mov
inc
xchg
sbb
add
mov
inc
in
or
test
fmulp
fwait
inc
mov
push
jnp
rcrb
test
sahf
sti
stos
jnp
push
imul
dec
cmp
leave
cld
loope
pop
mov
gs
cld
aaa
lods
inc
int
xor
or
xchg
mov
loopne
xor
inc
pop
movsl
es
icebp
js
or
call
imul
mov
je
repz
mov
mov
pop
mov
mov
adc
or
movsb
add
jg
fsubrl
inc
adc
cmp
jb
dec
inc
inc
cmp
xor
jl
ljmp
pop
aaa
sbb
out
xchg
addr16
pop
mov
test
cmc
pop
fisttpll
fldl
sbb
xlat
mov
ja
pop
mov
into
into
pop
adc
or
lods
xchg
mov
xlat
push
test
es
lods
loope
xchg
mov
xchg
pop
mov
cmp
sqrtps
add
stos
or
or
sub
cwtl
or
jnp
push
mov
lea
outsb
daa
in
jle
xchg
or
mov
push
push
add
lret
cmp
lea
lods
ds
popf
adc
popa
adc
adc
push
in
xor
cmp
test
mov
ret
sub
jns
jle
or
test
xchg
hlt
mov
out
pop
loope
push
push
push
xchg
pop
push
mov
pop
jp
mov
push
repnz
mov
shlb
out
leave
stos
or
inc
repz
jnp
dec
mov
xchg
jne
aad
sbb
push
out
cmpl
pop
mov
shlb
lock
sub
pop
adc
mov
rcl
aam
jae
push
bound
int3
jg
adc
in
dec
mov
pop
mov
cmp
cmc
sar
adc
push
fsubp
xchg
insb
cmp
xlat
imul
mov
add
xchg
out
iret
or
add
inc
or
inc
cld
sub
pop
ret
test
xchg
decb
enter
mov
inc
xor
fmuls
aam
or
xchg
xchg
cltd
rcrb
cmp
out
jmp
sbb
sub
das
pop
int3
jno
add
mov
cwtl
fadd
mov
outsl
pop
mov
lods
pop
xchg
loope
insl
and
jae
pop
xor
cmp
mov
pop
xor
adc
fisubl
in
dec
flds
jge
sub
adc
hlt
or
call
pop
jle
mov
inc
stc
pop
maskmovq
ret
push
aam
inc
scas
movsb
sub
cmp
fisubrl
daa
iret
out
push
adc
daa
xor
jle
rorl
dec
mov
pop
mov
cmp
jge
fcoms
incl
rcr
cmp
andb
push
out
adc
repz
inc
dec
mov
mov
jecxz
das
xlat
sub
jecxz
ljmp
shrb
pop
push
lock
imul
fldt
lret
push
movsl
pushf
fstpl
iret
adc
ds
push
leave
aam
pop
ja
dec
jg
pop
out
mov
mov
lock
dec
xchg
stc
insb
sbb
cld
cmpsb
out
pop
popa
or
inc
fsubl
jg
call
fs
push
xor
dec
add
es
fisubl
mov
sub
jns
test
jne
leave
daa
shlb
sbb
mov
pop
push
add
bsf
push
jecxz
out
and
sub
push
fisubl
fbld
lods
out
imul
xor
test
cmpsb
loopne
js
xor
push
stc
jbe
push
jnp
cli
xor
out
mull
dec
push
iret
repnz
cmp
mov
gs
pop
jecxz
movsb
mov
pop
mov
inc
inc
dec
dec
dec
and
int
xor
adc
in
or
push
mov
outsb
fcoms
pusha
enter
push
push
cmpsl
cmpsb
psrlw
gs
pop
xchg
dec
icebp
subps
inc
jno
sahf
push
pop
out
sbb
or
js
es
bound
inc
test
jae
test
cmp
pop
and
cmp
sbb
push
sbb
sub
sub
push
shll
adc
and
fdivrs
mov
dec
mov
push
pop
add
xchg
cmp
xchg
in
and
lret
lahf
push
dec
aam
ret
std
outsb
dec
negl
cmp
sub
adc
or
ss
push
fcomps
xor
daa
mov
cltd
in
stos
aaa
js
mov
sbb
dec
popf
mov
js
loopne
or
add
xor
jne
dec
iret
push
xchg
fildll
add
cli
pushf
sarb
jo
mov
jns
add
and
xchg
lahf
add
xor
data16
jl
mov
fidivs
cltd
cmp
out
mul
xchg
adc
sarl
pop
out
icebp
xchg
mov
sub
or
mov
mov
mov
jno
aad
fildll
clc
dec
sub
jmp
inc
cmp
aas
incb
xor
and
and
test
and
or
addr16
ja
add
sbb
inc
orb
out
outsl
fldenv
mov
test
inc
xchg
imul
out
mov
lock
ja
xchg
mov
pop
outsb
add
cmp
xchg
lea
rclb
push
out
xor
movsb
adc
repnz
xorl
fs
sysexit
pusha
pop
mov
inc
outsb
cmp
mov
push
lss
or
mov
movsl
push
aad
movb
cmpsb
negl
test
mov
sub
adc
sbb
jmp
jp
mov
test
or
sti
imulb
mov
pop
cld
mov
push
mov
sbb
repnz
loop
lahf
ret
leave
jecxz
jl
cmc
add
xor
lods
cmp
cmc
or
testl
adc
inc
adc
sbb
sbb
add
ljmp
test
fcoml
dec
sub
inc
dec
popf
mov
ljmp
in
ficoml
xchg
push
mov
int3
test
in
out
add
cltd
jmp
xchg
inc
clc
mov
dec
decl
pop
ss
push
sti
int
aam
mov
push
bound
add
sub
insb
mov
bnd
in
aaa
repz
cmp
mov
insl
or
or
vcvtss2sd
fs
inc
mov
ret
fistl
mov
adc
and
jmp
mov
xchg
scas
mov
lret
call
pusha
adc
xlat
xchg
sbb
imul
fucompp
push
movsb
dec
leave
sbb
push
xorb
mov
mov
outsl
mov
inc
push
sub
or
or
xchg
inc
jmp
loop
push
sub
enter
xor
ficoms
sbb
cli
sub
inc
jecxz
int
cmp
imul
cmpsl
push
mov
jne
lock
sub
xor
xchg
and
test
in
shll
aas
in
fidivrs
and
dec
sbb
cld
ret
cmp
sbb
cwtl
scas
cs
push
loopne
pop
mov
incl
out
and
add
push
popa
stos
adc
repnz
imul
sbb
xor
mov
push
jae
leave
inc
push
sbb
inc
mov
mov
insw
adc
jp
xor
mov
dec
imul
hlt
pop
pop
pop
sbb
cmp
test
stos
loopne
loopne,pt
es
cld
xor
jae
addb
xchg
adc
je
fnstcw
sar
sub
inc
sub
scas
sub
or
lcall
fdiv
scas
test
push
mov
out
fldcw
push
cmpsb
xchg
clc
popa
pop
cmc
ret
ds
and
das
test
inc
pop
fwait
and
ljmp
cmp
test
sub
lret
cli
loopne
cmc
daa
aam
sub
ss
inc
jl
lea
xchg
xchg
sbb
ficompl
push
ds
push
sub
inc
aaa
lods
andb
sbb
int
test
inc
bnd
lret
pop
les
rclb
mov
xchg
rcrb
and
mov
dec
jmp
mov
fiaddl
cmc
rol
add
mov
popf
fistps
push
cmp
mov
jno
movsb
test
and
gs
push
mov
mov
in
rclb
insl
mov
repz
insl
xchg
jns
mov
test
mov
dec
mov
jo
lret
add
sub
mov
ss
jle
mov
jg
cs
daa
adc
and
out
insb
mov
lret
fdivrl
data16
mov
mov
pop
pusha
sub
out
sbb
push
imul
push
movsb
repz
mov
cmp
addw
roll
out
mov
and
sbb
loopne
dec
xchg
jb
inc
cli
xchg
ffreep
rcrl
lret
cld
mov
imull
jg
shl
icebp
add
jle
mov
out
and
enter
clc
in
xchg
test
loopne
fstpl
je
xor
clc
sub
or
lds
inc
jnp
pop
push
popa
subl
cmp
sub
es
ret
ret
mov
out
xchg
and
shll
loope
fsubrl
dec
icebp
push
faddl
stos
cmp
mov
pop
lretw
outsl
fwait
add
iret
ljmp
outsb
mov
inc
insl
mov
nop
mov
add
xchg
push
inc
and
xchg
lret
loope
cli
push
out
int
daa
xor
movsb
xor
fidivrs
lods
push
xchg
mov
addr16
xchg
aas
rolb
push
cli
wbinvd
popf
pop
push
xchg
das
lock
flds
lahf
mov
icebp
int3
std
ja
adc
stos
fldcw
cmp
jno
or
lock
mov
in
adc
jo
inc
out
shlb
test
fstp
xor
xchg
mov
mov
adc
ljmp
add
out
cmpsb
adc
add
outsl
mov
in
pushf
pop
imull
loop
xchg
mov
add
stos
cmpsl
xchg
adc
inc
mov
adc
rclb
outsl
imul
jb
mov
pop
call
subl
ljmp
mov
or
xchg
mov
lcall
movsb
dec
repz
cmpsl
dec
xchg
icebp
xor
mov
mov
sbb
xchg
into
call
pop
mov
test
lods
xor
sub
aam
testb
out
pop
ret
push
or
or
cmp
sbb
dec
aas
lock
push
sub
xchg
add
repnz
add
push
pop
cmp
sub
notb
popa
mov
xchg
cs
out
lods
sub
repz
or
dec
inc
mov
inc
sahf
movsl
ret
out
sbb
insb
xor
ret
xorl
inc
adc
or
xor
mulb
sbb
inc
mov
std
stos
cmp
negb
sbb
idivb
test
adc
std
roll
mov
cmpsb
adc
xchg
sub
mov
xchg
inc
stc
mov
or
and
sbb
inc
push
xchg
iret
mov
dec
mov
rorl
jnp
subb
dec
pop
sbb
icebp
adc
shll
rcrl
das
ret
shlb
add
and
xchg
je
and
mov
ds
and
lods
mov
or
test
sub
enter
daa
jg
andl
cmp
cwtl
jae
gs
add
inc
pop
leave
add
rcll
cld
mov
rcr
test
and
addr16
fdivrs
mov
sub
cmpl
rcll
stc
les
mov
leave
mov
jmp
arpl
sbb
dec
xor
mov
push
dec
cmp
and
decl
pop
loope
je
shl
popf
sub
mov
mov
sahf
pop
add
mov
or
loopne
pop
test
les
sbb
lea
cmp
hlt
push
incl
pop
mov
test
mov
cmp
pop
lea
jmp
movsb
xchg
fwait
mov
pop
dec
mov
push
mov
mov
jne
popa
add
mov
subb
xor
cmc
sbb
jle
xor
test
ret
xor
push
and
pop
stc
dec
pusha
out
xor
int
and
add
stc
int
data16
outsl
inc
rcrl
mov
ret
mov
clc
mov
push
daa
mov
or
push
addr16
cmp
stos
add
mov
lock
into
sub
push
mov
adc
push
sarb
add
adc
scas
sub
jle
adc
add
pop
sarb
mov
ja
ret
mov
pop
mov
xchg
movsl
dec
icebp
jne
pop
repz
movsb
pop
idiv
test
shr
test
xor
mov
jecxz
repnz
cmp
arpl
cwtl
fcmovb
pusha
ficoml
ret
adc
xchg
push
inc
and
test
scas
push
int3
sbb
push
sahf
cli
and
iret
mov
sub
add
add
sbb
inc
push
es
mov
adc
add
repz
jle
iret
outsl
push
lods
xchg
cs
cmpb
shl
imul
repnz
fstpt
mov
mov
aad
outsb
imul
push
xorb
fs
daa
cmp
rorl
into
xchg
xlat
jg
jmp
xor
movsl
adc
pop
movsl
pop
dec
push
mov
int3
mov
outsl
fcomps
and
pop
mov
cmp
push
cld
cmp
sub
js
lahf
dec
sbb
xor
cmp
jns
xlat
popa
adc
mov
insb
repnz
add
ret
add
push
in
mov
push
cmpsb
lea
and
dec
lret
loopne
push
lret
stos
int
push
add
lcall
sub
pop
pop
sub
clc
test
int3
lods
push
pop
pop
push
ret
imul
sub
sub
cmp
mov
add
adcl
xchg
cwtl
loopne
mov
mov
lret
sti
ss
mov
jge
es
add
pop
mov
lret
sbb
sub
and
cmc
popa
aad
push
insb
in
adc
hlt
cmp
sub
add
jae
lock
add
cld
push
scas
xchg
push
xchg
aam
xorb
xchg
jecxz
and
mov
jne
insl
add
sahf
mov
mov
or
pop
and
push
inc
adc
in
scas
adc
popf
jle
sbb
imul
icebp
or
or
loop
adc
je
cmc
call
xor
mov
sbb
push
mov
loop
push
jl
cmp
sbb
add
jmp
mov
shl
mov
popa
xlat
dec
fwait
sarb
sub
into
mov
pop
icebp
sub
jbe
push
jb
ret
mov
insl
aam
add
sti
inc
cmp
clc
mov
inc
cmp
jg
icebp
in
jge
mov
sub
stos
shrb
movsb
aad
test
mov
repz
aaa
in
repz
div
pop
cmp
sub
shlb
popa
cli
sub
negb
stos
and
and
sbb
or
test
daa
insb
mov
pop
add
in
aaa
inc
push
and
sti
mov
in
shll
or
into
and
icebp
loop
sti
push
push
gs
lods
sahf
mov
add
dec
jnp
stc
dec
arpl
aam
lods
mov
ret
pop
mov
push
inc
mov
ljmp
movsb
fwait
fs
fstpl
stos
dec
cmp
dec
xor
push
shll
mov
cltd
call
push
pop
sbb
push
and
dec
shr
dec
shrb
xorb
inc
repz
jnp
dec
ds
mov
jo
in
movsl
cmpsb
push
test
lcall
xorb
sub
cmp
out
add
sbb
sbb
out
imul
add
aad
adc
xor
mov
lret
icebp
adc
push
test
and
adc
in
dec
mov
rclb
clc
jl
add
add
jo
mov
fisubl
push
scas
scas
mov
mov
fwait
mov
pusha
or
xchg
mov
pop
dec
insl
push
and
push
inc
jo
sub
jne
ret
inc
and
pop
sub
sbb
daa
push
lds
fimuls
imul
or
dec
icebp
leave
orl
in
pop
ljmp
mov
push
ds
sar
mov
dec
push
lahf
cs
insb
fcoms
call
jg
lock
push
xor
or
icebp
xchg
inc
mov
loop
sahf
lods
iret
in
mov
ret
movsl
out
lret
jnp
push
stos
in
cs
aaa
pop
adc
pop
inc
lea
xchg
inc
sbb
or
and
aad
sbb
or
in
dec
xor
test
js
jp
jp
cmp
xor
fldenv
ret
mov
mov
fwait
add
into
push
lret
lret
lds
int
adc
xchg
out
mov
or
lea
stc
cmp
bound
add
push
pop
in
push
jmp
popf
loop
jecxz
and
mov
dec
adc
leave
sti
sahf
push
bound
scas
push
gs
dec
dec
pushf
inc
incb
inc
mov
lret
jmp
adc
mov
mov
jle
xchg
scas
ss
pop
pushf
sbb
mov
pop
or
mov
repnz
xlat
mov
adcb
out
into
push
loope
pop
lahf
inc
cmp
lret
daa
in
cwtl
push
test
dec
js
add
jae
pusha
test
xlat
cmpsb
jns
orl
push
stos
dec
loop
sbb
pusha
pop
or
test
les
mov
out
adc
sub
fwait
sub
xor
add
sbb
sub
inc
insb
sub
les
adc
js
bound
mov
js
and
mov
cld
popa
fadd
dec
ret
fistpl
movsl
inc
roll
dec
jno
lods
bound
jno
bound
cmp
mov
and
jg
bnd
repnz
jmp
xor
pop
and
push
inc
add
iret
in
cmp
jne
push
cmpsb
mov
xor
imul
sub
in
stos
add
pusha
xchg
or
dec
push
lods
outsl
aam
mov
sti
inc
lods
lahf
nop
loopne
dec
es
dec
mov
dec
in
mov
das
push
jbe
adc
mov
leave
movsl
jl
xor
pop
adc
sarl
add
fcompl
repnz
nop
notl
dec
je
mov
push
dec
inc
scas
push
sbb
jb
je
gs
xor
and
cmp
and
xchg
add
adc
iret
push
pop
push
rorb
add
jmp
flds
mov
and
jo
ficoml
mov
sbb
nop
add
push
sbb
aaa
leave
ja
mov
and
adc
orb
xor
sti
bnd
shll
shll
cmpsb
lahf
pop
jae
pop
mov
aam
arpl
aad
test
and
mov
mov
sbb
mov
dec
repz
scas
fdivrs
pop
mov
jo
sub
lcall
and
stos
mov
sbb
pop
push
test
ffree
arpl
and
imulb
les
push
cmpl
ficoml
enter
lock
outsl
ss
add
mov
mov
nop
xorl
clc
dec
es
test
mov
mov
roll
lea
adc
jecxz
clc
stos
repnz
sbb
into
lcall
push
mov
sbb
xchg
imul
outsl
fstpl
sbb
pop
push
push
add
lret
adc
bound
inc
mov
adc
shr
popa
dec
rolb
aaa
ja
into
pushf
push
xor
imul
out
add
or
mov
pushf
xlat
inc
rclb
add
sbb
rcl
fcmovb
cmp
ja
push
sbb
rcrl
data16
stos
sbb
in
out
pusha
and
push
pushf
jp
sub
mov
iret
mov
mov
push
adc
jg
inc
cmpsb
movsb
loopne
popa
xchg
xchg
inc
mov
mov
xor
roll
adc
jno
ret
out
sub
popf
cmp
in
iret
xchg
out
dec
xor
std
and
clc
xchg
xchg
jmp
stos
iret
and
jle
cmp
add
mov
xor
push
hlt
sbb
or
sub
fs
inc
aad
and
lret
adc
jmp
decb
subl
dec
mov
jae
lcall
imul
fwait
ret
jbe
pop
mov
pusha
xchg
loop
inc
loopne
jns
pop
jae
and
int
aam
cmpsl
xor
mov
stos
cli
test
int
in
popf
decb
xchg
push
fisubs
insb
mov
cmp
dec
mov
scas
icebp
daa
dec
inc
sbb
int
pushl
inc
inc
or
cli
fwait
add
rcrl
mov
mov
mov
xor
sub
imul
push
mov
and
adc
addps
in
sarl
popa
mov
and
xor
mov
outsb
cmp
dec
pop
jae
jecxz
ljmp
cmp
sub
adc
in
std
jnp
fsubl
xlat
pop
into
in
add
lods
movsl
or
dec
inc
loop
rclb
bound
sub
jns
les
dec
and
fcoml
call
loopne
hlt
ret
xchg
bound
mov
mov
jae
pop
mov
mov
adc
push
or
subl
sti
vmovsd
mov
push
gs
shlb
or
stos
mov
shlb
les
sbb
out
cmpxchg
das
test
js
inc
cltd
stos
sub
inc
add
lds
mov
push
dec
xchg
out
xchg
xchg
push
in
cmc
fildll
divb
xor
and
ds
xor
adc
adc
addb
and
push
aaa
movb
mov
enter
cli
mov
in
mov
mov
lahf
shlb
lods
sbb
sarb
cmpsb
setb
imul
xchg
dec
push
filds
mov
mov
push
lret
fcomps
mov
jmp
push
and
hlt
xchg
inc
mov
cmp
xchg
sti
adc
dec
daa
or
mov
xor
mov
mov
xchg
mov
nop
add
dec
pop
jb
bound
push
daa
xchg
dec
sub
sar
ja
orl
outsl
shrl
fcmovb
cld
rol
lock
in
jmp
fcompl
ffreep
les
mov
push
repz
inc
mov
inc
lcall
imul
push
and
in
sub
adc
xchg
fadds
fdivr
push
xchg
lock
sub
inc
fs
ds
pop
mov
push
mov
jno
dec
sarl
add
pop
sbb
fdiv
sarb
mov
into
cld
stc
inc
popa
jmp
je
push
addb
mov
add
lock
rorb
push
jecxz
in
and
cmp
dec
repnz
aam
adc
dec
mov
xor
aad
cmp
add
pusha
and
inc
dec
dec
pop
fwait
call
stos
fwait
add
mov
mov
pop
lea
jmp
fidivl
and
push
or
push
mov
fs
adc
movsl
mov
xlat
insl
mov
ret
xor
xor
dec
int3
insl
fimull
mov
jo
jns
jle
enter
mov
pop
cmp
add
movsb
sar
test
lods
jle
sub
push
dec
enter
xchg
stos
ret
pop
xchg
idiv
mov
aam
insb
int3
adc
pop
addr16
fmuls
loop
sub
outsl
ss
xchg
dec
in
dec
ud0
jb
inc
shlb
pop
push
or
lods
sub
sbb
lcall
sarl
cmp
or
ds
inc
sbb
push
adc
add
and
test
sti
cmp
mov
scas
mov
imul
out
lret
dec
test
in
lock
and
fsubrs
jle
int3
pop
fs
in
sub
lret
push
in
inc
outsb
cmp
mov
gs
out
inc
imul
sbb
push
mov
fsts
mov
mov
sbb
add
inc
pop
shrl
ret
xchg
in
xor
arpl
int3
lods
scas
xchg
outsb
rclb
inc
bound
inc
xorb
xchg
lods
shll
icebp
in
fidivrl
shll
insb
fdiv
mov
icebp
outsb
movsl
push
jge
gs
and
dec
popa
mov
push
push
jbe
rclb
adc
enter
jl
jno
ds
test
and
les
fsubl
inc
pop
xor
adc
ret
mov
inc
dec
ja
lret
or
push
int
test
xor
bnd
mov
je
pop
roll
jmp
jecxz
sub
pop
fcoms
sbb
mov
test
push
je
mov
mov
in
xchg
cmp
stos
sahf
scas
fldcw
and
loop
add
fwait
inc
inc
mov
mov
imul
aas
and
aas
pop
inc
push
pop
rorb
in
add
dec
or
das
push
inc
stos
mov
js
lcall
jno
sti
or
sub
stos
fcmovu
add
popf
dec
and
daa
sub
sti
add
or
in
mov
fs
clc
push
adcl
ljmp
mov
test
ss
cmp
out
out
scas
lret
movsb
pop
scas
or
lahf
xchg
mov
mov
sysexit
or
fsubrl
mull
aas
mov
icebp
pop
xor
sar
sub
insl
jmp
loopne
sub
xlat
pop
mov
add
out
sbb
push
testl
insl
adc
and
sub
roll
fs
outsl
ret
pop
mov
ret
and
repnz
roll
call
inc
mov
fistpl
gs
adc
xchg
sub
sub
outsb
xchg
cmp
outsl
imul
push
subb
lcall
in
scas
push
dec
inc
mov
add
ja
mov
jge
rclb
mov
out
mov
mov
inc
js
mov
adc
and
xchg
popa
mov
dec
xor
or
fsub
jnp
popf
sub
jb
lods
in
mov
inc
push
dec
jno
ds
pop
movsb
pop
das
loop
jmp
iret
mov
adc
adc
je
lock
xor
add
xor
xchg
mov
ss
in
mov
test
sahf
cmp
ffreep
mov
cmp
pushl
outsb
sub
ffreep
mov
adc
dec
ret
mov
lds
push
fcmovnbe
cmp
repz
scas
jne
scas
inc
nop
leave
jmp
pop
sub
hlt
in
mov
shll
adc
repnz
scas
fdivrs
pop
push
jmp
jge
sbb
cld
mov
jo
jmp
or
je
sub
addr16
adc
pop
sbb
loop
xor
repnz
fcmove
jae
mov
in
push
inc
inc
xchg
or
ret
pop
rcll
in
mov
pop
leave
sbb
sbb
or
jg
pop
mov
xor
pushf
stc
lods
inc
sbb
push
shl
nop
popl
lods
xor
dec
sbb
push
fstpt
lods
fwait
xchg
push
movsl
cmp
outsl
pop
jae
lods
stc
xor
mov
jnp
lock
insl
dec
or
add
adc
or
adc
pop
fdivrp
xchg
in
in
bnd
in
ss
mov
clc
fstpt
repz
xor
loop
loope
ljmp
sbb
xor
in
inc
add
cmp
fsubl
adc
icebp
push
pop
cld
push
jg
jne
jle
mov
lret
leave
cmp
sahf
imul
sti
andl
or
jne
scas
movsb
into
imul
jae
pop
or
xchg
fldt
movsl
test
mov
xor
loope
pop
dec
in
pop
dec
xor
mov
pop
lcall
mov
leave
adc
leave
enter
out
jne
mov
and
inc
in
cltd
dec
fdivl
aam
mov
push
fadds
icebp
push
add
imul
les
sahf
cli
lods
jg
add
std
test
pusha
dec
push
mov
es
adc
cmpsl
movsl
and
adc
mul
lods
fisubl
jno
lret
mov
jl
push
test
pop
arpl
mov
cmp
inc
cmpsb
cmpsb
jle
pop
dec
adc
outsl
mov
andl
xor
dec
mov
test
dec
xor
xor
push
out
movsb
insl
and
inc
jmp
daa
sbb
aam
inc
dec
add
cld
mov
aaa
dec
test
das
mov
dec
and
pop
push
ret
out
push
test
mov
ret
orl
arpl
call
or
add
pushf
out
fmull
pop
shr
dec
add
mov
jbe
jp
add
mov
mov
sub
or
xchg
test
xchg
ljmp
in
loope
push
enter
adcl
mov
sub
ret
add
dec
add
imul
dec
push
jae
hlt
lahf
mov
scas
out
test
enter
mov
dec
sbb
imul
mov
and
push
sub
push
cmp
mov
in
inc
outsb
roll
xchg
push
rorl
fdivrp
rcr
or
mov
adc
add
iret
sarl
fsubrl
daa
and
subl
pop
mov
cld
lds
frstor
mov
fwait
cli
sti
pushf
decl
and
std
xchg
and
xor
or
call
xchg
fs
and
decb
mov
aam
enter
addr16
xor
filds
sub
cld
jo
add
loope
dec
movsl
mov
mov
fiadds
mov
push
sub
or
jge
fiaddl
ret
jl
push
subb
mov
lods
add
fs
jecxz
push
das
adc
push
mov
mov
cld
shlb
test
mov
repnz
jl
fcoml
sbb
pop
add
scas
mov
pop
mov
push
mov
imul
ffreep
dec
das
xchg
ljmp
dec
mov
lret
out
hlt
ret
adc
sbb
push
call
sub
int
mov
ljmp
cmp
cs
fisttpl
push
jl
gs
and
inc
mov
sbb
into
add
loop,pn
pusha
and
cmp
mov
and
flds
xchg
cmp
adc
xchg
pop
mov
push
scas
xchg
sub
jl
lea
hlt
inc
roll
repz
mov
cmc
and
clc
lcall
ret
int3
sbb
push
shl
stc
insl
cmp
xor
imul
mov
sub
jae
xchg
dec
jmp
sub
xchg
xor
adc
cmp
aas
xchg
scas
or
xchg
int3
rep
cmp
push
addr16
sti
loopne
add
pop
pop
outsl
push
xchg
push
sahf
pop
and
push
adc
or
sarl
dec
scas
mov
or
xchg
push
stos
das
lds
push
dec
sbb
pop
popa
js
iret
mov
mov
sbb
fistpll
cmpsb
and
xor
clc
pop
jne
xchg
and
pop
xchg
sarl
pop
sbb
mov
xchg
add
adc
jno
inc
adc
rolb
stos
mov
dec
pop
inc
cmp
mov
fcomps
jmp
push
bound
and
jmp
dec
jo
mov
add
lret
insl
sbb
inc
xor
dec
aas
mov
mov
fsubp
jmp
jnp
in
mov
xchg
lahf
fxch
jge
fcompl
dec
in
push
stos
pushl
fsubrs
cmp
ret
ret
rclb
shlb
mov
add
and
jg
call
dec
pop
aam
imul
paddd
aaa
mov
add
rcll
cmp
jns
in
arpl
mov
cmp
cs
sbb
int
shll
jp
pop
stos
iret
ljmp
adc
aam
xchg
fld
push
fstp
cli
outsl
xor
xchg
loope
sub
mov
push
push
mov
inc
not
decl
jl
sub
sub
lods
in
shlb
ljmp
mov
sbb
outsb
into
scas
outsl
mov
mov
repnz
bound
add
das
test
mov
pop
cld
gs
inc
mov
rcrl
mov
jge
push
out
cmpsb
insb
mov
pushf
mov
or
mov
outsb
cmpsl
icebp
loop
aaa
aas
or
pop
test
sbb
jno
insl
out
mov
movl
mov
lahf
push
mov
bnd
xchg
inc
xchg
imul
test
inc
rol
xchg
cmp
mov
movsb
lds
imul
aas
scas
ljmp
jmp
fistps
ja
dec
repnz
cmp
pop
mov
inc
repz
mov
insb
subl
enter
divl
leave
dec
adc
dec
sub
push
xchg
inc
cltd
pop
push
pop
or
dec
cwtl
jle,pn
dec
mov
jge
stc
sbb
sbb
into
xchg
out
lds
add
outsl
jge
fstpl
sarl
les
adc
or
fprem1
stc
push
subl
repnz
and
subb
nop
push
add
xchg
pop
adcl
mov
mov
negb
insl
and
int
sbb
std
push
ja
mov
fwait
cmp
int
aam
adc
stos
out
sbb
adc
cmpl
je
pop
sbb
jmp
addl
xchg
mov
jmp
xchg
ret
jp
push
add
sti
mov
push
mov
sbb
xor
ss
and
add
cld
xchg
sub
stos
mov
xor
sub
pop
jae
push
push
jae
adc
jp
jg
dec
jmp
shl
scas
mov
decb
xchg
jmp
mov
enter
inc
not
cmpb
and
lahf
dec
loopne
aad
outsl
test
xor
jmp
pop
mov
sub
and
adc
scas
aas
fisubl
out
icebp
adcb
xchg
push
fidivs
out
or
mov
repnz
push
xchg
and
sti
jge
pop
dec
pop
cmc
fcomps
cmp
pop
mov
mov
sub
lcall
and
int3
in
xorb
inc
andb
jmp
shl
jecxz
push
cld
fdivl
ficomps
jmp
arpl
mov
lret
xor
test
icebp
pop
adc
addb
das
push
mov
sahf
scas
mov
cmpsl
sub
cmc
aam
mov
or
or
pop
cmp
mov
mov
pop
out
aad
xchg
jecxz
xchg
or
pusha
sarl
dec
enter
xchg
mov
and
je
mov
or
lcall
dec
mov
push
in
ja
scas
push
cmpsb
lret
outsb
mov
inc
test
es
lcall
jge
add
test
inc
push
fldl
xlat
data16
or
test
or
clc
jbe
daa
dec
and
ret
inc
mov
iret
imul
or
jge
inc
dec
adc
jnp
xchg
je
mov
mov
or
cmpsb
push
xorl
push
lods
insb
lods
add
mov
and
inc
test
xor
scas
mov
xchg
or
inc
jns
mov
cmpsl
fnsave
aas
nop
out
lret
pop
jno
je
xlat
in
lret
pop
adc
xchg
fistpll
fnsave
decl
es
and
shl
gs
cli
je
mov
ds
dec
mov
mov
or
in
enter
cltd
push
or
and
push
sbb
movsb
enter
out
pop
cmp
loope
push
mov
xchg
jnp
fistl
fistpll
pushf
mov
cld
jmp
lods
sub
aas
sbb
movsb
scas
sarl
pop
push
in
dec
out
mov
popf
mov
int3
es
xchg
sub
fsubrl
add
lea
push
cmp
cmp
sbb
test
dec
out
add
dec
lds
add
fidivs
dec
stos
lods
cmc
pop
xchg
jnp
sti
xor
test
add
mov
mov
cmp
cmp
frstor
lahf
shlb
jbe
push
in
sarl
adc
or
and
mov
pop
xchg
xor
lret
divl
push
and
jnp
ret
call
mov
dec
mov
fmuls
sub
pop
sbb
xchg
fucomp
jge
push
mov
insb
xchg
xchg
dec
sub
and
scas
aaa
inc
or
mov
push
mov
cmp
fdivrl
test
inc
jp
inc
aad
popa
imul
addl
mov
scas
bnd
mov
fnsave
mov
loopne
mov
flds
movsl
push
push
dec
ja
xlat
push
pop
inc
lea
test
jbe
push
in
clc
clc
adc
and
push
sti
out
xor
mov
fildl
in
jl
xor
pop
adc
push
icebp
repnz
cmpsl
push
sub
jae
and
or
dec
push
ret
cmc
inc
lea
data16
xchg
mov
or
pop
insl
movsl
mov
sub
mov
jg
jns
mov
push
imul
inc
sub
sar
sub
push
mov
xchg
inc
pop
repz
dec
xchg
mov
in
cmpsb
ret
jge
pop
cwtl
add
xchg
scas
add
js
jb
cmpl
jle
mov
jne
pop
jae
sbb
test
dec
lods
mov
jne
in
push
xchg
es
cmp
ret
adc
es
mov
int
push
js
mov
test
in
hlt
fwait
out
jl
stc
dec
lcall
int
lcall
lods
inc
rolb
sti
test
push
in
mov
sbb
decb
mov
arpl
fcomip
cmp
adc
das
mov
pop
adc
xor
addl
sub
xchg
or
aas
mov
ficompl
and
jle
js,pn
pop
xlat
outsb
cltd
fisubl
rcr
lods
mov
lahf
or
cld
movsl
mov
test
xor
mov
loop
xchg
mov
shr
and
std
and
ficompl
pop
cmp
in
outsb
push
rorb
dec
arpl
outsb
add
movsb
inc
mov
jmp
hlt
enter
mov
sahf
out
cmp
popf
cmpb
sbb
in
sbb
les
or
pop
xor
push
in
cmpl
lock
jae
fsubs
sbb
inc
adc
push
aam
push
sbb
xor
lahf
cmp
mov
xor
js
mov
mov
sbb
lahf
iret
pusha
mov
jg
loopne
mov
lds
cs
mov
ja
push
orb
fmulp
jnp
push
cmpl
je
cmpb
jnp
hlt
out
add
icebp
pop
add
cmp
es
sbb
sbb
shll
xchg
ja
mov
sahf
clc
and
jb
push
and
push
adc
setle
dec
in
pusha
out
cmp
add
lds
mov
and
cmp
mov
movsl
ja
shll
mov
sbb
add
jp
jb
scas
jl
mov
cmc
in
dec
cmp
xchg
testl
add
cmc
mov
mov
cs
or
push
mov
aaa
in
lcall
mov
cmp
dec
in
cld
jmp
or
popf
js
mov
jle
mov
call
pusha
test
mov
xchg
or
mov
xor
int
sti
jge
dec
sbb
cmp
sti
push
xchg
cmpsl
mov
xchg
push
ret
aas
repz
sti
mov
inc
aaa
jecxz
sar
and
pop
xchg
jmp
gs
xchg
rcrl
fldlg2
frstor
push
in
inc
sldt
sbb
faddp
sarb
mov
adc
js
dec
clc
inc
xchg
add
dec
adc
mov
inc
cmp
or
push
mov
cwtl
jne
fcomps
pusha
sahf
jbe
cmp
lret
xchg
mov
xor
pop
jne
jmp
cltd
pop
and
data16
subb
imul
jbe
rorl
xor
test
rsm
pop
lcall
mov
insb
repz
sub
aam
xor
arpl
cmp
dec
dec
leave
movsb
push
xchg
scas
dec
cli
mov
cmp
js
xor
and
retw
fs
sbb
insb
ja
test
ss
stos
lahf
fdivp
mov
or
int3
inc
jle
or
sahf
fsubrl
mov
clc
and
xchg
int
mov
jns
fwait
sub
xor
jge
jecxz
inc
test
jb
push
aaa
mov
in
flds
inc
aad
adc
cmpsb
sbb
adc
sub
test
push
push
jns
or
jbe
mov
xor
jmp
xchg
outsl
xchg
jb
cs
test
add
sti
stos
jo
mov
cmc
iret
adcb
pop
fs
push
inc
cli
aad
scas
mov
push
in
xchg
cwtl
cmc
xor
stos
imulb
scas
mov
lahf
mov
fidivl
data16
xor
nop
in
jecxz
andl
cmp
inc
pop
add
pop
shl
in
xlat
insb
aam
jnp
jmp
mov
mov
loop
mov
movsb
cltd
movb
inc
mov
popl
jle
cli
ret
add
into
movb
lret
data16
or
adc
rcrb
xor
mov
and
cmpsl
push
push
stos
addr16
xor
sub
mov
adc
incl
fistps
add
mov
je
imul
test
xchg
test
movsb
push
in
dec
xchg
aaa
dec
in
pop
jno
pop
pop
dec
fadds
mov
adc
adc
dec
das
mov
fiadds
mov
ret
or
sub
xchg
sbb
insl
xor
push
mov
stc
xor
or
xchg
fidivrl
jmp
movsl
das
sub
jns
testb
sbb
mov
push
push
andb
push
scas
addb
pop
cmp
data16
add
hlt
add
idivb
aas
mov
dec
pop
xchg
cmp
push
jns
sbb
cmp
pushl
mull
push
imul
lds
cmp
add
or
sbb
jp
popf
jl
push
push
pop
cmp
sub
xor
sbb
inc
xchg
nop
xchg
cmp
pop
mov
pop
repz
mov
clc
cmpsl
add
push
jne
or
adc
test
ljmp
jae
hlt
jne
xchg
jno
lock
or
jg
lret
arpl
mov
icebp
xlat
push
xchg
fdivs
mov
push
out
adc
sarl
cs
jmp
push
jns
xor
push
xlat
push
pop
insl
sub
rorb
add
js
cmp
add
fs
pop
pop
stos
cmp
fisttpll
bound
jle
jecxz
adcb
addl
shrb
flds
test
lds
testb
push
outsb
xor
cmpsb
xchg
dec
mov
jmp
pop
pop
int
or
in
mov
dec
addb
call
and
shlb
rcrl
cmp
push
shrl
pop
ljmp
cs
pop
fidivrl
int3
xchg
push
cli
inc
xchg
clc
xchg
xchg
and
xor
mov
pop
jnp
pop
mov
mov
jb
xor
movsl
imul
lret
push
cmpsl
hlt
mov
bound
aas
mov
xchg
adc
add
cmc
stc
sbbl
sub
leave
in
cld
sbb
xchg
movsl
adc
frstor
cmp
sbb
ja
add
adc
rcl
sti
nop
and
pushf
mov
lcall
and
pop
ds
in
repz
sbbb
cli
xorl
in
je
jne
xor
arpl
cmp
and
adc
inc
mov
dec
stos
fstps
jbe
dec
jp
mov
loope
cld
lods
mov
ds
xchg
fldl
ds
adc
mov
stos
andl
xchg
cli
ds
xor
push
sbb
mov
sbb
das
mov
enter
add
enter
mov
fldt
cmpsb
jl
pop
fldenv
decb
loopne
mov
cmp
mov
mov
sub
xchg
jno
movsl
stos
js
xchg
daa
arpl
sbb
test
sbb
loop
mov
aas
pop
mov
add
add
mov
inc
mov
mov
jo
xor
orl
adc
sub
cmc
and
push
int
ficompl
lahf
mov
mov
in
test
dec
es
and
sar
or
imul
pop
pop
or
cwtl
pop
sbb
aam
xorb
fbld
fs
jmp
outsl
cli
les
and
dec
loope
loop
add
dec
jle
xchg
ljmp
and
or
cmp
cmp
iret
adc
aas
dec
ds
jl
imul
cmp
popa
imul
mov
mov
ds
xor
roll
fldl
not
adc
push
iret
js
fdecstp
nop
or
fiaddl
loopne
push
sbb
cmp
icebp
sahf
mov
andl
inc
pop
stc
jnp
pop
inc
or
mov
adc
hlt
and
mov
test
mov
sahf
test
inc
sbb
decb
repnz
popa
stos
movsl
push
sbb
sti
sub
outsb
test
inc
into
fistpll
sti
push
shlb
push
cmp
lds
scas
aaa
and
mov
movsb
lret
daa
nop
xchg
adc
xor
out
rclb
into
push
push
xchg
cltd
out
orl
mov
aaa
addr16
mov
push
add
test
mov
and
sbb
cmp
loop
cmp
ret
shrl
mov
mov
test
addr16
sahf
mov
jne
push
lock
cmp
test
aam
std
mov
push
out
adc
xchg
inc
cmpsb
mov
mov
test
adc
mov
fidivrl
cwtl
add
pop
div
push
pop
and
dec
imull
xorps
out
rclb
into
add
scas
shrl
pop
add
dec
or
add
scas
jg
fdivl
mov
jnp
sub
lods
xorb
out
dec
psrlq
mov
mov
xor
cmpl
aam
mov
pop
dec
mov
lds
fidivl
iret
stos
push
adc
mov
outsl
jo
mov
add
jnp
jmp
bound
inc
xor
fucom
mov
aam
pop
sub
enter
ja
add
in
adc
dec
cmc
sub
lcall
mov
xchg
adc
adc
jae
std
mov
mov
jnp
or
jle
ljmp
xor
xlat
scas
jnp
data16
mov
mov
and
pusha
negl
cmp
ja
mov
inc
push
push
mov
pop
data16
seta
ret
cs
movsl
jg
repz
xchg
pop
dec
xchg
push
sbb
and
dec
daa
js
sub
pop
mov
inc
jmp
test
int3
stc
push
jnp
in
xchg
mov
adc
test
popf
ficompl
decl
push
jl
nop
push
movsb
ficomps
mov
add
cltd
jl
mov
or
and
adc
xchg
dec
cld
sub
push
daa
lods
push
inc
mov
add
mov
mov
xor
dec
test
sbb
ret
sub
adc
in
lret
in
es
outsl
xchg
mov
rclb
mov
inc
mov
fsubp
scas
repnz
lods
aas
push
jbe
lret
or
xor
rclb
inc
sub
cmp
inc
addl
mov
aad
sbb
jne
sahf
iret
in
fsubp
mov
mov
out
mov
into
mov
push
fs
adc
pop
call
pop
leave
mov
jl
add
mov
pop
dec
push
test
push
outsl
mov
std
add
push
aaa
jp
pop
pop
enter
push
xlat
pop
outsb
jns
pop
arpl
addb
push
jp
cmpsb
std
cmp
int
dec
cmpl
mov
push
jne
out
xchg
pop
mov
push
lods
les
jg
and
sub
push
mov
cmc
jg
and
aam
pop
mov
cmp
insl
clc
jp
insl
cmc
out
aaa
cmp
lds
aam
mov
ret
mov
in
mov
push
outsb
les
lret
frstor
pop
or
and
adc
sbb
fiaddl
in
out
insb
mov
jnp
mov
imul
inc
jg
scas
and
pop
or
movsb
or
mov
loopne
sub
push
inc
xor
popa
cli
lcall
popa
lcall
scas
and
push
test
cmpsb
out
and
int
jl
stos
xor
or
xorl
mov
jno
repnz
or
mov
mov
outsb
push
daa
ret
shrb
push
inc
test
rorb
xchg
mov
jl
es
cwtl
movsb
es
repz
outsb
xchg
adcb
loopne
data16
jl
sub
and
xchg
lea
in
xchg
mov
or
repz
adc
sahf
adc
pop
jp
imul
jbe
mov
dec
repz
sahf
mov
shrl
ret
mov
pop
imul
pop
dec
fisubrs
je
pop
and
cmp
out
outsl
loopne
pop
pushf
lock
push
cmp
leave
add
into
mov
lcall
lds
pushf
mov
cmp
pop
xchg
fwait
nop
adc
and
in
xlat
or
and
mov
scas
addr16
jno
ds
scas
jae
ds
inc
mov
inc
xor
push
pop
adc
loopne
pop
push
xor
fidivrl
sub
jno
dec
push
cmpsb
sub
or
mov
je
jmp
popf
in
pop
ds
rcr
mov
inc
and
fldt
add
pop
adc
cltd
mov
xchg
add
mov
xor
push
scas
xchg
fdivl
cmpsb
cmc
addr16
loope
shrl
sub
add
imull
out
dec
add
jmp
lods
pop
mov
pusha
push
fs
ret
jmp
rcrl
xchg
cmp
stos
dec
aas
cmpl
loop
ss
mov
in
cmp
or
mov
outsl
leave
cmc
xchg
mulb
cli
jle
pusha
stos
dec
xchg
shlb
xor
cmp
test
fildl
scas
xor
mov
push
add
inc
in
dec
loope
and
xor
or
sbb
mov
push
mov
insl
insl
add
lock
add
movsl
xchg
push
aas
jb
std
pop
push
imul
stc
push
adc
xor
fdivl
ficoms
dec
cmp
gs
dec
add
dec
jb
dec
mov
inc
aas
aaa
adc
inc
cmp
inc
iret
adc
or
shl
lock
inc
sub
imulb
dec
cmp
orb
jge
lea
insl
cmp
in
fsubrl
sbb
insb
ljmp
les
mov
es
rorb
loopne
or
add
in
mov
stc
scas
mov
mov
int3
mov
xchg
es
aam
jno
mov
movsl
mov
jp
push
in
pop
push
out
das
shlb
sahf
sub
js
push
jnp
imul
setne
cli
sbb
call
sbb
xchg
jb
jge
pusha
and
jmp
push
dec
in
push
nop
jecxz
ret
mov
aaa
and
je
std
cli
lods
xchg
jge
mov
out
sub
push
dec
pop
jecxz
mov
jge
clc
jno
dec
cltd
rcrl
ljmp
adc
push
sub
jge
sti
sahf
test
mov
sbb
rcll
fs
sbb
test
ss
pop
add
out
mov
dec
add
dec
cmp
xchg
dec
test
ret
cmp
lahf
pop
ret
xchg
movsb
int
xlat
out
cmpsl
pop
jbe
ret
pop
mov
cli
adc
movsl
and
adc
popf
rcrl
pop
pop
out
xchg
ja
pop
or
or
loop
ret
cmp
in
neg
repz
push
and
inc
and
std
rorb
rorl
push
stos
pop
cmp
cmp
inc
in
add
jmp
xor
mov
xlat
mov
scas
mov
cld
jp
jb
fidivrs
daa
cmp
push
dec
call
adcb
jnp
pop
fstps
iret
insb
cmp
mov
and
hlt
insb
int
pop
dec
cwtl
subl
ret
push
movsl
lods
dec
jne
arpl
xchg
ljmp
andb
xchg
and
arpl
das
xlat
js
mov
jmp
inc
cwtl
outsl
or
clc
call
mov
mov
xchg
ss
loope
imul
bound
loope
xor
jne
imul
pop
push
rcrl
jp
loop
adc
aas
rep
push
mov
lods
sub
jno
sub
lds
ret
mov
adc
or
mov
pop
call
rcrl
and
dec
xor
shl
out
int3
shll
push
pop
xor
incl
mov
andb
je
pop
arpl
faddl
in
cmp
sbb
push
popf
cwtl
test
xor
sub
scas
clc
fnstsw
mov
pop
pop
sub
or
xchg
adc
jge
out
jnp
mov
sbbb
cmp
inc
loop
jecxz
xchg
cli
je
inc
and
sahf
cmpsb
mov
shrl
mov
jg
repnz
cs
pop
mov
inc
xorl
sub
jae
jecxz
mov
or
jge
xchg
push
pop
loop
mov
push
cmpsl
data16
jl
pop
jo
jle
xchg
shll
test
xor
push
imull
call
xchg
out
pop
mov
outsl
in
loopne
cwtl
jnp
pop
push
enter
xor
jmp
dec
shrl
mov
mov
fwait
inc
jge
das
sbb
aaa
pop
inc
ret
jecxz
xor
mov
sub
adc
loopne
jge
push
xchg
add
lods
cmp
aam
push
les
xor
ja
and
sahf
cmc
adc
jns
xor
jns
mov
jmp
or
cmp
jno
aaa
cmc
and
push
scas
and
or
test
movsl
adc
das
mov
je
jecxz
and
in
xchg
lods
fidivs
rorb
push
sub
xchg
rolb
sub
sahf
cmc
or
jmp
mov
lea
or
cli
sub
in
scas
inc
and
cmc
ret
dec
add
and
test
mov
out
nop
pop
sbb
mov
push
xchg
push
fiadds
cwtl
xor
lret
xchg
fs
inc
cmp
gs
mov
add
push
adc
mov
test
xchg
xor
inc
cmp
outsl
insb
sub
xchg
xor
xlat
xchg
fistpl
fsubs
fcomp
cwtl
inc
shll
cltd
push
jge
movsl
icebp
jge
jno
sbb
xor
in
jo
arpl
sub
out
dec
mov
jae
aad
rcrb
repz
cld
push
jp
mov
ret
push
dec
jb
mov
xorb
scas
jp
sub
pushf
out
xor
addl
pop
leave
lcall
pop
adc
xchg
out
push
push
into
and
jle
in
cmpsl
push
movsb
ficompl
push
and
scas
inc
jecxz
and
sbb
lods
push
loope
loope
xor
stos
adc
dec
ret
ret
scas
lock
inc
scas
push
push
fnstsw
mov
adc
outsb
sub
mov
in
out
sahf
es
lcall
push
fnstenv
lods
mov
xchg
pop
sbb
iret
inc
add
mov
movsl
enter
out
fnstenv
or
cmp
xor
xchg
jb
mov
xchg
in
xchg
push
in
adc
mov
jmp
add
cmp
cmpsb
xchg
fwait
mov
les
lret
sarl
jecxz
in
sbb
ret
inc
pop
js
test
and
hlt
cltd
mov
mov
stc
jb
bound
sub
pop
movsb
fs
hlt
gs
and
test
popf
dec
scas
leave
into
aas
sub
adc
adc
addr16
push
mov
and
pop
cmp
sub
mov
mov
mov
data16
jnp
mov
mov
das
jno
mov
jp
lock
mov
adc
jbe
mov
pop
into
test
cmp
adc
aas
pop
popf
sahf
ss
inc
cltd
inc
dec
daa
cmp
pop
mov
xchg
mov
sbb
cmp
push
sub
xchg
mov
xlat
xor
push
xor
in
ss
ljmp
sti
pop
adc
add
test
push
fmull
aad
das
push
add
stc
or
addr16
xchg
ret
jmp
pop
dec
mov
dec
lock
flds
dec
push
mov
movsl
pop
xchg
inc
into
pop
xchg
mov
orl
dec
cmp
fstpt
and
push
ljmp
hlt
push
adc
push
push
mov
pusha
push
ljmp
aas
dec
add
aam
shrl
xor
xchg
lods
jl
leave
xchg
fs
lcall
or
mov
push
sbb
leave
gs
add
jo
pop
push
xor
or
in
inc
push
and
jmp
push
sbb
sbb
xor
data16
mov
or
call
fnsetpm(287
mov
cli
inc
test
mov
add
imul
mov
push
ss
sbb
add
xchg
mov
cmpsl
les
out
and
push
mov
in
cld
adc
mov
jle
inc
or
mov
pop
mov
mov
scas
mov
rcrb
or
sub
in
enter
xchg
mull
pop
inc
ret
pop
movsb
mov
ja
popa
cmpsl
lods
and
mov
fistpl
cmpsb
inc
cmp
jb
dec
mov
inc
lea
add
mov
and
lahf
movsl
hlt
xor
inc
cltd
xchg
shl
scas
ja
js
cwtl
cmpsb
in
and
dec
nop
popa
mov
arpl
divb
out
mov
mov
loopne
and
es
pusha
rcl
and
aad
mov
inc
mov
cmc
mov
sub
add
jecxz
jne
lcall
and
xchg
add
out
xor
mov
push
xor
dec
or
das
mov
scas
aam
dec
or
adc
inc
push
sub
push
jbe
mov
rolb
arpl
xor
lock
push
orl
clc
xchg
and
xorl
outsb
test
and
adc
div
fcmovnu
mov
pop
out
arpl
inc
xchg
roll
in
add
xor
in
inc
test
imul
jecxz
dec
fldt
outsl
addr16
jecxz
inc
fwait
mov
dec
mov
int3
mov
in
xor
rcl
dec
add
sbb
jnp
jge
jp
div
mov
std
sti
sbb
sahf
punpckhbw
cmp
mov
sub
jae
and
incl
sahf
std
pusha
cmp
or
cld
fcompl
pop
lcall
lret
push
jno
lret
jne
bound
scas
sbb
pop
jae
out
jecxz
sub
loopne
mov
data16
outsl
cmpsb
push
imul
fmul
negl
push
jmp
sub
popa
pop
lret
hlt
push
fldl
mov
lods
jmp
loope
jbe
cmp
iret
inc
pusha
push
push
xchg
sbb
jb
mov
or
jge
add
adc
push
icebp
leave
sbb
insb
negl
inc
insb
pop
das
mov
push
dec
add
or
mov
pop
stc
push
shlb
cmp
cmp
mov
and
andl
or
rcr
and
push
repz
push
jecxz
inc
std
xchg
dec
iret
xor
popa
sub
cltd
pop
sbb
mov
cmp
push
in
outsl
pop
mov
lret
jno
xor
in
jns
or
jno,pn
xchg
pop
mov
btr
cltd
imul
fistps
push
stos
stos
or
idivb
andb
cli
lods
movsb
or
int3
hlt
inc
das
add
or
imul
hlt
mov
or
cld
inc
into
dec
imulb
paddusw
sub
les
inc
inc
call
fimuls
lods
sub
cmp
pusha
in
add
stos
xor
add
inc
ss
jae
adc
xchg
mov
insb
inc
add
inc
test
or
pushf
mov
and
neg
mov
mov
incl
inc
jg
in
mov
mov
rolb
lea
loope
jle
mov
inc
mov
push
cltd
jns
push
xchg
or
fptan
popf
jg
adc
xchg
rclb
cwtl
jo
cmp
in
adc
mov
xor
into
cli
sar
shr
xor
add
pusha
xor
or
aad
push
push
outsb
sbb
ficoms
int
popf
or
adc
dec
pop
pop
sub
mov
js
incb
dec
mov
push
cld
jge
scas
jb
pop
int3
cltd
mov
inc
out
or
xor
jns
cmpsb
sahf
jo
cmp
ret
mov
xchg
lods
adc
adc
sub
ret
fdivl
pop
lods
into
cmp
mov
out
mov
stos
imul
pop
pop
xchg
cmc
mov
push
gs
inc
scas
out
lods
or
repz
mov
std
repz
sahf
mov
adc
into
cmp
icebp
lock
fwait
jb
xor
cld
sub
inc
test
adc
jns
insl
mov
sub
push
pop
aam
xor
push
shlb
je
repz
jge
rorb
adc
into
adc
xchg
add
loope
dec
insl
test
jnp
mov
dec
xchg
pop
dec
repnz
add
add
fisubs
push
cmp
repz
fsubs
push
fcomps
in
jnp
fsts
lds
xor
inc
sub
inc
inc
scas
inc
push
dec
popa
push
xchg
xor
xor
mov
pusha
dec
popa
insb
jbe
clc
pop
in
sbb
enter
dec
imul
in
lret
sahf
mov
xchg
and
pop
lea
jl
xor
sbb
xchg
out
mov
jle
bound
out
repz
sbb
sahf
adc
pop
inc
js
xchg
mov
pop
pop
jo
lret
sar
movsl
fwait
out
notl
sub
out
pop
xchg
pushf
mov
insl
jg
lock
mov
mov
jle
in
push
push
xor
jb
pop
jns
pop
movsb
mov
fldenv
or
pop
dec
scas
sti
push
push
mov
mov
out
push
fcoms
pop
leave
mov
add
sbb
mov
inc
push
pop
nop
aas
pusha
setne
and
aam
add
xchg
mov
das
sti
call
or
cmc
pushf
push
adc
xor
fidivrl
jne
or
lea
push
data16
xchg
leave
pop
mov
or
push
dec
xchg
insb
addr16
rcll
orl
cmpsl
insb
adc
add
stc
arpl
aad
addr16
scas
fnstenv
cmp
mov
dec
loope
leave
clc
dec
sbb
push
adc
mov
fxtract
mov
push
sarb
push
insb
lret
sti
ds
repz
or
pop
ja
or
rolb
cmp
xchg
sar
out
jge
rorl
and
in
js
inc
adc
jns
pushf
movl
xor
ljmp
paddb
popa
push
dec
cmp
dec
push
add
out
adc
insb
lds
sub
inc
cmpsl
je
jmp
jmp
add
dec
pop
mov
adc
or
cmpsb
mov
daa
aam
sbb
wrmsr
and
mov
or
bound
fmulp
gs
xchg
and
testb
or
cmp
add
iret
dec
xadd
aad
loope
and
aaa
mov
idivl
lahf
ret
ja
in
aaa
mov
ds
push
out
pushf
and
inc
add
sub
mov
push
lret
cmc
sti
in
out
xchg
xor
pop
mov
inc
gs
push
decl
sub
and
mov
mov
sub
imul
and
mov
jecxz
sahf
and
adc
call
out
cmpsl
aaa
mov
push
fwait
pop
aas
inc
sub
dec
clc
sahf
out
icebp
nop
mov
loopne
daa
out
gs
adcb
fwait
ja
xor
stos
xor
into
out
cmpsb
cmp
dec
sub
and
or
and
cltd
stos
idivb
leave
adc
and
xchg
iret
jb
pop
push
mov
shlb
pop
mov
jns
aaa
clc
stos
push
addr16
pushf
imul
lret
jo
ss
and
ja
sub
adc
dec
popfw
or
pop
push
xchg
xor
pop
lock
test
lcall
mov
dec
jmp
adc
sbb
pop
adc
add
cmp
or
pushf
xor
jmp
mov
je
or
dec
sti
adc
stos
jns
addb
adc
cmp
pop
lahf
sbb
je
pop
rorl
mov
pop
int
mov
out
xchg
or
cmpsb
jnp
dec
testl
cmpsl
add
pop
fdivl
sbb
and
or
das
inc
fsubl
movsl
xchg
aad
mov
fildl
jnp
out
mov
iret
fs
push
push
leave
addr16
repz
xchg
repnz
iret
mov
inc
outsb
shll
test
pop
inc
in
cmc
inc
inc
mov
xor
pop
add
mov
dec
inc
mov
xchg
and
aaa
insb
aam
push
or
xor
cltd
testl
add
cli
hlt
jbe
jle
stc
fucomip
and
nop
dec
add
roll
icebp
cs
addl
xchg
rclb
sarl
xchg
xor
div
in
je
scas
test
jno
dec
mov
pop
adc
ret
sbb
pop
ret
insl
in
out
popa
sahf
mov
scas
sbb
shll
sub
xchg
pushf
orl
ljmp
lock
mov
mov
sub
or
pop
sbb
outsb
mov
js
iret
aas
pop
xchg
divb
push
cwtl
jmp
sub
or
dec
dec
in
in
fstpl
out
icebp
and
xchg
lret
out
lcall
fdivl
push
movsb
ja
or
xchg
divb
jp
lds
dec
ret
push
lret
in
adc
or
enter
sbb
or
mov
dec
push
mov
dec
arpl
lock
insb
dec
rcrb
inc
mov
xchg
push
cmpl
jo
pop
jmp
add
dec
and
loopne
stos
xchg
popa
or
je
test
hlt
mov
je
sbb
leave
lahf
fcomip
in
insb
add
xor
push
jae
xor
mov
int3
pop
imul
mov
dec
in
sub
lahf
popa
push
imul
cltd
scas
or
les
das
lods
inc
add
mov
adc
out
outsb
iret
test
xor
imul
cmc
cmp
loope
aad
leave
sbb
lock
mov
xchg
xor
xchg
mov
push
xlat
hlt
aaa
in
jp
sub
sub
daa
cs
in
and
sbb
pop
pop
gs
mov
push
push
jns
sahf
adc
push
dec
mov
pop
add
and
mov
test
xor
sub
bound
nop
aam
addr16
pop
xchg
movsb
mov
clc
sub
aad
in
lock
shlb
adc
stc
lcall
test
mov
cltd
mov
mov
mov
and
mov
outsl
and
pop
cmpsl
cmc
rcrl
jp
orl
scas
push
rcrl
cmp
shrb
push
inc
movsl
aam
fcmovnbe
push
imul
and
lret
dec
dec
inc
mov
pop
cmp
xchg
dec
out
mov
push
mov
mov
add
sti
clc
in
aas
jmp
js
push
hlt
mov
or
cmp
ja
dec
rorl
dec
dec
cmpsb
xchg
dec
negb
dec
mov
xchg
sub
out
je
mov
pop
push
jne
fnstenv
add
fwait
mov
ficoml
xchg
adc
sbb
push
xor
mov
daa
pusha
jno
fdiv
lock
andb
mov
pop
loope
adc
mov
dec
outsb
xor
add
sub
mov
test
es
in
subb
inc
cmc
lcall
dec
nop
ljmp
xchg
sbb
insb
js
lret
inc
clc
xor
adc
xchg
pushf
ds
inc
mov
cld
xor
js
out
test
xchg
adc
sbb
xor
mov
dec
ficoms
push
dec
dec
mov
movsb
js
mov
cmp
aam
xchg
aad
mov
jle
fdivrp
inc
sub
lods
in
push
mov
sub
mov
les
test
inc
pop
loopne
arpl
adc
inc
sub
dec
loope
pop
mov
addr16
push
jae
push
dec
sub
cmpsb
mov
mov
adc
es
mov
push
dec
xlat
inc
xor
sub
rclb
mov
ret
pop
test
popa
popf
lahf
ja
mov
mov
xor
js
arpl
cmpb
loop
pop
jbe
pop
mov
sub
dec
lock
add
shrb
jno
cmp
xchg
jne
push
xchg
sub
pop
or
sub
mov
lds
nop
push
sub
cmpsb
lcall
push
dec
sti
int3
sub
cmp
loope
adc
test
int3
mov
sbb
jmp
jmp
jmp
and
fistpll
push
mov
xchg
pushf
mov
out
aaa
mov
or
jp
mov
add
xchg
and
cmpl
js
mov
mov
push
pop
clc
testb
pop
into
icebp
adc
aam
add
pop
pop
divb
aaa
sbb
jns
ja
lods
movsl
repnz
leave
aad
aaa
pop
and
mov
jge
jne
add
mov
sbb
gs
outsl
push
cli
ret
xchg
sub
ss
add
ficoml
std
loopne
inc
or
sub
inc
imul
push
push
push
notl
sub
ss
xchg
inc
mov
xchg
jno
mov
pusha
dec
fidivrs
pop
sub
mov
or
add
sti
mov
sbb
roll
bound
xchg
xchg
lods
xor
lret
daa
or
loop
stos
push
pop
pop
push
xchg
mov
dec
jle
push
and
cmpsb
push
xor
sbb
sbb
cltd
cwtl
or
cmpsl
jo
sahf
ja
sub
dec
jb
ret
cmp
es
push
mov
push
fsub
cmpsb
out
add
cmp
and
int
mov
jp
pop
lcall
shll
rol
pop
fsts
arpl
aaa
mov
push
es
mov
adc
mul
pushf
inc
mov
push
jbe
into
push
sub
xchg
out
inc
or
add
sbb
std
sbb
loopne
sub
sbb
movsl
clc
clc
bound
dec
push
mov
cmovle
xor
mov
dec
xor
hlt
sbb
nop
lods
bound
iret
js
shlb
out
test
orl
push
sbb
cmp
dec
xor
sbbb
ja
ja
or
cltd
jmp
cmpsb
fsubrs
inc
fildl
dec
je
xchg
aad
les
xchg
jno
and
add
loop
in
loopne
push
daa
adc
pushf
out
rcll
mov
and
dec
ljmp
sub
repz
negb
scas
ss
cmp
and
aad
addr16
aas
mov
movsb
jle
sbb
pop
xchg
mov
cmp
pop
cltd
lods
int
movsb
test
sub
ds
jl
pop
inc
fidivrl
in
popl
pop
push
repnz
mov
or
push
dec
out
lods
jbe
cld
idivb
movsb
or
scas
clc
jno
out
fcmove
inc
push
scas
push
dec
push
stos
nop
mov
sbb
mov
jmp
repnz
es
mov
dec
inc
and
cmp
test
xchg
mov
sub
add
fwait
shrd
pop
aam
pusha
das
or
mov
dec
or
aaa
mov
dec
xlat
jmp
add
and
jp
mov
aad
cmpsb
and
adc
icebp
mov
dec
fimull
int
in
sahf
fs
dec
xor
pushf
mov
stc
lods
outsb
mov
lock
sub
nop
cltd
lahf
test
and
push
pop
subl
popf
imul
xor
jg
sub
cmc
aad
scas
xchg
xor
loop
js
pushf
push
insb
jg
jecxz
scas
cwtl
popf
test
push
popf
and
ret
mov
fadds
cmpsl
mov
pushf
pop
dec
push
mov
mov
int3
jb
lds
jns
aad
pop
or
iret
mov
push
or
std
pop
mov
sbb
or
in
mov
aam
add
in
es
add
inc
jg
incb
inc
cmpsb
lea
pop
pop
push
jg
cmp
pop
mov
stos
and
test
ss
pop
pop
dec
iret
stc
mov
add
pop
xchg
or
aad
xor
inc
push
lock
cwtl
aaa
xchg
pop
mov
mov
arpl
sbb
adc
bound
std
xor
jg
fbld
lret
incb
jno
ficoms
adcl
mov
mov
xor
out
xchg
dec
or
aaa
mov
xor
lods
lahf
push
or
jmp
jmp
dec
sbb
push
inc
push
in
mov
dec
je
sbb
in
cld
mov
pop
sub
mov
sub
dec
dec
sbbb
cli
xorb
pushf
in
and
jns
jo
movsl
aad
cmp
xor
addr16
cltd
xchg
clc
stos
or
lds
push
jno
fldt
adc
fcompl
lock
pop
test
cmp
loop
cmc
test
mov
imul
dec
cmc
mov
mov
aas
mov
dec
shlb
adc
lds
idivl
mov
jb
inc
push
dec
sbb
push
jl
je
mov
jecxz
dec
xchg
jl
sbb
jge
cmp
adc
popf
lods
add
jmp
fwait
enter
sub
cmp
pop
scas
out
lret
or
pop
jmp
leave
mov
popf
out
ret
cmpsl
sbb
outsb
mov
inc
dec
fs
mov
mov
scas
or
repz
mov
adc
push
push
enter
inc
mov
fmuls
addr16
mov
into
rcr
xor
ficomps
pop
cmp
in
les
add
out
pushf
es
sbb
or
adc
in
pop
pop
mov
xor
popf
and
and
pop
inc
lcall
dec
add
negl
les
mov
dec
push
inc
mov
orl
arpl
push
in
int
test
addr16
ret
cld
gs
mov
scas
adc
add
and
aad
push
cmp
sbbl
iret
pop
lock
popa
xor
cmp
sub
pop
push
jp
js
push
iret
lret
sub
push
fdivrs
xorl
sub
xchg
jle
inc
mov
mov
sbb
sbb
xor
sub
and
mov
cmp
cmp
in
pop
push
cs
sub
fcom
les
mov
push
jns
rorl
sahf
aas
loop
and
mov
adc
mov
stc
sbb
imul
rorl
fwait
sti
pop
sub
out
repnz
repz
sbb
and
test
push
sbb
int3
sub
in
xor
adc
mov
call
leave
fs
cmp
mov
xchg
lcall
add
push
imull
push
lods
jo
pop
jp
inc
loope
pop
cmpsl
and
mov
inc
iret
add
inc
fstl
aam
lods
sbb
ret
push
mov
cmp
or
test
mov
mov
insb
arpl
jb
sbb
out
sti
mov
cltd
pop
pop
inc
mov
call
aaa
nop
push
sub
imul
cmc
mov
push
mov
inc
mov
subl
fwait
xchg
dec
adc
inc
imul
pop
inc
lock
imul
mov
xor
sbb
cvtps2pd
ljmp
push
std
adc
cmpsb
push
sahf
out
pop
add
xlat
cltd
xchg
outsb
sub
cmp
in
lcall
dec
pop
fistpl
in
into
mov
push
jmp
sbb
jb
or
adc
bound
repz
fst
mov
test
add
es
enter
dec
lret
fldl
sub
push
in
aaa
stos
sbb
test
jb
pop
jne
mov
sbb
int3
xchg
aam
pop
mov
mov
fnop
roll
sub
mov
push
add
dec
cmp
insb
push
or
lds
nop
in
stos
sub
movb
stos
daa
mov
mov
cmpsb
mov
aaa
adc
je
fidivl
cmc
cltd
push
in
sarb
scas
sbb
sub
ja
aad
out
mov
bound
nop
jge
rclb
push
fs
push
push
rol
arpl
cltd
jns
dec
xorl
xchg
adc
into
negl
mov
push
xchg
ljmp
notl
lahf
test
movsb
repz
out
ja
sub
movsb
movsl
jns
dec
xlat
out
pop
int3
andnps
and
clc
aam
sbb
fsubrl
stc
lea
fildl
sahf
pop
push
sbb
cmpsl
fiadds
mov
test
jbe
add
std
lret
fisubrl
cmp
xchg
iret
jne
pop
mov
testb
push
stos
add
rcr
sbb
scas
dec
mov
in
cmpsl
sarl
lods
jmp
mov
cmpsl
iret
xor
iret
popf
clc
inc
xchg
mov
push
xor
add
and
jmp
xlat
mov
mov
or
rclb
in
out
xchg
shll
or
push
icebp
cmp
mov
and
cmp
ja
inc
mov
or
int3
jle
push
mov
out
dec
inc
pop
mov
scas
or
push
rolb
jecxz
popa
popa
dec
xchg
pop
scas
add
inc
add
je
dec
jae
call
xor
nop
xchg
insl
bound
notl
xor
xchg
mov
inc
mov
imul
rcll
dec
movsl
movntps
pop
jnp
fwait
lods
nop
cmp
gs
pop
mov
aaa
rolb
jae
sahf
test
insl
sub
mov
lret
negb
pop
inc
in
jae
add
andl
xchg
cmc
inc
xchg
loope
pop
cmp
lahf
int
push
and
mov
pop
repnz
loop
cmpsl
jecxz
outsl
mov
out
imul
ss
cmp
sub
scas
mov
pop
add
cmpsb
je
jbe,pn
pop
mov
bound
jl
lret
pop
jmp
aas
dec
iret
add
lods
popa
sbb
sub
sahf
push
mull
test
pusha
and
dec
in
push
rcrl
out
lods
sbb
iret
adcl
stc
sahf
mov
and
sbb
push
sbb
outsb
lock
mov
testl
cli
push
rcrb
inc
and
cmpsl
dec
repnz
outsl
mov
xor
and
or
aas
pop
icebp
xchg
cmpsl
rcrb
or
pusha
xlat
ja
dec
inc
lods
mov
push
mov
sub
lods
aam
sub
rcrl
leave
pop
stos
sbb
add
in
std
iret
repnz
cltd
scas
sub
cmp
aam
in
xor
lcall
repz
cmpsb
jnp
mov
ds
dec
fstpt
sahf
mov
dec
cwtl
sbb
mov
inc
stos
lods
rcrl
sbb
dec
shll
pop
repz
notb
xchg
adc
cmp
dec
stos
push
xor
xchg
into
sub
push
inc
aad
jecxz
insl
mov
push
mov
lods
inc
adc
cs
xlat
inc
in
mov
pusha
fiadds
pop
pop
outsl
pop
mov
jle
je
icebp
daa
std
xor
fadds
inc
push
fwait
sub
lcall
inc
movsb
popa
mov
lods
or
adc
cltd
scas
shl
sarb
adcb
pop
icebp
icebp
int
pop
pop
and
decl
sbb
or
sbb
push
gs
mov
xchg
jp
jae
clc
cltd
pop
push
rcll
bound
mov
push
aam
adc
sbb
add
hlt
out
in
and
add
push
mov
loope
adc
lods
daa
push
cld
xor
sub
fnsave
outsb
sub
push
rorb
test
jns
scas
subl
jecxz
mov
pop
xlat
jae
in
push
push
push
lods
add
negb
xchg
xor
xor
iret
xchg
movsb
jnp
cld
lahf
std
and
es
mov
jg
mov
mov
mov
cltd
push
inc
je
xor
pop
pop
lcall
xor
dec
sub
push
mov
pusha
or
mov
dec
call
loopne
mov
idivl
jmp
sub
les
lods
and
in
cmpsb
adc
cltd
inc
lods
pushf
arpl
mov
add
out
add
lcall
je
pusha
es
ffree
add
xchg
mov
fidivrl
add
dec
sbb
push
mov
dec
dec
lods
loop
push
cld
xor
sbb
push
int
mov
ja
lea
mov
dec
xchg
xor
shlb
push
mov
jp
mov
push
mov
jg
roll
out
jl
xchg
inc
pop
cmp
push
sub
or
xor
and
xor
popa
fwait
sub
stos
arpl
jae
orb
mov
ljmp
and
or
in
pop
shll
inc
xchg
cmc
or
dec
fwait
push
adc
or
loop
in
ja
je
outsl
or
push
outsb
imul
push
xor
sbb
ds
pop
push
pop
call
arpl
jg
or
push
sub
divl
dec
in
xchg
dec
fiadds
xchg
aam
sbb
push
xchg
push
xchg
lods
cmp
fdivrl
scas
xchg
pop
rorl
inc
daa
call
test
and
out
jo
and
pop
inc
mov
out
aaa
dec
fwait
add
inc
insb
inc
jne
pop
jns
and
or
or
addr16
pop
in
test
jae
and
daa
or
push
test
std
mov
pop
xchg
in
inc
mov
jbe
scas
ja
mov
mov
pop
cs
adcl
xlat
scas
stc
loope
or
push
aam
sbb
aad
add
scas
xchg
mov
add
in
jnp
mov
call
dec
fs
lods
clc
shrl
dec
das
in
adc
ret
les
insb
dec
jne
push
xor
sub
lock
imul
lahf
xchg
in
in
arpl
cld
loope
nop
pop
insl
es
insl
push
cmpsl
std
cmc
jl
jno
and
lret
cltd
out
ret
pop
xchg
fnstsw
loope
inc
fpatan
call
sub
xchg
incl
loop
cmpb
add
dec
gs
loopne
xchg
iret
popf
sti
gs
inc
rorb
aaa
movsb
adc
mov
jmp
enter
xchg
adc
daa
roll
xchg
addr16
adc
out
fsubp
ja
jmp
je
ja
pop
mov
fistpl
and
push
or
xor
faddl
xchg
sbb
out
js
jb
mov
xchg
repnz
push
xor
and
aam
test
loopne
push
out
mov
sbb
jns
push
and
inc
jecxz
xor
popf
push
sbbl
mov
invd
lret
sub
ret
movsb
movsl
sarl
jp
pop
inc
stos
inc
cmp
jge
pop
adc
repz
inc
cmc
lret
imulb
mov
iret
sub
pop
sbb
lock
imul
jbe
pop
ja
cld
mov
aaa
or
add
out
xchg
daa
sbb
test
or
sbb
adc
testb
sbb
int
mov
in
jo
and
jmp
sbb
push
inc
cmp
cwtl
lea
loop
mov
movb
push
nop
adc
call
cmp
movsb
test
or
pushf
xor
js
pop
out
add
dec
test
push
shrb
jno
cmp
stos
and
addr16
pop
repz
fs
and
sub
sbb
xchg
push
push
xchg
or
xchg
and
push
pop
adc
mov
cmp
and
xor
xor
pop
shlb
adc
and
scas
xlat
sbb
push
dec
mov
addr16
fmul
cmc
cmp
loopne
pop
fidivrs
inc
fsts
pop
ja
pop
sub
cltd
imul
push
repnz
insb
sub
add
scas
add
ja,pn
scas
leave
sub
ret
bound
or
or
add
les
fdivs
stc
rclb
jbe
loop
unpcklps
pop
insb
fucom
add
jmp
out
rclb
adc
outsb
cld
add
xchg
aaa
divl
fwait
push
mov
popa
sti
pushf
mov
jl
xor
enter
push
mov
pop
and
or
fs
sahf
lcall
data16
mov
add
inc
cmpsl
lods
mov
push
imul
dec
dec
movsl
adc
mov
rclb
xadd
aas
sbb
xchg
ja
rcrl
js
shll
sbb
add
mov
push
pop
adc
push
scas
imul
mov
inc
insl
xor
sbb
mov
pop
lret
les
jbe
pop
mov
outsl
pop
pop
add
jmp
test
inc
add
in
stos
arpl
in
pop
sbb
in
daa
push
add
pushw
cwtl
xor
xchg
sub
cmpsb
sbb
fstl
jg
in
xor
insl
jne
sub
in
mov
in
fsub
xchg
inc
ss
fcomps
sarb
lods
mov
dec
leave
xchg
push
jo
lds
psraw
adc
pop
mov
cmc
mov
mov
out
lret
jae
mov
dec
clc
addr16
push
add
rolb
js
andnps
enter
cmp
jo
inc
xchg
in
jnp
aam
xchg
call
enter
icebp
in
enter
sbb
out
daa
int3
popa
inc
xchg
adc
imul
push
insl
jmp
fisttps
outsl
add
aad
and
jle
outsl
mov
test
imul
adc
fdivrl
pop
push
fwait
stos
iret
pusha
and
test
repnz
xor
jne
setb
cld
push
or
mov
mov
jns
add
arpl
or
push
mov
std
sbb
imul
add
enter
mov
push
or
loop
lea
jmp
movsl
lds
mov
sbb
or
push
inc
fdivrl
or
cmc
sbb
movsb
push
aaa
lods
mov
and
in
decl
hlt
es
mov
iret
dec
repz
pop
dec
fcompl
gs
imul
mov
shl
ret
push
cmpsb
repz
cmp
push
out
mov
addr16
xlat
nop
mov
outsb
shlb
shr
je
mov
push
jecxz
xchg
fcoms
pop
or
pop
test
jns
fidivrl
add
and
xchg
f2xm1
pop
in
jp
pop
xchg
stc
ret
mov
test
jo
mov
pop
adc
cli
clc
jg
outsl
pop
inc
mull
pop
adc
lods
cmp
jmp
scas
xacquire
popl
sub
insl
inc
sbb
cmp
and
mov
popa
in
adc
push
pop
jae
sbb
pop
pop
sbb
and
aas
sti
cwtl
inc
adc
inc
xor
jnp
cmp
push
imul
mov
aaa
mov
jmp
xor
stos
insb
repz
cmp
dec
stc
pop
sbb
or
sbb
mov
push
fcomp
fwait
repz
in
aas
pop
scas
cmp
pushf
lcall
addr16
push
icebp
jne
imul
fbstp
xor
xor
aas
jns
inc
xchg
add
out
sub
jmp
popa
inc
roll
sbb
push
jno
xchg
mov
dec
mov
mov
push
sti
ret
aaa
andb
inc
mov
scas
mov
lret
cmc
in
jl
repnz
fs
inc
xchg
and
sub
jno
sub
out
jmp
in
or
stos
stc
ret
loope
mov
loope
jecxz
popf
inc
or
in
cmp
movsw
push
pop
loop
xor
sahf
in
xor
cwtl
cmp
xorb
scas
mov
add
fmuls
mov
jecxz
dec
js
repnz
jg
mov
jno
repnz
arpl
jge
loope
cmpsl
xchg
gs
clc
mov
sub
push
adc
adc
sbb
sub
mov
call
in
xchg
sbb
rolb
sbb
outsl
mov
test
insl
inc
stos
dec
gs
push
mov
lcall
inc
ljmp
adc
adc
shrl
lahf
push
jne
scas
jmp
sbb
mov
pop
fsubrl
xor
sbb
jno
daa
jle
jg
or
xor
mov
mov
aaa
lods
jge
sarb
addr16
and
lock
addb
add
pop
push
lods
out
loopne
pop
lea
sbb
roll
mov
and
push
in
cwtl
inc
aaa
icebp
addb
and
sahf
jmp
mov
jo
rorl
xlat
shll
mov
sbb
ss
mov
int3
in
pop
sbb
jno
jp
push
outsl
cmp
mov
call
mov
in
je
mov
fcompl
or
sub
lods
sahf
cmpsb
dec
es
je
jle
dec
ret
repnz
add
imul
sbb
add
push
ds
cwtl
sub
ljmp
dec
scas
test
enter
iret
jns
rol
mov
int
rcr
into
push
lcall
gs
xor
inc
insb
sub
xchg
inc
push
cmpsb
push
cmp
sub
inc
repnz
xor
add
adc
or
fmul
jb
adc
mov
xchg
push
push
jmp
inc
scas
stos
daa
jo
popf
jmp
jecxz
pop
or
jge
fsub
adc
and
andb
inc
out
mov
repz
outsb
push
enter
daa
into
movsl
inc
push
clc
xor
enter
aam
notb
pop
fsubs
inc
adc
xchg
mov
lock
cmp
ret
inc
ret
cmp
out
cmp
pusha
xchg
xor
xor
xlat
mov
mov
pop
push
cmpsl
fistpll
sub
pop
adc
aaa
loop
sub
jne
loope
and
imul
popf
dec
test
out
ja
sbb
fsubl
push
test
lods
pop
jge
ret
pusha
add
iret
adc
xchg
dec
mov
push
inc
out
mov
setp
in
pop
xor
test
rorb
push
pushf
and
sbb
inc
lods
rcrb
ss
sub
out
ret
push
xor
movups
insl
cli
jmp
les
push
loopne
push
sbb
popa
ja
adc
cmp
iret
add
lods
and
repz
inc
and
adc
outsl
mov
xchg
and
test
in
cli
mov
stos
mov
out
and
notl
or
jno
push
ljmp
cld
inc
adc
cmp
loope
adc
lret
add
jnp
pop
pop
mov
mov
mov
xor
lds
outsb
mov
mov
subb
mov
pop
jnp
jno
cwtl
and
leave
mov
stc
ret
add
or
neg
hlt
adc
ret
das
int
adc
out
cwtl
xchg
mov
dec
gs
out
jne
push
gs
add
gs
imul
fucomip
adc
or
scas
data16
pop
cmp
jne
dec
mov
fs
lods
test
jmp
nop
nop
adc
pop
outsb
lods
xor
inc
lods
jl
cmpb
arpl
push
mov
mov
addr16
cmp
bsr
sub
jo
pop
outsb
popa
xchg
jne
cmp
and
popa
push
push
push
enter
movsb
test
push
enter
hlt
lock
insb
pusha
int3
mov
mov
aas
iret
lock
add
xchg
push
lahf
push
pusha
lea
scas
dec
xchg
into
jne
and
sbb
out
cmp
push
jbe
out
sub
jns
stc
xchg
dec
fxrstor
xor
mov
cld
into
xlat
and
and
sub
adc
es
out
jns
jmp
or
mov
jnp
cmp
inc
into
pushl
or
jae
inc
cli
imul
decl
cmp
pop
andb
mov
ljmp
fstps
pop
sbb
addr16
cmpsl
push
outsl
inc
movsl
add
xchg
push
jecxz
mov
add
mov
dec
cmp
stos
sub
loop
or
movsb
lock
aaa
test
inc
and
and
mov
cs
sbb
movsl
jmp
insl
xor
push
out
call
mov
mov
hlt
sbb
and
lret
jbe
call
cmp
outsl
movsb
add
lret
repnz
in
xchg
lahf
test
xchg
jl
leave
pop
push
adc
fcmovnbe
mov
stos
repnz
fadd
cmp
cmc
sbb
cmpl
jae
push
jne
cwtl
add
xchg
mov
movsl
int
test
int3
push
ret
rorb
xor
or
ljmp
into
shll
mov
daa
out
pop
xchg
push
jl
mov
jl
out
repz
cs
aad
adc
out
lret
dec
jg
mov
in
jg
incl
push
jno
cmp
fnstenv
xchg
add
dec
stos
loope
ret
out
mov
push
or
and
mov
icebp
or
mov
jb
shll
js
int
inc
inc
cmp
cli
add
addl
sbb
rol
add
nop
mov
dec
inc
in
std
shlb
inc
test
fsubrl
cli
xor
push
mov
jns
push
jns
inc
xlat
in
cmp
xor
push
add
dec
pop
add
arpl
mov
arpl
and
shll
add
push
mov
push
inc
mov
adc
mov
mov
jecxz
popa
sub
mov
sarb
adc
sbb
ja
xlat
xor
cmp
jmp
nop
jmp
dec
mov
pop
dec
mov
adc
jnp
test
lds
push
mov
cmp
cmp
mov
cs
fcom
ja
fbld
xor
loopne
fbstp
aas
add
add
dec
and
dec
sub
mov
push
es
loop
int3
mov
and
aam
mov
ljmp
outsl
xor
mov
and
xorl
movb
sub
jge
stc
in
in
loop
loopne
iret
pop
sbb
pop
xchg
data16
pusha
leave
loop
xor
pop
sbb
mov
call
out
ljmp
sahf
mov
inc
outsb
ds
adc
xor
ret
jle
int3
xchg
sti
xchg
sub
xchg
int
imul
lcall
jmp
mov
into
fistpl
shl
shll
add
nop
cld
sbb
sbb
adc
std
mov
loop
in
jg
pop
inc
add
and
fcoms
aaa
mov
lea
mov
jmp
and
dec
mov
sbb
cmp
aaa
mov
adc
stos
pop
xchg
popf
je
sbb
xchg
imul
icebp
pop
xor
ds
fstpl
aas
lret
scas
testb
mov
cmp
mov
or
in
imul
xchg
es
popf
jbe
fistpll
mov
lcall
leave
lcall
cltd
enter
jp
mov
mov
repz
rclb
add
jmp
test
inc
inc
cmp
lea
cmp
fistpll
in
dec
mov
iret
cmp
xlat
mov
xor
jg
leave
stos
iret
or
out
das
daa
mov
cmp
jno
pop
xlat
jg
out
bound
add
hlt
ja
popa
ficomps
fimuls
pop
notl
xor
sbb
leave
shrb
popf
mov
fcompl
mov
xlat
into
inc
sub
jbe
cmp
dec
in
sub
sub
or
jp
xchg
inc
or
stc
pop
test
aad
push
sbb
and
xorb
mov
int
cli
push
push
cmp
mov
and
sahf
icebp
cs
inc
repz
mov
adcl
and
and
pop
xchg
lahf
stc
jge
iret
lods
push
pop
pushf
mov
jb
dec
fcompp
xor
mov
shlb
imul
xchg
xor
ret
sub
movsl
data16
jp
daa
xorl
stos
cmp
psubb
mov
inc
cli
dec
xor
inc
shll
je
lret
cmp
ljmp
fdivr
mov
or
cmp
jo
shll
aam
push
adcl
adc
js
mov
daa
mov
dec
arpl
pop
sbb
jno
enter
mov
cmp
mov
push
test
sub
push
out
shlb
aad
pop
mov
mov
adc
add
fs
add
sub
daa
push
into
bound
mov
mov
popf
jo
lea
int3
cld
jns
mov
pop
enter
mov
lcall
in
push
inc
jmp
jno
or
sbb
or
inc
test
bound
inc
xlat
mov
mov
add
dec
push
cmc
mov
inc
outsl
add
push
or
xchg
dec
incb
gs
adc
lea
sub
xchg
fnstcw
mov
mov
xchg
mov
inc
jnp
enter
insl
adc
je
and
jo
out
dec
daa
push
xchg
bound
in
aam
adc
push
xchg
mov
jae
div
jecxz
loop
and
mov
jne
pop
sbb
push
roll
iret
pop
xor
mov
add
int
popf
pop
add
cwtl
xchg
inc
mov
in
jns
pop
sub
aas
fistpl
js
arpl
repz
pop
push
jl
scas
insb
pcmpgtw
clc
pop
inc
xchg
push
xchg
mov
inc
sti
out
dec
cwtl
out
inc
mov
jo
fidivl
sub
out
rolb
pop
inc
inc
mov
xchg
sbb
lods
sub
xchg
cmpsl
outsb
pop
fisttps
mov
fcoml
mov
sbb
cmc
clc
fcomps
ds
cld
out
repz
jg
push
jl
mov
jb
insl
scas
in
inc
movsb
outsl
cmpsl
pop
sti
xchg
inc
jmp
popa
in
sub
lock
data16
mov
jns
or
cmp
movsl
cmp
out
xor
dec
ja
test
mov
xchg
inc
std
loope
mov
xchg
add
subl
jecxz
pusha
ficompl
mov
fdivl
cmp
add
fadds
stos
jb
in
xor
pop
sbb
xor
andb
dec
in
mov
mov
insb
std
mov
lahf
int
movb
inc
insl
or
mov
stc
and
xchg
inc
add
mov
add
and
mov
mov
out
lcall
mov
cmpsb
movsb
mov
loope
mov
shrb
in
lods
mov
pop
ljmp
shrb
push
das
cmp
stos
lock
push
pop
inc
cmp
idiv
stc
sub
push
cwtl
sub
sub
jnp
pusha
cwtl
rcrb
fsub
cmp
inc
mov
aaa
mov
nop
pop
dec
lret
add
dec
imul
sub
sbbl
push
test
data16
add
lahf
clc
push
cmpl
fcoml
cmp
outsl
push
pop
xor
into
cmp
or
shl
pop
fimull
mov
insb
pop
mov
sbb
sub
aas
or
inc
cli
jbe
test
sbb
cltd
pop
inc
dec
pop
pop
jle
xor
mov
out
fldenv
pop
es
add
insb
icebp
lret
stc
mov
ficoml
or
aaa
lds
gs
push
fdivr
psubsb
add
adc
sub
push
mov
pushl
sub
mov
mov
jb
jecxz
cmp
addl
ja
dec
scas
pop
jne
cmp
scas
cmp
popa
insl
js
mov
faddl
inc
sub
sub
jns
pop
stos
jo
sbb
clc
mov
das
std
cli
repz
aas
inc
ljmp
push
arpl
push
pop
pop
push
aaa
testl
cmp
inc
test
jecxz
jl
sti
std
mov
aaa
pop
push
lea
movl
mov
and
dec
jmp
sub
pop
cmc
push
lds
test
xor
outsb
push
inc
or
jmp
bsf
lret
adc
push
sarl
jle
add
shl
imul
sub
cwtl
jle
xor
push
push
cmp
dec
xchg
sbb
push
shrb
mov
push
fidivs
stos
or
adc
and
dec
or
mov
outsl
mov
xchg
fsubrs
or
std
jle
push
dec
aam
daa
sbb
sbb
sub
xadd
add
adc
sbb
add
out
jge
call
imul
sti
mov
lods
sbb
add
mov
inc
inc
mul
xchg
pop
xor
push
shlb
mov
scas
shrb
inc
mov
fadds
gs
push
into
sbb
repz
pop
rol
xor
cmpsl
mov
push
jbe
mov
and
xchg
cmp
xchg
std
aam
xchg
sub
adc
sub
push
pop
fsubrl
les
pop
mov
rcr
pop
mov
and
shl
lock
sbb
ret
xchg
nop
in
aam
dec
cli
subb
inc
and
sbb
push
jnp
sub
aad
pop
dec
xchg
mov
or
mov
jno
mov
gs
xchg
shl
pop
mov
imul
or
mov
adc
test
fs
pop
pushf
dec
sbb
push
loope
add
imul
pop
inc
mov
adc
xor
and
into
cmp
mov
leave
stc
cmp
push
js
out
sub
add
push
movsb
popf
push
mov
cmp
or
orl
into
push
jl
add
pop
xor
aas
dec
fmuls
pop
sbb
int3
mov
jg
push
xorb
aas
cmp
sub
in
mov
and
xor
pop
fstl
push
imul
lock
in
dec
aaa
je
js
scas
fisttpll
cli
in
inc
and
lods
lcall
dec
das
les
pop
add
mov
push
pop
cmp
inc
imul
fstps
out
addr16
adc
xchg
dec
adc
jne
ljmp
dec
jp
cmpsb
popf
lods
add
addr16
and
int3
mov
push
ffree
jb
ret
les
nop
jle
mov
js
sahf
jmp
incb
in
mov
add
cmp
jmp
adc
add
shrl
pusha
mov
popa
je
xchg
cmpsl
adc
hlt
inc
popf
lcall
shll
mov
and
push
mov
cmp
fldz
and
cmp
push
push
in
or
nop
jg
xor
jb
popf
cmp
rolb
xor
fs
stos
lret
cmp
in
xchg
pop
inc
pop
or
mov
sbb
ret
aad
sub
ret
sbb
jmp
add
jns
xor
cmp
sbb
sbb
cmp
push
push
cmpsb
mov
insb
das
jb
ds
lds
icebp
movsb
xlat
cmp
push
or
mov
push
stos
ds
dec
into
mov
or
xchg
dec
and
mov
dec
dec
mov
jns
mov
aad
js
push
add
and
in
fiadds
shlb
call
out
scas
out
push
movsb
loopne
lret
fisttpl
movsl
jle
test
pop
cmpsb
sbb
pusha
lock
cmpsl
leave
pop
mov
sub
mov
outsb
push
mov
pop
iret
and
sub
adc
and
sub
pop
mov
sub
addr16
sar
adc
ss
add
aas
in
cmpsl
stc
jo
jle
imul
sbb
xor
pop
aaa
test
imul
into
sub
add
inc
or
fdivp
loopne
stos
xchg
adc
ret
dec
adcl
add
push
or
cmc
dec
lcall
idivb
adc
int
ret
cmp
hlt
lret
ja
in
adc
ss
mov
fs
es
cmp
dec
fbstp
adc
jne
imul
push
cld
jnp
and
mov
shlb
movsl
and
dec
bound
xlat
rcll
push
popf
push
xchg
idivb
xchg
dec
ss
and
jmp
fwait
cmp
scas
mov
dec
sti
push
rcll
pop
adc
sbb
inc
mov
test
pop
push
and
fstl
leave
mov
cmp
mov
clc
inc
cmpsl
dec
lcall
fsubrs
jge
lds
or
subb
pop
shlb
dec
inc
sub
leave
pusha
add
mov
nop
addr16
movsl
mov
and
mov
jl
out
fs
lahf
shll
and
fstl
imull
mov
push
ret
add
push
gs
test
mov
imul
out
loopne
jmp
mov
lds
xchg
icebp
outsl
in
fbld
out
sbb
mov
outsb
and
js
pop
mov
push
idivl
dec
cmp
push
lods
in
vpackuswb
stos
inc
and
iret
dec
jae
subl
cmp
jge
loop
cld
pop
mov
mov
sub
mov
bound
ds
dec
xchg
jge
sub
std
imul
mov
insl
std
gs
cltd
in
jbe
insb
fnstenv
test
fdivrs
xchg
fisttps
inc
lods
test
push
js
push
cs
add
jne
mov
fldl
fstl
jmp
pop
inc
add
mov
popl
notb
mov
jns
hlt
nop
adc
sbb
xchg
cli
decb
das
in
sub
xchg
cmpsb
lds
leave
loop
ds
in
cmp
stc
jp
mov
xchg
xor
push
bound
enter
sub
xor
dec
sbb
fwait
out
ja
cld
lahf
dec
xchg
push
mov
push
and
rcrb
adc
cld
shll
jmp
jno
push
cmp
mov
iret
push
sub
cmc
testb
test
cmpsb
add
shl
mov
pop
dec
sahf
lea
or
mov
ljmp
push
pop
ficoml
test
hlt
cmp
std
cltd
sub
add
mov
xor
mov
nop
push
push
pushf
shrl
daa
ja
sbb
loope
ret
mov
mov
clc
pusha
fdivrp
fs
pop
mov
stos
pop
sub
fmuls
mov
and
push
mov
add
jns
shll
cs
cmpsb
leave
push
insl
shlb
mov
xor
bound
loope
cvtps2pi
mov
dec
sub
loope
in
push
mov
pop
push
mov
jns
pop
mov
adc
inc
out
xchg
shll
inc
imul
jbe
pusha
pop
leave
notl
xchg
sub
das
outsb
sub
mov
iret
adc
cmp
rclb
cmp
cmp
out
test
repnz
xchg
adc
xorb
ficomps
dec
add
pop
sbb
push
in
adc
jb
sub
imul
daa
imul
jg
inc
cli
add
lods
pop
xchg
cmp
sub
rclb
jne
jl
jl
popa
js
pop
lods
sub
jmp
inc
add
test
enter
clc
decl
or
fs
dec
loope
xchg
aad
daa
mov
insb
dec
mov
movsb
stos
sbb
pushf
hlt
or
inc
mov
adc
add
stc
ss
mov
test
push
cmp
mov
and
mov
into
pop
lods
dec
stos
fnstenv
add
mov
sbb
out
mov
es
jl
jnp
sbb
adc
fs
dec
arpl
xchg
sub
pop
jle
incl
jnp
inc
sub
xor
imul
fsubs
push
fmull
jle
jnp
sub
cmp
jmp
fstl
xchg
jne
cmp
aas
inc
pop
mov
adc
int
cmpsl
arpl
xor
adc
push
push
sbb
popa
push
ds
stos
arpl
cmp
fistps
cmc
std
outsb
xchg
or
icebp
rol
push
push
xchg
aaa
jne
imul
fs
enter
jl
sbb
dec
mov
mov
les
push
xor
sahf
shlb
pop
lcall
into
pop
sbb
pop
rcrb
fcompl
fimuls
or
jecxz
fisubrs
enter
sbb
mov
xchg
test
pop
out
popl
imul
push
mov
mov
dec
dec
mov
fsts
hlt
lcall
inc
pop
bound
xorb
jmp
fimuls
cmpsl
loopne
cmc
and
xchg
icebp
sub
lds
inc
jmp
dec
shll
in
jecxz
lahf
jae
hlt
mov
lret
fucomp
mov
and
jg
js
ret
mov
or
jl
sar
fsubs
jmp
dec
rclb
fcompl
mov
imul
stos
sbb
aam
stos
dec
sahf
cmp
cld
out
das
mov
cmp
arpl
gs
in
push
std
fisubl
popa
cli
mov
and
aam
jne
rorb
outsb
mov
ds
mov
jmp
pushf
rol
add
add
frstor
xchg
pop
xchg
pop
xor
and
jmp
and
pop
and
pop
push
and
dec
dec
xor
push
and
push
mov
or
inc
xchg
out
leave
mov
sbb
arpl
arpl
rcrb
scas
xchg
mov
or
les
adc
sub
cmc
and
xor
xchg
jl
mov
mov
fidivs
stos
cmc
sbb
xor
xor
cmp
dec
mov
push
ret
sti
lcall
cmpsb
ds
inc
incl
inc
sbb
adc
push
movsl
sub
je
adc
jno
rcl
aaa
jl
ljmp
js
cmpsl
dec
jno
adc
cmpsb
test
in
mov
fs
call
xchg
test
xor
xor
repnz
mov
out
pop
addb
xorb
lahf
repnz
push
out
loop
lea
lock
insl
out
popf
push
je
jmp
sahf
pop
push
lods
gs
fistl
sub
jecxz
push
cmp
inc
adc
mov
lock
xor
xor
into
loope
xchg
pushf
sbb
cmp
les
je
jl
pusha
mov
add
fstps
lds
jge,pt
lcall
and
sub
jno
xor
fbld
stc
test
push
addr16
mov
push
faddl
fiaddl
inc
ret
push
into
xchg
aam
push
leave
push
sbb
cmp
orl
inc
mov
rclb
inc
jle
aad
imul
and
adc
in
aam
jp
sbb
cmc
adc
mov
sbb
fcmovu
dec
loope
nop
in
in
pop
mov
lods
jbe
fsubrl
in
xchg
aam
clc
mov
dec
dec
popf
adcl
cld
pop
fdivrl
cli
pop
mov
sub
shrb
les
dec
loopne
mov
repnz
inc
mov
shrb
push
xchg
push
scas
cltd
add
mov
sub
mov
mov
jno
leave
das
iret
std
test
divl
test
in
mov
push
cld
cld
std
or
popa
xor
incl
pushl
add
mov
popf
rcl
xchg
gs
movsl
insb
cmp
pop
mov
dec
bound
dec
mov
push
xor
mov
adc
inc
stc
repz
mov
mov
jns
call
sub
push
jno
test
mov
aam
out
in
in
cmc
fiaddl
and
pop
or
dec
aas
fbstp
movsl
rol
sbb
movsb
lock
xor
pop
dec
dec
lret
nop
mov
and
in
jmp
xlat
adc
and
inc
adc
or
xchg
cmc
pop
leave
fiadds
push
loopne
jne
fiadds
test
cmp
jae
clc
imul
xor
mov
add
cwtl
in
jo
nop
mov
lcall
mov
add
pop
xchg
out
cmp
jmp
or
pop
imul
pushf
pushf
stc
and
popf
dec
iret
jecxz
sbb
push
pop
pop
aad
inc
pop
push
jle
movsl
and
lds
lahf
test
inc
mov
outsb
or
mov
cmc
xchg
jl
adc
xchg
push
test
testb
aad
insl
push
shrl
dec
inc
movsb
stos
xorl
into
cmovl
and
test
add
je
dec
or
lret
idivl
test
jnp
ja
data16
xor
sbb
pop
pop
mov
pop
sbbb
push
out
or
jae
test
sbb
hlt
pop
and
mov
dec
cltd
loopne
outsl
sub
pop
test
addb
das
pop
mov
cs
in
pop
mov
dec
fdivrs
icebp
mov
sub
dec
sbb
dec
cmp
xlat
fsubs
adc
fwait
xlat
insl
rorb
dec
mov
insl
xor
adc
mov
or
and
mov
ljmp
cmpsl
scas
pop
xchg
jo
stc
pop
mov
sbb
iret
or
or
mov
sub
mov
in
mov
push
xchg
fwait
in
inc
pushf
icebp
dec
out
pop
pop
mov
mov
push
mov
jb
inc
push
pminub
pusha
subb
stos
hlt
mov
outsb
mov
push
sub
jns
in
sti
test
inc
push
sar
iret
add
adc
mov
xor
mov
jo
adc
and
imul
dec
push
mov
xchg
pop
jecxz
sub
xor
push
add
mov
sub
scas
or
cltd
lcall
aam
shll
jne
jecxz
mov
adc
add
mov
push
icebp
jle
loop
xchg
push
insb
mov
iret
xor
aas
sbb
add
sbb
pop
xchg
push
push
push
js
rcr
addb
add
sub
hlt
or
push
je
aad
test
lea
cmpsb
mov
jge
mov
push
popl
pop
inc
add
sub
push
adc
shr
jmp
adc
mov
cs
mov
inc
outsb
cmc
xchg
xchg
call
mov
pop
pop
test
push
adc
jle
scas
movsb
mov
push
xchg
mov
add
fildl
sub
outsl
cmp
mov
push
jmp
xchg
and
or
stos
jmp
and
sahf
repz
sbb
sbb
popf
cmpsb
fmull
push
nop
inc
push
ret
out
inc
je
xchg
push
push
rol
mov
push
mov
mov
pushf
stos
push
mov
add
lods
mov
fldl
sti
xlat
mull
pop
sbb
push
fldl
add
mov
jbe
jp
pop
icebp
call
pop
call
push
jnp
lret
lods
sbb
push
and
ljmp
and
dec
sti
mov
stos
cmc
mov
mov
dec
sahf
jae
dec
lock
lcall
test
adc
mov
mov
ret
mov
aad
insl
inc
adc
popl
daa
mov
testb
cld
sub
lds
pop
mov
clc
daa
xchg
std
mov
pop
push
stos
clc
jo
dec
pop
cmp
ret
imul
cmpsl
in
mov
fsubl
js
inc
or
xor
inc
push
pop
or
mov
mov
pop
lret
push
stos
push
lods
sahf
or
pop
shl
mov
jbe
mov
test
and
and
dec
ret
in
mov
mov
movsb
int3
xchg
inc
inc
sbb
popf
xchg
xor
enter
mov
sub
nop
or
lahf
hlt
push
lods
popf
fadds
or
test
xchg
jbe
neg
xchg
je
adc
add
inc
inc
and
lea
dec
into
mov
mov
iret
add
push
pop
cmpl
insb
divl
nop
xchg
gs
stc
mov
add
fsubr
cmpsl
pop
into
sub
dec
cmc
lock
outsl
imul
addb
insb
push
and
xor
pop
in
in
aaa
sarb
push
ret
xchg
call
push
aas
ja
add
mov
mov
je
test
push
adc
adc
add
sbb
xor
push
pop
loope
add
out
fstpl
inc
andl
divb
outsb
ret
mov
stos
cli
or
pop
mov
jno
pop
sahf
test
out
data16
shll
dec
push
js
mov
loopne
dec
inc
test
fimull
into
outsl
dec
out
iret
pop
nop
pop
sub
or
out
movsl
inc
inc
jnp
cmc
lahf
in
sub
in
mov
sti
mov
push
js
incb
or
cli
ret
lretw
addr16
jo
xchg
jg
fcomps
lret
nop
inc
xorl
loope
cli
xchg
movsl
push
ja
call
jno
sub
sub
pop
fisttpl
in
test
cli
rcr
xor
jecxz
out
fistpl
add
push
adc
rol
scas
lret
aas
and
in
orl
int
sahf
and
ds
fs
aad
dec
ret
push
jae
inc
fiaddl
push
shll
rorl
mov
mov
orb
in
mov
mov
int
or
inc
xchg
std
mov
movsl
ret
cmp
fwait
jge
mov
mov
pop
mov
in
push
and
std
int3
int3
fadd
imul
jae
out
adc
mov
sarl
sub
lds
pop
jl
fsubp
orl
pushf
pop
popf
dec
sbb
sub
cmp
std
loopne
pushf
cli
mov
les
jno
aam
fcmovbe
and
xchg
lcall
int3
sub
xchg
cs
xorb
push
sbb
xchg
xchg
cwtl
pushf
cwtl
pop
adc
pop
jno
shlb
xchg
lret
pop
cmp
dec
int3
cmc
fs
aam
add
sbb
fstl
adc
and
jmp
roll
addr16
pop
dec
xlat
jns
add
repnz
nop
sarl
jl
ds
pusha
mov
mov
imul
mov
lock
jns
jb
aaa
mov
rorl
xchg
mov
mov
iret
mov
add
lahf
in
div
mov
dec
ljmp
sub
subb
loop
xchg
dec
mov
fcomi
mov
fs
pusha
out
jg
popa
push
mov
leave
cmp
in
sbb
push
push
or
add
pop
dec
fdivrl
jbe
jb
insl
ss
xchg
outsl
jbe
cmp
sarb
loop
int
xor
inc
inc
adcl
cmp
pop
dec
lahf
fsubrl
imull
dec
push
sbb
fs
jae
imul
cltd
mov
dec
pop
xchg
fstl
dec
cmpw
daa
ds
subl
into
ja
add
sbb
and
cmp
mov
or
or
ja
movsl
jg
ja
in
push
movb
and
dec
aam
popf
jno
shll
loope
add
loopne
cmp
mov
sbb
std
push
sbb
popa
inc
repnz
lret
dec
fwait
mov
mov
jge
push
and
lock
xchg
mov
xor
fcoms
sub
sbb
push
jnp
clc
les
andb
sbb
jmp
arpl
sahf
jno
cmpsl
cmp
mov
xor
sarb
ret
inc
jbe
push
jns
ljmp
lea
in
cvtps2pd
xchg
adc
inc
rcll
addr16
xchg
mov
add
test
xchg
jg
dec
repz
jle
inc
dec
test
and
movsl
jle
mov
ret
stc
lret
add
inc
sbb
aad
popa
adc
in
sbb
dec
jbe
loop
jno
repz
cmp
icebp
in
xor
mov
mov
sbb
repnz
mov
js
mov
push
jecxz
mov
int
xchg
cld
leave
sti
cmp
iret
jl
or
arpl
negl
pusha
inc
mov
cmp
xchg
mov
push
cmp
sub
xchg
js
pop
repz
dec
decl
xchg
mov
cmp
sub
xor
dec
sbb
pop
pop
loopne
aaa
mov
fldenv
mov
cmp
sahf
loope
adc
mov
aad
sbbb
out
and
outsb
jo
pop
jmp
es
in
ds
mov
add
sbb
ret
insb
push
sbb
mov
mov
and
or
out
insl
push
bound
mov
xchg
sub
mov
sbbl
out
pop
adc
or
fdivrp
inc
pusha
sub
fucomi
sub
nop
xchg
das
mov
xchg
ror
adc
xor
jge
pop
push
stos
add
jp
pop
popf
out
push
dec
imull
add
mov
jp
sbb
cmc
sub
inc
add
dec
adc
add
and
inc
mov
cmc
std
das
in
test
inc
xor
sbb
call
add
in
sub
push
jge
in
fdivrs
fs
leave
inc
lea
add
jmp
mov
sbbl
addr16
or
adc
lcall
insl
inc
cmp
je
icebp
icebp
movsl
dec
fmuls
lock
test
in
adc
lods
mov
insl
adc
hlt
mov
lods
jecxz
cmp
test
stos
das
enter
mov
in
cwtl
je
push
rcrb
dec
stos
test
and
cmp
mov
les
cmpb
les
ret
mov
push
pusha
nop
jle
or
vshufps
ljmp
lret
inc
sbb
xchg
or
push
adc
or
or
pop
lods
inc
inc
cmp
loop
jg
ja
mull
and
icebp
xchg
fwait
jecxz
jmp
rorl
jne
xor
xchg
add
jbe
nop
cmp
ret
mov
call
in
sbb
inc
movb
or
roll
add
rcrb
pop
std
dec
shlb
insl
mov
int
push
push
mov
imul
xor
cltd
stos
shrl
mov
andl
js
test
sbb
cli
inc
mov
mov
add
cmp
addr16
cmc
xchg
pop
pop
dec
call
mov
push
test
jbe
mov
inc
mov
es
pushf
adcl
xchg
jae
test
mov
sbb
lock
adc
out
out
sub
fidivrl
dec
loopne
adc
mov
imul
inc
fnstcw
lcall
xchg
shlb
je
scas
add
and
push
je
idivl
pop
es
add
mov
ds
mov
das
dec
lea
xchg
ret
and
lret
in
mov
mov
lock
mov
add
call
divl
dec
mov
mov
mov
sub
daa
jge
movd
movsb
adc
in
mov
xchg
loop
sub
mov
dec
xor
movsb
dec
sbb
in
sbb
jmp
popf
jo
dec
icebp
xchg
push
cwtl
lahf
jecxz
jmp
dec
stos
jae
fisubs
andb
sub
and
sahf
jae
rorb
fildll
jb
inc
add
ja
cwtl
js
or
dec
push
jp
sbb
popf
xchg
pop
dec
int3
inc
cmp
mov
push
push
nop
xor
and
fnstsw
cmc
xlat
add
rorl
test
imul
adc
jle,pn
cmpsl
xor
bound
gs
mov
mov
dec
insb
repz
adc
dec
add
sbb
jne
pushl
jl
fxch
xchg
sbb
xchg
imul
xor
loope
shlb
push
push
xchg
jle
nop
cmp
loopne
push
mov
add
xchg
popa
jp
sub
xchg
dec
adc
mov
lcall
xor
jne
iret
push
mov
hlt
call
scas
insl
loopne
and
cmp
popa
mov
pop
xchg
push
jl
es
or
add
xrelease
and
arpl
add
push
popa
dec
into
inc
push
ret
js
orl
leave
fnstsw
mov
test
ja
mov
pop
mov
lss
addl
xlat
mov
mov
test
dec
dec
dec
mov
lea
popf
fiadds
js
test
in
xor
cld
xchg
popa
fwait
pop
pop
sbb
mov
jl
in
xchg
sbb
and
je
lret
add
cmp
arpl
sub
push
sub
xor
mov
movsl
sbb
xor
mov
outsl
call
les
out
push
jl
add
xor
adc
sub
ret
daa
imul
push
shll
fsts
sbb
fildl
test
ljmp
and
adc
insb
adc
or
ds
mov
dec
dec
lret
jecxz
movsl
push
loopne
repz
cltd
lret
aad
pop
int3
adc
test
sub
pop
push
cmovl
into
xlat
loop
jno
out
fnsetpm(287
xor
nop
xchg
inc
sub
sub
mov
fimuls
addr16
fstpl
js
sahf
and
ret
adc
cmc
repz
cli
adc
je
mov
movsb
dec
arpl
fs
repz
pop
shll
jle
pusha
aam
fsubrl
addr16
push
cld
mov
xchg
pusha
cmp
cmp
xchg
test
lret
mov
add
ss
or
aas
aaa
cmpsb
push
or
std
leave
jle
icebp
or
inc
scas
cld
push
add
cmp
ljmp
loope
fstpt
outsl
insb
mov
jmp
outsl
mov
add
and
fldt
sbb
jl,pt
out
test
cmp
push
loopne
gs
sub
fimuls
xchg
push
lds
jno
or
jg
sbb
ds
test
pushf
dec
shlb
adc
fisubrl
in
mov
pop
and
push
mov
lcall
dec
push
inc
je
imulb
mov
jg
xor
xchg
push
pop
mov
stc
jecxz
lcall
fadds
ljmp
incb
cwtl
cld
xchg
sub
in
fstpl
ret
mov
cltd
jo
insl
enter
or
xlat
shll
jge
push
pop
pop
add
movsb
outsb
xlat
fidivrl
mov
mov
test
fldenv
mov
pusha
xor
sbb
popl
cmp
push
jecxz
iret
push
mov
rol
addr16
cmpsl
pop
jns
mov
xchg
mov
aas
nop
fcmovb
jge
out
cmp
mov
adc
sub
and
and
imul
lret
pop
lock
sbb
lods
or
ret
sub
popaw
je
lods
jl
cmp
mov
add
shlb
push
loop
adc
dec
dec
inc
outsb
sbb
jb
rcll
jg
jle
sub
inc
pop
arpl
mov
shlb
inc
fwait
fwait
xchg
and
icebp
cmp
jge
das
sbb
dec
subb
xchg
mov
popl
add
mov
ret
mov
cmp
push
out
sub
or
jecxz
push
repnz
loope
nop
fdivr
lock
inc
lcall
mov
jl
cmpsl
or
jecxz
out
je
dec
inc
cmp
cmpb
mov
cmp
cli
ret
fimuls
xchg
cmpsb
sbb
push
dec
adc
or
aaa
inc
mov
cs
pop
push
mov
sbbb
insb
push
bound
cmpsb
pop
roll
and
test
cmc
xor
jnp
lret
das
iret
in
lret
add
jb
mov
jbe
sahf
scas
push
pushf
xchg
mov
push
xor
add
es
pop
pop
dec
ret
lahf
pop
xchg
negl
aas
xchg
push
loop
cmp
inc
int3
mov
jb
cmp
adc
out
roll
cli
flds
push
pop
pop
inc
fwait
mov
lret
std
and
aaa
adc
and
lea
call
sub
add
xor
call
mov
jecxz
pop
lret
bound
sbbl
cmp
addr16
mov
sub
rol
sub
aas
pop
stos
cmp
cmovnp
cmpsb
out
sub
inc
pop
xchg
inc
sub
shll
hlt
enter
cmp
jbe
mov
xchg
jb
sub
and
cmp
jg
jle
mov
push
nop
jecxz
mov
in
inc
jmp
pop
ljmp
lea
in
inc
mov
inc
cmp
int
sbb
jge
lods
enter
xor
outsb
cltd
cmpsb
inc
fwait
xchg
aad
mov
and
pushl
pop
add
add
les
add
sub
xlat
pop
jo
or
dec
mov
ficoms
into
pushf
jns
sarb
xchg
nop
sbb
adc
xor
mov
lret
shlb
cmp
mov
out
in
pop
dec
adc
pop
lods
call
rorl
pop
push
int3
push
dec
or
mov
jo
rcrb
cmp
rolb
push
or
lcall
cmp
dec
jo
xchg
repnz
jae
imul
ss
lock
scas
cmp
inc
test
cmp
in
adc
jns
push
pop
mov
out
sahf
xor
lahf
lds
das
push
inc
out
mov
clc
xor
pop
xchg
cltd
cmc
add
pusha
bound
jge
mov
bound
loop
inc
das
iret
icebp
jmp
lock
out
pminsw
inc
and
mov
xor
cmpsl
mov
flds
jae
aad
push
mov
adc
outsl
dec
imul
lret
mov
pusha
add
inc
loope
sub
xchg
mov
pop
imul
jg
pushf
pop
jmp
add
in
pop
pop
mov
push
inc
or
setne
sarb
repz
sbb
sub
pop
push
arpl
xlat
jbe
or
mov
loop
mov
mov
stc
jle
sub
ljmp
fcom
out
arpl
inc
inc
dec
adc
aaa
mov
cmp
mov
xor
inc
inc
and
xchg
dec
std
adc
ret
xor
daa
pop
sub
jmp
jecxz
leave
neg
xchg
xor
dec
fsts
out
cmpsl
negl
call
lds
outsl
jb
iret
arpl
add
insb
mov
sbb
sub
mov
mov
dec
popa
rcl
leave
adc
lds
push
pusha
mov
jmp
dec
xlat
dec
add
xor
stos
xor
mov
ret
mov
jl
sbbb
lods
fistl
repnz
and
mov
stos
push
jecxz
pusha
outsl
xchg
loop
dec
movsb
ja
stos
jle
xchg
fadds
int
add
dec
fstpl
stos
sub
push
pop
mov
bswap
aad
mov
mov
mov
mov
sbbl
mov
sar
jne
sub
les
imul
dec
pop
mov
sbb
cli
cmp
jg
fsubl
bound
ret
dec
aaa
subb
inc
inc
sub
outsb
mov
out
and
inc
mov
cmc
jb
mov
add
sbb
sti
mov
mov
jmp
xchg
ja
in
or
in
dec
sti
imul
xchg
sbb
pop
subl
fwait
mov
out
stc
dec
aas
pop
pop
pop
rolb
nop
jae
mov
cwtl
iret
aam
sbb
out
and
mulb
leave
test
and
mov
scas
mov
test
mov
adc
or
cs
pop
cs
xor
cld
aaa
out
adc
mov
test
push
mov
mov
sti
bound
insl
pop
xchg
mov
nop
outsl
dec
in
outsl
lods
lds
xchg
jp
cld
mov
inc
lret
mov
lcall
pop
mov
aad
in
cmp
popa
in
pop
push
iret
fmul
imul
pop
stos
std
test
insb
ret
fnsave
fnstcw
pusha
cmp
adc
xor
add
push
lods
mov
pop
imul
inc
push
data16
pop
mov
mov
and
aad
pusha
frstor
sub
inc
stc
std
shll
dec
adc
mov
dec
inc
nop
insb
push
mul
pusha
sahf
jae
sbb
add
mov
pushl
jno
aam
mov
sub
scas
nop
cs
jmp
loope
clc
popa
aam
xor
sbb
jmp
leave
lret
lds
jmp
inc
loop
jo
push
push
sub
mov
xchg
mov
icebp
push
sbb
gs
fdivp
js
inc
stc
das
data16
and
push
sbb
or
pop
into
mov
ret
xchg
add
in
fstpl
sahf
dec
sbb
or
xlat
mov
and
cmp
popa
cmc
sub
and
cmp
subl
add
sbb
lock
xchg
repnz
xchg
add
push
ss
adc
mov
xchg
cmp
mov
mov
test
dec
lods
inc
out
sbb
inc
sbb
outsb
lods
or
jg
mov
shll
xchg
jmp
jle
xchg
pop
cmp
mov
lcall
cmpsb
test
dec
sbb
jmp
test
pop
popa
mov
cmp
cmp
loope
out
push
loopne
add
xchg
push
ficompl
or
xchg
push
testl
jnp
or
inc
clc
fs
insb
adc
add
cmpsb
cmp
xadd
jge
sub
fisttpll
jnp
cmp
scas
into
in
pop
gs
add
mov
jb
aas
xor
test
sub
add
fcmovb
in
and
sti
sets
dec
ja
out
and
sub
xlat
mov
cmp
mov
xchg
clc
push
lds
lea
call
sti
stos
push
pop
xor
sub
mov
or
insl
push
lds
mov
data16
mov
push
std
fdivrl
rcll
cmc
push
pop
sbb
push
jne
lahf
cmp
bound
lods
orb
ret
cmp
test
or
xor
mov
leave
sub
hlt
dec
sbb
jl
inc
inc
in
lods
in
xchg
in
and
mov
fnsave
mov
sti
jg
sub
insl
inc
sub
jge
repnz
push
dec
stos
cmp
adc
add
push
bndstx
xchg
sarl
and
daa
insl
adc
sub
test
adcb
inc
in
pop
mov
shlb
add
lret
ret
push
repz
mov
inc
lock
mov
fildll
inc
gs
sbb
xor
and
sarl
cltd
dec
mov
jg
notb
or
testl
push
les
adc
aas
fldt
sahf
jb
ljmp
xchg
into
dec
mov
mov
aad
jmp
enter
roll
cli
xor
xchg
adc
add
inc
inc
jp
scas
mov
shlb
ja
out
in
movsl
in
push
sbb
test
mov
hlt
dec
jmp
inc
jb
lcall
dec
push
push
push
pop
aas
mov
add
std
out
iret
jo
aad
loop
sub
add
lcall
push
bound
rolb
fisubrs
jnp
sub
andb
lahf
dec
fidivl
mov
daa
adc
dec
movsl
rcl
leave
dec
pop
scas
cli
add
xlat
jbe
lcall
xchg
ljmp
stos
inc
and
xchg
cmp
pop
test
add
mov
adc
scas
push
jbe
in
sub
fs
mov
adc
int3
sbb
rcl
xchg
in
pushf
xchg
fwait
loop
or
push
push
loop
call
scas
fs
mov
pop
adc
xor
ficoml
std
xchg
push
push
add
loope
aaa
in
std
es
dec
mov
std
ret
outsl
and
insb
inc
xor
mov
out
mov
aaa
push
xor
xchg
sahf
stos
sbb
movsb
leave
ja
push
mov
push
ret
jl
movsl
insb
jb
test
xchg
inc
cmp
je
xor
add
in
jge
xorl
mov
mov
sub
lret
aaa
lahf
repz
mov
jl
inc
adc
cmp
pop
pop
mov
xchg
idivb
jns
sub
or
loop
fisttpl
in
inc
mov
idivb
pop
cli
aas
testl
push
mov
push
cmc
add
pop
ja
js
gs
cmp
lea
fidivs
sub
mov
fldenv
push
mov
push
cltd
cmp
add
cmp
sarb
cmc
fstl
mov
adc
pop
push
ds
enter
fbstp
pushl
push
cmp
pop
jmp
mov
xor
jne
pop
imul
arpl
xor
mov
add
lret
shrb
sti
shr
das
ds
push
add
sbb
scas
mov
lods
rorl
ret
lret
loopne
mov
in
es
iret
xchg
mov
push
ds
les
imul
out
mov
fiadds
or
lret
into
or
loop
inc
cmp
lret
imul
fnstcw
sub
fst
add
cmpsb
ret
test
add
iret
sub
or
adc
cwtl
pop
popa
enter
lret
ja
xchg
js
scas
movsb
xor
enter
mov
sbb
pop
sti
sub
xor
dec
mov
sub
icebp
iret
inc
pop
loopne
pop
xor
lods
push
pop
mov
xchg
jmp
jo
dec
in
fcmovnbe
fadd
cmpb
fnstsw
push
adc
sti
cmp
popf
or
mov
or
mov
or
mov
xchg
inc
lahf
bound
ret
ret
sub
inc
jno
dec
jl
pop
gs
mov
dec
popf
imul
ja
cmp
push
call
test
xor
xchg
mov
cwtl
pop
sar
inc
jb
dec
dec
mov
inc
cmp
jb
ror
inc
lret
adc
add
add
in
inc
cmp
pop
and
repnz
push
scas
jl
mov
sub
movsb
or
ljmp
insl
in
daa
cmpsl
mov
add
je
lods
mov
adc
mov
shl
mov
push
push
lods
xchg
cmp
lcall
fs
mov
std
jl
divl
frstor
xor
sub
lods
rol
mov
stos
insb
pop
sbbl
ficoms
fisubl
pop
fildll
or
adc
pop
sahf
mov
into
mov
xor
dec
xchg
mov
cmp
push
insl
xchg
xor
stc
sbb
xchg
jmp
lret
in
lahf
mov
js
dec
in
xor
in
int
and
mov
lods
sbb
cmpsb
jmp
mov
insl
popl
js
into
movsl
daa
inc
gs
xlat
and
js
psraw
movsb
testb
push
xlat
pusha
out
sub
xor
mov
jae
pusha
inc
sub
daa
movsb
mov
mov
les
inc
or
or
jns
dec
adc
push
xchg
stos
push
cmp
bound
mov
leave
inc
rorl
repnz
cmpsb
or
mov
in
cmpsl
jae
cmp
pop
inc
popf
adc
pop
mov
cmp
mov
pop
xchg
inc
fnstcw
ficomps
xchg
push
add
xor
js
les
add
dec
push
cs
mov
dec
addb
xor
add
popa
mov
popf
dec
inc
push
ss
inc
dec
inc
in
adc
pop
addr16
xor
cli
daa
lret
inc
xchg
in
or
mov
push
dec
or
pop
pop
push
fcomip
xor
mov
loope
mov
mov
or
subb
xor
out
enter
call
loop
xchg
call
sub
cmp
mov
add
add
lock
mov
or
mov
in
aas
test
dec
push
daa
cmpsb
scas
jb
sbb
mull
lret
mov
cmpsb
cmp
ljmp
inc
pop
fnstsw
dec
pusha
cmp
je
imul
arpl
aad
or
gs
setb
stc
sub
into
movsl
cmp
jl
inc
imul
cs
call
cld
xor
into
or
jp
xor
scas
cwtl
aad
adc
test
es
in
cli
inc
cltd
mov
int
mov
movsb
mov
xchg
fbld
lods
shrl
add
xlat
leave
fstps
sub
scas
jns
jle
mov
xor
mov
test
out
xor
mov
push
cmp
mov
mov
das
mov
push
push
sbb
imul
cs
in
rcl
dec
filds
popa
in
daa
orb
addr16
xor
insl
pop
ficoml
enter
cs
jnp
iret
jne
xor
jb
testl
fwait
aam
cs
stos
mov
cmp
push
mull
repnz
int
add
les
pop
test
call
mov
daa
aaa
adc
out
xor
or
xchg
addr16
les
jb
pop
andnps
out
and
xor
stos
mov
stos
jnp
push
jae
movsl
sbb
pop
add
mov
inc
cltd
pop
out
leave
add
mov
push
cltd
jge
jmp
dec
pop
xor
adc
into
adc
pop
mov
and
inc
cmpsl
fisttps
cmc
fldcw
push
call
inc
into
xchg
mov
aam
cmc
xor
jecxz
iret
in
mov
pop
mov
addr16
data16
fadds
adc
xchg
in
lcall
mov
imulb
in
popa
cmp
mov
shrl
int3
add
jle
sahf
pushf
jle
mov
enter
dec
or
test
jae
insl
int3
dec
push
mov
stc
adc
xor
mov
aas
sub
mov
inc
mov
es
xchg
roll
in
mov
mov
imul
sub
mov
insl
cmpsb
out
shrl
sbb
sti
je
rcll
dec
mov
mov
movsb
add
sub
fnsave
inc
data16
in
fiadds
lea
or
clc
mov
jl
dec
imul
inc
outsb
pop
pop
and
lea
inc
adc
jp
lret
test
movsl
and
cli
jl
fistpl
inc
jae
or
sub
or
push
movl
jno
jnp
add
inc
daa
adc
jnp
sbbb
data16
sarl
notb
xchg
jno
and
push
div
idivb
xchg
imul
sbb
add
lds
push
inc
fs
pop
out
sbb
xor
adc
mov
cmp
mov
sub
push
loopne
push
xchg
adc
jnp
adc
adc
jne
dec
or
and
dec
adc
outsl
dec
int3
sub
or
outsl
mov
cmp
push
scas
lea
jb
outsb
aaa
popa
mov
imul
or
in
aas
fldcw
in
data16
leave
inc
sti
dec
pop
cmpsl
sub
les
enter
push
mov
sbb
sbb
mov
xchg
jl
mov
in
sbb
cmpb
fcoms
add
jecxz
pop
ret
out
sbb
sub
inc
leave
lock
icebp
mov
xor
adcb
vrsqrtps
in
adc
fs
and
cltd
jmp
cltd
lods
clc
mov
fwait
lcall
test
xchg
adc
xchg
into
rcrb
clc
dec
push
rorb
add
mov
push
aas
and
cmp
or
cmp
xchg
pop
xchg
mov
in
xor
fcomi
in
dec
xor
jae
dec
jmp
and
clc
xor
movsl
mov
imul
dec
xchg
repz
sbb
or
add
sbbl
jo
shll
xchg
test
shl
pusha
inc
std
test
push
data16
push
push
inc
xchg
mov
jne
mov
pop
testl
add
jns
lds
add
xchg
pop
inc
jnp
jns
data16
ljmp
cmp
adc
int3
les
ja
push
testb
mov
arpl
and
orb
pop
outsb
hlt
dec
out
dec
test
cmpsb
jp
or
loope
jmp
xor
adc
inc
lcall
add
xchg
aas
outsb
loope
pop
jns
xchg
fs
add
ljmp
push
daa
push
mov
stc
dec
add
stc
cld
sbb
xor
lods
out
xorl
test
adc
cmp
nop
mov
pop
nop
leave
push
add
fimuls
dec
sti
int3
jbe
sub
lods
and
cs
jmp
jne
add
sarb
sbb
std
mov
in
and
fwait
pop
push
add
sub
xchg
inc
sahf
loop
push
outsl
sahf
mov
test
test
cmp
cs
dec
repnz
push
rclb
dec
repnz
lret
popa
push
aas
jb
xor
jmp
and
lods
cli
sbb
xorl
lcall
cltd
inc
mov
cmpsb
jo
xchg
xchg
ficoms
jae
jne
fs
adc
sub
mull
jg
or
clc
push
insb
scas
pop
push
int3
xlat
xor
aas
ss
outsl
dec
dec
dec
inc
pushf
jnp
mov
jnp
adcb
inc
xchg
sbb
iret
mov
inc
cs
ljmp
adc
fimuls
test
pop
cwtl
sar
push
xchg
sbb
jo
sub
pop
sub
test
call
inc
xor
int
jg
pop
aas
or
push
push
mov
pop
mov
insl
idivl
out
in
jne
xchg
pop
mov
ss
sbb
shlb
jge
xor
add
cmpsl
dec
sub
xor
pop
fs
mov
lret
sub
orl
cmc
mov
popf
sbb
cmp
mov
loopne
sahf
ss
push
inc
outsb
subb
pop
xor
inc
pop
shl
aad
dec
xor
mov
fldt
addb
outsb
adc
xchg
dec
call
jp
add
ret
das
adc
lcall
or
push
in
pop
mov
ret
or
or
inc
xor
nop
xchg
adc
inc
lock
cmc
inc
xchg
xor
xchg
mov
repnz
xchg
fistl
mov
inc
test
aas
mov
sbb
mov
lcall
push
jnp
cmpsl
out
inc
lahf
int3
cmpsl
xchg
mov
jns
mov
sahf
jne
jno
test
mov
jnp
jbe
mov
or
xor
das
js
push
call
and
dec
and
decb
ret
jno
xchg
mov
jnp
in
jnp
enter
pusha
cmp
ja
lods
pop
sub
push
stos
push
in
test
fimull
outsl
add
pusha
aaa
sub
stos
mov
cmp
lret
adc
insb
jnp
std
inc
add
pop
pop
jle
inc
pushf
cmp
test
jnp
jecxz
into
hlt
mov
cmpl
push
xchg
dec
mov
das
sarb
pushl
nop
cmc
ja
shr
xchg
mov
mov
ret
xchg
hlt
jns
test
dec
in
sbb
lods
push
andb
pop
setge
cli
std
cmp
pop
mov
dec
dec
sbb
mov
sti
xlat
les
sahf
ja
rorb
adc
adc
mov
scas
pop
fwait
imul
nop
test
icebp
push
jge
das
sbb
inc
adc
sarl
and
jmp
fildl
fwait
mov
pop
stos
pop
adc
cmc
sbb
sbb
pop
in
jb
xor
cld
shlb
push
push
in
icebp
cltd
jecxz
ret
lods
sbb
inc
sti
pop
push
in
or
aas
mov
mov
xchg
scas
cld
imul
ljmp
lahf
adc
imul
mov
clc
or
cmp
stos
pop
lock
inc
aas
js
shrl
jno
jno
xchg
les
mov
jp
sbb
xchg
and
mov
mov
ret
in
adc
cmovge
mov
gs
fadd
sahf
jo
push
mov
rolb
movlps
lahf
adc
add
mov
movsb
sti
loopne
xor
lret
test
jb
add
cmp
mov
mov
fwait
push
pop
cmp
push
jle
or
dec
jne
mov
sub
cwtl
xor
xor
out
les
jle
pop
inc
push
lcall
cmp
add
push
jl
inc
cmpsl
cmp
not
arpl
and
call
addb
dec
add
mov
mov
adc
cmp
sub
fwait
mov
sahf
add
lahf
pop
mov
push
shlb
push
mov
inc
cmp
insb
out
push
mov
sbb
jae
fsubl
daa
lods
dec
push
jecxz
mov
or
fdivrs
out
into
cmpsl
pop
xchg
sti
aas
fmull
ret
adc
iret
cmp
je
cmpsb
popf
push
js
testl
loopne
sub
pusha
jbe
inc
inc
ret
bnd
arpl
cmp
mov
dec
sarb
int
mov
pop
push
mov
lcall
test
aam
das
sub
test
pop
aad
cs
mov
mov
mov
mov
sub
jno
adc
lea
push
cmp
cld
daa
std
addr16
lret
push
sbb
mov
scas
test
mov
sbb
andl
pop
mov
xor
scas
ret
mov
mov
js
gs
sti
jge
push
jno
je
iret
jno
inc
dec
pop
sub
jmp
mov
xor
push
mov
aam
pop
xlat
test
outsb
inc
mov
push
fistl
gs
fistpl
imul
fucomp
data16
addl
in
mov
mov
fildl
icebp
loopne
mov
adc
pusha
push
mov
cmpsb
push
jnp
test
test
or
adc
insl
movsl
mov
cmpsl
mov
xchg
mov
push
outsb
mov
testl
mov
mov
in
add
pusha
mov
mov
mov
pop
mov
call
insl
in
mov
add
std
lret
stos
jne
inc
sbb
adc
sub
call
and
inc
popf
mov
outsl
sahf
in
test
out
int3
adc
ret
adc
mov
scas
cmp
jb
arpl
mov
push
test
mov
mov
and
mov
push
mov
lods
loope
sbb
jnp
mov
pop
mov
jbe
pop
add
ljmp
jo
add
in
xchg
scas
xor
insl
jnp
scas
insb
add
shll
daa
mov
push
js
mov
scas
or
dec
push
sbb
pop
sbb
and
xor
adc
jl
dec
mov
cmp
cwtl
rclb
mov
and
call
test
lock
pop
push
in
jnp
push
add
loop
xor
sub
std
mov
pop
inc
sub
or
aad
push
pop
add
add
mov
or
loopne
jge
mov
cmpsl
lock
pop
mov
icebp
xchg
negl
xchg
xor
xchg
push
insl
cmp
aas
aad
stc
xchg
fs
and
fld1
daa
sahf
jo
sub
in
cwtl
sbb
cmp
ljmp
dec
sbb
push
inc
xlat
rcll
cmp
jg
daa
push
fstps
pusha
jnp
lcall
pop
cmp
adc
cmp
xchg
icebp
dec
das
mov
xchg
ret
push
push
xor
hlt
inc
and
xchg
mov
call
es
out
cmp
clc
pushf
in
jecxz
and
outsl
iret
scas
mov
aad
rcrb
jae
sub
or
xlat
iret
xchg
test
jb
js
pop
xchg
adc
jp
mov
cltd
lock
stc
mov
popa
aaa
adc
in
push
lcall
mov
mov
mov
pop
push
xor
cli
inc
xchg
lea
fildl
sarb
testl
and
xchg
or
add
sbb
lcall
iret
movsl
mov
jns
mov
sub
adc
or
les
xor
push
pushf
bound
f2xm1
in
fbstp
inc
addr16
push
pop
push
sbb
xchg
aam
inc
dec
cmp
xchg
scas
adc
fcmovbe
in
pushw
jne
xchg
aas
add
sub
inc
lds
jne
fdivrl
out
test
xor
add
mov
dec
add
loopne
pop
repz
arpl
push
mov
fcomi
clc
decl
mov
adc
jne
xor
popa
cmc
jmp
sub
push
mov
push
iret
lret
or
inc
and
rcr
imul
xchg
push
adcl
jp
mov
cltd
shrb
enterw
dec
je
insb
scas
push
repz
or
inc
sbb
aas
push
push
dec
arpl
test
add
mov
out
adc
xchg
insb
adc
mov
push
sbb
loope
das
pop
inc
stc
movsb
shlb
pop
and
aaa
out
loope
repnz
adc
or
push
or
fadds
lcall
cmpsb
push
mov
sbb
pop
sti
cld
stos
inc
add
jns
shl
add
xchg
das
sub
mov
dec
lahf
cmp
fcmovu
andb
je
pusha
cmc
mov
dec
icebp
nop
push
pop
iret
jno
cli
jb
frstor
outsb
loopne
xor
add
andl
push
push
jno
fwait
fs
aaa
fsubrs
subl
in
mov
loope
push
ffreep
jno
bound
xor
xchg
or
push
adc
lcall
ds
sarl
push
push
cmpl
arpl
into
ret
sti
pop
push
int3
inc
lea
dec
cwtl
mov
xchg
lahf
mov
clc
or
cmp
or
sub
adc
inc
xor
push
out
sbb
adc
cmp
jb
jge
mov
or
call
or
xor
rcrb
mov
imul
jns
jne
mov
frndint
lret
int
sbb
test
in
lret
inc
lcall
cmp
enter
mov
fs
out
call
mov
sarb
and
push
in
xchg
out
cmpsb
xorl
and
std
notl
int3
push
pop
push
pop
ret
mov
sub
dec
dec
ret
add
dec
xchg
pushf
mov
lahf
sbb
test
mov
push
xchg
lock
daa
xor
int3
andb
and
rorb
mov
fldlg2
imul
push
inc
push
mov
sub
pushf
or
sarb
or
inc
aam
pop
cmp
sbb
lds
stos
add
fstpl
pushf
mov
xor
stc
addr16
push
pop
mov
adc
incl
shrl
add
mov
cmp
addr16
test
and
fcom
cmc
and
jecxz
mov
or
cld
mov
xchg
adc
sub
xor
or
jmp
sbb
sub
lods
jnp
loop
cmp
and
popa
jae
out
jb
into
movups
shrl
adc
push
sub
out
mov
or
and
jbe
add
mov
jmp
mov
inc
in
cmp
fs
sub
pop
fists
mov
test
mov
sub
dec
sbb
mov
sar
aas
push
xor
dec
loop
inc
faddl
adc
iret
ja
xor
enter
imul
sub
inc
repnz
add
inc
in
pop
popa
cmp
aas
popaw
xor
lret
out
xor
mov
in
push
fsubrp
mov
fwait
or
mov
jg
stc
inc
xchg
cmpl
fmuls
inc
mov
lret
sbb
inc
xorl
inc
and
pop
mov
nop
test
fwait
xchg
pop
mov
xchg
imul
fwait
lret
loope
gs
es
mov
div
sub
and
scas
xchg
ret
test
add
dec
loop
jo
and
ds
mov
out
cltd
xchg
adc
xchg
stc
ret
inc
adc
test
inc
pusha
loop
stc
outsl
fstpt
inc
outsb
je
addb
mov
es
shrb
rcll
sbb
stc
cmp
xor
nop
or
cltd
rcrl
ljmp
push
jo
push
int
push
dec
pop
push
hlt
ja
aam
push
pop
push
cmp
pop
sti
stos
fs
xlat
mov
or
push
mov
pop
adc
jmp
pop
testl
jne
mov
lcall
push
loope
inc
inc
int
xchg
fdivl
imul
das
mov
inc
sbb
stos
leave
dec
subl
mov
inc
fprem1
shl
xorl
jo
ds
mov
out
cmp
aaa
insb
imul
inc
clc
sbb
dec
lock
loope
inc
dec
pushf
lods
fcompl
add
aaa
or
jge
pop
push
stos
jge
clc
dec
adc
lods
sbbl
adc
adc
sbb
jl
rclb
push
mov
pop
ja
adc
inc
repz
mov
mov
jge
popa
aaa
test
movsl
add
rcr
aad
cmpsb
fchs
stos
dec
push
pop
ds
cmp
sub
sub
mov
aaa
cmp
mov
xor
jl
leave
pop
adc
sbb
jmp
outsb
jo
pushf
sbb
testb
xor
inc
jb
into
les
jae
mov
hlt
mov
lods
jbe
xorb
notl
jnp
or
loop
mov
ljmp
rorb
or
pop
mov
mov
jno
imul
jg
lretw
jne
test
das
push
sarb
out
and
arpl
pop
aad
pop
push
mov
cmp
push
cmp
push
jp
icebp
xor
stos
inc
inc
jnp
push
jmp
mov
add
pop
adc
loope
int
lds
xor
mov
push
push
jne
lret
jg
call
hlt
and
repnz
cmc
in
in
xchg
outsb
pop
cmp
dec
jae
jns
pop
jmp
data16
sbb
test
cmp
sub
jno
rcll
dec
fsubs
movsb
mov
cmp
pop
bound
cmp
in
lea
jns
faddl
jle
sahf
push
lds
xchg
lret
ret
push
add
aas
xchg
out
fmuls
data16
sahf
lds
sub
mov
nop
repz
jae
mov
or
mov
in
add
jecxz
and
jle
fdivrl
pop
ret
dec
push
js
xchg
leave
and
scas
cli
inc
push
nop
or
lock
dec
sbb
pusha
stos
jecxz
shrl
mov
sbb
add
movsb
loope
inc
out
sub
out
xor
mov
or
jo
out
mov
cli
ja
add
lods
pusha
inc
movsb
addr16
jge
outsl
scas
jg
les
adc
dec
inc
mov
insl
popf
test
push
aam
xor
adc
mov
jb
das
cmp
dec
push
lods
movsb
dec
daa
in
shlb
rolb
loop
bound
imul
and
ret
sbb
das
fcoms
push
jb
inc
decb
mov
cmp
sbb
sbb
jbe
or
lock
push
sbb
jl
out
mov
add
and
push
out
sahf
mov
mov
int3
stos
jecxz
mov
inc
xchg
push
mov
in
mov
and
cld
inc
bound
cmp
aam
cld
sub
mov
std
sub
pop
push
in
cltd
and
pop
adc
pop
outsb
push
lock
xchg
fdivrs
rcl
lret
mov
xchg
mov
push
test
insb
adc
sub
mov
jmp
imul
xchg
sbb
fs
and
jmp
adc
inc
or
sub
sti
xchg
ret
xchg
lods
and
push
pop
mov
int3
fxam
sub
mov
lahf
pusha
xor
mov
dec
repnz
into
xor
jns
nop
jnp
leave
dec
cmp
cmp
cmp
pushf
cs
daa
lcall
imul
popa
cmove
add
out
push
in
pusha
and
mov
insl
mov
xchg
mov
in
sbb
fisubs
cmp
aas
xchg
xchg
cwtl
shrb
cmp
mov
pop
pushf
pushf
psllq
jmp
in
inc
sbb
inc
rclb
fisubs
adc
test
xchg
and
mov
ljmp
add
dec
jecxz
push
pop
sub
jmp
jns
add
xchg
mov
mov
lret
je
inc
push
sbb
test
or
in
pusha
cmp
xor
dec
dec
jae
lret
shrb
popf
ds
ss
pop
imulb
and
loop
fsubs
xchg
fdecstp
test
sbb
lret
sbb
loopne
imul
stc
add
push
mov
push
aad
gs
aad
cmp
adc
imul
push
add
mov
getsec
mov
jle
mull
sub
or
sbb
hlt
shrb
inc
cmpsb
adc
xor
int3
and
hlt
jnp
push
and
stc
jl
mov
xor
rcrl
cli
or
ljmp
aam
xchg
mov
lea
add
push
add
or
aas
xchg
or
mov
xor
cli
ret
sbb
push
xchg
dec
and
xlat
sub
movsl
fnstsw
sbb
lods
xor
jp
xchg
sbb
sahf
xor
lret
adc
in
xchg
outsl
fcoml
outsb
sbb
cwtl
or
sub
fsts
jp
adc
jnp
hlt
insb
imul
or
or
mov
out
inc
add
aam
cmp
mov
lret
imul
pop
sbb
mov
dec
sbb
movlps
shlb
into
test
inc
jne
in
call
cmp
mov
add
mov
cmp
or
pop
in
sub
lahf
xchg
inc
lods
cmp
dec
add
jl
roll
mov
fisubrs
inc
push
test
xchg
iret
iret
pop
and
lcall
mov
fsub
and
fwait
addr16
jmp
incb
cs
jno
push
cmp
lahf
xor
imulb
sbbb
pop
mov
sub
adc
stos
jno
lret
mov
pop
flds
jns
jecxz
movsl
imulb
xor
mov
mov
outsl
hlt
ret
loopne
into
mov
mov
fs
xchg
movsb
sahf
jne
scas
jb
jb
sbb
jb
xor
mov
cld
repz
shl
inc
dec
add
jne
sub
jge
rcrl
shlb
mov
sub
out
mov
fiaddl
aad
lods
icebp
cld
cmpsl
jl
jae
aaa
push
outsl
popa
stc
insl
ja
adc
jg
lock
xchg
sbb
sahf
scas
adc
sbb
test
iret
pop
cmp
repnz
int
gs
mov
and
push
xor
repnz
inc
sub
ljmp
std
sbb
inc
mov
lahf
rorl
mov
pop
mov
leave
xchg
mov
mov
add
add
xchg
outsl
int
insl
lods
mov
xor
cmp
mov
jns
cmp
mov
jnp
repnz
mov
imul
out
test
fnstcw
in
xor
sbb
xor
inc
push
pop
cs
mov
push
stos
out
mov
push
movsb
xlat
xchg
dec
or
cmpl
fdivl
xchg
push
xchg
in
pop
sbbl
cmp
push
push
insb
xchg
cmp
sub
sub
daa
cmpsl
push
or
hlt
daa
popf
pop
fs
mov
hlt
stos
daa
mov
sbb
scas
inc
aas
xorl
pop
push
or
dec
cmp
adc
fsubrl
pop
dec
shll
pop
lret
cs
movsb
mov
or
loope
sti
dec
inc
rcrl
mov
xor
xor
daa
clc
test
jnp
scas
stos
adc
add
xor
ss
dec
jno
outsb
add
push
xor
movlps
mov
stos
push
scas
clc
sbb
sub
jne
xchg
call
insb
ja
mov
pusha
push
popa
adc
xor
or
inc
or
mov
js
or
push
adc
add
rcrl
gs
roll
test
push
stos
xor
xor
xor
inc
lea
xchg
int3
fisubrs
cmpsb
outsl
fwait
adc
pop
inc
mov
or
sarl
adc
push
inc
mov
and
sbb
rol
lcall
arpl
mov
xchg
xchg
adc
or
fstpt
in
rcrl
xchg
push
popa
dec
sbb
ljmp
dec
sbb
jmp
aam
jge
popw
add
add
test
lods
stc
or
mov
inc
movsb
pushl
cmpsb
test
jb
pop
jg
xchg
xchg
repz
bound
iret
adc
loop
cs
fucomp
out
or
in
cmp
movsl
and
fisubrs
mov
and
xor
cld
cmpsb
in
stos
mov
lahf
cmp
ficompl
inc
sbb
lds
loope
cli
jl
in
hlt
daa
mov
fimuls
xor
jns
xor
sub
sbb
decb
pushf
lahf
push
pop
push
shrb
inc
fidivrl
inc
imul
jb,pt
mov
pusha
lea
adc
pushf
jae
daa
or
mov
push
dec
lret
outsl
sub
dec
out
cmp
xlat
ror
and
adcl
sbb
xchg
xchg
mov
mov
test
sahf
sub
jle
loop
push
aam
scas
and
jp
cmp
ds
and
jbe
rorl
mov
scas
pop
mov
mov
aam
out
loop
call
xor
bound
in
mov
pop
sahf
xchg
adc
jmp
aam
shl
pushf
loopne
or
rcl
jae
inc
cmp
mov
xor
add
dec
mov
adcl
add
adc
push
out
push
cmp
aas
pop
rsm
xor
jl
pop
pop
in
or
cmp
shr
shll
sub
or
arpl
imul
xlat
test
mov
imul
cli
add
aas
lahf
clc
inc
popf
cld
mov
and
push
push
fnstcw
ss
lahf
call
ss
sahf
dec
shlb
enter
cmp
add
pushf
mov
mov
jne
inc
icebp
cmp
aas
outsb
mov
aam
lock
or
cmpsl
xchg
add
test
cs
incl
lods
addr16
dec
je
imul
cmpsb
insl
sbb
sub
push
out
or
jb
xor
sub
repz
mov
out
cmpsl
sub
adc
std
rclb
fbstp
sub
and
jg
and
aam
inc
cmp
inc
inc
dec
out
adcb
cmc
rclb
shrl
inc
inc
and
stos
data16
add
int
push
xor
and
sub
jecxz
jnp
mov
sbb
dec
imul
out
jge
sub
ja
dec
or
in
pop
das
daa
fwait
mov
sar
ret
xor
int3
popa
mov
loopne
call
gs
jbe
ficoml
push
int3
ds
lods
inc
mov
ds
pop
push
pop
fiadds
stos
push
mov
pop
and
lahf
push
nop
add
jge
push
inc
xchg
jl
add
adc
lret
lds
dec
lahf
lret
mov
mov
leave
inc
sti
or
icebp
xchg
stos
inc
divps
imul
in
sbb
xchg
and
in
sub
xlat
mov
or
fsub
mov
data16
jecxz
mov
lret
cld
mov
nop
insl
add
imul
pusha
ret
pop
fisttps
pushf
dec
adc
jge
fimull
inc
push
daa
sub
jno
pop
adc
inc
ss
sub
inc
ret
rorb
cld
imul
lcall
mov
stos
xor
scas
push
cmp
or
in
shrl
in
fstpl
and
dec
push
push
fs
add
pop
imul
repnz
push
adc
stos
pop
add
fisubrs
out
dec
sbb
pop
es
and
cmp
push
testb
cmpsb
mov
cmc
ss
out
dec
mov
xor
out
xor
lcall
push
popa
inc
sbb
lret
test
adc
dec
mov
nop
xchg
pop
xlat
insl
scas
inc
and
pop
sahf
inc
and
mov
jae
add
add
jbe
fistpll
push
repz
testb
push
pusha
sub
aas
sbb
nop
or
ja
repnz
lahf
jo
add
mov
dec
fldlg2
data16
mov
out
push
sub
repz
imul
scas
cmp
in
xlat
pop
push
xor
in
insb
fcomip
xor
or
jnp
cmp
mov
and
and
mov
jecxz
sbbb
pusha
xchg
rcrb
fstpl
sub
stos
lock
gs
lret
lock
bextr
jp
pushf
popf
sbb
jo
jb
mov
add
out
loop
rorl
popa
nop
jg
in
mov
dec
jnp
and
and
or
mov
fs
cmc
mov
mov
push
scas
sub
inc
adc
adc
push
out
rcl
fistpl
add
jne
in
movsb
clc
mov
lret
js
or
xor
inc
out
cltd
loope
xlat
dec
scas
inc
sub
adc
dec
pop
imul
fimuls
pop
jns
dec
hlt
test
clc
shlb
lahf
repnz
xchg
test
mov
xor
cmp
adc
and
test
and
dec
xor
pop
incl
sbb
addb
fbld
jnp
test
push
aaa
cmp
sub
call
push
mov
dec
and
rcrl
jmp
mov
jmp
jp
outsl
sub
arpl
cmp
ret
int
mov
fxch
and
fidivl
sbb
pop
mov
push
and
sub
outsb
cmp
pusha
pop
mov
icebp
test
mov
icebp
xchg
mov
lret
fldenv
out
aad
mov
pop
lret
or
stc
inc
mov
dec
lods
ljmp
push
pop
aas
and
fwait
sub
test
xor
pop
aaa
add
and
movsl
not
mov
inc
dec
jns
das
dec
pop
xor
sbb
in
stos
mov
rclb
outsb
imul
mov
aad
clc
into
je
lods
pop
rcrl
in
mov
imul
aad
int
sbb
notb
into
in
jo
daa
aas
mov
pop
jb
hlt
inc
sub
pop
add
pop
test
jbe
into
cmp
sbb
or
call
dec
pop
mov
xor
push
cmp
adc
mov
stos
imul
addb
pop
lret
test
jle
sarl
or
mov
sub
loop
mov
add
inc
jmp
pop
mov
jge
jne
shrb
int3
cmp
dec
shlb
rorl
pop
sub
sbbl
fiaddl
loop
mov
mov
cltd
ret
in
sarl
lcall
arpl
jb
push
cmp
add
pop
int3
es
dec
outsl
cli
adc
or
cmp
xchg
out
mov
xchg
xor
jp
and
jg
pop
pop
into
aaa
insb
hlt
stc
rdtsc
lcall
and
sbb
sahf
pop
shrb
adc
mov
out
sbb
adc
dec
aad
and
clc
inc
out
pop
mov
jne
xchg
or
imul
stos
movsl
jo
mov
xor
jnp
jne,pt
mov
shl
in
push
add
bound
insl
mov
inc
xchg
mov
and
int3
ficoml
shll
movsb
negb
mov
cmp
arpl
imul
jne
rcll
jecxz
xor
jne
sbb
fucomip
movsl
into
enter
adc
inc
loop
xchg
mov
sahf
call
lock
mov
iret
scas
inc
test
int3
outsb
repnz
roll
or
pop
or
lahf
imul
out
popa
daa
div
popa
mov
pop
out
cltd
je
cltd
les
inc
xchg
sbb
add
and
mov
jo
loop
addr16
add
popf
fistl
stc
in
pop
mov
xor
je
das
divb
sub
or
ss
clc
sbb
jecxz
loopne
insb
or
adcb
mov
mov
fcoms
js
cmpsl
ret
in
mov
jl
pop
mov
adc
lea
add
stos
loop
adc
dec
mov
push
addb
fwait
stos
jecxz
popa
into
mov
lods
mov
mov
cmp
adc
ljmp
sarb
lds
sahf
xorb
sub
xor
mov
call
xor
mov
and
or
push
imul
add
icebp
mov
jo
mov
sub
mov
push
xchg
repz
stos
pop
push
aas
cs
adc
xor
inc
das
pop
in
mov
out
cmp
push
dec
out
jmpw
int3
xor
or
test
arpl
dec
out
mov
jb
xor
pop
sbb
cmc
js
pop
xor
jl
add
ss
mov
imul
cmp
rol
das
mov
inc
xor
jns
mov
insl
test
mov
sub
xchg
mov
addr16
push
loopne
mov
cmp
jns
cmc
jmp
stos
jnp
leave
inc
pop
mov
dec
popa
pop
in
jbe
bound
and
decb
rcl
jp
jl
mov
mov
and
fwait
push
cltd
inc
push
rep
and
mov
cmp
cmp
inc
repz
test
pusha
addl
mov
lret
xchg
scas
mov
cmpsb
push
mov
xchg
sbb
push
dec
cwtl
inc
dec
je
shrl
sub
xchg
jb
scas
inc
xchg
arpl
ffreep
js
adc
addr16
jo
jg
jno
dec
movsl
mov
sub
mov
sbb
aas
xor
push
loop
sahf
rclb
bound
add
mov
mov
loope
sub
jge
je
jno
xor
and
sbb
ret
icebp
jae
enter
mov
push
dec
xchg
lods
inc
pop
cli
cli
fdiv
sbb
hlt
aam
rolb
outsl
or
fcmovb
out
negb
fisttpll
maxps
sbb
test
popa
push
iret
dec
pusha
add
sub
push
fisttpl
inc
sbb
lods
pop
cmpsl
mov
push
mull
sub
lahf
jae
dec
mov
dec
push
insb
movsl
rcll
xchg
sub
ret
test
adc
push
jecxz
repz
ss
push
or
cld
ret
ljmp
xchg
addr16
push
imul
push
and
push
rclb
movsl
aad
or
aaa
or
inc
addb
adc
test
stos
or
dec
mov
dec
xor
xor
xchg
into
daa
std
sub
mov
loop
out
inc
ja
push
pop
xchg
std
xchg
jge
js
gs
cmp
sbb
lods
cmp
test
out
dec
mov
addr16
mov
lret
lcall
js
jg
add
push
push
adc
mov
lcall
mov
push
orb
cmp
cmc
jno
cmpsb
int
in
test
fldl2e
xor
dec
push
pop
inc
cmp
xor
cmp
cwtl
sub
stos
shrl
xor
jge
sub
jl
xchg
inc
out
les
add
sbb
xchg
add
jmp
mov
popa
loop
xchg
push
pop
jae
aas
lods
rcll
inc
add
dec
mov
xor
add
hlt
test
jo
mov
mov
add
mov
xchg
jne
sub
pop
lock
adc
ja
sbb
push
popa
dec
pop
push
loop
in
dec
inc
fucomip
lock
xor
add
pop
mov
and
cwtl
or
pop
out
cmp
clc
add
cmp
lods
and
mov
pop
dec
sub
jmp
scas
int
roll
cmp
push
shrl
xchg
adc
inc
stc
dec
sbb
je
mov
inc
repnz
ss
sub
ds
js
cmpsb
pusha
rorb
fwait
mov
loopne
jmp
roll
and
js
mov
nop
xchg
jle
pop
divl
push
lret
jge
mov
imul
add
push
jae
jne
mov
xor
sbb
push
mov
or
cmp
adc
sahf
lcall
int3
int3
jecxz
into
clc
cwtl
pop
mov
mov
mov
cwtl
fmull
mov
inc
jns
push
jns
daa
adc
rcl
lods
jns
gs
mov
pop
call
ja
enter
xchg
xchg
mov
clc
jns
jl
popf
add
mov
mov
cwtl
inc
lcallw
out
std
js
cmp
pop
push
shrb
cmpb
cltd
icebp
scas
sbbb
adc
adc
lret
push
fwait
mov
imulw
dec
dec
call
pushf
pop
arpl
add
or
fwait
or
sti
mov
xchg
xorl
es
jmp
inc
and
xlat
push
outsb
test
lea
mov
add
xchg
cmp
jmp
adc
aaa
xlat
dec
mov
lcall
jp
cmc
dec
xor
or
push
je
mov
or
cmpsl
push
pop
outsb
sahf
fs
leave
repnz
fnstsw
xlat
sbb
popa
cltd
push
add
stos
shll
loope
shl
fcomps
dec
ds
mov
sub
mov
cmp
popa
and
popf
ds
bound
hlt
xchg
scas
jge
pop
loopne
adcb
cltd
test
lods
popa
push
movsl
xchg
xchg
adc
sbb
imul
add
jl
mov
mov
fs
jbe
add
int
dec
sahf
xchg
ret
push
shlb
insl
push
add
push
pop
les
dec
out
orb
pop
cmp
cmp
push
inc
imul
pop
mov
xor
pop
iret
jne
je
pop
insb
dec
adc
jns
orl
scas
inc
jmp
loope
mov
push
aad
stos
pop
add
aas
mov
aas
sarl
xor
jl
fwait
xchg
sub
sarb
pop
jle
ljmp
dec
sbb
mov
mov
daa
ret
fistps
loopne
push
sbb
cmp
test
dec
xchg
mov
mov
xor
cmp
arpl
xchg
mov
jne
mov
add
lret
fsubrl
negl
mov
cmp
sbb
inc
inc
sbb
daa
pop
xchg
pushf
bound
aad
jmp
inc
loop
test
cmp
cmpsl
xchg
data16
cmp
cmpsb
mov
sbb
hlt
push
and
fisttpll
and
cmp
fs
enter
xlat
pop
mov
daa
in
aam
dec
pop
enter
imul
aam
lahf
subb
sub
push
sub
adc
and
jb
fidivl
jecxz
mov
hlt
imul
sub
fs
pop
movsb
inc
mov
ja
adc
jecxz
jge
rcll
xchg
js
dec
test
ficompl
jle
pop
js
lods
das
xchg
push
jl
or
push
test
cmc
xchg
sub
leave
dec
xor
inc
aam
pop
dec
outsl
nop
or
out
mov
popf
inc
push
cmpxchg
ja
daa
and
filds
mov
fadds
add
cmp
cwtl
adc
xlat
dec
mov
mov
lcall
adc
lock
xorb
jno
repnz
imul
sti
dec
lods
mov
das
test
add
jle
sbb
adc
or
jge
or
pop
pop
cld
xor
jbe
je
sbb
cmp
push
mov
sub
jnp
sbb
mov
aam
jmp
inc
or
ss
popa
popf
andb
imul
loop
and
test
jg
mov
lcall
jg
mov
pop
mov
mov
lock
mov
mov
sbb
adc
push
push
cmp
sbb
cmpsl
scas
es
lods
add
testl
pop
jg
mov
pop
mov
pop
shrb
mov
pop
arpl
sub
dec
lock
cmp
xor
push
mov
stos
cmp
add
push
inc
mov
cmc
aaa
test
popf
pushf
imul
xchg
movsb
jb
test
cmc
clc
dec
xchg
loop
dec
xlat
sbb
inc
dec
inc
mov
test
mov
pusha
xor
lock
std
scas
scas
sti
push
mov
push
jge
ss
fisttpl
loopne
sbb
cmp
js
int
imul
mov
ljmp
xchg
add
dec
cli
push
push
jle
xchg
insb
push
test
out
push
xchg
mov
jo
and
cld
shrb
cmp
sub
xor
and
imul
pop
or
jbe
mov
cmp
cld
shll
xor
pop
pusha
mov
in
cmpsl
ja
mov
cwtl
inc
repnz
fiaddl
popf
mov
cmpsb
inc
mov
add
mov
sti
add
clc
iret
mov
je
dec
adc
mov
movsb
loope
js
push
sbb
fcoml
push
jns
out
or
mov
or
mov
dec
call
hlt
add
add
or
sbb
mov
xchg
int3
scas
sarb
insl
pop
push
addr16
rclb
dec
jo
mov
add
dec
cs
cmp
jmp
adc
mulb
mov
sub
aaa
rclb
push
lahf
stc
fists
in
mov
call
fdivrl
and
repz
loope
jl
aaa
xor
inc
xchg
fpatan
dec
cmc
and
jno
pusha
or
mov
cli
repz
mov
into
push
sti
dec
or
out
cmp
cmp
cmc
out
xchg
fcoml
insl
and
mov
scas
add
cld
adc
dec
cld
xchg
mov
pop
jo
sbb
mov
dec
xchg
nop
fiadds
cmp
into
ret
dec
cmpsl
mov
mov
ss
lock
pusha
xor
pop
xor
call
mov
jns
inc
cmpsb
je
imul
push
push
leave
stos
into
nop
insl
ja
mov
sbb
imull
mov
mov
loope
and
imull
xor
push
cmc
mov
iret
sub
pop
or
mov
inc
in
stc
clc
inc
xor
int3
loope
orl
sub
lds
cmc
push
xor
in
std
xchg
aaa
repnz
shll
popa
or
mov
fdivl
test
sub
mov
cmpsl
mov
mov
lock
stos
mov
jae
mov
pushf
test
push
add
jno
xchg
xor
pop
out
aam
cmp
jne
in
jbe
inc
mov
jnp
adc
or
mov
push
cmc
dec
shr
jle
aaa
mov
psraw
pop
lds
xchg
dec
jne
sbb
sbb
stc
movsl
cmc
cmp
mov
jnp
das
push
call
in
cmp
pusha
aaa
cmp
mov
out
mov
fidivrl
or
xchg
nop
xchg
push
popa
outsl
mov
subb
loope
aam
out
out
xchg
popa
xor
mov
into
cmp
repz
pop
stc
inc
dec
fmul
jnp
pop
mov
sarb
mov
in
jp
loop
bound
ljmp
daa
xor
push
int
jo
sbbl
pushf
out
cmove
scas
cmpsb
ds
xchg
adc
or
jmp
cli
push
aaa
popa
jmp
in
add
push
inc
pop
dec
sti
outsb
sub
mov
cmp
mov
fsts
mov
mov
scas
fcmovnu
test
lret
xor
in
xor
addr16
sub
clc
shl
insb
xor
sub
dec
repnz
cld
cmp
lock
out
cmc
mov
or
mov
fistpl
pop
jge
lret
ret
cmp
push
in
mov
rorl
in
hlt
push
stos
shrb
cmpsb
or
outsb
jl
inc
sbb
in
out
ret
inc
aad
mov
xchg
aas
push
mov
add
pop
stc
mov
xchg
jns
movsl
pusha
vpmulhw
cmpsb
xlat
xor
or
push
jo
or
adc
out
xor
jl
adc
mov
int
notl
push
daa
pop
ss
bound
ret
or
out
xor
or
jb
jle
sarb
cmp
sti
shrl
aaa
push
cmp
xchg
out
xlat
cmpsb
dec
aaa
repnz
repnz
mov
or
xchg
or
jo
test
dec
js
sub
fstps
loope
sahf
dec
xchg
test
nop
xor
imul
iret
sbb
aas
dec
ss
ds
adc
mov
sub
or
rcl
fcompp
sbb
push
pop
push
push
push
jb
dec
adc
jl
jne
adc
js
js
sbb
ror
movsl
sbb
jp
into
in
les
xchg
aad
add
stos
lods
imul
aad
cs
pop
inc
mov
cwtl
xchg
pop
push
sbb
add
popa
stos
inc
inc
rclb
cld
mov
inc
cmp
addl
ror
pop
iret
mov
xchg
data16
aad
pop
into
jge
pop
pop
nop
loop
mov
loop
jle
nop
mov
adcb
fistl
add
test
xor
xchg
mov
or
jne
fcomps
or
fdivs
push
mov
fs
sbb
jecxz
enter
test
and
ss
loope
jmp
loopne
dec
and
xchg
sar
xchg
jmp
lock
insb
insb
loop
lcall
shlb
repnz
test
push
jg
xchg
imul
popa
fildll
fstpl
in
aad
xor
cmp
pop
in
fdivrl
test
sub
add
les
frstor
leave
inc
and
mov
dec
ljmp
cmpsb
rol
inc
arpl
pop
mov
jne
rcll
lea
lea
xor
arpl
jne
xor
sub
pop
or
aad
bnd
sarb
xor
subl
popf
add
cli
test
sub
popa
inc
and
and
mov
add
pop
iret
mov
aas
sbb
mov
inc
cltd
xchg
sbb
fcomi
gs
or
je
or
inc
cmp
sub
lods
dec
addr16
lea
inc
dec
xchg
xlat
push
movsl
dec
shlb
aas
dec
fs
mov
push
sbb
jp
loopne
jns
in
pop
stos
push
adc
std
push
and
xchg
imul
push
fisubs
jl
cld
les
fsubl
fs
scas
ret
inc
inc
inc
dec
cmpsw
mov
lods
cmp
and
ja
and
mov
sub
xor
xor
pop
bound
hlt
popf
ljmp
or
loop
cmpsl
and
enter
dec
mov
mov
adcl
mov
out
outsb
add
in
ss
mov
mov
stc
mov
cmc
or
or
jns
lea
cmp
fsts
aas
cwtl
mov
mull
jmp
je
rcrb
and
jp
into
movsb
cmp
push
sub
sbb
or
dec
movsl
push
or
insb
push
in
cmpsb
mov
sahf
pop
xchg
cmc
inc
xchg
rcll
add
mov
and
or
cmp
scas
dec
fidivl
clc
loope
int
mov
mov
incl
es
stc
in
hlt
sahf
mov
dec
push
mov
sub
roll
inc
psadbw
jne
test
loop
movsb
andb
jge
not
divl
outsb
pop
push
mov
or
test
aam
insb
ja
cmp
enter
cltd
jnp
mov
icebp
sub
repnz
pop
cmp
aam
pop
and
repnz
imul
mov
inc
push
add
xchg
pop
incb
cmpsl
mov
jl
push
insb
inc
popa
enter
std
and
lods
vmovntps
int
lods
sti
lahf
adc
lahf
mov
mov
jle
sub
bnd
jbe
xchg
hlt
xchg
push
stc
mov
imul
idivl
iret
adc
lods
xchg
dec
inc
xchg
pop
fcomps
out
pop
and
in
dec
or
ss
xlat
out
rorl
pop
test
mov
xchg
das
inc
into
mov
int
lods
pushf
add
jp
shrb
xor
std
rcll
out
movsl
pop
sarl
arpl
movsl
mov
pop
sbb
pop
xor
push
fistps
inc
test
pop
sbb
frstor
jns
jae
dec
inc
jne
lahf
lods
scas
div
xchg
jo
and
mov
arpl
negb
lods
jae
fisubl
loope
stos
mov
jae
orl
sbb
pusha
mov
xchg
xor
addb
push
shrb
and
aaa
imul
add
pop
lods
mov
fistl
cmc
cmp
pop
es
xor
inc
jno
shlb
jmp
push
pop
sbb
mov
ds
push
cltd
in
add
mov
aam
pushf
add
xorl
insb
loop
repnz
dec
jnp
int3
or
pop
pop
fildll
shlb
sahf
incb
into
adc
outsl
xchg
add
clc
add
cmpb
les
or
or
xchg
and
lret
and
das
and
xchg
inc
xor
xchg
inc
pop
test
inc
xchg
stos
stos
fisttpl
pusha
mov
mov
push
les
dec
das
push
call
enter
pop
loopne
xor
mov
int
decb
imul
popa
ja
pop
test
lahf
or
jb
fisubrl
inc
cltd
jmp
mul
push
mov
daa
mov
jns
add
cltd
or
stc
hlt
xor
mov
movsb
insl
fcmovnu
dec
xchg
test
incl
sub
int
fprem
mov
andb
sub
pop
pusha
dec
shl
outsl
fstl
outsl
jmp
loopne
ret
fwait
daa
popl
xchg
icebp
loop
stc
int
jae
and
into
rcll
xchg
xchg
sub
ret
jns
je
shr
stos
fildll
push
mov
sbb
ret
shll
movsl
fucomip
mov
mov
add
sbb
fcompl
push
iret
ja
call
cmc
push
fwait
ret
xor
insl
int
or
clc
fisubrl
fwait
xor
pop
pop
stc
inc
xor
mov
cmpsl
dec
ljmp
mov
xlat
enter
popa
push
xor
ds
dec
insb
inc
xchg
or
fmull
mov
cmp
and
cmp
ret
lods
mov
sbb
and
out
cs
subl
rcr
jge
movsl
add
insb
fsubrs
cmp
icebp
rorl
inc
xor
ss
out
negl
dec
hlt
cld
lds
and
jnp
mov
cmp
shl
push
stos
add
cwtl
jp
mov
lock
mov
mov
jmp
inc
seta
addr16
aad
adc
dec
mov
mov
add
pop
in
repz
push
xchg
les
mov
rcrb
push
pop
lds
add
xor
jne
imul
inc
das
lret
mov
pop
mov
sub
jnp
ds
hlt
cli
loope
test
or
push
and
fs
sbb
xchg
adc
shrl
jge
stc
adc
lods
leave
insl
xchg
mov
mov
or
cs
fcompl
jo
stos
ja
mov
ret
das
sbb
std
idivb
jle
adcb
pop
pop
add
shrl
lods
sbb
addr16
cs
lret
sub
inc
aaa
xchg
jl
xchg
out
mov
lret
mov
iret
xchg
inc
ds
or
enter
lcall
inc
imul
or
and
push
cli
shrb
jno
cwtl
daa
inc
lret
and
cltd
test
sahf
xchg
pop
xchg
and
and
ret
jle
cmp
pushw
ja
sti
sahf
lret
mov
aaa
push
hlt
in
out
inc
push
add
testb
cmpsb
xchg
pop
outsl
and
xchg
repnz
mov
jge
sbb
das
iret
incb
jge
js
nop
pop
ret
jb
bound
mov
addl
es
test
imul
sbb
fisttpll
lcall
sub
mov
xor
xchg
push
xchg
rol
and
in
sub
lods
out
push
jb
jle
mov
aam
leave
jmp
aaa
cmp
cli
sub
push
outsb
pop
push
dec
shll
test
aaa
dec
cmpb
nop
stos
adc
sbb
mov
outsb
mov
fnstenv
nop
cmp
adc
push
sbbb
popf
int
aas
xor
jno
push
mov
js
sub
rclb
push
pop
fisttpll
inc
insl
rcr
int
pop
inc
aad
nop
js
xlat
pop
push
movsl
sub
les
inc
adc
ds
gs
push
cld
lods
or
jbe
mov
fsubrl
out
je
pop
xchg
pop
push
les
pop
ss
movsl
aaa
pop
xchg
ja
sub
adc
xlat
loopne
sbb
cmp
push
mov
sbb
cmpsb
nop
sub
das
je
jno
mov
icebp
cmp
leave
sbb
dec
dec
scas
xor
add
mov
cli
jne
push
mov
rol
push
cmp
push
cmp
arpl
shl
push
je
mov
repnz
push
outsb
scas
stos
jno
fistps
es
adc
cmp
ds
int3
jge
fsubrl
dec
lcall
adc
inc
xor
adc
inc
xchg
idiv
imul
push
arpl
gs
jmp
scas
pop
ficoml
mov
jge
fdivrs
iret
je
daa
iret
inc
aad
lock
mov
pusha
inc
jmp
daa
pop
movsb
lret
shrb
or
mov
movsl
or
in
jmp
cmpsl
and
fisttps
inc
test
fcmovbe
xlat
mov
pop
lahf
lea
xchg
sub
or
sub
stos
ljmp
dec
add
jb
int3
ffreep
xchg
pop
xchg
outsl
xchg
cmp
fmuls
xchg
cltd
sbb
lret
insb
adc
mov
xchg
pop
sub
xorl
outsb
fldenv
adc
sub
and
jge
jp
js
xor
pushl
imul
pop
clc
into
cmp
or
or
imul
mov
cmp
nop
mov
cmp
pop
pusha
lcall
loopne
add
lock
imul
push
call
sar
or
lods
aas
cmpsb
mov
sti
loopne
mov
mov
fcoms
sub
mov
and
je
mov
fldenv
cli
ret
clc
nop
addr16
jmp
inc
dec
shl
shlb
in
mov
js
pop
lret
push
mov
jl
mov
das
mov
push
sub
pop
pop
sti
dec
outsl
xchg
cmp
inc
dec
pop
or
cmp
lea
test
push
push
outsb
movsl
lcall
adc
je
cmpsl
out
and
lcall
iret
inc
pusha
ret
jae
ljmp
add
loopne
xor
xchg
push
push
insl
mov
xchg
dec
out
lret
daa
or
adcb
jge
sub
sub
int
cmpsl
push
and
pop
and
xchg
ja
cmpb
cli
adc
xchg
rcrl
mov
pop
adc
push
push
sbb
or
mov
inc
and
and
xchg
mov
add
popa
int3
shlb
mov
sub
adc
mov
dec
lea
test
mov
arpl
xchg
lret
or
dec
push
ljmp
scas
and
faddl
into
sbb
xlat
adcl
stos
sbb
icebp
lret
mov
and
mov
icebp
and
dec
js
push
jge
push
sub
xor
fistl
dec
mov
int3
lods
jae
xchg
jb
cli
pushf
mov
jnp
and
jne
xchg
xor
int
inc
clc
jb
push
push
xchg
push
adc
lock
and
mov
das
pop
movsl
repnz
push
sti
cmpsb
adc
decb
add
lock
popf
inc
mov
pop
call
mov
hlt
je
or
sbb
mov
push
out
push
cmp
jmp
je
sub
add
push
push
cmpsl
xorl
xchg
test
inc
xchg
insb
iret
rorb
fistl
inc
push
adc
mov
hlt
cmp
mov
outsb
cltd
std
push
push
and
push
ljmp
je
nop
pop
cmp
mov
aaa
test
popa
iret
test
fnstenv
add
mov
sub
les
das
cli
mov
arpl
mov
jns
js
push
fwait
adc
push
into
pusha
sbb
in
clc
pop
test
xchg
xchg
sbb
fstpl
push
inc
mov
jmp
insb
cmp
repz
std
popf
addb
pop
pop
push
cmc
pop
sbb
addb
adc
ret
in
cwtl
je
jnp
mov
jne
sbb
and
les
popa
xor
shll
pop
scas
xchg
sti
rorl
ljmp
mov
or
repz
dec
int
stos
mov
pop
dec
adc
dec
js
aad
js
dec
arpl
cmc
test
inc
mov
mov
mov
mov
daa
cmp
mov
and
sarl
xchg
sbb
sub
insb
fcmovb
fldt
pop
repz
push
cmp
pop
sahf
fdiv
mov
subl
jp
xchg
js
mov
push
xor
imul
and
cmpsb
popa
dec
jnp
jecxz
bound
mov
add
fs
jecxz
or
mov
push
stos
pop
sti
test
rcl
jnp
pop
jge
cmp
cltd
cmp
in
jp
pop
incb
xchg
xor
dec
push
jne
lods
and
and
mov
outsl
sub
cmp
outsl
add
adc
sbb
adc
pop
cmp
xchg
jb
stos
subl
push
scas
sbb
push
push
adc
call
dec
repz
inc
lock
push
mov
jo
inc
push
das
nop
adcl
loopne
lods
lahf
sbb
into
clc
and
pop
mov
inc
push
cmpsb
cmpsl
adc
xor
outsl
xor
cmpsl
xchg
adc
loopne
xchg
cli
addl
xchg
data16
outsb
pop
and
cmp
int3
push
inc
mov
xchg
mov
add
cmp
cmpsl
mov
mov
dec
test
or
incl
jmp
leave
or
xchg
mov
das
lret
dec
gs
out
xchg
shll
pushl
imul
pop
popl
ret
mov
mov
cmp
in
hlt
in
inc
cmc
cli
pmaddwd
push
movsl
xchg
or
push
cltd
mov
jb
es
dec
out
loopne
mov
sbb
fsubrs
cwtl
int
andl
inc
add
sub
xchg
jp
jge
jns
daa
xchg
xor
fisttps
inc
jae
add
in
push
lret
cmp
jge
ss
in
jb
push
push
sahf
out
xchg
shr
jo
push
leave
xor
fmuls
xchg
jecxz
fisttpl
push
sbb
dec
inc
jae
jmp
mov
jb
add
loop
adc
test
nop
leave
repz
adc
xchg
mov
rorl
add
push
mov
add
imul
xchg
mov
fsubs
es
in
mov
mov
fidivrs
mov
dec
fsubrs
stos
adc
xchg
sub
mov
sub
aam
jb
mov
lcall
mov
dec
mov
outsb
inc
loop
push
jae
mov
mov
mov
xchg
push
fwait
mov
mov
pop
insb
dec
cmpsl
sahf
push
sbb
lds
inc
adcb
out
adc
icebp
es
lea
aaa
dec
outsl
push
std
mov
repz
xor
jo
imul
mov
push
and
pop
add
pop
and
push
mov
mov
dec
jge
jbe
pop
shlb
cwtl
fadds
mov
movsl
pcmpgtb
xchg
pop
bound
std
push
mov
sbb
mov
pop
ljmp
mov
jne
xor
shlb
mov
movsb
or
subb
lcall
push
out
cmpsl
lea
xchg
insb
sub
pop
sarb
inc
jmp
arpl
mov
pop
stos
shll
pop
xchg
icebp
dec
mov
adc
pop
adc
xor
mov
add
aaa
ret
adc
add
repz
jecxz
imul
cs
xor
cmp
jmp
lds
fs
push
aaa
out
or
pop
xchg
dec
sahf
sbb
js
mov
cld
aam
fcmove
push
insl
xchg
and
mulb
inc
adcl
inc
mov
pop
movsl
jne
loop
mov
and
jge
imul
jge
mov
pop
int
js
iret
loope
loop
aad
push
mov
jle
idiv
mov
pop
ljmp
lock
repnz
inc
sub
mov
mov
in
das
jmp
lea
cmp
aaa
dec
js
xor
loope
adc
mov
or
or
lods
inc
jmp
rorl
lea
adc
mov
insb
stos
icebp
in
mov
jns
mov
mov
movsb
outsb
cmp
sub
jbe
mov
dec
es
inc
fdivr
movsb
ret
xchg
int
adc
pop
jns
pop
lock
push
cmp
out
ds
sbb
add
adc
out
loope
std
pop
sbb
addr16
jae
xor
or
push
clc
sub
test
push
push
xchg
push
imul
dec
xor
iret
inc
sbb
or
leave
sbb
movnti
fstl
testb
push
ss
dec
mov
scas
fwait
cmp
and
dec
xchg
sti
fldt
in
sbb
call
and
dec
lret
ljmp
test
test
sar
cmpb
fdivr
inc
jbe,pn
push
icebp
mov
lods
aad
aad
sbb
andl
jle
inc
into
dec
shl
adc
adc
cmc
dec
cld
std
scas
xor
add
jnp
xor
mov
cmp
sti
jg
das
push
lds
add
ja
addr16
loope
es
or
dec
pushf
mov
repz
pop
cmpb
outsb
fimull
sub
mov
les
out
jmp
bound
call
mov
sub
fidivl
int3
lahf
shrb
mov
xchg
shr
sbb
out
in
add
adc
lods
inc
xor
lahf
in
cmp
xor
fs
pop
mov
movsl
pop
dec
cwtl
pop
outsl
mov
mov
xchg
ficompl
mov
mov
lock
je
decl
push
mov
cmp
mov
lods
lods
js
jl
ss
xor
jo
mov
push
push
push
add
xor
les
sbb
pop
mov
outsl
mov
lea
jl
inc
out
sub
jo
and
mov
pop
mov
pop
xor
aas
push
jge
pop
movsb
xor
stos
jno
jnp
jo
fs
inc
lahf
out
jo
cmp
lods
hlt
mov
repz
lret
push
cmp
aaa
outsb
enter
sti
sub
ss
or
shl
push
lods
rcrb
and
cmp
mov
pop
cs
or
mov
fmuls
push
lods
adc
int3
icebp
mov
xchg
out
out
sub
inc
aaa
mov
xchg
push
mov
stos
cld
sbb
cmp
adc
mov
popa
pop
and
push
push
sbb
and
cmp
and
push
lret
mov
push
cmp
fwait
cltd
jno
loop
jne
adc
out
loop
in
push
scas
and
mov
push
xchg
test
movsb
sbb
pop
js
pop
fnstcw
in
fs
mov
mov
sub
sbb
scas
sub
fldl
sar
inc
and
push
adc
vpsrad
iret
sub
ljmp
aas
stos
add
jge,pt
push
fcomip
adc
ja
or
stc
stc
xor
or
out
mov
bound
pusha
jg
adcb
in
xchg
rolb
repz
cmpsb
inc
daa
mov
mov
popa
into
mov
jne
aad
mov
test
xchg
adc
arpl
repz
ss
add
insb
test
pop
inc
jmp
sub
rcrb
push
aas
lods
adc
cmp
sarb
fst
outsl
xchg
dec
push
xchg
add
js
xor
sbb
xor
add
mov
xor
dec
arpl
mul
sub
cmp
mov
in
jne
ja
push
or
mov
mov
add
repz
pop
test
mov
push
out
cmp
and
mov
mov
fidivl
imul
in
pop
fadds
enter
dec
mov
mov
in
loope
xorb
mov
push
data16
jge
jge
push
mov
xor
xorb
out
std
sbb
xchg
push
leave
and
sub
cmc
xor
or
xor
iret
mov
mov
movsl
mov
stos
mov
arpl
hlt
cmp
inc
inc
out
inc
lret
daa
movsl
cmpsl
push
out
inc
rclb
push
test
fldenv
push
and
cmp
and
cmp
je
cmpsl
or
testl
add
mov
sub
jbe
ret
sti
and
sbbl
xor
scas
push
fnstenv
popa
in
jle
pop
andb
xchg
inc
gs
or
cmp
jns
insl
fildll
push
jg
arpl
add
sti
sbb
adc
rcll
cmc
lret
out
mov
imul
loop
jmp
subl
xchg
jmp
inc
hlt
ss
mov
and
call
popa
ja
xchg
cwtl
call
mov
pop
outsb
xlat
cmp
les
adc
stos
cmp
mov
or
pop
imul
pushf
addb
outsb
mov
xchg
inc
add
js
cmp
xor
adc
jne
sbb
fsubs
into
xor
xorb
lea
adc
dec
sbb
pop
jl
fsubr
cmc
insl
stos
test
xchg
dec
sbb
push
andb
push
push
jmp
inc
daa
lock
jg
je
jae
mov
aad
adcl
inc
ficomps
popa
scas
xchg
xor
sub
fiadds
and
stos
int
repnz
jp
mov
or
fwait
dec
iret
out
lods
push
insl
insl
in
int
sbb
jecxz
mov
xor
xor
pop
mov
jo
cmp
lods
loop
push
cmp
xlat
scas
jbe
les
pop
or
mov
adc
mov
mov
out
cmp
or
arpl
ret
sbb
sbb
fwait
dec
mov
in
push
push
das
pushf
cltd
fucomip
inc
lods
fwait
jle
inc
xchg
xchg
shlb
lods
xchg
mov
clc
aad
ret
fdivl
aam
ss
iret
xchg
lcall
sarb
push
jno
rcl
xchg
inc
adc
in
out
mov
hlt
cmp
cmp
mov
out
mov
xchg
clc
inc
jo
loope
adc
mov
loopne
jg
lods
xlat
popf
adc
cli
out
add
lret
fcmovnb
xor
or
dec
cmp
test
aaa
bnd
mov
sub
in
mov
fisubrs
popa
jno
xchg
push
jnp
xor
xchg
fimuls
adc
sub
and
imulb
or
xor
and
lea
xor
loopne
mov
dec
jg
daa
not
std
out
aam
inc
sbb
jo
leave
or
addr16
cmp
xchg
add
mov
mov
pop
mov
rorb
lret
add
inc
mov
jno
mov
mov
insl
add
int3
divl
adc
dec
pop
fdivrp
push
push
adc
inc
popf
dec
lds
xor
out
into
pop
inc
xchg
push
add
sub
cmc
xchg
pushf
nop
and
arpl
movd
rolb
loop
in
jbe
in
ss
jae
fiadds
or
lea
xor
icebp
je
popa
xchg
rcll
jmp
inc
shlb
aaa
xor
xor
popf
jae
test
push
sarl
sbb
sub
iret
js
pop
in
pop
sti
mov
jb
mov
mov
xchg
xchg
push
mov
inc
ficoml
imul
cltd
jae
fwait
aas
cmp
in
or
sbb
xor
push
sti
lds
xchg
enter
mov
jle
dec
stos
cmovno
and
jmp
sbb
cmc
jnp
mov
mov
xchg
xor
cmc
int3
xor
add
cltd
outsb
or
movsl
sti
add
imul
outsl
cmc
aas
add
nop
cli
fcomps
inc
scas
inc
mov
pusha
mov
fmuls
adc
movntps
aaa
insb
lahf
sbb
cltd
dec
adc
inc
pushf
inc
es
out
fisttpl
dec
push
sbb
sbb
lahf
vcvtsi2ssl
add
xchg
add
sarb
popf
mov
shlb
test
notb
sub
mov
cltd
es
call
or
jo
cmp
sbb
adc
xchg
and
mov
xchg
sarl
lret
xor
iret
and
push
repnz
adcb
jg
or
xchg
lcall
fnstsw
jbe
mov
sbb
in
js
push
xchg
fldt
loopne
fisttps
cmp
fcompl
jno
dec
repnz
jp
loopne
sbb
cmp
icebp
iret
sti
xlat
inc
iret
cld
das
hlt
stos
push
int3
or
pop
xchg
add
rorb
mov
insb
xor
imul
push
jb
xor
sub
ds
add
sbb
shlb
je
or
pop
loope
adc
dec
mov
in
cmp
lods
stos
dec
movsb
mov
rcrl
jno
mov
jge
xchg
popf
mov
inc
xor
cs
mov
frstor
cli
ret
divb
mov
cmp
lcall
dec
mov
mov
out
jle
outsb
cwtl
dec
dec
or
cmc
in
xchg
in
leave
lock
iret
pop
xor
push
jl
dec
xchg
mov
mov
xor
cmpsb
jmp
popf
iret
movsb
imul
mov
stc
nop
inc
jmp
xlat
sbb
or
scas
test
lea
incb
cmp
fwait
in
sub
xchg
je
in
jp
jnp
push
in
ljmp
pop
push
adc
xor
push
fldenv
stos
leave
pop
fld
jnp
mov
push
mov
and
call
arpl
dec
cmp
jo
dec
pop
js
aam
mov
movsb
rorb
scas
int
shr
pop
jmp
push
xchg
enter
mov
jmp
icebp
add
sbb
cmp
pop
daa
jmp
pop
mov
scas
fcompl
hlt
cli
into
mov
cs
inc
jns
movsl
dec
cmp
cmpsb
sbbl
aas
cmp
push
add
lcall
je
lods
cli
int3
cmpsb
pop
sbb
lods
lret
arpl
dec
sub
mov
push
out
in
fwait
ret
lahf
mov
pop
ljmp
in
inc
push
pop
mov
movsl
loop
cld
fs
push
add
out
popf
clc
loope
jo
and
ss
loop
jne
mov
hlt
lock
cmp
and
sbb
mov
xchg
jns
cld
js
sti
int3
mov
xor
loopne
inc
xor
xchg
ja
jp
fnstsw
in
push
sub
call
mov
mov
jo
jp
scas
inc
cmpsb
jns
imul
sahf
sbb
test
fstpt
mov
dec
jg
cmp
jnp
xchg
jl
ljmp
fimuls
cwtl
std
adc
xor
int3
push
cmpsl
movsl
xor
ja
in
cli
cmp
push
add
dec
mov
pop
leave
push
mov
mov
dec
push
add
mov
xchg
jns
or
repnz
insb
mov
pop
popf
inc
cld
xor
add
xor
push
shrl
xchg
orl
fnstenv
xor
ds
cmpsl
cmp
xchg
pop
inc
xchg
xor
mov
mov
aas
in
dec
pop
jmp
mov
inc
jb
pop
mov
sub
sahf
mov
mov
add
es
dec
cmpsb
fsubs
repz
and
push
mov
ds
movsb
push
push
sbb
in
bound
incb
xor
lcall
test
xor
mov
push
push
frstor
pop
pop
enter
push
push
mov
fcompl
sub
xchg
mov
loopne
xorl
mov
adc
call
dec
sahf
mov
cli
dec
rcr
cmc
mov
iret
mov
lcall
cli
mov
dec
jmp
xchg
jo
mov
or
pop
out
adc
mov
hlt
cmpsl
mov
push
loope
sub
jo
and
jo
ljmp
enter
lret
movsb
or
les
mov
push
clc
lods
inc
xor
cmp
push
std
mov
dec
repz
repz
mov
push
repz
mov
sbb
inc
pop
pop
and
das
test
inc
inc
xor
cltd
sub
js
js
push
push
mov
scas
pop
pop
lcall
out
jecxz
rcrl
jp
mov
dec
and
mov
xor
xchg
push
jns
jecxz
fwait
stos
mov
lret
or
or
popf
and
push
movsb
orl
jmp
sbb
push
aaa
pop
popa
cmpsl
hlt
lock
dec
std
xor
fbstp
inc
cwtl
push
fildll
cmp
loopne
mov
pop
fstpt
inc
dec
mov
push
sbb
ja
inc
loop
xchg
jmp
scas
cmp
push
jbe
cmp
in
cmp
popl
jnp
mulb
jle
add
lds
ret
arpl
mov
jb
mov
ja
lock
dec
adc
sub
mov
mov
jg
shll
cld
int3
cmc
movsl
call
int
dec
xor
into
cmp
and
into
pop
sub
xchg
mov
cmp
test
movsl
sbb
stc
jge
out
cli
popf
xchg
es
jecxz
dec
sub
int3
push
shrl
push
aas
pop
or
int3
outsl
jp
lods
popa
arpl
out
mov
ret
andb
enter
cmpsl
xchg
fisttpll
test
pop
ds
bound
or
bound
pusha
push
adcb
sbbb
mov
mov
cmpsl
add
cmc
fisubl
fdivrs
cmp
sub
sub
pop
arpl
push
clc
fistpl
pusha
rolb
jle
into
jmp
fmulp
push
and
inc
shl
jae
cmp
repnz
orl
and
imul
rorl
repz
and
inc
pop
stc
pop
xor
pop
push
xchg
jl
iret
dec
pushf
push
enter
or
decb
add
repnz
sbb
jp
mov
pop
wrmsr
cs
stc
mov
sub
daa
xchg
andl
ret
add
movsb
push
dec
inc
pop
subl
mov
sbb
xor
sub
ret
mov
aas
mov
mov
sub
xor
dec
orb
lret
push
lods
incb
xchg
pop
sub
sbb
jno
int3
movsb
mov
or
mov
out
push
inc
add
nop
pop
jo
push
push
push
fimuls
xor
dec
dec
lret
insl
scas
push
aad
nop
outsb
mov
js
xlat
sub
sub
lock
jo
push
mov
repz
mov
sub
xorb
int3
mov
movsb
outsb
mov
push
popa
dec
sub
mov
sbb
and
pop
add
or
scas
in
jb
inc
outsb
ljmp
adc
ja
adc
jmp
pop
into
arpl
xor
cmp
fs
scas
leave
call
jge
pop
sub
fldcw
lret
in
inc
addr16
push
mov
push
xchg
aaa
jge
sbb
sub
lahf
cli
sbb
or
fdivr
inc
pop
dec
stos
lcall
pop
mov
jne
lea
scas
test
jne
mov
cmp
adc
mov
mov
xor
pop
pop
popf
mov
mov
sub
scas
scas
push
rcll
pop
imul
and
adc
xor
mov
and
adc
addr16
jl
jns
jne
cmc
jmp
or
dec
movsb
sub
push
push
sub
jle
sub
sub
hlt
cmp
pop
mov
cmp
sahf
sub
inc
call
es
pushf
inc
loope
sahf
mov
push
pop
sub
inc
and
add
bound
test
popf
loopne
stos
xchg
xchg
pop
movsb
jns
sti
andb
mov
cltd
mov
mov
aaa
xchg
in
mov
scas
xor
or
imul
iret
cs
movsb
repnz
addr16
mov
pop
cmc
mov
gs
stos
aad
lea
inc
jg
in
xchg
pop
idivl
jmp
inc
arpl
mov
jmp
pop
scas
out
xchg
mov
pushf
push
or
aaa
ljmp
xchg
dec
or
stos
movsl
mov
sub
enter
lret
pop
icebp
cmp
sub
adc
fnsave
sahf
mov
mov
add
fimuls
shlw
pop
adc
lock
aas
test
add
popw
and
shrb
inc
lods
out
fs
lock
enter
mov
loopne
push
std
scas
cmp
sbb
in
pusha
mov
pop
int
mov
out
push
push
xlat
xchg
push
or
lahf
mov
mov
mov
pop
fiadds
movaps
adc
lahf
adc
jnp
push
mov
sub
and
pop
push
loope
popf
call
lods
loope
fs
cltd
jb
shrl
loopne
mov
stc
ja
mov
pop
popa
cmc
ja
lret
push
fildll
outsl
add
fwait
rcr
repnz
pop
add
adc
daa
loope
push
aaa
push
mov
movl
adc
in
ljmp
push
paddw
fsubl
imul
ljmp
mov
or
push
mov
xor
push
xchg
pusha
cmp
leave
jle
xorl
xchg
mov
cmp
sbb
rorb
mov
push
fcmovnb
adc
and
fiadds
rolb
leave
ds
jp
jnp
aas
jnp
xchg
mov
pushf
test
cmp
dec
mov
arpl
mov
incl
sbb
pushf
or
imul
xor
add
fnsave
xor
mov
pop
xor
mov
pop
dec
add
call
std
dec
jbe
dec
jnp
pop
mov
scas
subb
pushf
stos
es
push
imul
add
cld
movsl
aad
shl
mov
pop
cmp
inc
subb
and
jmp
movsb
stc
call
jl
testl
subl
jns
push
dec
movsb
mov
xor
testl
negl
xor
into
ljmp
jae
xor
orl
and
hlt
shl
pop
ffreep
lahf
aam
out
popa
mov
dec
cmpsl
xchg
mov
flds
pop
add
mov
jo
test
pushl
stc
pop
xor
cmp
cmpsl
out
mov
add
jo
xchg
xor
xor
push
daa
inc
mov
mov
mov
loopne
jne
insl
out
or
and
xchg
pop
adc
fiadds
add
repnz
imul
jl
cmp
testb
pop
mov
sbb
adcl
sub
test
lahf
push
dec
push
push
aas
xlat
enter
mov
pop
lret
pop
adc
inc
push
mov
gs
jae
lret
fucomip
inc
aaa
pushf
cmp
out
and
add
pop
dec
sti
imul
and
xchg
mov
filds
xlat
mov
dec
test
xor
xor
stc
mov
jle
and
xlat
cs
aas
push
sub
imul
add
xor
adc
mov
jo
sub
and
xlat
lods
jno
sbb
or
jns
enter
pop
mov
xchg
jns
cmp
addl
lahf
rcr
repz
xchg
outsl
or
cmp
cmp
shl
or
movsl
mov
dec
ret
rolb
push
arpl
jecxz
arpl
leave
mov
cmp
das
adc
sbb
xchg
mov
and
aad
arpl
imul
popf
jge
es
xchg
and
test
mov
add
clc
push
push
testb
aas
or
xchg
mov
sbb
adc
push
jns
pop
jae
call
adc
mulb
das
int
scas
outsl
add
jmp
repnz
dec
and
testl
ljmp
mov
push
sti
loop
lods
push
cmp
mov
loopne
int
inc
int
dec
push
and
ret
mov
aaa
mov
inc
push
add
mov
sahf
push
rcl
outsl
push
fidivs
aaa
lea
dec
repz
and
ljmp
mov
xor
mov
mov
mov
sub
sbb
sbb
not
dec
cmp
xor
fcomp
xor
dec
sub
and
sub
mov
and
dec
call
hlt
dec
into
pop
ja
fsts
mov
xlat
jns
pushf
adc
push
outsl
fnsave
ljmp
xor
xchg
or
jbe
fbstp
fimull
inc
arpl
cmc
daa
fildll
xlat
push
mov
or
adc
mov
shlb
scas
das
cli
sarl
outsw
xor
std
cmp
neg
popa
sub
loop
xchg
in
in
and
and
xchg
pop
or
fcoms
fs
cltd
out
cmp
mov
mov
into
pop
pop
pushf
addr16
cmp
roll
rol
jne
sub
mov
sub
lods
sbb
add
or
ret
mov
sub
xchg
out
sbb
je
fiaddl
in
pusha
les
jp
sbb
push
mov
cmp
fsts
enter
jl
mov
icebp
nop
mov
ja
cmpsb
ds
mov
cmpsl
or
lods
aaa
inc
ljmp
popa
cmpsb
xlat
fsubrs
xor
jp
push
push
daa
add
sarl
mov
ret
sarl
shll
aas
jno
incl
cmpsb
scas
mov
in
scas
in
scas
aad
or
dec
cli
mov
mov
or
int
fwait
jle
mov
enter
jecxz
aam
jnp
adc
xor
mov
daa
sbb
jne
dec
mov
loope
mov
push
add
repz
mov
lcall
jbe
notb
jae
cmp
dec
loopne
popf
pop
sub
push
orl
outsb
add
movhps
in
push
xchg
in
aad
pushf
loope
jb
in
xor
mov
xor
push
mov
mov
adc
insb
rorb
in
lds
inc
rcll
or
js
jbe
add
xchg
sbb
xchg
cmp
mov
jb
cmp
xchg
loope
pop
sub
jnp
push
jne
hlt
lret
mov
mov
popa
pusha
mov
ficompl
xor
xchg
fst
stos
pop
sti
adc
mov
movsl
pop
nop
dec
sub
push
jns
adc
inc
adc
cs
mul
aaa
cld
fsubs
xor
fdivrs
adc
pushf
push
out
dec
jns
adc
xor
mov
add
out
sub
mov
mov
sbbl
ret
sbb
jne
xchg
sub
and
insl
adc
xor
mov
mov
in
sbb
je
in
and
cmc
mov
popf
jmp
bound
sub
add
loope
nop
into
jae
ss
push
sbb
es
mov
insb
mov
sbb
lds
out
std
enter
sub
mov
xor
in
pop
inc
xor
cmp
shrb
jge
lods
jp
xchg
jmp
xor
ja
mov
out
in
xchg
leave
push
inc
add
pushl
loop
popf
add
pop
xchg
jns
int3
stos
push
faddl
mov
jae
dec
orb
jl
add
or
cmp
sub
ret
stos
push
loopne
push
jae
idivl
inc
inc
xchg
and
lahf
mov
cmpsb
or
test
mov
dec
push
cmp
sbb
or
mov
inc
ss
xor
push
jl
hlt
mov
and
sbb
fiaddl
leave
jb
dec
xchg
negb
jnp
push
gs
pop
jno
sub
lods
scas
fldenv
dec
and
icebp
adc
test
push
cld
je
push
cmp
mov
fldt
jae
sahf
pop
cmpsb
pop
xchg
mov
insb
xchg
jle
addr16
jmp
filds
fwait
rorb
js
data16
pop
adc
lds
std
cli
inc
ja
lods
ds
mov
add
push
adc
cmp
std
movsb
out
inc
mov
je
sti
clflush
mov
mov
sub
das
in
mov
or
push
sbb
ds
xor
cmp
cmp
scas
imul
inc
hlt
dec
mov
out
push
lock
pushf
cwtl
xchg
mov
lcall
cmp
sbb
lods
sub
cmp
lea
imul
cs
jg
add
jl
push
mov
pop
xchg
adc
adc
lock
sti
aaa
push
lock
pop
aas
sub
mov
cld
mov
jg
lcall
ss
inc
int3
scas
dec
sub
inc
sbb
lret
call
mov
jecxz
in
cmp
mov
popf
push
sub
test
jo
mov
cltd
push
mov
aam
js
es
and
popa
out
in
lods
pop
rolb
mov
add
rolb
sub
jb
cmp
pop
xor
add
sbb
sub
repz
sbb
inc
sbb
aam
push
shrl
mov
dec
out
inc
jmp
mov
repnz
imul
mov
cmpsl
jne
adc
add
lcall
test
push
aas
push
lods
mov
pushf
in
jae
sahf
imulb
sub
push
orl
xor
and
cmp
mov
stc
ret
sbb
inc
sub
pushf
add
insl
fldl
mov
int
pop
fldz
nop
loope
test
leave
in
fcoml
adc
into
int3
ret
outsb
jne
pushf
repz
sti
and
dec
push
pop
sub
push
test
sub
test
iret
or
ja
call
adc
xor
rcrb
call
xchg
mov
add
sahf
adc
jle
les
mov
mov
xor
adc
into
adc
push
hlt
or
adc
loop
jno
and
sbb
dec
mov
popa
sub
jo
je
mov
and
ror
mov
add
fmull
jbe
and
ja
xchg
sub
shr
imul
dec
mov
pop
dec
cmp
shrb
xchg
lcall
cmp
shl
xchg
sbb
cmp
inc
xor
fsub
inc
sbb
push
dec
lret
dec
imul
mov
sbb
popa
jo
mov
ja
mov
push
leave
cli
cmpl
and
test
lcall
aaa
scas
or
hlt
xchg
lds
and
shll
mov
inc
les
push
cltd
fisubl
add
mov
mov
stc
or
popa
sarb
adc
sbb
lea
pop
xchg
sub
stos
and
lods
jb
repz
imul
adc
rolb
xorl
push
ret
stc
call
lret
pop
push
xchg
negl
mov
dec
and
xchg
lods
sbb
xor
mov
fidivs
lahf
mov
jbe,pn
ljmp
push
fwait
jp
sbb
xchg
mov
jp
ficoms
or
inc
outsl
sbb
cmp
xchg
dec
dec
icebp
in
mov
add
lds
mov
push
stos
outsl
fwait
adc
in
mov
pop
mov
jmp
lods
pop
pop
mov
mov
xchg
mov
enter
xchg
pop
mov
or
stos
adc
mov
mov
fsubl
lgs
push
add
mov
movsb
push
jmp
pop
cmpsl
in
jmp
add
dec
adc
leave
sub
movsl
xorb
sub
lods
adcl
loope
mov
movsb
or
mov
dec
call
in
ja
or
mov
dec
in
lret
call
pop
or
xchg
and
lds
leave
lods
lock
xor
shll
cmpsb
fists
je
js
mov
sub
shrl
mov
rcr
hlt
push
mov
sti
and
les
dec
ja
pop
cld
sub
rol
imul
adc
xchg
cmc
xor
dec
dec
dec
cmc
cmp
mov
fisubs
fcoml
pushf
adc
pusha
and
daa
push
mov
sub
lock
lock
add
imul
mov
xor
jle
jmp
sbb
sbb
leave
xchg
mov
add
in
aad
outsb
pop
inc
loope
cs
mov
lock
mov
in
xor
jo
mov
shlb
xchg
pop
mov
dec
loope
shlb
pop
cli
and
hlt
lret
fwait
test
xor
aam
inc
fs
adc
xor
repnz
add
sub
leave
addr16
push
cld
rorl
pop
mov
fisubs
or
movl
jns
adc
adc
mov
add
in
leave
pop
adc
idiv
mov
jle
mov
in
adc
inc
sti
xor
push
dec
movsl
push
iret
lea
inc
scas
xchg
jne
jp
cld
imul
ffree
inc
add
stc
inc
fdivrl
arpl
test
xchg
mov
cmc
and
sbb
hlt
fwait
pop
orb
add
jge
sub
mov
jnp
out
or
ficoms
aaa
sbb
xor
enter
xor
mov
dec
fists
popa
pop
jecxz
insb
pusha
pushf
lcall
in
sbb
and
daa
movsb
fwait
dec
adc
jle
pop
mov
xchg
rclb
aaa
xchg
scas
lret
inc
fists
inc
adc
cmpsl
inc
pushf
jle
adc
push
mov
mov
sbb
cmp
aas
push
mov
cld
mov
pop
xor
mov
xor
or
call
enter
or
imul
ljmp
jge
cmp
sti
xor
jo
fisttpll
xor
push
pop
jmp
cli
js
xor
lcall
mov
cmp
xor
push
movsl
jae
jns
out
xlat
icebp
push
sar
and
push
cmpsb
pop
dec
es
lods
stc
addr16
cs
mov
fwait
jp
jge
sub
adc
jnp
xchg
outsb
mov
in
mov
jbe
in
int
ficoms
iret
subl
roll
pop
scas
cltd
repz
lods
mov
or
hlt
sub
aas
and
cli
shl
out
push
mov
test
std
xor
push
cli
inc
stc
mov
ljmp
sub
sub
in
je
cmpsb
pop
sbb
iret
lret
xchg
pop
ret
into
ret
rorb
sub
out
inc
in
and
in
sbb
ret
sbb
or
out
stc
iret
or
pop
sbb
je
or
push
inc
or
out
jecxz
and
xor
lea
xchg
mov
jp
push
jae
aam
hlt
mov
sub
mov
mov
push
add
mov
inc
gs
pop
push
arpl
xchg
dec
mov
mov
mov
mov
shlb
dec
iret
push
cltd
mov
adc
mov
mov
cli
nop
pop
sub
cmp
and
shl
adc
loop
xchg
addr16
sub
cli
imul
cwtl
idiv
lcall
pop
and
dec
aam
push
sti
popf
mov
and
out
or
or
xchg
dec
inc
sbb
sbb
fsubrs
xor
dec
pop
mov
cmp
cmpsl
push
or
stc
push
xor
or
mov
fiaddl
test
call
add
js
push
mov
out
jmp
mov
jnp
cltd
inc
or
xlat
jae
loope
sarb
mov
mov
aaa
popa
loopne
fsub
push
pushf
cmc
aas
pushw
repz
jns
dec
mov
xor
mov
icebp
xor
mov
jne
ret
scas
dec
xchg
ss
ret
imul
gs
xchg
icebp
iret
aaa
ljmp
sbb
ret
aam
lods
mov
int3
push
jg
or
imulb
idivl
cwtl
sti
mov
ds
mov
ljmp
inc
enter
inc
das
jecxz
cltd
mov
mov
lret
dec
push
and
addr16
iret
jnp
mov
test
cld
insl
xlat
pop
push
push
mov
out
scas
in
dec
mov
lea
cmpsl
push
xchg
aaa
sbb
and
push
jp
std
leave
in
bound
jb
mov
pop
sub
shrl
jne
jne
mov
jle
xchg
mov
xchg
shlb
adc
adc
cmp
lcall
xchg
ljmp
pop
ss
out
push
outsb
mov
mulb
sahf
inc
pop
add
ret
mov
fbstp
in
sub
shll
or
push
sub
out
loope
insb
stos
sbb
jb
sbb
pop
in
or
mov
fstps
fisubl
adc
popa
add
mov
dec
lds
dec
idivl
cmpsl
add
sbb
cmp
sub
clc
push
in
cld
jae
xor
cmc
mov
pop
loopne
shll
mov
out
lahf
sbb
mov
xlat
push
hlt
loop
mov
sub
or
and
ljmp
mov
out
pusha
imulb
jecxz
les
pop
fucomi
push
push
ret
push
daa
hlt
sbb
pop
mov
arpl
cmc
sbb
pop
mov
mov
std
das
xchg
jb
lock
jbe
sbb
sbb
inc
mov
push
sbb
cltd
and
mov
dec
or
add
xchg
sbb
xor
and
cwtl
push
std
mov
es
fisubs
inc
lea
stos
clc
fildll
clc
xchg
or
adc
or
out
adc
mov
or
les
xor
outsb
test
cs
fisubrs
leave
xchg
xchg
sub
mov
push
enter
xchg
push
setp
jb
mov
or
loop
or
push
mov
xchg
lock
push
pop
sysenter
mov
add
push
push
sub
ja
pop
lcall
inc
sbb
cmpsl
mov
movsl
in
ret
mov
stos
push
xor
inc
or
movsb
pop
pop
pop
inc
xchg
cld
dec
es
shl
rcll
popf
ror
aam
test
cmp
stc
cmp
xchg
in
in
push
xlat
call
push
push
std
add
jp
mov
mov
cli
fsubrl
dec
negl
int
lret
iret
shrb
fdivl
pop
fs
addl
out
inc
adc
xor
push
dec
fldz
and
fnstcw
movsb
or
je
cmpl
jns
pop
ss
or
sub
data16
mov
orb
mov
mov
fiadds
lret
jne
mov
cmpsl
dec
fnstcw
loope
mov
adc
out
or
adc
fdivl
lret
sbb
and
es
stc
add
sub
xchg
push
enter
and
ds
mov
mov
insl
stos
mov
push
dec
jg
das
xchg
je
pop
or
lock
mov
mov
notl
std
roll
fs
inc
iret
push
dec
xchg
or
call
mov
fisttpll
popa
aad
mov
lods
in
mov
arpl
test
xor
int
push
push
push
or
pop
pop
mov
push
push
adc
int3
out
fs
out
aad
and
or
and
mov
sbb
aas
cmp
stos
loop
int3
iret
popa
stos
mov
cmc
sbb
mov
lcall
ljmp
jae
dec
cmp
fwait
insl
pusha
and
out
fdivrl
push
mov
cmpsl
adc
popa
pop
adc
hlt
dec
in
leave
inc
jmp
push
data16
inc
pusha
stos
scas
pop
jo
sbb
sahf
jge
pop
mov
xor
cmp
sbb
ljmp
sbb
push
je
popa
xchg
push
cli
add
cwtl
adc
add
sbb
mov
jns
packsswb
imul
les
sahf
sub
aam
imul
and
inc
pushf
jnp
pop
jg
icebp
pop
scas
repnz
aas
mov
outsb
add
and
jae
inc
mov
test
sub
xor
std
arpl
pushf
inc
dec
roll
enter
lret
add
out
jb
je
xor
fisubrs
int3
iret
xchg
test
int3
popf
jnp
adc
mov
mov
push
lret
jge
pop
mov
mov
fcoms
lea
std
testb
sbb
xor
jbe
and
mov
mov
inc
divb
pop
sarb
inc
jmp
out
test
popa
inc
stos
cltd
cmp
test
mov
inc
pop
sbb
movsb
andl
arpl
dec
loop
ret
fdivr
xchg
iret
dec
outsb
fistps
imul
out
mov
push
btr
roll
out
push
mov
jg
mov
loopne,pt
xlat
jb
dec
sbb
in
inc
shll
fisubrl
pop
inc
out
lds
sub
add
mov
pop
xlat
cwtl
pop
mov
in
ret
sarl
sub
xor
fs
test
cmpsb
lahf
cmpl
push
xor
pushf
shrb
pop
lock
push
jo
inc
jg
cmp
dec
cmp
in
inc
mulb
sbb
push
int3
push
xchg
in
jecxz
and
push
inc
jns
sub
rorb
std
xor
push
mov
hlt
cmp
addr16
sbb
jle
mov
mov
xlat
dec
ficompl
inc
pop
and
movsl
dec
in
jge
movsl
mov
repnz
pushf
cld
mov
pop
ss
or
xor
mov
test
inc
test
xchg
rcrb
sbb
fdivl
jnp
cwtl
enter
add
cld
and
rclb
jmp
xchg
test
inc
test
xchg
je
scas
cmp
push
dec
scas
push
mov
mov
and
mov
movsb
imul
aam
sub
xor
mov
inc
cwtl
inc
mov
bound
mov
movsl
jle
mov
push
shll
jae
sbb
pusha
xchg
sbb
mov
testb
aaa
rcr
sti
subl
sbb
les
sub
xlat
sbb
pop
xchg
and
mov
stos
add
inc
cmp
xor
test
dec
mov
test
out
cli
jp
mov
jg
jp
push
xor
sbb
or
jae
jge
mov
enter
test
xchg
mov
cs
sbb
lea
jle
push
jl
xchg
out
xchg
loope
sub
sbbb
or
jp
jno
cmp
lods
sub
xor
mov
scas
push
stos
xchg
sahf
cmp
lock
push
cmpb
push
loopne
stos
lcall
pop
mov
add
icebp
add
pop
or
mov
and
mov
and
adc
in
adc
decl
les
xor
mov
fists
or
out
jnp
aad
mov
imul
sub
mov
cmp
push
or
xchg
push
scas
int3
push
mov
add
out
cmp
mov
es
cmp
imul
outsb
je
mov
push
or
or
rcrl
sar
xor
shl
cmp
scas
mov
ja
inc
xchg
and
fwait
mov
push
cmp
mov
xchg
mov
outsb
cmp
movsb
lahf
in
xchg
or
pop
das
out
jae
mov
sbb
and
sahf
fsubl
and
mov
into
cmc
mov
test
push
pop
std
sarb
call
shll
andl
dec
adc
ljmp
xchg
jle
xor
mov
dec
push
nop
pop
js
sahf
or
negl
jnp
notl
fldenv
lret
add
inc
sub
xchg
xchg
sub
xchg
inc
outsl
add
pop
adc
mov
or
fs
leave
loope
sahf
fdivs
jns
sub
push
data16
xor
pop
out
in
flds
rorl
mov
pop
add
push
in
add
out
and
mov
jno
decb
lock
insl
icebp
lret
xchg
shll
dec
xor
rorl
jl
add
inc
fmuls
mul
outsb
mul
cmpsl
imul
adc
inc
ja
sbb
fstpt
repz
ds
andb
arpl
push
cmp
mov
dec
mov
push
hlt
xchg
mov
mov
repnz
adc
xchg
std
inc
dec
int
jbe
pusha
hlt
mov
dec
pop
mov
or
xchg
sbb
push
fwait
dec
mov
sub
pushf
scas
scas
mov
unpckhps
and
pop
aad
nop
adc
or
dec
mov
mov
mov
inc
jno
jle
popf
lret
int3
sbb
insb
add
aam
loop
add
jle
std
je
in
pop
stos
or
jbe
adc
pop
ret
inc
fwait
cmpsb
cmpsl
test
or
stos
imulb
ret
jne
sub
clc
pop
push
xchg
cmp
ret
ds
adc
cmpsb
imul
adc
adc
es
push
adc
inc
push
cli
or
or
dec
push
ljmp
mov
movsb
push
xchg
lods
pop
mov
lods
fcoms
push
sbb
dec
test
sti
push
in
jmp
adc
mov
lcall
push
outsl
in
mov
sarb
sbb
testl
mov
ret
xor
addr16
aas
test
stos
lds
divb
mov
iret
mov
xchg
lret
into
mov
loop
daa
adc
insl
add
xchg
pop
xor
mov
mov
pop
xor
out
dec
xor
sbbb
xchg
lods
into
sub
insb
jo
iret
cs
push
sti
sbb
push
sahf
dec
je
fcmovne
mov
inc
add
dec
xchg
adc
fdivs
fidivrl
aad
xchg
mov
xor
lods
push
out
pop
pop
sahf
leave
xor
xorb
je
xor
add
mov
pop
fs
jae
add
je
xor
insb
push
add
and
mov
push
enter
iret
add
or
jns
popf
fisubrs
or
or
jno
jo
mov
sahf
sub
dec
mov
or
dec
mov
loope
je
adc
xchg
outsl
adc
jne
addr16
bound
out
insl
mov
fcompl
movsb
mov
pop
or
je
pop
dec
sub
push
aam
and
scas
add
mov
stos
pop
imul
sbb
cmpsb
push
push
fsubrl
sub
xchg
mov
dec
mov
aas
pop
pop
push
xchg
pop
inc
add
xor
mov
nop
insl
es
and
ja
ss
loopne
aas
sbb
jno
aam
jge
or
fucomip
icebp
scas
lcall
pop
add
or
popa
cwtl
ret
xor
and
mov
mov
cltd
lret
pop
sbb
mov
sbb
push
or
in
hlt
ret
jl
or
xor
inc
mov
pop
cmp
scas
mov
add
das
addl
js
ret
adc
and
jp
fisttps
ror
addb
jne
dec
out
outsb
sub
xchg
push
push
sub
inc
into
pop
pop
jnp
add
int
stc
inc
mov
loopne
rcrl
movsb
jmp
test
mov
hlt
mov
cltd
mov
xchg
jmp
push
pop
add
jbe
xor
xchg
ljmp
jb
aam
repz
adc
jle
cmp
mov
mov
xchg
andnps
push
in
imul
cmp
mov
jno
pop
add
dec
lret
add
sbb
xchg
xchg
scas
lahf
adc
notl
aas
fildll
jg
inc
push
inc
push
xchg
pop
jge
aas
mov
les
les
inc
sbb
push
mov
cmp
xchg
adc
arpl
repz
push
jg
pop
jns
mov
cmp
jmp
mov
imul
xor
xchg
js
ret
lods
lahf
outsl
adc
cmpsb
lret
es
fbld
rcr
enter
xor
nop
cmp
clc
cltd
imul
xor
fnstcw
fs
mov
into
out
adc
push
fcompl
popf
adc
jbe
lods
andl
int3
fidivrs
xor
es
aad
nop
verw
mov
in
shll
push
aas
adc
inc
push
sahf
out
loopne
cld
test
out
or
add
push
mov
and
mov
pop
pop
mov
rcrb
push
ss
scas
sbb
add
mov
push
xchg
add
sahf
sub
fcmovb
mov
lcall
mull
es
jbe
sub
daa
repz
sub
sub
xchg
lahf
je
dec
sahf
xchg
bound
bound
rorl
or
xlat
lea
out
daa
test
push
jecxz
inc
inc
cmp
mov
pushf
je
insb
cmp
mov
xor
dec
fucomp
sub
daa
dec
xchg
dec
sub
scas
insl
push
js
aad
xor
mov
pushf
push
or
push
aam
movsb
xor
imul
sub
or
adc
xchg
sbbb
repz
movsb
mov
dec
inc
or
test
dec
mov
jbe
lock
add
data16
add
scas
push
xchg
icebp
or
arpl
shll
adc
cmp
mov
inc
xchg
and
mov
jg
dec
sub
das
sub
sbb
mov
sbb
ds
or
inc
data16
lcall
push
jl
jbe
pop
sbb
push
jb
mov
or
outsb
clc
loope
jne
mov
lock
and
in
fildll
inc
fcompl
xlat
add
push
push
lods
loope
aad
sub
icebp
stc
ja
stos
jo
ds
popf
pop
stos
pop
add
add
pop
loopne
mov
fwait
pop
sub
jbe
and
dec
test
adc
inc
bound
lock
repz
add
mov
sub
sarb
mov
and
ret
sub
dec
lret
mov
inc
pop
loopne
aad
lcall
mov
fsubs
loope
sub
fildll
and
roll
add
xor
fucomp
mov
xor
pop
sbb
ljmp
xor
push
xchg
mov
pop
xchg
shlb
enter
cmp
xlat
xchg
movsb
aaa
push
cwtl
xlat
in
pop
add
push
popa
mov
call
adc
push
dec
mov
rorl
mov
adc
xor
stos
sub
out
sti
movl
aaa
rcr
shlb
rcrb
test
or
out
jle
push
cmp
ds
in
sahf
lods
pushf
jno
jns
mov
pop
lahf
scas
gs
dec
sub
xor
mov
lret
pop
test
mov
add
mov
push
cmp
dec
ficoml
outsl
outsl
lcall
cmpsb
pop
jmp
lds
out
mov
imul
cmpsb
loop
inc
add
dec
in
jle
fistl
pop
stos
mov
out
iret
jbe
and
outsb
ds
xlat
lcall
bound
ja
in
lds
mov
into
shll
sub
xchg
cmp
sahf
adc
adcb
scas
xchg
test
jg
jae,pn
mov
cmp
mov
rcll
inc
aas
and
pop
es
dec
mov
mov
mov
push
pop
inc
push
xor
negl
cmpsl
fmull
popf
xchg
getsec
ss
lahf
cmc
fst
mov
test
lcall
insl
test
popa
insl
adc
sbb
mov
scas
xchg
add
or
scas
lods
mov
ficoml
inc
stc
jecxz
cmp
add
mov
fcompl
jnp
mov
xchg
xor
mov
xor
cwtl
stc
push
dec
int
sub
sti
adc
xor
jecxz
inc
xlat
push
ret
push
xchg
in
pop
fistpl
clc
aam
lods
iret
push
adc
insl
jle
pop
adcl
jmp
nop
cmp
std
add
ds
pop
lock
sbb
lds
and
cwtl
mov
jbe
sub
mov
sahf
jge
push
pop
fistps
sub
lds
pop
sahf
mov
sbb
ljmp
push
je
pushf
dec
jecxz
data16
dec
cmpsb
lea
add
mov
rolb
inc
jns
cmp
es
loopne
movl
cli
jg
push
mov
xchg
push
push
adc
mov
cli
int
addr16
test
jg
fadd
scas
mov
jmp
repz
test
jne
fwait
ljmp
jne
push
les
cli
push
jmp
adc
xchg
cs
std
dec
sbb
push
jmp
rolb
les
enter
out
icebp
and
ret
sti
pop
hlt
push
dec
inc
pop
nop
cwtl
push
sbb
mov
push
jns
pushf
test
lcall
fnstcw
jge
sub
outsl
leave
dec
xor
add
nopl
mov
xchg
sbb
aaa
jg
enter
outsb
jle
test
or
jp
xlat
cmp
les
mov
orl
jecxz
push
xor
inc
or
mov
sub
test
xchg
mov
inc
jp
ficoms
sarl
cmp
in
enter
shl
imul
out
mov
aaa
cmp
inc
shlb
nop
sub
aam
push
cltd
arpl
xor
gs
mov
lahf
xchg
gs
or
mov
mov
ficoml
scas
in
mov
repz
lods
sub
push
pushl
mov
inc
cmp
fistpll
and
cs
addr16
cmp
add
mov
push
mov
jne
sbb
adc
ret
aaa
xchg
aas
sbb
add
mov
mov
lret
jo
add
jl
lea
adc
add
push
sub
insb
add
dec
add
lods
rcrb
outsb
jmp
std
pusha
xlat
andb
cmpsb
sbb
jl
and
in
shll
jbe
mulb
sub
ret
sbb
je
into
mov
popf
sub
and
and
cmc
mov
lret
lcall
imul
in
out
or
adc
or
dec
push
mulb
ficoms
and
mov
in
or
inc
push
adc
mov
xchg
sbb
jmp
aam
popf
iret
cld
or
and
jnp
add
aas
rcll
mov
add
cltd
pop
sar
ja
inc
mov
lcall
sti
inc
cmpsb
in
xchg
mov
pushf
pop
mov
dec
cmovge
stc
or
xchg
or
cmpl
mov
push
bnd
pusha
or
or
mov
shl
pop
adc
rclb
mov
cmc
ret
nop
sbb
mov
das
pop
out
add
inc
jne
cmp
jl
mov
insl
in
ret
dec
pop
jecxz
sbb
sbb
enter
mov
sahf
push
arpl
cld
push
lret
sbbl
pop
loope
cmpsb
jo
test
mov
clc
lock
addr16
hlt
and
loope
cmp
icebp
mov
fidivrl
xchg
jge
insb
jno
ds
leave
lock
int3
mov
mov
lds
mov
into
inc
sbb
xchg
or
hlt
jl
scas
inc
adc
xchg
adc
loope
sbb
mov
pushf
dec
out
jae
repnz
and
aaa
jb
aad
dec
dec
insl
mov
out
jle
adcb
ss
mov
daa
adc
sub
adc
lret
jmp
mov
hlt
push
cmp
ds
push
mov
pop
fistpll
sub
xchg
cmp
or
test
out
jecxz
bswap
jbe
sbb
add
pop
lock
pop
mov
in
mov
push
mov
pop
sti
cmpsl
scas
icebp
or
dec
inc
dec
jne
das
aaa
xchg
inc
or
or
push
add
popa
or
xchg
daa
lcall
push
add
test
inc
mov
daa
fs
shlb
lds
test
shll
push
dec
data16
pop
cmpsb
inc
sub
xchg
cld
mov
je
out
mov
cld
lret
shrb
stos
jmp
add
mov
out
jnp
cwtl
fisubrs
cmp
jmp
jecxz
mov
lods
push
repz
mov
add
mov
push
incb
in
ljmp
outsl
sahf
or
call
xchg
inc
mov
dec
adc
inc
jge
cmp
pop
and
movsb
scas
jne
jl
in
insb
fsub
es
mov
or
add
add
push
jecxz
int3
and
jbe
mov
mov
cmp
xchg
outsl
les
icebp
test
mov
and
mov
std
in
pop
dec
xor
stc
and
ds
jno
icebp
pusha
push
dec
fdivrs
lds
int
jge
andb
push
and
mov
sub
push
push
subb
pop
dec
std
cmpsl
pusha
repz
mov
xor
stc
sbb
mov
mov
shl
and
ficomps
mov
data16
shlb
fcom
mov
mov
push
aas
inc
je
leave
imul
inc
fstl
fwait
add
sbb
xor
sub
add
insb
xchg
jge
dec
mov
dec
lea
adc
jae
iret
mull
clc
mov
fwait
movsl
xor
sti
cmc
orb
in
leave
nop
outsb
test
sbb
sub
cli
lods
stos
sub
cmp
bswap
or
sub
in
sbb
pop
aas
aad
pop
or
sbb
xor
sbbb
mov
div
mov
jno
stc
push
push
jg
mov
xor
or
jp
out
mov
ds
test
sahf
cmpsl
divb
icebp
or
mov
roll
lret
mov
nop
and
add
bound
xor
mov
xor
popa
add
mov
pusha
incb
sbbb
cmc
or
ret
mov
sbb
das
nop
lahf
xchg
inc
mov
sbb
xor
and
in
xchg
scas
mov
fwait
pop
dec
aaa
mov
cwtl
in
cmp
cmpsl
fdivrs
push
xchg
jb
dec
nop
lods
hlt
mov
xchg
jecxz
xor
lock
xchg
or
cltd
push
push
ret
aaa
add
cmc
xchg
in
mov
jl
jns
int3
sub
cmp
test
push
mov
daa
insb
and
add
and
imul
add
ds
xchg
fcomps
jae
add
lcall
mov
add
imul
stos
inc
inc
scas
inc
clc
and
out
jbe
shrb
cli
mov
lea
fldcw
and
fldenv
jmp
mov
fisubrs
test
xchg
adc
pop
ficompl
push
xchg
adc
aas
sub
xchg
jg
mov
push
pop
push
add
jle
daa
stos
or
int3
mov
das
shlb
mov
xchg
bound
xor
or
dec
cmc
lods
mov
stos
mov
mov
push
push
adc
test
stos
stos
lret
dec
add
outsb
push
mov
in
cmc
jg
data16
xor
bound
and
pop
inc
sbb
js
inc
push
push
and
and
lods
xor
sub
icebp
mov
and
das
mov
mov
out
mov
mov
pusha
mov
add
xor
pop
push
in
or
xor
icebp
dec
pop
push
add
mov
sub
sbb
repnz
pop
and
mov
cmpsb
xlat
lahf
movsl
cmp
push
test
lret
jae
push
ljmp
test
push
inc
add
stc
aas
cmp
ja
and
cmp
xor
lods
popa
adcl
cmp
mov
movsl
movsl
insb
loope
fldenv
test
fdivs
or
push
mov
or
dec
push
xchg
jge
fs
mov
pusha
fisubrl
imull
mov
mov
xchg
mov
popa
leave
insb
pushf
lods
dec
or
addr16
pop
adc
sbb
repnz
mov
add
fildll
data16
jp
xor
arpl
rol
hlt
mov
jp
add
xchg
dec
out
push
sub
pop
ret
fs
add
into
cwtl
mov
push
sub
mov
repz
ja
bound
and
pop
xlat
pop
mov
ud2
cmp
ds
ljmp
mov
push
and
cmp
dec
dec
jne
push
cmp
xor
call
je
pop
lds
cmp
sahf
sub
addr16
loope
and
push
lcall
sbb
jecxz
dec
shlb
mov
js
xchg
test
fsubl
aas
sbb
mov
movsl
in
test
pop
mov
mov
mov
mov
mov
mov
popa
pop
jb
mov
adc
push
push
jp
fiadds
or
imul
out
pop
adc
or
dec
loop
xchg
insb
lahf
jae
add
aad
xchg
dec
or
es
mov
loope
imul
xchg
cmc
outsl
jo
aad
imul
out
mov
xchg
es
pop
pop
adc
xor
push
jns
aas
int
rcrl
cld
imul
insb
out
pop
pop
xchg
cmpsl
ja
rol
jbe
push
or
sbb
idivb
inc
mov
bound
inc
lcall
cmp
int3
push
popf
xor
jp
in
addl
push
fwait
shll
fisttpl
jb
cli
inc
leave
repz
mov
inc
jmp
orl
loop
int3
int3
mov
xchg
or
lahf
dec
and
scas
push
ja
stc
jg
sub
mov
movsl
pusha
push
pop
push
and
jne
xchg
inc
in
outsb
xchg
dec
jno
add
or
jo
fistpll
pop
mov
mov
and
pop
jnp
popf
inc
and
test
xchg
xchg
sub
push
loop
jns
mov
cmp
mov
push
sub
mov
inc
cmp
fstl
repz
jecxz
and
jae
fstl
stc
add
sub
inc
inc
ss
test
or
xor
xchg
sbb
mov
inc
or
punpckhbw
mov
or
xor
leave
je
enter
rcr
mov
sarb
bnd
mov
add
leave
and
xor
in
faddp
shll
jns
scas
mov
shrb
xor
popf
xchg
jl
jg
cltd
add
repz
je
icebp
push
aad
insb
into
icebp
xchg
ljmp
jb
jmp
sub
shrl
in
cltd
mov
push
js
pop
and
ret
and
or
jns
gs
sar
je
mov
sahf
cs
dec
test
mov
inc
fldcw
mov
mov
ret
cmp
adc
sub
sbb
das
dec
addr16
fwait
lock
hlt
fwait
int3
adc
testl
cmp
lods
and
sbb
call
rcrl
xchg
addr16
daa
into
fistps
jle
xchg
sbb
cmp
xorb
cmpsl
lahf
push
add
or
cvtpi2ps
cmp
pusha
das
lock
pop
sbb
xor
jne
jo
mov
subb
imulb
mov
movsl
xor
xchg
arpl
mov
jl
das
clc
add
dec
cmpsl
xchg
js
sbb
xor
outsb
mov
cs
pusha
icebp
xchg
stc
lods
or
out
dec
outsb
dec
enter
icebp
jle
out
jo
jle
dec
and
push
cmp
inc
shl
test
ja
stos
lods
test
add
das
adc
popf
inc
leave
hlt
test
xchg
xchg
insl
xlat
into
xchg
xlat
das
xor
cmp
dec
retw
jle
cmp
jo
xchg
ret
or
fidivrs
inc
push
clc
jp
lahf
sbb
jne
mov
push
lcall
or
subl
cmp
scas
ret
fldt
mov
cmp
rclb
fcmovnb
xorb
ficompl
mov
cs
je
add
stos
nop
push
mov
int3
jp
adc
push
or
and
shrb
fwait
push
add
add
dec
movsb
cwtl
leave
movsl
dec
aad
jae
add
stos
cs
fidivrs
mov
mov
adc
mov
dec
js
add
cwtl
jbe
int3
xorl
xchg
jno
push
xchg
test
mov
es
and
pop
addr16
inc
fistpll
or
push
lret
push
pop
hlt
sub
mov
faddl
imul
sbb
cli
jge
outsl
xchg
sbbb
pop
dec
or
rolb
inc
out
cli
sbb
sub
push
sub
push
dec
sub
nop
js
stc
gs
into
ljmp
xor
lock
mov
sub
lock
push
lea
jmp
and
cmp
ja
cwtl
push
mov
cs
mov
and
mov
cmp
lahf
jmp
popf
scas
xchg
adc
pop
outsl
dec
rclb
rcrl
and
mov
cmp
push
aam
sbb
fs
xor
clc
dec
sub
test
mov
inc
loope
jo
aad
fstl
sub
into
fcom
xor
sub
mov
cmp
adc
stos
cwtl
sarl
mov
out
out
je
adc
jge
test
ljmp
mov
add
dec
cli
add
add
add
push
jae
or
fwait
ds
xlat
inc
loopne
ljmp
mov
mov
mov
lea
pop
dec
inc
dec
cld
xchg
jmp
lods
cmpl
enter
push
repz
push
add
lods
cmp
lcall
outsb
cltd
adc
xchg
mov
dec
add
mov
mov
mov
inc
jno
xchg
into
hlt
rorl
negl
push
sti
call
or
ret
or
outsb
and
xor
test
out
outsl
test
sub
cmpsb
repnz
xchg
add
lods
les
call
push
cmp
aam
int
sbb
sbb
or
cli
add
insb
orb
notb
pop
fcompl
je
adc
shrl
shlb
pushf
mov
in
rolb
lds
or
out
adc
mov
pop
and
sbb
aad
lcall
xchg
loop
loope
fidivs
ret
mov
lock
lock
and
addr16
stc
je
scas
sub
jnp
push
sbb
out
shrl
xchg
or
fisubrs
repnz
mov
pop
je
jae
cmp
cli
dec
cmp
lds
sahf
mov
repnz
adc
pop
inc
insb
loopne
cmpsl
fucomp
sub
mov
add
or
push
ljmp
cmpxchg
xchg
mov
leave
fwait
outsb
xor
rclb
fsubrs
jecxz
xchg
jg
movmskps
xchg
mov
stos
dec
push
arpl
ds
inc
insl
mov
lea
jmp
cli
callw
popa
pop
lcall
imul
gs
lret
ret
bound
mov
xor
imulb
add
je
push
sub
cld
dec
shl
shll
xchg
inc
push
cmp
lea
pop
fsubs
fidivl
jne
lods
adc
lods
jl
lock
add
add
dec
in
and
mov
loope
rclb
mov
es
xor
xor
jo
arpl
movsb
dec
rclb
or
sbb
jnp
mov
std
in
adc
dec
add
fldcw
leave
jp
sbb
push
xchg
cmp
jno
mov
xchg
mov
fcmovu
pop
mov
jne
sub
loop
jnp
adc
leave
stc
rol
mov
cld
addr16
push
daa
idivb
or
xlat
cmpsb
addr16
incl
fsubl
rcll
cmc
xchg
mov
sbb
enter
push
sbb
jge
mov
lods
cmpl
movsl
or
or
push
jle
lret
iret
jns
rorb
pushf
fwait
jo
adc
cmpb
sub
cli
add
jae
sar
add
repnz
test
sub
jg
es
scas
jecxz
push
jo
bound
sbbb
cli
xchg
outsl
ja
jbe
les
jg
iret
jp,pt
popa
pop
maskmovq
jg
xor
mov
push
push
mov
hlt
incb
add
jmp
in
fmul
adc
iret
xlat
rcrl
and
in
aad
inc
sub
dec
xchg
into
and
arpl
call
jle
shlb
out
test
test
xor
or
xchg
jge
push
pop
xor
mov
cmpsb
popf
leave
mov
push
add
xor
push
int
push
icebp
push
fidivl
pop
outsb
xchg
push
and
iret
pop
or
clc
xlat
lods
movsb
jno
mov
nop
mov
pop
pop
jo
mov
incl
daa
ljmp
adc
pushl
ret
dec
data16
jl
mov
mov
data16
xchg
add
pop
jp
or
dec
pop
loope
out
mov
and
ss
shrl
jle
pop
fwait
mov
xor
adc
or
pop
cmp
sbbb
ds
adc
cli
pop
pop
shr
jno
test
sbb
pop
dec
pop
mov
xchg
dec
dec
int3
and
jmp
repz
loope
xor
aas
inc
add
iret
pop
sub
ret
cld
sub
mov
mov
cs
push
popa
xchg
rorb
or
aas
pop
inc
iret
push
push
pop
sbb
std
ret
mov
xchg
cmp
repnz
shrb
push
lods
ds
lret
jmp
inc
aad
mov
sbb
mov
icebp
and
push
push
insb
jns
push
push
pop
popf
mov
mov
jl
push
push
sub
sub
sbb
xchg
cmp
and
pcmpgtd
inc
jb
dec
mov
int3
sbb
sub
movsl
push
dec
cld
xlat
gs
out
jg
inc
push
pop
test
mov
dec
lods
mov
jb
mov
xchg
imulb
pop
or
mov
jl
stc
add
adc
xchg
jge
ja
imul
or
jne
push
je
dec
jo
cmpsb
xchg
sbb
jge
sub
pop
push
adc
mov
movsl
inc
pop
lds
or
mov
fs
imul
inc
mov
loope
fwait
xchg
mov
sbb
test
leave
xchg
div
sub
stos
in
insl
stc
mov
clc
aam
mov
mov
inc
mov
in
add
mov
mov
stc
icebp
push
inc
repnz
in
pop
jnp
and
roll
mov
add
lock
scas
repz
or
sbb
into
popa
ret
cmp
mov
mov
sbb
sub
push
and
inc
test
in
mov
imul
in
stos
cmpsl
adc
hlt
clc
sti
fsts
inc
xchg
iret
js
mov
cmp
lea
psrad
fdivs
push
fstpl
add
ror
rclb
fnstenv
scas
xor
push
movsb
dec
dec
frndint
in
mov
sarl
popa
jno
jno
push
outsl
lods
xor
jp
jo
cmc
xlat
mov
imul
dec
ret
xor
aas
add
cmp
mov
add
in
xor
pop
ja
or
xchg
into
or
mov
cmp
mov
inc
shr
mov
mov
rol
inc
mov
aam
loope
addl
xor
int3
inc
adc
mov
jnp
cmpsb
push
or
daa
jg
ret
mov
or
mov
imul
push
xchg
rorb
scas
sahf
out
push
add
std
dec
cmp
lea
pop
pusha
mov
scas
aam
xor
adc
xlat
xchg
fiaddl
xchg
mov
daa
mov
pop
emms
int
pop
mov
gs
inc
or
roll
jnp
pop
and
ds
nopl
sbb
sub
xor
sbb
lea
push
aam
push
lea
inc
sbb
shlb
in
out
in
loopne
out
jmp
cmp
and
inc
mov
and
cmpsl
or
jle
xor
addr16
movsl
in
js
xorb
fsub
popa
arpl
mov
in
into
mov
lods
inc
sahf
in
jl
adc
mov
sti
mov
mov
leave
in
test
sub
fs
mov
icebp
lcall
jmp
cmp
out
outsl
mov
and
addr16
pop
movsb
mov
shll
js
lea
ret
jne
and
dec
mov
aam
scas
inc
jno
mov
sahf
mov
rolb
pop
inc
sti
insl
ss
add
xchg
jo
mov
repz
and
mov
push
pop
or
add
adcb
out
adc
les
sarl
aaa
aam
mov
popf
inc
stos
dec
addl
in
fidivrs
arpl
push
sub
shl
dec
sub
adc
lret
fwait
push
lods
mov
adc
mov
data16
sub
push
push
mov
es
ret
js
dec
push
xor
hlt
ljmp
mov
arpl
insb
lcall
xor
das
sbb
cwtl
pop
lahf
push
ss
mov
pop
cwtl
inc
notl
andl
xchg
movsb
lea
and
pushf
sahf
dec
pop
aaa
cmp
jo
or
addr16
or
das
int3
ret
dec
pop
popf
imul
push
lahf
fdivrl
cli
sbb
and
call
fiadds
outsl
jne
shll
dec
scas
fdivrs
dec
dec
sub
and
push
loop
test
dec
in
movsl
cltd
mov
hlt
jae
popa
inc
and
test
ja
cld
xor
lock
clc
sub
push
bound
adc
adc
xchg
and
cld
xchg
das
sub
jmp
push
pop
xchg
mov
sub
sub
or
jne
jge,pn
fbstp
push
sub
addr16
popa
test
loope
cli
arpl
jle
das
mov
cli
adc
mov
pop
jecxz
jnp
mov
jmp
push
cwtl
cwtl
sub
into
sub
dec
fsubl
mov
push
jo
movsb
lds
mov
scas
ret
test
xchg
pop
hlt
icebp
inc
push
ret
shll
ljmp
add
sub
mov
inc
popf
cmp
movsl
inc
shlb
xchg
ret
iret
jl
mov
arpl
pop
cli
sbb
cwtl
stos
or
adcl
sbb
je
mov
cmc
nop
add
inc
loope
ljmp
pop
mov
add
loop
lahf
cmp
outsl
lea
push
lock
cmp
lods
push
add
cmp
xor
leave
inc
adc
add
jle
mov
pusha
outsl
imul
popa
or
add
mov
xor
pop
add
gs
xchg
or
js
inc
pop
mov
mov
xor
insb
sub
stc
rorl
scas
sbb
retw
jmp
mov
testb
dec
sbb
sub
imul
lock
cmp
inc
or
push
stos
pop
sbb
push
dec
lahf
mov
jno
xor
loopne
adc
popa
dec
lea
movsl
cwtl
jne
cmpsb
imul
pop
cmp
mov
lahf
dec
sbb
call
add
ret
loop
mov
idivb
xchg
sbb
mov
lret
popa
stos
jmp
data16
add
sbb
addr16
jbe
nop
push
lahf
dec
jb
or
or
jg
lret
mov
and
negb
je
dec
icebp
data16
lods
add
insl
cmpsb
xor
aam
and
call
jge
lcall
pop
mov
mov
and
or
aas
sti
push
subl
in
lods
push
loopne
imul
sbb
xor
jle
out
mov
pop
pushf
lahf
popa
or
sti
je
shll
out
and
mov
inc
adcl
sbb
and
fsubrs
js
inc
add
insb
mov
pop
xchg
fs
ret
or
std
xchg
push
push
and
mov
into
loopne
push
and
int
xor
cmp
lods
inc
dec
pop
int
in
push
sbb
fsubrs
xchg
sbb
mov
add
sub
ret
out
js
leave
jle
jmp
pop
add
jb
adc
jo
mov
push
mov
xchg
test
pusha
fstpt
test
fbstp
imull
cmp
fmul
mov
cmpsb
hlt
add
lcall
push
sbbb
sub
mov
xchg
and
or
ss
mov
inc
mov
mov
cmp
dec
aas
subl
mov
mov
jmp
ret
xchg
or
or
xor
bound
aaa
xlat
dec
pushf
xchg
lcall
cmp
xor
enter
mov
xchg
push
or
rcl
dec
lds
adc
into
scas
inc
shr
cmp
xor
add
sbb
arpl
mov
psubusw
aas
jns
adc
movsl
cmp
push
test
add
jo
xchg
arpl
ret
mov
jne
mov
iret
cltd
mov
shl
mov
jnp
adcb
pusha
pusha
ror
add
aad
push
test
push
lea
pop
push
addb
repz
pushf
xchg
mov
inc
ja
fsubl
cmp
mov
repz
fldenv
fidivrs
mov
iret
pusha
mov
fidivl
data16
xor
scas
mov
mov
cmp
imul
jl
fwait
cwtl
add
int
pop
mov
mov
sahf
inc
sub
inc
add
and
aas
push
sbb
dec
shll
daa
in
popf
jp
inc
push
into
push
stos
or
push
insl
jmp
mov
adcb
mov
and
mov
xchg
inc
test
xchg
fcomip
lret
cs
xchg
sti
jl
mov
xlat
aas
jg
inc
je
repnz
cs
mov
lret
xchg
lods
fnstenv
xchg
aam
mov
outsb
add
mov
sbb
sub
pop
cmp
cli
xchg
dec
xchg
jns
sub
lcall
nop
mov
lea
sbb
ror
scas
pop
fcoms
in
ds
gs
mov
cmp
push
les
push
das
jns
mov
loope
shl
out
mov
aaa
cmp
popa
fisttps
out
mov
xor
in
and
icebp
arpl
pushf
add
gs
mov
ror
in
pop
add
stc
mov
incl
movsl
push
mov
jmp
push
pop
lahf
lret
jg
jp
adc
push
xchg
shl
shr
inc
adc
leave
push
xchg
movsb
push
dec
push
mov
bound
mov
dec
cmp
jg
in
sub
sub
mov
test
scas
test
jnp
mov
int
iret
idiv
pushf
inc
sub
pushf
and
xchg
xchg
fs
add
mov
push
and
movsb
xchg
push
stos
xchg
int
push
jo
pop
jnp
js
js
push
sbb
pop
and
hlt
adc
jbe
cmp
or
push
movsb
mov
mov
xchg
add
jecxz
mov
pushf
xchg
div
mov
sbb
fistl
add
xchg
mov
enter
xchg
loope
pop
icebp
in
arpl
and
cmp
jecxz
add
lods
scas
loope
xor
add
nop
rol
push
enter
icebp
sbb
add
ds
or
cmc
test
and
rclb
aam
and
negl
or
adc
mov
jle
fisubs
add
sbb
stos
es
pop
icebp
cli
mov
cmp
stc
mov
adc
dec
sub
adc
or
or
jb
jmp
xchg
xchg
sub
rdpmc
pop
aam
mov
push
cwtl
and
out
push
fildl
iret
aam
fistl
mov
push
mov
add
lret
fwait
rclb
jl
jecxz
test
int3
push
mov
sbb
leave
and
cmp
fidivrl
mov
adc
subl
lea
push
loope
rcr
push
cld
adc
and
imul
movb
test
sti
jge
jp
adc
adc
shll
loope
je
mov
loop
xor
push
mov
sbb
jecxz
jle
test
subb
sub
dec
pop
pusha
xor
adc
popf
mov
jmp
insb
test
sub
and
adc
cmp
push
xchg
pop
inc
push
cmc
jge
sbb
mov
sbb
mov
or
cmp
shl
int
sub
cmp
fiaddl
mov
mov
lods
fistl
mov
and
stos
outsl
push
dec
inc
test
std
push
push
sub
xor
loope
inc
and
dec
ret
rolb
pop
fisubs
sub
pop
shlb
sub
cmp
push
add
orl
jmp
movsb
sub
lea
xor
adc
pop
inc
shr
jg
and
xchg
aad
iret
xchg
xchg
aaa
mov
xor
ret
daa
sbb
nop
jnp
dec
scas
arpl
xor
sbb
xchg
ret
cmp
mov
jg
rcll
dec
les
mov
and
outsl
jnp
push
pop
xchg
mov
mov
cmp
sub
testb
xchg
jp
in
in
jge
mov
mov
les
mov
mov
mov
and
cmp
inc
xor
aas
adc
push
cmp
lock
in
rolb
cmp
jg
inc
testl
inc
pop
cltd
cmpsl
push
in
outsl
out
xlat
fldcw
enter
mov
cmp
jnp
mov
ret
pushf
movsb
add
scas
js
iret
xchg
jge
aad
je
xchg
mov
inc
add
xchg
lods
mov
js
cs
cmp
out
or
out
dec
shlb
pusha
and
mov
sbb
in
in
jb
popf
je
movsl
divl
cmpl
xchg
xor
pop
ret
push
cmovae
and
cmp
mov
mov
and
stos
repnz
mov
push
sahf
out
insb
mov
ds
scas
xor
fisttpl
adcl
push
mov
push
out
test
shl
sahf
cmp
or
or
leave
movsl
test
push
mov
dec
pop
mov
sti
data16
mov
adc
jbe
jns
adc
adc
sub
xorl
xchg
or
sub
jl
xlat
adc
jmp
xchg
sub
push
pop
adc
sbb
daa
xchg
in
and
popf
cmpsb
in
icebp
push
loop
xor
les
daa
out
imul
mov
rcll
lock
cltd
int
jbe
mov
lds
mov
in
push
xor
popf
test
movsl
das
jne
fcomp
pushf
sahf
imul
xchg
cmp
xor
leave
lods
sub
aad
stc
aad
ret
pop
rcr
push
shlb
jo
enter
add
push
jmp
in
add
dec
mov
push
aad
lret
and
sti
daa
cmp
xor
inc
in
cld
sub
in
pop
icebp
jo
mov
mov
xor
pop
aam
or
jl
adc
mov
call
dec
and
notb
push
jle
add
dec
out
daa
mov
movsl
mov
mov
push
dec
out
arpl
sbb
jl
dec
xchg
cwtl
and
cmpsl
push
bnd
ja
pop
xchg
idivl
push
lds
jmp
pop
add
mov
sub
mov
jbe
mov
jb
cmp
mov
ljmp
addl
sbb
mov
add
dec
or
cltd
fcomp
roll
popf
mov
or
dec
sub
xchg
cmp
ret
cmp
es
or
mov
test
inc
dec
ret
push
dec
push
push
lods
cltd
mov
mov
xchg
lahf
mov
xor
jbe
jecxz
sbb
or
pop
push
mov
movsl
dec
dec
or
movswl
repnz
cmp
les
add
lea
out
push
dec
cltd
test
roll
pop
sbb
leave
gs
pop
ja
outsl
inc
mov
xor
out
lds
dec
add
inc
daa
mov
mov
inc
ret
jnp
aam
in
fistps
dec
jle
adc
mov
lret
push
jne
or
ljmp
push
stos
or
lret
movsb
push
pop
dec
pushl
jl
xchg
orb
loopne
test
adc
cmp
shrb
cmp
xchg
stos
dec
jecxz
sub
ret
in
jl
push
pop
jnp
dec
insl
rclb
sahf
sbb
xchg
sbb
mov
daa
sbb
scas
xchg
push
sbb
mov
cmpsl
popa
jle
fstpt
insl
negb
adc
stos
arpl
mov
mov
jle
popf
ja
cld
popw
dec
xchg
scas
push
dec
push
pop
ret
in
jp
pop
add
xlat
mov
xlat
in
loope
notrack
mov
stos
mov
push
es
test
lea
jb
aam
enter
jne
clc
decb
cmp
inc
dec
daa
cltd
scas
stos
mov
movsb
int3
push
pushf
and
xchg
lods
sbb
or
or
pop
insl
movsb
xor
ret
pop
jno
lret
xor
jecxz
cmc
push
xor
pop
loopne
test
mov
push
mov
icebp
sarl
jecxz
xor
add
pop
pop
jle
push
inc
inc
pop
cmp
cs
stos
fmul
mov
aad
sub
jecxz
pop
lods
sbb
loop
dec
adc
dec
pop
ficompl
adc
ret
leave
jecxz
jmp
push
jl
mov
adc
xchg
lds
es
dec
das
sub
mov
rcrl
stos
push
mov
loopne
mov
adc
cmp
outsb
andl
lcall
xchg
inc
leave
mov
xor
pushf
es
rol
pop
clc
cwtl
adc
xchg
or
dec
mov
sbb
jnp
push
inc
pop
push
lret
lock
ja
fcoms
cmpsl
lea
out
out
les
inc
ret
inc
push
inc
xor
repz
lock
negb
or
mov
dec
in
imul
outsl
mov
ret
push
cli
daa
sbb
adc
lock
jge
mov
lret
or
mov
push
mov
jne
pop
rcrb
jae
jae
pusha
ss
mov
lds
daa
push
test
sub
test
sbbl
pop
xchg
jns
fs
call
pop
test
jecxz
rcll
shrl
mov
pop
aaa
jnp
sbb
in
xor
sbb
cmp
jns
scas
dec
fistl
sub
shll
shl
mov
in
nop
testb
lcall
ja
es
repz
jne
inc
push
jns
mov
lods
add
js
ret
negb
adc
cwtl
or
shlb
std
out
rcll
push
fmulp
and
neg
out
aad
add
fisttpl
cmp
jmp
cmc
sub
cltd
push
cld
cwtl
xlat
loope
cli
mov
rorb
lret
lret
inc
sahf
add
test
and
dec
cmpsb
movsb
cmc
push
jae
mov
mov
and
cmc
test
xchg
mov
loop
mov
shrl
adc
mov
cmpsl
cmp
out
mov
or
mov
jmp
fbstp
rorb
jne
jno
or
les
loopne
call
fcoms
into
xchg
mov
data16
pop
out
jle
popa
jo
mov
addl
mov
and
orb
mov
adc
cld
xor
and
adc
jne
jbe
jb
cwtl
enter
xchg
int3
mov
add
or
pop
insl
inc
stc
push
orl
outsl
loop
aad
or
sbbl
mov
jle
fstps
or
sbb
je
pop
dec
mov
lds
and
mov
ds
or
xchg
push
std
out
jg
add
movsb
sbb
int
sub
adc
jne
push
adc
push
pop
jle
pop
lret
lock
sbb
lret
mov
dec
xchg
adc
jle
cli
cmp
test
test
scas
dec
mov
mov
out
mov
stos
inc
jo
inc
gs
testb
adc
les
out
movsb
add
pop
lods
pop
leave
in
andb
dec
jns
lock
xlat
leave
mov
mov
xchg
loop
or
add
outsl
add
add
push
jge
jg
push
sbb
ret
sbb
push
push
lret
xor
cmp
mov
in
outsl
lret
push
in
stc
cli
dec
loop
mov
cmp
mov
clc
mov
xor
adc
jl
xchg
int3
xchg
in
pop
cmpsb
push
ret
push
ret
mov
test
test
sub
aaa
dec
cmc
lds
sbb
lea
shlb
int3
mov
lret
andb
sbb
ljmp
push
mov
inc
and
mov
inc
pop
sub
stos
fdivl
orb
mulb
es
mov
out
fsts
add
xor
sti
and
scas
popf
hlt
outsb
dec
jg
push
xchg
lahf
lds
stos
or
aad
xchg
adc
pushf
insb
scas
negb
jns
jg
cli
ret
movl
and
jne
fs
insb
test
xor
mov
push
or
xor
aaa
xchg
in
clc
cmp
jnp
repz
xchg
adc
out
cmpl
rcl
gs
push
sbb
push
push
dec
int3
mov
cmp
addr16
mov
sti
mov
fs
and
cmp
mov
cmpsl
addr16
add
aaa
sub
nop
out
cs
pop
imulb
dec
xchg
insl
cmpsb
add
fldln2
inc
ljmp
sbb
outsb
jmp
mov
fsubl
outsb
popf
fisubs
push
pop
xlat
loopne
push
sar
movsl
sub
mov
mov
and
and
aas
cs
loop
or
imul
sub
mov
cmp
mov
fs
loope
inc
push
adc
lock
rclb
call
inc
stc
mov
adc
call
push
loopne
sbbb
sbb
xlat
ret
cli
jno
stc
arpl
jo
addr16
dec
gs
jmp
mov
mov
bound
inc
out
xchg
add
adc
testb
je
into
and
pushf
adc
int
mov
scas
pop
addl
aad
add
xor
mov
push
adc
out
sbb
jg
jg
dec
sarl
push
aad
sub
pop
cmp
shlb
shrl
xchg
push
xchg
sahf
and
sbb
int3
cmp
push
ds
adc
mov
add
jae
push
int3
lcall
mov
cwtl
enter
out
aaa
push
lds
clc
ljmp
outsb
jle
ljmp
xlat
iret
clc
pop
in
push
push
xchg
cwtl
sbb
movsb
leave
xchg
dec
add
pop
mov
jle
push
xor
dec
divl
jns
sub
push
mov
push
bound
pushf
jp
aas
mov
lret
sahf
pop
mov
push
mov
push
dec
out
lds
fsubrl
add
jl
push
adc
scas
int3
fnstenv
add
mov
dec
rolb
cmpsl
test
lods
push
stos
dec
add
inc
cmpl
scas
xor
orb
pop
scas
sbb
mov
cmp
cld
lahf
icebp
mov
inc
mov
pop
aad
and
fwait
daa
imul
dec
mov
jns
jo
push
xchg
mov
xchg
add
pop
dec
das
jmp
xchg
js
pushf
cmp
int
push
mov
sbb
pop
shrb
push
push
dec
dec
fisubl
mov
outsb
mov
repnz
and
or
daa
push
pop
dec
or
jns
data16
mov
jl
testl
je
outsb
sbb
faddl
dec
push
xor
data16
push
aas
out
stos
jne
jns
in
xor
bnd
sbb
faddl
sub
jns
test
mov
adcl
push
pop
rorb
leave
leave
insl
mov
xor
dec
mulb
ja
mov
aaa
dec
jl
mov
pop
sub
xchg
sbb
lods
outsb
sbb
pop
xchg
icebp
iret
mov
cmp
or
mov
mov
jb
pop
les
sub
mov
loop
test
enter
cltd
push
mov
fnsave
shr
inc
inc
mov
xor
ss
rcl
ss
mov
lret
dec
jno
sub
dec
mov
pop
mov
mov
mov
or
adc
dec
sub
testl
or
push
gs
xorb
test
sub
dec
sbb
rclb
mov
or
cmp
mov
and
cwtl
outsb
mov
mov
add
pop
push
cltd
stos
outsb
sti
add
int
loopne
movsb
in
inc
int
pop
pop
push
add
xchg
pop
test
subb
sub
lret
adc
add
inc
sub
das
aas
cmp
add
inc
test
pop
pop
enter
mov
scas
ret
addr16
cld
ss
lods
scas
push
minps
sub
jmp
add
bound
pop
stos
in
add
xchg
daa
loope
mov
ret
jb
cld
mov
dec
test
xor
pop
push
inc
stos
scas
mov
xchg
mov
push
movsb
repz
xchg
xor
ret
mov
in
xor
adc
lds
push
cmpsl
pusha
inc
jae
sbb
std
imul
add
test
xchg
sbb
dec
xor
xchg
push
mov
adc
or
shrb
pop
clc
xor
jae
out
lcall
jnp
mov
and
cmp
pushf
mov
xchg
loopne
and
sub
popf
loopne
sub
ja
adc
xor
jge
mov
sub
aas
mov
lds
xchg
popa
xchg
hlt
pop
push
or
leave
push
jno
lret
in
and
push
sub
ja
cld
cmp
dec
je
mov
pop
test
pop
push
in
push
mov
daa
jae
mov
mov
jne
lcall
inc
std
jno
sub
dec
icebp
push
pop
enter
test
cmp
into
mov
repz
inc
pop
jmp
push
jae
push
into
jnp
test
xchg
pop
xor
xor
and
in
sub
mov
adc
xchg
mov
push
lods
ja
es
xor
mov
in
adc
inc
mov
sarl
es
fsubs
add
pushf
sub
xchg
dec
aaa
inc
cmp
mov
fcmovnu
mov
mov
fwait
stc
mov
lods
push
stc
pusha
sbb
icebp
popa
or
in
pushf
pop
and
lods
fisubrl
push
in
xchg
aam
dec
lcall
fsubr
push
and
cmp
or
lcall
popw
fbld
pop
or
cmpsl
add
mov
mov
push
add
cmp
mov
ljmp
mov
not
mov
iret
inc
pop
fcomps
mov
or
fwait
mov
add
scas
scas
and
xor
and
dec
inc
stc
jp
or
cmp
repz
cmp
jbe
scas
test
ljmp
xchg
xchg
js
add
add
mov
daa
xor
pop
imul
pop
loopne
push
push
mov
inc
mov
clc
jge
aas
mov
jp
lea
sub
test
outsb
mov
mov
imul
rcl
mov
subl
pop
call
js
push
push
jno
stos
xor
sub
inc
repz
mov
ja
mov
bound
test
out
xchg
push
loop
or
add
sbbl
dec
and
inc
pop
xor
data16
cmp
mov
cld
fisubl
test
out
mov
repnz
ficoml
rcr
cld
xor
adc
sub
inc
outsb
pop
xor
ja
js
jle
or
fisttps
xor
push
addr16
or
stos
mov
aad
ljmp
mov
sbb
jmp
cmp
rorb
sbb
or
sbb
or
push
add
mov
sub
loope
daa
fwait
push
xlat
dec
xchg
mov
rcll
cmp
xor
stos
xchg
pop
out
or
push
mov
fmull
je
add
decb
bswap
lea
test
iret
mov
data16
shrb
jns
push
gs
out
sbb
xchg
push
js
add
loope
adc
fwait
and
mov
push
pushf
xchg
sbb
repz
gs
fnstenv
mov
shll
shrl
push
int
push
orb
test
aas
and
iret
mov
ret
push
inc
into
lcall
imul
ljmp
rcrl
or
sahf
and
mov
enter
into
das
cld
add
movsb
outsb
clc
sub
data16
addr16
sbb
add
imul
enter
add
ljmp
stos
lods
sti
popf
mov
push
sbb
mov
leave
addr16
jo
xchg
filds
jmp
lods
jno
call
dec
sub
rclb
insb
ja
push
fcompl
sbb
and
je
scas
xchg
xor
lea
mov
mov
arpl
pop
lahf
sub
loop
imul
dec
or
sbb
add
lods
add
add
in
movsl
pop
lea
popa
sub
dec
test
test
add
add
or
aaa
out
fisttps
pop
mov
cmp
stos
fcompl
adc
pop
rep
loop
sub
in
loope
mov
scas
inc
testb
into
inc
mov
out
nop
sahf
repz
repz
insb
mov
aam
pop
mov
aaa
adcl
jecxz
push
sub
stos
bound
cmp
cmpl
lock
cwtl
dec
pop
inc
cmp
cmp
adc
dec
jno
imul
adc
pop
in
mov
inc
cmp
cs
mov
mov
mov
or
ret
ret
lahf
cmpsl
sub
out
xor
or
adc
mov
sub
dec
jg
mov
ds
mov
sbb
mov
and
out
sbb
rol
pushf
dec
leave
jl
push
in
mov
jne
push
jne
sub
add
pop
adc
ljmp
dec
sbb
repnz
loope
cmp
icebp
xor
shll
out
inc
jb
ficoml
scas
repnz
aam
jecxz
cld
pop
pop
push
outsb
pop
lock
cmp
xor
mov
xor
jo
mov
scas
and
mov
sbb
stos
cs
in
popa
repnz
xchg
shrl
xchg
dec
cmpsb
pop
ret
mov
mov
add
ss
mov
xchg
xor
loop
push
mov
mov
les
push
and
in
xchg
adc
mov
call
push
into
cmpb
xor
stos
jno
clc
cltd
jns
inc
xchg
mov
sbb
cmpl
lock
fwait
les
adc
insl
adc
sbb
mov
insl
pshufw
jb
xchg
xlat
loope
aaa
movsb
rcrl
add
out
repz
cmp
pop
fcoms
insb
add
mov
andl
mov
adc
sbb
xchg
dec
addr16
in
add
sub
pop
scas
xchg
in
cld
hlt
lret
pop
cwtl
xor
bound
imul
out
imul
orl
sahf
jae
push
mov
dec
jge
inc
xchg
out
adc
out
add
cwtl
shrl
popf
inc
scas
shl
xchg
xor
call
add
dec
lods
in
ja
xlat
mov
adc
clc
stos
shlb
jbe
ret
cmpsb
push
push
lret
jge
or
sub
ret
sbb
imul
repnz
je
test
push
xchg
fldenv
lock
jmp
addl
lock
ljmp
mov
iret
push
push
jge
xchg
ficompl
lods
fidivs
in
inc
pop
shll
test
add
aad
test
cmp
and
shlb
inc
push
movl
or
cwtl
and
inc
add
dec
mov
fdivs
mov
mov
sbb
pop
dec
or
cmp
les
sarb
hlt
daa
sub
cwtl
sub
pop
loopne
rclb
mov
xchg
inc
xor
je
sti
movsl
outsl
sub
jb
imul
xchg
dec
cltd
out
lret
dec
movsl
add
cs
lcall
std
inc
mov
mov
jne
popf
cmp
cwtl
adc
cltd
sbb
cltd
mov
xor
mov
clc
xchg
adc
jns
faddp
sub
pushf
orb
adc
cli
xchg
inc
sub
adcl
movsl
in
and
inc
popf
dec
ds
add
xor
in
int3
jb
cmpsb
mov
xor
mov
add
inc
fsubl
xor
and
adc
xchg
stc
and
into
push
cwtl
xchg
test
inc
jecxz,pt
sbb
ss
and
sti
loopne
inc
pusha
fcoml
f2xm1
pushf
out
sub
inc
add
fidivl
stos
jg
pop
sbb
inc
dec
mov
mov
aad
pop
jp
jo
aaa
imul
push
lret
mov
mov
mov
std
and
inc
xchg
push
dec
dec
iret
pop
pop
rclb
pop
adc
mov
or
insb
jb
xor
add
in
sub
sbb
sbb
adcb
stos
add
jb
neg
cmp
sub
mov
dec
xor
shrb
xlat
sub
add
mov
push
mov
and
jns
mov
lret
inc
adc
cmp
fdiv
ljmp
adc
bound
mov
jp
testb
push
stos
xchg
out
js
xorb
sahf
or
in
ds
cmp
in
xor
inc
pop
dec
loope
xchg
or
dec
sub
xor
push
mov
roll
mov
arpl
dec
add
add
lret
xor
sbb
mov
idivl
sbb
push
loopne
push
pop
shl
sbb
push
repz
jl
call
pop
outsl
jl
pop
xor
dec
and
adc
insb
fiadds
mov
std
mov
test
ret
xlat
pop
push
mov
movsl
adc
sub
jae
and
ljmp
cmp
movsl
cmp
jl
cmc
pop
inc
push
sahf
jno
pop
mov
cli
mov
int3
nop
dec
daa
cld
mov
pushf
xchg
pop
jne
scas
jg
cmpl
mov
aad
ret
ret
sub
lcall
negb
ret
lahf
xor
jns
call
jg
xor
jno
or
aaa
call
xor
sbb
lock
sbb
jge
je
inc
xlat
lahf
pop
mov
out
mov
pop
dec
into
cmp
cmc
cmpsb
lea
jne
push
jno
and
in
ret
movsb
mov
xor
outsb
push
push
fldenv
mov
mov
and
push
push
mov
xchg
in
in
cmp
push
pop
adc
push
jns
test
sahf
inc
adc
int3
dec
lcall
sub
js
mov
ss
pop
push
xor
add
nop
int3
dec
sub
in
bnd
sbb
or
shrb
xchg
jns
cmp
push
jp
fdivl
or
inc
add
mov
xchg
push
dec
mov
pop
aam
sbb
rcll
popf
loope
jmp
iret
insl
jecxz
sub
mov
xor
outsl
dec
or
mov
negb
xor
jns
fstpt
incl
and
repnz
gs
sub
mov
push
test
nop
mov
aad
cld
sub
bound
xchg
xlat
sbb
xadd
inc
lcall
jmp
clc
push
ret
and
sahf
push
inc
imul
dec
jne
sbb
sub
mov
loope
in
stos
cmc
add
sub
dec
cmp
les
sbb
je
push
fidivrs
cli
xor
sub
test
idiv
jns
cmp
psubusb
gs
sub
xor
cmp
cltd
push
in
fs
enter
dec
jae
push
test
add
sub
sti
shrl
xchg
cmpsb
es
fmul
push
mov
pop
ficoml
int
ret
into
mov
mov
inc
xor
xchg
les
int
shll
dec
je
ficomps
lahf
aaa
addl
rolb
fcmovnbe
pop
xchg
jne
cmpsl
inc
pop
repz
xchg
add
stos
ljmp
fdiv
mov
cld
or
ficoml
sub
data16
and
test
lea
aad
sbb
lret
push
mov
push
mov
add
or
sub
stc
cld
dec
in
sbb
ret
stos
std
or
push
add
push
or
int
mov
sub
lea
push
ficoml
arpl
pop
cmp
pinsrw
ljmp
inc
sahf
pop
loopne
xchg
sub
jnp
shrb
imul
stc
int3
ja
mov
add
xor
add
ret
cmp
std
jnp
push
call
dec
pop
add
cltd
cld
pop
push
les
jmp
add
xor
dec
sub
insb
cmp
sti
adc
or
pop
sbbb
inc
sar
in
ret
dec
fildl
mov
push
inc
add
aas
mov
or
pop
leave
cs
xor
mov
in
and
jae
repnz
or
filds
stc
mov
testb
lahf
jge
sub
and
fs
aaa
andl
pop
pop
push
cli
loop
pop
out
scas
dec
js
lret
and
hlt
push
xchg
fstps
mov
dec
inc
ret
nop
mov
aam
sub
into
scas
inc
cltd
inc
js
adc
jp
sbb
movsl
stos
xchg
push
xchg
jbe
aam
imulb
aas
sbb
add
mov
lret
inc
lret
clc
jl
mov
jmp
fcmovnbe
daa
arpl
pop
fs
aaa
insl
lea
arpl
push
push
jb
cmc
aad
jmp
jge
stos
adc
jmp
arpl
and
jl
cmp
or
add
repnz
mov
add
push
xchg
mov
stos
xchg
rcrl
xchg
stc
fcompl
scas
xor
loop
stos
add
pop
jmp
faddp
sbb
xor
out
sahf
xor
xor
in
mov
shll
pop
jmp
sarl
pop
fwait
fwait
cmpsb
cmp
add
pop
out
mov
mov
xorb
jo
and
mov
xor
rol
test
add
jae
push
pop
sub
outsb
or
rcl
clc
pop
mov
sbb
add
sbb
dec
mov
bnd
mov
out
fnstcw
pop
mov
std
pop
jno
or
dec
and
dec
xchg
sub
in
xchg
push
xchg
and
repnz
fldenv
or
cmc
fcompl
cmpsb
movsb
pop
xor
mov
clc
mov
cld
jmp
or
mov
xchg
shrb
ljmp
aaa
ficompl
xor
subb
push
fwait
sar
loop
xor
out
pop
sbb
in
inc
add
ret
pop
mov
or
ret
daa
sub
mov
aad
loope
cmp
aaa
jp
fisttpll
fcomip
sti
mov
pushf
pushf
scas
jmp
cmp
stc
into
jo
xchg
push
mov
push
mov
ss
mov
pop
cmp
inc
sub
pop
nop
mov
sub
xchg
cltd
sti
or
mov
xchg
dec
out
addr16
xchg
add
cmpsb
mov
mov
dec
sub
mov
sub
xchg
push
ficoml
fcoms
mov
imulb
fwait
bound
negb
pop
jno
jbe
iret
ss
jnp
jg
xchg
test
shlb
sbb
add
inc
std
xchg
addr16
mov
cmp
push
outsb
pop
aaa
dec
push
pop
mov
adc
cwtl
stos
xorb
add
and
dec
mov
scas
aam
dec
lahf
inc
push
jb
movsb
ja
sti
inc
fsubl
add
xor
push
stos
fildll
sti
mov
int
mov
dec
in
das
xchg
pop
in
inc
outsb
inc
push
inc
sub
mov
push
add
pusha
loope
push
xor
jb
xchg
clc
xor
pop
popf
sti
pop
sbb
jp
xchg
mov
mull
popl
mov
and
jnp
dec
lock
sarl
sbb
lods
sub
jns
popa
lcall
and
inc
std
mov
lds
lods
adc
mov
lock
ret
lret
arpl
dec
mov
xor
ret
fnsetpm(287
inc
xchg
pop
dec
lret
shll
mov
fwait
cmp
jge
test
in
les
inc
fwait
clc
test
mov
leave
out
test
gs
nop
push
and
sub
mov
ja
mov
bswap
add
pusha
xor
jbe
dec
add
rcr
sbb
into
jge
ret
xor
bound
lea
mov
jge
dec
and
jb
jecxz
lods
jl
push
mov
fadds
adc
and
push
das
and
add
stos
xchg
pop
std
add
pop
loopne
cld
xchg
call
add
xor
jb
xor
push
pop
fcompl
stos
scas
xor
ljmp
inc
outsb
adc
mov
fisubl
xchg
addr16
movsl
loop
pop
std
out
dec
int3
xlat
int3
or
pop
inc
and
ljmp
sub
pop
push
inc
iret
test
cmp
sbb
popf
adc
mov
dec
jp
outsb
push
out
push
cmpsl
insl
in
dec
xchg
pushl
pop
mov
aaa
mov
sarb
ljmp
in
movsl
adc
dec
aad
js
fchs
leave
fwait
clc
out
int3
fisttps
in
outsb
sti
sub
mov
aas
push
mov
and
ficoml
push
lea
xchg
ss
pushf
setns
xor
mov
or
add
pop
es
jno
mov
icebp
sub
outsb
inc
push
loope
push
sub
mov
aam
pop
popf
pop
or
lock
dec
mov
mov
lcall
or
mov
je
pop
fcomps
ficoms
push
imul
mov
mov
push
and
add
mov
lods
popf
mov
push
inc
mov
and
xchg
test
dec
mov
and
call
lods
xchg
sub
xchg
fidivs
mov
push
cmp
repz
pop
iret
cmp
loopne
xchg
pop
fnstsw
pop
jo
repnz
jg
std
push
adc
push
sub
or
lcall
fldl
shl
mov
dec
pop
fdivs
xchg
adc
inc
sbb
dec
out
daa
add
test
movsl
mov
pop
jle
mov
pop
or
xor
lods
leave
mov
je
add
cmp
adc
jno
push
notb
adc
and
das
pop
mov
pop
cmp
sub
es
jle
jne
pop
fidivl
repz
lds
scas
jo
loope
cmp
sub
mov
add
sub
inc
add
xor
pop
mov
es
in
xchg
pop
jbe
ljmp
mov
push
aam
cmp
mov
lcall
shlb
dec
out
shrl
fcomp
cbtw
mov
insb
mov
jbe
imul
xor
dec
pop
mov
imul
test
cmc
inc
cmpsb
aad
adc
int3
out
test
mov
or
pop
ljmp
or
add
sbb
stos
lock
xchg
adc
xor
and
cltd
sbb
pop
adcl
push
push
add
daa
in
stc
cmpl
mov
orb
pop
sarb
cwtl
lret
cmp
jns
mov
mov
aam
addr16
bound
sbb
into
or
sub
fsubrs
dec
adc
sahf
or
sbb
popf
sub
cld
in
fldenv
sahf
xor
cmovo
js
add
shlb
mov
cmp
mov
push
mov
stos
xchg
rolb
cmp
dec
popa
mov
out
pop
or
lret
loop
dec
adc
dec
jl
mov
call
or
xchg
dec
xor
and
in
or
push
addl
jl
jp
mov
adcl
cmp
mov
pop
push
inc
subl
popa
sub
scas
cmp
adc
mov
jns
mov
inc
js
arpl
cwtl
push
fmul
leave
je
ja
clc
lods
fiaddl
pushf
xchg
dec
dec
hlt
xchg
xchg
push
cmp
outsl
sti
or
je
mov
mov
or
push
pop
jb
shlb
das
mov
icebp
pop
dec
out
int3
inc
xchg
adc
dec
mov
fsubrs
adc
adc
dec
addps
push
push
fs
popf
iret
inc
add
sbb
notb
xor
pusha
mov
bound
in
movsl
adc
inc
mov
sbb
je
and
dec
jns
insb
out
inc
fiadds
das
add
jecxz
sub
cmp
addb
inc
jle
push
fcomps
mov
aas
lods
and
stos
sub
stos
mov
neg
inc
add
jle
xlat
inc
xor
push
fldcw
fisubs
lods
pop
lock
cwtl
sbb
lcall
add
jne
loope
fsubl
ja
add
xchg
mov
pusha
jb
fmuls
ja
or
rclb
and
into
movsbl
out
mov
nop
dec
mov
mov
aam
dec
xor
int3
subb
sahf
imul
test
push
cmp
pop
fs
add
jae
and
mov
push
mov
gs
das
add
adc
add
cmp
call
cwtl
sub
call
or
les
cmp
mov
dec
addr16
cwtl
cltd
jp
lods
add
jnp
arpl
pop
insb
push
push
pop
stos
lods
and
and
ja
and
mov
cmpsb
add
cmp
mov
dec
mov
cmc
or
xchg
or
mov
test
jnp
xor
xlat
sub
jb
insb
pop
idivl
add
sub
scas
cmpsl
jae
jnp
xor
cwtl
popf
adc
cli
mov
jb
lahf
es
gs
test
sbb
xor
movsl
pop
mov
enter
dec
mov
add
jge
rcll
and
xor
xor
jg
les
out
xchg
call
and
fwait
popf
das
ljmp
pop
sbb
cwtl
sbb
inc
pop
push
sub
ja
jb
lcall
add
insb
repz
out
cmp
push
push
cmpsl
pop
imul
jle
or
rorb
out
iret
cmc
inc
push
sub
aas
jge
jns
jecxz
pop
push
mov
pop
sbb
lds
sub
repnz
jne
int
gs
pop
fs
xchg
bound
ja
jmp
cmp
cmc
mov
stc
mov
push
mov
pop
lret
rol
cmpsb
pop
or
out
or
mov
clc
out
jno
xchg
call
and
cmp
pusha
mov
cmp
mov
xor
dec
mov
inc
mov
push
xchg
outsl
std
stc
xchg
popa
lret
mov
call
mov
push
and
mov
cmpb
push
mov
mov
and
outsb
cltd
insb
bound
pop
adc
pop
push
jle
dec
test
pop
cmp
jecxz
cmpl
lcall
add
fs
in
lret
adc
call
into
sub
and
nop
loope
lcall
mov
js
sub
xchg
pop
sub
mov
lret
fs
mov
and
outsb
into
fistpll
or
mov
pop
rcr
xchg
test
cmpsl
sbb
sub
test
push
loop
push
xchg
rcl
sub
mov
mov
xchg
pushf
aas
inc
movsb
inc
leave
xor
fmuls
bound
data16
xor
int
mov
stos
cmc
neg
mov
xchg
lods
xchg
iret
test
lock
xchg
add
dec
sar
mov
in
scas
aas
or
xchg
les
jnp
xchg
push
push
test
aaa
imull
mov
dec
mov
sbb
lds
outsb
cmp
addr16
in
cmpsb
add
rorl
sbb
cmp
mov
add
outsb
lds
mov
ja
loope
xor
int
mov
jb
mov
jb
xchg
and
mov
mov
outsb
mov
jbe
jbe
imul
cs
push
sub
f2xm1
cwtl
jb
int3
sub
xchg
cli
loope
lock
cwtl
xor
int3
sarb
xchg
in
mov
push
inc
push
cmpsl
test
push
aad
mov
scas
dec
cwtl
daa
mov
inc
pop
adc
or
cmp
xchg
lret
ret
je
mov
sub
xchg
stc
aas
jmp
adc
inc
outsl
fsub
aad
lds
cmc
push
fs
hlt
stc
mov
mov
cmp
adc
popa
jo
sbb
dec
or
stc
pop
and
pop
sub
mov
and
inc
mov
jne
int3
adc
and
mov
in
pop
and
inc
emms
lret
xchg
jne
enter
bound
and
and
xchg
inc
das
clc
hlt
sahf
pop
mov
jne
jl
mov
push
mov
mov
addr16
in
dec
jge
loop
jmp
add
pushf
jno
lods
test
mov
xor
xchg
addl
dec
cli
or
imul
fs
xor
adc
push
inc
test
and
add
xchg
mov
push
sub
add
xlat
and
aad
xchg
outsb
loope
jno
loop
pop
jg
loopne
and
inc
je
outsb
fsubrs
sbb
test
andb
xor
mov
pop
lcall
sbb
pop
or
xchg
jb
loop
add
jbe
dec
pop
insl
push
pop
pop
sub
jb
inc
stos
fs
mov
stos
dec
xchg
sub
rcll
and
imul
les
loop
pop
scas
jmp
dec
xchg
sub
je
sub
mov
pop
insb
sbb
enter
setnp
sbb
arpl
imul
lret
ds
hlt
repz
sbb
cmpsl
aam
add
popf
shl
cwtl
cmp
add
mov
ljmp
add
push
imul
sub
jg
lods
movsb
ljmp
test
mov
lcall
pop
stc
sub
jecxz
cmc
xorb
jl
pop
aad
shr
repz
jnp
add
or
xchg
push
lods
mov
inc
wbinvd
je
mov
cltd
aad
jmp
add
in
mov
add
jae
mov
cld
dec
mov
xor
fildll
sahf
in
icebp
mov
addr16
push
std
sub
fs
lods
push
clc
movsb
aad
mov
test
daa
fcoml
or
or
gs
daa
lds
fcmovnu
inc
mov
pop
push
divl
repz
push
pop
cmp
xor
jmp
pop
ficompl
ret
mov
xchg
xor
adcb
and
xorl
and
stos
ret
sarb
ds
cli
cs
add
jne
int
aam
dec
mov
fidivs
enter
fdivs
adc
cmp
pop
mov
inc
scas
lahf
push
dec
sbb
mov
xchg
sti
lcall
cmp
sti
xchg
pop
stos
jmp
inc
or
aam
scas
pop
shll
addr16
inc
dec
xchg
dec
mov
dec
icebp
pop
lahf
jo
xor
ljmp
pop
rcrb
test
xchg
adc
mov
cwtl
mov
insl
sbb
push
repnz
shl
lcall
cwtl
leave
push
xchg
jg
xor
dec
mov
or
jl
xchg
mov
enter
jnp
sbb
lret
out
xchg
outsb
pop
loopne
je
push
inc
add
sbb
int
or
mov
pop
cmp
mov
into
adc
mov
jo
push
adc
jno
imul
fs
push
xor
sbb
inc
add
mov
mov
adc
mov
insl
adc
sbb
sub
nop
pop
inc
into
hlt
and
leave
jle
mov
jle
mov
mov
mov
add
xlat
mov
jl
out
mov
int3
lret
fisubl
cmp
stos
push
mov
aas
mov
stos
loop
add
mov
lret
mov
nop
xchg
iret
mov
in
adc
dec
pop
push
mov
and
cmc
pop
popf
lods
fisubrl
lock
lret
inc
cmp
inc
push
movsl
std
add
fxch
jecxz
push
shlb
jl
or
mov
negb
ret
idiv
xchg
jecxz
subl
popa
mov
inc
xchg
or
mov
subl
lret
and
test
sub
out
xchg
push
adcb
and
mov
lahf
or
or
roll
rcr
and
scas
fwait
movsb
dec
inc
mov
rcll
jae
js
js
adc
or
xchg
ljmp
in
cwtl
mov
imul
sub
xchg
mov
adc
mov
lods
das
loop
mov
sbb
cld
jb
or
in
std
fstps
mov
aaa
mov
in
jp
les
sahf
pop
and
cmc
cltd
add
ds
mov
add
inc
sub
nop
dec
stos
dec
pcmpgtw
cmpsl
push
pusha
xor
mov
mov
out
shl
addb
lahf
push
pop
dec
int
fldenv
jle
out
sarb
shll
inc
jg
gs
fldl
leave
mov
rolb
popa
pop
stos
lret
pop
adcb
add
mov
or
loop
mov
or
adc
push
xchg
roll
inc
cmp
aaa
xchg
adc
and
xchg
and
int
jne
lahf
nop
sub
push
sbb
push
sub
mov
xor
and
or
mov
les
pop
mov
push
dec
cli
fbstp
pusha
aam
xchg
pop
into
lock
inc
in
in
fbstp
add
mov
mov
push
jmp
std
cmpsb
and
int3
fmul
ficoms
jbe
sbb
rcrl
pop
repz
loop
jge
lea
stc
sahf
sub
mov
xlat
sbb
lahf
xchg
cmp
cli
adc
xor
xchg
sahf
ret
cs
dec
sahf
inc
cmp
loopne
rorl
or
dec
mov
lcall
adc
mov
cmp
mov
add
jb
js
test
test
or
push
aam
push
mov
cmpl
push
lds
fstl
scas
sub
int3
fs
insb
js
mov
cmp
dec
sbb
push
mov
out
rolb
jne
leave
mov
cld
dec
arpl
jmp
fstps
das
lret
cmp
xlat
out
push
push
adc
out
inc
sti
xor
daa
lea
jcxz
mov
sub
jnp
fistpl
xchg
shll
lret
cld
rcrb
into
ljmp
pop
sub
mov
xchg
fcomip
sub
pop
aad
sub
or
push
sbb
int3
out
adc
test
cmc
repnz
adc
hlt
xchg
test
push
mov
loope
mov
xlat
mov
push
inc
and
xor
jg
push
cmp
dec
xchg
mov
sahf
outsl
in
dec
inc
or
rorl
mov
mov
in
pop
or
movsl
xor
out
mov
paddw
xchg
fnstsw
pushf
mov
sbb
ret
or
mov
test
sub
push
lret
xor
add
mov
inc
mov
lea
xchg
cmpsl
shll
clc
mov
jb
xchg
std
xchg
rcrl
test
sahf
and
pushl
out
fisttps
sbb
pop
sarb
int
out
std
sub
aad
mov
enter
loopne
gs
xchg
lret
push
jp
xor
adc
dec
xchg
outsb
inc
mov
dec
and
adc
and
lock
mov
inc
adc
cmp
dec
pop
fnstcw
fidivrl
xor
cmpsb
mov
adc
cmp
adc
mov
push
pop
int3
stc
stc
mov
out
cmp
jmp
xchg
addr16
xor
pop
imul
ret
leave
push
ret
jg
xlat
pop
cmp
jb
in
jo
pushf
lret
mov
pop
rorl
xchg
sbb
popl
adc
xor
lods
sahf
test
not
push
ret
and
int
test
jmp
sbb
out
sub
fcomi
mov
in
adc
mov
nop
mov
inc
scas
inc
mov
out
gs
push
aam
clc
add
push
lock
shr
and
mov
fistpl
mov
and
out
add
sub
xor
inc
loop
dec
insb
mov
fwait
insb
popf
mov
sub
sbb
frstor
insl
pop
andl
or
mov
jbe
adc
subb
add
mov
push
push
cmp
mov
clc
pause
inc
mov
jo
pop
mov
pushf
mov
dec
movb
decl
cwtl
mov
push
or
in
loopne
fs
pop
inc
push
mov
or
push
xchg
or
in
enter
mov
sbb
nop
jb
mov
cli
in
jl
sub
cmp
addr16
add
pop
and
popa
mov
lcall
inc
repz
adc
repnz
mov
or
in
mov
cmp
call
outsb
pusha
mov
xor
out
push
and
mov
leave
or
xchg
xchg
in
cltd
push
xchg
push
or
and
push
mov
mov
fsubrs
cmp
test
fidivrs
jg
mov
pop
outsb
inc
shufps
mov
arpl
fwait
push
cmpsl
lock
xor
call
sbb
jbe
es
mov
call
ja
outsb
push
jns
lret
push
pop
mov
mov
ds
sbb
adc
int3
sub
xlat
clc
hlt
fs
aaa
enter
push
aam
dec
sbb
scas
cmp
inc
pop
mov
fnstenv
lret
add
mov
movsb
mulb
or
fdivs
mull
call
mov
jb
adc
mov
xchg
ret
mov
aad
jno
cmp
ljmp
ud1
imul
icebp
jb
ja
data16
aaa
pop
add
iret
sbb
add
push
adc
sbb
lds
stos
lret
sub
sbb
or
dec
ja
jecxz
loop
hlt
aaa
out
xor
sbb
jns
push
xor
imul
jnp
lret
jae
popa
xchg
cld
sbbl
das
test
pushf
out
adc
push
rorl
movsb
jmp
nop
lcall
or
jmp
mov
sub
fisttpl
jo
dec
stos
sarl
inc
lcall
mov
mov
sbb
mov
mov
sbb
ja
mov
or
or
mov
mov
jmp
nop
lock
pop
neg
arpl
mov
pop
pop
cmp
movsb
xor
adc
push
jo
mov
inc
fsubl
inc
add
pop
or
mov
cmpl
ret
xchg
sahf
daa
int3
sub
jmp
stos
or
push
jb
dec
mov
test
fbld
stos
mov
sbb
jne
loopew
cltd
insb
inc
xor
push
and
push
sbb
scas
rep
js
mov
int3
cmp
xchg
push
sub
mov
sbb
cmp
lahf
and
sub
mov
icebp
cmp
test
cmp
add
xor
aam
hlt
jne
das
mov
pop
addb
leave
push
push
in
dec
cltd
sub
mov
xor
fisttpll
dec
adc
mov
in
dec
sub
lret
cmp
push
outsb
fstps
jmp
dec
lret
inc
xchg
ret
sbb
aam
jge
call
aad
mov
jge
dec
adc
out
mov
cwtl
cmp
inc
xchg
enter
dec
sti
mov
mov
adc
in
inc
jp
cmc
inc
or
xchg
push
hlt
xor
scas
and
xchg
cmpsb
and
std
add
cmpsl
jbe
jnp
adc
orb
stos
pop
call
rcll
dec
pop
adc
adc
loopne
rorb
adc
cltd
sti
push
xchg
add
inc
rcrb
xchg
fsubr
push
ljmp
mov
dec
pop
sahf
fistpll
insb
imul
fidivrs
imul
mov
gs
rclb
jecxz
cmpsl
loopne
jbe
jb
pop
jne
push
mov
and
mov
idivl
int
jnp
pop
push
pop
stos
nop
ffree
or
add
lea
negb
adc
cmp
add
lea
in
in
outsl
push
push
out
sbb
cmp
push
xor
lods
jecxz
call
inc
xor
pop
lret
dec
mov
outsl
mov
jne
inc
insl
sbb
xlat
mov
sbb
js
mov
and
jecxz
test
xor
and
or
pop
or
add
and
shrb
xchg
repz
mov
and
ret
fstps
fistpll
out
lds
adc
push
sub
mov
addr16
lea
mov
mov
stos
out
insb
hlt
ljmp
pop
loope
rolb
adc
ss
ret
add
jns
dec
insl
testl
test
xor
rcrl
pop
sbb
inc
cmpsb
into
push
push
cltd
hlt
aaa
jno
jnp
cmp
loope
add
or
push
cltd
test
call
add
int
fistpl
add
idivb
dec
cmp
mov
dec
mov
out
sbb
push
arpl
xchg
int3
pop
or
insl
imul
sahf
cmp
test
mov
fmull
aas
std
sbb
xor
insl
icebp
xchg
push
jnp
pop
arpl
jnp
jns
xchg
xchg
pop
pop
cmp
sub
enter
jmp
lret
outsl
push
aaa
xor
dec
mov
ret
jecxz
mov
lock
sar
in
and
pop
xchg
add
mov
adc
mov
pop
test
out
lods
push
sbb
icebp
and
add
test
sarb
incl
outsb
iret
dec
and
ljmp
aam
test
cmc
dec
movsl
xchg
mov
sub
mov
ljmp
xchg
mulb
push
cmpsb
cs
shrb
mov
adc
rorb
xchg
sbb
cli
jmp
and
mov
mov
pop
pop
sub
aaa
dec
les
cmp
mov
push
cmp
push
popf
push
hlt
sahf
mov
scas
nop
bound
mov
clc
stos
or
stos
das
cmp
sbb
or
xor
dec
mov
enter
cwtl
addr16
pop
add
jp
cmp
pushf
xchg
repz
cmp
mov
add
aam
mov
mov
in
push
pop
jbe
adc
dec
outsb
fwait
sbb
lds
cltd
mov
pop
mov
es
icebp
jp
adc
cld
cli
cwtl
enter
jl
shll
inc
in
xor
jno
mov
popa
pop
sub
test
inc
xchg
and
push
daa
js
adc
nop
fs
dec
enter
cmc
mov
imul
jbe
and
adc
sbb
cmp
sahf
std
xchg
mov
mov
add
cli
pop
orb
out
xchg
jns
mov
aaa
or
mov
xchg
mov
mov
mov
add
xchg
dec
push
jp
add
imul
cmp
call
adc
add
lods
cmp
insb
cmp
xchg
pop
fldt
or
inc
jle
sbb
fxch
mov
fs
sub
mov
cld
dec
test
inc
sbb
lret
out
fcmovne
xchg
sarb
lock
mov
pop
mov
mov
stc
addr16
in
mov
imul
or
mov
push
cmc
in
rcll
stc
xor
pop
cmpsl
jle
push
push
adc
inc
xchg
fsubrl
lret
daa
push
push
push
push
fs
shll
imul
inc
imul
ljmp
mov
or
xchg
es
dec
rclb
sub
std
push
or
lods
nop
inc
in
sub
mov
cs
and
inc
movsl
fwait
dec
pop
xor
sub
rcr
inc
sub
jno
rcl
xor
push
mov
inc
dec
das
andl
push
pop
push
cli
pop
jns
jae
enter
fsubrl
mov
adc
dec
nop
mov
xor
jb
aad
pop
stc
test
jbe
add
mov
add
test
inc
jmp
jp
sbb
push
out
std
jo
mov
imul
stos
into
adc
sbb
push
das
push
lods
xor
push
stc
lret
jecxz
sbb
mov
mov
jle
jnp
fisubl
add
lret
jno
push
dec
lcall
jmp
mov
cmp
xchg
flds
jecxz
sbb
dec
fidivrs
call
je
daa
mov
xchg
in
inc
mov
mov
inc
fistl
aas
sbb
fstps
sub
sbb
mov
mov
and
mov
flds
add
jg
icebp
mov
jb,pt
movsl
pop
push
sbb
xchg
push
sahf
jl
mov
adc
push
aaa
jnp
das
and
or
or
mov
jno
adc
jne
mov
rcll
int
movsb
leave
inc
mul
push
ret
add
pop
jnp
lcall
fwait
into
cmc
rolb
cli
es
aaa
cmp
mov
insb
inc
cld
aam
mov
fdivrl
lds
jle
pop
fildll
loop
outsb
sbb
and
mov
sbb
in
xor
xchg
stos
add
add
push
jnp
push
imul
ja
in
insb
arpl
mov
cmp
cwtl
push
ja
jp
orb
fldcw
jno
cltd
mov
rorl
dec
test
push
out
jbe
add
cmp
xchg
sarl
pushf
mov
pop
hlt
je,pn
or
cs
adc
ret
gs
xor
xchg
sub
mov
sub
cwtl
push
mov
push
push
mov
int3
daa
adc
adc
adc
mov
mov
push
bnd
in
outsb
sub
ja
sub
js
pop
inc
dec
sarl
jp
xor
adc
mov
and
or
and
jb
popf
or
push
int
iret
jp
cltd
adc
out
addr16
cmp
sub
jns
add
lret
add
xchg
xchg
test
jns
push
push
negl
repnz
pop
mov
in
pop
dec
and
mov
push
add
incb
push
cli
dec
test
jecxz
popa
mov
lret
xchg
ret
pusha
xor
pop
mov
xor
mov
daa
xor
scas
clc
rol
add
aaa
enter
gs
sub
cmp
mov
sbb
mov
daa
test
pop
sbb
incb
pop
jl
leave
mov
shll
sbb
pop
and
jp
cld
pushf
inc
cmp
pop
or
or
mov
push
sahf
cmp
mov
jno
nop
jl
movb
dec
iret
sbb
cmc
repnz
out
outsl
outsl
jbe
gs
sub
mov
orl
add
out
mov
jmp
lret
add
fistl
movsl
cmp
and
push
cmp
dec
call
dec
sbb
xchg
xor
addr16
push
add
or
pop
cld
push
ja
cmpl
or
ret
popf
mov
mov
adc
xor
cmp
lret
or
mov
jg
adc
rorb
push
into
xlat
xchg
cmp
ret
or
push
jp
pop
imul
pop
or
mov
mov
add
sub
gs
leave
cmpsl
xchg
jp
scas
adc
lds
push
sub
das
lret
nop
cmpsl
insl
stos
mov
shll
test
outsb
lcall
jg
divl
mov
add
jmp
sbb
inc
or
add
fs
pop
orb
sub
xor
and
mov
dec
jbe
fs
scas
sti
mov
ret
or
fstps
nop
popa
or
cmc
cltd
lods
scas
cmp
dec
roll
stos
push
fstps
cwtl
jb
pop
in
divb
or
xor
xchg
adc
movsl
imul
inc
adc
add
xchg
insb
cwtl
dec
xchg
jnp
rcrl
std
lods
lret
inc
cmpb
out
cs
or
std
push
out
leave
inc
cmp
push
xor
xor
and
movsb
mov
mov
nop
fucom
andl
push
pop
cwtl
aad
test
into
lahf
add
jne
jno
or
popa
lock
jecxz
or
cmp
movsl
mov
mov
mov
or
rcl
and
test
xchg
pop
bndldx
shlb
in
jne
and
lea
imul
sub
add
daa
sbb
jns
mov
call
notb
stos
push
lahf
imul
dec
aas
mov
test
mov
and
dec
cmpsb
and
xor
mov
fsubrl
push
adc
mov
or
movsl
inc
sbb
jle
fldl
inc
out
or
pop
ret
mov
in
pushf
cltd
inc
loopne
mov
icebp
inc
icebp
jl
adc
fs
cmc
cmp
jnp
xor
push
imul
or
clc
lcall
xor
out
jne
dec
inc
icebp
or
clc
cmp
in
mov
inc
cld
and
data16
dec
fdiv
push
inc
jne
testb
dec
std
aad
aad
fwait
mov
in
test
loopne
mov
rclb
cmp
movsl
gs
or
test
dec
add
inc
cmp
test
xor
adc
repz
jo
lcall
mov
xorl
dec
push
aad
incb
pop
xchg
sbb
mov
pop
add
sub
mov
xchg
lods
jbe
decl
sbb
pop
lods
dec
jbe
and
rcl
jns
jmp
leave
or
pop
cmp
and
push
sti
leave
push
sub
repz
lea
cmc
fnstsw
lret
in
out
lahf
inc
cmpsl
mov
dec
xor
div
sbb
in
push
es
jmp
push
int
pop
push
sub
xchg
jne
ret
sbb
imul
sub
int3
movsb
sbb
fldenv
xchg
shrb
jecxz
xchg
insl
popa
test
adc
lea
sbb
mov
jnp
mov
xchg
lcall
ljmp
pop
sub
fucomp
sarb
mov
adc
sbbl
sub
xchg
aad
cmpsb
or
mov
mov
sub
mov
jmp
cli
sbb
push
mov
pop
movsl
dec
pop
test
cmp
aas
ljmp
jecxz
jmp
movsb
jne
adcb
and
jl
sbb
xchg
in
iret
cmpsl
and
xchg
cmp
subl
adc
sub
pop
and
shlw
dec
scas
loope
pop
mov
adc
in
xor
dec
mov
lds
xor
call
cs
rclb
jl
pop
inc
push
xchg
cld
das
pusha
and
neg
mov
fsubs
push
notl
or
test
pop
add
arpl
inc
add
popf
cmp
sub
adc
lds
mov
enter
scas
push
sub
lcall
mov
mov
mov
push
stos
pop
mov
xlat
sbb
sahf
cmp
jnp
inc
icebp
xchg
push
mov
add
shrl
scas
sub
jl
rclb
xor
lret
adc
mov
jl
push
pop
mov
xlat
jbe
cmp
pop
arpl
dec
int
push
insl
into
outsb
sarl
orb
or
inc
pop
pop
aaa
ret
outsl
cmp
cmc
mov
jne
daa
cli
fisubrs
das
bound
or
in
add
fcmovnb
adc
jp
repnz
dec
add
int3
mov
push
in
popf
das
std
ljmp
inc
xor
in
mov
int3
shrb
and
ja
dec
mov
pop
adc
ret
fld
xor
jg
mov
xchg
fcoml
out
sub
push
cld
add
dec
push
shll
xor
std
mov
jmp
pop
pusha
outsb
push
dec
lahf
inc
cmp
inc
test
add
decb
inc
adc
cs
addb
mov
mov
sti
test
ret
pop
jg
mov
cmpsl
mov
xor
rcr
sarl
lds
pop
pop
or
push
jp
cmpsl
add
jno
mov
xchg
lds
adc
add
outsl
jecxz
insl
jne
aas
or
es
mov
jg
xor
icebp
cmp
imul
call
inc
mov
mov
cmp
popa
sbb
enter
pop
in
xchg
rolb
ret
mov
leave
jae
scas
dec
lcall
ss
xor
fwait
dec
inc
adc
popf
cltd
movsl
add
das
mov
jnp
fnsave
aaa
lods
stos
xchg
add
pop
lret
insb
push
cltd
add
xor
scas
xlat
xchg
stc
or
mov
add
mov
jp
loop
mov
int3
xlat
loopne
xor
jae
lahf
push
stos
stc
jg
mov
jmp
lahf
pop
clc
mov
xchg
outsb
fidivrs
out
pop
push
sbb
stos
inc
push
adc
mov
scas
push
push
xchg
lods
pop
hlt
dec
mov
shlb
add
push
inc
arpl
ss
pop
mov
loope
popa
mov
lret
shll
and
sub
xor
adc
and
push
in
dec
adc
dec
push
jecxz
out
cmp
inc
outsl
cmp
push
roll
lods
mov
push
jbe
push
shll
mov
cld
mov
cmp
dec
adc
das
and
div
fbstp
mov
mov
pusha
aad
pop
insl
dec
sbb
add
mov
incl
mov
cmp
and
and
test
mov
cmp
les
ret
outsl
imul
xchg
pusha
mov
cwtl
pusha
mov
adc
enter
xchg
dec
leave
pop
xchg
add
jbe
std
mov
mov
scas
xor
jmp
sbb
mov
add
inc
sbb
sub
dec
xor
imul
or
mov
cltd
inc
ss
push
idivl
or
and
sub
test
scas
push
inc
mov
push
iret
lods
mov
fiadds
mov
mov
add
cmpsb
add
jb
test
sbb
sbb
lock
mov
lds
adc
push
icebp
adcl
dec
out
in
fwait
mov
push
mov
cmp
pushl
xor
push
lea
stc
je
int
xor
and
decb
mov
rcl
push
daa
cmp
mov
mov
dec
dec
in
iret
push
dec
sbb
jecxz
cmpsb
test
daa
test
imul
cmpl
lcall
mov
jg
lods
mov
and
add
ss
jl
jl
push
ret
insb
or
dec
or
jne
insl
popf
jecxz
cmp
lock
lcall
cmpsb
addl
ja
shlb
cmp
iret
mov
and
sbb
adc
enter
xchg
mov
test
js
lea
mov
cmpsl
int3
shr
out
cli
jecxz
add
subb
aas
dec
outsb
inc
and
faddl
shrd
insl
mov
bswap
rclb
mov
lods
add
testb
scas
jne
insb
adc
inc
jle
xchg
jnp
dec
inc
lock
out
inc
dec
imul
enter
push
xchg
adc
sbb
mov
jno
push
aas
testl
test
in
enter
lcall
movb
mov
int
into
clc
pop
jecxz
jmp
scas
aas
pop
mul
jnp
enter
bound
pop
mov
leave
cmpb
xlat
mov
xor
sub
mov
adc
xchg
jae
pusha
fsubl
mov
roll
addr16
stos
test
test
repnz
je
insb
adc
lds
int
xor
xchg
out
pop
rorb
mov
inc
frstor
and
adc
sysenter
into
clc
pushf
push
fcmovne
je
cmpb
sub
stc
mov
dec
adc
movsb
mov
jge
add
push
ljmp
pop
cmpsl
sub
js
sbb
rcrl
cmp
xchg
iret
repz
maskmovq
notl
rcl
xor
or
push
sti
icebp
inc
sub
pop
std
xchg
mov
push
aad
push
xchg
xlat
xchg
mov
jae
xor
popf
dec
pop
sbb
outsl
lods
lret
cmc
and
dec
scas
inc
lock
lahf
cmc
adc
and
cltd
and
outsb
xor
sbb
lea
sti
sahf
jo
andb
cmc
je
sub
adc
add
daa
sbb
xor
push
and
and
hlt
mov
pop
out
adc
push
lods
sub
pop
divl
cmpsb
jp
mov
mov
stos
pusha
xchg
push
fmuls
mov
mov
test
mov
sti
das
xor
mov
ret
sbb
or
add
sub
mov
insl
es
mov
test
sub
cld
cmc
push
call
jg
xor
movsl
lods
cwtl
pop
loope
mov
in
sub
inc
dec
paddw
sarb
push
fcomp
push
fstsw
pop
pushf
daa
lods
push
es
outsl
testb
fidivs
cli
mov
clc
jl
pop
push
movl
add
xor
maskmovq
negl
mov
push
jno
cmpsl
movsb
pop
xchg
or
out
bound
lea
sbb
lea
je
in
movsl
or
pop
ja
xchg
sbb
scas
ja
insl
mov
jmp
or
enter
and
stos
xchg
lock
sub
popf
loopne
push
ror
pop
mov
insl
les
xor
loopne
and
scas
mov
shr
int
bound
shlb
shlb
arpl
xorb
filds
js
lcall
loopne
loop
hlt
mov
paddb
adc
mov
sbb
mov
scas
ret
sti
jg
sub
adc
or
and
je
enter
sub
loopne
addl
out
mov
and
jae
hlt
aad
shl
repnz
xor
cmpb
jg
aad
mov
mov
add
push
mov
mov
cs
mov
dec
js
out
cmp
xchg
lcall
pop
out
scas
insl
sub
es
test
jg
mov
add
loop
ret
add
dec
adcb
mov
add
rorl
repz
adc
sbbb
push
icebp
and
jmp
out
test
mov
popa
loop
mov
mov
ror
pop
lea
shlb
and
cwtl
test
lea
flds
mov
pop
mov
sbb
iret
xchg
or
cmc
jnp
stos
mov
mov
jl
adc
mov
scas
mov
mov
mov
ljmp
cs
sub
or
pusha
jl
and
push
fs
jl
lods
mov
xor
mov
xchg
cmc
icebp
outsl
jae
mov
add
popf
repnz
pop
loop
pusha
push
push
pop
loope
insb
shlb
mov
xchg
pop
inc
jp
mov
pop
xchg
int
xchg
jl
mov
mov
sbb
call
cmp
lds
sub
xchg
ret
into
pop
dec
insb
das
jns
mov
rorb
inc
or
arpl
xor
add
mov
sub
mov
adc
and
adc
roll
xchg
nop
imul
mov
fdivrl
stos
nop
arpl
pop
pop
cltd
jne
stc
jecxz
pop
dec
pusha
daa
xchg
fstl
ja
mov
jnp
or
outsl
add
add
loop
repz
add
mov
mov
enter
xchg
cli
inc
sub
jb
lcall
ret
sub
or
sbb
or
push
or
out
mov
aas
rcl
dec
xchg
pop
test
add
inc
pop
push
add
adc
inc
sub
jbe
aaa
lds
iretw
adc
xchg
or
xchg
dec
dec
mov
push
cmp
add
addr16
fiadds
mov
add
or
cmpsl
andl
aas
jbe
lret
xchg
push
mov
popf
bound
js
fisttps
loopne
lds
icebp
loope
test
popa
dec
fimull
jmp
dec
lcall
jg
xchg
push
adc
test
stos
dec
push
inc
add
nop
test
dec
sbb
inc
outsb
scas
or
fadds
sti
outsl
pop
shrl
jne
ret
pop
sub
fiadds
inc
aad
xor
inc
lods
push
push
sbb
clc
shrb
cltd
inc
outsl
or
into
dec
std
mov
add
inc
jnp
stos
ret
add
call
pop
cmp
imul
push
sbb
sbb
adc
lea
mov
movsb
cmc
lcall
icebp
fs
sbb
repnz
cmp
mov
mov
cld
inc
mov
lcall
jbe
call
jle
aas
insl
lret
sbb
and
movsl
daa
push
test
loope
jmp
lcall
dec
fcoml
shlb
enter
mov
fsubs
subb
pop
pop
cmp
xrelease
mov
sbb
xlat
sub
loope
hlt
lods
rclb
hlt
dec
pop
adc
mov
adc
inc
outsb
and
lods
jl
loop
sbb
insl
push
mov
pop
fcoms
jl
xchg
xchg
sti
andb
xor
scas
addb
mov
push
jns
mov
sbb
aas
jno
mov
sarb
test
mov
mov
bound
adc
aaa
pop
xchg
push
insb
push
cld
in
adc
mov
sti
cmpl
push
and
mov
dec
shlb
sbb
push
add
mov
pop
nop
les
fcmovnb
ss
adc
mov
test
xor
cltd
pop
cmp
fadds
icebp
pop
pop
cmp
push
outsl
dec
andl
rclb
jne
out
sahf
jp,pn
xor
mov
loop
enter
loop
sub
jp
leave
and
inc
cli
inc
xor
testb
into
mov
lret
outsl
inc
xchg
xor
and
mov
mov
sub
jne
negl
das
mov
std
cwtl
add
dec
adc
cmpl
sbbl
inc
sbb
cmp
das
xchg
cmp
inc
sub
xchg
nop
jb
mov
js
div
jne
jmp
mov
test
mov
cs
adcb
push
pop
icebp
loopne
rcl
ror
pop
mov
cltd
adc
push
fucom
mov
cmpsb
add
cmp
lock
mov
adcl
pop
mov
scas
xchg
scas
ljmp
push
push
inc
outsl
js
jmp
and
fisubs
shll
aam
mov
fs
ja
jbe
and
out
mov
mov
test
cmp
frstor
decl
in
jge
imul
imul
imul
dec
andl
and
je
gs
out
cld
xchg
jae
add
lea
dec
pop
and
pop
inc
lock
inc
sahf
pop
ret
xchg
push
cwtl
pop
aam
lret
sti
xchg
pusha
xlat
xor
mov
lods
nop
dec
xchg
jge
and
dec
enter
push
pop
push
int3
xor
int
add
cmp
jne
inc
ret
loop
mov
mov
cmp
clc
adc
fs
jns,pn
push
je
pop
shl
inc
add
ja
lods
ret
push
sti
push
sbb
push
cmp
test
lds
fldt
lcall
shl
add
hlt
push
cmpsl
sarb
ficoms
lods
push
fsubrs
scas
dec
and
mov
sub
pop
divb
jp
sub
xor
jmp
mov
jle
and
adc
jo
xor
popf
push
fldcw
push
cs
ja
adc
and
pop
sub
xchg
int3
xchg
push
jp
and
hlt
jno
push
mov
push
pop
mov
js
xorl
mov
std
mov
scas
sbb
dec
jno
out
inc
jnp
mov
xchg
xor
jp
sbb
adc
add
adc
add
sahf
fldl
sbb
popf
mov
cli
jl
inc
push
mov
xor
or
sbb
add
pop
loopne
enter
sub
daa
inc
sub
repnz
and
sbb
sbb
lods
enter
xchg
pop
pushf
outsl
out
mov
fcoml
push
lcall
scas
inc
dec
xlat
add
pop
testb
jno
jb
sub
loopne
mov
test
xchg
mov
dec
cwtl
cld
lahf
mov
mov
in
test
test
pop
imul
push
fstpl
and
mov
add
sub
dec
mov
add
fwait
push
icebp
xor
es
mov
push
loopne
call
sbb
popa
and
movsl
mov
push
in
aaa
jp
dec
cmpb
dec
mov
push
stos
jnp
jb
dec
sub
jle
es
mov
out
adc
shll
shll
mov
push
mov
push
inc
clc
and
ljmp
movsl
pop
daa
cmpsb
inc
jge
adc
pushl
out
popf
and
jbe
int3
das
jge
inc
jae
or
mov
and
enter
out
pop
cmpsl
push
aam
aaa
test
stc
xchg
xor
aas
add
mov
and
stos
daa
in
push
sub
pop
fxch
cmc
push
inc
mov
mov
mov
add
xor
addl
fdivrl
dec
dec
sub
or
sti
mov
sti
push
cmpl
rcll
xor
shlb
inc
std
int3
dec
lret
dec
push
or
mov
jge
mov
pusha
jmp
repnz
xchg
movsb
in
outsl
lock
mov
out
sahf
fcmovu
fs
in
cmp
mov
pop
mov
mov
mov
repz
inc
movsb
inc
stos
lea
add
test
dec
in
imul
jge
lods
sbb
repz
push
shl
pop
rclb
push
ds
xor
xorb
or
mov
repz
insb
test
sbb
lock
mov
loop
enter
sahf
lods
fisubrl
pop
sbb
mov
icebp
mov
push
bound
inc
iret
mov
hlt
imul
cld
stos
pushf
adc
cmp
pop
fnstenv
stos
ds
mov
rcr
mov
inc
cld
aam
add
xchg
out
pop
adc
shrb
int3
hlt
mov
jb
inc
and
pop
push
push
fstpt
rorl
outsl
inc
popf
loope
sbb
jnp
scas
dec
negb
in
jp
out
push
loope
cmp
adc
lods
jb
daa
ret
jp
and
popf
das
xor
and
out
and
out
sti
ja
mov
dec
push
and
mov
std
lods
push
mov
leave
mov
movsl
enter
scas
xchg
inc
jl
addr16
or
mov
movsl
push
daa
add
clc
sub
add
sbb
push
aaa
mov
movsb
or
sub
iret
mov
xchg
cmp
jns
mov
nop
in
add
cltd
push
inc
push
movsb
mov
mov
sub
xor
roll
int3
sub
or
out
push
sub
cs
inc
pop
imul
mov
rclb
xchg
insb
adc
jbe
fdivrs
pop
dec
clc
jp
cld
mov
in
imulb
push
bound
cmpsl
scas
int
xchg
scas
addl
flds
bound
mov
inc
xchg
inc
test
scas
dec
mov
stos
outsb
aam
mov
outsl
insb
jecxz
jne
mov
add
lcall
jg
leave
cwtl
sub
rcr
and
mov
push
sub
add
sbb
and
mov
pop
subl
inc
idiv
sti
aaa
jl
ret
mov
outsb
inc
lock
pslld
sub
sub
push
xchg
stc
xor
dec
add
lods
cmpsb
pop
adc
std
arpl
jmp
jb
inc
cltd
aam
mov
xor
ljmp
inc
jecxz
pushw
sbb
cmc
les
cli
cmc
xlat
dec
sbb
lock
cmp
in
aad
sub
out
stos
inc
mov
jnp
or
dec
faddl
out
push
mov
mov
jmp
xchg
add
faddl
add
lahf
repnz
mov
adc
loope
add
inc
adcb
inc
inc
stos
adc
mul
push
push
lcall
push
or
cs
push
or
shll
jb
not
adc
fdivrl
jnp
mov
aas
pop
xorl
sub
pop
in
insl
aaa
ret
add
inc
and
sahf
mov
xchg
pop
mov
out
fists
mov
arpl
fstl
jns
sub
xchg
imul
jno
mov
sti
pop
loopne
notl
shl
ss
inc
xchg
popf
lcall
aas
jecxz
inc
jbe
daa
push
inc
adc
mul
jno
sbb
lret
inc
orb
cli
xor
inc
imul
jnp
fwait
pop
cmp
pop
popa
adc
and
push
or
es
add
pusha
cmpb
push
inc
inc
nop
or
jnp
lds
rorl
loope
fcompl
je
sarl
test
xchg
add
xor
sbb
xchg
in
push
mov
inc
insb
or
mov
test
inc
xchg
out
lcall
outsl
aam
insb
cmp
loope
bound
and
or
pop
add
out
jns
inc
inc
xor
fidivrl
mov
push
jmp
mov
mov
into
add
out
dec
pop
inc
push
jp
push
push
nop
stos
scas
rorl
negl
sub
xchg
test
xchg
cmpsb
sbb
iret
xor
add
jo
lahf
xor
lcall
pop
int3
mov
or
push
in
notb
test
xor
int
xor
cmc
sbb
sbb
inc
mov
hlt
and
lods
icebp
jp
andl
sub
push
cld
arpl
mov
xchg
xchg
cmp
imul
adc
cmp
cs
aad
ss
cmc
daa
sbb
inc
inc
int
sbb
push
pop
pop
int
fwait
xor
outsb
lock
ret
fstl
pop
inc
jo
dec
cmp
add
jmp
rolb
test
loope
xchg
adcb
mov
into
or
cltd
dec
imul
cmp
push
mov
jge
jnp
and
push
insb
popa
inc
cld
adc
xchg
inc
rcrl
aaa
gs
or
sub
mov
jns
jg
and
pop
imul
add
xor
bound
cltd
das
call
mov
lea
roll
or
enter
das
jp
scas
fcmovbe
xchg
add
orb
pop
adc
xor
cmpb
jl
mov
and
ficomps
sub
dec
mov
xor
sub
xchg
fstps
lcall
loopne
mov
int
in
adc
arpl
jbe
cmp
jge
pop
cmp
push
pop
out
inc
outsl
xchg
jnp
cli
mov
sti
xlat
arpl
cld
mov
fdivrl
adc
mov
push
sub
leave
sub
add
mov
add
pushf
aad
movsl
mov
cwtl
arpl
stc
pop
or
cmp
pop
push
xchg
pop
pop
sbb
aas
rcll
pop
dec
ret
sub
jmp
mov
or
int3
aas
icebp
push
shrb
cli
xchg
in
add
inc
jmp
incb
xchg
pop
xchg
jle
pop
jno
jnp
lods
in
clc
adc
les
fisubrl
pop
int3
icebp
div
movsb
mov
cmc
xlat
repz
adc
push
push
add
ljmp
mov
mov
or
add
add
clc
pop
jl
mov
mov
into
ret
addb
cli
add
jb
adc
ss
and
imul
addr16
sarl
sub
fcmovnbe
push
pop
jno
dec
xchg
dec
cs
fnsave
int3
test
sahf
pop
icebp
jmp
jo
mov
sbb
mov
fnstsw
add
incl
lcall
loope
sbb
dec
psllw
test
notl
outsb
cwtl
lods
adc
cs
jp
and
hlt
xchg
test
aam
mov
scas
inc
icebp
ljmp
inc
sbb
and
sahf
or
adc
add
pop
pop
cwtl
cmpsl
and
jne
ds
lods
cmc
mul
inc
sub
fistps
pop
sbb
xor
mov
out
or
int
dec
mov
jg
push
mov
rolb
sub
aam
mov
push
mov
or
jbe
pusha
test
pop
hlt
jge
xorb
xor
ss
xor
pop
out
lods
dec
roll
aas
pop
je
mov
push
or
xlat
adc
adc
jg
out
lock
mov
ljmp
inc
test
fs
and
aas
std
add
ljmp
pop
icebp
cmp
inc
push
or
mov
lods
xchg
mov
addr16
in
push
decb
std
and
mov
xlat
mov
movsl
or
push
imul
cld
int
cmp
add
xchg
pushf
lret
xor
lods
lods
data16
sbb
dec
ljmp
pop
push
lcall
cltd
mov
loope
lcall
mulb
adc
cmp
scas
cmp
or
push
jae
push
and
push
mov
lahf
pop
arpl
push
jp
dec
test
pop
push
enter
cmp
jnp
sub
les
push
sarl
decb
xor
pop
dec
or
xchg
mov
bound
inc
ds
je
xor
scas
xor
iret
test
test
lock
sbb
xor
repnz
cmp
xchg
stos
mov
dec
add
repz
mov
dec
or
sbbl
pop
push
or
outsb
cli
popa
ja
pop
jecxz
cltd
dec
add
test
ret
xchg
dec
scas
fsubs
js
pop
out
cwtl
enter
inc
cli
call
jp
dec
cmp
insl
mull
pop
sub
mov
sbb
adc
jl
pop
scas
pop
mov
aas
and
pop
pusha
push
adc
aaa
sbb
ret
mov
dec
adc
out
jns
shll
jno
or
movsl
inc
dec
sbb
push
mov
add
or
pop
sahf
adc
movb
cmpsl
xor
in
mov
sbb
orl
fdiv
sub
sbb
mov
push
add
xor
cmp
jns
push
jo
sbb
cmp
or
xor
incl
out
shrl
enter
lcall
xor
out
sbb
jae
divl
add
xchg
inc
call
test
jbe
pusha
pop
xor
mov
rcrl
loop
adc
outsl
mov
repnz
stos
or
inc
and
mov
lahf
mov
mov
inc
dec
push
insl
shrl
lahf
or
inc
fwait
movl
mov
and
in
pop
rclb
out
push
push
xlat
movsb
hlt
push
mov
mov
insl
pop
mov
push
add
repnz
popf
les
mov
cmc
outsb
mov
sub
push
cmp
push
sbb
fistps
ret
mov
push
insl
repnz
jecxz
mov
dec
sub
xchg
std
xor
scas
stos
mov
repnz
cmp
sbb
lods
jb
js
fbld
out
nop
lahf
hlt
jmp
jmp
imul
aad
pop
out
mov
lods
fisttps
test
dec
loopne
jns
out
and
ret
cmp
or
addr16
xlat
data16
pop
adc
sbb
mov
jbe
hlt
hlt
push
rclb
lock
sub
adc
xchg
roll
inc
enter
jno
push
outsb
inc
cmp
mov
orl
lods
push
or
dec
inc
inc
push
daa
mov
mov
cmpsb
sbb
rcrl
bound
popa
sarb
inc
mov
and
xchg
mov
decb
add
cmpsb
in
dec
or
add
sbb
mov
jg
mov
inc
sub
sbb
stos
sbb
loope
xor
inc
dec
jne
jnp
add
pop
sbb
adc
das
repz
stos
xor
push
cltd
clc
xchg
fsubl
add
jmp
pop
sub
and
stos
or
and
lret
add
lret
lcall
jbe
lret
xchg
mov
push
cmpl
mov
inc
and
jecxz
loope
dec
movsb
dec
xor
or
inc
or
sub
xor
scas
push
jae
inc
rcrb
inc
popf
xor
pop
in
scas
repz
mov
ror
loop
fwait
push
arpl
pop
movsb
sub
add
jne
punpckhdq
and
sub
das
sbb
jge
and
xchg
add
pop
mov
loope
das
test
mov
adc
adcb
mov
lret
jg
fsubs
push
pushf
fwait
lock
sbbl
mov
out
jge
pop
loope
bound
sbb
in
lods
in
add
lds
jnp
dec
mov
fs
mov
inc
or
jo
sbb
ljmp
jns
mov
lahf
jne
mov
xchg
push
bound
xchg
rcrb
and
adc
arpl
maskmovq
mull
dec
add
and
ja
cmpsb
jns
adc
mov
or
nop
mov
lea
add
mov
sub
mov
cmc
jl
bound
mov
test
fdivs
fwait
ss
cld
or
leave
sub
rclb
and
sub
sbb
stc
insl
fists
sub
pusha
or
test
ja
xor
mov
xchg
in
push
or
daa
cs
addl
lahf
adc
bound
push
insb
xchg
mov
das
cltd
test
je
xchg
mov
push
xlat
mov
xor
aas
jg
mov
sbb
inc
fisubs
mov
shll
jge
sbb
adc
mov
pop
shrl
jl
push
mov
sbb
les
in
sbb
shll
in
iret
pop
lods
xchg
andl
fdivp
sbbl
lock
cli
insl
sub
pop
push
xchg
jns
cmp
stos
fs
aam
inc
adc
push
rclb
cmp
in
sbb
mov
push
xchg
lea
and
ja
pop
ret
jo
out
lcall
jno
out
or
and
cld
pop
cs
xor
and
jno
sbb
jg
in
dec
test
aad
repz
movb
std
jo
xchg
mov
mov
inc
or
cmpsb
test
call
imul
fwait
xchg
and
add
daa
mov
xchg
or
daa
dec
xchg
repz
pop
and
sub
pop
icebp
ljmp
out
pop
in
cmpsl
mov
aaa
xor
jge
fisttpl
popa
test
sub
xor
loop
fiadds
ret
dec
in
or
adc
push
pop
std
xchg
nop
inc
xor
ror
bound
ljmp
and
int3
push
movsb
jbe
inc
xchg
push
mov
push
lret
sbb
adc
push
stc
adc
pop
pop
xor
call
adc
mov
or
ret
je
repnz
data16
and
adc
pop
mov
scas
je,pt
lods
or
ss
xlat
outsb
loope
rcrl
outsb
lret
pop
jne
pop
les
lods
mov
push
subb
xchg
dec
lahf
movsb
mov
data16
pop
xchg
call
xchg
mov
or
shlb
dec
mov
pop
negl
in
pushf
in
push
or
jb
dec
sti
jno
mov
mov
sbb
pop
iret
or
fst
adc
sbbb
jb
sbb
cmp
fistpl
mov
int3
dec
test
imul
lods
aam
dec
jle
aas
push
nop
mov
sub
push
pop
shlb
lcall
loope
jbe
rorl
pop
xor
add
cwtl
inc
pop
js
push
mov
ror
loope
cld
xor
push
cs
cld
fstps
in
push
fwait
shll
in
xchg
and
pushf
push
or
icebp
mov
faddl
pop
pop
clc
mov
sbb
fimuls
jle
mulb
push
xor
mov
sti
scas
fnstsw
sti
mov
incb
negb
lcall
ja
dec
imul
mov
mov
xchg
pop
sti
xor
mov
sbb
fadd
push
add
gs
adcb
repz
sub
cli
mov
decb
je
push
sbbl
jo
test
sub
mov
pop
and
or
fstpl
push
mov
cmp
xor
hlt
xchg
xor
and
testl
mov
adc
shlb
insl
or
pop
and
inc
pop
inc
pushf
xor
cmp
movsl
add
cli
aaa
xchg
into
xlat
les
xor
pushf
jo
es
and
add
jp
cmp
cmp
push
sub
or
mov
xlat
xor
in
js
and
push
insl
loope
popa
cmp
clc
or
sbb
mov
loopne
loop
sbb
push
faddl
sbb
jg
out
push
icebp
rolb
rorb
in
or
cwtl
xor
mov
lods
xor
repz
jle
mov
repz
sub
xchg
popf
push
stc
enter
sarb
adc
cmp
aas
pop
insb
insb
jo
and
aas
mov
loop
and
pop
or
cmc
data16
xor
in
or
dec
mov
jae
push
mov
inc
lds
hlt
fs
jp
add
or
push
sahf
divl
fistl
stc
leave
push
pop
mov
mov
push
push
in
arpl
rcrb
dec
jl
int
scas
repnz
or
es
sub
cmp
adc
jae
cmc
insl
je
mov
pop
cmp
dec
icebp
int3
lds
jae
push
adcb
je
mov
inc
cltd
add
push
shrl
dec
sbb
xor
sub
mov
mov
lods
mov
xchg
jl
ljmp
jns
out
mov
push
pop
xor
sti
xchg
xchg
sbb
push
mov
cmp
xchg
inc
hlt
push
sbb
lret
pop
or
pop
jle
repz
and
push
imul
bound
or
rcrl
xor
mov
ja
dec
in
adc
sbb
lds
cli
pusha
fwait
lahf
in
adc
xchg
mov
sub
push
or
ret
mov
das
jnp
push
insl
aas
jl
shrb
lea
out
push
jg
mov
ret
push
stos
lods
jbe
call
out
outsl
xor
repz
icebp
les
lock
aad
pop
sti
rclb
pushw
xchg
push
adc
cmp
sub
outsb
repz
arpl
popa
dec
ja
jecxz
shrb
out
int
mov
cmpsb
fistpl
mov
pop
mov
ljmp
mov
adc
dec
aaa
cmp
mov
nop
mov
cmp
data16
or
aas
adc
cmp
lret
ja
mov
pop
rcrb
cmp
adc
sbb
fmull
mov
and
mov
outsb
or
aaa
xchg
add
xor
xlat
sbb
pop
ret
out
xchg
xor
and
pushf
pop
clc
add
jle
adc
xchg
repz
xor
dec
cltd
adc
and
sbb
outsb
std
jge
xchg
test
xchg
shrb
mov
mov
mov
jae
dec
sub
jl
dec
shrb
mov
cmp
sbb
fwait
adcb
or
jns
sub
add
sub
gs
push
loop
mov
sbbl
xchg
stos
xor
dec
leave
scas
lds
cld
and
dec
cmc
or
in
in
leave
aaa
leave
fcoms
mov
aas
dec
pop
popf
gs
xchg
scas
hlt
push
sub
btc
outsb
call
mov
sub
and
dec
loope
call
and
repz
leave
inc
out
int
jmp
mov
arpl
shl
jmp
xchg
and
jmp
sbb
inc
lret
outsb
mov
jl
xor
or
out
xchg
mov
sbb
add
sub
push
popf
dec
enter
loopne
mov
sub
and
enter
or
lods
jg
std
sbb
cmp
mov
mov
mov
ljmp
test
shll
scas
arpl
xor
sbb
xchg
fwait
shll
jb
sub
dec
sub
aaa
xchg
fsubrl
or
jae
and
hlt
loop
dec
add
fwait
popf
mov
iret
lcall
adc
xchg
xchg
xchg
dec
ret
data16
jae
ret
xchg
rorl
sub
out
pop
pushf
pop
mov
pop
push
into
pop
cmpsb
iret
ret
sbb
xor
pop
push
scas
mov
das
inc
jbe
sub
repnz
xor
lods
mov
xor
sbb
push
xor
pushf
push
fwait
js
pop
cli
clc
das
negb
sarb
mov
push
lods
roll
push
inc
lods
call
mov
bound
mov
or
cld
mov
mov
sbb
icebp
jmp
add
and
mov
jbe
ss
sbb
xchg
add
add
shrb
inc
imul
aaa
cwtl
jae
imul
sub
mov
pushf
aad
push
sub
xchg
scas
sbb
loopne
in
imull
add
add
lods
xchg
dec
jmp
dec
inc
pop
aas
daa
mov
and
cmpsb
insb
cmp
adc
and
xchg
cmp
movsb
sbb
loope
psrld
push
mov
push
cmpxchg
cld
out
out
mov
nop
cmpsl
in
jge
shll
and
daa
cmc
xchg
std
stos
xor
pop
adc
daa
sbb
stos
addb
and
push
ss
jge
fildll
loope
lea
mov
pop
fcmovbe
sub
lock
loopne
xorb
divl
xorl
xchg
aas
popf
mov
mov
mov
add
or
stc
jp
lods
pusha
inc
aas
test
jb
idivb
cmp
movsb
scas
fistpl
pop
jae
idivl
mov
pushf
xor
mov
adc
push
push
mov
push
movl
pop
iret
jns
cwtl
dec
mov
out
xor
cmp
or
cmp
dec
pop
jl
pushf
jg
insl
data16
mov
jbe
cmp
or
ljmp
or
mov
test
cmp
out
adc
lods
call
out
push
xchg
add
mov
fisttps
inc
push
neg
xchg
jne
test
jge
cmpl
xchg
adc
jns
js
cmc
shrl
rcrb
mov
xor
test
adc
sub
inc
pushf
lcall
loope,pn
xchg
mul
jmp
jl
mov
int3
sbb
inc
and
insb
dec
aam
ja
fwait
imul
mov
leave
stos
add
adc
shlb
mov
jnp
mov
add
idiv
sti
addr16
pop
pop
or
sub
fs
mov
aas
or
cmp
xor
jo
or
dec
aas
mov
loopne
daa
add
aaa
test
add
jg
lods
out
jge
pop
stos
push
add
rclb
pop
dec
push
and
mov
loopne
je
push
scas
push
or
mov
repz
pop
out
pop
dec
cmp
insl
fs
and
and
pop
jo
arpl
outsl
in
test
push
lret
inc
mov
xchg
in
outsl
test
mov
pop
push
xor
push
jne
or
bound
ds
xor
lahf
add
cli
mov
and
adc
negl
aaa
dec
jno
inc
fsubrl
xchg
rorb
mov
sub
in
or
mov
jnp
push
push
dec
mov
jg
iret
clc
js
out
cmp
jl
test
pop
fs
movsl
inc
popa
rcrb
out
mov
mov
sub
push
mov
in
out
xchg
mov
sbb
and
and
xchg
add
orb
popf
pop
in
add
mov
data16
mov
mov
addr16
int3
fwait
add
aaa
bnd
xor
cltd
push
popa
mov
fwait
lcall
pop
xchg
idivl
mov
int
daa
aaa
sbb
ja
jmp
cmp
cmp
pop
mov
aas
push
jns
sub
out
or
in
add
add
jle
sbb
ret
and
and
in
push
jo
daa
dec
scas
mov
ret
in
mov
push
or
cmp
xlat
lahf
and
sbb
sahf
mov
loop
and
add
inc
mov
ds
mov
inc
jns
and
flds
cmp
and
rol
jle
repnz
fimull
mov
pop
add
push
popf
cmp
cmpsb
aam
lock
popa
mov
sar
jecxz
cmp
mov
ret
or
pop
mov
arpl
addr16
sub
lods
jne
jge
mov
xor
movb
xchg
fucomi
call
fs
sti
adc
sub
fiadds
pop
aas
mov
arpl
enter
mov
stc
lea
and
hlt
ljmp
mov
test
push
fmull
or
push
adcb
xchg
adc
pusha
pushf
data16
or
fstpl
push
push
pop
add
insb
lods
push
loope
or
mov
xor
jbe
mov
xchg
orb
push
pop
pop
and
ljmp
imul
xchg
pop
popa
test
fidivrl
js
jmp
or
mov
aam
and
cmc
mov
sti
stos
imul
pop
mov
test
push
adc
sub
test
into
push
movsl
lock
sub
in
test
sub
xchg
or
inc
xchg
mov
pop
xchg
mov
cmp
into
and
data16
int
inc
imulb
in
adc
cld
int
int3
jp
bound
pop
mov
int
push
ja
xor
cmc
out
clc
add
lock
jg
xchg
in
jnp
xchg
push
bound
sub
mov
repz
and
inc
into
adc
inc
jo
sbb
mov
push
cmpsb
je
or
sub
xlat
cmp
in
pop
adc
jnp
jcxz
lcall
nop
pop
int
jo
sarb
out
inc
add
sti
out
mov
mov
pop
sbb
inc
cltd
std
push
or
jae
mov
pushf
movsl
arpl
rorl
pop
push
lea
ds
pop
fnsave
jp
dec
pop
insl
add
push
fisttpl
jnp
inc
pop
and
mov
sbb
sub
sub
pop
int
sub
xor
jo
rcrb
fbld
sub
inc
and
dec
mov
pop
pushf
iret
movsl
push
out
or
cmp
mov
pop
iret
in
int
xchg
jg
sub
adc
xor
rol
out
mov
dec
les
xor
pop
add
mov
outsl
inc
out
in
dec
adc
dec
xchg
out
inc
enter
shlb
cmp
cmc
sbb
sub
xor
pop
mov
jo
mov
decl
mov
leave
add
xor
pop
mov
outsb
cmp
or
mov
outsb
lds
xchg
xor
mov
out
and
ds
mov
sub
dec
dec
mov
xor
lods
mull
sub
pusha
pop
sub
mov
push
push
insb
jbe
int
xor
std
or
fsubrs
fnstsw
add
orl
and
and
inc
das
lret
rolb
cmp
inc
insl
aas
xor
xor
mov
outsb
stos
cmpsb
xor
mov
pop
fcomps
fwait
xor
out
call
imul
das
aas
in
dec
das
xlat
imul
push
cmp
lods
mov
cmpl
movsl
jp
add
adc
push
jno
cwtl
out
int
jl
jmp
mov
cwtl
cmc
mov
lods
push
or
notb
mov
mov
mov
inc
out
sub
mov
mov
aaa
jne
inc
daa
subb
ljmp
aad
orb
orl
shll
jae
call
mov
stos
aaa
hlt
cmc
popf
fsqrt
sbb
mov
adc
sbb
dec
nop
mov
int
test
mov
fstpl
mov
js
xor
pop
shlb
fisubrs
lret
and
mov
and
jae
js
in
lret
into
orb
pop
push
aad
fcoms
inc
adc
jg
imul
sbb
inc
push
push
nop
push
outsb
iret
mov
movsb
cmp
lods
arpl
ficompl
test
mov
shlb
cmp
out
or
jl
cmp
sub
sub
push
and
fidivrs
xchg
lds
loop
cmp
aam
jnp
dec
push
loop
sub
add
lods
sbb
subb
insl
sbb
inc
das
sahf
or
push
pop
andl
cmpsl
cmp
cmp
add
and
mov
sub
pop
lret
mov
loop
mov
mov
lahf
jbe
pop
xchg
mov
push
imulb
lea
mov
mov
imul
or
inc
sub
or
add
push
sbb
ja
mov
mov
test
push
jbe
jmp
addr16
mov
roll
loopne
rcll
outsl
je
movsb
cmp
lds
inc
and
jecxz
dec
adc
and
pop
lret
cmp
pop
sub
clc
mov
scas
pop
push
push
or
or
inc
mov
pusha
outsl
aad
mov
mov
sub
cltd
inc
cwtl
or
or
loope
movl
fwait
or
idiv
into
ja
add
mov
lahf
ret
mov
aam
rcrb
dec
cmovo
stos
sbb
jmp
xor
or
inc
je
popf
lcall
push
jo
sub
je
andl
jne
mov
push
stos
dec
rol
sahf
and
jle
xchg
pop
add
jle
mov
test
lods
pop
ljmp
outsb
imul
mov
mov
push
fcomi
push
sub
imul
test
sbb
cmp
xlat
movsb
fldcw
or
xor
test
or
xor
pusha
adc
lods
fistpll
cmp
jg
outsb
xor
leave
xchg
or
test
jne
js
push
adc
stc
sahf
sarl
push
in
sbb
stos
aas
cmc
int3
and
fldt
nop
xchg
movsl
sbb
inc
data16
clc
ja
loop
fisttps
jp
and
pop
imul
rorb
pop
popa
out
repnz
fimuls
adc
repz
fwait
sbb
int
sbb
xchg
call
sub
inc
and
mov
jp
add
std
push
stos
inc
ljmp
mov
dec
imul
push
xchg
cwtl
pop
insl
xchg
sub
xchg
jp
fidivrl
sub
aad
repnz
jb
xchg
mov
mov
sahf
pop
inc
stos
scas
fwait
add
lahf
jno
mov
aaa
mov
mov
cmp
jl
pop
aaa
inc
addr16
mov
mov
out
adc
pop
dec
mov
push
sbb
push
leave
into
xor
mov
aam
dec
in
mov
cmp
cmp
mov
mov
ljmp
and
dec
std
and
mov
push
in
mov
dec
mov
xchg
jno
jle
xchg
mov
jecxz
popl
add
push
xor
rcrb
and
mov
sub
bnd
sub
sbb
in
push
sbb
loopne
out
add
mov
sub
jmp
xchg
dec
mov
mov
mov
add
inc
les
js
adc
ret
pushl
xor
push
pop
mov
shlb
clc
pop
xchg
mov
les
aad
rclb
push
adc
scas
insl
andb
ljmp
xchg
dec
pop
or
leave
jo
ljmp
lea
ljmp
jl
xchg
out
add
sbb
push
cmpsl
out
mov
mov
test
mov
ret
xchg
xchg
mov
inc
subl
stos
add
or
mov
xor
mov
lods
mov
mov
xchg
int3
icebp
and
cmpsb
loope
push
mov
mov
sahf
or
lret
mov
inc
sbb
inc
mov
addl
das
in
mov
fistpl
xchg
lods
cmp
push
das
iret
sub
clc
les
jg
aaa
test
mov
push
xchg
vdivss
cwtl
sahf
dec
pop
mov
jg
jmp
insl
fmuls
xor
ss
xchg
sub
lea
push
mov
push
xchg
mov
fs
xchg
sub
aaa
cmpsb
inc
mov
pop
push
mov
cmp
push
or
leave
cmc
ss
inc
test
mov
mov
xor
add
fcompl
adc
dec
stos
mov
xlat
inc
test
sub
ret
dec
leave
orb
mov
stc
adc
adc
lcall
dec
sbb
aaa
mov
leave
jle
in
xor
or
mov
mov
add
loopne
push
inc
paddw
ljmp
xchg
and
xchg
jno
add
dec
scas
dec
pop
fdivrs
mov
adc
mov
mov
out
xor
data16
outsl
dec
or
and
dec
inc
pop
repz
lret
icebp
pop
sub
fstpl
cmp
dec
mov
test
fs
fwait
pushf
fiaddl
imul
dec
sub
sbb
xchg
nop
sub
fldt
test
cmpsl
lret
inc
add
jnp
pop
jl
pop
sarl
mov
adc
sbb
sbb
jl,pn
dec
or
sbb
aam
cmpsl
ret
cmp
mov
sub
cmpsb
lods
test
ljmp
jecxz
test
cmp
xchg
and
add
iret
cmp
bound
je
sbb
inc
faddl
testl
mov
or
jl
icebp
in
or
imul
xor
add
call
lea
rcl
aaa
negb
scas
mov
lcall
mov
ljmp
negb
sub
enter
scas
jns
sbbl
ja
rcrl
sti
pop
jg
cmpl
cmp
fistps
int
in
jmp
pop
stos
push
lods
ljmp
jp
loope
dec
add
lea
ljmp
push
sub
in
cltd
filds
pushl
xlat
push
nop
jnp
and
lret
cmpsb
inc
add
scas
and
sbb
add
cmpsl
xor
mov
repnz
out
outsl
cwtl
incl
nop
in
ja
xlat
sahf
inc
cmc
lcall
mov
and
xor
pop
sub
idivl
mov
jae
adcl
loope
ficompl
xchg
je
bound
mov
jmp
mov
sti
sub
mov
in
sbb
mov
aad
aaa
je
popa
lret
mov
jae
aas
cmp
ljmp
lds
mull
ds
and
dec
xlat
mov
ljmp
mov
lret
es
pop
mov
sub
imul
sub
std
cmc
dec
sub
out
xchg
or
fsts
dec
incl
jno
adc
pop
int
pop
int3
mov
ret
dec
add
cmc
sub
add
cld
in
xor
inc
frstor
lock
adc
jmp
lods
inc
and
inc
lahf
xchg
fwait
mov
movsl
fisubrl
or
push
les
xlat
outsl
lea
dec
popa
sub
int3
mov
adc
lds
mov
push
xchg
mov
mov
pop
scas
add
mov
mov
xchg
dec
lcall
dec
xchg
xor
in
inc
sub
outsb
sbb
in
mov
pop
and
mov
pop
and
or
pop
out
pop
pop
cwtl
inc
clc
pop
fisttpl
mov
jmp
or
mov
dec
iret
cli
imul
cs
daa
dec
repz
push
mov
pop
movsl
pop
fists
cmp
push
aam
inc
or
pop
xchg
xchg
adc
xchg
jg
and
jae
xchg
mov
push
and
test
xor
mov
pop
sub
pop
fstpt
lods
cmp
xchg
repz
rolb
jne
cmp
scas
push
fbld
aaa
call
iret
mov
cmp
stos
in
cld
scas
lret
cmp
pusha
incb
xchg
jns
test
cmc
outsb
jg
mov
out
lock
int3
cmp
iret
dec
prefetcht2
mov
add
add
jnp
jns
xor
mov
daa
or
les
addr16
lea
movsb
cld
xorl
mov
cmpsl
adc
mov
add
add
jecxz
add
rclw
xchg
mov
lods
lret
nop
insb
inc
push
int
mov
frstor
jle
mov
sub
lret
in
call
ret
into
adc
in
imul
addb
mov
mov
mov
or
dec
mov
pop
or
xor
int3
loopne
roll
xchg
ss
in
mov
cld
xlat
xor
rcll
stc
int
negb
pusha
push
sub
push
lock
push
add
mov
pop
xchg
mov
sar
mov
idiv
sbb
cmp
out
es
lret
in
or
ret
xor
popf
jae
add
fcmovnbe
sbb
pop
xchg
xchg
mov
jg
mov
mov
pusha
adc
push
mov
ljmp
and
pop
push
cmp
jg
int3
ss
std
fwait
scas
test
rcpps
repnz
cmpsl
lods
push
lods
sahf
xor
and
ja
jg
dec
popf
cld
mov
dec
dec
sbb
mov
xor
pop
xor
cwtl
mov
xor
cld
outsb
in
in
ror
rclb
or
cltd
mov
add
xchg
in
pusha
xchg
xor
push
arpl
sbb
arpl
ds
xchg
mov
xchg
xchg
push
nop
cmc
pop
pop
ds
jne
lock
lea
lcall
pop
sbb
xlat
out
rcl
lahf
stos
sbb
or
movsb
pop
sub
xor
lret
stc
and
mov
cmp
mov
jl
out
dec
mov
mov
roll
cmpsb
imul
pusha
sub
fists
jge
jl
xchg
fisubs
jbe
mov
in
xchg
sarl
fsts
push
sub
and
bound
jns
cli
sub
mov
out
sbb
adc
push
mov
push
cmc
dec
sub
mov
add
pop
push
loop
scas
jne
fwait
sbb
sub
hlt
out
cmc
mov
xchg
and
loop
leave
pop
add
mov
cltd
xorb
notl
pop
call
int
dec
pusha
mov
cmc
xlat
out
adc
cld
sbb
js
test
dec
testl
add
cwtl
out
and
orl
and
aad
xor
inc
jnp
clc
cmc
mov
inc
mov
push
dec
jecxz
popa
mov
adc
adc
push
add
nop
clc
push
jg
stc
hlt
mov
mov
lods
push
mov
jge
pop
pushf
mov
aad
movsb
or
inc
xor
sbb
les
mov
mov
ss
mov
adc
xorb
cmp
mov
jnp
and
clc
in
cld
es
ljmp
dec
test
pop
in
push
push
cmp
dec
dec
cltd
outsb
jecxz
insl
jg
xchg
inc
outsb
out
pop
into
sub
push
and
mov
mov
add
xchg
enter
xor
fs
rcr
das
inc
dec
arpl
es
shl
lods
sub
ds
pop
movsl
jp
sub
out
dec
call
mov
mov
xlat
test
rorb
mov
add
ret
stos
cltd
fcmovnb
push
aaa
rol
push
mov
or
fmul
mov
insl
cmp
call
ss
mov
add
push
loope
inc
out
sbb
mov
lds
hlt
out
pop
call
push
xchg
pop
adc
push
sbb
fimull
loop
aad
sbb
sub
push
loope
out
mov
std
push
push
and
dec
push
fdivl
and
orb
push
rolb
push
xor
mov
pop
inc
or
fs
jo
out
je
pop
mov
iret
mov
adcl
cld
mov
and
fs
popa
mov
jne
sub
dec
inc
or
jle
add
stos
adc
rorl
mov
mov
push
ljmp
daa
arpl
sbbb
cmc
mov
aas
jl
adc
lret
iret
mov
rsm
sbb
xor
sbb
jmp
loopne
sahf
ud2
mov
mov
or
in
adc
dec
jg
dec
inc
and
nop
fisubl
mov
xchg
adc
repnz
lods
dec
roll
pop
adc
mov
cmp
adcb
shlb
pushf
cmpl
xor
popf
mov
adc
add
movzbl
lds
or
cmc
enter
std
loopne
lcall
lret
int
aad
sti
movsl
or
dec
dec
les
cld
dec
jnp
rcrb
pop
in
mov
sub
jge
mov
leave
sahf
mov
and
xchg
pop
push
rcl
loopne
jae
jo
mov
pop
pop
enter
xchg
mov
jb
popf
xchg
inc
jmp
outsl
adc
dec
mov
and
xchg
cmp
cwtl
fwait
pusha
push
aas
idivb
pop
sbb
lock
pop
jge
test
push
dec
pop
xchg
loop
inc
in
xchg
fidivl
add
out
popf
sub
popa
mov
xchg
inc
cmc
ficoml
sbb
out
imul
jecxz
stc
pop
mov
pop
pushf
roll
xchg
aas
call
cmp
pusha
mov
bound
jmp
cmpsb
jecxz
push
clc
mov
xor
jecxz
in
jge
enter
inc
sahf
cltd
dec
sti
nop
out
jp
or
int
cmc
rorl
jo
shrb
mov
insb
sbb
jns
cmc
xor
adc
pop
jl
sub
cmp
xchg
inc
add
aas
insl
aad
imul
jno
sub
dec
mov
and
adcb
je
mov
and
xchg
loop
pushf
pop
mov
data16
lcall
in
and
ret
gs
stc
ficoms
cmpsl
sbbl
pop
cmp
dec
fwait
jecxz
out
mov
rcll
cmpsb
test
jp
inc
adc
push
int3
mov
pop
xchg
cld
je
mov
sahf
ljmp
sub
and
jnp
out
push
mov
xchg
addr16
jle
test
movsl
shl
shlb
or
sti
pop
mov
fs
test
stos
pop
mov
nop
lods
mov
clc
gs
inc
xlat
xchg
movsl
xor
sbb
js
lods
add
mov
popf
mov
cs
xor
sub
cmp
mov
inc
hlt
cmp
xchg
pop
jo
inc
fdiv
in
add
fucomi
lcall
popa
fdivr
cmp
cld
adc
xor
rcrl
xor
cmp
cs
enter
jb
gs
fisubrl
dec
inc
mov
ret
mov
push
sti
jmp
mov
mov
pop
js
pop
es
xchg
push
xlat
and
gs
sub
lods
mov
dec
int3
or
inc
sbb
js
mov
mov
sbb
pop
jae
scas
ljmp
gs
outsl
xor
cld
push
je
sub
aas
adc
jns
mov
cs
push
jle
stc
sbb
cmp
lahf
mull
lahf
out
sub
add
fsubrp
movsl
push
hlt
and
aam
xchg
pop
in
pop
lds
in
cmp
xor
lret
mov
sti
sbb
daa
push
dec
imul
fbstp
data16
mov
sub
iret
into
out
add
inc
add
loopne
jns
out
jecxz
push
mov
or
jbe
sarb
mov
pushf
jbe
fmull
add
adc
clc
mov
inc
lret
mov
bound
sub
add
fnstsw
je
stc
mov
xchg
leave
push
xlat
inc
dec
push
xor
xchg
and
sub
scas
scas
adc
mov
cmp
icebp
mov
aaa
outsb
iret
sbb
loop
jle
je
xorl
or
pop
pop
pop
lahf
xor
sbb
xchg
daa
das
xchg
popf
imul
ss
rcr
insl
mov
aaa
adc
rolb
bswap
xor
loope
in
fldenv
pop
loopne
pop
sbb
fwait
or
adc
add
je
rcrl
pop
mov
or
aad
dec
inc
outsb
stos
mov
mov
xor
inc
adc
jae
add
lahf
sbb
lcall
mov
in
add
dec
addl
cwtl
imul
mov
cmpsb
loop
loope
xchg
adc
sub
jmp
outsl
jmp
out
inc
xor
add
add
lret
push
cmpl
push
xchg
sub
sbb
jnp
das
mov
push
sbb
mov
push
stc
cmp
imul
push
and
pop
mov
mov
cmp
add
test
sti
outsl
lahf
sbb
in
or
xchg
jae
mov
icebp
stos
cmc
icebp
sbb
andb
jle
xor
add
adc
lds
or
mov
stos
stc
pop
out
inc
test
mov
jg
pop
repz
jo
cmpsl
imul
and
xchg
cs
shl
mov
mov
mov
cmp
adc
inc
std
jo
enter
outsl
rclb
cmc
repnz
lods
adc
mov
in
subb
mov
dec
std
loopne,pt
insl
push
hlt
push
test
mov
push
cmc
mov
lahf
sahf
push
pop
cmp
or
mov
jg
mov
pop
add
xchg
dec
push
loopne
xchg
mov
ret
jns
nop
lcall
xor
xchg
es
mov
cs
cld
imul
call
nop
popa
pop
mov
in
xchg
push
xchg
lret
bound
outsb
push
and
jae
or
fidivl
pusha
cmp
out
insb
nop
lahf
js
loopne
sub
mov
mov
jmp
or
test
rolb
clc
or
leave
lret
xchg
in
in
loope
jle
pop
dec
call
fildl
push
add
in
and
lret
sbb
mov
jl
ror
jp
js
pop
mov
jg
jbe
out
sbb
adcl
and
xchg
fsubl
cmpsl
fildl
sbb
sbb
xchg
aas
sub
add
nop
mov
push
arpl
xor
sub
hlt
pop
mov
aaa
dec
sub
popf
push
push
int
mov
xor
adc
push
or
pop
xchg
enter
out
sbbb
popf
in
fbld
subb
jno
sbb
rclb
test
lret
jb
mov
mov
das
jle
mov
push
ja
jp
push
sbb
adc
and
pop
sub
and
test
or
pop
bound
mov
out
ret
cmp
xor
lcall
arpl
pop
aad
mov
fisttpl
adc
inc
fisubl
mov
mov
push
cmpsl
ljmp
mov
mov
push
xchg
fwait
int
jle
ficompl
int
inc
frstor
xchg
imull
push
jo
clc
xchg
jns
test
jne
fsts
popf
or
sbb
and
addr16
cmpsb
sbb
pop
movsl
push
mov
jmp
jge
pushf
pushfw
outsb
mov
mov
xor
pop
mov
pusha
mov
jne
cwtl
dec
es
test
cmp
fidivl
push
push
push
pop
mov
mov
test
cltd
mov
mov
or
jge
fldl
outsb
xchg
xchg
mov
maskmovq
notl
xchg
adc
sub
adc
jne
mov
loopne
cltd
jmp
repnz
std
cli
push
mov
jp
mov
out
inc
std
xor
xor
insl
mov
jo
js
in
pop
scas
loope
adc
fisttps
outsl
test
sub
mov
mov
push
sbb
sub
inc
push
xchg
xchg
lret
out
pop
shlb
mov
rep
test
gs
daa
scas
fsubp
mov
mov
inc
mov
inc
fwait
scas
add
js
stos
cld
mov
mov
inc
and
or
icebp
jae
lcall
xor
cmp
sub
dec
inc
push
je
and
sub
and
clc
mov
test
xchg
in
xor
loop
popa
jnp
adc
inc
jbe
mov
out
xor
ja
idivl
mov
jl
mov
pcmpeqw
repnz
sub
inc
jb
enter
hlt
add
xchg
mov
mov
fdivrl
fdivp
es
mov
sbb
xchg
lahf
xchg
xlat
and
and
mov
cmpsb
outsb
jne
cld
test
gs
sbb
and
dec
test
jo
inc
inc
fsts
and
sub
outsb
add
pop
je
cmp
dec
sub
add
jb
lret
les
movsl
bound
mov
ret
ja
mov
dec
adc
add
lahf
adc
in
out
pusha
push
adc
scas
push
sti
or
xchg
out
test
jl
aas
lods
pushf
jae
aaa
aaa
inc
cld
cmp
xorl
inc
shll
dec
sub
scas
push
push
and
movsl
paddsb
sbb
movsb
inc
push
mov
popf
pop
out
adc
sub
xchg
data16
lods
in
mov
sbb
lcall
and
mov
pop
mov
mov
inc
clc
push
adc
add
or
cmp
popa
sub
pop
adc
jae
jecxz
loope
cld
xchg
fxch
mov
jnp
ret
push
xor
sarb
out
aaa
scas
jge
iret
or
lods
dec
mov
sub
imul
leave
jmp
mov
lret
mov
in
xor
pop
addr16
mov
pop
lret
mov
mov
mov
ja
inc
sbbl
movsb
adc
inc
jo
sub
in
fwait
test
mov
mov
cmc
insb
out
or
adc
insb
and
sub
in
in
add
js
mov
dec
jmp
jnp
mov
inc
and
cmp
mov
stc
shrl
ret
es
fs
xor
pop
aam
mov
push
sub
sbb
or
es
push
add
ja
aad
sbb
hlt
bound
mov
and
jnp
push
daa
adc
push
pop
in
xor
fwait
pop
or
bnd
sbb
icebp
xchg
mov
add
outsb
push
inc
scas
test
mov
xchg
cs
adc
jo
adc
addr16
popf
loopne
or
in
rolb
mov
sbb
mov
decb
fdivrs
inc
testl
icebp
shrl
shlb
mov
mov
repnz
or
pop
mov
pop
push
inc
sbb
inc
out
stc
faddl
lret
movsb
clc
pop
push
mov
cld
adc
ror
add
dec
xor
adc
push
cmp
push
mov
addr16
sub
pop
stos
insb
roll
fs
loop
inc
add
pusha
mov
out
in
insl
test
fisubl
fwait
das
das
adc
in
jecxz
jae
jl
pop
push
testl
mov
scas
add
cmp
pop
push
fcmove
xchg
and
mov
test
or
mov
outsl
cmp
scas
and
cltd
mov
xchg
mov
xor
mov
insb
mov
mov
xor
cli
aam
jb
jge
jp
incl
cmp
sub
lods
orb
jb
jns
mov
pop
popf
or
sbb
dec
add
jg
push
or
sbb
pushf
push
cmpb
decl
pop
lods
test
movsb
jl
shl
icebp
outsb
arpl
mov
dec
mov
sbb
jmp
add
inc
and
or
imul
test
repnz
out
pop
xor
xchg
subl
push
in
test
sbb
dec
lods
mov
arpl
insb
icebp
xlat
jae
fwait
pop
out
cli
inc
bound
lcall
pop
xchg
push
lret
test
out
xor
pop
dec
idivb
push
jg
inc
clc
sbb
movsb
xchg
in
inc
aam
shll
inc
ss
inc
jle
jmp
pop
inc
repz
hlt
fisubs
incb
movsl
int
insl
dec
xlat
test
pop
inc
insb
cwtl
mov
xchg
negl
jmp
cld
or
mov
lods
js
pusha
push
mov
call
aad
scas
or
or
push
or
sbb
sub
dec
int
cli
bound
mov
not
xchg
out
dec
push
and
cmp
cltd
les
add
stc
xor
cmp
xchg
lret
loopne
add
and
push
dec
mov
cltd
mov
imul
inc
mov
inc
lret
push
lock
das
jecxz
out
xchg
scas
and
repnz
xor
xchg
ljmp
pop
mov
jbe
push
movsl
mov
inc
cli
in
es
cwtl
push
gs
leave
and
add
insb
nop
mov
mov
popf
pop
lahf
push
and
xor
cmp
in
fdivr
outsb
into
outsl
adc
icebp
pop
test
mov
aas
mov
pop
xor
fwait
sub
pop
add
ja
jl
jnp
sub
rol
dec
sbb
mov
sbb
das
sbb
jbe
cltd
xchg
lret
inc
cmpsb
test
imul
xor
dec
sub
lret
jl
mov
adc
cmp
sub
dec
mov
out
lock
movsl
mov
sahf
aam
sub
xchg
mov
adc
pop
test
push
adc
bnd
xchg
fs
pop
xchg
rclb
mov
mov
inc
dec
mov
mov
fcoms
inc
out
mov
mov
cmp
in
sbb
cmp
fsubrl
outsl
mov
aaa
out
lcall
mov
ja
inc
xchg
inc
repz
add
xchg
push
mov
loop
fcom
imul
xchg
jge
cmc
or
xor
int3
cwtl
shlb
jmp
add
xor
test
push
icebp
enter
fsubrl
sbb
scas
add
int
fsubrs
je
dec
dec
pop
inc
xchg
add
inc
sahf
lret
out
mov
imul
clc
int3
adc
pusha
xchg
push
push
adc
jb
push
pop
xlat
xchg
xchg
ficomps
ret
je
dec
out
pop
mov
hlt
lods
pop
and
sub
push
les
xor
inc
testl
shll
inc
mov
mov
lds
pop
rcrl
les
dec
bound
pop
dec
or
call
or
jo
push
inc
push
mov
mov
and
inc
insb
scas
cmp
nop
sbb
in
imul
mov
or
add
aas
jmp
adc
cmp
and
or
or
inc
aaa
data16
lret
rol
shll
ret
out
scas
clc
xchg
adc
push
jmp
insl
subb
dec
cmp
psubusw
mov
shll
cwtl
pusha
rcrb
aad
aaa
mov
mov
or
shl
ret
push
fdiv
std
jno
xchg
xor
jae
push
sbb
loop
xchg
scas
rcl
add
fsubrl
inc
sahf
sbb
or
pop
dec
add
sahf
cmpsb
mov
rorl
jno
dec
pop
call
lock
in
in
cmp
ds
aas
daa
cwtl
ljmp
sbb
jbe
stos
in
or
into
mov
fnsetpm(287
xchg
movsl
test
or
inc
lods
fmull
or
add
loop
fstl
adc
sbb
int3
mov
mov
pinsrw
jle
bound
mov
and
je
gs
inc
les
push
mov
pmaddwd
lahf
jne
cmpsb
xor
in
ftst
int3
cltd
xor
xchg
sub
fbld
or
mov
enter
out
sahf
mov
xor
sahf
dec
stc
jg
in
mov
cmp
outsb
dec
mov
stos
negb
mov
ljmp
out
pusha
sysexit
je
dec
js
dec
dec
dec
loop
xchg
idivl
mov
push
hlt
fildl
add
mov
cmc
jnp
orl
xor
pop
cli
sqrtps
je
sub
mov
lea
sbb
xlat
cmp
lcall
nop
fs
xor
out
xchg
xchg
add
ljmp
add
fdivs
clc
stos
das
add
movsl
mov
lods
dec
aad
xchg
mov
loop
lock
lea
cmpsb
iret
aas
shlb
rcrb
arpl
add
mov
adc
dec
fildll
sbb
fdivs
pop
insl
mov
xor
data16
sbb
dec
jge
jae
xlat
mov
and
xlat
push
and
mov
dec
push
lods
mov
stc
mov
mov
xchg
mov
ret
add
clc
shrb
mov
or
je
shlb
repnz
mov
push
in
add
lret
xor
fsubrl
dec
mov
sbb
adc
inc
jp
cmpsb
enter
mov
inc
hlt
mov
mov
mov
repz
cmc
mov
aaa
rol
addl
adc
and
je
mov
lret
cmp
jg
pop
xchg
xchg
sub
js
pop
lds
xchg
cmp
imul
mov
fsts
test
jp
jno
sti
xchg
sbb
mov
mov
imulb
jb
mov
sbb
push
mov
fidivrs
dec
mull
sti
fiadds
aad
in
dec
ss
dec
lods
inc
jg
je
adc
jmp
out
mov
mov
nop
daa
inc
inc
or
lret
sarl
sub
push
popa
mov
repz
popa
fsubrs
insb
sub
jb
or
lods
and
sbb
push
test
sbb
bound
and
fcmovnb
loop
lcall
ja
leave
sti
rclb
and
mov
pop
mov
add
subl
lods
outsb
pop
out
xor
push
stos
push
sub
xor
ret
xchg
pop
mov
in
push
sbb
test
dec
jb
ja,pt
dec
mov
sub
imul
lods
dec
and
bound
and
ljmp
xchg
arpl
cs
jnp
shl
sahf
push
ror
add
fisubrl
les
dec
mov
mov
push
mov
push
ja
jnp
pop
jo
insb
sbb
xchg
jp
out
popf
stc
rcrb
ret
lds
add
jno
icebp
ljmp
mov
inc
inc
in
fcoml
stos
pop
das
mov
jge
cwtl
xchg
scas
add
mov
inc
xchg
mov
pop
xchg
sbbl
add
stos
cmp
lods
push
pop
das
push
negl
outsb
scas
xchg
jno
in
xorl
shlb
movsl
icebp
or
jp
adc
push
daa
js
and
js
push
pop
adc
fdivrl
mov
mov
sahf
scas
and
pop
std
mov
push
cmp
in
mov
in
lret
push
cmc
jo
jge
test
out
and
aaa
pop
icebp
push
addb
inc
mov
test
xor
ljmp
inc
add
mov
jmp
mov
lock
aam
or
jmp
sbb
lods
xor
mov
mov
mov
out
inc
nop
add
lcall
iret
rorb
mov
shll
inc
mov
gs
adc
loope
sub
cli
loope
mov
ss
je
pop
bound
bound
push
cmc
notl
xchg
std
push
pop
sub
fnstcw
push
std
sub
daa
clc
das
mov
cli
push
roll
insl
xchg
and
and
nop
inc
dec
ret
lods
in
pop
push
xchg
mov
bound
loop
insb
jne
lock
jge
pop
add
dec
pop
pop
idiv
stos
pop
out
adcl
out
mov
scas
vcvtsd2ss
mov
inc
mov
stos
imul
cli
lret
cmp
inc
and
je
jae
out
mov
pop
nop
scas
lock
and
pushf
aad
call
fbstp
sbbl
xchg
lahf
sbb
dec
sti
pop
jno
ret
shlb
push
std
or
and
punpckhwd
ret
aaa
daa
rolb
pop
jbe
movsl
test
in
and
lea
dec
addl
pushw
stos
adc
push
sti
jl
push
pop
mov
xlat
test
xchg
testl
out
push
inc
push
dec
out
cmp
cmp
shll
inc
mov
xor
stos
in
cwtl
arpl
push
jmp
cmp
lds
dec
gs
inc
xchg
dec
out
inc
mov
inc
adc
cwtl
sub
sbb
fsubs
mov
adc
dec
and
icebp
jb
js
inc
imul
jnp
sarb
je
andps
jmp
int3
pop
mov
daa
adc
fstl
test
jo
xchg
xchg
push
cmc
push
divl
jbe
lds
fiaddl
cwtl
lea
and
gs
mov
iret
and
cld
xchg
fdivrl
adc
lods
mov
cld
and
mov
out
mov
jmp
sbb
leave
mov
cli
or
outsb
mov
cwtl
xor
and
ret
sbbl
sbb
jbe
stc
mov
or
ljmp
faddp
imul
adc
jae
aam
movsb
leave
lods
push
mov
jno
int
mov
push
dec
movsb
test
jl
repz
push
cmp
add
dec
das
xchg
sbb
gs
fs
adc
in
adc
sbb
push
shrl
push
mov
push
outsb
loopne
add
aam
add
xor
and
inc
xor
dec
dec
mov
fisubrl
out
sahf
jle
mov
repz
cmp
push
xchg
jge
add
loope
dec
popf
pop
cwtl
pop
fldenv
loopne
jmp
into
push
out
mov
fwait
in
hlt
jecxz
xor
hlt
fwait
jecxz
sbb
leave
test
or
out
cmpsl
mov
push
movsl
mov
sti
push
jo
cmpsb
pusha
loop
cwtl
inc
pop
add
mov
xchg
xor
inc
sub
je
ljmp
inc
jbe
pusha
add
and
and
or
push
clc
pushw
pop
xorb
sbb
add
jl
outsb
outsl
fldenv
fbld
cmpsl
adc
mov
out
clc
pusha
or
push
testl
test
push
sub
imul
loope
dec
filds
and
mov
adc
add
bound
testb
dec
faddl
fbstp
jge
mov
pop
sbb
ret
frstor
hlt
mov
pop
mov
aam
xor
cmp
mov
pop
scas
push
mov
sub
lds
mov
cmp
push
mov
imul
cmp
mov
ljmp
xchg
test
in
and
xchg
imul
dec
pop
push
mov
sbb
call
pop
aas
aad
xor
hlt
and
inc
movsl
repz
add
jnp
stc
repnz
sub
inc
cltd
mov
lods
outsl
push
sbb
insb
icebp
lock
dec
bound
aad
sbb
mov
or
fdivr
in
fnstenv
push
hlt
xchg
xchg
mov
shlb
sbbl
mov
inc
or
xchg
pop
dec
pusha
movsb
cmc
faddl
or
mov
and
sbb
adc
adc
pop
negl
xchg
cmp
sub
fs
sbb
movsl
orl
sbb
jae
jb
inc
lcall
pop
idivb
lahf
and
cmp
and
scas
idiv
icebp
push
in
dec
or
repnz
rsm
pop
dec
or
push
xor
cli
mov
shlb
xor
xchg
and
lcall
int3
inc
mov
les
add
pop
ret
shll
lea
ret
out
cltd
lods
dec
mov
leave
mov
bound
sub
loop
cmp
mov
add
pop
ja
mov
enter
nop
adc
mov
xlat
vxorps
jns
xorb
inc
aas
xor
mov
shrl
adc
pusha
xchg
mov
or
jne
dec
std
cli
mov
stc
cmp
hlt
mov
mov
xchg
addb
xor
cmp
jecxz
inc
movsl
push
jno
add
dec
dec
ret
shrb
ret
sbb
dec
popa
popf
xchg
mov
mov
mov
popf
mov
push
icebp
xor
fcmovnbe
stos
scas
pusha
enter
jl
push
inc
jnp
inc
pop
push
nop
sub
jne
inc
movsb
out
dec
mov
sahf
jle
iret
lds
repz
xor
push
call
or
adc
in
sti
push
mov
loopne
lret
loope
test
push
mov
addl
pusha
aam
mov
stc
lods
test
mov
ja
outsl
stc
pop
mov
mov
inc
dec
ret
daa
mov
shlb
ja
xchg
in
cmpl
adc
fdivrp
adcl
je
mov
and
mov
popf
stos
xor
popf
movsb
mov
sub
xchg
add
cltd
rcrb
arpl
inc
adc
js
dec
sahf
push
lods
xor
push
rcrl
leave
popa
jge
dec
jg
dec
or
movsb
jbe
fstpt
adc
and
cmp
rcrb
stos
mov
sar
sbb
out
pop
sub
lock
ss
sbb
add
je
jb
ja
clc
scas
and
pushf
mov
jg
das
pop
aaa
inc
addb
xchg
push
push
cmp
cmp
pop
xorl
out
push
mov
iret
sahf
sbb
loopne
mov
mov
mov
test
into
adc
mov
in
sahf
or
das
aas
shrb
sbb
xchg
sub
stos
jae
pusha
pop
outsl
rcll
push
cli
adc
or
scas
jl
outsl
loop
loopne
adc
adc
bound
dec
daa
mov
and
divl
push
les
aad
fnsave
add
or
repnz
and
imul
ljmp
jge
fs
ret
dec
pop
or
cmp
xchg
sti
jmp
into
lcall
or
xchg
pop
jge
pop
cmp
test
dec
adc
ss
call
ret
cwtl
pop
mov
cwtl
mov
fcmovbe
in
insl
push
inc
insl
sbb
idivl
xor
add
fsubs
mov
gs
mov
in
jae
clc
adc
fisttpl
sbb
fnstsw
rolb
and
inc
dec
xor
push
aas
sbb
jnp
imul
jne
inc
push
and
mov
dec
sti
cmpsb
pusha
fcomip
pusha
jb
adc
pop
and
add
sub
inc
mov
mov
and
push
jmp
adc
cli
xor
xor
pop
cwtl
push
inc
sub
scas
adc
jl
and
or
pop
adc
jns
sub
push
fistpl
xchg
xor
pop
iret
mov
inc
les
inc
add
xrelease
int
insb
jge
imul
out
jge
daa
add
stos
mov
inc
xchg
mov
test
jg
and
enter
daa
negl
pop
outsb
cmp
mov
outsl
xchg
add
push
adc
enter
sub
cltd
sbb
push
pop
or
mov
fistl
ljmp
shlb
xchg
pop
repz
dec
mov
mov
pop
jge
mov
add
test
jb
add
mov
iret
push
sahf
sub
push
in
dec
stc
jns
and
xlat
cmp
jb
xlat
fs
iret
cltd
test
test
inc
sbb
fisubl
adc
stos
push
arpl
mov
mov
add
pop
cmpsb
mov
aaa
int3
fld
inc
jb
loopne
imul
xor
test
dec
push
pop
mov
xchg
cwtl
xor
scas
cmpsl
push
lock
fisubrs
pop
push
push
pop
pushf
add
repnz
mov
out
mov
int
push
mov
pop
sbb
popa
aam
icebp
in
push
test
push
xor
scas
arpl
lahf
mov
jmp
pushl
les
mov
loopne
jp
fnstsw
lret
lds
in
mov
jp
pop
fdivs
jb
faddl
sbb
mov
enter
insl
mov
cmpsb
imul
clc
mov
jb
cmpsl
out
in
add
push
mov
jmp
std
dec
inc
mov
pop
jbe
je
int3
mov
and
cmp
jg
addr16
pop
cmpb
arpl
js
sbb
mov
enter
popf
jo
mov
insb
gs
xchg
mov
pushf
out
sub
push
pusha
int
je
aas
les
test
lds
cmp
nop
mov
subl
lods
push
ds
scas
or
repnz
rorb
int3
or
in
int
imul
inc
xchg
or
dec
cmp
pop
xor
ss
idiv
pop
pop
lods
or
add
sahf
push
or
or
loope
loopne
mov
add
test
data16
sbb
and
and
std
xor
loop
int
in
dec
cld
outsb
popa
jnp
jbe
mov
pushf
sarb
mov
in
add
mov
popf
pop
sub
inc
xchg
jecxz
shrl
into
add
es
pop
pusha
xor
push
push
adc
fstl
jns
push
and
xor
adc
cmp
test
outsl
pop
cwtl
lret
inc
mov
dec
dec
test
lcall
je
adc
sub
stos
mov
and
mov
or
add
jnp
popa
mov
push
dec
sahf
rcrb
mov
lds
shrb
lods
fistpll
inc
movups
dec
push
jnp
mov
jno
lock
repnz
mov
pop
hlt
dec
cwtl
movsb
fsubr
cli
repz
mov
xchg
mov
jle
in
inc
mov
or
lock
ja
jle
xchg
testb
pusha
jae
loop
or
int
pop
nop
stos
in
fstps
cli
lret
rcr
dec
outsl
inc
sub
push
dec
std
aaa
cmp
and
sbb
inc
mov
imul
sub
or
outsl
lods
xchg
and
fs
stos
loop
adc
out
push
sbb
dec
or
stos
lret
fistl
sub
add
pop
or
add
das
pop
jbe
mov
int3
pop
ss
sbb
jle
sub
in
mov
call
adc
loope
jmp
repnz
sbb
mov
add
leave
or
xchg
mov
outsl
jnp
pop
lea
clc
adc
xor
jmp
cmp
adc
lret
sahf
xchg
or
cmpb
cwtl
call
jmp
cmp
pop
sub
clc
icebp
push
jo
cmp
fucompp
adc
cmp
out
jne
cmp
lcall
xor
mov
icebp
fiaddl
fs
inc
xchg
push
into
dec
sub
and
inc
shlb
push
loop
jo
outsl
cwtl
push
push
mov
pushf
shr
in
int
mov
add
lds
sbb
imul
cs
dec
in
xor
and
and
mov
inc
inc
shl
sub
xor
mov
sub
int
pushf
sbbl
dec
xor
movsl
inc
aas
pop
jl
ljmp
insl
subl
and
test
aam
add
lret
call
int
in
push
fcoms
imul
mov
arpl
mov
pusha
mov
and
adc
mov
cmpsb
mov
stos
out
mov
fsubl
mov
mov
cmpsb
inc
or
adc
lods
arpl
std
jge
xor
adc
jle
fst
cld
popl
int
fistl
in
sbb
mov
loop
imul
scas
sub
imul
xchg
fcomip
imul
cld
stos
pop
push
push
sar
xchg
repnz
push
int3
insl
in
inc
or
movsw
sti
xor
outsl
leave
push
cmpsb
aam
icebp
or
cmpsl
jmp
mov
xchg
mov
pop
iret
xor
test
cmp
nop
mov
xchg
push
inc
mov
sub
in
addr16
push
cmp
cmpl
jns
hlt
or
nop
pop
pop
mov
xor
cltd
in
iret
xor
test
fstps
imul
stc
push
add
dec
inc
gs
icebp
movsl
bound
xchg
das
roll
icebp
mov
push
sbbl
ja
fidivs
jo
mov
adc
dec
push
sub
arpl
test
int3
jge
movsb
sub
aaa
fists
subl
pop
pop
jo
sub
call
sahf
xorl
xor
ljmp
rcll
or
pop
add
xor
adc
push
aam
shll
sub
sbb
cmc
xchg
push
outsl
add
cwtl
mov
ss
inc
xor
decl
or
xor
or
lods
mov
xchg
imul
sbb
mull
push
cmp
mov
mov
mov
aam
xchg
fstpl
insl
or
inc
addr16
pcmpgtw
jne
cld
jnp
mov
jo
dec
mov
movsl
fsubl
jno
lods
xor
lret
scas
test
std
fcomps
jmp
mov
mov
into
pop
mov
push
sbb
and
inc
mov
dec
fwait
mov
xor
xchg
shll
adcb
pushf
cltd
lahf
loope
repz
mov
pushf
addl
inc
jle
xchg
sub
sbb
and
lods
enter
dec
add
stc
mov
cli
or
addr16
sti
mov
loopne
and
stc
or
or
les
lock
hlt
scas
xchg
jo
repz
mull
lods
fsincos
mov
push
jb
mov
stos
lret
push
add
lods
insb
pop
aad
roll
dec
pusha
add
push
lock
push
sub
or
push
idivl
leave
sarb
iret
sub
xchg
jp
dec
repz
fists
cld
cmp
xchg
clc
clc
xlat
mov
movsl
inc
pop
pop
rol
ljmp
xor
xlat
ficoms
sub
and
or
mov
xor
stc
rcr
imul
mov
sbbb
cmp
mov
jae
dec
dec
sub
scas
fsubs
enter
cltd
sbb
lret
add
or
sub
push
xchg
inc
push
push
xchg
pop
ss
push
dec
cs
dec
push
outsl
adc
les
gs
xor
push
mov
mov
push
enter
add
push
pusha
xor
pop
repz
out
mov
or
pop
outsl
adc
xor
xchg
inc
inc
mov
jne
call
adc
or
ret
mov
fnsave
fmul
ror
dec
cwtl
dec
and
test
xchg
fwait
je
sbb
cld
xchg
xchg
add
aad
loopne
cltd
lcall
or
sbb
and
or
loopne
popa
loope
or
and
xchg
lret
sub
jge
sbb
pop
addl
pusha
xchg
mov
dec
int3
sub
push
cmp
cmp
insl
and
mov
hlt
or
mov
adc
mov
dec
insb
pop
add
add
xor
aas
sub
aas
or
hlt
mov
mov
sub
filds
ljmp
add
loop
push
inc
das
xor
int3
mov
std
enter
mov
fldenv
and
cmpps
pusha
push
testl
ja
lret
fwait
jae
pop
mov
adc
stos
fsubs
fsubs
push
inc
outsb
xor
jecxz
mov
push
int3
inc
inc
enter
mov
aaa
pop
dec
je
add
mov
fs
scas
imul
push
mov
test
xor
dec
pop
cmp
and
mov
cmpsl
stos
cmp
mov
dec
sarb
cmp
sbb
add
push
enter
jns
rorl
rcll
aas
lea
mov
movsb
push
std
ja
pop
ss
xor
push
stos
push
adcl
cmpsb
pop
sub
inc
lods
insl
negl
mov
pop
das
and
mov
xchg
les
stc
cbtw
push
loopne
push
jne
fwait
insb
inc
loope
pop
push
sahf
pop
ret
lahf
adc
dec
mov
lods
dec
loope
cli
pop
sub
rcrb
ficompl
into
filds
and
mov
xlat
pop
jae
dec
loop
les
mov
icebp
jmp
fists
sbb
mov
lods
sub
mov
mov
adc
push
mov
idivl
sbb
xchg
push
inc
inc
movsb
mov
xchg
push
mov
pop
or
sahf
dec
dec
loop
loopne
mov
divl
jg
xchg
dec
dec
adc
scas
div
cld
test
sbb
ret
mov
push
pop
aam
dec
lea
inc
das
adc
sbb
jns
add
in
add
icebp
xchg
push
outsl
jp
sahf
call
mov
sub
add
xchg
pushf
stc
repz
int
jnp
enter
repz
lcall
ret
jns
sbb
imul
mov
fbld
aam
lock
push
call
inc
pop
in
nop
xchg
popf
and
jo
sbb
push
pop
push
cmp
out
arpl
jle
gs
mov
inc
int
aaa
loop
mov
inc
and
cld
mov
fwait
and
jns
int3
xor
divl
jne
ficompl
adc
cwtl
jg
ja
push
jp
test
pop
addr16
cwtl
div
xlat
or
daa
and
xor
gs
or
mov
fcompl
xor
push
and
mov
sbb
mov
lods
fs
cmp
out
cmp
dec
clc
push
add
addl
les
inc
sbb
shl
jle
insl
mov
cld
je
imul
dec
outsb
test
jecxz
popf
in
lahf
push
stos
mov
outsb
repz
daa
test
js
push
pop
in
and
xor
push
shr
cmpsl
in
cmp
lods
sahf
inc
cs
fisubrl
es
repnz
cltd
cltd
pop
insl
cmp
cld
out
dec
dec
aad
xor
or
dec
mov
pop
push
jno
test
add
lahf
cs
ss
sbb
cmp
add
pop
mov
jmp
and
and
mov
cmp
dec
testb
iret
sbbb
sbb
pop
cwtl
push
sub
jns
in
repz
je
mov
cmp
fwait
imulb
cmpsb
in
cmpsb
std
sub
mov
rcr
jbe
xor
mov
faddl
hlt
andl
mov
xor
movhps
xor
pop
pop
mov
test
int
xchg
mov
xlat
fisttps
aaa
inc
mov
loopne
jle
jl
sahf
pushf
pop
xor
popf
sub
jo
test
pop
movsb
shll
sub
sub
mov
jg
jae
lcall
lret
cmc
push
lahf
lcall
push
add
arpl
cwtl
dec
test
fidivrs
mov
add
fcoms
cmp
sub
imul
mov
imul
in
sahf
stc
mov
mov
sbb
xchg
pop
aam
xchg
cmp
push
cmc
pop
popa
xor
sub
pop
push
insb
repnz
pop
xor
cwtl
lods
outsl
inc
pushf
xchg
or
test
sbb
push
imul
leave
in
test
and
cmpsb
mov
add
push
cwtl
clc
dec
sub
pop
cmp
dec
sbb
sub
bound
in
insb
pop
jg
jb
xchg
xor
subl
xchg
lods
cmp
pop
popa
popa
pop
mov
shrl
movsb
inc
and
cmp
ret
dec
jg
test
iret
and
cli
popa
orb
pop
andl
mov
adc
xor
xor
filds
ds
and
imul
adc
popf
adc
mov
sbb
rcrb
ret
xchg
xchg
cmp
fsubs
add
mov
into
test
push
xor
add
lds
adc
subl
or
add
sti
inc
mov
mov
pop
sbb
inc
fs
ret
popf
jmp
sarl
jne
jmp
sbb
in
mov
xchg
adc
sti
fs
test
orl
push
xor
ja
mov
dec
adc
or
scas
add
and
sub
push
lret
into
cmp
loop
bound
add
inc
les
js
pop
ljmp
xorl
xchg
lret
or
movsb
mov
jecxz
sbb
push
clc
jno
mov
inc
xchg
mov
test
jp
adc
add
push
mov
pop
aas
jecxz
xor
inc
xchg
test
ret
xchg
lcall
and
outsb
mov
rclb
mov
sub
push
lods
mov
scas
add
pushf
or
mov
mov
int
cld
sahf
sbb
pop
repz
adc
mov
sub
into
add
mov
mov
jg
add
imul
ja
es
jns
pop
cmpsb
cmp
sub
pushl
sub
frstor
testl
mov
xor
push
jno
das
jle
jmp
push
push
stos
test
inc
sub
or
ror
cmpsl
nop
mov
xor
ja
aam
stc
leave
adc
je
cmc
mov
push
cli
outsb
xchg
out
add
adc
push
lods
dec
dec
outsl
mov
mov
loop
pop
cltd
push
dec
rolb
lahf
movsb
mov
and
stos
repnz
sbb
rcrl
mov
jbe
xchg
rcrb
in
dec
clc
adcl
push
mov
sbb
je
leave
testl
popa
outsl
mov
mov
jg
push
inc
jo
and
xor
ja
ss
xchg
jmp
vpmacssdd
ljmp
push
push
or
sbb
lret
push
pop
pop
cmpsb
aaa
push
insl
xor
les
inc
addr16
cmpsb
nop
pop
call
dec
addl
div
adcl
scas
jmp
jnp
enter
add
mov
mov
or
adc
popa
sahf
add
sub
jne
iret
scas
sub
in
mov
cs
ret
arpl
inc
xorl
aas
into
jp
lahf
test
loop
sarl
push
fdivl
sti
push
mov
cmp
lods
scas
popf
call
out
mov
mov
mov
adc
mov
sbb
jp
cwtl
subl
std
push
cmp
iret
add
or
test
imul
mov
test
loope
lcall
decl
xor
imul
push
push
stos
add
pushf
push
or
jae
inc
sbb
mov
imul
sub
xlat
sub
andb
sub
les
mov
cmpsb
inc
shlb
lods
data16
mov
push
xchg
insb
cwtl
lea
btc
fucomi
add
dec
stos
ret
rcll
jecxz
cmp
repz
fwait
cmp
sub
popa
int
or
arpl
stos
lods
adc
out
in
jge
add
lahf
out
pop
hlt
xchg
jne
into
sbbl
xor
pop
aad
lock
stos
std
xchg
sbb
sbb
clc
cwtl
and
inc
mov
lds
adc
int
or
xchg
jae
in
add
mov
hlt
cmpsb
sbb
decl
mov
out
mov
in
or
inc
xor
mov
pop
int
jge
lret
test
sub
lcall
mov
add
mov
pop
add
sti
push
gs
imul
fdivrl
mov
push
ss
enter
push
insl
dec
pop
mov
inc
mov
test
xlat
or
and
call
xor
xchg
push
pop
xor
push
pushf
and
lcall
xor
dec
imul
mov
bound
push
sbb
add
aad
movsb
fmuls
mov
push
push
inc
divb
push
mov
xchg
out
fcoms
mov
mov
ficomps
jns
imul
movsl
subb
outsb
push
sbb
jmp
pop
test
in
addr16
xchg
xchg
add
xlat
clc
or
push
inc
cmp
lds
clc
mov
out
das
push
jb
adc
push
pusha
mov
mov
pop
out
test
shl
xchg
in
push
test
pop
movsb
or
fcmovb
jle
ljmp
or
ss
push
jecxz
out
jl
xchg
clc
fwait
sub
lock
push
xor
insl
push
nop
jge
pushf
dec
jne
jecxz
push
sbb
sub
fsubrs
decl
jne
pop
lds
movsl
negl
adc
push
cwtl
mov
loope
pop
pop
jl
test
test
mov
sbb
push
ds
dec
and
mov
cwtl
jmp
cwtl
jp
into
xor
jbe
add
or
xor
outsb
cli
mov
fstps
sbb
add
push
dec
movsl
cs
mov
or
push
das
mov
shrl
push
xorl
fadds
push
adc
je
in
testl
mov
mov
mov
int
pop
cli
dec
mov
add
lds
cmc
add
sub
shrl
repz
dec
or
jae
add
push
xchg
sub
mov
and
loopne
inc
cmpl
lock
daa
fcoml
bound
hlt
push
in
push
or
imul
cwtl
imulb
add
nop
aad
shll
or
test
sbb
daa
scas
insl
fimull
jg
in
les
outsl
sub
or
mov
les
sahf
adc
push
lods
lret
mov
fildll
or
pop
or
in
rorl
lods
pop
sbb
cmp
xchg
jo
mov
dec
fstpt
ljmp
fldt
imul
mov
mov
mov
xchg
cld
lret
test
shll
fcoms
lock
mov
or
rol
push
add
cwtl
inc
aas
push
stos
xchg
sub
add
iret
movsl
dec
mov
jne
adc
leave
repnz
xor
xor
pop
push
push
add
aaa
mov
mov
std
sub
adc
out
int3
in
jge
mov
sbb
int3
popf
std
xchg
push
in
dec
dec
das
add
daa
push
inc
xor
add
sarl
jbe
fisttps
scas
cmp
or
insl
mov
inc
out
movsb
aad
test
das
mov
movsl
jp
pop
xor
sbb
out
mov
in
pushf
or
rolb
call
in
mov
mov
es
aam
adc
movsl
in
pop
cmpsl
rcr
cltd
es
loope
mov
adc
loope
xchg
aas
mov
ljmp
add
bound
repnz
in
ret
aam
cmp
xor
mov
xor
inc
xchg
idivb
cmc
mov
scas
arpl
pop
cmp
test
cltd
repz
or
pop
mov
cmp
pop
sub
dec
aas
fsts
fcmovbe
push
jae
jbe
aam
xchg
adc
xor
je
dec
sahf
and
repz
scas
enter
xchg
call
add
jae
xchg
mov
ret
in
out
cmp
adc
dec
hlt
rcrb
or
and
sbb
adcb
or
pushl
jmp
sub
enter
adc
hlt
fmuls
xor
push
jbe
and
inc
jp
daa
mov
outsl
imul
add
xcrypt-ecb
cmpsl
or
xchg
jb
stc
jbe
jg
dec
call
pop
mov
sbb
imul
jle
add
inc
jne
ret
push
loope
adc
test
loop
mov
fsts
pop
dec
insl
in
stc
push
or
pop
sarb
fimuls
arpl
call
push
in
pushl
mov
or
loope
out
jo
xchg
jg
es
jecxz
jo
or
shll
into
stc
jge
pop
cmpsl
add
lds
or
addb
lahf
push
pop
or
lods
dec
pop
xchg
xchg
jle
jge
outsb
mov
mov
cwtl
in
xchg
adc
faddp
add
xor
push
pop
pop
popa
fistl
loope
xor
sub
push
xchg
loopne
bound
ss
jge
outsl
sbb
pushf
xchg
mov
push
andl
cmp
push
call
xchg
aam
insb
jno
cltd
cwtl
mov
add
psrld
inc
iret
pop
mov
or
jl
or
and
push
sbb
scas
xchg
pop
lcall
shrl
lods
mov
addr16
sti
inc
ror
movsb
pop
and
xchg
fcomp
push
inc
or
pushf
sub
mov
jg
out
aaa
lcall
es
jg
cmp
ud0
mov
mov
pop
inc
mov
js
pop
negb
sbb
mov
cwtl
push
mov
in
test
into
lret
mov
push
or
and
andb
add
scas
adc
or
js
div
out
mov
dec
lods
add
fidivrs
sbb
sub
add
push
cmp
testl
iret
xchg
subl
outsl
pop
mov
outsl
sbb
push
loopne
inc
adc
adc
lods
jle
dec
rcrb
ds
sub
addr16
jp
pop
jmp
mov
scas
lods
add
dec
mov
xlat
xchg
scas
fstpl
dec
cmp
call
hlt
xchg
inc
dec
aaa
cmpsb
and
inc
insl
mov
cmp
imul
mov
push
xlat
push
fs
add
sub
add
add
ret
scas
imul
dec
in
mov
or
ds
loop
sarb
dec
sbb
mov
jg
idivb
out
test
jle
mov
rolb
out
xchg
cmp
sbb
push
push
ja
ljmp
call
sahf
xchg
mov
shlb
pop
push
ljmp
and
rolb
pop
repz
xchg
mov
filds
test
fs
aad
jb
popa
cmpsb
out
fdivl
push
push
mov
mov
aas
or
imul
loope
or
push
mov
out
push
adc
cmpsb
dec
into
mov
inc
jb
call
push
jmp
sub
and
adc
sbb
add
jae
mov
or
movsl
adc
cmp
push
dec
jno
leave
out
inc
adcl
icebp
mov
xor
in
out
addr16
insb
loope
js
fisttpll
pop
cmp
pop
mov
jno
inc
sub
arpl
mov
lock
adc
inc
cltd
pop
flds
push
and
push
add
fildl
popa
mov
xor
and
imul
das
scas
push
test
mov
sub
cwtl
fisubrl
insb
movl
jae
lcall
push
xor
push
jecxz
and
cmp
jp
in
sbb
dec
dec
mov
and
dec
adc
pop
test
daa
call
add
add
cmp
mov
call
int3
xor
xor
inc
and
inc
imul
loope
adc
and
cmp
mov
scas
xor
cmpsb
push
adc
cmp
sbb
ret
leave
mov
or
and
jbe
scas
sub
inc
jne
repnz
shl
sub
lods
clc
scas
add
xor
mov
ss
mov
xchg
ja
jns
jns
iret
inc
bswap
cmp
add
mov
arpl
mov
pop
into
mov
stos
mul
sub
imul
xchg
mov
adc
in
inc
push
movlhps
test
int3
ds
jb
cmpsl
pop
rclb
lds
imul
mov
out
pop
mov
lock
mov
mov
mov
shrb
xchg
cmp
jae
and
mov
cmp
stos
pop
and
sbb
push
lcall
outsl
test
add
mov
iret
out
push
repnz
mov
test
addr16
sub
pop
sbb
sub
push
or
js
mov
pop
xor
add
sbb
or
icebp
aas
mul
xor
call
iret
adc
cmc
jmp
dec
jge
sti
mov
inc
repnz
jmp
pop
ror
jae
sbb
jge
inc
jo
andl
orb
fldcw
add
xchg
push
or
stc
shlb
lcall
cmpsl
sbb
push
pop
xchg
outsl
in
mov
lahf
push
add
test
cltd
jmp
inc
pop
jmp
mov
mov
sub
sahf
shl
test
push
pop
or
xor
jge
aad
mov
shlb
xor
push
lret
or
xor
adc
outsl
inc
clc
sub
pop
cmp
add
xor
je
into
cmp
clc
lea
mov
fwait
in
sbb
jl
iret
out
mov
movq
ret
xchg
adc
mov
sbb
cmp
cltd
inc
jns
lcall
or
cltd
jb
cmp
jle
cs
mov
inc
adc
dec
sbb
addl
cli
adc
lret
ljmp
out
mov
int3
out
or
jmp
leave
push
rcrl
mov
outsl
mov
test
pop
call
stos
movsb
sti
imul
push
jl
xor
adc
loop
in
lock
dec
push
jmp
lahf
add
sbb
add
xor
stc
mov
test
xlat
xchg
shr
jo
or
inc
jmp
and
scas
mov
scas
xchg
adc
les
into
push
dec
leave
ret
iret
mov
shrb
cli
jae
clc
dec
int
jecxz
xor
ljmp
sub
fpatan
iret
xchg
iret
and
lret
bound
insl
loopne
shl
stos
or
loop
loopne
cli
les
mov
push
adc
mov
mov
popf
arpl
push
mov
sub
xchg
in
and
push
ficoms
dec
xchg
push
and
fstl
or
movsb
cwtl
frstor
repz
pop
jnp
inc
das
mov
pop
lret
pop
cmc
sub
sbb
xchg
push
jg
and
mov
and
mov
subb
push
fisubs
or
sti
mov
mul
rorb
mov
stos
nop
adc
push
rclb
addl
dec
xchg
inc
std
and
into
add
mov
mov
adc
push
mov
rcrl
jne
dec
sub
jo
mov
add
add
mov
jl
jno
fildll
dec
cmp
mov
mov
int3
mov
push
push
in
xchg
fistpl
add
mov
push
mov
shlb
mov
cmp
mov
pop
movsl
outsl
bound
xchg
das
lds
sar
push
cltd
sbb
mov
roll
cmp
nop
mov
ret
in
push
fldt
mov
xor
sub
mov
fisubrs
loopne
sbb
iret
ljmp
fisubrl
lcall
je
mov
sbb
push
pusha
scas
pop
add
push
inc
adc
or
lock
ret
xchg
es
mov
int
add
mov
add
lea
lret
neg
aas
mov
or
jg
push
push
xchg
and
cli
jl
jns
lds
mov
je
adc
adc
xor
scas
les
inc
sub
sbb
mov
cmpsl
das
jno
jmp
ret
cmpsb
add
outsl
movb
fdivp
scas
test
xor
in
adc
sub
lds
inc
fnsave
jecxz
mull
cmp
loop
incb
sbb
mov
push
icebp
mov
hlt
leave
sbb
imul
mov
popa
aam
xor
shl
cwtl
xor
jmp
pop
lods
outsb
mov
test
sahf
jl
scas
ss
fs
pop
repnz
sbb
sub
jecxz
xor
inc
dec
fwait
mov
add
push
dec
push
insl
cmp
cvtdq2ps
or
push
aad
add
inc
in
aad
paddsw
push
xor
add
mov
add
loop
filds
scas
loope
and
push
pop
xchg
jmp
pushf
cmp
mov
cmp
add
sbb
pusha
fmulp
into
jb
test
les
aam
imul
push
inc
pusha
ret
test
push
jne
mov
mov
aad
sub
cmp
jo
inc
cmpsb
les
sbb
ja
inc
sub
into
out
push
test
cli
divb
gs
sahf
jae
or
popf
ficompl
iret
lock
or
pop
stos
and
fcompl
in
mov
inc
add
and
inc
shll
ja
nop
xchg
add
insb
or
test
or
mov
add
lcall
mov
nop
outsb
sub
std
dec
into
push
shrl
xchg
push
out
bnd
jmp
adc
jae
lock
int
test
ljmp
imul
jge
sub
xor
gs
int3
push
push
movsl
sub
les
pop
rolb
inc
mov
dec
add
test
jo
jge
test
sahf
mov
jl
mov
lds
mov
mov
pop
cmp
adc
jb
mov
scas
in
jnp
mov
add
inc
imul
xor
sbb
inc
rorl
ja
sahf
mov
lcall
lret
xor
sbb
mov
addl
xchg
nop
mov
shll
fidivrl
xchg
gs
orl
push
ret
mov
jmp
or
sti
cmpb
push
push
stos
shll
insl
mov
cli
leave
test
lret
and
stos
lods
popf
push
mov
or
sahf
jne
cmp
in
nop
push
sbb
or
ljmp
add
and
inc
cmp
dec
mov
subl
stos
push
or
loopne
ds
pop
repnz
lcall
fcmove
ret
pop
fs
nopl
mov
fisttpl
pop
call
ja
pop
cli
xor
orl
dec
andb
and
mov
mov
ljmp
sub
xor
push
fcomps
ret
dec
aad
mov
sub
push
outsb
fwait
movsb
cmp
rorb
jo
push
mov
repz
add
ss
mov
pop
lcall
pop
sbb
push
es
mov
sbb
test
int
mov
jg
test
sub
cmc
push
out
inc
sbb
sti
divl
into
enter
fnstsw
scas
or
enter
pop
mull
fs
pop
adc
and
je
jbe
xchg
add
aaa
leave
enter
mov
push
ret
xor
adc
stc
xchg
dec
idiv
test
fbld
jl
insl
stc
inc
and
cltd
pop
stos
lahf
inc
jl
pop
cmp
test
adc
daa
lret
enter
repnz
decl
dec
aas
or
mov
movsb
jmp
jns
sar
ds
xor
push
fistl
insb
mov
lret
mov
pusha
xorb
call
push
sbb
inc
fdivl
inc
mov
std
subb
xor
fnstcw
mov
and
incl
jle
test
fsubl
in
and
adc
or
pop
and
sbb
lret
cmpsb
stc
and
enter
jne
mov
shll
xchg
idivl
scas
mov
mov
iret
ja
pop
fmuls
icebp
or
jbe
sbb
sbb
test
xchg
dec
dec
arpl
push
cld
dec
push
adcl
mov
push
fldcw
cmp
outsb
hlt
xlat
ja
nop
imul
int
cmpsl
icebp
push
ss
sbb
push
or
add
add
mov
mov
adc
push
int3
iret
fdivl
lret
dec
sbb
adc
push
adc
mov
cmp
aam
scas
jne
push
ljmp
rolb
cli
mov
jmp
fsts
add
subl
outsl
inc
insl
pop
add
and
pushf
sub
lea
add
pushf
push
cmpsl
mov
mov
lock
add
pop
popa
in
sbb
stos
loop
pop
scas
sarl
sbb
adc
sbbb
push
adc
in
push
scas
lret
jl
mov
loop
ret
jg
addr16
push
xchg
sbb
dec
popf
stc
int
addl
fiaddl
adc
and
lret
vmovapd
rol
insb
shrl
mov
in
mov
sbb
sub
or
std
jge
test
add
leave
sbb
div
testb
clc
dec
pop
js
dec
jl
mulb
push
test
jecxz
xor
cli
call
mov
out
add
mov
jae
lahf
stc
xchg
aad
xchg
jae
jne
cmpsl
cld
and
aam
je
jo
nop
cmpsl
das
scas
jbe
popa
ficoml
scas
sti
and
push
mov
sbb
or
jge
xchg
jl
mov
into
pop
jg
cmpsb
cli
or
out
cmp
cmp
leave
lcall
mov
add
sub
push
mov
shrl
mov
shlb
andb
sub
xor
push
xchg
pop
dec
sub
lret
negb
mov
xchg
sub
lods
repnz
cmp
mov
mov
mov
add
fsubl
daa
jne
fldl
sbb
shlb
jne
sbb
shll
and
jge
add
repnz
mov
into
inc
cmp
das
adc
pop
icebp
ljmp
or
and
push
sub
cmp
cmp
aad
lret
repz
add
and
test
std
rcrb
test
sub
mov
mov
xchg
adc
sub
lcall
mov
out
or
mov
out
ret
subb
mov
enter
je
int3
scas
push
movsl
xor
inc
mov
sub
stos
add
gs
jo
adc
jecxz
xchg
xchg
fists
mov
aaa
lret
jae
loop
mov
sahf
add
push
fadds
add
test
sbb
leave
adc
cli
and
stos
xchg
scas
ret
pop
xchg
jne
push
out
notl
mov
add
mov
adc
movups
sub
mov
pop
pop
sub
or
aas
adc
sub
cmp
inc
inc
sbb
bnd
clc
orl
ss
and
add
pop
inc
in
cmpsb
test
ja
push
adc
cmpsl
rolb
out
mov
mov
sbb
sbbb
pusha
cmc
jnp
cltd
stos
xchg
jp
iret
mov
dec
cmp
pop
mov
push
das
add
movsl
cmp
xchg
aam
pusha
fisubrs
and
sbb
ljmp
lods
pop
xchg
cmpsl
popa
or
push
popa
das
jl
adc
leave
jmp
dec
jecxz
pop
cmc
cmp
ljmp
and
cwtl
rcll
adc
or
ret
or
adc
stc
dec
xchg
xchg
push
lea
sbb
pop
sbb
aam
push
les
or
into
outsb
shr
xchg
popf
cmp
sti
push
andb
ja
jne
in
mov
jge
push
dec
xor
push
repnz
mov
loop
fcomi
cmc
push
lds
test
add
pop
mov
add
aad
add
aad
pop
mov
out
sbb
cwtl
pop
cmpb
sub
jge
sarb
das
xchg
dec
adc
adc
daa
sub
jo
sub
enter
dec
mov
jb
mov
push
cs
xchg
mov
jp
mov
sbb
mov
jge
and
xchg
inc
or
and
cmpsb
jge
cmpsl
cmc
push
addr16
and
lcallw
clc
insb
cmpl
xchg
addb
ficoms
sub
jle
shlb
mov
dec
lahf
adc
sahf
xchg
es
cli
jnp
adc
daa
and
inc
popa
push
testb
add
mov
xchg
dec
pop
jecxz
andb
jns
and
test
xchg
xchg
mov
dec
push
push
sti
fcoms
loop
jge
cld
mov
neg
add
jae
lahf
push
jb
fistps
outsb
fldenv
add
sbb
sub
ss
dec
clc
es
lock
mov
dec
inc
push
mov
xor
imul
sub
or
les
sahf
test
out
push
xchg
xlat
lret
ds
dec
pop
sbb
xlat
xchg
pop
mov
roll
jp
mov
pop
scas
sbb
aad
cmp
sbb
mov
push
sbbl
lret
pusha
push
aam
xor
jns
dec
xlat
inc
dec
fisubl
fwait
cmp
ja
clc
pop
adc
mov
stos
int3
mov
iret
lea
fdecstp
enter
push
and
xor
xlat
repz
daa
or
xor
imul
sarl
loope
test
pop
cmp
add
xor
insb
sub
pop
fstpl
sub
cld
cmp
cmp
pop
jp
iret
jmp
push
nop
mov
pushf
inc
xchg
push
mov
fnstcw
pop
pop
arpl
xor
fcoml
int3
lods
cmp
xor
push
and
cmp
and
mov
mov
mov
movsb
xor
out
xchg
shrl
and
or
pop
test
fstpt
inc
add
cmp
push
lcall
pushf
inc
adc
je
cmp
faddl
ds
or
test
repz
pop
repz
js
rolb
fidivrl
push
pop
cwtl
push
mov
push
or
mov
mov
or
loop
adc
dec
push
inc
inc
cltd
int
repnz
jno
add
ret
das
mov
xlat
cmc
mov
insl
loopne
sbb
add
leave
mov
aas
add
cmp
outsl
mov
mov
cmp
sbb
lret
or
jecxz
or
xchg
pop
loopne
sbb
adc
adc
ret
inc
out
dec
push
push
jmp
pop
stos
mov
lods
xorl
in
cld
clc
popa
aaa
sbbl
cli
outsb
sub
pop
mov
insb
andb
sub
ret
decb
shll
or
insb
mov
cld
mov
std
dec
sub
je
adc
cwtl
or
mov
mov
push
mov
adc
mov
dec
inc
shlb
add
sub
in
xchg
adc
jno,pt
leave
shlb
pop
sbb
hlt
xor
mov
loopne
lcall
sbb
xor
add
cld
mov
fcomps
cmp
and
inc
inc
stc
leave
xor
test
sarb
dec
roll
dec
jno
mov
cmp
add
jo
sub
inc
stos
dec
push
cld
push
sub
pop
xchg
mov
scas
das
jmp
inc
add
loope
mov
add
out
aad
dec
in
ret
fisubrl
js
movsb
push
test
mov
ja
call
mov
outsb
aad
and
data16
mov
lea
add
les
fsubp
inc
push
add
pushf
popa
or
pusha
loop
inc
arpl
dec
add
and
mov
mov
pop
fnstsw
xchg
push
xchg
pop
xor
leave
popa
sub
or
rolb
jae
outsl
push
adc
popa
imul
test
rolb
xchg
das
popa
in
xchg
cmp
je
lret
jae
jo
dec
mov
jne
lods
imul
repz
aam
mov
sti
scas
call
mov
ret
scas
nop
sti
pop
insb
lret
pop
leave
test
mov
shll
jae
popa
out
xchg
repnz
sahf
daa
lds
sub
mov
add
dec
in
fstl
in
adc
ror
jns
push
lretw
jle
test
in
push
stos
cmp
test
mov
jno
mov
pop
adc
jns
leave
push
dec
cmp
mov
loopne
xchg
cmpsb
and
xchg
mov
loopne
into
das
or
cmp
adc
xchg
push
call
enter
repnz
ror
pop
push
or
jecxz
mov
stos
mov
sub
out
rolb
dec
pop
ljmp
test
mov
mov
push
aam
sub
repz
addr16
lcall
inc
imul
loope
and
xchg
add
sbb
pop
mov
fiadds
fldl
inc
ds
jecxz
inc
inc
cmpb
mov
inc
dec
add
insl
stos
fisubs
insb
mov
in
xor
cmpsb
sub
xchg
cmp
leave
cmp
mov
hlt
jnp
jp
inc
cld
mov
icebp
aad
jae
nop
push
es
inc
jecxz
inc
popa
roll
int3
cld
xchg
mov
jae
jl
lds
cmp
jnp
mov
daa
pop
divb
pop
sub
mull
bound
push
icebp
or
dec
cltd
fcoms
mov
mov
icebp
and
cld
mov
or
inc
fstp
jp
sub
cmpsl
ja
stos
loope
jb
lock
mov
and
ss
or
sub
mov
hlt
loopne
cmpsb
icebp
pushf
repnz
or
and
rcrl
jle
push
cwtl
inc
testl
xchg
ret
mov
sub
lret
hlt
cmpsb
aad
dec
arpl
or
loope
push
add
push
stc
scas
movsb
lock
addr16
push
ljmp
push
int
add
pushf
test
setge
mov
pop
adc
cli
es
lcall
cmc
pop
mov
and
push
mov
aad
sbb
push
iret
movb
pop
mov
sbb
sbb
addb
mov
xchg
arpl
sahf
hlt
push
push
jle
fisttpll
mov
test
lahf
lcall
decb
icebp
adc
icebp
mov
push
xchg
jl
decb
mov
in
inc
mov
sbb
xchg
out
cli
mov
and
std
pop
jp
mov
movsl
pop
and
ret
inc
mov
mov
adc
in
pop
xor
mov
jle
jnp
out
mov
pop
add
inc
je
mov
out
gs
repnz
jg
shl
scas
mov
les
sti
sub
pop
scas
or
cmpsl
pusha
inc
out
sahf
stos
inc
pop
jmp
in
insb
fnsave
inc
jnp
mov
dec
mov
push
xlat
xchg
leave
fcomps
inc
in
popa
mov
and
push
add
push
mov
or
hlt
mov
es
pop
add
jae
or
dec
dec
xor
dec
add
dec
jg
jne
in
fwait
pop
loopne
xor
stc
pop
cmpsl
in
fistps
and
push
lahf
adc
sub
xchg
adc
shll
and
push
leave
xor
and
sbb
or
in
mov
jmp
fsubrl
mov
sbb
in
imul
aaa
push
fcomp
pop
dec
push
into
xchg
std
in
testb
adc
sub
aaa
push
ret
vmovdqu
je
aas
jno
cmp
push
push
shld
stc
add
outsl
dec
dec
push
pop
int
xor
aaa
pushl
pop
xor
sbb
mov
mov
sbb
lea
mov
test
out
call
pop
divb
sub
jge
dec
dec
mov
pop
pop
js
in
jo
inc
dec
aas
pop
pop
jbe
lea
sbb
shrb
scas
sub
pop
sar
lock
shrb
movsb
fildll
or
or
clc
xchg
adc
sub
sub
mov
jne
lods
and
push
cli
popa
dec
cltd
cs
fnsave
lods
mov
pop
in
icebp
scas
add
scas
push
sub
cmpsl
in
xchg
sbb
imul
cld
fnstenv
addr16
adc
sbb
lods
xor
mov
aam
mov
adc
mov
xchg
mov
mov
mov
mov
lods
loop
xor
sbb
push
push
and
pop
das
fcmovnbe
cmp
dec
aaa
cmpsb
dec
mov
sub
fs
fdivrl
sub
out
outsl
pop
in
adc
cmpsb
sbb
jae
cli
enter
add
or
push
mov
mov
insb
iret
xlat
movsl
sub
or
mov
addb
jae
bound
ret
mov
add
rorl
or
cmpsl
xor
xor
sub
out
movsb
ret
mov
out
into
lcall
mov
leave
or
lods
jo
mov
iret
push
and
mov
in
pop
test
jmp
sbb
fwait
rolb
dec
pop
or
push
inc
pop
aas
add
aam
sahf
adc
sub
mov
out
je
xor
add
outsb
int3
fstps
xchg
imul
outsl
mov
xor
xchg
push
jnp
ss
mov
mov
sbb
faddl
repnz
scas
sbb
in
and
push
add
cli
inc
fwait
mov
cli
adc
roll
dec
jnp
dec
ret
clc
pushf
stos
push
xor
repnz
xchg
cltd
pop
adc
sub
push
adc
fsubrl
push
ljmp
push
cltd
pop
ja
iret
inc
pusha
mov
sarl
jge
cmp
fcomp
mov
add
cmp
stos
rorb
outsb
cmpsb
notb
cli
into
jns
lret
cmc
mov
sbbb
mov
dec
push
sahf
rcl
sbb
ds
in
mov
rolb
sbb
icebp
mov
repnz
stos
cli
es
outsb
sbb
inc
jnp
cmp
hlt
push
jecxz
and
jle
int
pop
arpl
xchg
leave
mov
in
hlt
add
sbb
xchg
popf
loop
test
cmp
mov
loopne
rorl
ret
out
mov
mov
rcrb
pop
ja
add
adc
stos
jae
and
adc
pop
arpl
push
out
das
sbb
adc
lcall
push
cs
sub
mov
sub
add
lret
cmp
push
ljmp
decl
mov
aad
mov
xchg
pop
sub
leave
mov
add
mov
inc
out
cmp
mov
das
push
push
mov
and
jle
repz
pop
xlat
iret
rcr
add
fwait
inc
push
lret
sub
inc
jmp
push
cmc
pop
daa
rorl
adc
call
in
push
adc
adc
inc
push
call
xchg
inc
jno
jns
or
stos
cmp
xchg
clc
jnp
cmp
and
push
add
incl
fimull
sti
xor
mov
cltd
mov
sub
push
and
cmp
enter
popf
mov
mov
adcb
fldenv
outsl
xchg
sbb
and
xchg
sub
test
notb
or
cs
mov
sbb
cld
mov
daa
cmpps
sbb
test
sbb
jnp
jbe
dec
icebp
jmp
es
dec
bound
adc
cltd
adc
pushf
mov
mov
repnz
loopne
inc
in
nop
xlat
and
cmovle
jns
dec
movsb
dec
ja
sbb
ljmp
out
push
movsl
bound
dec
pusha
ror
add
sbb
roll
test
xor
repnz
push
cmp
push
pop
add
cmp
pop
stc
mov
lret
xlat
or
jbe
and
testl
and
cltd
xlat
sub
push
mov
mov
and
jnp
pop
mov
and
dec
stc
push
sub
frstpm(287
cmp
out
flds
stc
mov
adc
sub
push
xchg
stos
xchg
fimull
push
pop
iret
aam
dec
arpl
mov
lret
loope
mov
push
das
or
sub
clc
pop
or
nop
setnp
lret
dec
rolb
xchg
in
in
sbb
cmc
outsb
lret
add
pop
rcrl
adc
cmp
rcrb
xchg
leave
in
sub
enter
pop
mov
je
repz
cmc
mov
jmp
adc
int
inc
pop
or
push
add
sub
push
jle
adc
lock
push
jae
std
dec
cli
push
xor
lahf
clc
test
xchg
dec
call
dec
in
insb
and
in
pop
pop
inc
notb
adc
rolb
in
xor
jae
nop
out
int3
roll
movsb
jnp
xor
mov
cmp
cmp
addr16
int
inc
jl
dec
xor
dec
pop
fdivr
aam
lea
jle
out
in
xlat
dec
mov
rclb
fsubrl
sub
push
shl
xor
test
mov
dec
jmp
subl
outsl
dec
jbe
notl
add
leave
or
jmp
fdivs
add
aam
int
mov
cmp
cld
mov
rolb
sbb
mov
pop
cld
mov
xchg
pusha
lods
pop
andb
jo
xchg
or
repz
pop
jnp
lret
mov
push
jns
lea
sub
out
cli
ds
pop
jb
mov
lea
in
add
gs
out
ret
fidivs
and
jae
jmp
lods
sub
mov
testb
ret
push
scas
cmp
mov
cli
sbb
and
cmp
mov
arpl
sahf
add
xchg
sub
mov
repz
mov
pop
xor
dec
mov
ret
mov
imul
out
jmp
jmp
inc
push
add
in
mov
add
lret
lods
ret
pop
pop
imul
adc
popa
ss
rclb
inc
mov
add
mov
ret
out
mov
add
xchg
into
mov
mov
jns
stos
and
shll
rcrl
dec
mov
inc
call
jge
ds
cmp
pop
negb
xchg
push
push
das
loop
dec
jno
aad
cmpsl
dec
rcll
jns
pop
push
pop
leave
mov
scas
pop
or
out
mov
das
jge
les
ljmp
mov
jmp
mov
mov
xchg
test
fucomp
pusha
push
mov
xchg
jecxz
jecxz
cwtl
sbb
out
rorb
xor
xchg
fwait
repnz
inc
pop
rcrl
int
loop
jae
adc
lcall
hlt
push
mov
dec
and
mov
shrl
stc
add
dec
out
xchg
mov
pop
cmpsb
lock
test
stc
jo
adc
mov
xor
ret
out
push
mov
and
and
jge
pop
pop
lock
pusha
test
mov
and
out
loopne
in
sub
shrb
sub
sbb
int3
mov
pop
xchg
fs
add
and
push
xor
jbe
inc
add
pushf
mov
mov
daa
sub
mov
imul
xorb
pop
mov
call
std
jmp
in
jp
mov
pop
lock
ljmp
mov
jne
add
or
mov
inc
jns
push
sbb
fwait
push
sub
mov
add
test
xor
pop
sbb
insb
std
mov
scas
xchg
mov
rclb
jle
call
icebp
data16
addr16
lods
movsb
and
xor
loopne
movntps
mov
mov
pusha
sti
sbb
rorl
ficompl
movsb
cmpl
xchg
pop
loope
lfs
cmp
jns
cwtl
fwait
out
push
inc
outsb
lret
push
gs
fimuls
jecxz
or
lds
pop
add
dec
inc
sbb
scas
cmp
negl
push
cwtl
das
lret
pop
push
mov
clc
popa
add
sbb
push
xchg
ja
popf
dec
or
jbe
pop
adc
sub
inc
inc
sbb
in
dec
ljmp
jnp
in
dec
pop
push
int
inc
shrl
hlt
sahf
dec
adc
xchg
stos
jno
insb
fdivrl
loop
push
cwtl
imul
outsb
mov
fwait
xchg
cld
cmp
and
mov
mov
inc
repz
push
rclb
adc
jae
lret
dec
cmp
add
lcall
jl
int
repz
pop
jae
mov
mov
xchg
xchg
xor
push
inc
sbb
adc
sub
popf
add
loop
jns
test
call
dec
shld
dec
pop
xchg
push
inc
cld
inc
stos
add
int3
scas
mov
jecxz
int3
sub
insl
lods
test
sbb
jae
jge
or
adc
out
stos
push
dec
jge
fimuls
cmpsl
inc
xor
in
out
mov
push
lahf
movsl
in
in
add
imul
loopne
es
mov
cli
push
push
lds
sbb
adc
rorb
jbe
push
adc
jo
inc
sbb
cmpsl
jne
cmp
ret
cmp
addb
cwtl
pop
inc
jl
out
mov
mov
fwait
rorb
mov
inc
loop
test
je
dec
mov
lods
push
in
test
jne
and
ret
pop
out
adc
jle
aaa
cmp
sbb
out
dec
sub
xchg
sub
aas
fisttps
bound
adc
lahf
xchg
pop
xchg
jmp
sarl
rol
jb
pop
aas
outsb
mov
dec
adc
xchg
daa
mov
out
fwait
mov
mov
test
mov
push
mov
and
out
fmul
inc
test
push
push
loop
outsl
sub
jle
lahf
sub
sub
fisubs
jl
addr16
aaa
testb
mov
adc
jb
jp
sbb
xor
push
cli
jbe
aam
add
cmp
mov
popf
and
enter
adc
jmp
sub
dec
pop
cmp
xor
jmp
add
sahf
stc
adc
testb
mov
push
add
mov
mov
jnp
test
inc
adc
add
sub
lds
jae
daa
sarl
fiadds
push
jl
mov
push
in
hlt
hlt
jg
push
adc
int3
call
adc
cwtl
sbb
or
out
cld
pusha
xchg
imul
xor
test
inc
icebp
cltd
cmpsb
inc
cli
loope
shrl
clc
sub
sahf
je
mov
jno
mov
fdivrs
popa
lcall
sbb
stos
adc
dec
pusha
outsl
loopne
xchg
and
orl
imulb
xchg
jno
stos
xchg
movsb
cmp
jne
xchg
mov
xchg
xor
sbb
andl
insl
jp
xor
call
pusha
mov
repz
jmp
push
push
push
pop
cmp
pop
adc
push
mov
lods
push
fldl
add
jno
add
xor
push
fidivrs
std
sbb
popf
xchg
cmc
psrlw
outsb
pusha
fstpt
imul
adc
mov
add
push
push
push
es
test
out
push
pop
pushl
mov
into
cmc
popa
bound
mov
bound
xchg
js
imul
ret
in
fldl
jae
dec
mov
fisttps
shlb
mov
inc
pop
dec
out
xor
dec
sub
stos
iret
or
out
std
movsl
jbe
xlat
sarb
rcr
xor
test
enter
lahf
jg
and
adcl
movsl
xchg
les
push
enter
out
cwtl
les
scas
jmp
dec
gs
imulb
inc
mov
out
adc
lret
pop
mov
cs
mov
or
movb
fstpt
shll
sbb
addr16
and
pop
out
sbb
pop
scas
dec
popf
repnz
pmulhw
repnz
roll
clc
rcrl
icebp
xor
push
and
mov
iret
pop
in
jl
pop
mov
xor
fnsave
mov
movsl
add
gs
mov
jp
dec
and
dec
push
shlb
lcall
insb
or
sub
inc
inc
out
cmp
add
xor
test
movsb
adc
adc
inc
nop
sub
insl
and
jp
lcall
push
jno
pop
pusha
sbb
aaa
jecxz
fdiv
mov
jmp
outsb
movsl
stos
mov
stos
mov
mov
sub
mov
in
dec
or
mov
xchg
ljmp
dec
in
sub
sahf
insl
and
adc
jecxz
out
outsl
or
cmc
stos
into
jbe
rcrl
sbb
outsl
addr16
or
jl
arpl
xor
inc
and
inc
pop
jge
sarl
pop
push
jp
std
out
js
adc
add
out
into
aas
pop
int3
rolb
stos
scas
cltd
inc
lret
push
out
pop
sbb
rcll
outsl
insb
dec
xor
addr16
xor
loop
pop
dec
xchg
xor
movsl
xor
push
in
mov
scas
adc
int
jg
ds
add
and
cmp
xor
cmc
xor
mov
sub
das
xchg
lcall
call
gs
add
dec
andl
adc
xor
dec
lods
sub
pop
adc
and
and
mov
outsb
out
jae
and
or
mov
xchg
fdivrl
sahf
dec
and
push
dec
jl
outsl
adc
out
scas
mov
sub
push
int3
pop
adc
or
adc
inc
mov
ljmp
mov
stos
fidivs
mov
lret
add
add
lret
xchg
mov
lcall
xchg
xor
xor
lret
adc
push
dec
or
nop
je
pushl
xchg
daa
mov
in
int3
mov
in
xchg
js
push
dec
jae
mov
clc
imul
imul
stos
int3
mov
sub
jl
xchg
xchg
mov
or
js
and
and
nop
sub
loope
mov
push
jmp
aam
push
pop
ret
xorb
mov
sub
sbb
and
mov
cmp
les
iret
lret
dec
xor
and
sub
sbbb
shrl
push
lds
repnz
mov
mov
push
lea
xchg
push
inc
lods
dec
jecxz
cmp
lock
outsb
enter
into
cmp
sub
ds
mov
mov
mov
aas
xor
mov
shll
cld
in
aas
inc
add
insb
loopne
mov
xchg
jbe
scas
enter
cmpsl
out
cmp
movsl
sbb
ja
pushf
pushf
call
sbb
fcoms
mov
push
faddp
outsl
mov
imul
inc
push
cs
data16
outsb
out
xorb
sbbb
outsl
xchg
divl
lret
popf
inc
rorb
or
or
lock
dec
fwait
into
loopne
lahf
cmpsl
js
fsubr
fsts
arpl
add
sahf
js
negb
mov
pop
adcb
mov
fucomip
or
fsts
inc
sbb
pop
ret
adc
ficoms
int3
adc
das
enter
int
sbb
push
int3
pop
jg
nop
in
mov
or
inc
mov
prefetch
jb
mov
jmp
fcmovu
add
nop
sarb
ss
add
adc
pop
test
sbb
into
jb
rcl
pop
mov
lods
sub
xchg
pop
cmp
nop
dec
fnstsw
dec
jno
lods
ds
or
aam
sti
dec
jnp
outsb
movsb
shlb
je
inc
or
adc
push
inc
call
sarb
test
hlt
jae
pop
push
rcrl
push
or
daa
add
dec
xlat
jns
jl
out
mov
outsb
sub
hlt
mov
jg
mov
jl
adc
xchg
dec
xchg
leave
fmuls
dec
xchg
jmp
es
or
mov
sub
and
mov
jns
push
mov
fbld
adc
arpl
mov
shrl
mov
push
outsl
jecxz
mov
ds
or
nop
testl
pop
iret
jns
xchg
hlt
pushf
adc
sahf
insl
fimuls
testl
ret
and
repnz
out
bound
sub
pop
cmp
and
sbb
or
test
push
push
scas
std
push
push
icebp
aaa
mov
loope
mov
mov
add
mov
add
xchg
pop
dec
out
mull
xor
mov
cs
ret
pushf
call
xchg
push
psubb
jle
dec
movsl
setnp
and
pop
xchg
movsl
sub
ds
es
and
pop
mov
aam
dec
pop
cmpsb
adc
ffree
adc
cmp
push
jle
fstpl
jp
arpl
push
int
les
mov
cmp
ffreep
pop
mov
xchg
test
inc
jge
or
sbb
push
pop
rep
push
gs
in
mov
sub
pushf
stos
popw
mov
les
xor
jecxz
or
pause
push
and
jne
add
xchg
sti
cmp
mov
adc
add
push
fadds
aaa
xchg
repz
sbb
mov
xchg
pop
jo
cmp
cmp
cmp
sub
push
lcall
mov
push
shlb
arpl
addr16
and
jl
sbb
jo
pushf
arpl
xchg
mov
xchg
std
xchg
sub
add
das
dec
cmc
or
popa
divb
idivb
and
repnz
iret
les
leave
lea
aas
sub
mov
push
mov
hlt
enter
out
arpl
dec
add
mov
jno
add
push
lcall
mov
lds
sbb
add
loop
movsb
add
xchg
int3
push
mov
sbb
repz
mov
dec
jnp
jmp
out
sbb
mov
lahf
xchg
jae,pn
test
test
cmc
sahf
sti
pusha
fsts
sub
add
ja
decl
push
cmc
jg
addb
adc
inc
imul
adc
pop
cmp
iret
cmpsb
xchg
rolb
pop
mov
in
aas
scas
mov
jns
lret
inc
xchg
ja
mov
mov
dec
and
pop
fimull
mov
shlb
aad
pop
jae
xchg
mov
shrl
aaa
jp
mov
cmp
cmc
popa
xchg
dec
cmp
jae
jle
mov
xor
out
cmc
push
mov
push
in
mov
nop
push
adc
fbstp
hlt
dec
sti
cmpsb
popf
ret
divps
and
dec
xchg
push
xchg
jbe
in
bound
mov
scas
gs
into
stc
or
sti
push
fwait
scas
stc
mov
fsub
ljmp
and
or
jp
cmp
dec
cmp
das
mov
mov
sbb
ja
sti
addl
dec
ret
sti
push
mov
ljmp
push
outsb
in
jle
stos
je
jnp
cmp
fwait
test
cmp
jp
mov
mov
fstpl
xchg
sti
push
cmp
mov
in
jne
inc
cmc
in
cmp
push
pop
outsl
movsb
or
das
scas
mov
in
adc
or
push
push
cmpsl
ret
repnz
pop
cwtl
and
mov
mov
and
pop
or
pop
xchg
cmp
scas
in
adc
push
fldenv
out
leave
les
add
das
pop
add
mov
and
lock
sub
cmp
cld
mov
sbb
cmp
jge
addr16
push
ja
out
lret
inc
mov
inc
outsl
jmp
adc
mov
inc
sahf
scas
xor
push
mov
shrl
add
add
pusha
push
lret
ja
insl
inc
xor
pop
ret
mov
adc
jbe
cmp
dec
rcl
test
loopne
adc
loope
mov
mov
mov
imul
ficompl
pop
sbb
xchg
test
popf
je
fmull
fstps
jp
and
fs
inc
lds
loope
enter
aaa
or
cli
xchg
xor
lods
inc
insb
scas
cwtl
dec
jmp
jg
mov
das
cli
add
sbb
repz
adc
stos
iret
sbb
arpl
mov
dec
hlt
fbld
mov
dec
mov
push
add
mov
test
fdivs
dec
movsl
lret
mov
lcall
add
lea
push
fistpll
aas
lret
out
xchg
outsl
lods
into
aas
insl
xchg
xchg
push
call
test
push
cmpsl
pop
jo
sub
sti
movsl
cs
mov
or
subl
mov
pop
adc
adc
arpl
dec
inc
sbb
dec
dec
jne
sub
sbb
dec
mov
push
jne
inc
adc
mov
push
sbb
adc
aas
jbe
shrl
in
mov
jl
xchg
pop
pop
inc
pop
sub
adc
popf
popa
adc
mov
sub
inc
stc
enter
xchg
arpl
jge
cld
adcb
push
cli
push
cmpsl
mov
sbb
xor
aam
loop
cmp
pop
gs
leave
in
out
jns
adc
stos
pop
add
outsl
cli
jns
mov
ret
sub
pop
loopne
ja
lock
mov
outsb
push
ja
in
sub
fsub
inc
mov
stos
rcrl
cltd
add
repz
mov
push
cmp
stos
jmp
loopne
xor
cmpsl
fcmovnb
mov
cmp
and
ljmp
stc
dec
mov
jl
mov
mov
mov
inc
xor
sbb
mov
jg
mov
test
fdivl
outsb
sub
aaa
iret
pop
push
outsl
js
ret
test
mov
flds
sbbb
mov
test
ret
dec
clc
out
xchg
and
decl
jl
inc
in
pop
scas
xor
iret
scas
dec
jnp
loop
fs
test
cwtl
insb
pop
sbb
or
xor
adc
and
clc
and
in
cmpsb
insb
mov
divl
dec
fimull
jge
cmp
xor
in
xor
cwtl
push
jns
lahf
xchg
ficompl
mov
mov
dec
cli
fdivrl
daa
and
push
std
int
and
or
sub
movsl
sub
xlat
and
lret
cmpsb
sub
cwtl
lock
cmp
repnz
sbb
inc
push
add
dec
sub
xchg
push
xor
adc
fisubrl
push
cmpsb
sbb
iret
nop
ss
in
sub
or
and
push
outsl
call
in
pusha
and
ret
push
push
cmp
cmp
mov
lret
sbb
bound
sbb
inc
sbb
sub
dec
add
add
daa
add
inc
das
cmp
or
and
mov
cmp
cmpsl
roll
leave
mov
mov
lods
arpl
pushf
push
add
lock
enter
or
stos
ret
mov
test
pavgb
fldt
dec
lds
lock
or
shl
cmp
data16
fwait
push
cltd
cmpsl
fdivrl
out
pop
push
lahf
aad
inc
es
adc
test
fdivrl
push
or
dec
dec
hlt
sub
mov
pushf
es
filds
sub
push
lret
lock
xchg
xchg
nop
add
insb
jmp
pop
std
jne
dec
mov
iret
adc
cmpsl
popa
cwtl
dec
jge
stos
movsb
adc
inc
xorb
xorb
jne
int
fisttpll
int
out
add
dec
rcr
pop
rep
popa
test
adc
pop
clc
in
xchg
aad
cltd
decb
lret
repz
scas
call
pusha
out
xor
lock
scas
js
push
js
sbb
or
xorl
and
les
or
fwait
push
gs
jecxz
add
cmp
pop
jge
sub
sub
test
subb
mov
mov
cs
add
pop
ret
ret
inc
mov
push
inc
jmp
insl
in
outsl
int
sbb
dec
test
int
insb
movsb
pop
subl
outsb
aas
movsl
bswap
push
gs
out
mov
xor
sub
sub
add
loope
mov
xchg
adc
addr16
popf
loop
je,pn
scas
cwtl
pop
ljmp
dec
push
jbe
mov
arpl
aam
mov
movq
mov
xor
test
jae
jmp
push
iret
xchg
mov
in
jbe
cltd
lret
icebp
movb
cmpb
add
mov
outsb
in
mov
adc
fsub
pop
aaa
nop
push
mov
clc
mov
stos
and
inc
push
xor
xchg
arpl
inc
add
dec
call
inc
imul
mov
push
inc
inc
subb
repnz
mov
mov
out
sti
sbb
stos
pushf
popa
sbb
fldl
insb
out
dec
idivl
aas
insb
dec
sub
jns
mov
fdivs
xchg
movsb
scas
push
lea
and
push
add
push
mov
in
push
js
fwait
mov
cmpsl
out
mov
orl
lcall
call
mov
loop
in
inc
gs
push
mov
adc
lods
xor
add
aad
xchg
xor
jge
cmp
aam
or
jns
movsb
mov
jle
ret
aas
push
fldcw
push
pop
xchg
out
ret
add
or
pop
mov
movsb
loope
cmp
push
jecxz
cld
lahf
mov
sarl
cs
cli
ss
mov
mov
push
nop
dec
ret
mov
aaa
mov
pop
jb
mov
addr16
adc
inc
iret
mov
or
xor
push
xchg
popa
xor
shlw
xchg
push
je
enter
mov
pop
inc
out
mov
scas
mov
lcall
outsl
dec
cmp
lret
imul
out
dec
sbb
out
cld
sbb
push
das
xor
mov
lods
fwait
loope
sbb
div
xor
adc
gs
test
cwtl
mov
enter
xchg
push
or
das
jns
popf
lret
test
pop
out
inc
iret
lods
and
and
ss
mov
push
xor
jnp
jl
push
pop
shl
jmp
cmp
shlb
add
mov
add
enter
pushf
mov
iret
call
dec
dec
sti
bound
pushf
icebp
imul
pause
lahf
dec
push
push
and
mov
int3
call
es
cmp
dec
aam
add
lods
test
ljmp
adc
lds
sbb
je
push
popa
insl
shrb
das
rcrl
scas
repnz
push
fistps
add
lahf
and
sub
sti
push
mov
pop
jnp
dec
xor
divl
js
mov
and
mov
dec
cmp
into
mov
and
repz
pop
jmp
rcr
mov
stos
pop
push
and
aaa
repnz
sub
sub
add
icebp
adc
stos
fldl
xchg
pop
movsl
and
pop
lahf
pop
in
jecxz
js
outsl
mov
stc
mov
mov
mov
and
inc
sub
dec
mov
scas
sub
pop
xor
xchg
xchg
and
imul
jae
xchg
mov
scas
enter
lock
fmull
jnp
pop
or
fsubs
testb
daa
pop
sub
mov
imul
push
in
fdivrs
out
mov
inc
jns
fists
icebp
jbe
cli
cltd
out
cld
lods
pusha
inc
sbb
pop
cmpsl
lret
add
sahf
cwtl
lahf
xor
insl
test
jp
mov
out
sbb
pop
lea
in
lret
xorb
mov
fldl
adc
jo
dec
mov
into
add
xor
adc
lcall
pop
mov
dec
cmc
pop
rcr
int3
xor
ljmp
jmp
adc
insl
ret
push
ret
push
les
jns
add
data16
or
ret
div
push
shl
shlw
xchg
lods
cmp
dec
nop
daa
in
lods
lcall
push
shlb
jp
xor
pop
inc
jmp
popl
sub
mov
push
cmp
pop
push
dec
movsb
imulb
lea
and
jb
mov
mov
cmpb
iret
pusha
sub
mov
inc
cmp
cmp
icebp
inc
outsl
sahf
jno
mov
xchg
sti
scas
loope
pop
in
push
into
arpl
mov
pop
push
data16
xchg
push
daa
pusha
cltd
push
test
cmp
sbb
mov
xchg
lods
pop
cmpsl
js
cmp
sti
add
jae
fcmovu
mov
cmpsb
xchg
lods
pusha
mov
mov
mov
mov
mov
fdivl
fimull
arpl
fwait
scas
rcrb
in
movsl
sarb
push
testb
rolb
mov
dec
cli
dec
aam
cli
jns
fldcw
add
int
js
xchg
fldenv
push
test
fildl
call
into
ds
sbb
imul
inc
or
mulb
push
aaa
inc
jbe
jbe
sub
gs
leave
xor
stos
xor
in
fsubr
inc
add
ja
les
pushf
mov
in
add
ds
aas
jecxz
loope
je
loopne
das
mov
xchg
lahf
adc
mov
xor
dec
mul
sub
shrb
cli
das
sbb
fstpl
mulb
xor
dec
sbb
aaa
out
fxam
rcl
ja
aad
aam
pusha
jg
mov
enter
cmp
mov
gs
mov
enter
jb,pn
adc
cmpsb
cmpsl
out
push
mov
icebp
cmp
mov
mov
test
cmp
inc
ds
scas
adc
fbstp
dec
aad
sbb
inc
mov
dec
insl
das
jb
sub
mov
or
clc
mov
push
dec
push
mov
pop
dec
xchg
int3
xor
xchg
jo
mov
popf
inc
arpl
add
ret
and
shrb
js
or
sbb
xor
xor
sbbb
out
sbb
leave
pop
nop
xchg
push
jo
fcomps
into
mov
push
dec
inc
jae
xor
jmp
push
cld
push
rorb
mov
stos
fistpl
sub
add
addr16
add
mov
push
jbe
in
pop
iret
rolb
adcl
jecxz
add
lods
in
push
add
dec
in
aad
pusha
pop
sbb
loop
sahf
xchg
fisubl
pop
adc
mov
push
mov
push
orl
cmp
jnp
jg
stos
pop
into
mov
cmovl
sub
aaa
out
mov
cli
xor
mov
sub
aaa
fists
jnp
mov
dec
push
stc
adc
mov
test
push
push
or
ljmp
ss
push
lahf
mov
iret
and
and
stc
adc
lret
push
fwait
xchg
loop
jge
pop
jbe
repz
mov
add
nopl
popf
sub
daa
and
dec
inc
movsb
fldl
xor
das
gs
mov
adc
fucomp
xor
fcomi
pop
jecxz
rcr
test
adc
ret
out
xchg
cltd
movsb
jle
int3
and
insb
mov
xor
xchg
loope
mov
test
mov
je
mov
or
nop
add
test
pop
pop
rorl
test
add
mov
sbb
jae
push
xor
incb
dec
movsl
js
fcoml
inc
outsl
hlt
mov
xchg
das
clc
xchg
or
mov
idivl
mov
mov
ret
pop
jbe
cmp
push
in
std
into
dec
or
jg
in
or
push
and
arpl
mov
data16
inc
or
out
pop
or
cmp
push
sbb
das
fwait
adc
cmp
in
scas
inc
push
out
test
cmp
push
push
push
add
mov
adc
jmp
enter
xchg
fnstsw
push
ljmp
xor
movl
jnp
mov
sub
and
and
sbb
xor
outsb
mov
mov
popa
mov
mov
movntq
test
movsb
shr
mov
out
cmp
mov
xchg
xor
imull
scas
inc
orl
jecxz
cltd
jbe
pop
sub
mov
mov
jo
pop
push
mov
fwait
lock
mov
pop
mov
mov
xor
ret
fldenv
cli
inc
je
std
push
fnsave
pop
xchg
hlt
xchg
jo
cmp
out
xchg
ss
mov
cmpsl
addl
ljmp
mov
lret
incl
xor
loopne
in
mov
testl
mov
jge
add
arpl
mov
popf
mov
or
jle
mov
sbb
jne
push
mov
pop
addb
mov
ret
xlat
mov
lret
jne
adc
mov
fisubrs
inc
call
dec
cmp
xor
and
mov
add
aaa
adc
xor
cmp
pop
nop
std
scas
pop
push
inc
and
inc
push
cmpsl
lahf
insb
popf
out
xchg
imul
mov
dec
jno
jp
call
pop
dec
je
ds
fstp
ja
lret
cmpsl
aam
push
pop
sub
and
lods
adc
sbb
jmp
xchg
outsb
xchg
sub
mov
dec
pop
pop
xchg
nop
sti
sub
in
push
aam
cmp
sbb
imul
dec
jb
sbb
mov
test
cmc
dec
jp
in
stos
cli
jb
addr16
mov
xchg
repnz
push
and
jne
scas
jmp
add
fwait
arpl
clc
or
shl
jmp
dec
dec
mov
mov
mov
sub
inc
or
mov
lret
les
stc
shlb
xchg
jle
or
jecxz
cmc
mov
push
push
or
adc
inc
push
push
out
rolb
loopne
fisubrl
imul
inc
stc
inc
adc
sub
fs
sub
mov
shrl
rcll
push
sbb
add
jnp
dec
adc
xchg
adc
add
mov
fldl
jmp
ret
test
dec
xlat
fs
xchg
sub
xor
push
fdivs
mov
test
arpl
cli
xor
sub
xchg
ljmp
pop
dec
std
les
push
mov
fbstp
fsubrl
xchg
xor
sarb
mov
ds
inc
clc
mov
nop
test
test
mov
jl
in
or
clc
add
in
dec
dec
test
pop
divl
fchs
cmp
sbb
sub
out
mov
sub
add
xor
mov
push
es
xchg
outsb
clc
push
pop
inc
pop
add
mov
sti
jmp
lods
pop
xor
cmp
ljmp
sbb
lds
je
roll
lock
loope
mov
jbe
mov
adc
mov
ja
gs
stc
insl
pop
xor
out
xor
cld
in
pop
jno
callw
mov
xchg
mov
fldz
arpl
out
ret
cmpsl
scas
jl
mov
xchg
ljmp
or
call
mov
mov
mov
sahf
cmp
cmpl
cmp
rolb
lock
mov
and
test
sbb
xor
mov
movsl
jae
imul
push
jge
xchg
pop
mov
aam
cld
pusha
pop
in
jno
mov
pop
aam
fldt
adc
sbb
cli
and
clc
xor
mov
dec
inc
arpl
adc
jnp
cld
int
pop
dec
xchg
xor
add
bound
mov
test
pop
flds
mov
lcall
inc
dec
rcrl
cld
daa
sub
shl
mov
loopne
pop
mov
mov
sub
pop
and
pop
push
mov
mov
das
or
jae
fldenv
outsl
roll
pop
jb
scas
rcl
mov
sub
or
add
pushf
xor
cli
xlat
ficoms
lock
jl
jo
icebp
jbe
out
fmuls
pop
sbb
pusha
sbb
mov
dec
push
sbb
mov
jbe
nop
rcl
jp
ss
push
cmp
mov
in
push
mov
mov
je
in
pop
ds
xor
icebp
sub
mov
inc
arpl
add
xchg
push
cmpsb
jg
adc
lret
lods
outsb
lahf
sbb
cs
mov
aam
fadd
mov
cmp
or
mov
enter
xchg
add
mov
cmpsb
mov
cltd
outsl
pushf
pop
xor
ja
lcall
bound
xor
sbb
icebp
xor
leave
call
ret
inc
outsl
xchg
ret
cmc
inc
call
fmull
sub
mov
pop
shll
lods
xorl
rorl
imul
or
imul
repz
xchg
or
das
pop
icebp
test
sub
inc
jmp
test
test
adc
push
and
leave
mov
xchg
repz
and
pop
pop
cmp
mov
sub
cwtl
pushf
sbb
les
ret
or
mov
mov
movsl
scas
xchg
add
add
cmpsl
xlat
pop
in
adc
push
cmp
std
in
pushf
push
testl
pop
nop
scas
movsb
repz
pop
rcrl
adc
fisttpll
jmp
inc
adc
pop
ja
bound
jae
and
xchg
or
mov
push
inc
clc
jle
or
cmpsb
popa
sub
push
xchg
js
loopne
push
outsb
add
arpl
inc
pop
xor
cmp
cmp
mov
cwtl
mov
mov
mov
insb
dec
jnp
andl
jo
outsl
sbb
dec
rol
jnp
insl
enter
pop
xor
stos
dec
add
cmp
clc
pop
les
roll
lret
jp
cmp
or
pop
cmp
xor
hlt
dec
hlt
imul
mov
pushf
orl
dec
scas
shr
mov
clc
xchg
cs
fcomi
or
addr16
das
aam
fnstenv
xchg
fmuls
jge
adc
outsl
ja
lods
jo
into
mov
xchg
sbb
jl
ret
mov
mov
cld
sub
cmp
enter
into
push
imul
mov
int
mov
push
das
xchg
dec
and
or
mov
rcrb
push
push
push
rol
adc
jb
in
inc
pop
xchg
pushf
jl
lahf
sub
add
inc
and
call
test
jne
sub
dec
ja
rcrl
or
mov
mov
add
je
mov
and
cmp
adc
icebp
sbb
sbb
xchg
fisttpl
aam
pop
ja
mov
out
pop
or
mov
mov
xchg
nop
movsb
into
pop
fistpl
cltd
and
int
dec
and
pop
clc
push
cmpsb
scas
ret
js
imul
outsb
shlb
mov
jl
jb
mov
cmp
out
test
mov
dec
repnz
fdivp
xor
jnp
out
pop
int3
add
xchg
jo
sbb
xchg
jns
pop
mov
call
fwait
inc
xorl
sbb
sti
inc
out
pushf
xor
ret
hlt
mov
fnsave
push
xlat
std
shll
nop
adc
or
stc
mov
or
dec
call
jle
out
xor
mov
movsl
imul
push
push
fidivrs
mov
out
in
or
push
dec
out
cltd
popa
out
add
mov
cmp
pop
in
popa
xor
push
mov
and
sahf
inc
int
jle
mov
sub
inc
xor
test
push
stos
and
inc
mov
sbb
mov
sub
inc
bound
pusha
clc
cmp
das
cmp
cmp
jl
jns
jns
shrl
lret
push
rcr
push
popa
xchg
mov
sub
data16
push
shll
arpl
xor
aas
pop
cmp
cld
dec
add
mov
or
pop
xor
lret
mov
sbb
push
out
xchg
mov
icebp
pop
mov
ret
fmull
lret
xor
outsl
cwtl
xchg
cld
xchg
mov
sbb
pop
jne
sbbl
adc
sti
mov
cmc
out
js
ja
lock
sbb
mov
adc
imul
popf
and
inc
cltd
lahf
xchg
pop
fwait
and
mov
xchg
or
or
mov
lcall
ret
or
xchg
mov
cmp
push
addl
jmp
jne,pn
mov
leave
xor
sub
cld
cmpl
dec
mov
movl
scas
inc
movsb
sub
pusha
mov
clc
lahf
mov
arpl
in
mov
cmpsl
mov
xor
xor
mov
push
sub
call
leave
jmp
pusha
test
push
cmpsl
dec
inc
ds
leave
cmpsl
ja
push
outsb
pop
push
cmc
movb
sub
sti
mov
cmp
dec
sub
add
jb
jle
cmp
dec
pushl
adc
push
xchg
xchg
adc
stos
adc
jl
data16
push
ja
pop
inc
jl
cmp
jae
sub
mul
mov
cvtdq2ps
xor
and
dec
xor
popf
loopne
loopne
dec
jmp
ljmp
push
jo
push
push
xor
pusha
pop
mov
cmp
js
fcmovu
ret
add
cmpsb
popf
jbe
dec
push
js
clc
iret
lods
cld
pop
roll
xor
push
push
lods
insl
imul
mov
leave
daa
sahf
roll
into
testl
or
cwtl
rcr
fndisi(8087
pop
or
vandnpd
sbb
sub
insl
incb
iret
or
fbstp
push
mov
lcall
daa
repnz
das
push
lock
shrl
push
call
imul
cwtl
xor
cltd
push
rcrb
fisttps
mov
push
cltd
int3
rcr
lods
adc
icebp
test
jne
call
dec
and
xor
pusha
lcall
testl
ret
jg
pop
lds
shlb
push
in
cmp
sahf
subl
call
test
xchg
shl
arpl
stos
call
mov
leave
add
xchg
mov
pop
push
inc
or
mov
jbe
jo
sbb
cs
pop
add
cmpsl
insl
cmp
ja
pop
imul
addl
leave
orb
or
sub
mov
jle
xor
test
inc
jge
adc
stos
push
cmp
arpl
push
mov
cwtl
inc
scas
sub
popf
enter
pop
jnp
pop
push
ja
test
cmc
fdivl
mov
dec
or
jle
mov
dec
dec
daa
jb
in
and
test
mov
test
pop
mov
aaa
fstps
or
out
les
stos
pop
into
and
pop
je
cwtl
dec
sarb
sbb
sbb
add
sub
pop
sarl
push
xlat
push
and
or
mov
fwait
cmc
int
inc
mov
daa
lock
aam
stos
mov
mov
and
fwait
imulb
cmp
dec
repz
fbld
push
cmpb
imul
addb
enter
jns
push
cmp
sbb
scas
test
mul
in
std
call
outsb
pusha
or
xchg
push
jb
ss
dec
mov
out
fidivrs
jmp
jle
fwait
adc
xor
in
cltd
lret
dec
cmp
pop
fucom
lods
mov
jne
mov
hlt
pop
add
int3
add
and
pop
loopne
fsubrs
subl
inc
cwtl
inc
sahf
lods
mov
imul
mov
movsl
mov
lods
jge
adc
mov
rcrl
adc
pop
add
jge
iret
push
pop
fsubl
jge
cmp
mov
inc
jnp
loop
out
insl
cltd
in
inc
xchg
or
mov
and
insb
stos
adc
jns
jg
adc
das
and
int
lods
fcompl
mov
jg
add
ja
add
ja
cmp
ret
es
or
fwait
lods
pop
dec
add
sbb
adc
mov
shl
lret
rcrb
sub
xchg
shrd
xor
pop
bswap
mov
pop
test
scas
push
cs
out
dec
jecxz
add
lcall
mov
repz
inc
dec
adc
xor
fwait
push
test
mov
ret
adc
js
idivb
mov
mov
pop
stc
fmuls
adc
lcall
call
mov
in
mov
loope
mov
and
xchg
dec
es
lods
pop
add
cmpsb
jns
jp
inc
sub
stc
sub
inc
pop
or
in
add
out
jl
std
xchg
pop
pop
icebp
fdivrl
sbb
clc
fwait
push
mov
shll
cmpsb
out
dec
xor
idivl
mov
nop
jns
popa
test
lock
pop
lock
xchg
hlt
adcl
stos
jne
pop
lds
mov
or
jg
sarb
push
shrl
data16
ret
pop
loop
mov
inc
and
xlat
push
dec
jg
sbb
or
sub
fidivrs
mov
xor
xchg
out
loopne
lret
cmpsb
jne
cmp
xchg
add
cmp
push
shl
push
add
je,pt
stos
sub
push
or
jae
int
das
out
fcompl
xor
dec
int
movsb
jns
adc
adc
xor
lcall
fcomp
xor
jo
mov
xchg
ja
lahf
test
mov
icebp
lds
push
mov
in
inc
jle
test
cmp
es
movsb
and
dec
lret
ror
inc
push
mov
lds
packsswb
inc
stos
xchg
and
inc
adc
mov
dec
xchg
loopne
shufps
or
jne
shll
lret
sahf
das
sbb
push
sbb
inc
ficomps
out
xor
xchg
cs
pop
dec
jb
xchg
int
sbb
ja
jge
addb
imull
jl
insl
rcll
rorl
cmp
adc
sti
lcall
mov
jle
cmpsl
mov
in
push
arpl
pop
jns
jbe
mov
or
ds
cmpsb
dec
inc
pop
fistl
dec
scas
jbe
insb
mov
mov
push
ljmp
lock
cmp
ret
fiaddl
push
pusha
jp
add
xor
xor
sub
mov
dec
stos
imul
fnstcw
outsb
mov
mov
scas
xchg
les
test
je
push
shrb
jno
in
sarl
pop
add
mov
add
ds
push
dec
or
cmpsl
ret
in
lds
pop
fs
movsb
mov
fwait
inc
test
cli
pop
mov
fcomi
add
js
fildl
movsl
adc
inc
mov
dec
jae
adc
xlat
dec
rclb
sbb
mov
mov
push
loop
dec
or
cmpsb
clc
mov
shrl
nop
pop
xchg
adc
mov
mov
or
adc
ljmp
js
cltd
fdivr
add
mov
xor
out
fs
scas
pop
and
cwtl
or
and
mov
mov
mov
and
shll
gs
push
arpl
hlt
cmp
mov
xchg
out
mov
lret
ljmp
sbb
sarl
pop
lock
push
stc
scas
rcrb
sbb
push
arpl
lcall
stos
xchg
xor
sbb
mov
call
pop
jge
push
add
sub
and
inc
jg
and
mov
sub
mov
outsb
mov
pop
fbld
aam
aaa
dec
repnz
lods
leave
xor
mov
aaa
push
lock
mov
inc
sub
and
xor
jno
pop
add
ret
sub
dec
pop
in
add
and
data16
xor
shlb
cwtl
lds
xchg
scas
xchg
adc
das
dec
dec
jo
pop
dec
inc
test
push
stos
cmpsl
dec
jns
fcmovnb
test
jo
les
xchg
add
test
fdivs
ror
scas
xchg
cmp
fcmovnb
or
xor
fdivrl
imul
sti
xor
out
jb
cmpl
mov
sbb
scas
gs
int3
lock
movl
rorl
repnz
ljmp
movsb
ror
test
jno
mov
add
adc
add
xchg
sbb
inc
sbb
outsl
orl
sbb
inc
push
xor
mov
and
stc
iret
aad
sbb
and
sub
xor
sahf
scas
cmp
movsb
dec
les
sarb
mov
push
mov
jbe
mov
dec
xchg
xor
inc
js
or
push
dec
adc
nop
dec
push
aad
sub
push
adc
addr16
push
aas
lret
inc
cmp
jle
dec
stc
outsb
std
shlb
xor
fiadds
mov
pop
cmpsb
lods
rorb
mov
ret
mov
and
andl
jecxz
out
sub
push
mov
dec
push
xchg
pop
push
and
mov
shlb
sbb
rolb
xor
inc
mov
xor
popa
shll
add
push
xor
push
cmp
loop
inc
cmpsb
jp
jle
push
cmp
repz
ja
xlat
jae
lock
xor
push
test
xlat
pusha
xchg
or
xor
mov
mov
sbb
mov
jnp
or
pop
fistpll
dec
and
ja
cmpsl
jecxz
sub
pop
mov
sar
int3
pop
inc
or
or
sahf
incb
xor
mov
stos
or
lds
push
or
in
fbld
or
bound
or
mov
sbb
inc
mov
insl
and
dec
xchg
mov
lret
arpl
pop
ucomiss
inc
add
loopne
mov
mov
cs
xor
mov
inc
popf
cmp
int
aam
insb
inc
fistl
jmp
inc
bound
inc
loop
inc
jmp
pop
jecxz
or
icebp
pusha
push
or
mov
mov
repz
mov
in
popf
pop
push
nop
and
scas
mov
or
fwait
outsl
adc
ds
dec
les
jns
push
out
fmulp
hlt
cld
and
outsl
mov
mov
pop
jae
bound
imul
lret
repnz
test
fbstp
push
shll
jnp
es
xchg
cmc
xchg
cld
test
add
fcmovnbe
or
loop
dec
mov
mov
add
dec
mul
out
add
imul
enter
dec
jno
sbb
push
add
js
dec
adc
clc
stos
mov
push
inc
cmp
mov
dec
fidivrl
hlt
adc
xchg
cltd
and
mov
push
cmp
test
gs
ljmp
jge
sbb
push
jmp
loopne
jl
mov
int
lods
dec
and
loop,pt
mov
repnz
jmp
pop
or
inc
push
jne
hlt
test
test
leave
mov
dec
pushf
in
push
and
dec
push
int
arpl
fbstp
xchg
out
push
cmp
inc
jl
pusha
or
and
push
iret
fsubrs
add
jo
xchg
sub
mov
mov
sbb
shrb
push
popf
loope
das
outsb
mov
cmp
bound
leave
out
sbb
out
aaa
dec
mov
xchg
sbb
or
add
xor
mov
ss
jl
adc
stos
sub
out
or
and
cmp
cmp
or
adc
and
test
adc
inc
add
aam
test
mov
mov
pop
test
sbb
incl
lock
movsb
mov
orb
js
imul
and
pop
jno
cmp
xchg
jne
or
cmp
add
push
jp
sti
mov
pop
test
in
mov
out
or
les
lea
in
push
adc
js
push
repnz
pop
fs
jecxz,pn
out
cs
clc
pop
mov
insb
dec
clc
or
add
rolb
into
outsl
mov
adc
fcmovbe
cli
sub
xchg
pop
xchg
sbbl
dec
outsb
decb
push
sub
xchg
xor
loope
mov
sbb
push
cli
sub
das
mov
push
sub
xor
jle
insb
or
xchg
push
mov
lcall
shlb
stc
je
loopne
push
out
mov
pop
xor
jbe
test
movl
fistpll
inc
imul
add
mov
dec
loopne
sbb
mov
data16
mov
enter
adc
imul
ret
pop
lds
out
adc
icebp
pop
add
lds
inc
scas
out
and
sysexit
xor
and
cs
jg
mov
into
in
dec
ljmp
sub
mov
aam
dec
lock
sub
movl
jmp
lock
loopne
mov
imul
rclb
or
pop
mov
jno
sub
dec
inc
mov
add
daa
xchg
jo
ds
mov
xchg
jb
cld
repnz
xorl
fidivs
jl
jo
cmpsb
xchg
or
lret
call
sahf
xchg
lahf
mov
mov
dec
xorl
loope
mov
pop
data16
ja
bound
out
in
cmp
movsb
insb
mov
xchg
aas
pop
push
cld
adc
jae
add
fucomi
pop
int
in
mov
imul
mov
xchg
dec
clc
adc
fs
and
mov
shlb
dec
mov
test
pop
inc
pop
push
in
mov
mov
int
fucomip
add
xchg
mov
ficoms
cli
fstps
xor
cltd
add
dec
lock
mov
insb
testl
test
movsl
fsubs
ds
ret
mov
popf
scas
push
inc
dec
and
cltd
lret
add
mov
ljmp
cmp
lods
jmp
rorb
pusha
outsb
jecxz
insl
loope
and
xor
cwtl
mov
pop
sar
clc
pop
push
jnp
dec
push
xorb
or
or
les
jae
inc
pop
push
sub
loope,pn
pushf
fldt
mov
inc
dec
adc
js
imul
mov
lods
int
inc
mov
push
lock
jecxz,pt
xor
xcrypt-cbc
cmpsl
push
mov
cmpsl
push
testl
insl
insl
push
pop
lret
sub
mov
sbbb
xchg
cmp
into
add
cmp
xor
mov
dec
movsl
aaa
cmpsb
and
mov
inc
mul
and
lahf
push
cmpsl
clc
pop
xor
loope
xor
mov
dec
jns
cwtl
call
repz
cli
sub
push
mov
std
mov
ss
xchg
jb
add
movsb
call
jbe
out
jecxz
inc
xchg
pushf
push
xchg
xor
dec
jnp
pop
or
nop
mov
lds
imul
cmp
add
cltd
scas
mov
push
pop
and
subl
xor
ja
in
inc
mov
ret
jg
loop
mov
adc
test
inc
scas
dec
pop
mov
sub
sbb
jge
aaa
sahf
inc
movl
stc
outsl
push
loopne
inc
dec
xor
add
cld
rolb
sbb
xor
pop
push
sub
mov
lods
mov
xor
or
cmp
xor
jg
cltd
inc
dec
mov
mov
aas
mov
pop
xchg
inc
sub
lock
enter
push
sbb
ja
imul
dec
pushf
dec
popa
scas
and
out
inc
arpl
std
pop
sub
jle
pop
xorb
hlt
cwtl
decl
jmp
je
jl
pop
sbb
push
pop
aaa
add
in
and
rcll
fcoml
sub
fiaddl
in
inc
shll
call
adc
xor
jl
addr16
cwtl
mov
push
fsubs
pop
mov
lea
gs
adc
jnp
adc
sub
dec
push
ret
pop
add
insl
call
sub
fists
ficoms
movsl
clc
sti
dec
mov
xchg
rcll
fs
add
nop
xchg
xor
dec
mov
mov
pusha
add
ret
sub
mov
js
jecxz
jno
jno
hlt
add
mov
mov
iret
cmpsb
sub
loopne
loopne
sbb
dec
subl
mov
in
das
dec
xchg
mul
xlat
mov
clc
pushf
dec
cmp
and
xchg
and
jno
or
push
jnp
repz
fwait
mov
add
daa
in
cli
or
lahf
std
test
outsl
leave
adc
ljmp
jge
pop
add
outsb
ret
aaa
sarb
lock
cmpsl
mov
imul
push
inc
test
cmp
lea
faddp
gs
jae
xchg
inc
lods
outsl
add
and
xchg
aad
out
loopne
push
cs
add
push
lods
fists
arpl
mov
int
pop
xorl
insb
mov
das
cmp
sbb
adc
inc
adc
fildl
push
aaa
mov
and
push
inc
cli
into
dec
or
es
sti
rcll
cmp
movsb
mov
and
jecxz
roll
sub
and
ds
pop
gs
shlb
pop
stos
add
lcall
inc
cmp
or
scas
lahf
xor
pop
mov
xor
cltd
jl
mov
xchg
dec
bound
das
push
xlat
int
push
mov
hlt
jno
int
or
adc
mov
add
loop
jo
sbb
sahf
repz
fptan
push
pop
shll
cmp
sub
js
lahf
cwtl
mov
testl
addb
test
popa
jne
jl
dec
pop
add
orb
add
pop
testb
inc
fistpl
hlt
xor
push
sbbl
mov
loopne
popa
imul
fcoml
cmp
pop
jge
int3
inc
mov
out
test
in
stos
sbb
jp
cmp
cmp
xorl
mov
orb
inc
divl
mov
sub
sub
data16
jmp
adcl
imulb
dec
adc
xchg
jbe
pop
in
jecxz
test
call
mov
in
sub
push
sub
fwait
sub
rol
xor
aas
jecxz
loope
jmp
mov
jl
inc
xlat
sbb
pop
lea
adc
decl
jne
mov
and
sarb
pusha
and
pop
xchg
add
fucompp
addl
cmp
push
lock
push
popa
push
mov
push
pop
outsl
fidivl
inc
dec
subl
push
lds
xor
add
mov
lods
std
jg
cmpsb
mov
cltd
ss
insb
pop
mov
or
or
pop
xchg
jne
mov
hlt
loop
sub
mov
xor
and
pop
mov
scas
xchg
pop
call
insl
push
std
mov
mov
in
dec
mov
out
int3
xor
aad
mov
leave
or
decl
and
push
fisubrs
shlb
jmp
or
mov
push
stos
popa
lahf
addl
inc
inc
sbb
mov
das
lcall
fbstp
outsb
cltd
pop
ret
arpl
mov
cli
or
dec
aaa
and
loope
push
xor
popf
or
sti
je
insb
push
add
out
int
jne
ljmp
call
cmpsb
into
push
adc
inc
dec
sbb
mov
lret
test
insb
or
dec
and
mov
adc
in
adc
and
push
push
xlat
data16
popf
xchg
lods
outsl
push
test
and
xor
mul
pop
test
jl
gs
in
inc
cmp
xor
dec
cmc
mov
jb,pn
pop
cmp
mov
test
addr16
mov
icebp
ss
bound
xor
xchg
cmp
inc
mov
sbb
cli
outsb
pushf
out
repz
inc
sbb
or
xor
call
add
add
mov
pop
rcrb
mov
xor
sbb
int
mov
les
js
push
pop
jae
mov
scas
fstpt
lods
notb
cmp
pusha
dec
cltd
adc
adc
cmpl
shll
jae
add
scas
or
and
sub
popf
sbb
sbbb
les
cmp
jg
out
mov
and
movsb
and
aad
arpl
idiv
xchg
lcall
outsl
insl
fnstcw
inc
push
ja
testl
jmp
adc
jbe
out
inc
mov
ret
push
movsb
mov
mov
sub
ja
stos
push
ret
or
jmp
mul
js
stos
scas
outsl
into
lea
inc
in
pop
inc
adc
push
dec
add
xchg
jecxz
les
sub
in
jge
add
int3
inc
jno
inc
lcall
sbb
int3
mov
mov
adc
mov
push
aam
ss
cmp
inc
mov
js
xor
dec
mov
cmp
mov
jmp
test
xor
add
lret
sub
adc
pop
push
sub
cs
test
in
scas
jg
adc
adc
sub
mov
jle
sbb
mov
leave
adc
xor
mov
idiv
pop
negb
fmull
imul
ret
data16
xchg
sub
mov
sbb
aam
fsubp
addr16
mov
or
dec
movsl
mov
adc
icebp
jge
pusha
aad
xor
in
lret
clc
xorb
or
pop
lods
or
lret
jge
cmpsb
in
add
movl
xor
es
push
cmpsl
dec
repnz
xchg
popf
daa
cmp
jle
sbb
inc
push
jmp
or
scas
fsubs
inc
call
sub
add
loopne
arpl
sbb
add
stos
out
adc
std
jp
into
mov
pushf
jmp
pop
pop
stos
orl
in
mov
bnd
lods
imul
lds
int3
test
cmp
in
fisubl
mov
sbb
sub
sbbb
mov
ljmp
imul
outsl
mov
sub
inc
shlb
mov
fsubs
cld
mov
int3
roll
daa
andl
sub
pop
mov
hlt
imul
push
addl
dec
pop
testl
loope
jp
fistl
cmpsb
outsb
shrb
add
int
push
gs
int
pop
out
lcall
jp
dec
int3
dec
out
lock
push
adc
into
in
clc
pause
shr
xchg
pop
or
push
clc
adc
rcrl
popf
inc
lods
cmp
and
push
cld
jno
sti
adcb
repz
push
fdivrs
test
jns
mov
mov
sub
mov
stc
and
xor
cltd
add
iret
xor
jecxz
mov
mov
add
test
rcr
push
add
pop
push
mov
fs
cwtl
rol
push
push
pop
daa
push
nop
imulb
push
push
scas
dec
cmpsb
inc
movsb
sbb
mov
sbb
mov
and
lret
mov
jbe
int
xchg
mull
xor
adc
cmpsb
push
mov
mov
or
sahf
xor
pop
out
push
or
xchg
repz
push
cli
mov
loope
fdivrs
aam
or
std
shl
push
xor
sub
outsb
sbb
cmpsl
pop
mov
cmpsb
adc
in
xchg
in
adc
xor
testb
fisubs
pop
xchg
mov
cli
mov
xor
aam
sub
das
xor
in
fsubl
adc
std
test
into
pop
inc
loop
add
inc
mov
cmp
dec
js
sbb
daa
mov
out
inc
push
jmp
aas
push
movsb
or
and
testb
pop
loope,pn
bnd
insl
xchg
std
push
inc
pushf
mov
or
adc
cli
mov
mov
mov
xchg
les
fdivs
xor
push
decb
cwtl
pop
arpl
and
sub
jge
lods
jbe
mov
int
xor
mov
mov
and
mov
inc
jmp
adc
xchg
add
fstpl
mov
inc
popf
xor
xchg
or
xor
enter
mov
lea
test
loopne
shrb
int3
jl
pop
mov
in
dec
pop
push
or
das
imul
cmp
loopne
sbb
test
cli
inc
pop
mov
orb
sbb
repnz
adc
out
aad
push
jno
in
fcmove
pushf
lods
push
push
xor
cld
out
insb
pop
dec
aam
jns
adc
xor
cs
mov
xchg
ss
lret
push
fwait
data16
shr
rorl
incb
sbb
and
mov
fcoms
jle
push
and
rorl
sbb
ret
sti
imull
stos
mov
jg
add
jns
inc
jle
movb
int3
mov
add
iret
rcrb
ljmp
xor
or
mov
aad
cwtl
push
or
mov
and
pop
and
lcall
out
std
addl
jnp
js
mov
inc
add
lea
mov
adc
sbb
xchg
test
nop
arpl
cmc
mov
pop
arpl
xor
jge
faddp
jmp
gs
push
mov
or
mov
ret
mov
out
lret
sti
inc
iret
imul
rol
loop
sub
adc
leave
cmp
shr
pop
dec
test
sbb
cmp
push
stc
decb
lods
outsb
push
andb
inc
das
sub
in
bound
jle
in
outsb
ss
cs
mov
leave
ja
movsl
dec
leave
mov
mov
pop
inc
push
adc
icebp
and
mov
cmp
or
lods
mov
into
adc
ds
xchg
rcll
fiaddl
sar
popf
negb
dec
mov
movsb
mov
xor
fidivrs
push
jno
adc
sub
addr16
addr16
push
sub
mov
jmp
andb
call
add
bnd
popa
mov
xlat
test
dec
mov
dec
jnp
mov
scas
fcoms
pop
cmp
xchg
or
nop
mov
and
jae
pop
dec
test
push
mov
test
jle
in
or
mov
iret
and
mulb
add
iret
inc
data16
pop
insl
jae
and
aas
cmp
sahf
cmpsl
add
movsl
sub
stos
int3
lds
jo
icebp
cmp
cmc
sub
aad
out
sti
adcw
lcall
and
ret
mov
imul
sub
lret
hlt
push
call
jl
stos
sub
roll
decb
fcmovne
rcll
data16
insl
mov
fsub
cmp
push
sar
sbb
and
add
xor
dec
sahf
stos
pop
imul
push
in
jnp
jo
and
sub
jns
cmp
dec
aad
sahf
fcmovne
out
mov
mov
mov
sbb
in
push
push
add
popa
jo
aas
arpl
push
dec
lcall
push
inc
repnz
inc
jb
inc
in
rol
and
nop
xor
mov
subb
sbb
dec
jnp
stc
into
pushl
mov
xchg
jge
inc
jne
ret
rorb
and
push
push
cmp
pop
and
fiadds
mov
lcall
fs
inc
pushl
jl
aam
repnz
xchg
mov
dec
in
pop
jo
cmp
pop
mov
mov
cwtl
fucomi
mov
jbe
jb
inc
mov
sub
add
dec
leave
jno
ds
imulb
xorl
aas
cwtl
xor
aam
movntq
out
mov
bound
jmp
xor
stos
rcrl
cmpsl
subb
stos
popa
push
sbb
ss
pop
int
add
adc
shrl
and
mov
std
push
mov
les
mov
cmp
xchg
mov
data16
out
pop
xchg
addl
divb
cmp
imul
mov
sub
adc
xchg
ljmp
rcrb
sub
sbb
pushf
xchg
test
or
pop
lds
lods
aaa
popa
mov
loopne
pop
xlat
mov
arpl
dec
mov
outsl
std
out
out
sarl
cli
push
mov
add
cmp
push
test
enter
orb
fdivl
jbe
add
leave
xor
xchg
pop
bound
shrb
data16
jb
push
dec
pop
jg
arpl
sub
rcr
pop
popa
lods
push
xor
dec
sbb
inc
andb
inc
shr
sub
rorb
and
pop
add
mov
in
xlat
loopne
in
mov
dec
sub
mov
xor
out
sub
test
fistpll
dec
cli
aas
adc
sbb
jp
add
cmp
jo
mov
out
cmpsl
pop
mov
xor
in
push
adc
lret
in
dec
jl
shl
js
repnz
xchg
lahf
xor
inc
xor
push
nop/reserved
pop
push
rclb
mov
movsb
mov
daa
loope
mov
push
push
test
add
test
xor
push
loope
pushf
fdivs
cld
call
inc
add
subl
pop
sub
jno
and
mov
mov
je
push
sahf
sarb
cmp
ds
ds
xchg
and
sahf
inc
out
jmp
xchg
arpl
ja
mov
xchg
xchg
mov
mov
inc
pushf
sub
pop
mov
cwtl
les
mov
test
hlt
pop
sbb
daa
inc
mov
mov
loop
insb
dec
das
fcmovb
ss
fnstcw
lock
scas
dec
ds
dec
fcomps
mov
jbe
jle
sar
dec
or
call
lea
or
loopne
cmpsb
nop
or
inc
or
xor
fldenv
pop
out
mov
sbbl
out
push
pop
mov
mov
lock
ret
push
mov
cwtl
ss
mul
and
stos
push
mulb
fdivl
sub
rcl
test
mov
mov
xlat
repz
das
pop
sbb
out
jecxz
int
xchg
jns
std
sti
movl
std
jmp
ljmp
xchg
mov
dec
adc
test
mov
fsub
jmp
lahf
mov
lea
and
mov
fs
push
push
mov
mov
shlb
cs
xor
stos
std
cmpsb
pop
cmp
push
jp
dec
pop
inc
fadd
mov
pop
sbb
push
fs
or
add
pop
aas
xlat
push
inc
fcoms
xchg
mov
fiaddl
jbe
push
adc
inc
xchg
mov
inc
cmp
push
mov
movsb
inc
and
fildll
mov
loopne
mov
stc
add
loopne
inc
andl
adc
in
cmp
insl
jmp
cmp
fs
dec
stos
sbb
repz
or
inc
mov
decl
inc
arpl
fimull
add
jbe
outsb
ret
mov
or
xor
mov
push
jo
xchg
movsb
adc
cs
movsb
fimuls
sub
ret
cmp
dec
shlb
push
mov
push
pop
cltd
sub
fsubrp
addr16
push
mov
ror
cmpsl
push
mov
cmpsl
aam
out
push
push
mov
das
mov
dec
leave
mov
push
xor
insl
popa
ret
addl
push
loope
imul
xor
stos
pop
shrl
or
sahf
push
mov
inc
and
pusha
mov
shrb
fisubl
jmp
out
mov
rolb
sbb
fisubs
add
pop
in
call
mov
push
jecxz
push
xchg
bound
pop
push
jecxz
aas
data16
pop
cmp
push
insl
pusha
enter
pop
sub
movsl
jae
lret
outsl
push
mov
in
inc
cmp
mov
adc
or
xlat
pop
pop
stos
decl
cmpsb
inc
stc
inc
jne
loop
xor
dec
pusha
xor
pop
push
push
xchg
and
adc
mov
call
bound
xor
imul
cwtl
jp
pop
test
js
int3
rcrb
xchg
xor
arpl
and
jmp
into
push
outsb
hlt
test
and
repz
xor
push
movsb
sbb
and
cmc
stos
pusha
dec
pop
mov
rorb
inc
imul
sbb
cmp
cmpsl
cmp
push
xchg
dec
popa
lahf
or
cwtl
dec
cmp
jl
push
lret
cmpsl
stos
jns
out
pop
xor
mov
mov
movsl
lods
bound
into
jp
aam
jnp
cmpsb
rorb
or
inc
xor
aaa
lfs
jo
scas
les
fcoms
bound
std
mov
in
fldl
jle,pn
pop
or
icebp
cld
sub
pop
mov
push
int3
adc
push
xchg
mov
cmp
arpl
in
addb
ljmp
jmp
lods
cli
adc
mov
adc
add
cmpsl
lea
adc
popf
es
les
sbb
pop
push
sub
dec
addr16
or
xor
add
sub
jo
test
lods
inc
aad
push
bound
jge
repz
imull
pop
rclb
pop
xor
lds
andb
push
xchg
aam
cmp
jp
icebp
sti
push
adc
jl
es
xor
jmp
loope
test
dec
test
sub
icebp
ljmp
or
sub
faddp
push
fdivs
and
xchg
arpl
test
pop
aas
cmp
push
rcl
mov
movsb
push
sti
fadds
pop
pop
cmp
insb
mov
mov
cmp
add
xchg
push
in
arpl
lret
aaa
mov
jbe
mov
push
or
inc
push
push
hlt
dec
repz
inc
inc
sub
fistl
nop
mov
out
add
mov
xchg
inc
clc
ja
pop
lret
xor
adc
fs
mov
mov
into
push
push
stos
jg
out
xor
movsb
cld
xchg
jb
hlt
xor
in
rcll
push
cli
dec
push
pop
mov
jl
xchg
mov
pusha
mov
imul
or
fbld
xchg
push
shlb
push
cmpl
loopne
dec
inc
sbb
or
cld
js
inc
pop
test
pop
mov
lret
ljmp
addr16
outsb
movsb
pop
mov
ret
jp
mov
sub
mov
xlat
fidivrs
mov
xchg
and
fstpt
stos
push
adc
mov
loop
lret
cmpb
sub
frstor
repz
inc
jle
pop
xor
pushf
mov
fucom
mov
jnp
test
leave
popa
lahf
or
lahf
ret
dec
sbb
shll
jb
or
sbb
mov
and
lock
or
and
rolb
test
ror
lahf
xchg
push
sub
fisttpll
outsl
test
pushf
push
pushf
imul
rorb
inc
cmc
cwtl
inc
xchg
lcall
dec
jno
sub
out
adc
xchg
int
dec
mov
cmp
mov
test
icebp
pop
lahf
xchg
mov
mov
pop
xor
xacquire
mov
jnp
iret
aad
or
iret
shll
daa
cwtl
dec
mov
sub
xorb
mov
adc
cltd
gs
add
adc
jl
rol
orl
fs
roll
lods
add
push
mov
int3
push
in
cs
loopne
and
pop
daa
arpl
push
jle
lds
push
in
sbb
jp
sbb
and
inc
jno
aam
cmp
mov
fstpt
arpl
and
xor
stos
ss
cmp
loopew
dec
inc
pop
or
pop
dec
pop
jns
cmp
jno
and
xor
imul
ljmp
imulb
jecxz
inc
add
pop
aam
adc
add
mov
lcall
add
jbe
adc
mov
mov
mov
push
rcrb
insb
pop
cmpb
or
dec
jl
aad
or
pop
test
push
outsl
lock
fisttpl
xchg
insl
add
jo
or
push
mov
ljmp
movsl
lods
dec
adc
div
or
outsb
add
mov
fnstsw
popf
nop
js
mov
cmp
xchg
add
cmp
adc
pop
adcb
aaa
ja
fcompl
scas
or
outsl
jmp
mov
xchg
cmpl
jns
test
rcrl
inc
outsl
mov
out
cmpsl
mov
sub
hlt
roll
je
dec
loopne
push
aaa
div
cwtl
out
cmp
mov
add
xchg
ljmp
out
or
in
sbb
bound
outsl
xor
sub
ret
and
xchg
fdivl
enter
push
inc
inc
loop
push
xchg
or
jecxz
lretw
mov
mov
jecxz
push
or
cmp
daa
push
cwtl
cwtl
xor
insb
aaa
mov
shl
cmc
or
xchg
ds
push
je
test
and
movaps
xlat
adc
xchg
cwtl
nop
lock
mov
arpl
imul
mov
cwtl
adc
pop
fdivrs
mov
cli
sub
stc
ljmp
push
jnp
cmpsb
xchg
enter
sbb
push
popf
pop
sbb
mov
push
jg
dec
jl
addl
shrl
cmpsl
cwtl
adc
jecxz
mov
lahf
jb
nop
mov
rolb
ja
cmpsl
and
lods
xor
aam
clc
dec
int
popf
xchg
mov
sbb
fistpll
lods
xchg
mov
mov
jp
xchg
xor
and
andb
testb
dec
dec
pop
jmp
mov
jne
test
dec
mov
jns
sahf
push
test
rcl
adc
cmc
xorb
inc
and
pop
cmp
cmp
fs
jbe
aas
jae
jp
sbb
out
ror
ja
loope
pop
dec
fbld
sub
pusha
mov
inc
jl
icebp
dec
fisttpll
int
loop
stos
bts
adc
mov
popl
ficoml
mov
cmp
mov
and
mov
adc
rorl
dec
sbb
mov
mov
push
push
jge
xor
or
xchg
push
int
dec
xchg
ja
jl
pushf
lret
lea
cmp
scas
ja
movsb
aaa
jnp
sbbl
xlat
scas
cld
add
loop
xchg
pop
scas
aam
dec
fdivl
cmp
jle
movsb
icebp
mov
decl
sub
insl
sub
jb
or
rorb
mov
mov
and
mov
mov
or
lret
xchg
sub
js
icebp
out
les
in
imul
and
aaa
bound
imul
iret
pop
push
call
test
lahf
push
mov
jl
icebp
hlt
iret
sub
push
nop
lods
arpl
sub
adc
mov
sbb
movsl
out
push
aas
out
inc
mov
push
rorb
jle
ret
add
pop
rorl
in
gs
sbb
dec
xor
daa
cmpsb
insb
out
xor
push
int3
add
enter
arpl
call
in
add
and
and
movsb
xor
fisubrl
jmp
test
lcall
mov
xchg
test
lahf
sbb
dec
sub
loop
mov
sbb
scas
cld
cs
xchg
xchg
jp
cmp
dec
or
test
cwtl
repz
sarb
push
adc
pop
imul
andb
fldenv
movsb
pusha
sub
add
dec
dec
push
add
out
jo
mov
pop
xchg
jnp
add
push
data16
mov
rcrb
sub
shll
sub
rclb
mov
int3
pusha
pusha
mov
cmp
sub
pop
rorb
in
xor
out
adc
dec
aas
sbbl
stos
fwait
sbb
pop
push
pop
ret
adcb
pop
aaa
cmp
push
dec
lahf
mov
sbb
loope
dec
push
sti
and
mov
dec
add
int
jg
jp
xchg
repz
imul
mov
jb
ret
xchg
bts
inc
mov
js
pop
aas
pusha
adc
leave
mov
je
call
inc
xor
hlt
inc
sti
sub
and
in
into
mov
mov
aas
push
pusha
jmp
ss
pop
icebp
bound
add
sbb
ret
mov
ret
mov
sbb
aad
subl
out
shlb
sbb
pop
fisubl
sti
dec
xchg
sahf
aas
lods
loope
sahf
inc
dec
mov
or
jle
std
adc
and
adc
into
lcall
rclb
call
adc
mov
fwait
adc
add
int
adc
or
loopne
cmp
daa
add
or
lret
push
icebp
sbb
ss
inc
and
adc
cmc
outsb
inc
imul
fs
xchg
pop
fistpll
sub
imul
xor
or
jne
jl
jg
ret
in
loop
dec
in
add
push
notrack
pop
or
jecxz
push
xchg
cli
xlat
daa
into
rol
sub
fs
in
in
jns
push
in
scas
mov
jno
jb
or
mov
mov
dec
jp
in
les
xchg
in
lods
jbe
pop
or
add
imul
les
mov
adc
xor
fadds
ret
subb
pushl
leave
mov
and
ljmp
xor
ds
mov
add
fisttps
jnp
and
cmp
dec
hlt
int
jae
or
push
lea
cwtl
push
insl
sahf
mov
pop
jl
mov
pop
push
insb
jae
sahf
xlat
adc
aam
xchg
lea
inc
call
outsb
aaa
xor
and
add
and
jge
test
sbb
stos
addr16
shl
roll
sub
inc
pop
daa
pop
test
add
int3
insb
mov
mov
and
mov
and
xchg
add
jo
mov
push
out
adc
inc
mov
and
ja
xchg
in
cwtl
xchg
mov
adc
les
push
push
aam
jge
icebp
cltd
mov
jle
or
xchg
sbb
xor
inc
push
cmp
popa
push
pop
ja
fcmovne
ja
cmpsl
push
incb
test
and
out
mov
xor
lock
negl
inc
pop
rcl
or
mov
cli
ret
cmpsl
jmp
cmpsl
mov
pop
inc
pop
add
orl
cmp
xchg
xor
lret
test
loop
mov
add
leave
es
pop
insl
pop
mov
nop
add
jg
inc
jle
push
inc
ret
pop
push
imul
cli
shlb
pop
xchg
dec
cmpsl
mov
test
int
sub
bound
mov
sub
sbb
hlt
out
pushaw
and
lods
mov
imul
pop
mul
xor
mov
jbe
xchg
vmovapd
mov
or
inc
es
push
mov
aas
les
fxch
mov
in
push
leave
movsl
push
or
add
out
add
dec
dec
stos
aaa
cmp
sub
loopne
dec
xor
xchg
or
add
sub
iret
pusha
mov
sahf
loop
imul
sbb
ds
mov
push
repz
sbb
bound
pop
cld
rclb
cltd
pop
in
gs
push
test
insl
dec
scas
cwtl
add
je
inc
mov
mov
cmp
sbb
sub
arpl
and
cmp
out
cmpsb
inc
add
mov
or
inc
ss
xchg
clc
insl
mov
push
add
cmpsb
jae
xchg
aas
lea
je
rcrb
jge
out
xchg
fadd
mov
orl
pop
xchg
andb
aam
xorl
lea
cs
decl
mov
sub
pop
std
and
sbb
shlb
in
push
enter
push
int
xor
mov
out
jmp
mov
and
pop
and
std
faddl
mov
mov
push
push
faddp
adc
xchg
pop
loop
mov
xor
and
bound
fdivs
out
inc
xor
pop
loope
imul
insl
mov
mov
cs
daa
aam
test
fwait
jne
and
mov
imul
mov
or
and
imul
call
rcrl
jnp
in
ror
mov
lea
mov
pop
lods
fwait
lea
inc
fidivs
mov
xchg
add
mov
clc
jg
sub
stos
dec
sub
dec
scas
pop
aad
push
jge
xchg
mov
ret
xchg
push
or
repz
cld
mov
cmpsl
ja
sub
loope
sahf
cmpsb
mov
sbb
lds
in
je
mov
loope
insb
push
inc
out
cmpsb
imul
ljmp
inc
pushf
mov
push
xchg
mov
pop
addb
std
add
sub
mov
inc
add
xchg
clc
inc
pop
repnz
lret
jp
xor
loope
mov
xchg
and
and
mov
xorb
out
ror
lret
push
data16
jo
mov
data16
lcall
push
jmp
mov
xor
data16
cltd
or
loope
je,pn
or
xchg
lret
xchg
cmc
sbb
ss
or
scas
fdivrs
repz
lcall
xor
lods
jmp
repz
repz
cmp
jle
jno
out
ss
cmp
fs
int
insl
jns
lods
inc
popa
jno
inc
sbb
inc
push
loop
cs
dec
mov
push
or
xchg
mov
test
xchg
sub
in
clc
inc
stc
std
idivl
mov
xchg
xchg
push
cmp
pop
in
adc
xor
jl
pop
inc
jnp
das
dec
and
mov
jg
stos
jno
enter
pop
and
push
je
pop
fstl
push
outsl
or
sub
addr16
inc
inc
mov
inc
call
daa
cmp
jns
enter
mov
xchg
ljmp
xchg
mov
popf
hlt
ss
fisubs
test
adc
xlat
jmp
addb
enter
jnp
stos
ret
sahf
sti
sahf
leave
sbb
sub
xchg
arpl
test
jg
sarb
push
les
lcall
sbb
dec
orb
int3
dec
stos
jmp
ds
xchg
cmpsl
cli
xchg
xchg
outsl
adc
xchg
out
sbb
mov
fidivrs
aaa
dec
jge
mov
sbb
sbb
dec
jae
cmp
dec
jle
jbe
fisttpll
iret
mov
push
cmp
jno
push
lock
inc
hlt
and
sarl
mov
aad
push
iret
dec
ds
xchg
add
push
dec
push
sub
cvtdq2ps
inc
ret
insl
jnp
aas
dec
clc
push
mov
pop
mov
shl
sub
jg
sbb
aad
cmpsl
cmp
aas
push
movsl
mov
or
not
push
or
cmp
leave
aam
xchg
mov
jae
xorl
inc
jmp
mov
loop
cld
cs
mov
mov
fldl2t
pusha
adc
popa
push
or
in
mov
cmpsl
cmp
mov
push
ret
adc
movsl
push
in
arpl
icebp
jecxz
and
inc
adc
mov
inc
outsl
out
jmp
sbb
ljmp
adc
push
and
leave
iret
cmpsb
xchg
push
pop
stos
sub
dec
iret
lahf
mov
fdivrs
loopne
and
adcl
fwait
adcl
stc
dec
cmp
imul
pushf
daa
movsl
add
mov
insl
jns
divl
lods
mov
das
add
fsubrs
icebp
loope
dec
sub
cmc
jg
movsb
xchg
lret
push
add
int
xchg
xor
test
out
adc
push
idivl
push
lods
fwait
repnz
add
or
fnstsw
adc
sbbb
cld
mov
fistl
mov
sbbb
dec
mov
pop
xchg
inc
fisttpl
stos
aas
mov
xchg
stos
dec
pop
out
pop
sbb
ficoml
mov
adc
loope
outsb
jae
sbb
testl
je
mov
jo
adc
push
test
push
pop
cmp
fisubs
inc
mov
and
jo
loop
xor
mov
and
hlt
outsl
or
or
fstps
popa
push
in
push
xor
add
ret
push
xchg
jo
jb
fwait
mov
fwait
pop
mov
cld
lods
sbbl
adc
dec
cmp
les
aaa
es
out
ss
inc
stos
jge
push
or
sub
pop
add
testl
arpl
dec
pushf
mov
out
enter
push
icebp
ret
add
cmp
mov
adc
pop
das
loope
xchg
loope
inc
inc
xchg
stc
aam
dec
push
mov
add
mov
fwait
cs
xchg
loop
adc
adc
pop
xchg
imul
in
cmpsl
dec
je
jle
lds
aaa
cmpsl
inc
xchg
mov
lods
jp
stos
movsb
cmp
lods
jo
lea
jb
mov
xor
in
jb
mov
mov
pop
xor
cmpsl
xlat
or
add
idivl
fsts
mov
int3
out
inc
adc
fildl
pusha
js
adc
mov
pop
push
in
inc
mov
pop
andl
pop
scas
pop
mov
push
ds
and
sbb
pusha
aas
std
test
mov
icebp
leave
cmc
sbb
fimuls
fisubrs
cld
cmp
push
rcll
inc
adc
gs
int3
xchg
rcr
add
xor
push
and
cmpsb
out
repnz
or
cmp
push
sub
add
add
xchg
adc
test
jecxz
xchg
in
lret
movsb
rcr
mov
mov
ret
dec
mov
in
xlat
outsl
or
int3
hlt
addb
in
shll
pusha
cwtl
mov
and
ljmp
ja
test
fists
mov
add
mov
fs
imul
mov
clc
adc
divl
or
pop
cltd
xchg
mov
pop
iret
mov
jecxz
push
sbbb
inc
xor
ljmp
xor
inc
cld
popa
fsts
push
das
js
fs
and
sbb
pushf
inc
jmp
pop
add
stos
push
or
sbb
ss
lret
mov
lods
mov
mov
insb
adc
pop
mov
mov
adc
shl
popf
jge
pand
and
mov
and
imul
and
inc
movsb
adc
rol
add
popf
xor
int
or
es
and
lock
es
mov
jno
cmpsl
leave
add
fs
fimuls
in
lcall
in
gs
or
movsl
jne
ret
sbb
in
outsl
mov
shrb
cmp
mov
enter
iret
push
inc
fisttpll
xor
xchg
stc
and
pop
push
dec
pusha
loop
dec
int3
loope
xchg
push
test
jp
nop
dec
xchg
xchg
sub
cltd
loope
mov
hlt
xchg
xor
xchg
outsl
aam
push
push
aaa
imul
pushf
cmp
push
push
out
push
shrl
scas
nop
mov
push
in
mov
nop
mov
popa
lock
sti
fisttps
mulb
xor
xchg
decb
popf
lds
test
jg
mov
push
push
lods
mov
mov
out
jge
aad
loop
jle
addb
pushf
leave
mov
mov
push
enter
xchg
mov
arpl
mov
notb
rsm
mov
jnp
stos
jl
enter
mov
mov
rcrl
adc
aaa
fstpt
jecxz
stos
imul
lods
lock
add
sub
mov
int
dec
test
ljmp
push
cmp
aam
aam
and
shufps
daa
inc
clc
mov
dec
push
gs
dec
sbb
cmp
leave
xchg
scas
pop
push
mov
loopne
mov
addr16
mov
push
pop
movsb
jbe
xchg
inc
orb
icebp
test
jno
pop
bound
std
jmp
push
mov
clc
xchg
sub
or
pop
ret
push
mov
rorb
jl
out
hlt
cmc
push
jle
ja
sub
mov
fistpll
adc
dec
int
int3
arpl
adc
jmp
xorl
sub
inc
cmpsb
inc
in
jae
lods
sbb
fucomi
inc
iret
fidivrl
push
stos
or
jge
sarl
fwait
jmp
pop
out
inc
out
outsb
rcrl
leave
hlt
enter
loopne
loopne
jnp
jg
push
imul
jle
out
dec
push
scas
rolb
or
pop
mov
fdivl
stc
jo
pop
imull
ljmp
iret
lret
cmp
nop
shrb
lcall
mov
ds
dec
scas
fucomp
push
repz
mov
daa
lds
addl
mov
je
cmpsb
loopne
xchg
xorl
push
aam
in
call
outsb
mov
cvtpi2ps
adc
loopne
sbb
mov
cli
inc
lret
aaa
mov
cmc
dec
or
lcall
lock
out
push
and
push
daa
test
cmp
scas
movsb
cli
movb
jecxz
and
out
sub
jo
movsb
mov
scas
or
lret
pushf
out
bt
and
add
outsl
jge
jg
and
jb
daa
sti
pop
mov
pop
clc
repz
test
push
fsubs
in
push
mov
or
subl
test
out
dec
mov
dec
inc
arpl
bound
cwtl
leave
add
jo
jle
stos
insb
cmp
fs
xor
sbb
sub
jns
lcall
test
popl
and
test
scas
test
out
sbb
sub
ret
popf
pop
dec
out
adc
iret
xor
mov
outsl
jge
in
inc
adc
mov
xor
xchg
jbe
mov
ss
sbb
adc
fs
mov
xor
sub
dec
inc
adc
or
mov
addr16
jbe
mov
mov
pop
outsb
lea
mov
in
xlat
imul
aas
pop
enter
imul
adc
int3
dec
jb
adc
and
inc
int3
mov
lret
adc
cmp
notb
clc
stos
jne
xchg
icebp
jae
cli
jnp
or
adc
fs
jne
mov
pop
shl
pop
pop
pop
cwtl
into
inc
lcall
ja
fisubrl
call
mov
ljmp
ret
scas
ss
and
mov
dec
sbb
push
shl
roll
cli
fs
mov
or
lea
mov
sbb
lret
xchg
inc
push
das
in
aad
mov
jne
xlat
int3
and
insl
loop
add
push
or
decl
mov
stos
sti
enter
popa
js
lock
iret
mov
push
or
mov
sub
lret
sbb
out
mov
daa
cwtl
std
and
fs
dec
in
or
fstpl
jne
xchg
sub
aas
call
adc
ss
xchg
push
nop
das
add
mov
lods
xchg
idivl
or
jp
cmpsb
pop
cmc
mov
push
popa
xor
cwtl
jl
inc
push
nop
jbe
sbb
pop
daa
adc
xchg
clc
and
sub
pop
mov
imul
rorb
loop
xchg
and
mov
cmc
fnstsw
icebp
jmp
dec
lahf
jb
lret
shrb
or
and
pusha
cmc
push
fisttps
jmp
lods
lea
add
outsb
out
mulb
xlat
or
xchg
ja
xchg
mov
sahf
xor
mov
lods
inc
data16
adc
mov
mov
aam
js
aam
into
cltd
hlt
add
inc
or
push
jbe
addb
clc
cs
and
int
push
inc
hlt
and
push
popf
xlat
mov
out
daa
loop
out
sahf
in
cmpsl
add
cmpl
in
outsb
add
dec
ror
loop
mov
or
and
push
pop
dec
dec
clc
sub
lahf
cwtl
jp
add
push
lock
in
loope
push
mov
or
leave
nop
and
and
inc
mov
sbb
out
addr16
adc
shll
lds
and
insl
into
dec
push
inc
and
jo
ja
inc
call
push
or
imul
and
pop
xor
cld
and
sbb
lods
jbe
addb
adc
jb
arpl
sbb
inc
add
cmc
adc
sub
arpl
loop
adc
scas
mov
or
push
push
pop
fists
jne
das
movsb
addb
outsb
int
inc
outsl
jecxz
inc
shlb
aaa
rol
jp
push
dec
add
mov
movsl
mov
xlat
cld
add
sbb
ja
jg
dec
dec
test
push
push
loop
rclb
xor
movsl
adc
icebp
sub
or
sub
and
in
sbb
and
mov
je
test
je
fs
sub
push
adc
mov
mov
cmp
or
cmp
fildl
scas
dec
sub
inc
pusha
push
xor
jmp
push
call
xlat
cmp
out
xchg
fsubr
xchg
push
cld
leave
pop
pop
add
mulb
pop
mov
aaa
push
xchg
pop
js
adc
sub
or
xchg
push
popa
addb
aam
jl
jp
ret
icebp
flds
mov
negb
dec
mov
add
popa
pop
mov
push
in
ja
movzwl
push
sbb
xor
mov
dec
gs
cmpsb
dec
jmp
dec
aad
nop
js
test
pop
pop
mov
pop
adc
insb
cld
adc
mov
fistpl
lahf
sbb
cs
jne
adc
fsqrt
clc
into
push
cmc
push
sub
ret
push
popa
icebp
movsb
inc
mov
cmp
mov
call
pop
push
xor
testl
cs
fcomps
mov
sub
adc
pop
cmp
pop
mov
daa
and
lds
scas
xchg
mov
mov
js
mov
ds
das
mov
mov
lcall
and
out
js
and
test
mov
cmp
fs
cmpsb
xchg
mov
out
ds
inc
and
fisttpl
inc
test
or
outsl
das
inc
insl
ljmp
adc
xor
outsw
inc
lock
adc
xlat
add
fadds
icebp
sub
repz
jg
pop
ss
rcrl
mov
pop
not
cmp
stos
jae
sbb
fistps
cmp
push
pop
aad
movb
and
shlb
jno
imul
mov
icebp
out
jae
fdiv
pop
or
or
cmpsb
and
add
iret
add
call
andb
push
mov
leave
out
mov
pop
loopne
mov
shll
addl
jmp
pop
xchg
xchg
add
cltd
jae
xchg
push
mov
jne
je
cli
mov
std
and
xchg
jae
ror
xor
jne
xchg
insb
adc
test
subb
imulb
lret
loope
jnp
add
sbb
xchg
call
xchg
dec
mov
mov
xor
faddp
adc
mov
mov
sub
mov
insl
inc
mov
or
inc
ja
and
push
xchg
mov
scas
pop
cltd
mov
std
pop
xchg
cmp
or
mov
jl
pop
pop
pop
sbb
lret
add
js
mov
pop
xlat
xchg
xchg
dec
dec
sub
push
lods
repnz
ds
mov
sub
cmpsb
push
xor
rclb
dec
sub
test
cmp
test
scas
bound
shl
or
pop
in
pop
shlb
adc
pop
adc
lret
push
sahf
xor
dec
pop
mov
movsl
lret
mov
daa
push
adc
mov
pop
insb
and
testl
popf
dec
adc
jg
jbe
mov
in
xchg
cmp
jb
mov
inc
add
sbb
dec
aaa
xor
daa
and
mov
pushw
dec
cs
push
test
pop
mov
popa
mov
add
sarl
fwait
inc
call
dec
sub
in
sub
imul
ljmp
dec
loopne
scas
and
in
movsl
and
or
jnp
orl
enter
insl
xor
sbb
out
in
cmpsb
jecxz
int
outsb
mov
lods
jl
movsl
stos
ret
jl
pop
ret
push
pushf
call
sbb
mov
mov
les
in
rolb
jmp
aad
clc
mov
jl
pmovmskb
jmp
lods
or
dec
popa
ja
insl
gs
pop
xor
out
pop
hlt
divl
pop
jecxz
mov
xchg
pop
xor
sub
jl
lods
jg
cwtl
mov
sbb
cmp
lcall
xor
fcompl
mov
sub
push
jmp
call
sbb
ljmp
fnsave
jb
scas
mov
push
jno
xlat
call
fbstp
jae
and
or
sub
or
test
arpl
add
dec
sub
inc
mov
xchg
outsb
ds
inc
rcll
xor
stc
pop
inc
sub
push
fwait
dec
in
aad
sbb
or
cmp
jb
xlat
jno
mov
jns
out
xchg
testb
adc
and
inc
fildl
xchg
xchg
adc
imul
mulb
movsl
add
push
addb
aad
xchg
jecxz
fistps
xchg
sbb
jns
mov
stos
mov
std
xchg
pushf
int
add
rep
or
scas
fistpll
jl
das
cmpsl
xchg
repz
xorb
mov
mov
lahf
int3
cmpsl
xchg
je
aas
dec
mov
popf
sbb
jbe
ret
in
inc
not
xchg
inc
movsl
sbb
and
inc
jge
xchg
in
addb
mov
hlt
lahf
daa
sahf
or
add
inc
int3
cld
imul
jno
pop
sbb
sbb
mov
cld
jno
xchg
movsl
push
adc
fcomi
add
pop
dec
mov
inc
outsb
cmp
movsl
cmp
psubusb
daa
pop
push
sub
mov
ja
xchg
xor
xchg
loope
cmp
mov
sub
mov
ret
outsl
cli
mov
dec
addr16
xchg
pushf
xor
cld
mov
mov
pop
in
shlb
into
cltd
test
push
mov
mov
lods
push
and
lret
aas
mov
popa
fistps
push
or
or
fs
lret
push
mov
dec
lcall
push
clc
adc
lds
dec
loope
arpl
cmp
fcomp
mov
or
loope
loope
das
push
out
mov
popf
push
mov
push
push
or
stos
lret
push
mov
mov
pop
imull
mov
mov
mov
sbb
das
daa
xor
out
mov
add
cwtl
push
ss
mov
popf
je
aad
xchg
mov
repnz
mov
push
pop
cmp
pop
add
mov
cmp
and
hlt
or
push
xchg
outsl
pop
sti
add
into
repnz
jbe
jns
fcmovbe
hlt
pop
pop
test
and
pop
test
scas
sub
push
xchg
adc
imul
stc
mov
in
mov
pop
xchg
dec
mov
add
pop
xchg
xor
pusha
sbb
and
xor
stos
mov
pop
lock
mov
or
aas
nop
sbb
adc
cmp
in
xchg
fimuls
aad
fmull
imul
stos
or
cwtl
or
outsb
into
outsl
fwait
add
xchg
or
xchg
dec
sub
addr16
lcall
xor
insb
sti
mov
sbb
lea
and
adc
aad
jmp
repnz
jae
leave
cmp
adc
mov
mov
es
mov
sub
jne
xchg
push
dec
push
pop
inc
test
fsubrs
add
inc
enter
test
pop
mov
xor
test
push
stos
rcl
push
sbb
cmp
movsl
xor
stos
mov
pop
jl
cmp
sbb
adc
aam
push
mov
mov
dec
cmp
xor
mov
call
pushf
mov
push
je
ds
push
lahf
push
sti
cmp
jno
aas
xor
fdivrs
and
cmp
fiaddl
xchg
enter
lock
fidivl
decb
sub
dec
jg
lahf
loopne
add
adc
add
js
or
test
lock
mov
adc
cli
fistpll
mov
js
jno
movsb
push
aam
mov
scas
sbb
mov
mov
dec
cltd
fwait
lods
mov
xor
arpl
cmc
icebp
dec
out
mov
xor
adc
adc
sbb
sub
xchg
mov
cmpsl
sub
movsb
pop
xor
mov
mov
ficompl
ret
xchg
dec
es
mov
mov
std
push
in
mov
mov
mov
or
sti
andb
jmp
inc
call
adc
scas
pop
mov
cmc
sahf
mov
dec
int3
sahf
mov
cmpl
mov
cmp
pop
dec
xchg
jp
push
or
mov
cmp
out
mov
sub
add
adc
push
cmp
jl
pop
lret
dec
loope
in
pushf
mov
xchg
adc
sahf
pop
lea
out
jle
cmpsb
or
or
jecxz
dec
push
mov
sbb
aas
cmpsb
stos
add
mov
aaa
xlat
or
cs
je
jns
xor
test
jl
jb
pop
imul
testl
pop
roll
int
and
int
psubw
push
stc
xor
pop
lea
mov
cmp
mov
cltd
dec
mov
mov
inc
xchg
push
dec
or
stos
icebp
enter
dec
jl
out
outsb
cwtl
adc
adc
dec
add
adc
ljmp
out
sbb
pop
jbe
push
inc
mov
fmul
fmuls
in
lcall
mov
add
or
push
test
mov
sbb
fisubrl
aam
iret
jmp
or
or
sub
xchg
xchg
in
jb
jae
dec
outsl
sbb
jne
push
add
stc
rorl
lret
mov
jmp
sbb
movsb
cltd
cmp
in
jno
loope
and
call
or
inc
mov
shlb
shrb
adc
aaa
add
lods
mov
push
pop
pop
jno
pop
push
clc
push
popa
loopne
inc
inc
pop
sahf
xchg
push
xor
xor
cmpsl
pop
data16
outsl
aaa
sbb
jg
in
add
cwtl
sub
and
divb
mov
outsl
call
adc
and
movsl
aad
inc
jle
leave
mov
inc
dec
ret
or
adc
cmp
lret
decb
mov
movsb
xor
fmul
imul
neg
xchg
stos
mov
sbb
xchg
or
insb
mov
dec
movsb
roll
jge
ret
or
stc
xchg
sbb
adc
jg
xchg
add
xchg
ret
xor
jne
setle
insl
adc
outsb
xchg
xchg
loop
lahf
adc
pop
add
popf
rep
lods
lods
sbb
mov
xchg
fwait
jns
xchg
inc
je
pop
mov
popa
cmp
sbb
and
fucomp
inc
cmp
test
clc
daa
lods
add
push
test
daa
pop
add
insb
bound
test
adc
dec
shll
mov
jns
stc
cs
and
repnz
mov
sarl
loop
push
and
inc
mov
jecxz
pop
jno
mov
mov
mov
movl
xchg
xor
movd
stos
sub
push
inc
mov
icebp
lds
xor
fs
adc
mov
pop
add
aam
lret
pop
addr16
insl
jb
add
roll
mov
into
push
shlb
stc
int3
pop
fistps
or
push
cmp
cmc
and
mov
test
mov
inc
dec
push
test
or
fstps
jp
shlb
pop
sbb
test
loopne
cmp
push
leave
push
sub
adc
in
xor
daa
cmp
test
xchg
mulb
popf
in
xchg
inc
sahf
cld
fwait
mov
fsubr
scas
sub
addr16
out
push
test
xor
mov
push
pop
add
inc
cwtl
loop
cwtl
jno
das
add
sarl
or
adcb
jmp
mov
sbb
popf
sbb
lret
das
fbstp
cmpb
cmpb
inc
hlt
mov
push
ja
add
jge
xchg
rcrb
inc
lcall
inc
and
mov
mov
dec
lret
clc
add
mov
adc
test
jge
add
and
mov
dec
mov
iret
test
xchg
jno
mov
stc
loope
cmp
movsb
mov
pop
gs
aam
lock
jg
popf
push
loop
dec
inc
fstps
mov
cmp
gs
inc
mov
sbb
aas
mov
inc
les
pusha
jl
or
aad
mov
xor
rolb
xor
jmp
daa
jp
das
or
cmp
xor
stc
lods
rcrl
nop
cs
mov
mov
sbb
inc
and
fidivrl
lret
cmpsl
sbb
pop
aas
pusha
lret
dec
pop
mov
xor
mov
lret
mov
jae
inc
rcl
mov
outsl
or
inc
and
xchg
push
nop
push
jb
scas
jnp
inc
push
cmp
sahf
inc
movsl
pop
xchg
lds
push
mov
aam
add
jg
movsb
xor
mov
mov
pop
jp
or
rcrb
add
ljmp
loopne
xchg
mov
stos
xchg
jg
scas
clc
lret
jnp
dec
lahf
bound
sbb
ret
call
sahf
mov
lods
fdivrl
mov
push
cmp
in
or
test
push
lods
push
or
dec
rclb
jne
scas
xchg
dec
mov
push
insb
or
inc
pop
cwtl
or
xchg
push
int3
mov
popf
sahf
scas
clc
and
pop
fldenv
adc
mov
leave
xchg
das
ja
lcall
xor
dec
push
test
xchg
sbbl
xchg
lds
inc
mov
movsb
outsb
outsl
lahf
dec
cwtl
sub
lret
es
les
mov
xchg
fdivrs
cmovo
mov
scas
test
negb
insb
adc
xchg
adc
push
incl
fdivl
push
xchg
cs
insl
mov
sub
pop
test
jo
pop
imul
mov
sbb
sahf
add
nop
fcmovbe
fiaddl
mov
nop
in
and
sub
in
add
push
mov
mov
sbb
and
cli
add
or
stc
arpl
out
arpl
mov
out
sub
test
mov
repnz
xchg
pop
gs
pop
and
push
mov
lock
aam
popa
inc
cli
pop
in
fnop
pusha
sbb
dec
lret
lock
cmp
sub
out
stos
mov
daa
push
addr16
lds
sub
loop
addr16
andl
pop
pop
stc
je
test
aam
imul
inc
add
sbb
ficompl
sub
in
leave
xor
pusha
out
enter
xor
add
repnz
in
fildll
mov
aaa
pop
popa
movsl
mov
mov
sub
mov
imull
and
dec
adcl
jg
mov
mov
test
sbb
fbstp
mov
dec
adcb
cwtl
push
aas
pop
je
xchg
mov
fnstcw
xchg
dec
pop
sub
add
jp
sub
rclb
cmp
mov
jne
insb
insb
push
adc
jo
loop
nop
mov
negb
cltd
shll
push
jg
sub
repnz
or
sbb
inc
divb
inc
push
cmp
ret
mov
xchg
ss
cmpsl
and
mov
sarl
fldcw
cld
cmp
in
jl
cli
pop
add
mov
test
iret
pop
addr16
sub
mov
cmpb
ret
push
jmp
or
push
lock
cmc
or
aad
cltd
adc
es
iret
jge
cmc
mov
and
icebp
imul
sti
sbb
push
mulb
pop
push
fmull
es
test
mov
mov
jbe
xor
scas
mov
out
test
push
stos
and
pusha
sub
fisubs
mov
repnz
cmpsb
dec
xorb
sbb
in
pop
imull
rorb
add
test
pop
push
jp
fnstsw
sbb
sbb
add
mov
popf
ja
mov
xor
or
test
xchg
jl
pop
and
test
sbb
out
jg
xchg
stc
sahf
xor
xor
mov
pmaddwd
clc
or
dec
scas
ret
add
add
loopne
mov
shrb
cld
xor
in
adc
lret
arpl
ljmp
and
sarl
xchg
mov
imul
cmc
loopne
clc
cmc
into
in
bound
dec
cmp
pop
jo
loopne
push
jnp
loop
in
inc
mov
jl
incl
ficoms
fstl
insl
and
test
and
popa
push
rcrl
mov
cmp
hlt
xchg
iret
loope
lods
push
into
dec
cmc
lcall
xchg
push
test
lea
jns
xchg
push
pop
add
idiv
xlat
addr16
mov
mov
les
pop
xchg
xor
push
rcrb
data16
lock
fwait
enter
jmp
pop
mov
push
push
rorb
outsb
mov
xchg
jbe
mov
jp
in
mov
nop
mov
aaa
sub
sbb
fiadds
xor
popa
mov
mov
push
mov
lret
push
fldt
dec
scas
sbb
push
fstl
int
lea
mov
add
pusha
pop
push
test
test
es
mov
in
adc
jb
fisttps
xor
addr16
push
pop
jns
cmc
mov
rol
lods
arpl
sbb
pop
mov
pop
pusha
pushf
sub
mov
ficoms
fnsave
push
data16
lea
dec
adc
jae
das
ret
in
pusha
xchg
sub
or
enter
pop
sarl
das
xchg
aad
ret
je
or
daa
inc
pop
icebp
pop
add
or
outsl
jns
mov
pop
mov
dec
push
mov
mov
neg
and
cld
in
mov
ljmp
dec
mov
push
lret
lds
ja
mov
push
cld
outsl
cmp
movsb
andb
and
xor
outsl
push
lretw
pop
inc
out
dec
out
lret
ds
mov
add
movsb
lods
outsb
sub
mov
dec
push
ljmp
mov
mov
lds
insb
addr16
ret
push
ja
incl
push
push
push
mov
outsb
lcall
pushl
pand
stos
and
lods
fcmove
arpl
push
add
in
mov
gs
cmc
mov
imul
in
xchg
jnp
adcb
mov
loope
cmp
dec
jg
outsl
lock
bound
jl
sbb
mov
ljmp
pop
rorl
sbbb
mov
push
lods
sub
loopne
xchg
jecxz
mov
aam
xchg
icebp
test
cmp
rcrb
stos
pop
lds
daa
adc
mov
mov
sbb
lock
sti
roll
add
jmp
adc
sbb
inc
inc
std
mov
gs
inc
ljmp
arpl
shll
aas
gs
ret
popa
pop
mov
test
mov
sbb
jp
ss
outsl
loopne
mov
repnz
lcall
inc
ret
outsb
sub
aam
jnp
xor
push
sub
adc
shll
mov
test
loopne
movsl
ja
icebp
jmp
scas
mov
movb
xchg
xor
push
or
pop
fwait
add
in
rorb
add
mov
lds
xchg
pop
rcr
dec
sbb
inc
sub
or
out
and
inc
dec
adc
gs
jns
push
sub
fsubs
cmp
mov
roll
stos
pop
subb
jp
pop
jmp
push
mov
sub
lahf
sub
ficoml
popf
jle
or
mov
push
lret
jae
dec
dec
dec
rclb
xor
iret
mov
pushf
fmul
jge
imul
cmpsl
xlat
lret
movsb
xor
cmc
in
adc
hlt
je
adc
mov
fstpl
out
dec
or
in
inc
out
fimull
std
mov
sub
cmp
dec
cld
je
div
cs
test
mov
mov
mov
cmpsb
inc
cmc
add
dec
sbb
jge
aaa
pushf
sub
imul
mov
in
iret
adc
or
xchg
call
rol
push
test
mov
cmp
mov
cmpsl
dec
sti
test
jg
cli
cld
or
dec
mov
xchg
rclb
leave
test
pop
repz
xor
les
inc
pop
loopne
sbb
ss
jbe
out
push
mov
scas
cmp
push
jmp
add
pusha
popa
xchg
jo
popl
lea
jo
outsl
mov
test
inc
sti
daa
push
and
inc
test
jmp
dec
pushf
mov
movsb
adc
jecxz
or
in
push
mov
xchg
adc
fdivr
shr
xorb
jge
jge
iret
xor
imul
sahf
jp
nop
dec
push
dec
dec
aad
or
addr16
mov
or
mov
mov
add
in
jb
cmpsb
and
in
mov
nop
or
sub
call
pop
pop
scas
mov
xor
stos
andl
dec
mov
mov
inc
icebp
icebp
in
add
subl
sub
xchg
lds
jecxz
inc
adc
mov
sub
loop
inc
cmc
fiadds
pop
sbb
xchg
int3
bswap
mov
je
sub
jmp
push
test
dec
lret
jnp
mov
rclb
cs
ret
fs
pop
xchg
pop
stos
jnp
clc
loope
insb
sub
shl
stos
arpl
leave
xor
adc
repnz
push
jbe
jo
sti
cmpl
jb
adc
mov
jb
pusha
mov
add
das
test
inc
mov
daa
pushf
push
adc
mov
test
shrb
repz
mov
aas
stos
push
movsb
aad
shrb
mov
sarb
mov
outsl
sub
mov
decl
jle
mov
push
dec
cmpsl
mov
xchg
pop
sbb
mov
inc
mov
mov
mov
out
push
push
dec
mov
rorl
imul
sti
jg
imul
pop
and
sub
dec
lods
sbb
add
lock
and
repz
std
mov
xchg
and
popa
dec
pop
out
xchg
xchg
jmp
inc
shll
adc
inc
and
add
ss
inc
inc
jb
cmp
clc
into
pop
pop
push
stos
adc
mov
jns
mov
leave
or
lret
std
mov
repnz
cwtl
push
push
and
sarb
xlat
mov
shrl
or
test
cmp
push
sbb
call
push
dec
das
es
and
sti
popf
push
out
adc
jmp
or
insl
aam
cmp
pushf
xor
test
insb
push
xchg
lahf
jmp
xchg
add
inc
sbb
push
adc
inc
or
add
pop
cld
dec
xor
jns
mov
cmp
sbb
pop
rorl
loop
iret
leave
lcall
and
enter
xchg
mov
mov
mov
push
into
xor
loopne
shrb
rolb
in
pop
push
fstpl
call
mov
or
aaa
jge
sub
lds
imul
hlt
dec
fs
sub
stc
sbb
loop
hlt
inc
ss
mov
fs
fs
xlat
push
jns
aas
push
aaa
imul
pop
adc
pop
sub
sbb
mov
mov
mov
mov
insb
mov
xor
aam
pop
push
ss
mov
xor
lahf
mov
iret
xchg
out
clc
loop
stos
and
mov
daa
scas
xor
mov
sbb
xor
cli
adc
adc
je
push
cltd
push
or
xor
xchg
push
xchg
mov
jg
insb
dec
stc
sbb
push
aaa
mov
push
insb
pop
in
insb
push
inc
mov
ds
jno
popf
daa
lods
gs
inc
clc
sbbb
cmp
sbb
ret
jge
mov
jge
out
inc
movsl
push
mov
push
add
sub
pop
sarb
mov
or
stos
sub
call
scas
mov
loop
std
jne
jecxz
test
fcompl
shll
and
ja
xchg
ljmp
and
push
nop
shrl
push
adc
shlb
jbe
rcrl
das
fcomip
dec
cmp
repz
stos
and
fdivp
xlat
xor
adc
and
js
dec
pop
jp
shll
adc
or
popa
inc
arpl
repnz
movsl
mov
sub
leave
jmp
mov
adc
push
es
inc
mov
mov
or
pop
dec
pop
jecxz
and
push
xchg
lahf
fidivs
dec
ljmp
aad
lret
pop
test
int3
push
jns
sbb
inc
dec
sbb
inc
dec
cli
test
mov
pop
jl
mov
fsubrs
adc
test
pop
cmp
lods
xchg
popw
inc
inc
push
push
pop
lods
push
dec
pop
mov
jp
je
aam
pop
fmull
cvttps2pi
jne
pop
lods
repnz
mov
mov
and
clc
mov
movsl
push
pop
out
pusha
fcoms
fisubrs
adc
enter
add
push
mov
pop
sub
gs
push
es
out
jle
enter
mov
sub
mov
xor
icebp
arpl
cld
adc
ss
push
loope
loope
pop
lea
in
inc
push
fidivs
inc
popf
es
shll
aad
jnp
mov
daa
mov
xchg
sub
mov
imulb
add
jmp
and
and
mov
lds
mov
adc
jbe
jmp
imul
add
jge
jmp
movsl
outsl
outsb
push
dec
adcl
mov
mov
ret
add
jb
pop
add
mov
out
cs
mov
dec
xchg
rorb
sub
dec
into
imul
orb
jle
fnstcw
aad
call
sbb
jge
jne
call
sub
ret
sub
pop
sarb
lea
lret
add
adc
inc
mov
cmp
adc
cld
mov
sub
dec
jle
test
je
sub
fs
mov
pop
sub
jp
rorb
pop
sub
mov
sbb
mov
cmp
sbb
arpl
adcb
push
test
decl
push
fwait
rol
jg
mov
jecxz
xor
divb
pop
stos
dec
shlb
fwait
push
int3
aaa
fldt
je
gs
push
mov
movsl
out
adc
mov
push
push
sbb
pop
jne
adc
mov
leave
inc
ljmp
cmpsb
jbe
ret
pop
cmp
cmp
push
or
inc
bound
mov
cmp
push
add
scas
hlt
mov
xor
sahf
cmc
test
lret
xor
fs
stc
inc
daa
enter
xor
dec
sub
in
cli
sbb
jnp
mov
popw
mov
fisttps
hlt
fsts
push
mov
outsb
cmc
or
jge
inc
cli
inc
mov
add
pop
sti
hlt
data16
cmp
cwtl
dec
adc
pushf
addr16
iret
std
imul
fidivl
loopne
sbb
push
mov
repz
jl
daa
adc
stos
js
aad
cmp
rcrl
clc
pop
jmp
and
jbe
mov
inc
xchg
aaa
adc
inc
pop
push
jbe
xor
out
xor
dec
add
outsb
push
stos
push
xor
pop
pop
cltd
mov
sub
mov
or
rorl
xchg
pop
jns
fisubrl
lretw
inc
push
gs
jecxz
pop
sub
mov
push
inc
and
out
fcomps
xor
push
add
in
cmp
jle
aas
test
push
push
cmp
movsb
jge
outsb
std
setne
inc
lds
int3
mov
scas
popf
idivl
pop
cs
mov
repnz
add
aaa
and
std
repnz
lret
add
test
test
xchg
leave
les
pop
frndint
das
shrl
lea
shrl
push
and
pop
into
fistpll
push
push
fbstp
cmp
inc
adc
rorl
sub
xor
adc
pop
jge
dec
cmc
daa
pop
ds
lahf
xchg
mov
xchg
imul
icebp
sub
sub
push
cltd
fsubrs
mov
fldl
sub
adc
repz
stos
lret
in
sbb
pop
push
sti
pop
jmp
mov
sub
sub
dec
add
scas
mul
adc
ja
dec
jg
mov
xlat
fisttpl
test
dec
data16
punpckhwd
mov
loop
lods
mov
int3
and
inc
mov
loop
adc
cmp
cmp
and
aas
cli
sub
inc
std
sub
cmp
sbb
aas
pop
cmpsl
aaa
mov
pusha
aaa
fxch
jmp
inc
xchg
aas
adc
data16
push
pop
in
sbb
adc
push
iret
pop
xchg
pop
push
stos
jnp
xchg
xchg
int
lods
mov
mov
jno
and
pop
pop
mov
xchg
je
rorb
test
loop
fldenv
cmc
push
pop
xchg
or
aas
or
inc
adc
cmp
pop
add
push
and
or
mov
lea
cli
jo
adc
xchg
movsb
and
pop
mov
aad
dec
fucomi
inc
push
cmp
mov
dec
mov
jmp
add
inc
sub
loope
jb
pushf
xchg
adc
stc
mov
bound
push
cli
leave
popa
push
inc
mov
pop
or
add
mov
mov
dec
repnz
fcmovnbe
mov
int
ret
pop
mov
adc
push
pop
pushf
sub
add
scas
cs
ret
push
ret
out
outsb
jns
dec
icebp
test
enter
mov
cmp
das
or
inc
pusha
cmc
jbe
lret
xchg
xchg
mov
les
sbb
sub
push
imul
fistl
das
cmc
dec
dec
scas
ds
orb
lret
movsl
mov
push
or
xor
and
xchg
enter
pop
push
movsb
out
xchg
jle
mov
loop
and
jl
out
rclb
pop
xchg
dec
out
fstpt
fisubrs
lahf
jae
sub
jp
mov
es
loopne
rol
push
adc
loopne
push
xor
mov
xor
adc
lds
push
xchg
jmp
xchg
imul
inc
push
mov
xchg
testl
cltd
js
imul
jmp
mov
xor
xor
sub
negl
daa
dec
aam
cmc
cld
xchg
pop
push
stos
xchg
mov
adc
mov
lds
sbb
repz
inc
and
dec
iret
fildl
pop
xchg
push
jecxz
and
fiadds
xchg
movsb
ret
js
mov
adc
and
ljmp
gs
or
pop
push
popa
add
dec
mov
mov
dec
push
in
lea
out
lds
mov
int3
pop
pop
sub
push
dec
cmc
jge
push
lock
add
ja
fmul
and
cltd
repz
loop
iret
xlat
pop
push
sub
add
xchg
add
sahf
sub
ud1
xor
in
jecxz
insb
push
aad
inc
cltd
or
aam
cwtl
ds
adc
lods
les
xor
jg
cmpb
mov
xor
int3
ljmp
nop
mov
mov
pop
add
in
push
imul
mov
cmp
pop
fidivrl
cmc
loope
mov
les
or
cmc
fmull
movsb
dec
cli
pop
mov
mov
and
pop
jns
cmp
push
gs
imul
inc
cmp
movsl
cmp
sub
loopne
enter
xchg
in
outsl
shlb
add
jns
loope
dec
dec
test
stos
or
sti
imul
mov
or
pop
nop
dec
adc
and
jl
call
and
pop
xor
inc
inc
cmp
scas
adc
stos
mov
in
xchg
iret
fldl
mov
inc
sbb
loopne
shrl
or
add
add
insb
call
popf
mov
push
sbb
xchg
mov
stos
xchg
cmp
inc
adc
mov
xor
lahf
mov
adc
mov
mov
cmp
add
mov
pop
stos
cmp
mov
pushl
lcall
xchg
push
mov
add
push
loope
imul
or
jnp
aaa
dec
and
pop
xchg
jle
push
imul
cmp
jge
inc
xor
cmp
inc
adc
sub
ret
lock
mov
jae
mov
mov
push
icebp
xchg
and
push
mov
sarb
xchg
cwtl
jo
in
stos
mov
mov
cmp
stos
xchg
testb
push
loop
cmpsb
push
mov
fildll
jg
nop
idiv
andl
mov
dec
adc
jb
sti
adcl
mov
decb
adc
mov
jb
inc
cmp
xchg
or
pop
insb
imul
xor
sub
stos
in
xchg
leave
pop
shlb
jne
ret
or
cmpsb
clc
pop
in
pop
dec
imulb
test
xchg
mov
std
push
test
aas
sbb
cmp
xchg
xor
xor
gs
or
cvttps2pi
lret
adc
insb
push
or
std
or
xchg
test
cmp
xchg
push
js
pushf
rolb
imull
paddw
insl
shl
bound
sar
repnz
cmc
sbb
mov
add
jns
pop
in
jle
enter
adc
dec
sub
dec
jb
push
mov
aam
or
sbb
xor
cmpsb
pop
push
ja
ds
xchg
imul
loope
mov
add
les
pop
jl
jno
sbb
out
out
and
loopne
lahf
test
aam
pop
les
cwtl
xchg
test
cmpl
mov
in
inc
je
adc
mov
gs
sbb
cmp
mov
fiaddl
or
mov
js
jnp
inc
fistpl
scas
loopne
cmp
mov
cmc
mov
test
test
out
loopne
sti
fdivrs
cmp
inc
mov
push
jecxz
andl
data16
ja
sahf
mov
pop
es
es
insb
xchg
subb
insl
rcr
inc
adc
xlat
fnstsw
fstl
popa
scas
add
jle
add
jne
push
cli
inc
pop
les
xor
xor
inc
cwtl
push
push
stos
adc
js
or
or
mov
jb
bound
icebp
pop
je
adc
sti
in
mov
push
int
xchg
in
mov
mov
adc
inc
inc
jg
jno
pop
xchg
jmp
lret
int3
xor
push
popa
xchg
inc
mov
xlat
fsubr
ljmp
cmc
loop
out
int3
xor
roll
push
push
mul
push
leave
test
lret
mov
out
rclb
loopne
mov
orb
test
into
andl
sub
add
stc
in
sahf
aaa
adc
test
dec
aad
or
fmuls
adcb
mov
xor
add
lods
pop
pop
enter
pop
lret
adc
cmc
cmpsl
out
xchg
lcall
mov
fcmove
orb
push
movmskps
mov
cltd
push
stos
push
sub
cmp
inc
mov
loopne
push
pop
adc
imul
push
ss
in
div
sub
sbb
aaa
outsl
lods
in
icebp
and
mov
shrl
incl
js
dec
gs
or
pop
sti
mov
dec
add
inc
int3
hlt
loop
sti
repz
and
les
aam
arpl
jmp
test
loop
xchg
test
xchg
outsb
sar
loopne
out
fwait
cmc
jp
sbb
cli
jo
into
andb
loope
push
rcrb
fsubrl
ljmp
outsb
or
stos
cmp
xor
pop
ret
jle
addr16
cmc
or
lahf
mov
mov
insl
gs
imul
js
mov
ss
lret
add
popf
out
add
fidivl
dec
testb
scas
pusha
and
fptan
cmp
mov
out
add
lea
and
in
jnp
xor
and
andb
lods
mov
inc
vmread
mov
mov
xor
out
mov
push
pop
nop
xor
mov
bound
or
lods
push
in
pop
xor
cmp
and
sbb
pop
mov
jno
lods
lret
test
jg
out
push
mov
jmp
and
pop
xor
pusha
mov
lods
gs
sarl
mov
daa
mov
data16
test
and
int3
mov
enter
adc
add
add
cltd
loop
dec
cli
mov
inc
jp
test
xchg
adc
sbb
push
lret
sub
mov
shll
pop
sub
arpl
fimuls
fcompl
sub
jo
sbb
sbb
dec
cmpsb
pop
arpl
inc
add
pop
sbb
push
stos
nop
ret
stos
test
mov
test
les
cmp
or
mov
jb
cld
mov
mov
loop
mov
and
push
xchg
repnz
hlt
cmc
mov
ljmp
inc
pop
mov
mov
rorb
and
adc
xchg
test
mov
gs
xor
jns
fdivs
inc
mov
and
pusha
loopne
adc
dec
test
add
push
repnz
loope
jg
push
in
loope
test
je
test
add
jae
add
adc
push
loope
fcmovu
sbb
ds
add
adc
lea
idivl
iret
pusha
hlt
push
add
lods
pusha
in
lcall
psubw
push
lea
in
ret
icebp
ds
imul
repz
daa
ds
lds
mov
dec
jmp
add
pop
rorb
sub
inc
xlat
adc
mov
mov
or
popa
ds
jle
sbb
jo
mov
push
popa
mov
lcall
int
loope
mov
jecxz
xor
iret
popf
cmpsl
and
dec
push
inc
fidivrl
add
mov
sbb
sub
insl
dec
mov
mov
fildll
gs
jnp
cmp
jno
rorl
mov
cmpb
jb
mov
xor
or
mov
mov
mov
adc
jge
cmp
imul
pop
and
cwtl
pop
movsb
int
ss
xchg
push
lahf
cs
lcall
fucom
sbb
inc
jl
cmp
jae
xchg
loope
gs
xchg
popf
jae
hlt
sub
call
jl
movsb
dec
cmpsb
cli
shll
std
mov
jb
cmpb
sub
leave
or
and
rcl
push
or
aaa
or
dec
push
icebp
je
out
cmpsb
repnz
pop
loop
test
sbb
aam
sub
bound
cld
xchg
push
add
xor
push
xor
pushf
andb
mov
jae
int
xchg
add
subl
and
lods
iret
stos
push
jle
out
rclb
sbb
dec
notl
push
sbb
pop
sbb
popa
pop
popf
pop
pushf
imul
outsb
jl
jbe
mov
adc
jmp
test
and
inc
xor
xor
mov
mov
into
mov
push
xor
movsb
sub
test
dec
enter
fbstp
mov
enter
clc
or
mov
fnsave
sbb
faddp
dec
andb
bound
cmc
xchg
mov
add
dec
and
dec
fisttps
jecxz
mov
xor
push
or
mov
xchg
add
or
sti
xchg
dec
cwtl
xchg
xchg
push
repz
mov
movsl
stc
adc
add
add
cmp
sub
movsl
jmp
push
adc
in
sub
in
inc
or
push
iret
xor
sbb
aad
repnz
push
add
fadds
fildl
int3
fimull
dec
and
out
nop
mov
test
push
shll
push
mov
push
imul
xchg
sub
xsavec
and
out
jns
xchg
ret
sbb
push
sbb
lock
std
inc
lahf
out
insl
xchg
cmpsb
jns,pt
popf
outsl
mov
xor
fcompl
push
cmpsl
daa
push
loop
push
or
push
jnp
inc
loope
mov
jno
das
jecxz
scas
fisttpl
fs
or
ss
push
adc
aaa
in
shll
pop
xor
sbb
arpl
gs
mov
xchg
push
jnp
fwait
lret
mov
xchg
xor
adcb
add
mov
rcl
nop
fimuls
jne
les
xchg
ljmp
cmp
push
adc
js
and
or
lcall
jbe
mov
adc
das
jl
test
add
mov
jmp
shr
jae
xor
daa
dec
addr16
and
iret
inc
subl
add
daa
xlat
rol
xor
push
cs
cli
sbb
mov
mov
pop
jne
fsubl
push
pop
or
mov
xchg
xorl
lret
and
jle
mov
inc
nop
call
sbb
insb
or
imul
out
fs
sbb
dec
imul
int3
cmp
pop
fwait
addr16
mov
pop
push
fsubr
mov
mov
cmp
inc
pop
nop
dec
popf
pop
cli
aaa
outsb
jne
push
xchg
les
in
movsl
and
lds
mov
data16
idivl
mov
pop
call
xchg
arpl
pushf
sub
mov
in
pusha
test
mov
testl
mov
xor
icebp
cmp
cmp
xchg
dec
pop
in
fsubs
gs
aam
fsts
add
call
xor
scas
shl
dec
orb
outsb
loopne
or
sbb
push
xor
fwait
mov
push
dec
mov
sbb
bound
idivb
test
dec
lahf
push
inc
sti
out
adc
dec
fdivrs
sbb
mov
sub
mov
mov
jo
add
test
into
in
add
mov
mov
aaa
and
push
inc
or
xchg
outsl
cmp
mov
clc
stos
pop
cmpsb
std
and
and
pop
pop
dec
push
and
cmpsl
icebp
mov
iret
push
jmp
stos
pop
adc
pop
push
jge
repz
leave
sbb
daa
insl
dec
inc
mov
or
loopne
xchg
add
dec
xlat
mov
outsb
dec
mov
push
ljmp
testl
adc
ljmp
cmp
negb
sub
pop
mov
cmp
cmc
add
xchg
xor
data16
cmp
xor
dec
sbb
mov
insb
and
lods
xchg
cmp
or
pop
jb
add
lds
call
or
cltd
insb
movl
aam
shlb
mov
xchg
xlat
in
int3
mov
clc
add
fldenv
xchg
movb
test
mov
xchg
addr16
add
shrb
in
xor
js
jnp
in
movsl
inc
mov
cmp
cmp
sahf
cmp
and
cmpsb
mov
push
scas
insl
xlat
pop
push
sub
or
and
mov
leave
pop
lock
dec
sbb
in
pusha
negb
cmp
sbb
call
out
cmpb
int
and
or
mov
aad
or
sbbb
push
mov
pop
pushf
pop
scas
repz
insl
push
shll
cmc
in
jne
fnstsw
js
imul
sahf
leave
cmpsl
cmc
dec
or
pushf
sub
pop
dec
mov
push
push
outsb
gs
fstpt
repz
cmp
in
jne
mov
stos
lcall
hlt
xor
jmp
pushf
shlb
lret
jnp
pusha
mov
inc
lods
repnz
or
addr16
test
dec
outsl
jbe
push
xor
daa
push
and
dec
fs
in
adc
lods
sub
inc
imul
lcall
lahf
and
push
stos
je
dec
int
pop
cmp
mov
insb
mulb
ljmp
jne
jg
mov
lds
inc
xor
cmp
imul
into
jmp
les
mov
leave
fmull
mov
jp
stos
sub
imul
sub
repnz
add
push
call
sbb
push
jecxz
pop
adc
dec
popa
mov
repz
jb
imul
outsb
sbb
je
pop
je
lret
pop
pop
cmp
or
dec
mov
pop
call
cwtl
rclb
fistpl
or
je
repz
push
sub
push
jle
xadd
mov
popl
dec
pop
sbb
mov
lock
lds
cwtl
popf
xor
jecxz
mov
jae
adc
and
rcll
pusha
add
popf
movsb
jp
xorl
mov
arpl
test
test
and
mov
jae
jbe
and
test
dec
jl
jbe
push
sbb
jmp
nop
pop
dec
lods
fmuls
mov
dec
outsl
xlat
dec
sub
sarl
insl
xchg
inc
mov
testb
bound
hlt
and
fldl
cmp
pop
push
cmp
bound
jecxz
or
xor
jne
out
ss
pop
xlat
cmpsb
movsb
outsb
cwtl
dec
test
or
mov
sbb
xor
sub
adc
jg
popa
fmulp
fsts
pusha
fs
push
adc
jae
sahf
sub
cmpsl
sub
adc
lea
addr16
movsl
jp
xor
stc
mov
outsl
into
mov
inc
imul
js
or
test
mov
push
cmpl
push
adc
and
cmp
clc
cmp
movsb
cmp
or
adc
mov
mov
mov
or
scas
and
push
mov
int
in
hlt
repz
arpl
test
xchg
cmp
pop
push
cmpsl
sbb
rep
ss
push
decb
dec
inc
das
mov
sub
or
dec
mov
or
rolb
push
nop
dec
pop
dec
lret
mov
shlb
sarl
loop
adc
fwait
cs
test
hlt
dec
iret
sub
fisttpll
pusha
arpl
or
ljmp
inc
int3
iret
aas
jno
or
in
cmpsl
std
dec
movsl
loope
sub
leave
jmp
cmpsb
dec
stos
xor
stos
cmp
add
push
leave
xor
push
sub
outsl
dec
out
outsl
cld
out
jae
push
pop
jmp
dec
test
pop
inc
fisttpll
aas
loop
sbb
cmp
xchg
ds
cmc
lcall
ds
ret
int3
xchg
add
jmp
out
rcll
add
es
adc
sahf
jns
cmp
daa
or
cmp
loopne
push
mov
pop
mov
rorb
stos
sbb
movsb
bound
jae
mov
fisttps
mov
leave
push
sub
out
dec
or
mov
jmp
or
jmp
jo
imul
mov
cld
xor
sti
or
lods
pushf
arpl
mov
js
dec
nopl
xor
xor
pop
add
dec
add
sarl
fisttpll
pop
cmp
inc
jmp
ret
sbb
sbb
inc
mov
xchg
inc
repz
adc
jno
sub
ret
mov
sub
jnp
jbe
or
dec
and
mov
loopne
adc
add
imull
push
mov
and
add
out
push
test
rcrl
add
fdivs
cs
push
pop
push
pop
cwtl
faddl
bound
push
sbb
jecxz
sub
mov
in
or
loop
orb
lcall
inc
ret
push
xchg
bound
jp
out
xchg
data16
inc
ss
ret
inc
mov
add
mov
push
add
and
xchg
pop
mov
lret
dec
jae
js
test
jmp
add
fld
test
lods
jp
in
inc
jo
scas
sub
inc
pop
jmp
imul
fsubrs
push
repz
lcall
in
adc
aaa
into
inc
or
idiv
xor
jns
enter
adc
int
sub
stc
into
ss
shll
pop
shr
mov
aas
aas
call
movsl
ficoml
sub
jg
ja
in
xor
push
pop
cld
lret
cmp
ret
mov
rcr
inc
sti
addl
mov
jle
jo
loopne
cltd
add
sarb
pop
inc
push
push
add
cs
sbb
mov
mov
sub
push
loope
or
add
push
sbb
lock
jb
ret
icebp
push
loopne
cs
add
out
iret
jns
mov
data16
push
hlt
jne
into
and
adc
and
mov
dec
cmp
mov
std
ret
and
lret
add
dec
unpcklps
dec
test
sbb
pop
mov
adc
inc
daa
adc
shl
into
push
push
adcl
jns
sbb
xlat
add
or
fs
lea
jge
adc
inc
shl
in
adc
addl
mov
idivl
out
push
int
shl
inc
scas
and
add
ror
stos
mov
scas
sbb
push
inc
fmull
jg
add
jl
imul
push
icebp
sbb
pop
mov
push
leave
movsl
inc
pop
add
sbb
aam
or
shlb
sets
xor
jne
and
and
jno
inc
dec
pop
fs
add
mov
ret
out
ds
inc
inc
inc
les
lds
rcrb
pop
sbbl
sbb
mov
jnp
sbb
insl
outsw
jmp
lods
das
cmp
mov
mov
adc
xchg
cmp
or
cwtl
shlb
bound
adc
xlat
ja
and
push
nop
xor
and
cltd
and
leave
shll
mov
ret
lea
lcall
pop
out
sbb
adc
daa
pop
push
pop
xchg
lea
adc
popa
lods
sbb
sub
pop
xor
ss
je
cltd
sbb
lret
cltd
test
nop
push
mov
xor
add
lods
jg
ja
pushf
mov
jge
or
jbe
hlt
cwtl
dec
fxch
xor
pop
pop
fisttpll
lret
inc
imul
das
movsl
sti
sbb
stos
loop
cmp
ss
mov
test
sbb
pop
aas
push
shlb
scas
int3
jno
enter
or
lods
pop
rcr
cmpsb
cmp
iret
lods
outsb
or
loope
dec
or
push
push
cmpsl
sarl
cmp
adc
dec
and
ja
arpl
cmc
bound
call
pop
out
out
ss
faddp
pop
aam
or
int3
mov
fs
and
addr16
cmp
dec
sti
imul
in
imul
std
aad
je
jecxz
xor
mov
mov
jno
sub
inc
lods
and
push
not
cmp
ret
mov
ljmp
shll
cltd
in
lfence
push
dec
dec
push
dec
arpl
outsb
dec
and
movsl
movsl
clc
incl
xor
ss
lods
pop
push
dec
pop
or
jns
adc
js
rcrl
or
cwtl
push
mulb
movsl
sbb
xor
add
out
flds
aaa
jae
pop
adc
insl
loop
inc
dec
out
cmc
lea
sub
cmpsb
and
xchg
mov
bound
jbe
rclb
cmp
mov
pop
dec
cmp
clc
insl
fs
mov
inc
insl
adc
jge
mov
jecxz
lods
dec
dec
call
enter
sub
inc
mov
in
js
pop
imul
mov
fisubl
sub
and
adc
mov
add
cmpsb
ror
cmc
dec
mov
mov
fistpl
or
popf
add
push
mov
add
jge
pop
inc
scas
ljmp
sub
inc
loope
pop
mov
sbbb
or
int3
pop
jb
pop
lret
in
clc
add
js
xchg
push
movsb
xor
and
icebp
xchg
mov
ret
xor
push
cmpsl
or
jnp
mov
lea
mov
sbb
mov
mulb
idivl
fbstp
sub
sahf
mov
sahf
mov
movsb
xchg
push
cs
sbb
fnstenv
and
mov
or
in
andb
test
sti
dec
push
xor
mov
cmp
cmp
push
subl
ret
cmc
popf
int3
gs
bound
shlb
fs
and
insl
add
push
stc
test
mov
movsb
cmp
inc
cmp
mov
cmp
sub
xlat
jl
ret
cmc
cmp
pop
xchg
ljmp
shll
and
jg
stos
push
and
lds
cmpl
pop
mov
popa
lods
lock
dec
and
jne
mov
and
sbb
sahf
xor
xor
push
add
je
add
daa
jo
sbb
add
xor
xor
aam
loop
push
movsl
ljmp
dec
xor
pop
adc
stc
jecxz
xor
cwtl
arpl
rcl
xor
mov
or
movaps
mov
lods
data16
pop
sahf
dec
add
aaa
push
sub
ret
idiv
adc
test
mov
inc
or
push
cli
jnp
mov
dec
and
adc
cmp
pop
push
aaa
or
jecxz
jae
jl
mov
inc
sbb
inc
mov
notb
mov
cltd
lcall
bound
inc
fs
add
call
mov
es
cmp
push
or
cltd
xor
dec
xchg
cmpxchg
out
movsb
push
sti
jnp
mov
xchg
cmpps
adc
lcall
imul
adc
sub
pop
pop
imul
xchg
xchg
popl
pop
mov
mov
mov
pop
popa
in
inc
mov
cli
das
mov
orb
xchg
inc
or
mov
lret
push
and
les
cmp
sub
stos
push
mov
jge
xchg
inc
outsb
in
sub
in
lret
sbbb
cmp
cmp
sub
push
and
lods
inc
fisubrs
mov
fwait
mov
scas
arpl
rclb
fldlg2
es
ljmp
fdivs
mov
dec
push
and
xchg
push
adc
setbe
clc
lds
gs
pop
mov
or
mov
aad
xor
repnz
mov
fdivl
psubd
ja
ja
insl
adc
pusha
roll
add
std
mov
xchg
xlat
or
mov
xchg
clc
lods
ret
jo
push
xchg
mov
out
subl
push
dec
idivb
insl
adc
popa
bound
mov
mov
or
xor
dec
push
sub
xlat
push
xor
insb
sbb
test
rclb
mov
push
fildll
adc
inc
rorl
fimuls
sbb
dec
lret
cltd
aaa
inc
dec
leave
addr16
add
data16
mov
pushf
jbe
loop
mov
mov
mov
cmp
inc
mov
mov
and
aas
pop
or
inc
addl
sub
adc
pop
or
rclb
cmp
outsl
mov
popf
dec
stos
mov
inc
pushf
cmp
mov
icebp
jae
jecxz
pop
fnsave
adc
cli
out
push
fldl
loop
idivb
adc
inc
fisubrl
stos
clc
mov
mov
dec
ret
rcr
cmp
pop
mov
dec
dec
and
in
lds
mov
sbb
dec
mov
and
mov
std
popa
adc
in
enter
xchg
mov
mov
and
add
cmpsb
cwtl
orl
sub
and
inc
mov
or
setne
mov
fst
push
cltd
shll
icebp
pop
in
fs
jecxz
cmp
adc
and
pop
adc
stos
sub
mov
mov
ret
imul
sbb
add
repnz
jg
pop
cmp
aad
jb
outsl
xchg
mov
subb
insb
insb
add
add
popaw
sbb
jb
out
push
aaa
dec
mov
sbb
push
aad
push
xchg
push
cmp
pop
lods
lds
jb
pushf
xchg
xchg
imulb
ds
fidivrl
add
jb
jecxz
adc
fists
add
lock
xchg
sub
cwtl
pop
xor
movsb
outsb
dec
adc
and
leave
lock
cltd
jo
sbb
sub
push
xchg
pop
ss
mov
pop
xor
in
push
arpl
pop
mov
dec
sub
cld
aam
in
or
ret
lcall
outsb
ret
repz
inc
cmpsl
loop
push
int
daa
dec
dec
jle
call
test
xchg
in
xor
test
cwtl
cmp
sub
or
pop
xor
lds
fiaddl
cmp
insb
mov
mov
xor
pushf
leave
pop
orb
rorb
jl
cmp
int3
jnp
hlt
das
mov
aas
test
sbb
adc
or
mov
jl
mov
add
sub
lock
in
ss
fldenv
orb
stos
out
jbe
aaa
rolb
mov
lahf
fcoms
mov
mov
out
inc
test
inc
sbb
stc
push
jb
xchg
outsl
in
xchg
jl
push
cmc
scas
sbb
jb
pop
leave
or
sub
jmp
cld
mov
cld
inc
pop
icebp
loope
fbld
sub
adc
pop
jae
lds
sub
jp
arpl
loop
dec
call
jbe
push
ret
das
xor
mov
popf
add
movsb
add
lock
add
inc
cmpsl
mov
pop
test
cld
cmc
cmp
ret
and
add
mov
jmp
cld
xor
mov
inc
lock
cmc
mov
bound
pop
cmp
inc
aam
fisttpll
cmp
in
aad
cld
inc
fistpl
clc
adc
xchg
clc
andl
incl
jmp
shlb
sbb
dec
imul
mov
jl
cs
mov
cmp
ss
aad
mov
int3
lods
ja
or
sahf
jmp
mov
stc
faddl
inc
js
adc
cli
orl
pushf
aam
mov
frstor
push
nop
fadds
arpl
sahf
pop
popa
bswap
push
inc
in
push
mov
sub
hlt
pop
cmp
rol
mov
test
lea
test
loop
arpl
fs
or
insb
push
out
inc
mov
rorb
test
xchg
sub
cmp
movsb
ror
arpl
pop
add
jmp
jge
inc
ss
sub
dec
sbb
mov
loop
adc
xchg
sbb
cltd
mov
jp
outsb
pop
loope
and
sbb
cli
stos
ret
mov
cmc
add
mov
or
aam
or
stos
out
push
cltd
rorl
sbbb
js
push
arpl
das
mov
inc
fisubrs
pop
push
testl
outsb
movsl
ficoml
rorl
addr16
lcall
out
xor
pop
jecxz
pusha
xor
repz
in
mov
lret
cmp
sub
mov
std
rcrl
cmpb
repnz
adc
xchg
test
xchg
inc
icebp
cli
sarl
shrl
addr16
cmc
fwait
mov
fs
mov
rclb
sub
and
mov
add
ja
sbb
fistpl
lds
movb
popf
inc
pushf
sub
and
mov
fwait
subl
scas
lea
add
mov
icebp
call
cli
imul
push
pop
or
pushf
cwtl
insb
or
xlat
xchg
jmp
daa
jnp
adc
push
mov
std
fbld
pmaxsw
xchg
jge
ds
push
call
stos
in
and
adc
inc
fistpll
jae
pop
aaa
inc
mov
pusha
das
cmp
pop
push
incl
scas
stos
mov
lods
sti
jg
icebp
fiaddl
xor
aad
xor
data16
mov
insl
arpl
iret
or
mov
cs
sbb
clc
jno
lret
cmp
sub
repz
add
fimuls
xchg
js
lock
mov
or
adc
sbb
inc
jge
push
or
push
mov
xchg
mov
cld
pusha
flds
mov
xor
inc
stos
jge
in
and
mov
cwtl
cmp
cmp
sub
mov
subb
sarl
and
xor
jne
add
roll
testl
pop
xchg
mov
sahf
push
std
or
pop
cmp
out
xchg
add
das
ret
and
mov
movsl
and
dec
push
sub
cmc
jnp
push
push
iret
loope
mov
rolb
or
lock
sub
mov
sbb
add
int
jg
pop
mov
push
fldl
lret
aas
xorl
cmp
int
ss
add
pop
aaa
dec
es
jae
rorb
add
mov
in
int3
xchg
aam
pop
push
ja
rol
adc
call
dec
mov
daa
mov
or
mov
inc
sub
mov
adc
cli
pop
popf
push
js
lret
mov
pop
xor
cmpsb
add
xor
push
inc
xchg
jl
add
ret
jge
clc
mov
mov
push
mov
cmp
sbbl
sbb
cmc
xchg
or
xchg
cli
hlt
inc
nop
test
les
mov
pop
adc
aaa
cli
inc
divb
adc
inc
mov
mov
pop
xchg
fsubp
test
aad
jp
inc
scas
push
out
mov
xor
push
pop
stos
leave
pop
fisttpl
mov
add
xchg
xchg
xor
lret
iret
pop
fidivs
repnz
mov
test
lret
cmc
rolb
sub
popf
ret
std
ja
bound
push
cwtl
add
push
out
cmpsb
fldcw
sarb
mov
mov
cmp
mov
jge
mov
or
hlt
movsl
pop
movsl
out
mov
pop
mov
lea
jnp
fisubs
and
fidivl
mov
push
ret
xchg
push
popf
dec
sub
fsts
and
mov
inc
mov
mov
adc
mov
or
adc
pop
pop
dec
mov
push
xchg
ss
mov
push
cld
sahf
or
std
mov
imul
rorl
sbb
stos
outsb
flds
sbb
pushf
test
cmp
pushf
pop
pop
pop
insl
shlb
push
xor
andl
ficoms
adc
aas
push
mov
xchg
adc
cmp
cmp
mov
pcmpeqw
ffreep
lret
aam
cli
adc
shl
imul
jp
imul
call
insb
pop
loopne
inc
sbb
loopne
jmp
cmp
data16
inc
fldl2e
sub
xchg
cmc
jbe
add
sbb
xchg
inc
repz
add
lcall
xchg
dec
push
xchg
inc
out
loopne
imul
xchg
in
push
aas
decl
cmp
mov
jmp
gs
and
inc
jbe
xor
call
sub
scas
mov
das
ss
shl
lret
loopne
push
mov
cld
adc
js
mov
inc
insl
faddp
pop
add
jno
mov
imul
into
xchg
repnz
mov
xchg
mov
jne,pt
out
or
sahf
stc
test
fiadds
add
inc
and
mov
mov
in
mov
fsubl
les
outsl
aaa
xchg
lds
mov
sarb
inc
imul
lock
jg
insl
mov
xlat
addl
cs
xchg
mov
popf
adc
test
push
jecxz
fisubrl
mov
daa
mov
inc
jb
pop
aam
addr16
jae
jg
push
xchg
inc
repnz
aaa
pusha
nop
das
in
jno
xor
mov
lds
data16
aam
xor
ror
pop
pop
push
aas
jae
jecxz
dec
xchg
lahf
daa
ljmp
ljmp
jo
push
mov
lret
xchg
add
pop
daa
xor
popa
adc
pop
add
dec
xor
inc
rclb
mov
cmp
cltd
pop
push
sahf
mov
jne
lcall
cmp
ljmp
int
mov
loop
jg
sbb
and
lea
dec
cwtl
jp
jge
loope
adc
mov
mov
inc
es
sbb
pop
test
lods
pop
pop
dec
jae
xor
repnz
je
stc
jno,pn
stos
pop
pushl
jge
sbb
xor
lret
inc
jle
lods
out
imul
xchg
jmp
mov
addr16
inc
dec
mov
test
jge
sbb
xchg
adc
movsl
fwait
clc
add
clc
mov
sbb
sbb
xorb
sub
pop
fistl
push
mov
mov
cmp
mov
mov
test
clc
dec
add
pusha
enter
adc
and
imul
rcl
addr16
movsl
jae
pop
inc
nop
pop
inc
mov
icebp
jne
pop
fs
sub
ja
mov
and
leave
pop
bound
mov
mov
fisubs
push
not
lods
sub
push
mov
xor
inc
mov
ret
rorb
sbb
pop
push
sub
or
pop
and
mov
jmp
xor
sbb
outsl
dec
ret
xor
inc
sbb
in
jmp
sti
in
ds
cwtl
and
cmpb
dec
std
sbb
adc
mov
xchg
loope
mov
sub
xor
dec
or
mov
andb
cmp
fbld
gs
lret
fs
mov
push
sub
pop
adc
push
xor
push
cmp
cmc
jle
cmpsb
loop
lock
cli
mov
sub
movsb
leave
repz
sub
loopne
in
js
lea
xchg
repz
or
insl
jns
daa
sti
xor
out
decb
jmp
movsb
cmp
and
ljmp
sahf
mov
enter
out
cmp
cmp
or
inc
imul
add
push
in
cmp
sahf
imul
pop
pop
stos
or
xor
adc
mov
adc
out
xchg
stos
pusha
add
bound
pop
cmp
or
push
and
in
inc
or
mov
movsl
mulb
and
or
movsb
xchg
into
test
cmpsb
inc
dec
jp
xor
ja
cli
sub
js
xchg
pop
test
in
fcomi
das
ljmp
dec
lret
sbb
inc
lds
lret
popa
je
mov
xor
lock
cmp
mov
fcompl
xor
push
mov
sbb
cs
cmp
push
push
into
adc
out
jecxz
and
mov
xchg
pop
mov
pop
jbe
xchg
sub
push
mov
and
sti
or
mov
popa
adc
stos
mov
mov
jbe
arpl
push
lret
insb
pushf
push
adc
jecxz
jecxz
stos
out
add
data16
sbb
sbb
insb
ljmp
cmp
test
imul
cmp
push
mov
dec
add
jo
mov
jo
aad
fsubr
imul
enter
and
mov
pop
ss
mov
push
sti
insb
add
in
data16
fwait
imul
sub
push
aad
push
adc
clc
scas
pop
in
jmp
or
fidivrl
add
xor
jl
mov
xor
testb
pop
cmp
sub
cs
rclb
jl
sbb
mov
in
outsl
sbbb
ja
dec
test
jnp
add
ret
call
dec
flds
pop
pop
dec
add
mov
js
or
push
sbb
inc
jmp
shrd
das
lock
adc
sahf
or
mov
add
outsl
arpl
rcrb
mov
dec
mov
lcall
pop
cmpsl
mov
push
out
pop
sub
incl
push
test
ret
loope
adc
cmpsl
stos
mov
mov
sbb
shl
push
loop
dec
mov
iret
mov
pop
imul
data16
adc
jne
ljmp
mov
out
mov
cmp
sti
movsl
fisubs
sub
add
sbb
roll
rol
sub
dec
leave
orl
jo
inc
sub
adc
add
inc
pop
ss
xchg
out
cmp
push
fnstcw
out
lea
xor
lock
sbb
jb
mov
jl
sbb
test
inc
shrb
aam
aad
inc
clc
ja
jge
sbb
xchg
mov
imul
mov
mov
loope
push
or
icebp
jle,pt
add
sub
fmull
lret
or
lret
movl
std
dec
and
lods
xchg
push
aaa
aaa
lock
xchg
cmp
cltd
xor
test
pop
bound
dec
xor
xor
ja
enter
in
mov
fs
lcall
mov
pop
imul
fisttpl
xor
lods
adc
fwait
xor
mov
push
fnstsw
in
pop
ja
mov
mov
xchg
cmp
scas
xor
lea
dec
xchg
mov
movsb
subl
mov
add
push
xchg
call
xor
mov
xor
mov
cld
subl
cmpsb
pop
int
faddl
movsb
xchg
push
add
cmp
faddl
std
sub
outsl
in
rolb
insb
mov
mov
push
pop
or
push
dec
pop
fcmove
fwait
inc
outsl
in
push
mov
pop
or
test
enter
aas
push
dec
imul
jmp
flds
movsl
cmpsl
data16
or
mov
jne
fisttpl
xchg
aam
xor
test
add
movsb
jae
pop
cmp
int3
nop
cmp
sub
jns
lret
push
dec
xchg
cmp
movsb
leave
mov
sbb
in
fs
jno
je
out
popa
mov
out
and
push
js
and
cmpsb
jae
out
or
outsl
pop
jae
les
xor
push
cmp
lret
lar
jne
mov
int3
push
xor
arpl
test
push
mov
sbb
mov
in
lret
xchg
xor
and
aaa
lret
pop
xchg
mov
daa
movsb
hlt
js
jo
xchg
movsb
imul
lock
repnz
mov
imul
mov
nop
xchg
out
orb
add
pop
sbb
mov
sub
fs
insl
mov
or
rorb
jg
mov
add
leave
push
insb
pop
sub
sub
loope
repz
outsb
or
lds
movsl
fwait
adc
push
cmp
and
cmp
rcll
repnz
test
loop
add
scas
movsb
sahf
xchg
sbb
repnz
pop
lret
movsl
jno
in
sbb
xchg
push
lret
inc
enter
push
aad
dec
in
lret
add
repnz
cld
call
sub
mov
inc
pop
lds
mov
or
and
jle
leave
lods
leave
sbb
js
fiaddl
mov
gs
hlt
mov
arpl
enter
mov
stos
pop
jo
mov
add
adc
mov
in
in
push
in
mov
sti
int
fwait
mov
loopne
xchg
cmc
lea
xor
aaa
into
add
dec
push
movsl
sbb
in
test
jecxz
cltd
mov
loop
cwtl
rol
aad
mov
in
icebp
in
xor
sbb
push
in
mov
pusha
test
pop
push
pop
or
je
sbb
popf
daa
lahf
nop
mov
jns
dec
inc
jp
mov
scas
sub
push
fists
test
adc
movzwl
stos
outsb
imul
repnz
add
or
daa
inc
xchg
and
out
ja
or
lret
jnp
enter
sub
mov
jb
pop
mov
add
mov
adc
dec
scas
clc
lods
mov
add
cmpsl
inc
mov
push
fisttpll
push
mov
or
les
add
fistpl
cmpsb
jecxz
stos
ret
cmp
sbb
mov
sub
aaa
dec
xchg
ss
mov
jmp
sbb
ret
fldcw
mov
sbb
leave
rcrb
ljmp
xchg
insb
pushf
add
cmp
scas
xchg
out
inc
sbb
and
adc
filds
jns
fbstp
pop
mov
addl
sahf
or
lcall
into
ss
pusha
outsb
push
loopne
mov
xor
bnd
dec
aad
inc
sbb
divl
scas
cld
mov
xchg
incl
sahf
add
cmp
cmc
adc
xor
cmpsl
push
and
push
sub
inc
outsl
outsl
lea
stos
aaa
jb
and
xchg
movsl
lret
out
sub
mov
xchg
fwait
mov
cmpsb
fwait
jae
cmp
fdivl
rcrb
dec
cmp
bound
sbb
mov
jbe
fildll
les
out
pop
mov
jge
lret
jns
xchg
insl
sub
popa
aam
addr16
repz
sbb
push
push
lcall
adc
sub
dec
jp
mov
pop
iret
popa
scas
fistps
fsubs
jle
push
adc
pop
push
test
dec
int3
pop
call
jb
out
inc
and
mov
movsb
cli
mov
iret
outsl
or
out
aas
nop
push
divb
mov
dec
and
push
jbe
jo
out
aaa
add
push
dec
mov
xor
adc
mov
movb
mov
pop
dec
iret
bnd
ja
in
mov
gs
mov
ficompl
xchg
xor
test
push
hlt
cmc
clc
cmp
add
cmp
fwait
inc
mov
jne
outsb
pop
push
mov
push
or
test
add
sub
aaa
into
jae
mov
insb
or
jb
lahf
jmp
cmp
cmpsl
loopne
int
cwtl
sahf
xor
imul
xchg
sahf
scas
sti
cwtl
xor
out
adc
pop
jae
mov
dec
mov
lds
jo
ljmp
mov
pop
std
lock
outsl
sbb
ret
or
test
push
out
subb
lret
mov
test
insl
mov
ret
push
xchg
cvtps2pi
das
xchg
aas
xlat
ret
pop
out
mov
xchg
lock
cmp
clc
sub
and
xor
mov
inc
jb
call
sbb
aas
movsl
xor
std
cmpsl
mov
addr16
sbb
pop
je
ljmp
and
mov
jb
pop
scas
outsb
movb
add
and
jne
sub
jp
sub
cmpsb
sub
xchg
or
xchg
jns
or
mov
imul
cmc
daa
in
rol
mov
out
mov
cmp
jae
out
popl
xchg
clc
arpl
dec
push
rcrb
loope
jg
lock
decb
sbbb
andb
pop
js
or
es
ja
push
shlb
jb
ds
cmc
pop
jp
add
xchg
cltd
outsl
push
push
clc
push
lret
cmp
mov
xchg
dec
and
loopne
roll
cltd
or
cmc
in
mov
cltd
pop
aad
adc
leave
outsl
popf
popf
mov
bnd
adc
je
je
dec
into
mov
push
push
adc
inc
sbb
test
pop
mov
push
insl
icebp
popf
mov
push
sub
fnstenv
repz
inc
movsl
es
xor
daa
pushf
add
dec
subl
mov
lea
fs
frstor
xchg
and
or
or
add
imul
adc
rorb
cmp
imul
and
mov
mov
nop
js
sub
jne
int
flds
add
sbb
aaa
mov
inc
lock
cmp
ds
pop
int3
push
lods
stos
dec
or
iret
mov
rcrb
seta
out
push
dec
popl
or
dec
jecxz
lds
mov
mov
mov
pop
mov
sub
pop
or
push
inc
addr16
sbb
ja
aaa
mov
mov
mov
popf
dec
cmp
dec
push
int
cli
dec
mov
pop
aad
sbb
xchg
jae
cltd
mov
xor
in
jne
scas
sbb
xchg
add
inc
stos
pop
aas
fwait
dec
add
jmp
imul
popa
out
shrl
mov
arpl
test
mov
jp
push
sbb
outsb
ficompl
xchg
js
mov
xchg
incl
mov
clc
jge
and
pop
stc
inc
jg,pt
push
xor
pop
pop
out
xchg
xor
and
and
nop
shr
shrl
fwait
sbb
cmc
data16
push
lea
mov
or
xchg
mov
inc
push
mov
bound
xor
std
repz
mov
mov
scas
mov
test
jecxz
inc
xor
lock
ds
push
mov
mov
hlt
and
cwtl
adc
movsl
inc
ja
mov
cmp
xor
fidivrl
fidivl
jne
xor
xor
shrl
jmp
jnp
push
cltd
fadds
cmp
das
out
push
mov
out
and
sbbl
pop
lods
sti
sbb
xchg
xor
sarb
push
mov
mov
xor
js
mov
sbb
aad
xor
pop
push
sub
int
pop
shrl
push
mov
xchg
pop
or
scas
mov
pop
mov
xor
stos
dec
aad
lods
ret
in
sti
or
inc
mov
cltd
fidivl
sbb
lret
inc
dec
cmpsl
movsb
and
gs
dec
adc
lahf
inc
out
outsb
addl
inc
mov
rolb
gs
pop
test
add
das
xor
mov
push
jg
pop
cmp
mov
test
insl
lock
dec
addr16
rclb
aam
mov
ss
andb
push
push
outsl
sub
pop
mov
jne
cmp
fdivl
loop
jne
jmp
mov
aam
jmp
inc
in
mov
mov
push
dec
mov
add
imul
pusha
inc
push
adcl
xchg
push
cmp
pop
fldenv
xor
rcrl
ds
repnz
dec
sub
inc
je
aad
xor
xchg
sub
fstps
mov
repnz
lcall
dec
adc
outsb
pop
les
sub
jae
push
inc
pop
push
out
jne
mov
xor
dec
int3
sti
push
pop
add
mov
out
imull
aad
fldenv
push
mov
xchg
addr16
dec
insl
push
mov
push
imul
addl
xor
aas
cmp
cmpsl
out
call
lahf
push
xor
jno
ret
lret
fnstsw
and
stos
ret
mov
push
mov
jecxz
mov
adc
shl
bound
dec
add
cmp
andl
inc
mov
cmp
sbb
mov
aaa
stos
popf
push
mov
lahf
or
pop
dec
pop
sub
push
gs
imul
xor
xchg
jnp
fwait
push
pop
pushf
pop
mov
fs
and
mov
push
or
jo
and
arpl
or
mov
dec
xor
jb
sbb
cmp
roll
repnz
push
shlb
pop
mov
mov
iret
fldt
testb
cmpsb
mov
jns
xchg
add
push
in
ror
das
pop
lret
xlat
or
jno
jne
push
notl
or
decb
outsl
mov
xchg
xchg
adc
xorl
xchg
test
movl
xchg
addps
fidivrs
bound
stc
sbb
ficomps
dec
pop
fwait
aam
inc
xchg
pusha
test
mov
sahf
mov
xchg
pop
xor
data16
xchg
icebp
dec
mov
xor
pop
cmp
fsub
inc
fcmovnbe
addr16
sub
inc
js
jns
addr16
sbb
mov
aas
ljmp
ret
orb
mov
aaa
loop
adc
mov
punpcklbw
jnp
push
sub
xchg
fcomps
mov
je,pt
scas
mov
pop
lds
inc
mov
out
loope
adc
push
dec
popf
or
xlat
or
and
out
sbb
add
test
dec
lds
push
xchg
inc
shll
sarb
add
inc
cs
imul
mov
mov
pop
fst
mov
testl
inc
leave
stos
xor
mov
fnsave
cli
mov
xchg
cmp
jp
cs
sti
lea
cmp
test
fisubrl
imul
cs
jl
push
test
push
ss
cmp
pop
jp
adc
fwait
add
bound
std
push
scas
test
cli
mov
ljmp
mov
push
ss
lea
lret
xchg
in
ss
int3
lcall
ljmp
xchg
iret
icebp
dec
and
dec
pop
outsb
in
mulb
aam
arpl
adc
push
out
sub
inc
testb
or
hlt
repz
out
sbb
or
push
xor
pop
rcl
pushf
loop
arpl
mov
cmp
rclb
enter
dec
and
paddw
and
lods
and
movsb
jecxz
stos
sub
cs
rcrl
inc
in
mov
dec
pop
dec
sahf
outsb
and
out
cmc
insb
push
loop
mov
in
push
add
out
fistpl
dec
fmull
outsl
lods
insl
cld
sub
sub
sahf
mov
or
xchg
cmpsl
push
out
out
pushf
xchg
ret
cmpsl
in
lret
ret
dec
mov
cltd
mov
pop
mov
jno
cmpb
fists
inc
cmp
jecxz
push
into
mov
pushf
jb
cmpl
mov
jp
adc
aas
and
cmp
dec
cmp
cs
and
mull
pop
push
es
dec
test
dec
mov
mov
pop
cmp
sbb
push
dec
andb
pop
mov
cmp
shlb
xchg
movsl
inc
inc
xchg
stos
fcom
in
mov
les
fimull
aad
lcall
pop
push
call
dec
push
les
pop
dec
pop
sbb
rorb
mov
sub
movsl
xlat
mull
jg
cmpsb
or
lea
pushf
daa
xor
cmp
mov
pop
shlb
nop
pop
lcall
in
adc
mov
cmpsb
jl
sub
or
mov
imul
nop
in
pop
mov
pop
lahf
jmp
inc
mov
out
enter
movsb
fwait
out
faddp
sub
mov
sbb
psllw
and
sbb
fisubrl
xchg
xor
add
adc
inc
inc
mov
das
incl
sub
in
test
xor
jnp
jbe
mov
cmpsb
mov
mov
test
popf
es
popf
mov
fildll
cmp
test
aaa
mov
idivb
sub
lea
ja
lds
adc
inc
nop
popa
rclb
sub
mov
lret
jecxz
out
mov
push
sti
jg
in
daa
test
shlb
pop
mov
jle
mov
out
test
lcall
dec
or
dec
nop
add
xor
push
cwtl
insl
movsl
ja
sti
adc
mov
pop
adc
push
pop
test
roll
jno
cmp
cmp
rolb
push
cmp
pop
andb
rorb
mov
popf
add
dec
push
mov
cmpsb
iret
and
pusha
pop
fbstp
cmp
fsubp
stos
popa
stos
xor
insl
mov
mov
sub
xlat
mov
sub
orl
jns
lret
xor
test
sbb
push
push
adc
test
adc
mulb
stc
mov
and
push
add
push
rcr
or
adc
test
sub
jo
lcall
in
lock
cli
leave
cmp
leave
mov
mov
sub
test
xor
inc
in
fcoml
lret
test
add
xchg
sub
pushf
sbb
jns
jb
fs
push
fisttps
mov
inc
repz
lock
xchg
dec
movsl
cmp
iret
jae
fsubrl
xchg
stos
movsl
fcoml
add
xor
mov
int
inc
xchg
pop
pop
cwtl
jno
out
mov
dec
icebp
mov
bound
cmp
or
std
in
bound
mov
das
sbb
push
aas
adc
inc
and
cmpsl
adc
lret
cmp
sbb
inc
dec
pop
mov
jae
aam
int3
sbb
pop
push
jmp
out
push
mov
jnp
outsl
and
sbb
pushl
or
adc
rol
mov
out
jle
push
gs
stos
cmp
mov
pop
sarb
aaa
cmp
cmp
mov
arpl
push
mov
xchg
xor
inc
sahf
mov
jge
add
nop
sub
ret
mov
xchg
pusha
jno
push
inc
jbe
push
pop
pop
add
jns
mov
mov
push
inc
clc
jg
xor
pop
sbb
xorb
push
repnz
and
fldt
mov
adc
cli
aad
pushf
mov
sahf
in
and
jmp
mov
adc
mov
pusha
add
sbb
dec
imul
xchg
and
mov
pop
lock
xor
sti
mov
shlb
leave
sbb
jl
mov
aad
xchg
cmc
lcall
lods
lcall
mov
mov
mov
xorl
test
sub
push
push
adc
inc
fimull
xchg
pop
lock
adc
jno
scas
hlt
mov
adc
jne
adc
lea
inc
outsl
mov
xchg
and
mov
arpl
mov
arpl
cmp
sbb
mov
xor
adc
cmpsl
sbb
jno
and
arpl
or
add
inc
daa
cltd
inc
push
mov
xor
push
lods
outsl
add
mov
rorb
mov
push
adc
aad
repz
loop
mov
sub
repz
add
push
jmp
push
fbld
fists
mov
aaa
insl
sbb
pop
adc
in
fsubrs
adc
pop
shll
aas
fwait
popf
push
movsl
aaa
and
mov
ret
out
xchg
mov
popf
int3
push
loop
sti
add
adc
mov
leave
mov
mov
xor
xchg
insl
xchg
cmpsl
mov
xchg
push
push
mov
xchg
sahf
jle
insl
push
xchg
mov
jecxz
cwtl
repnz
add
mov
les
mov
xchg
in
pop
cwtl
fnstsw
dec
mov
pushf
scas
cmc
pop
mov
das
mov
xor
aas
addr16
push
xchg
mov
or
out
iret
imul
fstps
movsl
in
fnsave
mov
jb
mov
das
aaa
cmp
cmpsl
adc
mov
data16
xchg
imull
aaa
mov
out
push
mov
movsb
test
inc
repz
dec
mov
adc
testb
fdivr
push
iret
and
mov
cmpl
aam
pop
cwtl
push
push
sbb
rclb
xor
jmp
jns
xchg
std
jns
inc
inc
fsts
inc
outsl
xor
push
rclb
xlat
repnz
cltd
test
dec
cmp
push
mov
fwait
call
xchg
mov
pop
xchg
adc
test
or
jp
add
fiadds
mov
jmp
inc
jl
dec
call
jnp
add
sub
int
aas
mov
into
mov
jg
add
sbb
lds
into
mov
cmp
xorl
jecxz
jnp
jnp
xchg
leave
mov
cli
fs
cmp
add
aam
or
push
in
mov
loopne
mov
mov
popa
shrb
loopne
aas
add
sbb
mov
bound
mov
cmp
xchg
sbb
mov
mov
mov
aam
stc
jecxz
xor
fisubrl
pop
jno
pushl
arpl
movsb
adcl
repz
mov
jbe
sbb
dec
xor
mov
arpl
je
jbe
or
mov
and
or
cmc
roll
push
stos
scas
xchg
mov
into
daa
lods
add
fisubrl
js
mov
jg
adc
push
pop
out
fistpl
pop
imul
mov
and
pusha
push
lret
mov
lcall
jne
in
jge
fs
nop
dec
dec
xchg
xchg
push
pop
xchg
dec
iret
popf
inc
mov
and
mov
mov
cmpsb
mov
icebp
or
inc
pop
hlt
xor
mov
jge
idivb
lcall
mov
and
push
sub
les
push
call
mov
flds
mov
sbb
rorb
rol
mov
jae
push
cmp
cs
fldenv
imulb
in
push
nop
dec
jmp
je
js
xchg
add
pusha
aad
andl
xor
xor
pop
dec
push
mov
pushf
mov
dec
fdivrs
in
sub
add
je
jo
repnz
mov
nop
aaa
shl
push
xchg
mov
dec
aam
add
adc
mov
dec
sbb
icebp
ds
mov
and
sbb
decb
or
daa
ret
popa
ljmp
inc
pop
jae
mov
jnp
rolb
add
xchg
mov
mov
js
push
repnz
inc
pop
das
add
cs
les
shlb
and
icebp
add
fs
rorb
jnp
pop
mov
and
push
push
or
test
push
pop
jnp
roll
adc
movsb
imul
push
and
leave
popf
insl
inc
push
or
pop
jnp
iret
push
lods
hlt
sub
mov
ss
lods
aaa
dec
xchg
imul
out
sbb
mov
call
push
sbb
dec
sub
rcrl
inc
xchg
in
jp
pop
add
fmul
mov
push
jmp
out
mov
mov
stos
add
aas
push
sub
sbb
in
mov
insb
cmp
pop
jne
stc
push
test
dec
jmp
xor
mov
mov
sbb
repz
xor
mov
dec
xor
push
nop
outsl
xchg
xor
call
cld
adc
out
mov
add
mov
fwait
loope
sbb
test
hlt
or
inc
or
aad
pop
jge
mov
cmp
es
push
sub
shl
push
in
sbb
addr16
xor
mov
aad
push
push
xor
mov
imul
pushf
xor
jmp
mov
mov
inc
inc
pop
xor
in
cmp
dec
popa
or
push
cli
leave
cmc
sbb
mov
push
mov
repnz
sub
pop
dec
cmc
or
add
rcl
xchg
int
stos
andb
push
aam
jnp
jno
iret
inc
jecxz
mov
push
mov
or
adc
cmpsb
lcall
js
and
pop
sbb
jns
dec
dec
mov
sub
daa
loope
das
push
mov
gs
sbb
xor
pop
or
xor
test
pop
ficomps
enter
push
pop
test
fcomps
add
xor
rcll
in
or
call
sbb
xchg
test
sbb
outsl
jmp
aas
movsl
inc
xlat
jne
or
mov
lret
push
dec
scas
push
pop
jo
add
js
cmc
xor
xor
orb
jb,pn
xor
mov
lret
in
inc
movb
pop
sub
lret
std
xchg
rcll
cmp
call
add
cli
fcompl
idivb
lock
and
shrl
aaa
inc
cmp
cmpsb
inc
pusha
cmp
cmpsb
out
enter
inc
cmpsl
xor
popa
mov
inc
ja
out
sbb
aas
sub
sbb
inc
in
pop
push
and
iret
stos
or
adc
imul
int3
jl
pop
sbb
xchg
jae
cmpsl
inc
daa
in
lds
int
cmpsl
push
dec
pop
xor
ds
filds
dec
cmpsl
sub
into
or
push
imul
xchg
or
mov
int
lea
or
cmp
movsl
test
mov
inc
in
mov
outsl
inc
xchg
lods
mov
add
mov
outsb
icebp
inc
dec
cmp
subl
add
imul
ja
pop
cmc
add
cmp
xchg
jge
pop
inc
repz
in
xor
mov
fwait
adc
sbb
jnp
mov
das
mov
jmp
lahf
ret
inc
xchg
and
jp
imul
inc
pop
loope
call
divl
add
push
cmpsb
inc
mov
push
lds
fldenv
int3
and
xor
mov
mov
xchg
test
add
test
add
popa
lds
sub
sbb
into
push
sub
sub
jge
mov
aad
inc
shlb
cmp
inc
sahf
cltd
scas
jne
in
mov
lret
adc
adc
test
neg
xchg
push
lret
inc
clc
cmp
lods
jmp
or
mov
xorb
dec
xor
rcll
outsl
push
mov
jle
nop
jle
sub
pop
arpl
jo
outsb
stos
pop
and
jecxz
test
into
mov
sbb
add
cld
lahf
xchg
out
push
daa
repz
and
push
lahf
jle
lds
es
movsl
cmp
jae
sbb
or
adc
iret
or
sti
and
nop
mov
cli
cli
mov
cmp
inc
and
push
push
inc
ds
push
lods
jmp
sysexit
fsts
jnp
and
sbb
shll
cmpsl
cwtl
dec
into
test
mov
pop
xchg
in
xchg
dec
repz
dec
adc
or
adc
inc
jno
inc
lahf
lds
and
je
push
xor
xchg
test
cmp
inc
push
pop
std
subl
mov
pop
test
mov
sbb
fidivl
sbb
scas
push
add
sti
push
add
xor
in
mov
lock
mov
aas
push
hlt
pop
fldt
int
cmpsb
ret
or
xchg
mov
sub
jg
add
xchg
pop
lret
cld
add
pop
repz
jp
testb
rcll
ljmp
pop
enter
inc
scas
or
sub
pop
call
shll
je
movsl
push
pusha
add
inc
push
mov
jnp
insb
mov
mov
push
xor
sarl
aaa
jl
and
push
daa
clc
adc
into
adcb
and
jle
sub
in
adc
lods
xchg
pop
jecxz
add
leave
push
imull
stos
jl
mov
nop
jbe
daa
out
ss
lds
lret
inc
mov
pusha
cld
jmp
or
arpl
jmp
lods
repnz
xor
mov
add
xor
mov
cli
xchg
aad
js
jae
sbb
test
js
xchg
ljmp
or
sbb
and
scas
cmc
mov
movsb
mov
mov
push
push
imul
xor
dec
icebp
xchg
mov
cmpsl
jne
xchg
cmp
adc
xor
ja
and
lret
fimull
jo
inc
rcr
arpl
lods
inc
cli
femms
adc
es
mov
xor
adc
stc
in
stos
dec
xchg
mov
jg
pop
pusha
inc
jne
inc
test
push
push
jg
pop
in
xchg
in
sbb
jg
lea
cmp
out
and
gs
pop
daa
cltd
xchg
jl
push
popa
cltd
fisttps
movsl
jge
pop
pop
sti
push
xlat
fcomps
sub
in
mov
sahf
stos
sub
push
daa
ja,pt
jo
pop
xor
jle
or
stos
idivb
mov
jp
add
mov
or
adcb
sti
mov
repnz
es
icebp
mov
sbb
pop
push
adc
outsb
and
jo
xchg
orl
clc
aas
notb
and
int3
pop
xlat
xchg
xlat
rorb
mul
movsl
arpl
xor
mov
jmp
dec
fsts
iret
inc
sub
mov
jecxz
jmp
ja
xlat
xchg
cld
shl
sbb
lds
ret
jecxz
stos
cli
dec
add
sbb
pop
add
or
shl
sub
xchg
mov
dec
out
hlt
mov
xor
lods
das
loope
inc
pusha
stc
enter
xor
ja
add
mov
outsl
xlat
lret
out
pop
push
sub
and
cmp
push
inc
stos
icebp
arpl
pop
and
lcall
push
in
jne
sbb
mov
sbb
out
mov
pop
cld
jmp
outsl
sbb
repz
mov
mov
movsb
xchg
jb
pop
xchg
pop
stos
rclb
inc
loope
cli
fmuls
insb
mov
popf
shll
cmp
ret
in
in
dec
sbb
mov
cltd
sub
or
cltd
cs
leave
cld
mov
add
mov
repz
jo
push
mov
imul
cmpsl
and
popf
out
pop
pusha
lcall
fsts
xor
dec
cmp
xchg
in
mov
sub
push
jae
inc
mov
mov
loop
pop
nop
mov
mov
fwait
sbbb
mov
cmp
and
leave
fwait
hlt
and
movsl
pop
and
data16
leave
aam
out
inc
or
or
movsl
push
sub
jmp
adc
sub
popa
sarb
mov
inc
shll
sbb
in
shl
daa
pop
int
test
pusha
mov
jecxz
mov
mov
inc
lret
push
aas
ror
inc
inc
adc
add
dec
xchg
int3
rcrb
cmp
jge
mov
fisubl
mov
mov
mov
out
pop
or
sub
add
xchg
lret
pop
push
popf
nop
jne
push
gs
pop
dec
cmpsb
dec
repnz
jp
xchg
imul
jno
aaa
out
lahf
icebp
sbb
rorb
mov
adcl
hlt
lahf
pushf
or
pop
lret
mov
hlt
outsl
cmc
insl
jno
sub
pop
cmp
in
les
push
xchg
dec
je
leave
pop
dec
lret
dec
pop
dec
in
push
rorl
pop
inc
push
dec
sub
push
jae,pn
xor
loop
push
and
push
sub
iret
inc
sahf
addr16
cwtl
or
incl
testl
jnp
mov
cmpsl
mov
dec
and
orl
xor
pushf
sahf
jl
repz
andb
lea
dec
xor
cmp
adc
inc
and
jb
std
sbb
push
cmp
aam
mov
and
aaa
stos
push
mov
inc
pop
xchg
out
sbb
jno
pop
xor
andl
inc
js
jo
jl
pop
pusha
mov
repnz
nop
ret
jne
shlb
aas
inc
imul
add
dec
fistl
repz
mov
push
mov
add
cmpsl
and
iret
movsl
sbb
add
data16
adc
scas
pop
icebp
adc
xor
xor
push
jge
xchg
mov
std
fdivr
inc
pop
xchg
outsb
loopne
dec
into
cld
xor
cmp
aad
push
mov
fdivl
adc
orb
clc
sbb
sub
negb
adc
push
in
nop
xor
mov
sub
add
mov
add
mov
push
lahf
and
loop
out
rclb
dec
lcall
push
dec
pop
xchg
sub
jnp
lods
or
cld
daa
pop
or
out
out
fucom
imul
sbb
fs
mov
insl
loopne
cmp
setge
in
add
aam
in
fdivrl
adc
mov
or
pop
clc
xchg
jno
cs
push
outsb
out
jecxz
fsubl
xlat
sbb
mov
fst
and
xor
fs
mov
scas
xor
mov
stc
pop
lods
out
cmovns
aas
jae
subb
jnp
cli
jns
scas
dec
or
outsl
lahf
in
iret
test
lahf
mov
into
mov
xlat
and
dec
adc
pop
jne
mov
or
test
add
push
xor
xchg
mov
mov
xchg
daa
mov
add
pop
int
shr
cmpsb
adc
mov
mov
fisubl
xchg
cmp
dec
test
mov
les
lods
push
xchg
sub
repz
jecxz
xchg
pop
adc
pop
inc
adc
push
in
xor
jle
or
mov
jg
test
sub
and
mov
xlat
xor
cwtl
je
mull
mov
push
test
xor
pop
testl
mov
out
and
xor
outsb
stos
repnz
xor
rorb
mov
test
daa
mov
sbb
inc
enter
jmp
rep
mov
add
dec
xor
fidivl
les
test
and
inc
pop
jno
xchg
std
addr16
mov
mov
push
je
push
fisubrs
lods
xchg
int
ret
dec
xorb
insl
jns
or
mul
jns
mov
sbb
adc
mov
std
or
in
movsl
fcmove
fsubrs
and
imul
add
pop
lea
xor
push
std
aam
jae
lods
ljmp
add
jg
inc
mov
in
sub
pop
scas
pop
adc
pusha
loop
and
jo
es
test
mov
sti
add
add
pop
cltd
dec
sub
push
cs
xorl
mov
push
xor
mov
mov
push
lret
test
and
ret
aas
sub
push
inc
adc
es
enter
xor
cld
xchg
pop
out
movsb
jmp
es
std
dec
and
das
int
movntps
sub
vldmxcsr
call
es
aaa
cmp
arpl
sub
adc
adc
xor
mov
cld
sbb
push
fwait
movsb
jns
mov
inc
aaa
adc
rol
ficoml
pop
jl
xor
push
adc
stos
jmp
mov
in
add
mov
cmpsb
loopne
int3
sbb
xor
shlb
jge
into
adc
rcrb
lret
mov
push
add
aaa
jne
sbb
test
cmpsb
push
cmpsb
imul
xor
xchg
sbb
data16
cltd
les
arpl
mov
xor
or
mov
call
pop
mov
jnp
out
jle
sbb
push
dec
in
push
sub
lea
int
dec
pushf
fiaddl
fisubrl
aaa
jg
jne
in
jae
stos
jl
push
fnstsw
xchg
xchg
lret
rcrb
and
stos
jp
ror
aad
jno
mov
test
fbld
mov
clc
aam
xchg
insl
mov
cld
xchg
mov
add
imul
ljmp
aaa
lret
jne
pop
test
out
cltd
mov
or
add
dec
nop
imul
xor
xor
xor
mov
faddl
add
xchg
lods
xor
notb
jne
jmp
or
mov
mov
movsl
das
sarb
clc
repz
push
leave
dec
iret
rcl
and
ret
mov
fwait
clc
adc
jne
js
jmp
mov
out
dec
cmpsb
cmpl
in
and
mov
sbb
inc
xlat
scas
cltd
lods
mov
add
jge
jl
push
jbe
std
pop
aad
sbb
addr16
loope
lret
mov
xor
add
push
lods
int3
xchg
cltd
mov
stc
je
mov
pop
out
add
push
or
push
out
lea
mov
inc
int
add
sub
fwait
ror
xchg
jg
arpl
push
xchg
mov
mov
iret
or
fwait
or
pushf
rcrb
cmp
inc
lret
push
pop
inc
push
test
popf
push
jl
mov
dec
pop
ret
and
sbb
sarb
clc
mov
push
adc
sbb
popf
mov
mov
pop
jmp
mov
daa
insl
jmp
int3
add
xor
push
mov
xchg
aas
adc
inc
add
mov
popa
pop
test
mov
pop
movsl
repnz
inc
aam
jl
loop
sahf
cs
outsl
lods
mov
push
sbb
mov
jo
lcall
sbb
cmpsl
insb
movsl
out
mov
lret
fcmovu
jno
gs
ja
adc
inc
mov
push
das
nop
pusha
cmc
loope
mov
sbb
push
mov
sbb
add
das
xchg
test
mov
sub
leave
decb
out
ret
into
dec
or
lea
ja
aas
xor
mov
daa
mov
adc
nop
imul
ljmp
arpl
xchg
roll
lret
lahf
loopne,pn
fdivs
xchg
ds
sub
or
sbb
mov
dec
or
hlt
lods
pop
jg
flds
cltd
data16
jo
mov
inc
jg
xchg
sbb
or
jp
cli
and
jle
icebp
mov
jnp
pop
xlat
add
cmp
notl
push
sub
inc
outsl
and
push
popa
cmc
ljmp
and
jnp
push
jo
into
aad
mov
fisubs
rcrb
cltd
xchg
mov
mov
xchg
inc
dec
mov
mov
push
fsub
shll
ficomps
and
int3
repz
call
jge
xor
test
pop
cld
stc
inc
and
sbb
jb
add
les
sub
pop
or
scas
out
out
mov
aam
js
clc
dec
xchg
mov
fdivrs
xchg
popl
mov
mov
cld
pop
out
rcll
cmp
adc
add
int3
fwait
mov
or
movsb
lea
xchg
and
imul
sbb
ljmp
movsb
inc
stos
dec
cltd
cmp
pop
dec
loope
mov
jne
jb
pusha
push
xor
div
add
mov
hlt
mov
cmp
cmp
sub
add
xor
stos
cmp
push
mov
int
xor
mov
outsb
decl
push
cmc
push
inc
push
or
mov
jno
out
out
das
ret
cltd
pop
adc
popf
mov
xor
aad
jo
add
fstps
cltd
pop
ja
in
jbe
mov
arpl
sub
mov
ss
adc
test
xchg
dec
mov
leave
outsl
hlt
movsl
pop
shufps
push
cmp
pop
shrl
fcomps
mov
lods
add
ss
or
std
sub
inc
scas
adc
xlat
pop
fldenv
push
fsubl
add
int3
adc
stos
repnz
sbb
push
imul
mov
stos
push
mov
loope
xchg
bound
mov
icebp
pop
xchg
sub
in
xor
jnp
sbb
push
fnstenv
push
adc
inc
mov
adc
mov
pop
fldl
add
jno
jmp
mov
popa
in
xor
in
addr16
lcall
imul
shrb
dec
pushf
cmp
xchg
pop
imul
stos
scas
xchg
mov
lret
xchg
mov
stos
rcrl
and
iret
dec
adc
dec
pushf
fstpt
add
mov
mov
loope
jl
aaa
mov
mov
fisubs
cmpsl
in
xchg
test
repnz
scas
xchg
pop
into
push
mov
movsl
pop
lahf
dec
sti
hlt
sbb
jns
std
sbb
mov
mov
in
sbb
jle
test
or
cld
or
add
in
repz
ret
lods
cld
ja
enter
mov
in
push
adc
mov
xchg
mov
clc
inc
inc
pop
cmp
shrl
adc
jae
mov
push
pop
ss
das
sub
jp
jno
outsl
xor
xchg
xchg
bound
push
pop
push
push
lret
pop
mov
sbb
mov
cwtl
mov
jns
or
ret
mov
pop
lret
sbb
stos
inc
loop
pop
xchg
push
sbb
xchg
add
push
pop
jns
cmp
into
int3
mov
aam
clc
add
push
test
or
fwait
dec
mov
cltd
cmp
sub
xor
jbe
arpl
pop
fwait
shll
out
flds
es
test
jge
xchg
inc
and
inc
shlb
inc
dec
pop
jge
add
or
movsl
push
mov
and
inc
cmp
pop
in
dec
mov
out
sub
xchg
insl
imul
jbe
or
pop
popf
cmp
sbbb
add
lahf
popf
mov
ja
das
ret
add
insl
enter
stos
inc
dec
and
out
ljmp
xor
divb
test
mov
cli
sub
repz
lds
ds
dec
xchg
cltd
das
test
xchg
push
push
je
ljmp
arpl
sbb
mov
arpl
enter
xor
sbbb
adc
pop
jmp
clc
xchg
mov
repz
fadds
push
fldpi
out
cmp
cmpsl
mov
gs
imul
push
je
dec
mov
sbb
fs
sub
push
or
xchg
fwait
imull
and
dec
jbe
mov
mov
xchg
adc
dec
xor
out
sub
sub
or
movntq
sub
stc
cmp
std
mov
add
jae
mov
in
cmp
xchg
js
xorl
mov
mov
repnz
and
mov
push
mov
pop
bnd
xchg
out
mov
pop
adc
sub
test
cmpsl
jo
jle
jne
and
xor
or
addr16
jl
or
scas
loopne
data16
gs
mov
jo
inc
ret
lods
in
test
push
add
js
sub
adc
mov
sub
inc
or
push
or
ret
pop
je
cmc
adc
adc
sbb
push
push
and
lods
xor
mov
int3
push
scas
addl
mov
add
das
aaa
jp
jb
push
loope
aam
inc
in
dec
mov
push
call
jno
mov
aam
jmp
push
mov
roll
lods
dec
xchg
fs
sub
push
sbb
mov
mov
jg
jmp
jge
cmp
leave
push
sti
cmp
add
test
cmp
lcall
je
xchg
or
addr16
cmp
out
and
jbe
cwtl
ja
popa
mov
lods
fs
out
xchg
mov
or
xchg
or
ret
pop
loope
out
pop
fcmovnbe
fs
movsl
dec
stos
rclb
jns
into
mov
inc
push
gs
fcmovnu
xchg
out
pop
push
int3
in
and
mov
push
push
mov
dec
mov
jnp
jns
dec
push
mov
js
imul
mov
cmp
insl
cld
xchg
push
push
iret
in
ja
xchg
jb
jo
and
arpl
sub
mov
das
sbb
test
stos
cltd
xor
and
push
cld
xchg
cli
sub
aam
mov
js
fcompl
pop
push
dec
lds
or
in
dec
pop
ret
mov
push
bound
sahf
nop
or
cmp
mov
push
enter
jecxz
imul
jl
jbe
add
aas
inc
push
and
mov
lock
mov
sub
sbb
dec
mov
insb
in
rclb
mov
outsl
fs
fs
xor
xor
sbb
rcll
inc
in
push
scas
pop
add
dec
data16
mov
xchg
rorb
and
jns
mov
and
adc
add
out
ja
repz
cld
xor
loope
incl
rolb
mov
xchg
aad
xor
jo
xor
stos
inc
and
insb
or
loope
scas
push
aas
sbb
mov
scas
popa
rcl
mov
pop
xchg
mov
push
adc
nop
adc
and
filds
data16
cwtl
push
mov
mov
push
xchg
sub
daa
dec
fadd
aam
fwait
pop
bound
mov
jb
mov
push
bound
ror
sbb
and
push
mov
stos
fs
mov
sahf
push
cltd
xor
nop
lods
or
dec
inc
mov
push
push
jbe
imul
pop
and
xor
sbb
push
ret
xor
mov
call
lret
mov
adc
sub
mov
scas
enter
mov
imul
lcall
outsb
out
ficoms
pop
rcll
insl
cwtl
les
loopne
jg
fs
jnp
mov
push
pop
rorl
xor
int
test
sub
int
add
lahf
push
pop
mov
pop
idiv
mov
mov
jmp
cmp
jno
xchg
push
xor
movl
mov
dec
loope
sub
push
out
mov
mov
fdivr
in
inc
push
mov
xor
into
hlt
inc
mov
push
repnz
sbb
inc
add
nop
cltd
adc
imul
cld
and
pop
pop
xlat
decl
mov
mov
idivb
lea
aam
insl
arpl
push
sub
aas
cmp
xchg
and
loopw
push
pop
sbb
ret
ret
cmp
push
pop
jns
xchg
and
incl
pop
shl
fdivl
sub
mov
mov
push
push
cmpl
fsubl
pop
andl
push
rcrb
pop
repnz
xchg
jnp
pop
push
popf
outsl
fisttpll
enter
cmp
or
and
mov
pop
lods
rep
adc
xor
inc
cmpsb
in
push
lcall
ret
mov
add
mov
xchg
push
dec
mov
repz
out
lock
adc
xor
repnz
stos
push
ss
and
lods
pop
sbb
push
lods
push
scas
and
outsb
aad
les
aad
cmp
outsb
or
add
jno
cmp
xchg
test
pop
mov
xchg
mov
in
xchg
mov
fbld
add
outsl
jbe
in
dec
loopne
aaa
mov
out
rol
pusha
lcall
in
cmpsl
pop
xchg
and
jns
sub
enter
or
or
sbb
fimull
dec
sbb
jle
out
add
and
cmp
outsb
mull
insb
cs
data16
ljmp
jmp
xchg
dec
mov
ret
jmp
dec
jne
insb
mov
insl
mov
inc
cmpsl
push
dec
or
adc
adc
pop
movsb
ja
cmp
js
mul
add
leave
pop
jg
add
xchg
fistpl
mov
xlat
ret
sbb
xchg
xlat
or
sub
in
adc
enter
outsb
xchg
jmp
lods
mov
xchg
sti
roll
dec
sub
dec
push
push
and
adc
and
jno
inc
ljmp
into
addr16
mov
push
inc
sahf
aaa
pop
fs
mov
pushf
in
xchg
adc
js
fs
call
push
in
pop
jg
sbb
add
jge
jl
xchg
ret
dec
imul
and
jmp
mov
push
xchg
and
mov
loope
push
outsb
or
popf
rorb
arpl
xlat
pop
in
sub
repnz
cmpsl
and
dec
and
lahf
mov
fists
xchg
jb
mov
sbb
add
enter
daa
adc
pop
rcr
mov
hlt
and
sar
int3
and
mov
xchg
popf
push
dec
lret
clc
int3
pop
pop
dec
mov
shr
fisttpl
push
lahf
pop
ss
je
pop
stos
or
dec
fst
cmpsb
out
loop
push
dec
dec
in
cmpsl
cmpsl
pop
in
push
sbb
jge
xchg
scas
lcall
in
ret
pushf
xchg
insb
xchg
mov
jge
test
pmuludq
inc
inc
adc
xchg
movsb
roll
rcrb
xchg
mov
rorl
test
push
mov
xor
enter
jl
sub
stos
add
cmp
test
cltd
test
sbb
lock
insb
lock
mov
arpl
cmp
mov
cmc
mov
cmp
add
cmp
imulb
add
imul
int
push
imul
add
cmp
ds
mov
mov
sub
sub
sub
push
addr16
jnp
icebp
mov
das
inc
je
ljmp
cmp
adc
loope
sub
repz
add
jl
dec
mov
inc
leave
fisubrs
les
or
subb
cmp
out
mov
cmp
or
push
pop
xorb
and
fs
subb
xor
adc
outsb
or
dec
lods
in
test
pop
sbb
pop
mov
loope
and
adc
inc
jl
out
xor
pop
fisubs
dec
xor
popl
dec
sbb
insb
je
sbb
cwtl
pop
cwtl
repz
jno
loopne
bound
pusha
xor
xchg
push
jmp
inc
lcall
and
xchg
leave
mov
repnz
cmp
and
out
dec
pop
inc
rorb
add
popa
std
pop
out
mov
add
pop
repnz
mov
inc
fdivr
xchg
mov
cmpsl
push
jge
bound
sub
in
add
jg
in
movsb
inc
das
scas
inc
push
adc
dec
les
data16
daa
push
push
pop
push
divl
cmpsl
push
scas
push
or
and
xchg
mov
enter
jo
rorb
jae
mov
mov
mull
and
xchg
jnp
shlb
add
arpl
pop
sub
push
dec
lahf
push
adc
leave
push
push
cmp
das
and
mov
aaa
adc
lock
movsb
xchg
pop
lds
xor
inc
out
fimuls
pop
lods
mov
sarl
rcrl
lret
and
mov
add
pop
jnp
fdivrl
and
push
inc
lea
popa
mov
es
inc
cmp
lea
cmpsl
mov
mov
je
mov
mov
movntps
or
ret
es
xchg
xchg
add
repnz
cmp
xchg
nop
cmc
out
adc
imul
jmp
mov
push
push
subl
adc
addr16
ret
pushf
pop
js
data16
sbb
sbb
popf
sub
push
jo
cmpsl
sub
test
mov
xchg
dec
or
dec
sbb
mov
in
pusha
dec
mov
pushf
inc
push
jno
push
pop
andb
popf
out
arpl
xchg
inc
sbb
sbb
sbb
je
add
mov
pop
inc
aam
pop
cli
stos
cwtl
aaa
add
pop
push
mov
stc
cmp
daa
pop
in
arpl
inc
insl
push
sbb
rcrl
outsl
rorb
fstpl
mov
loope
mov
sub
xor
rep
movsl
xlat
push
cmp
popf
sbb
inc
aaa
and
rcl
mov
xchg
xor
push
mov
xor
out
sub
orb
pop
sarl
out
das
pop
jge
mov
test
mov
testl
imul
aam
inc
loop
pop
pushf
aad
loope
jmp
xchg
dec
mov
inc
push
inc
push
out
addr16
fildll
inc
loop
jecxz
cmc
and
inc
or
jns
cltd
inc
mov
bound
xchg
jb
dec
jbe
es
pop
in
mov
mov
push
jg
leave
or
push
add
xchg
cmp
lret
or
fildl
xor
sub
adc
out
xchg
aam
fstl
jne
nop
test
std
jmp
pop
mov
xchg
scas
and
mov
add
xchg
cld
sbb
in
out
and
leave
outsb
ret
push
stos
xchg
xchg
mov
add
mov
cmp
stos
xchg
adc
or
lahf
sub
xchg
jle
mov
xor
mov
push
cmp
loop
sarl
adc
mov
lret
push
or
inc
nop
popa
inc
jg
push
and
or
imul
mov
mov
ljmp
jb
outsl
inc
push
jmp
popa
decl
pushf
jmp
jae
mov
jmp
xchg
lahf
shrl
mov
xchg
or
call
sbb
mov
lret
xor
in
mov
add
test
and
fbld
les
repnz
arpl
push
xlat
jmp
gs
ret
jmp
cli
stos
aam
cmp
and
sub
scas
xchg
jbe
dec
loop
stos
mov
push
rcrb
mov
in
push
cmp
loop
shl
sbb
dec
insb
shrl
mov
call
cli
mov
mov
jnp
dec
iret
adc
pop
xchg
adc
fimull
push
pop
cmp
fisubs
push
push
int
cmc
lahf
inc
mov
mov
xchg
and
push
pop
orb
inc
jbe
xchg
pushf
inc
cmc
iret
arpl
stos
sub
xor
xchg
xor
or
jecxz
and
bound
adc
mov
sbb
xchg
sbb
cs
mov
ds
mov
push
dec
push
push
lea
ss
mov
mov
sti
shlb
ds
jmp
mov
mov
sub
or
xor
xor
add
jne
push
and
out
mov
xchg
mov
cmpsb
es
shlb
std
dec
mov
fs
inc
loope
cltd
ret
dec
or
lods
xor
test
fcomps
jnp
jmp
push
cmpsl
push
es
push
push
inc
dec
pop
adc
fs
pop
sub
mov
cli
addl
mov
dec
jne
lret
call
push
dec
jne
pop
sbb
mov
aas
mov
sti
xor
sbb
stc
sub
push
dec
loope
stos
insb
call
jne
rorl
lret
or
out
push
xchg
and
dec
sub
int3
inc
rsqrtps
repnz
dec
inc
cmp
xor
mov
inc
out
fisubrs
xor
or
or
xor
jp
jle
xlat
mov
mov
cltd
mov
dec
mov
out
addr16
and
lds
add
xor
shlb
sbbb
mov
xor
xchg
or
fstpl
std
cmp
movsb
scas
std
insb
or
pop
and
pop
pop
negl
xchg
add
lahf
sbbb
outsl
dec
daa
cmp
or
push
dec
or
xchg
xor
jecxz
adc
add
loope
add
lahf
popf
sti
push
dec
add
push
bound
ret
sbb
push
cwtl
xlat
inc
sub
dec
adc
and
cmovnp
call
icebp
pop
mov
inc
adc
sbb
inc
inc
adc
xor
sub
insw
jg
out
mov
testb
dec
cmpb
pushf
mov
sahf
lock
push
xchg
leave
pop
xor
fs
outsb
push
loope
inc
mov
fldt
and
sbb
push
imul
lahf
jns
sbb
idivb
push
mov
sub
fisubrl
and
mov
test
sub
or
xchg
insb
add
es
cwtl
jns
fs
inc
sub
cmp
mov
gs
pop
lcall
push
out
sbb
pop
stos
sub
pop
gs
cmp
repnz
mov
jae
lods
xor
xchg
mov
mov
shl
das
out
push
dec
cmpsl
icebp
rorb
std
jb
add
jns
and
repnz
ret
xor
in
dec
pop
sbb
inc
sbb
mov
gs
loope
cli
test
sbb
adc
mov
lock
addl
dec
mov
push
mov
sti
lcall
add
jl
jbe
ss
mov
pop
data16
dec
and
lds
adc
je
adc
sbb
cmc
pop
inc
xor
icebp
xchg
add
std
insb
sub
movsb
loopne
aam
pop
xchg
pop
in
aad
int3
call
cmp
inc
or
sub
jae
ficomps
sub
xor
jl
jl
sub
int3
div
pop
adc
test
and
xor
push
mov
cmp
fldln2
adc
xchg
call
aad
lods
outsb
jecxz
xchg
mov
movsl
mov
cmpsb
mov
andb
aam
inc
sbb
enter
out
in
stos
sti
stos
stos
aam
push
out
aad
data16
mov
push
lods
addl
loop
pusha
adc
pop
pop
test
xchg
loop
or
jp
lea
les
cmpsl
pop
jo
rol
aas
jbe
shll
pop
cmp
push
ja
cmp
adc
pop
pop
dec
and
mov
jns
jns
sbb
cmc
jbe
sbb
cmpsl
orb
clc
loopne
cmpsl
mov
das
cli
xor
xor
adc
cmp
adc
or
cld
repnz
es
add
out
out
mov
push
lahf
or
sub
cmp
sbb
jne
cmpsl
push
cmp
jp
cmpl
andb
ljmp
mov
jecxz
insl
arpl
sbb
jno
push
sub
ffreep
cmp
addb
xchg
subb
jp
andl
or
or
popf
aad
call
icebp
sub
cmp
push
lods
and
xor
fcomps
fidivrl
xchg
mov
shl
into
xchg
in
cmp
stos
sbb
sub
push
pop
cld
mov
cmp
out
call
daa
stos
adc
in
xor
out
inc
jb
bound
push
movlps
cltd
test
int3
mov
xor
cmc
lret
or
in
adcb
and
ficoms
imul
or
mov
add
mov
andb
inc
mov
jg
ss
sbb
pushf
lsl
cmp
daa
dec
int3
ss
dec
cwtl
outsb
mov
sbb
jge
and
sub
shlb
insl
pop
pop
xchg
movsl
cmc
cmp
push
dec
insb
xchg
adc
dec
add
rclb
in
ds
and
popa
les
mov
ss
adc
lea
jg
and
hlt
mov
outsl
aas
sti
sub
add
movsl
cmc
xchg
clc
loope
xchg
mov
push
incl
fldt
lock
leave
push
jp
dec
fldcw
mov
loopne
arpl
pop
add
xchg
sub
mov
rclb
bound
cmp
fnstsw
sbb
outsb
dec
faddp
fadd
outsl
mov
out
mov
imul
lock
mov
into
and
sbb
mul
mov
xchg
testl
pop
push
lds
mov
fbld
stos
cmp
loopne
lahf
mov
mov
push
or
mov
fidivrl
subb
nop
xchg
aaa
add
stos
or
rorb
jb
push
mov
iret
ja
cmpsl
aam
adc
push
xchg
imul
outsb
inc
mov
icebp
and
push
leave
mov
xor
call
mulb
cmp
mov
popf
leave
into
adc
jle
mov
inc
cltd
xchg
cmp
dec
outsb
insl
in
in
mov
imul
push
mov
pushl
mul
push
sub
jnp
mov
insb
fcomi
ds
in
loope
add
shl
les
push
mov
cmp
and
sub
scas
xchg
sahf
lods
mov
cli
jno
jg
orl
test
pop
dec
jb
icebp
ds
scas
frstor
cmp
sbb
repnz
sbb
jne
cltd
mov
pop
lods
jle
inc
pop
fadd
shr
jno
icebp
and
dec
inc
shlb
jle
js
out
mov
mov
loopne
pop
jb
pop
xchg
mov
movsb
xor
imul
mov
mov
in
stos
decl
sbb
inc
dec
cmp
loopne
aaa
int
imul
push
and
aas
and
int3
pop
mov
fwait
jl
push
lock
push
push
stc
scas
fimuls
or
or
cwtl
popf
into
jae
jg
jg
cld
cmp
mov
mov
add
mov
jecxz
rcr
or
hlt
inc
enter
aam
iret
add
mov
fwait
pop
cwtl
ret
or
fwait
dec
ftst
roll
mov
push
std
and
jns
out
cmpsb
xor
push
xlat
cwtl
imul
arpl
inc
mov
xlat
cmp
jno
sub
jle
test
cmp
fs
imulb
insl
mov
inc
mov
mov
repnz
adc
fimuls
sbb
shl
test
or
fdivl
cmpsb
lods
ret
imull
jno
loope
enter
imul
pop
inc
mov
repnz
das
pop
cmp
push
mov
jecxz
movsb
dec
xchg
es
add
sub
xor
sbb
xor
fisubrs
ret
push
cmp
shl
add
cbtw
jbe
in
mov
mov
xor
lock
xchg
xchg
insb
xchg
push
add
sbb
sti
js
pop
and
lret
dec
jo
loopne
push
aas
lds
aas
adc
xor
aas
movsb
bound
cmp
leave
push
out
mov
in
push
inc
inc
out
leave
sbb
xor
jecxz
sahf
xchg
mov
and
mov
jo
xor
nop
daa
cwtl
add
popa
mov
inc
insl
ret
push
add
or
mov
outsb
mov
rcr
outsb
jo
mov
enter
daa
popf
add
inc
sub
hlt
data16
mov
and
das
mov
dec
mov
aam
ds
stc
arpl
push
mov
adc
out
push
cmp
pop
mov
loop
notl
and
cmp
cli
mov
lret
sub
cmp
adc
mov
or
lds
insb
lahf
sub
push
daa
sar
mov
gs
and
mov
push
icebp
out
jo
jo
add
inc
in
mov
dec
cmp
add
xchg
xchg
fiadds
xlat
adc
jge
mov
cmp
test
jne
pop
inc
mov
lods
out
out
leave
inc
sti
scas
jne
rcll
pop
aad
mov
repnz
mov
je
shlb
xchg
testl
lcall
sbb
gs
cmpsb
aad
push
dec
jb
inc
int
cmp
inc
adc
ds
cmpsl
mov
push
add
jns
xor
mov
mov
jnp
adc
jmp
push
push
push
adc
aaa
inc
fldcw
aas
pop
mov
mov
pop
call
outsl
jmp
stos
xchg
jecxz
cmp
pop
loope
add
pop
lret
xor
mov
repz
aas
adc
addr16
jge
add
sub
cmp
fadd
push
sbb
jmp
in
out
data16
dec
das
push
jle
add
subb
pop
into
mov
cmp
inc
mov
sbbl
mov
pop
ret
nop
push
lahf
cmp
int
call
lret
fnsave
mov
xchg
mov
flds
jbe
je
and
je
xchg
aas
enter
vrcpps
jl
cld
in
or
mov
mull
cmp
or
mov
ret
inc
xor
push
mov
fcoms
stos
xor
sbb
cltd
push
sub
and
inc
leave
rolb
cs
inc
jbe
imulb
nop
add
xchg
rolb
fisttpl
imul
lret
icebp
pusha
xor
adc
fmulp
add
xor
xchg
lock
mov
jmp
cmp
pop
mov
jb
mov
jecxz
sbb
and
sbb
xor
les
adc
mov
and
add
sbb
push
lret
jmp
mov
jl
mov
test
xchg
frstor
xorl
pop
cmpsb
mov
mov
xor
mov
cmpsl
lcall
sbb
mov
mov
into
push
mov
jne
fstl
jns
add
rol
clc
mov
loopne
mov
ss
sbb
pusha
add
aas
loope
cli
shll
imul
jne
xchg
mov
mov
dec
imul
sub
jno
xor
pop
xor
movsl
pusha
unpcklps
push
inc
out
inc
pusha
jg
inc
mov
mov
fnstsw
jle
test
mov
sti
movsl
dec
aaa
shlb
sbbb
xorb
xchg
fsubl
xor
add
dec
inc
add
xor
jae
test
xor
xor
std
xor
rorl
fisubrl
jae
call
inc
mov
cwtl
cwtl
icebp
inc
daa
movsb
mov
lock
pop
repnz
pop
add
fimull
repnz
jle
xchg
mov
inc
fadds
movsb
jo
lods
out
rcrb
and
inc
pop
loop
das
cmpsl
mov
push
xchg
jno
mov
and
int3
rclb
in
or
imul
xlat
cli
add
sbbl
add
sbbl
xchg
adc
mov
mov
mov
push
pop
mov
pop
add
mov
aam
orb
xor
cmp
dec
push
popf
aam
subl
cmp
in
add
jmpw
push
cltd
mov
in
ss
ljmp
jb
idivl
dec
ret
addb
outsl
mov
adc
pop
clc
lds
push
fstpl
mov
and
popa
jl
rcrl
and
scas
cmp
aas
fidivl
cmpsb
fsubrl
jle
and
push
pushf
adc
rol
sbb
fsubrs
orl
dec
hlt
fadd
xor
or
sahf
sti
ljmp
ljmp
sub
mov
add
je
mov
dec
fistl
lea
pop
cmpsl
sub
or
adc
aam
pop
jp
sti
loop
dec
sbb
rorb
pop
loop
push
sbb
ds
leave
ja
dec
int
sbb
adcw
inc
mov
lea
leave
sbb
mov
add
fisubs
int
push
fisubrs
mov
push
cmc
shlb
sbb
js
dec
mov
shr
push
add
and
outsb
and
push
fwait
pop
mov
roll
push
mov
cld
aad
jecxz
bound
inc
cmc
fsubs
or
dec
mov
cwtl
inc
popfw
pop
lock
xlat
repz
xchg
jns
mov
jae
aam
or
or
inc
nop
cld
jle
sub
mov
rcrl
repz
pop
je
pop
adc
xor
cmpsl
aas
and
jmp
push
fs
repnz
stos
daa
movsl
push
scas
cs
dec
xor
adc
imul
icebp
push
jmp
aas
cli
inc
int
pop
notb
and
andps
jno
mov
idivb
inc
sbb
inc
data16
out
fs
dec
jge,pt
sahf
in
pop
or
mov
or
and
mov
xor
xlat
mov
pop
shrl
es
daa
out
adc
cltd
inc
lret
add
dec
out
push
jbe
mov
fs
xor
sbbb
dec
dec
rcrl
push
xor
cmc
sbb
jbe
js
fidivl
daa
mov
stos
lret
and
pop
movsl
mov
mov
fdivrl
push
add
in
arpl
cmp
sub
or
add
loopne
add
cli
adc
mov
dec
sti
aas
xchg
cltd
movsb
mov
or
movl
push
sub
jmp
js
mov
int
fldl
imul
dec
fists
data16
mov
or
aam
adc
mov
sub
xlat
sahf
lea
stos
scas
dec
shrb
sbb
jle
out
and
aad
cltd
cmc
mov
int3
fchs
push
xchg
and
push
pushf
loop
fnstcw
cmp
xor
sbb
shrb
mov
decb
das
sub
repnz
inc
ret
xchg
jne
sbb
add
jne
repz
mov
call
jecxz
pop
loop
je
mov
movsb
aad
movlps
jns
lret
inc
fildl
mov
cs
mov
ret
sub
mov
dec
dec
add
loope
cli
sbb
rorb
ret
push
lret
pop
mov
adc
add
test
ljmp
mov
push
jle
test
out
stc
fwait
stc
mov
adc
dec
daa
jle
test
sub
mov
jp
bound
xchg
lds
ret
test
sub
add
cmpsl
cmp
imul
xor
and
or
lds
or
cmpsb
sub
inc
pop
pop
mov
xlat
push
dec
mov
push
std
divb
pop
mov
xor
popa
or
outsb
adc
jae
xchg
and
ss
jns
dec
sbb
das
in
cmp
cs
mov
repnz
dec
lods
dec
cmp
sub
rolb
loopne
mov
arpl
sahf
fimull
repnz
mov
lea
pop
outsb
cmp
scas
lcall
cld
divl
in
and
push
nop
jns
mov
xor
les
in
lock
or
sbb
dec
pushf
xchg
and
leave
sbb
and
shl
stos
lcall
cwtl
movsl
adc
mov
rorb
ja
sbb
adc
or
jl
xor
xchg
test
fxam
push
fstpt
jle
mov
inc
insl
je
jecxz
out
xchg
loopne
xchg
mov
sub
mov
jle
cmp
jno
mov
cmpsl
pop
sub
fcomps
mov
mov
adc
lret
xchg
fstps
push
adc
push
jae
fcmovbe
lods
ret
test
out
cltd
ret
ja
sub
aam
iret
mov
mov
xor
mov
rolb
add
pop
xor
and
cmc
stos
insl
leave
call
cmp
mov
sarb
push
jecxz
in
dec
aad
mov
scas
jo
add
mov
int3
mov
pop
xor
jae
ljmp
popf
xchg
mov
inc
lret
cmp
jbe
mov
or
push
xor
stos
stc
iret
pop
outsb
xchg
test
mov
test
or
mov
ret
mov
ljmp
test
das
pushf
mov
xorb
cvtps2pd
mov
xchg
cld
ja
test
sbb
mov
les
dec
mov
sub
and
stc
mov
dec
insb
mov
sub
arpl
push
xchg
lds
mov
mov
push
cmp
pushf
add
shll
rclb
or
adc
lock
imul
and
ds
jns
addr16
stc
xor
pop
pop
imul
xor
pop
sub
pop
out
push
ret
jae
mov
ljmp
pop
leave
xor
cmp
outsl
mov
fcmovb
pop
mov
std
out
bound
inc
sarb
nop
mov
push
sbbb
sub
int
pop
pop
pushf
ja
mov
jnp
mov
in
xlat
fs
and
scas
add
sbb
sbb
cmp
pushf
js
data16
xor
decl
push
or
cmp
shrl
mov
out
inc
jecxz
pop
cmp
pop
pop
and
and
das
addb
inc
stc
inc
inc
sbb
jnp
adc
test
mov
stos
and
dec
in
xchg
and
cmp
ret
xchg
push
aaa
jo
les
in
in
and
cmpsl
fisubrl
jne
scas
arpl
sub
dec
jg
jne
adc
idivl
mov
jne
sub
popa
xchg
add
or
add
dec
or
lds
add
push
in
dec
inc
sub
inc
dec
cmp
js
aaa
mov
sbb
addb
xchg
or
stc
into
cmp
fsts
dec
pop
adc
add
sbb
mov
add
sti
add
push
pusha
daa
sub
add
xchg
xor
aad
add
pop
shlb
leave
push
clc
out
fs
push
sbb
into
dec
jbe
xchg
dec
lret
pop
ljmp
cli
lods
clc
shlb
mov
sbb
jp
or
or
nop
push
or
push
or
nop
sbb
sub
loopne
cmc
movsb
sti
sub
xchg
lods
add
dec
add
sub
test
xchg
push
jns
hlt
xor
sbb
dec
jge
fwait
xchg
scas
dec
cmp
cmp
out
mov
incb
dec
adc
mov
xor
rorb
dec
rorl
sub
push
stc
jmp
dec
aaa
xchg
dec
inc
cltd
repnz
xchg
cmp
lock
in
fwait
cmpb
jmp
cmpsl
mov
xor
pop
jecxz
inc
outsl
adc
je
push
fwait
pusha
rcrb
mov
push
cmc
cmpsl
pop
jns
push
notl
add
repnz
sub
mov
mov
cmpsb
push
lahf
push
add
adc
xor
xor
dec
push
das
xchg
add
pop
dec
mov
fs
bound
scas
and
test
rcr
mov
mov
imul
les
or
addr16
push
add
stos
dec
xchg
inc
or
stc
and
mov
dec
mov
lock
std
loopne
int
push
int
mov
pushf
lahf
js
pop
push
movsl
add
daa
xchg
adc
jmp
shrl
fmull
jb
subb
lcall
fnstenv
jnp
pop
xchg
fsubrl
xor
ja
push
xor
jg
dec
jno
out
out
iret
loope
scas
pop
repz
cmc
lods
sub
xlat
mov
cli
outsb
push
out
sub
add
mov
lea
aaa
mov
sub
movsb
pop
inc
add
rol
dec
add
les
sar
push
xchg
and
pusha
adc
enter
push
lahf
mov
mov
arpl
mov
push
sub
push
mov
imul
scas
and
mov
lea
inc
test
jb
push
mov
cmpb
ljmp
cmp
pop
inc
adc
push
xchg
pop
call
out
mov
popa
mov
mov
fs
pop
xchg
mov
dec
scas
lods
push
lds
arpl
test
into
dec
lcall
movsb
lds
dec
and
xchg
sti
push
jae
mov
sbb
or
mov
mov
mov
out
ljmp
ljmp
scas
ret
cmpsb
sbb
ja
cmpsb
add
or
fists
cmc
movsb
jg
dec
imul
sub
push
movsl
in
mov
and
stos
ds
mov
lret
cmc
mov
mov
jg
bound
jo
es
jmp
push
xchg
ficomps
fisubs
and
xchg
xor
pop
mov
xor
jmp
lods
into
leave
es
push
mov
jge
mov
int
in
lret
push
jecxz
add
mov
dec
sarb
or
push
cli
lea
xor
cmp
jne
mov
cmp
testb
jo
das
lret
popa
iret
cmp
cmp
push
stos
push
cmpxchg
pop
fucomip
mov
hlt
pop
cwtl
daa
imul
cmc
test
add
mov
xor
mull
jbe
mov
in
in
adc
cs
and
mov
test
loop
lcall
inc
push
push
pop
cmpsb
mov
mov
cmc
je
loop
mov
shll
orb
cmp
push
lock
jmp
adc
test
mov
mov
stc
pop
pop
sbb
shrb
mov
mov
mov
fnsave
es
inc
mov
test
xchg
loope
scas
adc
jp
mov
or
dec
fwait
sbb
outsl
xor
jbe
rcrb
push
mov
sahf
push
mov
in
out
jge
addr16
push
xchg
inc
jae
mov
push
sarl
xchg
data16
push
fdivrl
decb
in
icebp
popf
jmp
sbb
ret
sti
sub
clc
pop
jns
js
clc
aam
aad
dec
pop
push
adc
fwait
xor
std
mov
scas
push
insb
push
mov
in
xchg
mov
lcall
cld
ret
xor
and
jbe,pt
pop
add
push
test
std
adc
aaa
pop
pop
and
cli
packssdw
stc
lret
dec
cltd
outsl
rorb
out
std
add
insb
and
test
addb
pop
out
sub
or
outsb
lahf
std
subl
dec
orb
test
mov
js
add
cli
sub
fdivr
xchg
mov
inc
cwtl
test
sub
in
and
lods
fs
arpl
mov
lods
or
aam
or
push
or
sub
das
mov
test
mov
into
into
push
nop
mov
add
push
lcall
lret
ret
mov
adc
xchg
fistpl
dec
sub
repnz
ljmp
xchg
arpl
cld
adc
mov
dec
insb
fiaddl
dec
sarb
push
mov
dec
inc
inc
lahf
outsb
mov
jg
push
pop
cmp
jmp
ret
out
ds
lods
imul
lcallw
xchg
pop
mov
sub
rolb
int
loopne
aas
inc
jle
jae
filds
sahf
dec
push
xlat
cwtl
fisttpll
ret
insl
mov
test
fs
iret
cmp
jne
loop
push
xchg
rcll
into
mov
fwait
pop
ficomps
repz
fdivrl
out
push
mov
cmp
int3
loopne
andl
roll
xchg
jmp
sbb
cwtl
fadds
pop
stc
inc
push
xor
mov
jb
xor
cld
fsubr
cld
sbb
jmp
ljmp
jle
sbb
add
inc
dec
pop
mov
push
sub
pop
cmp
sarl
sub
lcall
int
and
xor
mov
imulb
ret
adc
ficoms
and
push
pop
inc
test
dec
add
in
dec
push
sbb
das
shl
and
xor
sub
inc
outsb
cmc
pop
mov
xor
cmpsb
mov
gs
psubw
repz
adc
or
pop
xchg
mov
add
ja
xor
dec
fdivs
mull
adc
mov
insb
lret
mov
dec
mov
or
pop
mov
and
push
mov
cmpsl
sbb
push
pop
test
mov
push
jmp
dec
and
xchg
xchg
push
pop
fsts
ds
jmp
out
fcoml
outsl
pusha
rorb
or
mov
dec
pop
adc
stc
inc
dec
mov
gs
xlat
mov
fistps
xchg
sub
fmull
mov
cmp
mov
adc
sub
lret
orb
mov
mov
and
js
xchg
ficomps
in
sub
push
mov
mov
mov
aam
ljmp
inc
pop
push
aam
loop
cs
xchg
ss
mov
test
add
fucom
and
int3
insb
mov
addr16
and
pop
ret
pop
lcall
je
rol
and
add
into
add
inc
xchg
daa
dec
movsl
pop
xchg
pop
repnz
adc
test
push
cmpsb
pushw
cld
adc
cmp
rclb
js
js
inc
sub
and
jo
fdivrs
dec
call
xor
sahf
sbb
pop
inc
lods
enter
sahf
js
sub
add
cs
xor
adc
lcall
hlt
decb
inc
or
std
sub
jbe
jg
adc
cmp
adc
mov
lcall
pushf
jbe
mov
outsl
pop
or
lahf
lea
and
popf
fists
pop
xlat
jae
pusha
pop
nop
mov
xchg
lret
dec
fcmovnb
inc
mov
fcmove
sub
outsb
idivl
fwait
mov
cmp
jo
xchg
dec
adc
stc
repz
popa
mov
icebp
aas
mov
mov
or
xchg
nop
dec
mov
les
fwait
mov
mov
cltd
rcrl
or
jp
inc
call
addr16
push
stos
xor
or
ret
mov
dec
xorl
fildll
loope
xchg
or
xchg
fcmovu
and
or
and
or
adc
aaa
loopne
inc
ficoml
push
dec
push
je
xlat
fxch
mov
xchg
pusha
mov
rorl
sub
and
icebp
int3
cmc
add
cmp
hlt
outsl
fxch
fcmovnu
xor
loope
cmp
imul
inc
rcll
xchg
add
mov
shll
outsb
pop
sbb
xor
pop
xor
js
fnstenv
xor
ret
outsl
lds
adc
pop
jle
jae
sub
rcr
pop
mov
cmp
daa
and
xor
add
lds
mov
jne
das
fmul
mov
adc
test
jno
sbb
lds
test
mov
popf
test
in
add
or
push
cmp
sbb
pusha
fxam
pop
cmp
sub
and
rolb
mov
stos
loop
add
xchg
jl
xchg
jo
mov
scas
insb
push
push
mov
jl
adc
popf
stc
push
jmp
orl
mov
scas
ds
test
dec
mull
push
in
or
pop
stos
push
mov
shlb
pop
idivb
push
xor
and
push
test
aas
sti
jo
es
mov
sbb
cmpsb
and
jno
lods
ret
push
lret
addr16
and
xchg
mov
xor
xor
insb
stc
cmp
rorb
xchg
fmuls
inc
cld
adc
jge
inc
pushf
lret
scas
mov
in
pusha
add
loopne
lods
jl
rol
addr16
popf
cld
ljmp
les
sub
xchg
inc
je
popa
push
mov
sbb
push
cli
or
shlb
inc
icebp
dec
bound
cmp
add
cld
pop
loop
cmpsb
arpl
mov
xchg
mov
cmp
add
insb
jbe
aaa
jmp
xchg
cmp
fisttps
sahf
fcomip
mov
or
pop
pop
dec
xor
int3
repnz
dec
mov
cltd
pop
sub
mov
pop
mov
push
test
loope
cmp
imul
lcall
and
sbb
mov
sbb
or
mov
mov
scas
mov
pop
jp
popa
cmpsb
sub
mov
out
out
cltd
dec
fwait
loop
dec
jnp
inc
push
mov
cmc
jle
and
xchg
pop
sbb
xchg
mov
jp
sub
ret
jle
dec
scas
add
xorl
cwtl
fnsave
icebp
mov
jmp
insb
mov
mov
sub
in
hlt
cmpsl
hlt
sahf
dec
ficompl
mov
adc
and
aas
shlb
dec
pop
xchg
add
aaa
jae
repnz
dec
dec
dec
push
xchg
xchg
mov
inc
lret
adc
int
mull
adc
xchg
les
sub
fldl
outsb
pop
mov
mov
xchg
adc
aad
xlat
add
push
cmp
aam
out
lcall
test
xchg
pop
xchg
mov
std
mov
lds
ret
pop
cli
sub
leave
push
addr16
and
lods
cltd
mul
xor
adc
enter
xchg
cwtl
dec
push
jl
sub
ljmp
mov
xor
mov
arpl
and
rclb
push
xlat
xchg
sub
cmp
jg
fisttps
popf
sbb
clc
into
xchg
stos
fbstp
std
sbb
pop
fstps
jp
nop
jo
jbe
cwtl
repz
add
jns
or
gs
lret
and
in
cmpsb
test
nop
iret
cltd
arpl
in
ficompl
les
int
ja
cmc
adc
test
pop
mov
inc
and
repnz
neg
shlb
lret
jns
in
mov
push
out
and
push
fistpll
jle
sbb
imul
pop
and
insl
gs
and
and
pushl
lea
daa
aaa
xlat
jbe
mov
in
in
sbb
and
mov
loopne
incb
or
or
daa
sub
and
push
push
jp
fistl
les
dec
fwait
jge
lock
xor
dec
lds
enter
subb
out
mov
add
pop
addl
dec
push
inc
cmpsl
ss
push
xchg
les
lds
and
or
push
and
mov
xor
or
adc
mov
jne
push
ja
push
loopne
subl
cmc
cmp
shlb
cmp
and
inc
scas
mov
inc
or
sub
lods
popa
test
inc
cmp
insb
xchg
rcr
push
sub
sbb
ficompl
fsubrs
jle
stos
pop
imul
stos
push
cmpsl
push
xlat
pusha
and
adc
aaa
movsb
pop
mov
test
scas
jb
cli
leave
mov
in
push
pop
lcall
mov
pop
mov
add
add
mov
add
inc
test
xlat
jnp
dec
sub
pop
sbb
loope
fwait
int
test
mov
or
adc
popa
sub
js
scas
cwtl
test
xor
mov
xor
mov
arpl
cmpsl
fs
sahf
fwait
lahf
dec
add
test
test
xlat
ss
dec
cld
ret
movsb
mov
adc
je
add
push
in
push
or
inc
pusha
gs
loopne
pop
mov
cmc
jo
xchg
pop
dec
fnstenv
lahf
dec
ror
into
lea
lods
stc
in
lods
jl
adc
mov
cltd
stos
sbb
or
out
sub
test
mov
xor
outsb
out
fwait
loope
into
in
into
pushf
xor
scas
test
into
push
stos
add
pop
push
loope
sbb
das
push
in
adc
add
and
or
lods
push
mov
cmpsl
test
test
fisubrl
imul
in
mov
addb
sbb
rep
jle
adc
daa
sub
mov
add
sub
sbb
jmp
xchg
add
mov
add
lea
lds
push
and
jp
repz
lcall
xor
and
jae
push
fldt
mov
scas
dec
or
inc
mov
fbld
mov
xchg
fs
lods
inc
ljmp
das
aaa
enter
fisubl
fimuls
adc
subb
ficompl
imul
dec
in
test
out
and
rorb
lock
in
jg
jb
dec
ret
or
cli
adc
push
push
mov
push
xchg
repnz
das
lods
xchg
push
push
push
xchg
test
sarb
adc
push
jl
push
outsl
cwtl
jle
in
adc
iret
ja
sbb
sbb
aam
dec
pop
push
orl
testl
test
lock
xchg
movsb
xchg
cmp
mov
pop
sahf
cmpsl
push
mov
mov
cmc
mov
sbb
mov
fimuls
pushf
sub
and
and
lock
mov
into
ret
push
cmp
imul
movsl
dec
sbb
push
xchg
aaa
hlt
aas
add
add
jg
fistpll
push
dec
jae
cmc
faddl
rcrb
inc
push
sbb
push
scas
ss
fnstenv
jno
insb
test
sbb
cli
fldln2
push
les
xor
repz
inc
popa
and
jp
scas
fcmovnb
pushf
sbb
shrb
mov
nop
sub
push
popf
sub
pop
fwait
hlt
inc
and
xchg
mov
clc
and
rolb
xchg
or
fisttpl
imul
add
xor
int3
test
iret
mov
ds
ljmp
and
out
outsl
sub
enter
fwait
lods
jle
and
xor
lods
mov
dec
fwait
adc
mov
dec
shlb
loopne
aam
pushf
adc
cmp
mov
ret
push
fs
jns
jne
andl
xchg
and
les
dec
test
pop
call
movsb
cmpsb
dec
jecxz
jb
adc
pop
neg
xor
into
inc
mov
push
in
or
stos
out
push
decl
mov
xor
sbb
inc
dec
inc
in
xchg
cltd
lret
aam
rolb
mov
and
clc
ficompl
std
lahf
pop
mov
shrb
fwait
in
push
lcall
sub
pop
mov
insb
adc
sub
repz
fidivs
out
ja
mov
lahf
ret
add
jns
pop
out
xor
out
test
mov
ret
call
sbb
js
jbe
les
sbb
loopne
or
push
mov
jecxz
push
push
aam
jb
sub
pop
xor
cltd
test
sub
inc
and
mov
and
cld
cmp
pop
aas
nop
mov
cwtl
std
or
repz
mov
mov
add
cmp
jne
test
ds
jbe
stos
loope
rcl
jp
notl
mov
xchg
popa
ds
sub
mov
sub
ss
imul
cs
pop
movsl
outsb
cli
cmp
xchg
enter
fsubl
sub
add
xchg
push
aaa
repnz
inc
adc
sbb
loopne
push
adc
jmp
cmc
cli
or
outsl
mov
pmullw
push
and
or
sub
addr16
xchg
push
fwait
xlat
stos
push
stos
out
xchg
in
xor
jo
scas
loope
fidivl
pop
rcrl
testb
cmp
cmpl
mov
mov
and
es
nop
mov
or
xchg
jge
daa
jb
mov
jno
inc
dec
jp
dec
std
repz
inc
clc
sahf
mov
int3
aaa
out
in
jecxz
sbb
inc
pop
xchg
cmc
cmpsl
mov
fimull
clc
aaa
jg
cli
pop
xor
xor
pop
push
cmp
outsb
xchg
mov
cs
or
dec
push
mov
or
lods
insl
out
or
clc
jno
dec
xchg
sarl
inc
mov
loope
hlt
adc
stos
or
iret
cmp
adc
subb
fxch
add
push
mov
lods
fisubrs
iret
aad
xlat
scas
add
testb
test
inc
xchg
inc
test
cmc
sub
pop
sub
or
xchg
mov
cmp
xchg
dec
mov
cltd
jo
mov
std
scas
dec
ja
stc
push
jb
jne
test
xchg
push
mov
repnz
jecxz
aam
mov
in
out
jns
shlb
inc
jle
xchg
cmc
mov
mov
in
push
cmp
loopne
ficompl
es
mov
repnz
jge
fstpt
mov
imul
jbe
ja
xlat
or
lods
add
xchg
clc
dec
testl
jae
aad
mov
or
nop
pusha
lret
mov
jecxz
and
stos
mov
push
mov
hlt
xchg
shll
jno
jg
fsubs
mov
inc
push
lock
fs
fists
push
push
or
aas
ror
cmpsb
loopew
dec
or
in
in
mov
cmp
loope
mov
inc
std
adcb
cld
out
icebp
pusha
sbb
inc
cmpb
mov
add
cltd
or
insb
mov
push
mov
in
and
push
int
mov
adc
lcall
and
add
dec
sbb
mov
pop
test
das
add
fsts
sub
inc
dec
std
fisubrl
jmp
push
lea
in
loop
jp
sub
call
mov
add
dec
scas
aad
outsl
pop
jmp
fcmovnu
imul
lcall
push
mov
aaa
cli
jl
fsubrl
jle
cli
mov
jbe
mov
hlt
lahf
pop
loopne
pop
push
ret
pusha
mov
insl
sbb
inc
add
mov
insl
pop
movsl
adc
sbb
push
jbe
lret
int
fwait
cmp
rcrl
cmc
test
xor
mov
push
xlat
xlat
xor
cmp
or
cmp
mov
mov
pop
inc
dec
loopne
jnp
lcall
xchg
addb
mov
add
cltd
lods
pop
mov
or
inc
jae
mov
inc
fldl
pushf
sbb
pop
sti
out
jne
mov
fstl
mov
rcll
cmp
mov
adc
or
xor
scas
cmpb
test
mov
fiadds
popa
fidivs
or
inc
fisttpll
push
push
out
mov
out
pop
lret
movb
mov
movsl
push
mov
xor
into
int
cmc
or
pop
test
fsubrs
add
sbb
and
cld
xchg
inc
mov
dec
enter
into
mov
jo
aad
das
mov
xor
arpl
xor
and
inc
cltd
scas
sub
xchg
xchg
daa
stc
and
and
insb
mov
jg
push
jl
jne
faddl
in
xchg
rorb
and
pop
mov
aad
ja
pop
pop
sbb
or
pusha
in
cmp
dec
xor
int3
sbb
shrl
push
mov
or
push
or
mov
push
mov
js
lds
cld
lock
jne
in
icebp
pop
test
out
movsl
sub
insb
int3
push
add
lods
mov
fsubrs
sbb
fidivs
and
movsb
pop
inc
or
scas
mov
and
mov
jb
sbb
cltd
jno
ret
lret
push
out
cmp
lcall
cltd
dec
dec
lret
fildl
cmp
sbb
jmp
fcmovb
jbe
mov
sub
addb
cmp
lret
xorl
mov
outsl
ljmp
cmc
push
dec
mov
push
push
rcl
add
roll
lret
cmpsl
shlb
jecxz
imul
imul
ss
faddl
adc
xchg
imul
pop
push
dec
pop
fdivrl
int3
inc
jb
addr16
and
jl
cwtl
cmp
fdivs
mov
pop
cmp
cli
and
mov
jecxz
outsb
sbb
pop
in
jmp
sub
sbb
xor
inc
stos
add
pop
test
mov
push
mov
push
jmp
add
movsl
add
add
mov
clc
fidivrl
ja
adc
std
cld
cmp
js
xor
stc
or
fistpl
fmull
lret
sub
jg
aas
or
mov
inc
mov
add
push
cmp
mov
mov
inc
cmp
stc
sub
lret
mov
cld
add
rcl
push
iret
pop
loopne
push
shl
sub
lahf
js
stos
mov
inc
cmp
xlat
addb
les
mov
jns
sbb
int3
mov
mov
dec
movsl
sub
mov
mov
add
fimull
adc
jmp
and
sub
cmpsl
jb
or
xchg
stos
mov
gs
inc
cmp
dec
push
pop
movsl
fsubs
or
testb
rcll
dec
adc
and
jmp
jl
std
lods
sbbl
loop
ljmp
push
cmp
out
mov
sti
jae
or
sub
mov
aaa
sbb
movsb
mov
sbb
mov
decl
ljmp
arpl
mov
stos
xchg
add
pop
jno
mov
inc
std
data16
call
push
xchg
inc
sub
mov
add
pushf
push
mov
jbe
jb
mov
les
ds
push
js
sbb
ja
scas
das
ljmp
inc
jge
and
xor
pop
mov
lahf
bound
fldl
aas
jns
pop
sbb
cmp
inc
ficomps
loop
es
cmp
int3
dec
mov
stc
or
inc
xchg
sub
mov
push
add
pop
mov
fdivp
outsl
call
pop
cmp
xor
pushf
lea
jmp
test
sub
xor
xorb
aad
cmp
cmp
sub
push
aam
push
jp
sub
cmp
and
mov
jle
sbb
lahf
add
pop
xchg
xor
and
lock
mov
jecxz
fmulp
jae
jmp
outsb
or
movsl
test
enter
push
dec
dec
push
mov
test
or
ret
in
mov
int
fadd
cmp
es
add
jbe
aas
ret
or
inc
fsubs
mov
in
mov
daa
sar
loopne
mov
mov
daa
mov
aas
push
imul
aam
xlat
and
dec
pop
push
pop
inc
hlt
push
sbb
sub
pop
cwtl
sub
push
testl
jmp
adc
insl
or
xor
sbb
outsl
push
fistl
stos
mov
adc
add
add
mov
mov
les
sub
xor
jl
mov
fldcw
test
pop
fwait
stos
repnz
cmp
cmp
xchg
mov
mov
lds
pop
gs
and
nop
mov
rclb
lret
test
pop
outsl
insl
mov
shl
shrb
inc
data16
in
pop
mov
xor
xchg
mov
iret
jne
gs
movsb
inc
aaa
mov
and
mov
jns
ret
fisttps
es
mov
cmpsb
xchg
scas
dec
icebp
pop
repnz
add
rolb
leave
cmpsb
lods
and
iret
mov
lock
xchg
sbb
scas
mov
cmp
sbb
fisttpll
jg
lahf
jmp
adc
cmp
outsl
pop
mov
lods
add
sbb
mov
cld
mov
jb
mov
fnstenv
push
pushl
fldl
fidivrs
imul
mov
mov
pslld
add
or
js
loope
mov
sub
ret
sbb
push
imul
rorb
cmp
sub
inc
comiss
pop
mulb
cmp
movsl
mov
out
cli
imul
iret
add
dec
xchg
lds
pop
imul
int
es
mov
push
inc
popf
das
out
push
arpl
jl
sti
ljmp
xchg
jo
ss
or
cmp
add
dec
lock
jp
in
fmul
lods
xor
ficomps
push
sbb
and
or
cmovnp
in
jmp
in
sti
call
sub
repnz
mov
push
lret
and
pop
or
iret
daa
pop
iret
jg
xchg
jmp
gs
cmp
repz
mov
arpl
into
adc
dec
outsb
push
push
and
clc
xchg
imul
mov
add
pop
out
and
sub
add
ss
jle
ljmp
dec
fwait
lret
adc
fcoml
xlat
mov
int3
cltd
out
push
lods
and
push
jns
imul
fnsave
std
test
pop
push
sub
out
sub
or
sub
xor
icebp
dec
stc
inc
or
hlt
xor
enter
outsb
repz
shlb
adc
xchg
jp
sbb
bound
out
outsl
add
or
mov
add
mov
add
adc
push
xchg
aas
or
push
rclb
sub
xor
leave
fwait
push
into
lock
add
ret
mov
or
pop
inc
mov
sub
in
fwait
push
inc
mov
out
mov
mov
mov
fcompl
mov
mov
cmp
add
fwait
bound
les
xor
int3
lods
fwait
jne
aaa
mov
movb
inc
scas
xor
pop
das
and
mov
out
incl
scas
mov
mov
mov
gs
cmp
and
mov
adc
leave
lret
xor
sti
xor
je
jb
inc
cli
lret
in
es
inc
and
mov
sbb
jnp
mov
rolb
cmpsb
pop
sub
daa
push
out
fs
fistl
out
rorb
popf
sub
fidivs
or
sti
push
mov
hlt
push
push
fldenv
or
je
rcl
add
pop
fistl
xor
xor
mov
inc
push
adcb
mov
aam
mov
mov
das
cmp
setge
mov
lret
in
push
jb
mov
lret
out
and
jecxz
pop
test
mov
jle
adc
jns
pop
inc
push
lds
fcmovbe
dec
mov
mov
hlt
xchg
popa
push
mov
fistpll
xchg
divb
aad
outsl
cwtl
mov
idivb
inc
das
andl
jmp
sahf
hlt
mov
add
pop
pop
push
jecxz
cwtl
lea
inc
and
and
and
cmpsl
and
inc
mov
scas
rcll
gs
push
lcall
ljmp
xor
mov
iret
sbb
cmp
or
outsl
js
mov
mov
add
test
fwait
addr16
ss
sahf
lock
pop
dec
and
cmpsl
add
mov
std
or
add
movsl
adc
icebp
shrb
rorl
iret
std
fmull
nop
sub
adc
sbb
cmp
or
in
ss
sarb
loopew
shrl
out
or
fld
lods
loop
xor
push
push
btr
pushf
stos
pop
loope
mov
data16
pushf
lahf
adc
lods
or
push
push
push
imul
in
cli
fnstcw
xor
ja
cmpsl
es
jne
cwtl
mov
call
sub
xor
ljmp
add
insl
pop
mov
or
in
lods
push
xor
divl
adc
imul
mov
mov
popa
out
ja
aad
jge
jnp
and
insb
leave
push
popf
cmpsb
and
jae
lods
hlt
add
cmp
dec
hlt
add
in
and
jecxz
cld
stos
and
pop
jo
repnz
pop
mov
roll
aaa
in
mov
repnz
das
xor
fwait
pop
sub
adc
inc
xor
xor
push
bound
aas
imul
cmp
jl
xor
jecxz
outsl
in
fbstp
xor
push
mov
movb
cs
mov
arpl
add
adc
inc
rcll
mov
iret
dec
xchg
cmp
jo
dec
icebp
jmp
add
cmc
push
data16
inc
decb
shl
sub
lods
sub
mov
push
imul
fs
mov
arpl
push
rcrl
aaa
add
sub
pop
jg
js
inc
mul
cmp
mov
aas
or
loopne
sbb
push
adc
pop
xor
popa
aaa
inc
xlat
cwtl
out
leave
in
xor
mov
or
mov
out
push
popf
pop
sarl
jl
inc
cmp
cmp
dec
flds
aam
mov
das
or
shlb
arpl
adc
add
enter
int3
dec
out
mov
out
dec
xlat
dec
push
inc
ljmp
ja
icebp
lds
int
outsl
hlt
xchg
adc
mov
push
jo
adc
repnz
push
inc
fs
js
cli
int3
repz
insb
inc
inc
and
stc
test
cli
adc
pop
xorb
loop
sub
std
pop
movsb
dec
aas
pop
mov
mov
pop
push
cmpsb
outsb
xor
ret
fdivl
mov
rclb
out
push
mov
adc
jno
mov
xchg
mov
repz
sbb
aaa
andb
stos
getsec
ror
mov
push
dec
jb
lret
lock
mov
inc
popf
pop
xor
mov
dec
mov
rcl
andb
mov
jae
add
loopne
mov
fsts
mov
out
loopne
cwtl
push
pusha
mov
clc
jae
sbb
es
sbb
mov
fistps
jne
test
dec
adc
lods
movsl
mov
jo
cmp
mov
lods
in
push
mov
arpl
pop
dec
je
out
mov
and
or
cmp
inc
fwait
testl
push
ljmp
inc
jno
xor
or
in
pop
push
mov
std
push
jo
shl
xor
rep
out
lret
mov
adc
data16
bound
mov
jp
insb
rcl
push
cmp
or
mov
xchg
jle
cmpsl
add
mov
mov
hlt
xchg
in
mov
push
sbb
imul
daa
sub
cmp
pushf
push
sbb
and
stos
mov
pop
pop
inc
decb
push
jle
lret
outsb
fistps
cs
xchg
mov
push
push
pop
jmp
scas
test
int3
mov
mov
mov
inc
or
je
dec
pop
adc
sbb
shrl
inc
xchg
adc
stc
mov
jb
mov
mov
dec
mov
fildl
divl
pop
dec
mov
lds
xchg
outsb
out
movsl
adc
cmp
add
out
icebp
movsb
add
adc
loope
or
cmp
xchg
popa
fiadds
mov
mov
sub
es
and
lret
pop
int
xchg
xchg
leave
adc
cld
xor
insl
lea
or
jne
call
and
dec
pop
cmp
sbb
rolb
xchg
jle
or
jno
xchg
les
pushf
test
out
js
adc
inc
xor
or
add
scas
popf
jmp
mov
in
in
ret
cmpsb
es
ficoml
out
mov
cmovae
adc
adc
mov
stos
cld
insb
sub
and
test
add
stc
and
dec
addr16
adc
sbb
lahf
add
movsl
sub
pusha
xlat
and
push
jmp
sub
or
dec
inc
data16
fcmovbe
mov
aad
xchg
arpl
ficoml
aas
mov
and
sarl
fcomps
out
pop
pusha
mov
out
test
inc
dec
test
loope
push
mov
cwtl
and
cmpsb
sub
and
xor
lods
js
call
mov
scas
rorb
mov
ss
jecxz
xchg
and
mov
aam
decb
xchg
lock
jge
scas
jae
cmpsl
pop
fs
fsubrs
insl
pop
movb
xlat
in
lahf
jns
push
fcmovnu
push
cwtl
xor
inc
mov
fiaddl
daa
pushf
sub
shrl
pusha
inc
inc
lcall
cmp
in
clc
scas
out
push
push
std
ficoms
xchg
sbb
inc
sbb
xchg
mov
mov
cmpb
data16
sbb
push
in
les
pop
sub
cltd
cltd
mov
dec
jp
add
in
and
lea
ficoml
scas
ja
jmp
sbb
imul
dec
xchg
fistpl
adc
jmp
jbe
stos
ficompl
push
inc
push
loopne
mov
or
into
into
xchg
xchg
mov
dec
mov
mov
ss
pop
sbbb
repnz
pop
das
pop
das
fsts
jge
clc
push
movsb
mov
lcall
int
add
cmpsb
adcb
iret
insb
xor
push
dec
pop
mov
and
aaa
push
cmp
sbb
stos
mov
xor
cmp
inc
push
mov
fdivrs
scas
pop
cmpl
mov
pop
pop
lds
jmp
xchg
jl
add
jg
or
sbb
data16
data16
mov
enter
dec
lcall
into
add
lds
cmpsb
stos
ljmp
int
mov
insb
mov
add
pop
rolb
mov
scas
inc
add
jp
call
sbb
dec
mov
rorb
sub
lock
jo
aaa
hlt
in
imul
inc
mov
loop
loop
into
movb
icebp
inc
xor
js
imul
add
leave
in
or
add
fwait
and
inc
mov
adc
sbb
pop
mov
jp
nop
fidivs
mov
sub
scas
es
lcall
int
mov
mov
cmp
clc
daa
jns
add
lret
push
fsubr
sbb
inc
pop
data16
call
fiadds
sti
subl
mov
xchg
push
repz
ret
add
xchg
loope
inc
jns
inc
jecxz
jbe
mov
jl
pop
xchg
and
mov
fucomi
mov
inc
insl
out
or
lds
js
jns
sub
adc
add
lods
imul
sub
aad
mov
nop
jecxz
pop
je
loope
jo
inc
dec
dec
imul
mov
and
jge
sub
adc
jle
sub
or
int3
cmp
cmp
int3
das
aad
lds
add
fwait
call
loopne
mov
mull
movl
adc
into
bound
in
sarl
arpl
jg
outsl
and
xor
ja
mov
rcll
subb
mov
js
and
mov
push
rol
mov
lret
loop
fucomip
je
dec
mov
xor
mov
in
adc
sub
adc
dec
icebp
dec
pop
mov
mov
cs
pop
movsl
fcomi
xor
adc
jge
pop
mov
movd
out
test
xchg
mov
loopne
jb
ret
push
push
addb
pop
stc
fldcw
push
xor
inc
iret
pop
lret
push
pop
stc
daa
pop
repnz
mov
xor
jnp
test
dec
adc
jae
add
adc
cld
std
mov
xchg
shrl
push
mov
jae
scas
cli
mov
or
pop
aad
in
call
cld
out
sahf
and
lock
mov
push
pop
cmp
dec
dec
pop
testl
add
sbb
sub
xchg
xor
bnd
and
pusha
and
jp
mov
je
rcll
lock
jns
mov
jl
icebp
cmp
mov
mulb
int
or
or
cmpsl
xchg
xchg
or
cmp
jge
add
lea
daa
jecxz
test
dec
popa
mov
jmp
push
enter
mov
fadds
ret
sbb
mov
sbb
xchg
pop
and
fidivrs
cwtl
push
hlt
sub
mov
out
adc
cmp
imul
out
popa
pop
test
adc
stc
fiadds
xor
mov
pop
dec
cmp
cmc
xchg
fsub
xor
movsl
sbb
mov
sbb
sub
and
and
jg
mov
cmpb
and
xchg
mov
push
adc
scas
jb
js
lahf
lret
insl
rcrb
shl
ljmp
por
jno
or
out
loopne
sbb
adc
leave
sarl
sbb
sbb
movsb
dec
pop
sub
repz
aas
faddl
jl
pop
dec
cmc
lahf
sbb
lahf
xor
popf
jb
pop
mov
jmp
clc
loopne
pop
stc
hlt
movsl
mov
loope
test
sti
push
dec
jno
lea
pop
rcrb
mov
dec
dec
movsb
lret
loop
pop
cmp
mov
jl
sub
iret
jp
push
addl
inc
cli
mov
hlt
xor
xor
mov
mov
mov
add
xor
inc
jno
insl
push
jl
push
inc
jo
lods
xor
sar
add
sbb
out
sub
sbb
xlat
scas
jns
jno
xor
stc
jmp
fnstsw
adc
cmpsb
xchg
sti
imul
push
cmp
bound
jmp
pop
xchg
and
shrl
sbb
jns
sti
andb
out
movsl
sub
sahf
and
add
sub
aam
cmp
mov
mov
mov
adc
xchg
insl
jnp
fcoml
into
cmp
pusha
mov
aas
xor
rolb
pop
jmp
sub
mov
sbb
mov
pop
adc
pop
iret
fstpl
repnz
fsts
lahf
mov
pop
dec
mov
lcall
test
cmp
cs
jne
test
jnp
dec
insb
bound
call
icebp
push
adcb
cmp
daa
int
xor
add
enter
das
cmp
mov
push
xorb
or
hlt
jns
aas
les
sbb
out
dec
dec
ret
jmp
stc
xchg
fstl
push
shrl
sbb
mov
inc
loopne
push
xor
pop
cmp
sub
dec
mov
ja
pop
or
ljmp
fmuls
jnp
es
int3
inc
cld
fcompl
push
jp
out
dec
adc
pop
fwait
dec
addr16
shl
lret
sub
mov
dec
cmpsb
mov
xor
imul
pop
ljmp
in
hlt
fcoml
movsb
addr16
push
adc
imul
sbb
pop
cmp
frstor
adcl
ret
lods
test
sahf
or
inc
and
dec
adc
fistps
xchg
inc
sahf
fxch
add
imul
ljmp
jge
out
ja
stos
cmc
xchg
add
in
cmp
mov
nop
xor
jo
push
fmull
mov
xor
inc
sub
in
and
jbe
ja
popf
call
popf
xchg
cmp
cmp
data16
ret
pop
movzbl
mov
nop
mov
ret
or
pop
into
es
rorb
pop
daa
fstps
dec
ds
dec
dec
loopne
add
and
mov
pop
mov
xlat
xchg
das
pop
test
and
and
mov
fldt
aad
mov
andl
cmp
or
xor
rclb
jae
jns
into
jo
addl
push
jge
loop
movsb
dec
fbld
daa
movsb
mov
pop
xor
push
ds
sbb
sub
xor
sbb
hlt
inc
inc
pop
adc
xlat
lret
adc
push
in
leave
mov
mov
jle
das
jo
sbb
les
gs
inc
or
jecxz
bound
ret
pop
push
mov
ds
xchg
sbb
insl
pop
jmp
addr16
rcrb
sbb
push
mov
sti
and
jb
sbb
mov
clc
in
adc
aaa
orb
sub
dec
je
mov
cmp
push
push
jns
mov
jl
xchg
lods
xchg
jmp
cmp
popf
xchg
mov
bound
cmp
idivl
and
cmpsl
mov
push
xor
into
setp
mov
add
or
out
leave
je
fsubrl
or
loop
sub
jp
data16
mov
inc
stc
mov
pop
adc
scas
and
push
sti
push
pusha
mov
arpl
jnp
and
sub
and
outsb
jge
cli
fdiv
lea
inc
cmp
mov
or
movsl
movsb
sti
mov
push
xchg
sub
mov
mov
mov
loopne
leave
push
je
adcb
pop
push
mov
inc
in
or
stos
out
pop
sub
fldt
mov
mov
xchg
mov
int
add
mov
jl
iret
stos
add
daa
mov
jp
fucom
jg
dec
pushl
out
pop
mov
pop
xchg
sbb
rcrb
inc
scas
iret
dec
ljmp
and
push
arpl
pop
lods
push
in
lea
and
clc
mov
out
mov
mov
call
xchg
push
add
cmc
aas
dec
jmp
out
test
clc
jle
jle
lahf
mov
rorb
push
stos
pop
push
in
mov
mov
xor
fisubrs
pop
and
push
lret
in
mov
and
popf
lods
and
mov
xchg
cmp
mov
lds
dec
sahf
inc
es
xchg
push
lds
mov
or
rorl
jecxz
popf
mov
xchg
mov
stos
insl
aas
add
test
xor
and
loope,pt
push
inc
in
pop
cli
ret
es
sbb
negb
lock
lods
mov
ret
jmp
xor
adc
sub
push
push
add
mov
and
mov
and
add
iret
mov
popl
int
dec
imul
pop
xchg
into
fsubs
mov
sahf
lret
or
aaa
and
xchg
push
test
jmp
int
mov
jecxz
fistps
sbb
and
cltd
and
or
je
jle
xchg
das
cmc
or
pop
and
mov
jae
xchg
jge
out
cmp
inc
ss
mov
popa
add
add
imul
ss
cmp
and
imul
pop
mov
int
add
jbe
aad
lock
std
mov
inc
fwait
lods
daa
or
mov
stos
adcl
inc
repz
adcl
jg
pop
notb
or
loope
or
shrl
out
into
mov
push
sahf
dec
xchg
adc
inc
cli
hlt
mov
xor
rcll
push
push
inc
in
in
mov
decl
cwtl
jmp
outsb
jnp
ss
pop
icebp
ss
or
dec
addr16
push
out
outsb
cmp
sbbl
mov
repz
cmc
ljmp
stos
sbb
pop
jnp
lods
iret
dec
ret
jo
sahf
addr16
add
or
dec
cltd
xor
jns
add
xor
and
xchg
je
popf
jnp
sbb
mov
shlb
ja
fiadds
jg
inc
push
dec
stos
js
dec
mov
out
xor
sahf
pop
scas
pop
in
and
gs
in
and
cmpsl
add
repnz
js
addl
push
outsb
scas
jb
sti
es
and
inc
pusha
xchg
loop
mov
fwait
loope
sahf
int3
outsb
mov
ret
push
out
mov
dec
push
xchg
imul
rcrl
add
pop
sub
cmp
stos
insb
mov
pop
jg
iret
adc
sub
aam
inc
cltd
sti
inc
in
cmp
dec
mov
addr16
ss
xchg
movsb
cmp
cmp
cltd
popa
mov
outsl
dec
movsb
pop
loop
lahf
dec
and
or
jp
fbstp
les
add
push
mov
addr16
int3
push
adc
mov
movsb
test
xchg
fcmove
insb
and
aam
add
subl
push
sub
pop
test
inc
cmp
mov
mov
aad
icebp
mov
pop
nop
sub
fildll
adc
jmp
filds
push
loopne
jno
sub
jbe
mov
or
mov
xchg
test
adc
repnz
and
sub
dec
int3
stos
in
orb
adc
lds
jo
push
mov
movsb
jmp
ret
outsl
call
mov
rcrb
adc
sti
sahf
dec
dec
and
xchg
shlb
test
mov
push
jb
xchg
sub
and
mov
popf
cmpl
push
xor
fwait
test
inc
xor
mov
sti
adc
not
out
cli
cmp
cmpl
xor
push
scas
xor
push
and
js
mov
xchg
jp
push
loope
mov
pop
add
test
mov
fstl
mov
push
enter
cmp
or
mov
adc
sub
jge
cmp
cmc
movb
push
or
cmc
fldl
test
in
pop
mov
cmp
fimull
dec
popf
in
daa
cmp
in
xchg
inc
enter
cmpsb
adc
ja
push
sub
sub
shll
test
inc
in
outsb
add
mov
sub
mov
cmp
mov
or
and
mov
add
lds
aaa
call
iret
jecxz
mov
scas
and
ljmp
inc
cmc
push
xchg
mov
shr
lret
mov
mov
or
add
dec
nop
or
fiaddl
mov
adc
ljmp
out
jne
aam
fs
cmp
push
imulb
sub
aas
mov
adc
jmp
jne
cmp
vpshab
popa
int3
jge
les
jbe
mov
int3
cmp
cmp
sub
and
ss
adc
insl
incb
inc
mov
cmc
les
push
xchg
mov
pushl
cmp
mov
pop
jle
adc
insb
jge
dec
sbb
cmpsb
inc
cltd
push
push
lret
leave
mov
inc
and
pop
xchg
fadds
jno
lret
sbb
inc
ret
jge
pop
test
test
or
cmp
sbb
or
push
pop
ljmp
add
xlat
arpl
mov
add
cltd
pop
jne
gs
add
xchg
jne
js
mov
outsl
jl
popf
xor
cmp
mov
test
add
inc
insb
inc
mov
ja
mov
mov
mov
adc
push
enter
enter
sarl
popf
shlb
cld
insl
cwtl
cli
cmpsl
addl
cwtl
mov
pop
push
iret
fcoms
insl
imul
rorb
mov
cmp
and
lea
leave
cs
arpl
add
ds
mov
test
repnz
xchg
in
sbb
pop
add
and
dec
push
inc
es
push
add
dec
shrl
imull
push
bound
push
pop
jnp
cmpsl
xchg
frstor
out
popf
pop
push
xchg
je
loopne
gs
xchg
mov
in
sub
xchg
add
lcall
sub
dec
xchg
int3
cmpsl
jb
xchg
ret
pushw
cmp
sub
out
adc
mov
jge
call
pushl
clc
movsl
es
dec
imul
or
sbb
shrb
mov
jge
mov
mov
sub
adc
out
imul
int
mov
cwtl
dec
pop
adcl
les
xor
sbb
mov
pop
or
add
xchg
or
movsb
adc
insb
xchg
push
push
sarb
lret
mov
cmp
data16
cltd
cmp
iret
lahf
scas
add
adc
lahf
jbe
and
call
adc
ret
push
xor
xor
cmp
sbb
jp
xchg
mov
mov
stc
push
hlt
outsl
popa
jle
pushf
xor
sub
mov
jae
pop
lock
std
xchg
jmp
pop
cmp
fisubs
xor
bound
push
mov
insl
jne
leave
jae
fisubl
testl
adc
aaa
aaa
xchg
xchg
fistpll
outsl
jmp
push
rol
inc
fidivs
cmp
out
xchg
mov
test
dec
fisubs
mov
aas
cmp
outsl
mov
xor
mov
repz
mov
ja
loopne
testl
adc
mov
push
negb
neg
push
jo
add
out
sub
mov
sbb
rorb
mov
pop
outsb
aad
stc
mov
push
fs
push
mov
fprem
lds
adc
and
and
lods
sub
xor
cmp
lds
cmp
add
test
mov
mov
orl
sub
ljmp
scas
lock
popf
jmp
in
insb
mov
nop
xlat
clc
gs
mov
fbstp
mov
cs
push
lea
adc
pop
cmp
jmp
ja
lahf
mov
in
test
xchg
shll
xor
lret
add
mov
cmpsb
dec
sbbb
xor
pop
jnp
arpl
lret
ret
aad
cmp
mov
add
xchg
sahf
sub
loope
sbbb
stos
ljmp
dec
sub
jg
push
loope
jl
sub
xchg
cli
and
cltd
call
flds
or
out
pop
bnd
cs
sub
pusha
iret
movhps
fisttpl
mov
dec
shll
ja
pop
es
push
xchg
pop
xchg
cld
or
shll
pusha
xor
push
in
inc
and
xor
jge
push
sub
pop
imul
push
mov
adc
ljmp
or
xchg
jge
add
in
mov
jne
add
popa
mov
and
andl
lods
flds
cmp
mov
rcl
cmp
add
pop
pop
mov
mov
xchg
pop
imul
and
ret
daa
mov
push
adc
push
add
inc
xchg
mov
cmp
test
xchg
inc
stc
negb
loopne
ds
cmp
push
leave
lcall
fdivs
test
inc
ficomps
sub
cli
xor
aas
js
sbb
xchg
jp
push
lcall
test
fiadds
sahf
stos
xor
arpl
or
push
mov
inc
and
and
sahf
inc
inc
imul
mov
cmp
and
and
popl
mov
xchg
and
clc
sbb
adc
pop
xchg
jg
push
cmp
insb
sti
repz
fucomi
rcrb
dec
sti
cmp
push
xor
add
into
pop
in
jne
xchg
or
rol
xor
cli
pusha
mov
or
xor
mov
mov
dec
mov
mov
mov
cld
sbbl
xor
sbb
aaa
mov
sub
divb
inc
mov
popf
mov
sbb
inc
mov
in
movsl
push
add
lret
daa
popf
clc
cmpsl
cwtl
add
mov
xchg
mov
shrl
push
bound
mov
push
pusha
mov
in
xchg
jge
or
and
add
fnstenv
shl
add
xor
movsb
aad
or
hlt
rclb
inc
call
stc
sbb
jmp
fcomi
lds
jne
jnp
or
bound
clc
and
sub
outsb
sahf
cltd
sbb
mov
ljmp
mov
aad
fcmove
popa
inc
dec
testl
cli
xor
pop
mov
movsb
fs
dec
incb
mov
scas
rclb
shll
sub
sub
cltd
loopne
in
icebp
lret
fs
dec
roll
in
push
push
xor
xchg
fimull
cwtl
xchg
inc
loope
stc
clc
inc
xor
cli
stos
insb
fwait
and
leave
stos
aam
cld
adc
inc
cmp
lcall
mov
cld
sub
add
xor
or
xor
add
icebp
gs
pop
scas
dec
or
loop
icebp
movsb
cmp
mov
mov
adc
sub
add
repnz
inc
in
rcrb
mov
cwtl
xchg
adc
in
mov
xchg
sub
and
jl
out
push
cmp
bound
inc
int
lds
cld
orl
mov
in
test
arpl
mov
jle
pop
sub
je
lock
xchg
addr16
mov
and
jno
push
adc
jb
imul
xchg
add
cli
aad
stos
stc
popf
pop
nop
imul
xor
packsswb
jg
sub
adc
daa
pop
mov
test
arpl
ja
aad
sub
negl
cmp
outsl
lret
hlt
dec
lret
cltd
stos
into
test
out
jne
in
scas
enter
mov
in
out
xchg
aad
in
mov
call
sub
or
movsb
adc
add
adc
cmp
idivb
lods
hlt
inc
jmp
mov
xchg
mov
or
jbe
push
and
mov
cmp
cmc
cltd
nop
in
and
ja
inc
or
es
stos
dec
mov
xlat
int
fadds
jl
in
xchg
jmp
mov
mov
push
out
out
add
negb
repz
or
xchg
lds
insb
sbb
jmp
cmpsl
xor
mov
mov
push
xor
les
repnz
aam
push
test
std
jb
stos
jbe
cmp
jg
enter
and
sbb
fdivs
and
mov
ficoms
leave
fldl
and
jb
cwtl
into
sub
addr16
mov
or
mov
shlb
xchg
cmpsl
mov
shrl
cmpsl
adc
mov
xlat
cmp
movb
andb
out
imul
fimull
arpl
ret
cmp
xlat
ds
lahf
mov
xor
and
rclb
sbb
fcompl
xor
jl
inc
repz
sbb
js
and
sarb
push
xor
cmpsb
jmp
sbb
pop
int3
faddl
inc
pop
ret
or
sbb
repnz
gs
dec
lods
xchg
push
mov
or
lods
adc
add
mov
nop
loopne
lea
test
aam
mov
push
hlt
hlt
xor
rcr
push
orb
lds
and
repnz
or
popa
les
cmp
repnz
lods
leave
add
call
mov
in
push
adc
adc
es
push
stc
pushl
lds
sti
fsubl
std
loop
in
test
cmp
outsl
pop
loope
mov
push
push
or
repnz
cmc
fcoml
in
push
fst
out
cmp
xor
and
jmp
and
cltd
add
mov
pop
xchg
daa
cmpsl
into
push
jnp
clc
pop
mov
inc
ret
addr16
out
movsb
push
mov
push
xlat
sub
pop
sbb
je
dec
int
mov
sub
cmp
clc
push
adc
add
xlat
push
aad
popl
adc
test
jae
pusha
movsl
push
mov
arpl
jbe
push
lock
int
xchg
jl
scas
dec
outsl
stc
xor
cmp
push
and
push
jo,pn
mov
fisttps
push
out
in
xlat
sbb
or
xchg
outsl
outsb
fisubrs
sub
fmuls
adc
test
les
sti
xchg
shlb
sarl
push
inc
scas
xchg
cld
cmpsl
sbb
add
pop
sub
mov
mov
outsl
in
sbb
adc
push
bound
aam
mov
mov
mov
popf
inc
jnp
inc
cmpsb
loopne
bound
js
popa
cmp
stc
fs
xchg
cli
repz
lret
jg
lahf
sti
adc
clc
xchg
out
shrb
sti
ret
daa
mov
in
mov
enter
lods
aam
jno
mov
sahf
add
xor
inc
add
sbb
pushf
or
pop
inc
inc
add
sub
inc
xor
jns
rcll
xor
xchg
lods
add
pop
hlt
sub
xchg
dec
xchg
insb
xor
aad
mov
test
in
push
sbb
sbb
mov
xor
jo
in
popl
stos
push
inc
add
xor
adc
dec
pop
cltd
mov
inc
out
adc
xchg
nop
push
adc
loop
xchg
fimull
sub
sub
mov
xchg
jb
int3
mov
add
xor
in
add
fidivrl
xchg
mov
mov
ja
in
aad
add
mov
and
dec
out
push
cmp
cltd
cmp
or
push
outsb
repz
lahf
lods
fcmovu
mov
mov
cmp
sbb
xor
push
or
inc
pop
repz
fcoms
mov
pushf
mov
pop
push
mov
xchg
and
push
sub
dec
pop
incb
out
or
mov
jg
or
push
lds
push
xchg
clc
adc
push
sub
pop
mov
sbb
std
mov
cmp
pop
ss
ljmp
andl
sub
mov
and
sti
jg
sti
mov
std
xor
sbb
adc
cltd
arpl
xchg
add
int
scas
jmp
in
popf
and
add
shll
push
cmp
or
andb
xor
imul
lods
fdivrs
mov
and
shrb
mov
xorl
adc
ficoml
shll
ds
orl
int
fadds
ficoml
jp
shrl
ds
dec
jp
jg
push
mov
les
add
lds
sarb
ret
movsl
adc
sbb
or
sbb
and
in
sahf
iret
inc
ret
xor
ds
sbb
adcl
das
lahf
cmpb
mov
scas
pusha
repz
icebp
adc
filds
repnz
sbb
pop
lods
pop
add
and
add
push
adc
cmp
rcl
out
ss
sub
mov
lods
add
xchg
sub
imul
scas
out
push
cmp
xor
ljmp
cmpsb
push
add
cli
xchg
outsl
sbb
sahf
cltd
jo
shr
aam
add
push
js
pop
xchg
mov
jae
xor
push
xchg
mov
icebp
adc
jmp
jne
mov
mov
cmp
pop
dec
dec
jle
lret
or
test
popa
jne
mov
pop
xor
push
stos
dec
fnstenv
cmp
pop
sbbb
mov
data16
icebp
push
push
leave
insb
mov
dec
int3
xchg
jmp
dec
ljmp
xchg
aam
imul
jb
les
nop
or
xor
mov
xchg
inc
or
dec
push
fs
dec
test
insl
je
sbb
dec
pop
dec
decl
ljmp
cmp
inc
clc
test
nop
push
sahf
mov
and
dec
inc
pop
or
push
movsb
fsubl
dec
mov
sub
rolb
adc
sar
dec
stc
inc
inc
leave
pop
or
lock
stos
mov
mov
xor
out
into
dec
out
test
mov
shl
pop
pop
rcr
adc
mov
imulb
scas
dec
adc
adc
mov
add
inc
js
sub
lcall
adc
lods
addb
movsl
jle
inc
push
adc
lcall
fsubrl
int3
bound
cs
dec
mov
pop
addl
xchg
dec
dec
data16
ss
xchg
movsb
test
mov
out
and
shlb
cmpsb
fsubl
push
mov
and
xlat
mov
or
push
add
std
adc
mov
jle
sti
sbbl
xchg
or
cmp
pop
imul
setbe
cmp
ds
fwait
cmp
mov
sub
test
ljmp
pop
xchg
sub
test
or
ds
push
ljmp
xor
jmp
es
push
jnp
pushl
outsl
testb
lret
imul
sub
mov
dec
xor
call
pop
es
test
bound
pop
je
xchg
cmp
mov
cmpl
pop
lcall
add
es
jbe
je
inc
or
or
inc
fiaddl
cmpsl
push
adcb
stos
xchg
sub
xchg
inc
sub
cmpsb
test
popf
sub
ss
or
sbb
es
subb
lods
sub
adc
mov
sub
push
and
dec
imul
and
sbb
andb
ljmp
lahf
fdivr
xchg
xor
push
fdivl
mov
push
into
jle
mov
sbb
adc
or
add
add
mov
pop
xchg
shlb
imul
pop
push
dec
inc
xlat
les
fldenv
push
pop
icebp
and
mov
sbb
test
popl
packuswb
push
mov
dec
adc
out
in
dec
adc
icebp
xchg
insb
pusha
aaa
cli
adc
stc
pop
shl
pushf
and
jb
enter
adc
scas
mov
jmp
xchg
repnz
popa
mov
data16
frstor
and
add
mov
sbb
sarl
out
adc
add
xchg
pop
xchg
ret
push
dec
adc
dec
sub
or
es
into
adc
adc
out
sub
sub
pushf
aaa
insb
or
loop
mov
andb
mov
movsl
lock
dec
cmp
pop
mov
ja
pop
popa
jmp
push
pop
inc
xor
pop
sahf
test
jge
push
stc
sub
sub
mov
repnz
cld
cmpsb
add
mov
mov
adc
loop
sub
pusha
insl
repz
dec
xor
ret
fisttpll
js
inc
sbb
jo
cmp
pusha
or
ljmp
push
outsl
and
push
mov
dec
jmp
scas
push
xchg
inc
cmpsb
xchg
dec
mov
push
cwtl
mov
leave
pop
imul
xor
mov
icebp
jle
pop
sahf
repnz
push
shr
data16
jecxz
sbb
push
aas
fwait
inc
test
pushl
test
jbe
add
aad
jl
cmp
sbb
cmpsb
lret
movsb
inc
repz
shlb
aad
sarl
fisubrl
dec
pop
loop
es
push
xlat
cmp
gs
xor
xchg
jnp
cmp
pusha
sbb
xchg
xchg
dec
arpl
push
sbb
stos
cmpb
xchg
cld
add
dec
popa
hlt
hlt
cmc
mov
xor
adcl
movsb
cmp
lods
push
cmc
jmp
mov
sahf
add
pop
sbb
pop
addb
jl
push
data16
and
mov
or
and
dec
js
or
aad
out
int
mov
mov
xor
dec
fidivs
fsubrp
jb
cli
jl
or
and
push
xor
or
mov
fwait
aad
ss
test
sbbb
mov
jbe
je
outsl
pop
mov
push
fmuls
in
pop
rclb
sbb
xor
jp
mov
xlat
inc
test
jecxz
lea
cmp
jge
add
bound
cmp
call
mov
lret
fistpll
lahf
mov
cmpsl
mov
repz
popf
add
xor
jno
test
xor
repnz
add
inc
adc
jo
push
xor
or
add
repnz
jb
mov
xchg
test
jnp
and
push
inc
ljmp
pop
loop
pop
in
add
cld
in
cmp
arpl
xlat
mov
sub
addr16
pop
sbbb
mov
jne
mov
mov
adc
pop
jge
pop
xor
mov
jne
les
and
inc
jnp
stc
jg
xor
sbb
and
xor
mov
mov
cmpsl
and
mov
lods
lret
ret
jo
testb
xchg
dec
inc
cmp
pop
mov
imul
xchg
or
je
rcrb
push
shl
cmp
jb
rolb
cmp
fs
leave
test
dec
mov
lret
mov
jns
cltd
hlt
ret
outsb
andb
push
leave
mov
cmp
add
pop
xor
ret
pop
pop
cmpsb
in
into
xchg
push
mov
inc
mov
insb
insb
mov
push
rcrb
pop
shr
pop
inc
ds
ret
mov
fmuls
aad
inc
dec
ds
imul
pop
push
jb
jo
xchg
add
jns
jmp
mov
jl
es
inc
divb
xchg
mov
push
in
lea
movsl
jnp
test
mov
sbb
jge
dec
div
pop
int3
mov
jbe
dec
xchg
xchg
aad
clc
popf
inc
add
mov
jne
fidivs
daa
iret
pushf
sbb
sbb
push
cmc
dec
xchg
or
int
push
jne
popf
and
call
scas
test
pop
mov
fucomi
and
rcrl
push
mov
lea
test
add
enter
mov
and
mov
cmp
negl
mull
xchg
out
inc
or
xchg
adc
add
nop
xor
dec
cmpl
data16
sbb
aas
repnz
cmp
push
ja
popf
sbb
mov
xchg
lds
cmp
inc
xor
jo
dec
adc
jbe
adc
jmp
sub
mov
lock
mov
push
in
shlb
sub
push
xchg
push
shll
push
ds
jle
loopne
enter
xlat
hlt
mov
inc
addr16
imul
es
popf
cmp
lods
scas
pop
mov
adcb
lret
add
cmpsb
or
xor
or
push
shrl
ret
pop
mov
in
xor
jns
jg
scas
aaa
hlt
cmp
jmp
jo
jo
mov
data16
and
dec
cmp
xchg
fimull
movsb
les
inc
xlat
out
mov
pop
cmp
push
gs
add
mov
imul
pop
add
fiadds
mov
pop
add
fsubs
xchg
shrl
sbb
dec
dec
sbb
mov
dec
ss
inc
shrl
out
clts
fstpl
mov
ret
loop
dec
jecxz
sarb
ds
push
nop
sub
mov
ja
adc
xor
fs
mov
adc
push
xchg
repnz
sbb
bound
dec
es
and
cs
aam
movsb
sub
sahf
or
setp
cli
mov
jbe
adc
ret
cmpsb
mov
insl
sahf
push
dec
fsubs
and
jl
dec
sbb
mov
pop
and
sti
push
pop
xlat
dec
test
stos
aas
xor
scas
psadbw
xor
sbbb
jnp
mov
sub
sbb
mov
mov
xchg
dec
xor
cmpsl
push
xorl
push
in
loope
xchg
push
sarb
nop
cmc
sbb
mov
jmp
cmp
ljmp
scas
push
and
in
sti
or
mov
mov
ss
jecxz
movsl
leave
ret
cmp
lea
mov
or
or
xlat
or
je
xchg
and
icebp
movsb
xchg
inc
xor
int3
pop
gs
das
sub
pop
pop
loopne
mov
push
repnz
inc
mov
dec
in
ret
outsb
scas
dec
ss
dec
add
shl
mov
jge
psrad
es
mov
mov
aaa
mov
stos
sub
xor
fstps
pop
out
lahf
loope
fwait
aad
sub
jp
fs
or
mov
mov
cli
sbb
and
cmpsl
stos
iret
sbb
cs
test
jbe
xchg
cmp
stos
mov
cwtl
mov
xchg
mov
push
mov
out
out
jno
cmp
mov
rcl
ror
jae
imul
or
xchg
stos
sbb
add
cmc
scas
repnz
push
in
andb
mov
push
sarl
sbb
or
inc
push
scas
inc
sbb
and
imul
sub
subb
push
lret
or
mov
jl
add
fstpt
ljmp
push
repnz
outsl
jmp
adcb
pushl
jnp
lock
pop
aad
pop
add
bound
mov
arpl
sbb
cmp
or
dec
outsl
mov
xchg
mov
bound
push
outsb
cmp
repz
mov
inc
mov
push
add
mov
pop
test
cmp
je
ss
fstl
mov
sbb
jo
subb
in
dec
int
mov
lcall
dec
cmpsl
aaa
js
rcll
push
jo
ljmp
cmp
push
mov
popf
cli
outsb
mov
push
loope
call
pop
xchg
mov
mov
hlt
enter
sbb
dec
or
lds
xor
add
pop
mov
xor
cltd
in
push
cmc
xor
repnz
cs
adc
or
stos
mov
mov
dec
std
fwait
rcll
mov
cmc
daa
popa
lds
jecxz
roll
mov
outsb
adc
sub
dec
adc
jmp
aaa
shll
mov
out
xchg
and
call
sqrtps
jmp
lds
das
test
sub
jnp
or
test
fstpt
xchg
or
xchg
mov
push
mov
adc
fisubs
sub
jnp
dec
pop
in
adc
out
cmpsl
aad
mov
mov
insb
adc
fidivrs
push
add
dec
test
or
daa
dec
dec
fimull
cltd
das
fidivrs
daa
dec
push
cmp
in
mov
inc
loop
sbb
scas
jmp
lcall
dec
int
cltd
gs
and
jno
out
mov
mov
cmp
inc
mov
sbb
push
and
or
daa
scas
inc
or
test
jbe
sub
aas
stc
cmpsl
test
adc
nop
nop
or
insl
lcall
clc
and
pop
into
sub
adc
js
push
pusha
jnp
sub
repnz
icebp
sub
cmp
aad
lret
aad
sti
loop
mov
mov
mov
lcall
inc
dec
or
adcl
data16
xor
xchg
pop
xor
rolb
roll
mov
in
rcrb
cld
mov
orl
or
push
loope
xlat
cmp
mov
inc
mov
testl
dec
inc
in
or
dec
ret
cmp
and
lock
and
aam
xchg
sbb
pop
lock
nop
mov
insw
ret
hlt
shl
sub
mov
shlb
sahf
xchg
xlat
dec
mov
xchg
lret
jge
fcmovb
or
sub
aad
jno
add
push
into
repz
and
iret
lods
push
jbe
jp
insl
dec
jo
loop
sub
push
aad
fcomps
icebp
popf
test
insb
mov
andb
sub
outsb
xor
dec
rclb
and
int
in
shll
mov
ljmp
mov
outsl
jle
sub
in
sti
pop
loope
aad
lock
leave
xchg
jns
outsl
xor
mov
gs
dec
mov
ret
lock
mov
inc
mov
in
jo
xchg
add
add
push
sub
sub
jg
or
fsubs
mov
int
xchg
cli
lods
les
insb
mov
lret
fiaddl
mov
arpl
push
dec
xchg
jecxz
leave
xor
or
push
add
jae
push
dec
cltd
jle
jnp
cmp
cmp
aas
sbb
pop
mov
sti
dec
cmp
push
or
mov
scas
xlat
push
into
xor
and
int
hlt
ret
or
adc
sub
call
repz
add
xor
sub
outsl
and
add
or
lods
je
mov
mov
scas
and
cmc
jb
mov
push
in
stos
mov
and
or
push
dec
add
cwtl
sbbb
test
and
cs
jecxz
in
pmaxub
mov
mov
push
sub
out
std
jmp
sbbb
jbe
and
mov
cli
les
fldt
xchg
push
pop
cli
and
jge
mov
shlb
mov
jae
inc
stos
or
das
cmp
cmc
and
add
adc
xor
gs
out
adc
adc
add
or
imul
in
push
sub
pop
adc
mov
pop
repz
jne
mov
jbe
test
mov
sbb
xor
add
sub
jmp
ficomps
decb
sbb
and
dec
sub
mov
dec
inc
pop
push
add
mov
out
arpl
jbe
fcoms
dec
cmpsb
xor
mov
sub
cwtl
cmp
push
xlat
jmp
adcb
jl
loope
and
sbb
addb
repnz
mov
cld
sub
addr16
enter
mov
and
xor
cli
mov
cli
pop
fidivs
xchg
mov
notb
jg
movsb
es
ja
in
push
xor
mov
adc
xlat
call
int
xchg
mov
cmp
and
xchg
and
test
scas
es
rcl
enter
lods
popf
push
ds
mov
dec
stos
xchg
repnz
xchg
lods
scas
cmp
stc
pop
sub
dec
les
aad
ret
add
and
and
xor
push
jecxz
pop
cmp
ja
sbb
mov
lock
ret
cmp
inc
xlat
pop
pop
pusha
aam
es
loopne
jns
inc
push
inc
add
fsubr
mov
lods
ljmp
or
mov
mov
lea
ds
xor
test
mov
xor
repz
lock
scas
sbb
lds
unpcklps
mov
push
mov
icebp
adc
scas
cmp
mov
popf
rcrl
orb
or
inc
jmp
ljmp
mul
pop
pop
jg
jbe
mull
dec
je
gs
cmpsl
add
subl
push
and
imul
sahf
or
mov
sbb
xor
faddl
or
icebp
adc
add
ret
sub
movsb
test
dec
xor
add
inc
bound
testl
cs
loopne
cltd
inc
dec
jbe
jno
jp
sub
jno
inc
stos
jecxz
sub
xor
mov
pop
cmc
rcl
mov
cmpsb
jmp
in
mov
popf
mov
mov
in
inc
jg
xchg
fadds
mov
enter
mov
lea
mov
lds
sub
jnp
xchg
mov
loop
enter
lret
popa
loopne
push
gs
jmp
inc
mov
fiaddl
fbld
test
inc
xchg
incb
pop
fs
das
jg
add
xor
hlt
fbld
fsub
push
xchg
repnz
shlb
bound
imul
int
pop
push
lea
push
mov
dec
push
or
test
ja
pop
push
add
pop
and
cmp
pop
lea
and
pop
scas
and
es
aaa
push
cmp
pop
sub
xor
xor
push
mov
subl
popa
fisubrs
inc
jl
frstor
shll
stc
int3
push
sub
pop
sti
adc
movsb
dec
mov
push
imul
push
out
out
dec
cmpb
shll
fmul
popa
addr16
push
add
xchg
and
loope
iret
xchg
shll
orl
lock
pop
dec
es
dec
add
xor
outsb
sbb
loop
or
xor
jo
sub
inc
xchg
out
clc
mov
inc
sub
sbb
nop
push
jno
stc
out
cmp
mov
outsl
imul
dec
repnz
ss
insl
mov
cmpsl
jbe
push
out
xchg
enter
test
add
ds
jnp
xchg
and
mov
cmp
and
call
cli
rcrl
cld
pavgw
into
enter
inc
sbb
lret
icebp
mov
mov
cmc
adc
jnp
push
pop
cmp
mov
jl,pn
pushf
les
pop
aam
inc
les
movsl
xchg
sti
adc
dec
add
repz
in
ss
out
fs
sbb
stc
cmc
mov
nop
and
imul
mov
sub
inc
mov
xchg
mov
dec
ds
icebp
add
push
mov
cmp
ds
dec
mov
push
rol
lret
push
orl
mov
add
decl
pop
jp
scas
jge
pop
ficompl
cmp
aad
jno
and
cs
and
adc
stos
push
adc
daa
mov
and
pop
jne
test
sub
ljmp
pop
adc
jb
lods
dec
sbb
hlt
daa
xchg
jp
sub
jbe
lret
sub
dec
jbe
pop
adc
outsb
jne
lcall
scas
sti
jmp
inc
fwait
push
fsubrl
sub
add
adc
mov
int
imul
adc
pmaddwd
push
test
push
jb
test
add
jbe
ret
pushf
nop
cmp
stc
dec
adc
enter
or
ret
adc
xchg
test
cmpsb
xor
mov
fwait
add
pop
mov
push
inc
ret
inc
repnz
or
jp
sub
mov
push
push
cmp
arpl
insl
add
push
jbe
inc
jmp
and
dec
outsl
mov
popf
jnp
dec
repz
rcrb
mov
xchg
xor
mov
into
lock
pop
mov
sbb
stos
xchg
push
popa
push
pop
faddl
jg
mov
adc
sub
push
sbb
push
fistpl
mov
mov
sub
or
mov
or
movsl
cwtl
pop
lods
sbb
xchg
mov
sub
in
test
loopne
cmp
xchg
scas
jmp
or
mov
test
adc
cltd
jne
in
mov
dec
dec
sub
jmp
push
pop
pop
xchg
push
out
dec
in
jle
xor
gs
push
add
push
or
pushf
pop
test
mov
jnp
lods
mov
clc
jbe
mov
rorb
pop
sti
hlt
inc
and
jmp
ret
xor
jne
lock
or
sbb
test
xor
xchg
pop
fcomip
or
lret
stc
mov
data16
mov
lcall
pusha
xor
xor
fucom
mov
mov
xchg
cltd
fisubrl
cwtl
ja
loopne
jmp
adc
sti
pusha
sub
mov
and
ud2
sbb
push
hlt
sub
stos
daa
dec
clc
mov
cmp
xor
movsb
into
test
bound
ret
orl
aad
jbe
dec
sub
iret
xlat
mov
fdivl
int3
lods
jp
add
pop
mov
jl
pop
sbb
insb
rol
inc
and
push
popa
lret
sub
cmp
sub
mov
xorl
mov
push
push
inc
jecxz
mov
loopne
xchg
push
ss
mov
pop
xor
sahf
dec
mov
and
and
fstpl
push
loop
test
jns
mov
sub
movsb
jmp
xor
or
sbb
xchg
ret
mov
lock
int3
lret
push
imul
add
in
jge
in
insl
mov
pop
aas
and
adc
sub
jp
and
pop
lods
in
pop
mov
fidivs
pushl
xor
icebp
mov
push
popf
fstpt
sbb
jmp
xor
jp
mov
xchg
xlat
pop
adc
imul
sbb
ljmp
ljmp
xor
push
mov
xor
and
push
pop
jmp
in
ss
mov
call
jmp
imul
xchg
cli
xchg
mul
dec
mov
or
nop
add
fwait
adc
cmovns
jb
dec
mov
pushf
test
adc
movsb
sti
inc
icebp
bnd
mov
dec
dec
ror
lahf
push
add
inc
sbb
and
push
js
push
mov
cmc
xchg
and
mov
testl
sti
push
inc
in
jnp
mov
addr16
mov
or
mov
mov
ret
outsb
loopne
daa
pop
xchg
sbb
pop
arpl
and
fnstenv
mov
fildll
outsb
aad
cmp
fcmovnbe
subb
fs
sahf
lock
aas
cmpsb
iret
in
jl
mov
push
orl
xchg
jne
rclb
and
xchg
push
loope
dec
inc
test
mov
andb
out
and
dec
dec
cmpsl
lcall
cmp
out
lea
adc
loopne
cmpsl
mov
push
xchg
push
pop
push
jnp
mov
push
nop
push
cmp
jnp
or
adc
xchg
push
sub
xlat
pop
int
fcmovnu
clc
nop
pop
test
cmpsl
ja
jmp
dec
mov
inc
fwait
daa
insb
sbb
xchg
ja
jge
mov
xor
cli
packuswb
out
rorb
jae
sbb
lods
fsubs
mov
ror
mov
ds
loopne
repz
flds
add
rorl
jmp
int3
cmp
mov
outsl
ret
cwtl
adc
out
mov
divl
add
js
jne
sub
roll
or
lahf
pop
jmp
cmp
pop
inc
jg
xchg
sbb
dec
rcrl
push
outsl
pop
lahf
shlb
pop
mov
or
movsb
xchg
shll
aam
adc
mov
mov
subb
inc
mov
pop
loope
fisubrl
jnp
sbb
rclb
sub
fwait
sbb
sbb
sti
movsl
jecxz
push
dec
mov
addr16
xchg
xchg
mov
mov
fcoml
and
pop
not
and
std
neg
pop
insl
push
scas
sbb
call
adc
mov
pop
sub
xor
or
mov
dec
jae
push
or
enter
jb
repnz
subl
pop
scas
push
push
mov
ret
cmp
pop
jne
pop
cs
and
mov
outsl
sub
imul
in
repnz
push
stos
mov
sbb
pop
lods
out
cmc
mov
adc
and
dec
cmpsl
mov
orb
lret
enter
fwait
xchg
cmpsl
int3
xor
and
inc
fwait
sub
add
adc
bound
xor
lret
adc
in
or
push
popa
push
push
add
stos
popf
fistpl
insl
mov
insb
daa
test
adc
test
ret
cwtl
scas
mov
loope
jne
lahf
mov
lcall
out
jnp
mov
cmp
cmpsl
int
test
testb
dec
mov
mov
cmp
jnp
aaa
hlt
jnp
xor
xchg
pop
xor
faddp
outsb
add
out
iret
mov
mov
fisubrl
cli
dec
out
mov
and
sti
hlt
xchg
gs
inc
test
sbb
movsl
xor
push
stc
ss
insb
cmp
shlb
mov
pop
mov
mov
or
push
loope
mov
ja
imul
ffree
adc
jmp
mov
add
sbb
mov
xor
aaa
outsl
or
fisubs
pop
fdivr
inc
push
push
mov
push
push
dec
out
fsubrl
pop
and
mov
mov
cmpsb
push
mov
mov
xor
sub
push
bound
xchg
cmc
jge
out
ja
sti
fldt
sbb
cld
xchg
insb
test
ret
shl
xor
mov
bound
je
add
mov
ret
cmp
movsl
lret
push
aaa
and
xor
xchg
sti
sbb
cmp
or
xlat
add
and
in
lea
mov
cmpsl
or
les
in
js
dec
lods
sti
testb
xchg
cltd
jae
pop
pop
push
push
jl
lret
movsl
lret
mov
movsb
mov
jle
sub
mov
popf
les
inc
loop
cmc
daa
jle
xchg
mov
xchg
lcall
in
fsub
out
sbb
inc
push
pop
mov
push
mov
popf
lock
movb
testb
scas
add
cmpsl
jl
ficompl
ret
fdivr
jg
mov
push
pusha
jo
pop
push
inc
mov
add
call
repnz
push
xchg
test
adc
mull
sbb
jmp
add
cltd
int
sbb
popf
jb
sbb
dec
outsl
les
or
mov
fadd
inc
mov
mov
mov
repnz
sbb
fstpt
pusha
leave
push
orl
in
push
bound
mov
cli
insl
push
mov
out
nop
push
fadds
imulb
hlt
cmp
scas
and
add
out
fsubrs
lds
push
mov
jl
mov
pop
sub
jl
dec
push
xchg
into
fsub
dec
cmp
mov
les
push
lret
in
je
mov
adc
pop
std
mov
das
pop
mov
adc
or
in
pop
sub
fmuls
inc
enter
dec
jg
dec
lahf
adc
mov
jnp
jl
lods
sbb
pop
mov
mov
pop
jp
mov
inc
cmp
xlat
inc
xchg
stos
xlat
adc
sub
dec
mov
outsb
mov
lcall
xor
push
cmpsb
cltd
mov
adc
inc
aas
mov
or
jbe
sub
mov
rolb
dec
lds
out
aam
xor
pop
cmp
or
adc
cmpsb
sub
jne
cmpsl
daa
rorb
rorb
add
js
xchg
out
adc
pop
shrl
test
jl
in
and
fnsave
and
fisubl
lds
pop
insl
leave
inc
cmp
repnz
jle
jp
push
mov
sbb
inc
mov
test
aam
jb
pop
fwait
jle
or
sarb
iret
pushf
sbb
dec
jns
or
mov
sub
inc
sti
cld
arpl
jae
roll
ret
lahf
popf
in
cmp
pusha
test
inc
out
and
cli
mov
adc
inc
pop
mov
pop
mov
xor
nop
xor
lcall
push
in
cli
int3
mov
mov
push
and
dec
test
xchg
shrl
int3
sub
outsl
popa
movl
dec
cltd
flds
mov
aas
stos
sbb
or
jne
xchg
or
xor
movsl
jge
mov
mov
mov
pop
insl
jmp
xchg
mov
in
lods
ret
pop
addr16
add
add
pushf
in
movsl
cltd
ret
inc
movsl
fsubrp
insb
das
das
bswap
adc
jp
nop
mov
daa
in
adc
jp
lock
test
push
mov
push
sbb
inc
add
dec
lahf
test
mov
fwait
and
xchg
fildl
out
inc
sbb
and
xorb
mov
xlat
sub
xchg
xchg
in
in
dec
sub
aas
stos
push
and
cli
lcall
xor
addr16
mov
les
dec
and
inc
pop
into
out
dec
pop
mov
dec
lea
xlat
adc
mov
sub
cmp
adc
dec
add
nop
std
in
outsb
inc
pop
cmpsb
subb
sbb
ja
sbb
dec
xchg
out
fsubl
fcom
fs
lahf
in
xchg
sarb
xchg
mov
pop
push
fdivs
in
xor
xchg
push
js
std
fwait
outsl
out
adc
fstp
mov
xchg
mov
scas
ret
adc
fdivl
in
dec
imul
dec
idivl
lret
jge
or
mov
push
fstpt
out
adc
iret
fs
cmp
scas
popa
dec
add
rclb
js
mov
push
jge
in
ret
in
es
mov
sub
insb
popf
rol
aas
hlt
mov
ss
dec
sbb
mov
arpl
jbe
jnp
mov
push
pop
sbb
cmp
mov
pop
mov
pop
or
aam
cmpl
adc
push
adc
cmc
nop
nop
je
notl
mov
mov
jl
mov
push
cli
jmp
xchg
enter
xchg
insl
cmp
fwait
cmpsb
lods
xchg
fildl
sub
cmc
or
dec
xchg
les
or
in
mov
fwait
daa
and
lock
jg
outsb
clc
jp
push
int
test
test
jle
jp
mov
cmp
mov
dec
push
dec
sbb
scas
inc
mov
adc
es
dec
push
dec
in
adc
int
push
mov
push
sub
xchg
adc
mov
mov
dec
loop
mov
cwtl
pop
or
cmp
push
xchg
fnstenv
cmp
aam
cmpb
ficoml
inc
cmp
jl
mov
jle
and
mov
shrd
aas
push
mov
xchg
outsl
mov
sub
dec
jnp
inc
std
xor
in
push
adc
and
clc
mov
lahf
jae
jns
out
test
pop
add
push
or
push
fucomp
pop
pop
xchg
mov
mov
jno
in
adc
xor
jo
lahf
call
icebp
aam
sub
roll
add
cmp
dec
jnp
cmp
daa
mov
mov
and
mov
lret
pop
sahf
bound
js
mov
fisttps
nop
shll
das
clc
je
hlt
ljmp
push
cmp
outsb
int3
iret
cmp
sbb
fistps
mov
xor
insb
fisubrs
mov
mov
and
jb
or
mov
mov
sahf
dec
xchg
nop
insb
es
lods
xchg
pop
iret
sub
js
hlt
lea
push
fisttps
movsb
jae
cltd
lods
loope
push
inc
jo
jbe
dec
into
sub
je
lcall
xor
adc
mov
das
xor
outsb
push
outsb
mov
mov
shll
mov
mov
sbb
cltd
lret
or
lea
mov
incb
mov
inc
aaa
cwtl
lods
cwtl
sbb
rdpmc
iret
data16
and
xor
pop
call
pop
dec
mov
rolb
jp
push
hlt
stos
rorb
lret
iret
cmp
pop
xor
dec
add
dec
add
dec
ja
dec
sub
mov
and
mov
add
push
cmp
pop
into
pop
addl
stc
cli
or
lahf
ss
jp
pop
icebp
mov
bound
cmc
and
add
sub
out
xchg
jmp
jle
adc
mov
push
and
out
cmpsb
dec
adc
adc
jbe
sahf
test
pop
xor
push
mov
push
fucomi
jg
mov
jg
cmp
xchg
cmp
adc
jno
outsl
aad
outsb
add
cs
or
or
sub
add
pop
mov
lods
jle
call
fwait
lea
fdivl
pop
push
ror
rorb
add
daa
pop
pop
in
pushf
fnstsw
push
sub
push
int3
inc
imul
or
mov
and
shll
jg
loopne
sti
sub
mov
sbb
xorl
and
push
clc
std
pop
subl
adc
pop
loopne
jecxz
out
leave
mov
jae
rep
fsts
leave
repz
mov
or
sbb
mov
push
push
push
nop
cmp
lds
cmp
in
stos
ja
sbb
das
jo
mov
mov
je
mov
and
push
inc
dec
dec
sbb
add
sti
push
iret
vpaddb
test
sbb
inc
or
fmuls
pop
lods
jmp
cmpsl
xchg
pop
add
rorl
xor
sbb
lds
xchg
inc
out
jo
fdivr
andb
lcall
jmp
out
clc
cmpsb
adc
add
imul
xor
imul
fsubrs
gs
idivl
cmc
jno
loopne
sarb
cld
aas
mov
out
xchg
push
clc
andl
pop
lcall
lret
ret
loopne
testl
pop
insb
xchg
add
push
sahf
ljmp
xchg
test
jbe
jmp
movsl
insb
nop
lds
pushf
jmp
xorb
xchg
add
lds
sbb
lret
ljmp
fldl
in
push
aas
jmp
add
inc
sub
mov
inc
faddl
fnsave
mov
repz
xor
adc
xchg
mov
push
push
iret
imul
push
xchg
test
mov
jnp
dec
mov
inc
icebp
lock
adc
imul
dec
add
xchg
ret
jo
fstps
std
std
test
xor
adc
sub
loope
cltd
jnp
fistpl
pop
jo
push
adc
jbe
cwtl
jle
xor
fldcw
lret
repnz
dec
test
mov
movl
sbb
setns
mov
test
pop
push
lods
movsb
cmp
jb
test
clc
sub
mov
jnp
jno
push
dec
or
rol
negb
mov
cmp
jae
inc
jmp
ds
dec
cwtl
add
cmc
jmp
cltd
sub
repz
in
in
mov
fwait
idivl
or
jge
cmp
test
mov
sub
mov
sub
je
outsb
adc
push
and
iret
xor
cwtl
pusha
in
cmp
cs
ss
movsb
add
push
ljmp
addr16
sub
jno
test
dec
push
sub
sbb
clc
iret
aaa
jnp
dec
pop
out
icebp
pop
adc
inc
pop
xchg
mov
xchg
je
divb
leave
aam
in
pop
mov
jo
aas
lret
repz
iret
push
outsb
mov
arpl
pop
sahf
fcmovb
push
insl
fldl2t
cwtl
mov
sub
mov
adc
xor
fs
jg
imul
mov
or
add
outsb
xchg
lretw
jo
xor
fsubr
aaa
adc
mov
popl
mov
dec
mov
or
cmp
bound
cmp
pop
insl
inc
and
xchg
jae
mov
push
je
sahf
or
rcl
xor
xchg
movsb
rolb
mov
jle
out
in
push
jnp
repz
je
mov
cmp
xlat
jmp
jne
js
pop
popf
dec
pop
out
jg
mov
add
jne
test
push
inc
mov
ss
mov
iret
les
rol
mov
inc
mov
mov
out
jo
lret
xchg
lods
jmp
jb
leave
hlt
push
stos
cmp
aam
out
and
cmp
daa
push
mov
stc
popf
ljmp
mov
iret
adc
mov
int3
rcrb
mov
cs
adc
lcall
pop
test
sub
fmull
cld
pop
lcall
mov
sbb
jle
add
test
and
rclb
jne
aas
push
stos
xchg
mov
mov
add
push
call
add
daa
dec
mov
mov
xchg
shl
shlb
push
push
mov
test
push
xor
inc
fidivrl
ja
push
sub
nop
add
pop
sbb
push
fmuls
pusha
lds
stos
xchg
inc
aam
mov
push
mov
xor
xor
dec
aam
push
rcrl
jo
pop
je
incl
push
stc
repnz
popa
mov
inc
jne
rclw
in
jl
dec
jns
arpl
std
mov
push
addb
dec
push
cmp
mov
out
jne
stos
rcl
cwtl
jl
enter
mov
sub
dec
xorb
adc
push
adc
call
icebp
jl
outsb
mov
mov
cmpsl
popa
idivb
sbb
and
and
in
xor
xchg
sarl
lea
and
arpl
ficompl
adcl
mov
ret
sbbb
xchg
push
pop
add
pop
inc
lods
lret
lea
out
ljmp
push
jno
rolb
pusha
leave
fldl
out
jl
or
inc
aaa
inc
jg
stos
arpl
rclb
jno
adc
fisttpl
xor
orb
dec
out
repnz
mov
push
sbb
adc
push
movsl
cmp
mov
pop
out
mov
sub
jecxz
mov
add
es
sarl
inc
pusha
mov
ds
push
cmp
ffreep
jg
mov
mov
mov
push
jl
movsb
push
mov
xorl
mov
xor
add
enter
xchg
xchg
rcr
popa
cmp
stos
sub
adc
cltd
push
adc
movsl
sbb
push
inc
call
sbb
xor
mov
inc
clc
cmp
aad
icebp
xchg
ret
push
push
clc
iret
jp
dec
cmp
fs
loopne
cs
xorb
iret
outsl
js
sahf
sub
mov
jae
push
sub
push
stc
cmc
pop
fbstp
dec
dec
push
lret
jge
pop
sub
jno
lcall
jns
cmc
lret
imul
add
sub
pop
mov
fwait
mov
bound
xchg
sbb
ds
shl
xor
in
dec
dec
sarl
sti
in
mov
fldcw
add
sbb
in
dec
outsb
sub
movl
ret
les
xchg
jmp
int
idivl
repnz
negb
hlt
push
xchg
orl
jne
mov
fsubp
dec
lret
mov
mov
sub
mov
ret
xlat
mov
addr16
outsl
inc
sub
and
ljmp
xchg
fs
dec
movsl
fwait
sub
jle
jae
repz
sbb
xchg
xor
cmc
popa
into
mov
ja
clc
mov
lret
outsl
repnz
in
out
dec
daa
mov
loop
cmp
add
mov
cltd
push
outsb
mov
test
into
js
in
jns
in
cmp
sgdtl
rcrl
inc
out
out
fs
imul
xor
pop
dec
and
push
mov
push
mov
outsl
xchg
cmp
dec
lret
pop
mov
negb
rcr
sbb
psubusw
pop
xor
or
pushf
insl
loopne
aas
pop
adc
adc
and
testl
sub
lahf
dec
pusha
push
add
or
flds
sti
adc
ret
xchg
js
dec
sbb
jg
into
cs
lods
pop
and
fldcw
mov
fdivr
sub
cmp
clc
stc
stos
xlat
fld
fcoml
push
push
cmp
loope
fwait
cwtl
inc
dec
xor
jbe
fnstsw
shll
inc
and
mov
adc
mov
mov
stos
scas
pop
orb
data16
shld
rclb
mov
xor
or
test
pop
int3
push
lcall
sub
mov
jno
sub
push
or
in
aad
and
aaa
out
push
cmc
in
mov
mov
adc
jmp
add
xchg
xlat
call
pop
clc
pop
lret
stos
ret
stos
add
add
sub
adc
sbb
sti
mov
jae
das
orb
xor
popl
add
imul
aas
fwait
unpckhps
dec
outsb
sbb
in
fiadds
test
cmpl
cmp
pop
pop
or
movsb
ficompl
ficomps
xchg
push
cmc
bound
stc
push
cli
insl
or
bound
pusha
jge
in
push
pop
mov
dec
shl
es
push
xchg
enter
jmp
jg
and
push
push
enter
cmp
test
jne
xchg
fs
movsl
cld
jg
shll
sbb
cmpsb
adc
shll
imul
imul
xchg
repnz
aas
and
nop
lret
cltd
cmp
cmp
lcall
fcomps
testb
pushf
outsl
inc
add
out
daa
jbe
xor
outsl
xchg
fwait
cmp
aam
jae
jno
cmp
cmp
es
inc
pop
stos
sti
sub
rorl
icebp
jb
mov
mov
cwtl
pop
shl
pop
adc
dec
aad
push
scas
xchg
test
mov
out
fcmove
das
cmc
movsl
xchg
push
cli
aad
fisubs
ret
pusha
mov
lock
cwtl
push
dec
aad
push
movl
clc
jecxz
mov
cmpsl
mov
dec
xchg
sub
xlat
cmpsb
out
xor
sbb
sbb
dec
jae
shlb
and
popl
repnz
and
shrl
je
adc
sarb
pop
inc
lea
xchg
gs
mov
push
mov
daa
test
outsl
cmpsb
mov
jno
test
push
pop
push
rcr
out
jl
pop
cmp
cltd
lea
push
std
cmc
pop
and
insl
and
mov
jns
dec
pop
daa
bound
or
push
push
fsubl
scas
fcompl
sti
mov
or
pop
lds
pop
fwait
push
and
dec
aas
es
mov
add
add
xor
or
cmpsl
mov
mov
mov
rcll
out
mov
lahf
jle
stc
mov
rcl
fdivrs
mov
sti
rcr
dec
inc
mov
lcall
mov
lret
pop
js
adc
sub
insl
ds
cmp
mov
cmp
bound
cltd
nop
cld
adc
aas
idiv
sti
cmpsb
and
outsl
pop
jae
outsb
addr16
int
xor
or
popf
inc
pop
fstl
imul
xor
mov
mov
and
push
add
pop
enter
shrl
sbb
out
pushf
ja
inc
test
es
and
sahf
movsb
rolb
dec
jo
sub
pop
bound
dec
rcrb
cmpsl
mov
and
mov
jge
lret
lock
sti
mov
cmp
add
xchg
outsb
out
fnstcw
mov
adc
test
movsl
jbe
inc
movsl
call
stos
outsb
fistpll
in
test
icebp
imul
mov
movsb
inc
cmp
cmp
les
push
scas
pop
jge
sahf
loopne
ja
ds
mov
mov
inc
dec
movsl
xor
aas
aaa
outsl
out
inc
mov
sub
mov
or
icebp
or
test
pop
insl
cmp
sar
push
jp
jns
mov
sbb
outsb
lock
inc
fidivl
bound
lcall
fucompp
insb
jae
inc
notl
pop
outsb
mov
enter
shlb
lock
mov
addb
push
push
mov
dec
sub
iret
or
cmp
adc
pop
jl
xor
or
inc
push
mov
movsb
insb
xchg
divb
mov
pop
pop
fcoms
jbe
dec
sub
sbb
and
add
or
ss
iret
lea
sbb
pop
xchg
or
hlt
icebp
sub
jl
xlat
push
loopne
push
adc
mov
int3
mov
std
jg
pop
sti
stc
and
push
sbb
mov
sbb
push
push
std
mov
cltd
xor
aad
dec
adc
insl
imul
into
out
nop
jmp
push
loope
sub
xchg
nop
sub
test
insl
or
dec
jb
inc
stos
movsb
push
push
stc
ret
mov
aaa
mov
das
or
mov
out
scas
adc
inc
inc
lret
das
adc
lahf
out
imul
xchg
jg
into
lods
xchg
pop
rdmsr
dec
sbb
in
aad
xor
out
mov
mov
out
mov
lcall
inc
adc
into
loope
rolb
icebp
sbb
jno
xlat
out
outsb
sub
movsb
adc
addr16
ljmp
mov
js
sbb
cld
lds
imull
push
push
lahf
jecxz
dec
jp
xor
or
mov
out
sbb
mov
add
jmp
imul
icebp
lds
push
mov
mov
in
lahf
call
add
lret
jecxz
mov
sub
hlt
mov
sub
mov
add
imul
sbb
xchg
ret
add
sub
push
cli
jmp
into
insb
stos
and
mov
fcmovb
scas
fstl
push
clc
mov
pop
in
or
mov
jo
nop
sbb
in
add
aas
fisttpl
xor
mov
sarl
sbb
jae
adc
js
je
and
int3
cmc
xor
cmp
neg
jge
lock
mov
inc
push
mov
dec
stos
adc
stos
int
mov
fdivl
shlb
cld
push
rcll
mov
mov
push
xor
pop
and
jecxz
in
pop
dec
pusha
mov
sub
mov
sub
pop
xchg
fs
mov
icebp
je
adc
push
das
mov
sub
rorb
iret
push
lahf
mov
sti
push
cmp
mov
pop
sbb
or
mov
mov
femms
mov
jno
or
hlt
mov
negl
dec
sbb
in
push
pusha
iret
push
xorb
inc
fdivrs
adcl
aaa
and
rcr
adc
stos
movsb
in
add
or
aaa
adc
ljmp
int
add
cld
cmpsl
imul
add
add
mov
addr16
hlt
lret
das
mov
inc
xchg
jle
test
movsb
dec
test
pop
pop
push
cwtl
shrb
sub
lcall
fildl
mov
add
xchg
push
in
pavgb
rorb
pop
sti
ljmp
jge
cmp
loop
push
mov
push
mov
adc
aam
xchg
or
jmp
out
ljmp
pop
lds
insb
or
out
jg
ret
xor
pushf
mov
sbb
aaa
inc
loop
imul
shll
xchg
sub
lods
out
dec
adc
xchg
adc
outsb
dec
adcl
add
test
adc
sbb
ds
ss
movsl
les
sbb
int
loopne
jecxz
jg
loope
or
fwait
add
jno
mov
pop
andb
adc
stos
pop
movsl
testl
adcl
pop
jmp
dec
insb
fistps
mov
jg
mov
jg
cmpsb
test
shlb
mov
ret
cmc
imul
mov
ljmp
sbbl
sbb
call
out
notl
xchg
outsl
dec
jecxz
xchg
jge,pt
mov
and
sub
das
mov
jg
fsubrs
pusha
lret
add
stc
jl
mov
std
sub
data16
push
lcall
mov
es
int3
scas
ja
ficompl
or
jp
mov
push
sub
movsl
cmp
dec
add
pop
inc
mov
sub
vmwrite
mov
add
mov
in
loope
xchg
add
jns
push
push
test
addb
pop
mov
fcoml
movsb
jp
rcrb
in
inc
dec
aad
and
test
les
sub
mov
shlb
ja
mov
repz
mov
shll
lret
dec
iret
rclb
cmp
adc
sbbl
add
repnz
mov
mov
push
aam
mov
sbb
test
add
sub
imul
mov
pop
insb
lods
popf
cmpsl
mov
pushf
arpl
xor
scas
sbb
mov
lds
xchg
xchg
inc
shl
or
mov
xchg
xchg
push
dec
jmp
sbb
jb
clc
fistpll
mov
clc
push
int
jb
cli
pop
fdivrl
cmp
pop
fwait
lods
xorl
stc
sbb
movsb
mov
lods
cmp
scas
jecxz
and
hlt
shrl
loopne
pop
pop
fwait
xchg
and
ret
dec
mov
or
inc
cs
dec
cmp
inc
mov
js
cmp
arpl
add
push
push
and
push
adc
adc
ja
xchg
pop
mov
jl
cmp
aam
push
add
fnstcw
pop
movsb
mov
sub
push
sub
sti
fldcw
push
xchg
hlt
test
dec
rorl
mov
je
mov
xor
imul
cmc
movsb
inc
push
gs
sbb
repz
pop
xor
imul
adc
pop
add
repnz
lcall
jg
inc
cld
or
ja
fneni(8087
xchg
lahf
push
ljmp
jb
sbb
sbb
sbb
pop
inc
cmpsl
sbb
lahf
or
xor
leave
fs
stos
mov
or
sub
jl
lahf
fs
pop
or
fwait
cwtl
dec
push
push
mov
sbb
popa
inc
pop
cmp
aaa
arpl
adc
negb
cmp
test
testl
fwait
xchg
push
das
loopne
and
enter
rclb
arpl
adc
cmpsl
fs
mov
and
mov
xor
mov
stos
and
test
das
inc
clc
cltd
pop
mov
jnp
add
push
push
rcrb
add
arpl
mov
fwait
lret
dec
jp
pop
cmp
inc
cmp
jmp
add
cs
xchg
push
hlt
pop
outsl
xorl
mov
ret
or
jmp
js
mov
push
fsub
fildl
cmp
push
sub
inc
and
fiadds
jp
mov
or
ljmp
addr16
sbb
jl
pop
imul
ds
mov
imul
add
mov
push
sub
movsb
sub
cmpsl
cmpsl
fadds
outsl
std
xor
mov
and
sahf
cltd
shlb
sub
xchg
push
or
js
xchg
and
arpl
enter
testl
xchg
aad
js
or
cltd
dec
mov
loopne
mov
sub
xlat
sti
je
sti
sub
notl
aaa
mov
jle
les
xchg
inc
jno
adc
fldcw
loope
cmp
pop
xor
xchg
ds
push
adc
aaa
in
push
je
lret
inc
and
jb
cwtl
enter
lock
cli
mov
jo
mov
test
jge
jno
repz
icebp
daa
stos
adc
jg
movsb
mov
add
xorl
fistl
xchg
shl
jae
jnp
inc
pop
decl
test
sbb
aas
cmp
out
or
pop
movl
mov
xchg
hlt
xor
lret
sub
sub
adc
pop
mov
pop
xor
push
push
cmp
dec
or
js
dec
mov
or
xor
jno
sub
or
mov
or
xchg
add
popa
fnstcw
adc
xor
cli
push
psllq
mov
mov
dec
xchg
fwait
sub
loopne
mov
xchg
jg
adc
arpl
dec
mov
sbb
and
cwtl
dec
push
fstps
addb
add
aam
cli
push
mov
adc
jl
addb
mov
popl
sub
push
imul
sub
dec
gs
fcompl
mov
cwtl
mov
icebp
mov
push
inc
insl
movsl
mov
push
cmp
cmpl
int
pop
dec
and
inc
mov
test
add
arpl
dec
out
push
dec
pop
test
adc
adc
addr16
xor
mov
test
orb
xchg
testb
sbb
enter
scas
loopne
into
loopne
push
ret
cmp
pop
jg
dec
ret
out
cmc
imul
or
hlt
sahf
fdivr
sbb
cmp
push
cld
inc
add
jae
daa
xchg
lret
cmp
pusha
imul
lds
hlt
ret
push
daa
jg
or
cmpsb
int
or
mov
jb
and
xlat
add
or
dec
jmp
xor
lds
push
mov
adc
mov
mov
jl
jbe
push
mov
inc
jecxz
push
and
enter
js
aas
fcoml
mov
inc
xchg
ds
xor
adc
daa
push
jae
repnz
lret
lret
lea
cmp
out
ret
sarb
inc
bound
test
mov
inc
adc
add
push
in
xchg
cltd
fcmove
xor
and
imulb
jbe
add
sbb
adc
jns
movb
xchg
jp
scas
pop
imul
ret
dec
sbb
or
sahf
fiaddl
or
cmp
fsubrs
xor
test
fnstsw
leave
mov
or
nop
lods
dec
push
fisubrl
jbe
loopne
mov
mov
out
ds
adc
and
pop
movb
inc
imul
scas
pop
stc
or
add
mov
adc
movsl
call
arpl
das
push
lods
mov
cld
out
in
faddl
pop
mov
sbb
mov
stos
pop
and
dec
in
sub
out
push
xorl
inc
mov
mov
dec
inc
not
add
cmpl
xor
sbb
icebp
adc
mov
out
test
call
pop
jp
ljmp
das
mov
sub
or
pop
fs
movsb
add
ficompl
fs
addr16
ds
and
imul
mov
lds
xor
loopne
xchg
inc
mov
add
lret
pop
dec
xor
shl
dec
dec
fimull
or
or
sbb
xchg
inc
mov
or
cld
mov
cmc
jp
mov
inc
mov
jecxz
xchg
fldt
test
int3
ficoml
sarb
pop
jp
dec
iret
gs
pop
add
adc
ja
push
xchg
lahf
insl
js
xchg
sbb
push
pushl
and
ret
mov
loopne
pop
push
bnd
pop
test
pop
dec
stc
dec
or
xchg
pop
cmp
lds
jle
xchg
clc
dec
pop
stos
push
pop
sbb
dec
lds
mov
sbb
jp
sbb
shlb
xlat
ret
xor
cmp
fwait
ds
adc
and
fldt
ds
pop
ficoms
xor
into
outsb
pusha
inc
das
mov
cmpsl
lds
jg
and
adc
into
stc
dec
mov
xchg
lea
mov
dec
shll
dec
push
jnp
loope
hlt
sbb
adc
dec
cs
pusha
mov
mov
or
add
in
sub
dec
lds
xchg
cmp
mov
fistl
push
dec
push
cli
js
outsb
mov
cmp
pop
sbb
outsl
push
aad
sbb
fsubrl
hlt
fdivs
jne
mov
out
inc
cmpsl
add
stos
fisubs
daa
jecxz
test
jge
push
jno
popf
mov
pop
xchg
mov
sub
jle
mov
hlt
comiss
or
pop
ds
in
call
adc
sbb
adc
imulb
jmp
stos
iret
in
iret
pop
mov
push
loop
jbe
xchg
push
or
pushl
roll
scas
lcall
ret
push
andl
or
insb
shl
fdivl
sub
test
or
xor
fwait
adc
sbb
sbb
in
fisttpll
push
mov
test
and
inc
cwtl
xchg
inc
mov
pop
jmp
stos
stos
and
jns
iret
aas
xchg
mov
enter
or
mov
pushl
stc
mov
movsb
cmp
out
fwait
xchg
aam
stc
sbb
cmpsb
mov
xor
or
and
dec
push
xchg
out
mov
mov
xor
in
arpl
mov
addr16
std
push
add
jmp
flds
xchg
std
out
cld
mul
out
or
jmp
mov
call
repnz
call
test
sub
push
js
loope
add
insl
stos
ret
sub
ja
push
out
jno
sub
fcoms
sarl
inc
jne
shrb
push
dec
gs
push
fs
dec
cmc
es
cmp
mov
daa
in
jecxz
inc
in
insb
jb
in
mov
inc
and
pushw
je
icebp
adc
jo
clc
pusha
cmpsb
adc
imul
add
mov
test
clc
ficoml
mov
imul
inc
cltd
arpl
xor
jge
adc
les
ds
out
rol
xor
and
push
lcall
lret
mov
rorl
mull
xchg
pop
call
cs
cmp
scas
rcrl
adc
mov
pushf
jl
or
jg
call
repnz
xchg
outsl
pusha
xchg
repnz
jne
add
faddl
aad
mov
inc
or
subb
or
adc
dec
lcall
fbstp
les
neg
stos
lret
adc
sbb
add
add
xchg
dec
adc
xor
sti
jge
in
mov
js
adc
rorb
subl
lock
lods
adc
adc
sub
add
fwait
ljmp
les
mov
daa
adc
adc
pop
xchg
das
test
xor
adc
xor
mov
inc
adc
lea
xchg
mov
sbb
jb
dec
mov
inc
jns
imul
cmp
mov
pop
xchg
cli
mov
aaa
sbb
dec
push
cli
push
fisttpl
pop
push
out
sbb
iret
out
dec
mov
jb
cmpsl
push
sahf
xchg
imul
aaa
out
push
imul
jl
xchg
insl
push
inc
imul
test
xor
fs
push
mov
sub
inc
das
push
cltd
add
rcll
push
jge
in
dec
add
dec
jbe
pop
adc
aam
xorb
jns
aad
push
sbb
les
xchg
pop
inc
pop
movsl
arpl
mov
xlat
roll
pop
sahf
sub
fsubl
cmpsb
jmp
inc
pop
jb
dec
incb
cmp
xchg
out
aaa
push
jb
push
push
fcoml
and
adc
orb
cmp
jmp
or
adc
xor
sub
jne
ss
std
subl
sarb
jb
inc
cmpsb
sub
cmp
push
loopne
adc
push
push
push
out
xchg
fcmove
sbbb
xchg
pushf
imul
and
add
stc
adc
jno
adc
outsb
and
mov
clc
xor
xchg
xchg
sub
outsl
jl
insl
jb
lds
xorl
repnz
cmpb
mov
cmpsb
adc
ja
outsl
xchg
leave
negl
ja
rol
push
aaa
xchg
ds
pop
ja
mov
inc
popa
mov
jo
in
cmp
in
jecxz
push
mov
sub
mov
das
push
adc
inc
divl
push
pop
lret
adc
and
xor
mov
mov
xor
lods
cwtl
scas
lret
popa
mov
icebp
mov
outsl
and
test
inc
cmp
pop
repz
push
cmp
pop
xlat
mov
cli
aaa
mov
jbe
imul
add
lahf
ret
movq
sbb
outsl
mov
dec
movsb
adc
and
jp
sbb
test
aad
lods
mov
adc
dec
call
cmpsl
add
nop
mov
pop
jl
dec
jp
out
mov
push
add
push
subl
pop
movsl
ret
out
xchg
loop
cmp
xchg
add
sbb
shrl
jmp
and
add
mov
sub
push
mov
xchg
adc
pusha
cmc
xchg
xchg
pushf
push
dec
out
mov
jecxz
xlat
jno
cmp
pop
enter
push
cmpl
and
pusha
cmp
jbe
xor
xchg
fcmovbe
sbb
and
add
add
pushf
cli
int3
lahf
or
stos
xor
mov
cltd
push
cltd
sub
dec
xor
mov
jbe
or
test
push
cmpsl
push
cmc
push
outsl
lret
add
xchg
sahf
adc
mov
fsubrs
xchg
inc
sbb
jnp
fbld
lcall
pop
ret
fiaddl
mov
bound
stos
jo
stos
and
bound
adc
insl
out
and
outsb
mov
push
into
incb
pop
jb
sbb
enter
imul
ljmp
push
cltd
push
mov
add
jo
out
gs
lock
aad
or
dec
ret
xchg
mov
sbb
loop
loope
lcall
ret
pushw
data16
shll
jecxz
inc
add
shrb
pushf
lcall
pop
arpl
repnz
cmp
xchg
test
jg
sub
mov
jle
push
jae
js
xchg
jg
jecxz
jne
jae
das
in
mov
sub
idiv
xchg
xor
adc
sbb
sub
mov
sbb
mov
sub
imulb
int
cli
sub
pop
xchg
hlt
mov
pop
out
inc
shll
pop
inc
mov
repnz
gs
daa
testl
aam
pop
or
fistpl
push
xchg
lret
test
add
mov
pop
pop
sar
sbb
inc
stos
inc
and
sbb
mov
jmp
aas
sbb
scas
lahf
icebp
inc
dec
subl
pop
out
fs
push
jb
ss
xor
movsl
fwait
into
jg
adc
xor
iret
inc
popa
jecxz
jmp
imul
lret
mov
mul
loope
jb
leave
pop
adc
daa
mov
addr16
or
sbb
pop
cli
and
mov
fidivl
std
int3
ja
pop
push
xchg
mov
cmp
mov
mov
adc
or
and
sbb
imul
push
orb
push
jecxz
push
adc
les
inc
push
loopne
stos
lea
aaa
mov
cmp
mov
sub
movsl
cmp
jnp
adc
fstps
lock
adc
push
xchg
xor
roll
mov
mov
mov
jg
push
xor
or
je
jno
lock
cmpl
and
jg
sbb
rorl
or
push
scas
cli
fldenv
mov
pop
add
clc
popf
int
aad
fsubrl
jecxz,pn
rcrl
push
imul
ja
lods
stc
js
pop
lahf
js
pop
arpl
pop
mov
ret
xor
dec
jp
jle
cs
mov
jmp
adc
push
daa
fbld
mov
jmp
and
jno
mov
xchg
dec
mov
bound
mov
sarl
cmp
pop
pushf
xor
mov
shrb
pop
xor
dec
pop
sub
pop
cmpl
dec
dec
stos
jmp
cwtl
ret
fwait
iret
repz
adc
insb
mov
stc
hlt
xor
sub
mov
jecxz
xor
cmp
and
fdivs
xor
mov
push
adc
lret
cs
pop
dec
leave
and
outsb
sbb
jmp
cmc
sbbl
je
cmp
fwait
repz
dec
lea
sti
mov
jl
or
push
cmp
cmp
loope
fcompl
fistpll
xchg
dec
adc
test
enter
xor
pop
andb
mov
std
and
xchg
sub
int
sub
andb
xor
push
loope
cwtl
xchg
mov
testb
stc
outsl
adc
leave
xor
xor
or
aam
push
sbb
cmp
cmp
inc
mov
or
mov
jle
push
adc
push
and
ds
icebp
or
and
out
sbb
sahf
xor
inc
jbe
ds
in
ss
and
addr16
xchg
ja
pop
add
rorb
lret
dec
loop
outsl
mov
jl
and
repnz
mov
mov
jo
adc
out
sub
in
das
in
fsubs
clc
stos
mov
and
sub
cwtl
jbe
scas
pop
sarb
and
out
test
jp
xlat
cwtl
add
ss
sbb
imul
add
mov
push
adc
enter
push
mov
sbb
mov
and
jbe
fistl
xchg
xchg
hlt
jns
nop
je
sarb
jmp
adc
and
pop
add
adc
mov
scas
repnz
push
adc
fisttpl
dec
dec
test
out
ret
aaa
mov
pop
push
xor
mov
mov
sub
mov
pop
mov
loopne
dec
xchg
jecxz
inc
int
nop
push
pop
fisttpl
stc
adc
and
ret
gs
push
fucomi
loopne
add
lea
mov
xor
mov
pusha
cmp
das
cmp
aad
or
lahf
in
stos
xchg
insl
push
addr16
mov
call
push
icebp
frstor
mov
fsubrp
pop
mov
movsl
adc
xchg
test
ficoms
adc
mov
stos
mov
cmp
or
jmp
pop
flds
jg
and
or
jle
or
mov
push
xchg
push
out
mov
lds
rolb
pop
stos
inc
loop
outsl
test
test
enter
or
ja
movsl
fprem1
mov
popa
add
sub
out
mov
ret
add
icebp
mov
mov
loop
pusha
fbstp
mov
lcall
addl
aas
fwait
push
cmp
mov
fadds
xlat
mov
sub
out
sub
dec
loopne
sbb
pop
add
adc
shrb
add
lock
lret
pop
cmc
inc
xchg
cwtl
lds
sahf
popa
cmpxchg8b
add
sub
and
shl
mov
ret
shlb
int
xor
mov
arpl
arpl
sub
jecxz
filds
push
fisttps
push
idivl
inc
or
ror
outsl
push
mov
fwait
push
pop
cli
pop
sbbl
jo
xchg
int
test
mov
xor
jns
sub
mov
popa
and
mov
into
and
mov
adc
sbbb
sbb
push
es
adc
dec
shll
std
insl
mov
lcall
in
dec
mov
push
mov
add
test
or
inc
and
les
add
aas
sbb
inc
xchg
xor
or
cwtl
xchg
mov
or
inc
movsl
cmp
mov
xchg
in
jb
pop
adc
push
pop
mov
in
pop
mov
scas
nop
mov
out
adc
or
adc
xor
jmp
dec
cmp
sbb
add
movsl
addr16
jg
jnp
stos
mov
push
fcmove
mov
pop
pop
pop
and
fnstsw
pop
xlat
ret
ficompl
pop
ds
and
or
mov
pop
stos
stc
loope
mov
cmp
xchg
mov
xchg
js
pop
xchg
mov
fistl
scas
pushw
xchg
push
jnp
negl
mov
into
inc
jno
mov
xlat
pop
push
adc
std
mov
cltd
shll
pop
dec
leave
cwtl
jg
sub
cwtl
jbe
movsb
mov
jmp
jbe
cmp
idivb
xor
and
insl
lds
rolb
xor
stc
insb
add
xor
outsb
inc
xor
sbbl
mov
jns
push
loop
adc
mov
dec
cmpsb
fcomps
mov
push
push
loope
repnz
add
and
cmpsl
mov
xor
nop
xchg
cmp
cmp
negb
mov
fiaddl
sti
repz
mov
and
test
aad
xor
test
adc
stos
fs
popf
jno
test
call
pop
dec
or
mov
loop
lods
jl
add
pop
push
sahf
ss
xor
inc
sbb
jecxz
jae
fsubp
pop
dec
adc
mov
data16
das
iret
int3
mov
sahf
outsb
xlat
les
mov
clc
adc
or
pop
sti
lods
mov
jbe
mov
push
fiadds
jo
fistpl
test
mov
mov
ja
gs
lret
rolb
pushf
inc
bound
popf
jge
push
js
or
xchg
out
mov
das
lock
aam
jmp
dec
sbb
dec
in
lods
lods
les
cmpsb
repz
shrb
adc
nopl
push
jmp
lret
test
sbb
cwtl
out
ljmp
out
icebp
cmpsb
xor
mov
xchg
test
xorl
cli
dec
mov
add
mov
out
mov
add
pop
mov
cli
mov
pop
sub
xor
inc
push
ljmp
loop
jnp
es
sbb
mov
mov
cmp
cmpsl
dec
sbb
add
and
adc
pop
cld
das
mov
xchg
int3
add
mov
inc
adc
sbb
mov
add
int
jnp
lea
sbb
cmp
push
enter
sub
jle
mov
pop
cmp
jne
sbb
pop
xor
lret
jl
mov
lods
inc
out
mov
and
jl
and
sbb
mov
lcall
pusha
aad
cwtl
data16
dec
lods
jb
test
sti
push
cmpsl
push
mov
sub
cld
bound
rorb
dec
sub
mov
movsb
rcrl
stc
mov
jp
jle
jae
add
jno
push
iret
cli
jae
stos
sarb
out
lods
clc
ds
lods
jle
ret
stos
or
inc
ficompl
int3
mov
jae
jae
xchg
dec
das
sbb
adc
cmp
xor
jbe
scas
mov
adc
or
and
arpl
lock
push
mov
xchg
clc
loope
ficomps
std
xchg
push
adc
cmp
cmpsb
leave
add
in
insb
sahf
or
repnz
fsubrl
add
mov
mov
inc
test
nop
enter
daa
add
sbb
fnstsw
pushl
fcomps
pop
enter
and
addr16
xor
mov
fisubrl
adc
jge
popf
dec
adc
adc
xchg
std
sahf
cwtl
js
lods
fnsave
sbbl
jno
jp
enter
add
cmp
sbb
inc
aaa
dec
pop
insl
dec
inc
and
adc
adc
leave
ljmp
popf
int3
mov
xchg
popa
cmp
hlt
sub
shll
mov
sahf
mov
lret
loopne
ds
xlat
and
pop
iret
cmp
insl
pushf
in
and
xchg
sub
in
push
fcoml
outsl
mov
mov
pop
stos
out
cmp
or
popa
dec
push
jnp
ret
repnz
dec
loopne
mov
shll
inc
adc
push
xchg
ror
lods
inc
rolb
bswap
xor
adc
sbb
cld
sub
dec
cltd
fistpl
lret
push
les
and
jbe
jnp
pop
nop
push
or
adc
xchg
bound
push
sbb
insl
sub
sarl
push
aam
shrb
jnp
mov
pop
out
cmp
xchg
mov
lcall
dec
push
push
push
push
sbb
lahf
andl
hlt
push
push
arpl
clc
ja
lcall
push
pusha
jo
popf
in
cmp
in
pushf
mov
sub
fcoml
in
xor
icebp
sbb
mov
insl
aam
cmp
pop
orb
ret
xor
fisttps
iret
or
jmp
aaa
push
cli
pop
imul
jl
fldcw
cmp
add
adc
jl
pop
dec
push
sbb
jle
add
loop
jp
jecxz
or
push
daa
push
pushf
cmp
adc
mov
push
ss
mov
or
sub
jae
jnp
insl
fsub
subl
into
push
xchg
xchg
repz
aad
mov
pop
popf
sub
add
jae
stc
push
mov
mov
xchg
ljmp
outsl
inc
popa
into
jno
jne
rclb
test
mov
ja
imul
push
sub
lcall
adc
and
sbb
sbb
push
mov
jle
push
xchg
cmp
insl
cmp
call
push
stos
pop
mov
mov
or
test
jmp
fucompp
jge
addr16
mov
loope
inc
mov
adcl
xor
push
enter
push
jno
leave
dec
push
jne
fmuls
adc
daa
push
dec
mov
cmp
test
and
push
mov
lods
mov
xchg
in
inc
pop
pushf
movsl
push
data16
sbbb
outsb
mov
xor
add
rolb
inc
dec
adc
mov
pop
cwtl
jne
imul
add
inc
je
and
loopne
dec
hlt
adc
add
xchg
push
addr16
aas
shr
mov
dec
out
mov
mov
mov
mov
sbb
pusha
js
push
sbb
rclb
sbb
or
push
sbb
jg
lret
dec
cmp
lahf
pushf
jmp
lret
adcb
popa
push
mov
aaa
andl
out
lret
js
test
dec
or
int3
lea
or
bound
test
repz
mov
lds
ja
push
xchg
and
cmp
mov
sahf
insl
sub
jno
into
push
sub
mov
imul
jl
in
repnz
ret
and
rcl
mov
dec
jle
dec
out
mov
imul
cli
mov
push
jne
fs
jmp
mov
mov
loopne
int3
add
mov
fstpt
jno
repz
cmp
push
js
adc
ret
rorl
mov
into
sbb
xor
subb
mov
lea
sub
mov
loopne
cmp
dec
loope
add
in
sbb
jnp
into
mov
mov
lods
sbb
mov
pusha
mov
shl
movsb
lea
mov
jp
xor
jb
fcmovnu
nop
mov
in
cmp
sbb
cli
outsl
sahf
lret
inc
and
inc
lahf
add
loopne
cmp
add
inc
dec
jmp
insl
dec
inc
pop
sub
or
insl
jg
shrb
xchg
and
fmul
shlb
cmpsb
jns
rcrb
cmp
add
xchg
fmul
mov
adcl
or
cld
aad
inc
adc
mov
shrd
push
ljmp
movsl
xor
clc
pop
movb
xchg
inc
mov
push
lcall
lock
pusha
int3
add
flds
scas
pop
scas
sub
sub
jne
inc
clc
dec
iret
mov
jecxz
or
push
outsl
xchg
push
std
notb
mov
mov
mov
mov
add
imul
cmp
scas
xchg
mov
dec
mov
sbb
mov
cmp
or
jmp
sub
fisubs
je
sbb
push
ret
cli
insb
inc
or
dec
sbb
popl
dec
int
lock
cmp
add
pop
xor
stc
dec
sub
pop
fs
and
adc
xor
outsl
adc
pop
sbb
push
mov
scas
mov
dec
jns
pop
push
or
xor
cmp
mov
lret
iret
ja
dec
xor
cmp
sbb
mov
and
push
lahf
daa
jnp
test
mov
jg
or
cmpsb
ret
sarl
jbe
enter
or
insl
ljmp
fisttpl
xchg
es
or
pushf
jmp
in
or
mov
testl
lahf
movsl
cmpsb
icebp
mov
ljmp
sbb
repz
insl
in
loopne
ljmp
push
pop
out
xor
repz
stos
sbb
repz
inc
push
scas
inc
repnz
pop
xor
in
sbb
cld
xor
popa
lcall
mov
xor
jmp
subl
insb
inc
sub
pop
pop
pop
aaa
and
or
jmp
fimuls
push
gs
mov
test
or
movsl
pop
js
outsl
sbb
xchg
inc
mov
xchg
in
fcoms
mov
xchg
pop
repz
mov
enter
mov
test
insb
test
mov
mov
xchg
mov
icebp
mov
out
fisttps
lods
adc
push
test
add
adc
scas
sub
pop
fsubp
sbb
pop
push
lret
cmc
cld
das
jbe
test
cmp
gs
dec
sbb
push
push
dec
push
out
pop
mov
int
lods
rclb
pushf
cli
stos
aaa
jmp
inc
lret
repnz
out
iret
mov
das
jo
lods
fs
jae
in
dec
jo
fimull
lahf
enter
test
in
push
jl
adc
mov
jne
xor
cltd
out
push
into
add
or
xchg
cmp
pop
loopne
sub
cmp
xchg
jg
xchg
out
xor
scas
and
data16
scas
adc
or
shll
or
and
out
sub
mov
aaa
out
sahf
mov
add
outsl
xchg
xchg
dec
bound
in
adc
mov
js
inc
xchg
lods
movsb
test
push
cmpsl
sub
add
sahf
inc
xchg
mov
test
mov
push
out
jb
cmc
mov
pop
movb
jge
lcall
mov
pop
jmp
mov
mov
adc
mov
js
movsl
jb
jecxz
push
mov
push
mov
insb
and
aad
ja
adcl
dec
mov
insl
xchg
jns
sub
shl
cmp
pop
ds
loopne
sbb
test
sarl
fsubs
out
sub
loopne
push
paddq
movsb
stos
outsb
mov
xor
js
mov
adc
mov
test
xchg
js
aaa
cmp
adc
pop
mov
lret
lret
xchg
lds
xlat
sbb
push
mov
lods
fnstenv
pushf
push
jo
rcrl
xor
or
cli
pop
xor
imul
pop
cmp
minps
pop
dec
pop
insl
xchg
jae
scas
repnz
mov
movsl
iret
add
add
test
rcrb
mov
mov
add
xorl
fwait
in
pop
mov
xchg
push
xor
pushf
adc
ficomps
rol
icebp
mov
pop
in
stos
lock
jbe
jmp
mov
xchg
icebp
pop
mov
fwait
in
subl
xchg
pop
pop
push
inc
xchg
out
ja
testl
std
cmpsl
mov
inc
in
pop
mov
and
insl
imul
lcall
mov
pop
insl
pop
pop
mov
sub
push
stc
aas
popa
or
div
add
jg
in
cltd
push
test
sbb
and
ret
iret
test
xor
in
dec
or
lahf
adc
orb
dec
sbb
movsb
and
andb
nop
xchg
dec
mov
push
push
cmp
cmp
and
shrb
arpl
cmpsb
dec
push
cmp
in
out
and
pusha
xor
or
movsl
pop
inc
cltd
divl
jnp
push
xor
daa
xchg
aam
push
cmp
cwtl
add
int3
jmp
sbb
ljmp
popa
cld
insb
test
pop
sbb
pop
add
pop
cmp
movsl
mov
inc
jp
dec
add
cld
push
jmp
cmp
pop
push
cmpsb
in
push
lret
lret
cmpsb
jl
push
rolb
fisttpl
les
xchg
jo
sbb
loope
or
ja
cli
pop
shrl
sbb
stos
add
inc
loopne
xor
jp
inc
cmc
push
or
out
and
aam
stc
sbb
sahf
xor
insb
and
cmp
insb
aaa
or
es
adc
mov
inc
push
in
sub
push
pusha
jo
icebp
inc
jne
xor
xchg
jge
mov
imul
sbb
sahf
jno
mov
cs
add
subps
mov
jge
insl
sbb
sub
cmc
inc
int3
daa
pop
into
out
jle
or
push
pop
lcall
or
mov
pop
sti
pop
mov
cmp
xor
daa
jp
clc
cmp
ret
insl
and
movsl
ljmp
pop
jno
scas
push
lods
jnp
es
pop
xor
test
daa
jb
jnp
mov
dec
push
mov
je
mov
push
pushl
std
mov
movsl
pusha
and
imul
js
mov
jmp
xor
adc
xchg
lods
mov
mov
cs
lahf
ja
xchg
dec
int3
inc
and
xchg
sub
std
ds
test
rorl
es
or
inc
mov
cltd
and
fucomi
mov
mov
push
mov
inc
adcb
dec
jge
jl
adc
jb
mov
ret
sti
jmp
call
xor
cmp
cmp
or
into
push
jle
aam
mov
jge
in
clc
leave
xor
shrb
test
pop
inc
pop
and
std
fidivrs
inc
lret
std
sub
mov
jno
jbe
adc
fdivrl
iret
lock
add
rcrb
sub
addl
in
add
popf
mov
jle
mov
cwtl
inc
dec
lods
jbe
and
cmp
loop
inc
mov
xor
cmpsl
jp
xchg
mov
aad
inc
mov
push
pop
adc
jmp
ficoml
xchg
daa
add
push
aad
icebp
test
enter
mov
or
addb
fld
cs
jo
or
mov
mov
mov
mov
gs
adc
outsl
daa
or
xor
fwait
cmp
andb
cmp
jmp
leave
pop
out
cmpsl
add
ja
shrb
mov
ja
xor
dec
pop
or
lret
pop
js
adc
pusha
and
push
es
inc
pushf
shrb
adc
pop
jp
inc
dec
push
dec
jmp
xlat
sub
push
xchg
pusha
add
add
inc
xorb
fimull
dec
ljmp
jns
mov
adc
daa
push
shld
adc
setge
dec
dec
cmp
xchg
test
in
test
hlt
sub
sbb
mov
lods
push
mov
popf
push
mov
jne
jns
das
hlt
stos
sbb
orb
jnp
push
ret
mov
adc
mov
push
push
mov
or
sahf
cld
jp
pop
or
inc
icebp
cld
fsubl
mov
jmp
mov
push
in
int3
push
sbb
push
push
pop
or
sub
aas
iret
dec
xchg
shl
push
xor
insb
xchg
inc
mov
xchg
testl
push
mov
imul
push
pop
sub
sub
pop
pop
stos
cltd
jno
sbb
add
xor
push
call
outsb
jg
icebp
out
ljmp
je
inc
hlt
dec
pop
fisttpll
and
jg
lahf
insb
popa
xchg
inc
dec
push
jo
mov
mov
in
dec
mov
fs
sbb
xchg
mov
sub
orb
neg
fisubl
mov
mov
insl
fs
and
scas
and
aas
sub
pop
notb
xor
dec
adc
sbb
mov
dec
mov
cmp
ffree
insb
add
bswap
jecxz
sub
dec
pop
push
jle
sbb
mov
mov
pop
cmp
fsts
sti
pop
loop
adc
decb
out
lods
pop
nop
mov
lcall
fsubs
arpl
test
aad
inc
sbbb
adc
mov
shrl
mov
mov
fsub
jmp
imul
mov
hlt
jae
adc
or
imul
and
flds
movsb
movsl
push
xor
xchg
or
dec
ss
arpl
push
dec
mov
sbb
jecxz
ror
lods
jno
scas
sbb
enter
ja
clc
pushf
lret
repnz
lret
movsl
adc
dec
popa
sub
ljmp
add
jmp
fwait
sub
mov
and
aas
out
rcr
rcrb
mov
ja
inc
test
pop
jl
rorl
and
sbb
stc
xor
mov
push
push
stc
leave
dec
scas
dec
pop
movsb
sub
lds
loopne
hlt
xchg
and
adc
fisttps
es
aaa
jmp
mov
xchg
sub
fcmovnb
scas
jmp
xchg
inc
jnp
test
scas
shll
and
faddl
clc
or
xchg
pop
neg
dec
cli
jle
inc
inc
adc
mov
insl
inc
inc
add
lcall
push
mov
aaa
cmpsb
xchg
mov
jge
roll
and
jmp
mov
in
mov
jne
fimuls
imul
jno
scas
ret
cltd
add
out
xchg
lahf
pop
leave
sbb
xchg
mov
setae
out
add
mov
mov
cmp
cmp
mov
xor
popf
jmp
call
mov
cld
xchg
or
test
or
dec
sub
fidivrs
shll
pushf
or
pop
push
in
andl
mov
in
cmc
in
fsubrp
pop
add
std
add
pusha
adc
xchg
xchg
shll
adc
pusha
dec
popa
cmpsb
addl
jb
add
imul
mulb
cmpsb
mov
addr16
out
cmpsl
xchg
inc
aas
sub
test
push
and
adc
xchg
sbb
inc
out
adc
pop
jmp
cld
xchg
shll
xcrypt-cfb
and
repz
jle
shlb
fldt
xchg
jmp
mov
add
sub
xor
dec
pushf
sub
push
inc
out
leave
enter
mov
andl
aam
test
movsb
das
or
lock
je
pop
cmpsl
mov
dec
fsubrs
fsubl
sahf
clc
mov
dec
ss
in
and
sbbl
lods
or
dec
push
jle
dec
jp
inc
test
fdivs
call
mov
dec
sub
jp
fwait
cwtl
push
mov
pop
push
push
mov
shlb
fiadds
test
int3
xchg
and
xchg
ret
xor
aas
xor
gs
push
fldenv
clc
lock
mov
pop
xor
mov
jle
iret
or
or
sti
popa
insl
sbb
mov
pop
push
test
daa
and
dec
loopne
pushl
outsl
daa
pop
hlt
cmp
inc
stos
pminub
cmp
or
xchg
test
and
int
dec
inc
fnstenv
sbb
and
and
and
pop
mov
xchg
repnz
mov
and
jns
inc
sbb
pop
insb
arpl
ret
jnp
sbb
andl
cmp
mov
fstp
xchg
mov
test
cmc
icebp
mov
mov
cli
inc
sub
lea
sbb
cmpsb
aaa
add
mov
mov
int
icebp
enter
xchg
inc
and
xor
inc
mov
jne
iret
scas
orl
rcr
lcall
add
mov
addr16
cmpsb
pop
and
inc
nop
dec
ret
dec
xchg
push
sbb
lahf
mov
xor
ss
inc
or
xchg
fnsave
add
test
test
shlb
mov
pop
jb
push
and
sub
pop
or
add
adc
ficomps
leave
aad
mov
movsb
arpl
loope
bound
push
push
or
cmp
sbb
nop
fisttps
sub
push
test
and
adc
fisttps
dec
pop
leave
mov
fsts
inc
daa
call
sbb
adc
sub
push
cs
loopne
sub
jnp,pn
aaa
test
jl
inc
sbb
jmp
inc
dec
jo
out
mov
cltd
push
lods
loop
sbb
fst
fwait
mov
insb
ja
test
ja
sti
cmp
pusha
addb
aam
sti
shll
lock
mov
cmpsl
nop
test
test
rcr
push
in
gs
gs
mov
mov
jle
jecxz
xlat
addl
outsl
add
and
out
insl
dec
outsl
add
lods
push
and
xchg
sub
adc
idivb
bound
mov
dec
push
push
cmpsb
xchg
pop
sub
outsl
int3
jge
adc
mov
xorl
xchg
test
mov
jb
fcomps
xor
mov
fimull
andl
adc
mov
les
repz
mov
and
xor
ljmp
loope
push
call
cwtl
fnstcw
mov
cmp
push
retw
and
icebp
push
inc
mov
mov
cmp
dec
insl
xor
push
jnp
bound
mov
dec
pop
std
inc
in
xor
jecxz
adc
scas
push
insb
aas
mov
push
sti
xor
daa
cltd
out
popa
lahf
xchg
mov
scas
sub
aad
jmp
in
outsl
mov
outsl
mov
es
cmovle
pop
jecxz
cmp
daa
repz
data16
or
xor
loop
mov
shlb
pop
subl
popf
std
and
mov
in
nop
pop
add
pop
imul
sahf
xchg
xchg
push
dec
dec
subl
aad
in
dec
fwait
xchg
xor
or
push
les
movsb
xor
loope
cmp
jnp
imul
enter
mov
xchg
push
cwtl
sbb
std
sub
jle
clc
movsb
push
add
jo
call
pop
jno
loopne
or
subb
push
mov
test
or
xor
xchg
pop
or
sbb
movsl
cmc
clc
xchg
fldt
mov
mov
subl
aas
out
xor
mov
mov
ffreep
outsl
gs
ja
mov
push
fildl
ret
out
stos
push
sub
mov
push
movsb
inc
mov
or
or
shl
je
xor
sahf
ficoms
frstor
inc
imul
push
lret
ds
lods
xor
pop
clc
xor
add
push
repnz
stos
mov
into
push
jle
ja
xor
adc
sub
adc
mov
inc
inc
pop
mov
shrl
mov
jp
adc
les
popa
loopne
jg
gs
cmp
xor
pop
xchg
imul
mov
push
xor
call
mov
xor
out
aam
addb
xchg
sub
xchg
adc
push
mov
xor
es
sbb
fcmovnb
jb
ja
pushf
int
jns
xchg
adc
test
movb
pop
dec
jmp
push
lods
or
and
fxch
orl
cmp
cmpsl
dec
xchg
or
sti
inc
push
push
idiv
testl
test
push
push
sbb
imul
sahf
inc
shl
cmp
into
movsl
mov
mov
into
mov
mov
mov
ljmp
push
js
enter
popf
inc
jp
dec
fwait
jecxz
xor
sub
cmp
adc
jmp
sbb
pop
push
mov
push
rolb
test
pop
insb
stos
mov
or
pop
adcl
mov
stc
adc
mov
sbb
jmp
xchg
jl
idivl
cmpsb
mov
adc
lds
fcompl
sub
adc
in
bound
ljmp
add
arpl
sub
sbb
sahf
daa
pop
push
shl
fisubs
out
and
repz
push
cmp
aad
cmp
scas
sbb
fwait
and
test
aad
or
imul
mov
cmp
test
mov
inc
shrl
leave
clc
mov
inc
pop
popa
and
test
into
push
xchg
out
aas
shll
ss
sub
fnstsw
mov
mov
jl
scas
jne
int
cmp
shlb
stos
jbe
loopne
mov
fs
or
test
xor
icebp
bound
cmp
mov
in
stos
sub
movsl
test
push
jne
inc
push
call
xchg
inc
xor
xchg
push
xchg
and
test
lods
leave
pop
sub
pop
lods
loopne
loop
add
scas
xchg
mov
scas
jne
xchg
aaa
jle
jle
out
sub
add
mov
enter
rclb
pop
pop
push
add
aaa
push
mov
lret
xor
movsb
cld
imul
sub
and
mov
pop
pusha
push
or
pop
xor
pop
insl
cmc
xchg
mov
cmpsb
int
cmc
xlat
xor
mov
outsb
mov
mov
adc
sbb
add
xor
sti
inc
ljmp
mov
aaa
lock
jne
aas
xchg
add
hlt
iret
xbegin
fwait
and
lcall
and
cmp
adc
mov
mov
movsb
addl
jg
mov
ret
jp
xchg
enter
popf
shll
aam
aad
cmpsl
mov
jle
pop
inc
cs
int3
in
imul
and
scas
jecxz
jecxz
pop
rorb
push
inc
leave
mov
in
sub
xor
in
sbb
cvtps2pi
ds
cltd
mov
mov
je
gs
mov
pusha
push
cmp
hlt
out
mov
ficomps
xchg
inc
inc
xchg
add
popa
daa
jge
sbb
iret
movsl
loope
inc
and
mov
fidivrs
lock
popf
push
jmp
int3
pop
loopne
in
jnp
sbb
sti
idivl
int3
mov
in
sbb
fstpl
pusha
inc
inc
and
push
pop
or
cmp
aaa
fsubrs
dec
push
jb
or
push
jl
push
pop
popf
mov
push
rcrl
adc
pop
out
imul
xor
insb
xor
pop
cld
aam
or
mov
imul
inc
call
loop
lcall
fldt
xchg
inc
or
xor
test
mov
xchg
sbb
imul
add
xchg
fstpl
out
test
mov
mov
fwait
clc
dec
ret
jmp
cld
fcoms
inc
lahf
mov
push
or
lahf
push
cmp
jne
data16
dec
sbb
out
pop
daa
fnsave
sbb
xor
pop
sbb
dec
jbe
dec
mov
sbb
push
movsl
or
or
mov
mov
mov
sbb
lods
xchg
pop
movsl
sub
jmp
cld
jecxz
roll
aaa
mov
je
test
cmc
pushf
hlt
pop
pop
mov
mov
adcl
jbe
cmp
inc
into
push
das
push
pop
pop
add
lahf
cmp
push
jmp
lret
xchg
enter
jge
lret
outsb
jecxz
vdivss
adc
jl
pop
xchg
push
xchg
xchg
mov
pushf
dec
xchg
push
jle
cmp
sub
push
jg
xchg
int3
loopne
jmp
push
bound
fistl
mov
mov
gs
loop
dec
mov
inc
adc
sbb
mov
stos
mov
leave
pusha
cmc
nop
dec
or
jge
loopne
addr16
fldcw
adc
imulb
and
push
stos
sti
xchg
mov
jp
cmp
into
ja
ret
adc
movsb
xchg
jbe
inc
add
call
fsub
sub
mov
movsb
stos
jmp
pop
sub
shufps
push
test
add
insl
jle
into
jp
fimuls
mov
dec
pcmpgtb
es
add
sbb
faddp
js
dec
sbb
shl
ret
xchg
push
sahf
into
test
cmp
arpl
adc
lahf
icebp
jle
dec
pop
mov
lret
dec
mov
fldt
dec
aad
scas
mov
aad
cmp
cmp
adc
add
adc
xchg
lret
jge
pop
or
push
and
daa
mov
inc
inc
mov
xchg
lea
mov
sbb
jp
jns
aam
mov
xor
jmp
sub
xchg
cmp
xchg
pop
inc
mov
push
call
mov
push
mov
movsl
cmp
mov
mov
sub
mov
dec
ljmp
add
or
mov
cltd
jle
test
or
out
testb
mov
out
xorb
xchg
fwait
cltd
sub
negb
lahf
int
in
push
jl
and
and
je
leave
outsl
test
adc
add
cwtl
dec
aad
arpl
fxch
mov
jmp
xchg
cmp
in
cmp
mov
or
cmp
adc
jno
mov
jno,pn
dec
mov
movsb
cmp
mov
imul
scas
xchg
push
jg
mov
lea
into
adc
mov
in
pop
and
std
sub
sahf
inc
adc
lahf
dec
jle
jle
nopl
adc
std
outsl
jne
test
pop
mov
out
hlt
and
out
in
sub
imul
adc
sbb
fwait
dec
cwtl
jg
dec
int
clc
aaa
push
out
mov
lds
xchg
mov
mov
pop
shrb
adc
andb
rorb
stos
pop
cs
and
outsb
sahf
push
in
dec
mov
cmpsb
push
add
inc
push
xchg
popf
mov
loopne
mov
jecxz
cmpsl
add
mov
dec
insl
mov
divb
lods
cwtl
or
je
mov
insl
sarl
jne
out
sub
push
fmull
lret
das
inc
scas
xlat
rolb
push
repnz
push
add
fcoml
mov
jne
shlb
sbb
and
ficoml
cmc
add
and
stos
add
das
xlat
adc
int3
jl
xchg
jmp
hlt
dec
jo
ljmp
sbb
fucomi
testb
clc
int
aas
lahf
out
pop
int
js
xor
shll
cmpsl
sbb
mov
xchg
mov
lret
and
mov
adc
in
mov
dec
addl
xor
push
test
cmc
imul
inc
sub
aad
sub
js
mov
repnz
sbb
and
aam
or
lret
and
fbstp
add
mov
bound
dec
iret
mov
scas
dec
add
popa
stos
push
idiv
lock
or
daa
mov
dec
push
inc
jns
lds
mov
aam
xor
fidivl
out
aad
iret
sbb
bound
jno
mov
push
add
lret
imul
in
ret
cwtl
jae
sbb
ja
fiaddl
ret
xor
pop
imul
out
dec
out
cli
or
sub
mov
das
sarb
mov
inc
mov
mov
sub
daa
inc
mov
lcall
fisubrs
movsb
sbb
movsb
inc
cwtl
jo
push
dec
fs
sub
pop
mov
adc
dec
aas
ds
sub
jge
lret
mov
jo
mulb
icebp
ljmp
jb
mov
adc
jp
jmp
inc
test
fists
mov
mov
xlat
add
jle
jbe
pop
and
paddsb
movl
ljmp
inc
pop
loopne
ret
faddl
push
sub
test
push
pop
mov
jnp
orb
sub
stos
jb
dec
dec
into
jecxz
push
cmpsb
cmp
xchg
pop
pop
mov
cld
mov
xchg
popa
cmp
popa
mov
insb
adc
mov
xor
cmp
or
cmp
aaa
rorb
xor
mov
sub
add
sti
je
sbb
push
test
mov
and
cmp
mov
lahf
adc
imul
sub
pop
inc
mov
ret
jbe
pop
mov
in
xor
sbb
xchg
xchg
xor
es
add
or
dec
xchg
add
mov
imul
scas
sbb
jne
sub
xchg
enter
cmp
and
jb
push
cwtl
mov
je
cmpl
sbb
jae
xor
adc
pop
aam
jnp
out
add
add
mov
mov
out
cmpsl
push
rcl
ss
cmp
pusha
dec
mov
jns
fisttpll
pop
repz
movsb
je
xchg
jecxz
aam
xchg
cmp
addr16
sbb
sbbb
push
sbb
jg
mov
ds
jo
fcomi
lds
filds
inc
mov
rcrb
or
mov
insl
mov
push
adc
adc
icebp
aam
mov
call
xor
leave
roll
mov
loop
out
dec
out
test
pop
shll
std
sahf
xor
pop
inc
and
test
push
push
repnz
sahf
imul
mov
adcl
dec
dec
clc
mov
sbb
mov
xchg
movsb
arpl
es
adc
shlb
push
out
push
and
movsl
jne
stos
loope
mov
out
leave
das
xchg
outsb
fldt
out
mov
and
iret
sbb
inc
xor
mov
es
fisttps
push
pop
sbb
pop
xchg
or
loop
mov
jmp
test
movsl
loope
pop
clc
in
adc
sbb
ds
inc
imul
rol
jl
jmp
sub
dec
or
adc
or
lcall
outsb
adc
jne
xchg
dec
sub
add
jle
pop
ja
and
sbb
movsl
jns
jg
ret
fwait
pop
lahf
mov
dec
call
xor
adc
popf
and
gs
lret
push
dec
iret
push
or
pop
mov
and
aas
push
and
fsubrl
stos
cmp
push
pop
fiaddl
lock
adc
xchg
jge
push
inc
push
mov
mov
jnp
into
cltd
cmp
mov
loopne
notb
and
es
mov
lret
jno
out
movsb
cmp
adc
and
or
js
jg
jg
jbe
call
hlt
testl
cs
dec
mov
jns
loop
xor
test
ss
test
rclb
mov
pop
push
out
sbb
pop
mov
lret
adc
and
and
xor
jg
cltd
popa
dec
cmp
out
inc
les
xchg
mov
in
das
xchg
adc
xor
lea
mov
dec
xchg
imul
jg
add
movl
jecxz
pop
lret
mov
mov
mov
pop
adc
rclb
mov
js
sub
mov
xlat
dec
int3
pop
mov
cwtl
xchg
icebp
jno
movb
scas
fwait
inc
ret
mov
xchg
push
push
xor
dec
je
pop
scas
push
aaa
or
into
lcall
outsb
aam
aas
shlb
xchg
xchg
and
or
andb
xor
cmc
pextrw
xchg
sbb
pushl
loopne
mov
pop
or
push
inc
arpl
dec
cltd
mov
xor
push
nop
sbbb
lock
mov
mov
jl
jnp
sbb
insl
inc
aam
mov
jp
lcall
cltd
test
xchg
stc
xor
icebp
adc
pop
sbb
aad
insb
out
ss
mov
scas
xchg
cmc
cltd
mov
or
test
xchg
adc
dec
repz
push
repnz
dec
dec
clc
dec
xor
out
icebp
xchg
clc
dec
aaa
inc
mov
push
popa
adc
push
jnp
popw
sar
daa
imul
lods
popa
cltd
rclb
pop
mov
int3
mov
enter
leave
or
xchg
outsl
fistpl
mov
dec
outsb
cltd
sbb
loop,pt
lret
test
imulb
iret
stos
js
jge
pop
inc
sti
fidivs
or
test
jo
mov
mov
and
fildl
xor
inc
rorb
ror
movsl
mov
les
push
pop
mov
rcrl
dec
lahf
push
mov
clc
jb
add
add
pop
mov
jecxz
ljmp
pop
mov
push
insl
rcll
orl
js
stc
dec
stos
push
lret
pushf
stos
or
aam
arpl
sbb
mov
jmp
fwait
cmp
pop
jnp
nop
icebp
mov
fldcw
and
scas
rorb
pusha
jnp
sub
pusha
lcall
xchg
ljmp
xor
lret
test
popa
lret
lods
out
pushf
and
sbb
outsl
arpl
test
ret
sbb
xlat
ret
and
dec
sub
pusha
and
xlat
aam
mov
add
xor
cmp
add
call
sti
mov
lahf
xor
int
fdivs
mov
bound
xorl
lret
mov
add
fsub
mov
mov
xor
outsb
mov
and
jne
or
adc
dec
repz
movsb
ds
nop
fimuls
sarl
push
popa
loop
mov
stc
dec
mov
push
and
ret
imulb
fidivrl
lahf
sbb
lret
cmp
mov
cltd
mov
fiaddl
pop
arpl
ret
mov
xchg
dec
mov
in
cmc
lcall
insl
pop
insb
push
push
mov
es
jae
repz
mov
popa
loopne
inc
shlb
sub
out
test
frstor
push
pop
out
lahf
fmull
xchg
and
rorl
dec
cmp
rcrb
sbb
rcll
sub
inc
fstl
xchg
imul
cwtl
xlat
jo
movsb
mov
mov
sub
pusha
lahf
cmpsb
and
sahf
lods
repz
pop
cmp
jbe
and
mov
int
adc
leave
sub
fdivrl
sti
loopne
dec
jge
fsubrs
pop
pop
cld
mov
jne
dec
outsl
jnp
mov
inc
sti
mov
inc
xchg
rcrb
add
dec
fs
push
dec
pop
cmp
pop
jnp
sub
jb
jp
aad
bound
loope
sub
and
repz
cltd
adc
xor
xchg
cmp
or
add
adc
loopne
jnp
les
imul
adc
aad
inc
mov
adc
mov
xchg
rcl
in
loopne
mov
loopne
push
cltd
ljmp
xor
and
insb
pop
sbb
cmp
push
adc
dec
loop
inc
or
jno
sarb
sarl
xor
test
pop
outsl
mov
add
or
cmp
ss
lcall
pop
testb
dec
movsb
call
xor
pop
sahf
fsqrt
imul
mov
pop
icebp
mov
lods
push
inc
mov
repnz
and
cld
in
jbe
pop
cmp
aam
imul
scas
xchg
push
and
mov
sub
cmp
xchg
ret
jp
sbb
sbbb
mov
cltd
test
cltd
sub
cli
incb
jp
sar
jle
cwtl
sub
imul
jbe
out
add
and
lea
lods
push
arpl
out
mov
sub
or
cmp
lret
push
xchg
fsubs
movsb
ds
stc
lods
xchg
inc
xor
jmp
push
cltd
cmc
inc
out
add
mov
adc
in
xorb
sbb
xchg
test
sub
pop
push
popf
jns
aam
mov
jnp
repnz
incb
mov
cmp
sarl
push
fcmovne
out
int3
addb
and
jge
test
repz
mov
out
test
imul
loope
mov
aad
jmp
sahf
lret
shll
jo
imul
out
mov
call
les
mov
sub
aad
xor
cld
pop
mov
add
sti
mov
push
dec
sbb
fadd
pop
rol
and
jb
orb
push
fucomi
fbld
mov
mov
test
gs
dec
or
bound
cmp
inc
js
jle
pusha
mov
mov
cld
xor
lods
add
xor
push
cmp
mov
mov
into
pop
shrl
xchg
aam
sbb
adc
and
hlt
mov
repnz
pop
or
imul
and
adc
movsb
nop
fildl
mov
iret
xchg
cmp
dec
jle
shll
sub
arpl
es
jo
imul
dec
in
call
fcom
dec
je
xchg
inc
fildl
cld
movsl
sbbb
or
cmp
pushf
fcoms
mov
ret
les
sbb
repnz
pop
sbb
adc
or
repnz
add
adc
and
mov
xchg
push
dec
enter
jae
scas
mov
ljmp
dec
push
pop
dec
inc
imul
icebp
divb
shlb
or
sti
xor
adc
into
add
and
lahf
and
add
ret
cltd
push
dec
xor
inc
jge
sub
add
push
in
and
fcom
xchg
dec
cld
xchg
test
scas
pushf
xor
scas
in
sahf
xchg
or
das
ret
out
repz
dec
add
cld
ss
test
hlt
inc
mov
or
aad
std
or
or
out
adc
das
xchg
aam
aaa
mov
incb
mov
call
scas
or
jmp
inc
in
cld
aad
cmp
xor
jp
je
mov
fsub
fisubl
fbstp
lahf
lods
or
mov
cmp
imul
jl
jle
lods
mov
xchg
mov
neg
in
je
xor
push
pop
adcb
mov
mov
icebp
sbb
push
pop
sub
cmpsl
cmp
bound
je
jle
mov
sbb
fwait
pop
rcr
push
mov
fsub
mov
out
jnp
lods
sahf
dec
scas
outsl
jmp
mov
pop
ja
fldl
mov
fcom
jmp
sahf
xchg
sub
rorl
cmpb
and
adc
dec
test
adc
testl
daa
aad
pop
pop
lcall
fildl
call
clc
and
sarb
in
int
sbb
pop
sahf
or
clc
inc
out
add
stos
push
push
sub
in
imul
pop
jnp
xchg
ss
in
out
dec
mov
and
add
mov
jb
sub
fisubrl
clc
push
pusha
jns
cmpsb
cs
add
push
lret
fs
inc
iret
repz
imull
mov
lods
int3
jae
cmpsb
addr16
lret
sbb
icebp
cmp
fdivrl
fimull
and
out
ret
in
jne
movl
and
in
insl
dec
or
inc
dec
loopne
and
dec
out
mov
jno
aad
lcall
pop
rclb
pop
fwait
push
ret
stos
movsb
inc
jmp
adc
xor
adc
rcll
cmp
fdiv
imul
pushf
adc
sarl
jge
mov
cmp
cld
test
aam
xor
sbb
repnz
add
adc
nop
lods
repz
cmp
cmp
sub
out
fstpt
loopne
jnp
sub
inc
adc
mov
mov
testl
enter
sbb
xchg
bound
lods
call
mov
xchg
jb
sbb
inc
icebp
lcall
jns
repnz
lea
inc
fidivrl
sbb
mov
mov
xchg
mov
pop
lods
rcr
pop
fadd
orl
push
pop
jne
cmp
xchg
lea
in
shrl
aam
in
cmp
jo
push
lret
mov
scas
jb
inc
jno
aam
mov
out
fidivl
icebp
sbb
popa
aam
pop
cmp
push
jp
mov
pusha
loope
adc
repnz
pop
cwtl
pop
push
mov
add
mov
mov
sbb
cmpsb
push
push
mov
or
fs
rcll
jbe
cwtl
pop
pop
pop
cmc
ja
mov
push
lret
cli
push
fcomps
fsubrp
shrb
cmp
xchg
cltd
rol
add
inc
mov
adc
lea
rcrb
and
out
mov
imul
sarb
xor
or
inc
js
jns
ss
jecxz
mov
xor
sbb
jl
clc
aas
std
push
xchg
ret
jae
pop
scas
push
dec
ret
fsts
or
cmp
idiv
imul
sbb
fisubrl
mov
pop
addl
xor
lods
mov
jo
fisttpl
aad
cmp
mov
jp
or
fldt
shl
popf
push
int
notb
scas
lahf
or
push
add
mov
jb
mov
mov
in
push
add
xor
out
inc
leave
lret
daa
adc
jp
mov
jno
into
push
gs
inc
aam
cli
cltd
loop
sub
jle
pop
lds
pop
or
scas
pop
xchg
enter
sbb
fwait
leave
cmp
xlat
push
sbbl
mov
dec
into
das
inc
sub
sub
xchg
jnp
fsubrp
xor
jecxz
iret
sbb
iret
stos
fistl
aam
jmp
fistpl
bound
je
jnp
push
xchg
inc
outsb
imul
bound
cmpsl
std
pop
lds
mov
int
add
out
push
dec
mov
rorl
mov
adc
add
inc
and
push
fwait
aaa
xchg
pop
rcr
pop
mov
push
add
jbe
xorb
stc
out
adc
rcrb
out
sbb
pop
mov
push
enter
imul
loope
imul
push
lock
fisttpl
lods
pop
ss
clc
and
adc
fwait
xor
mov
orl
mov
inc
repnz
cmp
addr16
cmpsb
imul
divps
and
fisubs
add
cmpsl
xchg
mov
jno
in
pop
loopne
dec
sub
fnsave
repnz
push
je
inc
inc
sub
pop
push
sbb
test
pop
pop
sub
stos
jne
sub
add
in
pop
dec
inc
mov
sahf
inc
xor
xchg
mov
test
loopne
int3
rorl
mov
test
loope
xchg
cld
lods
rolb
jle
adcl
test
or
pop
pop
sbb
outsl
inc
xor
ret
xor
sbb
xchg
cmpsl
mov
aad
mov
filds
in
sbb
out
sub
jmp
lods
call
enter
push
imul
jecxz
and
sbb
into
sub
or
jle
pop
mov
pusha
test
xchg
jne
pop
ja
movsb
jecxz
xchg
shll
jno
fwait
add
inc
jg
pop
stos
xor
sbb
rcll
mov
pop
jp
mov
imul
push
dec
das
mov
or
jno
mov
mov
icebp
cmpsl
add
jo
fcompl
xorl
jb
int
jecxz
xchg
jns
dec
sahf
and
pop
dec
aam
xchg
stc
inc
in
lcall
pop
dec
cwtl
jne
cmpsb
jg,pn
jp
ficoml
movsl
fmulp
test
not
fildll
sub
sbb
insl
mov
les
punpcklwd
insl
cmp
scas
fwait
jb
add
cmc
scas
insb
sub
pusha
dec
dec
aas
sbb
insl
mov
ds
repz
or
cmpsb
push
xchg
xchg
jno
xor
adc
jge
push
push
cmp
dec
cli
pushf
mov
sahf
sub
xor
pop
lods
push
addr16
rcrl
and
and
mov
adcl
imul
push
xchg
mov
pusha
xchg
fdivrs
dec
dec
in
jnp
mov
mov
lock
ds
cmpsb
jle
or
pop
pop
das
das
jp
mov
std
call
sbb
fsubrl
fsubs
es
js
clc
push
lock
stc
jae
lret
jmp
jo
mov
dec
stos
add
ljmp
fnsave
xorl
mov
sub
mov
jne
mov
adc
iret
add
jbe
xchg
xor
mov
mov
push
and
add
repz
aaa
and
sti
outsl
pushf
outsl
mov
lret
div
outsl
xor
decl
int
inc
mov
sbb
and
sub
js
imul
arpl
pop
and
test
sub
cmp
inc
cmpsl
adcl
jge
cld
fwait
repz
inc
sbb
inc
lcall
cmpsb
insb
cmpb
push
dec
and
add
and
and
push
bound
mov
mov
xor
add
dec
data16
mov
fimuls
lods
lods
pusha
and
dec
jnp
lcall
test
pop
adc
int
mov
rcrb
adc
fidivrs
repnz
lret
in
xchg
push
lods
push
push
pop
push
mov
sub
xchg
aaa
and
movsl
mov
ss
or
push
dec
shll
pop
testl
imul
ror
mov
dec
mov
push
mov
mov
movsb
mov
lret
insl
add
adc
inc
cltd
inc
shlb
ds
dec
js
mov
lret
movsl
gs
jns
stos
adc
cmp
cmp
jbe
sbb
sub
xor
pusha
shrb
test
cs
popa
sub
cld
movsl
pop
andb
pop
adc
cmpsl
in
adc
pop
inc
cmc
mov
mov
xchg
popf
adc
sub
jmp
adc
push
mov
mov
mov
mov
sysenter
insl
add
xchg
hlt
sbb
in
test
fbstp
pop
mov
fdivs
jecxz
stc
dec
jbe
es
leave
jl
gs
sbb
pop
and
add
jmp
push
clc
int3
sub
sub
imul
je
xor
mov
js
insl
jns
das
inc
dec
es
sbb
dec
sub
lret
clc
in
cmpsb
movsb
push
push
out
jp
mov
sgdtl
jg
stos
add
fsts
mov
fidivrl
push
rclb
out
lret
sti
out
xchg
or
push
ds
iret
jecxz
shrb
ss
ja
jnp
arpl
pop
xor
int
orb
movsb
mov
xchg
cltd
mov
pusha
inc
std
add
dec
loop
jns
leave
imul
lods
leave
mov
xor
bound
mov
sub
inc
scas
mov
testl
mov
pop
js
outsb
leave
cmpsl
sahf
pushf
dec
in
out
cmp
sbb
sahf
cmp
xlat
fdivl
cmp
xchg
xchg
lea
mov
in
fnsave
call
ss
jo
mov
cld
movsl
xor
cs
inc
imul
addr16
and
leave
sbb
mov
and
sub
sti
fwait
mov
in
lahf
pop
adc
stc
xor
sub
push
jg
sub
cmp
popa
inc
and
int
jl
fstpt
fsubrl
jb
xor
or
push
pop
or
daa
push
lods
jmp
adc
sub
or
rolb
data16
lods
sti
pop
jb
xor
xor
jg
pusha
jb
jno
fnstcw
shrb
subb
jmp
les
xchg
ret
sub
sahf
adc
loope
sbbl
rcl
push
push
lahf
sub
fsts
cmpsw
cmp
mov
lds
pushf
loop
adc
mov
insb
test
push
sbb
int
int
lds
xchg
repz
push
push
xor
mov
jmp
mov
add
push
aad
mov
push
int3
cmp
push
lahf
incl
add
mov
and
lret
repnz
lcall
es
pop
mov
push
sahf
sbb
xlat
xor
sbbl
ret
ljmp
insb
jle
push
xchg
mov
out
mov
inc
pop
mov
jae
int3
xchg
lret
aam
sub
push
test
pop
loope
mov
lea
push
jg
lret
pushl
mov
and
dec
push
mov
fsub
adc
or
roll
cwtl
add
and
xchg
imul
push
cwtl
push
shl
adc
xchg
jmp
xchg
dec
jns
jl
pop
add
pusha
fdivl
pushf
call
jmp
add
adc
sub
inc
adc
xchg
and
fsts
inc
repz
clc
inc
push
js
popa
jns
sti
dec
cmpsb
sar
lds
sub
aam
sti
pusha
loop
adcb
xor
jmp
mov
test
dec
jg
mulb
aaa
cmp
xor
arpl
fs
cwtl
mov
das
scas
pop
jle
push
cmp
mov
sub
lret
jle
int3
nop
enter
jae
adc
test
repnz
add
sbb
aad
xchg
js
mov
call
pop
push
and
cld
cwtl
outsb
and
xchg
arpl
pop
push
callw
dec
mov
push
sbb
mov
movsb
mov
xchg
jge
adc
mov
repz
xchg
and
jnp
mov
in
inc
lret
adc
inc
lods
out
inc
mov
add
cmp
scas
cwtl
mov
test
push
push
ss
test
aas
ret
dec
outsl
add
std
sbb
inc
inc
cmpsb
daa
mov
inc
ss
movsl
in
divb
out
rcll
cs
repnz
rclb
dec
loopne
int
push
xchg
xchg
dec
mov
dec
or
jno
mov
mov
pop
jg
sub
dec
push
mov
pusha
cmp
and
out
cli
imul
mov
inc
insl
insb
sbb
int3
push
out
bound
notl
lahf
sti
inc
mov
mov
aam
loop
ret
xchg
add
ret
pop
out
adc
enter
imul
cmpsl
fidivs
adc
iret
and
mov
std
xchg
xor
out
mov
add
andb
xor
fcomps
in
int
add
inc
pop
out
iret
cwtl
cmp
xchg
andb
push
loopne
sub
cmpsb
pop
jl
add
xchg
daa
xchg
mov
inc
add
jmp
shl
notl
cmpsb
mov
push
xchg
mov
mov
xlat
cmp
loopne
mov
sti
mov
sub
icebp
sahf
xchg
lods
dec
mov
add
jmp
divb
inc
push
stos
ja
out
xor
mov
pop
cmpl
sti
pop
aaa
in
scas
mov
jg
cmp
dec
cld
pop
xchg
lea
adc
xor
xchg
and
test
sbb
loope
aam
aam
xchg
sbb
fstpt
test
mov
sub
iret
mov
ror
xchg
push
sub
in
fisttpll
push
add
shrl
adc
cmp
loop
fs
out
sbb
and
imul
jbe
movsb
add
adc
sbb
pop
jns
insb
movsl
in
popa
or
pop
sbb
incl
sbb
popf
and
mov
je
or
cmc
ret
fs
add
insb
out
pop
inc
dec
bound
and
sub
rcrl
push
mov
xor
inc
xor
lods
cmpsb
movsb
bound
sub
pop
xchg
push
xchg
mov
cli
pop
pop
stos
clc
jns
inc
push
cld
ret
es
pusha
or
out
add
dec
shr
aas
push
mov
sub
ja
and
cmpsw
sbb
lahf
pop
aad
cmp
jge
cmc
outsl
hlt
push
and
push
xchg
mov
inc
roll
out
cmp
roll
push
cli
mov
and
dec
add
pop
adc
pop
jl
sub
stos
stos
sarl
pop
and
pop
and
fisubrl
cwtl
sbb
xchg
cmp
and
in
addl
and
fidivs
in
dec
xor
jae
fld
sub
data16
cmpsb
add
loope
and
stc
and
leave
sbb
insl
mov
cmp
xchg
std
push
add
fisttps
add
xorl
sub
cmpsl
xchg
ss
jl
aad
ret
insb
mov
test
and
mov
cmpsb
ljmp
cwtl
or
sub
leave
stos
or
inc
iret
add
inc
aad
adc
and
lock
lcall
adc
loope
lea
dec
aam
fists
or
sub
jle
add
or
inc
lret
aas
int3
popf
pop
sub
aam
push
mov
push
mov
repnz
cltd
jae
data16
stos
sub
jns
xor
sub
gs
dec
push
mov
dec
rcrb
xor
xor
dec
addr16
dec
pop
das
lret
mov
sub
add
clc
jnp
lock
or
les
cvtps2pd
or
shlb
xor
fprem
repnz
inc
mov
cltd
fldenv
adc
jbe
mov
aas
and
and
push
cltd
xor
sbb
inc
sbb
mov
ret
jl
cmp
enter
cmp
sub
xchg
leave
sbb
aam
add
aam
xchg
and
pop
je
aam
pop
aad
adc
pop
xor
pop
mov
or
cld
idivl
mov
pushf
movsl
sub
add
sbb
pop
mov
and
lret
lock
mov
push
shrl
push
cltd
in
push
inc
data16
add
daa
loope
out
xchg
fwait
cmp
pop
push
pop
loopne,pn
jge
xchg
jns
sub
stos
pop
sti
fs
pushf
aaa
ret
ds
fwait
adc
pop
dec
mov
push
sbb
je
and
or
rcr
rorl
dec
cmpsb
in
bound
mov
or
xor
mov
pushf
cmc
adc
pushl
mov
push
add
je
mov
sbb
in
mov
movsl
fldt
push
call
das
push
and
mov
sub
jne,pn
les
mov
jne
mov
and
jno
jge
ret
cli
addl
jns
cwtl
lcall
adc
loope
repnz
xor
xor
out
add
lea
cmp
adc
adc
mov
sti
xchg
adc
cmp
adc
test
les
clc
jb
arpl
push
dec
je
jbe
test
leave
ffreep
jp
mov
push
and
repz
repz
mov
jge
or
pushl
push
inc
movsb
lret
dec
pop
cmp
mov
mov
dec
rcr
adc
sbb
inc
sbb
test
mov
lret
mov
xchg
mov
loop
or
insl
sbb
jge
jge
add
aas
sub
repz
int3
ficompl
int
jp
or
sbb
sahf
mov
jp
test
cli
push
jmp
andl
fsubrl
adc
pop
sub
push
push
cvttps2pi
mov
in
rcrb
incl
in
lahf
add
jl
ret
lods
or
pop
jo
xchg
add
outsb
fimull
push
loop
or
nop
fs
lret
aam
nop
inc
lahf
aam
pop
insb
xor
decl
pop
cmc
fsubrs
mov
and
psrad
pushf
push
pop
mov
shr
out
fidivrs
push
out
cmp
jne
lea
jmp
test
dec
push
inc
push
add
push
cmp
inc
cmp
cmpb
sub
cmp
subb
mulb
xchg
push
loop
es
les
mov
add
mov
insb
or
ret
repz
imul
jp
jnp
es
mov
sti
or
daa
dec
pop
add
push
clc
inc
xlat
xor
bound
nop
cmp
lahf
adc
pop
mov
hlt
pop
push
lret
jne
push
sti
mov
lock
cmpsb
fs
pusha
xchg
leave
jmp
mov
inc
inc
mov
sub
test
movsb
mov
dec
rcr
and
mov
addl
jmp
xor
add
xchg
lcall
push
mov
jmp
cmp
sbb
cli
cmc
aad
push
cld
adc
mov
mov
lahf
mov
int3
das
in
repz
hlt
or
lods
cli
aad
jecxz
push
sbb
mov
push
cmp
and
imulb
test
push
push
xor
jne
xchg
mov
add
imul
mov
aam
pop
subl
push
ja
ds
adc
in
fiadds
stos
jecxz
adc
ret
inc
and
mov
fstl
inc
xorl
cmc
inc
mov
pop
push
mov
adc
lea
sbb
neg
sbb
pop
fstpl
cmp
push
mov
sbb
mull
mov
or
jb
loope
mov
sbb
lcall
push
fildl
pushf
sbb
fnstsw
mov
inc
or
mov
insl
imul
adc
jmp
in
outsl
adc
orl
push
shrl
mov
arpl
fidivrs
xchg
repz
ss
jb
lea
jmp
sub
inc
or
push
rorb
inc
aad
add
out
adc
int
push
in
shlb
bswap
cmpsb
test
xchg
jo
int3
popl
cmp
push
mov
out
lds
jo
fimull
or
add
ljmp
or
or
idiv
sub
jp
inc
cli
xchg
xchg
lds
rcl
push
in
rorl
cmpsl
mov
sar
jno
psubb
cmp
xchg
cmp
fcompl
jno
add
cwtl
subb
jmp
cmpl
ja
inc
lock
push
out
out
ss
out
xor
test
jecxz
lock
and
add
push
ret
adc
jp
pop
cwtl
adc
adc
sub
mov
enter
jno
loopne
adcl
pop
jo
mov
push
adc
mov
enter
dec
mov
dec
es
jmp
fnstcw
pop
sub
and
jg
ss
clc
cmp
fisubrs
lcall
dec
adc
fcomps
sub
push
push
and
lods
lds
lea
xor
arpl
mov
xchg
pusha
adc
xorb
sub
scas
andl
lret
push
add
cmp
aam
mov
nop
and
jbe
mov
dec
mov
add
popfw
sbb
test
movsb
sub
les
mov
sbb
scas
gs
xor
inc
gs
dec
mov
dec
push
lods
xchg
inc
xchg
scas
and
sbb
dec
outsl
dec
aam
cmpsb
and
jge
fmull
test
shlb
imul
and
call
inc
cwtl
sbb
arpl
int
andl
mov
mov
les
leave
flds
pop
pop
pusha
movb
pop
mov
xor
jbe
pop
mov
xor
cmp
data16
mov
daa
je
pop
mov
cmc
push
ljmp
sbb
fcomps
cmpsl
sub
adc
xorl
in
add
bound
pop
mov
mov
lcall
rorl
repz
gs
mov
das
pop
sub
or
push
stc
jmp
jns
jnp
aad
icebp
mov
loopne
pop
loopne
mov
pop
inc
cmp
mul
or
or
pop
mov
or
cwtl
push
mov
push
sahf
push
jo
fucomp
xchg
add
or
js
lret
je
mov
pop
in
and
daa
lods
inc
outsb
push
in
inc
cltd
dec
cmp
stc
pusha
xchg
inc
out
sbb
push
or
les
pop
ljmp
and
popf
mov
aad
stc
int3
lahf
pop
loopne
mov
and
enter
dec
xchg
scas
sti
loope
scas
loop
xor
aad
mov
dec
sahf
popa
mov
test
stc
mov
jp
out
cld
sbb
cmpsl
push
je
mov
cli
cld
and
lcall
int
stc
mov
fcomps
sbb
cmp
lea
aas
mov
cmpsl
adc
inc
mov
add
sub
push
out
std
aaa
mov
dec
inc
pop
adc
out
fiaddl
push
pop
in
push
mov
sti
mov
inc
sub
push
scas
jnp
lds
fildll
repnz
jge
int3
inc
cmp
adc
mov
pusha
sub
iret
mov
loop
hlt
gs
mov
cmp
sbb
into
cmpsl
loopne
add
jle
pop
pop
fsubp
popf
stc
add
in
shr
jmp
rorl
mov
jmp
xchg
movsb
stos
test
xchg
cmp
add
cmpsb
xchg
pusha
xchg
sahf
leave
movsl
fsubs
cmpsl
sub
inc
sbb
sbb
repz
enter
idiv
cmp
add
adc
ljmp
aam
enter
sbb
pop
mov
pop
enter
pop
push
xchg
mov
les
mov
fimuls
fimuls
ja
adc
outsl
sbb
mov
pusha
ja
sub
mov
fcmovbe
in
outsb
inc
imul
inc
sbb
xlat
push
lcall
xchg
fidivl
sub
dec
test
mov
js
adc
dec
test
xor
mov
inc
mov
cmp
xchg
pop
test
xchg
fisubl
xorb
cli
jbe
xlat
mov
pop
sub
dec
sub
xlat
pcmpeqd
pushf
mov
out
stos
inc
fwait
dec
cmp
shrl
jo
sahf
push
pop
pop
gs
cmp
jge
jmp
inc
movsb
jge
fdivl
or
mov
mov
icebp
mov
cmp
cmp
pop
pop
add
fstpt
mov
outsl
ret
stos
repnz
xor
jno
es
jno
push
ror
jo
mov
enter
mov
cmp
mov
je
es
insb
ds
std
ja
push
dec
mov
mov
std
lahf
int3
and
push
xor
mov
mov
jno,pt
addr16
shrl
leave
jmp
inc
push
repz
shll
cmpsb
lcall
mov
mov
add
or
dec
sti
sbb
mov
cmp
or
pop
mov
or
imulb
hlt
ret
call
dec
jae
stos
mov
jb
in
cmp
icebp
lret
push
or
jne
cmpsb
xor
push
inc
and
sti
add
lock
push
aas
xor
adc
xor
sub
push
mov
ss
mov
jecxz
gs
sbb
cwtl
sub
cli
inc
ret
sub
push
enter
xor
fidivl
add
outsl
adc
and
insl
jle
xor
sub
dec
inc
sbb
movl
push
xchg
repnz
lret
arpl
imul
dec
ret
sbb
fsubrs
mov
xchg
jno
push
push
mov
push
gs
pop
mov
lahf
movsb
sub
into
test
cmc
pusha
or
push
gs
loopne
or
cs
push
fdivl
push
inc
inc
cld
fdivrl
adc
push
push
scas
xchg
or
fdivrl
mov
dec
aas
adc
adc
lds
dec
pop
gs
test
fimuls
adc
fwait
sbb
inc
cld
push
fprem1
ret
ficoml
mov
xor
and
jle
arpl
cmp
cs
pop
or
cmpsl
xchg
test
addr16
mov
fstl
xor
imul
lods
mov
out
fstpl
arpl
ds
cmc
jbe
mov
and
lods
xchg
lea
inc
jo
mov
mov
xchg
jle
dec
addr16
mov
cmp
xchg
mov
push
cmpl
int
adc
or
mov
sub
cmc
loopne
je
or
xchg
mov
mov
cmp
push
mov
test
inc
push
jle
cltd
sub
or
shr
popa
in
test
clc
jge
fdiv
mov
les
push
lret
sub
and
outsb
xor
test
cmpsb
repz
clc
pop
fsubs
lea
add
scas
cmp
push
das
xchg
into
xlat
ret
in
fs
jno
mov
outsb
xchg
repnz
mov
pop
sti
sub
inc
mov
jg
add
mov
xchg
arpl
movsl
movsb
cld
pop
daa
adc
mov
mov
adc
push
icebp
inc
or
mov
movsl
and
xchg
leave
dec
out
or
fwait
in
jecxz
into
shll
mov
mov
mov
cli
mov
cmp
or
and
inc
xor
lret
push
lock
or
dec
lret
in
movsb
loope
cmp
mov
or
push
fnstsw
or
int3
sub
test
xor
sub
or
sbb
sbb
inc
mov
data16
repnz
jo
xchg
test
lods
sbb
jbe
push
aaa
cli
gs
sub
jne
fsubrs
test
add
ja
adc
mov
lret
push
and
jb
jb
bsf
push
aam
lret
jg
mov
outsl
or
sub
stc
icebp
hlt
add
add
fwait
pop
adc
xor
pop
shll
add
movsb
sub
or
sbb
gs
mov
jmp
ds
ret
ret
ljmp
mov
or
sub
je
aad
mov
mov
insl
insb
addr16
pusha
pop
push
and
test
arpl
fstpl
leave
or
sub
enter
aaa
jns
jmp
popf
clc
sbb
cmp
dec
xchg
push
cmc
insl
cmp
push
push
mov
adc
out
repnz
aas
jb
sub
xchg
jo
push
dec
popa
je
fisubl
or
je
mov
xchg
iret
sbb
cld
daa
push
mov
pop
addr16
inc
mov
fcompl
inc
sub
imul
mov
jnp
test
test
shll
push
xchg
pop
push
lret
negb
inc
inc
mov
and
lods
push
xchg
aad
sti
inc
insb
and
bound
nop
jl
and
jbe
push
repnz
in
mov
xor
push
adc
add
mov
jbe
push
rcll
sbb
pushf
xchg
xor
jne
adc
imul
sbb
jae
les
sub
hlt
mov
lahf
in
adc
movsl
add
pop
push
ret
mov
std
or
out
sahf
inc
lea
ja
jecxz
ja
test
inc
dec
inc
mov
xchg
lahf
mov
jge
pop
fstl
and
stos
fdiv
mov
or
negl
sub
inc
adc
mov
cli
test
js
mov
xchg
loopne
cmpsb
mov
subb
sbb
pop
imul
sub
mov
lret
or
inc
jb
in
stos
in
cld
push
xor
xor
bnd
push
or
dec
aad
dec
pop
nop
add
sub
add
popa
cmp
daa
addr16
mov
jg
pop
or
shl
btc
or
and
das
ja
pop
cmpsl
insb
and
je
imul
imulb
les
popa
call
out
cld
xchg
cmp
lea
imul
jae
out
sti
add
cmpsl
in
pop
push
adc
jb
ss
push
inc
movsb
mov
xor
es
test
pop
or
mov
clc
mov
adc
mov
sub
sahf
inc
pop
out
data16
ret
and
mov
ficoms
lods
push
and
or
mov
pop
repnz
inc
loop
mov
adc
push
xchg
push
add
in
cmp
sub
xlat
jnp
shlb
sub
cwtl
sbb
push
ds
aas
jbe
lret
adc
cli
cmp
dec
nop
add
push
dec
sahf
sbb
popf
movsb
adc
loop
or
cltd
repnz
lods
inc
jmp
js
ds
test
test
push
dec
lock
inc
sbb
std
xlat
and
js
jl
push
push
stos
ret
pop
mov
inc
adc
push
mov
jo
sbb
mov
test
inc
fisubs
cmp
jbe
sbb
and
jge
jge
pop
aas
movb
rcll
pop
loope
inc
adc
sbb
xor
or
cld
movsl
pop
stc
pushf
jbe
scas
xchg
cmp
xchg
and
stc
sbb
mov
in
and
mov
stos
iret
iret
ss
in
mov
or
sub
dec
mov
inc
mov
sub
stos
sbb
pop
mull
jno
gs
and
cltd
mov
xchg
adc
pop
cmp
sub
sahf
iret
xchg
mov
jne
adc
push
lock
adc
inc
in
imul
mov
cld
stos
sub
push
pushf
rorb
pop
sbb
outsb
adc
orb
push
test
add
not
pop
out
loope
xor
sub
mov
jae
pop
flds
and
xchg
mov
out
scas
pop
adc
pop
aas
call
dec
les
inc
cwtl
inc
loop
pop
sahf
shll
je
mov
push
aam
mov
divl
dec
pop
pop
push
jo
jb
loopne
jne
sub
mov
add
xchg
jp
pop
push
sub
sub
mov
pop
std
push
mov
sub
cli
cmp
movsb
js
out
insb
mov
mov
adcb
rorb
xchg
pushf
orl
sub
test
loop
adc
imulb
lret
insl
popf
fucomip
mov
sbb
or
lcall
add
mov
ret
fdivl
stos
into
unpcklps
mov
shlb
xor
jge
adc
pop
jl
cld
sub
arpl
jns
add
xor
pop
into
sub
inc
or
cwtl
jbe
add
into
mov
inc
xor
rcrl
push
xor
sbb
gs
sbb
arpl
leave
fs
xor
adc
mov
out
cli
mov
je
push
aad
jo
cltd
sbb
aas
aaa
cs
fildll
inc
push
insb
xor
ljmp
jb
dec
scas
fsubl
push
fiaddl
sbb
arpl
xlat
cmp
sub
notb
jb
movsl
mov
push
push
sub
stos
adc
inc
repz
push
xchg
out
push
dec
sar
ret
pop
arpl
pusha
mov
dec
fcompl
es
test
dec
shrb
stc
aad
mov
sub
xchg
cmp
movl
jge
pop
fcomp
inc
mov
aaa
adc
in
mov
jo
cmp
adc
cltd
cli
xchg
sahf
scas
sbb
jbe
add
sbb
pusha
mov
ds
pop
shll
not
cmc
mov
pop
mov
inc
faddp
les
adc
mov
xor
sub
ljmp
xchg
testl
cli
mov
pop
stc
enter
pop
pop
fistl
outsl
popa
lret
mov
jne
aam
hlt
xor
popf
pop
pushf
mov
push
aad
cli
cmp
sbb
inc
push
sbb
enterw
sub
push
add
sbb
into
jge
jp
push
xor
dec
pop
mov
mov
pop
loopne
xor
xchg
jecxz
mov
fsubr
lods
fnstsw
xor
xor
in
imul
push
pop
insl
shlb
cmp
dec
mov
dec
xor
mov
pop
cltd
call
lods
sbb
jecxz
lods
jmp
scas
dec
gs
lcall
cmp
jecxz
inc
adc
lret
xor
dec
jne
fldcw
loopne
fdivrs
mov
jo
sarb
mov
es
jnp
fidivrl
or
ss
ret
push
cmpsl
pop
jp
cltd
and
push
fdivr
cs
ss
adc
imul
and
mov
or
mov
lret
mov
xchg
mov
test
push
xchg
push
cs
sub
enter
pop
or
mov
jp
inc
aam
sbb
xchg
test
ret
xchg
js
xor
cmp
cmp
pop
lcall
sub
sbb
push
jp
or
sub
or
cld
mov
icebp
mov
lods
negl
inc
xor
cmp
inc
mov
xor
push
popa
stos
lods
out
jecxz
jns
ja
push
mov
mov
cmp
cmp
sbb
add
or
arpl
jp
push
dec
cmc
data16
add
inc
sub
or
mov
push
and
xchg
movb
jl
sub
shll
jo
cld
jmp
push
inc
fsubl
inc
fdivs
rorl
mov
out
sbb
or
xor
push
jle
xchg
mov
inc
loopne
sbb
popf
add
clc
pop
int3
es
adc
stos
pop
cmp
mov
ret
jne
out
mov
xor
ja
pusha
in
mov
ret
ficoml
xlat
call
xor
xchg
xor
xchg
je
xchg
je
loope
mov
je
and
mov
add
mov
xchg
leave
add
inc
sahf
mov
cmpsb
ss
jp
jle
dec
adc
mov
add
sbb
ret
mov
cmpsl
and
or
jne
jmp
fwait
test
sbb
add
ret
js
sarb
sbb
fstpt
dec
and
lret
xchg
jb
rcrl
lret
ja
mov
pop
test
sti
mov
addr16
xor
jae
add
aaa
jmp
lds
gs
inc
mov
inc
lret
ds
sbb
pop
xchg
cmpsb
or
and
jo
lahf
jno
pop
jmp
addr16
cmpsb
fsubs
xor
add
pushf
add
ljmp
mov
push
mov
insl
sbb
scas
adc
add
cmpsl
cmpsl
cmp
cmp
movsb
inc
cmp
inc
in
hlt
or
jle
and
loop
xor
cmp
fldcw
mov
jae
mov
sti
pop
jo
dec
jg
repz
sub
ljmp
sub
lea
mov
aas
and
std
cmpsb
pop
bsf
sbb
xor
pusha
dec
stos
lea
test
inc
out
nop
hlt
scas
dec
mov
lahf
xor
xor
inc
ljmp
cmc
xor
mov
and
sbb
stc
negl
iret
fbld
pop
jl
mov
mov
pop
pop
or
jno
mov
test
inc
enter
lret
push
push
add
add
inc
mov
int
ja
lock
je
sub
lock
cmp
jmp
and
iret
rcrl
js
jb
or
out
jnp
lods
sub
jae
add
xor
xor
cltd
and
jbe
jns
js
sub
sbb
movsb
movsb
setno
out
decb
or
dec
das
mov
push
cmp
ja
fdivrs
insb
pop
cs
jb
jmp
ret
popf
insb
jo
shrl
sbb
mov
sub
jecxz
sub
inc
adc
cmp
pop
lahf
xchg
mov
mov
aad
pop
sbb
fnstenv
lock
inc
dec
fildll
cmp
add
xor
add
lea
enter
iret
loop
push
imulb
mov
loope
pushf
insl
aas
mov
inc
arpl
shrl
insl
xor
jl
ret
push
mov
sti
mov
fs
xchg
sbb
inc
xchg
xchg
std
mov
xorl
in
insl
icebp
push
test
xchg
fcompl
mov
push
jp
and
jecxz
and
sub
sarl
rolb
sub
jecxz
aad
adc
fucom
cmp
loopne
sub
sti
out
jns
out
adc
and
add
sub
push
pop
lret
mov
ss
stos
jbe
cmp
sub
push
pop
lds
xchg
push
push
sti
push
addl
fidivrs
cmc
add
dec
jno
enter
setne
sbb
ss
jge
in
and
hlt
pop
mov
mov
mov
and
adc
pop
inc
aaa
xor
fsubl
sbb
cli
loope
ja
fidivrs
pop
mov
push
gs
sti
jns
pop
pop
sub
pmaddwd
sbb
mov
jge
mov
fcomp
jnp
mov
or
pop
jmp
mov
movsb
add
loop
out
adc
sub
push
dec
mov
add
sbb
in
push
fsubrl
jp
xchg
dec
inc
stc
fdivrl
aaa
mov
push
mov
daa
or
xchg
popf
and
pop
mov
adc
xor
jnp
push
shll
sbb
aas
mov
lret
xor
lods
mov
add
jle
enter
jmp
xlat
cs
clc
outsb
dec
xchg
cmp
mov
xor
pusha
push
sub
rolb
sub
test
and
aas
scas
adc
adc
popa
out
jl
jne
inc
shrl
shr
xor
addl
xchg
frstor
enter
cmpsl
imul
xchg
sti
and
adc
enter
sub
imul
xor
add
ds
mov
add
pop
jge
in
sbb
stc
xor
mov
sub
cmpsl
sub
add
test
scas
insb
adc
jmp
adc
jle
fcompl
stos
cmpsl
jmp
dec
stc
jge
or
cwtl
aad
rcl
push
sub
mov
push
ss
subb
aas
adc
and
push
fiadds
inc
ja
lock
pushl
xor
cmp
dec
push
xor
js
leave
xor
iret
loop
stc
es
data16
mov
cmc
aad
xchg
aaa
jecxz
lods
dec
cmp
int3
mov
int
jge
cmc
data16
xchg
sbb
sbb
adc
adc
cmpsb
cmp
xchg
dec
in
push
dec
out
add
jg
lea
sub
stos
sbb
cltd
cmp
mov
test
jg
sbb
adc
mov
movsl
fs
mov
or
int3
andb
jne
xor
shr
in
mov
mov
or
xor
lea
xor
or
enter
lock
mov
gs
cmp
sub
js
xor
jae
idivb
lea
mov
push
movl
mov
mov
push
in
fisttpll
jmp
mov
rcrl
mov
mov
popf
pop
cmp
imul
stos
pop
in
jl
mov
and
adc
jns
fcmovne
pop
in
lcall
xor
and
hlt
mov
in
mov
out
pop
sbb
sti
or
adc
cmpsb
dec
std
popf
xor
xchg
mov
sbbl
pusha
mov
xchg
test
dec
cmpsb
sbb
scas
negb
cmp
into
mul
repz
int3
inc
scas
pop
inc
test
add
sub
push
jle
popa
xor
or
aaa
out
push
mov
push
loop
adc
daa
ret
int
addb
mov
xor
nop
iret
dec
adc
rcll
leave
jnp
cmp
shlb
push
pop
int3
push
sti
jb
dec
outsl
and
push
and
mov
cmp
pusha
cmp
test
xor
out
and
sti
cltd
xchg
push
addr16
lcall
mov
fisttps
ret
bound
cmp
xchg
xor
test
push
out
js
lea
adc
and
fsubrp
and
test
fnsave
movsb
nop
cmp
lea
cmpsb
dec
fcompl
ror
sub
pop
mov
out
and
xchg
add
adc
xor
mov
in
data16
mov
dec
addr16
push
push
test
cli
in
inc
out
or
inc
lret
loopne
dec
mov
add
lcall
pushf
cmpsb
push
push
cld
xchg
push
ret
ret
adc
cmp
push
ret
lret
dec
scas
pop
fisubrl
sub
lock
jmp
adc
insb
xlat
lahf
mov
push
xchg
and
loop
cmp
out
cmpsl
jmp
lds
into
and
mov
lods
stos
inc
xor
ds
in
repz
cmp
xchg
push
push
out
jnp
xor
icebp
inc
or
fisttpll
cmp
lcall
nop
loopne
mov
push
cmp
in
sub
addr16
scas
movsb
enter
call
fldl
add
xchg
sbb
dec
test
iret
adc
aas
imul
sbb
adc
mov
adc
sbb
mov
pusha
jmp
inc
out
inc
inc
scas
cld
push
jmp
icebp
mov
jb
pusha
or
mov
and
add
lret
adc
cmp
and
lret
mov
mov
scas
jne
push
sbb
cmc
mov
cmpsb
mov
push
jne
ja
jge
mov
mov
test
les
leave
push
or
call
or
movsb
inc
lods
mov
jbe
scas
daa
cmp
cmpsl
and
pop
lcall
add
xor
adc
jae
mov
enter
movsb
lcall
jg
inc
xchg
fwait
mov
leave
scas
pop
imul
sti
inc
jecxz
inc
cld
shrl
ret
add
mov
out
or
aas
push
mov
repnz
dec
adc
dec
rcr
test
push
dec
loop
cmp
mov
jns
lret
xor
and
int
xchg
movsl
cmpb
mov
mov
mov
dec
pop
test
inc
scas
pop
sub
cwtl
shrb
test
dec
out
and
mov
push
or
mov
adc
cmp
and
inc
cmp
mov
insb
dec
push
loope
sbb
and
xor
xor
push
push
inc
mov
cmp
push
jg
lods
loop
es
jns
dec
cmp
popf
test
sbb
lds
mov
sub
fs
mov
mov
pop
jge
jo
inc
push
fldcw
outsl
jp
je
iret
pop
sbb
push
iret
rcrb
pop
jle
cmp
sub
mov
xchg
or
add
mov
adc
popa
jp
fnsave
aaa
cmp
test
mov
imul
enter
das
xor
jno
inc
xchg
ja
sub
sbb
or
fisubs
mov
jl
inc
pop
jp
push
nop
cmc
lret
cld
arpl
mulps
push
or
lds
outsl
insl
pop
cmpsb
in
out
mov
xchg
ss
fdivs
or
scas
cli
roll
ss
add
cmp
mov
mov
mov
jbe
inc
out
sub
cs
lahf
cltd
lahf
dec
sbb
cs
in
enter
fstl
lret
int
add
popa
jmp
sbb
pop
sub
or
xor
inc
sub
int3
mov
mov
push
movsb
leave
sub
aaa
sbb
and
imul
nop
mov
xor
gs
xchg
inc
cmp
sbb
add
cmp
and
push
dec
mov
cmp
mov
popa
xchg
lret
into
leave
addl
outsl
push
push
inc
push
and
sub
mov
xor
dec
popa
fldcw
mov
dec
or
rcrb
fdivrp
and
ret
addr16
adc
addr16
lds
jne
mov
std
adc
out
xchg
pop
shrb
pusha
popf
mov
insb
popf
sub
jbe
dec
jecxz
mov
and
mov
adcl
sbb
add
out
push
lcall
jle
arpl
lock
mov
lahf
mov
add
pop
and
add
pop
pop
sub
jns
call
jp
mov
aam
sub
shlb
jo
pusha
sub
jnp
lret
or
ret
xchg
add
arpl
outsl
pop
mov
rcr
xchg
jg
jne
in
jmp
in
lret
mov
dec
mov
aas
mov
mov
test
and
ljmp
mov
sub
mov
xchg
cmpsl
or
pop
mov
gs
cwtl
insl
es
mov
int
test
cli
cmp
movsl
cmp
fnsave
repz
cmp
subb
mov
fucomip
cmp
out
dec
xor
xor
sarl
adc
or
stos
loope
inc
xchg
lods
xchg
sub
mov
ja
aam
dec
int3
in
leave
pop
mov
jmp
out
clc
pop
mov
in
mov
push
mov
cmp
mov
xlat
rclb
push
add
je
ficoms
in
fwait
adc
nop
aam
jne
movsl
negb
inc
mov
das
lods
xchg
into
dec
std
mov
bound
leave
jbe
aaa
lock
sbb
sbbb
clc
xchg
push
andb
xor
xchg
push
fcompl
fsub
xor
repnz
cs
rorl
ds
jg
pusha
mov
addr16
aaa
out
std
cmpsl
daa
pop
aas
sbb
stc
pop
ja
loop
in
add
test
push
stos
cs
ja
in
mov
scas
jle
stc
aam
int3
mov
or
into
adc
xor
loopne
jmp
out
xor
mov
pop
je
data16
jl
fnclex
fstl
adc
adc
cmc
fistps
jnp
dec
xor
mov
pop
push
daa
jnp
mov
rcrb
fstpl
test
ds
and
loop
mov
insb
jle
aas
and
scas
popa
les
dec
repz
cmp
push
push
adc
cmp
js
cltd
xchg
mov
shr
sub
movsb
sbb
popa
lahf
test
cwtl
stos
bound
push
pushf
jne
sbb
into
repz
push
cmpsl
and
fistps
or
aas
ljmp
cmpsb
imul
mov
mov
ficoml
sbb
rcll
jno
rcll
movsl
and
mov
insl
icebp
push
pop
pop
inc
push
mov
cmc
jo
xor
and
cmpsb
jmp
inc
mov
and
jmp
or
sti
inc
cmpl
fimuls
aaa
dec
out
ljmp
decb
hlt
adc
ficoml
jecxz
pusha
fisubs
cmpsb
adc
cmp
lcall
pop
orl
lds
xchg
adc
mov
xchg
pusha
mov
adc
or
sti
sub
call
sarb
sti
sub
push
mov
xor
out
cmp
lret
mov
xchg
mov
mov
push
mov
xorl
add
ja
jne
int
fs
fildl
arpl
orb
ret
mov
add
out
adc
jg
lods
sbb
sub
data16
xchg
sub
sbb
or
jg
mov
or
movsl
inc
lock
inc
insl
add
mov
pushf
rcll
sub
scas
repz
out
sti
addb
cmp
cltd
or
shrl
inc
insl
rcll
pusha
js
mov
sahf
push
lods
sbb
daa
and
xorl
cmp
fwait
push
jmp
enter
xchg
jns
sub
sbb
enter
clc
xor
jbe
popa
pusha
sahf
lods
add
out
xchg
jle
dec
adc
cmc
scas
cmpb
arpl
dec
shll
dec
dec
jae
test
arpl
mov
stc
mov
add
xor
xchg
out
add
scas
js
mov
mov
jns
es
pushf
into
pop
insb
push
or
clc
hlt
sub
jb
xor
xchg
xchg
rcl
adc
mov
sub
push
fstenv
sbbb
pop
in
and
out
xchg
stos
fwait
std
hlt
sbbb
mov
adc
das
mov
aaa
shlb
add
cmpsb
loope
xor
mov
pop
orl
mov
mov
gs
divl
in
mov
xorb
adc
mov
inc
lods
pop
cmc
scas
add
xor
mov
and
icebp
imul
adc
or
rolb
sub
lahf
sub
rcrl
js
jp
sahf
xchg
jp
mov
movsb
fwait
fwait
insl
insl
xchg
mov
sub
or
push
jne
mov
mov
jo
addb
or
xchg
clc
rcrl
cmp
xchg
xchg
add
mov
pop
jbe
in
subb
adc
mov
xchg
sarl
sub
add
fisttpl
or
sbbb
sub
jge
fcoml
in
pop
mov
push
aas
lret
pusha
sti
push
mov
xlat
mov
repz
mov
jbe
decb
pop
mov
add
ds
push
sbb
or
daa
sbb
pop
xchg
adc
inc
inc
fists
mov
mov
sub
icebp
stc
lea
test
shrb
inc
xchg
mov
sub
test
popl
stos
pop
cmovs
add
dec
insb
xor
gs
fistpll
mov
daa
dec
mov
mov
scas
inc
mov
add
test
xchg
lods
jmp
movsb
aas
mov
cs
dec
push
sub
inc
pop
xchg
sti
xchg
hlt
std
pop
dec
mov
je
or
inc
mov
sub
inc
pop
sub
in
xor
xor
cmp
and
cmp
cmp
push
jo
and
sbbl
add
dec
test
clc
pop
cmpsl
cwtl
or
inc
cmp
loop
mov
jle
mov
std
pushf
rorb
dec
and
fwait
fnstenv
jnp
addr16
sub
ds
dec
shlb
add
sbb
mov
adc
sub
mov
or
cmp
mov
out
dec
inc
pop
movsb
mov
pushf
sti
mov
cltd
inc
ficoms
test
jge
std
mov
sub
add
dec
sbb
sub
cmpsl
rcll
rcll
xchg
mov
lods
mov
xchg
lcall
aas
lcall
lret
and
push
xchg
add
shll
or
dec
into
repz
jle
mov
cmp
mov
shr
jg
cmpsb
or
in
or
ficoml
rcll
popf
sbb
jo
push
imul
mov
inc
cmp
inc
repnz
shrb
cmp
and
subb
dec
dec
rcl
push
xchg
rorl
jno
sub
sarb
aas
mov
jecxz
lret
lcall
adc
in
cmp
into
fwait
ds
lods
lret
jge
sbb
imul
test
sub
or
inc
mov
and
in
popa
push
dec
popa
call
inc
out
mov
sub
ss
pushf
xchg
or
fcompl
push
out
movb
test
faddp
mov
sub
aam
dec
inc
pslld
rcr
jl
out
jg
pop
lret
xor
push
roll
es
std
fistpll
loop
add
cmp
shrb
pop
jmp
sub
push
mov
and
push
pop
xchg
lahf
cmc
lcall
sar
daa
mov
pop
nop
cmc
outsl
inc
es
adc
cmp
jae
or
mov
cmpl
xlat
xchg
dec
cmpl
out
repz
adc
popf
or
cli
xor
xor
clc
jnp
xchg
or
scas
pushf
cmp
jmp
sahf
out
ja
lods
int3
aas
dec
xchg
out
pop
cmp
inc
jb
andl
shrb
xor
fistl
xchg
pop
cmpl
lahf
js
clc
cmp
out
jb
inc
pop
sbb
jecxz
fistps
adc
pop
aas
repz
push
mov
rorb
testb
or
not
push
mov
mov
and
push
idivl
ss
and
sub
in
sub
mull
insl
adc
cmp
adc
push
sub
enter
sub
mov
insb
mov
xlat
jnp
jg
pop
jae
cmp
add
fisttps
adc
push
aas
mov
cmc
inc
or
adc
lahf
xor
out
sub
sub
or
push
push
jp
lds
in
mov
fbld
lret
test
hlt
xor
push
mov
les
jb
sbb
leave
insl
addr16
insb
mov
ret
jb
fiadds
push
mov
pop
push
outsb
jmp
push
cld
jl
in
jne
pusha
ljmp
and
pop
loope
cli
push
hlt
das
or
loop
repnz
test
adcl
add
mov
test
pop
mov
enter
cli
test
out
push
ret
enter
sti
fstps
xorb
mov
pop
ficompl
and
stos
std
mov
adc
ror
ret
sub
fisttpll
add
nopl
inc
cld
xor
pop
in
and
or
push
loop
cmpsb
pusha
hlt
cld
test
cmpsb
sahf
pop
gs
popa
mov
push
xchg
add
push
mov
mov
fmuls
cmp
or
jnp
rorl
inc
icebp
test
in
cld
popa
adc
mov
xchg
mov
push
hlt
push
sbb
inc
sub
jecxz
jae
scas
leave
mov
mov
bnd
mov
or
cmpsb
dec
enter
cltd
stc
mov
xorb
inc
pop
cwtl
mov
mov
or
pop
es
and
and
mov
push
mov
loop
test
jp
ja
mov
mov
in
push
and
sbb
mov
ljmp
jmp
pop
imul
xchg
dec
push
iret
jmp
js
push
mov
inc
into
fsubrl
and
mov
jge
dec
adc
idivl
in
shl
push
push
test
ljmp
pavgb
mov
das
mov
pop
pop
fwait
neg
icebp
out
inc
adc
fcmovb
sub
fiaddl
stos
mov
dec
fistpll
clc
test
xchg
sbbb
sub
adc
and
xchg
test
dec
inc
dec
mov
mov
mov
ficompl
imul
lods
and
stc
ja
sbb
jg
push
shr
test
xchg
inc
call
and
ds
rolb
cld
mov
or
movsl
mov
lcall
insb
jle
pop
mov
pop
sbb
cmp
push
mov
aas
mov
push
clc
daa
add
jbe
mov
xchg
sarb
inc
jmp
data16
cmp
sbb
aas
xchg
lcall
nop
cmp
jns
mov
lahf
hlt
xor
mov
cli
icebp
je
out
sub
jb
push
adc
icebp
sub
mul
scas
xchg
in
ret
xor
in
mov
sub
adc
xchg
pop
sbb
iret
repnz
ret
xor
jle
lds
lahf
jg
jle
test
je
sub
mov
push
aad
adc
mov
dec
adc
lret
icebp
cmp
nop
scas
enter
cwtl
fiadds
dec
push
sub
nop
loopne
mov
ja
out
mov
mov
fldt
dec
in
pop
adc
pop
mov
cmpsl
push
adc
pushf
lock
test
adc
sbb
test
addr16
sbb
dec
aad
nop
cmp
xchg
cs
iret
in
or
inc
xor
cltd
add
dec
fdivr
push
xchg
imul
dec
fmul
pop
mov
enter
arpl
cli
aad
dec
mov
and
ror
xchg
popa
cmpsb
sarb
pop
pop
fdivrs
and
jb
and
aas
mov
mov
or
sahf
imulb
jno
leave
cmpsb
and
xchg
cmp
mov
cmp
in
pushf
nop
and
mov
add
cmpsl
add
jmp
lret
pushf
add
add
xchg
push
call
ror
mov
stos
stc
popf
dec
popf
dec
add
add
lods
loopne
iret
mov
sbb
xchg
lcall
cmpsb
ss
push
mov
ret
sti
cmp
movsl
aas
sbb
mov
test
data16
or
jmp
cli
inc
enter
pop
add
cs
std
ret
scas
and
mov
ja
cmp
jle
add
cmp
mov
leave
mov
cli
add
data16
mov
jge
dec
pop
sbb
fisubl
adc
popf
add
cmp
rcpps
cld
fcmovne
pop
add
push
add
inc
mov
pusha
insl
inc
push
repnz
scas
push
mov
or
xor
in
popa
outsb
mov
sahf
out
mov
xchg
imul
jae
mov
inc
inc
adc
dec
adc
jge
icebp
hlt
sub
loop
jmp
jne
mov
jge
push
sub
call
mov
fldl
std
icebp
in
pusha
dec
test
inc
imul
ret
push
add
subb
lret
outsb
push
je
push
insb
out
or
js
das
and
aad
or
mov
push
push
add
lret
xor
lea
dec
or
jmp
and
loop
inc
jae
dec
lret
mov
push
nop
mov
lods
jo
cmp
ret
int
je
je
pop
adc
push
jno
call
pop
xchg
dec
popa
sbb
gs
test
mov
or
jbe
xchg
cmp
pop
sub
or
add
nop
roll
mov
xor
adc
shll
jb
mov
inc
je
jecxz
out
shl
and
orb
mov
push
xlat
pop
punpcklwd
adc
addr16
dec
push
dec
dec
sbb
mov
pop
mov
stc
xor
fildl
data16
sbbb
insl
inc
cmp
mov
add
mov
imul
and
cmpsb
xchg
rcrb
mov
adc
std
xor
mov
jecxz
in
mull
imul
flds
xchg
ljmp
jns
leave
mov
std
fdivrs
push
cwtl
nop
cmp
sub
loopne
and
and
xor
and
mov
xor
sbb
mov
dec
ljmp
pop
mov
xor
bound
dec
and
pop
aam
clc
jns
aaa
aaa
jl
cld
test
arpl
outsl
xor
out
or
aaa
sbb
push
pop
inc
jae
ja
pop
ret
arpl
int
jbe
inc
es
imul
or
dec
pop
insb
push
xlat
clc
sub
int3
rol
popa
in
xor
fwait
pop
les
xchg
int
or
or
call
dec
loope
xor
sbb
les
test
cmp
adc
or
je
idiv
xor
mov
xchg
aad
sbb
fwait
inc
test
clc
or
mov
sti
pop
inc
mov
in
mov
pop
adc
sub
dec
mov
cmp
jmp
add
sti
and
cmpsl
add
aad
pushl
mov
sbb
ljmp
or
cwtl
dec
add
jbe
sub
mov
jmp
jne
cmp
push
nop
out
add
xor
int3
aas
bound
loope
inc
fcomps
std
addl
out
cmp
arpl
xchg
or
test
dec
mov
loop
in
pop
ret
and
jg
fidivl
xchg
xchg
popa
test
adc
xchg
sub
cld
pop
jnp
lret
cmp
push
lcall
mov
sbb
lret
stos
sbb
jno
or
sub
shrb
popf
lret
repnz
or
jecxz
in
gs
out
push
loope
push
jnp
and
push
lea
fwait
pop
std
xchg
xchg
push
iret
nop
cld
hlt
in
into
sub
arpl
xchg
insb
imull
sar
jns
inc
mov
iret
imul
scas
and
sub
aad
ss
push
jbe
gs
aad
sub
dec
dec
xchg
mov
inc
or
fwait
ja
test
add
shll
mov
bound
push
mov
rcll
and
and
loope
outsl
into
mov
cmc
add
inc
sti
xchg
mov
lea
cld
push
iret
adc
mov
push
unpcklps
and
ljmp
fwait
xchg
jg
mov
fdiv
sub
mov
sub
insb
or
int3
fildl
ret
filds
sub
lahf
movsb
push
stos
shl
cmpsb
mov
and
repnz
lods
out
push
mov
push
mov
push
mov
dec
mov
sub
add
add
gs
jae
lods
in
call
mov
mov
inc
sbb
loope
dec
sahf
out
int3
mov
add
fnsave
jmp
xchg
ret
enter
jmp
xor
subl
jnp
rcl
ja
test
insl
cmp
mov
jl
clc
or
add
push
loopne
lods
arpl
dec
adc
mov
sbbb
or
adc
dec
pop
add
push
add
clc
sub
jle
jno
push
roll
and
fsubrs
adc
cmp
es
sub
jp
das
rorb
shlb
sbb
stos
adc
fcom
insb
sti
sbb
mov
jo
jp
cmpsb
lods
aas
dec
test
icebp
cmpsb
xor
pop
in
or
aas
data16
sub
cmp
cs
cmpsl
into
cmp
add
and
cltd
mov
jbe
in
inc
cmp
jbe
test
stos
ficomps
push
jmp
push
mov
imulb
adc
ja
loope
cmp
xor
mov
sbb
sub
int
gs
cmp
enter
dec
test
fcmovbe
movsb
xor
pop
mov
push
in
gs
sti
aas
cld
jb
lods
repz
js
and
jo
iret
mov
lods
pusha
mov
jle
mov
push
fistpll
int
cmp
jecxz
sti
add
cltd
dec
sbb
lret
dec
jge
icebp
inc
jb
jae
xor
fsts
pop
mov
mov
jb
clc
adc
dec
add
movsl
sub
push
cmp
mov
mov
mov
loopne
sub
cmp
inc
mov
mov
mov
xor
push
push
insb
mov
ret
push
cld
les
ss
jg
pop
mov
cmp
push
sbb
ja
mov
and
sbb
loope
fisttpll
push
and
frndint
cmpsl
repnz
mov
shll
loope
stos
push
aad
cmpsb
out
outsb
or
repnz
cmp
lods
pop
mov
lea
ds
movsb
nop
cmpsb
enter
inc
stos
nop
add
pop
mov
inc
mov
pop
dec
ret
xchg
adc
mov
js
je
popa
aaa
xchg
imul
clc
repnz
xchg
jge
outsl
xchg
dec
inc
mov
jo
adc
cltd
sub
insb
in
inc
fmuls
into
imul
repnz
sbb
mov
sub
mov
xor
into
fadds
sti
xor
sub
pop
jns
adc
push
scas
sub
ds
xchg
mov
mov
inc
xor
shrl
daa
mov
rolb
inc
out
hlt
or
insb
rclb
sbb
or
lds
jle
sub
lods
inc
mov
jno
leave
xor
fcoms
lea
cmpsl
and
decl
rcrb
push
je
mov
push
cs
and
push
je
pop
lods
outsb
jle
or
mov
jne
inc
iret
push
inc
inc
pop
cmp
pusha
int
repnz
lahf
bound
out
cmp
mov
cmc
dec
push
sbb
test
sarl
stc
out
repz
mov
jo
repz
call
adc
stos
stos
lcall
lods
repnz
dec
mov
dec
loop
add
out
mov
ja
mov
xchg
andl
jge
jb
and
sub
les
adc
dec
mov
dec
push
inc
push
add
iret
jmp
lret
push
pop
jnp
stos
push
cmp
xor
jns
mov
sub
and
call
push
mov
ss
xorb
sub
sbb
cmp
call
push
mov
add
adc
rclb
lea
adc
arpl
outsl
icebp
enter
hlt
std
mov
push
enter
adc
cmp
imul
sbb
jge
ret
inc
jmp
fwait
sub
adc
in
ret
jne
xor
jns
icebp
in
push
pop
insl
mov
iret
popf
mov
sahf
movsb
movsl
movsl
imul
lds
pop
dec
int
cmpl
xchg
sub
mov
outsl
testl
cmp
cs
sub
xor
lret
mov
cltd
add
bound
mov
add
dec
or
xchg
mov
dec
mov
and
inc
ds
sub
push
aaa
xlat
and
in
test
jno
xor
rorb
mov
ficoml
lret
push
test
xor
push
lret
inc
insl
mov
enter
jns
push
push
cwtl
add
es
push
addr16
ss
jnp
inc
cmp
shufps
je
sub
jno
pusha
mov
punpckhdq
inc
or
pushf
pushf
std
fst
push
stos
into
rorb
push
pushf
loop
lcall
sti
cmc
jle
mov
inc
jbe
ficompl
mov
mov
mov
pop
mov
fsubrl
mov
push
mov
fcompp
jmp
push
jmp
pop
adc
lods
cwtl
sbb
popa
add
clc
lds
xorl
ret
rorb
ret
jecxz
incl
add
pop
xchg
ficoms
ja
add
mov
mov
scas
inc
popl
add
popa
push
lcall
cld
mov
cs
dec
cmp
icebp
out
in
push
cld
cmp
int
push
cli
mov
add
jbe
mov
inc
pop
ja
xor
or
inc
xchg
je
inc
xor
loope
sbb
ret
mov
insb
jb
pop
xor
lds
xor
cmp
mov
add
lahf
adc
lahf
jle
pop
rclb
mov
pop
and
fisttps
in
cmpsl
cmp
lods
ljmp
mov
inc
es
jno
inc
sub
inc
ja
rcrb
dec
mov
push
xchg
xchg
mov
mov
xlat
add
jb
sahf
jo
js
bound
sbb
pusha
and
loope
and
mov
test
push
sbb
xchg
negb
mov
and
adc
push
pop
out
enter
inc
lods
inc
cmpsl
jge
push
in
inc
pop
jae
or
icebp
push
mov
int
repnz
popf
out
mov
fildl
mov
mov
popa
negl
push
jns
test
dec
shlb
xchg
ds
pop
dec
pop
out
adc
rol
lcall
push
pop
mov
pop
push
mov
jo
lea
pop
stos
dec
push
adc
xchg
sub
inc
stos
ljmp
mov
xchg
icebp
aaa
ds
push
sbb
sahf
pusha
loopne
fiadds
int3
arpl
inc
dec
mov
ds
mov
shlb
or
movsb
inc
mov
mov
lcall
ret
mov
stos
dec
add
or
cmpsl
nop
push
jl
insb
xchg
mov
xchg
call
mov
push
mov
dec
or
cmpsl
ss
outsl
lds
mov
icebp
mov
mov
and
push
popf
sbb
int
push
xchg
xor
sbb
push
pop
fisttps
iret
jb
adc
dec
mov
cli
out
les
insb
add
push
popf
lahf
jae
iret
or
nop
out
dec
iret
pop
or
xlat
xchg
mov
jg
les
mov
jne
mov
dec
jmp
fmuls
pop
mov
into
and
xorl
mov
mov
xchg
fistps
divb
mov
jo
jmp
bound
xlat
dec
out
jle
fistps
test
enter
out
mov
and
outsw
mov
lret
push
mov
mov
out
loope
fsub
int
cltd
pop
sbb
ds
jge
push
ljmp
sbb
push
mov
and
cli
sbb
stos
stos
sub
xchg
pushf
cmp
cmpsb
mov
movsb
sahf
ret
outsb
repnz
pop
das
popf
int
mov
data16
clc
mov
or
sub
mov
stc
je
lret
lock
outsl
xchg
enter
nop
insb
jbe
adc
jae
movb
out
or
pop
out
pop
jmp
das
or
xchg
stos
inc
out
loop
adc
cmp
fisubl
push
js
fisubs
inc
lea
xchg
add
in
jmp
jecxz
mov
cmp
ret
inc
xor
dec
movsb
push
adc
jns
and
les
in
rorl
and
fdivr
into
xor
pop
negl
dec
and
in
mov
xchg
jmpw
ret
dec
and
dec
rcl
das
sbb
inc
imul
add
pop
mov
and
dec
ljmp
pusha
cltd
out
jae
mov
stos
push
cli
and
push
scas
adcl
push
hlt
clc
adc
mov
cs
insb
ds
xchg
mov
jmp
add
movsl
add
push
imul
sahf
or
cld
xlat
xor
es
pop
fcmovnbe
and
icebp
nop
loop
mov
pop
or
arpl
mov
sbb
daa
adc
dec
and
sub
daa
cmp
loopne
inc
out
jo
int
or
lret
xor
mov
jno
pop
adc
mov
push
pop
dec
hlt
dec
xchg
sub
popf
into
xor
fs
mov
int3
iret
jns
push
arpl
das
pop
add
sub
cmpl
jo
push
fildl
out
add
aam
sbb
fldt
cwtl
fisubl
and
rol
insb
mov
hlt
fcompl
clc
add
adc
mov
push
in
jmp
cli
in
mov
insl
jmp
jg
dec
cmpsb
mov
push
leave
or
jecxz
inc
test
jb
and
movsl
popf
push
add
inc
mov
push
mov
and
ffree
loopne
or
sub
or
sbb
or
xchg
jle
dec
mov
hlt
mov
adc
fcmovne
pop
and
xchg
push
ds
mov
je
jnp
fs
mov
test
mov
push
mov
xchg
nop
adc
cmpsl
push
shl
and
enter
mov
nop
jg
orb
jle
dec
clc
add
pop
jno
sub
cmp
js
lret
outsb
outsl
dec
xchg
std
inc
loop
mov
sti
insl
cltd
xor
add
adc
movsb
mov
mov
into
cli
jne
inc
adc
pop
inc
jb
sub
mov
dec
cmp
add
aas
data16
mov
and
arpl
imul
mov
xor
loop
push
adc
ss
sbb
in
fisttpll
subl
mov
iret
cmpsb
fsubs
lds
xor
iret
inc
popa
pushf
xchg
xchg
lock
xchg
in
xchg
cmp
sub
arpl
jbe
popl
mov
push
loope
mov
gs
jmp
push
imul
roll
mov
orl
xchg
push
stc
lret
ret
mov
sub
sub
push
mov
popf
push
ljmp
xchg
jbe
cmpsl
adc
adcb
push
ret
pusha
outsl
lods
add
sbb
adc
xchg
jp
xchg
out
jmp
ds
add
fstpt
movsl
add
or
sahf
adc
pop
jg
xchg
fcmovbe
and
or
fwait
testl
addb
aam
cwtl
test
sub
dec
add
jmp
inc
inc
jg
mov
dec
sbb
mov
test
xchg
cmp
sub
push
andb
stc
fimuls
int
dec
pop
jns
mov
mov
hlt
aas
repnz
sbb
fnstcw
lea
aas
mov
mov
cltd
or
xchg
cmpsl
cld
sbb
mov
roll
mov
jbe
bound
xor
xchg
jne
ret
ja
jl
mov
jb
push
lea
fwait
xchg
pop
loop
outsb
cmp
ja
popa
lock
mov
cmp
push
jmp
push
icebp
imul
jb
es
xchg
into
xor
and
dec
arpl
gs
push
hlt
fs
mov
add
push
adc
aam
aas
xchg
sbb
das
cmp
into
jmp
pushl
in
int3
cmpb
push
lock
xor
jecxz
pushf
daa
call
aad
lds
inc
or
sbb
adc
xchg
sarb
jne
enter
mov
mov
sub
mov
clc
mov
or
pop
cld
mov
les
mov
pop
sahf
cmc
fcomps
lods
xor
pop
and
xchg
sahf
sahf
sahf
sbb
int3
lret
jmp
pop
mov
jmp
andl
sbb
add
div
pop
icebp
sbb
sbbl
loope
xchg
inc
push
cmpsb
push
imul
jno
popa
mov
jmp
ret
in
mov
jbe
in
and
shlb
aad
mull
out
pop
insb
jl
fmull
push
test
and
outsl
cmp
ja
mov
int3
subl
stos
aaa
mov
inc
mov
movsb
les
daa
inc
fsqrt
fsubrl
mov
sub
out
inc
mov
cld
add
mov
sbb
xor
inc
push
in
dec
lds
add
push
jge
lods
jb
jbe
pop
jle
pop
push
pop
and
xchg
xchg
xor
or
cmpsl
aam
inc
enter
sbb
adc
addr16
pop
daa
pop
jge
and
imul
or
faddp
stc
pop
sub
out
jl
fstpt
mov
push
rcrl
insb
jb
aaa
dec
shll
fdivp
inc
inc
loopne
outsb
test
mov
loope
jae
pop
adc
cmpsl
lock
in
xor
inc
mov
mov
adcb
dec
fdivs
cmp
out
sub
ljmp
fwait
out
pop
cmp
outsl
pop
ds
jo
and
aad
or
adc
push
sub
leave
or
testb
jns
hlt
xorb
icebp
mov
or
inc
repnz
arpl
or
inc
aam
push
dec
clc
movsb
pop
popa
add
std
mov
ds
mov
imul
insb
sbb
sahf
std
adc
ret
imul
or
push
or
sub
or
lods
xchg
inc
outsl
ret
fwait
dec
je
mov
and
xchg
sbbb
out
push
pop
push
inc
cmp
and
push
testl
jg
xor
lcall
jecxz
xchg
pusha
pop
inc
sbb
push
jo
aam
sub
cltd
clc
push
jno
mov
add
in
adc
pushf
mov
pop
mov
dec
loopne
fs
repz
xor
lods
pushf
xchg
gs
sti
pop
stc
add
out
sbb
mov
lret
and
or
cmp
or
pop
jbe
mov
ret
pop
inc
pushf
popa
lcall
and
icebp
js
mov
sub
sahf
inc
sbb
xchg
lahf
cmp
fstps
ss
shlb
mov
outsb
into
and
fucompp
cmc
stos
test
es
in
sbb
jbe
imul
popf
aad
cld
or
cwtl
pop
int
mov
sbb
shrb
pop
inc
cmp
lods
and
stc
jne
jbe
js
dec
sub
xor
mov
or
add
push
mov
and
pusha
rcr
shll
push
divl
popa
lret
clc
jne
sub
movsl
cmp
lahf
addr16
mov
loope
addr16
loopne
in
lods
cmp
cld
lret
jbe
shll
testl
mov
xor
and
and
push
add
push
xchg
xchg
push
mov
insl
ret
mov
push
fisttpl
pushf
cmpsb
clc
in
jno
orb
nop
adc
pop
out
mov
xchg
lods
stos
fdivl
pop
sub
sub
xchg
add
and
pushf
mov
mov
sbb
inc
mov
icebp
iret
jg
addl
xchg
cld
push
call
dec
js
xor
jbe
xor
mov
inc
mov
xchg
outsl
imul
mov
xchg
push
test
and
add
and
data16
js
sub
add
jge
test
call
aaa
xor
rolb
repz
cmp
jp
sbb
xchg
push
and
sti
mov
push
stc
and
shlb
andb
pusha
mov
lret
mov
pop
sahf
into
arpl
cmpb
xchg
fimull
lods
addr16
and
into
pop
xchg
les
lods
outsl
jmp
add
pusha
jnp
mov
insb
inc
popf
aaa
mov
cmpl
pop
xor
sbb
add
jle
cmp
test
push
inc
or
dec
and
int3
daa
aad
sub
lahf
dec
add
or
iret
int
aad
jp
adc
int3
inc
mov
ret
popf
adc
xlat
push
in
jmp
dec
and
addb
push
std
gs
js
sbb
push
repz
sbb
mov
subl
mov
shrl
pop
popf
repz
jno
gs
into
xchg
xlat
stos
push
dec
jle
orl
mov
cli
mov
pushl
jo
xor
repnz
sub
mov
sbb
or
cld
test
out
lcall
mov
cmc
negb
jg
xchg
pop
stos
xchg
sub
test
js
insl
dec
mov
xchg
xchg
clc
sbb
and
push
adc
addr16
adc
out
in
sub
int3
xlat
in
cwtl
mov
inc
pop
jecxz
ds
aad
rcll
pop
movsb
fimull
out
test
pusha
mov
sbb
adc
push
rorb
outsb
mov
pop
adc
xchg
sahf
mov
dec
loopne
rolb
sahf
inc
shl
aad
out
sarl
test
sub
aam
js
push
inc
cmp
lret
mov
xchg
adc
mov
mov
sbb
std
lret
nop
xchg
jg
and
jg
mov
jno
lock
test
pop
cmp
xor
out
pop
pushf
push
push
jecxz
fucom
ret
lock
pushf
les
adc
shlb
and
pop
hlt
sub
inc
cwtl
xor
jae
xchg
sub
adc
les
jg
push
ljmp
adc
add
mov
stc
mov
lods
and
stc
and
pop
aad
xor
inc
cmpsl
push
and
frstor
aam
arpl
or
daa
adc
shlb
pop
push
jp
mov
jbe
gs
jmp
add
popf
add
xor
fidivl
add
in
cli
xor
in
shl
stos
lock
je
xlat
scas
xchg
and
movsl
repnz
imul
mov
jg
fwait
jle
into
pusha
leave
inc
mov
cmp
jo
push
xchg
inc
pushl
xchg
add
pop
aaa
push
les
insl
repz
shl
jnp
les
pop
scas
insb
pop
nop
jge
push
pop
or
les
test
mov
inc
mov
dec
pusha
lea
sbb
int3
dec
pop
cmpsb
mov
and
movsl
or
loop
sahf
enter
fcomps
pop
lods
xor
sub
sub
in
dec
rcrb
add
clc
sti
push
orb
add
lea
je
leave
addl
outsl
hlt
jle
lods
pop
pop
cmp
insl
mov
adc
mov
inc
push
cmpsl
shlb
dec
ss
ret
popf
rcr
iret
lret
jo
test
insb
sbb
aam
aas
pop
call
shlb
ret
in
outsl
push
or
jge
shlb
testl
sub
sub
js
bsf
mov
data16
mov
dec
add
pop
cld
jbe
mov
pop
iret
shrb
sbb
and
out
inc
sub
inc
imull
movsl
cmpl
mov
sub
imul
bound
jo
jnp
out
cmp
in
testb
add
cltd
addr16
xor
call
out
and
je
xchg
ss
add
xor
sbb
orb
rclb
ret
sbb
sub
je
pop
or
pushf
xchg
lret
sbb
push
push
arpl
sub
clc
insl
loopw
test
sbb
out
xchg
call
mov
loope
sub
dec
ja
jle
cmp
ds
pop
push
mov
sub
pusha
sahf
push
xor
mov
fbstp
fucomi
mov
jmp
jns
pusha
stos
add
adc
daa
lock
shrl
jns
cmp
xchg
lret
mov
out
popa
into
dec
push
scas
fdivrs
icebp
clc
dec
test
icebp
mov
mov
lret
loope
jmp
insl
and
jg
fldt
test
pop
mov
adc
sti
sbb
sbb
dec
bound
adc
stos
lods
leave
push
scas
cmpsl
adc
int3
mull
addr16
push
mov
lret
in
pop
fistl
call
sbb
je
jo
test
push
mov
test
stos
aas
xor
scas
add
jbe
loope
add
xchg
mov
xchg
dec
mov
inc
es
mov
adc
xchg
and
sbb
sub
cmpsb
add
xchg
out
fiaddl
daa
ret
test
mov
pop
cmp
lahf
adc
out
mov
pop
sbb
jge
push
out
sbb
lret
movsl
pop
push
sbb
add
sub
mov
je
xlat
mov
push
lods
enter
fildll
in
enter
je
js
or
dec
xlat
mov
mov
mov
mov
in
mov
dec
cltd
imul
in
dec
or
fmul
adc
stos
mov
andl
pop
dec
clc
aaa
push
jnp
clc
mov
roll
xlat
adc
insb
adc
sar
pop
jp
jnp
dec
insl
frstor
mov
sbbl
xor
mov
xor
mov
ds
pop
xchg
loopne
mov
testb
and
lret
jbe
stos
sub
js
jg
xchg
add
lods
lods
cmp
or
mov
jnp
and
cld
push
sub
test
fstps
cli
inc
push
lods
mov
test
loop
addr16
xchg
add
pop
rcrb
ja
test
push
pusha
add
lock
lret
icebp
or
and
sub
pop
sbb
mov
cmpsl
and
popa
in
in
push
imul
es
push
push
sub
add
and
fstpt
stos
aaa
lahf
cmp
divb
data16
daa
and
or
loop
xchg
xor
jg
mov
ret
dec
sub
imul
inc
cmp
cs
jnp
sub
hlt
push
xchg
repz
int3
dec
lods
xor
pop
sti
lret
insb
xchg
imul
ret
fidivl
add
loopne
mov
mov
xlat
loopnew
aas
jle
orb
outsl
jg
lret
sbb
icebp
lret
mov
shrl
pop
std
mov
loope
std
sbb
push
bound
imul
push
push
cltd
call
mov
mov
sbb
jne
pop
icebp
mov
les
in
xchg
in
cmp
adc
outsb
std
lock
dec
ret
fldt
mov
add
or
sti
and
popf
xor
sbb
xor
lret
fsubrl
pop
mov
mov
pop
and
push
cmpsl
sub
sarl
mov
imul
push
inc
iret
xor
das
int
ja
mov
xorb
push
fwait
aam
add
jge
loope
push
add
jnp
push
sbb
cmp
xor
aam
fidivs
jle
sbb
xchg
ds
jl
int
jne
cmp
aas
inc
aaa
data16
mov
addr16
repz
mov
lcall
jl
sbb
mov
nop
sbb
cmpsb
fstl
lods
xchg
mov
lret
lahf
icebp
pop
lods
les
inc
cmpb
pop
jb
cwtl
loope
mov
scas
inc
jnp
push
jnp
jns
das
int3
mov
xchg
or
mov
std
xlat
push
or
mov
jle
in
roll
out
jp
shll
cmp
sub
and
dec
in
addr16
inc
movsl
cli
adc
mov
add
push
lcall
iret
rcrl
aas
mov
mov
loop
mov
pop
and
inc
lcall
push
pop
aad
sbb
sbb
push
jge
insb
idivb
mov
cmp
enter
in
pop
insl
mov
fbstp
loopne
or
xchg
add
push
outsl
nop
jge
xchg
loope
lcall
jp
mov
sub
ds
out
mov
pop
fcoms
fstl
mov
bnd
cmp
cmpsb
arpl
ret
xor
adc
or
jns
mov
sbb
or
jmp
dec
pusha
jo
and
mov
movsl
imul
lcall
mov
mov
or
sub
push
mov
mov
sbb
fs
or
push
mov
push
je
inc
inc
xchg
pop
pop
mov
in
rcrl
pop
jge
int3
xchg
xchg
imul
popf
ror
inc
mov
hlt
enter
pushf
iret
or
jmp
pop
xchg
lock
aad
or
mov
add
cmc
scas
addr16
mov
and
xchg
push
fdivs
and
pop
sub
mov
push
int
lret
mov
mov
push
inc
mov
lahf
cltd
fistl
test
jl
jno
pusha
mov
insb
mov
les
xchg
jae
xlat
adc
fcomip
stc
push
les
jnp
les
lods
lods
and
mov
jle
mov
xor
xlat
fxch
aaa
stc
sbb
xchg
mov
xchg
cmpsl
repnz
cmc
cmp
push
mov
mov
lock
shll
std
xlat
xor
mov
mov
pop
mov
inc
mov
jae
cmpsl
mov
sub
out
xor
test
divl
push
iret
es
arpl
push
out
pop
sub
jo
jle
call
sti
xchg
daa
or
rcr
shll
test
pop
cmpl
aaa
fwait
sarb
lcall
or
out
xchg
ficomps
mov
popl
inc
subl
dec
jbe
sti
adc
push
dec
mov
cmp
mov
in
mov
or
imull
das
cwtl
push
add
lea
xor
rcll
fidivrl
adc
imul
push
loope
test
xchg
scas
stc
pop
aad
fsubrl
les
imul
mov
push
and
je
movsl
pop
xor
leave
js
pushf
pop
pusha
pop
push
lret
shrb
mov
test
jmp
lret
push
imul
cmc
mov
in
push
push
mov
jecxz
jae
sbb
jecxz
sbb
dec
fcmovu
xchg
loopne
xchg
or
or
or
pop
or
shlb
lods
jno
mov
lea
test
sub
jmp
jne
push
repnz
lahf
mov
inc
mov
cmp
in
jg
loope
lods
xchg
xchg
dec
jne
aam
imul
jnp
push
mov
gs
subl
xor
sarb
and
cmp
hlt
inc
and
or
sub
adc
mov
nop
scas
sbbl
mov
ret
out
push
inc
stos
sahf
imul
std
std
cmp
push
fisubrs
mov
decb
jl
jae
test
add
lret
inc
dec
xor
jo
negb
gs
icebp
dec
pop
adc
mov
rorl
mov
test
jo
dec
lret
add
pusha
call
and
fistpll
lret
xor
int
cmp
pop
repnz
iret
mov
xor
cmp
xor
dec
lahf
dec
lahf
sbb
jns
mov
orl
pop
mov
bound
xlat
xor
push
cmp
push
test
jbe
fwait
insb
scas
sbb
dec
jb
cmp
pop
mov
int
lahf
popf
pusha
sahf
mov
push
xor
sahf
inc
adcb
sahf
pop
ljmp
dec
jl
cmp
xor
je
pop
add
pop
mov
inc
adc
mov
cltd
mov
mov
sbb
push
jge
lods
jecxz
lods
adc
movsb
loopne
into
dec
pushf
in
pop
and
in
cmpsb
mov
jo
inc
int3
sub
and
inc
sahf
or
mov
mov
jne
mov
mov
sbb
jp
pop
sbbl
or
call
ja
xchg
movsl
sbb
xchg
cmp
popa
arpl
mov
xlat
and
shl
inc
mov
xchg
push
test
shll
movsb
mov
xchg
cwtl
movb
stos
adc
int3
xor
fsubrs
pop
test
or
repnz
ficomps
aam
addr16
push
iret
or
add
movsl
xchg
clc
aaa
insl
enter
sar
lods
push
mov
sub
sbb
mov
lret
pop
cmp
rcl
jnp
add
adc
cmpl
pop
xchg
jbe
xchg
xchg
mov
popf
in
ret
xor
xor
std
and
data16
or
sbb
add
cmp
ret
pop
sarb
sbb
aaa
fldcw
pop
add
or
stos
outsb
push
cmp
mov
adc
xchg
nop
ljmp
mov
stos
xchg
dec
jne
cmp
es
xabort
add
mov
push
sbb
cltd
repz
xchg
clc
xor
fsubs
aaa
call
jae
jmp
pop
sarl
rorb
jnp
adc
and
cwtl
idivl
jno
sahf
inc
inc
sahf
jnp
movsb
outsl
push
stc
mov
jb
arpl
daa
enter
inc
cmp
dec
inc
xchg
fsubs
addr16
add
mov
push
cmp
add
push
and
xchg
inc
dec
jp
push
mov
xor
rol
shl
mov
das
mov
pop
pop
aaa
inc
sub
into
movsb
mov
out
sub
or
js
loop
ljmp
aaa
add
mov
imul
push
fcomi
rcrb
addr16
notl
dec
pop
dec
aad
pop
frstor
adc
push
fs
stc
jne
stos
sub
out
ja
andb
rol
aas
testb
stos
mov
mov
add
out
cmc
mov
rcrl
push
push
cmp
insb
sbb
in
testl
xchg
jle
add
push
xchg
inc
xor
and
outsl
fs
adc
adc
or
push
and
loope
jb
mov
insl
pop
lods
addr16
inc
stos
adc
test
push
arpl
pop
sarb
in
fnstcw
test
mov
adc
in
jmp
pusha
or
xchg
outsb
inc
loope
sub
jmp
mov
sbb
xor
pop
and
pop
dec
jp
dec
xchg
outsl
stos
outsl
psubw
push
aaa
cmovns
in
xor
mov
dec
mov
subl
cli
sub
lea
mov
sub
call
xor
cmpsb
xchg
lods
cld
decl
popa
addr16
test
iret
inc
ds
xor
jb
jmp
cmpsl
push
rcll
pop
imul
bound
jp
jmp
loope
sub
shll
rdtsc
push
inc
adcb
cli
push
push
lret
push
testl
lock
fsubs
sbb
into
call
arpl
cwtl
pushf
cmp
jae
pop
dec
popf
ljmp
in
sbbl
push
shll
add
mov
notb
popa
and
mov
cld
pop
shl
pop
sub
fucomp
in
sub
imul
sub
stos
hlt
mov
pusha
lret
or
test
cmp
rclb
sbb
repz
ljmp
dec
cwtl
jge
cmc
loope
push
movsl
lcall
fidivrl
or
movsb
xlat
dec
int
imul
sti
fildl
sub
xor
lods
mov
inc
aad
sub
enter
outsb
outsl
or
jg
dec
sub
mov
dec
lcall
pushf
mov
adc
js
daa
shll
das
js
je
leave
and
jb
mov
add
adc
daa
jmp
push
jno
in
fbld
rcl
aas
ds
aad
cmp
cld
ret
ret
test
hlt
sub
daa
sbb
pop
jmp
push
dec
outsl
adc
sub
ja
mov
pop
inc
mov
adc
out
cmpsb
push
jg,pt
jg
sar
push
push
das
xlat
push
mov
std
das
cmp
ds
test
ja
inc
add
les
pop
dec
cltd
imul
add
das
inc
hlt
int
rolb
push
mov
sbb
mov
push
fiadds
mov
daa
lret
jo
and
data16
xor
test
sbb
daa
into
int3
mov
jae
inc
mov
rcrb
data16
cmc
stos
rcrb
int
sub
sti
xchg
xlat
jmp
test
dec
xor
insl
movl
rorb
push
cwtl
sub
or
jp
mov
mov
cmpsl
jo
mov
cmp
jno
arpl
mov
fldenv
mov
mov
mov
push
push
minps
sub
sarl
dec
cs
add
dec
outsl
sbb
cltd
and
fisttps
mov
dec
aas
ljmp
shll
shll
jno
mov
mov
stc
test
stc
cwtl
jp
dec
xchg
lock
ja
push
in
arpl
pushf
dec
sub
jne
aad
adc
mov
xchg
adc
jno
iret
pushf
in
cltd
hlt
ja
dec
jno
push
imul
mov
ret
sub
add
test
jae
cli
test
out
daa
enter
dec
rorb
cmpsb
pop
push
ror
imul
andl
add
jno
jb
and
mov
mov
lcall
push
test
in
and
cmpsb
popa
dec
popf
leave
call
mov
or
movsl
daa
push
cmpsb
push
dec
and
mov
outsl
sub
cli
arpl
push
daa
sti
nop
ficoms
lcall
sub
cmp
shll
xchg
jge
insl
enter
lods
data16
and
pusha
xchg
inc
adc
cmpl
out
fisttpl
push
scas
xchg
inc
movl
mov
movsb
sub
jg
and
les
fdivl
fnstsw
inc
jne
outsl
adc
mov
or
mov
jecxz
mov
pop
mov
stos
call
cltd
add
je
push
and
xchg
popf
sub
je
mov
sbb
jecxz
aad
out
inc
jecxz
popa
xchg
dec
outsl
jb
stos
fwait
pop
lds
in
test
adc
and
pop
mov
je
nop
shlb
adc
outsb
pop
push
lods
fbstp
pusha
mov
repnz
inc
fcom
push
call
ljmp
stos
int
and
dec
push
cmpb
adc
pop
movsl
sti
testl
sub
sub
cmpsb
popa
sub
out
dec
ret
enter
adc
lods
cmp
lahf
into
sub
bound
mov
call
push
jne
rcl
movsl
and
cli
in
cwtl
xor
xorb
mov
push
sub
inc
sbb
mov
and
pop
push
cmc
aas
cld
mov
xor
sbb
jo
inc
pop
jo
jne
decl
inc
mov
cli
pop
fstpl
das
adc
sub
jnp
adc
push
cli
fs
sub
pop
xor
or
fsts
xchg
pop
xor
jne
dec
push
xchg
fists
pop
pusha
pop
jne
jge
jmp
stc
adc
pop
loop
in
lahf
push
ja
aam
adc
mov
scas
inc
ret
xor
mov
add
stos
addr16
stc
inc
cmc
mov
rol
gs
pop
testl
jp
lret
cmp
notl
mov
and
push
mov
push
and
xor
leave
repz
mov
lcall
adc
repnz
and
xor
push
xchg
pop
cmp
fcoml
jg
pop
push
ds
cli
pop
pushf
push
and
sub
mov
xchg
add
or
sbb
xor
cmpsl
sarb
add
inc
aas
aas
xor
movsb
cmp
jbe
jg
fwait
imul
hlt
jb
movsl
sub
inc
mov
fsubl
jle
and
adc
test
push
mov
imul
xchg
mov
pop
add
rcrl
jne
cli
rorb
sbb
ljmp
jo
xchg
adc
add
lret
pop
fwait
add
out
jo
push
xor
loop
dec
or
fcoml
int3
loope
testb
jl
sbb
sbb
ror
cli
and
pusha
adcb
mov
or
mov
in
andb
loope
jmp
xchg
popa
jbe
sbb
xchg
movsl
adc
addr16
and
lds
and
fwait
addr16
test
sbb
fs
test
xchg
adc
sub
inc
pop
in
pop
dec
loope
mov
mov
lahf
or
loopne
cld
inc
enter
stos
jg
dec
add
inc
fldenv
daa
in
dec
mov
push
jne
push
add
push
lea
mov
sub
jp
cmp
mov
sahf
jb
jns
lock
cmp
push
and
cmp
js
pusha
mov
inc
outsl
movsl
orps
inc
sti
fucomp
xor
mov
pop
not
sub
addr16
lret
and
or
or
jo
pushf
scas
in
in
mov
subl
pop
ret
repnz
daa
shrb
mov
sahf
xor
cmp
enter
lds
out
nop
pop
stos
insb
pop
cmp
dec
js
xor
jbe
testb
cmp
idivb
lahf
ret
mov
pop
inc
ja
mov
test
dec
adc
in
das
mov
sub
mov
sub
stc
xchg
mov
mov
sbb
sub
ja
addr16
ret
mov
adc
outsb
xorb
lcall
mov
rcll
lret
inc
inc
les
add
leave
dec
xchg
lret
mov
and
dec
mov
cmp
xchg
jp
popa
flds
arpl
push
adc
and
xchg
push
xchg
cmc
rcr
xchg
ss
mov
out
xor
outsl
test
incl
xchg
xlat
scas
cmp
sahf
rolb
out
xlat
sub
mov
test
jbe
outsb
push
popa
inc
pushl
inc
gs
add
pop
jecxz
imul
sbb
mov
add
lret
inc
scas
imul
or
dec
or
inc
xor
pop
xor
cmp
adc
cmp
adcb
stc
mov
push
es
xor
sbb
pusha
test
xor
xor
sub
jl
mov
pop
dec
addb
xchg
and
sbb
xchg
out
jg
add
cmpl
xlat
inc
scas
lds
adc
cmp
xor
xor
xor
xchg
std
addl
or
int
jns
push
inc
int
dec
les
pop
fcoms
divb
int
jo
lods
xor
dec
repnz
jns
sahf
insb
bnd
out
and
fxch
fwait
sub
call
lds
sbb
sbb
popf
dec
push
mov
call
cmp
add
ficomps
mov
mov
cs
js
dec
pop
or
jns
lret
mov
jp
testl
mov
lret
sti
push
jp
push
xchg
out
dec
or
inc
add
add
adc
inc
cmp
cmp
andl
enter
mov
xchg
push
hlt
jp
xchg
hlt
push
insl
stos
insl
sbb
cmp
sbb
lret
test
pop
dec
fistl
xchg
fadd
inc
jecxz
test
ss
cwtl
fildll
mov
mov
jbe
mov
inc
jge
push
es
jge
and
mov
insl
inc
xor
ds
ss
aad
dec
cmp
adc
inc
iret
shlb
adc
test
in
mov
adc
pop
adc
imul
cmpb
lock
fwait
lcall
stos
pop
mov
testl
rclb
cmp
jbe
lds
push
mov
pop
mov
mov
andl
jnp
fldt
jp
pop
scas
outsl
scas
jmp
lea
and
adc
mov
ljmp
lahf
int
pushl
xor
sbb
stos
aad
fwait
insb
dec
dec
lret
std
cmp
jne
pop
sbb
insb
mov
mov
js
push
test
inc
jb
jnp
pop
out
push
adc
dec
cmp
mov
aam
pusha
imul
test
mov
subb
sbb
push
repz
push
ljmp
dec
mov
inc
data16
mov
ljmp
lret
and
mov
lret
mov
loopne
cmpsb
aas
mov
or
mov
pop
incl
pop
push
ds
add
clc
inc
add
divb
sub
sbb
insl
inc
xchg
and
push
scas
jbe
xlat
sbb
mov
mull
mov
leave
cmp
outsl
lcall
sar
pop
andb
jnp
push
push
mov
xor
lret
jle
and
mov
test
arpl
add
cli
lret
jg
sbb
fdivs
iret
clc
mov
xchg
jg
leave
les
outsl
push
mov
sub
enter
insb
lahf
mov
adc
pop
mov
sub
jp
cmp
pop
xor
leave
sbb
insl
aas
mov
mov
lret
fsts
and
mov
push
and
xor
fdivrs
dec
sti
jl
or
lret
mov
jbe
xchg
dec
push
aad
cmp
push
cmc
es
mov
or
and
in
xchg
iret
xor
rorl
repnz
add
fucom
push
push
fdivrs
rolb
into
push
and
data16
fisubs
ljmp
rol
jle
jl
pop
addr16
push
push
cs
in
int3
addl
test
cmp
xchg
leave
test
fstpt
pop
push
icebp
cmp
lds
sub
sbb
mov
rol
ret
dec
pop
movsl
jecxz
add
test
lret
mov
cld
and
test
subb
add
pop
rcr
stos
test
lret
push
push
pop
dec
inc
aam
dec
sarl
mov
dec
adc
sub
lret
adc
mov
inc
imul
movsl
scas
nop
data16
sub
cmp
insb
hlt
jb
clc
lea
out
repz
pop
jp
ss
daa
int
in
and
cs
mov
push
cmp
pop
leave
stc
cwtl
sub
cs
push
sbb
mov
push
cli
loopne
sbb
sub
or
add
sbb
aad
lds
mov
push
dec
test
imul
or
inc
sbb
divl
pop
mov
cmp
xchg
jmp
inc
arpl
inc
scas
fdivl
clc
xor
jge
pop
fxch
in
dec
or
add
and
add
pop
aam
add
push
popfw
adc
aaa
adc
movsl
cmp
insl
push
sti
mov
dec
movsb
jp
xchg
testl
jmp
in
stc
movb
jge
pop
sbb
push
jg
scas
mov
adc
pop
add
jbe
mov
push
or
mov
jbe
xor
imul
in
lret
je
sub
test
jp
ret
cmp
fwait
loop
or
sub
pushf
pop
jne
sbb
ja
fistpl
gs
sbbl
fldenv
mov
or
shlb
dec
add
addr16
lock
xchg
lret
inc
cmp
mov
xchg
adc
inc
filds
call
addr16
aam
sbbl
sub
or
mov
mov
push
ret
cld
scas
or
rorl
ljmp
inc
loopne
push
dec
xchg
add
xchg
mov
lods
add
jb
scas
fisttps
mov
aas
iret
loop
mov
test
hlt
mov
clc
pop
outsl
mov
out
les
mov
nopl
pop
sbb
inc
cmpsl
loope
mov
or
xor
pop
xchg
add
test
adc
jge
mov
sahf
jl
aaa
mov
stc
mov
bound
test
sbb
sbb
out
lds
inc
and
add
mov
push
lea
das
pop
enter
scas
mov
add
cli
shll
shrb
jle
push
shrl
lock
fs
cmp
cmc
push
jno
lahf
mov
or
mov
test
cmp
jnp
hlt
fsubs
gs
mov
mov
xor
insb
sub
sub
cmp
fsubl
aam
cmpb
mov
and
adc
fnstsw
ljmp
pop
test
mov
popf
orl
jns
pop
test
jno
push
jbe
mov
or
pop
mov
int
lret
fucomip
fcoms
movsl
add
shll
into
sbb
pop
sub
imul
push
lret
xchg
cltd
jns
lret
cltd
xchg
call
jne
pusha
xchg
loopne
test
add
out
mov
push
inc
pop
dec
int3
sub
jo
sbb
in
outsl
jbe
fs
insl
add
daa
lret
cmpsb
cmp
dec
adc
or
orl
or
je
cmp
out
pusha
pop
jl
mov
adc
insl
ljmp
roll
fsub
scas
lods
sub
xor
or
mov
enter
mov
cmp
xchg
push
pushf
loope
int3
out
xor
adc
push
push
adc
daa
dec
data16
jae
sub
mov
mov
add
out
inc
pusha
lret
xlat
lea
push
loopne
jp
popf
xlat
test
mov
and
sbb
or
aad
clc
repz
cmp
mov
xchg
fs
push
lods
es
jo
mov
imul
leave
fistl
xlat
ret
and
shll
popf
mov
mov
cmp
or
test
xor
out
bts
sub
sbb
push
call
in
ret
push
into
inc
xchg
and
push
movsl
ret
pop
test
jg
xchg
mov
outsl
ds
jecxz
jns
leave
pop
adc
and
cmp
xor
lcall
lods
scas
ret
outsl
repnz
mov
fsubr
mov
xor
push
adc
cmp
jb
sbbl
loop
std
adc
cld
inc
and
or
mov
out
mov
and
iret
scas
sbb
inc
or
and
in
sti
inc
cmp
gs
cmp
pop
mov
scas
xor
mov
scas
lcall
nop
pop
adc
cmc
pop
lcall
mov
and
and
dec
lods
dec
cmpsl
jno
out
scas
clc
jmp
in
fwait
adc
jb
dec
fistpl
inc
pop
jne
mov
popa
or
rol
mov
ja
ja
push
sub
sbb
adc
mov
jnp
fistl
dec
cmpsl
imul
cmp
xchg
bound
jmp
pop
add
xor
call
push
clc
pop
fstl
mov
or
popf
ljmp
or
inc
mov
inc
repnz
push
mov
or
clc
jl
sahf
ja
shlb
add
and
jns
xchg
mov
or
mov
xor
lods
cmpsl
jge
addb
inc
call
xor
xchg
mov
hlt
xchg
or
pop
outsb
cmp
bt
mov
sbb
add
nop
sbb
xor
dec
xchg
sub
out
hlt
outsl
pop
xor
sub
xchg
mov
adc
xor
mov
push
lods
pop
push
pop
cmp
add
and
sub
adc
shll
mov
jecxz
fldenv
in
push
incl
sub
sbb
out
xor
int
inc
enter
scas
jg
hlt
pop
add
movsb
cs
int
adc
pop
jl
xor
xchg
adc
xchg
or
repnz
jg
dec
test
in
jecxz
les
mov
pop
xchg
cmpsb
addr16
aaa
adc
es
out
enter
push
pop
lret
fisubrl
lret
test
pop
popa
dec
ret
movsl
aad
push
push
push
stc
push
movsl
inc
mov
xor
xchg
mov
cwtl
sub
int
push
fdivrp
cmp
and
push
add
ss
fildl
cmp
test
jns
fcomps
cltd
cld
jae
mov
insb
es
jno
xor
jmp
fidivrl
test
add
je
insb
popf
lock
std
or
out
stc
leave
loope
insb
pop
mov
rcrb
dec
adc
sbb
mov
sbb
cld
xor
lods
cmp
pop
out
add
das
bound
mov
ret
sub
popa
jg
outsl
mov
faddl
incb
jae
arpl
pop
sub
pusha
addr16
dec
enter
pusha
sti
mov
inc
gs
adc
sub
movsl
xchg
js
xchg
outsl
icebp
push
clc
jo
shlb
push
in
inc
inc
xor
ret
sbb
cmpsb
push
mov
cmc
fidivrs
mov
mov
cmp
ret
movsl
loopne
pop
jl
faddl
movsb
cltd
pop
stos
mov
push
dec
out
js
push
adc
inc
mov
cmp
mov
dec
jbe
push
aas
out
sub
and
js
dec
jo
adc
imul
arpl
mov
lahf
ret
or
pop
movswl
push
jnp
mov
movsb
mov
jno
push
out
std
dec
test
stc
sub
xor
int3
jb
shrb
lds
sbb
lret
push
cmc
mov
xor
push
adc
lret
lods
push
movsl
sbb
sub
cmpsl
or
bound
push
test
movsb
fcoml
pusha
das
iret
ficoms
cld
mov
and
jmp
mov
fbld
xlat
stc
roll
push
mov
dec
jb
repnz
testl
xor
shr
hlt
push
dec
xorl
xor
pop
push
mov
cmpl
addr16
ds
shl
jbe
ret
pop
pop
pop
push
xor
fadd
outsl
pop
int
das
fstl
adc
rorl
inc
ret
and
sbb
fwait
mov
out
cmpsb
iret
mov
dec
jne
insb
test
movsl
pop
adc
or
aam
lahf
loop
push
sub
inc
int
pushf
mov
testb
xchg
sub
hlt
stos
mov
and
mov
push
xlat
pop
in
mov
add
xchg
cmp
and
xchg
and
sbb
dec
flds
mov
outsl
cmp
fs
cmp
lret
fs
jge,pt
fbstp
jmp
adc
lcall
xchg
roll
lret
xchg
xchg
add
rorb
push
add
inc
pop
shrb
lcall
in
sbb
shll
lret
add
cmp
push
in
dec
inc
push
cmpsl
dec
jg
in
rclb
lock
mov
xchg
sbb
out
test
inc
dec
fmull
shl
sub
jge
xchg
push
jl
std
mov
mov
xchg
pop
dec
lret
and
mov
in
push
sbb
jp
push
lds
dec
ret
insb
movsb
ret
xlat
jae
inc
out
dec
divb
jae
pop
pop
sbb
fdiv
stos
pop
repz
mov
xchg
mov
jo
sub
mov
dec
cmp
cmp
and
cmp
testb
mov
inc
and
dec
adc
arpl
add
aas
test
clc
bound
ret
mov
fsubp
sti
cs
dec
ja
insb
in
mov
dec
push
and
sub
sub
sbb
sbb
std
sub
lods
stos
xor
jb
push
rcrl
sub
xchg
andb
add
rorb
cmp
and
jbe
sbb
jp
into
stc
fisubs
pushf
sahf
test
ss
jns
sarl
adc
sbb
push
mov
imul
sbb
xchg
hlt
sahf
inc
pop
adc
and
clc
mov
sub
fisttpll
cmp
mov
loop
xor
xlat
stos
pop
jno
imul
fcomps
test
ret
fistpl
fistpll
inc
adc
add
mov
inc
cmpsl
divl
and
and
aas
mov
mov
pushf
mov
xchg
je
inc
pop
imul
cwtl
jbe
xchg
mov
mov
sub
sahf
mov
xchg
out
stos
mov
adc
mov
out
fldenv
clc
or
add
addr16
mov
add
je
adc
enter
inc
xor
fistps
add
aad
imul
shll
xor
dec
cmpsl
lea
shlb
push
js
mov
ss
sbb
into
sahf
ret
adc
adc
lcall
pop
jno
push
jbe
cmp
dec
neg
popf
aam
inc
jns
pop
push
pop
arpl
adcb
gs
xor
xlat
dec
loopne
cli
push
dec
pop
inc
jns
jnp
in
data16
fmuls
int3
cld
cmpsb
sti
xchg
mov
std
setbe
or
cmp
les
mov
ljmp
ds
out
xchg
loop
adc
add
push
lahf
in
int3
lahf
inc
paddsb
shl
sbb
xchg
add
mov
roll
fdivrl
pop
jecxz
or
mov
ret
hlt
jae
push
push
sar
push
mov
and
shrl
into
stos
mov
mov
jns
bound
mulb
push
ja
sub
lea
adc
push
cli
pop
incb
add
adc
mov
pop
pop
stos
xchg
inc
add
push
xor
mov
mov
jns
sub
mov
data16
sub
pop
sti
and
inc
lea
push
dec
mov
shlb
ret
mov
adc
ss
jle
insl
popa
or
mov
dec
cli
iret
push
lea
shl
out
in
mov
push
das
ss
iret
sbb
adc
mov
or
add
dec
popf
psllq
adc
in
outsl
jae
or
imul
in
in
add
jge
add
or
sarl
bound
xchg
and
dec
ss
jmp
dec
out
inc
pop
sbb
xchg
push
cmp
xor
push
jmp
mov
and
sub
lds
aas
dec
enter
push
ja
outsb
push
das
inc
imul
dec
std
popa
jns
xor
dec
outsl
out
xchg
aaa
jg
roll
arpl
xor
sub
or
sub
inc
jmp
int3
jmp
stos
neg
hlt
rol
test
push
xlat
sbb
mov
dec
add
lret
test
xor
clc
sub
push
push
push
xchg
fdivr
inc
enter
adc
push
insl
dec
sbb
add
ficoml
dec
fidivs
push
mov
stos
jbe
adc
mov
outsb
in
add
ljmp
sub
cmpsl
and
mov
int
sub
adc
int3
xchg
ret
jbe
push
das
xchg
lea
cwtl
push
int
add
jg
xchg
cli
bound
test
xchg
jecxz
xor
aaa
aam
cwtl
data16
jae
jg
lods
ds
clc
dec
ret
push
pop
sub
testl
daa
das
shrl
add
xchg
sub
sti
or
pushf
rcrl
jp
xchg
push
scas
dec
gs
sub
subb
pop
roll
xchg
dec
notb
sahf
sbb
mov
pushl
jecxz
stc
insb
clc
mov
shll
push
sbb
les
push
xor
mov
mov
sub
or
inc
inc
iret
out
mov
inc
daa
loope
lahf
out
inc
pop
cmpl
jmp
dec
arpl
mov
and
inc
mov
addb
sub
stos
imul
mov
inc
div
add
sbb
jbe
sub
ds
mov
mov
xor
hlt
std
pushf
fcmove
into
xchg
or
mov
push
loopne
pop
sbb
leave
adc
mov
and
cli
xorl
push
mov
out
sbb
and
dec
lea
mov
test
scas
cmp
loope
leave
sbb
xchg
xchg
mov
sbb
mov
or
add
mov
loope
xchg
arpl
xor
jecxz
shrl
aas
in
pusha
mov
pop
add
cld
fcomps
push
adc
inc
jecxz
pop
sti
mov
outsl
push
fwait
add
or
shll
dec
aaa
imul
dec
push
ja
shrb
mov
sarl
in
mov
push
inc
mov
cmp
cltd
xchg
cmp
lret
ja
loopne
mov
rcrb
std
imul
test
add
dec
insb
pop
dec
inc
cld
outsb
mov
inc
jae
jl
movsb
fistl
incl
enter
pop
adc
lcall
shrb
test
scas
imul
jo
sbb
pop
adc
mov
sbb
xor
call
insl
xchg
lea
cmp
jecxz
add
addr16
icebp
dec
mov
mov
cs
mov
sbb
jge
and
dec
pushf
xlat
rcrb
xchg
loopne
aas
out
cltd
insl
fdivrs
clc
daa
cmp
dec
outsb
adc
xlat
fstpl
test
inc
push
or
addr16
jae
jg
dec
sub
dec
and
jg
mov
dec
scas
sahf
aad
cmp
push
xchg
mov
add
out
mov
xor
fwait
inc
fimull
mov
cmp
stos
pop
mov
mov
test
dec
push
testb
xchg
adc
sub
aaa
enter
inc
lret
clc
std
mov
int3
lret
push
out
push
inc
push
xchg
inc
adc
xlat
pushf
iret
fisubrs
rolb
cwtl
push
jb
daa
out
dec
mov
xor
je
loopne,pt
add
shr
jae
cltd
mov
jle
popf
or
dec
stos
ficompl
push
push
mov
adc
inc
xchg
shlb
jbe
data16
adcl
or
mov
fsub
out
mov
xorb
xchg
mov
pop
fstps
fs
xor
sti
adc
or
or
aas
mov
adc
cmpsl
clc
and
inc
pop
jecxz
push
dec
pop
pop
mov
jb
loope
pushf
test
pop
xchg
mov
call
clc
mov
add
insl
inc
cltd
addr16
popa
test
dec
ja
in
negl
and
xor
das
pop
outsb
in
add
orb
push
outsb
add
xchg
fldl
dec
scas
int
cmc
and
adc
sahf
stos
imul
jns
jl
leave
inc
aad
lcall
push
inc
dec
adc
pop
popf
xor
jbe
jbe
mov
push
sbb
and
mov
dec
andb
call
je
stos
int
push
je
shl
sub
xor
movsb
fldt
lea
scas
fists
loop
dec
sahf
jae
jmp
add
jno
mov
jne
out
jg
adc
or
xchg
iret
dec
inc
lods
xor
mov
lahf
mull
clc
add
jns
push
pop
scas
jns
add
jb
xchg
movsb
insl
mov
lret
in
rcr
pop
lcall
lcall
mov
mov
push
testl
out
fildll
lret
pop
or
push
add
mov
mov
mov
push
push
push
in
jno
jge
outsb
cmpsb
cli
adc
push
jo
mov
ret
and
jns
je
negb
xchg
adcl
ss
out
mov
mov
call
std
ss
pop
cs
add
bound
out
lret
pop
mov
mov
incl
dec
pop
bound
inc
push
inc
push
mov
push
stos
push
push
call
push
mov
imul
add
nop
pop
ret
push
loope
jnp
push
jb
and
xor
cmp
pop
jne
cs
jmp
sbb
add
cli
testl
add
sub
mov
ss
sbb
je
fdivrs
inc
daa
stos
movsl
iret
adc
lds
mov
mov
iret
push
mov
cmp
sub
cmp
shlb
out
push
sahf
xor
adc
fdivl
fsubr
push
stos
inc
stos
jp
cmpsb
movsl
addr16
dec
out
fistpll
sub
push
loope
idivl
pop
ret
shrb
pop
mov
adc
js
and
add
fwait
mov
and
int
addb
ss
xchg
loopne
pop
int
pop
mov
xlat
fsubrs
xor
mov
jge
xor
push
loope
sbb
inc
popa
mov
and
cmp
pop
pop
push
clc
add
adc
and
mov
inc
mov
inc
call
add
in
ss
fistpll
lods
stc
or
mov
push
rcrl
inc
pop
push
inc
push
pop
loop
je
pop
jns,pt
push
jbe
sub
repnz
leave
aam
movsb
xchg
jb
pop
dec
sbb
and
mov
mov
xor
inc
adc
adc
pop
dec
dec
xor
rcll
add
ret
popf
push
leave
into
or
xor
std
insl
shrl
iret
cli
mov
or
ss
dec
jne
std
into
dec
xchg
jb
repnz
ljmp
lcall
sub
and
sti
xor
and
inc
xchg
mov
div
mov
push
dec
scas
adc
mov
notb
ret
jmp
mov
test
xor
loopne
mov
loope
int
jg
mov
xor
in
testl
mov
mov
cmp
fdivrs
sub
and
orb
loopne
ds
das
xchg
test
pop
ficompl
xchg
mov
sub
inc
repz
mov
sti
inc
imul
dec
mov
push
jmp
xchg
jmp
ret
ss
xchg
or
mov
mov
jbe
dec
mov
jno
push
push
jmp
mov
xchg
mov
dec
sbb
adc
xchg
ja
pushf
lods
sub
leave
pop
or
mov
loopne
mov
pop
pop
out
enter
push
data16
and
xchg
aad
lahf
mov
out
stos
or
fisttps
add
dec
outsl
bnd
fcomps
lods
mov
imul
aaa
scas
lahf
push
adc
and
gs
xor
xchg
dec
and
sub
bnd
pop
and
pushf
lahf
sub
mov
das
stos
jmp
outsb
or
dec
or
inc
push
orl
mov
jbe
mov
sbb
lret
shrl
rorb
sahf
or
inc
adc
iret
das
jmp
fs
movsl
or
cmpsl
cmpl
xchg
hlt
mov
or
jo
fwait
sbb
inc
pop
outsl
in
lock
add
inc
fmull
int3
cwtl
int
out
dec
lret
inc
stc
lret
aaa
mov
push
jmp
push
insl
cli
push
mov
rcl
inc
push
es
mov
cmp
std
dec
shr
pop
xor
or
lret
and
fadd
add
lahf
jp
pushl
or
jne
test
push
pushf
inc
xchg
adc
pop
je
ljmp
out
das
stos
pop
aas
xchg
orl
lods
push
dec
faddl
int
sbb
ja
inc
or
xlat
sub
ret
rolb
sub
int3
pop
enter
jo
fisttpll
outsl
jo
mov
jle
pop
push
gs
mov
pop
lock
nop
popf
adc
mov
or
pop
push
leave
xor
je
ret
scas
add
sbb
and
pop
outsl
jge
lock
outsb
dec
ljmp
dec
xor
ds
out
popf
inc
adc
js
test
push
popa
dec
mov
xchg
cmp
jg
lret
or
aam
lods
or
mov
push
mov
cs
pop
insb
daa
dec
rdpmc
mov
sub
or
cmp
and
mov
lea
jne
and
push
out
sub
leave
mov
pop
stos
pop
pop
sbb
je
ss
gs
loope
out
jae
scas
jae
mov
mov
lcall
mov
std
xor
rcrb
into
nop
lret
cltd
andl
mov
clc
scas
cwtl
push
shl
cmp
cmp
adc
push
xchg
xchg
adcl
and
cmp
jae
imul
push
cmp
jge
push
das
cwtl
mov
mov
repnz
dec
aad
dec
lahf
repz
xchg
imul
add
cmp
mov
jg
pop
cmp
loopne
dec
outsl
add
je
xlat
add
mov
xchg
rdmsr
cmp
aam
scas
mov
xchg
jne
popf
mov
pop
popa
negl
dec
xchg
cmp
mov
jo
xlat
mov
xchg
push
popa
mov
adc
push
jnp
inc
in
imul
pop
xor
xlat
les
cmpsb
icebp
adc
leave
sbb
inc
idivb
pop
sub
mov
inc
sbb
gs
fwait
mov
fsubs
mov
push
repz
jg
bound
pop
das
push
pusha
leave
rcl
js
shll
xchg
idivb
addl
cmp
mov
jl
pusha
es
adc
pop
mov
jle
arpl
ret
add
mov
aam
sub
es
pop
icebp
sbbl
subl
addr16
out
int3
pop
and
add
sarl
lahf
inc
sar
inc
nop
mov
out
add
mov
jle
mov
push
mov
ds
lret
jmp
sub
and
imul
pop
xchg
je
xor
das
xchg
mov
pop
sub
ds
rolb
sbb
iret
pop
xchg
cmp
xor
insl
inc
jecxz
push
pop
cli
mov
xchg
clc
cmp
test
push
inc
push
and
das
adc
mov
jle
jmp
push
push
fstp
dec
mov
xchg
rol
jg
and
cld
sub
push
jnp
into
aam
fisubl
add
insb
mov
sbb
inc
adc
inc
cmp
mov
mov
jmp
adc
out
rorb
aad
sbb
push
jp
ret
push
out
test
std
sti
jno
or
pop
int3
pop
repz
cmp
notl
loope
jmp
pop
sbb
push
testb
in
aad
adc
loopne
and
xchg
ret
or
jge
mov
pop
nop
mov
into
lahf
xchg
ret
test
pop
repz
mov
cmp
nop
cmp
filds
insl
popf
inc
adc
push
mov
loop
int3
leave
repz
js
add
sar
imul
daa
jecxz
mov
dec
sarb
incl
cld
and
dec
icebp
cmc
pop
inc
faddl
test
mov
jg
push
mov
pop
inc
mov
jae
pop
jbe
jns
and
aad
shrl
jl
ret
xor
lcall
pusha
nop
add
test
xchg
enter
scas
mull
in
pushf
imul
pop
das
add
pop
lret
shll
out
fidivrs
lahf
jmp
jmp
cmc
in
stos
xchg
gs
daa
cltd
jae
mov
or
in
test
scas
cmpsb
in
cmc
sti
jnp
xorb
inc
out
hlt
inc
fistl
in
xor
enter
fisttpll
popa
dec
neg
pop
mov
sub
movsb
js
out
sbb
and
mov
pop
ja
and
bound
repnz
lahf
sub
pop
sbb
mov
push
pop
pop
jbe
clc
mov
lea
mov
test
ja
dec
cmp
cmpsl
jmp
add
inc
loopne
pop
divb
pop
or
inc
and
ljmp
jbe
out
daa
and
adc
gs
mov
inc
stos
icebp
sub
fbstp
inc
mov
and
ret
xchg
out
cmp
clc
mov
mov
leave
push
pop
xor
sub
mov
inc
xchg
jno
adc
into
test
nop
and
mov
adc
fldenv
adc
stc
arpl
cmp
push
pushf
movsl
jg
cmovb
dec
arpl
lea
push
xchg
inc
xlat
and
push
inc
test
pop
or
mov
jp
lods
pop
outsl
pop
shlb
movsb
mov
pop
outsb
dec
outsb
mov
cmp
stos
in
ret
sub
pop
in
imul
imul
loope
add
insb
mov
sbb
push
dec
xchg
hlt
jmp
push
lods
out
out
xlat
pop
in
flds
in
out
mov
pop
xchg
movsl
sbb
out
or
xchg
add
inc
lea
mov
mov
jmp
xchg
jmp
jmp
push
daa
es
jno
cwtl
adc
jno
cmp
fisubl
dec
xlat
pop
fidivrs
sub
or
gs
xor
in
inc
push
add
int
pop
ret
mov
gs
loopne
in
fldt
sbb
test
cmpsl
in
ret
add
ss
lods
cmp
push
mov
lcall
inc
fstp
jne
add
clc
push
popf
dec
fnstsw
fimuls
pop
ret
push
std
mov
dec
fs
jbe
mov
xor
mov
hlt
push
xor
xchg
fs
sbb
cmp
push
push
sub
fmull
xor
xor
sub
dec
sub
mov
les
lea
push
jbe
popa
inc
xor
jnp
mov
jl
pop
adc
add
stos
icebp
loopne
and
shlb
enter
sub
and
test
or
inc
xlat
and
out
fnstsw
ret
cmp
sbb
lret
scas
aas
push
outsb
icebp
mov
mov
je
add
push
mov
xor
filds
test
pop
jbe
sub
scas
orl
pusha
mov
push
mov
dec
adc
imul
leave
fidivrl
mov
jp
daa
xchg
mov
out
int3
stos
sbb
insb
mov
cmpsb
dec
sbb
rcl
xor
or
lods
and
dec
pop
push
popa
pop
cltd
arpl
adc
fistl
jns
icebp
pusha
mov
int3
jne,pn
xchg
jb
and
loop
in
and
mov
out
xor
mov
xchg
jg
adc
mov
int
xchg
les
jl
cltd
or
xor
test
push
mov
push
push
jb
stos
pop
mov
into
add
and
xor
pop
inc
push
mov
sub
cmc
dec
mov
gs
ja
jg
loopne
xchg
rclb
repz
and
outsl
sahf
xchg
cs
andl
scas
clc
mov
shrl
std
daa
cld
cwtl
cwtl
scas
ljmp
mov
js
push
lret
repnz
lcall
mov
test
mov
lods
mov
dec
inc
mov
lret
les
push
xor
push
lods
cmp
xchg
mov
shll
cltd
or
ja
cmp
inc
adc
push
push
test
cmp
xchg
mov
inc
popa
and
add
mov
bound
loop
subl
les
call
push
ss
jbe
in
inc
and
push
in
nop
lret
xor
cmc
sahf
jl
pop
lea
nop
std
jnp
out
out
in
mov
dec
sbb
mov
fcmove
outsl
addb
add
sahf
roll
pusha
dec
adc
or
insl
cmp
in
test
gs
mov
lret
jl
sti
cmpsl
adc
fadd
sahf
fsts
mov
psubq
sub
inc
ja
fistpl
ds
leave
pop
andl
and
xchg
sahf
dec
jecxz
in
repz
mov
jnp
xchg
adc
fistps
es
lahf
repnz
rclb
and
inc
sub
outsb
aam
sbb
lahf
adc
in
test
cmc
xchg
push
sarb
xchg
inc
cmpsb
mov
adc
push
in
enter
xor
xchg
les
faddl
aas
or
pop
lock
les
insl
mov
dec
jl
int
and
xchg
lods
mov
in
clc
pmaxub
in
cmpb
mov
aad
out
sub
pop
mov
add
incb
cld
cwtl
inc
icebp
fwait
mov
or
jg
jbe
test
js
out
lret
outsl
stc
mov
mov
jmp
inc
xor
arpl
std
adc
lods
jl
xor
pop
repz
in
sti
dec
in
adc
mov
pop
fucomip
xchg
xchg
inc
ret
in
and
test
cmp
adc
or
int
imul
pop
mov
lods
jbe
add
dec
mov
push
fstl
adc
pop
fwait
mov
mov
mov
or
mov
xchg
lods
xor
add
int
repz
mov
test
aaa
inc
shll
xchg
rcrl
sbb
pushl
or
lock
sbb
jnp
sbb
xor
aaa
xor
jge
adc
repz
fildl
clc
cmp
adc
mov
inc
xchg
cmp
mov
lods
movsb
pop
sbb
cmpsb
loop
sbb
bound
insl
cmc
fbstp
mov
std
test
subb
jnp
pop
leave
cmp
push
sub
jmp
mov
repz
inc
bound
cmpsl
xchg
push
adcb
iret
fwait
or
daa
arpl
dec
pop
mov
mov
pop
jnp
fiaddl
or
cltd
out
iret
daa
xor
mov
mov
cmpsl
xor
mov
add
mov
movsb
xchg
mov
insb
or
add
xchg
int3
in
jns
imul
in
pop
test
cmpsb
dec
push
lahf
call
imul
dec
or
sub
lock
scas
mov
mov
pusha
mov
sbb
dec
xchg
pop
dec
out
ss
inc
inc
mov
and
sbb
es
pop
loopne
outsl
ret
sbb
inc
xor
add
ficomps
pop
ljmp
mov
and
pop
movsb
mov
push
lods
sub
sbb
pop
xorl
jle
test
push
jmp
add
sbb
jmp
loopne
lahf
repz
out
enter
mov
inc
das
fstps
nop
push
shrl
pop
ret
out
cltd
cwtl
and
sub
dec
int3
andb
data16
dec
in
stos
imul
cmc
xor
imul
mov
ja
stos
orb
mov
jbe
push
push
aad
adc
in
mov
sti
leave
add
jg
mov
cmp
lahf
roll
inc
rcll
adc
xchg
inc
js
andb
iret
imul
ja
fisubrl
lock
sub
or
fmul
cld
xor
add
mov
rcrl
subl
push
inc
rclb
insb
add
loop
fcomps
dec
add
pop
daa
mov
out
push
mov
dec
inc
popa
and
push
jl
jnp
and
jae
jno
adc
lods
bound
pop
adc
into
insl
pop
dec
insl
sub
bound
xchg
orb
push
mov
cld
inc
sti
test
enter
movsl
out
out
scas
mov
jae
push
mov
int3
test
cmpsl
and
arpl
xor
aad
mov
and
jg
orb
push
jge
cld
jmp
jns
push
adc
mov
jge
outsb
loop
or
inc
insl
xor
cli
pop
daa
movsb
cs
pop
stos
push
push
gs
leave
les
pop
mov
sub
push
mov
lods
jmp
sbb
or
adcl
dec
dec
loope
ficoml
adc
add
or
pop
sbb
or
scas
push
loope
popf
add
test
xor
add
scas
into
lds
inc
mov
add
xor
mov
mov
push
sub
xchg
lret
push
jl
inc
lret
mov
fdivr
mov
xchg
cmp
add
lods
dec
ja
mov
pop
repnz
cmp
imul
stos
rcrb
xchg
mov
xor
sahf
sti
push
enter
out
sub
pop
sti
jl
stos
out
jb
into
xor
mov
out
insb
imul
adc
mov
pop
cli
ret
js
jo
test
jno
xor
adc
or
jg
or
mov
dec
jg
xor
fistpll
notb
mov
xchg
leave
lcall
pushf
nop
cmpsl
shl
je
inc
data16
stc
cli
add
daa
icebp
scas
jne
push
sub
add
jns
or
sahf
std
mov
mov
xor
dec
sti
push
pop
push
hlt
adc
std
pusha
or
pop
andl
in
inc
ret
repnz
ja
dec
mov
and
je
stos
stc
pop
out
jg
movsb
inc
jp
or
pusha
loope
rorb
sub
ss
mov
pushf
insb
outsl
test
or
out
sub
jl
scas
push
lret
sub
adc
aad
fimuls
in
test
movsb
mov
cmp
out
in
adc
inc
adcb
fldt
pop
jge
inc
call
iret
mov
and
and
and
mov
mov
jmp
pop
push
mov
sub
inc
xchg
inc
xchg
fmull
dec
mov
push
repz
inc
clc
and
fdivr
repnz
push
push
xor
mov
pop
xorb
lea
pusha
insb
push
mov
xchg
leave
es
lret
in
adc
mov
mov
sbb
mov
add
mov
aas
sarl
ja
sbbl
out
shrb
lahf
sub
mov
sub
outsb
and
cmc
pop
imulb
and
lcall
addr16
mov
nop
ss
lock
jge
out
or
mov
cli
mov
and
sub
and
lcall
jle
aaa
pop
rclb
sub
loope
out
sub
mov
xor
add
ret
xchg
dec
clc
jae
lret
daa
mov
insb
mov
aad
or
xor
popf
fstpl
and
add
loop
jbe
cmp
sbb
inc
jbe
in
out
inc
xchg
test
int3
das
xchg
je
cmpl
test
push
mov
dec
aam
sbb
sub
test
xchg
xlat
test
xchg
mov
fs
cld
cmpsb
pop
nopl
cmp
pop
add
push
sbb
xchg
pop
ret
push
pop
and
outsb
fcmovu
shrb
dec
das
stos
in
aad
testl
and
in
movsl
adc
push
popa
shr
sbb
mov
mov
and
push
in
iret
pop
mov
mov
shrl
mov
cs
pop
dec
rcl
mov
int3
mov
and
mov
arpl
mov
xchg
inc
fisttpl
add
pop
jmp
mov
data16
jl
xchg
push
mov
movsl
pop
push
jbe
pop
into
pop
xchg
adc
repnz
pop
xchg
jns
jp
popa
aam
in
sti
add
nop
fisubrl
or
or
cmp
adc
out
mov
pop
mov
int
dec
xor
sbb
jbe
pop
orl
daa
stos
mov
lock
jo
jne
iret
mov
and
pcmpeqw
das
arpl
rclb
xchg
mov
ja
mov
cwtl
dec
jge
mov
mov
les
leave
mov
movsb
lods
pop
push
popf
push
cmpsl
lds
jae
imul
out
jp
popf
xor
sub
pop
jnp
mov
jo
mov
idivl
and
mov
addr16
rcrb
shl
shll
enter
dec
jl
ss
mov
and
xlat
lcall
insl
mov
or
jmp
movsl
jl
js
mov
jecxz
fs
push
or
push
pusha
mov
pop
rcr
arpl
bound
fldcw
mov
dec
fadds
repz
cmpsl
rol
jae
adc
outsb
mov
xlat
aam
jb
movsb
lea
fistps
arpl
test
fimuls
xchg
jns
test
sub
mov
lds
mov
ljmp
lret
fisttpll
inc
jp
inc
fwait
stc
pop
xor
or
icebp
add
lret
adc
push
push
push
xor
out
call
mov
jo
push
xchg
jge
add
cmp
cld
negb
and
mov
adc
test
push
leave
in
cmp
mov
ss
in
lret
cltd
mov
sub
mov
andb
adc
insb
adc
mov
adc
mov
fcomps
mov
jno
enter
ljmp
popl
push
sbb
adc
mov
cmpl
icebp
ja
ja
mov
out
jbe
cmc
sbb
add
ljmp
mov
scas
jp
ja
sub
insl
nop
sub
jge
jge
int
mov
lds
add
mov
ds
jp
dec
out
mov
aaa
sub
clc
outsl
mov
mov
test
inc
rclb
lahf
xchg
movntq
out
pop
nop
pusha
mov
insb
and
inc
repz
xchg
adc
cli
push
xchg
nop
dec
pushf
test
xlat
dec
jno
push
sbb
xchg
sub
fwait
lods
sub
call
inc
sbb
inc
push
push
sbb
out
pop
pop
lret
ds
xchg
int
or
and
mov
das
aas
call
shll
imul
std
and
lret
push
dec
lahf
std
xlat
jae
lret
rorl
ds
and
pop
jae
test
push
mov
jno
cmp
dec
lret
pop
inc
or
mov
lcall
cmpsl
xor
jae
imul
or
jb
jmp
jmp
sbb
scas
out
xchg
push
dec
stos
inc
sbb
idivb
test
mov
mov
push
int3
sub
mov
rorb
mull
sub
imul
cwtl
mov
les
popf
xor
jo
arpl
mov
xchg
mov
outsb
test
mov
cmp
jle
add
popf
cli
add
seto
jb
push
iret
adc
add
iret
push
lds
dec
scas
inc
add
enter
daa
mov
mov
fdivr
rolb
repz
pop
mov
cld
enter
out
mov
inc
xor
pop
xchg
cmp
or
pop
sub
or
mov
std
push
pop
jecxz
inc
mov
int3
repnz
arpl
cmpb
xchg
cmpsl
scas
fldpi
xchg
mov
lcall
adc
adcb
jle
mov
xchg
test
pop
dec
pop
adc
inc
gs
andnps
jbe
fadds
popl
xchg
add
mov
les
push
dec
xor
pop
xor
arpl
adc
jo
xchg
mov
testb
lock
pop
cmp
pusha
dec
mov
inc
hlt
fidivrl
negl
xchg
iret
test
in
pop
xchg
dec
sub
iret
sbb
dec
add
aam
adc
sub
pop
mov
sub
add
jb,pt
pop
cli
jge
lea
scas
inc
push
add
cmpsl
jo
mov
stos
pop
jb
fistpll
fidivs
sbb
xor
sahf
mul
xor
and
fs
daa
or
push
sarl
lea
popf
punpckhwd
sub
pop
add
int3
xchg
xchg
xchg
outsb
in
jb
mov
push
and
shlb
cmp
in
adc
adc
push
mov
fidivl
push
repz
xor
mov
mov
push
pop
xchg
xchg
out
stos
out
add
mov
rorb
inc
mov
push
inc
in
adc
and
loop
icebp
cmpb
or
or
shlb
call
cmp
sub
mov
dec
inc
push
mov
out
mov
jbe
jl
leave
std
and
pop
mov
and
lcall
mov
inc
js
push
pop
enter
fildll
inc
sub
mov
adc
iret
inc
inc
sbb
mov
adc
cwtl
stos
scas
nop
test
int3
aas
fadds
push
or
fwait
push
rorl
push
adc
inc
shrb
les
test
cmc
ret
xorl
or
mov
inc
imul
movb
fstpl
mov
jae
fisubs
jmp
insb
mov
mov
iret
cmp
insb
pop
inc
xchg
insl
mov
xor
xchg
jl
sbb
ficompl
push
imul
mov
mov
daa
jmp
cmpsb
cmc
outsl
xchg
int3
test
mov
push
cmp
push
mov
push
bound
mov
and
mov
movsb
sub
enter
movsl
xchg
add
into
lcall
sarl
into
sti
xchg
rcll
xchg
and
or
test
and
popf
clc
pop
lds
or
cmp
outsl
loopne
xor
dec
xlat
sbb
inc
movsb
dec
stc
pop
insl
jbe
pusha
into
and
sub
pop
mov
scas
outsl
or
pop
and
sbb
and
dec
rcl
jmp
pop
xchg
sbb
jb
aaa
int3
inc
sbb
inc
sub
inc
fiadds
addr16
sub
add
addl
and
inc
ret
push
dec
mov
xchg
adc
stc
rolb
mov
mov
xor
xchg
xor
pusha
push
push
rcl
mov
popa
and
sarl
pop
add
pop
add
stc
xchg
push
xor
mov
push
push
adc
test
jecxz
or
test
int
and
int3
test
sub
adc
push
xchg
sub
jb
jae
test
imul
gs
or
test
je
in
fistps
pop
cli
ljmp
dec
push
sbb
mov
sbb
inc
andb
shrl
add
sub
xchg
stos
inc
lcall
out
push
insb
push
repz
popa
xor
cmc
movsl
xchg
or
push
addr16
fdivs
bound
push
iret
fstpl
jge
popf
mov
dec
pop
loope
adc
inc
and
mov
adc
adc
pop
pop
repnz
lods
lods
cmp
stos
inc
jns
popf
outsb
push
shld
and
das
cmp
stc
mov
pop
adc
stc
push
cmp
test
or
push
pop
inc
inc
cmp
dec
inc
inc
pushf
sub
in
sub
fldl
mov
inc
aas
push
mov
and
in
insb
incl
pop
push
add
icebp
adc
sbb
jae
ss
addr16
lahf
repnz
inc
jbe
scas
lods
push
pop
mov
xchg
loopne
inc
or
xchg
mov
jle
subb
xchg
in
mov
fcompl
test
dec
mov
xor
xorl
xor
xor
repz
jge
lods
mov
push
aaa
or
loopne
mov
xchg
movsb
aaa
inc
jb
sub
ret
jl
jp
adc
xlat
xchg
movsl
mov
jns
les
lds
leave
insl
in
add
mov
shll
or
outsb
test
or
adc
in
xor
adc
leave
xlat
push
fmul
loope
out
add
inc
dec
push
pushf
push
jb
sub
mov
xchg
xor
cmpsb
je
cld
icebp
inc
lahf
pop
mov
and
jns
mov
leave
inc
nop
or
or
mov
repz
jbe
stos
out
into
mov
push
stc
adc
and
int3
testb
das
mov
test
icebp
pop
jecxz
mov
fstl
cmpl
fcmove
mov
mov
sar
ret
push
fabs
adc
imul
adcl
cmp
fdivr
cli
push
fists
std
rorl
out
rcll
outsb
decb
insb
push
insl
xor
dec
ud1
fdivl
aad
into
dec
imul
mov
mov
insl
scas
dec
add
push
mov
mov
jnp
dec
cmpl
xor
popf
movsl
add
ret
out
mov
mov
fimuls
push
cmp
jae
out
mov
pop
nop
dec
inc
mov
insb
push
and
leave
fsubrs
mov
jmp
in
mov
sahf
outsb
xor
mov
mov
inc
or
aas
mov
inc
outsb
insl
repz
dec
scas
push
pop
or
or
inc
pop
mov
fstl
clc
or
push
orl
xchg
mov
pop
cmp
je
inc
adc
fwait
mov
mov
call
scas
ret
and
jp
pop
ret
stos
mov
jb
inc
stos
lret
and
aas
mul
adc
jmp
leave
pop
xchg
sahf
inc
fnstsw
fadd
xor
je
dec
subl
lret
mov
mov
das
cwtl
mov
cmp
xchg
mov
sbb
cmc
lcall
sub
movsl
cmp
adc
stc
loopne
cli
xchg
test
lds
push
pop
xor
dec
ret
add
mov
mov
sbb
ret
or
pop
xchg
mov
mov
pusha
sub
cmpsl
mov
movsb
lcall
mov
scas
outsb
or
mov
inc
sbb
sub
mov
or
xchg
insb
mov
dec
adc
arpl
imul
cwtl
cwtl
lret
int3
push
sbb
xchg
repz
test
and
in
sub
or
sbb
lahf
or
xchg
sbb
and
les
ret
cmp
xchg
das
sub
dec
jg
dec
loopne
and
fidivs
out
leave
popa
mov
icebp
in
and
ficompl
sub
and
xchg
dec
push
mov
imul
in
xchg
xchg
adc
lcall
jo
adc
pusha
and
loope
xor
pop
imul
xchg
cmpsl
adc
push
inc
std
sarl
xchg
and
mov
aad
rcrb
shll
xor
adc
aas
jle
in
in
movsb
mov
cmp
pop
mov
testb
mov
lods
outsb
es
xchg
push
out
imul
outsb
add
icebp
mov
mov
mov
xchg
stos
mov
inc
or
xor
dec
aad
dec
jnp
inc
aad
les
insl
stos
pop
mov
push
xlat
or
sbb
jle
jmp
negb
lock
push
loopne
pop
add
xchg
mov
xchg
adc
pusha
addl
fistl
xor
fnsave
data16
cmpsb
pop
in
xor
or
outsl
push
fs
cmp
jecxz
fwait
add
ficompl
test
mov
subb
mov
push
test
sahf
mov
inc
mov
gs
inc
sbb
dec
push
mov
mov
adc
int3
pop
jb
and
push
adc
add
rolb
pop
idivb
outsb
mov
or
add
cwtl
fidivrl
stos
xchg
jle
sbb
or
int
popa
mov
negl
pusha
pop
jb
in
jo
mov
shrd
test
pusha
int3
lret
insl
and
jecxz
mov
jns
ds
outsb
or
pop
xor
dec
movsl
inc
enter
insb
lods
dec
inc
dec
push
cmp
mov
cmp
mov
je
xchg
in
sub
lret
rcr
sbb
add
lret
xor
fldl2t
out
cltd
jae
stos
lahf
adc
movsl
jl
hlt
pop
xor
fimuls
sti
loope
cmc
and
sbb
inc
or
jns
push
enter
or
aaa
popa
inc
and
push
xlat
out
adcb
cli
mov
std
xor
fwait
orb
dec
jne
pop
pushf
jns
mov
push
lods
lret
jne
push
sti
xor
jno
cwtl
pop
cmp
sarl
into
ljmp
pop
mov
mov
ljmp
push
cmpsl
mov
not
add
in
scas
mov
leave
movsl
sub
push
push
loopne
inc
inc
arpl
xchg
imul
inc
outsb
das
mov
leave
or
dec
testb
dec
push
sub
push
or
and
enter
cld
outsl
push
xchg
sub
xchg
cmp
push
fwait
add
out
sbb
pop
nop
mov
mulb
inc
mov
mov
stc
imul
fidivrl
xchg
pop
cmc
mov
cmpsb
sub
lods
pop
and
push
ss
dec
add
pop
xchg
sbb
lods
push
sub
or
push
lahf
fcomp
jb
inc
out
mov
aaa
popa
fwait
cmp
test
xchg
insb
nop
sti
std
popf
sbb
aad
mov
repz
in
adc
push
fucomip
fdivp
sarl
mov
repz
cld
gs
insl
insb
enter
inc
or
outsb
jb
popa
nop
ja
sahf
popa
je
push
fwait
popa
dec
inc
adc
aad
xchg
ficomps
pop
clc
adc
decl
push
push
jp
je
ficompl
push
pop
cmp
ret
xor
inc
insb
mov
call
sub
mov
out
mov
inc
popa
sbb
fmuls
dec
sbb
adc
jp
and
jl
jo
insb
insl
orb
push
sahf
cmc
fwait
pop
ret
jnp
cmp
nop
aam
xlat
adc
cld
inc
mov
adc
pop
xlat
lea
or
stos
fwait
in
aaa
lds
jb
inc
and
cmp
jl
icebp
dec
mov
dec
jecxz
cmp
push
inc
push
mov
test
jmp
pop
push
xchg
daa
mov
rolb
adcl
xor
and
pusha
mov
cmpsl
dec
test
vpshufhw
or
mov
movsl
inc
jle
mov
push
stos
ss
mov
fisttpl
movsl
insl
test
sbb
cli
sbb
lret
shll
rorl
hlt
es
mov
sub
repz
rcll
fists
mov
add
jl
sub
add
cmc
jle
aam
xlat
sbb
fwait
jnp
fbstp
dec
rcl
mov
jae
outsl
sbbl
stos
or
xchg
es
gs
jmp
data16
push
pusha
lahf
hlt
adc
adc
je
mov
cmp
or
cmp
mov
test
shrb
sub
xchg
or
stos
and
push
mov
imulb
lods
pop
adc
jmp
mov
dec
cmc
mov
mov
cmp
pusha
dec
sub
or
sub
dec
repz
pop
xor
popa
mulb
loope
dec
lret
dec
sbb
pop
js
jg
icebp
insl
inc
in
xor
popf
or
dec
lret
pop
pmulhuw
aas
xlat
popa
inc
lock
adc
cmp
jb
leave
dec
mov
test
mov
dec
addl
pushf
fbld
add
pop
test
dec
mov
rcll
popa
das
xchg
call
loop
mov
cmpsl
push
jg
fwait
pop
and
mov
fs
icebp
fwait
sti
adc
repnz
cmp
xor
pop
mov
add
mov
pop
pop
inc
int3
inc
sbb
idivl
inc
popa
outsb
pop
push
test
je
fwait
ret
push
js
jo
bound
icebp
ror
mov
cmp
scas
pop
add
jbe
cmp
out
aaa
sub
clc
cmc
cmp
xchg
xchg
adcb
pop
mov
push
in
arpl
inc
cmp
cmp
mov
mov
push
in
sbb
mov
mov
loop
and
das
aam
xor
mov
mov
cmp
in
test
mov
pop
mov
stos
fdivrs
rcrl
cmp
jne
or
fstl
push
and
xor
insb
out
jmp
imul
mov
int
leave
fstpl
mov
in
and
xchg
dec
mov
cmp
sub
jle
popa
push
ret
sahf
mov
rcl
fsubrl
out
ret
nop
flds
add
ja
test
mov
jge
movsl
fldt
jo
or
and
cmp
cmpl
cmc
xchg
adc
out
push
adc
dec
es
mov
add
add
mov
rcll
jns
sub
cmp
pop
xchg
adc
fwait
rolb
test
sbbl
adc
cmp
notb
aas
mov
jbe
nop
mov
inc
mov
xchg
adc
cmp
pusha
xchg
jo
mov
sub
cmp
push
push
cmp
push
out
mov
shl
stos
std
xor
lret
ret
mov
cwtl
cmp
xchg
xlat
cli
push
js
push
xchg
xor
shll
mov
add
xor
cmpsl
dec
jmp
dec
jae
mov
mov
add
sti
mov
or
arpl
hlt
aaa
jle
or
xor
hlt
mov
push
xchg
push
pop
cli
add
sbb
mov
nop
xchg
adc
cwtl
pop
mov
jb
inc
insl
sbb
adc
hlt
ljmp
mov
hlt
jns
ds
divb
clc
rorl
imul
jl
mov
xor
jle
mov
fsub
dec
insb
xchg
inc
cli
fsubrp
leave
mov
mov
leave
mov
shrl
mov
xchg
inc
gs
out
hlt
xor
xor
pop
dec
add
int3
in
mov
add
cltd
fadds
inc
mov
mov
pusha
lret
lock
pop
fsubl
mov
int3
punpckhwd
test
xchg
aad
cmp
lock
je
xor
adc
cmpsl
jle
cli
xchg
or
iret
fistps
adc
jb
fistpl
imull
por
xchg
data16
or
mov
out
idivl
test
mov
cmp
cmp
nop
push
or
mov
sub
pop
arpl
add
sbb
push
orb
nop
fdivl
or
sub
pop
and
cvtps2pi
adc
pop
xor
orps
and
int
pop
adc
adc
or
lock
cmp
push
loopw
popa
fisubs
jns
rolb
push
or
enter
fcomps
pop
sbb
push
lea
mov
inc
jmp
loopne
sbb
or
stos
jne
jnp
popf
pop
leave
iret
cld
jmp
fcmovnu
pop
addr16
ja
pop
out
in
xchg
into
and
pop
xor
inc
sub
and
pop
inc
aas
nop
mov
and
or
adc
mov
das
iret
sub
pusha
les
push
rcl
mov
lret
add
mov
cmp
cwtl
adc
sub
nop
ja
pop
xlat
fisubrl
imul
dec
push
repnz
pop
nop
mov
outsl
shll
js
pop
aas
cld
xor
movsl
push
movsb
cld
mov
cli
stc
adc
and
cld
jae
inc
push
mov
cmp
ljmp
pop
dec
push
stos
loopne
mov
jnp
dec
xor
loopne
pop
xchg
sbb
xor
mov
jo
adc
pop
mov
mov
pop
add
sti
bound
xchg
loopne
mov
fmuls
loopne
jo
cmpsb
lahf
sahf
ja
xor
insl
mov
loopne
aas
mov
cli
aaa
ret
add
xor
xchg
inc
mov
jecxz
movsl
mov
fnstcw
jge
xor
push
repz
xchg
and
aam
xchg
add
dec
push
inc
inc
mov
sahf
call
aam
iret
and
scas
jge
aam
sbb
fsubs
inc
xlat
lret
in
sarl
ret
lret
dec
iret
push
and
orb
dec
mov
mov
cltd
addl
in
lcall
pop
or
out
cli
lds
push
adc
mov
out
shrl
dec
jae
adc
adcl
outsl
fnstsw
mov
jle
fdiv
and
push
sub
in
wrmsr
sub
dec
cmp
call
popa
xchg
sti
add
cmp
sar
jle
nop
fsubr
enter
lods
dec
and
and
sbb
fdivrp
icebp
pop
push
lret
out
in
jnp
aas
xorb
mov
lahf
scas
pop
pop
sub
test
stc
cmp
jb
push
or
mov
jb
repnz
inc
add
int
jmp
in
jb
xchg
mov
fstpt
out
cmpsl
aaa
aaa
lret
imul
xor
in
cld
xchg
dec
gs
imul
inc
stc
js
cli
jno
inc
cmp
mov
push
push
sub
call
data16
cmpsl
inc
es
xchg
lcall
pop
mov
jns
lcall
cwtl
adcb
sbb
imulb
rorb
addr16
shrb
pusha
dec
orb
cmp
repz
insl
xchg
ret
cmpsb
cli
xchg
mov
jge
test
ficoml
ret
jmp
scas
je
fcompl
dec
es
xor
scas
cli
icebp
test
and
fs
or
xchg
push
out
ret
dec
rcrb
xchg
xchg
push
clc
or
push
cmp
lcall
int3
dec
movsl
int
popl
jbe
pop
lock
mov
xchg
rorl
cmp
cmp
mov
iret
int3
scas
int
or
fst
jb
popa
inc
mov
rorl
movsl
jg
repz
stos
cmp
xchg
roll
int
sbb
mov
add
ljmp
adc
scas
dec
and
mov
es
pop
test
les
and
and
int3
out
lods
xor
dec
jno
aam
lea
and
xchg
filds
fs
movsl
inc
mov
adc
das
mov
mov
add
cmpsb
and
dec
push
add
dec
adc
jl
mov
jne
adc
test
sahf
fistps
xchg
stos
mov
push
stos
icebp
mov
scas
dec
cmp
inc
ss
push
jle
lcall
lret
add
lds
sbb
pusha
inc
arpl
pop
lds
sbb
call
loope
pop
ljmp
cmp
cli
cmovl
int3
sbb
add
dec
add
popa
ficomps
mov
loopne
jbe
divl
or
xchg
mov
mov
ja
add
pop
jl
pop
and
pop
iret
jecxz
insb
aas
adc
movsl
scas
jb
xlat
lahf
fiaddl
shll
jnp
xor
insl
inc
adc
sbbb
int3
or
mov
lods
push
adc
mov
mov
pop
and
or
or
mov
push
pop
repnz
roll
adcb
inc
adc
dec
rcl
out
ljmp
lea
test
mov
lds
call
jg
inc
jae
jg
into
andb
jle
jno
mov
out
mov
push
cmp
mov
addr16
leave
mov
popf
jbe
iret
sbb
and
pop
pop
out
push
jns
cli
pusha
bnd
inc
xor
add
mov
mov
insl
inc
call
mov
mov
add
aad
mov
mov
inc
lods
daa
jb
fs
cmovae
push
mov
mov
fdiv
inc
bound
les
mov
and
icebp
push
or
jecxz
ret
jae
adc
and
inc
mov
pop
inc
mov
add
out
into
rclb
dec
pop
aam
pop
jle
inc
pop
mov
lods
pop
popa
imul
and
lea
dec
mov
xlat
xchg
xor
sbb
inc
adc
pop
aas
sbb
xchg
addr16
pop
stc
loop
ret
imul
xor
mov
cmpsb
mov
cmc
jge
jp
xchg
aad
and
iret
into
lret
push
sbb
pop
adc
pop
dec
jne
call
les
xor
sub
rolb
cmp
push
int3
xchg
es
out
cmp
aaa
in
jne
shrb
je
dec
push
popa
call
mov
mov
ds
leave
sub
arpl
mov
mov
in
jge
inc
sbb
xor
xor
or
mov
dec
cmp
and
fnstsw
jp
push
adc
jp
call
inc
notl
jle
and
lcall
lds
mov
cmp
in
mov
xor
test
push
xor
mov
nop
jo
mov
or
mov
add
icebp
mov
cmp
mov
mov
pop
lods
outsb
jp
pop
psubsb
dec
mov
ficomps
or
or
and
fadds
test
out
add
jae
pop
negl
js
add
jne
mov
cmc
out
cmc
add
repz
int
and
subb
decl
pop
mov
outsl
jg
dec
mov
in
stc
jmp
xchg
sti
xchg
in
jecxz
push
andl
mov
enter
cmp
pushf
jbe
add
sahf
adc
pop
and
mull
adc
int3
lock
dec
fwait
add
flds
imul
icebp
mov
rorl
addr16
stc
inc
mov
xchg
nop
add
sbb
dec
imul
movsb
jp
and
xchg
jae
int
fidivrs
ja
jl
mov
push
sti
std
or
sbb
xchg
fstpt
cmp
sub
push
mov
push
adc
mov
rcrb
add
push
sub
dec
in
ss
pop
daa
push
xchg
faddl
xchg
or
pushf
les
je
mov
push
jge
jge
pop
cmpsl
jae
js
bound
xchg
mov
test
in
test
adc
mov
mov
lods
repnz
outsb
mov
into
rolb
or
pop
fdivl
xchg
sbb
dec
inc
arpl
gs
pop
mov
aam
pop
sub
push
popf
mov
xor
nop
xor
cmp
add
mov
jle
stc
sbb
mov
popf
sub
ljmp
add
hlt
xor
jg
dec
mov
adc
xchg
and
xchg
pop
sbb
jecxz
adc
xor
rolb
jns
inc
mov
xchg
dec
lock
gs
fcoml
push
or
mov
mov
sbb
ret
imul
inc
enter
sbb
ja
lods
daa
mov
in
jbe
pusha
xlat
loope
out
call
ja
iret
outsl
xor
rcrl
fidivs
outsl
lods
pop
and
add
out
xor
or
sahf
insb
adc
inc
mov
incb
xor
shll
iret
sbb
and
inc
add
dec
inc
fiadds
dec
pop
aaa
fcompl
xorb
jbe
push
sbb
loope
inc
ret
adc
test
sti
in
sbbl
or
jns
dec
push
pushf
mov
pop
in
jb
ret
pop
mov
std
js
enter
sub
mov
pop
add
inc
das
inc
test
lods
xlat
xor
pop
mov
mov
jle
aaa
loope
stos
sub
push
rcll
imul
adc
inc
xor
inc
rcll
ljmp
data16
jmp
aas
mov
xchg
inc
mov
pop
and
adc
or
xor
sarb
mov
adcl
sahf
push
add
or
daa
mov
mov
ret
jmp
stos
cmpsl
pop
and
adc
jne
jg
and
fsubrs
aad
xor
sub
inc
sbb
addr16
cmp
xor
inc
or
loopne
mov
sub
js
stos
pop
mov
add
movb
fdivr
andb
addb
addr16
pop
lret
loop
adc
nop
jmp
data16
inc
pop
jb
mov
fadds
jecxz
and
push
cwtl
hlt
jne
dec
leave
dec
jecxz
sub
add
and
adc
test
xor
aas
pop
sub
popa
and
jg
xchg
sbb
cmp
insl
fnstcw
into
icebp
rol
mov
scas
decb
cmpsl
push
mov
mov
xor
leave
fistl
and
pop
mov
dec
add
sub
mov
mov
fidivrl
enter
ret
push
cmc
popf
das
aam
imul
jns
jae
popa
aam
mov
add
xchg
and
push
sub
ss
insb
mov
data16
stos
mov
adc
sub
ret
outsl
shr
rcll
les
je,pt
add
jmp
xchg
out
adc
push
jp
add
adc
pop
pop
daa
clc
popa
pop
or
outsl
lea
or
add
pusha
stos
fwait
inc
out
loopne
arpl
in
add
jecxz
adc
jo
push
loop
outsb
cmp
or
outsb
movsl
xchg
lock
stc
adc
andb
faddl
and
sbb
rcr
pop
call
out
adcl
mov
jb
popf
push
cmp
in
jg
into
add
sub
pop
add
adcb
xchg
out
xorb
jle
dec
inc
sarb
loope
inc
xor
or
jle
ss
adc
popa
mov
add
and
push
nop
jecxz
and
add
mov
cmp
aam
push
pop
xor
pop
stc
lahf
jo
leave
sub
mov
out
sbbb
push
add
iret
inc
lock
dec
rolb
sub
pop
mov
lret
daa
rolb
pop
fidivs
pop
es
or
inc
mov
test
fsts
push
ja
mov
xchg
popf
sub
push
inc
add
mov
xor
pusha
fistps
cld
cmp
jns
adc
jnp
jo
jae
jp
or
jge
shrb
or
cmp
test
dec
jmp
mov
dec
add
cmp
outsl
test
mov
shr
lods
mov
inc
cmp
dec
mov
gs
xchg
fisubrs
and
mov
in
mov
insb
xor
add
fs
les
cmp
in
outsb
sub
and
scas
arpl
xor
jns
jns
and
xchg
xchg
jp
fists
mov
dec
hlt
pop
frstor
push
inc
shrb
pop
mov
lret
out
cmc
enter
in
aas
hlt
lahf
pop
pop
pop
inc
out
int
fidivrs
jg
adc
loopne
fnstsw
repnz
and
xchg
xor
push
push
or
lret
movl
mov
shlb
adc
lahf
out
cmpl
inc
rcrb
rorl
push
dec
fwait
scas
mov
call
aad
and
push
je
adc
adc
arpl
movl
fidivrl
out
test
jmp
sbb
push
loope
shr
addr16
cmp
inc
and
ret
add
inc
dec
and
xor
add
jp
xor
cmc
imul
dec
lea
push
pop
stos
in
cmp
ds
cmp
xor
in
imul
cmp
clc
push
mov
xor
cmp
dec
lock
or
mov
std
lods
popa
shl
sub
push
stos
cwtl
adc
add
movsb
loopne
ljmp
ret
sub
lds
inc
out
ss
cmpsl
or
sbb
aaa
leave
mov
cmp
sbb
pop
pop
add
or
sti
xor
jg
mov
ljmp
outsl
notb
lods
dec
arpl
cmp
inc
xchg
pop
bound
inc
pop
cmp
rorb
into
cmp
and
sub
xchg
pop
pop
jnp
and
xchg
fcoml
test
inc
inc
push
ret
or
in
aad
mov
mov
ret
mov
inc
cmc
call
out
ds
ror
jbe
ja
mov
imul
fsubrl
and
call
in
mov
add
jecxz
dec
sub
push
jae
or
push
and
push
loopne
push
daa
cmc
dec
shlb
jae
inc
cld
pop
aam
cmpsl
jp
sub
jo
lock
dec
and
inc
mov
stos
gs
push
mov
and
ror
cmp
and
sub
and
mov
xor
daa
and
push
xor
add
stos
jne
incl
dec
pop
popa
xchg
push
sub
imul
adc
cmc
xchg
hlt
push
jae
push
cmp
cmp
daa
jecxz
mov
hlt
into
or
ret
int3
xlat
xor
jmp
add
add
cmp
hlt
mov
jns
sub
fbld
inc
pop
dec
push
dec
lods
sub
push
gs
cmp
xchg
or
push
imul
mov
cmc
push
mov
jmp
leave
pop
jne
xor
lcall
lcall
imul
data16
je
rorb
mov
pop
pop
aaa
ja
push
and
repnz
in
nop
aaa
mov
jg
repnz
xchg
pop
push
and
cmp
pushf
inc
mov
dec
jge
push
inc
mov
xchg
sbb
repz
xor
fdivl
sub
sub
lahf
loopne
call
daa
sbb
add
mov
mov
fidivrl
xor
lods
orb
or
push
lahf
aam
dec
ret
jns
pop
test
cmc
movsl
aad
pop
inc
sbb
lcall
lea
shlb
pop
in
cwtl
incb
outsl
outsl
mov
push
lods
enter
cld
xchg
scas
jl
fdivrs
or
mov
stos
xchg
xor
sub
xchg
pusha
pusha
jnp
mov
push
call
mov
scas
shlb
test
mov
sub
inc
or
fucomp
pop
mov
xchg
mov
jmp
negl
loop
lods
sub
sbb
aaa
dec
pusha
push
adc
stos
jge
xchg
in
inc
leave
push
cmp
arpl
xlat
dec
cmpb
sahf
cmp
int3
loopne
inc
fildl
push
fisubl
inc
xor
mov
xor
rorl
scas
lret
mov
jecxz
repnz
out
sahf
out
shlb
push
cltd
xorl
adc
imul
pop
pop
jg
lea
dec
mov
ficomps
pop
in
push
xor
add
cmp
cmc
call
cmpb
add
xor
jns
xchg
aaa
or
bnd
addl
test
out
pop
dec
outsl
mov
std
loop
xor
cwtl
daa
out
sub
test
push
test
repnz
mov
sub
mov
aam
jmp
jg
sahf
mov
or
cmc
hlt
cld
aas
and
mov
mov
mov
pop
push
lds
in
mov
cmp
mov
jmp
or
stos
cmpsb
int
dec
lea
xchg
enter
lret
cmp
ljmp
cmp
xlat
jp
fstps
into
jb
mov
adc
cld
mov
aad
vpsubsb
add
adc
scas
jne
inc
lea
addr16
dec
shll
xchg
repz
leave
pop
xchg
rcl
add
or
xchg
dec
push
les
jg
sbb
adc
scas
jle
loopne
mov
das
xor
sbbl
and
imul
icebp
int3
das
push
mov
rcrl
outsb
add
outsb
mov
mov
push
mov
arpl
mov
rcl
les
fldenv
in
test
loopne
loopne
adc
or
mov
decl
cli
mov
clc
sar
int3
pushf
pop
pop
inc
mov
xor
pushf
andb
jnp,pt
cmc
and
sbb
adc
mov
cmp
rcrb
push
xchg
mov
ja
inc
jne
inc
test
dec
inc
jnp
jns
dec
scas
mov
add
int3
inc
add
mov
lret
jecxz
pop
add
xchg
cmp
negl
xor
xchg
pushf
pop
dec
jo
jno
pushf
dec
jo
mov
xchg
cmp
and
data16
cmpsb
lds
icebp
add
inc
jg
in
cltd
and
push
xchg
pusha
movsb
fisubrl
lock
leave
data16
aas
push
xlat
inc
lea
mov
jle
roll
jbe
pop
mov
mov
jno
mov
test
mov
and
sbb
int3
inc
or
pop
mov
jo
add
mov
adc
outsb
out
ret
lods
and
nop
jb
mov
jecxz
add
sbb
sbb
pusha
mov
aas
stos
movsl
sub
in
pop
inc
lods
rclb
jge
push
mov
into
and
sar
adc
add
cmpsl
jne
inc
stos
xor
add
pop
push
mov
lock
sbb
lock
sbb
popa
push
fldcw
adc
jle
shld
lods
scas
mov
jns
xor
outsb
mov
and
mov
mov
ds
or
fsub
dec
and
jbe
mov
nop
es
sub
repnz
leave
in
leave
fdivrp
in
aad
sbb
inc
loop
mov
test
push
jnp
lock
aas
dec
xchg
xchg
bound
push
jmp
lahf
push
hlt
lret
arpl
cmp
outsl
sti
and
imul
mov
insb
lea
mov
mov
or
andl
data16
jns
ja
fldenv
adc
mov
mov
lcall
cmp
mov
mov
or
shrb
xchg
mov
adc
int3
dec
call
rcrb
dec
inc
daa
icebp
xor
faddl
mov
popa
lret
les
xlat
push
stc
and
xchg
xorl
es
jle
aam
gs
in
inc
jge
pop
dec
xchg
rcrb
leave
dec
pop
test
mov
cwtl
insb
add
push
xchg
cs
sbb
es
add
sub
inc
sbb
pop
rolb
sarb
inc
push
je
pop
rcll
mov
outsb
adc
dec
inc
add
shr
xchg
jae
icebp
pushf
push
das
div
cmp
sbb
mov
add
inc
in
bound
shrl
mov
sbb
into
cltd
add
mov
and
push
imul
stos
sahf
push
std
push
push
shrl
imul
aaa
cmc
or
cwtl
loop
mov
dec
add
or
or
sub
or
in
movb
jo
dec
das
sbb
cmc
or
cmp
jmp
dec
icebp
pop
gs
test
add
inc
hlt
mov
dec
dec
xlat
dec
mull
mul
push
insl
inc
clc
rol
in
or
mov
push
loopne
inc
rcll
andl
push
data16
scas
cmpsb
mov
test
or
mov
pop
loopne
ljmp
mov
sti
jno
lock
test
mov
sub
test
stos
sbb
and
mov
push
sbb
inc
mov
aaa
add
cmp
inc
sbb
test
outsl
fsubr
ljmp
addl
daa
ss
pop
dec
loop
popf
mov
jle
cmpsb
sub
or
xchg
in
dec
sub
sbb
xchg
cmpl
pop
std
xchg
jbe
mov
aas
int
jl,pt
xchg
das
cmp
out
xor
mov
pop
fsubrs
mov
dec
sahf
xchg
aaa
scas
out
jl
xchg
std
cmc
adc
jne
insl
add
push
lret
sub
cwtl
pop
aad
mov
push
imul
xchg
inc
nop
popf
fucomi
sarb
inc
lods
pop
lret
dec
jecxz
mov
cmp
stc
stc
int3
ds
mov
das
dec
mov
sahf
xor
nop
push
call
cli
or
popf
inc
or
pusha
dec
xor
xor
cld
cmp
push
call
xchg
lods
inc
mov
out
push
fisttpl
push
hlt
out
scas
das
aas
mov
js
in
mov
xor
adcb
adc
mov
flds
into
vxorps
popf
push
push
jbe
mov
pushf
cmp
enter
mov
test
bound
xchg
xchg
subb
cld
or
sub
jb
push
leave
movsl
outsl
jmp
mov
dec
pop
mov
ds
loope
es
inc
inc
movsl
push
pop
mov
add
int
xchg
mov
pop
jmp
shll
adc
jge
push
xor
test
dec
repz
std
jns
and
std
xor
scas
inc
icebp
cltd
in
pop
int
push
inc
shufps
and
ss
lock
dec
in
adc
testb
jle
ret
adc
fdivrs
rorb
push
mov
shll
mov
pop
push
loopne
xor
pop
popf
scas
sbb
das
fisubs
sti
lods
mov
or
mov
lcall
xor
xor
push
push
mov
xchg
sbb
inc
aas
or
lock
imull
mov
lock
imul
and
ljmp
push
sbb
popf
inc
or
popf
rolb
mov
inc
or
imul
outsb
outsl
pop
imul
adcl
mov
out
mov
ja
stos
pop
inc
clc
in
sub
push
fsubr
mov
add
jg
ds
adc
movsl
jecxz
or
cmp
dec
mov
ret
or
sbb
add
rcrl
mov
out
jg
mov
and
bound
add
shlb
mov
stos
pop
orb
sub
and
pop
lret
inc
fisubl
fcmovnu
fistpll
cwtl
pop
pop
loop
mov
lahf
or
lret
fbld
mov
imul
mov
dec
mov
cmc
add
pop
mov
adc
cmp
loopne
sbb
push
inc
gs
in
mov
cmc
mov
inc
in
dec
lcall
adc
xor
out
notl
stos
testl
sub
jnp
mov
addr16
lcall
stc
repnz
pop
add
lahf
fiaddl
sub
push
sub
sahf
lret
push
cld
cmc
mov
sbbl
cmpl
scas
jbe
decb
adc
add
popf
ret
jle
dec
push
cmp
mov
outsl
push
jns
les
or
fists
or
fsub
mov
add
ljmp
or
add
lcall
jle
fnstenv
jns
mov
mov
xchg
rorb
dec
push
mov
dec
aas
cmpsb
hlt
dec
push
cmp
popa
stos
rcll
sbb
test
incb
cmp
mov
and
scas
jg
fadd
unpckhps
aam
jbe
mov
out
loopne
js
les
lahf
dec
clc
jmp
movsl
shl
fwait
xor
int3
cs
outsb
and
outsb
enter
xchg
fadds
or
and
clc
and
push
aas
ds
or
cmp
sti
xor
or
add
cmp
cmp
mov
sub
jno
jecxz
popf
jne
ror
mov
and
pop
lock
and
jnp
testl
in
arpl
jg
sub
fldcw
xlat
jmp
mov
jno
xor
jle
outsb
mov
dec
jns
in
mov
mov
xchg
repz
mov
es
cmpsb
fsubl
xchg
sbb
push
insb
add
daa
sub
hlt
sbb
push
jmp
pop
fildl
icebp
add
test
js
ss
ret
pop
push
adc
out
cmpsb
xor
sub
mov
pusha
daa
stos
mov
mov
out
imul
sbb
aaa
and
mov
push
rolb
ds
sar
mov
gs
cmp
mov
xor
in
add
sub
push
add
mov
inc
adc
fsts
adc
mov
xor
les
dec
mov
cmp
pop
sub
mov
and
cltd
dec
test
insl
mov
adc
adc
mov
inc
lea
pop
loope
push
mov
push
push
aas
outsb
add
ret
pop
mov
inc
mov
pop
fildl
dec
js
int
divb
pop
and
pushf
mov
into
jmp
and
inc
lret
jns
push
pop
stc
pop
popa
test
gs
mov
vmread
sti
mov
push
inc
orb
cltd
in
dec
not
ret
out
push
rolb
jnp
fdivr
sti
push
dec
mov
test
sahf
test
jg
popf
mov
pop
mov
test
cmpsl
sub
xor
enter
add
or
dec
dec
insl
mov
push
xchg
mov
ja
mov
enter
dec
lret
gs
mov
mov
inc
lahf
negl
fisttpl
arpl
jnp
pavgw
add
lods
xchg
call
push
cmpsl
cld
out
jle
jg
pop
cmp
icebp
shlb
xor
out
addr16
push
xor
inc
and
jbe
xor
xchg
pop
popf
cmp
repnz
fnstsw
out
movsb
ud2
pop
xchg
jge
adc
sbb
and
das
cld
dec
scas
pushf
in
pop
aas
popa
loopne
xor
fcomps
mov
mov
xchg
push
repnz
cmp
add
push
mov
mov
adc
jmp
mov
leave
xor
push
dec
push
je
sub
out
add
aas
pop
cmc
repz
fwait
loopne
jp
ficompl
stos
adc
arpl
fnstenv
fnsave
mov
xor
pop
sub
lods
testb
addr16
mov
jne
lods
inc
and
add
inc
stc
outsl
idivl
pop
iret
mov
cmc
jg
mov
jp
clc
dec
pop
cmpsb
sbb
cmp
div
xchg
and
jmp
fadd
rorl
loop
rcrl
out
inc
mov
mov
out
xchg
idivb
xchg
xchg
sahf
incl
dec
je
cmp
cmp
adc
add
dec
mov
push
rclb
fucompp
imul
jge
sub
jmp
cmp
repnz
mov
cmp
mov
enter
inc
push
adc
aaa
inc
aam
shrl
lods
punpckhwd
rcl
add
in
das
inc
imul
cmpsb
adc
pop
scas
or
mov
jns
add
sub
jbe
mov
jecxz
repz
pop
mov
xor
or
xor
imul
cmpsl
mov
lods
mov
sbb
push
pop
xor
adc
out
jnp
cmp
imul
and
aad
pushf
sti
in
nop
inc
mov
dec
cs
or
cmp
sbb
and
push
jecxz
pop
stos
int3
or
mov
push
ja
jb
mov
add
lock
sub
or
pop
inc
sbb
fnsave
les
push
pop
sub
aas
mov
ret
sahf
hlt
jb
fstp
movsb
jg
outsb
mov
stc
cmp
mov
cmpsl
dec
sub
push
sbb
mov
adc
and
outsl
xchg
insb
mov
xor
mov
xlat
jno
sahf
adc
outsb
stos
xor
test
and
push
lods
inc
xchg
fisttps
lret
mov
std
std
shlb
int
das
lahf
jne
pop
imul
addb
sbb
ss
mov
fisubrl
sbbl
mov
loop
mov
das
push
fiaddl
mov
push
cmp
sub
cmp
jns
push
scas
cmp
dec
push
pop
incl
int3
insl
mov
adcb
fdivs
or
mov
outsb
mov
outsl
pop
jl
notl
jp
xchg
dec
test
mov
mov
pushf
add
or
rclb
jge
jecxz
popf
lods
dec
push
jg
and
addr16
pop
mov
ja
fwait
ja
negb
fsubs
bound
jns
xchg
pop
xchg
cmp
enter
cltd
xor
fsubs
or
dec
and
icebp
and
mov
sbb
gs
xchg
mov
test
xor
or
aaa
scas
out
fldcw
loope
push
imul
cli
push
pop
outsb
out
incl
add
adc
fldl
repnz
ss
loop
push
mov
js
or
or
pop
jae
mov
sub
xchg
jg
sub
adc
js
loope
fiadds
imul
xchg
pop
cs
mov
fidivrs
aad
ret
cmp
pop
xchg
jge
faddl
outsb
mov
arpl
push
jns
fiaddl
out
xor
imul
and
int
dec
jne
ret
fwait
mov
fisttpl
mov
push
popf
data16
cmpsl
test
xchg
dec
test
mov
lock
test
lahf
stc
mov
mov
push
mov
shlb
cli
stc
ret
push
ret
test
pop
push
out
jne
in
jge
xlat
sti
daa
mov
test
pop
mov
xchg
lret
bound
stc
jp
stos
pop
hlt
ds
in
mov
cld
test
xchg
sbb
ret
cmc
insl
adc
xchg
xchg
aas
jnp
push
jne
xor
movsl
cmp
push
xor
adcl
sbb
fldl
xchg
jns
push
movsb
roll
xchg
add
in
sub
clc
jl
xor
cwtl
cmp
sbb
jl
test
in
cmp
mov
cmpsl
push
jge
dec
fiaddl
test
je
loop
mov
sub
fistpll
movsb
pusha
xchg
inc
mov
jnp
inc
aam
jnp
jp
sub
lods
pop
fs
mov
movsl
jp
ss
mov
lods
repz
push
fwait
rcrb
les
jmp
mov
mov
sarl
cmpsl
mov
xor
ds
test
cmp
sarl
inc
cmp
mov
imul
aam
insb
outsl
and
pop
dec
lods
insl
out
fldenv
test
mov
or
fsubrl
jne
in
mov
push
pop
jp
loop
inc
inc
and
fcmovnu
add
scas
or
sbb
jp
addr16
repnz
mov
jb
mov
stc
insb
fwait
add
push
push
xor
lret
lods
mov
sub
cwtl
inc
les
scas
push
int3
mov
or
inc
push
xor
negl
inc
in
cltd
shrb
dec
xor
subl
sbb
cwtl
dec
rolb
ror
jo
adc
in
dec
dec
push
or
pop
leave
cmp
jne
inc
push
add
and
pop
add
in
sbb
loope
icebp
nop
out
cmpsb
or
mov
ds
jl
clc
stos
mov
pop
xchg
ds
mov
cltd
mov
mov
xor
lds
lahf
sub
test
loope
and
and
mov
jg
cmc
push
shlb
pushf
adc
adcl
cltd
arpl
mov
inc
insl
pop
sbb
mov
jb
imul
pusha
sti
fmull
or
jp
scas
push
popf
mov
add
jl
loope
subb
pop
pop
push
pop
fcmovbe
and
or
add
sub
jecxz
rcrl
test
cld
outsl
dec
addb
into
xchg
lret
pop
pop
jge,pt
pushf
and
adc
cmp
xchg
xchg
orb
push
cmp
shl
adc
mov
fadds
push
shl
xor
inc
in
adc
flds
inc
leave
jo
push
xchg
adc
imulb
mov
xor
scas
lret
into
sarl
jns
and
push
cmpsb
inc
dec
lock
xchg
cmp
jo
push
or
in
sbb
icebp
stc
mov
pop
scas
loop
xchg
sbb
into
lcall
pop
adc
fstpt
dec
xchg
daa
mov
cmp
pop
lods
push
das
or
mov
setns
cmpsb
mov
sub
mov
pop
jmp
jns
and
gs
push
pop
fidivs
ljmp
sub
fnstsw
jle
ficoms
ret
add
fistpll
iret
daa
pop
xor
out
sbb
push
push
out
lods
arpl
mov
xchg
ffreep
inc
push
mov
inc
mov
mov
and
int3
mov
xchg
cs
mov
outsb
mov
mov
pop
xchg
xor
pushl
mov
repnz
push
fmull
cmpsb
movsb
lret
cmp
jl
dec
stos
pop
push
xor
push
fldenv
jg
or
shl
jge
icebp
add
dec
cs
enter
adc
test
lret
rol
push
clc
lods
adc
dec
sub
and
stos
sub
push
test
sbb
push
lods
cltd
cmc
mov
jae
xchg
jno
stc
int3
in
adc
fs
movsb
mov
stc
fdivrp
sub
call
add
pop
jnp
jb
ljmp
inc
arpl
fcmovnb
sub
dec
lods
push
std
xlat
inc
aam
xchg
push
fldl
mov
js
jno
add
or
daa
fnstenv
dec
mov
sub
mov
icebp
cmp
mov
and
jp
out
lods
insb
fwait
stos
sbb
ljmp
ja
test
sub
mov
mov
data16
pushf
mov
inc
mov
movsl
cltd
rclb
jl
and
jl
cmpsb
sti
dec
jbe
sahf
jge
dec
es
pop
xchg
xor
xchg
sbbb
clc
cmp
cs
mov
lea
nop
das
sbb
stos
mov
lock
rolb
cli
scas
mov
mov
pop
sbbb
lods
jp
sub
test
push
in
pop
aam
int
faddl
xor
push
out
pop
xor
sarb
cmc
in
fimull
adc
adcb
pop
aad
das
mov
sahf
xchg
mov
inc
push
cli
dec
imul
pushf
mov
pop
insb
adc
jmp
pop
xchg
push
push
adc
jle
pushf
add
jge
sahf
ficompl
mov
daa
cmp
movsl
push
cmp
pop
adc
push
cmpb
adc
fiadds
sahf
sbb
push
cmp
jae
js
mov
lock
and
and
xor
movsb
insb
push
mov
cmpsl
imul
cs
xchg
sbb
cmpsl
leave
mov
add
iret
ja
jle
mov
aad
and
jo
mov
pop
sbb
sub
into
lods
add
outsb
cli
cmpsb
pop
stos
data16
cs
out
jl
jo
std
rorb
scas
je
lds
sub
lret
inc
and
out
movsl
nop
mov
push
nop
sub
sahf
fwait
xorl
inc
mov
test
addr16
push
iret
push
jne
sub
fidivl
test
stos
push
enter
popa
stc
je
iret
aad
inc
push
and
loopne
fs
lret
mov
xchg
and
les
iret
imul
pop
pop
add
mov
sbb
xchg
jge
push
push
in
fs
or
xor
sbb
add
repnz
and
mov
xchg
aam
add
pop
xchg
adc
and
cmp
outsl
sahf
pop
iret
pop
fucomip
fiadds
mov
cli
in
loop
ja
mov
mov
loop
cmp
push
jnp
daa
mov
jb
and
or
push
in
and
lret
ret
or
out
nop
mov
adcb
jno
adc
cwtl
call
dec
sbbb
pushf
lock
and
cld
in
dec
sbb
xchg
jns
xchg
sub
xor
mov
imul
add
jmp
inc
pushf
mov
sbb
fiaddl
aad
shl
mov
repz
repz
int
fs
jg
in
sbb
mov
mov
push
pusha
decb
je
fwait
cli
cmpsb
ror
push
loope
insl
lds
ret
inc
ja
out
add
cmpsb
cli
int3
sbb
mul
mov
inc
inc
outsl
jae
sbb
push
addb
orb
scas
fcomps
xchg
icebp
je
jg
dec
add
lahf
stos
std
fcoml
movsl
lods
or
jnp
push
sbb
imul
popf
repz
pop
adc
sub
cmp
adc
out
js
push
sahf
iret
rol
mov
subl
std
jmp
fimuls
pushf
arpl
push
and
inc
xchg
xor
mov
xchg
andl
xor
xchg
xchg
outsb
cmp
nop
in
xor
loopne
mov
xor
adc
ret
ret
icebp
add
jecxz
mov
and
mov
sbb
aaa
mov
fistpll
addr16
repz
lar
inc
mov
xchg
push
cli
testl
pop
enter
push
jb
rclb
int3
sbb
lods
cmp
aam
push
int
roll
ljmp
jns
daa
push
scas
outsb
sti
push
pop
jbe
and
xor
xchg
int3
mov
jp
lahf
cmp
mov
add
xchg
outsl
outsb
mov
inc
xchg
jmp
jp
xchg
shrb
push
mov
dec
aaa
leave
nop
or
scas
inc
jno
popf
jae
cld
sub
fbld
lock
jp
push
inc
adc
push
popf
sub
imul
push
subb
jmp
pop
shl
xor
sahf
loop
gs
clc
loope
mov
test
xor
movsl
movsw
pop
lods
xchg
into
into
fnstenv
adc
pop
mov
outsl
mov
call
mov
pop
sahf
mov
inc
xchg
shrb
lods
mov
and
jbe
out
dec
rorb
rolb
loopne
sarl
aam
ret
adc
xor
enter
dec
push
test
data16
clc
cmc
mov
aaa
scas
xor
pop
mov
adc
jnp
add
hlt
pop
push
stos
mov
inc
push
xor
mov
jp
rorl
xchg
push
and
lea
sub
mov
jp
aas
xchg
loopne
cld
and
aas
sbb
push
les
jge
mov
or
xor
data16
iret
xor
xor
xchg
stos
sub
sub
insb
adc
cli
shll
sar
cwtl
ds
sbb
stos
rclb
fsts
or
lock
lods
jae
pop
push
or
xor
pop
jecxz
std
pop
push
sbb
pop
subl
add
sbb
sbb
jg
cwtl
test
aad
cmp
jno
or
lret
and
js
data16
out
xlat
push
mov
dec
xor
inc
dec
fsubrl
push
mov
fiaddl
cmp
ljmp
inc
aas
xchg
jne
and
inc
enter
fldpi
addb
test
rcll
loope
jl
xchg
adc
enter
fisttpll
pop
stc
scas
nop
jecxz
in
lret
inc
sahf
lret
scas
outsb
sub
ss
jmp
add
iret
nop
aam
sub
jecxz
in
in
ret
stos
jmp
cmc
fdivs
dec
pushf
inc
jno
pop
sub
xchg
pop
in
sbb
push
ret
dec
sarl
mov
les
cmp
arpl
shll
push
ret
pop
mov
cmp
jmp
jno
pop
outsb
cmp
dec
xor
pop
pop
scas
notl
pop
iret
es
loope
leave
js
and
cmpsl
int3
daa
push
jnp
enter
jmp
jo
fmul
push
adc
push
xchg
and
xchg
in
ret
push
mov
xchg
inc
push
lret
jo
adc
cmp
cld
dec
jmp
lret
cmpb
mov
fs
dec
xchg
or
inc
ja
nop
xchg
inc
dec
mov
push
loope
es
xchg
invd
fcomp
cmpsb
jae
fwait
cmp
xor
ror
mov
insl
addr16
enter
leave
repnz
mov
xchg
jbe
dec
aaa
mov
rcrb
or
sar
jb
mov
or
mov
ds
xor
test
cmpsb
inc
sub
scas
into
add
cmpsb
icebp
mov
lret
dec
popf
andb
and
addr16
mov
add
sbb
inc
mov
push
addr16
hlt
sub
sahf
adc
add
pop
lret
push
adc
sarb
cld
or
sub
leave
cmc
jl
jbe
cmp
orl
rol
push
mov
out
rclb
and
push
movsb
mov
jle
or
lahf
pop
add
bound
and
push
ljmp
fs
aaa
or
dec
out
mov
inc
adcb
push
xor
inc
jae
lcall
fistl
adcb
pop
fdivrl
mov
pop
or
sysenter
push
or
popa
daa
mov
ljmp
mov
cmp
lret
fstl
daa
mov
in
push
mov
inc
lret
arpl
test
aam
out
jp
adc
es
repz
cmp
mov
scas
aas
aad
clc
adc
scas
test
cwtl
aaa
js
clc
inc
andl
mov
scas
popa
std
mov
lahf
outsl
or
add
movsb
mov
sub
lea
inc
lods
lods
es
push
mov
popa
pushl
and
aas
jge
out
pop
jno
xchg
fcmovb
mov
cmp
push
cld
pop
mov
scas
loop
repnz
xor
xchg
push
mov
sub
mov
pushl
mov
mov
cmp
mull
dec
mov
add
mov
pop
mov
sub
mov
adc
pop
in
out
mov
push
int
fstpl
sbb
cmpsl
adc
and
pop
test
sbbl
mov
mov
int3
push
jmp
outsl
add
mov
add
cmp
sbb
or
mov
sbb
repz
and
fnstenv
adcb
push
andl
xchg
fildll
dec
pushf
sarb
dec
push
loope
jl
pop
push
repz
mov
stos
xchg
xchg
scas
out
mov
push
std
sub
negb
add
jo
lahf
fwait
sub
imul
mov
and
fs
xor
xor
outsb
fsubp
cmc
pop
mov
aam
stc
jne
mov
inc
out
mov
dec
mov
ffree
sub
arpl
call
or
pop
or
adc
or
sbb
ret
lods
stos
lods
pop
cmpsl
cmpl
sarl
mov
xchg
xchg
push
lcall
lret
pop
into
xchg
out
andl
int
fldenv
arpl
aad
mov
cltd
inc
into
push
jle
bound
addr16
sbb
mov
sub
sub
or
dec
jbe
pop
fildll
push
stc
or
and
jl
subl
push
mov
push
sbb
insb
xchg
dec
and
sub
mov
mov
data16
push
xchg
out
jmp
adc
in
xchg
dec
pop
mov
lock
jp
leave
out
aaa
aas
mov
sub
dec
cmc
sbb
or
jl
pop
mov
int
xchg
popa
cld
mov
testl
adc
fs
es
push
mov
dec
cmp
xor
insl
adc
push
shrl
or
out
add
popf
test
mov
mov
xchg
fildl
xchg
pop
clc
in
dec
xchg
mov
roll
cmp
mov
add
inc
or
outsl
push
cmp
pop
sbb
in
inc
push
into
inc
pop
push
xor
fbld
inc
add
pop
push
mov
iret
mov
dec
mov
les
sbb
pushl
jno
in
fs
addr16
or
sub
xor
enter
movsb
mov
lods
xor
add
mov
fistpll
scas
and
repz
ss
and
sahf
scas
lcall
fimuls
mov
in
call
pop
pushf
repnz
out
pop
movsb
out
inc
jge
add
lret
lods
fwait
cli
pop
in
fcoml
imul
pop
lcall
insl
push
scas
or
inc
dec
mov
xchg
sub
cmp
roll
faddl
or
jo
ds
push
fistl
and
aaa
dec
ret
loope
scas
dec
mov
test
dec
push
jne
or
outsl
xor
in
roll
sub
xor
dec
push
cmc
pop
xor
or
outsl
aas
mov
push
pop
jecxz
jnp
addr16
add
cmp
cmp
ljmp
fnstsw
cmp
dec
rorb
pop
or
push
iret
xor
sbb
js
lret
add
xor
shrl
in
imul
fisubrs
jbe
jae
aaa
jg
mov
sub
jmp
or
jp
jno
fs
jns
inc
in
flds
loopne
pushf
xchg
mov
testl
push
or
push
iret
notb
dec
repz
jmp
gs
or
arpl
inc
cli
mov
out
leave
hlt
adc
push
hlt
and
inc
loope
fdivrs
aad
mov
scas
pop
cs
sub
sti
repnz
jle
pushf
add
jb
pop
test
ljmp
arpl
mov
sub
cltd
rol
adc
imul
arpl
lds
xor
mov
sub
ljmp
cs
bound
add
repz
add
das
xchg
loope
mov
mov
nop
jb
in
lcall
dec
ja
movsb
bound
mov
and
inc
mov
lret
cmp
cmp
jg
adc
mov
shrl
in
popa
aam
mov
hlt
inc
sub
push
das
jecxz
pop
or
adc
loope
js
loopne
push
xchg
cld
dec
ret
repnz
sbb
lods
faddl
add
mov
outsl
test
out
pop
xlat
adcl
out
lock
adc
push
frstor
outsl
inc
rcrb
xchg
mov
pusha
adc
mov
lret
jae
adc
xchg
sbb
inc
stos
xchg
adc
scas
lods
inc
rcrb
sub
mov
sub
into
sahf
lret
xchg
sub
sbbl
cmpsb
fsubr
je
adc
inc
je
cwtl
icebp
fs
fcoms
out
sbb
push
dec
pop
clc
sbb
mov
xchg
xor
fistpll
push
pop
push
adcl
jg
dec
xor
mov
push
cmp
push
test
jae
vpshuflw
inc
cltd
xlat
fstpt
out
js
and
es
push
dec
inc
mov
dec
lds
xchg
adc
test
ret
mov
movsl
ret
mov
mov
in
sbb
es
shl
jl
int
outsb
pop
data16
xchg
inc
mov
std
test
adcb
cli
jp
daa
shlb
or
jl
ss
loopne
outsl
pop
dec
sbb
add
out
lds
lcall
test
idivl
out
fwait
das
imul
repnz
inc
test
enter
out
arpl
jg
outsl
ret
or
ds
out
lock
gs
jnp
jne
cs
pop
and
jecxz
sub
call
push
test
add
leave
jne
jnp
repz
pushf
jae
xor
nop
pop
aad
mov
xor
adc
hlt
jmp
mov
push
cmp
adc
sti
cmp
adc
scas
popa
mov
popf
pop
sub
push
fmul
loop
xor
jge
cmp
sub
ss
out
xchg
gs
lods
hlt
push
xor
jb
nop
rcl
push
push
xchg
dec
adc
mov
add
or
fstpl
in
push
mov
mov
mov
sti
sub
xchg
cmp
bound
cmp
jae
and
pusha
mov
loop
or
push
push
xor
sub
xchg
mov
es
xchg
pop
ss
push
lret
inc
jnp
jg
sbb
mov
xlat
cwtl
andl
movsb
popa
mov
dec
lock
push
mov
jne
ret
test
jmp
xchg
inc
scas
xor
mov
sbb
xor
dec
je
jge
addl
adc
gs
cltd
repz
aaa
jecxz
cmp
ds
repnz
fadd
jns
xchg
mov
pop
xor
jmp
and
and
xor
out
shlb
push
jl
pop
outsb
inc
aam
mov
js
cmp
pop
aaa
jmp
cmp
push
jo
mov
fbstp
cwtl
insl
ds
call
fs
adc
pop
out
jne
sub
popa
jb
add
mov
fs
das
lret
in
ror
sbb
lcall
pop
cs
lods
out
mov
sbb
lods
jnp
jmp
mov
jp
jns
repnz
cmp
pop
mov
mov
push
push
push
notl
mov
pop
scas
mov
xchg
in
out
mov
aas
testl
lea
fisubl
clc
daa
push
and
jno
popf
std
outsb
push
ljmp
in
outsl
sbb
mov
mov
cmp
in
pop
mov
data16
jbe
sbb
loope
cmp
xchg
in
xlat
enter
cmp
ss
sub
jmp
dec
fcmovnb
addl
inc
into
in
movsl
xchg
sbb
and
mov
icebp
filds
mov
xchg
mov
xchg
popf
sub
retw
mov
and
imulb
ljmp
enter
pop
int3
filds
out
stos
ja
jmp
testb
mov
outsl
jnp
outsb
test
fistpll
push
dec
shl
andl
in
pushf
push
roll
jno
jle
push
mulb
pop
pusha
out
dec
or
mov
out
rclb
add
pop
jmp
push
into
in
jno
in
sub
push
xlat
popa
inc
test
cmp
dec
aam
adc
push
xchg
mov
les
sar
adc
push
adc
inc
mov
mov
das
push
and
das
inc
sti
aaa
dec
in
mov
inc
fnstenv
dec
adc
jl
imulb
xor
lret
lods
cltd
and
push
cmp
sub
inc
icebp
pop
mov
cmc
or
jbe
out
fldcw
aas
sahf
and
adc
lea
push
incb
dec
loope
mov
xor
jae
push
xchg
out
jb
outsl
mov
cmp
shll
repnz
pop
add
inc
loopne
jl
and
lret
data16
or
arpl
or
jmp
sahf
sub
pop
or
cld
and
orb
mov
enter
std
sbb
dec
and
push
mov
xchg
sbb
pop
imul
cmc
test
leave
inc
addb
adc
lahf
fnstenv
or
test
xor
out
cmp
cs
adcb
outsb
fsubrl
push
jbe
cmp
test
add
push
jo
mov
aad
pop
add
adc
fistpl
or
clc
mov
adc
sbb
push
or
add
aam
jecxz
ret
popa
pop
ror
add
push
adc
lret
sbb
ja
adc
add
cmpsb
lock
gs
sbb
aaa
rcll
testl
fnstenv
dec
rcll
sub
inc
push
icebp
data16
cmpsb
pcmpgtw
je
xchg
fiadds
int
xchg
sar
aam
push
negl
pop
ret
xor
and
adcl
or
lods
movsb
movsl
iret
xchg
in
scas
or
mov
mov
pop
xchg
sbb
ss
ret
pop
jno
xchg
mov
ds
push
mov
gs
sti
xchg
inc
aas
push
lret
mov
aam
int3
mov
pop
jbe
fldcw
fmull
sub
jp
inc
xchg
sub
jno
mov
jne
dec
and
ljmp
sbb
pop
cmp
ror
lods
and
mov
ss
fcomps
daa
cmp
fcmovnu
mov
push
decb
push
fnstcw
jp
mov
popf
ja
jb
dec
fisubl
ss
adc
jae
leave
jns
inc
movsb
push
dec
dec
mov
orl
nop
sbb
pop
jmp
in
in
jns
sbb
testl
rolb
aam
push
stos
cmovnp
cmc
mov
or
int
loope
or
pop
mov
out
mov
outsb
mov
jb
add
stos
cs
fildl
mov
ljmp
insl
adc
loop
stos
pusha
pop
cmpsb
adc
lods
test
cmp
shl
adc
jmp
imul
mov
fmuls
aam
lret
iret
push
mov
enter
aas
sbb
pandn
mov
popa
push
jle
in
addr16
iret
mov
mov
xor
jno
xorl
lods
mov
mov
cmp
jo
add
mov
push
pop
cmpsb
xor
push
mov
and
aad
int
out
jae
adc
imul
fidivl
add
xchg
mov
iret
dec
or
inc
mov
cmpsb
jnp
out
mov
sub
stos
popa
bound
andnps
imul
popl
cmp
int
lret
sahf
xor
sub
inc
push
mov
or
mov
rclb
xchg
mov
scas
mov
seta
mov
repnz
jbe
xchg
roll
xlat
mov
fs
test
pop
into
jmp
leave
xor
push
divb
sbb
addr16
adc
stos
pop
sbb
bound
or
out
stos
imul
cwtl
xchg
or
shlb
jle
mov
xor
xor
out
sub
int
inc
push
jmp
and
xchg
or
adc
push
stc
cmpsb
cmp
jl
sub
int3
sbb
mov
xchg
arpl
cmpsl
lock
insl
xor
cltd
mov
xchg
or
in
mov
sub
adc
mov
lods
mov
or
popf
xchg
jmp
mov
jns
test
and
sbb
divl
and
les
in
pop
imul
mov
sbb
lcall
mov
inc
aas
pop
mov
rcrb
out
inc
cmp
push
fmuls
adc
sbb
mov
outsl
mov
cltd
mov
in
sbb
adc
mov
inc
das
sti
lds
cmp
mov
adc
shl
popa
sahf
dec
cmp
popf
push
sub
and
jb
sbb
hlt
fmuls
scas
cmp
mov
fmulp
mov
add
fists
push
sub
mov
sbb
mov
jae
cmpsl
or
add
jb
rcll
mov
shll
movsl
mov
scas
push
repnz
iret
and
pushf
sub
xor
bts
mov
je
cmp
js
roll
cmp
add
mov
in
icebp
fstpt
sub
mov
push
cmp
into
sub
or
pop
fnstenv
mov
fstpt
ss
mov
es
neg
dec
mov
jl
enter
shl
arpl
cmp
xchg
je
and
push
adcl
pop
jnp
outsb
inc
aam
jle
xor
jle
stos
push
or
ja
pop
jns
or
sub
sti
out
pop
pop
mov
xor
imul
inc
mov
jbe
or
mov
loopne
or
mov
nop
mov
pop
mov
push
imul
js
sub
adc
cwtl
les
cmp
pop
fs
jmp
jo
repnz
sarl
mov
jbe
movsl
aad
and
cmp
xchg
jp
pop
fcmovu
add
in
xchg
jbe
push
addl
fwait
pusha
data16
inc
mov
cmpl
jle
mov
cmp
mov
mov
movsl
cmp
jo
ljmp
or
pop
xchg
adc
pushf
pop
loope
dec
push
into
jp
mov
pop
jp
xchg
out
je
xchg
jecxz
aad
jecxz
out
leave
outsl
xchg
jo
jo
sbb
inc
mov
btsl
xor
rol
and
mov
xor
enter
cld
in
sbb
rcr
xchg
pop
cmpsb
jg
mov
imul
out
mov
push
ljmp
ljmp
mov
stc
or
popa
or
aam
pop
daa
sub
enter
mov
xor
mov
addr16
and
add
dec
mov
stc
sub
adc
pop
xchg
adc
mov
dec
jnp
inc
xchg
xchg
aad
and
ss
inc
insl
sbb
mov
arpl
fimuls
sub
aaa
add
std
pop
mov
pop
in
aad
outsb
cmp
or
and
call
divb
push
jae
push
fistpll
rcr
fnstsw
inc
fstp
add
xchg
into
jb
jb
shr
sub
pop
xor
inc
std
std
out
and
scas
lock
push
fwait
push
mov
movsb
in
mov
call
fcoml
jns
xor
into
jecxz
imul
mov
out
mov
jns
rcrl
insb
sub
shl
and
sub
movsb
cmp
hlt
scas
jge
pop
mov
lods
pop
sub
and
movsl
mov
pop
cld
push
aad
fisubl
jbe
pop
cmc
test
xchg
xor
nop
cmp
pushf
outsb
xor
rorl
call
add
aad
jbe
cmp
adc
xchg
rclb
xlat
rol
aas
or
and
rcl
fisubs
mov
out
loop
in
jo
sub
dec
sub
cld
rorl
test
sub
inc
in
or
adc
bound
cmpsb
xchg
mov
cmp
cltd
repnz
inc
push
cmp
mov
fsubrl
data16
inc
lea
mov
repz
xor
xchg
jmp
mov
hlt
push
sub
movsl
in
call
roll
pop
add
inc
inc
out
jle
inc
mov
sbb
mov
in
out
adc
xor
cs
mov
pusha
filds
push
cmp
sub
fs
xor
mov
and
dec
shl
outsl
xor
adc
in
inc
ret
or
mov
sub
fnstcw
mov
in
mov
popa
xchg
add
mov
fbstp
fimuls
jo
inc
mov
cltd
mov
hlt
dec
pop
iret
mov
push
inc
xchg
jns
sub
mov
insl
mov
and
sbb
mov
cmp
stos
sbb
mov
xor
sbb
addr16
arpl
loop
aad
adc
xchg
test
movsl
ret
push
shll
test
movsb
xor
lcall
negl
enter
lock
pop
lahf
test
lods
bound
push
adc
lods
push
js
decb
gs
dec
push
adc
mov
ja
mov
dec
pop
mov
out
out
loope
stc
repz
lahf
pop
pusha
or
lretw
cmpsb
mov
cmp
mov
xchg
addr16
dec
jecxz
mov
xchg
inc
mov
sbb
fisubrs
clc
jo
xor
sti
icebp
out
fdiv
sub
pop
lret
sbb
mov
out
mov
es
std
jp
mov
outsl
lcall
hlt
or
jb
sbb
cmpsb
mov
and
lock
call
addb
mov
cmp
mov
mov
ja
mov
cmp
mov
arpl
sub
xor
cmp
out
popf
imul
push
leave
mov
or
xchg
fnstcw
mov
pop
mov
mov
dec
cli
cmp
dec
not
or
andl
mov
call
mov
pop
inc
inc
data16
lods
lea
das
jo
scas
dec
mov
aas
aad
repz
adc
pop
aam
lock
mov
cld
test
inc
shrl
xor
fisttpl
adc
pop
dec
jp
sub
adc
xlat
mov
das
or
stc
nop
cwtl
aaa
cmp
jb
movsb
push
and
inc
mov
sbb
or
sahf
mov
cmp
xchg
pop
pop
jb
xor
in
cld
flds
imulb
lock
dec
repnz
pop
mov
add
mov
push
or
add
jg
mov
orb
ret
popf
lret
or
int
mov
sbb
xchg
fsub
pop
mov
push
and
repnz
out
dec
lcall
cwtl
push
cmp
inc
or
imul
jg
mov
test
mov
push
dec
popa
icebp
rclb
pop
and
or
loopne
cmc
enter
ds
cwtl
out
jo
ret
das
adc
xchg
sbb
outsl
pop
fmul
inc
add
mov
ret
mov
adc
cmpsb
adc
sub
es
loop
fcmove
jl
sbb
xchg
cmp
clc
gs
addl
xchg
aam
repnz
addr16
mov
test
adc
insl
cmp
xor
lahf
les
cmpsb
xchg
in
into
dec
adc
hlt
sbb
stc
test
cli
and
jae
mov
into
iret
outsb
push
cli
scas
leave
jl
mov
xor
adc
or
and
es
dec
ljmp
hlt
jecxz
pop
adc
inc
lds
xchg
inc
cltd
inc
imul
enter
mov
rorl
pop
cli
push
cli
push
cmp
inc
movsb
pop
aaa
mov
mov
adc
jo
and
icebp
pop
sub
jg
insl
pop
sbb
outsb
popa
lods
mov
inc
mov
insb
xchg
dec
leave
mov
mov
js
cmc
adc
pop
notl
iret
hlt
addl
inc
and
or
aas
and
pop
sti
mov
sbb
xchg
psubsb
pop
cwtl
test
daa
jle
lock
imul
cld
repz
lahf
fisubs
push
stc
stos
xchg
test
cmc
shlb
or
adc
out
fists
lret
pop
pusha
pop
daa
ljmp
push
test
cmc
push
sbb
cltd
add
repz
add
lret
pusha
jns
mov
sbbb
aad
daa
xor
test
adc
cli
aad
add
or
jne
popa
mov
shll
push
push
or
shl
lahf
mov
pop
jecxz
subb
push
lahf
daa
add
pushw
and
bound
mov
in
cmp
xchg
push
scas
fiadds
fisubrs
mov
xchg
sbb
cmpsb
je,pt
jecxz
and
popf
icebp
popa
in
pop
mov
adc
jno
add
rolb
xchg
addr16
cld
pop
sbb
pushf
or
les
mov
fwait
pusha
lcall
lock
mov
fs
xor
push
outsb
iret
aaa
popa
pop
bound
aam
idivl
adc
mov
pop
stos
fcoml
les
inc
fsub
xchg
push
pushl
push
stos
cmp
test
lcall
jle
leave
test
inc
mov
xor
push
or
shl
ljmp
in
lret
sbb
or
jae
ja
shr
pop
jecxz
pushf
add
sti
and
xchg
pop
inc
jl
mov
push
test
dec
test
jmp
fcmove
jle
dec
inc
mov
push
mov
in
rcll
leave
into
ret
bound
jg
and
imul
loop
hlt
loope
pushf
xor
stos
icebp
mov
jne
push
pushf
mov
mov
ds
pop
mov
cmpsb
and
fdivrl
loopne
int3
fsts
adc
jge
aad
or
inc
lock
push
bound
mov
int
push
cli
ja
sbb
ja
shr
inc
sti
sbb
fcom
push
pop
or
adcb
aad
and
pop
loop
divl
pusha
adc
scas
aad
insl
jnp
sub
clc
shrb
into
sbb
test
xor
loope
xor
loope
cmp
lea
outsl
adc
scas
jns
mov
adc
sbb
mov
out
jns
mov
inc
scas
addr16
add
shl
rclb
xchg
lcall
jnp
imul
adc
imul
cli
push
gs
mov
mov
mov
icebp
fistps
ds
dec
into
push
cmp
add
or
ds
xchg
pop
fxch
and
outsb
inc
sbb
das
icebp
xor
shl
pusha
jae
push
lds
inc
adcb
xor
xor
test
sub
or
push
rcl
lods
add
sub
mov
mov
nop
out
cmc
test
inc
cmpsl
ret
dec
push
jecxz
movsl
in
aaa
test
jl
sti
dec
mov
and
sbbb
in
dec
cmp
insb
sub
loop
jbe
dec
mov
pop
out
ret
es
outsb
add
and
sahf
push
imul
xchg
ret
loop
dec
pusha
bound
lcall
sub
hlt
loopne
adc
ret
jae
push
jns
faddl
add
cmp
arpl
popf
jo
and
and
adc
or
das
sahf
dec
fiadds
mov
inc
enter
xchg
adc
cwtl
push
or
andb
imul
rcr
lret
sbb
mov
loop
rolb
mov
jbe
pop
xchg
fimull
xor
lcall
insb
inc
aaa
hlt
popf
push
xchg
jb
shlb
jns
mov
add
mov
or
ja
jmp
test
loop
arpl
ret
xchg
ret
in
test
inc
cmpsb
mov
ret
out
mov
jns
lret
loop
mov
out
mov
cmp
out
iret
xorl
dec
out
sbb
cmp
mov
push
cmp
dec
dec
jno
dec
mov
popf
or
int3
lock
fldenv
pop
aam
sahf
push
sbb
dec
shr
inc
adc
imul
and
push
lret
pop
aad
adc
dec
mov
sub
sub
ljmp
icebp
jmp
push
push
movsb
mov
push
lret
std
lods
xor
shll
insl
das
dec
fldt
scas
nop
sub
andl
int
push
ficompl
sub
bound
lods
pop
pop
stos
test
sbb
push
fnstenv
cmpsl
push
mov
jae
shrl
daa
add
and
in
adc
cmp
sub
adc
mov
hlt
enter
xor
sub
int3
cmc
out
inc
stos
ss
push
hlt
out
push
call
sbb
jl
or
mov
arpl
in
xlat
jge
jg
xor
jg
lret
movsb
xchg
pusha
mov
xchg
popa
out
ficomps
out
dec
inc
aas
mov
mov
and
mov
in
pop
lock
mov
and
or
test
mov
mov
nop
nop
aam
adc
xchg
jge
ret
xchg
jecxz
push
add
jae
push
ljmp
es
in
mov
cmp
jecxz
add
sbb
mov
push
xchg
pop
arpl
loop
jmp
push
xor
aas
adc
nop
and
mov
or
mov
ficomps
add
mov
iret
pop
or
push
adc
lahf
repnz
cmp
dec
stos
mov
dec
jb
imul
ficomps
stc
add
jns
call
mov
insl
jl
js,pn
out
jg
arpl
lea
jbe
daa
mov
sub
mov
pop
dec
cmp
push
add
loope
inc
fsts
xchg
test
addl
not
and
jae
sub
pop
pushf
imulb
sbb
push
xor
popf
sub
fwait
jo
out
xchg
hlt
mov
pop
mov
add
pushf
mov
pandn
call
and
ljmp
sub
cmp
add
mov
sub
add
out
sbb
and
mov
mov
ljmp
push
hlt
pop
jae
push
ja
aas
int3
ret
cmpsl
xor
mov
sbb
iret
addl
hlt
in
sahf
push
add
aas
loop
orl
xchg
cld
pop
adc
inc
adc
out
xor
sahf
nop
jns
out
mov
orb
mov
ficompl
incb
inc
ss
stos
push
and
jp
or
lods
iret
int
fwait
js
imul
cmp
lods
mov
call
xchg
test
fdivrs
pop
aad
mov
push
jge
repz
scas
pop
mov
pushf
adcl
lea
cwtl
dec
fisubrs
xchg
lret
xor
pop
popf
sub
xchg
mov
xor
add
add
test
fldenv
call
dec
sbb
repnz
pop
cmpsl
sbb
dec
push
jb
in
jno
scas
dec
sti
jnp
and
mov
sbb
cmp
scas
ljmp
mov
sbb
add
js
sub
mov
int
add
ss
xchg
fimull
xchg
je
gs
sub
mov
sti
lahf
mov
jle
mov
stc
and
test
mov
inc
pushf
repz
dec
leave
sbb
pusha
pop
test
fbld
mov
int3
lcall
scas
jbe
idivl
cmp
call
mov
mov
aad
test
inc
mov
ljmp
dec
jp
dec
xor
xor
inc
dec
fdivs
cmpl
dec
call
push
loopne
out
jae
rcrb
sbb
movb
sbb
cltd
movsb
xchg
hlt
in
pop
scas
jmp
or
in
xor
mov
es
add
push
adc
loope
cmc
movsb
mov
push
nop
cmpsb
mov
adc
jmp
mov
icebp
xchg
or
cmp
pop
xor
xchg
mov
aas
dec
mov
or
xchg
sub
cmpsl
ss
leave
scas
pushl
sbb
sub
fisttps
jmp
out
test
fwait
and
hlt
cmp
cmpsb
pop
mov
mov
xchg
test
sbb
fs
ds
cmp
jmp
dec
inc
insb
xchg
jne
lods
jae
rcrb
jmp
cwtl
push
sbb
idivl
xor
sbb
sbb
fwait
xchg
mov
add
push
jbe
ja
push
movsb
stos
insb
rol
and
sbb
fsts
and
adc
add
adc
jge
div
jmp
mov
xor
sbb
data16
sbb
out
xor
mov
sarl
push
dec
leave
dec
adc
les
mov
mov
mov
mov
sub
stc
scas
mov
and
ljmp
lods
fbld
dec
inc
mov
and
ror
mov
cmp
movsl
pop
ja
push
and
sub
test
lods
mov
lahf
xor
shlb
pop
mov
mov
adc
aad
mov
mov
testl
xchg
addb
jmp
mov
mov
loope
test
aad
jbe
scas
rorl
loopne
sub
stc
fucomi
xor
xlat
mov
ret
popa
outsl
rcrl
dec
mov
je
inc
inc
std
cmc
insb
xlat
lea
lock
xor
stos
lahf
dec
sbb
mov
test
insb
cld
stos
push
lea
test
sub
push
popf
out
jbe
std
loope
mov
rclb
scas
js
dec
cltd
rcr
out
fwait
mov
sbbb
pop
mov
and
mov
jp
dec
lods
repnz
sbb
sbb
aaa
cmp
push
jg
data16
icebp
aas
sub
jns
aaa
pushf
add
sahf
xchg
push
mov
adc
jb
or
xor
testl
in
ss
iret
sub
pop
xchg
ss
mov
int
inc
mov
sub
or
pop
test
in
xchg
dec
push
dec
mov
add
pop
cmc
sub
mov
mov
add
stos
and
adc
in
jmp
jnp
sahf
clc
sbb
into
imul
test
sarb
lret
jmp
ret
test
mov
sbb
bound
lods
cltd
inc
lea
movsb
push
sub
rcll
enter
mov
out
jne
cmp
iret
out
pop
pop
pushf
cmp
pusha
subl
rdtsc
arpl
mov
fistpll
xchg
insb
xchg
xor
add
movl
leave
popa
push
jbe
jp
mov
add
sbb
mov
loopne
outsb
sub
adc
mov
mov
ljmp
add
call
pushl
push
pop
repz
hlt
mov
mov
and
xorb
addr16
scas
stos
test
pop
outsl
or
das
psubq
dec
out
dec
pop
fs
sbb
add
cltd
xchg
add
test
stos
jg
lds
nop
and
inc
out
in
adc
outsl
bound
mov
pop
in
cmc
fldt
jle
mov
inc
addr16
cmp
mov
fs
cmpsb
shlb
shrb
sbbl
dec
adcl
xor
sub
dec
insl
or
jmp
lea
jo
mov
lahf
movsl
cld
cwtl
pop
add
mov
xchg
shll
je
std
cmpsb
scas
mov
out
pop
cmp
and
call
add
lret
inc
jne
cmp
clc
loopne
add
mov
xchg
mov
iret
jp
sub
push
and
cli
addr16
mov
fisttps
dec
aam
pushw
push
jecxz
mov
aas
or
fcomi
mov
loopne
lock
out
rolb
aaa
adc
mov
pusha
fsubl
pop
arpl
clc
cmpsb
inc
pop
in
pop
fistps
mov
rorb
fbld
cmc
pop
stc
enter
inc
call
pop
bound
stc
jle
or
push
sub
outsl
js
adc
fs
repz
lock
xchg
push
fdivs
adc
arpl
push
adc
gs
jle
iret
mov
cmpb
in
mov
popa
ss
and
sbbl
inc
mov
pop
test
dec
daa
jo
sub
icebp
sub
adc
and
mov
jl,pn
push
mov
js
sub
inc
mov
xchg
xchg
into
mov
movsl
data16
add
dec
div
mov
cmp
adc
dec
mov
ljmp
xor
fwait
aaa
dec
fistpll
loopne
pop
int3
pop
inc
jo
mov
in
ret
cwtl
sub
or
adc
cmp
push
and
inc
ja
mov
in
sbb
es
xor
mov
xchg
jg
lcall
cmovnp
cmovp
mov
rorb
movsl
std
xchg
or
add
lahf
lahf
clc
jl
adc
rorb
push
das
cmc
mov
push
inc
leave
nop
repnz
push
out
scas
cmc
adc
jns
je,pn
arpl
jp
loopne
in
mov
xor
add
mov
rep
hlt
loope
cmp
cltd
pop
add
cmp
sub
and
push
movb
fadds
repz
and
aad
insl
pop
leave
jmp
into
rcr
in
aaa
pop
insb
cmp
cmp
xlat
in
testb
testb
shrb
mov
xchg
jo
pop
push
push
lahf
imul
pop
jno
push
mov
jno
and
outsb
mov
fildl
ficomps
loope
sti
imul
adc
mov
dec
std
push
push
mov
outsl
sub
in
insl
adc
loopne
xlat
and
jmp
js
inc
or
mov
ret
push
sub
dec
das
sbb
orb
dec
jb
loope
test
insl
imul
pop
sub
insb
xchg
movsl
fldt
dec
adc
leave
add
call
fisttpll
cmp
xchg
fimuls
dec
dec
insb
sub
arpl
xchg
mov
mov
cwtl
push
inc
lods
pusha
cmp
mov
sbb
fidivs
movsb
jbe
jp
jb
ss
in
enter
mov
int3
push
jge
cs
fwait
lock
ret
or
outsl
aas
in
enter
jle
inc
pop
dec
mov
data16
or
sub
insl
vsqrtss
icebp
out
lods
push
mov
aad
repnz
pop
iret
xlat
add
shrl
xor
sahf
xchg
inc
cmp
not
mov
push
jns
jmp
daa
clc
jbe
mull
sbb
das
xchg
cltd
cmp
pop
lcall
mov
loope
insl
mov
pop
cmp
in
orl
in
rorl
repz
and
pop
sbbb
push
nop
cmp
mov
xchg
pop
mov
add
pop
leave
jge
arpl
test
xchg
jmp
data16
outsb
test
mov
int
fsubrl
jo
push
lret
insl
stos
insl
data16
mov
lret
push
lds
gs
cld
jne
cltd
test
mov
lahf
out
xor
repnz
aad
jae
loope
pop
aas
pushf
and
push
mov
scas
data16
sbb
mov
std
sbb
shlb
or
mov
dec
jne
and
jg
insl
sbb
insb
adc
jle
js
jae
lds
xchg
xor
call
sbb
sarb
xlat
or
mov
inc
pop
jmp
xchg
mov
test
push
adc
cmc
popf
aas
cmp
cmpsb
outsl
inc
xor
inc
jae
imul
cmpsb
adc
adc
out
mov
mov
sti
test
andb
pop
daa
in
pop
cmp
sub
in
jo
cmp
pop
lock
cmp
in
js
mov
jge
jge
adc
into
in
mov
in
sub
shr
mov
sub
arpl
sub
xor
xor
dec
xor
dec
sub
int
mov
or
pop
mov
lods
sbb
sbb
jmp
or
and
jp
inc
push
xor
lret
testb
repz
jle
shlb
mov
push
sbb
in
call
push
inc
les
je
sub
cmc
mov
pop
xchg
xchg
and
pop
pop
push
mov
sub
sub
sbb
ds
add
repnz
stc
rcr
mov
ss
rorb
out
aam
shlb
pusha
sub
enter
sub
jne
pop
and
mov
cld
sub
mov
lock
xchg
mov
enter
enter
or
jno
xchg
mulb
cmpb
or
mov
outsl
mov
push
pop
dec
pop
scas
scas
xchg
jmp
into
xlat
dec
and
push
div
mov
sub
cmpsb
bound
rcrl
rcr
push
mov
arpl
sarl
fldl
mov
add
aam
insl
push
es
adc
aam
mov
aas
daa
call
movsb
mov
jmp
clc
mov
inc
shl
pop
push
les
xorb
jge
fmul
std
int
mov
psrlq
pop
addb
mov
int3
repnz
push
or
xor
and
xchg
push
arpl
push
inc
aas
rcll
push
hlt
pushf
movsb
loopne
into
test
cmpsl
sarb
pop
ret
pop
sub
adc
inc
sub
mov
cmp
cmp
mov
shrb
scas
pop
in
adc
clc
pop
cmp
jae
mov
dec
stc
cs
mov
jecxz
aaa
add
ja
xchg
pop
pop
or
aam
paddsb
aas
push
mov
sbb
adc
mov
shrl
enter
cs
test
and
jae
stos
mov
push
mov
inc
or
xor
addb
fistps
jne
add
or
push
cmp
sbb
cmp
out
in
bound
test
ret
lods
xchg
ljmp
push
mov
jge,pn
int
sub
dec
jle
and
arpl
imul
xor
push
psubsb
dec
gs
sbb
ja
inc
dec
js
xchg
ja
fildll
push
enter
pop
mov
inc
mov
push
mov
mov
das
jp
outsl
shlb
adc
je
stos
cmp
sub
ret
pop
stos
ja
inc
popf
gs
fdiv
lahf
push
cltd
jb
fxch
stos
lcall
adc
fnstsw
sar
pusha
in
scas
imul
sub
jg
dec
xchg
jge
jnp
cmc
xchg
xor
xor
pop
cld
sub
ret
insl
jnp
sar
pushf
push
xchg
fwait
push
sub
mov
es
add
mov
push
stos
std
out
scas
xor
stos
xor
dec
test
sbb
out
enter
mov
mov
aas
pop
push
movsl
clc
add
ss
xchg
dec
out
pusha
mov
push
mov
popf
jge
jmp
add
cmp
cmp
sbb
ret
popa
dec
mov
int3
sahf
test
pop
call
and
inc
adc
leave
ss
cmp
subl
lds
inc
insb
lahf
out
xor
add
aad
mov
adc
iret
shl
jne
leave
dec
pop
leave
push
mov
inc
lods
mov
imul
imul
dec
adc
sub
mov
mov
ss
jne
cmp
sub
xchg
pop
cltd
jmp
js
std
mov
shlb
pop
xchg
push
mov
push
lcall
cmc
lret
lahf
jp
xor
pop
mov
out
inc
cmp
rcrb
icebp
pop
mov
cmp
int
out
call
mov
xor
subb
sub
push
call
imul
mov
lods
mov
jge
pop
les
repnz
jbe
es
adc
notb
leave
xchg
sti
cltd
popf
inc
loop
pushf
add
je
jmp
dec
ds
jo
stos
lods
test
pusha
ja
les
daa
aaa
es
push
lret
mov
fists
arpl
out
ret
loope
lret
dec
mov
push
sbbl
push
call
cmp
cwtl
in
cmp
pop
cs
sub
inc
jmp
xchg
adc
inc
into
cld
mov
lea
jbe
jb
pushf
xchg
out
or
lods
arpl
test
jnp
iret
pop
push
xlat
fmull
mov
sbb
sbb
int3
lea
popf
mov
pop
mov
lahf
dec
xchg
jne
adc
push
xor
and
mov
filds
push
stos
shlb
cld
or
in
mov
out
fistpll
mov
mov
cmp
dec
aam
pop
dec
stos
enter
mov
pop
mov
int3
fs
mov
pop
imul
pop
js
and
xchg
and
jecxz
jmp
int
test
pop
pop
jg
outsl
ror
test
mull
inc
push
sbb
fidivrl
pop
stc
mov
popf
popf
rep
repnz
dec
or
rolb
sti
stos
test
mov
cmpsl
pop
xor
mov
push
ds
mov
jbe
stos
pop
add
fs
pusha
in
pop
mov
pusha
pop
and
mov
or
add
push
test
fs
add
cmpsl
jns
inc
outsb
std
sbbb
icebp
ret
push
sarl
insb
push
jl
test
bound
dec
jbe
fcoml
xor
dec
push
jae
pop
mov
notl
jo
bound
shlb
cs
andb
nop
ret
pop
mov
lock
in
jle
pop
add
fimuls
mov
addb
scas
in
pop
mov
mov
imul
jb
ret
cli
mov
mov
jle
arpl
lods
jno
mov
iret
test
mov
pop
ret
inc
and
jae
js
out
jp
subl
sbb
scas
arpl
xor
mov
dec
push
lea
hlt
cmp
jno
xchg
frstor
or
mov
sub
lret
adc
sub
in
cltd
jne
ljmp
fs
repz
dec
adc
mov
sahf
into
pop
cmp
push
adc
pushf
lret
sub
jle
xor
xlat
add
cmpsl
es
repz
cmpsb
adc
decb
sub
mov
jmp
in
xor
enter
jmp
adcl
cmp
hlt
xor
mov
sti
push
cltd
fs
les
jb
stc
popf
mov
out
cmp
movsl
jo
es
inc
lods
hlt
hlt
out
push
push
push
dec
mov
in
out
imul
dec
addr16
fistpll
add
dec
cltd
push
loope
jb
sbb
cmp
push
test
sub
dec
xchg
out
in
movsl
shrl
ss
jmp
dec
xchg
jle
outsb
push
clc
lret
cmp
inc
fbstp
inc
inc
sub
lock
wrmsr
mov
fstpl
xlat
or
lahf
testl
mov
mov
mov
stc
adcl
dec
dec
push
dec
jl
jo
dec
test
push
jmp
mov
mov
mov
out
stos
and
pop
mov
pop
jmp
xor
gs
pop
mov
inc
xchg
mov
lock
cmc
in
mov
popa
in
and
int
xor
popf
xchg
rcll
pusha
es
enter
repz
pop
mov
jp
mov
addr16
xor
movsl
inc
enter
inc
inc
scas
sub
and
dec
inc
sbb
sub
inc
pop
xchg
sub
std
jle
rcr
cmpsl
arpl
insb
mov
add
call
sbb
adc
mov
inc
xchg
pop
mov
pop
inc
push
xor
mov
xorl
cmpb
test
push
les
idivb
jb
fldenv
inc
cmpb
cmp
outsl
cmp
and
adcl
cmp
lock
sub
push
lods
jge
jmp
cld
push
call
lret
pop
dec
in
es
jno
cmp
cmp
add
fs
mov
xor
jecxz
iret
dec
arpl
mov
inc
xchg
cmpsb
cwtl
aam
xchg
mov
in
add
and
dec
xor
xor
sbb
out
inc
xchg
push
mov
repz
adc
push
lahf
pop
aaa
movsl
hlt
loop
mov
insl
ficoms
inc
lahf
outsb
js
pusha
or
mov
mov
mov
and
dec
fsubrp
cmpsl
add
testb
or
rep
push
icebp
out
xor
mov
pop
lret
andb
mov
es
push
fcmove
jbe
ds
cmp
mov
mov
stos
add
decl
adc
push
sub
js
in
sarb
test
and
loop
cmp
inc
punpckldq
xor
add
cli
jns
stos
je
xlat
ret
in
mov
aad
aas
and
adc
mov
icebp
pusha
push
popa
push
mov
mov
or
mov
push
xor
inc
int
popf
xchg
addl
movsl
jne
xchg
mov
pop
dec
jl
and
repnz
xchg
push
mov
lret
jle
daa
xor
xchg
popf
dec
adc
movsb
enter
pop
adc
rclb
sub
fs
sbb
leave
popa
mov
jmp
in
xchg
ds
jns
lods
repz
xchg
mov
jnp
pop
out
je
push
sub
xchg
or
fnstenv
jne
loopne
pop
sub
daa
ljmp
xchg
pop
stos
xlat
inc
jecxz
fdiv
testl
movsb
lcall
or
inc
and
pop
mov
loope
ss
mov
pushl
sub
sbb
imul
mov
stos
iret
mov
mov
cmp
aad
pop
xor
dec
cmp
jno
sub
and
int3
jg
lret
mov
cmpsb
nop
jmp
lds
repz
push
or
mov
jns
scas
enter
sarb
sub
push
test
cmp
imulw
push
pushf
dec
loop
inc
stos
sbb
cmp
jmp
and
jne
mov
sbb
frstor
addr16
pop
cmp
imul
in
xchg
mov
mov
imul
ss
pusha
jnp
jge
adc
mov
sbb
ret
adcl
cmp
lea
mov
daa
jle
lea
sbb
test
xchg
jo
or
lds
sub
mov
popf
into
aad
dec
out
lds
mov
call
xchg
imul
pop
push
shr
push
xchg
and
and
cmpsl
push
push
cmpsl
mov
clc
push
iret
mov
inc
sub
sbb
leave
mov
daa
lret
stos
mov
out
cmpsl
xchg
dec
sub
mov
jo
cs
adc
push
push
jge
sbb
insb
add
icebp
cwtl
inc
sub
cmp
rol
adc
push
neg
dec
jo
subl
pushf
hlt
repnz
faddl
out
dec
mov
jmp
enter
add
das
or
ljmp
push
negl
xor
lea
sub
jb
scas
loope
add
sub
cmp
popf
in
and
sub
push
shlb
fdivl
inc
jl
insl
cmc
lret
lock
ss
enter
push
jge
pop
popl
jnp
fdivp
cmp
ja
cmpsb
sub
test
push
add
dec
mov
cmc
outsl
cmpsb
sbb
or
outsl
iret
jp
fwait
test
lcall
pushf
cmp
mov
shl
jmp
mov
add
lret
dec
pop
fcoms
scas
pop
cmp
insl
cmp
jno
stos
cmp
xor
pop
xor
jnp
movsl
mulb
push
jl
daa
call
push
dec
lods
adc
std
or
mov
fcoml
mov
sbbl
mov
shlb
lret
shr
sub
mov
dec
in
lahf
inc
enter
scas
jns
inc
and
popf
xor
std
push
loop
cmp
out
outsb
inc
dec
fstp
stos
pop
cwtl
push
adc
sub
xor
lcall
cmp
inc
inc
lea
jp
sub
scas
sbb
xlat
pop
xchg
xor
fnstsw
adc
mov
jae
ja
nop
dec
or
mov
addl
dec
out
pop
inc
aas
jmp
push
xchg
leave
xor
mov
mov
into
xor
aad
cmp
pop
pop
mov
mov
iret
idivb
repnz
xchg
out
ds
add
pushf
gs
aam
movsl
ja
adc
add
bound
mov
shll
shlb
pushf
dec
jge
pop
fdiv
mov
mov
pop
mov
movsl
and
test
dec
lret
adc
xchg
mov
adc
out
je
outsb
out
cmp
pop
mov
mov
mov
pop
rorb
shll
ret
lcall
cld
cmp
addr16
loopne
mov
lods
imul
nop
aam
sub
sbb
dec
roll
inc
insl
jns
dec
sbb
leave
inc
mov
out
int3
mov
jmp
shlb
add
jb
adc
int
jp
inc
aas
frstor
cmpsb
clc
cmpsl
adc
pop
push
pop
mov
and
test
test
jb
lret
ret
mov
sub
push
jge
pop
inc
pusha
sbb
hlt
fdivr
xor
arpl
in
rcll
subl
jb
push
lock
jge,pn
cmpsb
sbb
mov
fcmovb
lods
es
pop
das
inc
lods
xor
test
sbb
clc
dec
push
sub
insb
jmp
es
into
jp
push
xchg
mov
mov
and
arpl
lods
sub
stos
int
es
sar
cmc
push
jo
jnp
pop
sub
mov
xchg
rolb
icebp
pop
xchg
mov
cmpsb
ja
adc
imul
mov
ret
sbb
std
loop
add
mov
leave
xchg
lret
and
sahf
dec
pop
fistpll
stos
inc
shrl
jle
aad
inc
jnp
andb
in
xchg
shlb
aaa
mov
xchg
and
rcl
push
out
cmp
jo
xchg
loopne
cmp
pop
pop
icebp
pop
pop
in
mov
adc
inc
cmpsl
loopne
push
pop
out
enter
ret
push
imul
mov
lds
cmp
mov
pop
cli
xor
pop
sbb
dec
into
subl
inc
stc
mov
sbb
divl
xchg
aam
mov
mov
mov
cmp
mov
jb,pt
fimull
mov
shrb
pop
sbbl
sbb
cltd
sahf
jno
xchg
add
test
push
mov
dec
pop
sub
nop
aad
jmp
and
sub
inc
xchg
enter
adc
rcll
mov
cmp
ljmp
les
cmp
inc
lods
call
addb
mov
dec
lods
sti
push
and
mov
jb
jo
lock
repnz
movsb
cmp
in
pop
inc
adc
add
pop
push
mov
scas
out
divl
pop
sbb
and
dec
dec
bound
mov
adc
std
into
icebp
mov
mov
mov
xchg
dec
or
dec
out
sub
aas
dec
cmp
movsb
mov
cld
aad
test
arpl
push
sahf
push
sti
pop
inc
cs
in
neg
test
push
mov
mov
push
lahf
int3
cmpsl
gs
xchg
sbb
adc
icebp
mov
jnp,pn
cltd
jae
ss
mov
lods
mov
dec
imul
mov
mull
jne
dec
mov
push
inc
fstl
lahf
and
rclb
push
xchg
cltd
pop
push
sub
pop
push
jbe
sahf
xor
jae
mov
sbb
dec
fisubrl
inc
stc
popa
int3
popa
sbb
in
adcb
jnp
dec
int3
cmp
es
dec
gs
or
or
lret
cmpsl
shl
xchg
sub
inc
jg
das
cmp
pop
cmp
push
add
xchg
add
faddl
inc
lcall
test
into
sub
push
mov
outsl
adc
inc
test
add
nop
mov
jno
inc
adc
fwait
dec
cmp
jge
push
xor
dec
daa
adc
mov
hlt
jae
xchg
jo
or
xchg
in
enter
ja
clc
jo
in
sbb
in
repnz
je
sbb
cmp
fwait
sbb
sarl
sub
into
mov
in
mov
pop
nop
lea
cmpsl
ret
cmpsl
dec
daa
cld
fistl
and
jle
and
enter
push
incb
add
mov
int3
or
inc
xor
movsl
pusha
ja
jbe
clc
xor
mov
push
arpl
movsb
dec
gs
xchg
xchg
pop
cmp
sub
in
ret
shlb
fstl
add
loopne
rorb
cltd
pop
mov
cmp
cld
cmp
mov
into
sub
jns
mov
nop/reserved
mov
pop
xor
add
popa
rorl
jge
in
fwait
mov
stc
loopne
sub
xchg
sbb
adc
dec
adc
xor
dec
inc
pop
test
xorl
mov
xor
or
lret
pop
inc
pop
test
ret
sub
xchg
nop
test
js
pop
mov
xorl
mov
cmpsl
add
dec
imul
xchg
sbb
adc
push
into
xchg
std
lret
loop
xorb
into
pop
jo
pop
mov
mov
push
pop
fwait
jle
inc
and
rcrb
imul
jle
test
lret
mov
mov
add
call
or
jo
loop
dec
inc
mov
mov
cld
dec
pop
jecxz
cltd
push
aas
mov
and
jecxz
cld
stos
push
and
sub
int3
xchg
out
xor
xchg
lret
dec
mov
adc
jl
xor
xor
and
mov
mov
sub
sub
test
mov
or
dec
ret
or
cmp
pushf
dec
inc
mov
es
pop
mov
pop
inc
push
sub
sub
loop
stos
pop
cmp
push
sub
xor
out
xor
fs
std
sub
adc
mov
sub
add
mov
push
inc
pushl
mov
mov
xorl
push
test
fstpt
push
mov
insb
dec
jnp
inc
pop
ret
xchg
nop
sar
dec
xchg
xor
jnp
movsb
or
mov
pop
mov
cmp
ljmp
jmp
jmp
mov
jg
fs
stos
lahf
and
sbb
leave
lods
cmp
in
mov
inc
jns
fdivrs
jmp
lret
cmp
bnd
shlb
call
mov
mov
cli
push
daa
sub
mov
popa
jo
outsb
mov
dec
divb
add
icebp
je
je
pusha
mov
repnz
xor
leave
xchg
mov
mov
inc
jno
pop
int3
int
loop
inc
ds
addr16
ss
jo
pop
cmp
push
popa
sarl
mov
add
push
sub
int
nop
inc
icebp
das
hlt
shrl
sub
pop
mov
adcb
rolb
bound
stc
mov
loope
stc
cmpsl
jg
popa
sbb
jnp
pop
dec
movsb
xor
inc
filds
iret
fcmovne
cmp
fnclex
lret
insb
bound
dec
dec
andb
insb
ljmp
call
sbb
mov
sub
cmpl
mov
xor
mov
cs
cwtl
lea
inc
jmp
iret
aam
jae
test
ja
inc
lock
pop
scas
aas
sbb
xor
mov
test
inc
push
ss
scas
repz
leave
arpl
cmp
xchg
pop
mov
mov
inc
xchg
lret
add
pop
stc
push
cmpsb
imul
out
lods
add
sarl
sbb
fs
mov
xlat
pop
mov
inc
xor
xor
add
xchg
out
aaa
ret
mov
push
aas
mov
stos
ja
add
xchg
popa
mov
pop
jmp
daa
sahf
sub
pop
add
xchg
add
cmpsl
bound
mov
sub
ds
sbb
and
push
test
ds
jno
jmp
lock
inc
jns
outsb
test
xchg
js
add
test
daa
call
xchg
adc
xchg
pop
jns
into
dec
or
fwait
clc
xchg
dec
jp
mov
aaa
mov
add
cmp
leave
shrb
xchg
std
int3
mov
sub
pop
cltd
push
shlb
xorl
shrb
std
mov
cmp
fisubrl
inc
loope
lcall
popa
push
xchg
push
sub
jmp
mov
cmp
fisubrl
adc
insl
dec
out
leave
xchg
fildl
sbb
jmp
pop
movsl
cmp
ret
mov
pop
cmp
or
sbb
sub
xchg
jge
cmpsb
inc
and
test
mov
push
aaa
add
sbb
lahf
fs
call
sbb
iret
xchg
dec
sbb
cmp
repnz
scas
mov
pop
push
xchg
mov
push
add
pop
dec
imul
dec
xchg
fwait
lret
lea
mov
adc
addb
addr16
lcall
dec
cltd
push
cmpsl
push
loopne
imull
sub
adc
repnz
jl
shlb
mov
xor
in
or
xlat
inc
mov
aam
dec
test
daa
sahf
mov
invd
rol
pusha
inc
leave
cmp
and
adc
fisttps
into
or
dec
pop
std
mov
push
aad
push
movsb
inc
lds
rep
das
cmp
shrl
and
push
imul
fsubrp
imul
pusha
sub
mov
push
lea
xchg
push
inc
mov
mov
mov
mov
mov
cmpsl
push
idiv
pop
ds
xor
inc
hlt
jmp
lods
inc
cli
fsubrl
xchg
cmp
adc
or
in
xchg
in
call
dec
xchg
cmp
mov
pop
or
cmpl
out
in
and
jnp
sub
and
and
jge
outsl
mov
inc
cltd
or
mov
lock
lret
cmc
jle
adc
sbb
cld
imul
sarb
xchg
mov
jno
aas
movsb
add
xlat
pop
add
ret
dec
jle
je
nop
fsubl
lret
xadd
cli
mov
xlat
andl
movsl
push
aad
lret
mov
les
xchg
repnz
mov
sub
adc
push
xchg
mov
xlat
mov
into
jne
pop
gs
popa
loopne
push
and
fidivs
jne
push
out
call
xchg
inc
xchg
xchg
je
movsb
dec
hlt
pop
jmp
mov
mov
cmp
addr16
rcll
sbb
les
aas
lahf
fwait
ds
js
icebp
sub
mov
mov
cmp
in
dec
pop
add
andb
add
fisttpll
push
sub
stos
mov
sbb
cs
aas
jns
mov
popf
fcoms
and
dec
lcall
fmull
adc
or
sub
sbb
inc
ja
inc
aam
cmp
aam
loop
dec
add
stc
ljmp
icebp
sbb
fmull
sbb
psraw
xchg
mov
jg
mov
mov
mov
jno
imul
xor
pop
mov
sub
aam
insl
cmpb
test
sbb
mov
inc
cmp
jge
loop
and
cli
insb
repz
dec
mov
dec
cmpl
insb
imul
lret
leave
xchg
xchg
fwait
andl
rcrb
xchg
jb
inc
mov
in
xchg
loopne
mov
filds
inc
loope
lock
in
sub
sti
scas
leave
je
clc
xchg
fwait
lret
sub
xchg
fwait
in
mov
pop
push
fdivrp
scas
inc
movsb
sti
jne
mov
cmp
xor
mov
xchg
in
movb
dec
ja
mov
bound
jp
add
add
rorl
sarl
cmp
lret
lret
fldt
shrl
enter
cmc
sbb
mov
int
xchg
xchg
mov
orb
mov
mov
cli
mov
push
cmp
push
pop
jnp
lret
jmp
push
cli
push
dec
or
inc
xor
fwait
xor
push
sub
xchg
jb
xchg
xchg
jmp
daa
aad
adc
adc
nop
sahf
inc
mov
popf
xchg
adc
imul
cmp
xor
xor
mov
iret
and
mov
adc
divl
lock
push
cmp
scas
cmpsb
fs
aas
scas
jbe
xchg
stos
adc
mov
call
hlt
inc
mov
pop
fsubl
mov
test
shl
loope
jbe
adc
cwtl
dec
or
insb
mov
sbb
scas
divb
mov
ljmp
jnp
call
pushf
scas
adc
or
insl
dec
push
xorb
cld
negb
shrl
cmp
insb
subb
shlb
cli
pusha
cmpsb
inc
loop
inc
pop
arpl
and
outsb
jnp
mov
and
jmp
imul
clc
clc
mov
pop
pop
test
je
std
rorb
cmc
jge
inc
pop
add
lds
adc
pop
mov
insl
xchg
lods
dec
int
pop
sub
fisttpll
mov
arpl
notl
loope
shll
repz
cwtl
and
inc
aas
loope
repnz
cmp
fisubl
mov
push
sub
ficoms
jmp
dec
jg
arpl
add
outsb
in
cmc
fstpt
test
xchg
dec
pop
jno
or
mov
fldt
or
bound
mov
into
add
jecxz
jl
or
xor
jp
rcr
cmp
dec
mov
push
roll
movsl
cli
shl
pop
enter
das
sbb
test
xchg
int
js
push
lahf
into
and
add
cld
out
loop
or
popa
cmpb
jo
fsubp
out
xchg
mov
cmp
lret
std
pop
ss
mov
sub
nop
xchg
pop
leave
lea
outsl
insl
adc
mov
cmp
inc
xor
push
nop
pushl
adc
in
and
pushf
mov
leave
mov
out
push
movsl
shrb
scas
xchg
popf
test
lock
ror
aas
add
dec
aam
mov
dec
mov
xchg
repz
cs
testl
mov
xor
punpckhwd
fstp
jno
add
lods
out
cmp
push
mov
dec
and
mov
lret
cmp
cmpsb
xchg
sub
add
sub
test
pop
jmp
icebp
into
pop
jnp
dec
out
push
jecxz
ret
jnp
pop
sub
mov
jns
and
jle
shrl
test
fincstp
mov
inc
and
scas
jg
dec
jmp
jecxz
adc
mov
ret
dec
push
xor
mov
sbb
xor
cmp
scas
push
aaa
ficomps
int
outsb
stos
sub
dec
mov
rcll
cmc
and
stos
fiaddl
scas
addr16
rcl
sub
and
or
add
dec
or
or
out
addr16
movsl
sbb
pop
cltd
aam
sarl
cmpsl
pop
pushf
hlt
fimull
and
mov
mov
divb
mov
lret
and
sbbb
mov
enter
aaa
mov
lods
in
cmp
sarl
insb
movsb
add
lods
xor
cld
ja
jl
inc
sub
pop
addr16
push
push
ja
pop
xor
pushf
fiaddl
fsubrl
mov
add
cwtl
sbb
cmpsb
mov
in
bound
xor
daa
mov
mov
cmc
push
insb
sbb
in
fdivrs
mov
and
out
aas
cmc
fiadds
fcoms
mov
inc
aam
lods
and
movsb
lods
xor
inc
jp
loopne
insb
pusha
cmpsb
es
cmp
sbb
test
mov
and
xchg
rclb
cmp
test
bound
push
mov
push
in
bound
hlt
add
gs
imull
and
push
mov
loopne
mov
mov
mov
aam
sbb
data16
lock
xor
roll
mov
jg
push
gs
jb
cmp
mov
cld
pop
jmp
push
sub
inc
jl
push
dec
jmp
repnz
outsb
pop
sbbb
cmp
inc
jg
cmp
push
int3
int
mov
adc
push
push
test
out
idivl
imul
lret
insb
notl
cld
faddl
ja
test
sti
sbb
int
jmp
inc
dec
sbb
cmp
mov
int
rcrl
xchg
test
xchg
sbb
and
sahf
or
pop
test
lahf
and
pop
das
fidivl
mov
nop
add
std
into
test
jl
sbb
jl
stos
pop
scas
push
into
jl
out
repz
dec
sub
ds
jbe
sahf
or
fildl
push
sub
jp
push
sbb
in
mov
cmp
mov
or
rcr
xchg
cmp
hlt
stos
sbb
add
mov
scas
mov
inc
or
cld
bswap
lret
ret
sub
stos
and
mov
pop
outsb
mov
outsl
dec
cmp
mov
jnp
xchg
mov
jle
or
iret
popa
push
dec
pop
cmpb
sbb
scas
ljmp
loop
aam
pop
cs
cmp
outsl
loope
cmp
imul
shl
cld
adc
mov
pop
mov
dec
aaa
les
mov
mov
cmp
push
push
ss
pop
divb
xlat
jb
hlt
inc
push
and
push
jbe
repnz
pop
adc
lds
inc
dec
xchg
jp
mov
xchg
bound
sbb
lret
push
jno
ljmp
popf
sbb
xchg
xorb
push
or
cwtl
sbb
daa
dec
repz
add
rorb
mov
inc
pop
cmp
sti
iret
nop
mov
jle
aam
and
mov
jg
dec
xchg
jne
outsl
pop
loopne
pop
xchg
xchg
mov
cmpsb
mov
cmp
xlat
mov
add
inc
jmp
fs
stc
out
movb
or
pop
fstpt
imul
and
push
xchg
cmpsl
jg
push
mov
jmp
iret
lret
mov
mov
dec
mov
sub
es
inc
fs
fwait
rclb
outsl
cmp
test
repnz
dec
pop
add
popf
jg
outsb
push
lock
test
and
outsl
push
std
dec
mov
mov
js
mov
sbb
xor
arpl
out
or
mov
inc
test
in
push
pop
popa
mov
jb
mov
clc
fwait
jb
arpl
mov
jp,pn
lds
ds
mov
es
lahf
lock
push
cmp
pusha
jle
pop
fnstsw
xchg
mov
mov
sub
mov
mov
std
xchg
push
dec
loopne
mov
cmpsb
lahf
lock
jne
dec
push
xchg
cs
sbb
sbb
pop
pusha
mov
mov
or
sub
mov
decl
and
mov
insb
push
mov
arpl
inc
scas
je
test
pop
mov
push
fiadds
je
jbe
lret
mov
mov
jb
lret
outsb
mov
push
lahf
dec
jae
call
xor
push
sbb
test
lahf
and
loopne
mov
cltd
pushf
inc
dec
jae
cmp
stc
push
daa
xchg
aad
jnp
lods
lds
fadds
aam
pop
pushf
add
pop
mov
sub
mov
fisttpl
add
je
or
ljmp
or
adc
pop
mov
mov
lods
lods
std
adc
dec
popf
xchg
sub
push
mov
or
sub
jmp
xor
sarl
pop
sbb
cmp
mov
loopne
push
ja
subl
adc
in
dec
lcall
pushf
out
lea
mov
jge
and
enter
push
lock
adc
mov
mov
insl
cmpsl
push
sbb
stos
fdivrp
loope
jle
sub
push
jge
or
in
mov
mov
ds
adc
js
lds
fwait
pop
jbe
in
mov
into
int
out
inc
movsl
addl
lock
jg
popa
inc
or
fwait
mov
je
lret
mov
cmp
ret
enter
push
or
jb
aas
mov
aas
mov
out
mov
repz
test
jnp
sahf
pop
fmuls
into
hlt
jg
cld
mov
clc
mov
scas
ficoml
imul
push
sahf
repz
icebp
jns
stos
adc
lret
in
std
add
sbbl
sub
and
daa
mov
out
xlat
mov
mov
pop
movsl
pop
push
iret
enter
and
jo
mov
js
pop
jnp
jno
xchg
ja
adc
ja
divl
sbb
jmp
mov
fstpt
adc
jbe
xlat
jp
inc
dec
ja,pn
inc
incb
in
push
aad
aad
cmc
mov
or
cmpsl
test
stos
or
imul
rol
sub
xor
mov
mov
xlat
test
cmp
xorl
fs
push
pop
pop
outsb
mov
ja
ret
cmp
pop
dec
sahf
jmp
mov
out
cmp
iret
mov
in
xor
hlt
jns
lods
adc
mov
add
xor
xlat
mov
sbb
arpl
das
insb
sbb
sbb
push
and
lods
push
sahf
or
dec
pop
cltd
xchg
pop
adc
add
pop
outsb
mov
or
cmpl
cltd
enter
jmp
stos
ret
xor
test
outsb
and
hlt
pop
rorb
fcompl
xor
lret
sbb
jno
xchg
out
or
lea
jne
dec
sarb
pop
or
in
sbb
pop
inc
fadd
cmpb
cmpsb
push
xchg
or
mov
js
movsl
mov
lods
int
xor
lods
mov
inc
dec
mov
fwait
inc
pop
cmp
outsl
dec
push
or
and
and
lods
dec
psraw
pop
dec
mov
lods
jns
sub
jp
pop
push
cmovle
iret
mov
push
rclb
mov
dec
loope
fnstcw
xor
inc
lods
lds
xchg
ficompl
out
adc
jns
in
js
test
test
mov
adc
fwait
es
dec
into
mov
fwait
sub
mov
add
jecxz
stc
sub
cmp
lea
cmp
pop
inc
outsb
cmp
aad
sbb
sbb
mov
loop
mov
or
addl
sbb
call
mov
sub
add
es
cs
adc
bound
popl
and
cld
fiaddl
lahf
rcrl
mov
and
iret
add
cmp
pop
push
mov
sbb
lcall
mov
push
and
xor
icebp
xchg
lahf
mov
rclb
das
scas
cmp
cmp
pop
lods
cld
ss
mov
into
mov
push
js
es
fstps
inc
and
cmpl
popf
sahf
int3
movsb
sub
jb
mov
xchg
ret
cmpsl
xor
ja
push
icebp
fsubr
add
xor
jge
xor
outsl
xor
inc
lods
test
adc
dec
mov
or
inc
repnz
sub
imul
cmc
ret
inc
daa
mov
adc
nop
mov
mov
pop
out
jb
xor
fstl
in
jmp
imul
in
jecxz
ret
xor
out
movl
outsl
gs
xor
mov
jp
xor
cmp
mov
mov
popa
js
lret
cmp
or
call
stos
cli
xor
pusha
cmpsl
and
pop
icebp
or
rorb
mov
pop
xor
pusha
mov
push
enter
ljmp
mov
xchg
mov
pop
mov
and
sarb
or
push
sarb
xchg
adc
and
pop
sbb
loopne
inc
add
sub
outsb
inc
testb
fcmove
out
xchg
shl
pushf
cs
inc
xchg
push
stos
test
shrl
pop
jg
stos
fdivs
jo
test
mov
ss
arpl
lods
pop
pushf
xor
stc
cmp
add
subb
mov
scas
cltd
iret
insb
shufps
into
iret
mov
cld
pop
and
mov
in
adc
add
xorb
ss
or
ljmp
setp
cmpsb
and
and
adc
mov
ja
cmp
cmc
dec
dec
push
pop
sbb
sub
std
push
in
sbb
lcall
xor
xchg
add
mov
xchg
js
dec
aam
xchg
scas
inc
test
mov
test
int3
or
pop
lock
rcrl
insb
inc
xor
add
dec
stc
ds
lahf
xor
rclb
cmp
xor
mov
popf
pusha
jno
mov
out
shll
inc
mov
repz
or
cmpsb
icebp
pop
out
cltd
pextrw
addr16
popa
cwtl
xor
dec
and
subb
or
lds
popf
mov
xchg
loope
pop
inc
push
lds
pop
not
mov
add
dec
leave
out
mov
mov
and
int
cmp
decl
adcb
ficoml
out
cmp
adc
stos
popf
das
jae
mov
mov
cmp
pop
sti
push
xor
cmpsl
dec
inc
aaa
dec
arpl
cmp
cs
jnp
pop
cld
pop
jnp
enter
iret
add
inc
or
pop
mov
in
push
xchg
jbe
or
std
mov
jge
fsubrp
push
add
inc
mov
cli
es
inc
inc
daa
add
mov
mov
lahf
xchg
push
pop
hlt
pop
test
adc
mov
xchg
push
jmp
fcmovnu
jmp
sub
and
psubd
in
push
push
add
pushf
popa
adc
lret
pop
popf
sarb
mov
add
nop
cmp
mov
test
fdivs
mov
pop
and
add
mov
mov
fsubrl
sub
loope
add
fsubrl
test
push
in
jp
adc
stos
pop
push
adc
lods
rorb
jg
mov
inc
lods
in
pop
inc
sbbl
xchg
gs
das
icebp
fcoml
test
and
sub
pop
xchg
mov
stc
or
notl
mov
sub
mov
pop
testl
xor
jo
mov
add
pusha
outsl
mov
and
in
rolb
dec
pop
mov
loopne
mov
in
or
in
push
adc
dec
jle
rclb
inc
mov
jns
into
das
hlt
inc
cli
and
push
addr16
pop
push
push
xchg
pop
std
test
testb
xchg
sbb
cltd
js
mov
test
sub
ljmp
inc
xchg
cmp
lods
dec
das
pushf
into
jecxz
xchg
dec
dec
jge
mov
leave
jno
test
out
into
bound
add
andb
or
out
jp
sub
mov
int3
inc
ret
in
jo
fisttpll
mov
insb
inc
mov
mov
inc
xor
fnstcw
out
adcl
lret
and
repz
push
adc
pop
or
mov
mov
mov
jl
cwtl
pop
add
hlt
fnstsw
hlt
adc
sub
in
and
insl
mov
add
test
aam
push
fidivl
mov
movsb
jmp
jp
jb
inc
dec
xchg
mov
jno
fnstsw
leave
inc
aas
addr16
jmp
pop
imul
daa
insl
out
dec
pop
aas
xor
xchg
pop
and
sbb
sahf
leave
ja
and
outsb
jge
test
mov
xor
testb
adc
and
xlat
mov
mov
jbe
test
shr
mov
sbbb
jmp
add
jnp
jns
fsubrs
push
sub
jp
jl
mov
adc
push
je
mov
push
lock
test
insl
add
xor
or
sub
sbb
mov
lea
out
ds
and
push
push
xorb
nop
or
gs
or
pop
jns
ret
add
jne
fwait
pop
sbb
sub
mov
clc
inc
in
sti
leave
dec
push
hlt
out
stos
lret
or
aas
cwtl
mov
push
cli
pushf
pop
sub
jb
les
rcll
in
mov
fmull
outsl
jne
mov
rcl
sbb
ret
cmpsl
mov
rolb
test
leave
or
mov
clc
mov
fcoms
out
push
mov
xchg
mov
in
adc
or
adc
adc
cmpsl
movsl
xchg
pop
repnz
cmp
and
ret
inc
jns
lock
aam
xchg
xor
and
mov
xor
into
arpl
adc
lds
les
test
sub
mov
sti
outsb
in
cmp
jnp
mov
dec
inc
pop
mov
jle
mov
dec
add
sbb
enter
clc
jle
or
rolb
jge
das
sbb
scas
lret
ds
adc
pushf
in
das
pop
repnz
pop
dec
cs
insl
inc
fdivs
ret
inc
add
or
and
les
iret
ret
xchg
cmp
or
sub
cmpsb
adc
jge
out
xlat
and
addl
iret
pop
shrl
shrb
jbe
lret
mov
xchg
pop
cmp
xchg
ss
mov
mov
inc
faddl
gs
add
xchg
dec
outsl
or
lcall
xchg
sub
cmp
xor
ficomps
xor
jle
push
push
daa
insb
ss
lahf
dec
add
xchg
inc
insb
lods
lock
xor
dec
scas
sub
jno
pushf
mov
fwait
test
cmpsb
push
xchg
fildll
cmp
rolb
mov
adc
fcmovnu
sahf
xchg
adc
shll
xchg
lods
pop
out
cmp
xorl
in
xchg
xchg
test
push
movsl
pop
mov
int3
or
sbb
push
lds
xor
add
rcrl
mov
add
cmp
insl
xchg
rcrb
sbb
or
sarl
movsb
movl
pusha
scas
inc
cwtl
or
cld
and
sbb
mov
mov
dec
xchg
addl
rcll
sarb
mov
adc
cli
push
nop
mov
sti
jmp
insl
mov
insb
mov
out
insl
out
xchg
pop
inc
mov
pushf
mov
fs
mov
jo
push
jns
and
xchg
cld
xchg
cmpl
xchg
dec
cmp
fwait
add
mov
push
jne
or
adc
xor
pop
sahf
sbb
inc
sbb
xchg
mov
scas
adc
mov
loop
test
jge
lods
test
iret
xor
cmp
ror
mov
pop
lods
repnz
jmp
pop
inc
shll
fs
dec
jg
jle
cld
lock
sbb
xor
in
insb
dec
inc
mov
adc
xlat
jns
mov
xchg
insb
cmpsl
sbb
inc
push
in
pop
jmp
repnz
xor
fbld
mov
in
mov
mov
mov
and
sbb
cltd
xor
ds
aas
cmp
sbb
pusha
rcrb
fwait
adc
in
jnp
xchg
cmp
xor
push
push
mov
sub
fiadds
shlb
push
test
insl
jp
out
adc
and
cmp
dec
sub
sub
dec
lcallw
test
arpl
roll
push
lods
in
xchg
cmp
les
int
mov
push
xchg
fnstcw
jp
add
ret
fistpl
inc
cmc
and
jge
lret
call
lret
cmpsb
add
test
ret
mov
sbb
xorl
js
pop
stc
sbb
les
add
and
sub
into
in
cwtl
cld
out
or
cmpsl
outsl
aaa
cmp
mov
inc
mov
mov
xchg
jecxz
mov
out
pop
outsl
adc
arpl
dec
cmp
and
sarb
popa
test
les
push
cwtl
xchg
push
pusha
out
shl
sbb
mov
adc
sahf
in
mov
sahf
fs
ret
push
sbb
sbb
fstpl
push
mov
sub
scas
lds
and
add
movsl
pop
sti
enter
and
out
push
outsl
xchg
mov
push
xchg
add
adc
sbb
sub
sub
mov
popa
lods
inc
inc
or
fildl
mov
sbbb
leave
adc
cmp
jnp
jb
inc
lret
jg
gs
mov
add
shlb
out
cmpsl
lods
int
ljmp
jl
cmove
push
lock
sbb
int
pslld
xor
jbe
adc
gs
gs
xor
mov
xchg
in
push
pusha
dec
inc
push
sub
push
add
push
mov
xor
hlt
mov
stc
js
les
lds
inc
mov
ja
lds
js
pop
test
out
icebp
adc
jb
dec
push
aas
jg
xor
jbe
cmp
out
jmp
out
mov
pop
add
xor
pop
jg
mov
movsl
and
das
lods
push
mov
into
shrb
aas
subl
and
subl
xchg
daa
mov
push
cli
stos
push
pop
std
pop
pop
sub
mov
cs
cmc
pop
cmp
push
push
push
mov
push
fldenv
sbb
call
cmc
xchg
dec
shr
gs
in
xchg
xchg
icebp
pop
or
fldcw
mov
jo
sbb
fldcw
xor
add
fs
xor
sub
adc
mov
cmpb
mov
pop
push
stos
xor
ret
fldenv
mov
or
push
pop
mov
add
add
mov
cmp
rorl
test
xchg
fmuls
sub
xor
pop
cmp
fwait
sarb
or
movsb
mov
lret
fcmovbe
mov
lea
scas
pop
jo
call
mov
mov
movsl
imul
or
sub
jg
cld
ss
fwait
bsf
mov
imul
pop
subl
or
or
out
lods
push
jecxz
xchg
out
and
lea
arpl
add
sub
arpl
test
jl
int3
add
xor
pop
stc
mov
fldl
mov
xorb
cmp
into
mov
xor
data16
jo
daa
insl
sbb
scas
in
hlt
aam
or
fiaddl
push
pop
leave
and
pop
rcll
xchg
mov
jae
mov
aas
jno
sub
jg
loopne
pushw
test
ret
sub
subb
push
shlb
cli
aaa
repz
hlt
xor
rorl
out
add
roll
andl
out
cmpsb
cmp
adc
jns
pop
sbb
push
push
xchg
pop
cmp
sub
push
dec
jle
cs
fnstcw
adc
sti
cmp
outsb
and
leave
fisttps
add
add
jle
ds
aas
or
adc
cmpb
jmp
lcall
ss
lcall
adc
sub
jle
bound
stc
sub
xor
sbb
pop
repz
pop
dec
xchg
and
inc
inc
stos
push
leave
pushf
dec
insl
or
inc
ret
pop
cmp
or
aaa
scas
andl
jl
and
enter
pop
leave
sub
mov
pop
jg
dec
jecxz
adc
ret
jle
and
in
ljmp
sbb
movsl
sub
pop
addr16
sub
arpl
fisubs
fdivl
add
add
cmp
lods
gs
in
mov
shlb
arpl
sbbl
inc
sti
and
xor
mov
xchg
mov
dec
add
jmp
aad
jge
dec
push
inc
inc
xorb
push
pop
out
movsb
dec
cmpsl
in
jge
es
jnp
shll
out
divl
stos
ja
test
mov
cmpsl
or
outsl
sbb
mov
stc
orl
aad
pop
sbb
dec
out
lea
js
mov
imul
sub
and
sbb
test
jle
mov
or
cmp
nop
pop
push
pop
sahf
jb
nop
lcall
cmp
lahf
pusha
xchg
fwait
cmpsb
push
sti
push
cli
push
adc
mov
or
push
xchg
addr16
and
pushf
pop
push
daa
mov
add
popf
jae
leave
pop
push
sub
call
mov
inc
or
jb
nop
pop
inc
out
jmp
jae
ljmp
xchg
mov
pop
lods
hlt
repnz
add
test
push
shl
repz
sbb
inc
jns
pop
xorb
testb
popf
adc
call
sub
jle
lods
add
inc
pop
insl
mov
adc
int
fmul
sti
mov
cmc
lock
je
push
pop
xchg
loope
sbb
jecxz
adc
leave
fisubrl
icebp
ljmp
addr16
dec
jmp
outsb
pop
sahf
mov
scas
out
sbb
filds
or
and
aam
jo
mov
mov
enter
test
imul
pop
into
pop
mov
pushf
lods
mov
decl
ficomps
clc
push
popl
add
fisubl
cmovs
jae
push
jns
mov
xor
pop
je
or
xchg
pop
jnp
lods
pusha
sbb
ss
push
inc
mov
xor
dec
mov
adc
repnz
outsb
mov
je
ss
or
fcmovb
jecxz
adc
subb
gs
shrb
mov
pop
rcrl
cmp
scas
pop
cmp
add
mov
pop
insl
sub
xchg
pop
sbb
lret
xchg
out
mov
das
mov
add
fwait
pop
mov
mov
pop
cld
repz
xchg
loopne
jmp
sahf
mov
inc
aad
sub
nop
mov
add
or
flds
cmp
xor
idivb
lretw
xlat
mov
sbb
les
inc
lods
outsb
pop
sub
fwait
pop
scas
fdivrl
mov
dec
jno
jbe
jne
xor
or
into
les
rol
cli
pop
add
fdivr
gs
aad
mov
dec
xor
jle
dec
ja
add
mov
dec
repz
cmpb
fsubr
mov
and
xor
mov
sub
sub
xchg
push
push
mov
xchg
shll
jg
std
xor
xchg
xor
mov
inc
cmp
and
pop
xor
out
adc
sbb
jge
outsl
mov
sbb
cmp
adc
fwait
loope
lahf
dec
xchg
fs
sbb
mov
jp
jnp
pop
fsub
in
xor
pusha
stos
add
mov
xchg
movsl
mov
adc
iret
jg
mov
enter
sub
xor
loope
jge
das
fcoms
hlt
mov
push
mov
or
adc
outsl
lsl
rcr
xchg
cld
mov
pop
lahf
jp
inc
push
das
enter
sbb
and
lea
fs
arpl
scas
pop
push
clc
sbb
inc
jl
push
inc
imul
mov
in
pusha
push
shll
lahf
or
or
mov
push
imul
shl
pop
xchg
scas
and
jns
out
dec
sahf
loopne
jg
xor
jge
popf
push
push
test
sub
push
mov
mov
xchg
shrl
jo
and
sub
inc
cmp
inc
in
out
mov
movsl
lahf
and
ds
xor
dec
shll
imul
ljmp
das
sbbl
sbb
jecxz
sahf
es
add
pop
rcrb
jecxz
insb
dec
mov
jb
push
in
jo
repnz
adc
adc
je
xor
loop
out
ret
jns
dec
ja
les
push
xor
xchg
inc
fsub
fildll
add
test
xchg
pop
test
and
inc
fists
addr16
int3
sub
adc
and
mov
movsb
lock
mov
inc
lahf
shr
mov
mov
dec
into
cltd
mov
nop
push
xor
outsb
out
pop
mov
mov
adc
sub
fidivrl
es
sbbb
add
outsb
bound
or
repz
out
in
jl
cmp
cmp
mov
imul
repnz
in
stos
add
inc
out
rorl
and
or
gs
jb
mov
loop
arpl
nop
fsubr
add
inc
es
xchg
cmp
add
scas
je
sbb
out
cmpsl
push
mov
pop
inc
daa
cwtl
aam
flds
sub
or
push
push
xor
inc
add
pop
sahf
lret
js
push
rcrl
cmp
jns
jbe
or
jge
mov
sub
lahf
ja
pop
mov
pop
lcall
or
jl
push
and
xchg
mov
mov
testl
les
jae
imul
xchg
xor
mov
dec
popa
sahf
dec
jg
xchg
fs
and
lea
enter
jp
int
or
out
sbb
mov
sbb
cs
int
addr16
push
int3
dec
cmpsl
xchg
xchg
out
mov
das
addr16
adc
clc
dec
cld
mov
xchg
jne
pusha
stos
or
xchg
sahf
xchg
clc
lods
jle
dec
out
cmp
sbb
inc
idivl
imul
lret
loopne
loope
stos
push
rcll
dec
mov
and
xor
sti
mov
repnz
or
enter
hlt
xchg
imul
sub
scas
add
test
loopne
inc
lods
sbb
movsb
ds
mov
das
shrb
dec
nop
cli
in
xchg
sbb
and
je
or
into
mov
sbb
xchg
inc
cmp
jae
jae
or
cmp
xchg
push
lea
inc
xor
cld
sahf
js
mull
outsl
or
sub
inc
sbb
jl
test
into
cwtl
add
and
flds
cmp
in
push
ds
int
adc
xor
dec
outsb
sbb
rorl
lret
jns
jecxz
mov
cli
lea
xor
ret
inc
test
xchg
int3
pop
or
sarb
or
add
mov
stos
xor
popf
push
imul
dec
popa
imul
fs
cwtl
insb
jno
bound
loop
fildll
je
xchg
repz
inc
dec
pop
in
jb
lds
aad
jo
mov
pop
push
mov
sbb
imul
sbb
push
cmpsb
and
sti
xchg
mov
nop
adc
scas
icebp
pop
jo
adcl
xchg
lcall
sbb
rcrb
pushf
cmp
cli
jg
ja
adc
inc
sbb
push
dec
dec
mov
or
stos
cs
mov
mov
jne,pt
ret
push
xchg
std
es
mov
push
fwait
mov
sub
dec
call
popa
push
lcall
rolb
call
outsb
loopne
fistps
mov
jne
mov
fimull
pop
decb
ja
mov
mov
mov
jo
xchg
sbb
push
pop
sbb
lcall
ja
ljmp
pop
cmpsb
xchg
dec
rcrl
or
push
addr16
pop
inc
jb
add
dec
test
jecxz
int
or
cmp
ja
jae
fs
cltd
mov
push
decb
inc
imul
xchg
or
in
loope
test
jge
dec
jae
das
lcall
gs
add
loopne
cmp
mov
or
mov
out
xor
insl
aas
inc
or
imul
sarl
std
loop
and
jne
jl
cmpsl
push
int
pop
mov
push
or
add
into
lret
sbbl
roll
or
push
xchg
test
arpl
dec
loop
movsb
and
mov
fadds
jl
xlat
sarl
pusha
mov
out
repz
fwait
dec
xor
add
or
cmpsl
cmp
dec
rolb
jo
fwait
cmp
loop
adc
lds
add
icebp
ret
test
jbe
ret
out
cmc
mov
jo
dec
or
add
mov
shrl
jge
inc
xchg
or
cmp
dec
jns
jno
out
cli
inc
stos
das
addr16
inc
and
fsts
mov
insl
mov
sbb
pop
ljmp
pop
mov
jne,pn
cmpsl
push
xor
adc
pop
jl
mov
pop
mov
cmpsb
sbb
insb
jnp
fildll
sbb
pop
push
inc
call
or
lock
jne
out
dec
ja
out
testb
jo
jp
std
lea
iret
inc
add
push
sub
pop
cmpsl
mov
pop
sub
jne
aas
movsl
dec
gs
out
push
call
dec
cs
adc
fsub
aaa
inc
and
imul
bound
push
loope
adc
mov
insb
outsl
xlat
rcll
imul
es
out
shl
jns
mov
adcl
dec
aad
add
es
and
arpl
mov
mov
sar
jp
test
movsl
cmp
add
or
aad
sub
and
test
inc
mov
test
inc
inc
mov
jge
pop
or
in
les
adc
ss
ficoml
jmp
pop
pop
in
cmc
scas
loope
sbb
shr
out
ljmp
jb
sti
out
sbb
hlt
lea
and
hlt
pop
addr16
movswl
mov
lock
popa
cmp
orl
jno
dec
fildl
inc
push
push
stc
push
shl
push
add
sbb
mov
mov
sub
sti
jb
daa
js
inc
xchg
lock
adc
outsl
ss
notl
push
cmp
fsubr
loope
mov
cld
sbb
daa
jno
fnsave
cwtl
adc
mov
and
adc
imul
cmp
mov
jne
iret
rcrl
rcrl
adc
push
das
xchg
popf
adc
aam
outsl
fnstcw
std
adc
in
dec
xchg
les
mov
cmpsl
fiadds
out
inc
push
xchg
in
xorb
in
and
add
dec
and
call
mov
mov
jbe
js
cmp
mov
jo
mov
ds
popf
inc
add
xor
push
lea
pop
int
fldt
xor
movsb
test
into
js
repz
lock
dec
or
outsl
hlt
mov
cli
enter
xchg
and
addr16
xchg
fsubrl
pop
out
fcomip
sbb
roll
mov
lea
lahf
packssdw
mov
and
insl
out
mov
xchg
out
pop
add
push
push
xor
lds
jmp
aas
xor
jae
mov
scas
fistl
sahf
add
push
pop
jnp
lods
loopne
bound
movsl
inc
jne
dec
nop
adcl
add
cwtl
or
xor
push
int3
or
sti
mov
mov
and
mov
add
mov
mov
sbb
and
inc
mov
lods
or
dec
sbb
fbld
adc
sbb
sbb
xchg
jmp
mov
mov
std
es
cli
xor
ds
sbb
mov
or
insb
mull
xchg
pop
fwait
cmp
lret
sub
mov
lea
inc
push
repnz
movsl
jg
mov
xchg
imul
pop
pop
mov
and
xlat
or
clc
div
add
add
cltd
pop
jnp
push
into
out
sbb
out
push
icebp
mov
subl
shll
loop
in
loopne
iret
add
jle
push
mov
jb
jne
push
test
fcomps
andb
lods
nop
mov
aam
inc
xor
insl
testl
icebp
repnz
xchg
or
mov
cli
pop
pusha
push
mov
dec
sbb
pop
and
test
pop
loopne
cmp
stc
ss
repnz
and
rcr
and
inc
mov
mov
pop
xlat
xor
sub
cwtl
mov
stos
sub
xchg
push
aas
dec
decl
adc
lret
pop
fistps
and
mov
sbb
outsb
and
lods
jmp
dec
out
pushf
xlat
faddl
js
mov
mov
fdivp
xchg
aaa
movlps
pop
das
fwait
stc
jg
xor
scas
jo
call
loope
mov
in
fs
lods
test
cwtl
shlb
cmovno
mov
cmp
sub
adcl
push
jae
mov
cld
add
sbb
sarl
sbb
insl
in
cmpsb
int3
jg
or
mov
fisubrs
pop
xor
push
cltd
and
pop
pop
pop
mov
inc
pop
fdivl
pop
sub
mov
les
and
dec
arpl
aas
xchg
pop
pop
dec
and
repnz
loop
je
pop
pushf
sub
push
movsl
outsb
int
lcall
lds
mov
stos
mov
mov
fistpl
mov
pop
push
imulb
dec
enter
lods
dec
xchg
rcrl
lret
sub
xor
in
sub
cmpsl
push
mov
mov
roll
xchg
sbb
scas
ss
pusha
and
adc
sub
lahf
and
pop
add
push
imull
shlb
enter
xorl
repz
and
inc
push
or
or
dec
mov
pop
push
sbb
stos
mov
pop
imul
cld
repnz
mov
jmp
ret
scas
add
push
mov
xchg
and
cmpsb
outsl
int3
adc
out
stos
mov
ds
pop
loop
push
cld
ficoml
clc
int3
fdivrs
jbe
or
aaa
in
mov
push
test
bound
jmp
xchg
fcomps
test
or
mov
js
lds
mov
cmp
popa
insl
orb
sub
mov
pop
iret
pop
push
out
shll
pmuludq
mov
pop
ffreep
mov
mov
dec
pop
in
sub
mov
inc
imul
aas
jo
imul
mov
xor
scas
jo
lods
sbb
in
mov
movsl
je
cld
enter
inc
push
sahf
clc
std
adc
cltd
and
and
mov
push
mov
jmp
icebp
ffreep
scas
mov
fwait
lret
repz
xchg
sbb
dec
dec
mov
sbb
dec
mov
inc
shrl
insb
add
aas
xchg
dec
int3
es
call
mov
and
mov
repnz
in
inc
sub
add
xor
jge
leave
out
jnp
pop
lods
aaa
jo
jbe
and
iret
sarb
adc
add
cltd
shlb
sub
xor
mov
xor
adc
shl
pushf
dec
rcl
adc
pop
aam
sub
stos
mov
xchg
mov
lret
lahf
xor
sub
cmp
movb
dec
jge
je
cmp
in
test
cmpsb
jg
pushf
outsb
in
pop
add
or
cmp
add
mov
cs
jmp
push
inc
mov
adc
sarl
lods
popa
inc
cmp
rol
in
fs
stos
in
test
mov
pop
sub
inc
mov
lret
add
xor
popa
jno
cwtl
xor
loopne
dec
mov
pop
ret
das
imul
pop
rclb
xchg
out
js
and
in
aad
mov
sub
insl
mulb
jg
lea
or
dec
push
push
add
cwtl
mov
pop
mov
mov
scas
test
nop
insl
mov
negb
notl
mov
popfw
or
lret
mov
mov
fisubrs
adc
sar
xchg
push
paddd
bound
push
jbe
and
rorl
and
xchg
fadd
cmpsb
xchg
and
dec
std
cmp
xor
fmull
pop
lahf
sbb
xchg
clc
ljmp
xchg
sbb
and
cmp
add
push
jmp
cltd
rorb
inc
dec
and
jo
xor
aam
pop
movsb
outsl
jbe
mov
push
daa
into
xor
sbb
stos
lods
lahf
fdiv
out
xchg
dec
pop
sbb
loopne
test
dec
jb
xchg
or
dec
test
adc
push
popl
mov
fwait
pop
insl
adc
lret
push
repz
mov
outsl
xchg
frstor
pop
inc
xor
ss
xor
jns
jmp
dec
daa
scas
jae
xchg
xchg
repnz
shlb
pop
sbb
add
sahf
pop
inc
xor
fs
push
mov
scas
loopne
stos
inc
push
insl
or
xchg
mov
jge
out
das
aam
rcrb
dec
sbb
mov
sbb
sub
cmp
cmp
push
enter
jle
jb
fdivrl
push
sbb
loopne
push
clc
mov
aam
inc
sbb
pusha
ror
es
out
pop
je
jmp
pop
jp
rcll
inc
repz
lahf
jnp
lcall
testb
pop
testl
mov
pop
jae
dec
adc
es
xchg
test
and
push
cli
mov
and
jo
mov
addr16
xchg
aam
dec
nop
addr16
fstps
add
loope
jecxz
lcall
and
and
jbe
jmp
dec
push
jb
or
mov
cld
clc
adc
inc
ret
iret
fcomip
ds
outsl
xor
and
movsb
sub
jp
cld
cwtl
cmp
pop
add
and
inc
faddl
and
out
inc
icebp
and
mov
jb
loopne
pop
popa
in
add
push
ljmp
mov
sub
sahf
in
xlat
dec
and
adc
xchg
push
cmp
ljmp
lock
enter
ds
pop
push
xchg
cli
negl
push
fdivr
repnz
lret
add
xchg
cmp
fdivrs
inc
xchg
and
xor
es
bound
jp
push
adc
aad
popa
mov
shrb
out
xchg
lods
xchg
fsubrs
mov
mov
scas
adc
mov
mov
pop
aam
cmp
sti
mov
dec
sahf
cld
sbb
push
enter
out
lock
lock
aad
pop
ret
add
push
push
popa
push
mov
dec
adc
push
sub
mov
inc
cmp
ret
jl
negb
xchg
into
adc
mov
jmp
test
mov
xor
sub
ret
push
test
ljmp
stos
or
addr16
nop
xchg
push
call
mov
adc
adc
dec
push
inc
das
daa
sbb
dec
stc
inc
loop
das
xchg
or
aas
add
mov
sbb
mov
mov
out
and
fidivs
out
out
jae
inc
xor
jecxz
xor
dec
xlat
xchg
lret
loop
pushf
imul
xchg
nop
xchg
cmp
pop
jmp
repz
and
cmp
cmpsl
enter
jae
incb
sbbb
sbb
aam
pusha
je
mov
pop
fdivrl
pop
ret
out
outsb
sbb
lds
js
and
daa
inc
jo
adc
fsubrl
insb
daa
je
jge
adc
dec
dec
loopne
movsb
lcall
push
dec
inc
adc
int
push
fnsave
xor
imul
pusha
lods
ja
sub
sbb
ret
arpl
mov
cld
push
add
pop
in
cmp
arpl
sub
mov
imul
pop
jp
testl
inc
sub
stos
gs
dec
inc
adc
pusha
mov
lods
push
xor
push
hlt
inc
inc
mov
sbb
pop
xchg
or
addl
sbb
out
or
out
pop
cmpsl
repz
enter
dec
lea
int
movsb
adc
inc
xor
jbe
jecxz
inc
xchg
leave
lret
inc
loopne
jae
mov
insb
lock
sbb
sub
fiaddl
fldt
ja
lcall
call
imul
fistps
jnp
jge
push
jne
or
dec
lret
out
lret
adc
cs
loope
movsb
cmc
add
es
or
cmp
sbb
je
scas
mov
lahf
hlt
jns
fstpl
xor
add
inc
ja
dec
inc
push
in
or
push
outsl
jns
or
in
stos
xor
pop
cmp
pop
out
mov
and
out
decb
xchg
cmpsl
jno
inc
rorl
leave
out
sbbl
fcmove
push
cmp
or
adc
clc
pop
inc
sahf
and
xchg
loopne
cmc
pop
xlat
dec
and
sbb
sahf
xor
sbbl
sbb
mov
in
fs
in
popl
test
insl
and
test
mov
outsb
sbb
adc
xchg
push
icebp
dec
or
xchg
push
imul
ja
fwait
out
lret
lea
add
fldcw
popf
adc
add
rcrb
mov
fs
adc
mov
xchg
push
mov
cmpsb
lea
cltd
xchg
and
cmpb
pop
mov
sti
cmp
dec
push
jge
mov
xor
insb
xor
hlt
out
lahf
adc
subb
sbbl
add
bound
setg
int
pop
or
movsb
stos
and
dec
xorl
pop
arpl
sbb
es
loop
aam
imul
fists
sbb
lcall
sub
and
mov
xchg
xchg
sbb
mov
cli
mov
mov
mov
cmp
push
lahf
lahf
sub
ror
and
xchg
das
dec
cmpsb
jb
push
xchg
or
in
es
sub
fcomp
push
mov
es
in
push
ds
out
pop
outsb
lock
mov
mov
jb
push
scas
aam
repnz
pusha
mov
cltd
scas
loopne
mov
mov
pop
adc
jno
data16
mov
xor
jecxz
pop
add
inc
sub
inc
or
jb
pop
lcall
cwtl
xchg
mov
sahf
pop
in
aaa
mov
ljmp
cmp
insb
push
add
cmp
fs
cmp
hlt
jnp
mov
or
out
pop
arpl
testl
fsubl
dec
iret
outsb
int3
cltd
lret
adcb
jmp
shll
dec
out
push
dec
and
ret
roll
mov
iret
push
jb
fwait
daa
jmp
sub
pop
shlb
test
addr16
cmp
ds
sbb
loope,pt
movsl
xchg
movl
inc
fdivrl
mov
push
mov
jp
cmp
cmpsb
lea
in
nop
movsb
and
push
sahf
pop
test
lods
jle
pop
cmpl
hlt
mov
sub
lcall
adc
inc
sub
or
jbe
in
decl
push
cmp
cmp
fs
push
mov
in
jmp
js
push
or
sub
pop
sub
add
cmc
scas
inc
out
add
testl
fcmovne
sub
xlat
scas
xchg
jle
stc
mov
dec
subl
adc
inc
movsl
push
jg
pop
dec
push
aam
divb
rcll
orl
add
mov
push
mov
and
int3
mov
fisubl
xor
mov
fisubl
fdivs
mov
fstpl
cs
pop
inc
int3
cwtl
iret
mov
and
jns
mov
mov
sub
aas
out
and
mov
lds
dec
stos
jno
movsl
subl
adc
lods
lock
movsl
cmc
and
cmpsl
imul
mov
loope
cmpsl
loopne
insb
xor
arpl
cmp
test
jae
xchg
or
mov
cmc
push
cmp
mov
fcoml
adc
popa
add
sub
mov
std
aad
cmp
pop
push
push
enter
cli
jnp
call
insb
mov
pusha
ja
sbb
mov
and
jno
mov
shrl
arpl
out
fadds
adc
shrb
arpl
xchg
mov
xor
lods
mov
and
dec
add
int3
add
mov
gs
jp
in
xor
cli
stc
dec
pop
dec
not
sub
std
sti
icebp
std
shlb
js
mov
std
loop
add
and
es
cmp
sbb
lock
jno
and
dec
std
cltd
push
jbe
ret
in
scas
mov
sub
xchg
lcall
pusha
and
sub
sahf
test
fcomps
adc
push
inc
sub
aaa
std
and
xchg
inc
push
pop
cmp
push
adc
daa
shll
roll
dec
xor
and
mov
add
mov
lock
scas
repz
inc
icebp
jge
push
push
shl
cmp
loope
jmp
and
sti
in
daa
pop
lods
dec
out
js
stos
test
xlat
push
out
push
bound
mov
call
mov
mov
js
daa
push
mov
rcr
add
loop
ficoml
stc
mov
lds
cmpl
adc
in
es
add
add
fistl
sbb
cltd
fs
adc
in
sub
inc
or
jecxz
push
or
mov
mov
jb
xor
in
mov
call
jae
mov
aaa
sbbl
and
push
mov
add
or
xor
sub
jns
push
rcrb
fwait
jne
mov
jle
sti
movsl
inc
into
in
shll
xchg
and
es
mov
pop
mov
lea
jg
jns
dec
sbb
iret
incb
andl
sbb
or
jae
jle
popf
dec
lret
dec
lret
int
fld
xor
rcll
mov
ljmp
and
rorb
scas
les
popf
repnz
jmp
cmc
xchg
iret
test
inc
leave
ja
adc
xchg
sbbb
mov
inc
test
xor
fisubrs
fnstcw
xor
mov
jae
mov
pop
out
in
inc
cld
cmpsb
aam
dec
push
cmpxchg
push
repnz
add
jg
jmp
lret
or
sub
inc
inc
aam
push
jb
adc
cmp
pushf
shrb
jo
dec
mov
shl
and
call
mov
dec
sub
fdiv
inc
inc
repz
jns
xor
push
jno
sbb
and
xor
inc
jb
pop
aas
xlat
movsl
movsb
fidivrs
out
push
dec
inc
cmp
mov
inc
xor
dec
hlt
cmp
jb
sub
subl
call
out
cmpsl
cmc
xchg
imul
or
shlb
or
cwtl
adc
rcrl
imul
or
sahf
sub
negb
lea
adc
in
xchg
int3
test
loope
adc
repnz
icebp
xlat
pop
into
test
jmp
in
adc
mov
jbe
push
mov
pop
ss
outsl
leave
jg
cmp
sub
sarl
jo
imul
or
mov
icebp
inc
nop
inc
out
jnp
daa
lcall
sub
mov
gs
dec
xchg
sub
test
data16
sub
mov
fildl
xchg
adc
add
sub
jge
out
inc
arpl
or
mov
fisubrs
lea
fmull
les
loop
inc
inc
jnp
fwait
paddusb
mov
cmp
lcall
movsb
shll
mov
mov
sub
xchg
test
jl
mov
out
xchg
vpshufd
clc
aas
out
xlat
jmp
cmpsb
dec
rcll
push
pop
mov
sbb
stos
adc
jge
rcrb
pusha
xor
mov
mov
repnz
cmp
flds
sub
pop
pop
out
cmp
js
insl
cmp
ror
mov
push
sbb
ja
sbb
mov
push
fsts
add
xchg
lods
pop
inc
in
dec
or
out
ss
popf
stos
xchg
mov
arpl
insl
sbb
insb
pop
jns
jae
test
xchg
stos
punpckldq
ficompl
daa
scas
jae
sbb
xlat
xorl
mov
das
sbb
jb
xor
lea
ljmp
in
out
or
imul
movsb
ss
sbb
mov
addr16
icebp
dec
in
push
cld
mov
lret
cmc
push
mov
ret
mov
mov
lret
cli
push
in
adc
outsb
leave
jp
add
sub
sbb
inc
mov
lods
mov
fbld
icebp
jbe
aaa
mov
pop
inc
dec
sub
loope
jl
pop
add
mov
adc
movsl
aaa
int3
hlt
mov
movsb
mov
mov
lcall
enter
aas
mov
jp
pusha
sbb
push
push
es
rclb
or
push
jg
jbe
dec
xchg
xchg
mov
sti
jmp
out
push
mov
inc
test
push
dec
cmpb
ja
and
scas
test
and
or
ss
loop
popa
push
notl
add
fucomi
xchg
mov
and
jb
adc
cmp
push
clc
imul
pop
cmc
pop
in
and
dec
sub
stc
ret
loope
add
push
out
mov
xlat
ds
test
xchg
push
out
sub
cltd
cld
jp
push
mov
xchg
popf
add
inc
or
arpl
incl
aad
adc
push
sbb
inc
mov
cmpsb
mov
xchg
lret
jecxz
push
jge
and
pusha
stos
mov
lret
and
mov
xor
push
dec
data16
xchg
int
jae
inc
and
mov
aam
xlat
cmp
jecxz
cmc
mov
loopne
sub
adc
pop
jno
mov
ljmp
sub
cld
push
adc
loope
lods
out
insb
or
push
mov
je
je
and
pop
xchg
flds
shlb
ja
jl
out
mov
fwait
sub
cmpsl
mov
xchg
jmp
cwtl
imul
or
int
cmp
jae
popa
pop
xchg
movsl
pusha
loopne
push
pop
cmpb
test
push
mov
xor
scas
popa
rdtsc
mov
sbb
or
push
mov
out
push
push
pop
out
inc
dec
mov
ss
jge
ret
adc
adc
aam
mov
movsb
cmpsb
jnp
mov
push
inc
js
add
int
cvtpi2ps
jecxz
jbe
aam
sub
push
int
mov
cmp
mov
xchg
fstpl
sub
sahf
in
or
sti
xchg
inc
shlb
sub
popa
mov
sbb
xor
mov
ret
scas
jbe
out
push
jecxz
cmp
fsubr
filds
mov
jne
add
inc
jmp
mov
or
lahf
ret
ret
xchg
inc
mov
cmp
mov
shl
pop
rcl
aam
pop
lods
xorl
add
stos
jns
sub
pop
jae
ljmp
repz
mov
xchg
movsb
imul
dec
out
cmc
sub
push
mov
sub
fwait
mov
scas
lret
shrl
stos
popa
popa
mov
fs
out
rcrl
movsl
sahf
mov
pop
in
icebp
mov
iret
push
pusha
mov
enter
movsb
out
dec
dec
jp
xor
push
mov
or
loopne
insl
out
push
jb
lock
xchg
mov
test
dec
mov
cs
ret
mov
mov
mov
out
mov
aad
mov
mov
jo
mov
push
cmp
das
xchg
xlat
or
sub
out
out
mov
jecxz
fwait
sub
and
jb
jp
add
fimuls
mov
pop
or
or
dec
movsb
push
xor
sub
sub
dec
fidivs
and
scas
bound
xor
test
pop
pop
xor
fistpll
scas
mov
fwait
jmp
sahf
jg
sarl
pushf
lea
jp
xor
das
fnsave
jns
repnz
push
lahf
adc
fistpll
and
or
ret
cwtl
push
mov
call
lods
xchg
pushf
mov
jecxz
inc
fcoml
in
stc
pop
dec
inc
pop
fadds
out
cmp
mov
aas
in
add
cmp
mov
in
jmp
push
ror
in
add
and
inc
imul
xchg
pusha
mov
push
jae
add
test
mov
pop
fst
sbb
pop
xchg
js
inc
pop
sub
push
jecxz
or
xor
sub
mov
ljmp
xchg
clc
push
faddl
scas
addr16
pop
in
xchg
fld
mov
ret
mov
or
lahf
imul
push
sub
or
shrl
test
push
add
mov
mov
shl
loop
test
ficoms
jb
pop
cmpsb
mov
insb
and
outsl
xor
mov
sbb
mov
loop
adc
push
nop
push
mov
pop
sub
sahf
push
inc
inc
ret
pusha
jne
in
std
js
in
cmovno
outsl
fiaddl
fnstenv
push
aaa
test
dec
pop
mov
mov
dec
sarl
cmpsl
jo
das
sbb
pop
sub
xchg
lods
cmp
test
mov
sub
mov
shl
ret
mov
xchg
cmp
xchg
add
push
loope
mov
jle
scas
sbb
inc
ret
mov
pop
jmp
jge
inc
inc
mov
sbb
lods
sbb
shl
lock
jecxz
push
xchg
movsb
cmp
inc
add
xor
js
and
xchg
mov
sbb
or
mov
dec
std
cmp
xor
pusha
dec
test
mov
incb
mov
int
pop
cmp
rorl
xchg
pop
or
hlt
push
std
test
sbb
int3
jecxz
fsubp
push
add
loope
dec
mov
cmp
rclb
inc
mov
popw
sub
mov
pushf
dec
and
fisttpll
add
xorl
jmp
leave
mov
push
mov
pop
ret
arpl
mov
jl
out
jnp
inc
pop
cmp
pop
ljmp
mov
fdivr
loop
ret
loope
and
jecxz
push
adc
xorb
lret
mov
pop
adc
insb
cmp
mull
xchg
daa
mov
mov
mov
inc
mov
rclb
rorb
dec
mov
fiadds
sub
and
shlb
ljmp
inc
stc
hlt
xchg
rclb
fstl
cmp
seta
loop
outsb
outsl
xor
clc
pop
dec
xor
dec
pop
mov
push
ss
inc
sub
push
push
loop
ljmp
pop
or
or
mov
mov
cltd
mov
fcmovnbe
cmp
jae
rolb
pushf
shl
out
out
pop
pusha
outsl
test
fs
sub
cmp
clc
add
jmp
adc
movsb
dec
add
aaa
pushf
andnps
cmp
fists
xorb
ja
rclb
movb
xor
jge
in
jbe
addr16
loop
mov
sbb
fcomip
mov
fcom
jp
xor
ljmp
aaa
outsl
imul
imul
leave
sbb
ja
xchg
xor
xchg
lods
pushf
ljmp
popf
push
pop
or
repz
bound
sbb
push
inc
dec
mov
mov
pop
mov
pop
jnp
or
arpl
and
mov
stos
and
or
lock
xor
sub
mov
mov
jb
inc
out
xchg
test
pop
dec
dec
jp
std
adc
cmp
movsl
mov
stos
fs
or
add
sbb
pop
or
dec
mov
jge
mov
out
dec
mov
pusha
pop
sub
lahf
enter
lods
dec
scas
mov
jg
sarl
pop
rolb
push
test
or
mov
ja,pn
mov
xchg
rcl
popa
ror
inc
mov
add
push
xchg
pop
out
inc
imul
mov
jb
xor
stos
movsl
fsubrl
xor
push
mov
pop
pop
cmp
adc
into
inc
xor
sbb
xchg
xorl
or
sbbl
sbb
popa
push
push
icebp
cwtl
jle
pop
xor
jbe
dec
out
cs
incl
pop
jns
adc
cwtl
sub
jmp
andb
dec
dec
push
pop
dec
pop
imul
jo
ljmp
mov
dec
jbe
mov
add
mov
push
icebp
pusha
push
int
adc
leave
add
int
jecxz
mulb
cld
cmp
dec
addl
adc
sbb
fbld
push
fcmovb
test
cld
mov
push
imul
jns
data16
in
mov
repz
add
cmp
lods
idiv
arpl
in
int
jge
or
sbb
daa
mov
pusha
test
or
mov
fldenv
xor
aam
loop
cli
sarb
stc
xor
mov
xor
push
sbb
lret
sub
iret
rcl
push
popf
dec
insb
dec
push
mov
dec
mov
pusha
adc
dec
sub
cmc
push
repnz
es
or
mov
stos
dec
and
and
fwait
cmp
xchg
xchg
cltd
aas
xchg
mov
jl
push
push
out
xchg
xor
mov
cmp
xor
jg
or
push
dec
int3
test
add
add
mov
sub
shlb
test
in
add
mov
inc
push
xchg
jae
or
push
push
adc
divl
repnz
pushf
xor
mov
pop
loope
and
fisttpl
dec
sbb
mov
xor
in
cwtl
mov
dec
fs
jp
aad
outsl
push
sub
mov
out
cltd
dec
pop
dec
sbb
jle
add
mov
mov
jl
xchg
or
pop
cld
sarb
and
xlat
bound
xchg
iret
cmp
mov
xor
loop
mov
lods
jno
gs
ds
fimuls
xor
addr16
int3
dec
or
cmp
pop
cmc
pop
shrl
mov
adc
jo
out
inc
cltd
outsl
pop
xorb
lds
jecxz
movsb
ss
test
sbb
out
add
jp
pusha
mov
cmp
adc
sub
rcrb
adc
mov
loope
test
or
or
clc
jle
and
jp
adc
popf
xchg
add
loopne
add
mov
enter
shl
xchg
sbb
push
into
mov
dec
sub
mov
mov
ficoms
shlb
rorl
inc
scas
std
shlb
insl
ret
cmp
sbbl
test
cmpsb
clc
jbe
mov
xor
scas
movsb
mov
cmp
cmp
jnp
mov
pop
lods
mov
jns
gs
fs
push
sbb
jno
ljmp
add
enter
cld
pop
dec
jnp
insl
xlat
cwtl
js
sub
pushf
shll
pop
mov
cmp
andb
idivb
cli
notl
adc
push
xchg
in
mov
inc
mov
int
sub
add
fcmovne
pop
gs
fisttps
mov
enter
mov
lcall
sbbb
jg
popf
jnp
xchg
sbb
out
cmp
test
lret
sub
cmpsl
pop
jno
mov
cwtl
es
add
enter
sahf
inc
mov
jecxz
and
jns
shlb
arpl
jle
jmp
sub
lcall
push
loope
das
cmp
pop
push
test
out
push
adc
arpl
fcompl
sub
jne
cmp
sub
data16
pop
mov
dec
pop
mov
push
xchg
clc
aaa
mov
fwait
pop
and
pop
mov
stc
and
test
stc
mov
sarl
pop
pop
xchg
sub
scas
push
mov
mov
dec
js
mov
push
loop
mov
popa
sub
cmp
mov
jl
daa
fdecstp
test
push
push
ss
mov
in
in
adc
fwait
cmp
xchg
inc
or
cli
xor
add
gs
mov
mov
cwtl
push
inc
and
and
daa
in
hlt
add
push
imul
sub
mov
push
adc
fsubrl
push
inc
repnz
out
fwait
shl
int
rclb
xchg
addl
mov
or
jns
outsb
dec
or
push
fisubs
mov
xchg
popf
xchg
movsl
mov
movsb
dec
push
add
int3
and
sbb
pop
xor
dec
dec
bound
push
mov
jmp
adc
ror
call
test
sarl
add
or
fcmovb
push
sub
das
leave
popa
pop
xlat
sub
cmpsb
in
or
ret
adc
xor
lcall
mov
in
int3
cltd
push
push
mov
cmp
call
fisubrs
daa
test
pop
mov
clc
les
pushf
movsl
jecxz
pusha
sbb
pop
xor
clc
enter
idivl
inc
xchg
jno
or
push
mov
pusha
int
movsb
pusha
jecxz
hlt
cld
or
push
mov
cmp
and
push
pop
lret
mov
xchg
sbb
push
cwtl
repz
fmul
push
ja
scas
jnp
adc
cmpb
mov
pushf
add
out
cld
repz
pop
mov
int
jl
test
pop
push
dec
xor
int
jmp
xchg
cmp
cmp
jmp
mov
jb
test
nop
fmuls
loopne
ret
nop
add
lcall
push
stos
jmp
nop
loope
cmp
ffreep
shrb
fadd
movsb
cmp
aas
lds
ljmp
loop
jecxz
fcomp
nop
mov
rolb
xchg
mov
sub
popa
pop
outsl
cmp
mov
mov
test
jbe
out
push
nop
mov
jnp
ret
fld
into
scas
out
aad
shr
into
add
xor
dec
adc
sbb
mov
xchg
imulb
sub
jl
clc
mov
mov
stc
or
ret
aas
or
test
xlat
out
cmp
cmp
maxps
cmp
icebp
lods
dec
dec
push
cltd
mov
pop
clc
fs
or
sbb
insb
sti
sbb
lods
xor
lret
movsb
ljmp
mov
outsl
call
lret
sbb
flds
sbb
sbb
pushf
jge
adc
in
xor
cmpsl
outsb
mov
popf
data16
notb
mov
jl
or
inc
subb
push
xchg
aas
or
or
xor
out
faddl
mov
dec
and
stos
mov
mov
lret
jmp
repnz
xchg
push
mov
out
cmp
xchg
les
push
out
push
dec
sahf
add
ret
jp
push
mov
push
daa
xlat
imul
cli
mov
add
mov
xchg
mov
pop
lds
dec
dec
jecxz
mov
mov
jo
lret
je
adc
push
aas
call
pop
jae
pop
femms
push
test
or
aas
aas
mov
mov
adc
inc
or
in
cmpsb
hlt
aad
sub
sub
lods
jns
pop
push
sbb
lds
sub
jno
int3
push
lahf
enter
les
sbb
and
sbb
jo
jp
mov
mov
sbb
push
ljmp
roll
xor
lahf
jge
xchg
jb
jbe
add
test
push
mov
sar
out
cmc
dec
les
xchg
std
mov
push
sbb
addr16
pop
dec
mov
movb
xchg
xor
inc
xchg
gs
cmc
xchg
jp
push
psubsw
in
std
mov
cwtl
mov
jge
daa
sbbb
push
xchg
cmpsb
fcmovu
in
xchg
dec
std
lock
xor
int
ret
mov
mov
inc
xchg
jo
cs
rolb
test
divb
lods
adcl
ljmp
test
push
push
cld
pop
and
xchg
cmpb
repnz
ds
xchg
push
jmp
lods
enter
fiadds
test
adc
or
dec
pop
sahf
sub
lret
sbb
cwtl
dec
int
loopne
mov
repnz
js
or
adcb
dec
loop
jne
icebp
pop
and
xor
push
add
add
pop
cltd
leave
js
inc
push
cmp
clc
or
pop
jb
mov
test
xchg
mov
cmp
jmp
insb
push
dec
or
inc
sbb
lods
add
icebp
jns
xchg
mov
add
lea
pop
xchg
in
pop
mov
jb
mov
pop
mov
push
lea
cmp
out
xor
repnz
mov
or
ja
lock
jne
in
pop
sbb
icebp
mov
das
mov
cmpsb
data16
cmp
int3
mov
inc
pop
or
test
popa
outsb
sbb
pop
pop
loopne
aam
inc
test
lea
inc
int
gs
fwait
cld
out
add
lock
daa
push
fidivrs
shl
mov
xchg
xor
fstpt
out
mov
outsb
and
rcl
iret
jp
mov
stos
mov
fisttpll
mulb
pop
push
sub
das
stc
btr
pop
lret
ljmp
aad
fucompp
xor
sbb
std
int3
inc
mov
xor
outsl
stos
lcall
lods
sar
nop
dec
shll
push
lret
movsl
dec
xchg
mov
stos
pop
sahf
es
dec
xchg
loop
xor
sub
or
fadds
out
push
inc
jecxz
fmull
jl
frstor
jp
gs
call
andl
mov
or
mov
inc
sub
test
fbld
jne
mov
pop
cmp
cmp
mov
jo
xchg
out
repnz
test
imul
mov
imul
and
int
aas
aas
das
or
pop
inc
adc
insl
cli
inc
jae
in
or
dec
in
fistps
jp
push
sti
pop
sarl
xchg
sbb
fwait
xor
add
out
or
sbb
adc
js
ret
pop
or
push
dec
lret
pop
sub
jl
shrb
jbe
shll
push
xchg
cmc
jp
cmc
loopne,pt
mov
mov
inc
in
xor
pop
imull
push
or
call
jge
adc
cmp
pop
inc
cmpsb
stc
adc
xchg
add
es
push
xchg
nop
pop
cmpsl
stos
xor
pop
fstl
int3
repz
or
pusha
and
jg
xchg
out
add
mov
xor
lret
xchg
in
and
stc
dec
inc
push
jl
jo
loope
shll
cmp
inc
adc
xor
jbe
aam
iret
dec
lods
rorl
adc
rol
sbb
sub
or
pop
and
push
add
pop
rep
mov
xlat
mov
stc
sbb
and
mov
xor
mov
sub
or
int
stos
xor
inc
xor
test
push
jp
mov
aam
xchg
push
push
jb
cmp
or
cmp
mov
hlt
out
sbb
lods
aam
inc
pop
xor
pop
add
hlt
in
sub
pop
push
fstpt
gs
pop
jnp
repz
movsb
sbb
insl
sub
push
stos
lods
fisttps
dec
or
inc
shrb
out
xchg
ja
fldt
jl
lret
icebp
sbb
add
mov
mov
jbe
ja
xchg
or
out
lods
call
and
clc
lds
testb
ljmp
mov
fcmovne
std
inc
shlb
popf
out
inc
insb
mov
pop
cmpsb
push
or
jmp
mov
xchg
add
xor
fiaddl
cmp
and
shlb
lock
insb
movb
cmpsl
mov
push
loop
aaa
inc
and
lahf
dec
mov
in
mov
gs
cld
in
pop
adc
inc
in
xor
mov
mov
ljmp
bound
popf
push
sbb
inc
or
lret
fwait
es
pop
push
les
mov
sub
push
lcall
orl
mov
sub
andl
cld
mov
push
xlat
mov
aam
pop
psubw
cltd
pusha
fsubp
lods
mov
xor
pop
sub
outsl
xor
setp
push
xor
test
inc
or
fcmovnbe
les
adc
arpl
pop
pushf
jns
sbb
in
fs
xchg
out
adc
pusha
sbb
lea
sub
insl
ljmp
cld
nop
lock
sarl
imul
daa
sbb
scas
jb
outsl
cmp
lahf
mov
in
fs
in
and
mov
aad
jp
push
jg
jne
push
in
push
inc
shlb
lahf
push
jle
inc
or
stos
xchg
lea
push
lahf
jbe
es
jns
cwtl
dec
mov
std
pushf
cs
popa
dec
dec
fs
int
shl
mov
jnp
ffreep
enter
out
jb
inc
mov
xchg
sahf
mov
xchg
dec
ret
es
jg
inc
and
ljmp
test
lock
mov
and
add
sbb
js
pop
aas
mov
and
cmc
fstl
lret
cmp
jns
push
ljmp
iret
mov
scas
dec
int
cmp
cmp
pop
outsl
cmp
out
test
nop
leave
filds
es
push
pop
insl
daa
dec
aaa
or
xor
mov
loope
mov
jnp
int3
out
jp
push
aam
pop
jbe
ss
sbb
xor
cmp
loopne
sbb
add
bound
mov
test
movsb
push
imul
xor
sbb
xchg
data16
filds
pop
inc
mov
sub
jge
push
repnz
ret
sbb
inc
jnp
mov
push
outsb
xchg
test
movl
pop
js
push
icebp
mov
xor
stos
lods
scas
xor
cmpsl
or
inc
imul
das
inc
pop
cld
ficoms
inc
push
mov
hlt
sub
mov
sti
enter
sbb
lret
rcrl
mov
adc
mov
mov
aad
sub
sbb
fdiv
pop
xchg
scas
movsl
scas
adc
in
xor
lock
scas
call
mov
mov
call
repz
xor
je
and
orl
nop
sbb
mov
adc
popa
mov
or
stos
stos
pusha
out
test
addr16
ret
fmulp
push
jp
mov
je
adc
test
out
aas
xor
clc
mov
mov
scas
jno
xchg
fcmovnb
sbb
mov
pop
movsl
fyl2x
xor
add
test
movsl
sbb
fisubs
movsl
mov
test
xchg
mov
arpl
and
ss
jl
pop
mov
icebp
aad
mov
cltd
and
push
popf
push
adc
out
mov
jbe
jo
adc
sbb
mov
jp
add
xchg
das
test
xor
nop
dec
xchg
test
sbb
mov
mov
fabs
popa
ds
stos
mov
int
test
sub
fwait
mov
adc
dec
add
and
push
sub
mov
aam
rcll
repz
xlat
and
lcall
xor
hlt
and
pop
push
lret
add
lods
lods
and
testb
loopne
xor
push
adc
gs
stos
mov
push
into
jle
pop
pop
arpl
dec
in
in
add
pop
fidivl
pop
les
lret
adc
inc
jle
insb
nop
ret
inc
fmuls
ja
lcall
stos
and
div
in
mov
mov
pop
inc
lea
xchg
lret
leave
pop
mov
and
xor
cltd
mov
push
mov
adc
push
xchg
push
jo
pop
shrl
push
mov
sub
add
sbb
xor
aad
inc
or
sub
cmpsl
push
cmpsb
testb
call
add
lcall
std
push
cli
push
scas
push
ret
fisttpl
xor
mov
cmp
je
dec
cmpsb
mov
cld
int3
ret
insb
add
insl
dec
leave
je
push
test
pop
add
movsb
adcb
push
jp
subb
or
xchg
out
movsb
push
or
add
mov
imul
adc
jecxz
mov
sti
cmp
or
clc
iret
cmp
lods
addr16
in
out
insl
xchg
cmp
je
sahf
enter
or
rcr
cltd
rolb
fidivrs
fwait
dec
je
add
adc
cmp
pop
pop
pop
gs
ds
std
cli
sub
subl
or
ret
and
xchg
arpl
int3
lds
shll
cld
jmp
imul
jg
lcall
lods
cmpb
imul
pop
test
lret
push
mov
movsb
jns
popf
add
xchg
mov
pop
insl
repz
stos
xorl
dec
test
js
in
repnz
into
daa
sbb
push
shl
sub
outsb
lods
jb
jg
dec
xchg
add
jnp
iret
popa
xchg
ret
pop
ret
scas
adc
pop
pop
xor
fists
inc
sbb
mov
aam
xor
aas
lcall
out
adc
push
imul
inc
adc
out
out
xchg
jnp
je
repz
aas
leave
or
dec
push
fnsave
xchg
jp
aas
mov
inc
inc
inc
icebp
push
fcmovb
push
mov
pop
sbb
gs
push
es
out
orb
push
insl
fcompl
scas
push
xchg
popf
mulb
sbb
sub
shrl
xchg
sbb
pop
lret
mov
mov
pop
stc
cmp
inc
pop
mov
add
adc
jmp
lock
inc
push
fsubs
loop
or
cwtl
ja
data16
jo
mov
cs
aad
andb
jnp
adc
pusha
test
addr16
sbb
dec
daa
jo
adc
fwait
mov
testb
out
ret
jmp
popa
in
mov
or
ljmp
mov
xorb
dec
xor
dec
pusha
cmp
push
out
mov
call
lret
test
sub
lods
xchg
divb
jmp
cmp
popf
test
dec
loope
aam
mov
fsubl
xchg
movsl
je
jns
loopne
leave
mov
pushf
cmp
gs
or
sub
pop
out
mov
sarb
out
xlat
push
pop
fdivrs
mov
jmp
mov
jnp
mov
sub
lods
fnsave
dec
mov
xor
mov
sbb
mulb
mov
xchg
jbe
lods
outsb
movsl
push
xor
adc
mov
mov
test
inc
sub
adc
adc
mov
add
mov
cld
or
int
xchg
movsl
sub
inc
mov
lods
out
push
enter
mov
aas
out
push
push
sub
cld
outsl
decb
mov
push
call
sbb
adc
push
aam
xchg
add
int3
repz
jmp
stos
cs
sbb
test
div
lds
dec
jp
jne
jo
fucomp
xchg
xchg
xlat
mov
and
sbb
xchg
cld
scas
cmp
das
cmp
test
int3
and
and
icebp
cmp
add
movsb
mov
push
push
add
push
mov
sub
sar
and
cli
and
jnp
dec
add
adc
adc
jns
cltd
fidivl
je
notb
pop
mov
imul
stos
cmpsb
in
cwtl
inc
or
mov
push
gs
jle
in
jl
xchg
jo
mov
lahf
fisubrl
pop
aad
in
test
mov
mov
push
jo
sub
jns
frstor
add
clc
fcmovnb
sbb
ds
dec
or
loopne
dec
rcr
fidivl
jmp
data16
out
or
je
pop
cli
arpl
addr16
or
ret
mov
orb
cmp
jo
mov
xor
movsl
add
lahf
and
cmp
inc
out
or
pushl
add
xchg
rcr
pushf
mov
push
fisttps
outsb
in
xchg
fisttps
mov
aam
lods
inc
mov
pop
mov
test
aaa
push
mov
push
dec
imul
sub
mov
cmpsl
sbb
fwait
test
xor
dec
movsb
addb
push
lret
inc
pusha
mov
orl
es
pop
add
aam
xor
arpl
aaa
or
push
mov
or
inc
or
out
inc
inc
inc
and
cwtl
jp
sbb
aaa
dec
lret
xorl
inc
mov
les
imul
xor
leave
repnz
lahf
and
add
insl
push
pop
inc
sbb
and
fisubl
cmp
movsb
mov
mov
lret
mov
xor
inc
jl
cmp
inc
sub
insl
inc
js
pop
test
inc
lods
sbb
dec
pushf
dec
jae
rorb
inc
dec
loop
clc
jmp
adc
into
xlat
in
js
xchg
inc
and
int
sahf
adc
inc
imul
mov
test
cli
sti
or
push
leave
outsb
adc
lahf
mov
and
inc
mov
push
adc
cwtl
inc
test
xlat
imul
cwtl
pop
mov
mov
pop
out
cmpsb
and
sbb
adc
fisubs
pop
push
xorb
pop
rcrb
jns
fwait
ret
arpl
repz
int3
xchg
clc
mov
aam
and
mov
inc
fisubs
mov
rclb
es
int3
pop
or
std
or
jo
or
iret
jb
cmpsb
outsb
mov
stc
inc
push
fstpt
mov
fchs
in
ret
incl
mov
loop
sbb
sub
cwtl
adc
loopne
mov
mov
pop
rclb
mov
inc
jo
add
mov
iret
pop
int
cmp
and
sarb
scas
incb
jno
fisubrl
mov
cmpl
push
sbb
push
sub
mov
test
rcrb
aaa
iret
orl
inc
dec
into
negl
lcall
stos
fs
lock
sbb
mov
outsl
or
mov
sub
nop
shr
out
sbb
mov
loopne
lea
push
xor
shlw
ret
jg
push
ficomps
jge
nop
mov
xor
movsb
or
je
and
dec
into
inc
loopw
add
jp
sar
push
push
call
pushfw
jecxz
hlt
loope
popa
mov
inc
dec
add
xor
xor
mov
push
pop
fstpt
add
mov
stos
push
js
xchg
mov
jnp
mov
add
sbbl
xor
mov
and
ret
fisubrs
cmp
xchg
icebp
movsb
jae
mov
nop
lock
jb
imul
ja
mov
adc
loope
dec
cmp
push
in
sub
mov
lds
jno
lret
pop
dec
adc
adc
xor
add
push
xor
in
adc
or
imul
outsb
push
push
mov
jecxz
testb
mov
sub
sbb
cmpsl
js
jg
pop
dec
movsb
mov
jnp
test
add
stos
sti
push
data16
adc
inc
fcompl
fwait
pop
mov
lahf
dec
cmp
popa
aad
test
daa
pop
shll
int3
adc
jno
xchg
shlb
sahf
mov
dec
and
lock
mov
fdivl
or
and
dec
pushl
dec
add
insb
add
ret
add
pop
add
outsl
xor
mov
inc
scas
int3
push
sbb
clc
subb
out
jmp
cmpsb
adc
push
cmc
ja
ficompl
jmp
nop
or
and
dec
andb
adc
xchg
jp
fistps
cmpsb
dec
mov
pop
dec
push
xlat
lret
sub
repnz
outsb
xchg
or
add
sub
or
pop
fisubl
fdiv
xor
loope
inc
mov
jle
jle
mov
mov
pop
cmc
cli
sub
andl
jb
sti
negl
sub
int
outsb
cmc
push
sbb
push
sbb
loop
notl
jbe
cltd
lcall
pop
pop
adc
mov
cltd
jae
call
sbb
pop
mov
push
mov
aam
push
and
enter
add
test
leave
mov
adc
lea
cwtl
test
loopne
sti
pushf
rorl
and
in
test
call
mov
pop
jbe
lods
fstps
xchg
push
fldt
pop
inc
scas
data16
hlt
or
jg
jb
xchg
insb
aam
inc
in
push
movsl
sub
jns
push
xor
imul
rcrl
push
mov
in
mov
aad
adc
pushf
ss
movsl
gs
leave
inc
movb
loopne
movsb
je
xchg
adc
push
add
push
lcall
cli
aaa
jae
lret
adc
out
enter
into
pop
pop
push
push
mov
nop
js
jle
jp
dec
add
pusha
mov
inc
inc
lahf
lea
call
mov
push
mov
enter
cs
dec
mov
or
iret
fstl
mov
mov
and
adc
dec
adc
or
pop
sbb
imul
xor
sub
rcll
fstps
cld
dec
jecxz,pt
cmc
enter
fdivr
lods
xor
daa
cmc
leave
jmp
sahf
pop
pop
test
sub
cmpl
jmp
movsb
xor
into
dec
negb
pop
ljmp
push
mov
cmpsb
pop
jo
jbe
sub
cmpsb
fnstenv
dec
movsb
or
test
adc
outsb
and
jno
inc
and
aaa
sahf
mov
ss
cmpsb
movsl
cmp
xchg
int
mov
cmp
adcb
xchg
into
pusha
sbb
dec
adc
lds
js
rorl
fsub
aad
add
dec
pushf
mov
fs
je
out
loope
jg
xor
cmpsb
xor
and
jg
xor
pusha
je
cmpsl
adc
std
cmp
xchg
mov
iret
test
dec
es
fwait
lods
fsubrs
push
stos
shlb
popa
neg
mov
or
in
mov
inc
jns
stc
and
lahf
stc
mov
mov
scas
fisubrl
pop
push
pop
lret
xor
jb
movb
push
cmp
out
pop
fiadds
insb
lret
xchg
in
fiadds
xchg
rcr
adc
xchg
mov
adc
andl
movsl
xchg
outsl
mov
inc
add
out
mov
int3
icebp
cmpsb
cmp
jmp
mov
in
cmp
loope
jg
imul
sbb
and
cmp
and
adc
mov
icebp
mov
pop
hlt
pop
das
dec
int3
pop
mov
hlt
sbb
lock
mov
dec
sub
dec
lret
mov
xchg
inc
push
aas
push
mov
aaa
shlb
mov
cmp
sbb
iret
xor
enter
and
sub
jge
ljmp
push
shrb
push
dec
loope
shll
mov
loope
notb
jb
push
daa
sahf
lods
or
dec
hlt
out
pop
jl
push
nop
and
lods
in
jmp
or
push
fildl
or
push
jb
insl
in
mov
mov
mov
dec
cli
fmul
aaa
aam
popf
sti
jnp
lret
out
xchg
add
aad
cmp
dec
mov
mov
push
mov
icebp
pop
lods
cmp
add
add
adc
mov
mov
mov
sbb
dec
fs
es
xor
lock
fcompl
push
pusha
loopne
cmove
inc
cli
imul
rolb
sbb
pushf
cmpsl
and
adc
adc
lret
add
xchg
scas
or
inc
xor
push
mov
jg
call
pop
aad
sbb
jbe
jb
rcll
or
out
in
negl
mov
popf
out
stos
mov
jne
lret
mov
shrl
loop
pop
leave
int3
fcomi
mov
inc
lret
and
lock
enter
jecxz
or
lods
pusha
push
adc
jle
in
stos
or
hlt
dec
insb
jle
inc
mov
loop
loop
mov
push
jg
xchg
jnp
mov
or
ljmp
cmp
jp
test
jno
cmpsb
mov
push
or
ficoml
xchg
sti
roll
pop
or
jge
mov
adc
xchg
int
lods
push
decl
mov
cmp
bound
mov
pop
filds
cmp
mov
pop
add
leave
adc
mov
mov
push
ret
insb
pop
pmuludq
mov
add
dec
xchg
bswap
shrb
dec
dec
sub
add
std
adc
gs
xor
or
xor
imul
xchg
mov
lea
or
fsubr
arpl
pop
add
fistl
aad
insb
push
movsl
jns
popa
nop
push
stos
outsb
mov
xchg
std
xor
adc
xor
loop
movsl
popa
scas
mov
lods
sqrtps
hlt
mov
cli
xlat
pusha
sbb
inc
sbb
int3
int3
repz
femms
enter
jb
add
imul
mov
int
mov
jle
fdivrs
fsubl
mov
mov
jbe
inc
add
ds
jecxz
mov
cmp
pop
inc
mov
push
pusha
push
add
adc
xlat
adcb
subl
fadds
in
mov
and
ja
cli
and
xor
pop
cld
pop
inc
popa
popa
repnz
div
push
cmp
shll
pop
xchg
push
incl
dec
xor
stc
movl
dec
ja
mov
sysret
cmpsb
inc
cmp
popa
mov
cmp
out
mov
sbb
push
aaa
lcall
or
sbb
in
ss
out
mov
lea
dec
outsl
add
les
dec
rclb
dec
mov
cmpsb
pusha
data16
test
insb
or
pop
jae
fistps
and
dec
xor
mov
jl
mov
push
mov
out
jp
add
sahf
pop
add
dec
jb
stos
jp
push
in
jns
mov
jmp
cmpsb
add
fwait
jmp
rcr
icebp
repz
inc
fimull
aas
jb
int3
push
std
in
outsl
jle
aas
dec
sub
pusha
pop
cmp
mov
cld
cmp
mov
lods
push
mov
push
es
es
jmp
cld
in
out
jb
mov
mov
inc
stc
mov
stos
sub
push
ret
xor
das
rclb
lahf
sbb
dec
ja
mov
jle
iret
fnstenv
movsb
sarl
pop
insb
daa
jmp
mov
jo
test
fists
rorl
lret
scas
iret
lea
leave
cwtl
lods
lock
aad
push
movsb
add
in
mov
dec
hlt
cld
cwtl
mov
arpl
call
push
xchg
cmp
fcomi
call
aam
loope
dec
bound
fs
mov
mov
mov
sbb
inc
mov
int
xchg
jmp
test
ficoml
test
in
adc
or
sbb
into
push
mov
jnp
pusha
push
in
jecxz
aad
lock
sub
cmp
cmp
lret
iret
lcall
push
pop
adc
sbb
push
rolb
loope
notb
int3
push
sbb
je
or
adc
sbb
popl
pusha
stos
push
jmp
imul
pop
and
hlt
inc
rcl
jns
pop
jo
pop
imul
jg
mov
jo
sbb
dec
addr16
jne
xor
fs
pop
aaa
xor
mov
ret
popf
adc
mov
cwtl
ja
cli
loop
je
push
stos
sti
sub
mov
add
pop
add
aaa
sub
xchg
rcrb
int
push
xor
aas
lea
and
aas
andl
notl
jmp
adc
inc
xchg
call
mov
addb
aad
xchg
sbb
inc
mov
aad
xchg
jo
inc
jno
rorb
mov
sbb
inc
sub
popa
sbb
insl
out
jecxz
loop
jmp
add
test
fistl
add
xchg
mov
fs
sub
jl
aam
pop
and
sbbb
xchg
je
and
inc
int
loope
xor
xlat
ljmp
push
repnz
xor
out
das
add
imul
aas
xorb
mov
mov
mov
es
mov
sub
add
mov
insl
mov
in
adc
sub
or
cli
loope
rclb
sahf
cmp
and
sbb
data16
sub
push
hlt
std
push
out
sub
outsl
push
push
push
les
aaa
mov
rorl
mov
sbbb
and
jmp
test
adc
addr16
mov
in
mov
sub
jo
push
and
jnp
int
or
out
jmp
xor
clc
mov
orl
repnz
notl
les
ljmp
push
fnstenv
cmp
popf
outsb
mov
or
js
xor
xchg
pusha
cmpsl
out
xor
xchg
sbb
xchg
arpl
push
cmp
sbb
mov
jmp
and
fimull
fbstp
adc
inc
cmp
aad
mov
pop
addr16
mov
jecxz
cli
lds
cld
out
fldcw
mull
or
mov
dec
andb
data16
outsb
add
mov
aas
aam
and
je
inc
cli
scas
xor
mov
push
insl
mov
ljmp
add
not
rorb
dec
push
mov
icebp
and
mov
inc
fldl
jp
call
add
xor
lcall
aad
push
jae
xchg
xor
dec
adc
clc
mov
pop
mov
imulb
xchg
clc
adc
cmc
xor
fists
push
cmp
int
add
mov
cmpsl
adc
jp
sub
sbb
push
sub
xchg
popf
jge
or
mov
out
xor
lds
gs
sarb
xor
lret
mov
push
jge
lea
je
mov
mov
pop
jg
out
jg
mov
dec
mov
fldcw
mov
push
xchg
adc
lock
xchg
xor
sub
mov
aad
xchg
aad
cmpsb
jge
out
sub
adc
enter
mov
and
gs
xchg
data16
jns
sub
addr16
andl
into
in
ffree
xlat
pushf
push
in
pusha
dec
cli
sub
jo
mov
jle
pusha
pop
notb
mov
dec
les
std
outsb
pusha
dec
add
loopne
mov
dec
jb
in
lock
addr16
or
fiaddl
push
dec
sbb
dec
fisubl
mov
addr16
push
clc
push
add
enter
and
iret
data16
fwait
mov
mov
je
into
fwait
stc
scas
push
adc
mov
mov
shll
dec
idiv
add
add
sub
pop
es
mov
sbb
in
sbb
sbb
test
xor
xor
shll
ret
and
add
repz
faddl
or
adc
pop
out
jg
inc
orb
or
dec
xor
inc
in
fadds
fldenv
mov
pusha
jge
sarb
add
inc
mov
cmp
and
cmpsb
mov
loopne
mov
inc
lret
add
xchg
stos
add
stos
adc
ljmp
pop
test
aas
cmp
imul
scas
sub
xchg
add
cld
jecxz
cld
cwtl
sub
orl
and
dec
inc
icebp
mul
out
mov
cwtl
inc
pop
dec
aam
shr
adc
push
mov
xor
xor
pop
jno
sbb
sbbb
test
mov
pop
in
jg
imul
scas
movsb
push
mov
jno
adc
roll
xchg
mov
mov
dec
pop
ljmp
sub
lea
iret
sbb
push
int
rcrl
adc
push
loop
push
out
stc
sahf
arpl
or
clc
push
cmp
outsb
loope
imul
ret
or
test
roll
sti
sbb
aad
lret
jp
jb
and
cmpsl
adc
pop
gs
imul
mov
div
cs
popa
lds
lcall
lods
and
pushf
adc
push
nop
addr16
mov
mov
or
push
sbbb
sbb
adc
fiaddl
xchg
xor
nop
or
or
or
adc
inc
cmc
mov
into
or
outsl
add
or
or
xchg
and
xor
xlat
das
jle
dec
outsl
dec
fdivs
je
mov
insb
fucompp
cwtl
test
imul
mov
test
jg
mov
insl
or
lods
rorl
cmpl
jbe,pt
sub
lret
mov
xchg
adc
xchg
test
xchg
sbb
das
ja
popf
jns
sub
insl
inc
in
scas
addr16
aas
xor
mulb
sti
jmp
movsl
sub
decl
std
fcoml
jo
or
or
xchg
sub
mov
dec
add
les
std
test
jae
jne
popf
adcb
sbb
repz
mov
mov
insb
aam
pop
cli
cmc
sahf
and
sub
xor
jae
mov
and
faddl
daa
jb
push
inc
or
push
jmp
add
sbb
push
sub
jb
jnp
sahf
js
inc
inc
ja
loop
mov
dec
mov
inc
sti
add
in
and
adc
jnp
dec
dec
jmp
dec
loope
jge
add
call
inc
call
test
in
int
xchg
insb
lds
push
cli
and
sub
ss
pusha
add
jecxz
inc
adc
and
in
in
mov
mov
out
sub
outsl
negb
push
adc
inc
fwait
jns
xorl
and
mov
mov
pop
xor
dec
sub
pusha
adc
data16
dec
imul
pop
jne
inc
mov
shll
aad
call
loop
lea
or
loop
push
sub
dec
sub
jne
jp
jle
shrl
xchg
loopne
fucom
aaa
fcmovnbe
arpl
je
test
stos
cs
cmp
inc
shrl
cmp
aaa
nop
push
ret
xchg
notb
aam
or
inc
cwtl
rorb
test
push
fnstenv
sub
sub
dec
mov
and
mov
or
or
mov
mov
ret
lock
mov
out
aaa
dec
repz
insl
cmp
jae
mov
pop
fld
punpcklwd
stos
jp
lret
xchg
int
movsb
xchg
xchg
popf
push
and
mov
jo
orl
fdiv
jg
shll
xor
stos
test
insb
stos
dec
add
js
inc
sarl
in
aas
xchg
xchg
pop
pusha
xlat
pop
xor
or
xchg
dec
hlt
pushl
inc
lahf
sahf
int
pop
gs
mov
push
stc
decl
xor
xor
push
stc
push
cs
cmp
je
sbb
add
mov
sbbl
push
adc
popa
lods
ss
lahf
outsl
stc
mov
xor
inc
int3
cmp
mov
pusha
das
aad
or
arpl
jbe
pop
mov
orl
mov
dec
jae
lods
dec
repz
add
scas
or
cmp
cs
sahf
xchg
add
dec
int
xchg
je
addb
cs
push
jg
mov
gs
push
or
scas
pop
fistl
adc
mov
inc
pusha
pop
dec
jne
hlt
sub
mov
dec
push
ja
and
inc
lcall
cld
mov
cmp
testb
inc
out
push
popa
std
inc
stos
gs
sbb
insb
fcomps
sbb
lds
gs
mov
scas
orb
aad
shl
add
dec
mov
lret
mov
fsubl
jne
push
das
inc
sbb
inc
aas
adc
xor
mov
cmp
adc
sbb
adc
lret
pop
xor
cmpsb
adc
dec
in
mov
and
sub
lcall
pop
adc
daa
lcall
xchg
jmp
mov
testb
lret
sar
sbb
js
mov
xchg
movsb
cmp
mov
lods
pop
inc
mov
fadds
fstpt
xchg
mov
fadd
adc
sbb
push
repz
mov
enter
es
lds
push
imull
mov
lock
decb
mov
cld
mov
or
testl
and
fistl
pop
bound
xor
pop
mov
xchg
sahf
xor
js
xchg
daa
aas
fisubrs
mov
imul
sub
jge
clc
and
outsl
iret
pushf
repz
cmp
cmpsl
cmpsb
fwait
xor
leave
aaa
ret
inc
push
sti
sbb
bound
mov
arpl
and
enter
lds
stc
scas
xchg
jbe
cmpsb
sbb
aam
movsb
stos
add
orl
hlt
arpl
jae
popf
stc
popa
xchg
push
sar
xor
fdivrl
push
dec
sbb
and
scas
enter
in
sbbb
sbb
jne
shll
mov
popf
mov
jnp
push
jl
and
push
cmpsb
bound
cmp
ljmp
sub
cmc
sub
ds
adc
or
int3
stos
push
push
jb
lods
xchg
dec
test
mov
mov
fnsave
and
aas
cli
lret
test
hlt
jnp
dec
addr16
or
or
dec
daa
jae
rcl
cltd
and
jns
pop
push
ds
sbb
xor
jae
loope
pop
push
cmp
mov
inc
movsl
cmpl
ss
in
clc
mov
sub
iretw
mov
pop
int3
dec
pop
or
mov
call
push
loop
jb
jb
rorl
negb
or
cmp
addr16
pop
xchg
pmuludq
pushf
test
xor
inc
sbb
mov
popa
stc
out
xor
inc
cmp
cld
pop
jb
cs
lahf
mov
cmp
dec
std
or
aaa
pop
mov
out
xor
mov
sbb
movsb
xor
sub
jg
mov
int3
imul
subl
push
fwait
jge
xchg
push
xor
outsb
idivb
repnz
inc
ret
push
jmp
addr16
in
cmp
jle
xchg
out
faddl
popa
pop
cmpsb
xlat
stos
mov
push
lret
add
imulb
and
push
dec
leave
int3
ds
mov
pop
inc
insl
cwtl
sbb
fsubs
xchg
iret
scas
lds
inc
sbb
mov
sbb
xchg
inc
push
clc
mov
pop
adc
cmc
imul
cli
data16
cmp
in
sub
and
bnd
stos
shrb
and
dec
mov
adc
dec
shlb
mov
pushl
or
std
push
nop
js
mov
inc
dec
cmc
loope
dec
and
cmc
or
dec
dec
cs
fimull
mov
repz
add
mov
test
add
cmp
enter
roll
fstpt
xchg
mov
insl
add
rcll
adc
imul
xor
add
pop
leave
pusha
mov
mov
mov
lret
leave
aam
dec
rolb
cmp
leave
adc
mov
ds
inc
pop
xchg
inc
push
adcb
jbe
cmovne
mov
jb
imulb
adc
loope
outsl
xor
aam
sub
orb
jb
pop
ret
cld
cmp
or
in
faddl
dec
cld
inc
cmp
lahf
dec
subb
enter
mov
jl
dec
add
mov
push
bound
in
shll
rorl
pop
sbb
in
std
iret
push
jbe
notb
inc
mov
add
aas
add
xor
repz
ds
xor
cmpsl
dec
in
imul
subb
ret
int
out
fs
dec
xchg
sbb
cmpsl
lea
push
pop
test
mov
mov
push
ljmp
xchg
fwait
push
std
sub
jnp
mov
push
sub
fists
xor
sbbl
push
ret
mov
mov
push
add
clc
aam
pusha
iret
shlb
addr16
js
jmp
ss
mov
mov
ljmp
sub
popa
movsb
adc
push
xchg
jbe
mov
pop
das
sub
xchg
adc
incb
xchg
mov
mov
lods
mov
and
sarl
loope
shrb
into
std
mov
add
outsl
push
mov
sbb
mov
push
orb
mov
xchg
loopne
jle
xchg
jnp
lea
call
sahf
in
and
loopne
lods
mov
movsb
scas
mov
mov
in
sbbl
pop
je
inc
sub
lds
call
sub
mov
xchg
cmp
test
cmpsb
mov
xor
inc
xorb
out
xchg
push
cmp
pusha
adc
adc
lods
sbb
scas
mov
mov
mov
je
std
sub
fwait
pushf
mov
push
xor
push
dec
add
fsubr
mov
mov
adc
and
xor
mov
push
push
movsl
stos
mov
xlat
mov
subps
daa
mov
stc
ds
clc
int
mov
outsb
cmp
cld
sarb
rcll
add
les
and
rclb
shll
or
popa
das
sti
daa
jp
ds
pop
stos
add
or
jae,pt
pop
movsb
sub
lret
dec
lcall
addb
aad
adc
mov
cli
shlb
je
jb
sbb
pop
lret
jo
std
mov
xor
fnstenv
psadbw
cld
jbe
shrl
scas
icebp
loop
lret
cs
mov
push
dec
mov
movsb
or
into
push
jg
pop
mov
pop
dec
xchg
cmc
rorl
mov
xor
fmul
lock
cs
inc
stos
shrl
adc
sbb
inc
cmp
dec
sbb
test
fdivl
sti
jle
push
sti
les
data16
xor
xor
jb
aam
push
push
rorl
sbb
mov
outsb
loop
sbb
call
int3
jge
das
mov
aas
mov
into
mov
or
jp
pop
test
fnstsw
xor
lahf
and
dec
inc
lcall
sbb
int
cmp
cmpsl
push
rorb
insb
sub
cltd
lds
pop
aam
jnp
adc
sarb
fs
xor
jne
ds
xor
mov
fs
int3
cmpl
into
cmpsb
pop
stc
mov
cmp
outsl
outsb
scas
nop
loop
xchg
mov
jne
decb
loopne
xchg
jmp
mov
sbb
inc
pop
inc
pusha
and
xor
sbb
push
mov
out
dec
cmp
mov
aas
ret
or
cs
sub
or
aas
pop
adc
push
inc
add
pop
push
enter
inc
pop
ds
in
cmc
enter
lret
mov
outsb
cwtl
mov
mov
push
ds
or
dec
mov
xchg
xchg
push
leave
jmp
imul
insl
pop
loop
notb
loop
shlb
xchg
mov
cs
adcb
frstor
pop
add
adc
xchg
xor
and
jae
mov
sub
jl
jle
jno
or
pop
mov
imul
std
and
test
or
sbb
fbstp
xor
xchg
jae
mov
out
test
mov
icebp
call
pop
movl
imul
inc
sahf
sub
adc
adc
stos
pushf
ja
aaa
lret
and
and
shrb
xlat
or
scas
sbb
movsl
sub
mov
jl
enter
ret
mov
pop
sub
sub
xchg
cmpsl
testb
ror
cmp
lahf
cmp
inc
lods
mov
sub
or
repz
stos
mov
out
or
sub
push
xorb
push
test
loope
add
inc
cmpsb
inc
jmp
repnz
xor
cmpsb
rorl
clc
fs
fldl
or
iretw
or
xor
inc
subb
sbb
test
push
test
and
sbb
lahf
mov
aas
lret
mov
aad
out
add
aas
in
scas
jecxz
and
or
out
aas
sub
xchg
lds
movsl
daa
xchg
fisttpl
mov
pop
dec
xchg
dec
adc
dec
jbe
int
or
mov
dec
jecxz
or
stos
ret
rclb
adc
jl
xchg
std
cmp
inc
push
cmp
inc
and
ret
mov
jge
cmpsb
rcl
sbb
mov
xlat
push
cwtl
imul
mov
sti
pop
fnstenv
aad
nop
imul
jo
mov
enter
push
data16
sub
in
push
or
arpl
int
cltd
jbe
mov
outsb
ret
aad
jbe
imul
push
mov
adc
mov
sub
stos
or
fstl
push
lret
cmpsl
push
push
lea
pusha
jo
add
lcall
out
inc
add
pop
add
mov
and
add
push
ss
push
dec
mov
mov
dec
arpl
inc
or
mov
jae
xchg
stos
mulb
pop
addr16
mov
in
cmpb
dec
loop
das
adc
daa
je
int
fwait
mov
mov
call
cs
mov
lahf
lcall
push
je
std
adc
ja
pop
fs
lahf
aam
sub
lds
or
sahf
clc
xchg
out
idiv
aas
fdivs
xchg
cmp
cmp
and
pop
rolb
or
push
fldt
orb
jbe
dec
mov
setno
sub
inc
and
fldl
jb
insb
out
mov
pop
sub
xchg
sub
maskmovq
pop
fwait
sbb
pop
jle
outsb
es
sub
push
imul
aaa
mov
add
xchg
push
in
ret
scas
sbb
add
xchg
pop
jae
dec
xor
scas
lcall
ficoms
sti
xor
inc
xor
cmc
jge
mov
daa
pop
mov
das
xchg
int
ret
mov
dec
dec
sbb
fistps
mov
rclb
xor
dec
mov
jg
int3
mov
popf
faddl
add
bound
sti
xchg
loopne
xor
test
in
outsb
les
sub
mov
mov
daa
dec
mov
mov
lret
int
pop
decb
das
adc
loopne
test
insb
add
pusha
lret
push
fwait
popl
insb
adc
inc
pop
adc
mov
jae
xchg
sbb
sbb
movsb
scas
das
push
dec
or
xor
mov
mov
clc
ret
push
mov
in
test
or
shrb
jle
add
sarb
fdivl
out
lea
out
push
add
sub
cmpsb
inc
jo
xor
jmp
mov
pop
inc
sbb
jmp
sub
daa
test
add
add
add
stos
stc
daa
mov
out
add
sahf
fs
js
dec
jp
scas
sub
iret
mov
push
push
sub
fwait
test
mov
decb
adcl
ret
push
mov
xchg
cmc
push
mov
das
shlb
call
xor
xchg
jns
in
lods
pop
push
add
filds
mov
push
cs
cmp
inc
into
dec
xchg
push
sbb
or
and
icebp
mov
inc
add
xchg
cmpb
adc
stc
aas
js
cmpsl
or
data16
in
repz
cmp
fdivrs
mov
mov
ret
add
test
push
mov
mov
lock
icebp
pop
xor
enter
push
xchg
iret
cltd
and
data16
mov
jb
aad
movsl
pop
mov
mov
xchg
or
sbb
sysret
fdivrs
stos
push
imul
inc
xchg
sub
xchg
cwtl
aas
stos
out
sbb
push
cmpsb
ret
mov
fisubs
mov
lea
imul
pop
std
nop
gs
out
rcll
jno
ret
imul
push
sub
sbb
dec
je
je
cmpsb
mov
andb
dec
push
push
pop
jecxz
mov
xor
xchg
inc
push
sahf
mov
into
pop
sbb
int
push
mov
cmpsb
out
sbbl
fwait
mov
add
in
pushl
push
or
scas
pop
push
je
jnp
add
jns
push
and
sbb
inc
fwait
cmpsb
mov
jecxz
ds
cmovae
adc
test
ja
loop
loopne
and
jmp
sub
mov
in
roll
jb
scas
mov
and
sub
jp
outsb
pop
or
mov
icebp
and
ljmp
pop
cmpsb
les
aas
repz
std
cmpsb
pop
and
pop
loopne
and
mov
call
adc
lahf
or
sbb
ds
inc
and
rclb
enter
mov
add
clc
pushf
aas
push
aas
pop
dec
imul
cs
das
mov
jmp
push
test
fs
andb
xor
dec
sbb
ja
sbb
mov
xchg
sub
lds
inc
sbb
int
std
stos
pop
es
xchg
shll
cmp
outsb
jmp
mov
adc
fistl
loop
mov
imul
addl
push
outsb
test
and
setne
lods
movsb
push
mov
adc
or
scas
aam
hlt
ds
clc
cmp
fsts
lcall
dec
ja
or
jmp
in
jg
pop
mov
imul
inc
push
in
outsl
leave
lea
jbe
imul
mov
sub
cmp
leave
fildll
stos
into
pop
mov
cli
xor
mov
dec
inc
cmp
insl
or
inc
sbb
stc
push
push
cmp
push
xor
mov
mov
sbb
add
xchg
and
xor
cmp
xor
sarl
cwtl
std
mov
test
outsb
cli
sbb
xchg
dec
sub
adc
stc
je
out
and
out
xchg
sar
xchg
sub
jl
dec
cmpl
adc
sbb
icebp
adc
mov
lods
mov
xor
lret
fucomp
push
iret
out
rclb
in
add
cmp
enter
cli
scas
je
je
mov
lea
fs
sub
add
in
gs
xchg
sub
aaa
mov
mov
jg
and
pop
xchg
xchg
cmp
es
jge
bound
xchg
cmp
mov
cld
sbbl
lods
push
lret
sbb
mov
cmp
mov
dec
push
pop
ljmp
dec
movsl
rcll
xor
addr16
fcmovu
loopne
jbe
sti
push
dec
vucomisd
shr
pop
in
xor
scas
mov
ret
adc
add
aad
pop
pushf
iret
mov
stos
mov
jb
push
push
jecxz
xor
mov
inc
fnstsw
inc
mov
xchg
mov
pop
xor
stc
ret
daa
ret
mov
aas
sub
sub
insl
sbb
les
push
lahf
mov
les
arpl
movsb
outsl
sbb
mov
pop
pushf
sub
pop
mov
sbb
inc
xor
adc
xor
int3
rcrb
inc
pop
jno
mov
push
les
jl
pusha
lea
test
mov
loopne
or
in
adcl
sub
notb
adc
sbb
enter
mov
push
dec
mov
add
inc
cli
xor
and
lahf
mov
sub
push
mov
test
lret
enter
nop
insb
out
pop
mov
adc
dec
lret
lret
xlat
jae
sbb
repz
jbe
fnstcw
push
pop
jmp
insl
les
stc
sbb
int3
movsb
mov
cmpsl
xchg
and
xor
adc
pop
mov
adc
xchg
mov
int
mov
inc
push
mov
and
sbb
movsl
xor
jmp
mov
push
mov
repnz
jne
push
mull
or
daa
xadd
in
mov
xor
in
mov
dec
repz
popf
pop
jns
cmp
nop
loop
insl
cmpsb
out
jmp
pop
movsb
test
push
sub
mov
test
cmp
leave
popl
sub
sub
sti
movsl
es
inc
addr16
stc
or
and
push
xchg
mov
add
dec
nop
and
dec
fistl
idivl
xchg
popf
addb
data16
icebp
xchg
sti
mov
push
and
std
inc
dec
or
jp
dec
icebp
repnz
lds
aaa
les
inc
jb
aad
xor
insb
jbe
insb
adc
pop
pop
pop
mov
jp
mov
pop
inc
mov
cmp
mov
rcrl
mov
and
xchg
and
adc
les
dec
and
in
out
pop
push
xor
sti
and
and
jno
mov
call
shll
push
push
pop
push
into
jmp
dec
mov
in
jge
into
out
push
scas
mov
ss
daa
push
push
clc
pushf
adc
push
add
test
stos
pop
push
and
pop
sbb
pop
cmp
aam
ds
aam
cld
outsb
adc
fists
mov
xor
aad
jl
cmp
loope
xchg
fwait
xchg
ds
pop
sbb
les
inc
pop
pop
or
adc
imul
push
dec
cld
mov
jg
xbegin
outsb
std
add
enter
imull
sahf
mov
addr16
shr
jle
loopne
sbbl
jp
pop
jecxz
leave
jo
outsb
jl
fldt
movsl
xor
ss
sbb
das
add
mov
ja
es
jl
insb
inc
push
stos
adc
mov
rorl
dec
push
arpl
add
popa
mov
ret
ljmp
insb
je
cmp
test
mov
es
test
out
or
mov
mov
lds
mov
xchg
data16
incl
daa
cmp
cli
scas
push
dec
in
pop
leave
aaa
mov
fwait
sarl
pop
imul
jbe
cld
adc
add
mov
test
out
sbb
aam
mulb
inc
pushf
lahf
jge
inc
stos
mov
scas
xor
movsb
scas
fs
mov
int3
xor
xor
mov
mulb
ss
shlb
roll
push
cmp
jl
jecxz
sbbb
int3
test
int3
xchg
iret
mov
imul
push
hlt
in
pushf
dec
mov
adc
inc
hlt
cmovl
cmp
pop
rorl
hlt
and
addr16
std
in
push
cwtl
imul
xchg
movsl
mov
adc
lahf
sub
lea
pushf
sbb
clc
pop
pop
aaa
adc
iret
mov
inc
fdivrs
or
das
lods
dec
lods
cs
sarb
jle
or
lods
or
data16
sub
mov
mov
push
mov
fcompl
movsb
pop
add
pop
aad
loop
jg
das
imul
loopne
cmp
sbb
in
inc
jne
add
sbbb
mov
fdivs
and
add
mov
fcompl
fwait
xor
int
scas
dec
pop
imul
adc
sbb
xchg
sbb
fsub
jp
jge
lock
xorl
pop
push
cmp
je
scas
js
pop
cli
mov
mov
mov
dec
sub
in
jge
dec
cmp
mov
xor
mov
adc
add
sub
icebp
repz
popa
mov
mov
inc
hlt
sarl
mov
jne
inc
jno
xchg
cmp
push
xchg
stos
push
mov
cmpsb
sbb
xchg
push
push
mov
mov
add
cmp
lcall
outsl
std
and
inc
fsts
dec
nop
out
mov
xchg
jbe
fdivrl
ss
pop
jae
dec
faddl
xor
pushf
lahf
push
enter
lret
xchg
cmpsl
ja
jnp
cmpsb
bound
fisubrs
jge
shl
sbb
mov
push
incb
inc
pop
sti
cmp
sbb
or
fisubrs
push
mov
inc
pop
dec
pop
or
mov
fbld
add
rcrl
movsb
es
hlt
jecxz
cmp
add
jno
mov
or
aam
loop
stc
push
sub
push
sbb
stos
in
arpl
stos
aaa
lahf
xor
pop
test
add
mov
cli
sbb
loopne
mov
es
aam
jecxz
sbb
xor
mov
inc
pop
xchg
lods
iret
addr16
sbb
call
jle
xorl
js
lcall
rorl
cmpsb
xor
jb
insb
push
cmpsb
fidivl
ffree
scas
push
addr16
jb
dec
mov
mov
mov
rcl
and
in
push
arpl
push
icebp
jb
into
push
popa
push
jo
push
movl
shll
insl
subl
lock
cmp
out
lock
sbb
pxor
sbb
lret
cmc
ds
gs
pop
jg
cld
xor
cmp
in
mov
sbb
cmpsb
dec
inc
lea
adc
jne
fsts
das
das
arpl
or
xchg
ffree
inc
mov
pop
push
adc
dec
add
sub
outsl
andb
aad
fbld
mov
jo
dec
mov
cmp
int3
mov
jne
jmp
fisttpll
fwait
das
pusha
insl
cli
nop
ds
cmp
dec
push
push
cld
out
and
in
lds
int3
jecxz
push
jle
sbb
lock
shlb
je
imul
mov
enter
cwtl
push
mov
subb
insb
sahf
js
inc
ficompl
xchg
stos
loope
jp
insb
push
scas
sbb
push
pop
cmp
mov
shrb
mov
jge
hlt
xlat
mov
shll
and
mov
jp,pt
adc
insl
sbb
sbb
jmp
adc
rcrl
rcr
nop
adc
xchg
stos
fdivrl
int
loope
add
xchg
loop
push
adc
test
dec
ja
xor
pop
cmp
mov
and
xchg
push
out
pop
xchg
mov
pusha
pop
push
sub
mov
jo
in
push
mov
fs
mov
mov
popf
pop
imul
jno
sub
lods
test
nop
cmp
cmpsb
std
jb
xchg
js
add
sub
xchg
push
dec
cmp
dec
stos
stc
push
fdivr
pusha
mov
sbb
pop
shrb
fldl
or
outsl
xlat
cmc
bound
dec
repz
jg
fistpl
mov
dec
flds
out
addr16
fistl
adc
mull
pop
push
ds
add
xor
test
jl
xchg
xor
shl
aas
testl
push
push
testl
adc
fildl
mov
sbb
dec
test
out
cmp
cmp
inc
movsb
daa
push
xchg
pop
lcall
dec
xor
cli
lcall
push
nop
popa
insl
ftst
pop
shll
mov
mov
iret
movsb
jne
pop
pushf
push
iret
push
js
xchg
push
out
adc
call
push
adc
inc
insl
lahf
mov
sbb
push
cmp
orl
imul
jg
rcrb
loop
mov
xchg
js
repz
add
jb
jb
loope
mov
outsb
loope
jbe
mov
es
adc
clc
push
jle
lea
inc
xor
sbbl
xor
pushf
xor
movsl
aaa
cmp
sbb
iret
mov
inc
adc
sub
jns
jns
das
jge
arpl
in
adc
fidivl
js
adc
adc
stos
pop
push
out
jg
ret
out
nop
cmc
jnp
add
pop
cmp
sti
adc
jo
cltd
nop
pop
jge
sahf
push
inc
imul
clc
insb
inc
jle
dec
mov
fs
lock
sub
pop
and
jb
loop
ljmp
test
or
stos
rcll
dec
push
adcl
dec
lea
push
mov
popa
xor
jg
mov
sub
fimull
enterw
cmp
xchg
pop
sub
repz
imul
mov
add
gs
xchg
jbe
inc
mov
sub
pop
lods
mov
scas
and
clc
mov
lds
mov
inc
jne
adc
lcall
mov
cltd
pop
jo
pop
lcall
jb
cmc
xor
mov
add
leave
call
push
ret
push
xchg
lret
mov
ret
sbb
mov
inc
in
in
repz
jno
xor
xchg
test
jo
mov
ret
iret
rclb
or
mov
push
or
mov
xchg
lea
mov
sahf
movsl
cmp
adc
pushf
push
mov
add
ljmp
jnp
popf
ret
popf
cld
add
jns
mov
xor
inc
cmc
call
inc
xchg
xor
fildl
gs
fidivrl
shlb
pop
cmp
push
push
jns
pop
insb
js
cwtl
dec
dec
cmpsl
repz
pusha
cltd
rol
je
scas
pop
mov
add
xchg
lcall
mov
add
cmpsb
cmc
lret
mov
jb
in
mov
push
aam
popf
loope
lcall
int
imul
jp
dec
mov
in
in
mov
je
jns
mov
pop
xchg
addb
call
cmpsl
xor
pop
mov
movsb
mov
jb
scas
xchg
jle
add
jne
fdivrl
popa
rcrb
lea
xchg
in
les
dec
lret
pusha
xor
pushf
jge
aam
lds
mov
xchg
push
add
jle
or
aad
loopne
popa
ljmp
sbb
cmp
hlt
scas
gs
mov
mov
or
ja
add
sub
out
fisttpl
pop
daa
add
cld
jb
xchg
in
push
pop
mov
je
mov
lea
arpl
out
and
in
bound
cltd
shll
jge
or
cwtl
imul
je
and
clc
xor
cmp
dec
pop
lahf
push
call
dec
leave
jns
pop
push
mov
jne
addl
jnp
sbb
movl
pop
jbe
dec
lds
mov
xchg
inc
hlt
mov
pmulhw
jmp
push
and
inc
arpl
clc
mov
insb
lods
xor
pop
pop
xor
jae
inc
in
inc
js
shll
or
push
lret
mov
inc
pop
shll
inc
mov
xchg
pop
add
push
or
sbb
jo
push
fs
mov
mov
sub
inc
orl
or
and
test
std
iret
push
int
rcr
adc
notl
fldl
xchg
add
cmp
mov
add
jo
xor
sub
call
insb
mov
xchg
psrlq
inc
je
stos
daa
in
fwait
add
pop
or
fidivrs
mov
inc
or
mov
xor
mov
sub
pop
pop
cmp
xchg
mov
push
pop
ljmp
jle
cmpsb
adc
mov
add
lock
push
int3
imul
mov
or
push
xchg
sub
push
ret
lods
sbb
pop
fiaddl
pop
push
inc
xlat
pop
clc
aaa
or
mov
inc
out
dec
cmpsl
jl
cli
fcmovu
mov
jecxz
mov
cli
mov
xor
xor
loopne
jb
lea
dec
daa
or
push
repnz
ljmp
in
dec
pop
mov
leave
mov
pop
sbbl
int
mov
jae
aad
shld
push
sub
lods
adc
cmp
adc
inc
jne
ret
sbb
sbb
or
pop
les
pop
add
rcll
mov
fcmovnb
adc
adcb
fsub
and
adc
mov
movsl
xchg
jl
xchg
clc
cltd
inc
mov
mov
mov
jo
popa
andl
mov
cmp
nop
cmpb
mov
push
inc
je
push
adc
movsb
push
jne
jae
jno
fisttps
fistpll
dec
aaa
pop
rcrl
sbbl
lock
cltd
and
jb
pop
dec
mov
pop
dec
inc
data16
xchg
add
jo
push
mov
mov
cmp
and
sti
cli
testl
dec
icebp
push
stc
aad
cmp
mov
adc
imul
or
shrb
xlat
pop
jae
jle
addr16
outsb
mov
or
or
data16
cmpb
scas
shl
gs
addl
jne
xchg
aam
fdivs
sub
call
and
push
mov
enter
push
or
out
insb
popa
and
cmpl
dec
fstpl
fimull
jg
push
sub
add
pop
adc
dec
or
inc
int3
sbb
jnp
sbb
gs
and
or
call
sbb
in
add
gs
mov
mov
cmp
and
or
inc
mov
xor
sbb
sub
fwait
stc
lret
ljmp
mov
adc
jg
lret
out
mov
jns
mov
or
pop
lret
cmp
out
clc
jge
jnp
or
cld
mov
cs
sub
push
ss
cmp
pusha
pop
cwtl
test
cs
inc
nop
mov
xlat
mov
dec
xor
inc
test
add
pop
pop
mov
movsl
notl
mov
fidivrs
fisttps
ds
mov
push
loope
fwait
cmp
cmp
iret
pop
testl
les
dec
add
test
movsb
imul
ret
ja
jmp
cs
insb
jp
loopne
dec
push
ja
xchg
fistpl
jne
pop
shll
cs
or
in
jbe
test
ds
xchg
enter
rcr
or
movl
mov
arpl
cmp
andb
ds
or
je
pop
jp
fnstenv
cwtl
test
dec
adc
inc
fstl
jp
sbb
and
leave
sbb
pop
jg
imul
fbstp
jae
loopne
cltd
sub
movsb
call
popf
repz
jns
in
icebp
cmp
imul
jbe
sahf
dec
add
into
inc
dec
xor
sub
xchg
and
les
cs
inc
out
inc
mov
cld
leave
push
push
std
mov
cmc
or
and
or
jb
dec
mov
pusha
daa
int
push
insl
mov
mov
in
and
call
mov
cmp
outsl
int
xchg
enter
cmp
dec
sbb
dec
stos
sub
inc
push
inc
pop
sahf
inc
movsl
adc
stos
pop
xchg
mov
test
and
in
inc
jne
jae
xor
sub
pmuludq
pop
inc
movsb
or
mov
fnstcw
imul
adc
jo
xchg
cmp
leave
ret
hlt
mov
mov
or
pop
jno
int
jge
data16
popl
mov
cld
push
js
ret
test
and
loope
movsl
lock
jg
mov
mov
sbb
jno
cmpsb
cmp
add
dec
cmp
xchg
sub
cmp
mov
dec
test
xchg
push
or
scas
xchg
xor
push
insl
dec
pop
push
cmp
xchg
je
imul
cmp
cmp
daa
and
jl
xor
xchg
fmull
jnp
xchg
or
mov
add
cmpsl
test
mov
cwtl
lods
jne
jge
push
sub
test
hlt
cmpl
xor
mov
jp
out
shll
iret
daa
lcall
mov
xor
and
add
arpl
sbb
dec
out
pusha
aaa
aad
cmpsl
xchg
push
outsb
fnstsw
movsl
in
and
mov
cmp
inc
sar
in
jmp
dec
bound
or
insl
out
cltd
test
out
jae
xor
mov
inc
js
jne
sbb
aas
out
mov
cmpsl
sbb
sub
movsl
mov
dec
lock
sub
lcall
sbb
lahf
push
subl
movsl
fiaddl
adc
in
cmpsl
push
orb
sbb
loop
xor
std
or
pop
cmpsl
in
pop
mov
pusha
std
leave
stc
pop
and
lods
add
sub
les
xchg
mov
xchg
or
aam
add
scas
jp
mov
pop
outsl
jl
push
mov
dec
jl
cmp
mov
lret
ljmp
mov
xchg
adc
adc
cmp
push
adc
ljmp
hlt
sbbb
jnp
bound
mov
jmp
sub
push
and
sahf
and
push
fs
lods
bound
add
ficompl
out
xchg
lods
sbb
fsubs
mov
dec
jge
orb
mov
fimuls
arpl
dec
test
div
jmp
dec
fnstsw
mov
jbe
add
mov
repz
mov
sahf
repnz
xor
and
inc
push
xor
ds
fsubrp
cwtl
cmpsl
sub
repz
loopne
and
mov
out
push
adc
cmpb
fisubl
dec
jmp
jl
or
pop
movsl
mov
pop
lret
subb
subb
out
jp
adc
in
pop
cs
or
aad
sub
inc
xor
xchg
subb
push
inc
ficoms
neg
add
add
xor
mov
idivb
xchg
aam
in
xor
out
shll
inc
pop
adc
loop
iret
sbb
daa
xchg
pop
pop
and
inc
push
lea
int3
fisttpll
jne
xor
sub
cld
fisttpl
mov
pop
in
adc
mov
add
push
mov
in
ss
and
xor
jl
pop
outsb
int3
inc
test
in
cmp
push
clc
ret
in
sub
pop
pop
scas
and
xor
push
mov
call
movsb
pushf
mov
das
std
and
cli
mov
push
sahf
pushf
mov
jle
pop
dec
inc
insb
or
xorb
mov
insb
test
xchg
out
or
mov
stos
jb
and
test
test
js
mov
and
fisubl
das
out
add
xlat
jnp
sub
fnstsw
or
aaa
ret
xlat
mov
aam
in
bound
xchg
xorb
imul
movsb
jne
in
push
inc
jno
mov
icebp
popl
pop
push
inc
xchg
ficoml
mov
dec
push
aaa
sub
out
imulb
pop
int
mov
and
push
push
dec
call
push
mov
adc
test
sub
inc
out
dec
jecxz
cs
int3
ja
ja
sbb
inc
test
mov
pop
mov
dec
or
mov
test
fldcw
inc
lret
das
pop
aad
aaa
loop
hlt
idivl
stc
xchg
and
cmp
dec
pop
lahf
sub
sub
or
cmp
cmp
nop
add
outsb
mov
sarl
xchg
mov
pushf
inc
xor
imul
pop
je
sti
adc
pop
lcall
jmp
loop
ss
test
in
jp
add
test
loope
push
inc
inc
hlt
jecxz
out
lds
fisttps
inc
pop
mov
mov
mov
in
add
inc
dec
xchg
pop
push
mov
pop
push
adc
mov
ror
popf
ret
push
shrl
push
fdivrp
jnp,pn
in
pop
sub
push
call
add
or
lcall
dec
cmp
xchg
mov
and
lea
imul
hlt
or
std
mov
xor
cmp
lcall
cmpsl
lahf
add
ret
bound
pop
mov
mov
mov
push
or
pop
fwait
icebp
stos
repnz
adc
sti
lods
int
lock
popf
sbb
mov
jno
repnz
mov
cmp
or
push
push
mov
jb
mov
lock
pop
push
mov
lret
xchg
cmp
shlb
mov
adc
es
xor
jns
adc
adc
insb
insb
ss
js
jmp
sbb
adc
mov
testl
aas
pop
call
aaa
mov
inc
and
xor
out
insb
loop
xchg
ljmp
ret
cltd
jo
xchg
jmp
sbb
jp
push
addb
inc
fcompl
mov
xchg
mov
mov
lcall
inc
cmp
or
and
jp
fwait
clc
push
cmpsb
ja
mov
xor
cltd
cs
fcmovnbe
shll
and
jb
shll
xchg
cmpsb
shll
fdivrs
movsl
jl
stos
mov
lret
mov
call
call
int
les
jns
addr16
rcll
pop
cmpsb
stos
loopne
js
and
mov
sahf
sbb
or
xor
divl
inc
push
outsl
arpl
sarb
adc
mov
mov
gs
cmp
insb
inc
imul
mov
mov
fistpll
push
mov
lods
or
push
mov
fwait
cld
scas
imul
sbb
out
mov
xchg
ret
inc
popf
fwait
or
je
cmpl
mov
mov
mov
xor
std
add
cmp
fwait
repnz
loope
mov
sbb
sbb
xchg
xchg
stos
mov
mov
pop
or
xor
sub
mov
cmpsb
push
repz
xchg
mov
mov
lods
or
repnz
jns
xchg
mov
or
sbb
cmp
adcb
sbb
mov
mov
sti
out
inc
dec
pop
lret
shl
scas
aam
mov
mov
les
outsb
stc
add
lods
sub
pop
inc
cmp
fcoml
push
aas
fs
pop
subl
xor
std
push
cmpsl
hlt
xchg
pop
lds
mov
add
xor
push
sbb
insb
out
in
xor
pop
xchg
push
fsubs
add
dec
repz
adc
fldl
cmp
mov
push
jl
sub
imul
push
cli
pop
or
repnz
push
mov
jecxz
inc
and
xchg
jg
inc
repnz
shl
pusha
cmpsb
mov
mov
ret
mov
cmp
jns
xchg
jno
sub
sub
dec
into
jl
mov
stc
mov
mov
jbe
sbb
stos
xor
pop
cli
stos
fs
repnz
or
and
ret
iret
sbb
filds
fwait
or
negl
scas
out
mov
mov
nop
iret
jo
mov
cmp
loopne
daa
jle
loopne
and
mov
and
ja
in
lcall
or
insb
insl
in
and
xchg
popf
jmp
jne
sbbb
sub
pop
sbb
outsl
lret
jns
mov
sbb
in
mov
pop
sahf
lods
pop
es
es
dec
idivb
data16
stos
mov
sbb
and
adc
call
sbb
inc
dec
ret
shlb
and
xor
xor
idiv
pop
int
push
adc
pop
out
pusha
dec
stos
cmp
aaa
dec
aam
jns
push
mov
loopne
xor
insl
call
pop
mov
mov
lret
ror
adc
xor
push
inc
inc
aam
ret
gs
mov
stos
jnp
mov
pop
das
lock
or
in
xchg
xchg
adc
add
cld
inc
push
loop
mov
js
fcom
adc
xchg
mov
mov
aam
pop
jmp
mov
js
mov
push
cwtl
testb
adc
lods
adc
lret
add
jmp
orl
xchg
test
push
and
cwtl
je
shll
adcl
icebp
ja
push
jns
mulb
ja
or
sub
mov
test
ret
movsb
pop
clc
fistpl
xchg
lock
and
ljmp
pusha
int
sub
loope
in
sar
fisttpll
mov
aad
inc
add
out
cmp
or
jmp
fisttpl
aam
clc
out
out
iret
in
mov
test
cmp
lahf
in
jbe
bnd
pop
roll
inc
xchg
std
rolb
addr16
nop
aas
subb
arpl
ret
out
stos
xchg
and
test
aad
xlat
pop
pop
add
or
out
dec
mov
std
mov
mov
popf
adc
dec
xor
fsubrs
add
loope
cwtl
push
xchg
adc
mov
mov
or
mov
lahf
mov
push
sub
shr
repnz
pop
and
mov
cmovns
mov
xchg
push
je
push
ljmp
or
insb
aam
dec
insb
ror
lock
push
fcmovu
and
mov
les
clc
cmp
mov
insb
jae
es
mov
push
xor
mov
and
enter
inc
mov
movsb
repz
call
addl
lcall
adc
adc
xlat
jne
xor
fwait
dec
xchg
in
cmp
and
pop
add
inc
and
int3
push
fistpl
sbb
push
add
call
cmp
iret
gs
rolb
xlat
mov
mov
pop
mov
cltd
dec
sarl
frstor
cld
xor
cmpsb
and
in
mov
jno
adc
push
jbe
sbb
xor
out
sub
mov
or
sbb
cmpsl
lret
popaw
inc
das
cmp
fisubrl
xor
sbb
loope
lock
imul
imul
mov
mov
lds
mov
pop
cltd
insb
loop
dec
popa
mov
jg
cmp
lcall
add
scas
fmuls
adc
xchg
jecxz
cmp
jbe
jp
pop
popa
push
and
mov
pop
cltd
and
lahf
lahf
or
popa
das
lds
sbb
sub
or
xor
mov
pusha
fcomps
dec
mov
fwait
mov
mov
andl
sub
xor
repnz
cmp
jne
inc
sbb
jmp
sub
or
jp
sub
xchg
lds
loope
xchg
dec
outsb
mov
xchg
and
jecxz
jle
clc
adc
test
outsb
ljmp
pop
iret
mov
call
add
mov
push
mov
push
shlb
push
bound
les
pop
inc
cmc
inc
pop
dec
jmp
mov
cmp
sbb
js
jne
out
add
je
movsl
movsb
ret
add
adc
stos
xor
jbe
inc
add
and
mov
pop
into
mov
stos
mov
and
mov
adc
subb
jb
jl
clc
out
outsb
ret
in
and
test
cmp
xchg
das
mov
test
cmp
sbbb
call
mov
inc
jp
outsl
in
rorb
test
int
es
push
dec
aad
jge
repnz
or
dec
pop
rcll
pop
pop
xchg
cld
and
outsl
fldt
push
xchg
add
jae
xchg
andl
imul
sahf
mov
dec
setl
lods
dec
mov
or
es
add
test
stos
sub
loope
add
leave
aaa
lcall
stos
lods
std
enter
outsl
lds
or
mov
jns
push
pop
lods
add
pop
xor
int
cmpsl
shrb
mov
push
invd
pop
mov
mov
scas
lea
lea
cmpsb
lods
shlb
int3
adc
xor
rcr
inc
inc
push
pop
cmp
jge
inc
dec
mov
add
mulb
push
ret
nop
fcmovnbe
outsl
xor
and
push
add
scas
pop
das
arpl
call
addl
mov
xchg
shr
les
jl
ljmp
repnz
in
sbb
jnp
pop
mov
sarb
mov
mov
inc
jg
call
add
sbb
cmpsl
jg
cmp
or
adc
ret
jg
pop
xor
cmpsb
xchg
pop
push
imul
xor
in
jb
ficoms
jmp
cmp
std
jnp
jo
jmp
mov
andb
cmp
add
fucomp
sarb
pop
cli
movsl
inc
pop
lods
push
adc
mov
aam
pop
or
bound
or
popf
and
mov
pop
imulb
std
repz
mov
sbb
cmp
cmpb
sbb
mov
test
push
into
sbb
pop
fstpt
jmp
dec
test
mov
ja
fstl
fcoml
aas
mov
xchg
adc
push
pushf
xchg
out
mov
int3
ja
push
dec
out
loopne
fwait
lret
das
nop
repnz
das
call
rcrb
mov
jl
inc
into
nop
jp
subb
pop
fisubrs
add
out
and
testb
mov
enter
or
dec
imul
leave
dec
aas
pinsrw
test
xchg
popf
or
test
ja
dec
sbb
xchg
nop
ret
mov
ret
cmp
mov
xchg
and
dec
insl
hlt
cltd
orl
daa
filds
js
enter
push
jnp
mov
jae
sub
push
xor
pusha
repz
pop
or
and
aam
adc
insl
xchg
and
cmpsl
ret
pop
ja
test
in
outsb
xor
lods
mulb
arpl
fistps
cmp
stos
xor
or
pop
das
std
pop
mov
mov
mov
mov
mov
jo
mov
stc
mov
out
mov
mov
add
repnz
mov
les
xchg
inc
ror
les
rcll
addl
mov
cmp
mov
scas
inc
mov
push
xchg
xlat
pop
inc
mov
xchg
jo
imul
iret
xor
pop
andb
mov
call
push
cmpsl
push
cmp
jno,pn
lock
out
xchg
pop
push
jns
aad
inc
jns
out
jge
jmp
sub
or
push
inc
pop
lds
inc
jl
push
bnd
xchg
out
scas
and
in
xchg
xchg
aam
lock
adc
sti
xchg
pause
shlb
push
mov
pop
cwtl
sbb
xchg
aad
fucomip
stos
inc
pop
mov
int3
mov
orl
cmp
bound
xchg
movsb
imul
repnz
push
addr16
rcrl
mov
ja
cmpsb
outsb
cmp
xor
ret
lret
push
scas
pop
sbb
pop
jo
fists
adc
idiv
xchg
out
popa
fldpi
add
mov
lods
jg
popf
testb
cld
xor
or
rorl
xchg
mov
inc
dec
fmull
jnp
aas
insb
xchg
mov
ficoms
cmpb
jl
sub
push
push
pop
lea
jae
pop
cmp
or
fsts
inc
loope
clc
dec
test
pusha
movsb
aam
cld
aas
les
call
push
inc
lcall
mov
xchg
addl
pop
sbb
mov
lds
jge
push
ret
loopne
aam
lods
das
mov
lcall
and
sub
imul
stc
outsb
sbb
sbb
daa
loop
fcomp
test
fistps
jg
out
adc
mov
sbb
mov
mov
pop
jecxz
cmc
mov
inc
mov
mov
cmp
xchg
out
jl
inc
xor
and
rorb
fnstsw
movsl
ffree
dec
inc
xor
push
pop
push
cli
cmpsb
les
mov
push
cld
mov
cmp
out
int3
call
jbe
scas
xor
out
cmovns
aad
stos
cmp
xchg
aaa
in
and
test
pop
push
outsb
aaa
jnp
add
ret
cwtl
or
dec
pop
or
mov
sbb
mov
xchg
push
adc
add
repnz
add
lock
idiv
fdivl
mov
push
scas
or
jo
xor
add
int3
cmpsb
cs
dec
fists
xchg
inc
ljmp
das
push
add
sarb
fwait
ja
mov
push
xor
push
or
jg
jecxz
push
roll
add
loope
or
test
loop
pop
sub
icebp
jle
mov
mov
setle
push
loope
in
or
xor
test
pop
outsl
test
test
xchg
pop
ds
pop
in
xor
outsl
mov
jecxz
fscale
mov
or
or
xor
test
add
add
push
shll
lds
xchg
stos
jns
cmp
cld
lcall
mov
mov
xchg
mov
aas
fistps
jo
adc
int3
popf
cmc
adc
jp
sbb
js
and
adcl
cmp
cmp
mov
push
inc
pop
mov
xor
push
imul
pusha
push
fs
out
jge
shlb
out
fstpt
test
add
mov
loop
int
cmp
cmp
je
nop
pop
les
sub
lods
push
mov
jl
and
inc
scas
lock
popa
stos
out
push
and
pop
pop
inc
or
xor
adc
nop
cwtl
xor
dec
or
or
fiaddl
add
in
mov
fdivl
lock
sub
inc
iret
movsl
mov
out
loope
push
mov
xlat
cmc
xor
dec
mov
sbb
add
cmp
fsubrl
outsl
and
fisubrs
outsl
push
or
xchg
or
cmc
dec
or
jl
aad
xchg
and
aad
push
sbb
std
or
out
dec
xchg
or
test
test
sbbl
dec
mov
arpl
add
mov
xor
dec
lahf
xchg
int3
sub
pop
ret
sub
sbb
xchg
xor
push
dec
mov
clc
mov
xor
xchg
fldt
int3
mov
pop
std
rcl
push
xor
nop
sbb
or
mov
lcall
cmp
or
mov
jle
popa
in
or
in
push
lea
aas
push
repz
pop
popf
mov
std
movl
daa
cld
imul
push
jle
inc
gs
loopne
push
pshufw
add
pop
hlt
push
cmc
sahf
adc
cli
into
in
pop
call
mov
jmp
pop
xlat
and
cwtl
in
add
pop
pushf
leave
sbb
lods
jne
pop
pushf
out
loope
loopne
cmpl
sub
xchg
clc
fidivl
cmp
dec
cmp
inc
adc
add
adc
jbe
mov
idivl
shlb
stos
jp
clc
bnd
ja
xchg
xchg
add
adc
mov
sbb
inc
push
dec
hlt
aad
mov
or
into
xchg
push
fmulp
out
orb
mov
adc
popf
lret
repz
ljmp
jns
je
lret
into
lahf
cmp
mov
dec
cld
and
pop
in
in
mov
pop
loopne
js
dec
mov
out
mov
and
loopne
les
leave
popf
daa
and
iret
lcall
dec
xor
pop
int3
sub
or
inc
cmc
sti
aad
test
sbb
jecxz
and
dec
jmp
jns
push
repnz
push
ljmp
adc
fiadds
mov
fst
dec
mov
mov
xchg
sub
push
adc
sbb
lock
jl
push
lcall
adc
or
pop
push
stos
dec
imul
aas
loope
and
testb
lcall
fs
mov
adc
lods
xor
aad
sbb
add
addl
sub
das
cmpsl
xchg
mov
mov
push
fs
jle
inc
and
nop
sbb
insb
mov
popf
jle
sub
fdivrs
ja
xchg
addr16
les
cmp
shrl
jbe
test
jmp
int3
inc
stc
addr16
xor
mov
xlat
clc
int3
jnp
xchg
mov
loopne
mov
fwait
cmpsl
pop
push
lcall
nop
pop
jg
fists
and
inc
cmp
add
sbb
movsb
dec
cltd
in
out
insl
lret
cwtl
ret
ljmp
enter
loope
int
push
jmp
in
add
xchg
pop
ret
lods
push
imul
data16
push
lcall
test
jo
and
aaa
imul
inc
mov
pop
shl
or
xor
lcall
sbb
leave
lcall
movd
cmp
in
out
cmp
push
imul
cmp
mov
mov
ds
cmp
popf
cld
sbb
addr16
popw
inc
call
cmovg
cmpsl
mov
cmp
stos
xchg
test
xchg
sbb
iret
sti
xor
fisubl
stos
push
cpuid
add
dec
cld
lds
mov
add
cld
dec
sti
leave
fistpll
shll
inc
cmp
sbb
gs
adc
out
lods
push
fcomps
pop
cmp
int
ljmp
mov
push
pop
mov
ret
cmpsb
xor
fidivrl
in
cmp
stos
xchg
ds
dec
and
movsb
out
in
jp
repnz
dec
ljmp
pop
call
push
mov
dec
int
fisubs
push
xchg
lcall
cmp
adc
adc
pusha
out
add
cli
mov
push
fmul
add
sub
inc
test
pushf
add
testl
sub
cli
dec
cmp
mov
incb
fidivrl
mov
xchg
mov
push
xor
jecxz
js
je
dec
movsl
pushf
xor
gs
lcall
jp
cmp
mov
lret
add
lock
arpl
mov
cmpsl
in
cmp
sub
sahf
add
imul
and
pop
xchg
push
xor
inc
mov
and
movsb
aam
movsb
cmp
dec
lds
test
in
test
or
push
and
dec
pop
jmp
mov
mov
lods
add
pop
movsl
mov
mov
mov
iret
push
add
ljmp
mov
addr16
sar
xor
or
cwtl
lret
stc
mov
xchg
movsl
mov
ret
insb
jge
mov
loopne
xor
mov
pop
les
stc
fmull
jp
or
xchg
xadd
je
mov
fnsave
xchg
mov
pop
ja
out
lcall
mov
sbb
movsl
push
int3
pop
jns
pushf
iret
lahf
xchg
cmp
inc
ds
adc
mov
scas
outsb
sti
mov
imul
fiadds
shll
test
hlt
cmc
xchg
loop
into
mov
sarb
lock
imul
mov
add
mov
fimull
xor
loop
pusha
xchg
mov
insb
insb
mov
push
xchg
dec
stos
mov
mov
dec
push
mov
lahf
rcrb
xlat
ss
sti
cmp
arpl
es
leave
dec
fisubrl
mov
inc
push
dec
hlt
cltd
adc
aaa
xchg
mov
inc
pushf
nop
mov
cmc
push
xchg
fwait
dec
fstps
adc
inc
stc
pop
mov
jge
xchg
fmull
pop
pusha
ret
dec
push
test
jno
sub
lds
fdecstp
xchg
push
popf
pop
dec
negl
xchg
cltd
pusha
xor
fisubl
in
push
xchg
adc
pop
cmpsb
out
and
jnp
xchg
or
inc
push
insl
mov
push
and
je
jbe
or
stos
xor
out
cmp
loop
lahf
adc
test
push
pop
or
daa
std
xchg
xor
jbe
les
faddl
mov
jns
xor
arpl
idivl
xchg
lret
xchg
mov
call
std
add
sbb
pop
cmp
push
daa
test
icebp
shrb
jbe
adc
stos
xchg
fidivrl
sbb
adc
mov
lea
inc
adc
clc
loopne
xor
dec
jb
addl
aas
adc
pop
lcall
ljmp
inc
and
outsl
arpl
jle
stc
ret
out
jnp
popf
push
test
push
push
addb
jle
imul
mov
punpckhbw
jne
jnp
outsb
jno
jp
popa
inc
mov
adc
mov
in
pop
ds
add
mov
mov
sub
mov
into
rorl
in
aaa
dec
icebp
aaa
cs
sti
sbb
adc
bound
dec
fsubl
cmpsb
add
mov
test
popf
cmpsl
sub
push
push
pushf
push
jge
loop
ljmp
sbb
fsts
popf
push
pop
loope
lods
mov
mov
imulb
push
jne
and
test
add
push
xchg
adcb
xor
xlat
sub
xor
add
mov
dec
fucomip
lahf
xchg
shlb
sub
roll
lods
jle
lock
aaa
idivl
push
and
xchg
aaa
push
popf
jmp
cmpsl
in
ljmp
push
loope
ficompl
out
mov
mov
pop
ficomps
push
cld
popa
lahf
fdivrl
dec
je
lods
sarb
sahf
rol
mov
out
push
lods
xchg
loope
or
stc
cs
sub
negb
rolb
mov
popf
mulb
pushf
pusha
mov
scas
push
les
xlat
jbe
xlat
add
adc
mov
jae
or
sub
mov
cmp
rolb
fisubl
fdivs
outsb
dec
mov
and
jle
mov
daa
push
bound
hlt
nop
mov
das
lahf
push
or
jle
push
mov
pandn
stc
sti
or
repz
je
lret
mov
in
pop
inc
out
lcall
jmp
push
jae
icebp
xchg
sub
lods
xchg
mov
icebp
arpl
add
js
int
push
push
stos
cmp
inc
xor
pop
dec
add
dec
dec
popf
mov
lahf
inc
ss
jno
mov
icebp
and
pop
mov
call
ret
jecxz
into
dec
in
adc
or
jo
ret
pop
jmp
pop
fwait
sbb
sbb
or
cmp
movsb
lahf
xor
xchg
movsb
loopne
xchg
mov
push
add
dec
inc
add
testb
into
into
sti
jge
mov
cs
pop
cmc
cmp
push
incb
insb
leave
std
mov
sub
rorb
ss
or
mov
scas
lret
out
mov
sub
popf
mov
sub
xchg
adc
adc
add
xorl
jmp
fwait
inc
sbb
inc
pop
adcl
xchg
insb
rorb
xchg
movsl
mov
sahf
pushf
or
and
hlt
loopne
ret
or
fiadds
jno
cmp
and
mov
push
mov
test
mov
sbb
inc
mov
pop
jns
mov
mov
sbb
outsw
cmpsb
mov
add
mov
ljmp
leave
fildl
arpl
sbb
test
jg
sub
jb
stos
xor
gs
mov
scas
daa
in
cli
mov
xchg
loop
dec
sub
or
push
popa
pusha
xchg
movsl
repnz
sub
add
jns
adc
inc
sub
loop
and
nop
xor
cmp
mov
ror
and
and
sub
fiadds
ljmp
lods
push
mov
cmp
scas
mov
add
dec
xor
imul
xlat
stos
scas
shll
popa
push
add
icebp
out
dec
dec
push
sub
push
push
lock
mov
lret
sbb
cmpsb
scas
out
icebp
xchg
pop
cmc
mov
inc
add
out
inc
dec
pop
xor
repz
jnp
aad
jae
pop
je
pop
test
sarl
mov
sbb
add
mov
sub
mov
mov
dec
xor
imulb
push
jl
mov
loope
sbbl
mov
sbb
scas
push
mov
mov
rorb
lret
mov
mov
or
push
loopne
xchg
and
lea
and
inc
ds
dec
cmp
and
loope
mov
inc
hlt
or
push
das
mov
inc
cmpsb
movsl
dec
sub
pop
fldl
out
add
in
mov
xor
test
scas
jmp
aaa
fcoml
test
gs
add
shrb
ficoms
jbe
cwtl
inc
cs
cld
mov
dec
cmp
sub
ja
xchg
xchg
inc
lea
push
push
icebp
mov
lahf
push
add
les
dec
test
and
std
test
loope
dec
jmp
iret
mov
negb
push
mov
shlb
push
mov
or
in
repz
not
data16
mov
in
add
insl
inc
in
sysenter
roll
in
sbb
in
xchg
or
jl
and
mov
mov
jl
aas
movzbl
xor
mov
sub
fdivp
push
mov
add
dec
outsb
out
mov
mov
xor
fisttps
jno
dec
gs
shr
out
xchg
jp
andl
pop
imul
sub
test
roll
popa
arpl
fimuls
cmpb
fiadds
dec
dec
pop
and
bound
lods
ret
xlat
popf
jb
pushf
push
jbe
push
les
sahf
push
ja
push
xchg
or
xchg
sub
es
pop
inc
jb
or
xchg
sbb
add
movsl
mov
mov
cli
add
imul
jo
ror
leave
xor
mov
mov
xchg
push
imul
jb
aaa
inc
dec
adc
test
js
popf
insb
in
mov
adc
push
test
outsl
dec
cmp
inc
sbb
and
in
pushf
pushf
mov
outsl
jbe
mov
inc
icebp
call
xor
pop
stos
xchg
ja
mov
and
mov
cmp
das
out
push
test
jl
imul
in
mov
mov
mov
cmc
test
std
sub
data16
inc
dec
mov
shll
mov
mov
call
push
push
test
or
ss
push
jne
push
pusha
push
push
xor
push
sbb
xlat
inc
push
inc
lock
lock
aam
xor
mov
andb
and
inc
mov
popa
cmp
insb
adc
pop
rolb
or
xor
shll
lods
mov
mov
ljmp
xor
outsl
jmp
push
or
subl
in
xchg
stos
mov
cs
arpl
and
sub
cmp
scas
inc
scas
fnstsw
xor
pop
inc
jo
inc
xchg
and
mov
dec
movsl
aas
cmpsl
shll
mov
xor
sub
cmp
sub
in
and
mov
jmp
aaa
add
cmpsl
jnp
lods
imulb
bound
jbe
sub
push
leave
push
push
loope
idivl
movl
mov
test
pop
add
sbb
pop
and
repz
push
insl
daa
aad
inc
add
push
clc
inc
inc
or
in
push
dec
arpl
out
inc
xchg
into
fcoms
pop
or
sar
ret
stos
pop
cmp
out
mov
clc
pop
push
adcl
es
int
fisubs
xor
inc
dec
shl
mov
lods
xchg
aad
cmpsb
jmp
jno
das
call
sub
pop
test
out
add
sbb
sub
hlt
dec
lahf
xor
sub
aas
xor
jo
cmp
xor
fdiv
hlt
cmpsb
es
jb
xor
lea
pop
cmp
push
ljmp
je
shr
sub
pop
lods
repnz
adc
imul
mov
mov
addr16
sarl
fsubrl
and
imul
mov
or
and
mov
ja
icebp
xor
testb
ljmp
jge
ljmp
jnp
aas
cmp
scas
push
pop
scas
xchg
push
movsb
push
outsl
push
jae
inc
jl
outsl
inc
adc
push
mov
fstl
cmpsl
out
repz
xchg
imul
or
jbe
pusha
and
and
sub
aas
leave
lcall
data16
mov
aam
mov
push
fnstenv
roll
out
sub
mov
flds
push
bound
jl
outsl
rcrb
popa
not
aas
sub
sti
sbb
cld
dec
or
pop
sbb
pop
mov
add
imul
jle
jnp
not
fsubrs
sahf
test
cmp
and
int3
push
in
mov
or
push
mov
lret
scas
stos
add
adc
pop
push
sub
imul
imul
daa
pop
jno
push
ret
int3
xchg
push
popf
cltd
inc
inc
mov
or
loopne
sarb
or
addl
dec
call
xchg
in
repnz
in
mov
push
xor
loop
mov
or
arpl
push
cmp
cld
rorl
sbb
fsts
lahf
out
pop
jmp
pop
mov
mov
push
pop
lret
lret
movsl
pushf
rcll
loopne
sbb
int
lahf
sub
mov
mov
in
sub
les
mov
inc
shlb
imul
jne
movsl
es
nop
inc
xchg
or
and
daa
addr16
lcall
pop
insb
fstps
outsb
loopne
sbb
fmuls
fs
push
mov
addr16
cld
pop
jmp
pusha
mov
mov
sub
or
mov
ror
push
mov
and
cmp
inc
dec
inc
sub
in
xchg
lea
add
repnz
xor
shlb
mov
xor
stos
jmp
andl
mov
movb
movmskps
fcmovnbe
pushf
pop
and
inc
inc
fists
cli
lods
into
mov
pop
pop
jge
fistpl
insb
and
mov
jo
push
mov
jmp
es
inc
gs
sbb
fstp
sub
stos
rclb
hlt
std
scas
rclb
nop
sti
pop
inc
sarl
dec
adc
subl
push
push
xor
call
fnstsw
sbb
outsl
outsb
repz
int
in
or
sub
int3
sub
cmpsb
cs
insl
pop
sbb
push
mov
xchg
fbstp
ret
aas
in
in
mov
ret
lret
add
imul
mov
movsb
popf
daa
mov
pop
mov
mov
sub
out
bnd
dec
loopw
pusha
cli
jle
push
mov
push
push
or
pushf
push
pop
cmp
fsubs
inc
das
imul
rclb
pop
jo
pusha
cmc
out
mov
dec
adc
cmp
js
daa
and
jbe
push
imul
cli
and
dec
insl
pushl
mov
mov
scas
mov
push
notl
cmp
fs
pop
daa
aam
je
pop
in
jp
ljmp
adc
pop
cmpsb
push
push
jp
add
mov
int3
push
mov
sti
call
sbb
dec
xchg
mov
in
ret
sub
pushf
mov
lds
xchg
jns
les
add
insb
outsl
out
aaa
pop
lods
in
push
aas
push
inc
push
or
xor
adc
scas
mov
movsl
insb
jne
adc
popa
mov
push
pop
lcall
mov
cwtl
adc
incb
xchg
push
adc
jo
fucom
or
lods
inc
xchg
cmp
sbbl
xchg
lahf
std
rorb
mov
mov
pop
add
pop
push
add
in
xlat
dec
rcrb
push
push
scas
mov
sbb
inc
jp
test
mov
inc
push
inc
bound
pop
push
mov
and
aam
pop
adc
xchg
in
out
push
cs
test
sbb
xchg
xlat
rcll
pusha
nop
mov
sub
lret
repz
aad
insl
add
nop
clc
mov
pop
pop
fs
int3
xor
daa
test
out
cmc
bound
jbe
sbb
in
cmp
gs
push
stc
mov
lret
jg
popf
in
push
subl
nop
add
dec
xor
mov
cmp
sub
and
pop
mov
jno
cld
push
enter
es
xor
and
cltd
pop
inc
aaa
pop
jecxz
fdivrp
lret
dec
jge
or
pop
lea
dec
idivl
or
pop
repnz
fnstcw
aad
add
xor
lcall
push
cmp
test
dec
or
push
or
in
xchg
cmp
ret
push
std
gs
cmc
mov
into
sbb
sahf
lods
adc
xchg
xchg
xor
test
push
lods
mov
in
popf
pop
and
xor
mov
push
mov
mov
or
pop
lods
mov
in
insl
fwait
jg
pop
mov
jns
xchg
add
push
jmp
aas
idivl
icebp
or
cmp
inc
xchg
or
aas
daa
jl
add
add
xor
mov
jge
lret
shll
out
jle
daa
sub
arpl
inc
fdivrs
mov
clc
mov
mov
xchg
inc
jmp
sti
daa
test
iret
in
mov
sahf
ret
call
in
xchg
mov
jno
or
pop
jnp
pop
jle
out
fwait
pop
and
fmul
pop
imul
push
xchg
cmp
add
call
mov
out
sub
adc
insb
xor
jne
sub
scas
jb
mov
or
sub
daa
fcompp
pusha
sbb
and
push
imul
sbb
cltd
mov
push
mov
stos
or
inc
addb
sbb
test
lahf
xchg
inc
aaa
or
add
inc
cmc
cmpsl
sub
icebp
mov
inc
or
dec
aas
adc
subl
std
incl
imul
xchg
arpl
stos
inc
pop
xchg
dec
es
jnp
jb
fcomps
jmp
push
jns
jg
and
jno
and
cs
and
test
inc
mov
sub
push
adc
mov
rcrb
xchg
xor
scas
cmpb
or
cs
mov
outsb
int
cmp
repz
xchg
mov
xor
ficompl
cli
adc
mov
cmp
push
jo
or
sahf
sbb
adc
mov
cld
sbb
and
ret
out
xchg
fs
jmp
add
iret
mov
cld
cmp
fsubs
mov
pop
cwtl
test
pop
test
gs
notb
dec
cmp
sti
dec
and
js
dec
jnp
repz
push
sub
xchg
pop
ret
rol
test
test
adc
loop
cmpsb
mov
out
and
in
jb
jae
mov
or
push
in
test
and
mov
mov
inc
in
cmp
test
dec
or
xlat
loop
es
and
lahf
jne
add
popf
and
inc
loope
lods
dec
push
dec
sbb
xchg
mov
arpl
inc
or
mov
add
lods
outsl
mov
cmpl
shl
mov
dec
jg
mov
push
nop
cmp
push
xor
add
push
outsl
mov
jnp
sbb
or
add
cwtl
and
jecxz
adc
mov
scas
out
or
push
mov
lea
add
data16
xlat
push
pushf
or
mov
les
stos
mov
pop
loop
out
mov
push
pop
jg
mov
bound
neg
imul
mov
pop
or
jle
mov
icebp
xor
adc
ret
pop
pop
mov
inc
cmpsb
push
rorb
adc
ljmp
mov
pop
iret
sub
sbb
js
xor
test
lea
dec
jns
lea
andb
add
lods
cld
mov
aas
daa
lea
out
iret
or
jmp
in
or
jns
cmp
fs
nop
das
shlb
or
xchg
jo
inc
test
js
lea
sbb
or
mov
add
inc
pusha
or
cmp
nop
mov
cs
mov
std
push
test
or
test
inc
stos
cwtl
lcall
fbstp
jnp,pn
outsl
pop
mov
jg
mov
xor
jg
push
ftst
in
mov
jp
cmp
lea
xchg
push
loopne
dec
out
sti
cmp
mov
adcb
cmpsl
add
mov
mov
jmp
xchg
int3
popa
mov
xchg
pop
cmp
adc
xor
mov
fnstsw
stos
mov
shll
or
fmuls
inc
hlt
pop
gs
sub
push
dec
cmp
ror
cmpsb
jmp
sbb
test
dec
and
in
mov
xchg
mov
pop
sbb
lahf
dec
js
repnz
gs
ror
push
jp
cmp
and
sbb
jg
push
ds
add
push
cmp
xor
repz
sarl
idivb
jns
inc
xchg
mov
pushf
ror
mov
stos
outsl
inc
dec
mov
jbe
sbb
dec
xor
cwtl
jmp
dec
xor
lea
insl
arpl
xchg
movsl
outsb
mov
test
insl
mov
fisttps
lret
push
pop
aam
ficoms
ficomps
mov
mov
sar
mov
in
dec
xchg
or
sbb
insb
cwtl
dec
lock
in
lea
xor
mov
dec
jmp
inc
push
jge
push
jg
add
dec
scas
xor
stos
lods
mov
sub
int3
jne
xor
push
insl
or
pop
and
movsl
xchg
sub
jb
rcll
into
pop
dec
adc
or
pop
xor
sti
xchg
vaddsubpd
sub
cmp
daa
pop
dec
mov
fpatan
pop
pushf
jne
in
dec
inc
andb
cmp
lds
test
adcl
xchg
mov
lock
xchg
mov
jnp
jecxz
sbb
jns
push
or
cmp
dec
in
inc
outsb
sub
or
jb
adc
and
lods
push
dec
pusha
cmp
aam
add
sahf
dec
xchg
pop
cmovp
fisubrl
pop
sbb
and
popf
jg
add
dec
and
sub
cltd
jbe
jmp
sbb
leave
xorl
cmpsl
rcl
cmp
mov
lahf
addr16
and
jge
add
bound
in
cmp
mov
fcoms
addr16
mulb
xorb
pop
add
movsl
cltd
enter
add
pop
ds
sarb
xchg
mov
in
frstor
mov
add
mov
xlat
cmp
pop
mov
mov
enter
cmc
fdiv
imulb
jnp
pop
mov
sbb
stos
sub
int
inc
xchg
rolb
pop
jbe
cs
inc
adc
inc
xor
cmpb
cmpsl
jg
push
sbb
inc
es
mov
movsb
jnp
fists
fcoms
ret
outsb
sbb
fstpl
inc
push
imul
hlt
jnp
ret
mov
add
xchg
cmpsl
mov
jae
push
and
clc
dec
mov
mov
pop
fcompl
jp
or
xchg
jns
pop
out
sarl
sbb
enter
imul
hlt
sub
sti
and
mov
pusha
pop
cld
lods
cmp
ss
push
mov
addr16
and
pop
popa
add
fidivl
lret
rcr
cmp
fldl2e
mov
out
inc
xchg
loop
adc
lock
jmp
cmp
adc
pop
in
shrl
sub
into
mov
and
sbb
andl
jecxz
or
dec
mov
xchg
lods
aad
add
jno
out
push
enter
sub
cli
mov
adc
inc
daa
mov
imul
scas
sti
arpl
push
inc
enter
push
xor
int3
test
pop
inc
jle
loop
pop
sub
jae
fwait
cmp
push
ss
rcrb
shlb
mov
sbb
cmpsl
or
xchg
cmc
sub
fisttpll
or
in
pop
and
xor
lea
adc
cmp
scas
mov
xchg
insl
inc
pop
neg
cltd
data16
xchg
movsw
push
jnp
add
in
adc
xor
cmc
ret
fcmovbe
sub
movsb
inc
xlat
dec
aaa
add
rolb
mov
lds
add
cli
jae
inc
jge
push
icebp
mov
pop
lea
jb
outsl
or
lret
loop
mov
cltd
push
pop
push
pop
adc
push
mov
fwait
mov
pop
outsl
dec
lea
mov
mov
mov
sub
mov
ret
push
sbb
jl
std
in
leave
and
cmp
mov
inc
popf
int
xchg
fnstenv
addl
pop
push
jecxz
xor
jmp
xor
xchg
pop
cmp
cmpsl
jle
out
dec
pushf
arpl
mov
repz
mov
push
fistps
int3
cs
loope
mov
arpl
in
inc
xchg
pushl
xchg
or
imull
rcll
push
popa
loop
pop
push
lods
rclb
ja
fisttps
xchg
clc
cs
enter
test
dec
jge
pop
add
shlb
xchg
lcall
and
cld
fldenv
outsl
mov
nop
mov
imul
loopne
mov
mov
cmp
aas
fs
sub
mov
aam
pusha
adc
mov
scas
pop
or
pop
or
pop
in
or
fs
pop
test
mov
stos
pop
or
jno
test
movsb
mov
out
imulb
lahf
push
or
jecxz
loopne
inc
jns
outsb
leave
jns
in
outsb
mov
add
push
adc
mov
and
out
xchg
or
xor
xchg
jl
jle
enter
sub
mov
inc
lea
sahf
loopne
enter
ret
les
jns
and
and
adc
jno
adc
adc
enter
idivb
lock
dec
push
lods
dec
addb
inc
jno
lea
and
mov
call
cltd
nop
lcall
push
es
cmp
jecxz
es
xorb
dec
mov
or
add
cs
sbb
inc
xchg
in
test
mov
fistl
repnz
jl
fs
mov
in
ret
and
aad
rcr
mov
mov
add
testl
pop
aam
add
fwait
mov
pop
add
lock
cmp
loop
jno
xchg
fmul
andb
data16
sub
int3
pop
in
fstl
sbb
jmp
scas
mov
pop
test
ret
pop
popf
xorl
lods
push
and
dec
pop
cmp
enter
fmull
in
push
sub
lret
xchg
mov
sbb
add
scas
test
mov
shll
lret
aas
mov
jne
push
int3
mov
clc
loopne
mov
inc
popa
cmpb
popf
xchg
popa
out
cltd
fnsave
or
inc
ret
inc
adcl
and
xchg
xchg
push
sub
iret
popa
leave
xor
pop
cmpsb
mov
cmp
xor
mov
mov
stos
outsb
mov
fwait
and
sbb
imul
stos
divl
dec
jne
ficomps
aad
inc
cld
sub
mov
push
dec
mov
iret
subb
outsl
icebp
dec
cld
fdivrs
jg
loope
lret
outsb
out
testb
aas
xchg
sub
popa
push
cld
sbb
jne
ljmp
cmp
jnp
cs
adc
cld
mov
sbb
inc
sub
lods
test
sbb
push
pop
mov
cmp
pop
int3
popa
lcall
in
push
add
dec
in
push
pop
xchg
xor
inc
out
cmpsb
fadds
nop
sub
mov
cli
std
ret
jae
jg
or
sbb
jle
ret
mov
jge
mov
mov
je
pop
gs
lret
lcall
jbe
jns
xchg
out
add
or
lret
pop
xchg
decb
sbb
add
cltd
jnp
mov
fisttpll
test
cmp
stc
xlat
cmp
outsl
add
subb
jge
mov
cld
fnstcw
out
loopne
mov
sti
fsubrs
fwait
jp
fstpt
push
jmp
mov
in
movsb
out
xchg
insl
rclb
sub
sub
out
cmc
data16
sub
pop
popf
mov
out
sarl
sub
jns
lock
mov
cmp
fs
hlt
cmc
xor
scas
aad
sbb
adc
mov
hlt
jle
add
insb
pop
jbe
gs
inc
push
xchg
jb
imul
mov
cmp
mov
jne
imul
into
inc
sub
mov
out
xlat
lret
jno
sbb
lods
imul
inc
fdivrl
dec
push
movsb
sbb
insb
sbb
clc
subl
sbb
add
repz
test
fcomp
fcmovne
add
push
add
xor
lret
icebp
fs
stc
lret
jle
adc
mov
lret
lcall
andl
pop
lcall
mov
pop
ret
cmp
test
fsubrs
dec
or
in
mov
and
mov
bound
aas
sbb
lea
and
gs
mov
lret
aam
mov
repz
lods
sarl
out
data16
push
xchg
adc
je
cltd
adc
xor
popf
stc
aas
fldcw
fwait
push
add
mull
stc
push
mov
jns
mov
fldl
popf
shr
adcl
mov
sbb
jmp
cmpsl
jl
sub
cmpsb
mov
rorb
cmp
xor
mov
fcomps
push
xchg
int3
sub
lods
jbe
mov
test
xor
cltd
cmp
mov
jle
sub
iret
mul
fcmovb
push
add
insl
or
jmp
or
xor
imul
outsl
or
shrb
jb
fbstp
leave
fstl
scas
lahf
or
or
mov
xor
pop
and
sbb
mov
aaa
stos
inc
cmp
aas
mov
jle
xchg
xchg
mov
mov
mov
pop
in
adcl
jnp
hlt
push
jbe
jl
push
pop
and
xor
stc
and
sub
loop
mov
cs
or
test
lds
in
aad
int3
xor
add
aad
sub
loop
sub
ljmp
repz
int
lret
or
inc
xchg
imulb
jne
push
outsl
aad
push
cmpsb
push
icebp
outsb
pop
and
fnstcw
mov
sahf
jno
out
dec
int3
jo
cmp
add
pop
push
push
or
sub
hlt
sub
sti
xchg
popa
cmc
or
movsb
jne
xor
data16
cli
cmpsb
mov
fiadds
and
and
out
rcl
out
dec
mov
rcll
xor
sub
inc
mov
mov
sub
push
daa
dec
arpl
xor
arpl
xor
mov
fdivs
mov
repnz
mov
clc
aam
cmp
lret
dec
mov
dec
fwait
into
pop
stos
push
outsl
out
lret
add
adc
jp
sub
mov
ret
or
aam
loop
das
sub
push
cmc
sahf
lock
in
xchg
lods
sub
call
pop
push
jne
call
sub
inc
or
inc
aaa
inc
lods
mov
dec
jmp
mov
inc
sbb
idivb
scas
mov
jmp
fcom
dec
xor
imul
arpl
pop
insb
push
sub
int3
loope
je
test
call
popf
and
jp
aas
fildll
and
jmp
mov
arpl
ret
or
out
mov
mov
inc
mov
xchg
imul
outsl
test
daa
push
leave
test
dec
add
ja
inc
cmp
arpl
mov
pop
mov
push
adc
cmp
pop
adcw
pop
enter
and
dec
out
push
mov
cmc
sub
push
inc
or
jp
cmc
js
adc
es
rcrl
into
pop
call
mov
mov
enter
imul
dec
loop
inc
jmp
int
insb
mov
mov
cmp
movsb
popa
lahf
sub
call
pop
mov
or
sarb
aam
movsb
pop
jo
add
jg
orb
cli
movhps
push
xchg
cmc
loopne
cwtl
fs
loop
push
divb
cmp
mov
push
hlt
cli
mov
xchg
mov
notl
sar
mov
mov
popa
xchg
mov
xchg
arpl
pop
int
add
stos
loope
jbe
inc
testl
ss
xchg
pop
adc
lret
aas
cld
sarb
fcmovnu
sbb
cmp
popf
jbe
mov
js
push
rcrl
stos
dec
imul
imul
mov
xor
scas
stos
jecxz
and
fidivl
xchg
cmp
lds
lea
pop
js
pop
insl
jnp
aam
aas
pop
fwait
sahf
loope
adc
aam
scas
lcall
repz
fstps
mov
sarl
dec
and
jle
leave
add
sbb
mov
xor
xorb
jmp
fwait
sbb
sub
mov
mov
sahf
scas
push
cmpsb
cmpsl
pop
in
cmpb
xor
mov
ds
std
or
insb
mov
movsl
mov
mov
lret
mov
lret
test
pushf
push
das
sbb
sbb
addr16
in
mov
ljmp
testb
pop
cmpsb
push
cmpsl
adc
clc
stc
leave
fdivl
call
pop
in
into
ss
idivb
push
clc
inc
adc
or
adc
inc
icebp
cs
lcall
lret
das
cld
lret
arpl
or
ret
sbb
jmp
in
sahf
xlat
ret
arpl
dec
xchg
mov
add
jns
sbb
add
sub
fisubrl
mov
sub
cmp
incb
xor
gs
dec
das
inc
popf
push
mov
ljmp
cmc
inc
lcall
dec
mov
push
gs
xor
xchg
movsl
clc
loop
sbb
je
or
xor
push
push
shrb
mov
pop
loop
push
xor
add
and
dec
or
xor
lahf
sbb
rorb
mov
cmpsl
sbb
xor
sbb
hlt
dec
daa
enter
xchg
leave
pop
adc
stos
cld
jb
pop
addl
jge
in
xchg
cmc
fcmovb
mov
lock
in
stos
xchg
aad
or
jg
sbb
xchg
inc
mov
sbb
cld
sbb
rol
aad
push
aam
shrl
fsubr
and
inc
stos
ds
xor
outsl
bound
mov
lods
test
mov
sti
cmp
mov
insl
enter
fs
push
push
scas
js
push
pusha
xchg
mov
test
pushf
aam
jno
push
sarb
dec
push
mov
stos
mov
movsl
mov
or
push
cmc
dec
or
and
push
jp
cmp
push
es
sbb
adc
pop
xchg
cs
outsl
filds
sub
push
adc
out
movsl
add
out
pop
cld
add
int3
das
sbb
or
lods
call
push
xchg
add
loope
jecxz
add
inc
stc
xchg
push
ret
xor
xchg
sbb
out
push
roll
das
xchg
rcr
xlat
dec
fdivrs
aaa
xor
in
popf
mov
aad
and
xor
addr16
xchg
inc
in
mov
push
daa
and
mov
sarb
or
ds
pusha
fisttpl
xchg
lods
cmp
rorl
ds
mov
mov
dec
and
fwait
arpl
cmpsb
sbb
push
in
add
cs
and
adc
jae
nop
ret
xlat
pop
fdivrl
and
es
xchg
add
dec
add
loope
adc
fsubs
jb
bound
cld
lods
and
imul
push
sbb
in
insb
adc
xchg
iret
into
dec
dec
hlt
dec
sbb
ret
sarl
push
sub
sbbb
cwtl
pushf
pop
mov
int3
into
add
jnp
xchg
addr16
je
cs
push
cmp
rol
sub
test
ret
out
xchg
xor
inc
adc
mov
aad
jne
cs
sbb
call
xchg
push
lret
ret
pop
sbb
mov
addr16
lea
stos
or
adc
aam
sbb
lcall
packuswb
aas
and
or
pop
push
ss
in
mov
or
sbb
in
iret
popa
pop
imul
rclb
xor
test
dec
xor
cmp
mov
inc
les
shll
adc
ret
int
inc
xchg
ja
mov
jp,pn
dec
cmp
mov
pop
inc
mov
lock
pop
stos
xchg
cmp
push
dec
cmpsb
dec
mov
popa
jnp
add
jp
xchg
pusha
inc
push
in
inc
jnp
loopne
movsl
xlat
in
mov
mov
jns
inc
and
and
lock
jge
push
adc
in
mov
adc
jae
pop
sbb
fistpl
out
out
jmp
movsb
mov
pop
shlb
iret
sub
scas
mov
sbb
xchg
movsl
mov
mov
fs
pushf
in
dec
movsl
insl
add
jecxz
aad
bound
mov
sbb
sub
out
das
jae
call
sbb
sbb
inc
cmp
or
fwait
sbb
mov
sete
movsl
fldz
stc
cwtl
mov
xchg
sub
aad
pop
popa
in
xlat
jno
sbb
fs
enter
adc
icebp
or
add
mov
fstpl
xchg
in
or
dec
fbld
jmp
hlt
out
or
sar
add
mov
or
out
out
icebp
outsb
cmp
cmpsl
push
repz
sbb
popf
aas
je
dec
push
push
or
sahf
mov
pop
mov
jge
dec
push
jg
push
sbb
neg
repz
sub
fimull
insb
sub
addb
scas
or
mov
mov
mov
inc
mov
add
mov
scas
dec
ds
mov
rcrb
out
mov
sub
cmpsl
push
and
fldenv
adc
loop
arpl
jns
adc
stos
fdivs
stc
and
jl
out
notl
cli
xchg
mov
dec
ss
mov
cltd
inc
pop
outsb
cmp
lock
in
arpl
mov
data16
rcrl
daa
into
pop
dec
in
insl
fldcw
xchg
scas
inc
leave
sbb
stc
test
inc
adc
test
mov
xchg
in
mov
mov
test
jmp
mov
mov
test
lcall
out
cmp
cmpsb
fs
cltd
sbb
hlt
mov
dec
into
gs
les
adc
push
fisttps
add
push
sbb
ljmp
aam
sbb
push
cmp
in
cs
test
iret
cmp
fdivrs
aad
sbb
out
arpl
jp
repz
mov
jecxz
mov
jle
add
xbegin
loope
push
stc
cmc
or
mov
cltd
movsb
push
adc
daa
dec
push
jb
rorl
sub
movsl
jp
fnsave
jnp
loop
push
sbb
lods
in
scas
pusha
add
dec
cmp
outsb
jae
stc
or
cs
ror
pop
sbb
lock
dec
in
sbb
lret
pop
push
mov
jp
gs
clc
xor
pushf
pop
mov
popa
adc
mov
leave
dec
lock
mov
fisttps
lea
leave
mov
inc
fs
jb
fwait
and
ljmp
stos
pusha
aas
dec
sbb
xchg
add
xlat
fdivrp
cmc
sbb
enter
sub
lret
fptan
incb
and
imul
jno
sbb
pop
adc
fldt
mov
pop
icebp
sbb
xchg
xchg
xchg
int
or
jl
out
adc
add
inc
popf
cmpsb
insl
jmp
es
lret
mov
adc
lcall
push
out
test
ds
mov
adc
iret
pop
hlt
adc
xor
ja
mov
cltd
and
subl
and
jb
mov
mov
test
mov
adc
add
sbb
imul
cmp
sbb
bound
je
and
ffreep
jbe
jmp
push
aaa
lcall
subl
stos
or
dec
popa
xchg
or
iret
movsb
fstpl
xchg
in
mov
cld
sub
jge
sbb
pushl
jno
and
xchg
popa
jle
cmp
inc
fildll
pushf
xchg
gs
xorb
test
fimull
fbld
add
pop
sbb
and
sti
push
fidivl
arpl
add
add
inc
jae
xor
pop
in
xor
aas
lods
cld
outsb
adc
xchg
mov
or
push
inc
mov
sti
cld
rcrb
repz
sub
inc
add
pop
ficomps
in
mov
cmpsl
test
stc
or
ret
dec
xchg
mov
pop
aaa
hlt
fistpl
xchg
mov
sbb
insl
push
mov
xor
push
enter
pop
outsb
ljmp
aaa
dec
sbb
enter
dec
adc
pop
imul
leave
xchg
mov
mov
xchg
mov
sub
sub
adc
xor
test
sbb
dec
in
xor
fwait
or
mov
pop
lods
inc
inc
popf
add
scas
lock
xchg
and
push
cmp
fs
dec
movsl
mov
fcompl
mov
lea
pop
and
cmpsl
or
jns
push
stos
dec
xorl
xchg
mov
jb
ret
insb
rcll
inc
pop
sbb
push
cmp
dec
xor
jl
inc
cmpsb
xor
gs
dec
fistpll
insb
jle
pop
sub
outsb
icebp
or
push
lds
rorb
lret
xor
xchg
pop
je
adc
clc
jmp
pop
mov
xchg
mov
lods
push
fdivl
divb
stos
xor
pop
std
xor
fwait
std
cmp
es
pop
pop
xchg
jno
mov
outsb
addr16
mov
adc
or
cmp
ljmp
xchg
sbb
subl
ja
cs
stc
pop
sbb
inc
xchg
push
cld
mov
mov
sahf
gs
sbb
add
xchg
xchg
pop
adc
out
stos
or
adc
xchg
es
out
inc
xchg
sbb
scas
add
inc
arpl
cmpsl
push
lods
ljmp
test
lcall
jge
int3
cwtl
jno
pop
sar
pop
push
jl
jl
nop
in
sti
dec
dec
or
and
or
cmp
jno
xorb
aas
jp
lock
in
jp
daa
cmp
mov
dec
mov
jmp
and
push
and
loope
cmp
dec
scas
adc
xchg
rcll
incl
or
jle
add
pop
nop
jb
int3
pop
mov
int
cmpsb
lret
push
sub
pop
sbb
add
fwait
mov
push
jno
arpl
push
stc
mov
push
sbb
mov
xor
fistpll
inc
aas
fidivl
and
and
jb
sbb
stos
and
int3
dec
jl
sarb
sti
inc
mov
mov
or
clc
stc
out
inc
xor
into
div
pop
cli
adc
aad
and
cld
fidivrl
jb
fdivs
mov
cmpb
lret
stos
ret
dec
push
add
pop
mov
push
mov
hlt
xor
subb
or
sbbl
add
or
sub
add
in
cs
movsl
xor
xor
fcompl
pushf
jge
and
cmp
add
test
das
add
inc
roll
std
movsl
shl
mov
hlt
dec
aam
jg
inc
xchg
rcll
inc
adc
repz
jne
shlb
mov
mov
jp
push
cmpsb
fisttps
test
jo
pop
cmp
cmp
std
iret
mov
sbb
add
fists
pop
dec
stc
xchg
mov
or
sbb
test
jns
mov
cmp
mov
mov
push
lods
sub
push
jp
mov
sbb
in
aas
mov
out
fs
lret
and
adc
orb
push
lds
dec
fcoms
xchg
leave
mov
ja
addb
mov
dec
dec
dec
jle
xor
adc
shrl
jle
push
in
adc
pop
add
ja
gs
push
js
ja
fisttps
sub
leave
ljmp
into
daa
jmp
test
outsb
lret
cli
subl
test
mov
mov
sub
sub
ja
inc
jmp
das
sbb
and
jb
or
fadd
push
movsb
push
insb
inc
scas
push
sbb
mov
inc
mov
and
push
das
fisttps
hlt
arpl
ds
loopne
or
xor
xor
rorb
leave
mov
mov
pushf
fnstsw
jmp
fadds
push
cltd
mov
lret
mov
inc
outsb
js
xor
and
in
sub
test
mov
cltd
mov
mov
adc
inc
xor
mov
jecxz
out
in
mov
sbb
add
aam
sahf
stos
or
xchg
xor
popa
mov
xorl
pushf
and
cmp
hlt
arpl
push
cld
hlt
push
mov
lods
pop
lods
push
jge
sbb
cmpsb
jl
arpl
jne
add
sub
push
out
pop
mov
xchg
fdivr
ret
pop
add
mov
pusha
fs
pop
cli
insb
mov
xlat
inc
mov
scas
mov
sub
push
test
lahf
push
mov
adc
in
lods
dec
lods
jne
cli
arpl
cmp
nop
daa
mov
and
sbb
imul
add
mov
mov
imulb
xchg
and
loopne
das
push
lds
add
pop
or
in
sub
repz
cltd
insb
lret
mov
clc
and
movsl
rcrb
sahf
add
cmp
into
lods
movsl
repnz
ret
sbb
pop
out
add
jmp
jecxz
add
fcmovnbe
int
sahf
mov
movsb
push
mov
dec
fucomip
xchg
cmp
filds
test
add
sub
and
jecxz
das
push
sub
cli
out
pop
addr16
pop
mov
or
loop
ljmp
inc
testb
cmp
xchg
cmpsb
dec
or
cmp
dec
xor
mulb
push
js
or
xchg
lahf
inc
mov
xchg
testb
mov
add
inc
or
pop
mov
dec
out
pop
daa
mov
mov
adc
mov
pop
jle
mov
add
jae
pop
inc
or
jno
sub
test
movsl
les
and
xor
mov
sahf
sbb
out
fildl
xchg
incb
sbb
dec
add
xchg
mov
lods
push
stos
dec
and
enter
lods
add
mov
scas
cwtl
inc
push
sarl
cmp
test
mov
jmp
in
mov
stc
jno
jle
jle
or
pop
push
clc
sti
add
push
add
xor
test
add
les
add
filds
mov
inc
push
inc
mov
and
or
andl
movsb
mov
cmpl
mov
or
movsl
in
cmp
mov
xchg
inc
and
lods
fs
fiadds
mov
add
cmpsl
sub
stos
sbb
dec
or
dec
roll
fisttps
cltd
push
popf
adc
aad
sub
movsb
mov
push
add
lret
pusha
mov
pop
mov
dec
dec
jno
mov
adc
andl
addr16
das
mov
mov
hlt
or
add
mov
xor
push
add
mov
xchg
jae
iret
sub
mov
imul
xchg
sbb
int
mov
dec
cmp
mov
add
pop
shl
fucom
sarl
push
dec
pop
imul
shr
push
push
jo
in
out
iret
stos
std
adc
cmpl
divb
frstor
dec
dec
xor
leave
mov
dec
lds
xchg
into
xor
rorl
mov
mov
mov
cld
rcrb
inc
sbb
push
cmc
sub
inc
lds
mov
andl
and
cmp
movsb
cmp
mov
jmp
and
push
cmpsl
sub
push
lcall
adc
cmp
js
aam
pop
adc
inc
test
dec
push
dec
aam
jecxz
mov
adc
inc
out
lods
imul
jno
ror
pop
addb
jns
popf
aaa
nop
fldl
in
scas
xchg
stos
inc
mov
lret
adc
jnp
push
pushf
jb
mov
iret
scas
popf
out
xchg
fists
sarb
pop
mov
fdivs
fwait
add
or
cmp
or
cmc
pop
stos
ret
rclb
adc
xor
ss
cmp
sahf
sbb
jae
mov
xchg
pop
mov
ficompl
or
mov
sub
xchg
cmp
and
push
xchg
adc
dec
insb
cmp
mov
into
inc
adc
insl
xchg
add
adc
adc
xor
frstor
jp
and
rcr
push
cmpsl
das
or
add
jne
jp
pop
lahf
pusha
std
cmc
inc
mov
fs
ljmp
dec
enter
aaa
xchg
fidivrs
cld
sti
jb
ds
adc
lds
shll
or
and
add
pushl
adc
mov
sahf
ret
add
leave
push
addr16
stos
out
shll
test
sub
xchg
test
dec
scas
xchg
xchg
fildll
xor
js
dec
sub
movsl
xchg
dec
push
cmp
decb
test
push
adc
inc
sbb
daa
frstors
cwtl
mov
adc
and
and
or
or
xlat
movsb
sub
loope
pushf
andl
jmp
cld
cld
lret
mov
test
scas
stos
scas
dec
xor
push
or
hlt
test
lods
and
cwtl
stc
or
movsb
incb
imul
sub
push
stos
sbb
repnz
aad
sbb
sub
mov
push
sti
fcomps
xor
test
jmp
stos
pop
test
popf
cmc
pop
das
aaa
in
fstp
and
or
lahf
shll
cli
fwait
or
xor
into
jne
xor
cmpsl
mov
lahf
fcom
xor
dec
pop
add
scas
push
and
xchg
push
add
aam
jns
dec
lods
rclb
outsb
cmp
lahf
or
xor
insl
xor
sub
and
jmp
or
jp
out
cli
dec
inc
sub
jne
adc
mov
mov
test
lret
xchg
lds
push
xchg
das
mov
jg
js
cmpsl
jmp
inc
stos
popa
dec
push
jmp
stc
std
les
push
push
push
xor
das
add
add
pop
pop
jno
xchg
cmp
popa
outsl
repnz
data16
jl
push
addl
cmp
loop
je
pop
xor
xor
sbb
dec
push
mov
in
ds
dec
cmp
inc
mov
lock
add
ret
xor
dec
andl
xor
xor
cltd
loopne
pushf
lock
cmp
imul
mov
mov
xchg
imul
jecxz
ja
jp
inc
test
jne
pushf
dec
mov
adc
sub
in
rol
jge
pop
jmp
jg
sbb
fimull
fistl
addr16
fdivl
lock
inc
outsl
loope
test
cmp
dec
addl
pop
cli
repz
int3
inc
adcb
xor
cltd
lret
lcall
fnstcw
iret
jb
and
std
rcrl
cmpsl
xor
clc
xor
mov
mov
cs
jb
push
lock
loopne
in
cmp
inc
out
ret
cwtl
xchg
movsl
or
and
jl
lods
or
scas
cmp
inc
cmpsl
mov
push
inc
adc
ja
lss
jecxz
into
push
mov
or
lods
xor
sahf
out
mov
push
push
pop
into
int3
aad
push
adc
mov
aas
outsb
shll
aas
push
and
aas
mov
icebp
js
sub
push
mov
or
cmp
mov
jle
repnz
dec
push
mov
add
or
pop
ds
or
loop
add
pushf
inc
stos
fbld
and
and
cld
std
xchg
add
fistps
sub
inc
incl
dec
pop
ret
xchg
fidivl
cli
mov
push
dec
xor
cmp
jl
push
les
xchg
mov
ss
mov
lahf
nop
sarb
pop
push
out
mov
fs
cld
mov
lretw
mov
dec
clc
adc
cld
sti
mov
test
jnp
pop
mov
push
jae
add
into
jecxz
or
or
bound
pop
das
sti
pop
xchg
pop
repz
scas
repz
push
pop
gs
add
xor
dec
hlt
cmpsb
pop
cmc
daa
js
mov
xor
insb
outsb
in
mov
into
or
or
pushf
stos
cwtl
mov
shlb
repnz
cmpsl
mov
pop
inc
ja
and
cmpsl
in
pop
fs
mov
mov
mov
mov
sbb
push
pop
adc
push
mov
sarl
adc
jl
inc
xor
sbb
das
sbb
push
jnp
or
popf
or
jb
cmpsl
ja
pushf
subl
jno
inc
inc
sarl
lret
sarl
dec
cmp
outsb
ljmp
icebp
loop
mov
xchg
add
adc
sbb
mov
hlt
cmovb
pop
jecxz
add
sbb
xor
jb
add
mov
cmc
lods
jne
lret
negl
dec
jb
imul
daa
sets
pop
mov
test
in
inc
jl
int
pop
jnp
dec
ja
incb
or
mov
in
add
dec
jle
inc
es
mov
cmp
mov
clc
jne
testb
cmc
mov
push
lret
lahf
jg
neg
je
cmp
cmpsb
imul
loop
ret
add
and
daa
and
ljmp
call
js
orb
cmpsl
std
ljmp
cmp
jmp
sbb
cmc
xchg
mov
pusha
inc
nop
jl
in
sub
lahf
pushf
rcl
daa
sbb
lea
ljmp
pusha
lods
iret
xor
out
lods
mov
nop
xchg
test
cs
mov
cli
dec
mov
stos
adc
sub
push
out
imul
cmpsl
in
mov
outsl
cmc
in
inc
add
cwtl
fs
out
adc
sbb
inc
and
jle
push
dec
adc
nop
data16
xchg
mov
push
fisubrl
lds
in
ss
add
out
sbb
inc
add
das
in
cmpsb
imul
push
enter
mov
rcrb
stc
inc
or
and
scas
jno
mov
fbstp
jmp
out
bound
cwtl
adc
and
add
lds
std
sti
in
stc
stos
or
test
fidivrs
jnp
push
in
hlt
sub
std
adcb
fsubs
aas
mov
iret
sbb
insl
mov
xor
pop
jns
fnstsw
cs
inc
inc
pop
adc
testl
or
outsl
xchg
loope
pop
mov
sbb
cs
rcrl
pop
aad
test
loopne
daa
sbb
cwtl
popa
push
repz
add
insb
or
push
lret
mov
aaa
inc
mov
pushf
adc
add
vpunpcklqdq
in
add
push
imul
mov
push
fxch
lock
jno
fisubrl
add
xchg
out
mov
dec
lahf
ljmp
lods
mov
mov
jo
paddsb
xsavec
gs
mov
adc
lahf
mov
pushf
ret
les
jge
cs
test
divl
push
shll
insl
gs
push
ss
push
cmp
add
daa
xchg
icebp
inc
popa
mov
popf
jmp
scas
dec
outsl
xchg
sarl
rcrb
fsincos
adc
ficoml
arpl
xchg
mov
std
mov
bound
fwait
mov
and
and
or
das
mov
dec
gs
jp
and
and
loop
ret
jne
mov
mov
jl
mov
data16
loop
xchg
adc
mov
adc
sbb
mov
jns
pop
pop
sub
mov
inc
xchg
sub
cmp
scas
in
cmp
enter
sub
push
push
pop
add
add
pmullw
add
xor
xchg
mov
loope
icebp
cwtl
fcmovnbe
aad
inc
add
cmc
xchg
jp
mov
out
ljmp
pop
out
jmp
pusha
pushf
enter
std
loop
xchg
insl
cli
jmp
je
jmp
pop
mov
pop
ficoml
jmp
jecxz
out
sahf
jnp
jge
mov
leave
push
push
add
cmc
in
rolb
lods
mov
and
sub
repz
jne
or
ret
sub
insb
pop
adc
into
cmpsl
gs
dec
in
mov
das
cmp
jo
push
cli
ret
test
and
jns
test
mov
jne
push
inc
scas
push
lahf
xor
inc
dec
daa
sub
jmp
aad
mov
mov
mov
add
rorl
and
lock
mov
ss
mov
in
mov
inc
xchg
jp
out
aas
adc
or
sub
lret
out
mov
pop
xchg
loopne
and
mov
div
rorl
add
sub
xchg
movb
les
mov
das
fdivrl
push
fstps
rorl
mov
stos
mov
mov
ret
mov
cmp
xor
pop
lds
jno
or
xlat
xor
rcrl
movsb
inc
shl
arpl
xchg
push
pop
cmc
icebp
jno
imul
shl
jp
dec
das
and
push
int3
dec
mov
test
sub
out
loop
je
daa
adc
gs
ficoml
pusha
movsb
adc
mov
and
lea
pop
out
imul
adc
add
mov
add
out
int
push
lret
sbb
imul
inc
mov
sbb
faddl
sub
cmp
loop
jne
xchg
push
fcomps
dec
jp
rcr
arpl
lcall
sub
sbb
mov
filds
cmp
and
stos
add
pop
mov
negl
je
cmc
or
jecxz
push
icebp
in
xchg
jmp
std
sti
sbb
dec
stos
je
inc
cmpsb
daa
aaa
rcrb
aaa
sbb
adc
test
push
mov
and
xor
int
cmc
movsb
or
stos
jne
xchg
int3
adc
xor
xchg
andl
lret
or
out
cld
int3
pop
and
es
sub
pop
jecxz
fiadds
sbbb
jb
inc
dec
aad
jmp
dec
adc
cmp
adc
negb
icebp
dec
cmc
jo
push
inc
gs
cmc
mov
test
mov
push
mov
sbb
and
sti
scas
pop
cmpsl
inc
push
xchg
mov
push
fbstp
subb
jp
xchg
cmp
xor
cmp
flds
inc
adc
ficoms
mov
cmp
bound
push
push
and
xlat
stos
pop
pop
jmp
adc
cmp
mov
mov
cs
push
mov
scas
adcl
xchg
push
mov
loopne
mov
cmp
leave
fistpll
xlat
xchg
lock
inc
mov
in
cmp
inc
test
loop
and
les
sbb
pop
pushf
aad
pop
inc
mov
inc
jmp
out
orl
ret
adc
and
mov
imul
daa
je
iret
hlt
dec
and
dec
testb
stos
push
add
and
sbb
jg
pop
movsb
lods
dec
jne
gs
cwtl
mov
sub
jno
ret
push
jne
insb
inc
push
mov
int3
lock
dec
je
test
push
out
or
imul
stc
adc
adcl
outsb
sub
mov
cmpsl
pop
ret
push
scas
cs
movsl
mov
dec
sti
xlat
inc
icebp
push
cmpsl
push
mov
ja
stos
ljmp
movsl
cmc
out
sbb
push
dec
xchg
lahf
stos
dec
stos
out
fdivl
repnz
jne
in
mov
loop
in
mov
pushf
xchg
movsl
sub
repnz
sub
xlat
mov
scas
cmp
mov
ret
or
test
int3
out
xchg
ja
aas
dec
mov
pop
filds
adc
ret
sub
sub
movsb
pop
rcrl
repnz
sarl
shl
cmp
cmc
sub
pop
mov
cs
sub
repz
lods
fdiv
ja
mov
jg
adc
cmovge
test
cmp
mov
xchg
mov
mov
sbb
lds
dec
inc
cmp
sub
pop
int3
push
jle
add
xlat
hlt
sbb
push
mov
rcrl
in
outsl
jge
lahf
fdivs
bound
into
pop
cmp
dec
inc
scas
test
mov
jmp
repz
call
in
lock
stc
sbb
pushf
hlt
adc
test
arpl
dec
rcrl
fucom
int
xchg
inc
sbb
mov
sbb
aam
sub
dec
pop
add
sbbb
test
test
cmpl
sub
xchg
int3
inc
sbb
and
mov
jmp
pop
add
mov
lret
mov
add
mov
push
jmp
adc
pop
push
pop
mov
ret
das
xor
shl
out
pop
addr16
in
adc
mov
roll
dec
xor
mov
inc
rolb
ja
lret
lods
lret
data16
cld
cmp
sar
mov
mov
jmp
in
push
sub
pop
pusha
sbb
and
lds
dec
and
add
lods
add
jo
shr
loope
xor
jno
ror
lea
or
and
loope
jl
shlb
and
cmpsb
and
in
mov
addl
cmp
inc
js
ret
push
out
in
xchg
push
jge
add
dec
imull
sbb
xchg
insl
movl
push
call
lds
sbb
js
cmp
sub
loopne
leave
aas
add
cld
adc
and
dec
push
mov
add
fs
sbb
cmpsl
add
or
add
jno
test
repnz
adc
push
adc
mov
xchg
lret
js
cltd
lret
ss
fiadds
psubd
adc
mov
adc
xchg
addb
or
inc
cmp
push
das
lcall
xchg
or
movsb
out
xor
push
dec
repnz
pop
mov
dec
mov
xor
cmp
lahf
cmp
push
arpl
dec
mov
mov
gs
pop
lret
clc
dec
dec
or
test
out
lods
xor
pop
loope
loop
xor
ret
push
jo
jle
mov
cmpsl
fwait
jno
cmp
push
test
push
xor
push
pop
lcall
into
sub
mov
int
cltd
cld
sti
mov
xchg
sbb
mov
mov
jg
mov
pushf
ret
stc
fwait
jb
loop
sbb
stc
or
popa
je
loope
pop
lcall
mov
xlat
cmp
sub
push
xor
jecxz
xchg
mov
mov
in
stc
ljmp
fcoms
sbb
cwtl
outsl
pop
dec
test
inc
adc
dec
xor
push
push
test
iret
pop
int
fs
xor
pop
ret
pop
sbb
pop
les
pop
lea
fwait
sbb
and
in
xor
scas
shrl
popa
and
test
into
aam
jo
data16
jecxz
adc
in
push
ss
push
les
mov
in
inc
fld
inc
stc
mov
inc
test
test
gs
mov
mov
or
inc
mov
push
out
sti
pop
stos
rol
fsubl
stos
jbe
mov
fwait
push
mov
pop
mov
loope
cmp
call
rcr
notl
or
jbe
es
pop
aas
xchg
xchg
clc
dec
inc
jns
in
imulb
cld
aaa
mov
outsb
xchg
add
jg
pop
loop
xor
out
call
jge
mov
aam
sub
dec
lea
aas
loopne
rorl
sub
push
cmp
les
arpl
inc
idivb
arpl
fucomp
out
addr16
mov
adc
loope
push
cld
lcall
sahf
mov
sarl
mov
fistpl
notb
xchg
lock
scas
mov
inc
xchg
cmpsb
jmp
sbb
mov
insb
lcall
and
dec
in
orl
cld
inc
push
outsb
aaa
nop
cmp
dec
sbb
mov
cmpsl
mov
or
xchg
fwait
xor
iret
push
jecxz
xchg
sahf
or
mov
adc
push
push
and
push
in
pushf
sub
test
xchg
mov
mov
addl
cmp
dec
pop
out
shl
pusha
jmp
aad
cmp
jb
jo
mov
pusha
cli
test
cli
rcrl
sbb
pop
jle
xor
sbb
enter
call
lds
out
jo
pop
js
aaa
jb
and
ret
gs
push
sbb
mov
sbb
adc
add
adc
scas
mov
sbbl
aad
aaa
cmp
out
jnp
out
int3
xor
mov
mov
inc
pop
add
ret
adc
inc
sub
ds
add
int3
xor
aam
pop
test
xchg
mov
pop
adc
push
into
js
mov
stc
les
pop
dec
gs
adc
jg
insb
inc
cmpb
add
push
xchg
mov
inc
test
in
xor
arpl
jmp
mov
mov
aaa
dec
aas
jb
pop
inc
scas
int
xor
js
or
inc
aam
dec
in
inc
push
and
mov
lret
into
pop
decl
insb
cli
jecxz
fwait
inc
repnz
in
loope
pop
fscale
scas
mov
mov
mov
adcl
outsb
add
loope
mov
jecxz
push
arpl
cmpsb
push
dec
xchg
inc
inc
pop
jns
mov
hlt
pop
cld
sbb
jecxz
mov
push
daa
int
outsb
sub
push
push
fcompl
xchg
add
mov
sbb
sub
cld
cmp
scas
repnz
jmp
pop
pop
arpl
jnp
ds
hlt
fs
jno
ficompl
pop
outsl
popf
lock
mov
jge
inc
data16
sub
lret
es
mov
mov
dec
cli
sub
xchg
ret
inc
xchg
movsb
xchg
and
mov
rclb
cltd
jbe
sti
sbb
add
adc
xchg
lods
cli
fisttps
sarb
sbb
cmp
stos
pop
insb
test
scas
pop
add
in
lea
sar
pop
xorb
sub
lods
add
outsb
int3
es
lods
add
mov
push
cmpsb
xor
mov
inc
cmp
and
and
sub
mov
pop
mov
fcomps
jmp
or
jmp
sbb
paddb
cltd
dec
fldt
dec
addb
rorl
ljmp
test
mov
jb
push
lods
lahf
sub
adc
jb
push
dec
movnti
imul
sbbl
rcl
dec
fisttpl
lds
in
pop
sub
add
push
cwtl
es
dec
cmp
push
ljmp
fwait
push
ljmp
addr16
push
pop
sbb
loopew
xchg
push
fucomp
mov
imul
dec
or
jae
adc
cld
call
sbb
mov
pop
jnp
push
jmpw
loope,pn
adc
aaa
xor
sbb
lods
cmp
xor
into
lock
ljmp
inc
insl
sbb
mov
pop
movb
in
sub
nop
adc
adc
mov
lret
bound
sbb
adc
add
in
jle
lahf
lret
pop
jmp
lds
orl
shrb
cs
push
sti
jle
into
aam
stc
sahf
pmullw
daa
cld
inc
movsb
lcall
mov
xchg
lahf
and
dec
negb
lret
popa
mov
adc
xor
mov
xorl
mov
sub
movsb
in
inc
or
repnz
inc
cmc
jbe
xchg
xor
push
loop
mov
adcb
addb
cwtl
das
sarb
dec
push
int3
sbb
pop
fcomp
inc
sub
imul
cmp
mov
pop
ljmp
mov
xor
scas
sti
into
jae
mov
mov
cmpsl
jbe
push
getsec
clc
repz
adc
inc
js
mov
ret
inc
xchg
icebp
dec
lock
in
sbb
movsl
pop
test
lea
sub
inc
cmp
loopne
inc
fistl
cmp
movsl
int
push
inc
mov
iret
ds
das
fildll
and
repz
jnp
and
sbb
test
mov
adc
push
jecxz,pt
jns
cwtl
mov
push
xchg
shl
roll
jmp
lcall
mov
clc
pop
dec
cld
loope
dec
test
adc
xor
mov
cmp
mov
jl
dec
push
movsb
sti
cmp
leave
sub
in
mov
lret
pop
shr
ds
lods
fcoml
pop
out
orb
or
xor
jae
inc
jp
je
mov
aaa
andl
enter
sub
aam
push
fidivl
outsl
fidivl
pushf
add
mov
pop
or
pop
dec
loopne
sahf
loopne
aam
cmp
loopne
push
add
call
xchg
imul
pop
scas
loope
lret
xchg
jl
stos
in
push
sti
aam
add
jg
inc
xchg
mov
or
lods
mov
fbld
mov
ljmp
int3
dec
add
adc
push
push
int
sbb
ret
mov
xor
call
loope
clc
push
ficompl
add
addr16
xchg
test
mov
jno
mov
scas
mov
stc
iret
adc
inc
call
sbb
int3
mov
add
inc
sbbl
or
xchg
jno
sub
cmp
scas
ja
push
flds
jl
adc
outsb
std
xor
dec
imul
fwait
into
dec
pushl
loope
outsb
or
aam
push
fistl
test
mov
inc
sbb
test
lahf
add
imul
pusha
pushf
pusha
data16
mov
push
je
sahf
loopne
mov
and
inc
mov
cmp
nop
es
pop
nop
add
push
jge
aam
mov
in
outsb
dec
jnp
xchg
cltd
cmpsb
mov
rorb
lahf
and
mov
jl
jmp
pop
mov
out
stc
insl
sub
arpl
mov
pop
shl
cwtl
test
inc
and
daa
mov
mov
dec
and
push
adc
sti
in
cmpsb
es
cs
cltd
and
xlat
sub
sti
xchg
rclb
or
outsl
add
icebp
inc
pop
leave
in
lret
nop
cmp
sub
out
call
lds
je
lods
int
xchg
mov
rolb
sar
jnp
out
imul
xchg
fisubrl
mov
jecxz
aad
add
or
fnsave
push
mov
cmpsb
pop
inc
cmp
add
mov
mov
cmp
mov
cmpsl
cmovs
jg
fnsetpm(287
cmpsl
sub
and
push
add
loop
out
jb
sbb
jno
push
mov
int
fisttpl
mov
jmp
pushf
arpl
iret
repz
sti
mov
scas
and
pushf
popa
stos
hlt
sbb
adc
fstpt
lock
mull
inc
jp
jae
xchg
adc
push
in
les
mov
and
sub
shll
xor
jl
out
push
mov
mov
cltd
cmp
dec
xchg
pop
or
xchg
pop
or
inc
int
sbb
xchg
push
pop
ret
lods
decb
mov
or
xor
or
push
js
ja
xlat
in
push
sahf
test
je
insl
mov
icebp
scas
sbb
pop
out
or
mov
icebp
xchg
push
jae
inc
cmp
dec
in
cmp
lea
jae
cmp
and
or
cmc
nop
xchg
jp
jmp
dec
mov
test
loopne
jl
cmp
or
imul
stc
xchg
stc
aas
mov
mov
arpl
inc
pop
and
xchg
mov
shl
lds
adc
stos
push
and
rclb
inc
add
or
aam
cmp
mov
call
iret
ja
mov
lds
or
lret
imul
jmp
test
out
out
test
insb
and
push
cmp
aaa
int3
ds
mov
cmpsb
lret
mov
xchg
dec
fcompl
aaa
mov
ss
clc
mov
xor
lea
mov
fildl
fs
xor
enter
aad
mov
jl
pop
lock
inc
imul
dec
sahf
ja
pop
xchg
sub
mov
lea
push
imul
and
xchg
sbb
xchg
ret
pop
les
loopne
jge
push
dec
repnz
jns
sarb
mov
jo
xlat
sete
mov
cmp
inc
dec
add
aam
in
xor
jae
lahf
dec
jnp
call
sbb
icebp
ja
aam
in
aam
test
imul
dec
fisttpll
rclb
jmp
enter
enter
or
mov
rcrb
mov
jnp
sbb
jp
and
je
sub
fs
out
cld
mov
sbb
push
lahf
subb
dec
and
add
std
adc
lea
push
dec
xchg
xor
cmp
test
sbb
movsb
push
inc
sbb
and
cmp
dec
push
push
loopne
in
cmp
sahf
pop
in
psrlq
lahf
inc
inc
icebp
sbb
and
orb
push
adc
xchg
stos
in
jae
adc
pop
cmp
lods
ret
aam
or
lcall
pop
sub
jno
mov
push
mov
mov
lock
mov
stos
add
in
jne
mov
mov
push
mov
mov
inc
xchg
xor
jo
outsl
jecxz
xchg
and
addr16
ret
subl
in
imul
xor
jmp
ret
lahf
mov
mov
sbb
pop
jge
pop
mov
jg
lea
push
movsb
add
outsl
pop
mov
ja
xchg
ds
add
sbb
xchg
mov
jbe
dec
mov
iret
mov
dec
sbb
adc
test
std
aas
jns
iret
push
xchg
ss
test
lock
stc
xchg
dec
dec
imul
movsl
sbb
adc
mov
jmp
loop
mov
add
jecxz
int
cmp
aad
in
mov
test
scas
fsubr
insl
out
push
mov
das
fdivl
and
and
dec
add
cmp
dec
pop
cld
adc
jae
pop
lods
popa
call
pop
jmp
mov
jns
ljmp
add
cmp
lahf
stc
sbb
xchg
rcl
test
inc
mov
andl
test
sbb
stc
mov
mov
popa
std
mov
cld
jae
xchg
pop
mov
xor
leave
fidivl
or
push
scas
sub
std
popf
xor
fisubrs
data16
xor
ds
or
dec
mov
ljmp
xor
icebp
mov
jmp
orb
mov
mov
jecxz
addr16
aaa
inc
popf
stos
and
xchg
in
fs
jbe
mov
lods
lret
mov
inc
jge
inc
pop
jmp
adcl
jb
mov
nop
mov
inc
push
call
nop
cmp
fistps
jno
jne
dec
xor
mov
adc
inc
mov
cmp
shlb
mov
int3
gs
insl
cld
push
repnz
add
fcoml
movsb
jb
test
sub
mov
outsl
pop
hlt
mov
adc
or
jno
inc
adc
inc
inc
xor
sarb
imul
adc
es
pop
out
sub
les
xchg
addr16
stc
or
mov
jae
sti
pop
addr16
lret
fmull
orb
inc
das
or
mov
pop
push
dec
clc
ljmp
hlt
out
loop,pt
pop
mov
cld
movl
adc
pop
inc
sub
and
adc
aaa
and
std
cwtl
jl
outsl
sti
cli
or
adc
gs
sub
inc
test
xor
arpl
xchg
mov
sub
out
mov
sahf
int3
jae
lcall
mov
mov
stos
lods
js
test
xlat
xor
xor
jp
xor
jmp
rorb
imul
mov
mov
add
movsb
out
xchg
xchg
adc
jbe
mov
or
mov
mov
int
dec
adc
mov
je
fwait
jbe
icebp
dec
out
pop
inc
jle
cmp
adc
in
mov
pop
adc
pop
out
and
sbb
shrl
inc
outsb
popf
fdivp
mov
movsb
aad
cmc
sub
lock
mov
test
fs
and
dec
pop
add
pop
push
sbb
mov
mov
jns
ret
and
xchg
mov
xor
std
sbb
arpl
mov
daa
cmp
inc
movsb
push
gs
jecxz
xor
xchg
mov
test
std
sbb
stos
and
cmp
fcoms
scas
ja
mov
int
lret
sar
mov
push
mov
add
cmpsl
mov
mov
cmp
cld
test
push
js
imul
jle
div
push
mov
inc
push
xchg
pop
sbb
jle
mov
ljmp
jecxz
add
mov
xor
dec
sbb
xlat
test
cli
xor
add
in
in
xchg
scas
sub
and
xchg
nop
hlt
outsb
jb
jl
pop
jle
mov
popf
gs
inc
iret
fs
inc
call
xor
stos
mov
push
xor
sub
mov
add
mov
test
fisubs
sti
mov
dec
jne
fisubrl
mov
add
xchg
lea
movsb
adc
and
insb
loopne
jnp
stos
call
imul
lahf
sbb
sub
or
mov
cltd
xor
pop
jbe
ret
cmc
lock
and
sbb
filds
test
pop
xor
adc
mov
pushf
shlb
test
hlt
rcl
cmp
mov
in
jmp
and
stc
push
xchg
mov
lock
and
fcmovu
inc
fwait
mov
shl
jae
add
pushf
mov
cltd
adc
cmp
es
sti
xchg
jae
cmc
lret
fsubr
int
dec
das
fnsave
jae
sbb
fnstsw
clc
xchg
cmp
xchg
roll
jnp
adc
int
in
addl
ret
stc
std
inc
imul
push
es
adcl
sub
or
and
jmp
pop
dec
popl
iret
sub
xor
mov
mov
and
out
sbb
pop
mov
cmp
arpl
lahf
adc
movsl
lea
mov
sub
mov
subl
adc
sbb
pop
push
scas
xchg
add
ret
mov
jne
imul
mov
mov
cmp
fadds
fstpt
xor
sarb
int
enter
cmp
mov
jl
mov
xor
gs
imul
cmc
jecxz
mov
dec
je
lds
cltd
gs
cltd
dec
xorl
xchg
lahf
pop
pop
mov
mov
out
mov
rcll
lret
dec
mov
pop
mov
add
lahf
mov
rol
mov
adc
int
movsl
pop
mov
fdivrl
in
lods
mov
ljmp
mov
clc
mov
es
lret
and
and
jae
cmp
cmp
aad
pop
aaa
push
loope
arpl
mov
push
fisttpl
je
or
rcll
add
rol
dec
xor
ja
sub
into
mov
shll
and
sbbb
outsb
xchg
jmp
push
or
je
in
add
and
mov
fdivrs
jae
sub
test
lods
inc
movsl
jg
into
in
filds
mov
lods
xchg
fsubrl
adc
jbe
sbb
mov
sbb
or
mov
or
mov
push
xor
mov
dec
arpl
jae
insl
push
outsl
mov
mov
ljmp
mov
dec
test
pop
fldt
negl
add
es
dec
jo
sub
fdivrs
rcrl
jo
jecxz
movsb
sbb
fldenv
int
das
rcrl
dec
pop
pushf
add
adc
and
cld
popa
ret
lods
mov
or
call
jns
ljmp
adc
push
or
js
sbb
scas
xor
cmp
jnp
mov
dec
enter
push
into
adcl
and
testl
and
adc
mov
push
filds
mov
fildll
dec
mov
dec
mov
pop
mov
fbstp
mov
dec
pop
dec
andb
jae
je
stc
pushf
ja
fildll
pop
fsts
mov
dec
dec
and
fmuls
add
lea
mov
push
jns
nop
push
in
out
and
and
jne
mov
xchg
subl
or
sti
fwait
xchg
push
sbb
int
insl
lods
adc
mov
scas
ljmp
out
or
jbe
jp
movsl
loopne
sbb
std
out
pop
mov
mov
or
imul
xor
inc
push
mov
pop
iret
xchg
inc
xchg
sub
lock
int
rolb
lea
mov
mov
aam
adc
adc
sub
fmulp
ja
mov
add
js
lods
movhps
push
movl
push
cltd
in
mov
mov
xchg
xor
xor
jo
dec
adcb
scas
sti
xchg
lods
pop
fwait
divl
jno
add
add
fimuls
fwait
jbe
jp
js
ret
gs
rorl
loopne
lods
inc
rcrb
iret
imul
int
js
jg
dec
fwait
push
xchg
mov
enter
jg
jg
mov
cmp
sti
and
and
pop
xor
or
popa
xchg
xor
dec
sub
mov
mov
movsl
data16
pop
movsb
movsb
and
ss
push
fwait
dec
inc
filds
or
hlt
fbld
or
inc
das
aad
popf
or
inc
es
aam
jae
add
arpl
in
loopne
insl
nop
add
jnp
push
outsb
jne
imul
std
adc
mov
popf
xor
fnstsw
out
inc
pop
stos
or
jmp
cmp
lret
mov
adc
fldcw
imul
mov
and
xchg
pop
or
mov
push
das
loopne
mov
push
je
lahf
int3
cmc
and
inc
fcomps
gs
repnz
leave
cmp
mov
dec
xchg
cmp
iret
mov
mov
push
add
adc
cmpsb
and
sbb
lret
inc
or
mov
outsb
incl
in
inc
mov
sbb
test
pop
dec
jg
xchg
or
rcrl
test
sbb
and
cmpl
loopne
sub
jp
lret
out
outsl
xor
es
and
addl
jo
and
mov
sub
xor
mov
add
jne
es
in
jmp
cmp
aaa
shl
xor
adc
lcall
adc
mov
repnz
cmp
xchg
dec
jmp
xchg
mov
jmp
mov
stc
pop
dec
scas
xor
stos
mov
sarb
and
pop
or
pop
fwait
xlat
dec
mov
pop
fnstsw
cmpsb
or
push
dec
sbb
mov
pop
leave
mov
pop
or
xchg
sub
decb
mov
pop
stos
inc
repnz
repz
das
inc
frstor
lret
add
add
call
js
ja
lea
mov
and
jae
and
std
les
jo
scas
lret
in
aad
inc
std
sahf
dec
or
in
mov
xchg
jbe
scas
pop
mov
mov
mov
mov
test
lcall
jb
out
jns
jbe
jno
mov
inc
jbe
aad
int3
loope
pop
dec
jmp
clc
inc
fidivrl
jl
pop
movl
jnp
mov
or
stos
mov
out
adc
or
push
jge
push
mov
subl
sub
pop
mov
movsl
mov
aaa
lea
loopne
sar
push
pop
mov
or
movsb
cmp
and
shrb
inc
lods
je
jnp
push
jmp
jae
add
loope
mov
mov
sbb
xchg
and
cmp
das
sbb
adc
dec
add
sub
mov
and
lahf
cmp
pop
push
pop
xorb
inc
pop
test
jo
xchg
cmpsl
dec
inc
inc
out
fcmovne
lods
cmp
mov
in
adc
outsl
insb
push
loop
cmpsb
jg
stos
imul
xor
fdivrp
xor
sub
call
lock
pop
and
add
loope
inc
pop
ret
xor
inc
push
test
dec
loopne
xchg
or
or
pop
call
cmp
xchg
mov
cmp
adc
xorb
xor
fstl
fldl2e
ret
xor
daa
inc
out
data16
bnd
cli
cmp
ss
scas
inc
jno
sub
fcmovnbe
cld
ret
mov
pop
outsl
sbb
negl
mov
lret
imul
test
inc
int3
inc
mov
jo
les
repz
push
insl
testb
scas
cmp
push
scas
les
push
arpl
pop
sbb
subl
or
insl
dec
add
int3
mov
test
xor
jns
out
mov
fwait
push
mov
fldenv
lock
mov
stc
jne
xor
mov
in
loop
jge
call
out
loopw
xchg
scas
jne
adc
add
xchg
lahf
subl
test
not
sbb
inc
aam
fwait
mov
mov
loopne
je
pop
data16
xor
add
and
fcomps
sbb
lret
movsl
pop
outsb
aas
jae
dec
xor
sub
mov
outsl
daa
lods
adc
dec
sti
hlt
mov
fs
sbb
daa
adc
adc
pop
or
jbe
rcrl
dec
mov
pop
push
in
pop
testl
inc
mov
jo
sbb
loop
sbb
icebp
cmpb
inc
je
lea
jb
push
fstpl
dec
mov
je
xor
repnz
loopne
and
frstor
mov
or
mov
push
incb
pusha
sub
add
dec
jo
jl
cs
aas
cmpsl
mov
gs
sbb
mov
adc
lcall
add
mov
inc
xlat
fxch
arpl
xlat
add
bound
push
ficoml
stc
push
jno
push
xchg
ret
xor
jb
jge
repnz
faddl
dec
lods
or
push
sub
push
jmp
xchg
adc
mov
xchg
out
rcrb
scas
lds
cmc
adc
in
shll
add
mov
ds
inc
aam
cltd
scas
jae
adc
pop
fldenv
dec
pushl
jbe
push
dec
pop
xor
jb
sub
pop
lock
pop
mov
jnp
push
aam
ss
insb
inc
jae
cs
in
xchg
cwtl
sub
mov
dec
mov
rcll
enter
mov
sbb
mov
notl
ret
loop
daa
push
mov
sbb
shl
xchg
mov
add
cmp
inc
mov
add
push
scas
nop
mov
adc
iret
ds
test
gs
jge
add
leave
popf
jb
nop
or
pop
dec
fs
movsb
mov
push
lahf
xchg
push
jb
daa
loop
push
mov
jmp
lahf
sub
push
add
or
test
sub
into
stc
ret
das
jge
aad
pop
sbb
sbb
cmp
mov
sub
imull
add
inc
rclb
dec
mov
mov
ds
mov
or
stc
mov
jnp
call
cmpsl
in
or
pop
dec
xchg
xchg
jecxz
bnd
or
movsl
lds
out
sub
or
sti
and
inc
outsb
sub
fbld
cmp
stos
mov
dec
pop
or
and
and
sbb
xor
repz
cltd
sub
cld
sub
popf
out
sub
cwtl
nopl
adc
push
xor
lods
add
push
pop
sbb
loop
or
push
in
inc
or
cli
fdivrl
inc
lock
inc
aaa
mov
push
int3
enter
adc
xor
or
stc
std
push
sbb
rolb
xor
cmp
lea
fisubs
mov
adcl
push
addr16
or
into
xor
stc
mov
cmp
xchg
leave
fwait
xchg
test
add
pop
cmp
icebp
mov
push
xchg
cmp
jp
lock
mov
scas
pop
cmc
cmp
rol
aad
int
mov
aad
decl
and
pop
orb
lods
sbb
mov
mov
push
repz
or
es
popw
push
mov
add
lea
and
out
fidivrl
jg
xchg
jecxz
push
xlat
mov
add
arpl
subb
pop
or
push
adc
xchg
loopne
sbb
cs
sbb
push
sbb
inc
cltd
pop
xor
or
add
fmuls
dec
jge
mov
cwtl
lods
or
int
inc
hlt
mov
mov
arpl
imul
push
mov
xchg
dec
pop
rcrl
rclb
mov
add
in
mov
test
loope
leave
mov
push
in
add
jbe
jge
mov
mov
jecxz
leave
ja
pop
fidivrs
pop
mov
xchg
push
jnp
cmp
xor
xchg
lods
out
cmp
dec
xor
lret
push
jb
jecxz
ficomps
sbb
stc
lea
cwtl
ret
gs
push
xlat
std
pushf
mov
rol
mov
test
push
push
mov
inc
push
aas
adc
lcall
aaa
cmp
and
and
out
and
lret
or
bound
jl
cmpsl
es
mov
xor
shl
out
sbb
in
push
mov
or
add
mov
stos
inc
insb
arpl
mov
or
lods
jp
dec
add
hlt
out
adc
xor
mov
rcrb
mov
jne
sti
call
push
add
ret
jl
cmpsb
pop
lods
addr16
dec
push
or
inc
lret
push
mov
insl
repnz
adc
cmp
add
call
sub
out
lcall
mov
cwtl
mov
cmp
cmp
rcrb
out
das
aam
rcrb
jmp
movsb
dec
test
stos
repnz
push
pop
jne
push
ja
dec
push
add
mov
sub
ljmp
inc
pop
push
pop
out
repnz
daa
icebp
inc
fcomps
cmpsl
mov
sbb
fisubrs
xlat
sarb
call
push
test
cmp
sbb
push
mov
jge
pop
adc
lahf
pop
nop
or
mov
aad
lods
insl
inc
sbb
fcmovb
scas
int3
cmpsb
adc
pop
cmpsl
xor
fisttpl
ds
and
mov
mov
inc
inc
jmp
add
jo
mov
pop
jl
xor
out
cmpsl
lea
fldcw
lods
mov
loopne
xor
pop
add
sub
test
mov
roll
pop
xchg
cmc
dec
cltd
add
aas
sub
sbb
rclb
pcmpeqb
xchg
or
sub
aaa
divl
mov
inc
mov
aas
sub
add
cmpl
mov
sbb
add
mov
rcl
mov
or
push
movsl
mov
jnp
mov
inc
jae
cmc
xchg
mov
loopne
mov
add
je
pop
jbe
adc
mov
lock
jbe
fnstcw
loopne
push
fsubl
lea
int
mov
jle
sub
sbb
lret
pop
and
enter
lods
and
or
mov
icebp
xor
mov
mov
pop
pop
test
jge
bnd
mov
loope
shll
int
in
pop
sub
pushf
push
xor
cmp
int3
mov
lahf
mov
lcall
rsm
insb
mov
outsl
mov
push
xor
out
dec
jg
sti
int3
jl
pop
mov
lret
xor
jle
push
mov
mov
inc
mov
xor
push
fwait
aas
addr16
push
ret
push
cmpsl
push
jle
dec
jo
fldcw
pushf
push
inc
fbld
jp
mov
cmp
pop
cmp
test
dec
jle,pn
mov
pop
in
dec
dec
pushf
push
push
jl
push
inc
push
inc
fbld
fs
pop
push
push
enter
hlt
out
xor
push
repnz
test
xchg
int3
lahf
fisubrs
mov
ss
sbb
loope
dec
pushf
pop
push
repz
jge
inc
and
pop
xchg
ss
sti
stc
fldcw
xor
daa
inc
pop
push
xchg
test
insl
cmp
shlb
add
repz
xchg
xor
lret
or
dec
stos
loopne
jnp
jle
mov
dec
gs
jns
das
and
cmp
insl
xor
jp
pop
dec
mov
inc
xor
jge
std
push
mov
inc
in
out
jb
xchg
fadds
rorb
push
roll
add
mov
popa
jae
pop
sti
mov
fnsave
enter
jae
popa
cld
sub
stos
pop
sub
test
fdivr
decb
iret
or
add
pop
cmc
popf
fimull
pop
enter
mov
dec
xchg
and
xchg
sbb
mov
sar
das
lahf
nop
cmpsl
jmp
cmc
mov
cmp
mov
stc
jmp
scas
sbb
inc
xchg
leave
cli
dec
mov
pop
jecxz
popf
jle
push
jo
nop
xlat
mov
jecxz
outsb
aad
sub
imul
cwtl
lods
ror
mov
adc
add
xor
xor
or
dec
rcrb
rcr
xchg
int
and
pusha
data16
int3
mov
xchg
mov
dec
jns
arpl
flds
pop
mov
sbb
dec
cwtl
out
mov
jl
lret
sti
or
dec
mov
rclb
mov
pop
sub
pop
hlt
sub
adc
mov
mov
insl
sbb
fstpt
add
into
and
xlat
ljmp
sub
fdivs
hlt
pusha
repnz
inc
push
xor
cltd
inc
pusha
out
clc
mov
bound
mov
ja
mov
xor
rclb
loop
mov
imul
pop
xchg
roll
sbb
into
jp
hlt
rcll
push
sub
jb
jecxz
jns
dec
jecxz
jl
xchg
sbb
push
negb
pop
test
test
dec
out
add
push
jl
rorl
insl
adc
pushf
cmpsb
bound
aam
mov
cli
neg
je
push
lcall
mov
and
mov
mov
cmp
inc
call
mov
das
int3
pop
xchg
mov
cmp
ds
icebp
mov
cwtl
ror
es
sbb
inc
push
daa
fisttpl
enter
call
push
mov
xor
lret
xchg
mov
jecxz
mov
xchg
cld
jno
jo
mov
sarb
mov
sub
sti
movsb
and
mov
fninit
sbb
mov
pop
pop
adc
mov
dec
dec
pop
clc
sub
rorl
test
cli
push
insl
nop
aad
xlat
inc
sbb
mov
repz
repz
or
rclb
cwtl
jle
shrb
out
out
mov
sbb
test
jne
data16
enter
push
mov
jge
pusha
mov
shll
pop
xor
insl
mov
cmp
cmpsb
outsl
dec
push
push
outsl
cmpsb
aad
inc
aad
sub
insl
fwait
push
iret
mov
push
cmpsl
out
popl
das
cltd
push
xchg
inc
xchg
hlt
mov
inc
lock
cmpsl
inc
int3
enter
mov
test
dec
cld
mov
adc
inc
enter
mov
xor
and
adc
sub
dec
lcall
xor
gs
pop
aas
sbb
push
std
mov
xchg
inc
repnz
add
or
or
and
mov
sbb
mov
ret
cmp
jg
push
jecxz
or
mov
pop
adc
stc
jmp
out
xchg
adc
xchg
push
popa
sub
fildl
notb
lcall
inc
jo
repnz
fimuls
cwtl
jp
fcmovnbe
xlat
fucomi
add
hlt
ljmp
out
test
xor
or
pop
adc
xor
mov
iret
jle
jo
inc
inc
adc
lock
jmp
mov
jge
imul
fwait
cwtl
test
out
or
pop
mov
call
push
jb
sub
in
out
bound
sbb
hlt
call
daa
jne
pop
arpl
push
mov
jmp
cmc
lahf
add
and
mov
mov
jmp
add
push
faddp
shll
add
in
pop
cmp
pop
sbb
imul
xor
cmpsb
jb
fsubrs
outsb
mov
xchg
sub
sti
adcw
mov
jp
xor
xor
cmp
and
out
popa
jmp
aaa
arpl
xor
into
ror
sub
adc
jbe
add
and
lods
and
popf
fbld
xchg
repnz
fists
or
test
lahf
pop
lods
and
sbb
aad
mov
in
lahf
or
push
jge
mov
jno
sbb
ret
jb
repz
rorl
xor
lret
cmp
nop
fisubs
cmp
daa
or
popf
cmp
xchg
lea
dec
and
adc
push
sti
out
mov
xchg
mov
jbe
xchg
add
ss
push
ja
xchg
fbstp
xchg
adc
push
cmpsl
cmp
das
in
sarb
jle
add
je
add
add
and
and
mov
gs
inc
adc
pop
enter
bound
jle
inc
shrl
fstpl
aad
xor
push
bound
negb
push
adc
loop
push
add
jno
mov
jo
test
sbbb
pop
in
push
movsb
mov
jo
sbb
pop
xchg
sbb
jo
fmul
adc
xchg
es
jb
cwtl
out
xor
adc
sbb
mov
sarw
sub
stc
adc
push
in
sbb
sbb
scas
ja
fimull
sbb
iret
fidivs
xor
fistl
mov
fnsave
ss
add
add
loopne
aam
out
or
jmp
out
push
mov
mov
std
fdivl
pop
loopne
inc
fmull
vmovdqu
pop
xchg
mov
mov
and
fisubs
test
mov
xchg
gs
xrelease
cmpsb
movl
cmp
and
add
adc
fidivs
hlt
test
shr
testl
data16
fldcw
lds
mov
or
data16
jbe
aam
lret
es
stos
imul
cmp
mov
inc
sbbb
scas
popf
add
sbb
sbb
stos
loope
cmp
inc
sahf
loope
cmp
in
bswap
leave
popf
sbb
push
pop
sub
loop
mov
cld
push
jge
sbb
mov
jl
pop
cmc
in
leave
mov
les
sbb
ds
in
mov
xchg
hlt
push
push
push
neg
das
pusha
fmuls
mov
add
mov
bound
push
jno
pushf
mov
add
pop
mov
rclb
rorb
mov
subb
cld
shr
push
jl,pt
sbb
jae
lea
and
jno
loop
sub
aad
push
push
cmpsl
mov
fisttpl
popa
lcall
xor
lea
xchg
movsb
int3
subl
jl
les
mov
xchg
ret
aaa
or
cwtl
sbb
out
cmp
or
insl
test
leave
in
mov
outsb
xchg
or
movsl
pop
clc
loope
leave
or
in
push
test
mov
push
inc
pusha
mov
push
sub
loop
mov
mov
gs
pushf
lret
lahf
sahf
inc
push
jo
sahf
comiss
xchg
add
outsb
jl
scas
ljmp
jp
es
push
jae
adc
push
js
stos
out
pop
loope
rol
fisttpll
mov
push
pop
sub
dec
repnz
das
dec
je
and
lahf
cmp
xchg
mov
xchg
lret
lret
fdivrs
xchg
push
xchg
sbbb
bound
and
shlb
in
pop
xlat
or
pop
fiadds
add
int
jb
roll
pop
mov
test
pop
push
dec
aam
dec
inc
ret
out
xor
mov
lret
jg
or
popl
stos
outsb
cmp
inc
jb
sub
push
out
mov
cmpsb
mov
pop
jno
pusha
shl
xchg
in
sub
add
shrl
cmpsl
xlat
mov
pop
adc
or
mov
cmp
xchg
add
mov
out
xor
adc
mov
in
je
iret
push
lds
shl
insb
inc
mov
hlt
or
js
sub
lahf
mov
test
add
daa
push
out
repz
sub
or
pop
cltd
iret
cmp
mov
sbb
add
cmc
inc
jl
into
outsb
decl
jb
idivb
pop
inc
lods
sub
jbe
jnp
int3
lahf
mov
outsb
arpl
shrl
or
inc
dec
and
sbb
push
adc
jnp
add
cmp
orb
push
dec
and
scas
ja
lock
repz
sub
nop
sti
aas
xchg
loope
jg
mov
or
xor
mov
cmpsb
push
add
mov
cmpsb
jl
sbb
rcll
lods
xorb
inc
sub
rcll
mov
push
ja
and
stos
push
and
aad
xchg
ret
ljmp
or
jg
int
insb
lock
mov
xchg
mov
xchg
push
dec
xchg
sub
outsl
jmp
frstor
stos
jl
or
push
ja
pop
pop
xchg
fwait
in
push
sub
or
mov
icebp
ds
sbb
in
lahf
ja
dec
mov
pusha
adc
add
loop
mov
mov
in
mov
mov
xchg
inc
mov
xor
addr16
xchg
in
pop
repz
inc
aam
idivl
scas
scas
pop
jo
mov
xchg
pop
fisubrs
fiadds
fadd
outsl
cmp
mov
xor
aas
cmc
hlt
cmp
imul
icebp
clc
inc
mov
pop
shl
mov
outsl
pop
push
int
or
leave
xchg
call
scas
loope
das
xchg
mov
pop
outsb
add
outsb
sbb
or
cmp
loopne
pushf
shll
and
cmp
pop
or
outsl
int
dec
je
mov
sti
arpl
jg
xchg
ret
stos
stos
lods
push
xchg
push
mov
rcll
mov
mov
mov
mov
inc
rol
adc
jmp
adc
pushf
pop
mov
lds
clc
sahf
fistpl
or
outsb
xchg
loope
jl
test
push
or
aas
data16
mov
stos
jmp
into
scas
iret
in
ss
sbb
xchg
or
cld
out
adc
sub
xchg
sbb
lds
pop
xor
mov
sub
lock
idivb
aas
dec
push
pop
insl
and
sbb
not
outsb
fucomip
lock
jne
mov
ja
mulb
add
cmpsl
dec
push
push
bound
es
into
in
pop
add
out
shll
cmp
sbb
push
sub
ret
pusha
mov
aaa
js
in
lcall
pushf
push
dec
es
pushf
insb
pop
cmp
hlt
inc
dec
fld
addl
pop
bound
pusha
push
out
pop
jbe
xchg
pop
enter
inc
cld
xchg
scas
stc
stos
add
bound
push
cmp
mov
inc
adc
mov
lcall
inc
cmpsl
fidivrs
rolb
mov
jmp
xlat
hlt
arpl
leave
fistpl
jle
xchg
adc
in
lock
sbb
push
fildll
pushf
mov
je
shrl
rclb
mov
add
pop
aad
ret
hlt
push
xchg
lock
xor
add
xchg
mov
mov
std
test
out
cmp
gs
pop
adc
pop
mov
std
sub
mov
push
add
xorl
dec
sub
pop
scas
or
iret
adc
mull
outsb
lret
and
es
jmp
insl
in
push
mov
xchg
xchg
mov
and
cli
jnp
shrb
fdivrp
scas
cwtl
insl
add
outsb
das
shl
in
xor
adc
jge
out
add
lock
out
pop
sarb
jnp
loop
aad
or
dec
idivb
mov
or
dec
ret
pop
bound
in
or
mov
xor
xor
gs
push
xor
mov
addl
negl
inc
sbb
inc
dec
cmpl
in
pop
pop
xor
cmp
sbb
xchg
xchg
xor
movsl
dec
aad
orl
jae
mov
lahf
inc
sub
jge
ret
xchg
sahf
sbb
add
fnstcw
roll
jo
dec
xor
adc
pushf
pop
mov
in
sub
mov
mov
pop
decl
sub
shrl
hlt
push
enter
jbe
dec
xchg
loope
push
jno
aam
xchg
imul
jbe
outsl
stc
mov
enter
bound
fldcw
xchg
xor
sbb
rcll
cs
or
and
lods
insb
into
xlat
lods
xchg
push
movsb
fistpll
jg
xor
pop
mov
pop
dec
adc
mov
addl
mov
xchg
xor
jns
adc
sbb
dec
popf
hlt
bound
lea
inc
push
mov
imul
ret
xchg
outsb
mov
add
pop
dec
and
sbb
fldl
ret
add
enter
jo
ja
mov
in
pop
fdivs
bnd
popf
lcall
and
lahf
outsl
nop
jl
fidivrl
cmc
adc
daa
push
lock
in
adc
pusha
mov
cmc
or
aad
pop
cli
lock
into
xchg
fstps
mov
jle
pop
fsts
loope
sub
movsl
leave
pop
ljmp
xchg
scas
or
adcb
jno
ss
pop
imul
push
movsb
mov
xchg
add
dec
sbb
dec
ret
cmpsl
jmp
pop
inc
dec
adc
sub
pop
fwait
jae
xlat
mov
push
scas
mov
xchg
pop
sub
mov
xchg
addb
and
es
adc
in
int3
out
mov
imull
push
jo
xor
and
mov
push
pop
aad
stc
lea
inc
sub
and
fdivs
pop
or
sbb
gs
std
jb
sbb
ss
ret
sub
add
mulb
inc
mov
push
inc
orb
sbb
inc
jl
push
cmp
jg
jecxz
mov
cltd
push
inc
dec
jb
or
test
scas
jmp
mov
xor
adc
out
mov
aad
mov
shl
mov
aaa
push
stos
or
aaa
imul
or
dec
or
out
icebp
and
inc
push
add
fidivrl
mov
paddusb
xlat
iret
jmp
add
pop
movsl
jl
mov
fwait
das
aas
jl
aad
sbb
int
inc
mov
xchg
aam
adc
xor
pop
dec
sbb
insl
aas
dec
sbb
xor
add
data16
dec
jb
loope
mov
mov
insl
fsubrs
andl
outsb
fldl
dec
addr16
xor
fmuls
iret
sbb
out
imul
inc
loopne
fucomp
in
dec
jae
jle
test
dec
ret
mov
xchg
mov
fs
xor
outsb
jl
inc
fistpl
stos
xchg
std
dec
or
shll
adc
inc
pushf
ljmp
aas
xchg
dec
mov
dec
sbb
xchg
fwait
mov
push
jae
lahf
jl
cmp
in
xor
mov
stos
addr16
pop
je
mov
popa
pop
pop
sub
inc
or
pop
sarb
push
cmp
loope
xadd
mov
sbb
std
or
xor
xchg
icebp
xchg
mov
nop
jg
inc
mov
int3
add
int3
loop
jo
daa
repnz
sbb
jae
aam
scas
sbb
movsl
cltd
adc
js
or
dec
sarb
sbb
mov
mov
hlt
cmpsl
test
cli
adc
pop
insl
mov
iret
and
add
notb
cwtl
adc
imul
repnz
leave
scas
fcmovb
mov
adc
je
pusha
push
xchg
mov
call
fidivl
fidivrs
lret
in
mov
and
sbb
repz
sbb
xchg
xchg
mov
cli
inc
jecxz
mov
sub
repnz
es
mov
fldt
mov
sarb
push
mov
jae
add
mov
mov
std
mov
and
or
xor
adc
push
jb
fstl
rcl
dec
js
lahf
mov
xchg
or
ret
inc
jl
xchg
sub
into
inc
adc
iret
addr16
clc
adc
sub
jnp
out
btr
add
adc
in
insb
add
push
and
icebp
and
or
cmc
xor
xor
mov
mov
add
cmp
fistl
mov
inc
push
mov
and
loope
cmpxchg
stos
rolb
lock
mov
stc
mov
inc
test
push
cwtl
sbb
pop
cli
mov
inc
and
cld
xchg
push
mull
jge
cmp
pop
xchg
add
ret
pop
dec
pop
clc
stc
ja
shlb
fadds
inc
jb
mov
dec
lcall
testb
push
add
repz
enter
movl
cmp
push
pop
arpl
popa
ret
jge
stc
loop
pop
sar
dec
inc
iret
mov
xchg
add
jle
pop
arpl
sbb
insl
push
sar
shll
mov
fsts
cltd
add
xchg
mov
mov
mov
add
dec
push
push
movsl
pop
out
jmp
jno
repnz
push
ret
mov
repnz
pop
adc
mov
outsb
jp
imul
fisttpl
mov
jl
das
sbbb
jp
sahf
pop
popa
loope
xchg
push
adc
ljmp
in
jl
and
fistpl
jns
mov
ss
or
lock
jle
adc
xchg
nop
push
mov
dec
shlb
adc
sbb
and
pop
je
scas
sar
dec
fdivl
mov
sub
sete
xchg
sub
movsl
lret
add
test
dec
sub
int3
adc
clc
inc
fbstp
mov
and
loopne
push
dec
andb
mov
sub
jno
jae
cltd
insb
and
loopne
sub
xlat
push
test
or
jmp
or
pop
jl
out
dec
ja
or
dec
ljmp
add
inc
in
jle
shrl
mov
pop
adc
mov
movsb
push
or
out
imul
jecxz
mov
inc
leave
in
and
jp
xlat
add
fbld
cmp
cmp
lahf
lret
jne
pop
std
push
cld
dec
and
jge
or
icebp
xchg
movsb
lcall
mov
testl
fucomp
stos
xchg
or
out
dec
shrl
mov
xor
adc
loop
dec
xor
xchg
lds
shll
add
mov
mov
fmuls
outsl
sub
mov
cwtl
adc
lahf
fdivr
fildll
fsubrs
xchg
inc
xor
push
mov
movsl
pop
loopne
ret
add
sub
and
jne
inc
and
push
leave
in
enter
imul
pushf
test
inc
rclw
popf
xor
iret
mov
lds
flds
cltd
mov
fimull
ret
add
jge
out
jecxz
ljmp
pop
cltd
sbb
fld
xchg
mov
sbb
push
repz
aad
insl
orl
and
syscall
fstpt
mov
push
mov
dec
iret
out
add
xchg
push
pop
sbb
lds
sbb
mov
stos
adc
jne
hlt
popf
cmp
lcall
dec
mov
inc
in
sbb
mov
hlt
push
jmp
cmp
js
pop
lock
push
pop
aaa
and
dec
pop
sbb
dec
add
lret
sbb
cmp
add
sar
in
xchg
xchg
sub
pop
ja
cltd
aam
in
in
and
push
mov
vpunpckhwd
xchg
loop
rolb
sbb
movsl
in
mov
lock
push
and
jmp
daa
dec
add
xchg
fs
xor
xchg
mov
std
ret
aaa
adc
ret
dec
adc
cmp
sub
pop
add
jle
jg
push
inc
insb
pushf
mov
rcl
inc
jecxz
push
lods
mov
loop
sbb
cld
leave
adc
sbb
daa
fdivrl
inc
add
ss
xchg
out
add
cmc
push
iret
in
sub
push
pop
push
cmp
dec
inc
mov
mov
jmp
mov
push
mov
int3
test
fcoms
mov
mull
jno
xor
mov
mov
pushf
mov
ds
push
pop
jmp
mov
vphadduwd
sahf
icebp
je
cmp
dec
jge
pop
jbe
not
push
inc
insl
lods
in
ss
aad
rcrb
dec
and
fisttps
cmc
cmp
mov
lret
filds
dec
mov
mov
adcb
aaa
sbb
ja
cmc
mov
sti
arpl
sbbl
aad
xor
push
outsb
push
lahf
test
sbb
aam
jns
adc
stc
sub
insb
xor
lret
add
fwait
es
jno
scas
gs
loopne
or
mov
lods
sarb
mov
je
call
in
xor
out
push
add
mov
aam
sbb
adc
imul
repnz
pop
xorl
outsb
lock
stos
push
popa
fucomi
movsb
mov
dec
jo
loope
mov
inc
cmp
push
out
fwait
cmpsl
xchg
orb
into
xor
cmp
push
clc
aad
mov
nop
insl
sbb
and
xchg
mov
mov
add
sbb
xchg
ds
sbb
or
cmp
mov
cmp
test
jecxz
cltd
sub
push
pop
inc
in
adc
mov
popf
adc
mov
or
out
sahf
mov
push
adc
or
in
insl
cs
int3
shll
or
push
and
inc
stc
ljmp
push
int3
decb
outsb
dec
lret
inc
sti
dec
idivl
jnp
in
jnp
rsqrtps
sub
lods
xor
adc
sbb
push
mov
sbb
aas
dec
fdivl
dec
add
and
push
stos
in
movsb
scas
sbb
mov
mov
or
jo
xchg
fdivl
outsl
and
push
sub
loopne
mov
mov
sbb
pop
ljmp
and
pop
into
push
or
aaa
in
loop
mov
mov
out
fsub
jmp
push
insl
mov
sub
bound
shll
icebp
stc
sub
sbb
mov
cld
out
push
fwait
sub
movsb
inc
xchg
insb
xorl
or
xor
mov
jl
jg
sub
or
test
outsl
xchg
cli
push
push
sbb
das
mov
and
xchg
mov
pop
fdivs
data16
movsb
mov
imul
push
or
stos
mov
cmp
push
into
fsubp
mov
cmpsb
dec
adc
push
or
pop
add
inc
lock
jl
call
or
xor
and
dec
sub
int
lahf
mov
in
push
inc
frstor
lahf
mov
loope
popf
and
das
xchg
mov
test
mov
cmp
adc
sarl
rcll
loop
and
iret
mov
mov
xchg
dec
ret
adc
or
push
push
lds
ljmp
imulb
les
xor
xlat
ljmp
xor
les
ficompl
sarb
mov
dec
mov
dec
mov
or
out
sbb
faddp
mov
lods
sub
dec
mov
sti
mov
jnp
insl
xor
lock
rcr
or
or
nop
push
inc
outsb
cwtl
ds
jns
adc
jae
stos
dec
push
daa
movsb
inc
int3
idivl
std
inc
cs
stc
cmp
insl
loopne
xor
pop
lcall
pop
jg
cld
neg
stos
pop
rorl
mov
data16
push
jb
pop
or
add
push
outsb
cmp
aaa
push
mov
xchg
popa
stc
adc
sbb
add
in
fisttpl
outsb
and
rol
cld
inc
xor
loope
xchg
jno
xor
aaa
mov
std
mov
mov
xlat
lods
mov
sub
push
ss
fisubrs
sub
mov
not
xchg
cwtl
testb
sarl
pop
jb
mov
outsb
jne
push
dec
ljmp
add
push
shrl
jo
and
inc
jbe
fldl
dec
stos
loop
mov
leave
sub
je
push
adc
lods
dec
adc
mov
fdivrl
aam
jb
insb
adc
xor
cs
and
push
pop
jno
subl
das
shll
mov
test
or
push
lods
push
inc
repz
loop
mov
les
cs
inc
sub
adc
pop
cmp
cmp
add
lahf
out
fcmovu
nop
mov
insl
pusha
add
mov
inc
hlt
sub
cmp
and
pop
cwtl
ret
sbb
cmp
outsb
cmp
pop
outsl
dec
or
pop
call
enter
xor
rol
sbb
into
mov
popa
shll
aam
adc
push
and
xchg
inc
jbe
mov
out
popf
jl
xor
lcall
and
inc
pop
add
mov
insb
sbb
pop
adc
cltd
and
shll
lock
lods
push
sub
xor
jle
fdiv
fcompl
hlt
andl
inc
lret
pop
fwait
dec
stos
jne
mov
or
and
or
lret
jae
shll
and
fstpl
jmp
rcl
inc
lret
and
sahf
dec
mov
rclb
aad
jbe
in
push
lcall
loope
jne
or
dec
cmc
inc
cmp
adc
hlt
cmp
pop
xchg
je
mov
or
pop
ret
imul
mov
hlt
cli
or
fmuls
dec
std
cld
sarb
mov
xchg
movsb
jno
add
push
lods
stc
arpl
inc
xor
dec
jmp
loopew
popf
jg
mov
push
add
cmp
ljmp
jle
popf
int
dec
fsincos
call
popa
xchg
cmc
out
aam
cmc
add
shl
imulb
inc
and
xor
xor
and
in
jmp
dec
sub
push
ja
scas
negb
roll
mov
inc
jns
jb
movsb
cmp
sbb
sti
arpl
jmp
mov
js
add
mov
push
scas
test
mov
rcll
shl
inc
int
xchg
mov
mov
xor
jo
ret
insb
negb
xor
and
int3
jge
sbb
xchg
stos
aam
and
mov
xlat
mov
xor
add
popa
repz
roll
je
test
adc
add
sbb
cmpsl
push
lods
sub
lock
push
add
test
or
ret
xchg
inc
fs
lea
mov
or
cs
sub
jns
xchg
subl
addr16
inc
dec
inc
dec
mov
movsb
shrb
cmp
icebp
dec
out
ret
loope
xchg
xor
pusha
push
dec
cmpsb
dec
pusha
call
loop
mov
ficoms
arpl
push
popf
in
add
inc
lahf
push
insb
test
ljmp
mov
inc
pop
cmc
ficompl
cmp
pop
fcomp
leave
xchg
das
mov
rcll
mov
clc
sub
hlt
sbb
je
div
aad
sti
or
ret
and
mov
scas
cmp
stc
jo
repz
std
aaa
mov
cld
push
loopne
jmp
in
fdivrs
test
sbb
aam
sbb
arpl
or
sarl
pushf
mov
or
push
jmp
fcoml
imull
dec
pcmpeqd
xor
jmp
pop
adc
es
push
stos
arpl
xchg
inc
xor
jle
les
mov
jecxz
testb
jne
xchg
jmp
ja,pn
stc
into
sahf
fistl
ret
xchg
or
adc
mov
xchg
lds
pop
push
xchg
sbb
aam
int3
sahf
fsubrs
push
orb
xchg
cmp
jecxz
xlat
fwait
je
sar
inc
outsl
mov
aaa
aad
push
and
mov
mov
jl
inc
push
test
xchg
dec
jecxz
cmc
fbld
fwait
ret
js
stos
loope
jo
push
or
inc
cmc
test
repz
mov
mov
enter
mov
adc
sub
add
adc
test
nop
lods
in
mov
mov
mov
test
push
mov
pop
xlat
sbb
xchg
mov
pop
fiadds
lea
mov
push
fbld
mov
push
lds
enter
jns
and
int
mov
stc
in
bound
out
outsl
or
leave
insb
inc
in
xchg
and
imulb
lret
xor
shrb
out
ljmp
jl
or
fnstenv
mov
rcl
push
dec
adc
sub
das
mov
pop
xchg
out
test
cmp
or
jno
fadd
test
outsl
mov
xor
inc
loop
mov
in
mov
add
inc
enter
sub
repz
lock
aad
loopne
dec
mov
sbb
loop
mov
jg
nop
loopne
mov
or
fsubl
jecxz
fistpl
es
les
mov
xchg
or
addl
push
push
pop
clc
cmp
inc
sub
cmp
sbb
es
jne
jne
mov
mov
movaps
jmp
les
outsl
shrl
push
sbb
fstpt
mov
mov
mov
xchg
stos
das
xchg
pusha
lret
push
push
ret
cld
mov
aam
jge
add
test
xchg
xor
jbe
and
lea
xor
pop
lea
jmp
es
push
cwtl
mov
push
inc
sahf
mov
outsb
inc
mov
sbb
mov
iretw
mov
xor
sbb
sbb
jne
sbb
mov
ret
mov
imul
stc
ja
inc
jb
call
jecxz
jae
ud2
movsl
xor
push
jle
mov
xchg
xchg
mov
icebp
xchg
clc
es
xor
dec
iret
mov
popf
cmpsl
dec
outsb
iret
movsb
dec
sbb
sahf
xor
mov
sub
test
add
imul
outsb
xor
hlt
or
mov
sbb
cli
inc
fildl
les
mov
imul
cmp
enter
jl
jo
psubusb
adc
xor
mov
xchg
hlt
scas
je
or
or
aas
lds
ficomps
adc
dec
or
rol
jg
cmp
es
inc
xchg
stc
dec
mov
icebp
push
jge
xchg
and
testb
push
jb
lahf
inc
inc
addl
mov
aas
cltd
adc
orb
mov
jg
test
mov
enter
aaa
adc
lahf
dec
dec
int
daa
push
sahf
jle
xchg
mov
and
dec
jnp
mov
pop
lahf
aad
in
pop
push
sbb
push
inc
inc
xor
rcrl
dec
lods
hlt
xchg
cmpl
aad
and
in
sbb
xchg
jmp
inc
sub
nop
ss
leave
xlat
popf
mov
xor
in
je
inc
and
jo
das
lea
fwait
inc
stos
mov
sub
repnz
movsb
sahf
pop
or
les
or
and
jg
mov
movsl
out
movsb
clc
sub
lret
inc
jl
cmp
pop
aam
dec
mov
adc
incb
dec
sub
testb
pop
pusha
sahf
lahf
dec
mov
int3
xor
ds
in
pop
mov
lret
mov
mov
add
rol
sbb
mov
cmp
sbb
jmp
adc
mov
mov
stos
cmp
cmp
jge
ds
sub
xor
repz
sub
xor
daa
and
add
and
xchg
rcl
out
push
rclb
sbb
shll
pop
xor
rcr
mov
stos
sbb
test
sbb
dec
es
lahf
inc
jns
lahf
enter
das
repnz
scas
or
dec
inc
test
lret
arpl
loopne
push
test
inc
jge
fcmovnu
fwait
fs
mov
mov
jmp
dec
and
add
dec
popf
lret
mov
pushf
sbb
mov
mov
cltd
insb
xchg
pop
cmp
sbb
push
pop
sbb
add
pop
call
ret
xchg
into
mov
test
lea
js
stos
add
les
xor
or
sub
cld
ret
gs
dec
mov
sahf
dec
lret
aas
mov
test
cmpsl
out
aas
mov
adc
push
adc
sbb
pop
mov
jmp
cmp
filds
cmp
lea
popa
cmp
loope
lock
xor
mov
mov
into
stos
lahf
into
fs
pop
and
int
aad
ljmp
outsb
adc
adc
push
rol
notb
jo
cli
in
scas
ja
aam
daa
dec
test
rcrb
popl
sbb
xchg
lahf
pop
jno
fwait
shl
test
je
xor
lods
mov
lods
int3
sbb
gs
pop
or
jbe
rcr
lcall
ljmp
pop
scas
jns
jmp
in
and
mov
or
push
mov
insl
xor
or
dec
push
mov
dec
mov
pop
sahf
loope
pop
mov
shll
cmp
dec
jle
and
call
push
pop
or
cmpsb
adc
inc
lret
adc
fdiv
dec
nop
push
push
cmpl
insl
push
repz
stos
and
adc
fimuls
and
push
lcall
nop
mov
mov
fcoml
sub
inc
adc
pushf
pusha
fnstenv
movsb
add
leave
mov
or
xchg
data16
jp
or
das
mov
into
outsb
pop
cmc
push
test
pop
dec
hlt
dec
mov
faddl
mov
mov
jmp
test
mov
scas
hlt
sti
and
and
out
mov
lds
movzwl
imul
push
das
fcoms
repnz
sbb
int3
mov
mov
cmpsl
inc
push
push
lret
mov
jno
dec
jp
int
mov
xchg
aad
imul
cmpl
fisubrs
bswap
in
gs
clc
aas
dec
cmpsl
pop
and
aam
aaa
fisttpl
lret
lods
aam
push
add
push
dec
xchg
lea
push
sbb
cmp
lret
imul
xchg
mov
pushf
or
scas
sub
jae
leave
xchg
jno
pop
enter
mov
test
sbbl
jae
cltd
push
iret
jecxz
arpl
jge
out
movsb
xchg
outsl
mov
inc
sub
pop
mov
je
in
stc
xchg
mov
jecxz
repz
lea
cmpl
cmpsb
fs
jl
and
mov
push
sub
in
dec
jbe
jecxz
insl
fucomp
adc
jnp
cmc
inc
xor
dec
cmp
cmp
lahf
adc
test
mov
inc
cmp
mov
cs
cmp
pop
lods
fsubl
lahf
insb
imul
jae
or
outsb
mov
sub
stos
or
lcall
jge
adc
mov
cltd
push
xchg
lods
sarl
and
jb
mov
ret
cmpsl
pop
sti
loopne
ds
push
and
in
jge
cmp
sbb
std
and
enter
mov
insl
mov
fistpll
cmp
sub
push
lret
inc
jb
mov
add
mov
invd
push
xor
imul
stos
movsl
mov
lods
sbb
ljmp
add
pop
inc
mov
xor
and
xchg
push
inc
mov
xor
jne
dec
cmpsb
aas
in
ja
loopne
sub
movsb
fcomps
mov
pop
mov
imull
ja
inc
cmp
xor
mov
nop
out
push
pop
mov
cmp
loopne
test
or
or
adcb
pop
or
jmp
jne
call
jle
test
pop
repz
popa
add
lret
cltd
les
xor
fidivrl
loope
gs
mov
push
iret
dec
jmp
repz
xor
jbe
xchg
insl
mov
fildll
sub
xlat
fldt
mov
adc
jae
adc
notl
jl
mov
pushf
mov
sbb
sub
clc
mov
jb
cmp
adc
xor
jmp
and
mov
xchg
mov
ret
jle
fstps
std
mov
sbb
pusha
pop
ficomps
pop
xchg
into
add
pop
ret
je
ds
jg
jge
and
mov
sub
test
inc
fiadds
jnp
mov
mov
dec
shrb
cmp
dec
hlt
into
adc
mov
ss
sbbl
fbld
enter
add
icebp
cmp
daa
sahf
or
jg
xchg
loope
out
mov
mov
pop
nop
mov
addr16
lock
pop
inc
xchg
add
dec
gs
inc
mov
add
dec
ret
adc
imul
sbb
movsb
pop
ret
dec
xchg
loop
cmp
ror
xchg
outsb
xor
jecxz
inc
test
js
sub
outsl
push
outsl
mov
inc
or
dec
test
pop
lret
fwait
adc
cld
jg
cltd
sub
pop
cmp
ret
dec
ss
fnstenv
aas
adc
add
xchg
pop
pop
dec
push
pop
adc
mov
inc
xor
dec
xor
imul
outsl
and
push
out
xchg
shr
dec
ds
sub
jb
stos
add
ficomps
push
outsb
popf
pop
adc
mov
cmpsl
into
cltd
cmpsb
aam
clc
pop
movb
enter
ss
xchg
jmp
ja,pn
push
aad
stos
movsl
gs
scas
dec
jp
inc
in
insl
jne
inc
or
aam
imul
addr16
ret
jp
sub
push
fbstp
or
clc
mov
test
fnstcw
leave
mov
add
daa
lods
inc
enter
pop
xor
shlb
adcb
sub
sub
test
out
fnstsw
mov
loope
push
xchg
sub
or
arpl
push
scas
jo
push
cmp
sub
sbb
inc
push
cmp
push
and
scas
cli
adc
jno
sub
xor
sub
xor
mov
ja
ficoms
pop
mov
push
or
in
xchg
in
and
fldt
out
push
push
faddl
loop
inc
push
mov
sbb
sbb
mov
mov
xor
jmp
dec
lock
imul
das
out
ret
mov
xor
pop
pop
inc
icebp
mov
mov
sub
xchg
stc
and
pop
jne
int
rcl
sub
push
adc
mov
pop
sub
std
in
and
insl
mov
or
cmp
lret
xchg
test
mov
jmp
into
add
cmp
daa
cmp
jns
pop
test
jp
mov
xchg
movsb
test
fnstcw
xor
and
in
aas
pop
add
xchg
cmp
sbbb
cwtl
and
pop
rcl
sub
roll
lock
mov
cmc
mov
inc
adc
sub
pop
in
scas
mov
pop
sbb
jl
dec
cmpsl
testl
mov
test
int3
dec
jge
cmc
inc
movsb
outsb
or
inc
inc
and
push
or
sub
or
loope
movsl
frstor
loope
stos
out
lret
mov
xor
mov
push
call
out
sti
in
fcmovnu
fldl
movsb
out
push
cli
inc
insl
ror
mov
jns
loopne
cmc
mov
loopne
lods
shl
cmp
outsl
fwait
push
xchg
mov
scas
jne
shl
jp
mov
xor
push
xchg
cwtl
loopne
mov
jb
mov
add
test
fisubrl
add
xor
pop
push
inc
add
jae
add
jl
mov
adc
imul
mov
popf
out
ja
cmpxchg
sbb
push
push
jmp
pop
scas
xchg
pushf
scas
mov
lods
into
mov
mov
fidivl
fcompl
out
imul
add
add
out
mov
sub
pop
pop
xchg
cmp
ja
jo
nop
movsl
push
xchg
lds
ds
es
cmp
in
and
push
js
dec
leave
jae
xchg
and
scas
in
add
dec
leave
mov
outsb
clc
push
jmp
les
hlt
inc
mov
notl
and
mov
pusha
mov
int3
xchg
cmp
cmp
fisubs
mov
sbb
aam
push
test
outsl
inc
xchg
lock
cmp
xchg
out
xchg
enter
push
out
jbe
movsl
jns
jmpw
aad
das
pusha
outsl
mov
sbb
fstpt
cmp
popf
dec
loopne
cmp
xlat
jmp
lods
scas
sub
movl
test
jb
inc
mov
movsl
sub
sti
or
in
sub
add
push
fcoml
mov
mov
adc
adc
es
inc
lcall
sahf
inc
mov
loopne
stos
adc
sbb
fisubrs
stc
repnz
mov
xchg
push
xor
pop
dec
or
pop
insl
xchg
sti
outsl
mov
inc
cmc
jnp
add
leave
lea
pop
daa
enter
cli
into
arpl
dec
or
dec
inc
push
mov
jge
jo
sub
push
dec
imul
xor
sub
jnp
lret
imul
fs
call
mov
lahf
repz
icebp
cmp
inc
sti
cs
out
pusha
es
movsb
int3
mov
adc
push
jle
cmp
sub
xchg
jecxz
cli
mov
shlb
movaps
fsubrs
jp
jnp
pusha
jg
shrl
inc
pushf
subb
dec
es
sub
and
popa
lcall
mov
ljmp
les
sbb
pop
xchg
div
push
pusha
and
test
jbe
popf
pop
add
mov
cmpsl
mov
mov
mov
stos
sarb
mov
dec
leave
dec
dec
mov
lahf
lret
xchg
push
int
jp
add
out
dec
test
pop
push
xchg
adc
jmp
fistpll
and
hlt
lds
dec
sub
cmpsl
sub
aam
repz
lret
jns
insb
or
cli
repnz
dec
clc
dec
mov
in
inc
dec
in
in
call
xchg
lret
sbb
loop
adc
or
ret
pop
push
xor
xchg
mov
add
xchg
insl
sub
mov
into
add
outsl
les
mov
pusha
popa
add
mov
xchg
cmp
xor
es
inc
filds
dec
jo
into
or
testl
movsb
push
inc
mov
std
cmp
jle
cmc
xor
les
test
aam
aas
jg,pt
and
stos
push
inc
jnp
sub
iret
pop
ds
jmp
mov
jecxz
xchg
sbb
outsl
add
icebp
in
fistpll
sbb
dec
mov
cld
fsubs
push
icebp
add
push
inc
push
jnp
dec
mov
mov
cltd
or
imul
dec
popa
popa
outsl
fsubrl
mov
movsb
jnp
and
pop
popl
push
addr16
inc
xor
pushf
cmp
daa
adc
ds
xchg
lret
jp
pushf
lds
lock
push
pop
push
gs
push
xor
add
cmp
xor
jns
ret
inc
test
fs
ficomps
cmc
cmp
push
lods
push
mov
sub
test
mov
nop
lods
ret
cmp
mov
ret
mov
push
sub
xchg
push
adc
movsl
and
mov
bound
fs
insl
sbb
or
stos
jbe
xor
jecxz
adc
jp
cltd
rcr
xor
cmc
push
ret
lods
imul
xchg
cltd
rcrb
fsubp
dec
loope
leave
les
push
into
xor
sub
mov
daa
into
in
dec
add
push
or
clc
dec
xor
sbb
add
dec
aas
fcoml
pushf
hlt
das
inc
fnstenv
mov
mov
fdivrp
push
fmul
mov
sub
jnp
shrl
pop
or
out
pop
cs
loop
lea
lock
test
sbb
push
mov
xor
mov
push
jno
pop
clc
jbe
lds
ds
cmpsl
xchg
outsb
cld
inc
lods
mov
ss
inc
sar
or
sbb
ret
jns
roll
dec
das
outsl
dec
sbb
dec
and
test
movhps
push
paddsw
sbbl
or
fwait
adc
adc
dec
inc
sub
test
xbegin
push
inc
call
cmp
add
ljmp
xchg
mov
inc
repnz
push
addb
sarl
jae
xchg
leave
and
mov
sbb
ja
fiaddl
add
ljmp
cmp
sub
dec
inc
lds
push
jle
xchg
xor
cmp
mov
pushw
addr16
fildll
repnz
mov
inc
adc
xor
cld
jl
mov
cmpsl
jecxz
jbe
gs
fistl
and
popf
cs
lods
aam
mov
push
mov
push
adc
lock
jno
add
ljmp
jno
pop
push
xor
cld
and
setg
mov
or
mov
int
and
push
lods
push
jl
xchg
jo
int3
nop
fprem1
lea
out
roll
out
dec
xchg
in
dec
mov
xor
cwtl
fsubr
mov
adcb
fistps
dec
popa
ds
push
ljmp
mov
push
repz
or
lahf
clc
leave
jecxz
mov
push
adc
movsb
push
and
mov
pop
lea
imul
inc
xchg
mov
jae
movsl
call
out
inc
add
scas
cs
dec
add
mov
xor
push
xchg
repz
dec
movsb
xchg
lret
stos
dec
xor
sbb
lahf
pop
lret
sub
out
pop
test
ret
test
movsl
dec
mov
lret
aam
xchg
sub
cmp
lea
insb
cmp
jns
cmp
or
negl
mov
and
out
or
fmull
fldt
in
fisttpl
inc
std
mov
pop
cmp
add
pop
sub
jne
push
loop
loope
hlt
sub
dec
daa
push
xor
repnz
pusha
enter
out
sbb
xchg
repnz
loope
or
add
cltd
movsb
adcl
add
pop
mov
cmpsl
iret
ret
mov
and
xchg
test
fwait
mov
cs
push
filds
loope
nop
out
loop
cmp
and
int
pop
push
xor
push
mov
jb
lods
test
sub
in
pop
jo
xor
call
es
cltd
push
hlt
aaa
add
outsb
jb
popf
mov
rorl
rclb
push
pop
sbb
adc
lds
pop
xor
popa
rcll
push
lret
push
or
push
pusha
mov
in
pop
xchg
ret
pop
sub
js
or
or
movl
subb
in
sub
sar
inc
loop
pop
scas
xor
mov
xchg
aas
fldcw
in
adc
int3
add
popa
xlat
insb
lcall
dec
sub
mov
loopne
add
sub
rorb
iret
add
aad
lock
sub
fimull
add
ljmp
lret
cmp
mov
push
fstl
stos
cmp
push
popf
and
and
xchg
mov
cmp
insb
outsb
jae
adc
add
sbb
mov
sub
outsb
ljmp
repnz
andl
bnd
inc
pop
jge
int3
gs
xchg
test
fisubrl
call
and
in
aad
xor
leave
nop
xlat
push
push
outsl
mov
dec
sub
paddsw
vmread
xor
push
cmp
cli
sub
jno
dec
push
cmpsl
add
push
int
mov
mov
shrl
jno
xor
mov
dec
adc
cs
out
sbb
out
loope
out
add
push
loope
sti
shll
or
popf
jns
xor
out
lock
adc
mov
or
adc
fsubrp
call
push
add
jge
sub
in
popa
or
arpl
xchg
dec
fsub
push
mov
call
push
cltd
mov
xchg
in
addr16
mov
push
lret
pusha
stos
xor
mov
cmpsl
enter
push
dec
int3
sbb
idiv
loope
jmp
dec
cmp
push
or
sbb
or
lret
or
sub
in
push
and
push
or
test
jae
push
or
or
and
push
add
mov
sbb
mov
cld
loopne
mov
rcrl
ds
aam
dec
dec
dec
push
insb
inc
fstpl
inc
sbb
mov
out
adc
fstpt
xor
dec
arpl
add
dec
sbb
jne
daa
fcmovnu
xchg
add
ror
dec
adc
dec
xchg
repz
mov
addr16
inc
adc
fwait
les
fst
fisttpl
faddl
dec
daa
out
lods
movl
inc
shll
jg
scas
insl
pop
call
shlb
fcmovnb
rorb
aam
fwait
push
ret
pop
fadds
stos
fwait
in
xor
adcb
outsl
aam
adcl
or
aas
xchg
inc
loopne
test
mov
test
aad
loope
scas
dec
push
inc
test
ss
stc
sub
stos
aam
add
mov
lret
adc
xor
test
int
add
xchg
xor
aaa
push
sub
or
pusha
xor
ret
mov
bound
mov
push
xchg
loope
hlt
bound
repnz
in
dec
dec
repz
lock
adc
add
scas
insb
outsb
and
into
pushf
fnsave
jmp
out
and
push
fcomps
leave
aad
xor
in
leave
inc
adc
scas
pop
int
loopne
in
or
mov
ljmp
jo
das
lds
pop
pop
or
push
sub
call
jae
cs
jecxz
pop
adc
cltd
mov
test
fildll
inc
gs
test
movsb
push
push
cmp
mulb
lahf
jl
mov
mov
dec
movsb
xchg
outsb
ljmp
and
sbb
sbb
cmp
add
push
into
loop
mov
pop
push
push
lock
nop
adc
fwait
lods
test
popl
push
addl
popa
and
add
roll
jnp
xchg
dec
inc
push
mov
cmp
mov
fisubrl
adc
mov
pop
xor
rcrb
push
iret
jl
repz
dec
mov
dec
adc
sub
xor
in
adc
cmp
push
loope
push
aas
imulb
xchg
icebp
cs
dec
dec
lea
mov
jne
stos
icebp
inc
notl
je
adc
or
dec
or
lret
sub
imul
orl
out
adc
pushf
cmp
and
iret
in
shl
adc
es
pop
movsl
cmpsb
iret
das
jmp
adc
shrb
lret
dec
push
sub
fdivl
add
ljmp
mov
adc
or
js
jg
mov
sub
cmp
jmp
test
mov
dec
sbb
fistps
xlat
add
mov
adc
cmc
or
mov
jl
bound
movl
test
nop
push
mov
test
outsb
mov
rcrb
adc
mov
inc
add
in
sarb
repz
add
jg
mov
movsl
or
inc
sbb
mov
sub
stos
sbb
es
ret
mov
data16
mov
push
mov
pop
mov
ret
dec
int3
out
rcrb
push
mov
pop
stos
cmpsb
cmp
fadds
mov
fwait
xor
stc
pushf
inc
fcmovnb
dec
jecxz
push
push
ret
in
jge
iret
jns
mov
mov
insl
repnz
and
loopne
push
mov
adc
inc
outsb
mov
add
mov
jmp
aam
cmpsb
or
mov
lods
mov
lret
jmp
insb
insb
cmp
dec
out
addl
daa
fidivrs
dec
mov
push
xchg
and
and
aam
pop
sub
hlt
mov
stos
jg
aas
call
jne
enter
add
jno
xlat
je
scas
out
jbe
std
xchg
mov
sub
cs
jbe
and
and
or
xchg
pop
mov
jne
xor
rcrb
fistl
push
jns
scas
mov
adc
addb
inc
push
ret
jae
or
or
out
xor
pop
push
and
addb
and
push
dec
movsb
or
xchg
and
js
pop
clc
ret
pusha
add
decb
pop
inc
push
in
mov
inc
lret
mov
ret
int3
lahf
sub
push
mov
jmp
inc
loopne
cltd
mov
aad
dec
mov
out
sbb
adc
in
pop
mov
test
rcrb
xchg
cli
adc
test
jae
xor
cltd
mov
xchg
fisttps
cmpsb
bound
neg
jb
xor
mov
adc
mov
inc
pusha
push
adc
rcr
leave
adc
dec
sbb
fxtract
testb
xchg
xchg
das
nop
or
nop
xor
repnz
xlat
and
incl
cmp
scas
lcall
bound
dec
inc
fs
or
mov
enter
inc
xchg
jle
cld
gs
lock
jnp
jmp
mov
ds
add
mov
cmp
aam
push
ja
cmp
fcmovu
mov
cmpsl
ds
add
mov
and
mov
mov
or
add
xchg
bsf
iret
lcall
call
out
inc
ret
xor
and
ss
cwtl
xchg
dec
mov
sbb
bound
scas
pop
add
insb
sub
jg
sub
aad
insb
push
sarb
pop
mov
inc
test
jbe
or
adc
scas
out
sub
adc
addr16
int
adc
mov
and
jb
cmpsl
or
mov
mov
xor
xchg
pop
js
push
jge
lods
insl
fcompp
stos
pop
or
and
sbb
popa
xor
push
jle
aas
in
fiadds
dec
in
mov
rorb
pop
jge
sbb
das
sbb
pop
xorl
mov
cmpsl
lcall
fisubrs
or
lcall
adc
adc
push
add
or
out
in
ret
and
mov
xchg
cmp
cld
dec
cmp
mov
xchg
sub
das
xchg
sbb
in
insb
mov
in
sub
mov
les
lcall
mov
sbb
push
test
sar
fs
xor
pop
std
push
fwait
jle
imul
mov
loopne
call
jae
or
pop
sub
dec
mov
pop
int
jp
in
cmp
test
loopw
popf
nop
push
out
inc
jmp
pop
test
adc
das
test
mov
ret
push
fdiv
mov
push
jl
xchg
loope
es
pop
loopne
pop
repz
dec
mov
jb
pop
aad
mov
jle
sub
lock
repz
add
xchg
fistl
push
xchg
mov
inc
jnp
xor
cmp
jno
add
push
inc
cmp
daa
addr16
sbb
or
jl
xor
jg
sti
lds
lds
loope
shl
mov
jmp
outsb
jge
xchg
pusha
jg
dec
xchg
cld
aaa
rcr
iret
push
arpl
mov
cmp
mov
ret
cmp
test
pop
je
lods
adc
movsl
outsl
inc
fdivrs
aad
js
mov
dec
jg
lahf
jbe
inc
mov
mov
xchg
out
call
push
jbe
cmp
mov
mov
shrl
dec
sti
sub
rcrl
adc
and
cld
rclb
add
loope
fcmovnb
test
fsubs
or
xchg
sub
sbb
mov
xchg
in
mov
add
enter
stc
fs
hlt
sub
test
popf
in
inc
movsl
aaa
mov
lahf
scas
pop
dec
jo
lods
push
cmc
cmpsb
pop
stc
push
mov
sub
and
push
mov
test
and
int
pop
pusha
jl
sbb
stc
dec
shl
fisubrl
xchg
dec
mov
dec
or
stc
rcll
cltd
add
je
ficoms
sub
popa
and
cwtl
cmpsl
jp
loop
push
pop
in
cmpl
jb
mov
repz
xchg
add
dec
mov
in
lds
clc
das
popf
iret
xlat
jbe
mov
repnz
sahf
jle
loopne
xchg
addl
gs
adc
inc
mov
stos
mov
and
mov
and
stc
out
inc
mov
xchg
add
push
sub
mov
cmp
jbe
pop
fs
aaa
movsl
insb
rcr
pop
jp
sti
je
sub
mov
mov
dec
cld
or
fwait
hlt
xchg
mov
and
xor
add
pop
push
or
scas
loope
data16
cmpsb
in
xor
lods
ljmp
or
clc
dec
mov
push
enter
or
and
jno
out
iret
or
sub
adc
minps
xor
ret
pop
outsl
aad
popa
adc
lret
in
sbb
dec
pusha
push
xchg
neg
dec
mov
shlb
insl
jp
inc
adc
orb
ret
mov
dec
cld
cmp
inc
out
mov
test
or
add
rcrl
cmp
sub
notl
les
push
cmp
and
jnp
add
or
into
scas
jb
cwtl
std
lret
icebp
fcomi
popa
shr
xor
push
sub
dec
pop
mov
push
hlt
in
ljmp
fs
pop
stos
int
and
mov
mov
sub
ret
jb
outsl
fstpl
test
jl
rcll
mov
xchg
cmc
nop
pop
pop
shlb
outsl
fs
jecxz
fcoml
mov
push
pop
mov
aas
bound
sub
ficoms
dec
and
adc
cmp
icebp
mov
sbb
and
mov
adc
cmc
sti
push
insl
jge
or
sub
pushf
movsb
andl
insl
imulb
jge
out
lea
xchg
adc
fisubrs
loopne
mov
iret
mov
mov
lock
or
add
push
push
sub
mov
test
pushf
xor
xchg
lods
adc
jmp
int
push
add
repnz
inc
ja
inc
xchg
pushf
lahf
sbb
push
enter
dec
sub
fisubrs
jne
xor
and
lods
lea
pop
sub
sub
mov
sub
shll
dec
insl
icebp
icebp
sbb
push
bound
push
mov
out
mov
or
daa
xor
jle
stos
mov
inc
adc
pop
lock
fsubrl
add
add
fistl
fstps
pop
iret
cmp
push
ficomps
adc
and
xor
mov
es
xchg
jns
adc
and
sti
in
mov
sub
cmp
insb
ja
into
adc
inc
and
sbb
hlt
jne
adc
sub
mov
rolb
push
mov
mov
push
stc
sbb
arpl
outsl
sbbl
and
cmp
imul
out
imul
rorl
insl
xchg
pop
inc
sub
lds
adc
movsl
data16
sbb
std
jecxz
mov
in
loope
jne
into
inc
loope
pop
shll
iret
das
jae
cmc
cs
or
push
insl
ficoms
mov
mov
dec
dec
iret
mov
mov
add
fwait
and
sub
not
ds
into
jmp
push
dec
push
cmp
or
rcrl
mov
fwait
lret
ljmp
add
lea
mov
cmp
sbb
fstpt
xor
adc
sti
sub
incb
and
push
xchg
xor
inc
mov
imul
add
les
mov
sub
test
pop
sbbl
loop
or
or
jo
movsb
sbb
scas
cmp
mov
daa
mov
jmp
hlt
or
cmpsl
jbe
call
xor
add
pop
cmp
js
mov
xchg
shr
cmp
int
inc
jecxz
xchg
jo
mov
and
in
jle,pn
out
in
lret
push
push
ljmp
cmp
cmp
in
sub
shl
repnz
mov
jp
loopne
pop
jne
mov
add
push
cmp
sub
stos
lea
push
adc
mov
idivb
inc
adc
das
mov
repnz
in
sbb
shll
pop
xlat
add
push
lods
add
test
sub
es
pop
aam
lock
roll
in
or
rorl
cmp
xlat
lcall
add
negb
test
jle
ret
addr16
outsl
dec
in
xor
jae
adc
in
bound
sti
mov
mov
push
inc
mov
data16
int3
dec
inc
mov
jb
movsb
ja
je
out
loope
jne
inc
and
adc
xor
pop
jnp
aaa
out
addr16
sbb
aam
pushf
cmp
leave
sbb
adc
outsb
add
sti
xchg
and
and
mov
sarb
push
dec
add
andb
fdiv
adc
jo
addr16
out
sub
out
cmp
int
icebp
sub
dec
sub
or
pop
lods
in
loopne
aad
ss
nop
mov
sbb
ficomps
mov
and
push
mov
inc
sarb
xchg
cmp
pop
loop
lahf
adc
ljmp
push
push
jb
jecxz
jle
jb
cld
jb
sbb
adc
mov
ja
test
xor
inc
fnstcw
mov
inc
lods
inc
mov
lds
cld
mov
ret
dec
jmp
scas
aaa
mov
mov
xchg
loop
mov
cs
outsl
dec
loope
xchg
and
test
jnp
xchg
and
inc
inc
jae
mov
mov
mov
in
imulb
inc
push
fldl
add
std
mov
pushf
add
mov
pop
add
mov
call
sub
sahf
sbb
arpl
mov
cmpsl
mov
and
roll
lahf
lock
push
adc
xor
in
sub
ljmp
and
scas
les
fstpt
and
cmp
xor
gs
dec
cli
es
push
cltd
call
hlt
fbstp
cmpb
mov
or
and
xchg
shl
push
loope
hlt
adc
push
lds
fcomp
fimull
jge
pop
arpl
push
xor
loop
add
fisttpl
mov
adcl
push
mov
inc
lret
mov
and
xchg
mov
lea
xchg
movsb
and
xlat
jb
xor
jecxz
jmp
sti
cli
pop
push
lea
sbbl
pop
jbe
arpl
rcrb
js
pop
in
jge
test
enter
iret
test
ror
insb
fldcw
add
xchg
mov
push
outsl
pop
dec
mov
movsl
add
out
cwtl
sub
movsl
lahf
pop
mov
loop
aad
xchg
sbb
dec
pop
adc
ret
sbb
jbe
movsb
ds
dec
pop
stos
insl
lcall
adc
hlt
in
orb
mov
and
sti
insb
imul
hlt
pop
rolb
jns
mov
xor
inc
add
cld
mov
pushf
enter
mov
or
pop
push
add
sbb
mov
push
add
xor
push
xchg
aam
mov
repnz
call
and
inc
mov
and
mov
xchg
insb
add
jo
mov
std
dec
div
dec
inc
ljmp
xor
dec
jle
nop
push
out
push
lds
gs
cmpsl
mov
and
cmc
or
dec
mov
out
in
push
or
and
cwtl
pusha
outsl
lock
out
js
aad
jne
inc
xchg
cmp
sub
mov
push
popf
pusha
das
jae
xchg
jmp
jg
mov
aas
sbb
mov
and
imul
bound
fs
cmp
jge
mov
sbb
rcl
pusha
out
adcl
push
sbb
enter
test
add
and
shlb
outsb
lds
data16
and
insl
dec
cmp
in
adc
pushf
push
jo
dec
cmpl
aam
test
adc
rcrb
js
jecxz
int
xor
icebp
sub
cmp
je
mov
mov
lods
sbb
enter
cmp
lds
in
push
xchg
in
pop
ret
mov
repz
and
or
ss
mov
fcomps
cmp
push
aad
and
xchg
fdivs
js
aam
gs
jb
das
mov
or
xchg
push
out
std
sti
inc
insl
pop
cmp
and
dec
mov
pop
jle
pop
and
dec
and
push
in
jne
jne
je
sbb
fcmove
lahf
ja
dec
push
test
es
popa
in
add
dec
mov
test
mov
ret
inc
test
loopne
mov
or
arpl
and
enter
jb
cmp
and
daa
pop
fisubl
xor
or
movsl
in
pop
arpl
adc
scas
mov
jne
les
in
lea
pushf
mov
xor
repnz
loope
lods
inc
pop
add
dec
mov
rcrb
repnz
es
jne
shrb
insl
mov
cmc
adc
dec
fisubs
xchg
xchg
cmp
dec
clc
xchg
jecxz
mov
adc
iret
push
xor
mov
xchg
adc
jb
cs
lods
dec
or
inc
aam
decl
cmpsl
out
add
sbb
sbb
int
test
mov
push
mov
xchg
cmp
inc
out
lods
fdivrl
incb
or
mov
and
rorl
sub
mov
repnz
fcoms
push
inc
jge
test
mov
sahf
lock
rcr
outsb
mov
adc
xor
lods
xchg
cmp
mulps
cmp
cld
cmp
imul
mov
dec
test
or
movsb
sub
jno
lds
and
mov
xchg
mov
sbb
mov
inc
mov
and
mov
test
pop
pop
repnz
sub
daa
sub
mov
stc
jns
dec
inc
scas
lahf
insl
cld
xor
ds
addr16
mov
out
adc
jo
mov
xor
lods
pop
xchg
mov
ret
xchg
mov
ja
push
int3
dec
and
jp
sbb
mull
out
mov
push
repz
xor
pop
stos
dec
cmp
sbb
outsl
je
push
xchg
push
clc
or
loope
mov
movb
sbb
push
cmp
movsl
xor
cmc
leave
out
xlat
aam
scas
scas
roll
hlt
and
fsts
shrl
mov
shlb
mov
push
pop
mov
xor
fildll
cmp
cmpsl
popa
xor
lods
push
test
pop
mov
inc
sub
hlt
je
insb
shrb
push
mov
pop
push
sub
roll
or
cli
addb
lods
stos
add
inc
mov
lock
movsb
push
or
mov
mov
ret
sbb
je
jns
mov
mov
xor
pop
jb
lea
call
sub
pusha
push
inc
adc
stos
mov
iret
nop
jmp
insl
adc
outsl
or
and
inc
test
xchg
xlat
sbb
jno
push
push
hlt
sarb
orl
test
xchg
ljmp
test
pop
orl
mov
push
mov
cmp
imulb
pop
int
je
scas
fcom
ret
mov
xchg
push
test
insl
ja
jnp
loope
aaa
faddl
mov
inc
mov
popf
jo
cmp
mov
push
leave
outsb
adc
out
lret
pop
jle
shrb
enter
popf
or
shll
mov
mov
lahf
imul
push
stos
dec
pop
loope
xchg
aaa
sbb
mov
ja
adc
mov
lock
pop
jge
xor
xchg
int
loop
movsl
mov
stc
cs
jb
movq
add
pop
push
inc
or
jns
xor
adc
cmc
dec
push
adc
insb
sub
mov
les
icebp
rcll
cs
out
bnd
pop
lods
shlb
mov
adc
dec
sub
pop
in
push
push
stos
or
fcoms
rcll
lock
cli
jge
lcall
das
iret
mov
mov
lea
insl
xor
bound
cmp
sub
rorb
lds
inc
aam
mov
fiaddl
xchg
in
inc
in
hlt
fsubr
pop
sarl
xchg
inc
subl
or
jbe
out
iret
pop
bnd
aam
inc
nop
int
fwait
xor
jno
sbb
xor
push
fwait
loope
cmpsl
xor
stos
jmp
mov
cltd
enter
pushf
sub
push
mov
adc
imul
cmp
add
nop
push
dec
xor
mov
out
es
mov
fcoms
call
dec
call
cmpl
push
out
testb
mov
movsb
in
nop
or
and
shrl
adc
push
sbb
addr16
sbb
out
mov
cmp
ja
add
jp
dec
xlat
gs
rcrb
cmp
testl
mov
sub
mov
andb
mov
push
cmp
in
in
gs
int
xor
dec
nop
lods
movl
and
fs
iret
xor
pop
cmp
add
and
loop
dec
call
push
sahf
les
inc
jmp
inc
mov
jno
ror
push
aam
xor
negb
inc
leave
and
orl
xorb
xor
shrb
adc
or
cmp
imul
jb
jl
cmp
fadd
ja
jae
bound
cmp
lcall
and
test
add
mov
sub
sbb
dec
ret
add
fadds
dec
inc
add
es
call
scas
dec
xor
pop
mov
xchg
xchg
or
pop
adc
shll
cs
lea
cmp
andl
add
out
inc
mov
shll
and
pop
lahf
adc
sub
icebp
xchg
sbb
and
pminsw
shlb
das
ret
fimull
sti
jnp
dec
add
mov
xor
adc
cmp
fcmove
xor
jns
aaa
test
inc
rol
pop
adc
sub
sub
mov
lock
mov
lret
pop
leave
push
jg
mov
negb
shrl
ljmp
cmpsb
sbb
es
lahf
mov
mov
jo
xor
and
or
mov
fistpll
xchg
pop
subb
in
mov
jo
and
mov
icebp
dec
fstps
add
jne
imul
add
sub
mov
rorb
test
outsl
sahf
jbe
add
mov
std
sti
dec
xchg
into
mov
add
addr16
mov
jg
cs
xchg
cmpsb
xor
lret
dec
mov
insl
popf
rcrl
cmp
mov
call
jmp
push
cmp
stos
outsl
mov
ds
popa
xor
cld
sbb
gs
fs
xor
cmp
subl
or
fstl
insl
or
cmp
icebp
lcall
call
adc
xchg
mov
popf
jb
jno
inc
adc
sbb
inc
mov
adc
or
push
test
mov
xchg
add
push
cwtl
dec
mov
imul
idivl
lahf
jnp
out
sahf
mov
xor
mov
lret
pop
dec
adc
inc
or
insl
push
es
mov
daa
xchg
js
out
fwait
sub
cmp
jne
ss
testb
sbbl
out
movl
push
and
rcr
mov
decl
insb
xor
ja
gs
sub
sbb
scas
cmp
pushl
xor
aas
imul
xchg
addr16
pop
add
push
jl
jecxz
vshufps
fs
or
or
xor
fdivl
mov
cmp
test
lcall
xchg
mov
leave
imul
mov
arpl
test
or
stos
ret
lret
je
fcmovne
push
scas
test
add
xor
pop
jge
mulb
lret
lods
xchg
adc
sub
dec
dec
mov
fbstp
sbb
push
dec
repnz
mov
jb
je
iret
out
and
adc
mov
xchg
daa
pop
jle
cmpsb
pop
and
sti
inc
cmp
outsl
ret
or
inc
lock
and
out
mov
mov
cmp
xor
sti
adc
xor
out
dec
pop
ljmp
fwait
out
inc
scas
push
sub
mov
scas
inc
ret
mov
push
cmp
push
pop
ja
jbe
popf
xor
popa
mov
iret
in
mov
repnz
insl
cmp
cmpsl
lods
and
xchg
mov
loop
out
mov
mov
and
cmpb
mov
add
fidivrs
jbe
jns
xor
imul
pop
insb
lock
mov
xchg
movl
add
shrb
sbb
lret
dec
pop
fwait
bound
sub
add
sbb
outsl
in
in
xchg
lods
pop
repnz
sbb
out
sub
jo
jg
scas
and
jecxz
lea
xchg
sbb
adc
fisttpl
push
lret
hlt
inc
adc
xchg
push
outsl
jge
sti
fisttps
mov
xchg
mov
inc
jg
push
dec
sbb
cmpsl
pop
neg
adc
or
iret
add
inc
sbb
jae
push
xchg
cmp
push
xchg
insb
xor
int3
iret
lods
and
test
pop
loope
enter
jp
push
jg
jl
cmp
fiadds
mov
testb
jno
es
daa
rorl
inc
leave
inc
jge
xor
and
and
jbe
fdivp
cwtl
add
sub
les
dec
adc
push
push
enter
cmc
loope
mov
jle
pop
or
loopne
add
lret
in
hlt
sbb
enter
mov
xlat
je
imul
mov
leave
and
pop
push
call
mov
add
cmp
xchg
cltd
mov
mov
insl
jno
cmpsl
mov
sbb
clc
jae
dec
push
pop
loopne
in
aaa
xchg
out
sarb
push
sub
push
jmp
bts
cli
mov
jne
jmp
xlat
decb
repz
mov
sbb
jl
mov
and
pushl
push
cmc
nop
sbb
fwait
xchg
imul
sub
aad
dec
mov
jg
testb
push
fcompl
push
ja
adc
and
push
push
aaa
inc
inc
xchg
dec
loopne
xchg
dec
pop
jae
jno
jno
mov
inc
add
add
and
cwtl
sbb
mov
out
jmp
xor
push
dec
pushf
cs
bound
fwait
dec
ds
insl
xchg
fld
sub
sbb
test
adc
xchg
add
cmp
decb
xchg
or
rorb
js
jmp
xchg
and
out
or
into
sbb
lret
mov
sub
cmpb
int
sub
es
xor
fsubrs
push
mov
mov
adc
push
dec
fdivrs
hlt
sbb
inc
lock
out
icebp
pop
insb
push
sahf
popa
loopne
inc
jmp
dec
in
outsl
ret
stos
stos
pop
shrl
jb
push
je
mov
mov
xor
test
mov
or
mov
movl
popf
ja
fdivrs
lcall
jg
in
stos
dec
js
lea
mov
sbbb
les
cmpsb
jae
push
ljmp
add
fsubr
mov
sub
dec
nop
sbb
inc
imul
repz
dec
adc
xchg
mov
pop
push
and
lds
ljmp
incl
pop
push
push
or
pop
dec
fimull
sahf
sbb
mov
ficompl
stos
push
test
flds
cmp
push
movsl
rcrb
pop
in
pop
or
xor
sar
ss
mov
std
ds
shrl
xor
hlt
push
lock
test
in
fwait
mov
sbb
cmp
enter
iret
shrb
into
stc
sbb
scas
push
or
ret
fnstcw
or
sahf
xchg
out
jae
mov
adc
repnz
xor
test
scas
mov
push
mov
test
pop
mov
push
mov
push
sbb
ss
nop
or
adc
movsl
insb
jo
repnz
repnz
iret
fdivrl
outsb
push
push
mov
sub
loope
dec
push
mov
push
jecxz
insb
movsb
repz
mov
sub
mov
hlt
cmc
into
shrb
sub
cmp
scas
rcrb
das
sbb
add
negb
pop
jne
repz
in
dec
pop
push
mov
mov
or
mov
sbb
insl
pop
fisttpll
inc
popa
jg
mov
pop
call
cli
xor
js
push
ja
ds
mov
cltd
add
fidivrl
xlat
and
js
jns
mov
mov
mov
int
repz
jb
out
es
push
das
inc
iret
ss
test
jne
nop
xor
adc
xor
lods
push
xchg
inc
jle
xorw
and
mov
add
sub
ja
outsl
mov
mov
push
hlt
pop
out
dec
aaa
arpl
repnz
push
or
sbb
shlb
cmpsl
cmp
sbb
push
fistps
daa
arpl
jmp
aas
push
ljmp
dec
lods
stos
jbe
ret
sahf
jns
jecxz
fldenv
ds
fidivs
xor
mov
and
lahf
add
xchg
dec
cmp
cwtl
jnp
pop
out
mov
test
adc
mov
jae
sub
in
push
pop
and
dec
call
mov
or
xor
xchg
push
inc
push
inc
sbb
fstps
cmc
icebp
xor
fldl
mov
pop
roll
push
mov
into
popa
cmp
xor
and
in
mov
and
pop
or
add
sahf
ret
inc
push
fdivl
mov
iret
sub
add
sahf
xchg
push
jo
adc
xor
xor
mov
fstps
and
divb
movsl
ret
xor
scas
ret
sub
sbb
nop
ret
shl
dec
fisubrl
mov
add
stos
dec
mov
add
inc
push
pop
jns
pop
jmp
cmp
bound
imul
pop
cmp
jl
sub
jns
push
adc
mov
sbb
lock
rclb
aas
test
mov
cltd
push
pusha
mov
outsb
mov
and
sub
idiv
sub
stos
mov
iret
cmp
inc
push
jne
movsl
mov
enter
jp
pop
jge
xchg
andl
xchg
in
adc
push
add
sbbb
adc
stos
xchg
cmpsb
mov
insl
mov
dec
cmp
xchg
add
dec
test
xor
loopne
rcrb
test
jbe
fiadds
lcall
icebp
cltd
flds
cld
or
ret
arpl
xor
xlat
sbb
imulb
cmp
and
inc
adc
aad
xchg
add
test
scas
clc
fcoml
neg
mov
inc
ja
jnp
cli
and
mov
in
loop
orl
pop
daa
fisttpll
cmp
imul
int3
lret
add
sbbb
xchg
dec
cwtl
loopne
mov
sub
testl
scas
jae
shr
cmp
dec
andl
pop
stos
push
jl
adc
ficomps
es
rcrb
jbe
push
pop
andl
mov
push
add
sub
xor
nop
xor
outsb
add
test
mov
adcl
test
lcall
rolb
lret
cmp
cli
fmul
inc
adc
pop
cmpsl
xchg
mov
push
and
aas
mov
mov
movsl
or
mov
lods
mov
fadd
adc
mov
xor
mov
daa
into
push
pop
out
pop
int3
imulb
stos
lock
adc
rcrb
dec
jle
push
inc
bswap
cmp
mov
adc
out
jmp
inc
cwtl
ds
out
icebp
cld
test
mov
stos
push
test
jle
iret
and
push
pop
arpl
lods
or
test
shll
pop
push
cmp
sti
aad
xor
or
je
movsb
mov
in
out
out
mov
and
add
mov
xchg
and
jg
das
lcall
jge
push
xor
mov
mov
pop
insb
cld
enter
lds
movsb
es
shrl
dec
daa
mov
ds
push
dec
push
push
inc
clts
sbb
inc
in
jnp
repnz
sub
push
xchg
sahf
in
popfw
push
movsl
mov
and
push
mov
ja
xlat
xchg
and
mov
in
and
xchg
popa
out
sbb
xor
inc
xor
sbb
mov
in
jl
xlat
loop
outsb
sbb
test
aad
pop
inc
lea
insb
push
lods
adc
inc
mov
xchg
jo
into
inc
fiadds
enter
insl
out
int3
mov
push
cwtl
dec
decl
test
clc
out
in
cwtl
add
push
mov
cli
sahf
add
fldl
dec
cwtl
pcmpgtw
mov
cmc
pop
dec
out
das
jl
addr16
outsb
addr16
loopne
adc
fdivl
mov
inc
xor
jp
add
cmp
jmp
inc
dec
add
pop
sbb
mov
jecxz
in
arpl
fadd
xchg
out
push
pushf
sub
ror
int
ret
les
out
rcrb
push
fxtract
movsl
sbb
inc
js
enter
sbb
loopne
xchg
mov
dec
pavgb
adc
mov
jae
gs
mov
cmp
outsb
sti
jno
mov
pop
jl
test
inc
cwtl
mov
nop
and
mov
sbb
scas
and
ret
hlt
push
sahf
mov
jno
iret
xor
aaa
sub
ja
jge
xchg
push
ja
cmp
imull
int3
or
movsb
jmp
shlb
add
insl
jge
xchg
push
notl
aas
xor
cmp
push
mov
test
cwtl
push
frstor
cmp
push
inc
fwait
jae
pop
sbb
and
adc
lret
aam
adc
inc
popf
imul
movsl
fstps
jl
cmp
sub
sub
fcmovb
xor
aas
pop
xchg
pop
dec
out
mov
xor
jp
pop
dec
inc
dec
pop
sbb
addr16
mov
fistpl
sub
jle
sub
stc
cwtl
or
mov
xor
add
insl
mov
testl
inc
int3
push
sbb
add
sub
xchg
outsl
pop
and
or
and
xchg
enter
xor
sub
sbbl
sub
mov
in
jns
jge
sub
xor
dec
pop
add
mov
addr16
stos
jge
lcall
push
inc
pop
push
sbb
xchg
or
mov
lds
loopne
stos
shlb
pop
mov
adc
int3
outsb
jnp
dec
mov
stos
aas
inc
cld
aaa
jp
adcl
cld
jl
fcompp
and
xchg
push
jle
mov
xchg
les
imulb
rclb
add
movaps
arpl
push
xlat
in
sbb
call
repz
ret
mov
sbb
movsl
out
or
sbb
sub
fwait
mov
dec
setno
push
sbb
into
lods
adc
ljmp
xchg
popf
vdivss
jp
xor
movl
mov
or
push
mov
sub
mov
out
sahf
nop
lahf
aad
out
cmp
adc
test
lcall
sbb
divb
xor
jbe
pop
adc
ffree
and
shlb
jo
jecxz
dec
jbe
sbb
aaa
sub
repnz
mov
sti
inc
sub
iret
data16
test
repz
push
pop
out
test
mov
jno
test
scas
outsb
mov
mov
cwtl
sub
or
jbe
fwait
mov
jne
mov
fdivl
mov
fcom
out
cmp
rorl
orl
hlt
rcrb
sub
sub
fists
add
adc
pop
je
adc
xchg
fwait
imul
xchg
mov
sub
sub
loope
mov
dec
xchg
cmp
in
insb
ljmp
xchg
jb
js,pt
inc
test
ss
sbb
repnz
inc
push
push
mov
add
sti
in
push
xchg
fs
jae
and
loopne
adc
inc
jp
xor
cs
sbb
scas
mov
outsb
out
mov
jno
mov
in
aas
adc
mov
mov
pop
stos
into
call
outsl
xor
sbb
push
out
out
xchg
xlat
mov
add
stos
mov
mov
gs
outsb
aad
push
fs
jmp
cmp
inc
cli
scas
sub
loopne
dec
jl
push
out
repz
lcall
mov
ss
inc
and
ret
outsb
pusha
movsl
sub
dec
mov
jg
test
inc
insl
add
loope
pop
jne
call
and
not
lret
jae
xor
sub
pop
fwait
mov
push
cmc
repnz
aaa
call
sub
xor
mov
hlt
push
stos
mov
clc
lds
add
dec
loopne
adc
mov
cmp
dec
fcoml
enter
insb
ja
aad
push
mov
outsb
xorb
xor
xor
push
int3
adc
pop
xchg
movsb
test
nop
xor
mov
gs
pop
out
mov
pop
popa
in
sbb
adcl
je
inc
and
sti
and
fmuls
pop
pop
mov
je
add
pop
jmp
jg
mov
mov
or
fs
xlat
popa
imulb
dec
mov
and
incl
mov
cmp
scas
pop
xchg
and
jmp
lea
sarl
inc
loope
pusha
cld
je
jb
push
inc
xor
negb
sbb
das
mov
int3
push
js
ljmp
mov
ret
jnp
fsubrl
imul
hlt
lret
loopne
int3
xchg
cltd
push
idivl
lea
out
mov
mov
or
xchg
mov
xchg
mov
lahf
jmp
push
mov
cmpsb
lcall
stos
test
xor
xchg
dec
imul
ja
adc
lods
mov
movsl
dec
and
pop
add
int3
outsl
movsl
mov
sbb
hlt
insb
es
jae
inc
data16
jmp
ljmp
adc
sub
add
ja
fstps
les
mov
add
ficompl
mov
adc
xor
test
das
push
sub
std
les
movsb
inc
xor
aad
rcrb
push
mov
fisubrs
test
aad
repnz
dec
cmp
cmc
push
int
or
addr16
imul
jnp
pop
and
pop
push
mov
sbb
je
add
data16
jecxz
xor
pop
mov
sub
mov
push
sbb
fidivrs
xorl
jmp
in
leave
or
fistpll
xchg
pop
jl
call
mov
out
sbb
repz
ficoml
cmp
shlb
mov
cmc
test
push
jae
es
and
mov
pop
xor
mov
jae
loop
pushf
enter
and
inc
int
and
cmp
loop
jns
dec
test
lret
jp
sub
aaa
inc
pop
xchg
fdivl
iret
iret
jecxz
xchg
cmp
mov
mov
ss
sbb
or
xlat
add
pop
pop
and
push
sbb
pop
dec
or
int3
stos
push
cmp
dec
xchg
mov
xlat
popf
mov
pop
icebp
mov
sbb
popl
or
xor
dec
repnz
jbe
adc
rorb
inc
fs
jl
pop
nop
pop
push
test
repz
xor
aaa
mov
adc
test
js,pn
sub
daa
dec
add
ffree
dec
out
je
outsl
xchg
and
sbb
xor
lods
sub
and
jmp
daa
les
cli
clc
hlt
jg
pop
std
sub
out
lcall
ret
xchg
mov
leave
addb
mov
sub
pop
imul
leave
pop
cmp
int
mov
das
jb
fs
fwait
jb
pop
lock
add
xchg
cmp
aaa
push
cmp
pop
jl
clc
adc
add
movsl
or
add
mov
and
sbb
push
and
xchg
jge
sbb
aas
lods
les
nop
add
stos
push
icebp
lds
test
nop
test
loop
rorb
in
mov
stos
clc
fsubrs
cwtl
addl
insb
sbb
and
insl
jnp
jg
daa
repnz
ljmp
xchg
test
and
fbld
inc
sbb
jp
scas
add
mov
fsubr
inc
sbb
outsb
sbb
call
scas
pushf
or
es
imul
or
std
sarb
jmp
das
cmp
repnz
data16
pop
imull
inc
adc
add
ret
dec
scas
dec
push
or
dec
cld
mov
pop
popa
scas
mov
jns
cmp
enter
adc
aad
loopne
int3
out
ljmp
mov
std
idivl
fmull
pop
scas
or
fisttps
push
sbb
ljmp
xchg
outsl
out
and
cmpsb
inc
shr
loopne
cli
popf
inc
sbb
cmp
cmp
rcll
xor
push
pop
add
dec
int
loop
pop
jp
jb
add
mov
cmpsl
insb
mov
xlat
popf
dec
scas
fwait
js
add
push
mov
dec
fstps
mov
adc
sahf
insb
int
insl
xchg
mov
cmp
inc
sbb
jo
jmp
lcall
test
sub
jmp
test
dec
test
mov
mov
lret
mov
cld
push
or
repz
push
or
mov
cmc
int3
and
dec
inc
dec
jbe
push
or
pop
mov
pop
scas
les
in
or
cmpl
hlt
dec
fwait
jno
popa
jbe
lock
gs
xchg
dec
pop
insb
shrb
rcl
mov
scas
adc
jnp
mov
add
scas
decb
call
fwait
inc
adcb
loop
pop
hlt
and
xchg
jge
mov
rorl
sbb
in
sbb
jecxz
shr
jg
and
jbe
mov
xlat
add
sub
push
mov
sbb
or
test
sub
test
pop
and
sub
xchg
lcall
push
add
sub
sub
jnp
adc
mov
pushf
and
jbe
iret
or
jae
add
adc
mov
repnz
jge
bound
xchg
repnz
mov
lret
aam
add
aam
mov
jp
jbe
sbb
xor
mov
inc
clc
jge
out
sbb
pop
lods
test
xchg
mov
out
mov
pop
sbb
int3
push
sbb
mull
imull
mov
fcomps
cmp
mov
popf
fs
es
add
jb
pop
mov
sub
sahf
mov
mov
mov
pop
orl
adc
or
dec
mov
cmpsb
lea
aam
cltd
in
cmp
mov
pushf
fwait
push
jne
movsl
pop
mov
pushl
cmp
stos
test
add
out
xchg
mov
jg
pusha
xor
leave
movsb
cmpsb
imul
push
sub
cld
add
mov
outsb
int3
das
sub
jne
sub
adc
andl
sub
adc
push
fidivl
imul
push
dec
push
pop
fs
cmpsb
popa
pop
in
push
out
scas
sbb
jbe
addr16
pop
int3
enter
hlt
in
adc
in
test
inc
lcall
rol
jno
int3
call
test
repnz
popa
or
push
pop
movsl
and
cmovb
js
xor
gs
outsl
pop
push
sahf
icebp
js,pn
adc
rolb
cltd
sub
aas
pusha
inc
popa
iret
sub
les
push
xchg
mov
push
mov
xlat
and
mov
mov
dec
clc
outsl
cmpsb
sbb
adc
test
shlb
add
enter
les
jmp
cmp
cmp
jae
insb
pushf
sbb
mov
fs
push
mov
popa
out
mov
fmull
pop
loope
mov
lods
or
and
std
imul
fstpt
hlt
fisttpll
xor
shl
adc
inc
push
gs
pop
dec
sbb
scas
shll
aaa
shl
push
xchg
xchg
or
jne
ffree
inc
loopne
pop
xchg
scas
cmpsl
sub
stc
fbstp
lret
adc
test
test
xor
das
jnp
pop
adc
test
mov
lods
or
mov
iret
out
test
cld
xchg
xlat
in
aas
pop
xor
fwait
and
dec
add
ficomps
leave
jno
xlat
loopne
mov
or
sbb
loopne
inc
leave
cmp
rcrl
enter
cmpsb
pushf
mov
sub
jmp
je
sbb
xchg
hlt
jmp
lret
dec
cltd
or
fcoms
push
xor
fadds
cmpsl
out
sbb
or
loopne
ret
pop
test
add
fwait
bound
lods
or
jne
or
add
aam
jbe
in
jmp
or
cld
insl
shlb
iret
cltd
adc
insl
push
les
push
xchg
subb
adc
clc
push
mov
adc
and
cmp
bound
sub
push
ret
add
mov
mov
inc
inc
push
mov
icebp
int
pop
arpl
mov
stos
lret
adc
fwait
jp
or
inc
popf
mov
lahf
daa
sbb
cwtl
inc
insb
mov
ljmp
pop
or
push
jecxz
pop
ror
int
cld
ds
jg
pushf
jb
jo
std
fisttpl
sub
mov
add
inc
sbb
inc
and
or
mov
xchg
mov
stc
movsl
dec
loopne
xlat
cmp
cmp
xor
mulb
mov
pop
aas
test
add
sahf
or
enter
rcl
jp
dec
pop
outsl
mov
out
xchg
xchg
lahf
mov
call
aaa
mov
sub
push
lcall
mov
mov
push
mov
sahf
fcompl
js
pop
std
or
and
es
fstps
pop
lret
push
jbe
xchg
inc
rolb
sahf
sarb
out
testl
mov
inc
xor
jge
inc
loop
lret
sub
cmpsb
int3
outsl
jbe
lret
pop
js
jb
cltd
outsl
xor
and
mov
lret
mov
add
stos
in
cwtl
mov
imul
aam
cmp
pop
inc
fwait
add
repz
mov
mov
stos
and
fistps
xchg
inc
mov
inc
stos
aaa
cmp
jle
cli
xchg
lcall
jnp
jle
sti
and
sbb
into
aad
xchg
xchg
mov
jle
pusha
sti
and
xlat
or
sub
repz
or
outsl
rcrb
push
and
dec
pop
test
test
imul
jb
push
dec
pop
mov
test
cmp
xor
fnstcw
lods
dec
decb
xor
push
ljmp
jmp
mov
lds
ss
test
push
rcrb
les
mov
fsubr
push
xor
cmp
pop
push
ret
sahf
cltd
xadd
push
mov
fstl
pop
mov
push
adc
rorl
ret
xor
push
fadd
xchg
nop
jne
test
in
mov
and
incl
daa
scas
aad
pop
and
sub
aas
push
sub
out
push
mov
repnz
mov
daa
add
test
xlat
call
repnz
sbb
scas
xor
cltd
fildll
mov
mov
cwtl
call
push
popf
aaa
add
bound
out
mov
jno
xor
dec
cld
int3
ja
mov
xorl
lahf
xlat
push
into
es
sub
bnd
rcll
lret
sbb
leave
sti
aas
cmpsb
mov
gs
testb
mov
and
xchg
shrb
inc
pop
mov
aas
dec
lods
ffree
mov
fcomip
fldt
test
test
jge
lret
in
imul
push
adc
mov
sahf
cmp
nop
cs
js
pushf
pop
cli
xchg
jae
cmp
movsl
sub
or
push
cmpl
add
sbb
xchg
mov
cmp
incl
loope
stc
mov
mov
sbb
retw
jp
and
cli
inc
xchg
aam
in
sbb
es
jmp
lret
inc
scas
lods
aad
jne
fidivrl
and
mov
push
mov
push
loope
dec
jo
cmp
jp
push
jno
mov
jno
mov
hlt
pop
bound
lret
iret
popf
inc
push
js
dec
fstl
sub
pop
cmp
jge
add
mov
jp
and
icebp
cmp
lock
push
add
mov
xlat
adcb
cmpsb
das
addr16
sbb
icebp
icebp
sbb
or
negb
jne
sub
xchg
test
and
push
pusha
or
adc
in
adc
orb
and
cmp
push
xchg
aaa
divb
dec
movsl
mov
not
fists
bound
push
add
xchg
and
jecxz
in
inc
arpl
and
aas
mov
sub
cmp
test
sbb
jbe
fdivl
aas
push
inc
sahf
ss
cmp
scas
mov
pop
mov
xor
mov
jae
popa
push
lahf
adc
push
lock
jns
push
pop
test
popf
inc
mov
test
ret
test
jbe
loop
jo
or
jmp
iret
mov
cli
repz
mov
mul
movsb
pop
sbb
add
loopne
out
jge
mov
lret
dec
subl
outsb
mov
push
add
pushf
push
ud1
fisubs
inc
add
subb
out
rcrb
push
ljmp
add
lock
sbb
add
jp
pop
pushf
lea
mov
scas
daa
xlat
push
cwtl
aaa
inc
add
xchg
repnz
inc
fsubs
orl
cmp
inc
push
jnp
stc
jmp
sbb
test
jae
sarb
aas
xchg
inc
mov
xchg
inc
adc
rorl
fs
sub
push
pop
pop
xchg
mov
or
xchg
mov
mov
or
cmp
add
or
std
insl
push
dec
adc
outsb
xor
aam
dec
sbb
testl
pop
pop
nop
sbb
or
add
xor
mov
mov
aad
scas
pop
xchg
xchg
icebp
mul
cmp
mov
mov
xor
mov
mov
pop
bound
dec
test
and
xor
stc
imul
mov
or
into
and
pop
push
stos
xchg
and
or
add
outsl
xchg
sbb
cmp
push
and
cli
cmpsb
ljmp
fistl
add
dec
andl
icebp
push
aaa
or
inc
pop
or
ficompl
lret
jle
mov
jl
stos
shl
pop
lods
inc
testl
inc
sahf
cmc
stc
cmp
add
out
dec
ljmp
lods
lret
mov
dec
ljmp
xor
pop
sub
push
das
lcall
push
or
pushf
and
out
add
iret
xor
inc
mov
or
xchg
sbb
add
mov
aaa
jecxz
or
dec
pusha
loop
pop
or
push
add
add
lret
mov
xchg
fildll
pop
fwait
jno
in
imul
mov
inc
sub
push
jp
int3
sub
pushf
add
adc
jmp
rorl
jb
push
sti
push
dec
daa
lods
lahf
cmp
jo
mov
into
mov
cmp
jle
repz
dec
jne
popf
lea
sbb
outsb
loope
xchg
jno
call
jmp
push
repnz
jg
mov
arpl
fsts
xchg
outsb
mov
iret
and
nop
insb
xor
xor
fistpl
data16
xor
rcll
aaa
pop
xchg
sub
sahf
test
add
jecxz
sub
fists
loop
push
adc
adc
movsb
scas
aaa
js
add
negb
das
lods
add
xor
xchg
shll
dec
fucomp
pop
cmp
jecxz
cli
shl
pusha
push
inc
xlat
adc
adc
dec
ret
mov
and
xor
mov
test
mul
push
adc
cmp
int3
mov
hlt
mov
aaa
adc
fildl
xor
push
test
sub
cltd
loop
or
sub
arpl
addl
pop
cmp
add
inc
scas
stc
cmp
inc
outsb
aam
bound
mov
and
push
mov
adcl
in
loope
lds
dec
and
mov
rcrl
mov
into
call
jne
in
out
jg
sub
test
jbe
in
jo
sbb
js
xchg
mov
in
jbe
orb
movsb
xchg
sub
xor
mov
idivl
add
and
repz
push
popf
cmp
adcb
inc
aam
push
mov
lahf
shll
jp
mov
sub
push
and
shl
jae
pop
sub
ja
xchg
sbb
xor
cmpsl
adc
xlat
dec
sub
or
clc
mov
addb
iret
and
leave
in
push
or
sbb
sbb
mov
add
call
out
imul
imul
pop
add
push
mov
fldl
mov
push
inc
pop
cmc
mov
xchg
leave
mov
lock
pop
xchg
xchg
pop
outsb
sarb
scas
pop
dec
shrb
pop
pop
or
lfs
imul
adc
jmp
cmp
push
scas
or
pop
and
data16
cwtl
mov
push
out
je
mov
xchg
ret
push
fdivrl
stos
mov
push
sub
cwtl
test
xor
imul
loopne
add
bound
add
aas
test
sub
pop
outsl
adc
inc
cwtl
push
repz
cmc
inc
pop
inc
mov
movsl
icebp
nop
lcall
dec
imul
xchg
mov
and
aas
or
mov
sbb
mov
or
lods
enter
jg
adc
stos
jo
jbe
jno
push
enter
push
rolb
mov
adc
mov
gs
pop
out
add
fsubr
fwait
mulb
fbstp
test
mov
xchg
or
das
shll
int
cmc
adc
xor
mov
dec
mov
div
stos
mov
sbb
cmp
push
mov
and
lret
shll
int
scas
or
inc
mov
xchg
imul
stos
lret
shlb
fcmovb
repnz
cmp
push
in
data16
xor
lret
ret
lret
jne
mov
adc
mov
scas
sub
das
lods
jle
data16
xor
sbb
mov
xchg
dec
jg
jnp
ljmp
mov
sahf
cltd
jle
roll
and
test
ljmp
cmc
xchg
dec
cmpsb
stos
mov
push
ror
mov
dec
mov
pop
inc
jecxz
sub
fucomip
mov
ljmp
fs
popf
lock
jae
inc
cmp
inc
scas
shrb
clc
xchg
outsl
add
adc
inc
lret
sub
aas
mov
ret
ficomps
aad
xor
xchg
repnz
rcll
mov
mov
sub
rcrl
icebp
add
mov
inc
into
dec
repnz
mov
fsubs
popf
jb
jbe
dec
or
mov
mov
lahf
push
jno
mov
sub
jl
cs
push
in
push
dec
cmpsb
mov
or
inc
push
cmp
jl
xor
mov
dec
or
sahf
cmc
sarb
hlt
dec
in
imul
xchg
jns
leave
xor
adc
sbb
xchg
ret
shr
jae
mov
aaa
mov
dec
aam
out
icebp
xor
ss
add
mov
cmp
popf
cmc
xchg
xorb
mov
xor
sub
mov
in
dec
cmpl
pop
jno
mov
push
jle
dec
xchg
mov
xlat
data16
lds
inc
xor
jmp
mov
inc
push
push
jle
mov
repnz
dec
mov
fs
mov
jne
xchg
enter
shll
mov
ret
push
or
mov
push
testl
fbstp
pop
inc
sub
inc
std
out
add
outsb
loop
push
mov
or
mov
mov
xchg
xor
ret
or
mov
shlb
repz
iret
out
add
ljmp
or
pop
xchg
mov
mov
pusha
pushf
xor
loopne
add
mov
sbb
jg
aas
sbbb
jno
inc
pop
jl
mov
xor
mov
jg
in
in
xchg
iret
les
inc
enter
cmpsl
mov
ficompl
dec
mull
out
cwtl
jmp
add
dec
cmp
inc
aas
aaa
es
loope
adc
xchg
test
ljmp
lret
lea
cltd
pop
xlat
mov
jge
jae
cwtl
mov
pop
cmp
aam
icebp
add
adc
jne
mov
dec
push
fldcw
mov
repnz
jo
cmp
sbb
nop
sbb
xchg
push
cmp
test
test
xchg
sub
jne
or
frstor
dec
popa
adc
insl
sbb
mov
aaa
sbb
lds
gs
mov
je
pop
pushf
std
and
or
ljmp
mov
pusha
push
popf
int
dec
movsb
pop
pop
in
negl
dec
sbb
mulb
xchg
inc
clc
cmp
xor
pushf
push
jb
push
imulb
xchg
add
pop
outsb
pop
cltd
test
cmp
int
int3
dec
repz
nop
push
stc
cli
pushf
push
and
pop
jbe
mov
imul
rcll
mov
or
push
cmp
lds
or
inc
sbb
int
inc
lds
xor
xor
andl
sub
hlt
test
add
mov
push
mov
mov
jbe
rcrb
in
in
aas
push
xchg
add
xor
sbb
sahf
sti
xchg
adc
hlt
in
push
addb
daa
fwait
push
xchg
sarb
adc
mov
push
xor
subl
sub
lock
popa
insl
xchg
test
pop
cli
adcb
xor
sarb
ret
push
aas
fs
mov
cmc
push
repz
sbb
push
data16
rcll
pop
xor
inc
jg
je
pop
or
repz
ss
pop
inc
repnz
popa
pop
imul
out
aam
inc
lock
test
mov
ret
std
ret
xor
add
sar
lock
pusha
sti
lret
loope
cs
call
xchg
cwtl
inc
mov
mov
inc
mov
stc
sbb
sbb
dec
jmp
pop
shrl
dec
jecxz
stos
push
shr
int
int3
and
lock
call
xorl
scas
push
pushf
lar
adc
jb
and
jle
mov
mov
hlt
sbb
sbb
nop
xchg
add
sbb
int
das
push
test
mov
out
adc
imul
jmp
in
adc
lcall
out
sbb
mov
not
mov
jae
inc
xor
fwait
dec
sahf
jge
adc
xor
daa
frstor
mov
insl
add
test
stc
cmpsb
xor
dec
add
clc
and
loopne
sub
cli
jo
adc
dec
fbld
daa
mov
pop
inc
xchg
shll
arpl
icebp
addr16
xor
jb
fs
mov
mov
xor
xchg
stc
xor
cmp
xchg
mov
mov
and
cmp
adc
xchg
fidivl
fmul
into
jg
outsb
arpl
mov
je
jo
call
push
lret
add
lods
dec
in
xlat
popf
jecxz
ljmp
nop
jo
push
add
je
sbb
adc
jmp
enter
lock
lock
pop
xor
dec
shlb
fdivrs
adc
pop
push
mov
jbe
mov
dec
and
pop
out
inc
sbb
mov
out
je
sub
test
outsl
rclb
leave
enter
lds
and
adc
les
cld
pop
mov
leave
das
or
stc
out
push
pop
popa
or
data16
mov
shrb
or
mov
ret
fucom
cltd
bound
test
push
aam
mov
xchg
mov
sbbb
test
leave
rcl
ret
ss
ja
cwtl
mov
sti
outsl
sub
push
hlt
daa
cmovae
xor
dec
mov
es
ficomps
push
imul
dec
rorl
push
daa
pop
out
fists
cmp
jmp
scas
negl
xor
mov
and
fnstenv
jns
pop
add
cltd
inc
xor
leave
inc
mov
mov
sub
inc
xchg
dec
int
nop
jo
mov
movsb
push
mov
popa
push
mov
popa
enter
and
pop
scas
xor
lret
scas
xchg
pop
lock
pop
ja
push
push
inc
loopne
mov
test
add
adc
les
push
pop
inc
mov
shrb
jns
add
push
subb
icebp
insl
push
push
and
jns
cmp
xchg
sub
int3
adc
movsl
test
ficoms
out
dec
sub
cmp
jmp
jp
sub
xchg
out
xchg
popl
into
xchg
sub
jge
mov
xchg
fwait
push
add
fwait
sub
pop
fimuls
cs
xchg
pusha
mov
adc
push
xchg
sub
mov
movsb
mov
add
cli
mov
cmp
cmp
leave
xchg
out
and
add
stos
and
and
adc
in
push
mov
imul
or
scas
xchg
in
pop
push
xor
gs
and
or
rcr
outsb
dec
iret
hlt
test
fwait
insl
lahf
add
inc
xor
and
das
inc
mov
test
xchg
js
shrl
mov
mov
push
sub
sub
cmpsl
and
and
mov
stc
nop
aad
repz
inc
jle
add
aas
ret
repz
xlat
inc
sbb
scas
xor
cmpsl
sub
into
adc
js
jl
pushf
inc
inc
lea
pop
mov
repnz
push
or
popl
push
inc
dec
shrb
sub
or
xor
rorb
lea
dec
loope
adc
jae
call
jnp
mov
enter
testb
sbb
loop
fimuls
pop
add
leave
add
test
mov
push
lock
test
subb
sbbl
cmp
sub
adc
add
xchg
lret
and
rcrb
or
leave
ret
dec
push
add
xchg
xchg
add
imul
cmpsb
mov
sbb
iret
sbb
stos
aaa
sbb
cmp
icebp
xchg
mov
out
pop
lcall
adcl
std
mov
xlat
lret
mov
sbb
repnz
mov
enter
and
sti
pop
cmp
sbb
ja
insl
leave
mov
push
out
pop
call
ret
test
frstor
dec
ficoml
xlat
or
ds
jle
dec
sbb
daa
sub
aas
mov
ljmp
push
lahf
mov
sbb
adc
fs
sub
iret
xor
sbb
daa
mov
hlt
lret
ret
pop
aas
push
mov
ret
fdivp
cwtl
fisubrs
sub
ret
push
rorb
xchg
push
mov
mov
or
xchg
imul
fcomip
cmc
imul
loope
pop
ljmp
fadds
jmp
sub
ret
push
imul
pushf
jo
xchg
xchg
idivl
je
add
shl
pop
rcrl
je
ret
ljmp
call
jae
mov
jecxz
pusha
loopne
jo
andps
mov
pop
ljmp
lods
xchg
xchg
jge
cld
or
clc
popf
out
lds
decl
sbb
mov
xlat
fwait
sub
subb
rcrl
movsl
push
or
jnp
mov
iret
xor
loopne
aad
fiadds
mov
data16
and
lret
adc
lcall
stos
sbb
fs
pop
or
fnsave
leave
xchg
scas
cmc
out
fs
mov
mov
inc
jl
xchg
push
cmpsb
adc
mov
sub
dec
inc
daa
loope
jae
jnp
rdpmc
push
jg
mov
mov
xchg
jae
jo
adc
nop
push
fldenv
inc
add
cmpsb
insb
pop
scas
pop
pop
into
je
pop
dec
clc
lret
adc
inc
sahf
popa
test
mov
js
cmp
mov
imul
pop
xchg
cs
pop
pop
insb
in
adc
add
and
clc
sub
leave
into
nop
outsl
xchg
mov
fcmovne
das
and
fadd
inc
int3
into
mov
enter
hlt
push
in
inc
mov
cmpsb
pop
sahf
sar
xchg
pop
mov
push
xlat
push
push
add
iret
adc
imul
in
xor
xchg
mov
mov
mov
or
lea
sub
decl
ljmp
xchg
xchg
sub
ret
cmpsl
dec
jecxz
pinsrw
pop
in
hlt
movsl
subb
movsl
mov
and
sbb
sbb
out
imul
stos
loope
in
fcmovnb
adc
into
inc
sahf
push
mov
jo
fidivs
mov
fsub
adc
outsb
ret
push
jnp
cmp
pop
loope
cmp
sub
rolb
sbb
mov
add
cs
ja
icebp
inc
sub
jae
push
js
mov
sub
xor
nop
pop
push
dec
movsb
adc
movsb
in
in
push
mov
adc
pop
sub
int3
dec
fmuls
fdivs
fucom
lock
cltd
mov
push
sbb
jno
arpl
je
scas
jmp
out
stos
aaa
mov
daa
cmp
xchg
ds
xlat
mov
inc
mov
pop
out
push
inc
push
inc
jne
insb
insb
out
inc
or
call
xchg
jl
inc
clc
aaa
movsl
out
js
fucom
je
sub
sbb
mov
in
adc
fstpl
bound
insb
pop
les
cmp
lahf
ds
jle
sbb
xchg
loopne
leave
loop
mov
int3
lret
dec
jecxz
repz
pop
add
aas
lock
push
push
stos
mov
adc
call
cmp
int3
test
mov
push
ljmp
insb
test
lret
lock
jp
pop
xchg
lods
adc
push
popa
pop
sub
outsb
pcmpgtd
pop
pop
cmp
add
dec
data16
pop
xor
jne
leave
and
sub
mov
aad
shlb
push
jp
pushf
add
jl
jge
or
notl
imul
push
int
xchg
lods
jmp
lahf
xor
int3
aad
cli
fcomi
fisttps
fdivs
inc
fisttpl
cmpsl
xorl
sarl
mov
dec
mov
jns
adc
xchg
mov
push
sbb
es
mov
sahf
push
mov
adc
dec
outsl
mov
mov
inc
js
push
sub
cli
pop
pop
pop
xor
sbb
in
repnz
aad
jge
xor
and
cmp
icebp
sti
or
or
push
and
aaa
repz
loope
repz
ficoms
inc
lods
mov
xor
scas
mov
ds
xchg
scas
test
pop
push
push
xorl
in
pusha
fistps
icebp
add
inc
repz
xchg
jae
jl
movsb
push
sbb
mov
jg
test
cmp
push
cmp
gs
jecxz
lods
inc
inc
cmp
sarl
cltd
fs
fs
popf
cwtl
lock
loope
test
or
mov
fnstcw
mov
fld
clc
pushf
in
icebp
push
push
inc
out
lret
adc
jmp
pop
add
pop
mov
and
push
out
pop
jae
sbb
xchg
xchg
adc
inc
pop
loop
inc
outsl
mov
icebp
jnp
stos
xor
xor
jb
sbb
push
std
xchg
call
pop
pop
pop
or
push
dec
inc
lcall
jge
cmpsb
jge
mov
jl
and
movb
jge,pn
lods
pop
fisubs
rolb
roll
test
push
movsb
jmp
int
loop
mov
into
pop
pusha
bound
test
xchg
scas
sub
lahf
fadd
cmp
ret
fistl
jle
dec
mov
js
add
enter
pusha
mov
or
in
jb,pn
repz
cmpl
sti
arpl
sti
jecxz,pt
into
push
dec
ret
out
aaa
ret
subb
pop
sahf
adcl
into
daa
sub
cmpsl
mov
fistpll
sbbb
out
mov
or
cmpsb
imul
in
mov
js
daa
push
aaa
mov
inc
clc
cmp
out
mov
inc
mov
sbb
adc
jno
xor
sbb
or
test
test
orb
xlat
push
cmp
addl
mov
mov
push
lret
sbb
daa
pop
out
shl
jg
fbstp
jmp
pusha
fdivl
adc
jl
icebp
pop
pop
cld
loopne
fcomps
push
rolb
or
scas
dec
scas
jae,pt
subl
add
test
xchg
xor
std
xor
mov
sbb
mov
push
jno
addr16
loop
add
cli
cmp
lods
mov
outsb
popf
subl
or
lahf
hlt
out
fldl
adc
cli
mov
popa
adc
scas
inc
pop
movsb
and
addb
movb
int3
adc
lahf
cs
into
and
jg
fs
cmp
ljmp
insl
inc
popf
inc
xchg
push
jo
outsb
add
and
push
pop
loop
mov
jnp
or
ret
pop
and
fcoml
stos
lock
in
lret
cmc
jmp
mov
mov
xlat
scas
pop
jne
add
or
lret
add
sub
dec
pop
inc
and
and
sbb
popf
out
cs
jge
pop
arpl
lret
ret
test
insl
imul
fbld
aad
movsb
cmp
xchg
loopne
imul
adc
sub
pop
xchg
aam
sarb
shlb
imul
imul
jge
mov
mov
outsb
cmp
cld
jge
jae
test
mov
pop
pop
popa
lds
pop
mov
inc
pop
test
outsl
jge
rorl
xchg
jno
mov
mov
pushf
xchg
and
sub
and
adc
xor
jl
addr16
push
jo
lods
popa
es
xchg
jnp
xlat
sbb
aas
xchg
fwait
idiv
jno
jno
std
dec
out
mov
pusha
lods
cmpsl
mov
pop
sbb
add
adc
jmp
push
repnz
jae
rclb
pop
cli
gs
dec
push
addr16
jl
orb
xchg
inc
sub
loopne
push
rclb
sub
mov
adc
sarb
cmp
loop
xor
les
aad
cmpsl
push
dec
sbb
stos
jmp
xor
pop
pop
les
push
enter
mov
or
dec
test
js
fwait
test
pop
cld
fcoml
pop
mov
and
mov
dec
xor
jmp
xor
repz
fbstp
cmp
mov
mov
dec
fnstsw
pop
cwtl
and
pop
mov
cmp
or
xchg
sbb
ss
aas
sahf
call
xchg
add
push
loopne
inc
dec
rorb
pop
je
push
aaa
jl
cmp
jb
xchg
and
lods
fisubs
sbb
push
and
pop
in
rcl
mov
test
add
push
sbb
adc
mov
scas
push
jae
lock
sbb
clc
jmp
cmp
jno
fwait
pop
mov
aad
repz
mov
cmpsl
inc
enter
imul
in
ficomps
scas
pop
jne
cmp
ss
jbe
and
les
mov
mov
jge
test
push
je
jge
popf
das
lahf
jge
fisubl
jg
popf
mov
lods
lock
xor
dec
dec
add
out
pop
inc
push
divb
sbb
cwtl
gs
fsubrl
mov
mov
fdivrs
in
add
xor
fnstcw
std
jbe
test
cwtl
pushl
test
lods
add
pop
pop
add
es
cmp
je
push
mov
mov
push
ret
or
stos
add
jle
or
push
xchg
pop
aaa
sahf
insb
mov
loope
jns
movsl
mov
or
cmp
ud1
xchg
and
pop
popf
and
pop
lea
or
inc
mov
sbb
pop
mov
dec
push
add
sub
shrl
sahf
inc
nop
add
inc
pop
ja
pop
mov
push
xor
cmp
fs
fnsave
jge
push
in
bound
xchg
push
push
mov
aas
adc
cli
inc
push
nop
insb
mov
out
les
jmp
loopne
je
cli
insb
enter
negl
jge
ret
mov
xor
cmc
icebp
fnstsw
test
in
inc
sub
dec
dec
pop
mov
or
jo
xlat
jo
repz
js
xchg
hlt
pop
sbb
add
mov
push
scas
push
repz
ljmp
mov
fwait
mov
sahf
test
loope
xorb
pop
ret
ja
out
xlat
mov
cmp
in
mov
mov
leave
test
mov
or
lods
repnz
orl
push
jo
jo
cmp
mov
mov
imul
cmp
sbb
insl
mov
imul
scas
scas
push
jg
rclb
or
scas
adc
insb
xor
insb
sahf
mov
xchg
rolb
insl
mov
nop
xor
push
xor
sbb
loop
sbb
test
das
pop
ret
sub
out
sbb
push
ret
mov
or
fcmovnbe
xchg
aad
pusha
mov
lods
add
movb
lods
and
aas
cmc
push
pushf
pop
insl
fwait
add
pop
inc
mov
push
enter
sbb
pop
xlat
jmp
out
lcall
fstpl
push
xchg
xor
and
xor
dec
out
xor
es
push
pop
aam
push
rcrl
fsubrs
add
je
scas
sahf
push
cmc
push
xor
aas
popf
popa
push
dec
jae
mov
mov
adc
xor
jne
cltd
not
or
outsl
mov
add
mov
jmp
testb
dec
fisttpll
xchg
jg
mov
sbb
and
call
or
push
sbb
shl
daa
cmpsl
jbe
jno
fs
imul
sti
inc
push
enter
push
jecxz
fdivrl
push
das
mov
sahf
pop
push
repnz
and
out
push
shll
dec
sub
push
xor
popf
xchg
jne
mov
js
sbb
cmp
pop
rcl
xchg
fmul
jmp
pop
add
sub
mov
je
push
inc
in
ds
or
cmp
clc
mov
iret
jecxz
pop
gs
mov
testl
movsl
dec
aas
pop
popa
clc
enter
jns
cwtl
psubsw
inc
scas
in
enter
gs
ja
in
lds
movsb
jge
xor
out
jb
adcb
cwtl
push
dec
aam
addr16
ja
cmp
sbb
lahf
in
pop
lcall
cwtl
fcomip
lods
ret
lock
loop
int
jl
lods
aas
push
jl
rcr
cmp
fwait
jle
sub
stos
sub
or
pusha
loope
repnz
fs
push
pushf
jno
cmp
pop
jne
mov
lahf
aam
sub
aas
cmpsl
ficoms
and
add
arpl
scas
pop
sub
inc
imul
mov
rorl
pop
lahf
mov
adc
jo
add
stc
stc
rorb
cs
mov
add
int3
fisttps
fstp
dec
adc
and
imul
stos
sbb
cmp
lods
enter
cmp
inc
fwait
and
sub
adc
jle
pusha
sarb
and
mov
pop
das
fldt
aam
ja
sbb
inc
sbb
repz
sub
add
xor
cmp
mov
or
mov
or
mov
push
sarl
and
mulb
rcrb
popf
loop
mov
andb
adc
dec
xchg
sbb
inc
or
adc
lods
inc
pop
cmp
inc
or
out
lahf
push
rcrb
pusha
or
dec
into
decl
test
xchg
cs
test
out
jge
rorb
or
adc
pop
mov
jo
mov
je
daa
jae
xchg
jge
cmpb
adc
jge
scas
pop
ret
dec
xchg
out
test
jmp
cs
mov
pop
xor
add
out
mov
pop
test
add
dec
std
or
iret
pushf
jmp
jle
sbb
je
pop
lods
scas
pop
mov
xor
jge
mov
xor
jecxz
adc
mov
imul
sub
and
mov
call
jbe
test
or
add
push
cmp
pop
inc
testl
gs
icebp
hlt
dec
test
jp
xchg
test
imul
insl
aam
and
xor
mov
aad
js
iret
xor
inc
and
scas
xchg
leave
cmp
mov
xchg
push
cltd
out
testl
enter
add
mov
xchg
movsl
push
fs
mov
addr16
ret
dec
mov
imul
in
fstps
lock
mov
pusha
mov
xchg
aam
mov
insl
jp
arpl
arpl
cmpb
sbb
shrb
clc
inc
mov
out
lret
push
cmpsl
push
add
in
sahf
cld
sub
sbb
mov
xchg
mov
leave
test
cmp
imul
add
jb
mov
mov
sbb
push
inc
lea
add
cld
cmp
nop
pop
stos
push
fidivrl
fdivs
fwait
xlat
sbb
mov
pushf
push
out
sbb
push
imul
stos
pop
imul
arpl
mov
pusha
lock
jl
push
sbb
jmp
pushf
in
ds
out
mov
shr
xchg
arpl
ret
lock
sub
fcmovne
insb
xchg
fisttpll
incl
dec
and
ljmp
pop
out
popf
jmp
jecxz
cli
jae
sahf
mov
sbb
bound
pop
mull
daa
imul
test
jmp
xlat
cmovo
jp
shl
test
mov
push
push
mov
jecxz
lods
aad
psubb
je
add
cmp
dec
or
add
in
mov
xor
cmpsl
inc
push
std
dec
jne
pop
adc
mov
aam
jl
addr16
mov
adc
or
or
sar
push
es
push
adc
and
cmp
outsl
ret
faddl
pop
je
lcall
dec
insb
inc
test
pavgw
lret
add
leave
aas
pop
xor
jecxz
push
or
mov
inc
xchg
cld
dec
mov
repz
divl
push
sarb
repz
mov
cmpsb
test
aad
adc
filds
add
sub
das
or
mov
mov
xchg
fildll
inc
cmp
inc
lahf
loope
jge
stc
in
jb
jecxz
pop
aam
push
imul
popf
pop
fcoms
mov
push
fcompl
sub
mov
jo
lods
cmp
or
stos
add
mov
aam
adc
push
loope
add
stos
fiadds
imul
dec
std
adc
inc
pop
fcomps
inc
mov
ret
stos
out
mov
jge
movsl
adc
scas
xor
out
jnp
inc
out
daa
xor
sub
mov
jp
stos
dec
dec
jae
out
rcll
or
enter
fcmovnu
lods
fldl
arpl
xchg
lods
pop
dec
ljmp
cltd
cmp
ret
jmp
sub
ret
pop
cmpsb
leave
push
jmp
inc
pop
push
xchg
cmp
pop
dec
cs
aad
leave
xchg
int
mov
sub
cmpsb
data16
jns
push
cmpsb
cmp
shl
push
inc
ss
stc
cmpsl
enter
push
fs
daa
lods
jae
dec
aas
ror
psllq
mov
ror
pusha
mov
or
xchg
rorl
mov
pop
es
aam
out
stos
xchg
sub
repz
cmp
jmp
scas
ljmp
mov
sarl
bound
outsl
bound
xchg
xlat
cmpsl
les
das
data16
cld
xor
adc
push
movb
jno
lea
inc
loopne
or
pop
lahf
or
cmpsb
dec
push
jl
int
out
mov
in
cltd
into
mov
fstpl
fcmove
add
fdivl
stc
fiaddl
mov
adc
and
pop
cmpsb
test
sti
test
push
mov
loop
pushf
xor
divb
fisttpl
mov
enter
jle
mov
inc
jmp
inc
ret
and
lret
adc
mov
in
adc
stos
or
pop
xor
or
cmpsl
in
xor
insb
sbb
jp
scas
ja
fcompl
cs
shrl
ds
std
mov
jmp
pop
loopne
rcll
jb
ljmp
into
icebp
xor
sbb
xchg
lret
idivb
push
jmp
push
into
add
push
les
xchg
cmpsb
mov
into
imul
cmp
push
insb
sbb
jl
push
add
inc
ds
adc
ficompl
data16
push
jbe
mov
pusha
repnz
mov
jbe
mov
cmp
sub
cmp
and
mov
enter
out
push
dec
rcrb
or
bsr
stos
adc
inc
daa
maxps
jp
fistpl
fmuls
ss
repnz
xchg
add
ret
pusha
mov
ds
add
xor
push
pop
and
jp
fdivs
push
adc
dec
and
xor
pusha
insb
outsl
fstl
push
inc
jb
sti
jne
adc
cwtl
dec
js
inc
push
das
pop
cmp
push
nop
or
loopne
mov
outsl
das
sahf
bound
lret
xchg
dec
pop
push
stos
lret
xor
sub
adcl
jmp
pop
sarb
stos
xchg
adc
jae
adc
test
sub
sbb
dec
cli
aam
sub
sub
xchg
xchg
lret
xor
dec
movsb
repnz
testb
cli
mov
jl
and
cmpsb
mov
cmpsl
inc
outsb
mov
std
jle
test
xor
fdiv
call
and
jbe
push
adc
xchg
xchg
sbbb
xchg
adc
pop
sub
mov
add
mov
lahf
sbb
pop
push
dec
insl
dec
dec
lods
insb
rclb
jmp
ljmp
inc
dec
mov
imul
mov
jne
xor
inc
or
mov
ret
dec
clc
push
push
andl
pop
and
cmp
jns
popf
xor
jno
ds
lds
cmc
cmp
dec
ljmp
adc
lahf
mov
jg
into
adc
ret
adc
mov
and
dec
add
xor
int
ss
clc
shll
jb
jae
jge
adc
in
aam
ror
cmp
test
mov
jbe
jns
imull
xor
inc
mov
popa
dec
cmp
js
dec
fisttpl
inc
add
repz
sahf
mov
pop
orl
and
fidivl
mov
sbb
push
dec
stc
add
dec
sub
iret
pop
sbb
pop
push
push
fcomps
je
loope
add
hlt
inc
lahf
out
pcmpeqb
pop
adc
xor
sub
insb
arpl
dec
add
jecxz
or
test
enter
pop
mov
xor
call
cld
stos
mov
jns
ja
lds
inc
sbbl
mov
dec
push
out
lods
mov
mov
outsb
movsb
sar
pop
jo
fwait
sbbl
repz
dec
mov
mov
jecxz
jp
sub
outsl
xor
std
jbe
jbe
out
lret
int3
rorl
fidivrl
xor
adc
mov
jb
mov
cmpsl
or
clc
jl
mov
mov
xchg
scas
fdiv
fists
pushf
dec
jg
adc
rclb
fstl
cltd
jmp
xor
sti
or
fwait
loope
cmp
xor
data16
or
fwait
dec
lods
mov
ffree
ret
clc
iret
push
cs
jae
nop
mov
sbb
add
xor
or
cmp
fidivl
lret
into
test
jns
mov
xorb
clc
cvtpi2ps
int
adc
dec
pop
shrb
pop
out
movb
fs
sbb
test
cli
xchg
add
mov
xchg
xor
or
push
shll
gs
pushw
inc
int3
jae
pusha
icebp
int
ret
stc
sti
xchg
push
xchg
scas
mov
and
aas
in
leave
sbb
mov
ljmp
sahf
dec
mov
imul
or
inc
xor
adc
cmp
aaa
xchg
and
mov
call
movsl
jb
rcr
scas
mov
mov
test
int
ds
fiadds
loop
pop
jb
subl
cmp
add
sbb
push
add
movsb
clc
xchg
movsl
cmp
daa
and
mov
push
outsb
add
dec
sub
test
sti
std
jecxz
fldl
sub
insl
lods
and
stos
mov
push
jnp
mov
hlt
nop
jle
mov
xor
cmpsb
icebp
lea
test
stc
cmpsl
add
jnp
xchg
pop
xchg
arpl
cmc
in
inc
pusha
fs
popl
idivl
pop
sub
inc
inc
xchg
sbb
mov
jnp
mov
push
fistl
icebp
mov
cmpsl
and
pop
jo
pop
loop
and
unpcklps
jge
pop
xor
into
dec
orl
jbe
fs
sub
frstor
pop
data16
adc
ljmp
lcall
lret
in
es
xor
pop
cmc
or
sub
pop
ss
jo
insl
ret
dec
jo
inc
test
sbb
jecxz
in
push
sbb
ds
out
or
ja
sub
call
or
sub
jno
pop
and
nopl
rolb
jmp
pusha
lock
adc
leave
xchg
dec
fildl
cmp
add
and
push
fwait
or
enter
loopne
loope
daa
aaa
xchg
bound
inc
data16
mov
imul
xor
enter
icebp
mov
push
mov
clc
sub
cltd
pop
cmpsb
leave
lret
pusha
or
sbb
inc
subb
arpl
mov
mov
jecxz
insl
inc
test
daa
dec
jge
pop
test
cmpsb
and
sahf
lret
aam
sti
mov
aad
cmp
cs
pcmpgtd
in
icebp
jns
stos
or
pop
sub
or
lds
cli
dec
das
and
in
imul
mov
lret
mov
add
out
and
mov
andb
out
mov
pop
hlt
aam
sub
push
inc
cmp
push
adc
pop
cs
xchg
inc
sub
or
sbbb
notb
xor
jno
sub
arpl
xor
insb
popf
and
es
dec
cli
xor
dec
lret
push
test
int
sbb
xchg
push
mov
ljmp
sub
int
pushf
sti
lea
out
or
pop
inc
sbb
sarb
dec
leave
in
cs
push
inc
adc
fdiv
mov
dec
js
sbb
sub
sub
jp
or
mov
push
andl
cmc
shll
jmp
jae
dec
mov
mov
xchg
stos
mov
mov
iret
jno
imul
push
cmp
xchg
daa
aad
scas
lahf
cmp
out
mov
sbb
lret
movsb
sub
jae
pop
xchg
xor
sar
test
or
jb
xor
loope
ret
mov
pop
sbb
dec
cld
sahf
stos
adc
push
adc
pop
xor
fwait
xchg
jl
out
int3
das
jns
sbb
ss
lods
cmp
repz
neg
mov
jns
fildl
pop
lcall
pop
jae
in
inc
test
daa
int3
pop
sbb
mov
sahf
cmp
jecxz
push
orl
mov
jecxz
jbe
in
pop
mov
cltd
adc
xor
lea
or
inc
das
std
es
les
sbb
test
dec
jnp
mov
fildll
or
cli
int3
xlat
cs
in
mov
test
and
add
xlat
leave
adc
push
mov
inc
xor
sbb
mov
or
mov
pushf
movsl
or
sbb
mov
pop
in
cmp
scas
mov
movhps
stc
movsl
pop
out
jmp
cmp
mov
sbb
sysenter
stos
fdivrs
mov
into
shrl
xor
jbe
loop
out
mov
enter
pusha
movsb
adc
and
movsl
add
js
jge
push
cld
cmp
fs
or
arpl
pop
push
or
shll
scas
int3
add
pusha
mov
pusha
adcb
out
popa
sbb
xchg
int3
cmp
xchg
push
pop
xchg
xor
icebp
cmc
pop
stos
jp
jae
movsl
pop
sbb
inc
lods
bound
jge
call
push
fnsave
fistl
sbb
xchg
cli
dec
and
sahf
jns
xor
inc
add
outsb
stc
mov
ja
cmp
push
or
add
push
xor
imull
mov
cltd
xchg
inc
mov
mov
jbe
cmc
mov
clc
leave
mov
pop
stc
or
pusha
push
xchg
mov
and
jae
fisttpl
rcll
fisubs
mov
sar
mov
loope
adc
sbbb
jno
sub
fcompl
cmp
shll
cli
mov
jp
ss
dec
imul
in
mov
xchg
xlat
in
push
dec
pop
jns
stc
adc
xchg
push
fidivs
sbb
ds
pop
repz
subps
and
psubw
stos
or
scas
das
out
jl
pop
lods
jo
xchg
pop
test
sbb
add
add
add
retw
lods
mov
sbb
add
sbb
test
clc
xchg
fsubl
outsb
fists
pop
and
sbb
psubd
imul
cld
xor
aas
mov
xor
popa
xor
xlat
mov
mov
adc
xor
pop
call
mov
aas
shlb
cmp
add
cld
jp
inc
xor
scas
scas
mov
mul
xchg
jge
dec
sbb
cmc
cwtl
mov
adc
pushf
bound
mov
mov
push
shl
insl
mov
cmpb
xlat
movl
adcl
repnz
stc
sbb
jle
jae
enter
aas
sub
sub
jb
in
stos
in
dec
out
inc
mov
cmc
mov
pop
sub
jb
xchg
cwtl
ss
cltd
scas
lods
test
int3
add
hlt
jno
xor
dec
cli
adc
jp
cld
dec
xchg
outsb
imul
daa
sub
xchg
xchg
leave
pop
mov
jb
cli
sub
push
jg
push
pushf
jecxz
lds
mov
test
inc
repnz
enter
mov
xor
add
add
inc
and
xor
movsl
lock
and
jb
add
mov
notl
mov
popf
lods
sub
es
xchg
or
rcrb
cmp
imul
pop
imul
lret
mov
push
sub
xchg
pop
mov
pusha
jmp
mov
pop
insb
push
pop
dec
and
es
aam
sub
sbb
jae
pusha
in
pop
jbe
cwtl
push
stc
jbe
and
sbb
repz
add
pop
pop
out
sarl
mov
inc
add
pop
lret
repz
loope
cs
add
push
xchg
faddl
push
pushf
out
dec
jb
lods
cwtl
int3
pop
pop
rcll
dec
aad
hlt
movsl
sub
mov
call
adc
scas
fucomi
imul
lcall
or
jmp
jnp
loopne
fldcw
dec
pop
ret
sarb
pop
cwtl
jmp
mov
test
fisubl
adc
or
xor
push
out
sub
pop
and
ljmp
inc
pop
jbe
sub
mov
scas
inc
ror
sub
shrb
shlb
sahf
inc
add
out
popf
cmp
in
inc
sar
das
cmp
pop
mov
into
ret
sub
xor
mov
cmpsl
dec
pop
jl
insl
cmpb
sbb
dec
enter
push
xor
stos
xchg
sub
fs
shlb
ret
clc
dec
out
call
push
mov
cltd
xchg
add
mov
test
fmulp
repnz
ja
xchg
inc
adcb
add
mov
mov
imul
cmp
push
pop
xor
xor
jmp
aaa
mov
dec
pop
add
sbb
ret
mov
ret
fcmovbe
loope
cmp
das
inc
imul
sbb
outsb
icebp
cmp
adc
xchg
cmp
insl
popa
jb
push
das
mov
pop
adc
enter
jne
orb
test
mov
out
cmp
push
or
mov
pop
or
addr16
xchg
call
xorl
pop
inc
fidivs
stos
imul
shrl
sub
in
in
lahf
in
push
and
mov
clc
mov
lock
xchg
pop
cmpl
in
stos
lods
out
cmp
dec
jne
ret
loope
faddl
push
and
lret
dec
adc
dec
fcmovnu
sub
stc
add
pushw
rcll
add
add
mov
aas
daa
push
push
aas
mov
pushf
xchg
jle
test
pop
mov
dec
fwait
aaa
sbb
add
rclb
stc
loopw
stos
sub
repz
bound
push
cmpsl
mov
loopne
fisubl
dec
mov
jp
pop
and
out
bound
lcall
pop
xor
cmpsb
adc
ljmp
adc
xchg
je
mov
out
pop
adc
mov
mov
sub
out
enter
test
jae
add
stos
and
jnp
xor
dec
sub
sahf
gs
aaa
inc
mov
movsb
inc
jge
mov
adc
sub
pop
loopne
pop
and
add
rolb
pop
mov
iret
pop
adc
dec
data16
outsl
pop
sub
jno
xor
xor
pop
pop
mov
bound
jp
push
das
movsb
lret
cmp
push
out
cmpsl
mov
in
dec
notb
daa
dec
jl
fnstenv
je
ret
rcl
inc
pushf
and
inc
pop
adc
pop
cltd
or
gs
decb
cmc
sbb
jae
jno
shl
jae
pop
and
dec
cmp
dec
xor
stos
jge
es
push
lods
push
enter
test
enter
sbb
adcl
clc
mov
les
mov
sub
stc
lahf
in
mov
addr16
call
xor
xor
mov
adc
out
cmp
hlt
inc
xor
add
xchg
insb
int3
ds
and
push
test
out
aad
xor
data16
sarb
subb
add
inc
push
icebp
outsl
xor
in
in
insb
pop
ret
repnz
pop
loop
icebp
out
add
sub
test
dec
adc
add
sbb
add
add
cmpsb
sub
sbb
frstor
sbb
or
xchg
dec
aas
out
cwtl
lods
repnz
icebp
sbb
scas
idiv
stos
sbb
mov
add
std
outsb
out
ja
scas
pushf
mov
int3
lods
adc
sub
arpl
sarb
pop
outsl
stc
fisubs
dec
addb
adcl
faddl
mov
xlat
cmpsb
movsb
nop
lahf
shrb
mov
rorw
shr
mov
repnz
push
xchg
jnp
lods
dec
jecxz
push
xchg
fadd
das
into
sbb
dec
out
pusha
jb
icebp
testl
jne
dec
dec
pop
sub
sbb
mov
stos
mov
data16
sbb
mov
inc
ret
sar
xchg
jae
fs
add
ret
fwait
cltd
jae
mov
insb
in
out
dec
fnstenv
ds
push
sub
mov
inc
adc
jo
rclb
movsb
je
in
iret
pushf
lret
lret
push
adc
jl
push
arpl
jb
ret
shll
jae
or
mov
lahf
pop
pop
push
pop
or
xchg
mov
sub
sub
jno
fildll
dec
sbb
adc
mov
cmp
cmp
aad
aas
or
xchg
leave
scas
pop
lret
popa
cmp
pushf
jo
test
loop
imul
sahf
cld
mov
sub
push
scas
mov
fildll
jb
xor
loop
lcall
mov
fs
mov
pop
mov
mov
jae
cmc
int3
loopne
mov
mov
fimuls
scas
or
mov
aas
cld
clc
popf
and
mov
fmull
movsb
mov
nop
fincstp
push
rolb
mov
push
dec
aam
mov
inc
add
dec
mov
stos
ljmp
stos
je
lcall
imul
sub
lret
sub
jl
in
in
insl
mov
push
addr16
imul
stc
xchg
int3
loope
pop
lcall
cmp
pop
mov
loop
and
and
push
inc
out
sti
in
faddl
rcrl
mov
xchg
test
js
xor
mov
aad
movsl
or
dec
and
sbb
adc
cmc
inc
test
mov
fiaddl
sbb
pop
insl
aaa
pop
fbld
or
sbb
popf
flds
push
xor
lcall
imull
sub
cmp
fwait
mov
shl
cmp
lcall
nop
jo
imul
aad
int
dec
scas
or
dec
mov
xchg
sbb
mov
jp
mov
push
xor
cmpsb
imul
push
xchg
in
sbb
add
mov
cmpsb
jl
cmpsb
or
jg
fstl
xor
mov
sti
enter
sub
and
xor
adc
mov
rorb
pop
mov
sbb
xor
call
sti
mov
inc
pop
loopne
fs
lock
stos
jle
in
jg
cmp
mov
dec
and
int3
pop
push
lods
jmp
arpl
scas
mov
data16
cli
jnp
out
mov
stc
mov
adc
push
and
mov
sub
mov
push
int
clc
and
pusha
out
push
jecxz
das
add
scas
push
push
lds
mov
pop
mov
stos
xor
je
test
mov
pop
cmpsl
push
adc
mov
imul
cld
xor
pop
xchg
xchg
call
rcll
les
icebp
sar
mov
outsb
inc
mov
loop
pop
jp
popa
js
push
add
xor
pop
inc
push
adc
enter
cld
dec
popf
enter
dec
jb
jae
cmp
cmc
inc
jbe,pn
xchg
in
push
test
jnp
adc
mov
stos
cmp
negb
pop
pop
dec
cs
out
push
int
mov
lds
pop
out
dec
stos
push
or
jnp
pop
and
stc
mov
imul
push
push
mov
mov
outsl
dec
xor
mov
cld
mov
scas
incb
jno
popf
das
notb
mov
pop
call
mov
or
dec
mov
xchg
pop
or
je
mov
cmpb
xor
xchg
jle
pop
fiadds
rorb
jl
rcrb
xor
push
dec
push
shrb
int3
sub
adcb
stos
cwtl
xchg
mov
adc
aam
push
std
jno
in
out
les
dec
lcall
or
or
ja
jmp
adc
pusha
ss
inc
decb
ss
mov
mov
sti
pop
jle
lret
push
and
notl
add
add
cmp
in
push
insl
sub
cmp
cmp
mov
xchg
adc
pop
sbb
movsl
testl
subb
lahf
fcomps
loopne
divb
fdivl
cmp
lret
mov
ret
cli
stos
mov
cltd
add
jb
shr
stos
dec
jmp
pusha
sub
insl
xchg
sub
inc
xchg
mov
pop
fisubrs
xor
push
xor
xor
adc
test
cmc
adc
dec
cmp
loope
andl
movsb
lret
and
jno
in
loopne
pop
mov
loope
sbb
in
pop
mov
imulb
dec
adc
sub
les
and
inc
inc
scas
sbb
pop
push
lods
fisubrs
loop
adc
int
dec
dec
push
sbb
pcmpeqw
mov
cmp
adc
test
lods
mov
add
add
sahf
jno
mov
adc
sub
jnp
cmpsl
add
sub
loop
mov
lods
xlat
pop
aaa
das
mov
outsl
cmpsl
addb
xor
out
outsb
jmp
adc
push
outsb
sbb
mov
orb
push
cmpsb
sarb
add
inc
jo
ffreep
cmpsb
jb
add
inc
dec
mov
das
mov
cmp
in
outsl
test
mov
ret
lahf
fistpll
loope
pop
inc
lods
test
clc
ret
sub
push
mov
mov
imul
cmp
ret
adc
nop
inc
fisubrs
popfw
out
add
mov
mull
ret
inc
jo
rcl
mov
sbb
xor
fbld
dec
std
push
ds
aam
lret
pop
mov
test
shlb
jmp
mov
sbb
inc
pop
jno
mov
nop
push
cmp
sbb
jl
imul
dec
xor
inc
mov
push
fldt
inc
mov
push
ret
dec
jge
adc
push
inc
xchg
sub
int
sti
gs
lods
pop
dec
xchg
jmp
daa
shrb
flds
enter
jecxz
rorb
hlt
fwait
add
daa
in
outsb
movsl
lret
fwait
and
jecxz
mov
das
pop
fstpl
xchg
mov
sbb
push
lret
shr
sub
mov
shr
lret
push
mov
jge
mov
ss
ror
test
push
repz
fwait
nop
pop
push
call
inc
mov
lods
dec
imul
mov
and
sub
les
popf
mov
rcrb
pop
adc
ljmp
out
pop
les
sbb
nop
test
call
daa
inc
mov
cmp
psubsb
adc
das
loop
inc
iret
xlat
cwtl
inc
rcrb
and
in
cmp
inc
shrl
and
std
or
pop
and
inc
xchg
inc
jl
sbbb
dec
gs
sbb
lahf
lods
pop
das
sub
sarb
loop
flds
push
dec
iret
int3
rorl
fs
lahf
arpl
or
push
sbb
and
and
outsl
cmp
xchg
pop
imul
push
cmp
add
or
jg
sub
bound
sbb
lds
sub
cmpsb
rolb
jg,pt
leave
sub
push
lock
sti
push
popf
test
adc
xchg
mov
mov
push
dec
xchg
push
pop
cmp
pop
addl
jnp
adc
inc
inc
divb
xor
dec
outsl
bswap
sub
push
icebp
mov
lds
mov
enter
not
lea
push
rol
mov
inc
cmp
leave
pop
push
cmpsl
test
stc
lods
and
xchg
mov
std
and
push
mov
dec
repz
fiaddl
xor
pop
pop
jnp
call
sub
mov
cs
gs
push
mov
and
pop
dec
je
or
lahf
push
orb
cmp
or
xchg
insb
xchg
mov
pusha
movsb
sahf
jmp
jecxz
add
fisttps
or
pop
or
cltd
mov
mov
cwtl
imul
jl
pop
mov
jno
aas
mov
fdiv
in
in
mov
test
pop
and
jecxz
sbb
and
mov
push
pop
xor
mov
push
sub
push
das
jns
add
inc
mov
dec
dec
fucomp
push
pop
dec
mov
sbb
jg
ret
imul
popf
scas
mov
sti
cli
mov
jbe
xor
imul
add
adcl
test
mov
dec
mov
or
mov
adc
pop
mov
lods
addb
sub
jmp
movb
dec
mov
in
push
in
xchg
in
and
loop
aaa
and
out
pop
cs
dec
push
ret
sub
fdivl
xchg
mov
pop
inc
push
lret
push
aas
and
sahf
adc
and
aam
cmc
mov
sbb
xchg
and
xor
packuswb
in
movsl
pop
sti
loopne
or
or
add
or
scas
int3
xchg
aas
cmp
mov
stos
push
push
push
dec
dec
mov
adc
enter
add
stos
jmp
jl
outsb
cmp
ret
add
pop
mov
scas
push
dec
jne
push
fsubrl
or
outsl
sahf
testl
xor
ja
out
pop
mov
fldl
call
pop
addr16
xor
int
movsl
cmp
inc
xor
scas
mov
and
dec
mov
mull
adc
xadd
incl
pop
lcall
adc
js
xchg
jnp
inc
inc
jge
and
inc
js
sub
lods
adc
daa
in
adc
push
push
xor
test
pusha
pop
mov
mov
mov
gs
out
lods
adc
out
jle
je
dec
scas
push
dec
xchg
mov
jno
dec
dec
add
and
sbb
dec
jbe
xchg
fisubl
push
push
out
fsubp
das
push
aas
push
push
mov
jae
xor
cli
inc
loopne
repz
vmovups
fstps
mov
mov
rcl
psubsb
arpl
inc
push
comiss
inc
ja
pop
ds
jbe
mov
cs
icebp
mov
aas
nop
sbb
icebp
nop/reserved
or
enter
push
fisttpll
adc
scas
es
ljmp
jns
mov
add
push
sar
mov
das
adc
lea
popa
stos
dec
neg
mov
cmpsl
fisubrl
enter
shll
add
jg
sub
jns
shl
mov
pusha
cwtl
out
imul
mov
xor
dec
sub
add
push
fcomp
adc
ficoml
std
sbb
imul
add
insl
pushf
pop
lods
sub
pusha
xchg
add
sbb
jecxz
adc
push
hlt
les
push
loopne
dec
jo
mov
call
in
cmp
jns
mov
jle
push
aam
out
aam
shr
inc
cmp
mov
int
pusha
pop
dec
pop
scas
call
xor
bound
outsb
xchg
add
fcmove
pop
or
adc
insl
jle
xor
ss
nop
sbb
adc
pop
xchg
cld
dec
sbb
jno
imul
call
xchg
testl
push
loope
fimuls
cmp
pop
and
sub
mov
or
je
inc
jb
sub
lea
dec
push
jle
jp
or
xor
ss
test
enter
jp
test
cld
es
xor
insb
sbb
mov
xor
les
pop
mov
dec
mov
je
lahf
mov
lods
mov
push
jg
leave
cmp
loope
and
jnp
add
icebp
push
jmp
pop
adc
xchg
clc
mov
fcoms
and
sahf
in
jmp
test
call
mov
sbb
adc
sbb
jae
out
push
xchg
cli
xchg
addb
sbb
and
dec
int3
loope
and
stc
push
push
orl
adc
cmpsl
pop
clc
lods
outsb
xchg
xor
push
loopne
mov
inc
pop
sub
and
popf
inc
mov
ss
sbb
cli
push
mov
jp
fwait
or
inc
mov
out
push
es
loop
add
adc
sub
push
xchg
int3
into
pop
xlat
push
popl
test
sub
push
pusha
fisubs
leave
iret
fcompl
mov
or
jno
mov
inc
into
enter
push
lret
stos
sbb
ljmp
xor
into
mov
adc
iret
mov
cmp
inc
imul
inc
in
push
and
flds
shl
mov
loope
mov
scas
fisttpll
fwait
iret
xchg
push
pop
sahf
testl
or
add
aas
xor
xor
mov
lods
mov
ja
sub
ljmp
or
xor
push
icebp
dec
imul
jb
repnz
aas
in
outsl
int
jns
inc
push
mov
push
ror
xor
mov
pop
push
dec
into
xlat
mov
insl
push
fwait
jbe
stos
mov
xchg
aad
xchg
loope
cmc
dec
sub
es
punpcklwd
cmp
jno
or
mov
outsl
outsb
cmp
mov
dec
sti
repnz
jp
daa
pushf
sbb
loop
scas
sub
dec
dec
movl
jno
shrl
xchg
pop
imul
enter
or
mov
xor
out
xchg
inc
mov
insb
dec
shlb
xor
pop
cmp
or
mov
xchg
jp
dec
adc
mov
daa
leave
in
mull
xchg
pusha
push
push
call
fnstenv
dec
mov
mov
js
ror
repnz
add
leave
xchg
mov
aam
push
or
ret
stc
sbb
mov
inc
lods
inc
push
js
imul
sub
lock
out
sub
xchg
sub
and
lods
jae
sub
push
inc
icebp
into
xor
mov
jbe
push
std
xchg
decl
in
sbb
movb
cwtl
out
mov
lahf
icebp
call
add
repz
cltd
in
out
insl
push
push
fs
xchg
fnstsw
add
cld
aam
pop
sarb
cmpsb
int
mov
scas
in
jp
mov
pop
fsubrl
mov
outsb
pop
pop
mov
cs
shrl
adc
or
mov
inc
pusha
fisubl
mov
out
pop
sub
loop
mov
add
stos
jbe
and
jge
pop
idivb
xchg
dec
jg,pn
cltd
ss
ja
loope
sbb
jg
mov
mov
jecxz
outsb
jo
aaa
int3
mov
lods
mov
sbb
xor
daa
adc
enter
loopne
test
mov
mov
aaa
in
sti
bound
mov
lahf
xor
lret
in
dec
loope
or
divl
ficoml
mov
mov
push
pop
leave
dec
inc
add
jecxz
xchg
out
ds
mov
cmpsl
adc
mov
subl
adcl
int
in
inc
or
fisubrs
push
fsubrp
push
js
test
inc
mov
data16
shlb
xor
scas
stos
mov
cmp
jmp
xchg
rorb
les
dec
pop
or
je
fisttpl
ret
mov
mov
fnstenv
dec
inc
cld
push
and
cmp
test
mov
sbb
jmp
mov
cltd
sbb
inc
xchg
jb
imul
and
jle
mov
mov
pop
jecxz
adcl
addr16
enter
test
les
pushf
cltd
xlat
rorb
aas
xor
scas
lcall
pushf
xchg
popa
push
and
xor
mov
mov
mov
sub
in
xor
push
cmp
out
mov
sbb
push
cmpsl
pop
adc
subb
xlat
stc
aas
lret
pop
test
cmp
mov
push
cmp
out
cmp
shrb
mov
sbb
lods
dec
les
sub
cli
xor
hlt
xchg
mov
lcall
das
adc
mov
xchg
jo
mov
xchg
lea
addr16
jne
lds
out
and
sbb
sbb
les
ljmp
or
adcb
es
push
push
push
add
xchg
in
push
pop
popf
xchg
fstpl
pusha
push
adc
xor
jo
popa
jl
push
js
cmc
dec
call
dec
jo
push
sbb
pop
mov
loope
mov
xchg
mov
pusha
inc
cli
aam
xor
add
ret
push
aas
insb
cmp
std
outsl
in
icebp
sbbb
mov
std
in
int3
adc
inc
and
jge
fxch
cmpsl
call
out
and
lcall
ret
jae
stos
xor
xchg
rcl
ret
add
cmc
xor
fwait
lods
and
aaa
adc
int
mov
xor
sbb
xor
or
fiadds
mov
sbb
mov
mov
rol
add
jl
pop
fsubr
enter
data16
sub
shrl
xchg
cmp
das
xor
jmp
sbb
add
mov
loop
sarl
sbb
inc
pusha
mov
cld
adc
pop
jecxz
lcall
inc
imul
pop
imul
movsb
add
rolb
inc
jl
lahf
cmp
push
and
scas
xchg
in
mov
repz
push
mov
insl
xchg
and
sti
test
cmp
jb
jbe
dec
pop
sub
fstpl
lods
mov
rcr
js
adc
fdivs
test
or
sub
xlat
mov
push
lods
xchg
sbb
xchg
mov
sahf
xor
xor
cmp
xchg
jg
inc
mov
jle
cmp
pop
iret
sti
mov
xor
xor
in
loop
das
adc
testb
sub
push
xchg
xlat
enter
mov
stos
sarb
jle
pop
lods
sub
push
xchg
dec
xchg
leave
push
and
xor
dec
ficoml
test
inc
mov
fdivs
dec
push
imul
and
sbb
fwait
push
sub
add
dec
push
repz
push
out
adc
clc
aaa
aam
lds
leave
and
jae
cltd
dec
jae
mov
xor
rorl
push
xchg
jne
lds
sub
subl
out
push
popf
jne
or
xchg
add
test
dec
rclb
fs
cwtl
jecxz
pop
and
imul
xchg
gs
pop
pop
inc
jno
jle
fstl
cmpsl
sub
imul
xchg
dec
int3
fs
scas
fdivr
gs
adc
jp
sub
stos
fnstcw
movsl
adc
ja
scas
fnstsw
lcall
and
mov
sbb
dec
jge
adc
cwtl
mov
push
dec
push
xlat
cmpsb
or
fstp
fidivrs
push
dec
in
xchg
xchg
mov
mov
mov
aad
test
in
in
adc
jg
xchg
clc
lahf
stos
fstpl
inc
pop
std
bound
pop
jno
jbe
add
and
ljmp
mov
and
in
and
jg
popl
jecxz
call
imul
xchg
push
xor
test
jmp
lret
int
ja
mov
cmpsb
ljmp
mov
int
pop
hlt
stos
cmp
rorl
adc
fdivr
test
stos
lret
iret
push
cld
pop
into
push
sub
pop
mov
cmp
and
mov
xchg
mov
mov
jle
adc
or
and
in
fs
aad
les
fwait
and
and
or
sub
add
bound
xchg
fs
lret
pushf
pop
xchg
xorl
into
arpl
cmpsb
frstor
ds
out
ds
stos
imul
cltd
mov
call
xor
and
fstpt
les
mov
fmulp
add
aam
outsl
pop
clts
mov
push
pop
or
jge
aam
rolb
mov
xchg
sbb
mov
hlt
mov
jmp
xor
pusha
out
xlat
int3
hlt
call
xor
in
cmp
or
addl
aas
pop
fidivrs
icebp
sbbl
inc
dec
aas
inc
sbb
jo
fdivrl
mov
xchg
jle
adc
cmp
mov
int
jge
movsb
mov
push
int
or
jae
je
mov
into
xchg
add
sub
xor
lahf
mov
cs
dec
xor
in
or
in
jp
mov
popa
sbb
cmpsb
lods
sub
xor
pop
dec
into
in
insb
paddusb
jne
sarl
inc
adc
pop
mov
imul
jp
test
pop
jmp
sbbb
out
imul
iret
mov
lock
je
add
add
mov
addb
mov
xor
dec
notl
lods
sti
out
mov
mov
rorb
loopne
mov
sbb
or
sbb
xor
je
pop
pop
mov
mov
adc
sub
sub
gs
aaa
cmp
cmpsl
jmp
test
mov
adc
ficoml
iret
push
xchg
jg
xor
lsl
cmpb
xchg
jno
sub
repnz
pop
push
cmp
clts
ret
add
push
fmuls
stc
or
into
aaa
insl
and
in
push
and
aad
repz
rcrb
mov
jmp
fcmovbe
mov
out
push
out
pop
xchg
and
dec
sub
imul
fwait
xor
add
sub
fldcw
add
inc
mov
or
fistl
vmsave
and
gs
in
lret
ss
jns
xor
jo
cltd
fs
push
shrl
and
lcall
push
rclb
repnz
mov
xchg
lds
and
dec
mov
loop
mov
sbb
in
inc
or
mov
jl,pt
add
sub
imul
mov
leave
das
leave
sbb
mov
sbb
repnz
popf
mov
test
add
shl
pushf
loope
cltd
icebp
in
in
sub
pushf
in
lret
fwait
iret
gs
dec
divl
inc
lock
xchg
out
incb
pop
sbb
mov
lea
pop
pop
sub
cmp
add
rorb
inc
mov
pop
mov
rolb
fsubl
pop
aaa
add
sbb
notl
loope
pop
mov
mov
mov
ret
out
pushf
cwtl
push
nop
jbe
adc
or
or
cmpsl
and
push
push
insb
aad
into
cs
push
nop
mov
mov
out
dec
and
mov
cmp
sbb
or
pop
pop
or
in
shl
cs
jns
mov
or
mov
xor
mov
mov
dec
xor
test
xor
leave
cld
add
es
mov
push
mov
outsb
jecxz
dec
fldenv
inc
imul
popf
cmp
pushf
mov
lods
movsl
adc
or
lock
sarl
mov
push
xor
adc
push
dec
mov
or
pushf
aad
jae
cwtl
and
fildl
cmpl
test
stc
ret
test
xor
mov
test
xchg
je
add
mov
rcl
mov
pop
sub
loope
rolb
push
lret
sub
out
adc
xchg
cmpsb
test
dec
ss
mov
out
out
insl
sub
or
lods
push
mov
cmpsl
push
mov
out
mov
cmpsb
mov
add
std
lods
mov
pop
cmpsl
add
das
mov
fnstcw
js
mov
add
mov
jae
lock
jno
jae
or
pop
push
pop
inc
mov
jecxz,pn
cmp
xor
inc
push
or
enter
stos
arpl
adcb
push
scas
jnp
lret
cmp
bound
push
ss
fwait
in
dec
es
sub
stos
mov
and
std
in
push
mov
push
and
dec
jle
iret
test
data16
je
pop
mov
ljmp
inc
outsl
cmpsl
mov
orb
pop
dec
jne
mov
or
push
int3
inc
cli
or
inc
or
mov
test
fidivrl
mov
mov
popf
xor
mov
mov
adc
push
leave
adc
in
xor
add
xchg
mov
inc
dec
cmp
adc
fwait
je
push
mov
inc
movsb
cli
sub
std
outsb
aas
xor
mov
fsubr
cld
mov
mov
inc
test
arpl
cmpsl
jecxz
or
push
test
add
mov
mov
mov
imul
push
cld
lods
dec
sub
sahf
shll
xchg
jecxz
imul
add
cmp
jl
push
das
ret
ficoms
popa
mov
mov
js
pushf
push
ret
cmp
loope
fldenv
cwtl
xor
testb
mov
dec
into
ja
out
push
call
je
dec
xchg
jae
stos
fisubs
jge
jns
xor
sbb
or
mov
cmp
ret
shlb
mov
clc
push
out
mov
cli
sub
ja
xchg
rcll
jecxz
iret
repz
xor
jb
or
aaa
rcrl
mov
add
enter
aaa
and
cwtl
xchg
add
and
xchg
in
mov
and
add
imul
stos
mov
ss
sbb
loop
fwait
pop
sub
das
cmc
jp
dec
dec
xor
aad
or
mov
adc
mov
cwtl
sub
rcr
inc
or
jl
ljmp
mov
cmp
aam
lcall
mov
sub
sub
jbe
xor
sbb
or
aad
jb
mov
incl
adc
aad
sub
ret
or
mov
int
adc
mov
mov
xor
and
mov
xchg
cmp
adc
lahf
imul
repz
pop
push
pop
cltd
or
lahf
cs
scas
sbb
dec
cwtl
fs
or
mov
aam
mov
pusha
test
in
nop
pmullw
and
pop
pop
insl
push
leave
jno
lock
in
in
frstor
fs
add
and
ss
test
pop
inc
pop
lods
cmp
into
shr
cmp
enter
out
add
jmp
or
lcall
mov
xchg
shll
jge
xchg
inc
jo
inc
mov
xchg
and
jns
inc
scas
ffreep
xchg
sbb
loope
in
in
jge
sbb
mov
popl
rcll
pop
mov
add
shll
adc
lret
aam
sub
cmpsl
or
lahf
push
fcmovb
addl
and
pop
mov
ljmp
fcmovnb
xorb
insb
ja
or
inc
dec
mov
push
je
mov
mov
push
rcl
cmp
and
popf
nop
sbb
and
je
jle
js
sti
in
mov
xor
and
filds
mov
mov
add
or
jbe
adc
push
adc
cmp
ret
sub
into
and
repnz
movl
mov
movsl
cld
std
sub
dec
mov
adc
cmovle
scas
in
mov
xor
shrl
jge
inc
out
jb
into
imul
mov
repnz
mov
pop
fmul
scas
push
add
push
push
in
daa
jmp
iret
inc
dec
in
push
and
mov
mov
scas
in
test
or
mov
push
gs
inc
aad
outsl
xchg
mov
jnp
cmp
jl
mov
lods
inc
popa
hlt
lods
ljmp
mov
bound
jmp
and
aas
fistpll
or
imul
stc
in
iret
in
repnz
fnstsw
pop
lret
sbb
sub
jl
cmp
ds
call
push
les
pop
cmp
pop
xor
xchg
lea
filds
sub
xlat
int
push
insb
iret
imul
bound
into
mov
add
in
and
aas
fucom
rcl
imul
or
es
xchg
sbb
cmpsl
pop
decb
pop
xchg
stos
in
movsb
xchg
imul
mov
fisttps
add
sub
push
and
lds
sbb
add
cltd
xor
and
mov
inc
mov
loopne
and
cld
flds
data16
xchg
push
scas
push
add
push
in
leave
inc
jg,pn
out
mov
mov
cmp
imul
push
jne
mov
xor
test
mov
inc
dec
rcrl
inc
adc
jbe
imul
mov
sub
add
or
hlt
shrl
mov
pop
cmp
popf
les
hlt
sahf
add
bound
xchg
mov
xchg
aas
bound
xchg
pop
and
dec
and
fsubrl
movsl
insl
cmp
push
in
lret
lahf
pop
ret
clc
pop
xor
jnp
mov
fisttps
add
inc
mov
fcom
pop
dec
mov
into
mov
cli
pushaw
rorl
popa
push
push
xor
push
jne
jb
sbb
xrelease
mov
popa
cmpl
dec
sub
into
and
clc
pushf
and
mov
xor
dec
push
jae
cli
xor
cmp
loop
out
mov
xor
mov
in
push
add
and
test
or
test
mull
sbb
int3
cmp
negl
pop
or
mov
rorb
leave
adc
sub
negl
shl
sub
cli
rclb
aad
dec
xchg
je
in
and
jmp
xchg
and
ret
cmp
out
jge
pop
dec
lock
mov
out
cmp
fsubrs
sbb
nop
mov
lea
jmp
aam
adc
pop
xchg
mov
fadd
and
pop
mov
in
add
aad
mov
sbb
jae
popa
mov
jge
and
cwtl
jbe
xchg
pop
hlt
xor
scas
mov
sahf
repnz
lcall
std
cmp
push
adcl
sbb
and
mov
sub
push
test
or
cmpsb
mov
imul
pusha
fldcw
bound
xor
out
js
fimull
ret
mov
shrl
dec
xchg
pop
in
pop
inc
jg
xor
and
ffree
clc
xor
out
lods
pop
inc
inc
aam
inc
mov
xchg
loop
mov
scas
sub
sub
lock
cmp
sbb
inc
das
jge
inc
push
addr16
sbb
mov
sub
mov
sbb
jbe
arpl
fs
test
mov
xchg
outsb
adc
sub
aad
fwait
add
arpl
inc
adc
jae
mov
cmpl
xchg
pop
rcrb
and
mov
filds
jae
mov
push
push
inc
shlb
xchg
and
test
adcb
push
or
jb
stc
lret
sbb
adc
sub
xchg
dec
adc
movsb
mov
scas
inc
out
insw
aas
pop
dec
jb
dec
out
aad
dec
xchg
pop
fildll
jg
or
inc
xor
xchg
out
xor
outsb
inc
and
int
mov
lea
into
test
and
out
inc
negl
aaa
call
iret
push
rcrb
push
xor
sarl
dec
scas
mov
stos
stos
test
mov
insl
aaa
lods
add
push
jb
cmpsb
ljmp
mov
ret
cltd
push
xlat
fcoml
adc
mov
inc
in
repz
xor
out
hlt
jmp
scas
cmp
fsubs
andl
and
sub
test
popf
cmc
mov
cwtl
lcall
adc
enter
aam
fcomi
dec
cli
sbbb
loope
mov
fistl
inc
cmp
add
imul
cmp
mov
inc
sbbb
pop
jecxz
dec
xchg
cmpsl
call
push
adcl
cmp
repz
movsl
or
push
pusha
inc
xor
jl
sbb
and
and
xchg
aas
fwait
mov
std
mov
inc
jb
movsl
cwtl
jns
pusha
ds
dec
push
inc
push
subl
and
scas
shll
jge
nop
jecxz
add
das
adc
shl
in
jecxz
js
cmp
or
push
and
iret
outsl
jecxz
or
add
mov
sub
cltd
arpl
mov
icebp
mov
cmp
nop
pop
inc
pop
andl
or
dec
and
add
lock
cmp
cltd
outsl
add
lock
push
fistl
push
int
lcall
test
int
out
inc
sar
pop
or
mov
test
faddl
cli
pop
or
dec
int3
jbe
push
dec
jns
les
in
imulb
xor
addr16
imul
jg
test
and
ljmp
push
push
data16
jmp
clc
sti
rclb
or
sbb
mov
fwait
jnp
fwait
cmp
lret
ds
pop
scas
loope
pop
stos
pop
sub
xrelease
jo
mov
sbb
xchg
lahf
fcompl
pop
movsb
in
cwtl
jge
cltd
test
movsl
cmc
jmp
scas
mov
gs
cmc
cmpsb
sub
fs
inc
adc
mov
pop
call
inc
clc
dec
cmp
shr
enter
aad
jg
nop
dec
loope
es
pop
ret
andl
mov
xor
pushf
push
jae
scas
pop
fcompl
adc
sbb
and
add
sub
and
gs
xchg
mov
lods
add
daa
in
dec
aad
or
popf
sbb
adc
outsb
jb
adc
jns
push
mov
dec
pusha
jb
test
mov
jno
insl
iret
js
leave
jo
ljmp
int3
cmc
sbbl
xor
aam
sbb
gs
scas
incl
cwtl
cmpl
int
cli
jg
pop
push
fisubl
adc
aas
ret
cmp
int3
loop
xchg
test
repz
out
in
or
cmpl
dec
xor
jg
sbb
push
xor
repz
and
and
sub
push
push
jns
std
mov
fdiv
shlb
inc
push
dec
shll
push
jge
xchg
insb
mov
sbb
sbb
mov
enter
or
mov
mov
aad
push
jbe
stc
cmp
jp
xchg
int3
js
jecxz
sub
jno
push
push
and
ja
negl
in
jne
bound
mov
adc
andb
aad
cs
cld
les
pop
adc
cld
push
mov
in
fisttpll
sub
call
mov
dec
xchg
mov
sbb
aam
cs
sarb
cmpsl
aad
leave
push
sahf
mov
mov
push
add
add
mov
lcall
xor
xchg
or
adc
gs
lret
jl
gs
dec
fs
jno
push
imul
and
mov
mov
adcb
pop
shlb
mov
mov
lock
aam
sbb
jo
mov
sub
je
push
cld
push
test
rol
mov
add
out
lcall
rcr
mov
push
push
sbb
das
push
pop
mov
inc
xchg
mov
fbstp
scas
dec
push
xchg
std
inc
add
sahf
mov
stc
bound
sub
les
xchg
mov
repz
mull
inc
xor
outsl
pop
pushf
xorb
shrl
sbb
idivl
fs
fadds
pop
inc
add
lcall
jb
pop
in
shrl
push
inc
dec
inc
pop
shrb
cmp
stc
push
aaa
jbe
cmp
mov
rcll
bound
and
pop
push
jecxz
mov
pop
push
mov
imul
popa
push
xchg
out
jbe
dec
dec
sbb
cmp
push
loop
arpl
pop
gs
rorl
js
stc
shlb
andb
je
cmpsb
xor
jge
pop
mov
add
push
mov
loopne
enter
ret
xchg
jne
jnp
mov
mov
pop
mov
testb
jmp
pop
inc
pop
or
add
vpaddq
roll
ror
xchg
cmc
mov
aaa
add
mov
add
xor
cmp
out
or
fsts
idivl
insl
add
jbe
cmp
push
adc
fcmovne
clc
mov
fwait
dec
add
jg
clc
mov
loop
cmpsb
mov
xor
xchg
ds
decb
sub
pop
shl
pop
dec
adc
cmp
outsl
and
add
iret
pop
cmp
mov
repz
jae
push
adc
loopne
sbb
popf
bound
mov
mov
fmull
inc
push
cmc
inc
arpl
mov
aad
shr
add
fsubrs
ret
in
pop
add
enter
aas
ficoml
sub
in
push
fdivrs
jg
popa
sub
jno
sti
icebp
cwtl
fmul
rcrl
jbe
cld
mov
fbld
das
ret
xor
movsb
aad
je
ja
fs
sbb
out
cmc
adc
test
pop
lods
add
jnp
mov
mov
xchg
fwait
das
sub
lock
xorb
jo
sub
ret
mov
mov
mov
cmp
dec
into
scas
add
mov
mov
sub
or
js
push
sub
mov
rcrl
pop
add
fsubrp
ljmp
fs
adcb
jb
aad
pushl
scas
pusha
fiadds
jnp
int
outsb
stc
loop
daa
adc
outsl
int3
mov
cltd
test
lea
cmc
scas
push
inc
loope
nop
aad
in
mov
mov
lea
fisttpl
jnp
cmovo
xorl
or
ljmp
movb
push
iret
fisubs
jb
push
sbb
push
push
jl
and
mov
sti
mov
or
imul
pop
rorl
cmc
mov
mov
daa
xchg
adc
push
scas
sbb
pop
jns
ljmp
xchg
pop
ja
fistps
inc
mov
jecxz
out
lea
sbb
sub
leave
leave
icebp
mov
pop
rcrb
xchg
or
lods
sbb
cmpsb
mov
fidivrs
dec
std
sub
ljmp
fistl
sbb
xor
cmpsl
sbbb
adc
popa
mov
iret
imul
fs
mov
pop
imul
movsb
lret
cmp
out
dec
leave
mov
gs
jbe
cmpsl
lods
lea
imul
fwait
aas
jp
fimull
dec
lahf
adc
les
jns
enter
daa
stos
lret
repnz
mov
pop
inc
ds
adcb
leave
add
test
data16
adc
out
xchg
aaa
jl
ficoms
mov
pop
out
pop
lds
cmp
add
in
mov
lods
pusha
shrl
imul
pop
ljmp
std
or
pusha
shll
mov
pop
mov
inc
leave
sub
subl
cli
inc
daa
mov
sub
ficoms
andnps
inc
sbb
movsl
fmulp
rorb
clc
in
mov
or
out
jl
jle
lds
mov
and
adc
xor
in
ljmp
out
jmp
stos
push
test
stc
dec
sub
fdiv
push
popf
adc
sti
cwtl
mov
aaa
mov
mov
xor
enter
call
cmp
int
inc
test
add
stos
lock
lods
out
pop
sub
lock
popa
dec
and
cli
mov
movsl
repz
cld
shrb
or
jbe
pusha
sbb
and
and
arpl
or
mov
dec
icebp
mov
dec
add
inc
repz
sbb
mov
jae
fdivrp
mov
mov
push
inc
mov
icebp
mov
aaa
xor
xchg
and
inc
pop
xchg
notl
add
mov
sbb
aam
test
mov
outsb
outsl
test
jae
or
adc
aaa
fwait
xor
test
or
out
bound
in
ret
adc
hlt
and
dec
inc
dec
iret
jno
xchg
push
mov
icebp
lcall
hlt
cmp
pop
out
xchg
addr16
sti
es
add
dec
popa
mov
les
xchg
jbe
std
pushf
shlb
xchg
popf
jecxz
rorb
add
lods
xor
mov
cmpsl
mov
add
add
loope
fdivrl
mov
mov
sti
mov
cmpsb
fnstcw
andl
ss
das
mov
les
jno
lret
test
outsl
push
in
mov
pop
pop
sbb
push
jl
jae
jo,pn
fmulp
sbb
push
and
out
dec
xchg
xchg
xlat
inc
mov
out
xor
jl
pop
xchg
movsl
in
lahf
daa
out
pushf
inc
xchg
fprem
mov
dec
pop
cwtl
push
add
out
and
xor
dec
lahf
into
in
adc
ror
dec
outsl
dec
mov
add
imul
ja
push
sbb
sub
cmp
pop
inc
stc
sub
jmp
inc
dec
cmp
pop
xor
push
sbb
ljmp
fcoms
lahf
fdivrl
stc
mov
aam
fstl
sti
scas
pop
pop
lret
shll
add
fiadds
test
push
push
mov
popf
sub
add
push
dec
jle
inc
xchg
fwait
out
mov
pop
dec
ret
fwait
cmpsb
xchg
xor
mov
add
push
gs
and
ljmp
adc
js
and
pop
adc
bound
mov
pop
pop
mov
and
aaa
pop
sub
mov
mov
imul
dec
xor
adc
sub
xchg
xchg
jmp
repz
push
aaa
imul
jge
jno
push
mov
inc
push
ret
ret
xorb
lock
sbb
sbb
mov
inc
cltd
arpl
insl
add
rolb
aam
cmpsb
fucomp
xchg
fildl
sarl
pop
test
nop
mov
arpl
scas
out
mov
stc
dec
dec
xchg
out
sahf
pop
jno
mov
cli
pop
pop
out
std
cmpsb
into
mov
test
cmp
incl
stos
outsb
add
out
inc
mov
dec
iret
cmc
mov
subl
inc
cld
push
or
pushf
cmp
loopne
leave
add
cld
testl
cmc
negl
sti
jp
fsubs
push
inc
add
jne
fists
cs
and
pop
sbb
or
shlb
inc
prefetchwt1
or
add
test
push
nop
mov
rcrb
shl
into
mov
cwtl
sbb
mov
insl
and
cmp
xlat
cmp
lods
sbb
sbb
mov
xor
and
lret
mov
js
dec
push
out
jge
adc
inc
repz
pop
mov
dec
pop
or
dec
sarb
or
sbb
sbbb
shl
jg
int
inc
out
push
sbb
movsl
out
add
lret
adc
dec
jae
sti
add
mov
xlat
jbe
fidivs
xor
pop
xchg
push
mov
jle
mov
or
aam
sbb
xchg
jne
imul
daa
inc
loopne
aam
rorl
xchg
mov
xchg
xchg
mov
jb
into
xor
cmp
int
subb
mov
cltd
or
mov
pop
sbb
cmpsb
sub
or
mov
imul
jp
inc
cwtl
pop
mov
lock
je
outsb
push
fucomip
add
or
xchg
mov
adc
add
inc
shll
pop
aam
scas
pop
mov
adc
fdivrs
pop
sub
push
xchg
daa
mov
sub
in
repz
xchg
test
imul
adc
dec
jo
dec
push
in
leave
jae
fsubrl
pop
xlat
pop
jl
sub
sbb
jno
imul
and
adc
sub
push
mov
imul
cmp
arpl
or
faddl
xchg
lods
xor
hlt
push
add
sbb
sbb
push
push
mov
jno
imul
subb
sub
and
addl
mov
xchg
les
ja
xchg
xchg
jo
stc
iret
cmp
movsb
add
js
pop
push
add
or
inc
cmp
dec
shl
push
sbb
test
or
mov
hlt
push
or
ret
pop
and
sub
pop
jb
and
clc
jle
sarl
sub
jne
scas
out
mov
out
ds
cs
or
mov
xor
lret
mov
inc
dec
mov
clc
push
adcl
push
jecxz
adc
dec
push
je
add
mov
mov
pop
sahf
lcall
lock
les
mov
or
aas
fnstenv
scas
push
imull
add
inc
cltd
pop
inc
repnz
in
mov
add
cmp
mov
stc
cmpsl
fidivl
pop
inc
push
imul
inc
stc
loopne
popa
iret
push
jmp
and
cmpsl
or
in
jmp
enter
cs
fdivrs
adc
shrl
int3
iret
sub
xor
call
sbb
fstps
cwtl
and
ds
bound
pop
xchg
cmp
arpl
sub
pop
sbb
lds
mov
add
fildl
fdivrl
les
cmpsb
test
push
xor
rolb
add
jge
loope
push
fbld
jmp
and
je
inc
add
das
mov
mov
add
lods
pushf
fisttps
xor
adc
adc
ret
enter
aad
xor
add
inc
cmp
add
adc
cmp
aad
pop
ljmp
xor
mov
das
ss
push
cwtl
pop
push
and
and
xor
inc
notl
sarb
loop
dec
decl
xchg
or
push
lods
mov
xchg
bound
shlb
inc
in
repz
negl
lea
imul
movsl
stc
daa
jne
mov
push
pop
movsb
gs
xchg
aaa
outsb
popf
push
test
cmp
xchg
imul
pop
xchg
movaps
outsb
repz
int
flds
mov
movsl
nopl
popa
mov
aam
rcr
jns
ret
je
enter
jecxz
js
addl
stos
fldenv
out
xchg
lods
fistpl
lahf
add
ja
or
andb
imul
outsl
adc
inc
mov
mov
mov
into
sub
pop
jp
adc
ljmp
jns
or
push
jno
pushf
jle
mov
shl
xorl
iret
pusha
cmp
arpl
push
out
cmc
xchg
pushf
stc
push
fldt
xchg
mov
push
rcl
dec
stc
testl
rcll
add
aaa
sub
mov
xchg
stos
cli
xor
pop
imull
mov
jbe
sub
clc
or
out
jo
adc
mov
sti
pop
pushf
and
push
js
pop
fnstsw
xchg
sub
pop
mov
fs
add
mov
jecxz
out
add
cmovg
popf
cmp
xchg
mov
pop
nop
stos
lcall
in
pop
stc
jne
or
int
das
push
repnz
pop
and
mov
jecxz
addr16
mov
jmp
orb
nop
cmp
sbb
lods
jne
fisttpll
cmp
push
sub
inc
pop
gs
notb
fwait
jo
lcall
mov
scas
add
fmull
pusha
loope
dec
jnp
xchg
fistl
add
and
dec
insb
or
sbb
ja
clc
test
call
lret
add
cli
cmc
push
ret
jp
outsl
mov
xchg
insb
mov
lds
js
aad
pop
xchg
mov
in
scas
fnstcw
push
and
out
pop
stc
mov
es
jl
pop
outsb
ret
imul
nop
imul
das
int
push
jmp
jmp
or
out
decb
xchg
lea
or
mov
mov
add
mov
adc
adcb
iret
subb
lods
jbe
add
cmp
sub
aas
mov
adc
add
cmp
push
shlb
stos
pop
repz
adc
add
lock
cmp
dec
jle
cmpl
sarb
in
mov
jnp
add
gs
iret
addl
test
push
movsl
push
xchg
add
push
jge
sub
xchg
push
adc
cmp
adc
cmpsb
aaa
js
and
lahf
inc
cmpsl
scas
in
jnp
in
test
inc
rcll
imulb
arpl
movsb
cmc
ret
jmp
negl
pop
jno
lods
imul
push
ss
pusha
sub
mov
inc
divl
pop
sub
cs
push
lock
xor
cmp
loop
dec
mov
test
pop
push
cltd
rol
jg
sbb
nop
lcall
pop
mov
xchg
mov
outsl
mov
jae
movsl
lcall
adc
mov
mov
aaa
pop
add
aas
xchg
cmp
adc
jne
sbb
aas
sbb
shlb
mov
mov
movsl
jno
jnp
call
and
outsl
push
xchg
imul
mov
mov
push
fs
lds
dec
loope
stc
loope
js
rcr
push
daa
test
mov
xor
mov
scas
jge
mov
dec
je
clc
mov
add
mov
repnz
jbe
dec
unpcklps
sub
aad
add
arpl
mov
cmc
cltd
ret
rorl
jle
pop
dec
idivl
inc
cmpsb
pop
xchg
xor
pop
sbb
lock
icebp
mov
push
push
inc
push
pop
xchg
out
push
ret
cmpsl
xchg
popf
inc
fcmovnbe
adc
repnz
xchg
xchg
inc
in
or
dec
lahf
sbb
mov
jecxz
cli
rcrl
andb
cmp
ss
ret
sti
inc
pop
or
inc
aam
jmp
mov
mov
and
xchg
adc
sahf
sbb
sub
out
lds
int
orb
out
adc
inc
mov
repz
push
or
popf
or
jecxz
rclb
aam
adc
shrb
in
mov
ds
inc
clc
mov
mov
xchg
push
push
push
fwait
mov
fimull
shrb
mov
mov
pop
add
mov
jnp
hlt
and
sub
adc
adc
js
call
iret
push
out
lahf
in
fistpll
sub
js
jle
inc
fdiv
or
mov
jecxz
std
aas
inc
shl
push
fcoml
lea
and
pop
sub
sub
addr16
cs
rcr
cmpsb
negl
ja
shlb
push
enter
push
clc
inc
sti
add
push
aam
adc
cltd
test
mov
lock
inc
mov
add
inc
aad
xchg
test
mov
xor
fnsave
or
popa
xor
inc
push
mov
jo
rep
popa
sub
pop
inc
fwait
or
pop
stos
cmp
sbb
fsub
fidivs
inc
xchg
aaa
push
pop
or
in
fsts
fwait
jbe
jecxz
movsb
mulb
mov
and
aaa
sbb
aad
cmp
pop
sub
aaa
pusha
lahf
mov
push
jns
popa
test
inc
ret
lahf
xor
xchg
outsl
mov
pop
hlt
adc
in
rol
subb
out
push
inc
decl
int
xchg
xor
add
mov
xor
imul
jnp
popa
mov
stc
sbb
mov
pop
dec
inc
mov
adc
mov
and
mov
mov
mov
xchg
fnstcw
dec
adc
rcrb
test
push
loope
inc
mov
sub
std
cmpl
loopne
dec
aad
aam
cmp
ret
or
stos
pusha
mov
sub
popa
add
and
repnz
clc
push
mov
add
sbb
mov
test
or
mov
in
push
sbb
jmp
aaa
or
dec
sbb
fmull
or
cmp
jns
movsb
inc
ficoml
ror
adc
bound
pop
insb
popf
divb
push
popf
push
mov
fs
das
mov
pusha
btr
iret
or
push
dec
pop
in
adc
xchg
js
lret
out
xchg
cmpsl
mov
rorl
ja
adc
icebp
ds
adc
or
and
xchg
outsl
loop
popf
xlat
mov
mov
jg
jge
imul
stos
cmc
cmp
loope
sub
jo
inc
scas
or
inc
dec
or
iret
lret
xchg
lods
push
sub
mov
cwtl
pop
idivb
mov
js
stos
dec
xchg
push
scas
pop
mov
add
and
and
adc
sbb
or
xchg
outsb
inc
xchg
pop
bound
pop
out
and
test
push
dec
adc
inc
or
dec
outsb
cmp
or
jb
cs
mov
mov
loopne
loop
shll
push
fs
jecxz
xor
out
fmull
sbb
mov
orb
pushf
sub
push
imul
cmp
and
and
mov
push
leave
sbb
lock
push
fadd
lret
cs
das
xchg
and
sbb
jb
or
cld
add
inc
loop
inc
pop
int
hlt
mov
pushf
inc
and
adc
jmp
aaa
sti
cs
rorl
push
inc
jno
jno
ss
or
sbb
jge
sub
adc
and
lea
jp
sbb
mov
lcall
dec
inc
fdivl
mov
jge
pop
mov
inc
dec
jae
ds
call
inc
shl
mov
inc
lret
cmp
out
sub
push
xor
pop
mov
shlb
das
imul
push
nop
jo
sub
gs
add
dec
bound
int
inc
push
pop
imul
out
mov
scas
jl
fildll
jecxz
sub
cltd
jl
scas
hlt
pop
lahf
int
fidivrl
movsl
mov
js
dec
cmp
es
jp
mov
sub
test
mov
fadds
jae
sbb
dec
fisttpll
push
xchg
jnp
out
aaa
xchg
out
ss
xor
cwtl
leave
adc
mov
js
leave
jne
push
pop
or
in
jmp
shlb
mov
inc
add
xchg
inc
mov
ljmp
add
data16
enter
jne
aaa
fildll
je
or
fnstsw
sub
mov
cmp
ror
rorb
test
cmp
fisttpl
fdivrs
in
fucomip
add
cli
out
mov
addb
mov
sub
xchg
xchg
mov
stos
inc
push
sub
cmpb
insb
pop
lods
ret
adc
or
mov
lock
popf
cs
pop
mov
or
pop
cli
pop
andl
push
pop
sub
nop
pop
idivb
fsubrl
aad
add
mov
mov
mov
push
cmpsl
cld
xchg
pushf
mov
mov
icebp
movsb
fstl
jbe
rorl
xor
sub
cld
dec
clc
jb
lahf
mov
pushf
or
rcll
and
cmp
pop
mov
xchg
out
js
rolb
mov
inc
fwait
dec
add
or
add
icebp
mov
add
aas
andl
hlt
xchg
in
cmp
ret
stos
dec
mov
call
add
icebp
xor
dec
dec
pop
leave
loopne
mov
push
jecxz
xor
cmp
andb
inc
mov
mov
in
sbb
inc
push
mov
cmpsl
lods
or
sub
pop
mov
mov
testl
popf
xchg
sbb
out
pop
mov
jo
mov
adc
add
cmp
sarb
fiadds
stos
mov
push
mov
dec
sbb
push
idivb
nop
push
xchg
cmp
lahf
adcw
in
lock
mov
jne
mov
jne
decl
fbld
sti
cld
dec
xchg
sub
test
add
push
stos
cmp
and
inc
adc
js
or
dec
pop
adc
dec
sub
and
test
ljmp
lds
dec
shll
mov
aam
loop
shlb
pop
push
test
outsl
push
add
mov
add
push
outsb
ja
inc
cli
mov
arpl
fstps
adc
dec
ret
popa
cmp
cmpsb
js
arpl
cmpsl
xchg
ret
movsl
cmp
in
add
movsl
rol
mov
hlt
sarl
xchg
pop
jg
xor
cmp
out
repz
nop
xor
lcall
lock
rclb
arpl
jae
push
xchg
add
int3
enter
xlat
js
loopne
test
sub
dec
dec
or
cmpsb
mov
outsb
push
sub
or
ja
push
pop
lcall
in
imul
addb
sbb
mov
adc
mov
test
pop
jg
add
lret
adc
pop
aam
call
aaa
inc
in
or
jo
mov
or
pop
lods
xchg
shlb
mov
mov
dec
dec
adc
cli
in
cwtl
and
ds
lret
push
push
std
sub
ret
and
sub
daa
xor
push
xor
and
mov
mov
mov
push
popf
popa
insb
jmp
xor
and
stos
test
repz
push
nop
imul
mov
sbb
and
cmp
loop
out
mov
aam
adc
movsb
sub
dec
daa
mov
inc
or
push
mov
std
aam
lea
out
and
outsl
mov
mov
shrl
inc
in
cmp
sahf
nop
add
das
add
xor
stc
in
andl
aad
pushf
inc
fdivl
mov
jbe
mov
stos
sub
xchg
inc
sub
sub
imul
xlat
rcrl
pop
mov
cmp
lret
dec
sbb
mov
push
add
mov
sbb
cld
xlat
cmp
jno
or
lods
movsl
xlat
xchg
aas
ficomps
xchg
dec
dec
rorb
jge
fnsave
fldcw
pop
adc
and
rcrl
xor
out
adc
sbb
pop
faddl
hlt
popa
movl
add
xor
jae
int
xor
inc
push
movsl
push
add
xchg
shll
psrld
ret
jecxz
cltd
adc
inc
sti
mov
mov
push
jge
mov
aad
fmul
xchg
das
cmp
and
js
and
aas
fnstcw
push
add
inc
jnp
iret
pop
add
dec
decb
xlat
cmp
data16
push
in
imul
xor
mov
aas
pusha
add
pop
lret
jo
inc
cmp
mov
cmp
cmp
and
dec
jne
cwtl
cmp
pop
or
push
pop
pusha
and
xor
stos
aas
push
dec
shl
cmpsb
faddl
or
fs
fcoms
or
sbb
clc
push
test
movsb
stc
aas
xchg
ret
adc
push
dec
int
outsb
dec
mov
test
push
mov
rcrb
daa
cli
fs
stos
pusha
jae
mov
int3
das
loopne
add
enter
sub
jmp
push
or
inc
leave
mov
aas
arpl
movsl
popf
mov
mov
fwait
mov
test
mov
sub
stos
or
icebp
or
in
mov
jne
ss
dec
popa
out
je
aaa
jg
mov
lods
loop
jle
insl
aas
test
inc
xchg
out
or
adc
xor
or
pop
arpl
out
fcoms
cwtl
sbb
hlt
std
mov
inc
loopne
push
jecxz
lret
int
stos
in
sub
sbb
subl
fs
cmp
mov
fimull
clc
pop
jns
ss
xchg
mov
outsb
add
movsb
jb
lahf
inc
pop
aas
xor
test
ficompl
sarb
scas
lock
jle
jbe
shlb
movb
and
mov
cmp
sub
inc
test
data16
cmp
mov
les
adc
cwtl
mov
dec
das
jns
or
pop
add
adc
mov
mov
pop
ss
ja
gs
inc
cld
ret
ljmp
push
lods
jnp
jg
mov
sub
mov
jge
xchg
insl
cmp
lret
push
push
adc
xlat
lods
jecxz
dec
mov
test
jb
repz
push
sbb
add
int
mov
cmp
mov
fsubp
jecxz
leave
inc
jns
in
fmuls
insl
idivb
inc
mov
add
add
xchg
in
std
dec
iret
in
das
mov
mul
push
andb
mov
jge
cmpsb
jg
in
push
xchg
sahf
in
jecxz
xchg
pop
add
addl
fimuls
fstpl
mov
xchg
add
repz
dec
enter
nop
add
mov
and
or
mov
lret
xchg
pop
add
ja
xchg
mov
fcomps
and
mov
push
adc
aas
mov
dec
stos
dec
leave
ret
xchg
or
arpl
sbb
push
roll
scas
incb
inc
mov
fists
adc
or
shlb
and
adc
test
jg
pop
arpl
push
rcr
mov
mov
xor
popf
push
fs
push
push
add
in
mov
and
inc
loopne
xchg
sbb
lods
adc
adc
pop
int3
fdivp
mov
outsl
movsb
jg
and
push
cmp
in
mov
inc
or
jbe
sub
inc
ja
push
and
jecxz
inc
sub
jl
idivl
fidivl
sti
push
add
mov
cmp
xchg
dec
popf
push
xchg
icebp
popa
mov
mov
inc
xchg
sbb
push
dec
inc
adcb
pop
sti
dec
jle
pop
push
fisubl
insb
imul
lods
cmp
sbb
mov
or
mov
and
popf
daa
scas
pusha
aas
test
fdivrp
jge
cmp
mov
gs
xor
sub
cmp
arpl
js
adc
shlb
dec
xorb
ret
dec
adc
push
sbb
xor
jnp
add
push
and
add
sub
push
adc
xchg
sbb
pushf
popf
jge
notl
jp
loopne
sbb
or
cmp
es
in
fs
btrl
jle
ja
push
seta
dec
gs
mov
pop
mov
jae
ss
sbb
movsl
out
push
ret
push
scas
push
lret
ret
add
leave
push
je
jno
cmp
imul
mov
ljmp
xchg
sub
xlat
xchg
ss
int
jmp
lock
aam
adc
int3
andb
shll
push
and
or
xchg
mov
scas
push
lcall
adc
push
iret
pop
std
xor
inc
mov
out
lds
repz
pop
int3
jle
sub
mov
lea
imul
sub
fildl
roll
sbb
jp
pushf
rep
dec
shll
mov
in
xchg
add
lea
fldl
adc
pop
jbe
adc
or
inc
xchg
xchg
lcall
in
mov
jnp
dec
popa
sbbl
popa
pop
cmpsb
incl
cs
mov
and
lods
pop
lds
out
jb
clc
cmp
test
in
jae
xchg
rol
mov
dec
push
push
arpl
and
lret
add
jle
dec
aad
dec
mov
ljmp
adc
int3
es
jl
aaa
xchg
into
dec
ficomps
cmp
frstor
repz
iret
sub
push
xchg
mov
mov
jne
dec
xor
xlat
jb
stos
pushf
adc
stos
es
xchg
in
xchg
es
cmc
and
and
cmc
mov
movsb
and
pop
test
push
mov
stos
call
fisttps
and
adc
movsl
add
rorl
pop
fs
sbb
ret
jno
push
dec
mov
outsb
mov
mov
xorl
mov
stc
xlat
xchg
icebp
xchg
mov
adc
inc
mov
add
in
aas
pushf
int
mov
jl
xor
xlat
loopne
lret
fcomp
xor
xor
xchg
lods
push
ss
cmp
inc
mov
adc
addr16
out
or
push
cli
xor
out
into
and
movsb
lcall
daa
mov
addr16
add
jno
mov
mov
iret
aam
outsl
xor
rorb
cmc
adc
cli
mov
mov
vsqrtps
pop
and
fsubl
add
push
scas
mov
inc
add
sbb
mov
fnsave
clc
adc
xor
es
imul
sbb
movsl
pop
jecxz
mov
cs
out
and
imul
sbb
sub
lret
pop
ljmp
sti
jnp
inc
movsl
push
jmp
jns
mov
cmp
fistl
adc
jnp
shl
add
jle
lds
and
stc
xchg
ljmp
test
pop
add
out
mov
mov
dec
pop
loopne
outsl
xchg
sti
pop
fstps
leave
es
insl
push
aas
shrl
sti
pusha
push
push
fisttpll
push
inc
pusha
mov
mov
jmp
fsubs
push
and
call
lret
inc
mov
dec
push
les
jnp
jmp
lahf
adc
enter
mov
pop
adc
fidivrl
or
fbstp
add
push
xchg
push
mov
shll
clc
dec
add
mov
push
sbb
lea
stos
fimull
sub
or
push
jne
pop
adc
xorb
pop
xor
push
mov
es
dec
in
push
ljmp
xchg
pop
xchg
rcrb
add
aaa
out
and
ds
int3
add
mov
jl
and
loopne
add
callw
fstpt
lods
push
adc
scas
mov
ljmp
out
ljmp
adcb
shlb
loop
jge
jno,pt
les
dec
in
mov
or
xchg
jg
or
jg
ret
clc
cmp
push
jge
lock
loope
and
and
leave
ret
or
fistps
jle
test
mov
icebp
clc
mov
mov
mov
xlat
inc
sbb
push
enter
push
sbb
daa
iret
add
push
nop
add
into
das
mov
cmp
mov
jae
cwtl
adc
sub
dec
or
push
sub
ret
jle
xchg
pop
cmp
cmp
xor
mov
loope
inc
xor
fsubrs
jp
fyl2xp1
data16
mov
mov
inc
adc
mov
sub
jmp
lock
cmpsb
and
cmp
cmp
mov
decb
mov
insb
sarb
inc
int
dec
imul
cltd
cmpl
xchg
movsb
push
lods
inc
jne
or
mov
pusha
jl
mov
inc
fisubrl
dec
inc
out
std
jbe
aaa
sbb
inc
xchg
gs
mov
sub
lds
cmp
inc
pushf
jl
outsl
xor
mov
pop
sbb
ficoms
negb
idivb
xchg
nop
out
and
insb
mov
push
out
jecxz
add
mov
shl
ficompl
dec
mov
in
xor
dec
jmp
or
push
push
repz
addr16
jnp
and
stos
jno
pop
add
shrl
mov
enter
mov
push
jo
jo
das
xchg
fldl
shrb
enter
xor
aam
jp
pop
nop
iret
jge
dec
fsubp
std
test
fimuls
cs
bswap
adcw
jno
fidivl
idivl
addl
testl
rclb
mov
cld
sbb
xchg
pushf
jnp
out
aaa
sti
pop
dec
pop
int
sbb
jb
outsb
xchg
mov
adc
outsb
loop
xor
fstp
psubw
ljmp
push
mov
add
jg
test
mov
ret
icebp
lods
jle
pop
adc
push
push
mov
jl
mov
cli
jle
movsb
cs
mov
cmp
stos
adc
mov
cmp
xchg
dec
jg
inc
or
sti
or
push
and
insb
cmp
ret
lds
xchg
pushl
insl
sarl
mov
xor
lea
add
or
mov
cld
mov
fmuls
test
lock
mov
mov
xchg
ja
and
xor
mov
adc
fsub
js
ret
insl
leave
arpl
or
pop
inc
in
nop
outsb
fcomi
out
sub
push
mov
mov
pop
mov
ret
and
xor
into
es
test
inc
or
loop
out
stc
nop
sub
push
in
out
jnp
ja
mov
mov
outsl
adcw
jecxz
fwait
xchg
pop
push
push
dec
scas
ds
lds
cmp
mov
das
popa
push
clc
das
rcrl
mov
sub
push
jmp
lods
mov
jmp
in
adc
mov
mov
dec
cmpsl
repnz
outsb
adc
loopne
outsl
lock
mov
fabs
mov
jle
fs
cld
mov
in
mov
mov
gs
inc
ret
add
sbb
hlt
and
movsb
clc
es
sahf
outsb
popf
out
aad
mov
mov
stc
xchg
cld
scas
fnstenv
clc
imul
or
jae
pop
and
fidivrs
cld
daa
cmpsl
int3
push
jo
test
xlat
xchg
stos
out
pusha
js
clc
cmp
test
or
mov
pop
adc
inc
mov
subb
or
sarb
aaa
mov
cmp
sub
pop
xchg
push
cs
dec
sbb
test
and
sahf
mov
xor
std
imul
lods
arpl
pop
gs
stos
push
scas
add
mov
sahf
mov
add
lock
pop
inc
cmc
pop
addb
mov
xchg
lock
xchg
mov
jmp
lds
inc
mov
and
andl
mov
jo
ja
test
sub
aad
jnp
repz
pop
into
mov
xchg
dec
push
push
outsl
jnp
dec
xchg
sub
lret
xor
test
aaa
cltd
sub
scas
cmp
int3
or
pusha
jle
rcrl
mov
lock
cmpsl
mov
xchg
mov
pop
push
jl
cmp
ror
testb
stos
dec
dec
push
bound
push
push
xor
pusha
mov
sbb
stc
pop
add
jne
ds
fidivrl
loope
insb
push
leave
rorb
imul
ds
flds
scas
cli
and
int
cmp
mov
or
adc
mov
sub
sbb
xchg
or
push
mov
pop
sarl
movsbl
adcb
dec
idivb
and
xor
fwait
scas
iret
popl
xchg
sahf
push
std
mov
jge
or
outsl
clc
mov
into
cmp
inc
sbb
leave
inc
xor
sarb
in
les
or
or
xchg
pop
popf
push
sub
aam
dec
lods
push
jecxz
fwait
adc
xchg
idivb
nop
pmuludq
outsb
mov
lea
cmp
mov
cli
out
inc
aas
xchg
adc
ret
cmpsl
mov
mov
enter
add
pop
outsb
sbb
xchg
xor
vminpd
int3
test
lret
mov
imul
stos
adc
mov
sbb
xchg
xchg
cmp
imul
and
shll
gs
jae
push
mov
sbb
stc
inc
mov
or
mov
call
jo
pop
xchg
add
sbb
mov
aad
xchg
std
dec
idiv
add
xor
mov
decl
std
clc
rorl
int
pop
sbb
cmc
mov
stos
mov
sbb
xlat
xor
lret
cmp
pushf
cmp
mov
cmp
test
mov
jno
adc
jmp
out
lods
arpl
in
cmp
dec
mov
retw
stc
ret
int3
negl
adc
stc
stos
push
dec
push
adc
sub
cmpsb
push
push
dec
and
pop
mov
mov
sub
sub
xor
sbb
gs
in
fstpl
iret
pop
pop
lods
lds
cmp
xrstor
stc
dec
push
push
hlt
inc
add
scas
jmp
nop
inc
and
jnp
add
out
ds
in
insb
shrb
mov
dec
movsb
mov
dec
push
imul
push
jle
jmp
rolb
xchg
lods
ja
popf
dec
stos
stos
insl
jae
mov
adc
xor
mov
mov
repnz
lods
bound
int
xchg
lret
cmc
push
imul
leave
sub
adcb
stc
cld
xchg
ds
xchg
enter
imul
sbbl
pop
mov
roll
sbb
lock
dec
push
aad
adc
and
sub
nop
aas
or
stos
push
jmp
dec
pop
sarb
mov
bound
or
sub
cmc
shll
ret
cwtl
and
cmpsl
jae
ss
mov
jo
lods
jns
push
imul
cs
mov
sahf
fldt
scas
cmpsb
dec
das
movsl
movsb
push
lcall
fnsave
mov
push
cmp
dec
es
orb
jbe
les
mov
loopne
cmp
lcall
icebp
out
push
xchg
das
ret
cmp
ss
mov
dec
imul
mov
sti
dec
adc
daa
jecxz
mov
nop
popw
pop
pop
mov
ljmp
mov
cmpb
insl
lods
sub
adc
pop
sub
mov
sub
xchg
xor
pop
xor
arpl
pop
cmp
out
pop
fnstenv
je
pop
lcall
mov
orl
aad
sub
xor
cmpsl
push
aam
pop
repz
sbb
nop
pop
xor
sub
dec
fstl
mov
jge
jmp
movsl
ja
jns
xlat
addb
jb
call
mov
jno
fmuls
ljmp
push
lds
pop
shll
push
sbbb
fstpt
lods
xor
hlt
or
test
pushf
rcrb
jo
or
mov
movsb
lahf
mov
shll
and
loope
dec
bound
inc
daa
xchg
push
pop
test
js
inc
jmp
sbb
xchg
jp
inc
fisttpl
pop
lcall
bound
ficoml
mov
aas
pop
push
inc
mov
jb
iret
rclb
xor
mov
mov
sub
jmp
xchg
mov
jp
adc
sbb
in
mov
xor
dec
sbb
or
sub
and
adc
xchg
mov
cmp
inc
fsubl
aad
test
lods
int3
mov
inc
mov
out
push
ss
inc
mov
imul
dec
xchg
pop
inc
mov
push
mov
jmp
or
cmp
inc
adc
pop
mov
xor
mov
or
jge
cmpb
out
and
pop
pop
outsb
lods
popf
aam
comiss
sbb
adc
lea
inc
pop
ds
repz
popf
or
and
outsl
addl
cs
pop
filds
pop
sbb
pop
imul
jg
clc
jl
lods
xor
cwtl
imul
pop
in
cli
cmpsl
scas
int
pop
call
popa
adc
cmp
faddl
jnp
scas
cwtl
into
ss
dec
pop
mov
nop
push
divb
push
dec
lods
scas
or
subl
out
mov
lcall
cmp
or
sub
test
and
jge
xor
loope
cmp
fildl
bound
lahf
mov
dec
inc
shrl
inc
inc
in
nop
sbb
loop
lock
mov
rolb
lret
pop
dec
icebp
jecxz
pop
mov
mov
mov
fnstsw
push
push
test
andb
mov
adc
push
es
call
push
push
mov
sbb
pop
loope
push
loop
jp
arpl
imul
imul
ja
roll
sbb
sub
adc
sbb
mov
sub
std
mov
mov
jecxz
addr16
cmp
cmpsb
aaa
or
or
call
cltd
cltd
cld
cmp
lcall
stos
pop
clc
dec
xor
aad
push
loope
push
out
adc
jecxz
adc
xchg
inc
and
sub
add
sub
sar
jns
stos
repz
aam
fs
jge
cmp
out
js
sub
jg
loope
push
cmp
pusha
imul
dec
je
orb
sbb
imul
xchg
test
fmuls
and
jge
xchg
mov
inc
pop
sbb
cwtl
adc
dec
into
or
jbe
sub
pushf
push
sar
lret
jmp
adc
in
imul
jmp
outsl
loop
inc
clc
mov
pop
xor
fcomps
pop
outsl
imul
test
dec
inc
iret
or
dec
adc
addr16
cwtl
xchg
fcoms
outsl
jle
imulb
or
dec
divb
cmpsl
sub
mov
scas
or
mov
inc
leave
jle
push
iret
xchg
lret
jb
pop
cmc
cmpsl
fwait
movsl
pop
push
cmp
dec
jne
out
ljmp
pop
and
popf
xorb
push
rcrb
lea
mov
mov
pushf
loope
xchg
mov
or
test
insl
nop
aas
fildll
or
sbb
dec
nopl
sub
call
rdtsc
mov
popa
jae
test
inc
lahf
mov
adc
add
ja
jg
xchg
push
nop
xchg
mov
test
dec
sarl
mov
cmp
and
cli
and
adc
pop
xchg
adc
jne
push
xor
dec
pop
hlt
push
mov
sbb
popa
setge
add
subb
sub
pop
add
bound
cmpsb
xchg
jae
and
dec
mov
aaa
fnsave
xchg
dec
xlat
jle
cmp
add
aas
test
add
dec
into
jns
xchg
push
xchg
mov
cmp
mov
scas
call
jecxz
ret
push
pop
dec
dec
inc
fbld
lods
mov
push
es
dec
movsb
bound
sbb
mov
aaa
add
neg
sbb
xchg
lret
mov
in
jne
loop
and
cmp
insb
jo
scas
je
mov
adcb
jp
mull
cwtl
inc
rcrl
lcall
push
jmp
xchg
aas
sbb
mov
push
xor
mov
out
or
out
arpl
adc
xchg
xor
mov
push
adc
pop
out
js
mov
fs
aaa
repnz
jle
xchg
adc
and
fistps
leave
jp
mov
cmp
sub
or
rcr
add
xlat
dec
push
mov
or
ret
push
loopne
adc
jge
mov
fldcw
push
fdivs
jp
adc
scas
orl
inc
adc
jmp
xor
fists
adcb
mov
pop
xchg
in
test
icebp
xchg
js
mov
xor
push
test
or
cltd
cltd
loope
jno
sbbl
push
sti
sbb
mov
aam
sbb
dec
stos
ss
loopne
pusha
sub
cmp
enter
daa
popf
jmp
int
loopne
loope
sbb
push
cmpb
cmp
cmpsl
mov
jnp
sub
push
mov
xchg
repz
pop
mov
push
jbe
jp
popa
push
repz
sbb
out
pop
mov
jl
cmp
inc
arpl
or
adc
or
jne
out
out
adc
lret
test
jg
imul
pop
imul
add
lods
push
scas
fcomp
push
mov
xor
leave
pop
mov
xor
xor
mov
pop
stos
push
xchg
cmp
pop
sub
lcall
and
daa
sbb
add
xchg
nop
cmpsl
jne
pop
mov
xor
popf
test
push
mov
out
movsl
push
jge
or
cmpsl
sub
sub
and
jae
in
sti
sbb
pop
mov
fcmovb
jo
fwait
mov
lea
dec
scas
bound
fisttps
jno
popa
ret
mov
mov
sbb
stc
pop
fwait
add
push
lods
mov
xchg
pusha
jne
mov
mov
test
lock
jge
or
mov
loopne
sbb
shr
dec
popf
es
push
jo
leave
jbe
sbb
push
out
rcrl
and
push
repnz
stc
leave
jb
lcall
out
dec
cmc
or
push
out
fwait
sahf
push
push
sbb
sbb
int3
or
jg
mov
jl
mov
sbb
fincstp
in
add
xchg
mov
push
sbb
add
movb
pop
shrl
pop
mov
cmp
in
cmc
or
dec
and
jge
sbb
outsl
es
xor
fcomi
sti
mov
xlat
fucom
mov
scas
mov
iret
mov
data16
cmpsl
mov
fnstcw
inc
cmpsb
xchg
jno
xchg
lret
lock
mov
in
fidivrl
movsl
sbb
in
pop
jl
jne
int3
mov
sbb
mov
inc
xchg
inc
cmpsb
imul
stc
adc
sbb
je
mov
mov
jle
into
mov
cmc
or
insl
fldt
rorb
dec
inc
xor
ret
adc
popa
cmp
hlt
sbb
aas
mov
jbe
mov
cmpsl
nop
xchg
add
xlat
in
mov
fstps
mov
ss
int3
push
nop
repz
inc
dec
xchg
xchg
xchg
jne
or
cli
mov
xor
mov
or
mov
es
xor
cld
jp
sbb
jl
or
divb
and
sub
psubq
jle
int3
add
push
scas
test
repz
lods
lret
push
push
int3
mov
ja
cmp
xchg
dec
or
rcrb
adc
mov
popa
jl
mov
mov
jle
jne
inc
xor
addr16
rolb
mov
xor
cli
pop
aaa
sub
push
int
jl
fidivrl
dec
mov
out
imul
pop
inc
in
jge
add
adc
rcrl
stos
pop
cmpl
mov
in
enter
aas
inc
call
ljmp
sbb
add
push
int
or
or
ljmp
pop
mov
fcoml
sbb
mov
lock
cmpsb
xor
scas
mov
pop
adc
test
pop
jne
cmp
sbb
or
ret
inc
sbbl
sar
sahf
out
in
cld
mov
psubsw
inc
sbb
loopne
fwait
xchg
sub
test
ja
in
xor
mov
cs
loop
and
push
or
jl
stos
in
xor
xchg
fs
or
xlat
dec
add
in
lea
sub
dec
pop
mov
xor
cmpsl
std
and
jge
dec
inc
mov
test
and
xor
leave
sarl
pusha
pop
push
stos
imul
pusha
and
es
dec
imul
lcall
push
outsl
jnp
fiaddl
fnstenv
iret
sub
adc
xor
mov
jp
fiadds
fisubrs
fidivrs
push
or
mull
sub
pop
fwait
incl
dec
add
push
movsl
ret
mov
mov
mov
jo
xchg
fcmove
mov
push
test
cltd
xor
ret
push
sbb
push
leave
lds
sub
cmp
test
testb
mov
stos
cwtl
rolb
pusha
sub
mov
les
push
sbb
in
sub
ds
jmp
out
loope
mov
fisubl
and
add
faddl
push
jmp
popl
out
pop
lds
xchg
and
xor
sub
cli
loopne
sub
add
fdivrl
es
inc
adc
inc
cmp
in
adcb
dec
loope
popf
scas
std
jnp
jbe
and
vshufps
inc
and
mov
fstl
and
xchg
shll
adc
and
mov
xchg
aas
xlat
dec
sub
lods
incl
adc
in
stos
xchg
pop
sub
pushf
out
jle
cmp
xor
push
mov
inc
pop
pushf
push
xlat
mov
mov
add
test
pusha
enter
mov
std
cmp
inc
xchg
mov
and
mov
cmovle
fists
dec
sbb
dec
and
cmp
fisubs
mov
enter
adc
cwtl
add
jb
lea
add
mov
mov
gs
enter
imul
sti
mov
in
gs
test
mov
cmp
mov
loopne
testb
mov
dec
les
les
dec
push
mov
push
sahf
push
fsincos
jecxz
xor
sti
jecxz
push
push
and
inc
iret
fwait
stc
pusha
fadds
js
push
mov
repnz
mov
and
jg
pop
adc
adc
push
push
jnp
gs
adc
push
nopl
fs
rep
hlt
push
sub
xchg
jb
not
lahf
and
pop
cli
jae
xchg
add
mov
or
cmp
sbb
xchg
push
loop
push
mov
inc
push
stos
jns
setg
stos
pop
xchg
adc
inc
mov
shll
mov
xchg
test
lods
jle
mov
adc
idivl
addb
mov
and
fbstp
cli
add
pop
call
mov
and
arpl
or
jns
inc
pop
loope
mov
iret
test
lea
rorb
jno
inc
push
pop
lret
test
mov
mov
xchg
dec
xchg
leave
arpl
jmp
scas
fadds
test
add
xor
out
pusha
jl
or
inc
sub
lods
cmpl
push
loope
ds
dec
cld
sbb
pmaxub
jl
mov
cmc
in
mov
pusha
push
jmp
pop
call
push
mov
xor
fidivl
adc
sahf
insb
imul
mov
and
cmp
dec
aam
or
ljmp
sub
push
sbb
inc
xlat
daa
adc
add
std
pop
cmpsl
xchg
lea
xor
pop
xor
stos
cli
out
out
jne
imul
imul
xchg
je
mov
fdivrl
xor
dec
jle
mov
aaa
int3
lock
xchg
call
aas
mov
xorb
push
fcomi
xchg
mov
sbb
je
mov
shl
out
sub
and
rcll
sbb
icebp
movaps
cmp
jno
mov
pop
mov
mov
in
push
sahf
pushf
testl
sahf
filds
mov
jns
xlat
fsubl
sbb
and
sbb
dec
mov
int
pop
sub
or
jmp
mov
repnz
inc
jnp
loopne
mov
add
xadd
imul
insl
mov
out
push
pop
push
hlt
data16
jge
pushf
add
aaa
fisttpl
clc
movsl
loop
rcrl
mov
std
dec
mov
lahf
insl
pop
test
jl
rcr
movsl
push
and
mov
movsl
and
lahf
mov
sbb
sbb
sub
je
xchg
das
sbb
lods
xchg
fndisi(8087
cmp
enter
xchg
pop
sub
das
pop
jmp
xor
lock
fwait
daa
cwtl
sbbb
sbbl
add
pop
aam
bound
jmp
mov
int
rol
hlt
shlb
out
fldt
call
mov
ficomps
test
jae
mov
mov
add
xlat
sub
mov
cmc
loope
xchg
jecxz
add
out
inc
shrb
jge
pop
fdivs
sbb
int
dec
xchg
aad
xchg
and
add
and
cmp
gs
cwtl
das
test
and
push
pop
fmull
add
and
xchg
and
cmp
aam
sub
insb
mov
and
add
bound
xchg
push
out
inc
jp
pop
orb
jmp
xor
lods
push
or
inc
and
fs
cmp
mov
out
inc
xchg
mov
addr16
pop
mov
in
sahf
ja
pop
sbb
push
sub
cmpsb
fdivrs
sbb
dec
test
and
lcall
mov
jg
add
pop
cmp
ljmp
shl
lahf
mov
ja
lods
mov
xor
loope
push
and
sarl
in
mov
stos
inc
insl
inc
cmp
fsubrl
shll
add
jle
dec
in
push
sbb
xchg
sbb
and
negb
dec
mov
inc
test
cmpsb
xchg
cmp
cmp
cld
pusha
pop
sub
dec
sbb
xor
dec
dec
mov
add
loop
in
imul
xchg
fisttpll
jbe
outsl
push
xorb
mov
jp
sti
pop
idivl
data16
xlat
movsb
add
mov
pusha
in
mov
pusha
mov
or
inc
out
clc
out
mov
daa
add
adc
cmc
cmp
mov
in
mov
xor
insl
sahf
jno
pop
add
jmp
lock
leave
jbe
jle
shlb
repz
out
sub
add
mov
rclb
lcall
mov
mov
jp
add
xor
and
ret
lods
push
add
icebp
rcrb
mov
rcr
test
jae
add
inc
in
push
or
or
mov
push
popf
lret
or
fsubs
xchg
aas
cltd
add
sti
add
ret
out
xor
push
mov
call
sub
push
fcmovne
ljmp
sahf
push
fcmovnu
nop
movsb
mov
out
lcall
jle
mov
cmpsl
mov
divb
out
ds
mov
jne
xor
inc
lahf
rep
fs
in
and
or
bound
add
icebp
ret
outsl
loopne
mov
mov
cmp
fwait
push
stos
pop
mov
dec
orl
ljmp
push
mov
ja
jbe
sbb
cmpsb
aad
ss
insl
cmpsl
hlt
mov
iret
push
ret
push
push
push
jne
jmp
pop
mov
loope
out
push
shrb
cmpb
push
jle
test
pop
fldenv
sub
xchg
ret
cs
dec
mov
std
ljmp
push
jb
push
push
js
out
mov
jo
xchg
lock
inc
jb
ficompl
mov
jbe
and
add
inc
add
push
adc
lea
xor
cltd
jecxz
mov
icebp
mov
int
sub
inc
or
popf
movsl
in
and
seta
push
push
loope
mov
jae
jnp
jb
pop
xchg
sarb
call
xchg
sti
insb
push
ds
cld
sarb
stos
push
sub
sub
pusha
ret
aad
dec
test
out
jl
or
mov
xchg
xor
or
adc
cwtl
inc
dec
mov
inc
xor
mov
pop
add
mov
imul
jmp
sub
or
aad
mov
call
jne
mov
and
ret
loopne
int3
gs
sub
inc
cmpsb
das
jp
enter
fwait
psrlq
int
sub
fidivrl
and
iret
fs
shrb
xchg
clc
ljmp
icebp
pop
xchg
cld
fnsave
enter
pop
adc
mov
in
test
jno
xor
mov
lods
jbe
test
mov
jne
orb
stc
repz
lock
in
pop
jmp
xlat
cld
xchg
mov
xchg
insb
inc
push
divl
stos
cli
push
repnz
push
xlat
addb
cmp
out
loopne
push
iret
je
sub
sbb
jns
mov
jmp
aad
lods
push
sub
add
insb
cld
aaa
addr16
sbb
adc
jmp
inc
cmp
das
addr16
fwait
xchg
jne
lock
cltd
mov
loop
or
call
aam
adc
cmc
gs
xchg
jnp
test
bound
add
sub
sbb
stos
inc
sbb
sbb
mov
sub
mov
mov
leave
sub
or
xor
sahf
sbb
mov
in
mov
dec
cmc
movsl
enter
popa
fistps
shlb
sub
mov
push
cmp
mov
repz
loopne
mov
dec
cltd
dec
loop
fstl
in
pop
inc
repnz
or
mov
test
and
dec
push
insb
adc
fdivrs
scas
aaa
cwtl
icebp
cmc
lret
test
mov
mov
jge
aaa
sbb
scas
mov
push
add
sub
push
sbb
je
xchg
rclb
dec
and
pop
and
cmp
sub
jnp
ss
mov
les
addb
fiaddl
out
lret
sub
add
xchg
jecxz
sbb
sub
mov
and
dec
dec
test
dec
cmp
hlt
add
push
mov
aam
mov
xchg
sub
into
dec
rclb
jne
cmpb
xchg
loope
dec
add
das
test
mov
fadds
xor
xor
adc
movsl
mov
lcall
lock
pop
es
add
cmpsl
mov
sub
int
push
xor
sahf
and
cld
into
pop
bound
or
je
repz
idiv
sbb
adc
adc
dec
push
sarl
out
mov
insl
adc
outsb
jle
lods
mov
mov
ret
push
or
faddl
jge
adc
push
cmpsb
cmc
inc
xchg
dec
lret
push
mov
daa
adc
pop
or
int
mov
dec
pop
scas
mov
add
mov
mov
cmp
loope
mov
pushf
stos
lds
xchg
push
inc
dec
inc
cmc
dec
mov
cmp
test
cmp
stos
push
and
enter
xor
sti
cmp
dec
mov
lds
cmp
and
movsb
inc
es
int
jne
std
or
lds
je
sahf
pop
adc
mov
dec
test
xchg
rcl
aam
into
mov
or
xchg
and
xchg
xchg
cld
insl
add
dec
in
fdivl
adc
addr16
xchg
or
js
ret
xchg
push
and
cld
adc
add
icebp
sbb
dec
and
adc
sub
loop
mov
push
jg
lock
jnp
cltd
mov
inc
ret
sbb
push
pop
ret
in
loop
sbb
and
cmp
cwtl
add
fsubp
shll
rorb
lods
or
adc
xor
dec
and
clc
mov
sub
aam
jl
add
gs
dec
sbb
xchg
daa
cmpsl
xchg
stc
jge
push
jb
sub
pushf
mov
jle
add
mov
pop
xchg
sbb
mov
mov
cmp
push
mov
mov
gs
hlt
loop
and
inc
ficompl
adc
fbld
push
add
jmp
pop
or
jnp
pop
jg
sbbl
outsb
add
subl
repnz
negb
sub
stos
add
mov
jle
data16
stos
push
mov
dec
aam
xor
scas
leave
mov
mov
jg
sbb
imul
stc
inc
pop
adc
jb
xchg
cmc
pop
lret
sub
fistpl
pop
orb
stc
dec
aas
repz
pop
adc
sub
mov
jg
xchg
sbb
stc
ror
jns
test
mov
mov
adc
push
xor
fisubrl
add
inc
and
nop
xchg
push
push
data16
scas
popf
or
insl
test
jne
mov
leave
loop
jns
repz
test
imul
xorps
sbb
sub
xor
dec
pushf
pop
ret
and
scas
inc
inc
dec
daa
xchg
inc
mov
inc
aad
subb
xchg
mov
fildl
sbb
out
mov
flds
sub
clc
iret
stc
lods
xchg
or
gs
pop
mov
imul
and
test
and
and
inc
pushf
push
mov
mov
lret
pop
scas
pusha
and
dec
hlt
shrb
dec
or
push
insl
sbb
push
cmp
push
cmp
ja
cmpsb
jmp
mov
jb
frstor
push
push
mov
movsl
pop
in
ret
sbb
sbbb
fiadds
sarb
jnp
and
cmc
xor
push
stos
pushf
out
inc
call
pop
les
fstpl
and
repnz
and
lock
ds
mov
shl
cmp
repnz
outsb
jae
lods
stos
popf
or
rcr
les
pop
mov
xor
mov
sbb
jno
cmp
cmc
mov
xor
sti
pop
decb
add
out
ret
jno
clc
mov
movsb
js
scas
rcrb
sbb
insl
hlt
loope
rcll
mov
popa
into
push
jns
fdivl
cmc
pop
mov
and
sbb
push
jae
cld
mov
rcrl
pop
dec
out
adc
loope
adc
xchg
dec
mov
sub
iret
repnz
inc
fisubl
mov
mov
pop
sti
ficoml
das
mov
outsl
and
aam
xchg
add
mov
xor
jmp
or
hlt
xchg
mov
daa
popa
jnp
xchg
into
arpl
pop
sub
jmp
mov
fcompl
mov
mov
jge
leave
fldl
cmpsl
push
outsl
cmp
xchg
mov
xchg
jbe
pop
add
ja
in
and
insl
in
push
dec
ficomps
pop
in
push
hlt
mov
pop
leave
push
sbbb
sti
xor
and
pop
into
sub
in
push
adc
xchg
faddl
pop
or
mov
cmp
mov
test
jb
sub
dec
push
fs
ja
and
lods
pushf
or
aam
es
or
out
dec
mov
xor
adc
add
insb
out
cmp
fucomip
push
hlt
sbb
nop
cli
movsl
add
int
pop
inc
jae
popf
fistpl
xor
xor
pop
ljmp
scas
orl
lods
rcr
rolb
mov
inc
push
lods
xor
add
testb
mov
lock
arpl
outsl
out
add
jp
xchg
pop
fidivrl
xor
jnp
jecxz
add
jg
push
dec
adc
loop
xlat
push
hlt
cltd
cmpsl
in
xchg
mov
inc
call
lret
repnz
sar
lea
repnz
ror
clc
cmp
pop
inc
and
and
xchg
in
js
mov
test
mov
xchg
sub
std
sti
mov
push
cmp
int
dec
mov
sahf
por
xor
add
adc
rcrl
movsl
and
dec
cmp
pop
les
test
or
or
int
pop
mov
inc
repz
inc
xchg
pop
sarb
and
movl
cltd
cmp
sbb
lds
js
add
out
das
adc
rcrl
mov
pusha
adc
inc
loop
lcall
test
jns
movsl
dec
popf
insb
jp
pop
adc
push
cld
lock
cmp
out
faddp
sub
sub
mov
jmp
sarl
in
fwait
ss
cltd
and
jo
jns
mov
dec
idiv
jl
lods
sub
scas
xor
imul
and
out
stos
ffree
dec
rcrl
cltd
jmp
aas
mov
mov
cmp
mov
add
sbb
or
mov
leave
mov
mov
pop
sbb
shr
xorb
in
fstpt
mov
loope
out
cmpsl
outsl
imul
int3
hlt
test
push
leave
cmp
jmp
outsl
mov
mov
dec
sbb
test
and
in
xor
andb
notb
sbbl
les
out
mov
inc
xchg
dec
mul
pusha
lds
loop
test
add
aaa
jno
or
xchg
mov
pop
imul
cmpsl
pop
and
sub
inc
inc
dec
sbbb
mov
cld
cmpsl
inc
and
pop
push
inc
stos
into
dec
sub
imul
sbb
xchg
cmp
cmp
push
fmuls
adc
mov
es
dec
ljmp
aas
lea
rorl
push
or
jmp
leave
dec
pop
scas
sarl
jae
loope
popl
andb
insb
adc
xor
pusha
not
inc
inc
es
push
jne
adc
sub
jmp
xor
pop
dec
jg
test
inc
lret
pushf
sbb
mov
add
imul
push
stos
ficoms
xchg
xchg
test
data16
dec
dec
mov
lock
sti
mov
popf
jl
lods
sub
pop
filds
push
movsb
or
mov
mov
cmpsl
mov
fstpt
fincstp
sub
add
jns
add
pop
imul
xchg
sti
out
in
add
cmpsb
mov
loop
xchg
push
fildl
inc
and
and
mov
outsb
aad
push
or
xor
mov
xchg
sbb
mov
sbb
cmp
jp
les
movsb
call
in
pop
out
dec
inc
push
dec
in
pusha
cmp
and
sub
mov
mov
movsl
lret
adc
in
xchg
roll
lret
imul
addl
mov
cmp
mov
xchg
pushl
push
push
ljmp
lret
add
ja
xor
adc
pushf
cmp
imull
mov
sbb
dec
cmp
xchg
jle
hlt
pop
stc
mov
lds
in
fistl
jge
lcall
xor
out
jb
pop
jg
pop
subb
repnz
pop
push
fimull
ds
xor
out
or
push
int
inc
sbbb
movsl
mov
jns
loope
adc
cmp
mov
pop
out
mov
rorb
xchg
jp
mov
aaa
pusha
push
call
and
test
lcall
cmp
out
xor
pop
divl
andb
lds
stc
sbb
into
xchg
push
xor
ret
inc
inc
jne
mov
inc
or
roll
les
xlat
inc
cmc
iret
aas
inc
loopne
jo
into
push
dec
sti
xchg
pop
repz
lahf
cmp
js
pop
mov
jp
outsb
nop
jp
dec
adc
aaa
stos
nopl
cld
inc
shrb
notb
leave
sub
ret
lret
repnz
push
clc
incb
xor
loope
call
in
lods
add
or
or
mov
lret
dec
mov
xorb
xor
or
shl
push
and
sti
scas
test
cmpsl
loop
and
fnsave
call
fadds
sub
leave
insb
push
nop
into
push
aam
imul
std
lea
adc
adc
dec
cmpb
push
outsl
ror
mov
inc
lods
stc
and
inc
loope
adc
pop
outsl
xor
mov
push
repnz
scas
mov
lds
push
stc
push
xlat
dec
mov
in
hlt
inc
dec
pusha
xor
mov
arpl
stc
scas
cmp
ja
test
mov
add
lea
daa
pop
mov
filds
in
mov
lods
insb
int
fadds
icebp
ret
into
jle
lods
and
fidivrs
mov
ror
mov
ret
loop
cs
pop
adc
xchg
jns
push
pop
push
xor
mov
divl
scas
shrb
jae
jbe
jl
mov
add
imul
std
sub
stc
out
pop
dec
in
push
sub
loop
mov
or
xor
in
jmp
test
js
xchg
lret
sbb
mulb
loop
clc
popf
or
sti
les
add
add
xchg
cmp
bound
andb
fsubrl
xorl
add
cmp
je
xchg
pop
inc
leave
adc
jge
add
xor
xchg
xor
fadd
mov
je
mov
and
adc
ret
xchg
pop
push
je
sbb
pop
icebp
int
icebp
mov
mov
decb
mov
mov
cmp
lods
push
icebp
xor
mov
inc
mov
scas
jnp
push
add
or
jns
in
stc
ds
inc
lret
popa
push
inc
adc
dec
sbb
es
add
jnp
inc
ret
add
shlb
cld
addl
dec
mov
shll
mov
jmp
and
into
gs
out
das
lahf
push
xor
hlt
lock
cld
xchg
xchg
roll
repz
inc
popa
sub
inc
cmc
or
repnz
arpl
mov
push
pop
insb
cmc
pop
and
cmpsl
pop
sub
dec
or
or
cwtl
cmp
test
setge
adc
mov
test
mov
pop
mov
add
mov
call
lahf
je
popf
xor
js
adc
mov
xchg
sti
fstl
rorl
int3
in
in
mov
or
push
inc
or
in
xchg
and
mov
pushf
out
jl
addr16
sti
add
cltd
xchg
mov
or
repz
pop
popl
xor
es
push
stos
sbb
sbb
add
jg
sbb
lahf
outsl
ret
rolb
mov
jle
les
xor
out
es
mov
push
dec
dec
loop
or
xchg
push
jle
icebp
lcall
aas
jns
mov
insb
lcall
adc
test
jmp
imul
sbb
fldcw
testl
sub
aas
fldcw
ljmp
inc
cwtl
cmp
mov
or
push
inc
popf
popf
xchg
sar
je
cld
sub
jo
stos
mov
jmp
daa
xor
data16
adc
ljmp
lods
pavgb
jg
lods
add
and
mov
jmp
push
mov
andb
push
fiadds
mov
repnz
rorb
mov
xor
outsb
je
into
cmpsl
aas
imul
in
inc
int
enter
mov
cmp
jle
and
imul
daa
out
pop
js
jne
mov
mov
xor
cmp
jb
jmp
mov
dec
add
mov
xchg
pop
dec
mov
clc
jnp
and
jns
js
test
in
hlt
cltd
xchg
dec
in
mov
ret
jl
shrb
cs
aas
mov
ficomps
imul
mov
aas
push
pop
jp
sub
stc
xchg
call
lods
jbe
jg
or
lods
pop
lahf
shl
dec
mov
push
cmp
dec
fisttpl
add
test
cmp
pusha
xchg
sub
jae
jecxz
in
and
mov
divl
lods
ret
or
insl
aaa
lahf
push
mov
sbbl
icebp
xchg
loope
in
cmp
mov
aaa
pop
testl
pop
stc
adc
push
mov
adc
lea
add
jns
inc
sbb
lret
int
sub
mov
inc
in
stos
cmpl
fdivp
nop
inc
lcall
js
fnsave
mov
mov
pop
or
lods
out
push
xor
into
or
pop
add
rcr
imul
mov
push
inc
cltd
pusha
into
mov
inc
xchg
lds
xor
int
push
int3
iret
fstl
adc
push
dec
and
outsl
addl
jecxz
xor
jnp
repz
or
cwtl
dec
mov
ljmp
lahf
mov
out
push
fnstcw
sub
push
fsub
subb
mov
jo
fidivl
mov
js
adc
xor
mov
jl
lahf
dec
pop
pop
les
pop
outsb
sbb
imul
daa
mov
cmpsb
fists
adc
push
adc
lods
cli
jno
jb
jp
push
and
cmpl
lret
loope
xchg
adc
sbbb
dec
xchg
sbb
fildl
mov
loop
mov
cs
add
and
push
jge
cwtl
dec
mov
imul
xor
fistps
or
popf
mov
dec
xchg
nop
fs
mov
imul
push
jmp
cmp
aam
cld
mov
cwtl
mov
into
push
rcrb
and
mov
push
enter
jne
mov
push
int3
lock
cmp
cmpsb
mov
xchg
pop
pop
jbe
cmpb
xchg
xchg
xchg
dec
mov
pop
inc
mov
sar
ret
mov
push
sub
pop
pop
lods
xlat
cmp
icebp
sub
aaa
push
out
push
movsb
insl
aad
notb
sbb
mov
pop
or
in
cmp
arpl
push
dec
int3
hlt
leave
push
xor
int3
mov
jns
ja
cmp
adc
pushl
pop
mov
adc
movsl
xchg
fsubs
sub
cld
adcl
lcall
adc
inc
mov
pusha
out
fwait
clc
mov
repnz
cld
mov
add
ljmp
or
inc
scas
mov
pop
mov
in
daa
cmc
scas
xchg
pop
mov
fwait
lcall
lcall
and
lds
mov
mov
mov
xor
mov
aad
mov
loope
push
ss
das
jns
adc
mov
and
lsl
adc
in
mov
out
add
pop
imul
mov
pusha
ss
add
mov
repnz
ret
daa
repnz
loop
mov
fmull
roll
in
stc
out
add
sub
xchg
hlt
or
orb
or
cli
and
mov
sub
insb
repz
jp
push
arpl
shr
sub
inc
adc
ret
mov
add
ds
in
pop
mov
ret
xchg
xchg
sbb
jb
shrl
mov
hlt
or
ss
iret
jle
adc
enter
mov
cmc
cmp
lock
ret
sub
mov
cld
and
fcoms
cmp
je
mov
jnp
lods
jae
sub
lahf
xlat
push
xchg
dec
pop
insl
in
jecxz
stos
pop
outsl
dec
xor
lret
jae
out
test
scas
addl
loop
aam
cmpsb
pop
jp
incl
imul
xchg
mov
ljmp
ljmp
les
mov
pop
fwait
mov
xchg
add
out
or
hlt
push
and
and
enter
ja
push
and
jmp
adc
movsl
xor
adc
dec
imul
xor
jno
jmp
cmpsl
int3
adc
cmp
adc
mov
xchg
jmp
mov
aad
dec
inc
out
inc
mov
fwait
leave
popf
and
push
mov
and
aas
sahf
imul
scas
adc
clc
repnz
fildl
je
fs
ret
mov
rolb
jmp
sub
fsub
aam
mov
mov
int3
xchg
in
stc
push
icebp
xor
inc
mov
pusha
mov
in
fwait
hlt
mov
scas
mov
xor
lahf
cmp
mov
aas
cmp
je
or
xor
sub
rorl
enter
std
int3
stc
fldenv
jg
lock
and
nop
xor
jnp
push
dec
aas
inc
pop
jne
in
cmp
and
jg
ret
mov
dec
fmulp
mov
sbb
gs
je
les
in
xchg
lcall
repnz
mov
xor
loopne
pop
ds
cmpsb
std
jg
push
dec
testl
dec
or
call
es
add
bound
add
icebp
sti
add
movsl
dec
jmp
jg
mov
mov
ljmp
icebp
sub
addr16
mov
pop
jo
jg
cmp
mov
movsb
sub
aad
in
xchg
mov
fdivrl
jb
in
sub
in
pop
push
mov
ficoml
and
push
sbb
jb
aam
sbb
addr16
cmp
fwait
jge
and
push
adc
mov
adc
je
jo
mov
pop
dec
cmpsb
jge
ljmp
jmp
inc
jge
cmc
cmc
or
ja
arpl
xor
packssdw
lcall
loope
mov
push
mov
inc
sbb
add
pop
jb
arpl
sti
mov
repnz
sub
aas
ljmp
cmp
test
and
lret
cmp
je
in
aas
or
int
fld
xlat
mov
xchg
insb
addb
mov
jnp
shlb
pop
mov
mov
cmp
cmc
xchg
add
jecxz
xchg
pop
jbe
push
into
fstpl
mov
cmp
mov
fucomp
add
xchg
aad
fwait
insl
mov
loop
xorl
scas
sbbl
cmc
sbb
das
movsb
je
dec
adc
int
test
aaa
jb
loopne
xchg
cltd
jl
mov
test
loopne
das
push
jbe
shll
xchg
dec
aas
sti
fistl
adc
mov
dec
negl
inc
or
push
movsb
inc
or
lods
inc
push
pop
test
and
je
push
push
clc
xchg
popfw
fwait
dec
in
cs
xor
in
es
or
cmp
cmp
imul
outsb
push
js
xor
xchg
ljmp
js
add
mov
push
xor
clc
pop
movntps
jno
dec
mov
insl
mov
xor
sarl
inc
push
lds
mov
adc
mov
int3
aaa
sub
insb
repnz
or
jmp
orb
cltd
mov
mov
pop
in
aas
scas
jmp
and
cmpl
outsb
out
dec
test
cwtl
cmpsb
imul
sub
sub
lods
sub
jbe
lret
shll
fists
push
loope
cmpsl
or
scas
pop
fsubl
or
jmp
mov
lods
dec
iret
pushf
fbstp
aam
push
ljmp
mov
add
fcoms
scas
stos
push
xchg
cmp
add
lea
hlt
cwtl
mov
or
pop
and
xor
test
gs
xchg
xor
stc
scas
xor
sub
dec
mulb
xor
jnp
cmp
push
pop
shll
and
jge
int
jnp
icebp
lret
movsb
mov
rcll
inc
xor
xchg
stos
cli
xchg
flds
jnp
flds
in
fisttps
sub
jl
mov
orb
mov
int
cmp
jne
fimull
jmp
mov
int3
mov
push
scas
mov
decl
stos
push
lods
lods
shl
mov
push
sbb
xchg
jecxz
sbb
loop
and
pop
pop
mov
rcll
call
xchg
adc
and
sbb
and
test
int
jae
int3
xchg
mov
jbe
fstl
scas
mov
imul
cmp
mov
fisubrl
leave
fistpll
jnp
incl
pop
lds
mov
rcrb
mov
fsubr
add
adc
mov
sti
xchg
xor
or
repz
scas
pusha
xor
sbb
popa
gs
or
mov
popf
dec
push
arpl
dec
lea
mov
inc
mov
sti
and
imul
pop
push
mov
test
cmpsl
rcll
mov
jl
dec
pop
jge
mov
iret
or
adc
sbb
adcl
cmp
cwtl
jmp
testl
inc
and
add
movsb
test
or
arpl
add
jbe
ljmp
cmpsb
dec
out
hlt
xor
cmpsb
pop
es
xor
loope
stos
inc
or
in
das
xchg
outsb
clc
jmp
xor
cli
xchg
mov
std
xchg
or
jecxz
call
test
lods
jp
sbb
and
outsb
or
nop
xchg
adc
or
cli
xorb
aas
sub
out
lods
push
dec
push
insl
dec
sub
jno
and
iret
and
pop
push
mov
gs
lahf
icebp
push
cwtl
lds
lret
jo
mov
bound
push
xchg
in
std
lret
decb
jo
mov
adc
scas
inc
push
lahf
loop
int
ds
dec
rorl
iret
mov
sbb
jo
loope
das
cmpsl
sti
mov
adc
xlat
xor
aam
cmpsl
add
loopne
sub
shl
adc
push
sahf
mov
sbb
xlat
es
mov
pop
nop
repz
imul
cmp
mov
aad
push
xor
shrl
xorb
xchg
sub
add
cmpsb
cmp
inc
stos
loopne
lcall
and
dec
xor
je
imulb
cld
bound
ret
inc
addl
xorl
cld
mov
or
add
or
lahf
ja
push
shll
jb
rorl
ljmp
ss
fwait
mov
xchg
mov
pop
fbstp
fbstp
or
cmpsb
mov
ret
clc
fbstp
fnstsw
dec
cld
cwtl
dec
add
stos
cmpb
cmp
sahf
loope
loopne
outsl
and
fs
inc
test
fdivl
inc
push
inc
into
fimuls
mov
xor
xchg
les
push
push
popf
jecxz
dec
or
hlt
lods
sub
cmpsl
xchg
mov
test
xor
les
inc
aam
cltd
popf
lods
punpckldq
fsubl
adc
push
dec
xchg
mov
mov
jp
adc
pop
xor
adc
adc
clc
in
pop
sub
sbb
jge
popf
pop
and
push
and
int3
and
sub
popa
int
sub
jb
xchg
push
mov
mov
rcrl
call
aaa
ret
int
pop
add
mov
popa
sbb
xor
push
movsb
outsb
push
dec
mov
add
int
loop
aad
pop
arpl
sbb
adc
mov
pop
mov
out
push
int3
in
sarb
insl
fadds
aas
sub
jne
scas
cmp
fisubrs
and
push
pop
xchg
sbb
mov
adc
cmp
cmpsl
ljmp
or
filds
test
xor
push
xchg
popa
dec
xchg
xchg
cld
mov
sbb
xchg
pop
int
sti
mov
inc
pop
sti
mov
aaa
cmp
and
and
jecxz
jmp
movsb
dec
jecxz
sub
and
enter
xor
arpl
popa
xor
je
and
adc
mov
cltd
sbb
rolb
mov
jne
outsb
add
sub
cs
sbb
sub
add
call
lahf
ss
pop
jmp
jnp
sarl
jmp
inc
call
cs
ss
popa
or
mov
nop
mov
push
ror
xchg
sbb
out
mov
cwtl
pop
mov
adc
xor
fldpi
test
icebp
push
mov
out
inc
xchg
lcall
push
mov
loope
push
add
je
fs
pop
lods
sbb
int
ja
cli
subb
nop
repnz
push
or
sub
mov
inc
faddl
rcr
imul
cli
fsubp
lds
mov
pop
out
pop
lea
xlat
test
ret
stos
movl
dec
rcrl
data16
mov
xchg
mov
xchg
cmp
pop
pop
aam
add
cmpsl
cmp
mov
imul
jbe
cwtl
add
jne
test
inc
rcrl
cmc
xor
add
pop
pop
pop
pop
repz
pop
rcrl
loop
adc
mov
jb
and
inc
pop
mov
pushf
fbstp
cmc
sub
test
push
or
das
sbbl
shlb
and
aaa
rolb
in
js
fdivs
adc
inc
subl
sbb
inc
dec
jae
aam
cmpsl
in
mov
es
gs
push
in
lods
fbstp
push
fisttps
or
in
cli
rcll
xchg
stos
mov
aad
addr16
mov
xor
out
fnclex
cli
adc
bound
fs
imul
mov
push
xchg
pop
mov
inc
out
std
mov
movsl
lods
lcall
mov
xchg
and
mov
adc
test
mov
mov
mov
dec
ja
idivb
cltd
push
popa
mov
jno
adc
lret
push
pop
shlb
rorb
shlb
jns
or
sub
imul
push
out
je
mov
cs
les
cld
in
mov
pop
add
adc
push
mov
cmp
inc
dec
sub
jmp
cmp
dec
cs
cmpsl
repnz
xor
push
adc
mov
stc
xor
jb
and
cli
push
bound
adc
into
inc
pop
aam
xchg
rolb
lcall
mov
int
pop
jnp
add
or
jecxz
ret
pop
cmp
fildll
cmpsl
mov
cli
push
imul
mov
jl
lret
dec
cmp
jb
insl
sub
pop
cld
adc
scas
insb
in
cli
xchg
aad
sti
mov
dec
mov
mov
shlb
arpl
inc
imul
aaa
insb
xlat
mull
jmp
pop
cmp
lret
ljmp
mov
push
mov
xchg
daa
or
popa
mov
fs
int3
popa
cmpb
lods
js
test
push
jl
lret
mov
loop
mov
scas
stos
adc
in
dec
insl
lcall
setp
je
loope
loopne
push
xor
add
and
cmp
iret
and
lret
into
lret
xchg
shlb
adc
and
pop
dec
hlt
out
faddp
and
fisttpl
imul
in
or
cwtl
xor
xchg
es
loope
jmp
push
pop
xchg
sub
imul
inc
mov
fildll
sub
push
lods
xor
scas
sub
adc
push
xchg
unpckhps
jnp
lret
mov
and
sbb
xlat
jbe
jge
xor
xchg
jne
jnp
mov
aaa
icebp
nop
jg
mov
in
xchg
cwtl
mov
jle
icebp
inc
pop
lahf
cli
push
outsb
push
sbb
or
inc
dec
inc
pop
dec
mov
lcall
cmc
push
lods
test
push
pop
cmpsb
mov
pop
pop
ds
js
jns
sub
ss
ret
jnp
add
jae
pop
jg
popf
sahf
pop
lret
mov
les
xchg
out
sbb
and
in
pusha
lods
dec
fistpll
flds
mov
scas
int
fldt
test
mov
aad
or
fstps
mov
cmp
sub
xor
mov
xchg
jg
call
or
shlb
push
inc
lret
inc
pop
sub
adc
sbb
sti
adcb
mov
or
inc
lret
insl
mov
or
hlt
dec
xor
popl
cmpb
mov
cmpsl
insl
lea
or
adc
fdivp
dec
mov
and
inc
cmp
and
add
sbb
loop
je
daa
insb
adc
cltd
les
push
lock
std
dec
sbb
in
ss
mov
jg
imul
cltd
add
lret
imul
arpl
cltd
lret
std
xchg
test
lahf
lahf
push
iret
arpl
pushf
mov
mov
mov
insb
rcrb
sub
sbb
pusha
add
xor
cmp
jno
fisttpll
movsl
push
cld
fwait
bound
ja
ja
dec
mov
mov
mov
bound
arpl
scas
add
movsb
stos
or
pop
jns
jne
cmpsl
shll
outsb
stc
outsl
in
enter
adc
xor
mov
inc
test
jmp
xchg
loop
inc
jno
neg
icebp
push
adc
cmp
lock
push
outsb
aam
mov
pop
push
xor
sbb
les
in
xchg
and
inc
dec
insb
jns
sarb
or
pusha
int3
aam
es
mov
dec
shl
and
jnp
mov
xor
mov
adc
frstor
int
icebp
ss
push
mov
xor
bnd
orb
mov
dec
cwtl
xlat
push
cmpb
jg
sti
push
lcall
insb
sub
or
jmp
xor
dec
cmp
mov
std
sub
mov
lret
iret
cmpsl
push
pusha
push
inc
dec
sub
sbb
popf
addl
push
push
testb
int3
mov
inc
dec
add
inc
or
jo
jp
mov
or
inc
mov
mov
cmpsb
mov
decl
pop
ficomps
inc
or
add
movsb
pop
arpl
iret
cmp
arpl
sub
in
fcoms
pusha
xchg
das
gs
out
data16
push
negb
stos
lret
lret
sbb
mov
xor
ficomps
pop
mov
jo
lds
jecxz
enter
imul
mov
leave
int3
xor
ret
imull
fbstp
add
cli
push
dec
cmc
in
fdivs
mov
add
xor
mov
outsb
clc
jge
push
cmp
jmp
mov
xor
in
and
jno
clc
push
push
add
sub
add
or
jg
fnstenv
inc
fwait
lea
stc
lods
mov
repz
nop
pop
imul
loop
mov
xchg
test
mov
scas
cmc
dec
ds
into
sub
testl
jns
xor
mov
pop
push
mov
in
pop
inc
add
mov
stc
lea
dec
call
cs
lods
and
iret
outsb
je
enter
loope
cmp
xchg
push
push
jns
sbb
shrb
sahf
xchg
xor
fidivl
insb
xlat
gs
pop
adc
dec
jp
push
arpl
clc
sbb
add
ret
inc
movsb
dec
ds
pusha
lcall
pop
les
or
push
cmp
js
cmpsl
popa
adc
popf
xchg
aaa
xchg
mov
adc
xor
stos
jge
cmp
add
test
imul
sub
bound
sub
jmp
ds
out
adc
cmp
fcoms
test
fsubs
icebp
mov
iret
cmp
stos
jle
hlt
or
imul
movsl
cli
faddl
mov
inc
imul
movsb
xlat
push
out
pop
sub
lods
ljmp
mov
insl
cmpsb
dec
push
cld
gs
xchg
and
add
dec
daa
dec
mov
push
xor
push
rclb
mov
lret
je
scas
dec
mov
ss
xlat
stos
adc
std
repz
pusha
push
sbbb
ja
mov
aaa
scas
imul
subb
sbb
mov
pop
xor
jae
pop
mov
pop
mov
scas
inc
jecxz
inc
mov
or
out
push
mov
xor
add
pop
cmp
mov
mov
jp
fisttpl
and
push
sbb
add
in
sbb
inc
clc
cmpsl
inc
mov
fisubl
mov
aaa
adc
push
sahf
xor
subb
out
sarl
test
add
outsl
fstpt
xchg
xchg
sbb
push
sti
mov
rep
out
je
jb
sbbl
jmp
xchg
test
test
pop
mov
sub
in
loope
jno
ds
jne
in
or
xchg
nop
scas
and
push
cli
sub
cmp
mov
add
push
adc
js
bound
dec
xchg
lock
adc
push
lods
push
clc
pop
sub
in
jmp
xchg
cmp
sbb
lahf
rcl
mov
jb
in
add
inc
pop
mov
xor
dec
xchg
mov
lea
push
pop
test
into
and
rcr
mov
addr16
mov
arpl
sti
xchg
aas
fstl
nop
adc
sub
inc
out
stos
mov
sbb
jge
negl
cmp
insb
std
scas
test
pop
fiadds
sub
lock
test
call
add
and
arpl
call
popa
aas
mov
push
insb
pop
mov
imulb
and
and
mov
iret
xor
jmp
xchg
xchg
push
add
setge
xchg
mov
sbb
dec
fwait
int
rcl
call
jnp
lock
int
inc
aad
mov
xchg
das
inc
dec
insl
and
in
lret
stos
fidivrs
lret
aaa
gs
dec
xlat
lock
sbb
inc
insl
xchg
and
hlt
mov
cmpsl
or
aam
mov
cmc
jae
out
adc
lret
sti
cmpb
cld
mov
fadd
jecxz
push
pushf
jae
lea
mov
adc
mov
fdivrs
ljmp
lock
push
out
mov
ficoml
fcoml
adc
je
into
jno
inc
jecxz
mov
dec
mov
xor
dec
adc
lahf
stc
in
ret
xchg
pushf
add
push
xor
mov
cmp
arpl
popa
addl
stc
push
rclb
and
repnz
mov
movl
pop
mov
xor
std
xchg
rorl
push
mov
mov
pop
inc
adc
mov
xchg
sbb
push
test
sub
push
iret
int
and
add
ja
sbb
xor
jge
jns
jge
mov
adc
mov
in
jae
aas
mov
pop
popa
sub
loop
cs
lea
inc
int
pop
lret
ljmp
dec
fs
popa
out
inc
mov
rcrb
stos
dec
cmc
fstpt
notl
cmp
adc
or
inc
stos
sbb
loope
mov
pop
test
xlat
mov
out
xchg
sbb
repz
or
pushf
pop
xor
dec
or
mov
scas
sbb
mov
push
into
inc
lock
lock
mov
outsb
imul
or
inc
jo
sbb
inc
clc
cmpsl
loopne
popa
mov
jne
and
xor
sub
mov
or
or
xchg
pop
fcmove
and
inc
sub
test
sbb
pop
dec
sub
or
mov
mov
xlat
nop
and
push
stos
and
dec
aam
inc
shll
and
mov
pop
cs
aaa
sbb
mov
jp
lea
int
les
sti
lods
dec
xchg
stos
pushf
cmp
mov
add
into
adc
daa
out
pop
pop
mov
cmp
outsl
out
sbb
pop
jbe
or
mov
and
or
or
mov
jb
sbb
sbb
mov
jmp
insl
call
ds
loopne
bnd
mov
aaa
sbb
mov
inc
adc
imul
push
das
in
jo
mov
dec
adcl
rcrl
add
jl
pusha
cli
inc
fbld
adc
adc
sub
pop
push
push
sti
push
loopne
push
int
stos
inc
cli
add
jae
stos
dec
xchg
aas
cmp
xchg
jnp
loop
mov
adc
mov
jmp
adc
xchg
pop
cmp
sub
cmp
push
aas
xorl
jp
test
inc
outsl
adc
imul
loope
aam
fst
pop
push
shrl
dec
mov
std
lea
sbb
mov
inc
dec
inc
xor
jmp
mov
cmp
pop
pop
ljmp
pop
shrb
add
mov
xor
ja
xchg
or
and
inc
jmp
add
daa
shll
mov
mov
test
nop
test
mov
lods
jge
imul
lds
adc
iret
lret
mov
daa
inc
data16
mov
int3
sahf
adc
xor
movsl
mov
dec
out
jb
js
lahf
push
pop
in
ficompl
stc
lret
add
mov
imul
ret
rorl
xchg
mov
or
dec
mov
xchg
fistl
lods
mov
jp
or
ror
lock
dec
mov
sub
test
enter
pop
jae
mov
and
sbb
pop
xor
out
jnp
repz
jne
les
js
rep
mov
decb
loop
addl
hlt
cmc
mov
ret
mulb
movsb
adc
outsl
rcrb
aad
aad
and
ljmp
push
movb
and
fnstcw
sub
test
fidivl
jge
in
cmp
cmp
dec
xlat
pop
iret
xor
inc
xor
popa
mov
ljmp
popa
xor
in
insb
ret
icebp
cmpsl
jns
cmpsb
mov
and
push
mov
mov
mov
jmp
mov
cs
scas
mov
loope
or
sub
add
xorb
or
xlat
jl
adc
xor
test
jmp
sbbb
and
addr16
andl
incb
stc
jg
dec
pop
mov
fsubl
dec
adcl
aaa
or
mov
mov
pop
and
jns
sub
adc
addr16
mov
dec
xor
lds
mov
out
cmpsb
cwtl
gs
jne
jle
out
mov
pusha
mov
pushf
lret
add
ret
incl
movsl
and
pop
add
aam
les
out
repnz
cmp
and
mov
mov
decb
sbb
pop
frstor
add
repz
inc
mov
sbb
push
xlat
sbbl
ljmp
adcl
mov
or
push
xchg
mov
cmp
push
jecxz
or
in
dec
mov
lcall
int
lock
dec
scas
mov
mov
test
mov
or
gs
add
sub
in
pop
jno
in
movsb
daa
cwtl
inc
mov
dec
sbb
dec
ror
mov
scas
adc
sbbb
mov
cmc
sbbl
les
mov
and
mov
dec
dec
div
mov
xchg
lret
out
movsb
ret
ljmp
xchg
and
mov
mov
fildl
jb
lea
in
test
aas
test
test
lret
xorb
ret
cmp
shlw
testb
inc
fnsave
lods
and
aad
pop
push
andb
mov
shll
sbb
call
repz
ficoms
pusha
jle
popf
lock
sbb
fadd
incb
add
adc
out
cmp
sub
add
cs
inc
lock
fisttpl
imul
sbb
imul
enter
and
inc
sub
in
xchg
loopne
jne
iret
mov
bound
jnp
jno
or
xchg
cltd
cmp
mov
xrelease
in
aam
arpl
mov
pop
into
jae
or
and
iret
or
in
nopl
outsl
push
into
jl
insl
dec
dec
je
loop
mov
aam
fwait
out
sub
inc
mov
inc
xlat
push
dec
sbb
loope
jnp
adc
mov
test
xor
out
frstor
fld
pop
pop
loopne
cmpb
inc
cmp
mov
int3
out
test
cmp
cmp
adc
add
adc
xlat
aaa
jbe
sbb
inc
jecxz
testb
mov
sbb
mov
sub
lea
lds
xorb
ja
add
rcll
repnz
inc
cmp
fs
leave
jp
sub
sahf
pop
in
xorl
loope
jge
xor
pushf
lea
cmp
pusha
dec
cmpsl
ret
leave
movb
dec
imul
test
and
inc
aas
gs
outsl
into
lret
fmull
sti
sahf
pop
jmp
ficomps
neg
iret
fisubs
dec
dec
lock
cmp
add
out
jbe
sahf
repz
jmp
jnp
mov
lods
loope
mov
jge
xor
jne
cmpsl
sub
xchg
xor
vmovddup
sbb
inc
pusha
in
loopne
cmp
dec
sub
xchg
lods
xor
mov
cs
push
js
movsb
cmp
mov
mov
jbe
jmp
outsl
imul
push
pop
pop
es
repnz
mul
loop
notb
or
cmpsb
add
inc
xchg
int
xchg
adc
adc
push
mov
data16
inc
ja
xor
xchg
mov
push
pop
and
jbe
lcall
xchg
notb
call
mov
int3
or
mov
roll
in
stos
xlat
insl
sahf
push
es
ss
int
dec
and
sbb
dec
jp
sti
jnp
mov
sub
sbb
testl
sbb
push
push
push
fmulp
pop
inc
ss
sub
pop
fists
dec
add
cs
add
sbb
adc
mov
stos
push
ja
sub
add
add
or
xor
addr16
mov
call
negb
aam
push
bound
in
les
xchg
mov
or
imul
inc
fisubrs
movsb
outsl
gs
imull
push
adc
dec
jbe
pop
or
jo
test
int3
mov
xchg
inc
sbbl
mov
aas
pop
or
sub
mov
loop
shlb
ror
sbb
pushf
jecxz
mov
inc
pop
hlt
adc
ljmp
mov
mov
ret
idivl
aad
ret
jns
sub
out
cmp
push
xor
fists
jbe
into
lods
jbe,pn
aad
std
mov
xchg
xchg
push
sti
std
mov
push
xchg
movsb
fsubp
and
adc
jbe
jmp
adcl
arpl
xchg
pop
sub
jecxz
mov
es
push
xchg
popa
mov
dec
repnz
aas
jmp
aad
cmpsb
and
fistps
dec
out
mov
lds
mov
xor
push
movsl
leave
daa
addr16
pop
test
cs
movsl
xchg
push
imul
mov
adcb
pop
push
push
cmp
inc
pushf
and
inc
pop
and
inc
fcomi
rorl
and
decb
adc
cmp
dec
mov
jg
adc
lcall
pop
sbb
push
cld
loopne
addr16
xor
outsb
loopne
ret
daa
stos
cmp
outsb
scas
xchg
dec
cmc
mov
lods
cwtl
inc
sbb
ljmp
mov
inc
add
mov
jmp
aas
pop
into
and
mov
or
push
or
mov
push
int3
dec
ja
add
or
pop
cmp
xor
add
jns
cmpsl
out
mov
rorl
inc
jb
push
mov
rolb
cld
push
movsb
hlt
pop
out
pop
loop
xor
jl
pop
cmp
sub
xrelease
pop
mov
sar
rcrb
inc
or
in
stos
inc
pusha
ret
jnp
in
xor
loopne
and
loop
movsb
aas
leave
aam
xchg
and
ficoml
push
xchg
sub
leave
mov
xchg
inc
das
push
xor
push
ss
gs
cmp
cli
add
movsb
aad
lods
loopne
testl
cwtl
mov
push
sub
and
or
jne
pop
xchg
push
fs
mov
das
jmp
xchg
add
lcall
and
enter
jmp
mov
frstpm(287
cmp
out
and
stc
sbb
loopne
outsl
adc
push
int3
add
jp
xor
inc
dec
cmp
cmpsl
and
jecxz
enter
int3
jp
adc
add
lds
std
xorl
cli
jmp
popa
adc
xor
pop
outsb
int
xchg
or
cmp
test
sbb
dec
jno
fcomi
mov
rol
data16
pop
lret
xchg
hlt
mov
scas
add
dec
or
xchg
das
pop
addl
add
inc
andb
in
iret
dec
cs
sbb
sbb
popa
mov
xchg
push
aam
loopne
xor
push
push
sbb
je
ss
jns
repz
test
shrb
jne
notb
outsb
push
inc
sbb
xchg
jmp
mov
jge
add
sbb
repnz
sub
jb
sbb
dec
dec
cmpsl
insl
sub
xchg
adc
add
lds
add
rcll
adc
adc
jmp
movhps
pop
mov
testl
int3
jb
push
fisttpl
sub
adc
and
mov
lods
push
dec
cmpb
mov
sti
inc
int3
aad
int3
fxam
addr16
das
cwtl
das
pop
int3
xchg
pop
je
ret
pop
sti
pop
subl
dec
pop
in
and
shlb
push
in
loope
popa
add
or
add
jge
xchg
add
inc
pop
fisubl
mov
call
xchg
adc
push
dec
push
xchg
mov
xor
js
loope
test
jp
cmp
xor
mov
ds
inc
push
jmp
inc
lea
mov
jae
lds
add
mov
sti
sbb
mov
scas
mov
and
insb
roll
adcl
test
mov
xchg
std
add
fstl
mov
int3
push
sbb
mov
push
pop
pop
roll
and
xchg
test
out
data16
inc
pop
jbe
push
hlt
jp
add
aas
pop
pushf
pop
pop
nop
mov
push
decl
das
ljmp
xchg
add
nop
ret
jge
add
test
std
sub
jae
pusha
cwtl
scas
cmp
pop
mov
jns
aas
orb
mov
sti
dec
mov
movsl
dec
mov
mov
xor
mov
leave
lcall
pushf
xchg
mov
push
push
daa
mov
leave
sub
data16
cwtl
inc
pop
in
les
insl
addl
out
mov
push
mov
pop
cmp
cmp
das
or
aam
stos
ljmp
in
fildl
mov
ficoms
lock
std
out
fdivs
repz
lahf
movsl
push
sti
xor
fsts
data16
out
dec
int3
push
adc
cs
jo
lcall
mov
rclb
mov
icebp
xor
fsubrs
out
arpl
ss
cmp
sub
push
or
mov
push
dec
xor
popa
add
add
pushf
ret
push
lea
jge
lcall
cld
jo
imul
mov
push
push
out
icebp
stos
add
sub
insl
addr16
jecxz
cltd
imul
jae
sbb
ja
add
jns
jecxz
adc
mov
inc
int3
icebp
daa
lods
and
dec
adc
sbb
inc
mov
sarb
imul
adc
jmp
sbb
push
repnz
dec
bound
stos
daa
cmp
ret
sbb
jge
enter
aas
push
lds
in
sub
inc
jmp
aas
jecxz
arpl
adc
mov
sbb
cmp
gs
dec
pop
mov
mov
mov
js
fsubrl
mov
outsl
stos
stos
sbb
pop
aas
xor
addr16
iret
fwait
ljmp
out
mov
scas
xor
inc
mov
or
loopne
add
pushf
jge
push
and
push
sub
leave
cmp
or
xor
inc
imul
arpl
push
xor
jp
movsb
dec
jp
inc
rorl
bound
adc
push
xchg
fldt
out
xchg
xchg
outsl
mov
stc
int3
cmpb
mov
sbb
mov
cwtl
je
pop
adc
mov
xchg
jb
mov
addl
aaa
leave
addr16
int3
jns
sub
nop
and
rcrb
jg
insb
cmp
test
xor
add
push
lcall
fidivl
test
test
loopne
cld
int
add
sbb
push
mov
or
sub
xchg
push
bnd
pushf
test
lods
cmp
aas
pop
add
or
in
pop
xchg
sbb
sub
inc
fwait
jg
adc
mov
sub
repnz
sahf
push
jge
sub
subb
lock
loope
das
fisubl
push
cmpsb
mov
loope
into
imul
adc
sub
stos
inc
insl
ret
jg
lret
and
mov
pop
or
push
and
dec
out
ja
rcrb
in
pop
push
inc
push
jl
xor
int3
xor
stos
cld
lock
loop
or
imul
jecxz
out
daa
xchg
clc
mov
ret
in
jne
ficoms
js
xchg
idivl
pop
push
jecxz
and
enter
loope
mov
pop
mov
mov
imul
xchg
ljmp
movsb
mov
shll
mov
bound
push
lahf
sbb
jns
sahf
dec
and
add
lcall
mov
pop
ret
mov
pop
jmp
mov
jbe
mov
xor
pop
sbb
out
push
data16
int3
jnp
std
push
rcpps
lock
pop
loopne
cmpsl
pop
cwtl
add
or
stos
jmp
call
inc
mov
icebp
dec
jmp
adc
push
in
add
ss
mov
xchg
inc
and
insb
shll
xchg
js
cmp
aas
sarl
pop
call
pop
lods
push
cmc
nop
sub
sti
fidivl
dec
xor
jb
sahf
not
push
fildl
dec
or
movsb
pop
adc
xchg
dec
mov
nop
lret
xchg
and
inc
cmp
divl
jbe
push
das
pushf
pop
cwtl
pop
and
jae
cmp
mov
pop
stc
cld
scas
stos
adc
pop
jns
sbb
mov
std
adc
or
pop
or
lret
jo
mov
in
scas
mov
test
addb
jne
cmp
pusha
hlt
fidivl
hlt
or
cmp
fiadds
xor
shld
aad
mov
jg
and
push
icebp
out
mov
pop
sub
rcrl
add
adc
fs
sub
pop
or
cmp
fldcw
lcall
push
mov
and
lods
push
push
aas
sbb
movsb
cld
or
fcmovb
and
insl
ret
sub
xchg
rorl
push
jle
les
jg
lods
push
jecxz
stos
les
adc
sbb
or
loop
popf
les
inc
sbb
fwait
add
push
enter
pop
mov
loope
mov
xchg
cmp
mov
cli
pop
xchg
push
mov
imul
xchg
pop
pushfw
mov
rorl
and
and
sahf
push
push
push
jmp
inc
andb
icebp
enter
jg
enter
adc
add
filds
push
movsl
fdivr
lea
mov
imull
pop
jle
std
mov
cmc
sahf
jge
dec
or
or
imul
sub
int3
or
jo
je
movsl
ror
insb
sub
cmp
mov
dec
xchg
enter
sbb
data16
jb
gs
sbb
repnz
inc
rcll
xorl
pop
mov
mov
add
xor
out
cmpsl
shll
imul
jg
faddl
or
std
in
pop
add
std
add
cwtl
mov
ret
inc
mov
push
add
adc
sub
cli
xchg
add
mov
subb
lock
or
dec
xor
push
pop
outsb
scas
jg
daa
lahf
push
shlb
fucomi
scas
add
xor
jl
mov
sbb
or
jae
mov
jb
cmp
sbb
add
popa
gs
stc
loope
in
xchg
xor
in
fsts
ficomps
pushf
push
adc
and
dec
aaa
xchg
fwait
in
mov
cld
sub
mov
imul
shll
mov
cmp
loope
mov
sub
mov
dec
cs
and
fiaddl
cmp
push
movb
fwait
push
dec
pushf
mov
stos
and
push
lods
test
pop
das
xor
fldcw
mov
push
adc
in
dec
bound
lods
jge
les
pop
push
mov
pushl
cmpsb
rep
jo
adc
lea
movsb
mov
sarb
cwtl
or
pop
stos
mov
int
aas
xor
xor
pop
sbb
mov
cs
jecxz
push
ficomps
notb
push
cmp
std
sahf
inc
inc
push
cmp
cmc
leave
push
xchg
push
in
shll
loop
sbb
ja
imul
sahf
mov
jg
adc
loope
out
rep
xor
mov
cltd
mov
arpl
sbb
movsl
dec
shlb
fs
jecxz
mov
sbbb
xor
pop
subb
jmp
adc
xor
aaa
add
sbb
fdivrs
cmp
iret
and
movsb
std
mov
dec
lock
inc
mov
in
dec
popa
mov
jp
xor
lret
inc
jmp
sub
jl
fnstcw
xor
or
pop
or
in
shrl
fmuls
pop
sbb
aad
pop
dec
std
or
push
lcall
test
dec
dec
out
pop
add
stos
xor
inc
inc
mov
nop
inc
arpl
fldcw
insb
imul
sub
rcrb
repnz
sub
adc
push
fdivl
xor
inc
lret
fmull
cwtl
xchg
mov
push
inc
pop
pop
adc
cmp
notb
inc
xchg
orl
add
mov
push
incl
jno
dec
sbb
pop
add
into
cli
addl
out
jmp
xlat
gs
push
mov
jne
mov
filds
and
mov
push
xchg
psllw
clc
int
inc
jle
dec
add
xor
scas
sub
and
cmc
add
cmc
adc
gs
or
pop
cmc
sbb
hlt
movsl
imul
out
cmp
lods
outsb
jle
repz
mov
adc
push
adc
push
ret
or
je
jae
inc
fsts
mov
cwtl
jb
mov
sysexit
xor
mov
push
in
lock
cmpsb
aam
jp
jge
cmp
imul
mov
loop
pop
cmpsl
add
mov
int
push
add
lds
or
dec
idivb
jmp
push
lods
push
cmp
push
hlt
test
sahf
data16
mov
add
clc
cmp
dec
scas
push
test
adc
outsl
jo
adc
pop
fwait
cld
enter
mov
lods
fistpl
mov
aam
mov
jne
jno
fldenv
inc
out
andl
repnz
or
or
sub
pop
push
sbb
subl
nop
pop
mov
push
adc
int
pusha
and
sti
sbb
add
scas
cli
cmpsl
mov
bound
fadd
das
ljmp
pusha
or
fimuls
jae
mov
mov
cwtl
xchg
cmp
mov
mov
sub
push
mov
and
sub
adc
mov
hlt
inc
das
jg
mov
adc
ret
rorl
fs
test
and
push
mov
mov
mov
pushw
sub
cli
jo
pop
sub
jae
idivb
cmpsb
pop
shrb
insl
jo
pop
aas
std
lea
hlt
inc
pop
pop
adc
dec
or
sarb
jecxz
pop
lods
dec
xlat
xchg
out
xor
mov
sahf
mov
pop
jg
insb
stos
data16
and
cmp
dec
popa
mov
lods
lock
je
mov
mov
jo
pusha
jecxz
pop
pop
mov
repz
arpl
scas
dec
add
xor
and
cmpsl
mov
push
fdivl
push
cld
movsl
jae
push
nop
stos
jno
mov
rorb
mov
jl
fcmovnu
nop
ret
jecxz
stos
mov
aas
shll
cmp
add
pop
out
jb
inc
aas
xchg
je
dec
stos
and
jl
pop
jmp
jecxz
aam
adc
mov
add
stc
adc
sub
add
pop
fcompl
xor
adc
testl
push
call
and
sbb
idivl
xorb
fistpl
sbb
xchg
loope
sbb
test
mov
dec
test
cmp
mov
mov
push
movsb
sub
jne
mov
push
mov
mov
sbb
sbb
mov
dec
in
outsl
dec
inc
movsl
adc
inc
dec
nop
frstor
dec
pusha
xor
adcl
jnp
pop
test
jl
in
xor
movsb
rcl
in
dec
inc
gs
pop
cs
inc
or
fbstp
rolb
mov
mov
pop
push
jb
xchg
repnz
pop
and
ret
inc
and
add
orl
xchg
scas
hlt
les
cmp
jns
insl
mov
adc
mov
push
test
nop
or
sbb
sahf
cmpsl
or
enter
ds
hlt
stos
add
xchg
jo
or
fnstsw
xor
arpl
sub
mulb
sbb
ret
and
xchg
clc
add
inc
cmp
lods
xchg
gs
aad
pop
push
jbe
sbb
add
pop
mov
ret
in
out
xor
repnz
outsl
into
sub
into
gs
rcrl
enter
loopne
das
adc
mov
cmc
dec
or
or
mov
or
adc
pop
call
xor
lods
adc
cmp
mov
pop
push
rorb
jmp
in
xor
pop
mov
or
popl
push
das
and
out
pusha
inc
ja
ss
dec
ss
lds
sbb
dec
pop
das
inc
push
gs
sub
mov
and
dec
out
fwait
xor
repz
jo
xlat
xchg
roll
push
mov
imul
insb
cmp
and
cmpb
mov
or
in
jbe
xor
jecxz
xor
jae
test
outsl
xchg
mov
mov
or
pop
test
or
cmpsl
sbb
jg
sbb
jne
inc
mov
adc
jo
or
cli
movsb
inc
sahf
fwait
mov
sub
outsb
jo
cmpsb
dec
sub
jg
mov
mov
clc
mov
or
inc
or
inc
aam
movsb
adc
lret
xor
push
sub
lock
jg
push
xchg
adc
ret
pop
pop
mov
mov
xchg
push
and
movsl
addr16
jmp
jg
inc
dec
xor
cmp
movsb
addr16
xchg
cld
push
testl
xor
imul
and
add
or
push
add
insl
outsl
xchg
pop
sarl
mov
adc
hlt
jo
pop
jae
xchg
jb
inc
pop
popa
call
cmp
gs
shl
push
pop
mull
repz
popa
mov
sti
gs
mov
lds
pop
movsl
lods
dec
cmpsb
jl
in
lsl
xchg
adc
jl
push
in
test
pushw
push
cli
add
roll
and
cmp
fcmovb
loopne
or
jecxz
insl
mov
mov
push
sbb
lods
cmp
sub
add
mov
xchg
stc
mov
push
lods
mov
js
mov
pop
lock
or
jl
inc
jg
mov
aas
inc
lcall
pop
mov
sarl
dec
pop
sbb
or
rclb
xlat
adcl
rolb
mov
sbb
dec
mov
and
loopne
fidivs
adc
sub
mov
jne
lret
scas
dec
mov
mov
or
aaa
sbb
mov
lret
mov
push
cld
sahf
int
addr16
or
mov
in
inc
aam
cwtl
ss
cli
pop
adc
dec
and
paddusb
sub
sbb
mov
sbb
sub
stos
dec
fbstp
ss
adc
or
mov
dec
pop
push
movsb
mov
mov
das
dec
ja
loopne
xor
pop
xorb
lods
ds
add
mov
sbbl
push
jmp
mov
pop
jb
aaa
sbb
inc
mulb
jne
popl
pop
xor
mov
inc
pop
sbb
mov
push
xorl
cltd
xor
repz
cmp
clc
push
js
test
cld
mov
jl
popf
aam
scas
cmp
in
fwait
adc
lret
xor
or
dec
in
or
mov
sbb
dec
jg
pushf
sbb
scas
pushw
sbb
arpl
mov
into
inc
or
loop
repnz
sahf
sbb
xor
inc
cmp
or
insl
mov
test
hlt
pop
out
sub
mov
dec
mov
movsl
cmc
lock
jbe
lods
jo
push
inc
insb
dec
push
in
jecxz
push
pop
add
in
ja
outsb
jnp
jbe
lods
mov
sbb
sub
sub
movsb
or
shll
icebp
xorl
imul
mov
punpckhdq
pop
je
jecxz
inc
fucomip
add
and
ret
adc
inc
in
addl
nop
movb
pop
dec
filds
jae
jo
add
cmp
xchg
mov
iret
notl
cli
pop
pop
dec
and
or
cmp
dec
dec
mov
push
jno
pop
imul
xlat
aaa
out
or
orl
jb
add
lods
jmp
loope
jno
push
cwtl
jnp
repz
arpl
pop
int
adc
in
mov
repz
lret
notb
fstpl
in
repnz
jae
dec
lret
scas
cmp
dec
jecxz
jecxz
jns
or
es
or
lahf
sbbb
lret
outsl
mov
ja
fnstenv
cmp
cltd
ret
idivl
adc
repz
jbe
mov
inc
ds
mov
or
jecxz
cld
outsb
push
ss
icebp
xorl
inc
add
mov
movl
lods
xchg
inc
sbb
lock
scas
lock
add
mov
push
lret
jbe
jle
adc
push
insb
bound
lds
nop
add
vphaddbq
pop
and
sbb
ds
pop
push
movsl
inc
outsl
mov
pop
cwtl
loop
dec
or
push
pusha
cmp
filds
and
sbb
sub
sti
loope
pop
sub
pop
mov
cs
scas
jne
push
push
shrb
xlat
xor
in
jge
and
ja
cmp
mov
mov
and
jecxz
test
or
inc
mov
outsb
fcmovnu
mov
sub
shll
das
fcoms
jmp
cwtl
push
push
ds
out
shrb
cmp
and
test
pop
push
pusha
dec
test
cmp
jl
sub
stos
mov
out
test
push
lahf
fsubl
les
movsb
out
pop
xchg
stos
js
sbb
cmp
push
and
popa
cmpsb
rcl
cli
addr16
ret
add
sbb
sub
bound
mov
test
dec
lret
push
in
xor
ret
mov
add
xchg
in
adcl
dec
mov
cs
jmp
call
out
lcall
addr16
adc
call
pop
addr16
or
sbb
jl
cmp
hlt
mov
shll
lea
jnp
loop
ret
sti
and
jmp
fwait
andl
flds
cld
push
mov
adc
xchg
cmp
sbb
test
stc
xor
jo
sahf
lcall
jns
aaa
push
mov
insl
adcb
lods
mov
std
push
int
rcrb
sub
jns
dec
test
mov
sub
pop
jl
add
outsb
call
int3
leave
movsb
sahf
mov
pushf
pop
pop
adc
push
jbe
fisttps
push
test
jle
es
testl
xchg
or
inc
test
and
pop
pusha
js
cwtl
shr
xlat
mov
push
adc
push
mov
xchg
mov
pushf
dec
sbb
cli
dec
cwtl
pop
jge
testl
jecxz
scas
fwait
mov
ljmp
xchg
test
in
stos
jmp
add
sbb
and
mov
sub
ror
adc
jl
ret
mov
lods
arpl
subb
std
and
dec
adcl
xchg
mov
xchg
xor
push
movsb
cmp
lret
loope
arpl
sub
jns
add
in
shll
movb
insl
sub
in
das
bound
into
cmpsb
push
mov
dec
adc
call
inc
cmp
sbb
mov
lods
notl
adc
mov
xor
push
hlt
jge
test
jne
imul
cmpb
stc
push
cltd
bnd
cmpsl
loopne
pop
clc
lock
xchg
lock
dec
fnsave
movsb
inc
stos
mov
aas
insl
jle
daa
jle
dec
aas
pop
je
aad
inc
aas
out
in
pop
ret
dec
popa
push
insb
es
jl
adc
and
and
and
cmpsb
popa
dec
fisubs
or
jb
pop
sbb
js
mov
add
mov
loop
sub
fiadds
mov
cld
sbb
push
jg
sub
das
jge
inc
insb
push
dec
xchg
xor
cmp
testl
push
xchg
pop
xchg
int3
xchg
mov
adc
sti
inc
pop
in
inc
xor
adc
pushf
aam
decb
cmp
test
adc
push
loopne
mov
jg
lods
add
or
fcmovbe
loop
bnd
jmp
or
inc
mov
dec
js
and
dec
es
aad
aam
mov
fdivrp
hlt
xor
dec
jge
xchg
mov
jmp
xchg
mov
and
in
mov
xor
cltd
sbb
and
iret
jp
daa
fdivrs
shll
jae
fwait
push
sub
jns
or
push
pop
or
int3
testb
adc
addl
xor
cmp
insb
cli
mov
mov
shll
test
and
sub
xchg
lods
je
sub
jmp
test
pushf
dec
das
dec
jbe
stc
xchg
cli
mov
aaa
inc
add
xchg
stc
xor
mov
add
adc
cmp
in
and
in
xchg
fsts
rorl
xchg
std
rorl
cmp
mov
jbe
ror
push
addr16
iret
inc
adc
inc
dec
fsubrs
scas
mov
bnd
fwait
mov
mov
adcl
jo
and
mov
push
cmp
pop
and
sbb
sbb
outsl
sub
cmpsl
repnz
jb
push
js
xchg
mov
inc
jb
popf
xchg
and
in
test
dec
loope
add
push
out
jns
daa
xchg
test
ss
mov
outsl
ljmp
add
fimull
xor
pushf
repnz
enter
iret
add
and
xlat
push
in
and
adc
mov
and
sub
adc
mov
pop
push
and
inc
loopne
nop
sbb
pop
test
repz
sub
jl
mov
push
or
mov
loope
xchg
outsb
outsl
mov
cmc
in
jbe
sub
call
push
push
stos
in
jbe
icebp
jo
mov
mov
hlt
cmc
sbb
fdiv
mov
aaa
int3
mov
xchg
mov
out
in
lret
nop
insl
sbb
or
push
xchg
rorb
popf
popf
popa
dec
inc
mov
sub
push
rclb
jle
rol
cld
or
cwtl
xor
mov
xchg
decl
push
mov
jp
mov
shrl
pusha
xchg
and
test
je
pop
and
ds
rcrb
adc
jae
jb
lahf
xchg
sbb
sbb
xchg
cli
repnz
loopne
xor
lock
bound
fadds
sbb
mov
ss
loopne
mov
fdivr
iret
int
xor
push
sbb
ljmp
into
jae
enter
inc
call
sahf
test
inc
add
cltd
jp
push
lcall
loopne
out
sbb
ss
movsw
lahf
lahf
jmp
lret
pop
jg
fidivrs
lret
movsl
xor
add
rcl
mov
notl
andl
mov
std
push
dec
adc
and
cmp
jmp
xor
nop
jecxz
sub
rolb
dec
lods
out
scas
arpl
sub
cli
xchg
jp
daa
ljmp
or
xor
jo
lret
ja
jg
outsb
and
cmpsl
add
mov
xor
fwait
inc
xchg
lods
mov
enter
push
mov
push
je
mov
mov
cwtl
push
aad
adcb
dec
push
es
pop
xor
enter
out
xchg
ja
cld
mov
movsb
in
and
ds
fidivl
or
sbb
lea
shll
rclb
mov
test
add
clc
xor
in
and
data16
mov
push
mov
icebp
in
sahf
je
dec
cmp
out
push
inc
es
int
fcmovnb
inc
inc
aam
add
mov
rcrl
out
shll
cltd
inc
mov
push
mov
push
into
jg
test
cmpl
push
and
and
imull
loopne
inc
push
idivb
fnstsw
daa
sub
mov
push
or
adc
rclb
sub
mov
loope
lahf
idivb
mov
dec
push
stos
loope
fisttpl
or
push
ds
imul
arpl
subb
int
popa
vpaddw
add
aam
push
aas
mov
scas
mov
and
jg
xchg
and
cwtl
inc
jae
movsl
int
push
sbb
in
cmpsb
and
ja
pop
dec
inc
cmp
lock
into
out
fisttpl
cmp
scas
mov
mov
add
stos
adc
js
cs
in
dec
mov
outsl
arpl
test
dec
mov
jmp
imul
adc
call
xchg
jg
int3
clc
test
add
xor
cmp
inc
or
arpl
mov
xlat
aad
jge
inc
mov
add
icebp
lret
jl
jo
pop
ds
cmpsl
mov
inc
lahf
add
vpblendd
outsb
stos
mov
push
xor
cmp
es
pop
push
mov
lods
push
mov
dec
scas
fsubrl
pop
insb
loope
rcll
mov
je
sbb
iret
mov
dec
xchg
insl
in
jmp
loop
mov
xor
negb
and
sbb
sub
xchg
mov
jns
mov
dec
out
movsb
loope
nop
repz
ret
xor
js
sbb
ja
mov
int3
push
jb
push
divl
rorb
mov
sub
dec
cmpb
sub
popa
aas
mov
push
jl
mov
bound
movsb
aad
or
mov
jbe
jns
push
mov
push
insb
test
mov
stos
lret
leave
xchg
arpl
cs
or
adc
test
fwait
mov
adc
pop
mov
xchg
pop
sbb
push
push
pop
int3
andb
js
push
mov
pop
mov
inc
mov
insl
stc
xor
push
fnstenv
insb
xor
sbb
mov
cs
dec
jne
pop
out
push
pop
int
push
cwtl
cmpsl
mov
ljmp
aad
or
in
xchg
sbb
sub
cmpsl
pop
cmp
add
adc
push
sub
dec
adc
mov
cs
outsl
es
out
adc
add
mov
test
sarl
add
popf
lret
gs
popa
lods
les
xchg
je
sub
repnz
adc
push
sub
or
shl
das
je
mov
dec
js
jmp
dec
mov
fcompl
outsb
push
mov
mov
shrl
sub
xor
lock
sub
lods
scas
call
call
add
cmp
mov
popa
add
cmc
mov
divb
out
add
loopne
int
sbb
dec
outsl
in
testb
jg
scas
fstpt
inc
inc
aaa
xchg
xor
inc
je
int3
lret
dec
cmp
popf
aam
test
inc
add
repnz
push
in
push
test
cmp
sbb
jg
jbe
push
mov
sbb
xor
or
mov
out
xchg
and
pop
dec
movsl
shrb
mov
cltd
dec
icebp
in
insb
outsb
jbe
xchg
mov
pop
jb
lock
jmp
adc
push
call
daa
cld
mov
les
outsb
outsb
not
adc
or
jae
hlt
addb
popa
mov
jb
add
sub
inc
in
inc
push
rcll
out
fstp
movsl
lcall
sub
scas
add
or
repz
xchg
in
or
lret
fcmovbe
ljmp
fistpl
add
lods
xor
add
sub
push
mov
out
lret
pushf
aas
mov
adc
mov
jl
sub
das
cmp
pop
jge
inc
mov
cwtl
mov
mov
imul
mov
out
add
mov
inc
mov
push
outsb
sub
lods
mov
pusha
jle
cmpsb
dec
push
dec
dec
fwait
inc
xchg
or
inc
add
inc
inc
xchg
fsubrs
cld
xchg
ja
jnp
dec
dec
or
es
mov
jnp
inc
test
cmpw
xchg
xchg
call
pop
adc
addr16
das
or
lods
and
add
jmp
into
sahf
in
push
mov
xor
dec
or
fmull
out
lahf
xor
imull
inc
call
dec
cwtl
inc
add
int
pop
push
dec
and
negl
adc
inc
sbb
add
jbe
jl
popa
inc
adc
je
insb
dec
rorb
mov
inc
sub
jae
sbb
test
push
mov
gs
ds
xchg
xor
and
push
push
cmp
pop
jbe
test
xchg
incl
add
jecxz
mov
lds
mov
mov
sub
inc
add
daa
jae
int3
adc
cmp
add
in
rcll
xchg
or
stos
das
scas
pop
jl
pop
jmp
sub
inc
call
mov
shlb
je
subb
je
xor
sub
add
xchg
int
test
push
xor
cld
and
jmp
testb
or
pop
mov
xor
or
or
xlat
mov
das
movsb
pushf
jecxz
and
stos
cmp
jle
pop
ror
push
insl
fwait
mov
mov
sub
push
loope
xor
ja
jmp
je
rcr
push
fwait
sar
add
xor
les
push
fistl
pop
je
movsb
push
or
lds
sti
popf
data16
push
adc
aaa
test
push
dec
push
sahf
jne
movsl
xor
cmp
jmp
push
dec
xor
xor
sbb
push
addl
cmpsl
or
cltd
sti
pop
lret
les
pop
adc
jge
cmp
fidivl
sub
fildll
test
and
push
mov
pop
push
nop
fiaddl
mov
fcmove
cwtl
xchg
lock
cmpl
cld
jae
into
lcall
loopne
enter
jbe
cmp
adc
sti
dec
sub
mov
imul
add
xor
into
scas
sub
jne
in
or
std
rcll
pop
cwtl
push
imul
inc
repz
jno
xor
mov
outsb
add
lods
and
dec
dec
push
test
xor
cmc
pop
inc
sub
xchg
fs
mov
xchg
pop
sbb
outsb
fmuls
sub
ja
push
adc
push
clc
push
insb
jbe
pop
mov
mov
imul
out
mov
loopne
sbb
pop
aam
sbb
rclb
adc
inc
mov
cmpsb
xchg
pop
fwait
xchg
xor
adc
notl
sub
sti
push
in
inc
dec
in
hlt
add
cs
inc
sbb
mov
out
mov
inc
ficoms
in
out
or
mov
jmp
mov
sbb
and
mull
cmp
das
shrl
and
and
test
aam
and
shlb
lea
in
js
loop
aam
lret
mov
test
call
js
jns
dec
stos
aas
popf
test
push
scas
pop
shl
push
pushf
paddq
push
fisttps
xchg
lds
adc
je
cli
or
loope
jns
mov
divb
xchg
pop
popa
dec
or
cmp
jbe
daa
push
fmull
dec
jno
sub
and
outsl
out
pusha
mov
rorb
aas
sti
divl
push
push
into
xor
push
mov
jg
mov
out
sbb
dec
adc
add
and
sbb
gs
jo
repnz
or
mov
in
xchg
push
dec
testb
adc
data16
mov
ret
add
je
imul
add
xor
ja
fdivrs
aas
mov
lock
outsb
and
test
jge
cmpsb
sbb
jp
xor
cmc
iret
mov
jg
inc
les
sbb
mov
pop
xor
push
and
dec
inc
cltd
pop
scas
shlb
std
daa
aas
test
pop
ja
dec
jp
imul
sbb
popa
sbb
jecxz
in
outsb
mov
pop
scas
inc
andl
cli
jns
in
aas
adcl
pop
dec
pop
icebp
inc
mov
cmpl
inc
adc
xchg
jmp
mov
add
outsb
xchg
movb
push
ret
lret
push
popf
gs
push
fisttpll
daa
and
call
test
scas
adc
not
or
lods
mov
cltd
cltd
xor
and
push
nop
out
push
mov
xlat
scas
ret
push
xchg
add
arpl
pop
cld
faddl
inc
xlat
xchg
mov
cli
sbbl
hlt
cltd
push
pop
in
mov
mov
nop
test
in
inc
inc
jp
inc
outsw
and
lret
cmpsl
sbb
or
bound
shrl
nop
ficoml
lock
sti
fiaddl
adcb
mov
sub
aad
pop
shr
mull
mov
jg
js
dec
mov
rolb
pop
mov
std
shll
ret
sub
fdivs
cwtl
inc
ljmp
xor
fldcw
aam
lods
and
mov
add
or
scas
imul
pop
loop
push
cmp
outsb
in
and
pop
mov
push
das
test
dec
mov
and
fcmovnbe
xchg
into
into
xor
cmp
pop
nop
adc
addb
repnz
adc
gs
pop
add
pop
mov
enter
aad
sbb
pop
je
rolb
bound
and
fisttpll
aam
int
outsb
dec
imul
and
push
fistpll
xchg
lahf
add
push
ret
jb
xor
jb
sub
fisubl
jo
ds
lods
sbb
xor
and
ss
fbld
mov
jns
clc
test
mov
aas
jecxz
add
call
aam
xchg
imul
add
shll
mov
lea
dec
int3
inc
dec
dec
mov
and
addr16
jg
mov
icebp
pop
or
cmp
outsl
sbb
rorb
dec
xorl
mov
loope
enterw
sbb
mov
je
in
in
stos
xor
lods
mov
adc
pop
mov
int
std
mov
into
xchg
xchg
mov
stc
mov
mov
xchg
in
pushf
dec
add
and
stc
outsb
inc
ficomps
xchg
mov
fistps
pusha
adc
sub
adc
sub
aaa
loop
out
xchg
inc
xor
push
in
and
outsb
pop
lock
lock
int
and
mov
push
push
xor
jl
sbb
outsb
mov
and
lcall
sbb
adc
data16
fs
add
out
test
pop
xchg
inc
arpl
pop
mov
stc
xchg
adc
sbb
jl
add
push
lcall
pusha
cmp
ret
orb
add
popf
and
push
xchg
add
icebp
cmpsb
clc
mov
clc
or
loope
mov
test
dec
pop
leave
dec
add
movb
cmp
imulb
addr16
mov
jge
bound
lahf
cld
jg
adc
mov
cltd
inc
std
sbb
cmp
jbe
push
or
mov
mov
jae
dec
pop
jne
push
cmp
or
pop
cwtl
or
imul
daa
and
fiaddl
nop
in
aas
dec
or
lock
sub
and
js
fsubl
xor
xor
jp
dec
fadds
idivl
mov
outsb
jmp
push
xor
mov
into
icebp
lret
push
pop
dec
ret
pop
pop
dec
sbb
and
stos
mov
cld
bnd
test
mov
pop
jp
or
insl
ror
lea
add
mov
loopne
jns
and
cld
ss
movl
ret
daa
mov
cmpl
xor
and
inc
outsb
outsb
mov
mov
push
add
mov
das
xor
in
cltd
das
lock
adc
jl
pusha
cmp
aam
and
jg
jl,pt
mov
inc
mov
and
push
ljmp
lods
popf
push
sbb
lcall
jne
stos
xchg
in
dec
out
test
xor
dec
pop
push
pop
mov
inc
sub
orb
scas
pop
mov
add
or
adc
xchg
addl
mov
or
shr
pop
inc
xchg
dec
inc
mov
xor
arpl
sbb
mov
fstl
pushl
js
mov
mov
test
and
lock
orb
lods
repnz
bnd
inc
xchg
test
push
pusha
scas
popa
stos
mov
pushl
pop
insl
nop
add
loope
push
enter
cmp
call
xchg
repnz
popl
add
mov
inc
dec
sub
mov
inc
sbb
push
push
test
sbb
jb
into
push
movsb
mov
adc
lret
pop
sbb
pop
xchg
and
fadd
sbb
enter
pop
ret
mov
mov
add
pop
in
test
repz
mov
test
mov
stos
pushf
cld
or
call
push
loope
mov
repz
loopne
int3
add
lds
addr16
mov
bound
push
pushf
addl
wrmsr
lret
add
sub
pop
xchg
jae
aam
pop
inc
or
sub
inc
popa
fiadds
mov
jb
mov
stos
loop
xor
mov
inc
daa
call
mov
push
and
jbe
push
fisttpl
ror
and
pop
mov
imul
xchg
lock
mov
inc
dec
mov
pmulhw
fdivr
movb
outsb
iret
aas
es
push
mov
push
cmpsl
xchg
and
xchg
sar
orl
movsl
mov
aam
mov
js
cmp
outsb
jl
psrlq
leave
scas
mov
sbb
mov
mov
idiv
and
add
in
aas
mov
fisubrl
scas
mov
xchg
das
cltd
and
cmc
mov
pop
pop
mov
mov
sbb
cmc
dec
and
xorl
cmp
mov
in
push
out
xor
insb
mov
divb
sub
sbb
loop
std
or
cmc
ds
jbe
cwtl
movsb
jg
in
sbb
leave
cs
shrb
scas
testl
cmp
cmpb
fldl
or
sti
scas
mov
inc
daa
loope
in
pop
sub
mov
mov
xchg
imul
inc
pushf
fnstcw
xchg
std
cmp
cmpsl
push
int3
xor
adc
icebp
xchg
pusha
ret
push
jnp
scas
lcall
pop
stos
inc
pusha
xchg
in
inc
js
je
cmp
int
add
mov
test
cs
xor
cmp
xchg
cmp
sbb
sbb
mov
sti
nop
in
or
in
mov
out
sahf
in
ds
cld
mov
in
lods
or
xor
das
jecxz
lea
push
pop
mov
adc
jecxz
add
push
jae
jne
loop
adc
add
push
pop
sub
jg
shrb
cmovb
loope
outsl
loop
scas
adc
adc
and
enter
jns
data16
lock
pop
aaa
filds
xchg
xor
mov
nop
xchg
lods
mov
push
addr16
mov
subl
xor
repnz
and
jbe
or
and
inc
push
outsb
xor
push
sub
nop
pop
call
incl
test
inc
dec
sbb
rorl
mov
pop
sbb
xor
sub
and
add
xchg
stc
les
jno
cmpl
shl
sub
fidivrs
pushf
lods
pop
lock
xchg
cmpsb
inc
daa
sarb
dec
in
or
jbe
dec
loopne
js
movsb
js
jno
stc
sbb
mov
mov
or
stos
jnp
daa
cwtl
xchg
movsb
cmpsb
cmpsl
scas
cmc
mov
cmc
nop
lret
test
jecxz
push
lcall
xorl
ljmp
mov
inc
subl
add
xchg
outsl
push
aas
dec
cmp
pop
add
bound
clc
mov
jmp
xchg
movsl
or
outsb
adc
or
das
fucomip
sti
daa
sarb
test
push
lcall
xor
inc
jge
xor
xchg
out
xor
and
leave
iret
jle
arpl
push
fnstsw
out
lea
adcb
jmp
and
enter
pop
fstps
lret
int3
pop
rcrl
mov
cmc
cmp
out
jle
inc
pop
jo
shll
inc
das
pop
pop
ret
xor
ret
and
xor
mov
dec
jo
loope
sub
loop
jmp
pop
xchg
sahf
imul
outsl
mov
mov
in
add
and
fwait
loope
imul
mov
imul
ja
popf
fstl
rorb
aad
xchg
ja
jne
ss
xchg
push
out
or
aam
mov
mov
push
inc
insl
movl
push
cmp
imul
push
leave
lods
push
lods
inc
cli
dec
sbb
jle
stos
ljmp
fbstp
stc
mov
dec
rolb
xchg
and
loop
in
push
mov
push
mov
add
xor
clc
xchg
test
js
pusha
mov
or
sub
mov
fwait
cmp
push
pop
add
leave
adc
sbb
movsl
cld
mov
ds
adcl
daa
out
insb
les
xchg
inc
ds
roll
jecxz
dec
test
adc
iret
call
jbe
xchg
popf
jge
pop
icebp
mov
negb
lahf
mov
and
jno
es
cmpsl
stos
adc
fmull
add
jae
scas
fs
loop
dec
lahf
push
mov
js
scas
fbstp
mov
jb
push
loopne
call
sti
cmp
into
cltd
das
fsubrs
popf
cmp
shll
adc
ljmp
daa
ja
call
fidivrs
sub
cmp
mov
popa
std
pop
rorb
mov
add
xchg
out
clc
sub
in
pop
cmc
stos
xlat
ret
js
jl
jo
push
mov
sti
or
jne
xor
dec
rolb
add
push
cmp
arpl
stos
pushf
jns
mov
mov
insb
jmp
pop
ss
shlb
cmp
cmp
add
push
jbe
popa
xchg
add
loope
outsl
popl
out
out
fwait
or
add
sbb
movsl
add
decl
aad
movsb
cmpsb
enter
jl
xor
iret
enter
sbb
in
mov
inc
fwait
dec
pop
sub
jmp
xchg
and
mov
jb
sti
shlb
push
mov
cmc
sbb
push
or
leave
dec
push
and
dec
xchg
pop
nop
mov
test
sub
icebp
pop
dec
andl
lret
fdivr
popf
cltd
xor
add
mov
add
out
adc
ror
repnz
push
xor
pop
jle
mov
clc
sar
in
dec
jecxz
jbe
adc
mull
cmpsl
cltd
stos
jl
fcomp
inc
dec
int3
inc
push
cmp
pop
test
or
jmp
mov
ret
fsubs
jmp
dec
inc
ret
push
cmp
mov
push
sub
or
pusha
test
rcrl
fs
cmpsl
test
fimull
inc
fsts
xchg
push
push
lret
fnsave
cli
mov
popf
je
cmp
sti
fldt
mov
fcoms
jle
and
cs
pop
insl
fldlg2
pop
imul
and
nop
nop
jae
dec
iret
loopne
or
sub
dec
cmp
test
push
and
pop
sbb
daa
mov
sub
jbe
in
push
scas
js
ds
push
sahf
cmp
je
mov
lods
test
xchg
xor
test
cmc
dec
dec
lea
lods
loopne
or
fmull
mov
push
jne
mov
jecxz
ret
xlat
rcl
mov
ljmp
dec
popa
xorb
inc
pop
outsl
test
test
fs
xor
testl
pushf
push
sbb
adc
adc
movsb
pop
mov
xlat
jecxz
enter
pop
and
cli
scas
lret
adc
mov
mov
orl
mov
dec
lds
or
ror
add
lods
in
repz
lcall
clc
lds
inc
imul
iret
dec
push
inc
jbe
fnstsw
dec
not
sbb
jmp
xchg
and
push
jo
push
sbbl
jl
leave
inc
mov
lock
push
xor
sbb
add
insb
sbb
jae
test
mov
cmp
inc
insl
add
inc
fwait
push
or
cmp
test
in
je
xor
cltd
mov
mov
lahf
nop
sbb
add
in
leave
inc
cmc
sub
sbb
xchg
jl
cmc
mov
fisubrs
push
xchg
push
test
pop
fstl
fs
jmp
mov
cld
je
or
and
ja
fstl
orb
adc
fcoms
jge
ds
xor
sub
stos
jae
lea
add
adc
dec
fadd
sub
xor
movsl
adc
clc
lret
cmp
xor
push
out
inc
dec
xchg
lods
js
ret
mov
cmp
iret
out
jg
andl
or
lds
fstps
dec
outsl
xchg
xchg
and
mov
inc
loopne
loope
rolb
mulb
out
ds
sbb
pop
test
hlt
sub
inc
pop
dec
sub
movsl
pushl
aam
test
inc
mov
aas
inc
pop
rcll
and
pop
ja
sbb
sub
mov
sbbb
xor
add
insb
inc
aaa
scas
dec
enter
lods
mov
add
xor
sbb
popf
or
lds
stc
xor
add
sbb
lock
add
push
test
sbb
cmp
mov
push
fs
push
mov
lock
int3
pop
and
jle
lods
mov
and
push
xchg
fistpll
cmp
fisttpll
fisttpl
lret
add
or
adc
and
and
sub
jecxz
pmaxub
inc
or
xor
push
push
fldcw
adc
dec
cmpsb
test
leave
xorb
ljmp
cmpsl
xor
lock
cltd
pushf
out
or
or
imul
fdivs
imul
pop
rcrl
mov
arpl
ror
je
push
clc
negb
mov
cmpsb
ret
pop
sbb
jl
imul
mov
jl
inc
icebp
mov
pusha
push
testl
movsb
pop
pop
or
mov
inc
aaa
xchg
popa
cwtl
stos
push
inc
pop
jne
cli
cmp
jo
cmpsl
xchg
cmp
cmp
out
sub
xchg
pop
imul
loopne
scas
cmp
shl
popa
xchg
cmpsb
scas
mov
insl
subb
hlt
or
das
xor
jg
sbb
inc
xchg
jns
mov
mov
or
mov
add
pop
add
out
imul
dec
nop
sub
fnsave
dec
clc
add
js
es
stc
inc
cmp
stos
pop
outsb
rcrl
mov
jne
xchg
decb
clc
adc
add
incl
clc
arpl
cmp
push
fisubl
int
add
ret
outsl
fimuls
and
fs
pop
loop
fcmovb
sti
sub
es
je
and
inc
lahf
or
cmp
inc
jae
xlat
call
sub
push
fbld
jns
pusha
mov
pop
adc
cmpsb
dec
inc
and
notl
mov
je
add
shlb
xchg
fdivrl
push
mov
or
fwait
popf
xchg
test
mov
fidivl
mov
dec
dec
push
jbe
fld1
enter
mov
add
or
lcall
inc
fisttps
das
lds
pop
xor
loopne
addr16
popa
fsubrs
inc
add
jnp
pop
adc
repnz
mov
jno
rcll
cmc
mov
push
fcompl
adc
std
subb
lds
adc
dec
loope
inc
inc
repz
cmp
mov
lret
pop
shrb
test
scas
int3
rcl
lods
es
jmp
or
sub
mov
je
fwait
mov
xchg
les
sub
xor
and
ljmp
lods
insl
nop
or
popa
fiadds
pop
adc
testl
adc
fimuls
stos
xor
inc
insb
push
jl
mov
inc
or
sbb
xor
je
pop
es
pop
shrb
les
mov
xchg
mov
pop
jmp
cmp
aaa
mov
mov
inc
pop
shr
xchg
je
cmp
jge
adc
lods
and
aas
int
xchg
or
lcall
xlat
mov
pushf
andb
popf
sahf
mov
mov
aam
sahf
repnz
xchg
addr16
dec
mov
xor
lret
int
cmp
xor
or
xchg
and
cmpsb
add
mov
roll
pushf
push
push
push
test
pop
jne
cld
fisubs
mov
mov
push
icebp
insb
cwtl
sub
daa
xchg
mov
and
mov
pop
sarb
ja
int
mov
xor
mov
ret
cli
repnz
mov
cmp
push
pop
cmp
xor
xchg
arpl
xchg
mov
mov
dec
imul
jp
xlat
and
aad
lea
fimull
and
sbb
mulb
pop
or
fcmovnu
repnz
scas
fnsave
push
movsb
loopne
inc
mov
inc
flds
mov
pop
jmp
pop
stos
movsb
adc
cmpsl
cmc
jae
sub
cmp
lcall
cwtl
sbb
cmp
cmp
adc
mov
sub
cwtl
push
out
cmc
cltd
mov
sub
fbld
cmpsl
ret
mov
icebp
xchg
sbb
imul
inc
sbb
xor
adc
rorb
pop
xchg
pusha
pop
inc
leave
lcall
xchg
insl
andb
rclb
lods
mov
fidivs
dec
pop
xor
push
out
adc
scas
jp
inc
mov
sbbl
lcall
mov
inc
cmp
push
ljmp
xchg
push
cli
mov
jmp
pop
cmp
push
mov
hlt
xchg
loope
cmpb
aas
loop
and
es
mov
push
decl
push
pop
test
mov
jge
in
sub
push
inc
fildl
lahf
xchg
add
ds
rolb
cmp
cmp
sub
or
mov
orl
lods
sub
clc
mov
sub
or
sub
fwait
xchg
dec
daa
loop
lea
jge
xchg
into
not
mov
push
fcom
out
pop
mov
cmpsl
or
neg
lds
mov
xchg
mov
lods
std
add
call
aaa
dec
or
mov
enter
xchg
adc
lret
xchg
pop
mov
jg
mov
in
lcall
jg
sbb
test
xor
push
in
push
loopne
xchg
add
das
jg
int
add
aas
clc
add
push
jno
xor
pop
pop
push
cmpsl
push
shrl
arpl
sub
enter
inc
fs
ret
scas
dec
inc
sar
std
pop
gs
cmp
in
in
in
adc
adc
jno
inc
roll
and
fisubrl
ret
std
mov
out
out
xor
popa
push
outsl
push
leave
push
or
add
rcrb
cs
aad
mov
jbe
mov
sbb
or
cmp
roll
test
lret
xchg
cmp
or
cmpsl
cwtl
add
mov
mov
cmc
nop
insl
sub
lahf
dec
lods
dec
clc
adc
cmp
loop
mov
mov
xor
lods
outsb
xlat
mov
dec
jle
push
in
imul
push
jp
xor
add
dec
sti
pop
or
mov
adc
cmp
dec
faddl
lds
leave
arpl
push
stc
pop
aad
pop
stc
mov
arpl
inc
add
jb
cltd
cmpsb
sub
mov
mov
bound
ds
jbe
mov
cltd
jns
jb
out
push
repnz
nop
je
outsl
fidivl
cmp
inc
aaa
sub
add
xchg
or
stos
jb
dec
mov
push
xor
mov
ljmp
stos
mov
ljmp
repnz
xor
jp
lods
cmp
jne
dec
aad
add
add
jmp
aaa
adc
cld
mov
ds
or
push
adc
or
aam
repnz
pop
lahf
and
sbb
je
sub
testl
loopne
scas
sbb
popf
mov
out
dec
fwait
sar
lods
rcl
mov
mov
sub
aaa
popf
mov
sub
cwtl
push
fsts
dec
lret
loop
adc
aam
jle
xor
out
or
int
pop
add
movsl
fs
sti
fwait
pusha
gs
dec
dec
fisubl
cmpsb
adc
scas
and
mov
mov
cmpsl
xchg
mov
adc
cmp
mov
xchg
das
loop
pop
adc
dec
adc
out
push
lcall
adcb
repz
mov
sarl
or
xlat
orl
jge
shll
mov
jnp
into
jp
aaa
outsb
into
jno
scas
test
adc
out
mov
sarl
dec
sbb
jle
cld
pop
push
pop
aas
lds
movsl
cmpsl
mov
or
sar
dec
push
jl
out
sbb
cltd
fwait
jae
jne
push
or
sbb
mov
mov
mov
orb
scas
leave
mov
push
ss
into
mov
ljmp
loopne
inc
insb
ja
xor
xchg
mov
in
xchg
pop
pushf
clc
test
call
aaa
mov
inc
xchg
jae
movsl
sbb
in
daa
sbb
jb
jmp
fistpl
popa
push
sbb
push
aad
popa
xor
cs
out
push
insl
ja
jmp
xorb
adc
mov
mov
mov
cltd
xlat
or
ret
xor
test
rorl
int3
sub
mov
jne
out
aas
stc
xor
ljmp
mov
arpl
or
push
aam
sarl
sahf
mov
and
add
sub
add
adc
inc
add
ljmp
dec
in
iret
dec
sbb
adcb
mov
divb
cmp
data16
in
call
sub
aad
dec
mov
sub
repz
lahf
xor
fcomps
in
and
or
lret
js
ss
shlb
cmpsb
dec
scas
mov
pop
fsubs
insb
fidivl
mov
jno
cmp
push
cmp
mov
inc
or
or
push
pop
fildl
test
sbb
es
mov
es
dec
mov
sub
call
shr
sub
add
xor
pushf
enter
push
loopne
mov
aaa
mov
push
shl
and
adc
mov
shlb
pop
mov
cmc
outsb
js
mov
call
xchg
cmpsl
scas
das
shr
lds
push
in
jne
loop
mov
cli
hlt
cmp
cmp
and
movsb
ljmp
sub
pop
inc
sub
inc
or
pop
xlat
add
add
jge
daa
push
flds
out
xchg
jge
mov
inc
jl
xor
xchg
xorl
add
add
pusha
push
jns
cmp
sbb
rcll
lods
xchg
enter
inc
sbb
fdivs
mov
and
sub
es
push
out
out
ljmp
outsl
or
or
sbb
outsb
mov
out
mov
pop
cmc
inc
cmpsl
lods
jg
pop
push
ljmp
lret
subb
sub
adc
out
pop
test
add
dec
sub
hlt
sti
or
cmp
roll
loop,pt
and
pop
mov
fs
mulb
lods
pushf
dec
shrb
adc
in
test
or
ret
subb
push
push
lcall
aad
add
aaa
enter
nop
sub
in
fidivrl
movsl
pushf
pushw
cwtl
mov
inc
stos
ljmp
pop
imul
and
add
mov
pop
and
and
outsl
ret
cmp
loope
cmpsl
add
cmp
push
sub
sbb
jge
test
and
push
je
pop
orl
cwtl
in
je
mov
jb
add
fwait
sub
cli
mov
mov
inc
scas
mov
cli
push
pop
ficompl
cld
arpl
pop
jle
xor
js
or
jecxz
sub
imul
pushf
and
fcoml
fbstp
aad
std
ss
and
mov
stc
mov
in
orl
adc
mov
loope
sub
mov
mov
xchg
repnz
push
jo
fs
cmp
mov
and
aaa
pop
call
jg
cmp
fidivl
sarb
xchg
dec
xchg
or
sub
ret
mov
xchg
iret
push
adc
icebp
mov
imul
pop
sub
xchg
jg
inc
push
xchg
and
mov
or
pop
jne
lds
fiadds
jmp
xchg
je
adc
pop
sub
lods
sbb
outsb
add
cltd
cmp
sbb
jae
jle
xorl
inc
push
in
pop
xor
data16
orl
notl
mov
push
cmp
test
adc
sahf
pop
int
daa
leave
pop
mov
daa
out
jne
xor
jmp
cwtl
ja
and
mov
inc
dec
stc
jecxz
mov
cmp
mov
popf
cltd
sub
gs
js
cli
cmpsb
or
sbb
js
pop
lods
and
js
ljmp
cmp
cltd
lret
jae
repz
mov
in
xor
or
cmp
mov
dec
pop
push
and
xchg
jnp
test
pop
jmp
xor
cli
fs
out
insb
cmp
aas
pop
insl
fdivrl
cwtl
and
std
repz
inc
icebp
sbb
lahf
aaa
data16
push
in
mov
lea
and
sahf
sbbl
leave
cltd
mov
clc
inc
and
nop
jo
pop
mov
popa
mov
xor
je
insb
in
out
push
push
push
add
ja
fiaddl
das
outsl
popa
fxch
dec
inc
movb
scas
mov
mov
push
outsb
fldcw
lahf
repz
adc
sbb
js
in
hlt
add
subl
call
test
cld
aas
xchg
out
in
mov
adc
lret
iret
xlat
pop
pop
xor
std
iret
mov
adc
loop
adcl
or
cmp
xchg
add
cmpsb
add
movsl
cmp
loop
or
jne
jecxz
mov
mov
sarb
mov
push
cmc
sbb
daa
ret
sub
subb
adc
dec
aas
mov
nop
mov
xchg
scas
sbb
es
jp
mov
call
negl
jbe
fimuls
jl
adc
jp
push
inc
or
inc
pop
fisubs
xchg
jbe
add
pop
enter
and
cmp
adcb
xchg
loopne
dec
or
jmp
imul
pop
notl
mov
inc
mov
or
fadds
jmp
or
cmp
das
in
pop
jp
into
inc
icebp
test
and
lds
jnp
cmp
test
bound
dec
cmp
xchg
sahf
push
xchg
ss
cwtl
pop
jb
xorb
sahf
outsl
xchg
mov
cs
mov
pop
mov
jmp
mov
mov
xchg
mov
inc
xchg
xchg
sbb
xchg
imul
rclb
push
add
aad
and
xlat
push
cmpsl
iret
fwait
shrl
mov
out
rep
dec
clc
out
ja
dec
cwtl
aam
pop
mov
inc
inc
clc
sub
push
push
je
out
push
out
shl
add
cmp
inc
xchg
stos
mov
aam
and
adc
lret
xchg
shr
data16
leave
xchg
push
add
loope
mov
push
mov
ret
repz
dec
mov
js
lahf
pop
adc
inc
mov
xchg
leave
into
mov
xchg
pop
mov
mov
shrb
or
out
adc
aam
ss
mov
jge
bnd
lret
out
inc
icebp
test
lds
cmp
sbb
mov
je
lods
mov
test
dec
and
pop
push
sbb
add
jnp
ret
ror
push
mov
mov
jmp
rorl
cld
sub
pop
test
push
outsl
hlt
repz
pushf
push
gs
jl
and
jg
xsave
fldcw
mov
out
std
pusha
inc
loopne
fwait
mov
stos
inc
pop
push
in
xchg
and
sbb
push
imul
fwait
inc
or
clc
data16
lds
in
pop
js
add
add
cmp
cwtl
leave
hlt
xor
outsl
outsb
je
xor
mov
div
pop
cmc
inc
loopne
lock
lahf
lret
stos
sbb
add
add
dec
mov
fnsave
sbb
lret
sarb
sbb
jbe
jo
sbb
ds
push
xchg
fnstsw
xor
es
aam
rcll
out
sti
xor
shlb
add
xchg
lea
into
lea
lret
loopne
lea
fbld
mov
lret
sub
lods
push
lods
pop
dec
out
call
xor
in
and
inc
out
push
fldt
in
or
xor
dec
xchg
mov
sub
dec
mov
or
addr16
test
fstl
mov
loope
mov
inc
lods
es
cld
inc
or
in
xchg
lcall
cld
jg
xor
pop
ja
mov
jecxz
pop
ds
into
jle
dec
lods
pop
mov
mov
andl
mov
push
inc
mov
sub
or
addb
ficomps
stos
in
inc
ja
xchg
xchg
mov
out
push
and
pushf
test
mov
outsl
sbb
push
pop
addr16
sub
js
jmp
mov
mov
outsl
jl
aas
xchg
xor
and
scas
divb
cld
clc
mov
in
out
fcomps
xchg
ss
lret
mov
dec
popa
xchg
mov
testl
cmp
and
arpl
call
and
jbe
or
mov
addr16
sahf
push
jmp
sub
rcl
push
jbe
arpl
fstpl
lret
pushf
shlb
inc
nop
xor
jge
test
stos
and
mov
push
mov
sbb
mov
jmp
cli
xor
aaa
cmpsl
sub
push
fildl
jne
push
clc
lret
fidivrl
in
mov
sub
aam
ds
sarb
and
jge
push
das
bound
stc
and
aas
outsl
add
inc
or
mov
rcrl
arpl
pop
push
xacquire
jae
cmc
and
lds
pmulhuw
add
push
add
rcll
or
daa
sbb
mov
dec
jl
or
fimuls
and
jecxz
pop
add
in
mov
adc
icebp
clc
rcrl
jl
mov
aad
xorl
bnd
fidivs
jo
je
cs
jbe
pop
leave
or
adc
sbb
dec
addb
lock
mov
cli
xor
xor
sarl
lahf
xor
fdivrs
out
bound
testl
xor
scas
mov
pop
push
in
rorl
pop
mov
insl
aad
xchg
sub
lret
push
or
repnz
testb
popf
jno
mov
ja
jp
imul
lret
push
mov
mov
test
in
jg
std
inc
dec
jno
or
mov
rolb
enter
in
push
add
xor
inc
xchg
lcall
mov
mov
xchg
clc
out
in
lret
sar
jne
dec
repnz
jp
loop
or
cmp
xchg
in
cpuid
repz
movsl
jmp
sub
call
ret
cmpsl
movsl
xchg
push
or
dec
sub
fsubrs
jecxz
mov
mov
push
cmp
std
iret
fldenv
ja
xchg
notl
cld
jne
push
adc
cmc
jns
in
add
and
stos
repnz
xor
insl
pop
jge
xchg
and
adc
or
mov
mov
imul
cmpsb
les
rorl
xchg
sub
bound
rcl
push
stos
jecxz
js
int3
xor
push
mov
movsl
add
lret
inc
ss
jmp
jno
addr16
and
aas
outsl
outsl
loope
push
sbb
ss
xor
outsl
shll
loopne
and
jo
jl
add
mov
inc
inc
mov
and
ficoml
adc
dec
je
xchg
lret
sahf
sarl
cmc
xlat
jbe
das
ds
jl
lcall
push
cltd
fstpl
push
lahf
xchg
shl
xor
pop
faddl
mov
pop
mov
mov
loope
stos
stc
xchg
sub
push
rcr
xchg
jae
stos
push
mov
movsl
mov
out
cwtl
jno
mov
mov
cmp
mov
daa
pop
pop
or
push
std
aaa
fimuls
dec
pop
jbe
or
sub
sub
into
sub
or
sahf
stos
nop
loope
xchg
movsb
pushl
arpl
mov
dec
cmp
mov
popf
push
test
sub
jae
test
sbb
call
mov
std
clc
jb
push
push
andb
fiaddl
sti
shrb
mov
in
fidivrs
gs
add
xchg
xor
mov
stos
rcl
in
adc
mov
pushf
imul
cwtl
pop
sbb
daa
divb
mov
mov
aaa
jb
pushf
orl
in
cmpsl
sub
pop
mov
mov
cmp
lret
lcall
mov
ljmp
fstpt
fdivrl
add
push
fucomi
mov
fiadds
mov
pusha
xchg
mov
mov
mov
cmpsl
insl
insb
cmp
neg
cltd
les
rorl
xor
call
mov
dec
xlat
decb
mov
cmpsb
loop
dec
jmp
mov
jl
lods
icebp
mov
jb
xlat
mov
pop
push
shr
sbb
scas
sub
cmp
dec
or
push
or
outsb
sbb
mov
dec
pop
ret
icebp
std
sti
ss
pop
xchg
push
jle
and
lds
inc
cs
xor
cmp
sbb
into
loopne
inc
jae
subb
movsb
inc
imul
fcoml
repz
lock
add
loop
sub
aaa
out
push
jge
add
js
fistpll
cli
int3
rclb
and
or
mov
xor
cmpl
int
test
jle
xchg
lods
mov
imul
loopne
outsl
or
and
test
icebp
xchg
filds
pop
push
push
ljmp
sbb
cmc
std
sub
mov
in
lcall
loopne
or
fxam
addl
fnsetpm(287
push
mov
jge
dec
jno
imull
in
pop
gs
mov
sahf
data16
sahf
push
inc
aad
rcrb
or
mov
out
xor
mov
push
in
pop
ljmp
cmpsl
lods
std
jp
sub
rcll
fisubl
inc
mov
pop
imul
mov
in
mov
xchg
faddp
dec
xchg
and
xchg
fs
mov
sbb
movl
popf
loopne
pushf
xchg
add
sbb
sub
jp
leave
pop
push
cli
scas
push
jmp
incl
and
pop
or
and
add
loope
pop
pusha
add
and
pop
subb
rorb
mov
stos
or
cmc
jg
addr16
nop
cld
addr16
mov
jae
mov
pushf
lret
call
mov
clc
out
aaa
sbb
cmp
fistpll
pushf
cmpsl
jmp
filds
mov
enter
and
sbb
int3
and
add
or
jl
xchg
xchg
mov
xchg
pop
push
xchg
push
sub
enter
ret
shrb
sbb
imul
movsb
jle
fiaddl
and
adc
xchg
and
or
jns
and
cmp
sbb
test
mov
and
mov
xchg
call
mov
test
imul
fwait
stos
pop
mov
push
mov
dec
cmp
pop
loop
data16
stos
filds
mov
mov
pop
and
or
cmp
sub
mov
shll
repz
mov
mov
sub
call
test
mov
icebp
jecxz
mov
std
aaa
lret
imul
dec
xchg
shll
add
jnp
push
icebp
out
in
pop
test
jecxz
mov
lret
cmp
not
fistl
xor
cltd
jmp
call
mov
jnp
clc
jns,pt
xor
inc
scas
sbb
mov
outsl
jp
and
lret
xor
inc
movsl
dec
mov
push
iret
xor
adc
push
or
fs
push
jne
inc
mov
push
sar
les
sub
movnti
fs
xchg
loopne
jl
adc
or
dec
and
andl
cmp
mov
icebp
cmpsl
scas
pop
in
xor
fs
pop
repz
decl
jecxz
loope
pop
cli
inc
fstps
hlt
je
dec
nop
pushf
ljmp
cltd
rcl
inc
cs
lcall
leave
sbb
test
ss
je
repnz
loopne
mov
inc
loopne
fnstsw
push
js
out
mov
pop
jne
sbb
cmp
imul
adc
push
inc
dec
fidivs
cwtl
push
rolb
popa
aas
lods
add
or
xchg
iret
lds
jns
out
jle
aaa
pop
push
std
inc
aaa
loope
daa
int3
ja
cltd
or
daa
or
das
cmc
lcall
clc
arpl
add
mov
mov
stos
pop
push
adc
testl
adc
pop
mov
mov
cmp
loop
loope
movsb
xlat
es
cmpsl
stc
mov
orl
inc
outsl
insl
in
aaa
add
xchg
hlt
add
out
pushl
decb
push
das
gs
pop
pop
bound
adc
xor
push
outsb
push
push
lods
fldcw
sarl
dec
fsubrs
jne
outsl
and
lret
pop
loope
sub
push
sahf
or
ja
ret
push
jb
jecxz
push
out
xor
jb
jg
out
imul
cmp
lcall
dec
sub
xor
loopne
pusha
or
sbb
add
adcl
cmp
adc
push
pop
add
xchg
inc
fists
mov
lea
rorb
sub
arpl
add
es
mov
iret
cmp
and
out
dec
in
inc
inc
pop
jae
mov
ss
scas
aaa
or
cwtl
mov
mov
lcall
jne
clc
xchg
pop
adc
movsb
cmpsl
iret
pop
outsl
out
das
or
movsb
sub
mov
fcmovnb
and
in
in
push
push
sub
jle
lds
movsl
adc
mov
mov
xchg
xor
leave
xchg
inc
sub
pop
imul
test
lock
sub
dec
movsb
mul
or
js
cmpsb
mov
cmp
dec
mov
push
push
sar
push
push
and
xchg
es
sub
lods
mov
dec
arpl
es
in
fists
ja
dec
push
push
xor
call
and
mov
ja
push
xor
cmp
pushl
jmp
daa
popa
mov
cltd
cs
add
xor
inc
rclb
inc
and
das
test
push
in
sub
andl
lcall
cmp
xlat
push
clc
push
lods
pop
add
outsb
sbb
xlat
inc
mov
rcrb
es
fs
es
cs
popa
sbb
cmp
fsubl
push
daa
filds
shll
cwtl
aaa
or
jmp
std
out
cli
aam
push
jne
fmull
mov
pop
es
cmp
jg
xchg
rclb
mov
loopne
dec
inc
sar
jmp
mov
mov
mov
enter
mov
int
or
stos
dec
or
jno
out
lds
cmp
mov
mov
call
dec
gs
shlb
and
daa
add
stos
into
test
lods
stos
mov
inc
sbb
xchg
imul
mov
pop
push
jno
mov
mov
fistpl
push
adc
loop
mov
inc
dec
mov
push
jno
fs
pop
sbb
jmp
lock
insb
adc
stos
jg
inc
lods
push
pop
inc
jb
cmp
scas
mov
add
leave
mov
std
push
sub
cmpsl
daa
mov
mov
pop
je
mov
stos
push
add
mov
inc
pop
test
stos
imul
pop
mov
mov
jmpw
imull
inc
subb
cmpb
neg
xchg
add
nop
jle
mov
add
inc
adc
push
dec
ror
pushf
dec
mov
orb
fwait
sub
jno
mov
xchg
dec
adc
jecxz
pop
push
xchg
lcall
push
in
sahf
mov
xlat
xlat
adc
cmc
xchg
dec
iret
sahf
cmp
out
mulb
je
lret
mov
dec
jmp
clc
xlat
cmp
cmp
dec
rclb
push
xchg
pop
adc
lret
ror
frstor
jo
sub
ret
mov
cmpsb
daa
fdivrs
fcmovne
xchg
push
inc
pop
adc
in
test
sub
test
xchg
pop
lret
mov
jno
adc
sub
push
or
aas
dec
push
fisubrs
insb
mov
insb
cs
stos
jnp
leave
sub
mov
mov
fwait
mov
and
mov
sahf
mov
or
roll
pop
or
pop
pop
mov
arpl
inc
aam
fucom
sub
sbb
sub
jmp
jge
push
lcall
movsb
mov
lcall
out
out
ljmp
and
imul
push
push
pushf
fistps
adc
mov
mov
mov
in
pop
jb
test
mov
xor
inc
push
adc
push
push
xor
or
mov
ja
mov
aaa
mov
dec
mov
mov
pushf
jo
pop
cmp
add
sahf
pop
sbb
adc
fidivrs
les
cmp
mov
mov
xchg
lock
test
xchg
pop
and
ljmp
fistl
push
sbb
push
ret
negl
dec
out
loope
pop
mov
in
or
mov
xchg
fisttpl
repz
pop
jbe
sarb
mov
ljmp
negl
add
mov
addr16
shll
inc
push
or
push
push
in
fdivl
out
insl
sub
inc
adc
xor
insl
xchg
fcoms
or
jno
into
sti
ds
inc
xlat
mov
lret
dec
repz
adc
push
fnsave
cmp
dec
adc
dec
xor
popf
imul
jnp
fld
insb
js
iret
ss
mov
xor
cs
add
ja
xorl
lret
pop
daa
add
sub
ret
outsb
pop
sub
add
jae
cmp
xchg
imul
cmp
push
mov
cmp
jno
sub
push
push
or
jg
dec
and
repz
mov
jmp
rcr
stos
rcr
leave
decb
shlb
xor
stos
cmpsl
pop
sbb
nop
insl
mov
xchg
pop
push
rorl
and
test
lods
dec
cld
xchg
mov
movsb
and
push
popaw
xchg
ret
outsb
ffree
push
mov
dec
push
xor
inc
int3
sub
insb
faddl
ds
sub
pop
stc
and
and
ss
das
aam
gs
cmp
jmp
mov
sub
xchg
cmp
jb
xlat
test
fdivp
inc
inc
mov
fstpt
pop
test
jmp
insl
mov
cmovne
xor
test
seto
mov
or
mov
ret
fisubrs
mov
or
or
mov
test
les
xor
leave
jmp
jp
les
pop
mov
and
in
test
movsl
and
mov
jl
out
pop
ret
mov
cmp
and
orl
hlt
in
xor
or
push
jne
stos
inc
dec
push
inc
adc
jp
push
cmp
xchg
mov
scas
xchg
or
jmp
fwait
dec
lods
or
js
popf
pop
cmpsb
aam
std
stc
out
sbb
inc
fwait
imul
imul
sbb
ss
sbb
ret
in
push
xor
adc
lret
dec
or
sub
in
mov
push
fmuls
mov
or
repnz
lods
xor
push
cmc
cmpl
jne
mov
adc
mov
cmpsl
dec
pop
push
data16
das
loope
inc
cmp
dec
push
adc
aad
cmpl
fnstenv
lret
sub
jecxz
dec
pop
mov
lea
daa
popf
pop
jle
ljmp
xor
adc
push
popa
js
mov
add
int3
insl
sbb
setp
aaa
js
loopne
inc
insb
ret
push
lret
xchg
es
mov
inc
mov
and
repz
icebp
mov
inc
add
movsl
mov
push
hlt
jp
pop
mul
adc
je
xor
lcall
sbb
mov
mov
mov
inc
pop
stos
bound
inc
and
ja
xor
movsl
lods
add
jno
inc
mov
popa
mov
mov
lret
push
cmc
jns
jp
pop
fnstenv
or
cltd
decl
and
ret
add
inc
repz
cmpsl
jo
lret
pusha
data16
or
das
popa
mov
cwtl
insl
sbb
sbb
je
orb
lcall
or
add
enter
imul
stc
push
mov
push
popf
adc
cmc
jp
loopne
out
adc
jp
scas
leave
insl
mov
push
lea
scas
mov
in
andl
dec
aas
fildl
hlt
ret
sub
int
fdivr
jo
mov
dec
test
test
cmp
push
mov
adc
loop
enter
or
ret
in
push
pop
mov
or
repnz
scas
scas
jae
jg
mov
movsl
mov
add
ljmp
icebp
mov
cmp
dec
or
lea
jge
insl
pop
push
xchg
pop
pop
jecxz
stos
sub
fsub
insl
scas
or
fdiv
imul
in
dec
dec
cmp
es
lahf
cmp
xchg
jno
xor
adc
adc
loop
data16
jns
call
xlat
adc
mov
pop
sub
subb
rcrb
clc
pushf
mov
xchg
in
fucomip
add
adc
cli
and
mov
js
movsl
pushf
mov
outsl
dec
popf
ja
cmpsb
or
scas
test
inc
pop
ja
imul
lds
xchg
mov
cmp
or
stos
gs
push
adc
insl
jbe
inc
fs
sub
aam
add
push
test
outsl
rcl
inc
sti
cmp
jns
adcl
and
cmp
adc
aad
sarl
jns
lret
mov
xor
mov
mov
daa
repz
loope
out
mov
adc
test
fnstenv
cli
push
subb
pop
or
cmpsl
xlat
sti
mov
andl
insb
add
xor
lret
mov
fadds
cwtl
cmp
or
fs
mov
shll
cltd
xchg
imul
sub
push
jns
outsl
mov
outsb
fimuls
or
cmp
js
jne
jne
or
movsl
aad
aaa
inc
mov
fdivrl
push
cmp
in
leave
and
mov
fmul
imulb
fistps
movsb
cmp
bound
mov
xor
int3
jnp
int3
insl
and
fwait
and
jns
in
and
popa
push
push
mov
xor
pop
adc
imul
mov
xchg
fimuls
mov
out
sbb
jnp
aam
test
in
mov
adc
cmp
adc
cmp
cmp
sti
and
dec
outsb
adc
ja
pop
dec
scas
jmp
adc
adc
fwait
test
pop
addr16
xchg
mov
ret
divb
repnz
shlb
daa
std
inc
stc
mov
add
mov
sbb
gs
sarl
popa
push
dec
data16
int
das
sbb
orl
les
ffreep
or
inc
pop
xchg
push
or
call
push
cmp
xchg
stos
or
iret
mov
jb
sbb
inc
cmp
ds
imul
xor
je
fistl
jecxz
dec
sbb
push
push
ljmp
mov
repnz
sub
test
add
inc
or
jmp
loop
xor
inc
es
imul
dec
pop
mov
out
xor
mov
std
inc
mov
xor
and
jge
or
adc
rorl
cmpsb
cmp
lcall
inc
add
lret
mov
pop
or
ficompl
rcl
xorb
aaa
dec
icebp
pop
or
xchg
mov
dec
fsubrp
lahf
jmp
sahf
aaa
mov
in
jne
and
insb
int3
out
je
adc
pop
add
into
testl
jp
add
imul
mov
or
movsb
mov
mov
add
adc
xchg
iret
mov
pop
mov
xor
fimull
ret
pop
pop
sub
pop
test
adc
ja
les
or
add
enter
hlt
and
jge
repnz
cmp
and
rclb
and
imul
dec
and
mov
lods
inc
in
mov
and
jnp
dec
clc
sbbb
xchg
adc
push
jecxz
add
out
cmp
aad
test
jmp
leave
dec
or
loope
inc
sub
mov
push
xor
adc
or
cmp
int
sub
orl
inc
fnstcw
mov
or
sub
aad
or
xor
es
test
or
pusha
adc
mov
divps
pop
jl
lock
icebp
mov
outsl
std
and
dec
out
pop
push
int3
bound
imul
xchg
stos
shrb
sub
jp
mov
mov
scas
stos
int3
push
cwtl
push
mov
fcoml
loope
push
pop
jne
jb
mov
sbb
pop
cmpsl
movsl
pop
iret
mov
or
hlt
push
or
mov
xchg
xchg
jp
es
lret
push
stc
or
xchg
push
iret
push
pop
fs
pop
jns
lds
ret
fxtract
mov
adc
mov
jle
mov
mov
shrl
clc
push
mov
xor
and
jb
jb
loopne
mov
dec
outsb
inc
repz
push
push
out
sub
cmp
sti
cmp
mov
iret
xchg
pop
mov
sahf
jo
xor
loope
roll
inc
lea
dec
pop
or
mov
ds
push
enter
cmp
jbe
or
cmp
or
dec
inc
arpl
push
pop
imul
mov
mov
mov
or
mov
mov
adc
push
clc
int
imul
cwtl
sub
pop
in
lcall
mov
fsts
and
rcl
mov
rolb
cwtl
add
cmc
jecxz
xchg
lahf
mov
jbe
mov
into
call
jb
ljmp
rep
fstpl
sub
cmpb
scas
mov
into
dec
outsb
imul
inc
xchg
mov
insb
into
cmp
cmp
inc
xchg
pop
sub
xchg
ljmp
in
sahf
mov
pop
ret
mov
popa
int
inc
cmc
pop
in
lret
jle
ja
cmp
mov
xor
sbb
not
jae
stos
fbstp
jle
fisubl
push
xchg
mov
sbb
ljmp
sbb
popl
cmp
cmp
xor
cmp
pop
sbb
insl
cmp
sub
and
push
mov
jmp
ja
fisubs
es
imul
push
scas
stos
mov
mov
lea
das
das
mov
add
mov
rorl
mov
dec
pop
testb
mov
fldenv
sub
leave
inc
add
mov
and
sahf
repnz
in
movsl
xor
push
add
dec
leave
add
call
and
loopne
pop
dec
pop
loop
xchg
mov
fisttps
jb
and
jb
push
fimull
push
into
fisubl
ss
test
pop
xor
pop
fstps
jmp
inc
add
arpl
test
sbb
enter
sbb
jecxz
pop
xlat
xor
ljmp
lea
dec
push
sbb
cld
xorb
hlt
cmp
jno
in
test
int
jbe
idivl
pop
std
stos
cmp
or
out
lea
lock
adc
pop
dec
and
ficoms
jmp
add
scas
fs
xor
outsl
adc
push
jge
and
fisttpll
or
xchg
push
adc
push
into
add
jno
dec
aaa
out
rorl
add
mov
push
jb
mov
jbe
in
mov
stc
pop
outsb
add
xchg
sbb
pop
mov
dec
sub
push
cmp
push
cwtl
mov
xlat
xchg
inc
insl
roll
jmp
xor
stos
stos
cwtl
shrl
pop
jns
fdivrl
mov
sbb
std
jns
loope
test
jge
sbb
icebp
cmp
push
aas
movsl
xor
xlat
fidivl
jb
andl
sub
xlat
or
and
sahf
rorb
aad
jl
sbb
imul
push
aaa
push
sbb
pop
out
rep
adc
js
cli
nop
jmp
pop
pop
inc
test
pop
popf
lea
mov
das
pop
clc
xor
decl
movl
cmp
sbb
mov
sub
mov
andb
sbb
cli
loopne
push
je
mov
jge
mov
icebp
outsl
or
orb
sub
jecxz
jmp
xor
jb
mov
add
cmp
repnz
mov
add
in
je
imul
or
aas
es
mov
xchg
cmp
daa
orb
cmp
cld
fidivrl
mov
sbb
lods
push
andb
jmp
adc
sbb
pusha
xor
test
mov
sbb
leave
aad
repz
dec
int3
xchg
repz
sbb
xor
outsb
fbld
inc
mov
xor
cmp
mov
ret
jl
sahf
ja
cs
mov
dec
sti
mov
js
or
pop
cmc
fstpt
add
insb
xor
sub
loope
inc
mov
xchg
cmp
mov
rol
stos
dec
add
or
xchg
mov
pushf
cwtl
inc
mov
iret
in
lret
jae
jmp
mov
push
xorl
and
scas
push
repnz
jb
xor
xor
xor
mov
xchg
sub
sarb
imul
add
cmp
mov
add
pop
mov
pusha
les
xchg
add
shr
adc
mov
cmp
test
dec
dec
pop
pop
int3
xchg
movl
movsb
inc
aaa
cmp
add
les
xor
cs
loop
outsl
std
sub
xchg
stos
les
dec
cmpsl
in
jge
cmp
mov
mov
xchg
fs
pop
xchg
dec
mov
loopne
pop
fs
test
pop
outsl
rcr
das
xchg
or
and
insb
cmp
ret
add
cmp
dec
cltd
fidivs
lods
pop
gs
add
adc
test
aam
bound
jle
arpl
push
out
popa
pop
jge
sbb
xchg
ficomps
or
mov
cmc
xor
and
popl
cmp
fpatan
push
rorl
sbb
xchg
xor
dec
mov
dec
fwait
sub
ds
adc
inc
fs
es
idiv
or
mov
js
or
pusha
sub
je
addb
outsb
sub
notb
xor
lahf
sub
stos
sbb
dec
insb
sahf
cmp
inc
jp
push
sbb
imul
cld
add
mov
mov
cld
cmp
outsb
or
cmpsb
lds
arpl
loop
cmp
add
add
outsb
subl
in
jbe
movsb
inc
cs
daa
in
mov
xchg
rorl
or
push
xchg
or
ss
into
gs
movl
out
cmp
orb
es
mov
call
sti
push
pop
dec
cmp
stos
mov
in
mov
sub
cmc
dec
sti
cmp
sbb
fcoms
popa
jns
cmpsb
ret
fcomps
or
sbb
mov
popf
jecxz
fabs
nop
icebp
cltd
sbb
cmp
popa
xlat
movsb
mov
movsb
ret
movsl
lods
push
dec
push
pop
pusha
adc
mov
push
inc
push
xchg
push
and
int
mov
cmp
fistl
mov
cmp
insb
jg
bound
adc
nop
jmp
push
sub
add
leave
push
test
daa
dec
sub
sbb
pop
jae
inc
outsb
pop
je
outsl
add
add
sbb
mov
pop
pusha
mov
andb
out
in
cs
mov
fs
aam
rcrl
adc
add
mov
mov
hlt
dec
stc
mov
add
nop
sbb
pop
pop
cs
sbb
int
ds
push
and
mov
push
adc
cmp
or
inc
pop
xlat
sbb
mov
xchg
popf
in
or
push
int3
mov
shlb
punpckhdq
push
sub
or
mov
aas
aam
and
xchg
xor
mov
mov
pop
and
sub
loope
aam
imul
sub
mov
push
mov
or
xchg
add
stos
sbb
ret
out
cmp
push
add
jae
mov
adc
sub
setnp
inc
loop
jp
shlb
dec
push
lret
add
push
or
lret
pop
iret
mov
push
mov
fcompl
or
add
cmp
xchg
sahf
sub
imul
pusha
enter
xor
pop
mov
out
xor
rol
mov
cltd
mov
jmp
test
imul
cmp
or
sbb
dec
jp
stos
mov
inc
scas
sub
push
int
les
sub
pop
test
std
pop
inc
and
cmpsb
add
dec
xor
jle
and
cmp
mov
add
lcall
scas
repz
inc
lock
jmp
icebp
or
pop
ret
lret
lods
in
lods
dec
incl
cwtl
ljmp
mov
fisubl
mov
dec
pop
mov
and
xchg
inc
enter
lahf
xchg
jne
aaa
jmp
mov
cmpl
fisubs
pop
loopne
jp
dec
and
sub
test
insb
shll
ficoms
dec
xor
jge
pop
xor
test
fwait
and
loopne
xlat
es
jmp
imul
loope
js
dec
aaa
outsl
fsubrs
icebp
cmc
sub
xchg
test
mov
push
and
mov
mov
movsb
loop
sub
sub
lret
pop
cmc
nop
pusha
mov
cmp
out
es
push
xchg
xchg
testl
stc
jge
mov
arpl
xor
dec
scas
fiaddl
pop
ret
bound
test
cli
out
dec
jl
mov
inc
xor
movsl
mov
and
sbb
push
or
inc
add
inc
sub
lods
mov
xchg
adc
ds
cmp
fcmovnb
aaa
arpl
out
pop
mov
test
dec
pop
pop
or
mov
jp
hlt
inc
das
pop
mov
mov
add
cmp
ret
pop
mov
movsl
scas
scas
lods
stc
dec
sbb
push
gs
loope
aas
cs
subb
and
add
rcll
sahf
xchg
in
outsl
jl
test
incb
inc
mov
dec
lahf
pop
dec
push
jp
sbb
aaa
xor
cmp
jne
jge
or
mov
and
cwtl
stos
push
adc
icebp
pop
aad
cmp
fdivl
mov
mov
xchg
fucom
adc
or
pop
imul
in
sub
stos
clc
cmp
ret
sub
mov
icebp
mov
popa
out
add
jg
push
push
insb
loope,pn
shlb
jno
andl
and
mov
mov
add
pusha
xchg
or
mov
push
in
ja
jne
fimuls
in
clc
and
stc
mov
cmp
cli
cmpsb
sbb
adc
lret
inc
pop
mov
mov
imul
mov
push
subb
jl
daa
jp
push
mov
ja
mov
push
push
aad
push
push
faddl
cmp
push
cwtl
rcrb
xor
dec
dec
mov
clc
inc
xchg
dec
scas
imul
ret
push
mov
xchg
mov
adc
fdivr
dec
adc
mov
sub
aam
call
sbb
repnz
dec
ret
jae
bound
sti
cltd
lcall
mov
cltd
pop
push
int3
test
or
xchg
add
out
dec
mov
jo
pop
jo
scas
repz
popa
pop
cmc
jmp
mov
mov
mov
or
push
imul
in
push
sbb
mov
iret
mov
or
sub
inc
cmp
mov
lods
lock
lret
jnp
xchg
or
je
mov
dec
and
in
mov
pop
sbb
and
imul
and
orb
jo
sbb
das
outsb
dec
xchg
lock
repnz
pop
mov
inc
fsubrs
shlb
jg
cmp
push
mov
adc
mov
cs
push
lret
cld
mov
sub
andl
testb
in
shlb
jl
push
push
xor
pop
mov
sub
call
xor
inc
and
fnstsw
mov
clc
mov
aad
xchg
cmpsl
aas
cmc
jl
fistps
in
das
fldl
pop
jae
cmp
and
ja
aas
clc
repz
xchg
sbb
add
xchg
add
iret
int
or
rcrb
fcomps
xchg
or
ljmp
mov
inc
mov
adc
jno
xchg
sbb
pop
jno
mov
xor
lcall
scas
mov
inc
xchg
aas
mov
pop
pop
inc
dec
mov
les
xor
mov
out
pop
sahf
jnp
sahf
adc
lret
mov
dec
dec
iret
xchg
fdivrl
leave
xor
push
lahf
sub
out
fcoml
pop
pop
xchg
jg
ret
es
aas
ja
out
push
fcomip
cmpsl
repnz
mov
inc
cwtl
sub
lcall
imul
in
shlb
enter
mov
loopne
fstpt
in
movsb
cltd
add
inc
lahf
rolb
loope
adc
adc
and
or
enter
xorl
shll
aam
mov
jp
test
sbbl
xlat
xor
outsb
add
cmovl
rcl
cmpsl
stc
push
add
sti
sbb
ficompl
push
aam
jnp
pop
stc
stos
inc
mov
out
fs
sbb
sti
imul
push
push
inc
xor
cmp
leave
imul
fmuls
and
dec
xchg
mov
jae
ljmp
ret
or
xchg
jo
gs
inc
dec
loopne
push
cmp
sub
pop
jp
inc
inc
je
dec
mov
mov
fstpt
mov
shr
jg
enter
int3
mov
dec
cmpsl
cs
leave
shll
xlat
iret
xchg
lds
add
sbb
pop
nop
lcall
dec
mov
xchg
stos
icebp
imul
insb
xor
loopne
jnp
js
pop
push
adc
ss
shlb
mov
scas
sbb
in
sub
fdivrs
xchg
or
fcmovnu
mov
popa
adc
std
mov
sbb
repz
in
popf
aas
xchg
std
pop
data16
imul
lret
std
jmp
ret
cmc
aaa
jns
repnz
and
repz
hlt
out
lcall
dec
call
hlt
adc
leave
pushl
das
out
lcall
out
imulb
inc
fisubrl
inc
mov
or
shr
xor
mov
jge
aas
add
cmp
arpl
repnz
rclb
pop
es
test
cmp
inc
xchg
add
rcll
in
subb
or
sub
push
not
test
add
push
call
fadd
daa
fsubl
inc
dec
adc
stc
popa
dec
stos
push
enter
insb
xchg
femms
pop
ds
aas
jmp
inc
xor
ds
jmp
sbb
cmp
jnp
lds
mov
adc
jecxz
cmc
fs
cli
scas
pop
orb
mov
sbb
adc
fsubs
ljmp
shll
and
mov
lcall
push
repnz
cwtl
int
or
icebp
movsb
add
ror
ud2
pop
lea
inc
cmp
cmp
pusha
adc
lods
fcmovu
int3
mov
pop
push
js
fiadds
pop
addb
call
data16
push
sub
mov
cmp
mov
mov
jnp
pop
and
mov
popa
stos
or
mov
jmp
sbb
adc
add
push
test
cmp
out
adc
rorb
or
outsl
adc
cli
sub
fcomp
mov
push
test
in
arpl
ja
outsb
mov
adc
jb
fadds
aad
test
inc
pushf
insl
xchg
adc
xor
add
cwtl
add
ret
scas
jo
add
push
add
mov
jg
push
mov
rcl
test
lahf
out
popf
js
inc
xchg
loope
pop
lea
push
movsb
xchg
sbb
cmp
ds
dec
mov
push
push
call
cmpsb
jmp
push
pop
fcmovnu
mov
rcrb
insl
ja
pop
sbb
dec
sahf
daa
fld
jne
xchg
ss
imul
and
mov
dec
or
jecxz
arpl
or
adc
and
insl
aas
and
dec
mov
jno
test
das
cmp
and
inc
or
dec
cli
xchg
int
dec
lds
or
xor
push
ret
fbstp
ja
stos
xchg
or
jo
add
mov
in
insl
jmp
and
add
mov
loope
jle
aad
mov
clc
xchg
push
cmc
inc
int
shlb
pop
aam
movsl
mov
and
out
adc
push
testl
xchg
mov
cmp
jne
jecxz
jno
pushf
dec
cmpsl
sbb
cwtl
cli
mov
jp
iret
jae
sahf
inc
pop
out
cwtl
imul
aaa
adc
or
and
push
repnz
jno
jo
mov
mov
push
ljmp
mov
mov
lods
pop
jno
push
hlt
jg
outsb
pop
sbb
mov
xlat
xchg
outsb
lret
mov
outsb
cmpsb
sub
repnz
xor
and
repz
push
in
jp
pop
jne
xchg
adc
pusha
pop
adc
insb
cmp
scas
jnp
les
push
test
push
xor
mov
test
mov
push
mov
push
sbb
leave
imul
outsb
cld
sbb
mov
or
daa
and
ja
popa
test
dec
jmp
hlt
fcmovnbe
sbb
es
adc
test
xchg
adc
jecxz
loope
xor
lahf
lea
fcomp
add
aad
dec
fnstsw
xchg
iret
xchg
gs
push
rcll
ret
cwtl
pop
push
mov
add
scas
push
cs
ljmp
cwtl
mov
icebp
and
jb
daa
jge
rcrl
push
aas
and
xchg
cwtl
sbb
add
sub
test
stc
and
add
xchg
and
in
mov
fisubrs
jne
roll
insb
push
inc
aaa
mov
or
clc
movsl
mov
adc
mov
out
dec
jl
addr16
mov
xlat
pop
push
stc
jae
repz
push
push
dec
lcall
jmp
fists
dec
fnsave
lret
data16
cmpsb
add
pop
popa
mov
test
pop
add
je
test
jno
divb
pop
or
adc
mov
aaa
inc
sahf
mov
nop
inc
rcl
add
cli
xor
in
xchg
xchg
das
jl
call
outsl
add
test
mov
inc
cmc
test
int3
dec
adc
jg
pop
mov
pop
iret
icebp
mov
mov
popf
cmp
inc
push
addr16
sbb
out
inc
xchg
pop
add
and
mov
cld
sbb
popa
in
sarl
les
xor
rolb
out
pushf
dec
cltd
jle
mov
in
and
popl
mov
adc
icebp
xor
outsb
sbb
fisubl
enter
xchg
jae
pop
xlat
dec
in
jmp
inc
cmc
adcl
cmp
into
dec
sti
pop
push
or
pop
mov
hlt
sbbl
dec
push
leave
add
push
push
out
ret
dec
or
sahf
cmpsl
sub
add
lcall
addr16
outsb
mov
mov
xor
das
xor
push
scas
jne
mov
mov
icebp
pop
mov
out
dec
dec
and
sbb
fnstcw
cwtl
pop
xor
jecxz
lea
fwait
mov
push
push
stc
enter
and
mov
xor
cmc
ret
popa
or
sbb
lahf
adc
ret
ret
inc
sbb
mov
fwait
bound
adcl
arpl
fs
in
mov
loop
movsb
jp
jp
adc
sbb
mov
inc
dec
jge
inc
pop
jge
xchg
and
loop
sub
loope
test
cs
fdivl
and
imul
adc
pop
add
test
test
mov
aad
pop
mov
nop
cmp
ret
adc
xchg
jmp
enter
push
xor
xor
add
jnp
lods
pop
mov
mov
cs
push
and
test
out
stos
inc
bound
jecxz
push
push
test
in
loopne
rcrb
push
cmp
mov
jge
dec
and
outsl
dec
rol
inc
mov
fs
push
pop
in
push
fs
mov
xor
sub
mov
inc
cmpsl
adc
mov
cmpsl
jb
jae
aad
mov
fsub
es
inc
jns
mov
fnsave
sub
rcrb
icebp
add
in
pop
test
sub
xor
ror
fld
pop
sbb
fld
jb
jg
in
push
pop
pop
fcmovu
call
jns
pop
pop
lods
xchg
cs
mov
jp
ret
test
mov
out
hlt
fs
stos
mov
cs
jae
push
shlb
mov
cmp
ljmp
int
lds
push
rorl
add
popf
xchg
mov
shr
mov
js,pn
jnp
cmp
pop
outsb
jl
dec
movsl
pop
repz
cmp
push
lods
pop
mov
es
lods
cmp
push
adc
or
xlat
sbb
outsl
cmc
arpl
sub
xchg
inc
push
or
movsl
mov
fsub
enter
es
inc
dec
cltd
test
rclb
dec
sub
push
ret
fmul
and
push
and
je
dec
add
cmp
pop
push
lods
xchg
cmc
inc
push
jge
fnstcw
imul
inc
ficoml
sti
mov
push
dec
out
xlat
popl
pop
mov
cltd
inc
aas
lahf
aad
xor
sbb
std
rclb
sbb
pushf
shr
sahf
mov
pop
xchg
xor
or
movsb
bound
pop
addr16
das
pop
lcall
push
pop
movsl
xor
stos
sarb
mov
repz
xchg
insl
cld
fwait
inc
xor
fdivs
fs
and
mov
les
lahf
outsl
jne
pop
fldcw
xchg
sub
imul
cmc
insl
cwtl
pxor
dec
mov
mov
xchg
add
adc
sub
push
cmpsl
dec
push
add
scas
inc
cmpsb
hlt
hlt
xor
and
hlt
inc
lods
mov
mov
jmp
mov
addr16
and
in
inc
pushf
sbb
sahf
cmpsl
lods
mov
ret
mov
pusha
xor
or
cmp
stc
clc
mov
jne
pop
mov
ja
scas
push
outsb
or
call
imul
jg
dec
dec
in
push
loop
pushf
mov
mov
pop
mov
mov
xchg
fisubrl
mov
jp
xor
and
shll
jo
fwait
lret
adc
iret
repnz
inc
jnp
movsl
lock
ret
jge
aam
ret
and
outsl
cld
jg
xchg
mov
es
mov
xchg
and
inc
mov
cmpsb
andl
addr16
clc
mov
dec
mov
fidivrs
xor
repz
out
outsl
cmc
and
pop
mov
or
fnstcw
ja
lock
jmp
sub
or
and
sbb
or
pop
xchg
lcall
movsl
insl
adc
out
cmp
lahf
and
add
jo
aas
outsb
bound
ds
mov
push
lret
adc
sbb
ljmp
jp
jmp
cmp
rolb
loope
dec
aas
push
leave
push
mov
dec
or
push
cmp
movsb
mov
mov
dec
inc
jge
loope
push
or
arpl
fdivs
adc
pop
dec
mov
add
in
pop
and
mov
repz
rcr
je
out
push
notl
shll
test
push
or
xchg
cmp
cmp
imul
xor
and
testb
neg
sti
pop
sbb
jno
sub
and
push
xchg
mov
mov
flds
in
push
fbstp
daa
cld
call
aam
out
push
jb
push
test
dec
xor
test
pop
sub
jne
and
adc
lret
dec
insl
es
sub
cmp
jns
push
or
push
adc
lock
add
dec
pop
dec
cmp
sub
cld
pop
adc
dec
pop
xor
or
insb
xchg
inc
bound
sahf
out
and
inc
cld
insb
add
sub
xorl
inc
mov
mov
mov
fldenv
fwait
xor
pop
mov
cltd
aas
rorl
adc
test
dec
jnp
leave
jne
lock
sub
xchg
mov
shr
out
notb
popf
stc
fmul
mulb
xchg
repz
loop
scas
std
mov
mov
hlt
enter
lret
loop
xor
ficoml
pop
sbb
xchg
clc
mov
ret
cmpl
int
pushf
or
xchg
cltd
xchg
mov
addr16
mov
popf
shl
jo
adc
lahf
fimuls
jbe
jp
dec
cmp
push
xchg
adc
mov
loop
ljmp
push
call
or
jmp
gs
cmpsl
push
mov
fsubrs
jbe
fsubrl
outsl
jb
les
push
xlat
mov
enter
jbe
arpl
sbb
and
add
xchg
jno
lock
hlt
sub
sub
popf
adc
imul
dec
dec
notb
fcmovnb
js
negl
int
fdiv
cmpsl
sub
stos
mov
in
pop
cmpsl
pop
adc
pop
aaa
fcomps
jne
enter
and
mov
cmc
mov
and
cwtl
mov
stc
in
push
cmp
cmp
stos
mov
cli
enter
pop
or
mov
pop
mov
rolb
jmp
xor
cmp
leave
adc
icebp
xor
push
pop
and
cmp
dec
loop
sahf
cmp
xchg
addr16
mov
jb
cmp
push
xchg
mov
push
addb
fsubp
ja
mov
shrb
and
dec
mov
sub
mov
je
out
aas
stc
add
mov
xchg
push
int3
or
jge
sub
inc
xchg
aad
xor
fwait
mov
or
pop
inc
fidivrs
inc
movsb
dec
push
fisttpl
cmc
sarb
insb
mov
aam
ret
pop
sahf
xor
mov
sub
adc
adc
aad
je
push
divl
incl
pop
xchg
sub
std
movsl
aad
fcomps
sti
mov
jo
mov
xor
fmull
insl
icebp
enter
js
mov
dec
and
xchg
push
jnp
repnz
pop
sbb
mov
pop
jo
scas
jbe
mov
stc
xlat
std
jno,pt
sbb
outsl
add
scas
jg
add
stc
xor
push
dec
mov
in
stc
mov
mov
sub
pop
mov
or
mov
mov
stos
inc
pusha
das
icebp
ljmp
mov
push
pop
dec
adc
cmp
xorl
xor
add
sbb
test
fisubrl
push
stos
cltd
dec
stos
xor
stos
idiv
aam
jl
fwait
sti
sub
fdivs
jp
or
loopne
movsb
ret
push
lea
mov
enter
or
add
sbb
sbb
adc
pusha
cwtl
inc
jne
xchg
mov
mov
rorl
js
and
test
scas
cmp
subb
sahf
popf
in
fnsave
lock
pop
mov
mov
mov
sbb
or
push
in
and
and
xchg
mov
js
dec
or
sub
or
push
popf
inc
sbb
sar
shlb
mov
pop
xchg
outsl
into
jecxz
mov
sub
aad
ds
adc
xchg
test
jl
mov
out
repnz
ja
out
sti
xor
xlat
or
movsl
pop
sbb
push
mov
rcll
xlat
and
fidivl
push
lock
push
ss
hlt
scas
dec
popl
mov
repnz
cli
stc
cmp
xchg
sub
and
insl
repnz
push
sbb
popf
inc
bnd
xor
loop
mov
int
cmp
adc
pop
pop
push
dec
sub
insl
adc
loope
mov
nop
pop
sub
and
rcll
xchg
outsl
test
sub
aaa
lea
cmpsb
and
call
stos
cltd
pop
cmp
fstpt
mov
inc
cmpsb
inc
dec
pusha
and
push
leave
pop
cmp
adc
scas
out
push
ret
inc
fs
data16
movsb
xor
dec
sbb
test
outsb
or
mov
jo
push
jl
dec
sbb
mov
jl
js
fsts
inc
inc
cmp
xchg
data16
pop
out
mov
pushf
fwait
adc
cmp
and
push
dec
xor
inc
out
sub
outsb
inc
sahf
ret
popa
inc
rclb
sbb
in
ss
push
rol
incb
mov
out
gs
or
testb
inc
sahf
inc
lods
push
add
xchg
fcomps
add
cmpsb
adc
push
and
pop
cli
adc
daa
repz
sub
add
imul
lea
mov
inc
ret
cmpl
xchg
es
add
lea
rorb
fwait
scas
out
mov
sub
mov
mov
fisttps
call
filds
clc
shlb
and
mov
cltd
inc
mov
bound
xor
ret
sub
gs
mov
dec
mov
movsl
aas
lds
dec
pop
int
xchg
xorb
push
push
cmp
mulb
sarb
jp
mov
mov
ss
mov
add
xor
cmp
and
xor
aaa
jecxz
loope
out
and
std
mov
jp
jmp
add
mov
sub
mov
popa
sub
cmc
mov
jnp
mov
and
jg
xlat
xor
jmp
gs
cs
push
shlb
push
dec
fcmovbe
movsl
shlb
daa
mov
mov
adc
clc
xchg
into
cwtl
scas
imul
insl
jl
orl
lods
mov
fistpll
mov
and
sub
clc
push
dec
test
jns
mov
xor
xor
mov
or
lcall
inc
fbld
loop
sahf
mov
lods
and
push
outsb
adc
mov
dec
lea
add
pop
mov
jbe
shlb
jns
in
mov
jl
and
cltd
aam
sbb
ror
js
pusha
pusha
mov
ljmp
pop
push
into
out
jmp
add
lret
jae
push
popa
stos
in
dec
pop
add
flds
cmc
sbb
cmp
out
add
add
add
movl
ret
adc
push
xor
inc
xchg
pop
cmp
jbe
xchg
or
dec
inc
pop
inc
mov
mov
incb
lea
out
pop
push
dec
filds
sbb
fadds
cld
add
clc
xor
adc
jns
sbb
icebp
or
test
scas
xchg
enter
jnp
xchg
or
lods
mov
pop
and
push
cld
repnz
shrl
movsl
sbb
sub
cmp
push
fidivs
mov
aam
jecxz
xchg
cmp
lods
sbb
mov
sarl
sbb
pop
fidivl
ss
push
dec
aad
lods
jns
mov
dec
pop
loopne
xor
scas
xlat
test
sbb
mov
jg
and
loopne
sbb
mov
push
mov
pop
fimull
mov
and
pop
mov
rolb
mov
movsl
mov
loopne
jl
inc
or
into
lds
shlb
add
xchg
inc
adc
shl
or
mov
adc
xchg
or
cmp
jno
jg
and
mov
aaa
cld
arpl
and
jne
stos
loope
je
in
push
adc
repnz
push
and
test
sub
xchg
mov
fiaddl
jge
aad
and
mov
shrb
sub
stos
mov
push
jo
jle
and
out
scas
das
xchg
mov
jns
daa
insb
rcrb
decl
movsl
pushf
movsb
lods
mov
inc
and
scas
jle
pop
shll
outsb
sbb
cmp
jle
ja
dec
or
loop
cmp
mov
mov
xor
jecxz
ljmp
test
jnp
rcrl
mov
testb
jno
xchg
imul
shl
rolb
xchg
and
sbb
mov
and
jbe
ret
in
mov
rcrb
and
mov
in
xchg
lods
cmp
add
add
inc
cmpsb
testl
xchg
adc
mov
hlt
in
xor
mov
sahf
in
femms
jl
out
out
sahf
jnp
mov
imul
inc
xchg
hlt
xlat
in
xchg
sti
outsl
push
cmpsb
push
mov
shr
pop
inc
sub
adc
ret
jle
xchg
or
xchg
ret
in
int3
cmp
jo
xor
xchg
xchg
loop
mov
mov
lock
or
out
daa
xor
daa
fnstsw
mov
fs
jge
rorb
popa
std
or
mov
inc
rcll
xchg
mov
cmc
jecxz
into
rolb
pop
js
repnz
out
adc
lret
pusha
adc
mov
jns
je
loop
sti
xlat
xor
je
mov
inc
jb
mov
cmc
lock
test
push
rolb
aam
jbe
pop
and
pop
fidivl
sahf
and
mov
sbb
sub
or
jg
sbb
xlat
fs
xor
adc
outsl
adc
cmp
xchg
xor
mov
iret
pop
enter
add
pusha
ret
push
dec
testl
pop
sub
mov
mov
in
sti
jno
daa
or
addb
xor
pop
enter
mov
subps
sub
or
shrl
jb
ret
pushf
mov
shlb
pop
mov
xchg
out
and
dec
cmp
adc
in
int
inc
mov
push
fmul
add
lods
pusha
pop
out
sub
ds
into
jl
insb
lret
mov
and
or
lahf
les
lcall
cmp
flds
push
mov
mov
or
jecxz
loopne
mov
pop
int
outsb
sarb
jae
jne
cmp
lret
loop
fisubl
jle
push
xchg
ss
rcr
jae
aad
fstl
add
mov
inc
or
adc
mov
sbb
mov
sub
mov
inc
adcl
std
jae
cmp
fs
inc
imul
ljmp
mov
xor
fidivrl
fdiv
fdiv
insl
xchg
in
pop
add
jecxz
insb
dec
fldt
inc
jbe
test
ds
mov
pop
inc
xchg
fists
loop
ret
jo
mov
popa
or
add
addr16
or
out
fimuls
sbb
std
out
adc
scas
xchg
mov
loop
into
xchg
push
mov
insb
inc
mov
pushf
pop
jp
xor
add
gs
addl
or
cmp
iret
loopne
leave
mov
push
mov
inc
sbb
lock
mov
leave
jle
inc
inc
mov
ret
mov
add
in
xor
cmp
xchg
and
sbb
mov
push
pushl
popa
xor
sub
sbb
popa
scas
fdivl
push
inc
sbb
mov
aas
pop
mov
mov
dec
xchg
ret
mov
mov
mov
daa
mov
lods
inc
clc
lock
popa
sbb
test
fisubrs
lret
jmp
sti
push
daa
sbb
and
lods
shl
mov
jmp
les
jns
dec
pop
push
fwait
mov
jecxz
push
cmpsl
sub
enter
push
ljmp
aaa
xchg
mov
icebp
and
pop
test
fcmovb
sub
in
or
lret
cli
dec
mov
leave
std
push
roll
dec
xchg
insl
jle
shlb
dec
and
pop
jne
jmp
jbe
das
adc
fisubs
push
aas
gs
mov
rcrb
rclb
sbbl
inc
or
cltd
pop
fstp
ret
dec
ffree
lock
loope
xchg
loop
ljmp
mov
in
pop
and
sub
xchg
stos
pop
mov
sub
jg
cltd
sub
pop
mov
mov
add
sbb
ja
mov
mov
jae
fisttps
lahf
sbb
sti
sub
testl
adc
rcr
int3
ror
push
pop
xchg
lods
mov
in
test
fistl
je
movsb
es
hlt
es
sub
jecxz
push
lock
mov
sti
adc
vpsllw
sub
dec
mul
mov
xchg
dec
cwtl
xchg
inc
jmp
movsl
sahf
test
scas
mov
outsb
jne
pop
push
push
jns
mov
push
jne
in
add
int3
mov
outsb
mov
mov
andb
sbb
pop
movsb
lea
shrl
movsl
in
and
sub
cmpsb
cmp
and
jl
nop
mov
push
popa
dec
cmp
push
or
les
lods
gs
sbb
std
out
cmpsb
xor
jbe
dec
or
jne
movsb
jp
movsb
add
inc
or
xor
push
test
jg
push
add
pop
push
xor
inc
pop
iret
and
adcl
ds
mov
jno
xchg
pop
stos
add
pop
sarl
mov
iret
sbb
jge
insl
jbe
mov
enter
mov
jns
pop
cld
pop
mov
mov
jnp
add
test
lock
test
sbb
jge
sbb
sarl
repz
pop
mov
cmpl
xor
out
test
addr16
out
xchg
jne
shlb
pop
loopne
inc
and
call
mov
ja
loope
es
out
mov
add
inc
out
mov
add
test
sub
in
das
jecxz
xor
test
dec
outsb
xchg
addl
mov
inc
mov
push
push
cmc
mov
inc
jne
xchg
jmp
mov
addl
pop
inc
jge
mov
ss
scas
and
cmpsb
cmpsl
icebp
push
shl
mov
sub
gs
ret
and
jno
rcrb
stos
ret
jl
mov
rcl
cmp
adc
and
sahf
mulb
sub
inc
xchg
pop
push
ds
inc
cmp
mov
sub
jge
insb
cli
idivl
mov
mov
add
fwait
insl
movb
ja
jg
imul
push
cmp
mov
lret
xchg
adc
les
pop
sbb
pop
fistpl
xchg
int
jbe
cmc
dec
sbb
push
mov
lds
movb
je
xchg
lahf
adc
dec
leave
lock
bound
adc
jne,pt
fstpl
or
sub
stos
adc
add
ljmp
enter
xchg
pop
cmpl
aas
sub
mul
mov
and
std
scas
sub
or
fwait
test
push
inc
mov
int
dec
addr16
imul
pop
hlt
std
lock
cmpsb
ficoml
popf
repnz
and
adcb
jl
xchg
ss
push
mov
and
cmp
aad
mov
ret
clc
adc
push
inc
pop
or
scas
cmp
lods
xchg
insl
lods
fstpl
jns
cwtl
pusha
and
jb
mov
in
jbe
popa
mov
sub
or
mov
ds
or
cld
shrb
or
mov
mov
push
push
push
pop
mov
mov
jmp
cmp
mov
mov
stc
mov
inc
clc
loopne
repnz
shl
inc
fsub
lcall
fdivp
sarl
dec
push
sahf
jmp
jnp
xchg
inc
mov
test
outsl
push
mov
pop
adc
add
repnz
jp
pop
js
shlb
in
xchg
add
dec
call
aam
outsb
sub
jnp
mov
ljmp
movsb
sub
xor
jne
cmc
push
mov
cmp
and
arpl
cs
pop
cbtw
pop
sbbl
cmpsb
sahf
outsb
mov
push
jge
stc
xchg
rcrb
mov
sbb
adc
cmp
mov
sbb
dec
cmp
sub
fisubl
jo
mov
popa
xchg
push
test
sbb
outsb
pop
and
in
mov
xorl
or
xchg
mov
add
xorb
jb
xor
mov
jno
adcl
cmp
mov
lock
inc
and
adc
and
xorl
inc
out
adc
or
data16
sub
popa
scas
xchg
mov
sbb
push
pusha
mov
icebp
daa
mov
mov
push
lahf
mov
inc
cld
loop
and
sti
sbb
and
test
imul
repnz
pop
imul
arpl
adc
or
sub
xchg
out
xchg
cld
scas
mov
pop
fistl
fdivrl
jmp
push
dec
adc
or
mov
push
cmp
push
and
push
pop
divb
rcrl
inc
outsl
sbb
out
adc
sub
adc
aam
enter
int3
aaa
cmp
adc
str
scas
adc
add
pop
sbb
bound
lods
jle
out
andb
sahf
add
mov
xchg
loop
out
and
add
test
ja
push
ljmp
sbb
jp
pop
add
rcr
xor
jl
inc
test
mov
scas
jle
xchg
mov
pop
cmpsb
adc
into
test
icebp
ret
sub
or
adcl
leave
jo
scas
fcmovne
scas
loop
jb
aad
jmp
mov
or
cmp
mulb
push
ja
enter
push
cld
xor
lea
xchg
loop
movl
pop
fcmovnu
or
lahf
adc
into
mov
loop
push
or
dec
arpl
adc
std
inc
jb
xchg
stos
jne
popa
cltd
push
xchg
cmp
sarb
push
hlt
mov
neg
cwtl
out
movsb
inc
push
ja
sbb
inc
adc
test
arpl
or
movsb
xor
and
rolb
xor
xor
inc
xlat
pop
mov
inc
in
mov
xchg
push
inc
mov
aas
loope
outsl
shrl
sbb
inc
cmp
nop
dec
mov
inc
ja
cltd
fildll
dec
out
daa
mov
pop
enter
push
xor
jbe
lcall
movsl
testb
dec
dec
mov
js
and
mov
movsl
push
xchg
sub
mov
add
leave
xor
scas
sbb
cmpsb
or
mov
mov
test
or
rclb
jl
sub
ret
mov
lock
pop
adc
pop
add
es
mov
push
ficomps
push
call
push
nopl
lret
imul
popa
add
xor
int
arpl
jbe
data16
movsl
mov
insl
pop
dec
dec
sbb
cmpsl
jae
add
test
sbb
ss
insb
jb
ljmp
xchg
frstor
ret
sbb
jl
aas
imul
das
das
xchg
data16
adc
jns
test
shr
add
jnp
xchg
nop
mov
dec
repnz
mov
jge
cwtl
es
xorl
scas
mov
imul
aam
mov
sbb
arpl
aas
fsub
ja
sub
xchg
js
cmpb
sahf
xchg
in
xchg
push
sbb
inc
dec
repnz
mov
add
ret
cmp
xchg
stc
imul
pop
mov
ljmp
rcrb
int
sti
or
outsl
push
ljmp
mov
bound
push
shlb
cmpsb
pushl
out
push
sub
mov
jg
loope
ss
inc
repz
int3
xor
inc
fchs
sahf
xor
xchg
in
sub
enter
push
fstp
cwtl
stos
mov
sbb
loopne
idivl
fcmovnb
ret
aam
mov
fs
xor
test
negl
bound
shlb
shl
cmp
sbb
icebp
scas
adc
or
cli
and
sub
jmp
enter
hlt
lret
mov
mov
sub
aaa
sub
and
pop
pop
js
cmc
cmpsl
cld
in
mov
test
lret
mov
es
mov
xor
test
push
or
add
or
inc
adc
iret
pop
add
push
test
mov
sti
add
xor
loopne
push
mov
cld
out
sbb
pop
xchg
clc
into
aas
call
aas
iret
fs
or
loope
int
ss
cmp
cld
test
addr16
jnp
xor
sub
cmp
std
test
shll
mov
out
xchg
xor
aas
jo
cmpsl
dec
and
push
xchg
mov
xchg
and
jecxz
pusha
or
or
lcall
pop
cmp
push
cmp
adc
andl
test
adc
cwtl
jge
add
leave
fwait
inc
sub
subl
in
imul
fcomp
mov
fadds
pop
in
cmc
sbb
pop
int3
cmc
hlt
push
dec
sub
mov
mov
andl
cmpsb
mov
xchg
shr
push
lahf
pop
mov
imul
mov
cld
xchg
push
icebp
idivl
lahf
lahf
pushf
mov
push
cmp
rcrb
fisubrl
jno
loope
xor
sub
inc
or
pop
icebp
cld
sarl
xchg
inc
fcomip
mov
pop
mov
sbb
inc
jne
mov
cmp
ja
mov
stos
mov
or
inc
stos
inc
push
push
repnz
pop
add
std
sub
orb
jnp
popf
cli
lahf
inc
jnp
std
mov
mov
cmp
mov
mov
scas
mov
popf
scas
icebp
mov
out
jb
mov
in
out
add
adc
cwtl
inc
pusha
in
fcoms
dec
pop
and
inc
dec
pop
cmp
add
push
je
es
mov
shr
out
insb
adc
xchg
inc
out
repnz
push
add
push
mov
pop
xor
movsl
pop
push
lods
mov
xor
imul
push
adcl
cli
test
add
push
cld
pop
loopne
in
xchg
mov
jae
push
add
mov
fstenv
ret
in
lods
imul
out
add
ss
and
fmul
sub
mov
pop
lods
je
sbb
jae
sbb
loop
sub
adc
int
push
rcll
jl
lret
outsl
push
outsl
pop
into
push
pop
sbb
in
insb
sbb
dec
mov
int
movsb
out
jle
sub
dec
lret
minps
pop
fldl2t
movsb
inc
mov
outsb
lcall
lods
daa
into
pop
mov
mov
mov
jnp
dec
ss
loop
jmp
xor
ja
mov
sub
pop
dec
ja
cmp
mov
xor
jge
inc
push
add
ficoml
xchg
pop
jne
sub
push
ret
mov
in
jbe
mov
stc
lcall
ljmp
test
pop
xchg
dec
imul
cli
shl
xchg
mov
loope
adc
pop
gs
insl
scas
out
jp
jne
add
jp
push
xchg
mov
pop
jae
pusha
mov
or
cli
nop
lret
sub
shl
and
cmp
lods
popa
inc
cs
xor
lods
inc
sbb
push
jecxz
and
or
mov
movsb
mov
cld
pop
dec
and
lds
dec
push
dec
ss
int
sbb
add
popa
orl
daa
dec
sbb
dec
push
lret
jne
xor
cmp
addr16
push
add
repnz
or
mov
imul
mov
lds
jecxz
into
xor
mov
add
sub
or
std
subl
leave
in
shll
insb
sbb
add
cmp
cmp
enter
adc
cmp
mov
mov
pop
std
fldcw
adc
adc
push
sub
add
jnp
push
push
mov
mov
lea
inc
out
imul
sarb
jbe
jae
xchg
punpckhdq
daa
cmp
mov
popa
icebp
push
jge
pusha
mov
cmc
or
mov
adc
sub
add
aas
adc
in
inc
push
jno
jne
lods
dec
cmp
test
lahf
pop
fisubl
stos
lds
mov
push
dec
push
std
sub
pop
loopne
sbb
arpl
dec
bound
xchg
dec
mov
jb
and
jle
adc
cli
aaa
aam
adc
adc
add
out
mov
sub
inc
ret
test
mov
enter
jbe
mov
out
int
mov
xchg
adc
mov
jge
mul
dec
push
mov
bound
mov
mov
mov
xchg
stc
and
push
cmp
xor
les
lcall
lcall
inc
push
fldcw
sub
loop
repz
enter
lret
int3
push
enter
imul
fistpll
sahf
in
xor
iret
lcall
call
xor
cli
pop
into
insb
xchg
shrl
je
add
sub
xor
loopne
xor
fcmovbe
insl
lret
pop
in
mov
mov
gs
dec
in
ja
inc
inc
dec
flds
xchg
lcall
dec
repz
sbb
and
popa
cmp
imul
add
int
dec
nop
clc
and
cld
dec
xchg
add
stos
mov
xor
cli
xor
iret
mov
inc
mov
aam
movsb
sti
adcb
xchg
sub
push
add
jle
inc
sar
and
ret
punpckhdq
ret
gs
cmp
addr16
repnz
js
mov
adc
icebp
pop
jnp
fstl
std
or
push
adc
xchg
adc
lea
sbb
xchg
xor
or
in
in
lcall
fbstp
sbb
jle
jge
ja
lret
pop
jecxz
fsubl
jg
stos
lock
das
push
push
inc
mov
pop
movsb
jg
mov
aad
outsl
lods
out
dec
sub
adc
lods
cmc
add
mov
out
fs
aaa
mov
or
shlb
fstpl
incb
pop
test
inc
dec
xchg
stos
lds
loopne
fmuls
inc
scas
push
les
shll
mov
into
dec
lock
mov
in
ficoms
aam
and
inc
jmp
sub
push
mov
jno
insl
and
daa
cmp
out
sbb
pop
cld
sub
adc
pop
es
mov
je
cltd
xchg
int
mov
mov
popf
sub
fidivrl
cmp
sahf
pop
mov
pop
push
sub
dec
lods
adcb
out
xchg
cmp
or
adc
js
xchg
lahf
pop
or
push
xor
mov
pop
imul
mov
jp
cmp
movsb
mov
shlb
mov
ret
es
add
push
fs
xchg
ficompl
push
xchg
pushf
mov
ja
in
repz
icebp
into
xchg
testl
in
mov
xchg
jo
inc
pop
mov
jmp
mov
push
int3
je
sbb
incl
add
or
test
pusha
or
mov
sub
clc
xlat
inc
sbb
leave
shll
ret
mov
test
enter
or
testl
add
faddl
adc
and
test
shl
pusha
jg
movsb
pop
sahf
or
cli
xchg
cltd
adc
or
push
cmpsl
jne
or
int3
icebp
das
jns
xchg
lret
adc
mov
test
jne
in
stc
out
fwait
ret
adc
movsb
mov
scas
pop
ret
jg
lahf
int
in
jno
adc
pushf
mov
arpl
jnp
imul
lahf
inc
cwtl
inc
outsl
rorb
test
shll
movsb
neg
xchg
mov
and
sbb
scas
mov
xchg
adc
xchg
mov
lods
imul
movsl
stos
add
leave
aad
arpl
mov
divps
fidivl
imul
subl
adc
jae
inc
das
xchg
pop
fisubrl
jns
mov
sbb
outsb
mov
cwtl
inc
push
std
movsb
scas
cmpsl
jns
jnp
add
inc
js
lret
inc
xchg
stos
mov
notl
or
mov
icebp
pop
mov
int
fbld
adcl
sub
sbb
lock
pop
shlb
mov
mov
cmc
mov
cmpsl
out
repnz
lods
dec
shl
xor
add
xor
rcrl
lods
notl
out
ffree
fimull
cld
mov
push
pop
add
pusha
inc
inc
inc
iret
jo
aaa
nop
inc
cmp
xchg
insb
outsl
xchg
xor
pop
fisubrl
or
repnz
mov
insl
cs
orb
xor
add
mov
mov
push
sub
or
ljmp
out
add
lahf
inc
mov
push
sti
lods
inc
mov
jp
jp
jae
sbb
out
mov
sbb
f2xm1
sub
jnp
pusha
mov
jb
hlt
mov
mov
push
out
pop
pop
mov
sub
adc
arpl
aad
inc
xchg
ljmp
jns
pop
cmp
imul
xor
loopne
aam
je
mov
xchg
push
mov
iret
shl
inc
adc
cmp
int
sub
or
xchg
jo
mov
cmp
xchg
gs
mov
push
or
pminub
lret
dec
mov
mov
repz
mov
test
enter
call
push
bound
mov
mov
addr16
idivb
call
addl
shlb
mov
fwait
add
stos
sbb
and
dec
or
shl
sub
jp
mov
sbb
dec
outsl
jmp
add
gs
cmp
fcoml
loope
leave
mov
call
fistpl
cmpsb
adc
mov
mov
xlat
xchg
hlt
push
in
arpl
sbb
movsl
mov
shr
jbe
xchg
fscale
fimull
sbb
xor
add
xor
bnd
pop
push
jae
out
add
clc
xchg
aaa
int
xchg
movsb
push
sub
sbb
inc
jns
std
push
mov
test
cmp
fnstsw
inc
ljmp
sbb
xchg
popa
orw
in
lock
ret
in
cltd
cs
mov
roll
lret
in
and
push
mov
xchg
xchg
ret
sbb
push
jmp
adc
xor
push
pop
sbb
rol
or
pop
aas
mov
icebp
sub
in
or
mov
jno
and
sbb
sub
dec
enter
movsl
xchg
insl
fadds
sub
out
leave
add
js
fisubrl
sbb
add
mov
mov
lods
or
icebp
inc
push
js
popa
xor
mov
adc
lods
fcoml
jge
push
imul
arpl
pop
mov
and
xchg
insl
shrb
cmp
pop
xchg
fadds
jns
xlat
out
xor
cmpsb
cmp
aaa
mov
popa
and
bound
mov
fisubrl
push
mov
sar
out
pop
adc
mov
push
pop
enter
jae
push
adc
jle
xchg
xchg
cltd
dec
ret
mov
scas
xchg
stos
cmp
sub
ret
cltd
dec
sbb
inc
xchg
push
mov
dec
popa
ja
pop
mov
pop
sti
adc
push
xor
fsubr
dec
repz
shrl
mov
inc
hlt
push
pop
jne
dec
fistpl
iret
sub
xchg
hlt
mov
cmp
sub
data16
pop
shrw
jb
mov
aas
icebp
movsl
adc
enter
mov
pop
jb
push
rorl
sahf
fwait
mov
roll
mov
repz
xchg
test
mov
and
jno
sbb
test
lret
fiadds
sub
movsl
sbb
fs
lahf
test
lock
xor
aad
lods
imul
pop
fcoms
cmp
jnp
jl
adcl
pop
jns
arpl
mov
pop
pop
cmpl
mov
hlt
les
mov
iret
lcall
dec
das
mov
mov
leave
int
pop
int3
mov
mov
dec
xchg
mov
stos
cli
aam
lret
sti
xor
inc
ret
add
jb
xor
lret
pop
pop
pop
dec
fstps
outsb
xchg
mov
mov
faddl
add
in
pop
push
mov
push
xchg
push
xor
add
jnp
loopne
mov
add
xchg
fstl
cmp
inc
or
mov
push
push
mov
add
mov
and
mov
dec
jns
sbb
andb
loopne
lahf
insl
arpl
cmp
add
mov
xchg
ljmp
mov
lahf
aad
xchg
mov
ja
in
aaa
ficompl
xor
ret
pop
inc
push
arpl
adcb
es
insl
test
inc
fadd
loope
popf
test
pop
insb
test
and
xor
fistl
xchg
int
fdivrs
pop
inc
cmpsl
lahf
add
push
orb
mov
push
sbb
fcoms
aas
mov
adc
dec
add
sub
sbb
mov
xchg
insl
insl
lahf
cwtl
filds
lret
aaa
xor
inc
push
jg
xchg
push
mov
xlat
xchg
and
xchg
ret
and
xlat
pop
lret
jp
fcomip
rcll
lret
sub
in
sub
lds
rcll
inc
jns
lds
mov
inc
fdiv
dec
xchg
mov
lret
clc
pushf
je
lods
mov
or
and
shlb
fwait
stos
test
movb
repnz
mov
jecxz
cmp
popf
in
fs
cmp
nop
mov
mov
out
test
movsl
cmp
bound
and
inc
test
aas
mov
pusha
mov
cmp
adcb
mov
push
mov
push
dec
xchg
mov
pushf
push
and
sub
dec
movl
data16
data16
ret
push
add
inc
pop
add
mov
inc
int3
jmp
add
jle
add
pop
push
inc
jmp
push
shlb
mov
inc
movups
imul
add
or
add
stos
out
xor
mov
mov
or
ja
inc
out
mov
cli
test
jge
sbb
fsubrs
mov
loop
mov
or
call
pop
insb
imull
fnstcw
xchg
ret
xchg
jno
jae
pop
test
mov
dec
cmc
scas
imul
adc
cmp
xchg
jne
movsb
mov
jnp
mov
adc
stos
mov
adc
iret
add
mov
cmp
addl
xor
repnz
mov
lea
inc
ja
sarb
mov
stos
movsb
test
icebp
pop
loop
or
bound
sbb
pop
mov
andb
xor
push
sub
xchg
fwait
push
rcrb
xchg
and
mov
jge
mov
imul
or
jo
repz
or
or
dec
mov
or
dec
xor
sub
push
lret
push
js
sbb
leave
or
fcmovbe
sbb
sbb
arpl
sar
dec
jmp
mov
mov
add
mov
loopne
addr16
mov
cs
pop
jmp
sub
loop
ret
lcall
push
sub
mov
push
xchg
arpl
mov
fadd
xorps
pop
mov
mov
mov
jmp
cmp
cmc
xor
adc
jge
outsb
xchg
cmpb
mov
int3
lds
cltd
addr16
xor
ja
lcall
cmpsl
aas
cmp
mov
jle
sub
jnp
inc
push
call
cmc
mov
in
cmp
jne
cmp
in
aad
push
insl
adc
sbb
stos
lret
cwtl
cmp
mov
inc
scas
int3
call
into
mov
repz
outsl
lahf
xchg
mov
outsb
sahf
mov
in
sub
add
push
push
movsb
ret
ffreep
aam
fs
shr
test
jb
mov
inc
mov
cmc
popf
imul
aaa
inc
fcmovbe
jmp
pop
enter
int3
cmpsb
add
push
lods
cli
jl
push
lcall
push
iret
or
xlat
cmp
rcrb
cltd
insl
addb
cmp
stos
cmpsl
xor
or
dec
mov
xorb
scas
shrb
aas
loopne
aam
dec
pop
int
out
dec
cmp
std
mov
pop
pop
and
cmp
pop
jae
fcmovne
aad
inc
lcall
dec
aaa
in
jno
add
pop
mov
fisttps
add
adc
jp
sahf
sar
jnp
dec
mov
inc
push
push
xor
pop
or
inc
add
jbe
pop
jge
test
jle
incb
or
adc
mov
cld
ret
push
lcall
lret
mov
enter
or
insb
mov
cmc
gs
lds
and
inc
push
inc
xor
sub
cmpsb
rolb
jb
adcb
cmp
mov
cmp
jo
or
movsl
mov
mov
std
mov
lds
and
movsb
out
pop
or
rcl
pop
test
xchg
sbb
fisubl
or
lret
dec
fstp
xor
jnp
enter
xchg
pop
jecxz
js
mov
push
test
aas
xor
add
inc
jae
sahf
lods
ljmp
and
shlb
test
mov
mov
mov
add
sti
adc
adc
mov
jle
pop
imul
es
aad
cmp
shlb
sbb
jnp
jmp
enter
xchg
stc
push
xchg
jmp
outsl
xor
jle
pushf
shr
fldt
bound
cmovnp
rcl
and
cmp
xchg
nop
add
loop
push
lcall
sub
xchg
test
cmpsb
mov
loop
scas
mov
cmp
mov
inc
sub
imul
inc
out
pop
je
xchg
sub
pop
jb
cltd
cmp
mov
popf
sbb
aas
sbb
mov
out
or
or
ljmp
push
faddp
pop
pop
nop
sbb
fnstenv
sbb
lret
jg
sbb
clc
repz
jp
lds
mov
push
adc
popa
lcall
push
cmpsb
leave
inc
push
sahf
stc
or
arpl
mov
repz
add
iret
sub
shlb
mov
pop
mov
hlt
mov
punpcklwd
xchg
xchg
mov
add
icebp
mov
mov
xor
sub
mov
and
nop
jp
mov
mov
lret
pop
add
imul
hlt
sbb
test
mov
orb
cmpsb
sbb
add
fwait
pop
nop
jl
pop
add
mov
popf
in
mov
dec
sub
jge
add
mov
inc
xchg
jnp
arpl
ret
mov
mov
xor
call
mov
jb
idivl
sbb
mov
adcb
adc
lods
push
pop
mov
inc
inc
xchg
das
rclb
sarb
push
repnz
push
std
fdivrs
adc
mov
inc
xchg
cmp
sbb
sbb
jmp
jb
insb
or
in
inc
int3
fwait
add
pop
icebp
mov
bound
xor
pushf
int
aad
xorb
and
dec
or
test
out
rcrl
shr
mov
xchg
int3
xchg
push
and
bswap
pusha
data16
pop
push
mov
push
pop
jle
fs
adc
lret
or
outsb
test
mov
stos
test
jno
jecxz
aam
outsl
jge
push
or
in
test
dec
js
out
lahf
dec
xchg
adc
mov
js
mov
testb
or
pop
pop
push
and
movsl
into
push
sub
rcr
push
ljmp
js
add
fbstp
xor
cmc
jns
xor
movsl
cmc
rclb
pop
sbb
adc
cmpsb
test
dec
stc
imul
in
divl
sub
mov
dec
aad
std
sub
xor
pop
out
popa
enter
test
sbb
and
push
sub
dec
and
into
mov
pop
push
sti
pop
inc
xor
jp
scas
push
popf
pop
dec
fisttps
pop
cwtl
aad
scas
fdivr
arpl
mov
cmp
push
pop
out
sti
inc
fimuls
add
sub
cltd
aad
adc
jp
mov
ljmp
popf
and
cmp
dec
nop
mov
cmp
mul
inc
out
leave
lock
and
fidivl
cmp
les
mov
cmp
jg
mov
cmp
int
repnz
mov
ret
mov
inc
jmp
sbb
nop
mov
aad
inc
aad
adc
xlat
ljmp
cld
cmpsl
std
decb
or
cli
push
cmpsl
ja
fs
stc
fsts
xlat
jns
adc
dec
repnz
push
jb
jns
add
mov
pop
dec
mov
aad
fs
cmp
mov
cli
add
cmp
pop
adc
fnstenv
fdiv
iret
inc
movsb
lahf
sub
push
inc
mov
mov
into
out
mov
jmp
xlat
loope
inc
push
push
imul
mov
adc
push
xchg
add
es
fldt
or
jb
pushf
aad
pop
mov
sti
cmp
pop
push
ss
test
ljmp
int3
imul
lea
fcmovne
push
xor
outsl
lret
loopne
add
mov
mov
jo
add
std
xor
out
mov
push
mov
outsb
mov
stc
cltd
jae
mov
cmp
ds
test
in
mov
insb
fiadds
push
inc
pop
int
xchg
sub
pop
insb
cmp
jp
mov
lret
repz
jb
jge
cmp
cmp
inc
sub
and
inc
push
xor
pop
fs
mov
sbb
fs
pop
inc
addr16
push
lock
cld
repz
sbb
or
stc
dec
jno
daa
out
xchg
pusha
pop
jno
das
data16
xchg
add
xor
bound
add
adc
aam
xchg
popa
fsts
sbb
subb
dec
pop
pop
popa
int
aad
insb
mov
andl
jno
test
inc
scas
xchg
adc
pop
loop
mov
lret
inc
xlat
test
pop
out
shlb
mov
jle
outsb
mov
dec
dec
mov
adc
faddl
xor
sahf
xchg
gs
test
jnp
fsubrl
push
shll
pop
xchg
test
xor
daa
xchg
inc
or
test
fimull
inc
sbb
xorl
add
and
lods
sahf
xchg
fadds
pop
and
jo
jle
ja
jo
lods
jge
rorl
sbb
insb
pop
mov
inc
sub
mov
mov
pop
push
int
in
scas
adc
out
lret
call
or
add
ja
and
inc
sub
push
mov
cmp
adc
nop
bound
mov
lahf
sbb
xchg
jl
sub
pop
dec
pushf
in
jne
cld
jb
push
jg
xchg
pop
fldcw
jle
mov
insb
jnp
add
cmp
andl
sub
sub
xor
xchg
clc
pop
movsb
inc
mov
mov
mov
jle
push
push
push
shlb
scas
rcrb
ret
or
sub
nop
mov
add
and
sahf
mov
add
and
int3
pop
push
or
fnstenv
ja
scas
jmp
test
mov
jl
loop
push
pop
insl
jg
xor
cltd
adc
nop
dec
out
pop
mov
and
stos
jg
mov
ret
fisubl
decb
subl
cmp
dec
scas
add
les
cld
inc
adc
pop
test
lea
scas
inc
inc
sub
xor
mov
rorb
insb
insl
inc
insl
test
or
cmc
ja
mov
scas
out
adc
jb
adc
daa
lahf
scas
push
inc
call
pop
ljmp
add
decb
jle
xchg
icebp
inc
shrb
cmpsl
add
cmp
repnz
pop
jp
into
pop
mov
pop
pop
pop
push
icebp
inc
imul
cmp
enter
idivb
cmp
pushf
jge
xchg
stos
xor
out
jo
adc
mov
mov
xor
sarl
pop
or
cli
stos
pop
data16
jae
dec
mov
pushf
lods
add
pop
adc
jle
pop
aad
pop
cmp
sbb
aam
pop
scas
inc
mov
andw
rolb
mov
js
ds
mov
cmp
push
xor
xchg
mov
or
jbe
mov
cmp
scas
pop
js
sub
adc
push
sub
lea
lahf
aaa
mov
cmc
mov
push
add
and
xchg
mov
inc
sbb
and
pop
pushf
adc
scas
push
mov
je
gs
lods
dec
jae
xchg
inc
mov
add
jecxz
ss
pop
and
cmp
in
sbb
fcmovnu
andb
and
mov
mov
sub
cmp
xchg
jo
mov
aas
rol
add
int
mov
jge
popa
cmp
add
sbb
sub
fwait
sub
jae
fnsave
int
mov
jp
into
pop
mov
xor
shl
test
lds
sahf
xchg
dec
aam
cmp
je
test
cmp
adc
pop
cmp
aam
dec
sbb
insb
fwait
rclw
inc
adc
pop
iret
cmp
idivb
ds
xchg
push
lds
xor
andb
mov
imul
adc
mov
mov
inc
adc
shll
add
inc
in
jnp
pop
testl
cltd
lret
pushf
push
dec
out
fcomps
mov
inc
and
test
jbe
lods
xor
jge
repnz
ja
ss
in
lds
cvtpi2ps
scas
pop
cmp
sbb
sub
or
into
lock
dec
nop
add
sub
xchg
mov
cmp
cmc
int
mov
push
inc
out
inc
mov
repnz
mov
out
sub
pop
xorl
aaa
adc
xchg
mov
dec
sahf
mov
mov
aaa
fscale
or
mov
fstps
xchg
ds
sbb
in
cmp
mov
cld
push
rorl
mov
shl
mov
mov
lea
aaa
aad
cli
stc
shrl
jns
ljmp
xchg
sbb
sub
inc
ss
pop
test
push
mov
sub
mov
xchg
mov
cmpb
loopne
icebp
jle
push
mov
or
cmp
mov
sub
jl
ficompl
xchg
nop
jns
mov
addr16
call
or
das
pop
mov
inc
jbe
push
movsl
shlb
push
inc
mov
std
adc
jbe
aaa
mov
ret
sbb
dec
xchg
or
outsb
notb
insl
add
sbb
push
jmp
inc
mov
jp
shl
mov
push
inc
dec
cmp
enter
cmp
dec
fmuls
and
push
icebp
jg
sub
icebp
or
pop
jno
rcrl
sahf
into
push
push
inc
out
popf
test
mov
xchg
js
dec
mov
xchg
mov
xchg
mov
fldenv
push
or
js
clc
ficompl
inc
xchg
jo
pop
test
iret
imul
lock
jg
push
sbb
sbb
add
js
dec
lock
jno
test
aaa
cmp
cli
dec
mov
sub
sub
push
add
pop
push
cmp
push
sub
sub
jnp
or
sbb
stos
aam
xchg
xor
pop
sti
add
mov
sub
jle
popf
mov
xchg
insb
int
dec
rolb
cmpsb
cld
mov
shrl
mov
inc
movsl
lea
ss
inc
add
sub
xchg
in
mov
inc
aaa
and
sub
int3
mov
jnp
xor
jne
lods
fdivr
das
lret
shl
xchg
repnz
pop
enter
cs
test
dec
and
repnz
je
sarb
xor
and
sub
xor
xchg
adc
or
push
out
mov
add
lahf
fstps
and
fnstcw
sbb
std
cwtl
mov
jb
xor
jg
mov
jmp
add
shll
repz
mov
addr16
adc
mov
ret
add
dec
lods
repnz
xchg
inc
sbb
or
lods
xchg
es
stos
and
xchg
mov
sbb
push
aaa
jge
pop
push
in
stc
jae
aad
mulb
ret
fisubs
cmp
pop
mov
add
int
cmpsb
xchg
lock
or
fmulp
es
ret
int
add
dec
xchg
adc
adc
jmp
adc
fsub
pop
icebp
std
mov
imul
add
mov
or
sbbb
inc
pop
rcrl
je
mov
jns
sahf
shlb
push
stc
mov
cwtl
out
jge
jno
adc
mov
xchg
into
xor
dec
and
int3
in
pop
jp
lcall
bound
and
notb
inc
jns
imul
ja
pushf
mov
and
movaps
jecxz
lcall
fsubrs
and
fnstcw
mov
mov
pop
cltd
sbb
test
cs
ljmp
fwait
inc
xchg
sbb
aaa
fnstenv
dec
loopne
sbb
lea
cmpsb
hlt
cmp
in
pop
ljmp
pushf
addr16
cli
mov
into
fnsave
or
out
pop
jle
mov
fcoml
adc
sub
inc
in
push
movsb
adc
cmpsl
les
mov
fnstsw
push
xor
in
test
int
xlat
mov
inc
mov
jb
fucomi
jne
and
cld
into
repz
mov
inc
jnp
cmp
call
and
sub
in
mov
in
div
shll
ljmp
xchg
and
xlat
mov
mov
add
fiadds
loope
push
jge
mov
rorl
movsb
adc
pusha
xchg
cmpsb
ret
or
sbb
sahf
adc
fsubs
lods
jno
sub
loope
stos
cmp
into
sbb
fimuls
jmp
int3
and
inc
in
pop
pop
mov
orl
mov
cmp
mov
jge
mov
nop
and
incb
xchg
xadd
addr16
in
pop
adc
jne
add
lret
mov
push
xor
testb
pop
lea
adc
shlb
jg
lcall
test
lods
inc
fisubs
or
into
int
adc
lds
data16
aad
insl
fsub
adc
xchg
inc
mov
and
cld
adc
mov
test
popa
and
inc
rorb
cmp
mov
push
leave
push
mov
cli
test
outsl
fs
push
mov
push
dec
subl
jp
int
sahf
mov
pop
lea
pop
sub
cmp
sti
call
loopne
shll
or
push
arpl
rcrb
sbbl
cmpsb
not
cmp
xchg
rcrb
inc
repnz
loopne
imul
adc
bound
xchg
mov
lret
ja
es
rorl
jecxz
aam
arpl
or
lods
add
daa
inc
out
push
daa
or
mov
roll
and
or
fstps
xor
push
lods
sahf
dec
push
push
sahf
adc
jp
mov
ja
adc
sub
enter
fs
inc
mov
insl
daa
pop
and
rorl
addr16
notl
mov
shr
clc
jp
mov
jbe
arpl
int
jnp
arpl
dec
cli
xchg
loopne
bswap
addr16
loop
pop
mov
jmp
cmp
ja
xor
sti
fwait
xchg
push
out
arpl
mov
dec
adc
push
mov
cli
and
bound
test
fldcw
mov
dec
or
into
xor
mov
xchg
jge
out
mov
push
in
or
xchg
ljmp
sti
arpl
xor
fisubl
pop
adc
fists
aaa
mov
test
mov
les
xor
lods
imul
outsb
aam
bsr
pop
sarb
in
fbstp
scas
sbb
push
sub
mov
dec
mov
push
das
popl
push
mov
jnp
hlt
add
ret
insb
test
shll
imul
outsl
lret
mov
or
iret
popf
inc
insl
push
fsubl
imul
lds
movb
scas
pop
inc
outsb
mov
cmp
pop
test
into
lea
mov
notl
roll
cli
jae
shlb
in
add
notl
sub
xchg
cmp
mov
pop
icebp
fisttps
mov
or
xlat
int
cmp
insl
pop
xor
inc
jg
fcmovnu
repnz
nop
fwait
mov
out
jmp
adc
shlb
loop
lea
cld
mov
push
cwtl
rclb
out
cmp
jecxz
popf
hlt
mov
adc
loopne
jae
rcrl
mov
pop
gs
fiaddl
lock
dec
mov
sti
arpl
add
jae
cmp
inc
push
jno
xchg
mov
scas
cmp
rorl
xor
rcll
and
dec
rcrl
and
adc
sub
addr16
dec
add
sub
sahf
mov
jmp
and
inc
gs
xchg
stc
add
adc
add
cmp
popa
movsl
mov
dec
lcall
or
aad
mov
or
mov
jns
es
xor
or
dec
je
bound
les
pop
cli
pop
push
sbb
pop
loop
push
jle
or
cmpsl
lcall
bound
mov
sti
sti
ds
add
sbb
push
jno
xchg
adc
and
jecxz
xor
add
or
and
xchg
iret
xor
stos
popa
pop
mov
cmp
les
adc
adc
pop
les
or
inc
dec
sub
cmp
ds
adc
iret
stc
push
imul
mov
jp
int
xor
jle
inc
push
mov
push
clc
xor
or
enter
jle
hlt
jno
mov
xor
jmp
out
cmp
mov
xchg
pop
stos
out
int3
insb
jp
dec
sbb
add
dec
test
int3
dec
mov
arpl
or
popf
repnz
ja
pop
push
and
pop
xchg
and
mov
or
jne
jbe
ljmp
add
mov
mov
pop
inc
clc
sub
or
shl
sub
enter
ret
mov
shrb
pusha
ss
xlat
pop
imul
mov
adc
jl
icebp
jo
cmp
shrb
mov
negl
mov
xor
repnz
sub
int3
sbb
fucom
inc
sarl
int3
cmp
push
lret
mov
jbe
fnstsw
xchg
dec
sub
and
testl
shrl
aaa
mov
inc
mov
inc
sub
sub
cmc
stos
inc
pop
mov
dec
mov
fimuls
sub
add
das
or
das
dec
popf
hlt
and
call
cltd
dec
adc
lret
and
test
enter
bound
dec
mov
js
fcmovnb
pop
mov
mov
mov
fs
lret
std
cmp
inc
insl
shrb
outsb
lcall
or
add
mov
sar
push
pop
xchg
fildl
adc
and
in
mov
and
dec
pop
dec
mov
inc
jno
xchg
in
cmc
cmp
fs
dec
cli
sbb
inc
push
js
shll
popf
and
scas
sbb
adc
orl
inc
scas
fdivrl
or
cltd
ret
add
sar
test
or
mov
xor
out
mov
adc
push
push
mov
cmp
lcall
enter
imul
xchg
cld
mov
ljmp
mov
divl
jno
aam
jl
sbbl
fimuls
push
xor
sbb
adc
dec
push
in
ret
popa
stos
fucomp
push
and
cmp
idivl
sbb
add
shrb
sbb
adc
fists
lahf
mov
mov
and
mov
stos
xor
dec
cmp
stc
xor
js
and
mov
inc
cmpsl
mov
rcrl
ljmp
xchg
adc
dec
mov
cs
push
adc
and
mov
fincstp
mov
ror
loope
ds
push
xchg
lods
mov
or
lods
in
shrl
jmp
jnp
sbb
mov
inc
ucomiss
push
cmp
dec
es
cmp
mov
out
cmp
mov
xor
sarl
pop
or
fwait
outsl
xchg
lret
mov
sub
jp
repz
xor
inc
mull
inc
add
lds
push
iret
mov
loope
into
aam
pop
mov
cld
fstpt
cli
lods
pop
nop
mov
icebp
das
loope
lea
dec
push
adc
daa
add
adc
cltd
dec
movsb
repz
push
adc
lret
mov
jo
pop
inc
and
call
sub
daa
or
xchg
mov
xor
divb
sub
cmpl
sub
jecxz
sarl
jbe
loope
fcomps
lret
pusha
fbstp
lahf
popf
pop
lea
adc
xchg
popf
jmp
fldl2e
les
int3
jge
push
mov
jl
jns
sub
xchg
and
xchg
sbb
pop
in
add
fdivl
lahf
pop
inc
sub
mov
movsl
sub
adc
lods
mov
jle
mov
clc
push
imul
test
test
cmp
xchg
pop
mov
mov
dec
push
fwait
xlat
mov
cld
bound
sbb
stos
pushf
add
inc
mov
ss
lcall
subb
and
and
jo
mov
sti
in
leave
das
add
xchg
imul
pop
mov
mov
in
cmp
clc
and
add
xchg
push
mov
call
mov
mov
imul
adc
jle
mov
gs
std
jae
xchg
xchg
in
sbb
fs
frstor
or
cwtl
xor
or
in
adc
or
inc
cltd
or
cmp
dec
outsb
mov
es
cmp
mov
in
subw
and
push
js
pop
gs
fldl
lahf
pop
js
or
out
mov
cld
inc
je
cmp
xlat
nop
sbb
dec
clc
imul
jbe
int
pop
xchg
sbb
stc
cld
les
cltd
sbb
jle
pusha
stc
arpl
test
repnz
pop
jnp
xchg
and
mov
cmc
lods
pusha
loop
mov
and
mov
imul
adc
or
jp
mov
imul
sarl
shl
and
mov
xchg
lods
inc
pop
rolb
aad
shlb
pop
incb
xchg
cmp
xchg
sub
mov
and
push
adc
dec
or
mov
out
das
cmp
add
push
ret
and
xchg
test
jecxz
mov
int
gs
pop
jl
cmpsl
push
or
mov
xor
dec
ss
xor
inc
mov
lcall
pop
inc
mov
int
adc
mov
lret
movsl
hlt
push
cmp
andb
sbb
fxch
xchg
cs
inc
dec
mov
push
xchg
adc
mov
test
push
mov
add
and
pop
and
mov
cld
xchg
bound
out
call
loopne
xchg
lods
jmp
in
xchg
mov
cwtl
push
dec
cmpsl
dec
and
push
mov
mov
cmp
xchg
mov
adc
xchg
pop
std
fcoms
iret
cld
jl
mov
fisubrl
aaa
fwait
out
add
ja
mov
pop
sbb
inc
push
sub
or
arpl
fcomps
shrl
test
out
pop
bound
gs
lods
pop
shlb
pop
icebp
in
ljmp
shl
push
or
jge
andl
adc
jg
add
or
jne
cmpsl
mov
xchg
es
add
insl
call
add
push
mov
push
pop
fbstp
in
sbb
cmp
out
scas
mov
sbb
sbb
fiaddl
mov
inc
lret
outsl
push
fs
cmp
sbb
pop
jl
icebp
mov
dec
mov
cmpsl
sub
shlb
movsl
push
mov
and
cmp
xor
pusha
inc
outsb
dec
iret
mov
imul
inc
jns
cwtl
and
sahf
push
cmp
stos
das
scas
test
xchg
mov
push
jae
or
je
repz
repz
rcr
pusha
addr16
cmp
jae
cs
lods
dec
out
daa
or
lock
xchg
roll
inc
aas
gs
xor
push
push
dec
mov
out
aam
fsubl
adc
popf
test
fnsave
adc
clc
cltd
sub
movsl
arpl
cmp
cwtl
cmpsl
ror
jmp
fnsave
call
push
clc
xor
es
test
rorl
dec
hlt
push
jmp
add
fistpll
addr16
and
push
test
jg
cld
push
jbe
fistl
xchg
fcmovne
sbb
and
lea
in
sub
sbb
mov
stc
pop
jns
push
inc
inc
push
and
in
mov
inc
mov
dec
dec
inc
add
fistps
jb
add
xchg
loopne
xorl
pushf
ds
xor
sbb
xchg
gs
mov
push
jbe
inc
js
clc
idiv
jne
mov
loopne
dec
cmpb
stos
ss
idivb
and
adc
shlb
mov
lahf
lods
in
pop
scas
or
bound
inc
out
mov
or
scas
das
xchg
xor
lahf
sarl
stos
movsb
pop
push
daa
js
push
lock
xchg
mov
js
xchg
ss
and
lcall
jecxz
fists
add
out
and
adc
dec
test
out
xor
ss
sub
cmp
cmp
jl
das
out
cmp
cs
jae
jns
subl
stos
xor
lcall
loopne
orb
sarl
dec
call
or
int3
xor
lcall
mov
add
pop
outsb
adc
out
ret
mov
cmp
push
fdivrp
pop
std
and
jmp
xchg
ss
mov
mov
dec
mov
cli
mov
lea
add
jecxz
or
xchg
lret
xor
adc
jmp
add
mov
sub
pop
inc
jae
das
lcall
movl
and
out
add
out
jmp
and
inc
cld
or
repnz
push
mov
xchg
and
cli
lret
sbb
mov
mov
jbe
add
cmc
push
push
mov
xchg
in
adc
xchg
mov
gs
push
subb
fsubs
pop
in
into
rorb
dec
setge
and
jae
outsb
jns
mov
mov
xchg
xlat
lahf
mov
test
subl
push
sbbl
lret
ja
dec
xchg
mov
fsubp
cmp
pop
inc
pop
fiadds
test
xchg
mov
popa
call
push
subb
imull
lret
movb
dec
jnp
xchg
and
xchg
inc
test
fwait
int
loop
sbb
sbb
cmp
inc
into
pop
fsts
xor
sahf
sub
cs
pop
or
mov
loop
jne
xor
lret
inc
in
lea
add
cmp
jge
jmp
leave
cmp
dec
cmp
ficompl
jnp
cld
add
fistps
lods
cmp
or
jmp
push
mov
nop/reserved
mov
enter
xor
ret
pop
outsb
mov
mov
mov
cwtl
pop
popa
cmp
jecxz
sahf
push
in
in
cmpsb
jns
into
lret
and
je
push
movsb
roll
mov
das
sti
fs
sti
ljmp
sub
pushl
xchg
bound
mov
je
notb
inc
ret
outsl
cmp
stos
sarl
add
or
inc
scas
lret
fisubrl
lcall
scas
dec
jecxz
icebp
jno
inc
aas
mov
addl
mov
pop
mov
pop
das
daa
cmpsl
into
loope
dec
mov
lea
mov
adc
pusha
xlat
mov
adc
pop
mov
mov
pop
mov
inc
outsb
xlat
add
test
pop
and
in
repz
icebp
mov
ss
xor
jg
sbb
inc
in
fs
in
jg
cs
xor
pop
iret
lahf
sbb
loopne
rcrb
es
testl
mov
pop
data16
jmp
ds
inc
inc
fists
mov
sahf
repz
in
test
int3
fisubl
test
sub
jbe
lcall
push
leave
inc
dec
sub
mov
test
scas
xlat
sub
pushl
arpl
call
popa
sbb
xlat
jns
mov
xchg
xor
mov
sbb
insb
popf
lcall
push
inc
ud1
xor
into
cltd
lods
inc
cmpsb
inc
mov
xor
in
adc
cltd
pop
jp
hlt
pop
std
test
pop
add
cmpsb
adc
add
call
xlat
test
popf
and
jg
pop
mov
in
dec
pop
stos
test
pop
sbb
xchg
push
jns
adc
jmp
mov
outsb
fsubs
hlt
and
imul
dec
call
test
jo
pusha
xchg
data16
std
gs
notl
cmp
mov
in
std
xor
cmpsl
je
lods
pop
mov
mov
mov
es
cmp
xchg
sub
in
imul
enter
andl
in
pop
rol
pop
and
jo
mov
jb
je
mov
dec
and
ror
enter
stc
or
ljmp
sbb
sub
pop
sbb
ret
adc
add
fwait
int3
popf
and
out
mov
dec
cmpsl
movsl
xlat
daa
repnz
pop
mov
jno
scas
outsb
mov
ret
sbb
shlb
inc
sub
je
or
xchg
mov
push
ljmp
outsb
sti
imul
dec
xchg
inc
bound
iret
push
rcr
test
or
xchg
fimuls
data16
pop
add
xor
movsl
push
and
mov
jp
das
and
cmp
addl
test
add
mov
push
jo
je
mov
negb
dec
out
mov
out
xor
mov
xchg
mov
push
dec
and
push
es
push
jg
mov
pop
negb
ja
scas
mov
call
xorl
pushf
int3
mov
inc
out
fnstsw
and
sbb
push
ss
notb
dec
push
aas
es
lret
xchg
sub
arpl
call
inc
jae
mov
cltd
xlat
add
ja
xchg
cltd
cli
lcall
mov
xchg
adc
inc
pop
add
or
push
insl
pop
leave
pop
push
cli
insb
out
enter
mov
dec
cld
xchg
push
movsb
mov
ds
das
sbb
lcall
insb
pop
insb
inc
xchg
imul
aas
dec
sbb
adcb
stos
out
aam
sbb
mov
push
and
pop
mov
out
cmc
xchg
add
dec
add
sbb
sbb
sub
sbb
sub
add
jge
push
add
lret
cli
xchg
push
inc
out
xor
sbb
in
mov
arpl
inc
in
and
pop
sbb
jae
xchg
cmpsl
pop
mov
mov
mov
add
xlat
mov
xchg
jno
adc
adc
xor
push
jb
pop
dec
and
popa
or
mov
inc
imul
cmp
cmpsl
addr16
mov
movsb
shll
cmp
push
clc
dec
inc
rolb
ret
std
popf
add
outsl
lods
and
lahf
popf
dec
xor
outsb
std
stos
fwait
jnp
sub
mov
xchg
iret
adc
or
test
xor
inc
in
mov
stc
jno
or
rorl
jne
in
jmp
in
fwait
aam
jns
mov
repz
sti
jae
pop
cmc
lods
sbb
aas
add
out
push
rorl
enter
int3
std
movb
sub
dec
dec
into
push
mov
outsb
mov
je
shrl
out
sbb
jae
and
or
stos
data16
outsb
out
fwait
cmpsb
insb
pusha
add
and
cmpl
pop
xchg
adc
out
cmpsb
push
add
cmp
enter
inc
pop
std
cs
cpuid
xor
xchg
imul
and
adc
sub
jnp
jp
aas
jecxz
adc
fwait
mov
xchg
and
jae
push
xor
mov
mov
cwtl
cld
push
xchg
push
inc
fwait
dec
pop
mov
or
push
or
ret
pushw
or
xor
dec
lret
daa
ja
and
sti
mov
xchg
push
pop
call
fisubrl
push
dec
mov
pop
repnz
jbe
ds
cmp
cmp
mov
test
push
cmp
fs
rcrb
dec
mov
mov
in
inc
lcall
mov
add
repz
mov
adc
push
sti
repnz
jp
cli
sbb
push
sbb
cmp
fidivrs
dec
pop
or
and
or
sbb
mov
dec
xor
fisubrl
in
or
lock
adc
xchg
pop
loope
xchg
mov
daa
ljmp
mov
pop
test
outsl
push
add
jg
imul
push
or
imul
aam
xchg
push
in
ss
addl
hlt
loop
cmp
push
lock
mov
jne
fdivl
cli
and
xchg
adc
sbb
subb
inc
out
icebp
loope
jo
sbb
inc
rorl
nop
jo
jg
xchg
int3
mov
clc
out
roll
in
es
les
pop
adc
xor
not
xor
lret
movsl
outsb
js
pop
push
adc
mov
xchg
pop
loopew
cmc
roll
dec
dec
jb
iret
ljmp
dec
and
arpl
sbb
xor
mov
mov
xlat
or
add
aad
pmuludq
hlt
mov
dec
push
les
sbb
mov
pop
call
in
push
sbb
bound
xchg
pop
mov
lock
cmp
mov
pop
hlt
jg
pop
cli
stos
into
mov
mov
jnp
out
movsl
push
jmp
faddp
jge
jge
mov
cwtl
mov
leave
cmp
pop
xchg
push
pop
or
and
sahf
rcrl
xlat
stos
jmp
je
ss
test
cltd
mov
xchg
mov
out
cmp
adc
dec
nop
sbbl
fidivs
sarb
ret
jo
or
cli
lret
dec
push
bound
jae
mov
push
xchg
xchg
fmuls
arpl
push
or
aas
les
test
mov
dec
int3
xchg
gs
pop
or
fnstcw
fsubrs
lcall
mov
pop
cmp
movsb
jle
fadds
push
add
xor
data16
das
lahf
push
adc
ja
xor
pop
repz
sub
stos
mov
sbb
pop
jle
add
scas
inc
sub
mov
repnz
xor
cld
push
cli
mov
shlb
lds
sub
push
inc
dec
inc
lds
push
jnp
ficomps
cmc
fldl
addr16
mov
out
inc
or
inc
or
cmc
sbb
mov
jg
fadd
cmp
dec
into
lret
pop
int
sbb
scas
stc
scas
xor
and
jge
jne
lock
inc
adc
lods
testb
xor
pop
jmp
pop
out
aaa
pushf
rorl
movsb
out
lds
mov
add
jp
jbe
les
mov
es
sbb
test
repz
add
loop
mov
imulb
push
nop
pop
cmc
insb
in
sahf
cmp
loope
mov
inc
sub
cmp
push
mov
push
jb
inc
sub
inc
pop
les
cmp
and
dec
ret
push
sbbl
push
and
push
rcrl
test
sub
sbb
push
fisubrs
aam
ljmp
testb
daa
test
push
aad
in
shll
mov
shrl
sbb
flds
movsl
in
outsl
gs
cmp
jns
idiv
cmp
mov
push
xchg
cmp
into
sbb
push
mov
int3
out
sub
dec
adc
lock
loopne
test
or
pop
pop
es
nop
push
mov
xchg
aam
or
cli
dec
mov
call
inc
ljmp
fsubp
sbb
sbb
addb
clc
pop
mov
mov
xchg
inc
mov
cwtl
jbe
xlat
notl
mov
outsl
int3
pusha
cmp
pop
sub
fldl
mov
dec
mov
mov
xor
in
jmp
mov
aaa
push
push
mov
sbb
mov
shll
sbb
mov
lahf
scas
xchg
cmp
out
adc
mov
push
iret
leave
add
pushf
sbb
fisttps
orl
mov
sub
je
out
adc
mov
adc
loopne
shll
cltd
or
sub
out
fmulp
push
xchg
ss
fcoms
loop,pt
or
pop
xor
jg
push
xor
mov
mov
iret
fdivl
or
mov
ljmp
andb
into
fnstenv
xor
repz
negl
call
xchg
jnp
inc
popa
xchg
cltd
scas
mov
rorb
mov
aaa
test
mov
jo
out
hlt
jge
loopne
fs
fdivr
repnz
popa
mov
fimuls
xor
jnp
push
stos
icebp
fbstp
dec
xchg
mov
or
lock
movsl
rol
jns
outsl
and
adc
int
cmp
or
leave
insb
int3
or
inc
push
mov
ja
je
repz
push
rorl
cwtl
pusha
fdiv
leave
cmp
sub
sbb
xor
pop
jns
cli
insl
daa
insl
sbb
xchg
cmpsb
test
imul
mov
cmpsb
test
shrb
add
sub
loop
mov
mov
jns
movsb
jge
es
inc
lods
cs
inc
xchg
cwtl
cmpsb
stos
mov
daa
adc
cld
cmc
xchg
into
jbe
xchg
jmp
xchg
cmp
inc
aad
out
or
mov
ror
jmp
add
xchg
mov
and
sub
lret
add
shll
stos
mov
stos
test
push
push
jae
jmp
subl
mov
sub
std
js
popa
bt
xchg
out
mov
jnp
mov
shlb
add
sbb
xor
sbb
repz
mov
add
mov
adc
or
xchg
push
adc
push
mov
xchg
pop
lahf
popa
daa
jge
clc
ret
xor
inc
add
fidivs
test
incl
mov
jle
dec
inc
insl
mov
stos
cmp
push
xchg
mov
stc
mov
xchg
repz
dec
xchg
mov
and
adc
mov
fstp
xchg
mov
ret
xlat
icebp
jbe
std
fistpl
jnp
cmp
xchg
mov
sbb
jmp
jecxz
and
inc
sub
pusha
xor
in
and
pop
dec
shll
outsb
xchg
or
mov
jno
xchg
mov
int3
fcmovb
enter
xchg
inc
pop
xor
cmp
sarb
shll
sbb
push
mov
in
shll
repnz
rclb
sbb
inc
call
sbbb
aam
adc
xchg
notb
mov
add
mov
sub
ret
sub
add
push
rcl
cmp
js
dec
mov
es
sarb
test
mov
jge
pop
cmp
mov
psraw
shlb
subl
dec
arpl
mov
or
ret
in
xchg
jne
scas
dec
and
mov
fildll
jmp
cmp
sub
dec
imul
lea
push
je
mov
dec
jnp
mov
out
pop
adcl
and
pop
cmp
fsubrs
xchg
in
dec
pop
lock
cmp
and
sub
test
in
fs
pushf
clc
rol
cmp
push
push
sti
in
jmp
cltd
pop
repnz
scas
outsb
adc
iret
push
aam
jmp
std
push
ja
inc
shlb
pop
fidivrs
scas
jg
cmp
sub
lea
push
sbb
push
pop
call
cwtl
iret
push
ret
inc
imul
jo
mov
rcrb
pop
adcb
sti
std
or
aaa
leave
jb
outsb
loop
add
xchg
rolb
pop
cwtl
jg
in
out
lahf
sbb
sub
cltd
jns
test
mov
push
cmp
loopne
in
les
lcall
cmpsl
repnz
xor
and
cli
js
sub
aaa
dec
scas
push
lock
cmpl
mov
fs
std
mov
shll
mov
popf
ljmp
scas
xchg
mov
icebp
test
subl
mov
push
cmp
sub
lods
nop
mov
cli
les
sar
mov
sbb
inc
mov
lahf
xor
movsl
shr
fcomps
cs
ss
inc
pop
mov
xchg
into
xor
xchg
adc
test
std
ljmpw
popf
sub
adc
xchg
ljmp
jns
cs
lock
jno
mov
xor
inc
adc
add
fidivl
clc
cmp
xorb
jb
sbb
xor
js
outsb
mov
mov
imul
pop
fcomip
sarb
nop
fsubr
xchg
cwtl
shll
mov
adc
and
outsb
cmp
cmp
out
cmc
ljmp
int3
rcr
scas
fucom
mov
orl
pop
cmpb
cmp
add
xchg
mov
imul
pop
or
mov
inc
pop
pop
icebp
pop
inc
sub
imul
imul
lret
lret
sbb
std
cmc
scas
xchg
test
or
xchg
aaa
mov
je
mov
icebp
rcll
dec
test
mov
inc
ja
test
push
cmpsl
push
xchg
add
sbb
push
or
arpl
dec
push
jb
xor
inc
adc
adc
push
mov
pop
lock
in
orb
negb
pop
js
mov
hlt
andl
insl
loope
popf
js
jb
cmc
roll
mov
push
mov
pusha
fld
in
sbb
jmp
inc
repnz
jmp
push
shld
mov
push
out
mov
or
pop
clc
jp
cmp
or
ds
jp
and
addr16
pop
lea
test
sbb
push
fsubp
mov
aas
cmp
pop
es
inc
push
jne
pop
fs
repnz
jbe
es
xor
inc
cmp
cmp
cmp
sbb
and
nop
sub
xor
lahf
add
xor
mov
xor
add
ret
xchg
xor
loopne
cmp
xor
addw
mov
pushf
mov
mov
sbb
inc
in
outsl
stc
mov
pop
or
xchg
jo
in
not
xchg
mov
test
jl
fists
jmp
mov
movsb
xchg
mov
sub
add
and
in
xor
and
icebp
jb
les
in
out
bswap
push
xor
or
mov
xchg
adc
push
pop
add
pop
fmull
or
xor
cmp
ds
cmp
and
fwait
jmp
inc
mov
mov
cs
mov
jnp
shr
scas
mov
sub
stc
in
inc
inc
jp
jecxz
cmp
mov
in
push
sub
jo
inc
xchg
jle
mov
and
push
clc
fistps
inc
sub
scas
sbb
fwait
pop
pop
dec
stos
js
mov
inc
stc
fiaddl
push
ds
mov
lods
in
jb
rcll
test
jns
movsl
sbb
lea
adc
mov
mov
test
xlat
dec
out
loopne
sahf
or
in
xchg
mov
cld
jp
add
pop
mov
xor
mov
adc
lds
dec
loopne
xchg
shll
cmpb
cmp
cmp
inc
adc
pop
into
or
push
ds
mov
fucomip
inc
aas
and
out
cli
in
adc
and
and
outsb
je
imul
insb
lret
xor
or
cmp
lods
mov
jmp
out
or
movsl
adc
popf
sbb
xchg
push
jg
xchg
cmp
mov
inc
push
and
jo
aad
dec
mov
dec
inc
mov
lret
shl
out
incb
mov
push
dec
sub
int3
hlt
test
or
sbb
in
xor
xchg
xchg
not
lods
jns
push
scas
xchg
fiaddl
dec
stos
stos
insb
cmpb
xchg
movl
icebp
add
jge
sub
test
in
or
or
sahf
push
lcall
mov
ds
je
in
stos
sbbb
add
fs
mov
mov
inc
push
mov
pop
adc
repz
leave
test
ljmp
ss
dec
les
fstl
sbb
mov
inc
push
jmp
jge
rolb
cmp
nop
push
ret
or
arpl
cmp
push
adcb
pop
xor
xor
sbb
repz
mov
xor
ss
and
mov
orl
mov
shll
mov
cmpl
inc
ret
mov
aas
sbb
enter
imul
cld
test
adc
repnz
nop
clc
lahf
in
pop
ds
jp
testb
cmpsb
aad
or
insl
cld
aad
mov
xor
add
js
pop
adc
mov
enter
das
pop
shlb
jl
mov
or
fadd
jecxz
into
jmp
xchg
cwtl
and
push
and
ret
dec
jmp
shll
xor
vhaddps
dec
rcrb
test
outsl
push
jmp
insb
aaa
jns
sbb
scas
ret
repz
imul
cs
mov
and
mov
out
ficoml
xchg
das
iret
jmp
emms
cli
movb
out
in
add
sbbb
es
lcall
push
adc
mov
push
daa
repz
push
stos
or
or
sbb
outsb
mov
sarb
cmc
ja
mov
pop
or
out
insb
xchg
ret
lcall
stos
xor
xchg
push
cmpsl
mov
popf
adc
xorl
jg
cmpsb
out
les
sahf
das
push
cld
add
adc
int3
test
out
dec
fdivs
push
xor
xor
mov
xchg
popf
je
jb
mov
xchg
lret
sbb
fsubr
cmp
dec
sbb
fxch
cmp
cmp
jecxz
rorl
icebp
sub
outsl
adc
adc
sbb
and
vpsubsb
pop
loopne
jne
jnp
inc
std
push
jmp
jmp
adcl
aaa
adc
push
loop
ds
arpl
shl
mov
and
pusha
inc
add
ret
out
inc
lret
cmp
dec
jg
leave
ret
loop
sarb
xor
xchg
andl
xlat
out
add
and
data16
lcall
mov
jmp
fnstenv
jmp
loop
sbb
ja
add
mov
adc
lock
push
adc
sbb
pop
pop
sub
or
movsl
sti
adc
jle
sub
adc
xchg
dec
add
xor
cld
xor
test
fsubp
jmp
icebp
mov
jae
bound
sub
add
xchg
into
nop
js
lock
and
out
pop
ss
into
inc
jg
loope
adc
mov
bound
push
cmpsb
sarb
lea
es
jae
and
loopne
shll
test
stc
in
stc
jnp
ds
pusha
inc
arpl
or
xor
mov
inc
push
inc
mov
pop
xor
nop
pop
stos
jle
sbbb
inc
mov
xor
mov
push
out
push
push
jns
cmovne
xlat
ja
icebp
enter
icebp
jge
data16
mov
outsl
lret
test
into
jnp
dec
cmpsb
push
cmpsb
sub
sbbb
aad
pop
iret
push
push
pop
iret
mov
jg
sub
xor
mov
fiadds
mov
sti
dec
ret
cmp
jp
mov
int3
in
int3
inc
or
sbb
fsubrl
aam
mov
shrl
orb
arpl
push
lods
pusha
lods
dec
sahf
lock
add
inc
sbb
repnz
push
test
insb
outsl
cmp
in
daa
cwtl
and
inc
arpl
pop
fstps
cmovns
in
xchg
rcrb
push
xchg
add
mov
pop
divb
inc
addl
aas
out
repz
popf
or
push
repz
inc
fwait
mov
or
and
and
iret
sbb
xchg
loopne
cmp
pop
int
xchg
or
push
popa
and
mov
cs
jne
fld
cmpsb
imul
xchg
xor
mov
ja
cli
jo
dec
mov
aas
mov
sub
push
pop
clc
scas
inc
pop
mov
lea
cmp
xor
jb
imul
pop
sbb
lock
test
mov
cwtl
mov
stos
cmpsl
mov
divps
pop
loop
mov
pop
push
into
jbe
add
push
mov
mov
dec
mov
and
adc
adc
or
xor
shlb
lea
add
dec
hlt
add
or
xchg
and
push
and
mov
les
mov
sub
scas
in
out
in
inc
fistpl
adc
inc
rclb
stc
lret
mov
mov
mov
and
repnz
mov
xchg
inc
mov
popf
addb
lock
adc
lods
lods
pop
dec
mov
mov
test
add
adc
and
in
fisubrs
into
sbb
jl
jle
lret
int
push
aad
call
fcoml
lcall
jg
dec
sub
hlt
icebp
ret
push
cmp
mov
mov
test
add
in
lods
int
and
icebp
add
xor
pusha
addr16
test
popa
aaa
in
adc
push
fsts
push
xchg
hlt
push
jbe
push
lods
fidivs
pushf
xchg
pop
mov
mov
xchg
popa
sbb
add
gs
sub
ret
cwtl
pop
mov
pop
in
outsb
arpl
mov
dec
or
loope
and
mov
sbb
ljmp
hlt
mov
sbb
add
repnz
fs
xchg
mov
aas
xchg
inc
daa
jp
sbb
enter
sbb
in
cmp
psubb
push
mov
cwtl
dec
int3
rorl
inc
scas
pop
ficoml
add
lock
and
in
mov
into
adc
rcr
arpl
daa
scas
arpl
or
das
push
sub
fadd
mov
cmp
mov
stc
cltd
jp
ja
test
adc
hlt
dec
pop
mov
mov
pop
aad
or
push
pushf
mov
cmp
or
icebp
mov
call
inc
ret
insb
jae
cmc
dec
jae
lcall
and
out
mov
xor
fldcw
out
pop
mov
push
imul
lret
xor
fwait
adc
xchg
xchg
pop
je
add
ss
outsl
or
and
fnsave
cmpsl
push
bound
and
xchg
test
mov
ret
mov
pop
pushf
mov
mov
push
inc
sarl
and
xchg
xchg
sub
out
cmp
inc
lret
cmp
or
ja
iret
aam
pop
jecxz
mov
jp
mov
sub
lret
dec
aad
cld
sub
push
push
mov
dec
das
aaa
jmp
cmp
push
mov
mov
adc
jbe
mov
inc
pop
fstp
or
push
pop
pop
pop
in
jb
or
pusha
insl
xor
xor
sub
sahf
mov
add
push
push
icebp
movsb
ss
int3
paddsw
lods
out
jmp
lcall
loopne
xchg
je
jecxz
sti
dec
cmp
jge
sbb
cmpsb
inc
popf
lds
inc
xor
iret
out
in
add
int3
fcomip
and
jle
add
xchg
pop
jg
lock
jns
enter
xchg
sbb
or
mov
mov
jmp
mov
iret
xor
mov
ja
insl
pop
stos
add
rorl
sub
and
sbb
rcl
pop
add
iret
pushf
pop
test
out
fsubrs
je
test
insb
js
cld
mov
mov
dec
mov
out
or
xchg
lcall
sbb
outsl
sbb
sub
lahf
aaa
addl
lret
leave
cmc
ja
pop
pop
insb
scas
xor
icebp
cmp
adc
or
sbb
xchg
clc
pop
mov
insb
cmpsb
ds
fisttpll
jge
pop
mov
jl
add
fistpll
or
or
rcr
pop
push
push
mov
popf
inc
push
adc
in
or
in
outsl
lods
daa
clc
jo
cltd
dec
or
sbb
mov
inc
or
rcr
icebp
jl
jl
leave
cli
or
pop
int
jmp
and
mov
cwtl
push
push
lock
scas
scas
rolb
out
cmp
idivl
xor
mov
cmp
insb
rorl
jl
mov
xor
shlb
shlb
shll
mov
and
dec
mov
xor
mov
mov
jo
iret
push
mov
cmp
mov
adc
shlb
mov
test
pop
lods
pop
sub
nop
or
mov
stc
insb
jno
fwait
jne
sbb
sti
and
jnp
mov
jbe
xchg
sbb
std
stos
pop
pop
push
adc
lods
scas
idivb
repz
push
loopne
pop
jnp
arpl
sbb
lcall
ja
inc
cmp
lret
movsb
and
push
pop
test
adc
sbb
cmpsb
test
imul
sub
and
sbb
lea
lods
into
ss
cmpb
repnz
int
xchg
xor
lock
pusha
lret
cld
inc
mov
movsb
enter
push
sub
cld
sbb
mov
jle
push
in
loopne
fldenv
lods
or
inc
mov
push
pop
mov
dec
jle
es
cmp
cmc
push
repz
ds
add
pop
add
clc
lods
ljmp
sti
call
inc
add
lcall
sbb
mov
test
xchg
lods
movsl
dec
mov
fs
lahf
mov
int
fmul
sub
add
insb
sbb
imul
sub
adc
call
out
insl
aam
cltd
sar
dec
and
jae
fisubs
movsb
or
pop
add
int
mov
sbb
shr
sbb
mov
test
int3
xlat
scas
repnz
mov
mov
call
xchg
push
out
push
and
fadd
cli
xor
mov
pop
clc
mov
sbb
mov
xlat
in
pop
ljmp
enter
pop
movsl
jnp
in
daa
ja
add
cwtl
and
shrb
sbb
repnz
dec
jmp
xor
mov
es
es
fcom
lret
mov
loope
int3
sub
or
daa
sbb
loop
push
movsb
inc
or
and
dec
pop
mov
lea
fadds
adc
fcoms
or
add
cli
fimull
push
test
test
xor
ljmp
arpl
dec
dec
fistps
dec
push
stos
loopne
insl
addr16
loopne
jmp
sti
cmc
fimuls
jge
or
and
xor
dec
ret
mov
xchg
ljmp
cmc
pusha
sbb
outsl
xor
mov
jns
mov
cmp
popf
stos
call
xchg
cmpsl
sbb
incl
aam
cli
es
cmp
jg
xchg
popa
push
jecxz
repnz
lret
inc
out
adc
dec
sbb
adc
inc
int
xor
fucomp
dec
arpl
mov
nop
stos
pop
xor
outsb
ficompl
pop
cmc
int
clc
xchg
sar
loopne
and
push
icebp
cmp
lds
lret
mul
sub
popa
adc
xor
fcomip
bound
ljmp
out
jb
cwtl
jge
cld
dec
sbb
lds
pop
adc
or
mul
or
orl
aad
and
inc
sub
xlat
cmp
arpl
cmp
adc
aas
testl
pop
lds
test
cmp
add
insb
daa
inc
inc
movsb
xchg
int3
or
std
fwait
jmp
cwtl
hlt
add
in
cmpsl
dec
add
adc
or
fisttps
pop
push
mov
aaa
test
sub
outsb
rorl
mov
call
mov
subl
jb
leave
es
out
mov
inc
out
mov
mov
out
adc
xchg
in
xlat
hlt
fadds
push
loopne
jne
fsubrs
cli
dec
mov
mov
cmp
adc
fiadds
test
imul
sbb
movb
loopne
push
ss
jnp
mov
jle
lahf
into
outsl
ljmp
fsubrl
and
sbb
jge
mov
icebp
jno
sti
loopne
mov
adc
lds
inc
jecxz
je
dec
xor
imul
ds
xor
adc
int3
add
gs
scas
roll
das
push
adc
add
adc
test
xor
stos
in
out
rorl
call
xor
dec
aam
or
fldenv
cs
push
outsb
aas
lahf
je
add
add
pop
pop
loop
jb
inc
rorb
aas
cltd
add
fnstsw
xor
jge
adc
imul
jg
mov
inc
aaa
xor
cmp
out
fildl
xor
and
xchg
adc
xchg
ftst
aas
dec
fnsetpm(287
aam
mov
sub
push
push
pop
sub
jnp
xor
mov
sub
mov
sub
cmp
lods
ret
mov
push
cwtl
call
xchg
jp
pop
in
in
loopne
push
adc
shll
fwait
sbb
in
mov
fwait
jmp
push
jne
cmp
lods
and
push
lcall
xor
fmuls
clc
hlt
sub
fildll
popa
jle
sahf
stos
jp
mov
dec
lahf
fstl
mov
adc
mov
fisubl
sbb
push
sbb
or
or
inc
jbe
jl
cmpsl
in
shrl
sahf
jbe
adc
inc
leave
adc
cmp
jns
sarb
test
les
rorl
dec
test
pushf
das
push
outsl
push
sbb
ds
xor
lret
jnp
cltd
rorb
jne
lock
ret
clc
push
push
jp
sub
mov
aas
mov
cmp
in
mov
xor
add
cmp
insb
ja
in
popa
sbb
std
fidivl
push
scas
mov
stos
imul
mov
and
add
std
dec
aas
jle
lods
mov
and
jnp
fisttpll
fisttpl
mov
repz
and
mov
fbld
stc
xor
and
dec
mov
stos
mov
leave
xchg
jmp
mov
mov
adc
pop
inc
jecxz
jae
inc
pop
mov
pop
aam
pop
pop
aaa
sti
push
mov
ds
push
xchg
push
dec
sub
insb
mov
mov
leave
push
xor
mov
inc
aas
push
in
pop
cwtl
sbb
rolb
push
in
fdivs
sbb
cmpsb
movsb
mov
mov
into
and
aad
cmpsb
adc
mov
xor
xchg
js
imul
sti
push
jae
pop
push
shlb
test
pop
cli
cmp
dec
and
testl
andnps
cmp
jl
adc
mov
sahf
and
jl,pt
dec
mov
fiaddl
aaa
dec
adc
mov
pop
push
repz
enter
push
xchg
pop
or
dec
mov
adc
mov
mov
and
mov
jbe
add
das
aas
or
jle
fwait
cwtl
icebp
jo
in
jo
adc
xchg
enter
aam
insl
push
lret
ljmp
sbb
xor
loop
ja
fidivrl
popf
sbb
adc
mov
test
mov
sub
out
test
cmp
jno
in
decb
adc
push
test
adc
je
jmp
xchg
cli
jbe
pop
in
cltd
lcall
shlb
loope
ljmp
lods
in
jbe
aas
adc
jmp
add
das
addl
mov
scas
cmpsb
push
cmp
aas
push
cs
sahf
inc
xchg
aad
adc
jne
movsl
rolb
mov
out
pop
cmp
jmp
fisttps
stos
xchg
xchg
xchg
push
sbb
pop
shlb
and
lcall
xchg
add
mov
xchg
fcmovu
adc
int3
jb
mov
sbb
mov
iret
cmc
jo
in
sarb
testb
and
lea
mov
dec
ret
jecxz
bound
mov
into
jne
or
cmp
push
lds
mov
sub
loop
div
pop
inc
pusha
fisttps
sub
mov
idivl
sub
mov
pop
popa
fidivrs
sahf
xor
arpl
sbb
mov
and
loopne
cld
mov
aaa
cmp
jbe
arpl
aam
adc
addr16
push
jg
xor
pop
jbe
int
leave
sub
mov
inc
push
test
test
mov
clc
aas
xor
cmp
inc
xorl
ret
mov
pop
ret
cld
in
cli
mov
dec
jle
fisubl
or
cmp
leave
cmp
xchg
add
mov
xchg
mov
leave
lret
dec
aaa
clc
js
and
neg
rolb
mov
sbb
dec
into
adc
fdivrl
mov
inc
add
sbb
cltd
pusha
adc
fcmovb
adc
mov
mov
push
sti
xchg
adc
femms
push
mov
rcrb
out
pushf
mov
lahf
mov
outsb
aam
mov
adc
insl
std
push
test
sahf
fwait
inc
imul
mov
insl
lcall
xchg
lods
inc
cs
pop
in
mov
mov
sbb
mov
rcll
inc
inc
or
loopne
sbbl
inc
mov
mov
inc
orb
shl
mov
fwait
xadd
cs
and
mov
pop
popf
ret
adc
fldenv
mov
pop
or
insl
out
push
insb
into
addb
clc
sub
push
aam
jae
cld
int3
bound
test
inc
or
jbe
mov
xlat
jns
inc
out
out
mov
cs
popa
pop
mov
ret
pop
push
scas
std
aas
movsb
int3
int
test
pop
xchg
lret
pop
in
arpl
sbb
jbe
jne
inc
mov
inc
inc
push
mov
push
mov
push
clc
test
es
xor
andl
cmp
mov
in
cmpsb
inc
fstps
sti
icebp
rolb
sbb
addr16
cmp
lea
jmp
mov
adc
adc
add
fs
pop
inc
in
xor
push
clc
lea
sbb
pop
jge
xchg
test
sbb
adc
or
cmpsl
xchg
loopne
xchg
fadds
xor
and
mov
movsl
jnp
or
es
loope
lret
test
cltd
mov
lahf
sbbl
int3
in
add
cwtl
adc
jecxz
inc
adc
push
push
cmc
cwtl
icebp
arpl
push
test
dec
loopne
dec
push
dec
push
cmp
out
fiaddl
hlt
fidivrs
inc
orl
cmp
gs
fisubs
jb
icebp
mov
inc
inc
pop
cmp
sub
and
push
add
movsb
jno
cmc
xchg
add
out
ffree
sbb
mov
scas
xor
out
dec
iret
sbb
adc
rolb
rol
nop
mov
int
xchg
movsl
subl
add
mov
movsl
fimull
test
addr16
pop
les
pop
pop
pusha
add
xor
jmp
pop
ret
arpl
push
jno
or
mov
push
shrl
xor
push
shll
ljmp
add
mov
aam
inc
xor
jge
mov
out
inc
cmp
add
ds
jno
movsb
push
xor
and
pop
shll
sbb
fiadds
loopne
push
and
xchg
jl
mov
stos
inc
jp
mov
ret
into
xor
loopne
mov
cld
fs
and
dec
adc
adc
mov
cmc
mov
dec
add
cltd
pop
adc
outsl
sub
mov
inc
pop
cmc
xchg
mov
add
cmp
dec
rorb
sbb
xor
and
nop
ret
int3
and
stc
pop
add
bound
hlt
inc
in
inc
imul
xchg
dec
mov
inc
push
xchg
xor
mov
and
mov
fildll
fwait
jae
idiv
fnstcw
lock
fidivl
lea
shl
outsb
repz
fbld
iret
mov
int3
mov
adc
or
leave
cmc
pop
ret
mov
ret
sub
pop
in
dec
cld
push
xorb
mov
negl
and
in
mov
out
fs
in
pushf
sub
push
push
jo
mov
mov
rorb
neg
and
sarb
out
xlat
sub
jbe
mov
and
cwtl
xchg
cld
xor
jl
inc
and
mov
mov
sub
gs
ja
jne
mov
das
stc
sub
popf
rcrb
sub
loopne
bndldx
inc
mov
in
dec
ljmp
push
pop
sbb
add
shlb
scas
xchg
out
dec
xchg
int
push
push
or
cmc
mov
push
pop
inc
adcb
pop
cmpsl
movsb
mov
into
sub
dec
loopne
std
cmp
aaa
leave
sub
pushf
loope
sub
lcall
xchg
dec
lret
in
outsl
xchg
int
or
push
mov
lods
add
shrb
faddl
lahf
hlt
clc
testl
inc
jmp
sbb
pop
enter
xchg
cmpl
das
mov
xchg
jge
roll
xchg
add
push
pop
dec
mov
aam
aas
shll
xchg
sti
outsl
imul
jmp
test
imul
div
cmc
or
je
inc
and
inc
mov
gs
leave
mov
int
mov
inc
loope
dec
mov
mov
jne
mov
mov
cli
jo
mov
mov
in
xor
ret
mov
mov
jns
pushf
loope
cmp
sahf
xchg
loop
inc
xor
push
cmpsb
pop
es
loop
sub
or
pop
xchg
jne
in
mov
ja
dec
test
fsts
pop
mov
cmpsl
std
inc
push
mov
sbb
pop
bound
cmp
mov
push
dec
cmp
push
daa
mov
pop
push
push
jmp
push
stos
enter
cmp
test
dec
das
into
sahf
stos
dec
and
movsb
pop
hlt
vcmppd
or
sarl
push
mulb
loope
clc
js
push
movsl
or
cld
adc
scas
jae
lods
sub
out
or
xchg
adc
or
and
jne
arpl
sbb
mov
inc
inc
fwait
ja
ds
out
push
loopne
adc
addr16
dec
or
in
pop
mov
popa
arpl
arpl
movsl
xchg
es
int
xor
push
addr16
inc
mov
jmp
and
lock
gs
jl
inc
enter
ret
sbb
inc
sbb
jbe
xchg
cmp
adc
xchg
push
mov
fs
inc
cmp
test
loope
fs
jle
xchg
and
pop
inc
push
call
in
into
mov
fxch
jbe
jne,pn
mov
add
xchg
jo
mov
add
xchg
push
xchg
aaa
push
pop
data16
cmp
mov
cltd
pop
mov
mov
les
dec
mov
enter
imul
sbb
int
in
mov
jmp
lcall
int
fidivrl
es
jge
add
pusha
mov
mov
into
ds
cmpsl
dec
xor
xchg
ficompl
lock
movsb
ljmp
mov
push
sbb
nop
scas
xorb
push
mul
je
js
mov
cs
pushf
les
aam
repnz
cli
negb
hlt
add
rolb
pop
pop
add
in
lret
or
cmovs
dec
stos
sub
and
sbb
cmpsl
filds
xor
es
jmp
leave
inc
push
rcr
or
mov
call
dec
jmp
mov
movsl
outsl
mov
imul
ja
mov
repnz
out
icebp
das
mov
jg
pushf
sub
and
psrld
mov
stc
insl
sbb
inc
xor
inc
xor
sarl
mov
fisubl
test
push
sub
push
cld
clc
or
sti
pushf
push
jnp
mov
dec
sbb
xlat
push
jno
ret
jp
aam
imul
fcomps
push
push
or
cmp
das
mov
add
cmp
xchg
dec
push
push
pushf
insl
stos
cmpsl
scas
scas
pusha
and
push
sbb
andl
mov
idivb
push
xlat
shrl
bound
sbb
adc
or
fxch
cmc
sbb
out
das
sbb
jo
outsl
push
in
nop
cwtl
lret
mov
sbb
add
inc
lods
leave
aam
std
inc
sbbb
dec
mov
pop
mov
pop
fwait
and
je
in
cmpsl
mov
adcb
insl
pop
lret
out
xchg
mov
test
subb
jge
notl
arpl
lds
dec
jae
or
xor
xchg
jno,pn
jmp
repz
inc
adcb
jp
leave
or
pop
jecxz
popa
and
mov
xor
outsl
and
push
pop
mov
jae
ds
aam
bound
stos
jg
aaa
leave
push
ud1
sbb
les
or
testl
lret
dec
jle
int3
xchg
pop
clc
and
push
xor
adc
lea
or
mov
fstl
xchg
jo
stc
sub
cld
loopne
pop
ja
fmul
pop
inc
bound
fisttps
fnsave
sbb
shl
inc
jg
jns
inc
xchg
xor
cmp
push
or
xchg
mov
cmp
nop
out
outsl
aaa
sahf
imul
movsb
and
sub
xor
sti
ret
mov
xchg
sub
pop
jmp
fcomi
pop
push
dec
pop
adc
movsl
stos
out
bound
pop
int
loopne
ds
xorb
mov
dec
or
jo
cmc
adc
lea
pop
sub
daa
repnz
or
fidivrl
lds
sbb
stos
jne
stos
or
jb
popf
jae
in
out
inc
push
mov
cmp
shll
jle
cmp
dec
subb
loopne
add
xor
sub
int
rcr
int
cwtl
pushf
test
clc
mov
test
stos
jbe
lahf
mov
mov
leave
mov
add
out
adcb
sti
cld
ret
adc
fildll
xor
clc
xor
cwtl
int3
push
cmp
jne
sub
mov
out
rorl
xchg
adc
xchg
out
push
sbb
add
sbb
lret
lods
jp
pop
mov
mov
xchg
mov
ss
lret
popf
mov
and
add
mov
add
icebp
in
lret
push
add
aad
fwait
cmp
cmp
rorl
and
mov
ret
loop
mov
repnz
int
repnz
fbstp
bound
pmaxub
and
jge
sub
jbe
push
and
bound
iret
je
xor
ja
addr16
lds
gs
sar
mov
fs
rcll
rcll
je
and
mov
and
pop
sbb
inc
shlb
and
and
mov
out
outsl
stos
adc
sti
outsl
mov
push
aaa
in
lret
jle
mov
shll
sub
dec
stc
ss
sub
sub
ja
mov
or
adc
xchg
fdivs
sarl
rcrb
jae
sbb
ret
sub
lea
stc
xchg
scas
dec
sub
subl
out
add
jns
pop
repz
aam
sub
sub
les
jb
mov
cmpsl
enter
in
xchg
push
adc
leave
xor
sbb
test
xchg
jp
int
sub
ret
lods
test
cmpsb
or
enter
xchg
nop
inc
test
xor
rcrl
cwtl
shr
pop
insl
outsl
push
ja
mov
jbe
lahf
rol
ret
xchg
push
sub
out
rolb
cltd
rcll
cmpsb
or
inc
sar
dec
dec
pop
jb
or
jae
outsl
inc
andl
lods
inc
int3
mov
add
sbb
testl
test
mov
cltd
scas
ss
push
sbbl
int
out
or
out
push
sbb
out
outsb
movsl
xchg
add
ljmp
xor
sub
aad
add
insb
push
inc
sub
sahf
fistps
dec
dec
fisubrl
cmp
popa
xor
cmpsb
leave
iret
push
sbb
pop
push
icebp
inc
mov
cmpb
and
jge
repnz
cmp
int3
cmpl
jecxz
xor
mov
pop
mov
push
fcomp
sbb
jp
in
inc
out
xchg
iret
push
and
adcl
cwtl
das
sti
push
sub
xlat
icebp
fcomps
jmp
mov
add
xchg
mov
cmpb
int3
and
mov
gs
fsubrs
jb
std
pop
rcr
lock
add
nop
xchg
cmp
repnz
insb
mov
xchg
jo
enter
and
jae
pop
adc
xchg
xchg
dec
lahf
call
adc
jecxz
fisubs
mov
fxch
icebp
pop
std
and
in
push
imul
fst
in
arpl
roll
sbb
push
sub
sbb
push
inc
sub
sbb
sub
sbb
loopne
mov
push
sbb
inc
cmp
add
add
movsl
xor
push
int
xchg
repz
push
mov
sbb
into
and
lret
jo
test
jp
jb
push
addb
mov
mov
xor
mov
jae
fs
addb
xchg
ljmp
fs
shrb
ljmp
ret
jo
mov
jge
je
xchg
dec
pop
xor
test
fldenv
shll
testl
cmpsb
push
push
jbe
lcall
mov
sbb
inc
rol
test
loop
add
mov
hlt
sbb
xchg
xchg
xor
ficomps
sub
fcompl
addr16
mov
and
movsb
iret
ficoml
loope
aam
outsl
aad
xchg
in
cs
mov
xor
fsubr
movsl
fcoms
lcall
stos
xor
outsl
adc
fdivrs
jns
lea
dec
ret
add
das
repz
and
mov
pushf
sarb
daa
inc
scas
and
shlb
push
rol
pop
popa
or
adc
jo
sbb
jno
mov
ljmp
movsl
mov
pushf
add
lds
jo
rclb
or
adc
ss
sbb
in
out
test
adc
xchg
iret
dec
scas
mull
add
shll
ljmp
cmp
ja
pop
sbb
cmp
lods
repz
adc
jae
mov
shrb
je
mov
pushf
lock
into
lahf
outsb
arpl
repnz
mov
sbb
mov
fimull
pop
push
icebp
add
cld
mov
stos
pop
xchg
adc
push
inc
jo
fidivs
cli
xchg
or
sub
mov
inc
sbb
jecxz
pushf
mov
push
adc
aad
test
push
sti
pop
pop
mov
push
jge
push
sbb
sbb
push
cs
jl
add
insl
call
clc
cmc
xor
int3
xchg
push
sub
dec
sbb
jne
inc
sahf
sbb
pop
scas
std
je
xchg
in
andb
jmp
pop
mov
or
dec
push
int3
push
arpl
pminub
adc
xor
aad
mov
dec
or
mov
lods
fldt
mov
cs
js
or
jecxz
movb
iret
adc
fdivrl
cmc
add
das
cmpsb
out
xor
nop
in
lods
aas
xor
xor
pop
jns
out
sbb
cmp
jmp
push
and
jmp
pop
addr16
push
inc
sub
outsb
jmp
cmp
sbb
fs
sbb
addr16
cld
fnstsw
fsubrs
jb
iret
mov
repnz
ficomps
out
inc
jecxz
pop
pusha
and
dec
or
push
pop
mov
lret
stos
dec
sti
or
push
xor
pop
xchg
or
xchg
cmpb
loop
mov
out
pop
repnz
adc
mov
mov
pop
jnp
xorb
xchg
pop
aad
ficoms
mov
pushf
imul
and
imul
pop
mov
adc
add
and
push
cmp
cli
pop
pop
stc
inc
and
in
cltd
sub
int3
cmp
test
cmp
lcall
insb
pop
popf
mov
sub
jne
daa
sub
cmp
out
dec
sbb
or
out
sub
call
test
adc
pop
add
mov
rcl
add
dec
xchg
xchg
ret
hlt
cwtl
ds
cltd
cwtl
push
xchg
sbb
aas
jl
mov
mov
inc
addr16
add
mov
test
ss
push
xchg
sub
sahf
es
mov
mov
dec
mov
negl
or
mov
loopne
fldenv
or
gs
fs
add
cmpsl
sbb
xchg
dec
ds
inc
adc
mov
int
in
pop
loopne
in
cs
out
popf
cs
testb
aam
roll
insl
add
int
js
data16
sub
mov
xor
sub
out
or
notl
pop
into
mov
fbld
mov
test
movsb
cltd
rcrl
cmp
mov
outsb
and
lret
push
sub
inc
jge
lcall
add
mov
test
mov
mov
je
inc
push
ja
sub
mov
pop
xor
ljmp
addr16
out
cs
xor
mul
or
shlb
inc
mov
push
outsb
cltd
inc
cmp
outsl
enter
loopne
out
loope
mov
mov
sbb
lea
insb
jns
sbb
xchg
mov
inc
daa
pop
ds
and
jo
sbb
scas
mov
lods
adc
xchg
inc
cli
mov
or
push
test
cmp
mov
and
sbb
fldt
sbb
aad
hlt
or
jmp
outsb
inc
fidivs
and
test
jge
cmp
cmp
mov
out
loope
nop
mov
es
dec
into
inc
test
sub
and
push
mov
mov
sub
adc
outsb
stc
cmp
sub
in
scas
js
dec
push
mov
pushf
push
xor
mov
sbb
outsl
cmpsb
dec
adc
aas
xor
sbb
into
push
push
subb
ljmp
adc
fstpl
xor
das
cmc
into
enter
sbb
jge
add
cmc
fisubrs
cmp
pop
lea
ret
cmc
xlat
jo
jno
push
push
xchg
fistpll
stos
adc
scas
jl
pop
inc
xor
sbb
pusha
jge
out
sbb
fwait
mov
mov
adc
push
mov
and
push
jb
pop
sub
fucomi
adc
mov
loope
test
fmulp
shll
jns
xchg
rolb
xchg
push
jle
testb
lret
push
mov
mull
mov
add
xchg
jo
sub
inc
int
dec
mov
andl
jnp
pop
lods
or
sbb
push
cmp
inc
fidivrs
mov
xchg
cmp
pop
sub
mov
xor
scas
cwtl
sub
mov
xchg
cs
xor
punpckldq
xchg
dec
inc
lahf
pop
sub
sub
adc
dec
push
jg
dec
int3
ror
xor
push
and
fwait
shll
cmpsl
pusha
xorl
sarl
imul
jg
clc
jno
ds
repz
mov
pop
inc
jg
fs
jae
xchg
xor
add
addb
ja
jmp
jb
mov
adc
jnp
cltd
sub
loop
popa
out
cmpsb
mov
dec
cmp
ucomiss
js
adc
popa
das
mov
fs
cmp
jbe
adc
mov
push
out
xlat
mov
rorb
mov
mov
jge
or
fstpl
enter
sub
loopne
imul
cmp
push
out
pop
add
aad
int3
sub
movsb
inc
cmp
std
pop
xor
ret
inc
mov
mov
adc
jbe
cmp
xchg
ja
and
jg
ja
mov
jne
inc
lds
lret
dec
dec
and
ret
insb
sub
add
ljmp
std
pusha
cmp
loopne
cmp
mov
lods
nop
movsl
jmp
xchg
cmp
xchg
inc
jbe
imul
mov
mov
adc
notl
ds
sub
popa
int
dec
icebp
jnp
push
jge
lret
fdivrs
nop
insb
enter
mov
pop
or
push
push
inc
inc
jl
jl
lahf
lods
jae
pop
xchg
jle
popf
in
or
xor
std
enter
push
mov
xchg
sbb
mov
imul
adc
push
lods
xchg
bound
xchg
addl
das
lds
hlt
clc
dec
adc
add
pushf
pop
add
dec
add
callw
out
into
bound
add
cmpsb
inc
push
aaa
add
jne
inc
xchg
mov
sub
xor
dec
inc
fsubrs
dec
lock
mov
stc
or
mov
repnz
xlat
das
xchg
xor
jl
inc
adc
pop
inc
insb
nop
xchg
mov
jg
xchg
rcrl
jbe
pop
pop
sbb
add
jecxz
xor
pop
mov
mov
das
mov
mov
frstor
xor
cmp
lods
cmp
xor
push
imul
popf
xor
cmp
push
popa
stos
mov
jl
adc
sub
and
fsubrs
pop
inc
jl
push
mov
cmp
cmp
imulb
fnstsw
and
adc
call
sbb
push
loopne
fxch
or
cwtl
pop
jp
xlat
scas
sub
outsb
sti
adc
aam
or
sub
bound
int3
or
test
cmp
pop
loope
and
repz
sbb
out
mov
pop
add
arpl
jno
pop
loop
jmp
lea
cmp
push
push
push
sub
sbb
in
jne
fcmovbe
fcom
icebp
int
mov
jnp
jle
fimull
pop
adc
mov
jle
daa
push
push
add
addr16
rol
into
pop
xchg
scas
out
stc
dec
mov
push
insb
jp
mov
cmp
push
xlat
pushf
scas
mov
xchg
add
and
loope
lea
xor
mov
mov
test
push
cmp
mov
dec
ret
sub
mov
pop
stos
or
je
cmp
dec
add
es
or
pop
repz
cmp
imul
ret
xor
jo
pop
adc
fwait
divb
cmp
lea
pop
and
sbb
and
and
imul
pop
dec
jno
pop
pop
idivb
sbb
inc
push
mov
sarl
inc
or
cs
and
ret
into
imul
roll
jnp
inc
and
test
xor
cmp
imul
mov
ljmp
movsb
loop
lods
ret
or
cli
clc
and
dec
mov
jb
mov
jno
fidivrs
mov
adc
lahf
lcall
js
es
in
das
int
faddl
inc
fwait
std
or
rorb
jp
sub
sbb
fldt
pop
rorb
sub
pushf
test
push
enter
xchg
mov
fdivl
dec
push
cmp
jl
sbb
movsl
mov
test
push
scas
insb
sarl
sbb
popa
xchg
cmc
sub
daa
xchg
push
xchg
fimull
cwtl
ficoms
xchg
dec
sbb
aaa
mov
adcl
imul
push
in
fdivr
mov
cwtl
gs
fdivs
ret
dec
cld
mov
maskmovq
mov
push
mov
loope
lds
imul
mov
and
fwait
rol
add
mov
cmp
jg
mov
xor
jge
mov
sbb
in
fisubs
xor
lcall
dec
sub
jne
sarl
mov
or
add
jmp
fs
or
cmp
iret
mov
fisubrs
pop
adc
aas
movsl
aas
ds
stos
in
cwtl
mov
jmp
insb
dec
mov
mov
mov
in
adc
test
push
ficompl
mov
jmp
ds
loope
std
jno
js
mov
aas
adc
pop
dec
cmp
aaa
enter
js
cs
xor
ljmp
stc
arpl
and
call
cli
data16
ret
xchg
imul
mov
pop
jmp
pop
scas
sub
jb
je
xchg
push
push
cmpsl
gs
shrb
mov
push
push
and
lret
ss
pop
cmp
mov
pop
push
xor
loopne,pt
cmc
fistps
mov
cmp
push
jne
push
hlt
push
mov
xor
ja
lock
shlb
fsts
inc
push
pusha
lds
cmpsb
fs
je
repnz
lds
pop
inc
cmc
cmp
jo
xchg
xchg
scas
xor
dec
pop
je
xchg
hlt
out
add
mov
sbb
les
mov
pop
push
sub
mov
pop
ret
popa
lds
push
bound
jl
jae
sarb
mov
push
fsubrp
popf
xchg
fildll
sahf
insl
push
jmp
into
loop
out
and
push
xor
xchg
outsl
imul
xlat
sbb
push
pushf
pop
out
or
call
jb,pt
inc
pop
push
xor
jl
sti
ficoms
adc
loop
pop
push
ljmp
inc
or
mov
pop
pusha
mov
cli
ret
mov
mov
adc
sub
mov
jb
push
jo
inc
popa
negl
push
jg
and
pusha
leave
mov
clc
aam
sbb
out
cmp
fucomp
cmpsb
int3
lahf
adc
mov
stos
jno
mov
xchg
in
adc
test
test
cltd
mov
jnp
ja
into
mov
jno
mov
or
js
insl
mov
and
cmp
cmc
enter
lods
xlat
push
adcl
sbb
dec
lcall
test
out
pusha
dec
mov
and
mov
cmpsl
sti
cltd
xchg
mov
mov
xor
out
sbb
dec
sbb
push
scas
jns
jne
cwtl
imul
cmc
push
mov
xor
xor
cmpsb
daa
jne
aas
sti
out
andl
sti
pusha
mov
push
cmp
test
pop
test
out
popl
outsb
fsubs
jo
shr
rclb
mov
xchg
cmpsl
dec
or
pop
in
mov
jns
jbe
dec
or
aaa
add
into
jg
flds
fldcw
outsl
ds
rorl
jmp
mov
or
jnp
sub
rcr
repnz
sub
stos
xor
out
clc
pop
mov
sub
imul
out
mov
mov
mov
repz
push
int3
cmc
aas
es
sbb
push
add
xchg
jb
repz
push
pop
push
cli
jge
lret
mov
sarb
xlat
or
sar
xor
out
pop
dec
neg
sub
enter
xchg
in
and
call
daa
add
lods
and
and
adc
ret
cmp
xlat
hlt
insl
add
push
fst
loopne
sbb
push
push
imul
push
jp
adc
fisubrs
shlb
test
les
mov
xchg
sbb
mov
jns
int
mov
xor
lods
cltd
mov
add
jl
xchg
add
or
cmp
enter
pop
outsb
insb
push
not
mov
aad
xchg
pop
mov
cmp
inc
movb
loop
lds
jb
dec
dec
dec
adc
movsl
mull
mov
mov
shlb
pop
jo
add
gs
cwtl
xlat
jge
dec
pushf
jnp
lods
lahf
gs
mov
lods
xchg
jb
cltd
push
mov
outsb
repz
mov
xrelease
mov
cmc
fildll
dec
and
xchg
xchg
push
stos
vpmacsdql
and
je
aam
push
push
jne
fsubs
add
cmpsb
pop
or
mov
js
dec
sub
nop
test
sar
into
pop
xchg
mov
lds
lcall
xchg
jae
cmp
jne
cmp
imul
orb
daa
testb
fsts
jae
cli
inc
pop
xor
fs
push
es
xchg
jmp
jle
dec
and
add
lahf
dec
aam
or
sar
or
and
popa
push
xlat
or
jmp
fsubrl
fs
cltd
inc
cld
call
lds
test
mov
push
cmp
jno
and
jno
inc
push
xor
jae
push
js
lea
fwait
jnp
or
or
and
lods
inc
xor
mov
xchg
inc
mov
or
pop
cmpsb
mov
test
inc
jnp,pt
leave
push
out
rorb
daa
lahf
shll
imul
loope
aad
inc
out
pop
repnz
icebp
outsl
push
es
loopne
push
jle
jne
popf
jmp
mov
inc
lds
sahf
fnstsw
sub
outsl
out
or
repnz
bound
xor
jmp
mov
ret
lret
mov
push
pop
jecxz
xlat
das
gs
cmc
je
mov
dec
rolb
or
pop
stc
mov
push
jae
dec
fwait
inc
clc
add
push
or
int
cld
dec
sub
jg
cmc
mov
out
mov
push
dec
cmc
push
cmpsl
jbe
lea
daa
sbb
push
cmp
ficoml
loop
in
aam
aad
mov
inc
sub
daa
inc
shrb
int
xor
jg
adc
jo
movsl
mov
imul
add
nop
cmpb
mov
shl
clc
push
adc
cmp
stos
in
jp
xchg
and
jle
xor
rcrb
stc
mov
dec
push
scas
lahf
out
mov
push
int
or
cli
test
testl
mov
ds
iret
std
and
sub
aam
inc
lret
inc
arpl
sbb
xchg
repz
lcall
push
mov
xor
dec
mov
mov
jl
test
movl
in
jne
sbb
imul
dec
icebp
sbb
scas
push
xchg
xchg
fs
push
ret
jae
movsl
std
bound
dec
cwtl
ret
xor
jge
loop
js,pn
mov
loop
mov
popf
stos
mov
je
out
outsb
imul
cwtl
adc
add
and
push
lcall
shll
push
lea
stc
inc
pop
fcoml
mov
xor
push
popa
cmp
shr
scas
lea
xor
push
sub
scas
ds
shll
cwtl
cmp
test
mull
mov
xor
xor
dec
je
mov
jae
cmp
sbbb
mov
fidivrs
pop
adc
mov
mov
cmp
adc
cld
push
stos
pop
in
cli
clc
clc
fadds
adc
add
fisubl
mov
loope
push
ficoms
icebp
subl
stc
psrld
or
jnp
lods
retw
das
lcall
xor
pop
aam
xchg
xchg
xlat
mov
test
xchg
push
js
jg
movsb
push
push
outsb
arpl
faddl
sbb
je
xor
or
push
jns
push
adc
je
lods
xorl
cld
mov
imul
jg
iret
jg
push
sub
fldenv
jb
xchg
xchg
insb
jne
mov
das
adc
iret
and
jmp
cmp
sub
add
pusha
in
stos
loop
imul
xorb
jecxz
mov
mov
push
sub
mov
sbb
and
jl
stos
or
jge
xor
cmp
jp
stos
jmp
cmp
sub
xor
aam
pop
hlt
daa
adc
negb
pop
das
je
pop
cmc
pop
sub
add
into
push
cmpsl
cmc
mov
sub
ljmp
adc
cmp
push
mov
mov
xor
in
push
cmpsb
xorb
inc
test
cmp
mov
mov
in
sbb
xchg
pop
stc
rolb
test
mov
cmpsb
fsubrl
cmp
push
mov
dec
push
xor
pop
test
outsl
shl
push
add
aaa
sbbb
mov
pusha
push
adc
int
cltd
add
cmpsl
inc
push
leave
xchg
inc
shlb
jb
mov
mov
fsts
cmc
fucom
dec
aas
and
int
jns
dec
orb
aam
daa
in
pop
xchg
pop
push
enter
or
movsb
and
dec
adc
test
pop
mov
in
jbe
add
add
lds
jae
add
mov
sbb
push
push
xchg
sbb
int3
aas
xchg
cli
pop
test
inc
data16
mov
push
lahf
inc
lds
push
out
jle
lcall
dec
loope
out
or
or
dec
pusha
mov
mov
mov
cmp
pop
jge
int3
out
aas
push
push
adc
jns,pn
negb
push
test
jl
fsubrs
and
pop
repz
inc
cmpsl
int3
sbbl
enter
int3
push
daa
or
sub
or
cli
fstpl
lods
inc
xor
shrb
pop
add
lret
jl
test
push
lret
js
jge
jnp
jmp
aam
jno
inc
mov
adc
pop
iret
nop
icebp
andl
pop
xchg
sbb
stos
jge
aaa
jecxz
pop
or
xchg
fisttpll
das
mov
std
pop
ljmp
ja
stos
shrb
push
push
icebp
dec
adc
call
frstor
mov
jmp
dec
jle
xchg
mov
mov
out
test
ret
cmp
adc
pop
jne
mov
jb
push
fsubl
sarb
fiaddl
cmpsl
cli
mov
fdivs
mov
int3
adc
sbb
fiadds
pop
push
and
sbb
ja
pop
push
cmp
inc
and
clc
pop
outsb
testl
jne
test
sbb
mov
out
sub
mov
stos
cmp
jo
push
repnz
out
sub
mov
jns
fsubr
xor
cmpsl
cs
daa
hlt
cmp
adc
jno
imul
ret
push
insl
push
fimuls
add
cmpsl
sti
scas
push
push
xor
daa
rorl
add
jp
mov
gs
mov
adc
and
or
cmp
or
or
fs
xchg
movsl
fldl
fiadds
notb
sbb
cmp
shl
dec
scas
and
pop
outsl
scas
jae
rcrb
mov
inc
outsb
gs
imul
pop
fisttpl
popa
add
sub
std
je
inc
cmp
movsb
cltd
js
jo
sti
dec
dec
push
insb
mov
fidivl
xchg
nop
loope
mov
repz
in
mov
push
dec
insl
aad
adc
mov
icebp
mov
push
dec
fidivrl
mov
imul
push
push
push
mov
in
pop
push
mov
fucomi
xorl
inc
loop
lcall
adc
movsb
pop
int
and
movsb
jnp
addr16
or
dec
mov
aas
jge
pop
inc
inc
daa
push
aam
dec
leave
push
mov
std
pop
sub
jle
inc
pop
imul
outsb
dec
jg
inc
mov
mov
cld
stos
int3
adc
dec
ret
push
data16
andb
and
aam
ds
mov
xor
ficoms
lcall
ret
dec
jb
lcall
adc
popf
sub
sub
mov
jl
aaa
jmp
jge
mov
push
xchg
mov
scas
pop
repz
push
in
mov
mov
xchg
sbb
dec
cli
and
pusha
xchg
mov
cli
sbb
adc
and
imul
lock
fldl
jmp
iret
out
cwtl
in
inc
push
inc
mov
in
mov
arpl
lea
jo
les
fmul
dec
repz
and
fstpt
test
addr16
ds
jle
pop
scas
in
aad
add
bound
aam
ljmp
and
out
xchg
insl
xchg
call
je
push
insl
xor
push
inc
daa
dec
lds
mov
movsl
inc
ss
jbe
jnp
imulb
adc
inc
std
shl
xchg
cs
mov
push
jecxz
mov
test
pop
inc
or
cmp
mov
addr16
xchg
inc
rcll
inc
imul
daa
mov
mov
inc
adc
cli
mov
mov
dec
push
inc
ss
jns
sbb
aaa
scas
iret
cwtl
jp
cmp
mov
sbbb
lods
sbb
je
lret
das
push
fiaddl
repz
jbe
pop
and
orb
jo
jb
sub
sub
and
sub
xchg
xor
mov
xchg
js
xchg
ja
dec
pop
jno
sbbb
push
je
push
fdivr
fildll
shlb
xor
dec
pop
das
push
pop
xchg
pop
out
cmpsl
imul
jecxz
xorl
mov
ficoml
das
adc
ds
psllq
fmull
shlb
fildl
jmp
cmp
pop
enter
mov
in
fwait
and
lahf
dec
xchg
scas
mov
sbb
push
mov
dec
fldt
mov
adc
or
xchg
push
inc
ja
sub
mov
icebp
adc
adc
adc
inc
scas
call
js
and
in
xchg
incb
aam
ret
sbb
sub
push
pop
imul
cmpsl
les
mov
fs
aas
xchg
mov
adc
mov
sbb
fcomp
fidivs
and
lods
xor
xlat
push
push
shll
sbb
popa
or
xor
xlat
inc
std
lds
gs
ret
filds
xor
loope
or
jecxz
dec
stos
imul
push
jne
sub
dec
je
daa
jecxz
mov
cld
sti
jns
repz
mov
inc
and
jmp
dec
repz
push
jle
test
scas
mov
sarb
stos
cmpsl
push
or
shl
sbb
stos
insb
dec
outsb
mov
mov
dec
pushf
mov
and
int3
push
add
mov
mov
mov
xchg
sbb
jb
cs
lahf
jmp
aaa
push
xchg
sub
in
mov
xchg
scas
cltd
jne
rcll
cmpsl
sbb
pop
jae
sbb
push
jmp
add
and
and
test
daa
xchg
test
xor
push
mov
lahf
cltd
fmulp
dec
mov
mov
cmpsb
dec
fcmove
sub
lds
jno
sub
aad
pop
dec
mov
mov
mov
mov
xchg
fstp
xchg
std
xor
push
js
mov
sub
jmp
hlt
dec
mov
scas
or
inc
xor
adc
ds
mov
insl
cmc
jbe
inc
cmp
lret
test
das
mov
push
xchg
cmp
mov
test
hlt
or
mov
sbb
mov
mov
xchg
rcll
xchg
imul
fwait
cmp
push
mov
xchg
stos
push
inc
lcall
or
xchg
rcrl
jns
fsubl
pop
das
movsl
icebp
test
std
pop
sbb
sub
insl
loope
sbb
mov
push
inc
push
setnp
adc
loop
jmp
or
ret
call
stos
inc
out
inc
lods
shl
rcrb
in
add
int3
and
in
out
repz
lahf
iret
mov
jl
pop
mov
test
inc
call
bound
or
and
jb
mov
pop
mov
jns
outsl
dec
out
cmc
test
repz
adc
push
clc
jns
mov
out
mov
inc
clc
cld
sbb
incl
pop
fildl
std
rcr
adc
dec
nop
mov
das
pusha
mov
sbb
js
push
lods
std
xchg
mov
js
popl
inc
and
jno
mov
inc
push
lods
in
push
inc
xor
insl
sti
adc
mov
xor
gs
jmp
pushf
adc
ficoml
pop
push
adc
fcompl
xor
pop
sub
pushf
dec
push
insl
push
stos
mov
lahf
mov
mov
push
inc
fsubl
addb
dec
decl
or
add
jbe
mov
in
scas
addl
insb
fldl
sub
imul
mov
xor
out
sub
cli
sub
lock
stc
subl
xchg
adc
adc
add
jne
rolb
in
jmp
push
scas
lret
pop
das
mov
jbe
frstor
test
push
jp
nop
jg
sbb
pop
sbb
pop
daa
or
jbe
rcrl
test
jo
fisubs
mov
popf
lock
mov
stc
leave
arpl
outsb
popf
add
dec
adc
pop
outsb
stos
xor
lret
out
imul
clc
cmpsl
mov
pop
inc
mov
fimull
xchg
sub
in
out
scas
push
add
adc
mov
outsb
pop
sbb
je
fmull
xchg
jmp
mov
dec
clc
int3
mov
sub
mov
outsb
shlb
imul
repnz
xor
mov
add
test
lret
gs
mov
or
mov
jle
cmp
aaa
mov
cmp
inc
sbb
sti
xchg
mov
push
mov
nop
push
cmpsl
mov
add
inc
mov
jnp
xor
sub
xor
out
fimuls
sbb
push
jp
mov
movsl
movsl
loop
outsl
frstpm(287
imul
ljmp
pop
inc
push
repz
test
xor
xor
push
in
dec
in
inc
dec
scas
in
not
out
outsb
sbb
popa
xchg
jle
test
jb
mov
mov
fwait
scas
pop
push
ljmp
and
sbb
jl
fistpll
ror
ljmp
push
mov
into
adc
cmc
mov
xor
test
xor
je
stos
imul
xor
dec
jmp
mov
mov
cmp
icebp
lods
sti
sbb
xchg
xor
ficompl
adc
mov
cmpsl
out
xor
int
xor
fdivp
xchg
jns
stos
iret
inc
xchg
call
jbe
inc
arpl
cmpsl
push
push
push
inc
dec
adc
xchg
test
jae
in
mov
daa
adc
and
jnp,pn
jge
lret
stc
cmp
xchg
push
xchg
and
test
mov
mov
mov
sub
movsl
xlat
mov
into
dec
lret
add
popa
sahf
out
push
mov
sub
in
in
mov
mov
in
lods
or
or
push
scas
adc
mov
pop
mov
cltd
test
sub
fisttpll
xchg
fnstcw
dec
cmp
in
outsb
ret
dec
xchg
fs
jge
fldt
or
outsb
fisubs
pop
or
adc
aad
xlat
sti
out
out
shlb
adc
fwait
cmc
adc
dec
dec
xor
rep
sub
and
jne
jns
add
inc
xchg
shrb
in
sub
lods
push
mov
fldl
push
hlt
sahf
jg
jne
mov
nop
jne
mov
inc
push
add
stc
cmp
and
data16
add
das
add
xchg
push
pop
mov
loopne
cwtl
sub
aas
addr16
dec
cli
icebp
jo
hlt
lret
xor
test
or
enter
rcrb
repnz
jnp
imul
jmp
add
mov
mov
pop
jne
and
push
cmpsb
outsb
jbe
scas
cmp
nop
scas
clc
xchg
mov
in
test
bound
gs
dec
out
sbb
xchg
lcall
in
mov
push
aad
inc
repnz
daa
out
sub
inc
jae
adc
cmp
fwait
dec
or
mov
fs
data16
out
jne
inc
sub
test
adc
sti
jbe
arpl
lahf
fimull
fimuls
pop
xor
dec
pop
les
mov
sahf
sbb
mov
je
cmp
call
in
pop
nop
push
cmp
lods
stos
stos
rcrb
bound
arpl
popf
jno
cmp
jg
xor
imull
icebp
dec
inc
dec
dec
jmp
testl
jae
jno
xchg
movsb
mov
pop
bound
out
mov
sub
in
dec
jno
mov
aad
inc
aas
test
lock
data16
jg
push
mov
mov
jle
inc
iret
ds
mov
cmp
mov
in
or
arpl
jbe
mov
and
xor
in
push
push
mov
mov
lock
sarl
mov
lods
leave
test
xor
outsl
push
ret
lcall
cmp
sbb
or
push
je
test
ja
pop
rcrl
pusha
es
mov
data16
addr16
pmulhw
popa
sti
sub
push
movsb
xor
pop
add
jns
orb
or
jne
fcomps
pop
loope
outsl
and
mov
stos
jmp
cs
dec
scas
mov
adc
int3
cmp
fmull
cmpsb
adc
adc
clc
dec
sarb
push
imul
shr
arpl
lock
mov
in
fmul
jbe
call
mov
movsl
inc
cmc
mov
addb
in
sub
pop
rcrl
push
adc
testl
dec
push
psrlw
jg
cmp
shr
cmpsl
push
and
pop
repnz
ficoms
mov
out
sub
in
jnp
enter
lds
leave
xor
sub
pop
add
pop
jo
and
and
setae
jnp
in
pop
test
cmpsl
sbb
nop
pop
loope
jne
jbe
imul
cmp
xor
xor
js,pt
scas
fsts
adc
ljmp
int
xchg
xchg
lahf
pop
xchg
xchg
cmp
add
add
rcrl
outsb
push
push
das
repnz
add
jnp
pop
mov
and
movsb
jle
mov
push
dec
subb
mov
repz
movsb
les
mov
mov
dec
mov
arpl
pop
imul
push
pop
add
mov
sub
mov
jo
outsb
mov
enter
sbbb
sbb
cwtl
mov
lret
mov
jns
sarl
mov
in
pop
jle
jmp
or
sub
pop
dec
mov
mov
mov
cmpsb
jecxz
xchg
dec
ja
sub
mov
fildl
mov
mov
iret
xchg
pop
xchg
out
jge
sub
pop
jbe
dec
mov
or
xor
cmp
fnstcw
mov
fsubs
xor
sbb
cltd
nop
xorl
mov
add
aad
jp
sbb
stc
or
adc
adc
mov
repnz
jbe
pop
aaa
test
xor
fidivrl
mov
pop
jb
xchg
cmp
leave
jb
fcoms
fisttpll
or
cmp
inc
cld
fsubr
xchg
jae
push
cmpsb
mov
ja
push
xchg
and
mov
and
fwait
je
test
ficomps
cmp
fwait
mov
pop
stos
pop
adc
pop
mov
jmp
push
inc
xor
dec
pushf
cmpsb
dec
cmp
dec
stos
push
addl
add
imul
sub
or
fs
jnp
cmp
lock
es
aam
jbe
call
adc
pop
imul
popf
cmpsb
inc
jmp
add
fwait
sahf
in
cmpsl
jae
aas
pop
test
nop
sti
cmpsl
popa
addr16
push
call
scas
push
cmc
adc
and
and
xor
ffreep
bound
js
popa
xor
mov
xlat
xchg
sub
xor
aad
ltr
sbb
inc
jg
mov
stc
mov
push
popf
push
sbb
lock
les
fimuls
movsl
test
insl
cmc
in
loopne
xchg
std
jl
pushf
cmc
pop
push
mov
mov
cmp
stos
sbb
scas
cwtl
mov
das
mov
negb
push
mov
add
lret
or
ret
pop
arpl
lret
and
mov
cmc
xchg
adc
and
jno
dec
inc
cmc
pop
test
jmp
cmp
xchg
into
arpl
lock
in
std
popf
addl
adc
lahf
cmpsl
inc
add
testl
add
mov
sar
test
into
pushw
inc
pop
fs
xlat
je
sub
xchg
dec
jmp
ret
mov
mov
call
dec
and
out
jmp
rorb
scas
cmc
popf
or
pop
cmpsl
fstps
lret
inc
push
and
push
sbb
dec
in
cli
outsl
pop
daa
xchg
or
add
ja
iret
dec
xor
and
cwtl
jae
mov
rorb
nop
shll
cmp
jae
add
sbb
shll
imul
jp
mov
repz
mov
mov
aaa
pop
sub
call
add
enter
jg
mov
push
xchg
mov
dec
shll
jo
fistl
dec
xor
fisubrs
inc
pop
sbb
mov
insl
cs
rol
cltd
cld
orl
lods
push
jge
les
das
push
mov
sub
rcl
push
fisubl
in
subl
mov
ror
adc
mov
mov
gs
mov
test
dec
out
test
or
test
into
mov
add
cmpsb
push
push
sub
dec
data16
mov
in
add
in
loope
int
mov
lahf
xor
mulb
jno
push
rorb
aam
imul
dec
sub
push
xor
mov
jmp
push
jo
jnp
pop
fwait
addl
jnp
pushf
mov
dec
push
adc
mov
cmp
sub
mov
or
mov
xchg
sub
xor
push
xchg
push
cwtl
iret
lahf
loope
aad
or
jb
mov
jg
adc
ljmp
pop
aas
pop
fwait
pusha
movsl
cmp
ja
sbb
add
add
mov
stos
push
pop
mov
jne
inc
in
stos
cmc
pop
scas
inc
nopl
push
sahf
xchg
nop
in
adc
std
out
test
fstl
adcb
pop
push
out
loopne
mov
pop
push
or
es
mov
leave
test
or
mov
ficoml
pop
adc
stos
sbb
pushf
ds
sub
jle
xchg
xchg
jmp
and
cmp
xchg
sbbl
in
cmp
xor
or
ret
clc
xchg
sbb
xor
adc
ds
adc
clc
mov
cmp
addr16
stc
push
test
std
movsl
mov
mov
jne
js
repnz
and
adc
sub
pusha
cmpsl
adcb
lods
xlat
mov
xor
movsb
inc
fwait
and
or
movl
out
lahf
jo
addr16
ja
jno
cmp
push
cmp
xor
cli
subb
imul
lret
insb
adc
push
mov
popl
jbe
imul
adcb
jae
xchg
mov
sarb
or
aaa
call
xchg
rorl
mov
mov
enter
data16
xchg
int
out
pop
dec
in
and
jl
adc
mov
loop
imul
pop
jns
xchg
pop
mov
add
add
inc
add
add
scas
shlb
sbb
movb
shll
hlt
mov
es
push
mov
out
rcl
es
push
sbb
pusha
mov
lea
mov
mov
test
mov
xchg
mov
arpl
addr16
mov
je
inc
jl
mov
movsl
sbb
out
fsub
dec
jb
loope
push
sahf
jb
xor
fsubrs
add
sti
test
mov
in
jnp
push
sbb
sub
ljmp
dec
adc
mov
fldz
stc
and
pop
fdivrp
enter
jnp
fcmovu
mov
in
ret
mov
xor
gs
and
or
dec
pop
gs
lret
int
adc
shrl
pushl
xchg
and
and
ljmp
xor
lock
insl
lods
cmp
sbb
mov
mov
pushf
cwtl
insl
mov
fmul
lcall
sbb
mov
shll
aam
add
sub
and
pop
and
jle
sub
inc
mov
outsb
jge
dec
mov
je
faddl
pop
jno
mov
pop
test
xchg
popa
pop
mov
das
inc
and
xor
sarl
addr16
int
decb
add
sbb
cmp
test
mov
fcomps
cli
pop
inc
pop
ljmp
sbb
mov
lcall
xchg
fwait
xchg
jp
mov
in
adc
arpl
xor
jmp
out
cmpsl
int
repz
lret
hlt
mov
pop
and
mull
mov
mov
sub
arpl
in
sbb
mov
iret
ret
sar
popf
lcall
hlt
inc
adc
jnp
xor
sahf
inc
sbb
pop
stos
sbb
jmp
ja
das
and
mov
cmp
pop
sbb
out
pop
aaa
mov
pop
sahf
aaa
incb
popa
fs
out
add
xchg
insb
dec
and
inc
dec
roll
out
dec
ret
cmp
xchg
xorb
test
dec
lock
out
aaa
cmp
test
adc
nop
sub
cmp
clc
out
adc
fsubrl
dec
popa
lods
sbb
jns
mov
lahf
jp
or
push
inc
mov
lock
ss
push
push
negb
ret
aam
and
mov
mov
mov
les
sub
test
xor
and
sahf
fiadds
imul
movsb
fs
pop
fwait
xchg
push
hlt
mov
clc
adc
add
pop
ret
fistpl
and
push
xlat
andl
fcom
pop
cmp
lcall
xlat
ja
sub
jns
cmp
jg
cmovs
mov
or
inc
jae
push
sbb
push
shll
pop
sub
iret
jae
mov
popf
stc
shrl
in
pusha
mov
or
add
cmp
outsl
mov
sbb
ret
leave
les
scas
mov
scas
mov
das
cs
clc
movsb
jecxz
adc
icebp
stc
dec
mov
xlat
aas
cmpsl
sbb
add
std
push
or
add
call
call
xor
leave
sbbl
adc
sub
scas
cltd
cmp
mov
loop
idivl
mov
lcall
mov
xlat
ficoms
push
loope
nop
mov
lock
push
das
stc
cmp
sarb
arpl
pop
lahf
cltd
mov
dec
mov
aas
movsl
mov
rcrb
sub
lods
cmp
mov
sub
jo
sub
orb
mov
lcall
xchg
mov
xor
add
imul
xchg
xor
push
xchg
leave
cmpsl
rcl
mov
xor
aaa
xchg
aam
jge
sub
in
decb
jg
jbe
push
setnp
cmc
dec
dec
jbe
adc
push
lcall
sub
lds
push
fs
sub
imul
popf
pop
arpl
cmp
pop
jge
adc
lahf
cmc
test
aas
mov
jp
arpl
xchg
jae
add
mov
mov
in
mov
pop
jns
fnsave
sub
lds
cmp
jge
rorl
add
mov
gs
inc
mov
pop
dec
dec
push
mov
mov
cltd
testl
test
aaa
jmp
fs
dec
mov
out
dec
push
fsubs
sub
mov
mov
adc
movzbl
cltd
std
in
xor
cmpsb
lcall
inc
jmp
sub
cmp
push
mov
pop
add
fnstcw
sbb
adc
jns
jno
dec
insb
lods
cli
pusha
fs
xor
push
fsubrp
das
divl
mov
xchg
testl
mov
pop
pusha
mov
ljmp
and
xor
aaa
cmp
pusha
adc
les
and
inc
cs
sbb
insb
mov
and
lret
daa
std
in
adc
pop
movsb
outsl
jnp
imul
push
repnz
imul
inc
xor
ja
loop
ror
push
jl
xor
pop
sbb
mov
dec
jg
mov
sbb
andb
mov
ucomiss
lahf
xor
aas
ss
call
and
into
in
push
roll
dec
out
add
movl
and
jmp
jb
int3
xchg
mov
or
popa
xchg
sbb
mov
stc
mov
cmp
lret
pop
cmc
popa
je
popa
shll
imulb
add
adc
sbb
icebp
lahf
mov
aad
xchg
pop
lahf
out
inc
jg
fidivl
jb
gs
sub
into
or
pop
xchg
mov
repz
aaa
xchg
mov
pop
loop
ret
ret
out
pop
mov
fcoml
arpl
pop
testb
or
outsb
push
push
enter
mov
repz
stos
and
mov
inc
xorb
mov
jae
xchg
adc
jle
cmp
int
pop
xchg
and
pop
addr16
loop
cwtl
cmp
push
lea
gs
sub
adc
loopne
push
dec
add
and
stos
pop
fs
in
add
insl
jbe
push
stos
mov
popa
loopne
or
cmp
cld
jl
pusha
and
mov
in
sub
pushf
jl
lods
sub
iret
push
lock
inc
or
aas
popa
dec
adc
inc
imul
xchg
mov
inc
mov
mov
repnz
jl
sar
es
push
mov
pop
nop
ss
iret
sub
mov
in
imul
cmp
data16
inc
or
adc
dec
fbstp
icebp
or
int
decl
jno
fdivl
dec
out
sti
pop
dec
daa
cld
ss
mov
mov
rcrb
rolb
mov
test
test
addl
iret
add
xor
dec
mov
sub
dec
pushl
xorb
mov
in
push
lods
popa
mov
adc
inc
fxch
mov
xchg
out
fsubrs
mov
scas
cli
adc
fisttpl
or
dec
sar
push
mov
ds
pop
inc
psubsw
push
rclb
clc
popa
jbe
mov
jo
movsb
repnz
xchg
cltd
jns
push
sub
mov
xchg
inc
movsl
les
orb
jle
test
in
pusha
dec
lahf
jg
testl
pushf
ret
xchg
or
cmp
push
ja
jns
and
jnp
cmp
jmp
sub
fmul
and
bound
test
test
xchg
lea
in
xchg
cmpsb
loopne
loope
daa
pop
xchg
sub
movzwl
push
sub
inc
jp
adc
imulb
jne
rcrb
add
insb
add
push
lods
push
jp
mov
cmpb
into
push
cmp
and
jae
ret
pop
loopne
dec
mov
scas
mov
jg
hlt
xchg
jg
js
pusha
loopne
push
xchg
jnp
rolb
sub
xchg
sub
lahf
or
xchg
xor
fwait
aas
xor
cmpsl
mov
shlb
jae
js
mov
fwait
scas
data16
jmp
push
fwait
lds
outsb
inc
cmpl
mov
pop
mov
popa
pushf
subb
loope
sbb
adc
out
cmp
pop
pop
popf
cmpsl
dec
out
fwait
outsb
push
das
int3
jae
repz
mov
push
mov
adc
ret
loop
mov
mov
icebp
pop
xor
sbb
cmp
push
sbb
jb
and
add
jg
das
or
ds
xchg
inc
es
mov
fsubrs
scas
rclb
scas
or
rorl
xor
mov
shlb
scas
ficomps
std
iret
sbb
daa
or
cmp
repnz
add
pop
or
cltd
inc
fstp
pop
inc
sub
xlat
sbb
cmp
out
insb
rorl
mov
push
stos
fldl
and
push
sub
fisttpll
iret
iret
mov
dec
jecxz
inc
xchg
insb
fcomi
shrl
cmp
push
andb
adc
test
lods
mov
out
sbbb
fidivrl
verw
fsubs
scas
test
fldenv
pop
and
lods
pop
add
xchg
popf
inc
push
dec
xchg
mov
xchg
pop
mov
mov
pop
shlb
dec
cmp
aas
popf
fidivrs
push
sub
inc
loopne
loop
dec
pop
dec
inc
es
mov
or
data16
jb
jne
push
adc
pandn
shll
push
gs
jns
jno
mov
mov
adc
dec
push
push
std
lds
sub
das
pop
enter
imul
stc
mov
in
enter
sar
cmc
cmp
js
cmpb
imul
ficoms
xlat
das
push
fisubl
jb
jns
mov
adc
or
repnz
mov
aaa
lds
push
sub
fnsave
xchg
daa
xor
cmp
or
mov
jp
inc
addl
jp
hlt
xchg
mov
cmc
notb
adc
outsl
or
push
movsl
es
popf
fcmovbe
push
or
mov
rolb
pop
call
pop
inc
jae
jb
pop
hlt
mov
cltd
ss
mov
and
xor
out
rcrl
sahf
pop
push
dec
imul
xchg
fimuls
inc
push
shrb
dec
jnp
or
ret
loope
jae
data16
sti
pop
mov
mov
enter
dec
mov
ss
es
push
loopne
add
sub
aam
jnp
add
jns
lods
inc
iret
out
pop
insl
cmp
or
sbb
mov
addr16
pop
mov
aam
dec
jmp
inc
adc
jecxz
imul
cltd
ficoml
mov
adc
into
popa
push
cli
es
push
aas
xchg
sub
fists
ljmp
sub
pop
mov
movsl
or
adc
push
lods
dec
movsl
test
mov
mov
imul
lret
and
aam
mov
daa
sbb
push
sahf
jns
dec
icebp
sahf
sub
data16
fcoms
nop
mov
in
lods
push
sbb
jnp
cwtl
or
popl
push
cmpsl
xchg
mov
pop
fsubs
stos
insl
lds
push
adc
cmp
rcr
test
push
adc
xchg
insl
xchg
popf
pop
shr
dec
push
imul
xchg
xor
mov
xor
push
cmp
lods
mov
into
adc
out
push
jbe
jbe
in
je
imul
popl
lahf
mov
and
es
int
jle
add
sbb
mov
sub
mov
mov
add
push
mov
mov
mov
lea
mov
pop
jecxz
ficomps
and
xchg
inc
and
dec
cmp
dec
nop
dec
adc
xchg
mov
inc
xchg
ja
sub
xchg
add
stos
addr16
dec
or
mov
dec
mov
inc
test
mov
fnsave
cld
or
push
xor
lods
push
inc
stc
and
scas
jbe
es
xor
popf
mov
xchg
test
lahf
adc
xor
sub
test
mov
scas
cmp
ljmp
faddl
cmp
mov
pop
inc
add
bound
fiaddl
xchg
pop
adc
sbb
or
icebp
sti
rol
fs
push
jb
lds
sbb
adc
divl
mov
lret
and
pop
or
inc
rcr
inc
sbb
xchg
lock
pop
mov
dec
jl
je
lods
and
dec
test
sarl
outsb
mov
test
sub
mov
je
pop
adc
dec
into
loopne
je
inc
add
mov
stos
lcall
cmp
adc
jecxz
aam
punpcklbw
ret
stos
pop
mov
imul
fcoml
out
cltd
imul
sahf
mov
pop
push
cld
and
and
aas
push
sbb
popf
xchg
xchg
and
add
pop
pop
ljmp
mov
cmp
add
aaa
es
shrb
and
rcl
test
notb
shl
jae
int
xlat
cmpsb
xor
test
js
push
inc
cmp
sbb
jb
jmp
lock
push
sarl
adc
aam
push
dec
add
std
xchg
insl
icebp
sbb
push
push
repz
or
pop
mov
add
and
test
sbb
int
and
sbb
sub
sbb
push
rolb
mov
mov
sub
jne
pop
sbb
adc
in
mov
movsl
push
cmovl
mov
mov
mov
jmp
mov
sub
jg
jo
add
das
mov
or
mov
test
add
adc
pop
clc
or
out
push
aas
popa
fiaddl
std
outsb
je
ret
adc
and
les
in
cmp
mov
data16
adc
jae
daa
inc
jnp
and
xor
xchg
add
cwtl
mov
or
inc
jl
mov
js
testb
push
lret
loope
movsb
mov
pop
out
minps
fisubrs
inc
or
lcall
sahf
or
fcom
xchg
stos
xchg
sahf
iret
aaa
cmp
mov
sub
and
mov
inc
stc
iret
xor
nop
ret
nop
ja
out
sbb
xor
mov
adc
and
or
test
loopne
out
xchg
sbb
movsw
std
test
js
sbb
jne
pop
out
cmpsl
jg
in
scas
mov
movsl
ret
js
push
test
les
cwtl
jae
xchg
loopne
xor
mov
sbb
xor
mov
jecxz
repnz
push
mov
push
aam
not
jg
mov
out
pop
cmpsl
mov
jge
sti
add
jecxz
pop
mov
std
pop
jo
sub
in
inc
movq
xor
sarl
dec
ret
jne
icebp
cmp
xor
push
mov
clc
int3
mov
repnz
xchg
jae
sbb
ljmp
insb
ljmp
mov
repnz
movsl
cltd
sbb
xchg
adc
inc
mov
lret
xor
sbb
mov
pop
cmpsb
adc
insb
mov
mov
cmp
ds
add
test
and
jp
scas
adc
ret
mov
lret
pusha
mov
push
jne
sub
jno
add
loope
stos
or
push
cmp
inc
mov
sub
mov
cld
xor
sub
xchg
mov
xchg
adc
sub
adc
cmc
mov
add
test
inc
cs
lds
sub
in
or
out
pop
mov
dec
jecxz
mov
xor
push
popa
lahf
mov
xchg
push
lods
jl
push
cmpsb
mov
dec
cmp
aam
loope
pop
push
out
adc
mov
sub
push
mov
repz
cmp
into
add
xchg
mov
shlb
hlt
and
pop
test
jl
sbbl
xchg
dec
mov
sahf
dec
inc
or
popa
push
cmp
cmp
add
push
dec
mov
lds
sbb
mov
addr16
and
cmc
mov
test
imul
xchg
fadds
out
repz
xchg
repnz
add
fistpll
mov
add
test
and
bound
test
and
jnp
sub
je
mov
fnstenv
popf
jbe
out
in
mov
xchg
in
mov
outsb
push
xchg
inc
scas
call
out
cmp
ja
scas
loop
jbe
rcll
jmp
addr16
sbb
repz
pop
pop
dec
out
push
dec
inc
inc
mov
inc
xor
dec
cli
inc
scas
fiadds
mov
cmpsl
orb
fiadds
xchg
ret
pop
mov
or
cmp
and
daa
stc
adc
lcall
frstor
mov
lock
scas
add
add
push
sub
movsb
bound
rclb
dec
lds
jl
xchg
stos
lcall
and
jnp
aad
push
sbb
sub
int3
loope
subb
in
mov
inc
repnz
add
cmp
fcompl
dec
xor
rcll
dec
test
push
loop
pusha
out
cwtl
mov
iret
das
lods
push
in
adcb
ljmp
or
sub
sub
xchg
jl
sti
xor
add
and
fistpll
cld
mov
fsubl
push
sub
push
push
lods
mov
clc
movsb
pop
popa
rclb
lods
fidivl
testb
inc
lea
popf
or
fnstsw
mov
mov
xor
rcl
xor
xor
iret
inc
fptan
jp
mov
xlat
dec
sub
inc
sub
or
ljmp
cmc
xlat
mov
fdivs
sub
jecxz
mov
xchg
enter
push
fildll
and
mov
inc
pop
pop
dec
mov
xchg
lahf
or
rolb
fcompl
xor
fnstenv
fisttpll
insb
mov
dec
scas
and
cmp
rolb
rol
sahf
adc
test
add
gs
adc
insl
test
push
jg
repz
inc
jp
aas
dec
mov
movsb
mov
pop
les
sub
dec
not
notl
push
lahf
gs
xchg
jmp
out
adc
jns
mov
popf
loopne
push
xchg
insl
adc
jl
dec
cmpsl
dec
scas
mov
je
mov
fwait
jnp
popa
js
pusha
xchg
jo
ja
inc
xor
adc
add
push
mov
jmp
addr16
stos
jae
cmc
scas
dec
adc
pop
lds
mov
cmp
inc
xchg
aad
mov
push
fdivr
aas
in
clc
ljmp
inc
mov
mov
adc
inc
adc
repnz
cwtl
rorl
aam
lods
aas
nop
int
popf
sbb
jl
loopne
xchg
sbb
sbb
mov
xorb
inc
mov
es
popa
enter
ror
adc
xchg
mov
dec
not
in
addr16
cli
addr16
inc
aaa
mov
fcomps
lea
xchg
test
loopne
pop
mov
jg
sub
adc
ss
imul
ljmp
mov
sbb
repz
movntq
out
adc
orl
sbb
repz
outsl
dec
mov
aaa
cltd
add
popa
mov
mov
sub
imul
iret
test
icebp
add
push
scas
push
insb
decb
dec
jnp
dec
jbe
orb
bound
pop
shl
filds
nop
or
push
loope
hlt
lret
jmp
icebp
adc
xor
xchg
xor
aam
xchg
push
lcall
into
jnp
bound
pop
sbb
outsl
fs
movsb
adc
cs
pop
cmc
les
sub
mov
push
test
out
lds
add
outsb
loopne
data16
and
push
shrl
xor
cmp
xchg
pusha
push
subl
fstl
sti
aad
push
dec
out
xchg
push
lret
xchg
imul
sub
out
leave
cmp
mov
enter
daa
add
fsubl
rclb
scas
addl
or
jecxz
ret
inc
sbb
in
outsl
adc
add
sbb
out
lods
xor
pop
xchg
stos
sbb
pop
andl
sub
push
lret
fs
cmp
jne
lods
push
cltd
sub
lea
and
clc
adc
lds
dec
rolb
adc
jge
inc
rclb
and
jle
xchg
dec
ljmp
dec
or
xchg
scas
cmp
mov
push
pop
xchg
pop
pushf
adc
dec
ret
loopne
insb
xor
dec
cmp
rcrb
loop
insl
test
add
movsb
sbb
daa
pop
dec
or
fdivl
fmuls
lcall
sbb
sbb
movsl
aad
push
push
cmpsb
addr16
cmp
mov
ja
ja
jns,pn
rclb
xchg
cs
and
scas
jno
aam
cwtl
cmp
cmp
xor
arpl
into
nop
mov
ljmp
jg
mov
inc
push
inc
ljmp
inc
xchg
loopne
sbb
xchg
out
adc
in
xchg
push
sbb
xor
cmp
xchg
das
push
push
adc
icebp
xchg
and
movsl
loope
rcl
int3
sub
rcrl
xchg
or
in
adcl
loope
nop
inc
mov
mov
mov
neg
pop
sbb
loop
rcll
lret
pushf
mov
jne
push
lods
sbb
sub
test
add
jg
jae
sbb
inc
adc
push
loope
cmp
stos
jg
jl
aam
mov
push
and
int
imul
scas
inc
cmp
lods
nop
rol
repz
push
lea
mov
mov
call
out
scas
aas
add
das
dec
divl
sub
push
addr16
cmpsl
jecxz
mov
dec
lods
popa
cmp
inc
in
out
mov
out
pop
mov
cmpsl
cmpsb
cs
pop
sub
lods
scas
sarb
call
xor
mov
mov
stos
sub
lods
lea
mov
xlat
sbb
pop
mov
push
ret
arpl
cmc
xchg
loop
mov
or
or
xchg
packssdw
jns
xor
out
mov
jne
scas
push
out
push
pusha
bound
arpl
mov
mov
pusha
pop
out
out
ds
sub
loop
stc
adc
nop
in
std
cs
and
mov
jp
lods
and
push
jle
xor
cmc
or
jns
popa
mov
jo
mov
addr16
inc
push
hlt
cmp
push
aad
arpl
outsl
outsb
mov
and
in
mov
out
mov
outsb
add
sub
and
cmp
leave
notb
sahf
popf
sbb
mov
adc
lea
shrl
pop
inc
xrelease
xor
cmp
cli
push
sub
dec
cltd
jle
and
push
out
in
adc
iret
push
sbb
sub
add
cltd
dec
pop
aad
pop
and
push
push
les
or
insl
dec
xchg
leave
mov
insl
sar
pop
jge
add
shlb
and
and
sahf
stos
push
out
lods
xor
pop
insl
aad
ret
add
cmp
popa
pop
xchg
sbb
jp
out
pop
test
add
xlat
scas
call
or
pop
ds
xor
mov
sub
and
mov
imul
and
mov
mov
out
push
cmp
data16
push
test
mov
dec
mov
inc
sub
jb
mov
outsl
stos
loope
das
xor
mov
pop
imul
and
and
xor
gs
mov
addl
or
sbb
les
mov
mov
adc
inc
adc
in
sbb
adc
test
out
iret
sub
xchg
adc
xor
inc
and
pop
rcl
inc
sub
or
cmp
pop
sub
or
mov
xadd
jne
mov
scas
sbb
inc
rorb
rcrb
cmp
mov
and
sti
jge
pop
sub
stc
push
addb
push
sub
xchg
dec
mov
into
mul
push
xor
inc
arpl
bnd
out
adc
pusha
xchg
scas
lahf
mov
xchg
xor
or
or
movsb
pushf
cmp
push
in
and
xor
pop
push
mov
pop
clc
shl
cld
xchg
mov
fwait
popa
xchg
mov
rcrl
fmull
out
mov
loop
fimull
mov
dec
mov
notb
jecxz
rorb
int3
pop
sub
stos
sarb
inc
je
sti
call
enter
cmp
inc
clc
int3
cld
inc
loop
sub
inc
inc
cmp
je
movsl
sub
dec
stos
xchg
mov
test
and
outsl
jge
mov
xchg
sbb
loop
cmc
mov
inc
addb
mov
jnp
xor
sbb
dec
xchg
data16
loope
and
mov
pop
jle
mov
jb
add
filds
cld
stos
popf
insl
mov
cli
dec
xchg
shrb
enter
es
mov
bound
dec
lahf
sbb
sti
cmp
cltd
and
jbe
dec
sar
xchg
or
or
out
jle
pop
mull
jae
push
arpl
mov
out
data16
sub
pop
ja
xchg
cmpsl
not
xor
push
movsl
mov
xchg
cwtl
jp
xor
cltd
stos
mov
testb
add
insl
xor
push
add
push
cmp
mov
lahf
aas
adc
out
fdivrp
std
out
and
cmp
jge
pop
in
xchg
pop
sbb
mov
dec
pop
iret
jp
mov
adc
mov
daa
cld
xchg
dec
add
cmp
mov
ljmp
add
movsl
push
mov
mov
js
xchg
shlb
lahf
mov
xchg
mov
fisubs
out
lods
pop
inc
push
sub
adc
test
push
push
loopne
pop
mov
imul
incl
pop
dec
push
ficomps
push
icebp
leave
jge
xchg
subl
pusha
mov
jl
rorl
mov
lods
push
jge
data16
enter
sahf
dec
stos
sub
push
popa
inc
and
mov
inc
loope
push
stos
xlat
mov
clc
fmull
mov
mov
in
push
js
in
dec
xor
mov
nop
cmp
jecxz
pushf
mov
mov
xor
cmp
stc
cmpsl
movsb
aaa
call
loopne
or
adc
sbb
xor
fsubrs
shl
push
imul
call
sbb
xor
push
pop
push
sti
aaa
xstore-rng
cmpsl
sarl
in
ret
add
aas
fldl
jne
pop
mov
mov
push
mov
insl
scas
pop
lods
xchg
test
dec
push
xchg
cmp
les
pushf
cmpl
stos
movsb
xor
sahf
jle
mov
mov
mov
cs
lods
into
push
aas
movsb
ficoml
scas
mov
in
ljmp
testb
jbe
enter
shlb
mov
pop
lea
mov
cmpsl
int
or
fsubl
sahf
mov
out
jae,pn
sbb
and
sbb
aas
out
fcomi
or
dec
cmpsb
and
bound
dec
fidivrl
jle
loopne
sbb
push
or
xchg
out
scas
lahf
adc
iret
or
fisubs
mov
movsl
fnsave
adc
std
xor
mov
movsl
int3
sbb
xchg
dec
test
sub
lods
std
enter
aas
xchg
inc
lahf
or
jae
cmpl
sbb
ds
popa
push
data16
in
pop
adc
in
push
aaa
mov
sbb
test
xor
std
xor
jno
inc
aaa
fsubrp
jle
mov
mov
repnz
push
lods
mov
in
adc
add
and
push
push
inc
add
mov
hlt
icebp
jb
hlt
out
add
sbb
push
sti
xor
aaa
add
cmpsl
cmpsb
rcll
loopne
ror
out
jbe
xor
pop
clc
cli
mov
movsb
xchg
leave
xchg
ljmp
pushf
imul
ja
add
aad
cmp
roll
jne
cmp
fnstenv
and
pop
shr
rorb
inc
les
jecxz
sbbl
cmp
mov
jo
shr
mov
test
cmc
jnp
aam
sbb
scas
lcall
daa
pushf
add
cmp
loop
push
push
cmp
scas
jo
int
lds
sbb
or
cli
ret
loop
cs
sub
mov
mov
int3
xchg
sahf
mov
jae
repz
inc
fstpt
mov
clc
in
int
inc
sub
pop
jecxz,pt
lcall
mov
pop
mov
adc
cmc
inc
ja
jnp
scas
xchg
loopne
xchg
mov
mov
in
lcall
ss
int3
sbb
dec
in
pop
fwait
xchg
mov
rorl
je
xor
push
xorb
mov
shll
mov
mov
aam
push
aaa
mov
xchg
xchg
cmc
or
mov
insb
and
push
pop
movsl
jl
jae
mov
inc
pop
popl
roll
movsb
test
into
lock
sub
cwtl
rcr
xor
xchg
sbb
pop
mov
shlb
sub
lea
rcrb
out
jo
sbb
stos
sub
jp
out
test
repz
lret
mov
mov
or
sbb
pusha
mov
or
inc
imul
shr
fimuls
shl
aas
in
inc
jnp
fnstcw
inc
fsts
pop
fstpt
aaa
push
stc
jnp
push
cs
lcall
mov
testw
sarl
ret
mov
orl
sbb
mov
or
sarl
dec
mov
xlat
sub
test
jmp
xlat
push
jb
and
fimuls
adc
push
iret
sti
cmpsl
mov
cltd
loope
add
lods
xor
mov
mov
push
sbbb
xchg
inc
mov
in
sbb
add
mov
pop
xchg
out
inc
push
add
fcmove
and
test
cmp
shlb
push
add
xor
mov
neg
jnp
jmp
push
mov
int
adc
fcoml
and
or
out
dec
int
push
jle
push
push
lahf
xchg
inc
push
lea
addr16
pop
stc
into
movsb
int
sub
out
fwait
lret
jae
movsl
mov
jmp
lcall
push
cmp
dec
adc
xor
mov
inc
pusha
push
stc
lock
sarl
xchg
je
dec
les
addr16
or
repnz
aas
cmp
in
dec
call
inc
mov
out
dec
push
loope
xchg
loope
int
dec
mov
mov
dec
add
sub
xchg
aad
test
xor
add
push
dec
iret
mov
jbe
aad
shlb
push
push
cmp
lods
add
mov
lcall
jecxz
cltd
jg
ss
add
mov
cmpl
scas
test
mov
xchg
jecxz
sub
pop
cmp
dec
and
or
and
mov
subl
subb
ljmp
imul
mov
xchg
stos
popa
jle
sub
push
sub
jno
test
test
sbb
xchg
insl
insb
or
adc
out
mov
xor
cwtl
push
and
mov
sub
dec
mov
cwtl
pop
aad
fsubrl
sbb
mov
jecxz
pop
fbld
xchg
leave
fadd
pop
mov
push
pop
loop
mov
jbe
shll
test
xchg
mov
sub
jno
in
mov
cmp
jbe
stos
popa
das
inc
sbb
xorb
or
jb
pop
mov
mov
insb
and
cmp
or
sub
push
inc
pop
pop
jmp
adc
mov
add
icebp
xchg
fisttps
mov
mov
fchs
dec
nop
loope
push
sub
arpl
mov
push
mov
add
loope
adc
jmp
xchg
mov
or
arpl
sbb
ss
jo
dec
sbb
mov
movsl
int3
push
xchg
sahf
jp
xchg
fsubl
adc
mov
xchg
pop
and
push
test
fidivs
sarl
ds
int
fsts
in
scas
dec
dec
addb
push
or
ror
mov
xchg
jp
dec
cld
xchg
rcll
cmp
pop
pop
inc
int
jo
or
ss
mov
pop
sbb
mov
lds
rorl
mov
cli
xlat
and
lcall
mov
sbb
cmp
inc
jbe
imull
pusha
xor
pop
jnp
jae
xchg
icebp
decl
aas
push
fwait
jo
clc
movsl
sbb
lock
add
cmp
arpl
cs
mov
aas
rcl
dec
push
stos
cli
jae
sbb
jg
xchg
popf
xchg
cmp
leave
or
pop
xchg
and
stc
test
gs
cli
dec
inc
mov
data16
mov
shl
out
rorb
and
mov
dec
and
out
mov
dec
bound
out
test
mov
loopne
xchg
lock
sahf
arpl
sbb
cmc
pop
mov
nop
popa
dec
mov
inc
rclb
ret
mov
scas
inc
cmp
daa
and
and
lret
dec
jle
xor
pop
cltd
lret
xchg
mov
nop
ret
and
jmp
pop
xchg
pop
stc
movsb
sbb
aaa
dec
shlb
push
xchg
cs
dec
lds
push
adc
push
fs
jecxz
cmp
xor
pop
je
mov
jae
insl
popa
inc
xchg
dec
push
push
in
push
add
ljmp
sbb
dec
fdivs
mov
push
out
repz
push
arpl
jns
dec
out
popl
and
dec
jnp
jns
dec
ret
psubb
lahf
fldl2e
inc
rolb
jl
test
add
cli
inc
sbb
push
stos
pop
and
xor
lock
repnz
sub
jg
cmp
mov
mov
jae
mov
rorl
sub
iret
nop
into
jns
adc
mov
inc
mov
push
pop
popa
test
cmc
push
mov
push
adc
lock
xchg
lea
mov
pop
pop
add
cltd
xor
and
push
mov
enter
push
adc
cmpsw
insb
lods
leave
lods
cwtl
jae
push
lds
pop
loopne
daa
adc
mov
pop
add
sub
xchg
mov
cld
sbb
jno
add
jg
rcll
rorb
sub
jg
fistps
adc
test
inc
pop
inc
out
scas
cmc
mov
fistpll
pop
cmp
xchg
aaa
jb
or
adc
lods
frstor
lds
test
dec
ror
mov
arpl
cmp
cmp
xchg
xchg
cs
mov
movsl
ds
mov
repz
pop
lea
test
dec
lock
push
int3
jecxz
pusha
dec
push
mov
push
pop
test
jg
sbb
pusha
mov
aas
mov
fs
fcmovnbe
es
cltd
imul
aas
int
in
das
sub
leave
sbb
ret
push
shl
cltd
xlat
mov
xchg
or
pop
shr
mov
xchg
add
rcll
icebp
push
nop
movsb
mov
stos
idivl
pusha
and
cmp
icebp
xchg
jge
cmp
das
mov
fwait
mov
jg
test
push
idivl
cmp
push
add
out
mov
int3
fiaddl
pop
jecxz
movsb
sti
or
jns
lcall
sbb
js
call
inc
xlat
into
cld
in
push
lret
addr16
jne
pop
icebp
inc
xchg
mov
xchg
sbb
jns
lret
jecxz
sbb
mov
outsb
sbb
push
std
cli
mov
sarb
imul
dec
push
inc
fs
push
test
adc
lea
and
cmp
iret
or
pop
inc
xor
mov
ds
int
ljmp
xlat
hlt
xchg
out
pop
mov
dec
cwtl
jle
ss
enter
add
jbe
lret
pop
shl
addr16
jns
pop
xor
push
int3
lahf
jge
mov
fs
adc
mov
inc
cmp
jecxz
xchg
cmovl
inc
roll
push
adc
es
inc
repnz
sbb
lods
lock
fwait
pop
inc
int3
inc
aam
xlat
mov
mov
in
adc
inc
stos
xor
cld
rorb
das
imul
js
mov
aad
mov
jnp
outsb
push
stos
nop
cmp
sahf
add
repnz
js
mov
xor
inc
mov
ret
scas
pop
cwtl
xlat
or
cltd
xor
xor
cmp
cmpsb
sbb
mov
mov
mov
push
dec
adcb
lahf
out
push
lret
loope
fcmove
lods
icebp
xlat
test
cmp
int3
xchg
mov
sbb
repz
pcmpgtd
fbstp
inc
pop
mov
cmp
pop
les
dec
pop
dec
jo
xor
mov
bound
cmpsl
or
sub
and
push
push
adc
movsl
sub
xor
sub
and
dec
mov
fidivrs
inc
jl
daa
jmp
leave
adc
jg
push
lods
cwtl
frstor
and
or
fcoms
hlt
lahf
nop
daa
subb
sub
pop
int3
xor
stos
leave
inc
cltd
xlat
aad
jecxz
adc
iret
jp
pop
push
adc
lret
xor
pop
dec
dec
adc
xor
pop
leave
add
inc
ja
mov
xor
movsb
sub
or
xor
push
adc
jp
lods
lcall
jg
dec
aad
mov
mov
loopne
push
mov
push
leave
adc
jne
or
lcall
and
insb
sub
adc
inc
mov
sbb
shrb
cmpsb
sub
xor
cmpsl
fldt
xchg
ret
and
mov
test
dec
sbb
mov
stc
outsb
sub
mov
adc
bound
jns
inc
push
shrl
scas
fcoml
fstl
adc
test
pusha
mov
xchg
xor
mov
cs
loopne
jmp
daa
lds
ret
mov
pop
test
clc
or
lret
notl
ja
pop
inc
mov
mov
subb
lea
or
les
and
cli
dec
int
dec
push
test
jbe
dec
dec
mov
aaa
jb
andl
ljmp
out
je
cli
push
xchg
rcrb
ret
repz
jp
cld
add
and
cmp
aam
mov
adc
ljmp
adc
cltd
mov
and
mov
call
bound
sti
adc
dec
sub
aas
adc
iret
cmp
outsl
bound
pushf
daa
out
inc
repz
je
loope
pop
or
push
mov
cld
sub
clc
mov
mov
or
mov
rolb
pop
and
jmp
mov
jb
addl
or
add
jns
cli
jecxz
stos
xchg
ja
fsubrs
out
sub
fisttpll
ja
lods
ret
stos
mov
jmp
mov
pop
mov
push
pop
lds
xor
mov
adc
jmp
add
pop
mov
xchg
mov
adc
adc
lret
dec
mov
imul
lods
jne
movsl
push
or
jecxz
mov
xor
add
and
insb
add
adc
cmpl
clc
mov
movsb
in
lcall
gs
adc
mov
fldl
repz
movsb
sub
jle
push
aas
cmc
aas
xchg
sbb
imul
mov
rclb
mov
sbb
fsubs
shl
xor
mov
push
mov
mov
mov
mov
mov
cmp
outsl
push
movsb
inc
leave
gs
insb
in
stos
dec
adc
pop
sarb
sub
sti
aad
cmp
imul
leave
adc
dec
add
xor
xor
test
js
push
decb
adc
or
roll
sbb
repz
pop
add
scas
cmp
std
add
sub
mov
mov
loopne
ror
pop
push
lcall
xchg
rcrl
out
mov
jno
clc
jmp
dec
or
mov
dec
test
fistpl
outsl
mov
sbb
pop
es
pop
or
and
jl
inc
test
mov
lret
xchg
or
mulb
inc
clc
aam
sti
xchg
rolb
xchg
inc
push
out
mov
cltd
dec
jbe
mov
js
repnz
xchg
dec
pop
jo
add
inc
jle
sti
pop
mov
cltd
pusha
mov
fcompl
dec
dec
pop
and
repnz
inc
or
aam
out
push
dec
and
or
adc
imul
xor
cmp
mov
mov
test
sbb
mov
ds
dec
out
int
push
lods
stc
and
loope
pop
shll
icebp
jl
mov
dec
fists
fcoms
jb
xor
mov
movsl
cmpsl
xchg
jmp
sub
xor
addr16
push
mov
xchg
mov
les
std
flds
dec
addl
shll
lret
mov
and
in
push
mov
adc
xor
sbb
inc
and
data16
shr
jae
mov
insb
fmull
pop
pop
sub
xlat
js
iret
cwtl
ds
rcr
out
xor
xor
imul
lcall
mov
mov
ret
xchg
pop
push
and
cmp
je
push
stos
dec
hlt
xor
mov
add
cmp
xchg
in
and
dec
rorb
sbb
xorl
into
nop
jno
xor
out
bswap
sbb
hlt
sbb
imul
movb
das
xchg
fisttpl
dec
or
neg
jge
pop
push
sbb
test
mov
addb
sbb
cwtl
and
imul
sbb
jbe
daa
jo
sub
std
jns
xchg
or
fstpt
outsb
jns
mov
cld
test
sub
xor
push
mov
inc
out
jg
repnz
xor
sbb
jecxz
inc
and
or
jno
aam
push
add
decb
js
fistl
push
outsb
ja
xor
and
mov
pop
jbe
je
jmp
or
cmp
sbbb
mov
pop
xchg
enter
cltd
into
ror
adc
xlat
and
mov
and
jns,pt
dec
xchg
inc
jl
shll
lahf
adc
out
repnz
lret
xchg
sub
and
xorl
cmp
sbb
cmpb
jg
in
addl
xor
jmp
push
sbb
or
jecxz
mov
push
shll
xlat
pop
xchg
fcmovne
cld
into
addr16
stos
mov
and
pop
push
icebp
mov
fbstp
lods
cmpsb
or
sbb
adc
das
shlb
cmp
pop
iret
pop
je
lahf
movsb
push
in
fidivrs
ret
vmulpd
mov
sub
imul
xor
or
sahf
cld
imul
sti
lea
test
shlb
push
jmp
jmp
inc
pop
add
int3
mov
mov
xchg
fisubs
push
sub
fcoml
push
loopne
push
sub
mov
cmp
lds
cmc
mov
ds
aaa
iret
daa
push
test
mov
add
jl
push
stos
daa
stos
pop
mov
add
adc
sbb
ficomps
in
jb
jne
mov
pop
push
or
aaa
xor
add
mov
push
or
pop
lods
jg
loopne
int
ljmp
fwait
lret
sbb
cmp
repz
mov
add
imul
mov
or
lds
out
jcxz
xor
jp
sti
xchg
pop
mov
xchg
dec
mov
inc
adc
xchg
or
mov
push
lods
inc
mov
mov
into
push
shr
add
jecxz
fwait
mov
pop
adc
lret
and
sti
jp
adc
lret
ss
and
push
cmp
lcall
sbb
lods
push
fwait
add
mov
clc
mov
popa
lods
js
das
push
cmp
fimuls
rol
and
xlat
mov
ljmp
outsl
jge
inc
into
lds
push
sti
sti
cld
out
ficoms
out
sub
pop
cmp
sti
lds
stos
inc
test
sub
or
adc
add
pop
daa
sti
out
popf
mov
xorl
lret
lods
push
sbb
or
cmpl
xor
inc
pop
push
or
and
int
xchg
and
ljmp
aas
outsb
int3
mov
aad
das
pop
inc
sbb
pop
lods
loopne
ret
or
stos
sbb
jns
gs
xchg
xlat
sti
dec
mov
xlat
pop
in
out
sub
pusha
mov
xchg
adc
push
cmp
icebp
mov
nop
xchg
mov
xchg
addl
xchg
fsubs
sub
ljmpw
lds
push
loope
sahf
push
subb
push
jle
outsl
movsb
mov
pop
jb
stos
loop
fwait
insb
pushf
mov
lcall
cli
mov
fidivs
xor
cld
out
daa
sbb
mov
or
adc
cmp
lods
sub
lahf
jmp
adc
pop
out
sub
jl
gs
lret
mov
cmp
std
pop
xchg
pop
pop
mov
movsl
imul
shrl
aad
stos
scas
popa
cwtl
int3
push
xor
sub
daa
addr16
jne
mov
cmp
jnp
dec
push
shrb
pusha
mov
mov
sti
or
push
movsb
dec
fbstp
movsl
sbb
dec
dec
cmpsl
pop
sbb
incl
or
arpl
data16
push
outsb
rorl
jmp
std
daa
lea
add
push
popf
pop
mov
pop
cltd
mov
nop
rcrb
pop
filds
cmp
cmp
mov
fwait
pop
pop
mov
mov
or
add
jmp
jno
test
jno
mov
mov
push
cmp
jg
cld
cmp
cltd
xchg
movsb
aad
mov
test
sarl
push
xchg
in
sub
roll
jbe
lock
cmpsl
or
out
inc
push
sbbl
push
ljmp
push
rcrb
in
sub
xchg
push
into
lock
sub
sbb
pop
cmp
sti
movsl
push
mov
into
gs
xchg
sarl
gs
mov
mov
push
push
dec
lods
push
mov
lods
mov
ror
test
cmp
faddl
in
insl
adc
or
cmp
sbbl
pop
xchg
sub
push
sub
sbb
sbb
cmp
in
pop
into
inc
jne
jne
dec
mov
rorb
mov
and
fs
idivl
cmp
dec
mov
leave
pop
jo
mov
scas
addr16
cmp
cwtl
jecxz
mov
xchg
add
sarb
mov
sub
xor
lahf
xchg
int3
mov
inc
sub
push
inc
call
jbe
pushf
ror
ja
pusha
jmp
xor
pop
lods
mov
ja
movsb
aas
pop
push
cmp
xchg
pop
mov
mov
adc
out
shrl
mov
mov
adc
jg
and
sub
sbbl
andb
sti
cmp
mov
out
mov
push
push
pop
in
das
sub
clc
bound
add
jmp
adc
inc
sarb
addb
out
cmp
shrl
and
dec
js
out
ret
popf
lret
lahf
push
xor
icebp
inc
adc
or
repnz
fdivr
dec
lea
fcomp
xchg
inc
adc
cld
sbb
ja
negl
je
push
mov
cld
pushf
stos
dec
adc
xchg
sub
dec
mov
and
notb
mov
stos
popf
into
mov
loop
pop
aaa
push
fwait
fs
xchg
sbb
mov
cmpl
xor
popf
xchg
ja
test
cmp
push
dec
mov
xor
mov
in
xchg
ficoml
lock
or
mov
jecxz
popf
jecxz
push
sub
out
push
inc
les
pop
incb
pusha
jmp
sub
in
push
cmp
call
pop
shrl
and
cmp
in
lock
outsl
lock
pop
jno
stos
mov
push
insb
or
dec
dec
outsl
xchg
xlat
test
xchg
or
pmulhw
nop
mov
rorl
into
or
push
cmp
daa
mov
lahf
xchg
xchg
movd
pop
mov
ss
inc
and
lahf
lcall
lock
iret
jmp
ja
testb
insb
inc
mov
loopne
jnp
fwait
xchg
int
mov
sub
movsl
jno
mov
dec
jmp
stc
jmp
xchg
mov
pusha
shl
cwtl
gs
mov
pop
stc
ror
sahf
dec
pop
mov
mov
dec
std
test
daa
decl
mov
sti
loope
push
push
inc
cmpsl
jne
mov
dec
fwait
sbb
adc
pop
in
pop
or
push
arpl
into
lret
aam
or
icebp
jp
push
xor
and
dec
push
imul
div
jmp
out
test
loopne
push
lahf
ljmp
call
push
cwtl
aam
call
push
xchg
jae
or
push
or
add
lcall
and
push
jmp
adc
cltd
add
stc
aaa
sub
fstp
push
mov
push
xchg
pop
push
adc
aam
sub
dec
cs
stos
das
faddl
mov
test
sub
sahf
push
jge
xchg
sbb
xchg
or
das
push
pop
movsb
mov
outsb
push
rol
cmp
cvtps2pi
push
jbe
mov
lods
es
outsl
xchg
cmp
stc
repnz
cmp
pop
add
out
cmp
or
jo
in
aaa
push
xchg
mov
sub
leave
sub
jge
jmp
or
outsb
cmp
cmp
test
dec
adc
nop
mov
jmp
or
cmp
mov
imul
mov
adc
push
pop
aas
push
lret
arpl
and
pop
out
cmp
mov
xchg
xor
mov
loopne
rcrl
iret
imul
lods
enter
jno
iret
dec
xchg
or
outsl
bound
test
iret
jb
clc
dec
mov
sti
loope
mov
leave
sub
add
fwait
popa
and
sub
ss
dec
and
push
and
pop
rclb
xchg
je
push
dec
jnp
pop
ss
jp
gs
movsl
push
test
mov
inc
outsb
repnz
sbb
aam
mov
sub
sbb
ret
pop
outsb
sbb
xacquire
into
cmpsl
fisubrs
xlat
ficoml
mov
xchg
jb
mov
mov
xchg
fs
dec
pushf
jmp
stc
xor
sub
mov
mov
call
pushf
and
in
ret
and
fadds
shl
xchg
adcl
test
mov
jg
pop
sub
and
xchg
or
jmp
adc
subl
xchg
cmpsl
dec
mov
insb
cli
sahf
or
aam
mov
insb
loopne
add
jo
inc
add
aas
movsl
mov
adc
cmpxchg
push
add
sub
dec
push
xor
and
ret
adc
mov
pop
mov
cmp
inc
ret
mov
ss
push
xchg
insl
sub
jno
test
mov
bound
inc
std
jge
or
stc
xor
mov
xchg
nop
test
xor
test
vpaddw
or
mov
mov
ret
inc
repnz
fimuls
stos
and
loope
into
popl
fmulp
jb
mov
mov
xor
and
cli
int
and
scas
mov
or
jp
mov
jae
adc
mov
pushf
ficoms
in
ret
hlt
or
dec
movsl
inc
push
inc
aas
inc
pop
jno
in
cmpsb
fisttps
movsb
ds
pop
pop
jmp
seta
push
jg
sbb
pop
stos
je
mov
rcrb
outsb
xchg
pop
or
not
xor
jbe
sbb
sub
negl
and
pop
dec
mov
push
sahf
daa
jg
adc
add
pop
jge
xchg
je
aaa
mov
pusha
add
mov
fisubl
inc
sub
sub
sbb
sti
xor
mov
xor
cmp
paddsb
cmp
ret
push
repz
popa
inc
sahf
adc
or
and
test
dec
jnp
jno
outsb
xchg
xchg
add
mov
mov
jge
mov
es
cs
mov
notb
cld
js
adc
xchg
mov
dec
or
push
mov
daa
adc
scas
xor
jge
dec
pop
popf
dec
aam
sbb
mov
xchg
add
push
je
mov
shrl
and
into
outsb
les
out
inc
pop
jo
jns
sbb
fnsave
push
cwtl
mov
call
jns
in
or
test
xchg
mov
lcall
or
aam
mov
fwait
cwtl
jno
mov
shrb
std
repz
adc
ss
push
adc
pop
sub
dec
cmp
aad
mov
inc
les
adc
xor
imulb
pop
clc
pop
pop
push
sub
fdivrs
aas
adcl
imul
inc
xchg
adc
popf
xchg
push
dec
ret
dec
incl
xchg
dec
jnp
pop
mov
addr16
pop
jecxz
rorl
daa
mov
mov
push
add
jnp
outsb
or
mov
aaa
clc
jmp
int3
and
jg
testl
outsl
imul
fsubrp
subl
mov
jp
data16
int
imul
cmp
sahf
or
stc
jo
sub
or
pop
outsl
pop
std
testl
push
shr
pusha
mov
xchg
sbb
subb
out
pop
or
push
hlt
sbb
in
clc
int
daa
imul
adc
loop
push
push
bound
jo
push
hlt
cmpsl
hlt
mov
int
mov
lahf
xor
pusha
adc
ret
jne
loop
cmp
sbb
test
push
enter
das
outsl
jae
sub
push
mov
cmp
jb
dec
adc
bnd
xchg
shll
jge
jp
jnp
sbb
mov
pop
xor
inc
fwait
add
notl
add
mov
and
mov
mov
and
mov
bnd
dec
lahf
sbb
nop
nop
out
sbb
fucomi
jbe
add
and
and
int3
data16
xchg
mov
popa
cmpsb
mov
out
rcll
dec
add
lret
cs
cmc
shrb
and
mov
push
lock
dec
xor
add
subb
cli
out
xor
mov
pop
cmp
cltd
add
lods
lods
mov
jne
outsb
jae
call
inc
mov
loopne,pn
in
inc
xchg
xchg
lcall
aam
cmp
jnp
cmpsl
xchg
iret
dec
jmp
mov
in
mov
pusha
lea
lock
arpl
fcompl
shl
or
and
sahf
out
pop
xchg
repz
xor
dec
pop
mov
inc
pop
lods
push
ds
mov
daa
dec
or
adc
mov
cmp
pop
pusha
lds
cmpsl
cmp
push
das
int3
int
mov
shl
adc
xadd
mov
or
sahf
xchg
push
push
mov
sub
jae
cmp
lahf
mov
lahf
mov
sti
xlat
mov
xchg
dec
addr16
inc
cmp
into
jmp
and
popa
mov
inc
idivb
lret
xor
mov
jno
and
inc
adc
mov
and
adc
imul
cmp
dec
stos
loopne
inc
xor
dec
push
cwtl
bnd
xchg
cmp
add
repz
sbb
shlb
or
ret
mov
push
inc
data16
test
sbb
pop
rcrb
bound
inc
mov
lods
add
sbb
fstps
fdivl
lcall
cmp
fsub
add
pop
out
push
out
or
sbb
push
ret
arpl
and
inc
int3
neg
lods
mov
cli
dec
jae
fbstp
cmp
jmp
daa
aaa
jecxz
js
sbb
xchg
push
popl
sarb
xor
add
ret
out
xchg
dec
insl
lret
adc
sub
das
shll
xor
xchg
and
scas
mov
dec
jo
sub
sahf
sbb
xchg
mov
xor
lods
dec
scas
es
xor
aaa
sub
and
outsl
mov
dec
sbbl
sub
sti
je
cmc
mov
add
in
mov
stos
cs
out
dec
jl
add
sbb
mov
sub
in
jg
mov
rorl
test
inc
mov
add
leave
das
push
fnstenv
cld
icebp
icebp
push
mov
repnz
cld
negl
mov
aam
jp
cmp
mov
pop
xchg
aas
aas
xchg
adc
adc
mov
mov
inc
sbb
cmpsb
lods
shlb
mov
jae
or
scas
mov
cmpsb
lock
fsubl
lods
cmpsb
popf
aam
les
mov
inc
push
sub
and
adcb
push
lock
je
lret
lock
ja
mov
insb
faddl
rcrb
pop
jmp
add
mov
lcall
xchg
xchg
and
andb
sub
and
mov
jg
bound
in
lea
inc
jns
or
ja
loope
jno
daa
ja
je
inc
or
icebp
dec
fistpll
pop
push
xchg
or
mov
sub
std
xchg
sbb
shlb
ja
push
or
mov
add
and
rol
int3
test
or
adc
test
mov
inc
xor
push
pop
ret
lods
add
or
sarb
adc
inc
sub
das
cmp
pushf
scas
push
push
sbb
loopne
dec
jge
push
daa
mov
shrb
push
push
fcompl
push
mov
loopne
sbb
lret
cmp
push
mov
sub
rclb
into
icebp
data16
inc
sbb
add
into
or
ja
nop
and
mov
push
adc
pop
mov
xorb
xchg
pop
pop
lock
insb
lds
or
xchg
xor
jne
sub
xchg
mov
in
mov
adc
cmp
pop
mov
fmul
dec
xchg
std
notl
rcrb
ja
pusha
push
pop
xor
inc
xor
js
mov
in
or
cmp
sti
xchg
fbld
fmuls
gs
cld
push
pop
jge
or
dec
fnsave
lret
mov
fsubr
scas
adc
in
popf
lahf
cltd
xchg
dec
sub
xchg
roll
rcll
and
and
les
lods
ficoms
cmc
mov
es
cltd
sti
jbe
into
sets
dec
imul
cmp
sbb
inc
pop
dec
inc
repnz
jb
and
dec
ret
sbb
xlat
mov
addr16
mov
into
daa
mov
cli
or
inc
pop
stos
pop
xchg
xchg
out
insl
jbe
pop
into
lcall
jecxz
shrl
mov
mov
pop
aad
xor
gs
negb
add
js
cs
adc
mov
push
and
in
jno
es
lret
int
sarb
sahf
push
adc
or
out
lds
sub
fisubrl
adc
fcom
mov
mov
movsb
xchg
in
adc
mov
std
fcomp
jmp
inc
movsb
xlat
fidivrl
addr16
and
mov
inc
xlat
loope
jns
adc
push
jle
xchg
mov
outsl
xor
in
daa
test
test
add
adc
mov
xor
std
scas
push
push
jmp
add
js
pushf
push
jns
mov
add
daa
and
sarl
mov
cmc
cmp
sbb
xchg
popa
mov
or
adc
pop
fidivrl
repnz
notb
mov
and
push
cmc
es
pop
and
rol
xor
push
ljmp
outsb
mov
dec
jg
jge
mov
cli
dec
es
popa
jp
mov
repnz
shrb
jmp
dec
stos
lock
cli
mov
or
jmp
daa
push
xchg
add
ret
xor
jle
mov
out
loope
pop
nop
out
scas
repnz
sti
xchg
fidivs
in
nop
test
in
and
xor
js
add
push
pop
adc
pop
aam
mov
cld
mov
test
push
push
popa
mov
mov
cmp
leave
mov
lret
popa
cmp
or
sti
and
std
jnp
or
cmp
ficomps
jl
xor
pop
insl
jecxz
xor
cmp
adc
mov
jae
or
pop
ds
sbb
jae
in
jns
adc
popf
xchg
dec
push
jp
imul
cmp
xchg
sub
insb
cli
roll
aam
xchg
das
mov
jo
xor
dec
arpl
mov
mov
dec
cmp
mov
call
cmp
sbb
push
add
jle
or
mov
cmp
add
pushf
ds
fs
add
orl
cmp
and
jp
cmpsl
and
jne
lock
pop
dec
mov
mov
bound
movsl
sti
fwait
push
xchg
cmp
daa
sub
and
mov
nop
add
jne
fwait
out
jmp
lods
insb
scas
outsb
daa
cs
push
push
fnstcw
cmc
scas
jo
add
jmp
xchg
jnp
jne
mov
xlat
xchg
orb
out
push
movsl
cmp
clc
outsb
fisubl
mov
fdivrl
add
xlat
out
cmpsl
shr
jecxz
ljmp
or
stos
add
sub
jae
adc
or
jecxz
push
dec
sbb
lods
xor
mov
push
pushf
stos
xor
call
xchg
ja
jl
pushf
push
xchg
insl
lods
out
sub
and
and
inc
lret
add
int3
addr16
scas
stos
or
xchg
outsb
push
jns
icebp
in
xchg
xchg
mov
out
adc
jo
test
fwait
fs
imul
in
fists
icebp
cmc
or
pop
cmp
xchg
repz
sub
inc
and
fs
jnp
ret
mov
hlt
fsubrp
popf
movsl
stos
mov
add
xchg
das
loop
mov
pop
mov
xor
push
movsb
push
pusha
sti
lret
fstp
and
stos
lods
cmp
mov
or
mov
mov
int
mov
push
dec
inc
ja
insb
xor
in
loope
add
scas
je
push
std
add
inc
arpl
xchg
xchg
out
jp
xchg
cmp
ss
mov
pop
movl
sbb
stos
lahf
dec
jnp
or
xor
pop
push
xchg
mov
mov
pushf
insl
jnp
mov
icebp
mov
dec
pop
out
cmp
int3
pop
inc
mov
cld
xorb
pushf
pop
std
enter
mov
icebp
xchg
mov
out
push
push
mov
xchg
pop
scas
mov
ret
mov
dec
and
int3
ljmp
cmp
or
je
notl
or
pop
leave
shrb
jo
insb
cs
mov
imul
mov
pop
mov
adc
cmp
pop
jmp
adc
mov
jno
cltd
xchg
mov
jmp
inc
repnz
lods
push
jnp
jl
lods
push
xor
rorw
sbb
sub
mov
ja
xchg
movsl
fisttpl
mov
push
test
mov
adc
push
and
adc
push
loope
mov
icebp
and
cmp
or
dec
aaa
push
data16
aaa
repz
jecxz
fstpt
arpl
inc
rolb
cmc
mov
mov
in
adc
mov
or
inc
imul
or
pop
sbb
lods
add
jecxz
push
sbb
andl
sbb
add
sbb
pop
cmp
in
cs
stc
sbb
into
and
xchg
pusha
jb
leave
push
loopne
mov
jbe
int3
mov
daa
mov
push
adc
pop
jns
push
xchg
call
cmc
mov
clc
mov
pusha
clc
dec
repz
ja
test
xchg
ljmp
mov
cmp
js
mov
xorb
sbb
std
and
lret
lret
lret
mov
repz
jp
rclb
xchg
mov
pop
pop
pop
dec
or
adc
addr16
push
or
gs
aaa
cmp
pop
cmp
lcall
stos
stos
pushf
pop
dec
pop
pop
xor
bound
jge
xchg
lds
into
cmpsl
mov
jp
lds
rcl
lret
les
xor
negb
push
mov
les
lahf
jl
adc
mov
rcr
lret
cld
xchg
aas
rcl
xchg
cmp
xchg
jg
push
test
lock
jo
jae
dec
lret
jl
xchg
sub
fs
xor
mov
lods
and
push
mov
fs
rcr
jle
in
daa
cs
out
ljmp
cld
push
movsl
xor
fldl
sti
add
jbe
hlt
sub
add
mull
pop
jl
pop
in
mov
mov
fisubrl
int3
pop
imull
orb
movsl
or
mov
add
mov
and
push
pop
hlt
nop
std
sub
in
icebp
push
nop
jmp
and
arpl
ss
lea
sbb
xor
mov
pushf
mov
and
mov
xchg
cwtl
jbe
daa
push
sub
mov
mov
leave
dec
pop
xchg
pop
xor
jle
jg
xchg
rcrb
inc
add
ret
mov
std
lahf
cltd
mov
push
mov
sbb
mov
leave
push
pop
loopne
xchg
les
jbe
adcl
shrb
ss
lds
stos
sub
mov
aas
icebp
or
loopne
sub
xchg
outsb
pop
xor
sarl
jg
mov
addr16
femms
xor
mov
cmp
mov
es
stos
pop
das
icebp
in
or
movsb
popf
and
push
jb
xchg
cmpsl
mov
imul
pop
push
or
outsb
and
ret
xchg
sbb
loope
aas
cmp
mov
call
test
mov
iret
xchg
popa
xchg
or
imul
shl
aam
lret
or
xchg
cmp
push
push
jbe
adc
or
testl
jmp
bound
pop
cmp
filds
test
push
xor
and
sub
lahf
mov
nop
xor
and
jae
data16
fadds
sti
orl
jp
dec
sub
das
xor
loop
in
les
mov
in
loop
fdivr
jae
sub
pushf
xor
js
adc
fldcw
jne
sti
xor
rclb
fsubrl
mov
outsb
inc
sar
xchg
int
sbb
outsb
or
out
adc
jne
das
movsb
jmp
mov
pop
ret
dec
mov
imul
fldenv
pop
inc
inc
les
cmp
inc
les
mov
push
sub
icebp
loope
sub
outsb
push
jb
pop
lahf
sti
mov
xor
rolb
daa
and
aad
push
push
pslld
addr16
lds
adc
lock
and
pusha
cmp
and
in
in
aam
mov
push
xchg
and
cmp
shll
sbb
ja
add
popf
xchg
fiadds
push
popf
sub
aas
data16
dec
and
lods
movsl
je
mov
mov
aam
add
das
cs
mov
insb
clc
in
mov
add
cwtl
test
push
sub
adc
push
wrmsr
add
mov
cld
lcall
mov
add
jne
jge
push
xorl
ja
enter
outsl
push
xchg
jle
xchg
gs
gs
daa
jo
out
mov
movsl
leave
fldt
push
ret
and
push
mov
push
xor
dec
iret
mov
xchg
mov
ret
icebp
je
push
cmp
lock
cmpl
mov
jmp
adc
sub
clc
jnp
add
lock
pop
add
push
sbb
adc
int
sti
pop
xchg
shl
les
mov
out
adc
cmc
push
cmpsb
decb
sub
dec
test
dec
sbb
jnp
push
mov
xchg
mov
and
lods
movsb
cld
cmp
jle
clc
xchg
dec
sbb
sub
dec
divl
inc
mov
jne
mov
mov
pop
push
orl
inc
cmp
push
out
jp
loop
or
fsincos
xchg
sub
or
repz
sub
mov
jb
inc
sub
pop
movsl
pop
mov
pushf
popf
pop
jb
jae
fwait
arpl
imul
lret
rolb
mov
push
push
mov
call
add
dec
add
xor
pop
sub
das
sub
mov
fcoml
push
hlt
nop
movsb
push
or
fsubr
faddl
test
bound
mov
or
cmp
xorl
cmpsb
mov
dec
dec
out
loope
inc
fadds
jns
imulb
jp
mov
add
xor
sbbl
jne
std
lahf
pop
roll
push
adc
or
pop
mov
std
fists
dec
dec
les
ljmp
lods
aaa
push
mov
leave
xchg
loope
inc
insb
mov
xchg
jb
xchg
rorb
aad
cs
sub
mov
jo
cmp
lret
movsl
sub
mov
iret
cmp
xor
std
xchg
mov
jo
mov
mov
adc
mov
dec
mov
in
xchg
or
adc
data16
test
dec
imul
popa
mov
pop
inc
mov
jg
inc
test
les
gs
test
in
cld
stc
jo
dec
aas
pop
das
fdivl
push
fnsave
mov
cmpsb
jge
sub
sub
mov
cmp
lds
aas
sub
inc
lds
add
scas
dec
sbbb
and
cltd
lret
pop
ds
int
repnz
add
sbb
jb
add
cld
xchg
or
pop
dec
sti
dec
mov
popa
sub
sbb
sti
outsl
orl
movsl
or
stc
sub
rorb
add
ja
insl
xor
cmp
outsb
adc
jbe
shr
jbe
xchg
push
xchg
sbb
scas
mov
call
jb
aam
sbb
imul
subb
cli
jo
mov
dec
lcall
xor
clc
jnp
xor
sub
add
add
int3
adc
sub
stc
pop
test
cwtl
mov
inc
cmova
aas
dec
cmp
xchg
scas
adc
sub
movsl
ljmp
dec
mov
dec
pop
pop
repz
repnz
and
cmp
and
hlt
jmp
pop
ret
lods
dec
mov
mov
adc
in
daa
subl
std
sub
in
stc
ret
bound
pop
pushf
cmp
sbb
mov
lods
stos
jge
dec
sbb
movsb
loop
pop
cld
in
mov
mov
lcall
xor
cld
enter
push
scas
cwtl
xchg
add
test
xor
icebp
daa
arpl
xchg
addr16
push
in
mov
in
iret
pop
cmp
nop
push
popf
stos
int
call
mov
hlt
or
lret
mov
jb
daa
test
sub
mov
add
sub
xor
rcll
cmpsb
or
mov
cmpb
xchg
jg,pt
mov
mov
ret
xchg
sub
and
dec
cmp
cmpsl
rcrl
imul
push
lods
insl
icebp
adc
movsb
in
mov
addr16
int
iret
repnz
icebp
lods
out
cmp
xor
push
aad
aaa
xchg
dec
jl
cmc
loopne
daa
mov
or
pop
sub
pop
or
or
cmpsl
add
push
fisttpll
add
jmp
jmp
fnstenv
mov
mov
sbbb
hlt
pop
punpckldq
cmpl
add
or
hlt
std
enter
jmp
rcrl
cmpsb
loop
pop
repz
mov
pushf
fsubrs
or
cmc
scas
cld
iret
push
dec
mov
fs
loopne
cmc
scas
add
or
std
and
push
int3
ja
jno
insb
xchg
mov
sbb
pop
inc
lock
rcrb
and
lock
pop
push
movsl
or
fistpl
aad
or
dec
mov
mov
sbb
mov
pop
cmp
cmpsl
imul
stos
cmp
add
gs
add
outsl
out
cmp
push
inc
leave
pushf
rclb
mov
outsb
fwait
ja
xchg
imul
xor
xchg
xchg
or
adc
aaa
aad
adc
or
push
mov
dec
mov
push
pop
ficompl
inc
push
sbb
cmpl
xchg
icebp
dec
popa
inc
cmp
test
sub
mov
and
insl
repnz
push
mov
mov
and
xor
and
xchg
mov
ds
in
dec
mov
loop
adc
popa
into
out
aas
fcom
add
push
into
lret
inc
sub
push
mov
lahf
sbb
fimuls
sbb
xchg
mov
mov
cmp
loopne
xorl
loop
scas
outsl
mov
popf
es
cmp
xchg
loope
imul
ror
dec
es
xchg
pop
aam
pusha
xchg
aam
dec
push
xchg
pop
sbb
adcl
out
ret
outsl
mov
in
cltd
clc
movsb
sbb
into
mov
sti
mov
fnstcw
leave
add
mov
je
aas
dec
loope
out
clc
imul
dec
mov
sti
repnz
data16
pushf
cmc
rcrb
rolb
sub
sbb
xchg
popf
push
mov
int3
ret
xchg
add
imul
fwait
call
mov
test
push
add
or
ljmp
rcrl
mov
sbb
sbb
ss
cmp
ret
jno
add
std
mov
and
dec
jbe
push
mov
nop
adc
xor
adcl
jl
popf
pop
mov
sbb
xchg
xchg
pop
mov
lods
mov
enter
push
pusha
test
add
mov
add
cmp
push
ret
cld
test
es
adc
lea
jno
or
lock
cs
mov
sbb
leave
inc
cmp
jb
icebp
fs
jl
push
cmc
add
ret
mov
fxch
cmp
lods
clc
mov
aas
jl
out
and
pop
pop
shlb
movsb
sub
sbb
sbb
and
daa
pop
popa
push
mov
test
or
lds
mov
mov
mov
pop
mov
repnz
mov
pop
lea
or
or
xchg
popf
jnp
lds
fsubs
test
lea
ja
jp
popa
scas
hlt
add
bound
movsl
or
push
jns
ror
add
pop
cli
add
js
shl
jbe
dec
push
imul
mov
or
in
inc
adc
add
je
fidivl
and
mov
test
shrb
flds
and
or
repnz
mov
mov
sub
pop
dec
sub
rcrb
or
mov
mov
pop
mov
cs
cmpsl
fsubl
inc
cs
andb
pop
jle
cmp
xchg
jmp
inc
dec
push
xor
mov
fisttps
jmp
movsb
pop
out
sbb
cwtl
and
es
outsb
add
aaa
dec
inc
call
stc
fidivrs
cmp
dec
sub
sub
gs
inc
insb
mov
jb
xchg
mov
inc
push
xlat
pop
jnp
neg
icebp
popa
mov
in
mov
xor
inc
pushf
mov
clc
and
pop
pusha
dec
test
lods
je
jno
pop
inc
lods
cmp
push
pushf
bnd
fstp
out
pushf
aad
ret
mov
inc
jecxz
fwait
cmp
jp
ja
sbb
cld
xchg
mov
push
ds
gs
bound
test
imul
cs
xchg
or
push
push
loopne
xor
out
ss
cmp
mov
enter
add
pop
iret
loop
xor
jg
ja
daa
xchg
cmp
push
push
es
outsb
jo
xchg
cld
gs
or
icebp
rcl
lahf
xor
jo
clc
les
mov
mov
lret
mov
into
sbb
js
popf
hlt
aas
mov
pusha
ljmp
jno
push
add
and
test
inc
sbb
inc
imul
add
cmpsb
pop
lret
mov
pop
xorb
addl
or
add
jae
js
daa
inc
int
or
cmp
movsb
rorb
in
insb
push
sub
rcrl
fmull
lret
lret
pop
fdivs
cwtl
int
test
hlt
je
pop
inc
xchg
sub
jne
xchg
mov
into
in
aas
ret
fwait
insb
sub
push
cmc
jmp
nop
std
dec
aaa
cld
add
out
xchg
shll
insl
jns
sbb
daa
push
mov
push
xchg
int3
je
lock
or
les
pop
rdrand
mov
xchg
inc
xor
jge
js
and
mov
repnz
divb
sbb
clc
ret
xor
sub
subb
cmpl
and
xchg
sub
mov
rclb
dec
xchg
mov
cmpsb
scas
jecxz
and
adc
repz
fnstenv
push
movsb
xor
sbb
sarl
addr16
rcrb
test
push
fists
int3
adc
test
cmc
hlt
std
pushf
sub
cli
orl
pop
add
add
imul
pop
sbb
jp
push
scas
add
sbb
xchg
xchg
xor
call
ja
cmp
leave
push
xchg
push
mov
inc
dec
test
es
mov
pop
mov
inc
pop
xchg
and
mov
ja,pn
iret
add
aaa
popf
int
mov
push
jecxz
mov
pop
lret
push
outsb
push
and
lcallw
xor
dec
pop
repnz
sub
mov
scas
mov
shl
jecxz
xchg
ret
in
adc
sbb
in
sub
and
sub
xchg
dec
sti
push
leave
mov
mov
out
and
frstor
and
out
iret
adc
jae
int
icebp
push
pop
outsb
mov
stos
rcl
fildl
adc
imul
popa
adc
push
pop
pop
mov
pop
fimuls
sbb
es
mov
pop
push
push
dec
out
jb
xchg
out
ja
aad
daa
popa
xor
cmp
cmp
pop
dec
mov
sbb
ror
cmpsl
push
sti
adc
cmp
cmpl
push
stos
sub
xchg
or
mov
mov
inc
rolb
xchg
push
in
gs
std
inc
adc
fs
ljmp
int
push
mov
or
inc
hlt
mov
pop
sub
lcall
das
lret
adc
insb
jno
or
pop
les
lret
rorb
push
sub
adc
out
dec
cmp
popf
cwtl
mov
popa
enter
pusha
enter
ret
mov
fldt
adc
cmpb
and
pushf
sahf
adcl
xor
jmp
leave
pop
bound
pop
mov
imulb
test
bound
jns
or
insl
imul
xchg
cmp
loope
scas
dec
and
dec
stos
in
mov
icebp
out
mov
cli
jae
mov
cs
lahf
jo
roll
and
mov
lahf
cli
push
mov
adc
push
out
arpl
in
sbb
fcompl
out
fs
jge
jne
dec
nop
and
adc
popf
sub
test
ja
push
pop
or
int
xchg
sub
or
stc
cwtl
pop
xor
in
jb
jle
adc
mov
test
mov
xchg
cmc
sub
es
stos
mov
add
push
inc
popa
sbb
push
js
pop
sub
xor
clc
push
add
mov
sbb
push
in
or
mov
mulb
cmp
fcmove
aam
and
and
jae
nop
adc
pusha
les
js
push
add
jg
pop
or
out
jne
aam
cmpb
lcall
int
sbb
rcl
push
cmp
out
inc
loope
adc
sti
je
sub
bound
xchg
cmpsb
adc
test
xor
inc
pop
mov
push
je
mov
mov
je
clc
push
out
mov
aad
push
jo
les
int3
or
repnz
repnz
mov
dec
pop
sbb
dec
and
mul
fisttps
dec
imulb
mov
stos
fnstenv
cmp
insb
push
fstpt
inc
subl
imul
rolb
int
mov
xchg
xchg
sbb
push
out
cmovle
int
push
and
js
clc
sub
int3
stos
icebp
mov
and
mov
jl
jns
mov
outsb
int3
add
cs
push
or
dec
lea
iret
dec
rclb
rcrl
or
push
xor
dec
lcall
mov
repnz
sbb
int
rcll
in
iret
sub
mov
dec
cmp
sbb
arpl
flds
xchg
dec
sub
ljmp
inc
add
rorb
fnstcw
add
je
inc
sub
test
scas
and
sahf
cwtl
and
pop
clc
repz
xlat
nop
mov
es
cwtl
jbe
jb
mov
fsts
pop
mov
ljmp
cmp
in
cmc
cmp
roll
inc
sbb
cmp
add
ret
adc
pushf
sbb
fsub
cmc
addl
fcmovbe
pop
xor
dec
popa
push
aas
mov
icebp
lcall
push
dec
and
and
out
icebp
cmp
call
inc
adc
sub
cmp
aam
xlat
je
daa
sub
mov
pop
das
push
dec
inc
ret
sbb
jno
pop
loop
testb
adc
popa
jmp
sti
nop
mov
mov
xor
cmpsb
jae
jmp
xor
movsb
aad
out
and
cmpsb
lret
in
push
lock
sub
cmp
outsl
jg
outsl
inc
hlt
xor
sbbb
bound
inc
xchg
and
sarb
loope,pn
mov
fwait
sub
scas
pop
push
fsubrl
subb
mov
fstpl
outsl
mov
lret
mov
xchg
jle
scas
cmp
and
cld
scas
mov
repz
xor
sbb
dec
fmul
cmp
dec
push
sbb
inc
mov
dec
add
mov
or
aas
ror
xchg
out
lock
xchg
inc
fnstenv
repz
push
or
hlt
sub
and
je
pop
push
addb
outsb
push
mov
frstor
cltd
xor
xlat
inc
fcom
dec
sub
adc
lcall
or
mov
scas
das
or
push
out
xor
mov
fildll
jge
mov
popf
push
and
faddl
xchg
imul
filds
popa
pop
dec
pop
lods
fnstenv
and
mov
add
popf
imul
dec
push
and
leave
cld
cmp
rcrb
fwait
or
xor
mov
xchg
std
sbb
xor
cmpl
lret
divb
sar
test
xchg
jne
jno
jg
cmpsb
xchg
mov
in
jne
into
jno
ret
inc
and
insl
mov
mov
ret
pop
fadds
sbb
das
notl
popf
xchg
call
dec
dec
and
pop
shrl
movsl
hlt
jbe
push
mov
push
sbb
ljmp
push
adc
mov
aaa
out
mov
pop
jg
sub
xchg
or
add
lods
jle
outsl
into
or
fs
in
add
cltd
mov
jne,pt
xor
dec
mov
imul
jl
in
pop
insb
cli
add
sub
xchg
cwtl
xor
sub
mov
inc
enter
stos
sub
mov
mov
pop
adc
xchg
xor
push
inc
cs
data16
lret
loope
mov
ljmp
in
jecxz
push
insl
jo
insl
add
aad
ds
mov
sarl
inc
cltd
leave
xchg
fs
sbb
sub
mov
rcll
jne
fwait
push
mov
imulb
push
cmc
mov
fsubr
xlat
and
test
sti
mov
add
movsl
pop
dec
sub
jno
insl
mulb
fisttpl
dec
ret
xor
fisubrl
int3
out
hlt
push
fistl
sbbb
add
sub
iret
fdivrl
cmp
push
out
add
pop
in
xchg
shr
sub
and
jl
in
xchg
loope
icebp
fnstcw
int3
sbb
fcomps
aas
ret
jp
xor
call
pop
ljmp
mov
and
jno
orb
adc
insb
jae
jmp
push
mov
jno
mov
jle
sub
cmp
xchg
fcoms
insb
mov
aaa
jns
xchg
sbb
xor
das
fs
mov
mov
dec
idivl
push
gs
adc
dec
add
and
jl
and
clc
test
movsb
adc
lods
repz
mov
jb
gs
icebp
lcall
jns
add
add
xor
add
std
lea
mov
imul
outsl
sbb
or
xchg
imul
pop
sbb
ja
pop
cmp
ss
mov
fsubrs
sub
ljmp
int
and
shrl
xor
xchg
jno
hlt
cmp
popa
je
js
dec
pop
das
std
mov
add
mov
pusha
cmp
ja
xchg
jne
cmp
push
enter
push
in
in
or
jmp
sbb
push
push
and
adc
and
pop
daa
stc
xchg
fcmovne
xor
subb
cmp
jno
shl
xor
cmp
and
xor
or
xchg
shll
dec
mov
int
adc
dec
push
dec
push
mov
test
jae
jne
mov
ret
xchg
aaa
push
jg
or
mov
push
or
push
sbb
dec
xor
bound
nop
insl
loopne
jmp
fimuls
mov
outsl
push
push
aas
sarb
dec
aaa
or
cs
loope
push
mov
arpl
dec
in
psrad
dec
dec
inc
jmp
mov
les
ljmp
outsl
pop
mov
pop
mov
out
xchg
rorb
fwait
cmp
lret
in
fcoms
inc
jns
jmp
mov
push
mov
jb,pn
jb
sub
push
fimuls
jne
inc
jno
cmp
insb
jbe
xchg
je
aad
xor
pop
cmp
arpl
in
rcrb
mov
std
fstpl
or
push
xchg
pushf
cmc
jnp
pop
movsl
icebp
dec
orl
cmp
jle
jl
test
rorl
in
jne
mov
xchg
iret
adc
mov
nop
pop
pop
insb
add
adc
cmp
push
mov
xchg
jb
push
fstp
enter
aad
mov
cmc
scas
sub
xchg
sub
loopne
and
sub
mov
mov
inc
inc
xor
mov
mov
xchg
xor
ss
ret
sbb
repz
mov
push
insl
sub
xchg
ds
leave
lock
xchg
out
push
mov
call
rep
std
sbb
mov
and
out
stos
add
and
jns
out
or
imul
sub
pop
iret
or
loopne
xor
lcall
cmp
push
jg
rcrb
leave
negl
loopne
pusha
push
pop
lret
cmp
cli
and
xchg
and
xor
cmp
cmpsl
gs
or
out
adc
add
xor
push
mov
andb
sbb
int3
scas
lret
or
and
or
xor
xchg
adc
push
lea
rcll
pop
addr16
xor
mov
xchg
icebp
mov
pop
pop
outsb
arpl
scas
mov
jnp
push
negl
xchg
lods
cmp
cmp
gs
clc
shrb
iret
dec
int3
pop
pop
mov
add
fiadds
jl
cmp
jg
int
ljmp
mov
fld
or
push
jns
sub
jnp
adc
mov
stc
fmul
sub
or
je
cmp
jbe
int3
or
push
out
add
mov
aam
jge
mov
xlat
ret
cmp
subb
aam
add
pop
push
repnz
js
inc
add
mov
in
or
jg
std
movsb
xchg
int3
out
fisubrl
xchg
inc
cmp
addr16
lea
stc
add
add
mov
fidivs
cmc
daa
pop
pop
cld
inc
pop
jp
jnp
adc
mov
jbe
jle
mov
mov
movsl
outsb
push
add
iret
sbb
lods
idivl
ficoms
mov
and
adc
test
aam
cli
jg
pop
pop
cmp
stc
add
gs
lds
cmp
shrb
cli
cmp
cmp
mov
jno
adc
mov
jl
or
sbb
sub
mov
mov
ficoml
adc
lods
and
sbb
sti
xchg
and
and
mov
aaa
adc
add
jge
test
jne
jmp
scas
ds
xchg
jp
les
mov
adc
adc
int
dec
addl
or
fdivs
out
stos
push
loopne
inc
cli
mov
adc
cmp
xchg
out
sbb
cmc
add
inc
adc
jno
push
lcall
inc
aam
mov
add
mov
inc
mov
pop
aas
ds
jns
fildll
in
jne
fisttpl
mov
sbb
pop
fdivr
cmpsb
inc
adc
cwtl
cld
in
adc
xchg
jno
test
lret
sub
cmp
lods
pop
push
andl
xchg
push
dec
shrl
add
fucomip
mov
in
cmpsb
out
mov
test
adc
inc
std
xchg
xchg
inc
cwtl
faddl
lods
and
or
cmp
and
push
dec
pop
dec
pop
cmpsl
jmp
gs
aad
iret
lock
mov
mov
mov
int3
test
daa
aad
pushf
lcall
mov
mov
fchs
pop
xlat
mov
stc
xor
dec
dec
pop
stos
and
mov
inc
out
cmp
dec
ret
sub
mov
pop
mov
mov
mov
pusha
jne
fwait
dec
push
inc
lea
mov
pop
jbe
and
fimuls
jns
mov
xchg
and
add
cwtl
jp
das
cmpl
push
inc
push
inc
daa
inc
in
pop
push
subb
mov
dec
adc
repz
add
dec
push
push
xchg
int3
es
dec
mov
loope
mov
nop
mov
jae
pop
push
shl
adc
mov
cmp
fs
jle
cmpl
outsb
rcll
mov
jmp
test
fstpl
xchg
jmp
xor
pusha
xchg
mov
flds
sub
orb
push
or
adc
repnz
scas
cmp
or
pusha
stos
fiadds
jle
movsb
jae
outsb
stc
jmp
dec
sub
mov
sti
inc
sub
repz
cmp
jno
or
rorl
sub
int3
mov
or
add
cmp
out
xor
jecxz
jp
and
les
xchg
mov
aam
lahf
inc
insb
mulps
popa
and
pop
cmp
or
mov
mov
fs
jnp
repz
stc
test
lcall
or
push
in
mov
pop
sbb
sub
jg
arpl
mov
test
lods
subl
or
and
or
outsb
call
adc
xorb
rcrb
mov
sbb
lea
mov
mov
sbb
add
pop
xor
js
cli
mov
cmp
pop
and
push
mov
enter
lea
aad
and
fdivl
push
xchg
outsb
addr16
mov
sti
test
sub
inc
je
insb
or
mov
and
push
popa
push
or
jl
cmpsl
call
dec
and
cmp
imulb
aaa
push
cmp
cmp
jmp
mov
dec
dec
mov
lcall
pop
orl
push
or
subb
test
movsl
sub
cli
inc
or
push
mov
jg
lea
cmp
and
lcall
jnp
mov
popf
push
call
rclb
inc
sbb
push
sub
push
aas
fdivrl
lahf
mov
sub
cli
addb
xchg
jno
stc
inc
daa
mov
or
out
cmp
dec
rorl
push
inc
inc
fwait
dec
punpcklbw
and
jl
outsb
cwtl
xor
jae
in
jns
popa
rorb
ljmp
dec
jns
repz
push
or
shl
sbb
pop
xchg
pushf
add
xor
dec
push
jecxz
pop
pop
popf
xor
pop
jmp
inc
shrb
and
jb
xchg
mov
daa
add
xchg
pusha
iret
mov
dec
andb
sub
pop
testb
dec
xchg
cmpsb
out
in
out
fcoms
outsb
sub
pop
xor
mov
stc
push
es
mov
xchg
xor
test
pusha
lret
jnp
pushf
ret
and
je
sub
dec
or
or
adc
adc
or
cli
push
arpl
sbb
outsl
jae
inc
or
xchg
xchg
sbbb
fcoms
int
add
or
pop
xchg
mov
aam
fsub
mov
push
cs
test
push
lcall
xor
jecxz
in
adc
in
mov
adc
mov
stos
cmp
imul
pop
and
int3
lret
adc
ss
push
jb
mov
push
out
dec
dec
sub
loope
adc
icebp
push
scas
stos
arpl
int3
icebp
scas
sbb
cmp
shl
xor
leave
add
mov
in
mov
aas
aad
or
adc
and
xorl
push
rcr
cmpsl
dec
js
repnz
jbe
popf
and
out
imul
sti
in
or
stos
scas
gs
ret
inc
mov
ror
test
mov
int3
xor
cmp
lods
popf
insl
lcall
out
ret
negb
mov
mov
pop
or
mov
fxch
mov
jno
jecxz
stc
mov
sbb
stos
dec
cmp
scas
cmp
inc
jmp
int
mov
les
add
clc
inc
pop
hlt
nop
inc
pop
std
repz
out
push
mov
fisubs
pop
dec
mov
sbb
mov
cmp
adc
imul
mov
repz
pushf
dec
movsb
jno
insb
fs
shrb
ds
adcl
cltd
outsb
lds
cmp
sub
lahf
in
inc
les
insl
test
mov
ds
les
mov
scas
repnz
pop
cmp
cmpl
je
mov
xor
inc
daa
fdivrs
mov
pop
movl
mov
hlt
icebp
mov
mov
mov
or
pop
popf
fnsave
jl
inc
or
stc
or
popa
push
and
adc
testb
sbb
mov
inc
cmp
stc
cli
shl
xchg
mov
jns
mov
jnp
jbe
mov
inc
jecxz
rcl
mov
inc
cmp
imull
pop
push
ja
xchg
sub
mov
cmp
ficompl
mov
inc
and
pop
fldenv
cmc
xor
mov
push
daa
das
mov
out
sbb
insl
xor
call
sbb
or
leave
adc
jne
aaa
pop
jge
dec
ret
je
into
jmp
inc
mov
scas
pop
inc
inc
cmp
mov
pop
jecxz
adc
lods
sahf
lcall
xorb
loope
sarl
sar
sahf
hlt
movsb
inc
aam
call
adc
push
lret
loopne
jnp
sub
cli
clc
mov
shrl
movsl
cmpsb
sbb
or
xor
xor
jmp
mov
fnstcw
jnp
ds
loop
scas
sahf
fldenv
icebp
xchg
inc
in
mov
pop
aam
out
dec
xchg
mov
lret
xchg
pop
dec
or
add
incb
push
adc
cmpsb
cmp
jge
outsl
push
aam
or
push
loopne
mov
jno
push
lret
cmp
xchg
jge
inc
cmp
imul
dec
and
or
ret
add
push
shl
lock
daa
aad
fidivrs
add
sbb
imul
pop
jmp
cltd
les
test
inc
movsb
dec
add
cmp
xor
push
add
ja
inc
mov
and
out
test
xor
je
dec
xchg
jb
scas
jp
mov
and
add
pushl
inc
test
xchg
jl
mov
push
mov
mov
pop
cmp
pop
mov
cs
mov
jp
mov
out
add
bndstx
push
push
or
cmp
mov
push
hlt
loopne
mov
or
jle
or
sbb
loop
and
mov
jl
insl
inc
in
pop
xchg
mov
or
or
je
lea
push
adc
loop
lret
das
xor
icebp
sub
cmp
sbb
jbe
lds
icebp
or
test
sub
je
adc
aam
add
push
jle
out
xchg
xchg
sbb
gs
mov
xchg
adc
out
xor
inc
sbb
outsl
push
int
dec
stos
std
sbb
and
xor
addr16
jmp
out
and
inc
jge
mov
addr16
mov
push
jmp
xchg
mov
pop
test
ljmp
mov
test
xchg
mov
loope
lods
loop
les
in
mov
aas
sub
incl
imul
imul
mov
cmp
das
xchg
cwtl
int3
dec
shrb
mov
sub
fdivrs
mov
inc
nop
je
inc
sub
jae
xchg
lods
cmpsb
movsl
clc
xor
cmpl
mov
cwtl
inc
adc
aad
scas
sub
push
stos
and
jmp
mov
loop
lahf
mov
adc
adc
sub
lock
lods
or
cltd
imul
ja
and
or
and
enter
mov
subb
inc
jp
rcrl
fistps
xor
xchg
mov
movsl
inc
xchg
insl
mov
ss
adcb
fs
mov
mov
push
and
push
jmp
or
insb
icebp
dec
aas
sbb
pop
out
out
pop
leave
sub
mov
sbb
jmp
jne
xor
jl
gs
xor
mov
pop
xchg
jp
imul
pushf
in
pop
mov
lcall
test
mov
repz
addr16
aaa
ficoms
gs
mov
nop
sub
inc
fmulp
stos
pop
mov
aas
inc
xor
popl
mov
std
lds
out
dec
add
or
and
call
push
and
add
dec
pop
insb
scas
pop
test
dec
rolb
mov
int
loopne
cmp
add
addr16
pop
lahf
sub
test
mov
cmpsl
adcb
out
out
sbb
pop
mov
je
imul
add
jae
fistpl
dec
cwtl
sbb
loope,pt
fstpt
xor
leave
mov
mov
fisubrs
out
push
mov
test
xchg
or
lret
jns
dec
xchg
repnz
mov
test
push
inc
in
or
and
popa
mov
or
cld
daa
or
stos
push
hlt
jbe
lret
mov
add
add
popf
jb
ret
add
mov
fiadds
ret
rolb
dec
mov
jle
cmpl
je
fsubrs
and
fidivrl
mov
daa
mull
daa
fisttpl
cmpsb
add
cmp
xor
mov
or
mov
pop
cmp
push
mov
test
push
adc
ret
testb
daa
popa
test
or
data16
add
inc
repz
add
xchg
sbb
sbb
sahf
in
mov
or
popa
movsl
movsl
inc
dec
jg
jmp
cmpsb
data16
and
int
test
ficompl
cli
repnz
sbb
cmp
outsb
jns
cmp
leave
nop
outsb
in
inc
and
adc
popf
jle
lods
push
popa
xchg
ss
fcomps
fcompl
jmp
les
sbb
mov
ficomps
lahf
jecxz
inc
out
sbb
cmp
shlb
repz
ds
mov
das
mov
negb
fxrstor
jae
movsl
xchg
idivb
sub
or
mov
movsb
movsl
lds
mov
mov
flds
sbbl
mov
dec
std
and
rcl
jno
mov
pop
jo
or
add
ljmp
mov
dec
lcall
jmp
pop
fbstp
or
arpl
in
or
fbstp
pushf
pop
vfnmadd132ss
push
je
cmp
jmp
mov
ret
sbb
mov
cmp
sbb
insl
pop
es
fxch
mov
sar
pop
outsl
mov
sub
mov
push
daa
loop
pop
add
out
ret
and
jns
xor
adc
mov
add
out
sub
push
fidivrl
out
lock
pushf
cmp
mov
mov
xor
jle
scas
lret
cmc
clc
or
pop
div
out
test
repnz
jbe
push
clc
ds
or
shll
ret
jo
or
mov
sub
inc
mov
cmp
lahf
mov
mov
test
fmull
punpckldq
and
xor
pop
cmp
mov
repz
or
es
jmp
xor
pop
push
cmp
outsl
push
into
xchg
pop
sbb
mov
addr16
dec
scas
sub
pop
in
lods
pop
inc
rorl
rolb
es
imul
mov
sub
or
ljmp
pop
mov
mov
mov
add
sub
xchg
mov
aas
mov
jae
aam
in
jne
xor
enter
sahf
insb
pop
dec
stos
mov
cwtl
sbb
inc
bound
xchg
mov
mov
cmp
sub
sti
push
inc
mov
xchg
int3
jns
push
sbb
xor
mov
mov
mov
enter
and
dec
out
mov
push
push
pop
ljmp
xchg
or
push
pop
or
pop
mov
dec
push
inc
jmp
pop
cmp
or
js
ss
adc
loopne
xchg
mov
sarb
jnp
fdivrl
ja
add
in
lret
leave
and
ljmp
xchg
lahf
mov
lods
pop
push
jl
dec
xchg
adc
mov
cmp
dec
jp
test
push
jecxz
daa
movsb
sbb
dec
cli
maxps
mov
imul
sbb
icebp
fildll
and
into
adc
mov
sahf
mov
mov
insl
mov
or
aas
roll
sti
pop
mov
sbb
sub
and
jecxz
adc
dec
jle
add
xorl
push
and
xchg
and
and
mov
hlt
daa
add
aas
cmp
sbb
aad
sbb
ja
xchg
dec
sti
dec
loop
pushf
sahf
dec
sti
jle
or
xchg
mov
add
push
push
jg
popa
xchg
or
xchg
fcmovu
push
and
aas
arpl
lods
sub
adc
cwtl
inc
lret
mov
pop
push
xchg
rcrl
nop
mov
cmp
sub
incl
mov
les
movsb
int
cmpsl
pushl
out
xor
dec
sbb
push
lea
rcr
scas
pop
jne
jne
call
mov
lret
test
adc
lock
mov
aad
dec
push
shrb
outsb
mov
shrl
xchg
cs
sbb
jnp
cmpsl
sub
cmpsl
push
dec
pop
sarb
push
fiadds
jp
fs
adc
lock
gs
movsb
pop
inc
mov
ja
ss
sub
dec
insb
pushf
jp
sub
push
mov
jbe
mov
ret
push
or
popf
xor
and
pop
mov
test
in
or
pop
lods
aaa
mov
das
sbbb
sbb
adc
repz
push
jb
lahf
call
xor
adc
inc
aas
out
add
push
fiaddl
repz
test
inc
lods
scas
cmp
ss
in
imul
dec
mov
ljmp
mov
push
scas
rcll
mov
push
cmp
outsl
ljmp
cmp
cld
adc
pop
adcb
pmullw
mov
in
inc
adc
rol
mov
and
mov
cli
repz
add
mov
pop
lcall
test
mov
es
push
xor
or
push
rorb
push
loopne
or
bound
aam
xchg
lahf
inc
sbb
fcmovnbe
adc
clc
lock
dec
pop
dec
dec
in
dec
or
xor
ja
data16
andl
push
xor
sub
scas
xchg
cmp
in
test
or
add
imul
orl
jge
xlat
jp
adc
mov
sbbb
in
es
jne
xorb
mov
lea
mov
pop
cmp
mov
mov
fcmove
xor
mov
sub
lock
pop
sub
ret
pusha
mov
sti
mov
int
int3
imull
outsl
lret
lahf
icebp
and
pop
and
sti
sub
cmp
dec
iret
sti
aam
mov
pop
mov
pusha
out
jmp
sbb
dec
fsubrs
jg
xchg
inc
and
mov
in
sahf
aas
pop
out
outsb
je
call
pop
rorl
jbe
fmuls
je
sub
and
cltd
out
jb
stc
adc
popf
xchg
xlat
xchg
std
jae
inc
mov
xor
sbb
mov
jmp
adc
pop
adc
sub
and
loope
adc
cmp
nop
hlt
test
inc
or
repz
pop
adc
neg
adc
out
jle
dec
ficoms
int3
pusha
imul
clc
push
sbb
les
sahf
lods
cld
push
xlat
cltd
pushf
pop
fadds
or
adc
pop
and
fcompl
cmpsl
hlt
sti
inc
les
movsl
cmp
or
movsl
cmpsl
and
data16
loope
cmc
out
es
fstpl
inc
push
lret
pop
push
mov
out
outsw
sub
push
or
xor
test
lcall
sahf
sub
xor
roll
rcrb
mov
xor
xchg
mov
and
sti
pop
mov
fimuls
daa
test
mov
or
add
jecxz
mov
aaa
mov
nop
ret
pop
xor
clc
scas
inc
dec
test
lcall
lret
xchg
cmp
add
jle
cmp
data16
mov
das
cwtl
jae
into
dec
mov
sub
pushf
jecxz
int
hlt
clc
ja
imul
push
leave
mov
push
push
fcompl
push
jns
lcall
dec
stos
les
adc
rclb
push
or
push
push
in
mov
mov
or
sub
insl
mov
ds
mov
push
mov
ja
jo
mov
sahf
daa
stos
xchg
push
mov
shrl
aad
push
pushf
leave
xor
push
mov
fnstenv
inc
movsb
mov
lahf
sbb
test
ficomps
jmp
shll
aad
dec
loopne
std
jle
sbb
jmp
test
add
mov
mov
aaa
mov
lcall
leave
popl
sbb
pop
jp
fisubrs
xlat
add
dec
dec
lods
das
mov
sub
or
pushf
jo
lds
push
arpl
js
lods
sbb
mov
int
ja
outsl
out
loopne
ja
cmp
bound
repnz
lret
cli
rclb
xchg
clc
aaa
test
add
cmp
lods
insb
fldt
xor
fistps
leave
mov
xchg
mov
call
lahf
mov
clc
inc
xchg
repz
fsubl
lods
mov
fs
ljmp
and
adc
xchg
mov
dec
pop
pop
and
sub
pop
decb
inc
xchg
test
push
lret
addl
and
add
inc
mov
sub
shll
ret
xlat
nop
sbb
mov
inc
lret
xchg
out
xor
test
push
mov
cmc
faddl
into
mov
push
pusha
nop
inc
sar
movsl
add
add
adc
repz
out
clc
push
fs
arpl
cmp
pop
frstor
arpl
stc
aad
add
gs
pop
pop
movsl
inc
sub
lret
or
push
xchg
or
and
and
fstl
sub
ret
loop
xchg
lahf
inc
jae
push
lea
push
stos
sbb
clc
aad
push
mov
test
add
dec
fdivl
mov
sub
enter
mov
mov
rcrb
test
stos
xchg
jne
insl
jns
jae
cwtl
imul
push
sub
mov
mov
cmp
cltd
repnz
jne
imul
xchg
add
cmp
stos
je
mov
aad
sti
pop
push
and
mov
jbe
pop
rorl
xor
data16
dec
mov
push
mov
sbb
jno
in
push
nop
js
cmpsl
pop
xchg
pop
jnp
xor
jecxz
cmp
in
jbe
xchg
into
sub
aad
and
push
test
adc
add
push
pop
rcrl
inc
sbb
ja
pop
jnp
sub
xchg
mov
jb
fucomi
movsb
or
mov
repz
in
aas
adc
gs
stc
or
push
in
add
leave
insb
imul
clc
lahf
leave
mov
stc
adc
loope
or
mov
popf
add
mov
popa
hlt
mov
lret
mov
jne
les
iret
xor
dec
scas
adc
out
inc
xchg
dec
in
les
stos
dec
in
mov
push
adc
inc
mov
and
pop
sarb
outsb
and
daa
fnstcw
lahf
ja
popf
inc
sub
stc
shrl
sub
pop
add
rcrb
cwtl
mov
js
test
leave
out
push
cmp
add
imul
xchg
fdivr
push
push
push
in
mov
sbb
fsts
inc
int3
dec
sub
dec
movsl
out
inc
cli
addr16
push
mov
rcr
dec
lods
jb
cmp
in
rorb
mov
pop
pop
pop
daa
push
and
jmp
mov
aad
push
mov
jnp
scas
and
mov
jg
sahf
lahf
add
aad
xor
pop
cli
push
sbb
jns
push
mov
bts
sahf
lret
cmpsb
roll
arpl
sub
mov
mov
mov
dec
mov
mov
or
mov
imul
cmp
cld
jno
adc
negb
fidivs
dec
mov
mov
dec
dec
add
push
pop
xor
pop
pop
adc
pop
adc
mov
adc
push
test
fs
cmp
pop
inc
mov
xor
xor
and
aam
xor
sbb
jl
pop
lret
cmpsl
in
imul
jmp
fadds
cltd
jmp
out
jmp
jmp
push
inc
lret
in
call
jp
and
xchg
shr
fmuls
incl
call
rorl
cmp
mov
out
inc
stc
test
aam
mov
cmp
and
cmp
daa
and
outsl
mov
xor
cld
xchg
cmpsb
xor
rcll
add
xchg
es
testb
add
cmp
mov
cmp
js
negb
pop
push
jg
mov
jmp
into
add
pop
sbb
pop
and
sbb
fcoml
mov
jb
icebp
jns
test
adc
sub
sbb
jno
xchg
lea
mov
lods
ror
adc
adc
das
lods
sbbl
in
inc
dec
inc
xlat
out
mov
push
mov
pop
mov
testb
xor
jb
cli
mov
sbb
inc
mov
orl
sub
cmp
sar
push
fidivrs
push
outsb
test
sub
xorb
je
sub
leave
adc
bound
pop
lods
lret
gs
enter
xor
out
aam
cmc
inc
jno
mov
enter
in
and
sbb
sub
xchg
jp
imul
ja
and
mov
cltd
sbb
ljmp
xchg
fpatan
sub
mov
xor
pop
jle
or
scas
mov
mov
or
sub
lods
jns
outsb
cmp
xchg
mov
jno
insl
pop
imul
push
sbb
out
adc
add
sahf
jp
dec
shlb
xchg
mov
push
jb
mov
int3
push
mov
or
aaa
jne
adc
cmc
movsl
adc
and
into
aas
icebp
inc
ja
movsb
jb
mov
add
and
cli
outsl
xchg
fcmovbe
and
daa
das
scas
and
push
mov
lods
inc
mov
rolb
inc
mov
mov
cmp
adc
sbb
add
jne
iret
push
add
ss
sub
jbe
sbb
sub
cld
out
icebp
testb
ljmp
add
mov
and
scas
inc
lret
xchg
cmp
outsb
add
jle
iret
dec
repz
xchg
sahf
popf
or
outsl
insb
shll
stos
iret
nop
lret
xchg
dec
and
pop
out
shlb
int3
pop
sub
cwtl
inc
push
into
pop
mov
push
pop
mov
movsl
xchg
push
test
popf
test
xchg
hlt
scas
add
inc
and
stos
jle
push
cmp
pop
mov
mov
push
add
int3
and
mov
pushf
je
pusha
jge
sarl
int3
jl
xchg
gs
sub
xor
aam
and
pop
mov
in
mov
jae
mov
sub
or
adc
and
aaa
fdivrl
in
enter
push
outsb
xchg
add
inc
dec
sub
inc
data16
pop
push
xchg
jb
out
dec
clc
cmp
inc
aaa
adc
push
xchg
jno
jge
push
loop
and
and
outsb
loopne
dec
test
jge
jecxz
push
mov
mov
push
xchg
fdivrs
mov
neg
in
sbb
orl
jge
pop
adcb
inc
sub
or
add
xor
dec
stos
mov
pop
push
fs
add
nop
jmp
imul
mov
pushf
cmp
insl
gs
pop
push
adc
pop
shlb
xor
or
dec
mov
repnz
pop
mov
ret
int3
or
daa
inc
and
jbe
mov
push
ljmp
inc
dec
pop
push
jnp
cmp
jle
lods
jg
jbe
or
mov
pop
inc
push
pushf
dec
jecxz
push
leave
sbb
push
arpl
sarb
decb
add
ljmp
push
inc
out
xor
movsl
ja
mov
cmc
cltd
or
adc
cs
out
cltd
xlat
hlt
out
dec
je
or
xchg
test
lea
xchg
pop
ja
stos
push
ja
mov
ret
ljmp
inc
subb
push
push
rorl
dec
inc
lret
inc
aam
test
and
andl
push
xor
mov
mov
jo
pop
mov
mov
fcmovnbe
jns
mov
in
fsubrl
paddusb
pop
cmpb
daa
push
mov
dec
sub
add
fldpi
jp
sbbb
pop
in
xchg
cmp
pop
dec
dec
xchg
adc
push
xor
jae
jecxz
and
dec
mov
xchg
cmp
adc
test
popf
mov
loope
cmp
cmp
xchg
add
cmp
add
ret
hlt
outsb
or
ja
das
lret
xor
and
test
mov
mov
out
cmp
add
and
mov
inc
je
mov
adc
mov
and
xor
or
mov
inc
cmc
rcrl
add
cltd
loop
mov
in
stos
shr
fs
push
pop
imul
cwtl
es
lds
pop
push
daa
sbb
xchg
call
mov
hlt
xor
jbe
shl
adc
imul
mov
iret
mov
push
mov
scas
sar
jl
cmp
test
jmp
mov
orb
cmpl
jg
es
xchg
daa
aam
push
repnz
sub
shrl
pop
outsb
xor
inc
or
test
cltd
pop
push
push
lock
bound
int
or
dec
test
push
sbb
scas
xchg
sbb
pushf
lea
push
cmp
pop
shlb
jnp
dec
inc
in
es
dec
mov
cmp
sbb
or
xor
inc
sbb
mov
sahf
pop
popa
aaa
ss
lret
dec
push
pop
mov
dec
jle
xchg
insl
and
fwait
dec
xchg
into
imulb
sub
orb
dec
popa
test
cmp
adc
repz
repz
lret
test
lret
dec
sbb
das
push
aas
adc
ja
mov
repnz
mov
adc
data16
dec
leave
dec
or
pop
scas
sti
lds
aaa
je
jnp
int3
lds
fnsave
xor
push
iret
fisttpl
xor
inc
test
pop
cmp
imul
and
push
lock
in
mov
test
fstpt
ss
outsb
lret
stos
sahf
aad
pop
xor
iret
lret
sbb
or
int3
movl
inc
xchg
pop
aas
ret
out
mov
inc
or
repnz
cli
jae
lcall
push
inc
jmp
test
push
mov
mov
or
push
fs
fcoms
outsb
mov
clc
add
push
add
sbb
mov
outsb
cmp
push
mov
xchg
in
ljmp
mov
icebp
jbe
xlat
sub
aaa
in
outsl
mov
sub
jo
insl
fnstsw
push
test
lcall
and
loope,pn
sbb
popf
mov
inc
or
cmp
push
test
adc
aad
call
jl
movsb
rcrb
push
aaa
jo
rcrb
rorb
out
push
mov
xor
mov
add
fnstsw
push
aaa
dec
negl
adc
mov
fisttpl
mov
pop
push
mov
sbb
xor
shlb
dec
scas
test
mov
or
outsl
sub
jbe
out
ss
and
mov
mov
fnsave
hlt
inc
xchg
lods
jge
mov
negb
in
add
adc
scas
mov
inc
dec
and
loope
scas
movsb
daa
mov
push
loopne
or
fstl
inc
dec
loope
or
inc
aam
nop
cmp
xchg
cmp
sub
jg
ret
int
call
jae
rcll
and
mov
sbb
push
fcmovnbe
xchg
ret
leave
mov
shll
lock
inc
jnp
loope
push
les
mov
mov
xchg
je
dec
stos
lds
arpl
loopne
mov
inc
je
je
cmpsb
pushf
xor
push
ret
imul
orl
xchg
mov
mov
push
fsubrl
or
xchg
sbb
mov
jle
pop
iret
cmp
xchg
test
icebp
mov
pushf
lahf
and
sarl
and
bound
iret
test
or
shlb
sub
in
pop
lahf
lahf
mov
pop
ds
fnsave
shrb
das
mov
mov
pusha
sbb
mov
jge
es
sbb
jle
shll
cmp
xchg
jge
pop
pop
outsb
imul
lds
sub
add
and
xchg
mov
or
sar
sub
jecxz
lods
push
pop
stos
push
and
adc
int3
sub
arpl
pop
dec
cli
rolb
or
loopne
inc
cmp
ljmp
mov
xchg
add
icebp
in
iret
xchg
xor
lahf
and
fistpll
scas
mov
rcll
lods
fwait
xor
shll
popa
imul
dec
ljmp
mov
cmpsb
lahf
and
lret
sbb
jns
repnz
fdivs
loope
mov
sbb
cmpsb
jle
pushf
xor
adc
negl
imul
enter
cmpsb
lock
push
dec
mov
out
jg
inc
scas
mov
inc
movsl
mov
rolb
dec
mov
aam
mov
dec
push
movsl
in
jge
out
jae
or
sbb
data16
mov
pop
or
lahf
shrb
inc
adc
and
nop
push
dec
incl
popa
push
sub
fs
and
cli
sub
popa
stc
insb
mov
lahf
jb
or
mov
mov
cmp
cmpsl
xchg
leave
mulb
mov
fcomp
mov
mov
aad
and
sub
sbb
popf
imul
mov
shr
cs
dec
mov
sbb
rorl
test
mov
inc
cmp
test
xchg
outsl
sub
das
int
lea
hlt
iret
adc
fmuls
inc
in
rorl
jnp
inc
leave
jno
out
fs
jo
rcrl
popf
cmp
or
xor
jg
pop
or
aad
jnp
cmovge
mov
lea
pop
adc
and
sub
cmp
iret
dec
sbb
loope
jl
scas
lret
pop
les
in
and
xor
mov
or
push
dec
sub
mov
xor
pushf
adcl
inc
fistl
and
dec
ror
inc
cmp
dec
sub
jl
push
sbb
add
pop
lcall
in
nop
cmp
xor
ret
testb
fsubrl
sub
xchg
stos
icebp
or
adc
div
push
jae
jnp
lods
and
movsl
cs
sbb
imul
cmp
cltd
out
out
cmp
dec
sbb
aad
mov
scas
leave
xlat
mov
adcl
jno
xchg
dec
mov
dec
push
scas
mov
pop
les
jmp
bound
push
outsb
jae
outsb
loope,pt
and
bswap
dec
cmp
sub
out
mov
outsb
arpl
push
lock
rcrl
sbb
fcmovnb
pop
mov
addb
push
fisubrl
xor
push
fdivrl
xor
aas
push
arpl
push
dec
call
call
inc
mov
ss
aas
fisubrl
sbb
inc
dec
daa
adc
push
adc
ja
lods
pop
subl
xchg
lds
js
or
imulb
ret
xor
repnz
cmp
bound
out
jmp
sti
jecxz
fldcw
ljmp
push
scas
adc
ss
out
pop
imul
lock
push
mov
pop
adc
int
loopne
or
aas
sbb
negl
mov
dec
xor
xor
sub
adc
mov
pushf
inc
cmp
adcl
movsb
sub
iret
inc
mov
hlt
xchg
roll
lret
dec
lods
mov
xchg
cwtl
sbb
mov
loopne
xchg
jg
stos
lock
or
xor
call
lds
je
sbb
adc
aas
or
xchg
sti
mov
loopne
mov
and
add
adcl
lret
cmp
call
shlb
mov
fnstsw
xchg
arpl
test
clc
test
sbb
lret
push
jg
mov
scas
pop
dec
aas
pop
insb
aas
sbb
jae
xchg
inc
stc
adc
daa
adc
rcrb
mov
push
mov
fucomi
test
fbld
push
jb
lret
je
mov
and
gs
add
scas
std
fwait
mov
dec
or
call
inc
loop
jmp
xchg
and
stos
sub
sbb
negl
or
push
ret
push
loope
aaa
popf
push
cmp
cmpsl
mov
je
cmpsl
lea
mov
mov
inc
push
xchg
push
add
xor
test
mov
hlt
je
xlat
jl
push
in
sbb
test
out
inc
imul
aad
jle
fildl
inc
add
and
mov
pushf
cli
push
into
xchg
inc
addb
ret
les
mov
cmp
mov
mov
sarb
adc
pop
push
cli
push
test
jge
popf
les
or
les
fnstsw
dec
cmpsb
adc
pop
shrb
inc
and
fidivrl
adc
sub
xor
fbld
lea
pusha
js
inc
mov
inc
ss
xlat
sbb
sbb
into
and
sub
in
mov
sub
lods
stos
xchg
hlt
mov
xor
std
cmp
sub
push
std
or
push
mov
jp
faddl
mov
aam
or
adc
mov
aaa
test
popf
inc
mov
je
fstpl
data16
mov
bsr
loope
ffreep
jnp
cmp
push
aad
lds
pop
mov
jl
js
xor
xchg
dec
rorl
adc
in
cld
mov
add
out
orb
cmp
push
jl
scas
dec
and
pop
push
cwtl
push
sub
and
pop
cmc
mov
gs
pop
dec
jp
movsl
out
sbb
test
dec
jge
pop
das
cmp
in
inc
push
adc
pop
ss
dec
pop
les
mov
stc
pushf
std
push
mov
rclb
lret
movsl
xor
std
aam
adc
push
add
adc
cld
cmp
movsb
cs
fninit
xchg
mov
sbb
push
dec
ret
push
clc
fs
cli
cli
inc
jle
xchg
push
or
jge
jo
mov
push
adc
sub
popf
inc
jno
mov
outsl
adc
mov
push
iret
fdivrl
int3
push
and
pop
dec
cltd
jge
add
push
das
jb
jo
inc
loopne
cmp
jmp
sbb
or
add
addl
icebp
push
in
inc
sbb
mov
sub
pop
add
add
cmp
push
push
test
ss
xorb
aad
cmpsb
or
or
hlt
inc
lods
and
and
negl
rcrl
cld
cmp
mov
dec
cmp
jecxz
xchg
mov
aaa
cmpsl
push
adcl
xchg
das
mov
ss
mov
adc
jne
sarb
jl
in
xor
in
inc
pop
lock
outsl
enter
lret
lock
aas
and
in
sbb
stc
repz
xchg
popf
out
or
dec
jne
or
lcall
jp
adc
or
jne
mov
addr16
icebp
cmp
scas
jae
subl
pop
lahf
add
jb
sub
arpl
mov
dec
push
xchg
push
or
dec
cmp
dec
lcall
sahf
push
mov
jmp
push
and
movsl
fnstsw
add
xchg
test
mov
sbbb
outsl
fs
inc
sub
mov
adc
dec
cmpsb
or
sbb
fiadds
fistpl
daa
xchg
insl
adc
mov
je
stos
pop
inc
mov
call
adc
outsb
clc
add
pop
fwait
add
lcall
shll
addr16
cs
cmp
inc
and
push
mov
mov
sbb
gs
cmp
jp
loop
inc
sbb
pusha
leave
xlat
test
ljmp
inc
jbe
xchg
movsb
add
out
jbe
jg
and
pushf
fildll
das
ret
jne
mov
xchg
push
cwtl
jp
fstps
dec
in
div
in
push
setl
cmp
mov
stc
insb
sub
lods
adc
imul
test
xchg
cld
xchg
pop
aaa
jge
cmp
pop
xchg
sbb
xchg
xor
push
movsb
push
or
dec
push
pmulhuw
stos
jmp
xor
xor
adcl
mov
inc
repnz
cmp
ljmp
mov
inc
lods
ss
cmp
inc
stc
pop
push
cvttps2pi
les
cmp
daa
popa
neg
and
jmp
xchg
mov
lret
je
pushl
sbb
and
xorb
lret
pop
pop
inc
add
popa
xor
sub
push
pop
cmpsl
cmp
sbb
rcrl
sti
aam
leave
test
xchg
mov
add
jno
ret
pop
xchg
decl
shl
push
fistl
divb
dec
rolb
inc
mov
fldt
cmp
cmp
leave
mov
into
and
shl
sub
repz
test
cs
sahf
sbb
aaa
popf
pop
pop
imul
scas
push
xchg
mov
cmp
jl
xchg
sti
add
or
and
sub
jo
popa
sbb
lock
repz
xchg
dec
jo
adc
test
pop
mov
jo
dec
cld
xor
adc
pop
lock
mov
cmp
and
mov
push
xlat
aam
dec
sub
out
adc
dec
aas
aam
fmull
push
sahf
lahf
sahf
add
adc
push
jp
cmpsl
sub
fistl
sbb
jnp
cwtl
shrl
fucom
pop
in
xchg
push
inc
mov
push
pop
xchg
ljmp
xor
data16
ja
lcall
addb
pop
adc
push
xor
mov
test
push
shrl
lods
cli
inc
mov
shl
dec
xlat
dec
push
inc
mov
push
mov
out
or
inc
out
xor
pop
xchg
xor
mov
mov
sub
dec
pop
push
mov
xchg
jecxz
sub
jne
enter
dec
cmp
xor
stos
push
xchg
xlat
jp
and
mov
sbb
jmp
popf
ret
push
imul
inc
adc
testl
sbb
pop
ja
inc
fldcw
push
pop
push
jb
div
popf
dec
inc
lods
sub
cmpsl
daa
dec
ja
fistpll
mov
cmp
outsl
scas
sbb
mov
orb
pop
and
add
sbb
pop
int
cmpsb
or
or
idivl
xchg
mov
mov
xchg
mov
mov
pushf
push
jne
arpl
xchg
out
ljmp
out
and
xor
cmp
dec
xlat
testl
gs
notb
mov
jne
das
mov
adc
inc
sub
jbe
or
or
cwtl
ret
cwtl
ja
aaa
push
in
sub
mov
push
cmp
push
negb
es
icebp
or
mov
pop
into
aam
pushf
sub
mov
mov
mov
daa
pushf
das
or
movsb
add
fisubl
int3
mov
jns
and
scas
loopne
pop
sbb
aad
movsb
pop
inc
in
jb
cmp
fwait
call
push
aam
and
pushf
lea
xor
mov
sub
push
or
gs
jnp
xor
ffree
cmp
lock
xor
scas
sbb
mov
lea
xlat
int3
push
sub
or
mov
xchg
or
pop
mov
pop
jg
fs
test
inc
repnz
sub
inc
cmp
insl
pusha
gs
rolb
cmpsb
cmp
jne
cmpsl
int
or
adc
sbb
das
add
dec
std
pusha
push
xchg
dec
sub
sbb
arpl
ds
inc
divl
pop
out
dec
mov
repnz
cwtl
or
cmp
pop
jle
pop
cmpsl
pop
sub
xlat
adc
push
ret
sub
das
mov
xchg
aad
and
pop
pushf
and
clc
xor
jmp
fists
cwtl
mov
in
ss
scas
cld
cmp
enter
mov
mov
ret
cmc
push
or
add
sbb
xchg
mov
mov
scas
and
aad
inc
jmp
xor
jge
xor
loop
jns
inc
stc
push
dec
mov
cmp
iret
push
pop
data16
pop
push
cmc
mov
mov
xchg
sub
xor
xchg
or
fdivs
cltd
notl
ret
or
sbb
mov
dec
adc
sbb
fimull
insl
jns
sbb
ret
pop
sub
or
rcrb
sub
push
pusha
push
xor
aad
stc
xchg
or
sub
xchg
dec
es
loope
popl
sbb
sbb
loopne
mov
insb
loopne
pop
mov
iret
jg
repnz
into
cmp
repz
call
call
push
sbb
pop
cmpsl
sbb
jns
popf
adc
push
stc
push
jb
fistpl
jg
hlt
repnz
fmull
dec
insb
adc
mov
rorl
aam
addr16
cli
pop
add
cmp
push
dec
add
add
nop
pop
shrb
cltd
mov
adc
jg
pop
js
push
outsb
or
pop
mov
test
xchg
jp
pop
das
dec
stos
adc
and
daa
push
enter
push
push
lahf
test
inc
xor
mov
aas
push
pop
mov
daa
and
or
cmp
push
lret
or
les
push
ljmp
flds
cmp
rcl
in
dec
mov
insb
iret
inc
jne
jecxz
rcrl
lods
pop
lret
popf
mov
insb
inc
and
sti
xchg
inc
inc
xor
pop
aas
fs
cli
inc
outsl
out
mov
and
cmp
jb
sbb
jae
jecxz
pop
es
gs
inc
add
adc
add
add
in
adc
xlat
sbb
fldcw
mov
cmp
xor
mov
test
sub
insl
fnstsw
jmp
or
ret
mov
gs
xchg
popf
popf
imul
mov
mov
cmpl
in
push
mov
rol
arpl
adc
aas
dec
inc
fstl
jp
fsts
stos
push
int3
mov
lret
push
dec
repz
repz
and
fcmove
add
aaa
nop
pop
fistpl
ljmp
add
and
ja
into
sbb
adc
add
sbb
dec
and
lods
sbb
gs
loope
jae
adc
test
icebp
les
push
mov
mov
xor
sub
xchg
lock
jno
mov
dec
xchg
sbb
sbb
fcompl
andl
cmp
sbb
add
ficompl
std
inc
cmp
cli
jb
imul
or
pop
popl
push
hlt
sbb
mov
xchg
insl
test
jne
orb
mov
pushf
sub
cmp
push
dec
mov
xchg
aas
loop
rcrl
out
mov
adc
es
sub
jecxz
add
js
mov
rcrl
imul
out
aas
xchg
push
dec
ficoms
dec
adc
ljmp
dec
js
and
sbb
jne
mov
push
dec
cs
shr
mov
insb
ljmp
out
out
push
mov
sub
fidivrs
mov
sbb
xor
add
add
sub
xor
out
mov
mov
fmuls
sbb
jle
inc
ret
dec
xor
mov
lods
or
sahf
mov
ss
jne
jmp
and
inc
icebp
icebp
cmp
loop
scas
leave
adc
cltd
fsubrl
mov
pop
pop
inc
add
pop
ficoml
popa
inc
movsl
enter
add
jg
clc
push
cmp
cmpsb
and
sbb
fmuls
cli
pop
jg
in
loopne
out
or
dec
xchg
mov
data16
jp
aad
ret
insb
push
fwait
aaa
sub
cld
jmp
add
dec
sbb
jae
and
cmp
add
jb
lods
cmpsb
popa
es
aam
add
gs
push
add
popa
mov
mov
xchg
test
adc
lret
mov
pop
aad
iret
xor
andl
mov
add
les
out
jl
jle
ljmp
xlat
test
and
daa
data16
ss
dec
push
mov
xor
sbb
xchg
test
xbegin
ss
push
int
nop
inc
dec
xor
fcoms
mov
ss
add
frstor
aam
mov
addl
sub
flds
cs
mov
test
adc
xor
dec
subb
movsl
pop
ds
sub
ds
lock
rcrl
jae
adc
or
movsb
push
insl
fs
mov
rolb
in
add
adc
push
popa
add
mov
js
pop
mov
mov
xchg
adc
nop
or
movsb
jnp
sbb
repz
incl
shll
es
repnz
xor
cmp
mov
dec
das
inc
out
lods
mov
cmp
xchg
xchg
sti
pop
ret
and
add
outsb
loop
sub
push
int
mov
fbld
inc
aaa
insb
aam
xchg
test
loopne
add
jbe
mov
movsl
call
push
outsl
pop
pop
mov
hlt
cld
fmul
xchg
int3
js
mov
das
sbb
xor
fwait
push
pop
jg
jecxz
and
out
fucomp
sub
xor
and
lcall
scas
jg
movsl
not
mov
mov
cmp
sbb
and
aas
pop
or
lret
mov
loopne
jne
inc
loope
inc
insl
pop
sub
pop
test
out
enter
int3
inc
jb
lcall
or
xor
movsl
outsb
hlt
ljmp
sbb
decl
jecxz
or
dec
jmp
pop
leave
leave
pop
fdivrp
lea
cltd
inc
imul
and
test
shll
cmpsb
enter
ja
dec
add
sub
addr16
xchg
pop
test
sarl
ret
mov
pushf
jns
jae
ficomps
insl
jle
movswl
iret
push
in
lahf
push
mov
andl
or
mov
jbe
lret
fistps
ljmp
outsl
cmp
lahf
leave
icebp
fstl
and
sbb
shlb
mov
stos
cs
loope
aas
aaa
movsl
lret
push
xor
or
testl
dec
push
mov
test
ljmp
pop
push
rcrl
adc
mov
enter
sbb
dec
pop
or
ds
ja
and
sub
dec
sbb
add
dec
cld
pop
xor
lcall
jl
inc
pushf
js
imulb
stos
sbb
cltd
mov
mov
pop
push
roll
test
cmc
sbb
mov
out
ljmp
mov
mov
pusha
mov
decl
mov
dec
lahf
cmpsb
mov
sahf
lea
hlt
andl
dec
jmp
cwtl
or
sbb
mov
cmpsb
pop
dec
pop
adc
jns
push
cmp
add
jns
nop
js
jmp
jo
jbe
repz
mov
sbb
cmp
test
in
int3
xor
in
fmull
gs
jg
dec
inc
inc
dec
fimuls
mov
js
es
cmp
and
sbb
mov
adc
sub
pop
dec
lods
aaa
jne
mov
push
ljmp
hlt
jge
xchg
xor
call
clc
enter
ss
js
and
data16
ljmp
aam
or
dec
scas
imul
xchg
repnz
push
inc
js
dec
sahf
sbb
mov
add
fdiv
mov
fcmovnb
fs
aaa
cmp
icebp
dec
inc
pop
mov
popa
mov
xlat
pop
loop
and
jmp
sbb
mov
das
inc
mov
jmp
dec
or
icebp
pop
jle
std
cmp
outsl
stos
adc
mov
and
sbbl
sub
pop
or
dec
out
push
xlat
mov
cmpsl
ds
xchg
mov
and
fistpll
mov
xchg
out
push
out
sbb
inc
mov
ljmp
mov
lds
or
je
pop
test
subb
cmp
aam
or
outsl
xchg
shr
add
fistps
push
push
fiaddl
sbb
stos
arpl
push
js
stos
pand
mull
mov
call
rcrl
jp
sbb
xor
pushf
or
adc
loop
int
jae
bound
jge
cmp
fnstsw
repnz
les
and
ljmp
std
aas
sbb
mov
dec
xchg
arpl
ja
popa
mov
inc
lea
mov
iret
enter
xor
fnstcw
xchg
mov
sbb
and
mov
ret
inc
sbb
mov
outsl
out
fwait
ljmp
jmp
mov
mov
int3
xor
jmp
lods
pop
push
jo
outsl
jg
shl
jno
adc
add
ret
xor
lods
mov
mov
inc
inc
mov
sbb
outsl
mov
xor
into
je
mov
mov
jmp
pop
sbb
out
hlt
sbb
mov
sarl
out
push
push
inc
lret
loopne
jl
clc
loop
jmp
xchg
cwtl
xor
lcall
sbb
mov
xchg
mov
cmp
and
or
xor
cmp
ja
inc
pop
shll
jno
pop
sub
in
mov
ss
pop
shll
add
mov
lea
push
popf
test
add
aad
ljmp
in
fidivs
jp
pusha
jb
ja
mov
loop
lock
pop
in
fadd
ficoml
fistl
pop
in
sahf
das
pop
sar
jg
in
out
fwait
ljmp
das
das
mov
out
lods
ret
int
sarl
shrl
ret
jmp
ljmp
mov
enter
or
addr16
movsb
repz
or
aas
jle
popf
hlt
scas
cli
push
aaa
adc
and
inc
bound
ljmp
jge
dec
movsl
xchg
sbb
addb
popf
orb
mov
hlt
test
xchg
lret
ja
sbb
add
inc
mov
push
xchg
pop
adc
add
fldenv
movsb
fldcw
arpl
push
pop
pop
scas
and
sarl
xor
cmc
in
xchg
lcall
dec
cwtl
pop
pushf
sarl
movsb
ljmp
jecxz
sbb
pop
fwait
push
lock
das
in
dec
sahf
add
mov
push
lods
outsb
es
lahf
add
sub
inc
mov
push
gs
xor
subl
test
in
mov
sahf
mov
js
pop
cmp
nop
lods
jl
loope
ja
adc
jle
mov
cmp
lret
mov
jnp
pop
aas
push
sbb
pop
cmpl
mov
pop
aas
cmp
xchg
js
mov
xor
pop
jae
bound
xor
adc
adc
popf
mov
hlt
imul
and
ds
mov
add
bound
inc
dec
popa
mov
les
push
repnz
dec
cmp
iret
stos
pop
inc
int
adc
xor
dec
dec
stc
js
test
lret
mov
cmp
in
inc
mov
hlt
xchg
test
xor
movsb
nop
test
stos
mov
ret
inc
and
shrl
cmpsb
lods
pushl
push
xchg
inc
jnp
pop
mov
xchg
hlt
sub
xchg
and
xchg
pusha
outsl
and
xor
hlt
or
dec
outsb
filds
inc
add
loop
mov
insl
adc
cld
jmp
lahf
jge
inc
loopne
movl
pop
test
push
pusha
aaa
mov
es
inc
push
in
mov
fwait
nop
cmp
pop
data16
repz
cmc
outsb
aas
jnp
adc
repnz
bound
xorl
cmp
shl
out
add
in
test
inc
sti
or
addr16
aaa
jl
jb
enter
sbb
fs
and
cli
adc
sbb
mov
jmp
cwtl
inc
ficomps
ljmp
addr16
sub
dec
andl
arpl
and
xchg
push
sub
push
dec
sbb
cmp
mov
sub
xchg
lret
push
and
pop
lods
lcall
mov
fiaddl
ret
insb
or
insl
enter
int3
enter
ja
mov
cs
std
imul
dec
out
or
mov
cmp
xchg
mov
xchg
or
pop
cwtl
out
adc
add
and
loope
mov
mov
or
dec
mov
sub
mov
cmc
mov
mov
cmp
cmp
xchg
pop
inc
and
ljmp
inc
bound
int
arpl
pop
pop
adc
mov
pop
cmp
aaa
outsb
jmp
cli
dec
sti
outsl
xchg
xchg
popa
ret
push
mov
data16
sub
inc
xchg
mulps
pop
cltd
cs
in
lods
addl
jp
jns
pop
mov
adc
mov
jl
fsubs
add
xor
add
dec
ja
xlat
test
lds
fistl
js
fwait
testb
mov
stos
jbe
mov
imul
mov
jbe
clc
xchg
nop
mov
cmpsl
jmp
imul
inc
xchg
sbb
mov
adc
jo
loope
mov
jbe
mov
outsl
cmpsl
push
cmp
mov
repz
or
sti
jne
dec
orl
cmp
push
outsl
add
cltd
pop
and
sub
push
mov
jle
iret
xor
and
call
lds
push
xor
pop
sub
dec
in
mov
sbb
and
cmp
push
mov
or
xchg
lds
cltd
inc
cltd
pop
pushf
adc
dec
adc
jo
mov
xchg
mov
sti
push
loopne
push
sbb
mov
dec
lahf
cmp
movsl
push
bndstx
dec
je
lcall
or
fsts
mov
fcompl
sub
dec
roll
cmp
mov
mov
cmpl
sarl
out
call
sbb
repnz
cmpsb
jns
mov
imull
jno
add
test
push
aaa
shrb
xchg
mov
sti
das
mov
xor
jl
mov
insb
sbb
out
dec
xor
xchg
push
jg
fwait
outsb
inc
pop
xlat
orb
fidivrs
icebp
and
xor
cmc
mov
out
pop
add
enter
jae
push
and
leave
push
aad
fcomps
mov
jnp
adc
dec
aam
iret
add
ds
mov
cmc
fdivrl
insb
es
add
imul
stos
mov
outsb
add
lods
cmp
jp
jmp
addb
aad
sbb
or
xlat
xor
shlb
mov
clc
pop
out
or
aas
sub
push
fadds
adc
in
dec
inc
orb
or
mov
fwait
dec
dec
outsl
dec
mov
dec
mov
in
jae
add
and
aad
cmp
in
sub
out
adc
pop
add
les
shrb
mov
xchg
mov
adc
push
sub
dec
fs
push
pop
into
push
sahf
hlt
xor
fisttpl
sub
fcompl
sub
test
daa
adc
jmp
out
xor
jg
sbb
xor
les
mov
test
les
push
es
dec
popa
jmp
xlat
push
add
add
das
movsb
test
movsl
mov
cmp
pop
sub
test
jle
jo
fisubl
jmp
xchg
in
test
lahf
mov
mulb
jno
aaa
push
inc
push
mov
rol
jb
hlt
sti
xchg
adcb
cmp
xchg
and
sbb
push
mov
cld
adc
iret
int3
in
addr16
out
adc
es
hlt
ljmp
jbe
fbld
or
cmp
push
jmp
lret
lods
popf
notb
xchg
xor
out
mov
fistl
cmp
add
jnp
pop
lods
push
and
mov
cmp
fidivrl
mov
rcrb
sub
lea
ss
cltd
out
das
and
jl
jge
outsl
jmp
jl
dec
mov
fcos
mov
movsb
andl
or
and
pop
ss
cmc
pop
xor
or
cmpsl
push
push
es
adc
push
xchg
push
fdiv
inc
fucom
mov
arpl
test
daa
inc
cmpsb
in
sbb
dec
mov
sub
push
push
pop
and
and
xor
push
push
pop
add
enter
pusha
push
jnp
repnz
inc
dec
in
sbb
imul
js
inc
and
mov
fs
mov
push
ds
out
or
mov
adc
jo
rol
test
pop
jo
mov
mov
and
mov
jmp
push
mov
rol
xlat
ret
mul
and
xchg
leave
cwtl
bnd
js
pop
adc
sbb
leave
dec
adc
loopne
xchg
sti
add
cmp
adc
clc
cmc
and
in
aaa
push
push
cmp
lcall
icebp
inc
mov
mov
push
inc
adc
xlat
xor
xchg
sbb
and
in
sub
mov
test
mov
movsl
scas
test
mull
xor
nop
fists
pop
data16
jnp
add
sbb
shrl
pop
sbb
cmc
push
fwait
jl
jge
push
and
pop
ja
sti
xor
lock
fsubrp
loope
jb
xchg
sub
sub
ds
jecxz
out
loopne
pop
sub
push
ret
bound
fs
data16
int3
out
ret
mov
loopne
jecxz
addb
push
xchg
xchg
mov
and
add
dec
int3
xchg
mov
in
cs
push
mov
push
or
mov
sbb
scas
push
in
xchg
xchg
outsb
mov
ja
cmp
dec
mov
imul
push
std
ret
sbb
jo
enter
and
push
jns
test
mov
jne
dec
cmp
fisubs
and
outsb
push
dec
lret
subl
or
cmp
jg
mov
jno
xor
adcb
ficomps
test
lds
cmp
dec
lret
mov
enter
int3
movsb
enter
pop
jae
and
mov
fwait
stos
insb
scas
push
sub
imul
add
add
rolb
cmp
mov
mov
fmuls
es
mov
adc
ljmp
mov
sbb
test
xorl
shlb
sub
lods
arpl
push
jb
sbb
test
push
mull
add
filds
and
pop
push
mov
test
nop
jmp
sbb
aaa
enter
mov
lahf
leave
arpl
imul
inc
ds
fcmovu
xchg
pop
outsl
add
pxor
test
xchg
push
cld
stos
jbe
adc
push
ret
aas
mov
sbb
jecxz
sub
push
fstl
xchg
and
inc
loope
ljmp
mov
sub
jmp
out
mov
adc
mov
inc
jg
sbb
inc
sbb
xchg
and
aas
xchg
mov
rcll
cs
in
mov
inc
jns
mov
out
mov
pusha
bound
js
cmp
out
add
push
mov
sbb
loop
mov
mov
mov
cmpsb
or
push
rcrb
xchg
loopne
pop
mov
jae,pt
mov
push
or
insl
inc
inc
adc
mov
daa
cli
jnp
out
test
in
xor
jle
fidivrs
cld
hlt
bound
cmpsb
jle
cmp
inc
push
sub
test
push
mov
cmp
ja
enter
mov
cmp
fstp
inc
lcall
pushf
or
aaa
repz
inc
mov
dec
sahf
push
cltd
mov
add
loope
hlt
fsubp
pusha
ret
fs
sbb
test
test
loope
fdivp
cltd
inc
stos
es
popf
ja
clc
mov
xchg
mov
inc
xchg
out
iret
mov
jl
lahf
es
sub
xchg
dec
pop
adc
shlb
clc
jge
test
std
push
ret
fisttps
xlat
sub
cmp
mov
push
insl
add
loope
cld
cmpsb
mov
inc
adc
jne
push
push
or
sbb
xchg
les
mov
push
lea
sbb
pushl
flds
push
mov
scas
and
icebp
lret
popf
pop
mov
cmp
jecxz
cmp
cmp
dec
mov
push
dec
add
push
repnz
pop
rcrl
inc
stos
outsl
push
arpl
jo
sbb
call
les
iret
pop
jg
adc
sahf
aam
loop
pop
mov
cs
fistpl
or
aad
je
adc
push
mov
aas
add
das
lods
cwtl
lret
imul
mov
inc
xor
pop
xchg
imul
push
dec
add
cmp
outsb
div
testb
and
jae
mov
xchg
or
xor
rolb
jae
adc
out
mov
jecxz
fwait
stc
and
jp
pop
or
push
pop
sahf
rcll
sahf
cmpsl
cmc
clc
mov
push
push
pop
lret
outsl
mov
pop
mov
ret
cwtl
xor
aas
xorb
movsb
xchg
movsb
stc
pop
push
aaa
pop
loop
xchg
out
test
leave
dec
idivl
decl
cmpsb
sti
add
jmp
push
adc
cltd
mov
inc
dec
or
loopne
sub
or
test
ja
or
add
mov
scas
mov
push
lods
cmpsl
out
push
push
inc
xchg
and
lcall
pop
fldcw
dec
pop
cmp
jo
lods
pop
push
notb
lret
xor
adc
sbb
fadds
out
fcoml
push
shll
sti
test
xor
push
adc
scas
stc
add
sti
xlat
push
test
dec
iret
cmpb
xchg
out
repnz
mov
pop
cmp
xor
mov
sbb
test
fmull
inc
sub
movsl
loope
jae
add
mov
sub
fistpl
add
mov
call
and
push
and
and
dec
and
xor
mov
mov
jo
jge
push
test
ret
mov
enter
lcall
daa
jae
mov
repz
and
fsubrl
sub
std
mov
test
pop
fwait
cmc
add
neg
ficoml
mov
and
jns
mov
decb
xor
sub
jb
mov
xor
xchg
sbb
int3
sarl
push
imul
mov
or
scas
push
sbb
cwtl
dec
lods
pop
adcl
push
lret
push
mov
mov
dec
iret
mov
in
call
dec
jecxz
dec
cli
ret
scas
in
sbb
lret
fisubl
out
xchg
out
mov
in
inc
adc
scas
xchg
jne
das
sub
pop
and
push
lret
mov
mov
icebp
pop
pop
cmp
cli
pushf
inc
jo
inc
xor
inc
call
cld
mov
xor
out
outsb
ss
cmp
xchg
shll
inc
icebp
or
or
addr16
repz
fdivr
push
bound
and
or
je
enter
ss
fsubs
sbb
int3
pop
push
addb
mov
xor
sti
mov
sub
jg
add
push
pop
insl
mov
jg
std
pusha
mov
mov
mov
popa
push
cltd
add
xor
rcl
in
pop
mov
mov
imul
mov
or
sub
push
aaa
scas
iret
jp
rclb
xchg
or
ret
xor
cmpb
ss
gs
ljmp
sub
xchg
movsl
daa
ret
add
fmull
jp
dec
mov
and
cmp
push
sub
mov
xchg
mov
cmpsl
sub
outsl
cs
cmpsl
mov
fucomi
mov
or
leave
out
dec
dec
mov
shlb
dec
xchg
lea
ret
loopne
mov
sub
jp
sti
cs
fiaddl
mov
inc
int3
cmp
pop
add
insl
pop
add
sbb
jnp
rol
lcall
xchg
pop
imul
mov
popf
lock
mov
bound
jle
xchg
and
je
cmpsl
mov
sbbb
std
cmpsb
inc
mov
in
stc
cmc
insb
in
loopne
test
out
fldln2
cmp
rolb
inc
js
sbb
cmp
imul
das
jns
xorl
cwtl
fldt
push
push
sub
add
cmp
outsb
inc
push
ror
xor
mov
pop
xor
icebp
ss
repz
sbb
pop
pop
inc
dec
jns
adc
jp
gs
sub
inc
ret
lods
push
test
dec
lret
pop
jecxz
jno
addr16
test
jmp
mov
inc
sti
xchg
adc
add
sbb
mov
jle
xor
mov
loop
sub
pusha
and
or
add
in
popa
mov
xor
mov
fstpl
mov
insb
aam
notl
jge
pop
lods
push
icebp
xor
xor
imul
dec
pop
cmp
jp
push
das
loope
pop
cwtl
out
push
jns
cmc
mov
mov
out
mov
scas
and
push
add
adc
ljmp
xchg
adc
jbe
and
hlt
pusha
and
jle
test
sub
xor
mov
xlat
addb
movsl
inc
cmp
pop
data16
push
ja
int3
sahf
aam
jne
mov
shll
imul
shrb
jnp
jbe
ss
xchg
or
jmp
sub
push
lds
jbe
jecxz
rcrl
xchg
out
vminpd
jle
in
clc
stos
pop
lock
mov
lds
add
imulb
cs
or
das
je
je
test
xor
or
sub
dec
mov
sbb
xchg
aam
sarb
out
jecxz
enter
cs
fistps
push
nop
ret
xor
in
out
orl
push
mov
cmp
mov
sbbb
pop
pop
push
int3
bound
into
into
es
jnp
mov
sub
jmp
addb
fidivl
and
lret
jo
ljmp
dec
and
rclb
adc
mov
mov
in
jge
mov
popf
rclb
stos
sbb
leave
das
mov
xchg
imul
ds
sub
pop
push
test
mov
add
pop
in
sbb
sbb
stos
pop
addb
inc
jl
push
insl
xchg
and
push
and
test
pop
mov
lock
int3
xor
ret
push
cmpsl
fcompl
mov
icebp
xchg
std
push
clc
ret
sbbb
out
movsl
jp
xor
xor
pusha
and
repz
pop
pusha
ds
fwait
push
hlt
adc
xor
insb
mov
insl
call
subb
outsl
mov
cmc
xchg
mov
test
enter
ss
push
ret
mov
dec
iret
sahf
out
sbb
cwtl
data16
leave
imul
arpl
sahf
sahf
in
pop
idiv
and
test
xchg
sbb
jp
mov
js
push
jae
dec
mov
hlt
xlat
shlb
mov
jge
lahf
cmp
jecxz
imul
mov
aaa
pop
mov
int
test
mov
pushf
popf
outsl
push
test
ficoml
cld
dec
add
ja
mov
fimull
sbb
add
jne
inc
push
loope
inc
sub
pop
mov
xor
sub
push
insl
push
sti
cmp
push
adc
enter
sbb
push
fs
out
in
test
sub
pushf
pop
cmpsl
adc
test
xor
lret
divl
cli
insl
mov
in
dec
jg
sti
xor
dec
dec
push
lods
push
orb
in
xlat
in
jmp
lahf
adc
add
cmp
and
xchg
xchg
popa
push
cmpsb
shl
outsl
fmulp
and
test
mov
lahf
punpcklwd
addr16
dec
sub
mov
sbb
add
xor
mov
shrb
jg
lret
lods
and
jne
push
and
mov
inc
pop
scas
not
mov
sbb
mov
rcrb
fsts
pop
add
pop
in
test
push
incb
ret
fstpl
inc
sbb
pop
adc
dec
fimuls
into
xor
push
add
loop,pt
out
insl
xor
inc
cmp
jno
imul
mov
mov
fs
inc
sbb
jg
xchg
sarb
in
pop
std
push
subl
mov
scas
pop
fwait
dec
and
and
mov
ficoms
and
mov
xor
sub
sub
lcall
fwait
mov
fcmovb
lahf
test
xor
test
aas
push
iret
sbb
xor
xlat
mov
lods
ret
sub
lret
jge
jg
out
or
jmp
neg
rorl
int3
inc
testb
dec
jb
mov
sbb
mov
fbstp
ret
mov
inc
das
jp
aam
movsb
cmp
repnz
mov
xor
add
cmpl
nop
inc
inc
xor
pop
in
ret
lahf
decb
in
rcll
das
xchg
in
cmp
cli
and
push
jne
pop
pop
lret
mov
inc
imul
mov
in
ret
jne
aaa
adc
mov
repz
or
xchg
aad
jp
sub
and
out
cmpsb
je
dec
ljmp
fnstenv
jmp
test
xchg
shlb
lcall
hlt
pop
movsb
int3
pop
dec
es
xchg
and
aad
mov
aas
je
or
gs
push
sub
mov
test
imul
stos
and
pop
das
shlb
leave
incl
pop
add
leave
lcall
enter
shll
inc
out
cmp
stc
lret
cmp
fcoml
ds
mov
mov
insb
gs
cmpsl
in
jbe
mov
mov
and
cmpsb
push
imul
xchg
add
lods
add
lret
insb
sub
push
mov
icebp
jge
xor
pop
jp
jns
in
mov
mov
ret
dec
pusha
aam
lock
repz
and
sbb
sbb
data16
add
mov
sti
sti
jge
mov
xchg
push
cld
xor
cmp
sbb
jno
xor
icebp
fucom
or
jbe
test
in
cwtl
cmp
or
and
cli
sub
cltd
dec
add
sahf
inc
cmpb
repz
xor
stos
inc
lods
push
pusha
push
es
and
cs
int
pop
jae
cmp
addb
cmp
jmp
adc
sbb
mov
jno
aaa
popfw
lds
data16
xor
xchg
pop
shl
dec
jl
pop
add
imul
xor
dec
sbb
sub
je
popf
mov
gs
cs
bound
pop
inc
jg
dec
dec
push
jnp
mov
sub
negl
loop
and
dec
ds
into
imulb
fiadds
or
cs
mov
stos
rorb
jge
jnp
lahf
mov
xor
sbb
insl
jbe
pop
fildl
inc
ljmp
cs
sarb
mov
pop
cmc
cmpsl
jnp
mov
pop
sub
out
ljmp
xchg
movsl
lods
mov
and
dec
xor
ljmp
js
scas
mov
into
push
cmp
outsl
inc
faddl
test
int
subl
mov
inc
out
orb
imul
sub
pop
iret
push
mov
mov
out
jmp
sbb
dec
push
repz
mov
push
sbb
jb
les
int3
push
push
mov
imul
int
mov
pop
scas
lods
fs
cmpsl
imul
jnp
ja
dec
mov
fcmovbe
sbb
fwait
dec
mov
fimull
dec
pop
pop
ds
adc
out
dec
hlt
insl
rolb
subl
rcl
cmp
mov
cwtl
incl
xor
jl
loop
sbbb
mov
int3
loope
fstl
jmp
lods
lret
in
mov
jmp
mov
stc
and
ljmp
and
add
out
mov
and
cvtdq2ps
insl
or
popf
orb
mov
flds
adc
stc
addr16
jbe
ja
mov
ret
inc
lea
mul
cmp
test
or
jnp
or
mov
adc
push
enter
dec
sub
or
in
push
into
out
add
imul
scas
jp
out
add
in
mov
data16
aaa
jecxz
cmp
icebp
xor
or
mov
in
inc
fildll
mov
ss
ss
cmp
sbbl
and
add
sbb
mov
xchg
test
outsl
ficoms
mov
and
xchg
dec
push
sarb
mov
stc
cld
cmpsl
mov
mov
fisubrs
leave
ret
into
stc
xor
cmpb
adc
jno
lock
push
mov
mov
stc
test
jnp
push
lahf
push
bound
lret
pusha
cmpsl
xchg
rorb
dec
add
jns
data16
addr16
loope
push
xor
inc
int
stos
jns
jae
aaa
mov
movsb
pop
test
inc
es
mov
sbb
sub
pop
stos
leave
outsl
js
mov
sub
push
je
jnp
iret
rcll
lea
xchg
jne
call
lods
sbb
stc
adc
inc
cmp
push
loopne
push
push
or
arpl
pop
jmp
and
adc
subl
or
cmp
sbb
test
and
sbb
mov
mov
test
mov
cmp
das
js
dec
ja
and
push
mov
js
lds
repz
imul
or
jns
xor
pop
push
mov
and
movsb
repnz
jecxz
jb
aam
mov
out
inc
je
push
sub
dec
sarl
sub
bound
push
leave
ret
pop
push
sub
out
inc
push
fnstenv
movsb
jae
xchg
ja
ret
pusha
leave
nop
into
cmp
out
add
mov
insb
je
jmp
lock
insl
imul
xchg
pop
add
ss
clc
pop
insb
fistpl
pop
scas
data16
mov
xor
xlat
add
push
cmp
outsb
lods
iret
inc
sbb
insb
push
inc
gs
gs
ret
pop
sub
sbb
jae
nop
jle
xor
ret
daa
adc
nop
popa
out
das
decb
stos
push
sbb
std
push
insb
inc
jns
push
push
xchg
lahf
jp
inc
push
das
and
mov
andb
push
ficoml
mov
push
imul
sarl
aam
ss
loope
push
repnz
and
xor
or
in
xchg
pop
gs
imul
out
or
xor
mov
cmp
xchg
in
pop
xor
ficoms
mov
sub
out
daa
out
out
mov
adc
mov
pop
arpl
and
aas
lahf
push
xchg
mov
mov
adc
iret
jle
mov
jge
push
pop
pop
jnp
or
popa
adcl
jp
sub
jae
in
push
jmp
das
jecxz
inc
jg
add
add
lds
push
add
xchg
test
les
aam
sbb
mov
mov
jl
ret
pop
pop
lods
daa
jmp
push
insl
mov
rcrl
or
loopne
enter
push
mov
sub
cmp
std
in
loop
ss
les
in
fldt
ficoms
push
sbbl
add
push
faddp
ja
inc
mov
jmp
lcall
lcall
in
stc
and
cmpsb
imull
mov
jo
test
subb
fidivrl
mov
xchg
movsl
pop
cmp
sub
gs
cmpsb
cwtl
xorl
adc
mov
bound
mov
mov
mov
mov
fwait
mov
sub
adc
out
push
sbb
xor
inc
shrl
pcmpgtd
jne
aad
lret
leave
xchg
movsb
fsubrs
sub
cwtl
mov
repnz
sub
and
or
hlt
mov
lret
lret
daa
push
and
cmpsb
cmp
mov
aad
push
ljmp
shrb
dec
je
les
cld
repz
fucompp
clc
dec
enter
repnz
ss
into
adcl
or
mov
mov
inc
incb
das
and
sub
lock
mov
mov
ret
stos
mov
xchg
shl
xchg
mov
and
cld
scas
ljmp
shll
cmpb
ss
cs
push
and
ljmp
xor
loop
push
testb
lds
nop
jl
push
ja
insl
js
inc
in
xchg
lods
scas
pop
pusha
dec
mov
jbe
push
jp
adc
std
jo
mov
cmpsb
ljmp
jecxz
pop
outsb
adc
lods
stos
add
fwait
mov
adc
jecxz
insb
test
imul
faddl
sub
out
pop
cmp
add
lcall
rcrb
stc
out
leave
add
and
pop
push
daa
call
mov
jecxz
in
push
xchg
dec
cmpsb
out
js
sbb
pop
inc
or
and
iret
out
mov
dec
movsl
int
mov
test
cmc
inc
mov
push
jo
mov
loopne
data16
imul
inc
xchg
adc
out
pusha
xchg
js
and
shl
fisubl
adc
inc
popf
fildl
pusha
rcpps
lcall
and
cmpl
int
lcall
sbb
test
dec
adc
add
arpl
sub
test
jne
imul
jb
lods
rcll
or
call
int
shll
jb
push
out
cs
cld
xchg
cmp
sarb
sbb
lea
mov
push
lcall
jmp
mov
jo
dec
xchg
push
aas
lgs
insl
mov
inc
mov
push
pop
das
jp
daa
cld
mov
fwait
lcall
hlt
or
mov
jo
xchg
push
jb
inc
mov
movsl
or
dec
sbb
adc
clc
js
add
ja
loop
sbb
adc
xor
dec
xor
push
mov
les
into
imul
inc
aad
add
cmp
inc
pop
sbb
mov
int
pop
repnz
xchg
lods
xchg
insb
mov
cmc
das
subl
pusha
pop
xor
xchg
lahf
ret
mov
xor
loop
je
insl
test
push
lret
pop
loopne
aaa
in
mov
xchg
jecxz
loop
and
sub
cld
jae
mov
mov
dec
add
xchg
loope
cmp
repnz
add
fs
sbbb
scas
cmp
jle
pop
xchg
sbb
lea
jnp
mov
dec
add
fcoml
rcll
mov
gs
roll
adc
lcallw
pop
repnz
mov
mov
push
sbb
movl
rcl
imul
dec
xor
and
jg
pop
cltd
inc
clc
push
xchg
mov
xor
sub
dec
mov
lahf
dec
in
fs
mov
test
xchg
fdivp
sub
xchg
aaa
xchg
bound
adc
jmp
fdivs
sub
lods
and
mov
ret
incb
push
cmp
hlt
int3
push
into
ret
sub
subb
mov
mov
je
cmp
xchg
test
fchs
inc
fs
add
test
cwtl
adcb
and
xchg
mov
sbb
mov
pop
cltd
popa
mov
or
bound
andl
jle,pn
or
pop
xchg
push
pop
into
sub
mov
imul
mov
inc
mov
xchg
fcos
cwtl
shl
adc
jns
inc
enter
sahf
inc
lcall
sub
sbbl
test
fisubrs
lods
sarb
add
in
insb
mov
and
int
rcrl
out
jecxz
call
inc
or
xor
inc
mov
in
mov
inc
mov
mov
stc
repz
sbb
rcrb
xor
data16
and
fcomps
mov
jo
stos
lods
sub
pushf
dec
test
adc
jp
pop
sub
dec
push
xchg
inc
adc
lock
xor
lods
popw
xchg
movsl
dec
shrl
test
fcmovnu
test
pop
test
or
ds
xlat
dec
fsubl
inc
push
jge
es
daa
lods
xchg
roll
ret
repnz
fcoml
cmp
mov
icebp
cmp
and
ljmp
outsb
lods
push
lahf
out
push
xor
pop
and
ret
mov
fcompl
push
stos
sub
dec
test
pushf
sbb
iret
rolb
stc
mov
inc
sub
imul
aad
ret
imul
pushl
les
lods
add
popa
push
mov
rcll
test
or
or
popa
xchg
mov
mov
mov
in
or
and
leave
mov
sub
mov
push
cli
cltd
stos
sub
lock
shrb
push
in
test
mov
arpl
cmp
xlat
cli
dec
xchg
sbb
xor
adc
cmp
xor
notb
lods
jl
insb
pop
insb
push
mov
dec
ret
lret
mov
fstps
insl
in
test
ret
mov
sbb
mov
or
pop
bound
sbb
or
mov
fsubr
mov
sbb
sub
sub
mov
inc
mov
and
jg
xchg
cmp
cwtl
leave
sbb
test
fcomi
scas
mov
and
scas
push
das
bound
jge
and
and
orl
and
jbe
mov
adc
or
addr16
xlat
sub
es
xor
xor
aam
roll
sbb
movsl
stc
in
andb
ret
stos
cmp
jle
mov
les
faddp
pop
cmp
xor
jmp
leave
mov
sbb
push
popa
push
push
jmp
stos
scas
arpl
xor
loope
cld
in
ja
lods
sbb
loopne
sbb
pop
add
imul
and
pop
xlat
into
push
outsl
int3
push
cmp
aad
mov
push
mov
aam
imul
scas
sbb
out
imul
nop
jmp
and
inc
leave
cmp
jb
rclb
jle
arpl
pop
mov
push
xchg
jecxz
fs
psllq
fwait
dec
in
out
xor
mov
ret
and
fwait
adc
sub
xchg
icebp
inc
push
mov
or
xor
rcl
bndstx
xor
mov
fdivrs
jge
sarl
cmp
sub
mov
test
sub
repnz
dec
xchg
test
add
adc
les
cmc
or
fldt
or
orb
push
popa
sub
subb
xor
pushf
xchg
js
dec
sub
adc
sub
cmp
enter
subl
lock
arpl
sbb
inc
sub
loopne
xchg
adcl
or
daa
xorl
iret
dec
dec
dec
ret
push
ret
scas
and
sahf
mov
xchg
jne
push
and
cmc
out
out
cmp
inc
sbb
out
movb
add
fdivrs
mov
pop
fmul
dec
out
xchg
adcl
int
jb
jo
mov
inc
cmp
fwait
cmpsb
jge
adc
scas
gs
xchg
fisubrl
sti
andb
cld
sti
fcoml
insb
xor
pop
xchg
sbb
xor
mov
loopne
inc
pop
or
fs
push
out
dec
addb
icebp
cmpb
sbb
arpl
bound
stc
cmpsb
lods
and
mov
xor
daa
leave
push
mov
addb
rorl
cltd
pushf
xchg
les
pop
pop
js
pop
mov
dec
xor
pop
and
pop
lret
mov
xchg
xchg
orb
pop
rorl
popf
pushl
xor
nop
and
xchg
lds
gs
mov
adc
test
mov
push
add
fwait
mov
jge
lods
or
adc
popf
mov
mov
fildll
js
popf
and
gs
fcoml
icebp
add
inc
push
or
test
fbstp
push
rcll
dec
int3
jp
cltd
cmp
or
jne
nop
and
lahf
jo
push
addr16
js
ret
and
adc
sbb
xor
lock
mov
xchg
ret
mov
cmp
and
mov
mov
popf
ja
sub
dec
std
cmc
sub
adc
xchg
cmpsl
xchg
test
arpl
xchg
testl
into
inc
push
dec
je
and
cmp
dec
sbb
and
fdivrs
push
and
xor
mov
les
lea
push
jmp
push
sbb
repz
arpl
mov
faddp
mov
je
pop
xor
dec
les
cmpsl
mov
test
xchg
inc
pop
das
cmc
pop
xor
adc
and
cmp
int3
cmpb
xor
or
fs
leave
enter
fidivrs
pop
mov
push
mov
adcb
sbb
sbb
adc
pop
ljmp
addr16
into
je
ja
adc
mov
test
into
sbb
jb
je
jecxz
sbb
insl
mov
mov
loop
sbb
out
mov
mov
inc
mov
adc
incb
dec
stos
dec
inc
jbe
add
xor
fidivs
aas
xchg
pop
dec
test
fdivl
dec
neg
jbe
inc
shll
inc
out
ljmp
lds
test
jl
out
arpl
nop
adc
xchg
smsw
fistpl
mov
iret
cwtl
xchg
mov
into
push
lcall
push
xchg
sbb
mov
jne
out
sti
inc
push
mov
xchg
js
and
cs
inc
pusha
pop
jns
jns
insl
dec
inc
sbb
mov
movsl
rorb
xor
add
sbb
notl
js
in
dec
xchg
or
adc
leave
test
dec
mov
and
outsb
sbb
or
adc
jns
movsl
push
repz
fidivrl
add
push
loop
pop
cmp
fdivs
in
ljmp
mov
mov
es
andb
mov
data16
pushf
xor
jns
mov
pop
lods
jge
scas
sub
mov
imul
jns
adc
in
insb
mov
inc
fimull
mov
ds
int3
pop
sub
add
mov
int3
movsl
sbb
push
mov
pusha
outsb
mov
xchg
xor
lret
mov
or
jecxz
jg
push
pop
sub
push
cmpb
cli
test
into
xchg
sub
bound
dec
enter
xchg
pop
jg
mov
sbb
push
es
and
mov
inc
mov
lods
fbstp
imul
testl
add
jns
shll
sahf
shrl
test
jo
jo
mov
scas
lea
xor
mov
dec
add
fistl
push
test
sub
int
or
rolb
out
out
and
push
jecxz
insb
repz
aas
mov
jg
jo
mov
leave
int
push
fs
or
push
pop
sub
xor
mov
call
fdivl
insb
popf
xchg
jp
xchg
setp
jns
test
repnz
sahf
ret
hlt
xorl
shl
and
mov
sahf
mov
mov
orl
add
adc
mov
imul
fcomps
mov
xchg
imul
mull
inc
mov
icebp
mov
mov
sti
sahf
sbb
sar
push
sbb
cmp
fs
out
fsubr
sbb
mov
push
mov
push
and
cld
cmpsb
inc
jp
xchg
xchg
jb
lea
icebp
sbb
pushf
pop
shlb
jp
fildll
pop
pop
dec
sub
enter
xor
outsl
add
fsubl
push
cmp
testb
inc
int3
sub
mov
mov
sbb
idivb
repz
jno
xchg
es
dec
xchg
fwait
ljmp
shl
mov
mov
or
mov
ds
clc
push
jo
in
cltd
sub
xchg
fstpt
out
out
int
dec
in
cmp
fistps
sbb
jp
push
ja
cltd
add
fwait
push
jno
addr16
xchg
test
pop
inc
mov
xor
rorb
and
movsb
outsl
adc
je
imul
mov
mov
lods
adc
cmpsb
insb
cmp
mov
adc
cmp
fcmovb
fucomp
sub
shlb
push
clc
and
xor
loop
out
addr16
mov
and
divb
jno
lcall
cld
dec
roll
jmp
dec
hlt
dec
adc
gs
jle
lods
in
adc
pop
jg
andb
dec
fmull
shlb
arpl
sbb
sbb
sub
and
test
jno
out
enter
lods
pop
in
addr16
mov
push
adc
lcall
notb
dec
cmc
sbb
jmp
push
lds
shrb
xor
imul
xor
das
mov
xchg
movsb
inc
lahf
test
aad
call
jle
pop
push
mov
repz
fmuls
iret
and
inc
lret
dec
icebp
in
rcrb
xor
jne
arpl
inc
inc
add
dec
cmp
cli
test
inc
and
mov
adc
mov
test
fistl
or
stos
and
pushf
or
out
mov
test
add
pop
jmp
jae
dec
mov
shll
psubb
lcall
imul
clc
imul
out
ja
xorl
add
dec
cli
pop
xor
test
dec
pop
inc
in
dec
mov
idivb
mov
xor
es
int3
add
mov
setle
lret
inc
lods
inc
jmp
sbb
dec
int3
outsb
fidivl
mov
clc
mov
cmpsl
fstpl
nop
rcrl
xchg
lahf
gs
or
adc
add
ret
cmp
cwtl
or
jp
mov
outsl
cmpsb
pop
std
clc
popa
push
xchg
mov
push
ficoml
mov
loope
push
jns
mov
cmp
or
mov
cmpb
gs
repnz
lods
ds
sbb
push
addr16
fnstenv
decb
add
pop
cli
clc
fcmovnb
push
xor
vpmovzxbd
outsb
cmp
int
adc
popa
adc
aaa
sbb
xor
xor
icebp
test
jp
inc
sbb
or
jmp
dec
shlb
popf
add
cltd
in
cmpsb
xor
dec
mov
cmpsl
mov
out
ss
or
sub
cmp
adc
bound
nop
lret
lret
adc
jno,pn
and
pop
ss
adc
fldcw
cmpb
test
les
cmpsb
add
mov
jecxz
lea
sti
mov
inc
loope
push
dec
jae
pop
outsl
jmp
pop
and
test
push
xchg
arpl
and
xchg
push
xchg
jg
pop
in
cmp
pop
popa
push
pop
pop
cmpsb
lret
nop
ret
lods
test
es
mov
jnp
adc
cmp
in
adc
cmp
mov
fistpll
pop
jns
loopne
stos
arpl
sbb
cmp
stos
mov
bound
in
fucomp
cltd
jb
sub
cld
lock
sbb
xor
fwait
xor
sbb
add
aam
sbb
cmp
test
adc
and
movsb
mov
jg
push
xchg
inc
jl
cli
cmpsb
inc
scas
adc
xchg
fnstsw
xor
lock
in
lock
hlt
jbe
negl
mov
jae
fcmovbe
xlat
inc
hlt
sbb
mov
mov
in
jbe
push
mov
adc
sbb
repz
fidivrl
lcall
mov
lds
gs
jnp
push
aaa
cmp
gs
adc
pop
cmc
xchg
rcrb
in
stos
imul
xor
mov
adc
out
sbb
or
ret
rcrb
push
dec
sub
sub
cld
popf
fnstsw
push
addb
pop
mov
repz
dec
dec
mov
dec
divb
mov
xor
pop
pop
add
mov
adc
fucom
ret
sub
add
bound
mov
into
mov
jae
idivb
xor
push
mov
xlat
dec
pop
or
in
cwtl
adc
fucomi
out
xchg
sbb
jo
mov
cmp
pop
add
fadds
sti
inc
mov
stos
jno
push
adc
sbb
mov
push
negb
outsl
inc
adc
jnp
cwtl
rorl
fdivrs
dec
imul
push
sbb
add
push
js
pushf
or
sbb
inc
das
mov
sub
icebp
push
dec
pushl
jae
lret
scas
mov
jecxz
sti
shll
adc
mov
sar
jge
jae
fldcw
lods
aam
adc
sbb
loop
pxor
dec
repz
outsl
mov
sahf
push
mov
adc
cmp
cmp
and
jge
movsb
cmc
cmpsl
pop
mov
jne
aam
mov
loope
repnz
rorb
shll
pop
or
add
popl
int
jge
or
sbb
pop
mov
adc
jl
jl
dec
or
push
or
xchg
mov
xchg
jno
and
adc
call
dec
sbb
movsw
or
out
fbld
frstor
stc
add
in
adc
fistpll
jl
pop
insl
add
xchg
or
lock
cmc
jae
lahf
int
and
and
jecxz
in
inc
jle
mov
aas
stos
xchg
arpl
and
scas
sub
js
sbb
push
sbb
and
cmp
popf
fs
jmp
or
or
mov
push
xor
popf
add
addr16
inc
xchg
jecxz
add
test
and
insb
shlb
fmuls
clc
out
xor
mov
test
test
xchg
mov
lods
gs
test
jo
mov
push
std
pop
dec
mov
scas
jmp
outsb
and
aas
mov
imul
and
xchg
inc
pusha
xchg
lret
or
and
or
test
iret
jmp
push
jecxz
adcl
jge
mov
sub
fisttpll
stos
js
popf
pop
sub
push
push
roll
jl
aad
pop
mov
movsl
into
popa
push
xor
out
pop
int3
scas
pop
rcrl
ret
test
inc
sub
ljmp
orl
lahf
int
push
inc
or
lock
push
pop
mov
movsl
push
push
lods
or
cmpsb
sbb
xchg
push
lret
mov
into
andb
leave
push
adcl
sbb
sub
mov
in
adc
sbb
or
pop
lea
lahf
pop
xor
ret
fsubrs
leave
dec
out
pop
xchg
ret
mov
sbb
insl
js
out
add
mov
mov
mov
loop
cmpb
push
imul
mov
or
push
lcall
fcmovnbe
addr16
xchg
imul
inc
xchg
xor
jb
push
pop
fildll
dec
sub
adc
dec
xlat
subl
ret
pop
pop
add
enter
insl
push
out
jmp
add
cld
jmp
or
push
test
fmuls
pop
push
lea
xchg
jecxz
inc
sbbl
pushf
fucomip
vmfunc
arpl
repnz
xchg
jp
ficompl
adc
in
mov
pop
test
and
sbb
xchg
movsb
push
sbb
icebp
push
jecxz
out
icebp
pop
stos
xor
lods
pop
aas
jno
int3
xchg
xchg
movsb
fisubl
sub
jge
mov
xchg
fst
and
ss
gs
xchg
inc
push
lods
test
shrl
or
out
xchg
fidivl
mov
fildll
movsl
adc
or
js
inc
fistps
cmc
and
outsb
fwait
fsubrs
fnstsw
dec
rorb
out
rolb
mov
mov
in
or
pop
mov
data16
mov
lret
xchg
fisubrl
adc
mov
sbb
lahf
mov
pop
xor
rclb
adcl
stc
and
es
fistps
adc
sbb
in
sbb
sbb
repnz
pop
push
inc
sub
add
pop
ret
sbb
sub
or
pop
outsb
dec
dec
mov
ret
das
mov
sub
fidivl
inc
sarl
cmpsb
ljmp
xchg
jno
cwtl
cmp
pushf
fistpl
jl
call
hlt
or
inc
and
push
lret
pop
aas
lcall
xchg
pop
stos
pushf
cmp
xchg
push
add
mov
lea
mov
movsl
aad
inc
sbb
dec
mov
adc
or
xchg
jg
les
into
push
push
sbb
sbb
sub
cmp
add
leave
adc
in
cmp
lds
das
addb
les
push
popf
mov
mov
sbb
and
add
push
pusha
stos
xchg
push
andl
cmpsb
sahf
lret
sarb
loopne
mov
inc
bound
jbe
in
lds
push
dec
cwtl
jo
sbb
into
and
add
mov
push
outsb
mov
outsl
and
mov
and
push
out
scas
pop
dec
lods
adc
or
sub
dec
xchg
push
cltd
xor
dec
fwait
mov
and
sub
fwait
cmc
movsl
clc
and
inc
fidivs
stos
xor
mov
test
stos
xchg
nop
sbb
jb
or
cmpsl
mov
or
cmp
call
cwtl
lahf
push
ja
into
into
pop
cmpsl
ret
xor
dec
int3
out
mov
sub
lcall
stos
sbb
adc
xchg
cmp
and
dec
insl
jle
xlat
call
pop
pop
je
aad
or
mov
stos
lcall
xchg
jmp
outsl
test
das
mov
repnz
push
int3
mov
sbb
lods
into
xor
out
sub
push
ret
sub
addr16
lret
xchg
jno
test
repnz
adc
test
pop
mov
rorb
inc
add
sarb
sarl
mov
mov
xor
mov
dec
sub
subb
xchg
dec
inc
and
aam
and
jecxz
inc
jbe
push
mov
mov
push
pand
outsb
adc
inc
ljmp
xchg
or
int3
dec
in
sbb
test
idivb
cmpsl
dec
sub
gs
dec
ret
push
dec
and
daa
aas
jmp
lea
pop
sub
xor
movsl
and
jl
xor
fidivl
jae
push
aad
movsb
adc
fisubrl
adc
sub
xorb
ret
int3
nop
xor
aaa
sub
jle
push
sub
xor
repz
adc
sti
shll
mov
das
push
lahf
cmc
fidivrs
sub
int3
mov
fists
mov
mov
sub
shll
inc
in
mov
test
les
scas
add
adc
sbb
cmp
pop
imul
in
icebp
and
cmp
aaa
pop
lret
jns
add
push
aaa
fldt
push
shll
fisubs
sub
adc
aas
aad
cmp
mov
nop
or
lcall
and
dec
push
into
push
mov
xchg
jl
and
bound
xchg
inc
mov
pop
mov
mov
lea
inc
mov
adc
scas
inc
insl
xchg
insb
push
inc
and
jns
mov
aas
cmp
sbb
out
cmp
es
xor
or
sub
xor
stos
shr
insl
xchg
faddl
insl
and
pop
lahf
in
fnstenv
rol
je
mov
leave
test
roll
lret
loop
daa
call
shl
sub
push
mov
jno
sub
push
jnp
lods
push
mov
mov
mov
out
cmp
mov
mov
cltd
pop
popa
xchg
repz
cli
jb
add
xorb
fldl
adc
cmp
ret
sbb
push
jp
outsb
mov
and
rcr
leave
arpl
iret
adc
xor
sub
inc
dec
push
cmpb
call
push
ds
push
bound
sarb
lret
mov
lds
fcompl
adc
inc
mov
data16
clc
sub
mov
jmp
or
in
mov
ss
jae
add
cmp
jmp
mov
ficoml
out
fdivrs
lods
scas
inc
jg
cmp
shl
hlt
jecxz
movsb
js
std
addr16
xor
movsl
xor
pop
mov
sti
ret
dec
inc
dec
add
pop
mov
rolb
fcmovu
jb
ror
sahf
sarl
movsl
addr16
jns
push
xor
xor
enter
add
xchg
or
fldl
pop
pop
push
pop
popa
adc
movsl
push
jmp
in
add
in
xchg
ficoms
add
push
aaa
adc
rcrl
mov
push
inc
jecxz
xlat
push
data16
addr16
dec
cmp
mov
sbb
rorb
dec
lock
pop
jecxz
pop
aad
jmp
jbe
jle
push
cmp
ret
mov
pop
scas
xchg
cld
dec
cmp
add
stos
dec
xchg
jl
xchg
mov
outsl
pop
cmp
xor
aam
andl
ret
popa
adc
add
loop
dec
xchg
rclb
push
movsl
jnp,pn
fiadds
jne
rcrl
fisubrl
pop
cmp
pop
push
fmuls
sbbl
xchg
notb
cmp
bound
xor
cmp
mul
adc
popl
mov
jmp
sbb
xor
pop
push
push
std
testb
out
adc
inc
sub
adc
mov
ret
fldt
test
sub
in
mov
pop
mov
pop
jae
fs
ja
repnz
cld
in
in
mov
lret
adcl
dec
fwait
jnp
enter
mov
test
pop
lret
pop
pop
mov
std
dec
addb
xor
xor
in
mov
pop
inc
je
into
out
cmp
scas
pushl
out
dec
push
mov
adc
jb
jg
sbbl
xor
jge
mov
orb
out
imul
pushf
push
inc
fisubl
clc
jb
xor
lahf
xor
adc
mov
mov
pushf
sbb
push
fisubrs
mov
push
pusha
nop
rorl
lds
dec
sbb
push
ja
daa
shl
mov
jb
std
and
mov
or
pop
dec
push
cmp
aam
movsb
mov
repz
and
mov
push
in
sub
jl
and
out
fcmovb
inc
loop
mov
inc
pop
aas
and
mov
jmp
mov
and
andl
or
sbb
inc
lods
data16
fs
pop
in
sahf
dec
jmp
xor
mov
arpl
mov
and
popf
inc
push
ficoms
xor
or
adc
dec
pop
cs
push
pop
jl
or
sbb
push
popf
shlb
adc
int
mov
or
loopne
jg
mov
xor
clc
scas
or
subb
mov
xchg
cmp
ret
js
and
das
jle
pushf
sbbb
daa
sbb
jecxz
scas
cmc
pop
dec
sub
mov
rcll
inc
loop
push
adc
push
aad
ljmp
dec
cmp
jge
sahf
out
xchg
inc
lock
pop
ljmp
fldl
sahf
or
scas
icebp
jno
call
adc
add
fmulp
data16
push
clc
pop
xor
xchg
lret
dec
mov
movsb
mov
push
sahf
js,pn
int3
scas
mulb
adc
dec
popf
test
pushf
ds
data16
mov
or
in
or
sub
loopne
jae
shl
xchg
add
push
add
popf
cmp
setae
xor
dec
icebp
sahf
xchg
pop
jno
push
test
pushf
xor
jl
test
mov
pop
call
inc
push
inc
dec
xlat
imul
sbb
inc
imul
scas
sarb
pop
je
daa
pop
xchg
call
xchg
mov
add
sbb
into
bound
xchg
stc
sbb
notl
jmp
fwait
repz
xor
imul
or
xor
xchg
pop
xor
or
repnz
inc
jmp
pop
aam
lock
cwtl
popf
inc
xchg
les
in
es
inc
inc
aas
scas
cld
jg
stc
cli
add
or
pop
jg
shrb
adc
adc
sbb
push
dec
out
enter
lea
sub
cmp
cld
cld
jecxz
sbb
add
push
imul
mov
nop
popf
push
mov
or
xchg
and
cmc
movsb
mov
idivl
dec
mov
fisttpll
push
jl
popa
shl
xor
pop
cltd
xchg
inc
add
push
jle
cs
sub
add
lock
adc
rorb
or
jns
pop
adc
lds
shll
mov
imul
lret
into
cmc
dec
pushf
in
jnp
adc
mov
dec
cmc
or
test
dec
pop
mov
dec
rolb
rclb
mov
xchg
loopne
scas
pop
add
loope
mov
adc
andl
loopne
aad
andl
push
aas
pop
or
sub
or
out
mov
lret
add
dec
pusha
out
fwait
jl
and
movb
js
xchg
dec
mov
push
add
das
repz
ljmp
xchg
jbe
js
int3
sbb
jae
cmpsl
arpl
lock
popa
xor
pop
mov
popf
dec
mov
fwait
sbb
shl
pop
call
mov
push
insb
lds
repnz
xchg
sub
and
jno
and
mov
cmpsb
add
sbbb
jno
mov
jns
push
fimull
mov
aam
scas
test
adc
mov
shll
inc
aad
and
loopne
call
mul
repz
cltd
mov
es
xchg
lea
test
add
das
in
sbb
and
je
test
mov
fnsave
out
jl
mov
xor
cmp
pop
cs
test
out
repz
cmc
lock
add
add
fs
lods
dec
loope
dec
testb
fstpl
mov
push
lds
mov
adc
push
pusha
out
ret
fwait
sub
xlat
ret
ds
call
cmp
sahf
fstl
pop
push
xor
in
roll
dec
pusha
pop
fcmovne
pop
pop
sahf
ds
mov
call
xchg
out
testl
push
cmp
js
jl
rcrl
cli
pop
push
add
mov
push
mov
jno
push
xlat
data16
popa
jge
cmp
xchg
rclb
bound
sbb
test
das
cmp
xchg
xchg
shlb
mov
push
jo
xor
mov
dec
xlat
xor
cltd
push
andl
cmpl
mov
adc
int
inc
push
xchg
jb
push
add
or
pop
push
es
je
mov
cmpsb
movsb
outsl
scas
inc
add
popf
pop
popa
pop
rol
push
push
out
or
xor
arpl
mov
push
pop
stc
inc
into
repz
dec
outsb
lods
jb
daa
enter
nop
es
pop
mov
push
xorb
stos
repz
mov
inc
cmp
adc
lret
xchg
jae
shl
lcall
icebp
cmp
test
pusha
dec
xlat
stc
push
push
out
push
and
or
dec
lret
pop
jae
mov
xchg
into
mov
xchg
add
pop
int3
decl
dec
es
cmc
aaa
sub
aad
int
cltd
add
or
dec
out
xchg
push
dec
fs
mov
call
arpl
pop
orb
mov
jo
imul
xor
ja
mov
leave
pop
popf
lahf
outsl
adcl
lods
pop
mov
cmp
aaa
jne
loope
out
mov
xchg
lds
push
std
push
dec
test
loope
fs
test
or
loopne
xchg
cmpsb
xchg
add
push
les
inc
push
loopne
xor
sub
stc
ret
jnp
inc
add
dec
push
in
adc
in
fstl
lret
pop
inc
jl
sarb
or
pop
lret
mov
fstpl
ret
mov
sub
leave
lret
sbb
fadd
pop
cltd
or
sbbb
jecxz
fistps
pop
jnp
push
aam
sub
leave
hlt
xorb
insl
mov
out
jmp
xchg
mov
sarl
mov
adc
cmp
jb
cli
imul
add
inc
jmp
ret
ljmp
mov
das
lret
and
mov
jg
add
push
mov
adc
jo
and
xlat
notl
dec
adc
or
lret
push
ds
insb
arpl
into
dec
xorb
je
and
and
out
xlat
rcrb
incb
es
popf
into
movsb
sub
test
jp
fwait
pop
pop
push
lods
movsb
pop
add
fidivl
iret
adc
dec
cmp
add
jmp
pushf
out
push
lret
arpl
faddl
test
xlat
mov
dec
pop
add
outsl
jae
dec
mov
push
add
icebp
lahf
add
or
cmpsb
fcmovnb
add
mov
sub
in
mov
push
faddl
outsl
push
pop
mov
push
stos
int3
and
out
test
sbb
lret
fwait
adc
inc
hlt
pop
and
cmc
xchg
js
push
es
pop
sbb
cmp
out
dec
pusha
jge
push
xchg
sub
inc
mov
add
fwait
and
sbb
xchg
fwait
mov
lcallw
cltd
jns
roll
push
pop
popa
inc
sub
ss
std
testb
loopne
pop
cs
fsqrt
add
fbstp
ljmp
xlat
das
repnz
jmp
jne
xchg
sub
and
pop
daa
rcl
lret
pop
jmp
cmp
movl
stos
iret
push
fs
movd
repnz
aas
mov
iret
icebp
cmp
stc
xchg
jp
jmp
cld
mov
pop
cmp
call
cmpsl
lock
push
test
inc
mov
shld
daa
js
adc
push
roll
cmpsl
mov
pusha
sarl
sbb
mov
aad
xor
mull
jnp
iret
xchg
mov
lret
pop
ret
jmp
int3
outsb
cmpsb
add
insb
fcomps
pop
cli
mov
mov
sahf
xlat
outsb
out
outsb
sub
sbb
push
movsb
xor
mov
mov
loop
loopne
sbb
lds
inc
mov
adc
fcmovu
jb
xchg
adc
dec
and
lods
in
cmc
shlb
nop
movsb
push
cmp
xchg
mov
cmp
add
jg
sub
push
mov
xor
or
add
ss
es
dec
jmp
mov
in
lods
pop
pop
and
sti
dec
outsl
dec
sbb
clc
int
jp
push
icebp
pushf
add
cwtl
fldenv
int3
add
stos
or
jl
push
mov
and
daa
cmp
xchg
popa
stc
jbe
jno
sub
jb
orb
call
mov
sub
icebp
mov
add
push
lahf
fcoms
sahf
in
mov
pushaw
dec
outsl
addb
jle
mov
mov
inc
jns
pop
sub
mov
pop
or
rcl
bound
mov
dec
add
popf
adc
cli
nop
and
shrl
test
and
das
lods
andb
mov
adc
repz
dec
andl
mov
dec
es
mov
xchg
out
mov
mov
sbb
inc
push
cmp
fdivrl
jne
rorb
and
add
scas
movsb
daa
bound
pop
repnz
stos
mov
stos
repnz
add
mov
and
xchg
loopne
xchg
mov
fs
xor
or
mov
adc
jge
push
aaa
xor
mov
ljmp
subl
jecxz
xor
cld
xor
mov
or
mov
push
sti
cmp
sub
push
pop
mov
pop
xor
xchg
mov
test
int3
xchg
jae
cs
dec
int3
or
cwtl
mov
stos
and
dec
icebp
fidivrl
pop
fisubrl
and
mov
jecxz
aad
inc
pop
xchg
ficoml
or
pop
ljmp
mov
pop
sti
outsb
cwtl
mov
sub
mov
pop
ds
and
fcomps
add
and
xchg
dec
mov
jns
jnp
inc
cmpsb
fdivs
andl
fdivs
leave
arpl
test
sub
pop
scas
fwait
imul
clc
dec
mov
les
jecxz
test
sbb
cmp
insl
les
xor
pop
adc
scas
jne
jmp
daa
push
rorl
jmp
stos
bound
xchg
scas
jne
popf
arpl
pop
lret
and
xor
imul
xchg
pop
jecxz
stos
out
xlat
push
lea
push
fimuls
mov
shrb
and
frstor
adc
leave
push
inc
xchg
icebp
loope
mov
mov
and
fucomi
fidivrs
add
cltd
and
inc
jmp
es
xchg
jnp
movsb
in
das
mov
or
mov
add
dec
rclb
bound
ds
int3
out
dec
ftst
jbe
imul
dec
and
add
adc
xor
xor
sbb
sbb
adc
bnd
lock
int
daa
repz
scas
mov
push
adc
sbb
pop
pop
adc
mov
xchg
test
lods
sahf
pop
fisttpll
ret
add
push
adc
dec
pusha
loop
int
pop
aas
jp
pop
lahf
mov
loop
sbb
andl
sub
adc
jmp
cmp
sub
call
mov
ss
out
mov
xchg
divl
cmp
lahf
push
mov
shl
mov
ficompl
adc
mov
sbb
mov
aad
outsb
cs
dec
sub
jno
mov
mov
sub
ficompl
cmp
rorl
sub
test
inc
xchg
pushf
cmp
popf
mov
int3
dec
int3
and
sbb
jp
xor
sbb
cmpsb
lcall
in
popf
add
repz
jnp
inc
xlat
sub
lret
sbb
mov
mov
rcrl
adc
jg,pt
xchg
cmp
mov
cmpsl
mov
xchg
pop
sub
pop
push
outsl
pop
inc
push
sub
fisttps
mov
jno
aad
or
add
cltd
rcr
bound
mov
std
repnz
cld
xor
sbb
shll
shll
orl
sbb
cmp
dec
xor
outsl
mov
adc
mov
inc
adc
fdivs
leave
jmp
lahf
adc
inc
and
cmc
sub
out
in
ds
jnp
and
sbb
push
int3
inc
pop
xchg
sbb
lds
mov
mov
mov
in
sbb
jae
mov
dec
add
jne
lcall
test
lods
shlb
mov
pop
push
mov
cli
cltd
mov
outsl
addr16
or
movsl
repnz
push
xchg
cmp
bound
mov
pop
je
stc
arpl
rcpps
xchg
shlb
mov
test
add
dec
xchg
out
cwtl
iret
popf
cmp
push
and
addl
out
pop
push
jae
dec
lret
mov
cmpb
xchg
dec
shrb
insb
xchg
xor
lret
ja
mov
fdivp
cmpl
icebp
int3
mov
sbb
scas
sub
or
inc
insl
add
aam
stc
jno
mul
mov
dec
add
fwait
mov
testl
mov
add
mov
lcall
lret
orl
inc
mov
stos
imul
xchg
inc
adc
cmpsl
xor
aam
mov
sub
lahf
xor
jae
ja
mov
lock
push
les
adc
jmp
ficoml
mov
jp
inc
xor
push
mov
pushf
movsl
xchg
sbb
ja
call
adc
cpuid
cmp
cmc
adc
push
mov
ja
mov
insl
fisubrs
enter
out
adc
insl
scas
jmp
shrb
pop
pop
add
mov
xlat
dec
ficompl
or
popa
adc
fmull
fnstenv
test
mov
pop
xchg
in
sbb
nop
push
xchg
cmpsb
fcoml
and
lods
pop
das
pcmpeqd
jl
inc
mov
sbbb
push
adc
mov
pmaxsw
mov
mov
clc
sti
cmpsl
in
pop
addr16
add
push
cmp
bound
and
lahf
push
add
stc
shl
xchg
dec
add
xor
jmp
cmp
stos
fsts
push
dec
lahf
cs
sub
add
adc
cmp
xchg
mov
push
lahf
push
test
dec
and
add
aam
adc
movsb
pop
cwtl
shl
out
cmp
mov
das
pop
pop
xchg
jno
dec
push
push
out
daa
scas
out
inc
cwtl
call
dec
sahf
ja
jb
addr16
jo
push
inc
pop
scas
inc
jae
in
notl
add
popf
adc
rcll
pop
xchg
xchg
ds
xor
push
fisubrl
test
adc
ficompl
enter
mov
and
bound
testb
shrl
jno
popf
pop
sub
push
push
ret
mov
in
loop
loope
ljmp
test
mov
xchg
push
or
add
xchg
lea
imul
int3
xchg
int3
sub
mov
push
addr16
adc
add
inc
xchg
popa
nop
inc
rolb
addb
jne
xchg
push
sbb
scas
es
lcall
icebp
mov
leave
jmp
adcl
cwtl
jp
les
push
dec
in
ds
jno
push
push
jmp
nop
and
iret
cwtl
push
test
in
sahf
das
xchg
les
jp
mov
push
test
insl
loope
daa
lahf
add
sbb
rcrl
lds
add
jl
fisubl
adc
adc
jp
and
dec
add
xor
mov
cmp
in
jnp
popf
shrb
ljmp
add
sub
pop
insl
push
push
in
push
enter
pop
add
mov
jl
inc
in
pop
pop
pop
push
jo
aaa
mov
add
jo
insb
push
popf
adc
sub
jecxz
js
xchg
xchg
push
mov
mov
les
mov
addw
and
les
mov
dec
out
xor
mov
lret
mov
jae
mov
mov
mov
lahf
or
cmp
cmp
fs
mov
pop
and
and
pop
dec
adc
loopne
jp
or
cmp
stc
addl
and
add
nop
sub
mov
sti
cmp
nop
movsl
inc
mov
icebp
or
dec
mov
add
sbb
push
testb
out
cmpsb
ret
xchg
shrb
xor
and
jae
das
or
cmp
jbe
insb
lods
mov
or
fcomps
mov
dec
cmp
jbe
in
ret
mov
cmp
cmp
imul
lcall
mov
imul
sbb
push
mov
sahf
iret
sti
xor
loop
sub
xorl
jg
jne
cmpl
inc
sahf
icebp
stc
repz
push
mov
sbb
leave
add
xlat
cmpsl
push
sahf
inc
lret
lret
or
leave
into
fnstenv
popf
jo
fcmovb
jge
shll
dec
rclb
push
dec
pop
es
icebp
pop
mov
mov
fisttpll
fisubl
adc
push
out
in
add
lret
in
int3
lret
push
sbb
in
call
data16
imulb
inc
inc
rcrl
ret
pop
popa
mov
jecxz
mov
xor
shrl
jle
mull
adc
mov
cmpsb
fwait
push
pop
pop
frstor
jnp
int3
icebp
cwtl
push
in
pop
mov
mov
push
and
ffreep
jmp
jl
aaa
or
ja
repz
xchg
pop
imul
out
jecxz
xor
js
dec
hlt
xor
sub
mov
adc
pop
in
xchg
sti
dec
daa
fmulp
aam
je
xlat
inc
push
push
xchg
insb
fdivl
test
dec
xchg
mov
mov
les
push
fsubs
cmpsb
mov
cmpsl
test
mov
lods
push
mov
sahf
and
fwait
xor
int
outsl
mov
jbe
inc
loope
xchg
pop
push
fs
mov
push
cmpsb
xor
jb
cmp
mov
orb
push
push
mov
shlb
push
push
or
sub
mov
cmpsl
addr16
outsl
sbb
mov
stc
jns
jbe
adc
loope
subb
push
dec
in
inc
xchg
jcxz
dec
insl
xchg
sub
xchg
outsb
leave
xchg
sti
mov
add
lds
xchg
pop
xor
fldl
push
daa
mov
sahf
data16
ljmp
clc
out
cmpsb
or
insl
lret
adc
outsb
imul
sti
mov
xchg
or
xor
mov
stos
inc
ja
sub
mov
cmpl
inc
js
inc
adc
fnstsw
out
adc
sub
pop
or
add
cmp
xchg
sbbl
fisubrl
sbb
sahf
inc
test
mov
mov
xchg
xorb
mov
pop
sbbb
iret
dec
push
rcrl
sub
insb
mov
sub
xchg
xchg
gs
out
push
mov
jg
push
and
jae
xor
jne
sahf
jle
lahf
cmp
lahf
adc
jnp
jb
cmp
adc
or
imulb
fcoms
ds
push
pop
pop
jg
jl
and
out
jge
sub
mov
ret
lret
inc
bound
jecxz
and
ficomps
mov
or
push
test
add
mov
mov
shrl
sbb
daa
xor
and
xchg
hlt
dec
dec
xchg
add
test
jle
xchg
scas
loope
loopne,pt
mov
movsl
mov
adc
push
add
aaa
pop
mull
fdivs
test
mov
inc
fs
sub
lock
inc
sbb
pop
inc
mov
jmp
rcll
or
jnp
push
stos
xor
inc
arpl
mov
adc
sub
fnstenv
jge
adc
into
dec
jo
int3
shll
xchg
inc
xor
int3
test
movups
mov
pushf
imul
pop
and
mov
fadds
test
jno
aad
jne
rcrl
test
test
jp
or
sbb
jecxz
xor
xor
dec
pushf
cmpsb
sbb
or
pop
jns
adc
clc
jmp
stos
test
loopne
adc
xchg
shl
clc
fcmovbe
sahf
js
fsubrl
sbb
pop
jb
fwait
push
cmp
scas
sub
xorb
imul
mov
les
outsb
push
pusha
jne
pop
jnp
loopne
cmpsl
xorl
xchg
out
cmp
js
lahf
call
test
push
in
cmpsl
mov
jnp
cmp
sbb
cmpsb
mov
orl
fbld
fcomps
push
pop
cltd
mov
movsl
mov
clc
call
push
out
and
cmp
sahf
das
jnp
movsb
in
cmp
add
xlat
pop
leave
or
fstps
cmp
leave
or
dec
mov
mov
daa
sahf
pop
xchg
sub
out
popa
mov
in
or
js
push
mov
das
xor
adc
mov
in
jg
pop
cmp
sti
test
mov
sbb
cmp
add
aad
mov
or
les
jns
lds
fisttpl
xchg
inc
fs
dec
dec
test
out
add
or
xchg
jno
xor
mov
std
mov
shll
pushf
inc
int
sub
mov
mov
hlt
or
push
dec
ljmp
lea
adc
aaa
sub
xchg
cmp
and
popf
mov
mov
xchg
or
outsl
cli
in
pop
fs
mov
xchg
push
loope
aad
shll
sbb
in
pop
and
dec
push
pop
mov
sahf
jne
push
lock
inc
adc
pop
sub
stos
adc
ficompl
and
cmp
xor
stos
jno
fnsave
sub
mov
aad
iret
mov
mov
ret
mov
cmp
hlt
into
loop
jmp
stos
sbb
ljmp
cmp
insb
loopne
repz
and
mov
subl
xchg
xor
and
test
subl
xlat
dec
andb
sbbb
cmp
pusha
push
addl
sahf
leave
or
fwait
push
mov
fsubrs
in
add
inc
mov
dec
adc
mov
fsin
adc
push
or
xchg
ljmp
mov
mov
es
add
popf
fadds
fdivr
outsb
out
inc
out
ficomps
ja
mov
xchg
dec
pop
sbb
dec
jns
cmp
xchg
rcll
ja
outsb
mov
jle
vmovsd
jp
arpl
clc
jns
stc
testb
out
or
lock
add
sub
lret
popa
xchg
ss
inc
loope
push
jo
mov
mov
js
fs
dec
fs
push
stos
rcll
je
stc
mov
cmp
ljmp
popa
sbb
aad
test
sti
dec
lods
xor
pop
xor
insb
fs
push
dec
sbb
cmp
sub
gs
mov
arpl
cmpsl
sbb
and
xchg
imul
push
jnp
int
leave
mov
inc
add
not
ret
pop
add
push
sarl
je
push
imul
imul
pop
jo
xchg
bswap
push
cmpsl
jo
repz
orl
cmp
xor
pusha
aad
rorb
popf
hlt
mov
dec
cltd
add
xor
cmp
lods
clc
mov
dec
ja
insl
xor
ds
je
or
mov
sub
and
mov
mov
push
aas
stc
jnp
in
call
popf
sbb
enter
mov
shl
pop
loop
mov
xchg
popf
outsl
mov
ret
out
int3
sbb
push
and
inc
sub
test
dec
movsl
test
pop
lods
mov
cli
xchg
cmpsb
inc
nop
pop
mov
leave
inc
rorb
out
xchg
mov
lods
dec
imul
push
pop
addr16
jecxz
push
sub
loope
jge
mov
aas
es
mov
movsl
xchg
fwait
scas
add
push
push
or
pusha
pop
adc
xor
int3
aam
mov
jp
add
xor
jbe
fildll
xorl
outsb
in
lea
mov
hlt
dec
mov
movsb
sub
scas
cmpsl
jbe
xchg
xor
cmp
lods
lods
imul
rorl
pop
movsb
push
mov
jmp
mov
pusha
push
popa
aaa
hlt
or
mov
inc
dec
fisttpl
leave
fisubrs
mov
push
xchg
lret
in
subl
push
es
aam
in
ret
sahf
out
scas
fs
int3
xchg
pop
aaa
and
push
xor
lods
dec
sti
jmp
pop
mov
inc
mov
popa
push
mul
add
adc
jo
mov
dec
xchg
lcall
icebp
inc
xchg
pushw
bound
add
out
xor
sbb
inc
or
mov
mov
and
jge
ret
jae
add
arpl
rcrb
pushf
inc
dec
call
xlat
cmc
pusha
dec
mov
mov
stos
sahf
scas
add
inc
jg
jns
pushf
test
mov
xor
inc
xchg
xchg
jo
inc
mov
out
mov
cmp
aaa
xorl
filds
mov
ficoms
sbb
xchg
hlt
dec
fisubrl
add
js
in
pop
enter
adc
jb
ss
cmpl
repnz
ret
xor
mov
aad
clc
mov
popf
or
roll
cmp
scas
lret
iret
cmp
dec
mov
aad
dec
mov
cmp
mov
mov
and
adc
out
out
lods
push
adc
int3
cli
inc
lahf
or
stos
lahf
pop
ja
loopne
cmp
pop
inc
cmpsb
dec
jmp
xchg
stos
mov
and
jecxz
fwait
jge
popf
das
jne
xchg
sbb
or
mov
int
push
lea
lret
jg
jns
js
int
sbb
gs
adc
pusha
int3
fs
jmp
lret
sub
icebp
movsb
sub
mov
dec
xchg
mov
shl
lods
cmp
rcl
out
push
outsb
push
mov
sub
pop
and
push
xor
xor
jno
iret
jg
inc
sub
test
xor
imul
pop
int
shlb
or
jno
or
fucom
cltd
xor
inc
fsub
xchg
hlt
addr16
xchg
xchg
mov
int
cmp
sar
jl
mov
mov
mov
pop
mov
sub
cmc
jl
jp
int3
test
aas
jle
out
push
add
inc
hlt
repz
inc
jle
xor
leave
movsl
insl
test
push
into
out
or
pop
fwait
aad
add
mov
cmp
mov
jb
pop
test
cltd
call
cmp
adc
scas
xor
out
dec
mov
out
cmp
mov
pop
jg
fs
dec
xchg
subl
frstor
pop
pop
push
pop
or
into
cmp
scas
adc
xor
mov
mov
cwtl
xor
cs
fsts
jmp
fildll
mov
and
pop
pop
aad
movsb
sbb
push
pop
movsb
pop
mov
ret
lea
test
and
inc
sub
fidivrl
movsl
scas
pop
daa
aam
ljmp
lret
mov
je
pop
repnz
fcom
pop
sub
repnz
cmp
je
add
lcall
adc
adc
imul
inc
sarl
mov
dec
cmc
xlat
ds
xchg
outsb
pop
or
mov
push
lcall
cmp
stos
fldl
cld
fimull
repnz
xor
and
mov
shr
pushf
fcmovnbe
in
xor
or
or
cmpsl
cmp
xchg
flds
imul
dec
jae
ljmp
mov
adc
dec
mov
inc
fstpl
popa
dec
popa
cmp
add
push
mov
insb
clc
scas
jge
leave
xchg
and
cli
ret
inc
sbb
nop
mov
mov
push
push
mov
int
mov
push
jb
dec
lahf
subl
rolb
test
fwait
sub
add
sub
sahf
jg
push
call
pusha
add
lret
cmp
lock
sbb
into
jae
mov
xchg
pop
dec
movsb
es
sub
add
and
push
mov
pop
add
jae
push
test
mov
mov
sub
sub
cli
cmpsl
pop
pop
lock
jne
mov
fxch
jge
nop
lods
pop
xchg
sub
ret
in
outsl
and
fcomp
sbb
or
shrl
lret
fidivl
mov
mov
mov
push
imul
xchg
cltd
leave
movsl
sbb
inc
test
lret
inc
sar
lds
cmpsb
das
sub
shl
sub
add
inc
ret
push
dec
jle
xchg
lds
mov
push
int
xor
or
mov
cmp
xor
mov
cmp
pop
sbb
stos
rclb
xor
push
fisttps
int
xchg
mov
sbb
xor
hlt
cs
lods
pop
cmpsb
insb
ds
pop
mov
lret
insl
jle
test
or
dec
mov
push
jecxz
insl
push
sbb
add
jo
push
xor
int
cmp
rcll
loop
mov
lcall
movsl
xor
mov
mov
mov
daa
sbb
mov
dec
jle
outsb
and
jno
or
xchg
mov
pop
or
mov
and
inc
xlat
iret
inc
or
rolb
or
les
call
inc
inc
jmp
out
popf
pop
and
mov
mov
or
adc
xor
add
ficompl
cwtl
inc
mov
jns
fsts
int
push
mov
negb
loopne
insl
mov
ss
jle
fs
in
mov
ljmp
bound
pop
js
daa
inc
mov
mov
fsubs
bound
and
cltd
xchg
call
xchg
xchg
loop
int
hlt
int
mov
pop
loope
int
cmpsl
xchg
xor
inc
repz
cmp
in
rcr
orb
sbb
arpl
xchg
movsl
sbb
xor
jnp
sub
pop
std
sarl
inc
sub
popf
fsubrl
mov
mov
push
loopne
data16
aam
out
rolb
jmp
mov
xor
pop
or
mov
pop
ret
daa
subb
dec
jnp
mov
es
pop
adc
pop
shll
andb
popa
test
jb
adc
mov
cmpsl
into
xchg
pop
xor
xor
clc
push
bound
daa
xor
or
sub
mov
daa
fsubrs
in
lds
xchg
cli
adc
int
addr16
mov
mov
adc
fs
aas
orl
push
outsb
pop
adc
xchg
js
test
jnp
pop
mov
pop
leave
inc
jbe
out
push
inc
sub
test
pop
push
mov
xor
push
shrl
sbb
sbbb
jo
jmp
roll
pusha
popf
leave
icebp
ds
loop
dec
shll
fistpll
adc
dec
or
fs
fwait
pop
fwait
cmp
or
jp
sub
sub
cmp
mov
stos
ja
roll
cli
dec
mov
pop
mov
sub
out
scas
test
ret
add
add
outsl
dec
push
or
das
lea
push
stc
or
dec
ds
cld
out
xchg
orl
cmp
cmp
sarb
pop
sbb
iret
pop
sbb
jo
into
sbb
jg
jns
popf
aaa
orb
lock
xor
push
lea
mov
mov
test
andl
jp
aas
add
inc
jno
int
cmp
sub
cltd
test
sub
or
outsb
xchg
jecxz
inc
sub
cmc
cwtl
dec
push
fmul
outsb
or
movsb
subl
sub
fs
sbbb
imul
int3
xor
std
jns
jne
rorb
sbbb
pop
arpl
loop
push
pop
stc
cltd
lds
and
loope
pop
add
cwtl
xchg
xchg
nop
iret
inc
cs
adc
xor
jne
shll
sub
xchg
jecxz
popf
clc
loop
mov
mov
shufps
jnp
iret
cmc
mov
addr16
dec
xor
pop
sub
push
cmp
lret
in
or
int
fs
jns
loope
jbe
movsb
adc
push
cld
mov
sub
aam
add
adc
push
mov
jne
out
or
xchg
and
jp
pop
popf
bound
iret
cli
cltd
mov
jo
add
pushf
jl
dec
jns
les
ret
dec
dec
sub
subb
adc
xchg
push
push
shrb
cs
in
dec
cwtl
push
push
out
aad
sbb
mov
ret
mov
cmpsl
outsb
dec
pop
arpl
mov
repnz
pop
enter
in
cmc
fldenv
jae
fisttps
push
xlat
dec
test
pusha
pusha
sub
std
mov
int
dec
xor
daa
mov
pop
sar
mov
jne
je
push
fsubrs
rolb
nop
enter
lahf
repnz
loope
ret
les
outsl
sbbb
cltd
add
ficoms
incl
mov
cmp
fwait
rorb
aaa
into
jno
cmp
std
shl
mov
xchg
imul
ret
xchg
in
nop
xchg
sub
daa
dec
adc
xlat
push
loopne
mov
sti
add
push
out
and
inc
pop
and
enter
ret
xchg
dec
adc
adc
daa
and
jb
iret
xlat
lods
imul
mov
test
inc
inc
and
cmpsl
xchg
and
imul
popa
adcb
loopne
xchg
add
cmp
add
mov
cmp
es
subl
int3
sub
mov
in
sbb
xchg
sbb
out
add
push
out
stos
int3
js
daa
mov
call
xchg
test
cld
aaa
mov
repnz
push
sbb
inc
dec
add
and
je
dec
fwait
mov
nop
aad
popa
pop
and
cld
mov
inc
xchg
stc
mov
dec
or
daa
mov
push
dec
mov
or
push
lcall
addl
jp
jne
adc
ljmp
pop
adc
pushf
insb
inc
lahf
mov
fstpl
xchg
lret
sbb
aas
popf
and
jno
xor
lock
popf
rorl
and
lahf
jmp
sub
inc
jl
fs
cld
mov
sbb
sub
and
aaa
inc
mov
cwtl
je
cltd
call
lret
ds
ja
pop
add
mov
shrd
movsb
mov
call
lret
push
xchg
sbb
push
fs
adc
jb
push
int3
xchg
lret
ficoms
jae
leave
inc
inc
sub
add
xchg
cli
add
mov
xchg
inc
ja
pop
out
idivb
aas
jbe
adc
pop
fstpl
xchg
popa
xchg
mov
test
inc
in
mov
je
xchg
mov
out
sub
cmp
dec
add
ret
jmp
pushf
push
pop
arpl
pop
jecxz
cvttps2pi
decl
pop
clc
adc
push
mov
or
mov
cld
inc
cwtl
push
fstl
aaa
repz
popl
mov
push
pop
lret
mov
sbb
in
addr16
mov
push
sbb
jp
xor
and
jo
popf
sub
jo
sub
xchg
sbb
sbb
mov
pusha
jo
pop
inc
or
call
out
ret
es
mov
cmp
push
mov
scas
outsb
pop
andl
loop
out
xchg
push
outsb
popf
adc
sti
xor
scas
cmp
push
ja
adc
sbb
mov
mov
pop
push
push
add
xchg
stc
test
sbb
popa
out
jne
test
icebp
lods
cwtl
fsubs
popa
gs
cmc
pop
jl
mov
ret
push
pop
ret
das
or
xlat
mov
xor
mov
adc
mov
mov
xchg
cld
xorb
cltd
and
sub
hlt
add
orb
loope
sub
add
and
inc
jno
xchg
loopne
aas
add
mov
je
sarb
sub
cmpsl
sahf
xchg
js
je
paddsb
pop
cmpsb
fmulp
mov
xchg
mov
mov
and
jb
dec
ljmp
jg
inc
bound
in
into
lock
sub
ds
or
aad
mov
cwtl
push
dec
mov
paddusw
push
jmp
push
lds
xor
jnp
subb
imul
and
aas
loope
mov
aam
ficoms
in
dec
mov
add
cmp
les
xor
adc
mov
mov
iret
loop
mov
inc
or
dec
shrb
or
dec
cltd
test
pop
adc
mov
test
jne
xchg
rcll
adc
xchg
loope
push
iret
into
lret
outsl
pop
and
ficoms
loopne
andl
jb
dec
aad
push
test
into
dec
testb
xor
xor
int3
mov
mov
gs
bound
mov
and
mov
add
dec
mov
call
div
jg
dec
dec
gs
cli
int3
dec
scas
push
jne
xor
and
sarb
jno
dec
imul
shrb
pop
add
mov
out
lahf
push
insl
mov
into
cmp
sub
lahf
lea
xor
in
fs
pop
test
cwtl
add
arpl
xchg
xlat
xchg
data16
jp
mov
test
jns
nop
dec
xor
sbb
xchg
repnz
in
scas
xor
mov
and
aam
hlt
cmpsl
subl
jne
pop
loope
mov
stos
sbbb
and
jp
pop
sbb
or
rcrb
data16
dec
int3
movsb
pop
cmc
mov
push
xor
jge
repz
call
in
fwait
scas
cmpsb
lret
push
sahf
mov
xchg
test
mov
ljmp
sbb
xor
sbb
sub
in
hlt
jmp
into
pop
dec
mov
loope
dec
nop
int
mov
fcomps
cmp
jns
arpl
iret
cmpsb
sbb
lds
aaa
js
xchg
test
inc
int3
pusha
sbb
andb
in
mov
dec
sbb
arpl
push
mov
loopne
pop
sbb
cmp
ret
sbb
sub
push
inc
jae
sbb
scas
jecxz
pop
test
mov
sub
adc
cmpsb
imul
sub
push
sbb
cld
adc
loop
and
data16
push
jge
xchg
pop
mov
jo
dec
push
test
sbb
dec
lcall
xchg
xchg
lret
bound
movsl
aam
or
mov
sbb
out
mov
jg
loop
shrl
jne
test
mov
push
pop
shr
sub
jb
mov
xchg
loopne
push
pop
mov
aad
rcrb
ret
idiv
and
sub
scas
and
fstpl
mov
add
pop
inc
aam
add
add
mov
mov
push
xor
xor
inc
adc
ss
cmc
or
push
cmp
andb
cmp
std
int
imul
push
inc
je
pop
adc
sbb
cmp
xor
nop
or
mov
insl
mov
cwtl
lahf
fistpll
adc
leave
or
jle
mov
test
fwait
or
fistl
mov
ljmp
add
xor
xor
inc
add
sbb
and
add
popf
mov
sub
push
jae
add
les
lea
js
sub
jl
dec
popa
scas
shrb
push
xacquire
fnsave
cs
out
push
jle
stos
xchg
sub
inc
ja
lret
dec
test
xchg
inc
lret
xor
mov
xchg
push
andl
xchg
sub
stc
mov
push
add
into
push
jle
in
mov
cmp
insb
inc
sbb
xor
mov
sub
dec
cmp
cwtl
push
loopne
imul
inc
ljmp
aam
insb
in
sbb
sub
pop
dec
pop
add
ret
inc
or
add
cmp
movsb
out
cmp
jl
mov
fisubrl
int
inc
in
and
fidivs
mov
sub
mov
inc
test
into
arpl
gs
dec
mov
pushf
inc
pop
sub
ljmp
mov
sbb
les
iret
inc
mul
popa
outsl
sbb
pusha
orl
or
aas
outsl
mov
adc
push
call
pop
out
and
fwait
and
xchg
mov
mov
jo
jns
das
jmp
push
add
xchg
int3
cmp
loope
push
sub
movsb
cmp
or
mov
out
in
into
popa
mov
flds
cwtl
and
lds
push
dec
lods
mov
add
cmp
mov
inc
repnz
stc
xchg
pop
jp
psrld
pop
or
outsb
sahf
jo
repz
mov
pop
popa
pusha
or
sub
test
lods
and
sbb
rorb
repnz
ljmp
scas
jnp
jo
loopne
aas
push
pushf
dec
xlat
push
push
xchg
inc
out
inc
cmc
and
cmpsb
test
jb
jmp
add
ret
lods
adc
push
mov
sub
ret
mov
mov
push
pop
icebp
cmpsb
or
ret
sub
fbstp
loopne
insl
aaa
js
mov
lock
xchg
lods
in
mov
sti
add
mov
lea
es
pop
pextrw
push
xor
mov
cmp
mov
sbb
lock
dec
addr16
pusha
je
inc
cltd
pop
or
and
aaa
inc
punpcklwd
dec
adc
incl
fstpl
adc
and
cmpsb
movd
sbb
mov
mov
jb
adc
sub
mov
push
arpl
iret
adc
adc
aas
outsl
lret
aas
and
jmp
sbb
sub
cli
ja
mov
xrelease
daa
lret
jnp
movzbl
mov
sahf
cltd
movsl
call
push
fidivrs
push
mov
lcall
xor
int
into
dec
push
jbe
rclb
mov
mov
imul
add
js
jg
scas
pop
lahf
sbbb
mov
xchg
mov
mov
roll
scas
jl
test
pop
add
out
enter
jno
add
dec
sbb
sbb
cmp
cltd
lods
mov
jbe
aas
test
jne
dec
rol
std
cmpsl
in
adc
mov
and
xor
adc
dec
sbb
xchg
inc
and
out
flds
rcrl
mov
mov
jge
cld
jnp
out
gs
adc
xlat
sbb
repz
or
sbb
fisttps
push
fnstenv
cltd
mov
push
dec
lock
test
push
add
mov
push
inc
stos
mov
int
mov
xchg
int
test
lods
push
pop
adc
or
je
jge
stos
xor
sbb
rcll
xchg
leave
fistpll
xor
adc
pusha
roll
clc
jge
sbb
sbb
mov
cli
inc
and
int
sbb
fldl
cli
jno
jae
push
aas
inc
out
lods
je
cli
int
xchg
das
xor
and
and
aas
and
fsubl
lods
nop
cmpsb
mov
mov
aad
dec
pop
sub
jge
sub
frstor
xor
popf
sahf
mov
iret
push
add
cwtl
mov
sub
pop
push
pop
cmp
fcmovne
addr16
gs
mov
pop
or
cmp
mov
xchg
sbb
inc
xorb
loop
ret
ret
movsl
loope
popa
xchg
jle
int3
mov
ss
imull
pop
test
sahf
mov
rcrl
fistps
mov
pop
sbb
lods
scas
fsubr
aaa
mov
add
std
mov
jmp
xchg
mov
dec
arpl
daa
bound
xchg
repnz
mov
mov
fcompl
xorl
lahf
jne
mov
pop
xor
hlt
xchg
in
ja
pop
add
cmp
push
jg
out
mov
mov
lcall
xor
jbe
or
add
push
sbb
push
adc
xchg
or
outsb
fstl
sub
cmp
inc
int
mov
add
sub
sbb
and
pop
sbb
mov
jg
mov
jecxz
xlat
add
fadd
mov
dec
sar
fcmovbe
xchg
add
adc
ror
pop
add
adc
ret
sub
xchg
addr16
or
mov
push
fsub
pop
outsb
mov
jg
js
inc
push
jp
cmp
clc
popa
lahf
sub
nop
xor
cmpsb
xchg
xor
std
shlb
iret
in
jmp
push
mov
pusha
rorl
imul
or
rolb
or
sbb
in
xlat
adc
jp
lret
data16
int3
or
mov
add
aam
nop
jo
aas
mov
xor
xchg
lret
je
push
inc
cmp
clc
filds
lret
fisubrs
and
jle
notl
push
xor
inc
mov
adc
ljmp
mov
lahf
sbb
push
aam
or
dec
mov
jl
sub
or
subb
lea
pusha
jae
xlat
shrl
adc
cmp
wrmsr
xchg
jg
ret
scas
mov
add
ficoml
sub
loope
push
sub
lds
stc
roll
in
arpl
and
sub
pop
push
jmp
inc
add
mov
lahf
mov
dec
jp
das
mov
xor
inc
push
adc
sub
xor
lods
lock
dec
cmp
xor
jb
pop
pop
mov
push
cmpl
xchg
sti
test
iret
mov
bound
push
dec
add
stos
mov
jp
jp
or
xor
mov
daa
gs
mov
gs
jno
or
aas
sarb
adc
pop
cmp
dec
in
adc
jne
add
out
cli
adc
sub
rcrl
inc
rclb
mov
and
dec
movsl
aam
enter
lahf
adc
repz
mov
cli
xchg
cmp
loope
and
dec
ss
adc
dec
lahf
es
call
fldl
pop
xor
js
rcl
scas
mov
je
mov
outsl
inc
mov
imull
pop
ret
pusha
lods
ds
or
sbb
dec
jle
sub
or
jle
lods
in
outsb
out
mov
xchg
cmp
mov
jns
leave
cmpsl
push
fdivl
xchg
xchg
cmp
dec
mov
mov
inc
ret
jnp
inc
loopne
fadds
mov
pop
pop
inc
inc
push
stos
fsubp
cmp
or
aas
fistpl
mov
mov
insl
cmpsl
int
js
mov
mov
cbtw
dec
insb
jg
lods
jl
insb
pop
cld
enter
lret
leave
xchg
mov
inc
and
popf
frstor
pusha
clc
shlb
loop
mov
mov
imul
addr16
js
pop
les
dec
es
mov
jne
push
push
popf
xchg
popa
push
sub
adc
je
dec
push
fucomi
push
push
insl
fsubl
mov
mov
or
into
test
cli
mov
shlb
testl
inc
imull
inc
pushf
dec
add
data16
jge
lods
out
aaa
fildll
jae
jno
sbb
jne
jne
mov
call
movsl
sti
jmp
std
jae
push
sahf
dec
outsl
mov
jne
pop
rcr
clc
add
loope
mull
jg
sarb
clc
andl
cld
fcmovnb
cmp
lds
dec
fisttps
xor
sub
adc
gs
outsl
movl
add
pop
mov
jno
push
dec
mov
inc
jae
repnz
mov
cwtl
scas
mov
imul
test
out
jae
fs
pop
jge
mov
shlb
xchg
cld
xchg
stos
std
in
cmp
inc
jl
push
or
pop
aad
push
cli
ljmp
jns
gs
cmp
xchg
cs
pop
ror
lds
mov
fimuls
dec
pop
cmp
pushl
xchg
xor
add
jne
mov
or
add
dec
adc
jp
shrb
sub
ret
cmp
outsb
sti
cmp
mov
sub
cwtl
dec
cmpsb
xor
push
mov
pop
pop
cmp
pop
add
push
scas
testl
aad
lock
out
xor
sbb
push
lea
js
in
pop
cmc
arpl
cltd
je
stos
out
sti
or
push
mov
inc
movsl
mov
xor
fmul
cmp
cmp
jae
loope
and
pop
sub
lds
mov
test
mov
mov
jmp
pop
mov
mov
stc
cmpsl
outsb
jo
imull
mov
sub
iret
and
mulb
xor
jecxz
jg
shrl
cltd
daa
push
adc
add
add
das
sbb
mov
daa
sub
ja
int
das
adc
adc
in
xor
ror
sbb
out
mov
cmp
xor
jnp
dec
mov
flds
inc
or
sub
and
add
stos
loop
cmpsl
pushf
xchg
mov
and
jns
mov
pop
cmp
inc
mov
pusha
cmp
movsl
or
int
andl
out
xchg
lea
mov
jo
mov
loop
mov
popa
add
mov
repz
xchg
cmp
imul
lods
imul
insb
add
inc
sbb
mov
xchg
xchg
push
es
mul
nop
jl
jl
pop
stc
sti
pusha
jnp
xchg
jns
lret
aas
push
movsb
push
xlat
mov
int
rorb
push
in
fidivrs
push
dec
jg
sbb
hlt
sti
xchg
imul
dec
mov
sub
inc
dec
jecxz
shll
ror
adc
rolb
pop
dec
pop
cmpsb
xchg
enter
lsl
mov
mov
mov
cmp
test
inc
sti
cmc
loope
mov
jg
and
dec
movsl
aaa
push
cmc
jo
sbb
cmp
xchg
lret
jg
inc
lock
inc
icebp
jne
es
mov
xchg
fdivs
xor
jae
inc
pusha
pop
pop
jbe
sar
mov
inc
and
dec
shrb
mov
inc
not
lea
cmp
push
test
lock
das
int3
fwait
sub
cmp
dec
xlat
push
gs
mov
andb
sahf
lea
addr16
lods
in
xchg
and
in
fdivl
add
jne
pop
fstpt
popa
sbb
adc
repnz
cmpsl
adc
adc
imul
adc
ficoml
jns
sarl
mov
dec
daa
in
pusha
fcoml
sbb
mov
push
mov
push
cmp
add
movsl
dec
push
movsl
or
inc
iret
pop
test
adc
shlb
lcall
inc
cmp
dec
imul
out
fsubs
and
jae
jecxz
enter
jbe
aas
idiv
icebp
add
inc
in
test
lahf
add
ljmp
movsl
sbb
lods
loope
jmp
pusha
pop
add
cmpsl
arpl
sarl
movsl
loop
pusha
sbb
sub
leave
add
dec
or
jae
mov
out
popa
ljmp
xor
jnp
jbe
push
int
fiaddl
fcomps
pop
and
sub
push
ret
stos
sbb
cmp
inc
jne
cmp
mov
or
stc
mov
lods
mov
sti
ss
scas
subl
sbb
fs
or
jecxz
sbb
mov
xchg
mov
pusha
cli
mov
aad
mov
xor
loopne
or
jl
push
ja
outsl
xchg
movsb
sub
mov
push
pop
push
inc
rcll
fs
mov
sbb
test
mov
mov
test
test
mov
xchg
adcl
xlat
std
or
ret
rorb
pop
sub
into
mov
xchg
rorb
ljmp
insb
dec
or
sbbb
cmpb
cmpsl
les
das
in
and
mov
aaa
xor
push
hlt
cmp
pop
test
jle
lret
clc
jno
push
push
mov
in
pusha
cld
mov
sbb
sub
mov
or
es
dec
jns
insl
inc
xchg
add
adc
push
out
add
fimuls
popa
inc
and
dec
fwait
sbb
notl
fstl
fcomps
std
sub
xor
or
xchg
mov
dec
pop
test
add
pop
int
mov
dec
mov
je
pop
mov
mov
xchg
mov
test
repnz
into
sahf
jmp
jge
inc
mov
or
jge
sub
popf
mov
cld
pop
icebp
out
incl
insl
jnp
in
and
stc
cmp
inc
sub
mov
nop
dec
decb
mov
mov
ret
dec
test
aas
push
sbb
cwtl
insl
jb
xlat
test
popf
test
cmpsl
loop
outsl
sbb
stos
push
or
push
orb
mov
stos
mov
nop
xor
imul
sub
or
in
push
or
mov
add
sub
pop
dec
mov
mov
scas
in
call
dec
call
mov
pushf
gs
xor
dec
pop
bound
and
xchg
icebp
movsl
mov
clc
cmp
arpl
dec
stos
addr16
das
divl
sub
imul
pop
pop
mov
lock
push
icebp
inc
popf
out
sbb
pop
xchg
jnp
cld
lea
outsb
cmp
shl
jmp
out
pop
lret
and
insb
add
sub
lcall
mov
andl
add
enter
jne
push
xrelease
sub
mov
in
mov
imul
pop
cmp
cmp
fisttpl
push
xchg
jecxz
push
hlt
adc
hlt
pop
shrb
dec
int3
cmpsl
hlt
idivb
adc
in
test
inc
aaa
adc
insb
sub
and
out
lahf
stc
cmp
incb
add
mov
nop
or
int3
lcall
stos
cmpsl
rcll
ds
add
es
sub
inc
in
lret
push
in
nop
mov
jge
and
add
ds
sub
iret
add
xor
lret
dec
pop
cmpsb
pop
cmp
ja
stc
jmp
shll
push
hlt
cmp
sbb
lahf
outsb
ljmp
mov
push
add
jb
jg
sti
add
cmp
mov
jecxz,pt
pop
push
pop
add
mov
addr16
adc
mov
stos
clc
andl
fnstcw
mov
dec
testb
scas
mov
sub
mov
cmp
mov
into
aad
mov
pop
push
shl
or
xchg
aam
mov
push
das
stos
sub
sahf
clc
xor
pop
movsb
mov
cmpsb
mov
popf
addr16
ss
mov
in
mov
mov
push
es
das
shll
cmpsl
cmp
xor
push
outsl
mov
and
xchg
nop
sbb
pop
push
xchg
mov
dec
mov
lea
mov
add
scas
gs
cwtl
mov
push
imul
jmp
pop
lret
icebp
xchg
nop
imul
popf
jns
push
in
add
jp
pop
movsb
mov
mov
cli
sub
sub
aas
cmpsb
jmp
std
in
out
adc
cmpsl
mov
mov
cmp
popa
add
ss
lret
mov
ret
stos
jmp
lahf
mov
lret
sbb
sbb
int3
shrl
or
pop
aas
adc
xchg
sahf
sbb
ljmp
mov
es
outsl
fdivrl
sbb
stos
inc
pop
orb
sbb
xchg
mov
and
adc
pop
and
sbb
xor
xor
jecxz
mov
negl
mov
jmp
dec
xorl
or
lods
or
in
jnp
fdivr
mov
sbb
jmp
lea
mov
in
scas
incb
mov
add
and
fidivrs
divl
jecxz
das
jno
mov
std
push
mov
mov
cwtl
xchg
lods
mov
hlt
jae
cmp
fs
jo
jge
xlat
das
cmpsb
xchg
xor
add
sbbb
mov
loope
inc
jae
jns
fiadds
fwait
scas
and
idivl
add
in
dec
xchg
push
fdivrs
stos
add
dec
sahf
imul
sahf
jg
insb
cwtl
leave
cmp
aas
fs
lret
mov
pop
or
pop
das
adc
pop
cld
cmp
dec
adc
cmp
lret
and
loopne
xchg
mov
fs
inc
xor
xchg
and
mul
push
outsb
xlat
stos
arpl
or
xchg
or
mov
dec
in
pusha
std
add
movsb
mov
test
add
divl
sub
aad
push
xlat
fxch
fwait
dec
shll
mov
add
fsubs
push
les
int3
add
cld
mov
and
xchg
pop
mov
in
shll
push
je
cltd
std
leave
insl
add
inc
lods
push
dec
dec
cmp
das
sahf
push
jge
pop
jp
je
arpl
rorl
mov
adc
sbb
pop
dec
jo
push
stos
fistpll
mov
jg
mov
pop
cmp
dec
add
sub
pop
aaa
mov
mov
fcos
mov
jp
pop
testl
jo
dec
add
push
int3
mov
jnp
adc
push
leave
out
jo
push
enter
inc
sbb
dec
add
or
call
ret
cmp
pop
pop
fs
push
nop
mov
add
jecxz
mov
in
mov
jl
leave
sbb
mov
mov
mulb
shl
fwait
dec
stc
shll
ret
les
ret
idivb
stos
imul
dec
int
xchg
lods
pop
mov
pop
add
push
pop
mov
rcrb
xor
add
dec
into
lahf
push
xlat
cmp
inc
fsubrl
xchg
pop
lods
ss
push
fcomps
xchg
les
daa
mov
jle
or
add
in
pop
adc
inc
jb
lcall
aaa
fisttpll
jnp
js
in
add
stc
adc
mov
sub
add
xchg
mov
es
fwait
incl
add
inc
jne
outsl
cmp
pushf
scas
enter
ss
fs
or
adc
cwtl
das
loope
lahf
outsl
int3
inc
mov
cmp
rorl
mov
jecxz
fdivrs
test
and
cmp
or
lret
jmp
jp
and
test
jae
imul
jns,pn
push
in
sub
lods
outsl
cs
inc
ror
rol
or
cmp
fcoms
mov
repnz
sub
push
fdivr
adc
mov
push
jle
dec
fs
xchg
mov
and
pop
xlat
out
sub
insl
add
lahf
pushf
cmp
fsubs
lahf
and
sti
push
ss
jl
scas
dec
inc
jecxz
mov
shrb
sti
add
test
testl
nop
rclb
xchg
lret
xchg
pop
mov
add
mov
sbb
shrb
pushf
lret
dec
mov
mov
sub
push
pop
inc
call
mov
or
sub
dec
xchg
jge
sub
aam
sbb
ret
push
andb
adc
jge
mov
dec
push
xchg
test
loope
inc
mov
jl
jmp
outsl
xor
mov
push
fs
cld
or
and
insl
xor
dec
jns
stos
insb
push
xchg
arpl
imul
add
xor
bound
sub
mov
js
pop
insb
fldcw
das
cmp
inc
rolb
int3
cmovb
fmuls
test
es
sub
add
dec
pop
sbb
cmp
fdivrl
inc
std
inc
rcrl
pop
outsl
ljmp
push
push
xor
loop
mov
mov
aaa
mul
lret
mov
pop
shlb
mov
mov
push
bound
out
inc
js
sarl
fadds
imul
mov
inc
xchg
sbb
xchg
imul
push
out
jl
dec
pushf
pusha
push
mov
stc
push
push
xor
and
xchg
shrl
mov
cmpb
sbb
jbe
mov
dec
movsl
adc
call
jne
lret
xor
mov
add
outsb
mov
dec
push
xchg
and
lret
mov
xchg
and
flds
shll
ds
cmp
xchg
cld
lods
test
inc
aas
fwait
scas
add
stos
lds
mov
fimuls
call
test
movaps
lahf
lcall
jecxz
cwtl
pop
mov
jo
add
pushf
push
fadds
dec
mov
jno
je
insb
push
sahf
aaa
xor
mov
test
inc
inc
out
xor
pop
adc
mov
ljmp
sbb
sub
cmp
stc
out
add
dec
or
xor
into
dec
and
mov
test
and
push
or
xchg
inc
mov
sbb
adc
gs
cmp
out
xorb
cs
loope
sbb
sbb
jg
add
lahf
fldenv
or
and
cwtl
xchg
mov
sub
int
push
icebp
jnp
xchg
insl
add
test
cmc
add
ds
and
icebp
sbb
xchg
pop
pop
aaa
popa
sub
outsl
stos
out
adc
addr16
enter
adc
pop
push
lods
dec
daa
or
fcoms
sbb
sbb
inc
lods
fcmovnu
jnp
mov
pop
push
or
jmp
push
pop
push
push
xor
scas
insl
mov
fdiv
xchg
cs
mov
adc
mov
and
sti
and
jnp
cs
mov
iret
fnstenv
lret
aaa
jmp
inc
loope
sti
pop
popf
dec
jg
add
inc
add
ss
sub
adc
or
dec
mov
int
repz
filds
mov
sbb
lods
xchg
inc
jnp
mov
mov
or
jg
inc
sub
or
sbb
mov
ss
test
pop
xchg
loope
dec
lret
pop
mov
fisubs
push
dec
sbb
xchg
sbb
lods
jecxz
xchg
mov
xor
outsl
pop
sub
loope
mull
lods
add
leave
aam
xor
xor
and
ja
loop
roll
mov
rcrb
outsl
pop
scas
repnz
shrl
push
std
scas
pushf
mov
dec
jmp
or
and
popf
or
cmp
xchg
negl
mov
shll
cmp
iret
stos
fstpt
pop
cld
mov
jne
shlb
in
out
in
push
cmp
xor
aam
jns
mov
xchg
inc
dec
aaa
fwait
jmp
adc
mov
rolb
adc
addl
push
ficoml
xchg
fucomi
xor
xlat
jle
xchg
jmp
fists
inc
dec
cwtl
into
mov
dec
mov
insb
or
sub
adc
cltd
xlat
xor
into
jns
mov
test
cwtl
test
popf
std
sbb
cmp
clc
sbb
mov
rcrb
loopne
mov
pop
push
in
sub
lods
xchg
sbb
outsl
jmp
mov
mov
das
lods
ja
lret
pop
test
jo
xchg
dec
out
push
and
sub
inc
xlat
out
enter
mov
subb
sahf
mov
je
xor
add
dec
inc
repnz
sub
cltd
sub
mov
mov
cltd
jns
lret
repz
jle
mov
push
pop
pop
pop
sbb
dec
ja
pop
pusha
add
jae
or
pop
mov
adc
mov
ret
out
mulb
xchg
fldenv
pop
mov
insl
enter
int
push
sbb
sub
inc
insl
xchg
cmp
int3
cmp
add
mov
mov
clc
fwait
addr16
fwait
inc
imul
imul
and
fmull
mov
dec
xchg
rorl
inc
and
call
in
xchg
out
ljmp
pusha
jnp
pop
xchg
xor
xchg
mov
pop
insl
adc
inc
xchg
addr16
adc
ja
cli
jmp
cltd
push
pusha
xchg
rcrl
jae,pn
or
mov
ds
inc
xor
arpl
addl
mov
add
cli
inc
fistpll
pop
dec
test
push
data16
jne
dec
out
mov
flds
test
mov
cmp
loope
cmp
xlat
push
sub
push
ljmp
call
mov
fdiv
insb
hlt
sbb
push
test
sti
lea
inc
xchg
jne
or
das
stc
mov
cmp
ret
mov
adc
loop,pt
pop
repz
cwtl
fiadds
addr16
inc
or
jae
xlat
xor
push
xchg
mov
dec
or
lock
pop
jo
adc
fcomps
sbb
hlt
adc
daa
aas
fnstenv
ljmp
xchg
inc
cmp
insb
sbb
jns
jge
mov
divb
xchg
add
mov
data16
outsb
or
int3
adc
xchg
out
iret
fistps
in
loopne
cs
pop
adcl
test
inc
cmp
loope
lods
int3
push
add
inc
jbe
mov
dec
bound
inc
in
fadds
inc
std
inc
cmp
pop
test
push
mov
into
lods
call
push
push
push
sbb
mov
lea
loope
add
mov
xchg
pushf
in
shr
pop
mov
addr16
pop
jecxz
pop
dec
lahf
imull
add
cmp
jne
loopne
movsb
cmp
cs
inc
test
sub
add
mov
bound
cmp
ds
push
in
orl
icebp
adc
xor
fwait
inc
push
push
inc
and
fldl
pushf
lods
add
ss
mov
or
cld
jg
xor
cmp
jmp
mov
out
cmc
jecxz
ds
xor
pop
fbstp
pop
sti
test
pop
xchg
xchg
ds
fdivs
lock
lret
nop
xchg
adc
sbb
stc
xlat
mov
test
pop
ljmp
shrb
mov
sub
leave
lahf
pop
addr16
cmp
test
xchg
test
scas
or
cs
push
and
loop
lock
int3
ficompl
fidivrs
test
ds
in
stos
cmp
mov
aam
push
std
sub
dec
lds
mov
push
repz
sub
sti
sub
je
push
ljmp
mov
jge
inc
incb
mov
and
insl
xchg
adc
inc
mov
sbb
jae
aad
inc
test
add
ja
lea
pop
test
xchg
loop
xlat
jp
scas
insb
push
dec
jno
sub
xchg
rolb
fidivrs
aam
ss
sbb
push
aad
mov
test
addb
and
pusha
les
into
sahf
push
xchg
pop
mov
lcall
add
in
shlb
mov
pop
sub
add
hlt
jg
lret
mov
stos
jmp
mov
cmpsb
sub
add
repnz
and
stos
lret
dec
dec
sbb
jmp
and
sub
or
xlat
mov
add
testl
lcall
or
mov
push
je
jbe
test
test
sbb
push
ja
js
mov
js
jmp
sub
fnstenv
shlb
cmp
mov
pop
jb
add
push
pushf
mov
arpl
test
xlat
jp
adc
shl
pop
aas
cltd
nop
mov
test
mov
pop
cmp
aas
mov
insb
pop
cmp
test
mov
adc
pop
xchg
into
mov
cmpsb
out
jne
lods
enter
mov
dec
sahf
xor
pop
pop
lods
sbb
cmp
xchg
jecxz
cs
sbb
sub
popf
lock
testb
adc
sub
push
iret
call
inc
rcrb
ret
enter
inc
or
stos
rol
adc
in
xorl
int3
fdivp
or
scas
jl
test
lret
repnz
and
lock
and
adc
and
cltd
inc
testl
lods
je
lcall
shl
pop
js
incb
mov
fstpl
test
fiadds
add
cmp
aas
outsl
jne
scas
sti
ret
ds
lods
mov
repz
out
lret
mov
push
dec
loop
pop
cld
scas
and
mov
adc
faddl
jg
push
adcl
sub
inc
jg
dec
shll
mov
rorl
mov
imul
sbb
mov
mov
stos
stos
pop
outsb
adc
jno
xchg
jl
cwtl
inc
push
fdivr
mov
call
idiv
pop
sbb
add
cltd
pushw
mov
icebp
cmp
mov
test
popf
in
enter
xchg
fmulp
adc
in
fildl
aaa
add
fdivl
adc
pusha
cs
pop
push
jo
pop
cs
stos
jge
addr16
pop
movl
outsl
jae
add
or
push
iret
cmpsl
cld
sbb
aam
fsubrl
mov
jecxz
mov
loopne
sahf
mov
pop
xchg
adc
enter
adc
ret
call
rcrl
clc
push
fistpll
data16
fs
test
dec
sbbb
lock
lds
add
shlb
pushf
mov
test
ja
imul
jb
pop
xchg
lods
cmp
or
insb
fwait
mov
arpl
shr
outsl
cmp
mov
inc
jns
mov
mov
cs
xor
push
aas
xor
aaa
xchg
xor
push
test
je
lret
pop
mov
jge
push
outsb
pop
loope
fistps
mov
pop
fsub
nop
jo
sbb
enter
ffreep
in
dec
adc
and
push
xor
jge
jo
sub
adc
int
adc
outsl
call
cld
cmp
es
mov
outsb
sbb
push
daa
dec
movsb
pop
call
xchg
mov
dec
gs
and
sbb
repz
mov
push
aam
and
xor
add
xchg
dec
mov
test
paddb
xor
xchg
call
add
fadd
ret
xor
push
xorl
data16
mov
mov
jle
push
push
insb
xlat
adc
cltd
mov
dec
cs
xchg
jecxz,pn
aaa
mov
mov
or
xor
add
mov
add
cmpsl
jmp
cmp
dec
nop
pushf
mov
addl
push
fwait
inc
mov
repz
inc
fildl
frstor
aam
adc
stos
das
sbb
out
or
adc
ret
loope
mov
dec
or
adcb
les
jne
jae
fidivrs
notl
dec
nop
or
insb
scas
jp
jno
popf
test
sets
sub
dec
movsl
imul
pop
push
dec
inc
jne
sub
icebp
js
jo
mov
outsl
xor
xor
or
arpl
jmp
inc
sbb
out
jmp
out
sub
inc
dec
pop
push
adc
xor
cmp
mov
repz
call
add
mov
je
dec
and
adc
lret
dec
xchg
pusha
jl
pushf
or
jne
cwtl
mov
xor
std
test
arpl
int
mov
iret
das
in
push
mov
push
sarb
mov
adc
mov
ret
push
imul
inc
or
sub
int
mov
fiaddl
cmp
xor
push
popa
repz
sub
lds
sub
loopne
and
aaa
jp
cld
sbb
iret
movb
mov
xchg
pop
mov
lea
mov
xchg
mov
daa
sti
stc
mov
push
pop
ds
jno
or
cmpsl
sbb
adc
lods
pop
repz
add
insb
xchg
xchg
stc
xor
push
pop
daa
shlb
jae
jno
fstpl
out
in
lock
xchg
dec
jae
fwait
lods
jns
sub
and
push
cmpsl
mov
ja
test
test
iret
dec
std
pusha
or
mov
popl
fsubs
leave
lret
mov
fcoml
jbe
inc
mov
iret
mov
inc
loop
pop
test
push
jl
mov
addr16
std
push
mov
pop
cwtl
pop
lea
inc
push
push
aam
test
aad
aas
outsl
in
add
adc
inc
shl
fdivs
sahf
repnz
clc
xchg
push
pop
ds
imul
push
xor
xor
lods
divl
lret
test
add
xchg
xor
out
sbb
js
mov
mov
xchg
jg
mov
mov
xchg
add
rolw
cmp
sbb
mov
adcl
lea
lret
lahf
bound
mov
int
push
xchg
and
mov
xchg
pop
jl
sub
scas
mov
sbb
roll
and
mov
pop
out
incl
shlb
pop
imul
nop
loope
icebp
aaa
adc
shl
hlt
popf
scas
mov
in
push
lock
shll
test
cltd
in
lahf
pop
arpl
xor
xlat
pop
lret
jo
cmc
cmc
std
fwait
pop
leave
test
popa
xchg
scas
scas
sbb
adc
sbb
loop
icebp
fistpl
out
cld
insl
and
xchg
scas
mov
call
stc
daa
xchg
and
mov
mov
lods
or
dec
aad
imul
stc
add
and
mov
ja
lods
loope
push
mov
sti
add
mov
push
jo
shll
aas
notl
jecxz
xchg
test
sbb
adc
pop
push
jb
sub
loopne
movsb
aaa
psubusb
nop
and
mov
xor
mov
popf
pop
and
iret
lahf
jge
push
repnz
adc
push
push
loopne
jecxz
pop
fidivrs
pushf
xchg
aas
insl
push
cmp
nop
es
mov
cltd
sub
jbe
fnstsw
jnp
out
imul
push
xchg
pop
dec
jo
loope
mov
enter
fimuls
inc
rorb
repz
sub
test
packsswb
lret
push
lock
jg
aaa
das
enter
dec
jg
inc
icebp
out
lret
adc
adc
movl
fwait
jmp
adc
dec
push
sub
loope
mov
pushf
jmp
lret
cmpw
in
pusha
sub
mov
mov
aas
jbe
je
mov
movsl
das
adc
movsb
push
and
pop
clc
fdivl
jns
cmp
mov
inc
mov
pushf
int
in
hlt
or
jecxz
pop
in
jle
fidivs
pop
push
sti
ret
jbe
aad
scas
rorb
xchg
sbb
push
mov
jno
add
popa
mov
js
dec
cmp
scas
mov
jmp
sbb
xor
dec
mov
xor
addr16
cmpsb
jnp
cli
add
mov
jecxz
xor
lea
push
jmp
dec
dec
mov
cmp
xchg
aas
xlat
inc
xlat
push
push
jb
add
into
ds
iret
ss
insl
cmp
out
lds
push
mov
cmc
lods
test
iret
arpl
pusha
push
jno
or
xor
or
pushf
push
std
test
iret
pop
std
loope
icebp
cmp
icebp
push
mov
inc
dec
xchg
push
pop
jp
outsl
cmp
mov
jg
int
mov
andl
ret
outsb
adc
or
cmpsl
cmpsl
das
lods
dec
mov
mov
mov
sub
push
gs
bound
or
cmc
mov
mov
push
cwtl
fsubrs
scas
adc
and
outsb
movsl
push
add
jno
stos
lahf
mov
inc
jne
cmovb
xchg
or
jae
xchg
mov
and
adc
dec
add
jo
cmp
std
mov
cmp
sub
scas
and
cmp
pop
xor
lcall
sbb
test
fucomp
test
mov
sbb
push
in
push
lcall
lods
xlat
xor
add
pop
push
cltd
add
addr16
pushf
dec
sbb
mov
bound
test
mov
fs
bound
jbe
leave
mov
xor
push
push
sbb
aas
push
ret
aad
pop
lahf
ds
mov
in
xchg
xorb
inc
mov
cs
je
jae
lahf
mul
xchg
xor
iret
int
jge
arpl
push
jbe
call
xlat
call
inc
push
cmp
movl
es
dec
pop
xor
cmp
mov
scas
in
and
mov
adc
mov
bound
fs
or
out
inc
sbb
xor
xchg
pop
and
inc
imul
inc
sti
in
cs
inc
mov
push
dec
cmovnp
dec
clc
into
adc
sbb
sbb
lds
or
cmp
xorb
test
aam
mov
sub
jnp
lds
cwtl
inc
xchg
cmp
cmovne
and
or
pusha
out
call
leave
push
les
add
mov
mov
add
mov
jge
jg
jp
lret
enter
mov
lods
das
inc
adc
fisubrs
mov
pusha
ja
cmp
sbb
aas
or
pop
pop
dec
xor
jmp
cmp
and
or
mov
inc
adc
imul
or
fstpt
sub
imul
jb
fwait
bound
aaa
pop
sbb
dec
lret
lods
lcall
jp
inc
repnz
pop
and
sarb
les
xorb
lret
jb
xchg
into
ljmp
cmp
or
mov
push
cmp
and
clc
adc
repz
cltd
cmpsb
xor
lret
and
push
hlt
pop
dec
cmp
ret
inc
fldt
push
fnsave
mov
pop
lret
pop
mov
fwait
insl
mov
lea
lahf
pusha
ja
and
enter
test
and
dec
aaa
cmp
mov
mov
push
cwtl
nop
jecxz
jb
cmpsb
sub
and
lret
out
xchg
enter
in
mov
in
add
popa
xchg
mov
ja
hlt
jbe
push
xchg
xchg
cmc
push
repz
je
aas
movl
sti
lahf
test
bnd
les
mov
and
repz
aas
xor
in
cmp
push
bound
outsb
lret
ljmp
push
sbb
sahf
add
and
push
push
lahf
icebp
out
push
outsl
es
or
lret
mov
dec
sub
or
push
cltd
clc
inc
notl
movsb
inc
adc
xchg
mov
xor
cld
out
imul
add
mov
cmp
cmp
or
inc
rcll
and
bound
jae
mov
sbb
and
dec
pushf
pop
jno
mov
push
xchg
xchg
cmp
loop
cmp
ds
xor
data16
stos
jg
loope
jecxz
cld
and
pop
mov
sarl
push
jne
outsb
push
mov
jecxz
push
addr16
movsb
add
mov
sub
cwtl
mov
in
push
adc
addr16
xor
call
rol
lds
or
sub
pop
cmc
fcomi
sahf
sbb
cld
mov
adc
xor
jns
or
fs
add
adc
sar
rolb
popf
push
adc
fisubrs
out
jb
rclb
mov
mov
inc
jae
mov
mov
ljmp
pop
jp
mov
sub
mov
fimull
test
aam
fs
nop
mov
jp
adc
shrl
lret
inc
sub
leave
adc
jnp,pn
push
incl
mov
xchg
call
wrmsr
jmp
movsbl
cmc
inc
cmp
clc
insb
cltd
or
xchg
adc
add
out
mov
push
je
xor
ja
and
test
lods
test
jb
movsl
cmp
jmp
inc
stc
mov
scas
fs
lret
add
filds
cmc
xor
xlat
sbb
dec
jmp
and
dec
dec
mov
fmuls
sti
pop
outsb
mov
dec
pop
cmc
sbb
aam
mov
sub
dec
sub
inc
cmc
pop
xchg
xor
in
inc
jl
pusha
inc
push
push
stos
repz
scas
jbe
cmp
adcb
push
outsw
or
std
imul
imul
sub
repnz
sub
les
xchg
or
rolb
iret
xchg
jmp
or
push
dec
push
push
int3
loope
sbb
lods
push
loopne
nop
hlt
out
sarl
stos
outsb
ror
fistpl
lahf
lods
gs
inc
popa
dec
scas
sub
inc
xor
ret
jb
push
mov
lcall
inc
mov
fdivr
inc
pushl
push
jecxz
adc
mov
sbb
mov
mov
jo
jg
decb
push
add
inc
jg
mov
jle
rclb
lret
mov
sarl
add
push
jg
xchg
js
cmpsb
ds
jnp
or
fiaddl
jle
mov
adc
insb
pop
icebp
loop
ds
in
or
jecxz
loope
test
das
adcl
sbb
xchg
in
fmul
rolb
mov
mov
xchg
mov
mov
scas
ret
add
ret
mov
push
rcll
add
add
outsl
pop
sbb
sub
lcall
xchg
mov
test
cld
clc
mov
fbstp
sub
loopne
test
fstps
rorl
sbb
xor
pop
mov
lcall
aad
sub
out
push
mov
sub
sbb
mov
lret
cmp
cmp
or
outsb
int
lods
dec
mov
cmpsl
aam
mov
xchg
pop
push
outsw
ret
test
call
add
push
jnp
sbb
mov
mov
lahf
jg
push
scas
mov
add
fldenv
sbb
js
xchg
rcll
mov
sub
sub
pop
jnp
movsb
paddusw
aad
push
repnz
bound
xchg
lds
sahf
xor
pop
ds
mov
pop
outsl
mov
xor
outsl
dec
dec
sbb
mov
mov
xchg
add
and
pop
mov
push
iret
popa
sub
push
mov
mov
and
pop
mov
fstps
outsl
js
shlb
xchg
fldenv
out
icebp
sbb
mov
enter
xchg
repnz
out
dec
xchg
cmp
scas
js
pop
xlat
test
outsb
loop
into
sub
gs
jbe
jg
jnp
jns
pop
add
mov
xor
add
iret
and
stc
lods
jmp
mov
xchg
xlat
gs
jecxz
push
or
insb
mov
jge
mov
les
or
pop
adc
aaa
dec
mov
sub
pop
pop
or
push
dec
sub
xchg
stos
mov
rcrb
add
enter
jae
mov
and
add
pushf
incl
dec
js
loopne
adc
adc
jge
test
add
mov
outsb
sub
add
cmp
lcall
cmp
jo
mov
test
cmpsl
push
push
adc
xor
add
add
mov
cmp
faddl
es
pop
jmp
data16
mov
inc
fwait
cmc
or
push
xor
es
dec
push
ds
xchg
clc
mov
popa
sbb
mov
xchg
push
test
leave
iret
xchg
cld
inc
les
in
je
mov
data16
push
ror
push
xor
dec
les
mov
rolb
mov
jle
xor
aaa
outsl
cmp
clc
and
push
std
sub
cld
or
cmc
movsb
mov
js
ret
shll
xor
icebp
cltd
sub
mov
ret
rcrl
xchg
js
popf
xchg
push
xchg
jecxz
ss
xor
popa
ds
sub
lods
cmpsl
int3
ret
out
lret
mov
dec
push
sub
sbb
sub
repz
add
push
out
add
inc
pop
add
mov
sbb
pop
lock
sub
cmp
or
addr16
xor
outsl
aas
cld
xor
sub
hlt
lods
jl
aas
movsl
gs
sbb
rcl
iret
psrlq
out
mov
dec
xor
outsl
jge
mov
mov
mov
mov
jecxz
and
jno
movsl
es
jecxz
nop
xchg
xor
mov
mov
xchg
sbb
fidivs
pop
and
or
fstps
movsl
lahf
adc
mov
xchg
lods
dec
test
test
and
inc
mov
jge
pop
jl
pop
pop
inc
daa
sbb
std
icebp
sti
xchg
jge
pop
inc
mov
cmp
xor
test
pop
adc
mov
sahf
sub
pop
stos
addb
repz
not
cmc
in
jecxz
imul
or
sub
rcll
lods
adc
lea
jle
fs
jnp
out
scas
scas
hlt
mov
adc
call
dec
jns
stos
mov
lcall
sub
mov
es
sahf
fldcw
or
lret
sbb
ja
cwtl
cmp
sbb
push
rclb
aam
push
pop
pop
arpl
sub
mov
pop
sbb
push
icebp
dec
jge
jmp
pop
jmp
imul
add
out
jno
sbb
push
adc
mov
movsl
jle
mov
in
push
mov
pop
icebp
test
aam
jno
ja
cmpsl
aaa
mov
enter
jmp
sbb
cltd
pop
sarb
aad
pushf
mov
stos
cmp
ljmp
push
fnstenv
aad
mov
jle
xor
outsb
jle
stos
mov
fadds
leave
xchg
cmpl
sbb
jne
and
inc
test
loopne
test
fisttps
out
stos
in
mov
xlat
arpl
add
ret
aas
or
bound
fnstcw
lret
pop
pop
das
push
add
popl
push
int3
inc
mov
jae
ficompl
adc
or
hlt
jns
jbe
sbb
push
arpl
mov
jecxz
push
cmp
stc
xchg
sbb
sub
mov
or
ljmp
xchg
imul
sbb
pushf
leave
adc
xor
fwait
data16
mov
shll
pop
pop
push
sub
test
ficoml
mulb
scas
int
std
test
fildl
jge
add
and
aas
test
mov
popa
mov
filds
lcall
add
arpl
orb
aaa
push
mov
xchg
aaa
jp
les
negb
loop
xchg
hlt
int3
pop
rclb
rol
incl
stos
in
ds
xchg
xchg
jg
jae
cltd
and
add
cld
jle
and
mov
sbb
jnp
or
ud2
fs
xchg
pop
inc
hlt
ljmp
jmp
roll
dec
xchg
int3
mov
mov
sbb
adc
and
push
xchg
testl
fldcw
dec
and
mov
pop
cmpsb
inc
pusha
or
jns
jg
sub
mov
pop
movaps
scas
cltd
ss
pushf
mov
push
jno
mov
or
call
jg
add
jg
jmp
outsl
test
adcb
cmp
faddl
xbegin
js
inc
sahf
adc
ret
pushf
or
cmp
test
sbb
pop
jmp
pushl
scas
out
cmpsl
or
xchg
cld
adc
pop
dec
and
cld
inc
hlt
into
xor
mov
dec
xchg
divl
or
push
adc
fs
fisubrs
sbb
pop
popf
push
fs
icebp
push
rcrb
inc
xor
je
inc
rcrb
clc
lret
outsb
adc
mov
fldcw
jbe
pop
dec
push
inc
mov
xchg
icebp
xor
adc
cmpsb
mov
mov
sahf
stc
push
cmp
insb
xor
jmp
pop
lret
out
push
xchg
xchg
push
cmpsl
pop
lods
dec
sub
mov
adcl
nop
adc
mov
pop
add
mov
idivl
lret
inc
xlat
sub
lcall
mov
and
or
and
push
in
sbb
cmpl
pop
push
icebp
ljmp
dec
cli
fildll
add
or
inc
mov
aad
xchg
mov
jo
test
jl
xchg
adc
loop
jl
jle
fs
dec
aad
mov
inc
push
out
stos
sub
mov
movsl
jno
mov
mov
es
dec
aas
ja
stos
jle
dec
ret
push
push
mov
jecxz
dec
andb
pusha
inc
movsb
lods
dec
nop
cltd
sbb
mov
pusha
test
jp
sbb
xor
dec
dec
repz
add
lret
lahf
sub
jg
pop
mov
sub
and
pop
add
shr
addr16
push
mov
repnz
dec
sub
add
push
leave
sbb
mov
pop
jae
push
push
inc
push
jecxz
out
lret
cmp
xor
mov
xchg
fstps
stc
sarb
pop
xlat
xor
rorl
pop
or
and
int3
xor
dec
popf
loope
mov
add
les
imul
outsl
pop
lea
lds
xor
mov
add
xchg
loopne
fistpl
dec
js
pop
jmp
dec
mov
xor
mov
dec
test
fisubrs
in
adc
mov
or
and
sbb
out
leave
sub
sbb
xor
call
dec
popa
xor
adc
pop
test
cmp
rolb
push
out
dec
sahf
repz
jo
sub
int3
dec
test
aad
inc
lcall
outsb
lret
xor
cmp
call
push
addb
mov
xor
sarb
aam
pop
xchg
jl
pop
mov
xor
mov
inc
lock
cmp
repz
inc
mov
jge
or
or
in
add
pop
adc
push
mov
subl
xlat
cmpsb
jmp
out
xchg
push
fwait
pop
aam
inc
daa
sti
lods
cmpsl
sbb
xor
jae
comiss
mov
jl
stos
lock
iret
insl
xchg
fwait
inc
add
jmp
jae
cltd
pop
in
mov
jle
iret
sarb
je
jo
testb
adcl
inc
mov
jp
push
call
xlat
mov
in
and
sub
add
push
cwtl
xor
int3
fistps
or
dec
lods
sub
test
or
ljmp
jle
jle
pop
int3
pop
fdiv
jg
incl
shrb
test
cmovo
or
adc
jb
xlat
dec
jae
lea
cld
and
inc
hlt
fadds
xor
in
pop
or
add
test
xchg
mov
std
pop
xor
loope
mov
mov
cld
xor
lret
sub
sub
out
test
jp
cmpsb
fistps
loope
in
test
clc
jne
test
mov
mov
xchg
sub
lock
inc
jo
add
or
pusha
jne
pop
aas
cmp
xor
inc
aad
dec
loope
adc
xchg
xchg
mov
pop
test
mov
bound
inc
into
aaa
shl
into
stos
in
ja
lcall
fcompl
jne,pt
sbb
xadd
das
pop
cmp
sbb
addr16
mov
dec
daa
mov
mov
xor
dec
cmpsl
cmp
and
lock
push
inc
mov
push
pop
cmpsb
pop
loopne
jecxz
lods
cli
shlb
test
insl
and
or
int
push
add
dec
lea
mov
clc
shr
rclb
adc
daa
adc
and
pop
nop
xchg
rolb
jp
jbe
add
aam
sti
into
mov
aam
mov
test
outsb
jl
pop
ja
out
mov
push
shr
std
add
pop
mov
roll
test
dec
xchg
inc
imul
in
sub
jp
lods
mov
in
lret
mov
lcall
sub
xor
movsl
add
bound
sub
cmp
or
fmuls
in
mov
adc
push
adc
xlat
pop
xor
js
shll
push
sbb
dec
or
mov
pop
imul
inc
fdivrl
bound
xchg
mov
mov
sbb
pushf
mov
icebp
leave
stc
mov
mov
fwait
loopne
cld
cld
and
or
pop
fbld
les
repz
ss
mov
iret
mov
int3
mov
sahf
idiv
filds
incb
pop
movsl
movl
fs
jle
shlb
flds
loope
lret
xor
mov
repz
fimull
jmp
lds
sahf
inc
and
aad
out
add
xor
lahf
in
mov
xchg
add
inc
call
xchg
mov
xor
sbb
ja
int3
push
push
daa
cmp
ja
pop
mov
fsubrs
xchg
in
cmp
sub
test
bound
push
es
mov
xchg
nop
xchg
dec
adc
dec
dec
fwait
xchg
xlat
jg
add
dec
outsb
mov
shl
repnz
fs
repz
sub
mov
ljmp
push
ljmp
push
pop
sar
test
dec
push
pop
pop
in
cmpsb
and
cmp
addr16
sub
cli
divb
ja
popa
or
pop
jp
jo
cli
xor
mov
rclb
add
insb
xlat
outsl
lahf
dec
sahf
or
mov
xchg
add
das
pop
cmp
pop
enter
shrl
leave
mov
cmp
imul
das
push
gs
mov
mov
ret
outsl
jo
bswap
pop
lock
add
outsb
sub
dec
lods
jl
mov
nop
mov
mov
subb
sbb
inc
movsl
inc
inc
hlt
cmp
and
hlt
fs
cmpl
sub
dec
sbb
roll
in
pop
cmp
popf
insl
pop
adc
jg
jmp
inc
dec
repz
sbb
jg
sbb
jl
dec
scas
dec
mov
stos
sub
inc
aaa
idiv
xchg
mov
outsb
fdiv
ja
pop
adc
test
lock
imul
push
sub
mov
roll
bound
ficoms
mov
stc
xchg
xchg
fld1
xchg
inc
icebp
cmp
fisubl
test
xchg
mov
push
adc
arpl
dec
mov
pop
imul
mov
inc
add
or
mov
push
cmp
and
in
sbb
repnz
jo
sbb
add
xor
cmp
mov
jp
jae
fs
fcmovnb
add
cli
cmp
and
pushf
out
call
mov
lods
adc
aas
mov
ljmp
rorb
push
addr16
aaa
pop
ss
aam
adc
xor
in
jo
dec
dec
push
pop
mov
gs
or
cmp
and
test
ret
lahf
dec
and
leave
cmpsl
leave
mov
and
mov
in
mov
movsl
or
lea
adc
push
lret
jb
repz
int3
loopne
repz
pminsw
or
out
sbb
jbe
ljmp
mov
push
xor
mov
xchg
and
sti
jmp
jb
push
push
cld
mov
shlb
fstl
in
in
imulb
or
ret
stos
push
outsb
cmc
adc
les
ljmp
mov
in
lods
inc
addl
jbe
push
pop
pop
xchg
lea
and
mov
lret
call
mov
adc
sub
inc
mov
and
add
insb
add
cmp
test
fildll
and
pop
cmp
gs
jb
adc
jae
ss
mov
fldenv
rorb
dec
xor
inc
aam
jbe
sub
mov
and
jp
popf
dec
iret
pop
outsl
mov
out
test
ficoms
jle
call
nop
jge
jmp
mov
xor
mov
sbb
inc
and
or
or
aaa
pop
insl
jns
aaa
sbbl
fdiv
stc
adc
inc
or
xchg
push
jno
inc
mov
jo
push
xchg
push
adcl
adc
push
mov
adc
cmp
pop
xchg
mov
fstpl
popf
or
jns
cld
pop
lcall
leave
out
adc
ret
or
sbbl
xchg
mov
mov
ds
xchg
sub
inc
imul
mov
push
xchg
pop
sarl
or
addr16
mov
sbb
in
int
add
inc
or
mov
pop
push
addr16
jmp
or
ss
and
jne
lock
xchg
or
push
aaa
push
push
jno
stos
inc
incb
xchg
sub
sahf
ret
daa
pusha
jne
mov
sub
jge
aad
mov
sub
mov
daa
xorb
movsb
and
shl
mov
jg
xor
aas
xchg
and
lahf
mov
mov
jbe
sbb
push
shl
xchg
icebp
test
xchg
jle
or
mov
cmp
xor
repz
xor
cmpxchg
es
testb
pop
test
andb
in
cld
ret
popf
and
in
js
push
mov
inc
xchg
imul
int3
mov
lcall
stos
xor
mov
dec
loope
mov
pop
mov
scas
mov
shlb
jmp
scas
cmpsb
xchg
lds
mov
scas
cmpb
jp
imul
sub
inc
subl
in
and
xor
xchg
ja
jg
cmp
add
sti
xchg
sub
gs
sbb
sbb
mov
pop
cli
call
jne
test
and
sahf
inc
pop
pop
jl
out
insl
xor
jae
in
adc
popf
inc
repnz
nop
fs
in
jae
pop
arpl
es
pop
xor
cltd
push
ljmp
cmp
cmp
enter
outsl
cmp
fisttpl
sbbl
gs
fadds
stos
push
jbe
outsb
sti
jne
add
pop
inc
cld
sub
add
loopne
lea
mov
ficoms
push
fcompl
mov
cmpsb
jl
lahf
add
into
es
fsubl
outsl
inc
mov
mov
stc
popa
lods
sub
lds
jo
outsb
loop
xchg
xchg
fsubrl
or
mov
mov
lahf
or
mov
pop
lock
test
jnp
dec
mov
or
inc
push
out
mov
aam
test
sub
jnp
and
cmp
mov
arpl
pushf
pop
jbe
add
xor
mov
mov
scas
dec
pop
mov
movsl
push
insl
jl
test
jno
jne
and
or
test
inc
jo
sbb
inc
add
lcall
pop
xchg
in
cmp
test
and
add
sub
adc
imul
arpl
scas
jmp
idivl
xorb
cmp
ret
cmp
xor
mov
mov
scas
mov
jp
into
fildll
cmpsb
mov
add
dec
and
lods
outsl
pop
xor
cmp
mov
xchg
stos
mov
adc
push
pop
enter
pop
or
xor
inc
stc
mov
scas
pushf
sti
loop
pop
mov
push
loop
stos
xchg
fcmovnb
adc
les
sbb
mov
cmp
lcall
fstpt
mov
mov
sbb
lea
pop
xor
xchg
mov
cld
pop
inc
xchg
dec
xchg
lock
lret
mov
stos
js
pushl
std
jl
jb
sbb
push
sub
lahf
pop
cmp
fidivrl
movl
push
out
scas
and
pusha
mov
popa
push
outsb
xchg
outsl
dec
and
jmp
jg
sbb
aaa
jno
mov
test
and
xor
push
loopne,pn
pop
mov
mov
push
in
dec
pop
dec
fcompl
pusha
sbbb
in
imul
gs
inc
adc
dec
adc
pop
xlat
insb
std
lret
jbe
jns
push
add
lods
mov
jl
int3
aaa
lcall
mov
int3
mov
mov
push
ds
jp
or
cs
loop
imul
std
xchg
ss
outsb
mov
testl
dec
fcomp
loopne
jp
fidivs
push
sahf
cmpsl
add
testl
cwtl
sub
dec
sub
mov
dec
ja
push
mov
dec
dec
addr16
stos
ljmp
push
lods
mov
push
push
mull
stos
lods
das
mov
jb
mov
ret
je
jle
scas
adc
sub
dec
xchg
out
pop
xor
ficoml
call
dec
aaa
push
shr
sahf
icebp
mov
cli
mull
repz
repz
xor
gs
push
out
push
cmp
jl
stos
test
and
mov
xchg
pop
negb
pop
std
lds
call
pop
dec
xchg
aam
in
mov
pop
mov
cmp
lahf
pop
and
cwtl
sarl
sbb
cmp
cltd
arpl
mov
enter
inc
gs
cltd
mov
movsb
fmul
push
out
pop
jo
or
pop
add
inc
movsl
xchg
jno
not
popa
aaa
mov
xor
mov
rcll
loope
jmp
cltd
insb
adc
pop
lret
mov
or
pusha
inc
mov
lcall
add
insb
inc
sub
pop
std
sub
sbb
imul
add
mov
jp
ret
dec
fwait
jne
pop
inc
shlb
or
mov
mov
and
push
dec
sub
nop
mov
push
or
xchg
or
push
jle
test
cmpb
scas
mov
sbb
fisubrs
cltd
sbb
xor
addb
or
and
leave
push
mov
repz
sub
push
loop
push
push
dec
mov
mov
out
sbb
push
lcall
push
inc
jbe
scas
xchg
pop
xchg
sahf
or
lea
inc
ss
push
loop
pusha
popa
fcoms
add
push
or
adcl
jbe
mov
in
mov
sub
ret
fs
xor
mov
ja
cmp
std
mov
fcomp
inc
stc
into
xchg
or
and
jns
aad
and
mov
iret
ja
jl
add
rep
pushf
pushf
sbb
xor
sbb
mov
mov
xchg
pushf
pusha
mov
sbb
out
pop
fadds
xchg
dec
out
popa
mov
aam
xchg
push
push
pushf
mov
xlat
xor
in
mov
sbb
mov
push
sbb
xor
xchg
cltd
xchg
shll
lds
xchg
js
stc
mov
push
xchg
aas
push
popa
adc
ja
lods
mov
sbb
xor
add
nop
sbb
mov
jne
mulps
push
lahf
xchg
pop
jecxz
pushf
xchg
jb
ret
inc
cmpsl
ljmp
in
outsb
inc
mov
mov
adc
dec
mov
int
jnp
pop
mov
pop
pop
sbb
orb
hlt
pop
inc
lea
xchg
loop,pn
xchg
inc
sarl
shrl
xchg
out
test
imul
xchg
mov
xchg
dec
sub
dec
xor
mov
lods
mov
mov
cs
and
and
push
loopne
aas
idivb
in
xchg
stc
xchg
ds
xor
scas
pop
outsl
repz
call
inc
mov
lret
das
fdivl
adc
inc
jmp
repnz
stos
and
cmc
dec
adc
lret
cmp
sub
adc
sbb
mov
xchg
pop
push
insl
scas
in
xchg
sub
pop
jmp
sbbl
mov
xor
pop
int
pop
dec
or
je
lock
repz
dec
in
mull
shrl
add
aaa
dec
clc
lahf
pop
test
scas
mov
nop
inc
stos
mov
cmc
fs
scas
mov
adc
cmp
dec
js
add
in
cli
std
adc
out
cmp
adc
fucom
lods
mov
icebp
cmc
lds
cmp
cli
sbb
pop
mov
stos
and
loope
sub
pop
imul
jnp
sub
stos
insb
icebp
arpl
xor
jle
ja
mov
sbb
cmc
scas
push
bound
mov
shll
call
in
push
fwait
mov
pop
xor
js
ja
push
lcall
adc
ret
sar
pop
mov
sub
sbb
mov
add
adc
mov
and
aam
mov
dec
bound
mov
sti
xchg
jecxz
lret
or
shl
pop
or
xor
inc
jmp
pop
or
ljmp
mov
sbb
or
sti
inc
pop
push
mov
add
inc
xchg
icebp
jmp
mov
dec
sbb
xor
sbb
cmp
jae
pushf
push
and
lea
cli
stos
jbe
into
in
movsl
stos
mov
in
pop
jecxz
xlat
cmp
jbe
jno
fistpll
lds
in
js
iret
push
pop
xchg
orb
daa
jmp
pop
leave
pop
enter
add
popf
fsubp
mov
sbb
aad
pop
sub
pop
mov
sbb
jno
lods
push
outsb
daa
pop
mov
scas
fdivl
lcall
inc
sub
lds
and
lret
daa
jns
jge
mov
shll
stc
jl
stos
ljmp
mov
dec
add
inc
mov
or
xor
jbe
mov
lds
jno
lea
inc
sbbb
mov
movd
pop
or
mov
inc
je
stos
dec
pusha
push
sarb
add
mov
sahf
verw
adcb
xchg
push
mov
scas
mov
sub
dec
outsb
xchg
nop
shrl
add
jnp
cmp
ss
jnp
xor
mov
push
mov
mov
mov
loop
test
mov
insl
jle
daa
and
jae
rorb
repz
mov
lods
lahf
push
sbb
andb
xor
sub
ja
pop
stos
push
pop
sbbl
out
jp
mov
jge
jns
sar
arpl
xchg
jg
mov
test
inc
and
ret
outsl
je
sbb
ror
cltd
jne
in
pop
out
and
pop
outsl
pop
sub
xor
jae
push
fidivl
add
sbb
fs
movsb
mov
test
sub
fwait
add
shlb
jo
pop
mov
stos
cltd
imul
jb
ret
inc
int
push
pop
xchg
orl
adc
sti
sub
mov
test
add
jnp
push
stc
xchg
cli
or
lret
pop
mov
fstl
lret
push
aam
xorl
push
les
shr
icebp
lcall
movsl
adc
das
movsb
sub
and
mov
xchg
push
daa
dec
sub
sub
push
dec
and
movl
aaa
xchg
inc
pop
lcall
or
std
aas
add
cmpsl
sbb
cli
imul
pop
ja
cmp
jo
shrb
in
push
and
push
inc
cmp
cmp
mov
pop
arpl
sbb
jp
xor
sbb
mov
inc
outsb
push
mov
cmpsb
mov
sbb
rorl
ss
mov
jmp
icebp
ret
and
xchg
jecxz
dec
inc
push
inc
sub
out
and
xchg
shlb
jb
stos
xchg
test
mov
test
jno
dec
mov
push
xchg
mov
enter
shrl
inc
pop
jbe
xor
xchg
add
pop
cmp
fldl
call
icebp
in
data16
jns
ret
imul
cmp
mov
sub
dec
mov
cmp
movsl
inc
repz
cmp
sbb
int3
loop
mov
dec
jge
rorl
xchg
inc
ds
cmp
cmpsl
mov
push
inc
sbb
mov
cld
cmpsl
mov
jg
dec
gs
lahf
out
mov
aas
xor
inc
in
inc
insl
ds
subb
jb
and
fwait
sub
push
push
fwait
jbe
ds
fs
and
pop
jecxz
js
pusha
jle
push
sbb
inc
int
add
in
or
out
add
mov
xchg
subb
pushf
and
jae
sub
cs
loop
pop
mov
fsubrs
das
filds
jge
ja
mov
push
mov
cmp
movsl
test
fwait
jle
jno
scas
sti
mov
in
mov
rorb
inc
orb
adc
loope
incb
sub
andb
push
jmp
xchg
shlb
and
es
cli
shll
mov
fcompl
adc
loop
mov
mov
jbe
xor
pop
sub
jecxz
int3
xchg
mov
jne
mov
sbb
push
cmpsl
push
mov
rolb
adc
add
out
jno
mov
xor
push
or
movsb
aam
in
jl
insb
imul
divw
movsl
pop
jns
sbb
mov
jg
cld
rcl
jp
push
jae
mov
call
test
idivb
stc
popa
andl
mov
jb
in
push
std
cmp
stos
and
pop
xor
xor
push
shll
lahf
xchg
jne
jle
sbb
pop
pushf
dec
mov
sub
and
out
sbb
ljmp
sbb
mov
ss
dec
xor
sub
and
pop
jmp
mov
and
push
jo
ss
cmp
xchg
out
push
repnz
fs
cmp
inc
push
dec
iret
fdecstp
dec
xchg
addr16
sbb
es
cmp
inc
xchg
mov
xchg
mov
clc
fsubrl
and
sub
jle
outsb
inc
mov
push
cs
rorl
daa
out
sub
sbb
or
inc
xchg
xor
sub
adc
sti
cmp
jp
pop
adc
lret
aad
sub
pop
lcall
cmp
outsl
enter
ljmp
mov
test
sti
movsl
push
sub
cs
int3
inc
and
aas
dec
cmp
mov
add
inc
insl
inc
icebp
lods
adc
test
jl
popl
xor
dec
dec
cmp
adc
loopne
xor
cltd
fistpll
xchg
imul
mov
aad
and
stc
xchg
mov
dec
loop
iret
push
push
adc
in
lret
adc
lahf
jne
mov
add
inc
aad
xchg
movsb
daa
mov
lea
repz
xchg
add
outsb
lret
cld
ret
push
sub
xchg
shl
arpl
pop
subl
sbb
cmpsl
add
inc
shlb
jp
mov
pop
std
sbb
dec
mov
test
xor
data16
push
arpl
js
add
push
in
cmp
or
into
pop
aas
xchg
loope
sbb
es
icebp
iret
add
jnp
push
jecxz
inc
mov
or
arpl
ret
ret
cmpsb
cld
pop
andb
pushf
out
sahf
popf
or
mov
or
lods
mov
fmuls
je
cwtl
cwtl
call
xchg
cltd
mov
es
and
jb
sbb
cmp
push
mov
subl
scas
add
rcll
sahf
push
inc
pushl
aad
fsubrs
dec
out
cmp
inc
gs
push
sbb
mov
push
mov
mov
fsubrs
jnp
inc
cmpsb
mov
sti
in
adc
mov
mov
mov
push
sbb
or
xchg
xor
movsb
mov
jmp
xor
or
push
outsl
jecxz
movsb
sahf
mov
ss
mov
cmpsb
and
outsl
test
adcb
scas
jl
nop
mov
out
and
push
dec
jnp
mov
sarb
add
or
adc
mov
mov
jnp
aad
test
ret
and
or
and
push
addr16
rcll
lds
dec
add
add
stos
inc
lcall
das
jg
cli
das
pop
imul
inc
mov
pop
push
les
cld
adc
mov
sbb
ljmp
pop
cs
cmpsl
push
shlb
shll
inc
popf
and
sub
or
outsl
xor
movsb
std
aas
push
pop
add
out
mov
jmp
mov
and
mov
and
inc
ja
xchg
dec
push
rorl
mov
subl
movsb
mov
pop
and
shrl
jne
adc
mov
adc
shufps
mov
nop
sbb
xor
pop
mov
adc
jmp
out
cmp
jae
fildll
push
xchg
jge
imul
sub
cmpsb
cmp
stc
xchg
jbe
cmp
inc
xor
addl
inc
sbb
inc
hlt
pop
ds
and
notl
xor
test
in
pop
and
insb
add
repz
xor
pop
adc
jo
cmpsl
dec
jmp
daa
inc
cmp
jp
movsb
pop
sub
paddusb
mov
sub
mov
cmp
rorb
ret
xchg
int
push
push
gs
inc
jne,pt
ss
into
adc
adc
sub
fisubl
or
rcll
pop
call
les
stc
cs
sbb
mov
js
cli
andb
inc
inc
icebp
pop
popa
jge
mov
dec
mov
xchg
jns
or
and
add
xlat
jecxz
xchg
ja
dec
jne
jp
scas
dec
adc
mov
jnp
cmpsl
sarb
bound
inc
inc
pop
pop
pushf
jmp
inc
adc
jecxz
test
mov
adc
daa
or
pop
push
or
pop
lea
add
std
or
push
push
cmp
stos
lret
mov
mov
jg
cltd
sbb
arpl
mov
cwtl
popa
cli
iret
int
or
addl
in
testl
mov
iret
xor
mov
fimuls
daa
sub
push
adc
out
sub
pop
cmp
pop
and
and
push
pop
mov
in
cli
std
jae
mov
movsl
out
mov
out
pop
pop
gs
cwtl
adc
je
into
and
loop
pop
dec
movsb
das
mov
faddl
arpl
movsb
push
and
mov
adcl
adc
jmp
jbe
sti
cwtl
and
mov
in
fs
mov
mov
mov
push
push
out
mov
test
addr16
sahf
dec
or
pop
jne
lea
rol
add
push
addr16
repnz
jbe
adc
dec
enter
xchg
add
adc
xor
xor
inc
or
outsl
push
jg
movsl
xor
loop
in
jle
push
inc
out
imul
dec
push
sub
lods
jg,pn
mov
jne
jae
jnp
mov
mov
leave
arpl
ja
mov
mov
test
fsubrl
loope
dec
in
mov
mov
sti
insl
xchg
or
jne
mov
popf
sub
adc
cltd
jb
outsl
cmpl
ret
fmulp
jne
inc
jb
xor
mov
dec
and
sbb
pop
pusha
or
mov
sub
cmp
cmc
rcll
lock
dec
mov
inc
pop
roll
jb
jne
xchg
aad
push
mov
insl
and
inc
mov
mov
mov
jns
cmc
lds
pop
dec
mov
or
push
ljmp
nop
jp
js
pop
cmp
repnz
ret
or
mov
mov
sbb
push
lret
jmp
fstl
or
ret
push
and
inc
gs
in
mov
out
outsl
outsl
mov
jle
push
aaa
mov
fldl
pop
sub
add
mov
lcall
repnz
xchg
mov
xor
mov
imull
cmp
push
lret
mov
inc
in
int3
mov
mov
ss
pop
inc
sub
cmp
add
addr16
ds
sbb
xchg
jmp
les
rcrb
inc
out
rcrb
cmpsb
xchg
push
movsl
popf
add
rcrb
adc
add
jae
jnp
mov
sbb
inc
push
lods
dec
test
cmp
stos
mov
cli
push
mov
test
fidivrs
outsl
mov
mov
mov
lcall
das
in
fbld
sub
repnz
xchg
lcall
ss
pop
cmc
or
stos
mov
dec
vmovntdq
mov
outsl
and
push
je
call
and
addr16
jns
sub
sbb
lods
out
fs
pop
xchg
cmp
addr16
adc
test
shll
ds
outsl
mov
cs
dec
jge
jns
adc
adc
outsb
xchg
out
sub
inc
push
inc
xchg
cwtl
add
mov
xchg
mov
js
push
cmp
ret
mov
mov
addr16
inc
pusha
cmp
test
in
cmp
pushf
sarl
push
movsb
jo
jle
xchg
cmp
or
fnstcw
addl
jns
inc
cmp
mov
sahf
lret
push
push
popf
push
rcll
pop
push
mov
dec
push
push
rcrl
dec
add
push
mov
jp
pop
and
sbb
cli
movsb
and
sbb
icebp
leave
pop
jge
add
cmp
pop
call
sahf
in
ja
dec
ds
nop
cmp
pop
fsubrs
cld
test
leave
jle
pop
pop
out
lea
adc
outsl
jle
sub
or
jbe
je
nop
cwtl
das
push
repz
mov
sub
push
jl
mov
push
enter
jl
push
jo
jo
push
pop
pop
stos
jecxz
adc
andl
rcl
inc
bnd
sysexit
xchg
push
test
pop
stc
out
arpl
pushf
repnz
call
sub
bnd
push
and
loop
insl
aam
sti
dec
in
lods
sbb
jp
cmc
outsl
ret
loop
stos
pop
cwtl
lcall
out
fwait
lret
in
jne
fildll
fidivrs
sbb
dec
les
sbb
jg
mov
test
cmp
imul
cld
cmp
inc
out
push
add
sbb
push
push
mov
aad
pushf
or
jecxz
pop
out
push
mov
jae
xchg
and
repnz
jmp
test
ljmp
jnp
adc
loopne
or
mov
pop
ljmp
lret
dec
push
jge
ret
mov
jo
lods
roll
mov
push
jmp
movsb
inc
cmp
insb
cmp
rolb
fs
lcall
mov
fbstp
cli
push
jecxz
add
xchg
psubb
std
lock
cmovl
push
jl
lds
adc
sub
add
ja
and
xor
xchg
pop
jmp
or
dec
push
sub
nop
xchg
in
es
jo
iret
add
xlat
repz
lahf
and
icebp
sub
inc
stc
sbb
das
xor
xor
sub
lahf
fs
mov
xor
inc
mov
cmp
aaa
mov
xorb
inc
and
iret
inc
sub
xor
mov
inc
push
adc
jnp
les
mov
fcmovnbe
xchg
andl
hlt
ret
leave
adc
pop
addr16
mov
popf
xchg
pop
add
mov
mov
sub
and
outsl
lds
and
dec
stos
sub
fidivrs
aaa
ds
pop
mov
sbb
and
outsl
repnz
aaa
das
insb
stos
sbb
pushf
imul
arpl
adc
jg
out
pop
mov
push
push
xchg
cmp
lahf
inc
rorb
xorb
out
fsubr
jmp
xchg
add
mov
psubd
icebp
pop
dec
push
insb
mov
arpl
sti
aam
rcrb
stc
xorb
lods
lods
int3
in
push
imul
adc
xor
std
imul
std
push
pop
add
and
push
test
add
inc
xor
or
xor
aas
add
xchg
xor
std
insl
mov
and
dec
nop
jle
clc
loopne
dec
sbb
xor
imul
pop
or
in
xlat
cmp
ja
dec
pop
pop
push
lea
dec
push
rorl
sbb
pop
std
out
xor
daa
bound
xchg
jle
pop
sub
cmpsl
fwait
xchg
mov
daa
insl
dec
bnd
lahf
inc
popl
push
and
push
push
cmp
xor
fdivl
call
sbb
mov
adc
pop
call
pop
mov
push
and
xchg
scas
xor
sub
mov
scas
add
add
and
popf
lret
dec
inc
push
xchg
ret
add
inc
roll
popf
mov
mov
cmp
jb
or
and
rcl
and
insl
jecxz
dec
mov
ffreep
cmp
lret
pusha
popf
sbb
add
incb
jle
out
loop
pop
mov
mov
es
jne
fmuls
cltd
or
push
xchg
mov
sub
loope
insl
lcall
arpl
jge
je
push
aad
int3
inc
or
push
mov
ljmp
stos
bound
js
adc
insb
outsb
xchg
xor
jg
xor
fcomps
jnp
cmp
mov
mov
push
int3
jae
cltd
jmp
cld
jno
sbb
negb
lock
fdiv
jae
out
push
rcrb
inc
cmpb
sub
outsb
std
ja
push
adc
shll
push
jmp
sub
lods
cld
cmp
xor
out
mov
test
stc
sti
daa
add
mov
push
int
lods
and
daa
xchg
xchg
cmp
daa
test
int3
arpl
mov
mov
push
jo
jp
jge
or
rclb
cld
insl
adc
xorb
fcmove
pop
ds
ja
imul
mov
mov
dec
es
ljmp
bound
and
jbe
jge
mov
dec
fsts
mov
cmpsl
sub
xor
add
inc
jns
jo
pop
clc
shlb
scas
movq
mov
lods
mov
adc
lcall
cmc
addb
jnp
push
fucomp
and
test
into
jmp
mov
repnz
fisubrl
jecxz
push
lea
add
jno
sbb
inc
sub
dec
addl
test
add
js
jecxz
stos
fmuls
xchg
into
adc
mov
push
insb
xchg
test
mov
xchg
push
add
cld
iret
repz
inc
add
jb
int
push
mov
sbb
jp
mov
das
nop
ss
jg
cld
fwait
aam
cmp
push
jo
cmpl
cs
bound
sahf
insl
inc
lcall
mov
lret
inc
push
pop
pop
or
shlb
add
xchg
pushf
xchg
ret
cs
ljmp
aas
popf
xor
out
and
imul
enter
mov
pop
popf
fldt
cmp
icebp
insl
jb
fisubrl
cmp
mov
outsb
xor
jge
inc
test
xor
insb
jae
popa
lret
jns
jp
dec
push
in
pop
xchg
lret
lods
cmp
cltd
jge
fst
loopne
cmp
mov
mov
inc
mov
dec
jp
fiadds
xor
test
pushf
lret
cmpsl
adc
xor
aaa
outsb
mov
stc
and
pop
or
xchg
inc
sbb
pop
pusha
pop
outsl
cmpsl
je
pop
or
dec
nop
imul
not
or
xchg
sub
imul
pop
pop
mov
insb
jno
sub
jl,pn
mov
xchg
dec
nop
add
test
ret
xchg
and
in
je
push
sbb
hlt
add
jae
inc
gs
addr16
lods
xchg
jo
xlat
mov
jb
sub
ljmp
loopne
fidivl
fsub
mov
sbb
dec
push
pop
cmp
aad
xchg
stos
push
hlt
mov
fstpt
xchg
xchg
xorl
sti
int3
pop
mov
jae
sub
cwtl
lock
fstps
insb
and
aaa
mov
jne
or
jge
dec
int3
xlat
xchg
jo
and
mov
xlat
pop
insb
push
sub
cmp
mov
sbb
in
les
int
test
inc
out
jg
in
shll
pop
sqrtps
lea
cmp
sub
ds
or
leave
popf
aam
add
dec
push
jmp
push
pop
cmpsb
cwtl
inc
dec
mov
rcll
jo
mov
loop,pt
enter
mov
fwait
add
xor
add
push
ds
xchg
xor
pop
clc
and
dec
adc
lods
popf
and
jmp
into
or
sub
mov
fcoms
lret
pop
pushf
mov
pop
daa
lahf
popf
xchg
mov
jle
pop
lret
mov
cs
out
mov
push
ss
dec
mov
lahf
and
sub
dec
cmpb
push
pop
sbb
or
mov
pop
mov
mov
inc
arpl
sbb
inc
cmpsl
pop
sbb
sahf
pop
cmp
cmp
in
jle
rorl
and
adc
into
jl
push
popf
xor
fdivp
and
xchg
fidivs
mov
popf
iret
adc
xor
stc
xor
out
sbb
mov
jle
xor
jge
xchg
mov
push
adcl
iret
fisubs
xchg
xor
jl
mov
out
arpl
stc
aas
push
sbbl
das
fsubs
add
pop
inc
sbb
mov
imul
adc
xor
and
les
xor
push
jbe
sbb
dec
outsl
daa
add
lahf
sub
test
loopne
mov
enter
push
sbb
jns
movl
out
lods
fcmovne
xor
out
test
xor
push
push
and
xchg
push
add
imul
into
lcall
mov
shlb
popa
xchg
jb
aas
sub
mov
inc
adc
cmp
or
xor
jecxz
ljmp
jo
sub
fnsave
sbb
jae
cmpb
jmp
and
test
sbb
push
adc
cmp
arpl
ret
mov
jl
mov
ja
in
imul
movsb
in
pop
das
in
lea
lock
stos
cld
dec
int
and
sub
test
pop
xor
inc
add
stos
ret
jns
sbb
sub
xlat
imul
mov
lods
xchg
inc
cwtl
scas
repnz
aad
adc
dec
xchg
stc
mov
lret
xchg
fildll
andb
jae
in
test
lahf
push
inc
ss
inc
cmp
inc
jbe
push
pop
xchg
jns
out
arpl
das
das
adc
int
jle
out
lahf
andb
hlt
cli
scas
jbe
in
ret
push
xchg
ds
ret
mov
int3
jb
pop
in
aas
push
cld
mov
fldl
mov
cmp
xchg
std
xor
push
mov
dec
gs
js
dec
add
xchg
stos
cwtl
adcl
jle
stos
test
inc
stos
or
ss
jl
shll
lods
fs
dec
mov
sbb
aas
jge
or
cmp
pop
jns
push
out
imul
xlat
pop
and
pop
adcb
mov
fcom
insl
pusha
add
fdivrs
and
movsl
jg
or
dec
sbb
jmp
das
mov
push
imul
fsts
jl
mov
ljmp
adc
fucomp
std
data16
lods
jns
sbb
xchg
adc
adc
jmp
push
lea
add
in
fucomi
mov
adc
movsl
popf
push
xor
pop
mov
mov
jae
sbb
test
insl
sub
or
xor
mov
add
dec
fiaddl
mov
push
mov
js
popf
sti
js
push
loop
cmp
dec
fs
push
insl
xor
or
int
leave
imul
icebp
add
jae
xor
repnz
into
sub
add
arpl
stos
or
add
vcvtss2sd
fiadds
in
insb
mov
in
pop
inc
in
push
inc
fisubl
repnz
iret
adc
adc
push
lret
mov
cmp
xchg
pop
dec
lahf
jmp
push
and
push
lods
adc
pop
cli
daa
mov
nop
mov
jo
and
pop
pop
sub
mov
mov
ret
mov
out
push
js
popf
sbb
push
cwtl
popl
movsb
ret
ficoms
cli
cli
test
mov
adc
inc
addl
aad
pop
stc
mov
mov
int
icebp
inc
mov
stc
xor
push
rcrb
test
nop
ljmp
lret
mov
lods
mov
jo
pop
outsb
push
daa
daa
ds
fisubrl
cmc
or
repz
dec
mov
rorb
xchg
ret
cld
xor
lods
jmp
int3
test
fdivr
add
cmp
ja
cli
push
clc
int
mov
gs
mov
mov
je
or
outsl
gs
xchg
jbe
push
push
push
andb
mov
pop
mov
cmp
xchg
lcall
sbb
adc
icebp
sub
or
mov
add
adc
jle
sbb
das
loop
or
lret
sbb
sbb
mov
and
aaa
sub
sbb
cmc
subl
into
adcb
mov
enter
dec
mov
adc
sbb
lds
outsb
scas
jmp
and
lret
cli
push
push
mov
repnz
jg
xor
js
mov
cltd
jmp
add
insl
ud2
insb
rolb
cmpsb
sub
and
mov
pop
sub
sub
sbb
scas
es
cmp
xlat
and
test
sub
pop
xor
cltd
sub
fmuls
insl
iret
or
add
and
js
jne
js
je
orb
test
sub
mov
mov
outsb
out
ljmp
mov
dec
mov
xchg
cmpsl
call
lcall
push
movsb
push
jp
dec
cld
popa
mov
iret
shl
sarb
or
or
lods
cmp
push
jns
cmpb
or
jl
pop
jmp
inc
push
sub
xchg
fs
faddl
aam
dec
jns
mov
js
dec
repz
rorb
sub
nop
cli
mov
xchg
or
jns
xor
jae
testb
cmp
repz
sub
mov
mov
int3
hlt
js
rcl
cmc
add
ljmp
adc
les
push
ja
sbb
mov
out
je
roll
pop
sub
testb
int
cmp
mov
sar
mov
inc
pushf
jg
mov
pop
cmp
stc
xor
sbb
movsl
sub
outsl
stos
and
mov
cmc
mov
dec
add
add
sub
loopne
adc
hlt
xor
mov
xchg
jnp
arpl
addr16
out
sbb
pop
jle
xor
inc
xor
xor
sbb
mov
inc
mov
mov
sub
cmp
popf
sbb
sub
pop
lret
orb
lret
sbb
mov
xor
mov
mov
mov
fs
mov
pushf
pinsrw
jmp
sbb
aam
ds
dec
int3
divb
popf
jg
jg
mov
int3
imul
inc
sbb
leave
sbb
mov
call
xchg
stos
fstl
jae
ss
pop
cli
loope
dec
pushf
mull
data16
cmp
mov
mov
add
test
lods
xor
add
or
jnp
mov
pop
mov
sub
fbld
and
mov
push
sarb
mov
nop
add
mov
les
or
fwait
pop
test
jns
mov
cmp
jne
addr16
in
pop
sub
pop
sbb
and
dec
mov
pop
inc
pop
sbb
push
and
add
sbb
push
or
dec
arpl
jnp
mov
lods
and
ja
sub
xchg
int
cmp
sub
ret
cmp
inc
mov
cwtl
adc
stos
rolb
stos
mov
push
jnp
or
scas
incl
adc
jnp
xor
pop
xor
dec
lods
add
and
sub
add
push
movsb
test
lock
push
imul
or
test
inc
je
movsb
pop
test
mov
jecxz
out
in
shll
mov
or
clc
xlat
xlat
mov
xor
dec
stos
mov
sbb
sub
cmp
xchg
movsl
sarb
mov
xchg
int
adc
cli
push
gs
add
shlb
imul
mov
cwtl
lds
fcompl
fst
sbb
and
and
shlb
lcall
loope
xchg
scas
jnp
pusha
cmp
sub
jo
lds
wrmsr
sub
sub
test
xor
addr16
mov
jle
movsl
or
test
xchg
subb
cmp
test
fisubrs
ret
sub
sbb
mov
popf
push
hlt
jle
sbb
mov
dec
mov
loope
pop
jmp
mov
pop
jo
enter
pop
push
cvtpi2ps
cld
es
jo
jl
xchg
popf
rcrl
mov
lock
loop
fistl
mov
pop
mov
adc
jo
adc
inc
shr
sub
lahf
js
in
mov
icebp
imul
in
ljmp
or
adc
lret
fistl
jbe
pop
cmp
add
push
movsb
or
sti
lock
push
add
dec
les
inc
popa
jbe
iret
mov
test
push
inc
sbb
daa
call
fidivrl
jno
daa
divl
dec
push
or
fucomi
sub
aas
shrb
dec
sbb
jle
push
pop
cld
mov
adc
sub
push
cmpl
insl
mov
mov
test
lret
add
cs
mov
cwtl
xor
xchg
lahf
ljmp
popf
aas
test
jne
cli
imul
xor
pop
pop
lds
aaa
or
aam
and
inc
xchg
push
lcall
mov
andb
push
jecxz
sbb
int3
xor
call
xchg
jp
rcrb
pop
imul
mov
dec
sbb
sub
std
add
sbb
fmull
dec
push
test
cmp
xlat
jb
stos
pop
jle
fdivr
pop
and
lea
pop
push
cli
push
jne
push
test
jnp
rcr
movsl
pop
sbb
cmp
data16
and
push
repnz
lcall
pop
lock
push
mov
jbe
adc
movb
jo
rorb
inc
pop
or
and
fsubrl
pusha
out
jmp
ret
or
pushw
mov
sub
dec
adc
bound
mov
hlt
scas
sub
or
fimuls
dec
cmp
jbe
cmp
add
mov
mov
sbb
sub
lret
dec
popf
jle
stos
rcr
mov
and
mov
push
cmp
js
scas
sbb
sub
insb
inc
push
pop
leave
adc
arpl
lds
int3
repz
jmp
dec
cld
and
lods
repnz
inc
out
mov
icebp
cmp
fstp
insb
fistl
in
jl
jno
xchg
repnz
dec
out
das
arpl
push
movsb
shll
cmp
shr
cs
pop
mov
movsl
stos
aam
adc
fldenv
daa
push
or
fs
popf
dec
mov
mov
int
negl
jae
pop
ljmp
lahf
pop
orb
mov
sbb
testb
fcoml
jae
mov
imul
cmpsb
std
test
loope
adc
mov
push
orl
push
mov
out
imul
loope
cli
data16
out
xor
aam
and
loopne
mov
sbb
ret
fs
mov
add
jp
mov
test
pushf
sbb
sarl
imul
mov
xchg
aas
arpl
cmpsl
push
call
out
lock
icebp
imull
adc
push
jmp
jg
movsb
mov
pop
jb
mov
ss
shrl
mov
push
inc
test
ret
fwait
pop
or
xor
xchg
lcall
or
mov
push
aas
cld
cmp
cmpb
pop
flds
pop
jo
jg
vmwrite
fcmovbe
insl
rol
mov
int
add
sahf
jg
psubusb
and
stos
xor
mov
imul
outsl
xor
hlt
mov
push
insb
aad
ljmp
bound
gs
into
mov
repnz
dec
fwait
neg
pop
lcall
fld
cmc
pop
sbb
pusha
or
scas
nop
sub
addr16
jbe
imul
push
enter
ss
je
repnz
mov
sahf
int3
shl
jge
sub
sbb
bound
push
inc
loop
mov
cmp
bound
test
xor
aam
cld
xor
imul
mov
cmp
int3
out
lds
ret
lahf
dec
popa
add
sub
pop
imul
mov
push
mov
jno
cli
stc
cmpsb
fs
int3
push
iret
aad
push
lods
jecxz
pop
or
xchg
cmp
test
andl
sbb
sbb
push
inc
mov
mov
lret
mov
and
iret
pop
dec
jl,pt
pushf
mov
ja
lock
repz
js
insw
sub
sahf
or
xchg
sub
xchg
mov
cmpsl
and
pushf
loop
mov
lea
ja
mov
lds
test
inc
das
test
rcll
loope
jge
cmp
push
inc
bound
dec
push
mov
fildl
int
gs
hlt
or
dec
aaa
test
loopne
adc
or
adc
sbb
mov
or
sbb
mov
scas
or
test
popf
sbb
jmp
repnz
push
mov
fisubl
adc
pusha
bound
test
cs
aad
push
decb
cmp
addb
pop
xor
xchg
xchg
loope
jg
dec
pop
sbb
nop
sub
mov
retw
orb
mov
xorl
jns
xchg
lods
sub
mov
sarb
add
mov
push
orl
xchg
cmp
imul
cmp
xor
bound
mov
push
xchg
dec
push
mov
and
push
cmpsb
lds
fsubrl
xchg
ja
imul
out
sbb
mov
xchg
in
mov
mov
jmp
call
stos
inc
repz
pop
add
in
mov
push
fnstsw
mov
push
adc
sbb
jle
call
mov
jbe
andb
xchg
les
or
pop
scas
jne
lock
pop
test
and
jnp
sbbl
test
dec
and
leave
dec
cld
popa
shll
ds
xchg
clc
adc
pop
dec
xchg
aaa
jl
mov
adc
jbe
mov
xor
out
adc
pop
push
rcrl
loopne
testl
adc
ds
mov
jae
or
adc
jl
or
sub
sbb
rolb
add
mov
mov
popf
jmp
aas
cmp
out
jle
jo
lahf
sub
jp
sbb
jne
mov
int3
push
and
xchg
ds
out
xor
out
mov
test
std
or
cmp
aad
dec
or
lock
stc
inc
aas
dec
aad
or
fcmovb
jne
cwtl
orl
mov
jo
mov
xchg
mov
push
fstpt
insb
mov
cmpsb
jle
imul
rcrl
in
fwait
rorb
lret
xlat
sbb
add
cld
add
daa
pop
mov
mov
jmp
sti
ret
aaa
dec
add
or
dec
ja
les
fists
cmpsb
fnsave
rcll
add
fcomps
out
outsl
enter
outsb
fs
dec
add
sbb
and
cmc
stos
mov
outsl
and
shlb
mov
aaa
and
or
loopne
call
cmpsl
lret
mov
in
pop
cmpsb
or
adc
loope
dec
es
mov
and
dec
adc
fucomi
sub
adc
out
jo
jne
imul
lcall
outsl
push
ds
and
out
mov
lea
stc
adc
inc
pop
icebp
sbb
je
out
cs
les
fdivrs
and
lods
sub
dec
popf
inc
lahf
arpl
add
xchg
fmuls
testb
outsl
fnstcw
dec
pop
data16
jbe
jl
out
push
out
adc
inc
shlb
mov
call
mov
scas
mov
or
pusha
cltd
cmp
xor
xchg
in
mov
or
mov
mov
in
and
inc
scas
cmp
push
xchg
jmp
imul
adc
outsb
roll
cmp
out
ss
shl
pop
jg
arpl
xor
daa
jl
mov
cwtl
test
mov
add
pop
xchg
push
mov
out
lret
mov
js
inc
popl
xor
jb
stc
pop
das
add
outsl
iret
ret
insl
pop
test
bound
aaa
cmpl
bound
cmp
lods
loope
push
xchg
sahf
jno
mov
jle
sbb
pop
ja
lea
imul
mov
xlat
or
enter
jge
jge
push
stc
scas
loop
lds
inc
cmp
sub
xchg
and
pop
fcoms
lcall
test
cmp
orb
push
call
out
xchg
jo
mov
and
mov
imul
adc
lds
in
loopne
xchg
movsb
les
pop
and
jge
lods
pop
nop
inc
push
pop
shrl
or
push
lret
test
cmp
and
idivl
xor
add
inc
and
mov
mov
stc
jb
jns
mov
inc
xor
or
sub
xchg
ror
pop
pop
loopne
arpl
add
mov
sub
sub
lret
fcoms
and
scas
imul
mov
in
push
sbb
cld
mov
lcall
les
add
cmp
pusha
xchg
pop
int3
lcall
push
jmp
pop
add
dec
pop
or
dec
popl
dec
jo
aas
mov
pusha
pop
jle
repz
outsl
andl
and
or
mov
test
aas
js
aas
dec
inc
dec
sbb
sbb
mov
addr16
data16
sbb
cmc
fldenv
dec
pusha
jg
pop
lret
fidivrl
les
jbe
sub
mov
jle
adc
in
data16
mov
les
mov
outsb
into
cmc
scas
xchg
popf
add
xlat
sub
jmp
je
stc
adc
mov
inc
test
testb
xchg
mov
dec
lcall
int3
lock
loopne
xchg
sahf
jecxz
loope
jmp
lods
or
cmpsb
jg
jnp
pushf
dec
sar
scas
int3
xchg
xchg
adc
jmp
push
popa
push
in
lods
cmp
das
mov
daa
insb
frstor
mov
push
leave
imul
jae
sti
and
outsb
lods
lea
cs
pop
outsl
bound
xor
and
and
rclb
mov
insl
lds
repnz
sbbb
imul
iret
xor
xchg
lret
out
mov
push
shlb
pop
daa
ljmp
jb
es
or
lds
arpl
mov
mov
sahf
add
mov
pop
jmp
scas
cwtl
jg
iret
stos
lea
test
pop
or
scas
jns
imul
sbb
push
sub
lret
dec
mov
sub
and
jl
push
cmp
aas
pop
mov
mov
xchg
sub
ds
out
adc
leave
jmp
mov
fmull
test
sbb
into
icebp
cmp
jg
filds
xlat
test
je
pop
in
and
andl
cs
sarl
sbb
shll
pop
mov
pop
xor
pop
rol
push
mov
xor
jnp
ffreep
sbb
mov
jp
mov
or
push
add
loope
mov
fildl
out
scas
sub
sub
sbb
decl
dec
jle
ja
sahf
adc
pop
cmp
push
rolb
movsbl
ret
push
xor
daa
dec
jle
mov
lods
es
cmp
faddl
or
jmp
rclb
das
roll
aad
jae
dec
pop
sub
push
es
out
das
mov
pusha
jno
out
pop
pop
adc
lods
iret
sbb
negl
xchg
push
enter
xorb
push
adc
test
lret
sub
add
pop
cmpl
mov
lods
out
insb
orl
pop
in
cmp
cmp
jns
or
in
sub
push
xchg
push
push
nop
dec
pop
shll
xor
in
dec
stos
adc
mov
loope
sbb
nop
inc
leave
pop
mov
stos
subb
pusha
cmp
mov
or
shlb
jno
inc
lcall
sub
and
shlb
bound
push
sbb
mov
fdivrs
pop
mov
in
hlt
pop
dec
les
mov
loope
cmpsl
push
jnp
mov
fildll
fnstenv
xor
stos
shlb
mov
xchg
les
inc
stos
adc
pop
cmp
adc
mov
mov
and
es
frstor
sbb
bound
push
sub
lods
repnz
lock
cltd
cmc
nop
fcmovb
movsb
test
ja
inc
push
mov
ss
push
dec
mov
jb
sbb
fistpll
test
sub
push
popa
test
pop
ret
mov
push
popa
add
stos
mov
push
mov
jle
les
arpl
insl
aaa
bound
jmp
mov
rorb
mov
xchg
fwait
shll
jmp
bound
push
scas
and
mov
mov
ja
aaa
scas
push
xor
sub
out
adc
lahf
outsb
push
pop
mov
ljmp
ljmp
adc
mov
mov
lea
ja
bound
lock
and
mov
stc
inc
pop
add
xlat
shll
std
sub
lods
sbb
cmp
and
push
or
adc
sbb
icebp
out
mov
fsub
dec
xor
sbb
inc
and
out
jmp
pop
jb
xchg
xchg
dec
xor
sub
ljmp
mov
pop
jp
stos
mov
jae
jp
les
stc
fs
mov
adc
push
daa
rcrl
xchg
cmpsb
scas
loope
add
sbb
inc
andb
or
mov
test
inc
rcll
outsl
iret
fs
dec
ljmp
xor
mov
push
les
aas
es
dec
insl
push
cmc
push
xchg
out
mov
pop
mov
int3
xor
clc
xchg
cmp
xchg
dec
cmpsl
lea
inc
aad
subb
shll
mov
jp
sahf
dec
lahf
lret
nop
test
out
adc
nop
jnp
scas
ja
sarl
hlt
lahf
push
ljmp
jae
xchg
sub
pop
mov
das
fcmovnb
jl
int3
cmpsl
loop
imul
loop
xchg
js
call
push
mov
inc
movsl
popa
addb
cli
add
and
mov
jb
inc
mov
jge
cmpsl
rcrl
lcall
mov
repnz
aad
mov
xchg
ror
and
insl
dec
xor
sbb
pop
movsl
xchg
pop
cmc
jo
or
fistpll
inc
mov
icebp
adc
mov
mov
daa
call
xchg
loop
mov
fnsave
inc
xchg
arpl
mov
mov
fistpll
ret
adc
stos
inc
pop
lahf
pcmpgtb
xor
pop
cld
or
sub
shlb
fs
repz
fwait
jmp
mov
popf
adcb
addb
mov
outsb
and
subl
cs
mov
aam
sub
pop
pop
and
push
hlt
pop
jae
push
repnz
add
lods
test
and
push
inc
call
pop
push
aaa
jmp
fiadds
inc
jb
mov
in
adc
mov
sub
cmpsb
cmp
out
scas
lods
mov
or
aad
aas
aad
pop
inc
mov
repz
jmp
push
in
cmp
cmp
cmp
dec
mov
sub
or
push
pop
ss
outsb
sbb
mov
inc
iret
bound
jns
rol
fsubrp
je
divl
jae
cltd
sbb
leave
icebp
xchg
mov
xchg
mov
pushf
rclb
pushf
js
mov
arpl
mov
dec
cmp
mov
fidivrl
add
or
push
sub
scas
mov
test
loop
shrb
xchg
jmp
inc
xchg
ficoml
ljmp
jae
scas
popf
or
jp
sti
inc
aad
lret
jne
in
out
packuswb
xor
pop
mov
pop
push
push
aad
inc
cwtl
add
xchg
pop
add
sti
jne
js
inc
insl
xchg
mov
addr16
mov
ficompl
aas
and
dec
xor
pusha
bound
out
scas
xor
test
cmpb
pop
push
cmc
inc
lods
es
int
insb
nop
lea
in
add
push
scas
jp
push
mov
pop
dec
fbstp
lods
add
and
addr16
aas
imul
repz
dec
ljmp
adc
jmp
lods
jg
ss
jl
inc
push
leave
push
xchg
and
xchg
xchg
jnp
mov
cmp
stos
dec
nop
int
out
dec
or
insl
in
inc
dec
mov
aas
mov
jge
movsb
pop
negb
cmc
js
popf
push
push
sbb
add
push
imul
shl
sub
dec
mov
lock
into
shl
xchg
xchg
fwait
sub
mov
mov
aad
ret
lock
es
lea
mov
mov
pop
jmp
jno
adc
shlb
filds
inc
sub
mul
inc
mov
shlb
inc
xor
or
sbb
testl
xchg
adc
aas
imul
insl
cmp
insb
adcb
inc
imul
mov
mov
sbb
pop
shrl
pop
lds
in
cmpb
mov
add
call
pop
enter
push
test
sub
xor
pop
push
lods
fsubrl
dec
xor
cwtl
jbe
loope
sub
xchg
sbbl
cli
shlb
popa
or
rcr
add
cmp
adc
popa
fsubl
daa
nop
imulb
addr16
popf
xchg
outsb
push
int3
jecxz
cmp
inc
sub
jo
out
data16
and
inc
adc
xor
lcall
inc
imul
pop
jo
nop
sub
lock
add
pop
or
sbb
jno
jmp
in
rolb
jmp
shl
mulb
sub
jge
mov
inc
and
xor
inc
imul
inc
idivb
shll
push
fs
shl
and
sti
daa
popf
fs
mov
cmp
dec
scas
pop
jecxz
add
in
xchg
lea
push
lods
mov
xchg
push
xchg
push
cmp
ss
xor
out
mov
cmc
mov
and
xor
dec
shlb
out
fcmovnb
call
test
mov
sti
fmull
stc
push
pop
sbb
insl
bound
repz
ret
mov
jae
fisubrs
gs
mov
sti
test
mov
add
push
pop
or
cmp
scas
xchg
pop
bound
sub
clc
inc
inc
jne
jmp
pop
repnz
outsb
or
rclb
xchg
dec
push
sbbb
xor
sbb
mov
add
lahf
jp
and
stc
inc
fwait
push
enter
jmp
pop
insb
stos
cs
pushf
xor
jnp
iret
cs
push
mov
mov
mov
repnz
or
mov
mov
stc
add
dec
adc
mov
pop
jg
and
dec
mov
rorb
pop
mov
pop
or
xor
xlat
std
es
cmp
daa
in
popa
ljmp
cli
xor
repnz
push
mov
mulb
dec
xor
cmc
pop
pop
int3
or
aaa
mov
xchg
int3
shll
and
dec
enter
std
xchg
cmp
dec
mov
dec
or
es
cs
mov
mov
mov
stc
jno
out
iret
divb
call
pop
or
in
out
repnz
add
insb
bnd
dec
xor
xor
out
lahf
not
test
lods
add
rcrb
push
repnz
aaa
dec
std
in
aas
adc
and
push
push
push
loopne
cmp
push
jle
insl
adc
push
jg
movsb
cli
xor
jne
mov
loopne
lock
xchg
push
push
push
cmp
or
mov
repz
popf
je
and
xchg
lahf
cmp
jle
inc
sbb
imul
push
cmp
stc
dec
or
lcall
jmp
mov
add
xor
cmp
shll
xchg
stos
mov
rcll
mov
shll
cs
mov
in
ffreep
mov
cmpsb
lea
ss
ret
sahf
lret
test
insb
pusha
bound
movsb
add
lret
jae
popa
adc
in
xchg
and
dec
mov
push
push
jp
add
mov
add
mov
imul
sub
mov
cwtl
pop
xchg
popf
popa
popa
enter
and
pop
test
or
xchg
arpl
in
repz
out
popf
imul
shll
jmp
movsl
out
cld
pop
fucomi
push
loope
jae
repnz
sbb
xchg
lock
aad
adc
jg
enter
adc
xchg
adc
xchg
les
pop
mov
call
movsl
xor
push
cmp
fcoml
test
aaa
xor
dec
push
popf
cmp
push
das
lret
mov
je
pushf
add
sub
or
add
or
jg
test
outsb
pop
stc
daa
xchg
mov
loop
adc
add
mov
sub
cli
push
or
mov
dec
in
in
lret
cmpsb
cs
xchg
pop
ljmp
bound
arpl
xor
in
push
push
pop
in
push
pop
hlt
add
jle
out
movsb
jo
faddl
adc
adc
jno
mov
or
fwait
pop
cli
push
clc
sbb
jl
mov
inc
push
sub
fwait
jnp
jbe
sub
std
cmp
and
fnstenv
jbe
bound
imul
cli
push
mov
xchg
inc
adc
movsb
int
stos
rclb
ja
into
and
sbb
test
inc
daa
enter
in
dec
adc
jne
sub
fists
mov
rorl
pop
add
leave
jl
cmp
in
mov
das
or
push
insb
pusha
jno
sti
add
cmp
aad
dec
push
imul
sbb
inc
mov
aad
in
mov
fdivs
bound
pop
mov
push
popf
divb
and
add
push
popf
imul
push
int3
icebp
sti
gs
mov
push
sti
pop
ljmp
popa
stos
adc
test
fnsave
mov
orl
outsl
imul
fs
dec
sahf
scas
cmp
xor
roll
mov
leave
mov
aas
enter
pop
or
adc
mov
dec
adc
lods
mov
fistpl
jbe
clc
aaa
jmp
lret
cmp
xchg
and
cmp
clc
lea
data16
xchg
cmp
xor
nop
adc
ficoms
cmc
lds
pop
inc
inc
scas
fsubr
sub
pop
or
fwait
outsl
xchg
xchg
call
popa
lret
out
je
out
and
cld
and
pop
scas
test
outsl
or
fisubrl
xchg
leave
sbb
xchg
in
and
lods
adc
insb
xchg
jae
shrl
xchg
popa
sti
mov
xor
jmp
jge
ljmp
imulb
push
and
lahf
adc
pop
adcb
adc
aad
add
inc
pop
popa
jp
les
inc
sarb
xchg
dec
orb
cmp
inc
mov
pusha
dec
cmp
shlb
mov
imul
cli
pusha
movb
and
ret
lret
adcl
mov
bnd
or
aam
test
outsl
idiv
fimull
pop
iret
cmp
jmp
lahf
cwtl
cmpsb
loope
stc
pop
sahf
dec
cmpl
cmp
adc
int3
sub
lret
mov
mov
test
adc
xor
adc
pop
lcall
jo
imul
mov
xorb
inc
pop
cmpb
notb
push
xchg
jbe
scas
stos
scas
xchg
ljmp
push
push
or
or
add
mov
sahf
ret
push
and
hlt
jae
adcl
mov
aas
jmp
fsubrl
sub
subl
mov
push
mov
sub
xchg
mov
xchg
xor
dec
in
adc
addl
aad
insl
sbb
rorb
std
push
fcoml
xor
inc
loope
int3
arpl
jge
cmpsb
cmp
das
cmp
add
ja
cli
or
hlt
jl
loopne
xchg
fsub
lock
mov
xor
ror
or
xor
ja,pn
jbe
xchg
inc
cmp
addb
gs
bound
insl
data16
lea
stos
int3
jb
jge
outsb
or
out
and
pop
inc
dec
pushf
cmpsb
in
add
adc
std
mov
cmp
push
mov
lock
add
daa
adc
jmp
mov
mov
call
loop
lea
inc
popa
jns
in
push
xor
sbb
aad
mov
pop
dec
fwait
push
call
outsl
ret
push
std
imul
adc
decb
das
push
jnp
test
call
push
mov
jbe
jnp
in
call
ficomps
dec
add
xchg
inc
insl
subb
movsl
test
nop
xchg
sbb
push
stos
push
dec
pop
js
inc
cmp
mov
enter
cmp
mov
xlat
in
jp
jne
shrb
xchg
push
insb
push
mov
push
or
push
jno
jne
cmp
mov
dec
fstl
data16
fstps
inc
mov
sub
repz
inc
xchg
jbe
popa
inc
add
leave
lahf
in
xchg
push
mov
inc
mov
push
or
or
mov
add
sbb
xchg
movsb
sub
dec
ss
pop
add
sbb
jecxz
sub
mov
add
jne
aad
push
fildll
enter
test
xor
mov
call
repnz
inc
loop
stc
xor
mov
jno
in
cmp
insb
mov
pop
pusha
and
cmp
cmp
mov
push
sbb
mov
mov
mov
jl
push
jnp
mov
cmpsl
pop
mov
xor
leave
ror
or
popa
insb
mov
jae
mov
lds
mov
lods
dec
lea
jge
push
jmp
and
pop
xor
out
sbbb
pop
call
imul
mov
es
add
or
push
jnp
sahf
inc
push
shrl
ljmp
xchg
jbe
dec
adc
or
out
cs
cmovns
loope
js
outsb
jp
movsb
mov
in
enter
into
rcl
jnp
rclb
aas
jbe
mov
mov
xchg
mov
aas
xor
dec
sbb
std
mov
rcrb
xor
lock
add
ljmp
ja
sahf
push
repnz
mov
mov
inc
jo
loope
icebp
jl
cmpsb
xchg
mov
and
adc
in
sbb
inc
adc
jp
xchg
pop
sbb
int3
fsubrs
loope
sahf
mov
mov
jecxz
mov
roll
inc
fdivrs
cmovle
push
push
push
mov
ja
repnz
iret
movsl
xor
fcomps
popf
dec
imul
ljmp
loopne
jbe
jle
adc
sbb
push
cli
imul
mov
sub
mov
js
cmpsl
push
cld
les
cmp
mov
mov
push
fldcw
mov
and
xor
stos
push
std
mov
push
jp
roll
mov
dec
test
scas
dec
and
xor
inc
mov
pop
jne
mov
xchg
push
out
mov
jbe
mov
mov
ds
insl
jns
dec
mov
stc
adc
mov
cmpsb
insl
jno
fbld
mov
cmp
mov
inc
jno
mov
push
sub
js
dec
jecxz
mov
incl
pop
je
push
fwait
add
jnp
sti
add
xchg
test
xchg
or
bound
data16
jae
shlb
push
xchg
jle
xchg
lods
in
dec
mov
xchg
test
jnp
sub
push
fimull
popf
test
aam
pop
int3
sahf
dec
fmuls
test
sti
scas
mov
dec
jp
xor
sub
out
imul
in
mov
add
mov
or
xchg
push
scas
mov
cmp
cmc
push
cmp
or
addr16
lods
adc
out
and
icebp
dec
inc
lcall
testl
push
sub
jmp
push
jmp
mov
and
fisttpl
jnp
xor
sbb
repnz
in
push
popa
rcrl
or
xchg
lods
mov
lret
sub
stos
fcomps
push
sbb
imul
adcb
push
xor
filds
xchg
in
inc
pop
outsb
sbbl
push
notb
and
leave
push
fisttps
sub
xchg
or
fs
hlt
insb
cmp
stc
mov
ffree
mov
dec
xchg
je
fsubrs
cmp
sub
fwait
push
dec
pop
in
or
lods
xchg
repz
repnz
jp
fisubs
jbe
dec
adc
addb
clc
outsb
aas
mov
adc
push
push
inc
fisubrs
mov
push
push
sahf
dec
scas
push
pusha
inc
sahf
xor
push
mov
popa
js
fcmovu
push
xor
sub
ss
jmp
sub
frstor
adc
cli
stc
out
jnp
mov
xchg
in
and
mov
jnp
in
repz
push
add
stc
scas
ret
jmp
out
addr16
inc
jmp
ja
je
dec
adcl
adc
fmull
das
mov
xchg
aam
sbb
xchg
dec
sarl
ds
subl
lods
mov
mov
push
test
insl
jbe
leave
iret
xor
push
cmc
cmp
add
ficoms
mov
lcall
add
sub
lds
cmp
fcoml
scas
jmp
jo
lret
fmull
les
mov
dec
mov
xchg
fsub
call
test
int3
jo
aam
mov
adc
mov
iret
sub
or
jo
push
in
fnstcw
push
inc
jno
pop
jae
xchg
in
lds
mov
out
add
ret
jbe
adcb
add
xor
or
cld
addl
idivb
push
nop
adc
aaa
out
mov
dec
sub
aam
popf
repz
dec
dec
dec
lea
outsb
rorl
roll
mov
cmp
ljmp
adc
cltd
dec
clc
js
in
aad
test
imul
pop
dec
lods
test
nop
adc
repz
push
and
jle
push
lahf
xor
shll
pop
and
insl
sbb
addr16
test
push
lds
pusha
stc
jecxz
inc
cs
sbb
mov
shll
pop
call
mov
hlt
sbb
xor
ss
sub
popl
mov
cmp
and
rorl
adc
imulb
repz
dec
and
gs
mov
push
in
imull
mov
negb
imul
loopne
out
pop
mov
lds
les
and
popf
and
rcrb
arpl
shlb
or
std
gs
pushf
pop
lret
mov
jns
mov
roll
ss
and
mov
jae
or
ja
sbb
out
sbb
cmp
xchg
test
sub
pop
aam
jno
clc
or
dec
ret
cli
xchg
or
outsb
std
dec
daa
push
fstpt
pop
popa
adc
mov
jmp
pop
in
and
adc
sahf
aad
shlb
inc
xchg
in
jg
or
aam
loope
pusha
jg
lcall
jp
dec
addb
pop
dec
jns
call
lods
test
jle
jo
sub
push
call
notl
sub
inc
popa
xchg
mov
enter
out
jge
clc
push
pop
mov
and
inc
mov
call
sti
and
and
add
xchg
lea
out
idiv
add
mov
mov
inc
cs
mov
cltd
and
push
out
pop
es
ja
xchg
stos
dec
stos
fdivrl
sahf
jecxz
inc
cmp
imul
dec
cld
test
sub
orl
mov
mov
outsb
mov
fmuls
fstl
out
mov
mov
sti
add
cmp
cmpsb
leave
cmpsl
jnp
int
pusha
jmp
sbb
hlt
and
gs
lcall
loope
into
add
call
in
jmp
in
push
or
sbb
pop
xlat
push
xchg
adc
int3
out
shll
push
lock
xlat
fsubs
adc
mov
sub
add
cmp
mov
adc
enter
mov
push
pop
addl
into
fimuls
fcompl
push
sbb
xchg
jne
and
fnstcw
cltd
adc
mov
out
and
incb
jp
inc
dec
decb
xchg
xor
cltd
xor
push
dec
or
mov
cmp
das
inc
and
and
xchg
mov
nop
test
mov
aad
fistpl
sub
push
data16
xor
insl
cmp
aaa
shlb
divb
and
cmp
les
lahf
insb
ret
inc
in
out
or
mov
and
adc
mov
xchg
daa
ret
rclb
shll
fildll
adc
cmpsl
push
lret
or
mov
mov
pop
js
jb
arpl
and
leave
pop
repnz
dec
and
outsl
repz
jl
imul
lahf
pop
jmp
lcall
jb
mov
dec
sub
arpl
push
repz
sbb
std
testb
icebp
jns
arpl
cmp
jo
retw
xchg
scas
xchg
mov
mov
pop
cmc
loopne
add
into
xchg
out
push
sub
test
dec
inc
xchg
dec
cs
jo
pop
sbb
push
mov
das
jg
pop
lds
adc
test
and
data16
cmp
add
xchg
sbb
adc
gs
jnp
sub
push
dec
jae
sbb
adc
pop
clc
or
sub
sub
call
cmp
inc
mov
jecxz
out
mov
in
popa
popf
jl
mov
cs
cmp
push
rcll
pusha
repnz
jl
mov
les
and
xor
dec
ret
pop
mov
dec
xlat
dec
jmp
jle
push
push
cmp
xor
std
pop
fnstsw
out
sub
hlt
cmp
outsl
xchg
mov
pop
inc
inc
jae
mov
xlat
cmp
shl
sub
push
or
test
push
mov
mull
test
fsubl
or
and
jns
dec
inc
jecxz
aam
mov
xchg
das
cmp
fistl
fidivl
cmp
outsl
mov
or
cmp
inc
iret
mov
mov
lds
dec
pushf
sub
inc
lcall
xchg
cmpsl
imul
aam
sbb
adc
push
loope
jge
clc
aas
xlat
jbe
lods
nop
sub
loope
lret
aad
xor
pop
ret
imul
repnz
lret
repnz
adc
adc
sbb
push
cmpsb
xor
pushf
sbb
and
js
pop
xchg
fsubp
cs
inc
add
int
out
sbb
inc
sti
lcall
test
sbb
out
sub
pushf
jg
sti
arpl
mov
push
ds
jle
stos
mov
aaa
or
jecxz
mov
or
xchg
fldl
insl
lcall
jns
or
mov
mov
jnp
loope
out
pop
jae
xor
into
cwtl
xor
mov
jg
jp
rcrl
cmp
insb
jo
es
out
cmpsl
lretw
adc
mov
mov
xchg
push
add
add
push
idivb
xor
movl
insl
rcr
imul
push
fdivrs
es
jle
inc
shl
in
repnz
jne
pop
mov
dec
lcall
sbb
popf
mov
pop
mov
loopne
das
repnz
clc
insb
push
and
mov
dec
icebp
daa
jae
test
stos
mov
popa
xchg
xchg
mov
out
dec
dec
and
dec
inc
js
pushl
and
fcoml
subl
pop
adc
stos
jge
lahf
addr16
jo
or
int3
int
fstpl
xor
test
cli
shlb
xchg
cld
sub
in
mov
cli
loope
in
sub
xchg
and
outsl
cld
mov
mov
xor
stc
dec
dec
jb
popa
pushf
cmp
adc
xchg
jnp
sbb
test
inc
and
callw
inc
scas
pusha
ss
enter
fst
inc
in
and
mov
jmp
or
dec
cwtl
or
or
push
dec
sub
cmp
cmp
sbb
ds
dec
inc
add
in
mov
lds
orl
or
add
sbb
push
sbb
lea
lret
mov
mov
mov
int
mov
pop
loop
rcl
mov
xchg
jo
pusha
idivl
outsl
dec
repnz
xor
push
rolb
jl
sub
mov
xchg
fsubr
gs
jae
or
sahf
or
roll
sahf
fldcw
leave
dec
inc
and
js
enter
or
mov
movsl
xor
sub
scas
or
std
xchg
mov
cmp
scas
mov
fldcw
push
inc
out
fmull
shlb
pushf
dec
jge
addb
mov
push
dec
xchg
loope
sar
imul
hlt
mov
mulb
inc
mov
xchg
cmpsb
loope
nop
sahf
lret
in
rclb
aas
fcompl
stos
mov
adc
pop
push
xchg
out
rcl
jbe
dec
lock
or
cmp
test
mov
popa
fbstp
mov
push
mov
in
lods
daa
pop
adc
ljmp
adc
mov
fisubrs
jo
cmc
mov
dec
jle
xorl
ljmp
adc
mov
shlb
loopne
dec
in
call
rcr
dec
scas
popl
imul
in
cmp
cmc
shr
das
test
push
mov
or
sbb
sbb
fxch
shlb
ja
dec
fs
and
push
inc
xchg
cmpsl
or
out
sbb
jecxz
ret
sub
inc
in
fisttpl
ror
xchg
inc
popa
cmp
jnp
hlt
aam
xor
add
lock
xchg
iret
xchg
icebp
scas
inc
out
dec
push
jg
jb
and
push
or
push
adc
adc
jg
push
pop
in
call
js
mov
out
jmp
ss
inc
movsb
int
pop
ds
pop
dec
int3
jle
pop
repnz
aad
mov
out
outsl
iret
push
jae
repnz
sti
ficoms
int3
popa
xchg
js
mov
dec
jl
lret
popa
in
sub
pop
das
ret
leave
movsl
or
aam
loope
ljmp
inc
inc
jns
cs
add
js
sbb
pushf
lods
or
and
aam
add
ja
pop
aas
xor
imul
inc
jae
fstpt
dec
sbbb
mov
gs
daa
jne
loope
movsb
adc
inc
or
in
popf
bound
dec
or
loopne
jne
xor
lcall
mov
int
pop
xchg
jne
pushf
jmp
sub
std
cmc
lods
pushf
mov
dec
adc
push
out
loop
cmpb
out
dec
fwait
xor
mov
cli
inc
push
or
mov
insb
scas
stos
mov
jns
ja
pop
leave
adc
mov
sub
or
cmpsl
sbb
xor
call
mov
out
push
jecxz
lahf
insl
sbb
mov
enter
inc
repz
ljmp
idivl
add
insl
gs
add
aad
aas
mov
cmp
les
push
enter
shlb
and
leave
xor
push
mov
pop
sub
and
pop
xor
into
daa
ror
mov
test
sbb
or
inc
pushf
iret
xchg
mov
aad
mov
in
jp
ds
push
pop
sbbl
cs
test
push
in
loop
mov
pop
out
dec
out
xchg
cmpsl
int
fs
or
sub
jp
aad
pushf
add
sub
dec
lock
mov
pop
stc
dec
push
pop
sti
inc
scas
scas
or
or
mov
orb
push
cmp
add
lahf
xchg
cld
test
jo
das
in
cmpsb
testb
inc
and
xchg
fcmovb
push
adc
sbb
aas
jae
mov
les
cld
adc
jge
dec
add
push
jb
les
pop
hlt
add
inc
sarl
xchg
ss
sbb
mov
adc
cmp
fistpll
mov
stos
cmp
sub
mov
jmp
sbb
sbb
pusha
dec
test
push
inc
clc
cmp
dec
in
testl
mov
mov
add
popa
mov
push
jnp
ret
jle
inc
cmpsb
cmp
and
je
repz
fistl
sub
clc
mov
outsb
stos
jecxz
or
mov
jne
xor
popl
lcall
inc
dec
dec
mov
into
loop
cwtl
xor
ss
fsubrs
cmp
xchg
xor
stc
add
inc
push
es
in
int3
ret
int3
lret
sbb
adc
mov
xor
std
lods
in
fisttps
jp
cmp
jne
push
push
cmpsb
insl
call
stc
jbe
cs
sub
add
or
push
lahf
mov
sbb
and
xor
cmp
xchg
cmc
adc
xchg
jne
gs
dec
daa
adc
repnz
add
daa
pop
mov
push
pusha
inc
pop
out
mov
mov
jb
in
ret
addr16
adc
test
sbb
adc
inc
pop
bndstx
hlt
mov
pushf
jb
xor
pop
sub
loop
dec
and
dec
lret
inc
loope
push
mov
mov
mov
sbb
inc
pop
mov
negb
dec
hlt
xchg
test
mov
mov
jo
nop
xchg
xchg
xchg
test
adc
push
sub
cmp
outsb
sarb
flds
add
xor
in
or
mov
or
adcb
scas
sbb
loope
jg
xor
mov
add
sahf
adc
inc
xchg
enter
jbe
in
pop
pusha
fildll
mov
add
pop
fsubp
dec
xchg
adc
xor
orl
out
jbe
inc
mov
pop
std
in
arpl
out
cltd
mov
rcll
pop
shlb
lahf
sarb
pop
stc
pop
sub
sub
xor
sbb
lea
fistl
push
outsl
dec
mov
rorl
or
push
shlb
mov
mov
adc
lock
or
mov
mov
daa
or
popa
and
inc
dec
jb
sub
lock
mov
mov
add
mov
in
jbe
dec
jno
sbb
cld
mov
js
lea
sbb
icebp
push
es
popa
repnz
or
movsb
imul
push
jno
push
sbb
jnp
mov
subb
das
les
daa
add
and
loope
addl
pusha
mov
test
out
hlt
leave
dec
ljmp
addb
ss
push
pop
xchg
lahf
inc
inc
mov
out
cltd
mov
fwait
test
les
and
inc
in
ficompl
je
test
push
jecxz
inc
fisttpl
test
sbb
lret
out
clc
inc
inc
cmc
add
shrl
je
push
jecxz
dec
outsl
in
repz
or
repz
iret
nop
and
jmp
sti
lods
xchg
or
test
and
in
lret
lds
cmp
inc
push
sti
clc
out
out
in
jo
insb
aaa
les
push
std
adc
shll
jb
sbb
cmp
cmc
leave
jecxz
rorb
or
pushf
lds
xchg
fsubrs
mov
in
scas
out
push
ljmp
push
push
shl
int
lds
data16
cmp
xor
mov
clc
aad
repnz
leave
or
lea
jno
cwtl
sbb
es
jmp
pop
sbb
fdivrl
jnp
call
lods
pop
roll
test
lods
cmp
int3
iret
iret
das
scas
ss
or
out
mov
jae
addb
mov
test
xor
jnp
test
add
std
lret
mov
xchg
and
sub
push
imul
jle
xor
or
lea
jae
subb
fwait
sbb
inc
lds
movsl
movsb
lea
movsb
mov
sbb
ss
stos
les
lods
jo
shrb
and
or
dec
push
cltd
jp
mov
and
out
push
jns
sbbb
mov
ds
mov
lcall
mov
fwait
aam
cmp
das
cli
or
xchg
xchg
insb
mov
or
inc
jne
push
aad
addr16
cmp
xchg
fs
or
outsl
pop
gs
sub
sub
testl
in
add
xchg
jle
sub
je
push
lock
je
outsb
or
or
test
sub
fsts
jmp
cmp
push
push
fwait
mov
or
mov
pop
dec
pop
mov
repnz
addr16
xchg
stos
lods
lret
pushf
xchg
xchg
xor
sti
or
fs
inc
ja
rol
mov
je
clc
fisubrl
out
sub
cld
push
dec
adc
shlb
pop
lcall
mov
or
and
mov
push
rorl
movsl
pop
mov
push
pop
mov
push
pop
pop
push
and
ds
jp
push
push
lds
repnz
shlb
xor
clc
aad
pushf
lcall
lret
fists
shr
ret
xchg
imul
cltd
xchg
pop
jl
inc
add
arpl
inc
push
bnd
push
dec
pop
stc
or
or
adc
arpl
push
mov
jbe
enter
jnp
adc
sahf
in
sahf
pusha
les
shl
arpl
and
or
ds
xor
or
mov
jge
and
xchg
sbb
iret
push
mov
sahf
js
xor
pop
push
sarb
mov
inc
loop
and
mov
dec
pop
pop
mov
inc
xor
ljmp
loop
subl
mov
jne
push
popa
jnp
sub
cmpsb
add
test
dec
in
aad
or
lcall
xor
gs
cld
pop
and
cmc
jns,pn
mov
ja
dec
add
inc
jmp
mov
das
loope
fnstcw
movsl
mov
in
scas
xchg
negl
insb
cmpsl
sbb
or
fistps
jle
scas
jge
leave
pop
xchg
mov
std
leave
nop
adc
cmpsb
add
movsb
add
loope
ret
xchg
loop
or
fwait
dec
pop
sbb
lds
std
jmp
insb
subl
or
add
add
mov
mov
outsb
lret
dec
push
add
fstps
push
shl
mov
mov
fistps
pop
xchg
pop
test
pop
jecxz
test
fmuls
scas
lret
sti
sbb
xor
in
out
dec
adc
mov
sub
nop
cltd
adc
jo
pop
sub
adc
push
push
sbb
mov
imul
loop
pop
jne
lea
and
outsl
cwtl
mov
cmp
es
lahf
add
gs
mov
xchg
jmp
or
sub
xchg
lods
mov
xchg
sbb
jp
xchg
test
and
insb
sbb
aad
mov
ret
int3
cmp
xchg
fisttpll
rcll
fisubrs
pop
dec
out
cmp
sub
mov
jl
cmp
aam
sub
mov
push
ds
orb
dec
sub
sub
clc
outsb
lcall
dec
outsl
mov
or
shlb
ret
adc
xchg
lock
push
mov
sbb
jbe
mov
jle
in
cmpb
cli
insl
jmp
shlb
mov
dec
mov
push
pop
xorb
inc
add
cmp
shll
mov
xchg
or
pop
mov
adc
pop
mov
stc
push
xchg
lahf
dec
xchg
inc
inc
sbb
adc
xchg
add
cmpsb
mov
xlat
in
es
jns
mov
pop
stos
lds
xchg
jg
cmp
xchg
adc
sbb
iret
pop
test
enter
inc
adc
sub
inc
mov
push
xor
adc
lock
xor
jo
sbb
fucomp
outsl
idiv
pop
inc
into
lea
into
retw
cmpsl
xchg
xor
in
sbbb
les
movsl
bound
shrl
dec
ficompl
fsubr
movsl
pop
mov
jb
xor
xchg
dec
or
cmp
jne
jne
sub
inc
sub
inc
icebp
push
mov
pop
ret
vmread
and
cld
pop
pushl
pop
jge
and
push
jno
or
test
jl
add
aas
add
jl
mov
or
movsb
push
pop
daa
cmp
mov
mov
les
mov
lret
rclb
inc
flds
mov
mov
rcrb
clc
movsb
xor
xchg
xor
sub
xchg
mov
mov
movsl
xlat
add
inc
mov
cwtl
mov
ss
push
cmp
jmp
out
pop
pop
rorb
addr16
gs
popf
fbstp
ljmp
shlb
mov
je
pop
lea
mov
fisttps
jmp
xchg
xchg
sbb
in
jle
ret
xchg
repnz
xchg
sub
mov
inc
andb
lret
arpl
sahf
jge
je
mov
movsb
sbb
dec
scas
ja
clc
int3
loop
mov
or
push
loopne,pn
ret
shrl
out
sahf
cmpb
add
rolb
mov
stos
shll
mov
je
push
lea
pop
cltd
sub
and
mov
and
add
sti
fisttpl
aam
jne
dec
lret
adc
int3
adc
das
jle
mul
ficoms
mov
repnz
pop
push
lock
and
icebp
sbb
in
xor
jp
and
sti
adc
mov
loopne
adc
mov
sbb
fdivrs
lea
aas
pushf
enter
outsl
out
sub
cltd
outsl
sub
lods
cli
adc
stos
xchg
sbb
or
lret
or
mov
hlt
sub
in
aaa
js
jae
mov
inc
add
stos
jg
sbb
xor
sahf
mov
mov
shr
or
jle
les
add
mov
fimull
pop
jo
idiv
sbb
pop
sub
xchg
lds
or
or
js
test
fadd
imul
mov
aam
stc
cltd
inc
fmull
sbb
mov
jp
ja
fdivrl
jae
add
jg
sub
ja
pop
mov
push
mov
lret
sbb
das
sbb
fnstsw
push
sbb
mov
or
aad
xchg
loopne
cs
cmpsb
jbe
ret
sti
in
and
push
mov
pop
push
test
push
jo
ret
xchg
bound
mov
fistl
jnp
stos
fisubrl
lcall
push
push
divb
repnz
xorl
cmpsl
fsubs
les
and
jnp
mov
cmpsl
out
scas
pusha
imul
or
testb
ficompl
and
xor
fcmovnu
dec
inc
insl
dec
mov
stos
data16
mov
fbld
or
scas
mov
ja
dec
jbe
loope
adc
jl
inc
pusha
rcrl
add
sarb
iret
xchg
cmpsl
aas
loop
lods
aam
xchg
sbb
lea
jecxz
lret
test
enter
cmp
xchg
sbb
ss
xchg
lods
or
gs
sub
push
aam
dec
rorl
push
popf
or
fbld
or
std
mov
mov
cs
gs
stc
inc
int
shlb
aas
cltd
pop
jmp
jbe
test
cmp
and
sbb
cmp
imul
add
push
out
lods
bound
mov
push
es
popf
sarl
fcompl
cmpsl
mov
inc
scas
or
add
add
push
vshufpd
push
mov
nop
lods
push
lods
shrb
mov
repnz
inc
push
mov
nop
add
cmp
push
xor
es
mul
nop
pop
fadd
mov
and
popa
rcll
sub
jmp
push
arpl
movsb
es
inc
cli
dec
jp
sbb
test
sub
add
add
push
and
jg
pop
push
icebp
int
mov
dec
data16
push
dec
sahf
insb
testl
xchg
insl
stc
aas
cmp
jecxz
mov
cli
pop
ljmp
sarb
and
into
inc
push
pop
push
lret
in
mov
cmpsl
outsl
out
xchg
cwtl
cli
dec
lret
mov
addl
jno
cmovg
adc
mov
add
mov
push
cld
inc
adc
insb
push
sub
pop
adc
xor
scas
add
lock
push
add
adc
xchg
add
push
inc
sbb
xchg
xor
outsl
lcall
add
jbe
jecxz
jbe
cmp
or
pop
fistps
fisubl
sbb
cmpsl
cmp
add
icebp
jmp
or
push
data16
cli
cli
shrl
mov
into
fadds
jnp
filds
insl
test
cmp
lret
mov
mov
sbb
in
fnsave
enter
dec
inc
pushf
cmp
and
xchg
xchg
sub
jge
or
mov
xor
or
push
das
push
xor
fstl
push
mov
sahf
mov
cmp
scas
xchg
or
cmc
in
xchg
into
repz
arpl
aas
add
js
rclb
jl
mov
push
cli
mov
push
fwait
sbb
ljmp
vmread
cli
movsl
movsl
pop
shl
mov
sub
daa
mov
lods
popl
sbb
mov
mov
mov
das
sarb
into
mov
in
xchg
push
inc
xchg
jne
movsl
insb
adc
dec
dec
roll
xchg
out
das
inc
push
and
repz
mov
sbb
adc
inc
inc
mov
fs
sub
movb
jmp
cmpsb
frstor
push
xchg
jl
das
push
pop
mov
mov
mov
in
fistpl
sub
or
pop
inc
sbb
in
sub
leave
mov
push
daa
or
xchg
jg
mov
movsb
cld
ljmp
sbbl
orb
call
inc
cmpsb
lahf
pop
pop
fnstenv
jbe
sbb
orl
out
sbb
bound
inc
rcrb
std
add
pop
mov
jg
fdivr
aad
inc
mov
pop
pop
xchg
inc
subb
scas
xor
outsb
sub
loopne
inc
and
push
mov
ss
push
insb
out
dec
cmp
dec
xor
fsubp
push
inc
sbb
mov
xlat
lcall
loope
ja
in
icebp
mov
stc
and
nop
adc
mov
mov
sub
hlt
xchg
jmp
scas
inc
mov
mov
mov
mov
jne
out
imul
jl
jle
and
push
mov
fs
and
xchg
sbb
movsb
xor
xorl
scas
mov
cltd
adc
jns
insb
sub
push
push
rorl
pop
and
mov
and
aam
xor
push
lcall
xchg
xchg
mov
shl
xor
adc
inc
jl
push
mov
push
sub
leave
addb
loope
dec
xorb
xchg
fnstenv
aas
in
pop
cmpsl
pop
lds
dec
mov
or
dec
rdmsr
pop
pop
leave
push
or
test
xchg
imul
mov
mov
xor
mov
ret
hlt
xchg
fiadds
pushl
mov
pushf
jne
in
enter
arpl
push
sbb
cs
and
mov
push
sub
lahf
fs
dec
cmc
out
or
cmp
outsl
add
mov
lods
xchg
xchg
or
movsb
push
xchg
or
es
fimull
and
aas
movsb
sbb
cmp
out
push
sub
mov
divb
pop
pop
dec
lods
stc
mov
pop
pop
fldl2t
repnz
add
cld
adcb
jne
test
shl
sbb
mov
stos
lods
inc
cwtl
sub
dec
adc
or
out
cmp
das
cs
shr
push
inc
mov
ret
xchg
mov
jge
mov
xchg
loopne
enter
mov
pop
push
or
das
lcall
std
fwait
jo
xchg
mov
loop
mov
arpl
daa
fwait
lret
imul
xchg
and
xor
outsl
in
test
sub
sub
and
or
popf
mov
push
cmp
cli
jae
dec
jg
mov
push
ljmp
divps
sbb
ljmp
mov
add
ficompl
leave
pop
lods
xchg
dec
mov
lret
adc
mov
and
push
repz
cmp
imul
sbb
movsl
dec
and
sarb
xchg
mov
jb
call
xor
push
sbb
xchg
pop
lahf
add
push
cli
pop
dec
popa
out
lret
add
pop
push
mov
sub
jno
aad
icebp
enter
xchg
pusha
sarb
out
pop
enter
imul
daa
inc
mov
das
add
cld
rol
mull
and
inc
pop
adc
scas
push
rcll
xchg
pop
xor
stos
push
inc
adc
scas
test
pop
cmp
mov
pop
test
inc
in
cmp
movsb
inc
ret
adc
test
pop
lock
adc
and
lock
stos
xchg
dec
adc
aad
je
roll
cmp
jns
push
mov
shlb
dec
iret
call
mov
lahf
in
push
add
test
in
sbb
mov
inc
outsb
xchg
lock
add
push
or
imul
pop
das
rorb
mov
imul
or
or
fs
mov
ljmp
push
jl
and
imul
cmp
cmp
ret
psubw
andb
andb
and
popa
adc
sub
adc
adc
jg
roll
stos
and
sbb
hlt
ret
out
test
stos
pop
je
cmp
or
xor
lods
mov
sub
jge
push
test
mov
push
adc
jns
out
popf
push
adc
inc
xchg
mov
gs
jae
daa
iret
bound
outsl
or
rcrb
sub
repz
and
cmp
mov
cwtl
jno
lret
xchg
fwait
mov
adc
stos
inc
and
cmpb
and
pop
arpl
jb
notl
mov
mov
iret
test
add
mov
xchg
mov
int
ret
and
rclb
insb
push
add
jp
mov
int
cwtl
test
jnp
lahf
nop
xchg
and
shll
xor
mov
sbb
add
or
push
cmp
adc
mov
sbb
jbe
mov
dec
sahf
iret
xchg
sub
add
ret
mov
adcb
jo
iret
add
shlb
ja
sti
dec
int
or
ss
xor
jmp
lods
pop
push
pop
enter
inc
pop
sahf
lea
and
into
shrb
arpl
popa
cmp
add
dec
xchg
jg
and
sbb
xchg
inc
jmp
test
inc
or
sub
out
bound
aam
cmp
pop
imul
sub
sarl
leave
cmpsl
stc
ss
rclb
shlb
test
adc
pusha
push
jp
jecxz
inc
jge
jo
hlt
xor
push
push
or
dec
sbb
fldenv
out
mov
jb
rcrb
mov
push
sbb
repz
lcall
mov
xor
mov
fists
inc
rcr
scas
pop
jb
int3
mov
pop
int
mov
fcompl
xchg
push
lahf
enter
loop
jmp
aas
filds
jmp
int
fcomps
mov
imul
cwtl
and
xor
jae
leave
mov
popa
jae
popf
or
rolb
sub
icebp
jg
repnz
sbb
xchg
jb
enter
std
mov
inc
mov
adc
std
fs
mov
adc
mov
adc
inc
loope
add
pop
ljmp
fisttpll
leave
test
pop
dec
jl
inc
mov
fnsave
inc
jnp
mov
outsb
int
and
and
mov
ja
or
filds
shlb
dec
xchg
pop
insl
xchg
loop
mov
out
inc
es
int3
mov
jg
mov
adc
and
push
mov
mov
push
aaa
sub
and
sbb
fwait
xchg
jl
push
sub
dec
out
stc
in
test
or
mov
rorl
push
nop
mov
xlat
mov
mov
into
jg
add
aaa
jmp
jb
or
jno
jo
push
je
dec
lret
xorb
sub
loop
es
ss
jns
ss
fbld
mov
jae
mov
sbb
push
push
push
les
xchg
mov
mov
sub
and
mov
ret
mov
insb
and
fcomps
nop
cmp
out
xchg
jge
mov
or
js
sbb
xor
lods
cmpsb
cmc
inc
xor
fwait
jge
xor
lahf
dec
rolb
sub
int
dec
lret
and
ret
mov
cmpsl
inc
ds
shlb
ret
push
inc
mov
cltd
push
mov
js
sahf
mov
inc
push
test
push
inc
pop
stos
cmp
loop
cli
scas
mov
jl
lods
lock
jae
inc
out
fdivrs
jg
and
inc
mov
mov
popa
pop
dec
xchg
adc
das
xchg
cmp
pminsw
mov
out
adc
pop
push
out
shll
aad
push
mov
ja
out
orb
jp
hlt
ficompl
xchg
add
clc
fistpl
sahf
xchg
imul
sub
enter
mov
push
jl
cmp
mov
cmp
into
dec
xor
sub
out
jle
popa
dec
hlt
in
lret
stos
lds
pop
xchg
dec
clc
mov
and
mov
sub
call
pop
fnstsw
inc
xor
inc
or
push
and
or
stc
fiaddl
sub
pop
inc
daa
cmp
aas
repz
push
pmulhuw
push
cmpsb
aam
mov
and
sbb
addb
dec
pop
stos
inc
in
sub
inc
rcrb
adc
cmpsb
scas
fidivs
and
fidivrs
inc
fisubrl
shll
das
and
rolb
icebp
inc
cmp
pushf
movsl
lock
aam
out
jo
mov
lret
inc
out
ret
push
out
inc
jmp
xor
lret
fldenv
jmp
clc
repz
or
rcrb
movsl
push
retw
jbe
push
pop
dec
adc
das
jmp
pop
sub
ret
mov
stos
int3
ret
movntps
iret
pminsw
nop
je
sub
push
push
mov
fnstcw
and
add
shlb
lret
cltd
xor
pop
push
cltd
hlt
jmp
adc
js
movsb
xchg
in
inc
insb
lahf
cmp
sti
mov
lea
xor
ret
jmp
cmp
clc
aam
lcall
or
or
test
out
imul
push
mov
lret
test
lock
add
push
jmp
mov
filds
cmp
mov
mov
lcall
mov
add
mov
mov
ljmp
and
stos
inc
add
pcmpgtw
cmpsl
loop
mov
lea
movaps
testl
adc
cmp
out
xor
popa
sti
sbb
cmpsb
imul
icebp
add
push
sbb
ja
pop
inc
jae
mov
add
sahf
mov
inc
cmp
ss
sbb
sahf
mov
roll
xchg
push
mov
dec
inc
mov
pop
ja
add
movsl
test
fs
fucomp
xor
lret
out
pop
aam
push
idiv
cmp
xchg
lret
setg
stc
das
mov
gs
mov
and
and
nop
pop
cmpb
es
cli
lret
cmp
out
cmpb
cmp
aam
push
not
insl
jp
jp
ds
push
jl
testb
sub
shlb
je
addr16
icebp
dec
mov
sub
ds
cmpsb
incb
bound
dec
mov
in
fsubl
insb
pop
int3
cltd
jmp
fnsave
movsb
prefetcht1
jg
popa
mov
cmp
pushf
sub
ret
inc
mov
adc
in
mov
scas
jo
mov
or
jns
mov
sub
cwtl
lret
inc
mov
push
cmp
repz
push
or
insb
int
mov
or
sti
aas
fiaddl
dec
movsl
xchg
inc
loopne
pop
jmp
mov
daa
push
cmp
inc
pusha
ljmp
add
mov
and
mov
jo
pushf
and
xor
cli
push
adc
add
cld
insl
in
out
inc
test
xchg
testb
mov
push
imul
pop
js
psubusb
jl
repz
dec
pop
sub
adc
fcmovnb
in
mov
std
jge
push
popa
mov
imull
inc
sti
sbb
cmc
xor
dec
xchg
decb
xchg
sbb
pop
mov
sub
les
jnp
cs
and
out
stc
lock
add
enter
mov
sahf
lahf
gs
hlt
mov
cmp
aaa
orb
popf
stos
xchg
push
sub
out
cmp
sbb
shll
jnp
dec
mov
xchg
jecxz
es
addb
jecxz
aaa
ret
add
xchg
sbb
jle
or
push
scas
adc
ljmp
xchg
subl
xchg
inc
push
add
nop
mov
sub
xchg
orb
and
pusha
pop
mov
fs
int
lret
and
mov
movl
gs
scas
popf
inc
dec
mov
idivl
ja
andl
aam
lds
fisubrl
test
sub
inc
das
andb
aam
in
aas
das
lahf
pop
sahf
nop
insb
jbe
scas
jl
insb
mov
sub
mov
shlb
add
insl
adcb
subb
out
rorb
mov
cmpsb
sbb
movsb
addr16
mov
push
sahf
das
je
pop
xchg
ja
ret
in
iret
inc
push
pop
int
imul
add
cli
fsub
cmp
sub
dec
xor
les
xchg
test
jb
push
test
bnd
xor
inc
push
mov
aam
or
mov
test
insb
xchg
icebp
sbb
and
mov
test
mov
sbb
loope
imul
repz
pop
lods
mov
rcrl
outsb
jp
dec
fwait
jge
jns
cs
sbb
out
and
mov
jae
enter
push
fists
repnz
sbb
imul
push
jge
xlat
cmp
pop
inc
stos
cmp
outsl
push
sub
test
inc
out
scas
repnz
inc
lods
or
cmpsb
fcmovnu
mov
push
xchg
pushl
lret
daa
pop
lret
test
fs
inc
jle
andb
imul
movsb
mov
and
scas
cmp
out
add
and
jmp
jg
nop
push
xchg
jo
imul
movsb
push
clc
rolb
inc
xlat
jg
shrl
pop
mov
push
jp
pop
cmp
movsl
and
pusha
mov
fstpt
xor
dec
enter
dec
jg
or
aas
testl
mov
xchg
test
mov
pop
sbb
int3
call
insl
aas
test
clc
mov
mov
clc
data16
aad
in
sub
lds
stc
push
mov
out
jno
mov
cmp
and
ja
add
arpl
pop
cmc
andb
push
pop
lds
push
mov
pop
fwait
iret
pop
mov
aaa
lret
addr16
add
add
push
mov
xor
push
fists
pop
test
das
add
stc
test
mov
mov
or
xchg
popa
std
outsl
pusha
int3
iret
repz
filds
lock
stos
lahf
sti
mov
fs
rol
add
push
jb
ret
daa
pop
hlt
xchg
cmp
fsubs
orb
pop
mov
add
jge
mov
jg
push
cmp
mov
test
aam
mov
inc
in
int3
lods
jo
sbb
mov
ljmp
out
sbb
stos
roll
cld
jns
jp
cli
movsb
dec
daa
adc
add
fwait
jne
pusha
subb
fsubrl
mov
jbe
mov
inc
mov
aad
je
pushf
sbb
clc
mov
lcall
push
xor
mov
jns
xor
dec
dec
cmpsl
push
mov
je
mov
in
mov
mov
cmp
leave
loopne
mov
add
ds
sbb
pop
mov
pop
das
movsl
jmp
scas
inc
test
out
add
push
in
cwtl
fisttpl
int
xchg
mov
sub
pop
push
sbb
mov
aam
mulb
pop
jecxz
pop
cli
mov
xor
test
inc
add
push
pop
cmp
mov
sub
xor
std
cltd
std
mov
stos
shlb
nop
or
xor
insb
rol
mov
xchg
cmpsl
mov
in
daa
jbe
bound
repnz
daa
mov
inc
subl
xchg
or
mov
das
xchg
and
sub
sti
loop
mov
or
cmpsl
call
xor
pop
mov
lods
sub
pushf
adc
in
mov
pop
mov
lahf
or
cmp
mov
push
in
jecxz
ds
dec
cmpsl
les
cli
jp
xchg
and
popf
pop
pop
rol
cmpsb
xor
sub
insl
fs
lret
sbb
inc
stos
cmp
sub
sbb
mov
and
int
and
pop
gs
adc
repnz
adc
int
or
jb
push
and
ds
hlt
cmp
mov
js
or
sbb
emms
clc
aaa
mov
mov
sub
nop
fcomip
arpl
cmp
sub
mov
lods
push
lahf
rcll
cmovo
out
mov
lret
arpl
shlb
lret
and
jnp
mov
test
adc
cmp
rorl
jmp
shrb
in
mov
cmc
into
add
je
and
outsb
mov
mov
data16
test
inc
or
cli
xchg
mov
mov
xchg
mov
cmp
sub
xchg
pop
dec
ds
jecxz
dec
lret
push
mov
jb
daa
mov
inc
jl
pop
push
mov
pop
pop
ret
sub
sbb
mov
test
sbb
call
pop
adc
rcr
sub
in
ret
push
mov
jnp
nop
outsb
dec
mov
sub
fcomi
mov
inc
jbe
jg
fwait
cmp
and
mov
insb
mov
pop
int3
inc
mov
aad
and
jecxz
push
ja
insb
loopne
pop
aas
scas
or
outsl
inc
imul
and
xorl
jne
pop
mov
mov
mov
std
mov
inc
mov
cmp
add
sahf
xlat
cli
jp
mov
sbb
mov
scas
addl
shr
xor
dec
in
stc
mov
int
inc
push
cmc
mov
mov
cmp
dec
xor
out
arpl
jg
xchg
popf
jo
jnp
mov
and
xor
ret
jge
add
int3
std
sub
mov
pop
je
or
and
andl
and
lea
mov
and
jg
out
out
cld
mov
in
fs
or
jp
cmp
cmp
mov
adc
jne
aaa
and
dec
and
inc
adc
add
dec
imul
pop
jmp
pop
aam
dec
inc
push
dec
aaa
xchg
lock
out
mov
mov
inc
mov
mov
outsb
cwtl
in
leave
ds
cltd
sbb
inc
dec
mov
or
add
mov
jne
ljmp
xchg
rcrb
mov
aaa
cli
aad
out
loop
cmpl
sub
cwtl
imul
lahf
push
sbb
pop
sbbl
cli
aas
add
sbb
shrb
push
hlt
jmp
lods
xchg
into
fsubs
and
aaa
fisubl
jnp
xlat
aas
int
push
testb
js
xor
inc
gs
addb
or
std
mov
push
add
mov
flds
dec
xchg
ljmp
sub
sbb
test
push
sbb
cltd
ljmp
mov
cmpsb
cmc
push
jecxz
and
pop
imul
push
add
xchg
mov
fsubl
push
dec
mov
and
ffreep
enter
mov
outsb
jnp
mov
adc
inc
rclb
das
mov
and
psubd
jmp
dec
pop
loopne
lahf
lds
test
arpl
xor
mov
inc
mov
outsb
lods
dec
mov
fldt
jle
jns
fsubrs
fstpl
movsl
mov
imul
sbb
inc
lock
cld
enter
cltd
jmp
xchg
into
fdiv
into
xchg
xor
and
popa
test
jp
jp
pop
xor
enter
in
pop
sti
pop
adc
pop
stos
xchg
or
add
lea
mov
test
adc
enter
out
xchg
cs
jnp
mov
ss
movsb
insb
dec
pop
and
adc
clc
hlt
movsl
iret
jge
idivl
and
mov
push
adc
insb
ljmp
sub
add
mov
jmp
dec
xlat
push
ret
mov
pop
insb
into
dec
mov
ss
mov
cltd
loope
and
mov
mov
pop
insl
inc
pop
cmp
mov
popf
pushf
imul
mov
sub
cmp
sub
inc
test
pop
and
lea
adc
inc
out
cmp
test
loop
sbb
inc
push
push
adc
xor
or
insl
fdiv
or
sahf
pusha
fmull
adc
popf
sahf
cmp
xor
dec
and
inc
movsl
pop
mov
roll
test
inc
push
ja
outsb
mov
loop
add
mov
pop
xchg
dec
loope
mov
dec
ljmp
xchg
cmp
mov
mov
jns
or
cli
add
enter
mov
push
add
xchg
dec
inc
or
pop
or
lea
arpl
int3
daa
movsl
mov
or
sub
dec
pop
adc
lods
into
jl
xchg
xor
rep
divb
jl
cld
sbb
fsts
cmp
hlt
dec
divb
aad
loop
insl
xchg
ret
lods
cwtl
xchg
pop
jp
out
pop
rcll
cwtl
xor
movsb
ret
jns
movsb
fimuls
jae
notb
jp
pop
jle
je
pop
scas
js
xor
jb
rolb
inc
popf
fldenv
mov
clc
lahf
cmp
cmp
xchg
fs
push
movsl
fnsave
jno
sahf
lret
sub
pop
aam
sbb
cmpsb
jmp
jg
or
and
lahf
test
lods
pop
ret
enter
in
aas
pop
push
stos
lods
xor
aad
das
inc
xor
aas
add
jne
sub
dec
fildl
and
lret
loope
xor
repz
push
jo
mov
mov
mov
sbb
inc
loope
jnp
pop
dec
roll
sti
rorb
subb
jp
xor
jbe
das
hlt
dec
push
cmp
dec
cs
je
arpl
xor
cmp
add
enter
mov
jl
dec
cmp
jne
int3
mov
es
dec
xchg
mov
sbb
or
sbb
popl
cmp
pop
fidivrs
arpl
add
sbb
mov
fwait
iret
mov
push
push
push
mov
push
add
and
sbb
mov
cmp
lret
mov
nop
or
test
aam
push
mov
push
sub
adc
adc
xlat
imul
lahf
sub
adc
sub
int3
push
cwtl
cmp
popa
push
and
jbe
sub
pop
jl
stc
mov
push
mov
int3
lds
pop
mov
push
dec
jl
ret
push
iret
push
dec
fmull
jl
xchg
jmp
dec
pop
inc
stos
mov
adc
xor
mul
xchg
or
jns
pop
fdivrs
or
jb
push
js
mov
cmp
or
mov
mov
pop
push
divl
add
clc
sbb
mov
and
sarl
inc
stos
mov
out
pop
mov
jmp
and
rorl
and
push
and
hlt
mov
out
ficoms
xchg
dec
pop
sti
pop
imul
dec
xor
or
pop
mull
iret
lahf
test
lahf
dec
testb
push
push
or
add
sahf
ret
push
js
push
pop
adc
fisttpl
xchg
sbb
mov
enter
xchg
xchg
sub
dec
mov
push
jge
mov
out
adc
and
test
sub
mov
daa
cmc
sub
cmpsb
xchg
pop
ja
cltd
fwait
pop
imul
push
lds
jae
orl
or
sbb
pop
loope
xchg
xor
dec
push
dec
or
jnp
insb
jae
mov
push
pusha
or
das
mov
and
pop
fwait
jmp
sbb
sub
sbb
cld
jo
and
mov
pop
and
cmpsb
xchg
mov
mov
fcmovnbe
int3
and
outsb
imul
lcall
stos
out
sti
lods
cwtl
out
rcrl
das
pop
dec
push
aas
iret
call
push
sbb
pushf
mov
ljmp
mov
mov
and
xor
iret
adc
cmp
ret
insl
adc
sbb
sbb
mov
imul
xchg
jne
add
call
cmpsl
jg
shlb
pop
shrl
pop
cwtl
and
xchg
les
sub
das
pop
data16
adc
rcrb
and
in
stc
cltd
call
stos
jns
adc
mov
and
pop
add
nop
mov
inc
cwtl
mov
lret
add
jle
cmp
fdivrl
arpl
sub
movsl
test
xor
and
add
push
in
jle
fidivrl
fmulp
mov
xchg
cli
in
imul
insl
aam
das
xor
ror
pusha
sub
popf
out
jl
iret
fcmovnb
jno
std
push
addr16
xor
sub
mov
jle
xchg
inc
ds
lcall
in
cmpsl
out
in
jno
out
stc
cmp
shrl
arpl
mov
pop
cltd
jnp
or
test
pop
pop
xor
fists
pop
push
sub
sbb
xor
cmp
cwtl
push
dec
loope
xchg
daa
push
add
dec
jno
lock
lds
nop
sub
test
xchg
sub
out
testb
mov
shrb
loope
push
decl
pop
mov
arpl
test
cmp
push
or
sbb
push
popl
test
and
mov
fnstenv
and
and
pop
aas
or
mov
lret
mov
lods
iret
cmp
jne
adc
ficomps
pop
nop
test
push
and
dec
aas
in
xchg
push
bound
mov
hlt
addl
btc
lret
push
roll
push
cld
mov
subl
pop
repnz
daa
dec
out
pop
lret
inc
nop
cli
pushf
fwait
mov
das
sbbl
out
mov
cmp
sub
dec
xchg
push
in
cmc
push
fucomi
mov
or
loopne
notl
lret
or
sti
gs
mov
pop
les
imul
jno
mov
ret
in
test
cli
push
outsb
outsb
or
fisubrl
jmp
pusha
fwait
hlt
mov
add
or
sti
jno
or
xor
sub
pusha
into
xor
mov
stos
push
jne
int
pop
mov
jp
jbe
outsl
scas
insl
jo
inc
or
mov
xchg
or
shl
into
arpl
imul
cmpb
in
pushf
cmpsb
jecxz
and
mov
fdivrs
dec
mov
sbb
in
push
xor
fcom
and
mov
inc
mov
clc
shl
xor
imul
add
jns
mov
jl
mov
jne
xchg
mov
xor
mov
pop
pop
or
xchg
mov
adc
divl
cmp
scas
aad
adc
mov
jge
addr16
movsl
push
fdivrp
sahf
pop
jle
sbb
adc
pop
and
push
push
jo
popf
shrl
popl
fisubrs
xor
test
lea
or
or
lods
xchg
jmp
jl
ljmp
arpl
scas
inc
lds
mov
in
add
mov
ds
cmp
push
sbb
mov
popf
push
dec
and
lods
xor
fldl
out
dec
in
jl
stos
in
sub
decb
ja
iret
js
lcall
xor
or
adc
dec
fadds
in
movsb
ret
push
xchg
bound
into
sarb
sarl
push
imul
out
fildll
mov
xlat
or
bswap
test
icebp
lods
push
mov
testl
push
fsubrl
jge
fisttps
push
in
cmpsl
pop
sbb
xchg
push
sbb
pushf
sbb
cmc
push
imul
inc
sub
jg
iret
inc
dec
and
pop
xchg
dec
lea
shr
adc
lods
imul
or
stos
shr
or
xchg
xor
call
push
cs
mov
lcall
pushf
hlt
xor
data16
adc
mov
pop
xchg
xchg
xor
lcall
or
push
in
sbbb
jmp
loope
mov
stos
mov
popf
adc
xchg
call
cmp
cmp
pop
mov
roll
xchg
jge
jnp
push
addr16
adc
fistpl
int3
sbb
filds
or
mov
enter
pop
xchg
movsb
inc
add
lcall
jmp
fucomp
inc
fisttpl
xchg
mov
push
jbe
leave
jl
push
addl
insb
pop
arpl
js
lahf
mov
or
pop
xlat
scas
xchg
imul
loop
mov
sarb
inc
push
mov
sub
popf
adc
pop
sbb
or
fsubrs
jg
cmpsb
lahf
pop
mov
inc
lods
or
xchg
std
test
xor
mov
mov
xor
outsl
inc
add
arpl
mov
jne
les
lock
xchg
test
fisttps
mov
cltd
cltd
ret
add
aad
mov
mov
cs
cmp
jae
es
sbb
push
adcb
cmpl
xchg
hlt
sbb
out
je
mov
icebp
mov
add
inc
popa
sbbb
bound
xchg
mov
shr
xor
xor
cmp
mov
pop
bound
enter
pop
dec
inc
mov
dec
pop
adc
mov
xchg
mov
sub
xchg
jecxz
mov
xchg
popa
jmp
inc
shlb
jbe
iret
popf
and
and
mov
ret
stos
sbb
fisubs
out
outsb
out
cmp
out
out
sbb
xchg
and
mov
xchg
stos
pop
mov
jns
shlb
scas
out
out
pushl
jmp
pop
gs
loop
clc
push
xchg
fwait
mov
xchg
jo
push
or
push
mov
push
mov
in
enter
add
mov
xlat
inc
decl
rolb
arpl
xchg
aad
mov
test
in
sub
shlb
xchg
xorl
test
hlt
outsl
xor
cld
and
inc
or
jle
pop
adc
pop
fs
je
popf
fstpl
je
inc
or
lds
ret
cltd
hlt
xchg
sti
aas
pop
add
push
push
fisttpll
or
test
popa
pop
mov
jb
push
cmp
push
mov
inc
pusha
stos
fwait
ljmp
cli
dec
push
int
push
pop
cmpsl
loope
inc
sti
dec
xor
pop
addr16
jmp
out
adc
xchg
sahf
mov
adc
push
cmpsl
das
sbb
aaa
jno
cmc
mov
sti
pop
mov
shll
aad
sub
sub
loop
cmp
mov
and
and
lahf
inc
in
out
mov
enter
stos
loope
mov
and
imul
subl
mov
jns
ss
xor
es
aam
push
mov
dec
sbb
mov
mov
xor
das
or
sti
and
inc
aas
push
leave
shlb
mov
std
out
fistpll
xor
dec
adc
add
and
test
pushf
and
sub
popa
cld
cs
je
jae
jecxz
adc
popa
imul
cwtl
test
inc
fwait
icebp
std
inc
mov
int
sarb
push
push
jbe
xchg
call
xchg
sub
cmp
dec
push
mov
les
push
insl
and
xchg
out
clc
mov
fucom
aad
or
mov
xchg
in
or
cmp
int
pop
jno
insl
out
xchg
mov
rorb
test
push
popl
push
add
cmp
and
dec
add
pop
sti
add
push
push
inc
sahf
mov
push
xchg
lahf
pusha
jp
cmp
adc
lods
pop
rolb
xchg
icebp
and
and
lcall
pop
das
pop
jmp
mov
or
repz
fld
lret
and
dec
fs
or
cmpsb
or
add
mov
adc
mov
hlt
xchg
fucomip
mov
cmpsl
jbe
lret
clc
dec
xchg
pop
sbb
jne
cmpsb
sahf
jp
push
sbb
sarl
gs
fisubrl
cmp
dec
in
aam
dec
movsl
adc
clc
push
mov
lea
movsl
xor
mov
das
imul
scas
fstpl
in
ret
shrl
jb
loope,pt
xchg
pop
out
add
inc
in
xchg
dec
mov
mov
and
sub
adc
push
push
push
mov
in
sub
mov
and
lods
push
lcall
push
or
push
xchg
mov
sbb
icebp
inc
call
jno
inc
mov
sahf
sub
pop
push
push
cmp
sbb
andb
insl
and
cmp
xchg
xor
pop
mov
and
mov
dec
data16
adc
dec
std
icebp
add
mov
test
icebp
xlat
adc
and
push
jae
jne
jl
in
or
and
cmpsb
jg
out
inc
mov
outsl
jo
stos
dec
push
repnz
fmull
mov
stc
js
insb
push
lcall
sub
inc
leave
lcall
inc
xchg
iret
int3
jl
lret
popl
stc
fidivl
push
jo
std
push
cmp
adcl
inc
popf
push
mov
out
push
bound
rol
leave
repz
arpl
and
loope
shl
std
mov
sbb
or
sub
dec
lret
lret
mov
push
or
arpl
and
imul
std
push
cmpsb
xor
test
popf
cmpsb
adc
push
sar
stos
daa
xchg
adc
jp
iret
movsb
out
jns
test
xchg
mov
dec
loope
push
insb
cmp
pop
xchg
xor
mov
jg
jns
insl
sub
jnp
fildl
pop
test
sahf
ret
sub
out
fwait
mov
stos
pop
mov
call
mov
or
out
int
adc
data16
jns
ds
and
hlt
push
test
pop
ficomps
xor
adc
sub
repnz
fnstcw
pusha
in
pop
adc
inc
xchg
sarl
push
or
ljmp
test
jns
mov
sub
flds
cmpsb
xor
lods
lret
cmp
iret
or
mov
into
and
jle
fadd
sbb
cwtl
add
adc
adc
xchg
push
jno
and
fcoml
fisubl
pushf
jmp
loope
in
popa
jl
js
mov
jge
dec
xor
and
je
test
decb
fistl
xchg
bound
cmp
int3
lret
sub
xchg
jb
rorb
inc
add
cmpb
dec
inc
mov
in
fisubrl
inc
xchg
loop
xor
jns
mov
jnp
gs
mov
in
and
lods
pusha
or
cmc
and
dec
adc
out
dec
call
test
addr16
push
scas
mov
arpl
mov
xchg
loope
movsl
adc
imul
mov
popf
fbstp
fldt
mov
sbb
lcall
iret
sub
adcl
aad
adc
mov
bound
call
popa
adc
adc
add
mov
mov
adc
flds
mov
adc
out
test
push
inc
jp
mov
cmp
push
mov
std
dec
adcb
jg
xor
mov
inc
push
push
out
pop
push
popf
jl
pop
and
push
push
ds
jo
ljmp
ja
dec
popf
outsb
nop
jno
jle
notl
in
xor
mov
push
push
mov
mov
imul
pop
cmp
xchg
pushf
xchg
dec
stc
pop
mov
pop
mov
sbb
push
je
mov
sbb
movsb
inc
popa
jnp
or
adc
jmp
inc
sub
ror
std
xlat
and
rorl
shlb
or
dec
daa
add
jnp
jge
jmp
sub
add
mov
cmp
dec
ja
sbb
int3
in
mov
sbb
outsl
daa
ret
pop
adc
in
in
push
aas
or
sub
push
rclb
and
setns
int3
loop,pn
and
mov
push
jnp
xor
jp
pushf
push
out
mov
fcomip
adc
pop
cli
fwait
dec
out
or
push
push
insl
lea
icebp
xlat
stos
adc
out
mov
push
jge
movsb
lods
cmp
pushf
int
sar
lds
inc
pop
aad
jnp
sub
or
mov
pushf
sbb
fidivrl
stos
jne
rolb
jno
int3
add
je
xchg
push
out
and
loop
jg
jbe
xor
mov
lods
cli
dec
mulb
mov
mov
mov
xor
xchg
cmp
mov
ja
push
xor
cmp
jnp
jg
popa
and
test
popa
inc
cmp
idivb
push
dec
in
cltd
and
insb
leave
je
movsl
test
dec
or
cli
push
mulb
push
sub
xor
xchg
scas
inc
test
xor
aaa
in
and
mov
int
jp
fs
mov
fisubrl
repz
mov
dec
aas
dec
lcall
stos
or
lea
fbstp
push
mov
ret
lret
or
out
mov
std
xchg
arpl
mov
data16
and
xor
addr16
jo
pop
loop
out
clc
inc
sbb
pop
and
clc
mov
mov
push
call
aad
mov
or
shrb
cmpsb
mov
rcrb
add
test
cs
aad
or
pop
lahf
add
mov
mov
inc
les
jmp
mov
addb
into
mov
frstor
lret
std
add
sub
insl
out
aad
add
addl
stos
in
adc
cld
adc
icebp
es
es
imul
popa
push
incl
mov
test
add
rcrl
in
shrl
int
add
push
stos
pop
mov
xchg
in
add
in
cs
mov
and
sub
shlb
xor
adc
stos
stc
std
add
jecxz
push
xor
les
xchg
xor
loop
lret
mov
mov
fcmovne
arpl
fdiv
fldcw
pop
testb
push
jb
cmp
sub
and
jb
je,pn
fidivs
jg
jns
lahf
pop
add
out
mov
es
xor
dec
add
cmc
xor
mov
inc
lods
dec
push
jl
das
mov
addl
aad
jle
test
addr16
pop
push
loop
dec
sub
imul
mov
push
aad
cld
iret
pop
outsb
mov
gs
inc
pushf
rcll
xchg
out
sbb
ljmp
cltd
fs
insl
shrb
mov
gs
clc
cmp
int
test
xor
arpl
add
int3
repz
inc
xor
pop
dec
mov
mov
call
adc
mov
insb
dec
lock
cs
sbb
xchg
lods
pop
fdivs
scas
into
adc
push
rcr
dec
mov
pop
leave
adc
dec
lret
cwtl
mov
push
pop
sahf
test
push
int3
fiaddl
test
faddl
jp
jecxz
call
lods
lock
call
push
sub
loopne
sbb
and
pop
lret
push
rclb
mov
lods
or
dec
bound
outsb
push
ret
push
cmp
aas
cmp
lret
xchg
and
mov
sub
lods
jl
mov
mov
push
subl
aam
in
insb
mov
loopne
fs
pop
mov
xlat
push
imul
inc
daa
push
xor
int
push
mov
nop
cltd
add
shrb
out
fs
rolb
or
add
sbb
scas
out
mov
mov
imul
sub
nop
mov
jl
mov
lea
sub
add
fisttps
fimuls
fsubr
or
push
clc
mov
xor
imul
orl
push
pop
shl
mov
mov
add
lahf
loope
jl
sub
jb
ja
mov
mov
mov
mov
incl
icebp
in
xchg
stos
roll
lods
mov
ret
sbb
mov
dec
xchg
loopne
pop
aaa
mov
or
aad
pop
inc
gs
adc
jnp
insb
dec
mov
loop
jmp
sbb
out
pop
mov
lea
arpl
lahf
mov
jge
push
in
lods
push
scas
cmpl
mov
mov
fistps
inc
add
mov
je
test
cmc
les
jnp
xlat
ret
scas
jns,pn
sub
mov
pop
adc
shlb
dec
and
sbb
add
mov
dec
push
jnp
andl
mov
add
mov
cmpsb
or
inc
jbe
out
lcall
pop
mov
scas
and
dec
fimuls
into
push
dec
leave
xchg
ficoms
cmpsb
push
xchg
xor
stos
repnz
outsb
pop
lods
pop
sub
jle
mov
cs
sub
movsb
mov
enter
rorb
in
jb
jnp
mov
inc
int3
cmp
cwtl
out
jb
clc
push
mov
test
and
mov
inc
rcll
inc
ja
jmp
cltd
and
mov
dec
shlb
outsb
jo
repz
int3
ljmp
stos
out
rclb
inc
sbb
icebp
out
leave
pop
add
out
loopne
add
adc
cs
repnz
push
cmp
enter
inc
lds
push
testb
in
mov
or
xchg
fisubrs
lea
ja
add
lret
add
push
daa
sbb
popa
mov
addr16
xor
orl
or
aas
ja
fmull
rcll
add
and
and
mov
cli
sub
or
imul
mov
aaa
xchg
cmp
inc
xchg
pop
out
or
lea
rcl
lcall
push
lret
sarb
cmp
setle
jnp
aam
xor
cmc
fists
sbb
les
push
xor
fcoms
add
inc
les
les
mov
push
inc
cli
xchg
xlat
dec
mov
dec
femms
aas
mov
cmp
sbb
pop
mov
and
outsb
in
sub
lods
inc
shlb
mov
test
scas
aaa
cmpsb
jbe
pop
sbb
add
in
jmp
xchg
mov
add
aas
jge
addr16
jle
insb
pop
jb
inc
xchg
lods
in
sahf
jl
shl
add
in
xchg
loopne
push
popf
mov
out
mov
lock
push
push
jmp
add
inc
mov
push
jae
inc
xor
dec
mov
js
stos
or
xor
sbb
loopne
cmc
pop
data16
mov
dec
out
pop
jne
cmp
aas
je
loopne
cmp
aas
mov
test
loopne
stc
out
pop
stos
cmpsl
jecxz
imul
fwait
mov
insb
movsb
insb
add
in
adcb
push
jmp
dec
pop
fwait
call
pop
mov
xor
in
lds
dec
push
pop
push
push
imul
aas
cmp
cmpsb
inc
jbe
mov
mov
dec
cs
callw
mov
mov
cld
js
jb
pop
out
cmpsl
clc
mov
add
fwait
call
inc
push
aam
jle
arpl
cmpsl
nop
dec
lds
sbb
sar
xchg
cmpsb
jge
pop
clc
in
sub
jge
in
test
ja
add
push
das
mov
sbb
mov
or
sarb
mov
xchg
movl
adc
mov
mov
lret
mov
lea
inc
inc
pop
xchg
xorl
lret
hlt
lods
add
and
xchg
mov
filds
dec
shl
enter
in
xor
ds
cli
jg
jmp
cmc
sub
out
dec
dec
enter
out
je
inc
idivl
sub
and
push
pop
mov
adc
add
arpl
out
out
cmp
inc
lcall
or
lret
pop
repnz
out
push
in
adc
addr16
sbb
das
cwtl
cmp
inc
and
push
inc
add
pop
mov
sub
or
push
fimull
leave
in
aad
jno
icebp
fwait
dec
movsb
xlat
adc
jo
add
or
sti
or
sbb
testl
push
or
dec
xlat
movsb
js
inc
mov
int
pop
add
sub
ret
movsl
or
lret
imul
jecxz
stc
incl
aad
and
dec
mov
adc
mov
mov
std
sub
sbb
mov
pop
inc
xchg
popa
xorb
aas
in
xchg
mov
je
sub
pop
xchg
pop
mov
push
stc
mov
inc
push
lods
or
mov
push
inc
pop
mov
xor
pop
adc
test
cmp
je
xchg
lods
jbe
sbbb
inc
popa
testb
cmp
cmc
inc
fnstsw
test
xchg
inc
arpl
dec
jl
pop
mov
inc
push
mov
xchg
aas
xor
shll
mov
mov
in
cmpsb
orb
adc
fsubl
sbb
dec
adc
mov
out
cli
js
cmp
imul
shlb
out
loop
leave
sbb
xor
mov
inc
mov
stc
xor
dec
popf
mov
outsl
popf
sub
std
fldenv
bound
cltd
stos
out
jnp
in
mov
fmuls
cld
and
cmp
add
jnp
push
sbb
mov
rorl
popa
idiv
xor
fwait
sub
or
sarw
imul
loopnew
cmp
cmp
jle
sti
sti
xor
jge
adc
fisttpll
aam
sti
inc
add
ds
mov
sbb
xlat
mov
lret
sti
cmp
ljmp
xchg
fnstenv
xlat
frstor
mov
cltd
mul
shrl
inc
push
mov
or
dec
fstp
add
dec
mov
outsw
pop
xor
outsb
cmpsl
divb
loop
pop
roll
pop
outsl
mov
sub
inc
pop
adc
iret
xchg
mov
sbb
lret
cmp
stos
xlat
popa
fnsave
test
rol
data16
cld
mov
lock
push
mov
cmc
cmpsl
dec
adc
addr16
adc
rorl
pop
ret
idivl
adc
js
push
cmp
add
sub
jb
lea
mov
outsl
test
and
add
pushf
inc
jns
add
mov
adc
int3
popf
lcall
fildl
or
das
cmp
sbb
nop
jge
pusha
mov
pop
or
pop
pop
int
outsb
fwait
shll
dec
test
mov
popl
xchg
mov
cmpsl
sbb
adc
jno
sbb
sbb
int3
mov
dec
xchg
pushf
dec
ja
fmuls
xchg
add
add
imul
cmp
pop
xchg
mov
mov
adc
mov
and
xor
ficompl
add
mov
mov
add
fdivrs
fstpt
test
add
cmp
insl
lds
add
mov
adc
mov
fldt
imul
adc
cld
and
cmp
xchg
filds
dec
add
repnz
xchg
pop
sub
sbb
sbb
or
in
jns
and
or
fs
jge
dec
lods
stc
sbb
icebp
cltd
cs
out
sti
jne
ljmp
ja
pop
pushf
int
testl
push
sub
das
xchg
dec
pop
jae
adc
push
pop
mov
add
dec
mov
jae
push
je
and
lret
add
mov
mov
loope
cmp
sbb
aaa
adc
imul
xor
dec
xor
movsb
shll
pinsrw
insb
dec
imul
scas
and
mov
inc
cltd
cmp
pusha
lods
clc
rcl
sbb
repz
insb
cwtl
movsb
add
int
sbb
lea
gs
push
mov
xor
and
pop
sahf
enter
sbb
in
popa
and
das
cmp
int
into
popf
xor
cmp
leave
jecxz
loope
or
xor
loope
aam
aaa
jns,pt
mov
add
popa
fs
pop
push
adc
sbb
fisubrl
enter
insb
sub
jp
icebp
xchg
add
mov
andl
sbb
lock
popf
inc
fimuls
sti
jmp
xor
push
dec
dec
shrl
push
popl
mov
or
dec
dec
mov
xchg
and
je
pop
lods
hlt
int3
mov
cltd
rorl
sbb
cmp
sub
xor
stos
mov
cmpsb
push
cmpsb
popa
cwtl
pushf
es
das
sbb
push
and
xchg
cmp
filds
or
jnp
lahf
and
push
push
lea
add
push
jmp
pop
dec
iret
jmp
xchg
mov
fucomp
dec
scas
inc
inc
mov
fdivl
adc
rol
imul
sbb
mov
pop
xchg
push
scas
add
inc
cltd
test
inc
rcll
lds
gs
xor
mov
sti
test
xchg
idivl
rorl
loop
jle
lea
mov
iret
mov
loop
sbb
cmp
cmpl
mov
mov
stos
push
mov
aaa
fwait
out
out
cwtl
push
test
repz
insl
mov
fcmove
enter
mov
popf
test
dec
in
scas
mov
sub
push
xchg
xchg
scas
icebp
push
ss
call
push
mov
in
inc
sahf
and
adcl
inc
and
mov
shll
daa
mov
xchg
test
and
cltd
cld
and
mov
stos
icebp
push
loope
and
adc
jb
xchg
in
jnp
cmpsb
add
lcall
mov
js
add
stc
loope
imul
mov
mov
cmp
xchg
outsl
pusha
js,pt
test
adc
xchg
or
insl
mov
push
movl
sub
cmp
or
add
out
pop
call
lods
jp
xchg
pop
enter
mov
rcr
rcl
pop
fwait
xchg
pop
xor
call
movsb
fldcw
ljmp
dec
scas
mov
add
xchg
in
mov
adc
jecxz
std
or
and
pop
dec
enter
int
jo
pop
pop
xor
addr16
data16
xchg
fwait
in
mov
sti
jmp
sbb
mov
dec
filds
sub
mov
imul
bound
jno
sahf
xchg
rcrl
adc
in
and
mov
test
movb
cld
or
dec
push
loopne
adc
sub
mov
cli
xor
mov
subl
cmp
cmp
imul
cmp
pop
cmp
xor
pop
ja
ss
not
subb
shl
sub
cli
mov
cwtl
call
in
xor
inc
jb
xor
enter
fiaddl
ffreep
push
roll
lods
adc
and
test
push
imul
aam
out
pop
lock
jle
and
rorb
pusha
push
mov
scas
adc
cmp
or
les
adc
lea
into
mov
jmp
adc
xchg
repnz
dec
test
sbb
in
andl
jnp
insb
push
jno
pusha
jge
popf
jb
mov
cwtl
ljmp
mov
jno
push
insb
popa
out
sub
push
mov
incb
push
ljmp
jl
stos
out
int3
push
test
int
out
ds
dec
jmp
add
or
pop
fmull
data16
daa
add
xchg
dec
das
jne
add
or
add
fistps
adc
xchg
dec
lahf
sbb
push
jecxz
ja
mov
aas
rolb
loope
out
pop
ja
dec
fdivrs
fbstp
and
mov
jnp
ja
jne
leave
aam
cmp
cmc
in
dec
lahf
or
shll
mov
sub
and
je
adc
inc
jne
lahf
in
out
lods
fs
ror
addr16
mov
stos
adc
ret
cmp
fistps
imul
or
in
outsl
icebp
push
dec
jns
ja
data16
stos
aaa
gs
ja
lret
push
mov
xchg
jns
mov
jo
adc
outsb
mov
dec
fists
mov
pop
in
out
jecxz
dec
push
fldl
std
stc
add
jae
mov
movsl
cltd
inc
ljmp
out
aaa
mov
in
aad
pop
jg
lods
cli
xor
jno
stos
pop
lods
sbb
fists
cmp
test
pop
and
mov
stos
adc
xchg
mov
sbb
xor
adc
std
sub
test
add
pop
jbe
jmp
inc
and
fisttpll
xor
loopne
push
xchg
in
adc
hlt
repz
gs
es
in
cmp
pop
push
outsb
movntq
adc
sbb
xor
mov
daa
adcb
loopne
clc
sti
xchg
push
fwait
and
inc
outsb
jp
dec
xlat
push
mov
int3
ss
insb
sbb
mov
fwait
mov
inc
adc
mov
dec
mov
pushf
push
mov
cmp
in
pusha
or
ljmp
ret
cmpsl
xor
pop
cmp
in
stos
dec
lret
fsubrl
int
push
fstpl
mov
or
pop
push
movsl
pop
adc
cmpsl
sahf
imul
push
lock
or
icebp
lcall
mov
xor
inc
xchg
push
or
push
dec
push
xor
inc
repnz
subb
lea
and
into
cmp
leave
or
stc
mov
fwait
mov
in
mov
xchg
pop
data16
movl
out
test
mov
fmulp
xchg
imul
les
ss
and
push
enter
sbb
lock
rcll
mov
subb
fwait
ret
loopne
pop
cmpsb
cmp
negl
pop
push
out
es
sbb
xchg
shlb
cmp
push
loopne
loope
jecxz
sahf
popa
push
jge
jp
cmp
add
mov
or
orb
and
lods
les
fidivrl
stos
les
lock
lahf
push
aaa
adc
mov
ret
sub
mov
push
or
dec
inc
lcall
adc
iret
insl
es
sbb
test
loopew
dec
inc
sbb
xor
lea
cli
iret
mov
dec
push
adc
sub
push
mov
jecxz
inc
xorl
cltd
cmp
pop
leave
mov
or
inc
movsl
mov
sub
mov
add
inc
lret
test
xchg
js
push
mov
mov
imul
ds
jle
add
insl
push
add
jle
aad
mov
in
cmp
fwait
adc
cmpsb
mov
cli
into
pop
aas
fs
cmc
loope
call
mov
sub
mov
xlat
popl
push
and
and
cmp
xor
push
repnz
push
cmp
fsubrl
push
shll
adc
movsb
cmp
jnp
test
sub
mov
jmp
testl
movsb
pushf
addb
add
sti
pop
addr16
fwait
and
arpl
or
fcomps
cmp
into
cli
xchg
in
stc
enter
idivb
cmpsb
inc
pushf
imul
insb
loop
mov
repnz
fnsave
mov
mov
adcb
cmp
push
push
test
fidivs
mov
mov
xchg
cmpsl
sub
subl
daa
negb
adc
dec
loopne
add
mov
push
xchg
sahf
dec
fdivrs
fsubrs
fldenv
scas
movsl
sub
pop
aaa
xchg
inc
or
add
push
inc
cmp
loope
femms
addr16
jl
mov
pop
push
push
cli
in
cmpsb
clc
mov
pop
sahf
push
push
hlt
test
clc
shlb
shl
sub
ret
arpl
fwait
and
aam
xchg
loopne
scas
dec
dec
fstl
jmp
out
adc
push
jp
jbe
sti
jne
xor
dec
rcrb
out
arpl
in
cmp
sub
or
mov
pop
repz
fisubs
mov
dec
scas
sbb
push
mov
adc
inc
push
mov
in
and
jnp
add
adc
lret
or
aam
push
loope
cmpsl
xchg
lock
pop
sahf
cli
xchg
mov
fwait
dec
cmp
mov
scas
cmp
test
xor
mov
call
lcall
mov
nop
test
and
in
out
cs
jle
stc
sahf
cmpsb
rcrb
int3
cmp
jp
adc
cmp
add
fcomps
mov
xchg
cmpsl
mov
testl
das
fcmovb
jnp
das
and
addr16
pop
sbb
cld
and
jne
sarb
es
in
dec
mov
xor
cmp
out
fwait
in
mov
std
sub
aad
inc
add
ss
and
cli
test
xchg
leave
push
test
cmp
push
cmp
popf
notl
adc
addr16
loopne
lds
daa
das
lods
rclb
sbb
repz
repz
sbb
jb,pn
arpl
xor
scas
push
in
pop
incl
enter
decb
out
mov
imul
or
loopne
mov
bound
lcall
and
iret
mov
xor
int
leave
ret
in
cmp
mov
in
mov
add
mov
mov
test
insl
inc
popf
lods
in
shll
and
adc
adc
push
jo
test
mov
dec
jno
mov
sub
movsb
pop
insl
test
add
mov
mov
std
fcmovu
cltd
adc
or
cwtl
or
rolb
data16
add
inc
lahf
jg
pop
sbb
shrl
fistpll
dec
sbb
mov
xor
inc
imul
cwtl
ja
mov
mov
ss
aad
sub
ljmp
es
or
lret
sub
jl
add
int
xchg
shrl
cmp
das
hlt
inc
cwtl
mov
jmp
or
imul
stc
inc
roll
inc
adc
mov
and
ret
ja
xor
cmc
and
inc
inc
mov
dec
pop
movl
nop
je
dec
cmp
hlt
pop
lock
movsl
mov
out
or
sahf
cmp
push
and
mov
lret
cmpsb
mov
mov
es
pop
mov
test
shlb
aas
jl
pushf
movsb
inc
fists
popl
inc
dec
popf
pop
loope
push
cltd
add
or
push
push
outsl
lret
pusha
repz
mov
and
mov
inc
xchg
insl
pushl
subl
sub
cmp
movsb
fdivs
dec
pop
or
add
idivb
cmp
mov
loop
pop
dec
fs
fcmovnbe
scas
iret
mov
mov
sbb
inc
inc
jl
dec
jmp
xor
imul
pop
shrl
bound
clc
ds
xor
test
xchg
jmp
aas
xchg
jno
add
lods
out
test
or
out
mov
xchg
test
in
mov
mov
pusha
sbbl
xchg
daa
popa
cmp
jl
pop
inc
dec
adc
stc
jo
cmc
test
adc
movsb
sbb
sbb
out
shll
sbb
xor
ss
mov
sub
aaa
hlt
pop
fwait
or
testb
adc
adc
addr16
mov
jae
ljmp
in
mov
add
pop
mov
les
pop
movups
lret
pusha
cmpsb
and
in
scas
lock
mov
arpl
out
fsubr
push
insl
mov
into
pop
lock
arpl
xchg
sbb
sub
jae
int3
insb
cmp
lds
or
pop
mov
add
jl
cs
push
movsb
pushf
jle
in
movsl
imul
ss
sbb
and
out
jl
sbb
xchg
mov
xor
stos
aas
out
fdivrs
xchg
into
out
cli
dec
roll
inc
dec
mov
mov
mov
mov
aas
cmp
jae
mov
and
popa
lock
mov
push
jge
mov
jecxz
int3
rorb
shrl
lods
or
lods
inc
and
mov
int
cmp
pushf
inc
mov
mov
inc
dec
inc
dec
and
push
test
or
adc
lock
addr16
subb
mov
push
xchg
add
jecxz
mov
and
inc
push
push
push
add
fnstcw
jl
sbb
nop
jmp
and
add
in
jecxz
dec
push
cmpsl
ljmp
in
cmp
pop
sub
sbb
jl
mov
mov
shlb
test
loop
pop
ret
xor
push
xchg
aaa
ret
iret
jmp
sub
push
xchg
ds
mov
xchg
mov
pmulhuw
xchg
dec
adc
pusha
jo
jmp
and
fdivrl
pop
pusha
aam
push
cli
dec
inc
mov
repz
cltd
push
jbe
push
sbb
or
mov
ror
xchg
fwait
movl
jecxz
jae
mov
push
lcall
inc
mov
push
inc
addr16
data16
idivb
orb
fimull
fwait
ret
and
fcmovnb
ja
ret
and
test
push
sbb
pop
pop
outsl
mov
fistps
and
mov
cmpsl
lea
nop
jb
push
cli
imul
xchg
and
adc
and
pop
inc
sbb
test
subb
gs
sub
out
cmp
jg
inc
dec
test
adc
pop
mov
lret
or
jne
and
adc
jecxz
jecxz
dec
inc
popf
add
adc
aad
into
xor
sub
xor
jge
pop
adc
and
lahf
lret
movq
dec
push
pop
stc
mov
fsts
cmpsl
das
in
inc
es
xchg
or
dec
and
mov
cmp
es
jnp
ret
cmpsl
jno
or
lcall
ret
leave
stos
add
mulb
xchg
int
stos
inc
dec
loopne
sbb
xor
scas
je,pn
call
lcall
mov
cli
stc
pop
std
pop
clc
fwait
dec
sub
mov
mov
cwtl
popf
out
stos
sar
sub
pushl
mov
sub
cmc
arpl
xor
add
jle
into
insb
or
je
xchg
mov
xor
leave
xor
test
and
ds
js
inc
xchg
pop
inc
mov
fsubrl
xchg
cmpl
dec
cltd
xchg
lahf
cmp
jg
fnstcw
mov
jae
mov
cmp
push
loop
sub
les
jge
gs
popa
pop
sar
out
sub
or
and
aam
inc
fstpt
mov
sahf
jg
lds
sub
cmp
test
inc
add
stos
adc
mov
sar
pop
leave
popf
mov
fiaddl
mov
mov
shl
test
loope
loopne
lods
outsb
insl
mov
jecxz
cltd
cmpsl
sub
mov
mov
int3
popf
mov
fdivp
jl
jmp
pop
leave
mov
inc
aam
jl
sub
movsb
inc
pop
pop
sub
in
cmc
dec
popa
fisubrs
adc
mov
jbe
adc
push
mov
aas
xchg
imul
call
js
jg
imul
jo
sbb
xchg
inc
repz
fsubrl
mov
into
test
out
lods
push
in
cmpsb
push
jns
or
push
xor
xchg
xor
adc
mov
dec
cltd
repnz
movsl
icebp
cmc
lret
popl
lds
push
mov
das
cmp
cmp
mov
lret
vandnps
imul
inc
xor
xchg
loope
je
outsl
aaa
sub
xchg
push
fbstp
pop
push
or
scas
lcall
or
adc
push
cmp
insl
mov
push
pusha
aas
lret
iret
adc
or
add
gs
in
xchg
jns
sbb
sarb
dec
int3
addl
adc
scas
pop
jno
dec
lods
out
xchg
mov
pop
test
inc
adc
dec
add
dec
test
or
jge
cld
clc
inc
dec
adc
lods
jle
repnz
jae
push
popl
ss
icebp
pop
mov
pop
push
les
push
imul
jle
push
cmpsl
adc
mov
adc
adc
dec
inc
loopne
lock
push
popf
mov
sbb
fdivr
xor
pop
xor
ljmp
scas
adc
rcrb
jmp
ja
xlat
xor
scas
enter
mov
stc
nop
cmp
xor
cli
sarl
subb
sub
and
fwait
jbe
fstpl
rcrl
xchg
and
cmp
push
cmp
xor
mov
mov
pop
cmp
addb
mov
test
inc
sub
inc
add
loop
xor
jecxz
hlt
push
mov
jns
les
sbb
xchg
flds
jbe
mov
sbb
out
xchg
aaa
mov
add
add
cmp
fstpt
jp
bound
repz
movsl
lock
inc
or
lds
addr16
insb
jne
lret
jno
daa
mov
adc
mov
or
add
push
outsl
scas
cs
or
xchg
mov
mov
inc
push
mov
inc
or
cwtl
xor
popa
pop
cmc
sbb
xor
frstor
sub
sub
mov
faddp
ja
push
pop
test
adc
add
rclb
mov
xlat
std
into
xchg
int
shl
or
cmpsl
pushf
in
mov
sbb
inc
or
stos
pop
int
jl
or
dec
loopne
dec
cmp
iret
dec
aam
daa
lret
popf
cmp
jle
pop
cmp
es
cmpsb
xchg
mov
movsb
lods
push
pop
sbb
lret
xchg
fcomps
lods
or
in
push
sbb
pop
test
in
jge
stc
and
mov
fldcw
inc
mov
xor
loop
dec
mov
pushf
sbb
sbbl
movsl
inc
add
imul
pop
cmpl
lods
and
cmc
pop
dec
lretw
push
adc
xor
inc
dec
leave
jmp
dec
out
and
ret
sub
insl
add
cmp
or
jb
sbb
aas
and
jp
sub
push
cmp
test
dec
aad
jmp
mov
and
cmp
and
ret
into
icebp
inc
nop
lahf
sub
call
push
scas
cmpb
cmp
fwait
inc
sbb
xor
jmp
fistpl
xchg
cmpsb
add
jmp
sbb
in
pushf
mov
push
jnp
in
sub
sbb
repnz
cmp
les
xchg
sar
out
and
fmuls
hlt
or
push
xchg
insl
cmp
out
xchg
or
push
xor
loope
test
movsl
pop
mov
push
mov
pop
test
mov
push
mov
push
mov
lods
fstpt
lahf
mov
sti
imul
xchg
jae
adc
outsb
outsb
nop
repz
mov
lcall
mov
imul
push
shrb
orb
xchg
add
std
mov
in
dec
mov
adc
cltd
cmp
ja
jae
jns
push
sbb
mov
inc
push
lcall
push
push
sbb
dec
adc
push
in
push
hlt
pop
add
hlt
test
pop
imul
loope
cmc
es
xchg
sar
arpl
lods
ljmp
pop
jno
xor
xor
aas
push
lods
lahf
jb
or
mov
inc
jne
mov
sub
fildll
loopne
sub
xchg
push
xor
ffree
sbb
push
mov
sahf
test
pop
cwtl
or
adc
ja
add
inc
push
fscale
in
dec
mov
push
mov
sbb
mov
and
les
mov
or
jmp
notb
push
nopl
in
push
imul
ss
leave
aam
inc
in
stos
rcrb
sbb
push
dec
fstpl
adc
pusha
mov
mov
mov
gs
jns
in
leave
or
lcall
repnz
in
adc
in
fstpt
jnp
enter
dec
xchg
xchg
cmp
test
sarl
outsb
cltd
js
call
shrl
popf
mov
and
loope
push
scas
mov
pop
roll
hlt
add
or
xor
add
add
jecxz
enter
or
and
cmp
repnz
test
or
or
insl
loop
jne
or
shrb
outsl
scas
or
add
enter
sub
jge
jne
pop
mov
jb
lods
pushf
mov
rol
sbb
ss
jae
lahf
lods
scas
add
push
sub
and
cmp
push
cli
stos
dec
lret
shlb
test
inc
mov
inc
add
outsl
test
flds
sbb
mov
mov
aad
dec
out
inc
xchg
push
adc
shrb
mov
mov
mov
jb
cmp
push
nop
mov
cmc
push
pop
into
sbb
movsb
cli
dec
and
jmp
shlb
sahf
adc
sub
pushf
xchg
and
dec
lods
cmp
dec
jmp
out
and
xlat
dec
pop
jbe
inc
leave
xchg
mov
sub
das
pop
mov
adc
out
or
cs
inc
mov
mov
jecxz
dec
xchg
mov
in
mov
fs
and
cmpb
pop
rol
aam
push
cmp
jmp
outsb
mov
fmuls
fneni(8087
mov
dec
jne
hlt
xor
xor
add
in
adc
std
mov
outsb
dec
xchg
and
push
cmp
sarb
add
jmp
inc
dec
xchg
sti
das
dec
lcall
gs
and
icebp
repz
mov
cmp
repz
add
mov
xor
popf
push
mov
pop
cmp
out
pusha
inc
xor
fs
xchg
mov
jg
jns
adc
xchg
shlb
add
push
les
test
icebp
add
or
loope
cmp
out
pushf
push
pop
jo
dec
ds
pop
outsb
dec
outsl
test
sub
push
fists
out
pop
inc
rclb
int
mov
push
adcl
flds
sub
dec
sbb
add
mov
sub
js
jecxz
sub
jg
pop
lods
jecxz
or
data16
cvtps2pi
scas
bound
sub
xor
lret
mov
stc
and
int
xchg
sbb
mov
xchg
jbe
pop
loope
mov
mov
lcall
cwtl
and
xor
jp
xchg
and
lret
push
scas
jecxz
lods
fldenv
insl
mov
push
xchg
fisttpll
out
jle
xchg
xor
lea
inc
and
sbb
xor
and
xor
pop
lret
jmp
cmpsb
adc
loopne
pop
lea
push
push
bound
jne
push
hlt
dec
test
test
xor
mov
cld
cs
dec
add
mov
sbb
push
addr16
movsb
test
push
push
ljmp
nop
pop
arpl
addps
cmpsl
mov
outsl
sbb
adc
push
mov
add
mov
adc
jmp
sbb
add
mov
out
and
mov
adc
test
or
add
xor
cli
outsb
cli
dec
scas
daa
push
jo
inc
int3
outsb
sub
push
jle
jne
xchg
rorl
jl
pop
int
pop
sub
lods
add
push
fidivrs
mov
test
add
sti
shll
pop
imul
inc
pushf
insl
mov
int
ljmp
push
fistps
punpcklbw
mov
arpl
and
stos
inc
in
std
je
out
sub
xor
cmp
jns
push
repz
adc
pop
hlt
and
and
inc
xchg
mov
ret
lods
mov
iret
dec
jne
inc
fwait
popa
rcl
scas
cmp
test
stc
test
arpl
dec
mov
cmp
jns
inc
in
shrb
rorl
sahf
lods
add
lret
and
insb
outsl
sub
ljmp
jp
cli
in
movsl
or
adc
xor
push
or
add
loop
cld
or
push
nop
mov
int
std
mov
dec
aam
push
in
cmp
nop
xchg
pop
fwait
or
mov
movsb
sub
cli
sarb
fnstcw
jae
test
mov
icebp
push
mov
aas
lds
cmp
pop
sti
sbb
pop
popf
lods
or
repz
aas
cmp
xor
adc
insb
pop
outsb
jmp
mov
repz
enter
data16
push
popf
add
mov
push
mov
dec
jns
inc
pop
movsb
sbb
out
xchg
loope
daa
mov
outsl
data16
mov
cmp
cld
pop
mov
inc
mov
jne
and
lret
jle
aam
lahf
loop
mov
mov
mov
jg
add
notb
adc
mov
sbb
pop
lahf
repz
jno
mov
mov
adc
or
lret
xor
mov
or
mov
out
or
mov
inc
cmp
popl
push
mov
sbb
js
nop
aam
xchg
ja
roll
fs
mov
call
mov
adc
ss
rcrb
and
inc
sub
xor
inc
mov
xlat
cli
icebp
push
fsubrp
xchg
add
in
shr
mov
pusha
adc
dec
loope
test
mov
in
loop
stc
dec
jmp
pusha
or
aad
xchg
dec
outsl
dec
idivl
lods
stos
pop
sub
ds
mov
les
aaa
sbb
or
int3
bound
and
xchg
sbb
hlt
jae
out
cwtl
loop
imul
call
jnp
addr16
mov
out
xchg
lock
dec
jno
inc
push
jno
stos
xchg
inc
arpl
adc
and
adc
hlt
mov
mov
sbb
add
mov
fstpl
imulb
aaa
clc
fcoms
jae
pushf
mov
loope
and
imul
mov
mov
lcall
pop
ret
sub
lahf
popa
aaa
addl
jnp
cmp
bound
jmp
mov
decl
pop
mov
lods
dec
lahf
in
pop
maxps
sub
shl
mov
loop
sub
lods
mov
push
sahf
punpckhbw
iret
gs
data16
adc
xlat
enter
out
dec
and
repz
mov
dec
sub
jb
in
lret
and
jbe
jae
inc
dec
or
pushf
adc
data16
mov
stos
dec
jns
cmc
or
stos
pop
push
pop
jmp
mov
shlb
es
popf
repnz
fimull
sub
loope
dec
sti
dec
aas
mov
pop
jl
ds
jmp
data16
push
sub
sub
inc
pop
in
cld
mov
loop
fmull
sbb
xor
xor
cmpl
dec
mov
sbb
shr
pushf
pop
mov
pop
mov
and
mov
mov
jo
in
es
fsubs
xor
cmpsb
sub
dec
addl
sti
add
pusha
popa
std
lret
xor
test
xchg
pop
pop
jo
pusha
inc
xor
mov
inc
enter
sub
mov
jl
push
dec
jl
xchg
inc
or
push
scas
or
pop
fisttpl
in
push
dec
dec
orl
add
pop
or
and
push
stos
adc
mov
sub
cmp
or
mov
jp
loope
test
push
xor
lret
add
cmpl
push
fnstenv
mov
popa
jp
das
cmpb
rorb
and
inc
test
gs
call
jbe
mov
fists
std
cs
mov
out
enter
iret
jne
ja
fcomi
fidivrs
lret
mov
xchg
add
push
push
lahf
outsl
popa
jbe
mov
cld
push
negl
je
rdtsc
les
enter
sbb
mov
aaa
cld
push
or
out
loop
ds
xchg
pusha
popa
and
sub
pop
adc
shlb
xorb
sbb
or
fs
lahf
cmp
out
popl
mov
roll
lods
mov
push
add
dec
push
jno
mov
xor
xchg
and
mov
push
push
push
inc
mov
data16
lcall
jmp
mov
mov
scas
cld
ljmp
mov
sub
pop
mov
je
aad
icebp
and
imul
xor
stos
leave
stos
mov
sbb
fmuls
stos
dec
fsubrp
imul
fimull
push
icebp
fidivrs
sub
pop
xchg
cmpsl
scas
push
lock
adc
shlb
ja
pop
and
mov
cmpsb
add
imul
dec
xchg
fucom
adc
or
cmp
shl
sbb
dec
sbb
mov
aam
mov
sahf
jns
sub
int3
ret
fcomp
xorl
jg
xchg
inc
es
fsubrl
imul
sti
mov
jp
push
and
mov
jne
adc
test
xor
mov
adc
mov
pop
mov
sbb
arpl
popa
ja
sub
iret
sbb
cmp
and
mov
mov
or
scas
daa
cmc
call
sar
lock
and
sbb
cmp
int3
jl
ret
sub
sbb
mov
adc
mov
out
cmp
pop
std
loope
stos
mov
imul
xor
lock
int
lcall
mov
shrl
inc
pop
cmp
add
js
xchg
xchg
and
je
pop
mov
shr
pop
js
dec
movsb
add
fcoml
lock
movsb
pop
into
and
out
add
out
sub
cmp
lods
jge
jle
pop
cmpsl
sub
or
jae
push
ret
jl
mov
and
sarl
gs
out
nop
xor
inc
sub
jae
rorl
pop
cmp
or
push
sbb
sub
xor
mov
pop
and
ret
pop
data16
inc
sub
pop
fiaddl
lds
push
jge
pop
nop
xchg
cmp
and
dec
test
cs
mov
push
iret
sbb
fwait
imul
cmpsl
pusha
fs
out
imulb
loopne
mov
jl
xchg
sbb
pop
inc
daa
insb
cltd
xlat
jp
push
cld
mov
push
or
pop
jge
mov
es
add
mov
mov
and
cmp
mov
push
or
outsb
mov
fs
jo
fmuls
aam
outsl
xchg
mov
jbe
jne
test
sub
push
or
or
stos
ljmp
dec
pop
je
shl
cmp
in
mov
mov
mov
adc
sub
in
and
in
adc
pop
ss
ss
mov
xor
inc
cmpsb
fists
jle
icebp
mov
jnp
dec
mov
test
sahf
insl
in
push
mov
mov
push
xchg
lret
cwtl
lods
orl
movsl
pushf
lods
sti
ret
fidivrs
int3
xor
inc
adc
call
push
test
push
xchg
lea
std
lods
jbe
enter
pushf
pop
mov
push
dec
dec
pop
mov
rorl
outsb
test
loopne
imulb
pushf
and
sbb
mov
lds
sarb
add
xor
bound
pop
repnz
push
ss
insl
cmc
fwait
lret
adc
adc
dec
push
push
cltd
lods
mov
ss
fldt
xchg
cmp
jne
or
sbb
xchg
xor
out
inc
and
mov
dec
rclb
adc
pop
xor
and
xchg
push
clc
scas
dec
sti
das
aas
mov
sbb
pop
hlt
xchg
dec
popa
add
aaa
fs
mov
movsl
int3
push
jl
mov
sub
aas
cmp
lea
add
imul
stc
sahf
mov
dec
in
sub
and
fstl
ficoml
out
out
push
jp
sbb
aam
sub
ret
sub
movsl
sarb
nop
mov
ret
xchg
cmpsb
jno
cmpsl
mov
testb
adc
push
ljmp
stos
dec
divb
mov
fdivrs
test
xchg
loopne
out
add
mov
ds
clc
out
sbb
or
add
xlat
cs
sub
out
adc
jae
or
in
mov
addb
lcall
aam
imul
mov
ss
popf
adc
jbe
sbb
lds
and
addr16
sub
cli
scas
dec
repnz
in
nop
pop
or
xchg
push
pmaddwd
dec
stc
iret
push
sub
call
cmp
hlt
add
mov
fisttpll
into
pop
cmc
mov
adc
xor
and
ja
pop
mov
addl
xchg
jbe
mov
xorb
popa
std
adcl
mov
inc
xorl
push
mov
cmp
mov
mov
roll
notb
push
stos
and
sub
in
loope
cmovle
mov
test
lret
push
jle
xchg
ret
xor
xor
decb
push
shl
fwait
and
rorb
lea
inc
mov
out
ds
and
mov
outsl
popa
mov
push
cmp
in
notrack
xor
test
add
cli
outsl
and
sub
fsubrl
stos
clc
stos
mov
pop
jno
jno
cmp
sbb
pop
lret
nop
add
xor
loopne
pushf
and
fdivl
jbe
or
nop
std
dec
inc
popl
popa
pop
xchg
sub
cltd
and
shll
fdivl
sbb
rorb
jl
adc
dec
sbb
fcoml
clc
push
lret
pop
rcll
shlb
aam
cli
addr16
or
je
cld
xor
jecxz
jnp
lock
scas
addb
add
xor
in
mov
xor
scas
jne
aam
iret
or
cmp
cmp
sub
xor
andl
jns
cmp
xchg
mov
push
xlat
mov
adc
fisttpll
fwait
jne
pop
or
out
test
cmp
push
fisttpl
mov
xchg
pop
mov
dec
lea
mov
xlat
mov
adc
inc
pushf
cmc
idivb
imul
inc
adc
lret
pop
out
sahf
lret
dec
in
stos
mov
cltd
dec
adc
ror
cmpsl
fildl
add
mov
fdivs
mov
ret
push
adc
das
jae
dec
sahf
xor
mov
in
insw
imul
orb
in
cwtl
and
push
shlb
or
and
rcll
loopne
mov
xchg
pop
in
outsb
scas
add
std
lds
pusha
xorb
xor
and
int3
bound
jns
inc
repz
cmp
pop
push
push
push
xor
mov
sbb
aad
in
call
pop
dec
dec
cmp
pop
adc
cs
xchg
loop
and
jns
mov
cli
in
andb
out
sbb
or
mov
imul
push
xchg
inc
repnz
lahf
jno
int3
mov
or
mov
mov
fnstsw
push
lret
push
outsl
stc
clc
das
mov
movsb
dec
and
push
push
mov
push
test
fs
dec
addr16
es
xor
jb
in
push
shll
lods
mov
enter
push
repz
pop
xor
lock
jl
pop
out
mov
xor
dec
mov
mov
test
jb
lea
pop
and
fisubrl
adc
xchg
insb
sbb
add
add
mov
mov
or
mov
leave
jge
call
sub
mov
ja
clc
stos
pop
dec
pop
stos
data16
repz
adc
pop
push
in
dec
and
jbe
cmc
mov
enter
or
sub
out
push
pushf
fidivrs
out
movsl
lock
dec
nop
mov
ljmp
rcrl
mov
mov
pop
les
in
add
cltd
in
lret
andl
aaa
and
dec
jecxz
jmp
or
adc
pushf
sub
mov
insl
inc
cmp
lret
outsb
sub
lods
inc
pop
inc
cmp
mov
jge
mov
mov
mov
mov
shrb
mov
jbe
dec
das
insl
aas
stc
sub
lods
and
repz
sbb
rorl
push
insl
clc
jle
push
sub
mov
xor
dec
rclb
mov
sub
mov
jae
idivb
mov
in
movsb
sub
fs
outsb
dec
xchg
mov
or
mov
mov
add
xor
iret
fiadds
imul
xor
data16
push
jb
rorl
and
into
and
xchg
movb
xchg
aas
mov
jge
jp
dec
fisttpl
ljmp
fbstp
dec
cld
xor
cltd
fnstsw
lahf
sub
and
mov
leave
out
subl
dec
js
mov
test
xlat
outsb
jb
jo
mov
sbb
push
gs
xchg
jb
cs
popf
jmp
imul
out
push
jnp
sub
or
test
and
xchg
jnp
dec
dec
cmp
sub
es
cld
xchg
fldt
xchg
es
popf
imul
and
lds
bound
lea
inc
popa
outsl
sub
mov
data16
push
insb
lock
pop
push
or
lea
mov
cmp
shl
jmp
pop
sub
inc
fcompl
loope
dec
stc
sbb
inc
pusha
lar
xchg
and
icebp
add
nop
cmp
cld
push
popa
fldl
nop
jnp
pop
fs
mov
add
push
sbb
mov
stos
pop
cmp
test
mov
rclb
push
and
jo
cs
jmp
out
pop
loope
mov
fbld
rcrl
dec
dec
jge
pop
mov
arpl
in
loop
mov
loope
mov
sti
lods
sbb
lea
in
arpl
repz
test
jb
imul
in
ljmp
pop
push
daa
icebp
popa
jno
cmp
movaps
mov
push
adc
sbb
ljmp
add
mov
mov
stc
mov
add
xor
pop
add
aam
loope
mov
adc
jp
dec
and
stos
imul
inc
mov
adc
stos
int3
push
bound
clc
and
mov
xchg
ds
add
inc
inc
push
or
inc
imul
stc
imul
hlt
gs
push
in
mov
mov
xchg
sbb
inc
jmp
insb
rcl
mov
icebp
or
dec
push
cmp
jge
and
xchg
imul
hlt
xchg
enter
loope
in
sti
pusha
jmp
push
cmp
out
push
mov
xchg
in
stos
or
xchg
mov
sub
je
out
lcall
ret
insl
mov
outsb
in
pop
test
mov
inc
rclb
mov
mov
les
stc
adc
sbb
ss
into
inc
adc
mov
and
lret
add
cs
mov
cli
leave
cmc
in
inc
or
mov
popa
pop
jns
mov
idivb
jge
push
and
test
and
inc
int
xchg
cmp
outsl
pushf
sbb
or
dec
fwait
leave
mov
js
aam
test
lds
inc
insb
leave
mov
jno
sub
mov
nop
out
mov
xchg
and
repnz
add
into
jmp
insb
clc
or
cmp
les
hlt
clc
in
icebp
rep
jecxz
je
xchg
es
mov
push
scas
and
aam
push
and
in
mov
rorb
adc
adc
out
pop
lea
outsb
gs
or
jne
push
push
nop
out
push
push
mov
mov
pushf
sub
pop
es
lds
add
hlt
adc
test
push
adc
out
adc
push
mov
pop
inc
lcall
push
and
xor
sbb
jg
lods
lock
je
stos
mov
adc
jl
aad
cli
mov
cmp
xchg
jp
xchg
test
loop
jl
or
and
test
in
pusha
xchg
add
mov
cmp
pop
das
icebp
scas
out
push
xor
sub
adc
outsb
pop
pusha
jl
pushf
pushf
in
xchg
xchg
test
call
pushf
aas
outsl
movsb
pusha
or
and
sub
pop
test
dec
stc
dec
mov
sbb
mov
inc
lods
mov
xlat
test
sbb
jl
fidivrs
pop
dec
jnp
jae
mov
add
push
movsb
jbe
push
ja
sub
lea
push
add
push
les
hlt
in
inc
xchg
sub
jae
xchg
test
mov
inc
adc
or
shrb
jnp
inc
jle
aas
lahf
inc
ljmp
and
or
cmc
fistpll
je
xchg
cmpsb
rol
arpl
bound
pop
sub
icebp
fidivrl
add
mov
push
lret
aad
in
lcall
iret
test
daa
pop
mov
repnz
dec
add
pushf
push
scas
jp
xchg
add
mov
mov
add
jno
or
jb
add
ret
or
pop
dec
add
add
movsl
mov
mov
call
pop
mov
mov
mov
je
jb
sub
and
cmp
in
and
cs
pop
fldl
popa
push
xor
add
xor
js
movsb
cs
cmp
fmull
mov
outsb
sbb
and
scas
push
xor
add
jne
dec
xchg
dec
cmp
loop
js
imul
loope
pop
and
mov
leave
ja
aam
pop
decb
hlt
mov
xor
push
enter
stc
jl
inc
jb
ljmp
mov
das
sbb
aas
bound
ds
inc
enter
inc
jl
pop
frstpm(287
mov
push
cli
jno
sub
dec
rorb
sbb
aam
stos
cmc
andb
bnd
sub
mov
cmp
sub
jp
das
adc
loope
adc
or
sbb
adc
ja
in
and
lret
push
inc
mov
mov
movsl
pop
les
cmp
pminsw
xor
push
sbb
or
inc
fbld
cmpsb
rolb
or
xorb
dec
shl
xchg
sbb
scas
popa
cli
scas
adc
and
icebp
rcr
push
push
push
fcomps
rcrl
cmp
sub
notb
xor
mov
dec
inc
mov
ja
ja
daa
dec
ds
mov
ljmp
mov
pop
lea
mov
jge
hlt
aas
ja
les
mov
stc
loope
pusha
test
outsb
dec
jo
std
mov
xor
in
sbb
dec
mov
ljmp
aad
mov
push
mov
xchg
dec
pusha
push
popf
pop
pop
cmp
out
xchg
aad
jo
in
push
ja
jle
dec
cmc
pop
mov
inc
pop
bound
sbb
xchg
fstps
cmp
xchg
pop
inc
fldenv
mov
sub
lods
mov
das
ss
in
add
adc
cmpsl
out
xor
shl
xor
cmp
sbb
insb
mov
jge
push
push
push
add
cltd
loope
and
mov
jp
btr
push
xchg
and
lea
lds
jno
in
mov
sub
push
adc
mov
test
xchg
movsb
or
mov
jnp
jae
xlat
xchg
jnp
mov
scas
int
pop
lock
rcrb
and
sub
push
movsl
push
js
jmp
push
adc
sub
ja
into
out
adc
insb
enter
ljmp
icebp
lcall
push
js
adc
in
fsubr
pop
sub
push
cmp
and
nop
mov
xchg
pop
jbe
mov
icebp
mov
xchg
adc
inc
out
pushf
movsl
pop
jo
sub
iret
stos
fldl
jecxz
cmp
or
mov
cmpsl
jb
mov
mov
mov
xchg
push
shll
sub
mov
sahf
leave
adc
or
push
adc
sbb
mov
mov
testb
xchg
pop
and
jns
ljmp
and
adc
xchg
or
xchg
pop
adc
test
xor
fistpll
loopne
jmp
mov
lahf
push
rcr
fimull
imul
adc
lds
pop
mov
mov
cmpsl
xor
outsb
shll
mov
dec
gs
jge
add
jns
mov
mov
clc
fisubl
sbb
add
cmpb
or
adc
dec
out
xchg
push
scas
jnp
leave
xor
xchg
std
xchg
jbe
xchg
mov
notb
mov
push
mov
das
and
into
fnsave
cmp
punpcklbw
mov
daa
out
je
mov
gs
movb
mov
out
pop
mov
std
jecxz
shrl
negb
xchg
cmp
push
rcll
dec
mov
push
push
dec
cmp
cmp
mov
inc
dec
xchg
jnp
loop
push
jge
sbb
stos
xchg
adc
mov
inc
test
xchg
mov
dec
push
sbb
cli
pusha
shlb
xor
mov
nop
jmp
hlt
mov
inc
cmp
push
aad
inc
add
test
jge
jns
mov
loop
mov
in
outsb
inc
jecxz
push
scas
mov
dec
adc
loopne
in
pop
out
lahf
clc
jno
pushl
mov
cmp
andl
push
sub
or
mov
mov
cmpb
sub
or
add
fldt
lods
cmc
xor
mov
mov
cmp
mov
dec
push
push
insl
xor
mov
mov
dec
ret
lds
int3
cld
enter
cmp
mov
sbb
xchg
dec
jmp
xlat
loope
lahf
and
mov
pop
popa
cmp
out
aaa
push
jge
pop
fisubs
ljmp
sub
negb
dec
jns
dec
insl
dec
cmc
jmp
fld
shll
das
movsl
jl
imul
add
arpl
je
cmpsb
popa
pop
sub
adc
inc
aam
sub
lds
mov
adc
xor
pop
sahf
arpl
andl
or
mov
sbb
shll
jo
dec
inc
loop
xor
jl
sub
mov
icebp
inc
pop
sbb
jnp
cmp
inc
dec
jno
xlat
and
ret
leave
xor
and
jecxz
or
xchg
outsl
rcrb
dec
js
xchg
jne
jle
xchg
fcoms
aas
xor
rcrb
mov
loope
daa
subl
std
cmpsl
sti
insl
test
sub
inc
mov
and
popa
stos
xchg
out
mov
fwait
loopne
bndldx
push
pop
jns
and
int3
mov
divl
dec
fwait
inc
repnz
repz
leave
mov
aad
pop
clc
push
sbb
or
cmp
jnp
sub
add
fwait
popa
sub
mov
addr16
aam
sbb
jmp
lcall
jge
xchg
pop
pop
dec
or
xlat
popa
mov
lds
into
aas
dec
xlat
test
stc
jle
call
dec
push
xor
in
sub
jno
fdivl
and
daa
add
cmc
test
sbb
mov
lea
mov
daa
jne
and
mov
es
test
jns
test
call
cld
push
in
jle
sbb
outsb
or
hlt
mull
dec
pop
xlat
sub
mov
std
addr16
dec
adc
outsb
and
sbb
adc
sub
jne
mov
mov
mov
bound
pminsw
aaa
mov
and
aas
sbb
cwtl
gs
push
fdivl
imul
jno
jg
loopne
mov
mov
daa
jl
sti
nop
mov
outsb
repnz
in
and
icebp
mov
int
movsb
outsl
stc
mov
xor
add
sbb
jecxz
lods
mov
imul
pop
push
xchg
sub
sbb
and
pop
leave
pop
idivb
or
arpl
pop
adc
insb
cmp
pop
ret
inc
test
adc
mov
lods
xchg
xlat
and
dec
fcom
sahf
push
sbb
sub
icebp
sahf
and
mov
pop
clc
mov
insl
dec
in
mov
shlb
dec
xor
and
dec
push
gs
dec
lods
fisttps
packuswb
rcr
pop
lods
xchg
sti
push
ss
repnz
push
push
jno
sarl
pop
mov
mov
xor
repnz
xlat
pop
push
cld
mov
outsl
jne
sub
into
jecxz
in
mov
mov
lods
add
push
stos
push
xchg
push
cmp
fadds
push
xchg
ror
or
enter
imul
pop
cmp
adc
cmp
and
push
or
fsubl
jecxz
sti
dec
xor
lret
adc
out
das
hlt
lret
and
cmpsl
push
dec
push
push
jl
outsb
fistpl
bound
sbb
outsb
sub
pusha
dec
dec
sti
mov
pop
add
cmp
push
adc
pop
das
sti
push
or
and
in
cmp
mov
xor
test
sar
push
and
out
sub
ss
test
mov
dec
lods
lods
and
adc
xchg
inc
push
gs
es
subl
pop
rclb
test
sub
mov
jg
call
push
icebp
mov
lods
rol
add
add
jno
mov
jno
fstp
mov
jge
sbb
add
shl
mov
repz
stos
enter
pop
mov
dec
jecxz
sbbb
dec
xchg
mov
popf
arpl
adc
xchg
inc
push
cmc
fdivrp
or
dec
outsl
and
adc
add
dec
les
jecxz
scas
inc
in
adc
mov
cmp
pusha
xchg
clc
aaa
repz
jge
mov
hlt
push
jp
cmp
sbb
ficompl
mov
aaa
stos
stos
sub
insl
stc
dec
test
arpl
mov
jns
gs
stc
imul
sbb
inc
jne
or
pop
push
cli
lahf
test
jae
pop
xchg
leave
lret
xor
fwait
pop
xchg
repnz
pusha
cmpl
lret
jmp
and
jl
mov
aad
cmp
cld
out
out
in
stos
fistps
mov
pop
pop
scas
arpl
and
xchg
and
push
mov
mov
cmp
add
cld
lret
inc
adc
lret
and
lock
xchg
into
gs
cltd
loope
iret
enter
rcrl
fs
in
push
xchg
orl
ds
add
sarl
sub
jl
mov
mov
in
jg
push
out
hlt
cs
cmp
add
dec
xchg
loop
mov
popf
dec
rep
jecxz
mov
mov
fisubrs
hlt
enter
sti
mov
testl
stc
adc
test
cmp
test
and
jnp
mov
push
jl
inc
pop
dec
sbb
stos
outsb
loope
push
xor
add
hlt
iret
adc
into
cmpsl
outsl
dec
scas
lret
insl
lods
stos
mov
pop
bnd
mov
std
fwait
mov
fbld
xchg
or
out
cmp
jnp
dec
jmp
jb
clc
clc
xor
push
repz
loopne
xor
outsb
int3
fucomip
mov
pop
pushf
inc
aaa
addr16
mov
jb
jmp
inc
idivl
xor
mov
push
and
dec
in
shld
xchg
cwtl
pop
fstpl
test
inc
mov
cmp
sbb
sub
and
inc
push
int
or
pop
std
mov
mov
pushf
push
xor
lods
and
loop
add
jg
push
dec
or
mov
inc
sahf
jg
sub
repz
bound
call
inc
and
push
pop
enter
into
sbb
out
ret
mov
xor
loope
push
scas
in
or
sub
mov
popa
movsb
jl
hlt
sbb
add
push
cmpsl
jnp
push
bound
icebp
stos
mov
mov
ja
mov
fucomip
fwait
sahf
ds
fwait
mov
inc
pop
icebp
lock
repz
cmp
in
push
int3
pop
push
jne
shr
lds
push
jb
pop
stos
or
jl
gs
add
das
roll
adc
and
cmp
push
cmp
mov
push
jae
jl
ja
dec
negb
push
xor
xor
cmp
xor
mov
int3
pop
in
sbb
jge
mov
xor
pop
xorb
or
shl
cmp
shl
in
add
aam
in
insl
cmpsl
out
xchg
xlat
cmpsb
and
ja
inc
ret
imul
pop
icebp
inc
dec
lock
dec
add
movsl
lahf
xchg
fldl
shr
adc
fisubl
mov
sbb
sbbl
cmc
ret
xor
fmull
cs
sub
mov
push
imul
out
lods
idivl
jle
dec
mov
scas
int3
add
cmp
dec
shll
mov
mov
ret
dec
xchg
rcr
shll
add
scas
lea
call
mov
cmp
push
dec
and
je
aam
adc
int3
sahf
push
jbe
xor
js
lods
mov
inc
out
mov
and
jecxz
inc
push
rorb
nop
cmpsl
xor
pop
int
jle
adc
lods
pop
sub
sbb
jae
das
mov
mov
mov
dec
stos
dec
fldl
xor
jp
test
dec
adc
mov
repz
repnz
adc
imul
and
stos
ret
sarl
add
dec
inc
pop
jne
dec
jge
jb
arpl
aam
bound
cmpsb
cs
test
push
dec
repz
insl
clc
inc
cmp
lds
enter
adc
sub
xchg
cwtl
ds
or
add
or
inc
pop
xor
push
call
mov
sbb
lret
dec
fisttpll
cmc
pop
lcall
les
test
clc
int
or
mov
leave
and
and
popa
dec
loop
jle
cmp
push
sbb
push
gs
ds
or
movl
xor
cmp
add
ror
fildl
std
jne
mov
jb
call
jp
idivb
inc
xor
or
mov
mov
ja
mov
int
scas
pop
push
sbb
xchg
pop
push
pop
stc
xchg
mov
mov
mov
outsb
int3
cli
imul
mov
test
xor
punpckldq
mov
mov
lmsw
pop
sub
fwait
incl
mov
pop
jo
popf
ljmp
mov
xchg
jge
push
lret
outsb
arpl
sub
dec
pop
lea
aad
lock
clc
adc
stc
mov
mov
fwait
mov
push
pop
mov
inc
cmpsb
divb
out
mov
sub
incl
xor
ret
js
mov
push
xchg
lcall
mov
pop
idivl
push
fwait
icebp
xchg
outsl
add
push
dec
cmp
xor
out
cmp
mov
xor
mov
fimuls
bound
jmp
jp
inc
sub
mov
add
jb
push
sub
jecxz
rorl
test
xchg
loop
add
and
mov
push
lods
enter
pop
ljmp
neg
pop
jmp
ss
lea
mov
shlb
mov
inc
mov
mov
setl
push
adc
pop
jl
insl
add
mov
mov
int
push
mov
xchg
fiadds
jae
push
stos
mov
xchg
sub
or
push
xor
jecxz
cmp
cmp
xchg
jno
imul
pop
pop
mov
jae
cmpsb
mov
ficompl
in
loopne
lods
add
add
mov
inc
dec
stos
cmp
pop
popa
out
add
jnp
dec
push
test
mov
sub
pop
sub
pop
adc
movsb
out
in
rcr
psubsw
ja
cmp
sub
push
inc
cmc
fistps
orb
mov
out
and
or
push
mov
movsb
or
popf
sub
es
cld
or
jl
jmp
das
cmc
inc
imul
xor
mov
fdivrl
cld
adc
add
inc
mov
mov
push
add
push
push
iret
ljmp
mov
cmpsb
aam
in
and
push
rclb
mov
or
jne
mov
cmp
mull
lcall
mov
in
pop
stos
aas
nop
cmpsl
mov
add
shrb
push
xor
mov
mov
jno
out
dec
jne
mov
mov
xor
loopne
pop
iret
push
insl
fadds
orl
jg
idivl
sub
cmpsl
xchg
out
stos
cmp
mov
sbb
jl
and
dec
xchg
sub
fs
subl
mov
loop
adc
test
jmp
stos
movsb
cwtl
pushl
scas
iret
xlat
push
stc
std
pop
sbb
fcmove
dec
arpl
sbb
loop
sbb
insb
adc
push
ljmp
adc
dec
xor
idivb
and
jne
cmp
into
or
test
stos
shr
pop
adc
mov
xor
imul
repnz
pop
fs
popf
mov
aaa
data16
sbb
ret
scas
stos
lods
dec
mov
sbb
cmpsl
addr16
mov
push
add
push
mov
sbb
and
add
pop
sub
push
clc
adc
out
loopne
je
or
hlt
ljmp
mov
aaa
lods
ljmp
mov
or
push
mov
out
adc
ror
add
mov
lcall
inc
jb
pop
push
insl
shrb
xor
jp
inc
fiaddl
add
or
and
ret
mov
data16
jns
cmp
fidivrl
jmp
jno
cmp
mov
scas
inc
add
aam
xchg
fld
push
xchg
les
dec
cld
movsb
and
push
int
stos
das
cmpsb
lahf
jle
cli
jmp
lahf
ljmp
fbstp
fisubs
pop
je
cld
dec
adc
pop
xor
loopne
add
int3
and
mov
xchg
jl
cmp
inc
pop
je
push
dec
add
sub
jge
lret
sub
push
in
pop
jns
outsb
dec
or
ja
rol
aam
xor
subl
arpl
xchg
mov
and
or
outsl
cmp
push
lahf
sbb
sbb
subl
out
xchg
movsl
jbe
jl
ret
jge
mov
lock
jmp
nop
lods
test
push
fisubrl
and
pop
mov
stos
xchg
mov
inc
xor
loope
jl
out
inc
jmp
in
test
pop
data16
push
popa
and
sbb
out
and
jb
jb
fisubrl
shlb
dec
and
inc
mov
es
inc
ds
xor
stos
xor
bound
inc
xchg
fildll
js
ret
xchg
sub
cmpsl
push
loopne
repz
dec
jecxz
xlat
sbb
addr16
pop
ss
cmp
loope
mov
cmp
mov
mov
mov
xor
mov
xorl
lods
inc
xchg
push
mov
pop
int
inc
stos
leave
inc
in
mov
push
cs
pusha
decl
xchg
sbb
mov
xchg
movsl
out
pop
pop
pop
loop
enter
xchg
sub
mov
push
in
jnp
add
dec
pop
push
daa
or
sub
lock
xchg
dec
ret
inc
push
cmpsl
jne
mov
lea
mov
lahf
jge
push
mov
add
sbb
leave
in
pop
insb
jecxz
and
fadd
mov
cmp
xchg
ljmp
outsl
fimuls
jle
loope
sub
int
mov
daa
std
js
adc
xchg
fldl
jmp
adc
inc
inc
push
dec
roll
xchg
dec
mov
aas
jle
push
mov
cld
add
ljmp
sbb
inc
out
mov
or
aad
xchg
xor
push
mov
xor
outsb
loope
mov
arpl
jecxz
and
in
sub
repz
loop
xor
pop
and
or
xchg
sbb
js
ja
xor
add
jbe
addr16
or
fiaddl
jle
imul
inc
and
ja
jne
loop
das
mov
aas
imul
xchg
out
jae
push
mov
jl
ds
ret
lret
or
lret
rorb
into
inc
inc
pop
out
push
cmpsl
inc
cmpsb
pop
movsb
loope
call
leave
daa
mov
mov
xor
push
jo
pushf
lods
insb
imul
xchg
push
xor
leave
adc
addl
jmp
sbb
imul
jne
mov
aad
negl
stos
pushf
sub
imul
jp
fiadds
or
mov
cld
add
data16
rcl
cmpsb
pop
pusha
into
sbb
push
mov
sbb
push
call
ss
sub
mulb
cwtl
jl
xor
mov
lods
push
aaa
mov
add
push
aaa
cmp
pop
outsl
ds
pop
dec
hlt
mov
test
ds
inc
fisttpll
push
rorw
jo
push
clc
mov
ss
fdivl
repnz
leave
pop
dec
loope
mov
pop
inc
push
es
inc
xchg
push
shll
rorl
push
sub
jecxz
lods
cmc
xchg
dec
jecxz
pop
pop
bound
das
xor
pop
push
adc
and
das
mov
test
movsl
and
cmp
mov
add
sub
add
push
jno
bound
inc
xlat
out
mov
cmp
jae
xchg
dec
cmpsb
inc
fcompl
push
adc
jmp
or
cmp
dec
fld
push
adc
sbb
fld
out
inc
loop
fwait
inc
hlt
mov
push
add
fdivl
lret
in
dec
clc
jl
push
jnp
sub
lcall
xchg
aas
push
inc
or
outsl
sbb
adc
jnp
dec
imul
xor
cmpsl
mov
cmp
lea
loope
lret
out
sub
fwait
lock
lods
arpl
dec
fistpl
mov
mov
int3
repz
lods
hlt
mov
sbb
and
andb
ret
jmp
push
and
pop
loope
aaa
popa
gs
add
cld
sub
cmp
pop
sti
add
mov
int
ret
mov
mov
pop
repz
negb
dec
test
mov
rorb
mov
into
out
popa
mov
repnz
cmpsl
dec
insb
ret
dec
xchg
pop
ret
data16
jo
jl
jmp
loopne
mov
hlt
sar
cmpsb
mov
out
or
xor
addr16
pop
or
cmc
in
jle
xchg
mov
stc
mov
stc
mov
push
jmp
mov
inc
fiadds
push
jns
in
lret
inc
aam
js
mov
in
or
and
pop
aad
push
xchg
sbb
ljmp
arpl
mov
and
mov
add
dec
xor
ja
dec
and
mov
cmp
inc
or
push
xor
xor
sbb
or
add
sub
data16
jnp
repnz
outsl
in
fcomp
cmc
sbb
xor
in
gs
or
xlat
mov
sbb
dec
cwtl
ret
add
cmp
lds
jno
jns
mov
scas
sub
jne
adc
jmp
mov
repnz
icebp
dec
or
push
rcll
outsb
lods
and
xor
pop
imul
hlt
mov
imul
arpl
and
mov
fcmovnb
mov
dec
push
pop
add
decl
loope
sbb
pushf
adc
mov
mov
sbb
test
stc
push
mov
into
push
test
je
jo
shlb
mov
pusha
lcall
add
dec
dec
cltd
inc
test
push
in
cmp
xchg
int3
ror
push
insl
dec
shlb
popa
mov
xorl
mov
lock
mov
inc
lret
lret
xadd
pop
enter
xchg
cmp
fstpt
mov
jno
adc
and
add
push
inc
xlat
nop
jg
sub
pop
mov
mov
cmp
jo
lods
lret
in
or
les
arpl
test
neg
mov
pop
and
in
out
pop
mov
divb
lock
int
clc
jg
cwtl
or
bound
les
ljmp
mov
mov
test
or
lret
lahf
cmpsl
loopne
cwtl
gs
sub
scas
jne
pop
mov
and
push
mov
fnstenv
aad
aad
cltd
imul
dec
shrl
mov
xchg
enter
adc
fiaddl
sbb
or
imul
adc
dec
push
in
sar
add
in
add
scas
les
fisttps
ret
and
or
add
sub
in
pop
mov
in
arpl
shll
pop
jne
adc
jae
sub
fisubs
cmpsl
negb
fidivs
jp
call
sbb
int3
inc
imulb
xor
inc
mov
addb
cmp
leave
scas
mov
inc
mov
sarl
push
outsl
adc
fdiv
sbbl
add
dec
jno
int
and
fstps
rep
sbbl
inc
mov
cmp
subb
mov
jbe
mov
loop
ljmp
jbe
add
sub
adc
pop
add
mov
mov
push
xchg
sarb
gs
daa
mov
into
sub
xchg
mov
dec
push
leave
mov
pop
push
push
in
xchg
sbb
xorl
xchg
add
xchg
dec
rorl
pop
popa
test
repz
mov
xchg
cmpsb
and
pop
jns
daa
jle
xor
xor
jnp,pt
sub
out
addr16
cmp
test
mov
lcall
call
cmovp
jne
cmpsl
shrb
ret
add
xor
mov
mov
mov
push
xlat
ds
lahf
sahf
mov
inc
roll
sub
in
mov
jge
cmp
sbb
shrl
jl
xor
out
xor
jp
cmp
arpl
or
in
pop
sub
sub
and
lret
addr16
faddl
inc
stc
jmp
lcall
mov
sub
stos
fisttpl
andb
mov
bound
imul
mov
dec
push
adc
fcomp
adc
mov
imul
sub
insl
xor
and
cltd
pop
loope
js
xor
jge
fsts
xor
mov
mov
in
sbb
jle
pushf
fdivl
mov
fmuls
adc
addr16
jl
pusha
push
dec
pop
call
lods
insb
xor
mov
xchg
mov
loop
leave
sbb
fwait
cmp
push
jbe
stos
push
icebp
shrb
loop
adc
inc
aam
jnp
sub
imul
xchg
pusha
pusha
xor
push
push
push
test
sti
inc
adc
sbb
push
push
in
mov
ja
jne
xchg
pop
icebp
and
stos
mov
push
pop
mov
cmpsl
jp
adc
je
or
add
es
xlat
cmp
bound
aas
sbb
lcall
fists
jne
fidivl
push
iret
sub
cli
pop
xchg
add
and
jnp
mov
andl
mov
ja
or
mov
sub
xchg
xchg
sbb
inc
cli
and
xchg
cwtl
jmp
sbb
jnp
pushf
sub
push
xor
jge
arpl
push
dec
fnstcw
dec
cmc
aad
rcrb
xchg
rorb
cmpsl
imul
imul
cmp
mov
push
jns
cs
jns
mov
repnz
daa
cmpb
xor
iret
testl
loop
add
fnsave
jo
mov
rclb
mov
jbe
movsl
leave
lds
lret
cmp
pushf
lahf
xor
pusha
lahf
pop
enter
dec
pop
mov
fisubrs
jae
mov
push
push
or
xchg
loop
dec
inc
lahf
push
mov
dec
hlt
rcrb
test
mov
andl
inc
lea
cmp
popf
pop
ret
addl
xor
and
loop
mov
addr16
xor
aam
push
push
fsub
in
jmp
jnp
dec
sti
pushf
jmp
cmp
enter
dec
xchg
xor
sahf
scas
dec
loop
cmp
adc
pop
lock
fistpl
insb
enter
add
and
or
push
mov
pop
fmul
mov
popa
in
jbe
enter
shrb
idivl
or
loope
jnp
lds
or
add
add
push
jns
loopne
movsb
pop
test
cs
sarb
stc
ret
dec
mov
repnz
cmc
cli
push
lret
ret
jno
lods
inc
dec
popa
sar
mov
aam
int
push
mov
xchg
jge
repz
call
rorl
hlt
pop
pop
ljmp
testl
imul
dec
data16
fldl
jns
xor
pop
jno
sbb
adc
and
dec
loope
xor
ss
or
popa
leave
aaa
fistpl
sub
xor
loope
mov
xlat
aam
js
jbe
cmp
ljmp
sbb
movsb
jp
dec
cwtl
sub
jl
mov
adc
inc
add
lods
fnsetpm(287
xchg
push
and
sbb
stc
or
in
dec
pop
adc
sbb
out
xchg
sub
add
testl
push
cmp
push
sbb
neg
cmpsb
repz
lret
mov
mov
mull
call
scas
xor
outsb
sub
add
jno
pop
notl
pop
fldcw
cmp
add
ror
daa
pop
inc
and
je
mov
imul
mov
rcll
xchg
mov
mov
fdivrs
pandn
fistpl
ret
dec
xchg
jne
lcall
mov
xchg
mov
and
xor
fst
bound
pushf
dec
mov
dec
push
xchg
cmp
leave
das
xor
nop
cmp
add
or
dec
xor
out
hlt
cltd
xor
out
stc
movsl
sbb
sarl
imul
mov
jge
popl
sbb
or
dec
push
icebp
in
es
test
adc
loopne
and
jno
insl
stos
push
add
push
inc
lds
imul
sahf
jno
cli
cmp
xor
shl
ret
xchg
xchg
divb
out
icebp
xchg
popf
push
sbb
repz
aas
cmp
jp
jb
out
daa
mov
sbb
mov
add
jo
into
xor
mov
jmp
bound
lea
push
mov
je,pn
lock
lret
lahf
movsl
orl
insl
or
mov
insl
hlt
fistps
clc
pusha
popf
mov
dec
scas
mov
stc
xchg
test
dec
mov
and
mov
in
mov
sbb
ret
dec
jmp
sti
and
push
dec
sarl
sarb
scas
pop
outsl
test
cmpsb
leave
mov
mov
xor
addl
shll
mov
ja
into
and
and
dec
xchg
ja
std
push
cwtl
mov
pop
aam
sbb
adc
sahf
push
mov
hlt
inc
popa
sbb
cli
cwtl
out
sbbl
scas
inc
or
scas
cmp
dec
vcmpsd
push
xorl
jb
inc
imul
pop
add
daa
std
addl
insb
xchg
int3
mov
or
ret
in
mov
pop
cltd
dec
cmc
sbb
fstl
stos
jg
idivb
shlb
rorb
imul
dec
adc
and
sbb
dec
arpl
mov
loop
loope
insl
inc
dec
jmp
inc
hlt
popa
jle
or
jo
push
pusha
rcrb
push
xchg
shrl
mov
sbb
fldenv
test
mov
cmc
rorb
pop
mov
sub
cmp
clc
scas
mov
inc
fsubrl
push
cli
xchg
mov
sbb
cmp
mov
lods
nop
jle
or
fmul
fsubrl
mov
mov
lret
inc
and
lds
psrad
xor
outsb
ret
pop
ror
andl
and
or
loop
mov
jae
data16
lret
push
dec
mov
inc
xor
xchg
push
fsubl
stos
pop
cmp
in
das
cmp
stc
outsb
aaa
xchg
cmc
or
add
or
lock
or
movsl
mov
test
and
mov
cwtl
inc
testb
adc
out
repnz
aaa
push
stc
dec
outsl
jno
pop
add
sbb
mov
xor
inc
dec
cli
lcall
ret
pop
cmp
cwtl
js
jne
jg
subb
and
mov
mov
ljmp
cmpl
xor
dec
loop
and
cltd
xor
add
js
lcall
repnz
xor
out
lds
pusha
xchg
mov
inc
movsb
lods
repnz
popa
jl
test
xchg
jmp
loop
fwait
leave
and
sub
sub
es
pop
sbb
out
and
fwait
das
jns
and
test
sbb
bound
pop
pop
push
push
pop
aam
out
aas
fcmovnb
sbb
sub
sbb
push
mov
push
push
mov
into
mov
mov
repz
sbb
mov
dec
mov
mov
mov
hlt
mull
repz
in
popf
int
cmpsl
jecxz
fistl
sbb
or
psrlw
push
in
out
cmp
fistl
jne
mov
add
mov
les
adc
and
add
outsb
sbb
xchg
imul
mov
dec
in
adc
mov
adc
pop
sarb
xchg
cmpl
insl
stos
push
test
cli
lods
mov
adc
or
daa
jb
mov
cmpl
add
dec
std
pop
loop
fisubs
daa
scas
cmp
mov
push
or
cmc
sub
repz
push
ja
sbb
dec
and
push
popf
cmp
or
stos
mov
rcrb
leave
xchg
xchg
add
fisttpll
inc
imul
scas
xchg
pop
sbb
cs
imul
movsl
loopne
push
ror
sarl
imul
test
repz
xchg
stc
std
mov
xor
dec
into
jnp
push
add
out
sub
stos
mov
scas
and
roll
out
lods
fimuls
add
xor
outsl
test
pop
sbb
aad
cwtl
les
cli
lret
cmp
subl
jge
jmp
xchg
hlt
arpl
and
fsubr
repz
loop
imul
je
sub
test
stc
pushf
jns
sub
lahf
addr16
out
dec
out
add
movl
jne
lods
jo
fsubs
jle
sbbl
imul
mov
inc
mov
movsb
push
jbe
push
inc
mov
ficoms
lea
insb
aaa
lret
lret
jecxz
jl
rcl
sahf
cld
out
dec
lcall
inc
and
std
mov
cmp
movl
dec
add
xlat
in
jbe
popf
xor
leave
mov
mov
or
mov
outsb
mov
es
inc
into
in
fistpl
jno
lcall
mov
mov
enter
mov
int3
xchg
or
lcall
movsl
cmpsl
clc
push
pop
inc
cld
mov
aas
out
outsl
lret
lcall
dec
jnp
sahf
add
jge
popf
lret
xor
nop
sub
mov
in
aad
jle
lret
mov
mov
dec
jnp
inc
pop
push
xchg
sbb
pop
push
adc
rorb
in
mov
arpl
dec
lahf
pop
pushf
sbb
sub
test
xchg
xor
aad
pushf
push
sub
add
sub
stos
sahf
mov
jno
aas
ret
cmp
xchg
xchg
stc
ds
movsb
add
shll
sti
fisttpll
jo
push
imul
enter
sarl
int3
cmp
pop
jo
jnp
aad
pop
pusha
test
dec
mov
arpl
lods
mov
mov
push
data16
xchg
repz
and
or
dec
out
sbb
lock
arpl
mov
shlb
sahf
add
rcr
hlt
pop
inc
bound
fwait
mov
inc
dec
decb
lcall
jmp
aad
xchg
xchg
rcrb
lods
push
rorl
jno
aas
cmp
xor
lcall
inc
pushf
mov
jns
cs
dec
mov
into
sbb
lret
add
in
jp
pop
dec
adc
add
incl
mov
or
arpl
aam
cmpsb
testb
lret
add
mov
pusha
mov
pop
fwait
push
xchg
lea
push
imul
lods
cmp
mov
and
rorl
mov
xor
mov
add
daa
jns
xorl
inc
aaa
ja
js
and
shlb
mov
add
fwait
aas
fsubrl
mov
fcmovnu
clc
sbb
mov
add
mov
xchg
sbb
jmp
int3
xor
test
lahf
mov
mov
mov
daa
gs
testl
es
jle
mov
xchg
xchg
inc
mov
add
sbb
mov
xchg
hlt
es
shrl
jb
call
aam
repnz
push
push
call
adc
push
cltd
or
outsl
lret
in
adc
sub
leave
insl
xorl
adc
sub
rorb
or
pop
nop
mov
sub
xor
daa
and
cmp
and
sbb
fcompl
in
jp
inc
lret
and
adc
add
inc
xor
in
or
jo
or
xchg
cmp
out
subl
xor
scas
mov
loopne
stos
shrl
lret
and
js
aas
and
nop
in
xlat
and
addr16
mov
mov
out
mov
imul
push
stc
insb
jno
in
leave
cmp
pop
lcall
xchg
popf
sbb
xor
pop
incl
psrad
lahf
rolw
adc
jbe
jmp
jns
sbb
xor
dec
mov
adc
inc
inc
pop
sbb
mov
ret
adc
pop
scas
insb
sbb
enter
add
lret
xchg
into
subl
mov
roll
mov
stos
leave
iret
dec
gs
xor
lcall
and
xchg
pushf
lods
add
mov
out
push
iret
mov
mov
mov
mov
int
insb
pop
cmpsb
lret
inc
inc
loopne
sbb
add
in
inc
push
sub
add
repnz
shrd
mov
movsb
gs
mov
pop
sbb
mov
or
mov
inc
outsb
test
nop
ret
jmp
dec
pusha
iret
popl
insl
mov
sub
cmp
mov
and
sub
lcall
int3
lret
hlt
dec
cmc
mov
mov
xlat
jae
aad
ss
sbb
xor
fidivrl
jo
outsl
jno
in
rcr
jmp
push
dec
ds
in
pop
xchg
inc
pop
mov
icebp
sub
push
pcmpgtb
es
ds
into
pop
es
ljmp
or
shlb
cmpsl
and
fs
daa
scas
xchg
mov
or
cltd
mov
jmp
vpor
mov
mov
mov
lock
jp
push
imul
adc
push
mov
pop
rolb
or
jae
inc
in
jge
sbb
js
and
cli
sbb
scas
mov
mov
xor
lock
push
cmp
subl
inc
jns
push
add
and
cmp
icebp
es
pushf
daa
mov
sbb
pushl
or
sub
jle
sbb
fiaddl
mov
pusha
xor
aaa
push
imul
or
ret
loopne
mov
roll
lock
jo
mov
push
xor
xchg
pop
jnp
subl
ret
xchg
push
in
jne
cmp
push
dec
fdivs
or
jge
shl
test
mov
add
or
clc
inc
xchg
jg
stc
or
jle
outsb
in
gs
jl
shrb
push
push
jle
pop
push
decb
es
dec
repnz
xor
and
lret
leave
test
outsb
and
js
cltd
mov
stos
and
or
fildll
lret
lahf
lds
into
scas
in
add
insl
imul
pop
aas
add
ds
or
aaa
sbb
mov
int3
add
push
adc
or
psllw
aaa
add
in
leave
add
pushf
cwtl
pop
scas
xchg
mov
jl
mov
mov
inc
inc
das
fisubrl
xchg
mov
divb
cwtl
test
ret
test
sbb
mov
mov
mov
mov
jnp
xorl
imul
popa
stc
dec
ss
jg
inc
lahf
sub
jge
ljmp
mov
loope,pt
popf
and
jb
or
daa
mov
mov
daa
push
das
test
adc
jp
in
sbb
xor
xchg
arpl
sub
shl
add
mov
sbb
xor
mov
aas
push
cmp
fs
jnp
pop
push
jae
mov
in
push
rorl
aas
in
mov
sahf
icebp
test
out
pop
arpl
call
mov
insl
loop
daa
test
sbb
mov
dec
sbbb
sbb
cmp
clc
dec
mov
xchg
fdivs
or
fisubrs
xchg
shrd
pop
mov
jmp
jmp
in
cwtl
cmpsb
mov
mov
popa
mov
mov
push
adc
cmp
imul
in
call
setns
or
popa
dec
lahf
jecxz
out
pop
jmp
mov
mov
adc
cmp
lods
jecxz
addr16
mov
pop
ret
jmp
adc
ljmp
lock
mov
push
inc
shrb
ja
and
testb
roll
cwtl
add
ss
imul
stc
loopne
mov
addl
push
out
sbbl
mov
inc
out
sub
fcoms
ja
loope
lcall
xchg
cmpsb
xchg
out
dec
jl
jmp
pop
dec
inc
icebp
icebp
insb
sub
rcl
mov
repz
adc
mov
daa
dec
decl
test
push
push
pop
jbe
adc
pop
push
mov
mov
cld
andb
xchg
dec
adc
adc
sub
shrb
sbb
jp
pop
pop
sub
sbb
std
xor
mov
jl
lret
mull
out
mov
xor
inc
sahf
icebp
mov
dec
xor
jne
les
das
mov
loop
aas
in
hlt
inc
nop
dec
jae
lock
cmc
jns
loope
mov
ficoml
sub
cmpsl
sbb
pusha
jnp
hlt
xchg
loope
cmp
dec
cmpsl
inc
add
push
imul
movsb
pop
sub
xchg
dec
push
add
xchg
and
xor
xor
cwtl
dec
loopne
cmp
cmp
xchg
mov
pop
pop
dec
push
arpl
adc
push
pushf
pusha
lods
icebp
les
jo
hlt
mov
cmp
push
sub
xor
enter
popf
imul
jl
addr16
mov
push
addr16
push
jl
testb
push
mov
jns
hlt
mov
mov
jb
xor
cmp
inc
cld
add
inc
push
xlat
fmull
mov
dec
pop
pop
xchg
xor
repnz
mov
or
xlat
push
xchg
inc
in
or
xchg
pop
testl
inc
jno
lods
out
mov
add
or
add
test
inc
mov
prefetch
or
fsts
pop
in
jnp
adc
push
divps
outsb
ss
out
dec
dec
je
scas
dec
sti
sub
push
leave
pusha
push
int3
outsb
push
jle
and
xor
inc
nop
loope
mov
test
bound
icebp
movsb
pop
cmpsb
rclb
fnstenv
fidivrl
jns
push
inc
leave
int
stc
xlat
inc
jl
sub
lcall
rol
mov
pop
hlt
aad
sarb
stos
push
push
fsubl
pushf
arpl
push
jle
jle
pop
movsb
pop
xchg
stc
sti
push
popf
add
pop
inc
shrb
mov
sub
mov
inc
xor
pushf
call
fdiv
jns
xor
and
sub
gs
cmp
sbb
nop
adc
bound
idiv
outsb
std
jb
sub
mov
push
jo
lret
lahf
les
ljmp
cli
mov
ljmp
adc
shlb
mov
arpl
stos
cmp
incl
in
ja
pop
and
jge
arpl
push
mov
ljmp
cmpsl
jae
xchg
popa
mov
iret
cmp
shlb
and
leave
insb
adc
jmp
adc
out
mov
pop
and
adc
fwait
sbb
mov
orl
aad
pop
mov
or
lods
repz
inc
dec
jbe
lret
mov
aas
push
sarb
jg
and
fstenv
enter
jmp
sbb
cmp
jno
mov
movsb
out
dec
push
adc
mov
nop
add
outsb
in
mov
data16
pusha
loope
or
bound
dec
push
test
clc
lret
jb
lods
out
sub
jns
arpl
mov
dec
out
mov
movsb
mov
dec
mov
stos
sbbl
xor
jmp
lock
jge
pusha
pop
std
lods
sub
lock
jne
adc
and
enter
stos
in
jle
out
fisubrl
jmp
fsts
dec
iret
pop
fisttpl
add
jecxz
shrb
cmp
cmp
xchg
arpl
clc
nop
out
aad
shr
xor
shlb
nop
addr16
lock
mov
aaa
cld
mov
rorl
or
sbb
jo
daa
adc
insb
pop
mov
lds
xchg
dec
cwtl
sbb
pop
aaa
mov
je
flds
dec
data16
add
inc
mov
pushf
movsl
cmp
movsb
and
int
cmp
pop
out
repnz
mov
jbe
movsb
xchg
mov
push
mov
lahf
xor
sbb
mov
out
jle
popa
repnz
mov
loop
flds
es
jae
test
jo
or
pop
lret
into
dec
dec
mov
lret
xlat
ret
sbb
sub
popf
xchg
fadds
clc
imul
xchg
pop
jle
xchg
and
mov
cltd
out
add
cmp
or
mov
movsb
lods
jns
add
mov
xor
or
push
cmp
and
hlt
sub
mov
stc
sbb
fcoms
fnstcw
iret
xchg
jp
mov
std
lret
das
hlt
fs
cmp
cwtl
push
rcrl
cmp
jne
dec
je
mov
sbb
icebp
push
aad
push
pop
out
std
sbb
xchg
lahf
sahf
arpl
push
loopne
sub
loopne
in
insb
mov
xor
int
add
adc
dec
mov
enter
imul
in
clc
adc
dec
inc
mov
lods
jae
push
xchg
aad
inc
cltd
movsl
mov
in
mov
rcrb
les
mov
lret
pop
pushf
sahf
cs
cmp
xor
or
lock
dec
movl
push
in
fisubrs
lret
mov
add
jb
cltd
xor
adc
jl
inc
sti
xchg
fwait
pushf
mov
xchg
cmp
jo
stc
xchg
xchg
insb
les
in
jmp
imul
and
test
pop
or
pop
mov
or
dec
mov
mov
and
mov
shlb
mov
cs
dec
repz
or
inc
int3
xchg
jmp
push
mov
in
push
inc
mov
aas
sub
lahf
mov
mov
jg
insb
inc
sub
adc
iret
pop
fdivr
xor
rclb
xchg
fstps
sub
loop
aad
sahf
mov
adc
mov
into
or
add
jb
std
adc
sbb
push
fidivs
cmpsl
push
jnp
std
cmp
push
mov
in
jle
mov
cvtdq2ps
mov
jg
add
dec
inc
inc
sbb
jp
fsubrs
sub
negl
cli
dec
cld
fbstp
lds
adc
orl
mov
fcom
dec
push
and
mov
mov
xor
pop
push
xor
int3
push
xorl
lock
mov
xor
push
xchg
in
aam
mov
sub
mov
or
out
in
scas
popa
scas
shrl
addr16
mov
leave
arpl
adc
lahf
or
push
dec
pop
or
dec
leave
iret
lret
rol
shlb
leave
fincstp
sti
iret
mov
or
sub
popf
call
insl
mov
mov
idiv
adc
xchg
fwait
dec
jno
add
inc
and
cltd
sub
dec
mov
push
and
rcll
dec
call
xchg
cmp
arpl
pop
push
mov
shr
xorl
fstp
ja
adc
cmpsl
ljmp
mov
sub
mov
lahf
push
iret
clc
shl
or
mov
es
dec
insl
cs
and
mov
cmpl
sub
sub
cld
arpl
not
pop
sti
fwait
jb
and
lods
mov
je
cltd
mov
data16
add
lret
lds
stos
mov
sbb
add
jmp
push
and
fiaddl
loop
stos
push
mov
sti
mov
pop
stos
jno
pop
mov
shlb
push
ror
in
push
ror
aas
in
ja
ljmp
addl
lea
loop
jns
gs
inc
adc
iret
in
fs
mov
dec
or
sbb
and
jg
mov
dec
or
inc
jg
mov
lods
push
mov
lods
loop
adc
int3
loope
ja
jle
jg
dec
and
adc
imul
scas
push
mov
sbb
hlt
stc
inc
and
bound
rcl
pop
jno
sub
lods
lret
adc
ljmp
imul
pop
mov
and
je
shrb
in
fdivs
call
sub
cmp
dec
popf
ret
cmp
in
jb
es
mov
frstor
pop
pop
arpl
sbb
adc
lods
mov
rorl
js
push
sub
fsts
lock
push
pop
adc
sbb
enter
enter
shlb
loop
idivb
je
imul
insb
fwait
and
popf
inc
sarl
jmp
pop
gs
fwait
enter
mov
in
and
test
sti
jb
loopne
movsl
stos
push
jo
loopne
adc
add
aad
push
cmp
pop
jmp
stos
ret
fwait
std
out
adc
push
ja
mov
sbb
mov
shrb
fidivl
mul
dec
cmpsb
fistpll
or
xor
and
pop
repnz
lcall
inc
testl
or
cmp
lcall
add
xlat
arpl
js
inc
ds
inc
mov
lahf
sbb
fldt
ss
mov
imul
xchg
loopne
addr16
inc
repnz
popa
loop
sub
mov
or
mov
jbe
dec
inc
mov
call
push
pusha
hlt
fistps
mov
mov
add
lahf
add
hlt
cli
mov
pop
les
push
es
sbb
mov
ss
decl
ret
mov
popf
sarl
push
lds
fnstsw
push
push
popa
test
sbb
test
mov
pop
rcll
into
fadd
cmp
xchg
push
hlt
sub
int
dec
push
lret
jno
hlt
test
pop
mov
dec
pop
popf
aaa
and
rcrl
cmc
mov
and
or
xor
xor
sar
subb
je
xchg
push
xchg
cmpsb
jl
ret
xchg
mov
jne
push
pop
into
and
mul
or
pop
push
adc
pop
and
fsubrl
or
cld
data16
popf
adc
cmp
testl
jnp
jnp
aam
pop
pusha
scas
xor
or
out
push
and
lds
jl
enter
cmp
cmp
xor
sbb
xor
mov
mov
call
jnp
fsubrl
dec
or
enter
fadds
xchg
leave
push
not
fs
sti
incl
jmp
stc
push
lretw
jecxz
mov
dec
mov
jne
clc
int
lods
je
jo
sub
add
xchg
mov
inc
je
jo
jmp
sbb
ja
jns
pop
jnp
mov
mov
jmp
fcmove
xchg
cpuid
sub
mov
test
jecxz
mov
shrl
xor
adc
fs
out
popf
mov
lret
mov
mov
rcll
lret
cli
inc
jno
sub
outsb
das
outsb
faddl
call
mov
sub
pop
ds
std
xor
test
aam
out
adc
call
int3
mov
add
xchg
mov
rcrb
mov
pushf
bound
sub
push
mov
jl
pop
cmp
sti
es
xchg
stos
addr16
loop
loop
icebp
enter
mov
enter
adc
les
cmp
pop
jbe
mov
fs
lods
push
ror
mov
or
aam
cmp
cmpl
in
pop
pcmpeqw
mov
in
push
shl
int3
fdivl
add
daa
in
imul
lret
test
sub
std
add
cld
dec
je
mov
mov
stc
shrl
mov
les
fst
ljmp
and
shrb
subl
daa
mov
add
jge
adc
pop
lret
jge
jae
inc
or
push
and
xor
out
ds
mov
test
outsl
lret
cmpsl
push
movsl
adc
dec
adc
int
cmp
xor
mov
jle
push
lahf
test
loop
pop
mov
xchg
jmp
sub
les
push
push
inc
std
push
nop
std
je
fldt
data16
shll
push
loope
pushf
std
sub
add
push
imul
pop
cs
sub
sbbl
or
fildl
pop
jmp
ljmp
out
mov
rorl
dec
inc
out
add
ret
dec
sub
lods
adc
dec
xchg
pusha
pop
test
aas
pop
mov
les
into
jbe
data16
cmpb
jno
and
xor
imul
repz
mov
pop
cmc
das
imul
test
push
jbe
adc
sbb
or
jmp
inc
jg
inc
jae
inc
pop
dec
push
mov
cmp
mov
mov
add
test
pop
or
cltd
insl
jg
mov
pop
xchg
cmp
aam
shll
jmp
and
adc
dec
aam
imul
sbb
push
es
ds
adc
cmpsl
shll
imul
dec
pop
mov
xchg
sbb
mov
fcomip
in
jl
je
shlb
mov
mov
fsubs
mov
pushf
cld
inc
add
push
dec
push
imul
das
in
jmp
fdivs
pop
sub
pop
mov
mov
pop
in
dec
cmp
xchg
inc
xchg
repnz
aas
push
push
and
sarl
dec
mov
jb
dec
testb
push
bndldx
and
shr
shrb
shll
pusha
fimuls
daa
mov
pusha
jmp
xlat
mov
xchg
or
pop
xchg
jb
xor
cmp
push
ja
testl
shlb
push
int3
ja
mov
jg
mov
mov
jge
sbb
aaa
add
pop
mov
leave
dec
jb
addr16
enter
movsb
or
add
outsl
inc
lock
mov
dec
or
or
orb
pop
fwait
out
shr
std
fistl
repz
cld
mov
aaa
addr16
test
je
xchg
pop
fsub
mov
in
loopne
xor
imul
test
outsb
call
sbb
add
mulb
aad
xchg
int
sub
xlat
es
or
call
sub
cmp
test
xor
push
test
jecxz
pop
and
mov
mov
push
inc
bound
push
jbe
neg
out
dec
call
pop
dec
hlt
cmpsb
es
xchg
and
movsb
inc
cmp
fiadds
cmp
xchg
arpl
xchg
pop
adc
push
or
fwait
dec
cmpl
or
into
mov
cmp
xchg
ljmp
sbb
cwtl
jg
loop
cmp
loopne
stos
jp
jno
lahf
xchg
data16
jae
hlt
aas
or
insb
adc
mov
je
fnstcw
mov
lahf
and
xchg
loope
fnstsw
loop
adc
int3
hlt
adc
xor
or
loope
add
cmpsl
push
pop
data16
mov
sub
movsl
scas
pop
dec
sub
fdivl
loop
add
addr16
and
push
cs
faddl
and
mov
jmp
jle
inc
dec
push
testl
pop
pop
negb
sbb
push
es
mov
repnz
push
ljmp
addb
xor
xchg
sbb
test
insl
mov
add
mov
rep
stc
xchg
gs
push
insl
pop
mov
popf
inc
repnz
inc
dec
mov
fcoms
and
mov
jmp
mov
cmc
imul
dec
roll
push
arpl
adc
rolb
negl
mov
in
cld
incb
imul
pop
mov
lcall
outsl
mov
into
jo
and
push
inc
mov
jge
lods
pop
ds
fincstp
or
jl
lock
insl
or
addb
jb
test
sti
test
rclb
movsl
xchg
mov
scas
push
mov
fildl
test
adc
dec
ret
xchg
mov
iret
cli
sbb
add
ss
inc
pop
or
lock
in
outsb
cmp
or
sub
inc
pop
mov
sbb
push
push
jge
push
aad
jg
out
push
aaa
das
or
push
mov
call
lods
add
pop
xchg
je
aaa
outsb
sbb
mov
pushf
adc
shll
xchg
js
dec
sarb
add
loopne
imul
mov
ficompl
mov
test
mov
push
and
pop
sbb
push
cmp
rcll
mov
fdivrl
mull
stc
adc
pusha
ret
jge
inc
es
push
cmp
lea
push
mov
out
sbb
out
mov
icebp
and
std
cmp
inc
or
out
call
cs
imul
or
ljmp
mov
inc
fmuls
test
fstpt
scas
push
cmp
aaa
xchg
insb
cld
lret
into
test
push
insb
xchg
test
pop
fidivs
sub
and
sbb
lds
mov
cmp
sub
movsb
jnp
xchg
mov
xchg
jmp
push
fwait
xchg
cmpsl
xor
sbb
ja
inc
test
pop
and
xchg
push
cmp
lods
jp
cmp
sub
xchg
xchg
dec
popf
roll
xchg
sub
dec
jecxz
lret
cmp
mov
xchg
add
push
cwtl
inc
mov
je
and
xor
adc
in
xlat
repnz
xchg
cli
fs
jb
in
sub
jns
mov
push
jp
cs
mov
lods
adc
mov
andl
mov
int
lahf
rcrb
mov
ss
into
ret
jb
cmp
divl
xor
add
xchg
outsl
std
inc
push
stos
fldenv
int
inc
add
cltd
dec
mov
jecxz
xor
lea
or
push
jl
cltd
sub
dec
sub
adc
inc
jmp
push
pusha
mov
or
and
inc
push
cmc
push
mov
repnz
pop
sbb
insl
pop
dec
sarl
sub
fucomp
xchg
push
sub
sbb
pop
or
cmp
dec
adc
pop
aaa
xchg
jl
movsl
lea
data16
out
movsb
loop
mov
cmp
clc
pop
add
jge
jne
test
or
std
inc
mov
inc
loop
cmpsb
xchg
out
fiaddl
jge
lods
jne
sbb
sub
xchg
xor
adc
loop
xor
sbb
mov
dec
inc
and
push
hlt
in
push
addb
loope
pop
test
sub
mov
or
lock
xor
fmull
or
sub
pop
mov
inc
sub
jbe
scas
div
adc
ficoml
and
mov
in
cmp
stos
test
inc
add
or
push
and
pop
inc
out
push
popf
in
mov
adc
movsb
test
fsts
int3
mov
push
leave
xchg
push
push
std
jno
dec
lea
jbe
and
xor
xchg
dec
hlt
repnz
aas
leave
mov
cmp
int3
sarb
dec
mov
inc
adc
pop
pop
push
ja
mov
jl
data16
fdivr
notb
test
cmp
cmp
js
lock
stos
or
shll
jle
mov
sbb
ds
lcall
out
xor
jecxz
in
in
cltd
add
xchg
lods
outsl
push
push
fdivr
lock
in
jnp
mov
clc
call
pop
cld
or
loope
loopne
cli
fsubrs
and
popa
aaa
fwait
push
loope
cmpsb
jae
jmp
iret
xor
inc
test
mov
shl
push
repz
adc
repz
int3
movl
fsubrl
mov
jp
pop
outsb
stos
push
jnp
lock
mov
push
pop
adc
addb
mov
push
inc
gs
dec
add
jne
adc
pop
jle
mov
shrb
pushf
mov
scas
mov
inc
adc
imull
cmpsl
stos
mov
stos
int3
dec
nop
dec
xchg
scas
jne
jae
xchg
je
movsb
aam
jmp
lds
dec
add
sub
xor
fwait
add
or
dec
cmpsl
fdivl
ret
ret
push
xor
insl
clc
mov
fstps
stc
fdivl
mov
cmp
dec
push
inc
pop
out
int
sbb
add
stos
testb
fists
loopne
jl
sub
sub
mov
dec
into
das
or
or
dec
fbld
mov
and
lods
inc
aam
push
add
and
or
int
rcrb
push
mov
call
outsb
and
nop
mov
and
xchg
div
sub
lods
jae
lea
and
xor
shlb
mov
xor
bound
inc
std
push
dec
inc
lods
das
xchg
dec
mov
add
or
jo
into
sbb
jno
mov
mov
jmp
xchg
and
mov
jbe
icebp
mov
lods
and
inc
ficompl
mov
outsl
adc
jb
adc
mov
movsl
push
gs
arpl
in
mov
sbb
mov
add
iret
cmp
cmp
or
mov
mov
nop
call
pushf
mov
inc
test
mov
mov
outsl
fcompl
xchg
xchg
icebp
enter
iret
ret
dec
ret
jne
stos
mov
xor
xor
repnz
sahf
pushf
cwtl
xlat
jmp
pop
cld
fcmovbe
stos
ja
jmp
scas
mov
daa
jnp
test
inc
sub
jecxz
daa
adc
cmp
mov
mov
ret
mov
insl
in
jne
addb
sti
test
cmp
ffree
jl
rorb
push
cmp
fs
fidivs
idivl
divb
sbb
std
inc
push
mov
inc
cmp
mov
ficomps
xlat
lcall
or
dec
adcl
insl
in
sub
adc
dec
jecxz
test
cltd
out
leave
xor
add
xchg
push
out
shrb
and
sub
cwtl
push
out
sbb
cs
insl
cmp
daa
rorl
mov
cmpsb
or
push
rol
sbb
mov
xchg
movsl
mov
pop
addr16
sbb
mov
js
bound
hlt
mov
jns
pop
adc
jmp
add
aad
scas
ljmp
ss
in
pushf
insl
mov
rcrl
scas
lcall
jb
imul
dec
into
dec
mov
roll
std
mov
lret
adc
jp
data16
mov
movsb
fsubp
xor
adc
ret
test
lds
adc
mov
add
mov
and
sub
lea
lcall
mov
das
sbb
xchg
lock
cmpsb
ffreep
sub
cs
jns
inc
out
rcr
cmp
stc
adc
add
sub
add
seta
enter
sti
xchg
out
xor
fistpll
sbb
fdivr
xor
scas
cli
lea
imul
out
sbbb
out
sub
pop
ljmp
inc
add
pop
adc
ficoms
dec
push
mov
xlat
dec
mov
jae
xchg
mov
mov
pushf
in
in
inc
pop
and
pop
dec
inc
flds
xor
sbb
int
jmp
cmp
sub
rorb
xchg
es
inc
push
test
mov
mov
mov
jmp
shll
mov
mov
sbb
fsubrs
and
test
pop
pop
test
lret
ds
js
subb
es
xor
mov
fbstp
lock
js
shlb
add
and
fadds
sbb
inc
adc
lock
xor
push
cs
pop
movb
jge
and
mov
jnp
aaa
icebp
xor
jnp
ds
pop
and
jmp
scas
test
int
pop
mov
imul
aad
xor
dec
sub
loop
ss
lods
or
jno
cmpsb
cli
les
rcl
xchg
outsb
mov
insb
aaa
or
push
adc
jno
ret
push
in
movsb
hlt
and
xor
fadds
xchg
insb
push
test
mov
lods
pop
or
add
xchg
out
xchg
int
jne
inc
sbb
xchg
jmp
aam
in
mov
push
cmp
aas
or
jl
adc
push
lret
int
and
cmp
cs
inc
popa
mov
xchg
xlat
sub
pop
insb
add
inc
fcmovnbe
stc
jnp
mov
jne
outsb
mov
push
adc
jl
adc
or
movsb
into
lods
pop
sbb
fidivrs
enter
push
ret
mov
sub
sbb
add
push
jmp
out
cmpsl
sarl
mov
jo
rorb
cmp
mov
fildll
stc
adc
dec
and
test
push
pop
enter
inc
push
scas
outsl
fwait
push
cwtl
pop
cli
xchg
scas
dec
icebp
xchg
nop
add
push
lods
aaa
and
ja
lea
in
xchg
test
ret
add
jne
pop
icebp
imul
into
adc
push
aaa
loope
or
cmp
insl
push
fxch
push
adc
pop
aad
dec
mov
add
mov
mov
orl
push
dec
test
dec
mov
pushf
or
push
jno
shl
addb
pop
cltd
in
push
adc
push
mov
pusha
mov
jp
add
test
lods
imul
dec
lock
sbb
cld
movsb
inc
retw
dec
loope
and
add
mov
xor
inc
mov
ja
cmc
adc
loope
cld
in
sbb
icebp
push
jg
mov
fyl2x
clc
add
fbstp
jle
inc
adc
xor
xlat
enter
test
cmp
lds
jle
test
out
and
cmp
scas
nop
ja
cmpsb
jecxz
dec
fstps
popf
dec
or
sub
pushl
filds
scas
sub
adc
or
jns
mov
call
cmp
push
xlat
dec
lds
bound
movsb
rorl
dec
scas
call
enter
pop
push
in
jp
mov
sub
lahf
jmp
stc
inc
adc
mov
pop
or
js
js
arpl
ss
sqrtps
lock
mov
es
adc
or
cs
bt
movsl
cmpsb
aas
or
jnp
add
xlat
mov
dec
xchg
or
dec
ds
cs
imul
push
cwtl
pop
scas
inc
inc
mov
push
fs
and
mov
jecxz
stos
sbb
mov
in
inc
sti
loope
dec
mov
and
cltd
add
mov
jl
jmp
les
or
mov
xor
ljmp
inc
mov
inc
mov
pop
cmp
movl
sbb
mov
mov
roll
mov
push
inc
fs
out
mov
pop
mov
stos
inc
pop
into
dec
movsl
mov
scas
aad
add
frstor
add
jge
imul
lret
loope
in
mov
push
iret
push
inc
mov
mov
stos
mov
pop
mov
or
call
push
fbstp
test
lods
pop
into
icebp
loopne
test
xor
out
xchg
push
aam
pop
scas
add
aad
push
mov
rorb
pop
and
lea
or
pop
nop
inc
shrb
jne
and
sub
and
insl
xor
in
lock
push
push
fnstcw
push
dec
and
inc
sbb
mov
jp
xor
fidivs
aam
shlb
xchg
jo
mov
adc
cmc
push
jecxz
sbb
mov
sub
and
jge
out
clc
iret
cwtl
xor
jno
mov
or
mov
push
xor
and
pusha
jno
ret
push
mov
add
jbe
xchg
pusha
jno
fstpt
lock
cmp
aad
pop
pop
ja
iret
nop
cwtl
or
push
dec
bound
jbe
inc
in
dec
in
out
jle
aaa
jns
test
and
xor
imulb
subl
pop
ss
jnp
bnd
pop
cmp
leave
xchg
adc
push
sbb
jmp
movsl
and
push
rclb
bound
xor
sbb
fstl
in
add
xor
aad
aaa
scas
pop
dec
push
cmp
push
aas
stos
push
arpl
iret
jo
cld
cmc
out
mov
and
insb
in
aaa
ss
fdivrs
inc
cmc
jns
adc
pushf
xor
mov
iret
mov
nop
or
xlat
das
xor
adc
iret
ret
dec
sbb
and
fstpl
sbb
cld
es
sbb
mov
ds
jp
roll
insb
jno
pop
fcompl
mov
aam
in
pop
rcrb
push
cwtl
imul
subb
movsl
ss
aad
enter
loopne
cmp
cmc
push
ret
jl
jp
sbb
mov
insb
cltd
xchg
xchg
imul
frstor
fld
out
adc
mov
out
js
push
cs
out
das
mov
jle
cmpsb
repnz
xor
cmp
in
ds
adc
dec
add
movsl
outsl
push
pop
insb
adc
test
xchg
icebp
sbb
outsb
fisubs
lods
loopne
add
xchg
sbb
adc
mov
aas
xchg
jae
add
add
push
xchg
pop
fcomps
jne
daa
and
mov
mov
stc
or
xchg
jp
dec
push
les
fs
test
iret
and
dec
rcrb
jno
mov
pusha
loop
or
movsl
mov
xchg
in
cmp
lahf
loope
aad
popf
and
pop
mov
rolb
nop
mov
aas
sar
cmp
push
cld
cmp
sub
dec
test
sub
outsl
int3
in
testl
cmp
out
sbb
cmp
les
fdiv
inc
test
or
mov
jae
lret
stos
and
pop
repz
pop
xor
sarb
jae
pop
aad
mov
pushl
fstpl
inc
inc
mov
jns
shrl
and
call
mov
iret
dec
stos
pushf
fwait
xlat
mov
xchg
adc
mov
or
fsubrs
test
sti
cli
insl
subl
jmp
pop
std
adc
hlt
gs
fmull
dec
mov
or
pusha
mov
xor
xchg
jg
lahf
pop
push
adc
dec
push
jb
pusha
sub
jg
ja
cmc
les
add
sub
dec
jno
or
cmp
jno
cmp
and
cmp
loop
or
das
cmp
stos
mov
pop
nop
lcall
add
push
xchg
sarl
mov
push
and
dec
sub
int
mov
push
mov
rolb
sbb
mov
adc
filds
lret
lret
ret
scas
fdivp
push
in
dec
cmpsl
mov
orps
pop
inc
inc
aad
adc
jo
xchg
pop
push
or
lods
fs
aam
in
in
cmp
sub
push
pop
pop
in
mov
jbe
lds
and
pop
cltd
insb
gs
int
lret
add
push
nop
lds
sti
xor
mov
aas
inc
pop
sub
decb
pop
pop
jno
je
mov
sbb
mov
test
xor
pop
out
es
sahf
xchg
xor
mov
or
push
dec
pop
mov
jecxz
test
push
lock
dec
lock
jge
loop
xchg
mov
xor
into
aam
and
mov
cmp
or
pop
pop
call
lret
add
popf
ret
push
jbe
or
test
sub
jne
popw
adc
lcall
xor
jp
jae
xor
mov
jne
dec
ds
mov
jbe
data16
xchg
sahf
xchg
ss
jo
mov
test
jl
inc
xchg
sarb
rcl
sbb
mov
jmp
cmpsb
lret
sub
adc
mov
sbb
dec
les
sub
enter
ret
int
or
ds
enter
sub
insl
nop
xchg
fildll
sub
sar
xchg
bound
pop
adc
inc
cmpsl
inc
inc
test
shll
or
ljmp
cmp
sub
push
push
lcall
icebp
jne
jle
popf
xor
dec
xchg
sbb
and
hlt
push
push
or
cltd
cld
dec
inc
icebp
les
push
mov
das
push
push
lds
sbb
in
push
mov
sbb
test
ss
out
mov
sbb
lods
bound
jl
roll
shll
jmp
xchg
call
xlat
sub
mov
sbb
pop
inc
arpl
ret
popf
mov
mov
xchg
and
bound
insl
mov
aam
jmp
je,pt
pop
sbb
sub
mov
mov
jnp
mov
movl
mov
xor
pushf
push
xchg
mov
dec
mov
xchg
out
jb
lcall
repnz
mov
mov
mov
or
jg
push
jbe
sbb
jnp
insl
jae
xchg
mov
pop
pop
xlat
xor
popa
in
pop
sbb
jecxz
add
jnp
jbe
mov
icebp
insb
dec
sub
sbb
adc
xchg
sub
leave
fs
mov
dec
out
test
fiaddl
neg
inc
add
push
inc
inc
add
imul
lcall
fwait
lods
adc
jns
xchg
adc
dec
mov
bound
aas
inc
decb
mov
mov
pushf
jns
mov
int3
push
mov
in
xchg
pop
lcall
cmp
sbb
mov
inc
das
ret
pop
in
jmp
mov
jl
jge
xor
adc
lret
jl
xor
int3
jns
call
adc
adc
aas
sub
and
daa
aam
dec
sub
pushf
inc
and
call
xor
and
cmpsl
pop
push
test
jns
adc
cltd
mov
test
out
daa
adc
cmp
ljmp
stos
cltd
mov
xor
push
idivb
pusha
mov
push
add
mov
fstenv
jl
and
xor
clc
or
and
xchg
cmp
push
dec
push
add
dec
mov
mov
aad
push
dec
loopne
fiaddl
cmp
cmc
sub
psrad
push
rolb
stos
out
sbb
in
mov
mov
cmpsb
daa
push
and
mov
scas
fisubrl
jg
in
lds
jbe
iret
hlt
xchg
dec
ficompl
mov
and
cmc
pushf
mov
pop
cs
add
add
lea
cli
jb
cld
enter
sbb
push
jae
jb
or
lcall
dec
dec
out
mov
sti
leave
mov
mov
jae
mov
sbb
jmp
sti
js
mov
scas
adc
mov
lret
out
inc
or
mov
adc
inc
movsb
ss
sub
fistpll
aaa
repz
rorb
ficompl
xchg
cs
or
cmp
es
adc
std
scas
sbb
or
inc
into
mov
in
inc
das
scas
push
pushf
jae
inc
cmp
xchg
daa
xor
outsb
sti
fwait
aas
movb
mov
sbb
mov
add
push
inc
add
xor
inc
push
cli
sub
stos
test
pop
cwtl
int3
movb
fcomip
xor
inc
mov
push
xchg
jae
xchg
je
stc
xorb
and
lds
bound
xor
push
loopne
push
push
mov
les
mov
imul
cmp
dec
stos
lods
test
insb
outsb
or
mov
popa
mov
xchg
jmp
add
cli
sbb
or
xor
or
adc
cmc
push
pop
inc
or
mov
mov
push
adc
push
shrb
push
sub
test
loop
insb
rorl
mov
int
outsb
aam
xor
xchg
jnp
cmp
xchg
out
xchg
dec
mov
pop
loope
add
shlb
nop
add
and
pop
mov
push
inc
daa
mov
adc
xor
mov
mov
or
mov
jmp
xor
icebp
test
sbb
adc
inc
mov
cmp
mov
gs
cmp
data16
mov
adc
gs
faddp
ret
ljmp
mov
push
inc
std
out
sbb
movsl
ficompl
idivl
fldt
lock
pop
pop
in
movsl
dec
dec
fisubs
add
aas
rorl
adc
push
fldcw
sub
or
repz
xor
ljmp
into
scas
or
aas
xor
dec
mov
std
pop
pop
or
cmpsl
out
mov
test
sbb
loope
add
repz
push
lods
jle
jge
orl
andb
fdivp
mov
push
or
rcll
pop
push
in
js
mov
sarl
daa
icebp
fisttps
iret
or
pop
in
push
pop
mov
fnstsw
or
and
jb
pop
loop
inc
xchg
mov
inc
aam
pushf
dec
and
jns
test
sub
popa
in
sbb
adc
and
je
lret
nop
outsl
bound
out
dec
outsb
dec
xorl
test
inc
mov
jb
dec
mov
cmp
adc
pop
data16
mov
inc
repz
pop
clc
shlb
fadd
and
pop
add
sbb
aaa
xlat
mov
pop
es
push
mov
dec
sub
and
push
imul
lods
mov
fs
push
iret
mov
cmp
cmp
cmp
dec
pushf
inc
or
in
jae
fiadds
push
mov
inc
ds
push
push
sub
jne
into
jne
ds
lahf
lods
bound
dec
neg
cmp
add
jbe
sub
aas
push
aas
stc
push
mov
mov
and
cmpsb
les
xorb
jg
adcb
pop
or
or
dec
shrb
adc
mov
push
addb
jb
out
int
mov
hlt
ret
xchg
mov
insb
ret
shlb
xchg
fnstenv
xor
inc
daa
cmpsb
lret
mov
push
pop
std
aas
inc
sahf
xlat
pop
jecxz
push
arpl
inc
sub
dec
jle
jne
xchg
cwtl
mov
inc
imul
sub
je
push
push
sub
xor
cmc
sub
sub
jle
aad
sub
jno
out
sub
push
rcrl
push
dec
mov
push
out
inc
xor
dec
subb
cmp
adc
xchg
mov
test
nop
pop
pop
inc
jo
cs
fadds
sub
sbb
in
sbb
mov
and
fisubl
cmp
sub
ljmp
rol
lahf
pop
xchg
push
icebp
pop
test
ret
xchg
fcomps
jecxz
fs
ret
pop
jmp
movsw
sti
add
faddp
xchg
sbb
jbe
push
popf
std
mov
jmp
push
sbb
lea
jbe
cld
test
aad
mov
xchg
sbb
sbbb
nop
out
mov
lret
lahf
adc
sub
out
daa
mov
jbe
pop
add
movsb
loop
xlat
or
mov
pop
stos
mov
lds
fimuls
hlt
xor
movsb
or
mov
lahf
jo
sbb
insb
or
pop
add
subb
jp
cmc
xchg
dec
inc
pop
mov
and
dec
sub
push
fmul
cmp
outsl
ss
mov
inc
jecxz
inc
out
push
mov
cmp
lret
repz
adc
sbb
push
push
adc
inc
xchg
fiaddl
mov
xor
pop
leave
mov
pop
push
cmc
push
rol
fildl
cmpsl
push
ljmp
xchg
aam
std
inc
xchg
fmul
add
insb
stos
jb
add
dec
imul
arpl
popf
cmp
cmpsb
push
add
nop
lea
adc
clc
stos
repz
sub
fldenv
fldcw
outsl
sbb
push
popf
testb
mov
mov
setbe
mov
xchg
mov
pop
fstpt
sub
xchg
mov
out
shll
adc
pop
loop
jbe
cmpsl
leave
jae
jl
in
jnp
fwait
repnz
dec
mov
xchg
push
mov
adc
mov
push
ficoml
or
stos
push
orl
repz
cmp
inc
mov
xchg
sub
jmp
inc
clc
cltd
test
neg
jle
je
addr16
pop
cmp
jmp
mov
mov
dec
sbb
cmp
dec
inc
int
jbe
add
repz
adc
lock
add
xchg
pop
add
bound
push
ds
dec
xchg
mov
push
pop
adc
and
ja
xchg
jmp
mov
mov
add
fidivrl
add
push
push
cmc
adc
mov
ja
mov
rorb
loopne
xchg
insb
mov
push
pop
cmpsb
mov
xchg
xor
add
call
pop
jnp
xchg
sbb
xchg
pop
xchg
and
sbb
xor
push
lret
push
mov
fcoms
push
sub
inc
pusha
inc
fcoms
fisttpll
gs
popw
xor
xchg
test
incb
nop
mov
cmp
jmp
test
test
xor
fstpt
jmp
cmp
xor
filds
lahf
push
sub
jnp
inc
pop
add
aad
fstpl
jo
gs
lea
lods
pop
psrld
dec
sbbb
jmp
push
jp,pt
mov
fbstp
mov
lret
xlat
xchg
ljmp
dec
dec
pop
cwtl
mov
outsb
mov
xor
out
mov
es
ficoms
fwait
das
fstpl
or
cmp
ja
rcrb
rcll
push
divb
cmp
aaa
mov
adc
xchg
or
push
add
outsl
arpl
scas
aad
pop
fldl
addl
movsl
mov
xor
imul
and
int
scas
out
pop
aas
jo
icebp
pop
mov
add
jle
in
out
cmp
mov
push
imull
shll
arpl
ret
dec
aam
imul
pop
popa
add
add
xchg
mov
mov
dec
in
xor
fbstp
or
aad
pushf
sbb
mov
fsubl
sti
xchg
imul
inc
or
push
ss
adc
mov
sub
cmp
push
xchg
adc
scas
jne
jg
adc
inc
jle
sub
adc
cmp
add
lds
imul
add
std
std
mov
inc
dec
aad
lret
adc
xchg
leave
fstpl
push
fcmovnbe
xchg
dec
pop
push
xchg
sbb
aad
mov
leave
adc
addr16
add
mov
mov
scas
loop
jns
outsb
imul
mov
push
jmp
hlt
cmc
xchg
cmp
cmp
lret
imul
sbb
outsb
je
enter
mov
mov
dec
cmp
ljmp
icebp
adc
fs
fwait
push
or
fnstsw
repnz
mov
xchg
xchg
jmp
icebp
lock
stos
int
loope
sub
pop
mov
mov
leave
rolb
add
idivl
aaa
mov
dec
adc
nop
mov
add
cmp
dec
mov
jl
mov
in
bound
xor
jb
push
les
int
mov
adc
aam
mov
add
or
pusha
stos
paddq
mov
addr16
sub
push
sbb
sti
ds
mov
aad
mov
xor
call
jo
pop
push
xor
add
rorl
xchg
fnsave
outsl
dec
adc
in
pop
xchg
aaa
aas
aam
xor
ret
dec
test
cs
out
ljmp
in
or
pop
shll
inc
ds
fcmove
movb
dec
int
pop
cmc
daa
mov
lcall
in
cmp
add
sub
jae
pop
jg
fwait
sti
lahf
rcrl
pop
jmp
popl
outsb
stos
test
shll
jbe
loopw
mov
jno
xor
js
movsl
std
mov
sub
popa
test
out
daa
popf
jmp
cmp
and
or
cmpsb
pushf
fwait
lret
jp
or
fwait
dec
aam
add
iret
enter
jno
fidivs
nop
and
sbb
push
mov
jl
ss
adcl
call
testb
mov
jnp
cwtl
push
test
mov
sbb
mov
or
cmp
rolb
scas
outsb
mov
adc
cmp
ds
bound
sahf
shl
cmpsl
adc
mov
les
xor
pop
leave
jne
or
mov
fidivrl
sub
sarb
jne
add
andb
xchg
sub
nop
sub
jmp
mull
xchg
pop
insb
adc
cmpsl
xor
pop
push
add
cli
pop
pop
std
loopne
add
andb
insl
mov
stc
xor
pop
mov
xlat
dec
cs
sbb
ds
mov
adc
decl
jb
decl
adc
fisttpll
movsl
push
mov
mov
sbb
mov
mov
ret
test
adc
push
call
jno
push
sbb
jnp
push
adc
das
jne
ret
cli
data16
pusha
nop
mov
in
xchg
test
repz
les
orb
or
loope
addr16
das
jnp
push
adc
push
popf
xor
movsb
pop
dec
ret
pop
mov
gs
adc
push
add
cmp
call
sbb
loop
scas
and
mov
cmp
jbe
pushf
fildl
test
fwait
add
scas
mov
xchg
ja
cs
lret
dec
inc
jns
xor
clc
popf
push
pop
popf
mov
jns
fcomps
ret
gs
dec
adc
out
gs
cltd
arpl
cmp
dec
call
sub
xchg
push
xor
jne
movsb
mov
xchg
or
cli
jecxz
xchg
sarb
xchg
mov
ds
out
rcrl
andl
push
pop
add
mov
mov
pop
jecxz
fstps
jecxz
int
add
mov
movsl
sub
push
lea
daa
xchg
stos
and
xor
je
push
inc
icebp
out
cmp
sbb
inc
xlat
sahf
jne
xor
dec
jno
int
jns
hlt
adc
and
xchg
pusha
pop
pop
cld
cmp
pop
out
cmp
or
scas
in
dec
fucom
ret
cmp
arpl
in
pop
inc
ror
xor
cli
pusha
sbb
xchg
sub
movsb
lcall
push
push
mov
shrb
and
imul
nop
shlb
adc
sub
lods
jno
data16
mov
jne
lret
or
fdivrl
and
mov
fadd
cmp
pushf
pop
ficomps
xor
pop
inc
dec
outsb
add
inc
lahf
mov
xchg
ds
movsl
cmp
int3
lock
pop
movb
mov
push
mov
data16
mov
ds
adc
ficomps
add
mov
cmp
aad
lock
mov
insb
cmp
addb
aaa
fisttpl
mov
adc
lret
movsb
das
jbe
popf
xor
jb
jecxz
ret
mov
and
js
sbb
jg
add
xor
not
sbb
ja
mov
push
test
inc
test
cli
mov
and
mov
adc
mov
sbb
sbb
std
xor
negl
mov
inc
incb
lcall
sbb
in
test
popf
daa
or
sbb
adc
or
popf
mov
leave
inc
xchg
fwait
or
dec
mov
repnz
sub
and
mov
mov
adc
inc
cmc
jp
push
push
sub
sub
mov
mov
filds
jmp
stc
inc
loop
xchg
sbb
lods
sbb
cltd
or
xchg
cmp
xor
sub
loope
movsb
pop
scas
or
push
dec
clc
test
std
test
push
jns
sbb
push
inc
xchg
out
maskmovq
imull
pop
dec
test
ja
push
scas
ret
mov
jmp
aad
xor
out
pop
mov
xchg
add
jl
lds
xchg
fcmovbe
add
in
inc
xor
push
clc
in
cmp
scas
adc
or
outsl
mov
out
into
lret
test
call
xlat
rolb
dec
mov
lret
scas
mov
push
out
inc
cmc
cmp
pop
adc
lods
shlb
add
add
insl
xor
pop
and
xor
push
loopne
pop
in
jne
inc
in
pop
outsb
sti
inc
mov
test
add
inc
mov
jmp
rclb
push
dec
cld
dec
mov
mov
sbb
xchg
or
cld
inc
callw
popa
sbb
outsl
pop
iret
xorb
stos
ss
xchg
sub
fidivrs
aam
idivl
sahf
int3
inc
stos
and
sahf
add
and
jl
popa
cmp
add
pop
roll
jns
ss
fistps
cmpl
sub
mov
lahf
jmp
sbb
in
jg
sub
icebp
sbb
pop
lret
pop
fimuls
xor
sahf
mov
add
push
pop
out
out
out
rorb
cmpb
fisttpll
fs
lods
and
pop
call
lcall
inc
mov
mov
or
shll
imul
jne
dec
inc
xchg
and
or
jne
mov
jecxz
jne
test
shrl
push
bound
sub
int
mov
ret
js
pop
imul
push
cmp
lcall
lahf
push
adc
or
cld
add
stos
or
xor
pop
xchg
mov
cmp
pusha
or
sti
sbb
pop
test
mov
cltd
lds
xlat
cmc
dec
sub
orl
cmpsb
mov
mov
inc
push
maxps
es
xor
insb
outsl
testl
imul
pop
je
outsb
push
and
cmp
lea
jns
out
cmc
aaa
jnp
xchg
in
mov
mov
mov
in
ja
pop
inc
sub
jnp
cmc
xor
xor
jle
mov
out
fistpll
jbe
fdivrl
ret
cmp
jnp
mov
adc
mov
nop
sub
pop
pushf
les
dec
ss
mov
add
mov
out
xor
xor
clc
adc
cld
pop
mov
add
sub
xchg
lret
incb
data16
aam
popaw
cli
test
pop
adc
pop
out
lcall
call
repz
daa
pop
je
gs
ret
add
test
mov
rolb
pop
dec
loope
mov
in
fmuls
mov
out
pushl
push
iret
inc
and
iret
popf
dec
rcll
std
cltd
push
dec
stos
jg
fs
pop
xlat
mul
adc
dec
adc
int3
inc
inc
dec
jne
test
and
das
loop
insl
push
out
mov
sbb
mov
jns
movb
and
add
into
insl
test
pavgw
pop
xlat
xor
in
dec
xchg
mov
adc
cmp
inc
xor
pop
push
push
xor
outsl
and
push
mov
lods
cmp
push
das
sti
stos
cltd
mov
jae
out
dec
mov
in
jne
fsub
insb
int3
andb
push
fidivs
jge
adc
xor
xor
call
adc
inc
inc
roll
xor
cwtl
adc
outsl
cmc
pop
fistl
dec
mov
aas
ljmp
dec
jae
out
xchg
jle
push
cmp
sahf
dec
jmp
push
stc
gs
cmp
lods
xor
adc
inc
sti
cmp
mov
mov
lret
int3
pop
adc
les
repz
push
jl
adc
das
fwait
dec
dec
jl
clc
mov
sahf
test
mov
stos
mov
xchg
fnstsw
das
dec
or
out
aaa
jo
push
lret
and
arpl
xor
pop
dec
or
sub
xor
pop
outsb
ret
inc
mov
xor
pop
dec
stc
ljmp
mov
lds
jbe
aam
xchg
dec
jo
adc
jmp
in
xchg
pop
sti
xchg
in
gs
pop
push
and
ds
repz
sub
sub
add
test
pop
mov
dec
test
stos
and
add
lea
mov
xor
or
out
mov
jbe
mov
sub
push
out
pop
fiaddl
sub
fstp
pushf
repnz
xchg
imul
fistpll
movsb
jnp
mov
xchg
ret
popf
xchg
sub
es
loope
push
cld
push
sub
ss
dec
ljmp
cwtl
sub
std
out
lcall
adc
and
jecxz
mov
filds
sub
mov
bound
xor
pop
rclb
imul
sbb
inc
dec
mov
ss
lcall
mov
jl
xchg
ss
xchg
iret
dec
mov
ds
fs
shlb
adc
fisubrs
mov
mov
mov
fdivs
jno
lcall
push
sub
mov
test
jo
xor
es
cmpsb
test
dec
dec
cwtl
loope
lock
xchg
mov
pop
cmpb
mull
popf
int3
inc
mov
adc
push
sbb
lcall
sub
push
lock
dec
xchg
or
adc
clc
mov
movsb
das
outsb
dec
push
cmp
aas
in
inc
ljmp
lods
xor
mov
sti
sub
pop
cs
xchg
ja
mov
jl
es
jp
call
jnp
outsb
daa
mov
daa
xchg
arpl
lahf
imul
pop
testl
dec
pop
mov
test
or
dec
sbb
cmpl
push
out
int3
cmp
mov
mov
fwait
stos
jnp
arpl
pop
aaa
mov
adc
pushf
xchg
add
pop
daa
mov
jg
inc
or
sub
movsb
fsubl
push
mov
out
jmp
mov
imul
mov
sbb
mov
cld
pop
cmp
test
push
pushf
or
enter
jmp
pop
and
dec
cli
push
push
adc
mov
bnd
xor
mov
add
jge
pop
mov
mov
mov
pop
dec
repz
and
in
je
xchg
je
add
xchg
sbb
jmp
add
lock
sti
pop
das
push
es
lds
scas
enterw
sub
jmp
pusha
dec
sub
xchg
jo
nop
add
mov
frstor
add
mov
shlb
push
pop
stc
daa
bound
sub
cmpsb
cs
cs
pushf
mov
hlt
cltd
imul
inc
negl
mov
scas
fstl
loopne
outsb
outsl
mov
xchg
dec
pop
and
aaa
movsb
stos
lret
mov
xchg
loope
xchg
sbb
sarl
and
ror
sbb
sbb
lods
out
lds
ljmp
iret
pop
sub
cmpsl
push
fsubl
add
in
jp
dec
push
jg
mov
mov
cltd
dec
into
sbb
aaa
popf
xlat
test
or
add
je
add
mov
or
ja
jmp
fnsave
popf
xchg
sbb
add
or
fwait
cmp
and
rcl
mov
int
lahf
lret
outsb
test
inc
cs
cmpsl
outsl
mov
lea
in
dec
or
dec
sarb
pop
mov
popf
xchg
add
cmp
fstpt
inc
mov
inc
inc
adc
mov
jb,pt
daa
jmp
jno
push
aas
push
add
lahf
push
xlat
rorb
pop
inc
cwtl
insl
fcomip
call
out
jae
aaa
mov
test
cmp
fisubrs
mov
aad
das
sbb
sti
xor
rol
add
pop
sti
sbb
ss
je
sbb
jmp
sbb
add
popa
pop
cmc
clc
xchg
jmp
and
xor
imul
xchg
out
cmpsl
push
shrl
inc
and
xor
lret
xchg
pusha
jo
out
adc
into
leave
pop
sahf
or
mov
sbb
adc
xchg
sub
addr16
push
mov
hlt
shlb
xchg
mov
std
cli
ss
lods
in
sbb
dec
mov
mov
pop
pop
push
fsubrp
movsl
ds
pop
mov
ljmp
jne
arpl
hlt
jle
mov
xchg
cli
xchg
add
inc
sub
rclb
lds
rol
pop
sbb
cmp
sub
dec
test
cmpb
inc
jge
leave
leave
rolb
loope
xchg
cs
and
mov
xlat
pushf
loope
sub
test
out
cmpsl
mov
lock
scas
cmpsl
mov
dec
push
aam
xchg
add
sbb
test
outsl
xchg
fsubrl
je
sub
xchg
ret
loope
vphaddwd
and
loope
mov
push
sbb
shrb
pusha
fisttpl
mov
pop
scas
cmc
sub
jge
leave
xor
mov
add
in
addr16
push
adc
ficomps
pop
gs
in
and
pop
push
pop
fdivl
jle
inc
cmp
shlb
fbstp
cmc
adc
insl
cwtl
or
out
dec
mov
stos
inc
sub
filds
rcrb
pop
mov
decl
xor
in
cmp
lock
push
cmp
jno
xor
in
inc
test
lahf
adc
dec
mov
mov
insb
cmpsl
call
ja
mov
cmc
pop
push
cmp
mov
push
mov
test
cmpsl
xlat
inc
mov
sbbl
xchg
xchg
out
enter
negb
insb
pop
mov
mov
pushl
sti
loope
mov
and
stos
inc
jge
cmpsb
popa
mov
pushf
sarl
jo
inc
ljmp
out
pop
shl
sub
mov
mov
push
std
xor
ret
test
sub
out
mov
incb
stos
fildl
ret
cmp
xor
inc
scas
sub
stos
mov
xor
jne
mov
dec
adc
cmp
mov
mov
adc
pop
lock
shrl
test
outsl
pop
inc
rcrl
inc
xlat
cltd
sub
cmp
les
push
inc
sbb
daa
push
rolb
cmp
dec
loopne
sub
add
adc
mov
fisttps
and
jnp
mov
xor
pusha
inc
frstor
cmpsb
imul
outsb
aaa
leave
pop
add
loopne
rep
inc
pusha
shrb
insl
pushf
je
cld
insb
or
and
sub
rcr
fsts
xor
hlt
dec
mov
jle
push
sbb
nop
out
movsl
adc
jl
gs
ljmp
pop
and
mov
xchg
icebp
fcompl
adc
sahf
or
pop
in
mov
outsb
mov
scas
es
lret
pop
nop
and
xor
rorb
dec
push
mov
pop
scas
mov
push
jb
mov
lahf
mov
ret
inc
add
and
outsb
icebp
pop
mov
jo
int3
std
cmp
adc
icebp
stos
loope
push
lahf
aad
in
mov
in
movsl
loop
call
fiadds
repz
push
movsb
repnz
xor
and
mov
push
ds
jno
sub
push
pop
xor
ret
stc
mov
cmp
data16
icebp
ret
xchg
push
or
xor
pop
icebp
decl
cli
arpl
es
aad
jg
cmc
pop
mov
je
xor
jge
mov
std
pop
xchg
mov
jbe
mov
xchg
stos
imul
pop
mov
lahf
fldcw
repnz
clc
xchg
rcrb
stc
mov
inc
mov
es
pop
sbb
daa
aam
xchg
fiaddl
push
or
or
dec
or
sar
lods
fwait
jnp
dec
lret
movsb
ja
xor
outsl
sbb
cltd
jecxz
mov
inc
add
xor
jbe
ljmp
add
fdivrs
mov
mov
xchg
or
or
dec
add
jle
mov
lret
pop
pusha
inc
xchg
lcall
fcmovnb
or
idivl
jo
rorb
inc
sub
adc
or
rcr
jo
add
js
das
or
mov
pusha
cli
rolb
fidivrs
adc
push
lret
insl
fnstcw
xor
xor
lods
popf
ja
mov
lods
ss
pop
mov
mov
pop
xchg
repz
popf
inc
sarl
xlat
jbe
or
mov
add
inc
repz
push
sarb
and
std
mov
shl
sbb
in
dec
inc
jg
imul
cmp
out
jae
xor
imul
push
inc
ljmp
mov
jg
xor
mov
jbe
ljmp
mov
add
rcl
cmc
mov
movsl
insl
sub
fisttpll
push
cmp
and
lock
xchg
stc
push
inc
push
cmp
push
jne
add
ss
lret
jp
imul
push
sbb
mov
repz
notb
xchg
dec
lods
cmp
xor
shlb
int3
jne
leave
shl
in
testl
and
add
test
xor
cmpl
fadds
sub
sub
pop
jbe
clc
xlat
fisttpll
or
fnsave
xchg
cli
lds
or
imul
push
mov
push
xorb
dec
or
test
xor
movsb
hlt
lret
pop
data16
mov
test
imul
in
fdivrp
and
aad
std
adc
mov
lret
fmuls
mov
xchg
pop
xor
hlt
mov
jecxz
adc
rorl
mov
or
or
sbb
inc
inc
push
ret
test
outsb
div
sbb
bound
sbbl
jmp
fnstcw
mov
push
mov
inc
out
add
fcmovnb
mov
sbb
jb
inc
arpl
mov
sbb
inc
mov
enter
pusha
or
rcrl
pop
mov
test
cld
lret
pop
imul
int3
ja
pushf
fidivl
mov
adc
out
aam
inc
sbb
imul
mov
lods
add
jno
mov
sarb
fldt
sbb
push
out
xor
jne
jno
push
loop
jo
pop
or
mov
sbb
es
fisttpll
ret
js
xlat
adc
inc
sbb
pushf
push
mov
dec
popa
mov
je
or
jb
sbb
mov
movlps
push
push
push
jmp
iret
aaa
adc
aas
insl
outsl
test
dec
and
test
push
jae
imul
aas
or
push
mov
aas
test
lods
lahf
inc
lret
pop
movsb
das
sub
cmpsl
mov
push
inc
mov
dec
adc
xchg
cmp
and
mov
jecxz
inc
in
or
xchg
jo
ljmp
add
xchg
stos
out
es
dec
sub
fidivl
xor
repnz
sbb
movsl
call
adc
cld
cmpsl
sbb
sarb
adcl
test
or
xchg
xor
stc
xchg
xor
fucomip
insl
fisubrs
fs
xor
mov
sbb
jge
not
xchg
push
push
lcall
std
fcompl
xor
popa
sahf
je
out
stos
adc
xor
fistps
mov
cmc
jns
pop
jo
mov
neg
add
mov
jne,pt
jnp
pop
pop
pop
lret
adc
ja
dec
cmp
add
je
in
or
lahf
lds
test
inc
dec
jne
adc
push
shlb
inc
dec
push
mov
sub
push
mov
xor
mov
cmp
mov
mov
lcall
mov
stos
sub
roll
mov
push
cmp
cltd
inc
jecxz
jno
push
sub
mov
mov
mov
pop
pop
lds
and
ret
inc
test
mov
jno
jae
leave
jg
stc
stos
or
mov
ficoms
shrl
inc
and
jl
and
jb
mov
in
xor
jns
test
lock
push
sbb
rclb
mov
stos
push
ljmp
addr16
inc
and
xlat
adc
pop
mov
jne
pop
sbb
sbb
pusha
dec
or
sub
cmpsb
or
mov
outsb
mov
outsl
lods
pop
add
fwait
xor
imul
add
test
movsb
popa
push
xchg
cs
add
mov
sub
jae
mov
clc
daa
stc
mov
dec
iret
daa
imul
mulb
xor
xchg
ja
ja
push
fstl
outsl
cld
mov
xor
aas
aad
sbb
imul
neg
ret
cwtl
repz
or
sub
out
cmp
pop
push
push
mov
adc
rep
cld
add
sbb
out
mov
addr16
pop
pusha
lods
dec
pop
sti
xor
hlt
push
inc
in
je
or
xor
mov
test
and
jo
pop
cltd
xchg
sub
xor
xor
outsl
xor
imull
mov
out
mov
lcall
fsts
ficomps
sub
adc
shrd
scas
mov
inc
cld
fwait
scas
and
push
cmp
cmp
xorb
bound
or
pushf
dec
lods
mov
jg
mov
aam
movsl
lahf
icebp
movsl
test
imull
cmc
stc
xchg
fs
insl
cmp
and
movsb
out
xor
popa
mov
imul
daa
call
dec
push
pop
clc
mov
sub
pop
imul
cs
push
imul
mov
push
dec
push
push
icebp
icebp
sub
sbb
inc
add
xchg
mov
cmpl
nop
xor
dec
rcrb
mov
and
faddp
outsb
scas
pop
repz
nop
xor
sub
inc
in
packsswb
xchg
fdivrs
mov
sub
jle
or
movsb
pop
cs
mov
sub
es
jmp
pushf
sub
ret
movsb
dec
pop
shll
cmpsb
and
pushf
dec
xor
pushl
data16
xchg
add
imul
xchg
call
aaa
and
cmp
rcll
mov
mov
fxch
add
and
push
add
jmp
mov
mov
insl
lret
xchg
out
popf
sub
ds
pop
repz
imul
cmp
or
jge
cmp
shll
scas
in
js
js
movsb
das
stos
fcoml
mov
ret
sub
push
and
adc
pop
pop
push
popf
pushf
enter
sbb
rcrb
arpl
lods
aam
push
add
in
and
iret
int
mov
insl
and
leave
xor
sub
adc
mov
cmpsb
out
mov
loop
out
cmpsb
lret
dec
sub
out
push
cmp
sti
into
sbb
jecxz
push
sbb
sbb
mov
loop
jg
cmp
mov
push
lea
jbe
push
ljmp
mov
cmpl
fdivp
out
and
pop
decb
mov
jo
mov
fs
in
popl
xchg
push
leave
inc
cmp
aad
adc
mov
mov
xor
cmpsl
fs
adc
stc
sub
aas
sbb
lahf
mov
lods
cmpsb
mov
and
push
and
sahf
loope
addr16
pop
stos
sub
mov
movsl
inc
dec
repz
jge
inc
adc
imul
aad
sahf
stc
jle
daa
sahf
push
cld
and
pop
sub
dec
mov
xor
imul
repz
push
sahf
test
or
mov
cmp
fidivrs
movsb
iret
fs
sti
cmpsb
fisubs
mov
xchg
xchg
jp
xchg
insb
inc
add
mov
cwtl
sub
add
dec
test
sub
aad
xor
mov
mov
jmp
les
aaa
popf
xor
pop
imull
jg
sbb
pop
movsb
adc
mov
pop
pop
mov
out
pop
ljmp
dec
es
stos
es
mov
jbe
xchg
cltd
push
in
or
ss
mov
xor
jmp
push
add
cmp
ds
or
push
movsb
inc
loopne
add
or
imul
divl
iret
iret
push
mov
inc
test
xor
psrlq
iret
in
xor
sahf
sarl
arpl
adc
mov
add
xchg
mov
icebp
or
sbb
push
int3
mov
data16
sub
xor
ja
dec
out
jmp
xchg
aad
movsb
int
adc
fiadds
sub
cld
sub
lock
fisttpll
xchg
mov
lcall
outsb
push
fsubs
inc
outsl
test
pusha
or
jle
popf
xchg
bound
dec
fcoms
inc
adc
jmp
dec
and
popf
mov
jp
insl
nop
dec
int
addr16
icebp
jmp
add
sti
or
jo
sbb
push
adcl
mov
or
push
fbld
ljmp
or
adc
pop
adc
cmp
xlat
jge
lret
int
pop
mov
stc
test
icebp
adc
push
cwtl
add
ret
and
mov
cltd
ret
les
adc
lock
pop
lds
in
movsl
enter
icebp
out
popa
push
mov
stos
inc
push
adc
popa
aad
aas
sub
sbb
mov
jns
jg
dec
das
jmp
sub
outsl
mov
fmull
loopne
inc
call
cltd
lods
add
rclb
test
push
cmp
mov
imul
clc
cs
lahf
adc
enter
imul
sub
sbb
pop
xor
adc
dec
or
fildl
lcall
xor
mov
sub
dec
adc
test
add
push
in
xor
sbb
and
inc
neg
cmp
cmpsb
push
ret
push
icebp
inc
mov
call
pop
push
inc
push
jns
hlt
push
stos
sbb
mov
lcall
decb
outsb
inc
xchg
mov
push
push
push
in
cmp
es
mov
loope,pt
mov
pop
testb
dec
es
lea
sbb
add
xor
adc
aad
mov
jno
add
mov
das
pop
pop
mov
adc
pusha
les
mov
pop
xor
nop
or
out
fnstsw
jmp
stc
xchg
sar
mov
push
inc
xor
inc
data16
das
flds
mov
lods
shlb
insl
mov
jo
ljmp
cltd
insl
shlb
mov
mov
dec
jns
lods
dec
sbb
fidivl
loope
lea
shl
fistpl
pop
adc
lods
cs
aas
jo
add
dec
cmp
pop
ja
push
xchg
decb
xor
adc
push
mov
call
clc
dec
mov
rcl
andl
pop
xchg
jmp
xor
sub
rorb
cli
ret
pusha
lahf
mov
mov
jp
imul
sbb
decl
dec
and
test
pop
xor
cld
add
xor
je
push
addl
dec
sahf
inc
fcomps
pusha
outsb
mov
cmc
push
cmp
pushf
or
xor
add
dec
shlb
scas
mov
sbbb
sbb
mov
mov
mov
jnp
mov
cmpsl
xchg
mov
sbb
xchg
call
cltd
jae
push
inc
cli
psraw
test
xor
in
pop
xchg
and
je
test
pop
push
cmp
repnz
cmpsl
adc
in
mov
in
pop
das
dec
adc
or
jmp
add
scas
sbb
out
xchg
pop
sub
outsb
imul
jo
sbb
xlat
addr16
push
jo
sbb
stc
insb
test
popf
jae
add
in
jge
pusha
shll
mov
jnp
ljmp
or
lods
rcr
andb
jo
sbb
sub
lahf
mov
push
mov
call
pop
push
dec
jmp
xor
push
adc
inc
pop
xchg
mov
fsub
pushf
iret
fildl
cli
loopne
dec
cmp
jns
punpckldq
test
inc
aaa
call
pop
mov
fwait
or
push
sbb
xchg
fucomp
mov
cmp
sbb
jp
clc
or
jge
pop
lock
jbe
mov
sbb
lcall
js
fbstp
dec
lea
fwait
repz
jns
mov
adc
insb
jg
pop
jns
jmp
stc
icebp
add
loopne
aam
pop
scas
lods
xchg
es
lcall
add
sub
pushf
and
nop
lock
inc
xchg
xchg
push
adc
std
sahf
xchg
fs
cmp
xchg
pushf
inc
aaa
test
imull
outsl
or
fcomps
inc
sbb
push
outsb
mov
lock
mov
icebp
push
das
loopne
xchg
or
lds
push
mov
sbb
aas
mov
ljmp
pusha
dec
mov
xor
imul
sbb
cmpsl
pop
cmp
mov
adc
or
in
into
push
dec
insl
or
pop
fst
mov
adc
cs
dec
out
mov
rcrb
aad
sahf
add
xchg
lods
jae
cwtl
ds
sahf
lods
sbb
pop
jb
adc
xchg
jmp
mov
pushf
cmpsb
lret
jl
into
fdivl
push
dec
lcall
sub
sarb
sub
popa
inc
mov
repnz
fiadds
orl
stos
cmpb
ds
push
mov
mov
jle
or
mov
jecxz
insb
jae
out
sbb
jmp
cld
xor
inc
adc
mov
sub
std
adc
inc
outsl
testl
in
mulb
aas
add
jecxz
int3
mov
xorb
xchg
jmp
xor
push
inc
and
inc
fucomi
int3
int
sbbl
clc
pop
adc
loop
push
jecxz
stc
in
mov
divl
or
aas
lret
jl
loope
outsb
inc
xlat
mov
sub
insb
add
addr16
stc
jns
pop
mov
test
aad
inc
push
inc
sub
push
xor
mov
mov
mov
fildll
inc
pop
sti
sub
std
mov
jne
das
xchg
fwait
add
jmp
iret
push
insl
inc
fsubrs
test
and
negl
mov
loope
aad
fucom
dec
stos
cmpsb
add
push
pop
sahf
shlb
ds
pop
aad
xchg
sbbb
scas
xchg
xchg
jmp
mov
loope
pop
mov
loop
daa
jns
mov
test
sbb
pop
icebp
cmp
lds
bound
push
cmp
call
add
daa
pop
fsubl
cmp
inc
inc
push
sti
xor
mov
jl
pop
fbld
daa
test
scas
mov
pop
mov
xor
xchg
adc
shl
icebp
mov
out
mov
adc
pop
push
stos
cli
xchg
xor
inc
jns
pop
sub
inc
or
push
out
pop
out
sbbb
call
push
jbe
jecxz
or
imulb
jge
xchg
pop
int3
ljmp
test
jb
stc
sbb
jbe
sub
popf
add
add
aam
jne
or
and
push
jle
jmp
or
in
js
cmpsb
dec
jmp
sti
stos
mov
in
outsb
mov
cltd
shr
ds
or
repz
fnstsw
mov
shr
cmpb
xor
sbb
add
cs
enter
cmpsl
push
xchg
inc
mov
mov
icebp
inc
out
insb
jp
mov
and
or
mov
cmpsl
mov
push
jmp
mov
jne
xor
cmp
inc
loopne
mov
dec
enter
jbe
cmpsl
repnz
decb
push
mov
pop
adc
dec
out
call
mov
cmp
lret
push
lcall
mov
imul
lret
popa
popa
enter
shll
sbb
xabort
mov
or
inc
popa
cmc
xchg
or
jecxz
cmp
loope
gs
jle
mov
aam
into
sbb
xor
add
and
or
inc
jp
shlb
sti
enter
jmp
jge
arpl
mov
mov
jns
fbstp
rcll
or
inc
cmp
pop
jl
cmp
xchg
add
mov
out
daa
cmp
movsb
pop
lret
fldcw
adc
lcall
rcrb
sbb
hlt
imul
mov
dec
pop
or
arpl
xchg
enter
ja
test
xor
adc
adc
push
and
arpl
movsl
pusha
or
lret
mov
xchg
add
cltd
cmpsb
cmpsl
outsb
add
xor
outsl
stos
clc
jecxz
jl
test
sbb
leave
pop
adc
int
repz
enter
or
dec
xchg
mov
dec
testl
jge
iret
xchg
scas
je
mov
outsb
mov
cmp
stos
into
cli
notl
pushf
ljmp
repz
test
or
out
rol
xchg
lea
int
int3
into
and
das
push
adc
mov
in
xor
jle
in
loop
or
pop
sahf
pop
and
xchg
pusha
pusha
scas
sub
mov
dec
insb
dec
ss
jbe
xor
add
das
pop
andl
cmpb
roll
xor
and
dec
cwtl
imul
sub
popa
movsl
jp
xchg
les
adc
inc
scas
lock
shlb
rol
mov
shlb
ss
mov
scas
cmpl
sub
inc
cli
jecxz
out
repz
int
cmp
aad
pusha
jno
push
fnstsw
mov
xor
lahf
mov
xchg
jecxz
jns
xchg
cmpsl
fs
jbe
ljmp
ss
test
das
mov
ja
fwait
xchg
xchg
fucom
jmp
cmc
jb
dec
mov
sub
or
iret
or
ret
cmp
lock
mov
scas
mov
xchg
fwait
pop
xor
andb
xor
stos
jo
cld
dec
dec
sbb
mov
lret
mov
or
xchg
xor
sbb
fmul
movb
loop
add
pusha
push
sbb
out
jle
sbb
cmc
pop
cld
mov
ret
icebp
sub
xchg
fdivrs
adcl
imul
sbbl
aaa
jbe
pop
mov
dec
xchg
pop
jbe
test
inc
dec
out
les
dec
rcr
sbb
sub
push
jnp
pop
insb
insb
int
cmc
jae
and
and
xor
inc
and
testb
sbb
mov
pop
xchg
aas
mov
mov
popa
aas
or
lret
jae
mov
lds
dec
movsb
cmp
mov
hlt
jne
aad
mov
cmp
into
dec
aam
out
mov
mov
scas
mov
inc
push
pop
iret
in
inc
cs
adc
call
notl
inc
xchg
inc
lds
sar
mov
or
cmp
cmp
pop
gs
inc
push
cld
gs
ss
jle
rclb
je
jo
andb
sahf
pop
inc
test
add
sbb
repnz
outsl
mov
add
dec
addb
mov
pop
sahf
mov
leave
cs
mov
mov
mov
pushf
data16
push
or
in
jnp
cld
jo
imul
inc
insb
push
sbb
push
ds
ret
xchg
test
orb
sbb
jbe
xor
jb
testl
mov
imul
movsl
cltd
and
insl
jle
mov
cmp
subb
xchg
rcrl
mov
cmpsb
out
jmp
aaa
push
add
imull
mov
andl
and
cmp
mov
cli
lock
xor
nop
insb
mov
push
push
je
addr16
cmpl
xlat
sti
addr16
mov
lods
mov
xchg
sbb
dec
lock
sarb
hlt
sbb
or
jno
arpl
jo
xlat
sbbl
roll
jmp
jle
int3
jo
lret
iret
mov
pop
dec
cmp
inc
testl
stos
push
rcrb
mov
loope
push
adc
adc
xor
jp
mov
add
xchg
cmp
ljmp
ljmp
xor
insb
repnz
push
inc
or
ret
sub
mov
loope
jmp
mov
ljmp
mov
popf
bound
lock
mov
mov
outsl
idivl
in
mov
inc
fistl
inc
int
jb
andl
mov
outsl
mov
arpl
jp
cmpsl
xor
fcmovnb
mov
sub
xchg
imul
xchg
fwait
lods
roll
pusha
sub
mov
sub
inc
pop
cwtl
sub
pop
divb
sub
push
xchg
sbb
mov
push
mov
lds
jbe
jbe
or
and
imul
int
lret
cmp
push
push
std
mov
jno
test
outsb
test
xchg
insb
cmp
insl
sub
inc
inc
mov
lods
pop
push
shll
jecxz
push
jbe
lods
sub
push
xchg
xor
enter
xor
xchg
das
addb
mov
sbb
or
and
jp
shrd
xchg
ljmp
sarb
and
or
pop
stc
mov
imul
inc
mov
adc
popf
aas
or
mov
mov
push
push
sbb
inc
xchg
inc
push
mov
push
mov
mov
dec
or
add
subb
adc
in
fistpll
pop
and
lds
outsb
cli
mov
daa
jmp
xchg
sub
fs
fldt
sahf
cmp
icebp
movsb
or
mov
test
xchg
pop
popf
icebp
sahf
imul
mov
addb
lock
cwtl
mov
xchg
inc
sahf
push
adc
andb
sbb
pop
pop
js
mov
mov
add
addl
lcall
mov
push
lret
stos
insb
mov
in
xchg
insl
imul
inc
jle
jmp
cltd
pusha
add
ds
leave
inc
mov
jp
jg
imul
fdivl
repz
cmp
fs
das
or
ds
and
push
adc
fdivl
and
jnp
je
inc
fidivrl
arpl
out
jnp
mov
mov
sub
arpl
dec
inc
loopne
pop
fnstenv
into
pop
les
mov
mov
pop
insl
mov
jle
mov
sub
mov
lcall
xchg
outsb
cmp
in
cmpsb
and
or
aad
dec
sbb
out
lea
inc
inc
test
adc
loopne
push
loope
enter
movsb
xchg
xchg
aas
aad
fs
xor
fimull
out
pop
in
mov
xchg
xor
xchg
imul
pop
adc
or
cmp
inc
xchg
xchg
mov
shrl
bound
or
inc
dec
scas
addr16
das
fldl
bound
pop
aad
pop
aam
mov
adc
std
dec
popa
mov
shll
adc
lock
loop
call
push
adc
mov
xorb
xchg
aam
sub
aas
add
fs
aaa
pop
xchg
adc
ret
add
arpl
dec
jmp
test
lahf
sbbl
fs
add
pop
push
lahf
enter
dec
pop
or
xor
xlat
je
mov
iret
mov
scas
dec
mov
inc
loop
push
and
adcl
cmc
xchg
stos
or
sbb
xchg
inc
add
jno
push
adc
fstl
shr
adc
mov
or
in
pop
and
jo
sub
jns
inc
fisubs
insb
mov
push
sar
in
movsl
dec
js
cmpsb
sub
aaa
push
in
jbe
jne
mov
jmp
std
insl
push
pushf
mov
cli
inc
mov
mov
and
pop
push
pusha
je
lods
in
ja
mov
mov
add
or
popf
mov
sub
testb
icebp
lock
cmpsb
imulb
mov
lods
aad
jne
ja
xchg
shlb
lods
cltd
aam
lea
add
mov
in
rcll
mov
lcall
in
lds
sbb
mov
ret
jl
inc
sbb
sbb
xchg
cwtl
fldcw
cli
stos
cmp
jnp
sub
insl
test
xchg
hlt
ror
lahf
mov
test
lahf
jl
cld
leave
xor
add
mov
mov
daa
dec
sub
popa
mov
mov
sub
xchg
jno
mov
fadd
inc
jg
mov
inc
sub
add
popa
add
fcmovnb
mov
inc
adc
xchg
and
mov
mov
push
xchg
outsl
aas
in
mov
mov
sbb
push
ret
cmc
lods
add
fld
cs
sbb
or
ret
xor
les
adc
fsubr
lret
push
xor
popf
gs
inc
dec
cld
aad
imul
dec
fistpll
out
jne
xchg
daa
sub
and
jne
adc
adc
jne
arpl
inc
call
and
js
jp
pop
jno
notb
add
jge
dec
adc
cli
mov
mov
inc
pop
mov
pusha
push
push
lods
fstpl
inc
mov
or
in
imul
sbb
out
xchg
imul
push
push
sbb
outsb
negl
and
mov
aam
adc
add
sbb
int
scas
cs
add
loop
aaa
sbb
aad
call
lods
in
ret
mov
sbb
mov
and
jecxz
les
or
rorl
sbb
test
aam
sub
xor
sqrtps
faddl
ljmp
dec
jnp
leave
pop
loop
adc
call
movsb
cmp
pop
mov
lea
lahf
sbb
std
push
adc
sub
aad
scas
cli
or
mov
and
sbb
pop
loopne
xchg
nop
push
jae
xchg
mov
adc
movsl
adc
flds
dec
scas
fcoms
adc
lods
out
xchg
ret
int3
sbbb
cmpsb
xchg
ja
out
scas
jno
adc
idiv
nop
ficompl
aas
sbb
cmp
stos
icebp
cmc
mov
xchg
in
inc
jnp,pn
xor
push
sbb
pop
cli
test
and
xchg
fistl
inc
xchg
or
mov
lahf
jne
insl
fidivrl
sub
push
lods
push
neg
dec
push
test
add
ret
scas
lods
or
fimuls
mov
stc
dec
or
dec
cmpsl
jmp
jae
inc
pcmpgtw
mov
aaa
fistl
popf
out
imul
jecxz
xlat
stos
pop
mov
pop
mulb
popa
jmp
xor
pop
jno
or
out
cmp
cs
jnp
add
test
aam
add
sbb
les
lcall
pop
inc
int3
dec
add
dec
mov
out
add
push
inc
or
fldt
lods
xchg
xchg
in
add
mov
fsts
out
jb
decl
xlat
leave
loopne
pop
ss
push
sti
pop
inc
mov
lcall
icebp
mov
mov
sbb
aaa
mov
lahf
xchg
clc
stos
cmp
cltd
mulb
cld
loope
hlt
jnp
sti
icebp
jl
dec
sub
mov
push
pop
fs
sub
rclb
or
sub
lds
jno
adc
stc
or
ja
sahf
jbe
call
out
push
and
test
lret
adc
push
les
jg
mov
pop
jp
mov
sub
test
xchg
ja
mov
out
mov
sub
pop
adc
and
test
inc
iret
clc
inc
sub
mov
cli
mov
sub
pop
mov
js
aas
pushf
cmpl
add
ret
inc
sar
dec
fwait
not
movsl
out
leave
xchg
dec
ljmp
pop
lods
pop
cmpsb
cli
aas
push
or
adc
cld
ss
scas
and
push
or
xor
sub
add
popf
out
mov
jecxz
pop
xlat
xchg
loopne
stos
jns
push
pop
ja
push
ss
outsl
in
iret
stc
dec
dec
sbb
xchg
cmp
je
mov
pusha
mov
inc
test
inc
lret
outsl
fwait
cmp
jge
pop
sbb
fsts
rcl
clc
sbb
add
push
jp
bound
imul
add
fsts
stos
sub
scas
pop
mov
int3
out
sub
fdivrs
pop
cli
adc
fisttpll
mov
cld
shl
jmp
pop
shll
cmp
test
dec
sub
inc
push
pop
or
loopne
test
inc
adc
xor
fldl
dec
adc
enter
es
jo
pop
pop
imul
in
pop
mov
es
fistpl
push
sbb
sbb
add
addr16
ljmp
jle
std
sbb
mov
mov
sbb
inc
xor
nop
lahf
jmp
pop
pushw
mov
in
ret
rcrb
lods
push
stos
sbb
xchg
cmp
jecxz
and
mov
and
or
sarb
sbb
push
insl
test
and
jmp
mov
aad
stc
ftst
loop
hlt
fwait
pop
out
jmp
cld
xchg
movsb
stos
mov
je
mov
fildll
js
insl
adc
push
pop
add
cwtl
stc
mov
loope
cwtl
adc
ret
jnp
lret
xchg
fs
std
sub
xlat
inc
push
mov
mov
fistl
or
imul
pop
ja
test
mov
adc
sub
leave
das
sbb
xor
mov
fidivl
aaa
jo
xor
jecxz
mov
jmp
pop
xor
mov
and
rcrl
jo
sbb
out
scas
jne
fsubs
call
sub
scas
out
in
push
sub
clc
fnstcw
rcll
mov
cld
mov
loope
push
popw
or
data16
imul
jmp
sub
pop
or
insb
xor
push
popf
sub
jno
fnsave
dec
fwait
jo
push
movsb
loopne
je
loopne
mov
inc
mov
jp
out
lret
mov
dec
fs
fadds
dec
mov
mov
push
test
shlb
and
jl
and
jno
jnp
mov
and
rolb
mov
pop
and
jecxz
cwtl
mov
add
push
xchg
jp
cs
xorb
sub
xor
mov
pop
xchg
sub
stos
mov
mov
adc
stos
loope
xchg
adc
std
mov
add
in
nop
arpl
push
cld
jg
and
and
fwait
cmp
add
or
sbb
mov
dec
int3
cmp
popl
inc
dec
arpl
pop
test
xchg
sahf
addb
adcl
mov
mov
es
cmp
pop
repnz
pop
sub
scas
cmpsb
leave
cmp
ss
push
lock
jae
cmp
inc
pmuludq
jnp
jnp
add
pop
push
push
pop
sub
fidivrl
scas
sbb
add
mov
pusha
mov
pop
inc
and
mov
je
xor
lret
pop
mov
xor
cli
push
ds
nop
inc
hlt
mov
bound
inc
pop
aaa
dec
inc
xchg
out
jg
test
fstl
jp
out
xlat
or
mov
xor
int3
adc
and
cmp
mov
sbb
xchg
das
into
popf
inc
inc
imul
scas
inc
sub
clc
lea
mov
pusha
adc
or
sbb
inc
punpckhwd
jl
mov
andl
jnp
aas
sbb
aaa
dec
dec
test
xor
jmp
lahf
inc
add
pusha
enter
pop
mov
lret
std
testl
and
push
dec
imul
ret
int3
subl
js
das
fldl
insb
mov
xchg
jg
int3
sub
dec
iret
aad
adc
lods
dec
push
bnd
jg
ljmp
divl
test
and
movnti
loope
adc
dec
mov
xlat
pop
mov
mov
sti
inc
cltd
outsl
sub
sbb
lock
in
shlb
arpl
fidivrs
or
mov
scas
push
andl
cmpsl
cli
sub
cltd
data16
stc
call
insb
jmp
ja
adc
or
adc
adc
cmp
xor
mov
dec
sti
mov
lahf
addr16
push
and
int
dec
mov
jb
mov
in
fildl
enter
or
hlt
push
in
std
dec
insb
out
push
scas
ds
mov
sub
std
jmp
rep
pop
cmp
mov
cmp
into
inc
pop
sbb
aaa
xchg
and
sub
repnz
jmp
push
mov
inc
cmpsl
popa
cli
xchg
jne
cmp
jne
adc
mov
cmpsl
fdivp
sbb
enter
in
and
mov
adc
jo
cmp
add
dec
jg
sub
and
cwtl
out
into
xchg
mov
js
sub
push
fidivrs
jmp
in
mov
pop
pop
lods
adc
sbb
lea
frndint
imul
loop
out
mov
out
das
adc
or
dec
lods
mov
jge
push
and
dec
in
xor
fisubrl
test
pusha
and
leave
mov
xchg
mov
and
mov
lods
mov
adc
sbb
adc
mov
repnz
ljmp
pop
push
testb
bndldx
lock
inc
cmp
loop
sbb
mov
mov
pop
dec
je
jno
popa
mov
mov
xor
adc
jg
outsl
bsr
adc
les
dec
cmp
je
popf
dec
clc
or
inc
sbb
ljmp
mov
pop
inc
aad
or
cmp
out
popa
icebp
jmp
add
gs
repnz
es
pop
xor
jae
sahf
pop
add
test
clc
xor
ret
pop
sub
xchg
sarl
pusha
xor
or
es
loopne
push
ljmp
sub
cltd
lcall
mov
inc
lret
repnz
cmc
inc
push
mov
pop
pop
mov
mov
in
out
push
mov
call
jnp
mov
insb
or
ljmp
or
inc
push
repnz
cmp
mov
cmc
push
push
mov
adc
leave
adc
les
test
dec
pop
and
push
ror
pop
dec
pop
cmc
jp
gs
and
dec
sub
pusha
dec
sbb
les
dec
jne
adc
cmp
mov
pop
push
icebp
es
cmp
inc
xor
pusha
ljmp
jae
and
push
inc
xchg
pop
add
xor
xchg
xchg
insl
lret
inc
jmp
or
mov
fldenv
insb
into
pop
add
das
xchg
lods
lock
sub
bnd
flds
test
mov
dec
xor
shl
je
sbb
out
fmull
mov
inc
adc
lods
insl
and
sub
cmp
push
stos
sbb
notb
js
jmp
int3
sub
push
xchg
cwtl
mov
dec
add
hlt
sahf
mov
loopne
into
fcoms
fcoml
insb
push
adc
mov
dec
mov
sbb
push
cltd
mov
aas
lahf
sub
pop
fs
jne
dec
mov
jge
lret
push
xor
jle
mov
xor
mov
ret
int3
leave
jge
call
loopne
dec
mov
enter
add
xchg
clc
stos
fs
lods
jle
xchg
sahf
test
lock
imul
cmp
fcompl
jo
mov
arpl
les
sbb
loopne
leave
and
inc
cmp
gs
lea
adc
fdiv
jae
les
dec
fs
mov
enter
mov
cmp
nop
fs
aam
dec
xchg
mov
stc
call
gs
lods
imul
loopne
notl
sbb
call
aaa
aam
xchg
xlat
push
push
mov
jecxz
mov
daa
and
loope
out
fiaddl
jmp
xchg
push
mov
lods
mov
xor
cld
lcall
xchg
sti
call
call
dec
dec
sbb
jmp
inc
sub
lock
lret
or
aas
sub
dec
mov
or
sahf
dec
or
sub
add
divb
out
movsl
add
inc
sub
xchg
xchg
lods
dec
jl
and
loopne
call
mov
fcoms
dec
adc
cmc
das
mov
repz
std
cli
into
insb
sbb
aam
mov
xchg
mov
jg
adc
pop
fistpl
sbb
test
dec
and
xor
fldl
fsubrl
pop
mov
in
add
loop
orl
push
stos
sub
push
fcmove
sbb
cmp
lods
bound
imul
cltd
inc
push
mov
js
lock
adc
xchg
mov
cmp
dec
call
cmc
push
pushl
aas
inc
or
mov
mov
mov
lods
jo
stc
xchg
xchg
fidivrs
fwait
or
xchg
pop
leave
in
add
fmul
dec
adc
in
push
mov
sbb
cs
inc
in
sub
mov
cltd
jbe
scas
xor
push
mov
lds
pop
or
ret
inc
xor
popa
xchg
popf
dec
adc
leave
ret
je
push
fs
lock
xor
icebp
xor
iret
int3
and
aas
and
das
jno
ffree
insl
sysenter
mov
push
cwtl
outsl
sub
les
xor
sub
sub
das
push
je
inc
cli
inc
add
mov
jl
cmpb
pop
fstpt
cwtl
xchg
dec
cwtl
pushf
call
pop
mov
xchg
pop
cmp
call
mov
cmpsl
cmp
sbb
shll
sbb
mov
ret
pop
mov
fisttpll
mov
cmp
sbb
cmp
fmull
mov
mov
jnp
jmp
and
loopne
or
jo
mov
pop
adc
into
add
in
loope
sub
je
mov
mov
iret
mov
or
inc
push
xor
pop
mov
cltd
aas
mov
sarb
mov
adc
leave
jns
cmp
pop
cwtl
aas
xchg
xchg
pop
jo
jmp
out
push
test
mov
out
xchg
cmp
push
in
mov
sarl
les
std
js
mov
lods
popa
push
leave
dec
xor
mov
daa
mov
lret
mov
inc
mov
pop
test
and
push
int
ss
and
mov
je
mov
dec
les
nop
lret
jb
int
arpl
xchg
jmp
fwait
adc
sbb
fwait
mov
mov
jle
sub
sti
lock
push
aam
push
pop
push
xor
int3
repz
imul
and
dec
cmp
or
mov
sub
imull
inc
neg
addl
cmpsb
mov
repz
cmc
adc
xchg
cltd
int
les
outsl
pop
fs
push
int
cs
lcall
mov
xchg
lock
lcall
dec
jl,pt
lods
in
inc
xchg
xchg
xchg
into
add
add
ja
fs
shlb
idivb
mov
aaa
xlat
andb
xchg
xor
inc
jns
inc
push
sub
push
add
cmp
idivb
imul
shl
and
and
pop
or
mov
pop
lahf
xchg
icebp
orl
int
cltd
mul
call
imul
mov
enter
shrb
les
shrl
inc
scas
ret
sub
pop
push
jnp
imul
or
mov
mov
lcall
and
fnstenv
jecxz
and
push
mov
inc
int
clc
cmpsb
sahf
inc
pop
dec
push
xlat
aaa
pop
xor
dec
fdivrl
lcall
es
addb
insb
xor
push
mov
int
in
pop
cmpsl
xor
jecxz
lret
sbb
mov
add
mulb
scas
les
add
xchg
xor
xor
mov
shlb
xchg
sub
out
negl
dec
nop
jb
mov
in
imul
dec
ja
sbb
data16
jge
mov
rclb
dec
add
jp
cmpsb
adc
lods
clc
mov
push
insb
insl
and
mov
push
sbb
sub
arpl
push
ret
mov
mov
jmp
or
mov
movd
pusha
jb
lcall
cld
insl
cs
sub
push
pop
mov
jns
jo
imul
movsl
and
clc
xchg
push
add
sbb
cwtl
stos
xchg
xor
or
repz
xchg
dec
dec
cmp
fcoms
cwtl
push
add
shl
mov
or
sbb
ret
and
mov
loop
mov
ds
xor
out
push
cli
and
cs
imul
xor
adc
sub
sub
int3
xchg
mov
cwtl
fs
das
ficoml
flds
aaa
rolb
inc
add
lfs
add
mov
jne
scas
sub
shl
add
and
popf
sbb
dec
bound
ret
cmp
inc
int
cltd
lea
iret
test
fsts
test
lret
cld
mov
inc
sub
arpl
ret
int3
subb
orl
xchg
mov
js
daa
xlat
mov
inc
dec
flds
xor
arpl
loopne
ret
mov
test
iret
add
rorb
stc
add
cmp
jns
stos
jg
mov
push
insl
mov
dec
popa
sbb
sbb
rorl
das
dec
les
aas
in
insl
loop
dec
dec
pop
imul
out
bound
add
push
aam
or
out
fwait
repnz
ret
test
mov
loope
cltd
stos
jle
in
test
jno
push
mov
xlat
dec
scas
pop
jecxz
push
mov
mov
test
jne
jnp
adc
call
and
push
test
xor
push
aad
dec
and
ja
sbbl
and
xlat
mov
ret
and
jl
inc
mov
int3
pop
push
xchg
xchg
stc
sub
outsb
jl
ljmp
jno
orb
jns
pop
add
sbb
or
pop
shll
dec
testl
cmp
rcr
xchg
mov
or
outsb
dec
push
cmp
inc
stos
pop
call
outsb
mov
out
push
test
mov
shll
cmpsl
xchg
inc
add
fistpl
mov
jno
bound
inc
fsub
push
js
mov
aaa
pop
jbe
cld
inc
push
mov
jmp
loop
push
ss
jo
mov
sti
sub
fsub
push
fisttpl
adc
pushf
mov
add
scas
sbb
push
jno
and
loop
push
sti
jl
fwait
addr16
pop
cmp
adc
pop
xchg
and
je
sub
pop
pop
mov
leave
out
push
lock
mov
inc
in
mov
leave
std
push
xchg
fcomps
adc
pop
xchg
sub
sub
push
test
aad
mov
mov
movsl
testl
mov
addr16
jmp
add
jp
nop
and
jne
pop
shrl
lcall
ret
jnp
ret
jb
push
pop
mov
push
arpl
hlt
ret
pop
adc
daa
and
or
or
push
sub
test
aaa
jg
les
int3
lret
mov
mov
jbe
andl
or
popa
xor
and
dec
and
rorb
jo
mov
jnp
inc
es
pop
pop
mov
or
jbe
stos
das
lret
mov
adc
jecxz
cmp
dec
adc
mov
shrl
mov
and
das
mov
xchg
test
fldl
dec
xlat
test
jae
add
nop
push
dec
inc
repnz
adc
fimull
lcall
pushl
jnp
inc
shl
in
repz
xor
dec
inc
out
cld
mov
xor
fildl
mov
imul
movsb
inc
rep
xor
int
test
ficoms
test
adc
fsts
dec
ja
or
fwait
pop
mov
mov
sub
sbbl
sbb
out
rorl
daa
stos
xchg
mov
mov
stc
push
scas
test
xor
cmp
scas
push
inc
xchg
shl
lds
dec
sbb
outsb
jmp
insb
pop
cld
sti
decb
test
fisttpll
push
mov
cmp
adc
jp
cmpb
enter
je
bound
xor
lods
mov
and
sub
imul
daa
and
push
add
mov
sub
adc
xchg
out
jle
outsl
push
pop
xchg
jg
rol
sub
insb
mov
adc
in
and
mov
lea
movsl
pop
push
rcr
mov
iret
lds
mov
jmp
jl
sub
test
fdivr
bound
add
sub
and
sti
aas
adc
add
in
dec
xchg
and
int3
arpl
mov
pop
jo
aam
cltd
mov
adc
in
mov
popf
mov
sub
push
dec
sahf
loopne
iret
stos
enter
ret
inc
stos
les
out
test
add
xchg
loopne
negl
sub
jp
mov
test
subb
push
push
xchg
sub
jno
shll
in
dec
into
fmuls
mov
inc
xor
cs
mov
arpl
mov
fs
add
lock
test
and
mov
cmp
cmp
adc
out
inc
call
cmp
outsb
add
rcl
pop
xchg
and
cld
mov
cmp
push
sbb
ror
add
nop
xchg
push
cmpsb
xchg
lahf
mov
out
inc
fists
cmpsl
xchg
lods
jnp
mov
cld
pop
mov
pop
xchg
rclb
je
test
roll
or
sub
or
push
inc
pop
pop
stos
lea
sarl
test
jae
lea
sbb
add
rolb
pop
dec
pop
mov
fimuls
imul
cmp
fmuls
std
jbe
and
xor
push
push
nop
fisubs
mov
cmp
icebp
mov
js
enter
dec
fdivs
in
dec
mov
sbb
seto
jbe
hlt
int
jne
leave
lret
mov
and
jl
push
mov
shrb
mov
jle
aad
cmp
xchg
icebp
mov
shll
mov
pop
add
insb
lret
push
jno
std
mov
cmp
pop
jle
mov
fnstcw
nop
jns
es
ret
lcall
add
in
adc
add
pusha
cmpsl
jp
jne
cmc
outsl
pop
add
call
push
cmpb
xor
btr
pcmpeqb
loopne
lret
adc
subl
push
xchg
std
idivl
lods
jge
aas
ss
inc
cmp
out
xchg
lret
movsl
rcrl
sub
loop
movaps
jb
sub
inc
xor
or
add
inc
add
andb
repnz
pushf
lods
mov
pop
adc
cmp
dec
jmp
and
dec
dec
inc
mov
fildll
nop
test
jge
dec
mov
repnz
jbe
mov
mov
pop
inc
mov
add
mov
sub
push
cmpsl
out
stos
loopne
push
mov
aam
daa
repnz
cs
mov
imul
jb
xor
mov
dec
cmc
dec
cltd
loop
fcmove
sahf
add
fwait
jae
loop
imul
icebp
nop
in
aas
pop
nop
ret
aam
adcl
popa
jle
les
mov
sbb
mov
enter
push
inc
in
mov
ds
xchg
jp
dec
push
dec
mov
add
hlt
mov
pop
jp
decb
clc
and
mov
adc
sub
jbe
ficompl
dec
testl
leave
js
stc
sahf
in
les
out
pop
jp
cld
aaa
mov
sbb
les
out
jge
int3
xchg
mov
sbb
adc
test
dec
imul
sbb
cs
outsb
repnz
clc
jbe
jne
adc
lods
inc
pushf
fs
jb
pop
add
dec
and
lock
mov
cli
and
mov
cmp
xlat
insb
test
xor
add
adc
fsubl
stc
out
pop
fidivs
pop
sub
leave
fcmovbe
xchg
popa
scas
mov
and
sti
xchg
popa
push
inc
xchg
mov
mov
xorl
mov
icebp
testb
jb
out
or
sub
jmp
lods
leave
shrb
imul
hlt
dec
xchg
mov
mov
jne
cld
sbb
mov
int3
stos
xchg
stos
fcmovnbe
xor
aas
xor
testl
or
jle
pop
loop
sbb
hlt
cld
pusha
repnz
jae
xor
xor
pushf
scas
sbb
xchg
mov
sub
repz
and
inc
mov
or
fsubrl
dec
popl
lods
sbb
aam
addl
xchg
jo
cmpsb
lcall
xlat
out
xchg
dec
into
ret
push
push
push
adc
lods
outsl
and
mov
sub
pusha
inc
loopne
jne
inc
dec
test
test
xchg
inc
pushf
add
into
stc
pop
sub
mov
mull
lods
jecxz
push
shld
adc
ds
loope
mov
lcall
sbb
cmpsb
rcrb
data16
sub
test
dec
enter
fidivs
std
mov
push
int3
sub
mov
lods
or
jbe
add
mov
testl
add
imulb
adc
scas
lcall
mov
shll
ljmp
inc
sti
xchg
nop
hlt
mov
movsb
iret
int3
or
insl
lcall
or
mov
cli
mov
mov
stos
popl
lahf
pop
gs
pop
outsb
xchg
mov
in
mov
sub
pop
fisubrs
bound
mov
stos
sbb
mov
dec
dec
pop
repz
or
mov
in
adc
mov
leave
xor
es
shr
repnz
pop
or
sti
mov
add
movsl
out
jno
xchg
lea
pushf
xor
jle
or
out
dec
xor
jne
das
mov
bound
lea
adc
fildll
jo
cmpb
or
and
ss
mulb
pop
fnstcw
jmp
jg
cmp
aaa
lods
xchg
jle
jb
mov
inc
fsubrl
enter
clc
sbb
js
mov
rcrb
adc
negl
pop
insl
sarl
ret
cmp
inc
adc
jle
jmp
ret
inc
mov
subb
jns
mov
mov
dec
outsb
gs
jp
arpl
push
stos
mov
inc
lret
or
dec
test
cmpsb
lock
pop
sbb
fmul
add
out
cli
inc
or
or
xchg
adcl
cli
aam
gs
clc
push
pop
sahf
push
or
dec
pusha
test
add
xchg
add
inc
push
jmp
push
xchg
pop
rcll
jecxz
push
cmp
dec
push
xchg
les
clc
adcb
xchg
pop
adc
jne
dec
sbb
loopne
jmp
mov
jl
test
lret
ss
aas
arpl
pusha
inc
pop
mov
xchg
mov
jg
jnp
jecxz
jae
sbb
push
dec
mov
js
dec
out
sub
mov
xorb
fxch
xchg
hlt
sub
aad
adc
xlat
inc
xchg
xchg
bnd
negb
ficoms
paddd
insb
adc
jg
cmp
je
xchg
mov
mov
xchg
add
add
xor
push
or
inc
cmp
call
inc
add
in
adc
lahf
adc
add
dec
add
insb
lods
and
or
ficomps
mov
push
sarb
mov
ret
cwtl
push
cmp
les
pop
cmc
cli
mov
dec
cltd
jae
add
or
push
cmp
arpl
test
test
or
mov
pop
outsb
loopne
mov
jecxz
and
or
and
shll
mov
mov
pop
xor
jbe
jecxz
jge
repnz
mov
cmp
scas
inc
call
inc
imul
xchg
ljmp
fidivrl
sub
ror
inc
adc
jg
sub
xchg
jb
sub
jae
inc
and
pmaddwd
or
test
idivl
adc
xchg
fisubrl
pop
and
mov
neg
fs
sbb
mov
jecxz
fiadds
es
xlat
in
lea
sbb
fwait
sahf
sarb
out
inc
xchg
add
mov
scas
jns
or
jecxz
sbb
movsb
sbb
add
cmp
dec
mov
inc
cwtl
push
adc
jae
inc
sbb
or
cmpsl
mov
outsl
ret
mov
cmpsl
mov
pop
fsub
leave
daa
add
mov
sbb
hlt
xlat
ljmp
jno
add
mov
loop
push
jne
enter
jl
je
inc
insl
stos
mov
jmp
pop
cmp
and
cmp
lds
ret
dec
popf
xor
in
add
inc
add
mov
sub
lods
lahf
and
scas
lods
adc
aas
or
pop
push
imul
dec
outsl
jo
pop
data16
mov
xchg
inc
sub
xchg
pop
adc
ja
add
stos
loope
jo
stos
aas
or
call
and
aam
sbb
inc
sub
enter
ds
pusha
lret
loopne
bts
cli
sbb
cmp
rcl
dec
rolb
mov
cmpsb
cmpsl
push
dec
jae
in
add
cmpsb
jecxz
adc
xchg
mov
mov
inc
int
push
sub
aad
mov
faddl
xchg
adc
popf
xchg
sub
andl
out
mov
cmpsl
pop
adc
push
sbb
cmp
stos
mov
adc
shr
iret
loope
in
add
pusha
mov
es
out
mov
dec
test
call
outsl
jp
mov
adc
lret
cmp
xchg
std
je
repnz
inc
dec
jns
lea
pop
and
dec
leave
cmpsl
push
loopne
push
cmp
mov
sub
jle
and
out
lds
mov
xchg
push
rcrl
std
and
addb
fldenv
pop
shrb
les
sub
xchg
push
inc
dec
xchg
pop
pop
or
xchg
jb
sbb
in
cmpl
sub
lea
aaa
gs
pop
sub
pop
repnz
movsl
rol
insb
das
into
push
pop
xor
mwaitx
sbb
and
pop
lret
outsl
add
inc
dec
and
es
aam
add
pop
and
sbb
adc
leave
pop
dec
xchg
jle
ljmp
xchg
jo
inc
mov
fiaddl
movsl
dec
or
outsb
int3
mov
pusha
imul
sbb
fadd
lock
out
pop
jbe
push
or
sub
jg
loopne
cmc
insb
jg
loop
jo
sbb
mov
ret
mov
mov
imul
mov
push
orb
mov
loop
xchg
push
test
xor
push
aaa
mov
rcr
mov
sub
add
js
jae
xchg
stos
sub
inc
test
in
xor
stos
jl
inc
insb
pop
sbb
iret
jl
ret
fsubl
int3
stos
lods
int
fistps
sub
loopne
jns
fdivr
stc
stos
inc
push
xchg
ret
leavew
push
xchg
aam
push
mov
out
push
push
lahf
adc
stc
in
les
fistpl
ss
gs
pop
jge
inc
xor
adc
rcll
out
stc
mov
adc
push
xor
insl
jle
sub
loope
pop
xchg
mov
mov
push
jns
hlt
call
mov
imul
or
loopne
leave
imul
mov
jecxz
test
sbb
pminsw
xchg
mov
mov
outsb
pop
dec
xchg
imul
pop
jge
mov
sub
arpl
pop
jecxz
or
cmp
adc
aam
std
loope
mov
insb
popf
sbb
mov
inc
mov
mov
cmp
pop
arpl
jp
or
mov
out
das
sub
or
cmp
mov
das
sbb
cltd
pusha
clc
repnz
aam
add
jo
push
ja
push
in
or
push
mov
ret
std
lds
mov
sub
jp
scas
sub
scas
sub
or
or
popa
test
push
fs
xor
adc
fstpt
dec
mov
mov
lds
ret
lret
cmp
sbb
jno
sub
push
ljmp
fsubl
push
outsb
sub
enter
jb
lahf
xor
lahf
cmp
cwtl
xor
pop
sbb
sub
push
addl
and
js
clc
sbb
push
cli
pop
jae
fidivrl
pusha
sbb
pusha
lods
pop
pop
imul
daa
xor
push
sbb
rcl
xchg
cmp
and
int3
bound
loopne
push
stc
sbb
mov
iret
es
pop
gs
popf
stos
data16
fimuls
cwtl
xchg
push
cli
xor
fnsave
dec
repz
push
cmp
fisttps
mov
fisubrl
andl
add
movsl
nop
or
sbb
xor
cli
lret
push
add
mov
out
sahf
pop
outsl
insl
pop
lods
mov
mov
scas
mov
jmp
mov
jo
sub
inc
xchg
adc
enter
or
sbb
and
aaa
inc
lods
inc
mov
dec
shll
push
les
lret
into
jmp
mov
push
sub
repz
xchg
sub
jmp
xchg
cmpl
and
push
lcall
lods
sbb
dec
repnz
jecxz
pop
inc
push
lea
sub
shl
pop
mov
lods
sub
mov
pop
xchg
pop
movsl
daa
test
pop
ljmp
mov
or
sub
mov
ljmp
jg
jge
js
stos
or
xlat
xchg
cltd
test
imul
cmp
test
adc
adc
fmuls
push
cmpb
cmp
pop
leave
jmp
jmp
mov
stc
or
inc
add
lods
mov
repnz
test
sbb
enter
mov
mov
js
xchg
lahf
sar
cmp
lret
and
push
adc
adc
jne
into
lret
push
mov
mov
jns
push
jno
pop
leave
adc
out
cmpsb
xchg
xor
mov
cmp
xchg
ds
adc
pop
mov
and
sub
xor
rcll
js
hlt
pop
scas
sbbb
pop
or
push
mov
fisttpl
sbb
and
insl
sti
sahf
inc
push
sar
xchg
jns
mov
pushf
popf
add
add
mov
pushf
hlt
movsl
rorl
ds
xchg
jp
push
cmp
out
jle
add
mov
popa
add
out
dec
sbb
push
bnd
fsubr
mov
js
fwait
sti
push
pop
cld
rorl
adc
add
xlat
fs
dec
xchg
mov
pop
xchg
dec
and
movsl
xchg
adc
xor
mov
push
adc
dec
mov
xor
movsl
dec
jo
sbb
into
sbb
lods
imul
ja
push
xor
jmp
lahf
les
and
cmp
lds
adc
xor
push
mov
test
or
shll
mov
cmp
cmpsb
divl
enter
loopne
jge
enter
mov
push
popf
cmc
inc
cmc
mov
xor
sbb
jge
mov
jge
test
sbb
sbb
add
push
outsl
ljmp
int
cmp
mov
daa
fldl
inc
stos
jno
lret
test
adc
inc
imul
add
loop
sub
xchg
repz
mov
cmpl
ret
ret
mov
imul
push
or
sub
cmpsb
iret
mov
hlt
imul
adc
cmpsb
cwtl
fcompl
push
pop
cmc
cwtl
add
inc
data16
and
fistl
ds
pop
xlat
sub
cs
sub
fidivrl
push
and
push
dec
insl
rclb
xlat
xchg
aad
aad
pop
data16
in
mov
add
inc
lret
movsb
mov
and
jnp
mov
jecxz
sahf
lret
test
in
mov
dec
fiaddl
js
lds
in
fldcw
in
lock
into
or
xor
clc
mov
jl
push
call
jo
mov
dec
jnp
bound
sub
lcall
pop
adc
in
mov
insb
xor
and
adc
inc
push
sahf
divps
je
mov
idivb
sub
push
fs
in
add
mov
push
cmp
cli
dec
out
add
inc
xor
mov
movsb
mov
and
repnz
sub
xor
lret
into
push
std
xchg
or
mov
xchg
dec
adcb
test
push
mov
imull
mov
add
test
lret
cmpsl
jb
cs
or
imull
xchg
dec
lods
int
std
inc
int
es
jmp
add
int3
adc
inc
xor
out
outsl
pop
and
sbb
pop
aam
xor
mov
cmpsb
outsb
leave
cmp
mov
cli
fcomp
arpl
es
scas
xor
sbb
xchg
jo
cmp
inc
es
jbe
add
pop
cmp
sub
aas
imul
and
ds
out
lahf
dec
cwtl
push
aad
outsb
mov
adc
push
push
movzbl
xchg
mov
xchg
dec
mov
ficoml
push
ja
lret
std
subl
xchg
addr16
jmp
enter
and
xchg
push
or
push
arpl
sbb
sub
inc
xor
mov
in
enter
sti
mov
stc
xchg
inc
rolb
pusha
pop
aad
adc
aas
adc
xchg
pop
mov
lds
adc
mov
or
std
test
mov
and
sub
mov
or
mov
and
out
push
gs
popa
imul
es
inc
or
dec
xchg
xchg
jne
or
add
jmp
out
rcrb
mov
sbb
pop
es
jae
push
xor
sbb
xchg
pop
mov
outsb
dec
and
and
xchg
sub
in
pop
cwtl
sub
and
push
mov
sub
mov
pop
aas
scas
and
stos
dec
ss
rolb
outsb
jno
sub
jle
ljmp
adc
ljmp
mov
sub
popa
sub
pop
inc
aam
cmpsb
or
push
push
movsl
fs
andl
dec
and
dec
enter
sbb
pcmpgtd
insb
hlt
shll
sbb
or
cmpsb
jecxz
je
test
xor
mov
push
xor
jb
repz
ja
mov
imul
movsb
inc
fldcw
add
test
out
push
imulb
jmp
mov
aas
sub
fs
dec
jne
int3
test
or
loopne
pop
or
sub
je
inc
bound
jle
xchg
ds
idivb
lret
imul
test
add
data16
repnz
mov
ljmp
and
push
rorl
test
add
mov
pop
adc
and
imul
sbb
xchg
mov
fistpl
shlb
loopne
mov
repz
mov
icebp
dec
jmp
cmpsb
cmp
in
mov
imul
jmp
icebp
xchg
or
xor
and
adc
pop
inc
ljmp
cmp
xlat
sub
loope
mov
xchg
shl
push
jbe
mov
shrb
inc
loope
adc
xor
sub
mov
rcrl
icebp
dec
add
cwtl
das
inc
outsl
adc
fdiv
cmp
lods
frstor
dec
mov
mov
stos
push
adc
test
loopw
push
jmp
push
xchg
lds
sub
ja
inc
cmp
mov
addr16
cmp
push
and
arpl
das
jmp
mov
mov
repz
rolb
dec
xchg
inc
pop
lods
xchg
xor
xor
sub
xchg
sbb
xor
popf
scas
mov
loop
xor
lcall
fnsave
cmp
sub
lea
loopne
std
jp
jbe
mov
push
push
mov
insb
cmc
mov
inc
jecxz
inc
xor
icebp
sbb
ret
and
adc
pusha
pop
fwait
rol
aas
mov
movsb
scas
push
xor
mov
test
dec
sub
andb
andb
dec
xchg
js
jecxz
jmp
cld
arpl
adc
mov
jb
and
aam
into
cmp
test
add
xchg
add
jmp
inc
lods
jno
push
rcl
xchg
scas
shl
lds
out
orl
xchg
xor
xor
add
pusha
pop
sarb
xchg
fwait
and
or
jne
hlt
rdpmc
mov
inc
cmp
nop
xchg
setns
mov
fcoml
mov
sbb
pop
inc
out
xchg
outsb
fisttps
xchg
and
cs
movsb
jl
mov
fdivrl
inc
imul
jnp
jmp
xor
sub
xor
push
push
jp
xor
scas
or
mov
sbb
outsl
rol
popf
rcrl
xchg
notl
nop
das
das
push
es
lock
testl
pop
cmp
xor
data16
das
and
pusha
outsb
sub
mov
jp
call
cmp
adc
pop
or
adc
cld
sbb
cmp
mov
or
shl
jp
or
inc
cmpsb
mov
adc
sti
sub
shrb
pop
xor
sbb
dec
xor
inc
aaa
pop
fucom
push
inc
cmpsl
xor
pop
jmp
imul
xlat
xlat
and
pop
and
addl
xchg
sbb
sbb
mov
pop
cmp
dec
stos
pop
sarl
fs
sti
imul
mov
sub
imul
shlb
add
loop
adc
or
aaa
incb
icebp
fnsave
mov
ret
mov
xchg
pop
pop
push
into
push
lea
sbb
inc
aaa
ss
pop
cmp
fwait
or
stos
and
sub
in
shll
or
mov
cmp
iret
mov
js
rcll
cmp
cmp
xchg
mov
js
fists
dec
loope
cmp
js
repnz
pusha
rorb
sbb
int
or
jmp
lds
clc
cmp
flds
jl
std
push
jno
push
adc
sbb
stos
mov
xchg
push
jae
inc
outsl
pop
test
aaa
into
mov
sbb
inc
mov
out
enter
lods
and
sti
adc
iret
dec
xchg
icebp
jne
in
nop
cmp
pushf
or
push
stos
sub
adc
jp
into
dec
mov
ret
push
je
fidivs
lret
push
ret
insb
mov
jg
lret
jl
movsb
add
aaa
je
adc
sub
jle
mov
cmp
insl
adc
cld
int3
fdivs
inc
inc
cmpsb
jge
xchg
push
pop
ss
clc
push
or
pusha
jle
or
dec
addb
cs
mov
dec
jle
and
mov
xchg
ret
and
in
mov
in
push
sub
hlt
jmp
add
xor
popf
rorb
pop
ljmp
mov
lods
fimull
repnz
xor
jbe
repz
vcomisd
xor
xchg
imul
fnstcw
insb
inc
push
mov
mov
sahf
xchg
cltd
mov
mov
jg
adc
scas
cli
jg
in
push
xor
aad
cwtl
mov
mov
mov
push
add
mov
data16
adc
in
jp
jnp
cli
into
rcrl
push
mov
gs
xchg
clc
xchg
adc
sahf
add
pop
sub
sub
mov
and
sbb
sub
jnp
push
stos
sbb
lcall
iret
push
in
sbb
jmp
popa
daa
fs
shll
ljmp
aas
ret
sbb
and
jnp
adc
test
add
imul
pop
fdivs
sbb
xor
cmp
imul
and
or
dec
mov
dec
shrb
cmpsb
jmp
xchg
repz
pop
clc
inc
ja
xchg
sbb
fisttpl
insb
push
sbb
pop
dec
mov
ret
xor
push
in
sarb
aam
dec
sub
pop
mov
je
mov
xchg
call
push
cmc
daa
xchg
out
and
cwtl
ret
dec
out
pop
xchg
movsl
loop
cmp
pusha
jne
mov
mov
mov
pop
adc
mov
sbb
jns
out
mov
test
push
pop
sbb
dec
shll
sub
lret
inc
ds
add
sub
jne
adc
mov
jne
dec
aam
cld
sub
sub
jecxz
out
xchg
jo
sub
bound
jge
jo
push
shlb
xchg
mov
pop
cmc
mov
xor
mov
out
rcrb
adc
jb
shll
mov
scas
add
outsb
xor
inc
xor
mov
xchg
push
mov
fwait
imul
std
fisubs
mov
mov
daa
pop
jae
add
dec
daa
in
jns
ret
pop
js
jnp
popfw
stc
pop
repnz
cli
add
insb
and
jne
ror
pop
outsb
pop
js
mov
stos
or
add
fmuls
jno
xor
cmp
cwtl
xor
jae
inc
or
dec
cmp
adc
call
or
adc
je
pop
mov
out
xor
inc
mov
stos
sbb
movzwl
arpl
shll
or
xchg
mov
pop
ret
loop
sbb
fs
mov
push
cmpsl
pop
add
jl
jge
jo
inc
and
dec
sub
mov
xchg
adc
popf
mov
mov
or
add
mov
sub
or
sahf
pop
xchg
std
push
and
jb
adcb
xchg
sti
pop
popf
aam
add
mov
fldt
decb
ljmp
sbb
call
rcll
jle
pop
push
in
gs
divw
mov
push
mov
jge
pop
loope
mov
push
mov
lds
add
push
daa
stos
stos
inc
xchg
jge
lcall
pop
jo
jb
ljmp
mov
bound
ss
add
lock
test
pushf
xchg
arpl
out
mov
jbe
incl
inc
aad
into
adc
aam
pop
sub
cwtl
dec
loopne
pop
or
mov
inc
stos
push
sbb
and
mov
dec
or
add
sbb
popa
fsub
fsubl
dec
xor
jmp
popf
adc
adc
imul
insl
adc
daa
rclb
ficoml
test
sub
push
xchg
movsl
in
push
movsb
inc
sbb
and
mov
mov
or
je
and
addb
orl
jnp
push
in
daa
push
and
fisttps
cmp
test
enter
mov
test
repnz
jmp
xchg
pop
dec
mov
je
and
mov
dec
push
dec
sbb
push
mov
mov
lcall
icebp
sub
jns
popf
arpl
cmp
pop
adc
dec
stos
cmp
lcall
dec
pop
cmp
in
mov
or
lods
push
ja
orb
mov
fadd
nop
add
clc
jb
sbb
cmp
add
push
jle
mov
shlb
dec
addb
mov
shlb
sbb
cld
push
movsb
bound
cmp
out
dec
shrb
xchg
lods
pop
inc
out
xorb
mov
mov
scas
jo
xor
or
aaa
ret
fwait
cmp
fidivrs
pop
cmpsl
and
fs
pusha
movsb
dec
dec
loope
and
adc
jb
scas
jns
pop
inc
pop
clc
es
adc
cmp
mov
xor
mov
fsts
out
xchg
clc
mov
mov
aaa
mov
jno
int
push
fadds
mov
flds
xchg
ja
sbb
bound
sbb
pop
jg
xor
test
adc
dec
adc
repnz
mov
adc
jbe
mov
scas
loope
div
push
add
cwtl
ja
push
pop
cmpsb
shll
hlt
cs
sbb
push
mov
push
mov
xor
and
enter
divb
bswap
fnstcw
cltd
leave
xchg
repz
mov
lods
jo
js
loop
pop
or
sti
cmpsb
ljmp
decb
jg
or
push
cmp
outsb
jle
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
adc
adc
mov
call
mov
clc
adc
fcoml
mov
jmp
adc
add
mov
push
xchg
ficompl
pop
mov
cltd
shll
scas
add
adcl
movsb
push
sahf
rolb
addr16
mov
imul
or
jns
je
sbb
jecxz
dec
add
xchg
mov
xchg
in
cmc
jg
fdivl
sbbb
cmp
aas
cs
pop
lds
sbb
mov
jmp
cmpsb
fmuls
mov
clc
dec
fwait
xor
cmc
shlb
sbb
inc
and
jmp
add
call
jnp
cs
jne
or
rcrb
mov
mov
dec
xchg
adc
pop
jle
mov
gs
cli
or
subb
cs
push
push
adcb
ret
fdivr
stos
lahf
jge
lret
aad
neg
outsb
or
mov
pop
icebp
fwait
movsb
lcall
inc
rcl
outsl
mov
add
or
inc
push
imul
pop
mov
cmp
decl
les
leave
pop
and
xchg
fsubs
ja
je
mov
repz
add
inc
addl
sbb
xchg
icebp
xlat
dec
and
cmp
and
insb
mov
jbe
rep
sti
clc
in
inc
pop
push
dec
call
inc
arpl
ljmp
jbe
cmp
int
movsb
mov
sti
stos
jnp
mov
push
dec
add
cmp
sarb
pop
mov
adc
mov
inc
ret
xchg
test
add
loop
xchg
daa
cmp
cmp
popa
mov
loope
cmp
imul
jb
sti
insl
scas
mov
mov
jg
xchg
or
repnz
jmp
dec
loope
icebp
roll
adc
cld
dec
or
outsl
pop
mov
cmp
data16
pop
mov
inc
imul
jle
sbb
push
and
ja
imul
pop
pop
cmpsb
sub
jp
ljmp
cmp
jge
lods
inc
cmp
lods
xor
iret
aad
adc
and
push
inc
xchg
mov
add
sti
icebp
aam
fcomip
xchg
jmp
cli
pop
lahf
or
mov
push
fidivl
xchg
gs
jae
iret
insl
movsb
mov
cwtl
bound
fxch
cmp
mov
cmp
pop
inc
aas
aaa
mov
push
xchg
mov
lods
mov
rolb
lret
dec
jp
insl
in
fidivrs
lcall
adc
cmp
push
lods
andl
pop
jae
imul
stos
sahf
adc
mov
pop
adc
mov
mov
insl
adcl
sarl
pop
xchg
xor
fwait
mov
push
jbe
sub
mov
outsb
adc
or
push
movsb
mov
push
adc
and
dec
rcrb
stos
mov
in
xor
pop
add
xchg
dec
insb
aas
lds
jnp
clc
insl
sbb
sub
xor
inc
sbb
cs
inc
cmpsl
xchg
push
push
add
mov
cmp
je
or
lock
dec
ja
jb
inc
pop
movsl
mov
fdivrl
mov
cmc
or
bound
arpl
fisubrs
inc
inc
sbb
popa
add
xchg
xchg
insb
stos
mov
inc
sahf
push
and
xlat
movsb
inc
cltd
in
inc
mov
xchg
daa
cmc
cmpsl
movups
rcrl
jge
clc
cmc
jb
mov
hlt
sbb
jne
push
pusha
imul
ficoml
adc
cmpsb
aam
shl
insl
adc
gs
push
call
jg
jp
mov
arpl
cmpsb
sarl
pop
xchg
push
stos
mov
sbb
lods
icebp
sahf
xchg
xchg
xchg
ret
mov
jge
push
fs
outsb
or
stos
fmuls
sbb
aas
pop
faddl
stos
das
mov
rorl
fdivrl
adc
mov
push
aas
mov
jmp
inc
sbb
jbe
sahf
fs
lds
fdiv
mov
inc
bound
lcall
aad
sub
ficoms
bound
inc
push
fldt
xchg
jl
les
cwtl
dec
outsl
push
jnp
or
inc
shlb
jg
and
adc
jmp
push
mov
clc
jp
jb
repz
mov
xchg
push
and
cmpsl
sarb
xchg
jo
fwait
jb
fcomi
push
bound
outsl
call
jbe
pop
dec
wbinvd
push
cltd
sbb
call
push
bound
xchg
inc
fidivs
sahf
shrl
stos
iret
cmp
mov
aas
mov
push
imul
cmp
stc
jbe
loop
mov
mov
popa
test
push
ja
cmp
dec
add
push
fucom
jne
xchg
sbb
iret
push
xor
jb
or
ficompl
rcll
stos
push
push
lods
dec
loop
sub
push
jmp
in
test
or
in
es
push
jbe
and
cltd
aas
jg
sub
out
inc
cmp
inc
add
xchg
les
in
jecxz
or
adc
insb
jns
addr16
int3
ja
imul
jg
pusha
push
leave
xchg
ret
push
sti
sbb
and
mov
das
jmp
pop
leave
mov
imul
icebp
data16
inc
lock
cs
fcmovnu
push
negb
cmpb
std
lret
sub
xor
xor
add
ret
popa
std
imul
mov
pop
into
repnz
cmpsl
mov
add
fnstsw
inc
push
jae
mov
cmpl
out
mov
mov
adc
mov
fstl
sub
adc
shll
and
xor
cmp
mov
jae
adc
and
push
mov
sub
incl
sbb
popa
addr16
fdivrl
loope
scas
push
jbe
add
push
mov
push
ds
inc
mov
fcom
sbb
push
jne
xor
nop
adc
mov
or
sbb
loop
lret
das
mov
xor
popf
sub
xchg
outsb
out
aas
adc
push
mov
rorb
pop
fsubrl
test
or
add
data16
jle
jg
scas
mov
iret
outsl
push
xchg
push
sti
xchg
jb
out
push
cmc
scas
mov
mov
add
xchg
jp
movsl
imul
and
pop
xchg
lods
pop
adc
pusha
popf
xchg
xor
loope
dec
jl
sbb
out
daa
loopne
lock
dec
cmp
out
cmp
in
cli
fs
out
and
ret
adc
inc
mov
adc
ficomps
push
mov
mov
leave
jo
out
or
out
pop
shrl
test
imul
in
inc
aam
subb
adc
dec
mov
sub
test
xchg
jae
xchg
loop
sub
xorb
adc
and
adc
sbb
test
and
in
or
pop
ret
in
jl
adc
fidivrl
and
adc
jecxz
or
outsb
add
dec
sahf
mov
push
test
xor
outsb
mov
mov
mov
jb
loop
sub
inc
add
push
enter
in
add
xor
es
sbb
clc
shlb
xor
mov
mov
loop
movsl
mov
jl
imul
inc
xor
fidivrs
jne
xchg
arpl
adc
sbb
sbb
shll
mov
sarb
xor
addr16
insl
sub
rcl
jmp
sbb
mov
sbb
jg
cmp
pop
add
leave
andl
add
lods
lret
pop
sub
push
jbe
shlb
sub
sar
xlat
aad
mov
pop
xor
jg
and
fisttpll
push
xchg
or
inc
sub
test
or
cmc
outsb
pop
xor
test
cmp
pusha
popf
int
mov
arpl
and
dec
jecxz
pop
fcmove
add
cld
dec
orb
cmp
xlat
movsl
xchg
shrb
rclb
nop
arpl
cmp
lock
pusha
pop
pop
mov
and
loop
aas
xchg
fsubl
pop
cmpb
lcall
insl
sub
and
mov
mov
out
push
ds
fldt
cmp
sbb
mov
iret
dec
dec
jecxz
and
inc
in
xchg
popa
lea
fisttpll
push
sub
loope
leave
inc
ret
std
scas
pop
movaps
sbb
data16
lods
pop
je
sti
into
sub
repnz
mov
and
mov
cmp
mov
inc
sbb
pop
aaa
sub
cmp
push
inc
outsb
jo
xor
dec
adcl
pop
jmp
ret
rolb
fldt
pop
push
cmp
and
mov
fwait
addl
pop
xchg
xchg
cmpsb
jae
enter
jnp
push
xchg
subl
pop
lods
ror
js
or
sub
sti
sbb
aaa
pop
pop
popf
aad
nop
xor
fs
sub
lret
dec
aas
test
inc
xchg
mov
fiaddl
jmp
lds
lods
mov
and
or
adc
mov
sub
mov
mov
cmpsb
out
pop
cs
cmc
test
jbe
outsl
inc
pop
cmp
enter
into
loope
jl
mov
call
inc
cmp
mov
xlat
fildll
adc
pop
jmp
cmp
adc
fsubrs
negl
jno
lcall
in
lds
lcall
popl
cmc
xor
xchg
addl
sbb
push
and
xor
cmpsl
aaa
jge
insl
mov
movsb
xlat
or
adc
add
test
orl
sbb
mov
adc
mov
movsl
mov
aaa
lret
cmp
test
outsb
sub
jp
ds
push
inc
push
sti
push
imul
push
cmp
sub
and
mov
ret
or
out
pop
sub
xchg
pop
cwtl
push
sbb
lods
ljmp
ds
scas
adc
popf
jbe
inc
sar
cmp
xlat
mov
nop
ss
popf
loope
add
mov
sbb
jb
push
mov
or
orb
ja
incl
aam
lcall
xor
scas
mov
jp
scas
jns
outsb
popf
add
pop
and
mov
mov
sbb
std
xchg
cltd
leave
cmpsl
int
mov
loope
pop
or
and
jge
out
add
and
adc
push
sbb
ret
inc
les
fimuls
add
fsts
aas
pop
inc
ret
jbe
fwait
call
xchg
add
cmpsl
cs
ljmp
mov
scas
add
out
xchg
pop
jle
xchg
mov
mov
and
testl
inc
pop
stos
jp
lds
pusha
xlat
arpl
lahf
and
sbb
push
mov
mov
xor
mov
mov
mov
int
mov
test
cmp
rclb
or
stc
jnp
or
enter
int
xchg
scas
or
test
inc
adc
hlt
sbb
rcl
test
addr16
outsl
fwait
out
xchg
dec
and
and
hlt
aad
ret
mulb
push
push
adc
arpl
int3
fisubl
add
mov
sub
push
cmpsb
push
xor
jb
sti
lret
popa
fnstenv
add
sub
test
add
xchg
stos
dec
cmp
aas
sbb
mov
mov
mov
xor
das
std
pop
fiadds
pop
call
int3
ret
out
call
dec
jmp
aas
sbb
cmovl
mov
cmp
cld
push
cld
test
add
orl
push
es
jns
adc
lret
fwait
cli
mov
push
test
or
inc
std
mov
xchg
sub
inc
pop
inc
and
ret
pop
cmpsl
in
sub
jne
loop
xor
dec
xchg
mov
pop
dec
push
movsl
lret
and
xchg
xor
test
cmp
jmp
jbe
xor
inc
lret
inc
xor
cmp
shl
in
jne
adc
pushf
dec
hlt
mov
sahf
dec
faddl
inc
mov
in
repz
sahf
adc
sbb
push
push
xor
mov
pop
arpl
mov
jmp
push
dec
std
and
mov
xor
add
mov
repz
mov
into
out
lock
inc
or
pusha
or
cltd
je
xor
icebp
shrb
cmpsl
aad
addl
shl
or
pusha
sub
je
and
mov
cmp
inc
pop
popa
fmul
mov
mov
test
add
jns
stos
mov
outsb
dec
or
hlt
sbb
push
and
stc
fpatan
imul
jbe
dec
sbb
xchg
test
xchg
inc
inc
ja
cld
inc
sub
add
cmpsl
push
xor
ja
ret
test
xchg
repnz
cld
or
sub
daa
and
cltd
push
xor
xor
or
test
cmp
lock
insb
das
xchg
xchg
add
shrl
je
jmp
add
add
insb
ds
aas
jg
stos
into
mov
cwtl
xchg
sti
sahf
dec
jp
cmp
outsb
add
adc
mov
ss
loop
out
int
adc
mov
jae
jb
sbbl
jl
push
sub
dec
mov
pop
pusha
lods
mov
jp
xorl
mov
icebp
frstor
mov
mov
icebp
or
int
loop
and
outsb
loopne
inc
push
pop
jle
rcrl
test
call
mov
int
leave
je
sbb
pusha
rsqrtps
sar
push
and
or
jo
pusha
imul
push
cld
add
lret
movsb
dec
sarb
dec
sub
shll
push
cltd
test
jb
in
aam
cld
xchg
adcl
dec
push
pop
pop
sub
lret
bound
xchg
mov
into
fwait
sub
xor
mov
mov
push
mov
dec
icebp
push
push
in
adc
add
jb
out
or
jne
stos
scas
pop
jecxz
sub
xchg
lods
out
xchg
repz
pop
repnz
sub
sub
lahf
push
inc
lcall
xchg
push
pop
sub
xchg
lcall
iret
loope
jecxz
popf
insb
mov
jp
pop
leave
mov
stos
jb
cltd
jp
fidivl
pop
fidivl
lock
xor
xchg
cmp
bound
dec
popf
add
push
lods
lds
add
imul
dec
shlb
in
aad
jne
imul
xchg
adc
js
stc
pusha
push
sub
addr16
neg
xchg
mov
aas
fimull
mov
pop
data16
daa
mov
mov
les
ds
mov
sahf
xlat
fcmovb
mov
scas
and
pushf
dec
mov
xchg
fiadds
sbb
mov
sub
dec
inc
and
mov
out
mov
out
mov
mov
mov
cltd
ret
into
inc
popf
and
cltd
ds
aas
add
mov
xchg
pop
push
sti
push
adc
in
cltd
mov
sarl
sbb
cmpsl
clc
scas
and
xchg
popl
adc
pop
fnstsw
ljmp
mov
ret
mov
mov
cmpsb
rol
push
test
in
sub
pushf
mov
push
test
imul
pop
dec
popf
je
dec
clc
mov
test
or
cmpb
into
imul
jns
movsl
pcmpgtd
mov
xor
shll
or
arpl
loopne
int
pop
aam
stos
lret
enter
dec
push
decb
or
mov
in
sub
jbe
push
mov
mov
pusha
pusha
lret
shlb
xor
js
fildl
xchg
mov
cmc
ror
movsl
mov
sbb
push
mov
sahf
mov
imul
outsb
aas
add
cmpsb
sub
cmp
lret
pop
adc
adc
rorl
js
cmpsb
bound
inc
mov
and
push
mov
adc
and
sar
test
fisttpl
nop
push
pop
test
jp
push
mov
jnp
pop
xor
lcall
leave
int
mov
loope
pop
jns
dec
pop
push
test
mov
scas
hlt
xchg
jns
ljmp
and
jmp
popa
mov
int
cmc
in
mov
and
je
subb
les
jecxz
mov
cwtl
cli
fdivr
insb
sbb
mov
lock
iret
enter
repnz
xor
popf
movsl
sbb
ljmp
mov
mov
outsl
mov
mov
mov
aam
dec
scas
sti
xor
mov
nop
mov
je
fstpt
insl
push
xchg
xor
insl
adc
sti
pop
and
add
inc
mov
mov
add
pusha
xchg
sbb
jg
stc
pop
inc
mov
jp
fimull
loope
xlat
faddl
ljmp
int3
loopne
jmp
sub
mov
sub
lods
mov
stos
push
mov
insl
jecxz
jbe
mov
mov
cltd
mov
std
shl
movsb
arpl
sub
jg
sar
mov
popa
imul
aad
sahf
dec
imul
in
test
pop
inc
lcall
repz
jge
or
and
jnp
push
jbe
cmp
shr
xor
fsub
bound
mov
lods
adc
shl
xorl
fidivs
sbb
mov
shll
cmpsb
xchg
daa
sbb
push
fistps
or
add
shlb
mov
aaa
sub
cmp
ljmp
fdiv
push
or
push
adc
mov
insb
jg
xor
jg
pop
test
dec
repnz
bound
stos
jns
jnp
xchg
mov
nop
gs
mov
push
icebp
iret
ret
ret
jae
pop
outsb
lds
fistpll
and
pushf
xor
aas
clc
lods
mov
push
cld
add
rorl
adc
xchg
sbbl
jae
xor
xchg
lahf
ljmp
xor
mov
and
lcall
stos
in
mov
mov
mov
mov
call
xchg
imul
xchg
jmp
jae
inc
mov
xor
es
in
mov
dec
sbb
sarl
daa
roll
push
or
pop
push
ljmp
push
or
arpl
xchg
outsl
shlb
or
test
rep
mov
jle
or
les
rcrl
xlat
sbb
xchg
mul
xor
pop
pop
shll
xor
mov
popf
add
lcall
dec
jge
out
xor
sbb
mov
lcall
rclb
mull
and
in
jmp
jo
mov
lret
inc
cld
push
sub
jae
pop
xchg
pushf
jge
ss
leave
dec
mov
not
sarl
sbb
fstpl
cli
jae
repz
jne
mov
and
push
pop
pop
cmp
loop
data16
fwait
lods
jecxz
shl
scas
cmp
pop
stos
lock
cmpsl
xchg
repnz
inc
xchg
sbb
shll
int
stos
jp
in
out
movsl
loopne
dec
mov
push
adc
fldcw
ret
aas
jl
xchg
loop
cmp
pop
fsubp
lcall
dec
mov
aam
ljmp
lret
lock
jecxz
into
cs
dec
pop
add
add
mov
jecxz
movsl
pusha
adc
adc
scas
testb
loop
cmp
ficomps
push
lds
sub
and
popf
addb
ljmp
pop
mov
push
hlt
adc
test
js
sti
inc
sbb
fistpll
add
add
pop
or
xchg
push
mov
cs
mov
das
hlt
xchg
hlt
inc
push
pop
or
lahf
fisubl
ljmp
dec
out
setp
in
imul
adc
push
jnp
push
adc
fwait
das
lds
fsubrs
adc
and
je
leave
mov
inc
dec
pop
jle
sbb
cmp
dec
in
outsl
lret
inc
sar
lods
adc
xchg
and
inc
dec
cmp
push
jo
cmpsl
lods
push
aam
jo
fwait
xchg
mov
dec
sub
xchg
cmp
jle
xchg
repnz
dec
imull
or
sbb
xor
enter
fsts
testb
loopne
gs
push
xor
xchg
add
and
loope
loop
popl
mov
imul
and
xchg
aad
xchg
vmovsldup
sub
jbe
mov
fcmovbe
fsubrs
in
test
xchg
cmp
and
gs
stos
add
pop
cmpsb
pop
push
repz
dec
movsl
sbb
hlt
push
xor
push
jne
loopne
push
jl
pop
stos
fimull
addb
lret
dec
sub
mov
jns
outsl
aaa
push
adc
and
dec
out
push
scas
cltd
and
adcl
inc
in
scas
aas
xor
movsb
stos
dec
mov
cmc
cmp
enter
insb
aam
loop
xchg
cld
js
mov
dec
pop
jp
fnstsw
adc
mov
aaa
push
and
stos
inc
test
mov
cmp
orb
mov
rcr
xor
push
mov
cmp
into
or
mov
dec
call
jne
sarl
pop
dec
and
inc
pop
pop
xchg
jne
add
dec
mov
das
out
adc
pushf
jle
adc
adc
stos
stos
sbbb
lahf
sbb
imul
jno
int
stc
les
movsb
lahf
decb
push
jecxz
dec
sbb
and
jle
shll
sbb
sbb
into
loopne
out
fs
ret
sub
enter
fs
fists
jl
pop
dec
outsb
dec
sbb
jno
aaa
mov
fs
andb
dec
mov
das
cmpsl
lahf
push
popa
pushf
and
in
enter
leave
sbb
movsb
lods
push
in
lds
mov
int3
sbb
push
test
xlat
adc
ljmp
push
cmp
movsb
inc
mov
stc
jp
or
mov
fisubrl
fldt
mov
sbb
push
les
jae
pop
dec
push
inc
lds
insb
cmp
adc
pop
xchg
ret
test
jl
in
jmp
xchg
leave
inc
add
xor
mov
sahf
mov
xchg
push
mov
cld
lods
out
into
xchg
std
mov
mov
sbb
sbb
scas
imull
inc
or
loope
mov
pop
push
push
int
lcall
add
dec
or
push
push
cmp
xor
jns
add
xor
pop
xchg
push
mov
das
mov
clc
cwtl
jbe
add
sahf
shrl
adc
mov
iret
in
fldenv
inc
xor
sbb
rcll
lods
test
test
xchg
imul
cmc
mov
push
mov
out
out
fisubs
in
mov
push
fidivrs
add
and
xor
sti
dec
icebp
cmp
roll
and
mov
pop
pop
mov
mov
jae
mov
shll
test
sarb
out
insl
insb
insb
cmp
shrb
cld
lock
mov
imul
inc
and
push
mov
in
test
popa
int3
fsubr
push
leave
fstpt
mov
pop
loop
jns
cmp
dec
lret
cwtl
icebp
push
jns
xlat
push
out
iret
notl
add
jo
sarl
xchg
sbb
hlt
pop
imul
cmp
dec
ror
jge
das
mov
jmp
xor
lea
lcall
fisubs
mov
adc
dec
lcall
jmp
call
xchg
insb
enter
pop
sbb
iret
fidivrs
inc
push
mov
gs
daa
jg
jp
push
xlat
sub
std
gs
pop
inc
dec
xchg
push
lret
mov
mov
push
retw
mov
in
dec
fwait
jne
sti
mov
jb
mov
call
addr16
sub
jb
mov
mov
push
push
loopne
inc
mov
imul
sti
pop
loop
outsl
out
mov
sbb
shll
pop
sbb
jecxz
rclb
insb
es
push
fcomp
push
addr16
std
les
test
xor
adc
pushl
cmc
int3
cmp
fiaddl
fisttpl
jmp
push
js
push
sbb
pop
push
or
or
outsb
inc
adc
lahf
cmp
imulb
inc
pushf
push
ja
cwtl
mov
js
fiaddl
jo
scas
adc
cli
xchg
aam
in
pop
pop
cmp
lea
insb
aaa
push
iret
outsb
pop
ss
data16
jnp
sbb
stos
xor
pop
push
lods
add
inc
jmp
and
add
imul
aaa
inc
fnstsw
push
xor
mov
jmp
mov
xchg
mov
movsb
call
jbe
ret
or
cmpsl
bound
jg
bnd
add
test
pop
sbb
cmp
jge
ss
lcall
mov
xchg
push
pop
shl
mov
daa
cltd
or
decl
iret
ja
sbb
out
push
btc
mov
add
loopne
cmc
cmp
subb
xchg
int3
jno
bound
jg
and
jmp
push
lods
cmp
xor
les
mov
cmovle
and
mov
jle
lcall
inc
xor
out
lret
fdiv
dec
mov
pop
adc
lock
movsl
mov
jns
jmp
mov
push
mov
inc
stos
sbb
or
jp
cmp
js
jae
stos
mov
mov
sbbl
push
lret
bound
and
sub
lret
lods
cltd
les
loopne
faddl
lcall
jbe
jp
pop
rcll
cmp
pushf
dec
pop
emms
xchg
dec
cli
shl
pop
jp
inc
ja
jb
cmpsb
pop
in
arpl
arpl
mov
jge
lods
adc
outsl
xlat
mov
or
dec
jg
fwait
and
mov
ja
mov
xlat
mov
inc
adc
cli
sub
negb
rclb
dec
dec
sti
out
inc
jae
add
aas
mov
xor
mov
imul
stos
aad
jbe
add
loop
loop
fadds
pop
adc
add
inc
pop
in
out
subb
pop
push
test
pop
mov
cmc
pop
push
push
clc
pushf
sub
out
out
mov
push
and
aas
movb
or
enter
xor
mov
lahf
mov
idiv
xor
data16
cwtl
mov
lcall
test
mov
mov
mov
jmp
mov
jmp
add
mov
or
cmp
clc
jg
jmp
test
shlb
push
rclb
pop
mov
sbb
in
sub
pop
out
adc
jmp
cmc
mov
adc
lcall
mov
rorl
mov
push
cmp
adc
jg
imul
and
mov
dec
scas
mov
adcb
inc
lock
sub
sub
std
mov
nop
push
xor
je
loopne
sub
jb
or
xchg
dec
pop
in
add
loopne
mov
pushf
fwait
ss
mov
in
insb
out
or
scas
addr16
mov
inc
adc
inc
shrb
out
lret
jmp
pop
and
bound
jbe
lock
mov
and
shll
test
sbb
sub
fistpll
mov
sbb
outsb
or
iret
cmp
and
add
and
sub
fs
jb
inc
outsl
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
